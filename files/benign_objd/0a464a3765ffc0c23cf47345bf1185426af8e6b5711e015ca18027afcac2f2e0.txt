
0a464a3765ffc0c23cf47345bf1185426af8e6b5711e015ca18027afcac2f2e0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	call   0x140008070
   140001009:	lea    rcx,[rip+0x15af0]        # 0x140016b00
   140001010:	add    rsp,0x28
   140001014:	jmp    0x14001457c
   140001019:	int3   
   14000101a:	int3   
   14000101b:	int3   
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rax,[rip+0x2a6f9]        # 0x14002b720
   140001027:	mov    QWORD PTR [rip+0x4db6a],rax        # 0x14004eb98
   14000102e:	lea    rax,[rip+0x2a59b]        # 0x14002b5d0
   140001035:	mov    QWORD PTR [rip+0x4db54],rax        # 0x14004eb90
   14000103c:	lea    rax,[rip+0x2c73d]        # 0x14002d780
   140001043:	mov    QWORD PTR [rip+0x4db3e],rax        # 0x14004eb88
   14000104a:	ret    
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	sub    rsp,0x28
   140001054:	xor    edx,edx
   140001056:	lea    rcx,[rip+0x4df73]        # 0x14004efd0
   14000105d:	mov    r8d,0xa0
   140001063:	call   0x140014694
   140001068:	lea    rcx,[rip+0x15aa1]        # 0x140016b10
   14000106f:	add    rsp,0x28
   140001073:	jmp    0x14001457c
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	sub    rsp,0x28
   140001084:	call   0x14000d900
   140001089:	lea    rcx,[rip+0x15ab0]        # 0x140016b40
   140001090:	add    rsp,0x28
   140001094:	jmp    0x14001457c
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	sub    rsp,0x28
   1400010a4:	lea    rcx,[rip+0x4db95]        # 0x14004ec40
   1400010ab:	call   0x14000da98
   1400010b0:	lea    rax,[rip+0x3dee1]        # 0x14003ef98
   1400010b7:	lea    rcx,[rip+0x15aa2]        # 0x140016b60
   1400010be:	mov    QWORD PTR [rip+0x4db7b],rax        # 0x14004ec40
   1400010c5:	add    rsp,0x28
   1400010c9:	jmp    0x14001457c
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	sub    rsp,0x28
   1400010d4:	lea    rcx,[rip+0x4df95]        # 0x14004f070
   1400010db:	call   0x14000db2c
   1400010e0:	lea    rcx,[rip+0x15a89]        # 0x140016b70
   1400010e7:	add    rsp,0x28
   1400010eb:	jmp    0x14001457c
   1400010f0:	mov    rax,QWORD PTR [rip+0x4d381]        # 0x14004e478
   1400010f7:	mov    QWORD PTR [rip+0x4dc3a],rax        # 0x14004ed38
   1400010fe:	ret    
   1400010ff:	int3   
   140001100:	sub    rsp,0x28
   140001104:	lea    rcx,[rip+0x4df8d]        # 0x14004f098
   14000110b:	call   0x14000db2c
   140001110:	lea    rcx,[rip+0x15a69]        # 0x140016b80
   140001117:	add    rsp,0x28
   14000111b:	jmp    0x14001457c
   140001120:	sub    rsp,0x28
   140001124:	lea    rcx,[rip+0x4df95]        # 0x14004f0c0
   14000112b:	call   0x14000db2c
   140001130:	lea    rcx,[rip+0x15a59]        # 0x140016b90
   140001137:	add    rsp,0x28
   14000113b:	jmp    0x14001457c
   140001140:	sub    rsp,0x28
   140001144:	call   0x14000f160
   140001149:	lea    rcx,[rip+0x15a50]        # 0x140016ba0
   140001150:	add    rsp,0x28
   140001154:	jmp    0x14001457c
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	sub    rsp,0x28
   140001164:	call   0x14000be64
   140001169:	lea    rcx,[rip+0x15a40]        # 0x140016bb0
   140001170:	add    rsp,0x28
   140001174:	jmp    0x14001457c
   140001179:	int3   
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	sub    rsp,0x28
   140001184:	call   0x14000bf50
   140001189:	lea    rcx,[rip+0x15a30]        # 0x140016bc0
   140001190:	add    rsp,0x28
   140001194:	jmp    0x14001457c
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	sub    rsp,0x28
   1400011a4:	call   0x14000bc2c
   1400011a9:	lea    rcx,[rip+0x15a20]        # 0x140016bd0
   1400011b0:	add    rsp,0x28
   1400011b4:	jmp    0x14001457c
   1400011b9:	int3   
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	sub    rsp,0x28
   1400011c4:	call   QWORD PTR [rip+0x3bff6]        # 0x14003d1c0
   1400011ca:	lea    rcx,[rip+0x3e437]        # 0x14003f608
   1400011d1:	mov    BYTE PTR [rip+0x4dc28],0x0        # 0x14004ee00
   1400011d8:	mov    QWORD PTR [rip+0x4dc11],rcx        # 0x14004edf0
   1400011df:	lea    rcx,[rip+0x159fa]        # 0x140016be0
   1400011e6:	mov    QWORD PTR [rip+0x4dc0b],rax        # 0x14004edf8
   1400011ed:	add    rsp,0x28
   1400011f1:	jmp    0x14001457c
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	sub    rsp,0x28
   140001204:	call   0x140015790
   140001209:	lea    rcx,[rip+0x159e0]        # 0x140016bf0
   140001210:	add    rsp,0x28
   140001214:	jmp    0x14001457c
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	sub    rsp,0x28
   140001224:	call   0x140004bec
   140001229:	lea    rcx,[rip+0x159d0]        # 0x140016c00
   140001230:	add    rsp,0x28
   140001234:	jmp    0x14001457c
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	sub    rsp,0x28
   140001244:	call   0x140006cb0
   140001249:	lea    rcx,[rip+0x159c0]        # 0x140016c10
   140001250:	add    rsp,0x28
   140001254:	jmp    0x14001457c
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	int3   
   140001261:	int3   
   140001262:	int3   
   140001263:	int3   
   140001264:	rex push rbx
   140001266:	sub    rsp,0x40
   14000126a:	lea    rax,[rip+0x40887]        # 0x140041af8
   140001271:	mov    r10d,edx
   140001274:	sub    r10d,eax
   140001277:	mov    r11,r8
   14000127a:	mov    al,BYTE PTR [rip+0x41368]        # 0x1400425e8
   140001280:	lea    r8,[rdx+0x1]
   140001284:	movzx  eax,BYTE PTR [rdx]
   140001287:	mov    rbx,rcx
   14000128a:	mov    rdx,QWORD PTR [rsp+0x78]
   14000128f:	shl    eax,0x18
   140001292:	or     eax,r10d
   140001295:	mov    QWORD PTR [rsp+0x28],rdx
   14000129a:	mov    DWORD PTR [rsp+0x30],eax
   14000129e:	movzx  eax,WORD PTR [r8]
   1400012a2:	mov    DWORD PTR [rsp+0x34],eax
   1400012a6:	mov    eax,DWORD PTR [r8+0x2]
   1400012aa:	mov    DWORD PTR [rsp+0x38],eax
   1400012ae:	mov    eax,DWORD PTR [r8+0x6]
   1400012b2:	add    r8,0xa
   1400012b6:	mov    DWORD PTR [rsp+0x3c],eax
   1400012ba:	mov    rax,QWORD PTR [rcx+0x8]
   1400012be:	mov    QWORD PTR [rdx],rax
   1400012c1:	mov    rax,QWORD PTR [rcx+0x8]
   1400012c5:	movzx  ecx,WORD PTR [rax]
   1400012c8:	mov    QWORD PTR [rdx+0x10],r8
   1400012cc:	mov    DWORD PTR [rdx+0x8],ecx
   1400012cf:	mov    DWORD PTR [rdx+0xc],0x2
   1400012d6:	movzx  eax,WORD PTR [r8]
   1400012da:	mov    r8,r11
   1400012dd:	mov    DWORD PTR [rdx+0x18],eax
   1400012e0:	mov    eax,DWORD PTR [rsp+0x70]
   1400012e4:	mov    DWORD PTR [rdx+0x1c],0x1
   1400012eb:	lea    rdx,[rsp+0x30]
   1400012f0:	mov    rcx,QWORD PTR [rbx+0x20]
   1400012f4:	mov    DWORD PTR [rsp+0x20],eax
   1400012f8:	call   QWORD PTR [rip+0x3c3fa]        # 0x14003d6f8
   1400012fe:	add    rsp,0x40
   140001302:	pop    rbx
   140001303:	ret    
   140001304:	int3   
   140001305:	int3   
   140001306:	int3   
   140001307:	int3   
   140001308:	int3   
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	xor    r8d,r8d
   14000130f:	test   rdx,rdx
   140001312:	je     0x140001327
   140001314:	test   QWORD PTR [rcx+0x10],rdx
   140001318:	je     0x14000132a
   14000131a:	mov    rax,QWORD PTR [rcx+0x18]
   14000131e:	and    rax,rdx
   140001321:	cmp    rax,QWORD PTR [rcx+0x18]
   140001325:	jne    0x14000132a
   140001327:	mov    r8b,0x1
   14000132a:	mov    al,r8b
   14000132d:	ret    
   14000132e:	int3   
   14000132f:	int3   
   140001330:	int3   
   140001331:	int3   
   140001332:	int3   
   140001333:	int3   
   140001334:	mov    eax,DWORD PTR [rip+0x4d812]        # 0x14004eb4c
   14000133a:	test   al,0x1
   14000133c:	jne    0x140001347
   14000133e:	or     eax,0x1
   140001341:	mov    DWORD PTR [rip+0x4d805],eax        # 0x14004eb4c
   140001347:	lea    rax,[rip+0x4df0a]        # 0x14004f258
   14000134e:	ret    
   14000134f:	int3   
   140001350:	int3   
   140001351:	int3   
   140001352:	int3   
   140001353:	int3   
   140001354:	int3   
   140001355:	int3   
   140001356:	int3   
   140001357:	int3   
   140001358:	rex push rbx
   14000135a:	sub    rsp,0x20
   14000135e:	mov    rbx,rcx
   140001361:	mov    rcx,QWORD PTR [rcx]
   140001364:	test   rcx,rcx
   140001367:	je     0x140001373
   140001369:	call   QWORD PTR [rip+0x3be91]        # 0x14003d200
   14000136f:	and    QWORD PTR [rbx],0x0
   140001373:	add    rsp,0x20
   140001377:	pop    rbx
   140001378:	ret    
   140001379:	int3   
   14000137a:	int3   
   14000137b:	int3   
   14000137c:	int3   
   14000137d:	int3   
   14000137e:	int3   
   14000137f:	int3   
   140001380:	mov    rax,QWORD PTR [rcx]
   140001383:	ret    
   140001384:	int3   
   140001385:	int3   
   140001386:	int3   
   140001387:	int3   
   140001388:	int3   
   140001389:	int3   
   14000138a:	int3   
   14000138b:	int3   
   14000138c:	mov    QWORD PTR [rsp+0x8],rbx
   140001391:	push   rdi
   140001392:	sub    rsp,0x20
   140001396:	mov    rbx,rcx
   140001399:	mov    rdi,rdx
   14000139c:	mov    rcx,QWORD PTR [rcx]
   14000139f:	test   rcx,rcx
   1400013a2:	jne    0x140016c40
   1400013a8:	mov    QWORD PTR [rbx],rdi
   1400013ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013b0:	add    rsp,0x20
   1400013b4:	pop    rdi
   1400013b5:	ret    
   1400013b6:	int3   
   1400013b7:	int3   
   1400013b8:	int3   
   1400013b9:	int3   
   1400013ba:	int3   
   1400013bb:	int3   
   1400013bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400013c1:	push   rdi
   1400013c2:	sub    rsp,0x20
   1400013c6:	mov    rdi,QWORD PTR [rcx]
   1400013c9:	test   rdi,rdi
   1400013cc:	jne    0x140016c50
   1400013d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013d7:	add    rsp,0x20
   1400013db:	pop    rdi
   1400013dc:	ret    
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	int3   
   1400013e1:	int3   
   1400013e2:	int3   
   1400013e3:	int3   
   1400013e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400013e9:	push   rdi
   1400013ea:	sub    rsp,0x20
   1400013ee:	mov    rdi,QWORD PTR [rcx]
   1400013f1:	test   rdi,rdi
   1400013f4:	je     0x14000140f
   1400013f6:	and    QWORD PTR [rcx],0x0
   1400013fa:	mov    rax,QWORD PTR [rdi]
   1400013fd:	mov    rbx,QWORD PTR [rax+0x10]
   140001401:	mov    rcx,rbx
   140001404:	call   QWORD PTR [rip+0x3c31e]        # 0x14003d728
   14000140a:	mov    rcx,rdi
   14000140d:	call   rbx
   14000140f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001414:	add    rsp,0x20
   140001418:	pop    rdi
   140001419:	ret    
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	rex push rbp
   140001422:	push   r12
   140001424:	push   r13
   140001426:	push   r14
   140001428:	push   r15
   14000142a:	lea    rbp,[rsp-0x1350]
   140001432:	mov    eax,0x1450
   140001437:	call   0x140015740
   14000143c:	sub    rsp,rax
   14000143f:	mov    QWORD PTR [rbp+0x6e8],0xfffffffffffffffe
   14000144a:	mov    QWORD PTR [rsp+0x1488],rbx
   140001452:	mov    QWORD PTR [rsp+0x1490],rsi
   14000145a:	mov    QWORD PTR [rsp+0x1498],rdi
   140001462:	mov    rax,QWORD PTR [rip+0x4cba7]        # 0x14004e010
   140001469:	xor    rax,rsp
   14000146c:	mov    QWORD PTR [rbp+0x1340],rax
   140001473:	mov    rbx,rcx
   140001476:	mov    QWORD PTR [rbp+0x5e0],rcx
   14000147d:	mov    rcx,QWORD PTR [rip+0x4de0c]        # 0x14004f290
   140001484:	test   rcx,rcx
   140001487:	jne    0x140016c6c
   14000148d:	xor    r13d,r13d
   140001490:	mov    DWORD PTR [rsp+0x30],r13d
   140001495:	mov    DWORD PTR [rsp+0x28],r13d
   14000149a:	mov    DWORD PTR [rsp+0x20],r13d
   14000149f:	lea    r9,[rip+0xe0da]        # 0x14000f580
   1400014a6:	xor    r8d,r8d
   1400014a9:	mov    eax,0x20
   1400014ae:	mov    edx,eax
   1400014b0:	mov    ecx,eax
   1400014b2:	call   QWORD PTR [rip+0x3bbc0]        # 0x14003d078
   1400014b8:	mov    QWORD PTR [rbp+0x5f0],rax
   1400014bf:	or     edi,0xffffffff
   1400014c2:	mov    DWORD PTR [rbp+0x138],edi
   1400014c8:	mov    edx,edi
   1400014ca:	mov    rcx,rbx
   1400014cd:	call   QWORD PTR [rip+0x3bf25]        # 0x14003d3f8
   1400014d3:	lea    edx,[r13+0x2]
   1400014d7:	xor    ecx,ecx
   1400014d9:	call   QWORD PTR [rip+0x51c39]        # 0x140053118
   1400014df:	test   eax,eax
   1400014e1:	js     0x14000197b
   1400014e7:	mov    DWORD PTR [rbp+0x248],r13d
   1400014ee:	mov    DWORD PTR [rbp+0x180],r13d
   1400014f5:	mov    DWORD PTR [rbp+0x2e8],r13d
   1400014fc:	lea    r12d,[r13+0x1]
   140001500:	cmp    BYTE PTR [rip+0x4d674],r13b        # 0x14004eb7b
   140001507:	je     0x1400019c3
   14000150d:	mov    bl,0x1
   14000150f:	mov    QWORD PTR [rbp+0x150],r13
   140001516:	mov    QWORD PTR [rbp+0x200],r13
   14000151d:	lea    r8,[rbp+0x150]
   140001524:	call   0x14000d0a8
   140001529:	mov    r14d,eax
   14000152c:	test   eax,eax
   14000152e:	js     0x14000159e
   140001530:	mov    rdi,QWORD PTR [rbp+0x150]
   140001537:	mov    rax,QWORD PTR [rdi]
   14000153a:	mov    rsi,QWORD PTR [rax]
   14000153d:	lea    rax,[rip+0xac1c]        # 0x14000c160
   140001544:	cmp    rsi,rax
   140001547:	jne    0x14001ea2c
   14000154d:	lea    r8,[rbp+0x200]
   140001554:	lea    rdx,[rip+0x3ce05]        # 0x14003e360
   14000155b:	mov    rcx,rdi
   14000155e:	call   0x14000c160
   140001563:	mov    r14d,eax
   140001566:	test   eax,eax
   140001568:	js     0x14000159e
   14000156a:	test   bl,bl
   14000156c:	je     0x140004877
   140001572:	lea    rax,[rbp+0x180]
   140001579:	mov    QWORD PTR [rsp+0x20],rax
   14000157e:	mov    r9d,r12d
   140001581:	mov    r8d,0x4
   140001587:	mov    rdx,QWORD PTR [rbp+0x150]
   14000158e:	lea    rcx,[rip+0x3cccb]        # 0x14003e260
   140001595:	call   QWORD PTR [rip+0x51b3d]        # 0x1400530d8
   14000159b:	mov    r14d,eax
   14000159e:	lea    rcx,[rbp+0x150]
   1400015a5:	call   0x14000ca70
   1400015aa:	test   r14d,r14d
   1400015ad:	js     0x14000195b
   1400015b3:	mov    QWORD PTR [rbp+0xf8],r13
   1400015ba:	cmp    BYTE PTR [rip+0x4d5be],0x0        # 0x14004eb7f
   1400015c1:	je     0x140001828
   1400015c7:	mov    QWORD PTR [rbp+0x98],r13
   1400015ce:	lea    rax,[rbp+0x98]
   1400015d5:	mov    QWORD PTR [rsp+0x20],rax
   1400015da:	lea    r9,[rip+0x3ccaf]        # 0x14003e290
   1400015e1:	xor    edx,edx
   1400015e3:	lea    r8d,[rdx+0x7]
   1400015e7:	lea    rcx,[rip+0x3cc92]        # 0x14003e280
   1400015ee:	call   QWORD PTR [rip+0x51b04]        # 0x1400530f8
   1400015f4:	test   eax,eax
   1400015f6:	js     0x14000177e
   1400015fc:	mov    rdi,QWORD PTR [rbp+0x98]
   140001603:	mov    rax,QWORD PTR [rdi]
   140001606:	movzx  ebx,BYTE PTR [rip+0x4d570]        # 0x14004eb7d
   14000160d:	mov    rsi,QWORD PTR [rax+0x48]
   140001611:	mov    rcx,rsi
   140001614:	call   QWORD PTR [rip+0x3c10e]        # 0x14003d728
   14000161a:	mov    r8d,ebx
   14000161d:	mov    edx,0x44
   140001622:	mov    rcx,rdi
   140001625:	call   rsi
   140001627:	mov    rdi,QWORD PTR [rbp+0x98]
   14000162e:	mov    rax,QWORD PTR [rdi]
   140001631:	mov    rbx,QWORD PTR [rax+0x40]
   140001635:	mov    rcx,rbx
   140001638:	call   QWORD PTR [rip+0x3c0ea]        # 0x14003d728
   14000163e:	mov    r8d,DWORD PTR [rip+0x4d52f]        # 0x14004eb74
   140001645:	mov    edx,0x46
   14000164a:	mov    rcx,rdi
   14000164d:	call   rbx
   14000164f:	mov    rdi,QWORD PTR [rbp+0x98]
   140001656:	mov    rax,QWORD PTR [rdi]
   140001659:	mov    rbx,QWORD PTR [rax+0x40]
   14000165d:	mov    rcx,rbx
   140001660:	call   QWORD PTR [rip+0x3c0c2]        # 0x14003d728
   140001666:	mov    r8d,DWORD PTR [rip+0x4ce03]        # 0x14004e470
   14000166d:	mov    edx,0x4f
   140001672:	mov    rcx,rdi
   140001675:	call   rbx
   140001677:	mov    rdi,QWORD PTR [rbp+0x98]
   14000167e:	mov    rax,QWORD PTR [rdi]
   140001681:	movzx  ebx,BYTE PTR [rip+0x4d4f1]        # 0x14004eb79
   140001688:	mov    rsi,QWORD PTR [rax+0x48]
   14000168c:	mov    rcx,rsi
   14000168f:	call   QWORD PTR [rip+0x3c093]        # 0x14003d728
   140001695:	mov    r8d,ebx
   140001698:	mov    edx,0x49
   14000169d:	mov    rcx,rdi
   1400016a0:	call   rsi
   1400016a2:	mov    ecx,0x43
   1400016a7:	call   QWORD PTR [rip+0x3b9b3]        # 0x14003d060
   1400016ad:	test   eax,eax
   1400016af:	jne    0x1400016b4
   1400016b1:	mov    r12d,r13d
   1400016b4:	mov    rdi,QWORD PTR [rbp+0x98]
   1400016bb:	mov    rax,QWORD PTR [rdi]
   1400016be:	mov    rbx,QWORD PTR [rax+0x48]
   1400016c2:	mov    rcx,rbx
   1400016c5:	call   QWORD PTR [rip+0x3c05d]        # 0x14003d728
   1400016cb:	mov    r8d,r12d
   1400016ce:	mov    edx,0x50
   1400016d3:	mov    rcx,rdi
   1400016d6:	call   rbx
   1400016d8:	mov    rdi,QWORD PTR [rbp+0x98]
   1400016df:	mov    rax,QWORD PTR [rdi]
   1400016e2:	mov    rbx,QWORD PTR [rax+0x40]
   1400016e6:	mov    rcx,rbx
   1400016e9:	call   QWORD PTR [rip+0x3c039]        # 0x14003d728
   1400016ef:	mov    r8d,DWORD PTR [rip+0x4d47a]        # 0x14004eb70
   1400016f6:	mov    edx,0x51
   1400016fb:	mov    rcx,rdi
   1400016fe:	call   rbx
   140001700:	mov    rdi,QWORD PTR [rbp+0x98]
   140001707:	mov    rax,QWORD PTR [rdi]
   14000170a:	mov    rbx,QWORD PTR [rax+0x40]
   14000170e:	mov    rcx,rbx
   140001711:	call   QWORD PTR [rip+0x3c011]        # 0x14003d728
   140001717:	mov    r8d,DWORD PTR [rip+0x4d8aa]        # 0x14004efc8
   14000171e:	mov    edx,0x52
   140001723:	mov    rcx,rdi
   140001726:	call   rbx
   140001728:	mov    rdi,QWORD PTR [rbp+0x98]
   14000172f:	mov    rax,QWORD PTR [rdi]
   140001732:	movzx  ebx,BYTE PTR [rip+0x4d442]        # 0x14004eb7b
   140001739:	mov    rsi,QWORD PTR [rax+0x48]
   14000173d:	mov    rcx,rsi
   140001740:	call   QWORD PTR [rip+0x3bfe2]        # 0x14003d728
   140001746:	mov    r8d,ebx
   140001749:	mov    edx,0x48
   14000174e:	mov    rcx,rdi
   140001751:	call   rsi
   140001753:	mov    rdi,QWORD PTR [rbp+0x98]
   14000175a:	mov    rax,QWORD PTR [rdi]
   14000175d:	movzx  ebx,BYTE PTR [rip+0x4d414]        # 0x14004eb78
   140001764:	mov    rsi,QWORD PTR [rax+0x48]
   140001768:	mov    rcx,rsi
   14000176b:	call   QWORD PTR [rip+0x3bfb7]        # 0x14003d728
   140001771:	mov    r8d,ebx
   140001774:	mov    edx,0x4a
   140001779:	mov    rcx,rdi
   14000177c:	call   rsi
   14000177e:	mov    rdi,QWORD PTR [rbp+0x200]
   140001785:	test   rdi,rdi
   140001788:	je     0x1400017c8
   14000178a:	mov    rax,QWORD PTR [rdi]
   14000178d:	mov    rbx,QWORD PTR [rax+0x18]
   140001791:	lea    rax,[rip+0xadb8]        # 0x14000c550
   140001798:	cmp    rbx,rax
   14000179b:	jne    0x14001ea4e
   1400017a1:	lea    r9,[rbp+0xf8]
   1400017a8:	lea    r8,[rip+0x3cac1]        # 0x14003e270
   1400017af:	xor    edx,edx
   1400017b1:	mov    rcx,rdi
   1400017b4:	call   0x14000c550
   1400017b9:	mov    r14d,eax
   1400017bc:	lea    rcx,[rbp+0x200]
   1400017c3:	call   0x14000cac4
   1400017c8:	test   r14d,r14d
   1400017cb:	js     0x14000180f
   1400017cd:	mov    rdi,QWORD PTR [rbp+0xf8]
   1400017d4:	test   rdi,rdi
   1400017d7:	je     0x14000180f
   1400017d9:	mov    rax,QWORD PTR [rdi]
   1400017dc:	mov    rbx,QWORD PTR [rax+0x18]
   1400017e0:	lea    rax,[rip+0xb609]        # 0x14000cdf0
   1400017e7:	cmp    rbx,rax
   1400017ea:	jne    0x14001ea72
   1400017f0:	xor    r8d,r8d
   1400017f3:	xor    edx,edx
   1400017f5:	mov    rcx,rdi
   1400017f8:	call   0x14000cdf0
   1400017fd:	mov    rcx,QWORD PTR [rbp+0x5e0]
   140001804:	test   rcx,rcx
   140001807:	je     0x14000180f
   140001809:	call   QWORD PTR [rip+0x3b999]        # 0x14003d1a8
   14000180f:	lea    rcx,[rbp+0x98]
   140001816:	call   0x1400013e4
   14000181b:	nop
   14000181c:	lea    rcx,[rbp+0x98]
   140001823:	call   0x1400013bc
   140001828:	cmp    BYTE PTR [rip+0x4d34e],0x0        # 0x14004eb7d
   14000182f:	jne    0x14001ea8b
   140001835:	mov    QWORD PTR [rbp+0x420],r13
   14000183c:	lea    r8,[rbp+0x420]
   140001843:	lea    rdx,[rip+0x3c9e6]        # 0x14003e230
   14000184a:	xor    ecx,ecx
   14000184c:	call   QWORD PTR [rip+0x3b9ee]        # 0x14003d240
   140001852:	test   eax,eax
   140001854:	je     0x14000188f
   140001856:	mov    rcx,QWORD PTR [rbp+0x420]
   14000185d:	test   rcx,rcx
   140001860:	je     0x14000188f
   140001862:	lea    rdx,[rip+0x3c9e7]        # 0x14003e250
   140001869:	call   QWORD PTR [rip+0x3b9b9]        # 0x14003d228
   14000186f:	mov    rdi,rax
   140001872:	test   rax,rax
   140001875:	je     0x140001882
   140001877:	mov    rcx,rax
   14000187a:	call   QWORD PTR [rip+0x3bea8]        # 0x14003d728
   140001880:	call   rdi
   140001882:	mov    rcx,QWORD PTR [rbp+0x420]
   140001889:	call   QWORD PTR [rip+0x3b9c9]        # 0x14003d258
   14000188f:	mov    rax,QWORD PTR [rbp+0x5f0]
   140001896:	test   rax,rax
   140001899:	je     0x1400018a4
   14000189b:	mov    rcx,rax
   14000189e:	call   QWORD PTR [rip+0x3b7dc]        # 0x14003d080
   1400018a4:	mov    rcx,QWORD PTR [rip+0x4d9dd]        # 0x14004f288
   1400018ab:	test   rcx,rcx
   1400018ae:	jne    0x14001eb0e
   1400018b4:	call   0x14000dffc
   1400018b9:	mov    ecx,DWORD PTR [rbp+0x248]
   1400018bf:	test   ecx,ecx
   1400018c1:	jne    0x14001eb1f
   1400018c7:	mov    ecx,DWORD PTR [rbp+0x180]
   1400018cd:	test   ecx,ecx
   1400018cf:	je     0x1400018d7
   1400018d1:	call   QWORD PTR [rip+0x517f9]        # 0x1400530d0
   1400018d7:	cmp    BYTE PTR [rip+0x4d2a2],0x0        # 0x14004eb80
   1400018de:	je     0x1400018f9
   1400018e0:	mov    rcx,QWORD PTR [rip+0x4d281]        # 0x14004eb68
   1400018e7:	test   rcx,rcx
   1400018ea:	je     0x1400018f9
   1400018ec:	call   QWORD PTR [rip+0x3b8b6]        # 0x14003d1a8
   1400018f2:	mov    QWORD PTR [rip+0x4d26f],r13        # 0x14004eb68
   1400018f9:	mov    rcx,QWORD PTR [rbp+0xf8]
   140001900:	test   rcx,rcx
   140001903:	je     0x14000193f
   140001905:	xor    edx,edx
   140001907:	call   QWORD PTR [rip+0x517d3]        # 0x1400530e0
   14000190d:	mov    rdi,QWORD PTR [rbp+0xf8]
   140001914:	mov    rax,QWORD PTR [rdi]
   140001917:	mov    rbx,QWORD PTR [rax+0x28]
   14000191b:	lea    rax,[rip+0xb35e]        # 0x14000cc80
   140001922:	cmp    rbx,rax
   140001925:	jne    0x14001eb2b
   14000192b:	mov    rcx,rdi
   14000192e:	call   0x14000cc80
   140001933:	lea    rcx,[rbp+0xf8]
   14000193a:	call   0x14000df7c
   14000193f:	mov    rcx,QWORD PTR [rip+0x4d94a]        # 0x14004f290
   140001946:	test   rcx,rcx
   140001949:	jne    0x14001eb3f
   14000194f:	lea    rcx,[rbp+0xf8]
   140001956:	call   0x1400013bc
   14000195b:	call   QWORD PTR [rip+0x5179f]        # 0x140053100
   140001961:	nop
   140001962:	lea    rcx,[rbp+0x200]
   140001969:	call   0x14000cb0c
   14000196e:	nop
   14000196f:	lea    rcx,[rbp+0x150]
   140001976:	call   0x14000ca0c
   14000197b:	xor    r9d,r9d
   14000197e:	xor    r8d,r8d
   140001981:	lea    edx,[r9+0x12]
   140001985:	mov    ecx,DWORD PTR [rip+0x4d1e9]        # 0x14004eb74
   14000198b:	call   QWORD PTR [rip+0x3b75f]        # 0x14003d0f0
   140001991:	xor    eax,eax
   140001993:	mov    rcx,QWORD PTR [rbp+0x1340]
   14000199a:	xor    rcx,rsp
   14000199d:	call   0x1400141d0
   1400019a2:	lea    r11,[rsp+0x1450]
   1400019aa:	mov    rbx,QWORD PTR [r11+0x38]
   1400019ae:	mov    rsi,QWORD PTR [r11+0x40]
   1400019b2:	mov    rdi,QWORD PTR [r11+0x48]
   1400019b6:	mov    rsp,r11
   1400019b9:	pop    r15
   1400019bb:	pop    r14
   1400019bd:	pop    r13
   1400019bf:	pop    r12
   1400019c1:	pop    rbp
   1400019c2:	ret    
   1400019c3:	mov    QWORD PTR [rbp+0x400],r13
   1400019ca:	mov    DWORD PTR [rbp+0x7c],r13d
   1400019ce:	mov    DWORD PTR [rbp+0x1b4],r13d
   1400019d5:	mov    DWORD PTR [rbp+0x164],r13d
   1400019dc:	mov    QWORD PTR [rbp+0x250],r13
   1400019e3:	mov    DWORD PTR [rbp+0x84],r13d
   1400019ea:	xor    eax,eax
   1400019ec:	lock cmpxchg DWORD PTR [rip+0x4d74b],r12d        # 0x14004f140
   1400019f5:	jne    0x1400019ea
   1400019f7:	mov    r15d,0x60
   1400019fd:	lea    r14,[rip+0x4d74c]        # 0x14004f150
   140001a04:	lea    rsi,[rip+0x4c615]        # 0x14004e020
   140001a0b:	mov    eax,DWORD PTR [rip+0x4d137]        # 0x14004eb48
   140001a11:	test   eax,eax
   140001a13:	jne    0x14000206b
   140001a19:	mov    DWORD PTR [rsp+0x60],r13d
   140001a1e:	mov    DWORD PTR [rbp+0x0],r13d
   140001a22:	mov    QWORD PTR [rbp+0x300],r13
   140001a29:	mov    QWORD PTR [rbp+0x5c0],r13
   140001a30:	mov    ecx,0x338
   140001a35:	call   0x14000f134
   140001a3a:	mov    QWORD PTR [rbp-0x68],rax
   140001a3e:	test   rax,rax
   140001a41:	je     0x140016e5f
   140001a47:	xor    cl,cl
   140001a49:	mov    r12d,r13d
   140001a4c:	mov    r13d,edi
   140001a4f:	xor    edx,edx
   140001a51:	mov    ebx,edx
   140001a53:	mov    DWORD PTR [rbp+0x14],edx
   140001a56:	mov    r8d,edx
   140001a59:	mov    DWORD PTR [rbp+0x40],edx
   140001a5c:	lea    rsi,[rax+0x7]
   140001a60:	lea    r14,[rip+0x3c47b]        # 0x14003dee2
   140001a67:	lea    r15d,[rdx+0x67]
   140001a6b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001a70:	movzx  r11d,BYTE PTR [r14-0x2]
   140001a75:	shl    r11d,0x8
   140001a79:	movzx  eax,BYTE PTR [r14-0x1]
   140001a7e:	or     r11d,eax
   140001a81:	shl    r11d,0x8
   140001a85:	movzx  eax,BYTE PTR [r14]
   140001a89:	or     r11d,eax
   140001a8c:	shl    r11d,0x8
   140001a90:	movzx  eax,BYTE PTR [r14+0x1]
   140001a95:	or     r11d,eax
   140001a98:	movzx  r10d,BYTE PTR [r14+0x2]
   140001a9d:	shl    r10d,0x8
   140001aa1:	movzx  eax,BYTE PTR [r14+0x3]
   140001aa6:	or     r10d,eax
   140001aa9:	shl    r10d,0x8
   140001aad:	movzx  eax,BYTE PTR [r14+0x4]
   140001ab2:	or     r10d,eax
   140001ab5:	shl    r10d,0x8
   140001ab9:	movzx  eax,BYTE PTR [r14+0x5]
   140001abe:	or     r10d,eax
   140001ac1:	xor    r8d,r11d
   140001ac4:	xor    ebx,r10d
   140001ac7:	lea    r14,[r14+0x8]
   140001acb:	xor    ebx,r8d
   140001ace:	xor    ebx,0x58830298
   140001ad4:	lea    eax,[rbx+0x7b1e05f8]
   140001ada:	rol    eax,0x5
   140001add:	mov    edx,ebx
   140001adf:	rol    edx,0xa
   140001ae2:	imul   eax,eax,0xf890
   140001ae8:	add    edx,eax
   140001aea:	xor    r8d,edx
   140001aed:	lea    eax,[r8-0x239d0770]
   140001af4:	ror    eax,0x9
   140001af7:	mov    edx,r8d
   140001afa:	rol    edx,0x2
   140001afd:	imul   eax,eax,0x84e1
   140001b03:	sub    eax,edx
   140001b05:	xor    ebx,eax
   140001b07:	lea    eax,[rbx-0xf890]
   140001b0d:	imul   edx,eax,0xfa08
   140001b13:	mov    eax,ebx
   140001b15:	shr    eax,0xd
   140001b18:	sub    edx,eax
   140001b1a:	xor    r8d,edx
   140001b1d:	mov    eax,r8d
   140001b20:	xor    eax,0x84e1
   140001b25:	rol    eax,0x6
   140001b28:	mov    edx,r8d
   140001b2b:	rol    edx,0x2
   140001b2e:	imul   eax,eax,0xdc62
   140001b34:	sub    eax,edx
   140001b36:	xor    ebx,eax
   140001b38:	mov    edx,ebx
   140001b3a:	xor    edx,0x84e1fa08
   140001b40:	mov    eax,0xdc62f890
   140001b45:	sub    eax,edx
   140001b47:	xor    r8d,eax
   140001b4a:	mov    edi,r8d
   140001b4d:	ror    edi,0x6
   140001b50:	mov    eax,r8d
   140001b53:	xor    eax,0xf890
   140001b58:	imul   edx,eax,0x84e1
   140001b5e:	xor    edi,edx
   140001b60:	xor    ebx,edi
   140001b62:	lea    eax,[rbx-0x239d0770]
   140001b68:	ror    eax,0xf
   140001b6b:	mov    edx,ebx
   140001b6d:	rol    edx,0x2
   140001b70:	imul   eax,eax,0xfa08
   140001b76:	add    edx,eax
   140001b78:	xor    r8d,edx
   140001b7b:	lea    eax,[r8+0x7b1e05f8]
   140001b82:	ror    eax,0xe
   140001b85:	mov    edx,r8d
   140001b88:	rol    edx,0x8
   140001b8b:	imul   eax,eax,0xdc62
   140001b91:	sub    eax,edx
   140001b93:	xor    ebx,eax
   140001b95:	mov    eax,ebx
   140001b97:	xor    eax,0x84e1fa08
   140001b9c:	ror    eax,0xc
   140001b9f:	mov    edx,ebx
   140001ba1:	ror    edx,0xa
   140001ba4:	imul   eax,eax,0xf890
   140001baa:	xor    edx,eax
   140001bac:	xor    r8d,edx
   140001baf:	mov    eax,r8d
   140001bb2:	xor    eax,0xdc62
   140001bb7:	imul   edx,eax,0x84e1
   140001bbd:	mov    eax,r8d
   140001bc0:	shr    eax,0xa
   140001bc3:	xor    edx,eax
   140001bc5:	xor    ebx,edx
   140001bc7:	mov    eax,ebx
   140001bc9:	not    eax
   140001bcb:	ror    eax,0x5
   140001bce:	imul   eax,eax,0xdc62
   140001bd4:	sub    eax,0x28c168f0
   140001bd9:	xor    r8d,eax
   140001bdc:	mov    r9d,ebx
   140001bdf:	xor    r9d,r8d
   140001be2:	xor    r9d,0x58830298
   140001be9:	lea    eax,[r9-0x7b1e05f8]
   140001bf0:	rol    eax,0xb
   140001bf3:	mov    edx,r9d
   140001bf6:	rol    edx,0xd
   140001bf9:	imul   eax,eax,0xdc62
   140001bff:	add    edx,eax
   140001c01:	xor    ebx,edx
   140001c03:	mov    eax,ebx
   140001c05:	xor    eax,0x84e1fa08
   140001c0a:	ror    eax,0x5
   140001c0d:	mov    edx,ebx
   140001c0f:	ror    edx,0xc
   140001c12:	imul   eax,eax,0xf890
   140001c18:	xor    edx,eax
   140001c1a:	xor    r9d,edx
   140001c1d:	lea    eax,[r9-0xf890]
   140001c24:	imul   edx,eax,0x84e1
   140001c2a:	mov    eax,r9d
   140001c2d:	shr    eax,0x9
   140001c30:	sub    edx,eax
   140001c32:	xor    ebx,edx
   140001c34:	lea    eax,[rbx+0x239c0d68]
   140001c3a:	xor    r9d,eax
   140001c3d:	lea    r8d,[r9-0xdc62]
   140001c44:	xor    r8d,ebx
   140001c47:	xor    r8d,0x84e1fa08
   140001c4e:	lea    eax,[r8+0x7b1e05f8]
   140001c55:	ror    eax,0x4
   140001c58:	mov    edx,r8d
   140001c5b:	ror    edx,0xb
   140001c5e:	imul   eax,eax,0xf890
   140001c64:	xor    edx,eax
   140001c66:	xor    r9d,edx
   140001c69:	mov    eax,0xdc62f890
   140001c6e:	sub    eax,r9d
   140001c71:	ror    eax,0x7
   140001c74:	mov    edx,r9d
   140001c77:	ror    edx,0x3
   140001c7a:	imul   eax,eax,0x84e1
   140001c80:	add    edx,eax
   140001c82:	xor    r8d,edx
   140001c85:	mov    eax,r8d
   140001c88:	xor    eax,0xdc62f890
   140001c8d:	rol    eax,1
   140001c8f:	mov    edx,r8d
   140001c92:	ror    edx,0x8
   140001c95:	imul   eax,eax,0xfa08
   140001c9b:	add    edx,eax
   140001c9d:	xor    r9d,edx
   140001ca0:	mov    edi,r9d
   140001ca3:	ror    edi,1
   140001ca5:	mov    eax,r9d
   140001ca8:	xor    eax,0xf890
   140001cad:	imul   edx,eax,0xdc62
   140001cb3:	add    edi,edx
   140001cb5:	xor    r8d,edi
   140001cb8:	mov    eax,r8d
   140001cbb:	xor    eax,0xfa08
   140001cc0:	rol    eax,1
   140001cc2:	mov    edx,r8d
   140001cc5:	rol    edx,0x8
   140001cc8:	imul   eax,eax,0xf890
   140001cce:	xor    edx,eax
   140001cd0:	xor    r9d,edx
   140001cd3:	mov    edx,r9d
   140001cd6:	xor    edx,0xdc62f890
   140001cdc:	mov    eax,0x84e1fa08
   140001ce1:	sub    eax,edx
   140001ce3:	xor    r8d,eax
   140001ce6:	lea    eax,[r8+0x239d0770]
   140001ced:	ror    eax,0x3
   140001cf0:	mov    edx,r8d
   140001cf3:	ror    edx,0x2
   140001cf6:	imul   eax,eax,0xfa08
   140001cfc:	add    edx,eax
   140001cfe:	xor    edx,r12d
   140001d01:	xor    r9d,edx
   140001d04:	mov    DWORD PTR [rbp+0x40],r9d
   140001d08:	xor    r8d,r13d
   140001d0b:	mov    DWORD PTR [rbp+0x14],r8d
   140001d0f:	mov    BYTE PTR [rsi-0x4],r9b
   140001d13:	ror    DWORD PTR [rbp+0x40],0x8
   140001d17:	movzx  eax,BYTE PTR [rbp+0x14]
   140001d1b:	mov    BYTE PTR [rsi],al
   140001d1d:	ror    DWORD PTR [rbp+0x14],0x8
   140001d21:	movzx  eax,BYTE PTR [rbp+0x40]
   140001d25:	mov    BYTE PTR [rsi-0x5],al
   140001d28:	ror    DWORD PTR [rbp+0x40],0x8
   140001d2c:	movzx  eax,BYTE PTR [rbp+0x14]
   140001d30:	mov    BYTE PTR [rsi-0x1],al
   140001d33:	ror    DWORD PTR [rbp+0x14],0x8
   140001d37:	movzx  eax,BYTE PTR [rbp+0x40]
   140001d3b:	mov    BYTE PTR [rsi-0x6],al
   140001d3e:	ror    DWORD PTR [rbp+0x40],0x8
   140001d42:	movzx  eax,BYTE PTR [rbp+0x14]
   140001d46:	mov    BYTE PTR [rsi-0x2],al
   140001d49:	ror    DWORD PTR [rbp+0x14],0x8
   140001d4d:	movzx  eax,BYTE PTR [rbp+0x40]
   140001d51:	mov    BYTE PTR [rsi-0x7],al
   140001d54:	movzx  eax,BYTE PTR [rbp+0x14]
   140001d58:	mov    BYTE PTR [rsi-0x3],al
   140001d5b:	mov    r8d,DWORD PTR [rbp+0x40]
   140001d5f:	ror    r8d,0x8
   140001d63:	mov    DWORD PTR [rbp+0x40],r8d
   140001d67:	mov    ebx,DWORD PTR [rbp+0x14]
   140001d6a:	ror    ebx,0x8
   140001d6d:	mov    DWORD PTR [rbp+0x14],ebx
   140001d70:	mov    r12d,r11d
   140001d73:	mov    r13d,r10d
   140001d76:	lea    rsi,[rsi+0x8]
   140001d7a:	sub    r15,0x1
   140001d7e:	jne    0x140001a70
   140001d84:	xor    r13d,r13d
   140001d87:	mov    eax,r13d
   140001d8a:	mov    rdi,QWORD PTR [rbp-0x68]
   140001d8e:	xor    cl,BYTE PTR [rax+rdi*1]
   140001d91:	inc    rax
   140001d94:	cmp    rax,0x338
   140001d9a:	jb     0x140001d8e
   140001d9c:	movzx  eax,cl
   140001d9f:	cmp    rax,QWORD PTR [rip+0x3c472]        # 0x14003e218
   140001da6:	jne    0x140016e43
   140001dac:	mov    QWORD PTR [rbp+0x300],rdi
   140001db3:	mov    QWORD PTR [rbp+0x5c0],0x338
   140001dbe:	mov    BYTE PTR [rdi+0x337],r13b
   140001dc5:	mov    r15d,0x60
   140001dcb:	mov    r8d,r15d
   140001dce:	xor    edx,edx
   140001dd0:	lea    r14,[rip+0x4d379]        # 0x14004f150
   140001dd7:	mov    rcx,r14
   140001dda:	call   0x140014694
   140001ddf:	cmp    BYTE PTR [rdi],r13b
   140001de2:	je     0x140016e80
   140001de8:	mov    esi,r13d
   140001deb:	mov    rdx,rdi
   140001dee:	or     rax,0xffffffffffffffff
   140001df2:	lea    rax,[rax+0x1]
   140001df6:	cmp    WORD PTR [rdi+rax*2],0x0
   140001dfb:	jne    0x140001df2
   140001dfd:	lea    rdi,[rdi+rax*2]
   140001e01:	mov    eax,esi
   140001e03:	lea    rcx,[rax+rax*2]
   140001e07:	lea    r14,[r14+rcx*8]
   140001e0b:	mov    r8,r14
   140001e0e:	xor    ecx,ecx
   140001e10:	call   QWORD PTR [rip+0x3b42a]        # 0x14003d240
   140001e16:	test   eax,eax
   140001e18:	je     0x140016e13
   140001e1e:	xor    r9d,r9d
   140001e21:	mov    r15d,r9d
   140001e24:	mov    DWORD PTR [rsp+0x78],r9d
   140001e29:	mov    rax,QWORD PTR [r14]
   140001e2c:	mov    ecx,0x5a4d
   140001e31:	cmp    WORD PTR [rax],cx
   140001e34:	jne    0x140016c78
   140001e3a:	movsxd rcx,DWORD PTR [rax+0x3c]
   140001e3e:	cmp    ecx,0x10000000
   140001e44:	jae    0x140016c88
   140001e4a:	add    rcx,QWORD PTR [r14]
   140001e4d:	cmp    rcx,QWORD PTR [r14]
   140001e50:	jb     0x140016c98
   140001e56:	cmp    DWORD PTR [rcx],0x4550
   140001e5c:	jne    0x140016ca8
   140001e62:	movzx  eax,WORD PTR [rcx+0x18]
   140001e66:	mov    edx,0x10b
   140001e6b:	sub    ax,dx
   140001e6e:	mov    edx,0xfeff
   140001e73:	test   dx,ax
   140001e76:	jne    0x140016cb8
   140001e7c:	mov    rax,QWORD PTR [rcx+0x88]
   140001e83:	mov    QWORD PTR [r14+0xc],rax
   140001e87:	mov    eax,DWORD PTR [rcx+0x50]
   140001e8a:	mov    DWORD PTR [r14+0x8],eax
   140001e8e:	mov    r8d,DWORD PTR [rdi+0x2]
   140001e92:	mov    DWORD PTR [rbp+0x3c],r8d
   140001e96:	add    rdi,0x6
   140001e9a:	mov    r12d,r9d
   140001e9d:	test   r8d,r8d
   140001ea0:	je     0x140002014
   140001ea6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001eb0:	mov    r13,r9
   140001eb3:	mov    rbx,rdi
   140001eb6:	or     rax,0xffffffffffffffff
   140001eba:	nop    WORD PTR [rax+rax*1+0x0]
   140001ec0:	inc    rax
   140001ec3:	cmp    BYTE PTR [rdi+rax*1],0x0
   140001ec7:	jne    0x140001ec0
   140001ec9:	inc    rdi
   140001ecc:	add    rdi,rax
   140001ecf:	mov    QWORD PTR [rbp-0x68],rdi
   140001ed3:	test   r15d,r15d
   140001ed6:	js     0x140002001
   140001edc:	mov    r15d,r9d
   140001edf:	mov    DWORD PTR [rsp+0x78],r9d
   140001ee4:	mov    QWORD PTR [rbp+0x6d0],r9
   140001eeb:	xor    eax,eax
   140001eed:	mov    QWORD PTR [rbp+0x6d8],rax
   140001ef4:	mov    QWORD PTR [rbp+0x6e0],rax
   140001efb:	mov    DWORD PTR [rbp+0x18c],r9d
   140001f02:	mov    r10,QWORD PTR [r14]
   140001f05:	mov    esi,DWORD PTR [r14+0xc]
   140001f09:	add    rsi,r10
   140001f0c:	test   rbx,rbx
   140001f0f:	je     0x140016cc8
   140001f15:	mov    r8d,DWORD PTR [rsi+0x18]
   140001f19:	mov    r11d,DWORD PTR [rsi+0x20]
   140001f1d:	add    r11,r10
   140001f20:	mov    r15d,DWORD PTR [rsi+0x24]
   140001f24:	add    r15,r10
   140001f27:	sub    r8d,0x1
   140001f2b:	js     0x140016e13
   140001f31:	nop    DWORD PTR [rax+0x0]
   140001f35:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001f40:	lea    edi,[r8+r9*1]
   140001f44:	sar    edi,1
   140001f46:	movsxd rax,edi
   140001f49:	mov    edx,DWORD PTR [r11+rax*4]
   140001f4d:	add    rdx,r10
   140001f50:	mov    rax,rbx
   140001f53:	sub    rdx,rbx
   140001f56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001f60:	movzx  ecx,BYTE PTR [rax]
   140001f63:	cmp    cl,BYTE PTR [rax+rdx*1]
   140001f66:	jne    0x14000210c
   140001f6c:	inc    rax
   140001f6f:	test   cl,cl
   140001f71:	jne    0x140001f60
   140001f73:	xor    eax,eax
   140001f75:	test   eax,eax
   140001f77:	js     0x140001f89
   140001f79:	jle    0x140001f8f
   140001f7b:	lea    r9d,[rdi+0x1]
   140001f7f:	cmp    r8d,r9d
   140001f82:	jge    0x140001f40
   140001f84:	jmp    0x140016e13
   140001f89:	lea    r8d,[rdi-0x1]
   140001f8d:	jmp    0x140001f7f
   140001f8f:	cmp    r8d,r9d
   140001f92:	jl     0x140016e13
   140001f98:	movsxd rax,edi
   140001f9b:	movzx  edx,WORD PTR [r15+rax*2]
   140001fa0:	mov    rdi,QWORD PTR [rbp-0x68]
   140001fa4:	mov    r15d,r13d
   140001fa7:	mov    r8d,DWORD PTR [rbp+0x3c]
   140001fab:	xor    r9d,r9d
   140001fae:	mov    ecx,DWORD PTR [rsi+0x1c]
   140001fb1:	add    rcx,r10
   140001fb4:	movzx  eax,dx
   140001fb7:	mov    ecx,DWORD PTR [rcx+rax*4]
   140001fba:	add    rcx,r10
   140001fbd:	mov    QWORD PTR [rbp+0x490],rcx
   140001fc4:	cmp    rcx,r10
   140001fc7:	jb     0x140016e03
   140001fcd:	mov    eax,DWORD PTR [r14+0x8]
   140001fd1:	add    rax,r10
   140001fd4:	cmp    rcx,rax
   140001fd7:	jae    0x140016e03
   140001fdd:	cmp    rcx,rsi
   140001fe0:	ja     0x140016cd4
   140001fe6:	mov    r13,rcx
   140001fe9:	test   r15d,r15d
   140001fec:	js     0x140016e69
   140001ff2:	mov    eax,DWORD PTR [rsp+0x60]
   140001ff6:	lea    rcx,[rip+0x4c023]        # 0x14004e020
   140001ffd:	mov    QWORD PTR [rcx+rax*8],r13
   140002001:	inc    DWORD PTR [rsp+0x60]
   140002005:	inc    r12d
   140002008:	cmp    r12d,r8d
   14000200b:	jb     0x140001eb0
   140002011:	mov    esi,DWORD PTR [rbp+0x0]
   140002014:	inc    esi
   140002016:	mov    DWORD PTR [rbp+0x0],esi
   140002019:	lea    r14,[rip+0x4d130]        # 0x14004f150
   140002020:	cmp    BYTE PTR [rdi],0x0
   140002023:	jne    0x140001deb
   140002029:	mov    edi,DWORD PTR [rsp+0x78]
   14000202d:	xor    r13d,r13d
   140002030:	lea    r15d,[r13+0x60]
   140002034:	lea    rsi,[rip+0x4bfe5]        # 0x14004e020
   14000203b:	cmp    QWORD PTR [rbp+0x300],0x0
   140002043:	je     0x14000205d
   140002045:	call   QWORD PTR [rip+0x3b175]        # 0x14003d1c0
   14000204b:	mov    rcx,rax
   14000204e:	mov    r8,QWORD PTR [rbp+0x300]
   140002055:	xor    edx,edx
   140002057:	call   QWORD PTR [rip+0x3b183]        # 0x14003d1e0
   14000205d:	test   edi,edi
   14000205f:	js     0x140016e88
   140002065:	mov    eax,DWORD PTR [rip+0x4cadd]        # 0x14004eb48
   14000206b:	inc    eax
   14000206d:	mov    DWORD PTR [rip+0x4cad5],eax        # 0x14004eb48
   140002073:	mov    eax,r13d
   140002076:	xchg   DWORD PTR [rip+0x4d0c4],eax        # 0x14004f140
   14000207c:	mov    QWORD PTR [rbp+0x320],r13
   140002083:	mov    QWORD PTR [rbp+0x310],r13
   14000208a:	mov    r14d,r13d
   14000208d:	mov    ebx,r13d
   140002090:	mov    rax,QWORD PTR gs:0x60
   140002099:	mov    esi,0x80004005
   14000209e:	cmp    DWORD PTR [rax+0x2c0],0x0
   1400020a5:	je     0x140002206
   1400020ab:	mov    rdi,QWORD PTR [rip+0x4c07e]        # 0x14004e130
   1400020b2:	mov    rcx,rdi
   1400020b5:	call   QWORD PTR [rip+0x3b66d]        # 0x14003d728
   1400020bb:	call   rdi
   1400020bd:	mov    r12,rax
   1400020c0:	test   rax,rax
   1400020c3:	je     0x140016ed0
   1400020c9:	mov    rsi,r13
   1400020cc:	mov    QWORD PTR [rbp+0x270],r13
   1400020d3:	mov    r15d,r13d
   1400020d6:	mov    rdi,QWORD PTR [rip+0x4c073]        # 0x14004e150
   1400020dd:	mov    rcx,rdi
   1400020e0:	call   QWORD PTR [rip+0x3b642]        # 0x14003d728
   1400020e6:	lea    rax,[rbp+0x1f8]
   1400020ed:	mov    QWORD PTR [rsp+0x20],rax
   1400020f2:	mov    r9d,r15d
   1400020f5:	mov    r8,rsi
   1400020f8:	mov    edx,0x2
   1400020fd:	mov    rcx,r12
   140002100:	call   rdi
   140002102:	test   eax,eax
   140002104:	je     0x1400047ec
   14000210a:	jmp    0x140002116
   14000210c:	sbb    eax,eax
   14000210e:	or     eax,0x1
   140002111:	jmp    0x140001f75
   140002116:	mov    QWORD PTR [rbp+0x320],rsi
   14000211d:	mov    esi,0x80004005
   140002122:	mov    QWORD PTR [rbp+0x270],r13
   140002129:	lea    rcx,[rbp+0x270]
   140002130:	call   0x14000f08c
   140002135:	test   ebx,ebx
   140002137:	js     0x14000220d
   14000213d:	call   QWORD PTR [rip+0x3b1b5]        # 0x14003d2f8
   140002143:	mov    edi,eax
   140002145:	mov    rbx,QWORD PTR [rip+0x4bffc]        # 0x14004e148
   14000214c:	mov    rcx,rbx
   14000214f:	call   QWORD PTR [rip+0x3b5d3]        # 0x14003d728
   140002155:	mov    ecx,edi
   140002157:	call   rbx
   140002159:	mov    r12,rax
   14000215c:	test   rax,rax
   14000215f:	je     0x140016f2a
   140002165:	mov    rsi,r13
   140002168:	mov    QWORD PTR [rbp+0x2b0],r13
   14000216f:	mov    ebx,r13d
   140002172:	mov    r15d,r13d
   140002175:	mov    rdi,QWORD PTR [rip+0x4bfd4]        # 0x14004e150
   14000217c:	mov    rcx,rdi
   14000217f:	call   QWORD PTR [rip+0x3b5a3]        # 0x14003d728
   140002185:	lea    rax,[rbp+0x1fc]
   14000218c:	mov    QWORD PTR [rsp+0x20],rax
   140002191:	mov    r9d,r15d
   140002194:	mov    r8,rsi
   140002197:	mov    edx,0x2
   14000219c:	mov    rcx,r12
   14000219f:	call   rdi
   1400021a1:	test   eax,eax
   1400021a3:	je     0x14000482e
   1400021a9:	mov    QWORD PTR [rbp+0x310],rsi
   1400021b0:	mov    QWORD PTR [rbp+0x2b0],r13
   1400021b7:	lea    rcx,[rbp+0x2b0]
   1400021be:	call   0x14000f08c
   1400021c3:	test   ebx,ebx
   1400021c5:	js     0x14000220d
   1400021c7:	mov    rcx,QWORD PTR [rbp+0x320]
   1400021ce:	test   rcx,rcx
   1400021d1:	je     0x140002206
   1400021d3:	lea    rdx,[rip+0x3c046]        # 0x14003e220
   1400021da:	call   0x1400156fe
   1400021df:	test   eax,eax
   1400021e1:	jne    0x140002206
   1400021e3:	mov    rcx,QWORD PTR [rbp+0x310]
   1400021ea:	test   rcx,rcx
   1400021ed:	je     0x140002206
   1400021ef:	lea    rdx,[rip+0x3bcda]        # 0x14003ded0
   1400021f6:	call   0x1400156fe
   1400021fb:	test   eax,eax
   1400021fd:	mov    ecx,0x1
   140002202:	cmove  r14d,ecx
   140002206:	mov    DWORD PTR [rbp+0x84],r14d
   14000220d:	lea    rcx,[rbp+0x310]
   140002214:	call   0x14000f08c
   140002219:	lea    rcx,[rbp+0x320]
   140002220:	call   0x14000f08c
   140002225:	test   ebx,ebx
   140002227:	js     0x140016f67
   14000222d:	mov    DWORD PTR [rbp+0x164],r13d
   140002234:	mov    edx,0x4
   140002239:	lea    ecx,[rdx+0x3c]
   14000223c:	call   QWORD PTR [rip+0x3afb6]        # 0x14003d1f8
   140002242:	mov    rdx,rax
   140002245:	lea    rcx,[rbp+0x250]
   14000224c:	call   0x14000138c
   140002251:	mov    rax,QWORD PTR [rbp+0x250]
   140002258:	mov    QWORD PTR [rbp+0x140],rax
   14000225f:	test   rax,rax
   140002262:	je     0x140016f73
   140002268:	mov    r12,r13
   14000226b:	mov    rsi,r13
   14000226e:	mov    QWORD PTR [rbp-0x80],r13
   140002272:	mov    DWORD PTR [rbp-0x60],r13d
   140002276:	xor    eax,eax
   140002278:	mov    QWORD PTR [rbp-0x5c],rax
   14000227c:	mov    DWORD PTR [rbp-0x54],eax
   14000227f:	mov    DWORD PTR [rbp+0x1e8],r13d
   140002286:	mov    DWORD PTR [rbp+0xe0],r13d
   14000228d:	mov    QWORD PTR [rbp+0xe4],rax
   140002294:	mov    DWORD PTR [rbp+0xec],eax
   14000229a:	mov    DWORD PTR [rbp+0x80],r13d
   1400022a1:	lea    rax,[rip+0x4c078]        # 0x14004e320
   1400022a8:	mov    QWORD PTR [rbp+0x600],rax
   1400022af:	mov    QWORD PTR [rbp+0x4b0],0xa0
   1400022ba:	call   QWORD PTR [rip+0x3af00]        # 0x14003d1c0
   1400022c0:	mov    rcx,rax
   1400022c3:	mov    edx,0x8
   1400022c8:	mov    r8d,0xa0
   1400022ce:	call   QWORD PTR [rip+0x3af04]        # 0x14003d1d8
   1400022d4:	mov    r14,rax
   1400022d7:	lea    rdi,[rip+0x4c18a]        # 0x14004e468
   1400022de:	test   rax,rax
   1400022e1:	je     0x140016f7e
   1400022e7:	mov    r8,QWORD PTR [rbp+0x4b0]
   1400022ee:	mov    rdx,QWORD PTR [rbp+0x600]
   1400022f5:	mov    rcx,rax
   1400022f8:	call   0x1400156f2
   1400022fd:	mov    r12,r14
   140002300:	mov    QWORD PTR [rsp+0x68],r14
   140002305:	mov    esi,DWORD PTR [rbp+0x4b0]
   14000230b:	mov    QWORD PTR [rbp+0x518],rdi
   140002312:	mov    QWORD PTR [rbp+0x4c0],0x8
   14000231d:	call   QWORD PTR [rip+0x3ae9d]        # 0x14003d1c0
   140002323:	mov    rcx,rax
   140002326:	mov    edx,0x8
   14000232b:	mov    r8d,edx
   14000232e:	call   QWORD PTR [rip+0x3aea4]        # 0x14003d1d8
   140002334:	mov    r13,rax
   140002337:	test   rax,rax
   14000233a:	je     0x140016f89
   140002340:	mov    r8,QWORD PTR [rbp+0x4c0]
   140002347:	mov    rdx,QWORD PTR [rbp+0x518]
   14000234e:	mov    rcx,rax
   140002351:	call   0x1400156f2
   140002356:	mov    QWORD PTR [rbp-0x80],r13
   14000235a:	mov    r12,QWORD PTR [rbp+0x4c0]
   140002361:	rdtsc  
   140002363:	shl    rdx,0x20
   140002367:	or     rax,rdx
   14000236a:	mov    QWORD PTR [rbp+0x4f8],rax
   140002371:	lea    r8,[rbp+0x2d4]
   140002378:	mov    edx,0x4
   14000237d:	mov    ecx,edx
   14000237f:	call   0x14000bad0
   140002384:	mov    r15d,eax
   140002387:	test   eax,eax
   140002389:	js     0x140016f98
   14000238f:	mov    edi,DWORD PTR [rbp+0x2d4]
   140002395:	mov    DWORD PTR [rbp+0x78],edi
   140002398:	test   eax,eax
   14000239a:	js     0x140017bff
   1400023a0:	mov    r9d,edi
   1400023a3:	lea    r8,[rbp+0x38c]
   1400023aa:	mov    edx,esi
   1400023ac:	call   0x14000bad0
   1400023b1:	mov    r15d,eax
   1400023b4:	test   eax,eax
   1400023b6:	js     0x140017beb
   1400023bc:	mov    edi,DWORD PTR [rbp+0x38c]
   1400023c2:	mov    DWORD PTR [rbp+0x78],edi
   1400023c5:	lea    r10d,[rdi+r9*1]
   1400023c9:	cmp    r10d,r9d
   1400023cc:	jb     0x140016fa0
   1400023d2:	xor    eax,eax
   1400023d4:	mov    r15d,eax
   1400023d7:	or     ebx,0xffffffff
   1400023da:	or     r15d,0x10000000
   1400023e1:	jl     0x140017bff
   1400023e7:	lea    r8,[rbp+0x394]
   1400023ee:	mov    edx,r12d
   1400023f1:	call   0x14000bad0
   1400023f6:	mov    r15d,eax
   1400023f9:	test   eax,eax
   1400023fb:	js     0x140017bff
   140002401:	mov    edi,DWORD PTR [rbp+0x394]
   140002407:	mov    DWORD PTR [rbp+0x78],edi
   14000240a:	lea    r9d,[rdi+r10*1]
   14000240e:	cmp    r9d,r10d
   140002411:	jb     0x140016fb1
   140002417:	xor    r10d,r10d
   14000241a:	mov    r15d,r10d
   14000241d:	or     r15d,0x10000000
   140002424:	jl     0x140017bff
   14000242a:	lea    r8,[rbp+0x434]
   140002431:	mov    edx,0x8
   140002436:	call   0x14000bad0
   14000243b:	mov    r15d,eax
   14000243e:	test   eax,eax
   140002440:	js     0x140017bff
   140002446:	mov    edi,DWORD PTR [rbp+0x434]
   14000244c:	mov    DWORD PTR [rbp+0x78],edi
   14000244f:	lea    r11d,[rdi+r9*1]
   140002453:	cmp    r11d,r9d
   140002456:	jb     0x140016fc2
   14000245c:	mov    r15d,r10d
   14000245f:	or     r15d,0x10000000
   140002466:	jl     0x140017bff
   14000246c:	lea    r8,[rbp+0x4d8]
   140002473:	call   0x14000bbd8
   140002478:	test   eax,eax
   14000247a:	js     0x140016fd0
   140002480:	mov    rax,QWORD PTR [rbp+0x4d8]
   140002487:	inc    rax
   14000248a:	mov    QWORD PTR [rbp+0x4d8],rax
   140002491:	lea    edx,[rax+rax*1]
   140002494:	lea    r8,[rbp+0x43c]
   14000249b:	mov    ecx,0x4
   1400024a0:	call   0x14000bad0
   1400024a5:	mov    r15d,eax
   1400024a8:	test   eax,eax
   1400024aa:	js     0x140017bff
   1400024b0:	mov    edi,DWORD PTR [rbp+0x43c]
   1400024b6:	mov    DWORD PTR [rbp+0x78],edi
   1400024b9:	lea    r9d,[rdi+r11*1]
   1400024bd:	cmp    r9d,r11d
   1400024c0:	jb     0x140016fdb
   1400024c6:	xor    r11d,r11d
   1400024c9:	mov    r15d,r11d
   1400024cc:	or     r15d,0x10000000
   1400024d3:	jl     0x140017bff
   1400024d9:	lea    r8,[rbp+0x444]
   1400024e0:	mov    edx,ecx
   1400024e2:	call   0x14000bad0
   1400024e7:	mov    r15d,eax
   1400024ea:	test   eax,eax
   1400024ec:	js     0x140017bff
   1400024f2:	mov    edi,DWORD PTR [rbp+0x444]
   1400024f8:	mov    DWORD PTR [rbp+0x78],edi
   1400024fb:	lea    r10d,[rdi+r9*1]
   1400024ff:	cmp    r10d,r9d
   140002502:	jb     0x140016fec
   140002508:	mov    r15d,r11d
   14000250b:	or     r15d,0x10000000
   140002512:	jl     0x140017bff
   140002518:	lea    r8,[rbp+0x44c]
   14000251f:	call   0x14000bad0
   140002524:	mov    r15d,eax
   140002527:	test   eax,eax
   140002529:	js     0x140017bff
   14000252f:	mov    edi,DWORD PTR [rbp+0x44c]
   140002535:	mov    DWORD PTR [rbp+0x78],edi
   140002538:	lea    eax,[rdi+r10*1]
   14000253c:	cmp    eax,r10d
   14000253f:	jb     0x140016ffa
   140002545:	mov    r15d,r11d
   140002548:	or     r15d,0x10000000
   14000254f:	jl     0x140017bff
   140002555:	mov    DWORD PTR [rbp-0x5c],eax
   140002558:	mov    edi,eax
   14000255a:	call   QWORD PTR [rip+0x3ac60]        # 0x14003d1c0
   140002560:	mov    rcx,rax
   140002563:	mov    r8d,edi
   140002566:	mov    edx,0x8
   14000256b:	call   QWORD PTR [rip+0x3ac67]        # 0x14003d1d8
   140002571:	mov    rbx,rax
   140002574:	test   rax,rax
   140002577:	je     0x140017007
   14000257d:	mov    QWORD PTR [rbp-0x58],rax
   140002581:	xor    r10d,r10d
   140002584:	mov    edi,r10d
   140002587:	mov    DWORD PTR [rbp-0x60],r10d
   14000258b:	mov    DWORD PTR [rbp+0x1c0],r10d
   140002592:	lea    rax,[rbp+0x1c0]
   140002599:	test   rax,rax
   14000259c:	je     0x14001701d
   1400025a2:	lea    rdx,[rbx+0x4]
   1400025a6:	cmp    rdx,rbx
   1400025a9:	jb     0x140017012
   1400025af:	mov    r15d,r10d
   1400025b2:	mov    ecx,DWORD PTR [rbp-0x5c]
   1400025b5:	add    rcx,rbx
   1400025b8:	lea    rax,[rbx+0x8]
   1400025bc:	cmp    rax,rcx
   1400025bf:	ja     0x140017bf9
   1400025c5:	mov    DWORD PTR [rbx],0x4
   1400025cb:	mov    eax,DWORD PTR [rbp+0x1c0]
   1400025d1:	mov    DWORD PTR [rdx],eax
   1400025d3:	mov    edi,DWORD PTR [rbp-0x60]
   1400025d6:	inc    edi
   1400025d8:	mov    DWORD PTR [rbp-0x60],edi
   1400025db:	test   r15d,r15d
   1400025de:	js     0x140017bff
   1400025e4:	test   esi,esi
   1400025e6:	je     0x14001707d
   1400025ec:	cmp    QWORD PTR [rbp-0x58],r10
   1400025f0:	je     0x140017028
   1400025f6:	mov    r9,QWORD PTR [rbp-0x58]
   1400025fa:	mov    r11d,r10d
   1400025fd:	test   edi,edi
   1400025ff:	je     0x14000264e
   140002601:	mov    r10d,DWORD PTR [rbp+0x14c]
   140002608:	lea    r8,[rbp+0x45c]
   14000260f:	mov    edx,DWORD PTR [r9]
   140002612:	mov    ecx,0x4
   140002617:	call   0x14000bad0
   14000261c:	mov    r15d,eax
   14000261f:	test   eax,eax
   140002621:	js     0x14000268e
   140002623:	mov    r10d,DWORD PTR [rbp+0x45c]
   14000262a:	mov    DWORD PTR [rbp+0x14c],r10d
   140002631:	mov    ecx,r10d
   140002634:	add    rcx,r9
   140002637:	cmp    rcx,r9
   14000263a:	jb     0x140017012
   140002640:	mov    r9,rcx
   140002643:	inc    r11d
   140002646:	cmp    r11d,edi
   140002649:	jb     0x140002608
   14000264b:	xor    r10d,r10d
   14000264e:	lea    rdi,[r9+0x4]
   140002652:	cmp    rdi,r9
   140002655:	jb     0x140017012
   14000265b:	mov    r15d,r10d
   14000265e:	mov    r8,rsi
   140002661:	mov    ecx,DWORD PTR [rbp-0x5c]
   140002664:	add    rcx,QWORD PTR [rbp-0x58]
   140002668:	lea    rax,[rsi+0x4]
   14000266c:	add    rax,r9
   14000266f:	cmp    rax,rcx
   140002672:	ja     0x140017bf9
   140002678:	mov    DWORD PTR [r9],esi
   14000267b:	mov    rdx,r14
   14000267e:	mov    rcx,rdi
   140002681:	call   0x1400156f2
   140002686:	mov    edi,DWORD PTR [rbp-0x60]
   140002689:	inc    edi
   14000268b:	mov    DWORD PTR [rbp-0x60],edi
   14000268e:	xor    r10d,r10d
   140002691:	test   r15d,r15d
   140002694:	js     0x140017bff
   14000269a:	test   r12d,r12d
   14000269d:	je     0x1400170e9
   1400026a3:	cmp    QWORD PTR [rbp-0x58],0x0
   1400026a8:	je     0x140017088
   1400026ae:	mov    rdx,QWORD PTR [rbp-0x58]
   1400026b2:	mov    r8d,r10d
   1400026b5:	test   edi,edi
   1400026b7:	je     0x1400026fb
   1400026b9:	mov    ecx,DWORD PTR [rbp+0x148]
   1400026bf:	mov    eax,DWORD PTR [rdx]
   1400026c1:	add    eax,0x4
   1400026c4:	cmp    eax,0x4
   1400026c7:	jb     0x1400170de
   1400026cd:	mov    ecx,eax
   1400026cf:	mov    r15d,r10d
   1400026d2:	mov    DWORD PTR [rbp+0x148],eax
   1400026d8:	test   r15d,r15d
   1400026db:	js     0x140017bff
   1400026e1:	mov    r9d,ecx
   1400026e4:	add    r9,rdx
   1400026e7:	cmp    r9,rdx
   1400026ea:	jb     0x140017012
   1400026f0:	mov    rdx,r9
   1400026f3:	inc    r8d
   1400026f6:	cmp    r8d,edi
   1400026f9:	jb     0x1400026bf
   1400026fb:	lea    rdi,[rdx+0x4]
   1400026ff:	cmp    rdi,rdx
   140002702:	jb     0x140017012
   140002708:	mov    r15d,r10d
   14000270b:	mov    r8d,r12d
   14000270e:	mov    ecx,DWORD PTR [rbp-0x5c]
   140002711:	add    rcx,QWORD PTR [rbp-0x58]
   140002715:	lea    rax,[r8+0x4]
   140002719:	add    rax,rdx
   14000271c:	cmp    rax,rcx
   14000271f:	ja     0x140017bf9
   140002725:	mov    DWORD PTR [rdx],r12d
   140002728:	mov    rdx,r13
   14000272b:	mov    rcx,rdi
   14000272e:	call   0x1400156f2
   140002733:	mov    edi,DWORD PTR [rbp-0x60]
   140002736:	inc    edi
   140002738:	mov    DWORD PTR [rbp-0x60],edi
   14000273b:	test   r15d,r15d
   14000273e:	js     0x140017bff
   140002744:	mov    rax,QWORD PTR [rbp+0x4f8]
   14000274b:	mov    QWORD PTR [rbp+0x4e8],rax
   140002752:	lea    rax,[rbp+0x4e8]
   140002759:	test   rax,rax
   14000275c:	je     0x14001715d
   140002762:	cmp    QWORD PTR [rbp-0x58],0x0
   140002767:	je     0x1400170f4
   14000276d:	mov    rdx,QWORD PTR [rbp-0x58]
   140002771:	xor    r13d,r13d
   140002774:	mov    r9d,r13d
   140002777:	test   edi,edi
   140002779:	je     0x1400027bd
   14000277b:	mov    ecx,DWORD PTR [rbp+0x13c]
   140002781:	mov    eax,DWORD PTR [rdx]
   140002783:	add    eax,0x4
   140002786:	cmp    eax,0x4
   140002789:	jb     0x140017140
   14000278f:	mov    ecx,eax
   140002791:	mov    r15d,r13d
   140002794:	mov    DWORD PTR [rbp+0x13c],eax
   14000279a:	test   r15d,r15d
   14000279d:	js     0x1400172dd
   1400027a3:	mov    r8d,ecx
   1400027a6:	add    r8,rdx
   1400027a9:	cmp    r8,rdx
   1400027ac:	jb     0x1400172e9
   1400027b2:	mov    rdx,r8
   1400027b5:	inc    r9d
   1400027b8:	cmp    r9d,edi
   1400027bb:	jb     0x140002781
   1400027bd:	lea    rdi,[rdx+0x4]
   1400027c1:	cmp    rdi,rdx
   1400027c4:	jb     0x1400172e9
   1400027ca:	mov    r15d,r13d
   1400027cd:	mov    ecx,DWORD PTR [rbp-0x5c]
   1400027d0:	add    rcx,QWORD PTR [rbp-0x58]
   1400027d4:	lea    rax,[rdx+0xc]
   1400027d8:	cmp    rax,rcx
   1400027db:	ja     0x14001714b
   1400027e1:	mov    DWORD PTR [rdx],0x8
   1400027e7:	movsd  xmm0,QWORD PTR [rbp+0x4e8]
   1400027ef:	movsd  QWORD PTR [rdi],xmm0
   1400027f3:	inc    DWORD PTR [rbp-0x60]
   1400027f6:	test   r15d,r15d
   1400027f9:	js     0x1400172dd
   1400027ff:	lea    r8,[rbp+0x268]
   140002806:	call   0x14000bb10
   14000280b:	test   eax,eax
   14000280d:	js     0x14001716b
   140002813:	mov    rax,QWORD PTR [rbp+0x268]
   14000281a:	lea    rcx,[rax+0x1]
   14000281e:	cmp    rcx,rax
   140002821:	jb     0x140017bd4
   140002827:	mov    QWORD PTR [rbp+0x268],rcx
   14000282e:	lea    r9d,[rcx+rcx*1]
   140002832:	test   r9d,r9d
   140002835:	je     0x1400171f9
   14000283b:	cmp    QWORD PTR [rbp-0x58],0x0
   140002840:	je     0x140017184
   140002846:	mov    rdx,QWORD PTR [rbp-0x58]
   14000284a:	mov    r8d,r13d
   14000284d:	cmp    DWORD PTR [rbp-0x60],0x0
   140002851:	jbe    0x140002895
   140002853:	mov    edi,DWORD PTR [rbp+0x158]
   140002859:	mov    eax,DWORD PTR [rdx]
   14000285b:	add    eax,0x4
   14000285e:	cmp    eax,0x4
   140002861:	jb     0x1400171d8
   140002867:	mov    edi,eax
   140002869:	mov    r15d,r13d
   14000286c:	mov    DWORD PTR [rbp+0x158],eax
   140002872:	test   r15d,r15d
   140002875:	js     0x140017be5
   14000287b:	mov    ecx,edi
   14000287d:	add    rcx,rdx
   140002880:	cmp    rcx,rdx
   140002883:	jb     0x1400171ee
   140002889:	mov    rdx,rcx
   14000288c:	inc    r8d
   14000288f:	cmp    r8d,DWORD PTR [rbp-0x60]
   140002893:	jb     0x140002859
   140002895:	lea    rdi,[rdx+0x4]
   140002899:	cmp    rdi,rdx
   14000289c:	jb     0x1400171ee
   1400028a2:	mov    r15d,r13d
   1400028a5:	mov    r8d,r9d
   1400028a8:	mov    ecx,DWORD PTR [rbp-0x5c]
   1400028ab:	add    rcx,QWORD PTR [rbp-0x58]
   1400028af:	lea    rax,[r9+0x4]
   1400028b3:	add    rax,rdx
   1400028b6:	cmp    rax,rcx
   1400028b9:	ja     0x1400171e3
   1400028bf:	mov    DWORD PTR [rdx],r9d
   1400028c2:	lea    rdx,[rip+0x3c1c7]        # 0x14003ea90
   1400028c9:	mov    rcx,rdi
   1400028cc:	call   0x1400156f2
   1400028d1:	inc    DWORD PTR [rbp-0x60]
   1400028d4:	test   r15d,r15d
   1400028d7:	js     0x140017be5
   1400028dd:	mov    eax,DWORD PTR [rbp+0x84]
   1400028e3:	mov    DWORD PTR [rbp+0x230],eax
   1400028e9:	lea    rax,[rbp+0x230]
   1400028f0:	test   rax,rax
   1400028f3:	je     0x140017271
   1400028f9:	cmp    QWORD PTR [rbp-0x58],0x0
   1400028fe:	je     0x140017204
   140002904:	mov    rdx,QWORD PTR [rbp-0x58]
   140002908:	mov    r8d,r13d
   14000290b:	cmp    DWORD PTR [rbp-0x60],0x0
   14000290f:	jbe    0x14000295c
   140002911:	mov    edi,DWORD PTR [rbp+0x194]
   140002917:	nop    WORD PTR [rax+rax*1+0x0]
   140002920:	mov    eax,DWORD PTR [rdx]
   140002922:	add    eax,0x4
   140002925:	cmp    eax,0x4
   140002928:	jb     0x140017254
   14000292e:	mov    edi,eax
   140002930:	mov    r15d,r13d
   140002933:	mov    DWORD PTR [rbp+0x194],eax
   140002939:	test   r15d,r15d
   14000293c:	js     0x140017b6b
   140002942:	mov    ecx,edi
   140002944:	add    rcx,rdx
   140002947:	cmp    rcx,rdx
   14000294a:	jb     0x1400172e9
   140002950:	mov    rdx,rcx
   140002953:	inc    r8d
   140002956:	cmp    r8d,DWORD PTR [rbp-0x60]
   14000295a:	jb     0x140002920
   14000295c:	lea    rdi,[rdx+0x4]
   140002960:	cmp    rdi,rdx
   140002963:	jb     0x1400172e9
   140002969:	mov    r15d,r13d
   14000296c:	mov    ecx,DWORD PTR [rbp-0x5c]
   14000296f:	add    rcx,QWORD PTR [rbp-0x58]
   140002973:	lea    rax,[rdx+0x8]
   140002977:	cmp    rax,rcx
   14000297a:	ja     0x14001725f
   140002980:	mov    DWORD PTR [rdx],0x4
   140002986:	mov    eax,DWORD PTR [rbp+0x230]
   14000298c:	mov    DWORD PTR [rdi],eax
   14000298e:	inc    DWORD PTR [rbp-0x60]
   140002991:	test   r15d,r15d
   140002994:	js     0x140017b6b
   14000299a:	mov    DWORD PTR [rbp+0x1d0],0x4
   1400029a4:	lea    rax,[rbp+0x1d0]
   1400029ab:	test   rax,rax
   1400029ae:	je     0x1400172fb
   1400029b4:	cmp    QWORD PTR [rbp-0x58],0x0
   1400029b9:	je     0x14001727c
   1400029bf:	mov    rdx,QWORD PTR [rbp-0x58]
   1400029c3:	mov    r8d,r13d
   1400029c6:	cmp    DWORD PTR [rbp-0x60],0x0
   1400029ca:	jbe    0x140002a0e
   1400029cc:	mov    edi,DWORD PTR [rbp+0x15c]
   1400029d2:	mov    eax,DWORD PTR [rdx]
   1400029d4:	add    eax,0x4
   1400029d7:	cmp    eax,0x4
   1400029da:	jb     0x1400172cc
   1400029e0:	mov    edi,eax
   1400029e2:	mov    r15d,r13d
   1400029e5:	mov    DWORD PTR [rbp+0x15c],eax
   1400029eb:	test   r15d,r15d
   1400029ee:	js     0x140017b6b
   1400029f4:	mov    ecx,edi
   1400029f6:	add    rcx,rdx
   1400029f9:	cmp    rcx,rdx
   1400029fc:	jb     0x1400172e9
   140002a02:	mov    rdx,rcx
   140002a05:	inc    r8d
   140002a08:	cmp    r8d,DWORD PTR [rbp-0x60]
   140002a0c:	jb     0x1400029d2
   140002a0e:	lea    rdi,[rdx+0x4]
   140002a12:	cmp    rdi,rdx
   140002a15:	jb     0x1400172e9
   140002a1b:	mov    r15d,r13d
   140002a1e:	mov    ecx,DWORD PTR [rbp-0x5c]
   140002a21:	add    rcx,QWORD PTR [rbp-0x58]
   140002a25:	lea    rax,[rdx+0x8]
   140002a29:	cmp    rax,rcx
   140002a2c:	ja     0x1400172d7
   140002a32:	mov    DWORD PTR [rdx],0x4
   140002a38:	mov    eax,DWORD PTR [rbp+0x1d0]
   140002a3e:	mov    DWORD PTR [rdi],eax
   140002a40:	inc    DWORD PTR [rbp-0x60]
   140002a43:	test   r15d,r15d
   140002a46:	js     0x140017b6b
   140002a4c:	lea    r8,[rbp+0x368]
   140002a53:	mov    edx,0x4
   140002a58:	mov    ecx,edx
   140002a5a:	call   0x14000bad0
   140002a5f:	mov    r15d,eax
   140002a62:	test   eax,eax
   140002a64:	js     0x140017306
   140002a6a:	mov    edi,DWORD PTR [rbp+0x368]
   140002a70:	mov    DWORD PTR [rbp+0x88],edi
   140002a76:	test   eax,eax
   140002a78:	js     0x140017311
   140002a7e:	mov    r9d,edi
   140002a81:	mov    DWORD PTR [rbp+0x5c],edi
   140002a84:	lea    r8,[rbp+0x418]
   140002a8b:	mov    edx,0x8
   140002a90:	call   0x14000bad0
   140002a95:	mov    r15d,eax
   140002a98:	test   eax,eax
   140002a9a:	js     0x140017311
   140002aa0:	mov    edi,DWORD PTR [rbp+0x418]
   140002aa6:	mov    DWORD PTR [rbp+0x88],edi
   140002aac:	lea    r8,[rbp+0x5c]
   140002ab0:	mov    edx,edi
   140002ab2:	mov    ecx,r9d
   140002ab5:	call   0x14000bad0
   140002aba:	mov    r15d,eax
   140002abd:	test   eax,eax
   140002abf:	js     0x140017311
   140002ac5:	lea    r8,[rbp+0x3c8]
   140002acc:	mov    edx,0x4
   140002ad1:	mov    ecx,edx
   140002ad3:	call   0x14000bad0
   140002ad8:	mov    r15d,eax
   140002adb:	test   eax,eax
   140002add:	js     0x140017311
   140002ae3:	mov    edi,DWORD PTR [rbp+0x3c8]
   140002ae9:	mov    DWORD PTR [rbp+0x88],edi
   140002aef:	lea    r8,[rbp+0x5c]
   140002af3:	mov    edx,edi
   140002af5:	mov    ecx,DWORD PTR [rbp+0x5c]
   140002af8:	call   0x14000bad0
   140002afd:	mov    r15d,eax
   140002b00:	test   eax,eax
   140002b02:	js     0x140017311
   140002b08:	lea    r8,[rbp+0x478]
   140002b0f:	mov    edx,0x4
   140002b14:	mov    ecx,edx
   140002b16:	call   0x14000bad0
   140002b1b:	mov    r15d,eax
   140002b1e:	test   eax,eax
   140002b20:	js     0x140017311
   140002b26:	mov    edi,DWORD PTR [rbp+0x478]
   140002b2c:	mov    DWORD PTR [rbp+0x88],edi
   140002b32:	lea    r8,[rbp+0x5c]
   140002b36:	mov    edx,edi
   140002b38:	mov    ecx,DWORD PTR [rbp+0x5c]
   140002b3b:	call   0x14000bad0
   140002b40:	mov    r15d,eax
   140002b43:	test   eax,eax
   140002b45:	js     0x140017311
   140002b4b:	lea    r8,[rbp+0x2f0]
   140002b52:	mov    edx,0x4
   140002b57:	mov    ecx,edx
   140002b59:	call   0x14000bad0
   140002b5e:	mov    r15d,eax
   140002b61:	test   eax,eax
   140002b63:	js     0x140017311
   140002b69:	mov    edi,DWORD PTR [rbp+0x2f0]
   140002b6f:	mov    DWORD PTR [rbp+0x88],edi
   140002b75:	lea    r8,[rbp+0x5c]
   140002b79:	mov    edx,edi
   140002b7b:	mov    ecx,DWORD PTR [rbp+0x5c]
   140002b7e:	call   0x14000bad0
   140002b83:	mov    r15d,eax
   140002b86:	test   eax,eax
   140002b88:	js     0x140017311
   140002b8e:	lea    r8,[rbp+0x3d8]
   140002b95:	mov    edx,0x4
   140002b9a:	mov    ecx,edx
   140002b9c:	call   0x14000bad0
   140002ba1:	mov    r15d,eax
   140002ba4:	test   eax,eax
   140002ba6:	js     0x140017311
   140002bac:	mov    edi,DWORD PTR [rbp+0x3d8]
   140002bb2:	mov    DWORD PTR [rbp+0x88],edi
   140002bb8:	lea    r8,[rbp+0x5c]
   140002bbc:	mov    edx,edi
   140002bbe:	mov    ecx,DWORD PTR [rbp+0x5c]
   140002bc1:	call   0x14000bad0
   140002bc6:	mov    r15d,eax
   140002bc9:	test   eax,eax
   140002bcb:	js     0x140017311
   140002bd1:	mov    r14d,DWORD PTR [rbp+0x5c]
   140002bd5:	mov    DWORD PTR [rbp+0x50],r14d
   140002bd9:	test   r15d,r15d
   140002bdc:	js     0x140017b6b
   140002be2:	mov    rdi,r13
   140002be5:	mov    QWORD PTR [rbp-0x40],r13
   140002be9:	mov    ebx,r13d
   140002bec:	mov    QWORD PTR [rbp+0x290],r13
   140002bf3:	mov    QWORD PTR [rbp-0x78],r13
   140002bf7:	xor    r9d,r9d
   140002bfa:	mov    esi,r9d
   140002bfd:	mov    DWORD PTR [rbp-0x70],r9d
   140002c01:	mov    QWORD PTR [rbp-0x48],r9
   140002c05:	mov    DWORD PTR [rbp+0x74],r9d
   140002c09:	mov    r12d,r9d
   140002c0c:	mov    QWORD PTR [rsp+0x70],r9
   140002c11:	mov    QWORD PTR [rbp-0x68],r9
   140002c15:	mov    DWORD PTR [rbp+0xa8],r9d
   140002c1c:	mov    QWORD PTR [rbp+0x480],r9
   140002c23:	rdtsc  
   140002c25:	shl    rdx,0x20
   140002c29:	or     rax,rdx
   140002c2c:	mov    QWORD PTR [rbp+0x480],rax
   140002c33:	mov    DWORD PTR [rbp+0xc0],0x8
   140002c3d:	lea    r8,[rbp+0xc0]
   140002c44:	mov    edx,DWORD PTR [rbp-0x5c]
   140002c47:	lea    ecx,[r9+0x8]
   140002c4b:	call   0x14000bad0
   140002c50:	mov    r15d,eax
   140002c53:	test   eax,eax
   140002c55:	js     0x140002d1c
   140002c5b:	mov    eax,DWORD PTR [rbp+0xc0]
   140002c61:	lea    rcx,[rax+0x7]
   140002c65:	and    ecx,0xfffffff8
   140002c68:	cmp    ecx,eax
   140002c6a:	jb     0x14001731a
   140002c70:	mov    DWORD PTR [rbp+0xc0],ecx
   140002c76:	mov    edi,ecx
   140002c78:	call   QWORD PTR [rip+0x3a542]        # 0x14003d1c0
   140002c7e:	mov    rcx,rax
   140002c81:	mov    r8d,edi
   140002c84:	lea    edx,[r12+0x8]
   140002c89:	call   QWORD PTR [rip+0x3a549]        # 0x14003d1d8
   140002c8f:	mov    rdi,rax
   140002c92:	test   rax,rax
   140002c95:	je     0x140017325
   140002c9b:	mov    QWORD PTR [rbp+0x280],rax
   140002ca2:	mov    eax,DWORD PTR [rbp-0x60]
   140002ca5:	mov    DWORD PTR [rdi],eax
   140002ca7:	lea    r8,[rbp+0x280]
   140002cae:	lea    edx,[r12+0x4]
   140002cb3:	mov    rcx,rdi
   140002cb6:	call   0x14000baf0
   140002cbb:	mov    r15d,eax
   140002cbe:	test   eax,eax
   140002cc0:	js     0x14001732d
   140002cc6:	mov    rcx,QWORD PTR [rbp+0x280]
   140002ccd:	mov    eax,DWORD PTR [rbp-0x5c]
   140002cd0:	mov    DWORD PTR [rcx],eax
   140002cd2:	lea    r8,[rbp+0x280]
   140002cd9:	call   0x14000baf0
   140002cde:	mov    r15d,eax
   140002ce1:	test   eax,eax
   140002ce3:	js     0x14001732d
   140002ce9:	mov    ecx,DWORD PTR [rbp+0xc0]
   140002cef:	mov    rax,QWORD PTR [rbp+0x480]
   140002cf6:	mov    QWORD PTR [rcx+rdi*1-0x8],rax
   140002cfb:	mov    r8d,DWORD PTR [rbp-0x5c]
   140002cff:	mov    rdx,QWORD PTR [rbp-0x58]
   140002d03:	mov    rcx,QWORD PTR [rbp+0x280]
   140002d0a:	call   0x1400156f2
   140002d0f:	mov    QWORD PTR [rbp-0x40],rdi
   140002d13:	mov    ebx,DWORD PTR [rbp+0xc0]
   140002d19:	xor    r9d,r9d
   140002d1c:	or     r15d,0x10000000
   140002d23:	jl     0x140004029
   140002d29:	mov    QWORD PTR [rbp+0x538],r9
   140002d30:	mov    QWORD PTR [rbp+0x558],r9
   140002d37:	mov    QWORD PTR [rbp+0x568],r9
   140002d3e:	mov    QWORD PTR [rbp+0x660],r9
   140002d45:	mov    QWORD PTR [rbp+0x330],r9
   140002d4c:	mov    QWORD PTR [rbp+0x528],r9
   140002d53:	mov    r12,r9
   140002d56:	mov    QWORD PTR [rbp+0x90],r9
   140002d5d:	test   rdi,rdi
   140002d60:	je     0x140017349
   140002d66:	mov    r13d,ebx
   140002d69:	mov    QWORD PTR [rbp-0x50],r13
   140002d6d:	test   ebx,ebx
   140002d6f:	je     0x1400174c3
   140002d75:	lea    rcx,[r13+0x8]
   140002d79:	call   0x14000f134
   140002d7e:	mov    r9,rax
   140002d81:	mov    QWORD PTR [rbp-0x8],rax
   140002d85:	test   rax,rax
   140002d88:	je     0x1400174c3
   140002d8e:	xor    dl,dl
   140002d90:	xor    r10d,r10d
   140002d93:	mov    ecx,r10d
   140002d96:	test   ebx,ebx
   140002d98:	je     0x140002da5
   140002d9a:	xor    dl,BYTE PTR [rcx+rdi*1]
   140002d9d:	inc    rcx
   140002da0:	cmp    rcx,r13
   140002da3:	jb     0x140002d9a
   140002da5:	mov    r14,rdi
   140002da8:	mov    rsi,rax
   140002dab:	mov    r8d,r10d
   140002dae:	mov    DWORD PTR [rbp+0x8],r10d
   140002db2:	or     ebx,0xffffffff
   140002db5:	mov    DWORD PTR [rbp-0x28],ebx
   140002db8:	mov    DWORD PTR [rsp+0x60],r10d
   140002dbd:	mov    DWORD PTR [rbp+0x0],r10d
   140002dc1:	mov    rdi,r13
   140002dc4:	and    edi,0x7
   140002dc7:	jne    0x140017354
   140002dcd:	mov    r15,r13
   140002dd0:	shr    r15,0x3
   140002dd4:	test   r15,r15
   140002dd7:	je     0x140003114
   140002ddd:	add    rsi,0x7
   140002de1:	add    r14,0x2
   140002de5:	mov    r12d,DWORD PTR [rsp+0x60]
   140002dea:	mov    r13d,DWORD PTR [rbp+0x0]
   140002dee:	xchg   ax,ax
   140002df0:	movzx  r11d,BYTE PTR [r14-0x2]
   140002df5:	shl    r11d,0x8
   140002df9:	movzx  eax,BYTE PTR [r14-0x1]
   140002dfe:	or     r11d,eax
   140002e01:	shl    r11d,0x8
   140002e05:	movzx  eax,BYTE PTR [r14]
   140002e09:	or     r11d,eax
   140002e0c:	shl    r11d,0x8
   140002e10:	movzx  eax,BYTE PTR [r14+0x1]
   140002e15:	or     r11d,eax
   140002e18:	movzx  r10d,BYTE PTR [r14+0x2]
   140002e1d:	shl    r10d,0x8
   140002e21:	movzx  eax,BYTE PTR [r14+0x3]
   140002e26:	or     r10d,eax
   140002e29:	shl    r10d,0x8
   140002e2d:	movzx  eax,BYTE PTR [r14+0x4]
   140002e32:	or     r10d,eax
   140002e35:	shl    r10d,0x8
   140002e39:	movzx  eax,BYTE PTR [r14+0x5]
   140002e3e:	or     r10d,eax
   140002e41:	xor    ebx,r10d
   140002e44:	lea    r14,[r14+0x8]
   140002e48:	mov    edi,ebx
   140002e4a:	ror    edi,0xc
   140002e4d:	mov    eax,ebx
   140002e4f:	xor    eax,0xc221
   140002e54:	imul   ecx,eax,0x844b
   140002e5a:	sub    ecx,edi
   140002e5c:	xor    ecx,r11d
   140002e5f:	xor    r8d,ecx
   140002e62:	mov    eax,r8d
   140002e65:	xor    eax,0x3af61d2e
   140002e6a:	ror    eax,1
   140002e6c:	mov    ecx,r8d
   140002e6f:	rol    ecx,0xf
   140002e72:	imul   eax,eax,0xc221
   140002e78:	xor    ecx,eax
   140002e7a:	xor    ebx,ecx
   140002e7c:	mov    edi,ebx
   140002e7e:	ror    edi,0xd
   140002e81:	mov    eax,ebx
   140002e83:	xor    eax,0x3af6
   140002e88:	imul   ecx,eax,0x1d2e
   140002e8e:	add    edi,ecx
   140002e90:	xor    r8d,edi
   140002e93:	mov    eax,r8d
   140002e96:	xor    eax,0x1d2e
   140002e9b:	rol    eax,0x2
   140002e9e:	mov    ecx,r8d
   140002ea1:	rol    ecx,0x3
   140002ea4:	imul   eax,eax,0x3af6
   140002eaa:	add    ecx,eax
   140002eac:	xor    ebx,ecx
   140002eae:	mov    eax,ebx
   140002eb0:	not    eax
   140002eb2:	ror    eax,0xa
   140002eb5:	add    eax,0x844b
   140002eba:	imul   eax,eax,0x3af6
   140002ec0:	xor    r8d,eax
   140002ec3:	mov    eax,r8d
   140002ec6:	xor    eax,0x3af61d2e
   140002ecb:	rol    eax,0x4
   140002ece:	mov    ecx,r8d
   140002ed1:	shr    ecx,0x5
   140002ed4:	imul   eax,eax,0xc221
   140002eda:	sub    eax,ecx
   140002edc:	xor    ebx,eax
   140002ede:	mov    eax,ebx
   140002ee0:	xor    eax,0x3af6
   140002ee5:	rol    eax,1
   140002ee7:	imul   ecx,eax,0x1d2e
   140002eed:	mov    eax,ebx
   140002eef:	shr    eax,1
   140002ef1:	add    ecx,eax
   140002ef3:	xor    r8d,ecx
   140002ef6:	mov    eax,r8d
   140002ef9:	xor    eax,0xc221
   140002efe:	rol    eax,0x7
   140002f01:	mov    ecx,r8d
   140002f04:	ror    ecx,0xb
   140002f07:	imul   eax,eax,0x3af6
   140002f0d:	xor    ecx,eax
   140002f0f:	xor    ebx,ecx
   140002f11:	lea    eax,[rbx-0xc221]
   140002f17:	imul   ecx,eax,0x844b
   140002f1d:	mov    eax,ebx
   140002f1f:	shr    eax,0xf
   140002f22:	sub    ecx,eax
   140002f24:	xor    r8d,ecx
   140002f27:	mov    eax,r8d
   140002f2a:	ror    eax,0xa
   140002f2d:	sub    eax,0xc221
   140002f32:	imul   eax,eax,0x1d2e
   140002f38:	xor    ebx,eax
   140002f3a:	mov    r9d,ebx
   140002f3d:	xor    r9d,r8d
   140002f40:	xor    r9d,0xf8d79965
   140002f47:	lea    r8d,[r9-0x3af6]
   140002f4e:	xor    r8d,ebx
   140002f51:	xor    r8d,0xc221844b
   140002f58:	lea    eax,[r8-0x3af6a179]
   140002f5f:	xor    r9d,eax
   140002f62:	lea    eax,[r8-0x1d2e]
   140002f69:	rol    eax,0x3
   140002f6c:	mov    ecx,r8d
   140002f6f:	shr    ecx,0xf
   140002f72:	imul   eax,eax,0x844b
   140002f78:	xor    ecx,eax
   140002f7a:	xor    r9d,ecx
   140002f7d:	lea    eax,[r9-0x1d2e]
   140002f84:	imul   ecx,eax,0xc221
   140002f8a:	mov    eax,r9d
   140002f8d:	shr    eax,0xd
   140002f90:	sub    ecx,eax
   140002f92:	xor    r8d,ecx
   140002f95:	mov    eax,0xc221844b
   140002f9a:	sub    eax,r8d
   140002f9d:	ror    eax,0x9
   140002fa0:	mov    ecx,r8d
   140002fa3:	ror    ecx,0xb
   140002fa6:	imul   eax,eax,0x1d2e
   140002fac:	xor    ecx,eax
   140002fae:	xor    r9d,ecx
   140002fb1:	lea    eax,[r9+0x3dde40bf]
   140002fb8:	xor    r8d,eax
   140002fbb:	mov    edi,r8d
   140002fbe:	ror    edi,0x7
   140002fc1:	mov    eax,r8d
   140002fc4:	xor    eax,0xc221
   140002fc9:	imul   ecx,eax,0x844b
   140002fcf:	sub    ecx,edi
   140002fd1:	xor    r9d,ecx
   140002fd4:	mov    eax,r9d
   140002fd7:	xor    eax,0x3af6
   140002fdc:	rol    eax,0x4
   140002fdf:	mov    ecx,r9d
   140002fe2:	ror    ecx,0x10
   140002fe5:	imul   eax,eax,0xc221
   140002feb:	sub    eax,ecx
   140002fed:	xor    r8d,eax
   140002ff0:	mov    eax,0xc221844b
   140002ff5:	sub    eax,r8d
   140002ff8:	ror    eax,0xa
   140002ffb:	mov    ecx,r8d
   140002ffe:	ror    ecx,0x4
   140003001:	imul   eax,eax,0x1d2e
   140003007:	add    ecx,eax
   140003009:	xor    r9d,ecx
   14000300c:	lea    eax,[r9+0x3dde7bb5]
   140003013:	ror    eax,0x4
   140003016:	mov    ecx,r9d
   140003019:	ror    ecx,0x9
   14000301c:	imul   eax,eax,0x3af6
   140003022:	xor    ecx,eax
   140003024:	xor    r8d,ecx
   140003027:	mov    eax,r8d
   14000302a:	xor    eax,0x3af61d2e
   14000302f:	rol    eax,0x8
   140003032:	mov    ecx,r8d
   140003035:	rol    ecx,0x2
   140003038:	imul   eax,eax,0x844b
   14000303e:	sub    eax,ecx
   140003040:	xor    r9d,eax
   140003043:	mov    eax,0x3af61d2e
   140003048:	sub    eax,r9d
   14000304b:	ror    eax,0xb
   14000304e:	mov    ecx,r9d
   140003051:	ror    ecx,0xc
   140003054:	imul   eax,eax,0xc221
   14000305a:	sub    eax,ecx
   14000305c:	xor    r8d,eax
   14000305f:	mov    eax,r8d
   140003062:	xor    eax,0xc221
   140003067:	imul   ecx,eax,0x1d2e
   14000306d:	mov    eax,r8d
   140003070:	shr    eax,0x8
   140003073:	xor    ecx,eax
   140003075:	xor    r9d,ecx
   140003078:	xor    r8d,r9d
   14000307b:	xor    r8d,0xf8d79965
   140003082:	xor    r9d,r13d
   140003085:	mov    DWORD PTR [rbp+0x8],r9d
   140003089:	xor    r8d,r12d
   14000308c:	mov    DWORD PTR [rbp-0x28],r8d
   140003090:	mov    BYTE PTR [rsi-0x4],r9b
   140003094:	ror    DWORD PTR [rbp+0x8],0x8
   140003098:	movzx  eax,BYTE PTR [rbp-0x28]
   14000309c:	mov    BYTE PTR [rsi],al
   14000309e:	ror    DWORD PTR [rbp-0x28],0x8
   1400030a2:	movzx  eax,BYTE PTR [rbp+0x8]
   1400030a6:	mov    BYTE PTR [rsi-0x5],al
   1400030a9:	ror    DWORD PTR [rbp+0x8],0x8
   1400030ad:	movzx  eax,BYTE PTR [rbp-0x28]
   1400030b1:	mov    BYTE PTR [rsi-0x1],al
   1400030b4:	ror    DWORD PTR [rbp-0x28],0x8
   1400030b8:	movzx  eax,BYTE PTR [rbp+0x8]
   1400030bc:	mov    BYTE PTR [rsi-0x6],al
   1400030bf:	ror    DWORD PTR [rbp+0x8],0x8
   1400030c3:	movzx  eax,BYTE PTR [rbp-0x28]
   1400030c7:	mov    BYTE PTR [rsi-0x2],al
   1400030ca:	ror    DWORD PTR [rbp-0x28],0x8
   1400030ce:	movzx  eax,BYTE PTR [rbp+0x8]
   1400030d2:	mov    BYTE PTR [rsi-0x7],al
   1400030d5:	movzx  eax,BYTE PTR [rbp-0x28]
   1400030d9:	mov    BYTE PTR [rsi-0x3],al
   1400030dc:	mov    r8d,DWORD PTR [rbp+0x8]
   1400030e0:	ror    r8d,0x8
   1400030e4:	mov    DWORD PTR [rbp+0x8],r8d
   1400030e8:	mov    ebx,DWORD PTR [rbp-0x28]
   1400030eb:	ror    ebx,0x8
   1400030ee:	mov    DWORD PTR [rbp-0x28],ebx
   1400030f1:	mov    r13d,r11d
   1400030f4:	mov    r12d,r10d
   1400030f7:	lea    rsi,[rsi+0x8]
   1400030fb:	sub    r15,0x1
   1400030ff:	jne    0x140002df0
   140003105:	mov    r13,QWORD PTR [rbp-0x50]
   140003109:	mov    r12,QWORD PTR [rbp+0x90]
   140003110:	mov    r9,QWORD PTR [rbp-0x8]
   140003114:	movzx  eax,dl
   140003117:	mov    QWORD PTR [r9+r13*1],rax
   14000311b:	mov    QWORD PTR [rbp+0x330],r9
   140003122:	lea    rbx,[r13+0x8]
   140003126:	mov    QWORD PTR [rbp+0x528],rbx
   14000312d:	lea    rax,[rip+0x4b32c]        # 0x14004e460
   140003134:	mov    QWORD PTR [rbp+0x538],rax
   14000313b:	mov    QWORD PTR [rbp+0x558],0x8
   140003146:	lea    rsi,[rip+0x4b273]        # 0x14004e3c0
   14000314d:	mov    QWORD PTR [rbp+0x568],rsi
   140003154:	mov    QWORD PTR [rbp+0x660],0xa0
   14000315f:	call   QWORD PTR [rip+0x3a05b]        # 0x14003d1c0
   140003165:	mov    rcx,rax
   140003168:	mov    edx,0x8
   14000316d:	lea    r8d,[rdx+0x28]
   140003171:	call   QWORD PTR [rip+0x3a061]        # 0x14003d1d8
   140003177:	mov    rdi,rax
   14000317a:	test   rax,rax
   14000317d:	je     0x14001742a
   140003183:	mov    DWORD PTR [rax],ebx
   140003185:	mov    ebx,ebx
   140003187:	call   QWORD PTR [rip+0x3a033]        # 0x14003d1c0
   14000318d:	mov    rcx,rax
   140003190:	mov    r8d,ebx
   140003193:	mov    edx,0x8
   140003198:	call   QWORD PTR [rip+0x3a03a]        # 0x14003d1d8
   14000319e:	test   rax,rax
   1400031a1:	je     0x140017438
   1400031a7:	mov    QWORD PTR [rdi+0x8],rax
   1400031ab:	mov    r8d,ebx
   1400031ae:	mov    rdx,QWORD PTR [rbp-0x8]
   1400031b2:	mov    rcx,rax
   1400031b5:	call   0x1400156f2
   1400031ba:	mov    DWORD PTR [rdi+0x10],0xa0
   1400031c1:	call   QWORD PTR [rip+0x39ff9]        # 0x14003d1c0
   1400031c7:	mov    rcx,rax
   1400031ca:	mov    edx,0x8
   1400031cf:	mov    r8d,0xa0
   1400031d5:	call   QWORD PTR [rip+0x39ffd]        # 0x14003d1d8
   1400031db:	test   rax,rax
   1400031de:	je     0x140017438
   1400031e4:	mov    QWORD PTR [rdi+0x18],rax
   1400031e8:	movups xmm0,XMMWORD PTR [rsi]
   1400031eb:	movups XMMWORD PTR [rax],xmm0
   1400031ee:	movups xmm1,XMMWORD PTR [rsi+0x10]
   1400031f2:	movups XMMWORD PTR [rax+0x10],xmm1
   1400031f6:	movups xmm0,XMMWORD PTR [rsi+0x20]
   1400031fa:	movups XMMWORD PTR [rax+0x20],xmm0
   1400031fe:	movups xmm1,XMMWORD PTR [rsi+0x30]
   140003202:	movups XMMWORD PTR [rax+0x30],xmm1
   140003206:	movups xmm0,XMMWORD PTR [rsi+0x40]
   14000320a:	movups XMMWORD PTR [rax+0x40],xmm0
   14000320e:	movups xmm1,XMMWORD PTR [rsi+0x50]
   140003212:	movups XMMWORD PTR [rax+0x50],xmm1
   140003216:	movups xmm0,XMMWORD PTR [rsi+0x60]
   14000321a:	movups XMMWORD PTR [rax+0x60],xmm0
   14000321e:	movups xmm1,XMMWORD PTR [rsi+0x70]
   140003222:	movups XMMWORD PTR [rax+0x70],xmm1
   140003226:	movups xmm0,XMMWORD PTR [rsi+0x80]
   14000322d:	movups XMMWORD PTR [rax+0x80],xmm0
   140003234:	movups xmm1,XMMWORD PTR [rsi+0x90]
   14000323b:	movups XMMWORD PTR [rax+0x90],xmm1
   140003242:	mov    DWORD PTR [rdi+0x20],0x8
   140003249:	call   QWORD PTR [rip+0x39f71]        # 0x14003d1c0
   14000324f:	mov    rcx,rax
   140003252:	mov    edx,0x8
   140003257:	mov    r8d,edx
   14000325a:	call   QWORD PTR [rip+0x39f78]        # 0x14003d1d8
   140003260:	test   rax,rax
   140003263:	je     0x140017438
   140003269:	mov    QWORD PTR [rdi+0x28],rax
   14000326d:	xor    r9d,r9d
   140003270:	mov    r15d,r9d
   140003273:	movsd  xmm0,QWORD PTR [rip+0x4b1e5]        # 0x14004e460
   14000327b:	movsd  QWORD PTR [rax],xmm0
   14000327f:	mov    r12,rdi
   140003282:	mov    r14d,DWORD PTR [rbp+0x50]
   140003286:	mov    esi,DWORD PTR [rbp-0x70]
   140003289:	test   r15d,r15d
   14000328c:	js     0x140003298
   14000328e:	mov    QWORD PTR [rbp+0x290],r12
   140003295:	mov    r12,r9
   140003298:	mov    rdi,QWORD PTR [rbp+0x330]
   14000329f:	test   rdi,rdi
   1400032a2:	je     0x1400174ce
   1400032a8:	call   QWORD PTR [rip+0x39f12]        # 0x14003d1c0
   1400032ae:	mov    rcx,rax
   1400032b1:	mov    r8,rdi
   1400032b4:	xor    edx,edx
   1400032b6:	call   QWORD PTR [rip+0x39f24]        # 0x14003d1e0
   1400032bc:	xor    ebx,ebx
   1400032be:	mov    QWORD PTR [rbp+0x330],rbx
   1400032c5:	test   r12,r12
   1400032c8:	jne    0x1400174d5
   1400032ce:	mov    r13,QWORD PTR [rbp-0x78]
   1400032d2:	or     r15d,0x10000000
   1400032d9:	jl     0x140004024
   1400032df:	mov    rbx,QWORD PTR [rbp+0x290]
   1400032e6:	mov    DWORD PTR [rbp+0x68],0x4
   1400032ed:	lea    r8,[rbp+0x68]
   1400032f1:	mov    edx,DWORD PTR [rbx]
   1400032f3:	mov    ecx,0x4
   1400032f8:	call   0x14000bad0
   1400032fd:	mov    r15d,eax
   140003300:	test   eax,eax
   140003302:	js     0x140017558
   140003308:	lea    r8,[rbp+0x68]
   14000330c:	mov    edx,ecx
   14000330e:	mov    ecx,DWORD PTR [rbp+0x68]
   140003311:	call   0x14000bad0
   140003316:	mov    r15d,eax
   140003319:	test   eax,eax
   14000331b:	js     0x140017558
   140003321:	lea    r8,[rbp+0x68]
   140003325:	mov    edx,DWORD PTR [rbx+0x10]
   140003328:	mov    ecx,DWORD PTR [rbp+0x68]
   14000332b:	call   0x14000bad0
   140003330:	mov    r15d,eax
   140003333:	test   eax,eax
   140003335:	js     0x140017558
   14000333b:	lea    r8,[rbp+0x68]
   14000333f:	mov    edx,0x4
   140003344:	mov    ecx,DWORD PTR [rbp+0x68]
   140003347:	call   0x14000bad0
   14000334c:	mov    r15d,eax
   14000334f:	test   eax,eax
   140003351:	js     0x140017558
   140003357:	lea    r8,[rbp+0x68]
   14000335b:	mov    edx,DWORD PTR [rbx+0x20]
   14000335e:	mov    ecx,DWORD PTR [rbp+0x68]
   140003361:	call   0x14000bad0
   140003366:	mov    r15d,eax
   140003369:	test   eax,eax
   14000336b:	js     0x140017558
   140003371:	mov    eax,DWORD PTR [rbp+0x68]
   140003374:	mov    DWORD PTR [rbp+0x210],eax
   14000337a:	test   r15d,r15d
   14000337d:	js     0x1400034cc
   140003383:	mov    edi,eax
   140003385:	call   QWORD PTR [rip+0x39e35]        # 0x14003d1c0
   14000338b:	mov    rcx,rax
   14000338e:	mov    r8d,edi
   140003391:	mov    edx,0x8
   140003396:	call   QWORD PTR [rip+0x39e3c]        # 0x14003d1d8
   14000339c:	mov    rsi,rax
   14000339f:	test   rax,rax
   1400033a2:	je     0x140017563
   1400033a8:	mov    QWORD PTR [rbp+0xd0],rax
   1400033af:	mov    eax,DWORD PTR [rbx]
   1400033b1:	mov    DWORD PTR [rsi],eax
   1400033b3:	lea    r8,[rbp+0xd0]
   1400033ba:	mov    edx,0x4
   1400033bf:	mov    rcx,rsi
   1400033c2:	call   0x14000baf0
   1400033c7:	mov    r15d,eax
   1400033ca:	test   eax,eax
   1400033cc:	js     0x14001756b
   1400033d2:	mov    r8d,DWORD PTR [rbx]
   1400033d5:	mov    rdx,QWORD PTR [rbx+0x8]
   1400033d9:	mov    rcx,QWORD PTR [rbp+0xd0]
   1400033e0:	call   0x1400156f2
   1400033e5:	mov    edx,DWORD PTR [rbx]
   1400033e7:	lea    r8,[rbp+0xd0]
   1400033ee:	mov    rcx,QWORD PTR [rbp+0xd0]
   1400033f5:	call   0x14000baf0
   1400033fa:	mov    r15d,eax
   1400033fd:	test   eax,eax
   1400033ff:	js     0x14001756b
   140003405:	mov    eax,DWORD PTR [rbx+0x10]
   140003408:	mov    rcx,QWORD PTR [rbp+0xd0]
   14000340f:	mov    DWORD PTR [rcx],eax
   140003411:	lea    r8,[rbp+0xd0]
   140003418:	mov    edx,0x4
   14000341d:	call   0x14000baf0
   140003422:	mov    r15d,eax
   140003425:	test   eax,eax
   140003427:	js     0x14001756b
   14000342d:	mov    r8d,DWORD PTR [rbx+0x10]
   140003431:	mov    rdx,QWORD PTR [rbx+0x18]
   140003435:	mov    rcx,QWORD PTR [rbp+0xd0]
   14000343c:	call   0x1400156f2
   140003441:	mov    edx,DWORD PTR [rbx+0x10]
   140003444:	lea    r8,[rbp+0xd0]
   14000344b:	mov    rcx,QWORD PTR [rbp+0xd0]
   140003452:	call   0x14000baf0
   140003457:	mov    r15d,eax
   14000345a:	test   eax,eax
   14000345c:	js     0x14001756b
   140003462:	mov    eax,DWORD PTR [rbx+0x20]
   140003465:	mov    rcx,QWORD PTR [rbp+0xd0]
   14000346c:	mov    DWORD PTR [rcx],eax
   14000346e:	lea    r8,[rbp+0xd0]
   140003475:	mov    edx,0x4
   14000347a:	call   0x14000baf0
   14000347f:	mov    r15d,eax
   140003482:	test   eax,eax
   140003484:	js     0x14001756b
   14000348a:	mov    r8d,DWORD PTR [rbx+0x20]
   14000348e:	mov    rdx,QWORD PTR [rbx+0x28]
   140003492:	mov    rcx,QWORD PTR [rbp+0xd0]
   140003499:	call   0x1400156f2
   14000349e:	mov    edx,DWORD PTR [rbx+0x20]
   1400034a1:	lea    r8,[rbp+0xd0]
   1400034a8:	mov    rcx,QWORD PTR [rbp+0xd0]
   1400034af:	call   0x14000baf0
   1400034b4:	mov    r15d,eax
   1400034b7:	test   eax,eax
   1400034b9:	js     0x14001756b
   1400034bf:	mov    r13,rsi
   1400034c2:	mov    QWORD PTR [rbp-0x78],rsi
   1400034c6:	mov    esi,DWORD PTR [rbp+0x210]
   1400034cc:	or     r15d,0x10000000
   1400034d3:	jl     0x140004024
   1400034d9:	xor    r12d,r12d
   1400034dc:	mov    QWORD PTR [rbp+0x520],r12
   1400034e3:	mov    r9d,r12d
   1400034e6:	mov    DWORD PTR [rbp+0x2f8],r12d
   1400034ed:	mov    QWORD PTR [rbp+0x610],r12
   1400034f4:	mov    r10d,r12d
   1400034f7:	mov    DWORD PTR [rbp+0x440],r12d
   1400034fe:	mov    DWORD PTR [rbp+0x1dc],0x8
   140003508:	lea    r8,[rbp+0x1dc]
   14000350f:	mov    edx,r14d
   140003512:	lea    ecx,[r12+0x8]
   140003517:	call   0x14000bad0
   14000351c:	mov    r15d,eax
   14000351f:	or     r15d,0x10000000
   140003526:	jl     0x140003753
   14000352c:	mov    eax,DWORD PTR [rbp+0x1dc]
   140003532:	lea    rcx,[rax+0x7]
   140003536:	and    ecx,0xfffffff8
   140003539:	cmp    ecx,eax
   14000353b:	jb     0x140017587
   140003541:	mov    DWORD PTR [rbp+0x24c],ecx
   140003547:	lea    r8,[rbp+0x24c]
   14000354e:	lea    edx,[r12+0x8]
   140003553:	call   0x14000bad0
   140003558:	mov    r15d,eax
   14000355b:	test   eax,eax
   14000355d:	js     0x14000356b
   14000355f:	mov    eax,DWORD PTR [rbp+0x24c]
   140003565:	mov    DWORD PTR [rbp+0x308],eax
   14000356b:	test   r15d,r15d
   14000356e:	js     0x140004029
   140003574:	cmp    QWORD PTR [rbp-0x58],r9
   140003578:	je     0x140017592
   14000357e:	cmp    DWORD PTR [rbp-0x60],0x1
   140003582:	jbe    0x14001759d
   140003588:	mov    rcx,QWORD PTR [rbp-0x58]
   14000358c:	mov    QWORD PTR [rbp+0x118],rcx
   140003593:	mov    edi,r12d
   140003596:	mov    r11d,DWORD PTR [rcx]
   140003599:	lea    r8,[rbp+0x118]
   1400035a0:	mov    edx,0x4
   1400035a5:	call   0x14000baf0
   1400035aa:	mov    r15d,eax
   1400035ad:	test   eax,eax
   1400035af:	js     0x140003615
   1400035b1:	mov    edx,r11d
   1400035b4:	lea    r8,[rbp+0x118]
   1400035bb:	mov    rcx,QWORD PTR [rbp+0x118]
   1400035c2:	call   0x14000baf0
   1400035c7:	mov    r15d,eax
   1400035ca:	test   eax,eax
   1400035cc:	js     0x140003615
   1400035ce:	inc    edi
   1400035d0:	mov    rcx,QWORD PTR [rbp+0x118]
   1400035d7:	cmp    edi,0x1
   1400035da:	jb     0x140003596
   1400035dc:	mov    edi,DWORD PTR [rcx]
   1400035de:	lea    r8,[rbp+0x118]
   1400035e5:	mov    edx,0x4
   1400035ea:	call   0x14000baf0
   1400035ef:	mov    r15d,eax
   1400035f2:	test   eax,eax
   1400035f4:	js     0x140003615
   1400035f6:	mov    r9d,edi
   1400035f9:	mov    DWORD PTR [rbp+0x2f8],edi
   1400035ff:	test   edi,edi
   140003601:	je     0x1400175a8
   140003607:	mov    rax,QWORD PTR [rbp+0x118]
   14000360e:	mov    QWORD PTR [rbp+0x520],rax
   140003615:	test   r15d,r15d
   140003618:	js     0x140004029
   14000361e:	cmp    DWORD PTR [rbp-0x60],0x2
   140003622:	jbe    0x1400175b7
   140003628:	mov    rcx,QWORD PTR [rbp-0x58]
   14000362c:	mov    QWORD PTR [rbp+0x1e0],rcx
   140003633:	mov    edi,r12d
   140003636:	lea    rdx,[rcx+0x4]
   14000363a:	cmp    rdx,rcx
   14000363d:	jb     0x1400175e7
   140003643:	mov    QWORD PTR [rbp+0x1e0],rdx
   14000364a:	mov    ecx,DWORD PTR [rcx]
   14000364c:	add    rcx,rdx
   14000364f:	cmp    rcx,rdx
   140003652:	jb     0x1400175e7
   140003658:	mov    QWORD PTR [rbp+0x1e0],rcx
   14000365f:	inc    edi
   140003661:	cmp    edi,0x2
   140003664:	jb     0x140003636
   140003666:	mov    edi,DWORD PTR [rcx]
   140003668:	lea    r8,[rbp+0x1e0]
   14000366f:	mov    edx,0x4
   140003674:	call   0x14000baf0
   140003679:	mov    r15d,eax
   14000367c:	test   eax,eax
   14000367e:	js     0x14000369f
   140003680:	mov    r10d,edi
   140003683:	mov    DWORD PTR [rbp+0x440],edi
   140003689:	test   edi,edi
   14000368b:	je     0x1400175c2
   140003691:	mov    rax,QWORD PTR [rbp+0x1e0]
   140003698:	mov    QWORD PTR [rbp+0x610],rax
   14000369f:	test   r15d,r15d
   1400036a2:	js     0x140004029
   1400036a8:	mov    DWORD PTR [rbp+0x64],edx
   1400036ab:	lea    r8,[rbp+0x64]
   1400036af:	mov    edx,DWORD PTR [rbp+0x308]
   1400036b5:	mov    ecx,0x4
   1400036ba:	call   0x14000bad0
   1400036bf:	mov    r15d,eax
   1400036c2:	test   eax,eax
   1400036c4:	js     0x1400175d1
   1400036ca:	lea    r8,[rbp+0x64]
   1400036ce:	mov    edx,ecx
   1400036d0:	mov    ecx,DWORD PTR [rbp+0x64]
   1400036d3:	call   0x14000bad0
   1400036d8:	mov    r15d,eax
   1400036db:	test   eax,eax
   1400036dd:	js     0x1400175d1
   1400036e3:	lea    r8,[rbp+0x64]
   1400036e7:	mov    edx,r9d
   1400036ea:	mov    ecx,DWORD PTR [rbp+0x64]
   1400036ed:	call   0x14000bad0
   1400036f2:	mov    r15d,eax
   1400036f5:	test   eax,eax
   1400036f7:	js     0x1400175d1
   1400036fd:	lea    r8,[rbp+0x64]
   140003701:	mov    edx,0x4
   140003706:	mov    ecx,DWORD PTR [rbp+0x64]
   140003709:	call   0x14000bad0
   14000370e:	mov    r15d,eax
   140003711:	test   eax,eax
   140003713:	js     0x1400175d1
   140003719:	lea    r8,[rbp+0x64]
   14000371d:	mov    edx,r10d
   140003720:	mov    ecx,DWORD PTR [rbp+0x64]
   140003723:	call   0x14000bad0
   140003728:	mov    r15d,eax
   14000372b:	test   eax,eax
   14000372d:	js     0x1400175d1
   140003733:	mov    eax,DWORD PTR [rbp+0x64]
   140003736:	mov    DWORD PTR [rbp+0x3e8],eax
   14000373c:	test   r15d,r15d
   14000373f:	js     0x140004029
   140003745:	cmp    eax,0x400000
   14000374a:	ja     0x1400175dc
   140003750:	mov    DWORD PTR [rbp+0x74],eax
   140003753:	test   r15d,r15d
   140003756:	js     0x140004029
   14000375c:	mov    r15d,r12d
   14000375f:	mov    edi,DWORD PTR [rbp+0x74]
   140003762:	call   QWORD PTR [rip+0x39a58]        # 0x14003d1c0
   140003768:	mov    rcx,rax
   14000376b:	mov    r8d,edi
   14000376e:	mov    edx,0x8
   140003773:	call   QWORD PTR [rip+0x39a5f]        # 0x14003d1d8
   140003779:	test   rax,rax
   14000377c:	je     0x1400175f2
   140003782:	mov    rbx,rax
   140003785:	mov    QWORD PTR [rbp-0x48],rax
   140003789:	or     r15d,0x10000000
   140003790:	jl     0x140004029
   140003796:	test   r13,r13
   140003799:	je     0x1400179aa
   14000379f:	test   rbx,rbx
   1400037a2:	je     0x1400179aa
   1400037a8:	lea    r8,[rbp+0x530]
   1400037af:	lea    rdx,[rip+0x3b33a]        # 0x14003eaf0
   1400037b6:	mov    ecx,0x1
   1400037bb:	call   QWORD PTR [rip+0x39a7f]        # 0x14003d240
   1400037c1:	test   eax,eax
   1400037c3:	je     0x140017600
   1400037c9:	lea    rdx,[rip+0x3b300]        # 0x14003ead0
   1400037d0:	mov    rcx,QWORD PTR [rbp+0x530]
   1400037d7:	call   QWORD PTR [rip+0x39a4b]        # 0x14003d228
   1400037dd:	mov    rdi,rax
   1400037e0:	test   rax,rax
   1400037e3:	je     0x140017600
   1400037e9:	mov    QWORD PTR [rbp+0x6b0],r13
   1400037f0:	mov    DWORD PTR [rbp+0x6c0],esi
   1400037f6:	mov    QWORD PTR [rbp+0x6b8],rbx
   1400037fd:	mov    eax,DWORD PTR [rbp+0x74]
   140003800:	mov    DWORD PTR [rbp+0x6c4],eax
   140003806:	mov    DWORD PTR [rbp+0x6c8],r12d
   14000380d:	mov    rcx,rdi
   140003810:	call   QWORD PTR [rip+0x39f12]        # 0x14003d728
   140003816:	xor    r9d,r9d
   140003819:	lea    r8d,[r9+0x20]
   14000381d:	lea    rdx,[rbp+0x6b0]
   140003824:	lea    ecx,[r8+0x66]
   140003828:	call   rdi
   14000382a:	mov    r15d,eax
   14000382d:	or     r15d,0x10000000
   140003834:	jl     0x14001761a
   14000383a:	mov    edx,DWORD PTR [rbp+0x6c4]
   140003840:	mov    DWORD PTR [rbp+0x74],edx
   140003843:	cmp    r15d,0xd0000023
   14000384a:	je     0x140017622
   140003850:	test   r15d,r15d
   140003853:	js     0x140004029
   140003859:	xor    r11d,r11d
   14000385c:	mov    QWORD PTR [rbp-0x8],r11
   140003860:	cmp    edx,0x4
   140003863:	jb     0x140017640
   140003869:	mov    r14d,DWORD PTR [rbx]
   14000386c:	lea    r13,[rbx+0x4]
   140003870:	cmp    r13,rbx
   140003873:	jb     0x1400177ff
   140003879:	lea    eax,[rdx-0x4]
   14000387c:	cmp    eax,r14d
   14000387f:	jb     0x14001764e
   140003885:	lea    rdi,[r14+r13*1]
   140003889:	cmp    rdi,r13
   14000388c:	jb     0x1400177ff
   140003892:	lea    ecx,[r14+0x4]
   140003896:	cmp    ecx,0x4
   140003899:	jb     0x1400177ff
   14000389f:	mov    eax,edx
   1400038a1:	sub    eax,ecx
   1400038a3:	cmp    eax,0x4
   1400038a6:	jb     0x14001765c
   1400038ac:	mov    esi,DWORD PTR [rdi]
   1400038ae:	lea    r12,[rdi+0x4]
   1400038b2:	cmp    r12,rdi
   1400038b5:	jb     0x1400177ff
   1400038bb:	lea    edi,[rcx+0x4]
   1400038be:	cmp    edi,ecx
   1400038c0:	jb     0x1400177ff
   1400038c6:	mov    eax,edx
   1400038c8:	sub    eax,edi
   1400038ca:	cmp    eax,esi
   1400038cc:	jb     0x14001766a
   1400038d2:	lea    rcx,[rsi+r12*1]
   1400038d6:	cmp    rcx,r12
   1400038d9:	jb     0x1400177ff
   1400038df:	lea    r8d,[rsi+rdi*1]
   1400038e3:	cmp    r8d,edi
   1400038e6:	jb     0x1400177ff
   1400038ec:	mov    eax,edx
   1400038ee:	sub    eax,r8d
   1400038f1:	cmp    eax,0x4
   1400038f4:	jb     0x140017678
   1400038fa:	mov    ebx,DWORD PTR [rcx]
   1400038fc:	lea    rax,[rcx+0x4]
   140003900:	mov    QWORD PTR [rbp-0x30],rax
   140003904:	cmp    rax,rcx
   140003907:	jb     0x1400177ff
   14000390d:	lea    ecx,[r8+0x4]
   140003911:	cmp    ecx,r8d
   140003914:	jb     0x1400177ff
   14000391a:	mov    eax,edx
   14000391c:	sub    eax,ecx
   14000391e:	cmp    eax,ebx
   140003920:	jb     0x140017686
   140003926:	lea    edi,[rbx+rcx*1]
   140003929:	cmp    edi,ecx
   14000392b:	jb     0x1400177ff
   140003931:	cmp    edx,edi
   140003933:	jne    0x140017694
   140003939:	lea    ecx,[rbx+rsi*1]
   14000393c:	add    ecx,r14d
   14000393f:	add    rcx,0xc
   140003943:	mov    eax,edx
   140003945:	cmp    rcx,rax
   140003948:	jne    0x1400176a2
   14000394e:	call   QWORD PTR [rip+0x3986c]        # 0x14003d1c0
   140003954:	mov    rcx,rax
   140003957:	mov    edx,0x8
   14000395c:	lea    r8d,[rdx+0x28]
   140003960:	call   QWORD PTR [rip+0x39872]        # 0x14003d1d8
   140003966:	mov    rdi,rax
   140003969:	xor    r11d,r11d
   14000396c:	test   rax,rax
   14000396f:	je     0x1400176b0
   140003975:	mov    r15d,r11d
   140003978:	test   r13,r13
   14000397b:	je     0x1400176bf
   140003981:	mov    DWORD PTR [rax],r14d
   140003984:	call   QWORD PTR [rip+0x39836]        # 0x14003d1c0
   14000398a:	mov    rcx,rax
   14000398d:	mov    r8d,r14d
   140003990:	mov    edx,0x8
   140003995:	call   QWORD PTR [rip+0x3983d]        # 0x14003d1d8
   14000399b:	test   rax,rax
   14000399e:	je     0x1400176d8
   1400039a4:	mov    QWORD PTR [rdi+0x8],rax
   1400039a8:	xor    eax,eax
   1400039aa:	mov    r8d,r14d
   1400039ad:	mov    rdx,r13
   1400039b0:	mov    rcx,QWORD PTR [rdi+0x8]
   1400039b4:	call   0x1400156f2
   1400039b9:	xor    r11d,r11d
   1400039bc:	test   r12,r12
   1400039bf:	je     0x1400176cb
   1400039c5:	mov    DWORD PTR [rdi+0x10],esi
   1400039c8:	call   QWORD PTR [rip+0x397f2]        # 0x14003d1c0
   1400039ce:	mov    rcx,rax
   1400039d1:	mov    r8,rsi
   1400039d4:	mov    edx,0x8
   1400039d9:	call   QWORD PTR [rip+0x397f9]        # 0x14003d1d8
   1400039df:	test   rax,rax
   1400039e2:	je     0x1400176d8
   1400039e8:	mov    QWORD PTR [rdi+0x18],rax
   1400039ec:	xor    eax,eax
   1400039ee:	mov    r15d,eax
   1400039f1:	mov    r8,rsi
   1400039f4:	mov    rdx,r12
   1400039f7:	mov    rcx,QWORD PTR [rdi+0x18]
   1400039fb:	call   0x1400156f2
   140003a00:	xor    r11d,r11d
   140003a03:	mov    rsi,QWORD PTR [rbp-0x30]
   140003a07:	test   rsi,rsi
   140003a0a:	je     0x140017767
   140003a10:	mov    DWORD PTR [rdi+0x20],ebx
   140003a13:	call   QWORD PTR [rip+0x397a7]        # 0x14003d1c0
   140003a19:	mov    rcx,rax
   140003a1c:	mov    r8,rbx
   140003a1f:	mov    edx,0x8
   140003a24:	call   QWORD PTR [rip+0x397ae]        # 0x14003d1d8
   140003a2a:	test   rax,rax
   140003a2d:	je     0x1400176d8
   140003a33:	mov    QWORD PTR [rdi+0x28],rax
   140003a37:	xor    eax,eax
   140003a39:	mov    r15d,eax
   140003a3c:	mov    r8,rbx
   140003a3f:	mov    rdx,rsi
   140003a42:	mov    rcx,QWORD PTR [rdi+0x28]
   140003a46:	call   0x1400156f2
   140003a4b:	xor    r11d,r11d
   140003a4e:	test   r15d,r15d
   140003a51:	js     0x140017774
   140003a57:	mov    r12,rdi
   140003a5a:	mov    QWORD PTR [rsp+0x70],rdi
   140003a5f:	or     r15d,0x10000000
   140003a66:	jl     0x140004029
   140003a6c:	mov    rdi,r11
   140003a6f:	mov    QWORD PTR [rbp+0x2a0],r11
   140003a76:	mov    QWORD PTR [rbp+0x620],r11
   140003a7d:	mov    r15d,r11d
   140003a80:	test   r12,r12
   140003a83:	je     0x14001793a
   140003a89:	mov    rbx,QWORD PTR [r12+0x8]
   140003a8e:	mov    QWORD PTR [rbp-0x50],rbx
   140003a92:	test   rbx,rbx
   140003a95:	je     0x14001793a
   140003a9b:	mov    eax,DWORD PTR [r12]
   140003a9f:	test   eax,eax
   140003aa1:	je     0x14001793a
   140003aa7:	mov    ecx,eax
   140003aa9:	add    rcx,0xfffffffffffffff8
   140003aad:	mov    QWORD PTR [rbp+0x90],rcx
   140003ab4:	call   0x14000f134
   140003ab9:	mov    rcx,rax
   140003abc:	mov    QWORD PTR [rbp-0x30],rax
   140003ac0:	xor    r11d,r11d
   140003ac3:	test   rax,rax
   140003ac6:	je     0x140017902
   140003acc:	xor    dl,dl
   140003ace:	mov    r14,rbx
   140003ad1:	mov    rsi,rax
   140003ad4:	mov    r9,QWORD PTR [rbp+0x90]
   140003adb:	mov    rdi,r9
   140003ade:	mov    DWORD PTR [rbp-0x20],r11d
   140003ae2:	mov    r8d,r11d
   140003ae5:	and    edi,0x7
   140003ae8:	jne    0x140017817
   140003aee:	mov    DWORD PTR [rsp+0x60],r11d
   140003af3:	or     r13d,0xffffffff
   140003af7:	mov    ebx,r11d
   140003afa:	mov    DWORD PTR [rbp-0x34],ebx
   140003afd:	mov    r12,r9
   140003b00:	shr    r12,0x3
   140003b04:	test   r12,r12
   140003b07:	je     0x140003e43
   140003b0d:	add    rsi,0x7
   140003b11:	add    r14,0x2
   140003b15:	mov    edx,DWORD PTR [rsp+0x60]
   140003b19:	nop    DWORD PTR [rax+0x0]
   140003b20:	movzx  r11d,BYTE PTR [r14-0x2]
   140003b25:	shl    r11d,0x8
   140003b29:	movzx  eax,BYTE PTR [r14-0x1]
   140003b2e:	or     r11d,eax
   140003b31:	shl    r11d,0x8
   140003b35:	movzx  eax,BYTE PTR [r14]
   140003b39:	or     r11d,eax
   140003b3c:	shl    r11d,0x8
   140003b40:	movzx  eax,BYTE PTR [r14+0x1]
   140003b45:	or     r11d,eax
   140003b48:	movzx  r10d,BYTE PTR [r14+0x2]
   140003b4d:	shl    r10d,0x8
   140003b51:	movzx  eax,BYTE PTR [r14+0x3]
   140003b56:	or     r10d,eax
   140003b59:	shl    r10d,0x8
   140003b5d:	movzx  eax,BYTE PTR [r14+0x4]
   140003b62:	or     r10d,eax
   140003b65:	shl    r10d,0x8
   140003b69:	movzx  eax,BYTE PTR [r14+0x5]
   140003b6e:	or     r10d,eax
   140003b71:	xor    r8d,r11d
   140003b74:	xor    ebx,r10d
   140003b77:	lea    r14,[r14+0x8]
   140003b7b:	xor    ebx,r8d
   140003b7e:	xor    ebx,0x58830298
   140003b84:	lea    eax,[rbx+0x7b1e05f8]
   140003b8a:	rol    eax,0x5
   140003b8d:	mov    ecx,ebx
   140003b8f:	rol    ecx,0xa
   140003b92:	imul   eax,eax,0xf890
   140003b98:	add    ecx,eax
   140003b9a:	xor    r8d,ecx
   140003b9d:	lea    eax,[r8-0x239d0770]
   140003ba4:	ror    eax,0x9
   140003ba7:	mov    ecx,r8d
   140003baa:	rol    ecx,0x2
   140003bad:	imul   eax,eax,0x84e1
   140003bb3:	sub    eax,ecx
   140003bb5:	xor    ebx,eax
   140003bb7:	lea    eax,[rbx-0xf890]
   140003bbd:	imul   ecx,eax,0xfa08
   140003bc3:	mov    eax,ebx
   140003bc5:	shr    eax,0xd
   140003bc8:	sub    ecx,eax
   140003bca:	xor    r8d,ecx
   140003bcd:	mov    eax,r8d
   140003bd0:	xor    eax,0x84e1
   140003bd5:	rol    eax,0x6
   140003bd8:	mov    ecx,r8d
   140003bdb:	rol    ecx,0x2
   140003bde:	imul   eax,eax,0xdc62
   140003be4:	sub    eax,ecx
   140003be6:	xor    ebx,eax
   140003be8:	mov    ecx,ebx
   140003bea:	xor    ecx,0x84e1fa08
   140003bf0:	mov    eax,0xdc62f890
   140003bf5:	sub    eax,ecx
   140003bf7:	xor    r8d,eax
   140003bfa:	mov    edi,r8d
   140003bfd:	ror    edi,0x6
   140003c00:	mov    eax,r8d
   140003c03:	xor    eax,0xf890
   140003c08:	imul   ecx,eax,0x84e1
   140003c0e:	xor    edi,ecx
   140003c10:	xor    ebx,edi
   140003c12:	lea    eax,[rbx-0x239d0770]
   140003c18:	ror    eax,0xf
   140003c1b:	mov    ecx,ebx
   140003c1d:	rol    ecx,0x2
   140003c20:	imul   eax,eax,0xfa08
   140003c26:	add    ecx,eax
   140003c28:	xor    r8d,ecx
   140003c2b:	lea    eax,[r8+0x7b1e05f8]
   140003c32:	ror    eax,0xe
   140003c35:	mov    ecx,r8d
   140003c38:	rol    ecx,0x8
   140003c3b:	imul   eax,eax,0xdc62
   140003c41:	sub    eax,ecx
   140003c43:	xor    ebx,eax
   140003c45:	mov    eax,ebx
   140003c47:	xor    eax,0x84e1fa08
   140003c4c:	ror    eax,0xc
   140003c4f:	mov    ecx,ebx
   140003c51:	ror    ecx,0xa
   140003c54:	imul   eax,eax,0xf890
   140003c5a:	xor    ecx,eax
   140003c5c:	xor    r8d,ecx
   140003c5f:	mov    eax,r8d
   140003c62:	xor    eax,0xdc62
   140003c67:	imul   ecx,eax,0x84e1
   140003c6d:	mov    eax,r8d
   140003c70:	shr    eax,0xa
   140003c73:	xor    ecx,eax
   140003c75:	xor    ebx,ecx
   140003c77:	mov    eax,ebx
   140003c79:	not    eax
   140003c7b:	ror    eax,0x5
   140003c7e:	imul   eax,eax,0xdc62
   140003c84:	sub    eax,0x28c168f0
   140003c89:	xor    r8d,eax
   140003c8c:	mov    r9d,ebx
   140003c8f:	xor    r9d,r8d
   140003c92:	xor    r9d,0x58830298
   140003c99:	lea    eax,[r9-0x7b1e05f8]
   140003ca0:	rol    eax,0xb
   140003ca3:	mov    ecx,r9d
   140003ca6:	rol    ecx,0xd
   140003ca9:	imul   eax,eax,0xdc62
   140003caf:	add    ecx,eax
   140003cb1:	xor    ebx,ecx
   140003cb3:	mov    eax,ebx
   140003cb5:	xor    eax,0x84e1fa08
   140003cba:	ror    eax,0x5
   140003cbd:	mov    ecx,ebx
   140003cbf:	ror    ecx,0xc
   140003cc2:	imul   eax,eax,0xf890
   140003cc8:	xor    ecx,eax
   140003cca:	xor    r9d,ecx
   140003ccd:	lea    eax,[r9-0xf890]
   140003cd4:	imul   ecx,eax,0x84e1
   140003cda:	mov    eax,r9d
   140003cdd:	shr    eax,0x9
   140003ce0:	sub    ecx,eax
   140003ce2:	xor    ebx,ecx
   140003ce4:	lea    eax,[rbx+0x239c0d68]
   140003cea:	xor    r9d,eax
   140003ced:	lea    r8d,[r9-0xdc62]
   140003cf4:	xor    r8d,ebx
   140003cf7:	xor    r8d,0x84e1fa08
   140003cfe:	lea    eax,[r8+0x7b1e05f8]
   140003d05:	ror    eax,0x4
   140003d08:	mov    ecx,r8d
   140003d0b:	ror    ecx,0xb
   140003d0e:	imul   eax,eax,0xf890
   140003d14:	xor    ecx,eax
   140003d16:	xor    r9d,ecx
   140003d19:	mov    eax,0xdc62f890
   140003d1e:	sub    eax,r9d
   140003d21:	ror    eax,0x7
   140003d24:	mov    ecx,r9d
   140003d27:	ror    ecx,0x3
   140003d2a:	imul   eax,eax,0x84e1
   140003d30:	add    ecx,eax
   140003d32:	xor    r8d,ecx
   140003d35:	mov    eax,r8d
   140003d38:	xor    eax,0xdc62f890
   140003d3d:	rol    eax,1
   140003d3f:	mov    ecx,r8d
   140003d42:	ror    ecx,0x8
   140003d45:	imul   eax,eax,0xfa08
   140003d4b:	add    ecx,eax
   140003d4d:	xor    r9d,ecx
   140003d50:	mov    edi,r9d
   140003d53:	ror    edi,1
   140003d55:	mov    eax,r9d
   140003d58:	xor    eax,0xf890
   140003d5d:	imul   ecx,eax,0xdc62
   140003d63:	add    edi,ecx
   140003d65:	xor    r8d,edi
   140003d68:	mov    eax,r8d
   140003d6b:	xor    eax,0xfa08
   140003d70:	rol    eax,1
   140003d72:	mov    ecx,r8d
   140003d75:	rol    ecx,0x8
   140003d78:	imul   eax,eax,0xf890
   140003d7e:	xor    ecx,eax
   140003d80:	xor    r9d,ecx
   140003d83:	mov    ecx,r9d
   140003d86:	xor    ecx,0xdc62f890
   140003d8c:	mov    eax,0x84e1fa08
   140003d91:	sub    eax,ecx
   140003d93:	xor    r8d,eax
   140003d96:	lea    eax,[r8+0x239d0770]
   140003d9d:	ror    eax,0x3
   140003da0:	mov    ecx,r8d
   140003da3:	ror    ecx,0x2
   140003da6:	imul   eax,eax,0xfa08
   140003dac:	add    ecx,eax
   140003dae:	xor    ecx,edx
   140003db0:	xor    r9d,ecx
   140003db3:	mov    DWORD PTR [rbp-0x20],r9d
   140003db7:	xor    r8d,r13d
   140003dba:	mov    DWORD PTR [rbp-0x34],r8d
   140003dbe:	mov    BYTE PTR [rsi-0x4],r9b
   140003dc2:	ror    DWORD PTR [rbp-0x20],0x8
   140003dc6:	movzx  eax,BYTE PTR [rbp-0x34]
   140003dca:	mov    BYTE PTR [rsi],al
   140003dcc:	ror    DWORD PTR [rbp-0x34],0x8
   140003dd0:	movzx  eax,BYTE PTR [rbp-0x20]
   140003dd4:	mov    BYTE PTR [rsi-0x5],al
   140003dd7:	ror    DWORD PTR [rbp-0x20],0x8
   140003ddb:	movzx  eax,BYTE PTR [rbp-0x34]
   140003ddf:	mov    BYTE PTR [rsi-0x1],al
   140003de2:	ror    DWORD PTR [rbp-0x34],0x8
   140003de6:	movzx  eax,BYTE PTR [rbp-0x20]
   140003dea:	mov    BYTE PTR [rsi-0x6],al
   140003ded:	ror    DWORD PTR [rbp-0x20],0x8
   140003df1:	movzx  eax,BYTE PTR [rbp-0x34]
   140003df5:	mov    BYTE PTR [rsi-0x2],al
   140003df8:	ror    DWORD PTR [rbp-0x34],0x8
   140003dfc:	movzx  eax,BYTE PTR [rbp-0x20]
   140003e00:	mov    BYTE PTR [rsi-0x7],al
   140003e03:	movzx  eax,BYTE PTR [rbp-0x34]
   140003e07:	mov    BYTE PTR [rsi-0x3],al
   140003e0a:	mov    r8d,DWORD PTR [rbp-0x20]
   140003e0e:	ror    r8d,0x8
   140003e12:	mov    DWORD PTR [rbp-0x20],r8d
   140003e16:	mov    ebx,DWORD PTR [rbp-0x34]
   140003e19:	ror    ebx,0x8
   140003e1c:	mov    DWORD PTR [rbp-0x34],ebx
   140003e1f:	mov    edx,r11d
   140003e22:	mov    r13d,r10d
   140003e25:	lea    rsi,[rsi+0x8]
   140003e29:	sub    r12,0x1
   140003e2d:	jne    0x140003b20
   140003e33:	xor    dl,dl
   140003e35:	mov    r9,QWORD PTR [rbp+0x90]
   140003e3c:	mov    rcx,QWORD PTR [rbp-0x30]
   140003e40:	xor    r11d,r11d
   140003e43:	mov    rax,r11
   140003e46:	test   r9,r9
   140003e49:	je     0x140003e56
   140003e4b:	xor    dl,BYTE PTR [rax+rcx*1]
   140003e4e:	inc    rax
   140003e51:	cmp    rax,r9
   140003e54:	jb     0x140003e4b
   140003e56:	movzx  eax,dl
   140003e59:	mov    rdx,QWORD PTR [rbp-0x50]
   140003e5d:	cmp    rax,QWORD PTR [r9+rdx*1]
   140003e61:	jne    0x1400178f5
   140003e67:	mov    QWORD PTR [rbp+0x620],r9
   140003e6e:	mov    r8,rcx
   140003e71:	mov    QWORD PTR [rbp-0x68],rcx
   140003e75:	mov    QWORD PTR [rbp+0x2a0],r11
   140003e7c:	mov    DWORD PTR [rbp+0xa8],r9d
   140003e83:	mov    r12,QWORD PTR [rsp+0x70]
   140003e88:	or     r15d,0x10000000
   140003e8f:	jl     0x140004029
   140003e95:	cmp    DWORD PTR [rbp+0xa8],0x4
   140003e9c:	jb     0x140017949
   140003ea2:	mov    edi,DWORD PTR [r8]
   140003ea5:	mov    DWORD PTR [rsp+0x60],edi
   140003ea9:	lea    rcx,[r8+0x4]
   140003ead:	cmp    rcx,r8
   140003eb0:	jb     0x14001799f
   140003eb6:	mov    eax,DWORD PTR [rbp+0xa8]
   140003ebc:	add    eax,0xfffffffc
   140003ebf:	cmp    eax,0x4
   140003ec2:	jb     0x140017954
   140003ec8:	mov    r13d,DWORD PTR [rcx]
   140003ecb:	lea    rbx,[rcx+0x4]
   140003ecf:	cmp    rbx,rcx
   140003ed2:	jb     0x14001799f
   140003ed8:	mov    eax,DWORD PTR [rbp+0xa8]
   140003ede:	add    eax,0xfffffff8
   140003ee1:	cmp    eax,r13d
   140003ee4:	jb     0x14001795f
   140003eea:	lea    eax,[r13+0x8]
   140003eee:	cmp    eax,0x8
   140003ef1:	jb     0x14001799f
   140003ef7:	mov    edx,DWORD PTR [rbp+0xa8]
   140003efd:	lea    rcx,[rbx+r13*1]
   140003f01:	lea    rax,[r8+rdx*1]
   140003f05:	cmp    rax,rcx
   140003f08:	jb     0x140017949
   140003f0e:	mov    rax,r8
   140003f11:	sub    rax,rbx
   140003f14:	sub    rax,r13
   140003f17:	add    rax,rdx
   140003f1a:	cmp    rax,0x8
   140003f1e:	jae    0x140017949
   140003f24:	mov    r12,r11
   140003f27:	mov    r15d,r11d
   140003f2a:	mov    esi,r11d
   140003f2d:	test   rbx,rbx
   140003f30:	je     0x140003fba
   140003f36:	mov    rcx,rbx
   140003f39:	lea    rdx,[rbx+r13*1]
   140003f3d:	cmp    rdx,rbx
   140003f40:	jb     0x14001799f
   140003f46:	cmp    rbx,rdx
   140003f49:	jae    0x140003fb1
   140003f4b:	mov    edi,DWORD PTR [rbp+0x318]
   140003f51:	lea    rax,[rcx+0x4]
   140003f55:	cmp    rax,rcx
   140003f58:	jb     0x14001799f
   140003f5e:	cmp    rax,rdx
   140003f61:	ja     0x14001797e
   140003f67:	mov    eax,DWORD PTR [rcx]
   140003f69:	add    eax,0x4
   140003f6c:	cmp    eax,0x4
   140003f6f:	jb     0x14001796a
   140003f75:	mov    edi,eax
   140003f77:	mov    r15d,r11d
   140003f7a:	mov    DWORD PTR [rbp+0x318],eax
   140003f80:	test   r15d,r15d
   140003f83:	js     0x140017975
   140003f89:	mov    eax,edi
   140003f8b:	add    rax,rcx
   140003f8e:	cmp    rax,rcx
   140003f91:	jb     0x14001799f
   140003f97:	mov    rcx,rax
   140003f9a:	mov    r15d,r11d
   140003f9d:	cmp    rax,rdx
   140003fa0:	ja     0x14001797e
   140003fa6:	inc    esi
   140003fa8:	cmp    rax,rdx
   140003fab:	jb     0x140003f51
   140003fad:	mov    edi,DWORD PTR [rsp+0x60]
   140003fb1:	cmp    rcx,rdx
   140003fb4:	jne    0x14001797e
   140003fba:	test   r13d,r13d
   140003fbd:	je     0x140003fe7
   140003fbf:	call   QWORD PTR [rip+0x391fb]        # 0x14003d1c0
   140003fc5:	mov    rcx,rax
   140003fc8:	mov    r8,r13
   140003fcb:	mov    edx,0x8
   140003fd0:	call   QWORD PTR [rip+0x39202]        # 0x14003d1d8
   140003fd6:	mov    r12,rax
   140003fd9:	test   rax,rax
   140003fdc:	je     0x140017989
   140003fe2:	xor    eax,eax
   140003fe4:	mov    r15d,eax
   140003fe7:	test   rbx,rbx
   140003fea:	je     0x140003ffa
   140003fec:	mov    r8,r13
   140003fef:	mov    rdx,rbx
   140003ff2:	mov    rcx,r12
   140003ff5:	call   0x1400156f2
   140003ffa:	mov    QWORD PTR [rbp+0xe8],r12
   140004001:	mov    DWORD PTR [rbp+0xe4],r13d
   140004008:	mov    DWORD PTR [rbp+0xe0],esi
   14000400e:	test   r15d,r15d
   140004011:	js     0x14000401f
   140004013:	cmp    edi,DWORD PTR [rbp+0xe0]
   140004019:	jne    0x140017994
   14000401f:	bts    r15d,0x1c
   140004024:	mov    r12,QWORD PTR [rsp+0x70]
   140004029:	mov    rdi,QWORD PTR [rbp-0x40]
   14000402d:	test   rdi,rdi
   140004030:	je     0x140004046
   140004032:	call   QWORD PTR [rip+0x39188]        # 0x14003d1c0
   140004038:	mov    rcx,rax
   14000403b:	mov    r8,rdi
   14000403e:	xor    edx,edx
   140004040:	call   QWORD PTR [rip+0x3919a]        # 0x14003d1e0
   140004046:	mov    rbx,QWORD PTR [rbp+0x290]
   14000404d:	test   rbx,rbx
   140004050:	je     0x1400179bd
   140004056:	mov    rdi,QWORD PTR [rbx+0x8]
   14000405a:	test   rdi,rdi
   14000405d:	je     0x1400179b5
   140004063:	call   QWORD PTR [rip+0x39157]        # 0x14003d1c0
   140004069:	mov    rcx,rax
   14000406c:	mov    r8,rdi
   14000406f:	xor    edx,edx
   140004071:	call   QWORD PTR [rip+0x39169]        # 0x14003d1e0
   140004077:	xor    r13d,r13d
   14000407a:	mov    QWORD PTR [rbx+0x8],r13
   14000407e:	mov    rdi,QWORD PTR [rbx+0x18]
   140004082:	test   rdi,rdi
   140004085:	je     0x14000409f
   140004087:	call   QWORD PTR [rip+0x39133]        # 0x14003d1c0
   14000408d:	mov    rcx,rax
   140004090:	mov    r8,rdi
   140004093:	xor    edx,edx
   140004095:	call   QWORD PTR [rip+0x39145]        # 0x14003d1e0
   14000409b:	mov    QWORD PTR [rbx+0x18],r13
   14000409f:	mov    rdi,QWORD PTR [rbx+0x28]
   1400040a3:	test   rdi,rdi
   1400040a6:	je     0x1400040c0
   1400040a8:	call   QWORD PTR [rip+0x39112]        # 0x14003d1c0
   1400040ae:	mov    rcx,rax
   1400040b1:	mov    r8,rdi
   1400040b4:	xor    edx,edx
   1400040b6:	call   QWORD PTR [rip+0x39124]        # 0x14003d1e0
   1400040bc:	mov    QWORD PTR [rbx+0x28],r13
   1400040c0:	call   QWORD PTR [rip+0x390fa]        # 0x14003d1c0
   1400040c6:	mov    rcx,rax
   1400040c9:	mov    r8,rbx
   1400040cc:	xor    edx,edx
   1400040ce:	call   QWORD PTR [rip+0x3910c]        # 0x14003d1e0
   1400040d4:	mov    QWORD PTR [rbp+0x290],r13
   1400040db:	mov    rdi,QWORD PTR [rbp-0x78]
   1400040df:	test   rdi,rdi
   1400040e2:	je     0x1400040f8
   1400040e4:	call   QWORD PTR [rip+0x390d6]        # 0x14003d1c0
   1400040ea:	mov    rcx,rax
   1400040ed:	mov    r8,rdi
   1400040f0:	xor    edx,edx
   1400040f2:	call   QWORD PTR [rip+0x390e8]        # 0x14003d1e0
   1400040f8:	mov    rdi,QWORD PTR [rbp-0x48]
   1400040fc:	test   rdi,rdi
   1400040ff:	je     0x140004115
   140004101:	call   QWORD PTR [rip+0x390b9]        # 0x14003d1c0
   140004107:	mov    rcx,rax
   14000410a:	mov    r8,rdi
   14000410d:	xor    edx,edx
   14000410f:	call   QWORD PTR [rip+0x390cb]        # 0x14003d1e0
   140004115:	test   r12,r12
   140004118:	je     0x14000419b
   14000411e:	mov    rdi,QWORD PTR [r12+0x8]
   140004123:	test   rdi,rdi
   140004126:	je     0x140004141
   140004128:	call   QWORD PTR [rip+0x39092]        # 0x14003d1c0
   14000412e:	mov    rcx,rax
   140004131:	mov    r8,rdi
   140004134:	xor    edx,edx
   140004136:	call   QWORD PTR [rip+0x390a4]        # 0x14003d1e0
   14000413c:	mov    QWORD PTR [r12+0x8],r13
   140004141:	mov    rdi,QWORD PTR [r12+0x18]
   140004146:	test   rdi,rdi
   140004149:	je     0x140004164
   14000414b:	call   QWORD PTR [rip+0x3906f]        # 0x14003d1c0
   140004151:	mov    rcx,rax
   140004154:	mov    r8,rdi
   140004157:	xor    edx,edx
   140004159:	call   QWORD PTR [rip+0x39081]        # 0x14003d1e0
   14000415f:	mov    QWORD PTR [r12+0x18],r13
   140004164:	mov    rdi,QWORD PTR [r12+0x28]
   140004169:	test   rdi,rdi
   14000416c:	je     0x140004187
   14000416e:	call   QWORD PTR [rip+0x3904c]        # 0x14003d1c0
   140004174:	mov    rcx,rax
   140004177:	mov    r8,rdi
   14000417a:	xor    edx,edx
   14000417c:	call   QWORD PTR [rip+0x3905e]        # 0x14003d1e0
   140004182:	mov    QWORD PTR [r12+0x28],r13
   140004187:	call   QWORD PTR [rip+0x39033]        # 0x14003d1c0
   14000418d:	mov    rcx,rax
   140004190:	mov    r8,r12
   140004193:	xor    edx,edx
   140004195:	call   QWORD PTR [rip+0x39045]        # 0x14003d1e0
   14000419b:	mov    rdi,QWORD PTR [rbp-0x68]
   14000419f:	test   rdi,rdi
   1400041a2:	je     0x1400041b8
   1400041a4:	call   QWORD PTR [rip+0x39016]        # 0x14003d1c0
   1400041aa:	mov    rcx,rax
   1400041ad:	mov    r8,rdi
   1400041b0:	xor    edx,edx
   1400041b2:	call   QWORD PTR [rip+0x39028]        # 0x14003d1e0
   1400041b8:	test   r15d,r15d
   1400041bb:	js     0x140017b6b
   1400041c1:	cmp    DWORD PTR [rbp+0xe0],0x1
   1400041c8:	jb     0x1400179c5
   1400041ce:	cmp    QWORD PTR [rbp+0xe8],0x0
   1400041d6:	je     0x140017a0f
   1400041dc:	cmp    DWORD PTR [rbp+0xe0],0x0
   1400041e3:	jbe    0x140017a0f
   1400041e9:	mov    rdi,QWORD PTR [rbp+0xe8]
   1400041f0:	mov    QWORD PTR [rbp+0x340],rdi
   1400041f7:	mov    r9d,DWORD PTR [rdi]
   1400041fa:	lea    r8,[rbp+0x340]
   140004201:	mov    edx,0x4
   140004206:	mov    rcx,rdi
   140004209:	call   0x14000baf0
   14000420e:	mov    r15d,eax
   140004211:	test   eax,eax
   140004213:	js     0x1400179e8
   140004219:	mov    DWORD PTR [rbp+0x460],r9d
   140004220:	test   r9d,r9d
   140004223:	je     0x1400179d9
   140004229:	mov    rax,QWORD PTR [rbp+0x340]
   140004230:	mov    QWORD PTR [rbp+0x540],rax
   140004237:	test   r15d,r15d
   14000423a:	js     0x140017a15
   140004240:	cmp    r9d,edx
   140004243:	jne    0x1400179fb
   140004249:	mov    eax,DWORD PTR [rax]
   14000424b:	mov    DWORD PTR [rbp+0x80],eax
   140004251:	test   r15d,r15d
   140004254:	js     0x140017b6b
   14000425a:	cmp    eax,0xd0000023
   14000425f:	je     0x140017a20
   140004265:	cmp    eax,0x8007007a
   14000426a:	je     0x140004277
   14000426c:	mov    r15d,eax
   14000426f:	test   eax,eax
   140004271:	js     0x140017b6b
   140004277:	cmp    DWORD PTR [rbp+0xe0],0x6
   14000427e:	jne    0x140017a2f
   140004284:	cmp    QWORD PTR [rbp+0xe8],0x0
   14000428c:	je     0x140017a43
   140004292:	mov    rcx,QWORD PTR [rbp+0xe8]
   140004299:	mov    QWORD PTR [rbp+0x110],rcx
   1400042a0:	mov    edi,r13d
   1400042a3:	mov    r9d,DWORD PTR [rcx]
   1400042a6:	lea    r8,[rbp+0x110]
   1400042ad:	mov    edx,0x4
   1400042b2:	call   0x14000baf0
   1400042b7:	mov    r15d,eax
   1400042ba:	test   eax,eax
   1400042bc:	js     0x140017a5d
   1400042c2:	mov    edx,r9d
   1400042c5:	lea    r8,[rbp+0x110]
   1400042cc:	mov    rcx,QWORD PTR [rbp+0x110]
   1400042d3:	call   0x14000baf0
   1400042d8:	mov    r15d,eax
   1400042db:	test   eax,eax
   1400042dd:	js     0x140017a5d
   1400042e3:	inc    edi
   1400042e5:	mov    rcx,QWORD PTR [rbp+0x110]
   1400042ec:	cmp    edi,0x1
   1400042ef:	jb     0x1400042a3
   1400042f1:	mov    edi,DWORD PTR [rcx]
   1400042f3:	lea    r8,[rbp+0x110]
   1400042fa:	mov    edx,0x4
   1400042ff:	call   0x14000baf0
   140004304:	mov    r15d,eax
   140004307:	test   eax,eax
   140004309:	js     0x140017a5d
   14000430f:	mov    DWORD PTR [rbp+0x328],edi
   140004315:	test   edi,edi
   140004317:	je     0x140017a4e
   14000431d:	mov    rax,QWORD PTR [rbp+0x110]
   140004324:	mov    QWORD PTR [rbp+0x630],rax
   14000432b:	test   r15d,r15d
   14000432e:	js     0x140017b6b
   140004334:	cmp    edi,0x8
   140004337:	jne    0x140017a6f
   14000433d:	mov    rax,QWORD PTR [rax]
   140004340:	mov    QWORD PTR [rbp+0x570],rax
   140004347:	test   r15d,r15d
   14000434a:	js     0x140017b6b
   140004350:	cmp    QWORD PTR [rbp+0xe8],0x0
   140004358:	je     0x140017a83
   14000435e:	mov    rcx,QWORD PTR [rbp+0xe8]
   140004365:	mov    QWORD PTR [rbp+0x1f0],rcx
   14000436c:	mov    edi,r13d
   14000436f:	lea    rdx,[rcx+0x4]
   140004373:	cmp    rdx,rcx
   140004376:	jb     0x140017ac3
   14000437c:	mov    QWORD PTR [rbp+0x1f0],rdx
   140004383:	mov    ecx,DWORD PTR [rcx]
   140004385:	add    rcx,rdx
   140004388:	cmp    rcx,rdx
   14000438b:	jb     0x140017ac3
   140004391:	mov    QWORD PTR [rbp+0x1f0],rcx
   140004398:	inc    edi
   14000439a:	cmp    edi,0x2
   14000439d:	jb     0x14000436f
   14000439f:	mov    edi,DWORD PTR [rcx]
   1400043a1:	lea    r8,[rbp+0x1f0]
   1400043a8:	mov    edx,0x4
   1400043ad:	call   0x14000baf0
   1400043b2:	mov    r15d,eax
   1400043b5:	test   eax,eax
   1400043b7:	js     0x140017a9d
   1400043bd:	mov    DWORD PTR [rbp+0x338],edi
   1400043c3:	test   edi,edi
   1400043c5:	je     0x140017a8e
   1400043cb:	mov    rax,QWORD PTR [rbp+0x1f0]
   1400043d2:	mov    QWORD PTR [rbp+0x550],rax
   1400043d9:	test   r15d,r15d
   1400043dc:	js     0x140017b6b
   1400043e2:	cmp    edi,edx
   1400043e4:	jne    0x140017aaf
   1400043ea:	mov    eax,DWORD PTR [rax]
   1400043ec:	mov    DWORD PTR [rbp+0x470],eax
   1400043f2:	test   r15d,r15d
   1400043f5:	js     0x140017b6b
   1400043fb:	cmp    QWORD PTR [rbp+0xe8],0x0
   140004403:	je     0x140017ace
   140004409:	mov    rcx,QWORD PTR [rbp+0xe8]
   140004410:	mov    QWORD PTR [rbp+0x1a8],rcx
   140004417:	mov    edi,r13d
   14000441a:	lea    rdx,[rcx+0x4]
   14000441e:	cmp    rdx,rcx
   140004421:	jb     0x140017bc0
   140004427:	mov    QWORD PTR [rbp+0x1a8],rdx
   14000442e:	mov    ecx,DWORD PTR [rcx]
   140004430:	add    rcx,rdx
   140004433:	cmp    rcx,rdx
   140004436:	jb     0x140017bc0
   14000443c:	mov    QWORD PTR [rbp+0x1a8],rcx
   140004443:	inc    edi
   140004445:	cmp    edi,0x3
   140004448:	jb     0x14000441a
   14000444a:	mov    r9d,DWORD PTR [rcx]
   14000444d:	lea    r8,[rbp+0x1a8]
   140004454:	mov    edx,0x4
   140004459:	call   0x14000baf0
   14000445e:	mov    r15d,eax
   140004461:	test   eax,eax
   140004463:	js     0x140017af1
   140004469:	mov    DWORD PTR [rbp+0x448],r9d
   140004470:	test   r9d,r9d
   140004473:	je     0x140017ae2
   140004479:	mov    r10,QWORD PTR [rbp+0x1a8]
   140004480:	mov    QWORD PTR [rbp+0x640],r10
   140004487:	test   eax,eax
   140004489:	js     0x140017b6b
   14000448f:	mov    rcx,QWORD PTR [rbp+0xe8]
   140004496:	mov    QWORD PTR [rbp+0x208],rcx
   14000449d:	mov    edi,r13d
   1400044a0:	lea    rdx,[rcx+0x4]
   1400044a4:	cmp    rdx,rcx
   1400044a7:	jb     0x140017b39
   1400044ad:	mov    QWORD PTR [rbp+0x208],rdx
   1400044b4:	mov    ecx,DWORD PTR [rcx]
   1400044b6:	add    rcx,rdx
   1400044b9:	cmp    rcx,rdx
   1400044bc:	jb     0x140017b39
   1400044c2:	mov    QWORD PTR [rbp+0x208],rcx
   1400044c9:	inc    edi
   1400044cb:	cmp    edi,0x4
   1400044ce:	jb     0x1400044a0
   1400044d0:	mov    edi,DWORD PTR [rcx]
   1400044d2:	lea    r8,[rbp+0x208]
   1400044d9:	mov    edx,0x4
   1400044de:	call   0x14000baf0
   1400044e3:	mov    r15d,eax
   1400044e6:	test   eax,eax
   1400044e8:	js     0x140017b13
   1400044ee:	mov    DWORD PTR [rbp+0x348],edi
   1400044f4:	test   edi,edi
   1400044f6:	je     0x140017b04
   1400044fc:	mov    rax,QWORD PTR [rbp+0x208]
   140004503:	mov    QWORD PTR [rbp+0x560],rax
   14000450a:	test   r15d,r15d
   14000450d:	js     0x140017b6b
   140004513:	cmp    edi,edx
   140004515:	jne    0x140017b25
   14000451b:	mov    eax,DWORD PTR [rax]
   14000451d:	mov    DWORD PTR [rbp+0x358],eax
   140004523:	test   r15d,r15d
   140004526:	js     0x140017b6b
   14000452c:	mov    rcx,QWORD PTR [rbp+0xe8]
   140004533:	mov    QWORD PTR [rbp+0x218],rcx
   14000453a:	mov    edi,r13d
   14000453d:	nop    DWORD PTR [rax]
   140004540:	lea    rdx,[rcx+0x4]
   140004544:	cmp    rdx,rcx
   140004547:	jb     0x140017b79
   14000454d:	mov    QWORD PTR [rbp+0x218],rdx
   140004554:	mov    ecx,DWORD PTR [rcx]
   140004556:	add    rcx,rdx
   140004559:	cmp    rcx,rdx
   14000455c:	jb     0x140017b79
   140004562:	mov    QWORD PTR [rbp+0x218],rcx
   140004569:	inc    edi
   14000456b:	cmp    edi,0x5
   14000456e:	jb     0x140004540
   140004570:	mov    edi,DWORD PTR [rcx]
   140004572:	lea    r8,[rbp+0x218]
   140004579:	mov    edx,0x4
   14000457e:	call   0x14000baf0
   140004583:	mov    r15d,eax
   140004586:	test   eax,eax
   140004588:	js     0x140017b53
   14000458e:	mov    DWORD PTR [rbp+0x408],edi
   140004594:	test   edi,edi
   140004596:	je     0x140017b44
   14000459c:	mov    rax,QWORD PTR [rbp+0x218]
   1400045a3:	mov    QWORD PTR [rbp+0x650],rax
   1400045aa:	test   r15d,r15d
   1400045ad:	js     0x140017b6b
   1400045b3:	cmp    edi,edx
   1400045b5:	jne    0x140017b65
   1400045bb:	mov    eax,DWORD PTR [rax]
   1400045bd:	mov    DWORD PTR [rbp+0x1e8],eax
   1400045c3:	test   r15d,r15d
   1400045c6:	js     0x140017b6b
   1400045cc:	mov    rax,QWORD PTR [rbp+0x570]
   1400045d3:	cmp    QWORD PTR [rbp+0x4f8],rax
   1400045da:	jne    0x140017b84
   1400045e0:	mov    ecx,DWORD PTR [rbp+0x358]
   1400045e6:	mov    DWORD PTR [rbp+0x164],ecx
   1400045ec:	mov    eax,DWORD PTR [rbp+0x1e8]
   1400045f2:	mov    DWORD PTR [rbp+0x84],eax
   1400045f8:	mov    eax,DWORD PTR [rbp+0x470]
   1400045fe:	mov    DWORD PTR [rbp+0x1b4],eax
   140004604:	cmp    ecx,0x4
   140004607:	ja     0x140017b98
   14000460d:	cmp    r9d,0x4
   140004611:	ja     0x140017bac
   140004617:	mov    r8d,r9d
   14000461a:	mov    rdx,r10
   14000461d:	mov    rcx,QWORD PTR [rbp+0x140]
   140004624:	call   0x1400156f2
   140004629:	mov    eax,DWORD PTR [rbp+0x80]
   14000462f:	mov    r12,QWORD PTR [rsp+0x68]
   140004634:	mov    rsi,QWORD PTR [rbp-0x80]
   140004638:	test   eax,eax
   14000463a:	je     0x14000463f
   14000463c:	mov    r15d,eax
   14000463f:	mov    DWORD PTR [rbp-0x5c],r13d
   140004643:	mov    DWORD PTR [rbp-0x60],r13d
   140004647:	mov    rbx,QWORD PTR [rbp-0x58]
   14000464b:	test   rbx,rbx
   14000464e:	je     0x140004668
   140004650:	call   QWORD PTR [rip+0x38b6a]        # 0x14003d1c0
   140004656:	mov    rcx,rax
   140004659:	mov    r8,rbx
   14000465c:	xor    edx,edx
   14000465e:	call   QWORD PTR [rip+0x38b7c]        # 0x14003d1e0
   140004664:	mov    QWORD PTR [rbp-0x58],r13
   140004668:	mov    DWORD PTR [rbp+0xe4],r13d
   14000466f:	mov    DWORD PTR [rbp+0xe0],r13d
   140004676:	mov    rdi,QWORD PTR [rbp+0xe8]
   14000467d:	test   rdi,rdi
   140004680:	je     0x14000469d
   140004682:	call   QWORD PTR [rip+0x38b38]        # 0x14003d1c0
   140004688:	mov    rcx,rax
   14000468b:	mov    r8,rdi
   14000468e:	xor    edx,edx
   140004690:	call   QWORD PTR [rip+0x38b4a]        # 0x14003d1e0
   140004696:	mov    QWORD PTR [rbp+0xe8],r13
   14000469d:	test   r12,r12
   1400046a0:	je     0x1400046b6
   1400046a2:	call   QWORD PTR [rip+0x38b18]        # 0x14003d1c0
   1400046a8:	mov    rcx,rax
   1400046ab:	mov    r8,r12
   1400046ae:	xor    edx,edx
   1400046b0:	call   QWORD PTR [rip+0x38b2a]        # 0x14003d1e0
   1400046b6:	test   rsi,rsi
   1400046b9:	je     0x1400046cf
   1400046bb:	call   QWORD PTR [rip+0x38aff]        # 0x14003d1c0
   1400046c1:	mov    rcx,rax
   1400046c4:	mov    r8,rsi
   1400046c7:	xor    edx,edx
   1400046c9:	call   QWORD PTR [rip+0x38b11]        # 0x14003d1e0
   1400046cf:	test   r15d,r15d
   1400046d2:	js     0x14001e9a7
   1400046d8:	mov    eax,DWORD PTR [rbp+0x84]
   1400046de:	test   eax,eax
   1400046e0:	jne    0x140017c0d
   1400046e6:	lea    r12d,[rax+0x1]
   1400046ea:	lea    rbx,[rip+0x4aa5f]        # 0x14004f150
   1400046f1:	lea    r14,[rip+0x49928]        # 0x14004e020
   1400046f8:	mov    eax,DWORD PTR [rbp+0x164]
   1400046fe:	mov    DWORD PTR [rbp+0x548],eax
   140004704:	mov    esi,DWORD PTR [rbp+0x1b4]
   14000470a:	mov    QWORD PTR [rbp+0x250],r13
   140004711:	mov    rax,QWORD PTR [rbp+0x140]
   140004718:	mov    QWORD PTR [rbp+0x400],rax
   14000471f:	xor    eax,eax
   140004721:	lock cmpxchg DWORD PTR [rip+0x4aa16],r12d        # 0x14004f140
   14000472a:	jne    0x14000471f
   14000472c:	mov    eax,DWORD PTR [rip+0x4a416]        # 0x14004eb48
   140004732:	test   eax,eax
   140004734:	jle    0x140004788
   140004736:	sub    eax,0x1
   140004739:	mov    DWORD PTR [rip+0x4a409],eax        # 0x14004eb48
   14000473f:	jne    0x140004788
   140004741:	mov    rdi,rbx
   140004744:	mov    ebx,0x4
   140004749:	mov    rcx,QWORD PTR [rdi]
   14000474c:	test   rcx,rcx
   14000474f:	je     0x140004757
   140004751:	call   QWORD PTR [rip+0x38b01]        # 0x14003d258
   140004757:	add    rdi,0x18
   14000475b:	sub    rbx,0x1
   14000475f:	jne    0x140004749
   140004761:	xor    edx,edx
   140004763:	lea    r8d,[rbx+0x60]
   140004767:	lea    rcx,[rip+0x4a9e2]        # 0x14004f150
   14000476e:	call   0x140014694
   140004773:	mov    r8d,0x170
   140004779:	lea    rdx,[rip+0x3cff0]        # 0x140041770
   140004780:	mov    rcx,r14
   140004783:	call   0x1400156f2
   140004788:	mov    eax,r13d
   14000478b:	xchg   DWORD PTR [rip+0x4a9af],eax        # 0x14004f140
   140004791:	lea    rcx,[rbp+0x250]
   140004798:	call   0x140001358
   14000479d:	test   r15d,r15d
   1400047a0:	js     0x14001e9c6
   1400047a6:	cmp    esi,0x4
   1400047a9:	jne    0x14001ea22
   1400047af:	lea    rcx,[rbp+0x400]
   1400047b6:	call   0x140001380
   1400047bb:	mov    ecx,DWORD PTR [rax]
   1400047bd:	mov    DWORD PTR [rbp+0x2e8],ecx
   1400047c3:	mov    edi,DWORD PTR [rbp+0x7c]
   1400047c6:	lea    rcx,[rbp+0x400]
   1400047cd:	call   0x140001358
   1400047d2:	test   edi,edi
   1400047d4:	js     0x14000150d
   1400047da:	cmp    BYTE PTR [rip+0x4a397],0x0        # 0x14004eb78
   1400047e1:	jne    0x14000150d
   1400047e7:	jmp    0x140004870
   1400047ec:	call   QWORD PTR [rip+0x38976]        # 0x14003d168
   1400047f2:	cmp    eax,0x7a
   1400047f5:	jne    0x140016efe
   1400047fb:	test   rsi,rsi
   1400047fe:	jne    0x140016f10
   140004804:	mov    ecx,DWORD PTR [rbp+0x1f8]
   14000480a:	call   0x14000f134
   14000480f:	mov    rsi,rax
   140004812:	test   rax,rax
   140004815:	je     0x140016ef4
   14000481b:	mov    QWORD PTR [rbp+0x270],rax
   140004822:	mov    r15d,DWORD PTR [rbp+0x1f8]
   140004829:	jmp    0x1400020d6
   14000482e:	call   QWORD PTR [rip+0x38934]        # 0x14003d168
   140004834:	cmp    eax,0x7a
   140004837:	jne    0x140016f42
   14000483d:	test   rsi,rsi
   140004840:	jne    0x140016f4f
   140004846:	mov    ecx,DWORD PTR [rbp+0x1fc]
   14000484c:	call   0x14000f134
   140004851:	mov    rsi,rax
   140004854:	test   rax,rax
   140004857:	je     0x140016f38
   14000485d:	mov    QWORD PTR [rbp+0x2b0],rax
   140004864:	mov    r15d,DWORD PTR [rbp+0x1fc]
   14000486b:	jmp    0x140002175
   140004870:	xor    bl,bl
   140004872:	jmp    0x14000150f
   140004877:	lea    rax,[rbp+0x248]
   14000487e:	mov    QWORD PTR [rsp+0x20],rax
   140004883:	mov    r9d,r12d
   140004886:	mov    r8d,0x4
   14000488c:	mov    rdx,QWORD PTR [rbp+0x150]
   140004893:	lea    rcx,[rip+0x39616]        # 0x14003deb0
   14000489a:	call   QWORD PTR [rip+0x4e838]        # 0x1400530d8
   1400048a0:	mov    r14d,eax
   1400048a3:	test   eax,eax
   1400048a5:	js     0x1400048d3
   1400048a7:	lea    rax,[rbp+0x180]
   1400048ae:	mov    QWORD PTR [rsp+0x20],rax
   1400048b3:	mov    r9d,r12d
   1400048b6:	mov    r8d,0x4
   1400048bc:	mov    rdx,QWORD PTR [rbp+0x150]
   1400048c3:	lea    rcx,[rip+0x395f6]        # 0x14003dec0
   1400048ca:	call   QWORD PTR [rip+0x4e808]        # 0x1400530d8
   1400048d0:	mov    r14d,eax
   1400048d3:	cmp    r14d,0x80004015
   1400048da:	jne    0x14000159e
   1400048e0:	jmp    0x140001572
   1400048e5:	int3   
   1400048e6:	int3   
   1400048e7:	int3   
   1400048e8:	int3   
   1400048e9:	int3   
   1400048ea:	int3   
   1400048eb:	int3   
   1400048ec:	mov    QWORD PTR [rsp+0x18],rbx
   1400048f1:	mov    QWORD PTR [rsp+0x20],rsi
   1400048f6:	mov    BYTE PTR [rsp+0x8],cl
   1400048fa:	push   rdi
   1400048fb:	sub    rsp,0x30
   1400048ff:	xor    ebx,ebx
   140004901:	call   QWORD PTR [rip+0x389f1]        # 0x14003d2f8
   140004907:	mov    ecx,eax
   140004909:	call   QWORD PTR [rip+0x387c1]        # 0x14003d0d0
   14000490f:	xor    r9d,r9d
   140004912:	mov    DWORD PTR [rsp+0x40],ebx
   140004916:	mov    rsi,rax
   140004919:	lea    edx,[rbx+0x2]
   14000491c:	lea    rax,[rsp+0x40]
   140004921:	mov    rcx,rsi
   140004924:	xor    r8d,r8d
   140004927:	mov    QWORD PTR [rsp+0x20],rax
   14000492c:	call   QWORD PTR [rip+0x3870e]        # 0x14003d040
   140004932:	mov    ecx,DWORD PTR [rsp+0x40]
   140004936:	lea    eax,[rbx+0x2]
   140004939:	shr    rcx,1
   14000493c:	mul    rcx
   14000493f:	lea    rcx,[rbx-0x1]
   140004943:	cmovo  rax,rcx
   140004947:	mov    rcx,rax
   14000494a:	call   0x140013dd4
   14000494f:	mov    rdi,rax
   140004952:	test   rax,rax
   140004955:	je     0x14000499a
   140004957:	mov    r9d,DWORD PTR [rsp+0x40]
   14000495c:	lea    rax,[rsp+0x48]
   140004961:	mov    r8,rdi
   140004964:	mov    QWORD PTR [rsp+0x20],rax
   140004969:	lea    edx,[rbx+0x2]
   14000496c:	mov    DWORD PTR [rsp+0x48],ebx
   140004970:	mov    rcx,rsi
   140004973:	call   QWORD PTR [rip+0x386c7]        # 0x14003d040
   140004979:	test   eax,eax
   14000497b:	je     0x140004992
   14000497d:	mov    eax,DWORD PTR [rsp+0x40]
   140004981:	cmp    DWORD PTR [rsp+0x48],eax
   140004985:	ja     0x140004992
   140004987:	mov    rdx,rdi
   14000498a:	call   0x140004c10
   14000498f:	mov    rbx,rax
   140004992:	mov    rcx,rdi
   140004995:	call   0x140013de0
   14000499a:	mov    rsi,QWORD PTR [rsp+0x58]
   14000499f:	mov    rax,rbx
   1400049a2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400049a7:	add    rsp,0x30
   1400049ab:	pop    rdi
   1400049ac:	ret    
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	int3   
   1400049b1:	int3   
   1400049b2:	int3   
   1400049b3:	int3   
   1400049b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400049b9:	mov    QWORD PTR [rsp+0x10],rdi
   1400049be:	push   rbp
   1400049bf:	lea    rbp,[rsp-0x57]
   1400049c4:	sub    rsp,0xd0
   1400049cb:	mov    rax,QWORD PTR [rip+0x4963e]        # 0x14004e010
   1400049d2:	xor    rax,rsp
   1400049d5:	mov    QWORD PTR [rbp+0x47],rax
   1400049d9:	and    QWORD PTR [rbp-0x41],0x0
   1400049de:	and    DWORD PTR [rbp-0x49],0x0
   1400049e2:	call   QWORD PTR [rip+0x388f8]        # 0x14003d2e0
   1400049e8:	lea    r8,[rbp-0x41]
   1400049ec:	mov    edx,0x8
   1400049f1:	mov    rcx,rax
   1400049f4:	call   QWORD PTR [rip+0x388b6]        # 0x14003d2b0
   1400049fa:	test   eax,eax
   1400049fc:	je     0x14001eb64
   140004a02:	mov    r9d,DWORD PTR [rbp-0x49]
   140004a06:	lea    rax,[rbp-0x49]
   140004a0a:	mov    rcx,QWORD PTR [rbp-0x41]
   140004a0e:	xor    r8d,r8d
   140004a11:	mov    QWORD PTR [rsp+0x20],rax
   140004a16:	lea    ebx,[r8+0x1]
   140004a1a:	mov    edx,ebx
   140004a1c:	call   QWORD PTR [rip+0x38aee]        # 0x14003d510
   140004a22:	mov    ecx,DWORD PTR [rbp-0x49]
   140004a25:	call   0x140013dd4
   140004a2a:	mov    rcx,QWORD PTR [rbp-0x41]
   140004a2e:	mov    rdi,rax
   140004a31:	test   rax,rax
   140004a34:	je     0x14001eb5e
   140004a3a:	mov    r9d,DWORD PTR [rbp-0x49]
   140004a3e:	lea    rax,[rbp-0x49]
   140004a42:	mov    r8,rdi
   140004a45:	mov    QWORD PTR [rsp+0x20],rax
   140004a4a:	mov    edx,ebx
   140004a4c:	call   QWORD PTR [rip+0x38abe]        # 0x14003d510
   140004a52:	test   eax,eax
   140004a54:	je     0x14001eb52
   140004a5a:	lea    rcx,[rbp-0x39]
   140004a5e:	call   0x140004eec
   140004a63:	mov    rcx,QWORD PTR [rdi]
   140004a66:	lea    rdx,[rax+0x8]
   140004a6a:	call   QWORD PTR [rip+0x38a50]        # 0x14003d4c0
   140004a70:	lea    rcx,[rbp-0x39]
   140004a74:	mov    ebx,eax
   140004a76:	call   0x140006920
   140004a7b:	mov    rcx,rdi
   140004a7e:	call   0x140013de0
   140004a83:	mov    eax,ebx
   140004a85:	mov    rcx,QWORD PTR [rbp+0x47]
   140004a89:	xor    rcx,rsp
   140004a8c:	call   0x1400141d0
   140004a91:	lea    r11,[rsp+0xd0]
   140004a99:	mov    rbx,QWORD PTR [r11+0x10]
   140004a9d:	mov    rdi,QWORD PTR [r11+0x18]
   140004aa1:	mov    rsp,r11
   140004aa4:	pop    rbp
   140004aa5:	ret    
   140004aa6:	int3   
   140004aa7:	int3   
   140004aa8:	int3   
   140004aa9:	int3   
   140004aaa:	int3   
   140004aab:	int3   
   140004aac:	mov    QWORD PTR [rsp+0x18],rbx
   140004ab1:	mov    QWORD PTR [rsp+0x20],rsi
   140004ab6:	mov    BYTE PTR [rsp+0x8],cl
   140004aba:	push   rdi
   140004abb:	sub    rsp,0x30
   140004abf:	xor    ebx,ebx
   140004ac1:	call   QWORD PTR [rip+0x38831]        # 0x14003d2f8
   140004ac7:	mov    ecx,eax
   140004ac9:	call   QWORD PTR [rip+0x38601]        # 0x14003d0d0
   140004acf:	xor    r9d,r9d
   140004ad2:	mov    DWORD PTR [rsp+0x40],ebx
   140004ad6:	mov    rsi,rax
   140004ad9:	lea    edx,[rbx+0x2]
   140004adc:	lea    rax,[rsp+0x40]
   140004ae1:	mov    rcx,rsi
   140004ae4:	xor    r8d,r8d
   140004ae7:	mov    QWORD PTR [rsp+0x20],rax
   140004aec:	call   QWORD PTR [rip+0x3854e]        # 0x14003d040
   140004af2:	mov    ecx,DWORD PTR [rsp+0x40]
   140004af6:	lea    eax,[rbx+0x2]
   140004af9:	shr    rcx,1
   140004afc:	mul    rcx
   140004aff:	lea    rcx,[rbx-0x1]
   140004b03:	cmovo  rax,rcx
   140004b07:	mov    rcx,rax
   140004b0a:	call   0x140013dd4
   140004b0f:	mov    rdi,rax
   140004b12:	test   rax,rax
   140004b15:	je     0x140004b5a
   140004b17:	mov    r9d,DWORD PTR [rsp+0x40]
   140004b1c:	lea    rax,[rsp+0x48]
   140004b21:	mov    r8,rdi
   140004b24:	mov    QWORD PTR [rsp+0x20],rax
   140004b29:	lea    edx,[rbx+0x2]
   140004b2c:	mov    DWORD PTR [rsp+0x48],ebx
   140004b30:	mov    rcx,rsi
   140004b33:	call   QWORD PTR [rip+0x38507]        # 0x14003d040
   140004b39:	test   eax,eax
   140004b3b:	je     0x140004b52
   140004b3d:	mov    eax,DWORD PTR [rsp+0x40]
   140004b41:	cmp    DWORD PTR [rsp+0x48],eax
   140004b45:	ja     0x140004b52
   140004b47:	mov    rdx,rdi
   140004b4a:	call   0x140004d30
   140004b4f:	mov    rbx,rax
   140004b52:	mov    rcx,rdi
   140004b55:	call   0x140013de0
   140004b5a:	mov    rsi,QWORD PTR [rsp+0x58]
   140004b5f:	mov    rax,rbx
   140004b62:	mov    rbx,QWORD PTR [rsp+0x50]
   140004b67:	add    rsp,0x30
   140004b6b:	pop    rdi
   140004b6c:	ret    
   140004b6d:	int3   
   140004b6e:	int3   
   140004b6f:	int3   
   140004b70:	int3   
   140004b71:	int3   
   140004b72:	int3   
   140004b73:	int3   
   140004b74:	rex push rbx
   140004b76:	sub    rsp,0x30
   140004b7a:	and    DWORD PTR [rsp+0x20],0x0
   140004b7f:	lea    rdx,[rip+0x3975e]        # 0x14003e2e4
   140004b86:	xor    r9d,r9d
   140004b89:	mov    rbx,rcx
   140004b8c:	lea    r8d,[r9+0x1]
   140004b90:	call   0x1400069c0
   140004b95:	mov    rax,rbx
   140004b98:	add    rsp,0x30
   140004b9c:	pop    rbx
   140004b9d:	ret    
   140004b9e:	int3   
   140004b9f:	int3   
   140004ba0:	int3   
   140004ba1:	int3   
   140004ba2:	int3   
   140004ba3:	int3   
   140004ba4:	rex push rbx
   140004ba6:	sub    rsp,0x30
   140004baa:	and    DWORD PTR [rsp+0x20],0x0
   140004baf:	lea    rdx,[rip+0x397ba]        # 0x14003e370
   140004bb6:	mov    r9d,0x2
   140004bbc:	mov    rbx,rcx
   140004bbf:	lea    r8d,[r9-0x1]
   140004bc3:	call   0x1400069c0
   140004bc8:	mov    rax,rbx
   140004bcb:	add    rsp,0x30
   140004bcf:	pop    rbx
   140004bd0:	ret    
   140004bd1:	int3   
   140004bd2:	int3   
   140004bd3:	int3   
   140004bd4:	int3   
   140004bd5:	int3   
   140004bd6:	int3   
   140004bd7:	int3   
   140004bd8:	lea    rcx,[rip+0x4a2f1]        # 0x14004eed0
   140004bdf:	jmp    0x140004fc4
   140004be4:	int3   
   140004be5:	int3   
   140004be6:	int3   
   140004be7:	int3   
   140004be8:	int3   
   140004be9:	int3   
   140004bea:	int3   
   140004beb:	int3   
   140004bec:	sub    rsp,0x28
   140004bf0:	lea    rcx,[rip+0x4a2d9]        # 0x14004eed0
   140004bf7:	call   0x140005040
   140004bfc:	lea    rax,[rip+0x4a2cd]        # 0x14004eed0
   140004c03:	add    rsp,0x28
   140004c07:	ret    
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	mov    rax,rsp
   140004c13:	push   r14
   140004c15:	sub    rsp,0x50
   140004c19:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140004c21:	mov    QWORD PTR [rax+0x8],rbx
   140004c25:	mov    QWORD PTR [rax+0x10],rbp
   140004c29:	mov    QWORD PTR [rax+0x18],rsi
   140004c2d:	mov    QWORD PTR [rax+0x20],rdi
   140004c31:	mov    rbp,rdx
   140004c34:	xor    r14d,r14d
   140004c37:	mov    esi,r14d
   140004c3a:	or     rcx,0xffffffffffffffff
   140004c3e:	mov    rbx,rcx
   140004c41:	inc    rbx
   140004c44:	cmp    WORD PTR [rdx+rbx*2],r14w
   140004c49:	jne    0x140004c41
   140004c4b:	add    rbx,0xe
   140004c4f:	mov    eax,0x2
   140004c54:	mul    rbx
   140004c57:	cmovo  rax,rcx
   140004c5b:	mov    rcx,rax
   140004c5e:	call   0x140013dd4
   140004c63:	mov    rdi,rax
   140004c66:	test   rax,rax
   140004c69:	je     0x140004d03
   140004c6f:	mov    WORD PTR [rax],r14w
   140004c73:	mov    r8,rbp
   140004c76:	mov    rdx,rbx
   140004c79:	mov    rcx,rax
   140004c7c:	call   0x140004e10
   140004c81:	test   eax,eax
   140004c83:	js     0x140004d03
   140004c85:	lea    r8,[rip+0x39614]        # 0x14003e2a0
   140004c8c:	mov    rdx,rbx
   140004c8f:	mov    rcx,rdi
   140004c92:	call   0x140004e10
   140004c97:	test   eax,eax
   140004c99:	js     0x140004d03
   140004c9b:	mov    DWORD PTR [rsp+0x38],0x18
   140004ca3:	lea    rbx,[rip+0x39676]        # 0x14003e320
   140004caa:	mov    QWORD PTR [rsp+0x28],rbx
   140004caf:	mov    QWORD PTR [rsp+0x30],r14
   140004cb4:	lea    rcx,[rsp+0x28]
   140004cb9:	call   0x1400055cc
   140004cbe:	mov    rax,QWORD PTR [rsp+0x30]
   140004cc3:	mov    QWORD PTR [rsp+0x40],rax
   140004cc8:	mov    DWORD PTR [rsp+0x48],r14d
   140004ccd:	mov    r8,rdi
   140004cd0:	mov    edx,0x1
   140004cd5:	lea    rcx,[rsp+0x38]
   140004cda:	call   QWORD PTR [rip+0x38720]        # 0x14003d400
   140004ce0:	mov    rsi,rax
   140004ce3:	call   QWORD PTR [rip+0x3847f]        # 0x14003d168
   140004ce9:	cmp    eax,0xb7
   140004cee:	je     0x14001eb6c
   140004cf4:	mov    QWORD PTR [rsp+0x28],rbx
   140004cf9:	lea    rcx,[rsp+0x28]
   140004cfe:	call   0x1400050f0
   140004d03:	mov    rcx,rdi
   140004d06:	call   0x140013de0
   140004d0b:	mov    rax,rsi
   140004d0e:	mov    rbx,QWORD PTR [rsp+0x60]
   140004d13:	mov    rbp,QWORD PTR [rsp+0x68]
   140004d18:	mov    rsi,QWORD PTR [rsp+0x70]
   140004d1d:	mov    rdi,QWORD PTR [rsp+0x78]
   140004d22:	add    rsp,0x50
   140004d26:	pop    r14
   140004d28:	ret    
   140004d29:	int3   
   140004d2a:	int3   
   140004d2b:	int3   
   140004d2c:	int3   
   140004d2d:	int3   
   140004d2e:	int3   
   140004d2f:	int3   
   140004d30:	mov    rax,rsp
   140004d33:	mov    QWORD PTR [rax+0x8],rbx
   140004d37:	mov    QWORD PTR [rax+0x10],rbp
   140004d3b:	mov    QWORD PTR [rax+0x18],rsi
   140004d3f:	mov    QWORD PTR [rax+0x20],rdi
   140004d43:	push   r14
   140004d45:	sub    rsp,0x20
   140004d49:	xor    r14d,r14d
   140004d4c:	mov    rbp,rdx
   140004d4f:	or     rcx,0xffffffffffffffff
   140004d53:	mov    esi,r14d
   140004d56:	mov    rbx,rcx
   140004d59:	inc    rbx
   140004d5c:	cmp    WORD PTR [rdx+rbx*2],r14w
   140004d61:	jne    0x140004d59
   140004d63:	add    rbx,0x12
   140004d67:	mov    eax,0x2
   140004d6c:	mul    rbx
   140004d6f:	cmovo  rax,rcx
   140004d73:	mov    rcx,rax
   140004d76:	call   0x140013dd4
   140004d7b:	mov    rdi,rax
   140004d7e:	test   rax,rax
   140004d81:	je     0x140004dd5
   140004d83:	mov    r8,rbp
   140004d86:	mov    WORD PTR [rax],r14w
   140004d8a:	mov    rdx,rbx
   140004d8d:	mov    rcx,rax
   140004d90:	call   0x140004e10
   140004d95:	test   eax,eax
   140004d97:	js     0x140004dd5
   140004d99:	lea    r8,[rip+0x39520]        # 0x14003e2c0
   140004da0:	mov    rdx,rbx
   140004da3:	mov    rcx,rdi
   140004da6:	call   0x140004e10
   140004dab:	test   eax,eax
   140004dad:	js     0x140004dd5
   140004daf:	xor    r8d,r8d
   140004db2:	mov    r9,rdi
   140004db5:	xor    ecx,ecx
   140004db7:	lea    edx,[r8+0x1]
   140004dbb:	call   QWORD PTR [rip+0x3861f]        # 0x14003d3e0
   140004dc1:	mov    rsi,rax
   140004dc4:	call   QWORD PTR [rip+0x3839e]        # 0x14003d168
   140004dca:	cmp    eax,0xb7
   140004dcf:	je     0x14001eb7e
   140004dd5:	mov    rcx,rdi
   140004dd8:	call   0x140013de0
   140004ddd:	mov    rbx,QWORD PTR [rsp+0x30]
   140004de2:	mov    rax,rsi
   140004de5:	mov    rsi,QWORD PTR [rsp+0x40]
   140004dea:	mov    rbp,QWORD PTR [rsp+0x38]
   140004def:	mov    rdi,QWORD PTR [rsp+0x48]
   140004df4:	add    rsp,0x20
   140004df8:	pop    r14
   140004dfa:	ret    
   140004dfb:	int3   
   140004dfc:	int3   
   140004dfd:	int3   
   140004dfe:	int3   
   140004dff:	int3   
   140004e00:	int3   
   140004e01:	int3   
   140004e02:	int3   
   140004e03:	int3   
   140004e04:	int3   
   140004e05:	int3   
   140004e06:	int3   
   140004e07:	int3   
   140004e08:	int3   
   140004e09:	int3   
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	mov    QWORD PTR [rsp+0x8],rbx
   140004e15:	mov    r10,rdx
   140004e18:	xor    ebx,ebx
   140004e1a:	mov    r9,r8
   140004e1d:	mov    r11,rcx
   140004e20:	mov    edx,ebx
   140004e22:	lea    rax,[r10-0x1]
   140004e26:	cmp    rax,0x7ffffffe
   140004e2c:	ja     0x14001eb90
   140004e32:	test   edx,edx
   140004e34:	js     0x140004edc
   140004e3a:	mov    rcx,r10
   140004e3d:	mov    rax,r11
   140004e40:	mov    edx,ebx
   140004e42:	test   r10,r10
   140004e45:	je     0x14001eb9a
   140004e4b:	nop    DWORD PTR [rax+rax*1+0x0]
   140004e50:	cmp    WORD PTR [rax],dx
   140004e53:	je     0x140004e64
   140004e55:	add    rax,0x2
   140004e59:	sub    rcx,0x1
   140004e5d:	jne    0x140004e50
   140004e5f:	jmp    0x14001eb9a
   140004e64:	test   rcx,rcx
   140004e67:	je     0x14001eb9a
   140004e6d:	mov    r8,r10
   140004e70:	sub    r8,rcx
   140004e73:	test   edx,edx
   140004e75:	js     0x140004ee1
   140004e77:	mov    rdx,r10
   140004e7a:	lea    rax,[r11+r8*2]
   140004e7e:	mov    r11d,ebx
   140004e81:	sub    rdx,r8
   140004e84:	je     0x140004ebf
   140004e86:	add    r8,0x7ffffffe
   140004e8d:	mov    rcx,rdx
   140004e90:	sub    rcx,r10
   140004e93:	add    r8,rcx
   140004e96:	sub    r9,rax
   140004e99:	nop    DWORD PTR [rax+0x0]
   140004ea0:	test   r8,r8
   140004ea3:	je     0x140004ecb
   140004ea5:	movzx  ecx,WORD PTR [r9+rax*1]
   140004eaa:	test   cx,cx
   140004ead:	je     0x140004ecb
   140004eaf:	mov    WORD PTR [rax],cx
   140004eb2:	dec    r8
   140004eb5:	add    rax,0x2
   140004eb9:	sub    rdx,0x1
   140004ebd:	jne    0x140004ea0
   140004ebf:	sub    rax,0x2
   140004ec3:	mov    r11d,0x8007007a
   140004ec9:	jmp    0x140004ed0
   140004ecb:	test   rdx,rdx
   140004ece:	je     0x140004ebf
   140004ed0:	mov    WORD PTR [rax],bx
   140004ed3:	mov    eax,r11d
   140004ed6:	mov    rbx,QWORD PTR [rsp+0x8]
   140004edb:	ret    
   140004edc:	mov    r8,rbx
   140004edf:	jmp    0x140004e73
   140004ee1:	mov    eax,edx
   140004ee3:	jmp    0x140004ed6
   140004ee5:	int3   
   140004ee6:	int3   
   140004ee7:	int3   
   140004ee8:	int3   
   140004ee9:	int3   
   140004eea:	int3   
   140004eeb:	int3   
   140004eec:	rex push rbx
   140004eee:	sub    rsp,0x30
   140004ef2:	and    DWORD PTR [rsp+0x20],0x0
   140004ef7:	lea    rdx,[rip+0x39472]        # 0x14003e370
   140004efe:	mov    r9d,0x12
   140004f04:	mov    rbx,rcx
   140004f07:	lea    r8d,[r9-0x11]
   140004f0b:	call   0x1400069c0
   140004f10:	mov    rax,rbx
   140004f13:	add    rsp,0x30
   140004f17:	pop    rbx
   140004f18:	ret    
   140004f19:	int3   
   140004f1a:	int3   
   140004f1b:	int3   
   140004f1c:	int3   
   140004f1d:	int3   
   140004f1e:	int3   
   140004f1f:	int3   
   140004f20:	rex push rbx
   140004f22:	sub    rsp,0x40
   140004f26:	and    DWORD PTR [rsp+0x30],0x0
   140004f2b:	lea    rdx,[rip+0x3943e]        # 0x14003e370
   140004f32:	mov    r9d,0x20
   140004f38:	mov    DWORD PTR [rsp+0x20],0x220
   140004f40:	mov    rbx,rcx
   140004f43:	lea    r8d,[r9-0x1e]
   140004f47:	call   0x1400069c0
   140004f4c:	mov    rax,rbx
   140004f4f:	add    rsp,0x40
   140004f53:	pop    rbx
   140004f54:	ret    
   140004f55:	int3   
   140004f56:	int3   
   140004f57:	int3   
   140004f58:	int3   
   140004f59:	int3   
   140004f5a:	int3   
   140004f5b:	int3   
   140004f5c:	rex push rbx
   140004f5e:	sub    rsp,0x20
   140004f62:	xor    ebx,ebx
   140004f64:	mov    QWORD PTR [rsp+0x30],rbx
   140004f69:	call   QWORD PTR [rip+0x38331]        # 0x14003d2a0
   140004f6f:	lea    r9,[rsp+0x30]
   140004f74:	mov    edx,0x80000000
   140004f79:	mov    rcx,rax
   140004f7c:	lea    r8d,[rbx+0x1]
   140004f80:	call   QWORD PTR [rip+0x3837a]        # 0x14003d300
   140004f86:	test   eax,eax
   140004f88:	jne    0x140004fb0
   140004f8a:	call   QWORD PTR [rip+0x381d8]        # 0x14003d168
   140004f90:	cmp    eax,0x3f0
   140004f95:	jne    0x140004fb5
   140004f97:	call   QWORD PTR [rip+0x38343]        # 0x14003d2e0
   140004f9d:	lea    r8,[rsp+0x30]
   140004fa2:	mov    edx,0x80000000
   140004fa7:	mov    rcx,rax
   140004faa:	call   QWORD PTR [rip+0x38300]        # 0x14003d2b0
   140004fb0:	mov    rbx,QWORD PTR [rsp+0x30]
   140004fb5:	mov    rax,rbx
   140004fb8:	add    rsp,0x20
   140004fbc:	pop    rbx
   140004fbd:	ret    
   140004fbe:	int3   
   140004fbf:	int3   
   140004fc0:	int3   
   140004fc1:	int3   
   140004fc2:	int3   
   140004fc3:	int3   
   140004fc4:	mov    QWORD PTR [rsp+0x8],rbx
   140004fc9:	mov    QWORD PTR [rsp+0x10],rbp
   140004fce:	mov    QWORD PTR [rsp+0x18],rsi
   140004fd3:	push   rdi
   140004fd4:	sub    rsp,0x20
   140004fd8:	lea    rbx,[rcx+0x48]
   140004fdc:	mov    rbp,rcx
   140004fdf:	inc    DWORD PTR [rbx+0x30]
   140004fe2:	cmp    QWORD PTR [rbx],0x0
   140004fe6:	jne    0x14001eba4
   140004fec:	mov    rcx,QWORD PTR [rbx]
   140004fef:	call   0x140013de0
   140004ff4:	and    QWORD PTR [rbx],0x0
   140004ff8:	and    QWORD PTR [rbx+0x8],0x0
   140004ffd:	cmp    DWORD PTR [rbx+0x30],0x0
   140005001:	je     0x14001ec13
   140005007:	mov    rcx,rbx
   14000500a:	call   0x140005d24
   14000500f:	dec    DWORD PTR [rbx+0x30]
   140005012:	mov    rcx,rbp
   140005015:	mov    rbx,QWORD PTR [rsp+0x30]
   14000501a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000501f:	mov    rsi,QWORD PTR [rsp+0x40]
   140005024:	add    rsp,0x20
   140005028:	pop    rdi
   140005029:	jmp    0x140007c60
   14000502e:	int3   
   14000502f:	int3   
   140005030:	int3   
   140005031:	int3   
   140005032:	int3   
   140005033:	int3   
   140005034:	int3   
   140005035:	int3   
   140005036:	int3   
   140005037:	int3   
   140005038:	int3   
   140005039:	int3   
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	int3   
   14000503d:	int3   
   14000503e:	int3   
   14000503f:	int3   
   140005040:	sub    rsp,0x28
   140005044:	xor    r11d,r11d
   140005047:	mov    DWORD PTR [rcx+0x10],0x11
   14000504e:	mov    r10d,0xffffffff
   140005054:	mov    QWORD PTR [rcx],r11
   140005057:	mov    QWORD PTR [rcx+0x8],r11
   14000505b:	mov    r9,rcx
   14000505e:	mov    QWORD PTR [rcx+0x20],r10
   140005062:	mov    QWORD PTR [rcx+0x28],r11
   140005066:	mov    DWORD PTR [rcx+0x30],r11d
   14000506a:	mov    QWORD PTR [rcx+0x38],r11
   14000506e:	mov    QWORD PTR [rcx+0x40],r11
   140005072:	mov    DWORD PTR [rcx+0x34],0xa
   140005079:	mov    DWORD PTR [rcx+0x14],0x3f400000
   140005080:	mov    DWORD PTR [rcx+0x18],0x3e800000
   140005087:	mov    DWORD PTR [rcx+0x1c],0x40100000
   14000508e:	call   0x140005ca8
   140005093:	add    rcx,0x48
   140005097:	mov    QWORD PTR [rcx],r11
   14000509a:	mov    QWORD PTR [rcx+0x8],r11
   14000509e:	mov    DWORD PTR [rcx+0x10],0x11
   1400050a5:	mov    QWORD PTR [rcx+0x20],r10
   1400050a9:	mov    QWORD PTR [rcx+0x28],r11
   1400050ad:	mov    DWORD PTR [rcx+0x30],r11d
   1400050b1:	mov    DWORD PTR [rcx+0x34],0xa
   1400050b8:	mov    QWORD PTR [rcx+0x38],r11
   1400050bc:	mov    QWORD PTR [rcx+0x40],r11
   1400050c0:	mov    DWORD PTR [rcx+0x14],0x3f400000
   1400050c7:	mov    DWORD PTR [rcx+0x18],0x3e800000
   1400050ce:	mov    DWORD PTR [rcx+0x1c],0x40100000
   1400050d5:	call   0x140005ca8
   1400050da:	mov    rax,r9
   1400050dd:	add    rsp,0x28
   1400050e1:	ret    
   1400050e2:	int3   
   1400050e3:	int3   
   1400050e4:	int3   
   1400050e5:	int3   
   1400050e6:	int3   
   1400050e7:	int3   
   1400050e8:	int3   
   1400050e9:	int3   
   1400050ea:	int3   
   1400050eb:	int3   
   1400050ec:	int3   
   1400050ed:	int3   
   1400050ee:	int3   
   1400050ef:	int3   
   1400050f0:	rex push rbp
   1400050f2:	push   rbx
   1400050f3:	mov    rbp,rsp
   1400050f6:	sub    rsp,0x48
   1400050fa:	cmp    QWORD PTR [rcx+0x8],0x0
   1400050ff:	mov    rbx,rcx
   140005102:	je     0x1400051b1
   140005108:	lea    rdx,[rbp+0x18]
   14000510c:	call   0x140005270
   140005111:	test   al,al
   140005113:	je     0x1400051a2
   140005119:	mov    eax,0x8000
   14000511e:	test   WORD PTR [rbp+0x18],ax
   140005122:	jne    0x1400051a2
   140005124:	mov    rcx,QWORD PTR [rbx+0x8]
   140005128:	lea    r8,[rbp+0x20]
   14000512c:	lea    rdx,[rbp+0x30]
   140005130:	call   QWORD PTR [rip+0x38342]        # 0x14003d478
   140005136:	mov    rcx,QWORD PTR [rbp+0x30]
   14000513a:	call   QWORD PTR [rip+0x38508]        # 0x14003d648
   140005140:	mov    rcx,QWORD PTR [rbx+0x8]
   140005144:	lea    r8,[rbp+0x20]
   140005148:	lea    rdx,[rbp-0x28]
   14000514c:	call   QWORD PTR [rip+0x383a6]        # 0x14003d4f8
   140005152:	mov    rcx,QWORD PTR [rbp-0x28]
   140005156:	call   QWORD PTR [rip+0x384ec]        # 0x14003d648
   14000515c:	mov    rcx,QWORD PTR [rbx+0x8]
   140005160:	lea    r9,[rbp+0x20]
   140005164:	lea    r8,[rbp-0x20]
   140005168:	lea    rdx,[rbp+0x28]
   14000516c:	call   QWORD PTR [rip+0x3832e]        # 0x14003d4a0
   140005172:	cmp    DWORD PTR [rbp+0x28],0x0
   140005176:	je     0x140005182
   140005178:	mov    rcx,QWORD PTR [rbp-0x20]
   14000517c:	call   QWORD PTR [rip+0x384c6]        # 0x14003d648
   140005182:	mov    rcx,QWORD PTR [rbx+0x8]
   140005186:	lea    r9,[rbp+0x20]
   14000518a:	lea    r8,[rbp-0x18]
   14000518e:	lea    rdx,[rbp+0x28]
   140005192:	call   QWORD PTR [rip+0x38330]        # 0x14003d4c8
   140005198:	cmp    DWORD PTR [rbp+0x28],0x0
   14000519c:	jne    0x14001ec2e
   1400051a2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400051a6:	call   QWORD PTR [rip+0x3849c]        # 0x14003d648
   1400051ac:	and    QWORD PTR [rbx+0x8],0x0
   1400051b1:	add    rsp,0x48
   1400051b5:	pop    rbx
   1400051b6:	pop    rbp
   1400051b7:	ret    
   1400051b8:	int3   
   1400051b9:	int3   
   1400051ba:	int3   
   1400051bb:	int3   
   1400051bc:	int3   
   1400051bd:	int3   
   1400051be:	int3   
   1400051bf:	int3   
   1400051c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400051c5:	push   rdi
   1400051c6:	sub    rsp,0x20
   1400051ca:	mov    rdi,rcx
   1400051cd:	mov    ecx,0x28
   1400051d2:	call   QWORD PTR [rip+0x38478]        # 0x14003d650
   1400051d8:	mov    QWORD PTR [rdi+0x8],rax
   1400051dc:	test   rax,rax
   1400051df:	je     0x14001ec3e
   1400051e5:	mov    edx,0x1
   1400051ea:	mov    rcx,rax
   1400051ed:	call   QWORD PTR [rip+0x3830d]        # 0x14003d500
   1400051f3:	test   eax,eax
   1400051f5:	je     0x14001ec49
   1400051fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140005200:	add    rsp,0x20
   140005204:	pop    rdi
   140005205:	ret    
   140005206:	int3   
   140005207:	int3   
   140005208:	int3   
   140005209:	int3   
   14000520a:	int3   
   14000520b:	int3   
   14000520c:	rex push rbp
   14000520e:	push   rbx
   14000520f:	push   rsi
   140005210:	push   rdi
   140005211:	push   r12
   140005213:	push   r13
   140005215:	push   r14
   140005217:	push   r15
   140005219:	mov    rbp,rsp
   14000521c:	sub    rsp,0x78
   140005220:	mov    rdi,rcx
   140005223:	xor    esi,esi
   140005225:	mov    rcx,QWORD PTR [rcx+0x8]
   140005229:	test   rcx,rcx
   14000522c:	je     0x140005257
   14000522e:	lea    r8,[rbp-0x10]
   140005232:	mov    WORD PTR [rbp+0x48],si
   140005236:	lea    rdx,[rbp+0x48]
   14000523a:	call   QWORD PTR [rip+0x382a8]        # 0x14003d4e8
   140005240:	test   eax,eax
   140005242:	je     0x14001ec68
   140005248:	mov    eax,0x8000
   14000524d:	test   WORD PTR [rbp+0x48],ax
   140005251:	jne    0x14001ec73
   140005257:	add    rsp,0x78
   14000525b:	pop    r15
   14000525d:	pop    r14
   14000525f:	pop    r13
   140005261:	pop    r12
   140005263:	pop    rdi
   140005264:	pop    rsi
   140005265:	pop    rbx
   140005266:	pop    rbp
   140005267:	ret    
   140005268:	int3   
   140005269:	int3   
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	int3   
   14000526d:	int3   
   14000526e:	int3   
   14000526f:	int3   
   140005270:	rex push rbx
   140005272:	sub    rsp,0x20
   140005276:	xor    ebx,ebx
   140005278:	test   rdx,rdx
   14000527b:	je     0x1400052a0
   14000527d:	mov    WORD PTR [rdx],bx
   140005280:	mov    rcx,QWORD PTR [rcx+0x8]
   140005284:	test   rcx,rcx
   140005287:	je     0x1400052a0
   140005289:	lea    r8,[rsp+0x38]
   14000528e:	call   QWORD PTR [rip+0x38254]        # 0x14003d4e8
   140005294:	test   eax,eax
   140005296:	je     0x1400052a0
   140005298:	mov    al,0x1
   14000529a:	add    rsp,0x20
   14000529e:	pop    rbx
   14000529f:	ret    
   1400052a0:	xor    al,al
   1400052a2:	jmp    0x14000529a
   1400052a4:	int3   
   1400052a5:	int3   
   1400052a6:	int3   
   1400052a7:	int3   
   1400052a8:	int3   
   1400052a9:	int3   
   1400052aa:	int3   
   1400052ab:	int3   
   1400052ac:	int3   
   1400052ad:	int3   
   1400052ae:	int3   
   1400052af:	int3   
   1400052b0:	rex push rbx
   1400052b2:	push   rbp
   1400052b3:	push   rdi
   1400052b4:	sub    rsp,0x50
   1400052b8:	mov    rax,QWORD PTR [rip+0x48d51]        # 0x14004e010
   1400052bf:	xor    rax,rsp
   1400052c2:	mov    QWORD PTR [rsp+0x40],rax
   1400052c7:	cmp    QWORD PTR [rcx+0x8],0x0
   1400052cc:	mov    rbx,rdx
   1400052cf:	mov    rdi,rcx
   1400052d2:	je     0x1400052d9
   1400052d4:	call   0x14000520c
   1400052d9:	mov    rcx,QWORD PTR [rdi+0x8]
   1400052dd:	xor    ebp,ebp
   1400052df:	mov    QWORD PTR [rsp+0x20],rbp
   1400052e4:	test   rcx,rcx
   1400052e7:	je     0x14001ee42
   1400052ed:	lea    r9,[rsp+0x2c]
   1400052f2:	lea    r8,[rsp+0x20]
   1400052f7:	lea    rdx,[rsp+0x28]
   1400052fc:	call   QWORD PTR [rip+0x3819e]        # 0x14003d4a0
   140005302:	test   eax,eax
   140005304:	je     0x140005414
   14000530a:	mov    QWORD PTR [rsp+0x80],rsi
   140005312:	mov    QWORD PTR [rsp+0x88],r14
   14000531a:	cmp    BYTE PTR [rbx+0x10],bpl
   14000531e:	jne    0x140005420
   140005324:	mov    rax,QWORD PTR [rbx]
   140005327:	mov    rsi,QWORD PTR [rax+0x8]
   14000532b:	lea    rax,[rip+0xc1e]        # 0x140005f50
   140005332:	cmp    rsi,rax
   140005335:	jne    0x14001ee50
   14000533b:	mov    rcx,rbx
   14000533e:	call   0x140005f50
   140005343:	test   eax,eax
   140005345:	je     0x140005420
   14000534b:	mov    rcx,rbx
   14000534e:	call   0x1400058b0
   140005353:	cmp    BYTE PTR [rbx+0x10],bpl
   140005357:	jne    0x14001ee64
   14000535d:	mov    r9d,0x2
   140005363:	lea    rdx,[rsp+0x30]
   140005368:	mov    rcx,rax
   14000536b:	lea    r8d,[r9+0xa]
   14000536f:	call   QWORD PTR [rip+0x380f3]        # 0x14003d468
   140005375:	test   eax,eax
   140005377:	je     0x14000541a
   14000537d:	mov    eax,DWORD PTR [rsp+0x34]
   140005381:	mov    ecx,eax
   140005383:	mov    r14d,eax
   140005386:	call   QWORD PTR [rip+0x382c4]        # 0x14003d650
   14000538c:	mov    rsi,rax
   14000538f:	test   rax,rax
   140005392:	je     0x14001ee6b
   140005398:	mov    rcx,rbx
   14000539b:	call   0x1400058b0
   1400053a0:	mov    r9d,r14d
   1400053a3:	mov    r8,rax
   1400053a6:	mov    edx,r14d
   1400053a9:	mov    rcx,rsi
   1400053ac:	call   QWORD PTR [rip+0x3828e]        # 0x14003d640
   1400053b2:	test   eax,eax
   1400053b4:	jne    0x14001ee76
   1400053ba:	cmp    BYTE PTR [rbx+0x10],bpl
   1400053be:	jne    0x1400053c5
   1400053c0:	test   rsi,rsi
   1400053c3:	je     0x1400053ca
   1400053c5:	mov    ebp,0x1
   1400053ca:	mov    rcx,QWORD PTR [rdi+0x8]
   1400053ce:	xor    r9d,r9d
   1400053d1:	mov    r8,rsi
   1400053d4:	mov    edx,ebp
   1400053d6:	call   QWORD PTR [rip+0x380cc]        # 0x14003d4a8
   1400053dc:	test   eax,eax
   1400053de:	je     0x14001eeaf
   1400053e4:	mov    rcx,QWORD PTR [rsp+0x20]
   1400053e9:	call   QWORD PTR [rip+0x38259]        # 0x14003d648
   1400053ef:	mov    rsi,QWORD PTR [rsp+0x80]
   1400053f7:	mov    r14,QWORD PTR [rsp+0x88]
   1400053ff:	mov    rcx,QWORD PTR [rsp+0x40]
   140005404:	xor    rcx,rsp
   140005407:	call   0x1400141d0
   14000540c:	add    rsp,0x50
   140005410:	pop    rdi
   140005411:	pop    rbp
   140005412:	pop    rbx
   140005413:	ret    
   140005414:	call   0x14002b0d4
   140005419:	int3   
   14000541a:	call   0x14002b0d4
   14000541f:	int3   
   140005420:	mov    rsi,rbp
   140005423:	jmp    0x1400053ba
   140005425:	int3   
   140005426:	int3   
   140005427:	int3   
   140005428:	int3   
   140005429:	int3   
   14000542a:	int3   
   14000542b:	int3   
   14000542c:	mov    QWORD PTR [rsp+0x10],rbx
   140005431:	mov    BYTE PTR [rsp+0x18],r8b
   140005436:	push   rbp
   140005437:	push   rsi
   140005438:	push   rdi
   140005439:	sub    rsp,0x20
   14000543d:	cmp    QWORD PTR [rcx+0x8],0x0
   140005442:	mov    rsi,rdx
   140005445:	mov    rbx,rcx
   140005448:	je     0x14000544f
   14000544a:	call   0x14000520c
   14000544f:	mov    rcx,QWORD PTR [rbx+0x8]
   140005453:	test   rcx,rcx
   140005456:	je     0x14001eec8
   14000545c:	lea    r8,[rsp+0x50]
   140005461:	lea    rdx,[rsp+0x40]
   140005466:	call   QWORD PTR [rip+0x3808c]        # 0x14003d4f8
   14000546c:	test   eax,eax
   14000546e:	je     0x1400054f8
   140005474:	cmp    BYTE PTR [rsi+0x4c],0x0
   140005478:	je     0x14001eefe
   14000547e:	add    rsi,0x8
   140005482:	mov    rcx,rsi
   140005485:	call   QWORD PTR [rip+0x37ff5]        # 0x14003d480
   14000548b:	test   eax,eax
   14000548d:	je     0x14001eefe
   140005493:	mov    rcx,rsi
   140005496:	call   QWORD PTR [rip+0x3806c]        # 0x14003d508
   14000549c:	mov    ecx,eax
   14000549e:	mov    ebp,eax
   1400054a0:	call   QWORD PTR [rip+0x381aa]        # 0x14003d650
   1400054a6:	mov    rdi,rax
   1400054a9:	test   rax,rax
   1400054ac:	je     0x14001eedb
   1400054b2:	mov    r8,rsi
   1400054b5:	mov    rdx,rax
   1400054b8:	mov    ecx,ebp
   1400054ba:	call   QWORD PTR [rip+0x38020]        # 0x14003d4e0
   1400054c0:	test   eax,eax
   1400054c2:	je     0x14001eee6
   1400054c8:	mov    rcx,QWORD PTR [rbx+0x8]
   1400054cc:	xor    r8d,r8d
   1400054cf:	mov    rdx,rdi
   1400054d2:	call   QWORD PTR [rip+0x37fc0]        # 0x14003d498
   1400054d8:	test   eax,eax
   1400054da:	je     0x14001eee6
   1400054e0:	mov    rcx,QWORD PTR [rsp+0x40]
   1400054e5:	call   QWORD PTR [rip+0x3815d]        # 0x14003d648
   1400054eb:	mov    rbx,QWORD PTR [rsp+0x48]
   1400054f0:	add    rsp,0x20
   1400054f4:	pop    rdi
   1400054f5:	pop    rsi
   1400054f6:	pop    rbp
   1400054f7:	ret    
   1400054f8:	call   0x14002b0d4
   1400054fd:	int3   
   1400054fe:	int3   
   1400054ff:	int3   
   140005500:	int3   
   140005501:	int3   
   140005502:	int3   
   140005503:	int3   
   140005504:	mov    QWORD PTR [rsp+0x10],rbx
   140005509:	mov    BYTE PTR [rsp+0x18],r8b
   14000550e:	push   rbp
   14000550f:	push   rsi
   140005510:	push   rdi
   140005511:	sub    rsp,0x20
   140005515:	cmp    QWORD PTR [rcx+0x8],0x0
   14000551a:	mov    rsi,rdx
   14000551d:	mov    rbx,rcx
   140005520:	jne    0x14001ef0a
   140005526:	mov    rcx,QWORD PTR [rbx+0x8]
   14000552a:	test   rcx,rcx
   14000552d:	jne    0x14001ef15
   140005533:	mov    rcx,rbx
   140005536:	call   0x1400051c0
   14000553b:	and    QWORD PTR [rsp+0x40],0x0
   140005541:	cmp    BYTE PTR [rsi+0x4c],0x0
   140005545:	je     0x14001ef56
   14000554b:	add    rsi,0x8
   14000554f:	mov    rcx,rsi
   140005552:	call   QWORD PTR [rip+0x37f28]        # 0x14003d480
   140005558:	test   eax,eax
   14000555a:	je     0x14001ef56
   140005560:	mov    rcx,rsi
   140005563:	call   QWORD PTR [rip+0x37f9f]        # 0x14003d508
   140005569:	mov    ecx,eax
   14000556b:	mov    ebp,eax
   14000556d:	call   QWORD PTR [rip+0x380dd]        # 0x14003d650
   140005573:	mov    rdi,rax
   140005576:	test   rax,rax
   140005579:	je     0x14001ef33
   14000557f:	mov    r8,rsi
   140005582:	mov    rdx,rax
   140005585:	mov    ecx,ebp
   140005587:	call   QWORD PTR [rip+0x37f53]        # 0x14003d4e0
   14000558d:	test   eax,eax
   14000558f:	je     0x14001ef3e
   140005595:	mov    rcx,QWORD PTR [rbx+0x8]
   140005599:	xor    r8d,r8d
   14000559c:	mov    rdx,rdi
   14000559f:	call   QWORD PTR [rip+0x37ee3]        # 0x14003d488
   1400055a5:	test   eax,eax
   1400055a7:	je     0x14001ef3e
   1400055ad:	mov    rcx,QWORD PTR [rsp+0x40]
   1400055b2:	call   QWORD PTR [rip+0x38090]        # 0x14003d648
   1400055b8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400055bd:	add    rsp,0x20
   1400055c1:	pop    rdi
   1400055c2:	pop    rsi
   1400055c3:	pop    rbp
   1400055c4:	ret    
   1400055c5:	int3   
   1400055c6:	int3   
   1400055c7:	int3   
   1400055c8:	int3   
   1400055c9:	int3   
   1400055ca:	int3   
   1400055cb:	int3   
   1400055cc:	mov    rax,rsp
   1400055cf:	push   rbp
   1400055d0:	lea    rbp,[rax-0x198]
   1400055d7:	sub    rsp,0x290
   1400055de:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   1400055e7:	mov    QWORD PTR [rax+0x10],rbx
   1400055eb:	mov    rax,QWORD PTR [rip+0x48a1e]        # 0x14004e010
   1400055f2:	xor    rax,rsp
   1400055f5:	mov    QWORD PTR [rbp+0x180],rax
   1400055fc:	mov    rbx,rcx
   1400055ff:	lea    rcx,[rbp-0x80]
   140005603:	call   0x140006bb0
   140005608:	nop
   140005609:	lea    rcx,[rbp+0x80]
   140005610:	call   0x140006bb0
   140005615:	nop
   140005616:	mov    DWORD PTR [rsp+0x70],0x0
   14000561e:	mov    WORD PTR [rsp+0x74],0xf00
   140005625:	mov    DWORD PTR [rsp+0x20],0x1
   14000562d:	mov    r9d,0x2
   140005633:	mov    r8d,r9d
   140005636:	lea    rdx,[rsp+0x70]
   14000563b:	lea    rcx,[rbp+0x100]
   140005642:	call   0x1400069c0
   140005647:	nop
   140005648:	lea    rdx,[rbp+0x80]
   14000564f:	lea    rcx,[rbp-0x80]
   140005653:	call   0x140005d50
   140005658:	lea    rdx,[rbp-0x80]
   14000565c:	mov    rcx,rbx
   14000565f:	call   0x140005504
   140005664:	lea    rdx,[rbp+0x80]
   14000566b:	mov    rcx,rbx
   14000566e:	call   0x14000542c
   140005673:	and    QWORD PTR [rsp+0x38],0x0
   140005679:	mov    BYTE PTR [rsp+0x40],0x0
   14000567e:	mov    DWORD PTR [rsp+0x44],0x2
   140005686:	lea    rax,[rip+0x38ceb]        # 0x14003e378
   14000568d:	mov    QWORD PTR [rsp+0x30],rax
   140005692:	and    QWORD PTR [rsp+0x48],0x0
   140005698:	and    QWORD PTR [rsp+0x50],0x0
   14000569e:	and    QWORD PTR [rsp+0x58],0x0
   1400056a4:	and    DWORD PTR [rsp+0x60],0x0
   1400056a9:	lea    rcx,[rbp+0x0]
   1400056ad:	call   0x140004ba4
   1400056b2:	nop
   1400056b3:	mov    r8d,0x10000000
   1400056b9:	mov    rdx,rax
   1400056bc:	lea    rcx,[rsp+0x30]
   1400056c1:	call   0x140006160
   1400056c6:	nop
   1400056c7:	lea    rcx,[rbp+0x0]
   1400056cb:	call   0x140006920
   1400056d0:	mov    r8d,0x10000000
   1400056d6:	lea    rdx,[rbp-0x80]
   1400056da:	lea    rcx,[rsp+0x30]
   1400056df:	call   0x140006290
   1400056e4:	lea    rcx,[rbp+0x0]
   1400056e8:	call   0x140004f20
   1400056ed:	nop
   1400056ee:	mov    r8d,0x10000000
   1400056f4:	mov    rdx,rax
   1400056f7:	lea    rcx,[rsp+0x30]
   1400056fc:	call   0x140006290
   140005701:	nop
   140005702:	lea    rcx,[rbp+0x0]
   140005706:	call   0x140006920
   14000570b:	mov    r8d,0x80000000
   140005711:	lea    rdx,[rbp+0x100]
   140005718:	lea    rcx,[rsp+0x30]
   14000571d:	call   0x140006290
   140005722:	lea    rdx,[rsp+0x30]
   140005727:	mov    rcx,rbx
   14000572a:	call   0x1400052b0
   14000572f:	nop
   140005730:	lea    rcx,[rsp+0x30]
   140005735:	call   0x14000667c
   14000573a:	nop
   14000573b:	lea    rcx,[rbp+0x100]
   140005742:	call   0x140006920
   140005747:	nop
   140005748:	lea    rcx,[rbp+0x80]
   14000574f:	call   0x140006920
   140005754:	nop
   140005755:	lea    rcx,[rbp-0x80]
   140005759:	call   0x140006920
   14000575e:	mov    rcx,QWORD PTR [rbp+0x180]
   140005765:	xor    rcx,rsp
   140005768:	call   0x1400141d0
   14000576d:	mov    rbx,QWORD PTR [rsp+0x2a8]
   140005775:	add    rsp,0x290
   14000577c:	pop    rbp
   14000577d:	ret    
   14000577e:	int3   
   14000577f:	int3   
   140005780:	int3   
   140005781:	int3   
   140005782:	int3   
   140005783:	int3   
   140005784:	mov    QWORD PTR [rsp+0x8],rbx
   140005789:	mov    QWORD PTR [rsp+0x10],rsi
   14000578e:	push   rdi
   14000578f:	sub    rsp,0x20
   140005793:	mov    rdi,rdx
   140005796:	mov    rbx,rcx
   140005799:	mov    rdx,QWORD PTR [rcx+0x10]
   14000579d:	cmp    rdi,rdx
   1400057a0:	jbe    0x1400057d1
   1400057a2:	cmp    QWORD PTR [rcx],0x0
   1400057a6:	jne    0x14001ef62
   1400057ac:	movsxd rax,DWORD PTR [rcx+0x18]
   1400057b0:	mov    edx,0x8
   1400057b5:	cmp    rax,rdi
   1400057b8:	cmova  rdi,rax
   1400057bc:	mov    rcx,rdi
   1400057bf:	call   QWORD PTR [rip+0x37e3b]        # 0x14003d600
   1400057c5:	mov    QWORD PTR [rbx],rax
   1400057c8:	test   rax,rax
   1400057cb:	je     0x1400057e3
   1400057cd:	mov    QWORD PTR [rbx+0x10],rdi
   1400057d1:	mov    al,0x1
   1400057d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057d8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400057dd:	add    rsp,0x20
   1400057e1:	pop    rdi
   1400057e2:	ret    
   1400057e3:	xor    al,al
   1400057e5:	jmp    0x1400057d3
   1400057e7:	int3   
   1400057e8:	int3   
   1400057e9:	int3   
   1400057ea:	int3   
   1400057eb:	int3   
   1400057ec:	int3   
   1400057ed:	int3   
   1400057ee:	int3   
   1400057ef:	int3   
   1400057f0:	rex push rsi
   1400057f2:	push   r12
   1400057f4:	push   r15
   1400057f6:	sub    rsp,0x30
   1400057fa:	mov    r15,QWORD PTR [rcx]
   1400057fd:	xor    r12d,r12d
   140005800:	mov    rsi,rcx
   140005803:	test   r15,r15
   140005806:	je     0x140005896
   14000580c:	mov    QWORD PTR [rsp+0x50],rbx
   140005811:	mov    ebx,r12d
   140005814:	mov    QWORD PTR [rsp+0x20],r14
   140005819:	mov    r14,QWORD PTR [rcx+0x8]
   14000581d:	test   r14,r14
   140005820:	je     0x140005880
   140005822:	mov    QWORD PTR [rsp+0x60],rdi
   140005827:	mov    QWORD PTR [rsp+0x28],r13
   14000582c:	lea    r13,[rip+0x25d]        # 0x140005a90
   140005833:	mov    QWORD PTR [rsp+0x58],rbp
   140005838:	nop    DWORD PTR [rax+rax*1+0x0]
   140005840:	mov    rdi,QWORD PTR [r15+rbx*8]
   140005844:	test   rdi,rdi
   140005847:	je     0x140005865
   140005849:	mov    rax,QWORD PTR [rdi]
   14000584c:	mov    rbp,QWORD PTR [rax]
   14000584f:	cmp    rbp,r13
   140005852:	jne    0x14001f004
   140005858:	mov    edx,0x1
   14000585d:	mov    rcx,rdi
   140005860:	call   0x140005a90
   140005865:	mov    QWORD PTR [r15+rbx*8],r12
   140005869:	inc    rbx
   14000586c:	cmp    rbx,r14
   14000586f:	jb     0x140005840
   140005871:	mov    r13,QWORD PTR [rsp+0x28]
   140005876:	mov    rdi,QWORD PTR [rsp+0x60]
   14000587b:	mov    rbp,QWORD PTR [rsp+0x58]
   140005880:	mov    rcx,QWORD PTR [rsi]
   140005883:	call   QWORD PTR [rip+0x37dbf]        # 0x14003d648
   140005889:	mov    r14,QWORD PTR [rsp+0x20]
   14000588e:	mov    rbx,QWORD PTR [rsp+0x50]
   140005893:	mov    QWORD PTR [rsi],r12
   140005896:	mov    QWORD PTR [rsi+0x8],r12
   14000589a:	mov    al,0x1
   14000589c:	mov    QWORD PTR [rsi+0x10],r12
   1400058a0:	add    rsp,0x30
   1400058a4:	pop    r15
   1400058a6:	pop    r12
   1400058a8:	pop    rsi
   1400058a9:	ret    
   1400058aa:	int3   
   1400058ab:	int3   
   1400058ac:	int3   
   1400058ad:	int3   
   1400058ae:	int3   
   1400058af:	int3   
   1400058b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400058b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400058ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400058bf:	push   rdi
   1400058c0:	push   r12
   1400058c2:	push   r13
   1400058c4:	push   r14
   1400058c6:	push   r15
   1400058c8:	sub    rsp,0x30
   1400058cc:	cmp    QWORD PTR [rcx+0x8],0x0
   1400058d1:	mov    rbx,rcx
   1400058d4:	jne    0x140005a64
   1400058da:	cmp    BYTE PTR [rcx+0x10],0x0
   1400058de:	jne    0x140005a64
   1400058e4:	mov    rax,QWORD PTR [rcx]
   1400058e7:	mov    ebp,0x8
   1400058ec:	mov    rdi,QWORD PTR [rax+0x8]
   1400058f0:	lea    rax,[rip+0x659]        # 0x140005f50
   1400058f7:	cmp    rdi,rax
   1400058fa:	jne    0x14001f01e
   140005900:	call   0x140005f50
   140005905:	xor    edi,edi
   140005907:	lea    r12,[rip+0x7f2]        # 0x140006100
   14000590e:	lea    r13,[rip+0x27b]        # 0x140005b90
   140005915:	mov    r15d,eax
   140005918:	test   eax,eax
   14000591a:	je     0x14000596f
   14000591c:	nop    DWORD PTR [rax+0x0]
   140005920:	mov    rax,QWORD PTR [rbx]
   140005923:	mov    rsi,QWORD PTR [rax+0x20]
   140005927:	cmp    rsi,r12
   14000592a:	jne    0x14001f032
   140005930:	mov    esi,edi
   140005932:	cmp    rsi,QWORD PTR [rbx+0x20]
   140005936:	jae    0x14001f05f
   14000593c:	mov    rax,QWORD PTR [rbx+0x18]
   140005940:	mov    rsi,QWORD PTR [rax+rdi*8]
   140005944:	test   rsi,rsi
   140005947:	je     0x140005968
   140005949:	mov    rcx,QWORD PTR [rsi]
   14000594c:	mov    r14,QWORD PTR [rcx+0x10]
   140005950:	cmp    r14,r13
   140005953:	jne    0x14001f04a
   140005959:	lea    rcx,[rsi+0x10]
   14000595d:	call   QWORD PTR [rip+0x37ba5]        # 0x14003d508
   140005963:	add    eax,0x8
   140005966:	add    ebp,eax
   140005968:	inc    edi
   14000596a:	cmp    edi,r15d
   14000596d:	jb     0x140005920
   14000596f:	mov    ecx,ebp
   140005971:	call   QWORD PTR [rip+0x37cd9]        # 0x14003d650
   140005977:	mov    QWORD PTR [rbx+0x8],rax
   14000597b:	test   rax,rax
   14000597e:	je     0x14001f06a
   140005984:	mov    r8d,DWORD PTR [rbx+0x14]
   140005988:	mov    edx,ebp
   14000598a:	mov    rcx,rax
   14000598d:	call   QWORD PTR [rip+0x37b25]        # 0x14003d4b8
   140005993:	test   eax,eax
   140005995:	je     0x14001f075
   14000599b:	mov    rax,QWORD PTR [rbx]
   14000599e:	mov    rdi,QWORD PTR [rax+0x28]
   1400059a2:	lea    rax,[rip+0x5b7]        # 0x140005f60
   1400059a9:	cmp    rdi,rax
   1400059ac:	jne    0x14001f096
   1400059b2:	mov    rcx,rbx
   1400059b5:	call   0x140005f60
   1400059ba:	xor    esi,esi
   1400059bc:	test   r15d,r15d
   1400059bf:	je     0x140005a64
   1400059c5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400059d0:	mov    rax,QWORD PTR [rbx]
   1400059d3:	mov    rdi,QWORD PTR [rax+0x20]
   1400059d7:	cmp    rdi,r12
   1400059da:	jne    0x14001f0aa
   1400059e0:	mov    edi,esi
   1400059e2:	cmp    rdi,QWORD PTR [rbx+0x20]
   1400059e6:	jae    0x14001f0ec
   1400059ec:	mov    rax,QWORD PTR [rbx+0x18]
   1400059f0:	mov    rdi,QWORD PTR [rax+rsi*8]
   1400059f4:	test   rdi,rdi
   1400059f7:	je     0x14001f0f7
   1400059fd:	mov    rcx,QWORD PTR [rdi]
   140005a00:	mov    rbp,QWORD PTR [rcx+0x10]
   140005a04:	cmp    rbp,r13
   140005a07:	jne    0x14001f0c2
   140005a0d:	lea    rcx,[rdi+0x10]
   140005a11:	call   QWORD PTR [rip+0x37af1]        # 0x14003d508
   140005a17:	lea    ebp,[rax+0x8]
   140005a1a:	mov    rcx,QWORD PTR [rdi]
   140005a1d:	lea    rax,[rip+0x18c]        # 0x140005bb0
   140005a24:	mov    r14,QWORD PTR [rcx+0x8]
   140005a28:	cmp    r14,rax
   140005a2b:	jne    0x14001f0d7
   140005a31:	mov    rcx,rdi
   140005a34:	call   0x140005bb0
   140005a39:	mov    edx,DWORD PTR [rbx+0x14]
   140005a3c:	mov    r9,rax
   140005a3f:	mov    rcx,QWORD PTR [rbx+0x8]
   140005a43:	or     r8d,0xffffffff
   140005a47:	mov    DWORD PTR [rsp+0x20],ebp
   140005a4b:	call   QWORD PTR [rip+0x37a3f]        # 0x14003d490
   140005a51:	test   eax,eax
   140005a53:	je     0x14001f0f7
   140005a59:	inc    esi
   140005a5b:	cmp    esi,r15d
   140005a5e:	jb     0x1400059d0
   140005a64:	mov    rax,QWORD PTR [rbx+0x8]
   140005a68:	mov    rbx,QWORD PTR [rsp+0x60]
   140005a6d:	mov    rbp,QWORD PTR [rsp+0x68]
   140005a72:	mov    rsi,QWORD PTR [rsp+0x70]
   140005a77:	add    rsp,0x30
   140005a7b:	pop    r15
   140005a7d:	pop    r14
   140005a7f:	pop    r13
   140005a81:	pop    r12
   140005a83:	pop    rdi
   140005a84:	ret    
   140005a85:	int3   
   140005a86:	int3   
   140005a87:	int3   
   140005a88:	int3   
   140005a89:	int3   
   140005a8a:	int3   
   140005a8b:	int3   
   140005a8c:	int3   
   140005a8d:	int3   
   140005a8e:	int3   
   140005a8f:	int3   
   140005a90:	rex push rbx
   140005a92:	sub    rsp,0x30
   140005a96:	mov    QWORD PTR [rsp+0x40],rbp
   140005a9b:	lea    rax,[rip+0x38fb6]        # 0x14003ea58
   140005aa2:	mov    QWORD PTR [rsp+0x48],rsi
   140005aa7:	mov    rbx,rcx
   140005aaa:	mov    QWORD PTR [rsp+0x50],rdi
   140005aaf:	mov    QWORD PTR [rcx],rax
   140005ab2:	mov    rcx,QWORD PTR [rcx+0x88]
   140005ab9:	mov    QWORD PTR [rsp+0x28],r14
   140005abe:	mov    QWORD PTR [rsp+0x20],r15
   140005ac3:	mov    r15d,edx
   140005ac6:	call   QWORD PTR [rip+0x37b7c]        # 0x14003d648
   140005acc:	mov    r14,QWORD PTR [rbx+0x78]
   140005ad0:	lea    rax,[rip+0x38f41]        # 0x14003ea18
   140005ad7:	or     ebp,0xffffffff
   140005ada:	mov    QWORD PTR [rbx+0x8],rax
   140005ade:	mov    eax,ebp
   140005ae0:	lock xadd DWORD PTR [r14-0x8],eax
   140005ae6:	sub    eax,0x1
   140005ae9:	jle    0x14001f118
   140005aef:	mov    r14,QWORD PTR [rbx+0x70]
   140005af3:	mov    eax,ebp
   140005af5:	lock xadd DWORD PTR [r14-0x8],eax
   140005afb:	sub    eax,0x1
   140005afe:	jle    0x14001f13b
   140005b04:	mov    r14,QWORD PTR [rbx+0x68]
   140005b08:	mov    eax,ebp
   140005b0a:	lock xadd DWORD PTR [r14-0x8],eax
   140005b10:	sub    eax,0x1
   140005b13:	jle    0x14001f15e
   140005b19:	mov    r14,QWORD PTR [rbx+0x60]
   140005b1d:	lock xadd DWORD PTR [r14-0x8],ebp
   140005b23:	sub    ebp,0x1
   140005b26:	mov    rbp,QWORD PTR [rsp+0x40]
   140005b2b:	jle    0x14001f181
   140005b31:	mov    r14,QWORD PTR [rsp+0x28]
   140005b36:	test   r15b,0x1
   140005b3a:	mov    r15,QWORD PTR [rsp+0x20]
   140005b3f:	mov    rdi,QWORD PTR [rsp+0x50]
   140005b44:	mov    rsi,QWORD PTR [rsp+0x48]
   140005b49:	je     0x140005b53
   140005b4b:	mov    rcx,rbx
   140005b4e:	call   0x140013de0
   140005b53:	mov    rax,rbx
   140005b56:	add    rsp,0x30
   140005b5a:	pop    rbx
   140005b5b:	ret    
   140005b5c:	int3   
   140005b5d:	int3   
   140005b5e:	int3   
   140005b5f:	int3   
   140005b60:	int3   
   140005b61:	int3   
   140005b62:	int3   
   140005b63:	int3   
   140005b64:	int3   
   140005b65:	int3   
   140005b66:	int3   
   140005b67:	int3   
   140005b68:	int3   
   140005b69:	int3   
   140005b6a:	int3   
   140005b6b:	int3   
   140005b6c:	int3   
   140005b6d:	int3   
   140005b6e:	int3   
   140005b6f:	int3   
   140005b70:	xor    eax,eax
   140005b72:	cmp    BYTE PTR [rcx+0x90],al
   140005b78:	sete   al
   140005b7b:	ret    
   140005b7c:	int3   
   140005b7d:	int3   
   140005b7e:	int3   
   140005b7f:	int3   
   140005b80:	int3   
   140005b81:	int3   
   140005b82:	int3   
   140005b83:	int3   
   140005b84:	int3   
   140005b85:	int3   
   140005b86:	int3   
   140005b87:	int3   
   140005b88:	int3   
   140005b89:	int3   
   140005b8a:	int3   
   140005b8b:	int3   
   140005b8c:	int3   
   140005b8d:	int3   
   140005b8e:	int3   
   140005b8f:	int3   
   140005b90:	sub    rsp,0x28
   140005b94:	add    rcx,0x10
   140005b98:	call   QWORD PTR [rip+0x3796a]        # 0x14003d508
   140005b9e:	add    rax,0x8
   140005ba2:	add    rsp,0x28
   140005ba6:	ret    
   140005ba7:	int3   
   140005ba8:	int3   
   140005ba9:	int3   
   140005baa:	int3   
   140005bab:	int3   
   140005bac:	int3   
   140005bad:	int3   
   140005bae:	int3   
   140005baf:	int3   
   140005bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140005bb5:	mov    QWORD PTR [rsp+0x10],rbp
   140005bba:	mov    QWORD PTR [rsp+0x18],rsi
   140005bbf:	push   rdi
   140005bc0:	sub    rsp,0x20
   140005bc4:	cmp    QWORD PTR [rcx+0x88],0x0
   140005bcc:	mov    rbx,rcx
   140005bcf:	jne    0x140005c84
   140005bd5:	mov    rax,QWORD PTR [rcx]
   140005bd8:	mov    rdi,QWORD PTR [rax+0x10]
   140005bdc:	lea    rax,[rip+0xffffffffffffffad]        # 0x140005b90
   140005be3:	cmp    rdi,rax
   140005be6:	jne    0x14001f1a4
   140005bec:	add    rcx,0x10
   140005bf0:	call   QWORD PTR [rip+0x37912]        # 0x14003d508
   140005bf6:	lea    edi,[rax+0x8]
   140005bf9:	mov    ecx,edi
   140005bfb:	mov    ebp,edi
   140005bfd:	call   QWORD PTR [rip+0x37a4d]        # 0x14003d650
   140005c03:	mov    rsi,rax
   140005c06:	test   rax,rax
   140005c09:	je     0x14001f1b9
   140005c0f:	mov    r8d,ebp
   140005c12:	xor    edx,edx
   140005c14:	mov    rcx,rax
   140005c17:	call   0x140014694
   140005c1c:	mov    WORD PTR [rsi+0x2],di
   140005c20:	movzx  eax,BYTE PTR [rbx+0x84]
   140005c27:	mov    BYTE PTR [rsi+0x1],al
   140005c2a:	mov    rax,QWORD PTR [rbx]
   140005c2d:	mov    rdi,QWORD PTR [rax+0x18]
   140005c31:	lea    rax,[rip+0xffffffffffffff38]        # 0x140005b70
   140005c38:	cmp    rdi,rax
   140005c3b:	jne    0x14001f1c4
   140005c41:	cmp    BYTE PTR [rbx+0x90],0x0
   140005c48:	sete   al
   140005c4b:	mov    BYTE PTR [rsi],al
   140005c4d:	lea    rcx,[rbx+0x10]
   140005c51:	mov    eax,DWORD PTR [rbx+0x80]
   140005c57:	mov    DWORD PTR [rsi+0x4],eax
   140005c5a:	call   QWORD PTR [rip+0x378a8]        # 0x14003d508
   140005c60:	mov    r9d,eax
   140005c63:	lea    rdx,[rbp-0x8]
   140005c67:	lea    rcx,[rsi+0x8]
   140005c6b:	lea    r8,[rbx+0x10]
   140005c6f:	call   QWORD PTR [rip+0x379cb]        # 0x14003d640
   140005c75:	test   eax,eax
   140005c77:	jne    0x14001f1d8
   140005c7d:	mov    QWORD PTR [rbx+0x88],rsi
   140005c84:	mov    rax,QWORD PTR [rbx+0x88]
   140005c8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c90:	mov    rbp,QWORD PTR [rsp+0x38]
   140005c95:	mov    rsi,QWORD PTR [rsp+0x40]
   140005c9a:	add    rsp,0x20
   140005c9e:	pop    rdi
   140005c9f:	ret    
   140005ca0:	int3   
   140005ca1:	int3   
   140005ca2:	int3   
   140005ca3:	int3   
   140005ca4:	int3   
   140005ca5:	int3   
   140005ca6:	int3   
   140005ca7:	int3   
   140005ca8:	mov    eax,DWORD PTR [rcx+0x10]
   140005cab:	xorps  xmm0,xmm0
   140005cae:	movss  xmm2,DWORD PTR [rip+0x3bd3a]        # 0x1400419f0
   140005cb6:	xor    edx,edx
   140005cb8:	movabs r8,0x8000000000000000
   140005cc2:	cvtsi2ss xmm0,rax
   140005cc7:	movaps xmm1,xmm0
   140005cca:	mulss  xmm1,DWORD PTR [rcx+0x1c]
   140005ccf:	comiss xmm1,xmm2
   140005cd2:	jb     0x140005ce0
   140005cd4:	subss  xmm1,xmm2
   140005cd8:	comiss xmm1,xmm2
   140005cdb:	jae    0x140005ce0
   140005cdd:	mov    rdx,r8
   140005ce0:	mulss  xmm0,DWORD PTR [rcx+0x18]
   140005ce5:	cvttss2si rax,xmm1
   140005cea:	add    rax,rdx
   140005ced:	xor    edx,edx
   140005cef:	comiss xmm0,xmm2
   140005cf2:	mov    QWORD PTR [rcx+0x20],rax
   140005cf6:	jb     0x140005d04
   140005cf8:	subss  xmm0,xmm2
   140005cfc:	comiss xmm0,xmm2
   140005cff:	jae    0x140005d04
   140005d01:	mov    rdx,r8
   140005d04:	cvttss2si rax,xmm0
   140005d09:	add    rax,rdx
   140005d0c:	xor    edx,edx
   140005d0e:	cmp    rax,0x11
   140005d12:	cmovb  rax,rdx
   140005d16:	mov    QWORD PTR [rcx+0x28],rax
   140005d1a:	ret    
   140005d1b:	int3   
   140005d1c:	int3   
   140005d1d:	int3   
   140005d1e:	int3   
   140005d1f:	int3   
   140005d20:	int3   
   140005d21:	int3   
   140005d22:	int3   
   140005d23:	int3   
   140005d24:	rex push rbx
   140005d26:	sub    rsp,0x20
   140005d2a:	and    QWORD PTR [rcx+0x40],0x0
   140005d2f:	mov    rbx,rcx
   140005d32:	mov    rcx,QWORD PTR [rcx+0x38]
   140005d36:	test   rcx,rcx
   140005d39:	jne    0x14001f212
   140005d3f:	add    rsp,0x20
   140005d43:	pop    rbx
   140005d44:	ret    
   140005d45:	int3   
   140005d46:	int3   
   140005d47:	int3   
   140005d48:	int3   
   140005d49:	int3   
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	int3   
   140005d4d:	int3   
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	rex push rbx
   140005d52:	push   rsi
   140005d53:	push   rdi
   140005d54:	sub    rsp,0x40
   140005d58:	mov    rdi,rdx
   140005d5b:	mov    rsi,rcx
   140005d5e:	call   0x140004f5c
   140005d63:	mov    rbx,rax
   140005d66:	test   rax,rax
   140005d69:	je     0x140005f35
   140005d6f:	mov    QWORD PTR [rsp+0x60],rbp
   140005d74:	lea    rax,[rsp+0x70]
   140005d79:	mov    QWORD PTR [rsp+0x68],r12
   140005d7e:	xor    r9d,r9d
   140005d81:	xor    r12d,r12d
   140005d84:	mov    QWORD PTR [rsp+0x38],r14
   140005d89:	xor    r8d,r8d
   140005d8c:	mov    QWORD PTR [rsp+0x30],r15
   140005d91:	mov    rcx,rbx
   140005d94:	mov    DWORD PTR [rsp+0x70],r12d
   140005d99:	xor    bpl,bpl
   140005d9c:	mov    QWORD PTR [rsp+0x20],rax
   140005da1:	lea    edx,[r12+0x4]
   140005da6:	call   QWORD PTR [rip+0x37764]        # 0x14003d510
   140005dac:	mov    r15d,DWORD PTR [rsp+0x70]
   140005db1:	test   r15d,r15d
   140005db4:	je     0x140005e4f
   140005dba:	mov    ecx,r15d
   140005dbd:	call   QWORD PTR [rip+0x3788d]        # 0x14003d650
   140005dc3:	mov    r14,rax
   140005dc6:	test   rax,rax
   140005dc9:	je     0x140005e4f
   140005dcf:	lea    rax,[rsp+0x70]
   140005dd4:	mov    r9d,r15d
   140005dd7:	mov    r8,r14
   140005dda:	mov    QWORD PTR [rsp+0x20],rax
   140005ddf:	lea    edx,[r12+0x4]
   140005de4:	mov    rcx,rbx
   140005de7:	call   QWORD PTR [rip+0x37723]        # 0x14003d510
   140005ded:	test   eax,eax
   140005def:	je     0x14001f234
   140005df5:	mov    bpl,0x1
   140005df8:	mov    r15,QWORD PTR [r14]
   140005dfb:	cmp    BYTE PTR [rsi+0x4c],r12b
   140005dff:	jne    0x14001f222
   140005e05:	lea    rcx,[rsi+0x58]
   140005e09:	mov    DWORD PTR [rsi+0x50],0x7
   140005e10:	call   0x14000746c
   140005e15:	lea    rcx,[rsi+0x60]
   140005e19:	call   0x14000746c
   140005e1e:	lea    rcx,[rsi+0x68]
   140005e22:	call   0x14000746c
   140005e27:	lea    rcx,[rsi+0x70]
   140005e2b:	call   0x14000746c
   140005e30:	mov    rdx,r15
   140005e33:	mov    BYTE PTR [rsi+0x4c],r12b
   140005e37:	mov    rcx,rsi
   140005e3a:	call   0x1400066f8
   140005e3f:	mov    DWORD PTR [rsi+0x50],0x8
   140005e46:	mov    rcx,r14
   140005e49:	call   QWORD PTR [rip+0x377f9]        # 0x14003d648
   140005e4f:	xor    r9d,r9d
   140005e52:	mov    DWORD PTR [rsp+0x70],r12d
   140005e57:	lea    rax,[rsp+0x70]
   140005e5c:	xor    r8d,r8d
   140005e5f:	mov    rcx,rbx
   140005e62:	mov    QWORD PTR [rsp+0x20],rax
   140005e67:	lea    edx,[r9+0x5]
   140005e6b:	call   QWORD PTR [rip+0x3769f]        # 0x14003d510
   140005e71:	mov    r14d,DWORD PTR [rsp+0x70]
   140005e76:	mov    r15,QWORD PTR [rsp+0x30]
   140005e7b:	mov    r12,QWORD PTR [rsp+0x68]
   140005e80:	test   r14d,r14d
   140005e83:	je     0x140005f16
   140005e89:	mov    ecx,r14d
   140005e8c:	call   QWORD PTR [rip+0x377be]        # 0x14003d650
   140005e92:	mov    rsi,rax
   140005e95:	test   rax,rax
   140005e98:	je     0x140005f16
   140005e9a:	lea    rax,[rsp+0x70]
   140005e9f:	mov    r9d,r14d
   140005ea2:	mov    r8,rsi
   140005ea5:	mov    QWORD PTR [rsp+0x20],rax
   140005eaa:	mov    edx,0x5
   140005eaf:	mov    rcx,rbx
   140005eb2:	call   QWORD PTR [rip+0x37658]        # 0x14003d510
   140005eb8:	test   eax,eax
   140005eba:	je     0x140005f37
   140005ebc:	cmp    BYTE PTR [rdi+0x4c],0x0
   140005ec0:	mov    bpl,0x1
   140005ec3:	mov    r14,QWORD PTR [rsi]
   140005ec6:	jne    0x14001f23c
   140005ecc:	lea    rcx,[rdi+0x58]
   140005ed0:	mov    DWORD PTR [rdi+0x50],0x7
   140005ed7:	call   0x14000746c
   140005edc:	lea    rcx,[rdi+0x60]
   140005ee0:	call   0x14000746c
   140005ee5:	lea    rcx,[rdi+0x68]
   140005ee9:	call   0x14000746c
   140005eee:	lea    rcx,[rdi+0x70]
   140005ef2:	call   0x14000746c
   140005ef7:	mov    rdx,r14
   140005efa:	mov    BYTE PTR [rdi+0x4c],0x0
   140005efe:	mov    rcx,rdi
   140005f01:	call   0x1400066f8
   140005f06:	mov    DWORD PTR [rdi+0x50],0x8
   140005f0d:	mov    rcx,rsi
   140005f10:	call   QWORD PTR [rip+0x37732]        # 0x14003d648
   140005f16:	mov    rcx,rbx
   140005f19:	call   QWORD PTR [rip+0x37289]        # 0x14003d1a8
   140005f1f:	mov    r14,QWORD PTR [rsp+0x38]
   140005f24:	movzx  eax,bpl
   140005f28:	mov    rbp,QWORD PTR [rsp+0x60]
   140005f2d:	add    rsp,0x40
   140005f31:	pop    rdi
   140005f32:	pop    rsi
   140005f33:	pop    rbx
   140005f34:	ret    
   140005f35:	jmp    0x140005f2d
   140005f37:	xor    bpl,bpl
   140005f3a:	jmp    0x140005f0d
   140005f3c:	int3   
   140005f3d:	int3   
   140005f3e:	int3   
   140005f3f:	int3   
   140005f40:	int3   
   140005f41:	int3   
   140005f42:	int3   
   140005f43:	int3   
   140005f44:	int3   
   140005f45:	int3   
   140005f46:	int3   
   140005f47:	int3   
   140005f48:	int3   
   140005f49:	int3   
   140005f4a:	int3   
   140005f4b:	int3   
   140005f4c:	int3   
   140005f4d:	int3   
   140005f4e:	int3   
   140005f4f:	int3   
   140005f50:	mov    eax,DWORD PTR [rcx+0x20]
   140005f53:	ret    
   140005f54:	int3   
   140005f55:	int3   
   140005f56:	int3   
   140005f57:	int3   
   140005f58:	int3   
   140005f59:	int3   
   140005f5a:	int3   
   140005f5b:	int3   
   140005f5c:	int3   
   140005f5d:	int3   
   140005f5e:	int3   
   140005f5f:	int3   
   140005f60:	mov    QWORD PTR [rsp+0x8],rcx
   140005f65:	push   rbx
   140005f66:	push   r12
   140005f68:	push   r13
   140005f6a:	sub    rsp,0x40
   140005f6e:	mov    r12,QWORD PTR [rcx+0x20]
   140005f72:	xor    ebx,ebx
   140005f74:	mov    rax,rcx
   140005f77:	mov    r13d,0x1
   140005f7d:	cmp    r12,0x4
   140005f81:	ja     0x1400060be
   140005f87:	mov    QWORD PTR [rsp+0x78],rbp
   140005f8c:	mov    QWORD PTR [rsp+0x38],rsi
   140005f91:	mov    QWORD PTR [rsp+0x30],rdi
   140005f96:	mov    QWORD PTR [rsp+0x28],r14
   140005f9b:	mov    QWORD PTR [rsp+0x20],r15
   140005fa0:	lea    rdi,[r13-0x1]
   140005fa4:	movabs rdx,0xaaaaaaaaaaaaaaab
   140005fae:	cmp    rdi,r12
   140005fb1:	jae    0x140006084
   140005fb7:	lea    r14,[rax+0x18]
   140005fbb:	mov    rax,r13
   140005fbe:	neg    rax
   140005fc1:	lea    rcx,[rax*8+0x0]
   140005fc9:	mov    QWORD PTR [rsp+0x68],rcx
   140005fce:	cmp    rdi,QWORD PTR [r14+0x8]
   140005fd2:	jae    0x14001f31a
   140005fd8:	mov    rax,QWORD PTR [r14]
   140005fdb:	cmp    rbx,QWORD PTR [rax+rdi*8]
   140005fdf:	lea    r15,[rax+rdi*8]
   140005fe3:	je     0x14001f24e
   140005fe9:	test   rbx,rbx
   140005fec:	jne    0x14001f261
   140005ff2:	mov    rbx,QWORD PTR [r15]
   140005ff5:	mov    QWORD PTR [r15],0x0
   140005ffc:	mov    rbp,rdi
   140005fff:	cmp    rdi,r13
   140006002:	jb     0x14000603e
   140006004:	lea    rcx,[rcx+rdi*8]
   140006008:	mov    r15,r13
   14000600b:	mov    QWORD PTR [rsp+0x70],rcx
   140006010:	neg    r15
   140006013:	lea    rsi,[r15+rbp*1]
   140006017:	cmp    rsi,QWORD PTR [r14+0x8]
   14000601b:	jae    0x14001f304
   140006021:	mov    rax,QWORD PTR [r14]
   140006024:	mov    rdx,rbx
   140006027:	mov    rcx,QWORD PTR [rcx+rax*1]
   14000602b:	call   0x140007f40
   140006030:	cmp    eax,0xffffffff
   140006033:	je     0x14001f284
   140006039:	mov    rcx,QWORD PTR [rsp+0x68]
   14000603e:	cmp    rbp,QWORD PTR [r14+0x8]
   140006042:	jae    0x14001f30f
   140006048:	mov    rax,QWORD PTR [r14]
   14000604b:	mov    r15,QWORD PTR [rax+rbp*8]
   14000604f:	lea    rbp,[rax+rbp*8]
   140006053:	cmp    r15,rbx
   140006056:	je     0x14001f2ce
   14000605c:	test   r15,r15
   14000605f:	jne    0x14001f2e1
   140006065:	mov    rax,rbx
   140006068:	mov    QWORD PTR [rbp+0x0],rbx
   14000606c:	xor    ebx,ebx
   14000606e:	inc    rdi
   140006071:	cmp    rdi,r12
   140006074:	jb     0x140005fce
   14000607a:	movabs rdx,0xaaaaaaaaaaaaaaab
   140006084:	mov    rax,rdx
   140006087:	mul    r13
   14000608a:	mov    r13,rdx
   14000608d:	shr    r13,1
   140006090:	jne    0x1400060e5
   140006092:	test   rbx,rbx
   140006095:	jne    0x14001f325
   14000609b:	mov    r14,QWORD PTR [rsp+0x28]
   1400060a0:	mov    rdi,QWORD PTR [rsp+0x30]
   1400060a5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400060aa:	mov    rbp,QWORD PTR [rsp+0x78]
   1400060af:	mov    r15,QWORD PTR [rsp+0x20]
   1400060b4:	add    rsp,0x40
   1400060b8:	pop    r13
   1400060ba:	pop    r12
   1400060bc:	pop    rbx
   1400060bd:	ret    
   1400060be:	mov    eax,0x4
   1400060c3:	mov    r13,rax
   1400060c6:	lea    rax,[rax*2+0x1]
   1400060ce:	add    rax,r13
   1400060d1:	cmp    rax,r12
   1400060d4:	jb     0x1400060c3
   1400060d6:	test   r13,r13
   1400060d9:	je     0x1400060b4
   1400060db:	mov    rax,QWORD PTR [rsp+0x60]
   1400060e0:	jmp    0x140005f87
   1400060e5:	mov    rax,QWORD PTR [rsp+0x60]
   1400060ea:	jmp    0x140005fa0
   1400060ef:	int3   
   1400060f0:	int3   
   1400060f1:	int3   
   1400060f2:	int3   
   1400060f3:	int3   
   1400060f4:	int3   
   1400060f5:	int3   
   1400060f6:	int3   
   1400060f7:	int3   
   1400060f8:	int3   
   1400060f9:	int3   
   1400060fa:	int3   
   1400060fb:	int3   
   1400060fc:	int3   
   1400060fd:	int3   
   1400060fe:	int3   
   1400060ff:	int3   
   140006100:	sub    rsp,0x28
   140006104:	mov    eax,edx
   140006106:	cmp    rax,QWORD PTR [rcx+0x20]
   14000610a:	jae    0x14001f344
   140006110:	mov    rcx,QWORD PTR [rcx+0x18]
   140006114:	mov    rax,QWORD PTR [rcx+rax*8]
   140006118:	add    rsp,0x28
   14000611c:	ret    
   14000611d:	int3   
   14000611e:	int3   
   14000611f:	int3   
   140006120:	int3   
   140006121:	int3   
   140006122:	int3   
   140006123:	int3   
   140006124:	int3   
   140006125:	int3   
   140006126:	int3   
   140006127:	int3   
   140006128:	int3   
   140006129:	int3   
   14000612a:	int3   
   14000612b:	int3   
   14000612c:	int3   
   14000612d:	int3   
   14000612e:	int3   
   14000612f:	int3   
   140006130:	rex push rbx
   140006132:	sub    rsp,0x20
   140006136:	mov    rbx,rcx
   140006139:	add    rcx,0x18
   14000613d:	call   0x1400057f0
   140006142:	mov    rcx,QWORD PTR [rbx+0x8]
   140006146:	call   QWORD PTR [rip+0x374fc]        # 0x14003d648
   14000614c:	and    QWORD PTR [rbx+0x8],0x0
   140006151:	add    rsp,0x20
   140006155:	pop    rbx
   140006156:	ret    
   140006157:	int3   
   140006158:	int3   
   140006159:	int3   
   14000615a:	int3   
   14000615b:	int3   
   14000615c:	int3   
   14000615d:	int3   
   14000615e:	int3   
   14000615f:	int3   
   140006160:	mov    QWORD PTR [rsp+0x8],rcx
   140006165:	push   rdi
   140006166:	push   r14
   140006168:	push   r15
   14000616a:	sub    rsp,0x30
   14000616e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006177:	mov    QWORD PTR [rsp+0x60],rbx
   14000617c:	mov    QWORD PTR [rsp+0x68],rsi
   140006181:	mov    r15d,r8d
   140006184:	mov    rdi,rdx
   140006187:	mov    rsi,rcx
   14000618a:	cmp    BYTE PTR [rdx+0x4c],0x0
   14000618e:	je     0x140006283
   140006194:	lea    rcx,[rdx+0x8]
   140006198:	call   QWORD PTR [rip+0x372e2]        # 0x14003d480
   14000619e:	test   eax,eax
   1400061a0:	je     0x140006283
   1400061a6:	cmp    BYTE PTR [rsi+0x10],0x0
   1400061aa:	jne    0x14001f350
   1400061b0:	xor    r14d,r14d
   1400061b3:	mov    QWORD PTR [rsp+0x58],r14
   1400061b8:	mov    ecx,0x98
   1400061bd:	call   0x140013d94
   1400061c2:	mov    rbx,rax
   1400061c5:	mov    QWORD PTR [rsp+0x28],rax
   1400061ca:	test   rax,rax
   1400061cd:	je     0x14001f36e
   1400061d3:	lea    rax,[rip+0x3887e]        # 0x14003ea58
   1400061da:	mov    QWORD PTR [rbx],rax
   1400061dd:	lea    rcx,[rbx+0x8]
   1400061e1:	mov    rdx,rdi
   1400061e4:	call   0x140006760
   1400061e9:	mov    DWORD PTR [rbx+0x80],r15d
   1400061f0:	mov    BYTE PTR [rbx+0x84],r14b
   1400061f7:	mov    QWORD PTR [rbx+0x88],r14
   1400061fe:	lea    rax,[rip+0x3881b]        # 0x14003ea20
   140006205:	mov    QWORD PTR [rbx],rax
   140006208:	mov    BYTE PTR [rbx+0x90],r14b
   14000620f:	mov    QWORD PTR [rsp+0x58],rbx
   140006214:	test   rbx,rbx
   140006217:	je     0x14001f388
   14000621d:	mov    r15,QWORD PTR [rsi+0x20]
   140006221:	cmp    r15,QWORD PTR [rsi+0x28]
   140006225:	jb     0x14000623c
   140006227:	lea    rdx,[r15+0x1]
   14000622b:	lea    rcx,[rsi+0x18]
   14000622f:	call   0x140005784
   140006234:	test   al,al
   140006236:	je     0x14001f393
   14000623c:	mov    rax,QWORD PTR [rsi+0x18]
   140006240:	lea    rcx,[rax+r15*8]
   140006244:	test   rcx,rcx
   140006247:	je     0x140006252
   140006249:	mov    rax,rbx
   14000624c:	mov    rbx,r14
   14000624f:	mov    QWORD PTR [rcx],rax
   140006252:	inc    QWORD PTR [rsi+0x20]
   140006256:	mov    rcx,QWORD PTR [rsi+0x8]
   14000625a:	call   QWORD PTR [rip+0x373e8]        # 0x14003d648
   140006260:	mov    QWORD PTR [rsi+0x8],r14
   140006264:	test   rbx,rbx
   140006267:	jne    0x14001f39e
   14000626d:	mov    al,0x1
   14000626f:	mov    rbx,QWORD PTR [rsp+0x60]
   140006274:	mov    rsi,QWORD PTR [rsp+0x68]
   140006279:	add    rsp,0x30
   14000627d:	pop    r15
   14000627f:	pop    r14
   140006281:	pop    rdi
   140006282:	ret    
   140006283:	xor    al,al
   140006285:	jmp    0x14000626f
   140006287:	int3   
   140006288:	int3   
   140006289:	int3   
   14000628a:	int3   
   14000628b:	int3   
   14000628c:	int3   
   14000628d:	int3   
   14000628e:	int3   
   14000628f:	int3   
   140006290:	mov    DWORD PTR [rsp+0x18],r8d
   140006295:	mov    QWORD PTR [rsp+0x8],rcx
   14000629a:	push   rbx
   14000629b:	push   rsi
   14000629c:	push   rdi
   14000629d:	push   r12
   14000629f:	push   r13
   1400062a1:	push   r14
   1400062a3:	push   r15
   1400062a5:	sub    rsp,0xe0
   1400062ac:	mov    QWORD PTR [rsp+0xa8],0xfffffffffffffffe
   1400062b8:	mov    r13,rdx
   1400062bb:	mov    rdi,rcx
   1400062be:	cmp    BYTE PTR [rdx+0x4c],0x0
   1400062c2:	je     0x140006671
   1400062c8:	lea    rcx,[rdx+0x8]
   1400062cc:	call   QWORD PTR [rip+0x371ae]        # 0x14003d480
   1400062d2:	test   eax,eax
   1400062d4:	je     0x140006671
   1400062da:	cmp    BYTE PTR [rdi+0x10],0x0
   1400062de:	jne    0x14001f3be
   1400062e4:	xor    r12d,r12d
   1400062e7:	mov    QWORD PTR [rsp+0x38],r12
   1400062ec:	mov    ecx,0x98
   1400062f1:	call   0x140013d94
   1400062f6:	mov    rbx,rax
   1400062f9:	mov    QWORD PTR [rsp+0x128],rax
   140006301:	test   rax,rax
   140006304:	je     0x14001f5ac
   14000630a:	lea    rax,[rip+0x38747]        # 0x14003ea58
   140006311:	mov    QWORD PTR [rbx],rax
   140006314:	lea    r15,[rbx+0x8]
   140006318:	mov    QWORD PTR [rsp+0x40],r15
   14000631d:	lea    rax,[rip+0x386f4]        # 0x14003ea18
   140006324:	mov    QWORD PTR [r15],rax
   140006327:	movzx  eax,BYTE PTR [r13+0x4c]
   14000632c:	mov    BYTE PTR [r15+0x4c],al
   140006330:	mov    eax,DWORD PTR [r13+0x50]
   140006334:	mov    DWORD PTR [r15+0x50],eax
   140006338:	lea    rax,[r15+0x58]
   14000633c:	mov    QWORD PTR [rsp+0x50],rax
   140006341:	mov    r14,QWORD PTR [r13+0x58]
   140006345:	sub    r14,0x18
   140006349:	mov    QWORD PTR [rsp+0x70],r14
   14000634e:	mov    rsi,QWORD PTR [r14]
   140006351:	mov    QWORD PTR [rsp+0x30],rsi
   140006356:	mov    QWORD PTR [rsp+0x88],rsi
   14000635e:	mov    rax,QWORD PTR [rsi]
   140006361:	mov    rax,QWORD PTR [rax+0x20]
   140006365:	mov    QWORD PTR [rsp+0x20],rax
   14000636a:	lea    rdx,[rip+0x1abf]        # 0x140007e30
   140006371:	cmp    rax,rdx
   140006374:	jne    0x14001f3dc
   14000637a:	mov    QWORD PTR [rsp+0xc8],rsi
   140006382:	cmp    DWORD PTR [r14+0x10],0x0
   140006387:	jl     0x14001f400
   14000638d:	cmp    rsi,QWORD PTR [r14]
   140006390:	jne    0x14001f400
   140006396:	mov    QWORD PTR [rsp+0x30],r14
   14000639b:	lock inc DWORD PTR [r14+0x10]
   1400063a0:	mov    rbx,QWORD PTR [rsp+0x128]
   1400063a8:	mov    r15,QWORD PTR [rsp+0x40]
   1400063ad:	mov    rsi,QWORD PTR [rsp+0x30]
   1400063b2:	lea    rax,[rsi+0x18]
   1400063b6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400063bb:	mov    QWORD PTR [rcx],rax
   1400063be:	lea    rax,[r15+0x60]
   1400063c2:	mov    QWORD PTR [rsp+0x60],rax
   1400063c7:	mov    r14,QWORD PTR [r13+0x60]
   1400063cb:	sub    r14,0x18
   1400063cf:	mov    QWORD PTR [rsp+0xb8],r14
   1400063d7:	mov    rsi,QWORD PTR [r14]
   1400063da:	mov    QWORD PTR [rsp+0x28],rsi
   1400063df:	mov    QWORD PTR [rsp+0x78],rsi
   1400063e4:	mov    rax,QWORD PTR [rsi]
   1400063e7:	mov    rax,QWORD PTR [rax+0x20]
   1400063eb:	mov    QWORD PTR [rsp+0x48],rax
   1400063f0:	cmp    rax,rdx
   1400063f3:	jne    0x14001f46b
   1400063f9:	mov    QWORD PTR [rsp+0x80],rsi
   140006401:	cmp    DWORD PTR [r14+0x10],0x0
   140006406:	jl     0x14001f48f
   14000640c:	cmp    rsi,QWORD PTR [r14]
   14000640f:	jne    0x14001f48f
   140006415:	mov    QWORD PTR [rsp+0x28],r14
   14000641a:	lock inc DWORD PTR [r14+0x10]
   14000641f:	mov    rbx,QWORD PTR [rsp+0x128]
   140006427:	mov    r15,QWORD PTR [rsp+0x40]
   14000642c:	mov    rsi,QWORD PTR [rsp+0x28]
   140006431:	lea    rax,[rsi+0x18]
   140006435:	mov    rcx,QWORD PTR [rsp+0x60]
   14000643a:	mov    QWORD PTR [rcx],rax
   14000643d:	lea    rax,[r15+0x68]
   140006441:	mov    QWORD PTR [rsp+0x58],rax
   140006446:	mov    r14,QWORD PTR [r13+0x68]
   14000644a:	sub    r14,0x18
   14000644e:	mov    QWORD PTR [rsp+0xa0],r14
   140006456:	mov    rsi,QWORD PTR [r14]
   140006459:	mov    QWORD PTR [rsp+0x20],rsi
   14000645e:	mov    QWORD PTR [rsp+0xb0],rsi
   140006466:	mov    rax,QWORD PTR [rsi]
   140006469:	mov    rax,QWORD PTR [rax+0x20]
   14000646d:	mov    QWORD PTR [rsp+0x48],rax
   140006472:	cmp    rax,rdx
   140006475:	jne    0x14001f4fa
   14000647b:	mov    QWORD PTR [rsp+0xc0],rsi
   140006483:	cmp    DWORD PTR [r14+0x10],0x0
   140006488:	jl     0x14001f517
   14000648e:	cmp    rsi,QWORD PTR [r14]
   140006491:	jne    0x14001f517
   140006497:	mov    QWORD PTR [rsp+0x20],r14
   14000649c:	lock inc DWORD PTR [r14+0x10]
   1400064a1:	mov    rbx,QWORD PTR [rsp+0x128]
   1400064a9:	mov    r15,QWORD PTR [rsp+0x40]
   1400064ae:	mov    rsi,QWORD PTR [rsp+0x20]
   1400064b3:	lea    rax,[rsi+0x18]
   1400064b7:	mov    rcx,QWORD PTR [rsp+0x58]
   1400064bc:	mov    QWORD PTR [rcx],rax
   1400064bf:	lea    rsi,[r15+0x70]
   1400064c3:	mov    QWORD PTR [rsp+0x68],rsi
   1400064c8:	mov    rax,QWORD PTR [rip+0x48939]        # 0x14004ee08
   1400064cf:	mov    r14,QWORD PTR [rax+0x18]
   1400064d3:	lea    rax,[rip+0x1966]        # 0x140007e40
   1400064da:	cmp    r14,rax
   1400064dd:	jne    0x14001f57c
   1400064e3:	lock inc DWORD PTR [rip+0x4893e]        # 0x14004ee28
   1400064ea:	lea    rax,[rip+0x48927]        # 0x14004ee18
   1400064f1:	mov    rbx,QWORD PTR [rsp+0x128]
   1400064f9:	mov    r15,QWORD PTR [rsp+0x40]
   1400064fe:	mov    rsi,QWORD PTR [rsp+0x68]
   140006503:	add    rax,0x18
   140006507:	mov    QWORD PTR [rsi],rax
   14000650a:	cmp    BYTE PTR [r13+0x4c],0x0
   14000650f:	je     0x14000666c
   140006515:	lea    rcx,[r13+0x8]
   140006519:	call   QWORD PTR [rip+0x36f61]        # 0x14003d480
   14000651f:	test   eax,eax
   140006521:	je     0x14001f595
   140006527:	lea    rcx,[r13+0x8]
   14000652b:	call   QWORD PTR [rip+0x36fd7]        # 0x14003d508
   140006531:	lea    rdx,[r15+0x8]
   140006535:	lea    r8,[r13+0x8]
   140006539:	mov    ecx,eax
   14000653b:	call   QWORD PTR [rip+0x36f9f]        # 0x14003d4e0
   140006541:	test   eax,eax
   140006543:	je     0x14001f59f
   140006549:	mov    eax,DWORD PTR [rsp+0x130]
   140006550:	mov    DWORD PTR [rbx+0x80],eax
   140006556:	mov    BYTE PTR [rbx+0x84],0x0
   14000655d:	mov    QWORD PTR [rbx+0x88],r12
   140006564:	lea    rax,[rip+0x384b5]        # 0x14003ea20
   14000656b:	mov    QWORD PTR [rbx],rax
   14000656e:	mov    BYTE PTR [rbx+0x90],0x1
   140006575:	mov    QWORD PTR [rsp+0x38],rbx
   14000657a:	test   rbx,rbx
   14000657d:	je     0x14001f5c9
   140006583:	mov    r14,QWORD PTR [rdi+0x20]
   140006587:	mov    rdx,QWORD PTR [rdi+0x28]
   14000658b:	cmp    r14,rdx
   14000658e:	jb     0x14000661c
   140006594:	lea    rsi,[r14+0x1]
   140006598:	cmp    rsi,rdx
   14000659b:	jbe    0x14000661c
   14000659d:	mov    r13,QWORD PTR [rdi+0x18]
   1400065a1:	test   r13,r13
   1400065a4:	je     0x14001f5d4
   1400065aa:	movsxd rcx,DWORD PTR [rdi+0x30]
   1400065ae:	test   rcx,rcx
   1400065b1:	jne    0x1400065c6
   1400065b3:	mov    rcx,rdx
   1400065b6:	shr    rcx,1
   1400065b9:	mov    rax,rsi
   1400065bc:	sub    rax,rdx
   1400065bf:	cmp    rax,rcx
   1400065c2:	cmova  rcx,rax
   1400065c6:	lea    rax,[rdx+rcx*1]
   1400065ca:	cmp    rsi,rax
   1400065cd:	cmovb  rsi,rax
   1400065d1:	mov    edx,0x8
   1400065d6:	mov    rcx,rsi
   1400065d9:	call   QWORD PTR [rip+0x37021]        # 0x14003d600
   1400065df:	mov    r15,rax
   1400065e2:	test   rax,rax
   1400065e5:	je     0x14001f634
   1400065eb:	lea    rdx,[r14*8+0x0]
   1400065f3:	mov    r9,rdx
   1400065f6:	mov    r8,r13
   1400065f9:	mov    rcx,rax
   1400065fc:	call   QWORD PTR [rip+0x37026]        # 0x14003d628
   140006602:	test   eax,eax
   140006604:	jne    0x14001f5fb
   14000660a:	mov    rcx,QWORD PTR [rdi+0x18]
   14000660e:	call   QWORD PTR [rip+0x37034]        # 0x14003d648
   140006614:	mov    QWORD PTR [rdi+0x18],r15
   140006618:	mov    QWORD PTR [rdi+0x28],rsi
   14000661c:	mov    rax,QWORD PTR [rdi+0x18]
   140006620:	lea    rcx,[rax+r14*8]
   140006624:	test   rcx,rcx
   140006627:	je     0x140006637
   140006629:	mov    rax,rbx
   14000662c:	mov    rbx,r12
   14000662f:	mov    QWORD PTR [rsp+0x38],rbx
   140006634:	mov    QWORD PTR [rcx],rax
   140006637:	inc    QWORD PTR [rdi+0x20]
   14000663b:	mov    rcx,QWORD PTR [rdi+0x8]
   14000663f:	call   QWORD PTR [rip+0x37003]        # 0x14003d648
   140006645:	mov    QWORD PTR [rdi+0x8],r12
   140006649:	test   rbx,rbx
   14000664c:	jne    0x14001f63f
   140006652:	mov    QWORD PTR [rsp+0x38],r12
   140006657:	mov    al,0x1
   140006659:	add    rsp,0xe0
   140006660:	pop    r15
   140006662:	pop    r14
   140006664:	pop    r13
   140006666:	pop    r12
   140006668:	pop    rdi
   140006669:	pop    rsi
   14000666a:	pop    rbx
   14000666b:	ret    
   14000666c:	jmp    0x140006549
   140006671:	xor    al,al
   140006673:	jmp    0x140006659
   140006675:	int3   
   140006676:	int3   
   140006677:	int3   
   140006678:	int3   
   140006679:	int3   
   14000667a:	int3   
   14000667b:	int3   
   14000667c:	rex push rbx
   14000667e:	sub    rsp,0x20
   140006682:	lea    rax,[rip+0x37cef]        # 0x14003e378
   140006689:	mov    rbx,rcx
   14000668c:	mov    QWORD PTR [rcx],rax
   14000668f:	call   0x140006130
   140006694:	mov    rcx,QWORD PTR [rbx+0x18]
   140006698:	test   rcx,rcx
   14000669b:	jne    0x14001f65e
   1400066a1:	mov    rcx,QWORD PTR [rbx+0x8]
   1400066a5:	lea    rax,[rip+0x37c84]        # 0x14003e330
   1400066ac:	mov    QWORD PTR [rbx],rax
   1400066af:	add    rsp,0x20
   1400066b3:	pop    rbx
   1400066b4:	rex.W jmp QWORD PTR [rip+0x36f8d]        # 0x14003d648
   1400066bb:	int3   
   1400066bc:	int3   
   1400066bd:	int3   
   1400066be:	int3   
   1400066bf:	int3   
   1400066c0:	int3   
   1400066c1:	int3   
   1400066c2:	int3   
   1400066c3:	int3   
   1400066c4:	xor    edx,edx
   1400066c6:	mov    DWORD PTR [rcx+0x14],0x2
   1400066cd:	mov    QWORD PTR [rcx+0x8],rdx
   1400066d1:	lea    rax,[rip+0x37ca0]        # 0x14003e378
   1400066d8:	mov    QWORD PTR [rcx],rax
   1400066db:	mov    rax,rcx
   1400066de:	mov    BYTE PTR [rcx+0x10],dl
   1400066e1:	mov    QWORD PTR [rcx+0x18],rdx
   1400066e5:	mov    QWORD PTR [rcx+0x20],rdx
   1400066e9:	mov    QWORD PTR [rcx+0x28],rdx
   1400066ed:	mov    DWORD PTR [rcx+0x30],edx
   1400066f0:	ret    
   1400066f1:	int3   
   1400066f2:	int3   
   1400066f3:	int3   
   1400066f4:	int3   
   1400066f5:	int3   
   1400066f6:	int3   
   1400066f7:	int3   
   1400066f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400066fd:	push   rdi
   1400066fe:	sub    rsp,0x20
   140006702:	mov    rdi,rcx
   140006705:	mov    rbx,rdx
   140006708:	mov    rcx,rdx
   14000670b:	call   QWORD PTR [rip+0x36d6f]        # 0x14003d480
   140006711:	test   eax,eax
   140006713:	je     0x14001f678
   140006719:	mov    rcx,rbx
   14000671c:	call   QWORD PTR [rip+0x36de6]        # 0x14003d508
   140006722:	cmp    eax,0x44
   140006725:	ja     0x14001f683
   14000672b:	lea    rdx,[rdi+0x8]
   14000672f:	mov    BYTE PTR [rdi+0x4c],0x1
   140006733:	mov    r8,rbx
   140006736:	mov    ecx,eax
   140006738:	call   QWORD PTR [rip+0x36da2]        # 0x14003d4e0
   14000673e:	test   eax,eax
   140006740:	je     0x14001f68e
   140006746:	mov    rbx,QWORD PTR [rsp+0x30]
   14000674b:	add    rsp,0x20
   14000674f:	pop    rdi
   140006750:	ret    
   140006751:	int3   
   140006752:	int3   
   140006753:	int3   
   140006754:	int3   
   140006755:	int3   
   140006756:	int3   
   140006757:	int3   
   140006758:	int3   
   140006759:	int3   
   14000675a:	int3   
   14000675b:	int3   
   14000675c:	int3   
   14000675d:	int3   
   14000675e:	int3   
   14000675f:	int3   
   140006760:	mov    QWORD PTR [rsp+0x8],rcx
   140006765:	push   rsi
   140006766:	push   rdi
   140006767:	push   r12
   140006769:	push   r14
   14000676b:	push   r15
   14000676d:	sub    rsp,0x30
   140006771:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000677a:	mov    QWORD PTR [rsp+0x70],rbx
   14000677f:	mov    QWORD PTR [rsp+0x78],rbp
   140006784:	mov    rbp,rdx
   140006787:	mov    rsi,rcx
   14000678a:	lea    rax,[rip+0x38287]        # 0x14003ea18
   140006791:	mov    QWORD PTR [rcx],rax
   140006794:	movzx  eax,BYTE PTR [rdx+0x4c]
   140006798:	mov    BYTE PTR [rcx+0x4c],al
   14000679b:	mov    eax,DWORD PTR [rdx+0x50]
   14000679e:	mov    DWORD PTR [rcx+0x50],eax
   1400067a1:	lea    r15,[rcx+0x58]
   1400067a5:	mov    QWORD PTR [rsp+0x68],r15
   1400067aa:	mov    rdi,QWORD PTR [rdx+0x58]
   1400067ae:	mov    rbx,QWORD PTR [rdi-0x18]
   1400067b2:	mov    rax,QWORD PTR [rbx]
   1400067b5:	mov    r14,QWORD PTR [rax+0x20]
   1400067b9:	lea    r12,[rip+0x1670]        # 0x140007e30
   1400067c0:	cmp    r14,r12
   1400067c3:	jne    0x14001f6a0
   1400067c9:	mov    rcx,rbx
   1400067cc:	call   0x140007e30
   1400067d1:	mov    r14,rax
   1400067d4:	cmp    DWORD PTR [rdi-0x8],0x0
   1400067d8:	jl     0x14001f6b5
   1400067de:	cmp    rax,QWORD PTR [rdi-0x18]
   1400067e2:	jne    0x14001f6b5
   1400067e8:	lea    rbx,[rdi-0x18]
   1400067ec:	lock inc DWORD PTR [rdi-0x8]
   1400067f0:	lea    rax,[rbx+0x18]
   1400067f4:	mov    QWORD PTR [r15],rax
   1400067f7:	lea    r15,[rsi+0x60]
   1400067fb:	mov    QWORD PTR [rsp+0x68],r15
   140006800:	mov    rdi,QWORD PTR [rbp+0x60]
   140006804:	mov    rbx,QWORD PTR [rdi-0x18]
   140006808:	mov    rax,QWORD PTR [rbx]
   14000680b:	mov    r14,QWORD PTR [rax+0x20]
   14000680f:	cmp    r14,r12
   140006812:	jne    0x14001f708
   140006818:	mov    rcx,rbx
   14000681b:	call   0x140007e30
   140006820:	mov    r14,rax
   140006823:	cmp    DWORD PTR [rdi-0x8],0x0
   140006827:	jl     0x14001f71d
   14000682d:	cmp    rax,QWORD PTR [rdi-0x18]
   140006831:	jne    0x14001f71d
   140006837:	lea    rbx,[rdi-0x18]
   14000683b:	lock inc DWORD PTR [rdi-0x8]
   14000683f:	lea    rax,[rbx+0x18]
   140006843:	mov    QWORD PTR [r15],rax
   140006846:	lea    r15,[rsi+0x68]
   14000684a:	mov    QWORD PTR [rsp+0x68],r15
   14000684f:	mov    rbx,QWORD PTR [rbp+0x68]
   140006853:	mov    rdi,QWORD PTR [rbx-0x18]
   140006857:	mov    rax,QWORD PTR [rdi]
   14000685a:	mov    r14,QWORD PTR [rax+0x20]
   14000685e:	cmp    r14,r12
   140006861:	jne    0x14001f770
   140006867:	mov    rcx,rdi
   14000686a:	call   0x140007e30
   14000686f:	mov    r14,rax
   140006872:	cmp    DWORD PTR [rbx-0x8],0x0
   140006876:	jl     0x14001f785
   14000687c:	cmp    rax,QWORD PTR [rbx-0x18]
   140006880:	jne    0x14001f785
   140006886:	lea    rdi,[rbx-0x18]
   14000688a:	lock inc DWORD PTR [rbx-0x8]
   14000688e:	lea    rax,[rdi+0x18]
   140006892:	mov    QWORD PTR [r15],rax
   140006895:	mov    rax,QWORD PTR [rip+0x4856c]        # 0x14004ee08
   14000689c:	mov    rbx,QWORD PTR [rax+0x18]
   1400068a0:	lea    rax,[rip+0x1599]        # 0x140007e40
   1400068a7:	cmp    rbx,rax
   1400068aa:	jne    0x14001f7d8
   1400068b0:	lea    rcx,[rip+0x48551]        # 0x14004ee08
   1400068b7:	call   0x140007e40
   1400068bc:	add    rax,0x18
   1400068c0:	mov    QWORD PTR [rsi+0x70],rax
   1400068c4:	cmp    BYTE PTR [rbp+0x4c],0x0
   1400068c8:	je     0x1400068fe
   1400068ca:	lea    rcx,[rbp+0x8]
   1400068ce:	call   QWORD PTR [rip+0x36bac]        # 0x14003d480
   1400068d4:	test   eax,eax
   1400068d6:	je     0x14001f7f0
   1400068dc:	lea    rcx,[rbp+0x8]
   1400068e0:	call   QWORD PTR [rip+0x36c22]        # 0x14003d508
   1400068e6:	lea    rdx,[rsi+0x8]
   1400068ea:	lea    r8,[rbp+0x8]
   1400068ee:	mov    ecx,eax
   1400068f0:	call   QWORD PTR [rip+0x36bea]        # 0x14003d4e0
   1400068f6:	test   eax,eax
   1400068f8:	je     0x14001f7fb
   1400068fe:	mov    rax,rsi
   140006901:	mov    rbx,QWORD PTR [rsp+0x70]
   140006906:	mov    rbp,QWORD PTR [rsp+0x78]
   14000690b:	add    rsp,0x30
   14000690f:	pop    r15
   140006911:	pop    r14
   140006913:	pop    r12
   140006915:	pop    rdi
   140006916:	pop    rsi
   140006917:	ret    
   140006918:	int3   
   140006919:	int3   
   14000691a:	int3   
   14000691b:	int3   
   14000691c:	int3   
   14000691d:	int3   
   14000691e:	int3   
   14000691f:	int3   
   140006920:	mov    QWORD PTR [rsp+0x18],rbx
   140006925:	mov    QWORD PTR [rsp+0x20],rsi
   14000692a:	push   rdi
   14000692b:	sub    rsp,0x20
   14000692f:	lea    rax,[rip+0x380e2]        # 0x14003ea18
   140006936:	mov    QWORD PTR [rsp+0x30],r14
   14000693b:	or     ebx,0xffffffff
   14000693e:	mov    QWORD PTR [rcx],rax
   140006941:	mov    QWORD PTR [rsp+0x38],r15
   140006946:	mov    eax,ebx
   140006948:	mov    r15,QWORD PTR [rcx+0x70]
   14000694c:	mov    r14,rcx
   14000694f:	lock xadd DWORD PTR [r15-0x8],eax
   140006955:	sub    eax,0x1
   140006958:	jle    0x14001f808
   14000695e:	mov    r15,QWORD PTR [r14+0x68]
   140006962:	mov    eax,ebx
   140006964:	lock xadd DWORD PTR [r15-0x8],eax
   14000696a:	sub    eax,0x1
   14000696d:	jle    0x14001f82b
   140006973:	mov    r15,QWORD PTR [r14+0x60]
   140006977:	mov    eax,ebx
   140006979:	lock xadd DWORD PTR [r15-0x8],eax
   14000697f:	sub    eax,0x1
   140006982:	jle    0x14001f84e
   140006988:	mov    rsi,QWORD PTR [r14+0x58]
   14000698c:	lock xadd DWORD PTR [rsi-0x8],ebx
   140006991:	mov    r15,QWORD PTR [rsp+0x38]
   140006996:	mov    r14,QWORD PTR [rsp+0x30]
   14000699b:	sub    ebx,0x1
   14000699e:	jle    0x14001f871
   1400069a4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400069a9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400069ae:	add    rsp,0x20
   1400069b2:	pop    rdi
   1400069b3:	ret    
   1400069b4:	int3   
   1400069b5:	int3   
   1400069b6:	int3   
   1400069b7:	int3   
   1400069b8:	int3   
   1400069b9:	int3   
   1400069ba:	int3   
   1400069bb:	int3   
   1400069bc:	int3   
   1400069bd:	int3   
   1400069be:	int3   
   1400069bf:	int3   
   1400069c0:	mov    BYTE PTR [rsp+0x18],r8b
   1400069c5:	mov    QWORD PTR [rsp+0x20],r9
   1400069ca:	push   rbx
   1400069cb:	push   rbp
   1400069cc:	push   rsi
   1400069cd:	push   rdi
   1400069ce:	push   r14
   1400069d0:	sub    rsp,0x90
   1400069d7:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400069e0:	mov    rax,QWORD PTR [rip+0x47629]        # 0x14004e010
   1400069e7:	xor    rax,rsp
   1400069ea:	mov    QWORD PTR [rsp+0x80],rax
   1400069f2:	mov    rsi,rdx
   1400069f5:	mov    r14,rcx
   1400069f8:	mov    QWORD PTR [rsp+0x20],rcx
   1400069fd:	lea    rax,[rip+0x38014]        # 0x14003ea18
   140006a04:	mov    QWORD PTR [rcx],rax
   140006a07:	mov    BYTE PTR [rcx+0x4c],0x0
   140006a0b:	mov    DWORD PTR [rcx+0x50],0x7
   140006a12:	mov    rax,QWORD PTR [rip+0x483ef]        # 0x14004ee08
   140006a19:	mov    rdi,QWORD PTR [rax+0x18]
   140006a1d:	lea    rbp,[rip+0x141c]        # 0x140007e40
   140006a24:	lea    rbx,[rip+0x483ed]        # 0x14004ee18
   140006a2b:	cmp    rdi,rbp
   140006a2e:	jne    0x14001f894
   140006a34:	lock inc DWORD PTR [rip+0x483ed]        # 0x14004ee28
   140006a3b:	mov    rax,rbx
   140006a3e:	add    rax,0x18
   140006a42:	mov    QWORD PTR [r14+0x58],rax
   140006a46:	mov    rax,QWORD PTR [rip+0x483bb]        # 0x14004ee08
   140006a4d:	mov    rdi,QWORD PTR [rax+0x18]
   140006a51:	cmp    rdi,rbp
   140006a54:	jne    0x14001f8ac
   140006a5a:	lock inc DWORD PTR [rip+0x483c7]        # 0x14004ee28
   140006a61:	mov    rax,rbx
   140006a64:	add    rax,0x18
   140006a68:	mov    QWORD PTR [r14+0x60],rax
   140006a6c:	mov    rax,QWORD PTR [rip+0x48395]        # 0x14004ee08
   140006a73:	mov    rdi,QWORD PTR [rax+0x18]
   140006a77:	cmp    rdi,rbp
   140006a7a:	jne    0x14001f8c4
   140006a80:	lock inc DWORD PTR [rip+0x483a1]        # 0x14004ee28
   140006a87:	mov    rax,rbx
   140006a8a:	add    rax,0x18
   140006a8e:	mov    QWORD PTR [r14+0x68],rax
   140006a92:	mov    rax,QWORD PTR [rip+0x4836f]        # 0x14004ee08
   140006a99:	mov    rdi,QWORD PTR [rax+0x18]
   140006a9d:	cmp    rdi,rbp
   140006aa0:	jne    0x14001f8dc
   140006aa6:	lock inc DWORD PTR [rip+0x4837b]        # 0x14004ee28
   140006aad:	lea    rax,[rbx+0x18]
   140006ab1:	mov    QWORD PTR [r14+0x70],rax
   140006ab5:	movzx  ecx,BYTE PTR [rsp+0xd0]
   140006abd:	test   cl,cl
   140006abf:	je     0x14001f91e
   140006ac5:	call   QWORD PTR [rip+0x36a05]        # 0x14003d4d0
   140006acb:	cmp    eax,0x44
   140006ace:	ja     0x14001f91e
   140006ad4:	movzx  r8d,BYTE PTR [rsp+0xd0]
   140006add:	mov    rdx,rsi
   140006ae0:	lea    rcx,[rsp+0x30]
   140006ae5:	call   QWORD PTR [rip+0x369ed]        # 0x14003d4d8
   140006aeb:	test   eax,eax
   140006aed:	je     0x140006b9b
   140006af3:	lea    rsi,[rsp+0xd8]
   140006afb:	xor    ebx,ebx
   140006afd:	cmp    BYTE PTR [rsp+0xd0],bl
   140006b04:	jbe    0x140006b2d
   140006b06:	add    rsi,0xfffffffffffffff8
   140006b0a:	lea    rsi,[rsi+0x8]
   140006b0e:	mov    edi,DWORD PTR [rsi]
   140006b10:	mov    edx,ebx
   140006b12:	lea    rcx,[rsp+0x30]
   140006b17:	call   QWORD PTR [rip+0x36993]        # 0x14003d4b0
   140006b1d:	mov    DWORD PTR [rax],edi
   140006b1f:	inc    ebx
   140006b21:	movzx  eax,BYTE PTR [rsp+0xd0]
   140006b29:	cmp    ebx,eax
   140006b2b:	jb     0x140006b0a
   140006b2d:	lea    rcx,[rsp+0x30]
   140006b32:	call   QWORD PTR [rip+0x36948]        # 0x14003d480
   140006b38:	test   eax,eax
   140006b3a:	je     0x14001f8f6
   140006b40:	lea    rcx,[rsp+0x30]
   140006b45:	call   QWORD PTR [rip+0x369bd]        # 0x14003d508
   140006b4b:	cmp    eax,0x44
   140006b4e:	ja     0x14001f901
   140006b54:	mov    BYTE PTR [r14+0x4c],0x1
   140006b59:	lea    rdx,[r14+0x8]
   140006b5d:	lea    r8,[rsp+0x30]
   140006b62:	mov    ecx,eax
   140006b64:	call   QWORD PTR [rip+0x36976]        # 0x14003d4e0
   140006b6a:	test   eax,eax
   140006b6c:	je     0x14001f90c
   140006b72:	mov    DWORD PTR [r14+0x50],0x8
   140006b7a:	mov    rax,r14
   140006b7d:	mov    rcx,QWORD PTR [rsp+0x80]
   140006b85:	xor    rcx,rsp
   140006b88:	call   0x1400141d0
   140006b8d:	add    rsp,0x90
   140006b94:	pop    r14
   140006b96:	pop    rdi
   140006b97:	pop    rsi
   140006b98:	pop    rbp
   140006b99:	pop    rbx
   140006b9a:	ret    
   140006b9b:	call   0x14002b0d4
   140006ba0:	nop
   140006ba1:	int3   
   140006ba2:	int3   
   140006ba3:	int3   
   140006ba4:	int3   
   140006ba5:	int3   
   140006ba6:	int3   
   140006ba7:	int3   
   140006ba8:	int3   
   140006ba9:	int3   
   140006baa:	int3   
   140006bab:	int3   
   140006bac:	int3   
   140006bad:	int3   
   140006bae:	int3   
   140006baf:	int3   
   140006bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140006bb5:	mov    QWORD PTR [rsp+0x10],rsi
   140006bba:	push   rdi
   140006bbb:	sub    rsp,0x20
   140006bbf:	lea    rax,[rip+0x37e52]        # 0x14003ea18
   140006bc6:	mov    BYTE PTR [rcx+0x4c],0x0
   140006bca:	mov    QWORD PTR [rcx],rax
   140006bcd:	lea    rsi,[rip+0x126c]        # 0x140007e40
   140006bd4:	mov    DWORD PTR [rcx+0x50],0x7
   140006bdb:	mov    rbx,rcx
   140006bde:	mov    rax,QWORD PTR [rip+0x48223]        # 0x14004ee08
   140006be5:	mov    rdi,QWORD PTR [rax+0x18]
   140006be9:	cmp    rdi,rsi
   140006bec:	jne    0x14001f92a
   140006bf2:	lea    rcx,[rip+0x4820f]        # 0x14004ee08
   140006bf9:	call   0x140007e40
   140006bfe:	add    rax,0x18
   140006c02:	mov    QWORD PTR [rbx+0x58],rax
   140006c06:	mov    rax,QWORD PTR [rip+0x481fb]        # 0x14004ee08
   140006c0d:	mov    rdi,QWORD PTR [rax+0x18]
   140006c11:	cmp    rdi,rsi
   140006c14:	jne    0x14001f942
   140006c1a:	lea    rcx,[rip+0x481e7]        # 0x14004ee08
   140006c21:	call   0x140007e40
   140006c26:	add    rax,0x18
   140006c2a:	mov    QWORD PTR [rbx+0x60],rax
   140006c2e:	mov    rax,QWORD PTR [rip+0x481d3]        # 0x14004ee08
   140006c35:	mov    rdi,QWORD PTR [rax+0x18]
   140006c39:	cmp    rdi,rsi
   140006c3c:	jne    0x14001f95a
   140006c42:	lea    rcx,[rip+0x481bf]        # 0x14004ee08
   140006c49:	call   0x140007e40
   140006c4e:	add    rax,0x18
   140006c52:	mov    QWORD PTR [rbx+0x68],rax
   140006c56:	mov    rax,QWORD PTR [rip+0x481ab]        # 0x14004ee08
   140006c5d:	mov    rdi,QWORD PTR [rax+0x18]
   140006c61:	cmp    rdi,rsi
   140006c64:	jne    0x14001f972
   140006c6a:	lea    rcx,[rip+0x48197]        # 0x14004ee08
   140006c71:	call   0x140007e40
   140006c76:	mov    rsi,QWORD PTR [rsp+0x38]
   140006c7b:	add    rax,0x18
   140006c7f:	mov    QWORD PTR [rbx+0x70],rax
   140006c83:	mov    rax,rbx
   140006c86:	mov    rbx,QWORD PTR [rsp+0x30]
   140006c8b:	add    rsp,0x20
   140006c8f:	pop    rdi
   140006c90:	ret    
   140006c91:	int3   
   140006c92:	int3   
   140006c93:	int3   
   140006c94:	int3   
   140006c95:	int3   
   140006c96:	int3   
   140006c97:	int3   
   140006c98:	lea    rcx,[rip+0x481a1]        # 0x14004ee40
   140006c9f:	jmp    0x140004fc4
   140006ca4:	int3   
   140006ca5:	int3   
   140006ca6:	int3   
   140006ca7:	int3   
   140006ca8:	int3   
   140006ca9:	int3   
   140006caa:	int3   
   140006cab:	int3   
   140006cac:	int3   
   140006cad:	int3   
   140006cae:	int3   
   140006caf:	int3   
   140006cb0:	mov    QWORD PTR [rsp+0x8],rcx
   140006cb5:	push   rbp
   140006cb6:	mov    rbp,rsp
   140006cb9:	sub    rsp,0x30
   140006cbd:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140006cc5:	mov    QWORD PTR [rsp+0x50],rbx
   140006cca:	lea    rbx,[rip+0x4816f]        # 0x14004ee40
   140006cd1:	mov    QWORD PTR [rbp+0x18],rbx
   140006cd5:	mov    rcx,rbx
   140006cd8:	call   0x140005040
   140006cdd:	nop
   140006cde:	mov    DWORD PTR [rbp+0x10],0x0
   140006ce5:	lea    rdx,[rbp+0x10]
   140006ce9:	call   0x1400079d0
   140006cee:	mov    r9,rax
   140006cf1:	lea    rcx,[rip+0x376b0]        # 0x14003e3a8
   140006cf8:	call   0x140007720
   140006cfd:	mov    r8d,eax
   140006d00:	lea    rdx,[rip+0x376a1]        # 0x14003e3a8
   140006d07:	mov    rcx,r9
   140006d0a:	call   0x1400074b0
   140006d0f:	mov    DWORD PTR [rbp+0x10],0x1
   140006d16:	lea    rdx,[rbp+0x10]
   140006d1a:	call   0x1400079d0
   140006d1f:	mov    r9,rax
   140006d22:	lea    rcx,[rip+0x37697]        # 0x14003e3c0
   140006d29:	call   0x140007720
   140006d2e:	mov    r8d,eax
   140006d31:	lea    rdx,[rip+0x37688]        # 0x14003e3c0
   140006d38:	mov    rcx,r9
   140006d3b:	call   0x1400074b0
   140006d40:	mov    DWORD PTR [rbp+0x10],0x2
   140006d47:	lea    rdx,[rbp+0x10]
   140006d4b:	call   0x1400079d0
   140006d50:	mov    r9,rax
   140006d53:	lea    rcx,[rip+0x37676]        # 0x14003e3d0
   140006d5a:	call   0x140007720
   140006d5f:	mov    r8d,eax
   140006d62:	lea    rdx,[rip+0x37667]        # 0x14003e3d0
   140006d69:	mov    rcx,r9
   140006d6c:	call   0x1400074b0
   140006d71:	mov    DWORD PTR [rbp+0x10],0x3
   140006d78:	lea    rdx,[rbp+0x10]
   140006d7c:	call   0x1400079d0
   140006d81:	mov    r9,rax
   140006d84:	lea    rcx,[rip+0x37675]        # 0x14003e400
   140006d8b:	call   0x140007720
   140006d90:	mov    r8d,eax
   140006d93:	lea    rdx,[rip+0x37666]        # 0x14003e400
   140006d9a:	mov    rcx,r9
   140006d9d:	call   0x1400074b0
   140006da2:	mov    DWORD PTR [rbp+0x10],0x4
   140006da9:	lea    rdx,[rbp+0x10]
   140006dad:	call   0x1400079d0
   140006db2:	mov    r9,rax
   140006db5:	lea    rcx,[rip+0x3766c]        # 0x14003e428
   140006dbc:	call   0x140007720
   140006dc1:	mov    r8d,eax
   140006dc4:	lea    rdx,[rip+0x3765d]        # 0x14003e428
   140006dcb:	mov    rcx,r9
   140006dce:	call   0x1400074b0
   140006dd3:	mov    DWORD PTR [rbp+0x10],0x5
   140006dda:	lea    rdx,[rbp+0x10]
   140006dde:	call   0x1400079d0
   140006de3:	mov    r9,rax
   140006de6:	lea    rcx,[rip+0x37663]        # 0x14003e450
   140006ded:	call   0x140007720
   140006df2:	mov    r8d,eax
   140006df5:	lea    rdx,[rip+0x37654]        # 0x14003e450
   140006dfc:	mov    rcx,r9
   140006dff:	call   0x1400074b0
   140006e04:	mov    DWORD PTR [rbp+0x10],0x6
   140006e0b:	lea    rdx,[rbp+0x10]
   140006e0f:	call   0x1400079d0
   140006e14:	mov    r9,rax
   140006e17:	lea    rcx,[rip+0x3766a]        # 0x14003e488
   140006e1e:	call   0x140007720
   140006e23:	mov    r8d,eax
   140006e26:	lea    rdx,[rip+0x3765b]        # 0x14003e488
   140006e2d:	mov    rcx,r9
   140006e30:	call   0x1400074b0
   140006e35:	mov    DWORD PTR [rbp+0x10],0x7
   140006e3c:	lea    rdx,[rbp+0x10]
   140006e40:	call   0x1400079d0
   140006e45:	mov    r9,rax
   140006e48:	lea    rcx,[rip+0x37659]        # 0x14003e4a8
   140006e4f:	call   0x140007720
   140006e54:	mov    r8d,eax
   140006e57:	lea    rdx,[rip+0x3764a]        # 0x14003e4a8
   140006e5e:	mov    rcx,r9
   140006e61:	call   0x1400074b0
   140006e66:	mov    DWORD PTR [rbp+0x10],0x8
   140006e6d:	lea    rdx,[rbp+0x10]
   140006e71:	call   0x1400079d0
   140006e76:	mov    r9,rax
   140006e79:	lea    rcx,[rip+0x37660]        # 0x14003e4e0
   140006e80:	call   0x140007720
   140006e85:	mov    r8d,eax
   140006e88:	lea    rdx,[rip+0x37651]        # 0x14003e4e0
   140006e8f:	mov    rcx,r9
   140006e92:	call   0x1400074b0
   140006e97:	mov    DWORD PTR [rbp+0x10],0x9
   140006e9e:	lea    rdx,[rbp+0x10]
   140006ea2:	call   0x1400079d0
   140006ea7:	mov    r9,rax
   140006eaa:	lea    rcx,[rip+0x3765f]        # 0x14003e510
   140006eb1:	call   0x140007720
   140006eb6:	mov    r8d,eax
   140006eb9:	lea    rdx,[rip+0x37650]        # 0x14003e510
   140006ec0:	mov    rcx,r9
   140006ec3:	call   0x1400074b0
   140006ec8:	mov    DWORD PTR [rbp+0x10],0xa
   140006ecf:	lea    rdx,[rbp+0x10]
   140006ed3:	call   0x1400079d0
   140006ed8:	mov    r9,rax
   140006edb:	lea    rcx,[rip+0x37666]        # 0x14003e548
   140006ee2:	call   0x140007720
   140006ee7:	mov    r8d,eax
   140006eea:	lea    rdx,[rip+0x37657]        # 0x14003e548
   140006ef1:	mov    rcx,r9
   140006ef4:	call   0x1400074b0
   140006ef9:	mov    DWORD PTR [rbp+0x10],0xb
   140006f00:	lea    rdx,[rbp+0x10]
   140006f04:	call   0x1400079d0
   140006f09:	mov    r9,rax
   140006f0c:	lea    rcx,[rip+0x3766d]        # 0x14003e580
   140006f13:	call   0x140007720
   140006f18:	mov    r8d,eax
   140006f1b:	lea    rdx,[rip+0x3765e]        # 0x14003e580
   140006f22:	mov    rcx,r9
   140006f25:	call   0x1400074b0
   140006f2a:	mov    DWORD PTR [rbp+0x10],0xc
   140006f31:	lea    rdx,[rbp+0x10]
   140006f35:	call   0x1400079d0
   140006f3a:	mov    r9,rax
   140006f3d:	lea    rcx,[rip+0x3766c]        # 0x14003e5b0
   140006f44:	call   0x140007720
   140006f49:	mov    r8d,eax
   140006f4c:	lea    rdx,[rip+0x3765d]        # 0x14003e5b0
   140006f53:	mov    rcx,r9
   140006f56:	call   0x1400074b0
   140006f5b:	mov    DWORD PTR [rbp+0x10],0xd
   140006f62:	lea    rdx,[rbp+0x10]
   140006f66:	call   0x1400079d0
   140006f6b:	mov    r9,rax
   140006f6e:	lea    rcx,[rip+0x3766b]        # 0x14003e5e0
   140006f75:	call   0x140007720
   140006f7a:	mov    r8d,eax
   140006f7d:	lea    rdx,[rip+0x3765c]        # 0x14003e5e0
   140006f84:	mov    rcx,r9
   140006f87:	call   0x1400074b0
   140006f8c:	mov    DWORD PTR [rbp+0x10],0xe
   140006f93:	lea    rdx,[rbp+0x10]
   140006f97:	call   0x1400079d0
   140006f9c:	mov    r9,rax
   140006f9f:	lea    rcx,[rip+0x3767a]        # 0x14003e620
   140006fa6:	call   0x140007720
   140006fab:	mov    r8d,eax
   140006fae:	lea    rdx,[rip+0x3766b]        # 0x14003e620
   140006fb5:	mov    rcx,r9
   140006fb8:	call   0x1400074b0
   140006fbd:	mov    DWORD PTR [rbp+0x10],0xf
   140006fc4:	lea    rdx,[rbp+0x10]
   140006fc8:	call   0x1400079d0
   140006fcd:	mov    r9,rax
   140006fd0:	lea    rcx,[rip+0x37679]        # 0x14003e650
   140006fd7:	call   0x140007720
   140006fdc:	mov    r8d,eax
   140006fdf:	lea    rdx,[rip+0x3766a]        # 0x14003e650
   140006fe6:	mov    rcx,r9
   140006fe9:	call   0x1400074b0
   140006fee:	mov    DWORD PTR [rbp+0x10],0x10
   140006ff5:	lea    rdx,[rbp+0x10]
   140006ff9:	call   0x1400079d0
   140006ffe:	mov    r9,rax
   140007001:	lea    rcx,[rip+0x37670]        # 0x14003e678
   140007008:	call   0x140007720
   14000700d:	mov    r8d,eax
   140007010:	lea    rdx,[rip+0x37661]        # 0x14003e678
   140007017:	mov    rcx,r9
   14000701a:	call   0x1400074b0
   14000701f:	mov    DWORD PTR [rbp+0x10],0x11
   140007026:	lea    rdx,[rbp+0x10]
   14000702a:	call   0x1400079d0
   14000702f:	mov    r9,rax
   140007032:	lea    rcx,[rip+0x37677]        # 0x14003e6b0
   140007039:	call   0x140007720
   14000703e:	mov    r8d,eax
   140007041:	lea    rdx,[rip+0x37668]        # 0x14003e6b0
   140007048:	mov    rcx,r9
   14000704b:	call   0x1400074b0
   140007050:	mov    DWORD PTR [rbp+0x10],0x12
   140007057:	lea    rdx,[rbp+0x10]
   14000705b:	call   0x1400079d0
   140007060:	mov    r9,rax
   140007063:	lea    rcx,[rip+0x37666]        # 0x14003e6d0
   14000706a:	call   0x140007720
   14000706f:	mov    r8d,eax
   140007072:	lea    rdx,[rip+0x37657]        # 0x14003e6d0
   140007079:	mov    rcx,r9
   14000707c:	call   0x1400074b0
   140007081:	mov    DWORD PTR [rbp+0x10],0x13
   140007088:	lea    rdx,[rbp+0x10]
   14000708c:	call   0x1400079d0
   140007091:	mov    r9,rax
   140007094:	lea    rcx,[rip+0x37665]        # 0x14003e700
   14000709b:	call   0x140007720
   1400070a0:	mov    r8d,eax
   1400070a3:	lea    rdx,[rip+0x37656]        # 0x14003e700
   1400070aa:	mov    rcx,r9
   1400070ad:	call   0x1400074b0
   1400070b2:	mov    DWORD PTR [rbp+0x10],0x14
   1400070b9:	lea    rdx,[rbp+0x10]
   1400070bd:	call   0x1400079d0
   1400070c2:	mov    r9,rax
   1400070c5:	lea    rcx,[rip+0x3766c]        # 0x14003e738
   1400070cc:	call   0x140007720
   1400070d1:	mov    r8d,eax
   1400070d4:	lea    rdx,[rip+0x3765d]        # 0x14003e738
   1400070db:	mov    rcx,r9
   1400070de:	call   0x1400074b0
   1400070e3:	mov    DWORD PTR [rbp+0x10],0x15
   1400070ea:	lea    rdx,[rbp+0x10]
   1400070ee:	call   0x1400079d0
   1400070f3:	mov    r9,rax
   1400070f6:	lea    rcx,[rip+0x37673]        # 0x14003e770
   1400070fd:	call   0x140007720
   140007102:	mov    r8d,eax
   140007105:	lea    rdx,[rip+0x37664]        # 0x14003e770
   14000710c:	mov    rcx,r9
   14000710f:	call   0x1400074b0
   140007114:	mov    DWORD PTR [rbp+0x10],0x16
   14000711b:	lea    rdx,[rbp+0x10]
   14000711f:	call   0x1400079d0
   140007124:	mov    r9,rax
   140007127:	lea    rcx,[rip+0x3766a]        # 0x14003e798
   14000712e:	call   0x140007720
   140007133:	mov    r8d,eax
   140007136:	lea    rdx,[rip+0x3765b]        # 0x14003e798
   14000713d:	mov    rcx,r9
   140007140:	call   0x1400074b0
   140007145:	mov    DWORD PTR [rbp+0x10],0x17
   14000714c:	lea    rdx,[rbp+0x10]
   140007150:	call   0x1400079d0
   140007155:	mov    r9,rax
   140007158:	lea    rcx,[rip+0x37661]        # 0x14003e7c0
   14000715f:	call   0x140007720
   140007164:	mov    r8d,eax
   140007167:	lea    rdx,[rip+0x37652]        # 0x14003e7c0
   14000716e:	mov    rcx,r9
   140007171:	call   0x1400074b0
   140007176:	mov    DWORD PTR [rbp+0x10],0x18
   14000717d:	lea    rdx,[rbp+0x10]
   140007181:	call   0x1400079d0
   140007186:	mov    r9,rax
   140007189:	lea    rcx,[rip+0x37650]        # 0x14003e7e0
   140007190:	call   0x140007720
   140007195:	mov    r8d,eax
   140007198:	lea    rdx,[rip+0x37641]        # 0x14003e7e0
   14000719f:	mov    rcx,r9
   1400071a2:	call   0x1400074b0
   1400071a7:	mov    DWORD PTR [rbp+0x10],0x19
   1400071ae:	lea    rdx,[rbp+0x10]
   1400071b2:	call   0x1400079d0
   1400071b7:	mov    r9,rax
   1400071ba:	lea    rcx,[rip+0x37637]        # 0x14003e7f8
   1400071c1:	call   0x140007720
   1400071c6:	mov    r8d,eax
   1400071c9:	lea    rdx,[rip+0x37628]        # 0x14003e7f8
   1400071d0:	mov    rcx,r9
   1400071d3:	call   0x1400074b0
   1400071d8:	mov    DWORD PTR [rbp+0x10],0x1a
   1400071df:	lea    rdx,[rbp+0x10]
   1400071e3:	call   0x1400079d0
   1400071e8:	mov    r9,rax
   1400071eb:	lea    rcx,[rip+0x37626]        # 0x14003e818
   1400071f2:	call   0x140007720
   1400071f7:	mov    r8d,eax
   1400071fa:	lea    rdx,[rip+0x37617]        # 0x14003e818
   140007201:	mov    rcx,r9
   140007204:	call   0x1400074b0
   140007209:	mov    DWORD PTR [rbp+0x10],0x1b
   140007210:	lea    rdx,[rbp+0x10]
   140007214:	call   0x1400079d0
   140007219:	mov    r9,rax
   14000721c:	lea    rcx,[rip+0x3761d]        # 0x14003e840
   140007223:	call   0x140007720
   140007228:	mov    r8d,eax
   14000722b:	lea    rdx,[rip+0x3760e]        # 0x14003e840
   140007232:	mov    rcx,r9
   140007235:	call   0x1400074b0
   14000723a:	mov    DWORD PTR [rbp+0x10],0x1c
   140007241:	lea    rdx,[rbp+0x10]
   140007245:	call   0x1400079d0
   14000724a:	mov    r9,rax
   14000724d:	lea    rcx,[rip+0x3760c]        # 0x14003e860
   140007254:	call   0x140007720
   140007259:	mov    r8d,eax
   14000725c:	lea    rdx,[rip+0x375fd]        # 0x14003e860
   140007263:	mov    rcx,r9
   140007266:	call   0x1400074b0
   14000726b:	mov    DWORD PTR [rbp+0x10],0x1d
   140007272:	lea    rdx,[rbp+0x10]
   140007276:	call   0x1400079d0
   14000727b:	mov    r9,rax
   14000727e:	lea    rcx,[rip+0x375f3]        # 0x14003e878
   140007285:	call   0x140007720
   14000728a:	mov    r8d,eax
   14000728d:	lea    rdx,[rip+0x375e4]        # 0x14003e878
   140007294:	mov    rcx,r9
   140007297:	call   0x1400074b0
   14000729c:	mov    DWORD PTR [rbp+0x10],0x1e
   1400072a3:	lea    rdx,[rbp+0x10]
   1400072a7:	call   0x1400079d0
   1400072ac:	mov    r9,rax
   1400072af:	lea    rcx,[rip+0x375da]        # 0x14003e890
   1400072b6:	call   0x140007720
   1400072bb:	mov    r8d,eax
   1400072be:	lea    rdx,[rip+0x375cb]        # 0x14003e890
   1400072c5:	mov    rcx,r9
   1400072c8:	call   0x1400074b0
   1400072cd:	mov    DWORD PTR [rbp+0x10],0x1f
   1400072d4:	lea    rdx,[rbp+0x10]
   1400072d8:	call   0x1400079d0
   1400072dd:	mov    r9,rax
   1400072e0:	lea    rcx,[rip+0x375c1]        # 0x14003e8a8
   1400072e7:	call   0x140007720
   1400072ec:	mov    r8d,eax
   1400072ef:	lea    rdx,[rip+0x375b2]        # 0x14003e8a8
   1400072f6:	mov    rcx,r9
   1400072f9:	call   0x1400074b0
   1400072fe:	mov    DWORD PTR [rbp+0x10],0x20
   140007305:	lea    rdx,[rbp+0x10]
   140007309:	call   0x1400079d0
   14000730e:	mov    r9,rax
   140007311:	lea    rcx,[rip+0x375a8]        # 0x14003e8c0
   140007318:	call   0x140007720
   14000731d:	mov    r8d,eax
   140007320:	lea    rdx,[rip+0x37599]        # 0x14003e8c0
   140007327:	mov    rcx,r9
   14000732a:	call   0x1400074b0
   14000732f:	mov    DWORD PTR [rbp+0x10],0x21
   140007336:	lea    rdx,[rbp+0x10]
   14000733a:	call   0x1400079d0
   14000733f:	mov    r9,rax
   140007342:	lea    rcx,[rip+0x375bf]        # 0x14003e908
   140007349:	call   0x140007720
   14000734e:	mov    r8d,eax
   140007351:	lea    rdx,[rip+0x375b0]        # 0x14003e908
   140007358:	mov    rcx,r9
   14000735b:	call   0x1400074b0
   140007360:	mov    DWORD PTR [rbp+0x10],0x22
   140007367:	lea    rdx,[rbp+0x10]
   14000736b:	call   0x1400079d0
   140007370:	mov    r9,rax
   140007373:	lea    rcx,[rip+0x375c6]        # 0x14003e940
   14000737a:	call   0x140007720
   14000737f:	mov    r8d,eax
   140007382:	lea    rdx,[rip+0x375b7]        # 0x14003e940
   140007389:	mov    rcx,r9
   14000738c:	call   0x1400074b0
   140007391:	mov    DWORD PTR [rbp+0x10],0x23
   140007398:	lea    rdx,[rbp+0x10]
   14000739c:	call   0x1400079d0
   1400073a1:	mov    r9,rax
   1400073a4:	lea    rcx,[rip+0x375c5]        # 0x14003e970
   1400073ab:	call   0x140007720
   1400073b0:	mov    r8d,eax
   1400073b3:	lea    rdx,[rip+0x375b6]        # 0x14003e970
   1400073ba:	mov    rcx,r9
   1400073bd:	call   0x1400074b0
   1400073c2:	mov    DWORD PTR [rbp+0x10],0x24
   1400073c9:	lea    rdx,[rbp+0x10]
   1400073cd:	call   0x1400079d0
   1400073d2:	mov    r9,rax
   1400073d5:	lea    rcx,[rip+0x375cc]        # 0x14003e9a8
   1400073dc:	call   0x140007720
   1400073e1:	mov    r8d,eax
   1400073e4:	lea    rdx,[rip+0x375bd]        # 0x14003e9a8
   1400073eb:	mov    rcx,r9
   1400073ee:	call   0x1400074b0
   1400073f3:	mov    DWORD PTR [rbp+0x10],0x25
   1400073fa:	lea    rdx,[rbp+0x10]
   1400073fe:	call   0x1400079d0
   140007403:	mov    r9,rax
   140007406:	lea    rcx,[rip+0x375c3]        # 0x14003e9d0
   14000740d:	call   0x140007720
   140007412:	mov    r8d,eax
   140007415:	lea    rdx,[rip+0x375b4]        # 0x14003e9d0
   14000741c:	mov    rcx,r9
   14000741f:	call   0x1400074b0
   140007424:	mov    DWORD PTR [rbp+0x10],0x26
   14000742b:	lea    rdx,[rbp+0x10]
   14000742f:	call   0x1400079d0
   140007434:	mov    r9,rax
   140007437:	lea    rcx,[rip+0x375b2]        # 0x14003e9f0
   14000743e:	call   0x140007720
   140007443:	mov    r8d,eax
   140007446:	lea    rdx,[rip+0x375a3]        # 0x14003e9f0
   14000744d:	mov    rcx,r9
   140007450:	call   0x1400074b0
   140007455:	nop
   140007456:	mov    rax,rbx
   140007459:	mov    rbx,QWORD PTR [rsp+0x50]
   14000745e:	add    rsp,0x30
   140007462:	pop    rbp
   140007463:	ret    
   140007464:	int3   
   140007465:	int3   
   140007466:	int3   
   140007467:	int3   
   140007468:	int3   
   140007469:	int3   
   14000746a:	int3   
   14000746b:	int3   
   14000746c:	mov    QWORD PTR [rsp+0x8],rbx
   140007471:	mov    QWORD PTR [rsp+0x10],rsi
   140007476:	push   rdi
   140007477:	sub    rsp,0x20
   14000747b:	mov    rdi,rcx
   14000747e:	mov    rcx,QWORD PTR [rcx]
   140007481:	sub    rcx,0x18
   140007485:	cmp    DWORD PTR [rcx+0x8],0x0
   140007489:	mov    rsi,QWORD PTR [rcx]
   14000748c:	jne    0x14001f98a
   140007492:	mov    rbx,QWORD PTR [rsp+0x30]
   140007497:	mov    rsi,QWORD PTR [rsp+0x38]
   14000749c:	add    rsp,0x20
   1400074a0:	pop    rdi
   1400074a1:	ret    
   1400074a2:	int3   
   1400074a3:	int3   
   1400074a4:	int3   
   1400074a5:	int3   
   1400074a6:	int3   
   1400074a7:	int3   
   1400074a8:	int3   
   1400074a9:	int3   
   1400074aa:	int3   
   1400074ab:	int3   
   1400074ac:	int3   
   1400074ad:	int3   
   1400074ae:	int3   
   1400074af:	int3   
   1400074b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400074b5:	mov    QWORD PTR [rsp+0x20],rsi
   1400074ba:	push   rdi
   1400074bb:	sub    rsp,0x20
   1400074bf:	movsxd rbx,r8d
   1400074c2:	mov    rsi,rdx
   1400074c5:	mov    rdi,rcx
   1400074c8:	test   r8d,r8d
   1400074cb:	je     0x14001f9c6
   1400074d1:	test   rdx,rdx
   1400074d4:	je     0x14001f9d1
   1400074da:	mov    rax,QWORD PTR [rcx]
   1400074dd:	mov    ecx,0x1
   1400074e2:	mov    QWORD PTR [rsp+0x30],rbp
   1400074e7:	mov    rbp,rdx
   1400074ea:	sub    rbp,rax
   1400074ed:	mov    QWORD PTR [rsp+0x38],r14
   1400074f2:	sar    rbp,1
   1400074f5:	sub    ecx,DWORD PTR [rax-0x8]
   1400074f8:	mov    r14d,DWORD PTR [rax-0x10]
   1400074fc:	mov    eax,DWORD PTR [rax-0xc]
   1400074ff:	sub    eax,ebx
   140007501:	or     ecx,eax
   140007503:	jge    0x14000750f
   140007505:	mov    edx,ebx
   140007507:	mov    rcx,rdi
   14000750a:	call   0x1400076e0
   14000750f:	mov    rcx,QWORD PTR [rdi]
   140007512:	cmp    rbp,r14
   140007515:	lea    r14,[rbx+rbx*1]
   140007519:	mov    r9,r14
   14000751c:	mov    rdx,r14
   14000751f:	jbe    0x14001f9dc
   140007525:	mov    r8,rsi
   140007528:	call   QWORD PTR [rip+0x36112]        # 0x14003d640
   14000752e:	mov    rbp,QWORD PTR [rsp+0x30]
   140007533:	test   ebx,ebx
   140007535:	js     0x140007561
   140007537:	mov    rax,QWORD PTR [rdi]
   14000753a:	cmp    ebx,DWORD PTR [rax-0xc]
   14000753d:	jg     0x140007561
   14000753f:	mov    DWORD PTR [rax-0x10],ebx
   140007542:	xor    ecx,ecx
   140007544:	mov    rax,QWORD PTR [rdi]
   140007547:	mov    WORD PTR [r14+rax*1],cx
   14000754c:	mov    r14,QWORD PTR [rsp+0x38]
   140007551:	mov    rbx,QWORD PTR [rsp+0x40]
   140007556:	mov    rsi,QWORD PTR [rsp+0x48]
   14000755b:	add    rsp,0x20
   14000755f:	pop    rdi
   140007560:	ret    
   140007561:	mov    ecx,0x80070057
   140007566:	call   0x1400152fc
   14000756b:	int3   
   14000756c:	int3   
   14000756d:	int3   
   14000756e:	int3   
   14000756f:	int3   
   140007570:	int3   
   140007571:	int3   
   140007572:	int3   
   140007573:	int3   
   140007574:	int3   
   140007575:	int3   
   140007576:	int3   
   140007577:	int3   
   140007578:	int3   
   140007579:	int3   
   14000757a:	int3   
   14000757b:	int3   
   14000757c:	int3   
   14000757d:	int3   
   14000757e:	int3   
   14000757f:	int3   
   140007580:	mov    QWORD PTR [rsp+0x10],rbx
   140007585:	mov    QWORD PTR [rsp+0x8],rcx
   14000758a:	push   rbp
   14000758b:	push   rsi
   14000758c:	push   rdi
   14000758d:	push   r12
   14000758f:	push   r13
   140007591:	push   r14
   140007593:	push   r15
   140007595:	sub    rsp,0x20
   140007599:	mov    r14,QWORD PTR [rcx]
   14000759c:	mov    ebx,edx
   14000759e:	mov    r13,rcx
   1400075a1:	mov    r15,QWORD PTR [r14-0x18]
   1400075a5:	mov    r12d,DWORD PTR [r14-0x10]
   1400075a9:	mov    rax,QWORD PTR [r15]
   1400075ac:	mov    rdi,QWORD PTR [rax+0x20]
   1400075b0:	lea    rax,[rip+0x879]        # 0x140007e30
   1400075b7:	cmp    rdi,rax
   1400075ba:	jne    0x14001f9ec
   1400075c0:	mov    rax,QWORD PTR [r15]
   1400075c3:	or     rbp,0xffffffffffffffff
   1400075c7:	mov    rdi,QWORD PTR [rax]
   1400075ca:	lea    rax,[rip+0x87f]        # 0x140007e50
   1400075d1:	cmp    rdi,rax
   1400075d4:	jne    0x14001fa25
   1400075da:	xor    esi,esi
   1400075dc:	test   ebx,ebx
   1400075de:	js     0x14000767e
   1400075e4:	mov    eax,0x7fffffff
   1400075e9:	sub    eax,ebx
   1400075eb:	cmp    eax,0x1
   1400075ee:	jl     0x14000767e
   1400075f4:	lea    eax,[rbx+0x1]
   1400075f7:	lea    edi,[rax+0x7]
   1400075fa:	and    edi,0xfffffff8
   1400075fd:	cmp    eax,edi
   1400075ff:	jg     0x14000767e
   140007601:	movsxd rcx,edi
   140007604:	test   edi,edi
   140007606:	je     0x14001fa02
   14000760c:	xor    edx,edx
   14000760e:	mov    rax,rbp
   140007611:	div    rcx
   140007614:	cmp    rax,0x2
   140007618:	jb     0x14000767e
   14000761a:	add    rcx,rcx
   14000761d:	cmp    rcx,0xffffffffffffffe7
   140007621:	ja     0x14000767e
   140007623:	mov    r13,QWORD PTR [r15+0x8]
   140007627:	lea    rdx,[rip+0x7ad2]        # 0x14000f100
   14000762e:	add    rcx,0x18
   140007632:	mov    QWORD PTR [rsp+0x70],rcx
   140007637:	mov    rax,QWORD PTR [r13+0x0]
   14000763b:	mov    rax,QWORD PTR [rax]
   14000763e:	mov    QWORD PTR [rsp+0x78],rax
   140007643:	cmp    rax,rdx
   140007646:	jne    0x14001fa0a
   14000764c:	mov    r8,rcx
   14000764f:	xor    edx,edx
   140007651:	mov    rcx,QWORD PTR [r13+0x8]
   140007655:	call   QWORD PTR [rip+0x35b7d]        # 0x14003d1d8
   14000765b:	mov    r13,QWORD PTR [rsp+0x60]
   140007660:	mov    rcx,rax
   140007663:	test   rax,rax
   140007666:	je     0x14000767e
   140007668:	mov    QWORD PTR [rax],r15
   14000766b:	mov    DWORD PTR [rax+0x10],0x1
   140007672:	lea    eax,[rdi-0x1]
   140007675:	mov    DWORD PTR [rcx+0x8],esi
   140007678:	mov    rsi,rcx
   14000767b:	mov    DWORD PTR [rcx+0xc],eax
   14000767e:	test   rsi,rsi
   140007681:	je     0x1400076d2
   140007683:	cmp    r12d,ebx
   140007686:	jge    0x14000768b
   140007688:	mov    ebx,r12d
   14000768b:	inc    ebx
   14000768d:	lea    r15,[rsi+0x18]
   140007691:	movsxd rdx,ebx
   140007694:	mov    r8,r14
   140007697:	add    rdx,rdx
   14000769a:	mov    rcx,r15
   14000769d:	mov    r9,rdx
   1400076a0:	call   QWORD PTR [rip+0x35f9a]        # 0x14003d640
   1400076a6:	mov    DWORD PTR [rsi+0x8],r12d
   1400076aa:	lock xadd DWORD PTR [r14-0x8],ebp
   1400076b0:	sub    ebp,0x1
   1400076b3:	jle    0x14001fa43
   1400076b9:	mov    QWORD PTR [r13+0x0],r15
   1400076bd:	mov    rbx,QWORD PTR [rsp+0x68]
   1400076c2:	add    rsp,0x20
   1400076c6:	pop    r15
   1400076c8:	pop    r14
   1400076ca:	pop    r13
   1400076cc:	pop    r12
   1400076ce:	pop    rdi
   1400076cf:	pop    rsi
   1400076d0:	pop    rbp
   1400076d1:	ret    
   1400076d2:	call   0x14002dd90
   1400076d7:	int3   
   1400076d8:	int3   
   1400076d9:	int3   
   1400076da:	int3   
   1400076db:	int3   
   1400076dc:	int3   
   1400076dd:	int3   
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	sub    rsp,0x28
   1400076e4:	mov    rax,QWORD PTR [rcx]
   1400076e7:	mov    r8d,edx
   1400076ea:	mov    edx,DWORD PTR [rax-0x10]
   1400076ed:	cmp    edx,r8d
   1400076f0:	jg     0x14000770d
   1400076f2:	cmp    DWORD PTR [rax-0x8],0x1
   1400076f6:	jle    0x14001fa66
   1400076fc:	mov    edx,r8d
   1400076ff:	add    rsp,0x28
   140007703:	jmp    0x140007580
   140007708:	add    rsp,0x28
   14000770c:	ret    
   14000770d:	mov    r8d,edx
   140007710:	jmp    0x1400076f2
   140007712:	int3   
   140007713:	int3   
   140007714:	int3   
   140007715:	int3   
   140007716:	int3   
   140007717:	int3   
   140007718:	int3   
   140007719:	int3   
   14000771a:	int3   
   14000771b:	int3   
   14000771c:	int3   
   14000771d:	int3   
   14000771e:	int3   
   14000771f:	int3   
   140007720:	test   rcx,rcx
   140007723:	je     0x14000773b
   140007725:	or     rax,0xffffffffffffffff
   140007729:	nop    DWORD PTR [rax+0x0]
   140007730:	inc    rax
   140007733:	cmp    WORD PTR [rcx+rax*2],0x0
   140007738:	jne    0x140007730
   14000773a:	ret    
   14000773b:	xor    eax,eax
   14000773d:	ret    
   14000773e:	int3   
   14000773f:	int3   
   140007740:	int3   
   140007741:	int3   
   140007742:	int3   
   140007743:	int3   
   140007744:	mov    rax,rsp
   140007747:	mov    DWORD PTR [rax+0x10],edx
   14000774a:	mov    QWORD PTR [rax+0x8],rcx
   14000774e:	push   rdi
   14000774f:	sub    rsp,0x30
   140007753:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000775b:	mov    QWORD PTR [rax+0x18],rbx
   14000775f:	mov    QWORD PTR [rax+0x20],rsi
   140007763:	mov    sil,r8b
   140007766:	mov    edi,edx
   140007768:	mov    rbx,rcx
   14000776b:	mov    rcx,QWORD PTR [rcx]
   14000776e:	test   rcx,rcx
   140007771:	jne    0x14001faa6
   140007777:	test   sil,sil
   14000777a:	je     0x1400077c2
   14000777c:	mov    rcx,rdi
   14000777f:	movabs rax,0x1fffffffffffffff
   140007789:	cmp    rdi,rax
   14000778c:	ja     0x1400077df
   14000778e:	mov    eax,0x8
   140007793:	mul    rcx
   140007796:	mov    rcx,0xffffffffffffffff
   14000779d:	cmovo  rax,rcx
   1400077a1:	mov    rcx,rax
   1400077a4:	call   0x140013dd4
   1400077a9:	mov    QWORD PTR [rbx],rax
   1400077ac:	mov    rcx,QWORD PTR [rbx]
   1400077af:	test   rcx,rcx
   1400077b2:	je     0x1400077df
   1400077b4:	mov    r8d,edi
   1400077b7:	shl    r8,0x3
   1400077bb:	xor    edx,edx
   1400077bd:	call   0x140014694
   1400077c2:	mov    DWORD PTR [rbx+0x10],edi
   1400077c5:	mov    rcx,rbx
   1400077c8:	call   0x140005ca8
   1400077cd:	mov    al,0x1
   1400077cf:	mov    rbx,QWORD PTR [rsp+0x50]
   1400077d4:	mov    rsi,QWORD PTR [rsp+0x58]
   1400077d9:	add    rsp,0x30
   1400077dd:	pop    rdi
   1400077de:	ret    
   1400077df:	xor    al,al
   1400077e1:	jmp    0x1400077cf
   1400077e3:	int3   
   1400077e4:	int3   
   1400077e5:	int3   
   1400077e6:	int3   
   1400077e7:	int3   
   1400077e8:	int3   
   1400077e9:	int3   
   1400077ea:	int3   
   1400077eb:	int3   
   1400077ec:	int3   
   1400077ed:	int3   
   1400077ee:	int3   
   1400077ef:	int3   
   1400077f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400077f5:	push   rdi
   1400077f6:	push   r14
   1400077f8:	push   r15
   1400077fa:	sub    rsp,0x40
   1400077fe:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140007807:	mov    QWORD PTR [rsp+0x68],rbx
   14000780c:	mov    QWORD PTR [rsp+0x70],rsi
   140007811:	mov    esi,r9d
   140007814:	mov    r15d,r8d
   140007817:	mov    rdi,rdx
   14000781a:	mov    rbx,QWORD PTR [rip+0x4765f]        # 0x14004ee80
   140007821:	test   rbx,rbx
   140007824:	je     0x1400078d8
   14000782a:	mov    QWORD PTR [rsp+0x20],rbx
   14000782f:	mov    rax,QWORD PTR [rbx+0x10]
   140007833:	mov    QWORD PTR [rip+0x47646],rax        # 0x14004ee80
   14000783a:	mov    QWORD PTR [rsp+0x30],rbx
   14000783f:	mov    eax,DWORD PTR [rdi]
   140007841:	mov    DWORD PTR [rbx],eax
   140007843:	lea    rdi,[rbx+0x8]
   140007847:	mov    QWORD PTR [rsp+0x60],rdi
   14000784c:	mov    rax,QWORD PTR [rip+0x475b5]        # 0x14004ee08
   140007853:	mov    r14,QWORD PTR [rax+0x18]
   140007857:	lea    rax,[rip+0x5e2]        # 0x140007e40
   14000785e:	cmp    r14,rax
   140007861:	jne    0x14001fae1
   140007867:	lock inc DWORD PTR [rip+0x475ba]        # 0x14004ee28
   14000786e:	lea    rax,[rip+0x475a3]        # 0x14004ee18
   140007875:	mov    rdi,QWORD PTR [rsp+0x60]
   14000787a:	add    rax,0x18
   14000787e:	mov    QWORD PTR [rdi],rax
   140007881:	mov    DWORD PTR [rbx+0x18],esi
   140007884:	inc    QWORD PTR [rip+0x475bd]        # 0x14004ee48
   14000788b:	lea    rdx,[r15*8+0x0]
   140007893:	mov    rax,QWORD PTR [rip+0x475a6]        # 0x14004ee40
   14000789a:	mov    rcx,QWORD PTR [rdx+rax*1]
   14000789e:	mov    QWORD PTR [rbx+0x10],rcx
   1400078a2:	mov    rax,QWORD PTR [rip+0x47597]        # 0x14004ee40
   1400078a9:	mov    QWORD PTR [rdx+rax*1],rbx
   1400078ad:	mov    rdx,QWORD PTR [rip+0x47594]        # 0x14004ee48
   1400078b4:	cmp    rdx,QWORD PTR [rip+0x475a5]        # 0x14004ee60
   1400078bb:	ja     0x140007987
   1400078c1:	mov    rax,rbx
   1400078c4:	mov    rbx,QWORD PTR [rsp+0x68]
   1400078c9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400078ce:	add    rsp,0x40
   1400078d2:	pop    r15
   1400078d4:	pop    r14
   1400078d6:	pop    rdi
   1400078d7:	ret    
   1400078d8:	mov    ecx,DWORD PTR [rip+0x47596]        # 0x14004ee74
   1400078de:	test   rcx,rcx
   1400078e1:	je     0x14001fac2
   1400078e7:	or     r8,0xffffffffffffffff
   1400078eb:	cmp    rcx,0xa
   1400078ef:	jne    0x1400079b3
   1400078f5:	movabs rax,0x1999999999999999
   1400078ff:	cmp    rax,0x20
   140007903:	jb     0x14001fad6
   140007909:	shl    rcx,0x5
   14000790d:	sub    r8,rcx
   140007910:	cmp    r8,0x8
   140007914:	jb     0x14001fad6
   14000791a:	add    rcx,0x8
   14000791e:	call   QWORD PTR [rip+0x35d2c]        # 0x14003d650
   140007924:	test   rax,rax
   140007927:	je     0x14001fad6
   14000792d:	mov    rcx,QWORD PTR [rip+0x47544]        # 0x14004ee78
   140007934:	mov    QWORD PTR [rax],rcx
   140007937:	mov    QWORD PTR [rip+0x4753a],rax        # 0x14004ee78
   14000793e:	mov    r8d,DWORD PTR [rip+0x4752f]        # 0x14004ee74
   140007945:	lea    edx,[r8-0x1]
   140007949:	shl    rdx,0x5
   14000794d:	add    rdx,0x8
   140007951:	add    rax,rdx
   140007954:	mov    rbx,QWORD PTR [rip+0x47525]        # 0x14004ee80
   14000795b:	sub    r8d,0x1
   14000795f:	js     0x140007979
   140007961:	mov    QWORD PTR [rax+0x10],rbx
   140007965:	mov    rbx,rax
   140007968:	mov    QWORD PTR [rip+0x47511],rax        # 0x14004ee80
   14000796f:	sub    rax,0x20
   140007973:	sub    r8d,0x1
   140007977:	jns    0x140007961
   140007979:	test   rbx,rbx
   14000797c:	jne    0x14000782a
   140007982:	jmp    0x14001facb
   140007987:	cmp    DWORD PTR [rip+0x474e2],0x0        # 0x14004ee70
   14000798e:	jne    0x1400078c1
   140007994:	lea    rcx,[rip+0x474a5]        # 0x14004ee40
   14000799b:	call   0x140007aac
   1400079a0:	mov    edx,eax
   1400079a2:	lea    rcx,[rip+0x47497]        # 0x14004ee40
   1400079a9:	call   0x140007b40
   1400079ae:	jmp    0x1400078c1
   1400079b3:	xor    edx,edx
   1400079b5:	mov    rax,r8
   1400079b8:	div    rcx
   1400079bb:	jmp    0x1400078ff
   1400079c0:	int3   
   1400079c1:	int3   
   1400079c2:	int3   
   1400079c3:	int3   
   1400079c4:	int3   
   1400079c5:	int3   
   1400079c6:	int3   
   1400079c7:	int3   
   1400079c8:	int3   
   1400079c9:	int3   
   1400079ca:	int3   
   1400079cb:	int3   
   1400079cc:	int3   
   1400079cd:	int3   
   1400079ce:	int3   
   1400079cf:	int3   
   1400079d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400079d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400079da:	push   rdi
   1400079db:	sub    rsp,0x20
   1400079df:	mov    r9d,DWORD PTR [rip+0x4746a]        # 0x14004ee50
   1400079e6:	mov    rsi,rdx
   1400079e9:	mov    edi,DWORD PTR [rdx]
   1400079eb:	cmp    r9d,0x11
   1400079ef:	jne    0x140007a64
   1400079f1:	mov    eax,0xf0f0f0f1
   1400079f6:	mov    ebx,edi
   1400079f8:	mul    edi
   1400079fa:	shr    edx,0x4
   1400079fd:	imul   eax,edx,0x11
   140007a00:	sub    ebx,eax
   140007a02:	mov    rcx,QWORD PTR [rip+0x47437]        # 0x14004ee40
   140007a09:	test   rcx,rcx
   140007a0c:	je     0x140007a49
   140007a0e:	mov    eax,ebx
   140007a10:	mov    rax,QWORD PTR [rcx+rax*8]
   140007a14:	test   rax,rax
   140007a17:	je     0x140007a27
   140007a19:	cmp    DWORD PTR [rax+0x18],edi
   140007a1c:	je     0x140007a6f
   140007a1e:	mov    rax,QWORD PTR [rax+0x10]
   140007a22:	test   rax,rax
   140007a25:	jne    0x140007a19
   140007a27:	mov    r9d,edi
   140007a2a:	mov    r8d,ebx
   140007a2d:	mov    rdx,rsi
   140007a30:	call   0x1400077f0
   140007a35:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a3a:	add    rax,0x8
   140007a3e:	mov    rsi,QWORD PTR [rsp+0x38]
   140007a43:	add    rsp,0x20
   140007a47:	pop    rdi
   140007a48:	ret    
   140007a49:	mov    r8b,0x1
   140007a4c:	lea    rcx,[rip+0x473ed]        # 0x14004ee40
   140007a53:	mov    edx,r9d
   140007a56:	call   0x140007744
   140007a5b:	test   al,al
   140007a5d:	jne    0x140007a27
   140007a5f:	jmp    0x14001fafc
   140007a64:	xor    edx,edx
   140007a66:	mov    eax,edi
   140007a68:	div    r9d
   140007a6b:	mov    ebx,edx
   140007a6d:	jmp    0x140007a02
   140007a6f:	cmp    DWORD PTR [rax],edi
   140007a71:	je     0x140007a35
   140007a73:	jmp    0x140007a1e
   140007a75:	int3   
   140007a76:	int3   
   140007a77:	int3   
   140007a78:	int3   
   140007a79:	int3   
   140007a7a:	int3   
   140007a7b:	int3   
   140007a7c:	rex push rbx
   140007a7e:	sub    rsp,0x20
   140007a82:	and    QWORD PTR [rcx+0x40],0x0
   140007a87:	mov    rbx,rcx
   140007a8a:	mov    rcx,QWORD PTR [rcx+0x38]
   140007a8e:	test   rcx,rcx
   140007a91:	jne    0x140007a99
   140007a93:	add    rsp,0x20
   140007a97:	pop    rbx
   140007a98:	ret    
   140007a99:	call   0x14000e0e8
   140007a9e:	and    QWORD PTR [rbx+0x38],0x0
   140007aa3:	jmp    0x140007a93
   140007aa5:	int3   
   140007aa6:	int3   
   140007aa7:	int3   
   140007aa8:	int3   
   140007aa9:	int3   
   140007aaa:	int3   
   140007aab:	int3   
   140007aac:	xorps  xmm1,xmm1
   140007aaf:	cvtsi2sd xmm1,rdx
   140007ab4:	test   rdx,rdx
   140007ab7:	jns    0x140007ac1
   140007ab9:	addsd  xmm1,QWORD PTR [rip+0x39e1f]        # 0x1400418e0
   140007ac1:	movss  xmm0,DWORD PTR [rcx+0x14]
   140007ac6:	xor    eax,eax
   140007ac8:	cvtps2pd xmm0,xmm0
   140007acb:	divsd  xmm1,xmm0
   140007acf:	movsd  xmm0,QWORD PTR [rip+0x39f11]        # 0x1400419e8
   140007ad7:	comisd xmm1,xmm0
   140007adb:	jb     0x140007af4
   140007add:	subsd  xmm1,xmm0
   140007ae1:	comisd xmm1,xmm0
   140007ae5:	jae    0x140007af4
   140007ae7:	movabs rcx,0x8000000000000000
   140007af1:	mov    rax,rcx
   140007af4:	cvttsd2si rcx,xmm1
   140007af9:	mov    r8d,0xffffffff
   140007aff:	lea    r9,[rip+0x39dea]        # 0x1400418f0
   140007b06:	add    rcx,rax
   140007b09:	xor    eax,eax
   140007b0b:	cmp    rcx,r8
   140007b0e:	ja     0x140007b2f
   140007b10:	cmp    ecx,0x11
   140007b13:	jbe    0x140007b22
   140007b15:	mov    rdx,r9
   140007b18:	inc    eax
   140007b1a:	lea    rdx,[rdx+0x4]
   140007b1e:	cmp    ecx,DWORD PTR [rdx]
   140007b20:	ja     0x140007b18
   140007b22:	cdqe   
   140007b24:	mov    eax,DWORD PTR [r9+rax*4]
   140007b28:	cmp    eax,r8d
   140007b2b:	cmove  eax,ecx
   140007b2e:	ret    
   140007b2f:	mov    ecx,r8d
   140007b32:	jmp    0x140007b15
   140007b34:	int3   
   140007b35:	int3   
   140007b36:	int3   
   140007b37:	int3   
   140007b38:	int3   
   140007b39:	int3   
   140007b3a:	int3   
   140007b3b:	int3   
   140007b3c:	int3   
   140007b3d:	int3   
   140007b3e:	int3   
   140007b3f:	int3   
   140007b40:	mov    DWORD PTR [rsp+0x10],edx
   140007b44:	mov    QWORD PTR [rsp+0x8],rcx
   140007b49:	push   rsi
   140007b4a:	push   rdi
   140007b4b:	push   r14
   140007b4d:	sub    rsp,0x30
   140007b51:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007b5a:	mov    QWORD PTR [rsp+0x68],rbx
   140007b5f:	mov    edi,edx
   140007b61:	mov    r14,rcx
   140007b64:	xor    ebx,ebx
   140007b66:	mov    QWORD PTR [rsp+0x60],rbx
   140007b6b:	test   edx,edx
   140007b6d:	je     0x14001fb08
   140007b73:	cmp    edi,DWORD PTR [r14+0x10]
   140007b77:	je     0x140007c3d
   140007b7d:	cmp    QWORD PTR [r14],rbx
   140007b80:	je     0x14001fb1c
   140007b86:	mov    ecx,edi
   140007b88:	mov    eax,0x8
   140007b8d:	mul    rcx
   140007b90:	mov    rcx,0xffffffffffffffff
   140007b97:	cmovo  rax,rcx
   140007b9b:	mov    rcx,rax
   140007b9e:	call   0x140013dd4
   140007ba3:	mov    rsi,rax
   140007ba6:	mov    QWORD PTR [rsp+0x60],rax
   140007bab:	test   rsi,rsi
   140007bae:	je     0x14001fb44
   140007bb4:	mov    r8d,edi
   140007bb7:	shl    r8,0x3
   140007bbb:	xor    edx,edx
   140007bbd:	mov    rcx,rsi
   140007bc0:	call   0x140014694
   140007bc5:	cmp    DWORD PTR [r14+0x10],0x0
   140007bca:	jbe    0x140007c26
   140007bcc:	nop    DWORD PTR [rax+0x0]
   140007bd0:	mov    eax,ebx
   140007bd2:	mov    rcx,QWORD PTR [r14]
   140007bd5:	mov    rcx,QWORD PTR [rcx+rax*8]
   140007bd9:	test   rcx,rcx
   140007bdc:	je     0x140007c1e
   140007bde:	mov    r8,QWORD PTR [rcx+0x10]
   140007be2:	cmp    edi,0x35
   140007be5:	jne    0x140007c4b
   140007be7:	mov    r9d,DWORD PTR [rcx+0x18]
   140007beb:	mov    eax,0x3521cfb3
   140007bf0:	mul    r9d
   140007bf3:	mov    eax,r9d
   140007bf6:	sub    eax,edx
   140007bf8:	shr    eax,1
   140007bfa:	add    eax,edx
   140007bfc:	shr    eax,0x5
   140007bff:	imul   eax,eax,0x35
   140007c02:	sub    r9d,eax
   140007c05:	mov    eax,r9d
   140007c08:	lea    rdx,[rsi+rax*8]
   140007c0c:	mov    rax,QWORD PTR [rdx]
   140007c0f:	mov    QWORD PTR [rcx+0x10],rax
   140007c13:	mov    QWORD PTR [rdx],rcx
   140007c16:	mov    rcx,r8
   140007c19:	test   r8,r8
   140007c1c:	jne    0x140007bde
   140007c1e:	inc    ebx
   140007c20:	cmp    ebx,DWORD PTR [r14+0x10]
   140007c24:	jb     0x140007bd0
   140007c26:	mov    rcx,QWORD PTR [r14]
   140007c29:	call   0x140013de0
   140007c2e:	mov    QWORD PTR [r14],rsi
   140007c31:	mov    DWORD PTR [r14+0x10],edi
   140007c35:	mov    rcx,r14
   140007c38:	call   0x140005ca8
   140007c3d:	mov    rbx,QWORD PTR [rsp+0x68]
   140007c42:	add    rsp,0x30
   140007c46:	pop    r14
   140007c48:	pop    rdi
   140007c49:	pop    rsi
   140007c4a:	ret    
   140007c4b:	xor    edx,edx
   140007c4d:	mov    eax,DWORD PTR [rcx+0x18]
   140007c50:	div    edi
   140007c52:	mov    r9d,edx
   140007c55:	jmp    0x140007c05
   140007c57:	int3   
   140007c58:	int3   
   140007c59:	int3   
   140007c5a:	int3   
   140007c5b:	int3   
   140007c5c:	int3   
   140007c5d:	int3   
   140007c5e:	int3   
   140007c5f:	int3   
   140007c60:	mov    rax,rsp
   140007c63:	push   rdi
   140007c64:	sub    rsp,0x40
   140007c68:	inc    DWORD PTR [rcx+0x30]
   140007c6b:	mov    rdi,rcx
   140007c6e:	cmp    QWORD PTR [rcx],0x0
   140007c72:	je     0x140007d90
   140007c78:	mov    QWORD PTR [rax+0x10],rbx
   140007c7c:	xor    ebx,ebx
   140007c7e:	mov    DWORD PTR [rsp+0x50],ebx
   140007c82:	cmp    DWORD PTR [rcx+0x10],ebx
   140007c85:	jbe    0x140007d8b
   140007c8b:	mov    QWORD PTR [rax+0x18],rbp
   140007c8f:	lea    rdx,[rip+0x743a]        # 0x14000f0d0
   140007c96:	mov    QWORD PTR [rax+0x20],rsi
   140007c9a:	mov    QWORD PTR [rax-0x10],r12
   140007c9e:	mov    QWORD PTR [rax-0x18],r13
   140007ca2:	mov    QWORD PTR [rax-0x20],r14
   140007ca6:	mov    QWORD PTR [rax-0x28],r15
   140007caa:	nop    WORD PTR [rax+rax*1+0x0]
   140007cb0:	mov    rax,QWORD PTR [rdi]
   140007cb3:	mov    rsi,QWORD PTR [rax+rbx*8]
   140007cb7:	test   rsi,rsi
   140007cba:	je     0x140007d5e
   140007cc0:	lea    rbx,[rip+0x119]        # 0x140007de0
   140007cc7:	mov    rbp,rsi
   140007cca:	lea    r12,[rsi+0x10]
   140007cce:	mov    rsi,QWORD PTR [rsi+0x10]
   140007cd2:	mov    r14,QWORD PTR [rbp+0x8]
   140007cd6:	sub    r14,0x18
   140007cda:	or     eax,0xffffffff
   140007cdd:	lock xadd DWORD PTR [r14+0x10],eax
   140007ce3:	sub    eax,0x1
   140007ce6:	jg     0x140007d1e
   140007ce8:	mov    r15,QWORD PTR [r14]
   140007ceb:	mov    rax,QWORD PTR [r15]
   140007cee:	mov    r13,QWORD PTR [rax+0x8]
   140007cf2:	cmp    r13,rbx
   140007cf5:	jne    0x14001fb50
   140007cfb:	mov    r15,QWORD PTR [r15+0x8]
   140007cff:	mov    rax,QWORD PTR [r15]
   140007d02:	mov    r13,QWORD PTR [rax+0x8]
   140007d06:	cmp    r13,rdx
   140007d09:	jne    0x14001fb50
   140007d0f:	mov    rcx,QWORD PTR [r15+0x8]
   140007d13:	mov    r8,r14
   140007d16:	xor    edx,edx
   140007d18:	call   QWORD PTR [rip+0x354c2]        # 0x14003d1e0
   140007d1e:	mov    rax,QWORD PTR [rdi+0x40]
   140007d22:	mov    QWORD PTR [r12],rax
   140007d26:	dec    QWORD PTR [rdi+0x8]
   140007d2a:	mov    rdx,QWORD PTR [rdi+0x8]
   140007d2e:	mov    QWORD PTR [rdi+0x40],rbp
   140007d32:	cmp    rdx,QWORD PTR [rdi+0x28]
   140007d36:	jb     0x14001fb68
   140007d3c:	cmp    QWORD PTR [rdi+0x8],0x0
   140007d41:	je     0x140007dc2
   140007d43:	lea    rdx,[rip+0x7386]        # 0x14000f0d0
   140007d4a:	test   rsi,rsi
   140007d4d:	jne    0x140007cc7
   140007d53:	mov    ebx,DWORD PTR [rsp+0x50]
   140007d57:	lea    rdx,[rip+0x7372]        # 0x14000f0d0
   140007d5e:	inc    ebx
   140007d60:	mov    DWORD PTR [rsp+0x50],ebx
   140007d64:	cmp    ebx,DWORD PTR [rdi+0x10]
   140007d67:	jb     0x140007cb0
   140007d6d:	mov    r15,QWORD PTR [rsp+0x20]
   140007d72:	mov    r14,QWORD PTR [rsp+0x28]
   140007d77:	mov    r13,QWORD PTR [rsp+0x30]
   140007d7c:	mov    r12,QWORD PTR [rsp+0x38]
   140007d81:	mov    rsi,QWORD PTR [rsp+0x68]
   140007d86:	mov    rbp,QWORD PTR [rsp+0x60]
   140007d8b:	mov    rbx,QWORD PTR [rsp+0x58]
   140007d90:	mov    rcx,QWORD PTR [rdi]
   140007d93:	call   0x140013de0
   140007d98:	cmp    DWORD PTR [rdi+0x30],0x0
   140007d9c:	mov    QWORD PTR [rdi],0x0
   140007da3:	mov    QWORD PTR [rdi+0x8],0x0
   140007dab:	je     0x14001fb8a
   140007db1:	mov    rcx,rdi
   140007db4:	call   0x140007a7c
   140007db9:	dec    DWORD PTR [rdi+0x30]
   140007dbc:	add    rsp,0x40
   140007dc0:	pop    rdi
   140007dc1:	ret    
   140007dc2:	mov    rcx,rdi
   140007dc5:	call   0x140007a7c
   140007dca:	jmp    0x140007d43
   140007dcf:	int3   
   140007dd0:	int3   
   140007dd1:	int3   
   140007dd2:	int3   
   140007dd3:	int3   
   140007dd4:	int3   
   140007dd5:	int3   
   140007dd6:	int3   
   140007dd7:	int3   
   140007dd8:	int3   
   140007dd9:	int3   
   140007dda:	int3   
   140007ddb:	int3   
   140007ddc:	int3   
   140007ddd:	int3   
   140007dde:	int3   
   140007ddf:	int3   
   140007de0:	mov    QWORD PTR [rsp+0x8],rbx
   140007de5:	mov    QWORD PTR [rsp+0x10],rsi
   140007dea:	push   rdi
   140007deb:	sub    rsp,0x20
   140007def:	mov    rbx,QWORD PTR [rcx+0x8]
   140007df3:	mov    rdi,rdx
   140007df6:	mov    rax,QWORD PTR [rbx]
   140007df9:	mov    rsi,QWORD PTR [rax+0x8]
   140007dfd:	lea    rax,[rip+0x72cc]        # 0x14000f0d0
   140007e04:	cmp    rsi,rax
   140007e07:	jne    0x14001fba8
   140007e0d:	mov    rcx,rbx
   140007e10:	call   0x14000f0d0
   140007e15:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e1a:	mov    rsi,QWORD PTR [rsp+0x38]
   140007e1f:	add    rsp,0x20
   140007e23:	pop    rdi
   140007e24:	ret    
   140007e25:	int3   
   140007e26:	int3   
   140007e27:	int3   
   140007e28:	int3   
   140007e29:	int3   
   140007e2a:	int3   
   140007e2b:	int3   
   140007e2c:	int3   
   140007e2d:	int3   
   140007e2e:	int3   
   140007e2f:	int3   
   140007e30:	mov    rax,rcx
   140007e33:	ret    
   140007e34:	int3   
   140007e35:	int3   
   140007e36:	int3   
   140007e37:	int3   
   140007e38:	int3   
   140007e39:	int3   
   140007e3a:	int3   
   140007e3b:	int3   
   140007e3c:	int3   
   140007e3d:	int3   
   140007e3e:	int3   
   140007e3f:	int3   
   140007e40:	lock inc DWORD PTR [rcx+0x20]
   140007e44:	lea    rax,[rcx+0x10]
   140007e48:	ret    
   140007e49:	int3   
   140007e4a:	int3   
   140007e4b:	int3   
   140007e4c:	int3   
   140007e4d:	int3   
   140007e4e:	int3   
   140007e4f:	int3   
   140007e50:	rex push rdi
   140007e52:	sub    rsp,0x20
   140007e56:	mov    rdi,rcx
   140007e59:	test   edx,edx
   140007e5b:	js     0x140007f2c
   140007e61:	mov    eax,0x7fffffff
   140007e66:	sub    eax,edx
   140007e68:	cmp    eax,0x1
   140007e6b:	jl     0x140007f2c
   140007e71:	inc    edx
   140007e73:	mov    QWORD PTR [rsp+0x30],rbx
   140007e78:	lea    ebx,[rdx+0x7]
   140007e7b:	and    ebx,0xfffffff8
   140007e7e:	cmp    edx,ebx
   140007e80:	jg     0x140007f34
   140007e86:	movsxd r8,r8d
   140007e89:	movsxd rcx,ebx
   140007e8c:	test   ebx,ebx
   140007e8e:	je     0x140007f30
   140007e94:	xor    edx,edx
   140007e96:	or     rax,0xffffffffffffffff
   140007e9a:	div    rcx
   140007e9d:	cmp    rax,r8
   140007ea0:	jb     0x140007f34
   140007ea6:	imul   rcx,r8
   140007eaa:	cmp    rcx,0xffffffffffffffe7
   140007eae:	ja     0x140007f34
   140007eb4:	mov    QWORD PTR [rsp+0x38],rbp
   140007eb9:	mov    QWORD PTR [rsp+0x40],rsi
   140007ebe:	mov    rsi,QWORD PTR [rdi+0x8]
   140007ec2:	mov    QWORD PTR [rsp+0x48],r14
   140007ec7:	lea    r14,[rcx+0x18]
   140007ecb:	mov    rax,QWORD PTR [rsi]
   140007ece:	mov    rbp,QWORD PTR [rax]
   140007ed1:	lea    rax,[rip+0x7228]        # 0x14000f100
   140007ed8:	cmp    rbp,rax
   140007edb:	jne    0x14001fbc0
   140007ee1:	mov    rcx,QWORD PTR [rsi+0x8]
   140007ee5:	mov    r8,r14
   140007ee8:	xor    edx,edx
   140007eea:	call   QWORD PTR [rip+0x352e8]        # 0x14003d1d8
   140007ef0:	mov    r14,QWORD PTR [rsp+0x48]
   140007ef5:	mov    rcx,rax
   140007ef8:	mov    rsi,QWORD PTR [rsp+0x40]
   140007efd:	mov    rbp,QWORD PTR [rsp+0x38]
   140007f02:	test   rax,rax
   140007f05:	je     0x140007f34
   140007f07:	mov    QWORD PTR [rax],rdi
   140007f0a:	mov    DWORD PTR [rax+0x10],0x1
   140007f11:	lea    eax,[rbx-0x1]
   140007f14:	mov    DWORD PTR [rcx+0xc],eax
   140007f17:	mov    rax,rcx
   140007f1a:	mov    DWORD PTR [rcx+0x8],0x0
   140007f21:	mov    rbx,QWORD PTR [rsp+0x30]
   140007f26:	add    rsp,0x20
   140007f2a:	pop    rdi
   140007f2b:	ret    
   140007f2c:	xor    eax,eax
   140007f2e:	jmp    0x140007f26
   140007f30:	xor    ecx,ecx
   140007f32:	jmp    0x140007eb4
   140007f34:	xor    eax,eax
   140007f36:	jmp    0x140007f21
   140007f38:	int3   
   140007f39:	int3   
   140007f3a:	int3   
   140007f3b:	int3   
   140007f3c:	int3   
   140007f3d:	int3   
   140007f3e:	int3   
   140007f3f:	int3   
   140007f40:	mov    QWORD PTR [rsp+0x10],rsi
   140007f45:	push   rdi
   140007f46:	sub    rsp,0x20
   140007f4a:	movzx  eax,BYTE PTR [rcx+0x84]
   140007f51:	mov    rsi,rdx
   140007f54:	mov    rdi,rcx
   140007f57:	and    al,0x10
   140007f59:	jne    0x14001fbd8
   140007f5f:	test   al,al
   140007f61:	jne    0x140007f70
   140007f63:	test   BYTE PTR [rdx+0x84],0x10
   140007f6a:	jne    0x140007ffb
   140007f70:	movzx  eax,BYTE PTR [rcx+0x90]
   140007f77:	test   al,al
   140007f79:	je     0x140007ff2
   140007f7b:	cmp    BYTE PTR [rdx+0x90],0x0
   140007f82:	je     0x14000800b
   140007f88:	test   al,al
   140007f8a:	je     0x140007ff2
   140007f8c:	mov    rax,QWORD PTR [rcx]
   140007f8f:	mov    QWORD PTR [rsp+0x30],rbx
   140007f94:	mov    rbx,QWORD PTR [rax+0x20]
   140007f98:	mov    rcx,rbx
   140007f9b:	call   QWORD PTR [rip+0x35787]        # 0x14003d728
   140007fa1:	mov    rcx,rdi
   140007fa4:	call   rbx
   140007fa6:	test   al,al
   140007fa8:	jne    0x14001fbea
   140007fae:	mov    rax,QWORD PTR [rdi]
   140007fb1:	mov    rbx,QWORD PTR [rax+0x20]
   140007fb5:	mov    rcx,rbx
   140007fb8:	call   QWORD PTR [rip+0x3576a]        # 0x14003d728
   140007fbe:	mov    rcx,rdi
   140007fc1:	call   rbx
   140007fc3:	test   al,al
   140007fc5:	jne    0x140007fe0
   140007fc7:	mov    rax,QWORD PTR [rsi]
   140007fca:	mov    rbx,QWORD PTR [rax+0x20]
   140007fce:	mov    rcx,rbx
   140007fd1:	call   QWORD PTR [rip+0x35751]        # 0x14003d728
   140007fd7:	mov    rcx,rsi
   140007fda:	call   rbx
   140007fdc:	test   al,al
   140007fde:	jne    0x140008010
   140007fe0:	xor    eax,eax
   140007fe2:	mov    rbx,QWORD PTR [rsp+0x30]
   140007fe7:	mov    rsi,QWORD PTR [rsp+0x38]
   140007fec:	add    rsp,0x20
   140007ff0:	pop    rdi
   140007ff1:	ret    
   140007ff2:	cmp    BYTE PTR [rdx+0x90],0x0
   140007ff9:	je     0x140007f8c
   140007ffb:	mov    eax,0x1
   140008000:	mov    rsi,QWORD PTR [rsp+0x38]
   140008005:	add    rsp,0x20
   140008009:	pop    rdi
   14000800a:	ret    
   14000800b:	or     eax,0xffffffff
   14000800e:	jmp    0x140007fe7
   140008010:	mov    eax,0x1
   140008015:	jmp    0x140007fe2
   140008017:	int3   
   140008018:	int3   
   140008019:	int3   
   14000801a:	int3   
   14000801b:	int3   
   14000801c:	int3   
   14000801d:	int3   
   14000801e:	int3   
   14000801f:	int3   
   140008020:	or     eax,0xffffffff
   140008023:	lock xadd DWORD PTR [rcx+0xc],eax
   140008028:	dec    eax
   14000802a:	ret    
   14000802b:	int3   
   14000802c:	int3   
   14000802d:	int3   
   14000802e:	int3   
   14000802f:	int3   
   140008030:	int3   
   140008031:	int3   
   140008032:	int3   
   140008033:	int3   
   140008034:	rex push rbx
   140008036:	sub    rsp,0x20
   14000803a:	xor    edx,edx
   14000803c:	mov    rbx,rcx
   14000803f:	call   0x14000beec
   140008044:	mov    rcx,rbx
   140008047:	call   0x14000c854
   14000804c:	call   0x14000bddc
   140008051:	cmp    BYTE PTR [rbx+0x62],0x0
   140008055:	je     0x14000805d
   140008057:	call   QWORD PTR [rip+0x4b0a3]        # 0x140053100
   14000805d:	mov    rcx,rbx
   140008060:	add    rsp,0x20
   140008064:	pop    rbx
   140008065:	jmp    0x14000c854
   14000806a:	int3   
   14000806b:	int3   
   14000806c:	int3   
   14000806d:	int3   
   14000806e:	int3   
   14000806f:	int3   
   140008070:	sub    rsp,0x28
   140008074:	call   0x14000bd04
   140008079:	lea    rax,[rip+0x36270]        # 0x14003e2f0
   140008080:	mov    QWORD PTR [rip+0x46b39],rax        # 0x14004ebc0
   140008087:	lea    rax,[rip+0x46b32]        # 0x14004ebc0
   14000808e:	add    rsp,0x28
   140008092:	ret    
   140008093:	int3   
   140008094:	int3   
   140008095:	int3   
   140008096:	int3   
   140008097:	int3   
   140008098:	int3   
   140008099:	int3   
   14000809a:	int3   
   14000809b:	int3   
   14000809c:	int3   
   14000809d:	int3   
   14000809e:	int3   
   14000809f:	int3   
   1400080a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400080a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400080aa:	mov    QWORD PTR [rsp+0x18],rdi
   1400080af:	push   rbp
   1400080b0:	push   r12
   1400080b2:	push   r13
   1400080b4:	push   r14
   1400080b6:	push   r15
   1400080b8:	lea    rbp,[rsp-0x1940]
   1400080c0:	mov    eax,0x1a40
   1400080c5:	call   0x140015740
   1400080ca:	sub    rsp,rax
   1400080cd:	mov    rax,QWORD PTR [rip+0x45f3c]        # 0x14004e010
   1400080d4:	xor    rax,rsp
   1400080d7:	mov    QWORD PTR [rbp+0x1930],rax
   1400080de:	xor    edx,edx
   1400080e0:	lea    rcx,[rip+0x373e1]        # 0x14003f4c8
   1400080e7:	call   QWORD PTR [rip+0x34f13]        # 0x14003d000
   1400080ed:	call   QWORD PTR [rip+0x34f65]        # 0x14003d058
   1400080f3:	xor    r14d,r14d
   1400080f6:	lea    rcx,[rbp+0x12d0]
   1400080fd:	mov    DWORD PTR [rbp+0x24c],r14d
   140008104:	call   0x14000e190
   140008109:	cmp    BYTE PTR [rip+0x46a6b],r14b        # 0x14004eb7b
   140008110:	lea    ebx,[r14+0x1]
   140008114:	mov    r13d,0x80004005
   14000811a:	jne    0x14000b083
   140008120:	mov    QWORD PTR [rbp+0x3f0],r14
   140008127:	mov    DWORD PTR [rbp+0x3c8],r14d
   14000812e:	mov    DWORD PTR [rbp+0x238],r14d
   140008135:	mov    DWORD PTR [rbp+0x170],r14d
   14000813c:	mov    QWORD PTR [rbp+0x240],r14
   140008143:	mov    DWORD PTR [rbp+0x8c],r14d
   14000814a:	xor    eax,eax
   14000814c:	lock cmpxchg DWORD PTR [rip+0x46fec],ebx        # 0x14004f140
   140008154:	jne    0x14000814a
   140008156:	mov    eax,DWORD PTR [rip+0x469ec]        # 0x14004eb48
   14000815c:	lea    r15,[rip+0x46fed]        # 0x14004f150
   140008163:	lea    rsi,[rip+0x45eb6]        # 0x14004e020
   14000816a:	mov    r12d,0x60
   140008170:	test   eax,eax
   140008172:	jne    0x14000882f
   140008178:	mov    ecx,0x338
   14000817d:	mov    DWORD PTR [rbp-0x80],r14d
   140008181:	mov    DWORD PTR [rbp-0x60],r14d
   140008185:	mov    QWORD PTR [rbp+0x2f0],r14
   14000818c:	mov    QWORD PTR [rbp+0x600],r14
   140008193:	call   0x14000f134
   140008198:	mov    r13,rax
   14000819b:	test   rax,rax
   14000819e:	je     0x14001fdf2
   1400081a4:	mov    r15d,r14d
   1400081a7:	mov    DWORD PTR [rbp+0x30],r14d
   1400081ab:	mov    r11d,r14d
   1400081ae:	mov    DWORD PTR [rbp+0x4c],r14d
   1400081b2:	mov    edi,r14d
   1400081b5:	lea    rbx,[rax+0x7]
   1400081b9:	mov    r14d,0x67
   1400081bf:	lea    rsi,[rip+0x35d1c]        # 0x14003dee2
   1400081c6:	or     r12d,0xffffffff
   1400081ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400081d0:	movzx  eax,BYTE PTR [rsi-0x1]
   1400081d4:	movzx  r10d,BYTE PTR [rsi-0x2]
   1400081d9:	movzx  r9d,BYTE PTR [rsi+0x2]
   1400081de:	lea    rsi,[rsi+0x8]
   1400081e2:	shl    r10d,0x8
   1400081e6:	or     r10d,eax
   1400081e9:	shl    r9d,0x8
   1400081ed:	movzx  eax,BYTE PTR [rsi-0x8]
   1400081f1:	shl    r10d,0x8
   1400081f5:	or     r10d,eax
   1400081f8:	movzx  eax,BYTE PTR [rsi-0x7]
   1400081fc:	shl    r10d,0x8
   140008200:	or     r10d,eax
   140008203:	movzx  eax,BYTE PTR [rsi-0x5]
   140008207:	or     r9d,eax
   14000820a:	xor    edi,r10d
   14000820d:	movzx  eax,BYTE PTR [rsi-0x4]
   140008211:	shl    r9d,0x8
   140008215:	or     r9d,eax
   140008218:	movzx  eax,BYTE PTR [rsi-0x3]
   14000821c:	shl    r9d,0x8
   140008220:	or     r9d,eax
   140008223:	xor    r11d,r9d
   140008226:	xor    r11d,edi
   140008229:	xor    r11d,0x58830298
   140008230:	lea    eax,[r11+0x7b1e05f8]
   140008237:	rol    eax,0x5
   14000823a:	imul   ecx,eax,0xf890
   140008240:	mov    eax,r11d
   140008243:	rol    eax,0xa
   140008246:	add    ecx,eax
   140008248:	xor    edi,ecx
   14000824a:	lea    eax,[rdi-0x239d0770]
   140008250:	ror    eax,0x9
   140008253:	imul   ecx,eax,0x84e1
   140008259:	mov    eax,edi
   14000825b:	rol    eax,0x2
   14000825e:	sub    ecx,eax
   140008260:	xor    r11d,ecx
   140008263:	lea    eax,[r11-0xf890]
   14000826a:	imul   ecx,eax,0xfa08
   140008270:	mov    eax,r11d
   140008273:	shr    eax,0xd
   140008276:	sub    ecx,eax
   140008278:	xor    edi,ecx
   14000827a:	mov    eax,edi
   14000827c:	xor    eax,0x84e1
   140008281:	rol    eax,0x6
   140008284:	imul   ecx,eax,0xdc62
   14000828a:	mov    eax,edi
   14000828c:	rol    eax,0x2
   14000828f:	sub    ecx,eax
   140008291:	mov    eax,0xdc62f890
   140008296:	xor    r11d,ecx
   140008299:	mov    ecx,r11d
   14000829c:	xor    ecx,0x84e1fa08
   1400082a2:	sub    eax,ecx
   1400082a4:	xor    edi,eax
   1400082a6:	mov    eax,edi
   1400082a8:	mov    edx,edi
   1400082aa:	xor    eax,0xf890
   1400082af:	ror    edx,0x6
   1400082b2:	imul   ecx,eax,0x84e1
   1400082b8:	xor    edx,ecx
   1400082ba:	xor    r11d,edx
   1400082bd:	lea    eax,[r11-0x239d0770]
   1400082c4:	ror    eax,0xf
   1400082c7:	imul   ecx,eax,0xfa08
   1400082cd:	mov    eax,r11d
   1400082d0:	rol    eax,0x2
   1400082d3:	add    ecx,eax
   1400082d5:	xor    edi,ecx
   1400082d7:	lea    eax,[rdi+0x7b1e05f8]
   1400082dd:	ror    eax,0xe
   1400082e0:	imul   ecx,eax,0xdc62
   1400082e6:	mov    eax,edi
   1400082e8:	rol    eax,0x8
   1400082eb:	sub    ecx,eax
   1400082ed:	xor    r11d,ecx
   1400082f0:	mov    eax,r11d
   1400082f3:	xor    eax,0x84e1fa08
   1400082f8:	ror    eax,0xc
   1400082fb:	imul   ecx,eax,0xf890
   140008301:	mov    eax,r11d
   140008304:	ror    eax,0xa
   140008307:	xor    ecx,eax
   140008309:	xor    edi,ecx
   14000830b:	mov    eax,edi
   14000830d:	xor    eax,0xdc62
   140008312:	imul   ecx,eax,0x84e1
   140008318:	mov    eax,edi
   14000831a:	shr    eax,0xa
   14000831d:	xor    ecx,eax
   14000831f:	xor    r11d,ecx
   140008322:	mov    eax,r11d
   140008325:	mov    r8d,r11d
   140008328:	not    eax
   14000832a:	ror    eax,0x5
   14000832d:	imul   eax,eax,0xdc62
   140008333:	sub    eax,0x28c168f0
   140008338:	xor    edi,eax
   14000833a:	xor    r8d,edi
   14000833d:	xor    r8d,0x58830298
   140008344:	lea    eax,[r8-0x7b1e05f8]
   14000834b:	rol    eax,0xb
   14000834e:	imul   ecx,eax,0xdc62
   140008354:	mov    eax,r8d
   140008357:	rol    eax,0xd
   14000835a:	add    ecx,eax
   14000835c:	xor    r11d,ecx
   14000835f:	mov    eax,r11d
   140008362:	xor    eax,0x84e1fa08
   140008367:	ror    eax,0x5
   14000836a:	imul   ecx,eax,0xf890
   140008370:	mov    eax,r11d
   140008373:	ror    eax,0xc
   140008376:	xor    ecx,eax
   140008378:	xor    r8d,ecx
   14000837b:	lea    eax,[r8-0xf890]
   140008382:	imul   ecx,eax,0x84e1
   140008388:	mov    eax,r8d
   14000838b:	shr    eax,0x9
   14000838e:	sub    ecx,eax
   140008390:	xor    r11d,ecx
   140008393:	lea    eax,[r11+0x239c0d68]
   14000839a:	xor    r8d,eax
   14000839d:	lea    edi,[r8-0xdc62]
   1400083a4:	xor    edi,r11d
   1400083a7:	xor    edi,0x84e1fa08
   1400083ad:	lea    eax,[rdi+0x7b1e05f8]
   1400083b3:	ror    eax,0x4
   1400083b6:	imul   ecx,eax,0xf890
   1400083bc:	mov    eax,edi
   1400083be:	ror    eax,0xb
   1400083c1:	xor    ecx,eax
   1400083c3:	mov    eax,0xdc62f890
   1400083c8:	xor    r8d,ecx
   1400083cb:	sub    eax,r8d
   1400083ce:	ror    eax,0x7
   1400083d1:	imul   ecx,eax,0x84e1
   1400083d7:	mov    eax,r8d
   1400083da:	ror    eax,0x3
   1400083dd:	add    ecx,eax
   1400083df:	xor    edi,ecx
   1400083e1:	mov    eax,edi
   1400083e3:	xor    eax,0xdc62f890
   1400083e8:	rol    eax,1
   1400083ea:	imul   ecx,eax,0xfa08
   1400083f0:	mov    eax,edi
   1400083f2:	ror    eax,0x8
   1400083f5:	add    ecx,eax
   1400083f7:	xor    r8d,ecx
   1400083fa:	mov    eax,r8d
   1400083fd:	mov    edx,r8d
   140008400:	xor    eax,0xf890
   140008405:	ror    edx,1
   140008407:	imul   ecx,eax,0xdc62
   14000840d:	add    edx,ecx
   14000840f:	xor    edi,edx
   140008411:	mov    eax,edi
   140008413:	xor    eax,0xfa08
   140008418:	rol    eax,1
   14000841a:	imul   ecx,eax,0xf890
   140008420:	lea    rbx,[rbx+0x8]
   140008424:	mov    eax,edi
   140008426:	rol    eax,0x8
   140008429:	xor    ecx,eax
   14000842b:	mov    eax,0x84e1fa08
   140008430:	xor    r8d,ecx
   140008433:	mov    ecx,r8d
   140008436:	xor    ecx,0xdc62f890
   14000843c:	sub    eax,ecx
   14000843e:	xor    edi,eax
   140008440:	lea    eax,[rdi+0x239d0770]
   140008446:	ror    eax,0x3
   140008449:	imul   ecx,eax,0xfa08
   14000844f:	mov    eax,edi
   140008451:	ror    eax,0x2
   140008454:	xor    edi,r12d
   140008457:	mov    DWORD PTR [rbp+0x30],edi
   14000845a:	mov    r12d,r9d
   14000845d:	add    ecx,eax
   14000845f:	xor    ecx,r15d
   140008462:	mov    r15d,r10d
   140008465:	xor    r8d,ecx
   140008468:	mov    DWORD PTR [rbp+0x4c],r8d
   14000846c:	mov    BYTE PTR [rbx-0xc],r8b
   140008470:	movzx  eax,BYTE PTR [rbp+0x30]
   140008474:	ror    DWORD PTR [rbp+0x4c],0x8
   140008478:	mov    BYTE PTR [rbx-0x8],al
   14000847b:	ror    DWORD PTR [rbp+0x30],0x8
   14000847f:	movzx  eax,BYTE PTR [rbp+0x4c]
   140008483:	mov    BYTE PTR [rbx-0xd],al
   140008486:	movzx  eax,BYTE PTR [rbp+0x30]
   14000848a:	ror    DWORD PTR [rbp+0x4c],0x8
   14000848e:	mov    BYTE PTR [rbx-0x9],al
   140008491:	ror    DWORD PTR [rbp+0x30],0x8
   140008495:	movzx  eax,BYTE PTR [rbp+0x4c]
   140008499:	mov    BYTE PTR [rbx-0xe],al
   14000849c:	ror    DWORD PTR [rbp+0x4c],0x8
   1400084a0:	movzx  eax,BYTE PTR [rbp+0x30]
   1400084a4:	mov    BYTE PTR [rbx-0xa],al
   1400084a7:	ror    DWORD PTR [rbp+0x30],0x8
   1400084ab:	movzx  eax,BYTE PTR [rbp+0x4c]
   1400084af:	mov    BYTE PTR [rbx-0xf],al
   1400084b2:	movzx  eax,BYTE PTR [rbp+0x30]
   1400084b6:	mov    BYTE PTR [rbx-0xb],al
   1400084b9:	mov    edi,DWORD PTR [rbp+0x4c]
   1400084bc:	mov    r11d,DWORD PTR [rbp+0x30]
   1400084c0:	ror    edi,0x8
   1400084c3:	ror    r11d,0x8
   1400084c7:	mov    DWORD PTR [rbp+0x4c],edi
   1400084ca:	mov    DWORD PTR [rbp+0x30],r11d
   1400084ce:	sub    r14,0x1
   1400084d2:	jne    0x1400081d0
   1400084d8:	xorps  xmm2,xmm2
   1400084db:	mov    rax,r14
   1400084de:	movdqa xmm1,xmm2
   1400084e2:	movdqu xmm0,XMMWORD PTR [rax+r13*1]
   1400084e8:	pxor   xmm0,xmm2
   1400084ec:	movdqa xmm2,xmm0
   1400084f0:	movdqu xmm0,XMMWORD PTR [rax+r13*1+0x10]
   1400084f7:	add    rax,0x20
   1400084fb:	pxor   xmm0,xmm1
   1400084ff:	movdqa xmm1,xmm0
   140008503:	cmp    rax,0x320
   140008509:	jb     0x1400084e2
   14000850b:	pxor   xmm1,xmm2
   14000850f:	movdqa xmm0,xmm1
   140008513:	psrldq xmm0,0x8
   140008518:	pxor   xmm1,xmm0
   14000851c:	movdqa xmm0,xmm1
   140008520:	psrldq xmm0,0x4
   140008525:	pxor   xmm1,xmm0
   140008529:	movdqa xmm0,xmm1
   14000852d:	psrldq xmm0,0x2
   140008532:	pxor   xmm1,xmm0
   140008536:	movdqa xmm0,xmm1
   14000853a:	psrldq xmm0,0x1
   14000853f:	pxor   xmm1,xmm0
   140008543:	movd   ecx,xmm1
   140008547:	cmp    rax,0x338
   14000854d:	jae    0x14000855e
   14000854f:	xor    cl,BYTE PTR [rax+r13*1]
   140008553:	inc    rax
   140008556:	cmp    rax,0x338
   14000855c:	jb     0x14000854f
   14000855e:	movzx  eax,cl
   140008561:	cmp    rax,QWORD PTR [rip+0x35cb0]        # 0x14003e218
   140008568:	jne    0x14001fdd6
   14000856e:	mov    r12d,0x60
   140008574:	mov    QWORD PTR [rbp+0x2f0],r13
   14000857b:	lea    r15,[rip+0x46bce]        # 0x14004f150
   140008582:	mov    QWORD PTR [rbp+0x600],0x338
   14000858d:	mov    r8d,r12d
   140008590:	mov    BYTE PTR [r13+0x337],r14b
   140008597:	mov    rcx,r15
   14000859a:	xor    edx,edx
   14000859c:	call   0x140014694
   1400085a1:	cmp    BYTE PTR [r13+0x0],r14b
   1400085a5:	je     0x14001fe13
   1400085ab:	mov    esi,r14d
   1400085ae:	mov    rdx,r13
   1400085b1:	or     rax,0xffffffffffffffff
   1400085b5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400085c0:	cmp    WORD PTR [r13+rax*2+0x2],0x0
   1400085c7:	lea    rax,[rax+0x1]
   1400085cb:	jne    0x1400085c0
   1400085cd:	lea    r13,[r13+rax*2+0x0]
   1400085d2:	mov    eax,esi
   1400085d4:	lea    rcx,[rax+rax*2]
   1400085d8:	lea    r14,[r15+rcx*8]
   1400085dc:	xor    ecx,ecx
   1400085de:	mov    r8,r14
   1400085e1:	call   QWORD PTR [rip+0x34c59]        # 0x14003d240
   1400085e7:	test   eax,eax
   1400085e9:	je     0x14001fdc5
   1400085ef:	mov    rax,QWORD PTR [r14]
   1400085f2:	xor    r9d,r9d
   1400085f5:	mov    ecx,0x5a4d
   1400085fa:	mov    edx,r9d
   1400085fd:	mov    DWORD PTR [rsp+0x68],edx
   140008601:	cmp    WORD PTR [rax],cx
   140008604:	jne    0x14001fc10
   14000860a:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000860e:	cmp    ecx,0x10000000
   140008614:	jae    0x14001fc1e
   14000861a:	add    rcx,QWORD PTR [r14]
   14000861d:	cmp    rcx,QWORD PTR [r14]
   140008620:	jb     0x14001fc2c
   140008626:	cmp    DWORD PTR [rcx],0x4550
   14000862c:	jne    0x14001fc3a
   140008632:	movzx  eax,WORD PTR [rcx+0x18]
   140008636:	mov    edi,0x10b
   14000863b:	sub    ax,di
   14000863e:	mov    edi,0xfeff
   140008643:	test   di,ax
   140008646:	jne    0x14001fc48
   14000864c:	mov    rax,QWORD PTR [rcx+0x88]
   140008653:	mov    QWORD PTR [r14+0xc],rax
   140008657:	mov    eax,DWORD PTR [rcx+0x50]
   14000865a:	mov    DWORD PTR [r14+0x8],eax
   14000865e:	mov    edi,DWORD PTR [r13+0x2]
   140008662:	mov    r12d,r9d
   140008665:	add    r13,0x6
   140008669:	mov    DWORD PTR [rbp-0x28],edi
   14000866c:	test   edi,edi
   14000866e:	je     0x1400087d7
   140008674:	nop    DWORD PTR [rax+0x0]
   140008678:	nop    DWORD PTR [rax+rax*1+0x0]
   140008680:	mov    r15,r9
   140008683:	mov    QWORD PTR [rbp-0x48],r9
   140008687:	mov    rbx,r13
   14000868a:	or     rax,0xffffffffffffffff
   14000868e:	xchg   ax,ax
   140008690:	inc    rax
   140008693:	cmp    BYTE PTR [r13+rax*1+0x0],0x0
   140008699:	jne    0x140008690
   14000869b:	inc    r13
   14000869e:	add    r13,rax
   1400086a1:	test   edx,edx
   1400086a3:	js     0x1400087be
   1400086a9:	xor    eax,eax
   1400086ab:	mov    DWORD PTR [rbp+0x134],r9d
   1400086b2:	mov    r10,QWORD PTR [r14]
   1400086b5:	mov    edx,r9d
   1400086b8:	mov    esi,DWORD PTR [r14+0xc]
   1400086bc:	add    rsi,r10
   1400086bf:	mov    DWORD PTR [rsp+0x68],edx
   1400086c3:	mov    QWORD PTR [rbp+0x6d8],r9
   1400086ca:	mov    QWORD PTR [rbp+0x6e0],rax
   1400086d1:	mov    QWORD PTR [rbp+0x6e8],rax
   1400086d8:	test   rbx,rbx
   1400086db:	je     0x14001fc56
   1400086e1:	mov    r11d,DWORD PTR [rsi+0x20]
   1400086e5:	mov    r15d,DWORD PTR [rsi+0x24]
   1400086e9:	add    r11,r10
   1400086ec:	mov    r8d,DWORD PTR [rsi+0x18]
   1400086f0:	add    r15,r10
   1400086f3:	sub    r8d,0x1
   1400086f7:	js     0x14001fd95
   1400086fd:	nop    DWORD PTR [rax]
   140008700:	lea    edi,[r8+r9*1]
   140008704:	sar    edi,1
   140008706:	movsxd rax,edi
   140008709:	mov    edx,DWORD PTR [r11+rax*4]
   14000870d:	mov    rax,rbx
   140008710:	add    rdx,r10
   140008713:	sub    rdx,rbx
   140008716:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008720:	movzx  ecx,BYTE PTR [rax]
   140008723:	cmp    cl,BYTE PTR [rax+rdx*1]
   140008726:	jne    0x14000b6b3
   14000872c:	inc    rax
   14000872f:	test   cl,cl
   140008731:	jne    0x140008720
   140008733:	xor    eax,eax
   140008735:	test   eax,eax
   140008737:	js     0x140008749
   140008739:	jle    0x14000874f
   14000873b:	lea    r9d,[rdi+0x1]
   14000873f:	cmp    r8d,r9d
   140008742:	jge    0x140008700
   140008744:	jmp    0x14001fd95
   140008749:	lea    r8d,[rdi-0x1]
   14000874d:	jmp    0x14000873f
   14000874f:	cmp    r8d,r9d
   140008752:	jl     0x14001fd95
   140008758:	movsxd rax,edi
   14000875b:	xor    r9d,r9d
   14000875e:	mov    edi,DWORD PTR [rbp-0x28]
   140008761:	movzx  ecx,WORD PTR [r15+rax*2]
   140008766:	mov    r15,QWORD PTR [rbp-0x48]
   14000876a:	mov    edx,r15d
   14000876d:	mov    eax,DWORD PTR [rsi+0x1c]
   140008770:	add    rax,r10
   140008773:	movzx  ecx,cx
   140008776:	mov    ecx,DWORD PTR [rax+rcx*4]
   140008779:	add    rcx,r10
   14000877c:	mov    QWORD PTR [rbp+0x4b0],rcx
   140008783:	cmp    rcx,r10
   140008786:	jb     0x14001fd87
   14000878c:	mov    eax,DWORD PTR [r14+0x8]
   140008790:	add    rax,r10
   140008793:	cmp    rcx,rax
   140008796:	jae    0x14001fd87
   14000879c:	cmp    rcx,rsi
   14000879f:	ja     0x14001fc62
   1400087a5:	mov    r15,rcx
   1400087a8:	test   edx,edx
   1400087aa:	js     0x14001fdfc
   1400087b0:	mov    eax,DWORD PTR [rbp-0x80]
   1400087b3:	lea    rcx,[rip+0x45866]        # 0x14004e020
   1400087ba:	mov    QWORD PTR [rcx+rax*8],r15
   1400087be:	inc    DWORD PTR [rbp-0x80]
   1400087c1:	inc    r12d
   1400087c4:	cmp    r12d,edi
   1400087c7:	jb     0x140008680
   1400087cd:	mov    esi,DWORD PTR [rbp-0x60]
   1400087d0:	lea    r15,[rip+0x46979]        # 0x14004f150
   1400087d7:	inc    esi
   1400087d9:	cmp    BYTE PTR [r13+0x0],0x0
   1400087de:	mov    DWORD PTR [rbp-0x60],esi
   1400087e1:	jne    0x1400085ae
   1400087e7:	mov    edi,DWORD PTR [rsp+0x68]
   1400087eb:	xor    r14d,r14d
   1400087ee:	lea    r12d,[r14+0x60]
   1400087f2:	lea    rsi,[rip+0x45827]        # 0x14004e020
   1400087f9:	cmp    QWORD PTR [rbp+0x2f0],0x0
   140008801:	je     0x14000881b
   140008803:	call   QWORD PTR [rip+0x349b7]        # 0x14003d1c0
   140008809:	mov    r8,QWORD PTR [rbp+0x2f0]
   140008810:	xor    edx,edx
   140008812:	mov    rcx,rax
   140008815:	call   QWORD PTR [rip+0x349c5]        # 0x14003d1e0
   14000881b:	test   edi,edi
   14000881d:	js     0x14001fe1b
   140008823:	mov    eax,DWORD PTR [rip+0x4631f]        # 0x14004eb48
   140008829:	mov    r13d,0x80004005
   14000882f:	inc    eax
   140008831:	mov    DWORD PTR [rip+0x46311],eax        # 0x14004eb48
   140008837:	mov    eax,r14d
   14000883a:	xor    r15d,r15d
   14000883d:	xchg   DWORD PTR [rip+0x468fd],eax        # 0x14004f140
   140008843:	mov    rax,QWORD PTR gs:0x60
   14000884c:	mov    ebx,r15d
   14000884f:	mov    QWORD PTR [rbp+0x310],r14
   140008856:	mov    QWORD PTR [rbp+0x300],r14
   14000885d:	cmp    DWORD PTR [rax+0x2c0],ebx
   140008863:	je     0x1400089b2
   140008869:	mov    rdi,QWORD PTR [rip+0x458c0]        # 0x14004e130
   140008870:	mov    rcx,rdi
   140008873:	call   QWORD PTR [rip+0x34eaf]        # 0x14003d728
   140008879:	call   rdi
   14000887b:	mov    r12,rax
   14000887e:	test   rax,rax
   140008881:	je     0x14001fe68
   140008887:	mov    esi,r15d
   14000888a:	mov    QWORD PTR [rbp+0x260],r15
   140008891:	mov    rdi,QWORD PTR [rip+0x458b8]        # 0x14004e150
   140008898:	mov    rcx,rdi
   14000889b:	call   QWORD PTR [rip+0x34e87]        # 0x14003d728
   1400088a1:	lea    rax,[rbp+0x1f8]
   1400088a8:	mov    r9d,r15d
   1400088ab:	mov    r8,rsi
   1400088ae:	mov    QWORD PTR [rsp+0x20],rax
   1400088b3:	mov    edx,0x2
   1400088b8:	mov    rcx,r12
   1400088bb:	call   rdi
   1400088bd:	test   eax,eax
   1400088bf:	je     0x14000b6bd
   1400088c5:	mov    QWORD PTR [rbp+0x310],rsi
   1400088cc:	xor    r15d,r15d
   1400088cf:	mov    QWORD PTR [rbp+0x260],r15
   1400088d6:	lea    rcx,[rbp+0x260]
   1400088dd:	call   0x14000f08c
   1400088e2:	test   ebx,ebx
   1400088e4:	js     0x1400089b9
   1400088ea:	call   QWORD PTR [rip+0x34a08]        # 0x14003d2f8
   1400088f0:	mov    rbx,QWORD PTR [rip+0x45851]        # 0x14004e148
   1400088f7:	mov    edi,eax
   1400088f9:	mov    rcx,rbx
   1400088fc:	call   QWORD PTR [rip+0x34e26]        # 0x14003d728
   140008902:	mov    ecx,edi
   140008904:	call   rbx
   140008906:	mov    r12,rax
   140008909:	test   rax,rax
   14000890c:	je     0x14001fec3
   140008912:	mov    rsi,r15
   140008915:	mov    QWORD PTR [rbp+0x2b8],r15
   14000891c:	mov    ebx,r15d
   14000891f:	mov    rdi,QWORD PTR [rip+0x4582a]        # 0x14004e150
   140008926:	mov    rcx,rdi
   140008929:	call   QWORD PTR [rip+0x34df9]        # 0x14003d728
   14000892f:	lea    rax,[rbp+0x23c]
   140008936:	mov    r9d,r15d
   140008939:	mov    r8,rsi
   14000893c:	mov    QWORD PTR [rsp+0x20],rax
   140008941:	mov    edx,0x2
   140008946:	mov    rcx,r12
   140008949:	call   rdi
   14000894b:	test   eax,eax
   14000894d:	je     0x14000b6ff
   140008953:	mov    QWORD PTR [rbp+0x300],rsi
   14000895a:	xor    eax,eax
   14000895c:	mov    QWORD PTR [rbp+0x2b8],rax
   140008963:	lea    rcx,[rbp+0x2b8]
   14000896a:	call   0x14000f08c
   14000896f:	test   ebx,ebx
   140008971:	js     0x1400089b9
   140008973:	mov    rcx,QWORD PTR [rbp+0x310]
   14000897a:	test   rcx,rcx
   14000897d:	je     0x1400089b2
   14000897f:	lea    rdx,[rip+0x3589a]        # 0x14003e220
   140008986:	call   0x1400156fe
   14000898b:	test   eax,eax
   14000898d:	jne    0x1400089b2
   14000898f:	mov    rcx,QWORD PTR [rbp+0x300]
   140008996:	test   rcx,rcx
   140008999:	je     0x1400089b2
   14000899b:	lea    rdx,[rip+0x3552e]        # 0x14003ded0
   1400089a2:	call   0x1400156fe
   1400089a7:	test   eax,eax
   1400089a9:	mov    eax,0x1
   1400089ae:	cmove  r14d,eax
   1400089b2:	mov    DWORD PTR [rbp+0x8c],r14d
   1400089b9:	lea    rcx,[rbp+0x300]
   1400089c0:	call   0x14000f08c
   1400089c5:	lea    rcx,[rbp+0x310]
   1400089cc:	call   0x14000f08c
   1400089d1:	xor    r14d,r14d
   1400089d4:	test   ebx,ebx
   1400089d6:	js     0x14001ff15
   1400089dc:	mov    edx,0x4
   1400089e1:	mov    DWORD PTR [rbp+0x170],r14d
   1400089e8:	lea    ecx,[rdx+0x3c]
   1400089eb:	call   QWORD PTR [rip+0x34807]        # 0x14003d1f8
   1400089f1:	mov    rdx,rax
   1400089f4:	lea    rcx,[rbp+0x240]
   1400089fb:	call   0x14000138c
   140008a00:	mov    rax,QWORD PTR [rbp+0x240]
   140008a07:	mov    QWORD PTR [rbp+0x168],rax
   140008a0e:	test   rax,rax
   140008a11:	je     0x14001ff21
   140008a17:	xor    eax,eax
   140008a19:	mov    QWORD PTR [rsp+0x78],r14
   140008a1e:	mov    QWORD PTR [rbp-0x54],rax
   140008a22:	mov    r12,r14
   140008a25:	mov    DWORD PTR [rbp-0x4c],eax
   140008a28:	mov    rsi,r14
   140008a2b:	mov    QWORD PTR [rbp+0xcc],rax
   140008a32:	mov    DWORD PTR [rbp+0xd4],eax
   140008a38:	lea    rax,[rip+0x458e1]        # 0x14004e320
   140008a3f:	mov    QWORD PTR [rbp+0x610],rax
   140008a46:	mov    DWORD PTR [rbp-0x58],r14d
   140008a4a:	mov    DWORD PTR [rbp+0x1e8],r14d
   140008a51:	mov    DWORD PTR [rbp+0xc8],r14d
   140008a58:	mov    DWORD PTR [rbp+0x88],r14d
   140008a5f:	mov    QWORD PTR [rbp+0x4c0],0xa0
   140008a6a:	call   QWORD PTR [rip+0x34750]        # 0x14003d1c0
   140008a70:	mov    edx,0x8
   140008a75:	mov    r8d,0xa0
   140008a7b:	mov    rcx,rax
   140008a7e:	call   QWORD PTR [rip+0x34754]        # 0x14003d1d8
   140008a84:	lea    rdi,[rip+0x459dd]        # 0x14004e468
   140008a8b:	mov    r14,rax
   140008a8e:	test   rax,rax
   140008a91:	je     0x14001ff45
   140008a97:	mov    r8,QWORD PTR [rbp+0x4c0]
   140008a9e:	mov    rcx,rax
   140008aa1:	mov    rdx,QWORD PTR [rbp+0x610]
   140008aa8:	call   0x1400156f2
   140008aad:	mov    esi,DWORD PTR [rbp+0x4c0]
   140008ab3:	mov    r12,r14
   140008ab6:	mov    QWORD PTR [rsp+0x70],r14
   140008abb:	mov    QWORD PTR [rbp+0x620],rdi
   140008ac2:	mov    QWORD PTR [rbp+0x4d0],0x8
   140008acd:	call   QWORD PTR [rip+0x346ed]        # 0x14003d1c0
   140008ad3:	mov    edx,0x8
   140008ad8:	mov    rcx,rax
   140008adb:	mov    r8d,edx
   140008ade:	call   QWORD PTR [rip+0x346f4]        # 0x14003d1d8
   140008ae4:	mov    r13,rax
   140008ae7:	test   rax,rax
   140008aea:	je     0x14001ff50
   140008af0:	mov    r8,QWORD PTR [rbp+0x4d0]
   140008af7:	mov    rcx,rax
   140008afa:	mov    rdx,QWORD PTR [rbp+0x620]
   140008b01:	call   0x1400156f2
   140008b06:	mov    r12,QWORD PTR [rbp+0x4d0]
   140008b0d:	mov    QWORD PTR [rsp+0x78],r13
   140008b12:	rdtsc  
   140008b14:	shl    rdx,0x20
   140008b18:	or     rax,rdx
   140008b1b:	mov    QWORD PTR [rbp+0x510],rax
   140008b22:	mov    edx,0x4
   140008b27:	lea    r8,[rbp+0x384]
   140008b2e:	mov    ecx,edx
   140008b30:	call   0x14000bad0
   140008b35:	mov    r15d,eax
   140008b38:	test   eax,eax
   140008b3a:	js     0x14001ff60
   140008b40:	mov    edi,DWORD PTR [rbp+0x384]
   140008b46:	mov    DWORD PTR [rbp+0x7c],edi
   140008b49:	test   eax,eax
   140008b4b:	js     0x140020b80
   140008b51:	lea    r8,[rbp+0x424]
   140008b58:	mov    edx,esi
   140008b5a:	mov    r9d,edi
   140008b5d:	call   0x14000bad0
   140008b62:	mov    r15d,eax
   140008b65:	test   eax,eax
   140008b67:	js     0x140020b80
   140008b6d:	mov    edi,DWORD PTR [rbp+0x424]
   140008b73:	mov    DWORD PTR [rbp+0x7c],edi
   140008b76:	lea    r10d,[rdi+r9*1]
   140008b7a:	cmp    r10d,r9d
   140008b7d:	jb     0x14001ff68
   140008b83:	xor    ebx,ebx
   140008b85:	mov    r15d,ebx
   140008b88:	or     r15d,0x10000000
   140008b8f:	jl     0x140020b80
   140008b95:	lea    r8,[rbp+0x42c]
   140008b9c:	mov    edx,r12d
   140008b9f:	call   0x14000bad0
   140008ba4:	mov    r15d,eax
   140008ba7:	test   eax,eax
   140008ba9:	js     0x140020b80
   140008baf:	mov    edi,DWORD PTR [rbp+0x42c]
   140008bb5:	mov    DWORD PTR [rbp+0x7c],edi
   140008bb8:	lea    r9d,[rdi+r10*1]
   140008bbc:	cmp    r9d,r10d
   140008bbf:	jb     0x14001ff79
   140008bc5:	mov    r15d,ebx
   140008bc8:	or     r15d,0x10000000
   140008bcf:	jl     0x140020b80
   140008bd5:	lea    r8,[rbp+0x434]
   140008bdc:	mov    edx,0x8
   140008be1:	call   0x14000bad0
   140008be6:	mov    r15d,eax
   140008be9:	test   eax,eax
   140008beb:	js     0x140020b80
   140008bf1:	mov    edi,DWORD PTR [rbp+0x434]
   140008bf7:	mov    DWORD PTR [rbp+0x7c],edi
   140008bfa:	lea    r11d,[rdi+r9*1]
   140008bfe:	cmp    r11d,r9d
   140008c01:	jb     0x14001ff88
   140008c07:	mov    r15d,ebx
   140008c0a:	or     r15d,0x10000000
   140008c11:	jl     0x140020b80
   140008c17:	lea    r8,[rbp+0x4e0]
   140008c1e:	call   0x14000bbd8
   140008c23:	test   eax,eax
   140008c25:	js     0x14001ff97
   140008c2b:	mov    rax,QWORD PTR [rbp+0x4e0]
   140008c32:	lea    r8,[rbp+0x43c]
   140008c39:	inc    rax
   140008c3c:	mov    ecx,0x4
   140008c41:	mov    QWORD PTR [rbp+0x4e0],rax
   140008c48:	lea    edx,[rax+rax*1]
   140008c4b:	call   0x14000bad0
   140008c50:	mov    r15d,eax
   140008c53:	test   eax,eax
   140008c55:	js     0x140020b80
   140008c5b:	mov    edi,DWORD PTR [rbp+0x43c]
   140008c61:	mov    DWORD PTR [rbp+0x7c],edi
   140008c64:	lea    r9d,[rdi+r11*1]
   140008c68:	cmp    r9d,r11d
   140008c6b:	jb     0x14001ffa2
   140008c71:	mov    r15d,ebx
   140008c74:	or     r15d,0x10000000
   140008c7b:	jl     0x140020b80
   140008c81:	lea    r8,[rbp+0x444]
   140008c88:	mov    edx,ecx
   140008c8a:	call   0x14000bad0
   140008c8f:	mov    r15d,eax
   140008c92:	test   eax,eax
   140008c94:	js     0x140020b80
   140008c9a:	mov    edi,DWORD PTR [rbp+0x444]
   140008ca0:	mov    DWORD PTR [rbp+0x7c],edi
   140008ca3:	lea    r10d,[rdi+r9*1]
   140008ca7:	cmp    r10d,r9d
   140008caa:	jb     0x14001ffb1
   140008cb0:	mov    r15d,ebx
   140008cb3:	or     r15d,0x10000000
   140008cba:	jl     0x140020b80
   140008cc0:	lea    r8,[rbp+0x44c]
   140008cc7:	call   0x14000bad0
   140008ccc:	mov    r15d,eax
   140008ccf:	test   eax,eax
   140008cd1:	js     0x140020b80
   140008cd7:	mov    edi,DWORD PTR [rbp+0x44c]
   140008cdd:	mov    DWORD PTR [rbp+0x7c],edi
   140008ce0:	lea    eax,[rdi+r10*1]
   140008ce4:	cmp    eax,r10d
   140008ce7:	jb     0x14001ffc0
   140008ced:	mov    r15d,ebx
   140008cf0:	or     r15d,0x10000000
   140008cf7:	jl     0x140020b80
   140008cfd:	mov    DWORD PTR [rbp-0x54],eax
   140008d00:	mov    edi,eax
   140008d02:	call   QWORD PTR [rip+0x344b8]        # 0x14003d1c0
   140008d08:	mov    r8d,edi
   140008d0b:	mov    edx,0x8
   140008d10:	mov    rcx,rax
   140008d13:	call   QWORD PTR [rip+0x344bf]        # 0x14003d1d8
   140008d19:	mov    rbx,rax
   140008d1c:	test   rax,rax
   140008d1f:	je     0x14001ffce
   140008d25:	xor    r10d,r10d
   140008d28:	mov    QWORD PTR [rbp-0x50],rax
   140008d2c:	mov    edi,r10d
   140008d2f:	mov    DWORD PTR [rbp-0x58],r10d
   140008d33:	lea    rax,[rbp+0x210]
   140008d3a:	mov    DWORD PTR [rbp+0x210],r10d
   140008d41:	test   rax,rax
   140008d44:	je     0x14001ffe4
   140008d4a:	lea    rdx,[rbx+0x4]
   140008d4e:	cmp    rdx,rbx
   140008d51:	jb     0x140020b7a
   140008d57:	mov    ecx,DWORD PTR [rbp-0x54]
   140008d5a:	lea    rax,[rbx+0x8]
   140008d5e:	add    rcx,rbx
   140008d61:	mov    r15d,r10d
   140008d64:	cmp    rax,rcx
   140008d67:	ja     0x14001ffd9
   140008d6d:	mov    DWORD PTR [rbx],0x4
   140008d73:	mov    eax,DWORD PTR [rbp+0x210]
   140008d79:	mov    DWORD PTR [rdx],eax
   140008d7b:	mov    edi,DWORD PTR [rbp-0x58]
   140008d7e:	inc    edi
   140008d80:	mov    DWORD PTR [rbp-0x58],edi
   140008d83:	test   r15d,r15d
   140008d86:	js     0x140020b80
   140008d8c:	test   esi,esi
   140008d8e:	je     0x14002004f
   140008d94:	cmp    QWORD PTR [rbp-0x50],r10
   140008d98:	je     0x14001ffef
   140008d9e:	mov    r9,QWORD PTR [rbp-0x50]
   140008da2:	mov    r11d,r10d
   140008da5:	test   edi,edi
   140008da7:	je     0x140008df6
   140008da9:	mov    r10d,DWORD PTR [rbp+0x178]
   140008db0:	mov    edx,DWORD PTR [r9]
   140008db3:	lea    r8,[rbp+0x468]
   140008dba:	mov    ecx,0x4
   140008dbf:	call   0x14000bad0
   140008dc4:	mov    r15d,eax
   140008dc7:	test   eax,eax
   140008dc9:	js     0x140008e36
   140008dcb:	mov    r10d,DWORD PTR [rbp+0x468]
   140008dd2:	mov    DWORD PTR [rbp+0x178],r10d
   140008dd9:	mov    ecx,r10d
   140008ddc:	add    rcx,r9
   140008ddf:	cmp    rcx,r9
   140008de2:	jb     0x140020b7a
   140008de8:	inc    r11d
   140008deb:	mov    r9,rcx
   140008dee:	cmp    r11d,edi
   140008df1:	jb     0x140008db0
   140008df3:	xor    r10d,r10d
   140008df6:	lea    rdi,[r9+0x4]
   140008dfa:	cmp    rdi,r9
   140008dfd:	jb     0x140020b7a
   140008e03:	mov    ecx,DWORD PTR [rbp-0x54]
   140008e06:	lea    rax,[rsi+0x4]
   140008e0a:	add    rcx,QWORD PTR [rbp-0x50]
   140008e0e:	add    rax,r9
   140008e11:	mov    r15d,r10d
   140008e14:	mov    r8,rsi
   140008e17:	cmp    rax,rcx
   140008e1a:	ja     0x140020044
   140008e20:	mov    rdx,r14
   140008e23:	mov    DWORD PTR [r9],esi
   140008e26:	mov    rcx,rdi
   140008e29:	call   0x1400156f2
   140008e2e:	mov    edi,DWORD PTR [rbp-0x58]
   140008e31:	inc    edi
   140008e33:	mov    DWORD PTR [rbp-0x58],edi
   140008e36:	xor    r10d,r10d
   140008e39:	test   r15d,r15d
   140008e3c:	js     0x140020b80
   140008e42:	test   r12d,r12d
   140008e45:	je     0x1400200c6
   140008e4b:	cmp    QWORD PTR [rbp-0x50],0x0
   140008e50:	je     0x14002005a
   140008e56:	mov    rdx,QWORD PTR [rbp-0x50]
   140008e5a:	mov    r8d,r10d
   140008e5d:	test   edi,edi
   140008e5f:	je     0x140008ea3
   140008e61:	mov    ecx,DWORD PTR [rbp+0x130]
   140008e67:	mov    eax,DWORD PTR [rdx]
   140008e69:	add    eax,0x4
   140008e6c:	cmp    eax,0x4
   140008e6f:	jb     0x1400200b0
   140008e75:	mov    ecx,eax
   140008e77:	mov    DWORD PTR [rbp+0x130],eax
   140008e7d:	mov    r15d,r10d
   140008e80:	test   r15d,r15d
   140008e83:	js     0x140020b80
   140008e89:	mov    r9d,ecx
   140008e8c:	add    r9,rdx
   140008e8f:	cmp    r9,rdx
   140008e92:	jb     0x140020b7a
   140008e98:	inc    r8d
   140008e9b:	mov    rdx,r9
   140008e9e:	cmp    r8d,edi
   140008ea1:	jb     0x140008e67
   140008ea3:	lea    rdi,[rdx+0x4]
   140008ea7:	cmp    rdi,rdx
   140008eaa:	jb     0x140020b7a
   140008eb0:	mov    ecx,DWORD PTR [rbp-0x54]
   140008eb3:	mov    r15d,r10d
   140008eb6:	add    rcx,QWORD PTR [rbp-0x50]
   140008eba:	mov    r8d,r12d
   140008ebd:	lea    rax,[r8+0x4]
   140008ec1:	add    rax,rdx
   140008ec4:	cmp    rax,rcx
   140008ec7:	ja     0x1400200bb
   140008ecd:	mov    DWORD PTR [rdx],r12d
   140008ed0:	mov    rcx,rdi
   140008ed3:	mov    rdx,r13
   140008ed6:	call   0x1400156f2
   140008edb:	mov    edi,DWORD PTR [rbp-0x58]
   140008ede:	inc    edi
   140008ee0:	mov    DWORD PTR [rbp-0x58],edi
   140008ee3:	test   r15d,r15d
   140008ee6:	js     0x140020b80
   140008eec:	mov    rax,QWORD PTR [rbp+0x510]
   140008ef3:	mov    QWORD PTR [rbp+0x4f0],rax
   140008efa:	lea    rax,[rbp+0x4f0]
   140008f01:	test   rax,rax
   140008f04:	je     0x140020133
   140008f0a:	cmp    QWORD PTR [rbp-0x50],0x0
   140008f0f:	je     0x1400200d1
   140008f15:	mov    rdx,QWORD PTR [rbp-0x50]
   140008f19:	xor    r10d,r10d
   140008f1c:	mov    r9d,r10d
   140008f1f:	test   edi,edi
   140008f21:	je     0x140008f67
   140008f23:	mov    r8d,DWORD PTR [rbp+0x188]
   140008f2a:	mov    eax,DWORD PTR [rdx]
   140008f2c:	add    eax,0x4
   140008f2f:	cmp    eax,0x4
   140008f32:	jb     0x14002011d
   140008f38:	mov    r8d,eax
   140008f3b:	mov    DWORD PTR [rbp+0x188],eax
   140008f41:	mov    r15d,r10d
   140008f44:	test   r15d,r15d
   140008f47:	js     0x140020b80
   140008f4d:	mov    ecx,r8d
   140008f50:	add    rcx,rdx
   140008f53:	cmp    rcx,rdx
   140008f56:	jb     0x140020b7a
   140008f5c:	inc    r9d
   140008f5f:	mov    rdx,rcx
   140008f62:	cmp    r9d,edi
   140008f65:	jb     0x140008f2a
   140008f67:	lea    rdi,[rdx+0x4]
   140008f6b:	cmp    rdi,rdx
   140008f6e:	jb     0x140020b7a
   140008f74:	mov    ecx,DWORD PTR [rbp-0x54]
   140008f77:	lea    rax,[rdx+0xc]
   140008f7b:	add    rcx,QWORD PTR [rbp-0x50]
   140008f7f:	mov    r15d,r10d
   140008f82:	cmp    rax,rcx
   140008f85:	ja     0x140020128
   140008f8b:	mov    DWORD PTR [rdx],0x8
   140008f91:	movsd  xmm0,QWORD PTR [rbp+0x4f0]
   140008f99:	movsd  QWORD PTR [rdi],xmm0
   140008f9d:	inc    DWORD PTR [rbp-0x58]
   140008fa0:	test   r15d,r15d
   140008fa3:	js     0x140020b80
   140008fa9:	lea    r8,[rbp+0x280]
   140008fb0:	call   0x14000bb10
   140008fb5:	test   eax,eax
   140008fb7:	js     0x140020141
   140008fbd:	mov    rax,QWORD PTR [rbp+0x280]
   140008fc4:	lea    rcx,[rax+0x1]
   140008fc8:	cmp    rcx,rax
   140008fcb:	jb     0x140020b6f
   140008fd1:	lea    r9d,[rcx+rcx*1]
   140008fd5:	mov    QWORD PTR [rbp+0x280],rcx
   140008fdc:	test   r9d,r9d
   140008fdf:	je     0x1400201c8
   140008fe5:	cmp    QWORD PTR [rbp-0x50],0x0
   140008fea:	je     0x140020153
   140008ff0:	cmp    DWORD PTR [rbp-0x58],0x0
   140008ff4:	mov    r8d,r10d
   140008ff7:	mov    rdx,QWORD PTR [rbp-0x50]
   140008ffb:	jbe    0x14000903f
   140008ffd:	mov    edi,DWORD PTR [rbp+0x138]
   140009003:	mov    eax,DWORD PTR [rdx]
   140009005:	add    eax,0x4
   140009008:	cmp    eax,0x4
   14000900b:	jb     0x1400201a7
   140009011:	mov    edi,eax
   140009013:	mov    DWORD PTR [rbp+0x138],eax
   140009019:	mov    r15d,r10d
   14000901c:	test   r15d,r15d
   14000901f:	js     0x140020b80
   140009025:	mov    ecx,edi
   140009027:	add    rcx,rdx
   14000902a:	cmp    rcx,rdx
   14000902d:	jb     0x1400201bd
   140009033:	inc    r8d
   140009036:	mov    rdx,rcx
   140009039:	cmp    r8d,DWORD PTR [rbp-0x58]
   14000903d:	jb     0x140009003
   14000903f:	lea    rdi,[rdx+0x4]
   140009043:	cmp    rdi,rdx
   140009046:	jb     0x1400201bd
   14000904c:	mov    ecx,DWORD PTR [rbp-0x54]
   14000904f:	lea    rax,[r9+0x4]
   140009053:	add    rcx,QWORD PTR [rbp-0x50]
   140009057:	add    rax,rdx
   14000905a:	mov    r8d,r9d
   14000905d:	mov    r15d,r10d
   140009060:	cmp    rax,rcx
   140009063:	ja     0x1400201b2
   140009069:	mov    DWORD PTR [rdx],r9d
   14000906c:	mov    rcx,rdi
   14000906f:	lea    rdx,[rip+0x35a1a]        # 0x14003ea90
   140009076:	call   0x1400156f2
   14000907b:	inc    DWORD PTR [rbp-0x58]
   14000907e:	xor    r10d,r10d
   140009081:	test   r15d,r15d
   140009084:	js     0x140020b80
   14000908a:	mov    eax,DWORD PTR [rbp+0x8c]
   140009090:	mov    DWORD PTR [rbp+0x230],eax
   140009096:	lea    rax,[rbp+0x230]
   14000909d:	test   rax,rax
   1400090a0:	je     0x140020239
   1400090a6:	cmp    QWORD PTR [rbp-0x50],0x0
   1400090ab:	je     0x1400201d3
   1400090b1:	cmp    DWORD PTR [rbp-0x58],0x0
   1400090b5:	mov    r8d,r10d
   1400090b8:	mov    rdx,QWORD PTR [rbp-0x50]
   1400090bc:	jbe    0x14000910c
   1400090be:	mov    edi,DWORD PTR [rbp+0x174]
   1400090c4:	nop    DWORD PTR [rax+0x0]
   1400090c8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400090d0:	mov    eax,DWORD PTR [rdx]
   1400090d2:	add    eax,0x4
   1400090d5:	cmp    eax,0x4
   1400090d8:	jb     0x140020223
   1400090de:	mov    edi,eax
   1400090e0:	mov    DWORD PTR [rbp+0x174],eax
   1400090e6:	mov    r15d,r10d
   1400090e9:	test   r15d,r15d
   1400090ec:	js     0x140020b68
   1400090f2:	mov    ecx,edi
   1400090f4:	add    rcx,rdx
   1400090f7:	cmp    rcx,rdx
   1400090fa:	jb     0x140020b7a
   140009100:	inc    r8d
   140009103:	mov    rdx,rcx
   140009106:	cmp    r8d,DWORD PTR [rbp-0x58]
   14000910a:	jb     0x1400090d0
   14000910c:	lea    rdi,[rdx+0x4]
   140009110:	cmp    rdi,rdx
   140009113:	jb     0x140020b7a
   140009119:	mov    ecx,DWORD PTR [rbp-0x54]
   14000911c:	lea    rax,[rdx+0x8]
   140009120:	add    rcx,QWORD PTR [rbp-0x50]
   140009124:	mov    r15d,r10d
   140009127:	cmp    rax,rcx
   14000912a:	ja     0x14002022e
   140009130:	mov    DWORD PTR [rdx],0x4
   140009136:	mov    eax,DWORD PTR [rbp+0x230]
   14000913c:	mov    DWORD PTR [rdi],eax
   14000913e:	inc    DWORD PTR [rbp-0x58]
   140009141:	test   r15d,r15d
   140009144:	js     0x140020b68
   14000914a:	lea    rax,[rbp+0x1c8]
   140009151:	mov    DWORD PTR [rbp+0x1c8],0x4
   14000915b:	test   rax,rax
   14000915e:	je     0x1400202aa
   140009164:	cmp    QWORD PTR [rbp-0x50],0x0
   140009169:	je     0x140020244
   14000916f:	cmp    DWORD PTR [rbp-0x58],0x0
   140009173:	mov    r8d,r10d
   140009176:	mov    rdx,QWORD PTR [rbp-0x50]
   14000917a:	jbe    0x1400091be
   14000917c:	mov    edi,DWORD PTR [rbp+0x148]
   140009182:	mov    eax,DWORD PTR [rdx]
   140009184:	add    eax,0x4
   140009187:	cmp    eax,0x4
   14000918a:	jb     0x140020294
   140009190:	mov    edi,eax
   140009192:	mov    DWORD PTR [rbp+0x148],eax
   140009198:	mov    r15d,r10d
   14000919b:	test   r15d,r15d
   14000919e:	js     0x140020b68
   1400091a4:	mov    ecx,edi
   1400091a6:	add    rcx,rdx
   1400091a9:	cmp    rcx,rdx
   1400091ac:	jb     0x140020b7a
   1400091b2:	inc    r8d
   1400091b5:	mov    rdx,rcx
   1400091b8:	cmp    r8d,DWORD PTR [rbp-0x58]
   1400091bc:	jb     0x140009182
   1400091be:	lea    rdi,[rdx+0x4]
   1400091c2:	cmp    rdi,rdx
   1400091c5:	jb     0x140020b7a
   1400091cb:	mov    ecx,DWORD PTR [rbp-0x54]
   1400091ce:	lea    rax,[rdx+0x8]
   1400091d2:	add    rcx,QWORD PTR [rbp-0x50]
   1400091d6:	mov    r15d,r10d
   1400091d9:	cmp    rax,rcx
   1400091dc:	ja     0x14002029f
   1400091e2:	mov    DWORD PTR [rdx],0x4
   1400091e8:	mov    eax,DWORD PTR [rbp+0x1c8]
   1400091ee:	mov    DWORD PTR [rdi],eax
   1400091f0:	inc    DWORD PTR [rbp-0x58]
   1400091f3:	test   r15d,r15d
   1400091f6:	js     0x140020b68
   1400091fc:	mov    edx,0x4
   140009201:	lea    r8,[rbp+0x448]
   140009208:	mov    ecx,edx
   14000920a:	call   0x14000bad0
   14000920f:	mov    r15d,eax
   140009212:	test   eax,eax
   140009214:	js     0x1400202b5
   14000921a:	mov    edi,DWORD PTR [rbp+0x448]
   140009220:	mov    DWORD PTR [rbp+0x84],edi
   140009226:	test   eax,eax
   140009228:	js     0x1400202c0
   14000922e:	lea    r8,[rbp+0x2dc]
   140009235:	mov    DWORD PTR [rbp+0x60],edi
   140009238:	mov    edx,0x8
   14000923d:	mov    r9d,edi
   140009240:	call   0x14000bad0
   140009245:	mov    r15d,eax
   140009248:	test   eax,eax
   14000924a:	js     0x1400202c0
   140009250:	mov    edi,DWORD PTR [rbp+0x2dc]
   140009256:	mov    DWORD PTR [rbp+0x84],edi
   14000925c:	lea    r8,[rbp+0x60]
   140009260:	mov    edx,edi
   140009262:	mov    ecx,r9d
   140009265:	call   0x14000bad0
   14000926a:	mov    r15d,eax
   14000926d:	test   eax,eax
   14000926f:	js     0x1400202c0
   140009275:	mov    edx,0x4
   14000927a:	lea    r8,[rbp+0x47c]
   140009281:	mov    ecx,edx
   140009283:	call   0x14000bad0
   140009288:	mov    r15d,eax
   14000928b:	test   eax,eax
   14000928d:	js     0x1400202c0
   140009293:	mov    edi,DWORD PTR [rbp+0x47c]
   140009299:	mov    DWORD PTR [rbp+0x84],edi
   14000929f:	mov    ecx,DWORD PTR [rbp+0x60]
   1400092a2:	lea    r8,[rbp+0x60]
   1400092a6:	mov    edx,edi
   1400092a8:	call   0x14000bad0
   1400092ad:	mov    r15d,eax
   1400092b0:	test   eax,eax
   1400092b2:	js     0x1400202c0
   1400092b8:	mov    edx,0x4
   1400092bd:	lea    r8,[rbp+0x2ec]
   1400092c4:	mov    ecx,edx
   1400092c6:	call   0x14000bad0
   1400092cb:	mov    r15d,eax
   1400092ce:	test   eax,eax
   1400092d0:	js     0x1400202c0
   1400092d6:	mov    edi,DWORD PTR [rbp+0x2ec]
   1400092dc:	mov    DWORD PTR [rbp+0x84],edi
   1400092e2:	mov    ecx,DWORD PTR [rbp+0x60]
   1400092e5:	lea    r8,[rbp+0x60]
   1400092e9:	mov    edx,edi
   1400092eb:	call   0x14000bad0
   1400092f0:	mov    r15d,eax
   1400092f3:	test   eax,eax
   1400092f5:	js     0x1400202c0
   1400092fb:	mov    edx,0x4
   140009300:	lea    r8,[rbp+0x3d8]
   140009307:	mov    ecx,edx
   140009309:	call   0x14000bad0
   14000930e:	mov    r15d,eax
   140009311:	test   eax,eax
   140009313:	js     0x1400202c0
   140009319:	mov    edi,DWORD PTR [rbp+0x3d8]
   14000931f:	mov    DWORD PTR [rbp+0x84],edi
   140009325:	mov    ecx,DWORD PTR [rbp+0x60]
   140009328:	lea    r8,[rbp+0x60]
   14000932c:	mov    edx,edi
   14000932e:	call   0x14000bad0
   140009333:	mov    r15d,eax
   140009336:	test   eax,eax
   140009338:	js     0x1400202c0
   14000933e:	mov    edx,0x4
   140009343:	lea    r8,[rbp+0x2f8]
   14000934a:	mov    ecx,edx
   14000934c:	call   0x14000bad0
   140009351:	mov    r15d,eax
   140009354:	test   eax,eax
   140009356:	js     0x1400202c0
   14000935c:	mov    edi,DWORD PTR [rbp+0x2f8]
   140009362:	mov    DWORD PTR [rbp+0x84],edi
   140009368:	mov    ecx,DWORD PTR [rbp+0x60]
   14000936b:	lea    r8,[rbp+0x60]
   14000936f:	mov    edx,edi
   140009371:	call   0x14000bad0
   140009376:	mov    r15d,eax
   140009379:	test   eax,eax
   14000937b:	js     0x1400202c0
   140009381:	mov    r14d,DWORD PTR [rbp+0x60]
   140009385:	mov    DWORD PTR [rbp-0x60],r14d
   140009389:	test   r15d,r15d
   14000938c:	js     0x140020b68
   140009392:	mov    rdi,r10
   140009395:	mov    QWORD PTR [rbp-0x70],r10
   140009399:	mov    ebx,r10d
   14000939c:	mov    QWORD PTR [rbp+0x2b0],r10
   1400093a3:	mov    r13,r10
   1400093a6:	mov    QWORD PTR [rbp+0x18],r10
   1400093aa:	mov    r12d,r10d
   1400093ad:	mov    DWORD PTR [rbp-0x78],r10d
   1400093b1:	mov    QWORD PTR [rbp+0x128],r10
   1400093b8:	mov    rsi,r10
   1400093bb:	mov    DWORD PTR [rbp+0x80],r10d
   1400093c2:	mov    QWORD PTR [rsp+0x60],r10
   1400093c7:	mov    QWORD PTR [rbp-0x30],r10
   1400093cb:	mov    DWORD PTR [rbp+0xe0],r10d
   1400093d2:	mov    QWORD PTR [rbp+0x500],r10
   1400093d9:	rdtsc  
   1400093db:	shl    rdx,0x20
   1400093df:	or     rax,rdx
   1400093e2:	mov    QWORD PTR [rbp+0x500],rax
   1400093e9:	mov    DWORD PTR [rbp+0xa0],0x8
   1400093f3:	mov    edx,DWORD PTR [rbp-0x54]
   1400093f6:	lea    r8,[rbp+0xa0]
   1400093fd:	mov    ecx,0x8
   140009402:	call   0x14000bad0
   140009407:	mov    r15d,eax
   14000940a:	test   eax,eax
   14000940c:	js     0x1400094d3
   140009412:	mov    eax,DWORD PTR [rbp+0xa0]
   140009418:	lea    rcx,[rax+0x7]
   14000941c:	and    ecx,0xfffffff8
   14000941f:	cmp    ecx,eax
   140009421:	jb     0x1400202cc
   140009427:	mov    DWORD PTR [rbp+0xa0],ecx
   14000942d:	mov    edi,ecx
   14000942f:	call   QWORD PTR [rip+0x33d8b]        # 0x14003d1c0
   140009435:	mov    r8d,edi
   140009438:	mov    edx,0x8
   14000943d:	mov    rcx,rax
   140009440:	call   QWORD PTR [rip+0x33d92]        # 0x14003d1d8
   140009446:	mov    rdi,rax
   140009449:	test   rax,rax
   14000944c:	je     0x1400202d7
   140009452:	mov    QWORD PTR [rbp+0x290],rax
   140009459:	lea    r8,[rbp+0x290]
   140009460:	mov    eax,DWORD PTR [rbp-0x58]
   140009463:	mov    edx,0x4
   140009468:	mov    rcx,rdi
   14000946b:	mov    DWORD PTR [rdi],eax
   14000946d:	call   0x14000baf0
   140009472:	mov    r15d,eax
   140009475:	test   eax,eax
   140009477:	js     0x1400202df
   14000947d:	mov    rcx,QWORD PTR [rbp+0x290]
   140009484:	lea    r8,[rbp+0x290]
   14000948b:	mov    eax,DWORD PTR [rbp-0x54]
   14000948e:	mov    DWORD PTR [rcx],eax
   140009490:	call   0x14000baf0
   140009495:	mov    r15d,eax
   140009498:	test   eax,eax
   14000949a:	js     0x1400202df
   1400094a0:	mov    ecx,DWORD PTR [rbp+0xa0]
   1400094a6:	mov    rax,QWORD PTR [rbp+0x500]
   1400094ad:	mov    QWORD PTR [rcx+rdi*1-0x8],rax
   1400094b2:	mov    r8d,DWORD PTR [rbp-0x54]
   1400094b6:	mov    rdx,QWORD PTR [rbp-0x50]
   1400094ba:	mov    rcx,QWORD PTR [rbp+0x290]
   1400094c1:	call   0x1400156f2
   1400094c6:	mov    ebx,DWORD PTR [rbp+0xa0]
   1400094cc:	mov    QWORD PTR [rbp-0x70],rdi
   1400094d0:	xor    r10d,r10d
   1400094d3:	or     r15d,0x10000000
   1400094da:	jl     0x14000a8b7
   1400094e0:	mov    QWORD PTR [rbp+0x640],r10
   1400094e7:	mov    rsi,r10
   1400094ea:	mov    QWORD PTR [rbp+0x650],r10
   1400094f1:	mov    QWORD PTR [rbp+0x660],r10
   1400094f8:	mov    QWORD PTR [rbp+0x670],r10
   1400094ff:	mov    QWORD PTR [rbp+0x320],r10
   140009506:	mov    QWORD PTR [rbp+0x630],r10
   14000950d:	mov    QWORD PTR [rbp-0x18],r10
   140009511:	test   rdi,rdi
   140009514:	je     0x1400202fb
   14000951a:	mov    r14d,ebx
   14000951d:	mov    QWORD PTR [rbp-0x48],r14
   140009521:	test   ebx,ebx
   140009523:	je     0x14002046a
   140009529:	lea    rcx,[r14+0x8]
   14000952d:	call   0x14000f134
   140009532:	mov    QWORD PTR [rbp-0x38],rax
   140009536:	mov    r8,rax
   140009539:	test   rax,rax
   14000953c:	je     0x14002046a
   140009542:	xor    r10d,r10d
   140009545:	xor    r12b,r12b
   140009548:	mov    edx,r10d
   14000954b:	test   ebx,ebx
   14000954d:	je     0x1400095e2
   140009553:	cmp    r14,0x20
   140009557:	jb     0x1400095d1
   140009559:	mov    ecx,r14d
   14000955c:	mov    eax,r14d
   14000955f:	and    ecx,0x1f
   140009562:	xorps  xmm2,xmm2
   140009565:	sub    rax,rcx
   140009568:	movdqa xmm1,xmm2
   14000956c:	nop    DWORD PTR [rax+0x0]
   140009570:	movdqu xmm0,XMMWORD PTR [rdx+rdi*1]
   140009575:	pxor   xmm0,xmm2
   140009579:	movdqa xmm2,xmm0
   14000957d:	movdqu xmm0,XMMWORD PTR [rdx+rdi*1+0x10]
   140009583:	add    rdx,0x20
   140009587:	pxor   xmm0,xmm1
   14000958b:	movdqa xmm1,xmm0
   14000958f:	cmp    rdx,rax
   140009592:	jb     0x140009570
   140009594:	pxor   xmm1,xmm2
   140009598:	movdqa xmm0,xmm1
   14000959c:	psrldq xmm0,0x8
   1400095a1:	pxor   xmm1,xmm0
   1400095a5:	movdqa xmm0,xmm1
   1400095a9:	psrldq xmm0,0x4
   1400095ae:	pxor   xmm1,xmm0
   1400095b2:	movdqa xmm0,xmm1
   1400095b6:	psrldq xmm0,0x2
   1400095bb:	pxor   xmm1,xmm0
   1400095bf:	movdqa xmm0,xmm1
   1400095c3:	psrldq xmm0,0x1
   1400095c8:	pxor   xmm1,xmm0
   1400095cc:	movd   r12d,xmm1
   1400095d1:	cmp    rdx,r14
   1400095d4:	jae    0x1400095e2
   1400095d6:	xor    r12b,BYTE PTR [rdx+rdi*1]
   1400095da:	inc    rdx
   1400095dd:	cmp    rdx,r14
   1400095e0:	jb     0x1400095d6
   1400095e2:	or     r11d,0xffffffff
   1400095e6:	mov    DWORD PTR [rbp+0x8],r10d
   1400095ea:	mov    rdx,r14
   1400095ed:	mov    DWORD PTR [rbp-0x8],r11d
   1400095f1:	mov    DWORD PTR [rbp-0x80],r10d
   1400095f5:	mov    rsi,rdi
   1400095f8:	mov    rbx,r8
   1400095fb:	mov    edi,r10d
   1400095fe:	mov    r13d,r10d
   140009601:	and    edx,0x7
   140009604:	jne    0x140020306
   14000960a:	mov    r15,r14
   14000960d:	shr    r15,0x3
   140009611:	test   r15,r15
   140009614:	je     0x140009934
   14000961a:	mov    r14d,DWORD PTR [rbp-0x80]
   14000961e:	add    rbx,0x7
   140009622:	add    rsi,0x2
   140009626:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009630:	movzx  eax,BYTE PTR [rsi-0x1]
   140009634:	movzx  r10d,BYTE PTR [rsi-0x2]
   140009639:	movzx  r9d,BYTE PTR [rsi+0x2]
   14000963e:	lea    rsi,[rsi+0x8]
   140009642:	shl    r10d,0x8
   140009646:	or     r10d,eax
   140009649:	shl    r9d,0x8
   14000964d:	movzx  eax,BYTE PTR [rsi-0x8]
   140009651:	shl    r10d,0x8
   140009655:	or     r10d,eax
   140009658:	movzx  eax,BYTE PTR [rsi-0x7]
   14000965c:	shl    r10d,0x8
   140009660:	or     r10d,eax
   140009663:	movzx  eax,BYTE PTR [rsi-0x5]
   140009667:	or     r9d,eax
   14000966a:	movzx  eax,BYTE PTR [rsi-0x4]
   14000966e:	shl    r9d,0x8
   140009672:	or     r9d,eax
   140009675:	movzx  eax,BYTE PTR [rsi-0x3]
   140009679:	shl    r9d,0x8
   14000967d:	or     r9d,eax
   140009680:	xor    r11d,r9d
   140009683:	mov    eax,r11d
   140009686:	mov    edx,r11d
   140009689:	xor    eax,0xc221
   14000968e:	ror    edx,0xc
   140009691:	imul   ecx,eax,0x844b
   140009697:	sub    ecx,edx
   140009699:	xor    ecx,r10d
   14000969c:	xor    edi,ecx
   14000969e:	mov    eax,edi
   1400096a0:	xor    eax,0x3af61d2e
   1400096a5:	ror    eax,1
   1400096a7:	imul   ecx,eax,0xc221
   1400096ad:	mov    eax,edi
   1400096af:	rol    eax,0xf
   1400096b2:	xor    ecx,eax
   1400096b4:	xor    r11d,ecx
   1400096b7:	mov    eax,r11d
   1400096ba:	mov    edx,r11d
   1400096bd:	xor    eax,0x3af6
   1400096c2:	ror    edx,0xd
   1400096c5:	imul   ecx,eax,0x1d2e
   1400096cb:	add    edx,ecx
   1400096cd:	xor    edi,edx
   1400096cf:	mov    eax,edi
   1400096d1:	xor    eax,0x1d2e
   1400096d6:	rol    eax,0x2
   1400096d9:	imul   ecx,eax,0x3af6
   1400096df:	mov    eax,edi
   1400096e1:	rol    eax,0x3
   1400096e4:	add    ecx,eax
   1400096e6:	xor    r11d,ecx
   1400096e9:	mov    eax,r11d
   1400096ec:	not    eax
   1400096ee:	ror    eax,0xa
   1400096f1:	add    eax,0x844b
   1400096f6:	imul   eax,eax,0x3af6
   1400096fc:	xor    edi,eax
   1400096fe:	mov    eax,edi
   140009700:	xor    eax,0x3af61d2e
   140009705:	rol    eax,0x4
   140009708:	imul   ecx,eax,0xc221
   14000970e:	mov    eax,edi
   140009710:	shr    eax,0x5
   140009713:	sub    ecx,eax
   140009715:	xor    r11d,ecx
   140009718:	mov    eax,r11d
   14000971b:	xor    eax,0x3af6
   140009720:	rol    eax,1
   140009722:	imul   ecx,eax,0x1d2e
   140009728:	mov    eax,r11d
   14000972b:	shr    eax,1
   14000972d:	add    ecx,eax
   14000972f:	xor    edi,ecx
   140009731:	mov    eax,edi
   140009733:	xor    eax,0xc221
   140009738:	rol    eax,0x7
   14000973b:	imul   ecx,eax,0x3af6
   140009741:	mov    eax,edi
   140009743:	ror    eax,0xb
   140009746:	xor    ecx,eax
   140009748:	xor    r11d,ecx
   14000974b:	lea    eax,[r11-0xc221]
   140009752:	imul   ecx,eax,0x844b
   140009758:	mov    eax,r11d
   14000975b:	shr    eax,0xf
   14000975e:	sub    ecx,eax
   140009760:	xor    edi,ecx
   140009762:	mov    eax,edi
   140009764:	ror    eax,0xa
   140009767:	sub    eax,0xc221
   14000976c:	imul   eax,eax,0x1d2e
   140009772:	xor    r11d,eax
   140009775:	mov    r8d,r11d
   140009778:	xor    r8d,edi
   14000977b:	xor    r8d,0xf8d79965
   140009782:	lea    edi,[r8-0x3af6]
   140009789:	xor    edi,r11d
   14000978c:	xor    edi,0xc221844b
   140009792:	lea    eax,[rdi-0x3af6a179]
   140009798:	xor    r8d,eax
   14000979b:	lea    eax,[rdi-0x1d2e]
   1400097a1:	rol    eax,0x3
   1400097a4:	imul   ecx,eax,0x844b
   1400097aa:	mov    eax,edi
   1400097ac:	shr    eax,0xf
   1400097af:	xor    ecx,eax
   1400097b1:	xor    r8d,ecx
   1400097b4:	lea    eax,[r8-0x1d2e]
   1400097bb:	imul   ecx,eax,0xc221
   1400097c1:	mov    eax,r8d
   1400097c4:	shr    eax,0xd
   1400097c7:	sub    ecx,eax
   1400097c9:	mov    eax,0xc221844b
   1400097ce:	xor    edi,ecx
   1400097d0:	sub    eax,edi
   1400097d2:	ror    eax,0x9
   1400097d5:	imul   ecx,eax,0x1d2e
   1400097db:	mov    eax,edi
   1400097dd:	ror    eax,0xb
   1400097e0:	xor    ecx,eax
   1400097e2:	xor    r8d,ecx
   1400097e5:	lea    eax,[r8+0x3dde40bf]
   1400097ec:	xor    edi,eax
   1400097ee:	mov    eax,edi
   1400097f0:	mov    edx,edi
   1400097f2:	xor    eax,0xc221
   1400097f7:	ror    edx,0x7
   1400097fa:	imul   ecx,eax,0x844b
   140009800:	sub    ecx,edx
   140009802:	xor    r8d,ecx
   140009805:	mov    eax,r8d
   140009808:	xor    eax,0x3af6
   14000980d:	rol    eax,0x4
   140009810:	imul   ecx,eax,0xc221
   140009816:	mov    eax,r8d
   140009819:	ror    eax,0x10
   14000981c:	sub    ecx,eax
   14000981e:	mov    eax,0xc221844b
   140009823:	xor    edi,ecx
   140009825:	sub    eax,edi
   140009827:	ror    eax,0xa
   14000982a:	imul   ecx,eax,0x1d2e
   140009830:	mov    eax,edi
   140009832:	ror    eax,0x4
   140009835:	add    ecx,eax
   140009837:	xor    r8d,ecx
   14000983a:	lea    eax,[r8+0x3dde7bb5]
   140009841:	ror    eax,0x4
   140009844:	imul   ecx,eax,0x3af6
   14000984a:	mov    eax,r8d
   14000984d:	ror    eax,0x9
   140009850:	xor    ecx,eax
   140009852:	xor    edi,ecx
   140009854:	mov    eax,edi
   140009856:	xor    eax,0x3af61d2e
   14000985b:	rol    eax,0x8
   14000985e:	imul   ecx,eax,0x844b
   140009864:	mov    eax,edi
   140009866:	rol    eax,0x2
   140009869:	sub    ecx,eax
   14000986b:	xor    r8d,ecx
   14000986e:	lea    rbx,[rbx+0x8]
   140009872:	mov    eax,0x3af61d2e
   140009877:	sub    eax,r8d
   14000987a:	ror    eax,0xb
   14000987d:	imul   ecx,eax,0xc221
   140009883:	mov    eax,r8d
   140009886:	ror    eax,0xc
   140009889:	sub    ecx,eax
   14000988b:	xor    edi,ecx
   14000988d:	mov    eax,edi
   14000988f:	xor    eax,0xc221
   140009894:	imul   ecx,eax,0x1d2e
   14000989a:	mov    eax,edi
   14000989c:	shr    eax,0x8
   14000989f:	xor    ecx,eax
   1400098a1:	xor    r8d,ecx
   1400098a4:	xor    edi,r8d
   1400098a7:	xor    r8d,r14d
   1400098aa:	mov    DWORD PTR [rbp+0x8],r8d
   1400098ae:	xor    edi,0xf8d79965
   1400098b4:	xor    edi,r13d
   1400098b7:	mov    r14d,r10d
   1400098ba:	mov    DWORD PTR [rbp-0x8],edi
   1400098bd:	mov    r13d,r9d
   1400098c0:	mov    BYTE PTR [rbx-0xc],r8b
   1400098c4:	movzx  eax,BYTE PTR [rbp-0x8]
   1400098c8:	ror    DWORD PTR [rbp+0x8],0x8
   1400098cc:	mov    BYTE PTR [rbx-0x8],al
   1400098cf:	ror    DWORD PTR [rbp-0x8],0x8
   1400098d3:	movzx  eax,BYTE PTR [rbp+0x8]
   1400098d7:	mov    BYTE PTR [rbx-0xd],al
   1400098da:	movzx  eax,BYTE PTR [rbp-0x8]
   1400098de:	ror    DWORD PTR [rbp+0x8],0x8
   1400098e2:	mov    BYTE PTR [rbx-0x9],al
   1400098e5:	ror    DWORD PTR [rbp-0x8],0x8
   1400098e9:	movzx  eax,BYTE PTR [rbp+0x8]
   1400098ed:	mov    BYTE PTR [rbx-0xe],al
   1400098f0:	ror    DWORD PTR [rbp+0x8],0x8
   1400098f4:	movzx  eax,BYTE PTR [rbp-0x8]
   1400098f8:	mov    BYTE PTR [rbx-0xa],al
   1400098fb:	ror    DWORD PTR [rbp-0x8],0x8
   1400098ff:	movzx  eax,BYTE PTR [rbp+0x8]
   140009903:	mov    BYTE PTR [rbx-0xf],al
   140009906:	movzx  eax,BYTE PTR [rbp-0x8]
   14000990a:	mov    BYTE PTR [rbx-0xb],al
   14000990d:	mov    edi,DWORD PTR [rbp+0x8]
   140009910:	mov    r11d,DWORD PTR [rbp-0x8]
   140009914:	ror    edi,0x8
   140009917:	ror    r11d,0x8
   14000991b:	mov    DWORD PTR [rbp+0x8],edi
   14000991e:	mov    DWORD PTR [rbp-0x8],r11d
   140009922:	sub    r15,0x1
   140009926:	jne    0x140009630
   14000992c:	mov    r14,QWORD PTR [rbp-0x48]
   140009930:	mov    r8,QWORD PTR [rbp-0x38]
   140009934:	movzx  eax,r12b
   140009938:	lea    rbx,[r14+0x8]
   14000993c:	mov    QWORD PTR [r8+r14*1],rax
   140009940:	lea    rsi,[rip+0x44a79]        # 0x14004e3c0
   140009947:	lea    rax,[rip+0x44b12]        # 0x14004e460
   14000994e:	mov    QWORD PTR [rbp+0x320],r8
   140009955:	mov    QWORD PTR [rbp+0x640],rax
   14000995c:	mov    QWORD PTR [rbp+0x630],rbx
   140009963:	mov    QWORD PTR [rbp+0x650],0x8
   14000996e:	mov    QWORD PTR [rbp+0x660],rsi
   140009975:	mov    QWORD PTR [rbp+0x670],0xa0
   140009980:	call   QWORD PTR [rip+0x3383a]        # 0x14003d1c0
   140009986:	mov    edx,0x8
   14000998b:	mov    rcx,rax
   14000998e:	lea    r8d,[rdx+0x28]
   140009992:	call   QWORD PTR [rip+0x33840]        # 0x14003d1d8
   140009998:	mov    rdi,rax
   14000999b:	test   rax,rax
   14000999e:	je     0x1400203c9
   1400099a4:	mov    DWORD PTR [rax],ebx
   1400099a6:	mov    ebx,ebx
   1400099a8:	call   QWORD PTR [rip+0x33812]        # 0x14003d1c0
   1400099ae:	mov    r8d,ebx
   1400099b1:	mov    edx,0x8
   1400099b6:	mov    rcx,rax
   1400099b9:	call   QWORD PTR [rip+0x33819]        # 0x14003d1d8
   1400099bf:	test   rax,rax
   1400099c2:	je     0x1400203db
   1400099c8:	mov    rdx,QWORD PTR [rbp-0x38]
   1400099cc:	mov    r8d,ebx
   1400099cf:	mov    rcx,rax
   1400099d2:	mov    QWORD PTR [rdi+0x8],rax
   1400099d6:	call   0x1400156f2
   1400099db:	mov    DWORD PTR [rdi+0x10],0xa0
   1400099e2:	call   QWORD PTR [rip+0x337d8]        # 0x14003d1c0
   1400099e8:	mov    edx,0x8
   1400099ed:	mov    r8d,0xa0
   1400099f3:	mov    rcx,rax
   1400099f6:	call   QWORD PTR [rip+0x337dc]        # 0x14003d1d8
   1400099fc:	test   rax,rax
   1400099ff:	je     0x1400203db
   140009a05:	mov    QWORD PTR [rdi+0x18],rax
   140009a09:	movups xmm0,XMMWORD PTR [rsi]
   140009a0c:	movups XMMWORD PTR [rax],xmm0
   140009a0f:	movups xmm1,XMMWORD PTR [rsi+0x10]
   140009a13:	movups XMMWORD PTR [rax+0x10],xmm1
   140009a17:	movups xmm0,XMMWORD PTR [rsi+0x20]
   140009a1b:	movups XMMWORD PTR [rax+0x20],xmm0
   140009a1f:	movups xmm1,XMMWORD PTR [rsi+0x30]
   140009a23:	movups XMMWORD PTR [rax+0x30],xmm1
   140009a27:	movups xmm0,XMMWORD PTR [rsi+0x40]
   140009a2b:	movups XMMWORD PTR [rax+0x40],xmm0
   140009a2f:	movups xmm1,XMMWORD PTR [rsi+0x50]
   140009a33:	movups XMMWORD PTR [rax+0x50],xmm1
   140009a37:	movups xmm0,XMMWORD PTR [rsi+0x60]
   140009a3b:	movups XMMWORD PTR [rax+0x60],xmm0
   140009a3f:	movups xmm1,XMMWORD PTR [rsi+0x70]
   140009a43:	movups XMMWORD PTR [rax+0x70],xmm1
   140009a47:	movups xmm0,XMMWORD PTR [rsi+0x80]
   140009a4e:	movups XMMWORD PTR [rax+0x80],xmm0
   140009a55:	movups xmm1,XMMWORD PTR [rsi+0x90]
   140009a5c:	movups XMMWORD PTR [rax+0x90],xmm1
   140009a63:	mov    DWORD PTR [rdi+0x20],0x8
   140009a6a:	call   QWORD PTR [rip+0x33750]        # 0x14003d1c0
   140009a70:	mov    edx,0x8
   140009a75:	mov    rcx,rax
   140009a78:	mov    r8d,edx
   140009a7b:	call   QWORD PTR [rip+0x33757]        # 0x14003d1d8
   140009a81:	test   rax,rax
   140009a84:	je     0x1400203db
   140009a8a:	mov    QWORD PTR [rdi+0x28],rax
   140009a8e:	xor    r10d,r10d
   140009a91:	movsd  xmm0,QWORD PTR [rip+0x449c7]        # 0x14004e460
   140009a99:	mov    r15d,r10d
   140009a9c:	movsd  QWORD PTR [rax],xmm0
   140009aa0:	mov    rsi,rdi
   140009aa3:	mov    r12d,DWORD PTR [rbp-0x78]
   140009aa7:	mov    r13,QWORD PTR [rbp+0x18]
   140009aab:	test   r15d,r15d
   140009aae:	js     0x140009aba
   140009ab0:	mov    QWORD PTR [rbp+0x2b0],rsi
   140009ab7:	mov    rsi,r10
   140009aba:	mov    rdi,QWORD PTR [rbp+0x320]
   140009ac1:	test   rdi,rdi
   140009ac4:	je     0x140020475
   140009aca:	call   QWORD PTR [rip+0x336f0]        # 0x14003d1c0
   140009ad0:	mov    r8,rdi
   140009ad3:	xor    edx,edx
   140009ad5:	mov    rcx,rax
   140009ad8:	call   QWORD PTR [rip+0x33702]        # 0x14003d1e0
   140009ade:	xor    ebx,ebx
   140009ae0:	mov    QWORD PTR [rbp+0x320],rbx
   140009ae7:	test   rsi,rsi
   140009aea:	jne    0x14002047c
   140009af0:	mov    r14d,DWORD PTR [rbp-0x60]
   140009af4:	or     r15d,0x10000000
   140009afb:	jl     0x14000a8b2
   140009b01:	mov    rbx,QWORD PTR [rbp+0x2b0]
   140009b08:	lea    r8,[rbp+0x5c]
   140009b0c:	mov    ecx,0x4
   140009b11:	mov    DWORD PTR [rbp+0x5c],0x4
   140009b18:	mov    edx,DWORD PTR [rbx]
   140009b1a:	call   0x14000bad0
   140009b1f:	mov    r15d,eax
   140009b22:	test   eax,eax
   140009b24:	js     0x1400204f9
   140009b2a:	mov    edx,ecx
   140009b2c:	lea    r8,[rbp+0x5c]
   140009b30:	mov    ecx,DWORD PTR [rbp+0x5c]
   140009b33:	call   0x14000bad0
   140009b38:	mov    r15d,eax
   140009b3b:	test   eax,eax
   140009b3d:	js     0x1400204f9
   140009b43:	mov    edx,DWORD PTR [rbx+0x10]
   140009b46:	lea    r8,[rbp+0x5c]
   140009b4a:	mov    ecx,DWORD PTR [rbp+0x5c]
   140009b4d:	call   0x14000bad0
   140009b52:	mov    r15d,eax
   140009b55:	test   eax,eax
   140009b57:	js     0x1400204f9
   140009b5d:	mov    ecx,DWORD PTR [rbp+0x5c]
   140009b60:	lea    r8,[rbp+0x5c]
   140009b64:	mov    edx,0x4
   140009b69:	call   0x14000bad0
   140009b6e:	mov    r15d,eax
   140009b71:	test   eax,eax
   140009b73:	js     0x1400204f9
   140009b79:	mov    edx,DWORD PTR [rbx+0x20]
   140009b7c:	lea    r8,[rbp+0x5c]
   140009b80:	mov    ecx,DWORD PTR [rbp+0x5c]
   140009b83:	call   0x14000bad0
   140009b88:	mov    r15d,eax
   140009b8b:	test   eax,eax
   140009b8d:	js     0x1400204f9
   140009b93:	mov    eax,DWORD PTR [rbp+0x5c]
   140009b96:	mov    DWORD PTR [rbp+0x218],eax
   140009b9c:	test   r15d,r15d
   140009b9f:	js     0x140009cef
   140009ba5:	mov    edi,eax
   140009ba7:	call   QWORD PTR [rip+0x33613]        # 0x14003d1c0
   140009bad:	mov    r8d,edi
   140009bb0:	mov    edx,0x8
   140009bb5:	mov    rcx,rax
   140009bb8:	call   QWORD PTR [rip+0x3361a]        # 0x14003d1d8
   140009bbe:	mov    rsi,rax
   140009bc1:	test   rax,rax
   140009bc4:	je     0x140020504
   140009bca:	mov    QWORD PTR [rbp+0xb8],rax
   140009bd1:	lea    r8,[rbp+0xb8]
   140009bd8:	mov    eax,DWORD PTR [rbx]
   140009bda:	mov    edx,0x4
   140009bdf:	mov    rcx,rsi
   140009be2:	mov    DWORD PTR [rsi],eax
   140009be4:	call   0x14000baf0
   140009be9:	mov    r15d,eax
   140009bec:	test   eax,eax
   140009bee:	js     0x14002050f
   140009bf4:	mov    r8d,DWORD PTR [rbx]
   140009bf7:	mov    rdx,QWORD PTR [rbx+0x8]
   140009bfb:	mov    rcx,QWORD PTR [rbp+0xb8]
   140009c02:	call   0x1400156f2
   140009c07:	mov    edx,DWORD PTR [rbx]
   140009c09:	lea    r8,[rbp+0xb8]
   140009c10:	mov    rcx,QWORD PTR [rbp+0xb8]
   140009c17:	call   0x14000baf0
   140009c1c:	mov    r15d,eax
   140009c1f:	test   eax,eax
   140009c21:	js     0x14002050f
   140009c27:	mov    rcx,QWORD PTR [rbp+0xb8]
   140009c2e:	lea    r8,[rbp+0xb8]
   140009c35:	mov    eax,DWORD PTR [rbx+0x10]
   140009c38:	mov    edx,0x4
   140009c3d:	mov    DWORD PTR [rcx],eax
   140009c3f:	call   0x14000baf0
   140009c44:	mov    r15d,eax
   140009c47:	test   eax,eax
   140009c49:	js     0x14002050f
   140009c4f:	mov    r8d,DWORD PTR [rbx+0x10]
   140009c53:	mov    rdx,QWORD PTR [rbx+0x18]
   140009c57:	mov    rcx,QWORD PTR [rbp+0xb8]
   140009c5e:	call   0x1400156f2
   140009c63:	mov    edx,DWORD PTR [rbx+0x10]
   140009c66:	lea    r8,[rbp+0xb8]
   140009c6d:	mov    rcx,QWORD PTR [rbp+0xb8]
   140009c74:	call   0x14000baf0
   140009c79:	mov    r15d,eax
   140009c7c:	test   eax,eax
   140009c7e:	js     0x14002050f
   140009c84:	mov    rcx,QWORD PTR [rbp+0xb8]
   140009c8b:	lea    r8,[rbp+0xb8]
   140009c92:	mov    eax,DWORD PTR [rbx+0x20]
   140009c95:	mov    edx,0x4
   140009c9a:	mov    DWORD PTR [rcx],eax
   140009c9c:	call   0x14000baf0
   140009ca1:	mov    r15d,eax
   140009ca4:	test   eax,eax
   140009ca6:	js     0x14002050f
   140009cac:	mov    r8d,DWORD PTR [rbx+0x20]
   140009cb0:	mov    rdx,QWORD PTR [rbx+0x28]
   140009cb4:	mov    rcx,QWORD PTR [rbp+0xb8]
   140009cbb:	call   0x1400156f2
   140009cc0:	mov    edx,DWORD PTR [rbx+0x20]
   140009cc3:	lea    r8,[rbp+0xb8]
   140009cca:	mov    rcx,QWORD PTR [rbp+0xb8]
   140009cd1:	call   0x14000baf0
   140009cd6:	mov    r15d,eax
   140009cd9:	test   eax,eax
   140009cdb:	js     0x14002050f
   140009ce1:	mov    r12d,DWORD PTR [rbp+0x218]
   140009ce8:	mov    r13,rsi
   140009ceb:	mov    QWORD PTR [rbp+0x18],rsi
   140009cef:	or     r15d,0x10000000
   140009cf6:	jl     0x14000a8b2
   140009cfc:	xor    eax,eax
   140009cfe:	mov    DWORD PTR [rbp+0x1d8],0x8
   140009d08:	mov    QWORD PTR [rbp+0x680],rax
   140009d0f:	mov    r9d,eax
   140009d12:	mov    DWORD PTR [rbp+0x438],eax
   140009d18:	mov    r10d,eax
   140009d1b:	mov    QWORD PTR [rbp+0x538],rax
   140009d22:	mov    DWORD PTR [rbp+0x308],eax
   140009d28:	lea    r8,[rbp+0x1d8]
   140009d2f:	mov    edx,r14d
   140009d32:	lea    ecx,[rax+0x8]
   140009d35:	call   0x14000bad0
   140009d3a:	mov    r15d,eax
   140009d3d:	or     r15d,0x10000000
   140009d44:	jl     0x14002053a
   140009d4a:	mov    eax,DWORD PTR [rbp+0x1d8]
   140009d50:	lea    rcx,[rax+0x7]
   140009d54:	and    ecx,0xfffffff8
   140009d57:	cmp    ecx,eax
   140009d59:	jb     0x140020529
   140009d5f:	mov    DWORD PTR [rbp+0x248],ecx
   140009d65:	lea    r8,[rbp+0x248]
   140009d6c:	mov    edx,0x8
   140009d71:	call   0x14000bad0
   140009d76:	mov    r15d,eax
   140009d79:	test   eax,eax
   140009d7b:	js     0x140009d89
   140009d7d:	mov    eax,DWORD PTR [rbp+0x248]
   140009d83:	mov    DWORD PTR [rbp+0x3e8],eax
   140009d89:	test   r15d,r15d
   140009d8c:	js     0x14002053a
   140009d92:	cmp    QWORD PTR [rbp-0x50],r9
   140009d96:	je     0x140020534
   140009d9c:	xor    r14d,r14d
   140009d9f:	cmp    DWORD PTR [rbp-0x58],0x1
   140009da3:	jbe    0x140020542
   140009da9:	mov    rcx,QWORD PTR [rbp-0x50]
   140009dad:	mov    edi,r14d
   140009db0:	mov    QWORD PTR [rbp+0x118],rcx
   140009db7:	mov    r11d,DWORD PTR [rcx]
   140009dba:	lea    r8,[rbp+0x118]
   140009dc1:	mov    edx,0x4
   140009dc6:	call   0x14000baf0
   140009dcb:	mov    r15d,eax
   140009dce:	test   eax,eax
   140009dd0:	js     0x140009e36
   140009dd2:	mov    rcx,QWORD PTR [rbp+0x118]
   140009dd9:	lea    r8,[rbp+0x118]
   140009de0:	mov    edx,r11d
   140009de3:	call   0x14000baf0
   140009de8:	mov    r15d,eax
   140009deb:	test   eax,eax
   140009ded:	js     0x140009e36
   140009def:	mov    rcx,QWORD PTR [rbp+0x118]
   140009df6:	inc    edi
   140009df8:	cmp    edi,0x1
   140009dfb:	jb     0x140009db7
   140009dfd:	mov    edi,DWORD PTR [rcx]
   140009dff:	lea    r8,[rbp+0x118]
   140009e06:	mov    edx,0x4
   140009e0b:	call   0x14000baf0
   140009e10:	mov    r15d,eax
   140009e13:	test   eax,eax
   140009e15:	js     0x140009e36
   140009e17:	mov    DWORD PTR [rbp+0x438],edi
   140009e1d:	mov    r9d,edi
   140009e20:	test   edi,edi
   140009e22:	je     0x14002054d
   140009e28:	mov    rax,QWORD PTR [rbp+0x118]
   140009e2f:	mov    QWORD PTR [rbp+0x680],rax
   140009e36:	test   r15d,r15d
   140009e39:	js     0x14000a8b2
   140009e3f:	cmp    DWORD PTR [rbp-0x58],0x2
   140009e43:	jbe    0x14002055c
   140009e49:	mov    rcx,QWORD PTR [rbp-0x50]
   140009e4d:	mov    edi,r14d
   140009e50:	mov    QWORD PTR [rbp+0x1d0],rcx
   140009e57:	lea    rdx,[rcx+0x4]
   140009e5b:	cmp    rdx,rcx
   140009e5e:	jb     0x14002058c
   140009e64:	mov    ecx,DWORD PTR [rcx]
   140009e66:	add    rcx,rdx
   140009e69:	mov    QWORD PTR [rbp+0x1d0],rdx
   140009e70:	cmp    rcx,rdx
   140009e73:	jb     0x14002058c
   140009e79:	inc    edi
   140009e7b:	mov    QWORD PTR [rbp+0x1d0],rcx
   140009e82:	cmp    edi,0x2
   140009e85:	jb     0x140009e57
   140009e87:	mov    edi,DWORD PTR [rcx]
   140009e89:	lea    r8,[rbp+0x1d0]
   140009e90:	mov    edx,0x4
   140009e95:	call   0x14000baf0
   140009e9a:	mov    r15d,eax
   140009e9d:	test   eax,eax
   140009e9f:	js     0x140009ec0
   140009ea1:	mov    DWORD PTR [rbp+0x308],edi
   140009ea7:	mov    r10d,edi
   140009eaa:	test   edi,edi
   140009eac:	je     0x140020567
   140009eb2:	mov    rax,QWORD PTR [rbp+0x1d0]
   140009eb9:	mov    QWORD PTR [rbp+0x538],rax
   140009ec0:	test   r15d,r15d
   140009ec3:	js     0x14000a8b2
   140009ec9:	mov    DWORD PTR [rbp+0x6c],edx
   140009ecc:	lea    r8,[rbp+0x6c]
   140009ed0:	mov    edx,DWORD PTR [rbp+0x3e8]
   140009ed6:	mov    ecx,0x4
   140009edb:	call   0x14000bad0
   140009ee0:	mov    r15d,eax
   140009ee3:	test   eax,eax
   140009ee5:	js     0x140020576
   140009eeb:	mov    edx,ecx
   140009eed:	lea    r8,[rbp+0x6c]
   140009ef1:	mov    ecx,DWORD PTR [rbp+0x6c]
   140009ef4:	call   0x14000bad0
   140009ef9:	mov    r15d,eax
   140009efc:	test   eax,eax
   140009efe:	js     0x140020576
   140009f04:	mov    ecx,DWORD PTR [rbp+0x6c]
   140009f07:	lea    r8,[rbp+0x6c]
   140009f0b:	mov    edx,r9d
   140009f0e:	call   0x14000bad0
   140009f13:	mov    r15d,eax
   140009f16:	test   eax,eax
   140009f18:	js     0x140020576
   140009f1e:	mov    ecx,DWORD PTR [rbp+0x6c]
   140009f21:	lea    r8,[rbp+0x6c]
   140009f25:	mov    edx,0x4
   140009f2a:	call   0x14000bad0
   140009f2f:	mov    r15d,eax
   140009f32:	test   eax,eax
   140009f34:	js     0x140020576
   140009f3a:	mov    ecx,DWORD PTR [rbp+0x6c]
   140009f3d:	lea    r8,[rbp+0x6c]
   140009f41:	mov    edx,r10d
   140009f44:	call   0x14000bad0
   140009f49:	mov    r15d,eax
   140009f4c:	test   eax,eax
   140009f4e:	js     0x140020576
   140009f54:	mov    eax,DWORD PTR [rbp+0x6c]
   140009f57:	mov    DWORD PTR [rbp+0x318],eax
   140009f5d:	test   r15d,r15d
   140009f60:	js     0x14000a8b2
   140009f66:	cmp    eax,0x400000
   140009f6b:	ja     0x140020581
   140009f71:	mov    DWORD PTR [rbp+0x80],eax
   140009f77:	test   r15d,r15d
   140009f7a:	js     0x14000a8b2
   140009f80:	mov    edi,DWORD PTR [rbp+0x80]
   140009f86:	mov    r15d,r14d
   140009f89:	call   QWORD PTR [rip+0x33231]        # 0x14003d1c0
   140009f8f:	mov    r8d,edi
   140009f92:	mov    edx,0x8
   140009f97:	mov    rcx,rax
   140009f9a:	call   QWORD PTR [rip+0x33238]        # 0x14003d1d8
   140009fa0:	test   rax,rax
   140009fa3:	je     0x140020597
   140009fa9:	mov    rbx,rax
   140009fac:	mov    QWORD PTR [rbp+0x128],rax
   140009fb3:	or     r15d,0x10000000
   140009fba:	jl     0x14000a8b2
   140009fc0:	test   r13,r13
   140009fc3:	je     0x1400205a9
   140009fc9:	test   rbx,rbx
   140009fcc:	je     0x1400205b4
   140009fd2:	lea    r8,[rbp+0x5f8]
   140009fd9:	mov    ecx,0x1
   140009fde:	lea    rdx,[rip+0x34b0b]        # 0x14003eaf0
   140009fe5:	call   QWORD PTR [rip+0x33255]        # 0x14003d240
   140009feb:	test   eax,eax
   140009fed:	je     0x1400205bf
   140009ff3:	mov    rcx,QWORD PTR [rbp+0x5f8]
   140009ffa:	lea    rdx,[rip+0x34acf]        # 0x14003ead0
   14000a001:	call   QWORD PTR [rip+0x33221]        # 0x14003d228
   14000a007:	mov    rdi,rax
   14000a00a:	test   rax,rax
   14000a00d:	je     0x1400205bf
   14000a013:	mov    eax,DWORD PTR [rbp+0x80]
   14000a019:	mov    rcx,rdi
   14000a01c:	mov    DWORD PTR [rbp+0x6cc],eax
   14000a022:	mov    QWORD PTR [rbp+0x6b8],r13
   14000a029:	mov    DWORD PTR [rbp+0x6c8],r12d
   14000a030:	mov    QWORD PTR [rbp+0x6c0],rbx
   14000a037:	mov    DWORD PTR [rbp+0x6d0],r14d
   14000a03e:	call   QWORD PTR [rip+0x336e4]        # 0x14003d728
   14000a044:	xor    r9d,r9d
   14000a047:	lea    rdx,[rbp+0x6b8]
   14000a04e:	lea    r8d,[r9+0x20]
   14000a052:	lea    ecx,[r8+0x66]
   14000a056:	call   rdi
   14000a058:	mov    r15d,eax
   14000a05b:	or     r15d,0x10000000
   14000a062:	jl     0x1400205ed
   14000a068:	mov    edx,DWORD PTR [rbp+0x6cc]
   14000a06e:	mov    DWORD PTR [rbp+0x80],edx
   14000a074:	cmp    r15d,0xd0000023
   14000a07b:	je     0x1400205f8
   14000a081:	test   r15d,r15d
   14000a084:	js     0x14000a8b2
   14000a08a:	mov    QWORD PTR [rbp-0x18],r14
   14000a08e:	cmp    edx,0x4
   14000a091:	jb     0x140020603
   14000a097:	mov    r14d,DWORD PTR [rbx]
   14000a09a:	lea    r13,[rbx+0x4]
   14000a09e:	cmp    r13,rbx
   14000a0a1:	jb     0x1400207a1
   14000a0a7:	lea    eax,[rdx-0x4]
   14000a0aa:	cmp    eax,r14d
   14000a0ad:	jb     0x14002060e
   14000a0b3:	lea    rdi,[r14+r13*1]
   14000a0b7:	cmp    rdi,r13
   14000a0ba:	jb     0x1400207a1
   14000a0c0:	lea    ecx,[r14+0x4]
   14000a0c4:	cmp    ecx,0x4
   14000a0c7:	jb     0x1400207a1
   14000a0cd:	mov    eax,edx
   14000a0cf:	sub    eax,ecx
   14000a0d1:	cmp    eax,0x4
   14000a0d4:	jb     0x140020619
   14000a0da:	mov    esi,DWORD PTR [rdi]
   14000a0dc:	lea    r12,[rdi+0x4]
   14000a0e0:	cmp    r12,rdi
   14000a0e3:	jb     0x1400207a1
   14000a0e9:	lea    edi,[rcx+0x4]
   14000a0ec:	cmp    edi,ecx
   14000a0ee:	jb     0x1400207a1
   14000a0f4:	mov    eax,edx
   14000a0f6:	sub    eax,edi
   14000a0f8:	cmp    eax,esi
   14000a0fa:	jb     0x140020624
   14000a100:	lea    rcx,[rsi+r12*1]
   14000a104:	cmp    rcx,r12
   14000a107:	jb     0x1400207a1
   14000a10d:	lea    r8d,[rsi+rdi*1]
   14000a111:	cmp    r8d,edi
   14000a114:	jb     0x1400207a1
   14000a11a:	mov    eax,edx
   14000a11c:	sub    eax,r8d
   14000a11f:	cmp    eax,0x4
   14000a122:	jb     0x14002062f
   14000a128:	mov    ebx,DWORD PTR [rcx]
   14000a12a:	lea    rax,[rcx+0x4]
   14000a12e:	mov    QWORD PTR [rbp-0x38],rax
   14000a132:	cmp    rax,rcx
   14000a135:	jb     0x1400207a1
   14000a13b:	lea    ecx,[r8+0x4]
   14000a13f:	cmp    ecx,r8d
   14000a142:	jb     0x1400207a1
   14000a148:	mov    eax,edx
   14000a14a:	sub    eax,ecx
   14000a14c:	cmp    eax,ebx
   14000a14e:	jb     0x14002063a
   14000a154:	lea    edi,[rbx+rcx*1]
   14000a157:	cmp    edi,ecx
   14000a159:	jb     0x1400207a1
   14000a15f:	cmp    edx,edi
   14000a161:	jne    0x140020645
   14000a167:	lea    ecx,[rbx+rsi*1]
   14000a16a:	mov    eax,edx
   14000a16c:	add    ecx,r14d
   14000a16f:	add    rcx,0xc
   14000a173:	cmp    rcx,rax
   14000a176:	jne    0x140020650
   14000a17c:	call   QWORD PTR [rip+0x3303e]        # 0x14003d1c0
   14000a182:	mov    edx,0x8
   14000a187:	mov    rcx,rax
   14000a18a:	lea    r8d,[rdx+0x28]
   14000a18e:	call   QWORD PTR [rip+0x33044]        # 0x14003d1d8
   14000a194:	mov    rdi,rax
   14000a197:	test   rax,rax
   14000a19a:	je     0x14002065b
   14000a1a0:	xor    eax,eax
   14000a1a2:	mov    r15d,eax
   14000a1a5:	test   r13,r13
   14000a1a8:	je     0x1400206f6
   14000a1ae:	mov    DWORD PTR [rdi],r14d
   14000a1b1:	call   QWORD PTR [rip+0x33009]        # 0x14003d1c0
   14000a1b7:	mov    edx,0x8
   14000a1bc:	mov    rcx,rax
   14000a1bf:	mov    r8d,r14d
   14000a1c2:	call   QWORD PTR [rip+0x33010]        # 0x14003d1d8
   14000a1c8:	test   rax,rax
   14000a1cb:	je     0x14002066d
   14000a1d1:	xor    ecx,ecx
   14000a1d3:	mov    QWORD PTR [rdi+0x8],rax
   14000a1d7:	mov    rcx,rax
   14000a1da:	mov    r8d,r14d
   14000a1dd:	mov    rdx,r13
   14000a1e0:	call   0x1400156f2
   14000a1e5:	xor    r14d,r14d
   14000a1e8:	test   r12,r12
   14000a1eb:	je     0x140020705
   14000a1f1:	mov    DWORD PTR [rdi+0x10],esi
   14000a1f4:	call   QWORD PTR [rip+0x32fc6]        # 0x14003d1c0
   14000a1fa:	mov    edx,0x8
   14000a1ff:	mov    rcx,rax
   14000a202:	mov    r8,rsi
   14000a205:	call   QWORD PTR [rip+0x32fcd]        # 0x14003d1d8
   14000a20b:	test   rax,rax
   14000a20e:	je     0x140020670
   14000a214:	mov    r8,rsi
   14000a217:	mov    QWORD PTR [rdi+0x18],rax
   14000a21b:	mov    rdx,r12
   14000a21e:	mov    rcx,rax
   14000a221:	mov    r15d,r14d
   14000a224:	call   0x1400156f2
   14000a229:	mov    rsi,QWORD PTR [rbp-0x38]
   14000a22d:	test   rsi,rsi
   14000a230:	je     0x140020712
   14000a236:	mov    DWORD PTR [rdi+0x20],ebx
   14000a239:	call   QWORD PTR [rip+0x32f81]        # 0x14003d1c0
   14000a23f:	mov    r8,rbx
   14000a242:	mov    edx,0x8
   14000a247:	mov    rcx,rax
   14000a24a:	call   QWORD PTR [rip+0x32f88]        # 0x14003d1d8
   14000a250:	test   rax,rax
   14000a253:	je     0x140020670
   14000a259:	mov    r8,rbx
   14000a25c:	mov    QWORD PTR [rdi+0x28],rax
   14000a260:	mov    rdx,rsi
   14000a263:	mov    rcx,rax
   14000a266:	mov    r15d,r14d
   14000a269:	call   0x1400156f2
   14000a26e:	test   r15d,r15d
   14000a271:	js     0x14002071f
   14000a277:	mov    rsi,rdi
   14000a27a:	mov    QWORD PTR [rsp+0x60],rdi
   14000a27f:	or     r15d,0x10000000
   14000a286:	jl     0x14000a8b7
   14000a28c:	mov    QWORD PTR [rbp+0x270],r14
   14000a293:	mov    rdi,r14
   14000a296:	mov    QWORD PTR [rbp+0x548],r14
   14000a29d:	mov    r15d,r14d
   14000a2a0:	test   rsi,rsi
   14000a2a3:	je     0x1400207b4
   14000a2a9:	mov    rbx,QWORD PTR [rsi+0x8]
   14000a2ad:	mov    QWORD PTR [rbp-0x48],rbx
   14000a2b1:	test   rbx,rbx
   14000a2b4:	je     0x1400207bf
   14000a2ba:	mov    eax,DWORD PTR [rsi]
   14000a2bc:	test   eax,eax
   14000a2be:	je     0x1400207ca
   14000a2c4:	mov    ecx,eax
   14000a2c6:	test   eax,eax
   14000a2c8:	je     0x1400208ae
   14000a2ce:	add    rcx,0xfffffffffffffff8
   14000a2d2:	mov    QWORD PTR [rbp-0x18],rcx
   14000a2d6:	call   0x14000f134
   14000a2db:	mov    QWORD PTR [rbp-0x10],rax
   14000a2df:	mov    r8,rax
   14000a2e2:	test   rax,rax
   14000a2e5:	je     0x1400208a7
   14000a2eb:	mov    r9,QWORD PTR [rbp-0x18]
   14000a2ef:	xor    al,al
   14000a2f1:	mov    rdx,r9
   14000a2f4:	mov    DWORD PTR [rbp-0x68],eax
   14000a2f7:	mov    DWORD PTR [rbp+0x0],r14d
   14000a2fb:	mov    rsi,rbx
   14000a2fe:	mov    rbx,r8
   14000a301:	mov    r13d,r14d
   14000a304:	and    edx,0x7
   14000a307:	jne    0x1400207d5
   14000a30d:	or     r12d,0xffffffff
   14000a311:	mov    DWORD PTR [rbp-0x20],r14d
   14000a315:	mov    r11d,r14d
   14000a318:	mov    r14,r9
   14000a31b:	shr    r14,0x3
   14000a31f:	test   r14,r14
   14000a322:	je     0x14000a643
   14000a328:	add    rbx,0x7
   14000a32c:	add    rsi,0x2
   14000a330:	movzx  eax,BYTE PTR [rsi-0x1]
   14000a334:	movzx  r10d,BYTE PTR [rsi-0x2]
   14000a339:	movzx  r9d,BYTE PTR [rsi+0x2]
   14000a33e:	lea    rsi,[rsi+0x8]
   14000a342:	shl    r10d,0x8
   14000a346:	or     r10d,eax
   14000a349:	shl    r9d,0x8
   14000a34d:	movzx  eax,BYTE PTR [rsi-0x8]
   14000a351:	shl    r10d,0x8
   14000a355:	or     r10d,eax
   14000a358:	movzx  eax,BYTE PTR [rsi-0x7]
   14000a35c:	shl    r10d,0x8
   14000a360:	or     r10d,eax
   14000a363:	movzx  eax,BYTE PTR [rsi-0x5]
   14000a367:	or     r9d,eax
   14000a36a:	xor    edi,r10d
   14000a36d:	movzx  eax,BYTE PTR [rsi-0x4]
   14000a371:	shl    r9d,0x8
   14000a375:	or     r9d,eax
   14000a378:	movzx  eax,BYTE PTR [rsi-0x3]
   14000a37c:	shl    r9d,0x8
   14000a380:	or     r9d,eax
   14000a383:	xor    r11d,r9d
   14000a386:	xor    r11d,edi
   14000a389:	xor    r11d,0x58830298
   14000a390:	lea    eax,[r11+0x7b1e05f8]
   14000a397:	rol    eax,0x5
   14000a39a:	imul   ecx,eax,0xf890
   14000a3a0:	mov    eax,r11d
   14000a3a3:	rol    eax,0xa
   14000a3a6:	add    ecx,eax
   14000a3a8:	xor    edi,ecx
   14000a3aa:	lea    eax,[rdi-0x239d0770]
   14000a3b0:	ror    eax,0x9
   14000a3b3:	imul   ecx,eax,0x84e1
   14000a3b9:	mov    eax,edi
   14000a3bb:	rol    eax,0x2
   14000a3be:	sub    ecx,eax
   14000a3c0:	xor    r11d,ecx
   14000a3c3:	lea    eax,[r11-0xf890]
   14000a3ca:	imul   ecx,eax,0xfa08
   14000a3d0:	mov    eax,r11d
   14000a3d3:	shr    eax,0xd
   14000a3d6:	sub    ecx,eax
   14000a3d8:	xor    edi,ecx
   14000a3da:	mov    eax,edi
   14000a3dc:	xor    eax,0x84e1
   14000a3e1:	rol    eax,0x6
   14000a3e4:	imul   ecx,eax,0xdc62
   14000a3ea:	mov    eax,edi
   14000a3ec:	rol    eax,0x2
   14000a3ef:	sub    ecx,eax
   14000a3f1:	mov    eax,0xdc62f890
   14000a3f6:	xor    r11d,ecx
   14000a3f9:	mov    ecx,r11d
   14000a3fc:	xor    ecx,0x84e1fa08
   14000a402:	sub    eax,ecx
   14000a404:	xor    edi,eax
   14000a406:	mov    eax,edi
   14000a408:	mov    edx,edi
   14000a40a:	xor    eax,0xf890
   14000a40f:	ror    edx,0x6
   14000a412:	imul   ecx,eax,0x84e1
   14000a418:	xor    edx,ecx
   14000a41a:	xor    r11d,edx
   14000a41d:	lea    eax,[r11-0x239d0770]
   14000a424:	ror    eax,0xf
   14000a427:	imul   ecx,eax,0xfa08
   14000a42d:	mov    eax,r11d
   14000a430:	rol    eax,0x2
   14000a433:	add    ecx,eax
   14000a435:	xor    edi,ecx
   14000a437:	lea    eax,[rdi+0x7b1e05f8]
   14000a43d:	ror    eax,0xe
   14000a440:	imul   ecx,eax,0xdc62
   14000a446:	mov    eax,edi
   14000a448:	rol    eax,0x8
   14000a44b:	sub    ecx,eax
   14000a44d:	xor    r11d,ecx
   14000a450:	mov    eax,r11d
   14000a453:	xor    eax,0x84e1fa08
   14000a458:	ror    eax,0xc
   14000a45b:	imul   ecx,eax,0xf890
   14000a461:	mov    eax,r11d
   14000a464:	ror    eax,0xa
   14000a467:	xor    ecx,eax
   14000a469:	xor    edi,ecx
   14000a46b:	mov    eax,edi
   14000a46d:	xor    eax,0xdc62
   14000a472:	imul   ecx,eax,0x84e1
   14000a478:	mov    eax,edi
   14000a47a:	shr    eax,0xa
   14000a47d:	xor    ecx,eax
   14000a47f:	xor    r11d,ecx
   14000a482:	mov    eax,r11d
   14000a485:	mov    r8d,r11d
   14000a488:	not    eax
   14000a48a:	ror    eax,0x5
   14000a48d:	imul   eax,eax,0xdc62
   14000a493:	sub    eax,0x28c168f0
   14000a498:	xor    edi,eax
   14000a49a:	xor    r8d,edi
   14000a49d:	xor    r8d,0x58830298
   14000a4a4:	lea    eax,[r8-0x7b1e05f8]
   14000a4ab:	rol    eax,0xb
   14000a4ae:	imul   ecx,eax,0xdc62
   14000a4b4:	mov    eax,r8d
   14000a4b7:	rol    eax,0xd
   14000a4ba:	add    ecx,eax
   14000a4bc:	xor    r11d,ecx
   14000a4bf:	mov    eax,r11d
   14000a4c2:	xor    eax,0x84e1fa08
   14000a4c7:	ror    eax,0x5
   14000a4ca:	imul   ecx,eax,0xf890
   14000a4d0:	mov    eax,r11d
   14000a4d3:	ror    eax,0xc
   14000a4d6:	xor    ecx,eax
   14000a4d8:	xor    r8d,ecx
   14000a4db:	lea    eax,[r8-0xf890]
   14000a4e2:	imul   ecx,eax,0x84e1
   14000a4e8:	mov    eax,r8d
   14000a4eb:	shr    eax,0x9
   14000a4ee:	sub    ecx,eax
   14000a4f0:	xor    r11d,ecx
   14000a4f3:	lea    eax,[r11+0x239c0d68]
   14000a4fa:	xor    r8d,eax
   14000a4fd:	lea    edi,[r8-0xdc62]
   14000a504:	xor    edi,r11d
   14000a507:	xor    edi,0x84e1fa08
   14000a50d:	lea    eax,[rdi+0x7b1e05f8]
   14000a513:	ror    eax,0x4
   14000a516:	imul   ecx,eax,0xf890
   14000a51c:	mov    eax,edi
   14000a51e:	ror    eax,0xb
   14000a521:	xor    ecx,eax
   14000a523:	mov    eax,0xdc62f890
   14000a528:	xor    r8d,ecx
   14000a52b:	sub    eax,r8d
   14000a52e:	ror    eax,0x7
   14000a531:	imul   ecx,eax,0x84e1
   14000a537:	mov    eax,r8d
   14000a53a:	ror    eax,0x3
   14000a53d:	add    ecx,eax
   14000a53f:	xor    edi,ecx
   14000a541:	mov    eax,edi
   14000a543:	xor    eax,0xdc62f890
   14000a548:	rol    eax,1
   14000a54a:	imul   ecx,eax,0xfa08
   14000a550:	mov    eax,edi
   14000a552:	ror    eax,0x8
   14000a555:	add    ecx,eax
   14000a557:	xor    r8d,ecx
   14000a55a:	mov    eax,r8d
   14000a55d:	mov    edx,r8d
   14000a560:	xor    eax,0xf890
   14000a565:	ror    edx,1
   14000a567:	imul   ecx,eax,0xdc62
   14000a56d:	add    edx,ecx
   14000a56f:	xor    edi,edx
   14000a571:	mov    eax,edi
   14000a573:	xor    eax,0xfa08
   14000a578:	rol    eax,1
   14000a57a:	imul   ecx,eax,0xf890
   14000a580:	lea    rbx,[rbx+0x8]
   14000a584:	mov    eax,edi
   14000a586:	rol    eax,0x8
   14000a589:	xor    ecx,eax
   14000a58b:	mov    eax,0x84e1fa08
   14000a590:	xor    r8d,ecx
   14000a593:	mov    ecx,r8d
   14000a596:	xor    ecx,0xdc62f890
   14000a59c:	sub    eax,ecx
   14000a59e:	xor    edi,eax
   14000a5a0:	lea    eax,[rdi+0x239d0770]
   14000a5a6:	ror    eax,0x3
   14000a5a9:	imul   ecx,eax,0xfa08
   14000a5af:	mov    eax,edi
   14000a5b1:	ror    eax,0x2
   14000a5b4:	xor    edi,r12d
   14000a5b7:	mov    DWORD PTR [rbp-0x20],edi
   14000a5ba:	mov    r12d,r9d
   14000a5bd:	add    ecx,eax
   14000a5bf:	xor    ecx,r13d
   14000a5c2:	mov    r13d,r10d
   14000a5c5:	xor    r8d,ecx
   14000a5c8:	mov    DWORD PTR [rbp+0x0],r8d
   14000a5cc:	mov    BYTE PTR [rbx-0xc],r8b
   14000a5d0:	movzx  eax,BYTE PTR [rbp-0x20]
   14000a5d4:	ror    DWORD PTR [rbp+0x0],0x8
   14000a5d8:	mov    BYTE PTR [rbx-0x8],al
   14000a5db:	ror    DWORD PTR [rbp-0x20],0x8
   14000a5df:	movzx  eax,BYTE PTR [rbp+0x0]
   14000a5e3:	mov    BYTE PTR [rbx-0xd],al
   14000a5e6:	movzx  eax,BYTE PTR [rbp-0x20]
   14000a5ea:	ror    DWORD PTR [rbp+0x0],0x8
   14000a5ee:	mov    BYTE PTR [rbx-0x9],al
   14000a5f1:	ror    DWORD PTR [rbp-0x20],0x8
   14000a5f5:	movzx  eax,BYTE PTR [rbp+0x0]
   14000a5f9:	mov    BYTE PTR [rbx-0xe],al
   14000a5fc:	ror    DWORD PTR [rbp+0x0],0x8
   14000a600:	movzx  eax,BYTE PTR [rbp-0x20]
   14000a604:	mov    BYTE PTR [rbx-0xa],al
   14000a607:	ror    DWORD PTR [rbp-0x20],0x8
   14000a60b:	movzx  eax,BYTE PTR [rbp+0x0]
   14000a60f:	mov    BYTE PTR [rbx-0xf],al
   14000a612:	movzx  eax,BYTE PTR [rbp-0x20]
   14000a616:	mov    BYTE PTR [rbx-0xb],al
   14000a619:	mov    edi,DWORD PTR [rbp+0x0]
   14000a61c:	mov    r11d,DWORD PTR [rbp-0x20]
   14000a620:	ror    edi,0x8
   14000a623:	ror    r11d,0x8
   14000a627:	mov    DWORD PTR [rbp+0x0],edi
   14000a62a:	mov    DWORD PTR [rbp-0x20],r11d
   14000a62e:	sub    r14,0x1
   14000a632:	jne    0x14000a330
   14000a638:	mov    r9,QWORD PTR [rbp-0x18]
   14000a63c:	mov    r8,QWORD PTR [rbp-0x10]
   14000a640:	mov    eax,DWORD PTR [rbp-0x68]
   14000a643:	xor    r14d,r14d
   14000a646:	mov    ecx,r14d
   14000a649:	test   r9,r9
   14000a64c:	je     0x14000a6e3
   14000a652:	cmp    r9,0x20
   14000a656:	jb     0x14000a6d2
   14000a658:	mov    rax,r9
   14000a65b:	mov    rdx,r9
   14000a65e:	and    eax,0x1f
   14000a661:	xorps  xmm2,xmm2
   14000a664:	sub    rdx,rax
   14000a667:	movdqa xmm1,xmm2
   14000a66b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a670:	movdqu xmm0,XMMWORD PTR [rcx+r8*1]
   14000a676:	pxor   xmm0,xmm2
   14000a67a:	movdqa xmm2,xmm0
   14000a67e:	movdqu xmm0,XMMWORD PTR [rcx+r8*1+0x10]
   14000a685:	add    rcx,0x20
   14000a689:	pxor   xmm0,xmm1
   14000a68d:	movdqa xmm1,xmm0
   14000a691:	cmp    rcx,rdx
   14000a694:	jb     0x14000a670
   14000a696:	pxor   xmm1,xmm2
   14000a69a:	movdqa xmm0,xmm1
   14000a69e:	psrldq xmm0,0x8
   14000a6a3:	pxor   xmm1,xmm0
   14000a6a7:	movdqa xmm0,xmm1
   14000a6ab:	psrldq xmm0,0x4
   14000a6b0:	pxor   xmm1,xmm0
   14000a6b4:	movdqa xmm0,xmm1
   14000a6b8:	psrldq xmm0,0x2
   14000a6bd:	pxor   xmm1,xmm0
   14000a6c1:	movdqa xmm0,xmm1
   14000a6c5:	psrldq xmm0,0x1
   14000a6ca:	pxor   xmm1,xmm0
   14000a6ce:	movd   eax,xmm1
   14000a6d2:	cmp    rcx,r9
   14000a6d5:	jae    0x14000a6e3
   14000a6d7:	xor    al,BYTE PTR [rcx+r8*1]
   14000a6db:	inc    rcx
   14000a6de:	cmp    rcx,r9
   14000a6e1:	jb     0x14000a6d7
   14000a6e3:	mov    rcx,QWORD PTR [rbp-0x48]
   14000a6e7:	movzx  eax,al
   14000a6ea:	cmp    rax,QWORD PTR [r9+rcx*1]
   14000a6ee:	jne    0x14002089a
   14000a6f4:	mov    rsi,QWORD PTR [rsp+0x60]
   14000a6f9:	mov    QWORD PTR [rbp+0x548],r9
   14000a700:	mov    QWORD PTR [rbp-0x30],r8
   14000a704:	mov    QWORD PTR [rbp+0x270],r14
   14000a70b:	mov    DWORD PTR [rbp+0xe0],r9d
   14000a712:	or     r15d,0x10000000
   14000a719:	jl     0x14000a8b7
   14000a71f:	cmp    DWORD PTR [rbp+0xe0],0x4
   14000a726:	jb     0x1400208dd
   14000a72c:	mov    edi,DWORD PTR [r8]
   14000a72f:	lea    rcx,[r8+0x4]
   14000a733:	mov    DWORD PTR [rbp-0x78],edi
   14000a736:	cmp    rcx,r8
   14000a739:	jb     0x140020932
   14000a73f:	mov    eax,DWORD PTR [rbp+0xe0]
   14000a745:	add    eax,0xfffffffc
   14000a748:	cmp    eax,0x4
   14000a74b:	jb     0x1400208e8
   14000a751:	mov    r13d,DWORD PTR [rcx]
   14000a754:	lea    rbx,[rcx+0x4]
   14000a758:	cmp    rbx,rcx
   14000a75b:	jb     0x140020932
   14000a761:	mov    eax,DWORD PTR [rbp+0xe0]
   14000a767:	add    eax,0xfffffff8
   14000a76a:	cmp    eax,r13d
   14000a76d:	jb     0x1400208f3
   14000a773:	lea    eax,[r13+0x8]
   14000a777:	cmp    eax,0x8
   14000a77a:	jb     0x140020932
   14000a780:	mov    edx,DWORD PTR [rbp+0xe0]
   14000a786:	lea    rcx,[rbx+r13*1]
   14000a78a:	lea    rax,[r8+rdx*1]
   14000a78e:	cmp    rax,rcx
   14000a791:	jb     0x1400208dd
   14000a797:	mov    rax,r8
   14000a79a:	sub    rax,rbx
   14000a79d:	sub    rax,r13
   14000a7a0:	add    rax,rdx
   14000a7a3:	cmp    rax,0x8
   14000a7a7:	jae    0x1400208dd
   14000a7ad:	xor    r8d,r8d
   14000a7b0:	mov    r12d,r8d
   14000a7b3:	mov    r15d,r8d
   14000a7b6:	mov    esi,r8d
   14000a7b9:	test   rbx,rbx
   14000a7bc:	je     0x14000a848
   14000a7c2:	lea    rdx,[rbx+r13*1]
   14000a7c6:	mov    rcx,rbx
   14000a7c9:	cmp    rdx,rbx
   14000a7cc:	jb     0x140020932
   14000a7d2:	cmp    rbx,rdx
   14000a7d5:	jae    0x14000a83f
   14000a7d7:	mov    edi,DWORD PTR [rbp+0x3f8]
   14000a7dd:	nop    DWORD PTR [rax]
   14000a7e0:	lea    rax,[rcx+0x4]
   14000a7e4:	cmp    rax,rcx
   14000a7e7:	jb     0x140020932
   14000a7ed:	cmp    rax,rdx
   14000a7f0:	ja     0x140020911
   14000a7f6:	mov    eax,DWORD PTR [rcx]
   14000a7f8:	add    eax,0x4
   14000a7fb:	cmp    eax,0x4
   14000a7fe:	jb     0x1400208fe
   14000a804:	mov    edi,eax
   14000a806:	mov    DWORD PTR [rbp+0x3f8],eax
   14000a80c:	mov    r15d,r8d
   14000a80f:	test   r15d,r15d
   14000a812:	js     0x140020909
   14000a818:	mov    eax,edi
   14000a81a:	add    rax,rcx
   14000a81d:	cmp    rax,rcx
   14000a820:	jb     0x140020932
   14000a826:	mov    rcx,rax
   14000a829:	mov    r15d,r8d
   14000a82c:	cmp    rax,rdx
   14000a82f:	ja     0x140020911
   14000a835:	inc    esi
   14000a837:	cmp    rax,rdx
   14000a83a:	jb     0x14000a7e0
   14000a83c:	mov    edi,DWORD PTR [rbp-0x78]
   14000a83f:	cmp    rcx,rdx
   14000a842:	jne    0x140020911
   14000a848:	test   r13d,r13d
   14000a84b:	je     0x14000a875
   14000a84d:	call   QWORD PTR [rip+0x3296d]        # 0x14003d1c0
   14000a853:	mov    r8,r13
   14000a856:	mov    edx,0x8
   14000a85b:	mov    rcx,rax
   14000a85e:	call   QWORD PTR [rip+0x32974]        # 0x14003d1d8
   14000a864:	mov    r12,rax
   14000a867:	test   rax,rax
   14000a86a:	je     0x14002091c
   14000a870:	xor    eax,eax
   14000a872:	mov    r15d,eax
   14000a875:	test   rbx,rbx
   14000a878:	je     0x14000a888
   14000a87a:	mov    r8,r13
   14000a87d:	mov    rdx,rbx
   14000a880:	mov    rcx,r12
   14000a883:	call   0x1400156f2
   14000a888:	mov    QWORD PTR [rbp+0xd0],r12
   14000a88f:	mov    DWORD PTR [rbp+0xcc],r13d
   14000a896:	mov    DWORD PTR [rbp+0xc8],esi
   14000a89c:	test   r15d,r15d
   14000a89f:	js     0x14000a8ad
   14000a8a1:	cmp    edi,DWORD PTR [rbp+0xc8]
   14000a8a7:	jne    0x140020927
   14000a8ad:	bts    r15d,0x1c
   14000a8b2:	mov    rsi,QWORD PTR [rsp+0x60]
   14000a8b7:	mov    rdi,QWORD PTR [rbp-0x70]
   14000a8bb:	test   rdi,rdi
   14000a8be:	je     0x14000a8d4
   14000a8c0:	call   QWORD PTR [rip+0x328fa]        # 0x14003d1c0
   14000a8c6:	mov    r8,rdi
   14000a8c9:	xor    edx,edx
   14000a8cb:	mov    rcx,rax
   14000a8ce:	call   QWORD PTR [rip+0x3290c]        # 0x14003d1e0
   14000a8d4:	mov    rbx,QWORD PTR [rbp+0x2b0]
   14000a8db:	test   rbx,rbx
   14000a8de:	je     0x140020945
   14000a8e4:	mov    rdi,QWORD PTR [rbx+0x8]
   14000a8e8:	test   rdi,rdi
   14000a8eb:	je     0x14002093d
   14000a8f1:	call   QWORD PTR [rip+0x328c9]        # 0x14003d1c0
   14000a8f7:	mov    r8,rdi
   14000a8fa:	xor    edx,edx
   14000a8fc:	mov    rcx,rax
   14000a8ff:	call   QWORD PTR [rip+0x328db]        # 0x14003d1e0
   14000a905:	xor    r14d,r14d
   14000a908:	mov    QWORD PTR [rbx+0x8],r14
   14000a90c:	mov    rdi,QWORD PTR [rbx+0x18]
   14000a910:	test   rdi,rdi
   14000a913:	je     0x14000a92d
   14000a915:	call   QWORD PTR [rip+0x328a5]        # 0x14003d1c0
   14000a91b:	mov    r8,rdi
   14000a91e:	xor    edx,edx
   14000a920:	mov    rcx,rax
   14000a923:	call   QWORD PTR [rip+0x328b7]        # 0x14003d1e0
   14000a929:	mov    QWORD PTR [rbx+0x18],r14
   14000a92d:	mov    rdi,QWORD PTR [rbx+0x28]
   14000a931:	test   rdi,rdi
   14000a934:	je     0x14000a94e
   14000a936:	call   QWORD PTR [rip+0x32884]        # 0x14003d1c0
   14000a93c:	mov    r8,rdi
   14000a93f:	xor    edx,edx
   14000a941:	mov    rcx,rax
   14000a944:	call   QWORD PTR [rip+0x32896]        # 0x14003d1e0
   14000a94a:	mov    QWORD PTR [rbx+0x28],r14
   14000a94e:	call   QWORD PTR [rip+0x3286c]        # 0x14003d1c0
   14000a954:	mov    r8,rbx
   14000a957:	xor    edx,edx
   14000a959:	mov    rcx,rax
   14000a95c:	call   QWORD PTR [rip+0x3287e]        # 0x14003d1e0
   14000a962:	mov    QWORD PTR [rbp+0x2b0],r14
   14000a969:	mov    rdi,QWORD PTR [rbp+0x18]
   14000a96d:	test   rdi,rdi
   14000a970:	je     0x14000a986
   14000a972:	call   QWORD PTR [rip+0x32848]        # 0x14003d1c0
   14000a978:	mov    r8,rdi
   14000a97b:	xor    edx,edx
   14000a97d:	mov    rcx,rax
   14000a980:	call   QWORD PTR [rip+0x3285a]        # 0x14003d1e0
   14000a986:	mov    rdi,QWORD PTR [rbp+0x128]
   14000a98d:	test   rdi,rdi
   14000a990:	je     0x14000a9a6
   14000a992:	call   QWORD PTR [rip+0x32828]        # 0x14003d1c0
   14000a998:	mov    r8,rdi
   14000a99b:	xor    edx,edx
   14000a99d:	mov    rcx,rax
   14000a9a0:	call   QWORD PTR [rip+0x3283a]        # 0x14003d1e0
   14000a9a6:	test   rsi,rsi
   14000a9a9:	je     0x14000aa22
   14000a9ab:	mov    rdi,QWORD PTR [rsi+0x8]
   14000a9af:	test   rdi,rdi
   14000a9b2:	je     0x14000a9cc
   14000a9b4:	call   QWORD PTR [rip+0x32806]        # 0x14003d1c0
   14000a9ba:	mov    r8,rdi
   14000a9bd:	xor    edx,edx
   14000a9bf:	mov    rcx,rax
   14000a9c2:	call   QWORD PTR [rip+0x32818]        # 0x14003d1e0
   14000a9c8:	mov    QWORD PTR [rsi+0x8],r14
   14000a9cc:	mov    rdi,QWORD PTR [rsi+0x18]
   14000a9d0:	test   rdi,rdi
   14000a9d3:	je     0x14000a9ed
   14000a9d5:	call   QWORD PTR [rip+0x327e5]        # 0x14003d1c0
   14000a9db:	mov    r8,rdi
   14000a9de:	xor    edx,edx
   14000a9e0:	mov    rcx,rax
   14000a9e3:	call   QWORD PTR [rip+0x327f7]        # 0x14003d1e0
   14000a9e9:	mov    QWORD PTR [rsi+0x18],r14
   14000a9ed:	mov    rdi,QWORD PTR [rsi+0x28]
   14000a9f1:	test   rdi,rdi
   14000a9f4:	je     0x14000aa0e
   14000a9f6:	call   QWORD PTR [rip+0x327c4]        # 0x14003d1c0
   14000a9fc:	mov    r8,rdi
   14000a9ff:	xor    edx,edx
   14000aa01:	mov    rcx,rax
   14000aa04:	call   QWORD PTR [rip+0x327d6]        # 0x14003d1e0
   14000aa0a:	mov    QWORD PTR [rsi+0x28],r14
   14000aa0e:	call   QWORD PTR [rip+0x327ac]        # 0x14003d1c0
   14000aa14:	mov    r8,rsi
   14000aa17:	xor    edx,edx
   14000aa19:	mov    rcx,rax
   14000aa1c:	call   QWORD PTR [rip+0x327be]        # 0x14003d1e0
   14000aa22:	mov    rdi,QWORD PTR [rbp-0x30]
   14000aa26:	test   rdi,rdi
   14000aa29:	je     0x14000aa3f
   14000aa2b:	call   QWORD PTR [rip+0x3278f]        # 0x14003d1c0
   14000aa31:	mov    r8,rdi
   14000aa34:	xor    edx,edx
   14000aa36:	mov    rcx,rax
   14000aa39:	call   QWORD PTR [rip+0x327a1]        # 0x14003d1e0
   14000aa3f:	test   r15d,r15d
   14000aa42:	js     0x140020afa
   14000aa48:	cmp    DWORD PTR [rbp+0xc8],0x1
   14000aa4f:	jb     0x14002094d
   14000aa55:	cmp    QWORD PTR [rbp+0xd0],0x0
   14000aa5d:	je     0x140020999
   14000aa63:	cmp    DWORD PTR [rbp+0xc8],0x0
   14000aa6a:	jbe    0x140020999
   14000aa70:	mov    rdi,QWORD PTR [rbp+0xd0]
   14000aa77:	lea    r8,[rbp+0x330]
   14000aa7e:	mov    edx,0x4
   14000aa83:	mov    QWORD PTR [rbp+0x330],rdi
   14000aa8a:	mov    rcx,rdi
   14000aa8d:	mov    r9d,DWORD PTR [rdi]
   14000aa90:	call   0x14000baf0
   14000aa95:	mov    r15d,eax
   14000aa98:	test   eax,eax
   14000aa9a:	js     0x140020971
   14000aaa0:	mov    DWORD PTR [rbp+0x338],r9d
   14000aaa7:	test   r9d,r9d
   14000aaaa:	je     0x140020962
   14000aab0:	mov    rax,QWORD PTR [rbp+0x330]
   14000aab7:	mov    QWORD PTR [rbp+0x658],rax
   14000aabe:	test   r15d,r15d
   14000aac1:	js     0x14002099f
   14000aac7:	cmp    r9d,edx
   14000aaca:	jne    0x140020984
   14000aad0:	mov    eax,DWORD PTR [rax]
   14000aad2:	mov    DWORD PTR [rbp+0x88],eax
   14000aad8:	test   r15d,r15d
   14000aadb:	js     0x140020afa
   14000aae1:	cmp    eax,0xd0000023
   14000aae6:	je     0x1400209aa
   14000aaec:	cmp    eax,0x8007007a
   14000aaf1:	je     0x14000aafe
   14000aaf3:	mov    r15d,eax
   14000aaf6:	test   eax,eax
   14000aaf8:	js     0x140020afa
   14000aafe:	cmp    DWORD PTR [rbp+0xc8],0x6
   14000ab05:	jne    0x1400209b9
   14000ab0b:	cmp    QWORD PTR [rbp+0xd0],0x0
   14000ab13:	je     0x1400209ce
   14000ab19:	mov    rcx,QWORD PTR [rbp+0xd0]
   14000ab20:	mov    edi,r14d
   14000ab23:	mov    QWORD PTR [rbp+0x108],rcx
   14000ab2a:	mov    r9d,DWORD PTR [rcx]
   14000ab2d:	lea    r8,[rbp+0x108]
   14000ab34:	mov    edx,0x4
   14000ab39:	call   0x14000baf0
   14000ab3e:	mov    r15d,eax
   14000ab41:	test   eax,eax
   14000ab43:	js     0x1400209e8
   14000ab49:	mov    rcx,QWORD PTR [rbp+0x108]
   14000ab50:	lea    r8,[rbp+0x108]
   14000ab57:	mov    edx,r9d
   14000ab5a:	call   0x14000baf0
   14000ab5f:	mov    r15d,eax
   14000ab62:	test   eax,eax
   14000ab64:	js     0x1400209e8
   14000ab6a:	mov    rcx,QWORD PTR [rbp+0x108]
   14000ab71:	inc    edi
   14000ab73:	cmp    edi,0x1
   14000ab76:	jb     0x14000ab2a
   14000ab78:	mov    edi,DWORD PTR [rcx]
   14000ab7a:	lea    r8,[rbp+0x108]
   14000ab81:	mov    edx,0x4
   14000ab86:	call   0x14000baf0
   14000ab8b:	mov    r15d,eax
   14000ab8e:	test   eax,eax
   14000ab90:	js     0x1400209e8
   14000ab96:	mov    DWORD PTR [rbp+0x440],edi
   14000ab9c:	test   edi,edi
   14000ab9e:	je     0x1400209d9
   14000aba4:	mov    rax,QWORD PTR [rbp+0x108]
   14000abab:	mov    QWORD PTR [rbp+0x558],rax
   14000abb2:	test   r15d,r15d
   14000abb5:	js     0x140020afa
   14000abbb:	cmp    edi,0x8
   14000abbe:	jne    0x1400209fa
   14000abc4:	mov    rax,QWORD PTR [rax]
   14000abc7:	mov    QWORD PTR [rbp+0x618],rax
   14000abce:	test   r15d,r15d
   14000abd1:	js     0x140020afa
   14000abd7:	cmp    QWORD PTR [rbp+0xd0],0x0
   14000abdf:	je     0x140020a0f
   14000abe5:	mov    rcx,QWORD PTR [rbp+0xd0]
   14000abec:	mov    edi,r14d
   14000abef:	mov    QWORD PTR [rbp+0x1e0],rcx
   14000abf6:	lea    rdx,[rcx+0x4]
   14000abfa:	cmp    rdx,rcx
   14000abfd:	jb     0x140020a50
   14000ac03:	mov    ecx,DWORD PTR [rcx]
   14000ac05:	add    rcx,rdx
   14000ac08:	mov    QWORD PTR [rbp+0x1e0],rdx
   14000ac0f:	cmp    rcx,rdx
   14000ac12:	jb     0x140020a50
   14000ac18:	inc    edi
   14000ac1a:	mov    QWORD PTR [rbp+0x1e0],rcx
   14000ac21:	cmp    edi,0x2
   14000ac24:	jb     0x14000abf6
   14000ac26:	mov    edi,DWORD PTR [rcx]
   14000ac28:	lea    r8,[rbp+0x1e0]
   14000ac2f:	mov    edx,0x4
   14000ac34:	call   0x14000baf0
   14000ac39:	mov    r15d,eax
   14000ac3c:	test   eax,eax
   14000ac3e:	js     0x140020a29
   14000ac44:	mov    DWORD PTR [rbp+0x348],edi
   14000ac4a:	test   edi,edi
   14000ac4c:	je     0x140020a1a
   14000ac52:	mov    rax,QWORD PTR [rbp+0x1e0]
   14000ac59:	mov    QWORD PTR [rbp+0x608],rax
   14000ac60:	test   r15d,r15d
   14000ac63:	js     0x140020afa
   14000ac69:	cmp    edi,edx
   14000ac6b:	jne    0x140020a3b
   14000ac71:	mov    eax,DWORD PTR [rax]
   14000ac73:	mov    DWORD PTR [rbp+0x418],eax
   14000ac79:	test   r15d,r15d
   14000ac7c:	js     0x140020afa
   14000ac82:	cmp    QWORD PTR [rbp+0xd0],0x0
   14000ac8a:	je     0x140020a5b
   14000ac90:	mov    rcx,QWORD PTR [rbp+0xd0]
   14000ac97:	mov    edi,r14d
   14000ac9a:	mov    QWORD PTR [rbp+0x1f0],rcx
   14000aca1:	lea    rdx,[rcx+0x4]
   14000aca5:	cmp    rdx,rcx
   14000aca8:	jb     0x140020b53
   14000acae:	mov    ecx,DWORD PTR [rcx]
   14000acb0:	add    rcx,rdx
   14000acb3:	mov    QWORD PTR [rbp+0x1f0],rdx
   14000acba:	cmp    rcx,rdx
   14000acbd:	jb     0x140020b53
   14000acc3:	inc    edi
   14000acc5:	mov    QWORD PTR [rbp+0x1f0],rcx
   14000accc:	cmp    edi,0x3
   14000accf:	jb     0x14000aca1
   14000acd1:	mov    r9d,DWORD PTR [rcx]
   14000acd4:	lea    r8,[rbp+0x1f0]
   14000acdb:	mov    edx,0x4
   14000ace0:	call   0x14000baf0
   14000ace5:	mov    r15d,eax
   14000ace8:	test   eax,eax
   14000acea:	js     0x140020a7f
   14000acf0:	mov    DWORD PTR [rbp+0x408],r9d
   14000acf7:	test   r9d,r9d
   14000acfa:	je     0x140020a70
   14000ad00:	mov    r10,QWORD PTR [rbp+0x1f0]
   14000ad07:	mov    QWORD PTR [rbp+0x568],r10
   14000ad0e:	test   eax,eax
   14000ad10:	js     0x140020afa
   14000ad16:	mov    rcx,QWORD PTR [rbp+0xd0]
   14000ad1d:	mov    edi,r14d
   14000ad20:	mov    QWORD PTR [rbp+0x200],rcx
   14000ad27:	lea    rdx,[rcx+0x4]
   14000ad2b:	cmp    rdx,rcx
   14000ad2e:	jb     0x140020ac8
   14000ad34:	mov    ecx,DWORD PTR [rcx]
   14000ad36:	add    rcx,rdx
   14000ad39:	mov    QWORD PTR [rbp+0x200],rdx
   14000ad40:	cmp    rcx,rdx
   14000ad43:	jb     0x140020ac8
   14000ad49:	inc    edi
   14000ad4b:	mov    QWORD PTR [rbp+0x200],rcx
   14000ad52:	cmp    edi,0x4
   14000ad55:	jb     0x14000ad27
   14000ad57:	mov    edi,DWORD PTR [rcx]
   14000ad59:	lea    r8,[rbp+0x200]
   14000ad60:	mov    edx,0x4
   14000ad65:	call   0x14000baf0
   14000ad6a:	mov    r15d,eax
   14000ad6d:	test   eax,eax
   14000ad6f:	js     0x140020aa1
   14000ad75:	mov    DWORD PTR [rbp+0x358],edi
   14000ad7b:	test   edi,edi
   14000ad7d:	je     0x140020a92
   14000ad83:	mov    rax,QWORD PTR [rbp+0x200]
   14000ad8a:	mov    QWORD PTR [rbp+0x688],rax
   14000ad91:	test   r15d,r15d
   14000ad94:	js     0x140020afa
   14000ad9a:	cmp    edi,edx
   14000ad9c:	jne    0x140020ab3
   14000ada2:	mov    eax,DWORD PTR [rax]
   14000ada4:	mov    DWORD PTR [rbp+0x368],eax
   14000adaa:	test   r15d,r15d
   14000adad:	js     0x140020afa
   14000adb3:	mov    rcx,QWORD PTR [rbp+0xd0]
   14000adba:	mov    edi,r14d
   14000adbd:	mov    QWORD PTR [rbp+0x1b0],rcx
   14000adc4:	nop    DWORD PTR [rax+0x0]
   14000adc8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000add0:	lea    rdx,[rcx+0x4]
   14000add4:	cmp    rdx,rcx
   14000add7:	jb     0x140020b09
   14000addd:	mov    ecx,DWORD PTR [rcx]
   14000addf:	add    rcx,rdx
   14000ade2:	mov    QWORD PTR [rbp+0x1b0],rdx
   14000ade9:	cmp    rcx,rdx
   14000adec:	jb     0x140020b09
   14000adf2:	inc    edi
   14000adf4:	mov    QWORD PTR [rbp+0x1b0],rcx
   14000adfb:	cmp    edi,0x5
   14000adfe:	jb     0x14000add0
   14000ae00:	mov    edi,DWORD PTR [rcx]
   14000ae02:	lea    r8,[rbp+0x1b0]
   14000ae09:	mov    edx,0x4
   14000ae0e:	call   0x14000baf0
   14000ae13:	mov    r15d,eax
   14000ae16:	test   eax,eax
   14000ae18:	js     0x140020ae2
   14000ae1e:	mov    DWORD PTR [rbp+0x474],edi
   14000ae24:	test   edi,edi
   14000ae26:	je     0x140020ad3
   14000ae2c:	mov    rax,QWORD PTR [rbp+0x1b0]
   14000ae33:	mov    QWORD PTR [rbp+0x578],rax
   14000ae3a:	test   r15d,r15d
   14000ae3d:	js     0x140020afa
   14000ae43:	cmp    edi,edx
   14000ae45:	jne    0x140020af4
   14000ae4b:	mov    eax,DWORD PTR [rax]
   14000ae4d:	mov    DWORD PTR [rbp+0x1e8],eax
   14000ae53:	test   r15d,r15d
   14000ae56:	js     0x140020afa
   14000ae5c:	mov    rax,QWORD PTR [rbp+0x618]
   14000ae63:	cmp    QWORD PTR [rbp+0x510],rax
   14000ae6a:	jne    0x140020b14
   14000ae70:	mov    eax,DWORD PTR [rbp+0x1e8]
   14000ae76:	mov    ecx,DWORD PTR [rbp+0x368]
   14000ae7c:	mov    DWORD PTR [rbp+0x8c],eax
   14000ae82:	mov    eax,DWORD PTR [rbp+0x418]
   14000ae88:	mov    DWORD PTR [rbp+0x238],eax
   14000ae8e:	mov    DWORD PTR [rbp+0x170],ecx
   14000ae94:	cmp    ecx,0x4
   14000ae97:	ja     0x140020b29
   14000ae9d:	cmp    r9d,0x4
   14000aea1:	ja     0x140020b3e
   14000aea7:	mov    rcx,QWORD PTR [rbp+0x168]
   14000aeae:	mov    rdx,r10
   14000aeb1:	mov    r8d,r9d
   14000aeb4:	call   0x1400156f2
   14000aeb9:	mov    eax,DWORD PTR [rbp+0x88]
   14000aebf:	mov    r12,QWORD PTR [rsp+0x70]
   14000aec4:	mov    rsi,QWORD PTR [rsp+0x78]
   14000aec9:	test   eax,eax
   14000aecb:	je     0x14000aed0
   14000aecd:	mov    r15d,eax
   14000aed0:	mov    rbx,QWORD PTR [rbp-0x50]
   14000aed4:	xor    r14d,r14d
   14000aed7:	mov    DWORD PTR [rbp-0x54],r14d
   14000aedb:	mov    DWORD PTR [rbp-0x58],r14d
   14000aedf:	test   rbx,rbx
   14000aee2:	je     0x14000aefc
   14000aee4:	call   QWORD PTR [rip+0x322d6]        # 0x14003d1c0
   14000aeea:	mov    r8,rbx
   14000aeed:	xor    edx,edx
   14000aeef:	mov    rcx,rax
   14000aef2:	call   QWORD PTR [rip+0x322e8]        # 0x14003d1e0
   14000aef8:	mov    QWORD PTR [rbp-0x50],r14
   14000aefc:	mov    rdi,QWORD PTR [rbp+0xd0]
   14000af03:	mov    DWORD PTR [rbp+0xcc],r14d
   14000af0a:	mov    DWORD PTR [rbp+0xc8],r14d
   14000af11:	test   rdi,rdi
   14000af14:	je     0x14000af31
   14000af16:	call   QWORD PTR [rip+0x322a4]        # 0x14003d1c0
   14000af1c:	mov    r8,rdi
   14000af1f:	xor    edx,edx
   14000af21:	mov    rcx,rax
   14000af24:	call   QWORD PTR [rip+0x322b6]        # 0x14003d1e0
   14000af2a:	mov    QWORD PTR [rbp+0xd0],r14
   14000af31:	test   r12,r12
   14000af34:	je     0x14000af4a
   14000af36:	call   QWORD PTR [rip+0x32284]        # 0x14003d1c0
   14000af3c:	mov    r8,r12
   14000af3f:	xor    edx,edx
   14000af41:	mov    rcx,rax
   14000af44:	call   QWORD PTR [rip+0x32296]        # 0x14003d1e0
   14000af4a:	test   rsi,rsi
   14000af4d:	je     0x14000af63
   14000af4f:	call   QWORD PTR [rip+0x3226b]        # 0x14003d1c0
   14000af55:	mov    r8,rsi
   14000af58:	xor    edx,edx
   14000af5a:	mov    rcx,rax
   14000af5d:	call   QWORD PTR [rip+0x3227d]        # 0x14003d1e0
   14000af63:	test   r15d,r15d
   14000af66:	js     0x14001ff27
   14000af6c:	mov    eax,DWORD PTR [rbp+0x8c]
   14000af72:	test   eax,eax
   14000af74:	jne    0x140020b8b
   14000af7a:	lea    r12,[rip+0x4309f]        # 0x14004e020
   14000af81:	lea    ebx,[rax+0x1]
   14000af84:	lea    r13,[rip+0x441c5]        # 0x14004f150
   14000af8b:	mov    eax,DWORD PTR [rbp+0x170]
   14000af91:	mov    esi,DWORD PTR [rbp+0x238]
   14000af97:	mov    DWORD PTR [rbp+0x5c8],eax
   14000af9d:	mov    rax,QWORD PTR [rbp+0x168]
   14000afa4:	mov    QWORD PTR [rbp+0x3f0],rax
   14000afab:	mov    QWORD PTR [rbp+0x240],r14
   14000afb2:	xor    eax,eax
   14000afb4:	lock cmpxchg DWORD PTR [rip+0x44184],ebx        # 0x14004f140
   14000afbc:	jne    0x14000afb2
   14000afbe:	mov    eax,DWORD PTR [rip+0x43b84]        # 0x14004eb48
   14000afc4:	test   eax,eax
   14000afc6:	jle    0x14000b01b
   14000afc8:	sub    eax,0x1
   14000afcb:	mov    DWORD PTR [rip+0x43b77],eax        # 0x14004eb48
   14000afd1:	jne    0x14000b01b
   14000afd3:	mov    rdi,r13
   14000afd6:	mov    ebx,0x4
   14000afdb:	mov    rcx,QWORD PTR [rdi]
   14000afde:	test   rcx,rcx
   14000afe1:	je     0x14000afe9
   14000afe3:	call   QWORD PTR [rip+0x3226f]        # 0x14003d258
   14000afe9:	add    rdi,0x18
   14000afed:	sub    rbx,0x1
   14000aff1:	jne    0x14000afdb
   14000aff3:	xor    edx,edx
   14000aff5:	lea    r8d,[rbx+0x60]
   14000aff9:	mov    rcx,r13
   14000affc:	call   0x140014694
   14000b001:	mov    r8d,0x170
   14000b007:	lea    rdx,[rip+0x36762]        # 0x140041770
   14000b00e:	mov    rcx,r12
   14000b011:	call   0x1400156f2
   14000b016:	mov    ebx,0x1
   14000b01b:	mov    eax,r14d
   14000b01e:	lea    rcx,[rbp+0x240]
   14000b025:	xchg   DWORD PTR [rip+0x44115],eax        # 0x14004f140
   14000b02b:	call   0x140001358
   14000b030:	test   r15d,r15d
   14000b033:	js     0x140027b5c
   14000b039:	cmp    esi,0x4
   14000b03c:	jne    0x140027bb8
   14000b042:	lea    rcx,[rbp+0x3f0]
   14000b049:	call   0x140001380
   14000b04e:	mov    edi,DWORD PTR [rbp+0x3c8]
   14000b054:	mov    ecx,DWORD PTR [rax]
   14000b056:	mov    DWORD PTR [rbp+0x24c],ecx
   14000b05c:	lea    rcx,[rbp+0x3f0]
   14000b063:	call   0x140001358
   14000b068:	test   edi,edi
   14000b06a:	js     0x140027bcd
   14000b070:	cmp    DWORD PTR [rbp+0x24c],0x0
   14000b077:	je     0x140027bc2
   14000b07d:	mov    r13d,0x80004005
   14000b083:	xor    edx,edx
   14000b085:	mov    BYTE PTR [rip+0x43b94],0x0        # 0x14004ec20
   14000b08c:	lea    ecx,[rdx+0x3]
   14000b08f:	call   QWORD PTR [rip+0x32253]        # 0x14003d2e8
   14000b095:	lea    rdi,[rip+0x33284]        # 0x14003e320
   14000b09c:	mov    QWORD PTR [rbp+0x460],r14
   14000b0a3:	lea    rcx,[rbp+0xef0]
   14000b0aa:	mov    QWORD PTR [rbp+0x458],rdi
   14000b0b1:	call   0x140006bb0
   14000b0b6:	lea    rcx,[rbp+0x1050]
   14000b0bd:	call   0x140006bb0
   14000b0c2:	mov    r9d,0x2
   14000b0c8:	mov    BYTE PTR [rbp+0xc10],0x0
   14000b0cf:	mov    r8d,r9d
   14000b0d2:	mov    BYTE PTR [rbp+0xc11],0x0
   14000b0d9:	lea    rdx,[rbp+0xc10]
   14000b0e0:	mov    BYTE PTR [rbp+0xc12],0x0
   14000b0e7:	lea    rcx,[rbp+0x10d0]
   14000b0ee:	mov    BYTE PTR [rbp+0xc13],0x0
   14000b0f5:	mov    BYTE PTR [rbp+0xc14],0x0
   14000b0fc:	mov    BYTE PTR [rbp+0xc15],0xf
   14000b103:	mov    DWORD PTR [rsp+0x20],ebx
   14000b107:	call   0x1400069c0
   14000b10c:	lea    rdx,[rbp+0x1050]
   14000b113:	lea    rcx,[rbp+0xef0]
   14000b11a:	call   0x140005d50
   14000b11f:	test   al,al
   14000b121:	je     0x14000b63d
   14000b127:	lea    rdx,[rbp+0xef0]
   14000b12e:	lea    rcx,[rbp+0x458]
   14000b135:	call   0x140005504
   14000b13a:	lea    rdx,[rbp+0x1050]
   14000b141:	lea    rcx,[rbp+0x458]
   14000b148:	call   0x14000542c
   14000b14d:	lea    rcx,[rbp+0x6f0]
   14000b154:	call   0x1400066c4
   14000b159:	lea    rcx,[rbp+0x1250]
   14000b160:	call   0x140004b74
   14000b165:	mov    rdx,rax
   14000b168:	lea    rcx,[rbp+0x6f0]
   14000b16f:	mov    r8d,0x15
   14000b175:	call   0x140006160
   14000b17a:	lea    rcx,[rbp+0x1250]
   14000b181:	call   0x140006920
   14000b186:	lea    rcx,[rbp+0x1150]
   14000b18d:	call   0x140004eec
   14000b192:	mov    rdx,rax
   14000b195:	lea    rcx,[rbp+0x6f0]
   14000b19c:	mov    r8d,0xb
   14000b1a2:	call   0x140006290
   14000b1a7:	lea    rcx,[rbp+0x1150]
   14000b1ae:	call   0x140006920
   14000b1b3:	lea    rcx,[rbp+0x11d0]
   14000b1ba:	call   0x140004f20
   14000b1bf:	mov    rdx,rax
   14000b1c2:	lea    rcx,[rbp+0x6f0]
   14000b1c9:	mov    r8d,0xb
   14000b1cf:	call   0x140006290
   14000b1d4:	lea    rcx,[rbp+0x11d0]
   14000b1db:	call   0x140006920
   14000b1e0:	mov    r8d,0xb
   14000b1e6:	lea    rdx,[rbp+0xef0]
   14000b1ed:	lea    rcx,[rbp+0x6f0]
   14000b1f4:	call   0x140006290
   14000b1f9:	mov    r8d,0xb
   14000b1ff:	lea    rdx,[rbp+0x10d0]
   14000b206:	lea    rcx,[rbp+0x6f0]
   14000b20d:	call   0x140006290
   14000b212:	lea    rdx,[rbp+0x6f0]
   14000b219:	lea    rcx,[rbp+0x458]
   14000b220:	call   0x1400052b0
   14000b225:	mov    rcx,QWORD PTR [rbp+0x460]
   14000b22c:	xor    r9d,r9d
   14000b22f:	mov    QWORD PTR [rsp+0x40],r14
   14000b234:	xor    r8d,r8d
   14000b237:	mov    DWORD PTR [rsp+0x38],r14d
   14000b23c:	or     edx,0xffffffff
   14000b23f:	mov    QWORD PTR [rsp+0x30],r14
   14000b244:	mov    DWORD PTR [rsp+0x28],0x2
   14000b24c:	mov    DWORD PTR [rsp+0x20],0x6
   14000b254:	call   QWORD PTR [rip+0x47e96]        # 0x1400530f0
   14000b25a:	mov    r13d,eax
   14000b25d:	test   eax,eax
   14000b25f:	js     0x14000b60a
   14000b265:	lea    rax,[rbp+0x498]
   14000b26c:	mov    r9d,ebx
   14000b26f:	xor    r8d,r8d
   14000b272:	mov    QWORD PTR [rsp+0x20],rax
   14000b277:	lea    rdx,[rip+0x338e2]        # 0x14003eb60
   14000b27e:	mov    rcx,0xffffffff80000002
   14000b285:	call   QWORD PTR [rip+0x320b5]        # 0x14003d340
   14000b28b:	test   eax,eax
   14000b28d:	jg     0x140027bd9
   14000b293:	js     0x14000b2f9
   14000b295:	mov    rcx,QWORD PTR [rbp+0x498]
   14000b29c:	lea    rax,[rbp+0x2e4]
   14000b2a3:	mov    QWORD PTR [rsp+0x28],rax
   14000b2a8:	lea    rdx,[rip+0x33891]        # 0x14003eb40
   14000b2af:	lea    rax,[rbp+0x1bc]
   14000b2b6:	mov    DWORD PTR [rbp+0x1bc],r14d
   14000b2bd:	xor    r9d,r9d
   14000b2c0:	mov    QWORD PTR [rsp+0x20],rax
   14000b2c5:	xor    r8d,r8d
   14000b2c8:	mov    DWORD PTR [rbp+0x2e4],0x4
   14000b2d2:	call   QWORD PTR [rip+0x32070]        # 0x14003d348
   14000b2d8:	test   eax,eax
   14000b2da:	jle    0x14000b2e6
   14000b2dc:	movzx  eax,ax
   14000b2df:	or     eax,0x80070000
   14000b2e4:	test   eax,eax
   14000b2e6:	jns    0x140027be8
   14000b2ec:	mov    rcx,QWORD PTR [rbp+0x498]
   14000b2f3:	call   QWORD PTR [rip+0x3205f]        # 0x14003d358
   14000b2f9:	lea    rcx,[rbp+0x1410]
   14000b300:	call   0x14000e1b0
   14000b305:	lea    rax,[rbp+0x410]
   14000b30c:	mov    QWORD PTR [rbp+0x410],r14
   14000b313:	lea    r9,[rip+0x341c6]        # 0x14003f4e0
   14000b31a:	mov    QWORD PTR [rsp+0x20],rax
   14000b31f:	mov    r8d,ebx
   14000b322:	lea    rcx,[rip+0x341e7]        # 0x14003f510
   14000b329:	xor    edx,edx
   14000b32b:	call   QWORD PTR [rip+0x47dc7]        # 0x1400530f8
   14000b331:	test   eax,eax
   14000b333:	js     0x14000b360
   14000b335:	mov    rdi,QWORD PTR [rbp+0x410]
   14000b33c:	mov    rax,QWORD PTR [rdi]
   14000b33f:	mov    rbx,QWORD PTR [rax+0x18]
   14000b343:	mov    rcx,rbx
   14000b346:	call   QWORD PTR [rip+0x323dc]        # 0x14003d728
   14000b34c:	mov    eax,0x1
   14000b351:	mov    rcx,rdi
   14000b354:	mov    r8d,eax
   14000b357:	mov    edx,eax
   14000b359:	call   rbx
   14000b35b:	mov    ebx,0x1
   14000b360:	call   0x14000f220
   14000b365:	mov    BYTE PTR [rip+0x4380d],al        # 0x14004eb78
   14000b36b:	call   0x1400049b4
   14000b370:	test   eax,eax
   14000b372:	setne  sil
   14000b376:	cmp    BYTE PTR [rip+0x437fb],0x0        # 0x14004eb78
   14000b37d:	jne    0x14000b38f
   14000b37f:	test   sil,sil
   14000b382:	je     0x14000b741
   14000b388:	mov    BYTE PTR [rip+0x437ec],0x1        # 0x14004eb7b
   14000b38f:	xor    r9d,r9d
   14000b392:	xor    r8d,r8d
   14000b395:	xor    edx,edx
   14000b397:	xor    ecx,ecx
   14000b399:	call   QWORD PTR [rip+0x32041]        # 0x14003d3e0
   14000b39f:	lea    rcx,[rbp+0x90]
   14000b3a6:	xor    edx,edx
   14000b3a8:	lea    r8,[rip+0xffffffffffff6071]        # 0x140001420
   14000b3af:	mov    QWORD PTR [rip+0x4387a],rax        # 0x14004ec30
   14000b3b6:	mov    QWORD PTR [rsp+0x28],rcx
   14000b3bb:	mov    r9,rax
   14000b3be:	xor    ecx,ecx
   14000b3c0:	mov    DWORD PTR [rsp+0x20],r14d
   14000b3c5:	call   QWORD PTR [rip+0x32255]        # 0x14003d620
   14000b3cb:	mov    ecx,0x43
   14000b3d0:	mov    r12,rax
   14000b3d3:	call   QWORD PTR [rip+0x31c87]        # 0x14003d060
   14000b3d9:	xor    edi,edi
   14000b3db:	xor    r14b,r14b
   14000b3de:	mov    QWORD PTR [rbp+0xf8],rdi
   14000b3e5:	test   eax,eax
   14000b3e7:	jne    0x140027c14
   14000b3ed:	xor    r15b,r15b
   14000b3f0:	test   sil,sil
   14000b3f3:	je     0x14000b753
   14000b3f9:	lea    rax,[rbp+0x180]
   14000b400:	mov    QWORD PTR [rbp+0x180],rdi
   14000b407:	lea    r9,[rip+0x340e2]        # 0x14003f4f0
   14000b40e:	mov    QWORD PTR [rsp+0x20],rax
   14000b413:	mov    r8d,ebx
   14000b416:	lea    rcx,[rip+0x340e3]        # 0x14003f500
   14000b41d:	xor    edx,edx
   14000b41f:	call   QWORD PTR [rip+0x47cd3]        # 0x1400530f8
   14000b425:	test   eax,eax
   14000b427:	js     0x14000b4f1
   14000b42d:	xor    eax,eax
   14000b42f:	lea    r8,[rbp+0x400]
   14000b436:	lea    rdx,[rip+0x33a33]        # 0x14003ee70
   14000b43d:	mov    QWORD PTR [rbp+0x400],rax
   14000b444:	lea    rcx,[rip+0x4175]        # 0x14000f5c0
   14000b44b:	call   0x14000c030
   14000b450:	test   eax,eax
   14000b452:	js     0x14000b4d1
   14000b454:	mov    rdi,QWORD PTR [rbp+0x400]
   14000b45b:	xor    eax,eax
   14000b45d:	mov    QWORD PTR [rbp+0x2a8],rax
   14000b464:	mov    rax,QWORD PTR [rdi]
   14000b467:	mov    rbx,QWORD PTR [rax]
   14000b46a:	lea    rax,[rip+0xcef]        # 0x14000c160
   14000b471:	cmp    rbx,rax
   14000b474:	jne    0x140027c24
   14000b47a:	lea    r8,[rbp+0x2a8]
   14000b481:	mov    rcx,rdi
   14000b484:	lea    rdx,[rip+0x32ed5]        # 0x14003e360
   14000b48b:	call   0x14000c160
   14000b490:	test   eax,eax
   14000b492:	js     0x14000b4c5
   14000b494:	mov    rdi,QWORD PTR [rbp+0x180]
   14000b49b:	mov    rax,QWORD PTR [rdi]
   14000b49e:	mov    rbx,QWORD PTR [rax+0x18]
   14000b4a2:	mov    rcx,rbx
   14000b4a5:	call   QWORD PTR [rip+0x3227d]        # 0x14003d728
   14000b4ab:	mov    rdx,QWORD PTR [rbp+0x2a8]
   14000b4b2:	lea    r9,[rip+0x436b7]        # 0x14004eb70
   14000b4b9:	lea    r8,[rip+0x32ea0]        # 0x14003e360
   14000b4c0:	mov    rcx,rdi
   14000b4c3:	call   rbx
   14000b4c5:	lea    rcx,[rbp+0x2a8]
   14000b4cc:	call   0x14000cb0c
   14000b4d1:	lea    rcx,[rbp+0xf8]
   14000b4d8:	call   0x14000f3a4
   14000b4dd:	test   al,al
   14000b4df:	jne    0x14000b79c
   14000b4e5:	lea    rcx,[rbp+0x400]
   14000b4ec:	call   0x14000ca0c
   14000b4f1:	mov    rcx,QWORD PTR [rip+0x43738]        # 0x14004ec30
   14000b4f8:	test   rcx,rcx
   14000b4fb:	je     0x14000b50c
   14000b4fd:	call   QWORD PTR [rip+0x31ee5]        # 0x14003d3e8
   14000b503:	xor    eax,eax
   14000b505:	mov    QWORD PTR [rip+0x43724],rax        # 0x14004ec30
   14000b50c:	test   sil,sil
   14000b50f:	je     0x14000b7d2
   14000b515:	xor    r9d,r9d
   14000b518:	lea    rcx,[rbp+0x780]
   14000b51f:	xor    r8d,r8d
   14000b522:	xor    edx,edx
   14000b524:	call   QWORD PTR [rip+0x31bde]        # 0x14003d108
   14000b52a:	test   eax,eax
   14000b52c:	jg     0x140027c46
   14000b532:	call   0x14000f54c
   14000b537:	test   r14b,r14b
   14000b53a:	jne    0x140027c7e
   14000b540:	movzx  edx,r15b
   14000b544:	mov    BYTE PTR [rsp+0x28],sil
   14000b549:	lea    rcx,[rbp+0x1410]
   14000b550:	call   0x14000e4c0
   14000b555:	mov    ecx,DWORD PTR [rbp+0x90]
   14000b55b:	xor    r9d,r9d
   14000b55e:	xor    r8d,r8d
   14000b561:	lea    edx,[r9+0x12]
   14000b565:	call   QWORD PTR [rip+0x31b85]        # 0x14003d0f0
   14000b56b:	or     edx,0xffffffff
   14000b56e:	mov    rcx,r12
   14000b571:	call   QWORD PTR [rip+0x31e81]        # 0x14003d3f8
   14000b577:	lea    rcx,[rbp+0x180]
   14000b57e:	call   0x14000f3a4
   14000b583:	test   al,al
   14000b585:	je     0x14000b5bd
   14000b587:	mov    esi,DWORD PTR [rip+0x435e3]        # 0x14004eb70
   14000b58d:	test   esi,esi
   14000b58f:	je     0x14000b5af
   14000b591:	mov    rdi,QWORD PTR [rbp+0x180]
   14000b598:	mov    rax,QWORD PTR [rdi]
   14000b59b:	mov    rbx,QWORD PTR [rax+0x20]
   14000b59f:	mov    rcx,rbx
   14000b5a2:	call   QWORD PTR [rip+0x32180]        # 0x14003d728
   14000b5a8:	mov    edx,esi
   14000b5aa:	mov    rcx,rdi
   14000b5ad:	call   rbx
   14000b5af:	mov    esi,DWORD PTR [rip+0x43a13]        # 0x14004efc8
   14000b5b5:	test   esi,esi
   14000b5b7:	jne    0x140027c89
   14000b5bd:	mov    rcx,r12
   14000b5c0:	call   QWORD PTR [rip+0x31be2]        # 0x14003d1a8
   14000b5c6:	mov    rcx,QWORD PTR [rip+0x4366b]        # 0x14004ec38
   14000b5cd:	call   QWORD PTR [rip+0x31c3d]        # 0x14003d210
   14000b5d3:	lea    rcx,[rbp+0x180]
   14000b5da:	call   0x14000f4f0
   14000b5df:	lea    rcx,[rbp+0xf8]
   14000b5e6:	call   0x1400013bc
   14000b5eb:	lea    rcx,[rbp+0x410]
   14000b5f2:	call   0x14000f4f0
   14000b5f7:	lea    rcx,[rbp+0x1410]
   14000b5fe:	call   0x14000e7d4
   14000b603:	lea    rdi,[rip+0x32d16]        # 0x14003e320
   14000b60a:	test   r13d,r13d
   14000b60d:	jne    0x14000b61c
   14000b60f:	cmp    BYTE PTR [rip+0x43566],r13b        # 0x14004eb7c
   14000b616:	jne    0x140027ce1
   14000b61c:	mov    edx,r13d
   14000b61f:	lea    rcx,[rbp+0x12d0]
   14000b626:	call   0x14000ea88
   14000b62b:	call   QWORD PTR [rip+0x319d7]        # 0x14003d008
   14000b631:	lea    rcx,[rbp+0x6f0]
   14000b638:	call   0x14000667c
   14000b63d:	lea    rcx,[rbp+0x10d0]
   14000b644:	call   0x140006920
   14000b649:	lea    rcx,[rbp+0x1050]
   14000b650:	call   0x140006920
   14000b655:	lea    rcx,[rbp+0xef0]
   14000b65c:	call   0x140006920
   14000b661:	lea    rcx,[rbp+0x458]
   14000b668:	mov    QWORD PTR [rbp+0x458],rdi
   14000b66f:	call   0x1400050f0
   14000b674:	lea    rcx,[rbp+0x12d0]
   14000b67b:	call   0x14000e3d4
   14000b680:	mov    eax,r13d
   14000b683:	mov    rcx,QWORD PTR [rbp+0x1930]
   14000b68a:	xor    rcx,rsp
   14000b68d:	call   0x1400141d0
   14000b692:	lea    r11,[rsp+0x1a40]
   14000b69a:	mov    rbx,QWORD PTR [r11+0x30]
   14000b69e:	mov    rsi,QWORD PTR [r11+0x38]
   14000b6a2:	mov    rdi,QWORD PTR [r11+0x40]
   14000b6a6:	mov    rsp,r11
   14000b6a9:	pop    r15
   14000b6ab:	pop    r14
   14000b6ad:	pop    r13
   14000b6af:	pop    r12
   14000b6b1:	pop    rbp
   14000b6b2:	ret    
   14000b6b3:	sbb    eax,eax
   14000b6b5:	or     eax,0x1
   14000b6b8:	jmp    0x140008735
   14000b6bd:	call   QWORD PTR [rip+0x31aa5]        # 0x14003d168
   14000b6c3:	cmp    eax,0x7a
   14000b6c6:	jne    0x14001fe97
   14000b6cc:	test   rsi,rsi
   14000b6cf:	jne    0x14001fea7
   14000b6d5:	mov    ecx,DWORD PTR [rbp+0x1f8]
   14000b6db:	call   0x14000f134
   14000b6e0:	mov    rsi,rax
   14000b6e3:	test   rax,rax
   14000b6e6:	je     0x14001fe8d
   14000b6ec:	mov    r15d,DWORD PTR [rbp+0x1f8]
   14000b6f3:	mov    QWORD PTR [rbp+0x260],rax
   14000b6fa:	jmp    0x140008891
   14000b6ff:	call   QWORD PTR [rip+0x31a63]        # 0x14003d168
   14000b705:	cmp    eax,0x7a
   14000b708:	jne    0x14001fef2
   14000b70e:	test   rsi,rsi
   14000b711:	jne    0x14001feff
   14000b717:	mov    ecx,DWORD PTR [rbp+0x23c]
   14000b71d:	call   0x14000f134
   14000b722:	mov    rsi,rax
   14000b725:	test   rax,rax
   14000b728:	je     0x14001fee8
   14000b72e:	mov    r15d,DWORD PTR [rbp+0x23c]
   14000b735:	mov    QWORD PTR [rbp+0x2b8],rax
   14000b73c:	jmp    0x14000891f
   14000b741:	cmp    BYTE PTR [rip+0x43432],0x0        # 0x14004eb7a
   14000b748:	je     0x14000b38f
   14000b74e:	jmp    0x14000b388
   14000b753:	call   0x140013c60
   14000b758:	test   eax,eax
   14000b75a:	js     0x14000b3f9
   14000b760:	call   QWORD PTR [rip+0x47982]        # 0x1400530e8
   14000b766:	test   eax,eax
   14000b768:	js     0x140027c1c
   14000b76e:	xor    edx,edx
   14000b770:	lea    rax,[rbp+0xf8]
   14000b777:	lea    r9,[rip+0x33da2]        # 0x14003f520
   14000b77e:	mov    QWORD PTR [rsp+0x20],rax
   14000b783:	lea    rcx,[rip+0x33da6]        # 0x14003f530
   14000b78a:	mov    r14b,0x1
   14000b78d:	lea    r8d,[rdx+0x3]
   14000b791:	call   QWORD PTR [rip+0x47961]        # 0x1400530f8
   14000b797:	jmp    0x14000b3f9
   14000b79c:	mov    rdi,QWORD PTR [rbp+0x180]
   14000b7a3:	mov    rax,QWORD PTR [rdi]
   14000b7a6:	mov    rbx,QWORD PTR [rax+0x18]
   14000b7aa:	mov    rcx,rbx
   14000b7ad:	call   QWORD PTR [rip+0x31f75]        # 0x14003d728
   14000b7b3:	mov    rdx,QWORD PTR [rbp+0xf8]
   14000b7ba:	lea    r9,[rip+0x43807]        # 0x14004efc8
   14000b7c1:	lea    r8,[rip+0x33d58]        # 0x14003f520
   14000b7c8:	mov    rcx,rdi
   14000b7cb:	call   rbx
   14000b7cd:	jmp    0x14000b4e5
   14000b7d2:	xor    edx,edx
   14000b7d4:	lea    rcx,[rip+0x33c15]        # 0x14003f3f0
   14000b7db:	call   QWORD PTR [rip+0x31887]        # 0x14003d068
   14000b7e1:	xor    r9d,r9d
   14000b7e4:	xor    r8d,r8d
   14000b7e7:	mov    rcx,rax
   14000b7ea:	mov    edx,0x593
   14000b7ef:	call   QWORD PTR [rip+0x318f3]        # 0x14003d0e8
   14000b7f5:	jmp    0x14000b515
   14000b7fa:	int3   
   14000b7fb:	int3   
   14000b7fc:	int3   
   14000b7fd:	int3   
   14000b7fe:	int3   
   14000b7ff:	int3   
   14000b800:	mov    QWORD PTR [rsp+0x8],rbx
   14000b805:	push   rbp
   14000b806:	push   rsi
   14000b807:	push   rdi
   14000b808:	push   r12
   14000b80a:	push   r13
   14000b80c:	push   r14
   14000b80e:	push   r15
   14000b810:	mov    rbp,rsp
   14000b813:	sub    rsp,0x60
   14000b817:	mov    rax,QWORD PTR [rip+0x427f2]        # 0x14004e010
   14000b81e:	xor    rax,rsp
   14000b821:	mov    QWORD PTR [rbp-0x10],rax
   14000b825:	xor    r13d,r13d
   14000b828:	mov    BYTE PTR [rip+0x43350],0x1        # 0x14004eb7f
   14000b82f:	mov    DWORD PTR [r8],r13d
   14000b832:	mov    rcx,rdx
   14000b835:	mov    eax,DWORD PTR [rip+0x361b9]        # 0x1400419f4
   14000b83b:	lea    rdx,[rbp-0x18]
   14000b83f:	mov    DWORD PTR [rbp-0x18],eax
   14000b842:	mov    r12,r8
   14000b845:	movzx  eax,WORD PTR [rip+0x361ac]        # 0x1400419f8
   14000b84c:	mov    r15b,r13b
   14000b84f:	mov    WORD PTR [rbp-0x14],ax
   14000b853:	mov    r14b,r13b
   14000b856:	mov    QWORD PTR [rip+0x433d3],r13        # 0x14004ec30
   14000b85d:	mov    BYTE PTR [rip+0x4331a],0x1        # 0x14004eb7e
   14000b864:	call   0x14000bb60
   14000b869:	mov    rbx,rax
   14000b86c:	test   rax,rax
   14000b86f:	je     0x14000b9aa
   14000b875:	lea    rdx,[rip+0x33c04]        # 0x14003f480
   14000b87c:	mov    rcx,rbx
   14000b87f:	call   0x14000ba3c
   14000b884:	test   eax,eax
   14000b886:	je     0x14000ba27
   14000b88c:	lea    rdx,[rip+0x33c05]        # 0x14003f498
   14000b893:	mov    rcx,rbx
   14000b896:	call   0x14000ba3c
   14000b89b:	test   eax,eax
   14000b89d:	je     0x14000ba27
   14000b8a3:	lea    rdx,[rip+0x33bb6]        # 0x14003f460
   14000b8aa:	mov    rcx,rbx
   14000b8ad:	call   0x14000ba3c
   14000b8b2:	test   eax,eax
   14000b8b4:	je     0x140027cec
   14000b8ba:	mov    r8d,0x9
   14000b8c0:	lea    rdx,[rip+0x33be9]        # 0x14003f4b0
   14000b8c7:	mov    rcx,rbx
   14000b8ca:	call   QWORD PTR [rip+0x31d40]        # 0x14003d610
   14000b8d0:	test   eax,eax
   14000b8d2:	jne    0x140027cf4
   14000b8d8:	lea    rdi,[rbx+0x12]
   14000b8dc:	mov    BYTE PTR [rip+0x4329b],r13b        # 0x14004eb7e
   14000b8e3:	mov    rcx,rdi
   14000b8e6:	mov    BYTE PTR [rip+0x43292],0x1        # 0x14004eb7f
   14000b8ed:	lea    rdx,[rip+0x331d8]        # 0x14003eacc
   14000b8f4:	call   QWORD PTR [rip+0x31d36]        # 0x14003d630
   14000b8fa:	mov    QWORD PTR [rbp-0x30],rax
   14000b8fe:	test   rax,rax
   14000b901:	je     0x14000b989
   14000b907:	cmp    rdi,rax
   14000b90a:	jae    0x14000b989
   14000b90c:	lea    rsi,[rax+0x2]
   14000b910:	mov    rcx,rsi
   14000b913:	lea    rdx,[rip+0x331b2]        # 0x14003eacc
   14000b91a:	call   QWORD PTR [rip+0x31d10]        # 0x14003d630
   14000b920:	mov    QWORD PTR [rbp-0x28],rax
   14000b924:	test   rax,rax
   14000b927:	je     0x14000b989
   14000b929:	cmp    rsi,rax
   14000b92c:	jae    0x14000b989
   14000b92e:	mov    r8d,0x10
   14000b934:	lea    rdx,[rbp-0x30]
   14000b938:	mov    rcx,rdi
   14000b93b:	call   QWORD PTR [rip+0x31cc7]        # 0x14003d608
   14000b941:	movsxd rdx,eax
   14000b944:	mov    r8d,0x10
   14000b94a:	mov    QWORD PTR [rip+0x432d7],rdx        # 0x14004ec28
   14000b951:	mov    rcx,rsi
   14000b954:	lea    rdx,[rbp-0x28]
   14000b958:	call   QWORD PTR [rip+0x31caa]        # 0x14003d608
   14000b95e:	mov    rdx,QWORD PTR [rip+0x432c3]        # 0x14004ec28
   14000b965:	lea    r8,[rip+0x3b44]        # 0x14000f4b0
   14000b96c:	mov    DWORD PTR [rsp+0x28],0x8
   14000b974:	lea    rcx,[rip+0x432bd]        # 0x14004ec38
   14000b97b:	or     DWORD PTR [rsp+0x20],0xffffffff
   14000b980:	movsxd r9,eax
   14000b983:	call   QWORD PTR [rip+0x3188f]        # 0x14003d218
   14000b989:	lea    rdx,[rbp-0x18]
   14000b98d:	mov    rcx,rbx
   14000b990:	call   0x14000bb60
   14000b995:	mov    rbx,rax
   14000b998:	test   rax,rax
   14000b99b:	jne    0x14000b875
   14000b9a1:	test   r14b,r14b
   14000b9a4:	jne    0x140027e18
   14000b9aa:	cmp    BYTE PTR [rip+0x431cd],r13b        # 0x14004eb7e
   14000b9b1:	jne    0x14000ba2b
   14000b9b3:	cmp    BYTE PTR [rip+0x431c0],r13b        # 0x14004eb7a
   14000b9ba:	jne    0x140027e2f
   14000b9c0:	call   0x1400048ec
   14000b9c5:	mov    QWORD PTR [rip+0x4319c],rax        # 0x14004eb68
   14000b9cc:	test   rax,rax
   14000b9cf:	setne  BYTE PTR [rip+0x431aa]        # 0x14004eb80
   14000b9d6:	call   QWORD PTR [rip+0x3191c]        # 0x14003d2f8
   14000b9dc:	cmp    BYTE PTR [rip+0x4319d],r13b        # 0x14004eb80
   14000b9e3:	mov    DWORD PTR [rip+0x4318b],eax        # 0x14004eb74
   14000b9e9:	je     0x14000ba11
   14000b9eb:	mov    al,0x1
   14000b9ed:	mov    rcx,QWORD PTR [rbp-0x10]
   14000b9f1:	xor    rcx,rsp
   14000b9f4:	call   0x1400141d0
   14000b9f9:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000ba01:	add    rsp,0x60
   14000ba05:	pop    r15
   14000ba07:	pop    r14
   14000ba09:	pop    r13
   14000ba0b:	pop    r12
   14000ba0d:	pop    rdi
   14000ba0e:	pop    rsi
   14000ba0f:	pop    rbp
   14000ba10:	ret    
   14000ba11:	test   r15b,r15b
   14000ba14:	jne    0x140027e40
   14000ba1a:	cmp    BYTE PTR [rip+0x4315d],r13b        # 0x14004eb7e
   14000ba21:	je     0x140027eec
   14000ba27:	xor    al,al
   14000ba29:	jmp    0x14000b9ed
   14000ba2b:	mov    cl,r14b
   14000ba2e:	call   0x140011e88
   14000ba33:	jmp    0x14000b9d6
   14000ba35:	int3   
   14000ba36:	int3   
   14000ba37:	int3   
   14000ba38:	int3   
   14000ba39:	int3   
   14000ba3a:	int3   
   14000ba3b:	int3   
   14000ba3c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ba41:	mov    QWORD PTR [rsp+0x10],rbp
   14000ba46:	mov    QWORD PTR [rsp+0x18],rsi
   14000ba4b:	push   rdi
   14000ba4c:	sub    rsp,0x20
   14000ba50:	mov    rsi,rcx
   14000ba53:	mov    rdi,rdx
   14000ba56:	movzx  ecx,WORD PTR [rcx]
   14000ba59:	call   QWORD PTR [rip+0x316b9]        # 0x14003d118
   14000ba5f:	movzx  ecx,WORD PTR [rdi]
   14000ba62:	mov    rbx,rax
   14000ba65:	call   QWORD PTR [rip+0x316ad]        # 0x14003d118
   14000ba6b:	movabs rbp,0x100000201
   14000ba75:	mov    r8,rax
   14000ba78:	test   bx,bx
   14000ba7b:	je     0x140027f4d
   14000ba81:	cmp    bx,r8w
   14000ba85:	je     0x140027efa
   14000ba8b:	cmp    bx,0x20
   14000ba8f:	ja     0x14000ba9e
   14000ba91:	movzx  eax,bx
   14000ba94:	bt     rbp,rax
   14000ba98:	jb     0x140027f4d
   14000ba9e:	cmp    bx,r8w
   14000baa2:	sbb    eax,eax
   14000baa4:	and    eax,0xfffffffe
   14000baa7:	inc    eax
   14000baa9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000baae:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bab3:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bab8:	add    rsp,0x20
   14000babc:	pop    rdi
   14000babd:	ret    
   14000babe:	int3   
   14000babf:	int3   
   14000bac0:	int3   
   14000bac1:	int3   
   14000bac2:	int3   
   14000bac3:	int3   
   14000bac4:	int3   
   14000bac5:	int3   
   14000bac6:	int3   
   14000bac7:	int3   
   14000bac8:	int3   
   14000bac9:	int3   
   14000baca:	int3   
   14000bacb:	int3   
   14000bacc:	int3   
   14000bacd:	int3   
   14000bace:	int3   
   14000bacf:	int3   
   14000bad0:	lea    eax,[rcx+rdx*1]
   14000bad3:	cmp    eax,ecx
   14000bad5:	jb     0x140016c16
   14000badb:	mov    DWORD PTR [r8],eax
   14000bade:	xor    eax,eax
   14000bae0:	ret    
   14000bae1:	int3   
   14000bae2:	int3   
   14000bae3:	int3   
   14000bae4:	int3   
   14000bae5:	int3   
   14000bae6:	int3   
   14000bae7:	int3   
   14000bae8:	int3   
   14000bae9:	int3   
   14000baea:	int3   
   14000baeb:	int3   
   14000baec:	int3   
   14000baed:	int3   
   14000baee:	int3   
   14000baef:	int3   
   14000baf0:	lea    rax,[rcx+rdx*1]
   14000baf4:	cmp    rax,rcx
   14000baf7:	jb     0x140016c24
   14000bafd:	mov    QWORD PTR [r8],rax
   14000bb00:	xor    eax,eax
   14000bb02:	ret    
   14000bb03:	int3   
   14000bb04:	int3   
   14000bb05:	int3   
   14000bb06:	int3   
   14000bb07:	int3   
   14000bb08:	int3   
   14000bb09:	int3   
   14000bb0a:	int3   
   14000bb0b:	int3   
   14000bb0c:	int3   
   14000bb0d:	int3   
   14000bb0e:	int3   
   14000bb0f:	int3   
   14000bb10:	mov    edx,0x7fffffff
   14000bb15:	lea    rax,[rip+0x32f74]        # 0x14003ea90
   14000bb1c:	mov    ecx,edx
   14000bb1e:	xor    r9d,r9d
   14000bb21:	cmp    WORD PTR [rax],r9w
   14000bb25:	je     0x14000bb39
   14000bb27:	add    rax,0x2
   14000bb2b:	sub    rcx,0x1
   14000bb2f:	jne    0x14000bb21
   14000bb31:	mov    r9d,0x80070057
   14000bb37:	jmp    0x14000bb3e
   14000bb39:	test   rcx,rcx
   14000bb3c:	je     0x14000bb31
   14000bb3e:	mov    eax,r9d
   14000bb41:	test   r8,r8
   14000bb44:	je     0x14000bb51
   14000bb46:	test   r9d,r9d
   14000bb49:	js     0x14000bb52
   14000bb4b:	sub    rdx,rcx
   14000bb4e:	mov    QWORD PTR [r8],rdx
   14000bb51:	ret    
   14000bb52:	mov    QWORD PTR [r8],0x0
   14000bb59:	ret    
   14000bb5a:	int3   
   14000bb5b:	int3   
   14000bb5c:	int3   
   14000bb5d:	int3   
   14000bb5e:	int3   
   14000bb5f:	int3   
   14000bb60:	mov    QWORD PTR [rsp+0x8],rbx
   14000bb65:	push   rdi
   14000bb66:	sub    rsp,0x20
   14000bb6a:	mov    rdi,rdx
   14000bb6d:	mov    rbx,rcx
   14000bb70:	test   rcx,rcx
   14000bb73:	je     0x14000bbaf
   14000bb75:	cmp    WORD PTR [rbx],0x0
   14000bb79:	je     0x14000bbaf
   14000bb7b:	mov    rcx,rdi
   14000bb7e:	test   rdi,rdi
   14000bb81:	je     0x14000bb9e
   14000bb83:	movzx  eax,WORD PTR [rcx]
   14000bb86:	test   ax,ax
   14000bb89:	je     0x14000bb9e
   14000bb8b:	cmp    WORD PTR [rbx],ax
   14000bb8e:	je     0x14000bbbc
   14000bb90:	call   QWORD PTR [rip+0x3148a]        # 0x14003d020
   14000bb96:	mov    rcx,rax
   14000bb99:	test   rax,rax
   14000bb9c:	jne    0x14000bb83
   14000bb9e:	mov    rcx,rbx
   14000bba1:	call   QWORD PTR [rip+0x31479]        # 0x14003d020
   14000bba7:	mov    rbx,rax
   14000bbaa:	test   rax,rax
   14000bbad:	jne    0x14000bb75
   14000bbaf:	xor    eax,eax
   14000bbb1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bbb6:	add    rsp,0x20
   14000bbba:	pop    rdi
   14000bbbb:	ret    
   14000bbbc:	mov    rcx,rbx
   14000bbbf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bbc4:	add    rsp,0x20
   14000bbc8:	pop    rdi
   14000bbc9:	rex.W jmp QWORD PTR [rip+0x31450]        # 0x14003d020
   14000bbd0:	int3   
   14000bbd1:	int3   
   14000bbd2:	int3   
   14000bbd3:	int3   
   14000bbd4:	int3   
   14000bbd5:	int3   
   14000bbd6:	int3   
   14000bbd7:	int3   
   14000bbd8:	mov    edx,0x7fffffff
   14000bbdd:	lea    rax,[rip+0x32eac]        # 0x14003ea90
   14000bbe4:	mov    ecx,edx
   14000bbe6:	xor    r10d,r10d
   14000bbe9:	cmp    WORD PTR [rax],r10w
   14000bbed:	je     0x14000bbf9
   14000bbef:	add    rax,0x2
   14000bbf3:	sub    rcx,0x1
   14000bbf7:	jne    0x14000bbe9
   14000bbf9:	test   rcx,rcx
   14000bbfc:	mov    eax,r10d
   14000bbff:	mov    r9d,0x80070057
   14000bc05:	cmove  eax,r9d
   14000bc09:	test   r8,r8
   14000bc0c:	je     0x14000bc18
   14000bc0e:	test   eax,eax
   14000bc10:	js     0x14000bc21
   14000bc12:	sub    rdx,rcx
   14000bc15:	mov    QWORD PTR [r8],rdx
   14000bc18:	test   eax,eax
   14000bc1a:	js     0x140016c32
   14000bc20:	ret    
   14000bc21:	mov    QWORD PTR [r8],r10
   14000bc24:	jmp    0x14000bc18
   14000bc26:	int3   
   14000bc27:	int3   
   14000bc28:	int3   
   14000bc29:	int3   
   14000bc2a:	int3   
   14000bc2b:	int3   
   14000bc2c:	sub    rsp,0x28
   14000bc30:	xor    edx,edx
   14000bc32:	lea    rcx,[rip+0x434bf]        # 0x14004f0f8
   14000bc39:	lea    r8d,[rdx+0x28]
   14000bc3d:	call   0x140014694
   14000bc42:	and    QWORD PTR [rip+0x434de],0x0        # 0x14004f128
   14000bc4a:	lea    rcx,[rip+0x434a7]        # 0x14004f0f8
   14000bc51:	and    DWORD PTR [rip+0x434d8],0x0        # 0x14004f130
   14000bc58:	and    DWORD PTR [rip+0x434d5],0x0        # 0x14004f134
   14000bc5f:	and    QWORD PTR [rip+0x434b9],0x0        # 0x14004f120
   14000bc67:	mov    DWORD PTR [rip+0x4347f],0x48        # 0x14004f0f0
   14000bc71:	call   0x14000c130
   14000bc76:	test   eax,eax
   14000bc78:	js     0x140027f6e
   14000bc7e:	lea    rax,[rip+0x4346b]        # 0x14004f0f0
   14000bc85:	add    rsp,0x28
   14000bc89:	ret    
   14000bc8a:	int3   
   14000bc8b:	int3   
   14000bc8c:	int3   
   14000bc8d:	int3   
   14000bc8e:	int3   
   14000bc8f:	int3   
   14000bc90:	mov    QWORD PTR [rsp+0x8],rbx
   14000bc95:	mov    QWORD PTR [rsp+0x10],rsi
   14000bc9a:	push   rdi
   14000bc9b:	sub    rsp,0x20
   14000bc9f:	cmp    DWORD PTR [rip+0x4344a],0x48        # 0x14004f0f0
   14000bca6:	mov    rsi,QWORD PTR [rip+0x430eb]        # 0x14004ed98
   14000bcad:	jne    0x14000bcdb
   14000bcaf:	mov    eax,DWORD PTR [rip+0x4347b]        # 0x14004f130
   14000bcb5:	xor    ebx,ebx
   14000bcb7:	test   eax,eax
   14000bcb9:	jg     0x14000bcf6
   14000bcbb:	lea    rcx,[rip+0x43466]        # 0x14004f128
   14000bcc2:	call   0x14000de14
   14000bcc7:	lea    rcx,[rip+0x4342a]        # 0x14004f0f8
   14000bcce:	call   QWORD PTR [rip+0x316e4]        # 0x14003d3b8
   14000bcd4:	and    DWORD PTR [rip+0x43415],0x0        # 0x14004f0f0
   14000bcdb:	lea    rcx,[rip+0x43446]        # 0x14004f128
   14000bce2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bce7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bcec:	add    rsp,0x20
   14000bcf0:	pop    rdi
   14000bcf1:	jmp    0x14000de14
   14000bcf6:	xor    edi,edi
   14000bcf8:	jmp    0x140027f82
   14000bcfd:	int3   
   14000bcfe:	int3   
   14000bcff:	int3   
   14000bd00:	int3   
   14000bd01:	int3   
   14000bd02:	int3   
   14000bd03:	int3   
   14000bd04:	rex push rdi
   14000bd06:	sub    rsp,0x20
   14000bd0a:	xor    edx,edx
   14000bd0c:	lea    rcx,[rip+0x42ec5]        # 0x14004ebd8
   14000bd13:	lea    r8d,[rdx+0x28]
   14000bd17:	call   0x140014694
   14000bd1c:	and    DWORD PTR [rip+0x42ea5],0x0        # 0x14004ebc8
   14000bd23:	lea    rdi,[rip+0x42e96]        # 0x14004ebc0
   14000bd2a:	and    QWORD PTR [rip+0x42e9e],0x0        # 0x14004ebd0
   14000bd32:	lea    rcx,[rip+0x42e9f]        # 0x14004ebd8
   14000bd39:	and    DWORD PTR [rip+0x42e8c],0x0        # 0x14004ebcc
   14000bd40:	and    QWORD PTR [rip+0x42eb8],0x0        # 0x14004ec00
   14000bd48:	mov    QWORD PTR [rip+0x42e11],rdi        # 0x14004eb60
   14000bd4f:	call   0x14000c130
   14000bd54:	test   eax,eax
   14000bd56:	js     0x140027fca
   14000bd5c:	mov    DWORD PTR [rip+0x42e62],0x38        # 0x14004ebc8
   14000bd66:	movups xmm0,XMMWORD PTR [rip+0x35c93]        # 0x140041a00
   14000bd6d:	movdqu XMMWORD PTR [rip+0x42ddb],xmm0        # 0x14004eb50
   14000bd75:	call   QWORD PTR [rip+0x3157d]        # 0x14003d2f8
   14000bd7b:	and    QWORD PTR [rip+0x42e8d],0x0        # 0x14004ec10
   14000bd83:	xor    edx,edx
   14000bd85:	xor    ecx,ecx
   14000bd87:	mov    DWORD PTR [rip+0x42e7b],eax        # 0x14004ec08
   14000bd8d:	mov    DWORD PTR [rip+0x42e81],0x1388        # 0x14004ec18
   14000bd97:	mov    DWORD PTR [rip+0x42e7b],0x3e8        # 0x14004ec1c
   14000bda1:	mov    BYTE PTR [rip+0x42e78],0x1        # 0x14004ec20
   14000bda8:	mov    BYTE PTR [rip+0x42e73],0x0        # 0x14004ec22
   14000bdaf:	call   QWORD PTR [rip+0x47363]        # 0x140053118
   14000bdb5:	test   eax,eax
   14000bdb7:	js     0x140027fd6
   14000bdbd:	mov    BYTE PTR [rip+0x42e5e],0x1        # 0x14004ec22
   14000bdc4:	mov    dl,0x1
   14000bdc6:	call   0x14000beec
   14000bdcb:	mov    rax,rdi
   14000bdce:	add    rsp,0x20
   14000bdd2:	pop    rdi
   14000bdd3:	ret    
   14000bdd4:	int3   
   14000bdd5:	int3   
   14000bdd6:	int3   
   14000bdd7:	int3   
   14000bdd8:	int3   
   14000bdd9:	int3   
   14000bdda:	int3   
   14000bddb:	int3   
   14000bddc:	mov    QWORD PTR [rsp+0x8],rbx
   14000bde1:	mov    QWORD PTR [rsp+0x10],rsi
   14000bde6:	mov    QWORD PTR [rsp+0x18],rdi
   14000bdeb:	push   r14
   14000bded:	sub    rsp,0x20
   14000bdf1:	cmp    DWORD PTR [rip+0x42f48],0x0        # 0x14004ed40
   14000bdf8:	je     0x14000be48
   14000bdfa:	mov    rdi,QWORD PTR [rip+0x42f4f]        # 0x14004ed50
   14000be01:	mov    rax,QWORD PTR [rip+0x42f50]        # 0x14004ed58
   14000be08:	cmp    rdi,rax
   14000be0b:	jae    0x14000be34
   14000be0d:	mov    rsi,QWORD PTR [rdi]
   14000be10:	test   rsi,rsi
   14000be13:	je     0x14000be2e
   14000be15:	mov    r14,QWORD PTR [rsi+0x20]
   14000be19:	test   r14,r14
   14000be1c:	jne    0x140028000
   14000be22:	and    QWORD PTR [rsi+0x20],0x0
   14000be27:	mov    rax,QWORD PTR [rip+0x42f2a]        # 0x14004ed58
   14000be2e:	add    rdi,0x8
   14000be32:	jmp    0x14000be08
   14000be34:	lea    rcx,[rip+0x42f25]        # 0x14004ed60
   14000be3b:	call   QWORD PTR [rip+0x31577]        # 0x14003d3b8
   14000be41:	and    DWORD PTR [rip+0x42ef8],0x0        # 0x14004ed40
   14000be48:	mov    rbx,QWORD PTR [rsp+0x30]
   14000be4d:	mov    rsi,QWORD PTR [rsp+0x38]
   14000be52:	mov    rdi,QWORD PTR [rsp+0x40]
   14000be57:	add    rsp,0x20
   14000be5b:	pop    r14
   14000be5d:	ret    
   14000be5e:	int3   
   14000be5f:	int3   
   14000be60:	int3   
   14000be61:	int3   
   14000be62:	int3   
   14000be63:	int3   
   14000be64:	sub    rsp,0x28
   14000be68:	xor    edx,edx
   14000be6a:	lea    rcx,[rip+0x42eef]        # 0x14004ed60
   14000be71:	lea    r8d,[rdx+0x28]
   14000be75:	call   0x140014694
   14000be7a:	and    DWORD PTR [rip+0x42ebf],0x0        # 0x14004ed40
   14000be81:	lea    rax,[rip+0xffffffffffff4178]        # 0x140000000
   14000be88:	mov    QWORD PTR [rip+0x42eb9],rax        # 0x14004ed48
   14000be8f:	lea    rcx,[rip+0x42eca]        # 0x14004ed60
   14000be96:	lea    rax,[rip+0x3fa2b]        # 0x14004b8c8
   14000be9d:	mov    QWORD PTR [rip+0x42eac],rax        # 0x14004ed50
   14000bea4:	lea    rax,[rip+0x3fa35]        # 0x14004b8e0
   14000beab:	mov    QWORD PTR [rip+0x42ea6],rax        # 0x14004ed58
   14000beb2:	call   0x14000c130
   14000beb7:	test   eax,eax
   14000beb9:	js     0x14000bed1
   14000bebb:	mov    DWORD PTR [rip+0x42e7b],0x48        # 0x14004ed40
   14000bec5:	lea    rax,[rip+0x42e74]        # 0x14004ed40
   14000becc:	add    rsp,0x28
   14000bed0:	ret    
   14000bed1:	mov    BYTE PTR [rip+0x42c58],0x1        # 0x14004eb30
   14000bed8:	jmp    0x14000bec5
   14000beda:	int3   
   14000bedb:	int3   
   14000bedc:	int3   
   14000bedd:	int3   
   14000bede:	int3   
   14000bedf:	int3   
   14000bee0:	jmp    0x14000bddc
   14000bee5:	int3   
   14000bee6:	int3   
   14000bee7:	int3   
   14000bee8:	int3   
   14000bee9:	int3   
   14000beea:	int3   
   14000beeb:	int3   
   14000beec:	mov    QWORD PTR [rsp+0x8],rbx
   14000bef1:	mov    QWORD PTR [rsp+0x10],rsi
   14000bef6:	push   rdi
   14000bef7:	sub    rsp,0x20
   14000befb:	mov    rdi,QWORD PTR [rip+0x42e4e]        # 0x14004ed50
   14000bf02:	mov    sil,dl
   14000bf05:	mov    rax,QWORD PTR [rip+0x42e4c]        # 0x14004ed58
   14000bf0c:	cmp    rdi,rax
   14000bf0f:	jae    0x14000bf38
   14000bf11:	mov    rbx,QWORD PTR [rdi]
   14000bf14:	test   rbx,rbx
   14000bf17:	je     0x14000bf32
   14000bf19:	mov    rbx,QWORD PTR [rbx+0x40]
   14000bf1d:	mov    rcx,rbx
   14000bf20:	call   QWORD PTR [rip+0x31802]        # 0x14003d728
   14000bf26:	mov    cl,sil
   14000bf29:	call   rbx
   14000bf2b:	mov    rax,QWORD PTR [rip+0x42e26]        # 0x14004ed58
   14000bf32:	add    rdi,0x8
   14000bf36:	jmp    0x14000bf0c
   14000bf38:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bf3d:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bf42:	add    rsp,0x20
   14000bf46:	pop    rdi
   14000bf47:	ret    
   14000bf48:	int3   
   14000bf49:	int3   
   14000bf4a:	int3   
   14000bf4b:	int3   
   14000bf4c:	int3   
   14000bf4d:	int3   
   14000bf4e:	int3   
   14000bf4f:	int3   
   14000bf50:	rex push rbx
   14000bf52:	sub    rsp,0x20
   14000bf56:	xor    edx,edx
   14000bf58:	lea    rcx,[rip+0x42e59]        # 0x14004edb8
   14000bf5f:	lea    r8d,[rdx+0x28]
   14000bf63:	call   0x140014694
   14000bf68:	and    QWORD PTR [rip+0x42e70],0x0        # 0x14004ede0
   14000bf70:	lea    rax,[rip+0xffffffffffff4089]        # 0x140000000
   14000bf77:	and    DWORD PTR [rip+0x42e6a],0x0        # 0x14004ede8
   14000bf7e:	lea    rcx,[rip+0x42e33]        # 0x14004edb8
   14000bf85:	and    DWORD PTR [rip+0x42e60],0x0        # 0x14004edec
   14000bf8c:	mov    ebx,0x1
   14000bf91:	mov    QWORD PTR [rip+0x42e08],rax        # 0x14004eda0
   14000bf98:	mov    QWORD PTR [rip+0x42df9],rax        # 0x14004ed98
   14000bf9f:	lea    rax,[rip+0x32b62]        # 0x14003eb08
   14000bfa6:	mov    QWORD PTR [rip+0x42e03],rax        # 0x14004edb0
   14000bfad:	mov    DWORD PTR [rip+0x42dd9],0x60        # 0x14004ed90
   14000bfb7:	mov    BYTE PTR [rip+0x42deb],bl        # 0x14004eda8
   14000bfbd:	mov    DWORD PTR [rip+0x42de5],0x800        # 0x14004edac
   14000bfc7:	call   0x14000c130
   14000bfcc:	movzx  ecx,BYTE PTR [rip+0x42b5d]        # 0x14004eb30
   14000bfd3:	test   eax,eax
   14000bfd5:	lea    rax,[rip+0x42db4]        # 0x14004ed90
   14000bfdc:	cmovs  ecx,ebx
   14000bfdf:	mov    BYTE PTR [rip+0x42b4b],cl        # 0x14004eb30
   14000bfe5:	add    rsp,0x20
   14000bfe9:	pop    rbx
   14000bfea:	ret    
   14000bfeb:	int3   
   14000bfec:	int3   
   14000bfed:	int3   
   14000bfee:	int3   
   14000bfef:	int3   
   14000bff0:	int3   
   14000bff1:	int3   
   14000bff2:	int3   
   14000bff3:	int3   
   14000bff4:	sub    rsp,0x28
   14000bff8:	lea    rcx,[rip+0x42db9]        # 0x14004edb8
   14000bfff:	call   QWORD PTR [rip+0x313b3]        # 0x14003d3b8
   14000c005:	mov    rcx,QWORD PTR [rip+0x42dd4]        # 0x14004ede0
   14000c00c:	test   rcx,rcx
   14000c00f:	jne    0x14002801c
   14000c015:	and    DWORD PTR [rip+0x42dcc],0x0        # 0x14004ede8
   14000c01c:	and    DWORD PTR [rip+0x42dc9],0x0        # 0x14004edec
   14000c023:	add    rsp,0x28
   14000c027:	ret    
   14000c028:	int3   
   14000c029:	int3   
   14000c02a:	int3   
   14000c02b:	int3   
   14000c02c:	int3   
   14000c02d:	int3   
   14000c02e:	int3   
   14000c02f:	int3   
   14000c030:	mov    rax,rsp
   14000c033:	mov    QWORD PTR [rax+0x18],r8
   14000c037:	mov    QWORD PTR [rax+0x10],rdx
   14000c03b:	mov    QWORD PTR [rax+0x8],rcx
   14000c03f:	push   rbx
   14000c040:	push   rsi
   14000c041:	push   rdi
   14000c042:	push   r12
   14000c044:	push   r13
   14000c046:	push   r14
   14000c048:	push   r15
   14000c04a:	sub    rsp,0x30
   14000c04e:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   14000c056:	mov    r15,r8
   14000c059:	mov    r12,rdx
   14000c05c:	mov    r13,rcx
   14000c05f:	xor    edi,edi
   14000c061:	test   r8,r8
   14000c064:	je     0x140028030
   14000c06a:	mov    QWORD PTR [r8],rdi
   14000c06d:	mov    r14d,0x8007000e
   14000c073:	mov    DWORD PTR [rsp+0x88],r14d
   14000c07b:	mov    QWORD PTR [rsp+0x20],rdi
   14000c080:	lea    ecx,[rdi+0x48]
   14000c083:	call   0x140013d94
   14000c088:	mov    rsi,rax
   14000c08b:	test   rax,rax
   14000c08e:	je     0x14002803a
   14000c094:	mov    DWORD PTR [rax+0x8],edi
   14000c097:	xor    edx,edx
   14000c099:	lea    r8d,[rdi+0x28]
   14000c09d:	lea    rcx,[rax+0x10]
   14000c0a1:	call   0x140014694
   14000c0a6:	mov    BYTE PTR [rsi+0x38],dil
   14000c0aa:	lea    rax,[rip+0x32a67]        # 0x14003eb18
   14000c0b1:	mov    QWORD PTR [rsi],rax
   14000c0b4:	mov    QWORD PTR [rsp+0x20],rsi
   14000c0b9:	test   rsi,rsi
   14000c0bc:	je     0x14000c10a
   14000c0be:	mov    QWORD PTR [rsi+0x40],r13
   14000c0c2:	lea    rcx,[rsi+0x10]
   14000c0c6:	call   0x14000c130
   14000c0cb:	mov    r14d,eax
   14000c0ce:	test   eax,eax
   14000c0d0:	js     0x14000c0d6
   14000c0d2:	mov    BYTE PTR [rsi+0x38],0x1
   14000c0d6:	cmovns r14d,edi
   14000c0da:	test   r14d,r14d
   14000c0dd:	jne    0x14000c11d
   14000c0df:	mov    rax,QWORD PTR [rsi]
   14000c0e2:	mov    rbx,QWORD PTR [rax]
   14000c0e5:	lea    rax,[rip+0x74]        # 0x14000c160
   14000c0ec:	cmp    rbx,rax
   14000c0ef:	jne    0x140028068
   14000c0f5:	mov    r8,r15
   14000c0f8:	mov    rdx,r12
   14000c0fb:	mov    rcx,rsi
   14000c0fe:	call   0x14000c160
   14000c103:	mov    r14d,eax
   14000c106:	test   eax,eax
   14000c108:	jne    0x14000c11d
   14000c10a:	mov    eax,r14d
   14000c10d:	add    rsp,0x30
   14000c111:	pop    r15
   14000c113:	pop    r14
   14000c115:	pop    r13
   14000c117:	pop    r12
   14000c119:	pop    rdi
   14000c11a:	pop    rsi
   14000c11b:	pop    rbx
   14000c11c:	ret    
   14000c11d:	mov    rcx,rsi
   14000c120:	call   0x14000c510
   14000c125:	jmp    0x14000c10a
   14000c127:	int3   
   14000c128:	int3   
   14000c129:	int3   
   14000c12a:	int3   
   14000c12b:	int3   
   14000c12c:	int3   
   14000c12d:	int3   
   14000c12e:	int3   
   14000c12f:	int3   
   14000c130:	sub    rsp,0x38
   14000c134:	call   QWORD PTR [rip+0x3124e]        # 0x14003d388
   14000c13a:	xor    eax,eax
   14000c13c:	mov    DWORD PTR [rsp+0x20],eax
   14000c140:	jmp    0x14000c14b
   14000c142:	mov    eax,0x8007000e
   14000c147:	mov    DWORD PTR [rsp+0x20],eax
   14000c14b:	add    rsp,0x38
   14000c14f:	ret    
   14000c150:	int3   
   14000c151:	int3   
   14000c152:	int3   
   14000c153:	int3   
   14000c154:	int3   
   14000c155:	int3   
   14000c156:	int3   
   14000c157:	int3   
   14000c158:	int3   
   14000c159:	int3   
   14000c15a:	int3   
   14000c15b:	int3   
   14000c15c:	int3   
   14000c15d:	int3   
   14000c15e:	int3   
   14000c15f:	int3   
   14000c160:	mov    r9,r8
   14000c163:	mov    r8,rdx
   14000c166:	lea    rdx,[rip+0x36483]        # 0x1400425f0
   14000c16d:	jmp    0x14000c260
   14000c172:	int3   
   14000c173:	int3   
   14000c174:	int3   
   14000c175:	int3   
   14000c176:	int3   
   14000c177:	int3   
   14000c178:	int3   
   14000c179:	int3   
   14000c17a:	int3   
   14000c17b:	int3   
   14000c17c:	int3   
   14000c17d:	int3   
   14000c17e:	int3   
   14000c17f:	int3   
   14000c180:	rex push rbx
   14000c182:	sub    rsp,0x20
   14000c186:	or     ebx,0xffffffff
   14000c189:	lock xadd DWORD PTR [rcx+0x8],ebx
   14000c18e:	sub    ebx,0x1
   14000c191:	je     0x14000c19b
   14000c193:	mov    eax,ebx
   14000c195:	add    rsp,0x20
   14000c199:	pop    rbx
   14000c19a:	ret    
   14000c19b:	test   rcx,rcx
   14000c19e:	je     0x14000c193
   14000c1a0:	call   0x14000c1c4
   14000c1a5:	jmp    0x14000c193
   14000c1a7:	int3   
   14000c1a8:	int3   
   14000c1a9:	int3   
   14000c1aa:	int3   
   14000c1ab:	int3   
   14000c1ac:	int3   
   14000c1ad:	int3   
   14000c1ae:	int3   
   14000c1af:	int3   
   14000c1b0:	mov    eax,0x1
   14000c1b5:	lock xadd DWORD PTR [rcx+0x8],eax
   14000c1ba:	inc    eax
   14000c1bc:	ret    
   14000c1bd:	int3   
   14000c1be:	int3   
   14000c1bf:	int3   
   14000c1c0:	int3   
   14000c1c1:	int3   
   14000c1c2:	int3   
   14000c1c3:	int3   
   14000c1c4:	mov    QWORD PTR [rsp+0x8],rbx
   14000c1c9:	mov    QWORD PTR [rsp+0x10],rsi
   14000c1ce:	push   rdi
   14000c1cf:	sub    rsp,0x20
   14000c1d3:	lea    rax,[rip+0x32c46]        # 0x14003ee20
   14000c1da:	mov    DWORD PTR [rcx+0x8],0xc0000001
   14000c1e1:	mov    QWORD PTR [rcx],rax
   14000c1e4:	mov    rbx,rcx
   14000c1e7:	mov    rdi,QWORD PTR [rcx+0x50]
   14000c1eb:	test   rdi,rdi
   14000c1ee:	je     0x14000c20b
   14000c1f0:	mov    rax,QWORD PTR [rdi]
   14000c1f3:	mov    rsi,QWORD PTR [rax+0x10]
   14000c1f7:	lea    rax,[rip+0x2e2]        # 0x14000c4e0
   14000c1fe:	cmp    rsi,rax
   14000c201:	jne    0x14000c22e
   14000c203:	mov    rcx,rdi
   14000c206:	call   0x14000c4e0
   14000c20b:	mov    rcx,rbx
   14000c20e:	call   0x14000d078
   14000c213:	mov    rcx,rbx
   14000c216:	call   0x140013de0
   14000c21b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c220:	mov    rax,rbx
   14000c223:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c228:	add    rsp,0x20
   14000c22c:	pop    rdi
   14000c22d:	ret    
   14000c22e:	lea    rax,[rip+0x47b]        # 0x14000c6b0
   14000c235:	cmp    rsi,rax
   14000c238:	jne    0x14000c244
   14000c23a:	mov    rcx,rdi
   14000c23d:	call   0x14000c6b0
   14000c242:	jmp    0x14000c20b
   14000c244:	mov    rcx,rsi
   14000c247:	call   QWORD PTR [rip+0x314db]        # 0x14003d728
   14000c24d:	mov    rcx,rdi
   14000c250:	call   rsi
   14000c252:	jmp    0x14000c20b
   14000c254:	int3   
   14000c255:	int3   
   14000c256:	int3   
   14000c257:	int3   
   14000c258:	int3   
   14000c259:	int3   
   14000c25a:	int3   
   14000c25b:	int3   
   14000c25c:	int3   
   14000c25d:	int3   
   14000c25e:	int3   
   14000c25f:	int3   
   14000c260:	mov    QWORD PTR [rsp+0x18],rbx
   14000c265:	push   rsi
   14000c266:	push   r14
   14000c268:	push   r15
   14000c26a:	sub    rsp,0x20
   14000c26e:	mov    r14,r9
   14000c271:	mov    rsi,r8
   14000c274:	mov    rbx,rdx
   14000c277:	mov    r15,rcx
   14000c27a:	test   rcx,rcx
   14000c27d:	je     0x1400280cb
   14000c283:	test   rdx,rdx
   14000c286:	je     0x1400280cb
   14000c28c:	test   r9,r9
   14000c28f:	je     0x140028082
   14000c295:	mov    QWORD PTR [r9],0x0
   14000c29c:	cmp    DWORD PTR [r8],0x0
   14000c2a0:	mov    QWORD PTR [rsp+0x48],rdi
   14000c2a5:	je     0x14000c390
   14000c2ab:	mov    rdi,QWORD PTR [rdx+0x10]
   14000c2af:	mov    QWORD PTR [rsp+0x40],rbp
   14000c2b4:	test   rdi,rdi
   14000c2b7:	je     0x14000c2da
   14000c2b9:	mov    rcx,QWORD PTR [rbx]
   14000c2bc:	test   rcx,rcx
   14000c2bf:	je     0x14002808c
   14000c2c5:	mov    eax,DWORD PTR [rsi]
   14000c2c7:	xor    ebp,ebp
   14000c2c9:	cmp    DWORD PTR [rcx],eax
   14000c2cb:	je     0x14000c2f8
   14000c2cd:	mov    rdi,QWORD PTR [rbx+0x28]
   14000c2d1:	add    rbx,0x18
   14000c2d5:	test   rdi,rdi
   14000c2d8:	jne    0x14000c2b9
   14000c2da:	mov    eax,0x80004002
   14000c2df:	mov    rbp,QWORD PTR [rsp+0x40]
   14000c2e4:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c2e9:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c2ee:	add    rsp,0x20
   14000c2f2:	pop    r15
   14000c2f4:	pop    r14
   14000c2f6:	pop    rsi
   14000c2f7:	ret    
   14000c2f8:	mov    eax,DWORD PTR [rsi+0x4]
   14000c2fb:	cmp    DWORD PTR [rcx+0x4],eax
   14000c2fe:	jne    0x14000c2cd
   14000c300:	mov    eax,DWORD PTR [rsi+0x8]
   14000c303:	cmp    DWORD PTR [rcx+0x8],eax
   14000c306:	jne    0x14000c2cd
   14000c308:	mov    eax,DWORD PTR [rsi+0xc]
   14000c30b:	cmp    DWORD PTR [rcx+0xc],eax
   14000c30e:	jne    0x14000c2cd
   14000c310:	cmp    rdi,0x1
   14000c314:	jne    0x140028096
   14000c31a:	mov    rdi,QWORD PTR [rbx+0x8]
   14000c31e:	add    rdi,r15
   14000c321:	mov    rax,QWORD PTR [rdi]
   14000c324:	mov    rbx,QWORD PTR [rax+0x8]
   14000c328:	lea    rax,[rip+0xfffffffffffffe81]        # 0x14000c1b0
   14000c32f:	cmp    rbx,rax
   14000c332:	je     0x14000c41d
   14000c338:	lea    rax,[rip+0xfffffffffffffe71]        # 0x14000c1b0
   14000c33f:	cmp    rbx,rax
   14000c342:	je     0x14000c42f
   14000c348:	lea    rax,[rip+0x3541]        # 0x14000f890
   14000c34f:	cmp    rbx,rax
   14000c352:	je     0x14000c465
   14000c358:	lea    rax,[rip+0xf81]        # 0x14000d2e0
   14000c35f:	cmp    rbx,rax
   14000c362:	je     0x14000c489
   14000c368:	lea    rax,[rip+0x471]        # 0x14000c7e0
   14000c36f:	cmp    rbx,rax
   14000c372:	je     0x14000c4bf
   14000c378:	mov    rcx,rbx
   14000c37b:	call   QWORD PTR [rip+0x313a7]        # 0x14003d728
   14000c381:	mov    rcx,rdi
   14000c384:	call   rbx
   14000c386:	xor    eax,eax
   14000c388:	mov    QWORD PTR [r14],rdi
   14000c38b:	jmp    0x14000c2df
   14000c390:	cmp    DWORD PTR [r8+0x4],0x0
   14000c395:	jne    0x14000c2ab
   14000c39b:	cmp    DWORD PTR [r8+0x8],0xc0
   14000c3a3:	jne    0x14000c2ab
   14000c3a9:	cmp    DWORD PTR [r8+0xc],0x46000000
   14000c3b1:	jne    0x14000c2ab
   14000c3b7:	mov    rbx,QWORD PTR [rdx+0x8]
   14000c3bb:	add    rbx,rcx
   14000c3be:	mov    rax,QWORD PTR [rbx]
   14000c3c1:	mov    rdi,QWORD PTR [rax+0x8]
   14000c3c5:	lea    rax,[rip+0x414]        # 0x14000c7e0
   14000c3cc:	cmp    rdi,rax
   14000c3cf:	je     0x14000c441
   14000c3d1:	lea    rax,[rip+0xfffffffffffffdd8]        # 0x14000c1b0
   14000c3d8:	cmp    rdi,rax
   14000c3db:	je     0x14000c453
   14000c3dd:	lea    rax,[rip+0xefc]        # 0x14000d2e0
   14000c3e4:	cmp    rdi,rax
   14000c3e7:	je     0x14000c477
   14000c3ed:	lea    rax,[rip+0xfffffffffffffdbc]        # 0x14000c1b0
   14000c3f4:	cmp    rdi,rax
   14000c3f7:	je     0x14000c49b
   14000c3fd:	lea    rax,[rip+0x348c]        # 0x14000f890
   14000c404:	cmp    rdi,rax
   14000c407:	je     0x14000c4ad
   14000c40d:	mov    rcx,rdi
   14000c410:	call   QWORD PTR [rip+0x31312]        # 0x14003d728
   14000c416:	mov    rcx,rbx
   14000c419:	call   rdi
   14000c41b:	jmp    0x14000c449
   14000c41d:	mov    rcx,rdi
   14000c420:	call   0x14000c1b0
   14000c425:	xor    eax,eax
   14000c427:	mov    QWORD PTR [r14],rdi
   14000c42a:	jmp    0x14000c2df
   14000c42f:	mov    rcx,rdi
   14000c432:	call   0x14000c1b0
   14000c437:	xor    eax,eax
   14000c439:	mov    QWORD PTR [r14],rdi
   14000c43c:	jmp    0x14000c2df
   14000c441:	mov    rcx,rbx
   14000c444:	call   0x14000c7e0
   14000c449:	mov    QWORD PTR [r14],rbx
   14000c44c:	xor    eax,eax
   14000c44e:	jmp    0x14000c2e4
   14000c453:	mov    rcx,rbx
   14000c456:	call   0x14000c1b0
   14000c45b:	xor    eax,eax
   14000c45d:	mov    QWORD PTR [r14],rbx
   14000c460:	jmp    0x14000c2e4
   14000c465:	mov    rcx,rdi
   14000c468:	call   0x14000f890
   14000c46d:	xor    eax,eax
   14000c46f:	mov    QWORD PTR [r14],rdi
   14000c472:	jmp    0x14000c2df
   14000c477:	mov    rcx,rbx
   14000c47a:	call   0x14000d2e0
   14000c47f:	xor    eax,eax
   14000c481:	mov    QWORD PTR [r14],rbx
   14000c484:	jmp    0x14000c2e4
   14000c489:	mov    rcx,rdi
   14000c48c:	call   0x14000d2e0
   14000c491:	xor    eax,eax
   14000c493:	mov    QWORD PTR [r14],rdi
   14000c496:	jmp    0x14000c2df
   14000c49b:	mov    rcx,rbx
   14000c49e:	call   0x14000c1b0
   14000c4a3:	xor    eax,eax
   14000c4a5:	mov    QWORD PTR [r14],rbx
   14000c4a8:	jmp    0x14000c2e4
   14000c4ad:	mov    rcx,rbx
   14000c4b0:	call   0x14000f890
   14000c4b5:	xor    eax,eax
   14000c4b7:	mov    QWORD PTR [r14],rbx
   14000c4ba:	jmp    0x14000c2e4
   14000c4bf:	mov    rcx,rdi
   14000c4c2:	call   0x14000c7e0
   14000c4c7:	xor    eax,eax
   14000c4c9:	mov    QWORD PTR [r14],rdi
   14000c4cc:	jmp    0x14000c2df
   14000c4d1:	int3   
   14000c4d2:	int3   
   14000c4d3:	int3   
   14000c4d4:	int3   
   14000c4d5:	int3   
   14000c4d6:	int3   
   14000c4d7:	int3   
   14000c4d8:	int3   
   14000c4d9:	int3   
   14000c4da:	int3   
   14000c4db:	int3   
   14000c4dc:	int3   
   14000c4dd:	int3   
   14000c4de:	int3   
   14000c4df:	int3   
   14000c4e0:	rex push rbx
   14000c4e2:	sub    rsp,0x20
   14000c4e6:	or     ebx,0xffffffff
   14000c4e9:	lock xadd DWORD PTR [rcx+0x8],ebx
   14000c4ee:	sub    ebx,0x1
   14000c4f1:	je     0x14000c4fb
   14000c4f3:	mov    eax,ebx
   14000c4f5:	add    rsp,0x20
   14000c4f9:	pop    rbx
   14000c4fa:	ret    
   14000c4fb:	test   rcx,rcx
   14000c4fe:	je     0x14000c4f3
   14000c500:	call   0x14000c510
   14000c505:	jmp    0x14000c4f3
   14000c507:	int3   
   14000c508:	int3   
   14000c509:	int3   
   14000c50a:	int3   
   14000c50b:	int3   
   14000c50c:	int3   
   14000c50d:	int3   
   14000c50e:	int3   
   14000c50f:	int3   
   14000c510:	rex push rbx
   14000c512:	sub    rsp,0x20
   14000c516:	lea    rax,[rip+0x325fb]        # 0x14003eb18
   14000c51d:	mov    DWORD PTR [rcx+0x8],0xc0000001
   14000c524:	mov    QWORD PTR [rcx],rax
   14000c527:	mov    rbx,rcx
   14000c52a:	call   0x14000d078
   14000c52f:	mov    rcx,rbx
   14000c532:	call   0x140013de0
   14000c537:	mov    rax,rbx
   14000c53a:	add    rsp,0x20
   14000c53e:	pop    rbx
   14000c53f:	ret    
   14000c540:	int3   
   14000c541:	int3   
   14000c542:	int3   
   14000c543:	int3   
   14000c544:	int3   
   14000c545:	int3   
   14000c546:	int3   
   14000c547:	int3   
   14000c548:	int3   
   14000c549:	int3   
   14000c54a:	int3   
   14000c54b:	int3   
   14000c54c:	int3   
   14000c54d:	int3   
   14000c54e:	int3   
   14000c54f:	int3   
   14000c550:	mov    QWORD PTR [rsp+0x18],r8
   14000c555:	mov    QWORD PTR [rsp+0x8],rcx
   14000c55a:	push   rbx
   14000c55b:	push   rsi
   14000c55c:	push   rdi
   14000c55d:	push   r12
   14000c55f:	push   r13
   14000c561:	push   r14
   14000c563:	push   r15
   14000c565:	sub    rsp,0x20
   14000c569:	mov    r15,r9
   14000c56c:	mov    r14,r8
   14000c56f:	mov    rdi,rcx
   14000c572:	mov    eax,0x80004003
   14000c577:	xor    r13d,r13d
   14000c57a:	test   r9,r9
   14000c57d:	je     0x14000c691
   14000c583:	mov    QWORD PTR [r9],r13
   14000c586:	test   rdx,rdx
   14000c589:	jne    0x1400280d6
   14000c58f:	cmp    DWORD PTR [rcx+0x48],r13d
   14000c593:	jne    0x14000c6a1
   14000c599:	lea    rbx,[rcx+0x50]
   14000c59d:	mov    eax,r13d
   14000c5a0:	cmp    QWORD PTR [rbx],r13
   14000c5a3:	sete   al
   14000c5a6:	test   al,al
   14000c5a8:	je     0x14000c6a1
   14000c5ae:	add    rcx,0x10
   14000c5b2:	call   QWORD PTR [rip+0x30e10]        # 0x14003d3c8
   14000c5b8:	cmp    DWORD PTR [rdi+0x48],r13d
   14000c5bc:	jne    0x14000c658
   14000c5c2:	mov    eax,r13d
   14000c5c5:	cmp    QWORD PTR [rbx],r13
   14000c5c8:	sete   al
   14000c5cb:	test   al,al
   14000c5cd:	je     0x14000c658
   14000c5d3:	lea    rcx,[rsp+0x78]
   14000c5d8:	call   0x14000cef8
   14000c5dd:	mov    DWORD PTR [rdi+0x48],eax
   14000c5e0:	test   eax,eax
   14000c5e2:	js     0x14000c658
   14000c5e4:	mov    r14,QWORD PTR [rsp+0x78]
   14000c5e9:	mov    rax,QWORD PTR [r14]
   14000c5ec:	mov    r13,QWORD PTR [rax]
   14000c5ef:	lea    rsi,[rip+0x1ca]        # 0x14000c7c0
   14000c5f6:	cmp    r13,rsi
   14000c5f9:	jne    0x14000c61b
   14000c5fb:	mov    r8,rbx
   14000c5fe:	lea    rdx,[rip+0x3280b]        # 0x14003ee10
   14000c605:	mov    rcx,r14
   14000c608:	call   0x14000c7c0
   14000c60d:	mov    DWORD PTR [rdi+0x48],eax
   14000c610:	test   eax,eax
   14000c612:	js     0x14000c639
   14000c614:	mov    r14,QWORD PTR [rsp+0x70]
   14000c619:	jmp    0x14000c65f
   14000c61b:	mov    rcx,r13
   14000c61e:	mov    rax,QWORD PTR [rip+0x31103]        # 0x14003d728
   14000c625:	call   rax
   14000c627:	mov    r8,rbx
   14000c62a:	lea    rdx,[rip+0x327df]        # 0x14003ee10
   14000c631:	mov    rcx,r14
   14000c634:	call   r13
   14000c637:	jmp    0x14000c60d
   14000c639:	mov    rax,QWORD PTR [r14]
   14000c63c:	mov    rbx,QWORD PTR [rax+0x60]
   14000c640:	mov    rcx,rbx
   14000c643:	mov    rax,QWORD PTR [rip+0x310de]        # 0x14003d728
   14000c64a:	call   rax
   14000c64c:	mov    edx,0x1
   14000c651:	mov    rcx,r14
   14000c654:	call   rbx
   14000c656:	jmp    0x14000c614
   14000c658:	lea    rsi,[rip+0x161]        # 0x14000c7c0
   14000c65f:	lea    rcx,[rdi+0x10]
   14000c663:	call   QWORD PTR [rip+0x30d6f]        # 0x14003d3d8
   14000c669:	mov    eax,DWORD PTR [rdi+0x48]
   14000c66c:	test   eax,eax
   14000c66e:	jne    0x14000c691
   14000c670:	mov    rbx,QWORD PTR [rdi+0x50]
   14000c674:	mov    rax,QWORD PTR [rbx]
   14000c677:	mov    rdi,QWORD PTR [rax]
   14000c67a:	cmp    rdi,rsi
   14000c67d:	jne    0x1400280e0
   14000c683:	mov    r8,r15
   14000c686:	mov    rdx,r14
   14000c689:	mov    rcx,rbx
   14000c68c:	call   0x14000c7c0
   14000c691:	add    rsp,0x20
   14000c695:	pop    r15
   14000c697:	pop    r14
   14000c699:	pop    r13
   14000c69b:	pop    r12
   14000c69d:	pop    rdi
   14000c69e:	pop    rsi
   14000c69f:	pop    rbx
   14000c6a0:	ret    
   14000c6a1:	lea    rsi,[rip+0x118]        # 0x14000c7c0
   14000c6a8:	jmp    0x14000c669
   14000c6aa:	int3   
   14000c6ab:	int3   
   14000c6ac:	int3   
   14000c6ad:	int3   
   14000c6ae:	int3   
   14000c6af:	int3   
   14000c6b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c6b5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c6ba:	push   rdi
   14000c6bb:	sub    rsp,0x20
   14000c6bf:	sub    DWORD PTR [rcx+0x28],0x1
   14000c6c3:	mov    rbx,rcx
   14000c6c6:	mov    edi,DWORD PTR [rcx+0x28]
   14000c6c9:	je     0x14000c708
   14000c6cb:	cmp    edi,0x1
   14000c6ce:	jne    0x14000c6f6
   14000c6d0:	mov    rbx,QWORD PTR [rip+0x42489]        # 0x14004eb60
   14000c6d7:	mov    rax,QWORD PTR [rbx]
   14000c6da:	mov    rsi,QWORD PTR [rax+0x10]
   14000c6de:	lea    rax,[rip+0xffffffffffffb93b]        # 0x140008020
   14000c6e5:	cmp    rsi,rax
   14000c6e8:	jne    0x140028117
   14000c6ee:	mov    rcx,rbx
   14000c6f1:	call   0x140008020
   14000c6f6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c6fb:	mov    eax,edi
   14000c6fd:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c702:	add    rsp,0x20
   14000c706:	pop    rdi
   14000c707:	ret    
   14000c708:	test   rcx,rcx
   14000c70b:	je     0x14000c6f6
   14000c70d:	mov    rax,QWORD PTR [rcx]
   14000c710:	mov    rsi,QWORD PTR [rax+0x60]
   14000c714:	lea    rax,[rip+0x25]        # 0x14000c740
   14000c71b:	cmp    rsi,rax
   14000c71e:	jne    0x1400280fe
   14000c724:	mov    edx,0x1
   14000c729:	call   0x14000c740
   14000c72e:	jmp    0x14000c6f6
   14000c730:	int3   
   14000c731:	int3   
   14000c732:	int3   
   14000c733:	int3   
   14000c734:	int3   
   14000c735:	int3   
   14000c736:	int3   
   14000c737:	int3   
   14000c738:	int3   
   14000c739:	int3   
   14000c73a:	int3   
   14000c73b:	int3   
   14000c73c:	int3   
   14000c73d:	int3   
   14000c73e:	int3   
   14000c73f:	int3   
   14000c740:	mov    QWORD PTR [rsp+0x8],rbx
   14000c745:	push   rdi
   14000c746:	sub    rsp,0x20
   14000c74a:	lea    rax,[rip+0x3252f]        # 0x14003ec80
   14000c751:	mov    DWORD PTR [rcx+0x28],0xc0000001
   14000c758:	mov    QWORD PTR [rcx],rax
   14000c75b:	mov    ebx,edx
   14000c75d:	lea    rax,[rip+0x324ec]        # 0x14003ec50
   14000c764:	mov    rdi,rcx
   14000c767:	mov    QWORD PTR [rcx+0x8],rax
   14000c76b:	lea    rax,[rip+0x324ae]        # 0x14003ec20
   14000c772:	mov    QWORD PTR [rcx+0x10],rax
   14000c776:	lea    rax,[rip+0x32483]        # 0x14003ec00
   14000c77d:	mov    QWORD PTR [rcx+0x18],rax
   14000c781:	lea    rax,[rip+0x32458]        # 0x14003ebe0
   14000c788:	mov    QWORD PTR [rcx+0x20],rax
   14000c78c:	call   0x14000cbd4
   14000c791:	test   bl,0x1
   14000c794:	je     0x14000c79e
   14000c796:	mov    rcx,rdi
   14000c799:	call   0x140013de0
   14000c79e:	mov    rax,rdi
   14000c7a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7a6:	add    rsp,0x20
   14000c7aa:	pop    rdi
   14000c7ab:	ret    
   14000c7ac:	int3   
   14000c7ad:	int3   
   14000c7ae:	int3   
   14000c7af:	int3   
   14000c7b0:	int3   
   14000c7b1:	int3   
   14000c7b2:	int3   
   14000c7b3:	int3   
   14000c7b4:	int3   
   14000c7b5:	int3   
   14000c7b6:	int3   
   14000c7b7:	int3   
   14000c7b8:	int3   
   14000c7b9:	int3   
   14000c7ba:	int3   
   14000c7bb:	int3   
   14000c7bc:	int3   
   14000c7bd:	int3   
   14000c7be:	int3   
   14000c7bf:	int3   
   14000c7c0:	mov    r9,r8
   14000c7c3:	mov    r8,rdx
   14000c7c6:	lea    rdx,[rip+0x35e53]        # 0x140042620
   14000c7cd:	jmp    0x14000c260
   14000c7d2:	int3   
   14000c7d3:	int3   
   14000c7d4:	int3   
   14000c7d5:	int3   
   14000c7d6:	int3   
   14000c7d7:	int3   
   14000c7d8:	int3   
   14000c7d9:	int3   
   14000c7da:	int3   
   14000c7db:	int3   
   14000c7dc:	int3   
   14000c7dd:	int3   
   14000c7de:	int3   
   14000c7df:	int3   
   14000c7e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c7e5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c7ea:	push   rdi
   14000c7eb:	sub    rsp,0x20
   14000c7ef:	inc    DWORD PTR [rcx+0x28]
   14000c7f2:	mov    edi,DWORD PTR [rcx+0x28]
   14000c7f5:	cmp    edi,0x2
   14000c7f8:	je     0x14000c80c
   14000c7fa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c7ff:	mov    eax,edi
   14000c801:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c806:	add    rsp,0x20
   14000c80a:	pop    rdi
   14000c80b:	ret    
   14000c80c:	mov    rbx,QWORD PTR [rip+0x4234d]        # 0x14004eb60
   14000c813:	mov    rax,QWORD PTR [rbx]
   14000c816:	mov    rsi,QWORD PTR [rax+0x8]
   14000c81a:	lea    rax,[rip+0x1f]        # 0x14000c840
   14000c821:	cmp    rsi,rax
   14000c824:	jne    0x14002812c
   14000c82a:	mov    rcx,rbx
   14000c82d:	call   0x14000c840
   14000c832:	jmp    0x14000c7fa
   14000c834:	int3   
   14000c835:	int3   
   14000c836:	int3   
   14000c837:	int3   
   14000c838:	int3   
   14000c839:	int3   
   14000c83a:	int3   
   14000c83b:	int3   
   14000c83c:	int3   
   14000c83d:	int3   
   14000c83e:	int3   
   14000c83f:	int3   
   14000c840:	mov    eax,0x1
   14000c845:	lock xadd DWORD PTR [rcx+0xc],eax
   14000c84a:	inc    eax
   14000c84c:	ret    
   14000c84d:	int3   
   14000c84e:	int3   
   14000c84f:	int3   
   14000c850:	int3   
   14000c851:	int3   
   14000c852:	int3   
   14000c853:	int3   
   14000c854:	mov    QWORD PTR [rsp+0x8],rbx
   14000c859:	mov    QWORD PTR [rsp+0x10],rsi
   14000c85e:	mov    QWORD PTR [rsp+0x18],rdi
   14000c863:	push   r14
   14000c865:	sub    rsp,0x20
   14000c869:	lea    rsi,[rcx+0x8]
   14000c86d:	mov    rdi,rcx
   14000c870:	cmp    DWORD PTR [rsi],0x0
   14000c873:	je     0x14000c89a
   14000c875:	cmp    QWORD PTR [rcx+0x10],0x0
   14000c87a:	jne    0x140028140
   14000c880:	mov    r14,QWORD PTR [rdi+0x40]
   14000c884:	test   r14,r14
   14000c887:	jne    0x140028152
   14000c88d:	lea    rcx,[rdi+0x18]
   14000c891:	call   QWORD PTR [rip+0x30b21]        # 0x14003d3b8
   14000c897:	and    DWORD PTR [rsi],0x0
   14000c89a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c89f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c8a4:	mov    rdi,QWORD PTR [rsp+0x40]
   14000c8a9:	add    rsp,0x20
   14000c8ad:	pop    r14
   14000c8af:	ret    
   14000c8b0:	int3   
   14000c8b1:	int3   
   14000c8b2:	int3   
   14000c8b3:	int3   
   14000c8b4:	int3   
   14000c8b5:	int3   
   14000c8b6:	int3   
   14000c8b7:	int3   
   14000c8b8:	rex push rbx
   14000c8ba:	sub    rsp,0x40
   14000c8be:	lea    rax,[rsp+0x38]
   14000c8c3:	mov    r9d,0x1
   14000c8c9:	xor    r8d,r8d
   14000c8cc:	mov    QWORD PTR [rsp+0x20],rax
   14000c8d1:	lea    rdx,[rip+0x32288]        # 0x14003eb60
   14000c8d8:	mov    rcx,0xffffffff80000002
   14000c8df:	call   QWORD PTR [rip+0x30a5b]        # 0x14003d340
   14000c8e5:	mov    ebx,0x80070000
   14000c8ea:	test   eax,eax
   14000c8ec:	jg     0x14002816e
   14000c8f2:	js     0x14000c949
   14000c8f4:	mov    rcx,QWORD PTR [rsp+0x38]
   14000c8f9:	lea    rax,[rsp+0x34]
   14000c8fe:	and    DWORD PTR [rsp+0x30],0x0
   14000c903:	lea    rdx,[rip+0x32236]        # 0x14003eb40
   14000c90a:	mov    QWORD PTR [rsp+0x28],rax
   14000c90f:	xor    r9d,r9d
   14000c912:	lea    rax,[rsp+0x30]
   14000c917:	mov    DWORD PTR [rsp+0x34],0x4
   14000c91f:	xor    r8d,r8d
   14000c922:	mov    QWORD PTR [rsp+0x20],rax
   14000c927:	call   QWORD PTR [rip+0x30a1b]        # 0x14003d348
   14000c92d:	test   eax,eax
   14000c92f:	jle    0x14000c938
   14000c931:	movzx  eax,ax
   14000c934:	or     eax,ebx
   14000c936:	test   eax,eax
   14000c938:	jns    0x14002817a
   14000c93e:	mov    rcx,QWORD PTR [rsp+0x38]
   14000c943:	call   QWORD PTR [rip+0x30a0f]        # 0x14003d358
   14000c949:	call   0x14000c9d4
   14000c94e:	test   BYTE PTR [rip+0x4292b],0x1        # 0x14004f280
   14000c955:	jne    0x1400281a4
   14000c95b:	xor    r9d,r9d
   14000c95e:	xor    r8d,r8d
   14000c961:	xor    ecx,ecx
   14000c963:	lea    edx,[r9+0x1]
   14000c967:	call   QWORD PTR [rip+0x3085b]        # 0x14003d1c8
   14000c96d:	cmp    BYTE PTR [rip+0x421bc],0x0        # 0x14004eb30
   14000c974:	jne    0x14000c9c9
   14000c976:	and    DWORD PTR [rsp+0x30],0x0
   14000c97b:	call   QWORD PTR [rip+0x30907]        # 0x14003d288
   14000c981:	mov    rdx,rax
   14000c984:	lea    r8,[rsp+0x30]
   14000c989:	call   0x14000b800
   14000c98e:	cmp    al,0x1
   14000c990:	jne    0x14000c9c3
   14000c992:	call   0x1400080a0
   14000c997:	mov    ebx,eax
   14000c999:	mov    rcx,QWORD PTR [rip+0x421c8]        # 0x14004eb68
   14000c9a0:	test   rcx,rcx
   14000c9a3:	jne    0x1400281b6
   14000c9a9:	test   BYTE PTR [rip+0x428d0],0x1        # 0x14004f280
   14000c9b0:	jne    0x1400281c9
   14000c9b6:	call   0x14000de40
   14000c9bb:	mov    eax,ebx
   14000c9bd:	add    rsp,0x40
   14000c9c1:	pop    rbx
   14000c9c2:	ret    
   14000c9c3:	mov    ebx,DWORD PTR [rsp+0x30]
   14000c9c7:	jmp    0x14000c999
   14000c9c9:	or     ebx,0xffffffff
   14000c9cc:	jmp    0x14000c999
   14000c9ce:	int3   
   14000c9cf:	int3   
   14000c9d0:	int3   
   14000c9d1:	int3   
   14000c9d2:	int3   
   14000c9d3:	int3   
   14000c9d4:	cmp    QWORD PTR [rip+0x425e4],0x0        # 0x14004efc0
   14000c9dc:	jne    0x14000ca01
   14000c9de:	lea    r9,[rip+0x425db]        # 0x14004efc0
   14000c9e5:	lea    r8,[rip+0x418e4]        # 0x14004e2d0
   14000c9ec:	lea    rdx,[rip+0x214ad]        # 0x14002dea0
   14000c9f3:	lea    rcx,[rip+0x321d6]        # 0x14003ebd0
   14000c9fa:	rex.W jmp QWORD PTR [rip+0x30d07]        # 0x14003d708
   14000ca01:	xor    eax,eax
   14000ca03:	ret    
   14000ca04:	int3   
   14000ca05:	int3   
   14000ca06:	int3   
   14000ca07:	int3   
   14000ca08:	int3   
   14000ca09:	int3   
   14000ca0a:	int3   
   14000ca0b:	int3   
   14000ca0c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ca11:	push   rdi
   14000ca12:	sub    rsp,0x20
   14000ca16:	mov    rbx,QWORD PTR [rcx]
   14000ca19:	test   rbx,rbx
   14000ca1c:	je     0x14000ca39
   14000ca1e:	mov    rax,QWORD PTR [rbx]
   14000ca21:	mov    rdi,QWORD PTR [rax+0x10]
   14000ca25:	lea    rax,[rip+0xfffffffffffffab4]        # 0x14000c4e0
   14000ca2c:	cmp    rdi,rax
   14000ca2f:	jne    0x14000ca44
   14000ca31:	mov    rcx,rbx
   14000ca34:	call   0x14000c4e0
   14000ca39:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ca3e:	add    rsp,0x20
   14000ca42:	pop    rdi
   14000ca43:	ret    
   14000ca44:	lea    rax,[rip+0xfffffffffffffc65]        # 0x14000c6b0
   14000ca4b:	cmp    rdi,rax
   14000ca4e:	jne    0x14000ca5a
   14000ca50:	mov    rcx,rbx
   14000ca53:	call   0x14000c6b0
   14000ca58:	jmp    0x14000ca39
   14000ca5a:	mov    rcx,rdi
   14000ca5d:	call   QWORD PTR [rip+0x30cc5]        # 0x14003d728
   14000ca63:	mov    rcx,rbx
   14000ca66:	call   rdi
   14000ca68:	jmp    0x14000ca39
   14000ca6a:	int3   
   14000ca6b:	int3   
   14000ca6c:	int3   
   14000ca6d:	int3   
   14000ca6e:	int3   
   14000ca6f:	int3   
   14000ca70:	mov    QWORD PTR [rsp+0x8],rbx
   14000ca75:	push   rdi
   14000ca76:	sub    rsp,0x20
   14000ca7a:	mov    rbx,QWORD PTR [rcx]
   14000ca7d:	test   rbx,rbx
   14000ca80:	je     0x14000caa1
   14000ca82:	and    QWORD PTR [rcx],0x0
   14000ca86:	mov    rax,QWORD PTR [rbx]
   14000ca89:	mov    rdi,QWORD PTR [rax+0x10]
   14000ca8d:	lea    rax,[rip+0xfffffffffffff6ec]        # 0x14000c180
   14000ca94:	cmp    rdi,rax
   14000ca97:	jne    0x14000caac
   14000ca99:	mov    rcx,rbx
   14000ca9c:	call   0x14000c180
   14000caa1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000caa6:	add    rsp,0x20
   14000caaa:	pop    rdi
   14000caab:	ret    
   14000caac:	mov    rcx,rdi
   14000caaf:	call   QWORD PTR [rip+0x30c73]        # 0x14003d728
   14000cab5:	mov    rcx,rbx
   14000cab8:	call   rdi
   14000caba:	jmp    0x14000caa1
   14000cabc:	int3   
   14000cabd:	int3   
   14000cabe:	int3   
   14000cabf:	int3   
   14000cac0:	int3   
   14000cac1:	int3   
   14000cac2:	int3   
   14000cac3:	int3   
   14000cac4:	mov    QWORD PTR [rsp+0x8],rbx
   14000cac9:	push   rdi
   14000caca:	sub    rsp,0x20
   14000cace:	mov    rbx,QWORD PTR [rcx]
   14000cad1:	test   rbx,rbx
   14000cad4:	je     0x14000caf9
   14000cad6:	and    QWORD PTR [rcx],0x0
   14000cada:	mov    rax,QWORD PTR [rbx]
   14000cadd:	mov    rdi,QWORD PTR [rax+0x10]
   14000cae1:	lea    rax,[rip+0xfffffffffffff698]        # 0x14000c180
   14000cae8:	cmp    rdi,rax
   14000caeb:	jne    0x1400281dc
   14000caf1:	mov    rcx,rbx
   14000caf4:	call   0x14000c180
   14000caf9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cafe:	add    rsp,0x20
   14000cb02:	pop    rdi
   14000cb03:	ret    
   14000cb04:	int3   
   14000cb05:	int3   
   14000cb06:	int3   
   14000cb07:	int3   
   14000cb08:	int3   
   14000cb09:	int3   
   14000cb0a:	int3   
   14000cb0b:	int3   
   14000cb0c:	mov    QWORD PTR [rsp+0x8],rbx
   14000cb11:	push   rdi
   14000cb12:	sub    rsp,0x20
   14000cb16:	mov    rbx,QWORD PTR [rcx]
   14000cb19:	test   rbx,rbx
   14000cb1c:	je     0x14000cb3d
   14000cb1e:	mov    rax,QWORD PTR [rbx]
   14000cb21:	mov    rdi,QWORD PTR [rax+0x10]
   14000cb25:	lea    rax,[rip+0xfffffffffffff9b4]        # 0x14000c4e0
   14000cb2c:	cmp    rdi,rax
   14000cb2f:	jne    0x1400281f0
   14000cb35:	mov    rcx,rbx
   14000cb38:	call   0x14000c4e0
   14000cb3d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb42:	add    rsp,0x20
   14000cb46:	pop    rdi
   14000cb47:	ret    
   14000cb48:	int3   
   14000cb49:	int3   
   14000cb4a:	int3   
   14000cb4b:	int3   
   14000cb4c:	int3   
   14000cb4d:	int3   
   14000cb4e:	int3   
   14000cb4f:	int3   
   14000cb50:	mov    QWORD PTR [rsp+0x8],rbx
   14000cb55:	push   rdi
   14000cb56:	sub    rsp,0x30
   14000cb5a:	xor    eax,eax
   14000cb5c:	lea    rdi,[rcx+0x30]
   14000cb60:	cmp    QWORD PTR [rdi],rax
   14000cb63:	jne    0x14000cba2
   14000cb65:	lea    r9,[rip+0x3218c]        # 0x14003ecf8
   14000cb6c:	mov    QWORD PTR [rsp+0x20],rdi
   14000cb71:	xor    edx,edx
   14000cb73:	lea    r8d,[rax+0x7]
   14000cb77:	lea    rcx,[rip+0x3216a]        # 0x14003ece8
   14000cb7e:	call   QWORD PTR [rip+0x46574]        # 0x1400530f8
   14000cb84:	test   eax,eax
   14000cb86:	js     0x14000cba2
   14000cb88:	mov    rdi,QWORD PTR [rdi]
   14000cb8b:	mov    rax,QWORD PTR [rdi]
   14000cb8e:	mov    rbx,QWORD PTR [rax+0x38]
   14000cb92:	mov    rcx,rbx
   14000cb95:	call   QWORD PTR [rip+0x30b8d]        # 0x14003d728
   14000cb9b:	xor    edx,edx
   14000cb9d:	mov    rcx,rdi
   14000cba0:	call   rbx
   14000cba2:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cba7:	add    rsp,0x30
   14000cbab:	pop    rdi
   14000cbac:	ret    
   14000cbad:	int3   
   14000cbae:	int3   
   14000cbaf:	int3   
   14000cbb0:	int3   
   14000cbb1:	int3   
   14000cbb2:	int3   
   14000cbb3:	int3   
   14000cbb4:	sub    rsp,0x28
   14000cbb8:	cmp    QWORD PTR [rcx+0x30],0x0
   14000cbbd:	jne    0x14000cbc4
   14000cbbf:	call   0x14000cb50
   14000cbc4:	xor    eax,eax
   14000cbc6:	add    rsp,0x28
   14000cbca:	ret    
   14000cbcb:	int3   
   14000cbcc:	int3   
   14000cbcd:	int3   
   14000cbce:	int3   
   14000cbcf:	int3   
   14000cbd0:	int3   
   14000cbd1:	int3   
   14000cbd2:	int3   
   14000cbd3:	int3   
   14000cbd4:	mov    rax,rsp
   14000cbd7:	mov    QWORD PTR [rax+0x8],rcx
   14000cbdb:	push   rdi
   14000cbdc:	sub    rsp,0x30
   14000cbe0:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000cbe8:	mov    QWORD PTR [rax+0x10],rbx
   14000cbec:	mov    QWORD PTR [rax+0x18],rsi
   14000cbf0:	mov    rdi,rcx
   14000cbf3:	lea    rax,[rip+0x321ae]        # 0x14003eda8
   14000cbfa:	mov    QWORD PTR [rcx],rax
   14000cbfd:	lea    rax,[rip+0x32174]        # 0x14003ed78
   14000cc04:	mov    QWORD PTR [rcx+0x8],rax
   14000cc08:	add    rcx,0x10
   14000cc0c:	lea    rax,[rip+0x32135]        # 0x14003ed48
   14000cc13:	mov    QWORD PTR [rcx],rax
   14000cc16:	lea    rax,[rip+0x3210b]        # 0x14003ed28
   14000cc1d:	mov    QWORD PTR [rdi+0x18],rax
   14000cc21:	lea    rax,[rip+0x320e0]        # 0x14003ed08
   14000cc28:	mov    QWORD PTR [rdi+0x20],rax
   14000cc2c:	call   0x14000cc80
   14000cc31:	call   0x14000dffc
   14000cc36:	mov    rcx,QWORD PTR [rdi+0x40]
   14000cc3a:	test   rcx,rcx
   14000cc3d:	jne    0x14000cc69
   14000cc3f:	mov    rsi,QWORD PTR [rdi+0x38]
   14000cc43:	test   rsi,rsi
   14000cc46:	jne    0x140028204
   14000cc4c:	mov    rdi,QWORD PTR [rdi+0x30]
   14000cc50:	test   rdi,rdi
   14000cc53:	jne    0x14002821f
   14000cc59:	mov    rbx,QWORD PTR [rsp+0x48]
   14000cc5e:	mov    rsi,QWORD PTR [rsp+0x50]
   14000cc63:	add    rsp,0x30
   14000cc67:	pop    rdi
   14000cc68:	ret    
   14000cc69:	call   QWORD PTR [rip+0x305e9]        # 0x14003d258
   14000cc6f:	nop
   14000cc70:	jmp    0x14000cc3f
   14000cc72:	int3   
   14000cc73:	int3   
   14000cc74:	int3   
   14000cc75:	int3   
   14000cc76:	int3   
   14000cc77:	int3   
   14000cc78:	int3   
   14000cc79:	int3   
   14000cc7a:	int3   
   14000cc7b:	int3   
   14000cc7c:	int3   
   14000cc7d:	int3   
   14000cc7e:	int3   
   14000cc7f:	int3   
   14000cc80:	mov    rax,rsp
   14000cc83:	mov    QWORD PTR [rax+0x8],rbx
   14000cc87:	mov    QWORD PTR [rax+0x10],rbp
   14000cc8b:	mov    QWORD PTR [rax+0x18],rsi
   14000cc8f:	mov    QWORD PTR [rax+0x20],rdi
   14000cc93:	push   r14
   14000cc95:	sub    rsp,0x20
   14000cc99:	mov    rsi,rcx
   14000cc9c:	xor    ebp,ebp
   14000cc9e:	mov    rcx,QWORD PTR [rcx+0x40]
   14000cca2:	test   rcx,rcx
   14000cca5:	je     0x14000ccb1
   14000cca7:	call   QWORD PTR [rip+0x30563]        # 0x14003d210
   14000ccad:	mov    QWORD PTR [rsi+0x40],rbp
   14000ccb1:	mov    rcx,QWORD PTR [rsi+0x58]
   14000ccb5:	test   rcx,rcx
   14000ccb8:	jne    0x14002823a
   14000ccbe:	mov    rcx,QWORD PTR [rsi+0x50]
   14000ccc2:	test   rcx,rcx
   14000ccc5:	jne    0x14000cd4c
   14000cccb:	lea    r14,[rsi+0x20]
   14000cccf:	cmp    QWORD PTR [r14],rbp
   14000ccd2:	je     0x14000cd19
   14000ccd4:	mov    rcx,QWORD PTR [rsi+0x38]
   14000ccd8:	test   rcx,rcx
   14000ccdb:	je     0x14000cce7
   14000ccdd:	call   QWORD PTR [rip+0x304c5]        # 0x14003d1a8
   14000cce3:	mov    QWORD PTR [rsi+0x38],rbp
   14000cce7:	mov    rdi,QWORD PTR [r14]
   14000ccea:	mov    rax,QWORD PTR [rdi]
   14000cced:	mov    rbx,QWORD PTR [rax+0x40]
   14000ccf1:	mov    rcx,rbx
   14000ccf4:	call   QWORD PTR [rip+0x30a2e]        # 0x14003d728
   14000ccfa:	mov    rcx,rdi
   14000ccfd:	call   rbx
   14000ccff:	mov    rcx,QWORD PTR [r14]
   14000cd02:	xor    edx,edx
   14000cd04:	call   QWORD PTR [rip+0x463d6]        # 0x1400530e0
   14000cd0a:	cmp    QWORD PTR [r14],rbp
   14000cd0d:	je     0x14000cd19
   14000cd0f:	xor    edx,edx
   14000cd11:	mov    rcx,r14
   14000cd14:	call   0x14000dcd0
   14000cd19:	cmp    BYTE PTR [rip+0x41e58],bpl        # 0x14004eb78
   14000cd20:	je     0x140028249
   14000cd26:	mov    rcx,QWORD PTR [rsi+0x48]
   14000cd2a:	test   rcx,rcx
   14000cd2d:	jne    0x14000cd5b
   14000cd2f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cd34:	xor    eax,eax
   14000cd36:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cd3b:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cd40:	mov    rdi,QWORD PTR [rsp+0x48]
   14000cd45:	add    rsp,0x20
   14000cd49:	pop    r14
   14000cd4b:	ret    
   14000cd4c:	call   QWORD PTR [rip+0x304be]        # 0x14003d210
   14000cd52:	mov    QWORD PTR [rsi+0x50],rbp
   14000cd56:	jmp    0x14000cccb
   14000cd5b:	call   QWORD PTR [rip+0x30447]        # 0x14003d1a8
   14000cd61:	mov    QWORD PTR [rsi+0x48],rbp
   14000cd65:	jmp    0x14000cd2f
   14000cd67:	int3   
   14000cd68:	int3   
   14000cd69:	int3   
   14000cd6a:	int3   
   14000cd6b:	int3   
   14000cd6c:	int3   
   14000cd6d:	int3   
   14000cd6e:	int3   
   14000cd6f:	int3   
   14000cd70:	xor    edx,edx
   14000cd72:	lea    rax,[rip+0x3202f]        # 0x14003eda8
   14000cd79:	mov    DWORD PTR [rcx+0x28],edx
   14000cd7c:	mov    QWORD PTR [rcx],rax
   14000cd7f:	lea    rax,[rip+0x31ff2]        # 0x14003ed78
   14000cd86:	mov    QWORD PTR [rcx+0x8],rax
   14000cd8a:	lea    rax,[rip+0x31fb7]        # 0x14003ed48
   14000cd91:	mov    QWORD PTR [rcx+0x10],rax
   14000cd95:	lea    rax,[rip+0x31f8c]        # 0x14003ed28
   14000cd9c:	mov    QWORD PTR [rcx+0x18],rax
   14000cda0:	lea    rax,[rip+0x31f61]        # 0x14003ed08
   14000cda7:	mov    QWORD PTR [rcx+0x20],rax
   14000cdab:	mov    rax,rcx
   14000cdae:	mov    QWORD PTR [rcx+0x30],rdx
   14000cdb2:	mov    QWORD PTR [rcx+0x38],rdx
   14000cdb6:	mov    QWORD PTR [rcx+0x40],rdx
   14000cdba:	mov    QWORD PTR [rcx+0x48],rdx
   14000cdbe:	mov    QWORD PTR [rcx+0x50],rdx
   14000cdc2:	mov    QWORD PTR [rcx+0x58],rdx
   14000cdc6:	mov    QWORD PTR [rcx+0x60],rdx
   14000cdca:	mov    QWORD PTR [rcx+0x68],rdx
   14000cdce:	mov    DWORD PTR [rcx+0x70],edx
   14000cdd1:	mov    QWORD PTR [rcx+0x78],rdx
   14000cdd5:	mov    QWORD PTR [rcx+0x80],rdx
   14000cddc:	mov    BYTE PTR [rcx+0x88],dl
   14000cde2:	ret    
   14000cde3:	int3   
   14000cde4:	int3   
   14000cde5:	int3   
   14000cde6:	int3   
   14000cde7:	int3   
   14000cde8:	int3   
   14000cde9:	int3   
   14000cdea:	int3   
   14000cdeb:	int3   
   14000cdec:	int3   
   14000cded:	int3   
   14000cdee:	int3   
   14000cdef:	int3   
   14000cdf0:	mov    QWORD PTR [rsp+0x8],rbx
   14000cdf5:	push   rdi
   14000cdf6:	sub    rsp,0x30
   14000cdfa:	cmp    QWORD PTR [rcx+0x38],0x0
   14000cdff:	mov    rdi,rcx
   14000ce02:	jne    0x14000ce3f
   14000ce04:	call   0x140004aac
   14000ce09:	mov    QWORD PTR [rdi+0x38],rax
   14000ce0d:	cmp    BYTE PTR [rip+0x41d67],0x0        # 0x14004eb7b
   14000ce14:	je     0x14000cea1
   14000ce1a:	mov    rdx,QWORD PTR [rdi+0x38]
   14000ce1e:	lea    rcx,[rdi+0x40]
   14000ce22:	mov    DWORD PTR [rsp+0x28],0x8
   14000ce2a:	lea    r8,[rip+0x28caf]        # 0x140035ae0
   14000ce31:	or     DWORD PTR [rsp+0x20],0xffffffff
   14000ce36:	xor    r9d,r9d
   14000ce39:	call   QWORD PTR [rip+0x303d9]        # 0x14003d218
   14000ce3f:	lea    rcx,[rdi-0x10]
   14000ce43:	call   0x14000cbb4
   14000ce48:	lea    r8,[rip+0x32061]        # 0x14003eeb0
   14000ce4f:	mov    BYTE PTR [rdi+0x78],0x1
   14000ce53:	xor    edx,edx
   14000ce55:	mov    ecx,0x100000
   14000ce5a:	call   QWORD PTR [rip+0x30540]        # 0x14003d3a0
   14000ce60:	mov    QWORD PTR [rdi+0x48],rax
   14000ce64:	cmp    BYTE PTR [rip+0x41d10],0x0        # 0x14004eb7b
   14000ce6b:	jne    0x14000ce94
   14000ce6d:	test   rax,rax
   14000ce70:	je     0x14000ce94
   14000ce72:	and    DWORD PTR [rsp+0x28],0x0
   14000ce77:	lea    rcx,[rdi+0x50]
   14000ce7b:	or     DWORD PTR [rsp+0x20],0xffffffff
   14000ce80:	lea    r9,[rdi-0x10]
   14000ce84:	lea    r8,[rip+0x4e85]        # 0x140011d10
   14000ce8b:	mov    rdx,rax
   14000ce8e:	call   QWORD PTR [rip+0x30384]        # 0x14003d218
   14000ce94:	xor    eax,eax
   14000ce96:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ce9b:	add    rsp,0x30
   14000ce9f:	pop    rdi
   14000cea0:	ret    
   14000cea1:	cmp    BYTE PTR [rip+0x41cd0],0x0        # 0x14004eb78
   14000cea8:	jne    0x14000ce1a
   14000ceae:	lea    rdx,[rdi+0x60]
   14000ceb2:	lea    rcx,[rdi+0x68]
   14000ceb6:	call   0x140013914
   14000cebb:	mov    rdx,QWORD PTR [rdi+0x68]
   14000cebf:	test   rdx,rdx
   14000cec2:	je     0x14000ce1a
   14000cec8:	mov    DWORD PTR [rsp+0x28],0x8
   14000ced0:	lea    r9,[rdi-0x10]
   14000ced4:	or     DWORD PTR [rsp+0x20],0xffffffff
   14000ced9:	lea    rcx,[rdi+0x58]
   14000cedd:	lea    r8,[rip+0x50dc]        # 0x140011fc0
   14000cee4:	call   QWORD PTR [rip+0x3032e]        # 0x14003d218
   14000ceea:	jmp    0x14000ce1a
   14000ceef:	int3   
   14000cef0:	int3   
   14000cef1:	int3   
   14000cef2:	int3   
   14000cef3:	int3   
   14000cef4:	int3   
   14000cef5:	int3   
   14000cef6:	int3   
   14000cef7:	int3   
   14000cef8:	mov    QWORD PTR [rsp+0x8],rcx
   14000cefd:	push   rdi
   14000cefe:	sub    rsp,0x30
   14000cf02:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cf0b:	mov    QWORD PTR [rsp+0x58],rbx
   14000cf10:	mov    rbx,rcx
   14000cf13:	test   rcx,rcx
   14000cf16:	je     0x14002828e
   14000cf1c:	and    QWORD PTR [rcx],0x0
   14000cf20:	mov    edi,0x8007000e
   14000cf25:	mov    DWORD PTR [rsp+0x48],edi
   14000cf29:	and    QWORD PTR [rsp+0x50],0x0
   14000cf2f:	mov    ecx,0x90
   14000cf34:	call   0x140013d94
   14000cf39:	mov    rcx,rax
   14000cf3c:	test   rax,rax
   14000cf3f:	je     0x14000cf9e
   14000cf41:	call   0x14000cd70
   14000cf46:	lea    r8,[rip+0x31d33]        # 0x14003ec80
   14000cf4d:	mov    QWORD PTR [rcx],r8
   14000cf50:	lea    rax,[rip+0x31cf9]        # 0x14003ec50
   14000cf57:	mov    QWORD PTR [rcx+0x8],rax
   14000cf5b:	lea    rax,[rip+0x31cbe]        # 0x14003ec20
   14000cf62:	mov    QWORD PTR [rcx+0x10],rax
   14000cf66:	lea    rax,[rip+0x31c93]        # 0x14003ec00
   14000cf6d:	mov    QWORD PTR [rcx+0x18],rax
   14000cf71:	lea    rax,[rip+0x31c68]        # 0x14003ebe0
   14000cf78:	mov    QWORD PTR [rcx+0x20],rax
   14000cf7c:	mov    QWORD PTR [rsp+0x50],rcx
   14000cf81:	test   rcx,rcx
   14000cf84:	je     0x14000cf8e
   14000cf86:	inc    DWORD PTR [rcx+0x28]
   14000cf89:	xor    edi,edi
   14000cf8b:	dec    DWORD PTR [rcx+0x28]
   14000cf8e:	mov    QWORD PTR [rbx],rcx
   14000cf91:	mov    eax,edi
   14000cf93:	mov    rbx,QWORD PTR [rsp+0x58]
   14000cf98:	add    rsp,0x30
   14000cf9c:	pop    rdi
   14000cf9d:	ret    
   14000cf9e:	xor    ecx,ecx
   14000cfa0:	jmp    0x14000cf7c
   14000cfa2:	int3   
   14000cfa3:	int3   
   14000cfa4:	int3   
   14000cfa5:	int3   
   14000cfa6:	int3   
   14000cfa7:	int3   
   14000cfa8:	int3   
   14000cfa9:	int3   
   14000cfaa:	int3   
   14000cfab:	int3   
   14000cfac:	int3   
   14000cfad:	int3   
   14000cfae:	int3   
   14000cfaf:	int3   
   14000cfb0:	mov    QWORD PTR [rsp+0x8],rbx
   14000cfb5:	mov    QWORD PTR [rsp+0x10],rbp
   14000cfba:	mov    QWORD PTR [rsp+0x18],rsi
   14000cfbf:	push   rdi
   14000cfc0:	sub    rsp,0x20
   14000cfc4:	mov    rdi,r9
   14000cfc7:	mov    rbp,r8
   14000cfca:	mov    rsi,rdx
   14000cfcd:	mov    rbx,rcx
   14000cfd0:	mov    eax,0x80004003
   14000cfd5:	test   r9,r9
   14000cfd8:	je     0x14000d02d
   14000cfda:	and    QWORD PTR [r9],0x0
   14000cfde:	test   rdx,rdx
   14000cfe1:	jne    0x1400282ac
   14000cfe7:	mov    rbx,QWORD PTR [rbx+0x40]
   14000cfeb:	lea    rax,[rip+0xe7e]        # 0x14000de70
   14000cff2:	cmp    rbx,rax
   14000cff5:	je     0x14000d01f
   14000cff7:	lea    rax,[rip+0x5072]        # 0x140012070
   14000cffe:	cmp    rbx,rax
   14000d001:	je     0x14000d042
   14000d003:	lea    rax,[rip+0x25b6]        # 0x14000f5c0
   14000d00a:	cmp    rbx,rax
   14000d00d:	jne    0x14000d052
   14000d00f:	mov    r8,r9
   14000d012:	mov    rdx,rbp
   14000d015:	mov    rcx,rsi
   14000d018:	call   0x14000f5c0
   14000d01d:	jmp    0x14000d02d
   14000d01f:	mov    r8,r9
   14000d022:	mov    rdx,rbp
   14000d025:	mov    rcx,rsi
   14000d028:	call   0x14000de70
   14000d02d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d032:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d037:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d03c:	add    rsp,0x20
   14000d040:	pop    rdi
   14000d041:	ret    
   14000d042:	mov    r8,r9
   14000d045:	mov    rdx,rbp
   14000d048:	mov    rcx,rsi
   14000d04b:	call   0x140012070
   14000d050:	jmp    0x14000d02d
   14000d052:	lea    rax,[rip+0x4797]        # 0x1400117f0
   14000d059:	cmp    rbx,rax
   14000d05c:	jne    0x1400282c6
   14000d062:	mov    r8,r9
   14000d065:	mov    rdx,rbp
   14000d068:	mov    rcx,rsi
   14000d06b:	call   0x1400117f0
   14000d070:	jmp    0x14000d02d
   14000d072:	int3   
   14000d073:	int3   
   14000d074:	int3   
   14000d075:	int3   
   14000d076:	int3   
   14000d077:	int3   
   14000d078:	sub    rsp,0x28
   14000d07c:	lea    rax,[rip+0x31dc5]        # 0x14003ee48
   14000d083:	mov    QWORD PTR [rcx],rax
   14000d086:	add    rcx,0x10
   14000d08a:	cmp    BYTE PTR [rcx+0x28],0x0
   14000d08e:	je     0x14000d09a
   14000d090:	mov    BYTE PTR [rcx+0x28],0x0
   14000d094:	call   QWORD PTR [rip+0x3031e]        # 0x14003d3b8
   14000d09a:	add    rsp,0x28
   14000d09e:	ret    
   14000d09f:	int3   
   14000d0a0:	int3   
   14000d0a1:	int3   
   14000d0a2:	int3   
   14000d0a3:	int3   
   14000d0a4:	int3   
   14000d0a5:	int3   
   14000d0a6:	int3   
   14000d0a7:	int3   
   14000d0a8:	mov    rax,rsp
   14000d0ab:	mov    QWORD PTR [rax+0x18],r8
   14000d0af:	mov    QWORD PTR [rax+0x10],rdx
   14000d0b3:	mov    QWORD PTR [rax+0x8],rcx
   14000d0b7:	push   rbx
   14000d0b8:	push   rsi
   14000d0b9:	push   rdi
   14000d0ba:	push   r14
   14000d0bc:	push   r15
   14000d0be:	sub    rsp,0x30
   14000d0c2:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000d0ca:	mov    r15,r8
   14000d0cd:	xor    edi,edi
   14000d0cf:	test   r8,r8
   14000d0d2:	je     0x1400282e0
   14000d0d8:	mov    QWORD PTR [r8],rdi
   14000d0db:	mov    r14d,0x8007000e
   14000d0e1:	mov    DWORD PTR [rsp+0x68],r14d
   14000d0e6:	mov    QWORD PTR [rsp+0x60],rdi
   14000d0eb:	lea    ecx,[rdi+0x58]
   14000d0ee:	call   0x140013d94
   14000d0f3:	mov    rsi,rax
   14000d0f6:	test   rax,rax
   14000d0f9:	je     0x1400282ea
   14000d0ff:	mov    DWORD PTR [rax+0x8],edi
   14000d102:	xor    edx,edx
   14000d104:	lea    r8d,[rdi+0x28]
   14000d108:	lea    rcx,[rax+0x10]
   14000d10c:	call   0x140014694
   14000d111:	mov    BYTE PTR [rsi+0x38],dil
   14000d115:	mov    DWORD PTR [rsi+0x48],edi
   14000d118:	mov    QWORD PTR [rsi+0x50],rdi
   14000d11c:	lea    rax,[rip+0x31d5d]        # 0x14003ee80
   14000d123:	mov    QWORD PTR [rsi],rax
   14000d126:	mov    QWORD PTR [rsp+0x60],rsi
   14000d12b:	test   rsi,rsi
   14000d12e:	je     0x14000d187
   14000d130:	lea    rax,[rip+0x1e0b9]        # 0x14002b1f0
   14000d137:	mov    QWORD PTR [rsi+0x40],rax
   14000d13b:	lea    rcx,[rsi+0x10]
   14000d13f:	call   0x14000c130
   14000d144:	mov    r14d,eax
   14000d147:	test   eax,eax
   14000d149:	js     0x14000d14f
   14000d14b:	mov    BYTE PTR [rsi+0x38],0x1
   14000d14f:	cmovns r14d,edi
   14000d153:	test   r14d,r14d
   14000d156:	jne    0x14000d196
   14000d158:	mov    rax,QWORD PTR [rsi]
   14000d15b:	mov    rbx,QWORD PTR [rax]
   14000d15e:	lea    rax,[rip+0xffffffffffffeffb]        # 0x14000c160
   14000d165:	cmp    rbx,rax
   14000d168:	jne    0x140028308
   14000d16e:	mov    r8,r15
   14000d171:	lea    rdx,[rip+0x31cf8]        # 0x14003ee70
   14000d178:	mov    rcx,rsi
   14000d17b:	call   0x14000c160
   14000d180:	mov    r14d,eax
   14000d183:	test   eax,eax
   14000d185:	jne    0x14000d196
   14000d187:	mov    eax,r14d
   14000d18a:	add    rsp,0x30
   14000d18e:	pop    r15
   14000d190:	pop    r14
   14000d192:	pop    rdi
   14000d193:	pop    rsi
   14000d194:	pop    rbx
   14000d195:	ret    
   14000d196:	mov    rcx,rsi
   14000d199:	call   0x14000c1c4
   14000d19e:	jmp    0x14000d187
   14000d1a0:	int3   
   14000d1a1:	int3   
   14000d1a2:	int3   
   14000d1a3:	int3   
   14000d1a4:	int3   
   14000d1a5:	int3   
   14000d1a6:	int3   
   14000d1a7:	int3   
   14000d1a8:	int3   
   14000d1a9:	int3   
   14000d1aa:	int3   
   14000d1ab:	int3   
   14000d1ac:	int3   
   14000d1ad:	int3   
   14000d1ae:	int3   
   14000d1af:	int3   
   14000d1b0:	mov    rax,rsp
   14000d1b3:	push   rdi
   14000d1b4:	sub    rsp,0x30
   14000d1b8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000d1c0:	mov    QWORD PTR [rax+0x8],rbx
   14000d1c4:	mov    QWORD PTR [rax+0x10],rbp
   14000d1c8:	mov    QWORD PTR [rax+0x18],rsi
   14000d1cc:	mov    rbx,rcx
   14000d1cf:	or     edi,0xffffffff
   14000d1d2:	lock xadd DWORD PTR [rcx+0x20],edi
   14000d1d7:	sub    edi,0x1
   14000d1da:	je     0x14000d1f3
   14000d1dc:	mov    eax,edi
   14000d1de:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d1e3:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d1e8:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d1ed:	add    rsp,0x30
   14000d1f1:	pop    rdi
   14000d1f2:	ret    
   14000d1f3:	mov    rsi,QWORD PTR [rip+0x41966]        # 0x14004eb60
   14000d1fa:	mov    rax,QWORD PTR [rsi]
   14000d1fd:	mov    rbp,QWORD PTR [rax+0x8]
   14000d201:	lea    rax,[rip+0xfffffffffffff638]        # 0x14000c840
   14000d208:	cmp    rbp,rax
   14000d20b:	jne    0x140028326
   14000d211:	mov    rcx,rsi
   14000d214:	call   0x14000c840
   14000d219:	nop
   14000d21a:	test   rbx,rbx
   14000d21d:	je     0x14000d244
   14000d21f:	mov    rax,QWORD PTR [rbx]
   14000d222:	mov    rsi,QWORD PTR [rax+0x28]
   14000d226:	lea    rax,[rip+0x53]        # 0x14000d280
   14000d22d:	cmp    rsi,rax
   14000d230:	jne    0x14002833a
   14000d236:	mov    edx,0x1
   14000d23b:	mov    rcx,rbx
   14000d23e:	call   0x14000d280
   14000d243:	nop
   14000d244:	mov    rbx,QWORD PTR [rip+0x41915]        # 0x14004eb60
   14000d24b:	mov    rax,QWORD PTR [rbx]
   14000d24e:	mov    rsi,QWORD PTR [rax+0x10]
   14000d252:	lea    rax,[rip+0xffffffffffffadc7]        # 0x140008020
   14000d259:	cmp    rsi,rax
   14000d25c:	jne    0x140028353
   14000d262:	mov    rcx,rbx
   14000d265:	call   0x140008020
   14000d26a:	jmp    0x14000d1dc
   14000d26f:	int3   
   14000d270:	int3   
   14000d271:	int3   
   14000d272:	int3   
   14000d273:	int3   
   14000d274:	int3   
   14000d275:	int3   
   14000d276:	int3   
   14000d277:	int3   
   14000d278:	int3   
   14000d279:	int3   
   14000d27a:	int3   
   14000d27b:	int3   
   14000d27c:	int3   
   14000d27d:	int3   
   14000d27e:	int3   
   14000d27f:	int3   
   14000d280:	mov    QWORD PTR [rsp+0x8],rbx
   14000d285:	push   rdi
   14000d286:	sub    rsp,0x20
   14000d28a:	mov    ebx,edx
   14000d28c:	mov    rdi,rcx
   14000d28f:	call   0x14000d2f4
   14000d294:	test   bl,0x1
   14000d297:	je     0x14000d2a1
   14000d299:	mov    rcx,rdi
   14000d29c:	call   0x140013de0
   14000d2a1:	mov    rax,rdi
   14000d2a4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d2a9:	add    rsp,0x20
   14000d2ad:	pop    rdi
   14000d2ae:	ret    
   14000d2af:	int3   
   14000d2b0:	int3   
   14000d2b1:	int3   
   14000d2b2:	int3   
   14000d2b3:	int3   
   14000d2b4:	int3   
   14000d2b5:	int3   
   14000d2b6:	int3   
   14000d2b7:	int3   
   14000d2b8:	int3   
   14000d2b9:	int3   
   14000d2ba:	int3   
   14000d2bb:	int3   
   14000d2bc:	int3   
   14000d2bd:	int3   
   14000d2be:	int3   
   14000d2bf:	int3   
   14000d2c0:	mov    r9,r8
   14000d2c3:	mov    r8,rdx
   14000d2c6:	lea    rdx,[rip+0x35403]        # 0x1400426d0
   14000d2cd:	jmp    0x14000c260
   14000d2d2:	int3   
   14000d2d3:	int3   
   14000d2d4:	int3   
   14000d2d5:	int3   
   14000d2d6:	int3   
   14000d2d7:	int3   
   14000d2d8:	int3   
   14000d2d9:	int3   
   14000d2da:	int3   
   14000d2db:	int3   
   14000d2dc:	int3   
   14000d2dd:	int3   
   14000d2de:	int3   
   14000d2df:	int3   
   14000d2e0:	mov    eax,0x1
   14000d2e5:	lock xadd DWORD PTR [rcx+0x20],eax
   14000d2ea:	inc    eax
   14000d2ec:	ret    
   14000d2ed:	int3   
   14000d2ee:	int3   
   14000d2ef:	int3   
   14000d2f0:	int3   
   14000d2f1:	int3   
   14000d2f2:	int3   
   14000d2f3:	int3   
   14000d2f4:	mov    rax,rsp
   14000d2f7:	mov    QWORD PTR [rax+0x8],rcx
   14000d2fb:	push   rdi
   14000d2fc:	sub    rsp,0x30
   14000d300:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000d308:	mov    QWORD PTR [rax+0x10],rbx
   14000d30c:	mov    QWORD PTR [rax+0x18],rsi
   14000d310:	mov    rbx,rcx
   14000d313:	lea    rax,[rip+0x31e2e]        # 0x14003f148
   14000d31a:	mov    QWORD PTR [rcx],rax
   14000d31d:	lea    rax,[rip+0x31df4]        # 0x14003f118
   14000d324:	mov    QWORD PTR [rcx+0x8],rax
   14000d328:	lea    rax,[rip+0x31dc9]        # 0x14003f0f8
   14000d32f:	mov    QWORD PTR [rcx+0x10],rax
   14000d333:	lea    rax,[rip+0x31d86]        # 0x14003f0c0
   14000d33a:	mov    QWORD PTR [rcx+0x18],rax
   14000d33e:	mov    DWORD PTR [rcx+0x20],0xc0000001
   14000d345:	call   0x14000d6a4
   14000d34a:	mov    rdi,QWORD PTR [rip+0x4180f]        # 0x14004eb60
   14000d351:	mov    rax,QWORD PTR [rdi]
   14000d354:	mov    rsi,QWORD PTR [rax+0x10]
   14000d358:	lea    rax,[rip+0xffffffffffffacc1]        # 0x140008020
   14000d35f:	cmp    rsi,rax
   14000d362:	jne    0x140028368
   14000d368:	mov    rcx,rdi
   14000d36b:	call   0x140008020
   14000d370:	nop
   14000d371:	mov    rcx,rbx
   14000d374:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d379:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d37e:	add    rsp,0x30
   14000d382:	pop    rdi
   14000d383:	jmp    0x14000d7ac
   14000d388:	int3   
   14000d389:	int3   
   14000d38a:	int3   
   14000d38b:	int3   
   14000d38c:	int3   
   14000d38d:	int3   
   14000d38e:	int3   
   14000d38f:	int3   
   14000d390:	mov    rax,rsp
   14000d393:	mov    QWORD PTR [rax+0x8],rcx
   14000d397:	push   rdi
   14000d398:	sub    rsp,0x30
   14000d39c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000d3a4:	mov    QWORD PTR [rax+0x10],rbx
   14000d3a8:	mov    QWORD PTR [rax+0x18],rsi
   14000d3ac:	mov    rbx,rcx
   14000d3af:	call   0x14000d5e8
   14000d3b4:	nop
   14000d3b5:	lea    rax,[rip+0x31d8c]        # 0x14003f148
   14000d3bc:	mov    QWORD PTR [rbx],rax
   14000d3bf:	lea    rax,[rip+0x31d52]        # 0x14003f118
   14000d3c6:	mov    QWORD PTR [rbx+0x8],rax
   14000d3ca:	lea    rax,[rip+0x31d27]        # 0x14003f0f8
   14000d3d1:	mov    QWORD PTR [rbx+0x10],rax
   14000d3d5:	lea    rax,[rip+0x31ce4]        # 0x14003f0c0
   14000d3dc:	mov    QWORD PTR [rbx+0x18],rax
   14000d3e0:	mov    rdi,QWORD PTR [rip+0x41779]        # 0x14004eb60
   14000d3e7:	mov    rax,QWORD PTR [rdi]
   14000d3ea:	mov    rsi,QWORD PTR [rax+0x8]
   14000d3ee:	lea    rax,[rip+0xfffffffffffff44b]        # 0x14000c840
   14000d3f5:	cmp    rsi,rax
   14000d3f8:	jne    0x14002837e
   14000d3fe:	mov    rcx,rdi
   14000d401:	call   0x14000c840
   14000d406:	nop
   14000d407:	mov    rax,rbx
   14000d40a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d40f:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d414:	add    rsp,0x30
   14000d418:	pop    rdi
   14000d419:	ret    
   14000d41a:	int3   
   14000d41b:	int3   
   14000d41c:	int3   
   14000d41d:	int3   
   14000d41e:	int3   
   14000d41f:	int3   
   14000d420:	mov    QWORD PTR [rsp+0x8],rbx
   14000d425:	mov    QWORD PTR [rsp+0x10],rsi
   14000d42a:	push   rdi
   14000d42b:	sub    rsp,0x20
   14000d42f:	lea    rbx,[rcx+0x58]
   14000d433:	mov    rdi,rcx
   14000d436:	cmp    QWORD PTR [rbx],0x0
   14000d43a:	jne    0x14000d485
   14000d43c:	cmp    QWORD PTR [rbx],rdx
   14000d43f:	je     0x14000d449
   14000d441:	mov    rcx,rbx
   14000d444:	call   0x14000dcd0
   14000d449:	mov    rsi,QWORD PTR [rbx]
   14000d44c:	test   rsi,rsi
   14000d44f:	je     0x14000d473
   14000d451:	mov    rax,QWORD PTR [rsi]
   14000d454:	lea    rbx,[rdi+0x60]
   14000d458:	mov    rdi,QWORD PTR [rax]
   14000d45b:	mov    rcx,rdi
   14000d45e:	call   QWORD PTR [rip+0x302c4]        # 0x14003d728
   14000d464:	mov    r8,rbx
   14000d467:	lea    rdx,[rip+0x31d0a]        # 0x14003f178
   14000d46e:	mov    rcx,rsi
   14000d471:	call   rdi
   14000d473:	xor    eax,eax
   14000d475:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d47a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d47f:	add    rsp,0x20
   14000d483:	pop    rdi
   14000d484:	ret    
   14000d485:	mov    eax,0x80070005
   14000d48a:	jmp    0x14000d475
   14000d48c:	int3   
   14000d48d:	int3   
   14000d48e:	int3   
   14000d48f:	int3   
   14000d490:	int3   
   14000d491:	int3   
   14000d492:	int3   
   14000d493:	int3   
   14000d494:	mov    r11,rsp
   14000d497:	mov    QWORD PTR [r11+0x10],rbx
   14000d49b:	mov    QWORD PTR [r11+0x18],rbp
   14000d49f:	push   rsi
   14000d4a0:	push   rdi
   14000d4a1:	push   r14
   14000d4a3:	sub    rsp,0x40
   14000d4a7:	mov    rax,QWORD PTR [rcx+0xb8]
   14000d4ae:	mov    rdi,rcx
   14000d4b1:	mov    QWORD PTR [r11-0x28],rax
   14000d4b5:	xor    ebp,ebp
   14000d4b7:	mov    rax,QWORD PTR [rcx+0xc0]
   14000d4be:	mov    QWORD PTR [r11-0x20],rax
   14000d4c2:	xor    r8d,r8d
   14000d4c5:	mov    DWORD PTR [rsp+0x20],ebp
   14000d4c9:	or     r9d,0xffffffff
   14000d4cd:	lea    rdx,[rsp+0x30]
   14000d4d2:	lea    ecx,[r8+0x2]
   14000d4d6:	call   QWORD PTR [rip+0x2fef4]        # 0x14003d3d0
   14000d4dc:	cmp    eax,0x1
   14000d4df:	je     0x140028394
   14000d4e5:	mov    rbx,QWORD PTR [rsp+0x68]
   14000d4ea:	xor    eax,eax
   14000d4ec:	mov    rbp,QWORD PTR [rsp+0x70]
   14000d4f1:	add    rsp,0x40
   14000d4f5:	pop    r14
   14000d4f7:	pop    rdi
   14000d4f8:	pop    rsi
   14000d4f9:	ret    
   14000d4fa:	int3   
   14000d4fb:	int3   
   14000d4fc:	int3   
   14000d4fd:	int3   
   14000d4fe:	int3   
   14000d4ff:	int3   
   14000d500:	rex push rbx
   14000d502:	sub    rsp,0x20
   14000d506:	mov    rbx,rcx
   14000d509:	mov    rcx,QWORD PTR [rcx+0xb8]
   14000d510:	call   QWORD PTR [rip+0x2fed2]        # 0x14003d3e8
   14000d516:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000d51d:	mov    edx,0x3e8
   14000d522:	call   QWORD PTR [rip+0x2fed0]        # 0x14003d3f8
   14000d528:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000d52f:	call   QWORD PTR [rip+0x2fc73]        # 0x14003d1a8
   14000d535:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000d53c:	and    QWORD PTR [rbx+0xb0],0x0
   14000d544:	call   QWORD PTR [rip+0x2fc5e]        # 0x14003d1a8
   14000d54a:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000d551:	and    QWORD PTR [rbx+0xb8],0x0
   14000d559:	call   QWORD PTR [rip+0x2fc49]        # 0x14003d1a8
   14000d55f:	and    QWORD PTR [rbx+0xc0],0x0
   14000d567:	add    rsp,0x20
   14000d56b:	pop    rbx
   14000d56c:	ret    
   14000d56d:	int3   
   14000d56e:	int3   
   14000d56f:	int3   
   14000d570:	int3   
   14000d571:	int3   
   14000d572:	int3   
   14000d573:	int3   
   14000d574:	rex push rbx
   14000d576:	sub    rsp,0x30
   14000d57a:	xor    r9d,r9d
   14000d57d:	mov    rbx,rcx
   14000d580:	xor    r8d,r8d
   14000d583:	xor    ecx,ecx
   14000d585:	lea    edx,[r9+0x1]
   14000d589:	call   QWORD PTR [rip+0x2fe51]        # 0x14003d3e0
   14000d58f:	xor    r9d,r9d
   14000d592:	xor    r8d,r8d
   14000d595:	xor    edx,edx
   14000d597:	mov    QWORD PTR [rbx+0xb8],rax
   14000d59e:	xor    ecx,ecx
   14000d5a0:	call   QWORD PTR [rip+0x2fe3a]        # 0x14003d3e0
   14000d5a6:	and    DWORD PTR [rsp+0x40],0x0
   14000d5ab:	lea    r8,[rip+0x9ee]        # 0x14000dfa0
   14000d5b2:	mov    QWORD PTR [rbx+0xc0],rax
   14000d5b9:	mov    r9,rbx
   14000d5bc:	lea    rax,[rsp+0x40]
   14000d5c1:	xor    edx,edx
   14000d5c3:	mov    QWORD PTR [rsp+0x28],rax
   14000d5c8:	xor    ecx,ecx
   14000d5ca:	and    DWORD PTR [rsp+0x20],0x0
   14000d5cf:	call   QWORD PTR [rip+0x2fceb]        # 0x14003d2c0
   14000d5d5:	mov    QWORD PTR [rbx+0xb0],rax
   14000d5dc:	add    rsp,0x30
   14000d5e0:	pop    rbx
   14000d5e1:	ret    
   14000d5e2:	int3   
   14000d5e3:	int3   
   14000d5e4:	int3   
   14000d5e5:	int3   
   14000d5e6:	int3   
   14000d5e7:	int3   
   14000d5e8:	mov    rax,rsp
   14000d5eb:	mov    QWORD PTR [rax+0x8],rcx
   14000d5ef:	push   rdi
   14000d5f0:	sub    rsp,0x30
   14000d5f4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000d5fc:	mov    QWORD PTR [rax+0x10],rbx
   14000d600:	mov    QWORD PTR [rax+0x18],rsi
   14000d604:	mov    rdi,rcx
   14000d607:	xor    esi,esi
   14000d609:	mov    DWORD PTR [rcx+0x20],esi
   14000d60c:	xor    edx,edx
   14000d60e:	lea    r8d,[rsi+0x28]
   14000d612:	add    rcx,r8
   14000d615:	call   0x140014694
   14000d61a:	mov    BYTE PTR [rdi+0x50],sil
   14000d61e:	mov    QWORD PTR [rdi+0x58],rsi
   14000d622:	mov    QWORD PTR [rdi+0x60],rsi
   14000d626:	mov    QWORD PTR [rdi+0x68],rsi
   14000d62a:	mov    QWORD PTR [rdi+0x70],rsi
   14000d62e:	lea    rcx,[rdi+0x78]
   14000d632:	call   0x14000db2c
   14000d637:	nop
   14000d638:	call   0x14000e048
   14000d63d:	mov    QWORD PTR [rdi+0xa0],rax
   14000d644:	mov    DWORD PTR [rdi+0xa8],esi
   14000d64a:	mov    BYTE PTR [rdi+0xac],sil
   14000d651:	mov    QWORD PTR [rdi+0xb0],rsi
   14000d658:	mov    QWORD PTR [rdi+0xb8],rsi
   14000d65f:	mov    QWORD PTR [rdi+0xc0],rsi
   14000d666:	mov    QWORD PTR [rdi+0xc8],rsi
   14000d66d:	lea    rcx,[rdi+0xd0]
   14000d674:	call   0x14000db2c
   14000d679:	cmp    BYTE PTR [rip+0x414fb],sil        # 0x14004eb7b
   14000d680:	jne    0x14000d68b
   14000d682:	mov    rcx,rdi
   14000d685:	call   0x14000d574
   14000d68a:	nop
   14000d68b:	mov    rax,rdi
   14000d68e:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d693:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d698:	add    rsp,0x30
   14000d69c:	pop    rdi
   14000d69d:	ret    
   14000d69e:	int3   
   14000d69f:	int3   
   14000d6a0:	int3   
   14000d6a1:	int3   
   14000d6a2:	int3   
   14000d6a3:	int3   
   14000d6a4:	mov    QWORD PTR [rsp+0x8],rbx
   14000d6a9:	mov    QWORD PTR [rsp+0x10],rsi
   14000d6ae:	push   rdi
   14000d6af:	sub    rsp,0x20
   14000d6b3:	cmp    BYTE PTR [rip+0x414c1],0x0        # 0x14004eb7b
   14000d6ba:	mov    rdi,rcx
   14000d6bd:	jne    0x14000d6c4
   14000d6bf:	call   0x14000d500
   14000d6c4:	mov    rsi,QWORD PTR [rdi+0x58]
   14000d6c8:	test   rsi,rsi
   14000d6cb:	je     0x14000d6e7
   14000d6cd:	and    QWORD PTR [rdi+0x58],0x0
   14000d6d2:	mov    rax,QWORD PTR [rsi]
   14000d6d5:	mov    rbx,QWORD PTR [rax+0x10]
   14000d6d9:	mov    rcx,rbx
   14000d6dc:	call   QWORD PTR [rip+0x30046]        # 0x14003d728
   14000d6e2:	mov    rcx,rsi
   14000d6e5:	call   rbx
   14000d6e7:	mov    rsi,QWORD PTR [rdi+0x60]
   14000d6eb:	test   rsi,rsi
   14000d6ee:	je     0x14000d70a
   14000d6f0:	and    QWORD PTR [rdi+0x60],0x0
   14000d6f5:	mov    rax,QWORD PTR [rsi]
   14000d6f8:	mov    rbx,QWORD PTR [rax+0x10]
   14000d6fc:	mov    rcx,rbx
   14000d6ff:	call   QWORD PTR [rip+0x30023]        # 0x14003d728
   14000d705:	mov    rcx,rsi
   14000d708:	call   rbx
   14000d70a:	mov    rsi,QWORD PTR [rdi+0x68]
   14000d70e:	test   rsi,rsi
   14000d711:	je     0x14000d72d
   14000d713:	and    QWORD PTR [rdi+0x68],0x0
   14000d718:	mov    rax,QWORD PTR [rsi]
   14000d71b:	mov    rbx,QWORD PTR [rax+0x10]
   14000d71f:	mov    rcx,rbx
   14000d722:	call   QWORD PTR [rip+0x30000]        # 0x14003d728
   14000d728:	mov    rcx,rsi
   14000d72b:	call   rbx
   14000d72d:	lea    rcx,[rdi+0x70]
   14000d731:	call   0x14000ddec
   14000d736:	cmp    BYTE PTR [rdi+0xac],0x0
   14000d73d:	jne    0x14002840a
   14000d743:	mov    rcx,QWORD PTR [rdi+0xa0]
   14000d74a:	test   rcx,rcx
   14000d74d:	je     0x14000d75c
   14000d74f:	call   0x14000dc9c
   14000d754:	and    QWORD PTR [rdi+0xa0],0x0
   14000d75c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d761:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d766:	add    rsp,0x20
   14000d76a:	pop    rdi
   14000d76b:	ret    
   14000d76c:	int3   
   14000d76d:	int3   
   14000d76e:	int3   
   14000d76f:	int3   
   14000d770:	int3   
   14000d771:	int3   
   14000d772:	int3   
   14000d773:	int3   
   14000d774:	int3   
   14000d775:	int3   
   14000d776:	int3   
   14000d777:	int3   
   14000d778:	int3   
   14000d779:	int3   
   14000d77a:	int3   
   14000d77b:	int3   
   14000d77c:	int3   
   14000d77d:	int3   
   14000d77e:	int3   
   14000d77f:	int3   
   14000d780:	sub    rsp,0x28
   14000d784:	add    rcx,0x50
   14000d788:	cmp    QWORD PTR [rcx],0x0
   14000d78c:	jne    0x14000d79f
   14000d78e:	cmp    QWORD PTR [rcx],rdx
   14000d791:	je     0x14000d798
   14000d793:	call   0x14000dcd0
   14000d798:	xor    eax,eax
   14000d79a:	add    rsp,0x28
   14000d79e:	ret    
   14000d79f:	mov    eax,0x80070005
   14000d7a4:	jmp    0x14000d79a
   14000d7a6:	int3   
   14000d7a7:	int3   
   14000d7a8:	int3   
   14000d7a9:	int3   
   14000d7aa:	int3   
   14000d7ab:	int3   
   14000d7ac:	mov    QWORD PTR [rsp+0x8],rbx
   14000d7b1:	mov    QWORD PTR [rsp+0x10],rsi
   14000d7b6:	push   rdi
   14000d7b7:	sub    rsp,0x20
   14000d7bb:	mov    rdi,rcx
   14000d7be:	add    rcx,0xd0
   14000d7c5:	call   QWORD PTR [rip+0x2fbed]        # 0x14003d3b8
   14000d7cb:	mov    rsi,QWORD PTR [rdi+0xc8]
   14000d7d2:	test   rsi,rsi
   14000d7d5:	jne    0x140028420
   14000d7db:	lea    rcx,[rdi+0x78]
   14000d7df:	call   QWORD PTR [rip+0x2fbd3]        # 0x14003d3b8
   14000d7e5:	mov    rsi,QWORD PTR [rdi+0x70]
   14000d7e9:	test   rsi,rsi
   14000d7ec:	jne    0x14002843b
   14000d7f2:	mov    rsi,QWORD PTR [rdi+0x68]
   14000d7f6:	test   rsi,rsi
   14000d7f9:	jne    0x140028456
   14000d7ff:	mov    rsi,QWORD PTR [rdi+0x60]
   14000d803:	test   rsi,rsi
   14000d806:	jne    0x140028471
   14000d80c:	mov    rsi,QWORD PTR [rdi+0x58]
   14000d810:	test   rsi,rsi
   14000d813:	jne    0x14002848c
   14000d819:	lea    rcx,[rdi+0x28]
   14000d81d:	cmp    BYTE PTR [rcx+0x28],0x0
   14000d821:	je     0x14000d82d
   14000d823:	mov    BYTE PTR [rcx+0x28],0x0
   14000d827:	call   QWORD PTR [rip+0x2fb8b]        # 0x14003d3b8
   14000d82d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d832:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d837:	add    rsp,0x20
   14000d83b:	pop    rdi
   14000d83c:	ret    
   14000d83d:	int3   
   14000d83e:	int3   
   14000d83f:	int3   
   14000d840:	int3   
   14000d841:	int3   
   14000d842:	int3   
   14000d843:	int3   
   14000d844:	mov    QWORD PTR [rsp+0x10],rbx
   14000d849:	mov    QWORD PTR [rsp+0x18],rbp
   14000d84e:	mov    QWORD PTR [rsp+0x20],rsi
   14000d853:	push   rdi
   14000d854:	push   r14
   14000d856:	push   r15
   14000d858:	sub    rsp,0x20
   14000d85c:	mov    rsi,rcx
   14000d85f:	add    rcx,0x38
   14000d863:	call   QWORD PTR [rip+0x2fb5f]        # 0x14003d3c8
   14000d869:	mov    rdi,QWORD PTR [rsi+0x8]
   14000d86d:	mov    QWORD PTR [rsp+0x40],rdi
   14000d872:	test   rdi,rdi
   14000d875:	jne    0x1400284a8
   14000d87b:	lea    rcx,[rsi+0x8]
   14000d87f:	call   0x14000d8bc
   14000d884:	mov    rcx,QWORD PTR [rsi+0x68]
   14000d888:	test   rcx,rcx
   14000d88b:	jne    0x1400284ee
   14000d891:	lea    rcx,[rsi+0x38]
   14000d895:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d89a:	mov    rbp,QWORD PTR [rsp+0x50]
   14000d89f:	mov    rsi,QWORD PTR [rsp+0x58]
   14000d8a4:	add    rsp,0x20
   14000d8a8:	pop    r15
   14000d8aa:	pop    r14
   14000d8ac:	pop    rdi
   14000d8ad:	rex.W jmp QWORD PTR [rip+0x2fb24]        # 0x14003d3d8
   14000d8b4:	int3   
   14000d8b5:	int3   
   14000d8b6:	int3   
   14000d8b7:	int3   
   14000d8b8:	int3   
   14000d8b9:	int3   
   14000d8ba:	int3   
   14000d8bb:	int3   
   14000d8bc:	rex push rbx
   14000d8be:	sub    rsp,0x20
   14000d8c2:	cmp    QWORD PTR [rcx+0x10],0x0
   14000d8c7:	mov    rbx,rcx
   14000d8ca:	ja     0x14002850c
   14000d8d0:	and    QWORD PTR [rbx],0x0
   14000d8d4:	and    QWORD PTR [rbx+0x8],0x0
   14000d8d9:	and    QWORD PTR [rbx+0x20],0x0
   14000d8de:	mov    rcx,QWORD PTR [rbx+0x18]
   14000d8e2:	test   rcx,rcx
   14000d8e5:	jne    0x14000d8ed
   14000d8e7:	add    rsp,0x20
   14000d8eb:	pop    rbx
   14000d8ec:	ret    
   14000d8ed:	call   0x14000e0e8
   14000d8f2:	and    QWORD PTR [rbx+0x18],0x0
   14000d8f7:	jmp    0x14000d8e7
   14000d8f9:	int3   
   14000d8fa:	int3   
   14000d8fb:	int3   
   14000d8fc:	int3   
   14000d8fd:	int3   
   14000d8fe:	int3   
   14000d8ff:	int3   
   14000d900:	rex push rbx
   14000d902:	sub    rsp,0x20
   14000d906:	lea    rbx,[rip+0x413b3]        # 0x14004ecc0
   14000d90d:	mov    rcx,rbx
   14000d910:	call   0x14000da98
   14000d915:	lea    rcx,[rip+0x315ec]        # 0x14003ef08
   14000d91c:	mov    rax,rbx
   14000d91f:	mov    QWORD PTR [rip+0x4139a],rcx        # 0x14004ecc0
   14000d926:	add    rsp,0x20
   14000d92a:	pop    rbx
   14000d92b:	ret    
   14000d92c:	int3   
   14000d92d:	int3   
   14000d92e:	int3   
   14000d92f:	int3   
   14000d930:	int3   
   14000d931:	int3   
   14000d932:	int3   
   14000d933:	int3   
   14000d934:	lea    rax,[rip+0x3165d]        # 0x14003ef98
   14000d93b:	mov    QWORD PTR [rcx],rax
   14000d93e:	jmp    0x14000da40
   14000d943:	int3   
   14000d944:	int3   
   14000d945:	int3   
   14000d946:	int3   
   14000d947:	int3   
   14000d948:	int3   
   14000d949:	int3   
   14000d94a:	int3   
   14000d94b:	int3   
   14000d94c:	int3   
   14000d94d:	int3   
   14000d94e:	int3   
   14000d94f:	int3   
   14000d950:	mov    rax,QWORD PTR [rsp+0x28]
   14000d955:	xor    ecx,ecx
   14000d957:	mov    DWORD PTR [rdx],0x4
   14000d95d:	mov    QWORD PTR [r8],rcx
   14000d960:	mov    QWORD PTR [r9],rcx
   14000d963:	mov    QWORD PTR [rax],rcx
   14000d966:	mov    rax,QWORD PTR [rsp+0x30]
   14000d96b:	mov    QWORD PTR [rax],rcx
   14000d96e:	ret    
   14000d96f:	int3   
   14000d970:	int3   
   14000d971:	int3   
   14000d972:	int3   
   14000d973:	int3   
   14000d974:	int3   
   14000d975:	int3   
   14000d976:	int3   
   14000d977:	int3   
   14000d978:	int3   
   14000d979:	int3   
   14000d97a:	int3   
   14000d97b:	int3   
   14000d97c:	int3   
   14000d97d:	int3   
   14000d97e:	int3   
   14000d97f:	int3   
   14000d980:	xor    eax,eax
   14000d982:	mov    BYTE PTR [rdx],al
   14000d984:	mov    DWORD PTR [r8],eax
   14000d987:	mov    DWORD PTR [r9],eax
   14000d98a:	ret    
   14000d98b:	int3   
   14000d98c:	int3   
   14000d98d:	int3   
   14000d98e:	int3   
   14000d98f:	int3   
   14000d990:	int3   
   14000d991:	int3   
   14000d992:	int3   
   14000d993:	int3   
   14000d994:	int3   
   14000d995:	int3   
   14000d996:	int3   
   14000d997:	int3   
   14000d998:	int3   
   14000d999:	int3   
   14000d99a:	int3   
   14000d99b:	int3   
   14000d99c:	int3   
   14000d99d:	int3   
   14000d99e:	int3   
   14000d99f:	int3   
   14000d9a0:	mov    rax,QWORD PTR [rsp+0x28]
   14000d9a5:	xor    ecx,ecx
   14000d9a7:	mov    DWORD PTR [rdx],ecx
   14000d9a9:	mov    DWORD PTR [r8],ecx
   14000d9ac:	mov    QWORD PTR [r9],rcx
   14000d9af:	mov    QWORD PTR [rax],rcx
   14000d9b2:	mov    rax,QWORD PTR [rsp+0x30]
   14000d9b7:	mov    QWORD PTR [rax],rcx
   14000d9ba:	ret    
   14000d9bb:	int3   
   14000d9bc:	int3   
   14000d9bd:	int3   
   14000d9be:	int3   
   14000d9bf:	int3   
   14000d9c0:	int3   
   14000d9c1:	int3   
   14000d9c2:	int3   
   14000d9c3:	int3   
   14000d9c4:	int3   
   14000d9c5:	int3   
   14000d9c6:	int3   
   14000d9c7:	int3   
   14000d9c8:	int3   
   14000d9c9:	int3   
   14000d9ca:	int3   
   14000d9cb:	int3   
   14000d9cc:	int3   
   14000d9cd:	int3   
   14000d9ce:	int3   
   14000d9cf:	int3   
   14000d9d0:	and    DWORD PTR [rdx],0x0
   14000d9d3:	ret    
   14000d9d4:	int3   
   14000d9d5:	int3   
   14000d9d6:	int3   
   14000d9d7:	int3   
   14000d9d8:	int3   
   14000d9d9:	int3   
   14000d9da:	int3   
   14000d9db:	int3   
   14000d9dc:	int3   
   14000d9dd:	int3   
   14000d9de:	int3   
   14000d9df:	int3   
   14000d9e0:	mov    rax,QWORD PTR [rsp+0x28]
   14000d9e5:	xor    r10d,r10d
   14000d9e8:	mov    DWORD PTR [rdx],r10d
   14000d9eb:	or     ecx,0xffffffff
   14000d9ee:	mov    DWORD PTR [r8],r10d
   14000d9f1:	mov    DWORD PTR [r9],ecx
   14000d9f4:	mov    DWORD PTR [rax],ecx
   14000d9f6:	mov    rax,QWORD PTR [rsp+0x30]
   14000d9fb:	mov    DWORD PTR [rax],r10d
   14000d9fe:	ret    
   14000d9ff:	int3   
   14000da00:	int3   
   14000da01:	int3   
   14000da02:	int3   
   14000da03:	int3   
   14000da04:	int3   
   14000da05:	int3   
   14000da06:	int3   
   14000da07:	int3   
   14000da08:	int3   
   14000da09:	int3   
   14000da0a:	int3   
   14000da0b:	int3   
   14000da0c:	int3   
   14000da0d:	int3   
   14000da0e:	int3   
   14000da0f:	int3   
   14000da10:	and    DWORD PTR [rdx],0x0
   14000da13:	and    DWORD PTR [r8],0x0
   14000da17:	ret    
   14000da18:	int3   
   14000da19:	int3   
   14000da1a:	int3   
   14000da1b:	int3   
   14000da1c:	int3   
   14000da1d:	int3   
   14000da1e:	int3   
   14000da1f:	int3   
   14000da20:	mov    rax,QWORD PTR [rsp+0x28]
   14000da25:	xor    ecx,ecx
   14000da27:	mov    QWORD PTR [rdx],rcx
   14000da2a:	mov    QWORD PTR [rdx+0x8],rcx
   14000da2e:	mov    DWORD PTR [r8],ecx
   14000da31:	mov    DWORD PTR [r9],ecx
   14000da34:	mov    DWORD PTR [rax],ecx
   14000da36:	ret    
   14000da37:	int3   
   14000da38:	int3   
   14000da39:	int3   
   14000da3a:	int3   
   14000da3b:	int3   
   14000da3c:	int3   
   14000da3d:	int3   
   14000da3e:	int3   
   14000da3f:	int3   
   14000da40:	mov    QWORD PTR [rsp+0x8],rcx
   14000da45:	push   rbx
   14000da46:	sub    rsp,0x30
   14000da4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000da53:	lea    rax,[rip+0x315d6]        # 0x14003f030
   14000da5a:	mov    QWORD PTR [rcx],rax
   14000da5d:	lea    rbx,[rcx+0x8]
   14000da61:	mov    QWORD PTR [rsp+0x40],rbx
   14000da66:	lea    rax,[rip+0x315bb]        # 0x14003f028
   14000da6d:	mov    QWORD PTR [rbx],rax
   14000da70:	mov    rcx,rbx
   14000da73:	call   0x14000d844
   14000da78:	nop
   14000da79:	lea    rcx,[rbx+0x38]
   14000da7d:	call   QWORD PTR [rip+0x2f935]        # 0x14003d3b8
   14000da83:	nop
   14000da84:	lea    rcx,[rbx+0x8]
   14000da88:	add    rsp,0x30
   14000da8c:	pop    rbx
   14000da8d:	jmp    0x14000d8bc
   14000da92:	int3   
   14000da93:	int3   
   14000da94:	int3   
   14000da95:	int3   
   14000da96:	int3   
   14000da97:	int3   
   14000da98:	mov    r11,rsp
   14000da9b:	mov    QWORD PTR [r11+0x8],rcx
   14000da9f:	push   rdi
   14000daa0:	sub    rsp,0x30
   14000daa4:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   14000daac:	mov    QWORD PTR [r11+0x10],rbx
   14000dab0:	mov    rdi,rcx
   14000dab3:	lea    rax,[rip+0x31576]        # 0x14003f030
   14000daba:	mov    QWORD PTR [rcx],rax
   14000dabd:	lea    rbx,[rcx+0x8]
   14000dac1:	mov    QWORD PTR [r11+0x8],rbx
   14000dac5:	lea    rax,[rip+0x3155c]        # 0x14003f028
   14000dacc:	mov    QWORD PTR [rbx],rax
   14000dacf:	and    QWORD PTR [rbx+0x8],0x0
   14000dad4:	and    QWORD PTR [rbx+0x10],0x0
   14000dad9:	and    QWORD PTR [rbx+0x18],0x0
   14000dade:	and    QWORD PTR [rbx+0x20],0x0
   14000dae3:	and    QWORD PTR [rbx+0x28],0x0
   14000dae8:	mov    DWORD PTR [rbx+0x30],0xa
   14000daef:	lea    rcx,[rbx+0x38]
   14000daf3:	call   0x14000db2c
   14000daf8:	and    QWORD PTR [rbx+0x60],0x0
   14000dafd:	and    QWORD PTR [rbx+0x68],0x0
   14000db02:	mov    QWORD PTR [rdi+0x68],rdi
   14000db06:	mov    rax,rdi
   14000db09:	mov    rbx,QWORD PTR [rsp+0x48]
   14000db0e:	add    rsp,0x30
   14000db12:	pop    rdi
   14000db13:	ret    
   14000db14:	int3   
   14000db15:	int3   
   14000db16:	int3   
   14000db17:	int3   
   14000db18:	int3   
   14000db19:	int3   
   14000db1a:	int3   
   14000db1b:	int3   
   14000db1c:	rex.W jmp QWORD PTR [rip+0x2f895]        # 0x14003d3b8
   14000db23:	int3   
   14000db24:	int3   
   14000db25:	int3   
   14000db26:	int3   
   14000db27:	int3   
   14000db28:	int3   
   14000db29:	int3   
   14000db2a:	int3   
   14000db2b:	int3   
   14000db2c:	rex push rbx
   14000db2e:	sub    rsp,0x20
   14000db32:	mov    rbx,rcx
   14000db35:	call   QWORD PTR [rip+0x2f84d]        # 0x14003d388
   14000db3b:	jmp    0x14000db48
   14000db3d:	mov    ecx,0x8007000e
   14000db42:	call   0x1400152fc
   14000db47:	nop
   14000db48:	mov    rax,rbx
   14000db4b:	add    rsp,0x20
   14000db4f:	pop    rbx
   14000db50:	ret    
   14000db51:	int3   
   14000db52:	int3   
   14000db53:	int3   
   14000db54:	int3   
   14000db55:	int3   
   14000db56:	int3   
   14000db57:	int3   
   14000db58:	mov    QWORD PTR [rsp+0x8],rbx
   14000db5d:	push   rdi
   14000db5e:	sub    rsp,0x20
   14000db62:	lea    rdi,[rcx+0xa8]
   14000db69:	mov    rbx,rcx
   14000db6c:	mov    rcx,rdi
   14000db6f:	call   QWORD PTR [rip+0x2f853]        # 0x14003d3c8
   14000db75:	mov    rbx,QWORD PTR [rbx+0xd0]
   14000db7c:	test   rbx,rbx
   14000db7f:	je     0x14000db88
   14000db81:	lock inc DWORD PTR [rbx+0x118]
   14000db88:	mov    rcx,rdi
   14000db8b:	call   QWORD PTR [rip+0x2f847]        # 0x14003d3d8
   14000db91:	mov    rax,rbx
   14000db94:	mov    rbx,QWORD PTR [rsp+0x30]
   14000db99:	add    rsp,0x20
   14000db9d:	pop    rdi
   14000db9e:	ret    
   14000db9f:	int3   
   14000dba0:	int3   
   14000dba1:	int3   
   14000dba2:	int3   
   14000dba3:	int3   
   14000dba4:	int3   
   14000dba5:	int3   
   14000dba6:	int3   
   14000dba7:	int3   
   14000dba8:	int3   
   14000dba9:	int3   
   14000dbaa:	int3   
   14000dbab:	int3   
   14000dbac:	int3   
   14000dbad:	int3   
   14000dbae:	int3   
   14000dbaf:	int3   
   14000dbb0:	mov    QWORD PTR [rsp+0x8],rbx
   14000dbb5:	mov    QWORD PTR [rsp+0x10],rsi
   14000dbba:	push   rdi
   14000dbbb:	sub    rsp,0x20
   14000dbbf:	mov    rsi,rdx
   14000dbc2:	test   r8,r8
   14000dbc5:	je     0x14000dc21
   14000dbc7:	or     eax,0xffffffff
   14000dbca:	add    rcx,0xfffffffffffffff0
   14000dbce:	mov    WORD PTR [r8],ax
   14000dbd2:	call   0x14000db58
   14000dbd7:	mov    rdi,rax
   14000dbda:	test   rax,rax
   14000dbdd:	je     0x14000dc0f
   14000dbdf:	cmp    BYTE PTR [rip+0x40fba],0x0        # 0x14004eba0
   14000dbe6:	jne    0x14000dc07
   14000dbe8:	lea    rcx,[rax+0x8]
   14000dbec:	call   QWORD PTR [rip+0x2f7d6]        # 0x14003d3c8
   14000dbf2:	mov    rdx,rsi
   14000dbf5:	mov    rcx,rdi
   14000dbf8:	call   0x14000dc30
   14000dbfd:	lea    rcx,[rdi+0x8]
   14000dc01:	call   QWORD PTR [rip+0x2f7d1]        # 0x14003d3d8
   14000dc07:	mov    rcx,rdi
   14000dc0a:	call   0x14000dc9c
   14000dc0f:	xor    eax,eax
   14000dc11:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dc16:	mov    rsi,QWORD PTR [rsp+0x38]
   14000dc1b:	add    rsp,0x20
   14000dc1f:	pop    rdi
   14000dc20:	ret    
   14000dc21:	mov    eax,0x80004003
   14000dc26:	jmp    0x14000dc11
   14000dc28:	int3   
   14000dc29:	int3   
   14000dc2a:	int3   
   14000dc2b:	int3   
   14000dc2c:	int3   
   14000dc2d:	int3   
   14000dc2e:	int3   
   14000dc2f:	int3   
   14000dc30:	mov    QWORD PTR [rsp+0x8],rbx
   14000dc35:	mov    QWORD PTR [rsp+0x10],rsi
   14000dc3a:	push   rdi
   14000dc3b:	sub    rsp,0x30
   14000dc3f:	mov    rsi,rdx
   14000dc42:	mov    rdi,rcx
   14000dc45:	mov    edx,0xc8
   14000dc4a:	lea    rcx,[rsp+0x20]
   14000dc4f:	call   0x14000dd50
   14000dc54:	lea    rbx,[rdi+0x30]
   14000dc58:	mov    rcx,rbx
   14000dc5b:	call   0x1400013e4
   14000dc60:	lea    rcx,[rsp+0x20]
   14000dc65:	call   0x14000ddc0
   14000dc6a:	cmp    QWORD PTR [rbx],rsi
   14000dc6d:	je     0x14000dc7a
   14000dc6f:	mov    rdx,rsi
   14000dc72:	mov    rcx,rbx
   14000dc75:	call   0x14000dcd0
   14000dc7a:	cmp    QWORD PTR [rdi],0x0
   14000dc7e:	jne    0x14002853a
   14000dc84:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dc89:	mov    rsi,QWORD PTR [rsp+0x48]
   14000dc8e:	add    rsp,0x30
   14000dc92:	pop    rdi
   14000dc93:	ret    
   14000dc94:	int3   
   14000dc95:	int3   
   14000dc96:	int3   
   14000dc97:	int3   
   14000dc98:	int3   
   14000dc99:	int3   
   14000dc9a:	int3   
   14000dc9b:	int3   
   14000dc9c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dca1:	push   rdi
   14000dca2:	sub    rsp,0x20
   14000dca6:	mov    rbx,rcx
   14000dca9:	or     edi,0xffffffff
   14000dcac:	lock xadd DWORD PTR [rcx+0x118],edi
   14000dcb4:	sub    edi,0x1
   14000dcb7:	je     0x140028562
   14000dcbd:	mov    eax,edi
   14000dcbf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dcc4:	add    rsp,0x20
   14000dcc8:	pop    rdi
   14000dcc9:	ret    
   14000dcca:	int3   
   14000dccb:	int3   
   14000dccc:	int3   
   14000dccd:	int3   
   14000dcce:	int3   
   14000dccf:	int3   
   14000dcd0:	mov    QWORD PTR [rsp+0x8],rbx
   14000dcd5:	mov    QWORD PTR [rsp+0x10],rsi
   14000dcda:	mov    QWORD PTR [rsp+0x18],rdi
   14000dcdf:	push   r14
   14000dce1:	sub    rsp,0x20
   14000dce5:	mov    rdi,rdx
   14000dce8:	mov    rsi,rcx
   14000dceb:	test   rcx,rcx
   14000dcee:	je     0x14000dd45
   14000dcf0:	test   rdx,rdx
   14000dcf3:	je     0x14000dd0a
   14000dcf5:	mov    rax,QWORD PTR [rdx]
   14000dcf8:	mov    rbx,QWORD PTR [rax+0x8]
   14000dcfc:	mov    rcx,rbx
   14000dcff:	call   QWORD PTR [rip+0x2fa23]        # 0x14003d728
   14000dd05:	mov    rcx,rdi
   14000dd08:	call   rbx
   14000dd0a:	mov    r14,QWORD PTR [rsi]
   14000dd0d:	test   r14,r14
   14000dd10:	jne    0x14000dd2e
   14000dd12:	mov    QWORD PTR [rsi],rdi
   14000dd15:	mov    rax,rdi
   14000dd18:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dd1d:	mov    rsi,QWORD PTR [rsp+0x38]
   14000dd22:	mov    rdi,QWORD PTR [rsp+0x40]
   14000dd27:	add    rsp,0x20
   14000dd2b:	pop    r14
   14000dd2d:	ret    
   14000dd2e:	mov    rax,QWORD PTR [r14]
   14000dd31:	mov    rbx,QWORD PTR [rax+0x10]
   14000dd35:	mov    rcx,rbx
   14000dd38:	call   QWORD PTR [rip+0x2f9ea]        # 0x14003d728
   14000dd3e:	mov    rcx,r14
   14000dd41:	call   rbx
   14000dd43:	jmp    0x14000dd12
   14000dd45:	xor    eax,eax
   14000dd47:	jmp    0x14000dd18
   14000dd49:	int3   
   14000dd4a:	int3   
   14000dd4b:	int3   
   14000dd4c:	int3   
   14000dd4d:	int3   
   14000dd4e:	int3   
   14000dd4f:	int3   
   14000dd50:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd55:	push   rdi
   14000dd56:	sub    rsp,0x40
   14000dd5a:	and    QWORD PTR [rcx],0x0
   14000dd5e:	mov    rbx,rcx
   14000dd61:	and    DWORD PTR [rcx+0x8],0x0
   14000dd65:	mov    edi,edx
   14000dd67:	xor    ecx,ecx
   14000dd69:	call   QWORD PTR [rip+0x453b9]        # 0x140053128
   14000dd6f:	test   eax,eax
   14000dd71:	js     0x14000ddac
   14000dd73:	mov    eax,0x1f4
   14000dd78:	test   edi,edi
   14000dd7a:	cmove  edi,eax
   14000dd7d:	call   QWORD PTR [rip+0x2f575]        # 0x14003d2f8
   14000dd83:	mov    DWORD PTR [rsp+0x30],0x8
   14000dd8b:	lea    r8,[rip+0x2de9e]        # 0x14003bc30
   14000dd92:	and    DWORD PTR [rsp+0x28],0x0
   14000dd97:	mov    r9,rbx
   14000dd9a:	xor    edx,edx
   14000dd9c:	mov    DWORD PTR [rbx+0x8],eax
   14000dd9f:	mov    rcx,rbx
   14000dda2:	mov    DWORD PTR [rsp+0x20],edi
   14000dda6:	call   QWORD PTR [rip+0x2f68c]        # 0x14003d438
   14000ddac:	mov    rax,rbx
   14000ddaf:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ddb4:	add    rsp,0x40
   14000ddb8:	pop    rdi
   14000ddb9:	ret    
   14000ddba:	int3   
   14000ddbb:	int3   
   14000ddbc:	int3   
   14000ddbd:	int3   
   14000ddbe:	int3   
   14000ddbf:	int3   
   14000ddc0:	sub    rsp,0x28
   14000ddc4:	mov    rdx,QWORD PTR [rcx]
   14000ddc7:	test   rdx,rdx
   14000ddca:	je     0x14000dde0
   14000ddcc:	or     r8,0xffffffffffffffff
   14000ddd0:	xor    ecx,ecx
   14000ddd2:	call   QWORD PTR [rip+0x2f650]        # 0x14003d428
   14000ddd8:	xor    ecx,ecx
   14000ddda:	call   QWORD PTR [rip+0x45330]        # 0x140053110
   14000dde0:	add    rsp,0x28
   14000dde4:	ret    
   14000dde5:	int3   
   14000dde6:	int3   
   14000dde7:	int3   
   14000dde8:	int3   
   14000dde9:	int3   
   14000ddea:	int3   
   14000ddeb:	int3   
   14000ddec:	mov    QWORD PTR [rsp+0x8],rbx
   14000ddf1:	push   rdi
   14000ddf2:	sub    rsp,0x20
   14000ddf6:	mov    rdi,QWORD PTR [rcx]
   14000ddf9:	test   rdi,rdi
   14000ddfc:	jne    0x14002857e
   14000de02:	mov    rbx,QWORD PTR [rsp+0x30]
   14000de07:	add    rsp,0x20
   14000de0b:	pop    rdi
   14000de0c:	ret    
   14000de0d:	int3   
   14000de0e:	int3   
   14000de0f:	int3   
   14000de10:	int3   
   14000de11:	int3   
   14000de12:	int3   
   14000de13:	int3   
   14000de14:	rex push rbx
   14000de16:	sub    rsp,0x20
   14000de1a:	mov    rbx,rcx
   14000de1d:	mov    rcx,QWORD PTR [rcx]
   14000de20:	test   rcx,rcx
   14000de23:	jne    0x14002859e
   14000de29:	and    DWORD PTR [rbx+0x8],0x0
   14000de2d:	and    DWORD PTR [rbx+0xc],0x0
   14000de31:	add    rsp,0x20
   14000de35:	pop    rbx
   14000de36:	ret    
   14000de37:	int3   
   14000de38:	int3   
   14000de39:	int3   
   14000de3a:	int3   
   14000de3b:	int3   
   14000de3c:	int3   
   14000de3d:	int3   
   14000de3e:	int3   
   14000de3f:	int3   
   14000de40:	sub    rsp,0x28
   14000de44:	mov    rcx,QWORD PTR [rip+0x41175]        # 0x14004efc0
   14000de4b:	test   rcx,rcx
   14000de4e:	je     0x14000de63
   14000de50:	call   QWORD PTR [rip+0x2f8ba]        # 0x14003d710
   14000de56:	and    QWORD PTR [rip+0x41162],0x0        # 0x14004efc0
   14000de5e:	add    rsp,0x28
   14000de62:	ret    
   14000de63:	xor    eax,eax
   14000de65:	jmp    0x14000de5e
   14000de67:	int3   
   14000de68:	int3   
   14000de69:	int3   
   14000de6a:	int3   
   14000de6b:	int3   
   14000de6c:	int3   
   14000de6d:	int3   
   14000de6e:	int3   
   14000de6f:	int3   
   14000de70:	test   rcx,rcx
   14000de73:	je     0x14000de84
   14000de79:	jmp    0x14002ef2c
   14000de7e:	int3   
   14000de7f:	int3   
   14000de80:	int3   
   14000de81:	int3   
   14000de82:	int3   
   14000de83:	int3   
   14000de84:	mov    rax,rsp
   14000de87:	mov    QWORD PTR [rax+0x18],r8
   14000de8b:	mov    QWORD PTR [rax+0x10],rdx
   14000de8f:	mov    QWORD PTR [rax+0x8],rcx
   14000de93:	push   rbx
   14000de94:	push   rsi
   14000de95:	push   rdi
   14000de96:	push   r13
   14000de98:	push   r14
   14000de9a:	push   r15
   14000de9c:	sub    rsp,0x38
   14000dea0:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14000dea8:	mov    r14,r8
   14000deab:	mov    r15,rdx
   14000deae:	xor    ebx,ebx
   14000deb0:	test   r8,r8
   14000deb3:	je     0x1400285ae
   14000deb9:	mov    QWORD PTR [r8],rbx
   14000debc:	mov    esi,0x8007000e
   14000dec1:	mov    DWORD PTR [rsp+0x70],esi
   14000dec5:	mov    QWORD PTR [rsp+0x88],rbx
   14000decd:	mov    ecx,0xf8
   14000ded2:	call   0x140013d94
   14000ded7:	mov    QWORD PTR [rsp+0x28],rax
   14000dedc:	test   rax,rax
   14000dedf:	je     0x1400285b8
   14000dee5:	mov    rcx,rax
   14000dee8:	call   0x14000d390
   14000deed:	mov    rdi,rax
   14000def0:	mov    QWORD PTR [rsp+0x88],rdi
   14000def8:	test   rdi,rdi
   14000defb:	je     0x14000df63
   14000defd:	lock inc DWORD PTR [rdi+0x20]
   14000df01:	lea    rcx,[rdi+0x28]
   14000df05:	call   0x14000c130
   14000df0a:	mov    esi,eax
   14000df0c:	test   eax,eax
   14000df0e:	js     0x14000df29
   14000df10:	mov    BYTE PTR [rdi+0x50],0x1
   14000df14:	mov    esi,ebx
   14000df16:	mov    eax,0x80070005
   14000df1b:	cmp    BYTE PTR [rip+0x40c5a],bl        # 0x14004eb7b
   14000df21:	cmovne esi,eax
   14000df24:	test   esi,esi
   14000df26:	cmovns esi,ebx
   14000df29:	lock dec DWORD PTR [rdi+0x20]
   14000df2d:	test   esi,esi
   14000df2f:	jne    0x1400285fa
   14000df35:	mov    rax,QWORD PTR [rdi]
   14000df38:	mov    rsi,QWORD PTR [rax]
   14000df3b:	lea    rax,[rip+0xfffffffffffff37e]        # 0x14000d2c0
   14000df42:	cmp    rsi,rax
   14000df45:	jne    0x1400285e0
   14000df4b:	mov    r8,r14
   14000df4e:	mov    rdx,r15
   14000df51:	mov    rcx,rdi
   14000df54:	call   0x14000d2c0
   14000df59:	mov    esi,eax
   14000df5b:	test   eax,eax
   14000df5d:	jne    0x1400285fa
   14000df63:	mov    eax,esi
   14000df65:	add    rsp,0x38
   14000df69:	pop    r15
   14000df6b:	pop    r14
   14000df6d:	pop    r13
   14000df6f:	pop    rdi
   14000df70:	pop    rsi
   14000df71:	pop    rbx
   14000df72:	ret    
   14000df73:	int3   
   14000df74:	int3   
   14000df75:	int3   
   14000df76:	int3   
   14000df77:	int3   
   14000df78:	int3   
   14000df79:	int3   
   14000df7a:	int3   
   14000df7b:	int3   
   14000df7c:	cmp    QWORD PTR [rcx],0x0
   14000df80:	je     0x14000df89
   14000df82:	xor    edx,edx
   14000df84:	jmp    0x14000dcd0
   14000df89:	xor    eax,eax
   14000df8b:	ret    
   14000df8c:	int3   
   14000df8d:	int3   
   14000df8e:	int3   
   14000df8f:	int3   
   14000df90:	int3   
   14000df91:	int3   
   14000df92:	int3   
   14000df93:	int3   
   14000df94:	int3   
   14000df95:	int3   
   14000df96:	int3   
   14000df97:	int3   
   14000df98:	int3   
   14000df99:	int3   
   14000df9a:	int3   
   14000df9b:	int3   
   14000df9c:	int3   
   14000df9d:	int3   
   14000df9e:	int3   
   14000df9f:	int3   
   14000dfa0:	mov    QWORD PTR [rsp+0x8],rbx
   14000dfa5:	push   rdi
   14000dfa6:	sub    rsp,0x20
   14000dfaa:	or     ebx,0xffffffff
   14000dfad:	mov    rdi,rcx
   14000dfb0:	test   rcx,rcx
   14000dfb3:	je     0x14000dfd3
   14000dfb5:	xor    edx,edx
   14000dfb7:	xor    ecx,ecx
   14000dfb9:	call   QWORD PTR [rip+0x45159]        # 0x140053118
   14000dfbf:	test   eax,eax
   14000dfc1:	js     0x14000dfd3
   14000dfc3:	mov    rcx,rdi
   14000dfc6:	call   0x14000d494
   14000dfcb:	mov    ebx,eax
   14000dfcd:	call   QWORD PTR [rip+0x4512d]        # 0x140053100
   14000dfd3:	mov    eax,ebx
   14000dfd5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dfda:	add    rsp,0x20
   14000dfde:	pop    rdi
   14000dfdf:	ret    
   14000dfe0:	int3   
   14000dfe1:	int3   
   14000dfe2:	int3   
   14000dfe3:	int3   
   14000dfe4:	int3   
   14000dfe5:	int3   
   14000dfe6:	int3   
   14000dfe7:	int3   
   14000dfe8:	int3   
   14000dfe9:	int3   
   14000dfea:	int3   
   14000dfeb:	int3   
   14000dfec:	int3   
   14000dfed:	int3   
   14000dfee:	int3   
   14000dfef:	int3   
   14000dff0:	ret    0x0
   14000dff3:	int3   
   14000dff4:	int3   
   14000dff5:	int3   
   14000dff6:	int3   
   14000dff7:	int3   
   14000dff8:	int3   
   14000dff9:	int3   
   14000dffa:	int3   
   14000dffb:	int3   
   14000dffc:	rex push rbx
   14000dffe:	sub    rsp,0x20
   14000e002:	lea    rcx,[rip+0x4108f]        # 0x14004f098
   14000e009:	call   QWORD PTR [rip+0x2f3b9]        # 0x14003d3c8
   14000e00f:	mov    rbx,QWORD PTR [rip+0x40b9a]        # 0x14004ebb0
   14000e016:	lea    rcx,[rip+0x4107b]        # 0x14004f098
   14000e01d:	and    QWORD PTR [rip+0x40b8b],0x0        # 0x14004ebb0
   14000e025:	mov    BYTE PTR [rip+0x40b74],0x1        # 0x14004eba0
   14000e02c:	call   QWORD PTR [rip+0x2f3a6]        # 0x14003d3d8
   14000e032:	test   rbx,rbx
   14000e035:	jne    0x14002861a
   14000e03b:	add    rsp,0x20
   14000e03f:	pop    rbx
   14000e040:	ret    
   14000e041:	int3   
   14000e042:	int3   
   14000e043:	int3   
   14000e044:	int3   
   14000e045:	int3   
   14000e046:	int3   
   14000e047:	int3   
   14000e048:	rex push rbx
   14000e04a:	sub    rsp,0x30
   14000e04e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e057:	lea    rcx,[rip+0x4103a]        # 0x14004f098
   14000e05e:	call   QWORD PTR [rip+0x2f364]        # 0x14003d3c8
   14000e064:	cmp    QWORD PTR [rip+0x40b44],0x0        # 0x14004ebb0
   14000e06c:	je     0x14000e097
   14000e06e:	mov    rbx,QWORD PTR [rip+0x40b3b]        # 0x14004ebb0
   14000e075:	test   rbx,rbx
   14000e078:	je     0x14000e081
   14000e07a:	lock inc DWORD PTR [rbx+0x118]
   14000e081:	lea    rcx,[rip+0x41010]        # 0x14004f098
   14000e088:	call   QWORD PTR [rip+0x2f34a]        # 0x14003d3d8
   14000e08e:	mov    rax,rbx
   14000e091:	add    rsp,0x30
   14000e095:	pop    rbx
   14000e096:	ret    
   14000e097:	cmp    BYTE PTR [rip+0x40b02],0x0        # 0x14004eba0
   14000e09e:	jne    0x14000e06e
   14000e0a0:	cmp    BYTE PTR [rip+0x40ad4],0x0        # 0x14004eb7b
   14000e0a7:	jne    0x14000e06e
   14000e0a9:	mov    ecx,0x120
   14000e0ae:	call   0x140013d94
   14000e0b3:	mov    QWORD PTR [rsp+0x40],rax
   14000e0b8:	test   rax,rax
   14000e0bb:	je     0x14000e0c6
   14000e0bd:	mov    rcx,rax
   14000e0c0:	call   0x140012ab4
   14000e0c5:	nop
   14000e0c6:	mov    QWORD PTR [rip+0x40ae3],rax        # 0x14004ebb0
   14000e0cd:	test   rax,rax
   14000e0d0:	je     0x14000e06e
   14000e0d2:	lock inc DWORD PTR [rax+0x118]
   14000e0d9:	call   0x1400122d8
   14000e0de:	jmp    0x14000e06e
   14000e0e0:	int3   
   14000e0e1:	int3   
   14000e0e2:	int3   
   14000e0e3:	int3   
   14000e0e4:	int3   
   14000e0e5:	int3   
   14000e0e6:	int3   
   14000e0e7:	int3   
   14000e0e8:	test   rcx,rcx
   14000e0eb:	je     0x14000e108
   14000e0ed:	push   rbx
   14000e0ee:	sub    rsp,0x20
   14000e0f2:	mov    rbx,QWORD PTR [rcx]
   14000e0f5:	call   QWORD PTR [rip+0x2f54d]        # 0x14003d648
   14000e0fb:	mov    rcx,rbx
   14000e0fe:	test   rbx,rbx
   14000e101:	jne    0x14000e0f2
   14000e103:	add    rsp,0x20
   14000e107:	pop    rbx
   14000e108:	ret    
   14000e109:	int3   
   14000e10a:	int3   
   14000e10b:	int3   
   14000e10c:	int3   
   14000e10d:	int3   
   14000e10e:	int3   
   14000e10f:	int3   
   14000e110:	rex push rbx
   14000e112:	sub    rsp,0x20
   14000e116:	mov    rbx,rcx
   14000e119:	add    rcx,0xe8
   14000e120:	call   0x14000f528
   14000e125:	cmp    BYTE PTR [rbx+0x48],0x0
   14000e129:	jne    0x14002922e
   14000e12f:	and    QWORD PTR [rbx+0x40],0x0
   14000e134:	cmp    DWORD PTR [rbx],0x1
   14000e137:	je     0x140029241
   14000e13d:	mov    DWORD PTR [rbx],0x3
   14000e143:	add    rsp,0x20
   14000e147:	pop    rbx
   14000e148:	ret    
   14000e149:	int3   
   14000e14a:	int3   
   14000e14b:	int3   
   14000e14c:	int3   
   14000e14d:	int3   
   14000e14e:	int3   
   14000e14f:	int3   
   14000e150:	mov    r10d,DWORD PTR [rcx+0x50]
   14000e154:	mov    r9,rcx
   14000e157:	cmp    r10d,0x1
   14000e15b:	jl     0x14002925a
   14000e161:	xor    eax,eax
   14000e163:	cmp    DWORD PTR [r9+0x54],eax
   14000e167:	jl     0x14000e16d
   14000e169:	mov    DWORD PTR [r9+0x54],edx
   14000e16d:	test   r8,r8
   14000e170:	je     0x14000e179
   14000e172:	mov    ecx,DWORD PTR [r9+0x54]
   14000e176:	mov    DWORD PTR [r8],ecx
   14000e179:	lea    ecx,[r10-0x1]
   14000e17d:	test   ecx,ecx
   14000e17f:	mov    DWORD PTR [r9+0x50],ecx
   14000e183:	sete   al
   14000e186:	ret    
   14000e187:	int3   
   14000e188:	int3   
   14000e189:	int3   
   14000e18a:	int3   
   14000e18b:	int3   
   14000e18c:	int3   
   14000e18d:	int3   
   14000e18e:	int3   
   14000e18f:	int3   
   14000e190:	rex push rbx
   14000e192:	sub    rsp,0x20
   14000e196:	mov    rbx,rcx
   14000e199:	call   0x14000e400
   14000e19e:	mov    rax,rbx
   14000e1a1:	add    rsp,0x20
   14000e1a5:	pop    rbx
   14000e1a6:	ret    
   14000e1a7:	int3   
   14000e1a8:	int3   
   14000e1a9:	int3   
   14000e1aa:	int3   
   14000e1ab:	int3   
   14000e1ac:	int3   
   14000e1ad:	int3   
   14000e1ae:	int3   
   14000e1af:	int3   
   14000e1b0:	rex push rbx
   14000e1b2:	sub    rsp,0x30
   14000e1b6:	lea    rax,[rip+0x409bd]        # 0x14004eb7a
   14000e1bd:	mov    rbx,rcx
   14000e1c0:	lea    r9,[rip+0x409b1]        # 0x14004eb78
   14000e1c7:	mov    QWORD PTR [rsp+0x20],rax
   14000e1cc:	lea    r8,[rip+0x409a8]        # 0x14004eb7b
   14000e1d3:	call   0x14000e800
   14000e1d8:	mov    rax,rbx
   14000e1db:	add    rsp,0x30
   14000e1df:	pop    rbx
   14000e1e0:	ret    
   14000e1e1:	int3   
   14000e1e2:	int3   
   14000e1e3:	int3   
   14000e1e4:	int3   
   14000e1e5:	int3   
   14000e1e6:	int3   
   14000e1e7:	int3   
   14000e1e8:	int3   
   14000e1e9:	int3   
   14000e1ea:	int3   
   14000e1eb:	int3   
   14000e1ec:	int3   
   14000e1ed:	int3   
   14000e1ee:	int3   
   14000e1ef:	int3   
   14000e1f0:	mov    rax,rsp
   14000e1f3:	mov    QWORD PTR [rax+0x10],rbx
   14000e1f7:	mov    QWORD PTR [rax+0x18],rsi
   14000e1fb:	mov    QWORD PTR [rax+0x20],rdi
   14000e1ff:	push   rbp
   14000e200:	lea    rbp,[rax-0xa8]
   14000e207:	sub    rsp,0x1a0
   14000e20e:	mov    rax,QWORD PTR [rip+0x3fdfb]        # 0x14004e010
   14000e215:	xor    rax,rsp
   14000e218:	mov    QWORD PTR [rbp+0x90],rax
   14000e21f:	mov    rdi,QWORD PTR [rcx+0x30]
   14000e223:	mov    rbx,rcx
   14000e226:	mov    eax,DWORD PTR [rdi+0x54]
   14000e229:	test   eax,eax
   14000e22b:	js     0x140029266
   14000e231:	xor    edi,edi
   14000e233:	call   0x14000e9d4
   14000e238:	test   rdi,rdi
   14000e23b:	jne    0x140029278
   14000e241:	mov    r9,QWORD PTR [rbx+0x30]
   14000e245:	mov    rdi,QWORD PTR [r9+0x28]
   14000e249:	cmp    DWORD PTR [rdi],0x5
   14000e24c:	ja     0x14000e27e
   14000e24e:	mov    rcx,rbx
   14000e251:	call   0x14000eb28
   14000e256:	mov    rcx,QWORD PTR [rbp+0x90]
   14000e25d:	xor    rcx,rsp
   14000e260:	call   0x1400141d0
   14000e265:	lea    r11,[rsp+0x1a0]
   14000e26d:	mov    rbx,QWORD PTR [r11+0x18]
   14000e271:	mov    rsi,QWORD PTR [r11+0x20]
   14000e275:	mov    rdi,QWORD PTR [r11+0x28]
   14000e279:	mov    rsp,r11
   14000e27c:	pop    rbp
   14000e27d:	ret    
   14000e27e:	movabs rdx,0x200000000000
   14000e288:	mov    rcx,rdi
   14000e28b:	call   0x14000130c
   14000e290:	test   al,al
   14000e292:	je     0x14000e24e
   14000e294:	mov    eax,DWORD PTR [r9+0x54]
   14000e298:	mov    esi,0x4
   14000e29d:	and    DWORD PTR [rsp+0x7c],0x0
   14000e2a2:	mov    DWORD PTR [rsp+0x34],eax
   14000e2a6:	lea    rax,[rsp+0x34]
   14000e2ab:	mov    QWORD PTR [rsp+0x70],rax
   14000e2b0:	mov    DWORD PTR [rsp+0x78],esi
   14000e2b4:	call   QWORD PTR [rip+0x2f03e]        # 0x14003d2f8
   14000e2ba:	and    DWORD PTR [rbp-0x74],0x0
   14000e2be:	lea    rdx,[rip+0x33f58]        # 0x14004221d
   14000e2c5:	mov    DWORD PTR [rsp+0x30],eax
   14000e2c9:	mov    rcx,rdi
   14000e2cc:	lea    rax,[rsp+0x30]
   14000e2d1:	mov    DWORD PTR [rbp-0x78],esi
   14000e2d4:	mov    QWORD PTR [rbp-0x80],rax
   14000e2d8:	lea    rax,[rsp+0x50]
   14000e2dd:	mov    QWORD PTR [rsp+0x28],rax
   14000e2e2:	mov    DWORD PTR [rsp+0x20],esi
   14000e2e6:	mov    r8,QWORD PTR [rbx+0x30]
   14000e2ea:	xor    r9d,r9d
   14000e2ed:	add    r8,0x8
   14000e2f1:	call   0x140001264
   14000e2f6:	jmp    0x14000e24e
   14000e2fb:	int3   
   14000e2fc:	int3   
   14000e2fd:	int3   
   14000e2fe:	int3   
   14000e2ff:	int3   
   14000e300:	int3   
   14000e301:	int3   
   14000e302:	int3   
   14000e303:	int3   
   14000e304:	mov    QWORD PTR [rsp+0x10],rbx
   14000e309:	push   rdi
   14000e30a:	sub    rsp,0x70
   14000e30e:	mov    rax,QWORD PTR [rip+0x3fcfb]        # 0x14004e010
   14000e315:	xor    rax,rsp
   14000e318:	mov    QWORD PTR [rsp+0x68],rax
   14000e31d:	mov    rbx,rcx
   14000e320:	call   0x14000ea14
   14000e325:	mov    rax,QWORD PTR [rbx+0x30]
   14000e329:	mov    rdi,QWORD PTR [rax+0x28]
   14000e32d:	cmp    DWORD PTR [rdi],0x5
   14000e330:	ja     0x14000e35c
   14000e332:	cmp    DWORD PTR [rbx+0x20],0x0
   14000e336:	jne    0x14000e341
   14000e338:	lea    rcx,[rbx+0x8]
   14000e33c:	call   0x14000ec2c
   14000e341:	mov    rcx,QWORD PTR [rsp+0x68]
   14000e346:	xor    rcx,rsp
   14000e349:	call   0x1400141d0
   14000e34e:	mov    rbx,QWORD PTR [rsp+0x88]
   14000e356:	add    rsp,0x70
   14000e35a:	pop    rdi
   14000e35b:	ret    
   14000e35c:	movabs rdx,0x200000000000
   14000e366:	mov    rcx,rdi
   14000e369:	call   0x14000130c
   14000e36e:	test   al,al
   14000e370:	je     0x14000e332
   14000e372:	call   QWORD PTR [rip+0x2ef80]        # 0x14003d2f8
   14000e378:	and    DWORD PTR [rsp+0x64],0x0
   14000e37d:	mov    DWORD PTR [rsp+0x30],eax
   14000e381:	lea    rax,[rsp+0x30]
   14000e386:	mov    QWORD PTR [rsp+0x58],rax
   14000e38b:	mov    DWORD PTR [rsp+0x60],0x4
   14000e393:	mov    rcx,rbx
   14000e396:	call   0x140013d68
   14000e39b:	mov    r8,QWORD PTR [rbx+0x30]
   14000e39f:	lea    rdx,[rip+0x33e3e]        # 0x1400421e4
   14000e3a6:	mov    r9,rax
   14000e3a9:	add    r8,0x8
   14000e3ad:	lea    rax,[rsp+0x38]
   14000e3b2:	mov    rcx,rdi
   14000e3b5:	mov    QWORD PTR [rsp+0x28],rax
   14000e3ba:	mov    DWORD PTR [rsp+0x20],0x3
   14000e3c2:	call   0x140001264
   14000e3c7:	jmp    0x14000e332
   14000e3cc:	int3   
   14000e3cd:	int3   
   14000e3ce:	int3   
   14000e3cf:	int3   
   14000e3d0:	int3   
   14000e3d1:	int3   
   14000e3d2:	int3   
   14000e3d3:	int3   
   14000e3d4:	rex push rbx
   14000e3d6:	sub    rsp,0x20
   14000e3da:	lea    rax,[rip+0x311d7]        # 0x14003f5b8
   14000e3e1:	mov    rbx,rcx
   14000e3e4:	mov    QWORD PTR [rcx],rax
   14000e3e7:	call   0x14000e988
   14000e3ec:	mov    rcx,rbx
   14000e3ef:	add    rsp,0x20
   14000e3f3:	pop    rbx
   14000e3f4:	jmp    0x14000ebec
   14000e3f9:	int3   
   14000e3fa:	int3   
   14000e3fb:	int3   
   14000e3fc:	int3   
   14000e3fd:	int3   
   14000e3fe:	int3   
   14000e3ff:	int3   
   14000e400:	mov    QWORD PTR [rsp+0x18],rbx
   14000e405:	mov    BYTE PTR [rsp+0x10],dl
   14000e409:	push   rdi
   14000e40a:	sub    rsp,0x30
   14000e40e:	mov    eax,DWORD PTR [rip+0x40b7c]        # 0x14004ef90
   14000e414:	mov    rbx,rcx
   14000e417:	test   al,0x1
   14000e419:	jne    0x14000e430
   14000e41b:	or     eax,0x1
   14000e41e:	lea    rcx,[rip+0x86fb]        # 0x140016b20
   14000e425:	mov    DWORD PTR [rip+0x40b65],eax        # 0x14004ef90
   14000e42b:	call   0x14001457c
   14000e430:	lea    rdi,[rip+0x40b61]        # 0x14004ef98
   14000e437:	xor    edx,edx
   14000e439:	mov    rcx,rdi
   14000e43c:	lea    r9,[rsp+0x40]
   14000e441:	lea    r8,[rsp+0x48]
   14000e446:	call   QWORD PTR [rip+0x2ef74]        # 0x14003d3c0
   14000e44c:	cmp    DWORD PTR [rsp+0x48],0x0
   14000e451:	je     0x14000e481
   14000e453:	and    DWORD PTR [rsp+0x28],0x0
   14000e458:	lea    rax,[rip+0x40b41]        # 0x14004efa0
   14000e45f:	mov    QWORD PTR [rsp+0x40],rax
   14000e464:	lea    rcx,[rsp+0x20]
   14000e469:	lea    rax,[rip+0x31128]        # 0x14003f598
   14000e470:	mov    QWORD PTR [rsp+0x20],rdi
   14000e475:	mov    QWORD PTR [rip+0x40b24],rax        # 0x14004efa0
   14000e47c:	call   0x14000ee0c
   14000e481:	mov    rdx,QWORD PTR [rsp+0x40]
   14000e486:	lea    r8,[rip+0x31143]        # 0x14003f5d0
   14000e48d:	mov    rcx,rbx
   14000e490:	mov    rdx,QWORD PTR [rdx+0x8]
   14000e494:	call   0x14000eb48
   14000e499:	lea    rax,[rip+0x31118]        # 0x14003f5b8
   14000e4a0:	mov    rcx,rbx
   14000e4a3:	mov    QWORD PTR [rbx],rax
   14000e4a6:	call   0x14000e304
   14000e4ab:	mov    rax,rbx
   14000e4ae:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e4b3:	add    rsp,0x30
   14000e4b7:	pop    rdi
   14000e4b8:	ret    
   14000e4b9:	int3   
   14000e4ba:	int3   
   14000e4bb:	int3   
   14000e4bc:	int3   
   14000e4bd:	int3   
   14000e4be:	int3   
   14000e4bf:	int3   
   14000e4c0:	mov    rax,rsp
   14000e4c3:	mov    QWORD PTR [rax+0x18],rbx
   14000e4c7:	mov    QWORD PTR [rax+0x20],rsi
   14000e4cb:	mov    BYTE PTR [rax+0x10],dl
   14000e4ce:	push   rbp
   14000e4cf:	push   rdi
   14000e4d0:	push   r12
   14000e4d2:	push   r14
   14000e4d4:	push   r15
   14000e4d6:	lea    rbp,[rax-0x138]
   14000e4dd:	sub    rsp,0x210
   14000e4e4:	mov    rax,QWORD PTR [rip+0x3fb25]        # 0x14004e010
   14000e4eb:	xor    rax,rsp
   14000e4ee:	mov    QWORD PTR [rbp+0x100],rax
   14000e4f5:	mov    al,BYTE PTR [rip+0x4067f]        # 0x14004eb7a
   14000e4fb:	xor    r12d,r12d
   14000e4fe:	mov    rdi,QWORD PTR [rcx+0x30]
   14000e502:	mov    rbx,rcx
   14000e505:	mov    r14d,DWORD PTR [rip+0x40abc]        # 0x14004efc8
   14000e50c:	mov    r15d,DWORD PTR [rip+0x4065d]        # 0x14004eb70
   14000e513:	mov    BYTE PTR [rsp+0x40],al
   14000e517:	mov    al,BYTE PTR [rip+0x4065b]        # 0x14004eb78
   14000e51d:	mov    BYTE PTR [rsp+0x38],al
   14000e521:	mov    al,BYTE PTR [rip+0x40654]        # 0x14004eb7b
   14000e527:	mov    BYTE PTR [rsp+0x30],al
   14000e52b:	mov    eax,DWORD PTR [rdi+0x54]
   14000e52e:	test   eax,eax
   14000e530:	js     0x1400293b6
   14000e536:	mov    rdi,r12
   14000e539:	call   0x14000e9d4
   14000e53e:	test   rdi,rdi
   14000e541:	jne    0x1400293c8
   14000e547:	mov    r9,QWORD PTR [rbx+0x30]
   14000e54b:	mov    rdi,QWORD PTR [r9+0x28]
   14000e54f:	cmp    DWORD PTR [rdi],0x5
   14000e552:	ja     0x14000e587
   14000e554:	mov    rcx,rbx
   14000e557:	call   0x14000eb28
   14000e55c:	mov    rcx,QWORD PTR [rbp+0x100]
   14000e563:	xor    rcx,rsp
   14000e566:	call   0x1400141d0
   14000e56b:	lea    r11,[rsp+0x210]
   14000e573:	mov    rbx,QWORD PTR [r11+0x40]
   14000e577:	mov    rsi,QWORD PTR [r11+0x48]
   14000e57b:	mov    rsp,r11
   14000e57e:	pop    r15
   14000e580:	pop    r14
   14000e582:	pop    r12
   14000e584:	pop    rdi
   14000e585:	pop    rbp
   14000e586:	ret    
   14000e587:	movabs rdx,0x200000000000
   14000e591:	mov    rcx,rdi
   14000e594:	call   0x14000130c
   14000e599:	test   al,al
   14000e59b:	je     0x14000e554
   14000e59d:	mov    eax,DWORD PTR [r9+0x54]
   14000e5a1:	mov    DWORD PTR [rsp+0x48],eax
   14000e5a5:	lea    rax,[rsp+0x48]
   14000e5aa:	mov    QWORD PTR [rbp-0x60],rax
   14000e5ae:	mov    QWORD PTR [rbp-0x58],0x4
   14000e5b6:	call   QWORD PTR [rip+0x2ed3c]        # 0x14003d2f8
   14000e5bc:	mov    DWORD PTR [rsp+0x54],eax
   14000e5c0:	lea    rax,[rsp+0x54]
   14000e5c5:	mov    QWORD PTR [rbp-0x50],rax
   14000e5c9:	mov    QWORD PTR [rbp-0x48],0x4
   14000e5d1:	call   0x140001334
   14000e5d6:	lea    rcx,[rsp+0x30]
   14000e5db:	lea    rdx,[rip+0x337c9]        # 0x140041dab
   14000e5e2:	movups xmm0,XMMWORD PTR [rax]
   14000e5e5:	mov    QWORD PTR [rbp-0x20],rcx
   14000e5e9:	lea    rax,[rsp+0x68]
   14000e5ee:	mov    QWORD PTR [rbp-0x40],rax
   14000e5f2:	lea    rcx,[rsp+0x38]
   14000e5f7:	mov    QWORD PTR [rbp-0x10],rcx
   14000e5fb:	lea    rax,[rbp+0x148]
   14000e602:	mov    QWORD PTR [rbp-0x30],rax
   14000e606:	lea    rcx,[rsp+0x40]
   14000e60b:	lea    rax,[rsp+0x4c]
   14000e610:	mov    QWORD PTR [rbp+0x0],rcx
   14000e614:	mov    QWORD PTR [rbp+0x20],rax
   14000e618:	lea    rcx,[rbp+0x168]
   14000e61f:	lea    rax,[rsp+0x50]
   14000e624:	mov    QWORD PTR [rbp+0x10],rcx
   14000e628:	mov    QWORD PTR [rbp+0x30],rax
   14000e62c:	mov    rcx,rdi
   14000e62f:	lea    rax,[rbp-0x80]
   14000e633:	mov    QWORD PTR [rbp-0x38],0x10
   14000e63b:	mov    QWORD PTR [rsp+0x28],rax
   14000e640:	mov    DWORD PTR [rsp+0x20],0xc
   14000e648:	movdqu XMMWORD PTR [rsp+0x68],xmm0
   14000e64e:	mov    QWORD PTR [rbp-0x28],0x1
   14000e656:	mov    QWORD PTR [rbp-0x18],0x1
   14000e65e:	mov    QWORD PTR [rbp-0x8],0x1
   14000e666:	mov    QWORD PTR [rbp+0x8],0x1
   14000e66e:	mov    QWORD PTR [rbp+0x18],0x1
   14000e676:	mov    DWORD PTR [rsp+0x4c],r15d
   14000e67b:	mov    QWORD PTR [rbp+0x28],0x4
   14000e683:	mov    DWORD PTR [rsp+0x50],r14d
   14000e688:	mov    QWORD PTR [rbp+0x38],0x4
   14000e690:	mov    r8,QWORD PTR [rbx+0x30]
   14000e694:	xor    r9d,r9d
   14000e697:	add    r8,0x8
   14000e69b:	call   0x140001264
   14000e6a0:	jmp    0x14000e554
   14000e6a5:	int3   
   14000e6a6:	int3   
   14000e6a7:	int3   
   14000e6a8:	int3   
   14000e6a9:	int3   
   14000e6aa:	int3   
   14000e6ab:	int3   
   14000e6ac:	mov    rax,rsp
   14000e6af:	mov    BYTE PTR [rax+0x20],r9b
   14000e6b3:	mov    BYTE PTR [rax+0x18],r8b
   14000e6b7:	mov    BYTE PTR [rax+0x10],dl
   14000e6ba:	push   rbp
   14000e6bb:	push   rbx
   14000e6bc:	push   rdi
   14000e6bd:	lea    rbp,[rax-0x5f]
   14000e6c1:	sub    rsp,0xd0
   14000e6c8:	mov    rax,QWORD PTR [rip+0x3f941]        # 0x14004e010
   14000e6cf:	xor    rax,rsp
   14000e6d2:	mov    QWORD PTR [rbp+0x37],rax
   14000e6d6:	mov    rbx,rcx
   14000e6d9:	call   0x14000ea14
   14000e6de:	mov    rax,QWORD PTR [rbx+0x30]
   14000e6e2:	mov    rdi,QWORD PTR [rax+0x28]
   14000e6e6:	cmp    DWORD PTR [rdi],0x5
   14000e6e9:	ja     0x14000e711
   14000e6eb:	cmp    DWORD PTR [rbx+0x20],0x0
   14000e6ef:	jne    0x14000e6fa
   14000e6f1:	lea    rcx,[rbx+0x8]
   14000e6f5:	call   0x14000ec2c
   14000e6fa:	mov    rcx,QWORD PTR [rbp+0x37]
   14000e6fe:	xor    rcx,rsp
   14000e701:	call   0x1400141d0
   14000e706:	add    rsp,0xd0
   14000e70d:	pop    rdi
   14000e70e:	pop    rbx
   14000e70f:	pop    rbp
   14000e710:	ret    
   14000e711:	movabs rdx,0x200000000000
   14000e71b:	mov    rcx,rdi
   14000e71e:	call   0x14000130c
   14000e723:	test   al,al
   14000e725:	je     0x14000e6eb
   14000e727:	call   QWORD PTR [rip+0x2ebcb]        # 0x14003d2f8
   14000e72d:	and    DWORD PTR [rbp-0xd],0x0
   14000e731:	mov    DWORD PTR [rbp-0x59],eax
   14000e734:	lea    rax,[rbp-0x59]
   14000e738:	mov    QWORD PTR [rbp-0x19],rax
   14000e73c:	mov    DWORD PTR [rbp-0x11],0x4
   14000e743:	call   0x140001334
   14000e748:	mov    ecx,0x1
   14000e74d:	movups xmm0,XMMWORD PTR [rax]
   14000e750:	and    DWORD PTR [rbp+0x3],0x0
   14000e754:	lea    rax,[rbp-0x51]
   14000e758:	and    DWORD PTR [rbp+0x13],0x0
   14000e75c:	and    DWORD PTR [rbp+0x23],0x0
   14000e760:	and    DWORD PTR [rbp+0x33],0x0
   14000e764:	mov    QWORD PTR [rbp-0x9],rax
   14000e768:	lea    rax,[rbp+0x6f]
   14000e76c:	mov    QWORD PTR [rbp+0x7],rax
   14000e770:	lea    rax,[rbp+0x77]
   14000e774:	mov    QWORD PTR [rbp+0x17],rax
   14000e778:	lea    rax,[rbp+0x7f]
   14000e77c:	mov    QWORD PTR [rbp+0x27],rax
   14000e780:	movdqu XMMWORD PTR [rbp-0x51],xmm0
   14000e785:	mov    DWORD PTR [rbp-0x1],0x10
   14000e78c:	mov    DWORD PTR [rbp+0xf],ecx
   14000e78f:	mov    DWORD PTR [rbp+0x1f],ecx
   14000e792:	mov    DWORD PTR [rbp+0x2f],ecx
   14000e795:	mov    rcx,rbx
   14000e798:	call   0x140013d68
   14000e79d:	mov    r8,QWORD PTR [rbx+0x30]
   14000e7a1:	lea    rdx,[rip+0x3385c]        # 0x140042004
   14000e7a8:	mov    r9,rax
   14000e7ab:	add    r8,0x8
   14000e7af:	lea    rax,[rbp-0x39]
   14000e7b3:	mov    rcx,rdi
   14000e7b6:	mov    QWORD PTR [rsp+0x28],rax
   14000e7bb:	mov    DWORD PTR [rsp+0x20],0x7
   14000e7c3:	call   0x140001264
   14000e7c8:	jmp    0x14000e6eb
   14000e7cd:	int3   
   14000e7ce:	int3   
   14000e7cf:	int3   
   14000e7d0:	int3   
   14000e7d1:	int3   
   14000e7d2:	int3   
   14000e7d3:	int3   
   14000e7d4:	rex push rbx
   14000e7d6:	sub    rsp,0x20
   14000e7da:	lea    rax,[rip+0x30d77]        # 0x14003f558
   14000e7e1:	mov    rbx,rcx
   14000e7e4:	mov    QWORD PTR [rcx],rax
   14000e7e7:	call   0x14000e988
   14000e7ec:	mov    rcx,rbx
   14000e7ef:	add    rsp,0x20
   14000e7f3:	pop    rbx
   14000e7f4:	jmp    0x14000ebec
   14000e7f9:	int3   
   14000e7fa:	int3   
   14000e7fb:	int3   
   14000e7fc:	int3   
   14000e7fd:	int3   
   14000e7fe:	int3   
   14000e7ff:	int3   
   14000e800:	mov    QWORD PTR [rsp+0x18],rbx
   14000e805:	mov    BYTE PTR [rsp+0x10],dl
   14000e809:	push   rbp
   14000e80a:	push   rsi
   14000e80b:	push   rdi
   14000e80c:	sub    rsp,0x30
   14000e810:	mov    eax,DWORD PTR [rip+0x4077a]        # 0x14004ef90
   14000e816:	mov    rdi,r9
   14000e819:	mov    rsi,r8
   14000e81c:	mov    rbx,rcx
   14000e81f:	test   al,0x1
   14000e821:	jne    0x14000e838
   14000e823:	or     eax,0x1
   14000e826:	lea    rcx,[rip+0x82f3]        # 0x140016b20
   14000e82d:	mov    DWORD PTR [rip+0x4075d],eax        # 0x14004ef90
   14000e833:	call   0x14001457c
   14000e838:	lea    rbp,[rip+0x40759]        # 0x14004ef98
   14000e83f:	xor    edx,edx
   14000e841:	mov    rcx,rbp
   14000e844:	lea    r9,[rsp+0x50]
   14000e849:	lea    r8,[rsp+0x58]
   14000e84e:	call   QWORD PTR [rip+0x2eb6c]        # 0x14003d3c0
   14000e854:	cmp    DWORD PTR [rsp+0x58],0x0
   14000e859:	je     0x14000e889
   14000e85b:	and    DWORD PTR [rsp+0x28],0x0
   14000e860:	lea    rax,[rip+0x40739]        # 0x14004efa0
   14000e867:	mov    QWORD PTR [rsp+0x50],rax
   14000e86c:	lea    rcx,[rsp+0x20]
   14000e871:	lea    rax,[rip+0x30d20]        # 0x14003f598
   14000e878:	mov    QWORD PTR [rsp+0x20],rbp
   14000e87d:	mov    QWORD PTR [rip+0x4071c],rax        # 0x14004efa0
   14000e884:	call   0x14000ee0c
   14000e889:	mov    rdx,QWORD PTR [rsp+0x50]
   14000e88e:	lea    r8,[rip+0x30cdb]        # 0x14003f570
   14000e895:	mov    rcx,rbx
   14000e898:	mov    rdx,QWORD PTR [rdx+0x8]
   14000e89c:	call   0x14000eb48
   14000e8a1:	lea    rax,[rip+0x30cb0]        # 0x14003f558
   14000e8a8:	mov    rcx,rbx
   14000e8ab:	mov    QWORD PTR [rbx],rax
   14000e8ae:	mov    rax,QWORD PTR [rsp+0x70]
   14000e8b3:	mov    r8b,BYTE PTR [rdi]
   14000e8b6:	mov    dl,BYTE PTR [rsi]
   14000e8b8:	mov    r9b,BYTE PTR [rax]
   14000e8bb:	call   0x14000e6ac
   14000e8c0:	mov    rax,rbx
   14000e8c3:	mov    rbx,QWORD PTR [rsp+0x60]
   14000e8c8:	add    rsp,0x30
   14000e8cc:	pop    rdi
   14000e8cd:	pop    rsi
   14000e8ce:	pop    rbp
   14000e8cf:	ret    
   14000e8d0:	int3   
   14000e8d1:	int3   
   14000e8d2:	int3   
   14000e8d3:	int3   
   14000e8d4:	int3   
   14000e8d5:	int3   
   14000e8d6:	int3   
   14000e8d7:	int3   
   14000e8d8:	mov    QWORD PTR [rsp+0x10],rbx
   14000e8dd:	push   rdi
   14000e8de:	sub    rsp,0x20
   14000e8e2:	mov    rax,QWORD PTR [rcx]
   14000e8e5:	mov    rbx,rcx
   14000e8e8:	mov    rdi,QWORD PTR [rax+0x8]
   14000e8ec:	lea    rax,[rip+0xfffffffffffff8fd]        # 0x14000e1f0
   14000e8f3:	cmp    rdi,rax
   14000e8f6:	jne    0x1400295d8
   14000e8fc:	call   0x14000e1f0
   14000e901:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e906:	add    rsp,0x20
   14000e90a:	pop    rdi
   14000e90b:	ret    
   14000e90c:	int3   
   14000e90d:	int3   
   14000e90e:	int3   
   14000e90f:	int3   
   14000e910:	int3   
   14000e911:	int3   
   14000e912:	int3   
   14000e913:	int3   
   14000e914:	mov    QWORD PTR [rsp+0x18],rbx
   14000e919:	push   rdi
   14000e91a:	sub    rsp,0x20
   14000e91e:	and    DWORD PTR [rsp+0x30],0x0
   14000e923:	mov    rdi,rdx
   14000e926:	cmp    QWORD PTR [rcx+0x138],0x0
   14000e92e:	jne    0x1400295ec
   14000e934:	and    QWORD PTR [rsp+0x30],0x0
   14000e93a:	lea    rcx,[rsp+0x30]
   14000e93f:	mov    ebx,0x2
   14000e944:	mov    rax,QWORD PTR [rcx]
   14000e947:	and    QWORD PTR [rcx],0x0
   14000e94b:	mov    QWORD PTR [rdi],rax
   14000e94e:	test   bl,0x2
   14000e951:	je     0x14000e960
   14000e953:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e958:	and    ebx,0xfffffffd
   14000e95b:	test   rcx,rcx
   14000e95e:	jne    0x14000e977
   14000e960:	test   bl,0x1
   14000e963:	jne    0x140029617
   14000e969:	mov    rax,rdi
   14000e96c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e971:	add    rsp,0x20
   14000e975:	pop    rdi
   14000e976:	ret    
   14000e977:	call   QWORD PTR [rip+0x2ea13]        # 0x14003d390
   14000e97d:	jmp    0x14000e960
   14000e97f:	int3   
   14000e980:	int3   
   14000e981:	int3   
   14000e982:	int3   
   14000e983:	int3   
   14000e984:	int3   
   14000e985:	int3   
   14000e986:	int3   
   14000e987:	int3   
   14000e988:	mov    QWORD PTR [rsp+0x10],rbx
   14000e98d:	mov    QWORD PTR [rsp+0x18],rsi
   14000e992:	push   rdi
   14000e993:	sub    rsp,0x20
   14000e997:	lea    rdi,[rcx+0x138]
   14000e99e:	mov    rbx,rcx
   14000e9a1:	cmp    QWORD PTR [rdi],0x0
   14000e9a5:	mov    sil,0x1
   14000e9a8:	jne    0x140029632
   14000e9ae:	mov    rcx,QWORD PTR [rbx+0x30]
   14000e9b2:	cmp    DWORD PTR [rcx],0x1
   14000e9b5:	je     0x140029672
   14000e9bb:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e9c0:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e9c5:	add    rsp,0x20
   14000e9c9:	pop    rdi
   14000e9ca:	ret    
   14000e9cb:	int3   
   14000e9cc:	int3   
   14000e9cd:	int3   
   14000e9ce:	int3   
   14000e9cf:	int3   
   14000e9d0:	int3   
   14000e9d1:	int3   
   14000e9d2:	int3   
   14000e9d3:	int3   
   14000e9d4:	rex push rbx
   14000e9d6:	sub    rsp,0x20
   14000e9da:	lea    rdx,[rsp+0x30]
   14000e9df:	mov    rbx,rcx
   14000e9e2:	call   0x14000e914
   14000e9e7:	mov    rax,QWORD PTR [rbx+0x30]
   14000e9eb:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e9f0:	mov    DWORD PTR [rax],0x2
   14000e9f6:	test   rcx,rcx
   14000e9f9:	jne    0x14000ea01
   14000e9fb:	add    rsp,0x20
   14000e9ff:	pop    rbx
   14000ea00:	ret    
   14000ea01:	add    rsp,0x20
   14000ea05:	pop    rbx
   14000ea06:	rex.W jmp QWORD PTR [rip+0x2e983]        # 0x14003d390
   14000ea0d:	int3   
   14000ea0e:	int3   
   14000ea0f:	int3   
   14000ea10:	int3   
   14000ea11:	int3   
   14000ea12:	int3   
   14000ea13:	int3   
   14000ea14:	rex push rbx
   14000ea16:	sub    rsp,0x20
   14000ea1a:	lea    rdx,[rsp+0x30]
   14000ea1f:	mov    rbx,rcx
   14000ea22:	call   0x14000e914
   14000ea27:	mov    rbx,QWORD PTR [rbx+0x30]
   14000ea2b:	mov    rcx,QWORD PTR [rbx+0x28]
   14000ea2f:	cmp    DWORD PTR [rcx],0x5
   14000ea32:	ja     0x14000ea50
   14000ea34:	xor    eax,eax
   14000ea36:	mov    QWORD PTR [rbx+0x8],rax
   14000ea3a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ea3f:	mov    DWORD PTR [rbx],0x1
   14000ea45:	test   rcx,rcx
   14000ea48:	jne    0x14000ea74
   14000ea4a:	add    rsp,0x20
   14000ea4e:	pop    rbx
   14000ea4f:	ret    
   14000ea50:	movabs rdx,0x200000000000
   14000ea5a:	call   0x14000130c
   14000ea5f:	test   al,al
   14000ea61:	je     0x14000ea34
   14000ea63:	lea    rdx,[rbx+0x8]
   14000ea67:	mov    ecx,0x3
   14000ea6c:	call   QWORD PTR [rip+0x2ec7e]        # 0x14003d6f0
   14000ea72:	jmp    0x14000ea3a
   14000ea74:	add    rsp,0x20
   14000ea78:	pop    rbx
   14000ea79:	rex.W jmp QWORD PTR [rip+0x2e910]        # 0x14003d390
   14000ea80:	int3   
   14000ea81:	int3   
   14000ea82:	int3   
   14000ea83:	int3   
   14000ea84:	int3   
   14000ea85:	int3   
   14000ea86:	int3   
   14000ea87:	int3   
   14000ea88:	mov    rax,rsp
   14000ea8b:	mov    QWORD PTR [rax+0x10],rbx
   14000ea8f:	mov    QWORD PTR [rax+0x18],rsi
   14000ea93:	mov    QWORD PTR [rax+0x20],rdi
   14000ea97:	push   rbp
   14000ea98:	lea    rbp,[rax-0x5f]
   14000ea9c:	sub    rsp,0x90
   14000eaa3:	mov    rax,QWORD PTR [rip+0x3f566]        # 0x14004e010
   14000eaaa:	xor    rax,rsp
   14000eaad:	mov    QWORD PTR [rbp+0x47],rax
   14000eab1:	mov    esi,edx
   14000eab3:	mov    rbx,rcx
   14000eab6:	lea    rdx,[rbp-0x1]
   14000eaba:	call   0x14000e914
   14000eabf:	mov    rcx,QWORD PTR [rbx+0x30]
   14000eac3:	lea    r8,[rbp-0x9]
   14000eac7:	mov    edx,esi
   14000eac9:	call   0x14000e150
   14000eace:	mov    rcx,QWORD PTR [rbp-0x1]
   14000ead2:	mov    dil,al
   14000ead5:	test   rcx,rcx
   14000ead8:	jne    0x14000eb18
   14000eada:	test   dil,dil
   14000eadd:	je     0x140029698
   14000eae3:	mov    rcx,rbx
   14000eae6:	call   0x14000e8d8
   14000eaeb:	mov    rcx,rbx
   14000eaee:	call   0x14000eb28
   14000eaf3:	mov    rcx,QWORD PTR [rbp+0x47]
   14000eaf7:	xor    rcx,rsp
   14000eafa:	call   0x1400141d0
   14000eaff:	lea    r11,[rsp+0x90]
   14000eb07:	mov    rbx,QWORD PTR [r11+0x18]
   14000eb0b:	mov    rsi,QWORD PTR [r11+0x20]
   14000eb0f:	mov    rdi,QWORD PTR [r11+0x28]
   14000eb13:	mov    rsp,r11
   14000eb16:	pop    rbp
   14000eb17:	ret    
   14000eb18:	call   QWORD PTR [rip+0x2e872]        # 0x14003d390
   14000eb1e:	jmp    0x14000eada
   14000eb20:	int3   
   14000eb21:	int3   
   14000eb22:	int3   
   14000eb23:	int3   
   14000eb24:	int3   
   14000eb25:	int3   
   14000eb26:	int3   
   14000eb27:	int3   
   14000eb28:	sub    rsp,0x28
   14000eb2c:	cmp    DWORD PTR [rcx+0x20],0x0
   14000eb30:	je     0x14000eb3b
   14000eb32:	add    rcx,0x8
   14000eb36:	call   0x14000ec74
   14000eb3b:	add    rsp,0x28
   14000eb3f:	ret    
   14000eb40:	int3   
   14000eb41:	int3   
   14000eb42:	int3   
   14000eb43:	int3   
   14000eb44:	int3   
   14000eb45:	int3   
   14000eb46:	int3   
   14000eb47:	int3   
   14000eb48:	mov    QWORD PTR [rsp+0x8],rbx
   14000eb4d:	mov    QWORD PTR [rsp+0x10],rsi
   14000eb52:	push   rdi
   14000eb53:	sub    rsp,0x20
   14000eb57:	xor    esi,esi
   14000eb59:	lea    rbx,[rcx+0x38]
   14000eb5d:	lea    rax,[rip+0x309dc]        # 0x14003f540
   14000eb64:	mov    rdi,rcx
   14000eb67:	mov    QWORD PTR [rcx],rax
   14000eb6a:	lea    rax,[rcx+0x68]
   14000eb6e:	mov    QWORD PTR [rcx+0x28],rax
   14000eb72:	mov    QWORD PTR [rcx+0x8],rsi
   14000eb76:	mov    QWORD PTR [rcx+0x10],rcx
   14000eb7a:	mov    QWORD PTR [rcx+0x18],rsi
   14000eb7e:	mov    DWORD PTR [rcx+0x20],esi
   14000eb81:	mov    QWORD PTR [rcx+0x30],rbx
   14000eb85:	lea    rcx,[rbx+0x58]
   14000eb89:	mov    QWORD PTR [rbx+0x28],rdx
   14000eb8d:	xor    edx,edx
   14000eb8f:	mov    DWORD PTR [rbx],esi
   14000eb91:	mov    BYTE PTR [rbx+0x4],sil
   14000eb95:	mov    QWORD PTR [rbx+0x38],r8
   14000eb99:	mov    r8d,0x90
   14000eb9f:	mov    BYTE PTR [rbx+0x48],sil
   14000eba3:	mov    DWORD PTR [rbx+0x30],esi
   14000eba6:	mov    QWORD PTR [rbx+0x40],rsi
   14000ebaa:	mov    QWORD PTR [rbx+0x50],0x1
   14000ebb2:	mov    QWORD PTR [rcx+0x90],rsi
   14000ebb9:	mov    QWORD PTR [rcx+0x98],rsi
   14000ebc0:	call   0x140014694
   14000ebc5:	mov    QWORD PTR [rbx+0xf8],rsi
   14000ebcc:	mov    rax,rdi
   14000ebcf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ebd4:	mov    QWORD PTR [rdi+0x138],rsi
   14000ebdb:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ebe0:	add    rsp,0x20
   14000ebe4:	pop    rdi
   14000ebe5:	ret    
   14000ebe6:	int3   
   14000ebe7:	int3   
   14000ebe8:	int3   
   14000ebe9:	int3   
   14000ebea:	int3   
   14000ebeb:	int3   
   14000ebec:	rex push rbx
   14000ebee:	sub    rsp,0x20
   14000ebf2:	mov    rbx,rcx
   14000ebf5:	add    rcx,0x138
   14000ebfc:	call   0x14000f028
   14000ec01:	lea    rcx,[rbx+0x38]
   14000ec05:	call   0x14000e110
   14000ec0a:	lea    rcx,[rbx+0x8]
   14000ec0e:	cmp    DWORD PTR [rcx+0x18],0x0
   14000ec12:	jne    0x14000ec1a
   14000ec14:	add    rsp,0x20
   14000ec18:	pop    rbx
   14000ec19:	ret    
   14000ec1a:	add    rsp,0x20
   14000ec1e:	pop    rbx
   14000ec1f:	jmp    0x14000ec74
   14000ec24:	int3   
   14000ec25:	int3   
   14000ec26:	int3   
   14000ec27:	int3   
   14000ec28:	int3   
   14000ec29:	int3   
   14000ec2a:	int3   
   14000ec2b:	int3   
   14000ec2c:	rex push rbx
   14000ec2e:	sub    rsp,0x20
   14000ec32:	cmp    DWORD PTR [rcx+0x18],0x0
   14000ec36:	mov    rbx,rcx
   14000ec39:	jne    0x14000ec63
   14000ec3b:	mov    dl,0x1
   14000ec3d:	call   0x14000ecc8
   14000ec42:	mov    QWORD PTR [rbx],rax
   14000ec45:	test   rax,rax
   14000ec48:	je     0x14000ec5d
   14000ec4a:	mov    rcx,QWORD PTR [rax]
   14000ec4d:	mov    QWORD PTR [rbx+0x10],rcx
   14000ec51:	mov    QWORD PTR [rax],rbx
   14000ec54:	call   QWORD PTR [rip+0x2e69e]        # 0x14003d2f8
   14000ec5a:	mov    DWORD PTR [rbx+0x18],eax
   14000ec5d:	add    rsp,0x20
   14000ec61:	pop    rbx
   14000ec62:	ret    
   14000ec63:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ec68:	call   0x14002b618
   14000ec6d:	int3   
   14000ec6e:	int3   
   14000ec6f:	int3   
   14000ec70:	int3   
   14000ec71:	int3   
   14000ec72:	int3   
   14000ec73:	int3   
   14000ec74:	rex push rbx
   14000ec76:	sub    rsp,0x20
   14000ec7a:	mov    rbx,rcx
   14000ec7d:	call   QWORD PTR [rip+0x2e675]        # 0x14003d2f8
   14000ec83:	cmp    DWORD PTR [rbx+0x18],eax
   14000ec86:	jne    0x140029706
   14000ec8c:	mov    rax,QWORD PTR [rbx]
   14000ec8f:	xor    edx,edx
   14000ec91:	mov    DWORD PTR [rbx+0x18],edx
   14000ec94:	cmp    QWORD PTR [rax],rdx
   14000ec97:	je     0x14000ecae
   14000ec99:	mov    rax,QWORD PTR [rbx]
   14000ec9c:	mov    rax,QWORD PTR [rax]
   14000ec9f:	cmp    rax,rbx
   14000eca2:	jne    0x14000ecb7
   14000eca4:	mov    rcx,QWORD PTR [rbx]
   14000eca7:	mov    rax,QWORD PTR [rbx+0x10]
   14000ecab:	mov    QWORD PTR [rcx],rax
   14000ecae:	mov    QWORD PTR [rbx],rdx
   14000ecb1:	add    rsp,0x20
   14000ecb5:	pop    rbx
   14000ecb6:	ret    
   14000ecb7:	add    rax,0x10
   14000ecbb:	mov    QWORD PTR [rbx],rax
   14000ecbe:	jmp    0x14000ec94
   14000ecc0:	int3   
   14000ecc1:	int3   
   14000ecc2:	int3   
   14000ecc3:	int3   
   14000ecc4:	int3   
   14000ecc5:	int3   
   14000ecc6:	int3   
   14000ecc7:	int3   
   14000ecc8:	mov    QWORD PTR [rsp+0x8],rbx
   14000eccd:	mov    QWORD PTR [rsp+0x10],rsi
   14000ecd2:	mov    QWORD PTR [rsp+0x18],rdi
   14000ecd7:	push   r14
   14000ecd9:	sub    rsp,0x20
   14000ecdd:	mov    sil,dl
   14000ece0:	call   QWORD PTR [rip+0x2e612]        # 0x14003d2f8
   14000ece6:	mov    ebx,eax
   14000ece8:	lea    r14,[rip+0x402e1]        # 0x14004efd0
   14000ecef:	mov    edi,eax
   14000ecf1:	movabs rax,0xcccccccccccccccd
   14000ecfb:	mul    rdi
   14000ecfe:	shr    rdx,0x4
   14000ed02:	lea    rcx,[rdx+rdx*4]
   14000ed06:	shl    rcx,0x2
   14000ed0a:	sub    rbx,rcx
   14000ed0d:	mov    rax,QWORD PTR [r14+rbx*8]
   14000ed11:	test   rax,rax
   14000ed14:	jne    0x14000ed66
   14000ed16:	test   sil,sil
   14000ed19:	je     0x14000ed71
   14000ed1b:	lea    ecx,[rax+0x18]
   14000ed1e:	call   QWORD PTR [rip+0x2e92c]        # 0x14003d650
   14000ed24:	mov    rcx,rax
   14000ed27:	test   rax,rax
   14000ed2a:	je     0x14000ed71
   14000ed2c:	xor    eax,eax
   14000ed2e:	mov    QWORD PTR [rcx],rax
   14000ed31:	and    QWORD PTR [rcx+0x10],rax
   14000ed35:	mov    DWORD PTR [rcx+0x8],edi
   14000ed38:	prefetchw BYTE PTR [r14+rbx*8]
   14000ed3d:	mov    rax,QWORD PTR [r14+rbx*8]
   14000ed41:	mov    QWORD PTR [rcx+0x10],rax
   14000ed45:	lock cmpxchg QWORD PTR [r14+rbx*8],rcx
   14000ed4b:	jne    0x14000ed3d
   14000ed4d:	mov    rax,rcx
   14000ed50:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ed55:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ed5a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000ed5f:	add    rsp,0x20
   14000ed63:	pop    r14
   14000ed65:	ret    
   14000ed66:	cmp    DWORD PTR [rax+0x8],edi
   14000ed69:	je     0x14000ed50
   14000ed6b:	mov    rax,QWORD PTR [rax+0x10]
   14000ed6f:	jmp    0x14000ed11
   14000ed71:	xor    eax,eax
   14000ed73:	jmp    0x14000ed50
   14000ed75:	int3   
   14000ed76:	int3   
   14000ed77:	int3   
   14000ed78:	int3   
   14000ed79:	int3   
   14000ed7a:	int3   
   14000ed7b:	int3   
   14000ed7c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ed81:	push   rdi
   14000ed82:	sub    rsp,0x20
   14000ed86:	lea    rbx,[rip+0x40243]        # 0x14004efd0
   14000ed8d:	mov    rdi,QWORD PTR [rbx]
   14000ed90:	jmp    0x14000ed9f
   14000ed92:	mov    rcx,rdi
   14000ed95:	mov    rdi,QWORD PTR [rdi+0x10]
   14000ed99:	call   QWORD PTR [rip+0x2e8a9]        # 0x14003d648
   14000ed9f:	test   rdi,rdi
   14000eda2:	jne    0x14000ed92
   14000eda4:	mov    QWORD PTR [rbx],rdi
   14000eda7:	lea    rax,[rip+0x402c2]        # 0x14004f070
   14000edae:	add    rbx,0x8
   14000edb2:	cmp    rbx,rax
   14000edb5:	jne    0x14000ed8d
   14000edb7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000edbc:	add    rsp,0x20
   14000edc0:	pop    rdi
   14000edc1:	ret    
   14000edc2:	int3   
   14000edc3:	int3   
   14000edc4:	int3   
   14000edc5:	int3   
   14000edc6:	int3   
   14000edc7:	int3   
   14000edc8:	mov    QWORD PTR [rsp+0x8],rcx
   14000edcd:	sub    rsp,0x28
   14000edd1:	lea    r9,[rsp+0x38]
   14000edd6:	xor    edx,edx
   14000edd8:	lea    r8,[rsp+0x30]
   14000eddd:	lea    rcx,[rip+0x401b4]        # 0x14004ef98
   14000ede4:	call   QWORD PTR [rip+0x2e5d6]        # 0x14003d3c0
   14000edea:	test   eax,eax
   14000edec:	je     0x14000ee01
   14000edee:	cmp    DWORD PTR [rsp+0x30],0x0
   14000edf3:	jne    0x14000ee01
   14000edf5:	mov    rcx,QWORD PTR [rsp+0x38]
   14000edfa:	xor    edx,edx
   14000edfc:	call   0x14000ee80
   14000ee01:	add    rsp,0x28
   14000ee05:	ret    
   14000ee06:	int3   
   14000ee07:	int3   
   14000ee08:	int3   
   14000ee09:	int3   
   14000ee0a:	int3   
   14000ee0b:	int3   
   14000ee0c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ee11:	mov    QWORD PTR [rsp+0x10],rsi
   14000ee16:	push   rdi
   14000ee17:	sub    rsp,0x20
   14000ee1b:	cmp    DWORD PTR [rcx+0x8],0x0
   14000ee1f:	mov    rsi,rcx
   14000ee22:	jne    0x14000ee56
   14000ee24:	mov    rdi,QWORD PTR [rcx]
   14000ee27:	call   0x14000eeb4
   14000ee2c:	mov    rdx,QWORD PTR [rax+0x8]
   14000ee30:	mov    rax,QWORD PTR [rdi+0x8]
   14000ee34:	mov    QWORD PTR [rdi+0x10],rdx
   14000ee38:	mov    BYTE PTR [rdi+0x18],0x0
   14000ee3c:	mov    DWORD PTR [rdi+0x1c],0x1
   14000ee43:	mov    rbx,QWORD PTR [rax+0x8]
   14000ee47:	mov    rcx,rbx
   14000ee4a:	call   QWORD PTR [rip+0x2e8d8]        # 0x14003d728
   14000ee50:	lea    rcx,[rdi+0x8]
   14000ee54:	call   rbx
   14000ee56:	mov    rcx,QWORD PTR [rsi]
   14000ee59:	mov    edx,DWORD PTR [rsi+0x8]
   14000ee5c:	lea    r8,[rcx+0x8]
   14000ee60:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ee65:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ee6a:	add    rsp,0x20
   14000ee6e:	pop    rdi
   14000ee6f:	rex.W jmp QWORD PTR [rip+0x2e522]        # 0x14003d398
   14000ee76:	int3   
   14000ee77:	int3   
   14000ee78:	int3   
   14000ee79:	int3   
   14000ee7a:	int3   
   14000ee7b:	int3   
   14000ee7c:	int3   
   14000ee7d:	int3   
   14000ee7e:	int3   
   14000ee7f:	int3   
   14000ee80:	mov    QWORD PTR [rsp+0x8],rbx
   14000ee85:	push   rdi
   14000ee86:	sub    rsp,0x20
   14000ee8a:	mov    ebx,edx
   14000ee8c:	mov    rdi,rcx
   14000ee8f:	call   0x14000f054
   14000ee94:	test   bl,0x1
   14000ee97:	jne    0x14002971c
   14000ee9d:	mov    rax,rdi
   14000eea0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000eea5:	add    rsp,0x20
   14000eea9:	pop    rdi
   14000eeaa:	ret    
   14000eeab:	int3   
   14000eeac:	int3   
   14000eead:	int3   
   14000eeae:	int3   
   14000eeaf:	int3   
   14000eeb0:	int3   
   14000eeb1:	int3   
   14000eeb2:	int3   
   14000eeb3:	int3   
   14000eeb4:	rex push rbx
   14000eeb6:	sub    rsp,0x30
   14000eeba:	mov    eax,DWORD PTR [rip+0x400a0]        # 0x14004ef60
   14000eec0:	test   al,0x1
   14000eec2:	jne    0x14000eed9
   14000eec4:	or     eax,0x1
   14000eec7:	lea    rcx,[rip+0x7c62]        # 0x140016b30
   14000eece:	mov    DWORD PTR [rip+0x4008c],eax        # 0x14004ef60
   14000eed4:	call   0x14001457c
   14000eed9:	lea    rbx,[rip+0x40088]        # 0x14004ef68
   14000eee0:	xor    edx,edx
   14000eee2:	mov    rcx,rbx
   14000eee5:	lea    r9,[rsp+0x48]
   14000eeea:	lea    r8,[rsp+0x40]
   14000eeef:	call   QWORD PTR [rip+0x2e4cb]        # 0x14003d3c0
   14000eef5:	cmp    DWORD PTR [rsp+0x40],0x0
   14000eefa:	je     0x14000ef38
   14000eefc:	lea    rax,[rip+0x4006d]        # 0x14004ef70
   14000ef03:	mov    QWORD PTR [rsp+0x20],rbx
   14000ef08:	mov    QWORD PTR [rsp+0x48],rax
   14000ef0d:	lea    rax,[rip+0x30684]        # 0x14003f598
   14000ef14:	mov    QWORD PTR [rip+0x40055],rax        # 0x14004ef70
   14000ef1b:	and    DWORD PTR [rsp+0x28],0x0
   14000ef20:	lea    rax,[rip+0x3f279]        # 0x14004e1a0
   14000ef27:	lea    rcx,[rsp+0x20]
   14000ef2c:	mov    QWORD PTR [rip+0x40055],rax        # 0x14004ef88
   14000ef33:	call   0x14000efb8
   14000ef38:	mov    rax,QWORD PTR [rsp+0x48]
   14000ef3d:	add    rsp,0x30
   14000ef41:	pop    rbx
   14000ef42:	ret    
   14000ef43:	int3   
   14000ef44:	int3   
   14000ef45:	int3   
   14000ef46:	int3   
   14000ef47:	int3   
   14000ef48:	int3   
   14000ef49:	int3   
   14000ef4a:	int3   
   14000ef4b:	int3   
   14000ef4c:	mov    rax,rsp
   14000ef4f:	mov    QWORD PTR [rax+0x18],rbx
   14000ef53:	mov    QWORD PTR [rax+0x8],rcx
   14000ef57:	push   rdi
   14000ef58:	sub    rsp,0x20
   14000ef5c:	lea    r9,[rax+0x10]
   14000ef60:	xor    edx,edx
   14000ef62:	lea    r8,[rax+0x8]
   14000ef66:	lea    rcx,[rip+0x3fffb]        # 0x14004ef68
   14000ef6d:	call   QWORD PTR [rip+0x2e44d]        # 0x14003d3c0
   14000ef73:	test   eax,eax
   14000ef75:	je     0x14000efa4
   14000ef77:	cmp    DWORD PTR [rsp+0x30],0x0
   14000ef7c:	jne    0x14000efa4
   14000ef7e:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ef83:	mov    rax,QWORD PTR [rbx]
   14000ef86:	mov    rdi,QWORD PTR [rax+0x18]
   14000ef8a:	lea    rax,[rip+0xfffffffffffffeef]        # 0x14000ee80
   14000ef91:	cmp    rdi,rax
   14000ef94:	jne    0x14002972a
   14000ef9a:	xor    edx,edx
   14000ef9c:	mov    rcx,rbx
   14000ef9f:	call   0x14000ee80
   14000efa4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000efa9:	add    rsp,0x20
   14000efad:	pop    rdi
   14000efae:	ret    
   14000efaf:	int3   
   14000efb0:	int3   
   14000efb1:	int3   
   14000efb2:	int3   
   14000efb3:	int3   
   14000efb4:	int3   
   14000efb5:	int3   
   14000efb6:	int3   
   14000efb7:	int3   
   14000efb8:	mov    QWORD PTR [rsp+0x8],rbx
   14000efbd:	mov    QWORD PTR [rsp+0x10],rsi
   14000efc2:	push   rdi
   14000efc3:	sub    rsp,0x20
   14000efc7:	cmp    DWORD PTR [rcx+0x8],0x0
   14000efcb:	mov    rsi,rcx
   14000efce:	jne    0x14000f002
   14000efd0:	mov    rdi,QWORD PTR [rcx]
   14000efd3:	mov    rcx,QWORD PTR [rdi+0x20]
   14000efd7:	mov    QWORD PTR [rdi+0x10],rcx
   14000efdb:	mov    BYTE PTR [rdi+0x18],0x1
   14000efdf:	call   0x14000f30c
   14000efe4:	mov    rax,QWORD PTR [rdi+0x8]
   14000efe8:	mov    DWORD PTR [rdi+0x1c],0x1
   14000efef:	mov    rbx,QWORD PTR [rax+0x8]
   14000eff3:	mov    rcx,rbx
   14000eff6:	call   QWORD PTR [rip+0x2e72c]        # 0x14003d728
   14000effc:	lea    rcx,[rdi+0x8]
   14000f000:	call   rbx
   14000f002:	mov    rcx,QWORD PTR [rsi]
   14000f005:	mov    edx,DWORD PTR [rsi+0x8]
   14000f008:	lea    r8,[rcx+0x8]
   14000f00c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f011:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f016:	add    rsp,0x20
   14000f01a:	pop    rdi
   14000f01b:	rex.W jmp QWORD PTR [rip+0x2e376]        # 0x14003d398
   14000f022:	int3   
   14000f023:	int3   
   14000f024:	int3   
   14000f025:	int3   
   14000f026:	int3   
   14000f027:	int3   
   14000f028:	mov    QWORD PTR [rsp+0x8],rbx
   14000f02d:	push   rdi
   14000f02e:	sub    rsp,0x20
   14000f032:	mov    rbx,rcx
   14000f035:	mov    rcx,QWORD PTR [rcx]
   14000f038:	test   rcx,rcx
   14000f03b:	jne    0x140029740
   14000f041:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f046:	add    rsp,0x20
   14000f04a:	pop    rdi
   14000f04b:	ret    
   14000f04c:	int3   
   14000f04d:	int3   
   14000f04e:	int3   
   14000f04f:	int3   
   14000f050:	int3   
   14000f051:	int3   
   14000f052:	int3   
   14000f053:	int3   
   14000f054:	rex push rbx
   14000f056:	sub    rsp,0x20
   14000f05a:	cmp    BYTE PTR [rcx+0x10],0x0
   14000f05e:	lea    rax,[rip+0x30583]        # 0x14003f5e8
   14000f065:	mov    QWORD PTR [rcx],rax
   14000f068:	je     0x14000f080
   14000f06a:	mov    rbx,QWORD PTR [rcx+0x8]
   14000f06e:	mov    rcx,QWORD PTR [rbx+0x20]
   14000f072:	call   QWORD PTR [rip+0x2e698]        # 0x14003d710
   14000f078:	and    QWORD PTR [rbx+0x20],0x0
   14000f07d:	and    DWORD PTR [rbx],0x0
   14000f080:	add    rsp,0x20
   14000f084:	pop    rbx
   14000f085:	ret    
   14000f086:	int3   
   14000f087:	int3   
   14000f088:	int3   
   14000f089:	int3   
   14000f08a:	int3   
   14000f08b:	int3   
   14000f08c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f091:	push   rdi
   14000f092:	sub    rsp,0x20
   14000f096:	mov    rdi,QWORD PTR [rcx]
   14000f099:	mov    rbx,rcx
   14000f09c:	test   rdi,rdi
   14000f09f:	je     0x14000f0b9
   14000f0a1:	call   QWORD PTR [rip+0x2e119]        # 0x14003d1c0
   14000f0a7:	mov    r8,rdi
   14000f0aa:	xor    edx,edx
   14000f0ac:	mov    rcx,rax
   14000f0af:	call   QWORD PTR [rip+0x2e12b]        # 0x14003d1e0
   14000f0b5:	and    QWORD PTR [rbx],0x0
   14000f0b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f0be:	add    rsp,0x20
   14000f0c2:	pop    rdi
   14000f0c3:	ret    
   14000f0c4:	int3   
   14000f0c5:	int3   
   14000f0c6:	int3   
   14000f0c7:	int3   
   14000f0c8:	int3   
   14000f0c9:	int3   
   14000f0ca:	int3   
   14000f0cb:	int3   
   14000f0cc:	int3   
   14000f0cd:	int3   
   14000f0ce:	int3   
   14000f0cf:	int3   
   14000f0d0:	sub    rsp,0x28
   14000f0d4:	test   rdx,rdx
   14000f0d7:	je     0x14000f0e8
   14000f0d9:	mov    rcx,QWORD PTR [rcx+0x8]
   14000f0dd:	mov    r8,rdx
   14000f0e0:	xor    edx,edx
   14000f0e2:	call   QWORD PTR [rip+0x2e0f8]        # 0x14003d1e0
   14000f0e8:	add    rsp,0x28
   14000f0ec:	ret    
   14000f0ed:	int3   
   14000f0ee:	int3   
   14000f0ef:	int3   
   14000f0f0:	int3   
   14000f0f1:	int3   
   14000f0f2:	int3   
   14000f0f3:	int3   
   14000f0f4:	int3   
   14000f0f5:	int3   
   14000f0f6:	int3   
   14000f0f7:	int3   
   14000f0f8:	int3   
   14000f0f9:	int3   
   14000f0fa:	int3   
   14000f0fb:	int3   
   14000f0fc:	int3   
   14000f0fd:	int3   
   14000f0fe:	int3   
   14000f0ff:	int3   
   14000f100:	mov    rcx,QWORD PTR [rcx+0x8]
   14000f104:	mov    r8,rdx
   14000f107:	xor    edx,edx
   14000f109:	rex.W jmp QWORD PTR [rip+0x2e0c8]        # 0x14003d1d8
   14000f110:	int3   
   14000f111:	int3   
   14000f112:	int3   
   14000f113:	int3   
   14000f114:	int3   
   14000f115:	int3   
   14000f116:	int3   
   14000f117:	int3   
   14000f118:	cmp    BYTE PTR [rcx+0x10],0x0
   14000f11c:	lea    rax,[rip+0x304e5]        # 0x14003f608
   14000f123:	mov    QWORD PTR [rcx],rax
   14000f126:	jne    0x14002976e
   14000f12c:	ret    
   14000f12d:	int3   
   14000f12e:	int3   
   14000f12f:	int3   
   14000f130:	int3   
   14000f131:	int3   
   14000f132:	int3   
   14000f133:	int3   
   14000f134:	rex push rbx
   14000f136:	sub    rsp,0x20
   14000f13a:	mov    rbx,rcx
   14000f13d:	call   QWORD PTR [rip+0x2e07d]        # 0x14003d1c0
   14000f143:	mov    r8,rbx
   14000f146:	xor    edx,edx
   14000f148:	mov    rcx,rax
   14000f14b:	add    rsp,0x20
   14000f14f:	pop    rbx
   14000f150:	rex.W jmp QWORD PTR [rip+0x2e081]        # 0x14003d1d8
   14000f157:	int3   
   14000f158:	int3   
   14000f159:	int3   
   14000f15a:	int3   
   14000f15b:	int3   
   14000f15c:	int3   
   14000f15d:	int3   
   14000f15e:	int3   
   14000f15f:	int3   
   14000f160:	rex push rbx
   14000f162:	sub    rsp,0x30
   14000f166:	mov    edx,0x8
   14000f16b:	lea    rcx,[rip+0x24e]        # 0x14000f3c0
   14000f172:	mov    QWORD PTR [rsp+0x20],rcx
   14000f177:	lea    rbx,[rip+0x40032]        # 0x14004f1b0
   14000f17e:	lea    r9,[rip+0x664b]        # 0x1400157d0
   14000f185:	mov    rcx,rbx
   14000f188:	lea    r8d,[rdx+0x2]
   14000f18c:	call   0x14001459c
   14000f191:	and    DWORD PTR [rip+0x400b8],0x0        # 0x14004f250
   14000f198:	lea    rcx,[rip+0x40061]        # 0x14004f200
   14000f19f:	xor    edx,edx
   14000f1a1:	lea    r8d,[rdx+0x50]
   14000f1a5:	call   0x140014694
   14000f1aa:	mov    rax,rbx
   14000f1ad:	add    rsp,0x30
   14000f1b1:	pop    rbx
   14000f1b2:	ret    
   14000f1b3:	int3   
   14000f1b4:	int3   
   14000f1b5:	int3   
   14000f1b6:	int3   
   14000f1b7:	int3   
   14000f1b8:	int3   
   14000f1b9:	int3   
   14000f1ba:	int3   
   14000f1bb:	int3   
   14000f1bc:	mov    QWORD PTR [rsp+0x10],rbx
   14000f1c1:	mov    QWORD PTR [rsp+0x18],rsi
   14000f1c6:	push   rdi
   14000f1c7:	sub    rsp,0x20
   14000f1cb:	lea    rsi,[rip+0x3ffde]        # 0x14004f1b0
   14000f1d2:	mov    edi,0xa
   14000f1d7:	lea    rbx,[rip+0x40022]        # 0x14004f200
   14000f1de:	mov    rcx,QWORD PTR [rbx]
   14000f1e1:	test   rcx,rcx
   14000f1e4:	jne    0x140029782
   14000f1ea:	add    rbx,0x8
   14000f1ee:	sub    rdi,0x1
   14000f1f2:	jne    0x14000f1de
   14000f1f4:	lea    r9,[rip+0x1c5]        # 0x14000f3c0
   14000f1fb:	mov    rcx,rsi
   14000f1fe:	lea    edx,[rdi+0x8]
   14000f201:	lea    r8d,[rdi+0xa]
   14000f205:	mov    rbx,QWORD PTR [rsp+0x38]
   14000f20a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f20f:	add    rsp,0x20
   14000f213:	pop    rdi
   14000f214:	jmp    0x1400141f4
   14000f219:	int3   
   14000f21a:	int3   
   14000f21b:	int3   
   14000f21c:	int3   
   14000f21d:	int3   
   14000f21e:	int3   
   14000f21f:	int3   
   14000f220:	rex push rbx
   14000f222:	sub    rsp,0x20
   14000f226:	call   0x14000f264
   14000f22b:	mov    bl,al
   14000f22d:	test   al,al
   14000f22f:	jne    0x14000f254
   14000f231:	lea    r8,[rip+0x303f8]        # 0x14003f630
   14000f238:	xor    edx,edx
   14000f23a:	mov    ecx,0x100000
   14000f23f:	call   QWORD PTR [rip+0x2e1ab]        # 0x14003d3f0
   14000f245:	test   rax,rax
   14000f248:	mov    rcx,rax
   14000f24b:	setne  bl
   14000f24e:	call   QWORD PTR [rip+0x2df54]        # 0x14003d1a8
   14000f254:	mov    al,bl
   14000f256:	add    rsp,0x20
   14000f25a:	pop    rbx
   14000f25b:	ret    
   14000f25c:	int3   
   14000f25d:	int3   
   14000f25e:	int3   
   14000f25f:	int3   
   14000f260:	int3   
   14000f261:	int3   
   14000f262:	int3   
   14000f263:	int3   
   14000f264:	mov    QWORD PTR [rsp+0x8],rbx
   14000f269:	push   rdi
   14000f26a:	sub    rsp,0x60
   14000f26e:	mov    rax,QWORD PTR [rip+0x3ed9b]        # 0x14004e010
   14000f275:	xor    rax,rsp
   14000f278:	mov    QWORD PTR [rsp+0x50],rax
   14000f27d:	xor    edi,edi
   14000f27f:	call   QWORD PTR [rip+0x2dda3]        # 0x14003d028
   14000f285:	mov    rcx,rax
   14000f288:	lea    edx,[rdi+0x2]
   14000f28b:	mov    rbx,rax
   14000f28e:	call   QWORD PTR [rip+0x2dd9c]        # 0x14003d030
   14000f294:	test   rax,rax
   14000f297:	lea    r8d,[rdi+0x15]
   14000f29b:	lea    rdx,[rsp+0x20]
   14000f2a0:	cmove  rax,rbx
   14000f2a4:	mov    rcx,rax
   14000f2a7:	call   QWORD PTR [rip+0x2dd8b]        # 0x14003d038
   14000f2ad:	test   eax,eax
   14000f2af:	jne    0x14000f2cc
   14000f2b1:	mov    al,dil
   14000f2b4:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f2b9:	xor    rcx,rsp
   14000f2bc:	call   0x1400141d0
   14000f2c1:	mov    rbx,QWORD PTR [rsp+0x70]
   14000f2c6:	add    rsp,0x60
   14000f2ca:	pop    rdi
   14000f2cb:	ret    
   14000f2cc:	lea    rax,[rsp+0x20]
   14000f2d1:	mov    WORD PTR [rsp+0x48],di
   14000f2d6:	lea    r8,[rip+0x3038b]        # 0x14003f668
   14000f2dd:	sub    r8,rax
   14000f2e0:	movzx  ecx,WORD PTR [rax]
   14000f2e3:	movzx  edx,WORD PTR [rax+r8*1]
   14000f2e8:	sub    ecx,edx
   14000f2ea:	jne    0x14000f2f4
   14000f2ec:	add    rax,0x2
   14000f2f0:	test   edx,edx
   14000f2f2:	jne    0x14000f2e0
   14000f2f4:	test   ecx,ecx
   14000f2f6:	movzx  edi,dil
   14000f2fa:	mov    edx,0x1
   14000f2ff:	cmove  edi,edx
   14000f302:	jmp    0x14000f2b1
   14000f304:	int3   
   14000f305:	int3   
   14000f306:	int3   
   14000f307:	int3   
   14000f308:	int3   
   14000f309:	int3   
   14000f30a:	int3   
   14000f30b:	int3   
   14000f30c:	mov    QWORD PTR [rsp+0x10],rbx
   14000f311:	mov    QWORD PTR [rsp+0x18],rsi
   14000f316:	push   rdi
   14000f317:	sub    rsp,0x40
   14000f31b:	mov    rax,QWORD PTR [rip+0x3ecee]        # 0x14004e010
   14000f322:	xor    rax,rsp
   14000f325:	mov    QWORD PTR [rsp+0x30],rax
   14000f32a:	mov    rax,QWORD PTR [rcx+0x8]
   14000f32e:	lea    r9,[rcx+0x20]
   14000f332:	mov    rdi,rcx
   14000f335:	lea    rdx,[rip+0xd4]        # 0x14000f410
   14000f33c:	mov    r8,rcx
   14000f33f:	movups xmm0,XMMWORD PTR [rax-0x10]
   14000f343:	and    QWORD PTR [rcx+0x28],0x0
   14000f348:	and    QWORD PTR [rcx+0x30],0x0
   14000f34d:	lea    rcx,[rsp+0x20]
   14000f352:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   14000f358:	call   QWORD PTR [rip+0x2e3aa]        # 0x14003d708
   14000f35e:	mov    ebx,eax
   14000f360:	test   eax,eax
   14000f362:	jne    0x140029790
   14000f368:	mov    r8,QWORD PTR [rdi+0x8]
   14000f36c:	lea    edx,[rax+0x2]
   14000f36f:	mov    rcx,QWORD PTR [rdi+0x20]
   14000f373:	movzx  r9d,WORD PTR [r8]
   14000f377:	call   QWORD PTR [rip+0x2e383]        # 0x14003d700
   14000f37d:	mov    eax,ebx
   14000f37f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f384:	xor    rcx,rsp
   14000f387:	call   0x1400141d0
   14000f38c:	mov    rbx,QWORD PTR [rsp+0x58]
   14000f391:	mov    rsi,QWORD PTR [rsp+0x60]
   14000f396:	add    rsp,0x40
   14000f39a:	pop    rdi
   14000f39b:	ret    
   14000f39c:	int3   
   14000f39d:	int3   
   14000f39e:	int3   
   14000f39f:	int3   
   14000f3a0:	int3   
   14000f3a1:	int3   
   14000f3a2:	int3   
   14000f3a3:	int3   
   14000f3a4:	xor    eax,eax
   14000f3a6:	cmp    QWORD PTR [rcx],rax
   14000f3a9:	setne  al
   14000f3ac:	ret    
   14000f3ad:	int3   
   14000f3ae:	int3   
   14000f3af:	int3   
   14000f3b0:	int3   
   14000f3b1:	int3   
   14000f3b2:	int3   
   14000f3b3:	int3   
   14000f3b4:	int3   
   14000f3b5:	int3   
   14000f3b6:	int3   
   14000f3b7:	int3   
   14000f3b8:	int3   
   14000f3b9:	int3   
   14000f3ba:	int3   
   14000f3bb:	int3   
   14000f3bc:	int3   
   14000f3bd:	int3   
   14000f3be:	int3   
   14000f3bf:	int3   
   14000f3c0:	mov    rcx,QWORD PTR [rcx]
   14000f3c3:	rex.W jmp QWORD PTR [rip+0x43cf6]        # 0x1400530c0
   14000f3ca:	int3   
   14000f3cb:	int3   
   14000f3cc:	int3   
   14000f3cd:	int3   
   14000f3ce:	int3   
   14000f3cf:	int3   
   14000f3d0:	sub    rsp,0x38
   14000f3d4:	mov    eax,DWORD PTR [rip+0x365c6]        # 0x1400459a0
   14000f3da:	mov    r9,QWORD PTR [rip+0x2dd5f]        # 0x14003d140
   14000f3e1:	mov    r8,QWORD PTR [rip+0x365b0]        # 0x140045998
   14000f3e8:	mov    DWORD PTR [rsp+0x28],eax
   14000f3ec:	mov    QWORD PTR [rsp+0x20],rdx
   14000f3f1:	mov    rdx,rcx
   14000f3f4:	lea    rcx,[rip+0xffffffffffff0c05]        # 0x140000000
   14000f3fb:	call   QWORD PTR [rip+0x2dd47]        # 0x14003d148
   14000f401:	add    rsp,0x38
   14000f405:	ret    
   14000f406:	int3   
   14000f407:	int3   
   14000f408:	int3   
   14000f409:	int3   
   14000f40a:	int3   
   14000f40b:	int3   
   14000f40c:	int3   
   14000f40d:	int3   
   14000f40e:	int3   
   14000f40f:	int3   
   14000f410:	mov    rax,rsp
   14000f413:	mov    QWORD PTR [rax+0x8],rbx
   14000f417:	mov    QWORD PTR [rax+0x10],rbp
   14000f41b:	mov    QWORD PTR [rax+0x18],rsi
   14000f41f:	mov    QWORD PTR [rax+0x20],rdi
   14000f423:	push   r12
   14000f425:	push   r14
   14000f427:	push   r15
   14000f429:	sub    rsp,0x40
   14000f42d:	mov    rbx,QWORD PTR [rsp+0x90]
   14000f435:	mov    r14,r9
   14000f438:	mov    dil,r8b
   14000f43b:	mov    r15d,edx
   14000f43e:	mov    r12,rcx
   14000f441:	test   rbx,rbx
   14000f444:	je     0x14000f47b
   14000f446:	mov    rbp,QWORD PTR [rsp+0x80]
   14000f44e:	mov    eax,edx
   14000f450:	test   edx,edx
   14000f452:	je     0x14000f49a
   14000f454:	cmp    eax,0x1
   14000f457:	jne    0x14000f46e
   14000f459:	test   r8b,r8b
   14000f45c:	je     0x14000f49f
   14000f45e:	movzx  eax,r8b
   14000f462:	inc    eax
   14000f464:	mov    DWORD PTR [rbx],eax
   14000f466:	mov    QWORD PTR [rbx+0x10],r9
   14000f46a:	mov    QWORD PTR [rbx+0x18],rbp
   14000f46e:	mov    rsi,QWORD PTR [rbx+0x28]
   14000f472:	test   rsi,rsi
   14000f475:	jne    0x1400297a4
   14000f47b:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f480:	mov    rbp,QWORD PTR [rsp+0x68]
   14000f485:	mov    rsi,QWORD PTR [rsp+0x70]
   14000f48a:	mov    rdi,QWORD PTR [rsp+0x78]
   14000f48f:	add    rsp,0x40
   14000f493:	pop    r15
   14000f495:	pop    r14
   14000f497:	pop    r12
   14000f499:	ret    
   14000f49a:	and    DWORD PTR [rbx],0x0
   14000f49d:	jmp    0x14000f46e
   14000f49f:	mov    eax,0x100
   14000f4a4:	jmp    0x14000f464
   14000f4a6:	int3   
   14000f4a7:	int3   
   14000f4a8:	int3   
   14000f4a9:	int3   
   14000f4aa:	int3   
   14000f4ab:	int3   
   14000f4ac:	int3   
   14000f4ad:	int3   
   14000f4ae:	int3   
   14000f4af:	int3   
   14000f4b0:	test   dl,dl
   14000f4b2:	jne    0x14000f4cb
   14000f4b4:	push   rbx
   14000f4b5:	sub    rsp,0x20
   14000f4b9:	mov    rbx,rcx
   14000f4bc:	mov    ecx,DWORD PTR [rip+0x3f6b2]        # 0x14004eb74
   14000f4c2:	test   ecx,ecx
   14000f4c4:	jne    0x14000f4cc
   14000f4c6:	add    rsp,0x20
   14000f4ca:	pop    rbx
   14000f4cb:	ret    
   14000f4cc:	xor    r9d,r9d
   14000f4cf:	xor    r8d,r8d
   14000f4d2:	lea    edx,[r9+0x12]
   14000f4d6:	call   QWORD PTR [rip+0x2dc14]        # 0x14003d0f0
   14000f4dc:	mov    rcx,rbx
   14000f4df:	call   QWORD PTR [rip+0x2df03]        # 0x14003d3e8
   14000f4e5:	jmp    0x14000f4c6
   14000f4e7:	int3   
   14000f4e8:	int3   
   14000f4e9:	int3   
   14000f4ea:	int3   
   14000f4eb:	int3   
   14000f4ec:	int3   
   14000f4ed:	int3   
   14000f4ee:	int3   
   14000f4ef:	int3   
   14000f4f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f4f5:	push   rdi
   14000f4f6:	sub    rsp,0x20
   14000f4fa:	mov    rdi,QWORD PTR [rcx]
   14000f4fd:	test   rdi,rdi
   14000f500:	je     0x14000f517
   14000f502:	mov    rax,QWORD PTR [rdi]
   14000f505:	mov    rbx,QWORD PTR [rax+0x10]
   14000f509:	mov    rcx,rbx
   14000f50c:	call   QWORD PTR [rip+0x2e216]        # 0x14003d728
   14000f512:	mov    rcx,rdi
   14000f515:	call   rbx
   14000f517:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f51c:	add    rsp,0x20
   14000f520:	pop    rdi
   14000f521:	ret    
   14000f522:	int3   
   14000f523:	int3   
   14000f524:	int3   
   14000f525:	int3   
   14000f526:	int3   
   14000f527:	int3   
   14000f528:	rex push rbx
   14000f52a:	sub    rsp,0x20
   14000f52e:	mov    rbx,rcx
   14000f531:	mov    rcx,QWORD PTR [rcx]
   14000f534:	test   rcx,rcx
   14000f537:	jne    0x1400297dc
   14000f53d:	add    rsp,0x20
   14000f541:	pop    rbx
   14000f542:	ret    
   14000f543:	int3   
   14000f544:	int3   
   14000f545:	int3   
   14000f546:	int3   
   14000f547:	int3   
   14000f548:	int3   
   14000f549:	int3   
   14000f54a:	int3   
   14000f54b:	int3   
   14000f54c:	sub    rsp,0x28
   14000f550:	lea    rcx,[rip+0x3f6f1]        # 0x14004ec48
   14000f557:	call   0x14000d844
   14000f55c:	lea    rcx,[rip+0x3f765]        # 0x14004ecc8
   14000f563:	add    rsp,0x28
   14000f567:	jmp    0x14000d844
   14000f56c:	int3   
   14000f56d:	int3   
   14000f56e:	int3   
   14000f56f:	int3   
   14000f570:	int3   
   14000f571:	int3   
   14000f572:	int3   
   14000f573:	int3   
   14000f574:	int3   
   14000f575:	int3   
   14000f576:	int3   
   14000f577:	int3   
   14000f578:	int3   
   14000f579:	int3   
   14000f57a:	int3   
   14000f57b:	int3   
   14000f57c:	int3   
   14000f57d:	int3   
   14000f57e:	int3   
   14000f57f:	int3   
   14000f580:	rex push rdi
   14000f582:	sub    rsp,0x30
   14000f586:	cmp    QWORD PTR [rip+0x3fd02],0x0        # 0x14004f290
   14000f58e:	jne    0x140029800
   14000f594:	add    rsp,0x30
   14000f598:	pop    rdi
   14000f599:	ret    
   14000f59a:	int3   
   14000f59b:	int3   
   14000f59c:	int3   
   14000f59d:	int3   
   14000f59e:	int3   
   14000f59f:	int3   
   14000f5a0:	mov    eax,0x1
   14000f5a5:	lock xadd DWORD PTR [rcx+0xb0],eax
   14000f5ad:	inc    eax
   14000f5af:	ret    
   14000f5b0:	int3   
   14000f5b1:	int3   
   14000f5b2:	int3   
   14000f5b3:	int3   
   14000f5b4:	int3   
   14000f5b5:	int3   
   14000f5b6:	int3   
   14000f5b7:	int3   
   14000f5b8:	int3   
   14000f5b9:	int3   
   14000f5ba:	int3   
   14000f5bb:	int3   
   14000f5bc:	int3   
   14000f5bd:	int3   
   14000f5be:	int3   
   14000f5bf:	int3   
   14000f5c0:	test   rcx,rcx
   14000f5c3:	je     0x14000f5d4
   14000f5c9:	jmp    0x14002b204
   14000f5ce:	int3   
   14000f5cf:	int3   
   14000f5d0:	int3   
   14000f5d1:	int3   
   14000f5d2:	int3   
   14000f5d3:	int3   
   14000f5d4:	mov    rax,rsp
   14000f5d7:	mov    QWORD PTR [rax+0x18],r8
   14000f5db:	mov    QWORD PTR [rax+0x10],rdx
   14000f5df:	mov    QWORD PTR [rax+0x8],rcx
   14000f5e3:	push   rbx
   14000f5e4:	push   rsi
   14000f5e5:	push   rdi
   14000f5e6:	push   r13
   14000f5e8:	push   r14
   14000f5ea:	push   r15
   14000f5ec:	sub    rsp,0x38
   14000f5f0:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14000f5f8:	mov    r14,r8
   14000f5fb:	mov    r15,rdx
   14000f5fe:	xor    ebx,ebx
   14000f600:	test   r8,r8
   14000f603:	je     0x140028628
   14000f609:	mov    QWORD PTR [r8],rbx
   14000f60c:	mov    esi,0x8007000e
   14000f611:	mov    DWORD PTR [rsp+0x70],esi
   14000f615:	mov    QWORD PTR [rsp+0x88],rbx
   14000f61d:	mov    ecx,0x128
   14000f622:	call   0x140013d94
   14000f627:	mov    QWORD PTR [rsp+0x28],rax
   14000f62c:	test   rax,rax
   14000f62f:	je     0x140028632
   14000f635:	mov    rcx,rax
   14000f638:	call   0x14000f8a4
   14000f63d:	mov    rdi,rax
   14000f640:	mov    QWORD PTR [rsp+0x88],rdi
   14000f648:	test   rdi,rdi
   14000f64b:	je     0x14000f6bd
   14000f64d:	lock inc DWORD PTR [rdi+0x10]
   14000f651:	lea    rcx,[rdi+0x18]
   14000f655:	call   0x14000c130
   14000f65a:	mov    esi,eax
   14000f65c:	test   eax,eax
   14000f65e:	js     0x14000f683
   14000f660:	mov    BYTE PTR [rdi+0x40],0x1
   14000f664:	mov    WORD PTR [rdi+0x119],0x0
   14000f66d:	mov    QWORD PTR [rdi+0x48],rbx
   14000f671:	lea    rcx,[rdi+0x58]
   14000f675:	call   0x14000ddec
   14000f67a:	mov    QWORD PTR [rdi+0x120],rbx
   14000f681:	mov    esi,ebx
   14000f683:	lock dec DWORD PTR [rdi+0x10]
   14000f687:	test   esi,esi
   14000f689:	jne    0x140028674
   14000f68f:	mov    rax,QWORD PTR [rdi]
   14000f692:	mov    rsi,QWORD PTR [rax]
   14000f695:	lea    rax,[rip+0x2c4]        # 0x14000f960
   14000f69c:	cmp    rsi,rax
   14000f69f:	jne    0x14002865a
   14000f6a5:	mov    r8,r14
   14000f6a8:	mov    rdx,r15
   14000f6ab:	mov    rcx,rdi
   14000f6ae:	call   0x14000f960
   14000f6b3:	mov    esi,eax
   14000f6b5:	test   eax,eax
   14000f6b7:	jne    0x140028674
   14000f6bd:	mov    eax,esi
   14000f6bf:	add    rsp,0x38
   14000f6c3:	pop    r15
   14000f6c5:	pop    r14
   14000f6c7:	pop    r13
   14000f6c9:	pop    rdi
   14000f6ca:	pop    rsi
   14000f6cb:	pop    rbx
   14000f6cc:	ret    
   14000f6cd:	int3   
   14000f6ce:	int3   
   14000f6cf:	int3   
   14000f6d0:	int3   
   14000f6d1:	int3   
   14000f6d2:	int3   
   14000f6d3:	int3   
   14000f6d4:	int3   
   14000f6d5:	int3   
   14000f6d6:	int3   
   14000f6d7:	int3   
   14000f6d8:	int3   
   14000f6d9:	int3   
   14000f6da:	int3   
   14000f6db:	int3   
   14000f6dc:	int3   
   14000f6dd:	int3   
   14000f6de:	int3   
   14000f6df:	int3   
   14000f6e0:	mov    rax,rsp
   14000f6e3:	mov    QWORD PTR [rax+0x8],rbx
   14000f6e7:	mov    QWORD PTR [rax+0x10],rbp
   14000f6eb:	mov    QWORD PTR [rax+0x18],rsi
   14000f6ef:	mov    QWORD PTR [rax+0x20],rdi
   14000f6f3:	push   r14
   14000f6f5:	sub    rsp,0x20
   14000f6f9:	mov    rbx,rcx
   14000f6fc:	xor    edx,edx
   14000f6fe:	xor    ecx,ecx
   14000f700:	call   QWORD PTR [rip+0x43a12]        # 0x140053118
   14000f706:	test   rbx,rbx
   14000f709:	je     0x14000f7a2
   14000f70f:	mov    rcx,QWORD PTR [rbx+0x10]
   14000f713:	test   rcx,rcx
   14000f716:	je     0x14000f730
   14000f718:	or     edx,0xffffffff
   14000f71b:	call   QWORD PTR [rip+0x2dcd7]        # 0x14003d3f8
   14000f721:	mov    rcx,QWORD PTR [rbx+0x10]
   14000f725:	call   QWORD PTR [rip+0x2da7d]        # 0x14003d1a8
   14000f72b:	and    QWORD PTR [rbx+0x10],0x0
   14000f730:	mov    esi,DWORD PTR [rbx+0x8]
   14000f733:	xor    edi,edi
   14000f735:	test   esi,esi
   14000f737:	jle    0x14000f78b
   14000f739:	mov    edx,edi
   14000f73b:	mov    rcx,rbx
   14000f73e:	call   0x14000f858
   14000f743:	mov    rcx,QWORD PTR [rax]
   14000f746:	call   0x14000ffc0
   14000f74b:	mov    edx,edi
   14000f74d:	mov    rcx,rbx
   14000f750:	call   0x14000f858
   14000f755:	mov    r14,QWORD PTR [rax]
   14000f758:	mov    rax,QWORD PTR [r14]
   14000f75b:	mov    rbp,QWORD PTR [rax+0x10]
   14000f75f:	lea    rax,[rip+0x21a]        # 0x14000f980
   14000f766:	cmp    rbp,rax
   14000f769:	jne    0x140028698
   14000f76f:	mov    rcx,r14
   14000f772:	call   0x14000f980
   14000f777:	mov    edx,edi
   14000f779:	mov    rcx,rbx
   14000f77c:	call   0x14000f858
   14000f781:	inc    edi
   14000f783:	and    QWORD PTR [rax],0x0
   14000f787:	cmp    edi,esi
   14000f789:	jl     0x14000f739
   14000f78b:	mov    rcx,QWORD PTR [rbx+0x18]
   14000f78f:	test   rcx,rcx
   14000f792:	je     0x14000f79a
   14000f794:	call   QWORD PTR [rip+0x2dc4e]        # 0x14003d3e8
   14000f79a:	mov    rcx,rbx
   14000f79d:	call   0x14000facc
   14000f7a2:	call   QWORD PTR [rip+0x43958]        # 0x140053100
   14000f7a8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f7ad:	xor    eax,eax
   14000f7af:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f7b4:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f7b9:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f7be:	add    rsp,0x20
   14000f7c2:	pop    r14
   14000f7c4:	ret    
   14000f7c5:	int3   
   14000f7c6:	int3   
   14000f7c7:	int3   
   14000f7c8:	int3   
   14000f7c9:	int3   
   14000f7ca:	int3   
   14000f7cb:	int3   
   14000f7cc:	mov    QWORD PTR [rsp+0x8],rbx
   14000f7d1:	mov    QWORD PTR [rsp+0x10],rsi
   14000f7d6:	push   rdi
   14000f7d7:	sub    rsp,0x20
   14000f7db:	mov    edi,DWORD PTR [rcx+0x8]
   14000f7de:	mov    rsi,rdx
   14000f7e1:	mov    rbx,rcx
   14000f7e4:	cmp    edi,DWORD PTR [rcx+0xc]
   14000f7e7:	jne    0x14000f81e
   14000f7e9:	cmp    DWORD PTR [rcx+0xc],0x0
   14000f7ed:	jne    0x1400286ac
   14000f7f3:	mov    edi,0x1
   14000f7f8:	movsxd rdx,edi
   14000f7fb:	cmp    rdx,0xfffffff
   14000f802:	ja     0x14000f84c
   14000f804:	mov    rcx,QWORD PTR [rcx]
   14000f807:	mov    r8d,0x8
   14000f80d:	call   QWORD PTR [rip+0x3e7ed]        # 0x14004e000
   14000f813:	test   rax,rax
   14000f816:	je     0x14000f84c
   14000f818:	mov    DWORD PTR [rbx+0xc],edi
   14000f81b:	mov    QWORD PTR [rbx],rax
   14000f81e:	movsxd rdx,DWORD PTR [rbx+0x8]
   14000f822:	mov    rcx,QWORD PTR [rbx]
   14000f825:	lea    r8,[rcx+rdx*8]
   14000f829:	test   r8,r8
   14000f82c:	je     0x14000f834
   14000f82e:	mov    rcx,QWORD PTR [rsi]
   14000f831:	mov    QWORD PTR [r8],rcx
   14000f834:	inc    DWORD PTR [rbx+0x8]
   14000f837:	mov    eax,0x1
   14000f83c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f841:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f846:	add    rsp,0x20
   14000f84a:	pop    rdi
   14000f84b:	ret    
   14000f84c:	xor    eax,eax
   14000f84e:	jmp    0x14000f83c
   14000f850:	int3   
   14000f851:	int3   
   14000f852:	int3   
   14000f853:	int3   
   14000f854:	int3   
   14000f855:	int3   
   14000f856:	int3   
   14000f857:	int3   
   14000f858:	sub    rsp,0x28
   14000f85c:	test   edx,edx
   14000f85e:	js     0x1400286ba
   14000f864:	cmp    edx,DWORD PTR [rcx+0x8]
   14000f867:	jge    0x1400286ba
   14000f86d:	mov    rax,QWORD PTR [rcx]
   14000f870:	movsxd rdx,edx
   14000f873:	lea    rax,[rax+rdx*8]
   14000f877:	add    rsp,0x28
   14000f87b:	ret    
   14000f87c:	int3   
   14000f87d:	int3   
   14000f87e:	int3   
   14000f87f:	int3   
   14000f880:	int3   
   14000f881:	int3   
   14000f882:	int3   
   14000f883:	int3   
   14000f884:	int3   
   14000f885:	int3   
   14000f886:	int3   
   14000f887:	int3   
   14000f888:	int3   
   14000f889:	int3   
   14000f88a:	int3   
   14000f88b:	int3   
   14000f88c:	int3   
   14000f88d:	int3   
   14000f88e:	int3   
   14000f88f:	int3   
   14000f890:	mov    eax,0x1
   14000f895:	lock xadd DWORD PTR [rcx+0x10],eax
   14000f89a:	inc    eax
   14000f89c:	ret    
   14000f89d:	int3   
   14000f89e:	int3   
   14000f89f:	int3   
   14000f8a0:	int3   
   14000f8a1:	int3   
   14000f8a2:	int3   
   14000f8a3:	int3   
   14000f8a4:	mov    rax,rsp
   14000f8a7:	mov    QWORD PTR [rax+0x8],rcx
   14000f8ab:	push   rdi
   14000f8ac:	sub    rsp,0x30
   14000f8b0:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000f8b8:	mov    QWORD PTR [rax+0x10],rbx
   14000f8bc:	mov    QWORD PTR [rax+0x18],rsi
   14000f8c0:	mov    rbx,rcx
   14000f8c3:	call   0x140010380
   14000f8c8:	nop
   14000f8c9:	lea    rax,[rip+0x2f8f8]        # 0x14003f1c8
   14000f8d0:	mov    QWORD PTR [rbx],rax
   14000f8d3:	lea    rax,[rip+0x2f8ce]        # 0x14003f1a8
   14000f8da:	mov    QWORD PTR [rbx+0x8],rax
   14000f8de:	mov    rdi,QWORD PTR [rip+0x3f27b]        # 0x14004eb60
   14000f8e5:	mov    rax,QWORD PTR [rdi]
   14000f8e8:	mov    rsi,QWORD PTR [rax+0x8]
   14000f8ec:	lea    rax,[rip+0xffffffffffffcf4d]        # 0x14000c840
   14000f8f3:	cmp    rsi,rax
   14000f8f6:	jne    0x1400286d0
   14000f8fc:	mov    rcx,rdi
   14000f8ff:	call   0x14000c840
   14000f904:	nop
   14000f905:	mov    rax,rbx
   14000f908:	mov    rbx,QWORD PTR [rsp+0x48]
   14000f90d:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f912:	add    rsp,0x30
   14000f916:	pop    rdi
   14000f917:	ret    
   14000f918:	int3   
   14000f919:	int3   
   14000f91a:	int3   
   14000f91b:	int3   
   14000f91c:	int3   
   14000f91d:	int3   
   14000f91e:	int3   
   14000f91f:	int3   
   14000f920:	mov    QWORD PTR [rsp+0x8],rbx
   14000f925:	push   rdi
   14000f926:	sub    rsp,0x20
   14000f92a:	mov    ebx,edx
   14000f92c:	mov    rdi,rcx
   14000f92f:	call   0x14000fa48
   14000f934:	test   bl,0x1
   14000f937:	je     0x14000f941
   14000f939:	mov    rcx,rdi
   14000f93c:	call   0x140013de0
   14000f941:	mov    rax,rdi
   14000f944:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f949:	add    rsp,0x20
   14000f94d:	pop    rdi
   14000f94e:	ret    
   14000f94f:	int3   
   14000f950:	int3   
   14000f951:	int3   
   14000f952:	int3   
   14000f953:	int3   
   14000f954:	int3   
   14000f955:	int3   
   14000f956:	int3   
   14000f957:	int3   
   14000f958:	int3   
   14000f959:	int3   
   14000f95a:	int3   
   14000f95b:	int3   
   14000f95c:	int3   
   14000f95d:	int3   
   14000f95e:	int3   
   14000f95f:	int3   
   14000f960:	mov    r9,r8
   14000f963:	mov    r8,rdx
   14000f966:	lea    rdx,[rip+0x32de3]        # 0x140042750
   14000f96d:	jmp    0x14000c260
   14000f972:	int3   
   14000f973:	int3   
   14000f974:	int3   
   14000f975:	int3   
   14000f976:	int3   
   14000f977:	int3   
   14000f978:	int3   
   14000f979:	int3   
   14000f97a:	int3   
   14000f97b:	int3   
   14000f97c:	int3   
   14000f97d:	int3   
   14000f97e:	int3   
   14000f97f:	int3   
   14000f980:	mov    rax,rsp
   14000f983:	push   rdi
   14000f984:	sub    rsp,0x30
   14000f988:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000f990:	mov    QWORD PTR [rax+0x8],rbx
   14000f994:	mov    QWORD PTR [rax+0x10],rbp
   14000f998:	mov    QWORD PTR [rax+0x18],rsi
   14000f99c:	mov    rbx,rcx
   14000f99f:	or     edi,0xffffffff
   14000f9a2:	lock xadd DWORD PTR [rcx+0x10],edi
   14000f9a7:	sub    edi,0x1
   14000f9aa:	je     0x14000f9c3
   14000f9ac:	mov    eax,edi
   14000f9ae:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f9b3:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f9b8:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f9bd:	add    rsp,0x30
   14000f9c1:	pop    rdi
   14000f9c2:	ret    
   14000f9c3:	mov    rsi,QWORD PTR [rip+0x3f196]        # 0x14004eb60
   14000f9ca:	mov    rax,QWORD PTR [rsi]
   14000f9cd:	mov    rbp,QWORD PTR [rax+0x8]
   14000f9d1:	lea    rax,[rip+0xffffffffffffce68]        # 0x14000c840
   14000f9d8:	cmp    rbp,rax
   14000f9db:	jne    0x1400286e6
   14000f9e1:	mov    rcx,rsi
   14000f9e4:	call   0x14000c840
   14000f9e9:	nop
   14000f9ea:	test   rbx,rbx
   14000f9ed:	je     0x14000fa17
   14000f9ef:	mov    rax,QWORD PTR [rbx]
   14000f9f2:	mov    rsi,QWORD PTR [rax+0x88]
   14000f9f9:	lea    rax,[rip+0xffffffffffffff20]        # 0x14000f920
   14000fa00:	cmp    rsi,rax
   14000fa03:	jne    0x1400286fa
   14000fa09:	mov    edx,0x1
   14000fa0e:	mov    rcx,rbx
   14000fa11:	call   0x14000f920
   14000fa16:	nop
   14000fa17:	mov    rbx,QWORD PTR [rip+0x3f142]        # 0x14004eb60
   14000fa1e:	mov    rax,QWORD PTR [rbx]
   14000fa21:	mov    rsi,QWORD PTR [rax+0x10]
   14000fa25:	lea    rax,[rip+0xffffffffffff85f4]        # 0x140008020
   14000fa2c:	cmp    rsi,rax
   14000fa2f:	jne    0x140028713
   14000fa35:	mov    rcx,rbx
   14000fa38:	call   0x140008020
   14000fa3d:	jmp    0x14000f9ac
   14000fa42:	int3   
   14000fa43:	int3   
   14000fa44:	int3   
   14000fa45:	int3   
   14000fa46:	int3   
   14000fa47:	int3   
   14000fa48:	mov    rax,rsp
   14000fa4b:	mov    QWORD PTR [rax+0x8],rcx
   14000fa4f:	push   rdi
   14000fa50:	sub    rsp,0x30
   14000fa54:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000fa5c:	mov    QWORD PTR [rax+0x10],rbx
   14000fa60:	mov    QWORD PTR [rax+0x18],rsi
   14000fa64:	mov    rbx,rcx
   14000fa67:	lea    rax,[rip+0x2f75a]        # 0x14003f1c8
   14000fa6e:	mov    QWORD PTR [rcx],rax
   14000fa71:	lea    rax,[rip+0x2f730]        # 0x14003f1a8
   14000fa78:	mov    QWORD PTR [rcx+0x8],rax
   14000fa7c:	mov    DWORD PTR [rcx+0x10],0xc0000001
   14000fa83:	call   0x14001031c
   14000fa88:	mov    rdi,QWORD PTR [rip+0x3f0d1]        # 0x14004eb60
   14000fa8f:	mov    rax,QWORD PTR [rdi]
   14000fa92:	mov    rsi,QWORD PTR [rax+0x10]
   14000fa96:	lea    rax,[rip+0xffffffffffff8583]        # 0x140008020
   14000fa9d:	cmp    rsi,rax
   14000faa0:	jne    0x140028728
   14000faa6:	mov    rcx,rdi
   14000faa9:	call   0x140008020
   14000faae:	nop
   14000faaf:	mov    rcx,rbx
   14000fab2:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fab7:	mov    rsi,QWORD PTR [rsp+0x50]
   14000fabc:	add    rsp,0x30
   14000fac0:	pop    rdi
   14000fac1:	jmp    0x14001018c
   14000fac6:	int3   
   14000fac7:	int3   
   14000fac8:	int3   
   14000fac9:	int3   
   14000faca:	int3   
   14000facb:	int3   
   14000facc:	rex push rbx
   14000face:	sub    rsp,0x20
   14000fad2:	mov    rbx,rcx
   14000fad5:	mov    rcx,QWORD PTR [rcx]
   14000fad8:	test   rcx,rcx
   14000fadb:	je     0x14000fae7
   14000fadd:	call   QWORD PTR [rip+0x2db65]        # 0x14003d648
   14000fae3:	and    QWORD PTR [rbx],0x0
   14000fae7:	and    DWORD PTR [rbx+0x8],0x0
   14000faeb:	mov    rcx,rbx
   14000faee:	and    DWORD PTR [rbx+0xc],0x0
   14000faf2:	call   0x140013de0
   14000faf7:	mov    rax,rbx
   14000fafa:	add    rsp,0x20
   14000fafe:	pop    rbx
   14000faff:	ret    
   14000fb00:	int3   
   14000fb01:	int3   
   14000fb02:	int3   
   14000fb03:	int3   
   14000fb04:	int3   
   14000fb05:	int3   
   14000fb06:	int3   
   14000fb07:	int3   
   14000fb08:	mov    QWORD PTR [rsp+0x8],rbx
   14000fb0d:	mov    QWORD PTR [rsp+0x10],rbp
   14000fb12:	mov    QWORD PTR [rsp+0x18],rsi
   14000fb17:	push   rdi
   14000fb18:	sub    rsp,0x20
   14000fb1c:	mov    rbx,rcx
   14000fb1f:	mov    rbp,rdx
   14000fb22:	add    rcx,0x8
   14000fb26:	xor    edi,edi
   14000fb28:	call   QWORD PTR [rip+0x2d89a]        # 0x14003d3c8
   14000fb2e:	cmp    QWORD PTR [rbx],rdi
   14000fb31:	je     0x14000fb40
   14000fb33:	mov    rcx,QWORD PTR [rbx]
   14000fb36:	mov    rdx,rbp
   14000fb39:	call   0x14000f7cc
   14000fb3e:	mov    edi,eax
   14000fb40:	lea    rcx,[rbx+0x8]
   14000fb44:	call   QWORD PTR [rip+0x2d88e]        # 0x14003d3d8
   14000fb4a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fb4f:	mov    eax,edi
   14000fb51:	mov    rbp,QWORD PTR [rsp+0x38]
   14000fb56:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fb5b:	add    rsp,0x20
   14000fb5f:	pop    rdi
   14000fb60:	ret    
   14000fb61:	int3   
   14000fb62:	int3   
   14000fb63:	int3   
   14000fb64:	int3   
   14000fb65:	int3   
   14000fb66:	int3   
   14000fb67:	int3   
   14000fb68:	mov    QWORD PTR [rsp+0x8],rbx
   14000fb6d:	push   rdi
   14000fb6e:	sub    rsp,0x20
   14000fb72:	lea    rbx,[rcx+0x8]
   14000fb76:	mov    rdi,rcx
   14000fb79:	mov    rcx,rbx
   14000fb7c:	call   QWORD PTR [rip+0x2d846]        # 0x14003d3c8
   14000fb82:	mov    rcx,QWORD PTR [rdi]
   14000fb85:	test   rcx,rcx
   14000fb88:	je     0x14000fb8f
   14000fb8a:	call   0x14000facc
   14000fb8f:	and    QWORD PTR [rdi],0x0
   14000fb93:	mov    rcx,rbx
   14000fb96:	call   QWORD PTR [rip+0x2d83c]        # 0x14003d3d8
   14000fb9c:	mov    rcx,rbx
   14000fb9f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fba4:	add    rsp,0x20
   14000fba8:	pop    rdi
   14000fba9:	rex.W jmp QWORD PTR [rip+0x2d808]        # 0x14003d3b8
   14000fbb0:	int3   
   14000fbb1:	int3   
   14000fbb2:	int3   
   14000fbb3:	int3   
   14000fbb4:	int3   
   14000fbb5:	int3   
   14000fbb6:	int3   
   14000fbb7:	int3   
   14000fbb8:	mov    rax,rsp
   14000fbbb:	mov    QWORD PTR [rax+0x8],rbx
   14000fbbf:	mov    QWORD PTR [rax+0x18],rbp
   14000fbc3:	mov    QWORD PTR [rax+0x20],rsi
   14000fbc7:	mov    QWORD PTR [rax+0x10],rdx
   14000fbcb:	push   rdi
   14000fbcc:	sub    rsp,0x20
   14000fbd0:	mov    rsi,rcx
   14000fbd3:	mov    rbx,rdx
   14000fbd6:	add    rcx,0x38
   14000fbda:	call   QWORD PTR [rip+0x2d7e8]        # 0x14003d3c8
   14000fbe0:	mov    rax,QWORD PTR [rbx]
   14000fbe3:	mov    rdi,QWORD PTR [rax+0x8]
   14000fbe7:	lea    rax,[rip+0xfffffffffffffca2]        # 0x14000f890
   14000fbee:	cmp    rdi,rax
   14000fbf1:	jne    0x14002873e
   14000fbf7:	mov    rcx,rbx
   14000fbfa:	call   0x14000f890
   14000fbff:	lea    rcx,[rsi+0x8]
   14000fc03:	lea    rdx,[rsp+0x38]
   14000fc08:	call   0x14000fef0
   14000fc0d:	lea    rcx,[rsi+0x38]
   14000fc11:	call   QWORD PTR [rip+0x2d7c1]        # 0x14003d3d8
   14000fc17:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fc1c:	xor    eax,eax
   14000fc1e:	mov    rbp,QWORD PTR [rsp+0x40]
   14000fc23:	mov    rsi,QWORD PTR [rsp+0x48]
   14000fc28:	add    rsp,0x20
   14000fc2c:	pop    rdi
   14000fc2d:	ret    
   14000fc2e:	int3   
   14000fc2f:	int3   
   14000fc30:	int3   
   14000fc31:	int3   
   14000fc32:	int3   
   14000fc33:	int3   
   14000fc34:	int3   
   14000fc35:	int3   
   14000fc36:	int3   
   14000fc37:	int3   
   14000fc38:	int3   
   14000fc39:	int3   
   14000fc3a:	int3   
   14000fc3b:	int3   
   14000fc3c:	int3   
   14000fc3d:	int3   
   14000fc3e:	int3   
   14000fc3f:	int3   
   14000fc40:	mov    rax,rsp
   14000fc43:	push   rdi
   14000fc44:	sub    rsp,0x30
   14000fc48:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000fc50:	mov    QWORD PTR [rax+0x10],rbx
   14000fc54:	mov    QWORD PTR [rax+0x18],rbp
   14000fc58:	mov    QWORD PTR [rax+0x20],rsi
   14000fc5c:	mov    rsi,rcx
   14000fc5f:	mov    rdi,QWORD PTR [rcx+0x60]
   14000fc63:	mov    rax,QWORD PTR [rdi]
   14000fc66:	mov    rbx,QWORD PTR [rax+0x68]
   14000fc6a:	mov    rcx,rbx
   14000fc6d:	call   QWORD PTR [rip+0x2dab5]        # 0x14003d728
   14000fc73:	mov    rcx,rdi
   14000fc76:	call   rbx
   14000fc78:	test   al,al
   14000fc7a:	jne    0x14002876d
   14000fc80:	xor    ebx,ebx
   14000fc82:	mov    QWORD PTR [rsp+0x40],rbx
   14000fc87:	lea    rcx,[rsi+0x38]
   14000fc8b:	call   QWORD PTR [rip+0x2d737]        # 0x14003d3c8
   14000fc91:	cmp    QWORD PTR [rsi+0x18],rbx
   14000fc95:	je     0x14000fd4a
   14000fc9b:	lea    rbp,[rsi+0x8]
   14000fc9f:	mov    rcx,rbp
   14000fca2:	call   0x14000ff64
   14000fca7:	mov    rcx,QWORD PTR [rax]
   14000fcaa:	call   0x14000ff84
   14000fcaf:	test   al,al
   14000fcb1:	je     0x14000fd4a
   14000fcb7:	lea    ecx,[rbx+0x20]
   14000fcba:	call   0x140013d94
   14000fcbf:	mov    rbx,rax
   14000fcc2:	mov    QWORD PTR [rsp+0x40],rax
   14000fcc7:	test   rax,rax
   14000fcca:	je     0x140028752
   14000fcd0:	and    QWORD PTR [rax],0x0
   14000fcd4:	and    DWORD PTR [rax+0x8],0x0
   14000fcd8:	and    DWORD PTR [rax+0xc],0x0
   14000fcdc:	mov    QWORD PTR [rsp+0x40],rbx
   14000fce1:	test   rbx,rbx
   14000fce4:	je     0x14000fd4a
   14000fce6:	cmp    QWORD PTR [rsi+0x18],0x0
   14000fceb:	je     0x14000fd1e
   14000fced:	mov    rcx,rbp
   14000fcf0:	call   0x14000ff64
   14000fcf5:	mov    rcx,QWORD PTR [rax]
   14000fcf8:	call   0x14000ff84
   14000fcfd:	test   al,al
   14000fcff:	je     0x14000fd1e
   14000fd01:	mov    rcx,rbp
   14000fd04:	call   0x14000ff64
   14000fd09:	mov    rdx,rax
   14000fd0c:	mov    rcx,rbx
   14000fd0f:	call   0x14000f7cc
   14000fd14:	mov    rcx,rbp
   14000fd17:	call   0x14000ff24
   14000fd1c:	jmp    0x14000fce6
   14000fd1e:	cmp    DWORD PTR [rbx+0x8],0x0
   14000fd22:	jle    0x140028759
   14000fd28:	mov    rax,QWORD PTR [rsi+0x68]
   14000fd2c:	mov    QWORD PTR [rbx+0x10],rax
   14000fd30:	xor    r9d,r9d
   14000fd33:	xor    r8d,r8d
   14000fd36:	lea    edx,[r9+0x1]
   14000fd3a:	xor    ecx,ecx
   14000fd3c:	call   QWORD PTR [rip+0x2d69e]        # 0x14003d3e0
   14000fd42:	mov    QWORD PTR [rsi+0x68],rax
   14000fd46:	mov    QWORD PTR [rbx+0x18],rax
   14000fd4a:	lea    rcx,[rsi+0x38]
   14000fd4e:	call   QWORD PTR [rip+0x2d684]        # 0x14003d3d8
   14000fd54:	test   rbx,rbx
   14000fd57:	je     0x14000fd73
   14000fd59:	and    QWORD PTR [rsp+0x40],0x0
   14000fd5f:	xor    r8d,r8d
   14000fd62:	mov    rdx,rbx
   14000fd65:	lea    rcx,[rip+0xfffffffffffff974]        # 0x14000f6e0
   14000fd6c:	call   QWORD PTR [rip+0x2d6be]        # 0x14003d430
   14000fd72:	nop
   14000fd73:	lea    rcx,[rsp+0x40]
   14000fd78:	call   0x140011f70
   14000fd7d:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fd82:	mov    rbp,QWORD PTR [rsp+0x50]
   14000fd87:	mov    rsi,QWORD PTR [rsp+0x58]
   14000fd8c:	add    rsp,0x30
   14000fd90:	pop    rdi
   14000fd91:	ret    
   14000fd92:	int3   
   14000fd93:	int3   
   14000fd94:	int3   
   14000fd95:	int3   
   14000fd96:	int3   
   14000fd97:	int3   
   14000fd98:	mov    QWORD PTR [rsp+0x8],rbx
   14000fd9d:	mov    QWORD PTR [rsp+0x10],rbp
   14000fda2:	mov    QWORD PTR [rsp+0x18],rsi
   14000fda7:	push   rdi
   14000fda8:	sub    rsp,0x20
   14000fdac:	mov    rbx,rcx
   14000fdaf:	mov    rdi,rdx
   14000fdb2:	add    rcx,0x38
   14000fdb6:	call   QWORD PTR [rip+0x2d60c]        # 0x14003d3c8
   14000fdbc:	cmp    QWORD PTR [rbx+0x18],0x0
   14000fdc1:	je     0x14000fdd8
   14000fdc3:	lea    rcx,[rbx+0x8]
   14000fdc7:	call   0x14000ff64
   14000fdcc:	mov    rsi,QWORD PTR [rax]
   14000fdcf:	cmp    rsi,rdi
   14000fdd2:	jne    0x1400287bc
   14000fdd8:	lea    rcx,[rbx+0x38]
   14000fddc:	call   QWORD PTR [rip+0x2d5f6]        # 0x14003d3d8
   14000fde2:	mov    rax,QWORD PTR [rbx]
   14000fde5:	mov    rdi,QWORD PTR [rax]
   14000fde8:	lea    rax,[rip+0xfffffffffffffe51]        # 0x14000fc40
   14000fdef:	cmp    rdi,rax
   14000fdf2:	jne    0x1400287e6
   14000fdf8:	mov    rcx,rbx
   14000fdfb:	call   0x14000fc40
   14000fe00:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fe05:	xor    eax,eax
   14000fe07:	mov    rbp,QWORD PTR [rsp+0x38]
   14000fe0c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fe11:	add    rsp,0x20
   14000fe15:	pop    rdi
   14000fe16:	ret    
   14000fe17:	int3   
   14000fe18:	int3   
   14000fe19:	int3   
   14000fe1a:	int3   
   14000fe1b:	int3   
   14000fe1c:	int3   
   14000fe1d:	int3   
   14000fe1e:	int3   
   14000fe1f:	int3   
   14000fe20:	sub    rsp,0x28
   14000fe24:	mov    rax,QWORD PTR [rcx+0x20]
   14000fe28:	mov    QWORD PTR [rdx],rax
   14000fe2b:	sub    QWORD PTR [rcx+0x10],0x1
   14000fe30:	mov    QWORD PTR [rcx+0x20],rdx
   14000fe34:	jne    0x14000fe3b
   14000fe36:	call   0x14000d8bc
   14000fe3b:	add    rsp,0x28
   14000fe3f:	ret    
   14000fe40:	int3   
   14000fe41:	int3   
   14000fe42:	int3   
   14000fe43:	int3   
   14000fe44:	int3   
   14000fe45:	int3   
   14000fe46:	int3   
   14000fe47:	int3   
   14000fe48:	mov    QWORD PTR [rsp+0x8],rbx
   14000fe4d:	mov    QWORD PTR [rsp+0x10],rsi
   14000fe52:	push   rdi
   14000fe53:	sub    rsp,0x20
   14000fe57:	cmp    QWORD PTR [rcx+0x20],0x0
   14000fe5c:	mov    rsi,r8
   14000fe5f:	mov    rdi,rdx
   14000fe62:	mov    rbx,rcx
   14000fe65:	jne    0x14000feb0
   14000fe67:	mov    edx,DWORD PTR [rcx+0x28]
   14000fe6a:	mov    r8d,0x18
   14000fe70:	add    rcx,0x18
   14000fe74:	call   0x1400132c4
   14000fe79:	mov    r8,rax
   14000fe7c:	test   rax,rax
   14000fe7f:	je     0x1400287fa
   14000fe85:	mov    edx,DWORD PTR [rbx+0x28]
   14000fe88:	lea    eax,[rdx-0x1]
   14000fe8b:	lea    rcx,[rax*2+0x1]
   14000fe93:	add    rcx,rax
   14000fe96:	lea    rcx,[r8+rcx*8]
   14000fe9a:	jmp    0x14000feab
   14000fe9c:	mov    rax,QWORD PTR [rbx+0x20]
   14000fea0:	mov    QWORD PTR [rcx],rax
   14000fea3:	mov    QWORD PTR [rbx+0x20],rcx
   14000fea7:	sub    rcx,0x18
   14000feab:	sub    edx,0x1
   14000feae:	jns    0x14000fe9c
   14000feb0:	mov    rax,QWORD PTR [rbx+0x20]
   14000feb4:	mov    QWORD PTR [rsp+0x48],rax
   14000feb9:	mov    rdx,QWORD PTR [rax]
   14000febc:	test   rax,rax
   14000febf:	je     0x14000fec8
   14000fec1:	mov    rcx,QWORD PTR [rdi]
   14000fec4:	mov    QWORD PTR [rax+0x10],rcx
   14000fec8:	mov    QWORD PTR [rbx+0x20],rdx
   14000fecc:	and    QWORD PTR [rax],0x0
   14000fed0:	mov    QWORD PTR [rax+0x8],rsi
   14000fed4:	inc    QWORD PTR [rbx+0x10]
   14000fed8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fedd:	mov    rsi,QWORD PTR [rsp+0x38]
   14000fee2:	add    rsp,0x20
   14000fee6:	pop    rdi
   14000fee7:	ret    
   14000fee8:	int3   
   14000fee9:	int3   
   14000feea:	int3   
   14000feeb:	int3   
   14000feec:	int3   
   14000feed:	int3   
   14000feee:	int3   
   14000feef:	int3   
   14000fef0:	rex push rbx
   14000fef2:	sub    rsp,0x20
   14000fef6:	mov    r8,QWORD PTR [rcx+0x8]
   14000fefa:	mov    rbx,rcx
   14000fefd:	call   0x14000fe48
   14000ff02:	mov    rcx,QWORD PTR [rbx+0x8]
   14000ff06:	test   rcx,rcx
   14000ff09:	jne    0x14000ff18
   14000ff0b:	mov    QWORD PTR [rbx],rax
   14000ff0e:	mov    QWORD PTR [rbx+0x8],rax
   14000ff12:	add    rsp,0x20
   14000ff16:	pop    rbx
   14000ff17:	ret    
   14000ff18:	mov    QWORD PTR [rcx],rax
   14000ff1b:	jmp    0x14000ff0e
   14000ff1d:	int3   
   14000ff1e:	int3   
   14000ff1f:	int3   
   14000ff20:	int3   
   14000ff21:	int3   
   14000ff22:	int3   
   14000ff23:	int3   
   14000ff24:	rex push rbx
   14000ff26:	sub    rsp,0x20
   14000ff2a:	mov    rdx,QWORD PTR [rcx]
   14000ff2d:	test   rdx,rdx
   14000ff30:	je     0x140028806
   14000ff36:	mov    rax,QWORD PTR [rdx]
   14000ff39:	mov    rbx,QWORD PTR [rdx+0x10]
   14000ff3d:	mov    QWORD PTR [rcx],rax
   14000ff40:	test   rax,rax
   14000ff43:	jne    0x14000ff57
   14000ff45:	and    QWORD PTR [rcx+0x8],rax
   14000ff49:	call   0x14000fe20
   14000ff4e:	mov    rax,rbx
   14000ff51:	add    rsp,0x20
   14000ff55:	pop    rbx
   14000ff56:	ret    
   14000ff57:	and    QWORD PTR [rax+0x8],0x0
   14000ff5c:	jmp    0x14000ff49
   14000ff5e:	int3   
   14000ff5f:	int3   
   14000ff60:	int3   
   14000ff61:	int3   
   14000ff62:	int3   
   14000ff63:	int3   
   14000ff64:	sub    rsp,0x28
   14000ff68:	mov    rax,QWORD PTR [rcx]
   14000ff6b:	test   rax,rax
   14000ff6e:	je     0x140028812
   14000ff74:	add    rax,0x10
   14000ff78:	add    rsp,0x28
   14000ff7c:	ret    
   14000ff7d:	int3   
   14000ff7e:	int3   
   14000ff7f:	int3   
   14000ff80:	int3   
   14000ff81:	int3   
   14000ff82:	int3   
   14000ff83:	int3   
   14000ff84:	mov    QWORD PTR [rsp+0x8],rbx
   14000ff89:	push   rdi
   14000ff8a:	sub    rsp,0x20
   14000ff8e:	lea    rdi,[rcx+0x60]
   14000ff92:	mov    rbx,rcx
   14000ff95:	mov    rcx,rdi
   14000ff98:	call   QWORD PTR [rip+0x2d42a]        # 0x14003d3c8
   14000ff9e:	mov    bl,BYTE PTR [rbx+0x119]
   14000ffa4:	mov    rcx,rdi
   14000ffa7:	call   QWORD PTR [rip+0x2d42b]        # 0x14003d3d8
   14000ffad:	mov    al,bl
   14000ffaf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ffb4:	add    rsp,0x20
   14000ffb8:	pop    rdi
   14000ffb9:	ret    
   14000ffba:	int3   
   14000ffbb:	int3   
   14000ffbc:	int3   
   14000ffbd:	int3   
   14000ffbe:	int3   
   14000ffbf:	int3   
   14000ffc0:	mov    QWORD PTR [rsp+0x10],rbx
   14000ffc5:	mov    QWORD PTR [rsp+0x18],rbp
   14000ffca:	push   rsi
   14000ffcb:	push   rdi
   14000ffcc:	push   r12
   14000ffce:	push   r14
   14000ffd0:	push   r15
   14000ffd2:	sub    rsp,0x20
   14000ffd6:	lea    rdi,[rcx+0xe0]
   14000ffdd:	mov    rbx,rcx
   14000ffe0:	mov    rcx,rdi
   14000ffe3:	call   QWORD PTR [rip+0x2d3df]        # 0x14003d3c8
   14000ffe9:	mov    rsi,QWORD PTR [rbx+0xd8]
   14000fff0:	mov    ecx,0x10
   14000fff5:	call   0x140013d94
   14000fffa:	mov    QWORD PTR [rsp+0x50],rax
   14000ffff:	test   rax,rax
   140010002:	je     0x140010010
   140010004:	and    QWORD PTR [rax],0x0
   140010008:	and    DWORD PTR [rax+0x8],0x0
   14001000c:	and    DWORD PTR [rax+0xc],0x0
   140010010:	mov    rcx,rdi
   140010013:	mov    QWORD PTR [rbx+0xd8],rax
   14001001a:	call   QWORD PTR [rip+0x2d3b8]        # 0x14003d3d8
   140010020:	lea    rcx,[rbx+0x60]
   140010024:	xor    edi,edi
   140010026:	call   QWORD PTR [rip+0x2d39c]        # 0x14003d3c8
   14001002c:	cmp    BYTE PTR [rbx+0x119],dil
   140010033:	je     0x140028823
   140010039:	cmp    BYTE PTR [rbx+0x11a],dil
   140010040:	je     0x140028823
   140010046:	mov    r12b,0x1
   140010049:	cmp    QWORD PTR [rbx+0x50],rdi
   14001004d:	je     0x14001005d
   14001004f:	mov    rdi,QWORD PTR [rbx+0x50]
   140010053:	and    QWORD PTR [rbx+0x50],0x0
   140010058:	and    QWORD PTR [rbx+0x48],0x0
   14001005d:	lea    rcx,[rbx+0x60]
   140010061:	call   QWORD PTR [rip+0x2d371]        # 0x14003d3d8
   140010067:	test   rsi,rsi
   14001006a:	je     0x140010101
   140010070:	mov    r15d,DWORD PTR [rsi+0x8]
   140010074:	xor    ebx,ebx
   140010076:	test   r15d,r15d
   140010079:	jle    0x1400100f9
   14001007b:	test   r12b,r12b
   14001007e:	je     0x1400100af
   140010080:	mov    edx,ebx
   140010082:	mov    rcx,rsi
   140010085:	call   0x14000f858
   14001008a:	mov    r14,QWORD PTR [rax]
   14001008d:	mov    rax,QWORD PTR [r14]
   140010090:	mov    rbp,QWORD PTR [rax+0x8]
   140010094:	lea    rax,[rip+0x825]        # 0x1400108c0
   14001009b:	cmp    rbp,rax
   14001009e:	jne    0x14002882b
   1400100a4:	mov    rdx,rdi
   1400100a7:	mov    rcx,r14
   1400100aa:	call   0x1400108c0
   1400100af:	mov    edx,ebx
   1400100b1:	mov    rcx,rsi
   1400100b4:	call   0x14000f858
   1400100b9:	mov    r14,QWORD PTR [rax]
   1400100bc:	test   r14,r14
   1400100bf:	je     0x1400100e4
   1400100c1:	mov    rax,QWORD PTR [r14]
   1400100c4:	mov    rbp,QWORD PTR [rax]
   1400100c7:	lea    rax,[rip+0x8d2]        # 0x1400109a0
   1400100ce:	cmp    rbp,rax
   1400100d1:	jne    0x140028842
   1400100d7:	mov    edx,0x1
   1400100dc:	mov    rcx,r14
   1400100df:	call   0x1400109a0
   1400100e4:	mov    edx,ebx
   1400100e6:	mov    rcx,rsi
   1400100e9:	call   0x14000f858
   1400100ee:	inc    ebx
   1400100f0:	and    QWORD PTR [rax],0x0
   1400100f4:	cmp    ebx,r15d
   1400100f7:	jl     0x14001007b
   1400100f9:	mov    rcx,rsi
   1400100fc:	call   0x14000facc
   140010101:	test   rdi,rdi
   140010104:	je     0x140010125
   140010106:	mov    rax,QWORD PTR [rdi]
   140010109:	mov    rbx,QWORD PTR [rax+0x10]
   14001010d:	lea    rax,[rip+0x67c]        # 0x140010790
   140010114:	cmp    rbx,rax
   140010117:	jne    0x14002885b
   14001011d:	mov    rcx,rdi
   140010120:	call   0x140010790
   140010125:	mov    rbx,QWORD PTR [rsp+0x58]
   14001012a:	mov    rbp,QWORD PTR [rsp+0x60]
   14001012f:	add    rsp,0x20
   140010133:	pop    r15
   140010135:	pop    r14
   140010137:	pop    r12
   140010139:	pop    rdi
   14001013a:	pop    rsi
   14001013b:	ret    
   14001013c:	int3   
   14001013d:	int3   
   14001013e:	int3   
   14001013f:	int3   
   140010140:	int3   
   140010141:	int3   
   140010142:	int3   
   140010143:	int3   
   140010144:	sub    rsp,0x28
   140010148:	cmp    QWORD PTR [rcx+0x48],0x0
   14001014d:	mov    eax,0x1
   140010152:	je     0x140010160
   140010154:	mov    rdx,rcx
   140010157:	mov    rcx,QWORD PTR [rcx+0x48]
   14001015b:	call   0x14000fd98
   140010160:	add    rsp,0x28
   140010164:	ret    
   140010165:	int3   
   140010166:	int3   
   140010167:	int3   
   140010168:	int3   
   140010169:	int3   
   14001016a:	int3   
   14001016b:	int3   
   14001016c:	cmp    QWORD PTR [rcx+0x48],0x0
   140010171:	je     0x14001017f
   140010173:	mov    rdx,rcx
   140010176:	mov    rcx,QWORD PTR [rcx+0x48]
   14001017a:	jmp    0x14000fbb8
   14001017f:	mov    eax,0x80004005
   140010184:	ret    
   140010185:	int3   
   140010186:	int3   
   140010187:	int3   
   140010188:	int3   
   140010189:	int3   
   14001018a:	int3   
   14001018b:	int3   
   14001018c:	mov    rax,rsp
   14001018f:	mov    QWORD PTR [rax+0x8],rcx
   140010193:	push   rsi
   140010194:	push   rdi
   140010195:	push   r14
   140010197:	sub    rsp,0x30
   14001019b:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400101a3:	mov    QWORD PTR [rax+0x10],rbx
   1400101a7:	mov    QWORD PTR [rax+0x18],rbp
   1400101ab:	mov    rdi,rcx
   1400101ae:	add    rcx,0xe0
   1400101b5:	call   QWORD PTR [rip+0x2d20d]        # 0x14003d3c8
   1400101bb:	mov    rbp,QWORD PTR [rdi+0xd8]
   1400101c2:	xor    esi,esi
   1400101c4:	cmp    DWORD PTR [rbp+0x8],esi
   1400101c7:	jg     0x140028870
   1400101cd:	lea    rcx,[rdi+0xe0]
   1400101d4:	call   QWORD PTR [rip+0x2d1fe]        # 0x14003d3d8
   1400101da:	nop
   1400101db:	mov    rbx,QWORD PTR [rdi+0x110]
   1400101e2:	lea    rbp,[rip+0xffffffffffffc4c7]        # 0x14000c6b0
   1400101e9:	lea    r14,[rip+0xffffffffffffc2f0]        # 0x14000c4e0
   1400101f0:	test   rbx,rbx
   1400101f3:	je     0x14001020e
   1400101f5:	mov    rax,QWORD PTR [rbx]
   1400101f8:	mov    rsi,QWORD PTR [rax+0x10]
   1400101fc:	cmp    rsi,r14
   1400101ff:	jne    0x1400102ca
   140010205:	mov    rcx,rbx
   140010208:	call   0x14000c4e0
   14001020d:	nop
   14001020e:	mov    rbx,QWORD PTR [rdi+0x108]
   140010215:	test   rbx,rbx
   140010218:	je     0x140010233
   14001021a:	mov    rax,QWORD PTR [rbx]
   14001021d:	mov    rsi,QWORD PTR [rax+0x10]
   140010221:	cmp    rsi,r14
   140010224:	jne    0x1400102dc
   14001022a:	mov    rcx,rbx
   14001022d:	call   0x14000c4e0
   140010232:	nop
   140010233:	lea    rbx,[rdi+0xe0]
   14001023a:	mov    rcx,rbx
   14001023d:	call   QWORD PTR [rip+0x2d185]        # 0x14003d3c8
   140010243:	mov    rcx,QWORD PTR [rdi+0xd8]
   14001024a:	test   rcx,rcx
   14001024d:	je     0x140010254
   14001024f:	call   0x14000facc
   140010254:	and    QWORD PTR [rdi+0xd8],0x0
   14001025c:	mov    rcx,rbx
   14001025f:	call   QWORD PTR [rip+0x2d173]        # 0x14003d3d8
   140010265:	mov    rcx,rbx
   140010268:	call   QWORD PTR [rip+0x2d14a]        # 0x14003d3b8
   14001026e:	nop
   14001026f:	lea    rcx,[rdi+0xb0]
   140010276:	call   QWORD PTR [rip+0x2d13c]        # 0x14003d3b8
   14001027c:	nop
   14001027d:	lea    rcx,[rdi+0x88]
   140010284:	call   QWORD PTR [rip+0x2d12e]        # 0x14003d3b8
   14001028a:	nop
   14001028b:	lea    rcx,[rdi+0x60]
   14001028f:	call   QWORD PTR [rip+0x2d123]        # 0x14003d3b8
   140010295:	nop
   140010296:	mov    rsi,QWORD PTR [rdi+0x58]
   14001029a:	test   rsi,rsi
   14001029d:	jne    0x1400288b5
   1400102a3:	lea    rcx,[rdi+0x18]
   1400102a7:	cmp    BYTE PTR [rcx+0x28],0x0
   1400102ab:	je     0x1400102b7
   1400102ad:	mov    BYTE PTR [rcx+0x28],0x0
   1400102b1:	call   QWORD PTR [rip+0x2d101]        # 0x14003d3b8
   1400102b7:	mov    rbx,QWORD PTR [rsp+0x58]
   1400102bc:	mov    rbp,QWORD PTR [rsp+0x60]
   1400102c1:	add    rsp,0x30
   1400102c5:	pop    r14
   1400102c7:	pop    rdi
   1400102c8:	pop    rsi
   1400102c9:	ret    
   1400102ca:	cmp    rsi,rbp
   1400102cd:	jne    0x1400102ee
   1400102cf:	mov    rcx,rbx
   1400102d2:	call   0x14000c6b0
   1400102d7:	jmp    0x14001020e
   1400102dc:	cmp    rsi,rbp
   1400102df:	jne    0x140010301
   1400102e1:	mov    rcx,rbx
   1400102e4:	call   0x14000c6b0
   1400102e9:	jmp    0x140010233
   1400102ee:	mov    rcx,rsi
   1400102f1:	call   QWORD PTR [rip+0x2d431]        # 0x14003d728
   1400102f7:	mov    rcx,rbx
   1400102fa:	call   rsi
   1400102fc:	jmp    0x14001020e
   140010301:	mov    rcx,rsi
   140010304:	call   QWORD PTR [rip+0x2d41e]        # 0x14003d728
   14001030a:	mov    rcx,rbx
   14001030d:	call   rsi
   14001030f:	jmp    0x140010233
   140010314:	int3   
   140010315:	int3   
   140010316:	int3   
   140010317:	int3   
   140010318:	int3   
   140010319:	int3   
   14001031a:	int3   
   14001031b:	int3   
   14001031c:	mov    QWORD PTR [rsp+0x8],rbx
   140010321:	mov    QWORD PTR [rsp+0x10],rsi
   140010326:	mov    QWORD PTR [rsp+0x18],rdi
   14001032b:	push   r14
   14001032d:	sub    rsp,0x20
   140010331:	lea    rsi,[rcx+0x60]
   140010335:	mov    rdi,rcx
   140010338:	mov    rcx,rsi
   14001033b:	call   QWORD PTR [rip+0x2d087]        # 0x14003d3c8
   140010341:	cmp    BYTE PTR [rdi+0x119],0x0
   140010348:	je     0x1400288d2
   14001034e:	mov    r14,QWORD PTR [rdi+0x50]
   140010352:	test   r14,r14
   140010355:	jne    0x14002890c
   14001035b:	mov    rcx,rsi
   14001035e:	mov    rbx,QWORD PTR [rsp+0x30]
   140010363:	mov    rsi,QWORD PTR [rsp+0x38]
   140010368:	mov    rdi,QWORD PTR [rsp+0x40]
   14001036d:	add    rsp,0x20
   140010371:	pop    r14
   140010373:	rex.W jmp QWORD PTR [rip+0x2d05e]        # 0x14003d3d8
   14001037a:	int3   
   14001037b:	int3   
   14001037c:	int3   
   14001037d:	int3   
   14001037e:	int3   
   14001037f:	int3   
   140010380:	mov    rax,rsp
   140010383:	mov    QWORD PTR [rax+0x8],rcx
   140010387:	push   rdi
   140010388:	sub    rsp,0x30
   14001038c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140010394:	mov    QWORD PTR [rax+0x18],rbx
   140010398:	mov    QWORD PTR [rax+0x20],rsi
   14001039c:	mov    rdi,rcx
   14001039f:	xor    esi,esi
   1400103a1:	mov    DWORD PTR [rcx+0x10],esi
   1400103a4:	xor    edx,edx
   1400103a6:	lea    r8d,[rsi+0x28]
   1400103aa:	add    rcx,0x18
   1400103ae:	call   0x140014694
   1400103b3:	mov    BYTE PTR [rdi+0x40],sil
   1400103b7:	mov    QWORD PTR [rdi+0x48],rsi
   1400103bb:	mov    QWORD PTR [rdi+0x50],rsi
   1400103bf:	mov    QWORD PTR [rdi+0x58],rsi
   1400103c3:	lea    rcx,[rdi+0x60]
   1400103c7:	call   0x14000db2c
   1400103cc:	nop
   1400103cd:	lea    rcx,[rdi+0x88]
   1400103d4:	call   0x14000db2c
   1400103d9:	nop
   1400103da:	lea    rcx,[rdi+0xb0]
   1400103e1:	call   0x14000db2c
   1400103e6:	nop
   1400103e7:	lea    rbx,[rdi+0xd8]
   1400103ee:	mov    QWORD PTR [rsp+0x48],rbx
   1400103f3:	mov    QWORD PTR [rbx],rsi
   1400103f6:	lea    rcx,[rbx+0x8]
   1400103fa:	call   0x14000db2c
   1400103ff:	nop
   140010400:	lea    ecx,[rsi+0x10]
   140010403:	call   0x140013d94
   140010408:	mov    QWORD PTR [rsp+0x40],rax
   14001040d:	test   rax,rax
   140010410:	je     0x140010454
   140010412:	mov    QWORD PTR [rax],rsi
   140010415:	mov    QWORD PTR [rax+0x8],rsi
   140010419:	mov    QWORD PTR [rbx],rax
   14001041c:	mov    QWORD PTR [rdi+0x108],rsi
   140010423:	mov    QWORD PTR [rdi+0x110],rsi
   14001042a:	mov    WORD PTR [rdi+0x118],0x1
   140010433:	mov    BYTE PTR [rdi+0x11a],sil
   14001043a:	mov    QWORD PTR [rdi+0x120],rsi
   140010441:	mov    rax,rdi
   140010444:	mov    rbx,QWORD PTR [rsp+0x50]
   140010449:	mov    rsi,QWORD PTR [rsp+0x58]
   14001044e:	add    rsp,0x30
   140010452:	pop    rdi
   140010453:	ret    
   140010454:	mov    rax,rsi
   140010457:	jmp    0x140010419
   140010459:	int3   
   14001045a:	int3   
   14001045b:	int3   
   14001045c:	int3   
   14001045d:	int3   
   14001045e:	int3   
   14001045f:	int3   
   140010460:	mov    QWORD PTR [rsp+0x8],rbx
   140010465:	mov    QWORD PTR [rsp+0x10],rbp
   14001046a:	mov    QWORD PTR [rsp+0x18],rsi
   14001046f:	push   rdi
   140010470:	push   r12
   140010472:	push   r13
   140010474:	push   r14
   140010476:	push   r15
   140010478:	sub    rsp,0x20
   14001047c:	mov    rbp,rcx
   14001047f:	mov    ebx,r8d
   140010482:	add    rcx,0x60
   140010486:	mov    r12,rdx
   140010489:	call   QWORD PTR [rip+0x2cf39]        # 0x14003d3c8
   14001048f:	xor    edi,edi
   140010491:	cmp    BYTE PTR [rbp+0x119],dil
   140010498:	jne    0x14002897c
   14001049e:	cmp    BYTE PTR [rbp+0x11a],dil
   1400104a5:	jne    0x14002897c
   1400104ab:	cmp    ebx,0x1
   1400104ae:	lea    r14,[rbp+0x50]
   1400104b2:	mov    rdx,r14
   1400104b5:	sete   cl
   1400104b8:	call   0x140013868
   1400104bd:	mov    r15,QWORD PTR [r14]
   1400104c0:	test   r15,r15
   1400104c3:	je     0x14002892c
   1400104c9:	cmp    BYTE PTR [rbp+0x118],dil
   1400104d0:	jne    0x140028953
   1400104d6:	lea    rcx,[rbp+0x108]
   1400104dd:	call   0x14000ca70
   1400104e2:	lea    rcx,[rbp+0x110]
   1400104e9:	call   0x14000ca70
   1400104ee:	mov    rcx,QWORD PTR [r14]
   1400104f1:	lea    rdx,[rbp+0x48]
   1400104f5:	call   0x1400117d4
   1400104fa:	mov    ebx,eax
   1400104fc:	test   ebx,ebx
   1400104fe:	js     0x140028931
   140010504:	mov    rcx,rbp
   140010507:	call   0x14001016c
   14001050c:	mov    ebx,eax
   14001050e:	test   eax,eax
   140010510:	js     0x140028931
   140010516:	lea    rdi,[rbp+0xb0]
   14001051d:	mov    rcx,rdi
   140010520:	call   QWORD PTR [rip+0x2cea2]        # 0x14003d3c8
   140010526:	lea    rcx,[rbp+0x58]
   14001052a:	cmp    QWORD PTR [rcx],r12
   14001052d:	jne    0x140028986
   140010533:	mov    rcx,rdi
   140010536:	call   QWORD PTR [rip+0x2ce9c]        # 0x14003d3d8
   14001053c:	mov    BYTE PTR [rbp+0x11a],0x1
   140010543:	lea    rcx,[rbp+0x60]
   140010547:	call   QWORD PTR [rip+0x2ce8b]        # 0x14003d3d8
   14001054d:	mov    rcx,rbp
   140010550:	call   0x140010144
   140010555:	mov    rbp,QWORD PTR [rsp+0x58]
   14001055a:	mov    eax,ebx
   14001055c:	mov    rbx,QWORD PTR [rsp+0x50]
   140010561:	mov    rsi,QWORD PTR [rsp+0x60]
   140010566:	add    rsp,0x20
   14001056a:	pop    r15
   14001056c:	pop    r14
   14001056e:	pop    r13
   140010570:	pop    r12
   140010572:	pop    rdi
   140010573:	ret    
   140010574:	int3   
   140010575:	int3   
   140010576:	int3   
   140010577:	int3   
   140010578:	int3   
   140010579:	int3   
   14001057a:	int3   
   14001057b:	int3   
   14001057c:	int3   
   14001057d:	int3   
   14001057e:	int3   
   14001057f:	int3   
   140010580:	mov    QWORD PTR [rsp+0x8],rbx
   140010585:	mov    QWORD PTR [rsp+0x10],rsi
   14001058a:	push   rdi
   14001058b:	sub    rsp,0x20
   14001058f:	mov    rdi,rcx
   140010592:	xor    esi,esi
   140010594:	add    rcx,0x60
   140010598:	call   QWORD PTR [rip+0x2ce2a]        # 0x14003d3c8
   14001059e:	cmp    BYTE PTR [rdi+0x119],sil
   1400105a5:	jne    0x1400105ff
   1400105a7:	cmp    BYTE PTR [rdi+0x11a],sil
   1400105ae:	je     0x1400105ff
   1400105b0:	mov    WORD PTR [rdi+0x119],0x101
   1400105b9:	lea    rcx,[rdi+0x60]
   1400105bd:	call   QWORD PTR [rip+0x2ce15]        # 0x14003d3d8
   1400105c3:	lea    rbx,[rdi+0xb0]
   1400105ca:	mov    rcx,rbx
   1400105cd:	call   QWORD PTR [rip+0x2cdf5]        # 0x14003d3c8
   1400105d3:	lea    rcx,[rdi+0x58]
   1400105d7:	call   0x14000ddec
   1400105dc:	mov    rcx,rbx
   1400105df:	call   QWORD PTR [rip+0x2cdf3]        # 0x14003d3d8
   1400105e5:	mov    rcx,rdi
   1400105e8:	call   0x140010144
   1400105ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400105f2:	mov    eax,esi
   1400105f4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400105f9:	add    rsp,0x20
   1400105fd:	pop    rdi
   1400105fe:	ret    
   1400105ff:	mov    esi,0x80070005
   140010604:	jmp    0x1400105b9
   140010606:	int3   
   140010607:	int3   
   140010608:	int3   
   140010609:	int3   
   14001060a:	int3   
   14001060b:	int3   
   14001060c:	int3   
   14001060d:	int3   
   14001060e:	int3   
   14001060f:	int3   
   140010610:	test   edx,edx
   140010612:	setne  al
   140010615:	mov    BYTE PTR [rcx+0x118],al
   14001061b:	xor    eax,eax
   14001061d:	ret    
   14001061e:	int3   
   14001061f:	int3   
   140010620:	int3   
   140010621:	int3   
   140010622:	int3   
   140010623:	int3   
   140010624:	int3   
   140010625:	int3   
   140010626:	int3   
   140010627:	int3   
   140010628:	int3   
   140010629:	int3   
   14001062a:	int3   
   14001062b:	int3   
   14001062c:	int3   
   14001062d:	int3   
   14001062e:	int3   
   14001062f:	int3   
   140010630:	mov    rax,rsp
   140010633:	push   rdi
   140010634:	push   r12
   140010636:	push   r13
   140010638:	push   r14
   14001063a:	push   r15
   14001063c:	sub    rsp,0x40
   140010640:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140010648:	mov    QWORD PTR [rax+0x10],rbx
   14001064c:	mov    QWORD PTR [rax+0x18],rbp
   140010650:	mov    QWORD PTR [rax+0x20],rsi
   140010654:	movzx  ebp,r9w
   140010658:	mov    r12d,r8d
   14001065b:	mov    r13,rdx
   14001065e:	mov    rsi,rcx
   140010661:	mov    rax,QWORD PTR [rcx]
   140010664:	mov    rbx,QWORD PTR [rax+0x68]
   140010668:	lea    rax,[rip+0xffffffffffffffa1]        # 0x140010610
   14001066f:	cmp    rbx,rax
   140010672:	jne    0x140028994
   140010678:	xor    edx,edx
   14001067a:	call   0x140010610
   14001067f:	mov    rax,QWORD PTR [rsi]
   140010682:	mov    rbx,QWORD PTR [rax+0x50]
   140010686:	lea    rax,[rip+0xfffffffffffffdd3]        # 0x140010460
   14001068d:	cmp    rbx,rax
   140010690:	jne    0x1400289aa
   140010696:	xor    r8d,r8d
   140010699:	xor    edx,edx
   14001069b:	mov    rcx,rsi
   14001069e:	call   0x140010460
   1400106a3:	mov    edi,eax
   1400106a5:	xor    ebx,ebx
   1400106a7:	test   eax,eax
   1400106a9:	js     0x140028acf
   1400106af:	mov    r14d,ebx
   1400106b2:	test   bp,bp
   1400106b5:	jne    0x1400289c3
   1400106bb:	mov    ecx,0x20
   1400106c0:	call   0x140013d94
   1400106c5:	mov    QWORD PTR [rsp+0x70],rax
   1400106ca:	test   rax,rax
   1400106cd:	je     0x140028a6b
   1400106d3:	mov    r9,r14
   1400106d6:	mov    r8d,r12d
   1400106d9:	mov    rdx,r13
   1400106dc:	mov    rcx,rax
   1400106df:	call   0x1400109d8
   1400106e4:	mov    r15,rax
   1400106e7:	test   r15,r15
   1400106ea:	je     0x140028a73
   1400106f0:	mov    r14,rbx
   1400106f3:	test   edi,edi
   1400106f5:	js     0x140010716
   1400106f7:	mov    QWORD PTR [rsp+0x70],r15
   1400106fc:	lea    rcx,[rsi+0xd8]
   140010703:	lea    rdx,[rsp+0x70]
   140010708:	call   0x14000fb08
   14001070d:	test   eax,eax
   14001070f:	je     0x140010779
   140010711:	mov    edi,ebx
   140010713:	mov    r15,rbx
   140010716:	test   r15,r15
   140010719:	jne    0x140028a7d
   14001071f:	test   r14,r14
   140010722:	jne    0x140028a9c
   140010728:	test   edi,edi
   14001072a:	js     0x140028acf
   140010730:	mov    rax,QWORD PTR [rsi]
   140010733:	mov    rbx,QWORD PTR [rax+0x58]
   140010737:	lea    rax,[rip+0xfffffffffffffe42]        # 0x140010580
   14001073e:	cmp    rbx,rax
   140010741:	jne    0x140028abb
   140010747:	mov    rcx,rsi
   14001074a:	call   0x140010580
   14001074f:	mov    edi,eax
   140010751:	test   eax,eax
   140010753:	js     0x140028acf
   140010759:	mov    eax,edi
   14001075b:	lea    r11,[rsp+0x40]
   140010760:	mov    rbx,QWORD PTR [r11+0x38]
   140010764:	mov    rbp,QWORD PTR [r11+0x40]
   140010768:	mov    rsi,QWORD PTR [r11+0x48]
   14001076c:	mov    rsp,r11
   14001076f:	pop    r15
   140010771:	pop    r14
   140010773:	pop    r13
   140010775:	pop    r12
   140010777:	pop    rdi
   140010778:	ret    
   140010779:	mov    edi,0x8007000e
   14001077e:	jmp    0x140010716
   140010780:	int3   
   140010781:	int3   
   140010782:	int3   
   140010783:	int3   
   140010784:	int3   
   140010785:	int3   
   140010786:	int3   
   140010787:	int3   
   140010788:	int3   
   140010789:	int3   
   14001078a:	int3   
   14001078b:	int3   
   14001078c:	int3   
   14001078d:	int3   
   14001078e:	int3   
   14001078f:	int3   
   140010790:	mov    rax,rsp
   140010793:	push   r14
   140010795:	sub    rsp,0x30
   140010799:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400107a1:	mov    QWORD PTR [rax+0x8],rbx
   1400107a5:	mov    QWORD PTR [rax+0x10],rsi
   1400107a9:	mov    QWORD PTR [rax+0x18],rdi
   1400107ad:	mov    r14,rcx
   1400107b0:	or     esi,0xffffffff
   1400107b3:	lock xadd DWORD PTR [rcx+0x90],esi
   1400107bb:	sub    esi,0x1
   1400107be:	je     0x140028aea
   1400107c4:	mov    eax,esi
   1400107c6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400107cb:	mov    rsi,QWORD PTR [rsp+0x48]
   1400107d0:	mov    rdi,QWORD PTR [rsp+0x50]
   1400107d5:	add    rsp,0x30
   1400107d9:	pop    r14
   1400107db:	ret    
   1400107dc:	int3   
   1400107dd:	int3   
   1400107de:	int3   
   1400107df:	int3   
   1400107e0:	int3   
   1400107e1:	int3   
   1400107e2:	int3   
   1400107e3:	int3   
   1400107e4:	int3   
   1400107e5:	int3   
   1400107e6:	int3   
   1400107e7:	int3   
   1400107e8:	int3   
   1400107e9:	int3   
   1400107ea:	int3   
   1400107eb:	int3   
   1400107ec:	int3   
   1400107ed:	int3   
   1400107ee:	int3   
   1400107ef:	int3   
   1400107f0:	mov    r9,r8
   1400107f3:	mov    r8,rdx
   1400107f6:	lea    rdx,[rip+0x31fa3]        # 0x1400427a0
   1400107fd:	jmp    0x14000c260
   140010802:	int3   
   140010803:	int3   
   140010804:	int3   
   140010805:	int3   
   140010806:	int3   
   140010807:	int3   
   140010808:	int3   
   140010809:	int3   
   14001080a:	int3   
   14001080b:	int3   
   14001080c:	int3   
   14001080d:	int3   
   14001080e:	int3   
   14001080f:	int3   
   140010810:	mov    eax,0x1
   140010815:	lock xadd DWORD PTR [rcx+0x90],eax
   14001081d:	inc    eax
   14001081f:	ret    
   140010820:	int3   
   140010821:	int3   
   140010822:	int3   
   140010823:	int3   
   140010824:	int3   
   140010825:	int3   
   140010826:	int3   
   140010827:	int3   
   140010828:	mov    rax,rsp
   14001082b:	mov    QWORD PTR [rax+0x8],rcx
   14001082f:	push   rdi
   140010830:	sub    rsp,0x30
   140010834:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001083c:	mov    QWORD PTR [rax+0x10],rbx
   140010840:	mov    QWORD PTR [rax+0x18],rsi
   140010844:	mov    rbx,rcx
   140010847:	call   0x1400112ec
   14001084c:	nop
   14001084d:	lea    rax,[rip+0x2eaf4]        # 0x14003f348
   140010854:	mov    QWORD PTR [rbx],rax
   140010857:	lea    rax,[rip+0x2eaba]        # 0x14003f318
   14001085e:	mov    QWORD PTR [rbx+0x78],rax
   140010862:	lea    rax,[rip+0x2ea5f]        # 0x14003f2c8
   140010869:	mov    QWORD PTR [rbx+0x80],rax
   140010870:	lea    rax,[rip+0x2ea31]        # 0x14003f2a8
   140010877:	mov    QWORD PTR [rbx+0x88],rax
   14001087e:	mov    rdi,QWORD PTR [rip+0x3e2db]        # 0x14004eb60
   140010885:	mov    rax,QWORD PTR [rdi]
   140010888:	mov    rsi,QWORD PTR [rax+0x8]
   14001088c:	lea    rax,[rip+0xffffffffffffbfad]        # 0x14000c840
   140010893:	cmp    rsi,rax
   140010896:	jne    0x140028b4a
   14001089c:	mov    rcx,rdi
   14001089f:	call   0x14000c840
   1400108a4:	nop
   1400108a5:	mov    rax,rbx
   1400108a8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400108ad:	mov    rsi,QWORD PTR [rsp+0x50]
   1400108b2:	add    rsp,0x30
   1400108b6:	pop    rdi
   1400108b7:	ret    
   1400108b8:	int3   
   1400108b9:	int3   
   1400108ba:	int3   
   1400108bb:	int3   
   1400108bc:	int3   
   1400108bd:	int3   
   1400108be:	int3   
   1400108bf:	int3   
   1400108c0:	mov    rax,rsp
   1400108c3:	mov    QWORD PTR [rax+0x8],rbx
   1400108c7:	mov    QWORD PTR [rax+0x10],rbp
   1400108cb:	mov    QWORD PTR [rax+0x18],rsi
   1400108cf:	mov    QWORD PTR [rax+0x20],rdi
   1400108d3:	push   r14
   1400108d5:	sub    rsp,0x20
   1400108d9:	mov    rax,QWORD PTR [rdx]
   1400108dc:	mov    rsi,rdx
   1400108df:	mov    ebp,DWORD PTR [rcx+0x10]
   1400108e2:	mov    rdi,rcx
   1400108e5:	mov    r14,QWORD PTR [rcx+0x8]
   1400108e9:	mov    rbx,QWORD PTR [rax+0x28]
   1400108ed:	lea    rax,[rip+0x13c]        # 0x140010a30
   1400108f4:	cmp    rbx,rax
   1400108f7:	jne    0x140028b60
   1400108fd:	mov    r8d,ebp
   140010900:	mov    rdx,r14
   140010903:	mov    rcx,rsi
   140010906:	call   0x140010a30
   14001090b:	cmp    QWORD PTR [rdi+0x18],0x0
   140010910:	jne    0x140028b7a
   140010916:	mov    rbx,QWORD PTR [rsp+0x30]
   14001091b:	mov    rbp,QWORD PTR [rsp+0x38]
   140010920:	mov    rsi,QWORD PTR [rsp+0x40]
   140010925:	mov    rdi,QWORD PTR [rsp+0x48]
   14001092a:	add    rsp,0x20
   14001092e:	pop    r14
   140010930:	ret    
   140010931:	int3   
   140010932:	int3   
   140010933:	int3   
   140010934:	int3   
   140010935:	int3   
   140010936:	int3   
   140010937:	int3   
   140010938:	mov    rax,rsp
   14001093b:	mov    QWORD PTR [rax+0x8],rcx
   14001093f:	push   rdi
   140010940:	sub    rsp,0x30
   140010944:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001094c:	mov    QWORD PTR [rax+0x10],rbx
   140010950:	mov    QWORD PTR [rax+0x18],rsi
   140010954:	mov    rdi,rcx
   140010957:	lea    rax,[rip+0x2e83a]        # 0x14003f198
   14001095e:	mov    QWORD PTR [rcx],rax
   140010961:	mov    rsi,QWORD PTR [rcx+0x18]
   140010965:	test   rsi,rsi
   140010968:	jne    0x140028bbe
   14001096e:	mov    rcx,QWORD PTR [rdi+0x8]
   140010972:	call   QWORD PTR [rip+0x42748]        # 0x1400530c0
   140010978:	nop
   140010979:	lea    rax,[rip+0x2e808]        # 0x14003f188
   140010980:	mov    QWORD PTR [rdi],rax
   140010983:	mov    rbx,QWORD PTR [rsp+0x48]
   140010988:	mov    rsi,QWORD PTR [rsp+0x50]
   14001098d:	add    rsp,0x30
   140010991:	pop    rdi
   140010992:	ret    
   140010993:	int3   
   140010994:	int3   
   140010995:	int3   
   140010996:	int3   
   140010997:	int3   
   140010998:	int3   
   140010999:	int3   
   14001099a:	int3   
   14001099b:	int3   
   14001099c:	int3   
   14001099d:	int3   
   14001099e:	int3   
   14001099f:	int3   
   1400109a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400109a5:	push   rdi
   1400109a6:	sub    rsp,0x20
   1400109aa:	mov    ebx,edx
   1400109ac:	mov    rdi,rcx
   1400109af:	call   0x140010938
   1400109b4:	test   bl,0x1
   1400109b7:	je     0x1400109c1
   1400109b9:	mov    rcx,rdi
   1400109bc:	call   0x140013de0
   1400109c1:	mov    rax,rdi
   1400109c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400109c9:	add    rsp,0x20
   1400109cd:	pop    rdi
   1400109ce:	ret    
   1400109cf:	int3   
   1400109d0:	int3   
   1400109d1:	int3   
   1400109d2:	int3   
   1400109d3:	int3   
   1400109d4:	int3   
   1400109d5:	int3   
   1400109d6:	int3   
   1400109d7:	int3   
   1400109d8:	mov    rax,rsp
   1400109db:	mov    QWORD PTR [rax+0x8],rcx
   1400109df:	push   rdi
   1400109e0:	sub    rsp,0x30
   1400109e4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400109ec:	mov    QWORD PTR [rax+0x10],rbx
   1400109f0:	mov    QWORD PTR [rax+0x18],rsi
   1400109f4:	mov    rsi,r9
   1400109f7:	mov    ebx,r8d
   1400109fa:	mov    rdi,rcx
   1400109fd:	lea    rax,[rip+0x2e794]        # 0x14003f198
   140010a04:	mov    QWORD PTR [rcx],rax
   140010a07:	add    rcx,0x8
   140010a0b:	call   0x140011678
   140010a10:	mov    DWORD PTR [rdi+0x10],ebx
   140010a13:	mov    QWORD PTR [rdi+0x18],rsi
   140010a17:	mov    rax,rdi
   140010a1a:	mov    rbx,QWORD PTR [rsp+0x48]
   140010a1f:	mov    rsi,QWORD PTR [rsp+0x50]
   140010a24:	add    rsp,0x30
   140010a28:	pop    rdi
   140010a29:	ret    
   140010a2a:	int3   
   140010a2b:	int3   
   140010a2c:	int3   
   140010a2d:	int3   
   140010a2e:	int3   
   140010a2f:	int3   
   140010a30:	mov    rax,rsp
   140010a33:	mov    QWORD PTR [rax+0x8],rbx
   140010a37:	mov    QWORD PTR [rax+0x10],rbp
   140010a3b:	mov    QWORD PTR [rax+0x18],rsi
   140010a3f:	mov    QWORD PTR [rax+0x20],rdi
   140010a43:	push   r12
   140010a45:	push   r14
   140010a47:	push   r15
   140010a49:	sub    rsp,0x30
   140010a4d:	lea    rsi,[rcx+0xd8]
   140010a54:	mov    rbp,rcx
   140010a57:	mov    rcx,rsi
   140010a5a:	mov    r15d,r8d
   140010a5d:	mov    r12,rdx
   140010a60:	call   QWORD PTR [rip+0x2c962]        # 0x14003d3c8
   140010a66:	mov    rdi,QWORD PTR [rbp+0xc8]
   140010a6d:	test   rdi,rdi
   140010a70:	je     0x140010a87
   140010a72:	mov    rax,QWORD PTR [rdi]
   140010a75:	mov    rbx,QWORD PTR [rax+0x8]
   140010a79:	mov    rcx,rbx
   140010a7c:	call   QWORD PTR [rip+0x2cca6]        # 0x14003d728
   140010a82:	mov    rcx,rdi
   140010a85:	call   rbx
   140010a87:	mov    rcx,rsi
   140010a8a:	call   QWORD PTR [rip+0x2c948]        # 0x14003d3d8
   140010a90:	mov    esi,0x80004005
   140010a95:	test   rdi,rdi
   140010a98:	je     0x140010af5
   140010a9a:	mov    rax,QWORD PTR [rdi]
   140010a9d:	mov    rbx,QWORD PTR [rax+0x28]
   140010aa1:	mov    rcx,rbx
   140010aa4:	call   QWORD PTR [rip+0x2cc7e]        # 0x14003d728
   140010aaa:	mov    r8d,r15d
   140010aad:	mov    rdx,r12
   140010ab0:	mov    rcx,rdi
   140010ab3:	call   rbx
   140010ab5:	xor    r14d,r14d
   140010ab8:	mov    esi,eax
   140010aba:	cmp    eax,0x8001010a
   140010abf:	je     0x140028be2
   140010ac5:	mov    rax,QWORD PTR [rdi]
   140010ac8:	mov    rbx,QWORD PTR [rax+0x10]
   140010acc:	mov    rcx,rbx
   140010acf:	call   QWORD PTR [rip+0x2cc53]        # 0x14003d728
   140010ad5:	mov    rcx,rdi
   140010ad8:	call   rbx
   140010ada:	lea    eax,[rsi+0x7ffefef6]
   140010ae0:	cmp    eax,0x1
   140010ae3:	jbe    0x140028c1a
   140010ae9:	cmp    esi,0x80070005
   140010aef:	je     0x140028c1a
   140010af5:	mov    rbx,QWORD PTR [rsp+0x50]
   140010afa:	mov    eax,esi
   140010afc:	mov    rsi,QWORD PTR [rsp+0x60]
   140010b01:	mov    rbp,QWORD PTR [rsp+0x58]
   140010b06:	mov    rdi,QWORD PTR [rsp+0x68]
   140010b0b:	add    rsp,0x30
   140010b0f:	pop    r15
   140010b11:	pop    r14
   140010b13:	pop    r12
   140010b15:	ret    
   140010b16:	int3   
   140010b17:	int3   
   140010b18:	int3   
   140010b19:	int3   
   140010b1a:	int3   
   140010b1b:	int3   
   140010b1c:	int3   
   140010b1d:	int3   
   140010b1e:	int3   
   140010b1f:	int3   
   140010b20:	mov    QWORD PTR [rsp+0x8],rbx
   140010b25:	mov    QWORD PTR [rsp+0x10],rbp
   140010b2a:	mov    QWORD PTR [rsp+0x18],rsi
   140010b2f:	push   rdi
   140010b30:	push   r14
   140010b32:	push   r15
   140010b34:	sub    rsp,0x20
   140010b38:	lea    rbp,[rcx+0xd8]
   140010b3f:	mov    rsi,rcx
   140010b42:	mov    rcx,rbp
   140010b45:	mov    r15,r9
   140010b48:	mov    rdi,r8
   140010b4b:	mov    rbx,rdx
   140010b4e:	call   QWORD PTR [rip+0x2c874]        # 0x14003d3c8
   140010b54:	mov    eax,DWORD PTR [rsi+0x118]
   140010b5a:	mov    DWORD PTR [rbx],eax
   140010b5c:	mov    r14,QWORD PTR [rsi+0x108]
   140010b63:	mov    QWORD PTR [rdi],r14
   140010b66:	test   r14,r14
   140010b69:	jne    0x140028c56
   140010b6f:	mov    rdi,QWORD PTR [rsi+0x110]
   140010b76:	mov    QWORD PTR [r15],rdi
   140010b79:	test   rdi,rdi
   140010b7c:	je     0x140010b93
   140010b7e:	mov    rax,QWORD PTR [rdi]
   140010b81:	mov    rbx,QWORD PTR [rax+0x8]
   140010b85:	mov    rcx,rbx
   140010b88:	call   QWORD PTR [rip+0x2cb9a]        # 0x14003d728
   140010b8e:	mov    rcx,rdi
   140010b91:	call   rbx
   140010b93:	mov    rdx,QWORD PTR [rsi+0x188]
   140010b9a:	mov    rcx,rbp
   140010b9d:	mov    rax,QWORD PTR [rsp+0x60]
   140010ba2:	mov    QWORD PTR [rax],rdx
   140010ba5:	mov    rax,QWORD PTR [rsp+0x68]
   140010baa:	mov    rdx,QWORD PTR [rsi+0x190]
   140010bb1:	mov    QWORD PTR [rax],rdx
   140010bb4:	mov    rbx,QWORD PTR [rsp+0x40]
   140010bb9:	mov    rbp,QWORD PTR [rsp+0x48]
   140010bbe:	mov    rsi,QWORD PTR [rsp+0x50]
   140010bc3:	add    rsp,0x20
   140010bc7:	pop    r15
   140010bc9:	pop    r14
   140010bcb:	pop    rdi
   140010bcc:	rex.W jmp QWORD PTR [rip+0x2c805]        # 0x14003d3d8
   140010bd3:	int3   
   140010bd4:	int3   
   140010bd5:	int3   
   140010bd6:	int3   
   140010bd7:	int3   
   140010bd8:	int3   
   140010bd9:	int3   
   140010bda:	int3   
   140010bdb:	int3   
   140010bdc:	int3   
   140010bdd:	int3   
   140010bde:	int3   
   140010bdf:	int3   
   140010be0:	mov    rax,rsp
   140010be3:	mov    QWORD PTR [rax+0x8],rbx
   140010be7:	mov    QWORD PTR [rax+0x10],rsi
   140010beb:	mov    QWORD PTR [rax+0x18],rdi
   140010bef:	mov    QWORD PTR [rax+0x20],r14
   140010bf3:	push   r15
   140010bf5:	sub    rsp,0x20
   140010bf9:	lea    rsi,[rcx+0xd8]
   140010c00:	mov    rdi,rcx
   140010c03:	mov    rcx,rsi
   140010c06:	mov    r15,r9
   140010c09:	mov    r14,r8
   140010c0c:	mov    rbx,rdx
   140010c0f:	call   QWORD PTR [rip+0x2c7b3]        # 0x14003d3c8
   140010c15:	mov    al,BYTE PTR [rdi+0x198]
   140010c1b:	mov    rcx,rsi
   140010c1e:	mov    BYTE PTR [rbx],al
   140010c20:	mov    eax,DWORD PTR [rdi+0x19c]
   140010c26:	mov    DWORD PTR [r14],eax
   140010c29:	mov    eax,DWORD PTR [rdi+0x1a0]
   140010c2f:	mov    DWORD PTR [r15],eax
   140010c32:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c37:	mov    rsi,QWORD PTR [rsp+0x38]
   140010c3c:	mov    rdi,QWORD PTR [rsp+0x40]
   140010c41:	mov    r14,QWORD PTR [rsp+0x48]
   140010c46:	add    rsp,0x20
   140010c4a:	pop    r15
   140010c4c:	rex.W jmp QWORD PTR [rip+0x2c785]        # 0x14003d3d8
   140010c53:	int3   
   140010c54:	int3   
   140010c55:	int3   
   140010c56:	int3   
   140010c57:	int3   
   140010c58:	int3   
   140010c59:	int3   
   140010c5a:	int3   
   140010c5b:	int3   
   140010c5c:	int3   
   140010c5d:	int3   
   140010c5e:	int3   
   140010c5f:	int3   
   140010c60:	mov    QWORD PTR [rsp+0x18],rbx
   140010c65:	push   rbp
   140010c66:	push   rsi
   140010c67:	push   rdi
   140010c68:	push   r12
   140010c6a:	push   r13
   140010c6c:	push   r14
   140010c6e:	push   r15
   140010c70:	mov    rbp,rsp
   140010c73:	sub    rsp,0x20
   140010c77:	lea    r14,[rcx+0xd8]
   140010c7e:	mov    rsi,rcx
   140010c81:	mov    rcx,r14
   140010c84:	mov    r15,r9
   140010c87:	mov    r12,r8
   140010c8a:	mov    rbx,rdx
   140010c8d:	call   QWORD PTR [rip+0x2c735]        # 0x14003d3c8
   140010c93:	mov    eax,DWORD PTR [rsi+0x164]
   140010c99:	mov    r13,QWORD PTR [rbp+0x60]
   140010c9d:	mov    DWORD PTR [rbx],eax
   140010c9f:	xor    ebx,ebx
   140010ca1:	mov    rax,QWORD PTR [rbp+0x68]
   140010ca5:	mov    DWORD PTR [r12],ebx
   140010ca9:	mov    QWORD PTR [r15],rbx
   140010cac:	mov    QWORD PTR [r13+0x0],rbx
   140010cb0:	mov    QWORD PTR [rax],rbx
   140010cb3:	cmp    DWORD PTR [rsi+0x16c],ebx
   140010cb9:	jne    0x140028c72
   140010cbf:	mov    rcx,r14
   140010cc2:	mov    rbx,QWORD PTR [rsp+0x70]
   140010cc7:	add    rsp,0x20
   140010ccb:	pop    r15
   140010ccd:	pop    r14
   140010ccf:	pop    r13
   140010cd1:	pop    r12
   140010cd3:	pop    rdi
   140010cd4:	pop    rsi
   140010cd5:	pop    rbp
   140010cd6:	rex.W jmp QWORD PTR [rip+0x2c6fb]        # 0x14003d3d8
   140010cdd:	int3   
   140010cde:	int3   
   140010cdf:	int3   
   140010ce0:	int3   
   140010ce1:	int3   
   140010ce2:	int3   
   140010ce3:	int3   
   140010ce4:	int3   
   140010ce5:	int3   
   140010ce6:	int3   
   140010ce7:	int3   
   140010ce8:	int3   
   140010ce9:	int3   
   140010cea:	int3   
   140010ceb:	int3   
   140010cec:	int3   
   140010ced:	int3   
   140010cee:	int3   
   140010cef:	int3   
   140010cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140010cf5:	mov    QWORD PTR [rsp+0x10],rsi
   140010cfa:	push   rdi
   140010cfb:	sub    rsp,0x20
   140010cff:	lea    rdi,[rcx+0xd8]
   140010d06:	mov    rbx,rcx
   140010d09:	mov    rcx,rdi
   140010d0c:	mov    rsi,rdx
   140010d0f:	call   QWORD PTR [rip+0x2c6b3]        # 0x14003d3c8
   140010d15:	mov    eax,DWORD PTR [rbx+0x168]
   140010d1b:	mov    rcx,rdi
   140010d1e:	mov    DWORD PTR [rsi],eax
   140010d20:	mov    rbx,QWORD PTR [rsp+0x30]
   140010d25:	mov    rsi,QWORD PTR [rsp+0x38]
   140010d2a:	add    rsp,0x20
   140010d2e:	pop    rdi
   140010d2f:	rex.W jmp QWORD PTR [rip+0x2c6a2]        # 0x14003d3d8
   140010d36:	int3   
   140010d37:	int3   
   140010d38:	int3   
   140010d39:	int3   
   140010d3a:	int3   
   140010d3b:	int3   
   140010d3c:	int3   
   140010d3d:	int3   
   140010d3e:	int3   
   140010d3f:	int3   
   140010d40:	mov    rax,rsp
   140010d43:	mov    QWORD PTR [rax+0x8],rbx
   140010d47:	mov    QWORD PTR [rax+0x10],rsi
   140010d4b:	mov    QWORD PTR [rax+0x18],rdi
   140010d4f:	mov    QWORD PTR [rax+0x20],r14
   140010d53:	push   r15
   140010d55:	sub    rsp,0x20
   140010d59:	lea    rdi,[rcx+0xd8]
   140010d60:	mov    rbx,rcx
   140010d63:	mov    rcx,rdi
   140010d66:	mov    rsi,r9
   140010d69:	mov    r14,r8
   140010d6c:	mov    r15,rdx
   140010d6f:	call   QWORD PTR [rip+0x2c653]        # 0x14003d3c8
   140010d75:	cmp    DWORD PTR [rbx+0x160],0x0
   140010d7c:	jne    0x140028d10
   140010d82:	mov    eax,DWORD PTR [rbx+0x150]
   140010d88:	mov    DWORD PTR [r15],eax
   140010d8b:	mov    rax,QWORD PTR [rsp+0x58]
   140010d90:	and    DWORD PTR [rax],0x0
   140010d93:	mov    eax,DWORD PTR [rbx+0x144]
   140010d99:	mov    DWORD PTR [r14],eax
   140010d9c:	mov    eax,DWORD PTR [rbx+0x148]
   140010da2:	mov    DWORD PTR [rsi],eax
   140010da4:	mov    rax,QWORD PTR [rsp+0x50]
   140010da9:	mov    edx,DWORD PTR [rbx+0x14c]
   140010daf:	mov    DWORD PTR [rax],edx
   140010db1:	mov    rcx,rdi
   140010db4:	mov    rbx,QWORD PTR [rsp+0x30]
   140010db9:	mov    rsi,QWORD PTR [rsp+0x38]
   140010dbe:	mov    rdi,QWORD PTR [rsp+0x40]
   140010dc3:	mov    r14,QWORD PTR [rsp+0x48]
   140010dc8:	add    rsp,0x20
   140010dcc:	pop    r15
   140010dce:	rex.W jmp QWORD PTR [rip+0x2c603]        # 0x14003d3d8
   140010dd5:	int3   
   140010dd6:	int3   
   140010dd7:	int3   
   140010dd8:	int3   
   140010dd9:	int3   
   140010dda:	int3   
   140010ddb:	int3   
   140010ddc:	int3   
   140010ddd:	int3   
   140010dde:	int3   
   140010ddf:	int3   
   140010de0:	mov    QWORD PTR [rsp+0x8],rbx
   140010de5:	mov    QWORD PTR [rsp+0x10],rsi
   140010dea:	mov    QWORD PTR [rsp+0x18],rdi
   140010def:	push   r14
   140010df1:	sub    rsp,0x20
   140010df5:	lea    rsi,[rcx+0xd8]
   140010dfc:	mov    rdi,rcx
   140010dff:	mov    rcx,rsi
   140010e02:	mov    r14,r8
   140010e05:	mov    rbx,rdx
   140010e08:	call   QWORD PTR [rip+0x2c5ba]        # 0x14003d3c8
   140010e0e:	mov    eax,DWORD PTR [rdi+0x13c]
   140010e14:	mov    rcx,rsi
   140010e17:	mov    DWORD PTR [rbx],eax
   140010e19:	mov    eax,DWORD PTR [rdi+0x140]
   140010e1f:	mov    DWORD PTR [r14],eax
   140010e22:	mov    rbx,QWORD PTR [rsp+0x30]
   140010e27:	mov    rsi,QWORD PTR [rsp+0x38]
   140010e2c:	mov    rdi,QWORD PTR [rsp+0x40]
   140010e31:	add    rsp,0x20
   140010e35:	pop    r14
   140010e37:	rex.W jmp QWORD PTR [rip+0x2c59a]        # 0x14003d3d8
   140010e3e:	int3   
   140010e3f:	int3   
   140010e40:	int3   
   140010e41:	int3   
   140010e42:	int3   
   140010e43:	int3   
   140010e44:	int3   
   140010e45:	int3   
   140010e46:	int3   
   140010e47:	int3   
   140010e48:	int3   
   140010e49:	int3   
   140010e4a:	int3   
   140010e4b:	int3   
   140010e4c:	int3   
   140010e4d:	int3   
   140010e4e:	int3   
   140010e4f:	int3   
   140010e50:	mov    rax,rsp
   140010e53:	mov    QWORD PTR [rax+0x8],rbx
   140010e57:	mov    QWORD PTR [rax+0x10],rbp
   140010e5b:	mov    QWORD PTR [rax+0x18],rsi
   140010e5f:	mov    QWORD PTR [rax+0x20],rdi
   140010e63:	push   r14
   140010e65:	sub    rsp,0x20
   140010e69:	lea    rbp,[rcx+0xd8]
   140010e70:	mov    rsi,rcx
   140010e73:	mov    rcx,rbp
   140010e76:	mov    r14,r9
   140010e79:	mov    rdi,r8
   140010e7c:	mov    rbx,rdx
   140010e7f:	call   QWORD PTR [rip+0x2c543]        # 0x14003d3c8
   140010e85:	movups xmm0,XMMWORD PTR [rsi+0x120]
   140010e8c:	mov    rcx,rbp
   140010e8f:	movdqu XMMWORD PTR [rbx],xmm0
   140010e93:	mov    eax,DWORD PTR [rsi+0x130]
   140010e99:	mov    DWORD PTR [rdi],eax
   140010e9b:	mov    eax,DWORD PTR [rsi+0x134]
   140010ea1:	mov    DWORD PTR [r14],eax
   140010ea4:	mov    rax,QWORD PTR [rsp+0x50]
   140010ea9:	mov    edx,DWORD PTR [rsi+0x138]
   140010eaf:	mov    DWORD PTR [rax],edx
   140010eb1:	mov    rbx,QWORD PTR [rsp+0x30]
   140010eb6:	mov    rbp,QWORD PTR [rsp+0x38]
   140010ebb:	mov    rsi,QWORD PTR [rsp+0x40]
   140010ec0:	mov    rdi,QWORD PTR [rsp+0x48]
   140010ec5:	add    rsp,0x20
   140010ec9:	pop    r14
   140010ecb:	rex.W jmp QWORD PTR [rip+0x2c506]        # 0x14003d3d8
   140010ed2:	int3   
   140010ed3:	int3   
   140010ed4:	int3   
   140010ed5:	int3   
   140010ed6:	int3   
   140010ed7:	int3   
   140010ed8:	int3   
   140010ed9:	int3   
   140010eda:	int3   
   140010edb:	int3   
   140010edc:	int3   
   140010edd:	int3   
   140010ede:	int3   
   140010edf:	int3   
   140010ee0:	mov    QWORD PTR [rsp+0x18],rbx
   140010ee5:	mov    DWORD PTR [rsp+0x10],edx
   140010ee9:	push   rbp
   140010eea:	push   rsi
   140010eeb:	push   rdi
   140010eec:	push   r12
   140010eee:	push   r13
   140010ef0:	push   r14
   140010ef2:	push   r15
   140010ef4:	sub    rsp,0x20
   140010ef8:	lea    r14,[rcx+0x108]
   140010eff:	mov    r13,r9
   140010f02:	mov    rsi,QWORD PTR [r14]
   140010f05:	mov    rbp,r8
   140010f08:	mov    r15d,edx
   140010f0b:	mov    rdi,rcx
   140010f0e:	test   rsi,rsi
   140010f11:	jne    0x140028d42
   140010f17:	mov    al,BYTE PTR [rdi+0x118]
   140010f1d:	mov    sil,0x1
   140010f20:	mov    r12,QWORD PTR [rsp+0x80]
   140010f28:	and    al,sil
   140010f2b:	mov    BYTE PTR [rsp+0x60],al
   140010f2f:	test   sil,r15b
   140010f32:	je     0x140011049
   140010f38:	test   rbp,rbp
   140010f3b:	jne    0x140028d61
   140010f41:	mov    rbx,QWORD PTR [rsp+0x90]
   140010f49:	test   rbx,rbx
   140010f4c:	jne    0x140028d6b
   140010f52:	cmp    QWORD PTR [r14],0x0
   140010f56:	jne    0x140010f76
   140010f58:	test   r13,r13
   140010f5b:	je     0x140010f76
   140010f5d:	test   r12,r12
   140010f60:	je     0x140010f76
   140010f62:	mov    rcx,r12
   140010f65:	call   0x1400119a0
   140010f6a:	mov    r15,rax
   140010f6d:	test   rax,rax
   140010f70:	jne    0x140028dc9
   140010f76:	mov    eax,DWORD PTR [rsp+0x68]
   140010f7a:	lea    rbx,[rdi+0x170]
   140010f81:	mov    DWORD PTR [rdi+0x118],eax
   140010f87:	mov    eax,DWORD PTR [rsp+0x98]
   140010f8e:	mov    DWORD PTR [rdi+0x168],eax
   140010f94:	mov    eax,DWORD PTR [rsp+0xa0]
   140010f9b:	mov    DWORD PTR [rdi+0x16c],eax
   140010fa1:	mov    rcx,QWORD PTR [rbx]
   140010fa4:	call   QWORD PTR [rip+0x42116]        # 0x1400530c0
   140010faa:	and    QWORD PTR [rbx],0x0
   140010fae:	lea    r14,[rdi+0x178]
   140010fb5:	mov    rcx,QWORD PTR [r14]
   140010fb8:	call   QWORD PTR [rip+0x42102]        # 0x1400530c0
   140010fbe:	and    QWORD PTR [r14],0x0
   140010fc2:	lea    r15,[rdi+0x180]
   140010fc9:	mov    rcx,QWORD PTR [r15]
   140010fcc:	call   QWORD PTR [rip+0x420ee]        # 0x1400530c0
   140010fd2:	and    QWORD PTR [r15],0x0
   140010fd6:	cmp    DWORD PTR [rdi+0x16c],0x0
   140010fdd:	mov    rbp,QWORD PTR [rsp+0x88]
   140010fe5:	mov    QWORD PTR [rdi+0x188],r12
   140010fec:	mov    QWORD PTR [rdi+0x190],rbp
   140010ff3:	jne    0x140028e02
   140010ff9:	lea    rbx,[rdi+0x110]
   140011000:	mov    rcx,rbx
   140011003:	call   0x14000ca70
   140011008:	cmp    QWORD PTR [rbx],r13
   14001100b:	jne    0x140011051
   14001100d:	cmp    BYTE PTR [rsp+0x60],sil
   140011012:	je     0x140011032
   140011014:	call   QWORD PTR [rip+0x2c2ae]        # 0x14003d2c8
   14001101a:	cmp    DWORD PTR [rdi+0x11c],eax
   140011020:	je     0x140011032
   140011022:	mov    rcx,rdi
   140011025:	test   sil,sil
   140011028:	je     0x14001105e
   14001102a:	mov    rdx,rbp
   14001102d:	call   0x1400118f4
   140011032:	xor    eax,eax
   140011034:	mov    rbx,QWORD PTR [rsp+0x70]
   140011039:	add    rsp,0x20
   14001103d:	pop    r15
   14001103f:	pop    r14
   140011041:	pop    r13
   140011043:	pop    r12
   140011045:	pop    rdi
   140011046:	pop    rsi
   140011047:	pop    rbp
   140011048:	ret    
   140011049:	xor    sil,sil
   14001104c:	jmp    0x140010f76
   140011051:	mov    rdx,r13
   140011054:	mov    rcx,rbx
   140011057:	call   0x14000dcd0
   14001105c:	jmp    0x14001100d
   14001105e:	call   0x14002e19c
   140011063:	jmp    0x140011032
   140011065:	int3   
   140011066:	int3   
   140011067:	int3   
   140011068:	int3   
   140011069:	int3   
   14001106a:	int3   
   14001106b:	int3   
   14001106c:	int3   
   14001106d:	int3   
   14001106e:	int3   
   14001106f:	int3   
   140011070:	mov    rax,rsp
   140011073:	mov    QWORD PTR [rax+0x18],r8
   140011077:	push   rdi
   140011078:	push   r12
   14001107a:	push   r13
   14001107c:	push   r14
   14001107e:	push   r15
   140011080:	sub    rsp,0x70
   140011084:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14001108c:	mov    QWORD PTR [rax+0x8],rbx
   140011090:	mov    QWORD PTR [rax+0x10],rbp
   140011094:	mov    QWORD PTR [rax+0x20],rsi
   140011098:	mov    r13,r9
   14001109b:	mov    ebp,edx
   14001109d:	mov    rsi,rcx
   1400110a0:	mov    eax,edx
   1400110a2:	and    eax,0x7f
   1400110a5:	cmp    eax,edx
   1400110a7:	jne    0x140028e62
   1400110ad:	xor    r15d,r15d
   1400110b0:	xor    r14d,r14d
   1400110b3:	xor    r12b,r12b
   1400110b6:	lea    rbx,[rcx+0x58]
   1400110ba:	mov    QWORD PTR [rsp+0x68],rbx
   1400110bf:	mov    rcx,rbx
   1400110c2:	call   QWORD PTR [rip+0x2c300]        # 0x14003d3c8
   1400110c8:	nop
   1400110c9:	mov    rax,QWORD PTR [rsi+0x90]
   1400110d0:	test   rax,rax
   1400110d3:	je     0x1400110ed
   1400110d5:	mov    r15,rax
   1400110d8:	mov    rax,QWORD PTR [rax]
   1400110db:	mov    rdi,QWORD PTR [rax+0x8]
   1400110df:	mov    rcx,rdi
   1400110e2:	call   QWORD PTR [rip+0x2c640]        # 0x14003d728
   1400110e8:	mov    rcx,r15
   1400110eb:	call   rdi
   1400110ed:	mov    rax,QWORD PTR [rsi+0x88]
   1400110f4:	test   rax,rax
   1400110f7:	jne    0x140028e6c
   1400110fd:	cmp    QWORD PTR [rsi+0x48],0x0
   140011102:	je     0x1400111bb
   140011108:	mov    ecx,DWORD PTR [rsi+0x80]
   14001110e:	mov    eax,DWORD PTR [rsp+0xd8]
   140011115:	cmp    ecx,eax
   140011117:	jae    0x140028e8a
   14001111d:	mov    DWORD PTR [rsi+0x80],eax
   140011123:	mov    rax,QWORD PTR [rsi-0x80]
   140011127:	mov    rdi,QWORD PTR [rax+0x90]
   14001112e:	lea    rax,[rip+0xfffffffffffffdab]        # 0x140010ee0
   140011135:	cmp    rdi,rax
   140011138:	jne    0x140028ea6
   14001113e:	mov    rax,QWORD PTR [rsp+0x100]
   140011146:	mov    QWORD PTR [rsp+0x58],rax
   14001114b:	mov    rax,QWORD PTR [rsp+0xf8]
   140011153:	mov    QWORD PTR [rsp+0x50],rax
   140011158:	mov    rax,QWORD PTR [rsp+0xf0]
   140011160:	mov    QWORD PTR [rsp+0x48],rax
   140011165:	mov    eax,DWORD PTR [rsp+0xe8]
   14001116c:	mov    DWORD PTR [rsp+0x40],eax
   140011170:	mov    eax,DWORD PTR [rsp+0xe0]
   140011177:	mov    DWORD PTR [rsp+0x38],eax
   14001117b:	mov    rax,QWORD PTR [rsp+0xd0]
   140011183:	mov    QWORD PTR [rsp+0x30],rax
   140011188:	mov    rax,QWORD PTR [rsp+0xc8]
   140011190:	mov    QWORD PTR [rsp+0x28],rax
   140011195:	mov    rax,QWORD PTR [rsp+0xc0]
   14001119d:	mov    QWORD PTR [rsp+0x20],rax
   1400111a2:	mov    r9,r13
   1400111a5:	mov    r8,QWORD PTR [rsp+0xb0]
   1400111ad:	mov    edx,ebp
   1400111af:	lea    rcx,[rsi-0x80]
   1400111b3:	call   0x140010ee0
   1400111b8:	mov    r12b,0x1
   1400111bb:	mov    rcx,rbx
   1400111be:	call   QWORD PTR [rip+0x2c214]        # 0x14003d3d8
   1400111c4:	test   r12b,r12b
   1400111c7:	je     0x1400111f3
   1400111c9:	call   0x14000e048
   1400111ce:	mov    rbx,rax
   1400111d1:	test   rax,rax
   1400111d4:	je     0x1400111f3
   1400111d6:	mov    BYTE PTR [rsp+0x20],0x1
   1400111db:	xor    r9d,r9d
   1400111de:	xor    r8d,r8d
   1400111e1:	xor    edx,edx
   1400111e3:	mov    rcx,rax
   1400111e6:	call   0x140012368
   1400111eb:	mov    rcx,rbx
   1400111ee:	call   0x14000dc9c
   1400111f3:	test   r15,r15
   1400111f6:	je     0x14001120d
   1400111f8:	mov    rax,QWORD PTR [r15]
   1400111fb:	mov    rbx,QWORD PTR [rax+0x10]
   1400111ff:	mov    rcx,rbx
   140011202:	call   QWORD PTR [rip+0x2c520]        # 0x14003d728
   140011208:	mov    rcx,r15
   14001120b:	call   rbx
   14001120d:	test   r14,r14
   140011210:	jne    0x140028f2c
   140011216:	xor    eax,eax
   140011218:	lea    r11,[rsp+0x70]
   14001121d:	mov    rbx,QWORD PTR [r11+0x30]
   140011221:	mov    rbp,QWORD PTR [r11+0x38]
   140011225:	mov    rsi,QWORD PTR [r11+0x48]
   140011229:	mov    rsp,r11
   14001122c:	pop    r15
   14001122e:	pop    r14
   140011230:	pop    r13
   140011232:	pop    r12
   140011234:	pop    rdi
   140011235:	ret    
   140011236:	int3   
   140011237:	int3   
   140011238:	int3   
   140011239:	int3   
   14001123a:	int3   
   14001123b:	int3   
   14001123c:	int3   
   14001123d:	int3   
   14001123e:	int3   
   14001123f:	int3   
   140011240:	mov    rax,rsp
   140011243:	mov    QWORD PTR [rax+0x8],rbx
   140011247:	mov    QWORD PTR [rax+0x10],rbp
   14001124b:	mov    QWORD PTR [rax+0x18],rsi
   14001124f:	mov    QWORD PTR [rax+0x20],rdi
   140011253:	push   r12
   140011255:	push   r14
   140011257:	push   r15
   140011259:	sub    rsp,0x20
   14001125d:	mov    r14,rcx
   140011260:	mov    r12d,r8d
   140011263:	add    rcx,0x60
   140011267:	mov    rbx,rdx
   14001126a:	xor    ebp,ebp
   14001126c:	call   QWORD PTR [rip+0x2c156]        # 0x14003d3c8
   140011272:	lea    rsi,[r14+0x50]
   140011276:	cmp    QWORD PTR [rsi],rbp
   140011279:	jne    0x1400112df
   14001127b:	cmp    QWORD PTR [rsi],rbx
   14001127e:	je     0x14001128b
   140011280:	mov    rdx,rbx
   140011283:	mov    rcx,rsi
   140011286:	call   0x14000dcd0
   14001128b:	mov    rsi,QWORD PTR [rsi]
   14001128e:	mov    rax,QWORD PTR [rsi]
   140011291:	mov    rdi,QWORD PTR [rax]
   140011294:	mov    rcx,rdi
   140011297:	call   QWORD PTR [rip+0x2c48b]        # 0x14003d728
   14001129d:	lea    r8,[r14+0x58]
   1400112a1:	mov    rcx,rsi
   1400112a4:	lea    rdx,[rip+0x2decd]        # 0x14003f178
   1400112ab:	call   rdi
   1400112ad:	lea    rcx,[r14+0x60]
   1400112b1:	call   QWORD PTR [rip+0x2c121]        # 0x14003d3d8
   1400112b7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400112bc:	mov    eax,ebp
   1400112be:	mov    rbp,QWORD PTR [rsp+0x48]
   1400112c3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400112c8:	mov    rdi,QWORD PTR [rsp+0x58]
   1400112cd:	mov    DWORD PTR [r14+0xa4],r12d
   1400112d4:	add    rsp,0x20
   1400112d8:	pop    r15
   1400112da:	pop    r14
   1400112dc:	pop    r12
   1400112de:	ret    
   1400112df:	mov    ebp,0x80070005
   1400112e4:	jmp    0x1400112ad
   1400112e6:	int3   
   1400112e7:	int3   
   1400112e8:	int3   
   1400112e9:	int3   
   1400112ea:	int3   
   1400112eb:	int3   
   1400112ec:	mov    rax,rsp
   1400112ef:	mov    QWORD PTR [rax+0x8],rcx
   1400112f3:	push   rdi
   1400112f4:	sub    rsp,0x30
   1400112f8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140011300:	mov    QWORD PTR [rax+0x10],rbx
   140011304:	mov    QWORD PTR [rax+0x18],rsi
   140011308:	mov    rdi,rcx
   14001130b:	xor    esi,esi
   14001130d:	mov    DWORD PTR [rcx+0x90],esi
   140011313:	lea    rbx,[rcx+0x98]
   14001131a:	xor    edx,edx
   14001131c:	lea    r8d,[rsi+0x28]
   140011320:	mov    rcx,rbx
   140011323:	call   0x140014694
   140011328:	mov    BYTE PTR [rbx+0x28],sil
   14001132c:	mov    rcx,rdi
   14001132f:	call   0x14000da98
   140011334:	nop
   140011335:	mov    QWORD PTR [rdi+0xc8],rsi
   14001133c:	mov    QWORD PTR [rdi+0xd0],rsi
   140011343:	lea    rcx,[rdi+0xd8]
   14001134a:	call   0x14000db2c
   14001134f:	mov    DWORD PTR [rdi+0x100],esi
   140011355:	mov    QWORD PTR [rdi+0x108],rsi
   14001135c:	mov    QWORD PTR [rdi+0x110],rsi
   140011363:	mov    QWORD PTR [rdi+0x118],rsi
   14001136a:	mov    QWORD PTR [rdi+0x130],rsi
   140011371:	mov    QWORD PTR [rdi+0x138],rsi
   140011378:	mov    QWORD PTR [rdi+0x140],rsi
   14001137f:	or     eax,0xffffffff
   140011382:	mov    DWORD PTR [rdi+0x148],eax
   140011388:	mov    DWORD PTR [rdi+0x14c],eax
   14001138e:	mov    QWORD PTR [rdi+0x150],rsi
   140011395:	mov    DWORD PTR [rdi+0x158],eax
   14001139b:	mov    DWORD PTR [rdi+0x15c],eax
   1400113a1:	mov    QWORD PTR [rdi+0x160],rsi
   1400113a8:	mov    QWORD PTR [rdi+0x168],rsi
   1400113af:	mov    QWORD PTR [rdi+0x170],rsi
   1400113b6:	mov    QWORD PTR [rdi+0x178],rsi
   1400113bd:	mov    QWORD PTR [rdi+0x180],rsi
   1400113c4:	mov    QWORD PTR [rdi+0x188],rsi
   1400113cb:	mov    QWORD PTR [rdi+0x190],rsi
   1400113d2:	mov    BYTE PTR [rdi+0x198],sil
   1400113d9:	mov    QWORD PTR [rdi+0x19c],rsi
   1400113e0:	mov    QWORD PTR [rdi+0x1a8],rsi
   1400113e7:	xor    eax,eax
   1400113e9:	mov    QWORD PTR [rdi+0x120],rax
   1400113f0:	mov    QWORD PTR [rdi+0x128],rax
   1400113f7:	mov    QWORD PTR [rsp+0x40],rsi
   1400113fc:	lea    rdx,[rsp+0x40]
   140011401:	call   0x140011594
   140011406:	mov    rbx,QWORD PTR [rsp+0x40]
   14001140b:	mov    rcx,rbx
   14001140e:	call   QWORD PTR [rip+0x41bfc]        # 0x140053010
   140011414:	test   eax,eax
   140011416:	je     0x14001142f
   140011418:	mov    r8,rbx
   14001141b:	xor    edx,edx
   14001141d:	mov    ecx,0x100000
   140011422:	call   QWORD PTR [rip+0x2bf78]        # 0x14003d3a0
   140011428:	mov    QWORD PTR [rdi+0x1a8],rax
   14001142f:	mov    rcx,rbx
   140011432:	call   QWORD PTR [rip+0x41c88]        # 0x1400530c0
   140011438:	nop
   140011439:	mov    rax,rdi
   14001143c:	mov    rbx,QWORD PTR [rsp+0x48]
   140011441:	mov    rsi,QWORD PTR [rsp+0x50]
   140011446:	add    rsp,0x30
   14001144a:	pop    rdi
   14001144b:	ret    
   14001144c:	int3   
   14001144d:	int3   
   14001144e:	int3   
   14001144f:	int3   
   140011450:	int3   
   140011451:	int3   
   140011452:	int3   
   140011453:	int3   
   140011454:	rex push rbp
   140011456:	push   rbx
   140011457:	push   rsi
   140011458:	push   rdi
   140011459:	push   r14
   14001145b:	push   r15
   14001145d:	lea    rbp,[rsp-0x158]
   140011465:	sub    rsp,0x258
   14001146c:	mov    rax,QWORD PTR [rip+0x3cb9d]        # 0x14004e010
   140011473:	xor    rax,rsp
   140011476:	mov    QWORD PTR [rbp+0x140],rax
   14001147d:	mov    r14,rdx
   140011480:	mov    rsi,r9
   140011483:	lea    rdx,[rsp+0x28]
   140011488:	mov    r15,r8
   14001148b:	call   QWORD PTR [rip+0x2bc07]        # 0x14003d098
   140011491:	mov    r8d,DWORD PTR [rsp+0x28]
   140011496:	xor    edx,edx
   140011498:	mov    ecx,0x410
   14001149d:	call   QWORD PTR [rip+0x2be35]        # 0x14003d2d8
   1400114a3:	xor    ebx,ebx
   1400114a5:	mov    rdi,rax
   1400114a8:	test   rax,rax
   1400114ab:	je     0x14001154b
   1400114b1:	lea    r9,[rsp+0x2c]
   1400114b6:	mov    QWORD PTR [rsp+0x20],rbx
   1400114bb:	lea    r8d,[rbx+0x8]
   1400114bf:	mov    rcx,rax
   1400114c2:	lea    rdx,[rsp+0x20]
   1400114c7:	call   QWORD PTR [rip+0x2be53]        # 0x14003d320
   1400114cd:	mov    rdx,QWORD PTR [rsp+0x20]
   1400114d2:	test   rdx,rdx
   1400114d5:	je     0x140011542
   1400114d7:	mov    r9d,0x105
   1400114dd:	lea    r8,[rsp+0x30]
   1400114e2:	mov    rcx,rdi
   1400114e5:	call   QWORD PTR [rip+0x2be45]        # 0x14003d330
   1400114eb:	test   eax,eax
   1400114ed:	je     0x140011542
   1400114ef:	lea    rdx,[rsp+0x30]
   1400114f4:	mov    rcx,r14
   1400114f7:	call   0x1400116b0
   1400114fc:	lea    rdx,[rsp+0x30]
   140011501:	mov    rcx,r15
   140011504:	call   0x1400116b0
   140011509:	lea    rdx,[rip+0x2ded0]        # 0x14003f3e0
   140011510:	mov    rcx,r15
   140011513:	call   0x1400116b0
   140011518:	mov    rdx,QWORD PTR [rsp+0x20]
   14001151d:	lea    r8,[rsp+0x30]
   140011522:	mov    r9d,0x105
   140011528:	mov    rcx,rdi
   14001152b:	call   QWORD PTR [rip+0x2bdf7]        # 0x14003d328
   140011531:	test   eax,eax
   140011533:	je     0x140011542
   140011535:	lea    rdx,[rsp+0x30]
   14001153a:	mov    rcx,rsi
   14001153d:	call   0x1400116b0
   140011542:	mov    rcx,rdi
   140011545:	call   QWORD PTR [rip+0x2bc5d]        # 0x14003d1a8
   14001154b:	mov    rcx,QWORD PTR [r14]
   14001154e:	call   QWORD PTR [rip+0x41abc]        # 0x140053010
   140011554:	test   eax,eax
   140011556:	je     0x14001156a
   140011558:	mov    rcx,QWORD PTR [rsi]
   14001155b:	call   QWORD PTR [rip+0x41aaf]        # 0x140053010
   140011561:	test   eax,eax
   140011563:	je     0x14001156a
   140011565:	mov    ebx,0x1
   14001156a:	mov    al,bl
   14001156c:	mov    rcx,QWORD PTR [rbp+0x140]
   140011573:	xor    rcx,rsp
   140011576:	call   0x1400141d0
   14001157b:	add    rsp,0x258
   140011582:	pop    r15
   140011584:	pop    r14
   140011586:	pop    rdi
   140011587:	pop    rsi
   140011588:	pop    rbx
   140011589:	pop    rbp
   14001158a:	ret    
   14001158b:	int3   
   14001158c:	int3   
   14001158d:	int3   
   14001158e:	int3   
   14001158f:	int3   
   140011590:	int3   
   140011591:	int3   
   140011592:	int3   
   140011593:	int3   
   140011594:	test   rdx,rdx
   140011597:	je     0x140011668
   14001159d:	mov    QWORD PTR [rsp+0x8],rbx
   1400115a2:	push   rdi
   1400115a3:	sub    rsp,0x90
   1400115aa:	mov    rax,QWORD PTR [rip+0x3ca5f]        # 0x14004e010
   1400115b1:	xor    rax,rsp
   1400115b4:	mov    QWORD PTR [rsp+0x80],rax
   1400115bc:	mov    rdi,rdx
   1400115bf:	lea    rcx,[rsp+0x20]
   1400115c4:	xor    ebx,ebx
   1400115c6:	lea    rdx,[rip+0x2dccb]        # 0x14003f298
   1400115cd:	mov    QWORD PTR [rsp+0x20],rbx
   1400115d2:	call   0x1400116b0
   1400115d7:	test   eax,eax
   1400115d9:	js     0x140011669
   1400115df:	mov    DWORD PTR [rsp+0x28],ebx
   1400115e3:	call   QWORD PTR [rip+0x2bcdf]        # 0x14003d2c8
   1400115e9:	mov    ecx,eax
   1400115eb:	lea    rdx,[rsp+0x28]
   1400115f0:	call   QWORD PTR [rip+0x2bcda]        # 0x14003d2d0
   1400115f6:	mov    r9d,DWORD PTR [rsp+0x28]
   1400115fb:	lea    r8,[rip+0x2dc8a]        # 0x14003f28c
   140011602:	lea    edx,[rbx+0x28]
   140011605:	lea    rcx,[rsp+0x30]
   14001160a:	call   0x140013b28
   14001160f:	lea    rdx,[rsp+0x30]
   140011614:	lea    rcx,[rsp+0x20]
   140011619:	call   0x1400116b0
   14001161e:	test   eax,eax
   140011620:	js     0x140011669
   140011622:	lea    rdx,[rip+0x2dc2f]        # 0x14003f258
   140011629:	lea    rcx,[rsp+0x20]
   14001162e:	call   0x1400116b0
   140011633:	test   eax,eax
   140011635:	js     0x140011669
   140011637:	mov    rax,QWORD PTR [rsp+0x20]
   14001163c:	mov    QWORD PTR [rdi],rax
   14001163f:	mov    rcx,rbx
   140011642:	call   QWORD PTR [rip+0x41a78]        # 0x1400530c0
   140011648:	mov    rcx,QWORD PTR [rsp+0x80]
   140011650:	xor    rcx,rsp
   140011653:	call   0x1400141d0
   140011658:	mov    rbx,QWORD PTR [rsp+0xa0]
   140011660:	add    rsp,0x90
   140011667:	pop    rdi
   140011668:	ret    
   140011669:	mov    rbx,QWORD PTR [rsp+0x20]
   14001166e:	jmp    0x14001163f
   140011670:	int3   
   140011671:	int3   
   140011672:	int3   
   140011673:	int3   
   140011674:	int3   
   140011675:	int3   
   140011676:	int3   
   140011677:	int3   
   140011678:	rex push rbx
   14001167a:	sub    rsp,0x20
   14001167e:	mov    rbx,rcx
   140011681:	test   rdx,rdx
   140011684:	je     0x1400116a4
   140011686:	mov    rcx,rdx
   140011689:	call   QWORD PTR [rip+0x419e9]        # 0x140053078
   14001168f:	mov    QWORD PTR [rbx],rax
   140011692:	test   rax,rax
   140011695:	je     0x140028f48
   14001169b:	mov    rax,rbx
   14001169e:	add    rsp,0x20
   1400116a2:	pop    rbx
   1400116a3:	ret    
   1400116a4:	and    QWORD PTR [rcx],0x0
   1400116a8:	jmp    0x14001169b
   1400116aa:	int3   
   1400116ab:	int3   
   1400116ac:	int3   
   1400116ad:	int3   
   1400116ae:	int3   
   1400116af:	int3   
   1400116b0:	xor    eax,eax
   1400116b2:	mov    r9,rcx
   1400116b5:	test   rdx,rdx
   1400116b8:	je     0x1400116c9
   1400116ba:	or     rcx,0xffffffffffffffff
   1400116be:	inc    rcx
   1400116c1:	cmp    WORD PTR [rdx+rcx*2],ax
   1400116c5:	jne    0x1400116be
   1400116c7:	mov    eax,ecx
   1400116c9:	mov    r8d,eax
   1400116cc:	mov    rcx,r9
   1400116cf:	jmp    0x1400116dc
   1400116d4:	int3   
   1400116d5:	int3   
   1400116d6:	int3   
   1400116d7:	int3   
   1400116d8:	int3   
   1400116d9:	int3   
   1400116da:	int3   
   1400116db:	int3   
   1400116dc:	mov    rax,rsp
   1400116df:	mov    QWORD PTR [rax+0x8],rbx
   1400116e3:	mov    QWORD PTR [rax+0x10],rbp
   1400116e7:	mov    QWORD PTR [rax+0x18],rsi
   1400116eb:	mov    QWORD PTR [rax+0x20],rdi
   1400116ef:	push   r12
   1400116f1:	push   r14
   1400116f3:	push   r15
   1400116f5:	sub    rsp,0x20
   1400116f9:	xor    r12d,r12d
   1400116fc:	movsxd rbp,r8d
   1400116ff:	mov    r15,rdx
   140011702:	mov    rbx,rcx
   140011705:	test   rdx,rdx
   140011708:	je     0x1400117ad
   14001170e:	mov    rcx,QWORD PTR [rcx]
   140011711:	test   rcx,rcx
   140011714:	je     0x14001171f
   140011716:	test   r8d,r8d
   140011719:	je     0x1400117ad
   14001171f:	call   QWORD PTR [rip+0x418eb]        # 0x140053010
   140011725:	movsxd r14,eax
   140011728:	lea    esi,[r14+rbp*1]
   14001172c:	cmp    esi,r14d
   14001172f:	jl     0x140028f54
   140011735:	mov    edx,esi
   140011737:	xor    ecx,ecx
   140011739:	call   QWORD PTR [rip+0x41929]        # 0x140053068
   14001173f:	mov    rdi,rax
   140011742:	test   rax,rax
   140011745:	je     0x140028f54
   14001174b:	mov    rcx,QWORD PTR [rbx]
   14001174e:	call   QWORD PTR [rip+0x418bc]        # 0x140053010
   140011754:	test   eax,eax
   140011756:	je     0x140011778
   140011758:	mov    r8,QWORD PTR [rbx]
   14001175b:	mov    r9,r14
   14001175e:	movsxd rdx,esi
   140011761:	add    r9,r9
   140011764:	add    rdx,rdx
   140011767:	mov    rcx,rdi
   14001176a:	call   QWORD PTR [rip+0x2bed0]        # 0x14003d640
   140011770:	test   eax,eax
   140011772:	jne    0x140028f5e
   140011778:	lea    rdx,[rbp*2+0x0]
   140011780:	mov    r8,r15
   140011783:	mov    r9,rdx
   140011786:	lea    rcx,[rdi+r14*2]
   14001178a:	call   QWORD PTR [rip+0x2beb0]        # 0x14003d640
   140011790:	test   eax,eax
   140011792:	jne    0x140028f97
   140011798:	lea    rax,[r14+rbp*1]
   14001179c:	mov    WORD PTR [rdi+rax*2],r12w
   1400117a1:	mov    rcx,QWORD PTR [rbx]
   1400117a4:	call   QWORD PTR [rip+0x41916]        # 0x1400530c0
   1400117aa:	mov    QWORD PTR [rbx],rdi
   1400117ad:	xor    eax,eax
   1400117af:	mov    rbx,QWORD PTR [rsp+0x40]
   1400117b4:	mov    rbp,QWORD PTR [rsp+0x48]
   1400117b9:	mov    rsi,QWORD PTR [rsp+0x50]
   1400117be:	mov    rdi,QWORD PTR [rsp+0x58]
   1400117c3:	add    rsp,0x20
   1400117c7:	pop    r15
   1400117c9:	pop    r14
   1400117cb:	pop    r12
   1400117cd:	ret    
   1400117ce:	int3   
   1400117cf:	int3   
   1400117d0:	int3   
   1400117d1:	int3   
   1400117d2:	int3   
   1400117d3:	int3   
   1400117d4:	xor    eax,eax
   1400117d6:	test   rdx,rdx
   1400117d9:	je     0x1400117e3
   1400117db:	add    rcx,0x8
   1400117df:	mov    QWORD PTR [rdx],rcx
   1400117e2:	ret    
   1400117e3:	mov    eax,0x80004003
   1400117e8:	ret    
   1400117e9:	int3   
   1400117ea:	int3   
   1400117eb:	int3   
   1400117ec:	int3   
   1400117ed:	int3   
   1400117ee:	int3   
   1400117ef:	int3   
   1400117f0:	test   rcx,rcx
   1400117f3:	je     0x140011804
   1400117f9:	jmp    0x14002f07c
   1400117fe:	int3   
   1400117ff:	int3   
   140011800:	int3   
   140011801:	int3   
   140011802:	int3   
   140011803:	int3   
   140011804:	mov    rax,rsp
   140011807:	mov    QWORD PTR [rax+0x18],r8
   14001180b:	mov    QWORD PTR [rax+0x10],rdx
   14001180f:	mov    QWORD PTR [rax+0x8],rcx
   140011813:	push   rbx
   140011814:	push   rsi
   140011815:	push   rdi
   140011816:	push   r13
   140011818:	push   r14
   14001181a:	push   r15
   14001181c:	sub    rsp,0x38
   140011820:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140011828:	mov    r14,r8
   14001182b:	mov    r15,rdx
   14001182e:	xor    ebx,ebx
   140011830:	test   r8,r8
   140011833:	je     0x140028fd0
   140011839:	mov    QWORD PTR [r8],rbx
   14001183c:	mov    esi,0x8007000e
   140011841:	mov    DWORD PTR [rsp+0x70],esi
   140011845:	mov    QWORD PTR [rsp+0x88],rbx
   14001184d:	mov    ecx,0x1b0
   140011852:	call   0x140013d94
   140011857:	mov    QWORD PTR [rsp+0x28],rax
   14001185c:	test   rax,rax
   14001185f:	je     0x140028fda
   140011865:	mov    rcx,rax
   140011868:	call   0x140010828
   14001186d:	mov    rdi,rax
   140011870:	mov    QWORD PTR [rsp+0x88],rdi
   140011878:	test   rdi,rdi
   14001187b:	je     0x1400118de
   14001187d:	lock inc DWORD PTR [rdi+0x90]
   140011884:	lea    r13,[rdi+0x98]
   14001188b:	mov    rcx,r13
   14001188e:	call   0x14000c130
   140011893:	mov    esi,eax
   140011895:	test   eax,eax
   140011897:	js     0x14001189e
   140011899:	mov    BYTE PTR [r13+0x28],0x1
   14001189e:	cmovns esi,ebx
   1400118a1:	lock dec DWORD PTR [rdi+0x90]
   1400118a8:	test   esi,esi
   1400118aa:	jne    0x14002901c
   1400118b0:	mov    rax,QWORD PTR [rdi]
   1400118b3:	mov    rsi,QWORD PTR [rax]
   1400118b6:	lea    rax,[rip+0xffffffffffffef33]        # 0x1400107f0
   1400118bd:	cmp    rsi,rax
   1400118c0:	jne    0x140029002
   1400118c6:	mov    r8,r14
   1400118c9:	mov    rdx,r15
   1400118cc:	mov    rcx,rdi
   1400118cf:	call   0x1400107f0
   1400118d4:	mov    esi,eax
   1400118d6:	test   eax,eax
   1400118d8:	jne    0x14002901c
   1400118de:	mov    eax,esi
   1400118e0:	add    rsp,0x38
   1400118e4:	pop    r15
   1400118e6:	pop    r14
   1400118e8:	pop    r13
   1400118ea:	pop    rdi
   1400118eb:	pop    rsi
   1400118ec:	pop    rbx
   1400118ed:	ret    
   1400118ee:	int3   
   1400118ef:	int3   
   1400118f0:	int3   
   1400118f1:	int3   
   1400118f2:	int3   
   1400118f3:	int3   
   1400118f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400118f9:	mov    QWORD PTR [rsp+0x18],rsi
   1400118fe:	push   rdi
   1400118ff:	sub    rsp,0x50
   140011903:	mov    rax,QWORD PTR [rip+0x3c706]        # 0x14004e010
   14001190a:	xor    rax,rsp
   14001190d:	mov    QWORD PTR [rsp+0x48],rax
   140011912:	mov    rbx,rcx
   140011915:	mov    rdi,rdx
   140011918:	lea    rcx,[rip+0x3d751]        # 0x14004f070
   14001191f:	call   QWORD PTR [rip+0x2baa3]        # 0x14003d3c8
   140011925:	xor    esi,esi
   140011927:	mov    QWORD PTR [rip+0x3d40a],rbx        # 0x14004ed38
   14001192e:	test   rdi,rdi
   140011931:	je     0x14001198f
   140011933:	lea    r8d,[rsi+0x14]
   140011937:	mov    rcx,rdi
   14001193a:	lea    rdx,[rsp+0x20]
   14001193f:	call   QWORD PTR [rip+0x2b743]        # 0x14003d088
   140011945:	cmp    WORD PTR [rsp+0x20],si
   14001194a:	je     0x14001198f
   14001194c:	lea    rdx,[rip+0x2da9d]        # 0x14003f3f0
   140011953:	lea    rcx,[rsp+0x20]
   140011958:	call   0x1400156fe
   14001195d:	test   eax,eax
   14001195f:	jne    0x14002903c
   140011965:	lea    rcx,[rip+0x3d704]        # 0x14004f070
   14001196c:	call   QWORD PTR [rip+0x2ba66]        # 0x14003d3d8
   140011972:	mov    rcx,QWORD PTR [rsp+0x48]
   140011977:	xor    rcx,rsp
   14001197a:	call   0x1400141d0
   14001197f:	mov    rbx,QWORD PTR [rsp+0x60]
   140011984:	mov    rsi,QWORD PTR [rsp+0x70]
   140011989:	add    rsp,0x50
   14001198d:	pop    rdi
   14001198e:	ret    
   14001198f:	mov    QWORD PTR [rip+0x3cae2],rbx        # 0x14004e478
   140011996:	jmp    0x140011965
   140011998:	int3   
   140011999:	int3   
   14001199a:	int3   
   14001199b:	int3   
   14001199c:	int3   
   14001199d:	int3   
   14001199e:	int3   
   14001199f:	int3   
   1400119a0:	rex push rdi
   1400119a2:	sub    rsp,0x30
   1400119a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400119af:	mov    QWORD PTR [rsp+0x40],rbx
   1400119b4:	mov    QWORD PTR [rsp+0x50],rsi
   1400119b9:	mov    rsi,rcx
   1400119bc:	mov    ecx,0xf8
   1400119c1:	call   0x140013d94
   1400119c6:	mov    QWORD PTR [rsp+0x48],rax
   1400119cb:	test   rax,rax
   1400119ce:	je     0x140011a44
   1400119d0:	mov    rcx,rax
   1400119d3:	call   0x140011c54
   1400119d8:	mov    rbx,rax
   1400119db:	test   rbx,rbx
   1400119de:	je     0x140011a31
   1400119e0:	mov    rax,QWORD PTR [rbx]
   1400119e3:	mov    rdi,QWORD PTR [rax+0x8]
   1400119e7:	lea    rax,[rip+0xffffffffffffdbb2]        # 0x14000f5a0
   1400119ee:	cmp    rdi,rax
   1400119f1:	jne    0x14002905a
   1400119f7:	mov    rcx,rbx
   1400119fa:	call   0x14000f5a0
   1400119ff:	mov    rcx,rsi
   140011a02:	call   0x140011a50
   140011a07:	test   rax,rax
   140011a0a:	jne    0x14002906e
   140011a10:	mov    rax,QWORD PTR [rbx]
   140011a13:	mov    rdi,QWORD PTR [rax+0x10]
   140011a17:	lea    rax,[rip+0x1f2]        # 0x140011c10
   140011a1e:	cmp    rdi,rax
   140011a21:	jne    0x140029082
   140011a27:	mov    rcx,rbx
   140011a2a:	call   0x140011c10
   140011a2f:	xor    ebx,ebx
   140011a31:	mov    rax,rbx
   140011a34:	mov    rbx,QWORD PTR [rsp+0x40]
   140011a39:	mov    rsi,QWORD PTR [rsp+0x50]
   140011a3e:	add    rsp,0x30
   140011a42:	pop    rdi
   140011a43:	ret    
   140011a44:	xor    ebx,ebx
   140011a46:	jmp    0x1400119db
   140011a48:	int3   
   140011a49:	int3   
   140011a4a:	int3   
   140011a4b:	int3   
   140011a4c:	int3   
   140011a4d:	int3   
   140011a4e:	int3   
   140011a4f:	int3   
   140011a50:	rex push rbp
   140011a52:	push   rbx
   140011a53:	push   r12
   140011a55:	push   r14
   140011a57:	push   r15
   140011a59:	mov    rbp,rsp
   140011a5c:	sub    rsp,0x60
   140011a60:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140011a68:	mov    r12,rcx
   140011a6b:	and    QWORD PTR [rbp+0x40],0x0
   140011a70:	and    QWORD PTR [rbp+0x38],0x0
   140011a75:	and    QWORD PTR [rbp-0x20],0x0
   140011a7a:	xor    ebx,ebx
   140011a7c:	mov    QWORD PTR [rbp+0x48],rbx
   140011a80:	xor    r15d,r15d
   140011a83:	lea    r9,[rbp-0x20]
   140011a87:	lea    r8,[rbp+0x38]
   140011a8b:	lea    rdx,[rbp+0x40]
   140011a8f:	call   0x140011454
   140011a94:	mov    r14,QWORD PTR [rbp-0x20]
   140011a98:	test   al,al
   140011a9a:	je     0x140011abc
   140011a9c:	mov    rcx,QWORD PTR [rbp+0x38]
   140011aa0:	call   QWORD PTR [rip+0x4156a]        # 0x140053010
   140011aa6:	test   eax,eax
   140011aa8:	je     0x140011abc
   140011aaa:	mov    rcx,QWORD PTR [rbp+0x38]
   140011aae:	call   QWORD PTR [rip+0x2b8b4]        # 0x14003d368
   140011ab4:	test   eax,eax
   140011ab6:	jne    0x140029096
   140011abc:	mov    rcx,rbx
   140011abf:	call   QWORD PTR [rip+0x415fb]        # 0x1400530c0
   140011ac5:	nop
   140011ac6:	mov    rcx,r14
   140011ac9:	call   QWORD PTR [rip+0x415f1]        # 0x1400530c0
   140011acf:	nop
   140011ad0:	mov    rcx,QWORD PTR [rbp+0x38]
   140011ad4:	call   QWORD PTR [rip+0x415e6]        # 0x1400530c0
   140011ada:	nop
   140011adb:	mov    rcx,QWORD PTR [rbp+0x40]
   140011adf:	call   QWORD PTR [rip+0x415db]        # 0x1400530c0
   140011ae5:	mov    rax,r15
   140011ae8:	add    rsp,0x60
   140011aec:	pop    r15
   140011aee:	pop    r14
   140011af0:	pop    r12
   140011af2:	pop    rbx
   140011af3:	pop    rbp
   140011af4:	ret    
   140011af5:	int3   
   140011af6:	int3   
   140011af7:	int3   
   140011af8:	int3   
   140011af9:	int3   
   140011afa:	int3   
   140011afb:	int3   
   140011afc:	mov    QWORD PTR [rsp+0x8],rbx
   140011b01:	mov    QWORD PTR [rsp+0x10],rsi
   140011b06:	push   rdi
   140011b07:	sub    rsp,0x20
   140011b0b:	lea    rax,[rip+0x2d926]        # 0x14003f438
   140011b12:	mov    rdi,rcx
   140011b15:	mov    QWORD PTR [rcx],rax
   140011b18:	lea    rbx,[rcx+0xb8]
   140011b1f:	lea    rax,[rip+0x2d8ea]        # 0x14003f410
   140011b26:	mov    QWORD PTR [rcx+0x8],rax
   140011b2a:	mov    rcx,rbx
   140011b2d:	call   QWORD PTR [rip+0x2b895]        # 0x14003d3c8
   140011b33:	mov    rcx,QWORD PTR [rdi+0xe0]
   140011b3a:	test   rcx,rcx
   140011b3d:	jne    0x1400291ae
   140011b43:	mov    rcx,rbx
   140011b46:	call   QWORD PTR [rip+0x2b88c]        # 0x14003d3d8
   140011b4c:	mov    rcx,rbx
   140011b4f:	call   QWORD PTR [rip+0x2b863]        # 0x14003d3b8
   140011b55:	mov    rsi,QWORD PTR [rdi+0xa8]
   140011b5c:	test   rsi,rsi
   140011b5f:	jne    0x1400291c1
   140011b65:	mov    rsi,QWORD PTR [rdi+0xa0]
   140011b6c:	test   rsi,rsi
   140011b6f:	jne    0x1400291dc
   140011b75:	mov    rsi,QWORD PTR [rdi+0x98]
   140011b7c:	test   rsi,rsi
   140011b7f:	jne    0x1400291f7
   140011b85:	mov    rcx,QWORD PTR [rdi+0x80]
   140011b8c:	call   QWORD PTR [rip+0x4152e]        # 0x1400530c0
   140011b92:	mov    rcx,QWORD PTR [rdi+0x78]
   140011b96:	call   QWORD PTR [rip+0x41524]        # 0x1400530c0
   140011b9c:	mov    rcx,QWORD PTR [rdi+0x70]
   140011ba0:	call   QWORD PTR [rip+0x4151a]        # 0x1400530c0
   140011ba6:	lea    rcx,[rdi+0x48]
   140011baa:	call   QWORD PTR [rip+0x2b808]        # 0x14003d3b8
   140011bb0:	mov    rsi,QWORD PTR [rdi+0x38]
   140011bb4:	test   rsi,rsi
   140011bb7:	jne    0x140029212
   140011bbd:	mov    rcx,QWORD PTR [rdi+0x30]
   140011bc1:	call   QWORD PTR [rip+0x414f9]        # 0x1400530c0
   140011bc7:	mov    rcx,QWORD PTR [rdi+0x28]
   140011bcb:	call   QWORD PTR [rip+0x414ef]        # 0x1400530c0
   140011bd1:	mov    rcx,QWORD PTR [rdi+0x20]
   140011bd5:	call   QWORD PTR [rip+0x414e5]        # 0x1400530c0
   140011bdb:	lea    rcx,[rdi+0x18]
   140011bdf:	call   0x140011f98
   140011be4:	lea    rcx,[rdi+0x10]
   140011be8:	mov    rbx,QWORD PTR [rsp+0x30]
   140011bed:	mov    rsi,QWORD PTR [rsp+0x38]
   140011bf2:	add    rsp,0x20
   140011bf6:	pop    rdi
   140011bf7:	jmp    0x140011f98
   140011bfc:	int3   
   140011bfd:	int3   
   140011bfe:	int3   
   140011bff:	int3   
   140011c00:	int3   
   140011c01:	int3   
   140011c02:	int3   
   140011c03:	int3   
   140011c04:	int3   
   140011c05:	int3   
   140011c06:	int3   
   140011c07:	int3   
   140011c08:	int3   
   140011c09:	int3   
   140011c0a:	int3   
   140011c0b:	int3   
   140011c0c:	int3   
   140011c0d:	int3   
   140011c0e:	int3   
   140011c0f:	int3   
   140011c10:	mov    QWORD PTR [rsp+0x8],rbx
   140011c15:	push   rdi
   140011c16:	sub    rsp,0x20
   140011c1a:	mov    rbx,rcx
   140011c1d:	or     edi,0xffffffff
   140011c20:	lock xadd DWORD PTR [rcx+0xb0],edi
   140011c28:	sub    edi,0x1
   140011c2b:	jne    0x140011c3f
   140011c2d:	test   rcx,rcx
   140011c30:	je     0x140011c3f
   140011c32:	call   0x140011afc
   140011c37:	mov    rcx,rbx
   140011c3a:	call   0x140013de0
   140011c3f:	mov    eax,edi
   140011c41:	mov    rbx,QWORD PTR [rsp+0x30]
   140011c46:	add    rsp,0x20
   140011c4a:	pop    rdi
   140011c4b:	ret    
   140011c4c:	int3   
   140011c4d:	int3   
   140011c4e:	int3   
   140011c4f:	int3   
   140011c50:	int3   
   140011c51:	int3   
   140011c52:	int3   
   140011c53:	int3   
   140011c54:	mov    QWORD PTR [rsp+0x8],rcx
   140011c59:	push   rdi
   140011c5a:	sub    rsp,0x30
   140011c5e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011c67:	mov    QWORD PTR [rsp+0x48],rbx
   140011c6c:	mov    rbx,rcx
   140011c6f:	lea    rax,[rip+0x2d7c2]        # 0x14003f438
   140011c76:	mov    QWORD PTR [rcx],rax
   140011c79:	lea    rax,[rip+0x2d790]        # 0x14003f410
   140011c80:	mov    QWORD PTR [rcx+0x8],rax
   140011c84:	xor    edi,edi
   140011c86:	mov    QWORD PTR [rcx+0x10],rdi
   140011c8a:	mov    QWORD PTR [rcx+0x18],rdi
   140011c8e:	mov    QWORD PTR [rcx+0x20],rdi
   140011c92:	mov    QWORD PTR [rcx+0x28],rdi
   140011c96:	mov    QWORD PTR [rcx+0x30],rdi
   140011c9a:	mov    QWORD PTR [rcx+0x38],rdi
   140011c9e:	mov    WORD PTR [rcx+0x40],di
   140011ca2:	add    rcx,0x48
   140011ca6:	call   0x14000db2c
   140011cab:	nop
   140011cac:	mov    QWORD PTR [rbx+0x70],rdi
   140011cb0:	mov    QWORD PTR [rbx+0x78],rdi
   140011cb4:	mov    QWORD PTR [rbx+0x80],rdi
   140011cbb:	mov    QWORD PTR [rbx+0x98],rdi
   140011cc2:	mov    QWORD PTR [rbx+0xa0],rdi
   140011cc9:	mov    QWORD PTR [rbx+0xa8],rdi
   140011cd0:	mov    DWORD PTR [rbx+0xb0],edi
   140011cd6:	lea    rcx,[rbx+0xb8]
   140011cdd:	call   0x14000db2c
   140011ce2:	mov    QWORD PTR [rbx+0xe0],rdi
   140011ce9:	mov    QWORD PTR [rbx+0xf0],rdi
   140011cf0:	mov    rax,rbx
   140011cf3:	mov    rbx,QWORD PTR [rsp+0x48]
   140011cf8:	add    rsp,0x30
   140011cfc:	pop    rdi
   140011cfd:	ret    
   140011cfe:	int3   
   140011cff:	int3   
   140011d00:	int3   
   140011d01:	int3   
   140011d02:	int3   
   140011d03:	int3   
   140011d04:	int3   
   140011d05:	int3   
   140011d06:	int3   
   140011d07:	int3   
   140011d08:	int3   
   140011d09:	int3   
   140011d0a:	int3   
   140011d0b:	int3   
   140011d0c:	int3   
   140011d0d:	int3   
   140011d0e:	int3   
   140011d0f:	int3   
   140011d10:	sub    rsp,0x28
   140011d14:	test   dl,dl
   140011d16:	jne    0x140011d27
   140011d18:	cmp    QWORD PTR [rip+0x3ce48],0x0        # 0x14004eb68
   140011d20:	je     0x140011d27
   140011d22:	call   0x140011db0
   140011d27:	add    rsp,0x28
   140011d2b:	ret    
   140011d2c:	int3   
   140011d2d:	int3   
   140011d2e:	int3   
   140011d2f:	int3   
   140011d30:	int3   
   140011d31:	int3   
   140011d32:	int3   
   140011d33:	int3   
   140011d34:	int3   
   140011d35:	int3   
   140011d36:	int3   
   140011d37:	int3   
   140011d38:	int3   
   140011d39:	int3   
   140011d3a:	int3   
   140011d3b:	int3   
   140011d3c:	int3   
   140011d3d:	int3   
   140011d3e:	int3   
   140011d3f:	int3   
   140011d40:	mov    QWORD PTR [rsp+0x8],rbx
   140011d45:	mov    QWORD PTR [rsp+0x10],rbp
   140011d4a:	mov    QWORD PTR [rsp+0x18],rsi
   140011d4f:	push   rdi
   140011d50:	sub    rsp,0x20
   140011d54:	xor    edi,edi
   140011d56:	movzx  ebp,dx
   140011d59:	mov    rbx,rcx
   140011d5c:	mov    eax,edi
   140011d5e:	cmp    QWORD PTR [rcx+0x30],rdi
   140011d62:	je     0x140011da2
   140011d64:	mov    rsi,QWORD PTR [rbx+0x30]
   140011d68:	test   rsi,rsi
   140011d6b:	je     0x140011d8d
   140011d6d:	mov    rax,QWORD PTR [rsi]
   140011d70:	cmp    bp,0xffff
   140011d74:	sete   dil
   140011d78:	mov    rbx,QWORD PTR [rax+0x50]
   140011d7c:	mov    rcx,rbx
   140011d7f:	call   QWORD PTR [rip+0x2b9a3]        # 0x14003d728
   140011d85:	lea    edx,[rdi+0x1]
   140011d88:	mov    rcx,rsi
   140011d8b:	call   rbx
   140011d8d:	mov    rbx,QWORD PTR [rsp+0x30]
   140011d92:	mov    rbp,QWORD PTR [rsp+0x38]
   140011d97:	mov    rsi,QWORD PTR [rsp+0x40]
   140011d9c:	add    rsp,0x20
   140011da0:	pop    rdi
   140011da1:	ret    
   140011da2:	call   0x14000cb50
   140011da7:	jmp    0x140011d64
   140011da9:	int3   
   140011daa:	int3   
   140011dab:	int3   
   140011dac:	int3   
   140011dad:	int3   
   140011dae:	int3   
   140011daf:	int3   
   140011db0:	rex push rdi
   140011db2:	sub    rsp,0x40
   140011db6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140011dbf:	mov    QWORD PTR [rsp+0x50],rbx
   140011dc4:	mov    QWORD PTR [rsp+0x60],rsi
   140011dc9:	mov    rbx,rcx
   140011dcc:	mov    edx,0x2
   140011dd1:	xor    ecx,ecx
   140011dd3:	call   QWORD PTR [rip+0x4133f]        # 0x140053118
   140011dd9:	test   eax,eax
   140011ddb:	js     0x140011e72
   140011de1:	and    QWORD PTR [rsp+0x58],0x0
   140011de7:	lea    rax,[rsp+0x58]
   140011dec:	mov    QWORD PTR [rsp+0x20],rax
   140011df1:	lea    r9,[rip+0x2d8b0]        # 0x14003f6a8
   140011df8:	xor    edx,edx
   140011dfa:	lea    r8d,[rdx+0x4]
   140011dfe:	lea    rcx,[rip+0x2d893]        # 0x14003f698
   140011e05:	call   QWORD PTR [rip+0x412ed]        # 0x1400530f8
   140011e0b:	test   eax,eax
   140011e0d:	js     0x140011e5d
   140011e0f:	cmp    BYTE PTR [rbx+0x88],0x0
   140011e16:	je     0x140011e38
   140011e18:	mov    rbx,QWORD PTR [rsp+0x58]
   140011e1d:	mov    rax,QWORD PTR [rbx]
   140011e20:	or     esi,0xffffffff
   140011e23:	mov    rdi,QWORD PTR [rax+0x38]
   140011e27:	mov    rcx,rdi
   140011e2a:	call   QWORD PTR [rip+0x2b8f8]        # 0x14003d728
   140011e30:	movzx  edx,si
   140011e33:	mov    rcx,rbx
   140011e36:	call   rdi
   140011e38:	mov    rdi,QWORD PTR [rsp+0x58]
   140011e3d:	test   rdi,rdi
   140011e40:	je     0x140011e5d
   140011e42:	and    QWORD PTR [rsp+0x58],0x0
   140011e48:	mov    rax,QWORD PTR [rdi]
   140011e4b:	mov    rbx,QWORD PTR [rax+0x10]
   140011e4f:	mov    rcx,rbx
   140011e52:	call   QWORD PTR [rip+0x2b8d0]        # 0x14003d728
   140011e58:	mov    rcx,rdi
   140011e5b:	call   rbx
   140011e5d:	call   QWORD PTR [rip+0x4129d]        # 0x140053100
   140011e63:	nop
   140011e64:	mov    rbx,QWORD PTR [rsp+0x58]
   140011e69:	test   rbx,rbx
   140011e6c:	jne    0x1400298be
   140011e72:	mov    rbx,QWORD PTR [rsp+0x50]
   140011e77:	mov    rsi,QWORD PTR [rsp+0x60]
   140011e7c:	add    rsp,0x40
   140011e80:	pop    rdi
   140011e81:	ret    
   140011e82:	int3   
   140011e83:	int3   
   140011e84:	int3   
   140011e85:	int3   
   140011e86:	int3   
   140011e87:	int3   
   140011e88:	mov    QWORD PTR [rsp+0x8],rbx
   140011e8d:	mov    QWORD PTR [rsp+0x10],rsi
   140011e92:	push   rdi
   140011e93:	sub    rsp,0x20
   140011e97:	lea    rax,[rip+0x2d822]        # 0x14003f6c0
   140011e9e:	xor    ebx,ebx
   140011ea0:	test   cl,cl
   140011ea2:	lea    rsi,[rip+0x30957]        # 0x140042800
   140011ea9:	cmove  rsi,rax
   140011ead:	mov    rcx,rsi
   140011eb0:	call   0x140011ed8
   140011eb5:	test   al,al
   140011eb7:	je     0x1400298da
   140011ebd:	mov    bl,0x1
   140011ebf:	mov    rsi,QWORD PTR [rsp+0x38]
   140011ec4:	mov    al,bl
   140011ec6:	mov    rbx,QWORD PTR [rsp+0x30]
   140011ecb:	add    rsp,0x20
   140011ecf:	pop    rdi
   140011ed0:	ret    
   140011ed1:	int3   
   140011ed2:	int3   
   140011ed3:	int3   
   140011ed4:	int3   
   140011ed5:	int3   
   140011ed6:	int3   
   140011ed7:	int3   
   140011ed8:	mov    QWORD PTR [rsp+0x8],rbx
   140011edd:	mov    QWORD PTR [rsp+0x10],rsi
   140011ee2:	push   rdi
   140011ee3:	sub    rsp,0x20
   140011ee7:	xor    edx,edx
   140011ee9:	lea    r8,[rip+0x2d830]        # 0x14003f720
   140011ef0:	mov    rbx,rcx
   140011ef3:	lea    edi,[rdx+0x2]
   140011ef6:	mov    ecx,edi
   140011ef8:	call   QWORD PTR [rip+0x2b4a2]        # 0x14003d3a0
   140011efe:	mov    r8,rbx
   140011f01:	xor    edx,edx
   140011f03:	mov    ecx,edi
   140011f05:	mov    rsi,rax
   140011f08:	call   QWORD PTR [rip+0x2b492]        # 0x14003d3a0
   140011f0e:	xor    dil,dil
   140011f11:	mov    rbx,rax
   140011f14:	test   rsi,rsi
   140011f17:	je     0x140011f44
   140011f19:	test   rax,rax
   140011f1c:	je     0x140011f3b
   140011f1e:	mov    rcx,rax
   140011f21:	call   QWORD PTR [rip+0x2b4c1]        # 0x14003d3e8
   140011f27:	test   eax,eax
   140011f29:	je     0x140011f65
   140011f2b:	mov    rcx,rsi
   140011f2e:	call   QWORD PTR [rip+0x2b4b4]        # 0x14003d3e8
   140011f34:	test   eax,eax
   140011f36:	je     0x140011f65
   140011f38:	mov    dil,0x1
   140011f3b:	mov    rcx,rsi
   140011f3e:	call   QWORD PTR [rip+0x2b264]        # 0x14003d1a8
   140011f44:	test   rbx,rbx
   140011f47:	je     0x140011f52
   140011f49:	mov    rcx,rbx
   140011f4c:	call   QWORD PTR [rip+0x2b256]        # 0x14003d1a8
   140011f52:	mov    rbx,QWORD PTR [rsp+0x30]
   140011f57:	mov    al,dil
   140011f5a:	mov    rsi,QWORD PTR [rsp+0x38]
   140011f5f:	add    rsp,0x20
   140011f63:	pop    rdi
   140011f64:	ret    
   140011f65:	xor    dil,dil
   140011f68:	jmp    0x140011f3b
   140011f6a:	int3   
   140011f6b:	int3   
   140011f6c:	int3   
   140011f6d:	int3   
   140011f6e:	int3   
   140011f6f:	int3   
   140011f70:	rex push rbx
   140011f72:	sub    rsp,0x20
   140011f76:	mov    rbx,rcx
   140011f79:	mov    rcx,QWORD PTR [rcx]
   140011f7c:	test   rcx,rcx
   140011f7f:	jne    0x140011f8b
   140011f81:	and    QWORD PTR [rbx],0x0
   140011f85:	add    rsp,0x20
   140011f89:	pop    rbx
   140011f8a:	ret    
   140011f8b:	call   0x14000facc
   140011f90:	jmp    0x140011f81
   140011f92:	int3   
   140011f93:	int3   
   140011f94:	int3   
   140011f95:	int3   
   140011f96:	int3   
   140011f97:	int3   
   140011f98:	rex push rbx
   140011f9a:	sub    rsp,0x20
   140011f9e:	mov    rbx,rcx
   140011fa1:	xor    eax,eax
   140011fa3:	mov    rcx,QWORD PTR [rcx]
   140011fa6:	test   rcx,rcx
   140011fa9:	jne    0x140029920
   140011faf:	add    rsp,0x20
   140011fb3:	pop    rbx
   140011fb4:	ret    
   140011fb5:	int3   
   140011fb6:	int3   
   140011fb7:	int3   
   140011fb8:	int3   
   140011fb9:	int3   
   140011fba:	int3   
   140011fbb:	int3   
   140011fbc:	int3   
   140011fbd:	int3   
   140011fbe:	int3   
   140011fbf:	int3   
   140011fc0:	sub    rsp,0x28
   140011fc4:	test   dl,dl
   140011fc6:	jne    0x140011fcd
   140011fc8:	call   0x140011fd8
   140011fcd:	add    rsp,0x28
   140011fd1:	ret    
   140011fd2:	int3   
   140011fd3:	int3   
   140011fd4:	int3   
   140011fd5:	int3   
   140011fd6:	int3   
   140011fd7:	int3   
   140011fd8:	mov    QWORD PTR [rsp+0x8],rbx
   140011fdd:	mov    QWORD PTR [rsp+0x10],rsi
   140011fe2:	push   rdi
   140011fe3:	sub    rsp,0x30
   140011fe7:	lea    rdi,[rcx+0x78]
   140011feb:	mov    rbx,rcx
   140011fee:	mov    rcx,QWORD PTR [rdi]
   140011ff1:	call   QWORD PTR [rip+0x2b1b1]        # 0x14003d1a8
   140011ff7:	and    QWORD PTR [rdi],0x0
   140011ffb:	and    DWORD PTR [rbx+0x70],0x0
   140011fff:	call   QWORD PTR [rip+0x2b413]        # 0x14003d418
   140012005:	mov    edx,eax
   140012007:	sub    edx,DWORD PTR [rbx+0x80]
   14001200d:	cmp    edx,0x7d0
   140012013:	jb     0x140012053
   140012015:	and    DWORD PTR [rbx+0x84],0x0
   14001201c:	mov    DWORD PTR [rbx+0x80],eax
   140012022:	cmp    DWORD PTR [rbx+0x84],0xa
   140012029:	jae    0x140012037
   14001202b:	lea    rdx,[rbx+0x70]
   14001202f:	mov    rcx,rdi
   140012032:	call   0x140013914
   140012037:	mov    rdx,QWORD PTR [rdi]
   14001203a:	test   rdx,rdx
   14001203d:	jne    0x140029948
   140012043:	mov    rbx,QWORD PTR [rsp+0x40]
   140012048:	mov    rsi,QWORD PTR [rsp+0x48]
   14001204d:	add    rsp,0x30
   140012051:	pop    rdi
   140012052:	ret    
   140012053:	inc    DWORD PTR [rbx+0x84]
   140012059:	jmp    0x140012022
   14001205b:	int3   
   14001205c:	int3   
   14001205d:	int3   
   14001205e:	int3   
   14001205f:	int3   
   140012060:	int3   
   140012061:	int3   
   140012062:	int3   
   140012063:	int3   
   140012064:	int3   
   140012065:	int3   
   140012066:	int3   
   140012067:	int3   
   140012068:	int3   
   140012069:	int3   
   14001206a:	int3   
   14001206b:	int3   
   14001206c:	int3   
   14001206d:	int3   
   14001206e:	int3   
   14001206f:	int3   
   140012070:	test   rcx,rcx
   140012073:	je     0x140012084
   140012079:	jmp    0x140033f04
   14001207e:	int3   
   14001207f:	int3   
   140012080:	int3   
   140012081:	int3   
   140012082:	int3   
   140012083:	int3   
   140012084:	mov    rax,rsp
   140012087:	mov    QWORD PTR [rax+0x18],r8
   14001208b:	mov    QWORD PTR [rax+0x10],rdx
   14001208f:	mov    QWORD PTR [rax+0x8],rcx
   140012093:	push   rbx
   140012094:	push   rsi
   140012095:	push   rdi
   140012096:	push   r13
   140012098:	push   r14
   14001209a:	push   r15
   14001209c:	sub    rsp,0x38
   1400120a0:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   1400120a8:	mov    r14,r8
   1400120ab:	mov    r15,rdx
   1400120ae:	xor    ebx,ebx
   1400120b0:	test   r8,r8
   1400120b3:	je     0x140029970
   1400120b9:	mov    QWORD PTR [r8],rbx
   1400120bc:	mov    edi,0x8007000e
   1400120c1:	mov    DWORD PTR [rsp+0x70],edi
   1400120c5:	mov    QWORD PTR [rsp+0x88],rbx
   1400120cd:	mov    ecx,0xe0
   1400120d2:	call   0x140013d94
   1400120d7:	mov    QWORD PTR [rsp+0x28],rax
   1400120dc:	test   rax,rax
   1400120df:	je     0x14002997a
   1400120e5:	mov    rcx,rax
   1400120e8:	call   0x140013228
   1400120ed:	mov    rsi,rax
   1400120f0:	mov    QWORD PTR [rsp+0x88],rsi
   1400120f8:	test   rsi,rsi
   1400120fb:	je     0x140012149
   1400120fd:	lea    rcx,[rsi+0x30]
   140012101:	call   0x14000c130
   140012106:	mov    edi,eax
   140012108:	test   eax,eax
   14001210a:	js     0x140012110
   14001210c:	mov    BYTE PTR [rsi+0x58],0x1
   140012110:	cmovns edi,ebx
   140012113:	test   edi,edi
   140012115:	jne    0x1400299bc
   14001211b:	mov    rax,QWORD PTR [rsi]
   14001211e:	mov    rdi,QWORD PTR [rax]
   140012121:	lea    rax,[rip+0x10e8]        # 0x140013210
   140012128:	cmp    rdi,rax
   14001212b:	jne    0x1400299a2
   140012131:	mov    r8,r14
   140012134:	mov    rdx,r15
   140012137:	mov    rcx,rsi
   14001213a:	call   0x140013210
   14001213f:	mov    edi,eax
   140012141:	test   eax,eax
   140012143:	jne    0x1400299bc
   140012149:	mov    eax,edi
   14001214b:	add    rsp,0x38
   14001214f:	pop    r15
   140012151:	pop    r14
   140012153:	pop    r13
   140012155:	pop    rdi
   140012156:	pop    rsi
   140012157:	pop    rbx
   140012158:	ret    
   140012159:	int3   
   14001215a:	int3   
   14001215b:	int3   
   14001215c:	int3   
   14001215d:	int3   
   14001215e:	int3   
   14001215f:	int3   
   140012160:	mov    QWORD PTR [rsp+0x8],rbx
   140012165:	push   rdi
   140012166:	sub    rsp,0x20
   14001216a:	mov    rdi,rcx
   14001216d:	test   rcx,rcx
   140012170:	je     0x1400121a2
   140012172:	xor    edx,edx
   140012174:	xor    ecx,ecx
   140012176:	or     ebx,0xffffffff
   140012179:	call   QWORD PTR [rip+0x40f99]        # 0x140053118
   14001217f:	test   eax,eax
   140012181:	js     0x14001219b
   140012183:	mov    rcx,rdi
   140012186:	call   0x1400121b0
   14001218b:	mov    rcx,rdi
   14001218e:	mov    ebx,eax
   140012190:	call   0x14000dc9c
   140012195:	call   QWORD PTR [rip+0x40f65]        # 0x140053100
   14001219b:	mov    eax,ebx
   14001219d:	jmp    0x1400299dc
   1400121a2:	or     eax,0xffffffff
   1400121a5:	jmp    0x1400299dc
   1400121aa:	int3   
   1400121ab:	int3   
   1400121ac:	int3   
   1400121ad:	int3   
   1400121ae:	int3   
   1400121af:	int3   
   1400121b0:	mov    r11,rsp
   1400121b3:	mov    QWORD PTR [r11+0x10],rbx
   1400121b7:	mov    QWORD PTR [r11+0x18],rbp
   1400121bb:	mov    QWORD PTR [r11+0x20],rsi
   1400121bf:	push   rdi
   1400121c0:	push   r12
   1400121c2:	push   r13
   1400121c4:	push   r14
   1400121c6:	push   r15
   1400121c8:	sub    rsp,0x50
   1400121cc:	mov    rax,QWORD PTR [rip+0x3be3d]        # 0x14004e010
   1400121d3:	xor    rax,rsp
   1400121d6:	mov    QWORD PTR [rsp+0x48],rax
   1400121db:	mov    rax,QWORD PTR [rcx+0x88]
   1400121e2:	xor    r12d,r12d
   1400121e5:	mov    QWORD PTR [r11-0x48],rax
   1400121e9:	mov    rbp,rcx
   1400121ec:	mov    rax,QWORD PTR [rcx+0x78]
   1400121f0:	mov    esi,r12d
   1400121f3:	mov    QWORD PTR [r11-0x40],rax
   1400121f7:	mov    rax,QWORD PTR [rcx+0x80]
   1400121fe:	mov    QWORD PTR [r11-0x38],rax
   140012202:	mov    edi,0x3
   140012207:	or     r9d,0xffffffff
   14001220b:	mov    DWORD PTR [rsp+0x20],r12d
   140012210:	xor    r8d,r8d
   140012213:	lea    rdx,[rsp+0x30]
   140012218:	mov    ecx,edi
   14001221a:	call   QWORD PTR [rip+0x2b1b0]        # 0x14003d3d0
   140012220:	sub    eax,0x1
   140012223:	jne    0x1400299e8
   140012229:	mov    r13b,r12b
   14001222c:	lea    rbx,[rbp+0x90]
   140012233:	mov    rcx,rbx
   140012236:	call   QWORD PTR [rip+0x2b18c]        # 0x14003d3c8
   14001223c:	cmp    QWORD PTR [rbp+0xf0],r12
   140012243:	je     0x140012254
   140012245:	lea    rcx,[rbp+0xe0]
   14001224c:	call   0x140012cc8
   140012251:	mov    rsi,rax
   140012254:	mov    rcx,rbx
   140012257:	call   QWORD PTR [rip+0x2b17b]        # 0x14003d3d8
   14001225d:	test   rsi,rsi
   140012260:	je     0x1400122ca
   140012262:	mov    r14b,r12b
   140012265:	cmp    DWORD PTR [rsi+0x34],r12d
   140012269:	jne    0x140029abc
   14001226f:	cmp    DWORD PTR [rsi+0x30],r12d
   140012273:	jne    0x140029acd
   140012279:	cmp    DWORD PTR [rsi+0x58],r12d
   14001227d:	jne    0x140029b2a
   140012283:	cmp    DWORD PTR [rsi+0x60],r12d
   140012287:	jne    0x140029b3b
   14001228d:	cmp    DWORD PTR [rsi+0x64],r12d
   140012291:	jne    0x140029b4c
   140012297:	cmp    BYTE PTR [rsi+0x98],r12b
   14001229e:	jne    0x140029b5d
   1400122a4:	test   r14b,r14b
   1400122a7:	jne    0x1400122b1
   1400122a9:	mov    rcx,rsi
   1400122ac:	call   0x140012e7c
   1400122b1:	mov    rcx,rsi
   1400122b4:	call   0x140012e54
   1400122b9:	mov    rsi,r12
   1400122bc:	test   r13b,r13b
   1400122bf:	je     0x140012233
   1400122c5:	jmp    0x140012202
   1400122ca:	mov    r13b,0x1
   1400122cd:	jmp    0x1400122bc
   1400122cf:	int3   
   1400122d0:	int3   
   1400122d1:	int3   
   1400122d2:	int3   
   1400122d3:	int3   
   1400122d4:	int3   
   1400122d5:	int3   
   1400122d6:	int3   
   1400122d7:	int3   
   1400122d8:	mov    QWORD PTR [rsp+0x8],rcx
   1400122dd:	push   rbx
   1400122de:	sub    rsp,0x30
   1400122e2:	mov    rbx,QWORD PTR [rip+0x3c8c7]        # 0x14004ebb0
   1400122e9:	xor    r9d,r9d
   1400122ec:	xor    r8d,r8d
   1400122ef:	xor    ecx,ecx
   1400122f1:	lea    edx,[r9+0x1]
   1400122f5:	call   QWORD PTR [rip+0x2b0e5]        # 0x14003d3e0
   1400122fb:	xor    r9d,r9d
   1400122fe:	xor    r8d,r8d
   140012301:	xor    edx,edx
   140012303:	mov    QWORD PTR [rbx+0x88],rax
   14001230a:	xor    ecx,ecx
   14001230c:	call   QWORD PTR [rip+0x2b0ce]        # 0x14003d3e0
   140012312:	xor    r9d,r9d
   140012315:	xor    r8d,r8d
   140012318:	xor    edx,edx
   14001231a:	mov    QWORD PTR [rbx+0x78],rax
   14001231e:	xor    ecx,ecx
   140012320:	call   QWORD PTR [rip+0x2b0ba]        # 0x14003d3e0
   140012326:	and    DWORD PTR [rsp+0x40],0x0
   14001232b:	lea    r8,[rip+0xfffffffffffffe2e]        # 0x140012160
   140012332:	mov    QWORD PTR [rbx+0x80],rax
   140012339:	mov    r9,rbx
   14001233c:	lea    rax,[rsp+0x40]
   140012341:	xor    edx,edx
   140012343:	mov    QWORD PTR [rsp+0x28],rax
   140012348:	xor    ecx,ecx
   14001234a:	and    DWORD PTR [rsp+0x20],0x0
   14001234f:	call   QWORD PTR [rip+0x2af6b]        # 0x14003d2c0
   140012355:	mov    QWORD PTR [rbx+0x70],rax
   140012359:	add    rsp,0x30
   14001235d:	pop    rbx
   14001235e:	ret    
   14001235f:	int3   
   140012360:	int3   
   140012361:	int3   
   140012362:	int3   
   140012363:	int3   
   140012364:	int3   
   140012365:	int3   
   140012366:	int3   
   140012367:	int3   
   140012368:	mov    rax,rsp
   14001236b:	push   rbp
   14001236c:	push   r12
   14001236e:	push   r13
   140012370:	push   r14
   140012372:	push   r15
   140012374:	lea    rbp,[rax-0x68]
   140012378:	sub    rsp,0x1b0
   14001237f:	mov    QWORD PTR [rbp+0x18],0xfffffffffffffffe
   140012387:	mov    QWORD PTR [rax+0x10],rbx
   14001238b:	mov    QWORD PTR [rax+0x18],rsi
   14001238f:	mov    QWORD PTR [rax+0x20],rdi
   140012393:	mov    rax,QWORD PTR [rip+0x3bc76]        # 0x14004e010
   14001239a:	xor    rax,rsp
   14001239d:	mov    QWORD PTR [rbp+0x38],rax
   1400123a1:	mov    BYTE PTR [rbp-0x7f],r9b
   1400123a5:	mov    QWORD PTR [rbp+0x10],r8
   1400123a9:	mov    BYTE PTR [rbp-0x7e],dl
   1400123ac:	mov    r14,rcx
   1400123af:	mov    QWORD PTR [rbp-0x8],rcx
   1400123b3:	xor    esi,esi
   1400123b5:	cmp    BYTE PTR [rip+0x3c7e4],sil        # 0x14004eba0
   1400123bc:	jne    0x140029bb8
   1400123c2:	mov    r13d,esi
   1400123c5:	add    rcx,0x48
   1400123c9:	call   QWORD PTR [rip+0x2aff9]        # 0x14003d3c8
   1400123cf:	mov    r12,QWORD PTR [r14+0x40]
   1400123d3:	mov    r15d,esi
   1400123d6:	cmp    DWORD PTR [r12+0x8],esi
   1400123db:	jle    0x140012817
   1400123e1:	lea    r13d,[rsi+0x1]
   1400123e5:	mov    edx,r15d
   1400123e8:	mov    rcx,r12
   1400123eb:	call   0x14000f858
   1400123f0:	mov    rdi,QWORD PTR [rax]
   1400123f3:	mov    rax,QWORD PTR [rdi]
   1400123f6:	mov    rbx,QWORD PTR [rax+0x8]
   1400123fa:	mov    rcx,rbx
   1400123fd:	call   QWORD PTR [rip+0x2b325]        # 0x14003d728
   140012403:	mov    rcx,rdi
   140012406:	call   rbx
   140012408:	add    r15d,r13d
   14001240b:	cmp    r15d,DWORD PTR [r12+0x8]
   140012410:	jl     0x1400123e5
   140012412:	mov    r13,rsi
   140012415:	cmp    DWORD PTR [r12+0x8],esi
   14001241a:	jle    0x140012817
   140012420:	lea    rcx,[r14+0x8]
   140012424:	call   QWORD PTR [rip+0x2af9e]        # 0x14003d3c8
   14001242a:	mov    rdi,QWORD PTR [r14+0x38]
   14001242e:	mov    QWORD PTR [rbp+0x20],rdi
   140012432:	test   rdi,rdi
   140012435:	jne    0x140029bbf
   14001243b:	lea    rcx,[r14+0x8]
   14001243f:	call   QWORD PTR [rip+0x2af93]        # 0x14003d3d8
   140012445:	mov    DWORD PTR [rbp-0x70],esi
   140012448:	mov    QWORD PTR [rbp-0x18],rsi
   14001244c:	mov    QWORD PTR [rbp-0x28],rsi
   140012450:	mov    QWORD PTR [rbp+0x28],rsi
   140012454:	mov    QWORD PTR [rbp+0x30],rsi
   140012458:	mov    DWORD PTR [rbp-0x48],esi
   14001245b:	mov    DWORD PTR [rbp-0x50],esi
   14001245e:	mov    DWORD PTR [rbp-0x78],esi
   140012461:	mov    DWORD PTR [rbp-0x7c],esi
   140012464:	mov    DWORD PTR [rbp-0x74],esi
   140012467:	mov    DWORD PTR [rbp-0x60],esi
   14001246a:	mov    DWORD PTR [rbp-0x68],esi
   14001246d:	mov    DWORD PTR [rbp-0x6c],esi
   140012470:	mov    DWORD PTR [rbp-0x4c],esi
   140012473:	mov    QWORD PTR [rbp-0x30],rsi
   140012477:	mov    QWORD PTR [rbp-0x20],rsi
   14001247b:	mov    QWORD PTR [rbp-0x38],rsi
   14001247f:	mov    BYTE PTR [rbp-0x80],sil
   140012483:	mov    DWORD PTR [rbp-0x5c],esi
   140012486:	mov    DWORD PTR [rbp-0x44],esi
   140012489:	mov    DWORD PTR [rbp-0x64],esi
   14001248c:	or     eax,0xffffffff
   14001248f:	mov    DWORD PTR [rbp-0x54],eax
   140012492:	mov    DWORD PTR [rbp-0x40],eax
   140012495:	mov    DWORD PTR [rbp-0x58],esi
   140012498:	mov    r13b,BYTE PTR [rbp-0x7e]
   14001249c:	test   r13b,r13b
   14001249f:	jne    0x14001266c
   1400124a5:	mov    QWORD PTR [rbp+0x8],rsi
   1400124a9:	lea    rdx,[rbp+0x8]
   1400124ad:	xor    ecx,ecx
   1400124af:	call   0x140013868
   1400124b4:	mov    rbx,QWORD PTR [rbp+0x8]
   1400124b8:	test   rbx,rbx
   1400124bb:	je     0x14001266c
   1400124c1:	mov    rax,QWORD PTR [rbx]
   1400124c4:	mov    r15,QWORD PTR [rax+0x48]
   1400124c8:	lea    rax,[rip+0xffffffffffffb481]        # 0x14000d950
   1400124cf:	cmp    r15,rax
   1400124d2:	jne    0x140012925
   1400124d8:	lea    rax,[rbp+0x0]
   1400124dc:	mov    QWORD PTR [rsp+0x28],rax
   1400124e1:	lea    rax,[rbp-0x10]
   1400124e5:	mov    QWORD PTR [rsp+0x20],rax
   1400124ea:	lea    r9,[rbp-0x28]
   1400124ee:	lea    r8,[rbp-0x18]
   1400124f2:	lea    rdx,[rbp-0x70]
   1400124f6:	mov    rcx,rbx
   1400124f9:	call   0x14000d950
   1400124fe:	mov    rax,QWORD PTR [rbx]
   140012501:	mov    r15,QWORD PTR [rax+0x50]
   140012505:	lea    rax,[rip+0xffffffffffffb514]        # 0x14000da20
   14001250c:	cmp    r15,rax
   14001250f:	jne    0x140012960
   140012515:	lea    rax,[rbp-0x78]
   140012519:	mov    QWORD PTR [rsp+0x20],rax
   14001251e:	lea    r9,[rbp-0x50]
   140012522:	lea    r8,[rbp-0x48]
   140012526:	lea    rdx,[rbp+0x28]
   14001252a:	mov    rcx,rbx
   14001252d:	call   0x14000da20
   140012532:	mov    eax,DWORD PTR [rbp-0x78]
   140012535:	cmp    BYTE PTR [rbp-0x7f],sil
   140012539:	mov    ecx,0x1
   14001253e:	cmovne eax,ecx
   140012541:	mov    DWORD PTR [rbp-0x78],eax
   140012544:	mov    rax,QWORD PTR [rbx]
   140012547:	mov    r15,QWORD PTR [rax+0x58]
   14001254b:	lea    rax,[rip+0xffffffffffffb4be]        # 0x14000da10
   140012552:	cmp    r15,rax
   140012555:	jne    0x140012992
   14001255b:	lea    r8,[rbp-0x74]
   14001255f:	lea    rdx,[rbp-0x7c]
   140012563:	mov    rcx,rbx
   140012566:	call   0x14000da10
   14001256b:	mov    eax,DWORD PTR [rbp-0x7c]
   14001256e:	cmp    BYTE PTR [rbp+0x90],sil
   140012575:	cmovne eax,esi
   140012578:	mov    DWORD PTR [rbp-0x7c],eax
   14001257b:	mov    rax,QWORD PTR [rbx]
   14001257e:	mov    r15,QWORD PTR [rax+0x60]
   140012582:	lea    rax,[rip+0xffffffffffffb457]        # 0x14000d9e0
   140012589:	cmp    r15,rax
   14001258c:	jne    0x1400129b7
   140012592:	lea    rax,[rbp-0x58]
   140012596:	mov    QWORD PTR [rsp+0x28],rax
   14001259b:	lea    rax,[rbp-0x40]
   14001259f:	mov    QWORD PTR [rsp+0x20],rax
   1400125a4:	lea    r9,[rbp-0x54]
   1400125a8:	lea    r8,[rbp-0x64]
   1400125ac:	lea    rdx,[rbp-0x60]
   1400125b0:	mov    rcx,rbx
   1400125b3:	call   0x14000d9e0
   1400125b8:	mov    rax,QWORD PTR [rbx]
   1400125bb:	mov    r15,QWORD PTR [rax+0x70]
   1400125bf:	lea    rax,[rip+0xffffffffffffb40a]        # 0x14000d9d0
   1400125c6:	cmp    r15,rax
   1400125c9:	jne    0x1400129f2
   1400125cf:	lea    rdx,[rbp-0x6c]
   1400125d3:	mov    rcx,rbx
   1400125d6:	call   0x14000d9d0
   1400125db:	mov    rax,QWORD PTR [rbx]
   1400125de:	mov    r15,QWORD PTR [rax+0x78]
   1400125e2:	lea    rax,[rip+0xffffffffffffb3b7]        # 0x14000d9a0
   1400125e9:	cmp    r15,rax
   1400125ec:	jne    0x140012a13
   1400125f2:	lea    rax,[rbp-0x38]
   1400125f6:	mov    QWORD PTR [rsp+0x28],rax
   1400125fb:	lea    rax,[rbp-0x20]
   1400125ff:	mov    QWORD PTR [rsp+0x20],rax
   140012604:	lea    r9,[rbp-0x30]
   140012608:	lea    r8,[rbp-0x4c]
   14001260c:	lea    rdx,[rbp-0x68]
   140012610:	mov    rcx,rbx
   140012613:	call   0x14000d9a0
   140012618:	mov    rax,QWORD PTR [rbx]
   14001261b:	mov    r15,QWORD PTR [rax+0x80]
   140012622:	lea    rax,[rip+0xffffffffffffb357]        # 0x14000d980
   140012629:	cmp    r15,rax
   14001262c:	jne    0x140012a4e
   140012632:	lea    r9,[rbp-0x44]
   140012636:	lea    r8,[rbp-0x5c]
   14001263a:	lea    rdx,[rbp-0x80]
   14001263e:	mov    rcx,rbx
   140012641:	call   0x14000d980
   140012646:	mov    rax,QWORD PTR [rbx]
   140012649:	mov    r15,QWORD PTR [rax+0x10]
   14001264d:	lea    rax,[rip+0xffffffffffffe13c]        # 0x140010790
   140012654:	cmp    r15,rax
   140012657:	je     0x140012a77
   14001265d:	mov    rcx,r15
   140012660:	call   QWORD PTR [rip+0x2b0c2]        # 0x14003d728
   140012666:	mov    rcx,rbx
   140012669:	call   r15
   14001266c:	mov    ecx,0xb8
   140012671:	call   0x140013d94
   140012676:	mov    r10,rax
   140012679:	mov    QWORD PTR [rbp+0x8],rax
   14001267d:	test   rax,rax
   140012680:	je     0x140029cf4
   140012686:	movzx  edx,r13b
   14001268a:	mov    rax,QWORD PTR [rbp+0x10]
   14001268e:	mov    QWORD PTR [rsp+0xe8],rax
   140012696:	mov    ecx,DWORD PTR [rbp-0x58]
   140012699:	mov    DWORD PTR [rsp+0xe0],ecx
   1400126a0:	mov    ecx,DWORD PTR [rbp-0x40]
   1400126a3:	mov    DWORD PTR [rsp+0xd8],ecx
   1400126aa:	mov    ecx,DWORD PTR [rbp-0x54]
   1400126ad:	mov    DWORD PTR [rsp+0xd0],ecx
   1400126b4:	mov    eax,DWORD PTR [rbp-0x64]
   1400126b7:	mov    DWORD PTR [rsp+0xc8],eax
   1400126be:	mov    eax,DWORD PTR [rbp-0x44]
   1400126c1:	mov    DWORD PTR [rsp+0xc0],eax
   1400126c8:	mov    eax,DWORD PTR [rbp-0x5c]
   1400126cb:	mov    DWORD PTR [rsp+0xb8],eax
   1400126d2:	mov    al,BYTE PTR [rbp-0x80]
   1400126d5:	mov    BYTE PTR [rsp+0xb0],al
   1400126dc:	mov    rax,QWORD PTR [rbp+0x0]
   1400126e0:	mov    QWORD PTR [rsp+0xa8],rax
   1400126e8:	mov    rax,QWORD PTR [rbp-0x10]
   1400126ec:	mov    QWORD PTR [rsp+0xa0],rax
   1400126f4:	mov    rax,QWORD PTR [rbp-0x38]
   1400126f8:	mov    QWORD PTR [rsp+0x98],rax
   140012700:	mov    rax,QWORD PTR [rbp-0x20]
   140012704:	mov    QWORD PTR [rsp+0x90],rax
   14001270c:	mov    rax,QWORD PTR [rbp-0x30]
   140012710:	mov    QWORD PTR [rsp+0x88],rax
   140012718:	mov    eax,DWORD PTR [rbp-0x4c]
   14001271b:	mov    DWORD PTR [rsp+0x80],eax
   140012722:	mov    eax,DWORD PTR [rbp-0x6c]
   140012725:	mov    DWORD PTR [rsp+0x78],eax
   140012729:	mov    eax,DWORD PTR [rbp-0x68]
   14001272c:	mov    DWORD PTR [rsp+0x70],eax
   140012730:	mov    eax,DWORD PTR [rbp-0x60]
   140012733:	mov    DWORD PTR [rsp+0x68],eax
   140012737:	mov    eax,DWORD PTR [rbp-0x74]
   14001273a:	mov    DWORD PTR [rsp+0x60],eax
   14001273e:	mov    eax,DWORD PTR [rbp-0x7c]
   140012741:	mov    DWORD PTR [rsp+0x58],eax
   140012745:	mov    eax,DWORD PTR [rbp-0x78]
   140012748:	mov    DWORD PTR [rsp+0x50],eax
   14001274c:	mov    eax,DWORD PTR [rbp-0x50]
   14001274f:	mov    DWORD PTR [rsp+0x48],eax
   140012753:	mov    eax,DWORD PTR [rbp-0x48]
   140012756:	mov    DWORD PTR [rsp+0x40],eax
   14001275a:	lea    rax,[rbp+0x28]
   14001275e:	mov    QWORD PTR [rsp+0x38],rax
   140012763:	mov    DWORD PTR [rsp+0x30],edx
   140012767:	mov    rax,QWORD PTR [rbp-0x28]
   14001276b:	mov    QWORD PTR [rsp+0x28],rax
   140012770:	mov    rax,QWORD PTR [rbp-0x18]
   140012774:	mov    QWORD PTR [rsp+0x20],rax
   140012779:	mov    r9d,DWORD PTR [rbp-0x70]
   14001277d:	mov    r8,rdi
   140012780:	mov    rdx,r12
   140012783:	mov    rcx,r10
   140012786:	call   0x140012fc0
   14001278b:	mov    r13,rax
   14001278e:	mov    rcx,QWORD PTR [rbp-0x38]
   140012792:	call   QWORD PTR [rip+0x40928]        # 0x1400530c0
   140012798:	nop
   140012799:	mov    rcx,QWORD PTR [rbp-0x20]
   14001279d:	call   QWORD PTR [rip+0x4091d]        # 0x1400530c0
   1400127a3:	nop
   1400127a4:	mov    rcx,QWORD PTR [rbp-0x30]
   1400127a8:	call   QWORD PTR [rip+0x40912]        # 0x1400530c0
   1400127ae:	nop
   1400127af:	lea    rcx,[rip+0xffffffffffff9efa]        # 0x14000c6b0
   1400127b6:	lea    rdx,[rip+0xffffffffffff9d23]        # 0x14000c4e0
   1400127bd:	mov    rbx,QWORD PTR [rbp-0x28]
   1400127c1:	test   rbx,rbx
   1400127c4:	je     0x1400127ec
   1400127c6:	mov    rax,QWORD PTR [rbx]
   1400127c9:	mov    r15,QWORD PTR [rax+0x10]
   1400127cd:	cmp    r15,rdx
   1400127d0:	jne    0x1400128f9
   1400127d6:	mov    rcx,rbx
   1400127d9:	call   0x14000c4e0
   1400127de:	lea    rcx,[rip+0xffffffffffff9ecb]        # 0x14000c6b0
   1400127e5:	lea    rdx,[rip+0xffffffffffff9cf4]        # 0x14000c4e0
   1400127ec:	mov    rbx,QWORD PTR [rbp-0x18]
   1400127f0:	test   rbx,rbx
   1400127f3:	je     0x14001280e
   1400127f5:	mov    rax,QWORD PTR [rbx]
   1400127f8:	mov    r15,QWORD PTR [rax+0x10]
   1400127fc:	cmp    r15,rdx
   1400127ff:	jne    0x14001290f
   140012805:	mov    rcx,rbx
   140012808:	call   0x14000c4e0
   14001280d:	nop
   14001280e:	test   rdi,rdi
   140012811:	jne    0x140029cfc
   140012817:	mov    ebx,esi
   140012819:	cmp    DWORD PTR [r12+0x8],esi
   14001281e:	jle    0x140012860
   140012820:	mov    r14d,0x1
   140012826:	mov    edx,ebx
   140012828:	mov    rcx,r12
   14001282b:	call   0x14000f858
   140012830:	mov    rdi,QWORD PTR [rax]
   140012833:	mov    rax,QWORD PTR [rdi]
   140012836:	mov    r15,QWORD PTR [rax+0x10]
   14001283a:	lea    rax,[rip+0x9bf]        # 0x140013200
   140012841:	cmp    r15,rax
   140012844:	jne    0x140029d17
   14001284a:	mov    rcx,rdi
   14001284d:	call   0x140013200
   140012852:	add    ebx,r14d
   140012855:	cmp    ebx,DWORD PTR [r12+0x8]
   14001285a:	jl     0x140012826
   14001285c:	mov    r14,QWORD PTR [rbp-0x8]
   140012860:	lea    rcx,[r14+0x48]
   140012864:	call   QWORD PTR [rip+0x2ab6e]        # 0x14003d3d8
   14001286a:	test   r13,r13
   14001286d:	je     0x1400128c9
   14001286f:	mov    QWORD PTR [rbp-0x8],r13
   140012873:	lea    rdi,[r14+0x90]
   14001287a:	mov    rcx,rdi
   14001287d:	call   QWORD PTR [rip+0x2ab45]        # 0x14003d3c8
   140012883:	lea    rbx,[r14+0xe0]
   14001288a:	mov    r8,QWORD PTR [rbx+0x8]
   14001288e:	lea    rdx,[rbp-0x8]
   140012892:	mov    rcx,rbx
   140012895:	call   0x14000fe48
   14001289a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001289e:	test   rcx,rcx
   1400128a1:	jne    0x140029d2c
   1400128a7:	mov    QWORD PTR [rbx],rax
   1400128aa:	mov    QWORD PTR [rbx+0x8],rax
   1400128ae:	mov    rcx,rdi
   1400128b1:	call   QWORD PTR [rip+0x2ab21]        # 0x14003d3d8
   1400128b7:	mov    rcx,QWORD PTR [r14+0x78]
   1400128bb:	call   QWORD PTR [rip+0x2ab27]        # 0x14003d3e8
   1400128c1:	mov    eax,0x1
   1400128c6:	mov    sil,al
   1400128c9:	mov    al,sil
   1400128cc:	mov    rcx,QWORD PTR [rbp+0x38]
   1400128d0:	xor    rcx,rsp
   1400128d3:	call   0x1400141d0
   1400128d8:	lea    r11,[rsp+0x1b0]
   1400128e0:	mov    rbx,QWORD PTR [r11+0x38]
   1400128e4:	mov    rsi,QWORD PTR [r11+0x40]
   1400128e8:	mov    rdi,QWORD PTR [r11+0x48]
   1400128ec:	mov    rsp,r11
   1400128ef:	pop    r15
   1400128f1:	pop    r14
   1400128f3:	pop    r13
   1400128f5:	pop    r12
   1400128f7:	pop    rbp
   1400128f8:	ret    
   1400128f9:	cmp    r15,rcx
   1400128fc:	jne    0x140012a84
   140012902:	mov    rcx,rbx
   140012905:	call   0x14000c6b0
   14001290a:	jmp    0x1400127de
   14001290f:	cmp    r15,rcx
   140012912:	jne    0x140012a98
   140012918:	mov    rcx,rbx
   14001291b:	call   0x14000c6b0
   140012920:	jmp    0x14001280e
   140012925:	lea    rax,[rip+0xffffffffffffe1f4]        # 0x140010b20
   14001292c:	cmp    r15,rax
   14001292f:	jne    0x140029bda
   140012935:	lea    rax,[rbp+0x0]
   140012939:	mov    QWORD PTR [rsp+0x28],rax
   14001293e:	lea    rax,[rbp-0x10]
   140012942:	mov    QWORD PTR [rsp+0x20],rax
   140012947:	lea    r9,[rbp-0x28]
   14001294b:	lea    r8,[rbp-0x18]
   14001294f:	lea    rdx,[rbp-0x70]
   140012953:	mov    rcx,rbx
   140012956:	call   0x140010b20
   14001295b:	jmp    0x1400124fe
   140012960:	lea    rax,[rip+0xffffffffffffe4e9]        # 0x140010e50
   140012967:	cmp    r15,rax
   14001296a:	jne    0x140029c0d
   140012970:	lea    rax,[rbp-0x78]
   140012974:	mov    QWORD PTR [rsp+0x20],rax
   140012979:	lea    r9,[rbp-0x50]
   14001297d:	lea    r8,[rbp-0x48]
   140012981:	lea    rdx,[rbp+0x28]
   140012985:	mov    rcx,rbx
   140012988:	call   0x140010e50
   14001298d:	jmp    0x140012532
   140012992:	lea    rax,[rip+0xffffffffffffe447]        # 0x140010de0
   140012999:	cmp    r15,rax
   14001299c:	jne    0x140029c37
   1400129a2:	lea    r8,[rbp-0x74]
   1400129a6:	lea    rdx,[rbp-0x7c]
   1400129aa:	mov    rcx,rbx
   1400129ad:	call   0x140010de0
   1400129b2:	jmp    0x14001256b
   1400129b7:	lea    rax,[rip+0xffffffffffffe382]        # 0x140010d40
   1400129be:	cmp    r15,rax
   1400129c1:	jne    0x140029c54
   1400129c7:	lea    rax,[rbp-0x58]
   1400129cb:	mov    QWORD PTR [rsp+0x28],rax
   1400129d0:	lea    rax,[rbp-0x40]
   1400129d4:	mov    QWORD PTR [rsp+0x20],rax
   1400129d9:	lea    r9,[rbp-0x54]
   1400129dd:	lea    r8,[rbp-0x64]
   1400129e1:	lea    rdx,[rbp-0x60]
   1400129e5:	mov    rcx,rbx
   1400129e8:	call   0x140010d40
   1400129ed:	jmp    0x1400125b8
   1400129f2:	lea    rax,[rip+0xffffffffffffe2f7]        # 0x140010cf0
   1400129f9:	cmp    r15,rax
   1400129fc:	jne    0x140029c87
   140012a02:	lea    rdx,[rbp-0x6c]
   140012a06:	mov    rcx,rbx
   140012a09:	call   0x140010cf0
   140012a0e:	jmp    0x1400125db
   140012a13:	lea    rax,[rip+0xffffffffffffe246]        # 0x140010c60
   140012a1a:	cmp    r15,rax
   140012a1d:	jne    0x140029ca0
   140012a23:	lea    rax,[rbp-0x38]
   140012a27:	mov    QWORD PTR [rsp+0x28],rax
   140012a2c:	lea    rax,[rbp-0x20]
   140012a30:	mov    QWORD PTR [rsp+0x20],rax
   140012a35:	lea    r9,[rbp-0x30]
   140012a39:	lea    r8,[rbp-0x4c]
   140012a3d:	lea    rdx,[rbp-0x68]
   140012a41:	mov    rcx,rbx
   140012a44:	call   0x140010c60
   140012a49:	jmp    0x140012618
   140012a4e:	lea    rax,[rip+0xffffffffffffe18b]        # 0x140010be0
   140012a55:	cmp    r15,rax
   140012a58:	jne    0x140029cd3
   140012a5e:	lea    r9,[rbp-0x44]
   140012a62:	lea    r8,[rbp-0x5c]
   140012a66:	lea    rdx,[rbp-0x80]
   140012a6a:	mov    rcx,rbx
   140012a6d:	call   0x140010be0
   140012a72:	jmp    0x140012646
   140012a77:	mov    rcx,rbx
   140012a7a:	call   0x140010790
   140012a7f:	jmp    0x14001266c
   140012a84:	mov    rcx,r15
   140012a87:	call   QWORD PTR [rip+0x2ac9b]        # 0x14003d728
   140012a8d:	mov    rcx,rbx
   140012a90:	call   r15
   140012a93:	jmp    0x1400127de
   140012a98:	mov    rcx,r15
   140012a9b:	call   QWORD PTR [rip+0x2ac87]        # 0x14003d728
   140012aa1:	mov    rcx,rbx
   140012aa4:	call   r15
   140012aa7:	jmp    0x14001280e
   140012aac:	int3   
   140012aad:	int3   
   140012aae:	int3   
   140012aaf:	int3   
   140012ab0:	int3   
   140012ab1:	int3   
   140012ab2:	int3   
   140012ab3:	int3   
   140012ab4:	mov    rax,rsp
   140012ab7:	mov    QWORD PTR [rax+0x8],rcx
   140012abb:	push   rdi
   140012abc:	sub    rsp,0x30
   140012ac0:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140012ac8:	mov    QWORD PTR [rax+0x18],rbx
   140012acc:	mov    QWORD PTR [rax+0x20],rsi
   140012ad0:	mov    rbx,rcx
   140012ad3:	xor    esi,esi
   140012ad5:	mov    QWORD PTR [rcx],rsi
   140012ad8:	add    rcx,0x8
   140012adc:	call   0x14000db2c
   140012ae1:	nop
   140012ae2:	mov    QWORD PTR [rbx+0x30],rsi
   140012ae6:	mov    QWORD PTR [rbx+0x38],rsi
   140012aea:	lea    rdi,[rbx+0x40]
   140012aee:	mov    QWORD PTR [rsp+0x48],rdi
   140012af3:	mov    QWORD PTR [rdi],rsi
   140012af6:	lea    rcx,[rdi+0x8]
   140012afa:	call   0x14000db2c
   140012aff:	nop
   140012b00:	lea    ecx,[rsi+0x10]
   140012b03:	call   0x140013d94
   140012b08:	mov    QWORD PTR [rsp+0x48],rax
   140012b0d:	test   rax,rax
   140012b10:	je     0x140012b9c
   140012b16:	mov    QWORD PTR [rax],rsi
   140012b19:	mov    QWORD PTR [rax+0x8],rsi
   140012b1d:	mov    QWORD PTR [rdi],rax
   140012b20:	mov    QWORD PTR [rbx+0x70],rsi
   140012b24:	mov    QWORD PTR [rbx+0x78],rsi
   140012b28:	mov    QWORD PTR [rbx+0x80],rsi
   140012b2f:	mov    QWORD PTR [rbx+0x88],rsi
   140012b36:	lea    rcx,[rbx+0x90]
   140012b3d:	call   0x14000db2c
   140012b42:	nop
   140012b43:	lea    rcx,[rbx+0xb8]
   140012b4a:	call   0x14000db2c
   140012b4f:	mov    QWORD PTR [rbx+0xe0],rsi
   140012b56:	mov    QWORD PTR [rbx+0xe8],rsi
   140012b5d:	mov    QWORD PTR [rbx+0xf0],rsi
   140012b64:	mov    QWORD PTR [rbx+0xf8],rsi
   140012b6b:	mov    QWORD PTR [rbx+0x100],rsi
   140012b72:	mov    DWORD PTR [rbx+0x108],0xa
   140012b7c:	mov    QWORD PTR [rbx+0x110],rsi
   140012b83:	mov    DWORD PTR [rbx+0x118],esi
   140012b89:	mov    rax,rbx
   140012b8c:	mov    rbx,QWORD PTR [rsp+0x50]
   140012b91:	mov    rsi,QWORD PTR [rsp+0x58]
   140012b96:	add    rsp,0x30
   140012b9a:	pop    rdi
   140012b9b:	ret    
   140012b9c:	mov    rax,rsi
   140012b9f:	jmp    0x140012b1d
   140012ba4:	int3   
   140012ba5:	int3   
   140012ba6:	int3   
   140012ba7:	int3   
   140012ba8:	int3   
   140012ba9:	int3   
   140012baa:	int3   
   140012bab:	int3   
   140012bac:	mov    QWORD PTR [rsp+0x10],rdx
   140012bb1:	push   rbx
   140012bb2:	sub    rsp,0x30
   140012bb6:	mov    rbx,rcx
   140012bb9:	add    rcx,0x48
   140012bbd:	call   QWORD PTR [rip+0x2a805]        # 0x14003d3c8
   140012bc3:	mov    rcx,QWORD PTR [rbx+0x40]
   140012bc7:	lea    rdx,[rsp+0x48]
   140012bcc:	call   0x14000f7cc
   140012bd1:	lea    rcx,[rbx+0x48]
   140012bd5:	call   QWORD PTR [rip+0x2a7fd]        # 0x14003d3d8
   140012bdb:	xor    r9d,r9d
   140012bde:	mov    BYTE PTR [rsp+0x20],0x1
   140012be3:	xor    r8d,r8d
   140012be6:	xor    edx,edx
   140012be8:	mov    rcx,rbx
   140012beb:	call   0x140012368
   140012bf0:	add    rsp,0x30
   140012bf4:	pop    rbx
   140012bf5:	ret    
   140012bf6:	int3   
   140012bf7:	int3   
   140012bf8:	int3   
   140012bf9:	int3   
   140012bfa:	int3   
   140012bfb:	int3   
   140012bfc:	rex push rdi
   140012bfe:	sub    rsp,0x30
   140012c02:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012c0b:	mov    QWORD PTR [rsp+0x40],rbx
   140012c10:	mov    rdi,rcx
   140012c13:	cmp    BYTE PTR [rip+0x3bf86],0x0        # 0x14004eba0
   140012c1a:	jne    0x140012c40
   140012c1c:	lea    rbx,[rcx+0x8]
   140012c20:	mov    QWORD PTR [rsp+0x48],rbx
   140012c25:	mov    rcx,rbx
   140012c28:	call   QWORD PTR [rip+0x2a79a]        # 0x14003d3c8
   140012c2e:	nop
   140012c2f:	mov    rcx,QWORD PTR [rdi]
   140012c32:	test   rcx,rcx
   140012c35:	jne    0x140012c4d
   140012c37:	mov    rcx,rbx
   140012c3a:	call   QWORD PTR [rip+0x2a798]        # 0x14003d3d8
   140012c40:	xor    eax,eax
   140012c42:	mov    rbx,QWORD PTR [rsp+0x40]
   140012c47:	add    rsp,0x30
   140012c4b:	pop    rdi
   140012c4c:	ret    
   140012c4d:	call   0x140033170
   140012c52:	nop
   140012c53:	jmp    0x140012c37
   140012c55:	int3   
   140012c56:	int3   
   140012c57:	int3   
   140012c58:	int3   
   140012c59:	int3   
   140012c5a:	int3   
   140012c5b:	int3   
   140012c5c:	sub    rsp,0x28
   140012c60:	mov    rax,QWORD PTR [rcx+0x20]
   140012c64:	mov    QWORD PTR [rdx],rax
   140012c67:	sub    QWORD PTR [rcx+0x10],0x1
   140012c6c:	mov    QWORD PTR [rcx+0x20],rdx
   140012c70:	jne    0x140012c77
   140012c72:	call   0x140012c84
   140012c77:	add    rsp,0x28
   140012c7b:	ret    
   140012c7c:	int3   
   140012c7d:	int3   
   140012c7e:	int3   
   140012c7f:	int3   
   140012c80:	int3   
   140012c81:	int3   
   140012c82:	int3   
   140012c83:	int3   
   140012c84:	rex push rbx
   140012c86:	sub    rsp,0x20
   140012c8a:	cmp    QWORD PTR [rcx+0x10],0x0
   140012c8f:	mov    rbx,rcx
   140012c92:	ja     0x140029d34
   140012c98:	and    QWORD PTR [rbx],0x0
   140012c9c:	and    QWORD PTR [rbx+0x8],0x0
   140012ca1:	and    QWORD PTR [rbx+0x20],0x0
   140012ca6:	mov    rcx,QWORD PTR [rbx+0x18]
   140012caa:	test   rcx,rcx
   140012cad:	je     0x140012cb9
   140012caf:	call   0x14000e0e8
   140012cb4:	and    QWORD PTR [rbx+0x18],0x0
   140012cb9:	add    rsp,0x20
   140012cbd:	pop    rbx
   140012cbe:	ret    
   140012cbf:	int3   
   140012cc0:	int3   
   140012cc1:	int3   
   140012cc2:	int3   
   140012cc3:	int3   
   140012cc4:	int3   
   140012cc5:	int3   
   140012cc6:	int3   
   140012cc7:	int3   
   140012cc8:	rex push rbx
   140012cca:	sub    rsp,0x20
   140012cce:	mov    rdx,QWORD PTR [rcx]
   140012cd1:	test   rdx,rdx
   140012cd4:	je     0x140029d62
   140012cda:	mov    rax,QWORD PTR [rdx]
   140012cdd:	mov    rbx,QWORD PTR [rdx+0x10]
   140012ce1:	mov    QWORD PTR [rcx],rax
   140012ce4:	test   rax,rax
   140012ce7:	jne    0x140012cfb
   140012ce9:	and    QWORD PTR [rcx+0x8],rax
   140012ced:	call   0x140012c5c
   140012cf2:	mov    rax,rbx
   140012cf5:	add    rsp,0x20
   140012cf9:	pop    rbx
   140012cfa:	ret    
   140012cfb:	and    QWORD PTR [rax+0x8],0x0
   140012d00:	jmp    0x140012ced
   140012d02:	int3   
   140012d03:	int3   
   140012d04:	int3   
   140012d05:	int3   
   140012d06:	int3   
   140012d07:	int3   
   140012d08:	mov    rax,rsp
   140012d0b:	mov    QWORD PTR [rax+0x8],rcx
   140012d0f:	push   rsi
   140012d10:	push   rdi
   140012d11:	push   r14
   140012d13:	sub    rsp,0x30
   140012d17:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140012d1f:	mov    QWORD PTR [rax+0x10],rbx
   140012d23:	mov    QWORD PTR [rax+0x18],rbp
   140012d27:	mov    rdi,rcx
   140012d2a:	mov    esi,DWORD PTR [rcx+0x8]
   140012d2d:	xor    ebx,ebx
   140012d2f:	test   esi,esi
   140012d31:	jle    0x140012d65
   140012d33:	mov    edx,ebx
   140012d35:	mov    rcx,rdi
   140012d38:	call   0x14000f858
   140012d3d:	mov    r14,QWORD PTR [rax]
   140012d40:	mov    rax,QWORD PTR [r14]
   140012d43:	mov    rbp,QWORD PTR [rax+0x10]
   140012d47:	lea    rax,[rip+0x4b2]        # 0x140013200
   140012d4e:	cmp    rbp,rax
   140012d51:	jne    0x140029d6e
   140012d57:	mov    rcx,r14
   140012d5a:	call   0x140013200
   140012d5f:	inc    ebx
   140012d61:	cmp    ebx,esi
   140012d63:	jl     0x140012d33
   140012d65:	mov    rcx,QWORD PTR [rdi+0x80]
   140012d6c:	call   QWORD PTR [rip+0x4034e]        # 0x1400530c0
   140012d72:	nop
   140012d73:	mov    rcx,QWORD PTR [rdi+0x78]
   140012d77:	call   QWORD PTR [rip+0x40343]        # 0x1400530c0
   140012d7d:	nop
   140012d7e:	mov    rcx,QWORD PTR [rdi+0x70]
   140012d82:	call   QWORD PTR [rip+0x40338]        # 0x1400530c0
   140012d88:	nop
   140012d89:	mov    rbx,QWORD PTR [rdi+0x20]
   140012d8d:	lea    rbp,[rip+0xffffffffffff991c]        # 0x14000c6b0
   140012d94:	lea    r14,[rip+0xffffffffffff9745]        # 0x14000c4e0
   140012d9b:	test   rbx,rbx
   140012d9e:	je     0x140012db5
   140012da0:	mov    rax,QWORD PTR [rbx]
   140012da3:	mov    rsi,QWORD PTR [rax+0x10]
   140012da7:	cmp    rsi,r14
   140012daa:	jne    0x140012e0d
   140012dac:	mov    rcx,rbx
   140012daf:	call   0x14000c4e0
   140012db4:	nop
   140012db5:	mov    rbx,QWORD PTR [rdi+0x18]
   140012db9:	test   rbx,rbx
   140012dbc:	je     0x140012dd3
   140012dbe:	mov    rax,QWORD PTR [rbx]
   140012dc1:	mov    rsi,QWORD PTR [rax+0x10]
   140012dc5:	cmp    rsi,r14
   140012dc8:	jne    0x140012e1c
   140012dca:	mov    rcx,rbx
   140012dcd:	call   0x14000c4e0
   140012dd2:	nop
   140012dd3:	mov    rsi,QWORD PTR [rdi+0x10]
   140012dd7:	test   rsi,rsi
   140012dda:	jne    0x140029d82
   140012de0:	mov    rcx,QWORD PTR [rdi]
   140012de3:	test   rcx,rcx
   140012de6:	je     0x140012df2
   140012de8:	call   QWORD PTR [rip+0x2a85a]        # 0x14003d648
   140012dee:	and    QWORD PTR [rdi],0x0
   140012df2:	and    DWORD PTR [rdi+0x8],0x0
   140012df6:	and    DWORD PTR [rdi+0xc],0x0
   140012dfa:	mov    rbx,QWORD PTR [rsp+0x58]
   140012dff:	mov    rbp,QWORD PTR [rsp+0x60]
   140012e04:	add    rsp,0x30
   140012e08:	pop    r14
   140012e0a:	pop    rdi
   140012e0b:	pop    rsi
   140012e0c:	ret    
   140012e0d:	cmp    rsi,rbp
   140012e10:	jne    0x140012e2b
   140012e12:	mov    rcx,rbx
   140012e15:	call   0x14000c6b0
   140012e1a:	jmp    0x140012db5
   140012e1c:	cmp    rsi,rbp
   140012e1f:	jne    0x140012e3e
   140012e21:	mov    rcx,rbx
   140012e24:	call   0x14000c6b0
   140012e29:	jmp    0x140012dd3
   140012e2b:	mov    rcx,rsi
   140012e2e:	call   QWORD PTR [rip+0x2a8f4]        # 0x14003d728
   140012e34:	mov    rcx,rbx
   140012e37:	call   rsi
   140012e39:	jmp    0x140012db5
   140012e3e:	mov    rcx,rsi
   140012e41:	call   QWORD PTR [rip+0x2a8e1]        # 0x14003d728
   140012e47:	mov    rcx,rbx
   140012e4a:	call   rsi
   140012e4c:	jmp    0x140012dd3
   140012e4e:	int3   
   140012e4f:	int3   
   140012e50:	int3   
   140012e51:	int3   
   140012e52:	int3   
   140012e53:	int3   
   140012e54:	rex push rbx
   140012e56:	sub    rsp,0x20
   140012e5a:	mov    rbx,rcx
   140012e5d:	call   0x140012d08
   140012e62:	mov    rcx,rbx
   140012e65:	call   0x140013de0
   140012e6a:	mov    rax,rbx
   140012e6d:	add    rsp,0x20
   140012e71:	pop    rbx
   140012e72:	ret    
   140012e73:	int3   
   140012e74:	int3   
   140012e75:	int3   
   140012e76:	int3   
   140012e77:	int3   
   140012e78:	int3   
   140012e79:	int3   
   140012e7a:	int3   
   140012e7b:	int3   
   140012e7c:	rex push rbx
   140012e7e:	push   rbp
   140012e7f:	push   rsi
   140012e80:	push   rdi
   140012e81:	push   r12
   140012e83:	push   r13
   140012e85:	push   r14
   140012e87:	push   r15
   140012e89:	sub    rsp,0x98
   140012e90:	mov    ebp,DWORD PTR [rcx+0x8]
   140012e93:	xor    esi,esi
   140012e95:	mov    rdi,rcx
   140012e98:	test   ebp,ebp
   140012e9a:	jle    0x140012f95
   140012ea0:	cmp    BYTE PTR [rdi+0x2c],0x0
   140012ea4:	mov    edx,esi
   140012ea6:	mov    rcx,rdi
   140012ea9:	jne    0x140029d9e
   140012eaf:	call   0x14000f858
   140012eb4:	mov    rdx,QWORD PTR [rdi+0x90]
   140012ebb:	mov    r8,QWORD PTR [rdi+0x88]
   140012ec2:	mov    r9,QWORD PTR [rdi+0x20]
   140012ec6:	mov    rbx,QWORD PTR [rax]
   140012ec9:	mov    r10,QWORD PTR [rdi+0x18]
   140012ecd:	mov    ecx,DWORD PTR [rdi+0x68]
   140012ed0:	mov    r11d,DWORD PTR [rdi+0x28]
   140012ed4:	mov    rax,QWORD PTR [rbx]
   140012ed7:	mov    r14,QWORD PTR [rdi+0x80]
   140012ede:	mov    r15,QWORD PTR [rdi+0x78]
   140012ee2:	mov    r12,QWORD PTR [rdi+0x70]
   140012ee6:	mov    rax,QWORD PTR [rax+0x18]
   140012eea:	mov    r13d,DWORD PTR [rdi+0x6c]
   140012eee:	mov    QWORD PTR [rsp+0xf0],rdx
   140012ef6:	lea    rdx,[rip+0x563]        # 0x140013460
   140012efd:	cmp    rax,rdx
   140012f00:	mov    DWORD PTR [rsp+0xe0],ecx
   140012f07:	mov    rdx,QWORD PTR [rsp+0xf0]
   140012f0f:	mov    QWORD PTR [rsp+0xf8],r8
   140012f17:	mov    QWORD PTR [rsp+0x70],r9
   140012f1c:	mov    QWORD PTR [rsp+0x78],r10
   140012f21:	mov    DWORD PTR [rsp+0xe8],r11d
   140012f29:	mov    QWORD PTR [rsp+0x80],rax
   140012f31:	jne    0x140029db1
   140012f37:	mov    QWORD PTR [rsp+0x60],r14
   140012f3c:	mov    QWORD PTR [rsp+0x58],r15
   140012f41:	mov    QWORD PTR [rsp+0x50],r12
   140012f46:	mov    DWORD PTR [rsp+0x48],r13d
   140012f4b:	mov    DWORD PTR [rsp+0x40],ecx
   140012f4f:	mov    rcx,rbx
   140012f52:	and    DWORD PTR [rsp+0x38],0x0
   140012f57:	and    QWORD PTR [rsp+0x30],0x0
   140012f5d:	mov    QWORD PTR [rsp+0x28],rdx
   140012f62:	mov    edx,r11d
   140012f65:	mov    QWORD PTR [rsp+0x20],r8
   140012f6a:	mov    r8,r10
   140012f6d:	call   0x140013460
   140012f72:	mov    rbx,QWORD PTR [rdi+0x10]
   140012f76:	mov    edx,esi
   140012f78:	mov    rcx,rdi
   140012f7b:	call   0x14000f858
   140012f80:	mov    rdx,rbx
   140012f83:	mov    rcx,QWORD PTR [rax]
   140012f86:	call   0x140013358
   140012f8b:	inc    esi
   140012f8d:	cmp    esi,ebp
   140012f8f:	jl     0x140012ea0
   140012f95:	mov    rcx,QWORD PTR [rdi+0x50]
   140012f99:	test   rcx,rcx
   140012f9c:	jne    0x140012fb2
   140012f9e:	add    rsp,0x98
   140012fa5:	pop    r15
   140012fa7:	pop    r14
   140012fa9:	pop    r13
   140012fab:	pop    r12
   140012fad:	pop    rdi
   140012fae:	pop    rsi
   140012faf:	pop    rbp
   140012fb0:	pop    rbx
   140012fb1:	ret    
   140012fb2:	call   QWORD PTR [rip+0x2a430]        # 0x14003d3e8
   140012fb8:	jmp    0x140012f9e
   140012fba:	int3   
   140012fbb:	int3   
   140012fbc:	int3   
   140012fbd:	int3   
   140012fbe:	int3   
   140012fbf:	int3   
   140012fc0:	mov    rax,rsp
   140012fc3:	mov    DWORD PTR [rax+0x20],r9d
   140012fc7:	mov    QWORD PTR [rax+0x8],rcx
   140012fcb:	push   rbp
   140012fcc:	push   rsi
   140012fcd:	push   rdi
   140012fce:	push   r12
   140012fd0:	push   r13
   140012fd2:	push   r14
   140012fd4:	push   r15
   140012fd6:	sub    rsp,0x30
   140012fda:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140012fe2:	mov    QWORD PTR [rax+0x10],rbx
   140012fe6:	mov    r15,rdx
   140012fe9:	mov    rsi,rcx
   140012fec:	xor    ebp,ebp
   140012fee:	mov    QWORD PTR [rcx],rbp
   140012ff1:	mov    QWORD PTR [rcx+0x8],rbp
   140012ff5:	add    rcx,0x10
   140012ff9:	mov    QWORD PTR [rcx],rbp
   140012ffc:	lea    rbx,[rsi+0x18]
   140013000:	mov    QWORD PTR [rbx],rbp
   140013003:	lea    rdi,[rsi+0x20]
   140013007:	mov    QWORD PTR [rdi],rbp
   14001300a:	mov    QWORD PTR [rsi+0x70],rbp
   14001300e:	mov    QWORD PTR [rsi+0x78],rbp
   140013012:	lea    r13,[rsi+0x80]
   140013019:	mov    QWORD PTR [r13+0x0],rbp
   14001301d:	cmp    QWORD PTR [rcx],r8
   140013020:	jne    0x140029e20
   140013026:	mov    rdx,QWORD PTR [rsp+0x90]
   14001302e:	cmp    QWORD PTR [rbx],rdx
   140013031:	jne    0x1400131d7
   140013037:	mov    rdx,QWORD PTR [rsp+0x98]
   14001303f:	cmp    QWORD PTR [rdi],rdx
   140013042:	jne    0x1400131e4
   140013048:	mov    eax,DWORD PTR [rsp+0x88]
   14001304f:	mov    DWORD PTR [rsi+0x28],eax
   140013052:	mov    rax,QWORD PTR [rsp+0xa8]
   14001305a:	movups xmm0,XMMWORD PTR [rax]
   14001305d:	movdqu XMMWORD PTR [rsi+0x3c],xmm0
   140013062:	mov    eax,DWORD PTR [rsp+0xb0]
   140013069:	mov    DWORD PTR [rsi+0x38],eax
   14001306c:	mov    eax,DWORD PTR [rsp+0xb8]
   140013073:	mov    DWORD PTR [rsi+0x34],eax
   140013076:	mov    eax,DWORD PTR [rsp+0xc0]
   14001307d:	mov    DWORD PTR [rsi+0x30],eax
   140013080:	mov    eax,DWORD PTR [rsp+0xd0]
   140013087:	mov    DWORD PTR [rsi+0x5c],eax
   14001308a:	mov    eax,DWORD PTR [rsp+0xc8]
   140013091:	mov    DWORD PTR [rsi+0x58],eax
   140013094:	mov    eax,DWORD PTR [rsp+0xd8]
   14001309b:	mov    DWORD PTR [rsi+0x60],eax
   14001309e:	mov    eax,DWORD PTR [rsp+0xe8]
   1400130a5:	mov    DWORD PTR [rsi+0x68],eax
   1400130a8:	mov    eax,DWORD PTR [rsp+0xe0]
   1400130af:	mov    DWORD PTR [rsi+0x64],eax
   1400130b2:	mov    eax,DWORD PTR [rsp+0xf0]
   1400130b9:	mov    DWORD PTR [rsi+0x6c],eax
   1400130bc:	test   eax,eax
   1400130be:	jne    0x140029e2e
   1400130c4:	mov    rdx,QWORD PTR [rsp+0x100]
   1400130cc:	test   rdx,rdx
   1400130cf:	jne    0x140029e51
   1400130d5:	mov    rdx,QWORD PTR [rsp+0x108]
   1400130dd:	test   rdx,rdx
   1400130e0:	jne    0x140029e63
   1400130e6:	mov    rax,QWORD PTR [rsp+0x110]
   1400130ee:	mov    QWORD PTR [rsi+0x88],rax
   1400130f5:	mov    rax,QWORD PTR [rsp+0x118]
   1400130fd:	mov    QWORD PTR [rsi+0x90],rax
   140013104:	mov    al,BYTE PTR [rsp+0x120]
   14001310b:	mov    BYTE PTR [rsi+0x98],al
   140013111:	mov    eax,DWORD PTR [rsp+0x128]
   140013118:	mov    DWORD PTR [rsi+0x9c],eax
   14001311e:	mov    eax,DWORD PTR [rsp+0x130]
   140013125:	mov    DWORD PTR [rsi+0xa0],eax
   14001312b:	mov    eax,DWORD PTR [rsp+0x138]
   140013132:	mov    DWORD PTR [rsi+0xa4],eax
   140013138:	mov    eax,DWORD PTR [rsp+0x140]
   14001313f:	mov    DWORD PTR [rsi+0xa8],eax
   140013145:	mov    eax,DWORD PTR [rsp+0x148]
   14001314c:	mov    DWORD PTR [rsi+0xac],eax
   140013152:	mov    eax,DWORD PTR [rsp+0x150]
   140013159:	mov    DWORD PTR [rsi+0xb0],eax
   14001315f:	cmp    DWORD PTR [rsp+0xa0],ebp
   140013166:	setne  al
   140013169:	mov    BYTE PTR [rsi+0x2c],al
   14001316c:	mov    r14d,DWORD PTR [r15+0x8]
   140013170:	test   r14d,r14d
   140013173:	jle    0x1400131b3
   140013175:	mov    edx,ebp
   140013177:	mov    rcx,r15
   14001317a:	call   0x14000f858
   14001317f:	mov    rdx,rax
   140013182:	mov    rcx,rsi
   140013185:	call   0x14000f7cc
   14001318a:	mov    edx,ebp
   14001318c:	mov    rcx,r15
   14001318f:	call   0x14000f858
   140013194:	mov    rdi,QWORD PTR [rax]
   140013197:	mov    rax,QWORD PTR [rdi]
   14001319a:	mov    rbx,QWORD PTR [rax+0x8]
   14001319e:	mov    rcx,rbx
   1400131a1:	call   QWORD PTR [rip+0x2a581]        # 0x14003d728
   1400131a7:	mov    rcx,rdi
   1400131aa:	call   rbx
   1400131ac:	inc    ebp
   1400131ae:	cmp    ebp,r14d
   1400131b1:	jl     0x140013175
   1400131b3:	mov    rax,QWORD PTR [rsp+0x158]
   1400131bb:	mov    QWORD PTR [rsi+0x50],rax
   1400131bf:	mov    rax,rsi
   1400131c2:	mov    rbx,QWORD PTR [rsp+0x78]
   1400131c7:	add    rsp,0x30
   1400131cb:	pop    r15
   1400131cd:	pop    r14
   1400131cf:	pop    r13
   1400131d1:	pop    r12
   1400131d3:	pop    rdi
   1400131d4:	pop    rsi
   1400131d5:	pop    rbp
   1400131d6:	ret    
   1400131d7:	mov    rcx,rbx
   1400131da:	call   0x14000dcd0
   1400131df:	jmp    0x140013037
   1400131e4:	mov    rcx,rdi
   1400131e7:	call   0x14000dcd0
   1400131ec:	jmp    0x140013048
   1400131f1:	int3   
   1400131f2:	int3   
   1400131f3:	int3   
   1400131f4:	int3   
   1400131f5:	int3   
   1400131f6:	int3   
   1400131f7:	int3   
   1400131f8:	int3   
   1400131f9:	int3   
   1400131fa:	int3   
   1400131fb:	int3   
   1400131fc:	int3   
   1400131fd:	int3   
   1400131fe:	int3   
   1400131ff:	int3   
   140013200:	mov    eax,0x1
   140013205:	ret    
   140013206:	int3   
   140013207:	int3   
   140013208:	int3   
   140013209:	int3   
   14001320a:	int3   
   14001320b:	int3   
   14001320c:	int3   
   14001320d:	int3   
   14001320e:	int3   
   14001320f:	int3   
   140013210:	mov    r9,r8
   140013213:	mov    r8,rdx
   140013216:	lea    rdx,[rip+0x2f643]        # 0x140042860
   14001321d:	jmp    0x14000c260
   140013222:	int3   
   140013223:	int3   
   140013224:	int3   
   140013225:	int3   
   140013226:	int3   
   140013227:	int3   
   140013228:	mov    rax,rsp
   14001322b:	mov    QWORD PTR [rax+0x8],rcx
   14001322f:	push   rdi
   140013230:	sub    rsp,0x30
   140013234:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001323c:	mov    QWORD PTR [rax+0x10],rbx
   140013240:	mov    QWORD PTR [rax+0x18],rsi
   140013244:	mov    rbx,rcx
   140013247:	call   0x1400137d8
   14001324c:	nop
   14001324d:	lea    rax,[rip+0x2c63c]        # 0x14003f890
   140013254:	mov    QWORD PTR [rbx],rax
   140013257:	lea    rax,[rip+0x2c5fa]        # 0x14003f858
   14001325e:	mov    QWORD PTR [rbx+0x8],rax
   140013262:	lea    rax,[rip+0x2c5cf]        # 0x14003f838
   140013269:	mov    QWORD PTR [rbx+0x10],rax
   14001326d:	lea    rax,[rip+0x2c594]        # 0x14003f808
   140013274:	mov    QWORD PTR [rbx+0x18],rax
   140013278:	lea    rax,[rip+0x2c551]        # 0x14003f7d0
   14001327f:	mov    QWORD PTR [rbx+0x20],rax
   140013283:	mov    rdi,QWORD PTR [rip+0x3b8d6]        # 0x14004eb60
   14001328a:	mov    rax,QWORD PTR [rdi]
   14001328d:	mov    rsi,QWORD PTR [rax+0x8]
   140013291:	lea    rax,[rip+0xffffffffffff95a8]        # 0x14000c840
   140013298:	cmp    rsi,rax
   14001329b:	jne    0x140029e7c
   1400132a1:	mov    rcx,rdi
   1400132a4:	call   0x14000c840
   1400132a9:	nop
   1400132aa:	mov    rax,rbx
   1400132ad:	mov    rbx,QWORD PTR [rsp+0x48]
   1400132b2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400132b7:	add    rsp,0x30
   1400132bb:	pop    rdi
   1400132bc:	ret    
   1400132bd:	int3   
   1400132be:	int3   
   1400132bf:	int3   
   1400132c0:	int3   
   1400132c1:	int3   
   1400132c2:	int3   
   1400132c3:	int3   
   1400132c4:	rex push rbx
   1400132c6:	sub    rsp,0x20
   1400132ca:	and    QWORD PTR [rsp+0x48],0x0
   1400132d0:	mov    rbx,rcx
   1400132d3:	lea    rcx,[rsp+0x48]
   1400132d8:	call   0x140013324
   1400132dd:	test   eax,eax
   1400132df:	js     0x140013317
   1400132e1:	mov    rcx,QWORD PTR [rsp+0x48]
   1400132e6:	or     rax,0xffffffffffffffff
   1400132ea:	sub    rax,rcx
   1400132ed:	cmp    rax,0x8
   1400132f1:	jb     0x140013317
   1400132f3:	add    rcx,0x8
   1400132f7:	call   QWORD PTR [rip+0x2a353]        # 0x14003d650
   1400132fd:	mov    rcx,rax
   140013300:	test   rax,rax
   140013303:	je     0x140013317
   140013305:	mov    rax,QWORD PTR [rbx]
   140013308:	mov    QWORD PTR [rcx],rax
   14001330b:	mov    rax,rcx
   14001330e:	mov    QWORD PTR [rbx],rcx
   140013311:	add    rsp,0x20
   140013315:	pop    rbx
   140013316:	ret    
   140013317:	xor    eax,eax
   140013319:	jmp    0x140013311
   14001331b:	int3   
   14001331c:	int3   
   14001331d:	int3   
   14001331e:	int3   
   14001331f:	int3   
   140013320:	int3   
   140013321:	int3   
   140013322:	int3   
   140013323:	int3   
   140013324:	mov    r9,rdx
   140013327:	test   rdx,rdx
   14001332a:	je     0x140013344
   14001332c:	xor    edx,edx
   14001332e:	or     rax,0xffffffffffffffff
   140013332:	div    r9
   140013335:	cmp    rax,r8
   140013338:	jb     0x14001334a
   14001333a:	imul   r9,r8
   14001333e:	mov    QWORD PTR [rcx],r9
   140013341:	xor    eax,eax
   140013343:	ret    
   140013344:	and    QWORD PTR [rcx],0x0
   140013348:	jmp    0x140013341
   14001334a:	mov    eax,0x80070057
   14001334f:	ret    
   140013350:	int3   
   140013351:	int3   
   140013352:	int3   
   140013353:	int3   
   140013354:	int3   
   140013355:	int3   
   140013356:	int3   
   140013357:	int3   
   140013358:	mov    rax,rsp
   14001335b:	push   rdi
   14001335c:	sub    rsp,0x30
   140013360:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140013368:	mov    QWORD PTR [rax+0x10],rbx
   14001336c:	mov    QWORD PTR [rax+0x18],rbp
   140013370:	mov    QWORD PTR [rax+0x20],rsi
   140013374:	mov    rbp,rdx
   140013377:	mov    rdi,rcx
   14001337a:	cmp    BYTE PTR [rcx+0xd8],0x0
   140013381:	jne    0x1400133f4
   140013383:	add    rcx,0x60
   140013387:	call   QWORD PTR [rip+0x2a03b]        # 0x14003d3c8
   14001338d:	xor    ebx,ebx
   14001338f:	mov    QWORD PTR [rsp+0x40],rbx
   140013394:	mov    rdx,QWORD PTR [rdi+0x90]
   14001339b:	test   rdx,rdx
   14001339e:	je     0x1400133af
   1400133a0:	lea    rcx,[rsp+0x40]
   1400133a5:	call   0x14000dcd0
   1400133aa:	mov    rbx,QWORD PTR [rsp+0x40]
   1400133af:	lea    rcx,[rdi+0x60]
   1400133b3:	call   QWORD PTR [rip+0x2a01f]        # 0x14003d3d8
   1400133b9:	test   rbx,rbx
   1400133bc:	je     0x1400133da
   1400133be:	mov    rax,QWORD PTR [rbx]
   1400133c1:	mov    rdi,QWORD PTR [rax+0x18]
   1400133c5:	mov    rcx,rdi
   1400133c8:	call   QWORD PTR [rip+0x2a35a]        # 0x14003d728
   1400133ce:	xor    r8d,r8d
   1400133d1:	mov    rdx,rbp
   1400133d4:	mov    rcx,rbx
   1400133d7:	call   rdi
   1400133d9:	nop
   1400133da:	test   rbx,rbx
   1400133dd:	je     0x1400133f4
   1400133df:	mov    rax,QWORD PTR [rbx]
   1400133e2:	mov    rdi,QWORD PTR [rax+0x10]
   1400133e6:	mov    rcx,rdi
   1400133e9:	call   QWORD PTR [rip+0x2a339]        # 0x14003d728
   1400133ef:	mov    rcx,rbx
   1400133f2:	call   rdi
   1400133f4:	mov    rbx,QWORD PTR [rsp+0x48]
   1400133f9:	mov    rbp,QWORD PTR [rsp+0x50]
   1400133fe:	mov    rsi,QWORD PTR [rsp+0x58]
   140013403:	add    rsp,0x30
   140013407:	pop    rdi
   140013408:	ret    
   140013409:	int3   
   14001340a:	int3   
   14001340b:	int3   
   14001340c:	int3   
   14001340d:	int3   
   14001340e:	int3   
   14001340f:	int3   
   140013410:	mov    QWORD PTR [rsp+0x8],rbx
   140013415:	push   rdi
   140013416:	sub    rsp,0x20
   14001341a:	add    rcx,0xffffffffffffffe8
   14001341e:	xor    ebx,ebx
   140013420:	call   0x14000db58
   140013425:	mov    rdi,rax
   140013428:	test   rax,rax
   14001342b:	je     0x14001343f
   14001342d:	mov    rcx,rax
   140013430:	call   0x140012bfc
   140013435:	mov    rcx,rdi
   140013438:	mov    ebx,eax
   14001343a:	call   0x14000dc9c
   14001343f:	mov    eax,ebx
   140013441:	mov    rbx,QWORD PTR [rsp+0x30]
   140013446:	add    rsp,0x20
   14001344a:	pop    rdi
   14001344b:	ret    
   14001344c:	int3   
   14001344d:	int3   
   14001344e:	int3   
   14001344f:	int3   
   140013450:	int3   
   140013451:	int3   
   140013452:	int3   
   140013453:	int3   
   140013454:	int3   
   140013455:	int3   
   140013456:	int3   
   140013457:	int3   
   140013458:	int3   
   140013459:	int3   
   14001345a:	int3   
   14001345b:	int3   
   14001345c:	int3   
   14001345d:	int3   
   14001345e:	int3   
   14001345f:	int3   
   140013460:	mov    rax,rsp
   140013463:	push   rsi
   140013464:	push   rdi
   140013465:	push   r12
   140013467:	push   r14
   140013469:	push   r15
   14001346b:	sub    rsp,0x80
   140013472:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14001347a:	mov    QWORD PTR [rax+0x10],rbx
   14001347e:	mov    QWORD PTR [rax+0x18],rbp
   140013482:	mov    r14,r9
   140013485:	mov    r15,r8
   140013488:	mov    r12d,edx
   14001348b:	mov    rdi,rcx
   14001348e:	mov    ebp,0x1
   140013493:	cmp    BYTE PTR [rcx+0xd8],0x0
   14001349a:	jne    0x140013591
   1400134a0:	add    rcx,0x60
   1400134a4:	call   QWORD PTR [rip+0x29f1e]        # 0x14003d3c8
   1400134aa:	xor    ebx,ebx
   1400134ac:	mov    QWORD PTR [rsp+0xb0],rbx
   1400134b4:	mov    rdx,QWORD PTR [rdi+0x88]
   1400134bb:	test   rdx,rdx
   1400134be:	je     0x1400134d5
   1400134c0:	lea    rcx,[rsp+0xb0]
   1400134c8:	call   0x14000dcd0
   1400134cd:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400134d5:	lea    rcx,[rdi+0x60]
   1400134d9:	call   QWORD PTR [rip+0x29ef9]        # 0x14003d3d8
   1400134df:	test   rbx,rbx
   1400134e2:	je     0x140013577
   1400134e8:	mov    rax,QWORD PTR [rbx]
   1400134eb:	mov    rdi,QWORD PTR [rax+0x18]
   1400134ef:	mov    rcx,rdi
   1400134f2:	call   QWORD PTR [rip+0x2a230]        # 0x14003d728
   1400134f8:	mov    rax,QWORD PTR [rsp+0x110]
   140013500:	mov    QWORD PTR [rsp+0x60],rax
   140013505:	mov    rax,QWORD PTR [rsp+0x108]
   14001350d:	mov    QWORD PTR [rsp+0x58],rax
   140013512:	mov    rax,QWORD PTR [rsp+0x100]
   14001351a:	mov    QWORD PTR [rsp+0x50],rax
   14001351f:	mov    eax,DWORD PTR [rsp+0xf8]
   140013526:	mov    DWORD PTR [rsp+0x48],eax
   14001352a:	mov    eax,DWORD PTR [rsp+0xf0]
   140013531:	mov    DWORD PTR [rsp+0x40],eax
   140013535:	mov    eax,DWORD PTR [rsp+0xe8]
   14001353c:	mov    DWORD PTR [rsp+0x38],eax
   140013540:	mov    rax,QWORD PTR [rsp+0xe0]
   140013548:	mov    QWORD PTR [rsp+0x30],rax
   14001354d:	mov    rax,QWORD PTR [rsp+0xd8]
   140013555:	mov    QWORD PTR [rsp+0x28],rax
   14001355a:	mov    rax,QWORD PTR [rsp+0xd0]
   140013562:	mov    QWORD PTR [rsp+0x20],rax
   140013567:	mov    r9,r14
   14001356a:	mov    r8,r15
   14001356d:	mov    edx,r12d
   140013570:	mov    rcx,rbx
   140013573:	call   rdi
   140013575:	mov    ebp,eax
   140013577:	test   rbx,rbx
   14001357a:	je     0x140013591
   14001357c:	mov    rcx,QWORD PTR [rbx]
   14001357f:	mov    rdi,QWORD PTR [rcx+0x10]
   140013583:	mov    rcx,rdi
   140013586:	call   QWORD PTR [rip+0x2a19c]        # 0x14003d728
   14001358c:	mov    rcx,rbx
   14001358f:	call   rdi
   140013591:	mov    eax,ebp
   140013593:	lea    r11,[rsp+0x80]
   14001359b:	mov    rbx,QWORD PTR [r11+0x38]
   14001359f:	mov    rbp,QWORD PTR [r11+0x40]
   1400135a3:	mov    rsp,r11
   1400135a6:	pop    r15
   1400135a8:	pop    r14
   1400135aa:	pop    r12
   1400135ac:	pop    rdi
   1400135ad:	pop    rsi
   1400135ae:	ret    
   1400135af:	int3   
   1400135b0:	int3   
   1400135b1:	int3   
   1400135b2:	int3   
   1400135b3:	int3   
   1400135b4:	int3   
   1400135b5:	int3   
   1400135b6:	int3   
   1400135b7:	int3   
   1400135b8:	int3   
   1400135b9:	int3   
   1400135ba:	int3   
   1400135bb:	int3   
   1400135bc:	int3   
   1400135bd:	int3   
   1400135be:	int3   
   1400135bf:	int3   
   1400135c0:	rex push rbp
   1400135c2:	push   rsi
   1400135c3:	push   rdi
   1400135c4:	push   r12
   1400135c6:	push   r13
   1400135c8:	push   r14
   1400135ca:	push   r15
   1400135cc:	mov    rbp,rsp
   1400135cf:	sub    rsp,0x30
   1400135d3:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   1400135db:	mov    QWORD PTR [rsp+0x70],rbx
   1400135e0:	mov    rdi,rdx
   1400135e3:	mov    rsi,rcx
   1400135e6:	xor    eax,eax
   1400135e8:	test   rdx,rdx
   1400135eb:	je     0x140029e92
   1400135f1:	mov    QWORD PTR [rbp-0x10],rax
   1400135f5:	mov    QWORD PTR [rbp+0x58],rax
   1400135f9:	mov    QWORD PTR [rbp+0x50],rax
   1400135fd:	mov    QWORD PTR [rbp+0x48],rax
   140013601:	mov    rax,QWORD PTR [rdx]
   140013604:	mov    rbx,QWORD PTR [rax]
   140013607:	mov    rcx,rbx
   14001360a:	call   QWORD PTR [rip+0x2a118]        # 0x14003d728
   140013610:	lea    r8,[rbp-0x10]
   140013614:	lea    rdx,[rip+0x2c1a5]        # 0x14003f7c0
   14001361b:	mov    rcx,rdi
   14001361e:	call   rbx
   140013620:	mov    rax,QWORD PTR [rdi]
   140013623:	mov    rbx,QWORD PTR [rax]
   140013626:	mov    rcx,rbx
   140013629:	call   QWORD PTR [rip+0x2a0f9]        # 0x14003d728
   14001362f:	lea    r8,[rbp+0x58]
   140013633:	lea    rdx,[rip+0x2c176]        # 0x14003f7b0
   14001363a:	mov    rcx,rdi
   14001363d:	call   rbx
   14001363f:	mov    rax,QWORD PTR [rdi]
   140013642:	mov    rbx,QWORD PTR [rax]
   140013645:	mov    rcx,rbx
   140013648:	call   QWORD PTR [rip+0x2a0da]        # 0x14003d728
   14001364e:	lea    r8,[rbp+0x50]
   140013652:	lea    rdx,[rip+0x2c147]        # 0x14003f7a0
   140013659:	mov    rcx,rdi
   14001365c:	call   rbx
   14001365e:	mov    rax,QWORD PTR [rdi]
   140013661:	mov    rbx,QWORD PTR [rax]
   140013664:	mov    rcx,rbx
   140013667:	call   QWORD PTR [rip+0x2a0bb]        # 0x14003d728
   14001366d:	lea    r8,[rbp+0x48]
   140013671:	lea    rdx,[rip+0x2c118]        # 0x14003f790
   140013678:	mov    rcx,rdi
   14001367b:	call   rbx
   14001367d:	lea    rbx,[rsi+0x58]
   140013681:	mov    rcx,rbx
   140013684:	call   QWORD PTR [rip+0x29d3e]        # 0x14003d3c8
   14001368a:	lea    r14,[rsi+0x80]
   140013691:	mov    rcx,r14
   140013694:	call   0x14000ddec
   140013699:	lea    r15,[rsi+0x88]
   1400136a0:	mov    rcx,r15
   1400136a3:	call   0x14000ddec
   1400136a8:	lea    r12,[rsi+0x90]
   1400136af:	mov    rcx,r12
   1400136b2:	call   0x14000ddec
   1400136b7:	lea    rdi,[rsi+0x98]
   1400136be:	mov    r13,QWORD PTR [rdi]
   1400136c1:	test   r13,r13
   1400136c4:	jne    0x140029e9c
   1400136ca:	mov    rdx,QWORD PTR [rbp-0x10]
   1400136ce:	cmp    QWORD PTR [r14],rdx
   1400136d1:	je     0x1400136db
   1400136d3:	mov    rcx,r14
   1400136d6:	call   0x14000dcd0
   1400136db:	mov    rdx,QWORD PTR [rbp+0x58]
   1400136df:	cmp    QWORD PTR [r15],rdx
   1400136e2:	je     0x1400136ec
   1400136e4:	mov    rcx,r15
   1400136e7:	call   0x14000dcd0
   1400136ec:	mov    rdx,QWORD PTR [rbp+0x50]
   1400136f0:	cmp    QWORD PTR [r12],rdx
   1400136f4:	je     0x1400136fe
   1400136f6:	mov    rcx,r12
   1400136f9:	call   0x14000dcd0
   1400136fe:	mov    rdx,QWORD PTR [rbp+0x48]
   140013702:	cmp    QWORD PTR [rdi],rdx
   140013705:	je     0x14001370f
   140013707:	mov    rcx,rdi
   14001370a:	call   0x14000dcd0
   14001370f:	mov    rcx,rbx
   140013712:	call   QWORD PTR [rip+0x29cc0]        # 0x14003d3d8
   140013718:	lea    rcx,[rsi-0x8]
   14001371c:	call   0x14000db58
   140013721:	mov    rbx,rax
   140013724:	test   rax,rax
   140013727:	je     0x14001373e
   140013729:	lea    rdx,[rsi-0x8]
   14001372d:	mov    rcx,rax
   140013730:	call   0x140012bac
   140013735:	mov    rcx,rbx
   140013738:	call   0x14000dc9c
   14001373d:	nop
   14001373e:	mov    rbx,QWORD PTR [rbp+0x48]
   140013742:	test   rbx,rbx
   140013745:	je     0x14001375d
   140013747:	mov    rax,QWORD PTR [rbx]
   14001374a:	mov    rdi,QWORD PTR [rax+0x10]
   14001374e:	mov    rcx,rdi
   140013751:	call   QWORD PTR [rip+0x29fd1]        # 0x14003d728
   140013757:	mov    rcx,rbx
   14001375a:	call   rdi
   14001375c:	nop
   14001375d:	mov    rbx,QWORD PTR [rbp+0x50]
   140013761:	test   rbx,rbx
   140013764:	je     0x14001377c
   140013766:	mov    rax,QWORD PTR [rbx]
   140013769:	mov    rdi,QWORD PTR [rax+0x10]
   14001376d:	mov    rcx,rdi
   140013770:	call   QWORD PTR [rip+0x29fb2]        # 0x14003d728
   140013776:	mov    rcx,rbx
   140013779:	call   rdi
   14001377b:	nop
   14001377c:	mov    rbx,QWORD PTR [rbp+0x58]
   140013780:	test   rbx,rbx
   140013783:	je     0x14001379b
   140013785:	mov    rax,QWORD PTR [rbx]
   140013788:	mov    rdi,QWORD PTR [rax+0x10]
   14001378c:	mov    rcx,rdi
   14001378f:	call   QWORD PTR [rip+0x29f93]        # 0x14003d728
   140013795:	mov    rcx,rbx
   140013798:	call   rdi
   14001379a:	nop
   14001379b:	mov    rbx,QWORD PTR [rbp-0x10]
   14001379f:	test   rbx,rbx
   1400137a2:	je     0x1400137b9
   1400137a4:	mov    rax,QWORD PTR [rbx]
   1400137a7:	mov    rdi,QWORD PTR [rax+0x10]
   1400137ab:	mov    rcx,rdi
   1400137ae:	call   QWORD PTR [rip+0x29f74]        # 0x14003d728
   1400137b4:	mov    rcx,rbx
   1400137b7:	call   rdi
   1400137b9:	xor    eax,eax
   1400137bb:	mov    rbx,QWORD PTR [rsp+0x70]
   1400137c0:	add    rsp,0x30
   1400137c4:	pop    r15
   1400137c6:	pop    r14
   1400137c8:	pop    r13
   1400137ca:	pop    r12
   1400137cc:	pop    rdi
   1400137cd:	pop    rsi
   1400137ce:	pop    rbp
   1400137cf:	ret    
   1400137d0:	int3   
   1400137d1:	int3   
   1400137d2:	int3   
   1400137d3:	int3   
   1400137d4:	int3   
   1400137d5:	int3   
   1400137d6:	int3   
   1400137d7:	int3   
   1400137d8:	mov    QWORD PTR [rsp+0x8],rcx
   1400137dd:	push   rdi
   1400137de:	sub    rsp,0x30
   1400137e2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400137eb:	mov    QWORD PTR [rsp+0x48],rbx
   1400137f0:	mov    rdi,rcx
   1400137f3:	and    DWORD PTR [rcx+0x28],0x0
   1400137f7:	xor    edx,edx
   1400137f9:	lea    r8d,[rdx+0x28]
   1400137fd:	add    rcx,0x30
   140013801:	call   0x140014694
   140013806:	mov    BYTE PTR [rdi+0x58],0x0
   14001380a:	lea    rcx,[rdi+0x60]
   14001380e:	call   0x14000db2c
   140013813:	nop
   140013814:	and    QWORD PTR [rdi+0x88],0x0
   14001381c:	and    QWORD PTR [rdi+0x90],0x0
   140013824:	and    QWORD PTR [rdi+0x98],0x0
   14001382c:	and    QWORD PTR [rdi+0xa0],0x0
   140013834:	lea    rcx,[rdi+0xa8]
   14001383b:	call   0x14000db2c
   140013840:	nop
   140013841:	call   0x14000e048
   140013846:	mov    QWORD PTR [rdi+0xd0],rax
   14001384d:	mov    BYTE PTR [rdi+0xd8],0x0
   140013854:	mov    rax,rdi
   140013857:	mov    rbx,QWORD PTR [rsp+0x48]
   14001385c:	add    rsp,0x30
   140013860:	pop    rdi
   140013861:	ret    
   140013862:	int3   
   140013863:	int3   
   140013864:	int3   
   140013865:	int3   
   140013866:	int3   
   140013867:	int3   
   140013868:	mov    QWORD PTR [rsp+0x8],rbx
   14001386d:	mov    QWORD PTR [rsp+0x10],rsi
   140013872:	mov    QWORD PTR [rsp+0x18],rdi
   140013877:	push   r14
   140013879:	sub    rsp,0x20
   14001387d:	xor    ebx,ebx
   14001387f:	mov    r14,rdx
   140013882:	mov    sil,cl
   140013885:	test   rdx,rdx
   140013888:	je     0x140029ec0
   14001388e:	lea    rcx,[rip+0x3b7db]        # 0x14004f070
   140013895:	call   QWORD PTR [rip+0x29b2d]        # 0x14003d3c8
   14001389b:	mov    rdi,QWORD PTR [rip+0x3b496]        # 0x14004ed38
   1400138a2:	test   sil,sil
   1400138a5:	cmovne rdi,QWORD PTR [rip+0x3abcb]        # 0x14004e478
   1400138ad:	test   rdi,rdi
   1400138b0:	je     0x140013905
   1400138b2:	mov    rax,QWORD PTR [rdi]
   1400138b5:	mov    rsi,QWORD PTR [rax+0x8]
   1400138b9:	lea    rax,[rip+0xffffffffffffcf50]        # 0x140010810
   1400138c0:	cmp    rsi,rax
   1400138c3:	je     0x1400138fb
   1400138c5:	mov    rcx,rsi
   1400138c8:	call   QWORD PTR [rip+0x29e5a]        # 0x14003d728
   1400138ce:	mov    rcx,rdi
   1400138d1:	call   rsi
   1400138d3:	lea    rcx,[rip+0x3b796]        # 0x14004f070
   1400138da:	mov    QWORD PTR [r14],rdi
   1400138dd:	call   QWORD PTR [rip+0x29af5]        # 0x14003d3d8
   1400138e3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400138e8:	mov    eax,ebx
   1400138ea:	mov    rbx,QWORD PTR [rsp+0x30]
   1400138ef:	mov    rdi,QWORD PTR [rsp+0x40]
   1400138f4:	add    rsp,0x20
   1400138f8:	pop    r14
   1400138fa:	ret    
   1400138fb:	mov    rcx,rdi
   1400138fe:	call   0x140010810
   140013903:	jmp    0x1400138d3
   140013905:	mov    ebx,0x1
   14001390a:	jmp    0x1400138d3
   14001390c:	int3   
   14001390d:	int3   
   14001390e:	int3   
   14001390f:	int3   
   140013910:	int3   
   140013911:	int3   
   140013912:	int3   
   140013913:	int3   
   140013914:	mov    QWORD PTR [rsp+0x18],rbx
   140013919:	mov    QWORD PTR [rsp+0x20],rsi
   14001391e:	push   rbp
   14001391f:	push   rdi
   140013920:	push   r14
   140013922:	lea    rbp,[rsp-0x430]
   14001392a:	sub    rsp,0x530
   140013931:	mov    rax,QWORD PTR [rip+0x3a6d8]        # 0x14004e010
   140013938:	xor    rax,rsp
   14001393b:	mov    QWORD PTR [rbp+0x420],rax
   140013942:	mov    rsi,rcx
   140013945:	mov    r14,rdx
   140013948:	lea    rcx,[rbp+0x0]
   14001394c:	call   0x140013ba4
   140013951:	mov    ebx,eax
   140013953:	test   eax,eax
   140013955:	js     0x140013aea
   14001395b:	lea    r8,[rip+0x2bfce]        # 0x14003f930
   140013962:	mov    edx,0x105
   140013967:	lea    rcx,[rbp+0x0]
   14001396b:	call   0x140004e10
   140013970:	mov    ebx,eax
   140013972:	test   eax,eax
   140013974:	js     0x140013aea
   14001397a:	xor    eax,eax
   14001397c:	lea    rcx,[rbp-0x70]
   140013980:	xor    edx,edx
   140013982:	mov    QWORD PTR [rsp+0x68],rax
   140013987:	mov    QWORD PTR [rsp+0x70],rax
   14001398c:	mov    QWORD PTR [rsp+0x78],rax
   140013991:	lea    ebx,[rax+0x68]
   140013994:	mov    r8d,ebx
   140013997:	call   0x140014694
   14001399c:	mov    DWORD PTR [rbp-0x70],ebx
   14001399f:	mov    DWORD PTR [rbp-0x34],0x80
   1400139a6:	call   QWORD PTR [rip+0x2991c]        # 0x14003d2c8
   1400139ac:	lea    r9,[rip+0x2bf5d]        # 0x14003f910
   1400139b3:	mov    edx,0x104
   1400139b8:	lea    r8,[rip+0x2bf29]        # 0x14003f8e8
   1400139bf:	mov    DWORD PTR [rsp+0x20],eax
   1400139c3:	lea    rcx,[rbp+0x210]
   1400139ca:	call   0x140013b28
   1400139cf:	mov    ebx,eax
   1400139d1:	call   0x140004f5c
   1400139d6:	xor    ecx,ecx
   1400139d8:	mov    rdi,rax
   1400139db:	mov    QWORD PTR [rsp+0x60],rcx
   1400139e0:	test   rax,rax
   1400139e3:	je     0x140029eca
   1400139e9:	lea    rax,[rsp+0x60]
   1400139ee:	xor    r8d,r8d
   1400139f1:	lea    r9d,[rcx+0x2]
   1400139f5:	mov    QWORD PTR [rsp+0x28],rax
   1400139fa:	lea    edx,[rcx+0xb]
   1400139fd:	mov    DWORD PTR [rsp+0x20],0x1
   140013a05:	mov    rcx,rdi
   140013a08:	call   QWORD PTR [rip+0x29a62]        # 0x14003d470
   140013a0e:	mov    rcx,QWORD PTR [rsp+0x60]
   140013a13:	test   rcx,rcx
   140013a16:	je     0x140029eca
   140013a1c:	test   ebx,ebx
   140013a1e:	js     0x140013acc
   140013a24:	lea    rax,[rsp+0x68]
   140013a29:	xor    r9d,r9d
   140013a2c:	mov    QWORD PTR [rsp+0x50],rax
   140013a31:	lea    r8,[rbp+0x210]
   140013a38:	lea    rax,[rbp-0x70]
   140013a3c:	mov    QWORD PTR [rsp+0x48],rax
   140013a41:	lea    rdx,[rbp+0x0]
   140013a45:	and    QWORD PTR [rsp+0x40],0x0
   140013a4b:	and    QWORD PTR [rsp+0x38],0x0
   140013a51:	and    DWORD PTR [rsp+0x30],0x0
   140013a56:	and    DWORD PTR [rsp+0x28],0x0
   140013a5b:	and    QWORD PTR [rsp+0x20],0x0
   140013a61:	call   QWORD PTR [rip+0x29851]        # 0x14003d2b8
   140013a67:	test   eax,eax
   140013a69:	je     0x140013ac7
   140013a6b:	mov    rcx,QWORD PTR [rsp+0x68]
   140013a70:	mov    edx,0x64
   140013a75:	call   QWORD PTR [rip+0x2997d]        # 0x14003d3f8
   140013a7b:	mov    rcx,QWORD PTR [rsp+0x68]
   140013a80:	cmp    eax,0x102
   140013a85:	jne    0x140013b13
   140013a8b:	mov    edx,0x64
   140013a90:	call   QWORD PTR [rip+0x29622]        # 0x14003d0b8
   140013a96:	cmp    eax,0xffffffff
   140013a99:	je     0x140029ee5
   140013a9f:	test   r14,r14
   140013aa2:	je     0x140013aab
   140013aa4:	mov    eax,DWORD PTR [rsp+0x7c]
   140013aa8:	mov    DWORD PTR [r14],eax
   140013aab:	test   rsi,rsi
   140013aae:	je     0x140029ed4
   140013ab4:	mov    rax,QWORD PTR [rsp+0x68]
   140013ab9:	mov    QWORD PTR [rsi],rax
   140013abc:	mov    rcx,QWORD PTR [rsp+0x70]
   140013ac1:	call   QWORD PTR [rip+0x296e1]        # 0x14003d1a8
   140013ac7:	mov    rcx,QWORD PTR [rsp+0x60]
   140013acc:	test   rdi,rdi
   140013acf:	je     0x140013adf
   140013ad1:	mov    rcx,rdi
   140013ad4:	call   QWORD PTR [rip+0x296ce]        # 0x14003d1a8
   140013ada:	mov    rcx,QWORD PTR [rsp+0x60]
   140013adf:	test   rcx,rcx
   140013ae2:	je     0x140013aea
   140013ae4:	call   QWORD PTR [rip+0x296be]        # 0x14003d1a8
   140013aea:	mov    eax,ebx
   140013aec:	mov    rcx,QWORD PTR [rbp+0x420]
   140013af3:	xor    rcx,rsp
   140013af6:	call   0x1400141d0
   140013afb:	lea    r11,[rsp+0x530]
   140013b03:	mov    rbx,QWORD PTR [r11+0x30]
   140013b07:	mov    rsi,QWORD PTR [r11+0x38]
   140013b0b:	mov    rsp,r11
   140013b0e:	pop    r14
   140013b10:	pop    rdi
   140013b11:	pop    rbp
   140013b12:	ret    
   140013b13:	call   QWORD PTR [rip+0x2968f]        # 0x14003d1a8
   140013b19:	mov    ebx,0x1
   140013b1e:	jmp    0x140013abc
   140013b20:	int3   
   140013b21:	int3   
   140013b22:	int3   
   140013b23:	int3   
   140013b24:	int3   
   140013b25:	int3   
   140013b26:	int3   
   140013b27:	int3   
   140013b28:	mov    QWORD PTR [rsp+0x18],r8
   140013b2d:	mov    QWORD PTR [rsp+0x20],r9
   140013b32:	push   rbx
   140013b33:	push   rbp
   140013b34:	push   rsi
   140013b35:	push   rdi
   140013b36:	sub    rsp,0x28
   140013b3a:	xor    ebp,ebp
   140013b3c:	lea    rax,[rdx-0x1]
   140013b40:	cmp    rax,0x7ffffffe
   140013b46:	mov    rsi,rcx
   140013b49:	mov    edi,ebp
   140013b4b:	mov    ecx,0x80070057
   140013b50:	cmova  edi,ecx
   140013b53:	test   edi,edi
   140013b55:	js     0x140029f08
   140013b5b:	lea    rbx,[rdx-0x1]
   140013b5f:	mov    rcx,rsi
   140013b62:	mov    rdx,rbx
   140013b65:	lea    r9,[rsp+0x68]
   140013b6a:	mov    edi,ebp
   140013b6c:	call   QWORD PTR [rip+0x29aa6]        # 0x14003d618
   140013b72:	test   eax,eax
   140013b74:	js     0x140013b90
   140013b76:	cdqe   
   140013b78:	cmp    rax,rbx
   140013b7b:	ja     0x140013b90
   140013b7d:	je     0x140013b8a
   140013b7f:	mov    eax,edi
   140013b81:	add    rsp,0x28
   140013b85:	pop    rdi
   140013b86:	pop    rsi
   140013b87:	pop    rbp
   140013b88:	pop    rbx
   140013b89:	ret    
   140013b8a:	mov    WORD PTR [rsi+rbx*2],bp
   140013b8e:	jmp    0x140013b7f
   140013b90:	mov    WORD PTR [rsi+rbx*2],bp
   140013b94:	mov    edi,0x8007007a
   140013b99:	jmp    0x140013b7f
   140013b9b:	int3   
   140013b9c:	int3   
   140013b9d:	int3   
   140013b9e:	int3   
   140013b9f:	int3   
   140013ba0:	int3   
   140013ba1:	int3   
   140013ba2:	int3   
   140013ba3:	int3   
   140013ba4:	mov    r11,rsp
   140013ba7:	mov    QWORD PTR [r11+0x8],rbx
   140013bab:	mov    QWORD PTR [r11+0x20],rsi
   140013baf:	push   rdi
   140013bb0:	sub    rsp,0x40
   140013bb4:	mov    rdi,rcx
   140013bb7:	lea    rax,[r11+0x18]
   140013bbb:	mov    rcx,0xffffffff80000002
   140013bc2:	mov    QWORD PTR [r11-0x28],rax
   140013bc6:	mov    r9d,0x20019
   140013bcc:	lea    rdx,[rip+0x2bddd]        # 0x14003f9b0
   140013bd3:	xor    r8d,r8d
   140013bd6:	call   QWORD PTR [rip+0x29764]        # 0x14003d340
   140013bdc:	xor    esi,esi
   140013bde:	mov    ebx,eax
   140013be0:	test   eax,eax
   140013be2:	jg     0x140029f1a
   140013be8:	test   ebx,ebx
   140013bea:	js     0x140013c46
   140013bec:	mov    rcx,QWORD PTR [rsp+0x60]
   140013bf1:	lea    rax,[rsp+0x58]
   140013bf6:	mov    QWORD PTR [rsp+0x30],rax
   140013bfb:	lea    r8,[rip+0x2bd76]        # 0x14003f978
   140013c02:	mov    QWORD PTR [rsp+0x28],rdi
   140013c07:	mov    r9d,0x2
   140013c0d:	xor    edx,edx
   140013c0f:	mov    QWORD PTR [rsp+0x20],rsi
   140013c14:	mov    DWORD PTR [rsp+0x58],0x208
   140013c1c:	call   QWORD PTR [rip+0x2972e]        # 0x14003d350
   140013c22:	mov    ebx,eax
   140013c24:	test   eax,eax
   140013c26:	jg     0x140029f28
   140013c2c:	test   ebx,ebx
   140013c2e:	js     0x140013c3b
   140013c30:	cmp    WORD PTR [rdi],si
   140013c33:	mov    eax,0x80004005
   140013c38:	cmove  ebx,eax
   140013c3b:	mov    rcx,QWORD PTR [rsp+0x60]
   140013c40:	call   QWORD PTR [rip+0x29712]        # 0x14003d358
   140013c46:	mov    rsi,QWORD PTR [rsp+0x68]
   140013c4b:	mov    eax,ebx
   140013c4d:	mov    rbx,QWORD PTR [rsp+0x50]
   140013c52:	add    rsp,0x40
   140013c56:	pop    rdi
   140013c57:	ret    
   140013c58:	int3   
   140013c59:	int3   
   140013c5a:	int3   
   140013c5b:	int3   
   140013c5c:	int3   
   140013c5d:	int3   
   140013c5e:	int3   
   140013c5f:	int3   
   140013c60:	rex push rbx
   140013c62:	sub    rsp,0x20
   140013c66:	mov    rbx,QWORD PTR [rip+0x3b0e3]        # 0x14004ed50
   140013c6d:	mov    eax,0x1
   140013c72:	mov    rdx,QWORD PTR [rip+0x3b0df]        # 0x14004ed58
   140013c79:	cmp    rbx,rdx
   140013c7c:	jae    0x140013c9c
   140013c7e:	test   eax,eax
   140013c80:	js     0x140013c9c
   140013c82:	mov    rcx,QWORD PTR [rbx]
   140013c85:	test   rcx,rcx
   140013c88:	je     0x140013c96
   140013c8a:	call   0x140013ca8
   140013c8f:	mov    rdx,QWORD PTR [rip+0x3b0c2]        # 0x14004ed58
   140013c96:	add    rbx,0x8
   140013c9a:	jmp    0x140013c79
   140013c9c:	add    rsp,0x20
   140013ca0:	pop    rbx
   140013ca1:	ret    
   140013ca2:	int3   
   140013ca3:	int3   
   140013ca4:	int3   
   140013ca5:	int3   
   140013ca6:	int3   
   140013ca7:	int3   
   140013ca8:	mov    r11,rsp
   140013cab:	mov    QWORD PTR [r11+0x10],rbx
   140013caf:	mov    QWORD PTR [r11+0x18],rsi
   140013cb3:	push   rdi
   140013cb4:	sub    rsp,0x30
   140013cb8:	and    QWORD PTR [r11+0x8],0x0
   140013cbd:	mov    rbx,rcx
   140013cc0:	mov    rdi,QWORD PTR [rcx+0x10]
   140013cc4:	test   rdi,rdi
   140013cc7:	je     0x140013d58
   140013ccd:	mov    rsi,QWORD PTR [rcx+0x18]
   140013cd1:	lea    rax,[rip+0xffffffffffff8358]        # 0x14000c030
   140013cd8:	cmp    rdi,rax
   140013cdb:	jne    0x140029f36
   140013ce1:	lea    r8,[r11+0x8]
   140013ce5:	mov    rcx,rsi
   140013ce8:	lea    rdx,[rip+0x2bd19]        # 0x14003fa08
   140013cef:	call   0x14000c030
   140013cf4:	mov    edi,eax
   140013cf6:	test   eax,eax
   140013cf8:	js     0x140013d1d
   140013cfa:	mov    rdx,QWORD PTR [rsp+0x40]
   140013cff:	lea    rax,[rbx+0x28]
   140013d03:	mov    rcx,QWORD PTR [rbx]
   140013d06:	mov    r9d,0x5
   140013d0c:	mov    QWORD PTR [rsp+0x20],rax
   140013d11:	lea    r8d,[r9-0x1]
   140013d15:	call   QWORD PTR [rip+0x3f3bd]        # 0x1400530d8
   140013d1b:	mov    edi,eax
   140013d1d:	mov    rbx,QWORD PTR [rsp+0x40]
   140013d22:	test   rbx,rbx
   140013d25:	je     0x140013d46
   140013d27:	mov    rax,QWORD PTR [rbx]
   140013d2a:	mov    rsi,QWORD PTR [rax+0x10]
   140013d2e:	lea    rax,[rip+0xffffffffffff87ab]        # 0x14000c4e0
   140013d35:	cmp    rsi,rax
   140013d38:	jne    0x140029f56
   140013d3e:	mov    rcx,rbx
   140013d41:	call   0x14000c4e0
   140013d46:	mov    eax,edi
   140013d48:	mov    rbx,QWORD PTR [rsp+0x48]
   140013d4d:	mov    rsi,QWORD PTR [rsp+0x50]
   140013d52:	add    rsp,0x30
   140013d56:	pop    rdi
   140013d57:	ret    
   140013d58:	xor    eax,eax
   140013d5a:	jmp    0x140013d48
   140013d5c:	int3   
   140013d5d:	int3   
   140013d5e:	int3   
   140013d5f:	int3   
   140013d60:	int3   
   140013d61:	int3   
   140013d62:	int3   
   140013d63:	int3   
   140013d64:	int3   
   140013d65:	int3   
   140013d66:	int3   
   140013d67:	int3   
   140013d68:	mov    rax,QWORD PTR [rcx+0x30]
   140013d6c:	xor    ecx,ecx
   140013d6e:	cmp    BYTE PTR [rax+0x4],cl
   140013d71:	je     0x140013d8a
   140013d73:	add    rax,0x18
   140013d77:	cmp    DWORD PTR [rax],ecx
   140013d79:	jne    0x140013d8d
   140013d7b:	cmp    DWORD PTR [rax+0x4],ecx
   140013d7e:	jne    0x140013d8d
   140013d80:	cmp    DWORD PTR [rax+0x8],ecx
   140013d83:	jne    0x140013d8d
   140013d85:	cmp    DWORD PTR [rax+0xc],ecx
   140013d88:	jne    0x140013d8d
   140013d8a:	mov    rax,rcx
   140013d8d:	ret    
   140013d8e:	int3   
   140013d8f:	int3   
   140013d90:	int3   
   140013d91:	int3   
   140013d92:	int3   
   140013d93:	int3   
   140013d94:	mov    QWORD PTR [rsp+0x8],rbx
   140013d99:	push   rdi
   140013d9a:	sub    rsp,0x20
   140013d9e:	mov    rdi,rcx
   140013da1:	jmp    0x140013db2
   140013da3:	mov    rcx,rdi
   140013da6:	call   0x140014688
   140013dab:	test   eax,eax
   140013dad:	je     0x140013dbf
   140013daf:	mov    rcx,rdi
   140013db2:	call   0x1400142be
   140013db7:	mov    rbx,rax
   140013dba:	test   rax,rax
   140013dbd:	je     0x140013da3
   140013dbf:	mov    rax,rbx
   140013dc2:	mov    rbx,QWORD PTR [rsp+0x30]
   140013dc7:	add    rsp,0x20
   140013dcb:	pop    rdi
   140013dcc:	ret    
   140013dcd:	int3   
   140013dce:	int3   
   140013dcf:	int3   
   140013dd0:	int3   
   140013dd1:	int3   
   140013dd2:	int3   
   140013dd3:	int3   
   140013dd4:	jmp    0x140013d94
   140013dd9:	int3   
   140013dda:	int3   
   140013ddb:	int3   
   140013ddc:	int3   
   140013ddd:	int3   
   140013dde:	int3   
   140013ddf:	int3   
   140013de0:	jmp    0x1400142ca
   140013de5:	int3   
   140013de6:	int3   
   140013de7:	int3   
   140013de8:	int3   
   140013de9:	int3   
   140013dea:	int3   
   140013deb:	int3   
   140013dec:	int3   
   140013ded:	int3   
   140013dee:	int3   
   140013def:	int3   
   140013df0:	sub    rsp,0x28
   140013df4:	mov    eax,0x5a4d
   140013df9:	cmp    WORD PTR [rip+0xfffffffffffec200],ax        # 0x140000000
   140013e00:	je     0x140013e06
   140013e02:	xor    eax,eax
   140013e04:	jmp    0x140013e55
   140013e06:	movsxd rcx,DWORD PTR [rip+0xfffffffffffec22f]        # 0x14000003c
   140013e0d:	lea    rax,[rip+0xfffffffffffec1ec]        # 0x140000000
   140013e14:	add    rcx,rax
   140013e17:	cmp    DWORD PTR [rcx],0x4550
   140013e1d:	jne    0x140013e02
   140013e1f:	movzx  eax,WORD PTR [rcx+0x18]
   140013e23:	cmp    eax,0x10b
   140013e28:	je     0x140013e44
   140013e2a:	cmp    eax,0x20b
   140013e2f:	jne    0x140013e02
   140013e31:	xor    eax,eax
   140013e33:	cmp    DWORD PTR [rcx+0x84],0xe
   140013e3a:	jbe    0x140013e55
   140013e3c:	cmp    DWORD PTR [rcx+0xf8],eax
   140013e42:	jmp    0x140013e52
   140013e44:	xor    eax,eax
   140013e46:	cmp    DWORD PTR [rcx+0x74],0xe
   140013e4a:	jbe    0x140013e55
   140013e4c:	cmp    DWORD PTR [rcx+0xe8],eax
   140013e52:	setne  al
   140013e55:	mov    ecx,0x2
   140013e5a:	mov    DWORD PTR [rip+0x3a6f0],eax        # 0x14004e550
   140013e60:	call   0x140014768
   140013e65:	mov    ecx,eax
   140013e67:	call   QWORD PTR [rip+0x29833]        # 0x14003d6a0
   140013e6d:	mov    rcx,QWORD PTR [rip+0x296ec]        # 0x14003d560
   140013e74:	or     rax,0xffffffffffffffff
   140013e78:	mov    QWORD PTR [rip+0x3ac99],rax        # 0x14004eb18
   140013e7f:	mov    QWORD PTR [rip+0x3ac9a],rax        # 0x14004eb20
   140013e86:	mov    eax,DWORD PTR [rip+0x3ac50]        # 0x14004eadc
   140013e8c:	mov    DWORD PTR [rcx],eax
   140013e8e:	mov    rcx,QWORD PTR [rip+0x2970b]        # 0x14003d5a0
   140013e95:	mov    eax,DWORD PTR [rip+0x3ac35]        # 0x14004ead0
   140013e9b:	mov    DWORD PTR [rcx],eax
   140013e9d:	call   0x140014980
   140013ea2:	cmp    DWORD PTR [rip+0x3a15f],0x0        # 0x14004e008
   140013ea9:	jne    0x140013eb8
   140013eab:	lea    rcx,[rip+0xace]        # 0x140014980
   140013eb2:	call   QWORD PTR [rip+0x296e0]        # 0x14003d598
   140013eb8:	xor    eax,eax
   140013eba:	add    rsp,0x28
   140013ebe:	ret    
   140013ebf:	int3   
   140013ec0:	int3   
   140013ec1:	int3   
   140013ec2:	int3   
   140013ec3:	int3   
   140013ec4:	int3   
   140013ec5:	int3   
   140013ec6:	int3   
   140013ec7:	int3   
   140013ec8:	int3   
   140013ec9:	int3   
   140013eca:	int3   
   140013ecb:	int3   
   140013ecc:	int3   
   140013ecd:	int3   
   140013ece:	int3   
   140013ecf:	int3   
   140013ed0:	sub    rsp,0x38
   140013ed4:	mov    eax,DWORD PTR [rip+0x3abfe]        # 0x14004ead8
   140013eda:	lea    r8,[rip+0x3a667]        # 0x14004e548
   140013ee1:	mov    r9d,DWORD PTR [rip+0x3abec]        # 0x14004ead4
   140013ee8:	lea    rdx,[rip+0x3a651]        # 0x14004e540
   140013eef:	mov    DWORD PTR [rip+0x3a65f],eax        # 0x14004e554
   140013ef5:	lea    rcx,[rip+0x3a63c]        # 0x14004e538
   140013efc:	lea    rax,[rip+0x3a651]        # 0x14004e554
   140013f03:	mov    QWORD PTR [rsp+0x20],rax
   140013f08:	call   QWORD PTR [rip+0x2969a]        # 0x14003d5a8
   140013f0e:	mov    DWORD PTR [rip+0x3a628],eax        # 0x14004e53c
   140013f14:	add    rsp,0x38
   140013f18:	ret    
   140013f19:	int3   
   140013f1a:	int3   
   140013f1b:	int3   
   140013f1c:	int3   
   140013f1d:	int3   
   140013f1e:	int3   
   140013f1f:	int3   
   140013f20:	mov    QWORD PTR [rsp+0x8],rbx
   140013f25:	mov    QWORD PTR [rsp+0x10],rsi
   140013f2a:	mov    QWORD PTR [rsp+0x18],rdi
   140013f2f:	push   r12
   140013f31:	push   r14
   140013f33:	push   r15
   140013f35:	sub    rsp,0xb0
   140013f3c:	xor    r15d,r15d
   140013f3f:	mov    DWORD PTR [rsp+0x20],r15d
   140013f44:	lea    rcx,[rsp+0x40]
   140013f49:	call   QWORD PTR [rip+0x293a1]        # 0x14003d2f0
   140013f4f:	nop
   140013f50:	mov    rax,QWORD PTR gs:0x30
   140013f59:	mov    rbx,QWORD PTR [rax+0x8]
   140013f5d:	mov    r14d,r15d
   140013f60:	xor    eax,eax
   140013f62:	lock cmpxchg QWORD PTR [rip+0x3ab9d],rbx        # 0x14004eb08
   140013f6b:	je     0x140013f89
   140013f6d:	cmp    rax,rbx
   140013f70:	jne    0x140013f7c
   140013f72:	mov    edi,0x1
   140013f77:	mov    r14d,edi
   140013f7a:	jmp    0x140013f8e
   140013f7c:	mov    ecx,0x3e8
   140013f81:	call   QWORD PTR [rip+0x29429]        # 0x14003d3b0
   140013f87:	jmp    0x140013f60
   140013f89:	mov    edi,0x1
   140013f8e:	mov    eax,DWORD PTR [rip+0x3ab7c]        # 0x14004eb10
   140013f94:	cmp    eax,edi
   140013f96:	jne    0x140013fa6
   140013f98:	mov    esi,0x1f
   140013f9d:	mov    ecx,esi
   140013f9f:	call   0x1400147b4
   140013fa4:	jmp    0x140014017
   140013fa6:	mov    eax,DWORD PTR [rip+0x3ab64]        # 0x14004eb10
   140013fac:	test   eax,eax
   140013fae:	jne    0x14001400c
   140013fb0:	mov    DWORD PTR [rip+0x3ab5a],edi        # 0x14004eb10
   140013fb6:	lea    r12,[rip+0x29833]        # 0x14003d7f0
   140013fbd:	lea    rbx,[rip+0x29814]        # 0x14003d7d8
   140013fc4:	mov    QWORD PTR [rsp+0x30],rbx
   140013fc9:	mov    eax,r15d
   140013fcc:	mov    DWORD PTR [rsp+0x24],eax
   140013fd0:	cmp    rbx,r12
   140013fd3:	jae    0x140013ffe
   140013fd5:	test   eax,eax
   140013fd7:	jne    0x140014002
   140013fd9:	mov    rsi,QWORD PTR [rbx]
   140013fdc:	test   rsi,rsi
   140013fdf:	je     0x140013ff3
   140013fe1:	mov    rcx,rsi
   140013fe4:	mov    rax,QWORD PTR [rip+0x2973d]        # 0x14003d728
   140013feb:	call   rax
   140013fed:	call   rsi
   140013fef:	mov    DWORD PTR [rsp+0x24],eax
   140013ff3:	add    rbx,0x8
   140013ff7:	mov    QWORD PTR [rsp+0x30],rbx
   140013ffc:	jmp    0x140013fd0
   140013ffe:	test   eax,eax
   140014000:	je     0x140014012
   140014002:	mov    eax,0xff
   140014007:	jmp    0x140014173
   14001400c:	mov    DWORD PTR [rip+0x3a522],edi        # 0x14004e534
   140014012:	mov    esi,0x1f
   140014017:	mov    eax,DWORD PTR [rip+0x3aaf3]        # 0x14004eb10
   14001401d:	cmp    eax,edi
   14001401f:	jne    0x14001403e
   140014021:	lea    rdx,[rip+0x297a8]        # 0x14003d7d0
   140014028:	lea    rcx,[rip+0x29709]        # 0x14003d738
   14001402f:	call   0x14001498a
   140014034:	mov    DWORD PTR [rip+0x3aad2],0x2        # 0x14004eb10
   14001403e:	test   r14d,r14d
   140014041:	jne    0x14001404d
   140014043:	mov    rax,r15
   140014046:	xchg   QWORD PTR [rip+0x3aabb],rax        # 0x14004eb08
   14001404d:	cmp    QWORD PTR [rip+0x3aad4],r15        # 0x14004eb28
   140014054:	je     0x140014084
   140014056:	lea    rcx,[rip+0x3aacb]        # 0x14004eb28
   14001405d:	call   0x140014810
   140014062:	test   eax,eax
   140014064:	je     0x140014084
   140014066:	mov    rbx,QWORD PTR [rip+0x3aabb]        # 0x14004eb28
   14001406d:	mov    rcx,rbx
   140014070:	mov    rax,QWORD PTR [rip+0x296b1]        # 0x14003d728
   140014077:	call   rax
   140014079:	xor    r8d,r8d
   14001407c:	lea    edx,[r8+0x2]
   140014080:	xor    ecx,ecx
   140014082:	call   rbx
   140014084:	mov    rax,QWORD PTR [rip+0x294dd]        # 0x14003d568
   14001408b:	mov    rdx,QWORD PTR [rax]
   14001408e:	test   rdx,rdx
   140014091:	jne    0x14001409d
   140014093:	mov    eax,0xff
   140014098:	jmp    0x140014173
   14001409d:	mov    QWORD PTR [rsp+0x28],rdx
   1400140a2:	mov    ecx,DWORD PTR [rsp+0x20]
   1400140a6:	cmp    WORD PTR [rdx],0x20
   1400140aa:	ja     0x140014124
   1400140ac:	cmp    WORD PTR [rdx],r15w
   1400140b0:	je     0x1400140b6
   1400140b2:	test   ecx,ecx
   1400140b4:	jne    0x140014124
   1400140b6:	movzx  eax,WORD PTR [rdx]
   1400140b9:	sub    ax,di
   1400140bc:	cmp    ax,si
   1400140bf:	ja     0x1400140cc
   1400140c1:	add    rdx,0x2
   1400140c5:	mov    QWORD PTR [rsp+0x28],rdx
   1400140ca:	jmp    0x1400140b6
   1400140cc:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400140d0:	movzx  eax,WORD PTR [rsp+0x80]
   1400140d8:	mov    r9d,0xa
   1400140de:	and    cl,dil
   1400140e1:	cmovne r9d,eax
   1400140e5:	mov    r8,rdx
   1400140e8:	xor    edx,edx
   1400140ea:	lea    rcx,[rip+0xfffffffffffebf0f]        # 0x140000000
   1400140f1:	call   0x14000c8b8
   1400140f6:	mov    DWORD PTR [rip+0x3a434],eax        # 0x14004e530
   1400140fc:	cmp    DWORD PTR [rip+0x3a44d],r15d        # 0x14004e550
   140014103:	jne    0x14001410d
   140014105:	mov    ecx,eax
   140014107:	call   QWORD PTR [rip+0x2958b]        # 0x14003d698
   14001410d:	cmp    DWORD PTR [rip+0x3a420],r15d        # 0x14004e534
   140014114:	jne    0x140014122
   140014116:	call   QWORD PTR [rip+0x2955c]        # 0x14003d678
   14001411c:	mov    eax,DWORD PTR [rip+0x3a40e]        # 0x14004e530
   140014122:	jmp    0x140014173
   140014124:	cmp    WORD PTR [rdx],0x22
   140014128:	jne    0x140014138
   14001412a:	mov    eax,r15d
   14001412d:	test   ecx,ecx
   14001412f:	sete   al
   140014132:	mov    ecx,eax
   140014134:	mov    DWORD PTR [rsp+0x20],eax
   140014138:	add    rdx,0x2
   14001413c:	mov    QWORD PTR [rsp+0x28],rdx
   140014141:	jmp    0x1400140a6
   140014146:	mov    DWORD PTR [rip+0x3a3e4],eax        # 0x14004e530
   14001414c:	cmp    DWORD PTR [rip+0x3a3fd],0x0        # 0x14004e550
   140014153:	jne    0x14001415e
   140014155:	mov    ecx,eax
   140014157:	call   QWORD PTR [rip+0x29533]        # 0x14003d690
   14001415d:	int3   
   14001415e:	cmp    DWORD PTR [rip+0x3a3cf],0x0        # 0x14004e534
   140014165:	jne    0x140014173
   140014167:	call   QWORD PTR [rip+0x2950b]        # 0x14003d678
   14001416d:	mov    eax,DWORD PTR [rip+0x3a3bd]        # 0x14004e530
   140014173:	lea    r11,[rsp+0xb0]
   14001417b:	mov    rbx,QWORD PTR [r11+0x20]
   14001417f:	mov    rsi,QWORD PTR [r11+0x28]
   140014183:	mov    rdi,QWORD PTR [r11+0x30]
   140014187:	mov    rsp,r11
   14001418a:	pop    r15
   14001418c:	pop    r14
   14001418e:	pop    r12
   140014190:	ret    
   140014191:	int3   
   140014192:	int3   
   140014193:	int3   
   140014194:	int3   
   140014195:	int3   
   140014196:	int3   
   140014197:	int3   
   140014198:	int3   
   140014199:	int3   
   14001419a:	int3   
   14001419b:	int3   
   14001419c:	int3   
   14001419d:	int3   
   14001419e:	int3   
   14001419f:	int3   
   1400141a0:	sub    rsp,0x28
   1400141a4:	call   0x1400148a4
   1400141a9:	add    rsp,0x28
   1400141ad:	jmp    0x140013f20
   1400141b2:	int3   
   1400141b3:	int3   
   1400141b4:	int3   
   1400141b5:	int3   
   1400141b6:	int3   
   1400141b7:	int3   
   1400141b8:	int3   
   1400141b9:	int3   
   1400141ba:	int3   
   1400141bb:	int3   
   1400141bc:	int3   
   1400141bd:	int3   
   1400141be:	int3   
   1400141bf:	int3   
   1400141c0:	int3   
   1400141c1:	int3   
   1400141c2:	int3   
   1400141c3:	int3   
   1400141c4:	int3   
   1400141c5:	int3   
   1400141c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400141d0:	cmp    rcx,QWORD PTR [rip+0x39e39]        # 0x14004e010
   1400141d7:	jne    0x1400141e9
   1400141d9:	rol    rcx,0x10
   1400141dd:	test   cx,0xffff
   1400141e2:	jne    0x1400141e5
   1400141e4:	ret    
   1400141e5:	ror    rcx,0x10
   1400141e9:	jmp    0x140014360
   1400141ee:	int3   
   1400141ef:	int3   
   1400141f0:	int3   
   1400141f1:	int3   
   1400141f2:	int3   
   1400141f3:	int3   
   1400141f4:	mov    rax,rsp
   1400141f7:	mov    QWORD PTR [rax+0x20],r9
   1400141fb:	mov    DWORD PTR [rax+0x18],r8d
   1400141ff:	mov    QWORD PTR [rax+0x10],rdx
   140014203:	push   rbx
   140014204:	push   rsi
   140014205:	push   rdi
   140014206:	push   r14
   140014208:	sub    rsp,0x38
   14001420c:	mov    r14,r9
   14001420f:	movsxd rbx,r8d
   140014212:	mov    rsi,rdx
   140014215:	and    DWORD PTR [rax-0x38],0x0
   140014219:	mov    rdi,rbx
   14001421c:	imul   rdi,rdx
   140014220:	add    rdi,rcx
   140014223:	mov    QWORD PTR [rax+0x8],rdi
   140014227:	sub    ebx,0x1
   14001422a:	mov    DWORD PTR [rsp+0x70],ebx
   14001422e:	js     0x14001424c
   140014230:	sub    rdi,rsi
   140014233:	mov    QWORD PTR [rsp+0x60],rdi
   140014238:	mov    rcx,r14
   14001423b:	mov    rax,QWORD PTR [rip+0x294e6]        # 0x14003d728
   140014242:	call   rax
   140014244:	mov    rcx,rdi
   140014247:	call   r14
   14001424a:	jmp    0x140014227
   14001424c:	mov    DWORD PTR [rsp+0x20],0x1
   140014254:	add    rsp,0x38
   140014258:	pop    r14
   14001425a:	pop    rdi
   14001425b:	pop    rsi
   14001425c:	pop    rbx
   14001425d:	ret    
   14001425e:	int3   
   14001425f:	int3   
   140014260:	int3   
   140014261:	int3   
   140014262:	int3   
   140014263:	int3   
   140014264:	mov    QWORD PTR [rsp+0x10],rbx
   140014269:	mov    DWORD PTR [rsp+0x18],r8d
   14001426e:	mov    QWORD PTR [rsp+0x8],rcx
   140014273:	push   rsi
   140014274:	push   rdi
   140014275:	push   r14
   140014277:	sub    rsp,0x40
   14001427b:	mov    rsi,r9
   14001427e:	mov    ebx,r8d
   140014281:	mov    r14,rdx
   140014284:	mov    rdi,rcx
   140014287:	sub    ebx,0x1
   14001428a:	mov    DWORD PTR [rsp+0x70],ebx
   14001428e:	js     0x1400142a8
   140014290:	sub    rdi,r14
   140014293:	mov    QWORD PTR [rsp+0x60],rdi
   140014298:	mov    rcx,rsi
   14001429b:	call   QWORD PTR [rip+0x29487]        # 0x14003d728
   1400142a1:	mov    rcx,rdi
   1400142a4:	call   rsi
   1400142a6:	jmp    0x140014287
   1400142a8:	jmp    0x1400142aa
   1400142aa:	mov    rbx,QWORD PTR [rsp+0x68]
   1400142af:	add    rsp,0x40
   1400142b3:	pop    r14
   1400142b5:	pop    rdi
   1400142b6:	pop    rsi
   1400142b7:	ret    
   1400142b8:	int3   
   1400142b9:	int3   
   1400142ba:	int3   
   1400142bb:	int3   
   1400142bc:	int3   
   1400142bd:	int3   
   1400142be:	jmp    QWORD PTR [rip+0x2938c]        # 0x14003d650
   1400142c4:	int3   
   1400142c5:	int3   
   1400142c6:	int3   
   1400142c7:	int3   
   1400142c8:	int3   
   1400142c9:	int3   
   1400142ca:	jmp    QWORD PTR [rip+0x29378]        # 0x14003d648
   1400142d0:	int3   
   1400142d1:	int3   
   1400142d2:	int3   
   1400142d3:	int3   
   1400142d4:	int3   
   1400142d5:	int3   
   1400142d6:	int3   
   1400142d7:	int3   
   1400142d8:	int3   
   1400142d9:	int3   
   1400142da:	int3   
   1400142db:	int3   
   1400142dc:	int3   
   1400142dd:	int3   
   1400142de:	int3   
   1400142df:	int3   
   1400142e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400142e5:	push   rdi
   1400142e6:	sub    rsp,0x20
   1400142ea:	mov    ebx,edx
   1400142ec:	mov    rdi,rcx
   1400142ef:	call   QWORD PTR [rip+0x2924b]        # 0x14003d540
   1400142f5:	test   bl,0x1
   1400142f8:	je     0x140014302
   1400142fa:	mov    rcx,rdi
   1400142fd:	call   0x140013de0
   140014302:	mov    rax,rdi
   140014305:	mov    rbx,QWORD PTR [rsp+0x30]
   14001430a:	add    rsp,0x20
   14001430e:	pop    rdi
   14001430f:	ret    
   140014310:	int3   
   140014311:	int3   
   140014312:	int3   
   140014313:	int3   
   140014314:	int3   
   140014315:	int3   
   140014316:	int3   
   140014317:	int3   
   140014318:	rex push rbx
   14001431a:	sub    rsp,0x20
   14001431e:	mov    rbx,rcx
   140014321:	xor    ecx,ecx
   140014323:	call   QWORD PTR [rip+0x28e2f]        # 0x14003d158
   140014329:	mov    rcx,rbx
   14001432c:	call   QWORD PTR [rip+0x28e2e]        # 0x14003d160
   140014332:	call   QWORD PTR [rip+0x28fa8]        # 0x14003d2e0
   140014338:	mov    rcx,rax
   14001433b:	mov    edx,0xc0000409
   140014340:	add    rsp,0x20
   140014344:	pop    rbx
   140014345:	rex.W jmp QWORD PTR [rip+0x28f4c]        # 0x14003d298
   14001434c:	int3   
   14001434d:	int3   
   14001434e:	int3   
   14001434f:	int3   
   140014350:	int3   
   140014351:	int3   
   140014352:	int3   
   140014353:	int3   
   140014354:	int3   
   140014355:	int3   
   140014356:	int3   
   140014357:	int3   
   140014358:	int3   
   140014359:	int3   
   14001435a:	int3   
   14001435b:	int3   
   14001435c:	int3   
   14001435d:	int3   
   14001435e:	int3   
   14001435f:	int3   
   140014360:	mov    QWORD PTR [rsp+0x8],rcx
   140014365:	sub    rsp,0x88
   14001436c:	lea    rcx,[rip+0x3a28d]        # 0x14004e600
   140014373:	call   QWORD PTR [rip+0x2935f]        # 0x14003d6d8
   140014379:	mov    rax,QWORD PTR [rip+0x3a378]        # 0x14004e6f8
   140014380:	mov    QWORD PTR [rsp+0x48],rax
   140014385:	xor    r8d,r8d
   140014388:	lea    rdx,[rsp+0x50]
   14001438d:	mov    rcx,QWORD PTR [rsp+0x48]
   140014392:	call   QWORD PTR [rip+0x29338]        # 0x14003d6d0
   140014398:	mov    QWORD PTR [rsp+0x40],rax
   14001439d:	cmp    QWORD PTR [rsp+0x40],0x0
   1400143a3:	je     0x1400143e7
   1400143a5:	mov    QWORD PTR [rsp+0x38],0x0
   1400143ae:	lea    rax,[rsp+0x58]
   1400143b3:	mov    QWORD PTR [rsp+0x30],rax
   1400143b8:	lea    rax,[rsp+0x60]
   1400143bd:	mov    QWORD PTR [rsp+0x28],rax
   1400143c2:	lea    rax,[rip+0x3a237]        # 0x14004e600
   1400143c9:	mov    QWORD PTR [rsp+0x20],rax
   1400143ce:	mov    r9,QWORD PTR [rsp+0x40]
   1400143d3:	mov    r8,QWORD PTR [rsp+0x48]
   1400143d8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400143dd:	xor    ecx,ecx
   1400143df:	call   QWORD PTR [rip+0x292e3]        # 0x14003d6c8
   1400143e5:	jmp    0x14001440a
   1400143e7:	mov    rax,QWORD PTR [rip+0x3a2aa]        # 0x14004e698
   1400143ee:	mov    rax,QWORD PTR [rax]
   1400143f1:	mov    QWORD PTR [rip+0x3a300],rax        # 0x14004e6f8
   1400143f8:	mov    rax,QWORD PTR [rip+0x3a299]        # 0x14004e698
   1400143ff:	add    rax,0x8
   140014403:	mov    QWORD PTR [rip+0x3a28e],rax        # 0x14004e698
   14001440a:	mov    rax,QWORD PTR [rip+0x3a2e7]        # 0x14004e6f8
   140014411:	mov    QWORD PTR [rip+0x3a158],rax        # 0x14004e570
   140014418:	mov    rax,QWORD PTR [rsp+0x90]
   140014420:	mov    QWORD PTR [rip+0x3a259],rax        # 0x14004e680
   140014427:	mov    DWORD PTR [rip+0x3a12f],0xc0000409        # 0x14004e560
   140014431:	mov    DWORD PTR [rip+0x3a129],0x1        # 0x14004e564
   14001443b:	mov    DWORD PTR [rip+0x3a133],0x3        # 0x14004e578
   140014445:	mov    eax,0x8
   14001444a:	imul   rax,rax,0x0
   14001444e:	lea    rcx,[rip+0x3a12b]        # 0x14004e580
   140014455:	mov    QWORD PTR [rcx+rax*1],0x2
   14001445d:	mov    eax,0x8
   140014462:	imul   rax,rax,0x1
   140014466:	lea    rcx,[rip+0x3a113]        # 0x14004e580
   14001446d:	mov    rdx,QWORD PTR [rip+0x39b9c]        # 0x14004e010
   140014474:	mov    QWORD PTR [rcx+rax*1],rdx
   140014478:	mov    eax,0x8
   14001447d:	imul   rax,rax,0x2
   140014481:	lea    rcx,[rip+0x3a0f8]        # 0x14004e580
   140014488:	mov    rdx,QWORD PTR [rip+0x39b89]        # 0x14004e018
   14001448f:	mov    QWORD PTR [rcx+rax*1],rdx
   140014493:	mov    eax,0x8
   140014498:	imul   rax,rax,0x0
   14001449c:	mov    rcx,QWORD PTR [rip+0x39b6d]        # 0x14004e010
   1400144a3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400144a8:	mov    eax,0x8
   1400144ad:	imul   rax,rax,0x1
   1400144b1:	mov    rcx,QWORD PTR [rip+0x39b60]        # 0x14004e018
   1400144b8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400144bd:	lea    rcx,[rip+0x2b55c]        # 0x14003fa20
   1400144c4:	call   0x140014318
   1400144c9:	add    rsp,0x88
   1400144d0:	ret    
   1400144d1:	int3   
   1400144d2:	int3   
   1400144d3:	int3   
   1400144d4:	int3   
   1400144d5:	int3   
   1400144d6:	int3   
   1400144d7:	int3   
   1400144d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400144dd:	push   rdi
   1400144de:	sub    rsp,0x20
   1400144e2:	mov    rdi,rcx
   1400144e5:	mov    rax,QWORD PTR [rip+0x3a634]        # 0x14004eb20
   1400144ec:	mov    QWORD PTR [rsp+0x38],rax
   1400144f1:	cmp    rax,0xffffffffffffffff
   1400144f5:	jne    0x14001450e
   1400144f7:	mov    rbx,QWORD PTR [rip+0x29182]        # 0x14003d680
   1400144fe:	mov    rcx,rbx
   140014501:	call   QWORD PTR [rip+0x29221]        # 0x14003d728
   140014507:	mov    rcx,rdi
   14001450a:	call   rbx
   14001450c:	jmp    0x14001456b
   14001450e:	mov    ecx,0x8
   140014513:	call   0x1400149a2
   140014518:	nop
   140014519:	mov    rax,QWORD PTR [rip+0x3a600]        # 0x14004eb20
   140014520:	mov    QWORD PTR [rsp+0x38],rax
   140014525:	mov    rax,QWORD PTR [rip+0x3a5ec]        # 0x14004eb18
   14001452c:	mov    QWORD PTR [rsp+0x40],rax
   140014531:	lea    r8,[rsp+0x40]
   140014536:	lea    rdx,[rsp+0x38]
   14001453b:	mov    rcx,rdi
   14001453e:	call   0x1400149ba
   140014543:	mov    rbx,rax
   140014546:	mov    rdx,QWORD PTR [rsp+0x38]
   14001454b:	mov    QWORD PTR [rip+0x3a5ce],rdx        # 0x14004eb20
   140014552:	mov    rdx,QWORD PTR [rsp+0x40]
   140014557:	mov    QWORD PTR [rip+0x3a5ba],rdx        # 0x14004eb18
   14001455e:	mov    ecx,0x8
   140014563:	call   0x1400149ae
   140014568:	mov    rax,rbx
   14001456b:	mov    rbx,QWORD PTR [rsp+0x30]
   140014570:	add    rsp,0x20
   140014574:	pop    rdi
   140014575:	ret    
   140014576:	int3   
   140014577:	int3   
   140014578:	int3   
   140014579:	int3   
   14001457a:	int3   
   14001457b:	int3   
   14001457c:	sub    rsp,0x28
   140014580:	call   0x1400144d8
   140014585:	neg    rax
   140014588:	sbb    eax,eax
   14001458a:	neg    eax
   14001458c:	dec    eax
   14001458e:	add    rsp,0x28
   140014592:	ret    
   140014593:	int3   
   140014594:	int3   
   140014595:	int3   
   140014596:	int3   
   140014597:	int3   
   140014598:	int3   
   140014599:	int3   
   14001459a:	int3   
   14001459b:	int3   
   14001459c:	mov    rax,rsp
   14001459f:	mov    QWORD PTR [rax+0x18],rbx
   1400145a3:	mov    QWORD PTR [rax+0x20],rsi
   1400145a7:	mov    QWORD PTR [rax+0x10],rdx
   1400145ab:	mov    QWORD PTR [rax+0x8],rcx
   1400145af:	push   rdi
   1400145b0:	push   r14
   1400145b2:	push   r15
   1400145b4:	sub    rsp,0x30
   1400145b8:	mov    r14,r9
   1400145bb:	mov    r15d,r8d
   1400145be:	mov    rsi,rdx
   1400145c1:	mov    rdi,rcx
   1400145c4:	xor    ebx,ebx
   1400145c6:	mov    DWORD PTR [rax-0x28],ebx
   1400145c9:	mov    DWORD PTR [rax-0x24],ebx
   1400145cc:	mov    DWORD PTR [rsp+0x20],ebx
   1400145d0:	cmp    ebx,r15d
   1400145d3:	jge    0x1400145f0
   1400145d5:	mov    rcx,r14
   1400145d8:	call   QWORD PTR [rip+0x2914a]        # 0x14003d728
   1400145de:	mov    rcx,rdi
   1400145e1:	call   r14
   1400145e4:	add    rdi,rsi
   1400145e7:	mov    QWORD PTR [rsp+0x50],rdi
   1400145ec:	inc    ebx
   1400145ee:	jmp    0x1400145cc
   1400145f0:	mov    DWORD PTR [rsp+0x24],0x1
   1400145f8:	mov    rbx,QWORD PTR [rsp+0x60]
   1400145fd:	mov    rsi,QWORD PTR [rsp+0x68]
   140014602:	add    rsp,0x30
   140014606:	pop    r15
   140014608:	pop    r14
   14001460a:	pop    rdi
   14001460b:	ret    
   14001460c:	int3   
   14001460d:	int3   
   14001460e:	int3   
   14001460f:	int3   
   140014610:	int3   
   140014611:	int3   
   140014612:	int3   
   140014613:	int3   
   140014614:	int3   
   140014615:	int3   
   140014616:	int3   
   140014617:	int3   
   140014618:	int3   
   140014619:	int3   
   14001461a:	int3   
   14001461b:	int3   
   14001461c:	int3   
   14001461d:	int3   
   14001461e:	int3   
   14001461f:	int3   
   140014620:	jmp    QWORD PTR [rip+0x28fd2]        # 0x14003d5f8
   140014626:	int3   
   140014627:	int3   
   140014628:	int3   
   140014629:	int3   
   14001462a:	int3   
   14001462b:	int3   
   14001462c:	int3   
   14001462d:	int3   
   14001462e:	int3   
   14001462f:	int3   
   140014630:	sub    rsp,0x38
   140014634:	mov    r9,rdx
   140014637:	test   rdx,rdx
   14001463a:	je     0x140014671
   14001463c:	xor    edx,edx
   14001463e:	lea    rax,[rdx-0x20]
   140014642:	div    r9
   140014645:	cmp    rax,r8
   140014648:	jae    0x140014671
   14001464a:	call   0x1400149c6
   14001464f:	and    QWORD PTR [rsp+0x20],0x0
   140014655:	xor    r9d,r9d
   140014658:	xor    r8d,r8d
   14001465b:	xor    edx,edx
   14001465d:	xor    ecx,ecx
   14001465f:	mov    DWORD PTR [rax],0xc
   140014665:	call   0x1400149d4
   14001466a:	xor    eax,eax
   14001466c:	add    rsp,0x38
   140014670:	ret    
   140014671:	imul   r9,r8
   140014675:	mov    rdx,r9
   140014678:	add    rsp,0x38
   14001467c:	jmp    0x140014aaa
   140014681:	int3   
   140014682:	int3   
   140014683:	int3   
   140014684:	int3   
   140014685:	int3   
   140014686:	int3   
   140014687:	int3   
   140014688:	jmp    QWORD PTR [rip+0x28f2a]        # 0x14003d5b8
   14001468e:	int3   
   14001468f:	int3   
   140014690:	int3   
   140014691:	int3   
   140014692:	int3   
   140014693:	int3   
   140014694:	jmp    QWORD PTR [rip+0x28f16]        # 0x14003d5b0
   14001469a:	int3   
   14001469b:	int3   
   14001469c:	int3   
   14001469d:	int3   
   14001469e:	int3   
   14001469f:	int3   
   1400146a0:	sub    rsp,0x28
   1400146a4:	mov    rax,QWORD PTR [rcx]
   1400146a7:	cmp    DWORD PTR [rax],0xe06d7363
   1400146ad:	jne    0x1400146d2
   1400146af:	cmp    DWORD PTR [rax+0x18],0x4
   1400146b3:	jne    0x1400146d2
   1400146b5:	mov    ecx,DWORD PTR [rax+0x20]
   1400146b8:	lea    eax,[rcx-0x19930520]
   1400146be:	cmp    eax,0x2
   1400146c1:	jbe    0x1400146cb
   1400146c3:	cmp    ecx,0x1994000
   1400146c9:	jne    0x1400146d2
   1400146cb:	call   QWORD PTR [rip+0x28e77]        # 0x14003d548
   1400146d1:	int3   
   1400146d2:	xor    eax,eax
   1400146d4:	add    rsp,0x28
   1400146d8:	ret    
   1400146d9:	int3   
   1400146da:	int3   
   1400146db:	int3   
   1400146dc:	int3   
   1400146dd:	int3   
   1400146de:	int3   
   1400146df:	int3   
   1400146e0:	sub    rsp,0x28
   1400146e4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400146a0
   1400146eb:	call   QWORD PTR [rip+0x28a67]        # 0x14003d158
   1400146f1:	xor    eax,eax
   1400146f3:	add    rsp,0x28
   1400146f7:	ret    
   1400146f8:	int3   
   1400146f9:	int3   
   1400146fa:	int3   
   1400146fb:	int3   
   1400146fc:	int3   
   1400146fd:	int3   
   1400146fe:	jmp    QWORD PTR [rip+0x28e54]        # 0x14003d558
   140014704:	int3   
   140014705:	int3   
   140014706:	int3   
   140014707:	int3   
   140014708:	int3   
   140014709:	int3   
   14001470a:	int3   
   14001470b:	int3   
   14001470c:	sub    rsp,0x18
   140014710:	xor    edx,edx
   140014712:	lea    rax,[rcx-0x1]
   140014716:	cmp    rax,0xfffffffffffffffd
   14001471a:	ja     0x140014758
   14001471c:	mov    eax,0x5a4d
   140014721:	cmp    WORD PTR [rcx],ax
   140014724:	jne    0x140014750
   140014726:	cmp    DWORD PTR [rcx+0x3c],edx
   140014729:	jl     0x140014750
   14001472b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140014732:	jae    0x140014750
   140014734:	movsxd rax,DWORD PTR [rcx+0x3c]
   140014738:	add    rax,rcx
   14001473b:	mov    QWORD PTR [rsp],rax
   14001473f:	cmp    DWORD PTR [rax],0x4550
   140014745:	cmovne rax,rdx
   140014749:	mov    rdx,rax
   14001474c:	mov    QWORD PTR [rsp],rax
   140014750:	jmp    0x140014758
   140014752:	xor    edx,edx
   140014754:	mov    QWORD PTR [rsp],rdx
   140014758:	mov    rax,rdx
   14001475b:	add    rsp,0x18
   14001475f:	ret    
   140014760:	int3   
   140014761:	int3   
   140014762:	int3   
   140014763:	int3   
   140014764:	int3   
   140014765:	int3   
   140014766:	int3   
   140014767:	int3   
   140014768:	rex push rbx
   14001476a:	sub    rsp,0x20
   14001476e:	mov    ebx,ecx
   140014770:	xor    ecx,ecx
   140014772:	call   QWORD PTR [rip+0x28ab8]        # 0x14003d230
   140014778:	test   rax,rax
   14001477b:	je     0x1400147a5
   14001477d:	mov    rcx,rax
   140014780:	call   0x14001470c
   140014785:	test   rax,rax
   140014788:	je     0x1400147a5
   14001478a:	mov    ecx,0x2
   14001478f:	cmp    WORD PTR [rax+0x5c],cx
   140014793:	jne    0x140014799
   140014795:	mov    eax,ecx
   140014797:	jmp    0x1400147a7
   140014799:	cmp    WORD PTR [rax+0x5c],0x3
   14001479e:	mov    eax,0x1
   1400147a3:	je     0x1400147a7
   1400147a5:	mov    eax,ebx
   1400147a7:	add    rsp,0x20
   1400147ab:	pop    rbx
   1400147ac:	ret    
   1400147ad:	int3   
   1400147ae:	int3   
   1400147af:	int3   
   1400147b0:	int3   
   1400147b1:	int3   
   1400147b2:	int3   
   1400147b3:	int3   
   1400147b4:	jmp    QWORD PTR [rip+0x28ece]        # 0x14003d688
   1400147ba:	int3   
   1400147bb:	int3   
   1400147bc:	int3   
   1400147bd:	int3   
   1400147be:	int3   
   1400147bf:	int3   
   1400147c0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400147c4:	xor    r9d,r9d
   1400147c7:	add    r8,rcx
   1400147ca:	mov    r10,rdx
   1400147cd:	movzx  eax,WORD PTR [r8+0x14]
   1400147d2:	movzx  r11d,WORD PTR [r8+0x6]
   1400147d7:	add    rax,0x18
   1400147db:	add    rax,r8
   1400147de:	test   r11d,r11d
   1400147e1:	je     0x140014801
   1400147e3:	mov    edx,DWORD PTR [rax+0xc]
   1400147e6:	cmp    r10,rdx
   1400147e9:	jb     0x1400147f5
   1400147eb:	mov    ecx,DWORD PTR [rax+0x8]
   1400147ee:	add    ecx,edx
   1400147f0:	cmp    r10,rcx
   1400147f3:	jb     0x140014803
   1400147f5:	inc    r9d
   1400147f8:	add    rax,0x28
   1400147fc:	cmp    r9d,r11d
   1400147ff:	jb     0x1400147e3
   140014801:	xor    eax,eax
   140014803:	ret    
   140014804:	int3   
   140014805:	int3   
   140014806:	int3   
   140014807:	int3   
   140014808:	int3   
   140014809:	int3   
   14001480a:	int3   
   14001480b:	int3   
   14001480c:	int3   
   14001480d:	int3   
   14001480e:	int3   
   14001480f:	int3   
   140014810:	mov    QWORD PTR [rsp+0x8],rbx
   140014815:	push   rdi
   140014816:	sub    rsp,0x20
   14001481a:	mov    rbx,rcx
   14001481d:	lea    rdi,[rip+0xfffffffffffeb7dc]        # 0x140000000
   140014824:	mov    rcx,rdi
   140014827:	call   0x140014870
   14001482c:	test   eax,eax
   14001482e:	je     0x140014852
   140014830:	sub    rbx,rdi
   140014833:	mov    rdx,rbx
   140014836:	mov    rcx,rdi
   140014839:	call   0x1400147c0
   14001483e:	test   rax,rax
   140014841:	je     0x140014852
   140014843:	mov    eax,DWORD PTR [rax+0x24]
   140014846:	shr    eax,0x1f
   140014849:	not    eax
   14001484b:	and    eax,0x1
   14001484e:	jmp    0x140014852
   140014850:	xor    eax,eax
   140014852:	mov    rbx,QWORD PTR [rsp+0x30]
   140014857:	add    rsp,0x20
   14001485b:	pop    rdi
   14001485c:	ret    
   14001485d:	int3   
   14001485e:	int3   
   14001485f:	int3   
   140014860:	int3   
   140014861:	int3   
   140014862:	int3   
   140014863:	int3   
   140014864:	int3   
   140014865:	int3   
   140014866:	int3   
   140014867:	int3   
   140014868:	int3   
   140014869:	int3   
   14001486a:	int3   
   14001486b:	int3   
   14001486c:	int3   
   14001486d:	int3   
   14001486e:	int3   
   14001486f:	int3   
   140014870:	mov    rax,rcx
   140014873:	mov    ecx,0x5a4d
   140014878:	cmp    WORD PTR [rax],cx
   14001487b:	je     0x140014880
   14001487d:	xor    eax,eax
   14001487f:	ret    
   140014880:	movsxd rcx,DWORD PTR [rax+0x3c]
   140014884:	add    rcx,rax
   140014887:	xor    eax,eax
   140014889:	cmp    DWORD PTR [rcx],0x4550
   14001488f:	jne    0x14001489d
   140014891:	mov    edx,0x20b
   140014896:	cmp    WORD PTR [rcx+0x18],dx
   14001489a:	sete   al
   14001489d:	ret    
   14001489e:	int3   
   14001489f:	int3   
   1400148a0:	int3   
   1400148a1:	int3   
   1400148a2:	int3   
   1400148a3:	int3   
   1400148a4:	mov    QWORD PTR [rsp+0x20],rbx
   1400148a9:	push   rbp
   1400148aa:	mov    rbp,rsp
   1400148ad:	sub    rsp,0x20
   1400148b1:	and    QWORD PTR [rbp+0x18],0x0
   1400148b6:	movabs rbx,0x2b992ddfa232
   1400148c0:	mov    rax,QWORD PTR [rip+0x39749]        # 0x14004e010
   1400148c7:	cmp    rax,rbx
   1400148ca:	jne    0x14001495f
   1400148d0:	lea    rcx,[rbp+0x18]
   1400148d4:	call   QWORD PTR [rip+0x28b36]        # 0x14003d410
   1400148da:	mov    rax,QWORD PTR [rbp+0x18]
   1400148de:	mov    QWORD PTR [rbp+0x10],rax
   1400148e2:	call   QWORD PTR [rip+0x289e0]        # 0x14003d2c8
   1400148e8:	mov    eax,eax
   1400148ea:	xor    QWORD PTR [rbp+0x10],rax
   1400148ee:	call   QWORD PTR [rip+0x28a04]        # 0x14003d2f8
   1400148f4:	mov    eax,eax
   1400148f6:	xor    QWORD PTR [rbp+0x10],rax
   1400148fa:	call   QWORD PTR [rip+0x28b18]        # 0x14003d418
   140014900:	mov    eax,eax
   140014902:	shl    rax,0x18
   140014906:	xor    QWORD PTR [rbp+0x10],rax
   14001490a:	call   QWORD PTR [rip+0x28b08]        # 0x14003d418
   140014910:	mov    eax,eax
   140014912:	lea    rcx,[rbp+0x10]
   140014916:	xor    rax,QWORD PTR [rbp+0x10]
   14001491a:	xor    rax,rcx
   14001491d:	lea    rcx,[rbp+0x20]
   140014921:	mov    QWORD PTR [rbp+0x10],rax
   140014925:	call   QWORD PTR [rip+0x289e5]        # 0x14003d310
   14001492b:	mov    eax,DWORD PTR [rbp+0x20]
   14001492e:	movabs rcx,0xffffffffffff
   140014938:	shl    rax,0x20
   14001493c:	xor    rax,QWORD PTR [rbp+0x20]
   140014940:	xor    rax,QWORD PTR [rbp+0x10]
   140014944:	and    rax,rcx
   140014947:	movabs rcx,0x2b992ddfa233
   140014951:	cmp    rax,rbx
   140014954:	cmove  rax,rcx
   140014958:	mov    QWORD PTR [rip+0x396b1],rax        # 0x14004e010
   14001495f:	mov    rbx,QWORD PTR [rsp+0x48]
   140014964:	not    rax
   140014967:	mov    QWORD PTR [rip+0x396aa],rax        # 0x14004e018
   14001496e:	add    rsp,0x20
   140014972:	pop    rbp
   140014973:	ret    
   140014974:	int3   
   140014975:	int3   
   140014976:	int3   
   140014977:	int3   
   140014978:	int3   
   140014979:	int3   
   14001497a:	int3   
   14001497b:	int3   
   14001497c:	int3   
   14001497d:	int3   
   14001497e:	int3   
   14001497f:	int3   
   140014980:	xor    eax,eax
   140014982:	ret    
   140014983:	int3   
   140014984:	int3   
   140014985:	int3   
   140014986:	int3   
   140014987:	int3   
   140014988:	int3   
   140014989:	int3   
   14001498a:	jmp    QWORD PTR [rip+0x28c00]        # 0x14003d590
   140014990:	int3   
   140014991:	int3   
   140014992:	int3   
   140014993:	int3   
   140014994:	int3   
   140014995:	int3   
   140014996:	jmp    QWORD PTR [rip+0x28bd4]        # 0x14003d570
   14001499c:	int3   
   14001499d:	int3   
   14001499e:	int3   
   14001499f:	int3   
   1400149a0:	int3   
   1400149a1:	int3   
   1400149a2:	jmp    QWORD PTR [rip+0x28b88]        # 0x14003d530
   1400149a8:	int3   
   1400149a9:	int3   
   1400149aa:	int3   
   1400149ab:	int3   
   1400149ac:	int3   
   1400149ad:	int3   
   1400149ae:	jmp    QWORD PTR [rip+0x28b74]        # 0x14003d528
   1400149b4:	int3   
   1400149b5:	int3   
   1400149b6:	int3   
   1400149b7:	int3   
   1400149b8:	int3   
   1400149b9:	int3   
   1400149ba:	jmp    QWORD PTR [rip+0x28b60]        # 0x14003d520
   1400149c0:	int3   
   1400149c1:	int3   
   1400149c2:	int3   
   1400149c3:	int3   
   1400149c4:	int3   
   1400149c5:	int3   
   1400149c6:	jmp    QWORD PTR [rip+0x28cdc]        # 0x14003d6a8
   1400149cc:	int3   
   1400149cd:	int3   
   1400149ce:	int3   
   1400149cf:	int3   
   1400149d0:	int3   
   1400149d1:	int3   
   1400149d2:	int3   
   1400149d3:	int3   
   1400149d4:	jmp    0x1400149e0
   1400149d9:	int3   
   1400149da:	int3   
   1400149db:	int3   
   1400149dc:	int3   
   1400149dd:	int3   
   1400149de:	int3   
   1400149df:	int3   
   1400149e0:	rex push rbx
   1400149e2:	sub    rsp,0x540
   1400149e9:	mov    rax,QWORD PTR [rip+0x39620]        # 0x14004e010
   1400149f0:	xor    rax,rsp
   1400149f3:	mov    QWORD PTR [rsp+0x530],rax
   1400149fb:	lea    rcx,[rsp+0x60]
   140014a00:	call   QWORD PTR [rip+0x28cd2]        # 0x14003d6d8
   140014a06:	mov    rbx,QWORD PTR [rsp+0x158]
   140014a0e:	lea    rdx,[rsp+0x40]
   140014a13:	mov    rcx,rbx
   140014a16:	xor    r8d,r8d
   140014a19:	call   QWORD PTR [rip+0x28cb1]        # 0x14003d6d0
   140014a1f:	test   rax,rax
   140014a22:	je     0x140014a5d
   140014a24:	and    QWORD PTR [rsp+0x38],0x0
   140014a2a:	lea    rcx,[rsp+0x48]
   140014a2f:	mov    rdx,QWORD PTR [rsp+0x40]
   140014a34:	mov    r9,rax
   140014a37:	mov    QWORD PTR [rsp+0x30],rcx
   140014a3c:	mov    r8,rbx
   140014a3f:	lea    rcx,[rsp+0x50]
   140014a44:	mov    QWORD PTR [rsp+0x28],rcx
   140014a49:	lea    rcx,[rsp+0x60]
   140014a4e:	mov    QWORD PTR [rsp+0x20],rcx
   140014a53:	xor    ecx,ecx
   140014a55:	call   QWORD PTR [rip+0x28c6d]        # 0x14003d6c8
   140014a5b:	jmp    0x140014a7d
   140014a5d:	mov    rax,QWORD PTR [rsp+0x548]
   140014a65:	mov    QWORD PTR [rsp+0x158],rax
   140014a6d:	lea    rax,[rsp+0x548]
   140014a75:	mov    QWORD PTR [rsp+0xf8],rax
   140014a7d:	lea    rcx,[rip+0x2afac]        # 0x14003fa30
   140014a84:	call   QWORD PTR [rip+0x2869e]        # 0x14003d128
   140014a8a:	mov    rcx,QWORD PTR [rsp+0x530]
   140014a92:	xor    rcx,rsp
   140014a95:	call   0x1400141d0
   140014a9a:	add    rsp,0x540
   140014aa1:	pop    rbx
   140014aa2:	ret    
   140014aa3:	int3   
   140014aa4:	int3   
   140014aa5:	int3   
   140014aa6:	int3   
   140014aa7:	int3   
   140014aa8:	int3   
   140014aa9:	int3   
   140014aaa:	jmp    QWORD PTR [rip+0x28a88]        # 0x14003d538
   140014ab0:	int3   
   140014ab1:	int3   
   140014ab2:	int3   
   140014ab3:	int3   
   140014ab4:	int3   
   140014ab5:	int3   
   140014ab6:	int3   
   140014ab7:	int3   
   140014ab8:	sub    rsp,0x28
   140014abc:	mov    r8,QWORD PTR [r9+0x38]
   140014ac0:	mov    rcx,rdx
   140014ac3:	mov    rdx,r9
   140014ac6:	call   0x140014adc
   140014acb:	mov    eax,0x1
   140014ad0:	add    rsp,0x28
   140014ad4:	ret    
   140014ad5:	int3   
   140014ad6:	int3   
   140014ad7:	int3   
   140014ad8:	int3   
   140014ad9:	int3   
   140014ada:	int3   
   140014adb:	int3   
   140014adc:	rex push rbx
   140014ade:	sub    rsp,0x20
   140014ae2:	mov    r11d,DWORD PTR [r8]
   140014ae5:	mov    rbx,rdx
   140014ae8:	and    r11d,0xfffffff8
   140014aec:	mov    r9,rcx
   140014aef:	test   BYTE PTR [r8],0x4
   140014af3:	mov    r10,rcx
   140014af6:	je     0x140014b0b
   140014af8:	mov    eax,DWORD PTR [r8+0x8]
   140014afc:	movsxd r10,DWORD PTR [r8+0x4]
   140014b00:	neg    eax
   140014b02:	add    r10,rcx
   140014b05:	movsxd rcx,eax
   140014b08:	and    r10,rcx
   140014b0b:	movsxd rax,r11d
   140014b0e:	mov    rdx,QWORD PTR [rax+r10*1]
   140014b12:	mov    rax,QWORD PTR [rbx+0x10]
   140014b16:	mov    ecx,DWORD PTR [rax+0x8]
   140014b19:	add    rcx,QWORD PTR [rbx+0x8]
   140014b1d:	test   BYTE PTR [rcx+0x3],0xf
   140014b21:	je     0x140014b2f
   140014b23:	movzx  eax,BYTE PTR [rcx+0x3]
   140014b27:	and    eax,0xfffffff0
   140014b2a:	cdqe   
   140014b2c:	add    r9,rax
   140014b2f:	xor    r9,rdx
   140014b32:	mov    rcx,r9
   140014b35:	add    rsp,0x20
   140014b39:	pop    rbx
   140014b3a:	jmp    0x1400141d0
   140014b3f:	int3   
   140014b40:	int3   
   140014b41:	int3   
   140014b42:	int3   
   140014b43:	int3   
   140014b44:	int3   
   140014b45:	int3   
   140014b46:	int3   
   140014b47:	int3   
   140014b48:	int3   
   140014b49:	int3   
   140014b4a:	int3   
   140014b4b:	int3   
   140014b4c:	int3   
   140014b4d:	int3   
   140014b4e:	int3   
   140014b4f:	int3   
   140014b50:	lea    rax,[rip+0x3e569]        # 0x1400530c0
   140014b57:	jmp    0x140014b70
   140014b5c:	int3   
   140014b5d:	int3   
   140014b5e:	int3   
   140014b5f:	int3   
   140014b60:	int3   
   140014b61:	int3   
   140014b62:	int3   
   140014b63:	int3   
   140014b64:	int3   
   140014b65:	int3   
   140014b66:	int3   
   140014b67:	int3   
   140014b68:	int3   
   140014b69:	int3   
   140014b6a:	int3   
   140014b6b:	int3   
   140014b6c:	int3   
   140014b6d:	int3   
   140014b6e:	int3   
   140014b6f:	int3   
   140014b70:	mov    QWORD PTR [rsp+0x8],rcx
   140014b75:	mov    QWORD PTR [rsp+0x10],rdx
   140014b7a:	mov    QWORD PTR [rsp+0x18],r8
   140014b7f:	mov    QWORD PTR [rsp+0x20],r9
   140014b84:	sub    rsp,0x68
   140014b88:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140014b8e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140014b94:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140014b9a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140014ba0:	mov    rdx,rax
   140014ba3:	lea    rcx,[rip+0x36d3e]        # 0x14004b8e8
   140014baa:	call   0x14000f3d0
   140014baf:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140014bb5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140014bbb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140014bc1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140014bc7:	mov    rcx,QWORD PTR [rsp+0x70]
   140014bcc:	mov    rdx,QWORD PTR [rsp+0x78]
   140014bd1:	mov    r8,QWORD PTR [rsp+0x80]
   140014bd9:	mov    r9,QWORD PTR [rsp+0x88]
   140014be1:	add    rsp,0x68
   140014be5:	jmp    0x140014be7
   140014be7:	jmp    rax
   140014be9:	int3   
   140014bea:	int3   
   140014beb:	int3   
   140014bec:	int3   
   140014bed:	int3   
   140014bee:	int3   
   140014bef:	int3   
   140014bf0:	lea    rax,[rip+0x3e419]        # 0x140053010
   140014bf7:	jmp    0x140014b70
   140014bfc:	int3   
   140014bfd:	int3   
   140014bfe:	int3   
   140014bff:	int3   
   140014c00:	int3   
   140014c01:	int3   
   140014c02:	int3   
   140014c03:	int3   
   140014c04:	int3   
   140014c05:	int3   
   140014c06:	int3   
   140014c07:	int3   
   140014c08:	int3   
   140014c09:	int3   
   140014c0a:	int3   
   140014c0b:	int3   
   140014c0c:	int3   
   140014c0d:	int3   
   140014c0e:	int3   
   140014c0f:	int3   
   140014c10:	lea    rax,[rip+0x3e501]        # 0x140053118
   140014c17:	jmp    0x140014c30
   140014c1c:	int3   
   140014c1d:	int3   
   140014c1e:	int3   
   140014c1f:	int3   
   140014c20:	int3   
   140014c21:	int3   
   140014c22:	int3   
   140014c23:	int3   
   140014c24:	int3   
   140014c25:	int3   
   140014c26:	int3   
   140014c27:	int3   
   140014c28:	int3   
   140014c29:	int3   
   140014c2a:	int3   
   140014c2b:	int3   
   140014c2c:	int3   
   140014c2d:	int3   
   140014c2e:	int3   
   140014c2f:	int3   
   140014c30:	mov    QWORD PTR [rsp+0x8],rcx
   140014c35:	mov    QWORD PTR [rsp+0x10],rdx
   140014c3a:	mov    QWORD PTR [rsp+0x18],r8
   140014c3f:	mov    QWORD PTR [rsp+0x20],r9
   140014c44:	sub    rsp,0x68
   140014c48:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140014c4e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140014c54:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140014c5a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140014c60:	mov    rdx,rax
   140014c63:	lea    rcx,[rip+0x36c9e]        # 0x14004b908
   140014c6a:	call   0x14000f3d0
   140014c6f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140014c75:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140014c7b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140014c81:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140014c87:	mov    rcx,QWORD PTR [rsp+0x70]
   140014c8c:	mov    rdx,QWORD PTR [rsp+0x78]
   140014c91:	mov    r8,QWORD PTR [rsp+0x80]
   140014c99:	mov    r9,QWORD PTR [rsp+0x88]
   140014ca1:	add    rsp,0x68
   140014ca5:	jmp    0x140014ca7
   140014ca7:	jmp    rax
   140014ca9:	int3   
   140014caa:	int3   
   140014cab:	int3   
   140014cac:	int3   
   140014cad:	int3   
   140014cae:	int3   
   140014caf:	int3   
   140014cb0:	lea    rax,[rip+0x3e449]        # 0x140053100
   140014cb7:	jmp    0x140014c30
   140014cbc:	int3   
   140014cbd:	int3   
   140014cbe:	int3   
   140014cbf:	int3   
   140014cc0:	int3   
   140014cc1:	int3   
   140014cc2:	int3   
   140014cc3:	int3   
   140014cc4:	int3   
   140014cc5:	int3   
   140014cc6:	int3   
   140014cc7:	int3   
   140014cc8:	int3   
   140014cc9:	int3   
   140014cca:	int3   
   140014ccb:	int3   
   140014ccc:	int3   
   140014ccd:	int3   
   140014cce:	int3   
   140014ccf:	int3   
   140014cd0:	lea    rax,[rip+0x3e421]        # 0x1400530f8
   140014cd7:	jmp    0x140014c30
   140014cdc:	int3   
   140014cdd:	int3   
   140014cde:	int3   
   140014cdf:	int3   
   140014ce0:	int3   
   140014ce1:	int3   
   140014ce2:	int3   
   140014ce3:	int3   
   140014ce4:	int3   
   140014ce5:	int3   
   140014ce6:	int3   
   140014ce7:	int3   
   140014ce8:	int3   
   140014ce9:	int3   
   140014cea:	int3   
   140014ceb:	int3   
   140014cec:	int3   
   140014ced:	int3   
   140014cee:	int3   
   140014cef:	int3   
   140014cf0:	lea    rax,[rip+0x3e3f9]        # 0x1400530f0
   140014cf7:	jmp    0x140014c30
   140014cfc:	int3   
   140014cfd:	int3   
   140014cfe:	int3   
   140014cff:	int3   
   140014d00:	int3   
   140014d01:	int3   
   140014d02:	int3   
   140014d03:	int3   
   140014d04:	int3   
   140014d05:	int3   
   140014d06:	int3   
   140014d07:	int3   
   140014d08:	int3   
   140014d09:	int3   
   140014d0a:	int3   
   140014d0b:	int3   
   140014d0c:	int3   
   140014d0d:	int3   
   140014d0e:	int3   
   140014d0f:	int3   
   140014d10:	lea    rax,[rip+0x3e3d1]        # 0x1400530e8
   140014d17:	jmp    0x140014c30
   140014d1c:	int3   
   140014d1d:	int3   
   140014d1e:	int3   
   140014d1f:	int3   
   140014d20:	int3   
   140014d21:	int3   
   140014d22:	int3   
   140014d23:	int3   
   140014d24:	int3   
   140014d25:	int3   
   140014d26:	int3   
   140014d27:	int3   
   140014d28:	int3   
   140014d29:	int3   
   140014d2a:	int3   
   140014d2b:	int3   
   140014d2c:	int3   
   140014d2d:	int3   
   140014d2e:	int3   
   140014d2f:	int3   
   140014d30:	lea    rax,[rip+0x3e3a9]        # 0x1400530e0
   140014d37:	jmp    0x140014c30
   140014d3c:	int3   
   140014d3d:	int3   
   140014d3e:	int3   
   140014d3f:	int3   
   140014d40:	int3   
   140014d41:	int3   
   140014d42:	int3   
   140014d43:	int3   
   140014d44:	int3   
   140014d45:	int3   
   140014d46:	int3   
   140014d47:	int3   
   140014d48:	int3   
   140014d49:	int3   
   140014d4a:	int3   
   140014d4b:	int3   
   140014d4c:	int3   
   140014d4d:	int3   
   140014d4e:	int3   
   140014d4f:	int3   
   140014d50:	lea    rax,[rip+0x3e381]        # 0x1400530d8
   140014d57:	jmp    0x140014c30
   140014d5c:	int3   
   140014d5d:	int3   
   140014d5e:	int3   
   140014d5f:	int3   
   140014d60:	int3   
   140014d61:	int3   
   140014d62:	int3   
   140014d63:	int3   
   140014d64:	int3   
   140014d65:	int3   
   140014d66:	int3   
   140014d67:	int3   
   140014d68:	int3   
   140014d69:	int3   
   140014d6a:	int3   
   140014d6b:	int3   
   140014d6c:	int3   
   140014d6d:	int3   
   140014d6e:	int3   
   140014d6f:	int3   
   140014d70:	lea    rax,[rip+0x3e359]        # 0x1400530d0
   140014d77:	jmp    0x140014c30
   140014d7c:	int3   
   140014d7d:	int3   
   140014d7e:	int3   
   140014d7f:	int3   
   140014d80:	int3   
   140014d81:	int3   
   140014d82:	int3   
   140014d83:	int3   
   140014d84:	int3   
   140014d85:	int3   
   140014d86:	int3   
   140014d87:	int3   
   140014d88:	int3   
   140014d89:	int3   
   140014d8a:	int3   
   140014d8b:	int3   
   140014d8c:	int3   
   140014d8d:	int3   
   140014d8e:	int3   
   140014d8f:	int3   
   140014d90:	lea    rax,[rip+0x3e2c1]        # 0x140053058
   140014d97:	jmp    0x140014b70
   140014d9c:	int3   
   140014d9d:	int3   
   140014d9e:	int3   
   140014d9f:	int3   
   140014da0:	int3   
   140014da1:	int3   
   140014da2:	int3   
   140014da3:	int3   
   140014da4:	int3   
   140014da5:	int3   
   140014da6:	int3   
   140014da7:	int3   
   140014da8:	int3   
   140014da9:	int3   
   140014daa:	int3   
   140014dab:	int3   
   140014dac:	int3   
   140014dad:	int3   
   140014dae:	int3   
   140014daf:	int3   
   140014db0:	lea    rax,[rip+0x3e2a9]        # 0x140053060
   140014db7:	jmp    0x140014b70
   140014dbc:	int3   
   140014dbd:	int3   
   140014dbe:	int3   
   140014dbf:	int3   
   140014dc0:	int3   
   140014dc1:	int3   
   140014dc2:	int3   
   140014dc3:	int3   
   140014dc4:	int3   
   140014dc5:	int3   
   140014dc6:	int3   
   140014dc7:	int3   
   140014dc8:	int3   
   140014dc9:	int3   
   140014dca:	int3   
   140014dcb:	int3   
   140014dcc:	int3   
   140014dcd:	int3   
   140014dce:	int3   
   140014dcf:	int3   
   140014dd0:	lea    rax,[rip+0x3e291]        # 0x140053068
   140014dd7:	jmp    0x140014b70
   140014ddc:	int3   
   140014ddd:	int3   
   140014dde:	int3   
   140014ddf:	int3   
   140014de0:	int3   
   140014de1:	int3   
   140014de2:	int3   
   140014de3:	int3   
   140014de4:	int3   
   140014de5:	int3   
   140014de6:	int3   
   140014de7:	int3   
   140014de8:	int3   
   140014de9:	int3   
   140014dea:	int3   
   140014deb:	int3   
   140014dec:	int3   
   140014ded:	int3   
   140014dee:	int3   
   140014def:	int3   
   140014df0:	lea    rax,[rip+0x3e279]        # 0x140053070
   140014df7:	jmp    0x140014b70
   140014dfc:	int3   
   140014dfd:	int3   
   140014dfe:	int3   
   140014dff:	int3   
   140014e00:	int3   
   140014e01:	int3   
   140014e02:	int3   
   140014e03:	int3   
   140014e04:	int3   
   140014e05:	int3   
   140014e06:	int3   
   140014e07:	int3   
   140014e08:	int3   
   140014e09:	int3   
   140014e0a:	int3   
   140014e0b:	int3   
   140014e0c:	int3   
   140014e0d:	int3   
   140014e0e:	int3   
   140014e0f:	int3   
   140014e10:	lea    rax,[rip+0x3e261]        # 0x140053078
   140014e17:	jmp    0x140014b70
   140014e1c:	int3   
   140014e1d:	int3   
   140014e1e:	int3   
   140014e1f:	int3   
   140014e20:	int3   
   140014e21:	int3   
   140014e22:	int3   
   140014e23:	int3   
   140014e24:	int3   
   140014e25:	int3   
   140014e26:	int3   
   140014e27:	int3   
   140014e28:	int3   
   140014e29:	int3   
   140014e2a:	int3   
   140014e2b:	int3   
   140014e2c:	int3   
   140014e2d:	int3   
   140014e2e:	int3   
   140014e2f:	int3   
   140014e30:	lea    rax,[rip+0x3e249]        # 0x140053080
   140014e37:	jmp    0x140014b70
   140014e3c:	int3   
   140014e3d:	int3   
   140014e3e:	int3   
   140014e3f:	int3   
   140014e40:	int3   
   140014e41:	int3   
   140014e42:	int3   
   140014e43:	int3   
   140014e44:	int3   
   140014e45:	int3   
   140014e46:	int3   
   140014e47:	int3   
   140014e48:	int3   
   140014e49:	int3   
   140014e4a:	int3   
   140014e4b:	int3   
   140014e4c:	int3   
   140014e4d:	int3   
   140014e4e:	int3   
   140014e4f:	int3   
   140014e50:	lea    rax,[rip+0x3e231]        # 0x140053088
   140014e57:	jmp    0x140014b70
   140014e5c:	int3   
   140014e5d:	int3   
   140014e5e:	int3   
   140014e5f:	int3   
   140014e60:	int3   
   140014e61:	int3   
   140014e62:	int3   
   140014e63:	int3   
   140014e64:	int3   
   140014e65:	int3   
   140014e66:	int3   
   140014e67:	int3   
   140014e68:	int3   
   140014e69:	int3   
   140014e6a:	int3   
   140014e6b:	int3   
   140014e6c:	int3   
   140014e6d:	int3   
   140014e6e:	int3   
   140014e6f:	int3   
   140014e70:	lea    rax,[rip+0x3e219]        # 0x140053090
   140014e77:	jmp    0x140014b70
   140014e7c:	int3   
   140014e7d:	int3   
   140014e7e:	int3   
   140014e7f:	int3   
   140014e80:	int3   
   140014e81:	int3   
   140014e82:	int3   
   140014e83:	int3   
   140014e84:	int3   
   140014e85:	int3   
   140014e86:	int3   
   140014e87:	int3   
   140014e88:	int3   
   140014e89:	int3   
   140014e8a:	int3   
   140014e8b:	int3   
   140014e8c:	int3   
   140014e8d:	int3   
   140014e8e:	int3   
   140014e8f:	int3   
   140014e90:	lea    rax,[rip+0x3e201]        # 0x140053098
   140014e97:	jmp    0x140014b70
   140014e9c:	int3   
   140014e9d:	int3   
   140014e9e:	int3   
   140014e9f:	int3   
   140014ea0:	int3   
   140014ea1:	int3   
   140014ea2:	int3   
   140014ea3:	int3   
   140014ea4:	int3   
   140014ea5:	int3   
   140014ea6:	int3   
   140014ea7:	int3   
   140014ea8:	int3   
   140014ea9:	int3   
   140014eaa:	int3   
   140014eab:	int3   
   140014eac:	int3   
   140014ead:	int3   
   140014eae:	int3   
   140014eaf:	int3   
   140014eb0:	lea    rax,[rip+0x3e1e9]        # 0x1400530a0
   140014eb7:	jmp    0x140014b70
   140014ebc:	int3   
   140014ebd:	int3   
   140014ebe:	int3   
   140014ebf:	int3   
   140014ec0:	int3   
   140014ec1:	int3   
   140014ec2:	int3   
   140014ec3:	int3   
   140014ec4:	int3   
   140014ec5:	int3   
   140014ec6:	int3   
   140014ec7:	int3   
   140014ec8:	int3   
   140014ec9:	int3   
   140014eca:	int3   
   140014ecb:	int3   
   140014ecc:	int3   
   140014ecd:	int3   
   140014ece:	int3   
   140014ecf:	int3   
   140014ed0:	lea    rax,[rip+0x3e1d1]        # 0x1400530a8
   140014ed7:	jmp    0x140014b70
   140014edc:	int3   
   140014edd:	int3   
   140014ede:	int3   
   140014edf:	int3   
   140014ee0:	int3   
   140014ee1:	int3   
   140014ee2:	int3   
   140014ee3:	int3   
   140014ee4:	int3   
   140014ee5:	int3   
   140014ee6:	int3   
   140014ee7:	int3   
   140014ee8:	int3   
   140014ee9:	int3   
   140014eea:	int3   
   140014eeb:	int3   
   140014eec:	int3   
   140014eed:	int3   
   140014eee:	int3   
   140014eef:	int3   
   140014ef0:	lea    rax,[rip+0x3e229]        # 0x140053120
   140014ef7:	jmp    0x140014c30
   140014efc:	int3   
   140014efd:	int3   
   140014efe:	int3   
   140014eff:	int3   
   140014f00:	int3   
   140014f01:	int3   
   140014f02:	int3   
   140014f03:	int3   
   140014f04:	int3   
   140014f05:	int3   
   140014f06:	int3   
   140014f07:	int3   
   140014f08:	int3   
   140014f09:	int3   
   140014f0a:	int3   
   140014f0b:	int3   
   140014f0c:	int3   
   140014f0d:	int3   
   140014f0e:	int3   
   140014f0f:	int3   
   140014f10:	lea    rax,[rip+0x3e1a1]        # 0x1400530b8
   140014f17:	jmp    0x140014b70
   140014f1c:	int3   
   140014f1d:	int3   
   140014f1e:	int3   
   140014f1f:	int3   
   140014f20:	int3   
   140014f21:	int3   
   140014f22:	int3   
   140014f23:	int3   
   140014f24:	int3   
   140014f25:	int3   
   140014f26:	int3   
   140014f27:	int3   
   140014f28:	int3   
   140014f29:	int3   
   140014f2a:	int3   
   140014f2b:	int3   
   140014f2c:	int3   
   140014f2d:	int3   
   140014f2e:	int3   
   140014f2f:	int3   
   140014f30:	lea    rax,[rip+0x3e179]        # 0x1400530b0
   140014f37:	jmp    0x140014b70
   140014f3c:	int3   
   140014f3d:	int3   
   140014f3e:	int3   
   140014f3f:	int3   
   140014f40:	int3   
   140014f41:	int3   
   140014f42:	int3   
   140014f43:	int3   
   140014f44:	int3   
   140014f45:	int3   
   140014f46:	int3   
   140014f47:	int3   
   140014f48:	int3   
   140014f49:	int3   
   140014f4a:	int3   
   140014f4b:	int3   
   140014f4c:	int3   
   140014f4d:	int3   
   140014f4e:	int3   
   140014f4f:	int3   
   140014f50:	lea    rax,[rip+0x3e0f9]        # 0x140053050
   140014f57:	jmp    0x140014b70
   140014f5c:	int3   
   140014f5d:	int3   
   140014f5e:	int3   
   140014f5f:	int3   
   140014f60:	int3   
   140014f61:	int3   
   140014f62:	int3   
   140014f63:	int3   
   140014f64:	int3   
   140014f65:	int3   
   140014f66:	int3   
   140014f67:	int3   
   140014f68:	int3   
   140014f69:	int3   
   140014f6a:	int3   
   140014f6b:	int3   
   140014f6c:	int3   
   140014f6d:	int3   
   140014f6e:	int3   
   140014f6f:	int3   
   140014f70:	lea    rax,[rip+0x3e0d1]        # 0x140053048
   140014f77:	jmp    0x140014b70
   140014f7c:	int3   
   140014f7d:	int3   
   140014f7e:	int3   
   140014f7f:	int3   
   140014f80:	int3   
   140014f81:	int3   
   140014f82:	int3   
   140014f83:	int3   
   140014f84:	int3   
   140014f85:	int3   
   140014f86:	int3   
   140014f87:	int3   
   140014f88:	int3   
   140014f89:	int3   
   140014f8a:	int3   
   140014f8b:	int3   
   140014f8c:	int3   
   140014f8d:	int3   
   140014f8e:	int3   
   140014f8f:	int3   
   140014f90:	lea    rax,[rip+0x3e0a9]        # 0x140053040
   140014f97:	jmp    0x140014b70
   140014f9c:	int3   
   140014f9d:	int3   
   140014f9e:	int3   
   140014f9f:	int3   
   140014fa0:	int3   
   140014fa1:	int3   
   140014fa2:	int3   
   140014fa3:	int3   
   140014fa4:	int3   
   140014fa5:	int3   
   140014fa6:	int3   
   140014fa7:	int3   
   140014fa8:	int3   
   140014fa9:	int3   
   140014faa:	int3   
   140014fab:	int3   
   140014fac:	int3   
   140014fad:	int3   
   140014fae:	int3   
   140014faf:	int3   
   140014fb0:	lea    rax,[rip+0x3e081]        # 0x140053038
   140014fb7:	jmp    0x140014b70
   140014fbc:	int3   
   140014fbd:	int3   
   140014fbe:	int3   
   140014fbf:	int3   
   140014fc0:	int3   
   140014fc1:	int3   
   140014fc2:	int3   
   140014fc3:	int3   
   140014fc4:	int3   
   140014fc5:	int3   
   140014fc6:	int3   
   140014fc7:	int3   
   140014fc8:	int3   
   140014fc9:	int3   
   140014fca:	int3   
   140014fcb:	int3   
   140014fcc:	int3   
   140014fcd:	int3   
   140014fce:	int3   
   140014fcf:	int3   
   140014fd0:	lea    rax,[rip+0x3e059]        # 0x140053030
   140014fd7:	jmp    0x140014b70
   140014fdc:	int3   
   140014fdd:	int3   
   140014fde:	int3   
   140014fdf:	int3   
   140014fe0:	int3   
   140014fe1:	int3   
   140014fe2:	int3   
   140014fe3:	int3   
   140014fe4:	int3   
   140014fe5:	int3   
   140014fe6:	int3   
   140014fe7:	int3   
   140014fe8:	int3   
   140014fe9:	int3   
   140014fea:	int3   
   140014feb:	int3   
   140014fec:	int3   
   140014fed:	int3   
   140014fee:	int3   
   140014fef:	int3   
   140014ff0:	lea    rax,[rip+0x3e031]        # 0x140053028
   140014ff7:	jmp    0x140014b70
   140014ffc:	int3   
   140014ffd:	int3   
   140014ffe:	int3   
   140014fff:	int3   
   140015000:	int3   
   140015001:	int3   
   140015002:	int3   
   140015003:	int3   
   140015004:	int3   
   140015005:	int3   
   140015006:	int3   
   140015007:	int3   
   140015008:	int3   
   140015009:	int3   
   14001500a:	int3   
   14001500b:	int3   
   14001500c:	int3   
   14001500d:	int3   
   14001500e:	int3   
   14001500f:	int3   
   140015010:	lea    rax,[rip+0x3e009]        # 0x140053020
   140015017:	jmp    0x140014b70
   14001501c:	int3   
   14001501d:	int3   
   14001501e:	int3   
   14001501f:	int3   
   140015020:	int3   
   140015021:	int3   
   140015022:	int3   
   140015023:	int3   
   140015024:	int3   
   140015025:	int3   
   140015026:	int3   
   140015027:	int3   
   140015028:	int3   
   140015029:	int3   
   14001502a:	int3   
   14001502b:	int3   
   14001502c:	int3   
   14001502d:	int3   
   14001502e:	int3   
   14001502f:	int3   
   140015030:	lea    rax,[rip+0x3dfe1]        # 0x140053018
   140015037:	jmp    0x140014b70
   14001503c:	int3   
   14001503d:	int3   
   14001503e:	int3   
   14001503f:	int3   
   140015040:	int3   
   140015041:	int3   
   140015042:	int3   
   140015043:	int3   
   140015044:	int3   
   140015045:	int3   
   140015046:	int3   
   140015047:	int3   
   140015048:	int3   
   140015049:	int3   
   14001504a:	int3   
   14001504b:	int3   
   14001504c:	int3   
   14001504d:	int3   
   14001504e:	int3   
   14001504f:	int3   
   140015050:	lea    rax,[rip+0x3e109]        # 0x140053160
   140015057:	jmp    0x140015070
   14001505c:	int3   
   14001505d:	int3   
   14001505e:	int3   
   14001505f:	int3   
   140015060:	int3   
   140015061:	int3   
   140015062:	int3   
   140015063:	int3   
   140015064:	int3   
   140015065:	int3   
   140015066:	int3   
   140015067:	int3   
   140015068:	int3   
   140015069:	int3   
   14001506a:	int3   
   14001506b:	int3   
   14001506c:	int3   
   14001506d:	int3   
   14001506e:	int3   
   14001506f:	int3   
   140015070:	mov    QWORD PTR [rsp+0x8],rcx
   140015075:	mov    QWORD PTR [rsp+0x10],rdx
   14001507a:	mov    QWORD PTR [rsp+0x18],r8
   14001507f:	mov    QWORD PTR [rsp+0x20],r9
   140015084:	sub    rsp,0x68
   140015088:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001508e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140015094:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14001509a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1400150a0:	mov    rdx,rax
   1400150a3:	lea    rcx,[rip+0x3687e]        # 0x14004b928
   1400150aa:	call   0x14000f3d0
   1400150af:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400150b5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400150bb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400150c1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400150c7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400150cc:	mov    rdx,QWORD PTR [rsp+0x78]
   1400150d1:	mov    r8,QWORD PTR [rsp+0x80]
   1400150d9:	mov    r9,QWORD PTR [rsp+0x88]
   1400150e1:	add    rsp,0x68
   1400150e5:	jmp    0x1400150e7
   1400150e7:	jmp    rax
   1400150e9:	int3   
   1400150ea:	int3   
   1400150eb:	int3   
   1400150ec:	int3   
   1400150ed:	int3   
   1400150ee:	int3   
   1400150ef:	int3   
   1400150f0:	lea    rax,[rip+0x3df09]        # 0x140053000
   1400150f7:	jmp    0x140015110
   1400150fc:	int3   
   1400150fd:	int3   
   1400150fe:	int3   
   1400150ff:	int3   
   140015100:	int3   
   140015101:	int3   
   140015102:	int3   
   140015103:	int3   
   140015104:	int3   
   140015105:	int3   
   140015106:	int3   
   140015107:	int3   
   140015108:	int3   
   140015109:	int3   
   14001510a:	int3   
   14001510b:	int3   
   14001510c:	int3   
   14001510d:	int3   
   14001510e:	int3   
   14001510f:	int3   
   140015110:	mov    QWORD PTR [rsp+0x8],rcx
   140015115:	mov    QWORD PTR [rsp+0x10],rdx
   14001511a:	mov    QWORD PTR [rsp+0x18],r8
   14001511f:	mov    QWORD PTR [rsp+0x20],r9
   140015124:	sub    rsp,0x68
   140015128:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001512e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140015134:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14001513a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140015140:	mov    rdx,rax
   140015143:	lea    rcx,[rip+0x367fe]        # 0x14004b948
   14001514a:	call   0x14000f3d0
   14001514f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140015155:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14001515b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140015161:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140015167:	mov    rcx,QWORD PTR [rsp+0x70]
   14001516c:	mov    rdx,QWORD PTR [rsp+0x78]
   140015171:	mov    r8,QWORD PTR [rsp+0x80]
   140015179:	mov    r9,QWORD PTR [rsp+0x88]
   140015181:	add    rsp,0x68
   140015185:	jmp    0x140015187
   140015187:	jmp    rax
   140015189:	int3   
   14001518a:	int3   
   14001518b:	int3   
   14001518c:	int3   
   14001518d:	int3   
   14001518e:	int3   
   14001518f:	int3   
   140015190:	lea    rax,[rip+0x3df91]        # 0x140053128
   140015197:	jmp    0x140014c30
   14001519c:	int3   
   14001519d:	int3   
   14001519e:	int3   
   14001519f:	int3   
   1400151a0:	int3   
   1400151a1:	int3   
   1400151a2:	int3   
   1400151a3:	int3   
   1400151a4:	int3   
   1400151a5:	int3   
   1400151a6:	int3   
   1400151a7:	int3   
   1400151a8:	int3   
   1400151a9:	int3   
   1400151aa:	int3   
   1400151ab:	int3   
   1400151ac:	int3   
   1400151ad:	int3   
   1400151ae:	int3   
   1400151af:	int3   
   1400151b0:	lea    rax,[rip+0x3df59]        # 0x140053110
   1400151b7:	jmp    0x140014c30
   1400151bc:	int3   
   1400151bd:	int3   
   1400151be:	int3   
   1400151bf:	int3   
   1400151c0:	int3   
   1400151c1:	int3   
   1400151c2:	int3   
   1400151c3:	int3   
   1400151c4:	int3   
   1400151c5:	int3   
   1400151c6:	int3   
   1400151c7:	int3   
   1400151c8:	int3   
   1400151c9:	int3   
   1400151ca:	int3   
   1400151cb:	int3   
   1400151cc:	int3   
   1400151cd:	int3   
   1400151ce:	int3   
   1400151cf:	int3   
   1400151d0:	lea    rax,[rip+0x3df31]        # 0x140053108
   1400151d7:	jmp    0x140014c30
   1400151dc:	int3   
   1400151dd:	int3   
   1400151de:	int3   
   1400151df:	int3   
   1400151e0:	int3   
   1400151e1:	int3   
   1400151e2:	int3   
   1400151e3:	int3   
   1400151e4:	int3   
   1400151e5:	int3   
   1400151e6:	int3   
   1400151e7:	int3   
   1400151e8:	int3   
   1400151e9:	int3   
   1400151ea:	int3   
   1400151eb:	int3   
   1400151ec:	int3   
   1400151ed:	int3   
   1400151ee:	int3   
   1400151ef:	int3   
   1400151f0:	lea    rax,[rip+0x3df49]        # 0x140053140
   1400151f7:	jmp    0x140015210
   1400151fc:	int3   
   1400151fd:	int3   
   1400151fe:	int3   
   1400151ff:	int3   
   140015200:	int3   
   140015201:	int3   
   140015202:	int3   
   140015203:	int3   
   140015204:	int3   
   140015205:	int3   
   140015206:	int3   
   140015207:	int3   
   140015208:	int3   
   140015209:	int3   
   14001520a:	int3   
   14001520b:	int3   
   14001520c:	int3   
   14001520d:	int3   
   14001520e:	int3   
   14001520f:	int3   
   140015210:	mov    QWORD PTR [rsp+0x8],rcx
   140015215:	mov    QWORD PTR [rsp+0x10],rdx
   14001521a:	mov    QWORD PTR [rsp+0x18],r8
   14001521f:	mov    QWORD PTR [rsp+0x20],r9
   140015224:	sub    rsp,0x68
   140015228:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14001522e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140015234:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14001523a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140015240:	mov    rdx,rax
   140015243:	lea    rcx,[rip+0x3671e]        # 0x14004b968
   14001524a:	call   0x14000f3d0
   14001524f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140015255:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14001525b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140015261:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140015267:	mov    rcx,QWORD PTR [rsp+0x70]
   14001526c:	mov    rdx,QWORD PTR [rsp+0x78]
   140015271:	mov    r8,QWORD PTR [rsp+0x80]
   140015279:	mov    r9,QWORD PTR [rsp+0x88]
   140015281:	add    rsp,0x68
   140015285:	jmp    0x140015287
   140015287:	jmp    rax
   140015289:	int3   
   14001528a:	int3   
   14001528b:	int3   
   14001528c:	int3   
   14001528d:	int3   
   14001528e:	int3   
   14001528f:	int3   
   140015290:	lea    rax,[rip+0x3deb1]        # 0x140053148
   140015297:	jmp    0x140015210
   14001529c:	int3   
   14001529d:	int3   
   14001529e:	int3   
   14001529f:	int3   
   1400152a0:	int3   
   1400152a1:	int3   
   1400152a2:	int3   
   1400152a3:	int3   
   1400152a4:	int3   
   1400152a5:	int3   
   1400152a6:	int3   
   1400152a7:	int3   
   1400152a8:	int3   
   1400152a9:	int3   
   1400152aa:	int3   
   1400152ab:	int3   
   1400152ac:	int3   
   1400152ad:	int3   
   1400152ae:	int3   
   1400152af:	int3   
   1400152b0:	lea    rax,[rip+0x3de81]        # 0x140053138
   1400152b7:	jmp    0x140015210
   1400152bc:	int3   
   1400152bd:	int3   
   1400152be:	int3   
   1400152bf:	int3   
   1400152c0:	int3   
   1400152c1:	int3   
   1400152c2:	int3   
   1400152c3:	int3   
   1400152c4:	int3   
   1400152c5:	int3   
   1400152c6:	int3   
   1400152c7:	int3   
   1400152c8:	int3   
   1400152c9:	int3   
   1400152ca:	int3   
   1400152cb:	int3   
   1400152cc:	int3   
   1400152cd:	int3   
   1400152ce:	int3   
   1400152cf:	int3   
   1400152d0:	lea    rax,[rip+0x3de79]        # 0x140053150
   1400152d7:	jmp    0x140015210
   1400152dc:	int3   
   1400152dd:	int3   
   1400152de:	int3   
   1400152df:	int3   
   1400152e0:	int3   
   1400152e1:	int3   
   1400152e2:	int3   
   1400152e3:	int3   
   1400152e4:	int3   
   1400152e5:	int3   
   1400152e6:	int3   
   1400152e7:	int3   
   1400152e8:	int3   
   1400152e9:	int3   
   1400152ea:	int3   
   1400152eb:	int3   
   1400152ec:	int3   
   1400152ed:	int3   
   1400152ee:	int3   
   1400152ef:	int3   
   1400152f0:	jmp    QWORD PTR [rip+0x27e4a]        # 0x14003d140
   1400152f6:	int3   
   1400152f7:	int3   
   1400152f8:	int3   
   1400152f9:	int3   
   1400152fa:	int3   
   1400152fb:	int3   
   1400152fc:	sub    rsp,0x28
   140015300:	mov    DWORD PTR [rsp+0x30],ecx
   140015304:	lea    rdx,[rip+0x36595]        # 0x14004b8a0
   14001530b:	lea    rcx,[rsp+0x30]
   140015310:	call   0x14001562a
   140015315:	int3   
   140015316:	int3   
   140015317:	int3   
   140015318:	int3   
   140015319:	int3   
   14001531a:	int3   
   14001531b:	int3   
   14001531c:	mov    QWORD PTR [rsp+0x8],rbx
   140015321:	xor    ebx,ebx
   140015323:	lea    rax,[rdx-0x1]
   140015327:	mov    r10d,0x7ffffffe
   14001532d:	mov    r9d,ebx
   140015330:	cmp    rax,r10
   140015333:	mov    r11d,0x80070057
   140015339:	cmova  r9d,r11d
   14001533d:	test   r9d,r9d
   140015340:	js     0x140015381
   140015342:	mov    r9d,ebx
   140015345:	test   rdx,rdx
   140015348:	je     0x140015375
   14001534a:	sub    r10,rdx
   14001534d:	sub    r8,rcx
   140015350:	lea    rax,[r10+rdx*1]
   140015354:	test   rax,rax
   140015357:	je     0x140015370
   140015359:	movzx  eax,WORD PTR [r8+rcx*1]
   14001535e:	test   ax,ax
   140015361:	je     0x140015370
   140015363:	mov    WORD PTR [rcx],ax
   140015366:	add    rcx,0x2
   14001536a:	sub    rdx,0x1
   14001536e:	jne    0x140015350
   140015370:	test   rdx,rdx
   140015373:	jne    0x140015386
   140015375:	sub    rcx,0x2
   140015379:	mov    r9d,0x8007007a
   14001537f:	jmp    0x140015386
   140015381:	test   rdx,rdx
   140015384:	je     0x140015389
   140015386:	mov    WORD PTR [rcx],bx
   140015389:	mov    rbx,QWORD PTR [rsp+0x8]
   14001538e:	mov    eax,r9d
   140015391:	ret    
   140015392:	int3   
   140015393:	int3   
   140015394:	int3   
   140015395:	int3   
   140015396:	int3   
   140015397:	int3   
   140015398:	mov    QWORD PTR [rsp+0x8],rbx
   14001539d:	push   rdi
   14001539e:	sub    rsp,0x20
   1400153a2:	mov    rdi,rdx
   1400153a5:	mov    rbx,rcx
   1400153a8:	call   0x140015604
   1400153ad:	mov    QWORD PTR [rbx],rdi
   1400153b0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400153b5:	add    rsp,0x20
   1400153b9:	pop    rdi
   1400153ba:	ret    
   1400153bb:	int3   
   1400153bc:	int3   
   1400153bd:	int3   
   1400153be:	int3   
   1400153bf:	int3   
   1400153c0:	int3   
   1400153c1:	int3   
   1400153c2:	int3   
   1400153c3:	int3   
   1400153c4:	mov    r11,rsp
   1400153c7:	mov    QWORD PTR [r11+0x10],rbx
   1400153cb:	mov    QWORD PTR [r11+0x20],r9
   1400153cf:	mov    QWORD PTR [r11+0x18],r8
   1400153d3:	mov    QWORD PTR [r11+0x8],rcx
   1400153d7:	push   rbp
   1400153d8:	push   rsi
   1400153d9:	push   rdi
   1400153da:	sub    rsp,0x50
   1400153de:	and    QWORD PTR [r11-0x40],0x0
   1400153e3:	xor    ebx,ebx
   1400153e5:	and    QWORD PTR [r11-0x30],rbx
   1400153e9:	xor    eax,eax
   1400153eb:	mov    r10d,DWORD PTR [r8+0xc]
   1400153ef:	mov    rbp,r9
   1400153f2:	mov    QWORD PTR [r11-0x28],rax
   1400153f6:	mov    rsi,r8
   1400153f9:	mov    QWORD PTR [r11-0x20],rax
   1400153fd:	mov    r11,QWORD PTR [r8]
   140015400:	add    r10,r11
   140015403:	mov    DWORD PTR [rsp+0x20],ebx
   140015407:	test   rcx,rcx
   14001540a:	je     0x1400154a0
   140015410:	mov    eax,DWORD PTR [r10+0x20]
   140015414:	xor    r9d,r9d
   140015417:	mov    ebp,DWORD PTR [r10+0x24]
   14001541b:	add    rax,r11
   14001541e:	mov    ecx,DWORD PTR [r10+0x18]
   140015422:	add    rbp,r11
   140015425:	sub    ecx,0x1
   140015428:	js     0x1400155bb
   14001542e:	mov    rsi,QWORD PTR [rsp+0x70]
   140015433:	mov    rbx,rax
   140015436:	lea    edx,[rcx+r9*1]
   14001543a:	sar    edx,1
   14001543c:	movsxd rax,edx
   14001543f:	mov    edi,DWORD PTR [rbx+rax*4]
   140015442:	mov    rax,rsi
   140015445:	add    rdi,r11
   140015448:	sub    rdi,rsi
   14001544b:	mov    r8b,BYTE PTR [rax]
   14001544e:	cmp    r8b,BYTE PTR [rax+rdi*1]
   140015452:	jne    0x140015460
   140015454:	inc    rax
   140015457:	test   r8b,r8b
   14001545a:	jne    0x14001544b
   14001545c:	xor    eax,eax
   14001545e:	jmp    0x140015465
   140015460:	sbb    eax,eax
   140015462:	or     eax,0x1
   140015465:	test   eax,eax
   140015467:	jns    0x14001546e
   140015469:	lea    ecx,[rdx-0x1]
   14001546c:	jmp    0x140015474
   14001546e:	jle    0x140015479
   140015470:	lea    r9d,[rdx+0x1]
   140015474:	cmp    ecx,r9d
   140015477:	jge    0x140015436
   140015479:	mov    ebx,DWORD PTR [rsp+0x20]
   14001547d:	mov    rsi,QWORD PTR [rsp+0x80]
   140015485:	cmp    ecx,r9d
   140015488:	jl     0x1400155bb
   14001548e:	movsxd rax,edx
   140015491:	movzx  edx,WORD PTR [rbp+rax*2+0x0]
   140015496:	mov    rbp,QWORD PTR [rsp+0x88]
   14001549e:	jmp    0x1400154a5
   1400154a0:	sub    dx,WORD PTR [r10+0x10]
   1400154a5:	mov    eax,DWORD PTR [r10+0x1c]
   1400154a9:	add    rax,r11
   1400154ac:	movzx  ecx,dx
   1400154af:	mov    r8d,DWORD PTR [rax+rcx*4]
   1400154b3:	add    r8,r11
   1400154b6:	mov    QWORD PTR [rsp+0x28],r8
   1400154bb:	cmp    r8,r11
   1400154be:	jb     0x1400155bb
   1400154c4:	mov    eax,DWORD PTR [rsi+0x8]
   1400154c7:	add    rax,r11
   1400154ca:	cmp    r8,rax
   1400154cd:	jae    0x1400155bb
   1400154d3:	cmp    r8,r10
   1400154d6:	jbe    0x1400155b5
   1400154dc:	mov    eax,DWORD PTR [rsi+0x10]
   1400154df:	add    rax,r10
   1400154e2:	cmp    r8,rax
   1400154e5:	jae    0x1400155b5
   1400154eb:	mov    edx,0x2e
   1400154f0:	mov    rcx,r8
   1400154f3:	call   QWORD PTR [rip+0x2815f]        # 0x14003d658
   1400154f9:	xor    esi,esi
   1400154fb:	mov    rdi,rax
   1400154fe:	test   rax,rax
   140015501:	jne    0x14001550d
   140015503:	mov    ebx,0xc000007b
   140015508:	jmp    0x1400155c0
   14001550d:	lea    rcx,[rip+0x295dc]        # 0x14003eaf0
   140015514:	call   QWORD PTR [rip+0x27d16]        # 0x14003d230
   14001551a:	mov    QWORD PTR [rsp+0x38],rax
   14001551f:	test   rax,rax
   140015522:	je     0x1400155bb
   140015528:	lea    r10,[rdi+0x1]
   14001552c:	mov    ecx,esi
   14001552e:	cmp    BYTE PTR [r10],0x23
   140015532:	jne    0x140015595
   140015534:	lea    rdx,[rdi+0x2]
   140015538:	mov    r10,rsi
   14001553b:	mov    r9d,esi
   14001553e:	test   rdx,rdx
   140015541:	je     0x1400155c0
   140015543:	mov    ax,0x20
   140015547:	jmp    0x14001554d
   140015549:	add    rdx,0x2
   14001554d:	cmp    WORD PTR [rdx],ax
   140015550:	je     0x140015549
   140015552:	cmp    WORD PTR [rdx],0x2d
   140015556:	jne    0x140015562
   140015558:	mov    r9d,0x1
   14001555e:	add    rdx,0x2
   140015562:	cmp    WORD PTR [rdx],ax
   140015565:	je     0x14001555e
   140015567:	jmp    0x140015584
   140015569:	lea    eax,[r8-0x30]
   14001556d:	cmp    ax,0x9
   140015571:	ja     0x1400155c0
   140015573:	lea    ecx,[rcx+rcx*4]
   140015576:	movzx  eax,r8w
   14001557a:	lea    ecx,[rcx-0x18]
   14001557d:	add    rdx,0x2
   140015581:	lea    ecx,[rax+rcx*2]
   140015584:	movzx  r8d,WORD PTR [rdx]
   140015588:	test   r8w,r8w
   14001558c:	jne    0x140015569
   14001558e:	test   r9d,r9d
   140015591:	je     0x140015595
   140015593:	neg    ecx
   140015595:	movzx  edx,cx
   140015598:	lea    r9,[rsp+0x28]
   14001559d:	mov    rcx,r10
   1400155a0:	lea    r8,[rsp+0x38]
   1400155a5:	call   0x1400153c4
   1400155aa:	mov    ebx,eax
   1400155ac:	test   eax,eax
   1400155ae:	js     0x1400155c0
   1400155b0:	mov    r8,QWORD PTR [rsp+0x28]
   1400155b5:	mov    QWORD PTR [rbp+0x0],r8
   1400155b9:	jmp    0x1400155c0
   1400155bb:	mov    ebx,0xc000007a
   1400155c0:	mov    eax,ebx
   1400155c2:	mov    rbx,QWORD PTR [rsp+0x78]
   1400155c7:	add    rsp,0x50
   1400155cb:	pop    rdi
   1400155cc:	pop    rsi
   1400155cd:	pop    rbp
   1400155ce:	ret    
   1400155cf:	int3   
   1400155d0:	int3   
   1400155d1:	int3   
   1400155d2:	int3   
   1400155d3:	int3   
   1400155d4:	int3   
   1400155d5:	int3   
   1400155d6:	int3   
   1400155d7:	int3   
   1400155d8:	rex push rbx
   1400155da:	sub    rsp,0x20
   1400155de:	mov    rbx,rcx
   1400155e1:	call   QWORD PTR [rip+0x27bd9]        # 0x14003d1c0
   1400155e7:	mov    r8,rbx
   1400155ea:	xor    edx,edx
   1400155ec:	mov    rcx,rax
   1400155ef:	add    rsp,0x20
   1400155f3:	pop    rbx
   1400155f4:	rex.W jmp QWORD PTR [rip+0x27be5]        # 0x14003d1e0
   1400155fb:	int3   
   1400155fc:	int3   
   1400155fd:	int3   
   1400155fe:	int3   
   1400155ff:	int3   
   140015600:	int3   
   140015601:	int3   
   140015602:	int3   
   140015603:	int3   
   140015604:	rex push rbx
   140015606:	sub    rsp,0x20
   14001560a:	mov    rbx,rcx
   14001560d:	mov    rcx,QWORD PTR [rcx]
   140015610:	test   rcx,rcx
   140015613:	je     0x14001561e
   140015615:	call   0x1400155d8
   14001561a:	and    QWORD PTR [rbx],0x0
   14001561e:	add    rsp,0x20
   140015622:	pop    rbx
   140015623:	ret    
   140015624:	int3   
   140015625:	int3   
   140015626:	int3   
   140015627:	int3   
   140015628:	int3   
   140015629:	int3   
   14001562a:	jmp    QWORD PTR [rip+0x27f58]        # 0x14003d588
   140015630:	int3   
   140015631:	int3   
   140015632:	int3   
   140015633:	int3   
   140015634:	int3   
   140015635:	int3   
   140015636:	jmp    QWORD PTR [rip+0x27f44]        # 0x14003d580
   14001563c:	int3   
   14001563d:	int3   
   14001563e:	int3   
   14001563f:	int3   
   140015640:	int3   
   140015641:	int3   
   140015642:	int3   
   140015643:	int3   
   140015644:	mov    rax,rsp
   140015647:	mov    QWORD PTR [rax+0x8],rbx
   14001564b:	mov    QWORD PTR [rax+0x10],rbp
   14001564f:	mov    QWORD PTR [rax+0x18],rsi
   140015653:	mov    QWORD PTR [rax+0x20],rdi
   140015657:	push   r14
   140015659:	sub    rsp,0x20
   14001565d:	mov    rbx,QWORD PTR [r9+0x38]
   140015661:	mov    rsi,rdx
   140015664:	mov    r14,r8
   140015667:	mov    rbp,rcx
   14001566a:	mov    rdx,r9
   14001566d:	mov    rcx,rsi
   140015670:	mov    rdi,r9
   140015673:	lea    r8,[rbx+0x4]
   140015677:	call   0x140014adc
   14001567c:	mov    r11d,DWORD PTR [rbx+0x4]
   140015680:	mov    r8d,0x1
   140015686:	mov    r10d,DWORD PTR [rbp+0x4]
   14001568a:	mov    eax,r11d
   14001568d:	and    eax,r8d
   140015690:	and    r11d,0x2
   140015694:	and    r10b,0x66
   140015698:	cmove  r11d,eax
   14001569c:	test   r11d,r11d
   14001569f:	je     0x1400156b5
   1400156a1:	mov    r9,rdi
   1400156a4:	mov    r8,r14
   1400156a7:	mov    rdx,rsi
   1400156aa:	mov    rcx,rbp
   1400156ad:	call   0x140015636
   1400156b2:	mov    r8d,eax
   1400156b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400156ba:	mov    eax,r8d
   1400156bd:	mov    rbp,QWORD PTR [rsp+0x38]
   1400156c2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400156c7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400156cc:	add    rsp,0x20
   1400156d0:	pop    r14
   1400156d2:	ret    
   1400156d3:	int3   
   1400156d4:	int3   
   1400156d5:	int3   
   1400156d6:	int3   
   1400156d7:	int3   
   1400156d8:	int3   
   1400156d9:	int3   
   1400156da:	int3   
   1400156db:	int3   
   1400156dc:	int3   
   1400156dd:	int3   
   1400156de:	int3   
   1400156df:	int3   
   1400156e0:	int3   
   1400156e1:	int3   
   1400156e2:	int3   
   1400156e3:	int3   
   1400156e4:	int3   
   1400156e5:	int3   
   1400156e6:	jmp    QWORD PTR [rip+0x27e8c]        # 0x14003d578
   1400156ec:	int3   
   1400156ed:	int3   
   1400156ee:	int3   
   1400156ef:	int3   
   1400156f0:	int3   
   1400156f1:	int3   
   1400156f2:	jmp    QWORD PTR [rip+0x27e58]        # 0x14003d550
   1400156f8:	int3   
   1400156f9:	int3   
   1400156fa:	int3   
   1400156fb:	int3   
   1400156fc:	int3   
   1400156fd:	int3   
   1400156fe:	jmp    QWORD PTR [rip+0x27fac]        # 0x14003d6b0
   140015704:	int3   
   140015705:	int3   
   140015706:	int3   
   140015707:	int3   
   140015708:	int3   
   140015709:	int3   
   14001570a:	int3   
   14001570b:	int3   
   14001570c:	int3   
   14001570d:	int3   
   14001570e:	int3   
   14001570f:	int3   
   140015710:	int3   
   140015711:	int3   
   140015712:	int3   
   140015713:	int3   
   140015714:	int3   
   140015715:	int3   
   140015716:	data16 nop WORD PTR [rax+rax*1+0x0]
   140015720:	jmp    rax
   140015722:	int3   
   140015723:	int3   
   140015724:	int3   
   140015725:	int3   
   140015726:	int3   
   140015727:	int3   
   140015728:	int3   
   140015729:	int3   
   14001572a:	int3   
   14001572b:	int3   
   14001572c:	int3   
   14001572d:	int3   
   14001572e:	int3   
   14001572f:	int3   
   140015730:	int3   
   140015731:	int3   
   140015732:	int3   
   140015733:	int3   
   140015734:	int3   
   140015735:	int3   
   140015736:	data16 nop WORD PTR [rax+rax*1+0x0]
   140015740:	sub    rsp,0x10
   140015744:	mov    QWORD PTR [rsp],r10
   140015748:	mov    QWORD PTR [rsp+0x8],r11
   14001574d:	xor    r11,r11
   140015750:	lea    r10,[rsp+0x18]
   140015755:	sub    r10,rax
   140015758:	cmovb  r10,r11
   14001575c:	mov    r11,QWORD PTR gs:0x10
   140015765:	cmp    r10,r11
   140015768:	jae    0x14001577f
   14001576a:	and    r10w,0xf000
   140015770:	lea    r11,[r11-0x1000]
   140015777:	test   BYTE PTR [r11],r11b
   14001577a:	cmp    r10,r11
   14001577d:	jne    0x140015770
   14001577f:	mov    r10,QWORD PTR [rsp]
   140015783:	mov    r11,QWORD PTR [rsp+0x8]
   140015788:	add    rsp,0x10
   14001578c:	ret    
   14001578d:	int3   
   14001578e:	int3   
   14001578f:	int3   
   140015790:	sub    rsp,0x28
   140015794:	lea    rax,[rip+0x2a375]        # 0x14003fb10
   14001579b:	mov    QWORD PTR [rip+0x39666],rax        # 0x14004ee08
   1400157a2:	lea    rcx,[rip+0x3966f]        # 0x14004ee18
   1400157a9:	lea    rax,[rip+0x39640]        # 0x14004edf0
   1400157b0:	mov    QWORD PTR [rip+0x39659],rax        # 0x14004ee10
   1400157b7:	call   0x140015e2c
   1400157bc:	lea    rax,[rip+0x39645]        # 0x14004ee08
   1400157c3:	mov    QWORD PTR [rip+0x3964e],rax        # 0x14004ee18
   1400157ca:	add    rsp,0x28
   1400157ce:	ret    
   1400157cf:	int3   
   1400157d0:	and    QWORD PTR [rcx],0x0
   1400157d4:	mov    rax,rcx
   1400157d7:	ret    
   1400157d8:	int3   
   1400157d9:	int3   
   1400157da:	int3   
   1400157db:	int3   
   1400157dc:	int3   
   1400157dd:	int3   
   1400157de:	int3   
   1400157df:	int3   
   1400157e0:	sub    rcx,0x8
   1400157e4:	jmp    0x14002ade0
   1400157e9:	int3   
   1400157ea:	int3   
   1400157eb:	int3   
   1400157ec:	int3   
   1400157ed:	int3   
   1400157ee:	int3   
   1400157ef:	int3   
   1400157f0:	sub    rcx,0x8
   1400157f4:	jmp    0x14002ae20
   1400157f9:	int3   
   1400157fa:	int3   
   1400157fb:	int3   
   1400157fc:	int3   
   1400157fd:	int3   
   1400157fe:	int3   
   1400157ff:	int3   
   140015800:	sub    rcx,0x10
   140015804:	jmp    0x14002ae20
   140015809:	int3   
   14001580a:	int3   
   14001580b:	int3   
   14001580c:	int3   
   14001580d:	int3   
   14001580e:	int3   
   14001580f:	int3   
   140015810:	sub    rcx,0x20
   140015814:	jmp    0x14002ae20
   140015819:	int3   
   14001581a:	int3   
   14001581b:	int3   
   14001581c:	int3   
   14001581d:	int3   
   14001581e:	int3   
   14001581f:	int3   
   140015820:	sub    rcx,0x8
   140015824:	jmp    0x14000f890
   140015829:	int3   
   14001582a:	int3   
   14001582b:	int3   
   14001582c:	int3   
   14001582d:	int3   
   14001582e:	int3   
   14001582f:	int3   
   140015830:	sub    rcx,0x8
   140015834:	jmp    0x14002ae60
   140015839:	int3   
   14001583a:	int3   
   14001583b:	int3   
   14001583c:	int3   
   14001583d:	int3   
   14001583e:	int3   
   14001583f:	int3   
   140015840:	sub    rcx,0x10
   140015844:	jmp    0x14002ae60
   140015849:	int3   
   14001584a:	int3   
   14001584b:	int3   
   14001584c:	int3   
   14001584d:	int3   
   14001584e:	int3   
   14001584f:	int3   
   140015850:	sub    rcx,0x18
   140015854:	jmp    0x14002ae60
   140015859:	int3   
   14001585a:	int3   
   14001585b:	int3   
   14001585c:	int3   
   14001585d:	int3   
   14001585e:	int3   
   14001585f:	int3   
   140015860:	sub    rcx,0x20
   140015864:	jmp    0x14002ae60
   140015869:	int3   
   14001586a:	int3   
   14001586b:	int3   
   14001586c:	int3   
   14001586d:	int3   
   14001586e:	int3   
   14001586f:	int3   
   140015870:	sub    rcx,0x8
   140015874:	jmp    0x14000c7e0
   140015879:	int3   
   14001587a:	int3   
   14001587b:	int3   
   14001587c:	int3   
   14001587d:	int3   
   14001587e:	int3   
   14001587f:	int3   
   140015880:	sub    rcx,0x10
   140015884:	jmp    0x14000c7e0
   140015889:	int3   
   14001588a:	int3   
   14001588b:	int3   
   14001588c:	int3   
   14001588d:	int3   
   14001588e:	int3   
   14001588f:	int3   
   140015890:	sub    rcx,0x18
   140015894:	jmp    0x14000c7e0
   140015899:	int3   
   14001589a:	int3   
   14001589b:	int3   
   14001589c:	int3   
   14001589d:	int3   
   14001589e:	int3   
   14001589f:	int3   
   1400158a0:	sub    rcx,0x20
   1400158a4:	jmp    0x14000c7e0
   1400158a9:	int3   
   1400158aa:	int3   
   1400158ab:	int3   
   1400158ac:	int3   
   1400158ad:	int3   
   1400158ae:	int3   
   1400158af:	int3   
   1400158b0:	mov    eax,DWORD PTR [rcx+0xc]
   1400158b3:	ret    
   1400158b4:	int3   
   1400158b5:	int3   
   1400158b6:	int3   
   1400158b7:	int3   
   1400158b8:	int3   
   1400158b9:	int3   
   1400158ba:	int3   
   1400158bb:	int3   
   1400158bc:	int3   
   1400158bd:	int3   
   1400158be:	int3   
   1400158bf:	int3   
   1400158c0:	mov    eax,0x80004001
   1400158c5:	ret    
   1400158c6:	int3   
   1400158c7:	int3   
   1400158c8:	int3   
   1400158c9:	int3   
   1400158ca:	int3   
   1400158cb:	int3   
   1400158cc:	int3   
   1400158cd:	int3   
   1400158ce:	int3   
   1400158cf:	int3   
   1400158d0:	xor    al,al
   1400158d2:	ret    
   1400158d3:	int3   
   1400158d4:	int3   
   1400158d5:	int3   
   1400158d6:	int3   
   1400158d7:	int3   
   1400158d8:	int3   
   1400158d9:	int3   
   1400158da:	int3   
   1400158db:	int3   
   1400158dc:	int3   
   1400158dd:	int3   
   1400158de:	int3   
   1400158df:	int3   
   1400158e0:	movups xmm0,XMMWORD PTR [rip+0x2c181]        # 0x140041a68
   1400158e7:	mov    rax,rdx
   1400158ea:	movdqu XMMWORD PTR [rdx],xmm0
   1400158ee:	ret    
   1400158ef:	int3   
   1400158f0:	sub    rcx,0x8
   1400158f4:	jmp    0x14002cf30
   1400158f9:	int3   
   1400158fa:	int3   
   1400158fb:	int3   
   1400158fc:	int3   
   1400158fd:	int3   
   1400158fe:	int3   
   1400158ff:	int3   
   140015900:	sub    rcx,0x10
   140015904:	jmp    0x14002cf90
   140015909:	int3   
   14001590a:	int3   
   14001590b:	int3   
   14001590c:	int3   
   14001590d:	int3   
   14001590e:	int3   
   14001590f:	int3   
   140015910:	sub    rcx,0x18
   140015914:	jmp    0x14002cf90
   140015919:	int3   
   14001591a:	int3   
   14001591b:	int3   
   14001591c:	int3   
   14001591d:	int3   
   14001591e:	int3   
   14001591f:	int3   
   140015920:	sub    rcx,0x8
   140015924:	jmp    0x14000f960
   140015929:	int3   
   14001592a:	int3   
   14001592b:	int3   
   14001592c:	int3   
   14001592d:	int3   
   14001592e:	int3   
   14001592f:	int3   
   140015930:	sub    rcx,0x8
   140015934:	jmp    0x14000c7c0
   140015939:	int3   
   14001593a:	int3   
   14001593b:	int3   
   14001593c:	int3   
   14001593d:	int3   
   14001593e:	int3   
   14001593f:	int3   
   140015940:	sub    rcx,0x18
   140015944:	jmp    0x14000c7c0
   140015949:	int3   
   14001594a:	int3   
   14001594b:	int3   
   14001594c:	int3   
   14001594d:	int3   
   14001594e:	int3   
   14001594f:	int3   
   140015950:	sub    rcx,0x20
   140015954:	jmp    0x14000c7c0
   140015959:	int3   
   14001595a:	int3   
   14001595b:	int3   
   14001595c:	int3   
   14001595d:	int3   
   14001595e:	int3   
   14001595f:	int3   
   140015960:	sub    rcx,0x10
   140015964:	jmp    0x14000c7c0
   140015969:	int3   
   14001596a:	int3   
   14001596b:	int3   
   14001596c:	mov    DWORD PTR [rip+0x39976],ecx        # 0x14004f2e8
   140015972:	mov    eax,0x1
   140015977:	lock xadd DWORD PTR [rip+0x39965],eax        # 0x14004f2e4
   14001597f:	inc    eax
   140015981:	ret    
   140015982:	int3   
   140015983:	int3   
   140015984:	int3   
   140015985:	int3   
   140015986:	int3   
   140015987:	int3   
   140015988:	int3   
   140015989:	int3   
   14001598a:	int3   
   14001598b:	int3   
   14001598c:	int3   
   14001598d:	int3   
   14001598e:	int3   
   14001598f:	int3   
   140015990:	mov    DWORD PTR [rip+0x3919e],ecx        # 0x14004eb34
   140015996:	mov    eax,0x1
   14001599b:	ret    
   14001599c:	mov    DWORD PTR [rip+0x3992e],ecx        # 0x14004f2d0
   1400159a2:	mov    eax,0x1
   1400159a7:	lock xadd DWORD PTR [rip+0x3991d],eax        # 0x14004f2cc
   1400159af:	inc    eax
   1400159b1:	ret    
   1400159b2:	int3   
   1400159b3:	int3   
   1400159b4:	mov    DWORD PTR [rip+0x39926],ecx        # 0x14004f2e0
   1400159ba:	mov    eax,0x1
   1400159bf:	lock xadd DWORD PTR [rip+0x39915],eax        # 0x14004f2dc
   1400159c7:	inc    eax
   1400159c9:	ret    
   1400159ca:	int3   
   1400159cb:	int3   
   1400159cc:	mov    DWORD PTR [rip+0x39906],ecx        # 0x14004f2d8
   1400159d2:	mov    eax,0x1
   1400159d7:	lock xadd DWORD PTR [rip+0x398f5],eax        # 0x14004f2d4
   1400159df:	inc    eax
   1400159e1:	ret    
   1400159e2:	int3   
   1400159e3:	int3   
   1400159e4:	int3   
   1400159e5:	int3   
   1400159e6:	int3   
   1400159e7:	int3   
   1400159e8:	int3   
   1400159e9:	int3   
   1400159ea:	int3   
   1400159eb:	int3   
   1400159ec:	int3   
   1400159ed:	int3   
   1400159ee:	int3   
   1400159ef:	int3   
   1400159f0:	sub    rcx,0x8
   1400159f4:	jmp    0x14002d0a0
   1400159f9:	int3   
   1400159fa:	int3   
   1400159fb:	int3   
   1400159fc:	int3   
   1400159fd:	int3   
   1400159fe:	int3   
   1400159ff:	int3   
   140015a00:	sub    rcx,0x8
   140015a04:	jmp    0x1400341d0
   140015a09:	int3   
   140015a0a:	int3   
   140015a0b:	int3   
   140015a0c:	int3   
   140015a0d:	int3   
   140015a0e:	int3   
   140015a0f:	int3   
   140015a10:	sub    rcx,0x20
   140015a14:	jmp    0x1400341d0
   140015a19:	int3   
   140015a1a:	int3   
   140015a1b:	int3   
   140015a1c:	int3   
   140015a1d:	int3   
   140015a1e:	int3   
   140015a1f:	int3   
   140015a20:	sub    rcx,0x8
   140015a24:	jmp    0x14000f980
   140015a29:	int3   
   140015a2a:	int3   
   140015a2b:	int3   
   140015a2c:	int3   
   140015a2d:	int3   
   140015a2e:	int3   
   140015a2f:	int3   
   140015a30:	sub    rcx,0x8
   140015a34:	jmp    0x14002d0e0
   140015a39:	int3   
   140015a3a:	int3   
   140015a3b:	int3   
   140015a3c:	int3   
   140015a3d:	int3   
   140015a3e:	int3   
   140015a3f:	int3   
   140015a40:	sub    rcx,0x10
   140015a44:	jmp    0x14002d0e0
   140015a49:	int3   
   140015a4a:	int3   
   140015a4b:	int3   
   140015a4c:	int3   
   140015a4d:	int3   
   140015a4e:	int3   
   140015a4f:	int3   
   140015a50:	sub    rcx,0x18
   140015a54:	jmp    0x14002d0e0
   140015a59:	int3   
   140015a5a:	int3   
   140015a5b:	int3   
   140015a5c:	int3   
   140015a5d:	int3   
   140015a5e:	int3   
   140015a5f:	int3   
   140015a60:	sub    rcx,0x20
   140015a64:	jmp    0x14002d0e0
   140015a69:	int3   
   140015a6a:	int3   
   140015a6b:	int3   
   140015a6c:	int3   
   140015a6d:	int3   
   140015a6e:	int3   
   140015a6f:	int3   
   140015a70:	sub    rcx,0x8
   140015a74:	jmp    0x14000c6b0
   140015a79:	int3   
   140015a7a:	int3   
   140015a7b:	int3   
   140015a7c:	int3   
   140015a7d:	int3   
   140015a7e:	int3   
   140015a7f:	int3   
   140015a80:	sub    rcx,0x10
   140015a84:	jmp    0x14000c6b0
   140015a89:	int3   
   140015a8a:	int3   
   140015a8b:	int3   
   140015a8c:	int3   
   140015a8d:	int3   
   140015a8e:	int3   
   140015a8f:	int3   
   140015a90:	sub    rcx,0x18
   140015a94:	jmp    0x14000c6b0
   140015a99:	int3   
   140015a9a:	int3   
   140015a9b:	int3   
   140015a9c:	int3   
   140015a9d:	int3   
   140015a9e:	int3   
   140015a9f:	int3   
   140015aa0:	sub    rcx,0x20
   140015aa4:	jmp    0x14000c6b0
   140015aa9:	int3   
   140015aaa:	int3   
   140015aab:	int3   
   140015aac:	int3   
   140015aad:	int3   
   140015aae:	int3   
   140015aaf:	int3   
   140015ab0:	sub    rcx,0x8
   140015ab4:	jmp    0x14002ed80
   140015ab9:	int3   
   140015aba:	int3   
   140015abb:	int3   
   140015abc:	int3   
   140015abd:	int3   
   140015abe:	int3   
   140015abf:	int3   
   140015ac0:	sub    rcx,0x10
   140015ac4:	jmp    0x14002ed80
   140015ac9:	int3   
   140015aca:	int3   
   140015acb:	int3   
   140015acc:	int3   
   140015acd:	int3   
   140015ace:	int3   
   140015acf:	int3   
   140015ad0:	sub    rcx,0x18
   140015ad4:	jmp    0x14002ed80
   140015ad9:	int3   
   140015ada:	int3   
   140015adb:	int3   
   140015adc:	int3   
   140015add:	int3   
   140015ade:	int3   
   140015adf:	int3   
   140015ae0:	sub    rcx,0x78
   140015ae4:	jmp    0x14002edc0
   140015ae9:	int3   
   140015aea:	int3   
   140015aeb:	int3   
   140015aec:	int3   
   140015aed:	int3   
   140015aee:	int3   
   140015aef:	int3   
   140015af0:	sub    rcx,0x80
   140015af7:	jmp    0x14002edc0
   140015afc:	int3   
   140015afd:	int3   
   140015afe:	int3   
   140015aff:	int3   
   140015b00:	sub    rcx,0x88
   140015b07:	jmp    0x14002edc0
   140015b0c:	int3   
   140015b0d:	int3   
   140015b0e:	int3   
   140015b0f:	int3   
   140015b10:	sub    rcx,0x8
   140015b14:	jmp    0x14000d2e0
   140015b19:	int3   
   140015b1a:	int3   
   140015b1b:	int3   
   140015b1c:	int3   
   140015b1d:	int3   
   140015b1e:	int3   
   140015b1f:	int3   
   140015b20:	sub    rcx,0x10
   140015b24:	jmp    0x14000d2e0
   140015b29:	int3   
   140015b2a:	int3   
   140015b2b:	int3   
   140015b2c:	int3   
   140015b2d:	int3   
   140015b2e:	int3   
   140015b2f:	int3   
   140015b30:	sub    rcx,0x18
   140015b34:	jmp    0x14000d2e0
   140015b39:	int3   
   140015b3a:	int3   
   140015b3b:	int3   
   140015b3c:	int3   
   140015b3d:	int3   
   140015b3e:	int3   
   140015b3f:	int3   
   140015b40:	sub    rcx,0x78
   140015b44:	jmp    0x140010810
   140015b49:	int3   
   140015b4a:	int3   
   140015b4b:	int3   
   140015b4c:	int3   
   140015b4d:	int3   
   140015b4e:	int3   
   140015b4f:	int3   
   140015b50:	sub    rcx,0x80
   140015b57:	jmp    0x140010810
   140015b5c:	int3   
   140015b5d:	int3   
   140015b5e:	int3   
   140015b5f:	int3   
   140015b60:	sub    rcx,0x88
   140015b67:	jmp    0x140010810
   140015b6c:	int3   
   140015b6d:	int3   
   140015b6e:	int3   
   140015b6f:	int3   
   140015b70:	mov    eax,DWORD PTR [rcx+0x11c]
   140015b76:	ret    
   140015b77:	int3   
   140015b78:	int3   
   140015b79:	int3   
   140015b7a:	int3   
   140015b7b:	int3   
   140015b7c:	int3   
   140015b7d:	int3   
   140015b7e:	int3   
   140015b7f:	int3   
   140015b80:	sub    rcx,0x8
   140015b84:	jmp    0x14002f640
   140015b89:	int3   
   140015b8a:	int3   
   140015b8b:	int3   
   140015b8c:	int3   
   140015b8d:	int3   
   140015b8e:	int3   
   140015b8f:	int3   
   140015b90:	sub    rcx,0x10
   140015b94:	jmp    0x14002f640
   140015b99:	int3   
   140015b9a:	int3   
   140015b9b:	int3   
   140015b9c:	int3   
   140015b9d:	int3   
   140015b9e:	int3   
   140015b9f:	int3   
   140015ba0:	sub    rcx,0x18
   140015ba4:	jmp    0x14002f640
   140015ba9:	int3   
   140015baa:	int3   
   140015bab:	int3   
   140015bac:	int3   
   140015bad:	int3   
   140015bae:	int3   
   140015baf:	int3   
   140015bb0:	sub    rcx,0x78
   140015bb4:	jmp    0x14002f6a0
   140015bb9:	int3   
   140015bba:	int3   
   140015bbb:	int3   
   140015bbc:	int3   
   140015bbd:	int3   
   140015bbe:	int3   
   140015bbf:	int3   
   140015bc0:	sub    rcx,0x80
   140015bc7:	jmp    0x14002f6a0
   140015bcc:	int3   
   140015bcd:	int3   
   140015bce:	int3   
   140015bcf:	int3   
   140015bd0:	sub    rcx,0x88
   140015bd7:	jmp    0x14002f6a0
   140015bdc:	int3   
   140015bdd:	int3   
   140015bde:	int3   
   140015bdf:	int3   
   140015be0:	sub    rcx,0x8
   140015be4:	jmp    0x14000d2c0
   140015be9:	int3   
   140015bea:	int3   
   140015beb:	int3   
   140015bec:	int3   
   140015bed:	int3   
   140015bee:	int3   
   140015bef:	int3   
   140015bf0:	sub    rcx,0x10
   140015bf4:	jmp    0x14000d2c0
   140015bf9:	int3   
   140015bfa:	int3   
   140015bfb:	int3   
   140015bfc:	int3   
   140015bfd:	int3   
   140015bfe:	int3   
   140015bff:	int3   
   140015c00:	sub    rcx,0x18
   140015c04:	jmp    0x14000d2c0
   140015c09:	int3   
   140015c0a:	int3   
   140015c0b:	int3   
   140015c0c:	int3   
   140015c0d:	int3   
   140015c0e:	int3   
   140015c0f:	int3   
   140015c10:	sub    rcx,0x78
   140015c14:	jmp    0x1400107f0
   140015c19:	int3   
   140015c1a:	int3   
   140015c1b:	int3   
   140015c1c:	int3   
   140015c1d:	int3   
   140015c1e:	int3   
   140015c1f:	int3   
   140015c20:	sub    rcx,0x80
   140015c27:	jmp    0x1400107f0
   140015c2c:	int3   
   140015c2d:	int3   
   140015c2e:	int3   
   140015c2f:	int3   
   140015c30:	sub    rcx,0x88
   140015c37:	jmp    0x1400107f0
   140015c3c:	int3   
   140015c3d:	int3   
   140015c3e:	int3   
   140015c3f:	int3   
   140015c40:	sub    rcx,0x8
   140015c44:	jmp    0x14002f700
   140015c49:	int3   
   140015c4a:	int3   
   140015c4b:	int3   
   140015c4c:	int3   
   140015c4d:	int3   
   140015c4e:	int3   
   140015c4f:	int3   
   140015c50:	sub    rcx,0x10
   140015c54:	jmp    0x14002f700
   140015c59:	int3   
   140015c5a:	int3   
   140015c5b:	int3   
   140015c5c:	int3   
   140015c5d:	int3   
   140015c5e:	int3   
   140015c5f:	int3   
   140015c60:	sub    rcx,0x18
   140015c64:	jmp    0x14002f700
   140015c69:	int3   
   140015c6a:	int3   
   140015c6b:	int3   
   140015c6c:	int3   
   140015c6d:	int3   
   140015c6e:	int3   
   140015c6f:	int3   
   140015c70:	sub    rcx,0x78
   140015c74:	jmp    0x14002f740
   140015c79:	int3   
   140015c7a:	int3   
   140015c7b:	int3   
   140015c7c:	int3   
   140015c7d:	int3   
   140015c7e:	int3   
   140015c7f:	int3   
   140015c80:	sub    rcx,0x80
   140015c87:	jmp    0x14002f740
   140015c8c:	int3   
   140015c8d:	int3   
   140015c8e:	int3   
   140015c8f:	int3   
   140015c90:	sub    rcx,0x88
   140015c97:	jmp    0x14002f740
   140015c9c:	int3   
   140015c9d:	int3   
   140015c9e:	int3   
   140015c9f:	int3   
   140015ca0:	sub    rcx,0x8
   140015ca4:	jmp    0x14000d1b0
   140015ca9:	int3   
   140015caa:	int3   
   140015cab:	int3   
   140015cac:	int3   
   140015cad:	int3   
   140015cae:	int3   
   140015caf:	int3   
   140015cb0:	sub    rcx,0x10
   140015cb4:	jmp    0x14000d1b0
   140015cb9:	int3   
   140015cba:	int3   
   140015cbb:	int3   
   140015cbc:	int3   
   140015cbd:	int3   
   140015cbe:	int3   
   140015cbf:	int3   
   140015cc0:	sub    rcx,0x18
   140015cc4:	jmp    0x14000d1b0
   140015cc9:	int3   
   140015cca:	int3   
   140015ccb:	int3   
   140015ccc:	int3   
   140015ccd:	int3   
   140015cce:	int3   
   140015ccf:	int3   
   140015cd0:	sub    rcx,0x78
   140015cd4:	jmp    0x140010790
   140015cd9:	int3   
   140015cda:	int3   
   140015cdb:	int3   
   140015cdc:	int3   
   140015cdd:	int3   
   140015cde:	int3   
   140015cdf:	int3   
   140015ce0:	sub    rcx,0x80
   140015ce7:	jmp    0x140010790
   140015cec:	int3   
   140015ced:	int3   
   140015cee:	int3   
   140015cef:	int3   
   140015cf0:	sub    rcx,0x88
   140015cf7:	jmp    0x140010790
   140015cfc:	int3   
   140015cfd:	int3   
   140015cfe:	int3   
   140015cff:	int3   
   140015d00:	mov    al,0x1
   140015d02:	ret    
   140015d03:	int3   
   140015d04:	int3   
   140015d05:	int3   
   140015d06:	int3   
   140015d07:	int3   
   140015d08:	int3   
   140015d09:	int3   
   140015d0a:	int3   
   140015d0b:	int3   
   140015d0c:	int3   
   140015d0d:	int3   
   140015d0e:	int3   
   140015d0f:	int3   
   140015d10:	mov    eax,0x80004005
   140015d15:	ret    
   140015d16:	int3   
   140015d17:	int3   
   140015d18:	lea    rax,[rip+0x29469]        # 0x14003f188
   140015d1f:	mov    QWORD PTR [rcx],rax
   140015d22:	ret    
   140015d23:	int3   
   140015d24:	int3   
   140015d25:	int3   
   140015d26:	int3   
   140015d27:	int3   
   140015d28:	int3   
   140015d29:	int3   
   140015d2a:	int3   
   140015d2b:	int3   
   140015d2c:	int3   
   140015d2d:	int3   
   140015d2e:	int3   
   140015d2f:	int3   
   140015d30:	sub    rcx,0x8
   140015d34:	jmp    0x14000f5a0
   140015d39:	int3   
   140015d3a:	int3   
   140015d3b:	int3   
   140015d3c:	int3   
   140015d3d:	int3   
   140015d3e:	int3   
   140015d3f:	int3   
   140015d40:	sub    rcx,0x8
   140015d44:	jmp    0x140032a70
   140015d49:	int3   
   140015d4a:	int3   
   140015d4b:	int3   
   140015d4c:	int3   
   140015d4d:	int3   
   140015d4e:	int3   
   140015d4f:	int3   
   140015d50:	sub    rcx,0x8
   140015d54:	jmp    0x140011c10
   140015d59:	int3   
   140015d5a:	int3   
   140015d5b:	int3   
   140015d5c:	int3   
   140015d5d:	int3   
   140015d5e:	int3   
   140015d5f:	int3   
   140015d60:	sub    rcx,0x18
   140015d64:	jmp    0x14002ae20
   140015d69:	int3   
   140015d6a:	int3   
   140015d6b:	int3   
   140015d6c:	int3   
   140015d6d:	int3   
   140015d6e:	int3   
   140015d6f:	int3   
   140015d70:	sub    rcx,0x18
   140015d74:	jmp    0x140013200
   140015d79:	int3   
   140015d7a:	int3   
   140015d7b:	int3   
   140015d7c:	int3   
   140015d7d:	int3   
   140015d7e:	int3   
   140015d7f:	int3   
   140015d80:	sub    rcx,0x8
   140015d84:	jmp    0x14002cf90
   140015d89:	int3   
   140015d8a:	int3   
   140015d8b:	int3   
   140015d8c:	int3   
   140015d8d:	int3   
   140015d8e:	int3   
   140015d8f:	int3   
   140015d90:	sub    rcx,0x20
   140015d94:	jmp    0x14002cf90
   140015d99:	int3   
   140015d9a:	int3   
   140015d9b:	int3   
   140015d9c:	int3   
   140015d9d:	int3   
   140015d9e:	int3   
   140015d9f:	int3   
   140015da0:	sub    rcx,0x8
   140015da4:	jmp    0x140013210
   140015da9:	int3   
   140015daa:	int3   
   140015dab:	int3   
   140015dac:	int3   
   140015dad:	int3   
   140015dae:	int3   
   140015daf:	int3   
   140015db0:	sub    rcx,0x10
   140015db4:	jmp    0x140013210
   140015db9:	int3   
   140015dba:	int3   
   140015dbb:	int3   
   140015dbc:	int3   
   140015dbd:	int3   
   140015dbe:	int3   
   140015dbf:	int3   
   140015dc0:	sub    rcx,0x18
   140015dc4:	jmp    0x140013210
   140015dc9:	int3   
   140015dca:	int3   
   140015dcb:	int3   
   140015dcc:	int3   
   140015dcd:	int3   
   140015dce:	int3   
   140015dcf:	int3   
   140015dd0:	sub    rcx,0x20
   140015dd4:	jmp    0x140013210
   140015dd9:	int3   
   140015dda:	int3   
   140015ddb:	int3   
   140015ddc:	int3   
   140015ddd:	int3   
   140015dde:	int3   
   140015ddf:	int3   
   140015de0:	sub    rcx,0x10
   140015de4:	jmp    0x1400341d0
   140015de9:	int3   
   140015dea:	int3   
   140015deb:	int3   
   140015dec:	int3   
   140015ded:	int3   
   140015dee:	int3   
   140015def:	int3   
   140015df0:	sub    rcx,0x18
   140015df4:	jmp    0x1400341d0
   140015df9:	int3   
   140015dfa:	int3   
   140015dfb:	int3   
   140015dfc:	int3   
   140015dfd:	int3   
   140015dfe:	int3   
   140015dff:	int3   
   140015e00:	sub    rcx,0x8
   140015e04:	jmp    0x140013200
   140015e09:	int3   
   140015e0a:	int3   
   140015e0b:	int3   
   140015e0c:	int3   
   140015e0d:	int3   
   140015e0e:	int3   
   140015e0f:	int3   
   140015e10:	sub    rcx,0x10
   140015e14:	jmp    0x140013200
   140015e19:	int3   
   140015e1a:	int3   
   140015e1b:	int3   
   140015e1c:	int3   
   140015e1d:	int3   
   140015e1e:	int3   
   140015e1f:	int3   
   140015e20:	sub    rcx,0x20
   140015e24:	jmp    0x140013200
   140015e29:	int3   
   140015e2a:	int3   
   140015e2b:	int3   
   140015e2c:	xor    eax,eax
   140015e2e:	mov    DWORD PTR [rcx+0x10],0x2
   140015e35:	mov    QWORD PTR [rcx],rax
   140015e38:	mov    QWORD PTR [rcx+0x8],rax
   140015e3c:	mov    DWORD PTR [rcx+0x18],eax
   140015e3f:	mov    rax,rcx
   140015e42:	ret    
   140015e43:	int3   
   140015e44:	int3   
   140015e45:	int3   
   140015e46:	int3   
   140015e47:	int3   
   140015e48:	int3   
   140015e49:	int3   
   140015e4a:	int3   
   140015e4b:	int3   
   140015e4c:	int3   
   140015e4d:	int3   
   140015e4e:	int3   
   140015e4f:	int3   
   140015e50:	or     eax,0xffffffff
   140015e53:	ret    
   140015e54:	int3   
   140015e55:	int3   
   140015e56:	int3   
   140015e57:	int3   
   140015e58:	int3   
   140015e59:	int3   
   140015e5a:	int3   
   140015e5b:	int3   
   140015e5c:	int3   
   140015e5d:	int3   
   140015e5e:	int3   
   140015e5f:	int3   
   140015e60:	int3   
   140015e61:	int3   
   140015e62:	int3   
   140015e63:	int3   
   140015e64:	int3   
   140015e65:	int3   
   140015e66:	int3   
   140015e67:	int3   
   140015e68:	int3   
   140015e69:	int3   
   140015e6a:	int3   
   140015e6b:	int3   
   140015e6c:	int3   
   140015e6d:	int3   
   140015e6e:	int3   
   140015e6f:	int3   
   140015e70:	lea    rcx,[rdx+0x250]
   140015e77:	jmp    0x140029f74
   140015e7c:	lea    rcx,[rdx+0x300]
   140015e83:	jmp    0x14002a334
   140015e88:	lea    rcx,[rdx+0x1f8]
   140015e8f:	jmp    0x14000f4f0
   140015e94:	lea    rcx,[rdx+0x198]
   140015e9b:	jmp    0x14000f4f0
   140015ea0:	lea    rcx,[rdx+0x510]
   140015ea7:	jmp    0x14000f4f0
   140015eac:	int3   
   140015ead:	int3   
   140015eae:	int3   
   140015eaf:	int3   
   140015eb0:	int3   
   140015eb1:	int3   
   140015eb2:	lea    rcx,[rdx+0x28]
   140015eb9:	jmp    0x14002a310
   140015ebe:	int3   
   140015ebf:	int3   
   140015ec0:	int3   
   140015ec1:	int3   
   140015ec2:	int3   
   140015ec3:	int3   
   140015ec4:	lea    rcx,[rdx+0x80]
   140015ecb:	jmp    0x140006920
   140015ed0:	lea    rcx,[rdx+0x180]
   140015ed7:	jmp    0x140006920
   140015edc:	lea    rcx,[rdx+0x200]
   140015ee3:	jmp    0x140006920
   140015ee8:	lea    rcx,[rdx+0x30]
   140015eef:	jmp    0x14000667c
   140015ef4:	lea    rcx,[rdx+0x100]
   140015efb:	jmp    0x140006920
   140015f00:	lea    rcx,[rdx+0x100]
   140015f07:	jmp    0x140006920
   140015f0c:	int3   
   140015f0d:	int3   
   140015f0e:	int3   
   140015f0f:	int3   
   140015f10:	int3   
   140015f11:	int3   
   140015f12:	int3   
   140015f13:	int3   
   140015f14:	int3   
   140015f15:	int3   
   140015f16:	int3   
   140015f17:	int3   
   140015f18:	int3   
   140015f19:	int3   
   140015f1a:	int3   
   140015f1b:	int3   
   140015f1c:	int3   
   140015f1d:	int3   
   140015f1e:	int3   
   140015f1f:	int3   
   140015f20:	lea    rcx,[rdx+0x58]
   140015f27:	jmp    0x14002a304
   140015f2c:	mov    rcx,QWORD PTR [rdx+0x28]
   140015f33:	jmp    0x140013de0
   140015f38:	mov    QWORD PTR [rsp+0x10],rdx
   140015f3d:	push   rbp
   140015f3e:	sub    rsp,0x20
   140015f42:	mov    rbp,rdx
   140015f45:	lea    rax,[rip+0x942a]        # 0x14001f376
   140015f4c:	add    rsp,0x20
   140015f50:	pop    rbp
   140015f51:	ret    
   140015f52:	int3   
   140015f53:	int3   
   140015f54:	int3   
   140015f55:	int3   
   140015f56:	int3   
   140015f57:	int3   
   140015f58:	int3   
   140015f59:	int3   
   140015f5a:	int3   
   140015f5b:	int3   
   140015f5c:	int3   
   140015f5d:	int3   
   140015f5e:	int3   
   140015f5f:	int3   
   140015f60:	lea    rcx,[rdx+0x38]
   140015f67:	jmp    0x14002a304
   140015f6c:	mov    rcx,QWORD PTR [rdx+0x128]
   140015f73:	jmp    0x140013de0
   140015f78:	mov    rcx,QWORD PTR [rdx+0x50]
   140015f7f:	jmp    0x14002a0f8
   140015f84:	mov    rcx,QWORD PTR [rdx+0x40]
   140015f8b:	add    rcx,0x58
   140015f8f:	jmp    0x14002a0f8
   140015f94:	mov    rcx,QWORD PTR [rdx+0x60]
   140015f9b:	jmp    0x14002a0f8
   140015fa0:	mov    rcx,QWORD PTR [rdx+0x40]
   140015fa7:	add    rcx,0x60
   140015fab:	jmp    0x14002a0f8
   140015fb0:	mov    rcx,QWORD PTR [rdx+0x58]
   140015fb7:	jmp    0x14002a0f8
   140015fbc:	mov    rcx,QWORD PTR [rdx+0x40]
   140015fc3:	add    rcx,0x68
   140015fc7:	jmp    0x14002a0f8
   140015fcc:	mov    rcx,QWORD PTR [rdx+0x40]
   140015fd3:	add    rcx,0x70
   140015fd7:	jmp    0x14002a0f8
   140015fdc:	mov    rcx,QWORD PTR [rdx+0x128]
   140015fe3:	add    rcx,0x8
   140015fe7:	jmp    0x140006920
   140015fec:	mov    rcx,QWORD PTR [rdx+0x128]
   140015ff3:	jmp    0x14002a0c4
   140015ff8:	mov    QWORD PTR [rsp+0x10],rdx
   140015ffd:	push   rbp
   140015ffe:	sub    rsp,0x20
   140016002:	mov    rbp,rdx
   140016005:	lea    rax,[rip+0x95a8]        # 0x14001f5b4
   14001600c:	add    rsp,0x20
   140016010:	pop    rbp
   140016011:	ret    
   140016012:	int3   
   140016013:	int3   
   140016014:	int3   
   140016015:	int3   
   140016016:	int3   
   140016017:	int3   
   140016018:	int3   
   140016019:	int3   
   14001601a:	int3   
   14001601b:	int3   
   14001601c:	int3   
   14001601d:	int3   
   14001601e:	int3   
   14001601f:	int3   
   140016020:	mov    rcx,QWORD PTR [rdx+0x60]
   140016027:	add    rcx,0x58
   14001602b:	jmp    0x14002a0f8
   140016030:	mov    rcx,QWORD PTR [rdx+0x60]
   140016037:	add    rcx,0x60
   14001603b:	jmp    0x14002a0f8
   140016040:	mov    rcx,QWORD PTR [rdx+0x60]
   140016047:	add    rcx,0x68
   14001604b:	jmp    0x14002a0f8
   140016050:	mov    rcx,QWORD PTR [rdx+0x60]
   140016057:	add    rcx,0x70
   14001605b:	jmp    0x14002a0f8
   140016060:	int3   
   140016061:	int3   
   140016062:	int3   
   140016063:	int3   
   140016064:	int3   
   140016065:	int3   
   140016066:	int3   
   140016067:	int3   
   140016068:	int3   
   140016069:	int3   
   14001606a:	int3   
   14001606b:	int3   
   14001606c:	int3   
   14001606d:	int3   
   14001606e:	int3   
   14001606f:	int3   
   140016070:	mov    rcx,QWORD PTR [rdx+0x20]
   140016077:	add    rcx,0x58
   14001607b:	jmp    0x14002a0f8
   140016080:	mov    rcx,QWORD PTR [rdx+0x20]
   140016087:	add    rcx,0x60
   14001608b:	jmp    0x14002a0f8
   140016090:	mov    rcx,QWORD PTR [rdx+0x20]
   140016097:	add    rcx,0x68
   14001609b:	jmp    0x14002a0f8
   1400160a0:	mov    rcx,QWORD PTR [rdx+0x20]
   1400160a7:	add    rcx,0x70
   1400160ab:	jmp    0x14002a0f8
   1400160b0:	int3   
   1400160b1:	int3   
   1400160b2:	int3   
   1400160b3:	int3   
   1400160b4:	int3   
   1400160b5:	int3   
   1400160b6:	int3   
   1400160b7:	int3   
   1400160b8:	int3   
   1400160b9:	int3   
   1400160ba:	int3   
   1400160bb:	int3   
   1400160bc:	int3   
   1400160bd:	int3   
   1400160be:	int3   
   1400160bf:	int3   
   1400160c0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400160c7:	jmp    0x140004fc4
   1400160cc:	int3   
   1400160cd:	int3   
   1400160ce:	int3   
   1400160cf:	int3   
   1400160d0:	int3   
   1400160d1:	int3   
   1400160d2:	mov    QWORD PTR [rsp+0x10],rdx
   1400160d7:	push   rbp
   1400160d8:	sub    rsp,0x20
   1400160dc:	mov    rbp,rdx
   1400160df:	lea    rax,[rip+0x99ce]        # 0x14001fab4
   1400160e6:	add    rsp,0x20
   1400160ea:	pop    rbp
   1400160eb:	ret    
   1400160ec:	int3   
   1400160ed:	int3   
   1400160ee:	int3   
   1400160ef:	int3   
   1400160f0:	int3   
   1400160f1:	int3   
   1400160f2:	int3   
   1400160f3:	int3   
   1400160f4:	int3   
   1400160f5:	int3   
   1400160f6:	int3   
   1400160f7:	int3   
   1400160f8:	int3   
   1400160f9:	int3   
   1400160fa:	int3   
   1400160fb:	int3   
   1400160fc:	int3   
   1400160fd:	int3   
   1400160fe:	int3   
   1400160ff:	int3   
   140016100:	rex push rbp
   140016102:	sub    rsp,0x20
   140016106:	mov    rbp,rdx
   140016109:	mov    rdx,QWORD PTR [rbp+0x20]
   14001610d:	mov    rcx,QWORD PTR [rbp+0x30]
   140016111:	call   0x14000dff0
   140016116:	add    rsp,0x20
   14001611a:	pop    rbp
   14001611b:	ret    
   14001611c:	mov    QWORD PTR [rsp+0x10],rdx
   140016121:	push   rbp
   140016122:	sub    rsp,0x20
   140016126:	mov    rbp,rdx
   140016129:	mov    rcx,QWORD PTR [rbp+0x20]
   14001612d:	mov    rax,QWORD PTR [rip+0x38d4c]        # 0x14004ee80
   140016134:	mov    QWORD PTR [rcx+0x10],rax
   140016138:	mov    QWORD PTR [rip+0x38d41],rcx        # 0x14004ee80
   14001613f:	xor    edx,edx
   140016141:	xor    ecx,ecx
   140016143:	call   0x14001562a
   140016148:	nop
   140016149:	int3   
   14001614a:	int3   
   14001614b:	int3   
   14001614c:	int3   
   14001614d:	int3   
   14001614e:	int3   
   14001614f:	int3   
   140016150:	mov    QWORD PTR [rsp+0x10],rdx
   140016155:	push   rbp
   140016156:	sub    rsp,0x20
   14001615a:	mov    rbp,rdx
   14001615d:	lea    rax,[rip+0x99cb]        # 0x14001fb2f
   140016164:	add    rsp,0x20
   140016168:	pop    rbp
   140016169:	ret    
   14001616a:	int3   
   14001616b:	int3   
   14001616c:	int3   
   14001616d:	int3   
   14001616e:	int3   
   14001616f:	int3   
   140016170:	int3   
   140016171:	mov    QWORD PTR [rsp+0x10],rdx
   140016176:	push   rbp
   140016177:	sub    rsp,0x20
   14001617b:	mov    rbp,rdx
   14001617e:	lea    rax,[rip+0x11ebd]        # 0x140028042
   140016185:	add    rsp,0x20
   140016189:	pop    rbp
   14001618a:	ret    
   14001618b:	int3   
   14001618c:	int3   
   14001618d:	int3   
   14001618e:	int3   
   14001618f:	int3   
   140016190:	int3   
   140016191:	int3   
   140016192:	rex push rbp
   140016194:	sub    rsp,0x20
   140016198:	mov    rbp,rdx
   14001619b:	mov    rax,QWORD PTR [rcx]
   14001619e:	xor    ecx,ecx
   1400161a0:	cmp    DWORD PTR [rax],0xc0000017
   1400161a6:	sete   cl
   1400161a9:	mov    eax,ecx
   1400161ab:	add    rsp,0x20
   1400161af:	pop    rbp
   1400161b0:	ret    
   1400161b1:	int3   
   1400161b2:	int3   
   1400161b3:	int3   
   1400161b4:	int3   
   1400161b5:	int3   
   1400161b6:	int3   
   1400161b7:	int3   
   1400161b8:	rex push rbp
   1400161ba:	sub    rsp,0x20
   1400161be:	mov    rbp,rdx
   1400161c1:	mov    rcx,QWORD PTR [rbp+0x60]
   1400161c5:	add    rcx,0x10
   1400161c9:	add    rsp,0x20
   1400161cd:	pop    rbp
   1400161ce:	rex.W jmp QWORD PTR [rip+0x27203]        # 0x14003d3d8
   1400161d5:	int3   
   1400161d6:	int3   
   1400161d7:	int3   
   1400161d8:	int3   
   1400161d9:	int3   
   1400161da:	int3   
   1400161db:	int3   
   1400161dc:	mov    rcx,QWORD PTR [rdx+0x40]
   1400161e3:	add    rcx,0x30
   1400161e7:	jmp    0x14000f4f0
   1400161ec:	mov    rcx,QWORD PTR [rdx+0x40]
   1400161f3:	add    rcx,0x38
   1400161f7:	jmp    0x14000f4f0
   1400161fc:	int3   
   1400161fd:	int3   
   1400161fe:	int3   
   1400161ff:	int3   
   140016200:	int3   
   140016201:	int3   
   140016202:	mov    QWORD PTR [rsp+0x10],rdx
   140016207:	push   rbp
   140016208:	sub    rsp,0x20
   14001620c:	mov    rbp,rdx
   14001620f:	lea    rax,[rip+0x12082]        # 0x140028298
   140016216:	add    rsp,0x20
   14001621a:	pop    rbp
   14001621b:	ret    
   14001621c:	int3   
   14001621d:	int3   
   14001621e:	int3   
   14001621f:	int3   
   140016220:	int3   
   140016221:	int3   
   140016222:	int3   
   140016223:	mov    QWORD PTR [rsp+0x10],rdx
   140016228:	push   rbp
   140016229:	sub    rsp,0x20
   14001622d:	mov    rbp,rdx
   140016230:	lea    rax,[rip+0x120bb]        # 0x1400282f2
   140016237:	add    rsp,0x20
   14001623b:	pop    rbp
   14001623c:	ret    
   14001623d:	int3   
   14001623e:	int3   
   14001623f:	int3   
   140016240:	int3   
   140016241:	int3   
   140016242:	int3   
   140016243:	int3   
   140016244:	lea    rcx,[rdx+0x28]
   14001624b:	jmp    0x140029ffc
   140016250:	int3   
   140016251:	int3   
   140016252:	int3   
   140016253:	int3   
   140016254:	int3   
   140016255:	int3   
   140016256:	mov    rcx,QWORD PTR [rdx+0x40]
   14001625d:	jmp    0x14000d7ac
   140016262:	int3   
   140016263:	int3   
   140016264:	int3   
   140016265:	int3   
   140016266:	int3   
   140016267:	int3   
   140016268:	mov    rcx,QWORD PTR [rdx+0x40]
   14001626f:	add    rcx,0x20
   140016273:	jmp    0x140029fd8
   140016278:	mov    rcx,QWORD PTR [rdx+0x40]
   14001627f:	add    rcx,0x58
   140016283:	jmp    0x14000f4f0
   140016288:	mov    rcx,QWORD PTR [rdx+0x40]
   14001628f:	add    rcx,0x60
   140016293:	jmp    0x14000f4f0
   140016298:	mov    rcx,QWORD PTR [rdx+0x40]
   14001629f:	add    rcx,0x68
   1400162a3:	jmp    0x14000f4f0
   1400162a8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400162af:	add    rcx,0x70
   1400162b3:	jmp    0x14000f4f0
   1400162b8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400162bf:	add    rcx,0x78
   1400162c3:	jmp    0x14000db1c
   1400162c8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400162cf:	add    rcx,0xc8
   1400162d6:	jmp    0x14000f4f0
   1400162db:	int3   
   1400162dc:	int3   
   1400162dd:	int3   
   1400162de:	int3   
   1400162df:	int3   
   1400162e0:	int3   
   1400162e1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400162e8:	add    rcx,0x8
   1400162ec:	jmp    0x14002a328
   1400162f1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400162f8:	add    rcx,0x38
   1400162fc:	jmp    0x14000db1c
   140016301:	int3   
   140016302:	int3   
   140016303:	int3   
   140016304:	int3   
   140016305:	int3   
   140016306:	int3   
   140016307:	mov    rcx,QWORD PTR [rdx+0x40]
   14001630e:	add    rcx,0x8
   140016312:	jmp    0x14002a328
   140016317:	int3   
   140016318:	int3   
   140016319:	int3   
   14001631a:	int3   
   14001631b:	int3   
   14001631c:	int3   
   14001631d:	rex push rbp
   14001631f:	sub    rsp,0x20
   140016323:	mov    rbp,rdx
   140016326:	mov    rax,QWORD PTR [rcx]
   140016329:	xor    ecx,ecx
   14001632b:	cmp    DWORD PTR [rax],0xc0000017
   140016331:	sete   cl
   140016334:	mov    eax,ecx
   140016336:	add    rsp,0x20
   14001633a:	pop    rbp
   14001633b:	ret    
   14001633c:	int3   
   14001633d:	int3   
   14001633e:	int3   
   14001633f:	int3   
   140016340:	int3   
   140016341:	int3   
   140016342:	int3   
   140016343:	mov    rcx,QWORD PTR [rdx+0x28]
   14001634a:	jmp    0x140013de0
   14001634f:	mov    QWORD PTR [rsp+0x10],rdx
   140016354:	push   rbp
   140016355:	sub    rsp,0x20
   140016359:	mov    rbp,rdx
   14001635c:	lea    rax,[rip+0x1225d]        # 0x1400285c0
   140016363:	add    rsp,0x20
   140016367:	pop    rbp
   140016368:	ret    
   140016369:	int3   
   14001636a:	int3   
   14001636b:	int3   
   14001636c:	int3   
   14001636d:	int3   
   14001636e:	int3   
   14001636f:	int3   
   140016370:	mov    rcx,QWORD PTR [rdx+0x40]
   140016377:	jmp    0x140013de0
   14001637c:	int3   
   14001637d:	int3   
   14001637e:	int3   
   14001637f:	int3   
   140016380:	int3   
   140016381:	int3   
   140016382:	mov    rcx,QWORD PTR [rdx+0x28]
   140016389:	jmp    0x140013de0
   14001638e:	mov    QWORD PTR [rsp+0x10],rdx
   140016393:	push   rbp
   140016394:	sub    rsp,0x20
   140016398:	mov    rbp,rdx
   14001639b:	lea    rax,[rip+0x12298]        # 0x14002863a
   1400163a2:	add    rsp,0x20
   1400163a6:	pop    rbp
   1400163a7:	ret    
   1400163a8:	int3   
   1400163a9:	int3   
   1400163aa:	int3   
   1400163ab:	int3   
   1400163ac:	int3   
   1400163ad:	int3   
   1400163ae:	int3   
   1400163af:	mov    rcx,QWORD PTR [rdx+0x40]
   1400163b6:	jmp    0x14001018c
   1400163bb:	int3   
   1400163bc:	int3   
   1400163bd:	int3   
   1400163be:	int3   
   1400163bf:	int3   
   1400163c0:	int3   
   1400163c1:	lea    rcx,[rdx+0x40]
   1400163c8:	jmp    0x14002a394
   1400163cd:	int3   
   1400163ce:	int3   
   1400163cf:	int3   
   1400163d0:	int3   
   1400163d1:	int3   
   1400163d2:	int3   
   1400163d3:	mov    rcx,QWORD PTR [rdx+0x50]
   1400163da:	add    rcx,0x10
   1400163de:	jmp    0x140029fd8
   1400163e3:	mov    rcx,QWORD PTR [rdx+0x50]
   1400163ea:	add    rcx,0x58
   1400163ee:	jmp    0x14000f4f0
   1400163f3:	mov    rcx,QWORD PTR [rdx+0x50]
   1400163fa:	add    rcx,0x60
   1400163fe:	jmp    0x14000db1c
   140016403:	mov    rcx,QWORD PTR [rdx+0x50]
   14001640a:	add    rcx,0x88
   140016411:	jmp    0x14000db1c
   140016416:	mov    rcx,QWORD PTR [rdx+0x50]
   14001641d:	add    rcx,0xb0
   140016424:	jmp    0x14000db1c
   140016429:	mov    rcx,QWORD PTR [rdx+0x50]
   140016430:	add    rcx,0xd8
   140016437:	jmp    0x14000fb68
   14001643c:	mov    rcx,QWORD PTR [rdx+0x50]
   140016443:	add    rcx,0x108
   14001644a:	jmp    0x140029f74
   14001644f:	mov    rcx,QWORD PTR [rdx+0x50]
   140016456:	add    rcx,0x110
   14001645d:	jmp    0x140029f74
   140016462:	int3   
   140016463:	int3   
   140016464:	int3   
   140016465:	int3   
   140016466:	int3   
   140016467:	int3   
   140016468:	mov    rcx,QWORD PTR [rdx+0x40]
   14001646f:	add    rcx,0x10
   140016473:	jmp    0x140029fd8
   140016478:	mov    rcx,QWORD PTR [rdx+0x40]
   14001647f:	add    rcx,0x58
   140016483:	jmp    0x14000f4f0
   140016488:	mov    rcx,QWORD PTR [rdx+0x40]
   14001648f:	add    rcx,0x60
   140016493:	jmp    0x14000db1c
   140016498:	mov    rcx,QWORD PTR [rdx+0x40]
   14001649f:	add    rcx,0x88
   1400164a6:	jmp    0x14000db1c
   1400164ab:	mov    rcx,QWORD PTR [rdx+0x40]
   1400164b2:	add    rcx,0xb0
   1400164b9:	jmp    0x14000db1c
   1400164be:	mov    rcx,QWORD PTR [rdx+0x48]
   1400164c5:	add    rcx,0x8
   1400164c9:	jmp    0x14000db1c
   1400164ce:	int3   
   1400164cf:	int3   
   1400164d0:	int3   
   1400164d1:	int3   
   1400164d2:	int3   
   1400164d3:	int3   
   1400164d4:	mov    rcx,QWORD PTR [rdx+0x70]
   1400164db:	jmp    0x140013de0
   1400164e0:	mov    rcx,QWORD PTR [rdx+0x70]
   1400164e7:	jmp    0x140013de0
   1400164ec:	int3   
   1400164ed:	int3   
   1400164ee:	int3   
   1400164ef:	int3   
   1400164f0:	int3   
   1400164f1:	int3   
   1400164f2:	mov    rcx,QWORD PTR [rdx+0x40]
   1400164f9:	jmp    0x14002eaf4
   1400164fe:	int3   
   1400164ff:	int3   
   140016500:	int3   
   140016501:	int3   
   140016502:	int3   
   140016503:	int3   
   140016504:	mov    rcx,QWORD PTR [rdx+0x40]
   14001650b:	jmp    0x140015d18
   140016510:	mov    rcx,QWORD PTR [rdx+0x40]
   140016517:	add    rcx,0x8
   14001651b:	jmp    0x14000f3c0
   140016520:	int3   
   140016521:	int3   
   140016522:	int3   
   140016523:	int3   
   140016524:	int3   
   140016525:	int3   
   140016526:	mov    rcx,QWORD PTR [rdx+0x40]
   14001652d:	jmp    0x140015d18
   140016532:	int3   
   140016533:	int3   
   140016534:	int3   
   140016535:	int3   
   140016536:	int3   
   140016537:	int3   
   140016538:	lea    rcx,[rdx+0x68]
   14001653f:	jmp    0x14002a384
   140016544:	int3   
   140016545:	int3   
   140016546:	int3   
   140016547:	int3   
   140016548:	int3   
   140016549:	int3   
   14001654a:	mov    rcx,QWORD PTR [rdx+0x40]
   140016551:	add    rcx,0x90
   140016558:	jmp    0x140029fd8
   14001655d:	mov    rcx,QWORD PTR [rdx+0x40]
   140016564:	jmp    0x14000da40
   140016569:	mov    rcx,QWORD PTR [rdx+0x40]
   140016570:	add    rcx,0xc8
   140016577:	jmp    0x14000f4f0
   14001657c:	mov    rcx,QWORD PTR [rdx+0x40]
   140016583:	add    rcx,0xd0
   14001658a:	jmp    0x14000f4f0
   14001658f:	int3   
   140016590:	int3   
   140016591:	int3   
   140016592:	int3   
   140016593:	int3   
   140016594:	int3   
   140016595:	mov    rcx,QWORD PTR [rdx+0x28]
   14001659c:	jmp    0x140013de0
   1400165a1:	mov    QWORD PTR [rsp+0x10],rdx
   1400165a6:	push   rbp
   1400165a7:	sub    rsp,0x20
   1400165ab:	mov    rbp,rdx
   1400165ae:	lea    rax,[rip+0x12a2d]        # 0x140028fe2
   1400165b5:	add    rsp,0x20
   1400165b9:	pop    rbp
   1400165ba:	ret    
   1400165bb:	int3   
   1400165bc:	int3   
   1400165bd:	int3   
   1400165be:	int3   
   1400165bf:	int3   
   1400165c0:	int3   
   1400165c1:	int3   
   1400165c2:	mov    rcx,QWORD PTR [rdx+0x48]
   1400165c9:	jmp    0x140013de0
   1400165ce:	int3   
   1400165cf:	int3   
   1400165d0:	int3   
   1400165d1:	int3   
   1400165d2:	int3   
   1400165d3:	int3   
   1400165d4:	lea    rcx,[rdx+0xa0]
   1400165db:	jmp    0x14000f3c0
   1400165e0:	lea    rcx,[rdx+0x98]
   1400165e7:	jmp    0x14000f3c0
   1400165ec:	lea    rcx,[rdx+0x40]
   1400165f3:	jmp    0x14000f3c0
   1400165f8:	lea    rcx,[rdx+0xa8]
   1400165ff:	jmp    0x14000f3c0
   140016604:	mov    rcx,QWORD PTR [rdx+0x58]
   14001660b:	jmp    0x140013de0
   140016610:	int3   
   140016611:	int3   
   140016612:	int3   
   140016613:	int3   
   140016614:	int3   
   140016615:	int3   
   140016616:	mov    rcx,QWORD PTR [rdx+0x40]
   14001661d:	add    rcx,0x10
   140016621:	jmp    0x14002a038
   140016626:	mov    rcx,QWORD PTR [rdx+0x40]
   14001662d:	add    rcx,0x18
   140016631:	jmp    0x14002a038
   140016636:	mov    rcx,QWORD PTR [rdx+0x40]
   14001663d:	add    rcx,0x20
   140016641:	jmp    0x14000f3c0
   140016646:	mov    rcx,QWORD PTR [rdx+0x40]
   14001664d:	add    rcx,0x28
   140016651:	jmp    0x14000f3c0
   140016656:	mov    rcx,QWORD PTR [rdx+0x40]
   14001665d:	add    rcx,0x30
   140016661:	jmp    0x14000f3c0
   140016666:	mov    rcx,QWORD PTR [rdx+0x40]
   14001666d:	add    rcx,0x38
   140016671:	jmp    0x14000f4f0
   140016676:	mov    rcx,QWORD PTR [rdx+0x40]
   14001667d:	add    rcx,0x48
   140016681:	jmp    0x14000db1c
   140016686:	mov    rcx,QWORD PTR [rdx+0x40]
   14001668d:	add    rcx,0x70
   140016691:	jmp    0x14000f3c0
   140016696:	mov    rcx,QWORD PTR [rdx+0x40]
   14001669d:	add    rcx,0x78
   1400166a1:	jmp    0x14000f3c0
   1400166a6:	mov    rcx,QWORD PTR [rdx+0x40]
   1400166ad:	add    rcx,0x80
   1400166b4:	jmp    0x14000f3c0
   1400166b9:	mov    rcx,QWORD PTR [rdx+0x40]
   1400166c0:	add    rcx,0x98
   1400166c7:	jmp    0x14000f4f0
   1400166cc:	mov    rcx,QWORD PTR [rdx+0x40]
   1400166d3:	add    rcx,0xa0
   1400166da:	jmp    0x14000f4f0
   1400166df:	mov    rcx,QWORD PTR [rdx+0x40]
   1400166e6:	add    rcx,0xa8
   1400166ed:	jmp    0x14000f4f0
   1400166f2:	int3   
   1400166f3:	int3   
   1400166f4:	int3   
   1400166f5:	int3   
   1400166f6:	int3   
   1400166f7:	int3   
   1400166f8:	lea    rcx,[rdx+0x58]
   1400166ff:	jmp    0x14000f4f0
   140016704:	int3   
   140016705:	int3   
   140016706:	int3   
   140016707:	int3   
   140016708:	int3   
   140016709:	int3   
   14001670a:	mov    rcx,QWORD PTR [rdx+0x28]
   140016711:	jmp    0x140013de0
   140016716:	mov    QWORD PTR [rsp+0x10],rdx
   14001671b:	push   rbp
   14001671c:	sub    rsp,0x20
   140016720:	mov    rbp,rdx
   140016723:	lea    rax,[rip+0x13258]        # 0x140029982
   14001672a:	add    rsp,0x20
   14001672e:	pop    rbp
   14001672f:	ret    
   140016730:	int3   
   140016731:	int3   
   140016732:	int3   
   140016733:	int3   
   140016734:	int3   
   140016735:	int3   
   140016736:	int3   
   140016737:	lea    rcx,[rdx+0x190]
   14001673e:	jmp    0x14000f4f0
   140016743:	lea    rcx,[rdx+0x158]
   14001674a:	jmp    0x140029f74
   14001674f:	lea    rcx,[rdx+0x148]
   140016756:	jmp    0x140029f74
   14001675b:	lea    rcx,[rdx+0x140]
   140016762:	jmp    0x14000f3c0
   140016767:	lea    rcx,[rdx+0x150]
   14001676e:	jmp    0x14000f3c0
   140016773:	lea    rcx,[rdx+0x138]
   14001677a:	jmp    0x14000f3c0
   14001677f:	mov    rcx,QWORD PTR [rdx+0x178]
   140016786:	jmp    0x140013de0
   14001678b:	int3   
   14001678c:	int3   
   14001678d:	int3   
   14001678e:	int3   
   14001678f:	int3   
   140016790:	int3   
   140016791:	mov    rcx,QWORD PTR [rdx+0x40]
   140016798:	add    rcx,0x8
   14001679c:	jmp    0x14000db1c
   1400167a1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400167a8:	add    rcx,0x30
   1400167ac:	jmp    0x14000f4f0
   1400167b1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400167b8:	add    rcx,0x38
   1400167bc:	jmp    0x14000f4f0
   1400167c1:	mov    rcx,QWORD PTR [rdx+0x48]
   1400167c8:	add    rcx,0x8
   1400167cc:	jmp    0x14000db1c
   1400167d1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400167d8:	add    rcx,0x40
   1400167dc:	jmp    0x140034c70
   1400167e1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400167e8:	add    rcx,0x90
   1400167ef:	jmp    0x14000db1c
   1400167f4:	int3   
   1400167f5:	int3   
   1400167f6:	int3   
   1400167f7:	int3   
   1400167f8:	int3   
   1400167f9:	int3   
   1400167fa:	lea    rcx,[rdx+0x48]
   140016801:	jmp    0x14002a384
   140016806:	int3   
   140016807:	int3   
   140016808:	int3   
   140016809:	int3   
   14001680a:	int3   
   14001680b:	int3   
   14001680c:	mov    rcx,QWORD PTR [rdx+0x50]
   140016813:	jmp    0x14002a044
   140016818:	mov    rcx,QWORD PTR [rdx+0x50]
   14001681f:	add    rcx,0x10
   140016823:	jmp    0x14000f4f0
   140016828:	mov    rcx,QWORD PTR [rdx+0x50]
   14001682f:	add    rcx,0x18
   140016833:	jmp    0x140029f74
   140016838:	mov    rcx,QWORD PTR [rdx+0x50]
   14001683f:	add    rcx,0x20
   140016843:	jmp    0x140029f74
   140016848:	mov    rcx,QWORD PTR [rdx+0x50]
   14001684f:	add    rcx,0x70
   140016853:	jmp    0x14000f3c0
   140016858:	mov    rcx,QWORD PTR [rdx+0x50]
   14001685f:	add    rcx,0x78
   140016863:	jmp    0x14000f3c0
   140016868:	mov    rcx,QWORD PTR [rdx+0x50]
   14001686f:	add    rcx,0x80
   140016876:	jmp    0x14000f3c0
   14001687b:	int3   
   14001687c:	int3   
   14001687d:	int3   
   14001687e:	int3   
   14001687f:	int3   
   140016880:	int3   
   140016881:	mov    rcx,QWORD PTR [rdx+0x70]
   140016888:	jmp    0x14002a044
   14001688d:	mov    rcx,QWORD PTR [rdx+0x70]
   140016894:	add    rcx,0x10
   140016898:	jmp    0x14000f4f0
   14001689d:	mov    rcx,QWORD PTR [rdx+0x70]
   1400168a4:	add    rcx,0x18
   1400168a8:	jmp    0x140029f74
   1400168ad:	mov    rcx,QWORD PTR [rdx+0x70]
   1400168b4:	add    rcx,0x20
   1400168b8:	jmp    0x140029f74
   1400168bd:	mov    rcx,QWORD PTR [rdx+0x70]
   1400168c4:	add    rcx,0x70
   1400168c8:	jmp    0x14000f3c0
   1400168cd:	mov    rcx,QWORD PTR [rdx+0x70]
   1400168d4:	add    rcx,0x78
   1400168d8:	jmp    0x14000f3c0
   1400168dd:	mov    rcx,QWORD PTR [rdx+0x70]
   1400168e4:	add    rcx,0x80
   1400168eb:	jmp    0x14000f3c0
   1400168f0:	int3   
   1400168f1:	int3   
   1400168f2:	int3   
   1400168f3:	int3   
   1400168f4:	int3   
   1400168f5:	int3   
   1400168f6:	mov    rcx,QWORD PTR [rdx+0x40]
   1400168fd:	jmp    0x140033b68
   140016902:	int3   
   140016903:	int3   
   140016904:	int3   
   140016905:	int3   
   140016906:	int3   
   140016907:	int3   
   140016908:	lea    rcx,[rdx+0x40]
   14001690f:	jmp    0x14000f4f0
   140016914:	int3   
   140016915:	int3   
   140016916:	int3   
   140016917:	int3   
   140016918:	int3   
   140016919:	int3   
   14001691a:	lea    rcx,[rdx+0xb0]
   140016921:	jmp    0x14000f4f0
   140016926:	int3   
   140016927:	int3   
   140016928:	int3   
   140016929:	int3   
   14001692a:	int3   
   14001692b:	int3   
   14001692c:	lea    rcx,[rdx+0x20]
   140016933:	jmp    0x14000f4f0
   140016938:	lea    rcx,[rdx+0x88]
   14001693f:	jmp    0x14000f4f0
   140016944:	lea    rcx,[rdx+0x80]
   14001694b:	jmp    0x14000f4f0
   140016950:	lea    rcx,[rdx+0x78]
   140016957:	jmp    0x14000f4f0
   14001695c:	int3   
   14001695d:	int3   
   14001695e:	int3   
   14001695f:	int3   
   140016960:	int3   
   140016961:	int3   
   140016962:	mov    rcx,QWORD PTR [rdx+0x40]
   140016969:	add    rcx,0x28
   14001696d:	jmp    0x140029fd8
   140016972:	mov    rcx,QWORD PTR [rdx+0x40]
   140016979:	add    rcx,0x60
   14001697d:	jmp    0x14000db1c
   140016982:	mov    rcx,QWORD PTR [rdx+0x40]
   140016989:	add    rcx,0x88
   140016990:	jmp    0x14000f4f0
   140016995:	mov    rcx,QWORD PTR [rdx+0x40]
   14001699c:	add    rcx,0x90
   1400169a3:	jmp    0x14000f4f0
   1400169a8:	mov    rcx,QWORD PTR [rdx+0x40]
   1400169af:	add    rcx,0x98
   1400169b6:	jmp    0x14000f4f0
   1400169bb:	mov    rcx,QWORD PTR [rdx+0x40]
   1400169c2:	add    rcx,0xa0
   1400169c9:	jmp    0x14000f4f0
   1400169ce:	mov    rcx,QWORD PTR [rdx+0x40]
   1400169d5:	add    rcx,0xa8
   1400169dc:	jmp    0x14000db1c
   1400169e1:	int3   
   1400169e2:	int3   
   1400169e3:	int3   
   1400169e4:	int3   
   1400169e5:	int3   
   1400169e6:	int3   
   1400169e7:	rex push rbp
   1400169e9:	sub    rsp,0x20
   1400169ed:	mov    rbp,rdx
   1400169f0:	mov    rax,QWORD PTR [rcx]
   1400169f3:	mov    rdx,rcx
   1400169f6:	mov    ecx,DWORD PTR [rax]
   1400169f8:	call   0x1400146fe
   1400169fd:	nop
   1400169fe:	add    rsp,0x20
   140016a02:	pop    rbp
   140016a03:	ret    
   140016a04:	int3   
   140016a05:	int3   
   140016a06:	int3   
   140016a07:	int3   
   140016a08:	int3   
   140016a09:	int3   
   140016a0a:	int3   
   140016a0b:	rex push rbp
   140016a0d:	sub    rsp,0x20
   140016a11:	mov    rbp,rdx
   140016a14:	cmp    DWORD PTR [rbp+0x20],0x0
   140016a18:	jne    0x140016a30
   140016a1a:	mov    r9,QWORD PTR [rbp+0x78]
   140016a1e:	mov    r8d,DWORD PTR [rbp+0x70]
   140016a22:	mov    rdx,QWORD PTR [rbp+0x68]
   140016a26:	mov    rcx,QWORD PTR [rbp+0x60]
   140016a2a:	call   0x140014264
   140016a2f:	nop
   140016a30:	add    rsp,0x20
   140016a34:	pop    rbp
   140016a35:	ret    
   140016a36:	int3   
   140016a37:	int3   
   140016a38:	int3   
   140016a39:	int3   
   140016a3a:	int3   
   140016a3b:	int3   
   140016a3c:	int3   
   140016a3d:	rex push rbp
   140016a3f:	sub    rsp,0x20
   140016a43:	mov    rbp,rdx
   140016a46:	mov    QWORD PTR [rbp+0x38],rcx
   140016a4a:	mov    QWORD PTR [rbp+0x28],rcx
   140016a4e:	mov    rax,QWORD PTR [rbp+0x28]
   140016a52:	mov    rcx,QWORD PTR [rax]
   140016a55:	mov    QWORD PTR [rbp+0x30],rcx
   140016a59:	mov    rax,QWORD PTR [rbp+0x30]
   140016a5d:	cmp    DWORD PTR [rax],0xe06d7363
   140016a63:	je     0x140016a71
   140016a65:	mov    DWORD PTR [rbp+0x20],0x0
   140016a6c:	mov    eax,DWORD PTR [rbp+0x20]
   140016a6f:	jmp    0x140016a78
   140016a71:	call   QWORD PTR [rip+0x26ad1]        # 0x14003d548
   140016a77:	nop
   140016a78:	add    rsp,0x20
   140016a7c:	pop    rbp
   140016a7d:	ret    
   140016a7e:	int3   
   140016a7f:	int3   
   140016a80:	int3   
   140016a81:	int3   
   140016a82:	int3   
   140016a83:	int3   
   140016a84:	int3   
   140016a85:	rex push rbp
   140016a87:	sub    rsp,0x20
   140016a8b:	mov    rbp,rdx
   140016a8e:	mov    ecx,0x8
   140016a93:	call   0x1400149ae
   140016a98:	nop
   140016a99:	add    rsp,0x20
   140016a9d:	pop    rbp
   140016a9e:	ret    
   140016a9f:	int3   
   140016aa0:	int3   
   140016aa1:	int3   
   140016aa2:	int3   
   140016aa3:	int3   
   140016aa4:	int3   
   140016aa5:	int3   
   140016aa6:	rex push rbp
   140016aa8:	sub    rsp,0x20
   140016aac:	mov    rbp,rdx
   140016aaf:	cmp    DWORD PTR [rbp+0x24],0x0
   140016ab3:	jne    0x140016acb
   140016ab5:	mov    r9,QWORD PTR [rbp+0x70]
   140016ab9:	mov    r8d,DWORD PTR [rbp+0x20]
   140016abd:	mov    rdx,QWORD PTR [rbp+0x58]
   140016ac1:	mov    rcx,QWORD PTR [rbp+0x50]
   140016ac5:	call   0x140014264
   140016aca:	nop
   140016acb:	add    rsp,0x20
   140016acf:	pop    rbp
   140016ad0:	ret    
   140016ad1:	int3   
   140016ad2:	int3   
   140016ad3:	int3   
   140016ad4:	int3   
   140016ad5:	int3   
   140016ad6:	int3   
   140016ad7:	int3   
   140016ad8:	int3   
   140016ad9:	int3   
   140016ada:	int3   
   140016adb:	int3   
   140016adc:	int3   
   140016add:	int3   
   140016ade:	int3   
   140016adf:	int3   
   140016ae0:	rex push rbp
   140016ae2:	sub    rsp,0x20
   140016ae6:	mov    rbp,rdx
   140016ae9:	mov    rax,QWORD PTR [rcx]
   140016aec:	xor    ecx,ecx
   140016aee:	cmp    DWORD PTR [rax],0xc0000005
   140016af4:	sete   cl
   140016af7:	mov    eax,ecx
   140016af9:	add    rsp,0x20
   140016afd:	pop    rbp
   140016afe:	ret    
   140016aff:	int3   
   140016b00:	lea    rcx,[rip+0x380b9]        # 0x14004ebc0
   140016b07:	jmp    0x140008034
   140016b0c:	int3   
   140016b0d:	int3   
   140016b0e:	int3   
   140016b0f:	int3   
   140016b10:	jmp    0x14000ed7c
   140016b15:	int3   
   140016b16:	int3   
   140016b17:	int3   
   140016b18:	int3   
   140016b19:	int3   
   140016b1a:	int3   
   140016b1b:	int3   
   140016b1c:	int3   
   140016b1d:	int3   
   140016b1e:	int3   
   140016b1f:	int3   
   140016b20:	jmp    0x14000edc8
   140016b25:	int3   
   140016b26:	int3   
   140016b27:	int3   
   140016b28:	int3   
   140016b29:	int3   
   140016b2a:	int3   
   140016b2b:	int3   
   140016b2c:	int3   
   140016b2d:	int3   
   140016b2e:	int3   
   140016b2f:	int3   
   140016b30:	jmp    0x14000ef4c
   140016b35:	int3   
   140016b36:	int3   
   140016b37:	int3   
   140016b38:	int3   
   140016b39:	int3   
   140016b3a:	int3   
   140016b3b:	int3   
   140016b3c:	int3   
   140016b3d:	int3   
   140016b3e:	int3   
   140016b3f:	int3   
   140016b40:	lea    rax,[rip+0x283c1]        # 0x14003ef08
   140016b47:	lea    rcx,[rip+0x38172]        # 0x14004ecc0
   140016b4e:	mov    QWORD PTR [rip+0x3816b],rax        # 0x14004ecc0
   140016b55:	jmp    0x14000d934
   140016b5a:	int3   
   140016b5b:	int3   
   140016b5c:	int3   
   140016b5d:	int3   
   140016b5e:	int3   
   140016b5f:	int3   
   140016b60:	lea    rcx,[rip+0x380d9]        # 0x14004ec40
   140016b67:	jmp    0x14000d934
   140016b6c:	int3   
   140016b6d:	int3   
   140016b6e:	int3   
   140016b6f:	int3   
   140016b70:	lea    rcx,[rip+0x384f9]        # 0x14004f070
   140016b77:	rex.W jmp QWORD PTR [rip+0x2683a]        # 0x14003d3b8
   140016b7e:	int3   
   140016b7f:	int3   
   140016b80:	lea    rcx,[rip+0x38511]        # 0x14004f098
   140016b87:	rex.W jmp QWORD PTR [rip+0x2682a]        # 0x14003d3b8
   140016b8e:	int3   
   140016b8f:	int3   
   140016b90:	lea    rcx,[rip+0x38529]        # 0x14004f0c0
   140016b97:	rex.W jmp QWORD PTR [rip+0x2681a]        # 0x14003d3b8
   140016b9e:	int3   
   140016b9f:	int3   
   140016ba0:	jmp    0x14000f1bc
   140016ba5:	int3   
   140016ba6:	int3   
   140016ba7:	int3   
   140016ba8:	int3   
   140016ba9:	int3   
   140016baa:	int3   
   140016bab:	int3   
   140016bac:	int3   
   140016bad:	int3   
   140016bae:	int3   
   140016baf:	int3   
   140016bb0:	jmp    0x14000bee0
   140016bb5:	int3   
   140016bb6:	int3   
   140016bb7:	int3   
   140016bb8:	int3   
   140016bb9:	int3   
   140016bba:	int3   
   140016bbb:	int3   
   140016bbc:	int3   
   140016bbd:	int3   
   140016bbe:	int3   
   140016bbf:	int3   
   140016bc0:	jmp    0x14000bff4
   140016bc5:	int3   
   140016bc6:	int3   
   140016bc7:	int3   
   140016bc8:	int3   
   140016bc9:	int3   
   140016bca:	int3   
   140016bcb:	int3   
   140016bcc:	int3   
   140016bcd:	int3   
   140016bce:	int3   
   140016bcf:	int3   
   140016bd0:	jmp    0x14000bc90
   140016bd5:	int3   
   140016bd6:	int3   
   140016bd7:	int3   
   140016bd8:	int3   
   140016bd9:	int3   
   140016bda:	int3   
   140016bdb:	int3   
   140016bdc:	int3   
   140016bdd:	int3   
   140016bde:	int3   
   140016bdf:	int3   
   140016be0:	lea    rcx,[rip+0x38209]        # 0x14004edf0
   140016be7:	jmp    0x14000f118
   140016bec:	int3   
   140016bed:	int3   
   140016bee:	int3   
   140016bef:	int3   
   140016bf0:	lea    rax,[rip+0x28f19]        # 0x14003fb10
   140016bf7:	mov    QWORD PTR [rip+0x3820a],rax        # 0x14004ee08
   140016bfe:	ret    
   140016bff:	int3   
   140016c00:	jmp    0x140004bd8
   140016c05:	int3   
   140016c06:	int3   
   140016c07:	int3   
   140016c08:	int3   
   140016c09:	int3   
   140016c0a:	int3   
   140016c0b:	int3   
   140016c0c:	int3   
   140016c0d:	int3   
   140016c0e:	int3   
   140016c0f:	int3   
   140016c10:	jmp    0x140006c98
   140016c15:	int3   
   140016c16:	mov    DWORD PTR [r8],0xffffffff
   140016c1d:	mov    eax,0xc0000095
   140016c22:	ret    
   140016c23:	int3   
   140016c24:	mov    QWORD PTR [r8],0xffffffffffffffff
   140016c2b:	mov    eax,0xc0000095
   140016c30:	ret    
   140016c31:	int3   
   140016c32:	test   r8,r8
   140016c35:	je     0x14000bc20
   140016c3b:	mov    QWORD PTR [r8],r10
   140016c3e:	ret    
   140016c3f:	int3   
   140016c40:	call   QWORD PTR [rip+0x265ba]        # 0x14003d200
   140016c46:	and    QWORD PTR [rbx],0x0
   140016c4a:	jmp    0x1400013a8
   140016c4f:	int3   
   140016c50:	mov    rax,QWORD PTR [rdi]
   140016c53:	mov    rbx,QWORD PTR [rax+0x10]
   140016c57:	mov    rcx,rbx
   140016c5a:	call   QWORD PTR [rip+0x26ac8]        # 0x14003d728
   140016c60:	mov    rcx,rdi
   140016c63:	call   rbx
   140016c65:	nop
   140016c66:	jmp    0x1400013d2
   140016c6b:	int3   
   140016c6c:	call   QWORD PTR [rip+0x263fe]        # 0x14003d070
   140016c72:	nop
   140016c73:	jmp    0x14000148d
   140016c78:	mov    r15d,0xc000007b
   140016c7e:	mov    DWORD PTR [rsp+0x78],r15d
   140016c83:	jmp    0x140001e8e
   140016c88:	mov    r15d,0xc000007b
   140016c8e:	mov    DWORD PTR [rsp+0x78],r15d
   140016c93:	jmp    0x140001e8e
   140016c98:	mov    r15d,0xc000007b
   140016c9e:	mov    DWORD PTR [rsp+0x78],r15d
   140016ca3:	jmp    0x140001e8e
   140016ca8:	mov    r15d,0xc000007b
   140016cae:	mov    DWORD PTR [rsp+0x78],r15d
   140016cb3:	jmp    0x140001e8e
   140016cb8:	mov    r15d,0xc000000d
   140016cbe:	mov    DWORD PTR [rsp+0x78],r15d
   140016cc3:	jmp    0x140001e8e
   140016cc8:	movzx  edx,WORD PTR [rsi+0x10]
   140016ccc:	neg    dx
   140016ccf:	jmp    0x140001fae
   140016cd4:	mov    eax,DWORD PTR [r14+0x10]
   140016cd8:	add    rax,rsi
   140016cdb:	cmp    rcx,rax
   140016cde:	jae    0x140001fe6
   140016ce4:	mov    edx,0x2e
   140016ce9:	call   QWORD PTR [rip+0x26969]        # 0x14003d658
   140016cef:	mov    rdi,rax
   140016cf2:	test   rax,rax
   140016cf5:	je     0x140016e2b
   140016cfb:	lea    rcx,[rip+0x27dee]        # 0x14003eaf0
   140016d02:	call   QWORD PTR [rip+0x26528]        # 0x14003d230
   140016d08:	mov    QWORD PTR [rbp+0x6d0],rax
   140016d0f:	test   rax,rax
   140016d12:	je     0x140016e13
   140016d18:	lea    r10,[rdi+0x1]
   140016d1c:	cmp    BYTE PTR [r10],0x23
   140016d20:	jne    0x140016dc0
   140016d26:	xor    r9d,r9d
   140016d29:	mov    r10d,r9d
   140016d2c:	lea    rdx,[rdi+0x2]
   140016d30:	mov    r8d,r9d
   140016d33:	mov    ecx,r9d
   140016d36:	test   rdx,rdx
   140016d39:	je     0x140016d4e
   140016d3b:	mov    eax,0x1
   140016d40:	mov    DWORD PTR [rbp+0x18c],eax
   140016d46:	cmp    WORD PTR [rdx],0x20
   140016d4a:	je     0x140016d67
   140016d4c:	jmp    0x140016d71
   140016d4e:	mov    DWORD PTR [rbp+0x18c],r9d
   140016d55:	mov    DWORD PTR [rsp+0x78],r15d
   140016d5a:	mov    rdi,QWORD PTR [rbp-0x68]
   140016d5e:	mov    r8d,DWORD PTR [rbp+0x3c]
   140016d62:	jmp    0x140001ff2
   140016d67:	add    rdx,0x2
   140016d6b:	cmp    WORD PTR [rdx],0x20
   140016d6f:	je     0x140016d67
   140016d71:	cmp    WORD PTR [rdx],0x2d
   140016d75:	jne    0x140016d7e
   140016d77:	mov    r8d,eax
   140016d7a:	add    rdx,0x2
   140016d7e:	cmp    WORD PTR [rdx],0x20
   140016d82:	jne    0x140016d8e
   140016d84:	add    rdx,0x2
   140016d88:	cmp    WORD PTR [rdx],0x20
   140016d8c:	je     0x140016d84
   140016d8e:	movzx  edi,WORD PTR [rdx]
   140016d91:	test   di,di
   140016d94:	je     0x140016db7
   140016d96:	lea    eax,[rdi-0x30]
   140016d99:	cmp    ax,0x9
   140016d9d:	ja     0x140016d4e
   140016d9f:	lea    ecx,[rcx+rcx*4]
   140016da2:	movzx  eax,di
   140016da5:	lea    ecx,[rcx-0x18]
   140016da8:	lea    ecx,[rax+rcx*2]
   140016dab:	add    rdx,0x2
   140016daf:	movzx  edi,WORD PTR [rdx]
   140016db2:	test   di,di
   140016db5:	jne    0x140016d96
   140016db7:	test   r8d,r8d
   140016dba:	je     0x140016dc4
   140016dbc:	neg    ecx
   140016dbe:	jmp    0x140016dc4
   140016dc0:	xor    eax,eax
   140016dc2:	mov    ecx,eax
   140016dc4:	movzx  edx,cx
   140016dc7:	lea    r9,[rbp+0x490]
   140016dce:	lea    r8,[rbp+0x6d0]
   140016dd5:	mov    rcx,r10
   140016dd8:	call   0x1400153c4
   140016ddd:	mov    r15d,eax
   140016de0:	mov    DWORD PTR [rsp+0x78],eax
   140016de4:	mov    rdi,QWORD PTR [rbp-0x68]
   140016de8:	mov    r8d,DWORD PTR [rbp+0x3c]
   140016dec:	xor    r9d,r9d
   140016def:	test   eax,eax
   140016df1:	js     0x140001fe9
   140016df7:	mov    rcx,QWORD PTR [rbp+0x490]
   140016dfe:	jmp    0x140001fe6
   140016e03:	mov    r15d,0xc000007a
   140016e09:	mov    DWORD PTR [rsp+0x78],r15d
   140016e0e:	jmp    0x140001fe9
   140016e13:	mov    edi,0xc000007a
   140016e18:	xor    r13d,r13d
   140016e1b:	lea    r14,[rip+0x3832e]        # 0x14004f150
   140016e22:	lea    r15d,[r13+0x60]
   140016e26:	jmp    0x140002034
   140016e2b:	mov    edi,0xc000007b
   140016e30:	xor    r13d,r13d
   140016e33:	lea    r14,[rip+0x38316]        # 0x14004f150
   140016e3a:	lea    r15d,[r13+0x60]
   140016e3e:	jmp    0x140002034
   140016e43:	mov    rcx,rdi
   140016e46:	call   0x1400155d8
   140016e4b:	lea    rsi,[rip+0x371ce]        # 0x14004e020
   140016e52:	lea    r14,[rip+0x382f7]        # 0x14004f150
   140016e59:	mov    r15d,0x60
   140016e5f:	mov    edi,0xc000007a
   140016e64:	jmp    0x14000203b
   140016e69:	mov    edi,DWORD PTR [rsp+0x78]
   140016e6d:	xor    r13d,r13d
   140016e70:	lea    r14,[rip+0x382d9]        # 0x14004f150
   140016e77:	lea    r15d,[r13+0x60]
   140016e7b:	jmp    0x140002034
   140016e80:	mov    edi,r13d
   140016e83:	jmp    0x140002034
   140016e88:	mov    rdi,r14
   140016e8b:	mov    ebx,0x4
   140016e90:	mov    rcx,QWORD PTR [rdi]
   140016e93:	test   rcx,rcx
   140016e96:	je     0x140016e9e
   140016e98:	call   QWORD PTR [rip+0x263ba]        # 0x14003d258
   140016e9e:	add    rdi,0x18
   140016ea2:	sub    rbx,0x1
   140016ea6:	jne    0x140016e90
   140016ea8:	mov    r8,r15
   140016eab:	xor    edx,edx
   140016ead:	mov    rcx,r14
   140016eb0:	call   0x140014694
   140016eb5:	mov    r8d,0x170
   140016ebb:	lea    rdx,[rip+0x2a8ae]        # 0x140041770
   140016ec2:	mov    rcx,rsi
   140016ec5:	call   0x1400156f2
   140016eca:	nop
   140016ecb:	jmp    0x140002073
   140016ed0:	call   QWORD PTR [rip+0x26292]        # 0x14003d168
   140016ed6:	mov    ebx,eax
   140016ed8:	test   eax,eax
   140016eda:	jle    0x140016ee5
   140016edc:	movzx  ebx,ax
   140016edf:	or     ebx,0x80070000
   140016ee5:	test   ebx,ebx
   140016ee7:	js     0x14000220d
   140016eed:	mov    ebx,esi
   140016eef:	jmp    0x14000220d
   140016ef4:	mov    ebx,0x8007000e
   140016ef9:	jmp    0x14000211d
   140016efe:	test   eax,eax
   140016f00:	je     0x140016f10
   140016f02:	mov    esi,0x80004005
   140016f07:	jg     0x140016f1c
   140016f09:	mov    ebx,eax
   140016f0b:	jmp    0x140002129
   140016f10:	mov    esi,0x80004005
   140016f15:	mov    ebx,esi
   140016f17:	jmp    0x140002129
   140016f1c:	movzx  ebx,ax
   140016f1f:	or     ebx,0x80070000
   140016f25:	jmp    0x140002129
   140016f2a:	call   QWORD PTR [rip+0x26238]        # 0x14003d168
   140016f30:	mov    ebx,eax
   140016f32:	test   eax,eax
   140016f34:	jle    0x140016ee5
   140016f36:	jmp    0x140016edc
   140016f38:	mov    ebx,0x8007000e
   140016f3d:	jmp    0x1400021b0
   140016f42:	test   eax,eax
   140016f44:	je     0x140016f4f
   140016f46:	jg     0x140016f59
   140016f48:	mov    ebx,eax
   140016f4a:	jmp    0x1400021b7
   140016f4f:	mov    ebx,0x80004005
   140016f54:	jmp    0x1400021b7
   140016f59:	movzx  ebx,ax
   140016f5c:	or     ebx,0x80070000
   140016f62:	jmp    0x1400021b7
   140016f67:	mov    DWORD PTR [rbp+0x84],r13d
   140016f6e:	jmp    0x14000222d
   140016f73:	mov    r15d,0x8007000e
   140016f79:	jmp    0x14001e9a7
   140016f7e:	mov    r15d,0xc0000017
   140016f84:	jmp    0x14000463f
   140016f89:	mov    r15d,0xc0000017
   140016f8f:	mov    rsi,QWORD PTR [rbp-0x80]
   140016f93:	jmp    0x140017c05
   140016f98:	mov    edi,DWORD PTR [rbp+0x78]
   140016f9b:	jmp    0x140002398
   140016fa0:	or     ebx,0xffffffff
   140016fa3:	mov    r10d,ebx
   140016fa6:	mov    r15d,0xc0000095
   140016fac:	jmp    0x1400023da
   140016fb1:	mov    r9d,ebx
   140016fb4:	mov    r15d,0xc0000095
   140016fba:	xor    r10d,r10d
   140016fbd:	jmp    0x14000241d
   140016fc2:	mov    r11d,ebx
   140016fc5:	mov    r15d,0xc0000095
   140016fcb:	jmp    0x14000245f
   140016fd0:	mov    r15d,0xc000003e
   140016fd6:	jmp    0x140017bff
   140016fdb:	mov    r9d,ebx
   140016fde:	mov    r15d,0xc0000095
   140016fe4:	xor    r11d,r11d
   140016fe7:	jmp    0x1400024cc
   140016fec:	mov    r10d,ebx
   140016fef:	mov    r15d,0xc0000095
   140016ff5:	jmp    0x14000250b
   140016ffa:	mov    eax,ebx
   140016ffc:	mov    r15d,0xc0000095
   140017002:	jmp    0x140002548
   140017007:	mov    r15d,0xc0000017
   14001700d:	jmp    0x140017bff
   140017012:	mov    r15d,0xc0000095
   140017018:	jmp    0x140017bff
   14001701d:	mov    r15d,0xc000000d
   140017023:	jmp    0x1400025db
   140017028:	lea    r8,[rbp+0x454]
   14001702f:	mov    edx,esi
   140017031:	mov    ecx,0x4
   140017036:	call   0x14000bad0
   14001703b:	mov    r15d,eax
   14001703e:	mov    edx,DWORD PTR [rbp+0x14c]
   140017044:	test   eax,eax
   140017046:	cmovns edx,DWORD PTR [rbp+0x454]
   14001704d:	mov    DWORD PTR [rbp+0x14c],edx
   140017053:	js     0x140002691
   140017059:	lea    r8,[rbp-0x5c]
   14001705d:	mov    ecx,DWORD PTR [rbp-0x5c]
   140017060:	call   0x14000bad0
   140017065:	mov    r15d,eax
   140017068:	mov    edi,DWORD PTR [rbp-0x60]
   14001706b:	test   eax,eax
   14001706d:	js     0x140002691
   140017073:	inc    edi
   140017075:	mov    DWORD PTR [rbp-0x60],edi
   140017078:	jmp    0x14000269a
   14001707d:	mov    r15d,0xc000000d
   140017083:	jmp    0x140002691
   140017088:	lea    r8,[rbp+0x464]
   14001708f:	mov    edx,r12d
   140017092:	mov    ecx,0x4
   140017097:	call   0x14000bad0
   14001709c:	mov    r15d,eax
   14001709f:	mov    edx,DWORD PTR [rbp+0x148]
   1400170a5:	test   eax,eax
   1400170a7:	cmovns edx,DWORD PTR [rbp+0x464]
   1400170ae:	mov    DWORD PTR [rbp+0x148],edx
   1400170b4:	js     0x14000273b
   1400170ba:	lea    r8,[rbp-0x5c]
   1400170be:	mov    ecx,DWORD PTR [rbp-0x5c]
   1400170c1:	call   0x14000bad0
   1400170c6:	mov    r15d,eax
   1400170c9:	mov    edi,DWORD PTR [rbp-0x60]
   1400170cc:	test   eax,eax
   1400170ce:	js     0x14000273b
   1400170d4:	inc    edi
   1400170d6:	mov    DWORD PTR [rbp-0x60],edi
   1400170d9:	jmp    0x140002744
   1400170de:	mov    r15d,0xc0000095
   1400170e4:	jmp    0x1400026d8
   1400170e9:	mov    r15d,0xc000000d
   1400170ef:	jmp    0x14000273b
   1400170f4:	lea    r8,[rbp+0x46c]
   1400170fb:	mov    edx,0x8
   140017100:	lea    ecx,[rdx-0x4]
   140017103:	call   0x14000bad0
   140017108:	mov    r15d,eax
   14001710b:	mov    edx,DWORD PTR [rbp+0x13c]
   140017111:	test   eax,eax
   140017113:	cmovns edx,DWORD PTR [rbp+0x46c]
   14001711a:	mov    DWORD PTR [rbp+0x13c],edx
   140017120:	js     0x140017163
   140017122:	lea    r8,[rbp-0x5c]
   140017126:	mov    ecx,DWORD PTR [rbp-0x5c]
   140017129:	call   0x14000bad0
   14001712e:	mov    r15d,eax
   140017131:	test   eax,eax
   140017133:	js     0x140017163
   140017135:	inc    DWORD PTR [rbp-0x60]
   140017138:	xor    r13d,r13d
   14001713b:	jmp    0x1400027ff
   140017140:	mov    r15d,0xc0000095
   140017146:	jmp    0x14000279a
   14001714b:	mov    r15d,0xc0000023
   140017151:	mov    r12,r14
   140017154:	mov    rsi,QWORD PTR [rbp-0x80]
   140017158:	jmp    0x14000463f
   14001715d:	mov    r15d,0xc000000d
   140017163:	xor    r13d,r13d
   140017166:	jmp    0x1400027f6
   14001716b:	mov    QWORD PTR [rbp+0x268],r13
   140017172:	mov    r15d,0xc000003e
   140017178:	mov    r12,r14
   14001717b:	mov    rsi,QWORD PTR [rbp-0x80]
   14001717f:	jmp    0x14000463f
   140017184:	lea    r8,[rbp+0x474]
   14001718b:	mov    edx,r9d
   14001718e:	mov    ecx,0x4
   140017193:	call   0x14000bad0
   140017198:	mov    r15d,eax
   14001719b:	mov    edx,DWORD PTR [rbp+0x158]
   1400171a1:	test   eax,eax
   1400171a3:	cmovns edx,DWORD PTR [rbp+0x474]
   1400171aa:	mov    DWORD PTR [rbp+0x158],edx
   1400171b0:	js     0x1400028d4
   1400171b6:	lea    r8,[rbp-0x5c]
   1400171ba:	mov    ecx,DWORD PTR [rbp-0x5c]
   1400171bd:	call   0x14000bad0
   1400171c2:	mov    r15d,eax
   1400171c5:	test   eax,eax
   1400171c7:	js     0x1400028d4
   1400171cd:	inc    DWORD PTR [rbp-0x60]
   1400171d0:	mov    r15d,r13d
   1400171d3:	jmp    0x1400028d4
   1400171d8:	mov    r15d,0xc0000095
   1400171de:	jmp    0x140002872
   1400171e3:	mov    r15d,0xc0000023
   1400171e9:	jmp    0x1400028d4
   1400171ee:	mov    r15d,0xc0000095
   1400171f4:	jmp    0x1400028d4
   1400171f9:	mov    r15d,0xc000000d
   1400171ff:	jmp    0x1400028d4
   140017204:	lea    r8,[rbp+0x42c]
   14001720b:	mov    edx,0x4
   140017210:	mov    ecx,edx
   140017212:	call   0x14000bad0
   140017217:	mov    r15d,eax
   14001721a:	mov    edx,DWORD PTR [rbp+0x194]
   140017220:	test   eax,eax
   140017222:	cmovns edx,DWORD PTR [rbp+0x42c]
   140017229:	mov    DWORD PTR [rbp+0x194],edx
   14001722f:	js     0x140002991
   140017235:	lea    r8,[rbp-0x5c]
   140017239:	mov    ecx,DWORD PTR [rbp-0x5c]
   14001723c:	call   0x14000bad0
   140017241:	mov    r15d,eax
   140017244:	test   eax,eax
   140017246:	js     0x140002991
   14001724c:	inc    DWORD PTR [rbp-0x60]
   14001724f:	jmp    0x14000299a
   140017254:	mov    r15d,0xc0000095
   14001725a:	jmp    0x140002939
   14001725f:	mov    r15d,0xc0000023
   140017265:	mov    r12,r14
   140017268:	mov    rsi,QWORD PTR [rbp-0x80]
   14001726c:	jmp    0x14000463f
   140017271:	mov    r15d,0xc000000d
   140017277:	jmp    0x140002991
   14001727c:	lea    r8,[rbp+0x3f8]
   140017283:	mov    edx,0x4
   140017288:	mov    ecx,edx
   14001728a:	call   0x14000bad0
   14001728f:	mov    r15d,eax
   140017292:	mov    edx,DWORD PTR [rbp+0x15c]
   140017298:	test   eax,eax
   14001729a:	cmovns edx,DWORD PTR [rbp+0x3f8]
   1400172a1:	mov    DWORD PTR [rbp+0x15c],edx
   1400172a7:	js     0x140002a43
   1400172ad:	lea    r8,[rbp-0x5c]
   1400172b1:	mov    ecx,DWORD PTR [rbp-0x5c]
   1400172b4:	call   0x14000bad0
   1400172b9:	mov    r15d,eax
   1400172bc:	test   eax,eax
   1400172be:	js     0x140002a43
   1400172c4:	inc    DWORD PTR [rbp-0x60]
   1400172c7:	jmp    0x140002a4c
   1400172cc:	mov    r15d,0xc0000095
   1400172d2:	jmp    0x1400029eb
   1400172d7:	mov    r15d,0xc0000023
   1400172dd:	mov    r12,r14
   1400172e0:	mov    rsi,QWORD PTR [rbp-0x80]
   1400172e4:	jmp    0x14000463f
   1400172e9:	mov    r15d,0xc0000095
   1400172ef:	mov    r12,r14
   1400172f2:	mov    rsi,QWORD PTR [rbp-0x80]
   1400172f6:	jmp    0x14000463f
   1400172fb:	mov    r15d,0xc000000d
   140017301:	jmp    0x140002a43
   140017306:	mov    edi,DWORD PTR [rbp+0x88]
   14001730c:	jmp    0x140002a76
   140017311:	mov    r14d,DWORD PTR [rbp+0x7c]
   140017315:	jmp    0x140002bd5
   14001731a:	mov    r15d,0xc0000095
   140017320:	jmp    0x140002d1c
   140017325:	mov    r15d,0xc0000017
   14001732b:	jmp    0x140017341
   14001732d:	call   QWORD PTR [rip+0x25e8d]        # 0x14003d1c0
   140017333:	mov    rcx,rax
   140017336:	mov    r8,rdi
   140017339:	xor    edx,edx
   14001733b:	call   QWORD PTR [rip+0x25e9f]        # 0x14003d1e0
   140017341:	mov    rdi,r13
   140017344:	jmp    0x140002d19
   140017349:	mov    r15d,0xc000000d
   14001734f:	jmp    0x1400032d2
   140017354:	mov    r11d,r10d
   140017357:	mov    DWORD PTR [rsp+0x60],r10d
   14001735c:	mov    r15d,r10d
   14001735f:	mov    DWORD PTR [rbp+0x0],r10d
   140017363:	test   edi,edi
   140017365:	jle    0x1400173a2
   140017367:	mov    r8d,0x38
   14001736d:	movzx  eax,BYTE PTR [r14]
   140017371:	cmp    r10d,0x4
   140017375:	jge    0x140017382
   140017377:	lea    ecx,[r8-0x20]
   14001737b:	shl    eax,cl
   14001737d:	or     r15d,eax
   140017380:	jmp    0x14001738a
   140017382:	mov    ecx,r8d
   140017385:	shl    eax,cl
   140017387:	or     r11d,eax
   14001738a:	inc    r14
   14001738d:	inc    r10d
   140017390:	sub    r8d,0x8
   140017394:	cmp    r10d,edi
   140017397:	jl     0x14001736d
   140017399:	mov    DWORD PTR [rbp+0x0],r15d
   14001739d:	mov    DWORD PTR [rsp+0x60],r11d
   1400173a2:	mov    r8d,r15d
   1400173a5:	xor    r8d,0x4e61f5c7
   1400173ac:	mov    DWORD PTR [rbp+0x8],r8d
   1400173b0:	mov    ebx,r11d
   1400173b3:	xor    ebx,0x1be6ba80
   1400173b9:	mov    DWORD PTR [rbp-0x28],ebx
   1400173bc:	xor    r10d,r10d
   1400173bf:	mov    eax,r10d
   1400173c2:	test   edi,edi
   1400173c4:	jle    0x1400173e9
   1400173c6:	cmp    eax,0x4
   1400173c9:	jge    0x1400173d4
   1400173cb:	rol    r8d,0x8
   1400173cf:	mov    BYTE PTR [rsi],r8b
   1400173d2:	jmp    0x1400173d9
   1400173d4:	rol    ebx,0x8
   1400173d7:	mov    BYTE PTR [rsi],bl
   1400173d9:	inc    rsi
   1400173dc:	inc    eax
   1400173de:	cmp    eax,edi
   1400173e0:	jl     0x1400173c6
   1400173e2:	mov    r8d,DWORD PTR [rbp+0x8]
   1400173e6:	mov    ebx,DWORD PTR [rbp-0x28]
   1400173e9:	lea    eax,[rdi-0x4]
   1400173ec:	test   eax,eax
   1400173ee:	jle    0x140017406
   1400173f0:	mov    ecx,0x4
   1400173f5:	sub    ecx,eax
   1400173f7:	shl    ecx,0x3
   1400173fa:	shr    ebx,cl
   1400173fc:	shl    ebx,cl
   1400173fe:	mov    DWORD PTR [rbp-0x28],ebx
   140017401:	jmp    0x140002dcd
   140017406:	mov    ebx,r10d
   140017409:	mov    DWORD PTR [rbp-0x28],ebx
   14001740c:	test   eax,eax
   14001740e:	jns    0x140002dcd
   140017414:	neg    eax
   140017416:	shl    eax,0x3
   140017419:	mov    ecx,eax
   14001741b:	shr    r8d,cl
   14001741e:	shl    r8d,cl
   140017421:	mov    DWORD PTR [rbp+0x8],r8d
   140017425:	jmp    0x140002dcd
   14001742a:	mov    r15d,0xc0000017
   140017430:	xor    r9d,r9d
   140017433:	jmp    0x140003282
   140017438:	mov    r15d,0xc0000017
   14001743e:	mov    rbx,QWORD PTR [rdi+0x8]
   140017442:	test   rbx,rbx
   140017445:	je     0x140017463
   140017447:	call   QWORD PTR [rip+0x25d73]        # 0x14003d1c0
   14001744d:	mov    rcx,rax
   140017450:	mov    r8,rbx
   140017453:	xor    edx,edx
   140017455:	call   QWORD PTR [rip+0x25d85]        # 0x14003d1e0
   14001745b:	xor    esi,esi
   14001745d:	mov    QWORD PTR [rdi+0x8],rsi
   140017461:	jmp    0x140017465
   140017463:	xor    esi,esi
   140017465:	mov    rbx,QWORD PTR [rdi+0x18]
   140017469:	test   rbx,rbx
   14001746c:	je     0x140017486
   14001746e:	call   QWORD PTR [rip+0x25d4c]        # 0x14003d1c0
   140017474:	mov    rcx,rax
   140017477:	mov    r8,rbx
   14001747a:	xor    edx,edx
   14001747c:	call   QWORD PTR [rip+0x25d5e]        # 0x14003d1e0
   140017482:	mov    QWORD PTR [rdi+0x18],rsi
   140017486:	mov    rbx,QWORD PTR [rdi+0x28]
   14001748a:	test   rbx,rbx
   14001748d:	je     0x1400174a7
   14001748f:	call   QWORD PTR [rip+0x25d2b]        # 0x14003d1c0
   140017495:	mov    rcx,rax
   140017498:	mov    r8,rbx
   14001749b:	xor    edx,edx
   14001749d:	call   QWORD PTR [rip+0x25d3d]        # 0x14003d1e0
   1400174a3:	mov    QWORD PTR [rdi+0x28],rsi
   1400174a7:	call   QWORD PTR [rip+0x25d13]        # 0x14003d1c0
   1400174ad:	mov    rcx,rax
   1400174b0:	mov    r8,rdi
   1400174b3:	xor    edx,edx
   1400174b5:	call   QWORD PTR [rip+0x25d25]        # 0x14003d1e0
   1400174bb:	xor    r9d,r9d
   1400174be:	jmp    0x140003282
   1400174c3:	mov    r15d,0xc0000001
   1400174c9:	jmp    0x140003298
   1400174ce:	xor    ebx,ebx
   1400174d0:	jmp    0x1400032c5
   1400174d5:	mov    rdi,QWORD PTR [r12+0x8]
   1400174da:	test   rdi,rdi
   1400174dd:	je     0x1400174f8
   1400174df:	call   QWORD PTR [rip+0x25cdb]        # 0x14003d1c0
   1400174e5:	mov    rcx,rax
   1400174e8:	mov    r8,rdi
   1400174eb:	xor    edx,edx
   1400174ed:	call   QWORD PTR [rip+0x25ced]        # 0x14003d1e0
   1400174f3:	mov    QWORD PTR [r12+0x8],rbx
   1400174f8:	mov    rdi,QWORD PTR [r12+0x18]
   1400174fd:	test   rdi,rdi
   140017500:	je     0x14001751b
   140017502:	call   QWORD PTR [rip+0x25cb8]        # 0x14003d1c0
   140017508:	mov    rcx,rax
   14001750b:	mov    r8,rdi
   14001750e:	xor    edx,edx
   140017510:	call   QWORD PTR [rip+0x25cca]        # 0x14003d1e0
   140017516:	mov    QWORD PTR [r12+0x18],rbx
   14001751b:	mov    rdi,QWORD PTR [r12+0x28]
   140017520:	test   rdi,rdi
   140017523:	je     0x14001753e
   140017525:	call   QWORD PTR [rip+0x25c95]        # 0x14003d1c0
   14001752b:	mov    rcx,rax
   14001752e:	mov    r8,rdi
   140017531:	xor    edx,edx
   140017533:	call   QWORD PTR [rip+0x25ca7]        # 0x14003d1e0
   140017539:	mov    QWORD PTR [r12+0x28],rbx
   14001753e:	call   QWORD PTR [rip+0x25c7c]        # 0x14003d1c0
   140017544:	mov    rcx,rax
   140017547:	mov    r8,r12
   14001754a:	xor    edx,edx
   14001754c:	call   QWORD PTR [rip+0x25c8e]        # 0x14003d1e0
   140017552:	nop
   140017553:	jmp    0x1400032ce
   140017558:	mov    eax,DWORD PTR [rbp+0x210]
   14001755e:	jmp    0x14000337a
   140017563:	mov    r15d,0xc0000017
   140017569:	jmp    0x14001757f
   14001756b:	call   QWORD PTR [rip+0x25c4f]        # 0x14003d1c0
   140017571:	mov    rcx,rax
   140017574:	mov    r8,rsi
   140017577:	xor    edx,edx
   140017579:	call   QWORD PTR [rip+0x25c61]        # 0x14003d1e0
   14001757f:	mov    esi,DWORD PTR [rbp-0x70]
   140017582:	jmp    0x1400034cc
   140017587:	mov    r15d,0xc0000095
   14001758d:	jmp    0x14000356b
   140017592:	mov    r15d,0xc000000d
   140017598:	jmp    0x140003753
   14001759d:	mov    r15d,0xc000000d
   1400175a3:	jmp    0x140003753
   1400175a8:	mov    rax,r12
   1400175ab:	mov    QWORD PTR [rbp+0x118],rax
   1400175b2:	jmp    0x14000360e
   1400175b7:	mov    r15d,0xc000000d
   1400175bd:	jmp    0x140003753
   1400175c2:	mov    rax,r12
   1400175c5:	mov    QWORD PTR [rbp+0x1e0],rax
   1400175cc:	jmp    0x140003698
   1400175d1:	mov    eax,DWORD PTR [rbp+0x3e8]
   1400175d7:	jmp    0x14000373c
   1400175dc:	mov    r15d,0x8000ffff
   1400175e2:	jmp    0x140004029
   1400175e7:	mov    r15d,0xc0000095
   1400175ed:	jmp    0x140003753
   1400175f2:	mov    r15d,0xc0000017
   1400175f8:	mov    rbx,r12
   1400175fb:	jmp    0x140003789
   140017600:	call   QWORD PTR [rip+0x25b62]        # 0x14003d168
   140017606:	mov    r15d,eax
   140017609:	test   eax,eax
   14001760b:	jle    0x14001762d
   14001760d:	movzx  r15d,ax
   140017611:	or     r15d,0x80070000
   140017618:	jmp    0x14001762d
   14001761a:	mov    edx,DWORD PTR [rbp+0x74]
   14001761d:	jmp    0x140003843
   140017622:	mov    r15d,0x8007007a
   140017628:	jmp    0x140004029
   14001762d:	test   r15d,r15d
   140017630:	js     0x14001761a
   140017632:	mov    r15d,0x80004005
   140017638:	mov    edx,DWORD PTR [rbp+0x74]
   14001763b:	jmp    0x140003850
   140017640:	mov    r15d,0xc000003e
   140017646:	mov    r12,r11
   140017649:	jmp    0x140003a5f
   14001764e:	mov    r15d,0xc000003e
   140017654:	mov    r12,r11
   140017657:	jmp    0x140003a5f
   14001765c:	mov    r15d,0xc000003e
   140017662:	mov    r12,r11
   140017665:	jmp    0x140003a5f
   14001766a:	mov    r15d,0xc000003e
   140017670:	mov    r12,r11
   140017673:	jmp    0x140003a5f
   140017678:	mov    r15d,0xc000003e
   14001767e:	mov    r12,r11
   140017681:	jmp    0x140003a5f
   140017686:	mov    r15d,0xc000003e
   14001768c:	mov    r12,r11
   14001768f:	jmp    0x140003a5f
   140017694:	mov    r15d,0xc000003e
   14001769a:	mov    r12,r11
   14001769d:	jmp    0x140003a5f
   1400176a2:	mov    r15d,0xc000003e
   1400176a8:	mov    r12,r11
   1400176ab:	jmp    0x140003a5f
   1400176b0:	mov    r15d,0xc0000017
   1400176b6:	mov    rdi,QWORD PTR [rbp-0x8]
   1400176ba:	jmp    0x140003a4e
   1400176bf:	mov    DWORD PTR [rax],r11d
   1400176c2:	mov    QWORD PTR [rax+0x8],r11
   1400176c6:	jmp    0x1400039bc
   1400176cb:	mov    DWORD PTR [rdi+0x10],r11d
   1400176cf:	mov    QWORD PTR [rdi+0x18],r11
   1400176d3:	jmp    0x140003a03
   1400176d8:	mov    r15d,0xc0000017
   1400176de:	mov    rbx,QWORD PTR [rdi+0x8]
   1400176e2:	test   rbx,rbx
   1400176e5:	je     0x140017703
   1400176e7:	call   QWORD PTR [rip+0x25ad3]        # 0x14003d1c0
   1400176ed:	mov    rcx,rax
   1400176f0:	mov    r8,rbx
   1400176f3:	xor    edx,edx
   1400176f5:	call   QWORD PTR [rip+0x25ae5]        # 0x14003d1e0
   1400176fb:	xor    esi,esi
   1400176fd:	mov    QWORD PTR [rdi+0x8],rsi
   140017701:	jmp    0x140017705
   140017703:	xor    esi,esi
   140017705:	mov    rbx,QWORD PTR [rdi+0x18]
   140017709:	test   rbx,rbx
   14001770c:	je     0x140017726
   14001770e:	call   QWORD PTR [rip+0x25aac]        # 0x14003d1c0
   140017714:	mov    rcx,rax
   140017717:	mov    r8,rbx
   14001771a:	xor    edx,edx
   14001771c:	call   QWORD PTR [rip+0x25abe]        # 0x14003d1e0
   140017722:	mov    QWORD PTR [rdi+0x18],rsi
   140017726:	mov    rbx,QWORD PTR [rdi+0x28]
   14001772a:	test   rbx,rbx
   14001772d:	je     0x140017747
   14001772f:	call   QWORD PTR [rip+0x25a8b]        # 0x14003d1c0
   140017735:	mov    rcx,rax
   140017738:	mov    r8,rbx
   14001773b:	xor    edx,edx
   14001773d:	call   QWORD PTR [rip+0x25a9d]        # 0x14003d1e0
   140017743:	mov    QWORD PTR [rdi+0x28],rsi
   140017747:	call   QWORD PTR [rip+0x25a73]        # 0x14003d1c0
   14001774d:	mov    rcx,rax
   140017750:	mov    r8,rdi
   140017753:	xor    edx,edx
   140017755:	call   QWORD PTR [rip+0x25a85]        # 0x14003d1e0
   14001775b:	mov    rdi,QWORD PTR [rbp-0x8]
   14001775f:	xor    r11d,r11d
   140017762:	jmp    0x140003a4e
   140017767:	mov    DWORD PTR [rdi+0x20],r11d
   14001776b:	mov    QWORD PTR [rdi+0x28],r11
   14001776f:	jmp    0x140003a4e
   140017774:	test   rdi,rdi
   140017777:	je     0x14001780d
   14001777d:	mov    rbx,QWORD PTR [rdi+0x8]
   140017781:	test   rbx,rbx
   140017784:	je     0x1400177a2
   140017786:	call   QWORD PTR [rip+0x25a34]        # 0x14003d1c0
   14001778c:	mov    rcx,rax
   14001778f:	mov    r8,rbx
   140017792:	xor    edx,edx
   140017794:	call   QWORD PTR [rip+0x25a46]        # 0x14003d1e0
   14001779a:	xor    esi,esi
   14001779c:	mov    QWORD PTR [rdi+0x8],rsi
   1400177a0:	jmp    0x1400177a4
   1400177a2:	xor    esi,esi
   1400177a4:	mov    rbx,QWORD PTR [rdi+0x18]
   1400177a8:	test   rbx,rbx
   1400177ab:	je     0x1400177c5
   1400177ad:	call   QWORD PTR [rip+0x25a0d]        # 0x14003d1c0
   1400177b3:	mov    rcx,rax
   1400177b6:	mov    r8,rbx
   1400177b9:	xor    edx,edx
   1400177bb:	call   QWORD PTR [rip+0x25a1f]        # 0x14003d1e0
   1400177c1:	mov    QWORD PTR [rdi+0x18],rsi
   1400177c5:	mov    rbx,QWORD PTR [rdi+0x28]
   1400177c9:	test   rbx,rbx
   1400177cc:	je     0x1400177e6
   1400177ce:	call   QWORD PTR [rip+0x259ec]        # 0x14003d1c0
   1400177d4:	mov    rcx,rax
   1400177d7:	mov    r8,rbx
   1400177da:	xor    edx,edx
   1400177dc:	call   QWORD PTR [rip+0x259fe]        # 0x14003d1e0
   1400177e2:	mov    QWORD PTR [rdi+0x28],rsi
   1400177e6:	call   QWORD PTR [rip+0x259d4]        # 0x14003d1c0
   1400177ec:	mov    rcx,rax
   1400177ef:	mov    r8,rdi
   1400177f2:	xor    edx,edx
   1400177f4:	call   QWORD PTR [rip+0x259e6]        # 0x14003d1e0
   1400177fa:	xor    r11d,r11d
   1400177fd:	jmp    0x14001780d
   1400177ff:	mov    r15d,0xc0000095
   140017805:	mov    r12,r11
   140017808:	jmp    0x140003a5f
   14001780d:	mov    r12,QWORD PTR [rsp+0x70]
   140017812:	jmp    0x140003a5f
   140017817:	mov    DWORD PTR [rbp-0x34],0xffffffff
   14001781e:	mov    r13d,r11d
   140017821:	mov    DWORD PTR [rsp+0x60],r8d
   140017826:	mov    r10d,r11d
   140017829:	test   edi,edi
   14001782b:	jle    0x14001786e
   14001782d:	mov    r9d,0x38
   140017833:	movzx  eax,BYTE PTR [r14]
   140017837:	cmp    r10d,0x4
   14001783b:	jge    0x140017848
   14001783d:	lea    ecx,[r9-0x20]
   140017841:	shl    eax,cl
   140017843:	or     r8d,eax
   140017846:	jmp    0x140017850
   140017848:	mov    ecx,r9d
   14001784b:	shl    eax,cl
   14001784d:	or     r13d,eax
   140017850:	inc    r14
   140017853:	inc    r10d
   140017856:	sub    r9d,0x8
   14001785a:	cmp    r10d,edi
   14001785d:	jl     0x140017833
   14001785f:	mov    DWORD PTR [rsp+0x60],r8d
   140017864:	mov    r9,QWORD PTR [rbp+0x90]
   14001786b:	mov    rcx,rsi
   14001786e:	xor    r8d,0xdc90ac75
   140017875:	mov    DWORD PTR [rbp-0x20],r8d
   140017879:	mov    ebx,r13d
   14001787c:	xor    ebx,0xe04bfdaa
   140017882:	mov    DWORD PTR [rbp-0x34],ebx
   140017885:	mov    eax,r11d
   140017888:	test   edi,edi
   14001788a:	jle    0x1400178af
   14001788c:	cmp    eax,0x4
   14001788f:	jge    0x14001789a
   140017891:	rol    r8d,0x8
   140017895:	mov    BYTE PTR [rsi],r8b
   140017898:	jmp    0x14001789f
   14001789a:	rol    ebx,0x8
   14001789d:	mov    BYTE PTR [rsi],bl
   14001789f:	inc    rsi
   1400178a2:	inc    eax
   1400178a4:	cmp    eax,edi
   1400178a6:	jl     0x14001788c
   1400178a8:	mov    r8d,DWORD PTR [rbp-0x20]
   1400178ac:	mov    ebx,DWORD PTR [rbp-0x34]
   1400178af:	lea    eax,[rdi-0x4]
   1400178b2:	test   eax,eax
   1400178b4:	jle    0x1400178cd
   1400178b6:	mov    ecx,0x4
   1400178bb:	sub    ecx,eax
   1400178bd:	shl    ecx,0x3
   1400178c0:	shr    ebx,cl
   1400178c2:	shl    ebx,cl
   1400178c4:	mov    rcx,QWORD PTR [rbp-0x30]
   1400178c8:	jmp    0x140003afa
   1400178cd:	mov    ebx,r11d
   1400178d0:	mov    DWORD PTR [rbp-0x34],ebx
   1400178d3:	test   eax,eax
   1400178d5:	jns    0x140003afd
   1400178db:	neg    eax
   1400178dd:	shl    eax,0x3
   1400178e0:	mov    ecx,eax
   1400178e2:	shr    r8d,cl
   1400178e5:	shl    r8d,cl
   1400178e8:	mov    DWORD PTR [rbp-0x20],r8d
   1400178ec:	mov    rcx,QWORD PTR [rbp-0x30]
   1400178f0:	jmp    0x140003afd
   1400178f5:	call   0x1400155d8
   1400178fa:	mov    r12,QWORD PTR [rsp+0x70]
   1400178ff:	xor    r11d,r11d
   140017902:	mov    rdi,QWORD PTR [rbp+0x2a0]
   140017909:	mov    r15d,0xc0000001
   14001790f:	test   rdi,rdi
   140017912:	je     0x140017940
   140017914:	call   QWORD PTR [rip+0x258a6]        # 0x14003d1c0
   14001791a:	mov    rcx,rax
   14001791d:	mov    r8,rdi
   140017920:	xor    edx,edx
   140017922:	call   QWORD PTR [rip+0x258b8]        # 0x14003d1e0
   140017928:	xor    r11d,r11d
   14001792b:	mov    QWORD PTR [rbp+0x2a0],r11
   140017932:	mov    r8d,r11d
   140017935:	jmp    0x140003e88
   14001793a:	mov    r15d,0xc000000d
   140017940:	mov    r8,QWORD PTR [rbp-0x68]
   140017944:	jmp    0x140003e88
   140017949:	mov    r15d,0xc000003e
   14001794f:	jmp    0x14000401f
   140017954:	mov    r15d,0xc000003e
   14001795a:	jmp    0x14000401f
   14001795f:	mov    r15d,0xc000003e
   140017965:	jmp    0x14000401f
   14001796a:	mov    r15d,0xc0000095
   140017970:	jmp    0x140003f80
   140017975:	mov    edi,DWORD PTR [rsp+0x60]
   140017979:	jmp    0x14000400e
   14001797e:	mov    r15d,0xc000000d
   140017984:	jmp    0x14000401f
   140017989:	mov    r15d,0xc0000017
   14001798f:	jmp    0x14000400e
   140017994:	mov    r15d,0xc000003e
   14001799a:	jmp    0x14000401f
   14001799f:	mov    r15d,0xc0000095
   1400179a5:	jmp    0x14000401f
   1400179aa:	mov    r15d,0x80070057
   1400179b0:	jmp    0x140004029
   1400179b5:	xor    r13d,r13d
   1400179b8:	jmp    0x14000407e
   1400179bd:	xor    r13d,r13d
   1400179c0:	jmp    0x1400040db
   1400179c5:	mov    r15d,0xc004d501
   1400179cb:	mov    r12,QWORD PTR [rsp+0x68]
   1400179d0:	mov    rsi,QWORD PTR [rbp-0x80]
   1400179d4:	jmp    0x14000463f
   1400179d9:	mov    rax,r13
   1400179dc:	mov    QWORD PTR [rbp+0x340],rax
   1400179e3:	jmp    0x140004230
   1400179e8:	mov    r9d,DWORD PTR [rbp+0x460]
   1400179ef:	mov    rax,QWORD PTR [rbp+0x540]
   1400179f6:	jmp    0x140004237
   1400179fb:	mov    r15d,0xc0000023
   140017a01:	mov    r12,QWORD PTR [rsp+0x68]
   140017a06:	mov    rsi,QWORD PTR [rbp-0x80]
   140017a0a:	jmp    0x14000463f
   140017a0f:	mov    r15d,0xc000000d
   140017a15:	mov    eax,DWORD PTR [rbp+0x80]
   140017a1b:	jmp    0x140004251
   140017a20:	mov    DWORD PTR [rbp+0x80],0x8007007a
   140017a2a:	jmp    0x140004277
   140017a2f:	mov    r15d,0xc004d501
   140017a35:	mov    r12,QWORD PTR [rsp+0x68]
   140017a3a:	mov    rsi,QWORD PTR [rbp-0x80]
   140017a3e:	jmp    0x14000463f
   140017a43:	mov    r15d,0xc000000d
   140017a49:	jmp    0x140004347
   140017a4e:	mov    rax,r13
   140017a51:	mov    QWORD PTR [rbp+0x110],rax
   140017a58:	jmp    0x140004324
   140017a5d:	mov    edi,DWORD PTR [rbp+0x328]
   140017a63:	mov    rax,QWORD PTR [rbp+0x630]
   140017a6a:	jmp    0x14000432b
   140017a6f:	mov    r15d,0xc0000023
   140017a75:	mov    r12,QWORD PTR [rsp+0x68]
   140017a7a:	mov    rsi,QWORD PTR [rbp-0x80]
   140017a7e:	jmp    0x14000463f
   140017a83:	mov    r15d,0xc000000d
   140017a89:	jmp    0x1400043f2
   140017a8e:	mov    rax,r13
   140017a91:	mov    QWORD PTR [rbp+0x1f0],rax
   140017a98:	jmp    0x1400043d2
   140017a9d:	mov    edi,DWORD PTR [rbp+0x338]
   140017aa3:	mov    rax,QWORD PTR [rbp+0x550]
   140017aaa:	jmp    0x1400043d9
   140017aaf:	mov    r15d,0xc0000023
   140017ab5:	mov    r12,QWORD PTR [rsp+0x68]
   140017aba:	mov    rsi,QWORD PTR [rbp-0x80]
   140017abe:	jmp    0x14000463f
   140017ac3:	mov    r15d,0xc0000095
   140017ac9:	jmp    0x1400043f2
   140017ace:	mov    r15d,0xc000000d
   140017ad4:	mov    r12,QWORD PTR [rsp+0x68]
   140017ad9:	mov    rsi,QWORD PTR [rbp-0x80]
   140017add:	jmp    0x14000463f
   140017ae2:	mov    r10,r13
   140017ae5:	mov    QWORD PTR [rbp+0x1a8],r13
   140017aec:	jmp    0x140004480
   140017af1:	mov    r9d,DWORD PTR [rbp+0x448]
   140017af8:	mov    r10,QWORD PTR [rbp+0x640]
   140017aff:	jmp    0x140004487
   140017b04:	mov    rax,r13
   140017b07:	mov    QWORD PTR [rbp+0x208],rax
   140017b0e:	jmp    0x140004503
   140017b13:	mov    edi,DWORD PTR [rbp+0x348]
   140017b19:	mov    rax,QWORD PTR [rbp+0x560]
   140017b20:	jmp    0x14000450a
   140017b25:	mov    r15d,0xc0000023
   140017b2b:	mov    r12,QWORD PTR [rsp+0x68]
   140017b30:	mov    rsi,QWORD PTR [rbp-0x80]
   140017b34:	jmp    0x14000463f
   140017b39:	mov    r15d,0xc0000095
   140017b3f:	jmp    0x140004523
   140017b44:	mov    rax,r13
   140017b47:	mov    QWORD PTR [rbp+0x218],rax
   140017b4e:	jmp    0x1400045a3
   140017b53:	mov    edi,DWORD PTR [rbp+0x408]
   140017b59:	mov    rax,QWORD PTR [rbp+0x650]
   140017b60:	jmp    0x1400045aa
   140017b65:	mov    r15d,0xc0000023
   140017b6b:	mov    r12,QWORD PTR [rsp+0x68]
   140017b70:	mov    rsi,QWORD PTR [rbp-0x80]
   140017b74:	jmp    0x14000463f
   140017b79:	mov    r15d,0xc0000095
   140017b7f:	jmp    0x1400045c3
   140017b84:	mov    r15d,0xc004d501
   140017b8a:	mov    r12,QWORD PTR [rsp+0x68]
   140017b8f:	mov    rsi,QWORD PTR [rbp-0x80]
   140017b93:	jmp    0x14000463f
   140017b98:	mov    r15d,0x8007007a
   140017b9e:	mov    r12,QWORD PTR [rsp+0x68]
   140017ba3:	mov    rsi,QWORD PTR [rbp-0x80]
   140017ba7:	jmp    0x14000463f
   140017bac:	mov    r15d,0x8007007a
   140017bb2:	mov    r12,QWORD PTR [rsp+0x68]
   140017bb7:	mov    rsi,QWORD PTR [rbp-0x80]
   140017bbb:	jmp    0x14000463f
   140017bc0:	mov    r15d,0xc0000095
   140017bc6:	mov    r12,QWORD PTR [rsp+0x68]
   140017bcb:	mov    rsi,QWORD PTR [rbp-0x80]
   140017bcf:	jmp    0x14000463f
   140017bd4:	mov    QWORD PTR [rbp+0x268],0xffffffffffffffff
   140017bdf:	mov    r15d,0xc0000095
   140017be5:	mov    rsi,QWORD PTR [rbp-0x80]
   140017be9:	jmp    0x140017bf1
   140017beb:	mov    rsi,r13
   140017bee:	xor    r13d,r13d
   140017bf1:	mov    r12,r14
   140017bf4:	jmp    0x14000463f
   140017bf9:	mov    r15d,0xc0000023
   140017bff:	mov    r12,r14
   140017c02:	mov    rsi,r13
   140017c05:	xor    r13d,r13d
   140017c08:	jmp    0x14000463f
   140017c0d:	mov    QWORD PTR [rbp+0x5c8],r13
   140017c14:	mov    DWORD PTR [rip+0x36f1e],eax        # 0x14004eb38
   140017c1a:	mov    r8d,0x104
   140017c20:	lea    rdx,[rbp+0x1130]
   140017c27:	lea    rcx,[rip+0xfffffffffffe83d2]        # 0x140000000
   140017c2e:	call   QWORD PTR [rip+0x25614]        # 0x14003d248
   140017c34:	test   eax,eax
   140017c36:	je     0x14001c51d
   140017c3c:	cmp    eax,0x104
   140017c41:	jne    0x140017c52
   140017c43:	call   QWORD PTR [rip+0x2551f]        # 0x14003d168
   140017c49:	cmp    eax,0x7a
   140017c4c:	je     0x14001c51d
   140017c52:	mov    rdi,QWORD PTR [rip+0x364bf]        # 0x14004e118
   140017c59:	mov    rcx,rdi
   140017c5c:	call   QWORD PTR [rip+0x25ac6]        # 0x14003d728
   140017c62:	xor    edx,edx
   140017c64:	xor    ecx,ecx
   140017c66:	mov    r8d,0x403
   140017c6c:	call   rdi
   140017c6e:	mov    rsi,rax
   140017c71:	mov    QWORD PTR [rbp-0x40],rax
   140017c75:	test   rax,rax
   140017c78:	jne    0x140017c85
   140017c7a:	call   QWORD PTR [rip+0x254e8]        # 0x14003d168
   140017c80:	jmp    0x14001c51d
   140017c85:	mov    rdi,QWORD PTR [rip+0x3642c]        # 0x14004e0b8
   140017c8c:	mov    rcx,rdi
   140017c8f:	call   QWORD PTR [rip+0x25a93]        # 0x14003d728
   140017c95:	call   rdi
   140017c97:	mov    QWORD PTR [rip+0x36ea2],rax        # 0x14004eb40
   140017c9e:	mov    edi,DWORD PTR [rip+0x36e94]        # 0x14004eb38
   140017ca4:	mov    DWORD PTR [rbp+0x50],edi
   140017ca7:	mov    DWORD PTR [rbp+0x750],r13d
   140017cae:	xor    edx,edx
   140017cb0:	lea    r8d,[rdx+0x6c]
   140017cb4:	lea    rcx,[rbp+0x754]
   140017cbb:	call   0x140014694
   140017cc0:	xorps  xmm0,xmm0
   140017cc3:	movdqu XMMWORD PTR [rbp+0x100],xmm0
   140017ccb:	mov    r14d,0x1
   140017cd1:	mov    DWORD PTR [rbp+0x220],r14d
   140017cd8:	mov    QWORD PTR [rbp-0x68],r13
   140017cdc:	mov    QWORD PTR [rbp+0x140],r13
   140017ce3:	mov    DWORD PTR [rbp+0xc28],r13d
   140017cea:	xor    edx,edx
   140017cec:	lea    r8d,[r14+0x27]
   140017cf0:	lea    rcx,[rbp+0xc2c]
   140017cf7:	call   0x140014694
   140017cfc:	mov    QWORD PTR [rbp+0x90],r13
   140017d03:	xor    eax,eax
   140017d05:	lock cmpxchg DWORD PTR [rip+0x37432],r14d        # 0x14004f140
   140017d0e:	jne    0x140017d03
   140017d10:	mov    eax,DWORD PTR [rip+0x36e32]        # 0x14004eb48
   140017d16:	test   eax,eax
   140017d18:	jne    0x140018313
   140017d1e:	mov    DWORD PTR [rsp+0x60],r13d
   140017d23:	mov    DWORD PTR [rbp-0x78],r13d
   140017d27:	mov    DWORD PTR [rbp+0x0],r13d
   140017d2b:	mov    QWORD PTR [rbp+0x350],r13
   140017d32:	mov    QWORD PTR [rbp+0x678],r13
   140017d39:	mov    ecx,0x338
   140017d3e:	call   0x14000f134
   140017d43:	mov    rsi,rax
   140017d46:	mov    QWORD PTR [rbp-0x50],rax
   140017d4a:	test   rax,rax
   140017d4d:	je     0x140018269
   140017d53:	mov    ecx,r13d
   140017d56:	mov    DWORD PTR [rsp+0x70],0xffffffff
   140017d5e:	mov    DWORD PTR [rbp+0x1c],r13d
   140017d62:	xor    eax,eax
   140017d64:	mov    r9d,eax
   140017d67:	mov    DWORD PTR [rbp+0x44],eax
   140017d6a:	lea    r12,[rsi+0x7]
   140017d6e:	lea    rdi,[rip+0x2616d]        # 0x14003dee2
   140017d75:	lea    r14d,[rax+0x67]
   140017d79:	mov    esi,DWORD PTR [rsp+0x70]
   140017d7d:	movzx  ebx,BYTE PTR [rdi-0x2]
   140017d81:	shl    ebx,0x8
   140017d84:	movzx  eax,BYTE PTR [rdi-0x1]
   140017d88:	or     ebx,eax
   140017d8a:	shl    ebx,0x8
   140017d8d:	movzx  eax,BYTE PTR [rdi]
   140017d90:	or     ebx,eax
   140017d92:	shl    ebx,0x8
   140017d95:	movzx  eax,BYTE PTR [rdi+0x1]
   140017d99:	or     ebx,eax
   140017d9b:	movzx  r11d,BYTE PTR [rdi+0x2]
   140017da0:	shl    r11d,0x8
   140017da4:	movzx  eax,BYTE PTR [rdi+0x3]
   140017da8:	or     r11d,eax
   140017dab:	shl    r11d,0x8
   140017daf:	movzx  eax,BYTE PTR [rdi+0x4]
   140017db3:	or     r11d,eax
   140017db6:	shl    r11d,0x8
   140017dba:	movzx  eax,BYTE PTR [rdi+0x5]
   140017dbe:	or     r11d,eax
   140017dc1:	xor    r9d,ebx
   140017dc4:	xor    r13d,r11d
   140017dc7:	lea    rdi,[rdi+0x8]
   140017dcb:	xor    r13d,r9d
   140017dce:	xor    r13d,0x58830298
   140017dd5:	lea    eax,[r13+0x7b1e05f8]
   140017ddc:	rol    eax,0x5
   140017ddf:	mov    edx,r13d
   140017de2:	rol    edx,0xa
   140017de5:	imul   eax,eax,0xf890
   140017deb:	add    edx,eax
   140017ded:	xor    r9d,edx
   140017df0:	lea    eax,[r9-0x239d0770]
   140017df7:	ror    eax,0x9
   140017dfa:	mov    edx,r9d
   140017dfd:	rol    edx,0x2
   140017e00:	imul   eax,eax,0x84e1
   140017e06:	sub    eax,edx
   140017e08:	xor    r13d,eax
   140017e0b:	lea    eax,[r13-0xf890]
   140017e12:	imul   edx,eax,0xfa08
   140017e18:	mov    eax,r13d
   140017e1b:	shr    eax,0xd
   140017e1e:	sub    edx,eax
   140017e20:	xor    r9d,edx
   140017e23:	mov    eax,r9d
   140017e26:	xor    eax,0x84e1
   140017e2b:	rol    eax,0x6
   140017e2e:	mov    edx,r9d
   140017e31:	rol    edx,0x2
   140017e34:	imul   eax,eax,0xdc62
   140017e3a:	sub    eax,edx
   140017e3c:	xor    r13d,eax
   140017e3f:	mov    edx,r13d
   140017e42:	xor    edx,0x84e1fa08
   140017e48:	mov    eax,0xdc62f890
   140017e4d:	sub    eax,edx
   140017e4f:	xor    r9d,eax
   140017e52:	mov    r8d,r9d
   140017e55:	ror    r8d,0x6
   140017e59:	mov    eax,r9d
   140017e5c:	xor    eax,0xf890
   140017e61:	imul   edx,eax,0x84e1
   140017e67:	xor    r8d,edx
   140017e6a:	xor    r13d,r8d
   140017e6d:	lea    eax,[r13-0x239d0770]
   140017e74:	ror    eax,0xf
   140017e77:	mov    edx,r13d
   140017e7a:	rol    edx,0x2
   140017e7d:	imul   eax,eax,0xfa08
   140017e83:	add    edx,eax
   140017e85:	xor    r9d,edx
   140017e88:	lea    eax,[r9+0x7b1e05f8]
   140017e8f:	ror    eax,0xe
   140017e92:	mov    edx,r9d
   140017e95:	rol    edx,0x8
   140017e98:	imul   eax,eax,0xdc62
   140017e9e:	sub    eax,edx
   140017ea0:	xor    r13d,eax
   140017ea3:	mov    eax,r13d
   140017ea6:	xor    eax,0x84e1fa08
   140017eab:	ror    eax,0xc
   140017eae:	mov    edx,r13d
   140017eb1:	ror    edx,0xa
   140017eb4:	imul   eax,eax,0xf890
   140017eba:	xor    edx,eax
   140017ebc:	xor    r9d,edx
   140017ebf:	mov    eax,r9d
   140017ec2:	xor    eax,0xdc62
   140017ec7:	imul   edx,eax,0x84e1
   140017ecd:	mov    eax,r9d
   140017ed0:	shr    eax,0xa
   140017ed3:	xor    edx,eax
   140017ed5:	xor    r13d,edx
   140017ed8:	mov    eax,r13d
   140017edb:	not    eax
   140017edd:	ror    eax,0x5
   140017ee0:	imul   eax,eax,0xdc62
   140017ee6:	sub    eax,0x28c168f0
   140017eeb:	xor    r9d,eax
   140017eee:	mov    r10d,r13d
   140017ef1:	xor    r10d,r9d
   140017ef4:	xor    r10d,0x58830298
   140017efb:	lea    eax,[r10-0x7b1e05f8]
   140017f02:	rol    eax,0xb
   140017f05:	mov    edx,r10d
   140017f08:	rol    edx,0xd
   140017f0b:	imul   eax,eax,0xdc62
   140017f11:	add    edx,eax
   140017f13:	xor    r13d,edx
   140017f16:	mov    eax,r13d
   140017f19:	xor    eax,0x84e1fa08
   140017f1e:	ror    eax,0x5
   140017f21:	mov    edx,r13d
   140017f24:	ror    edx,0xc
   140017f27:	imul   eax,eax,0xf890
   140017f2d:	xor    edx,eax
   140017f2f:	xor    r10d,edx
   140017f32:	lea    eax,[r10-0xf890]
   140017f39:	imul   edx,eax,0x84e1
   140017f3f:	mov    eax,r10d
   140017f42:	shr    eax,0x9
   140017f45:	sub    edx,eax
   140017f47:	xor    r13d,edx
   140017f4a:	lea    eax,[r13+0x239c0d68]
   140017f51:	xor    r10d,eax
   140017f54:	lea    r9d,[r10-0xdc62]
   140017f5b:	xor    r9d,r13d
   140017f5e:	xor    r9d,0x84e1fa08
   140017f65:	lea    eax,[r9+0x7b1e05f8]
   140017f6c:	ror    eax,0x4
   140017f6f:	mov    edx,r9d
   140017f72:	ror    edx,0xb
   140017f75:	imul   eax,eax,0xf890
   140017f7b:	xor    edx,eax
   140017f7d:	xor    r10d,edx
   140017f80:	mov    eax,0xdc62f890
   140017f85:	sub    eax,r10d
   140017f88:	ror    eax,0x7
   140017f8b:	mov    edx,r10d
   140017f8e:	ror    edx,0x3
   140017f91:	imul   eax,eax,0x84e1
   140017f97:	add    edx,eax
   140017f99:	xor    r9d,edx
   140017f9c:	mov    eax,r9d
   140017f9f:	xor    eax,0xdc62f890
   140017fa4:	rol    eax,1
   140017fa6:	mov    edx,r9d
   140017fa9:	ror    edx,0x8
   140017fac:	imul   eax,eax,0xfa08
   140017fb2:	add    edx,eax
   140017fb4:	xor    r10d,edx
   140017fb7:	mov    r8d,r10d
   140017fba:	ror    r8d,1
   140017fbd:	mov    eax,r10d
   140017fc0:	xor    eax,0xf890
   140017fc5:	imul   edx,eax,0xdc62
   140017fcb:	add    r8d,edx
   140017fce:	xor    r9d,r8d
   140017fd1:	mov    eax,r9d
   140017fd4:	xor    eax,0xfa08
   140017fd9:	rol    eax,1
   140017fdb:	mov    edx,r9d
   140017fde:	rol    edx,0x8
   140017fe1:	imul   eax,eax,0xf890
   140017fe7:	xor    edx,eax
   140017fe9:	xor    r10d,edx
   140017fec:	mov    edx,r10d
   140017fef:	xor    edx,0xdc62f890
   140017ff5:	mov    eax,0x84e1fa08
   140017ffa:	sub    eax,edx
   140017ffc:	xor    r9d,eax
   140017fff:	lea    eax,[r9+0x239d0770]
   140018006:	ror    eax,0x3
   140018009:	mov    edx,r9d
   14001800c:	ror    edx,0x2
   14001800f:	imul   eax,eax,0xfa08
   140018015:	add    edx,eax
   140018017:	xor    edx,ecx
   140018019:	xor    r10d,edx
   14001801c:	mov    DWORD PTR [rbp+0x44],r10d
   140018020:	xor    r9d,esi
   140018023:	mov    DWORD PTR [rbp+0x1c],r9d
   140018027:	mov    BYTE PTR [r12-0x4],r10b
   14001802c:	ror    DWORD PTR [rbp+0x44],0x8
   140018030:	movzx  eax,BYTE PTR [rbp+0x1c]
   140018034:	mov    BYTE PTR [r12],al
   140018038:	ror    DWORD PTR [rbp+0x1c],0x8
   14001803c:	movzx  eax,BYTE PTR [rbp+0x44]
   140018040:	mov    BYTE PTR [r12-0x5],al
   140018045:	ror    DWORD PTR [rbp+0x44],0x8
   140018049:	movzx  eax,BYTE PTR [rbp+0x1c]
   14001804d:	mov    BYTE PTR [r12-0x1],al
   140018052:	ror    DWORD PTR [rbp+0x1c],0x8
   140018056:	movzx  eax,BYTE PTR [rbp+0x44]
   14001805a:	mov    BYTE PTR [r12-0x6],al
   14001805f:	ror    DWORD PTR [rbp+0x44],0x8
   140018063:	movzx  eax,BYTE PTR [rbp+0x1c]
   140018067:	mov    BYTE PTR [r12-0x2],al
   14001806c:	ror    DWORD PTR [rbp+0x1c],0x8
   140018070:	movzx  eax,BYTE PTR [rbp+0x44]
   140018074:	mov    BYTE PTR [r12-0x7],al
   140018079:	movzx  eax,BYTE PTR [rbp+0x1c]
   14001807d:	mov    BYTE PTR [r12-0x3],al
   140018082:	mov    r9d,DWORD PTR [rbp+0x44]
   140018086:	ror    r9d,0x8
   14001808a:	mov    DWORD PTR [rbp+0x44],r9d
   14001808e:	mov    r13d,DWORD PTR [rbp+0x1c]
   140018092:	ror    r13d,0x8
   140018096:	mov    DWORD PTR [rbp+0x1c],r13d
   14001809a:	mov    ecx,ebx
   14001809c:	mov    esi,r11d
   14001809f:	lea    r12,[r12+0x8]
   1400180a4:	sub    r14,0x1
   1400180a8:	jne    0x140017d7d
   1400180ae:	xor    r13d,r13d
   1400180b1:	mov    eax,r13d
   1400180b4:	movzx  ecx,al
   1400180b7:	mov    edi,DWORD PTR [rbp+0x50]
   1400180ba:	mov    rsi,QWORD PTR [rbp-0x50]
   1400180be:	mov    r14d,DWORD PTR [rbp-0x78]
   1400180c2:	xor    cl,BYTE PTR [rax+rsi*1]
   1400180c5:	inc    rax
   1400180c8:	cmp    rax,0x338
   1400180ce:	jb     0x1400180c2
   1400180d0:	movzx  eax,cl
   1400180d3:	cmp    rax,QWORD PTR [rip+0x2613e]        # 0x14003e218
   1400180da:	jne    0x140018261
   1400180e0:	mov    QWORD PTR [rbp+0x350],rsi
   1400180e7:	mov    QWORD PTR [rbp+0x678],0x338
   1400180f2:	mov    BYTE PTR [rsi+0x337],r13b
   1400180f9:	mov    r12d,0x60
   1400180ff:	mov    r8d,r12d
   140018102:	xor    edx,edx
   140018104:	lea    rbx,[rip+0x37045]        # 0x14004f150
   14001810b:	mov    rcx,rbx
   14001810e:	call   0x140014694
   140018113:	cmp    BYTE PTR [rsi],r13b
   140018116:	je     0x140018281
   14001811c:	mov    rdx,rsi
   14001811f:	or     rax,0xffffffffffffffff
   140018123:	lea    rax,[rax+0x1]
   140018127:	cmp    WORD PTR [rsi+rax*2],0x0
   14001812c:	jne    0x140018123
   14001812e:	lea    rsi,[rsi+rax*2]
   140018132:	mov    eax,DWORD PTR [rbp+0x0]
   140018135:	lea    rcx,[rax+rax*2]
   140018139:	lea    rbx,[rbx+rcx*8]
   14001813d:	mov    r8,rbx
   140018140:	xor    ecx,ecx
   140018142:	call   QWORD PTR [rip+0x250f8]        # 0x14003d240
   140018148:	test   eax,eax
   14001814a:	je     0x140018269
   140018150:	mov    r14d,r13d
   140018153:	mov    rax,QWORD PTR [rbx]
   140018156:	mov    ecx,0x5a4d
   14001815b:	cmp    WORD PTR [rax],cx
   14001815e:	je     0x140018168
   140018160:	mov    r14d,0xc000007b
   140018166:	jmp    0x1400181cb
   140018168:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001816c:	cmp    ecx,0x10000000
   140018172:	jb     0x14001817c
   140018174:	mov    r14d,0xc000007b
   14001817a:	jmp    0x1400181cb
   14001817c:	add    rcx,QWORD PTR [rbx]
   14001817f:	cmp    rcx,QWORD PTR [rbx]
   140018182:	jae    0x14001818c
   140018184:	mov    r14d,0xc000007b
   14001818a:	jmp    0x1400181cb
   14001818c:	cmp    DWORD PTR [rcx],0x4550
   140018192:	je     0x14001819c
   140018194:	mov    r14d,0xc000007b
   14001819a:	jmp    0x1400181cb
   14001819c:	movzx  eax,WORD PTR [rcx+0x18]
   1400181a0:	mov    edx,0x10b
   1400181a5:	sub    ax,dx
   1400181a8:	mov    edx,0xfeff
   1400181ad:	test   dx,ax
   1400181b0:	je     0x1400181ba
   1400181b2:	mov    r14d,0xc000000d
   1400181b8:	jmp    0x1400181cb
   1400181ba:	mov    rax,QWORD PTR [rcx+0x88]
   1400181c1:	mov    QWORD PTR [rbx+0xc],rax
   1400181c5:	mov    eax,DWORD PTR [rcx+0x50]
   1400181c8:	mov    DWORD PTR [rbx+0x8],eax
   1400181cb:	mov    r13d,DWORD PTR [rsi+0x2]
   1400181cf:	add    rsi,0x6
   1400181d3:	xor    eax,eax
   1400181d5:	mov    r12d,eax
   1400181d8:	test   r13d,r13d
   1400181db:	je     0x140018246
   1400181dd:	mov    QWORD PTR [rbp+0x4d0],rax
   1400181e4:	mov    rcx,rsi
   1400181e7:	or     rax,0xffffffffffffffff
   1400181eb:	inc    rax
   1400181ee:	cmp    BYTE PTR [rsi+rax*1],0x0
   1400181f2:	jne    0x1400181eb
   1400181f4:	inc    rsi
   1400181f7:	add    rsi,rax
   1400181fa:	test   r14d,r14d
   1400181fd:	js     0x14001822f
   1400181ff:	lea    r9,[rbp+0x4d0]
   140018206:	mov    r8,rbx
   140018209:	xor    edx,edx
   14001820b:	call   0x1400153c4
   140018210:	mov    r14d,eax
   140018213:	test   eax,eax
   140018215:	js     0x140018271
   140018217:	mov    eax,DWORD PTR [rsp+0x60]
   14001821b:	mov    rcx,QWORD PTR [rbp+0x4d0]
   140018222:	lea    r8,[rip+0x35df7]        # 0x14004e020
   140018229:	mov    QWORD PTR [r8+rax*8],rcx
   14001822d:	jmp    0x140018233
   14001822f:	mov    eax,DWORD PTR [rsp+0x60]
   140018233:	inc    eax
   140018235:	mov    DWORD PTR [rsp+0x60],eax
   140018239:	inc    r12d
   14001823c:	cmp    r12d,r13d
   14001823f:	mov    eax,0x0
   140018244:	jb     0x1400181dd
   140018246:	inc    DWORD PTR [rbp+0x0]
   140018249:	cmp    BYTE PTR [rsi],0x0
   14001824c:	mov    r13d,0x0
   140018252:	lea    rbx,[rip+0x36ef7]        # 0x14004f150
   140018259:	jne    0x14001811c
   14001825f:	jmp    0x140018274
   140018261:	mov    rcx,rsi
   140018264:	call   0x1400155d8
   140018269:	mov    r14d,0xc000007a
   14001826f:	jmp    0x140018274
   140018271:	xor    r13d,r13d
   140018274:	mov    r12d,0x60
   14001827a:	lea    rbx,[rip+0x36ecf]        # 0x14004f150
   140018281:	cmp    QWORD PTR [rbp+0x350],0x0
   140018289:	je     0x1400182a3
   14001828b:	call   QWORD PTR [rip+0x24f2f]        # 0x14003d1c0
   140018291:	mov    rcx,rax
   140018294:	mov    r8,QWORD PTR [rbp+0x350]
   14001829b:	xor    edx,edx
   14001829d:	call   QWORD PTR [rip+0x24f3d]        # 0x14003d1e0
   1400182a3:	test   r14d,r14d
   1400182a6:	jns    0x140018301
   1400182a8:	mov    esi,0x4
   1400182ad:	mov    rcx,QWORD PTR [rbx]
   1400182b0:	test   rcx,rcx
   1400182b3:	je     0x1400182bb
   1400182b5:	call   QWORD PTR [rip+0x24f9d]        # 0x14003d258
   1400182bb:	add    rbx,0x18
   1400182bf:	sub    rsi,0x1
   1400182c3:	jne    0x1400182ad
   1400182c5:	mov    r8,r12
   1400182c8:	xor    edx,edx
   1400182ca:	lea    rbx,[rip+0x36e7f]        # 0x14004f150
   1400182d1:	mov    rcx,rbx
   1400182d4:	call   0x140014694
   1400182d9:	mov    r8d,0x170
   1400182df:	lea    rdx,[rip+0x2948a]        # 0x140041770
   1400182e6:	lea    r12,[rip+0x35d33]        # 0x14004e020
   1400182ed:	mov    rcx,r12
   1400182f0:	call   0x1400156f2
   1400182f5:	mov    rsi,QWORD PTR [rbp-0x40]
   1400182f9:	mov    r14d,0x1
   1400182ff:	jmp    0x140018329
   140018301:	mov    eax,DWORD PTR [rip+0x36841]        # 0x14004eb48
   140018307:	mov    rsi,QWORD PTR [rbp-0x40]
   14001830b:	mov    r14d,0x1
   140018311:	jmp    0x14001831a
   140018313:	lea    rbx,[rip+0x36e36]        # 0x14004f150
   14001831a:	inc    eax
   14001831c:	mov    DWORD PTR [rip+0x36826],eax        # 0x14004eb48
   140018322:	lea    r12,[rip+0x35cf7]        # 0x14004e020
   140018329:	mov    eax,r13d
   14001832c:	xchg   DWORD PTR [rip+0x36e0e],eax        # 0x14004f140
   140018332:	xor    ecx,ecx
   140018334:	mov    DWORD PTR [rbp+0x1072],ecx
   14001833a:	mov    DWORD PTR [rbp-0x70],r13d
   14001833e:	mov    DWORD PTR [rbp+0x10],r13d
   140018342:	mov    QWORD PTR [rbp+0x380],r13
   140018349:	xorps  xmm0,xmm0
   14001834c:	movdqu XMMWORD PTR [rbp+0x168],xmm0
   140018354:	mov    QWORD PTR [rbp-0x48],r13
   140018358:	xorps  xmm1,xmm1
   14001835b:	movdqu XMMWORD PTR [rbp+0x2c0],xmm1
   140018363:	xor    eax,eax
   140018365:	lock cmpxchg DWORD PTR [rip+0x36dd2],r14d        # 0x14004f140
   14001836e:	jne    0x140018363
   140018370:	mov    eax,DWORD PTR [rip+0x367d2]        # 0x14004eb48
   140018376:	test   eax,eax
   140018378:	jne    0x14001897c
   14001837e:	mov    DWORD PTR [rsp+0x60],r13d
   140018383:	mov    DWORD PTR [rbp-0x78],r13d
   140018387:	mov    DWORD PTR [rbp+0x0],r13d
   14001838b:	mov    QWORD PTR [rbp+0x360],r13
   140018392:	mov    QWORD PTR [rbp+0x688],r13
   140018399:	mov    ecx,0x338
   14001839e:	call   0x14000f134
   1400183a3:	mov    rsi,rax
   1400183a6:	mov    QWORD PTR [rbp-0x50],rax
   1400183aa:	test   rax,rax
   1400183ad:	je     0x1400188d9
   1400183b3:	mov    ecx,r13d
   1400183b6:	mov    DWORD PTR [rsp+0x70],0xffffffff
   1400183be:	mov    DWORD PTR [rbp+0x20],r13d
   1400183c2:	xor    eax,eax
   1400183c4:	mov    r9d,eax
   1400183c7:	mov    DWORD PTR [rbp+0x4c],eax
   1400183ca:	lea    r12,[rsi+0x7]
   1400183ce:	lea    rdi,[rip+0x25b0d]        # 0x14003dee2
   1400183d5:	lea    r14d,[rax+0x67]
   1400183d9:	mov    esi,DWORD PTR [rsp+0x70]
   1400183dd:	movzx  ebx,BYTE PTR [rdi-0x2]
   1400183e1:	shl    ebx,0x8
   1400183e4:	movzx  eax,BYTE PTR [rdi-0x1]
   1400183e8:	or     ebx,eax
   1400183ea:	shl    ebx,0x8
   1400183ed:	movzx  eax,BYTE PTR [rdi]
   1400183f0:	or     ebx,eax
   1400183f2:	shl    ebx,0x8
   1400183f5:	movzx  eax,BYTE PTR [rdi+0x1]
   1400183f9:	or     ebx,eax
   1400183fb:	movzx  r11d,BYTE PTR [rdi+0x2]
   140018400:	shl    r11d,0x8
   140018404:	movzx  eax,BYTE PTR [rdi+0x3]
   140018408:	or     r11d,eax
   14001840b:	shl    r11d,0x8
   14001840f:	movzx  eax,BYTE PTR [rdi+0x4]
   140018413:	or     r11d,eax
   140018416:	shl    r11d,0x8
   14001841a:	movzx  eax,BYTE PTR [rdi+0x5]
   14001841e:	or     r11d,eax
   140018421:	xor    r9d,ebx
   140018424:	xor    r13d,r11d
   140018427:	lea    rdi,[rdi+0x8]
   14001842b:	xor    r13d,r9d
   14001842e:	xor    r13d,0x58830298
   140018435:	lea    eax,[r13+0x7b1e05f8]
   14001843c:	rol    eax,0x5
   14001843f:	mov    edx,r13d
   140018442:	rol    edx,0xa
   140018445:	imul   eax,eax,0xf890
   14001844b:	add    edx,eax
   14001844d:	xor    r9d,edx
   140018450:	lea    eax,[r9-0x239d0770]
   140018457:	ror    eax,0x9
   14001845a:	mov    edx,r9d
   14001845d:	rol    edx,0x2
   140018460:	imul   eax,eax,0x84e1
   140018466:	sub    eax,edx
   140018468:	xor    r13d,eax
   14001846b:	lea    eax,[r13-0xf890]
   140018472:	imul   edx,eax,0xfa08
   140018478:	mov    eax,r13d
   14001847b:	shr    eax,0xd
   14001847e:	sub    edx,eax
   140018480:	xor    r9d,edx
   140018483:	mov    eax,r9d
   140018486:	xor    eax,0x84e1
   14001848b:	rol    eax,0x6
   14001848e:	mov    edx,r9d
   140018491:	rol    edx,0x2
   140018494:	imul   eax,eax,0xdc62
   14001849a:	sub    eax,edx
   14001849c:	xor    r13d,eax
   14001849f:	mov    edx,r13d
   1400184a2:	xor    edx,0x84e1fa08
   1400184a8:	mov    eax,0xdc62f890
   1400184ad:	sub    eax,edx
   1400184af:	xor    r9d,eax
   1400184b2:	mov    r8d,r9d
   1400184b5:	ror    r8d,0x6
   1400184b9:	mov    eax,r9d
   1400184bc:	xor    eax,0xf890
   1400184c1:	imul   edx,eax,0x84e1
   1400184c7:	xor    r8d,edx
   1400184ca:	xor    r13d,r8d
   1400184cd:	lea    eax,[r13-0x239d0770]
   1400184d4:	ror    eax,0xf
   1400184d7:	mov    edx,r13d
   1400184da:	rol    edx,0x2
   1400184dd:	imul   eax,eax,0xfa08
   1400184e3:	add    edx,eax
   1400184e5:	xor    r9d,edx
   1400184e8:	lea    eax,[r9+0x7b1e05f8]
   1400184ef:	ror    eax,0xe
   1400184f2:	mov    edx,r9d
   1400184f5:	rol    edx,0x8
   1400184f8:	imul   eax,eax,0xdc62
   1400184fe:	sub    eax,edx
   140018500:	xor    r13d,eax
   140018503:	mov    eax,r13d
   140018506:	xor    eax,0x84e1fa08
   14001850b:	ror    eax,0xc
   14001850e:	mov    edx,r13d
   140018511:	ror    edx,0xa
   140018514:	imul   eax,eax,0xf890
   14001851a:	xor    edx,eax
   14001851c:	xor    r9d,edx
   14001851f:	mov    eax,r9d
   140018522:	xor    eax,0xdc62
   140018527:	imul   edx,eax,0x84e1
   14001852d:	mov    eax,r9d
   140018530:	shr    eax,0xa
   140018533:	xor    edx,eax
   140018535:	xor    r13d,edx
   140018538:	mov    eax,r13d
   14001853b:	not    eax
   14001853d:	ror    eax,0x5
   140018540:	imul   eax,eax,0xdc62
   140018546:	sub    eax,0x28c168f0
   14001854b:	xor    r9d,eax
   14001854e:	mov    r10d,r13d
   140018551:	xor    r10d,r9d
   140018554:	xor    r10d,0x58830298
   14001855b:	lea    eax,[r10-0x7b1e05f8]
   140018562:	rol    eax,0xb
   140018565:	mov    edx,r10d
   140018568:	rol    edx,0xd
   14001856b:	imul   eax,eax,0xdc62
   140018571:	add    edx,eax
   140018573:	xor    r13d,edx
   140018576:	mov    eax,r13d
   140018579:	xor    eax,0x84e1fa08
   14001857e:	ror    eax,0x5
   140018581:	mov    edx,r13d
   140018584:	ror    edx,0xc
   140018587:	imul   eax,eax,0xf890
   14001858d:	xor    edx,eax
   14001858f:	xor    r10d,edx
   140018592:	lea    eax,[r10-0xf890]
   140018599:	imul   edx,eax,0x84e1
   14001859f:	mov    eax,r10d
   1400185a2:	shr    eax,0x9
   1400185a5:	sub    edx,eax
   1400185a7:	xor    r13d,edx
   1400185aa:	lea    eax,[r13+0x239c0d68]
   1400185b1:	xor    r10d,eax
   1400185b4:	lea    r9d,[r10-0xdc62]
   1400185bb:	xor    r9d,r13d
   1400185be:	xor    r9d,0x84e1fa08
   1400185c5:	lea    eax,[r9+0x7b1e05f8]
   1400185cc:	ror    eax,0x4
   1400185cf:	mov    edx,r9d
   1400185d2:	ror    edx,0xb
   1400185d5:	imul   eax,eax,0xf890
   1400185db:	xor    edx,eax
   1400185dd:	xor    r10d,edx
   1400185e0:	mov    eax,0xdc62f890
   1400185e5:	sub    eax,r10d
   1400185e8:	ror    eax,0x7
   1400185eb:	mov    edx,r10d
   1400185ee:	ror    edx,0x3
   1400185f1:	imul   eax,eax,0x84e1
   1400185f7:	add    edx,eax
   1400185f9:	xor    r9d,edx
   1400185fc:	mov    eax,r9d
   1400185ff:	xor    eax,0xdc62f890
   140018604:	rol    eax,1
   140018606:	mov    edx,r9d
   140018609:	ror    edx,0x8
   14001860c:	imul   eax,eax,0xfa08
   140018612:	add    edx,eax
   140018614:	xor    r10d,edx
   140018617:	mov    r8d,r10d
   14001861a:	ror    r8d,1
   14001861d:	mov    eax,r10d
   140018620:	xor    eax,0xf890
   140018625:	imul   edx,eax,0xdc62
   14001862b:	add    r8d,edx
   14001862e:	xor    r9d,r8d
   140018631:	mov    eax,r9d
   140018634:	xor    eax,0xfa08
   140018639:	rol    eax,1
   14001863b:	mov    edx,r9d
   14001863e:	rol    edx,0x8
   140018641:	imul   eax,eax,0xf890
   140018647:	xor    edx,eax
   140018649:	xor    r10d,edx
   14001864c:	mov    edx,r10d
   14001864f:	xor    edx,0xdc62f890
   140018655:	mov    eax,0x84e1fa08
   14001865a:	sub    eax,edx
   14001865c:	xor    r9d,eax
   14001865f:	lea    eax,[r9+0x239d0770]
   140018666:	ror    eax,0x3
   140018669:	mov    edx,r9d
   14001866c:	ror    edx,0x2
   14001866f:	imul   eax,eax,0xfa08
   140018675:	add    edx,eax
   140018677:	xor    edx,r10d
   14001867a:	xor    edx,ecx
   14001867c:	mov    DWORD PTR [rbp+0x4c],edx
   14001867f:	xor    r9d,esi
   140018682:	mov    DWORD PTR [rbp+0x20],r9d
   140018686:	mov    BYTE PTR [r12-0x4],dl
   14001868b:	ror    DWORD PTR [rbp+0x4c],0x8
   14001868f:	movzx  eax,BYTE PTR [rbp+0x20]
   140018693:	mov    BYTE PTR [r12],al
   140018697:	ror    DWORD PTR [rbp+0x20],0x8
   14001869b:	movzx  eax,BYTE PTR [rbp+0x4c]
   14001869f:	mov    BYTE PTR [r12-0x5],al
   1400186a4:	ror    DWORD PTR [rbp+0x4c],0x8
   1400186a8:	movzx  eax,BYTE PTR [rbp+0x20]
   1400186ac:	mov    BYTE PTR [r12-0x1],al
   1400186b1:	ror    DWORD PTR [rbp+0x20],0x8
   1400186b5:	movzx  eax,BYTE PTR [rbp+0x4c]
   1400186b9:	mov    BYTE PTR [r12-0x6],al
   1400186be:	ror    DWORD PTR [rbp+0x4c],0x8
   1400186c2:	movzx  eax,BYTE PTR [rbp+0x20]
   1400186c6:	mov    BYTE PTR [r12-0x2],al
   1400186cb:	ror    DWORD PTR [rbp+0x20],0x8
   1400186cf:	movzx  eax,BYTE PTR [rbp+0x4c]
   1400186d3:	mov    BYTE PTR [r12-0x7],al
   1400186d8:	movzx  eax,BYTE PTR [rbp+0x20]
   1400186dc:	mov    BYTE PTR [r12-0x3],al
   1400186e1:	mov    r9d,DWORD PTR [rbp+0x4c]
   1400186e5:	ror    r9d,0x8
   1400186e9:	mov    DWORD PTR [rbp+0x4c],r9d
   1400186ed:	mov    r13d,DWORD PTR [rbp+0x20]
   1400186f1:	ror    r13d,0x8
   1400186f5:	mov    DWORD PTR [rbp+0x20],r13d
   1400186f9:	mov    ecx,ebx
   1400186fb:	mov    esi,r11d
   1400186fe:	lea    r12,[r12+0x8]
   140018703:	sub    r14,0x1
   140018707:	jne    0x1400183dd
   14001870d:	xor    r13d,r13d
   140018710:	mov    eax,r13d
   140018713:	movzx  ecx,al
   140018716:	mov    edi,DWORD PTR [rbp+0x50]
   140018719:	mov    rsi,QWORD PTR [rbp-0x50]
   14001871d:	mov    r14d,DWORD PTR [rbp-0x78]
   140018721:	xor    cl,BYTE PTR [rax+rsi*1]
   140018724:	inc    rax
   140018727:	cmp    rax,0x338
   14001872d:	jb     0x140018721
   14001872f:	movzx  eax,cl
   140018732:	cmp    rax,QWORD PTR [rip+0x25adf]        # 0x14003e218
   140018739:	jne    0x1400188c3
   14001873f:	mov    QWORD PTR [rbp+0x360],rsi
   140018746:	mov    QWORD PTR [rbp+0x688],0x338
   140018751:	mov    BYTE PTR [rsi+0x337],r13b
   140018758:	xor    edx,edx
   14001875a:	lea    r8d,[rdx+0x60]
   14001875e:	lea    rbx,[rip+0x369eb]        # 0x14004f150
   140018765:	mov    rcx,rbx
   140018768:	call   0x140014694
   14001876d:	cmp    BYTE PTR [rsi],r13b
   140018770:	je     0x1400188eb
   140018776:	mov    rdx,rsi
   140018779:	or     rax,0xffffffffffffffff
   14001877d:	lea    rax,[rax+0x1]
   140018781:	cmp    WORD PTR [rsi+rax*2],0x0
   140018786:	jne    0x14001877d
   140018788:	lea    rsi,[rsi+rax*2]
   14001878c:	mov    eax,DWORD PTR [rbp+0x0]
   14001878f:	lea    rcx,[rax+rax*2]
   140018793:	lea    rbx,[rbx+rcx*8]
   140018797:	mov    r8,rbx
   14001879a:	xor    ecx,ecx
   14001879c:	call   QWORD PTR [rip+0x24a9e]        # 0x14003d240
   1400187a2:	test   eax,eax
   1400187a4:	je     0x1400188bb
   1400187aa:	mov    r14d,r13d
   1400187ad:	mov    rax,QWORD PTR [rbx]
   1400187b0:	mov    ecx,0x5a4d
   1400187b5:	cmp    WORD PTR [rax],cx
   1400187b8:	je     0x1400187c2
   1400187ba:	mov    r14d,0xc000007b
   1400187c0:	jmp    0x140018825
   1400187c2:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400187c6:	cmp    ecx,0x10000000
   1400187cc:	jb     0x1400187d6
   1400187ce:	mov    r14d,0xc000007b
   1400187d4:	jmp    0x140018825
   1400187d6:	add    rcx,QWORD PTR [rbx]
   1400187d9:	cmp    rcx,QWORD PTR [rbx]
   1400187dc:	jae    0x1400187e6
   1400187de:	mov    r14d,0xc000007b
   1400187e4:	jmp    0x140018825
   1400187e6:	cmp    DWORD PTR [rcx],0x4550
   1400187ec:	je     0x1400187f6
   1400187ee:	mov    r14d,0xc000007b
   1400187f4:	jmp    0x140018825
   1400187f6:	movzx  eax,WORD PTR [rcx+0x18]
   1400187fa:	mov    edx,0x10b
   1400187ff:	sub    ax,dx
   140018802:	mov    edx,0xfeff
   140018807:	test   dx,ax
   14001880a:	je     0x140018814
   14001880c:	mov    r14d,0xc000000d
   140018812:	jmp    0x140018825
   140018814:	mov    rax,QWORD PTR [rcx+0x88]
   14001881b:	mov    QWORD PTR [rbx+0xc],rax
   14001881f:	mov    eax,DWORD PTR [rcx+0x50]
   140018822:	mov    DWORD PTR [rbx+0x8],eax
   140018825:	mov    r13d,DWORD PTR [rsi+0x2]
   140018829:	add    rsi,0x6
   14001882d:	xor    eax,eax
   14001882f:	mov    r12d,eax
   140018832:	test   r13d,r13d
   140018835:	je     0x1400188a0
   140018837:	mov    QWORD PTR [rbp+0x4a0],rax
   14001883e:	mov    rcx,rsi
   140018841:	or     rax,0xffffffffffffffff
   140018845:	inc    rax
   140018848:	cmp    BYTE PTR [rsi+rax*1],0x0
   14001884c:	jne    0x140018845
   14001884e:	inc    rsi
   140018851:	add    rsi,rax
   140018854:	test   r14d,r14d
   140018857:	js     0x140018889
   140018859:	lea    r9,[rbp+0x4a0]
   140018860:	mov    r8,rbx
   140018863:	xor    edx,edx
   140018865:	call   0x1400153c4
   14001886a:	mov    r14d,eax
   14001886d:	test   eax,eax
   14001886f:	js     0x1400188e1
   140018871:	mov    eax,DWORD PTR [rsp+0x60]
   140018875:	mov    rcx,QWORD PTR [rbp+0x4a0]
   14001887c:	lea    r8,[rip+0x3579d]        # 0x14004e020
   140018883:	mov    QWORD PTR [r8+rax*8],rcx
   140018887:	jmp    0x14001888d
   140018889:	mov    eax,DWORD PTR [rsp+0x60]
   14001888d:	inc    eax
   14001888f:	mov    DWORD PTR [rsp+0x60],eax
   140018893:	inc    r12d
   140018896:	cmp    r12d,r13d
   140018899:	mov    eax,0x0
   14001889e:	jb     0x140018837
   1400188a0:	inc    DWORD PTR [rbp+0x0]
   1400188a3:	cmp    BYTE PTR [rsi],0x0
   1400188a6:	mov    r13d,0x0
   1400188ac:	lea    rbx,[rip+0x3689d]        # 0x14004f150
   1400188b3:	jne    0x140018776
   1400188b9:	jmp    0x1400188e4
   1400188bb:	mov    r14d,0xc000007a
   1400188c1:	jmp    0x1400188e4
   1400188c3:	mov    rcx,rsi
   1400188c6:	call   0x1400155d8
   1400188cb:	lea    r12,[rip+0x3574e]        # 0x14004e020
   1400188d2:	lea    rbx,[rip+0x36877]        # 0x14004f150
   1400188d9:	mov    r14d,0xc000007a
   1400188df:	jmp    0x1400188f2
   1400188e1:	xor    r13d,r13d
   1400188e4:	lea    rbx,[rip+0x36865]        # 0x14004f150
   1400188eb:	lea    r12,[rip+0x3572e]        # 0x14004e020
   1400188f2:	cmp    QWORD PTR [rbp+0x360],0x0
   1400188fa:	je     0x140018914
   1400188fc:	call   QWORD PTR [rip+0x248be]        # 0x14003d1c0
   140018902:	mov    rcx,rax
   140018905:	mov    r8,QWORD PTR [rbp+0x360]
   14001890c:	xor    edx,edx
   14001890e:	call   QWORD PTR [rip+0x248cc]        # 0x14003d1e0
   140018914:	test   r14d,r14d
   140018917:	jns    0x14001896c
   140018919:	mov    esi,0x4
   14001891e:	mov    rcx,QWORD PTR [rbx]
   140018921:	test   rcx,rcx
   140018924:	je     0x14001892c
   140018926:	call   QWORD PTR [rip+0x2492c]        # 0x14003d258
   14001892c:	add    rbx,0x18
   140018930:	sub    rsi,0x1
   140018934:	jne    0x14001891e
   140018936:	xor    edx,edx
   140018938:	lea    r8d,[rsi+0x60]
   14001893c:	lea    rbx,[rip+0x3680d]        # 0x14004f150
   140018943:	mov    rcx,rbx
   140018946:	call   0x140014694
   14001894b:	mov    r8d,0x170
   140018951:	lea    rdx,[rip+0x28e18]        # 0x140041770
   140018958:	mov    rcx,r12
   14001895b:	call   0x1400156f2
   140018960:	mov    rsi,QWORD PTR [rbp-0x40]
   140018964:	mov    r14d,0x1
   14001896a:	jmp    0x140018984
   14001896c:	mov    eax,DWORD PTR [rip+0x361d6]        # 0x14004eb48
   140018972:	mov    rsi,QWORD PTR [rbp-0x40]
   140018976:	mov    r14d,0x1
   14001897c:	inc    eax
   14001897e:	mov    DWORD PTR [rip+0x361c4],eax        # 0x14004eb48
   140018984:	mov    eax,r13d
   140018987:	xchg   DWORD PTR [rip+0x367b3],eax        # 0x14004f140
   14001898d:	xor    edx,edx
   14001898f:	lea    r8d,[rdx+0x70]
   140018993:	lea    rcx,[rbp+0x750]
   14001899a:	call   0x140014694
   14001899f:	xor    eax,eax
   1400189a1:	mov    QWORD PTR [rbp+0x100],rax
   1400189a8:	mov    r13d,edi
   1400189ab:	and    r13d,0xf
   1400189af:	mov    DWORD PTR [rsp+0x78],r13d
   1400189b4:	mov    eax,edi
   1400189b6:	shr    eax,0x4
   1400189b9:	and    ax,0xf
   1400189bd:	mov    WORD PTR [rbp+0x1070],ax
   1400189c4:	mov    eax,edi
   1400189c6:	shr    eax,0x8
   1400189c9:	and    ax,0xf
   1400189cd:	mov    WORD PTR [rbp+0x1072],ax
   1400189d4:	shr    edi,0xc
   1400189d7:	and    di,0xf
   1400189db:	mov    WORD PTR [rbp+0x1074],di
   1400189e2:	mov    rdi,QWORD PTR [rip+0x3572f]        # 0x14004e118
   1400189e9:	mov    rcx,rdi
   1400189ec:	call   QWORD PTR [rip+0x24d36]        # 0x14003d728
   1400189f2:	xor    edx,edx
   1400189f4:	xor    ecx,ecx
   1400189f6:	mov    r8d,0x403
   1400189fc:	call   rdi
   1400189fe:	mov    QWORD PTR [rsp+0x68],rax
   140018a03:	mov    DWORD PTR [rbp+0x3c],0xffffff
   140018a0a:	test   rax,rax
   140018a0d:	jne    0x140018a3b
   140018a0f:	call   QWORD PTR [rip+0x24753]        # 0x14003d168
   140018a15:	mov    r12d,eax
   140018a18:	test   eax,eax
   140018a1a:	jle    0x140018a27
   140018a1c:	movzx  r12d,ax
   140018a20:	or     r12d,0x80070000
   140018a27:	test   r12d,r12d
   140018a2a:	js     0x14001a0b5
   140018a30:	mov    r12d,0x80004005
   140018a36:	jmp    0x14001a0b5
   140018a3b:	xor    eax,eax
   140018a3d:	mov    esi,eax
   140018a3f:	mov    QWORD PTR [rbp+0x4c8],rax
   140018a46:	mov    QWORD PTR [rbp+0x278],rax
   140018a4d:	mov    QWORD PTR [rbp+0x498],rax
   140018a54:	mov    ebx,eax
   140018a56:	mov    QWORD PTR [rbp+0x238],rax
   140018a5d:	mov    QWORD PTR [rbp+0x370],rax
   140018a64:	mov    QWORD PTR [rbp+0x228],rax
   140018a6b:	mov    r12d,eax
   140018a6e:	mov    DWORD PTR [rbp+0x190],eax
   140018a74:	mov    rdi,QWORD PTR [rip+0x35645]        # 0x14004e0c0
   140018a7b:	mov    rcx,rdi
   140018a7e:	call   QWORD PTR [rip+0x24ca4]        # 0x14003d728
   140018a84:	lea    r9,[rbp+0x190]
   140018a8b:	xor    r8d,r8d
   140018a8e:	lea    rdx,[rbp+0xac]
   140018a95:	lea    ecx,[rbx+0x8]
   140018a98:	call   rdi
   140018a9a:	test   eax,eax
   140018a9c:	jne    0x140018aca
   140018a9e:	call   QWORD PTR [rip+0x246c4]        # 0x14003d168
   140018aa4:	mov    r12d,eax
   140018aa7:	test   eax,eax
   140018aa9:	jle    0x140018ab6
   140018aab:	movzx  r12d,ax
   140018aaf:	or     r12d,0x80070000
   140018ab6:	test   r12d,r12d
   140018ab9:	js     0x140018c34
   140018abf:	mov    r12d,0x80004005
   140018ac5:	jmp    0x140018c34
   140018aca:	mov    ecx,DWORD PTR [rbp+0x190]
   140018ad0:	add    rcx,rcx
   140018ad3:	call   0x14000f134
   140018ad8:	mov    rdx,rax
   140018adb:	lea    rcx,[rbp+0x370]
   140018ae2:	call   0x140015398
   140018ae7:	mov    r13,QWORD PTR [rbp+0x370]
   140018aee:	mov    rcx,r13
   140018af1:	call   0x14003a34c
   140018af6:	test   al,al
   140018af8:	jne    0x140018c29
   140018afe:	test   r13,r13
   140018b01:	je     0x140018c29
   140018b07:	mov    ecx,DWORD PTR [rbp+0xac]
   140018b0d:	inc    ecx
   140018b0f:	shl    rcx,0x2
   140018b13:	call   0x14000f134
   140018b18:	mov    rdx,rax
   140018b1b:	lea    rcx,[rbp+0x228]
   140018b22:	call   0x140015398
   140018b27:	mov    rdi,QWORD PTR [rbp+0x228]
   140018b2e:	mov    rcx,rdi
   140018b31:	call   0x14003a34c
   140018b36:	test   al,al
   140018b38:	jne    0x140018c29
   140018b3e:	test   rdi,rdi
   140018b41:	je     0x140018c29
   140018b47:	mov    r14,QWORD PTR [rip+0x35572]        # 0x14004e0c0
   140018b4e:	mov    rcx,r14
   140018b51:	call   QWORD PTR [rip+0x24bd1]        # 0x14003d728
   140018b57:	lea    r9,[rbp+0x190]
   140018b5e:	mov    r8,r13
   140018b61:	lea    rdx,[rbp+0xac]
   140018b68:	mov    ecx,0x8
   140018b6d:	call   r14
   140018b70:	test   eax,eax
   140018b72:	jne    0x140018ba5
   140018b74:	call   QWORD PTR [rip+0x245ee]        # 0x14003d168
   140018b7a:	mov    r12d,eax
   140018b7d:	test   eax,eax
   140018b7f:	jle    0x140018b8c
   140018b81:	movzx  r12d,ax
   140018b85:	or     r12d,0x80070000
   140018b8c:	mov    r13d,DWORD PTR [rsp+0x78]
   140018b91:	test   r12d,r12d
   140018b94:	js     0x140018c34
   140018b9a:	mov    r12d,0x80004005
   140018ba0:	jmp    0x140018c34
   140018ba5:	mov    r14,rdi
   140018ba8:	xor    eax,eax
   140018baa:	cmp    DWORD PTR [rbp+0xac],eax
   140018bb0:	jbe    0x140018bfc
   140018bb2:	mov    edi,eax
   140018bb4:	mov    rsi,QWORD PTR [rip+0x35515]        # 0x14004e0d0
   140018bbb:	mov    rcx,rsi
   140018bbe:	call   QWORD PTR [rip+0x24b64]        # 0x14003d728
   140018bc4:	xor    edx,edx
   140018bc6:	mov    rcx,r13
   140018bc9:	call   rsi
   140018bcb:	mov    DWORD PTR [r14],eax
   140018bce:	or     rax,0xffffffffffffffff
   140018bd2:	lea    rax,[rax+0x1]
   140018bd6:	cmp    WORD PTR [r13+rax*2+0x0],bx
   140018bdc:	jne    0x140018bd2
   140018bde:	lea    r13,[r13+rax*2+0x0]
   140018be3:	add    r13,0x2
   140018be7:	add    r14,0x4
   140018beb:	inc    edi
   140018bed:	cmp    edi,DWORD PTR [rbp+0xac]
   140018bf3:	jb     0x140018bb4
   140018bf5:	mov    rdi,QWORD PTR [rbp+0x228]
   140018bfc:	mov    DWORD PTR [r14],0x409
   140018c03:	mov    rsi,rdi
   140018c06:	xor    edi,edi
   140018c08:	mov    QWORD PTR [rbp+0x228],rdi
   140018c0f:	mov    QWORD PTR [rbp+0x4c8],rsi
   140018c16:	mov    eax,DWORD PTR [rbp+0xac]
   140018c1c:	inc    eax
   140018c1e:	mov    DWORD PTR [rsp+0x60],eax
   140018c22:	mov    r13d,DWORD PTR [rsp+0x78]
   140018c27:	jmp    0x140018c36
   140018c29:	mov    r13d,DWORD PTR [rsp+0x78]
   140018c2e:	mov    r12d,0x8007000e
   140018c34:	xor    edi,edi
   140018c36:	lea    rcx,[rbp+0x228]
   140018c3d:	call   0x140015604
   140018c42:	lea    rcx,[rbp+0x370]
   140018c49:	call   0x140015604
   140018c4e:	test   r12d,r12d
   140018c51:	js     0x1400193e9
   140018c57:	mov    r11d,edi
   140018c5a:	mov    DWORD PTR [rbp+0x0],edi
   140018c5d:	mov    r9d,edi
   140018c60:	lea    r14,[rip+0x2cad9]        # 0x140045740
   140018c67:	cmp    DWORD PTR [rsp+0x60],ebx
   140018c6b:	jbe    0x140018cbb
   140018c6d:	mov    rcx,rsi
   140018c70:	call   0x14003a34c
   140018c75:	movzx  r10d,al
   140018c79:	mov    r8,rdi
   140018c7c:	mov    edx,edi
   140018c7e:	mov    rdi,r14
   140018c81:	mov    rcx,rsi
   140018c84:	test   r10b,r10b
   140018c87:	mov    rax,rbx
   140018c8a:	cmovne rcx,rbx
   140018c8e:	mov    eax,DWORD PTR [rdi]
   140018c90:	cmp    DWORD PTR [rcx+r8*1],eax
   140018c94:	je     0x140018cb3
   140018c96:	inc    edx
   140018c98:	add    rdi,0x4
   140018c9c:	cmp    edx,0x27
   140018c9f:	jb     0x140018c81
   140018ca1:	inc    r9d
   140018ca4:	add    r8,0x4
   140018ca8:	xor    edi,edi
   140018caa:	cmp    r9d,DWORD PTR [rsp+0x60]
   140018caf:	jae    0x140018cbb
   140018cb1:	jmp    0x140018c7c
   140018cb3:	mov    r11d,edx
   140018cb6:	mov    DWORD PTR [rbp+0x0],edx
   140018cb9:	xor    edi,edi
   140018cbb:	mov    esi,r11d
   140018cbe:	mov    DWORD PTR [rbp+0x50],edi
   140018cc1:	mov    rdi,QWORD PTR [rip+0x35400]        # 0x14004e0c8
   140018cc8:	mov    rcx,rdi
   140018ccb:	call   QWORD PTR [rip+0x24a57]        # 0x14003d728
   140018cd1:	xor    r9d,r9d
   140018cd4:	lea    r8d,[r9+0x55]
   140018cd8:	lea    rdx,[rbp+0x1080]
   140018cdf:	mov    ecx,DWORD PTR [r14+rsi*4]
   140018ce3:	call   rdi
   140018ce5:	test   eax,eax
   140018ce7:	je     0x140018d2f
   140018ce9:	mov    rdi,QWORD PTR [rip+0x353c0]        # 0x14004e0b0
   140018cf0:	mov    rcx,rdi
   140018cf3:	call   QWORD PTR [rip+0x24a2f]        # 0x14003d728
   140018cf9:	mov    r9d,0x10
   140018cff:	lea    r8,[rbp+0xe60]
   140018d06:	lea    edx,[r9+0x48]
   140018d0a:	lea    rcx,[rbp+0x1080]
   140018d11:	call   rdi
   140018d13:	test   eax,eax
   140018d15:	jle    0x140018d2f
   140018d17:	mov    r13d,DWORD PTR [rbp+0xe6c]
   140018d1e:	shr    r13d,0x1b
   140018d22:	and    r13d,0x1
   140018d26:	mov    DWORD PTR [rbp+0x50],r13d
   140018d2a:	mov    r13d,DWORD PTR [rsp+0x78]
   140018d2f:	lea    rcx,[rip+0x26eea]        # 0x14003fc20
   140018d36:	lea    rdx,[rbp+0xfd0]
   140018d3d:	mov    edi,0x13
   140018d42:	mov    QWORD PTR [rdx],rcx
   140018d45:	or     rax,0xffffffffffffffff
   140018d49:	lea    rax,[rax+0x1]
   140018d4d:	cmp    WORD PTR [rcx+rax*2],bx
   140018d51:	jne    0x140018d49
   140018d53:	lea    rcx,[rcx+rax*2]
   140018d57:	add    rcx,0x2
   140018d5b:	add    rdx,0x8
   140018d5f:	sub    rdi,0x1
   140018d63:	jne    0x140018d42
   140018d65:	lea    rcx,[rsi+rsi*2]
   140018d69:	lea    rdx,[rip+0xfffffffffffe7290]        # 0x140000000
   140018d70:	movzx  eax,BYTE PTR [rcx+rdx*1+0x41a80]
   140018d78:	mov    r14,QWORD PTR [rbp+rax*8+0xfd0]
   140018d80:	mov    QWORD PTR [rbp-0x80],r14
   140018d84:	movzx  eax,BYTE PTR [rcx+rdx*1+0x41a81]
   140018d8c:	mov    rdi,QWORD PTR [rbp+rax*8+0xfd0]
   140018d94:	mov    QWORD PTR [rbp-0x50],rdi
   140018d98:	movzx  eax,BYTE PTR [rcx+rdx*1+0x41a82]
   140018da0:	mov    rax,QWORD PTR [rbp+rax*8+0xfd0]
   140018da8:	mov    QWORD PTR [rbp-0x48],rax
   140018dac:	xor    edi,edi
   140018dae:	mov    DWORD PTR [rbp-0x78],edi
   140018db1:	mov    ecx,0x1d18
   140018db6:	call   0x14000f134
   140018dbb:	mov    rsi,rax
   140018dbe:	mov    QWORD PTR [rbp-0x8],rax
   140018dc2:	test   rax,rax
   140018dc5:	jne    0x140018dd2
   140018dc7:	mov    r12d,0x8007000e
   140018dcd:	jmp    0x1400193ff
   140018dd2:	mov    DWORD PTR [rsp+0x60],0xffffffff
   140018dda:	mov    r14d,edi
   140018ddd:	mov    DWORD PTR [rbp+0x24],edi
   140018de0:	mov    r8d,edi
   140018de3:	mov    DWORD PTR [rbp+0x38],edi
   140018de6:	lea    r13,[rsi+0x7]
   140018dea:	lea    rbx,[rip+0x2ac31]        # 0x140043a22
   140018df1:	mov    eax,0x3a3
   140018df6:	mov    esi,edi
   140018df8:	mov    r12d,DWORD PTR [rsp+0x60]
   140018dfd:	movzx  r11d,BYTE PTR [rbx-0x2]
   140018e02:	shl    r11d,0x8
   140018e06:	movzx  ecx,BYTE PTR [rbx-0x1]
   140018e0a:	or     r11d,ecx
   140018e0d:	shl    r11d,0x8
   140018e11:	movzx  ecx,BYTE PTR [rbx]
   140018e14:	or     r11d,ecx
   140018e17:	shl    r11d,0x8
   140018e1b:	movzx  ecx,BYTE PTR [rbx+0x1]
   140018e1f:	or     r11d,ecx
   140018e22:	movzx  r10d,BYTE PTR [rbx+0x2]
   140018e27:	shl    r10d,0x8
   140018e2b:	movzx  ecx,BYTE PTR [rbx+0x3]
   140018e2f:	or     r10d,ecx
   140018e32:	shl    r10d,0x8
   140018e36:	movzx  ecx,BYTE PTR [rbx+0x4]
   140018e3a:	or     r10d,ecx
   140018e3d:	shl    r10d,0x8
   140018e41:	movzx  ecx,BYTE PTR [rbx+0x5]
   140018e45:	or     r10d,ecx
   140018e48:	xor    r8d,r11d
   140018e4b:	xor    r14d,r10d
   140018e4e:	lea    rbx,[rbx+0x8]
   140018e52:	xor    r14d,r8d
   140018e55:	xor    r14d,0x58830298
   140018e5c:	lea    ecx,[r14+0x7b1e05f8]
   140018e63:	rol    ecx,0x5
   140018e66:	mov    edx,r14d
   140018e69:	rol    edx,0xa
   140018e6c:	imul   ecx,ecx,0xf890
   140018e72:	add    edx,ecx
   140018e74:	xor    r8d,edx
   140018e77:	lea    ecx,[r8-0x239d0770]
   140018e7e:	ror    ecx,0x9
   140018e81:	mov    edx,r8d
   140018e84:	rol    edx,0x2
   140018e87:	imul   ecx,ecx,0x84e1
   140018e8d:	sub    ecx,edx
   140018e8f:	xor    r14d,ecx
   140018e92:	lea    ecx,[r14-0xf890]
   140018e99:	imul   edx,ecx,0xfa08
   140018e9f:	mov    ecx,r14d
   140018ea2:	shr    ecx,0xd
   140018ea5:	sub    edx,ecx
   140018ea7:	xor    r8d,edx
   140018eaa:	mov    ecx,r8d
   140018ead:	xor    ecx,0x84e1
   140018eb3:	rol    ecx,0x6
   140018eb6:	mov    edx,r8d
   140018eb9:	rol    edx,0x2
   140018ebc:	imul   ecx,ecx,0xdc62
   140018ec2:	sub    ecx,edx
   140018ec4:	xor    r14d,ecx
   140018ec7:	mov    edx,r14d
   140018eca:	xor    edx,0x84e1fa08
   140018ed0:	mov    ecx,0xdc62f890
   140018ed5:	sub    ecx,edx
   140018ed7:	xor    r8d,ecx
   140018eda:	mov    edi,r8d
   140018edd:	ror    edi,0x6
   140018ee0:	mov    ecx,r8d
   140018ee3:	xor    ecx,0xf890
   140018ee9:	imul   edx,ecx,0x84e1
   140018eef:	xor    edi,edx
   140018ef1:	xor    r14d,edi
   140018ef4:	lea    ecx,[r14-0x239d0770]
   140018efb:	ror    ecx,0xf
   140018efe:	mov    edx,r14d
   140018f01:	rol    edx,0x2
   140018f04:	imul   ecx,ecx,0xfa08
   140018f0a:	add    edx,ecx
   140018f0c:	xor    r8d,edx
   140018f0f:	lea    ecx,[r8+0x7b1e05f8]
   140018f16:	ror    ecx,0xe
   140018f19:	mov    edx,r8d
   140018f1c:	rol    edx,0x8
   140018f1f:	imul   ecx,ecx,0xdc62
   140018f25:	sub    ecx,edx
   140018f27:	xor    r14d,ecx
   140018f2a:	mov    ecx,r14d
   140018f2d:	xor    ecx,0x84e1fa08
   140018f33:	ror    ecx,0xc
   140018f36:	mov    edx,r14d
   140018f39:	ror    edx,0xa
   140018f3c:	imul   ecx,ecx,0xf890
   140018f42:	xor    edx,ecx
   140018f44:	xor    r8d,edx
   140018f47:	mov    ecx,r8d
   140018f4a:	xor    ecx,0xdc62
   140018f50:	imul   edx,ecx,0x84e1
   140018f56:	mov    ecx,r8d
   140018f59:	shr    ecx,0xa
   140018f5c:	xor    edx,ecx
   140018f5e:	xor    r14d,edx
   140018f61:	mov    ecx,r14d
   140018f64:	not    ecx
   140018f66:	ror    ecx,0x5
   140018f69:	imul   ecx,ecx,0xdc62
   140018f6f:	sub    ecx,0x28c168f0
   140018f75:	xor    r8d,ecx
   140018f78:	mov    r9d,r14d
   140018f7b:	xor    r9d,r8d
   140018f7e:	xor    r9d,0x58830298
   140018f85:	lea    ecx,[r9-0x7b1e05f8]
   140018f8c:	rol    ecx,0xb
   140018f8f:	mov    edx,r9d
   140018f92:	rol    edx,0xd
   140018f95:	imul   ecx,ecx,0xdc62
   140018f9b:	add    edx,ecx
   140018f9d:	xor    r14d,edx
   140018fa0:	mov    ecx,r14d
   140018fa3:	xor    ecx,0x84e1fa08
   140018fa9:	ror    ecx,0x5
   140018fac:	mov    edx,r14d
   140018faf:	ror    edx,0xc
   140018fb2:	imul   ecx,ecx,0xf890
   140018fb8:	xor    edx,ecx
   140018fba:	xor    r9d,edx
   140018fbd:	lea    ecx,[r9-0xf890]
   140018fc4:	imul   edx,ecx,0x84e1
   140018fca:	mov    ecx,r9d
   140018fcd:	shr    ecx,0x9
   140018fd0:	sub    edx,ecx
   140018fd2:	xor    r14d,edx
   140018fd5:	lea    ecx,[r14+0x239c0d68]
   140018fdc:	xor    r9d,ecx
   140018fdf:	lea    r8d,[r9-0xdc62]
   140018fe6:	xor    r8d,r14d
   140018fe9:	xor    r8d,0x84e1fa08
   140018ff0:	lea    ecx,[r8+0x7b1e05f8]
   140018ff7:	ror    ecx,0x4
   140018ffa:	mov    edx,r8d
   140018ffd:	ror    edx,0xb
   140019000:	imul   ecx,ecx,0xf890
   140019006:	xor    edx,ecx
   140019008:	xor    r9d,edx
   14001900b:	mov    ecx,0xdc62f890
   140019010:	sub    ecx,r9d
   140019013:	ror    ecx,0x7
   140019016:	mov    edx,r9d
   140019019:	ror    edx,0x3
   14001901c:	imul   ecx,ecx,0x84e1
   140019022:	add    edx,ecx
   140019024:	xor    r8d,edx
   140019027:	mov    ecx,r8d
   14001902a:	xor    ecx,0xdc62f890
   140019030:	rol    ecx,1
   140019032:	mov    edx,r8d
   140019035:	ror    edx,0x8
   140019038:	imul   ecx,ecx,0xfa08
   14001903e:	add    edx,ecx
   140019040:	xor    r9d,edx
   140019043:	mov    edi,r9d
   140019046:	ror    edi,1
   140019048:	mov    ecx,r9d
   14001904b:	xor    ecx,0xf890
   140019051:	imul   edx,ecx,0xdc62
   140019057:	add    edi,edx
   140019059:	xor    r8d,edi
   14001905c:	mov    ecx,r8d
   14001905f:	xor    ecx,0xfa08
   140019065:	rol    ecx,1
   140019067:	mov    edx,r8d
   14001906a:	rol    edx,0x8
   14001906d:	imul   ecx,ecx,0xf890
   140019073:	xor    edx,ecx
   140019075:	xor    r9d,edx
   140019078:	mov    edx,r9d
   14001907b:	xor    edx,0xdc62f890
   140019081:	mov    ecx,0x84e1fa08
   140019086:	sub    ecx,edx
   140019088:	xor    r8d,ecx
   14001908b:	lea    ecx,[r8+0x239d0770]
   140019092:	ror    ecx,0x3
   140019095:	mov    edx,r8d
   140019098:	ror    edx,0x2
   14001909b:	imul   ecx,ecx,0xfa08
   1400190a1:	add    edx,ecx
   1400190a3:	xor    edx,esi
   1400190a5:	xor    r9d,edx
   1400190a8:	mov    DWORD PTR [rbp+0x38],r9d
   1400190ac:	xor    r8d,r12d
   1400190af:	mov    DWORD PTR [rbp+0x24],r8d
   1400190b3:	mov    BYTE PTR [r13-0x4],r9b
   1400190b7:	ror    DWORD PTR [rbp+0x38],0x8
   1400190bb:	movzx  ecx,BYTE PTR [rbp+0x24]
   1400190bf:	mov    BYTE PTR [r13+0x0],cl
   1400190c3:	ror    DWORD PTR [rbp+0x24],0x8
   1400190c7:	movzx  ecx,BYTE PTR [rbp+0x38]
   1400190cb:	mov    BYTE PTR [r13-0x5],cl
   1400190cf:	ror    DWORD PTR [rbp+0x38],0x8
   1400190d3:	movzx  ecx,BYTE PTR [rbp+0x24]
   1400190d7:	mov    BYTE PTR [r13-0x1],cl
   1400190db:	ror    DWORD PTR [rbp+0x24],0x8
   1400190df:	movzx  ecx,BYTE PTR [rbp+0x38]
   1400190e3:	mov    BYTE PTR [r13-0x6],cl
   1400190e7:	ror    DWORD PTR [rbp+0x38],0x8
   1400190eb:	movzx  ecx,BYTE PTR [rbp+0x24]
   1400190ef:	mov    BYTE PTR [r13-0x2],cl
   1400190f3:	ror    DWORD PTR [rbp+0x24],0x8
   1400190f7:	movzx  ecx,BYTE PTR [rbp+0x38]
   1400190fb:	mov    BYTE PTR [r13-0x7],cl
   1400190ff:	movzx  ecx,BYTE PTR [rbp+0x24]
   140019103:	mov    BYTE PTR [r13-0x3],cl
   140019107:	mov    r8d,DWORD PTR [rbp+0x38]
   14001910b:	ror    r8d,0x8
   14001910f:	mov    DWORD PTR [rbp+0x38],r8d
   140019113:	mov    r14d,DWORD PTR [rbp+0x24]
   140019117:	ror    r14d,0x8
   14001911b:	mov    DWORD PTR [rbp+0x24],r14d
   14001911f:	mov    esi,r11d
   140019122:	mov    r12d,r10d
   140019125:	lea    r13,[r13+0x8]
   140019129:	sub    rax,0x1
   14001912d:	jne    0x140018dfd
   140019133:	xor    edi,edi
   140019135:	mov    ecx,edi
   140019137:	mov    rbx,QWORD PTR [rbp+0x238]
   14001913e:	movzx  eax,cl
   140019141:	mov    r12d,DWORD PTR [rbp-0x78]
   140019145:	mov    rsi,QWORD PTR [rbp-0x8]
   140019149:	xor    al,BYTE PTR [rcx+rsi*1]
   14001914c:	inc    rcx
   14001914f:	cmp    rcx,0x1d18
   140019156:	jb     0x140019149
   140019158:	movzx  ecx,al
   14001915b:	cmp    rcx,QWORD PTR [rip+0x2c5d6]        # 0x140045738
   140019162:	je     0x140019174
   140019164:	mov    r12d,0xc004d501
   14001916a:	mov    rcx,rsi
   14001916d:	call   0x1400155d8
   140019172:	jmp    0x140019186
   140019174:	mov    QWORD PTR [rbp+0x278],rsi
   14001917b:	mov    QWORD PTR [rbp+0x498],0x1d18
   140019186:	test   r12d,r12d
   140019189:	js     0x140019364
   14001918f:	mov    rcx,QWORD PTR [rbp+0x278]
   140019196:	call   0x14003a34c
   14001919b:	test   al,al
   14001919d:	cmovne rcx,rdi
   1400191a1:	lea    rdi,[rbp+0xfa0]
   1400191a8:	mov    r8d,0x6
   1400191ae:	mov    r9d,DWORD PTR [rbp+0x0]
   1400191b2:	xor    r13d,r13d
   1400191b5:	or     rsi,0xffffffffffffffff
   1400191b9:	mov    edx,r13d
   1400191bc:	cmp    r9d,edx
   1400191bf:	jne    0x1400191c4
   1400191c1:	mov    QWORD PTR [rdi],rcx
   1400191c4:	mov    rax,rsi
   1400191c7:	inc    rax
   1400191ca:	cmp    BYTE PTR [rcx+rax*1],r13b
   1400191ce:	jne    0x1400191c7
   1400191d0:	inc    rcx
   1400191d3:	add    rcx,rax
   1400191d6:	inc    edx
   1400191d8:	cmp    edx,0x27
   1400191db:	jb     0x1400191bc
   1400191dd:	add    rdi,0x8
   1400191e1:	sub    r8,0x1
   1400191e5:	jne    0x1400191b9
   1400191e7:	lea    ecx,[r8+0x18]
   1400191eb:	call   0x14000f134
   1400191f0:	mov    rdx,rax
   1400191f3:	lea    rcx,[rbp+0x238]
   1400191fa:	call   0x140015398
   1400191ff:	mov    rbx,QWORD PTR [rbp+0x238]
   140019206:	mov    rcx,rbx
   140019209:	call   0x14003a34c
   14001920e:	test   al,al
   140019210:	jne    0x1400193a4
   140019216:	test   rbx,rbx
   140019219:	je     0x1400193a4
   14001921f:	xor    eax,eax
   140019221:	mov    QWORD PTR [rbx],rax
   140019224:	mov    QWORD PTR [rbx+0x8],rax
   140019228:	mov    QWORD PTR [rbx+0x10],rax
   14001922c:	mov    edi,r13d
   14001922f:	mov    DWORD PTR [rsp+0x60],r13d
   140019234:	mov    rdx,r13
   140019237:	mov    QWORD PTR [rbp-0x30],rdx
   14001923b:	lea    rcx,[rbp+0x1070]
   140019242:	mov    QWORD PTR [rbp-0x8],rcx
   140019246:	mov    eax,r13d
   140019249:	movzx  r8d,WORD PTR [rcx]
   14001924d:	lea    rcx,[rip+0x2c58c]        # 0x1400457e0
   140019254:	cmp    r8w,WORD PTR [rcx]
   140019258:	je     0x14001926a
   14001925a:	inc    eax
   14001925c:	add    rcx,0x2
   140019260:	cmp    eax,0x6
   140019263:	jb     0x140019254
   140019265:	jmp    0x140019323
   14001926a:	mov    r14,QWORD PTR [rbp+rax*8+0xfa0]
   140019272:	lea    rsi,[rsi+0x1]
   140019276:	cmp    BYTE PTR [r14+rsi*1],0x0
   14001927b:	jne    0x140019272
   14001927d:	mov    rdi,QWORD PTR [rip+0x34e5c]        # 0x14004e0e0
   140019284:	mov    rcx,rdi
   140019287:	call   QWORD PTR [rip+0x2449b]        # 0x14003d728
   14001928d:	mov    DWORD PTR [rsp+0x28],r13d
   140019292:	mov    QWORD PTR [rsp+0x20],r13
   140019297:	lea    r9d,[rsi+0x1]
   14001929b:	mov    r8,r14
   14001929e:	xor    edx,edx
   1400192a0:	mov    ecx,0xfde9
   1400192a5:	call   rdi
   1400192a7:	movsxd r13,eax
   1400192aa:	test   eax,eax
   1400192ac:	je     0x1400193b7
   1400192b2:	mov    rcx,r13
   1400192b5:	add    rcx,rcx
   1400192b8:	call   0x14000f134
   1400192bd:	mov    rcx,QWORD PTR [rbp-0x30]
   1400192c1:	mov    QWORD PTR [rcx+rbx*1],rax
   1400192c5:	cmp    rax,0x0
   1400192c9:	je     0x1400193a4
   1400192cf:	or     rsi,0xffffffffffffffff
   1400192d3:	lea    rsi,[rsi+0x1]
   1400192d7:	cmp    BYTE PTR [r14+rsi*1],0x0
   1400192dc:	jne    0x1400192d3
   1400192de:	mov    rdi,QWORD PTR [rip+0x34dfb]        # 0x14004e0e0
   1400192e5:	mov    rcx,rdi
   1400192e8:	call   QWORD PTR [rip+0x2443a]        # 0x14003d728
   1400192ee:	mov    DWORD PTR [rsp+0x28],r13d
   1400192f3:	mov    rax,QWORD PTR [rbp-0x30]
   1400192f7:	mov    rax,QWORD PTR [rax+rbx*1]
   1400192fb:	mov    QWORD PTR [rsp+0x20],rax
   140019300:	lea    r9d,[rsi+0x1]
   140019304:	mov    r8,r14
   140019307:	xor    edx,edx
   140019309:	mov    ecx,0xfde9
   14001930e:	call   rdi
   140019310:	test   eax,eax
   140019312:	je     0x140019372
   140019314:	mov    rdx,QWORD PTR [rbp-0x30]
   140019318:	mov    edi,DWORD PTR [rsp+0x60]
   14001931c:	xor    r13d,r13d
   14001931f:	or     rsi,0xffffffffffffffff
   140019323:	inc    edi
   140019325:	mov    DWORD PTR [rsp+0x60],edi
   140019329:	mov    rcx,QWORD PTR [rbp-0x8]
   14001932d:	add    rcx,0x2
   140019331:	mov    QWORD PTR [rbp-0x8],rcx
   140019335:	add    rdx,0x8
   140019339:	mov    QWORD PTR [rbp-0x30],rdx
   14001933d:	cmp    edi,0x3
   140019340:	jb     0x140019246
   140019346:	mov    rax,rbx
   140019349:	xor    edi,edi
   14001934b:	mov    ebx,edi
   14001934d:	mov    QWORD PTR [rbp+0x238],rbx
   140019354:	mov    QWORD PTR [rbp+0x380],rax
   14001935b:	mov    eax,DWORD PTR [rbp+0x50]
   14001935e:	mov    DWORD PTR [rbp+0x750],eax
   140019364:	mov    r14,QWORD PTR [rbp-0x80]
   140019368:	mov    r13d,DWORD PTR [rsp+0x78]
   14001936d:	jmp    0x1400193ff
   140019372:	call   QWORD PTR [rip+0x23df0]        # 0x14003d168
   140019378:	mov    r12d,eax
   14001937b:	test   eax,eax
   14001937d:	jle    0x14001938a
   14001937f:	movzx  r12d,ax
   140019383:	or     r12d,0x80070000
   14001938a:	test   r12d,r12d
   14001938d:	js     0x1400193aa
   14001938f:	mov    esi,0x80004005
   140019394:	mov    r12d,esi
   140019397:	mov    r14,QWORD PTR [rbp-0x80]
   14001939b:	mov    r13d,DWORD PTR [rsp+0x78]
   1400193a0:	xor    edi,edi
   1400193a2:	jmp    0x140019404
   1400193a4:	mov    r12d,0x8007000e
   1400193aa:	mov    r14,QWORD PTR [rbp-0x80]
   1400193ae:	mov    r13d,DWORD PTR [rsp+0x78]
   1400193b3:	xor    edi,edi
   1400193b5:	jmp    0x1400193ff
   1400193b7:	call   QWORD PTR [rip+0x23dab]        # 0x14003d168
   1400193bd:	mov    r12d,eax
   1400193c0:	test   eax,eax
   1400193c2:	jle    0x1400193cf
   1400193c4:	movzx  r12d,ax
   1400193c8:	or     r12d,0x80070000
   1400193cf:	test   r12d,r12d
   1400193d2:	js     0x1400193aa
   1400193d4:	mov    esi,0x80004005
   1400193d9:	mov    r12d,esi
   1400193dc:	mov    r14,QWORD PTR [rbp-0x80]
   1400193e0:	mov    r13d,DWORD PTR [rsp+0x78]
   1400193e5:	xor    edi,edi
   1400193e7:	jmp    0x140019404
   1400193e9:	mov    rax,QWORD PTR [rbp+0x170]
   1400193f0:	mov    QWORD PTR [rbp-0x50],rax
   1400193f4:	mov    r14,QWORD PTR [rbp+0x168]
   1400193fb:	mov    QWORD PTR [rbp-0x80],r14
   1400193ff:	mov    esi,0x80004005
   140019404:	mov    rcx,rbx
   140019407:	call   0x14003a34c
   14001940c:	test   al,al
   14001940e:	jne    0x140019465
   140019410:	test   rbx,rbx
   140019413:	je     0x140019465
   140019415:	mov    rsi,rdi
   140019418:	mov    r14d,0x3
   14001941e:	cmp    QWORD PTR [rsi+rbx*1],0x0
   140019423:	je     0x140019450
   140019425:	mov    rax,QWORD PTR [rsi+rbx*1]
   140019429:	or     rcx,0xffffffffffffffff
   14001942d:	lea    rcx,[rcx+0x1]
   140019431:	cmp    WORD PTR [rax+rcx*2],0x0
   140019436:	jne    0x14001942d
   140019438:	lea    rcx,[rcx*2+0x2]
   140019440:	mov    rdi,rax
   140019443:	xor    eax,eax
   140019445:	rep stos BYTE PTR es:[rdi],al
   140019447:	mov    rcx,QWORD PTR [rsi+rbx*1]
   14001944b:	call   0x1400155d8
   140019450:	add    rsi,0x8
   140019454:	sub    r14,0x1
   140019458:	jne    0x14001941e
   14001945a:	mov    r14,QWORD PTR [rbp-0x80]
   14001945e:	xor    edi,edi
   140019460:	mov    esi,0x80004005
   140019465:	mov    rcx,QWORD PTR [rbp+0x278]
   14001946c:	call   0x14003a34c
   140019471:	test   al,al
   140019473:	jne    0x14001948a
   140019475:	test   rcx,rcx
   140019478:	je     0x14001948a
   14001947a:	mov    rdi,rcx
   14001947d:	xor    eax,eax
   14001947f:	mov    rcx,QWORD PTR [rbp+0x498]
   140019486:	rep stos BYTE PTR es:[rdi],al
   140019488:	xor    edi,edi
   14001948a:	lea    rcx,[rbp+0x238]
   140019491:	call   0x140015604
   140019496:	lea    rcx,[rbp+0x278]
   14001949d:	call   0x140015604
   1400194a2:	lea    rcx,[rbp+0x4c8]
   1400194a9:	call   0x140015604
   1400194ae:	test   r12d,r12d
   1400194b1:	js     0x14001a08b
   1400194b7:	mov    rcx,QWORD PTR [rbp+0x380]
   1400194be:	call   0x14003a34c
   1400194c3:	mov    rdx,rcx
   1400194c6:	test   al,al
   1400194c8:	cmovne rdx,rdi
   1400194cc:	mov    rdx,QWORD PTR [rdx]
   1400194cf:	mov    QWORD PTR [rbp+0x758],rdx
   1400194d6:	mov    rdx,rcx
   1400194d9:	cmovne rdx,rdi
   1400194dd:	mov    rdx,QWORD PTR [rdx+0x8]
   1400194e1:	mov    QWORD PTR [rbp+0x760],rdx
   1400194e8:	cmovne rcx,rdi
   1400194ec:	mov    rax,QWORD PTR [rcx+0x10]
   1400194f0:	mov    QWORD PTR [rbp+0x768],rax
   1400194f7:	xor    eax,eax
   1400194f9:	mov    QWORD PTR [rbp+0x504],rax
   140019500:	mov    DWORD PTR [rbp+0x50c],eax
   140019506:	mov    ebx,edi
   140019508:	mov    r12d,edi
   14001950b:	mov    DWORD PTR [rbp+0x500],0x10
   140019515:	mov    rdi,QWORD PTR [rip+0x34c6c]        # 0x14004e188
   14001951c:	mov    rcx,rdi
   14001951f:	call   QWORD PTR [rip+0x24203]        # 0x14003d728
   140019525:	xor    r9d,r9d
   140019528:	lea    r8,[rbp+0x500]
   14001952f:	xor    edx,edx
   140019531:	lea    ecx,[rdx+0x42]
   140019534:	call   rdi
   140019536:	test   eax,eax
   140019538:	jne    0x14001955c
   14001953a:	call   QWORD PTR [rip+0x23c28]        # 0x14003d168
   140019540:	mov    r12d,eax
   140019543:	test   eax,eax
   140019545:	jle    0x140019552
   140019547:	movzx  r12d,ax
   14001954b:	or     r12d,0x80070000
   140019552:	test   r12d,r12d
   140019555:	js     0x140019565
   140019557:	mov    r12d,esi
   14001955a:	jmp    0x140019565
   14001955c:	mov    ebx,DWORD PTR [rbp+0x504]
   140019562:	and    ebx,0x1
   140019565:	mov    DWORD PTR [rbp+0x754],ebx
   14001956b:	test   r12d,r12d
   14001956e:	js     0x14001a08b
   140019574:	mov    ecx,r13d
   140019577:	mov    eax,0x2a
   14001957c:	mov    DWORD PTR [rbp-0x18],eax
   14001957f:	sub    ecx,0x1
   140019582:	je     0x1400195a4
   140019584:	sub    ecx,0x1
   140019587:	je     0x14001959b
   140019589:	cmp    ecx,0x1
   14001958c:	jne    0x1400195ae
   14001958e:	mov    ebx,0xe1
   140019593:	mov    DWORD PTR [rbp-0x70],ebx
   140019596:	mov    DWORD PTR [rbp+0x10],ebx
   140019599:	jmp    0x1400195ae
   14001959b:	mov    DWORD PTR [rbp-0x70],0xf
   1400195a2:	jmp    0x1400195a7
   1400195a4:	mov    DWORD PTR [rbp-0x70],eax
   1400195a7:	mov    DWORD PTR [rbp+0x10],0xb
   1400195ae:	mov    ebx,0x60
   1400195b3:	mov    r13d,ebx
   1400195b6:	xor    esi,esi
   1400195b8:	mov    WORD PTR [rbp+0xe80],si
   1400195bf:	xor    edx,edx
   1400195c1:	lea    r8d,[rbx-0x22]
   1400195c5:	lea    rcx,[rbp+0xe82]
   1400195cc:	call   0x140014694
   1400195d1:	xor    edx,edx
   1400195d3:	lea    r8d,[rbx+0x3c]
   1400195d7:	lea    rcx,[rbp+0xec0]
   1400195de:	call   0x140014694
   1400195e3:	mov    eax,0xdc
   1400195e8:	mov    WORD PTR [rbp+0xec4],ax
   1400195ef:	mov    rdi,QWORD PTR [rip+0x34b0a]        # 0x14004e100
   1400195f6:	mov    rcx,rdi
   1400195f9:	call   QWORD PTR [rip+0x24129]        # 0x14003d728
   1400195ff:	lea    r8,[rbp+0xe80]
   140019606:	or     edx,0xffffffff
   140019609:	xor    ecx,ecx
   14001960b:	call   rdi
   14001960d:	test   eax,eax
   14001960f:	je     0x140019644
   140019611:	movzx  r13d,WORD PTR [rbp+0xf26]
   140019619:	mov    DWORD PTR [rbp+0x2c4],esi
   14001961f:	mov    DWORD PTR [rbp+0x2c0],esi
   140019625:	mov    eax,DWORD PTR [rbp+0xf2c]
   14001962b:	mov    DWORD PTR [rbp+0x2c8],eax
   140019631:	mov    eax,DWORD PTR [rbp+0xf30]
   140019637:	mov    DWORD PTR [rbp+0x2cc],eax
   14001963d:	cmp    r13d,ebx
   140019640:	cmovl  r13d,ebx
   140019644:	mov    rbx,QWORD PTR [rbp-0x48]
   140019648:	cmp    DWORD PTR [rsp+0x78],0x1
   14001964d:	cmove  rbx,r14
   140019651:	xor    edx,edx
   140019653:	lea    r8d,[rdx+0x5c]
   140019657:	lea    rcx,[rbp+0xd40]
   14001965e:	call   0x140014694
   140019663:	mov    r12d,esi
   140019666:	mov    rdi,QWORD PTR [rip+0x34aab]        # 0x14004e118
   14001966d:	mov    rcx,rdi
   140019670:	call   QWORD PTR [rip+0x240b2]        # 0x14003d728
   140019676:	xor    edx,edx
   140019678:	xor    ecx,ecx
   14001967a:	mov    r8d,0x403
   140019680:	call   rdi
   140019682:	mov    rsi,rax
   140019685:	test   rax,rax
   140019688:	jne    0x1400196b6
   14001968a:	call   QWORD PTR [rip+0x23ad8]        # 0x14003d168
   140019690:	mov    r12d,eax
   140019693:	test   eax,eax
   140019695:	jle    0x1400196a2
   140019697:	movzx  r12d,ax
   14001969b:	or     r12d,0x80070000
   1400196a2:	test   r12d,r12d
   1400196a5:	js     0x14001a086
   1400196ab:	mov    r12d,0x80004005
   1400196b1:	jmp    0x140019762
   1400196b6:	mov    rdi,QWORD PTR [rip+0x34a1b]        # 0x14004e0d8
   1400196bd:	mov    rcx,rdi
   1400196c0:	call   QWORD PTR [rip+0x24062]        # 0x14003d728
   1400196c6:	mov    r8d,0x48
   1400196cc:	mov    edx,r13d
   1400196cf:	mov    ecx,DWORD PTR [rbp-0x70]
   1400196d2:	call   rdi
   1400196d4:	neg    eax
   1400196d6:	mov    DWORD PTR [rbp+0xd40],eax
   1400196dc:	mov    DWORD PTR [rbp+0xd50],0x190
   1400196e6:	mov    BYTE PTR [rbp+0xd5a],0x5
   1400196ed:	mov    r8,rbx
   1400196f0:	mov    edx,0x20
   1400196f5:	lea    rcx,[rbp+0xd5c]
   1400196fc:	call   0x14001531c
   140019701:	mov    rdi,QWORD PTR [rip+0x34938]        # 0x14004e040
   140019708:	mov    rcx,rdi
   14001970b:	call   QWORD PTR [rip+0x24017]        # 0x14003d728
   140019711:	lea    rcx,[rbp+0xd40]
   140019718:	call   rdi
   14001971a:	test   rax,rax
   14001971d:	jne    0x140019744
   14001971f:	call   QWORD PTR [rip+0x23a43]        # 0x14003d168
   140019725:	mov    r12d,eax
   140019728:	test   eax,eax
   14001972a:	jle    0x140019737
   14001972c:	movzx  r12d,ax
   140019730:	or     r12d,0x80070000
   140019737:	test   r12d,r12d
   14001973a:	js     0x14001974b
   14001973c:	mov    r12d,0x80004005
   140019742:	jmp    0x14001974b
   140019744:	mov    QWORD PTR [rbp+0x770],rax
   14001974b:	mov    rdi,QWORD PTR [rip+0x34a2e]        # 0x14004e180
   140019752:	mov    rcx,rdi
   140019755:	call   QWORD PTR [rip+0x23fcd]        # 0x14003d728
   14001975b:	mov    rdx,rsi
   14001975e:	xor    ecx,ecx
   140019760:	call   rdi
   140019762:	test   r12d,r12d
   140019765:	js     0x14001a086
   14001976b:	cmp    DWORD PTR [rsp+0x78],0x1
   140019770:	mov    rsi,QWORD PTR [rbp-0x48]
   140019774:	cmove  rsi,r14
   140019778:	xor    edx,edx
   14001977a:	lea    r8d,[rdx+0x5c]
   14001977e:	lea    rcx,[rbp+0xda0]
   140019785:	call   0x140014694
   14001978a:	xor    eax,eax
   14001978c:	mov    r12d,eax
   14001978f:	mov    rdi,QWORD PTR [rip+0x34982]        # 0x14004e118
   140019796:	mov    rcx,rdi
   140019799:	call   QWORD PTR [rip+0x23f89]        # 0x14003d728
   14001979f:	xor    edx,edx
   1400197a1:	xor    ecx,ecx
   1400197a3:	mov    r8d,0x403
   1400197a9:	call   rdi
   1400197ab:	mov    rbx,rax
   1400197ae:	test   rax,rax
   1400197b1:	jne    0x1400197df
   1400197b3:	call   QWORD PTR [rip+0x239af]        # 0x14003d168
   1400197b9:	mov    r12d,eax
   1400197bc:	test   eax,eax
   1400197be:	jle    0x1400197cb
   1400197c0:	movzx  r12d,ax
   1400197c4:	or     r12d,0x80070000
   1400197cb:	test   r12d,r12d
   1400197ce:	js     0x14001a086
   1400197d4:	mov    r12d,0x80004005
   1400197da:	jmp    0x14001988b
   1400197df:	mov    rdi,QWORD PTR [rip+0x348f2]        # 0x14004e0d8
   1400197e6:	mov    rcx,rdi
   1400197e9:	call   QWORD PTR [rip+0x23f39]        # 0x14003d728
   1400197ef:	mov    r8d,0x48
   1400197f5:	mov    edx,r13d
   1400197f8:	mov    ecx,DWORD PTR [rbp+0x10]
   1400197fb:	call   rdi
   1400197fd:	neg    eax
   1400197ff:	mov    DWORD PTR [rbp+0xda0],eax
   140019805:	mov    DWORD PTR [rbp+0xdb0],0x190
   14001980f:	mov    BYTE PTR [rbp+0xdba],0x5
   140019816:	mov    r8,rsi
   140019819:	mov    edx,0x20
   14001981e:	lea    rcx,[rbp+0xdbc]
   140019825:	call   0x14001531c
   14001982a:	mov    rdi,QWORD PTR [rip+0x3480f]        # 0x14004e040
   140019831:	mov    rcx,rdi
   140019834:	call   QWORD PTR [rip+0x23eee]        # 0x14003d728
   14001983a:	lea    rcx,[rbp+0xda0]
   140019841:	call   rdi
   140019843:	test   rax,rax
   140019846:	jne    0x14001986d
   140019848:	call   QWORD PTR [rip+0x2391a]        # 0x14003d168
   14001984e:	mov    r12d,eax
   140019851:	test   eax,eax
   140019853:	jle    0x140019860
   140019855:	movzx  r12d,ax
   140019859:	or     r12d,0x80070000
   140019860:	test   r12d,r12d
   140019863:	js     0x140019874
   140019865:	mov    r12d,0x80004005
   14001986b:	jmp    0x140019874
   14001986d:	mov    QWORD PTR [rbp+0x778],rax
   140019874:	mov    rdi,QWORD PTR [rip+0x34905]        # 0x14004e180
   14001987b:	mov    rcx,rdi
   14001987e:	call   QWORD PTR [rip+0x23ea4]        # 0x14003d728
   140019884:	mov    rdx,rbx
   140019887:	xor    ecx,ecx
   140019889:	call   rdi
   14001988b:	test   r12d,r12d
   14001988e:	js     0x14001a086
   140019894:	xor    r8d,r8d
   140019897:	mov    esi,r8d
   14001989a:	mov    edx,r8d
   14001989d:	mov    edi,DWORD PTR [rsp+0x78]
   1400198a1:	mov    ecx,edi
   1400198a3:	sub    ecx,0x1
   1400198a6:	je     0x1400198c9
   1400198a8:	sub    ecx,0x1
   1400198ab:	je     0x1400198b4
   1400198ad:	cmp    ecx,0x1
   1400198b0:	jne    0x1400198d5
   1400198b2:	jmp    0x1400198c9
   1400198b4:	mov    eax,DWORD PTR [rbp+0x2c8]
   1400198ba:	cdq    
   1400198bb:	and    edx,0x3
   1400198be:	lea    esi,[rdx+rax*1]
   1400198c1:	sar    esi,0x2
   1400198c4:	mov    edx,r8d
   1400198c7:	jmp    0x1400198d5
   1400198c9:	mov    esi,DWORD PTR [rbp+0x2c8]
   1400198cf:	mov    edx,DWORD PTR [rbp+0x2cc]
   1400198d5:	mov    DWORD PTR [rbp+0x108],esi
   1400198db:	mov    DWORD PTR [rbp+0x10c],edx
   1400198e1:	cmp    edi,0x1
   1400198e4:	je     0x140019910
   1400198e6:	lea    eax,[rdi-0x2]
   1400198e9:	cmp    eax,0x1
   1400198ec:	ja     0x1400198fb
   1400198ee:	mov    eax,r8d
   1400198f1:	mov    DWORD PTR [rbp-0x18],r8d
   1400198f5:	mov    DWORD PTR [rbp+0x10],r8d
   1400198f9:	jmp    0x14001991c
   1400198fb:	mov    eax,DWORD PTR [rbp+0x7c]
   1400198fe:	mov    DWORD PTR [rbp+0x10],eax
   140019901:	mov    eax,DWORD PTR [rbp+0x7c]
   140019904:	mov    DWORD PTR [rbp-0x18],eax
   140019907:	mov    r14d,DWORD PTR [rbp+0x7c]
   14001990b:	mov    eax,DWORD PTR [rbp+0x7c]
   14001990e:	jmp    0x14001991f
   140019910:	mov    eax,0x96
   140019915:	mov    DWORD PTR [rbp+0x10],0x20
   14001991c:	mov    r14d,r8d
   14001991f:	mov    DWORD PTR [rsp+0x60],eax
   140019923:	sub    esi,eax
   140019925:	sub    esi,r14d
   140019928:	mov    DWORD PTR [rbp+0x7a4],esi
   14001992e:	mov    DWORD PTR [rbp+0x794],esi
   140019934:	mov    rbx,QWORD PTR [rbp+0x758]
   14001993b:	mov    r12d,r8d
   14001993e:	mov    rdi,QWORD PTR [rip+0x34753]        # 0x14004e098
   140019945:	mov    rcx,rdi
   140019948:	call   QWORD PTR [rip+0x23dda]        # 0x14003d728
   14001994e:	mov    rdx,QWORD PTR [rbp+0x770]
   140019955:	mov    rcx,QWORD PTR [rsp+0x68]
   14001995a:	call   rdi
   14001995c:	mov    QWORD PTR [rbp-0x8],rax
   140019960:	mov    rdi,QWORD PTR [rip+0x34791]        # 0x14004e0f8
   140019967:	mov    rcx,rdi
   14001996a:	call   QWORD PTR [rip+0x23db8]        # 0x14003d728
   140019970:	xor    eax,eax
   140019972:	mov    QWORD PTR [rsp+0x28],rax
   140019977:	mov    DWORD PTR [rsp+0x20],0xc50
   14001997f:	lea    r9,[rbp+0x78c]
   140019986:	or     r8d,0xffffffff
   14001998a:	mov    rdx,rbx
   14001998d:	mov    rcx,QWORD PTR [rsp+0x68]
   140019992:	call   rdi
   140019994:	test   eax,eax
   140019996:	mov    eax,0x80004005
   14001999b:	cmove  r12d,eax
   14001999f:	mov    rbx,QWORD PTR [rbp-0x8]
   1400199a3:	test   rbx,rbx
   1400199a6:	je     0x1400199c2
   1400199a8:	mov    rdi,QWORD PTR [rip+0x346e9]        # 0x14004e098
   1400199af:	mov    rcx,rdi
   1400199b2:	call   QWORD PTR [rip+0x23d70]        # 0x14003d728
   1400199b8:	mov    rdx,rbx
   1400199bb:	mov    rcx,QWORD PTR [rsp+0x68]
   1400199c0:	call   rdi
   1400199c2:	test   r12d,r12d
   1400199c5:	js     0x14001a086
   1400199cb:	mov    rbx,QWORD PTR [rbp+0x760]
   1400199d2:	xor    eax,eax
   1400199d4:	mov    r12d,eax
   1400199d7:	mov    rdi,QWORD PTR [rip+0x346ba]        # 0x14004e098
   1400199de:	mov    rcx,rdi
   1400199e1:	call   QWORD PTR [rip+0x23d41]        # 0x14003d728
   1400199e7:	mov    rdx,QWORD PTR [rbp+0x778]
   1400199ee:	mov    rcx,QWORD PTR [rsp+0x68]
   1400199f3:	call   rdi
   1400199f5:	mov    QWORD PTR [rbp-0x8],rax
   1400199f9:	mov    rdi,QWORD PTR [rip+0x346f8]        # 0x14004e0f8
   140019a00:	mov    rcx,rdi
   140019a03:	call   QWORD PTR [rip+0x23d1f]        # 0x14003d728
   140019a09:	xor    eax,eax
   140019a0b:	mov    QWORD PTR [rsp+0x28],rax
   140019a10:	mov    DWORD PTR [rsp+0x20],0xc50
   140019a18:	lea    r9,[rbp+0x79c]
   140019a1f:	or     r8d,0xffffffff
   140019a23:	mov    rdx,rbx
   140019a26:	mov    rcx,QWORD PTR [rsp+0x68]
   140019a2b:	call   rdi
   140019a2d:	test   eax,eax
   140019a2f:	mov    eax,0x80004005
   140019a34:	cmove  r12d,eax
   140019a38:	mov    rbx,QWORD PTR [rbp-0x8]
   140019a3c:	test   rbx,rbx
   140019a3f:	je     0x140019a5b
   140019a41:	mov    rdi,QWORD PTR [rip+0x34650]        # 0x14004e098
   140019a48:	mov    rcx,rdi
   140019a4b:	call   QWORD PTR [rip+0x23cd7]        # 0x14003d728
   140019a51:	mov    rdx,rbx
   140019a54:	mov    rcx,QWORD PTR [rsp+0x68]
   140019a59:	call   rdi
   140019a5b:	test   r12d,r12d
   140019a5e:	js     0x14001a086
   140019a64:	mov    r12d,DWORD PTR [rsp+0x78]
   140019a69:	lea    eax,[r12-0x2]
   140019a6e:	mov    ecx,DWORD PTR [rbp+0x794]
   140019a74:	cmp    eax,0x1
   140019a77:	ja     0x140019a84
   140019a79:	mov    esi,DWORD PTR [rbp+0x7a4]
   140019a7f:	cmp    ecx,esi
   140019a81:	cmovg  esi,ecx
   140019a84:	mov    rdi,QWORD PTR [rip+0x346e5]        # 0x14004e170
   140019a8b:	cmp    DWORD PTR [rbp+0x750],0x0
   140019a92:	je     0x140019ae7
   140019a94:	mov    ebx,r14d
   140019a97:	sub    ebx,ecx
   140019a99:	add    ebx,esi
   140019a9b:	mov    rcx,rdi
   140019a9e:	call   QWORD PTR [rip+0x23c84]        # 0x14003d728
   140019aa4:	mov    r8d,DWORD PTR [rbp-0x18]
   140019aa8:	mov    edx,ebx
   140019aaa:	lea    rcx,[rbp+0x78c]
   140019ab1:	call   rdi
   140019ab3:	mov    ebx,DWORD PTR [rbp+0x10]
   140019ab6:	add    ebx,DWORD PTR [rbp+0x798]
   140019abc:	sub    r14d,DWORD PTR [rbp+0x7a4]
   140019ac3:	add    r14d,esi
   140019ac6:	mov    rdi,QWORD PTR [rip+0x346a3]        # 0x14004e170
   140019acd:	mov    rcx,rdi
   140019ad0:	call   QWORD PTR [rip+0x23c52]        # 0x14003d728
   140019ad6:	mov    r8d,ebx
   140019ad9:	mov    edx,r14d
   140019adc:	lea    rcx,[rbp+0x79c]
   140019ae3:	call   rdi
   140019ae5:	jmp    0x140019b2a
   140019ae7:	mov    rcx,rdi
   140019aea:	call   QWORD PTR [rip+0x23c38]        # 0x14003d728
   140019af0:	mov    r8d,DWORD PTR [rbp-0x18]
   140019af4:	mov    edx,DWORD PTR [rsp+0x60]
   140019af8:	lea    rcx,[rbp+0x78c]
   140019aff:	call   rdi
   140019b01:	mov    edi,DWORD PTR [rbp+0x10]
   140019b04:	add    edi,DWORD PTR [rbp+0x798]
   140019b0a:	mov    rbx,QWORD PTR [rip+0x3465f]        # 0x14004e170
   140019b11:	mov    rcx,rbx
   140019b14:	call   QWORD PTR [rip+0x23c0e]        # 0x14003d728
   140019b1a:	mov    r8d,edi
   140019b1d:	mov    edx,DWORD PTR [rsp+0x60]
   140019b21:	lea    rcx,[rbp+0x79c]
   140019b28:	call   rbx
   140019b2a:	lea    eax,[r12-0x2]
   140019b2f:	cmp    eax,0x1
   140019b32:	jbe    0x140019e46
   140019b38:	cmp    r12d,0x1
   140019b3c:	jne    0x140019e62
   140019b42:	mov    DWORD PTR [rbp+0x788],0xffffff
   140019b4c:	xor    edx,edx
   140019b4e:	lea    r8d,[r12+0x5b]
   140019b53:	lea    rcx,[rbp+0xe00]
   140019b5a:	call   0x140014694
   140019b5f:	xor    r14d,r14d
   140019b62:	mov    r12d,r14d
   140019b65:	mov    rdi,QWORD PTR [rip+0x345ac]        # 0x14004e118
   140019b6c:	mov    rcx,rdi
   140019b6f:	call   QWORD PTR [rip+0x23bb3]        # 0x14003d728
   140019b75:	xor    edx,edx
   140019b77:	xor    ecx,ecx
   140019b79:	mov    r8d,0x403
   140019b7f:	call   rdi
   140019b81:	mov    rbx,rax
   140019b84:	test   rax,rax
   140019b87:	jne    0x140019bb5
   140019b89:	call   QWORD PTR [rip+0x235d9]        # 0x14003d168
   140019b8f:	mov    r12d,eax
   140019b92:	test   eax,eax
   140019b94:	jle    0x140019ba1
   140019b96:	movzx  r12d,ax
   140019b9a:	or     r12d,0x80070000
   140019ba1:	test   r12d,r12d
   140019ba4:	js     0x14001a086
   140019baa:	mov    r12d,0x80004005
   140019bb0:	jmp    0x140019c63
   140019bb5:	mov    rdi,QWORD PTR [rip+0x3451c]        # 0x14004e0d8
   140019bbc:	mov    rcx,rdi
   140019bbf:	call   QWORD PTR [rip+0x23b63]        # 0x14003d728
   140019bc5:	mov    r8d,0x48
   140019bcb:	mov    edx,r13d
   140019bce:	lea    ecx,[r8-0x3d]
   140019bd2:	call   rdi
   140019bd4:	neg    eax
   140019bd6:	mov    DWORD PTR [rbp+0xe00],eax
   140019bdc:	mov    DWORD PTR [rbp+0xe10],0x190
   140019be6:	mov    BYTE PTR [rbp+0xe1a],0x5
   140019bed:	mov    r8,QWORD PTR [rbp-0x50]
   140019bf1:	mov    edx,0x20
   140019bf6:	lea    rcx,[rbp+0xe1c]
   140019bfd:	call   0x14001531c
   140019c02:	mov    rdi,QWORD PTR [rip+0x34437]        # 0x14004e040
   140019c09:	mov    rcx,rdi
   140019c0c:	call   QWORD PTR [rip+0x23b16]        # 0x14003d728
   140019c12:	lea    rcx,[rbp+0xe00]
   140019c19:	call   rdi
   140019c1b:	test   rax,rax
   140019c1e:	jne    0x140019c45
   140019c20:	call   QWORD PTR [rip+0x23542]        # 0x14003d168
   140019c26:	mov    r12d,eax
   140019c29:	test   eax,eax
   140019c2b:	jle    0x140019c38
   140019c2d:	movzx  r12d,ax
   140019c31:	or     r12d,0x80070000
   140019c38:	test   r12d,r12d
   140019c3b:	js     0x140019c4c
   140019c3d:	mov    r12d,0x80004005
   140019c43:	jmp    0x140019c4c
   140019c45:	mov    QWORD PTR [rbp+0x780],rax
   140019c4c:	mov    rdi,QWORD PTR [rip+0x3452d]        # 0x14004e180
   140019c53:	mov    rcx,rdi
   140019c56:	call   QWORD PTR [rip+0x23acc]        # 0x14003d728
   140019c5c:	mov    rdx,rbx
   140019c5f:	xor    ecx,ecx
   140019c61:	call   rdi
   140019c63:	test   r12d,r12d
   140019c66:	js     0x14001a086
   140019c6c:	mov    DWORD PTR [rbp+0x7b4],esi
   140019c72:	mov    rbx,QWORD PTR [rbp+0x768]
   140019c79:	mov    r12d,r14d
   140019c7c:	mov    rdi,QWORD PTR [rip+0x34415]        # 0x14004e098
   140019c83:	mov    rcx,rdi
   140019c86:	call   QWORD PTR [rip+0x23a9c]        # 0x14003d728
   140019c8c:	mov    rdx,QWORD PTR [rbp+0x780]
   140019c93:	mov    r14,QWORD PTR [rsp+0x68]
   140019c98:	mov    rcx,r14
   140019c9b:	call   rdi
   140019c9d:	mov    rsi,rax
   140019ca0:	mov    rdi,QWORD PTR [rip+0x34451]        # 0x14004e0f8
   140019ca7:	mov    rcx,rdi
   140019caa:	call   QWORD PTR [rip+0x23a78]        # 0x14003d728
   140019cb0:	xor    eax,eax
   140019cb2:	mov    QWORD PTR [rsp+0x28],rax
   140019cb7:	mov    DWORD PTR [rsp+0x20],0x460
   140019cbf:	lea    r9,[rbp+0x7ac]
   140019cc6:	or     r8d,0xffffffff
   140019cca:	mov    rdx,rbx
   140019ccd:	mov    rcx,r14
   140019cd0:	call   rdi
   140019cd2:	test   eax,eax
   140019cd4:	mov    eax,0x80004005
   140019cd9:	cmove  r12d,eax
   140019cdd:	test   rsi,rsi
   140019ce0:	je     0x140019cfa
   140019ce2:	mov    rdi,QWORD PTR [rip+0x343af]        # 0x14004e098
   140019ce9:	mov    rcx,rdi
   140019cec:	call   QWORD PTR [rip+0x23a36]        # 0x14003d728
   140019cf2:	mov    rdx,rsi
   140019cf5:	mov    rcx,r14
   140019cf8:	call   rdi
   140019cfa:	test   r12d,r12d
   140019cfd:	js     0x14001a086
   140019d03:	mov    eax,DWORD PTR [rbp+0x7b4]
   140019d09:	add    eax,0x18
   140019d0c:	mov    ecx,0x5a
   140019d11:	cmp    eax,ecx
   140019d13:	cmovl  eax,ecx
   140019d16:	mov    DWORD PTR [rbp+0x7b4],eax
   140019d1c:	mov    DWORD PTR [rbp+0x7b8],0x20
   140019d26:	mov    rdi,QWORD PTR [rip+0x343ab]        # 0x14004e0d8
   140019d2d:	mov    rcx,rdi
   140019d30:	call   QWORD PTR [rip+0x239f2]        # 0x14003d728
   140019d36:	mov    ebx,0x60
   140019d3b:	mov    r8d,ebx
   140019d3e:	mov    edx,r13d
   140019d41:	mov    ecx,DWORD PTR [rbp+0x7ac]
   140019d47:	call   rdi
   140019d49:	mov    DWORD PTR [rbp+0x7ac],eax
   140019d4f:	mov    rdi,QWORD PTR [rip+0x34382]        # 0x14004e0d8
   140019d56:	mov    rcx,rdi
   140019d59:	call   QWORD PTR [rip+0x239c9]        # 0x14003d728
   140019d5f:	mov    r8d,ebx
   140019d62:	mov    edx,r13d
   140019d65:	mov    ecx,DWORD PTR [rbp+0x7b0]
   140019d6b:	call   rdi
   140019d6d:	mov    DWORD PTR [rbp+0x7b0],eax
   140019d73:	mov    rdi,QWORD PTR [rip+0x3435e]        # 0x14004e0d8
   140019d7a:	mov    rcx,rdi
   140019d7d:	call   QWORD PTR [rip+0x239a5]        # 0x14003d728
   140019d83:	mov    r8d,ebx
   140019d86:	mov    edx,r13d
   140019d89:	mov    ecx,DWORD PTR [rbp+0x7b4]
   140019d8f:	call   rdi
   140019d91:	mov    DWORD PTR [rbp+0x7b4],eax
   140019d97:	mov    rdi,QWORD PTR [rip+0x3433a]        # 0x14004e0d8
   140019d9e:	mov    rcx,rdi
   140019da1:	call   QWORD PTR [rip+0x23981]        # 0x14003d728
   140019da7:	mov    r8d,ebx
   140019daa:	mov    edx,r13d
   140019dad:	mov    ecx,DWORD PTR [rbp+0x7b8]
   140019db3:	call   rdi
   140019db5:	mov    DWORD PTR [rbp+0x7b8],eax
   140019dbb:	cmp    DWORD PTR [rbp+0x750],0x0
   140019dc2:	je     0x140019dfe
   140019dc4:	mov    esi,DWORD PTR [rbp+0x79c]
   140019dca:	cmp    DWORD PTR [rbp+0x78c],esi
   140019dd0:	cmovl  esi,DWORD PTR [rbp+0x78c]
   140019dd7:	mov    edi,DWORD PTR [rbp+0x7a8]
   140019ddd:	mov    rbx,QWORD PTR [rip+0x3438c]        # 0x14004e170
   140019de4:	mov    rcx,rbx
   140019de7:	call   QWORD PTR [rip+0x2393b]        # 0x14003d728
   140019ded:	lea    r8d,[rdi+0x24]
   140019df1:	mov    edx,esi
   140019df3:	lea    rcx,[rbp+0x7ac]
   140019dfa:	call   rbx
   140019dfc:	jmp    0x140019e62
   140019dfe:	mov    ecx,DWORD PTR [rbp+0x7a4]
   140019e04:	cmp    DWORD PTR [rbp+0x794],ecx
   140019e0a:	cmovg  ecx,DWORD PTR [rbp+0x794]
   140019e11:	mov    ebx,DWORD PTR [rbp+0x7a8]
   140019e17:	mov    esi,DWORD PTR [rbp+0x7ac]
   140019e1d:	sub    esi,DWORD PTR [rbp+0x7b4]
   140019e23:	add    esi,ecx
   140019e25:	mov    rdi,QWORD PTR [rip+0x34344]        # 0x14004e170
   140019e2c:	mov    rcx,rdi
   140019e2f:	call   QWORD PTR [rip+0x238f3]        # 0x14003d728
   140019e35:	lea    r8d,[rbx+0x24]
   140019e39:	mov    edx,esi
   140019e3b:	lea    rcx,[rbp+0x7ac]
   140019e42:	call   rdi
   140019e44:	jmp    0x140019e62
   140019e46:	mov    DWORD PTR [rbp+0x108],esi
   140019e4c:	mov    eax,DWORD PTR [rbp+0x7a8]
   140019e52:	mov    DWORD PTR [rbp+0x10c],eax
   140019e58:	mov    DWORD PTR [rbp+0x788],0xffa8a8a8
   140019e62:	mov    r12d,DWORD PTR [rbp+0x750]
   140019e69:	mov    r14d,DWORD PTR [rbp+0x10c]
   140019e70:	mov    esi,DWORD PTR [rbp+0x108]
   140019e76:	mov    r13d,DWORD PTR [rsp+0x78]
   140019e7b:	mov    ecx,r13d
   140019e7e:	sub    ecx,0x1
   140019e81:	je     0x14001a06f
   140019e87:	sub    ecx,0x1
   140019e8a:	je     0x140019fab
   140019e90:	cmp    ecx,0x1
   140019e93:	jne    0x14001a07f
   140019e99:	xor    eax,eax
   140019e9b:	mov    DWORD PTR [rbp+0xc58],eax
   140019ea1:	xor    edx,edx
   140019ea3:	lea    r8d,[rcx+0x23]
   140019ea7:	lea    rcx,[rbp+0xc5c]
   140019eae:	call   0x140014694
   140019eb3:	mov    rdi,QWORD PTR [rip+0x342ae]        # 0x14004e168
   140019eba:	mov    rcx,rdi
   140019ebd:	call   QWORD PTR [rip+0x23865]        # 0x14003d728
   140019ec3:	mov    edx,0x1
   140019ec8:	xor    ecx,ecx
   140019eca:	call   rdi
   140019ecc:	mov    rbx,rax
   140019ecf:	mov    DWORD PTR [rbp+0xc58],0x28
   140019ed9:	mov    rdi,QWORD PTR [rip+0x34248]        # 0x14004e128
   140019ee0:	mov    rcx,rdi
   140019ee3:	call   QWORD PTR [rip+0x2383f]        # 0x14003d728
   140019ee9:	lea    rdx,[rbp+0xc58]
   140019ef0:	mov    rcx,rbx
   140019ef3:	call   rdi
   140019ef5:	test   eax,eax
   140019ef7:	je     0x14001a07f
   140019efd:	mov    rdi,QWORD PTR [rip+0x3425c]        # 0x14004e160
   140019f04:	mov    rcx,rdi
   140019f07:	call   QWORD PTR [rip+0x2381b]        # 0x14003d728
   140019f0d:	lea    rdx,[rbp+0xc6c]
   140019f14:	xor    ecx,ecx
   140019f16:	call   rdi
   140019f18:	mov    rdi,QWORD PTR [rip+0x34241]        # 0x14004e160
   140019f1f:	mov    rcx,rdi
   140019f22:	call   QWORD PTR [rip+0x23800]        # 0x14003d728
   140019f28:	lea    rdx,[rbp+0xc74]
   140019f2f:	xor    ecx,ecx
   140019f31:	call   rdi
   140019f33:	mov    eax,DWORD PTR [rbp+0xc74]
   140019f39:	sub    eax,esi
   140019f3b:	imul   ecx,eax,0x32
   140019f3e:	mov    eax,0x51eb851f
   140019f43:	imul   ecx
   140019f45:	sar    edx,0x5
   140019f48:	mov    ecx,edx
   140019f4a:	shr    ecx,0x1f
   140019f4d:	add    edx,ecx
   140019f4f:	mov    rcx,QWORD PTR [rbp+0xc74]
   140019f56:	shr    rcx,0x20
   140019f5a:	sub    ecx,r14d
   140019f5d:	imul   ecx,ecx,0x32
   140019f60:	jmp    0x140019f89
   140019f62:	sub    eax,esi
   140019f64:	imul   ecx,eax,0x5f
   140019f67:	mov    eax,0x51eb851f
   140019f6c:	imul   ecx
   140019f6e:	sar    edx,0x5
   140019f71:	mov    eax,edx
   140019f73:	shr    eax,0x1f
   140019f76:	add    edx,eax
   140019f78:	mov    rax,QWORD PTR [rbp+0xc1c]
   140019f7f:	shr    rax,0x20
   140019f83:	sub    eax,r14d
   140019f86:	imul   ecx,eax,0x5f
   140019f89:	mov    DWORD PTR [rbp+0x100],edx
   140019f8f:	mov    eax,0x51eb851f
   140019f94:	imul   ecx
   140019f96:	sar    edx,0x5
   140019f99:	mov    eax,edx
   140019f9b:	shr    eax,0x1f
   140019f9e:	add    edx,eax
   140019fa0:	mov    DWORD PTR [rbp+0x104],edx
   140019fa6:	jmp    0x14001a07f
   140019fab:	xor    eax,eax
   140019fad:	mov    DWORD PTR [rbp+0xc00],eax
   140019fb3:	xor    edx,edx
   140019fb5:	lea    r8d,[rax+0x24]
   140019fb9:	lea    rcx,[rbp+0xc04]
   140019fc0:	call   0x140014694
   140019fc5:	mov    rdi,QWORD PTR [rip+0x3419c]        # 0x14004e168
   140019fcc:	mov    rcx,rdi
   140019fcf:	call   QWORD PTR [rip+0x23753]        # 0x14003d728
   140019fd5:	mov    edx,0x1
   140019fda:	xor    ecx,ecx
   140019fdc:	call   rdi
   140019fde:	mov    rbx,rax
   140019fe1:	mov    DWORD PTR [rbp+0xc00],0x28
   140019feb:	mov    rdi,QWORD PTR [rip+0x34136]        # 0x14004e128
   140019ff2:	mov    rcx,rdi
   140019ff5:	call   QWORD PTR [rip+0x2372d]        # 0x14003d728
   140019ffb:	lea    rdx,[rbp+0xc00]
   14001a002:	mov    rcx,rbx
   14001a005:	call   rdi
   14001a007:	test   eax,eax
   14001a009:	je     0x14001a07f
   14001a00b:	mov    rdi,QWORD PTR [rip+0x3414e]        # 0x14004e160
   14001a012:	mov    rcx,rdi
   14001a015:	call   QWORD PTR [rip+0x2370d]        # 0x14003d728
   14001a01b:	lea    rdx,[rbp+0xc14]
   14001a022:	xor    ecx,ecx
   14001a024:	call   rdi
   14001a026:	mov    rdi,QWORD PTR [rip+0x34133]        # 0x14004e160
   14001a02d:	mov    rcx,rdi
   14001a030:	call   QWORD PTR [rip+0x236f2]        # 0x14003d728
   14001a036:	lea    rdx,[rbp+0xc1c]
   14001a03d:	xor    ecx,ecx
   14001a03f:	call   rdi
   14001a041:	mov    eax,DWORD PTR [rbp+0xc1c]
   14001a047:	test   r12d,r12d
   14001a04a:	je     0x140019f62
   14001a050:	lea    ecx,[rax+rax*4]
   14001a053:	mov    eax,0x51eb851f
   14001a058:	imul   ecx
   14001a05a:	sar    edx,0x5
   14001a05d:	mov    eax,edx
   14001a05f:	shr    eax,0x1f
   14001a062:	add    edx,eax
   14001a064:	add    edx,DWORD PTR [rbp+0xc14]
   14001a06a:	jmp    0x140019f78
   14001a06f:	xor    ecx,ecx
   14001a071:	mov    DWORD PTR [rbp+0x100],ecx
   14001a077:	mov    DWORD PTR [rbp+0x104],ecx
   14001a07d:	jmp    0x14001a081
   14001a07f:	xor    ecx,ecx
   14001a081:	mov    r12d,ecx
   14001a084:	jmp    0x14001a08b
   14001a086:	mov    r13d,DWORD PTR [rsp+0x78]
   14001a08b:	mov    rdi,QWORD PTR [rip+0x340ee]        # 0x14004e180
   14001a092:	mov    rcx,rdi
   14001a095:	call   QWORD PTR [rip+0x2368d]        # 0x14003d728
   14001a09b:	mov    rdx,QWORD PTR [rsp+0x68]
   14001a0a0:	xor    ecx,ecx
   14001a0a2:	call   rdi
   14001a0a4:	mov    rsi,QWORD PTR [rbp-0x40]
   14001a0a8:	mov    r14d,0x1
   14001a0ae:	lea    rbx,[rip+0x3509b]        # 0x14004f150
   14001a0b5:	xor    eax,eax
   14001a0b7:	lock cmpxchg DWORD PTR [rip+0x35080],r14d        # 0x14004f140
   14001a0c0:	jne    0x14001a0b5
   14001a0c2:	mov    eax,DWORD PTR [rip+0x34a80]        # 0x14004eb48
   14001a0c8:	test   eax,eax
   14001a0ca:	jle    0x14001a122
   14001a0cc:	sub    eax,0x1
   14001a0cf:	mov    DWORD PTR [rip+0x34a73],eax        # 0x14004eb48
   14001a0d5:	jne    0x14001a122
   14001a0d7:	mov    rdi,rbx
   14001a0da:	mov    ebx,0x4
   14001a0df:	mov    rcx,QWORD PTR [rdi]
   14001a0e2:	test   rcx,rcx
   14001a0e5:	je     0x14001a0ed
   14001a0e7:	call   QWORD PTR [rip+0x2316b]        # 0x14003d258
   14001a0ed:	add    rdi,0x18
   14001a0f1:	sub    rbx,0x1
   14001a0f5:	jne    0x14001a0df
   14001a0f7:	xor    edx,edx
   14001a0f9:	lea    r8d,[rbx+0x60]
   14001a0fd:	lea    rcx,[rip+0x3504c]        # 0x14004f150
   14001a104:	call   0x140014694
   14001a109:	mov    r8d,0x170
   14001a10f:	lea    rdx,[rip+0x2765a]        # 0x140041770
   14001a116:	lea    rcx,[rip+0x33f03]        # 0x14004e020
   14001a11d:	call   0x1400156f2
   14001a122:	xor    eax,eax
   14001a124:	xchg   DWORD PTR [rip+0x35016],eax        # 0x14004f140
   14001a12a:	lea    rcx,[rbp+0x380]
   14001a131:	call   0x140015604
   14001a136:	test   r12d,r12d
   14001a139:	js     0x14001bbf4
   14001a13f:	mov    rdi,QWORD PTR [rbp+0x100]
   14001a146:	mov    QWORD PTR [rbp-0x50],rdi
   14001a14a:	xor    r12d,r12d
   14001a14d:	mov    DWORD PTR [rbp+0x7c0],r12d
   14001a154:	xor    edx,edx
   14001a156:	lea    r8d,[r12+0x64]
   14001a15b:	lea    rcx,[rbp+0x7c4]
   14001a162:	call   0x140014694
   14001a167:	mov    esi,r14d
   14001a16a:	mov    rbx,QWORD PTR [rip+0x33eff]        # 0x14004e070
   14001a171:	mov    rcx,rbx
   14001a174:	call   QWORD PTR [rip+0x235ae]        # 0x14003d728
   14001a17a:	lea    edx,[r12+0x7]
   14001a17f:	mov    rcx,QWORD PTR [rbp-0x40]
   14001a183:	call   rbx
   14001a185:	mov    r14,rax
   14001a188:	test   rax,rax
   14001a18b:	je     0x14001a1d7
   14001a18d:	mov    rbx,QWORD PTR [rip+0x33ef4]        # 0x14004e088
   14001a194:	mov    rcx,rbx
   14001a197:	call   QWORD PTR [rip+0x2358b]        # 0x14003d728
   14001a19d:	lea    r8,[rbp+0x7c0]
   14001a1a4:	lea    edx,[r12+0x68]
   14001a1a9:	mov    rcx,r14
   14001a1ac:	call   rbx
   14001a1ae:	test   eax,eax
   14001a1b0:	je     0x14001a1d7
   14001a1b2:	cmp    WORD PTR [rbp+0x7d2],0x20
   14001a1ba:	jne    0x14001a1d7
   14001a1bc:	cmp    QWORD PTR [rbp+0x7d8],r12
   14001a1c3:	je     0x14001a1d7
   14001a1c5:	cmp    DWORD PTR [rbp+0x7c4],r12d
   14001a1cc:	jle    0x14001a1d7
   14001a1ce:	cmp    DWORD PTR [rbp+0x7c8],r12d
   14001a1d5:	jg     0x14001a1da
   14001a1d7:	mov    esi,r12d
   14001a1da:	mov    DWORD PTR [rbp+0x220],esi
   14001a1e0:	test   esi,esi
   14001a1e2:	jne    0x14001a1ea
   14001a1e4:	cmp    r13d,0x1
   14001a1e8:	jne    0x14001a259
   14001a1ea:	mov    rbx,QWORD PTR [rip+0x33f7f]        # 0x14004e170
   14001a1f1:	mov    rcx,rbx
   14001a1f4:	call   QWORD PTR [rip+0x2352e]        # 0x14003d728
   14001a1fa:	mov    r8d,DWORD PTR [rbp-0x4c]
   14001a1fe:	mov    edx,edi
   14001a200:	lea    rcx,[rbp+0x78c]
   14001a207:	call   rbx
   14001a209:	mov    rbx,QWORD PTR [rip+0x33f60]        # 0x14004e170
   14001a210:	mov    rcx,rbx
   14001a213:	call   QWORD PTR [rip+0x2350f]        # 0x14003d728
   14001a219:	mov    r8d,DWORD PTR [rbp-0x4c]
   14001a21d:	mov    edx,edi
   14001a21f:	lea    rcx,[rbp+0x79c]
   14001a226:	call   rbx
   14001a228:	cmp    r13d,0x1
   14001a22c:	jne    0x14001a259
   14001a22e:	mov    ebx,0xb26720
   14001a233:	cmp    DWORD PTR [rbp+0x754],r12d
   14001a23a:	cmovne ebx,r12d
   14001a23e:	mov    rdi,QWORD PTR [rip+0x33e03]        # 0x14004e048
   14001a245:	mov    rcx,rdi
   14001a248:	call   QWORD PTR [rip+0x234da]        # 0x14003d728
   14001a24e:	mov    ecx,ebx
   14001a250:	call   rdi
   14001a252:	mov    QWORD PTR [rbp+0x90],rax
   14001a259:	mov    rdi,QWORD PTR [rip+0x33e40]        # 0x14004e0a0
   14001a260:	mov    rcx,rdi
   14001a263:	call   QWORD PTR [rip+0x234bf]        # 0x14003d728
   14001a269:	mov    r14d,0x1
   14001a26f:	mov    edx,r14d
   14001a272:	mov    rsi,QWORD PTR [rbp-0x40]
   14001a276:	mov    rcx,rsi
   14001a279:	call   rdi
   14001a27b:	mov    DWORD PTR [rbp-0x80],eax
   14001a27e:	mov    eax,0x810
   14001a283:	mov    ecx,0x20812
   14001a288:	cmp    DWORD PTR [rbp+0x750],r12d
   14001a28f:	cmovne eax,ecx
   14001a292:	mov    DWORD PTR [rbp-0x78],eax
   14001a295:	cmp    DWORD PTR [rbp+0x220],r12d
   14001a29c:	je     0x14001ad6a
   14001a2a2:	mov    eax,DWORD PTR [rbp+0x754]
   14001a2a8:	mov    DWORD PTR [rsp+0x70],eax
   14001a2ac:	mov    rax,QWORD PTR [rbp+0x770]
   14001a2b3:	mov    QWORD PTR [rbp-0x8],rax
   14001a2b7:	mov    r12,QWORD PTR [rbp+0x758]
   14001a2be:	xor    r13d,r13d
   14001a2c1:	mov    DWORD PTR [rbp+0x980],r13d
   14001a2c8:	xor    edx,edx
   14001a2ca:	lea    r8d,[r14+0x63]
   14001a2ce:	lea    rcx,[rbp+0x984]
   14001a2d5:	call   0x140014694
   14001a2da:	mov    DWORD PTR [rbp+0x9f0],r13d
   14001a2e1:	xor    edx,edx
   14001a2e3:	lea    r8d,[r14+0x63]
   14001a2e7:	lea    rcx,[rbp+0x9f4]
   14001a2ee:	call   0x140014694
   14001a2f3:	mov    QWORD PTR [rbp-0x50],r13
   14001a2f7:	mov    DWORD PTR [rsp+0x60],r13d
   14001a2fc:	mov    esi,r13d
   14001a2ff:	xor    edx,edx
   14001a301:	lea    r8d,[r14+0x2b]
   14001a305:	lea    rcx,[rbp+0xd10]
   14001a30c:	call   0x140014694
   14001a311:	xorps  xmm0,xmm0
   14001a314:	movdqu XMMWORD PTR [rbp+0xbb0],xmm0
   14001a31c:	test   r12,r12
   14001a31f:	je     0x14001ad61
   14001a325:	mov    rdi,QWORD PTR [rip+0x33d44]        # 0x14004e070
   14001a32c:	mov    rcx,rdi
   14001a32f:	call   QWORD PTR [rip+0x233f3]        # 0x14003d728
   14001a335:	lea    edx,[r14+0x6]
   14001a339:	mov    r14,QWORD PTR [rbp-0x40]
   14001a33d:	mov    rcx,r14
   14001a340:	call   rdi
   14001a342:	mov    rbx,rax
   14001a345:	test   rax,rax
   14001a348:	jne    0x14001a358
   14001a34a:	call   QWORD PTR [rip+0x22e18]        # 0x14003d168
   14001a350:	mov    rsi,r14
   14001a353:	jmp    0x14001bbcb
   14001a358:	mov    rdi,QWORD PTR [rip+0x33d29]        # 0x14004e088
   14001a35f:	mov    rcx,rdi
   14001a362:	call   QWORD PTR [rip+0x233c0]        # 0x14003d728
   14001a368:	lea    r8,[rbp+0x980]
   14001a36f:	mov    edx,0x68
   14001a374:	mov    rcx,rbx
   14001a377:	call   rdi
   14001a379:	test   eax,eax
   14001a37b:	je     0x14001a398
   14001a37d:	mov    rax,QWORD PTR [rbp+0x998]
   14001a384:	mov    QWORD PTR [rbp-0x50],rax
   14001a388:	mov    eax,DWORD PTR [rbp+0x984]
   14001a38e:	mov    DWORD PTR [rsp+0x60],eax
   14001a392:	mov    esi,DWORD PTR [rbp+0x988]
   14001a398:	mov    rdi,QWORD PTR [rip+0x33c91]        # 0x14004e030
   14001a39f:	mov    rcx,rdi
   14001a3a2:	call   QWORD PTR [rip+0x23380]        # 0x14003d728
   14001a3a8:	mov    rcx,r14
   14001a3ab:	call   rdi
   14001a3ad:	mov    r13,rax
   14001a3b0:	test   rax,rax
   14001a3b3:	jne    0x14001a3c3
   14001a3b5:	call   QWORD PTR [rip+0x22dad]        # 0x14003d168
   14001a3bb:	mov    rsi,r14
   14001a3be:	jmp    0x14001bbcb
   14001a3c3:	mov    ebx,DWORD PTR [rbp+0x798]
   14001a3c9:	sub    ebx,DWORD PTR [rbp+0x790]
   14001a3cf:	mov    edi,DWORD PTR [rbp+0x794]
   14001a3d5:	sub    edi,DWORD PTR [rbp+0x78c]
   14001a3db:	xor    eax,eax
   14001a3dd:	mov    QWORD PTR [rbp+0x588],rax
   14001a3e4:	mov    r14d,eax
   14001a3e7:	xor    edx,edx
   14001a3e9:	lea    r8d,[rax+0x2c]
   14001a3ed:	lea    rcx,[rbp+0xd10]
   14001a3f4:	call   0x140014694
   14001a3f9:	mov    DWORD PTR [rbp+0xd10],0x28
   14001a403:	mov    DWORD PTR [rbp+0xd14],edi
   14001a409:	neg    ebx
   14001a40b:	mov    DWORD PTR [rbp+0xd18],ebx
   14001a411:	mov    eax,0x1
   14001a416:	mov    WORD PTR [rbp+0xd1c],ax
   14001a41d:	mov    eax,0x20
   14001a422:	mov    WORD PTR [rbp+0xd1e],ax
   14001a429:	mov    rdi,QWORD PTR [rip+0x33c08]        # 0x14004e038
   14001a430:	mov    rcx,rdi
   14001a433:	call   QWORD PTR [rip+0x232ef]        # 0x14003d728
   14001a439:	xor    eax,eax
   14001a43b:	mov    DWORD PTR [rsp+0x28],eax
   14001a43f:	mov    QWORD PTR [rsp+0x20],rax
   14001a444:	lea    r9,[rbp+0x588]
   14001a44b:	xor    r8d,r8d
   14001a44e:	lea    rdx,[rbp+0xd10]
   14001a455:	mov    rcx,r13
   14001a458:	call   rdi
   14001a45a:	mov    rbx,rax
   14001a45d:	mov    QWORD PTR [rbp+0x0],rax
   14001a461:	test   rax,rax
   14001a464:	jne    0x14001a492
   14001a466:	call   QWORD PTR [rip+0x22cfc]        # 0x14003d168
   14001a46c:	mov    r14d,eax
   14001a46f:	test   eax,eax
   14001a471:	jle    0x14001a47e
   14001a473:	movzx  r14d,ax
   14001a477:	or     r14d,0x80070000
   14001a47e:	test   r14d,r14d
   14001a481:	js     0x14001a7e1
   14001a487:	mov    r14d,0x80004005
   14001a48d:	jmp    0x14001a7e1
   14001a492:	mov    rdi,QWORD PTR [rip+0x33bef]        # 0x14004e088
   14001a499:	mov    rcx,rdi
   14001a49c:	call   QWORD PTR [rip+0x23286]        # 0x14003d728
   14001a4a2:	lea    r8,[rbp+0x9f0]
   14001a4a9:	mov    edx,0x68
   14001a4ae:	mov    rcx,rbx
   14001a4b1:	call   rdi
   14001a4b3:	xor    ecx,ecx
   14001a4b5:	test   eax,eax
   14001a4b7:	cmovne rcx,QWORD PTR [rbp+0xa08]
   14001a4bf:	mov    QWORD PTR [rbp-0x30],rcx
   14001a4c3:	mov    eax,DWORD PTR [rbp+0x794]
   14001a4c9:	sub    eax,DWORD PTR [rbp+0x78c]
   14001a4cf:	mov    DWORD PTR [rbp+0xbb8],eax
   14001a4d5:	mov    eax,DWORD PTR [rbp+0x798]
   14001a4db:	sub    eax,DWORD PTR [rbp+0x790]
   14001a4e1:	mov    DWORD PTR [rbp+0xbbc],eax
   14001a4e7:	mov    rdi,QWORD PTR [rip+0x33baa]        # 0x14004e098
   14001a4ee:	mov    rcx,rdi
   14001a4f1:	call   QWORD PTR [rip+0x23231]        # 0x14003d728
   14001a4f7:	mov    rdx,rbx
   14001a4fa:	mov    rcx,r13
   14001a4fd:	call   rdi
   14001a4ff:	mov    rdi,QWORD PTR [rip+0x33b9a]        # 0x14004e0a0
   14001a506:	mov    rcx,rdi
   14001a509:	call   QWORD PTR [rip+0x23219]        # 0x14003d728
   14001a50f:	mov    edx,0x1
   14001a514:	mov    rcx,r13
   14001a517:	call   rdi
   14001a519:	mov    rdi,QWORD PTR [rip+0x33b78]        # 0x14004e098
   14001a520:	mov    rcx,rdi
   14001a523:	call   QWORD PTR [rip+0x231ff]        # 0x14003d728
   14001a529:	mov    rdx,QWORD PTR [rbp-0x8]
   14001a52d:	mov    rcx,r13
   14001a530:	call   rdi
   14001a532:	mov    QWORD PTR [rbp+0x50],rax
   14001a536:	mov    rdi,QWORD PTR [rip+0x33b53]        # 0x14004e090
   14001a53d:	mov    rcx,rdi
   14001a540:	call   QWORD PTR [rip+0x231e2]        # 0x14003d728
   14001a546:	xor    ecx,ecx
   14001a548:	call   rdi
   14001a54a:	mov    rdi,rax
   14001a54d:	mov    rbx,QWORD PTR [rip+0x33bb4]        # 0x14004e108
   14001a554:	mov    rcx,rbx
   14001a557:	call   QWORD PTR [rip+0x231cb]        # 0x14003d728
   14001a55d:	mov    r8,rdi
   14001a560:	lea    rdx,[rbp+0xbb0]
   14001a567:	mov    rcx,r13
   14001a56a:	call   rbx
   14001a56c:	mov    rdi,QWORD PTR [rip+0x33b85]        # 0x14004e0f8
   14001a573:	mov    rcx,rdi
   14001a576:	call   QWORD PTR [rip+0x231ac]        # 0x14003d728
   14001a57c:	xor    ebx,ebx
   14001a57e:	mov    QWORD PTR [rsp+0x28],rbx
   14001a583:	mov    eax,DWORD PTR [rbp-0x78]
   14001a586:	mov    DWORD PTR [rsp+0x20],eax
   14001a58a:	lea    r9,[rbp+0xbb0]
   14001a591:	or     r8d,0xffffffff
   14001a595:	mov    rdx,r12
   14001a598:	mov    rcx,r13
   14001a59b:	call   rdi
   14001a59d:	cmp    DWORD PTR [rsp+0x78],0x1
   14001a5a2:	jne    0x14001a5cf
   14001a5a4:	cmp    DWORD PTR [rsp+0x70],ebx
   14001a5a8:	je     0x14001a5c7
   14001a5aa:	mov    rdi,QWORD PTR [rip+0x33b87]        # 0x14004e138
   14001a5b1:	mov    rcx,rdi
   14001a5b4:	call   QWORD PTR [rip+0x2316e]        # 0x14003d728
   14001a5ba:	lea    ecx,[rbx+0x8]
   14001a5bd:	call   rdi
   14001a5bf:	mov    r11d,eax
   14001a5c2:	mov    DWORD PTR [rbp-0x18],eax
   14001a5c5:	jmp    0x14001a5d9
   14001a5c7:	mov    r11d,0xffffff
   14001a5cd:	jmp    0x14001a5d5
   14001a5cf:	mov    r11d,0xffa8a8a8
   14001a5d5:	mov    DWORD PTR [rbp-0x18],r11d
   14001a5d9:	mov    edx,DWORD PTR [rbp+0x790]
   14001a5df:	mov    r8d,DWORD PTR [rbp+0x78c]
   14001a5e6:	mov    edi,ebx
   14001a5e8:	mov    ecx,ebx
   14001a5ea:	test   r8d,r8d
   14001a5ed:	jns    0x14001a5f7
   14001a5ef:	mov    edi,r8d
   14001a5f2:	neg    edi
   14001a5f4:	mov    r8d,ebx
   14001a5f7:	test   edx,edx
   14001a5f9:	jns    0x14001a601
   14001a5fb:	mov    ecx,edx
   14001a5fd:	neg    ecx
   14001a5ff:	mov    edx,ebx
   14001a601:	movsxd r9,DWORD PTR [rsp+0x60]
   14001a606:	mov    r10d,r9d
   14001a609:	sub    r10d,r8d
   14001a60c:	movsxd r12,DWORD PTR [rbp+0xbb8]
   14001a613:	mov    eax,r12d
   14001a616:	sub    eax,edi
   14001a618:	cmp    eax,r10d
   14001a61b:	cmovl  r10d,eax
   14001a61f:	mov    eax,DWORD PTR [rbp+0xbbc]
   14001a625:	sub    eax,ecx
   14001a627:	sub    esi,edx
   14001a629:	cmp    eax,esi
   14001a62b:	cmovl  esi,eax
   14001a62e:	test   r10d,r10d
   14001a631:	jle    0x14001a7aa
   14001a637:	test   esi,esi
   14001a639:	jle    0x14001a7aa
   14001a63f:	imul   ecx,r12d
   14001a643:	movsxd rcx,ecx
   14001a646:	movsxd rax,edi
   14001a649:	add    rcx,rax
   14001a64c:	mov    rax,QWORD PTR [rbp-0x30]
   14001a650:	lea    rdi,[rax+rcx*4]
   14001a654:	mov    QWORD PTR [rbp-0x8],rdi
   14001a658:	imul   edx,r9d
   14001a65c:	movsxd rcx,edx
   14001a65f:	movsxd rax,r8d
   14001a662:	add    rcx,rax
   14001a665:	mov    rax,QWORD PTR [rbp-0x50]
   14001a669:	lea    rbx,[rax+rcx*4]
   14001a66d:	test   esi,esi
   14001a66f:	jle    0x14001a7aa
   14001a675:	shl    r12,0x2
   14001a679:	mov    r8,r9
   14001a67c:	shl    r8,0x2
   14001a680:	mov    QWORD PTR [rsp+0x68],r8
   14001a685:	mov    eax,esi
   14001a687:	mov    QWORD PTR [rbp-0x30],rax
   14001a68b:	test   r10d,r10d
   14001a68e:	jle    0x14001a792
   14001a694:	lea    r9,[rbx+0x2]
   14001a698:	mov    rsi,rdi
   14001a69b:	sub    rsi,rbx
   14001a69e:	mov    edi,r10d
   14001a6a1:	mov    QWORD PTR [rbp-0x50],rdi
   14001a6a5:	movzx  ecx,BYTE PTR [r9+rsi*1-0x1]
   14001a6ab:	movzx  eax,BYTE PTR [r9+rsi*1-0x2]
   14001a6b1:	lea    edx,[rax+rcx*2]
   14001a6b4:	movzx  eax,BYTE PTR [r9+rsi*1]
   14001a6b9:	add    edx,eax
   14001a6bb:	sar    edx,0x2
   14001a6be:	not    dl
   14001a6c0:	test   dl,dl
   14001a6c2:	je     0x14001a773
   14001a6c8:	movzx  edi,BYTE PTR [r9]
   14001a6cc:	movzx  r8d,dl
   14001a6d0:	movzx  ecx,r11b
   14001a6d4:	sub    ecx,edi
   14001a6d6:	imul   ecx,r8d
   14001a6da:	mov    eax,0x80808081
   14001a6df:	imul   ecx
   14001a6e1:	add    edx,ecx
   14001a6e3:	sar    edx,0x7
   14001a6e6:	mov    eax,edx
   14001a6e8:	shr    eax,0x1f
   14001a6eb:	add    edx,eax
   14001a6ed:	add    dl,dil
   14001a6f0:	mov    BYTE PTR [r9],dl
   14001a6f3:	movzx  edi,BYTE PTR [r9-0x1]
   14001a6f8:	movzx  ecx,BYTE PTR [rbp-0x17]
   14001a6fc:	sub    ecx,edi
   14001a6fe:	imul   ecx,r8d
   14001a702:	mov    eax,0x80808081
   14001a707:	imul   ecx
   14001a709:	add    edx,ecx
   14001a70b:	sar    edx,0x7
   14001a70e:	mov    eax,edx
   14001a710:	shr    eax,0x1f
   14001a713:	add    edx,eax
   14001a715:	add    dl,dil
   14001a718:	mov    BYTE PTR [r9-0x1],dl
   14001a71c:	movzx  edi,BYTE PTR [r9-0x2]
   14001a721:	movzx  ecx,BYTE PTR [rbp-0x16]
   14001a725:	sub    ecx,edi
   14001a727:	imul   ecx,r8d
   14001a72b:	mov    eax,0x80808081
   14001a730:	imul   ecx
   14001a732:	add    edx,ecx
   14001a734:	sar    edx,0x7
   14001a737:	mov    eax,edx
   14001a739:	shr    eax,0x1f
   14001a73c:	add    edx,eax
   14001a73e:	add    dl,dil
   14001a741:	mov    BYTE PTR [r9-0x2],dl
   14001a745:	movzx  edi,BYTE PTR [r9+0x1]
   14001a74a:	mov    ecx,0xff
   14001a74f:	sub    ecx,edi
   14001a751:	imul   ecx,r8d
   14001a755:	mov    eax,0x80808081
   14001a75a:	imul   ecx
   14001a75c:	add    edx,ecx
   14001a75e:	sar    edx,0x7
   14001a761:	mov    eax,edx
   14001a763:	shr    eax,0x1f
   14001a766:	add    edx,eax
   14001a768:	add    dl,dil
   14001a76b:	mov    BYTE PTR [r9+0x1],dl
   14001a76f:	mov    rdi,QWORD PTR [rbp-0x50]
   14001a773:	add    r9,0x4
   14001a777:	sub    rdi,0x1
   14001a77b:	mov    QWORD PTR [rbp-0x50],rdi
   14001a77f:	jne    0x14001a6a5
   14001a785:	mov    rdi,QWORD PTR [rbp-0x8]
   14001a789:	mov    r8,QWORD PTR [rsp+0x68]
   14001a78e:	mov    rax,QWORD PTR [rbp-0x30]
   14001a792:	add    rdi,r12
   14001a795:	mov    QWORD PTR [rbp-0x8],rdi
   14001a799:	add    rbx,r8
   14001a79c:	sub    rax,0x1
   14001a7a0:	mov    QWORD PTR [rbp-0x30],rax
   14001a7a4:	jne    0x14001a68b
   14001a7aa:	mov    rdi,QWORD PTR [rip+0x338a7]        # 0x14004e058
   14001a7b1:	mov    rcx,rdi
   14001a7b4:	call   QWORD PTR [rip+0x22f6e]        # 0x14003d728
   14001a7ba:	mov    rcx,QWORD PTR [rbp+0x0]
   14001a7be:	call   rdi
   14001a7c0:	mov    rbx,QWORD PTR [rbp+0x50]
   14001a7c4:	test   rbx,rbx
   14001a7c7:	je     0x14001a7e1
   14001a7c9:	mov    rdi,QWORD PTR [rip+0x338c8]        # 0x14004e098
   14001a7d0:	mov    rcx,rdi
   14001a7d3:	call   QWORD PTR [rip+0x22f4f]        # 0x14003d728
   14001a7d9:	mov    rdx,rbx
   14001a7dc:	mov    rcx,r13
   14001a7df:	call   rdi
   14001a7e1:	mov    rdi,QWORD PTR [rip+0x33868]        # 0x14004e050
   14001a7e8:	mov    rcx,rdi
   14001a7eb:	call   QWORD PTR [rip+0x22f37]        # 0x14003d728
   14001a7f1:	mov    rcx,r13
   14001a7f4:	call   rdi
   14001a7f6:	test   r14d,r14d
   14001a7f9:	js     0x14001ad59
   14001a7ff:	mov    eax,DWORD PTR [rbp+0x754]
   14001a805:	mov    DWORD PTR [rsp+0x70],eax
   14001a809:	mov    rax,QWORD PTR [rbp+0x778]
   14001a810:	mov    QWORD PTR [rbp-0x8],rax
   14001a814:	mov    r12,QWORD PTR [rbp+0x760]
   14001a81b:	xor    r13d,r13d
   14001a81e:	mov    DWORD PTR [rbp+0x910],r13d
   14001a825:	xor    edx,edx
   14001a827:	lea    r8d,[r13+0x64]
   14001a82b:	lea    rcx,[rbp+0x914]
   14001a832:	call   0x140014694
   14001a837:	mov    DWORD PTR [rbp+0xad0],r13d
   14001a83e:	xor    edx,edx
   14001a840:	lea    r8d,[r13+0x64]
   14001a844:	lea    rcx,[rbp+0xad4]
   14001a84b:	call   0x140014694
   14001a850:	mov    QWORD PTR [rbp-0x50],r13
   14001a854:	mov    DWORD PTR [rsp+0x60],r13d
   14001a859:	mov    r14d,r13d
   14001a85c:	xor    edx,edx
   14001a85e:	lea    r8d,[r13+0x2c]
   14001a862:	lea    rcx,[rbp+0xce0]
   14001a869:	call   0x140014694
   14001a86e:	xorps  xmm0,xmm0
   14001a871:	movdqu XMMWORD PTR [rbp+0xbe0],xmm0
   14001a879:	test   r12,r12
   14001a87c:	je     0x14001bbc7
   14001a882:	mov    rdi,QWORD PTR [rip+0x337e7]        # 0x14004e070
   14001a889:	mov    rcx,rdi
   14001a88c:	call   QWORD PTR [rip+0x22e96]        # 0x14003d728
   14001a892:	lea    edx,[r13+0x7]
   14001a896:	mov    rsi,QWORD PTR [rbp-0x40]
   14001a89a:	mov    rcx,rsi
   14001a89d:	call   rdi
   14001a89f:	mov    rbx,rax
   14001a8a2:	test   rax,rax
   14001a8a5:	jne    0x14001a8b2
   14001a8a7:	call   QWORD PTR [rip+0x228bb]        # 0x14003d168
   14001a8ad:	jmp    0x14001bbcb
   14001a8b2:	mov    rdi,QWORD PTR [rip+0x337cf]        # 0x14004e088
   14001a8b9:	mov    rcx,rdi
   14001a8bc:	call   QWORD PTR [rip+0x22e66]        # 0x14003d728
   14001a8c2:	lea    r8,[rbp+0x910]
   14001a8c9:	mov    edx,0x68
   14001a8ce:	mov    rcx,rbx
   14001a8d1:	call   rdi
   14001a8d3:	test   eax,eax
   14001a8d5:	je     0x14001a8f3
   14001a8d7:	mov    rax,QWORD PTR [rbp+0x928]
   14001a8de:	mov    QWORD PTR [rbp-0x50],rax
   14001a8e2:	mov    eax,DWORD PTR [rbp+0x914]
   14001a8e8:	mov    DWORD PTR [rsp+0x60],eax
   14001a8ec:	mov    r14d,DWORD PTR [rbp+0x918]
   14001a8f3:	mov    rdi,QWORD PTR [rip+0x33736]        # 0x14004e030
   14001a8fa:	mov    rcx,rdi
   14001a8fd:	call   QWORD PTR [rip+0x22e25]        # 0x14003d728
   14001a903:	mov    rcx,rsi
   14001a906:	call   rdi
   14001a908:	mov    r13,rax
   14001a90b:	test   rax,rax
   14001a90e:	jne    0x14001a91b
   14001a910:	call   QWORD PTR [rip+0x22852]        # 0x14003d168
   14001a916:	jmp    0x14001bbcb
   14001a91b:	mov    ebx,DWORD PTR [rbp+0x7a8]
   14001a921:	sub    ebx,DWORD PTR [rbp+0x7a0]
   14001a927:	mov    edi,DWORD PTR [rbp+0x7a4]
   14001a92d:	sub    edi,DWORD PTR [rbp+0x79c]
   14001a933:	xor    eax,eax
   14001a935:	mov    QWORD PTR [rbp+0x618],rax
   14001a93c:	mov    esi,eax
   14001a93e:	mov    DWORD PTR [rbp+0x0],eax
   14001a941:	xor    edx,edx
   14001a943:	lea    r8d,[rax+0x2c]
   14001a947:	lea    rcx,[rbp+0xce0]
   14001a94e:	call   0x140014694
   14001a953:	mov    DWORD PTR [rbp+0xce0],0x28
   14001a95d:	mov    DWORD PTR [rbp+0xce4],edi
   14001a963:	neg    ebx
   14001a965:	mov    DWORD PTR [rbp+0xce8],ebx
   14001a96b:	mov    eax,0x1
   14001a970:	mov    WORD PTR [rbp+0xcec],ax
   14001a977:	mov    eax,0x20
   14001a97c:	mov    WORD PTR [rbp+0xcee],ax
   14001a983:	mov    rdi,QWORD PTR [rip+0x336ae]        # 0x14004e038
   14001a98a:	mov    rcx,rdi
   14001a98d:	call   QWORD PTR [rip+0x22d95]        # 0x14003d728
   14001a993:	xor    eax,eax
   14001a995:	mov    DWORD PTR [rsp+0x28],eax
   14001a999:	mov    QWORD PTR [rsp+0x20],rax
   14001a99e:	lea    r9,[rbp+0x618]
   14001a9a5:	xor    r8d,r8d
   14001a9a8:	lea    rdx,[rbp+0xce0]
   14001a9af:	mov    rcx,r13
   14001a9b2:	call   rdi
   14001a9b4:	mov    rbx,rax
   14001a9b7:	mov    QWORD PTR [rsp+0x68],rax
   14001a9bc:	test   rax,rax
   14001a9bf:	jne    0x14001a9e8
   14001a9c1:	call   QWORD PTR [rip+0x227a1]        # 0x14003d168
   14001a9c7:	mov    esi,eax
   14001a9c9:	test   eax,eax
   14001a9cb:	jle    0x14001a9d6
   14001a9cd:	movzx  esi,ax
   14001a9d0:	or     esi,0x80070000
   14001a9d6:	test   esi,esi
   14001a9d8:	js     0x14001ad30
   14001a9de:	mov    esi,0x80004005
   14001a9e3:	jmp    0x14001ad30
   14001a9e8:	mov    rdi,QWORD PTR [rip+0x33699]        # 0x14004e088
   14001a9ef:	mov    rcx,rdi
   14001a9f2:	call   QWORD PTR [rip+0x22d30]        # 0x14003d728
   14001a9f8:	lea    r8,[rbp+0xad0]
   14001a9ff:	mov    edx,0x68
   14001aa04:	mov    rcx,rbx
   14001aa07:	call   rdi
   14001aa09:	xor    ecx,ecx
   14001aa0b:	test   eax,eax
   14001aa0d:	cmovne rcx,QWORD PTR [rbp+0xae8]
   14001aa15:	mov    QWORD PTR [rbp-0x30],rcx
   14001aa19:	mov    eax,DWORD PTR [rbp+0x7a4]
   14001aa1f:	sub    eax,DWORD PTR [rbp+0x79c]
   14001aa25:	mov    DWORD PTR [rbp+0xbe8],eax
   14001aa2b:	mov    eax,DWORD PTR [rbp+0x7a8]
   14001aa31:	sub    eax,DWORD PTR [rbp+0x7a0]
   14001aa37:	mov    DWORD PTR [rbp+0xbec],eax
   14001aa3d:	mov    rdi,QWORD PTR [rip+0x33654]        # 0x14004e098
   14001aa44:	mov    rcx,rdi
   14001aa47:	call   QWORD PTR [rip+0x22cdb]        # 0x14003d728
   14001aa4d:	mov    rdx,rbx
   14001aa50:	mov    rcx,r13
   14001aa53:	call   rdi
   14001aa55:	mov    rdi,QWORD PTR [rip+0x33644]        # 0x14004e0a0
   14001aa5c:	mov    rcx,rdi
   14001aa5f:	call   QWORD PTR [rip+0x22cc3]        # 0x14003d728
   14001aa65:	mov    edx,0x1
   14001aa6a:	mov    rcx,r13
   14001aa6d:	call   rdi
   14001aa6f:	mov    rdi,QWORD PTR [rip+0x33622]        # 0x14004e098
   14001aa76:	mov    rcx,rdi
   14001aa79:	call   QWORD PTR [rip+0x22ca9]        # 0x14003d728
   14001aa7f:	mov    rdx,QWORD PTR [rbp-0x8]
   14001aa83:	mov    rcx,r13
   14001aa86:	call   rdi
   14001aa88:	mov    QWORD PTR [rbp+0x50],rax
   14001aa8c:	mov    rdi,QWORD PTR [rip+0x335fd]        # 0x14004e090
   14001aa93:	mov    rcx,rdi
   14001aa96:	call   QWORD PTR [rip+0x22c8c]        # 0x14003d728
   14001aa9c:	xor    ecx,ecx
   14001aa9e:	call   rdi
   14001aaa0:	mov    rdi,rax
   14001aaa3:	mov    rbx,QWORD PTR [rip+0x3365e]        # 0x14004e108
   14001aaaa:	mov    rcx,rbx
   14001aaad:	call   QWORD PTR [rip+0x22c75]        # 0x14003d728
   14001aab3:	mov    r8,rdi
   14001aab6:	lea    rdx,[rbp+0xbe0]
   14001aabd:	mov    rcx,r13
   14001aac0:	call   rbx
   14001aac2:	mov    rdi,QWORD PTR [rip+0x3362f]        # 0x14004e0f8
   14001aac9:	mov    rcx,rdi
   14001aacc:	call   QWORD PTR [rip+0x22c56]        # 0x14003d728
   14001aad2:	xor    ebx,ebx
   14001aad4:	mov    QWORD PTR [rsp+0x28],rbx
   14001aad9:	mov    eax,DWORD PTR [rbp-0x78]
   14001aadc:	mov    DWORD PTR [rsp+0x20],eax
   14001aae0:	lea    r9,[rbp+0xbe0]
   14001aae7:	or     r8d,0xffffffff
   14001aaeb:	mov    rdx,r12
   14001aaee:	mov    rcx,r13
   14001aaf1:	call   rdi
   14001aaf3:	cmp    DWORD PTR [rsp+0x78],0x1
   14001aaf8:	jne    0x14001ab20
   14001aafa:	cmp    DWORD PTR [rsp+0x70],ebx
   14001aafe:	je     0x14001ab17
   14001ab00:	mov    rdi,QWORD PTR [rip+0x33631]        # 0x14004e138
   14001ab07:	mov    rcx,rdi
   14001ab0a:	call   QWORD PTR [rip+0x22c18]        # 0x14003d728
   14001ab10:	lea    ecx,[rbx+0x8]
   14001ab13:	call   rdi
   14001ab15:	jmp    0x14001ab25
   14001ab17:	mov    DWORD PTR [rbp-0x18],0xffffff
   14001ab1e:	jmp    0x14001ab2b
   14001ab20:	mov    eax,0xffa8a8a8
   14001ab25:	mov    DWORD PTR [rbp-0x18],eax
   14001ab28:	mov    DWORD PTR [rbp+0x3c],eax
   14001ab2b:	mov    edx,DWORD PTR [rbp+0x7a0]
   14001ab31:	mov    r8d,DWORD PTR [rbp+0x79c]
   14001ab38:	mov    edi,ebx
   14001ab3a:	mov    ecx,ebx
   14001ab3c:	test   r8d,r8d
   14001ab3f:	jns    0x14001ab49
   14001ab41:	mov    edi,r8d
   14001ab44:	neg    edi
   14001ab46:	mov    r8d,ebx
   14001ab49:	test   edx,edx
   14001ab4b:	jns    0x14001ab53
   14001ab4d:	mov    ecx,edx
   14001ab4f:	neg    ecx
   14001ab51:	mov    edx,ebx
   14001ab53:	movsxd r9,DWORD PTR [rbp+0xbe8]
   14001ab5a:	mov    eax,r9d
   14001ab5d:	sub    eax,edi
   14001ab5f:	movsxd rbx,DWORD PTR [rsp+0x60]
   14001ab64:	mov    r10d,ebx
   14001ab67:	sub    r10d,r8d
   14001ab6a:	cmp    eax,r10d
   14001ab6d:	cmovl  r10d,eax
   14001ab71:	mov    eax,DWORD PTR [rbp+0xbec]
   14001ab77:	sub    eax,ecx
   14001ab79:	sub    r14d,edx
   14001ab7c:	cmp    eax,r14d
   14001ab7f:	cmovl  r14d,eax
   14001ab83:	test   r10d,r10d
   14001ab86:	jle    0x14001acf8
   14001ab8c:	test   r14d,r14d
   14001ab8f:	jle    0x14001acf8
   14001ab95:	imul   ecx,r9d
   14001ab99:	movsxd rcx,ecx
   14001ab9c:	movsxd rax,edi
   14001ab9f:	add    rcx,rax
   14001aba2:	mov    rax,QWORD PTR [rbp-0x30]
   14001aba6:	lea    r12,[rax+rcx*4]
   14001abaa:	imul   edx,ebx
   14001abad:	movsxd rcx,edx
   14001abb0:	movsxd rax,r8d
   14001abb3:	add    rcx,rax
   14001abb6:	mov    rax,QWORD PTR [rbp-0x50]
   14001abba:	lea    r11,[rax+rcx*4]
   14001abbe:	test   r14d,r14d
   14001abc1:	jle    0x14001acf8
   14001abc7:	mov    rdi,r9
   14001abca:	shl    rdi,0x2
   14001abce:	mov    QWORD PTR [rbp-0x8],rdi
   14001abd2:	mov    r8,rbx
   14001abd5:	shl    r8,0x2
   14001abd9:	mov    QWORD PTR [rbp-0x30],r8
   14001abdd:	mov    eax,r14d
   14001abe0:	mov    QWORD PTR [rbp-0x50],rax
   14001abe4:	mov    esi,DWORD PTR [rbp+0x3c]
   14001abe7:	test   r10d,r10d
   14001abea:	jle    0x14001ace1
   14001abf0:	lea    r9,[r11+0x2]
   14001abf4:	mov    rbx,r12
   14001abf7:	sub    rbx,r11
   14001abfa:	mov    r14d,r10d
   14001abfd:	movzx  ecx,BYTE PTR [r9+rbx*1-0x1]
   14001ac03:	movzx  eax,BYTE PTR [r9+rbx*1-0x2]
   14001ac09:	lea    edx,[rax+rcx*2]
   14001ac0c:	movzx  eax,BYTE PTR [r9+rbx*1]
   14001ac11:	add    edx,eax
   14001ac13:	sar    edx,0x2
   14001ac16:	not    dl
   14001ac18:	test   dl,dl
   14001ac1a:	je     0x14001acc7
   14001ac20:	movzx  edi,BYTE PTR [r9]
   14001ac24:	movzx  r8d,dl
   14001ac28:	movzx  ecx,sil
   14001ac2c:	sub    ecx,edi
   14001ac2e:	imul   ecx,r8d
   14001ac32:	mov    eax,0x80808081
   14001ac37:	imul   ecx
   14001ac39:	add    edx,ecx
   14001ac3b:	sar    edx,0x7
   14001ac3e:	mov    eax,edx
   14001ac40:	shr    eax,0x1f
   14001ac43:	add    edx,eax
   14001ac45:	add    dl,dil
   14001ac48:	mov    BYTE PTR [r9],dl
   14001ac4b:	movzx  edi,BYTE PTR [r9-0x1]
   14001ac50:	movzx  ecx,BYTE PTR [rbp-0x17]
   14001ac54:	sub    ecx,edi
   14001ac56:	imul   ecx,r8d
   14001ac5a:	mov    eax,0x80808081
   14001ac5f:	imul   ecx
   14001ac61:	add    edx,ecx
   14001ac63:	sar    edx,0x7
   14001ac66:	mov    eax,edx
   14001ac68:	shr    eax,0x1f
   14001ac6b:	add    edx,eax
   14001ac6d:	add    dl,dil
   14001ac70:	mov    BYTE PTR [r9-0x1],dl
   14001ac74:	movzx  edi,BYTE PTR [r9-0x2]
   14001ac79:	movzx  ecx,BYTE PTR [rbp-0x16]
   14001ac7d:	sub    ecx,edi
   14001ac7f:	imul   ecx,r8d
   14001ac83:	mov    eax,0x80808081
   14001ac88:	imul   ecx
   14001ac8a:	add    edx,ecx
   14001ac8c:	sar    edx,0x7
   14001ac8f:	mov    eax,edx
   14001ac91:	shr    eax,0x1f
   14001ac94:	add    edx,eax
   14001ac96:	add    dl,dil
   14001ac99:	mov    BYTE PTR [r9-0x2],dl
   14001ac9d:	movzx  edi,BYTE PTR [r9+0x1]
   14001aca2:	mov    ecx,0xff
   14001aca7:	sub    ecx,edi
   14001aca9:	imul   ecx,r8d
   14001acad:	mov    eax,0x80808081
   14001acb2:	imul   ecx
   14001acb4:	add    edx,ecx
   14001acb6:	sar    edx,0x7
   14001acb9:	mov    eax,edx
   14001acbb:	shr    eax,0x1f
   14001acbe:	add    edx,eax
   14001acc0:	add    dl,dil
   14001acc3:	mov    BYTE PTR [r9+0x1],dl
   14001acc7:	add    r9,0x4
   14001accb:	sub    r14,0x1
   14001accf:	jne    0x14001abfd
   14001acd5:	mov    rdi,QWORD PTR [rbp-0x8]
   14001acd9:	mov    r8,QWORD PTR [rbp-0x30]
   14001acdd:	mov    rax,QWORD PTR [rbp-0x50]
   14001ace1:	add    r12,rdi
   14001ace4:	add    r11,r8
   14001ace7:	sub    rax,0x1
   14001aceb:	mov    QWORD PTR [rbp-0x50],rax
   14001acef:	jne    0x14001abe7
   14001acf5:	mov    esi,DWORD PTR [rbp+0x0]
   14001acf8:	mov    rdi,QWORD PTR [rip+0x33359]        # 0x14004e058
   14001acff:	mov    rcx,rdi
   14001ad02:	call   QWORD PTR [rip+0x22a20]        # 0x14003d728
   14001ad08:	mov    rcx,QWORD PTR [rsp+0x68]
   14001ad0d:	call   rdi
   14001ad0f:	mov    rbx,QWORD PTR [rbp+0x50]
   14001ad13:	test   rbx,rbx
   14001ad16:	je     0x14001ad30
   14001ad18:	mov    rdi,QWORD PTR [rip+0x33379]        # 0x14004e098
   14001ad1f:	mov    rcx,rdi
   14001ad22:	call   QWORD PTR [rip+0x22a00]        # 0x14003d728
   14001ad28:	mov    rdx,rbx
   14001ad2b:	mov    rcx,r13
   14001ad2e:	call   rdi
   14001ad30:	mov    rdi,QWORD PTR [rip+0x33319]        # 0x14004e050
   14001ad37:	mov    rcx,rdi
   14001ad3a:	call   QWORD PTR [rip+0x229e8]        # 0x14003d728
   14001ad40:	mov    rcx,r13
   14001ad43:	call   rdi
   14001ad45:	test   esi,esi
   14001ad47:	js     0x14001ad59
   14001ad49:	mov    rsi,QWORD PTR [rbp-0x68]
   14001ad4d:	mov    r14,QWORD PTR [rbp-0x40]
   14001ad51:	xor    r13d,r13d
   14001ad54:	jmp    0x14001bb65
   14001ad59:	xor    r13d,r13d
   14001ad5c:	jmp    0x14001bbc7
   14001ad61:	mov    rsi,QWORD PTR [rbp-0x40]
   14001ad65:	jmp    0x14001bbd1
   14001ad6a:	cmp    DWORD PTR [rbp+0x754],r12d
   14001ad71:	jne    0x14001ad7a
   14001ad73:	cmp    r13d,r14d
   14001ad76:	mov    al,0xc0
   14001ad78:	jne    0x14001ad7c
   14001ad7a:	mov    al,0xff
   14001ad7c:	mov    BYTE PTR [rbp+0x50],r12b
   14001ad80:	mov    BYTE PTR [rbp+0x51],r12b
   14001ad84:	mov    BYTE PTR [rbp+0x52],al
   14001ad87:	mov    BYTE PTR [rbp+0x53],r14b
   14001ad8b:	xorps  xmm0,xmm0
   14001ad8e:	movdqu XMMWORD PTR [rbp+0x258],xmm0
   14001ad96:	mov    r14d,r12d
   14001ad99:	mov    rdi,QWORD PTR [rip+0x33290]        # 0x14004e030
   14001ada0:	mov    rcx,rdi
   14001ada3:	call   QWORD PTR [rip+0x2297f]        # 0x14003d728
   14001ada9:	mov    rcx,rsi
   14001adac:	call   rdi
   14001adae:	mov    QWORD PTR [rbp-0x68],rax
   14001adb2:	test   rax,rax
   14001adb5:	jne    0x14001adc5
   14001adb7:	call   QWORD PTR [rip+0x223ab]        # 0x14003d168
   14001adbd:	xor    r13d,r13d
   14001adc0:	jmp    0x14001bbcb
   14001adc5:	cmp    r13d,0x1
   14001adc9:	jne    0x14001ae7c
   14001adcf:	mov    r8d,DWORD PTR [rbp+0x794]
   14001add6:	mov    eax,r8d
   14001add9:	mov    esi,DWORD PTR [rbp+0x78c]
   14001addf:	sub    eax,esi
   14001ade1:	mov    r9d,DWORD PTR [rbp+0x7a4]
   14001ade8:	mov    ecx,r9d
   14001adeb:	mov    r10d,DWORD PTR [rbp+0x79c]
   14001adf2:	sub    ecx,r10d
   14001adf5:	mov    edi,eax
   14001adf7:	cmp    ecx,eax
   14001adf9:	cmovg  edi,ecx
   14001adfc:	mov    DWORD PTR [rsp+0x60],edi
   14001ae00:	mov    r11d,DWORD PTR [rbp+0x7a8]
   14001ae07:	mov    ebx,r11d
   14001ae0a:	mov    edx,DWORD PTR [rbp+0x790]
   14001ae10:	sub    ebx,edx
   14001ae12:	mov    DWORD PTR [rbp+0x0],ebx
   14001ae15:	cmp    DWORD PTR [rbp+0x750],r12d
   14001ae1c:	je     0x14001ae34
   14001ae1e:	sub    esi,r8d
   14001ae21:	add    esi,edi
   14001ae23:	mov    DWORD PTR [rbp+0x258],esi
   14001ae29:	mov    r14d,r10d
   14001ae2c:	sub    r14d,r9d
   14001ae2f:	add    r14d,edi
   14001ae32:	jmp    0x14001ae3a
   14001ae34:	mov    esi,DWORD PTR [rbp+0x258]
   14001ae3a:	lea    r12d,[rsi+rax*1]
   14001ae3e:	mov    DWORD PTR [rbp-0x18],r12d
   14001ae42:	mov    DWORD PTR [rbp+0x260],r12d
   14001ae49:	mov    ebx,DWORD PTR [rbp+0x798]
   14001ae4f:	sub    ebx,edx
   14001ae51:	mov    DWORD PTR [rbp+0x264],ebx
   14001ae57:	lea    eax,[rcx+r14*1]
   14001ae5b:	mov    r13d,DWORD PTR [rbp+0x7a0]
   14001ae62:	sub    r13d,edx
   14001ae65:	mov    r12d,r13d
   14001ae68:	sub    r12d,DWORD PTR [rbp+0x7a0]
   14001ae6f:	add    r12d,r11d
   14001ae72:	mov    DWORD PTR [rbp-0x48],r12d
   14001ae76:	mov    r12d,DWORD PTR [rbp+0x0]
   14001ae7a:	jmp    0x14001aedf
   14001ae7c:	mov    edi,DWORD PTR [rbp+0x108]
   14001ae82:	mov    DWORD PTR [rsp+0x60],edi
   14001ae86:	mov    r12d,DWORD PTR [rbp+0x10c]
   14001ae8d:	mov    DWORD PTR [rbp+0x0],r12d
   14001ae91:	movups xmm0,XMMWORD PTR [rbp+0x78c]
   14001ae98:	movups XMMWORD PTR [rbp+0x258],xmm0
   14001ae9f:	movups xmm0,XMMWORD PTR [rbp+0x79c]
   14001aea6:	movups XMMWORD PTR [rbp+0x168],xmm0
   14001aead:	mov    ebx,DWORD PTR [rbp+0x264]
   14001aeb3:	mov    eax,DWORD PTR [rbp+0x260]
   14001aeb9:	mov    DWORD PTR [rbp-0x18],eax
   14001aebc:	mov    esi,DWORD PTR [rbp+0x258]
   14001aec2:	mov    eax,DWORD PTR [rbp+0x174]
   14001aec8:	mov    DWORD PTR [rbp-0x48],eax
   14001aecb:	mov    eax,DWORD PTR [rbp+0x170]
   14001aed1:	mov    r13d,DWORD PTR [rbp+0x16c]
   14001aed8:	mov    r14d,DWORD PTR [rbp+0x168]
   14001aedf:	mov    DWORD PTR [rbp-0x70],eax
   14001aee2:	xor    eax,eax
   14001aee4:	mov    QWORD PTR [rbp+0x598],rax
   14001aeeb:	xor    edx,edx
   14001aeed:	lea    r8d,[rax+0x2c]
   14001aef1:	lea    rcx,[rbp+0xc28]
   14001aef8:	call   0x140014694
   14001aefd:	mov    DWORD PTR [rbp+0xc28],0x28
   14001af07:	mov    DWORD PTR [rbp+0xc2c],edi
   14001af0d:	mov    eax,r12d
   14001af10:	neg    eax
   14001af12:	mov    DWORD PTR [rbp+0xc30],eax
   14001af18:	mov    eax,0x1
   14001af1d:	mov    WORD PTR [rbp+0xc34],ax
   14001af24:	mov    eax,0x20
   14001af29:	mov    WORD PTR [rbp+0xc36],ax
   14001af30:	mov    rdi,QWORD PTR [rip+0x33101]        # 0x14004e038
   14001af37:	mov    rcx,rdi
   14001af3a:	call   QWORD PTR [rip+0x227e8]        # 0x14003d728
   14001af40:	xor    eax,eax
   14001af42:	mov    DWORD PTR [rsp+0x28],eax
   14001af46:	mov    QWORD PTR [rsp+0x20],rax
   14001af4b:	lea    r9,[rbp+0x598]
   14001af52:	xor    r8d,r8d
   14001af55:	lea    rdx,[rbp+0xc28]
   14001af5c:	mov    rcx,QWORD PTR [rbp-0x68]
   14001af60:	call   rdi
   14001af62:	mov    QWORD PTR [rbp+0x140],rax
   14001af69:	test   rax,rax
   14001af6c:	jne    0x14001af80
   14001af6e:	call   QWORD PTR [rip+0x221f4]        # 0x14003d168
   14001af74:	mov    rsi,QWORD PTR [rbp-0x68]
   14001af78:	xor    r13d,r13d
   14001af7b:	jmp    0x14001bbad
   14001af80:	mov    rdi,QWORD PTR [rip+0x33111]        # 0x14004e098
   14001af87:	mov    rcx,rdi
   14001af8a:	call   QWORD PTR [rip+0x22798]        # 0x14003d728
   14001af90:	mov    rdx,QWORD PTR [rbp+0x140]
   14001af97:	mov    rcx,QWORD PTR [rbp-0x68]
   14001af9b:	call   rdi
   14001af9d:	cmp    DWORD PTR [rsp+0x78],0x1
   14001afa2:	jne    0x14001aff1
   14001afa4:	cmp    QWORD PTR [rbp+0x90],0x0
   14001afac:	je     0x14001aff1
   14001afae:	xor    eax,eax
   14001afb0:	mov    DWORD PTR [rbp+0xbf0],eax
   14001afb6:	mov    DWORD PTR [rbp+0xbf4],eax
   14001afbc:	mov    eax,DWORD PTR [rsp+0x60]
   14001afc0:	mov    DWORD PTR [rbp+0xbf8],eax
   14001afc6:	mov    DWORD PTR [rbp+0xbfc],r12d
   14001afcd:	mov    rdi,QWORD PTR [rip+0x33134]        # 0x14004e108
   14001afd4:	mov    rcx,rdi
   14001afd7:	call   QWORD PTR [rip+0x2274b]        # 0x14003d728
   14001afdd:	mov    r8,QWORD PTR [rbp+0x90]
   14001afe4:	lea    rdx,[rbp+0xbf0]
   14001afeb:	mov    rcx,QWORD PTR [rbp-0x68]
   14001afef:	call   rdi
   14001aff1:	mov    eax,DWORD PTR [rbp+0x754]
   14001aff7:	mov    DWORD PTR [rsp+0x68],eax
   14001affb:	mov    rax,QWORD PTR [rbp+0x770]
   14001b002:	mov    QWORD PTR [rbp+0xb8],rax
   14001b009:	mov    rdi,QWORD PTR [rbp+0x758]
   14001b010:	mov    QWORD PTR [rbp+0xc8],rdi
   14001b017:	xor    r12d,r12d
   14001b01a:	mov    DWORD PTR [rbp+0x8a0],r12d
   14001b021:	xor    edx,edx
   14001b023:	lea    r8d,[r12+0x64]
   14001b028:	lea    rcx,[rbp+0x8a4]
   14001b02f:	call   0x140014694
   14001b034:	mov    DWORD PTR [rbp+0xa60],r12d
   14001b03b:	xor    edx,edx
   14001b03d:	lea    r8d,[r12+0x64]
   14001b042:	lea    rcx,[rbp+0xa64]
   14001b049:	call   0x140014694
   14001b04e:	mov    QWORD PTR [rbp-0x50],r12
   14001b052:	mov    DWORD PTR [rsp+0x70],r12d
   14001b057:	xor    edx,edx
   14001b059:	lea    r8d,[r12+0x2c]
   14001b05e:	lea    rcx,[rbp+0xcb0]
   14001b065:	call   0x140014694
   14001b06a:	xorps  xmm0,xmm0
   14001b06d:	movdqu XMMWORD PTR [rbp+0xbd0],xmm0
   14001b075:	test   rdi,rdi
   14001b078:	je     0x14001bb85
   14001b07e:	mov    rdi,QWORD PTR [rip+0x32feb]        # 0x14004e070
   14001b085:	mov    rcx,rdi
   14001b088:	call   QWORD PTR [rip+0x2269a]        # 0x14003d728
   14001b08e:	lea    edx,[r12+0x7]
   14001b093:	mov    rcx,QWORD PTR [rbp-0x68]
   14001b097:	call   rdi
   14001b099:	mov    QWORD PTR [rbp-0x8],rax
   14001b09d:	test   rax,rax
   14001b0a0:	je     0x14001bb7f
   14001b0a6:	mov    rdi,QWORD PTR [rip+0x32fdb]        # 0x14004e088
   14001b0ad:	mov    rcx,rdi
   14001b0b0:	call   QWORD PTR [rip+0x22672]        # 0x14003d728
   14001b0b6:	lea    r8,[rbp+0x8a0]
   14001b0bd:	lea    edx,[r12+0x68]
   14001b0c2:	mov    rcx,QWORD PTR [rbp-0x8]
   14001b0c6:	call   rdi
   14001b0c8:	test   eax,eax
   14001b0ca:	je     0x14001b0e8
   14001b0cc:	mov    rax,QWORD PTR [rbp+0x8b8]
   14001b0d3:	mov    QWORD PTR [rbp-0x50],rax
   14001b0d7:	mov    eax,DWORD PTR [rbp+0x8a4]
   14001b0dd:	mov    DWORD PTR [rsp+0x70],eax
   14001b0e1:	mov    r12d,DWORD PTR [rbp+0x8a8]
   14001b0e8:	mov    rdi,QWORD PTR [rip+0x32f41]        # 0x14004e030
   14001b0ef:	mov    rcx,rdi
   14001b0f2:	call   QWORD PTR [rip+0x22630]        # 0x14003d728
   14001b0f8:	mov    rcx,QWORD PTR [rbp-0x68]
   14001b0fc:	call   rdi
   14001b0fe:	mov    QWORD PTR [rbp-0x30],rax
   14001b102:	test   rax,rax
   14001b105:	je     0x14001bb7f
   14001b10b:	sub    ebx,DWORD PTR [rbp+0x25c]
   14001b111:	mov    edi,DWORD PTR [rbp-0x18]
   14001b114:	sub    edi,esi
   14001b116:	mov    DWORD PTR [rbp-0x18],edi
   14001b119:	xor    eax,eax
   14001b11b:	mov    QWORD PTR [rbp+0x668],rax
   14001b122:	mov    DWORD PTR [rbp+0x10],eax
   14001b125:	xor    edx,edx
   14001b127:	lea    r8d,[rax+0x2c]
   14001b12b:	lea    rcx,[rbp+0xcb0]
   14001b132:	call   0x140014694
   14001b137:	mov    DWORD PTR [rbp+0xcb0],0x28
   14001b141:	mov    DWORD PTR [rbp+0xcb4],edi
   14001b147:	mov    eax,ebx
   14001b149:	neg    eax
   14001b14b:	mov    DWORD PTR [rbp+0xcb8],eax
   14001b151:	mov    eax,0x1
   14001b156:	mov    WORD PTR [rbp+0xcbc],ax
   14001b15d:	mov    eax,0x20
   14001b162:	mov    WORD PTR [rbp+0xcbe],ax
   14001b169:	mov    rdi,QWORD PTR [rip+0x32ec8]        # 0x14004e038
   14001b170:	mov    rcx,rdi
   14001b173:	call   QWORD PTR [rip+0x225af]        # 0x14003d728
   14001b179:	xor    eax,eax
   14001b17b:	mov    DWORD PTR [rsp+0x28],eax
   14001b17f:	mov    QWORD PTR [rsp+0x20],rax
   14001b184:	lea    r9,[rbp+0x668]
   14001b18b:	xor    r8d,r8d
   14001b18e:	lea    rdx,[rbp+0xcb0]
   14001b195:	mov    rcx,QWORD PTR [rbp-0x30]
   14001b199:	call   rdi
   14001b19b:	mov    QWORD PTR [rbp-0x8],rax
   14001b19f:	test   rax,rax
   14001b1a2:	jne    0x14001b1d1
   14001b1a4:	call   QWORD PTR [rip+0x21fbe]        # 0x14003d168
   14001b1aa:	mov    DWORD PTR [rbp+0x10],eax
   14001b1ad:	test   eax,eax
   14001b1af:	jle    0x14001b1be
   14001b1b1:	movzx  eax,ax
   14001b1b4:	or     eax,0x80070000
   14001b1b9:	mov    DWORD PTR [rbp+0x10],eax
   14001b1bc:	test   eax,eax
   14001b1be:	js     0x14001b542
   14001b1c4:	mov    eax,0x80004005
   14001b1c9:	mov    DWORD PTR [rbp+0x10],eax
   14001b1cc:	jmp    0x14001b542
   14001b1d1:	mov    rdi,QWORD PTR [rip+0x32eb0]        # 0x14004e088
   14001b1d8:	mov    rcx,rdi
   14001b1db:	call   QWORD PTR [rip+0x22547]        # 0x14003d728
   14001b1e1:	lea    r8,[rbp+0xa60]
   14001b1e8:	mov    edx,0x68
   14001b1ed:	mov    rcx,QWORD PTR [rbp-0x8]
   14001b1f1:	call   rdi
   14001b1f3:	xor    ecx,ecx
   14001b1f5:	test   eax,eax
   14001b1f7:	cmovne rcx,QWORD PTR [rbp+0xa78]
   14001b1ff:	mov    QWORD PTR [rbp+0x168],rcx
   14001b206:	mov    eax,DWORD PTR [rbp-0x18]
   14001b209:	mov    DWORD PTR [rbp+0xbd8],eax
   14001b20f:	mov    DWORD PTR [rbp+0xbdc],ebx
   14001b215:	mov    rdi,QWORD PTR [rip+0x32e7c]        # 0x14004e098
   14001b21c:	mov    rcx,rdi
   14001b21f:	call   QWORD PTR [rip+0x22503]        # 0x14003d728
   14001b225:	mov    rdx,QWORD PTR [rbp-0x8]
   14001b229:	mov    rbx,QWORD PTR [rbp-0x30]
   14001b22d:	mov    rcx,rbx
   14001b230:	call   rdi
   14001b232:	mov    rdi,QWORD PTR [rip+0x32e67]        # 0x14004e0a0
   14001b239:	mov    rcx,rdi
   14001b23c:	call   QWORD PTR [rip+0x224e6]        # 0x14003d728
   14001b242:	mov    edx,0x1
   14001b247:	mov    rcx,rbx
   14001b24a:	call   rdi
   14001b24c:	mov    rdi,QWORD PTR [rip+0x32e45]        # 0x14004e098
   14001b253:	mov    rcx,rdi
   14001b256:	call   QWORD PTR [rip+0x224cc]        # 0x14003d728
   14001b25c:	mov    rdx,QWORD PTR [rbp+0xb8]
   14001b263:	mov    rcx,rbx
   14001b266:	call   rdi
   14001b268:	mov    QWORD PTR [rbp+0xb8],rax
   14001b26f:	mov    rdi,QWORD PTR [rip+0x32e1a]        # 0x14004e090
   14001b276:	mov    rcx,rdi
   14001b279:	call   QWORD PTR [rip+0x224a9]        # 0x14003d728
   14001b27f:	xor    ecx,ecx
   14001b281:	call   rdi
   14001b283:	mov    rdi,rax
   14001b286:	mov    rbx,QWORD PTR [rip+0x32e7b]        # 0x14004e108
   14001b28d:	mov    rcx,rbx
   14001b290:	call   QWORD PTR [rip+0x22492]        # 0x14003d728
   14001b296:	mov    r8,rdi
   14001b299:	lea    rdx,[rbp+0xbd0]
   14001b2a0:	mov    rcx,QWORD PTR [rbp-0x30]
   14001b2a4:	call   rbx
   14001b2a6:	mov    rdi,QWORD PTR [rip+0x32e4b]        # 0x14004e0f8
   14001b2ad:	mov    rcx,rdi
   14001b2b0:	call   QWORD PTR [rip+0x22472]        # 0x14003d728
   14001b2b6:	xor    eax,eax
   14001b2b8:	mov    QWORD PTR [rsp+0x28],rax
   14001b2bd:	mov    eax,DWORD PTR [rbp-0x78]
   14001b2c0:	mov    DWORD PTR [rsp+0x20],eax
   14001b2c4:	lea    r9,[rbp+0xbd0]
   14001b2cb:	or     r8d,0xffffffff
   14001b2cf:	mov    rdx,QWORD PTR [rbp+0xc8]
   14001b2d6:	mov    rbx,QWORD PTR [rbp-0x30]
   14001b2da:	mov    rcx,rbx
   14001b2dd:	call   rdi
   14001b2df:	cmp    DWORD PTR [rsp+0x78],0x1
   14001b2e4:	jne    0x14001b314
   14001b2e6:	cmp    DWORD PTR [rsp+0x68],0x0
   14001b2eb:	je     0x14001b30c
   14001b2ed:	mov    rdi,QWORD PTR [rip+0x32e44]        # 0x14004e138
   14001b2f4:	mov    rcx,rdi
   14001b2f7:	call   QWORD PTR [rip+0x2242b]        # 0x14003d728
   14001b2fd:	mov    ecx,0x8
   14001b302:	call   rdi
   14001b304:	mov    r11d,eax
   14001b307:	mov    DWORD PTR [rbp-0x18],eax
   14001b30a:	jmp    0x14001b31e
   14001b30c:	mov    r11d,0xffffff
   14001b312:	jmp    0x14001b31a
   14001b314:	mov    r11d,0xffa8a8a8
   14001b31a:	mov    DWORD PTR [rbp-0x18],r11d
   14001b31e:	xor    eax,eax
   14001b320:	mov    edi,eax
   14001b322:	mov    ecx,eax
   14001b324:	test   esi,esi
   14001b326:	jns    0x14001b32e
   14001b328:	mov    edi,esi
   14001b32a:	neg    edi
   14001b32c:	mov    esi,eax
   14001b32e:	mov    edx,DWORD PTR [rbp+0x25c]
   14001b334:	test   edx,edx
   14001b336:	jns    0x14001b33e
   14001b338:	mov    ecx,edx
   14001b33a:	neg    ecx
   14001b33c:	mov    edx,eax
   14001b33e:	movsxd r8,DWORD PTR [rbp+0xbd8]
   14001b345:	mov    eax,r8d
   14001b348:	sub    eax,edi
   14001b34a:	movsxd r9,DWORD PTR [rsp+0x70]
   14001b34f:	mov    r10d,r9d
   14001b352:	sub    r10d,esi
   14001b355:	cmp    eax,r10d
   14001b358:	cmovl  r10d,eax
   14001b35c:	mov    eax,DWORD PTR [rbp+0xbdc]
   14001b362:	sub    eax,ecx
   14001b364:	sub    r12d,edx
   14001b367:	cmp    eax,r12d
   14001b36a:	cmovl  r12d,eax
   14001b36e:	test   r10d,r10d
   14001b371:	jle    0x14001b508
   14001b377:	test   r12d,r12d
   14001b37a:	jle    0x14001b508
   14001b380:	imul   ecx,r8d
   14001b384:	movsxd rcx,ecx
   14001b387:	movsxd rax,edi
   14001b38a:	add    rcx,rax
   14001b38d:	mov    rax,QWORD PTR [rbp+0x168]
   14001b394:	lea    rdi,[rax+rcx*4]
   14001b398:	mov    QWORD PTR [rsp+0x68],rdi
   14001b39d:	imul   edx,r9d
   14001b3a1:	movsxd rcx,edx
   14001b3a4:	movsxd rax,esi
   14001b3a7:	add    rcx,rax
   14001b3aa:	mov    rax,QWORD PTR [rbp-0x50]
   14001b3ae:	lea    rsi,[rax+rcx*4]
   14001b3b2:	test   r12d,r12d
   14001b3b5:	jle    0x14001b508
   14001b3bb:	shl    r8,0x2
   14001b3bf:	mov    QWORD PTR [rbp+0x168],r8
   14001b3c6:	mov    rax,r9
   14001b3c9:	shl    rax,0x2
   14001b3cd:	mov    QWORD PTR [rbp+0xc8],rax
   14001b3d4:	mov    ecx,r12d
   14001b3d7:	mov    QWORD PTR [rsp+0x70],rcx
   14001b3dc:	test   r10d,r10d
   14001b3df:	jle    0x14001b4ee
   14001b3e5:	lea    r9,[rsi+0x2]
   14001b3e9:	mov    r12,rdi
   14001b3ec:	sub    r12,rsi
   14001b3ef:	mov    edi,r10d
   14001b3f2:	mov    QWORD PTR [rbp-0x50],rdi
   14001b3f6:	movzx  ecx,BYTE PTR [r9+r12*1-0x1]
   14001b3fc:	movzx  eax,BYTE PTR [r9+r12*1-0x2]
   14001b402:	lea    edx,[rax+rcx*2]
   14001b405:	movzx  eax,BYTE PTR [r9+r12*1]
   14001b40a:	add    edx,eax
   14001b40c:	sar    edx,0x2
   14001b40f:	not    dl
   14001b411:	test   dl,dl
   14001b413:	je     0x14001b4c4
   14001b419:	movzx  edi,BYTE PTR [r9]
   14001b41d:	movzx  r8d,dl
   14001b421:	movzx  ecx,r11b
   14001b425:	sub    ecx,edi
   14001b427:	imul   ecx,r8d
   14001b42b:	mov    eax,0x80808081
   14001b430:	imul   ecx
   14001b432:	add    edx,ecx
   14001b434:	sar    edx,0x7
   14001b437:	mov    eax,edx
   14001b439:	shr    eax,0x1f
   14001b43c:	add    edx,eax
   14001b43e:	add    dl,dil
   14001b441:	mov    BYTE PTR [r9],dl
   14001b444:	movzx  edi,BYTE PTR [r9-0x1]
   14001b449:	movzx  ecx,BYTE PTR [rbp-0x17]
   14001b44d:	sub    ecx,edi
   14001b44f:	imul   ecx,r8d
   14001b453:	mov    eax,0x80808081
   14001b458:	imul   ecx
   14001b45a:	add    edx,ecx
   14001b45c:	sar    edx,0x7
   14001b45f:	mov    eax,edx
   14001b461:	shr    eax,0x1f
   14001b464:	add    edx,eax
   14001b466:	add    dl,dil
   14001b469:	mov    BYTE PTR [r9-0x1],dl
   14001b46d:	movzx  edi,BYTE PTR [r9-0x2]
   14001b472:	movzx  ecx,BYTE PTR [rbp-0x16]
   14001b476:	sub    ecx,edi
   14001b478:	imul   ecx,r8d
   14001b47c:	mov    eax,0x80808081
   14001b481:	imul   ecx
   14001b483:	add    edx,ecx
   14001b485:	sar    edx,0x7
   14001b488:	mov    eax,edx
   14001b48a:	shr    eax,0x1f
   14001b48d:	add    edx,eax
   14001b48f:	add    dl,dil
   14001b492:	mov    BYTE PTR [r9-0x2],dl
   14001b496:	movzx  edi,BYTE PTR [r9+0x1]
   14001b49b:	mov    ecx,0xff
   14001b4a0:	sub    ecx,edi
   14001b4a2:	imul   ecx,r8d
   14001b4a6:	mov    eax,0x80808081
   14001b4ab:	imul   ecx
   14001b4ad:	add    edx,ecx
   14001b4af:	sar    edx,0x7
   14001b4b2:	mov    eax,edx
   14001b4b4:	shr    eax,0x1f
   14001b4b7:	add    edx,eax
   14001b4b9:	add    dl,dil
   14001b4bc:	mov    BYTE PTR [r9+0x1],dl
   14001b4c0:	mov    rdi,QWORD PTR [rbp-0x50]
   14001b4c4:	add    r9,0x4
   14001b4c8:	sub    rdi,0x1
   14001b4cc:	mov    QWORD PTR [rbp-0x50],rdi
   14001b4d0:	jne    0x14001b3f6
   14001b4d6:	mov    rdi,QWORD PTR [rsp+0x68]
   14001b4db:	mov    r8,QWORD PTR [rbp+0x168]
   14001b4e2:	mov    rax,QWORD PTR [rbp+0xc8]
   14001b4e9:	mov    rcx,QWORD PTR [rsp+0x70]
   14001b4ee:	add    rdi,r8
   14001b4f1:	mov    QWORD PTR [rsp+0x68],rdi
   14001b4f6:	add    rsi,rax
   14001b4f9:	sub    rcx,0x1
   14001b4fd:	mov    QWORD PTR [rsp+0x70],rcx
   14001b502:	jne    0x14001b3dc
   14001b508:	mov    rdi,QWORD PTR [rip+0x32b49]        # 0x14004e058
   14001b50f:	mov    rcx,rdi
   14001b512:	call   QWORD PTR [rip+0x22210]        # 0x14003d728
   14001b518:	mov    rcx,QWORD PTR [rbp-0x8]
   14001b51c:	call   rdi
   14001b51e:	mov    rsi,QWORD PTR [rbp+0xb8]
   14001b525:	test   rsi,rsi
   14001b528:	je     0x14001b542
   14001b52a:	mov    rdi,QWORD PTR [rip+0x32b67]        # 0x14004e098
   14001b531:	mov    rcx,rdi
   14001b534:	call   QWORD PTR [rip+0x221ee]        # 0x14003d728
   14001b53a:	mov    rdx,rsi
   14001b53d:	mov    rcx,rbx
   14001b540:	call   rdi
   14001b542:	mov    rdi,QWORD PTR [rip+0x32b07]        # 0x14004e050
   14001b549:	mov    rcx,rdi
   14001b54c:	call   QWORD PTR [rip+0x221d6]        # 0x14003d728
   14001b552:	mov    rcx,QWORD PTR [rbp-0x30]
   14001b556:	call   rdi
   14001b558:	cmp    DWORD PTR [rbp+0x10],0x0
   14001b55c:	jl     0x14001bb85
   14001b562:	mov    eax,DWORD PTR [rbp+0x754]
   14001b568:	mov    DWORD PTR [rsp+0x68],eax
   14001b56c:	mov    rax,QWORD PTR [rbp+0x778]
   14001b573:	mov    QWORD PTR [rbp+0x168],rax
   14001b57a:	mov    rdi,QWORD PTR [rbp+0x760]
   14001b581:	mov    QWORD PTR [rbp+0xc8],rdi
   14001b588:	xor    ebx,ebx
   14001b58a:	mov    DWORD PTR [rbp+0x830],ebx
   14001b590:	xor    edx,edx
   14001b592:	lea    r8d,[rbx+0x64]
   14001b596:	lea    rcx,[rbp+0x834]
   14001b59d:	call   0x140014694
   14001b5a2:	mov    DWORD PTR [rbp+0xb40],ebx
   14001b5a8:	xor    edx,edx
   14001b5aa:	lea    r8d,[rbx+0x64]
   14001b5ae:	lea    rcx,[rbp+0xb44]
   14001b5b5:	call   0x140014694
   14001b5ba:	mov    QWORD PTR [rbp-0x50],rbx
   14001b5be:	mov    DWORD PTR [rsp+0x70],ebx
   14001b5c2:	mov    r12d,ebx
   14001b5c5:	xor    edx,edx
   14001b5c7:	lea    r8d,[rbx+0x2c]
   14001b5cb:	lea    rcx,[rbp+0xc80]
   14001b5d2:	call   0x140014694
   14001b5d7:	xorps  xmm0,xmm0
   14001b5da:	movdqu XMMWORD PTR [rbp+0xbc0],xmm0
   14001b5e2:	test   rdi,rdi
   14001b5e5:	je     0x14001bb85
   14001b5eb:	mov    rdi,QWORD PTR [rip+0x32a7e]        # 0x14004e070
   14001b5f2:	mov    rcx,rdi
   14001b5f5:	call   QWORD PTR [rip+0x2212d]        # 0x14003d728
   14001b5fb:	lea    edx,[rbx+0x7]
   14001b5fe:	mov    rsi,QWORD PTR [rbp-0x68]
   14001b602:	mov    rcx,rsi
   14001b605:	call   rdi
   14001b607:	mov    rbx,rax
   14001b60a:	test   rax,rax
   14001b60d:	jne    0x14001b61a
   14001b60f:	call   QWORD PTR [rip+0x21b53]        # 0x14003d168
   14001b615:	jmp    0x14001bb89
   14001b61a:	mov    rdi,QWORD PTR [rip+0x32a67]        # 0x14004e088
   14001b621:	mov    rcx,rdi
   14001b624:	call   QWORD PTR [rip+0x220fe]        # 0x14003d728
   14001b62a:	lea    r8,[rbp+0x830]
   14001b631:	mov    edx,0x68
   14001b636:	mov    rcx,rbx
   14001b639:	call   rdi
   14001b63b:	test   eax,eax
   14001b63d:	je     0x14001b65b
   14001b63f:	mov    rax,QWORD PTR [rbp+0x848]
   14001b646:	mov    QWORD PTR [rbp-0x50],rax
   14001b64a:	mov    eax,DWORD PTR [rbp+0x834]
   14001b650:	mov    DWORD PTR [rsp+0x70],eax
   14001b654:	mov    r12d,DWORD PTR [rbp+0x838]
   14001b65b:	mov    rdi,QWORD PTR [rip+0x329ce]        # 0x14004e030
   14001b662:	mov    rcx,rdi
   14001b665:	call   QWORD PTR [rip+0x220bd]        # 0x14003d728
   14001b66b:	mov    rcx,rsi
   14001b66e:	call   rdi
   14001b670:	mov    rbx,rax
   14001b673:	mov    QWORD PTR [rbp-0x8],rax
   14001b677:	test   rax,rax
   14001b67a:	jne    0x14001b687
   14001b67c:	call   QWORD PTR [rip+0x21ae6]        # 0x14003d168
   14001b682:	jmp    0x14001bb89
   14001b687:	mov    edi,DWORD PTR [rbp-0x48]
   14001b68a:	sub    edi,r13d
   14001b68d:	mov    DWORD PTR [rbp-0x48],edi
   14001b690:	sub    DWORD PTR [rbp-0x70],r14d
   14001b694:	xor    eax,eax
   14001b696:	mov    QWORD PTR [rbp+0x5b8],rax
   14001b69d:	mov    esi,eax
   14001b69f:	xor    edx,edx
   14001b6a1:	lea    r8d,[rax+0x2c]
   14001b6a5:	lea    rcx,[rbp+0xc80]
   14001b6ac:	call   0x140014694
   14001b6b1:	mov    DWORD PTR [rbp+0xc80],0x28
   14001b6bb:	mov    eax,DWORD PTR [rbp-0x70]
   14001b6be:	mov    DWORD PTR [rbp+0xc84],eax
   14001b6c4:	mov    eax,edi
   14001b6c6:	neg    eax
   14001b6c8:	mov    DWORD PTR [rbp+0xc88],eax
   14001b6ce:	mov    eax,0x1
   14001b6d3:	mov    WORD PTR [rbp+0xc8c],ax
   14001b6da:	mov    eax,0x20
   14001b6df:	mov    WORD PTR [rbp+0xc8e],ax
   14001b6e6:	mov    rdi,QWORD PTR [rip+0x3294b]        # 0x14004e038
   14001b6ed:	mov    rcx,rdi
   14001b6f0:	call   QWORD PTR [rip+0x22032]        # 0x14003d728
   14001b6f6:	xor    eax,eax
   14001b6f8:	mov    DWORD PTR [rsp+0x28],eax
   14001b6fc:	mov    QWORD PTR [rsp+0x20],rax
   14001b701:	lea    r9,[rbp+0x5b8]
   14001b708:	xor    r8d,r8d
   14001b70b:	lea    rdx,[rbp+0xc80]
   14001b712:	mov    rcx,rbx
   14001b715:	call   rdi
   14001b717:	mov    QWORD PTR [rbp-0x30],rax
   14001b71b:	test   rax,rax
   14001b71e:	jne    0x14001b747
   14001b720:	call   QWORD PTR [rip+0x21a42]        # 0x14003d168
   14001b726:	mov    esi,eax
   14001b728:	test   eax,eax
   14001b72a:	jle    0x14001b735
   14001b72c:	movzx  esi,ax
   14001b72f:	or     esi,0x80070000
   14001b735:	test   esi,esi
   14001b737:	js     0x14001ba96
   14001b73d:	mov    esi,0x80004005
   14001b742:	jmp    0x14001ba96
   14001b747:	mov    rdi,QWORD PTR [rip+0x3293a]        # 0x14004e088
   14001b74e:	mov    rcx,rdi
   14001b751:	call   QWORD PTR [rip+0x21fd1]        # 0x14003d728
   14001b757:	lea    r8,[rbp+0xb40]
   14001b75e:	mov    edx,0x68
   14001b763:	mov    rcx,QWORD PTR [rbp-0x30]
   14001b767:	call   rdi
   14001b769:	xor    ecx,ecx
   14001b76b:	test   eax,eax
   14001b76d:	cmovne rcx,QWORD PTR [rbp+0xb58]
   14001b775:	mov    QWORD PTR [rbp+0xb8],rcx
   14001b77c:	mov    eax,DWORD PTR [rbp-0x70]
   14001b77f:	mov    DWORD PTR [rbp+0xbc8],eax
   14001b785:	mov    eax,DWORD PTR [rbp-0x48]
   14001b788:	mov    DWORD PTR [rbp+0xbcc],eax
   14001b78e:	mov    rdi,QWORD PTR [rip+0x32903]        # 0x14004e098
   14001b795:	mov    rcx,rdi
   14001b798:	call   QWORD PTR [rip+0x21f8a]        # 0x14003d728
   14001b79e:	mov    rdx,QWORD PTR [rbp-0x30]
   14001b7a2:	mov    rcx,rbx
   14001b7a5:	call   rdi
   14001b7a7:	mov    rdi,QWORD PTR [rip+0x328f2]        # 0x14004e0a0
   14001b7ae:	mov    rcx,rdi
   14001b7b1:	call   QWORD PTR [rip+0x21f71]        # 0x14003d728
   14001b7b7:	mov    edx,0x1
   14001b7bc:	mov    rcx,rbx
   14001b7bf:	call   rdi
   14001b7c1:	mov    rdi,QWORD PTR [rip+0x328d0]        # 0x14004e098
   14001b7c8:	mov    rcx,rdi
   14001b7cb:	call   QWORD PTR [rip+0x21f57]        # 0x14003d728
   14001b7d1:	mov    rdx,QWORD PTR [rbp+0x168]
   14001b7d8:	mov    rcx,rbx
   14001b7db:	call   rdi
   14001b7dd:	mov    QWORD PTR [rbp-0x48],rax
   14001b7e1:	mov    rdi,QWORD PTR [rip+0x328a8]        # 0x14004e090
   14001b7e8:	mov    rcx,rdi
   14001b7eb:	call   QWORD PTR [rip+0x21f37]        # 0x14003d728
   14001b7f1:	xor    ecx,ecx
   14001b7f3:	call   rdi
   14001b7f5:	mov    rdi,rax
   14001b7f8:	mov    rbx,QWORD PTR [rip+0x32909]        # 0x14004e108
   14001b7ff:	mov    rcx,rbx
   14001b802:	call   QWORD PTR [rip+0x21f20]        # 0x14003d728
   14001b808:	mov    r8,rdi
   14001b80b:	lea    rdx,[rbp+0xbc0]
   14001b812:	mov    rcx,QWORD PTR [rbp-0x8]
   14001b816:	call   rbx
   14001b818:	mov    rdi,QWORD PTR [rip+0x328d9]        # 0x14004e0f8
   14001b81f:	mov    rcx,rdi
   14001b822:	call   QWORD PTR [rip+0x21f00]        # 0x14003d728
   14001b828:	xor    eax,eax
   14001b82a:	mov    QWORD PTR [rsp+0x28],rax
   14001b82f:	mov    eax,DWORD PTR [rbp-0x78]
   14001b832:	mov    DWORD PTR [rsp+0x20],eax
   14001b836:	lea    r9,[rbp+0xbc0]
   14001b83d:	or     r8d,0xffffffff
   14001b841:	mov    rdx,QWORD PTR [rbp+0xc8]
   14001b848:	mov    rbx,QWORD PTR [rbp-0x8]
   14001b84c:	mov    rcx,rbx
   14001b84f:	call   rdi
   14001b851:	cmp    DWORD PTR [rsp+0x78],0x1
   14001b856:	jne    0x14001b880
   14001b858:	cmp    DWORD PTR [rsp+0x68],esi
   14001b85c:	je     0x14001b877
   14001b85e:	mov    rdi,QWORD PTR [rip+0x328d3]        # 0x14004e138
   14001b865:	mov    rcx,rdi
   14001b868:	call   QWORD PTR [rip+0x21eba]        # 0x14003d728
   14001b86e:	mov    ecx,0x8
   14001b873:	call   rdi
   14001b875:	jmp    0x14001b885
   14001b877:	mov    DWORD PTR [rbp-0x78],0xffffff
   14001b87e:	jmp    0x14001b88b
   14001b880:	mov    eax,0xffa8a8a8
   14001b885:	mov    DWORD PTR [rbp-0x78],eax
   14001b888:	mov    DWORD PTR [rbp+0x3c],eax
   14001b88b:	xor    eax,eax
   14001b88d:	mov    edx,eax
   14001b88f:	mov    ecx,eax
   14001b891:	test   r14d,r14d
   14001b894:	jns    0x14001b89e
   14001b896:	mov    edx,r14d
   14001b899:	neg    edx
   14001b89b:	mov    r14d,eax
   14001b89e:	test   r13d,r13d
   14001b8a1:	jns    0x14001b8ab
   14001b8a3:	mov    ecx,r13d
   14001b8a6:	neg    ecx
   14001b8a8:	mov    r13d,eax
   14001b8ab:	movsxd rdi,DWORD PTR [rbp+0xbc8]
   14001b8b2:	mov    eax,edi
   14001b8b4:	sub    eax,edx
   14001b8b6:	movsxd r8,DWORD PTR [rsp+0x70]
   14001b8bb:	mov    r10d,r8d
   14001b8be:	sub    r10d,r14d
   14001b8c1:	cmp    eax,r10d
   14001b8c4:	cmovl  r10d,eax
   14001b8c8:	mov    eax,DWORD PTR [rbp+0xbcc]
   14001b8ce:	sub    eax,ecx
   14001b8d0:	sub    r12d,r13d
   14001b8d3:	cmp    eax,r12d
   14001b8d6:	cmovl  r12d,eax
   14001b8da:	test   r10d,r10d
   14001b8dd:	jle    0x14001ba5f
   14001b8e3:	test   r12d,r12d
   14001b8e6:	jle    0x14001ba5f
   14001b8ec:	imul   ecx,edi
   14001b8ef:	movsxd rcx,ecx
   14001b8f2:	movsxd rax,edx
   14001b8f5:	add    rcx,rax
   14001b8f8:	mov    rax,QWORD PTR [rbp+0xb8]
   14001b8ff:	lea    rdx,[rax+rcx*4]
   14001b903:	mov    QWORD PTR [rsp+0x68],rdx
   14001b908:	imul   r13d,r8d
   14001b90c:	movsxd rcx,r13d
   14001b90f:	movsxd rax,r14d
   14001b912:	add    rcx,rax
   14001b915:	mov    rax,QWORD PTR [rbp-0x50]
   14001b919:	lea    r11,[rax+rcx*4]
   14001b91d:	test   r12d,r12d
   14001b920:	jle    0x14001ba5f
   14001b926:	mov    r13,rdi
   14001b929:	shl    r13,0x2
   14001b92d:	mov    rdi,r8
   14001b930:	shl    rdi,0x2
   14001b934:	mov    QWORD PTR [rbp+0x168],rdi
   14001b93b:	mov    r8d,r12d
   14001b93e:	mov    QWORD PTR [rbp-0x50],r8
   14001b942:	mov    ebx,DWORD PTR [rbp+0x3c]
   14001b945:	test   r10d,r10d
   14001b948:	jle    0x14001ba42
   14001b94e:	lea    r9,[r11+0x2]
   14001b952:	mov    r14,rdx
   14001b955:	sub    r14,r11
   14001b958:	mov    r12d,r10d
   14001b95b:	movzx  ecx,BYTE PTR [r9+r14*1-0x1]
   14001b961:	movzx  eax,BYTE PTR [r9+r14*1-0x2]
   14001b967:	lea    edx,[rax+rcx*2]
   14001b96a:	movzx  eax,BYTE PTR [r9+r14*1]
   14001b96f:	add    edx,eax
   14001b971:	sar    edx,0x2
   14001b974:	not    dl
   14001b976:	test   dl,dl
   14001b978:	je     0x14001ba24
   14001b97e:	movzx  edi,BYTE PTR [r9]
   14001b982:	movzx  r8d,dl
   14001b986:	movzx  ecx,bl
   14001b989:	sub    ecx,edi
   14001b98b:	imul   ecx,r8d
   14001b98f:	mov    eax,0x80808081
   14001b994:	imul   ecx
   14001b996:	add    edx,ecx
   14001b998:	sar    edx,0x7
   14001b99b:	mov    eax,edx
   14001b99d:	shr    eax,0x1f
   14001b9a0:	add    edx,eax
   14001b9a2:	add    dl,dil
   14001b9a5:	mov    BYTE PTR [r9],dl
   14001b9a8:	movzx  edi,BYTE PTR [r9-0x1]
   14001b9ad:	movzx  ecx,BYTE PTR [rbp-0x77]
   14001b9b1:	sub    ecx,edi
   14001b9b3:	imul   ecx,r8d
   14001b9b7:	mov    eax,0x80808081
   14001b9bc:	imul   ecx
   14001b9be:	add    edx,ecx
   14001b9c0:	sar    edx,0x7
   14001b9c3:	mov    eax,edx
   14001b9c5:	shr    eax,0x1f
   14001b9c8:	add    edx,eax
   14001b9ca:	add    dl,dil
   14001b9cd:	mov    BYTE PTR [r9-0x1],dl
   14001b9d1:	movzx  edi,BYTE PTR [r9-0x2]
   14001b9d6:	movzx  ecx,BYTE PTR [rbp-0x76]
   14001b9da:	sub    ecx,edi
   14001b9dc:	imul   ecx,r8d
   14001b9e0:	mov    eax,0x80808081
   14001b9e5:	imul   ecx
   14001b9e7:	add    edx,ecx
   14001b9e9:	sar    edx,0x7
   14001b9ec:	mov    eax,edx
   14001b9ee:	shr    eax,0x1f
   14001b9f1:	add    edx,eax
   14001b9f3:	add    dl,dil
   14001b9f6:	mov    BYTE PTR [r9-0x2],dl
   14001b9fa:	movzx  edi,BYTE PTR [r9+0x1]
   14001b9ff:	mov    ecx,0xff
   14001ba04:	sub    ecx,edi
   14001ba06:	imul   ecx,r8d
   14001ba0a:	mov    eax,0x80808081
   14001ba0f:	imul   ecx
   14001ba11:	add    edx,ecx
   14001ba13:	sar    edx,0x7
   14001ba16:	mov    eax,edx
   14001ba18:	shr    eax,0x1f
   14001ba1b:	add    edx,eax
   14001ba1d:	add    dl,dil
   14001ba20:	mov    BYTE PTR [r9+0x1],dl
   14001ba24:	add    r9,0x4
   14001ba28:	sub    r12,0x1
   14001ba2c:	jne    0x14001b95b
   14001ba32:	mov    rdx,QWORD PTR [rsp+0x68]
   14001ba37:	mov    rdi,QWORD PTR [rbp+0x168]
   14001ba3e:	mov    r8,QWORD PTR [rbp-0x50]
   14001ba42:	add    rdx,r13
   14001ba45:	mov    QWORD PTR [rsp+0x68],rdx
   14001ba4a:	add    r11,rdi
   14001ba4d:	sub    r8,0x1
   14001ba51:	mov    QWORD PTR [rbp-0x50],r8
   14001ba55:	jne    0x14001b945
   14001ba5b:	mov    rbx,QWORD PTR [rbp-0x8]
   14001ba5f:	mov    rdi,QWORD PTR [rip+0x325f2]        # 0x14004e058
   14001ba66:	mov    rcx,rdi
   14001ba69:	call   QWORD PTR [rip+0x21cb9]        # 0x14003d728
   14001ba6f:	mov    rcx,QWORD PTR [rbp-0x30]
   14001ba73:	call   rdi
   14001ba75:	mov    r14,QWORD PTR [rbp-0x48]
   14001ba79:	test   r14,r14
   14001ba7c:	je     0x14001ba96
   14001ba7e:	mov    rdi,QWORD PTR [rip+0x32613]        # 0x14004e098
   14001ba85:	mov    rcx,rdi
   14001ba88:	call   QWORD PTR [rip+0x21c9a]        # 0x14003d728
   14001ba8e:	mov    rdx,r14
   14001ba91:	mov    rcx,rbx
   14001ba94:	call   rdi
   14001ba96:	mov    rdi,QWORD PTR [rip+0x325b3]        # 0x14004e050
   14001ba9d:	mov    rcx,rdi
   14001baa0:	call   QWORD PTR [rip+0x21c82]        # 0x14003d728
   14001baa6:	mov    rcx,rbx
   14001baa9:	call   rdi
   14001baab:	test   esi,esi
   14001baad:	js     0x14001bb85
   14001bab3:	cmp    DWORD PTR [rsp+0x78],0x1
   14001bab8:	jne    0x14001bb0c
   14001baba:	mov    rdi,QWORD PTR [rip+0x3255f]        # 0x14004e020
   14001bac1:	mov    rcx,rdi
   14001bac4:	call   QWORD PTR [rip+0x21c5e]        # 0x14003d728
   14001baca:	mov    DWORD PTR [rsp+0x40],0xcc0020
   14001bad2:	xor    r13d,r13d
   14001bad5:	mov    DWORD PTR [rsp+0x38],r13d
   14001bada:	mov    DWORD PTR [rsp+0x30],r13d
   14001badf:	mov    rsi,QWORD PTR [rbp-0x68]
   14001bae3:	mov    QWORD PTR [rsp+0x28],rsi
   14001bae8:	mov    ecx,DWORD PTR [rbp+0x0]
   14001baeb:	mov    DWORD PTR [rsp+0x20],ecx
   14001baef:	mov    r9d,DWORD PTR [rsp+0x60]
   14001baf4:	mov    r8d,DWORD PTR [rbp+0x790]
   14001bafb:	mov    edx,DWORD PTR [rbp+0x78c]
   14001bb01:	mov    r14,QWORD PTR [rbp-0x40]
   14001bb05:	mov    rcx,r14
   14001bb08:	call   rdi
   14001bb0a:	jmp    0x14001bb65
   14001bb0c:	mov    rdi,QWORD PTR [rip+0x3254d]        # 0x14004e060
   14001bb13:	mov    rcx,rdi
   14001bb16:	call   QWORD PTR [rip+0x21c0c]        # 0x14003d728
   14001bb1c:	mov    eax,DWORD PTR [rbp+0x50]
   14001bb1f:	mov    DWORD PTR [rsp+0x50],eax
   14001bb23:	mov    ecx,DWORD PTR [rbp+0x0]
   14001bb26:	mov    DWORD PTR [rsp+0x48],ecx
   14001bb2a:	mov    eax,DWORD PTR [rsp+0x60]
   14001bb2e:	mov    DWORD PTR [rsp+0x40],eax
   14001bb32:	xor    r13d,r13d
   14001bb35:	mov    DWORD PTR [rsp+0x38],r13d
   14001bb3a:	mov    DWORD PTR [rsp+0x30],r13d
   14001bb3f:	mov    rsi,QWORD PTR [rbp-0x68]
   14001bb43:	mov    QWORD PTR [rsp+0x28],rsi
   14001bb48:	mov    DWORD PTR [rsp+0x20],ecx
   14001bb4c:	mov    r9d,eax
   14001bb4f:	mov    r8d,DWORD PTR [rbp+0x104]
   14001bb56:	mov    edx,DWORD PTR [rbp+0x100]
   14001bb5c:	mov    r14,QWORD PTR [rbp-0x40]
   14001bb60:	mov    rcx,r14
   14001bb63:	call   rdi
   14001bb65:	mov    rdi,QWORD PTR [rip+0x32534]        # 0x14004e0a0
   14001bb6c:	mov    rcx,rdi
   14001bb6f:	call   QWORD PTR [rip+0x21bb3]        # 0x14003d728
   14001bb75:	mov    edx,DWORD PTR [rbp-0x80]
   14001bb78:	mov    rcx,r14
   14001bb7b:	call   rdi
   14001bb7d:	jmp    0x14001bb8c
   14001bb7f:	call   QWORD PTR [rip+0x215e3]        # 0x14003d168
   14001bb85:	mov    rsi,QWORD PTR [rbp-0x68]
   14001bb89:	xor    r13d,r13d
   14001bb8c:	mov    rbx,QWORD PTR [rbp+0x140]
   14001bb93:	test   rbx,rbx
   14001bb96:	je     0x14001bbad
   14001bb98:	mov    rdi,QWORD PTR [rip+0x324b9]        # 0x14004e058
   14001bb9f:	mov    rcx,rdi
   14001bba2:	call   QWORD PTR [rip+0x21b80]        # 0x14003d728
   14001bba8:	mov    rcx,rbx
   14001bbab:	call   rdi
   14001bbad:	test   rsi,rsi
   14001bbb0:	je     0x14001bbc7
   14001bbb2:	mov    rdi,QWORD PTR [rip+0x32497]        # 0x14004e050
   14001bbb9:	mov    rcx,rdi
   14001bbbc:	call   QWORD PTR [rip+0x21b66]        # 0x14003d728
   14001bbc2:	mov    rcx,rsi
   14001bbc5:	call   rdi
   14001bbc7:	mov    rsi,QWORD PTR [rbp-0x40]
   14001bbcb:	mov    r14d,0x1
   14001bbd1:	mov    rbx,QWORD PTR [rbp+0x90]
   14001bbd8:	test   rbx,rbx
   14001bbdb:	je     0x14001bbf7
   14001bbdd:	mov    rdi,QWORD PTR [rip+0x32474]        # 0x14004e058
   14001bbe4:	mov    rcx,rdi
   14001bbe7:	call   QWORD PTR [rip+0x21b3b]        # 0x14003d728
   14001bbed:	mov    rcx,rbx
   14001bbf0:	call   rdi
   14001bbf2:	jmp    0x14001bbf7
   14001bbf4:	xor    r13d,r13d
   14001bbf7:	mov    rax,QWORD PTR [rbp+0x758]
   14001bbfe:	or     rbx,0xffffffffffffffff
   14001bc02:	test   rax,rax
   14001bc05:	je     0x14001bc3b
   14001bc07:	mov    rcx,rbx
   14001bc0a:	lea    rcx,[rcx+0x1]
   14001bc0e:	cmp    WORD PTR [rax+rcx*2],0x0
   14001bc13:	jne    0x14001bc0a
   14001bc15:	lea    rcx,[rcx*2+0x2]
   14001bc1d:	mov    rdi,QWORD PTR [rbp+0x758]
   14001bc24:	xor    eax,eax
   14001bc26:	rep stos BYTE PTR es:[rdi],al
   14001bc28:	mov    rcx,QWORD PTR [rbp+0x758]
   14001bc2f:	call   0x1400155d8
   14001bc34:	mov    QWORD PTR [rbp+0x758],r13
   14001bc3b:	mov    rax,QWORD PTR [rbp+0x760]
   14001bc42:	test   rax,rax
   14001bc45:	je     0x14001bc7b
   14001bc47:	mov    rcx,rbx
   14001bc4a:	lea    rcx,[rcx+0x1]
   14001bc4e:	cmp    WORD PTR [rax+rcx*2],0x0
   14001bc53:	jne    0x14001bc4a
   14001bc55:	lea    rcx,[rcx*2+0x2]
   14001bc5d:	mov    rdi,QWORD PTR [rbp+0x760]
   14001bc64:	xor    eax,eax
   14001bc66:	rep stos BYTE PTR es:[rdi],al
   14001bc68:	mov    rcx,QWORD PTR [rbp+0x760]
   14001bc6f:	call   0x1400155d8
   14001bc74:	mov    QWORD PTR [rbp+0x760],r13
   14001bc7b:	mov    rdi,QWORD PTR [rbp+0x768]
   14001bc82:	test   rdi,rdi
   14001bc85:	je     0x14001bcb4
   14001bc87:	mov    rcx,rbx
   14001bc8a:	lea    rcx,[rcx+0x1]
   14001bc8e:	cmp    WORD PTR [rdi+rcx*2],0x0
   14001bc93:	jne    0x14001bc8a
   14001bc95:	lea    rcx,[rcx*2+0x2]
   14001bc9d:	xor    eax,eax
   14001bc9f:	rep stos BYTE PTR es:[rdi],al
   14001bca1:	mov    rcx,QWORD PTR [rbp+0x768]
   14001bca8:	call   0x1400155d8
   14001bcad:	mov    QWORD PTR [rbp+0x768],r13
   14001bcb4:	mov    rbx,QWORD PTR [rbp+0x770]
   14001bcbb:	test   rbx,rbx
   14001bcbe:	je     0x14001bcdc
   14001bcc0:	mov    rdi,QWORD PTR [rip+0x32391]        # 0x14004e058
   14001bcc7:	mov    rcx,rdi
   14001bcca:	call   QWORD PTR [rip+0x21a58]        # 0x14003d728
   14001bcd0:	mov    rcx,rbx
   14001bcd3:	call   rdi
   14001bcd5:	mov    QWORD PTR [rbp+0x770],r13
   14001bcdc:	mov    rbx,QWORD PTR [rbp+0x778]
   14001bce3:	test   rbx,rbx
   14001bce6:	je     0x14001bd04
   14001bce8:	mov    rdi,QWORD PTR [rip+0x32369]        # 0x14004e058
   14001bcef:	mov    rcx,rdi
   14001bcf2:	call   QWORD PTR [rip+0x21a30]        # 0x14003d728
   14001bcf8:	mov    rcx,rbx
   14001bcfb:	call   rdi
   14001bcfd:	mov    QWORD PTR [rbp+0x778],r13
   14001bd04:	mov    rbx,QWORD PTR [rbp+0x780]
   14001bd0b:	test   rbx,rbx
   14001bd0e:	je     0x14001bd2c
   14001bd10:	mov    rdi,QWORD PTR [rip+0x32341]        # 0x14004e058
   14001bd17:	mov    rcx,rdi
   14001bd1a:	call   QWORD PTR [rip+0x21a08]        # 0x14003d728
   14001bd20:	mov    rcx,rbx
   14001bd23:	call   rdi
   14001bd25:	mov    QWORD PTR [rbp+0x780],r13
   14001bd2c:	xor    eax,eax
   14001bd2e:	lock cmpxchg DWORD PTR [rip+0x33409],r14d        # 0x14004f140
   14001bd37:	jne    0x14001bd2c
   14001bd39:	mov    eax,DWORD PTR [rip+0x32e09]        # 0x14004eb48
   14001bd3f:	test   eax,eax
   14001bd41:	jle    0x14001bda2
   14001bd43:	sub    eax,0x1
   14001bd46:	mov    DWORD PTR [rip+0x32dfc],eax        # 0x14004eb48
   14001bd4c:	jne    0x14001bda2
   14001bd4e:	lea    rdi,[rip+0x333fb]        # 0x14004f150
   14001bd55:	mov    ebx,0x4
   14001bd5a:	mov    rcx,QWORD PTR [rdi]
   14001bd5d:	test   rcx,rcx
   14001bd60:	je     0x14001bd68
   14001bd62:	call   QWORD PTR [rip+0x214f0]        # 0x14003d258
   14001bd68:	add    rdi,0x18
   14001bd6c:	sub    rbx,0x1
   14001bd70:	jne    0x14001bd5a
   14001bd72:	xor    edx,edx
   14001bd74:	lea    r8d,[rbx+0x60]
   14001bd78:	lea    rbx,[rip+0x333d1]        # 0x14004f150
   14001bd7f:	mov    rcx,rbx
   14001bd82:	call   0x140014694
   14001bd87:	mov    r8d,0x170
   14001bd8d:	lea    rdx,[rip+0x259dc]        # 0x140041770
   14001bd94:	lea    rcx,[rip+0x32285]        # 0x14004e020
   14001bd9b:	call   0x1400156f2
   14001bda0:	jmp    0x14001bda9
   14001bda2:	lea    rbx,[rip+0x333a7]        # 0x14004f150
   14001bda9:	mov    eax,r13d
   14001bdac:	xchg   DWORD PTR [rip+0x3338e],eax        # 0x14004f140
   14001bdb2:	mov    r12d,DWORD PTR [rip+0x32d7f]        # 0x14004eb38
   14001bdb9:	mov    DWORD PTR [rbp-0x70],r12d
   14001bdbd:	mov    rdi,QWORD PTR [rip+0x322f4]        # 0x14004e0b8
   14001bdc4:	mov    rcx,rdi
   14001bdc7:	call   QWORD PTR [rip+0x2195b]        # 0x14003d728
   14001bdcd:	call   rdi
   14001bdcf:	mov    r14,rax
   14001bdd2:	sub    r14d,DWORD PTR [rip+0x32d67]        # 0x14004eb40
   14001bdd9:	mov    QWORD PTR [rbp-0x30],r14
   14001bddd:	mov    DWORD PTR [rbp+0xf60],r13d
   14001bde4:	xor    edx,edx
   14001bde6:	lea    r8d,[rdx+0x38]
   14001bdea:	lea    rcx,[rbp+0xf68]
   14001bdf1:	call   0x140014694
   14001bdf6:	mov    ecx,0x1
   14001bdfb:	xor    eax,eax
   14001bdfd:	lock cmpxchg DWORD PTR [rip+0x3333b],ecx        # 0x14004f140
   14001be05:	jne    0x14001bdfb
   14001be07:	mov    eax,DWORD PTR [rip+0x32d3b]        # 0x14004eb48
   14001be0d:	test   eax,eax
   14001be0f:	jne    0x14001c3ff
   14001be15:	mov    DWORD PTR [rsp+0x60],r13d
   14001be1a:	mov    DWORD PTR [rbp-0x80],r13d
   14001be1e:	xor    edi,edi
   14001be20:	mov    QWORD PTR [rbp+0x3a0],rdi
   14001be27:	mov    QWORD PTR [rbp+0x680],rdi
   14001be2e:	mov    ecx,0x338
   14001be33:	call   0x14000f134
   14001be38:	mov    QWORD PTR [rbp+0x168],rax
   14001be3f:	test   rax,rax
   14001be42:	je     0x14001c354
   14001be48:	mov    r13d,edi
   14001be4b:	or     esi,0xffffffff
   14001be4e:	mov    r14d,edi
   14001be51:	mov    DWORD PTR [rbp+0x18],edi
   14001be54:	mov    r8d,edi
   14001be57:	mov    DWORD PTR [rbp+0x48],edi
   14001be5a:	lea    r12,[rax+0x7]
   14001be5e:	lea    rcx,[rip+0x2207d]        # 0x14003dee2
   14001be65:	lea    ebx,[rdi+0x67]
   14001be68:	movzx  r11d,BYTE PTR [rcx-0x2]
   14001be6d:	shl    r11d,0x8
   14001be71:	movzx  eax,BYTE PTR [rcx-0x1]
   14001be75:	or     r11d,eax
   14001be78:	shl    r11d,0x8
   14001be7c:	movzx  eax,BYTE PTR [rcx]
   14001be7f:	or     r11d,eax
   14001be82:	shl    r11d,0x8
   14001be86:	movzx  eax,BYTE PTR [rcx+0x1]
   14001be8a:	or     r11d,eax
   14001be8d:	movzx  r10d,BYTE PTR [rcx+0x2]
   14001be92:	shl    r10d,0x8
   14001be96:	movzx  eax,BYTE PTR [rcx+0x3]
   14001be9a:	or     r10d,eax
   14001be9d:	shl    r10d,0x8
   14001bea1:	movzx  eax,BYTE PTR [rcx+0x4]
   14001bea5:	or     r10d,eax
   14001bea8:	shl    r10d,0x8
   14001beac:	movzx  eax,BYTE PTR [rcx+0x5]
   14001beb0:	or     r10d,eax
   14001beb3:	xor    r8d,r11d
   14001beb6:	xor    r14d,r10d
   14001beb9:	add    rcx,0x8
   14001bebd:	xor    r14d,r8d
   14001bec0:	xor    r14d,0x58830298
   14001bec7:	lea    eax,[r14+0x7b1e05f8]
   14001bece:	rol    eax,0x5
   14001bed1:	mov    edx,r14d
   14001bed4:	rol    edx,0xa
   14001bed7:	imul   eax,eax,0xf890
   14001bedd:	add    edx,eax
   14001bedf:	xor    r8d,edx
   14001bee2:	lea    eax,[r8-0x239d0770]
   14001bee9:	ror    eax,0x9
   14001beec:	mov    edx,r8d
   14001beef:	rol    edx,0x2
   14001bef2:	imul   eax,eax,0x84e1
   14001bef8:	sub    eax,edx
   14001befa:	xor    r14d,eax
   14001befd:	lea    eax,[r14-0xf890]
   14001bf04:	imul   edx,eax,0xfa08
   14001bf0a:	mov    eax,r14d
   14001bf0d:	shr    eax,0xd
   14001bf10:	sub    edx,eax
   14001bf12:	xor    r8d,edx
   14001bf15:	mov    eax,r8d
   14001bf18:	xor    eax,0x84e1
   14001bf1d:	rol    eax,0x6
   14001bf20:	mov    edx,r8d
   14001bf23:	rol    edx,0x2
   14001bf26:	imul   eax,eax,0xdc62
   14001bf2c:	sub    eax,edx
   14001bf2e:	xor    r14d,eax
   14001bf31:	mov    edx,r14d
   14001bf34:	xor    edx,0x84e1fa08
   14001bf3a:	mov    eax,0xdc62f890
   14001bf3f:	sub    eax,edx
   14001bf41:	xor    r8d,eax
   14001bf44:	mov    edi,r8d
   14001bf47:	ror    edi,0x6
   14001bf4a:	mov    eax,r8d
   14001bf4d:	xor    eax,0xf890
   14001bf52:	imul   edx,eax,0x84e1
   14001bf58:	xor    edi,edx
   14001bf5a:	xor    r14d,edi
   14001bf5d:	lea    eax,[r14-0x239d0770]
   14001bf64:	ror    eax,0xf
   14001bf67:	mov    edx,r14d
   14001bf6a:	rol    edx,0x2
   14001bf6d:	imul   eax,eax,0xfa08
   14001bf73:	add    edx,eax
   14001bf75:	xor    r8d,edx
   14001bf78:	lea    eax,[r8+0x7b1e05f8]
   14001bf7f:	ror    eax,0xe
   14001bf82:	mov    edx,r8d
   14001bf85:	rol    edx,0x8
   14001bf88:	imul   eax,eax,0xdc62
   14001bf8e:	sub    eax,edx
   14001bf90:	xor    r14d,eax
   14001bf93:	mov    eax,r14d
   14001bf96:	xor    eax,0x84e1fa08
   14001bf9b:	ror    eax,0xc
   14001bf9e:	mov    edx,r14d
   14001bfa1:	ror    edx,0xa
   14001bfa4:	imul   eax,eax,0xf890
   14001bfaa:	xor    edx,eax
   14001bfac:	xor    r8d,edx
   14001bfaf:	mov    eax,r8d
   14001bfb2:	xor    eax,0xdc62
   14001bfb7:	imul   edx,eax,0x84e1
   14001bfbd:	mov    eax,r8d
   14001bfc0:	shr    eax,0xa
   14001bfc3:	xor    edx,eax
   14001bfc5:	xor    r14d,edx
   14001bfc8:	mov    eax,r14d
   14001bfcb:	not    eax
   14001bfcd:	ror    eax,0x5
   14001bfd0:	imul   eax,eax,0xdc62
   14001bfd6:	sub    eax,0x28c168f0
   14001bfdb:	xor    r8d,eax
   14001bfde:	mov    r9d,r14d
   14001bfe1:	xor    r9d,r8d
   14001bfe4:	xor    r9d,0x58830298
   14001bfeb:	lea    eax,[r9-0x7b1e05f8]
   14001bff2:	rol    eax,0xb
   14001bff5:	mov    edx,r9d
   14001bff8:	rol    edx,0xd
   14001bffb:	imul   eax,eax,0xdc62
   14001c001:	add    edx,eax
   14001c003:	xor    r14d,edx
   14001c006:	mov    eax,r14d
   14001c009:	xor    eax,0x84e1fa08
   14001c00e:	ror    eax,0x5
   14001c011:	mov    edx,r14d
   14001c014:	ror    edx,0xc
   14001c017:	imul   eax,eax,0xf890
   14001c01d:	xor    edx,eax
   14001c01f:	xor    r9d,edx
   14001c022:	lea    eax,[r9-0xf890]
   14001c029:	imul   edx,eax,0x84e1
   14001c02f:	mov    eax,r9d
   14001c032:	shr    eax,0x9
   14001c035:	sub    edx,eax
   14001c037:	xor    r14d,edx
   14001c03a:	lea    eax,[r14+0x239c0d68]
   14001c041:	xor    r9d,eax
   14001c044:	lea    r8d,[r9-0xdc62]
   14001c04b:	xor    r8d,r14d
   14001c04e:	xor    r8d,0x84e1fa08
   14001c055:	lea    eax,[r8+0x7b1e05f8]
   14001c05c:	ror    eax,0x4
   14001c05f:	mov    edx,r8d
   14001c062:	ror    edx,0xb
   14001c065:	imul   eax,eax,0xf890
   14001c06b:	xor    edx,eax
   14001c06d:	xor    r9d,edx
   14001c070:	mov    eax,0xdc62f890
   14001c075:	sub    eax,r9d
   14001c078:	ror    eax,0x7
   14001c07b:	mov    edx,r9d
   14001c07e:	ror    edx,0x3
   14001c081:	imul   eax,eax,0x84e1
   14001c087:	add    edx,eax
   14001c089:	xor    r8d,edx
   14001c08c:	mov    eax,r8d
   14001c08f:	xor    eax,0xdc62f890
   14001c094:	rol    eax,1
   14001c096:	mov    edx,r8d
   14001c099:	ror    edx,0x8
   14001c09c:	imul   eax,eax,0xfa08
   14001c0a2:	add    edx,eax
   14001c0a4:	xor    r9d,edx
   14001c0a7:	mov    edi,r9d
   14001c0aa:	ror    edi,1
   14001c0ac:	mov    eax,r9d
   14001c0af:	xor    eax,0xf890
   14001c0b4:	imul   edx,eax,0xdc62
   14001c0ba:	add    edi,edx
   14001c0bc:	xor    r8d,edi
   14001c0bf:	mov    eax,r8d
   14001c0c2:	xor    eax,0xfa08
   14001c0c7:	rol    eax,1
   14001c0c9:	mov    edx,r8d
   14001c0cc:	rol    edx,0x8
   14001c0cf:	imul   eax,eax,0xf890
   14001c0d5:	xor    edx,eax
   14001c0d7:	xor    r9d,edx
   14001c0da:	mov    edx,r9d
   14001c0dd:	xor    edx,0xdc62f890
   14001c0e3:	mov    eax,0x84e1fa08
   14001c0e8:	sub    eax,edx
   14001c0ea:	xor    r8d,eax
   14001c0ed:	lea    eax,[r8+0x239d0770]
   14001c0f4:	ror    eax,0x3
   14001c0f7:	mov    edx,r8d
   14001c0fa:	ror    edx,0x2
   14001c0fd:	imul   eax,eax,0xfa08
   14001c103:	add    edx,eax
   14001c105:	xor    edx,r13d
   14001c108:	xor    r9d,edx
   14001c10b:	mov    DWORD PTR [rbp+0x48],r9d
   14001c10f:	xor    r8d,esi
   14001c112:	mov    DWORD PTR [rbp+0x18],r8d
   14001c116:	mov    BYTE PTR [r12-0x4],r9b
   14001c11b:	ror    DWORD PTR [rbp+0x48],0x8
   14001c11f:	movzx  eax,BYTE PTR [rbp+0x18]
   14001c123:	mov    BYTE PTR [r12],al
   14001c127:	ror    DWORD PTR [rbp+0x18],0x8
   14001c12b:	movzx  eax,BYTE PTR [rbp+0x48]
   14001c12f:	mov    BYTE PTR [r12-0x5],al
   14001c134:	ror    DWORD PTR [rbp+0x48],0x8
   14001c138:	movzx  eax,BYTE PTR [rbp+0x18]
   14001c13c:	mov    BYTE PTR [r12-0x1],al
   14001c141:	ror    DWORD PTR [rbp+0x18],0x8
   14001c145:	movzx  eax,BYTE PTR [rbp+0x48]
   14001c149:	mov    BYTE PTR [r12-0x6],al
   14001c14e:	ror    DWORD PTR [rbp+0x48],0x8
   14001c152:	movzx  eax,BYTE PTR [rbp+0x18]
   14001c156:	mov    BYTE PTR [r12-0x2],al
   14001c15b:	ror    DWORD PTR [rbp+0x18],0x8
   14001c15f:	movzx  eax,BYTE PTR [rbp+0x48]
   14001c163:	mov    BYTE PTR [r12-0x7],al
   14001c168:	movzx  eax,BYTE PTR [rbp+0x18]
   14001c16c:	mov    BYTE PTR [r12-0x3],al
   14001c171:	mov    r8d,DWORD PTR [rbp+0x48]
   14001c175:	ror    r8d,0x8
   14001c179:	mov    DWORD PTR [rbp+0x48],r8d
   14001c17d:	mov    r14d,DWORD PTR [rbp+0x18]
   14001c181:	ror    r14d,0x8
   14001c185:	mov    DWORD PTR [rbp+0x18],r14d
   14001c189:	mov    r13d,r11d
   14001c18c:	mov    esi,r10d
   14001c18f:	lea    r12,[r12+0x8]
   14001c194:	sub    rbx,0x1
   14001c198:	jne    0x14001be68
   14001c19e:	xor    eax,eax
   14001c1a0:	movzx  ecx,al
   14001c1a3:	mov    rbx,QWORD PTR [rbp+0x168]
   14001c1aa:	mov    esi,DWORD PTR [rbp-0x80]
   14001c1ad:	mov    r13d,esi
   14001c1b0:	xor    cl,BYTE PTR [rax+rbx*1]
   14001c1b3:	inc    rax
   14001c1b6:	cmp    rax,0x338
   14001c1bc:	jb     0x14001c1b0
   14001c1be:	movzx  eax,cl
   14001c1c1:	cmp    rax,QWORD PTR [rip+0x22050]        # 0x14003e218
   14001c1c8:	jne    0x14001c344
   14001c1ce:	mov    QWORD PTR [rbp+0x3a0],rbx
   14001c1d5:	mov    QWORD PTR [rbp+0x680],0x338
   14001c1e0:	mov    BYTE PTR [rbx+0x337],0x0
   14001c1e7:	xor    edx,edx
   14001c1e9:	lea    r8d,[rdx+0x60]
   14001c1ed:	lea    rdi,[rip+0x32f5c]        # 0x14004f150
   14001c1f4:	mov    rcx,rdi
   14001c1f7:	call   0x140014694
   14001c1fc:	cmp    BYTE PTR [rbx],0x0
   14001c1ff:	je     0x14001c369
   14001c205:	mov    rdx,rbx
   14001c208:	or     rax,0xffffffffffffffff
   14001c20c:	lea    rax,[rax+0x1]
   14001c210:	cmp    WORD PTR [rbx+rax*2],0x0
   14001c215:	jne    0x14001c20c
   14001c217:	lea    rbx,[rbx+rax*2]
   14001c21b:	mov    eax,r13d
   14001c21e:	lea    rcx,[rax+rax*2]
   14001c222:	lea    rdi,[rdi+rcx*8]
   14001c226:	mov    r8,rdi
   14001c229:	xor    ecx,ecx
   14001c22b:	call   QWORD PTR [rip+0x2100f]        # 0x14003d240
   14001c231:	test   eax,eax
   14001c233:	je     0x14001c33d
   14001c239:	xor    edx,edx
   14001c23b:	mov    esi,edx
   14001c23d:	mov    rax,QWORD PTR [rdi]
   14001c240:	mov    ecx,0x5a4d
   14001c245:	cmp    WORD PTR [rax],cx
   14001c248:	je     0x14001c251
   14001c24a:	mov    esi,0xc000007b
   14001c24f:	jmp    0x14001c2b4
   14001c251:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001c255:	cmp    ecx,0x10000000
   14001c25b:	jb     0x14001c264
   14001c25d:	mov    esi,0xc000007b
   14001c262:	jmp    0x14001c2b4
   14001c264:	add    rcx,QWORD PTR [rdi]
   14001c267:	cmp    rcx,QWORD PTR [rdi]
   14001c26a:	jae    0x14001c273
   14001c26c:	mov    esi,0xc000007b
   14001c271:	jmp    0x14001c2b4
   14001c273:	cmp    DWORD PTR [rcx],0x4550
   14001c279:	je     0x14001c282
   14001c27b:	mov    esi,0xc000007b
   14001c280:	jmp    0x14001c2b4
   14001c282:	movzx  eax,WORD PTR [rcx+0x18]
   14001c286:	mov    r8d,0x10b
   14001c28c:	sub    ax,r8w
   14001c290:	mov    r8d,0xfeff
   14001c296:	test   r8w,ax
   14001c29a:	je     0x14001c2a3
   14001c29c:	mov    esi,0xc000000d
   14001c2a1:	jmp    0x14001c2b4
   14001c2a3:	mov    rax,QWORD PTR [rcx+0x88]
   14001c2aa:	mov    QWORD PTR [rdi+0xc],rax
   14001c2ae:	mov    eax,DWORD PTR [rcx+0x50]
   14001c2b1:	mov    DWORD PTR [rdi+0x8],eax
   14001c2b4:	mov    r12d,DWORD PTR [rbx+0x2]
   14001c2b8:	add    rbx,0x6
   14001c2bc:	mov    r14d,edx
   14001c2bf:	test   r12d,r12d
   14001c2c2:	je     0x14001c328
   14001c2c4:	mov    QWORD PTR [rbp+0x4a8],rdx
   14001c2cb:	mov    rcx,rbx
   14001c2ce:	or     rax,0xffffffffffffffff
   14001c2d2:	inc    rax
   14001c2d5:	cmp    BYTE PTR [rbx+rax*1],0x0
   14001c2d9:	jne    0x14001c2d2
   14001c2db:	inc    rbx
   14001c2de:	add    rbx,rax
   14001c2e1:	test   esi,esi
   14001c2e3:	js     0x14001c316
   14001c2e5:	lea    r9,[rbp+0x4a8]
   14001c2ec:	mov    r8,rdi
   14001c2ef:	xor    edx,edx
   14001c2f1:	call   0x1400153c4
   14001c2f6:	mov    esi,eax
   14001c2f8:	test   eax,eax
   14001c2fa:	js     0x14001c362
   14001c2fc:	mov    eax,DWORD PTR [rsp+0x60]
   14001c300:	mov    rcx,QWORD PTR [rbp+0x4a8]
   14001c307:	lea    r8,[rip+0x31d12]        # 0x14004e020
   14001c30e:	mov    QWORD PTR [r8+rax*8],rcx
   14001c312:	xor    edx,edx
   14001c314:	jmp    0x14001c31a
   14001c316:	mov    eax,DWORD PTR [rsp+0x60]
   14001c31a:	inc    eax
   14001c31c:	mov    DWORD PTR [rsp+0x60],eax
   14001c320:	inc    r14d
   14001c323:	cmp    r14d,r12d
   14001c326:	jb     0x14001c2c4
   14001c328:	inc    r13d
   14001c32b:	cmp    BYTE PTR [rbx],0x0
   14001c32e:	lea    rdi,[rip+0x32e1b]        # 0x14004f150
   14001c335:	jne    0x14001c205
   14001c33b:	jmp    0x14001c362
   14001c33d:	mov    esi,0xc000007a
   14001c342:	jmp    0x14001c362
   14001c344:	mov    rcx,rbx
   14001c347:	call   0x1400155d8
   14001c34c:	mov    r14,QWORD PTR [rbp-0x30]
   14001c350:	mov    r12d,DWORD PTR [rbp-0x70]
   14001c354:	mov    esi,0xc000007a
   14001c359:	lea    rdi,[rip+0x32df0]        # 0x14004f150
   14001c360:	jmp    0x14001c371
   14001c362:	lea    rdi,[rip+0x32de7]        # 0x14004f150
   14001c369:	mov    r12d,DWORD PTR [rbp-0x70]
   14001c36d:	mov    r14,QWORD PTR [rbp-0x30]
   14001c371:	cmp    QWORD PTR [rbp+0x3a0],0x0
   14001c379:	je     0x14001c393
   14001c37b:	call   QWORD PTR [rip+0x20e3f]        # 0x14003d1c0
   14001c381:	mov    rcx,rax
   14001c384:	mov    r8,QWORD PTR [rbp+0x3a0]
   14001c38b:	xor    edx,edx
   14001c38d:	call   QWORD PTR [rip+0x20e4d]        # 0x14003d1e0
   14001c393:	test   esi,esi
   14001c395:	jns    0x14001c3eb
   14001c397:	mov    ebx,0x4
   14001c39c:	mov    rcx,QWORD PTR [rdi]
   14001c39f:	test   rcx,rcx
   14001c3a2:	je     0x14001c3aa
   14001c3a4:	call   QWORD PTR [rip+0x20eae]        # 0x14003d258
   14001c3aa:	add    rdi,0x18
   14001c3ae:	sub    rbx,0x1
   14001c3b2:	jne    0x14001c39c
   14001c3b4:	xor    edx,edx
   14001c3b6:	lea    r8d,[rbx+0x60]
   14001c3ba:	lea    rbx,[rip+0x32d8f]        # 0x14004f150
   14001c3c1:	mov    rcx,rbx
   14001c3c4:	call   0x140014694
   14001c3c9:	mov    r8d,0x170
   14001c3cf:	lea    rdx,[rip+0x2539a]        # 0x140041770
   14001c3d6:	lea    rcx,[rip+0x31c43]        # 0x14004e020
   14001c3dd:	call   0x1400156f2
   14001c3e2:	mov    rsi,QWORD PTR [rbp-0x40]
   14001c3e6:	xor    r13d,r13d
   14001c3e9:	jmp    0x14001c407
   14001c3eb:	mov    eax,DWORD PTR [rip+0x32757]        # 0x14004eb48
   14001c3f1:	mov    rsi,QWORD PTR [rbp-0x40]
   14001c3f5:	xor    r13d,r13d
   14001c3f8:	lea    rbx,[rip+0x32d51]        # 0x14004f150
   14001c3ff:	inc    eax
   14001c401:	mov    DWORD PTR [rip+0x32741],eax        # 0x14004eb48
   14001c407:	mov    eax,r13d
   14001c40a:	xchg   DWORD PTR [rip+0x32d30],eax        # 0x14004f140
   14001c410:	mov    DWORD PTR [rbp+0xf68],r14d
   14001c417:	mov    eax,0x1
   14001c41c:	mov    DWORD PTR [rbp+0xf60],eax
   14001c422:	mov    DWORD PTR [rbp+0xf78],0x20826f6d
   14001c42c:	mov    DWORD PTR [rbp+0xf70],eax
   14001c432:	mov    DWORD PTR [rbp+0xf88],eax
   14001c438:	mov    DWORD PTR [rbp+0xf80],eax
   14001c43e:	mov    DWORD PTR [rbp+0xf98],r12d
   14001c445:	mov    r12d,eax
   14001c448:	mov    DWORD PTR [rbp+0xf90],eax
   14001c44e:	mov    rdi,QWORD PTR [rip+0x31c9b]        # 0x14004e0f0
   14001c455:	mov    rcx,rdi
   14001c458:	call   QWORD PTR [rip+0x212ca]        # 0x14003d728
   14001c45e:	lea    r9,[rbp+0xf60]
   14001c465:	mov    edx,0x2021
   14001c46a:	xor    ecx,ecx
   14001c46c:	lea    r8d,[rcx+0x4]
   14001c470:	call   rdi
   14001c472:	xor    eax,eax
   14001c474:	lock cmpxchg DWORD PTR [rip+0x32cc3],r12d        # 0x14004f140
   14001c47d:	jne    0x14001c472
   14001c47f:	mov    eax,DWORD PTR [rip+0x326c3]        # 0x14004eb48
   14001c485:	test   eax,eax
   14001c487:	jle    0x14001c4e6
   14001c489:	sub    eax,r12d
   14001c48c:	mov    DWORD PTR [rip+0x326b6],eax        # 0x14004eb48
   14001c492:	jne    0x14001c4e6
   14001c494:	mov    rdi,rbx
   14001c497:	mov    ebx,0x4
   14001c49c:	mov    rcx,QWORD PTR [rdi]
   14001c49f:	test   rcx,rcx
   14001c4a2:	je     0x14001c4aa
   14001c4a4:	call   QWORD PTR [rip+0x20dae]        # 0x14003d258
   14001c4aa:	add    rdi,0x18
   14001c4ae:	sub    rbx,r12
   14001c4b1:	jne    0x14001c49c
   14001c4b3:	xor    edx,edx
   14001c4b5:	lea    r8d,[rbx+0x60]
   14001c4b9:	lea    rbx,[rip+0x32c90]        # 0x14004f150
   14001c4c0:	mov    rcx,rbx
   14001c4c3:	call   0x140014694
   14001c4c8:	mov    r8d,0x170
   14001c4ce:	lea    rdx,[rip+0x2529b]        # 0x140041770
   14001c4d5:	lea    r14,[rip+0x31b44]        # 0x14004e020
   14001c4dc:	mov    rcx,r14
   14001c4df:	call   0x1400156f2
   14001c4e4:	jmp    0x14001c4ed
   14001c4e6:	lea    r14,[rip+0x31b33]        # 0x14004e020
   14001c4ed:	mov    eax,r13d
   14001c4f0:	xchg   DWORD PTR [rip+0x32c4a],eax        # 0x14004f140
   14001c4f6:	mov    rdi,QWORD PTR [rip+0x31c83]        # 0x14004e180
   14001c4fd:	mov    rcx,rdi
   14001c500:	call   QWORD PTR [rip+0x21222]        # 0x14003d728
   14001c506:	mov    rdx,rsi
   14001c509:	xor    ecx,ecx
   14001c50b:	call   rdi
   14001c50d:	mov    rax,QWORD PTR [rbp+0x250]
   14001c514:	mov    QWORD PTR [rbp+0x140],rax
   14001c51b:	jmp    0x14001c531
   14001c51d:	mov    r12d,0x1
   14001c523:	lea    r14,[rip+0x31af6]        # 0x14004e020
   14001c52a:	lea    rbx,[rip+0x32c1f]        # 0x14004f150
   14001c531:	lea    rcx,[rbp+0x5c8]
   14001c538:	call   0x14003a35c
   14001c53d:	cmp    DWORD PTR [rbp+0x84],0x0
   14001c544:	je     0x1400046f8
   14001c54a:	mov    rsi,r13
   14001c54d:	xor    edi,edi
   14001c54f:	mov    DWORD PTR [rbp+0x28],edi
   14001c552:	xor    eax,eax
   14001c554:	mov    QWORD PTR [rbp+0x2c],rax
   14001c558:	mov    DWORD PTR [rbp+0x34],eax
   14001c55b:	mov    DWORD PTR [rbp+0x198],edi
   14001c561:	mov    QWORD PTR [rbp+0x19c],rax
   14001c568:	mov    DWORD PTR [rbp+0x1a4],eax
   14001c56e:	mov    DWORD PTR [rbp+0x160],edi
   14001c574:	lea    rax,[rip+0x31da5]        # 0x14004e320
   14001c57b:	mov    QWORD PTR [rbp+0x638],rax
   14001c582:	mov    QWORD PTR [rbp+0x4f0],0xa0
   14001c58d:	call   QWORD PTR [rip+0x20c2d]        # 0x14003d1c0
   14001c593:	mov    rcx,rax
   14001c596:	lea    edx,[rdi+0x8]
   14001c599:	mov    r8d,0xa0
   14001c59f:	call   QWORD PTR [rip+0x20c33]        # 0x14003d1d8
   14001c5a5:	mov    r14,rax
   14001c5a8:	test   rax,rax
   14001c5ab:	je     0x14001e90d
   14001c5b1:	mov    r8,QWORD PTR [rbp+0x4f0]
   14001c5b8:	mov    rdx,QWORD PTR [rbp+0x638]
   14001c5bf:	mov    rcx,rax
   14001c5c2:	call   0x1400156f2
   14001c5c7:	mov    rsi,r14
   14001c5ca:	mov    QWORD PTR [rbp-0x78],r14
   14001c5ce:	mov    ebx,DWORD PTR [rbp+0x4f0]
   14001c5d4:	lea    rax,[rip+0x31e8d]        # 0x14004e468
   14001c5db:	mov    QWORD PTR [rbp+0x5d8],rax
   14001c5e2:	mov    QWORD PTR [rbp+0x4b8],0x8
   14001c5ed:	call   QWORD PTR [rip+0x20bcd]        # 0x14003d1c0
   14001c5f3:	mov    rcx,rax
   14001c5f6:	mov    edx,0x8
   14001c5fb:	mov    r8d,edx
   14001c5fe:	call   QWORD PTR [rip+0x20bd4]        # 0x14003d1d8
   14001c604:	mov    r12,rax
   14001c607:	test   rax,rax
   14001c60a:	je     0x14001e900
   14001c610:	mov    r8,QWORD PTR [rbp+0x4b8]
   14001c617:	mov    rdx,QWORD PTR [rbp+0x5d8]
   14001c61e:	mov    rcx,rax
   14001c621:	call   0x1400156f2
   14001c626:	mov    r13,r12
   14001c629:	mov    QWORD PTR [rbp-0x18],r12
   14001c62d:	mov    rsi,QWORD PTR [rbp+0x4b8]
   14001c634:	rdtsc  
   14001c636:	shl    rdx,0x20
   14001c63a:	or     rax,rdx
   14001c63d:	mov    QWORD PTR [rbp+0x670],rax
   14001c644:	mov    DWORD PTR [rbp+0x6c],edi
   14001c647:	lea    r8,[rbp+0x378]
   14001c64e:	mov    edx,0x4
   14001c653:	mov    ecx,edx
   14001c655:	call   0x14000bad0
   14001c65a:	test   eax,eax
   14001c65c:	js     0x14001e8fd
   14001c662:	mov    edx,DWORD PTR [rbp+0x378]
   14001c668:	mov    DWORD PTR [rbp+0x188],edx
   14001c66e:	lea    r8,[rbp+0x6c]
   14001c672:	xor    ecx,ecx
   14001c674:	call   0x14000bad0
   14001c679:	or     eax,0x10000000
   14001c67e:	jl     0x14001e8fd
   14001c684:	lea    r8,[rbp+0x450]
   14001c68b:	mov    edx,ebx
   14001c68d:	lea    ecx,[rdi+0x4]
   14001c690:	call   0x14000bad0
   14001c695:	test   eax,eax
   14001c697:	js     0x14001e8fd
   14001c69d:	mov    edx,DWORD PTR [rbp+0x450]
   14001c6a3:	mov    DWORD PTR [rbp+0x188],edx
   14001c6a9:	lea    r8,[rbp+0x6c]
   14001c6ad:	mov    ecx,DWORD PTR [rbp+0x6c]
   14001c6b0:	call   0x14000bad0
   14001c6b5:	or     eax,0x10000000
   14001c6ba:	jl     0x14001e8fd
   14001c6c0:	lea    r8,[rbp+0x388]
   14001c6c7:	mov    edx,esi
   14001c6c9:	lea    ecx,[rdi+0x4]
   14001c6cc:	call   0x14000bad0
   14001c6d1:	test   eax,eax
   14001c6d3:	js     0x14001e8fd
   14001c6d9:	mov    edx,DWORD PTR [rbp+0x388]
   14001c6df:	mov    DWORD PTR [rbp+0x188],edx
   14001c6e5:	lea    r8,[rbp+0x6c]
   14001c6e9:	mov    ecx,DWORD PTR [rbp+0x6c]
   14001c6ec:	call   0x14000bad0
   14001c6f1:	or     eax,0x10000000
   14001c6f6:	jl     0x14001e8fd
   14001c6fc:	lea    r8,[rbp+0x428]
   14001c703:	lea    edx,[rdi+0x8]
   14001c706:	lea    ecx,[rdi+0x4]
   14001c709:	call   0x14000bad0
   14001c70e:	test   eax,eax
   14001c710:	js     0x14001e8fd
   14001c716:	mov    edx,DWORD PTR [rbp+0x428]
   14001c71c:	mov    DWORD PTR [rbp+0x188],edx
   14001c722:	lea    r8,[rbp+0x6c]
   14001c726:	mov    ecx,DWORD PTR [rbp+0x6c]
   14001c729:	call   0x14000bad0
   14001c72e:	or     eax,0x10000000
   14001c733:	jl     0x14001e8fd
   14001c739:	mov    eax,DWORD PTR [rbp+0x6c]
   14001c73c:	mov    DWORD PTR [rbp+0x2c],eax
   14001c73f:	mov    edi,eax
   14001c741:	call   QWORD PTR [rip+0x20a79]        # 0x14003d1c0
   14001c747:	mov    rcx,rax
   14001c74a:	mov    r8d,edi
   14001c74d:	mov    edx,0x8
   14001c752:	call   QWORD PTR [rip+0x20a80]        # 0x14003d1d8
   14001c758:	mov    rdi,rax
   14001c75b:	test   rax,rax
   14001c75e:	je     0x14001e8fd
   14001c764:	mov    QWORD PTR [rbp+0x30],rax
   14001c768:	xor    r10d,r10d
   14001c76b:	mov    DWORD PTR [rbp+0x28],r10d
   14001c76f:	mov    DWORD PTR [rbp+0x240],0x4
   14001c779:	lea    rax,[rbp+0x240]
   14001c780:	test   rax,rax
   14001c783:	je     0x14001e8fd
   14001c789:	lea    r8,[rbp+0x718]
   14001c790:	lea    edx,[r10+0x4]
   14001c794:	mov    rcx,rdi
   14001c797:	call   0x14000baf0
   14001c79c:	test   eax,eax
   14001c79e:	js     0x14001e8fd
   14001c7a4:	mov    ecx,DWORD PTR [rbp+0x2c]
   14001c7a7:	add    rcx,rdi
   14001c7aa:	lea    rax,[rdi+0x8]
   14001c7ae:	cmp    rax,rcx
   14001c7b1:	ja     0x14001e8fd
   14001c7b7:	mov    DWORD PTR [rdi],edx
   14001c7b9:	mov    rcx,QWORD PTR [rbp+0x718]
   14001c7c0:	mov    eax,DWORD PTR [rbp+0x240]
   14001c7c6:	mov    DWORD PTR [rcx],eax
   14001c7c8:	mov    r9d,DWORD PTR [rbp+0x28]
   14001c7cc:	inc    r9d
   14001c7cf:	mov    DWORD PTR [rbp+0x28],r9d
   14001c7d3:	test   ebx,ebx
   14001c7d5:	je     0x14001e8fd
   14001c7db:	cmp    QWORD PTR [rbp+0x30],r10
   14001c7df:	jne    0x14001c825
   14001c7e1:	lea    r8,[rbp+0x390]
   14001c7e8:	mov    edx,ebx
   14001c7ea:	lea    ecx,[r10+0x4]
   14001c7ee:	call   0x14000bad0
   14001c7f3:	test   eax,eax
   14001c7f5:	js     0x14001e8fd
   14001c7fb:	mov    edx,DWORD PTR [rbp+0x390]
   14001c801:	mov    DWORD PTR [rbp+0x398],edx
   14001c807:	lea    r8,[rbp+0x2c]
   14001c80b:	mov    ecx,DWORD PTR [rbp+0x2c]
   14001c80e:	call   0x14000bad0
   14001c813:	test   eax,eax
   14001c815:	js     0x14001e8fd
   14001c81b:	mov    edi,DWORD PTR [rbp+0x28]
   14001c81e:	inc    edi
   14001c820:	jmp    0x14001c8d3
   14001c825:	mov    rdi,QWORD PTR [rbp+0x30]
   14001c829:	mov    QWORD PTR [rbp+0x3b0],rdi
   14001c830:	test   r9d,r9d
   14001c833:	je     0x14001c884
   14001c835:	lea    r8,[rbp+0x468]
   14001c83c:	mov    edx,DWORD PTR [rdi]
   14001c83e:	mov    ecx,0x4
   14001c843:	call   0x14000bad0
   14001c848:	test   eax,eax
   14001c84a:	js     0x14001e8fd
   14001c850:	mov    eax,DWORD PTR [rbp+0x468]
   14001c856:	mov    DWORD PTR [rbp+0x398],eax
   14001c85c:	mov    edx,eax
   14001c85e:	lea    r8,[rbp+0x3b0]
   14001c865:	mov    rcx,rdi
   14001c868:	call   0x14000baf0
   14001c86d:	test   eax,eax
   14001c86f:	js     0x14001e8fd
   14001c875:	inc    r10d
   14001c878:	mov    rdi,QWORD PTR [rbp+0x3b0]
   14001c87f:	cmp    r10d,r9d
   14001c882:	jb     0x14001c835
   14001c884:	lea    r8,[rbp+0x730]
   14001c88b:	mov    edx,0x4
   14001c890:	mov    rcx,rdi
   14001c893:	call   0x14000baf0
   14001c898:	test   eax,eax
   14001c89a:	js     0x14001e8fd
   14001c8a0:	mov    r8,rbx
   14001c8a3:	mov    ecx,DWORD PTR [rbp+0x2c]
   14001c8a6:	add    rcx,QWORD PTR [rbp+0x30]
   14001c8aa:	lea    rax,[rbx+0x4]
   14001c8ae:	add    rax,rdi
   14001c8b1:	cmp    rax,rcx
   14001c8b4:	ja     0x14001e8fd
   14001c8ba:	mov    DWORD PTR [rdi],ebx
   14001c8bc:	mov    rdx,r14
   14001c8bf:	mov    rcx,QWORD PTR [rbp+0x730]
   14001c8c6:	call   0x1400156f2
   14001c8cb:	mov    edi,DWORD PTR [rbp+0x28]
   14001c8ce:	inc    edi
   14001c8d0:	xor    r10d,r10d
   14001c8d3:	mov    DWORD PTR [rbp+0x28],edi
   14001c8d6:	test   esi,esi
   14001c8d8:	je     0x14001e8fd
   14001c8de:	cmp    QWORD PTR [rbp+0x30],0x0
   14001c8e3:	jne    0x14001c92a
   14001c8e5:	lea    r8,[rbp+0x430]
   14001c8ec:	mov    edx,esi
   14001c8ee:	mov    ecx,0x4
   14001c8f3:	call   0x14000bad0
   14001c8f8:	test   eax,eax
   14001c8fa:	js     0x14001e8fd
   14001c900:	mov    edx,DWORD PTR [rbp+0x430]
   14001c906:	mov    DWORD PTR [rbp+0x458],edx
   14001c90c:	lea    r8,[rbp+0x2c]
   14001c910:	mov    ecx,DWORD PTR [rbp+0x2c]
   14001c913:	call   0x14000bad0
   14001c918:	test   eax,eax
   14001c91a:	js     0x14001e8fd
   14001c920:	mov    edi,DWORD PTR [rbp+0x28]
   14001c923:	inc    edi
   14001c925:	jmp    0x14001c9d9
   14001c92a:	mov    r9,QWORD PTR [rbp+0x30]
   14001c92e:	mov    QWORD PTR [rbp+0x3c0],r9
   14001c935:	test   edi,edi
   14001c937:	je     0x14001c989
   14001c939:	lea    r8,[rbp+0x3a8]
   14001c940:	mov    edx,DWORD PTR [r9]
   14001c943:	mov    ecx,0x4
   14001c948:	call   0x14000bad0
   14001c94d:	test   eax,eax
   14001c94f:	js     0x14001e8fd
   14001c955:	mov    eax,DWORD PTR [rbp+0x3a8]
   14001c95b:	mov    DWORD PTR [rbp+0x458],eax
   14001c961:	mov    edx,eax
   14001c963:	lea    r8,[rbp+0x3c0]
   14001c96a:	mov    rcx,r9
   14001c96d:	call   0x14000baf0
   14001c972:	test   eax,eax
   14001c974:	js     0x14001e8fd
   14001c97a:	inc    r10d
   14001c97d:	mov    r9,QWORD PTR [rbp+0x3c0]
   14001c984:	cmp    r10d,edi
   14001c987:	jb     0x14001c939
   14001c989:	lea    r8,[rbp+0x6f8]
   14001c990:	mov    edx,0x4
   14001c995:	mov    rcx,r9
   14001c998:	call   0x14000baf0
   14001c99d:	test   eax,eax
   14001c99f:	js     0x14001e8fd
   14001c9a5:	mov    r8d,esi
   14001c9a8:	mov    ecx,DWORD PTR [rbp+0x2c]
   14001c9ab:	add    rcx,QWORD PTR [rbp+0x30]
   14001c9af:	lea    rax,[r8+0x4]
   14001c9b3:	add    rax,r9
   14001c9b6:	cmp    rax,rcx
   14001c9b9:	ja     0x14001e8fd
   14001c9bf:	mov    DWORD PTR [r9],esi
   14001c9c2:	mov    rdx,r12
   14001c9c5:	mov    rcx,QWORD PTR [rbp+0x6f8]
   14001c9cc:	call   0x1400156f2
   14001c9d1:	mov    edi,DWORD PTR [rbp+0x28]
   14001c9d4:	inc    edi
   14001c9d6:	xor    r10d,r10d
   14001c9d9:	mov    DWORD PTR [rbp+0x28],edi
   14001c9dc:	mov    rax,QWORD PTR [rbp+0x670]
   14001c9e3:	mov    QWORD PTR [rbp+0x4e0],rax
   14001c9ea:	lea    rax,[rbp+0x4e0]
   14001c9f1:	test   rax,rax
   14001c9f4:	je     0x14001e8fd
   14001c9fa:	cmp    QWORD PTR [rbp+0x30],0x0
   14001c9ff:	jne    0x14001ca42
   14001ca01:	lea    r8,[rbp+0x2d0]
   14001ca08:	mov    edx,0x8
   14001ca0d:	lea    ecx,[rdx-0x4]
   14001ca10:	call   0x14000bad0
   14001ca15:	test   eax,eax
   14001ca17:	js     0x14001e8fd
   14001ca1d:	mov    edx,DWORD PTR [rbp+0x2d0]
   14001ca23:	mov    DWORD PTR [rbp+0x2e4],edx
   14001ca29:	lea    r8,[rbp+0x2c]
   14001ca2d:	mov    ecx,DWORD PTR [rbp+0x2c]
   14001ca30:	call   0x14000bad0
   14001ca35:	test   eax,eax
   14001ca37:	js     0x14001e8fd
   14001ca3d:	jmp    0x14001caeb
   14001ca42:	mov    r9,QWORD PTR [rbp+0x30]
   14001ca46:	mov    QWORD PTR [rbp+0x3d0],r9
   14001ca4d:	test   edi,edi
   14001ca4f:	je     0x14001caa1
   14001ca51:	lea    r8,[rbp+0x2dc]
   14001ca58:	mov    edx,DWORD PTR [r9]
   14001ca5b:	mov    ecx,0x4
   14001ca60:	call   0x14000bad0
   14001ca65:	test   eax,eax
   14001ca67:	js     0x14001e8fd
   14001ca6d:	mov    eax,DWORD PTR [rbp+0x2dc]
   14001ca73:	mov    DWORD PTR [rbp+0x2e4],eax
   14001ca79:	mov    edx,eax
   14001ca7b:	lea    r8,[rbp+0x3d0]
   14001ca82:	mov    rcx,r9
   14001ca85:	call   0x14000baf0
   14001ca8a:	test   eax,eax
   14001ca8c:	js     0x14001e8fd
   14001ca92:	inc    r10d
   14001ca95:	mov    r9,QWORD PTR [rbp+0x3d0]
   14001ca9c:	cmp    r10d,edi
   14001ca9f:	jb     0x14001ca51
   14001caa1:	lea    r8,[rbp+0x708]
   14001caa8:	mov    edx,0x4
   14001caad:	mov    rcx,r9
   14001cab0:	call   0x14000baf0
   14001cab5:	test   eax,eax
   14001cab7:	js     0x14001e8fd
   14001cabd:	mov    ecx,DWORD PTR [rbp+0x2c]
   14001cac0:	add    rcx,QWORD PTR [rbp+0x30]
   14001cac4:	lea    rax,[r9+0xc]
   14001cac8:	cmp    rax,rcx
   14001cacb:	ja     0x14001e8fd
   14001cad1:	mov    DWORD PTR [r9],0x8
   14001cad8:	mov    rax,QWORD PTR [rbp+0x708]
   14001cadf:	movsd  xmm0,QWORD PTR [rbp+0x4e0]
   14001cae7:	movsd  QWORD PTR [rax],xmm0
   14001caeb:	inc    DWORD PTR [rbp+0x28]
   14001caee:	lea    r8,[rbp+0x2ec]
   14001caf5:	mov    edx,0x4
   14001cafa:	mov    ecx,edx
   14001cafc:	call   0x14000bad0
   14001cb01:	test   eax,eax
   14001cb03:	js     0x14001e8fd
   14001cb09:	mov    edi,DWORD PTR [rbp+0x2ec]
   14001cb0f:	mov    DWORD PTR [rbp+0x47c],edi
   14001cb15:	mov    DWORD PTR [rbp+0x1b8],edi
   14001cb1b:	lea    r8,[rbp+0x2f4]
   14001cb22:	mov    edx,0x8
   14001cb27:	call   0x14000bad0
   14001cb2c:	test   eax,eax
   14001cb2e:	js     0x14001e8fd
   14001cb34:	mov    edx,DWORD PTR [rbp+0x2f4]
   14001cb3a:	mov    DWORD PTR [rbp+0x47c],edx
   14001cb40:	lea    r8,[rbp+0x1b8]
   14001cb47:	mov    ecx,edi
   14001cb49:	call   0x14000bad0
   14001cb4e:	test   eax,eax
   14001cb50:	js     0x14001e8fd
   14001cb56:	xor    r9d,r9d
   14001cb59:	mov    esi,r9d
   14001cb5c:	mov    QWORD PTR [rbp-0x68],r9
   14001cb60:	mov    r12d,r9d
   14001cb63:	mov    QWORD PTR [rbp+0x2b8],r9
   14001cb6a:	mov    QWORD PTR [rbp-0x40],r9
   14001cb6e:	mov    DWORD PTR [rbp+0x50],r9d
   14001cb72:	mov    edi,r9d
   14001cb75:	mov    QWORD PTR [rsp+0x68],r9
   14001cb7a:	mov    DWORD PTR [rbp+0x70],r9d
   14001cb7e:	mov    r14d,r9d
   14001cb81:	mov    QWORD PTR [rsp+0x70],r9
   14001cb86:	mov    r13d,r9d
   14001cb89:	mov    QWORD PTR [rbp-0x48],r9
   14001cb8d:	mov    DWORD PTR [rbp+0xb0],r9d
   14001cb94:	mov    QWORD PTR [rbp+0x488],r9
   14001cb9b:	rdtsc  
   14001cb9d:	shl    rdx,0x20
   14001cba1:	or     rax,rdx
   14001cba4:	mov    QWORD PTR [rbp+0x488],rax
   14001cbab:	mov    DWORD PTR [rbp+0xd8],0x8
   14001cbb5:	lea    r8,[rbp+0xd8]
   14001cbbc:	mov    edx,DWORD PTR [rbp+0x2c]
   14001cbbf:	lea    ecx,[r9+0x8]
   14001cbc3:	call   0x14000bad0
   14001cbc8:	mov    ebx,eax
   14001cbca:	test   eax,eax
   14001cbcc:	js     0x14001ccb5
   14001cbd2:	mov    eax,DWORD PTR [rbp+0xd8]
   14001cbd8:	lea    rcx,[rax+0x7]
   14001cbdc:	and    ecx,0xfffffff8
   14001cbdf:	cmp    ecx,eax
   14001cbe1:	jae    0x14001cbed
   14001cbe3:	mov    ebx,0xc0000095
   14001cbe8:	jmp    0x14001ccb5
   14001cbed:	mov    DWORD PTR [rbp+0xd8],ecx
   14001cbf3:	mov    edi,ecx
   14001cbf5:	call   QWORD PTR [rip+0x205c5]        # 0x14003d1c0
   14001cbfb:	mov    rcx,rax
   14001cbfe:	mov    r8d,edi
   14001cc01:	mov    edx,0x8
   14001cc06:	call   QWORD PTR [rip+0x205cc]        # 0x14003d1d8
   14001cc0c:	mov    rdi,rax
   14001cc0f:	test   rax,rax
   14001cc12:	jne    0x14001cc1e
   14001cc14:	mov    ebx,0xc0000017
   14001cc19:	jmp    0x14001ccaf
   14001cc1e:	mov    QWORD PTR [rbp+0x288],rax
   14001cc25:	mov    eax,DWORD PTR [rbp+0x28]
   14001cc28:	mov    DWORD PTR [rdi],eax
   14001cc2a:	lea    r8,[rbp+0x288]
   14001cc31:	mov    edx,0x4
   14001cc36:	mov    rcx,rdi
   14001cc39:	call   0x14000baf0
   14001cc3e:	mov    ebx,eax
   14001cc40:	test   eax,eax
   14001cc42:	js     0x14001cc9b
   14001cc44:	mov    rcx,QWORD PTR [rbp+0x288]
   14001cc4b:	mov    eax,DWORD PTR [rbp+0x2c]
   14001cc4e:	mov    DWORD PTR [rcx],eax
   14001cc50:	lea    r8,[rbp+0x288]
   14001cc57:	call   0x14000baf0
   14001cc5c:	mov    ebx,eax
   14001cc5e:	test   eax,eax
   14001cc60:	js     0x14001cc9b
   14001cc62:	mov    ecx,DWORD PTR [rbp+0xd8]
   14001cc68:	mov    rax,QWORD PTR [rbp+0x488]
   14001cc6f:	mov    QWORD PTR [rcx+rdi*1-0x8],rax
   14001cc74:	mov    r8d,DWORD PTR [rbp+0x2c]
   14001cc78:	mov    rdx,QWORD PTR [rbp+0x30]
   14001cc7c:	mov    rcx,QWORD PTR [rbp+0x288]
   14001cc83:	call   0x1400156f2
   14001cc88:	mov    rsi,rdi
   14001cc8b:	mov    QWORD PTR [rbp-0x68],rdi
   14001cc8f:	mov    r12d,DWORD PTR [rbp+0xd8]
   14001cc96:	mov    rdi,r13
   14001cc99:	jmp    0x14001ccb2
   14001cc9b:	call   QWORD PTR [rip+0x2051f]        # 0x14003d1c0
   14001cca1:	mov    rcx,rax
   14001cca4:	mov    r8,rdi
   14001cca7:	xor    edx,edx
   14001cca9:	call   QWORD PTR [rip+0x20531]        # 0x14003d1e0
   14001ccaf:	mov    rdi,rsi
   14001ccb2:	xor    r9d,r9d
   14001ccb5:	or     ebx,0x10000000
   14001ccbb:	jl     0x14001e640
   14001ccc1:	mov    QWORD PTR [rbp+0x648],r9
   14001ccc8:	mov    QWORD PTR [rbp+0x5f8],r9
   14001cccf:	mov    QWORD PTR [rbp+0x658],r9
   14001ccd6:	mov    QWORD PTR [rbp+0x608],r9
   14001ccdd:	mov    QWORD PTR [rbp+0x3e0],r9
   14001cce4:	mov    QWORD PTR [rbp+0x5e8],r9
   14001cceb:	mov    rsi,r9
   14001ccee:	mov    QWORD PTR [rbp+0x168],r9
   14001ccf5:	mov    rbx,QWORD PTR [rbp-0x68]
   14001ccf9:	test   rbx,rbx
   14001ccfc:	jne    0x14001cd0b
   14001ccfe:	mov    ebx,0xc000000d
   14001cd03:	xor    r12d,r12d
   14001cd06:	jmp    0x14001d45a
   14001cd0b:	mov    r14d,r12d
   14001cd0e:	mov    QWORD PTR [rbp+0xc8],r14
   14001cd15:	test   r12d,r12d
   14001cd18:	je     0x14001d3a7
   14001cd1e:	lea    rcx,[r14+0x8]
   14001cd22:	call   0x14000f134
   14001cd27:	mov    r12,rax
   14001cd2a:	mov    QWORD PTR [rbp+0xb8],rax
   14001cd31:	test   rax,rax
   14001cd34:	je     0x14001d3a7
   14001cd3a:	xor    dl,dl
   14001cd3c:	mov    BYTE PTR [rsp+0x7c],dl
   14001cd40:	xor    eax,eax
   14001cd42:	mov    ecx,eax
   14001cd44:	test   r14,r14
   14001cd47:	je     0x14001cd58
   14001cd49:	xor    dl,BYTE PTR [rcx+rbx*1]
   14001cd4c:	inc    rcx
   14001cd4f:	cmp    rcx,r14
   14001cd52:	jb     0x14001cd49
   14001cd54:	mov    BYTE PTR [rsp+0x7c],dl
   14001cd58:	mov    r10,rbx
   14001cd5b:	mov    r9,r12
   14001cd5e:	mov    r8d,eax
   14001cd61:	mov    DWORD PTR [rbp+0xc],eax
   14001cd64:	or     ebx,0xffffffff
   14001cd67:	mov    DWORD PTR [rbp-0x24],ebx
   14001cd6a:	mov    DWORD PTR [rsp+0x60],eax
   14001cd6e:	mov    DWORD PTR [rbp+0x0],eax
   14001cd71:	mov    rdi,r14
   14001cd74:	and    edi,0x7
   14001cd77:	je     0x14001ce3e
   14001cd7d:	mov    ebx,eax
   14001cd7f:	mov    DWORD PTR [rsp+0x60],eax
   14001cd83:	mov    DWORD PTR [rbp+0x0],r13d
   14001cd87:	mov    r11d,eax
   14001cd8a:	test   edi,edi
   14001cd8c:	jle    0x14001cdc9
   14001cd8e:	mov    r8d,0x38
   14001cd94:	movzx  eax,BYTE PTR [r10]
   14001cd98:	cmp    r11d,0x4
   14001cd9c:	jge    0x14001cda9
   14001cd9e:	lea    ecx,[r8-0x20]
   14001cda2:	shl    eax,cl
   14001cda4:	or     r13d,eax
   14001cda7:	jmp    0x14001cdb0
   14001cda9:	mov    ecx,r8d
   14001cdac:	shl    eax,cl
   14001cdae:	or     ebx,eax
   14001cdb0:	inc    r10
   14001cdb3:	inc    r11d
   14001cdb6:	sub    r8d,0x8
   14001cdba:	cmp    r11d,edi
   14001cdbd:	jl     0x14001cd94
   14001cdbf:	mov    DWORD PTR [rbp+0x0],r13d
   14001cdc3:	mov    DWORD PTR [rsp+0x60],ebx
   14001cdc7:	xor    eax,eax
   14001cdc9:	mov    r8d,r13d
   14001cdcc:	xor    r8d,0x4e61f5c7
   14001cdd3:	mov    DWORD PTR [rbp+0xc],r8d
   14001cdd7:	xor    ebx,0x1be6ba80
   14001cddd:	mov    DWORD PTR [rbp-0x24],ebx
   14001cde0:	test   edi,edi
   14001cde2:	jle    0x14001ce08
   14001cde4:	cmp    eax,0x4
   14001cde7:	jge    0x14001cdf2
   14001cde9:	rol    r8d,0x8
   14001cded:	mov    BYTE PTR [r9],r8b
   14001cdf0:	jmp    0x14001cdf8
   14001cdf2:	rol    ebx,0x8
   14001cdf5:	mov    BYTE PTR [r9],bl
   14001cdf8:	inc    r9
   14001cdfb:	inc    eax
   14001cdfd:	cmp    eax,edi
   14001cdff:	jl     0x14001cde4
   14001ce01:	mov    r8d,DWORD PTR [rbp+0xc]
   14001ce05:	mov    ebx,DWORD PTR [rbp-0x24]
   14001ce08:	lea    eax,[rdi-0x4]
   14001ce0b:	test   eax,eax
   14001ce0d:	jle    0x14001ce22
   14001ce0f:	mov    ecx,0x4
   14001ce14:	sub    ecx,eax
   14001ce16:	shl    ecx,0x3
   14001ce19:	shr    ebx,cl
   14001ce1b:	shl    ebx,cl
   14001ce1d:	mov    DWORD PTR [rbp-0x24],ebx
   14001ce20:	jmp    0x14001ce3e
   14001ce22:	xor    ecx,ecx
   14001ce24:	mov    ebx,ecx
   14001ce26:	mov    DWORD PTR [rbp-0x24],ecx
   14001ce29:	test   eax,eax
   14001ce2b:	jns    0x14001ce3e
   14001ce2d:	neg    eax
   14001ce2f:	shl    eax,0x3
   14001ce32:	mov    ecx,eax
   14001ce34:	shr    r8d,cl
   14001ce37:	shl    r8d,cl
   14001ce3a:	mov    DWORD PTR [rbp+0xc],r8d
   14001ce3e:	mov    r13,r14
   14001ce41:	shr    r13,0x3
   14001ce45:	test   r13,r13
   14001ce48:	je     0x14001d18e
   14001ce4e:	lea    r14,[r9+0x7]
   14001ce52:	lea    rdx,[r10+0x2]
   14001ce56:	mov    esi,DWORD PTR [rsp+0x60]
   14001ce5a:	mov    r12d,DWORD PTR [rbp+0x0]
   14001ce5e:	movzx  r11d,BYTE PTR [rdx-0x2]
   14001ce63:	shl    r11d,0x8
   14001ce67:	movzx  eax,BYTE PTR [rdx-0x1]
   14001ce6b:	or     r11d,eax
   14001ce6e:	shl    r11d,0x8
   14001ce72:	movzx  eax,BYTE PTR [rdx]
   14001ce75:	or     r11d,eax
   14001ce78:	shl    r11d,0x8
   14001ce7c:	movzx  eax,BYTE PTR [rdx+0x1]
   14001ce80:	or     r11d,eax
   14001ce83:	movzx  r10d,BYTE PTR [rdx+0x2]
   14001ce88:	shl    r10d,0x8
   14001ce8c:	movzx  eax,BYTE PTR [rdx+0x3]
   14001ce90:	or     r10d,eax
   14001ce93:	shl    r10d,0x8
   14001ce97:	movzx  eax,BYTE PTR [rdx+0x4]
   14001ce9b:	or     r10d,eax
   14001ce9e:	shl    r10d,0x8
   14001cea2:	movzx  eax,BYTE PTR [rdx+0x5]
   14001cea6:	or     r10d,eax
   14001cea9:	xor    ebx,r10d
   14001ceac:	add    rdx,0x8
   14001ceb0:	mov    edi,ebx
   14001ceb2:	ror    edi,0xc
   14001ceb5:	mov    eax,ebx
   14001ceb7:	xor    eax,0xc221
   14001cebc:	imul   ecx,eax,0x844b
   14001cec2:	sub    ecx,edi
   14001cec4:	xor    ecx,r11d
   14001cec7:	xor    r8d,ecx
   14001ceca:	mov    eax,r8d
   14001cecd:	xor    eax,0x3af61d2e
   14001ced2:	ror    eax,1
   14001ced4:	mov    ecx,r8d
   14001ced7:	rol    ecx,0xf
   14001ceda:	imul   eax,eax,0xc221
   14001cee0:	xor    ecx,eax
   14001cee2:	xor    ebx,ecx
   14001cee4:	mov    edi,ebx
   14001cee6:	ror    edi,0xd
   14001cee9:	mov    eax,ebx
   14001ceeb:	xor    eax,0x3af6
   14001cef0:	imul   ecx,eax,0x1d2e
   14001cef6:	add    edi,ecx
   14001cef8:	xor    r8d,edi
   14001cefb:	mov    eax,r8d
   14001cefe:	xor    eax,0x1d2e
   14001cf03:	rol    eax,0x2
   14001cf06:	mov    ecx,r8d
   14001cf09:	rol    ecx,0x3
   14001cf0c:	imul   eax,eax,0x3af6
   14001cf12:	add    ecx,eax
   14001cf14:	xor    ebx,ecx
   14001cf16:	mov    eax,ebx
   14001cf18:	not    eax
   14001cf1a:	ror    eax,0xa
   14001cf1d:	add    eax,0x844b
   14001cf22:	imul   eax,eax,0x3af6
   14001cf28:	xor    r8d,eax
   14001cf2b:	mov    eax,r8d
   14001cf2e:	xor    eax,0x3af61d2e
   14001cf33:	rol    eax,0x4
   14001cf36:	mov    ecx,r8d
   14001cf39:	shr    ecx,0x5
   14001cf3c:	imul   eax,eax,0xc221
   14001cf42:	sub    eax,ecx
   14001cf44:	xor    ebx,eax
   14001cf46:	mov    eax,ebx
   14001cf48:	xor    eax,0x3af6
   14001cf4d:	rol    eax,1
   14001cf4f:	mov    ecx,ebx
   14001cf51:	shr    ecx,1
   14001cf53:	imul   eax,eax,0x1d2e
   14001cf59:	add    ecx,eax
   14001cf5b:	xor    r8d,ecx
   14001cf5e:	mov    eax,r8d
   14001cf61:	xor    eax,0xc221
   14001cf66:	rol    eax,0x7
   14001cf69:	mov    ecx,r8d
   14001cf6c:	ror    ecx,0xb
   14001cf6f:	imul   eax,eax,0x3af6
   14001cf75:	xor    ecx,eax
   14001cf77:	xor    ebx,ecx
   14001cf79:	lea    eax,[rbx-0xc221]
   14001cf7f:	imul   ecx,eax,0x844b
   14001cf85:	mov    eax,ebx
   14001cf87:	shr    eax,0xf
   14001cf8a:	sub    ecx,eax
   14001cf8c:	xor    r8d,ecx
   14001cf8f:	mov    eax,r8d
   14001cf92:	ror    eax,0xa
   14001cf95:	sub    eax,0xc221
   14001cf9a:	imul   eax,eax,0x1d2e
   14001cfa0:	xor    ebx,eax
   14001cfa2:	mov    r9d,ebx
   14001cfa5:	xor    r9d,r8d
   14001cfa8:	xor    r9d,0xf8d79965
   14001cfaf:	lea    r8d,[r9-0x3af6]
   14001cfb6:	xor    r8d,ebx
   14001cfb9:	xor    r8d,0xc221844b
   14001cfc0:	lea    eax,[r8-0x3af6a179]
   14001cfc7:	xor    r9d,eax
   14001cfca:	lea    eax,[r8-0x1d2e]
   14001cfd1:	rol    eax,0x3
   14001cfd4:	mov    ecx,r8d
   14001cfd7:	shr    ecx,0xf
   14001cfda:	imul   eax,eax,0x844b
   14001cfe0:	xor    ecx,eax
   14001cfe2:	xor    r9d,ecx
   14001cfe5:	lea    eax,[r9-0x1d2e]
   14001cfec:	imul   ecx,eax,0xc221
   14001cff2:	mov    eax,r9d
   14001cff5:	shr    eax,0xd
   14001cff8:	sub    ecx,eax
   14001cffa:	xor    r8d,ecx
   14001cffd:	mov    eax,0xc221844b
   14001d002:	sub    eax,r8d
   14001d005:	ror    eax,0x9
   14001d008:	mov    ecx,r8d
   14001d00b:	ror    ecx,0xb
   14001d00e:	imul   eax,eax,0x1d2e
   14001d014:	xor    ecx,eax
   14001d016:	xor    r9d,ecx
   14001d019:	lea    eax,[r9+0x3dde40bf]
   14001d020:	xor    r8d,eax
   14001d023:	mov    edi,r8d
   14001d026:	ror    edi,0x7
   14001d029:	mov    eax,r8d
   14001d02c:	xor    eax,0xc221
   14001d031:	imul   ecx,eax,0x844b
   14001d037:	sub    ecx,edi
   14001d039:	xor    r9d,ecx
   14001d03c:	mov    eax,r9d
   14001d03f:	xor    eax,0x3af6
   14001d044:	rol    eax,0x4
   14001d047:	mov    ecx,r9d
   14001d04a:	ror    ecx,0x10
   14001d04d:	imul   eax,eax,0xc221
   14001d053:	sub    eax,ecx
   14001d055:	xor    r8d,eax
   14001d058:	mov    eax,0xc221844b
   14001d05d:	sub    eax,r8d
   14001d060:	ror    eax,0xa
   14001d063:	mov    ecx,r8d
   14001d066:	ror    ecx,0x4
   14001d069:	imul   eax,eax,0x1d2e
   14001d06f:	add    ecx,eax
   14001d071:	xor    r9d,ecx
   14001d074:	lea    eax,[r9+0x3dde7bb5]
   14001d07b:	ror    eax,0x4
   14001d07e:	mov    ecx,r9d
   14001d081:	ror    ecx,0x9
   14001d084:	imul   eax,eax,0x3af6
   14001d08a:	xor    ecx,eax
   14001d08c:	xor    r8d,ecx
   14001d08f:	mov    eax,r8d
   14001d092:	xor    eax,0x3af61d2e
   14001d097:	rol    eax,0x8
   14001d09a:	mov    ecx,r8d
   14001d09d:	rol    ecx,0x2
   14001d0a0:	imul   eax,eax,0x844b
   14001d0a6:	sub    eax,ecx
   14001d0a8:	xor    r9d,eax
   14001d0ab:	mov    eax,0x3af61d2e
   14001d0b0:	sub    eax,r9d
   14001d0b3:	ror    eax,0xb
   14001d0b6:	mov    ecx,r9d
   14001d0b9:	ror    ecx,0xc
   14001d0bc:	imul   eax,eax,0xc221
   14001d0c2:	sub    eax,ecx
   14001d0c4:	xor    r8d,eax
   14001d0c7:	mov    eax,r8d
   14001d0ca:	xor    eax,0xc221
   14001d0cf:	imul   ecx,eax,0x1d2e
   14001d0d5:	mov    eax,r8d
   14001d0d8:	shr    eax,0x8
   14001d0db:	xor    ecx,eax
   14001d0dd:	xor    r9d,ecx
   14001d0e0:	xor    r8d,r9d
   14001d0e3:	xor    r8d,0xf8d79965
   14001d0ea:	xor    r9d,r12d
   14001d0ed:	mov    DWORD PTR [rbp+0xc],r9d
   14001d0f1:	xor    r8d,esi
   14001d0f4:	mov    DWORD PTR [rbp-0x24],r8d
   14001d0f8:	mov    BYTE PTR [r14-0x4],r9b
   14001d0fc:	ror    DWORD PTR [rbp+0xc],0x8
   14001d100:	movzx  eax,BYTE PTR [rbp-0x24]
   14001d104:	mov    BYTE PTR [r14],al
   14001d107:	ror    DWORD PTR [rbp-0x24],0x8
   14001d10b:	movzx  eax,BYTE PTR [rbp+0xc]
   14001d10f:	mov    BYTE PTR [r14-0x5],al
   14001d113:	ror    DWORD PTR [rbp+0xc],0x8
   14001d117:	movzx  eax,BYTE PTR [rbp-0x24]
   14001d11b:	mov    BYTE PTR [r14-0x1],al
   14001d11f:	ror    DWORD PTR [rbp-0x24],0x8
   14001d123:	movzx  eax,BYTE PTR [rbp+0xc]
   14001d127:	mov    BYTE PTR [r14-0x6],al
   14001d12b:	ror    DWORD PTR [rbp+0xc],0x8
   14001d12f:	movzx  eax,BYTE PTR [rbp-0x24]
   14001d133:	mov    BYTE PTR [r14-0x2],al
   14001d137:	ror    DWORD PTR [rbp-0x24],0x8
   14001d13b:	movzx  eax,BYTE PTR [rbp+0xc]
   14001d13f:	mov    BYTE PTR [r14-0x7],al
   14001d143:	movzx  eax,BYTE PTR [rbp-0x24]
   14001d147:	mov    BYTE PTR [r14-0x3],al
   14001d14b:	mov    r8d,DWORD PTR [rbp+0xc]
   14001d14f:	ror    r8d,0x8
   14001d153:	mov    DWORD PTR [rbp+0xc],r8d
   14001d157:	mov    ebx,DWORD PTR [rbp-0x24]
   14001d15a:	ror    ebx,0x8
   14001d15d:	mov    DWORD PTR [rbp-0x24],ebx
   14001d160:	mov    r12d,r11d
   14001d163:	mov    esi,r10d
   14001d166:	lea    r14,[r14+0x8]
   14001d16a:	sub    r13,0x1
   14001d16e:	jne    0x14001ce5e
   14001d174:	movzx  edx,BYTE PTR [rsp+0x7c]
   14001d179:	mov    rsi,QWORD PTR [rbp+0x168]
   14001d180:	mov    r14,QWORD PTR [rbp+0xc8]
   14001d187:	mov    r12,QWORD PTR [rbp+0xb8]
   14001d18e:	movzx  eax,dl
   14001d191:	mov    QWORD PTR [r12+r14*1],rax
   14001d195:	mov    QWORD PTR [rbp+0x3e0],r12
   14001d19c:	lea    rbx,[r14+0x8]
   14001d1a0:	mov    QWORD PTR [rbp+0x5e8],rbx
   14001d1a7:	lea    rax,[rip+0x312b2]        # 0x14004e460
   14001d1ae:	mov    QWORD PTR [rbp+0x648],rax
   14001d1b5:	mov    QWORD PTR [rbp+0x5f8],0x8
   14001d1c0:	lea    r14,[rip+0x311f9]        # 0x14004e3c0
   14001d1c7:	mov    QWORD PTR [rbp+0x658],r14
   14001d1ce:	mov    QWORD PTR [rbp+0x608],0xa0
   14001d1d9:	call   QWORD PTR [rip+0x1ffe1]        # 0x14003d1c0
   14001d1df:	mov    rcx,rax
   14001d1e2:	mov    edx,0x8
   14001d1e7:	lea    r8d,[rdx+0x28]
   14001d1eb:	call   QWORD PTR [rip+0x1ffe7]        # 0x14003d1d8
   14001d1f1:	mov    rdi,rax
   14001d1f4:	test   rax,rax
   14001d1f7:	jne    0x14001d206
   14001d1f9:	mov    ebx,0xc0000017
   14001d1fe:	xor    r12d,r12d
   14001d201:	jmp    0x14001d393
   14001d206:	mov    DWORD PTR [rax],ebx
   14001d208:	mov    ebx,ebx
   14001d20a:	call   QWORD PTR [rip+0x1ffb0]        # 0x14003d1c0
   14001d210:	mov    rcx,rax
   14001d213:	mov    r8d,ebx
   14001d216:	mov    edx,0x8
   14001d21b:	call   QWORD PTR [rip+0x1ffb7]        # 0x14003d1d8
   14001d221:	test   rax,rax
   14001d224:	je     0x14001d30f
   14001d22a:	mov    QWORD PTR [rdi+0x8],rax
   14001d22e:	mov    r8d,ebx
   14001d231:	mov    rdx,r12
   14001d234:	mov    rcx,rax
   14001d237:	call   0x1400156f2
   14001d23c:	mov    DWORD PTR [rdi+0x10],0xa0
   14001d243:	call   QWORD PTR [rip+0x1ff77]        # 0x14003d1c0
   14001d249:	mov    rcx,rax
   14001d24c:	mov    edx,0x8
   14001d251:	mov    r8d,0xa0
   14001d257:	call   QWORD PTR [rip+0x1ff7b]        # 0x14003d1d8
   14001d25d:	test   rax,rax
   14001d260:	je     0x14001d30f
   14001d266:	mov    QWORD PTR [rdi+0x18],rax
   14001d26a:	movups xmm0,XMMWORD PTR [r14]
   14001d26e:	movups XMMWORD PTR [rax],xmm0
   14001d271:	movups xmm1,XMMWORD PTR [r14+0x10]
   14001d276:	movups XMMWORD PTR [rax+0x10],xmm1
   14001d27a:	movups xmm0,XMMWORD PTR [r14+0x20]
   14001d27f:	movups XMMWORD PTR [rax+0x20],xmm0
   14001d283:	movups xmm1,XMMWORD PTR [r14+0x30]
   14001d288:	movups XMMWORD PTR [rax+0x30],xmm1
   14001d28c:	movups xmm0,XMMWORD PTR [r14+0x40]
   14001d291:	movups XMMWORD PTR [rax+0x40],xmm0
   14001d295:	movups xmm1,XMMWORD PTR [r14+0x50]
   14001d29a:	movups XMMWORD PTR [rax+0x50],xmm1
   14001d29e:	movups xmm0,XMMWORD PTR [r14+0x60]
   14001d2a3:	movups XMMWORD PTR [rax+0x60],xmm0
   14001d2a7:	movups xmm1,XMMWORD PTR [r14+0x70]
   14001d2ac:	movups XMMWORD PTR [rax+0x70],xmm1
   14001d2b0:	movups xmm0,XMMWORD PTR [r14+0x80]
   14001d2b8:	movups XMMWORD PTR [rax+0x80],xmm0
   14001d2bf:	movups xmm1,XMMWORD PTR [r14+0x90]
   14001d2c7:	movups XMMWORD PTR [rax+0x90],xmm1
   14001d2ce:	mov    DWORD PTR [rdi+0x20],0x8
   14001d2d5:	call   QWORD PTR [rip+0x1fee5]        # 0x14003d1c0
   14001d2db:	mov    rcx,rax
   14001d2de:	mov    edx,0x8
   14001d2e3:	mov    r8d,edx
   14001d2e6:	call   QWORD PTR [rip+0x1feec]        # 0x14003d1d8
   14001d2ec:	test   rax,rax
   14001d2ef:	je     0x14001d30f
   14001d2f1:	mov    QWORD PTR [rdi+0x28],rax
   14001d2f5:	xor    r12d,r12d
   14001d2f8:	mov    ebx,r12d
   14001d2fb:	movsd  xmm0,QWORD PTR [rip+0x3115d]        # 0x14004e460
   14001d303:	movsd  QWORD PTR [rax],xmm0
   14001d307:	mov    rsi,rdi
   14001d30a:	jmp    0x14001d393
   14001d30f:	mov    ebx,0xc0000017
   14001d314:	mov    r14,QWORD PTR [rdi+0x8]
   14001d318:	test   r14,r14
   14001d31b:	je     0x14001d33a
   14001d31d:	call   QWORD PTR [rip+0x1fe9d]        # 0x14003d1c0
   14001d323:	mov    rcx,rax
   14001d326:	mov    r8,r14
   14001d329:	xor    edx,edx
   14001d32b:	call   QWORD PTR [rip+0x1feaf]        # 0x14003d1e0
   14001d331:	xor    r12d,r12d
   14001d334:	mov    QWORD PTR [rdi+0x8],r12
   14001d338:	jmp    0x14001d33d
   14001d33a:	xor    r12d,r12d
   14001d33d:	mov    r14,QWORD PTR [rdi+0x18]
   14001d341:	test   r14,r14
   14001d344:	je     0x14001d35e
   14001d346:	call   QWORD PTR [rip+0x1fe74]        # 0x14003d1c0
   14001d34c:	mov    rcx,rax
   14001d34f:	mov    r8,r14
   14001d352:	xor    edx,edx
   14001d354:	call   QWORD PTR [rip+0x1fe86]        # 0x14003d1e0
   14001d35a:	mov    QWORD PTR [rdi+0x18],r12
   14001d35e:	mov    r14,QWORD PTR [rdi+0x28]
   14001d362:	test   r14,r14
   14001d365:	je     0x14001d37f
   14001d367:	call   QWORD PTR [rip+0x1fe53]        # 0x14003d1c0
   14001d36d:	mov    rcx,rax
   14001d370:	mov    r8,r14
   14001d373:	xor    edx,edx
   14001d375:	call   QWORD PTR [rip+0x1fe65]        # 0x14003d1e0
   14001d37b:	mov    QWORD PTR [rdi+0x28],r12
   14001d37f:	call   QWORD PTR [rip+0x1fe3b]        # 0x14003d1c0
   14001d385:	mov    rcx,rax
   14001d388:	mov    r8,rdi
   14001d38b:	xor    edx,edx
   14001d38d:	call   QWORD PTR [rip+0x1fe4d]        # 0x14003d1e0
   14001d393:	mov    r13,QWORD PTR [rbp-0x48]
   14001d397:	test   ebx,ebx
   14001d399:	js     0x14001d3af
   14001d39b:	mov    QWORD PTR [rbp+0x2b8],rsi
   14001d3a2:	mov    rsi,r12
   14001d3a5:	jmp    0x14001d3af
   14001d3a7:	mov    ebx,0xc0000001
   14001d3ac:	xor    r12d,r12d
   14001d3af:	mov    rdi,QWORD PTR [rbp+0x3e0]
   14001d3b6:	test   rdi,rdi
   14001d3b9:	je     0x14001d3d6
   14001d3bb:	call   QWORD PTR [rip+0x1fdff]        # 0x14003d1c0
   14001d3c1:	mov    rcx,rax
   14001d3c4:	mov    r8,rdi
   14001d3c7:	xor    edx,edx
   14001d3c9:	call   QWORD PTR [rip+0x1fe11]        # 0x14003d1e0
   14001d3cf:	mov    QWORD PTR [rbp+0x3e0],r12
   14001d3d6:	test   rsi,rsi
   14001d3d9:	je     0x14001d452
   14001d3db:	mov    rdi,QWORD PTR [rsi+0x8]
   14001d3df:	test   rdi,rdi
   14001d3e2:	je     0x14001d3fc
   14001d3e4:	call   QWORD PTR [rip+0x1fdd6]        # 0x14003d1c0
   14001d3ea:	mov    rcx,rax
   14001d3ed:	mov    r8,rdi
   14001d3f0:	xor    edx,edx
   14001d3f2:	call   QWORD PTR [rip+0x1fde8]        # 0x14003d1e0
   14001d3f8:	mov    QWORD PTR [rsi+0x8],r12
   14001d3fc:	mov    rdi,QWORD PTR [rsi+0x18]
   14001d400:	test   rdi,rdi
   14001d403:	je     0x14001d41d
   14001d405:	call   QWORD PTR [rip+0x1fdb5]        # 0x14003d1c0
   14001d40b:	mov    rcx,rax
   14001d40e:	mov    r8,rdi
   14001d411:	xor    edx,edx
   14001d413:	call   QWORD PTR [rip+0x1fdc7]        # 0x14003d1e0
   14001d419:	mov    QWORD PTR [rsi+0x18],r12
   14001d41d:	mov    rdi,QWORD PTR [rsi+0x28]
   14001d421:	test   rdi,rdi
   14001d424:	je     0x14001d43e
   14001d426:	call   QWORD PTR [rip+0x1fd94]        # 0x14003d1c0
   14001d42c:	mov    rcx,rax
   14001d42f:	mov    r8,rdi
   14001d432:	xor    edx,edx
   14001d434:	call   QWORD PTR [rip+0x1fda6]        # 0x14003d1e0
   14001d43a:	mov    QWORD PTR [rsi+0x28],r12
   14001d43e:	call   QWORD PTR [rip+0x1fd7c]        # 0x14003d1c0
   14001d444:	mov    rcx,rax
   14001d447:	mov    r8,rsi
   14001d44a:	xor    edx,edx
   14001d44c:	call   QWORD PTR [rip+0x1fd8e]        # 0x14003d1e0
   14001d452:	mov    r14,QWORD PTR [rsp+0x70]
   14001d457:	mov    rdi,r14
   14001d45a:	or     ebx,0x10000000
   14001d460:	jl     0x14001daaa
   14001d466:	mov    rsi,QWORD PTR [rbp+0x2b8]
   14001d46d:	mov    DWORD PTR [rbp+0x58],0x4
   14001d474:	lea    r8,[rbp+0x58]
   14001d478:	mov    edx,DWORD PTR [rsi]
   14001d47a:	mov    ecx,0x4
   14001d47f:	call   0x14000bad0
   14001d484:	mov    ebx,eax
   14001d486:	test   eax,eax
   14001d488:	js     0x14001d4ef
   14001d48a:	lea    r8,[rbp+0x58]
   14001d48e:	mov    edx,ecx
   14001d490:	mov    ecx,DWORD PTR [rbp+0x58]
   14001d493:	call   0x14000bad0
   14001d498:	mov    ebx,eax
   14001d49a:	test   eax,eax
   14001d49c:	js     0x14001d4ef
   14001d49e:	lea    r8,[rbp+0x58]
   14001d4a2:	mov    edx,DWORD PTR [rsi+0x10]
   14001d4a5:	mov    ecx,DWORD PTR [rbp+0x58]
   14001d4a8:	call   0x14000bad0
   14001d4ad:	mov    ebx,eax
   14001d4af:	test   eax,eax
   14001d4b1:	js     0x14001d4ef
   14001d4b3:	lea    r8,[rbp+0x58]
   14001d4b7:	mov    edx,0x4
   14001d4bc:	mov    ecx,DWORD PTR [rbp+0x58]
   14001d4bf:	call   0x14000bad0
   14001d4c4:	mov    ebx,eax
   14001d4c6:	test   eax,eax
   14001d4c8:	js     0x14001d4ef
   14001d4ca:	lea    r8,[rbp+0x58]
   14001d4ce:	mov    edx,DWORD PTR [rsi+0x20]
   14001d4d1:	mov    ecx,DWORD PTR [rbp+0x58]
   14001d4d4:	call   0x14000bad0
   14001d4d9:	mov    ebx,eax
   14001d4db:	mov    eax,DWORD PTR [rbp+0x184]
   14001d4e1:	test   ebx,ebx
   14001d4e3:	cmovns eax,DWORD PTR [rbp+0x58]
   14001d4e7:	mov    DWORD PTR [rbp+0x184],eax
   14001d4ed:	jmp    0x14001d4f5
   14001d4ef:	mov    eax,DWORD PTR [rbp+0x184]
   14001d4f5:	test   ebx,ebx
   14001d4f7:	js     0x14001d678
   14001d4fd:	mov    edi,eax
   14001d4ff:	call   QWORD PTR [rip+0x1fcbb]        # 0x14003d1c0
   14001d505:	mov    rcx,rax
   14001d508:	mov    r8d,edi
   14001d50b:	mov    edx,0x8
   14001d510:	call   QWORD PTR [rip+0x1fcc2]        # 0x14003d1d8
   14001d516:	mov    r14,rax
   14001d519:	test   rax,rax
   14001d51c:	jne    0x14001d536
   14001d51e:	mov    ebx,0xc0000017
   14001d523:	mov    r14,QWORD PTR [rsp+0x70]
   14001d528:	mov    rdi,r14
   14001d52b:	mov    r12d,edi
   14001d52e:	mov    rsi,r14
   14001d531:	jmp    0x14001d67f
   14001d536:	mov    QWORD PTR [rbp+0xa0],rax
   14001d53d:	mov    eax,DWORD PTR [rsi]
   14001d53f:	mov    DWORD PTR [r14],eax
   14001d542:	lea    r8,[rbp+0xa0]
   14001d549:	mov    edx,0x4
   14001d54e:	mov    rcx,r14
   14001d551:	call   0x14000baf0
   14001d556:	mov    ebx,eax
   14001d558:	test   eax,eax
   14001d55a:	js     0x14001d654
   14001d560:	mov    r8d,DWORD PTR [rsi]
   14001d563:	mov    rdx,QWORD PTR [rsi+0x8]
   14001d567:	mov    rcx,QWORD PTR [rbp+0xa0]
   14001d56e:	call   0x1400156f2
   14001d573:	mov    edx,DWORD PTR [rsi]
   14001d575:	lea    r8,[rbp+0xa0]
   14001d57c:	mov    rcx,QWORD PTR [rbp+0xa0]
   14001d583:	call   0x14000baf0
   14001d588:	mov    ebx,eax
   14001d58a:	test   eax,eax
   14001d58c:	js     0x14001d654
   14001d592:	mov    eax,DWORD PTR [rsi+0x10]
   14001d595:	mov    rcx,QWORD PTR [rbp+0xa0]
   14001d59c:	mov    DWORD PTR [rcx],eax
   14001d59e:	lea    r8,[rbp+0xa0]
   14001d5a5:	mov    edx,0x4
   14001d5aa:	call   0x14000baf0
   14001d5af:	mov    ebx,eax
   14001d5b1:	test   eax,eax
   14001d5b3:	js     0x14001d654
   14001d5b9:	mov    r8d,DWORD PTR [rsi+0x10]
   14001d5bd:	mov    rdx,QWORD PTR [rsi+0x18]
   14001d5c1:	mov    rcx,QWORD PTR [rbp+0xa0]
   14001d5c8:	call   0x1400156f2
   14001d5cd:	mov    edx,DWORD PTR [rsi+0x10]
   14001d5d0:	lea    r8,[rbp+0xa0]
   14001d5d7:	mov    rcx,QWORD PTR [rbp+0xa0]
   14001d5de:	call   0x14000baf0
   14001d5e3:	mov    ebx,eax
   14001d5e5:	test   eax,eax
   14001d5e7:	js     0x14001d654
   14001d5e9:	mov    eax,DWORD PTR [rsi+0x20]
   14001d5ec:	mov    rcx,QWORD PTR [rbp+0xa0]
   14001d5f3:	mov    DWORD PTR [rcx],eax
   14001d5f5:	lea    r8,[rbp+0xa0]
   14001d5fc:	mov    edx,0x4
   14001d601:	call   0x14000baf0
   14001d606:	mov    ebx,eax
   14001d608:	test   eax,eax
   14001d60a:	js     0x14001d654
   14001d60c:	mov    r8d,DWORD PTR [rsi+0x20]
   14001d610:	mov    rdx,QWORD PTR [rsi+0x28]
   14001d614:	mov    rcx,QWORD PTR [rbp+0xa0]
   14001d61b:	call   0x1400156f2
   14001d620:	mov    edx,DWORD PTR [rsi+0x20]
   14001d623:	lea    r8,[rbp+0xa0]
   14001d62a:	mov    rcx,QWORD PTR [rbp+0xa0]
   14001d631:	call   0x14000baf0
   14001d636:	mov    ebx,eax
   14001d638:	test   eax,eax
   14001d63a:	js     0x14001d654
   14001d63c:	mov    rsi,r14
   14001d63f:	mov    QWORD PTR [rbp-0x40],r14
   14001d643:	mov    r12d,DWORD PTR [rbp+0x184]
   14001d64a:	mov    r14,QWORD PTR [rsp+0x70]
   14001d64f:	mov    rdi,r14
   14001d652:	jmp    0x14001d67f
   14001d654:	call   QWORD PTR [rip+0x1fb66]        # 0x14003d1c0
   14001d65a:	mov    rcx,rax
   14001d65d:	mov    r8,r14
   14001d660:	xor    edx,edx
   14001d662:	call   QWORD PTR [rip+0x1fb78]        # 0x14003d1e0
   14001d668:	mov    r14,QWORD PTR [rsp+0x70]
   14001d66d:	mov    rdi,r14
   14001d670:	mov    r12d,edi
   14001d673:	mov    rsi,r14
   14001d676:	jmp    0x14001d67f
   14001d678:	mov    r12d,DWORD PTR [rbp+0x50]
   14001d67c:	mov    esi,r12d
   14001d67f:	or     ebx,0x10000000
   14001d685:	jl     0x14001e63c
   14001d68b:	xor    r9d,r9d
   14001d68e:	mov    QWORD PTR [rbp+0x578],r9
   14001d695:	mov    r10d,r9d
   14001d698:	mov    DWORD PTR [rbp+0x3b8],r9d
   14001d69f:	mov    QWORD PTR [rbp+0x580],r9
   14001d6a6:	mov    r11d,r9d
   14001d6a9:	mov    DWORD PTR [rbp+0x2d8],r9d
   14001d6b0:	mov    DWORD PTR [rbp+0x1bc],0x8
   14001d6ba:	lea    r8,[rbp+0x1bc]
   14001d6c1:	mov    edx,DWORD PTR [rbp+0x1b8]
   14001d6c7:	lea    ecx,[r9+0x8]
   14001d6cb:	call   0x14000bad0
   14001d6d0:	mov    ebx,eax
   14001d6d2:	or     ebx,0x10000000
   14001d6d8:	jl     0x14001d958
   14001d6de:	mov    eax,DWORD PTR [rbp+0x1bc]
   14001d6e4:	lea    rcx,[rax+0x7]
   14001d6e8:	and    ecx,0xfffffff8
   14001d6eb:	cmp    ecx,eax
   14001d6ed:	jae    0x14001d6fc
   14001d6ef:	mov    ebx,0xc0000095
   14001d6f4:	mov    edi,DWORD PTR [rbp+0x1c8]
   14001d6fa:	jmp    0x14001d72a
   14001d6fc:	mov    DWORD PTR [rbp+0x1b0],ecx
   14001d702:	lea    r8,[rbp+0x1b0]
   14001d709:	mov    edx,0x8
   14001d70e:	call   0x14000bad0
   14001d713:	mov    ebx,eax
   14001d715:	mov    edi,DWORD PTR [rbp+0x1c8]
   14001d71b:	test   eax,eax
   14001d71d:	cmovns edi,DWORD PTR [rbp+0x1b0]
   14001d724:	mov    DWORD PTR [rbp+0x1c8],edi
   14001d72a:	test   ebx,ebx
   14001d72c:	js     0x14001d955
   14001d732:	cmp    QWORD PTR [rbp+0x30],r9
   14001d736:	je     0x14001d950
   14001d73c:	cmp    DWORD PTR [rbp+0x28],0x1
   14001d740:	jbe    0x14001d950
   14001d746:	mov    rcx,QWORD PTR [rbp+0x30]
   14001d74a:	mov    QWORD PTR [rbp+0x120],rcx
   14001d751:	mov    esi,DWORD PTR [rcx]
   14001d753:	lea    r8,[rbp+0x120]
   14001d75a:	mov    edx,0x4
   14001d75f:	call   0x14000baf0
   14001d764:	mov    ebx,eax
   14001d766:	test   eax,eax
   14001d768:	js     0x14001d7da
   14001d76a:	mov    edx,esi
   14001d76c:	lea    r8,[rbp+0x120]
   14001d773:	mov    rcx,QWORD PTR [rbp+0x120]
   14001d77a:	call   0x14000baf0
   14001d77f:	mov    ebx,eax
   14001d781:	test   eax,eax
   14001d783:	js     0x14001d7da
   14001d785:	inc    r9d
   14001d788:	mov    rcx,QWORD PTR [rbp+0x120]
   14001d78f:	cmp    r9d,0x1
   14001d793:	jb     0x14001d751
   14001d795:	mov    r9d,DWORD PTR [rcx]
   14001d798:	lea    r8,[rbp+0x120]
   14001d79f:	mov    edx,0x4
   14001d7a4:	call   0x14000baf0
   14001d7a9:	mov    ebx,eax
   14001d7ab:	test   eax,eax
   14001d7ad:	js     0x14001d7da
   14001d7af:	mov    r10d,r9d
   14001d7b2:	mov    DWORD PTR [rbp+0x3b8],r9d
   14001d7b9:	mov    rax,QWORD PTR [rbp+0x120]
   14001d7c0:	test   r9d,r9d
   14001d7c3:	mov    r9,r11
   14001d7c6:	cmove  rax,r11
   14001d7ca:	mov    QWORD PTR [rbp+0x120],rax
   14001d7d1:	mov    QWORD PTR [rbp+0x578],rax
   14001d7d8:	jmp    0x14001d7dd
   14001d7da:	xor    r9d,r9d
   14001d7dd:	test   ebx,ebx
   14001d7df:	js     0x14001d7ec
   14001d7e1:	cmp    DWORD PTR [rbp+0x28],0x2
   14001d7e5:	ja     0x14001d7f8
   14001d7e7:	mov    ebx,0xc000000d
   14001d7ec:	mov    rdi,r11
   14001d7ef:	mov    rsi,QWORD PTR [rbp-0x40]
   14001d7f3:	jmp    0x14001d958
   14001d7f8:	mov    rcx,QWORD PTR [rbp+0x30]
   14001d7fc:	mov    QWORD PTR [rbp+0x130],rcx
   14001d803:	mov    esi,DWORD PTR [rcx]
   14001d805:	lea    r8,[rbp+0x130]
   14001d80c:	mov    edx,0x4
   14001d811:	call   0x14000baf0
   14001d816:	mov    ebx,eax
   14001d818:	test   eax,eax
   14001d81a:	js     0x14001d88f
   14001d81c:	mov    edx,esi
   14001d81e:	lea    r8,[rbp+0x130]
   14001d825:	mov    rcx,QWORD PTR [rbp+0x130]
   14001d82c:	call   0x14000baf0
   14001d831:	mov    ebx,eax
   14001d833:	test   eax,eax
   14001d835:	js     0x14001d88f
   14001d837:	inc    r9d
   14001d83a:	mov    rcx,QWORD PTR [rbp+0x130]
   14001d841:	cmp    r9d,0x2
   14001d845:	jb     0x14001d803
   14001d847:	mov    r9d,DWORD PTR [rcx]
   14001d84a:	lea    r8,[rbp+0x130]
   14001d851:	mov    edx,0x4
   14001d856:	call   0x14000baf0
   14001d85b:	mov    ebx,eax
   14001d85d:	test   eax,eax
   14001d85f:	js     0x14001d88f
   14001d861:	mov    r11d,r9d
   14001d864:	mov    DWORD PTR [rbp+0x2d8],r9d
   14001d86b:	mov    rax,QWORD PTR [rbp+0x130]
   14001d872:	test   r9d,r9d
   14001d875:	mov    r9d,0x0
   14001d87b:	cmove  rax,r9
   14001d87f:	mov    QWORD PTR [rbp+0x130],rax
   14001d886:	mov    QWORD PTR [rbp+0x580],rax
   14001d88d:	jmp    0x14001d892
   14001d88f:	xor    r9d,r9d
   14001d892:	test   ebx,ebx
   14001d894:	js     0x14001d945
   14001d89a:	mov    DWORD PTR [rbp+0x60],0x4
   14001d8a1:	lea    r8,[rbp+0x60]
   14001d8a5:	mov    edx,edi
   14001d8a7:	mov    ecx,0x4
   14001d8ac:	call   0x14000bad0
   14001d8b1:	mov    ebx,eax
   14001d8b3:	test   eax,eax
   14001d8b5:	js     0x14001d91c
   14001d8b7:	lea    r8,[rbp+0x60]
   14001d8bb:	mov    edx,ecx
   14001d8bd:	mov    ecx,DWORD PTR [rbp+0x60]
   14001d8c0:	call   0x14000bad0
   14001d8c5:	mov    ebx,eax
   14001d8c7:	test   eax,eax
   14001d8c9:	js     0x14001d91c
   14001d8cb:	lea    r8,[rbp+0x60]
   14001d8cf:	mov    edx,r10d
   14001d8d2:	mov    ecx,DWORD PTR [rbp+0x60]
   14001d8d5:	call   0x14000bad0
   14001d8da:	mov    ebx,eax
   14001d8dc:	test   eax,eax
   14001d8de:	js     0x14001d91c
   14001d8e0:	lea    r8,[rbp+0x60]
   14001d8e4:	mov    edx,0x4
   14001d8e9:	mov    ecx,DWORD PTR [rbp+0x60]
   14001d8ec:	call   0x14000bad0
   14001d8f1:	mov    ebx,eax
   14001d8f3:	test   eax,eax
   14001d8f5:	js     0x14001d91c
   14001d8f7:	lea    r8,[rbp+0x60]
   14001d8fb:	mov    edx,r11d
   14001d8fe:	mov    ecx,DWORD PTR [rbp+0x60]
   14001d901:	call   0x14000bad0
   14001d906:	mov    ebx,eax
   14001d908:	mov    eax,DWORD PTR [rbp+0x1d8]
   14001d90e:	test   ebx,ebx
   14001d910:	cmovns eax,DWORD PTR [rbp+0x60]
   14001d914:	mov    DWORD PTR [rbp+0x1d8],eax
   14001d91a:	jmp    0x14001d922
   14001d91c:	mov    eax,DWORD PTR [rbp+0x1d8]
   14001d922:	test   ebx,ebx
   14001d924:	js     0x14001d945
   14001d926:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d92b:	cmp    eax,0x400000
   14001d930:	jbe    0x14001d93c
   14001d932:	mov    ebx,0x8000ffff
   14001d937:	jmp    0x14001e63c
   14001d93c:	mov    DWORD PTR [rbp+0x70],eax
   14001d93f:	mov    rsi,QWORD PTR [rbp-0x40]
   14001d943:	jmp    0x14001d958
   14001d945:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d94a:	mov    rsi,QWORD PTR [rbp-0x40]
   14001d94e:	jmp    0x14001d958
   14001d950:	mov    ebx,0xc000000d
   14001d955:	mov    rdi,r9
   14001d958:	test   ebx,ebx
   14001d95a:	js     0x14001e63c
   14001d960:	mov    ebx,r9d
   14001d963:	mov    edi,DWORD PTR [rbp+0x70]
   14001d966:	call   QWORD PTR [rip+0x1f854]        # 0x14003d1c0
   14001d96c:	mov    rcx,rax
   14001d96f:	mov    r8d,edi
   14001d972:	mov    edx,0x8
   14001d977:	call   QWORD PTR [rip+0x1f85b]        # 0x14003d1d8
   14001d97d:	test   rax,rax
   14001d980:	jne    0x14001d98e
   14001d982:	mov    ebx,0xc0000017
   14001d987:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d98c:	jmp    0x14001d996
   14001d98e:	mov    rdi,rax
   14001d991:	mov    QWORD PTR [rsp+0x68],rax
   14001d996:	or     ebx,0x10000000
   14001d99c:	jl     0x14001e63c
   14001d9a2:	test   rsi,rsi
   14001d9a5:	je     0x14001e637
   14001d9ab:	test   rdi,rdi
   14001d9ae:	je     0x14001e637
   14001d9b4:	lea    r8,[rbp+0x590]
   14001d9bb:	lea    rdx,[rip+0x2112e]        # 0x14003eaf0
   14001d9c2:	mov    ecx,0x1
   14001d9c7:	call   QWORD PTR [rip+0x1f873]        # 0x14003d240
   14001d9cd:	test   eax,eax
   14001d9cf:	jne    0x14001da0e
   14001d9d1:	call   QWORD PTR [rip+0x1f791]        # 0x14003d168
   14001d9d7:	mov    ebx,eax
   14001d9d9:	test   eax,eax
   14001d9db:	jle    0x14001d9f6
   14001d9dd:	movzx  ebx,ax
   14001d9e0:	or     ebx,0x80070000
   14001d9e6:	jmp    0x14001d9f6
   14001d9e8:	movzx  ebx,ax
   14001d9eb:	or     ebx,0x80070000
   14001d9f1:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d9f6:	mov    edx,DWORD PTR [rbp+0x70]
   14001d9f9:	xor    r12d,r12d
   14001d9fc:	test   ebx,ebx
   14001d9fe:	js     0x14001da9d
   14001da04:	mov    ebx,0x80004005
   14001da09:	jmp    0x14001dab3
   14001da0e:	lea    rdx,[rip+0x210bb]        # 0x14003ead0
   14001da15:	mov    rcx,QWORD PTR [rbp+0x590]
   14001da1c:	call   QWORD PTR [rip+0x1f806]        # 0x14003d228
   14001da22:	mov    rdi,rax
   14001da25:	test   rax,rax
   14001da28:	jne    0x14001da38
   14001da2a:	call   QWORD PTR [rip+0x1f738]        # 0x14003d168
   14001da30:	mov    ebx,eax
   14001da32:	test   eax,eax
   14001da34:	jle    0x14001d9f1
   14001da36:	jmp    0x14001d9e8
   14001da38:	mov    QWORD PTR [rbp+0x690],rsi
   14001da3f:	mov    DWORD PTR [rbp+0x6a0],r12d
   14001da46:	mov    rax,QWORD PTR [rsp+0x68]
   14001da4b:	mov    QWORD PTR [rbp+0x698],rax
   14001da52:	mov    eax,DWORD PTR [rbp+0x70]
   14001da55:	mov    DWORD PTR [rbp+0x6a4],eax
   14001da5b:	xor    r12d,r12d
   14001da5e:	mov    DWORD PTR [rbp+0x6a8],r12d
   14001da65:	mov    rcx,rdi
   14001da68:	call   QWORD PTR [rip+0x1fcba]        # 0x14003d728
   14001da6e:	xor    r9d,r9d
   14001da71:	lea    r8d,[r12+0x20]
   14001da76:	lea    rdx,[rbp+0x690]
   14001da7d:	lea    ecx,[r8+0x66]
   14001da81:	call   rdi
   14001da83:	mov    ebx,eax
   14001da85:	mov    edx,DWORD PTR [rbp+0x70]
   14001da88:	or     ebx,0x10000000
   14001da8e:	cmovns edx,DWORD PTR [rbp+0x6a4]
   14001da95:	mov    DWORD PTR [rbp+0x70],edx
   14001da98:	mov    rdi,QWORD PTR [rsp+0x68]
   14001da9d:	cmp    ebx,0xd0000023
   14001daa3:	jne    0x14001dab3
   14001daa5:	mov    ebx,0x8007007a
   14001daaa:	mov    rsi,QWORD PTR [rbp-0x68]
   14001daae:	jmp    0x14001e643
   14001dab3:	test   ebx,ebx
   14001dab5:	js     0x14001daaa
   14001dab7:	mov    rsi,r12
   14001daba:	cmp    edx,0x4
   14001dabd:	jae    0x14001dac9
   14001dabf:	mov    ebx,0xc000003e
   14001dac4:	jmp    0x14001de57
   14001dac9:	mov    r14d,DWORD PTR [rdi]
   14001dacc:	lea    rcx,[rdi+0x4]
   14001dad0:	cmp    rcx,rdi
   14001dad3:	jb     0x14001de36
   14001dad9:	lea    eax,[rdx-0x4]
   14001dadc:	cmp    eax,r14d
   14001dadf:	jae    0x14001daf0
   14001dae1:	mov    ebx,0xc000003e
   14001dae6:	mov    r14,QWORD PTR [rsp+0x70]
   14001daeb:	jmp    0x14001de57
   14001daf0:	lea    r8,[r14+rcx*1]
   14001daf4:	mov    QWORD PTR [rbp+0xc8],r8
   14001dafb:	cmp    r8,rcx
   14001dafe:	jb     0x14001de36
   14001db04:	lea    edi,[r14+0x4]
   14001db08:	cmp    edi,0x4
   14001db0b:	jb     0x14001de2a
   14001db11:	mov    eax,edx
   14001db13:	sub    eax,edi
   14001db15:	cmp    eax,0x4
   14001db18:	jae    0x14001db29
   14001db1a:	mov    ebx,0xc000003e
   14001db1f:	mov    r14,QWORD PTR [rsp+0x70]
   14001db24:	jmp    0x14001de52
   14001db29:	mov    r13d,DWORD PTR [r8]
   14001db2c:	lea    rcx,[r8+0x4]
   14001db30:	cmp    rcx,r8
   14001db33:	jb     0x14001de23
   14001db39:	lea    r8d,[rdi+0x4]
   14001db3d:	cmp    r8d,edi
   14001db40:	jb     0x14001de23
   14001db46:	mov    eax,edx
   14001db48:	sub    eax,r8d
   14001db4b:	cmp    eax,r13d
   14001db4e:	jb     0x14001de45
   14001db54:	lea    r9,[rcx+r13*1]
   14001db58:	cmp    r9,rcx
   14001db5b:	jb     0x14001de23
   14001db61:	lea    edi,[r8+r13*1]
   14001db65:	cmp    edi,r8d
   14001db68:	jb     0x14001de23
   14001db6e:	mov    eax,edx
   14001db70:	sub    eax,edi
   14001db72:	cmp    eax,0x4
   14001db75:	jb     0x14001de45
   14001db7b:	mov    r12d,DWORD PTR [r9]
   14001db7e:	lea    rax,[r9+0x4]
   14001db82:	mov    QWORD PTR [rbp-0x50],rax
   14001db86:	cmp    rax,r9
   14001db89:	jb     0x14001de19
   14001db8f:	lea    ecx,[rdi+0x4]
   14001db92:	cmp    ecx,edi
   14001db94:	jb     0x14001de19
   14001db9a:	mov    eax,edx
   14001db9c:	sub    eax,ecx
   14001db9e:	cmp    eax,r12d
   14001dba1:	jb     0x14001de42
   14001dba7:	lea    edi,[r12+rcx*1]
   14001dbab:	cmp    edi,ecx
   14001dbad:	jb     0x14001de19
   14001dbb3:	cmp    edx,edi
   14001dbb5:	jne    0x14001de42
   14001dbbb:	lea    ecx,[r12+r13*1]
   14001dbbf:	add    ecx,r14d
   14001dbc2:	add    rcx,0xc
   14001dbc6:	mov    eax,edx
   14001dbc8:	cmp    rcx,rax
   14001dbcb:	jne    0x14001de42
   14001dbd1:	call   QWORD PTR [rip+0x1f5e9]        # 0x14003d1c0
   14001dbd7:	mov    rcx,rax
   14001dbda:	mov    edx,0x8
   14001dbdf:	lea    r8d,[rdx+0x28]
   14001dbe3:	call   QWORD PTR [rip+0x1f5ef]        # 0x14003d1d8
   14001dbe9:	mov    rdi,rax
   14001dbec:	test   rax,rax
   14001dbef:	jne    0x14001dbfe
   14001dbf1:	mov    ebx,0xc0000017
   14001dbf6:	xor    r12d,r12d
   14001dbf9:	jmp    0x14001dd82
   14001dbfe:	xor    edx,edx
   14001dc00:	mov    ebx,edx
   14001dc02:	mov    rax,QWORD PTR [rsp+0x68]
   14001dc07:	add    rax,0x4
   14001dc0b:	je     0x14001dc4f
   14001dc0d:	mov    DWORD PTR [rdi],r14d
   14001dc10:	call   QWORD PTR [rip+0x1f5aa]        # 0x14003d1c0
   14001dc16:	mov    rcx,rax
   14001dc19:	mov    r8,r14
   14001dc1c:	mov    edx,0x8
   14001dc21:	call   QWORD PTR [rip+0x1f5b1]        # 0x14003d1d8
   14001dc27:	test   rax,rax
   14001dc2a:	je     0x14001dcee
   14001dc30:	mov    QWORD PTR [rdi+0x8],rax
   14001dc34:	xor    eax,eax
   14001dc36:	mov    r8,r14
   14001dc39:	mov    rdx,QWORD PTR [rsp+0x68]
   14001dc3e:	add    rdx,0x4
   14001dc42:	mov    rcx,QWORD PTR [rdi+0x8]
   14001dc46:	call   0x1400156f2
   14001dc4b:	xor    edx,edx
   14001dc4d:	jmp    0x14001dc55
   14001dc4f:	mov    DWORD PTR [rdi],edx
   14001dc51:	mov    QWORD PTR [rdi+0x8],rdx
   14001dc55:	mov    r14,QWORD PTR [rbp+0xc8]
   14001dc5c:	add    r14,0x4
   14001dc60:	je     0x14001dc9b
   14001dc62:	mov    DWORD PTR [rdi+0x10],r13d
   14001dc66:	call   QWORD PTR [rip+0x1f554]        # 0x14003d1c0
   14001dc6c:	mov    rcx,rax
   14001dc6f:	mov    r8,r13
   14001dc72:	mov    edx,0x8
   14001dc77:	call   QWORD PTR [rip+0x1f55b]        # 0x14003d1d8
   14001dc7d:	test   rax,rax
   14001dc80:	je     0x14001dcee
   14001dc82:	mov    QWORD PTR [rdi+0x18],rax
   14001dc86:	xor    eax,eax
   14001dc88:	mov    ebx,eax
   14001dc8a:	mov    r8,r13
   14001dc8d:	mov    rdx,r14
   14001dc90:	mov    rcx,QWORD PTR [rdi+0x18]
   14001dc94:	call   0x1400156f2
   14001dc99:	jmp    0x14001dca2
   14001dc9b:	mov    DWORD PTR [rdi+0x10],edx
   14001dc9e:	mov    QWORD PTR [rdi+0x18],rdx
   14001dca2:	mov    r14,QWORD PTR [rbp-0x50]
   14001dca6:	test   r14,r14
   14001dca9:	je     0x14001dd74
   14001dcaf:	mov    DWORD PTR [rdi+0x20],r12d
   14001dcb3:	call   QWORD PTR [rip+0x1f507]        # 0x14003d1c0
   14001dcb9:	mov    rcx,rax
   14001dcbc:	mov    r8,r12
   14001dcbf:	mov    edx,0x8
   14001dcc4:	call   QWORD PTR [rip+0x1f50e]        # 0x14003d1d8
   14001dcca:	test   rax,rax
   14001dccd:	je     0x14001dcee
   14001dccf:	mov    QWORD PTR [rdi+0x28],rax
   14001dcd3:	xor    eax,eax
   14001dcd5:	mov    ebx,eax
   14001dcd7:	mov    r8,r12
   14001dcda:	mov    rdx,r14
   14001dcdd:	mov    rcx,QWORD PTR [rdi+0x28]
   14001dce1:	call   0x1400156f2
   14001dce6:	xor    r12d,r12d
   14001dce9:	jmp    0x14001dd7f
   14001dcee:	mov    ebx,0xc0000017
   14001dcf3:	mov    r14,QWORD PTR [rdi+0x8]
   14001dcf7:	test   r14,r14
   14001dcfa:	je     0x14001dd19
   14001dcfc:	call   QWORD PTR [rip+0x1f4be]        # 0x14003d1c0
   14001dd02:	mov    rcx,rax
   14001dd05:	mov    r8,r14
   14001dd08:	xor    edx,edx
   14001dd0a:	call   QWORD PTR [rip+0x1f4d0]        # 0x14003d1e0
   14001dd10:	xor    r12d,r12d
   14001dd13:	mov    QWORD PTR [rdi+0x8],r12
   14001dd17:	jmp    0x14001dd1c
   14001dd19:	xor    r12d,r12d
   14001dd1c:	mov    r14,QWORD PTR [rdi+0x18]
   14001dd20:	test   r14,r14
   14001dd23:	je     0x14001dd3d
   14001dd25:	call   QWORD PTR [rip+0x1f495]        # 0x14003d1c0
   14001dd2b:	mov    rcx,rax
   14001dd2e:	mov    r8,r14
   14001dd31:	xor    edx,edx
   14001dd33:	call   QWORD PTR [rip+0x1f4a7]        # 0x14003d1e0
   14001dd39:	mov    QWORD PTR [rdi+0x18],r12
   14001dd3d:	mov    r14,QWORD PTR [rdi+0x28]
   14001dd41:	test   r14,r14
   14001dd44:	je     0x14001dd5e
   14001dd46:	call   QWORD PTR [rip+0x1f474]        # 0x14003d1c0
   14001dd4c:	mov    rcx,rax
   14001dd4f:	mov    r8,r14
   14001dd52:	xor    edx,edx
   14001dd54:	call   QWORD PTR [rip+0x1f486]        # 0x14003d1e0
   14001dd5a:	mov    QWORD PTR [rdi+0x28],r12
   14001dd5e:	call   QWORD PTR [rip+0x1f45c]        # 0x14003d1c0
   14001dd64:	mov    rcx,rax
   14001dd67:	mov    r8,rdi
   14001dd6a:	xor    edx,edx
   14001dd6c:	call   QWORD PTR [rip+0x1f46e]        # 0x14003d1e0
   14001dd72:	jmp    0x14001dd82
   14001dd74:	xor    r12d,r12d
   14001dd77:	mov    DWORD PTR [rdi+0x20],r12d
   14001dd7b:	mov    QWORD PTR [rdi+0x28],r12
   14001dd7f:	mov    rsi,rdi
   14001dd82:	test   ebx,ebx
   14001dd84:	js     0x14001dd97
   14001dd86:	mov    r14,rsi
   14001dd89:	mov    QWORD PTR [rsp+0x70],rsi
   14001dd8e:	mov    r13,QWORD PTR [rbp-0x48]
   14001dd92:	jmp    0x14001de52
   14001dd97:	test   rsi,rsi
   14001dd9a:	je     0x14001de4a
   14001dda0:	mov    rdi,QWORD PTR [rsi+0x8]
   14001dda4:	test   rdi,rdi
   14001dda7:	je     0x14001ddc1
   14001dda9:	call   QWORD PTR [rip+0x1f411]        # 0x14003d1c0
   14001ddaf:	mov    rcx,rax
   14001ddb2:	mov    r8,rdi
   14001ddb5:	xor    edx,edx
   14001ddb7:	call   QWORD PTR [rip+0x1f423]        # 0x14003d1e0
   14001ddbd:	mov    QWORD PTR [rsi+0x8],r12
   14001ddc1:	mov    rdi,QWORD PTR [rsi+0x18]
   14001ddc5:	test   rdi,rdi
   14001ddc8:	je     0x14001dde2
   14001ddca:	call   QWORD PTR [rip+0x1f3f0]        # 0x14003d1c0
   14001ddd0:	mov    rcx,rax
   14001ddd3:	mov    r8,rdi
   14001ddd6:	xor    edx,edx
   14001ddd8:	call   QWORD PTR [rip+0x1f402]        # 0x14003d1e0
   14001ddde:	mov    QWORD PTR [rsi+0x18],r12
   14001dde2:	mov    rdi,QWORD PTR [rsi+0x28]
   14001dde6:	test   rdi,rdi
   14001dde9:	je     0x14001de03
   14001ddeb:	call   QWORD PTR [rip+0x1f3cf]        # 0x14003d1c0
   14001ddf1:	mov    rcx,rax
   14001ddf4:	mov    r8,rdi
   14001ddf7:	xor    edx,edx
   14001ddf9:	call   QWORD PTR [rip+0x1f3e1]        # 0x14003d1e0
   14001ddff:	mov    QWORD PTR [rsi+0x28],r12
   14001de03:	call   QWORD PTR [rip+0x1f3b7]        # 0x14003d1c0
   14001de09:	mov    rcx,rax
   14001de0c:	mov    r8,rsi
   14001de0f:	xor    edx,edx
   14001de11:	call   QWORD PTR [rip+0x1f3c9]        # 0x14003d1e0
   14001de17:	jmp    0x14001de4a
   14001de19:	mov    ebx,0xc0000095
   14001de1e:	xor    r12d,r12d
   14001de21:	jmp    0x14001de4a
   14001de23:	mov    ebx,0xc0000095
   14001de28:	jmp    0x14001de4a
   14001de2a:	mov    ebx,0xc0000095
   14001de2f:	mov    r14,QWORD PTR [rsp+0x70]
   14001de34:	jmp    0x14001de52
   14001de36:	mov    ebx,0xc0000095
   14001de3b:	mov    r14,QWORD PTR [rsp+0x70]
   14001de40:	jmp    0x14001de57
   14001de42:	xor    r12d,r12d
   14001de45:	mov    ebx,0xc000003e
   14001de4a:	mov    r14,QWORD PTR [rsp+0x70]
   14001de4f:	mov    r13,r14
   14001de52:	mov    rdi,QWORD PTR [rsp+0x68]
   14001de57:	or     ebx,0x10000000
   14001de5d:	jl     0x14001daaa
   14001de63:	mov    rdi,r12
   14001de66:	mov    QWORD PTR [rbp+0x298],r12
   14001de6d:	mov    QWORD PTR [rbp+0x5a0],r12
   14001de74:	mov    ebx,r12d
   14001de77:	mov    DWORD PTR [rbp-0x80],ebx
   14001de7a:	test   r14,r14
   14001de7d:	jne    0x14001de89
   14001de7f:	mov    ebx,0xc000000d
   14001de84:	jmp    0x14001e39d
   14001de89:	mov    rsi,QWORD PTR [r14+0x8]
   14001de8d:	mov    QWORD PTR [rbp-0x50],rsi
   14001de91:	test   rsi,rsi
   14001de94:	jne    0x14001dea0
   14001de96:	mov    ebx,0xc000000d
   14001de9b:	jmp    0x14001e39d
   14001dea0:	mov    eax,DWORD PTR [r14]
   14001dea3:	test   eax,eax
   14001dea5:	jne    0x14001deb1
   14001dea7:	mov    ebx,0xc000000d
   14001deac:	jmp    0x14001e39d
   14001deb1:	mov    r14,rax
   14001deb4:	test   eax,eax
   14001deb6:	je     0x14001e373
   14001debc:	add    r14,0xfffffffffffffff8
   14001dec0:	mov    QWORD PTR [rbp+0xc8],r14
   14001dec7:	mov    rcx,r14
   14001deca:	call   0x14000f134
   14001decf:	mov    r12,rax
   14001ded2:	mov    QWORD PTR [rbp+0xb8],rax
   14001ded9:	test   rax,rax
   14001dedc:	je     0x14001e369
   14001dee2:	xor    dl,dl
   14001dee4:	mov    r10,rsi
   14001dee7:	mov    r9,rax
   14001deea:	mov    rdi,r14
   14001deed:	xor    ecx,ecx
   14001deef:	mov    DWORD PTR [rbp-0x10],ecx
   14001def2:	mov    r13d,ecx
   14001def5:	mov    r8d,ecx
   14001def8:	and    edi,0x7
   14001defb:	je     0x14001dfc5
   14001df01:	or     esi,0xffffffff
   14001df04:	mov    DWORD PTR [rbp-0x38],esi
   14001df07:	mov    esi,ecx
   14001df09:	mov    DWORD PTR [rbp+0x138],ecx
   14001df0f:	test   edi,edi
   14001df11:	jle    0x14001df4a
   14001df13:	lea    r11d,[rcx+0x38]
   14001df17:	movzx  eax,BYTE PTR [r10]
   14001df1b:	cmp    r8d,0x4
   14001df1f:	jge    0x14001df2c
   14001df21:	lea    ecx,[r11-0x20]
   14001df25:	shl    eax,cl
   14001df27:	or     r13d,eax
   14001df2a:	jmp    0x14001df33
   14001df2c:	mov    ecx,r11d
   14001df2f:	shl    eax,cl
   14001df31:	or     esi,eax
   14001df33:	inc    r10
   14001df36:	inc    r8d
   14001df39:	sub    r11d,0x8
   14001df3d:	cmp    r8d,edi
   14001df40:	jl     0x14001df17
   14001df42:	mov    DWORD PTR [rbp+0x138],esi
   14001df48:	xor    ecx,ecx
   14001df4a:	mov    r8d,r13d
   14001df4d:	xor    r8d,0xdc90ac75
   14001df54:	mov    DWORD PTR [rbp-0x10],r8d
   14001df58:	xor    esi,0xe04bfdaa
   14001df5e:	mov    DWORD PTR [rbp-0x38],esi
   14001df61:	mov    eax,ecx
   14001df63:	test   edi,edi
   14001df65:	jle    0x14001df8b
   14001df67:	cmp    eax,0x4
   14001df6a:	jge    0x14001df75
   14001df6c:	rol    r8d,0x8
   14001df70:	mov    BYTE PTR [r9],r8b
   14001df73:	jmp    0x14001df7b
   14001df75:	rol    esi,0x8
   14001df78:	mov    BYTE PTR [r9],sil
   14001df7b:	inc    r9
   14001df7e:	inc    eax
   14001df80:	cmp    eax,edi
   14001df82:	jl     0x14001df67
   14001df84:	mov    r8d,DWORD PTR [rbp-0x10]
   14001df88:	mov    esi,DWORD PTR [rbp-0x38]
   14001df8b:	lea    eax,[rdi-0x4]
   14001df8e:	test   eax,eax
   14001df90:	jle    0x14001dfa7
   14001df92:	mov    ecx,0x4
   14001df97:	sub    ecx,eax
   14001df99:	shl    ecx,0x3
   14001df9c:	shr    esi,cl
   14001df9e:	shl    esi,cl
   14001dfa0:	mov    DWORD PTR [rbp-0x38],esi
   14001dfa3:	xor    ecx,ecx
   14001dfa5:	jmp    0x14001dfca
   14001dfa7:	mov    esi,ecx
   14001dfa9:	mov    DWORD PTR [rbp-0x38],ecx
   14001dfac:	test   eax,eax
   14001dfae:	jns    0x14001dfca
   14001dfb0:	neg    eax
   14001dfb2:	shl    eax,0x3
   14001dfb5:	mov    ecx,eax
   14001dfb7:	shr    r8d,cl
   14001dfba:	shl    r8d,cl
   14001dfbd:	mov    DWORD PTR [rbp-0x10],r8d
   14001dfc1:	xor    ecx,ecx
   14001dfc3:	jmp    0x14001dfca
   14001dfc5:	mov    esi,ecx
   14001dfc7:	mov    DWORD PTR [rbp-0x38],ecx
   14001dfca:	mov    rax,r14
   14001dfcd:	shr    rax,0x3
   14001dfd1:	test   rax,rax
   14001dfd4:	je     0x14001e322
   14001dfda:	lea    r12,[r9+0x7]
   14001dfde:	lea    r14,[r10+0x2]
   14001dfe2:	mov    rdx,rax
   14001dfe5:	mov    ebx,DWORD PTR [rbp+0x138]
   14001dfeb:	movzx  r11d,BYTE PTR [r14-0x2]
   14001dff0:	shl    r11d,0x8
   14001dff4:	movzx  eax,BYTE PTR [r14-0x1]
   14001dff9:	or     r11d,eax
   14001dffc:	shl    r11d,0x8
   14001e000:	movzx  eax,BYTE PTR [r14]
   14001e004:	or     r11d,eax
   14001e007:	shl    r11d,0x8
   14001e00b:	movzx  eax,BYTE PTR [r14+0x1]
   14001e010:	or     r11d,eax
   14001e013:	movzx  r10d,BYTE PTR [r14+0x2]
   14001e018:	shl    r10d,0x8
   14001e01c:	movzx  eax,BYTE PTR [r14+0x3]
   14001e021:	or     r10d,eax
   14001e024:	shl    r10d,0x8
   14001e028:	movzx  eax,BYTE PTR [r14+0x4]
   14001e02d:	or     r10d,eax
   14001e030:	shl    r10d,0x8
   14001e034:	movzx  eax,BYTE PTR [r14+0x5]
   14001e039:	or     r10d,eax
   14001e03c:	xor    r8d,r11d
   14001e03f:	xor    esi,r10d
   14001e042:	lea    r14,[r14+0x8]
   14001e046:	xor    esi,r8d
   14001e049:	xor    esi,0x58830298
   14001e04f:	lea    eax,[rsi+0x7b1e05f8]
   14001e055:	rol    eax,0x5
   14001e058:	mov    ecx,esi
   14001e05a:	rol    ecx,0xa
   14001e05d:	imul   eax,eax,0xf890
   14001e063:	add    ecx,eax
   14001e065:	xor    r8d,ecx
   14001e068:	lea    eax,[r8-0x239d0770]
   14001e06f:	ror    eax,0x9
   14001e072:	mov    ecx,r8d
   14001e075:	rol    ecx,0x2
   14001e078:	imul   eax,eax,0x84e1
   14001e07e:	sub    eax,ecx
   14001e080:	xor    esi,eax
   14001e082:	lea    eax,[rsi-0xf890]
   14001e088:	imul   ecx,eax,0xfa08
   14001e08e:	mov    eax,esi
   14001e090:	shr    eax,0xd
   14001e093:	sub    ecx,eax
   14001e095:	xor    r8d,ecx
   14001e098:	mov    eax,r8d
   14001e09b:	xor    eax,0x84e1
   14001e0a0:	rol    eax,0x6
   14001e0a3:	mov    ecx,r8d
   14001e0a6:	rol    ecx,0x2
   14001e0a9:	imul   eax,eax,0xdc62
   14001e0af:	sub    eax,ecx
   14001e0b1:	xor    esi,eax
   14001e0b3:	mov    ecx,esi
   14001e0b5:	xor    ecx,0x84e1fa08
   14001e0bb:	mov    eax,0xdc62f890
   14001e0c0:	sub    eax,ecx
   14001e0c2:	xor    r8d,eax
   14001e0c5:	mov    edi,r8d
   14001e0c8:	ror    edi,0x6
   14001e0cb:	mov    eax,r8d
   14001e0ce:	xor    eax,0xf890
   14001e0d3:	imul   ecx,eax,0x84e1
   14001e0d9:	xor    edi,ecx
   14001e0db:	xor    esi,edi
   14001e0dd:	lea    eax,[rsi-0x239d0770]
   14001e0e3:	ror    eax,0xf
   14001e0e6:	mov    ecx,esi
   14001e0e8:	rol    ecx,0x2
   14001e0eb:	imul   eax,eax,0xfa08
   14001e0f1:	add    ecx,eax
   14001e0f3:	xor    r8d,ecx
   14001e0f6:	lea    eax,[r8+0x7b1e05f8]
   14001e0fd:	ror    eax,0xe
   14001e100:	mov    ecx,r8d
   14001e103:	rol    ecx,0x8
   14001e106:	imul   eax,eax,0xdc62
   14001e10c:	sub    eax,ecx
   14001e10e:	xor    esi,eax
   14001e110:	mov    eax,esi
   14001e112:	xor    eax,0x84e1fa08
   14001e117:	ror    eax,0xc
   14001e11a:	mov    ecx,esi
   14001e11c:	ror    ecx,0xa
   14001e11f:	imul   eax,eax,0xf890
   14001e125:	xor    ecx,eax
   14001e127:	xor    r8d,ecx
   14001e12a:	mov    eax,r8d
   14001e12d:	xor    eax,0xdc62
   14001e132:	imul   ecx,eax,0x84e1
   14001e138:	mov    eax,r8d
   14001e13b:	shr    eax,0xa
   14001e13e:	xor    ecx,eax
   14001e140:	xor    esi,ecx
   14001e142:	mov    eax,esi
   14001e144:	not    eax
   14001e146:	ror    eax,0x5
   14001e149:	imul   eax,eax,0xdc62
   14001e14f:	sub    eax,0x28c168f0
   14001e154:	xor    r8d,eax
   14001e157:	mov    r9d,esi
   14001e15a:	xor    r9d,r8d
   14001e15d:	xor    r9d,0x58830298
   14001e164:	lea    eax,[r9-0x7b1e05f8]
   14001e16b:	rol    eax,0xb
   14001e16e:	mov    ecx,r9d
   14001e171:	rol    ecx,0xd
   14001e174:	imul   eax,eax,0xdc62
   14001e17a:	add    ecx,eax
   14001e17c:	xor    esi,ecx
   14001e17e:	mov    eax,esi
   14001e180:	xor    eax,0x84e1fa08
   14001e185:	ror    eax,0x5
   14001e188:	mov    ecx,esi
   14001e18a:	ror    ecx,0xc
   14001e18d:	imul   eax,eax,0xf890
   14001e193:	xor    ecx,eax
   14001e195:	xor    r9d,ecx
   14001e198:	lea    eax,[r9-0xf890]
   14001e19f:	imul   ecx,eax,0x84e1
   14001e1a5:	mov    eax,r9d
   14001e1a8:	shr    eax,0x9
   14001e1ab:	sub    ecx,eax
   14001e1ad:	xor    esi,ecx
   14001e1af:	lea    eax,[rsi+0x239c0d68]
   14001e1b5:	xor    r9d,eax
   14001e1b8:	lea    r8d,[r9-0xdc62]
   14001e1bf:	xor    r8d,esi
   14001e1c2:	xor    r8d,0x84e1fa08
   14001e1c9:	lea    eax,[r8+0x7b1e05f8]
   14001e1d0:	ror    eax,0x4
   14001e1d3:	mov    ecx,r8d
   14001e1d6:	ror    ecx,0xb
   14001e1d9:	imul   eax,eax,0xf890
   14001e1df:	xor    ecx,eax
   14001e1e1:	xor    r9d,ecx
   14001e1e4:	mov    eax,0xdc62f890
   14001e1e9:	sub    eax,r9d
   14001e1ec:	ror    eax,0x7
   14001e1ef:	mov    ecx,r9d
   14001e1f2:	ror    ecx,0x3
   14001e1f5:	imul   eax,eax,0x84e1
   14001e1fb:	add    ecx,eax
   14001e1fd:	xor    r8d,ecx
   14001e200:	mov    eax,r8d
   14001e203:	xor    eax,0xdc62f890
   14001e208:	rol    eax,1
   14001e20a:	mov    ecx,r8d
   14001e20d:	ror    ecx,0x8
   14001e210:	imul   eax,eax,0xfa08
   14001e216:	add    ecx,eax
   14001e218:	xor    r9d,ecx
   14001e21b:	mov    edi,r9d
   14001e21e:	ror    edi,1
   14001e220:	mov    eax,r9d
   14001e223:	xor    eax,0xf890
   14001e228:	imul   ecx,eax,0xdc62
   14001e22e:	add    edi,ecx
   14001e230:	xor    r8d,edi
   14001e233:	mov    eax,r8d
   14001e236:	xor    eax,0xfa08
   14001e23b:	rol    eax,1
   14001e23d:	mov    ecx,r8d
   14001e240:	rol    ecx,0x8
   14001e243:	imul   eax,eax,0xf890
   14001e249:	xor    ecx,eax
   14001e24b:	xor    r9d,ecx
   14001e24e:	mov    ecx,r9d
   14001e251:	xor    ecx,0xdc62f890
   14001e257:	mov    eax,0x84e1fa08
   14001e25c:	sub    eax,ecx
   14001e25e:	xor    r8d,eax
   14001e261:	lea    eax,[r8+0x239d0770]
   14001e268:	ror    eax,0x3
   14001e26b:	mov    ecx,r8d
   14001e26e:	ror    ecx,0x2
   14001e271:	imul   eax,eax,0xfa08
   14001e277:	add    ecx,eax
   14001e279:	xor    ecx,r13d
   14001e27c:	xor    r9d,ecx
   14001e27f:	mov    DWORD PTR [rbp-0x10],r9d
   14001e283:	xor    r8d,ebx
   14001e286:	mov    DWORD PTR [rbp-0x38],r8d
   14001e28a:	mov    BYTE PTR [r12-0x4],r9b
   14001e28f:	ror    DWORD PTR [rbp-0x10],0x8
   14001e293:	movzx  eax,BYTE PTR [rbp-0x38]
   14001e297:	mov    BYTE PTR [r12],al
   14001e29b:	ror    DWORD PTR [rbp-0x38],0x8
   14001e29f:	movzx  eax,BYTE PTR [rbp-0x10]
   14001e2a3:	mov    BYTE PTR [r12-0x5],al
   14001e2a8:	ror    DWORD PTR [rbp-0x10],0x8
   14001e2ac:	movzx  eax,BYTE PTR [rbp-0x38]
   14001e2b0:	mov    BYTE PTR [r12-0x1],al
   14001e2b5:	ror    DWORD PTR [rbp-0x38],0x8
   14001e2b9:	movzx  eax,BYTE PTR [rbp-0x10]
   14001e2bd:	mov    BYTE PTR [r12-0x6],al
   14001e2c2:	ror    DWORD PTR [rbp-0x10],0x8
   14001e2c6:	movzx  eax,BYTE PTR [rbp-0x38]
   14001e2ca:	mov    BYTE PTR [r12-0x2],al
   14001e2cf:	ror    DWORD PTR [rbp-0x38],0x8
   14001e2d3:	movzx  eax,BYTE PTR [rbp-0x10]
   14001e2d7:	mov    BYTE PTR [r12-0x7],al
   14001e2dc:	movzx  eax,BYTE PTR [rbp-0x38]
   14001e2e0:	mov    BYTE PTR [r12-0x3],al
   14001e2e5:	mov    r8d,DWORD PTR [rbp-0x10]
   14001e2e9:	ror    r8d,0x8
   14001e2ed:	mov    DWORD PTR [rbp-0x10],r8d
   14001e2f1:	mov    esi,DWORD PTR [rbp-0x38]
   14001e2f4:	ror    esi,0x8
   14001e2f7:	mov    DWORD PTR [rbp-0x38],esi
   14001e2fa:	mov    r13d,r11d
   14001e2fd:	mov    ebx,r10d
   14001e300:	lea    r12,[r12+0x8]
   14001e305:	sub    rdx,0x1
   14001e309:	jne    0x14001dfeb
   14001e30f:	mov    ebx,DWORD PTR [rbp-0x80]
   14001e312:	mov    r14,QWORD PTR [rbp+0xc8]
   14001e319:	mov    r12,QWORD PTR [rbp+0xb8]
   14001e320:	xor    ecx,ecx
   14001e322:	mov    rax,rcx
   14001e325:	test   r14,r14
   14001e328:	je     0x14001e336
   14001e32a:	xor    dl,BYTE PTR [rax+r12*1]
   14001e32e:	inc    rax
   14001e331:	cmp    rax,r14
   14001e334:	jb     0x14001e32a
   14001e336:	movzx  eax,dl
   14001e339:	mov    rcx,QWORD PTR [rbp-0x50]
   14001e33d:	cmp    rax,QWORD PTR [r14+rcx*1]
   14001e341:	jne    0x14001e35d
   14001e343:	mov    QWORD PTR [rbp+0x5a0],r14
   14001e34a:	mov    r13,r12
   14001e34d:	mov    QWORD PTR [rbp-0x48],r12
   14001e351:	xor    r12d,r12d
   14001e354:	mov    DWORD PTR [rbp+0xb0],r14d
   14001e35b:	jmp    0x14001e391
   14001e35d:	mov    rcx,r12
   14001e360:	call   0x1400155d8
   14001e365:	mov    r13,QWORD PTR [rbp-0x48]
   14001e369:	xor    r12d,r12d
   14001e36c:	mov    rdi,QWORD PTR [rbp+0x298]
   14001e373:	mov    ebx,0xc0000001
   14001e378:	test   rdi,rdi
   14001e37b:	je     0x14001e398
   14001e37d:	call   QWORD PTR [rip+0x1ee3d]        # 0x14003d1c0
   14001e383:	mov    rcx,rax
   14001e386:	mov    r8,rdi
   14001e389:	xor    edx,edx
   14001e38b:	call   QWORD PTR [rip+0x1ee4f]        # 0x14003d1e0
   14001e391:	mov    QWORD PTR [rbp+0x298],r12
   14001e398:	mov    r14,QWORD PTR [rsp+0x70]
   14001e39d:	or     ebx,0x10000000
   14001e3a3:	jl     0x14001e62c
   14001e3a9:	mov    DWORD PTR [rbp+0xf0],r12d
   14001e3b0:	mov    QWORD PTR [rbp+0x2a8],r13
   14001e3b7:	cmp    DWORD PTR [rbp+0xb0],0x4
   14001e3be:	jae    0x14001e3ca
   14001e3c0:	mov    ebx,0xc000003e
   14001e3c5:	jmp    0x14001e628
   14001e3ca:	mov    r9d,DWORD PTR [r13+0x0]
   14001e3ce:	mov    DWORD PTR [rbp-0x70],r9d
   14001e3d2:	lea    r8,[rbp+0x2a8]
   14001e3d9:	mov    edx,0x4
   14001e3de:	mov    rcx,r13
   14001e3e1:	call   0x14000baf0
   14001e3e6:	mov    ebx,eax
   14001e3e8:	test   eax,eax
   14001e3ea:	js     0x14001e628
   14001e3f0:	lea    r8,[rbp+0xf0]
   14001e3f7:	xor    ecx,ecx
   14001e3f9:	call   0x14000bad0
   14001e3fe:	mov    ebx,eax
   14001e400:	test   eax,eax
   14001e402:	js     0x14001e628
   14001e408:	mov    eax,DWORD PTR [rbp+0xb0]
   14001e40e:	mov    edi,DWORD PTR [rbp+0xf0]
   14001e414:	sub    eax,edi
   14001e416:	cmp    eax,edx
   14001e418:	jae    0x14001e424
   14001e41a:	mov    ebx,0xc000003e
   14001e41f:	jmp    0x14001e628
   14001e424:	mov    rcx,QWORD PTR [rbp+0x2a8]
   14001e42b:	mov    r14d,DWORD PTR [rcx]
   14001e42e:	lea    r8,[rbp+0x2a8]
   14001e435:	call   0x14000baf0
   14001e43a:	mov    ebx,eax
   14001e43c:	test   eax,eax
   14001e43e:	js     0x14001e623
   14001e444:	lea    r8,[rbp+0xf0]
   14001e44b:	mov    ecx,edi
   14001e44d:	call   0x14000bad0
   14001e452:	mov    ebx,eax
   14001e454:	test   eax,eax
   14001e456:	js     0x14001e623
   14001e45c:	mov    eax,DWORD PTR [rbp+0xb0]
   14001e462:	mov    ecx,DWORD PTR [rbp+0xf0]
   14001e468:	sub    eax,ecx
   14001e46a:	cmp    eax,r14d
   14001e46d:	jb     0x14001e500
   14001e473:	lea    r8,[rbp+0xf0]
   14001e47a:	mov    edx,r14d
   14001e47d:	call   0x14000bad0
   14001e482:	mov    ebx,eax
   14001e484:	test   eax,eax
   14001e486:	js     0x14001e623
   14001e48c:	mov    edx,DWORD PTR [rbp+0xb0]
   14001e492:	lea    rcx,[rdx+r13*1]
   14001e496:	mov    rdi,QWORD PTR [rbp+0x2a8]
   14001e49d:	lea    rax,[rdi+r14*1]
   14001e4a1:	cmp    rcx,rax
   14001e4a4:	jb     0x14001e500
   14001e4a6:	mov    rax,r13
   14001e4a9:	sub    rax,rdi
   14001e4ac:	sub    rax,r14
   14001e4af:	add    rax,rdx
   14001e4b2:	cmp    rax,0x8
   14001e4b6:	jae    0x14001e500
   14001e4b8:	xor    eax,eax
   14001e4ba:	mov    ebx,eax
   14001e4bc:	mov    r13d,eax
   14001e4bf:	test   rdi,rdi
   14001e4c2:	je     0x14001e59d
   14001e4c8:	mov    r9,rdi
   14001e4cb:	lea    r8,[rbp+0x5b0]
   14001e4d2:	mov    edx,r14d
   14001e4d5:	mov    rcx,rdi
   14001e4d8:	call   0x14000baf0
   14001e4dd:	mov    ebx,eax
   14001e4df:	test   eax,eax
   14001e4e1:	js     0x14001e597
   14001e4e7:	mov    r11,QWORD PTR [rbp+0x5b0]
   14001e4ee:	cmp    rdi,r11
   14001e4f1:	jae    0x14001e582
   14001e4f7:	mov    r10d,DWORD PTR [rbp+0x2e0]
   14001e4fe:	jmp    0x14001e50a
   14001e500:	mov    ebx,0xc000003e
   14001e505:	jmp    0x14001e623
   14001e50a:	lea    r8,[rbp+0x510]
   14001e511:	mov    edx,0x4
   14001e516:	mov    rcx,r9
   14001e519:	call   0x14000baf0
   14001e51e:	mov    ebx,eax
   14001e520:	test   eax,eax
   14001e522:	js     0x14001e597
   14001e524:	cmp    QWORD PTR [rbp+0x510],r11
   14001e52b:	ja     0x14001e58d
   14001e52d:	lea    r8,[rbp+0x438]
   14001e534:	mov    edx,DWORD PTR [r9]
   14001e537:	mov    ecx,0x4
   14001e53c:	call   0x14000bad0
   14001e541:	mov    ebx,eax
   14001e543:	test   eax,eax
   14001e545:	cmovns r10d,DWORD PTR [rbp+0x438]
   14001e54d:	mov    DWORD PTR [rbp+0x2e0],r10d
   14001e554:	js     0x14001e597
   14001e556:	mov    edx,r10d
   14001e559:	lea    r8,[rbp+0x5d0]
   14001e560:	mov    rcx,r9
   14001e563:	call   0x14000baf0
   14001e568:	mov    ebx,eax
   14001e56a:	test   eax,eax
   14001e56c:	js     0x14001e597
   14001e56e:	mov    r9,QWORD PTR [rbp+0x5d0]
   14001e575:	cmp    r9,r11
   14001e578:	ja     0x14001e58d
   14001e57a:	inc    r13d
   14001e57d:	cmp    r9,r11
   14001e580:	jb     0x14001e50a
   14001e582:	cmp    r9,r11
   14001e585:	jne    0x14001e58d
   14001e587:	mov    r9d,DWORD PTR [rbp-0x70]
   14001e58b:	jmp    0x14001e59d
   14001e58d:	mov    ebx,0xc000000d
   14001e592:	jmp    0x14001e61c
   14001e597:	mov    r9d,DWORD PTR [rbp-0x70]
   14001e59b:	jmp    0x14001e5fc
   14001e59d:	test   r14d,r14d
   14001e5a0:	je     0x14001e5d0
   14001e5a2:	call   QWORD PTR [rip+0x1ec18]        # 0x14003d1c0
   14001e5a8:	mov    rcx,rax
   14001e5ab:	mov    r8,r14
   14001e5ae:	mov    edx,0x8
   14001e5b3:	call   QWORD PTR [rip+0x1ec1f]        # 0x14003d1d8
   14001e5b9:	mov    r12,rax
   14001e5bc:	mov    r9d,DWORD PTR [rbp-0x70]
   14001e5c0:	test   rax,rax
   14001e5c3:	jne    0x14001e5cc
   14001e5c5:	mov    ebx,0xc0000017
   14001e5ca:	jmp    0x14001e5fc
   14001e5cc:	xor    eax,eax
   14001e5ce:	mov    ebx,eax
   14001e5d0:	test   rdi,rdi
   14001e5d3:	je     0x14001e5e7
   14001e5d5:	mov    r8,r14
   14001e5d8:	mov    rdx,rdi
   14001e5db:	mov    rcx,r12
   14001e5de:	call   0x1400156f2
   14001e5e3:	mov    r9d,DWORD PTR [rbp-0x70]
   14001e5e7:	mov    QWORD PTR [rbp+0x1a0],r12
   14001e5ee:	mov    DWORD PTR [rbp+0x19c],r14d
   14001e5f5:	mov    DWORD PTR [rbp+0x198],r13d
   14001e5fc:	test   ebx,ebx
   14001e5fe:	js     0x14001e61c
   14001e600:	mov    r14,QWORD PTR [rsp+0x70]
   14001e605:	mov    r13,QWORD PTR [rbp-0x48]
   14001e609:	xor    r12d,r12d
   14001e60c:	cmp    r9d,DWORD PTR [rbp+0x198]
   14001e613:	je     0x14001e628
   14001e615:	mov    ebx,0xc000003e
   14001e61a:	jmp    0x14001e628
   14001e61c:	xor    r12d,r12d
   14001e61f:	mov    r13,QWORD PTR [rbp-0x48]
   14001e623:	mov    r14,QWORD PTR [rsp+0x70]
   14001e628:	bts    ebx,0x1c
   14001e62c:	mov    rdi,QWORD PTR [rsp+0x68]
   14001e631:	mov    rsi,QWORD PTR [rbp-0x68]
   14001e635:	jmp    0x14001e643
   14001e637:	mov    ebx,0x80070057
   14001e63c:	mov    rsi,QWORD PTR [rbp-0x68]
   14001e640:	xor    r12d,r12d
   14001e643:	test   rsi,rsi
   14001e646:	je     0x14001e65c
   14001e648:	call   QWORD PTR [rip+0x1eb72]        # 0x14003d1c0
   14001e64e:	mov    rcx,rax
   14001e651:	mov    r8,rsi
   14001e654:	xor    edx,edx
   14001e656:	call   QWORD PTR [rip+0x1eb84]        # 0x14003d1e0
   14001e65c:	mov    rsi,QWORD PTR [rbp+0x2b8]
   14001e663:	test   rsi,rsi
   14001e666:	je     0x14001e6ef
   14001e66c:	mov    rdi,QWORD PTR [rsi+0x8]
   14001e670:	test   rdi,rdi
   14001e673:	je     0x14001e68d
   14001e675:	call   QWORD PTR [rip+0x1eb45]        # 0x14003d1c0
   14001e67b:	mov    rcx,rax
   14001e67e:	mov    r8,rdi
   14001e681:	xor    edx,edx
   14001e683:	call   QWORD PTR [rip+0x1eb57]        # 0x14003d1e0
   14001e689:	mov    QWORD PTR [rsi+0x8],r12
   14001e68d:	mov    rdi,QWORD PTR [rsi+0x18]
   14001e691:	test   rdi,rdi
   14001e694:	je     0x14001e6ae
   14001e696:	call   QWORD PTR [rip+0x1eb24]        # 0x14003d1c0
   14001e69c:	mov    rcx,rax
   14001e69f:	mov    r8,rdi
   14001e6a2:	xor    edx,edx
   14001e6a4:	call   QWORD PTR [rip+0x1eb36]        # 0x14003d1e0
   14001e6aa:	mov    QWORD PTR [rsi+0x18],r12
   14001e6ae:	mov    rdi,QWORD PTR [rsi+0x28]
   14001e6b2:	test   rdi,rdi
   14001e6b5:	je     0x14001e6cf
   14001e6b7:	call   QWORD PTR [rip+0x1eb03]        # 0x14003d1c0
   14001e6bd:	mov    rcx,rax
   14001e6c0:	mov    r8,rdi
   14001e6c3:	xor    edx,edx
   14001e6c5:	call   QWORD PTR [rip+0x1eb15]        # 0x14003d1e0
   14001e6cb:	mov    QWORD PTR [rsi+0x28],r12
   14001e6cf:	call   QWORD PTR [rip+0x1eaeb]        # 0x14003d1c0
   14001e6d5:	mov    rcx,rax
   14001e6d8:	mov    r8,rsi
   14001e6db:	xor    edx,edx
   14001e6dd:	call   QWORD PTR [rip+0x1eafd]        # 0x14003d1e0
   14001e6e3:	mov    QWORD PTR [rbp+0x2b8],r12
   14001e6ea:	mov    rdi,QWORD PTR [rsp+0x68]
   14001e6ef:	mov    rsi,QWORD PTR [rbp-0x40]
   14001e6f3:	test   rsi,rsi
   14001e6f6:	je     0x14001e70c
   14001e6f8:	call   QWORD PTR [rip+0x1eac2]        # 0x14003d1c0
   14001e6fe:	mov    rcx,rax
   14001e701:	mov    r8,rsi
   14001e704:	xor    edx,edx
   14001e706:	call   QWORD PTR [rip+0x1ead4]        # 0x14003d1e0
   14001e70c:	test   rdi,rdi
   14001e70f:	je     0x14001e725
   14001e711:	call   QWORD PTR [rip+0x1eaa9]        # 0x14003d1c0
   14001e717:	mov    rcx,rax
   14001e71a:	mov    r8,rdi
   14001e71d:	xor    edx,edx
   14001e71f:	call   QWORD PTR [rip+0x1eabb]        # 0x14003d1e0
   14001e725:	test   r14,r14
   14001e728:	je     0x14001e7a1
   14001e72a:	mov    rdi,QWORD PTR [r14+0x8]
   14001e72e:	test   rdi,rdi
   14001e731:	je     0x14001e74b
   14001e733:	call   QWORD PTR [rip+0x1ea87]        # 0x14003d1c0
   14001e739:	mov    rcx,rax
   14001e73c:	mov    r8,rdi
   14001e73f:	xor    edx,edx
   14001e741:	call   QWORD PTR [rip+0x1ea99]        # 0x14003d1e0
   14001e747:	mov    QWORD PTR [r14+0x8],r12
   14001e74b:	mov    rdi,QWORD PTR [r14+0x18]
   14001e74f:	test   rdi,rdi
   14001e752:	je     0x14001e76c
   14001e754:	call   QWORD PTR [rip+0x1ea66]        # 0x14003d1c0
   14001e75a:	mov    rcx,rax
   14001e75d:	mov    r8,rdi
   14001e760:	xor    edx,edx
   14001e762:	call   QWORD PTR [rip+0x1ea78]        # 0x14003d1e0
   14001e768:	mov    QWORD PTR [r14+0x18],r12
   14001e76c:	mov    rdi,QWORD PTR [r14+0x28]
   14001e770:	test   rdi,rdi
   14001e773:	je     0x14001e78d
   14001e775:	call   QWORD PTR [rip+0x1ea45]        # 0x14003d1c0
   14001e77b:	mov    rcx,rax
   14001e77e:	mov    r8,rdi
   14001e781:	xor    edx,edx
   14001e783:	call   QWORD PTR [rip+0x1ea57]        # 0x14003d1e0
   14001e789:	mov    QWORD PTR [r14+0x28],r12
   14001e78d:	call   QWORD PTR [rip+0x1ea2d]        # 0x14003d1c0
   14001e793:	mov    rcx,rax
   14001e796:	mov    r8,r14
   14001e799:	xor    edx,edx
   14001e79b:	call   QWORD PTR [rip+0x1ea3f]        # 0x14003d1e0
   14001e7a1:	test   r13,r13
   14001e7a4:	je     0x14001e7ba
   14001e7a6:	call   QWORD PTR [rip+0x1ea14]        # 0x14003d1c0
   14001e7ac:	mov    rcx,rax
   14001e7af:	mov    r8,r13
   14001e7b2:	xor    edx,edx
   14001e7b4:	call   QWORD PTR [rip+0x1ea26]        # 0x14003d1e0
   14001e7ba:	test   ebx,ebx
   14001e7bc:	js     0x14001e8f3
   14001e7c2:	mov    r9d,DWORD PTR [rbp+0x198]
   14001e7c9:	cmp    r9d,0x1
   14001e7cd:	jb     0x14001e8f3
   14001e7d3:	mov    rdi,QWORD PTR [rbp+0x1a0]
   14001e7da:	test   rdi,rdi
   14001e7dd:	je     0x14001e8f3
   14001e7e3:	test   r9d,r9d
   14001e7e6:	je     0x14001e8f3
   14001e7ec:	mov    QWORD PTR [rbp+0x3f0],rdi
   14001e7f3:	mov    r10d,DWORD PTR [rdi]
   14001e7f6:	lea    r8,[rbp+0x3f0]
   14001e7fd:	mov    edx,0x4
   14001e802:	mov    rcx,rdi
   14001e805:	call   0x14000baf0
   14001e80a:	test   eax,eax
   14001e80c:	js     0x14001e8f3
   14001e812:	mov    DWORD PTR [rbp+0x5a8],r10d
   14001e819:	mov    rax,QWORD PTR [rbp+0x3f0]
   14001e820:	test   r10d,r10d
   14001e823:	cmove  rax,r12
   14001e827:	mov    QWORD PTR [rbp+0x3f0],rax
   14001e82e:	mov    QWORD PTR [rbp+0x720],rax
   14001e835:	cmp    r10d,edx
   14001e838:	jne    0x14001e8f3
   14001e83e:	mov    eax,DWORD PTR [rax]
   14001e840:	mov    DWORD PTR [rbp+0x160],eax
   14001e846:	test   eax,eax
   14001e848:	js     0x14001e8f3
   14001e84e:	cmp    r9d,0x1
   14001e852:	jbe    0x14001e8f3
   14001e858:	mov    QWORD PTR [rbp+0x128],rdi
   14001e85f:	mov    r9d,r12d
   14001e862:	lea    r8,[rbp+0x128]
   14001e869:	mov    edx,0x4
   14001e86e:	mov    rcx,rdi
   14001e871:	call   0x14000baf0
   14001e876:	test   eax,eax
   14001e878:	js     0x14001e8f3
   14001e87a:	mov    edx,DWORD PTR [rdi]
   14001e87c:	lea    r8,[rbp+0x128]
   14001e883:	mov    rcx,QWORD PTR [rbp+0x128]
   14001e88a:	call   0x14000baf0
   14001e88f:	test   eax,eax
   14001e891:	js     0x14001e8f3
   14001e893:	inc    r9d
   14001e896:	cmp    r9d,0x1
   14001e89a:	jae    0x14001e8a5
   14001e89c:	mov    rdi,QWORD PTR [rbp+0x128]
   14001e8a3:	jmp    0x14001e862
   14001e8a5:	mov    rcx,QWORD PTR [rbp+0x128]
   14001e8ac:	mov    edi,DWORD PTR [rcx]
   14001e8ae:	lea    r8,[rbp+0x128]
   14001e8b5:	mov    edx,0x4
   14001e8ba:	call   0x14000baf0
   14001e8bf:	test   eax,eax
   14001e8c1:	js     0x14001e8f3
   14001e8c3:	mov    DWORD PTR [rbp+0x628],edi
   14001e8c9:	mov    rax,QWORD PTR [rbp+0x128]
   14001e8d0:	test   edi,edi
   14001e8d2:	cmove  rax,r12
   14001e8d6:	mov    QWORD PTR [rbp+0x128],rax
   14001e8dd:	mov    QWORD PTR [rbp+0x740],rax
   14001e8e4:	cmp    edi,0x8
   14001e8e7:	jne    0x14001e8f3
   14001e8e9:	mov    rax,QWORD PTR [rax]
   14001e8ec:	mov    QWORD PTR [rbp+0x738],rax
   14001e8f3:	mov    rsi,QWORD PTR [rbp-0x78]
   14001e8f7:	mov    r13,QWORD PTR [rbp-0x18]
   14001e8fb:	jmp    0x14001e900
   14001e8fd:	mov    rsi,r14
   14001e900:	lea    rbx,[rip+0x30849]        # 0x14004f150
   14001e907:	mov    r12d,0x1
   14001e90d:	xor    eax,eax
   14001e90f:	mov    DWORD PTR [rbp+0x2c],eax
   14001e912:	mov    DWORD PTR [rbp+0x28],eax
   14001e915:	mov    rdi,QWORD PTR [rbp+0x30]
   14001e919:	test   rdi,rdi
   14001e91c:	je     0x14001e938
   14001e91e:	call   QWORD PTR [rip+0x1e89c]        # 0x14003d1c0
   14001e924:	mov    rcx,rax
   14001e927:	mov    r8,rdi
   14001e92a:	xor    edx,edx
   14001e92c:	call   QWORD PTR [rip+0x1e8ae]        # 0x14003d1e0
   14001e932:	xor    eax,eax
   14001e934:	mov    QWORD PTR [rbp+0x30],rax
   14001e938:	mov    DWORD PTR [rbp+0x19c],eax
   14001e93e:	mov    DWORD PTR [rbp+0x198],eax
   14001e944:	mov    rdi,QWORD PTR [rbp+0x1a0]
   14001e94b:	test   rdi,rdi
   14001e94e:	je     0x14001e96d
   14001e950:	call   QWORD PTR [rip+0x1e86a]        # 0x14003d1c0
   14001e956:	mov    rcx,rax
   14001e959:	mov    r8,rdi
   14001e95c:	xor    edx,edx
   14001e95e:	call   QWORD PTR [rip+0x1e87c]        # 0x14003d1e0
   14001e964:	xor    eax,eax
   14001e966:	mov    QWORD PTR [rbp+0x1a0],rax
   14001e96d:	test   rsi,rsi
   14001e970:	je     0x14001e986
   14001e972:	call   QWORD PTR [rip+0x1e848]        # 0x14003d1c0
   14001e978:	mov    rcx,rax
   14001e97b:	mov    r8,rsi
   14001e97e:	xor    edx,edx
   14001e980:	call   QWORD PTR [rip+0x1e85a]        # 0x14003d1e0
   14001e986:	test   r13,r13
   14001e989:	je     0x14001e99f
   14001e98b:	call   QWORD PTR [rip+0x1e82f]        # 0x14003d1c0
   14001e991:	mov    rcx,rax
   14001e994:	mov    r8,r13
   14001e997:	xor    edx,edx
   14001e999:	call   QWORD PTR [rip+0x1e841]        # 0x14003d1e0
   14001e99f:	xor    r13d,r13d
   14001e9a2:	jmp    0x1400046f1
   14001e9a7:	lea    rbx,[rip+0x307a2]        # 0x14004f150
   14001e9ae:	lea    r14,[rip+0x2f66b]        # 0x14004e020
   14001e9b5:	mov    r12d,0x1
   14001e9bb:	mov    esi,DWORD PTR [rbp+0x160]
   14001e9c1:	jmp    0x14000471f
   14001e9c6:	cmp    r15d,0xd0000034
   14001e9cd:	jne    0x14001e9d9
   14001e9cf:	mov    edi,0xc004f012
   14001e9d4:	jmp    0x1400047c6
   14001e9d9:	cmp    r15d,0xd00000e5
   14001e9e0:	je     0x14001ea18
   14001e9e2:	cmp    r15d,0xc004d501
   14001e9e9:	je     0x14001ea18
   14001e9eb:	cmp    r15d,0xd000003e
   14001e9f2:	jne    0x14001e9fe
   14001e9f4:	mov    edi,0xc004f028
   14001e9f9:	jmp    0x1400047c6
   14001e9fe:	mov    edi,r15d
   14001ea01:	cmp    r15d,0x8007007a
   14001ea08:	jne    0x1400047c6
   14001ea0e:	mov    edi,0xc004f01e
   14001ea13:	jmp    0x1400047c6
   14001ea18:	mov    edi,0xc004f027
   14001ea1d:	jmp    0x1400047c6
   14001ea22:	mov    edi,0xc004f01e
   14001ea27:	jmp    0x1400047c6
   14001ea2c:	mov    rcx,rsi
   14001ea2f:	call   QWORD PTR [rip+0x1ecf3]        # 0x14003d728
   14001ea35:	lea    r8,[rbp+0x200]
   14001ea3c:	lea    rdx,[rip+0x1f91d]        # 0x14003e360
   14001ea43:	mov    rcx,rdi
   14001ea46:	call   rsi
   14001ea48:	nop
   14001ea49:	jmp    0x140001563
   14001ea4e:	mov    rcx,rbx
   14001ea51:	call   QWORD PTR [rip+0x1ecd1]        # 0x14003d728
   14001ea57:	lea    r9,[rbp+0xf8]
   14001ea5e:	lea    r8,[rip+0x1f80b]        # 0x14003e270
   14001ea65:	xor    edx,edx
   14001ea67:	mov    rcx,rdi
   14001ea6a:	call   rbx
   14001ea6c:	nop
   14001ea6d:	jmp    0x1400017b9
   14001ea72:	mov    rcx,rbx
   14001ea75:	call   QWORD PTR [rip+0x1ecad]        # 0x14003d728
   14001ea7b:	xor    r8d,r8d
   14001ea7e:	xor    edx,edx
   14001ea80:	mov    rcx,rdi
   14001ea83:	call   rbx
   14001ea85:	nop
   14001ea86:	jmp    0x1400017fd
   14001ea8b:	cmp    QWORD PTR [rbp+0xf8],0x0
   14001ea93:	je     0x140001835
   14001ea99:	cmp    BYTE PTR [rip+0x300db],0x0        # 0x14004eb7b
   14001eaa0:	jne    0x140001835
   14001eaa6:	mov    QWORD PTR [rbp+0x410],r13
   14001eaad:	mov    rdi,QWORD PTR [rbp+0xf8]
   14001eab4:	mov    rax,QWORD PTR [rdi]
   14001eab7:	mov    rbx,QWORD PTR [rax]
   14001eaba:	mov    rcx,rbx
   14001eabd:	call   QWORD PTR [rip+0x1ec65]        # 0x14003d728
   14001eac3:	lea    r8,[rbp+0x410]
   14001eaca:	lea    rdx,[rip+0x20bd7]        # 0x14003f6a8
   14001ead1:	mov    rcx,rdi
   14001ead4:	call   rbx
   14001ead6:	mov    rdi,QWORD PTR [rbp+0x410]
   14001eadd:	test   rdi,rdi
   14001eae0:	je     0x14001eafc
   14001eae2:	mov    rax,QWORD PTR [rdi]
   14001eae5:	mov    rbx,QWORD PTR [rax+0x38]
   14001eae9:	mov    rcx,rbx
   14001eaec:	call   QWORD PTR [rip+0x1ec36]        # 0x14003d728
   14001eaf2:	or     rdx,0xffffffffffffffff
   14001eaf6:	mov    rcx,rdi
   14001eaf9:	call   rbx
   14001eafb:	nop
   14001eafc:	lea    rcx,[rbp+0x410]
   14001eb03:	call   0x1400013bc
   14001eb08:	nop
   14001eb09:	jmp    0x140001835
   14001eb0e:	call   0x140013de0
   14001eb13:	mov    QWORD PTR [rip+0x3076e],r13        # 0x14004f288
   14001eb1a:	jmp    0x1400018b4
   14001eb1f:	call   QWORD PTR [rip+0x345ab]        # 0x1400530d0
   14001eb25:	nop
   14001eb26:	jmp    0x1400018c7
   14001eb2b:	mov    rcx,rbx
   14001eb2e:	call   QWORD PTR [rip+0x1ebf4]        # 0x14003d728
   14001eb34:	mov    rcx,rdi
   14001eb37:	call   rbx
   14001eb39:	nop
   14001eb3a:	jmp    0x140001933
   14001eb3f:	call   QWORD PTR [rip+0x1e50b]        # 0x14003d050
   14001eb45:	mov    QWORD PTR [rip+0x30744],r13        # 0x14004f290
   14001eb4c:	jmp    0x14000194f
   14001eb51:	int3   
   14001eb52:	mov    rcx,rdi
   14001eb55:	call   0x140013de0
   14001eb5a:	mov    rcx,QWORD PTR [rbp-0x41]
   14001eb5e:	call   QWORD PTR [rip+0x1e644]        # 0x14003d1a8
   14001eb64:	xor    eax,eax
   14001eb66:	jmp    0x140004a85
   14001eb6b:	int3   
   14001eb6c:	mov    rcx,rsi
   14001eb6f:	call   QWORD PTR [rip+0x1e633]        # 0x14003d1a8
   14001eb75:	mov    rsi,r14
   14001eb78:	jmp    0x140004cf4
   14001eb7d:	int3   
   14001eb7e:	mov    rcx,rsi
   14001eb81:	call   QWORD PTR [rip+0x1e621]        # 0x14003d1a8
   14001eb87:	mov    rsi,r14
   14001eb8a:	jmp    0x140004dd5
   14001eb8f:	int3   
   14001eb90:	mov    edx,0x80070057
   14001eb95:	jmp    0x140004e32
   14001eb9a:	mov    edx,0x80070057
   14001eb9f:	jmp    0x140004edc
   14001eba4:	xor    edi,edi
   14001eba6:	cmp    DWORD PTR [rbx+0x10],edi
   14001eba9:	jbe    0x140004fec
   14001ebaf:	mov    rax,QWORD PTR [rbx]
   14001ebb2:	mov    rsi,QWORD PTR [rax+rdi*8]
   14001ebb6:	jmp    0x14001ec02
   14001ebb8:	mov    rax,QWORD PTR [rbx+0x40]
   14001ebbc:	lea    rcx,[rsi+0x8]
   14001ebc0:	mov    rdx,rsi
   14001ebc3:	mov    rsi,QWORD PTR [rcx]
   14001ebc6:	mov    QWORD PTR [rcx],rax
   14001ebc9:	dec    QWORD PTR [rbx+0x8]
   14001ebcd:	mov    QWORD PTR [rbx+0x40],rdx
   14001ebd1:	mov    rdx,QWORD PTR [rbx+0x8]
   14001ebd5:	cmp    rdx,QWORD PTR [rbx+0x28]
   14001ebd9:	jae    0x14001ebf3
   14001ebdb:	cmp    DWORD PTR [rbx+0x30],0x0
   14001ebdf:	jne    0x14001ebf3
   14001ebe1:	mov    rcx,rbx
   14001ebe4:	call   0x14003a4e4
   14001ebe9:	mov    edx,eax
   14001ebeb:	mov    rcx,rbx
   14001ebee:	call   0x14003a574
   14001ebf3:	cmp    QWORD PTR [rbx+0x8],0x0
   14001ebf8:	jne    0x14001ec02
   14001ebfa:	mov    rcx,rbx
   14001ebfd:	call   0x140005d24
   14001ec02:	test   rsi,rsi
   14001ec05:	jne    0x14001ebb8
   14001ec07:	inc    edi
   14001ec09:	cmp    edi,DWORD PTR [rbx+0x10]
   14001ec0c:	jb     0x14001ebaf
   14001ec0e:	jmp    0x140004fec
   14001ec13:	xor    edx,edx
   14001ec15:	mov    rcx,rbx
   14001ec18:	call   0x14003a4e4
   14001ec1d:	mov    edx,eax
   14001ec1f:	mov    rcx,rbx
   14001ec22:	call   0x14003a478
   14001ec27:	nop
   14001ec28:	jmp    0x140005007
   14001ec2d:	int3   
   14001ec2e:	mov    rcx,QWORD PTR [rbp-0x18]
   14001ec32:	call   QWORD PTR [rip+0x1ea10]        # 0x14003d648
   14001ec38:	nop
   14001ec39:	jmp    0x1400051a2
   14001ec3e:	mov    ecx,0x8007000e
   14001ec43:	call   0x1400152fc
   14001ec48:	int3   
   14001ec49:	call   0x14002afc0
   14001ec4e:	mov    rcx,QWORD PTR [rdi+0x8]
   14001ec52:	mov    ebx,eax
   14001ec54:	call   QWORD PTR [rip+0x1e9ee]        # 0x14003d648
   14001ec5a:	and    QWORD PTR [rdi+0x8],0x0
   14001ec5f:	mov    ecx,ebx
   14001ec61:	call   0x1400152fc
   14001ec66:	int3   
   14001ec67:	int3   
   14001ec68:	mov    ecx,0x80004005
   14001ec6d:	call   0x1400152fc
   14001ec72:	int3   
   14001ec73:	mov    rcx,QWORD PTR [rdi+0x8]
   14001ec77:	lea    rax,[rbp+0x50]
   14001ec7b:	mov    QWORD PTR [rsp+0x50],rax
   14001ec80:	lea    r8,[rbp-0x14]
   14001ec84:	mov    QWORD PTR [rsp+0x48],rsi
   14001ec89:	lea    rax,[rbp+0x58]
   14001ec8d:	mov    QWORD PTR [rsp+0x40],rax
   14001ec92:	xor    r9d,r9d
   14001ec95:	mov    QWORD PTR [rsp+0x38],rsi
   14001ec9a:	lea    rax,[rbp+0x60]
   14001ec9e:	mov    QWORD PTR [rsp+0x30],rax
   14001eca3:	xor    edx,edx
   14001eca5:	lea    rax,[rbp-0x18]
   14001eca9:	mov    QWORD PTR [rsp+0x28],rsi
   14001ecae:	mov    QWORD PTR [rsp+0x20],rax
   14001ecb3:	mov    DWORD PTR [rbp+0x60],esi
   14001ecb6:	mov    DWORD PTR [rbp-0x18],esi
   14001ecb9:	mov    DWORD PTR [rbp+0x50],esi
   14001ecbc:	mov    DWORD PTR [rbp+0x58],esi
   14001ecbf:	mov    DWORD PTR [rbp-0x14],esi
   14001ecc2:	call   QWORD PTR [rip+0x1e828]        # 0x14003d4f0
   14001ecc8:	call   QWORD PTR [rip+0x1e49a]        # 0x14003d168
   14001ecce:	cmp    eax,0x7a
   14001ecd1:	je     0x14001ecd9
   14001ecd3:	call   0x14002b0d4
   14001ecd8:	int3   
   14001ecd9:	mov    ecx,DWORD PTR [rbp-0x14]
   14001ecdc:	call   QWORD PTR [rip+0x1e96e]        # 0x14003d650
   14001ece2:	mov    r13,rax
   14001ece5:	test   rax,rax
   14001ece8:	jne    0x14001ecf5
   14001ecea:	mov    ecx,0x80004005
   14001ecef:	call   0x1400152fc
   14001ecf4:	int3   
   14001ecf5:	mov    ebx,DWORD PTR [rbp+0x58]
   14001ecf8:	test   ebx,ebx
   14001ecfa:	je     0x14001ed09
   14001ecfc:	mov    ecx,ebx
   14001ecfe:	call   QWORD PTR [rip+0x1e94c]        # 0x14003d650
   14001ed04:	mov    r12,rax
   14001ed07:	jmp    0x14001ed0c
   14001ed09:	mov    r12,rsi
   14001ed0c:	test   ebx,ebx
   14001ed0e:	je     0x14001ed20
   14001ed10:	test   r12,r12
   14001ed13:	jne    0x14001ed20
   14001ed15:	mov    ecx,0x80004005
   14001ed1a:	call   0x1400152fc
   14001ed1f:	int3   
   14001ed20:	mov    ebx,DWORD PTR [rbp+0x50]
   14001ed23:	test   ebx,ebx
   14001ed25:	je     0x14001ed34
   14001ed27:	mov    ecx,ebx
   14001ed29:	call   QWORD PTR [rip+0x1e921]        # 0x14003d650
   14001ed2f:	mov    r15,rax
   14001ed32:	jmp    0x14001ed37
   14001ed34:	mov    r15,rsi
   14001ed37:	test   ebx,ebx
   14001ed39:	je     0x14001ed4b
   14001ed3b:	test   r15,r15
   14001ed3e:	jne    0x14001ed4b
   14001ed40:	mov    ecx,0x80004005
   14001ed45:	call   0x1400152fc
   14001ed4a:	int3   
   14001ed4b:	mov    ebx,DWORD PTR [rbp-0x18]
   14001ed4e:	test   ebx,ebx
   14001ed50:	je     0x14001ed5f
   14001ed52:	mov    ecx,ebx
   14001ed54:	call   QWORD PTR [rip+0x1e8f6]        # 0x14003d650
   14001ed5a:	mov    r14,rax
   14001ed5d:	jmp    0x14001ed62
   14001ed5f:	mov    r14,rsi
   14001ed62:	test   ebx,ebx
   14001ed64:	je     0x14001ed76
   14001ed66:	test   r14,r14
   14001ed69:	jne    0x14001ed76
   14001ed6b:	mov    ecx,0x80004005
   14001ed70:	call   0x1400152fc
   14001ed75:	int3   
   14001ed76:	mov    ebx,DWORD PTR [rbp+0x60]
   14001ed79:	test   ebx,ebx
   14001ed7b:	je     0x14001ed9c
   14001ed7d:	mov    ecx,ebx
   14001ed7f:	call   QWORD PTR [rip+0x1e8cb]        # 0x14003d650
   14001ed85:	mov    rsi,rax
   14001ed88:	test   ebx,ebx
   14001ed8a:	je     0x14001ed9c
   14001ed8c:	test   rax,rax
   14001ed8f:	jne    0x14001ed9c
   14001ed91:	mov    ecx,0x80004005
   14001ed96:	call   0x1400152fc
   14001ed9b:	int3   
   14001ed9c:	mov    rcx,QWORD PTR [rdi+0x8]
   14001eda0:	lea    rax,[rbp+0x50]
   14001eda4:	mov    QWORD PTR [rsp+0x50],rax
   14001eda9:	lea    r8,[rbp-0x14]
   14001edad:	mov    QWORD PTR [rsp+0x48],r15
   14001edb2:	lea    rax,[rbp+0x58]
   14001edb6:	mov    QWORD PTR [rsp+0x40],rax
   14001edbb:	mov    r9,r14
   14001edbe:	mov    QWORD PTR [rsp+0x38],r12
   14001edc3:	lea    rax,[rbp+0x60]
   14001edc7:	mov    QWORD PTR [rsp+0x30],rax
   14001edcc:	mov    rdx,r13
   14001edcf:	lea    rax,[rbp-0x18]
   14001edd3:	mov    QWORD PTR [rsp+0x28],rsi
   14001edd8:	mov    QWORD PTR [rsp+0x20],rax
   14001eddd:	call   QWORD PTR [rip+0x1e70d]        # 0x14003d4f0
   14001ede3:	test   eax,eax
   14001ede5:	jne    0x14001ee23
   14001ede7:	call   0x14002afc0
   14001edec:	mov    rcx,r13
   14001edef:	mov    ebx,eax
   14001edf1:	call   QWORD PTR [rip+0x1e851]        # 0x14003d648
   14001edf7:	mov    rcx,r12
   14001edfa:	call   QWORD PTR [rip+0x1e848]        # 0x14003d648
   14001ee00:	mov    rcx,r15
   14001ee03:	call   QWORD PTR [rip+0x1e83f]        # 0x14003d648
   14001ee09:	mov    rcx,r14
   14001ee0c:	call   QWORD PTR [rip+0x1e836]        # 0x14003d648
   14001ee12:	mov    rcx,rsi
   14001ee15:	call   QWORD PTR [rip+0x1e82d]        # 0x14003d648
   14001ee1b:	mov    ecx,ebx
   14001ee1d:	call   0x1400152fc
   14001ee22:	int3   
   14001ee23:	mov    rax,QWORD PTR [rdi]
   14001ee26:	mov    rbx,QWORD PTR [rax+0x8]
   14001ee2a:	mov    rcx,rbx
   14001ee2d:	call   QWORD PTR [rip+0x1e8f5]        # 0x14003d728
   14001ee33:	mov    rcx,rdi
   14001ee36:	call   rbx
   14001ee38:	mov    QWORD PTR [rdi+0x8],r13
   14001ee3c:	jmp    0x140005257
   14001ee41:	int3   
   14001ee42:	mov    rcx,rdi
   14001ee45:	call   0x1400051c0
   14001ee4a:	nop
   14001ee4b:	jmp    0x14000530a
   14001ee50:	mov    rcx,rsi
   14001ee53:	call   QWORD PTR [rip+0x1e8cf]        # 0x14003d728
   14001ee59:	mov    rcx,rbx
   14001ee5c:	call   rsi
   14001ee5e:	nop
   14001ee5f:	jmp    0x140005343
   14001ee64:	mov    eax,ebp
   14001ee66:	jmp    0x140005381
   14001ee6b:	mov    ecx,0x8007000e
   14001ee70:	call   0x1400152fc
   14001ee75:	int3   
   14001ee76:	cmp    eax,0xc
   14001ee79:	je     0x14001eea4
   14001ee7b:	cmp    eax,0x16
   14001ee7e:	je     0x14001ee99
   14001ee80:	cmp    eax,0x22
   14001ee83:	je     0x14001ee99
   14001ee85:	cmp    eax,0x50
   14001ee88:	je     0x1400053ba
   14001ee8e:	mov    ecx,0x80004005
   14001ee93:	call   0x1400152fc
   14001ee98:	int3   
   14001ee99:	mov    ecx,0x80070057
   14001ee9e:	call   0x1400152fc
   14001eea3:	int3   
   14001eea4:	mov    ecx,0x8007000e
   14001eea9:	call   0x1400152fc
   14001eeae:	int3   
   14001eeaf:	call   0x14002afc0
   14001eeb4:	mov    rcx,rsi
   14001eeb7:	mov    ebx,eax
   14001eeb9:	call   QWORD PTR [rip+0x1e789]        # 0x14003d648
   14001eebf:	mov    ecx,ebx
   14001eec1:	call   0x1400152fc
   14001eec6:	int3   
   14001eec7:	int3   
   14001eec8:	mov    rcx,rbx
   14001eecb:	call   0x1400051c0
   14001eed0:	and    QWORD PTR [rsp+0x40],0x0
   14001eed6:	jmp    0x140005474
   14001eedb:	mov    ecx,0x8007000e
   14001eee0:	call   0x1400152fc
   14001eee5:	int3   
   14001eee6:	call   0x14002afc0
   14001eeeb:	mov    rcx,rdi
   14001eeee:	mov    ebx,eax
   14001eef0:	call   QWORD PTR [rip+0x1e752]        # 0x14003d648
   14001eef6:	mov    ecx,ebx
   14001eef8:	call   0x1400152fc
   14001eefd:	int3   
   14001eefe:	mov    ecx,0x80004005
   14001ef03:	call   0x1400152fc
   14001ef08:	int3   
   14001ef09:	int3   
   14001ef0a:	call   0x14000520c
   14001ef0f:	nop
   14001ef10:	jmp    0x140005526
   14001ef15:	lea    r8,[rsp+0x50]
   14001ef1a:	lea    rdx,[rsp+0x40]
   14001ef1f:	call   QWORD PTR [rip+0x1e553]        # 0x14003d478
   14001ef25:	test   eax,eax
   14001ef27:	jne    0x140005541
   14001ef2d:	call   0x14002b0d4
   14001ef32:	int3   
   14001ef33:	mov    ecx,0x8007000e
   14001ef38:	call   0x1400152fc
   14001ef3d:	int3   
   14001ef3e:	call   0x14002afc0
   14001ef43:	mov    rcx,rdi
   14001ef46:	mov    ebx,eax
   14001ef48:	call   QWORD PTR [rip+0x1e6fa]        # 0x14003d648
   14001ef4e:	mov    ecx,ebx
   14001ef50:	call   0x1400152fc
   14001ef55:	int3   
   14001ef56:	mov    ecx,0x80004005
   14001ef5b:	call   0x1400152fc
   14001ef60:	int3   
   14001ef61:	int3   
   14001ef62:	movsxd rcx,DWORD PTR [rcx+0x18]
   14001ef66:	test   rcx,rcx
   14001ef69:	jne    0x14001ef7e
   14001ef6b:	mov    rcx,rdx
   14001ef6e:	mov    rax,rdi
   14001ef71:	shr    rcx,1
   14001ef74:	sub    rax,rdx
   14001ef77:	cmp    rax,rcx
   14001ef7a:	cmova  rcx,rax
   14001ef7e:	lea    rax,[rdx+rcx*1]
   14001ef82:	mov    edx,0x8
   14001ef87:	cmp    rdi,rax
   14001ef8a:	cmovb  rdi,rax
   14001ef8e:	mov    rcx,rdi
   14001ef91:	call   QWORD PTR [rip+0x1e669]        # 0x14003d600
   14001ef97:	mov    rsi,rax
   14001ef9a:	test   rax,rax
   14001ef9d:	je     0x1400057e3
   14001efa3:	mov    rdx,QWORD PTR [rbx+0x8]
   14001efa7:	mov    rcx,rax
   14001efaa:	mov    r8,QWORD PTR [rbx]
   14001efad:	shl    rdx,0x3
   14001efb1:	mov    r9,rdx
   14001efb4:	call   QWORD PTR [rip+0x1e66e]        # 0x14003d628
   14001efba:	test   eax,eax
   14001efbc:	je     0x14001eff3
   14001efbe:	cmp    eax,0xc
   14001efc1:	je     0x14001efe8
   14001efc3:	cmp    eax,0x16
   14001efc6:	je     0x14001efdd
   14001efc8:	cmp    eax,0x22
   14001efcb:	je     0x14001efdd
   14001efcd:	cmp    eax,0x50
   14001efd0:	je     0x14001eff3
   14001efd2:	mov    ecx,0x80004005
   14001efd7:	call   0x1400152fc
   14001efdc:	int3   
   14001efdd:	mov    ecx,0x80070057
   14001efe2:	call   0x1400152fc
   14001efe7:	int3   
   14001efe8:	mov    ecx,0x8007000e
   14001efed:	call   0x1400152fc
   14001eff2:	int3   
   14001eff3:	mov    rcx,QWORD PTR [rbx]
   14001eff6:	call   QWORD PTR [rip+0x1e64c]        # 0x14003d648
   14001effc:	mov    QWORD PTR [rbx],rsi
   14001efff:	jmp    0x1400057cd
   14001f004:	mov    rcx,rbp
   14001f007:	call   QWORD PTR [rip+0x1e71b]        # 0x14003d728
   14001f00d:	mov    edx,0x1
   14001f012:	mov    rcx,rdi
   14001f015:	call   rbp
   14001f017:	nop
   14001f018:	jmp    0x140005865
   14001f01d:	int3   
   14001f01e:	mov    rcx,rdi
   14001f021:	call   QWORD PTR [rip+0x1e701]        # 0x14003d728
   14001f027:	mov    rcx,rbx
   14001f02a:	call   rdi
   14001f02c:	nop
   14001f02d:	jmp    0x140005905
   14001f032:	mov    rcx,rsi
   14001f035:	call   QWORD PTR [rip+0x1e6ed]        # 0x14003d728
   14001f03b:	mov    edx,edi
   14001f03d:	mov    rcx,rbx
   14001f040:	call   rsi
   14001f042:	mov    rsi,rax
   14001f045:	jmp    0x140005944
   14001f04a:	mov    rcx,r14
   14001f04d:	call   QWORD PTR [rip+0x1e6d5]        # 0x14003d728
   14001f053:	mov    rcx,rsi
   14001f056:	call   r14
   14001f059:	nop
   14001f05a:	jmp    0x140005966
   14001f05f:	mov    ecx,0x80070057
   14001f064:	call   0x1400152fc
   14001f069:	int3   
   14001f06a:	mov    ecx,0x8007000e
   14001f06f:	call   0x1400152fc
   14001f074:	int3   
   14001f075:	call   0x14002afc0
   14001f07a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001f07e:	mov    edi,eax
   14001f080:	call   QWORD PTR [rip+0x1e5c2]        # 0x14003d648
   14001f086:	mov    ecx,edi
   14001f088:	mov    QWORD PTR [rbx+0x8],0x0
   14001f090:	call   0x1400152fc
   14001f095:	int3   
   14001f096:	mov    rcx,rdi
   14001f099:	call   QWORD PTR [rip+0x1e689]        # 0x14003d728
   14001f09f:	mov    rcx,rbx
   14001f0a2:	call   rdi
   14001f0a4:	nop
   14001f0a5:	jmp    0x1400059ba
   14001f0aa:	mov    rcx,rdi
   14001f0ad:	call   QWORD PTR [rip+0x1e675]        # 0x14003d728
   14001f0b3:	mov    edx,esi
   14001f0b5:	mov    rcx,rbx
   14001f0b8:	call   rdi
   14001f0ba:	mov    rdi,rax
   14001f0bd:	jmp    0x1400059f4
   14001f0c2:	mov    rcx,rbp
   14001f0c5:	call   QWORD PTR [rip+0x1e65d]        # 0x14003d728
   14001f0cb:	mov    rcx,rdi
   14001f0ce:	call   rbp
   14001f0d0:	mov    ebp,eax
   14001f0d2:	jmp    0x140005a1a
   14001f0d7:	mov    rcx,r14
   14001f0da:	call   QWORD PTR [rip+0x1e648]        # 0x14003d728
   14001f0e0:	mov    rcx,rdi
   14001f0e3:	call   r14
   14001f0e6:	nop
   14001f0e7:	jmp    0x140005a39
   14001f0ec:	mov    ecx,0x80070057
   14001f0f1:	call   0x1400152fc
   14001f0f6:	int3   
   14001f0f7:	call   0x14002afc0
   14001f0fc:	mov    rcx,QWORD PTR [rbx+0x8]
   14001f100:	mov    edi,eax
   14001f102:	call   QWORD PTR [rip+0x1e540]        # 0x14003d648
   14001f108:	mov    ecx,edi
   14001f10a:	mov    QWORD PTR [rbx+0x8],0x0
   14001f112:	call   0x1400152fc
   14001f117:	int3   
   14001f118:	mov    rsi,QWORD PTR [r14-0x18]
   14001f11c:	mov    rax,QWORD PTR [rsi]
   14001f11f:	mov    rdi,QWORD PTR [rax+0x8]
   14001f123:	mov    rcx,rdi
   14001f126:	call   QWORD PTR [rip+0x1e5fc]        # 0x14003d728
   14001f12c:	lea    rdx,[r14-0x18]
   14001f130:	mov    rcx,rsi
   14001f133:	call   rdi
   14001f135:	nop
   14001f136:	jmp    0x140005aef
   14001f13b:	mov    rsi,QWORD PTR [r14-0x18]
   14001f13f:	mov    rax,QWORD PTR [rsi]
   14001f142:	mov    rdi,QWORD PTR [rax+0x8]
   14001f146:	mov    rcx,rdi
   14001f149:	call   QWORD PTR [rip+0x1e5d9]        # 0x14003d728
   14001f14f:	lea    rdx,[r14-0x18]
   14001f153:	mov    rcx,rsi
   14001f156:	call   rdi
   14001f158:	nop
   14001f159:	jmp    0x140005b04
   14001f15e:	mov    rsi,QWORD PTR [r14-0x18]
   14001f162:	mov    rax,QWORD PTR [rsi]
   14001f165:	mov    rdi,QWORD PTR [rax+0x8]
   14001f169:	mov    rcx,rdi
   14001f16c:	call   QWORD PTR [rip+0x1e5b6]        # 0x14003d728
   14001f172:	lea    rdx,[r14-0x18]
   14001f176:	mov    rcx,rsi
   14001f179:	call   rdi
   14001f17b:	nop
   14001f17c:	jmp    0x140005b19
   14001f181:	mov    rsi,QWORD PTR [r14-0x18]
   14001f185:	mov    rax,QWORD PTR [rsi]
   14001f188:	mov    rdi,QWORD PTR [rax+0x8]
   14001f18c:	mov    rcx,rdi
   14001f18f:	call   QWORD PTR [rip+0x1e593]        # 0x14003d728
   14001f195:	lea    rdx,[r14-0x18]
   14001f199:	mov    rcx,rsi
   14001f19c:	call   rdi
   14001f19e:	nop
   14001f19f:	jmp    0x140005b31
   14001f1a4:	mov    rcx,rdi
   14001f1a7:	call   QWORD PTR [rip+0x1e57b]        # 0x14003d728
   14001f1ad:	mov    rcx,rbx
   14001f1b0:	call   rdi
   14001f1b2:	mov    edi,eax
   14001f1b4:	jmp    0x140005bf9
   14001f1b9:	mov    ecx,0x8007000e
   14001f1be:	call   0x1400152fc
   14001f1c3:	int3   
   14001f1c4:	mov    rcx,rdi
   14001f1c7:	call   QWORD PTR [rip+0x1e55b]        # 0x14003d728
   14001f1cd:	mov    rcx,rbx
   14001f1d0:	call   rdi
   14001f1d2:	nop
   14001f1d3:	jmp    0x140005c4b
   14001f1d8:	cmp    eax,0xc
   14001f1db:	je     0x14001f206
   14001f1dd:	cmp    eax,0x16
   14001f1e0:	je     0x14001f1fb
   14001f1e2:	cmp    eax,0x22
   14001f1e5:	je     0x14001f1fb
   14001f1e7:	cmp    eax,0x50
   14001f1ea:	je     0x140005c7d
   14001f1f0:	mov    ecx,0x80004005
   14001f1f5:	call   0x1400152fc
   14001f1fa:	int3   
   14001f1fb:	mov    ecx,0x80070057
   14001f200:	call   0x1400152fc
   14001f205:	int3   
   14001f206:	mov    ecx,0x8007000e
   14001f20b:	call   0x1400152fc
   14001f210:	int3   
   14001f211:	int3   
   14001f212:	call   0x14000e0e8
   14001f217:	and    QWORD PTR [rbx+0x38],0x0
   14001f21c:	jmp    0x140005d3f
   14001f221:	int3   
   14001f222:	lea    rax,[rsi+0x8]
   14001f226:	cmp    rax,r15
   14001f229:	je     0x140005e46
   14001f22f:	jmp    0x140005e05
   14001f234:	xor    bpl,bpl
   14001f237:	jmp    0x140005e46
   14001f23c:	lea    rax,[rdi+0x8]
   14001f240:	cmp    rax,r14
   14001f243:	je     0x140005f0d
   14001f249:	jmp    0x140005ecc
   14001f24e:	lea    rax,[rsp+0x70]
   14001f253:	cmp    rax,r15
   14001f256:	je     0x140005ffc
   14001f25c:	jmp    0x140005ff5
   14001f261:	mov    rax,QWORD PTR [rbx]
   14001f264:	mov    rsi,QWORD PTR [rax]
   14001f267:	mov    rcx,rsi
   14001f26a:	call   QWORD PTR [rip+0x1e4b8]        # 0x14003d728
   14001f270:	mov    edx,0x1
   14001f275:	mov    rcx,rbx
   14001f278:	call   rsi
   14001f27a:	mov    rcx,QWORD PTR [rsp+0x68]
   14001f27f:	jmp    0x140005ff2
   14001f284:	mov    rdx,rsi
   14001f287:	mov    rcx,r14
   14001f28a:	call   0x14002a244
   14001f28f:	mov    rdx,rbp
   14001f292:	mov    rcx,r14
   14001f295:	mov    rsi,rax
   14001f298:	call   0x14002a244
   14001f29d:	mov    rcx,rax
   14001f2a0:	mov    rdx,rsi
   14001f2a3:	call   0x14002a2bc
   14001f2a8:	mov    rcx,QWORD PTR [rsp+0x70]
   14001f2ad:	lea    rax,[r13*8+0x0]
   14001f2b5:	sub    rcx,rax
   14001f2b8:	sub    rbp,r13
   14001f2bb:	mov    QWORD PTR [rsp+0x70],rcx
   14001f2c0:	cmp    rbp,r13
   14001f2c3:	jae    0x140006013
   14001f2c9:	jmp    0x140006039
   14001f2ce:	lea    rax,[rsp+0x70]
   14001f2d3:	cmp    rbp,rax
   14001f2d6:	je     0x14000606e
   14001f2dc:	jmp    0x14000606c
   14001f2e1:	mov    rax,QWORD PTR [r15]
   14001f2e4:	mov    rsi,QWORD PTR [rax]
   14001f2e7:	mov    rcx,rsi
   14001f2ea:	call   QWORD PTR [rip+0x1e438]        # 0x14003d728
   14001f2f0:	mov    edx,0x1
   14001f2f5:	mov    rcx,r15
   14001f2f8:	call   rsi
   14001f2fa:	mov    rcx,QWORD PTR [rsp+0x68]
   14001f2ff:	jmp    0x140006065
   14001f304:	mov    ecx,0x80070057
   14001f309:	call   0x1400152fc
   14001f30e:	int3   
   14001f30f:	mov    ecx,0x80070057
   14001f314:	call   0x1400152fc
   14001f319:	int3   
   14001f31a:	mov    ecx,0x80070057
   14001f31f:	call   0x1400152fc
   14001f324:	int3   
   14001f325:	mov    rax,QWORD PTR [rbx]
   14001f328:	mov    rdi,QWORD PTR [rax]
   14001f32b:	mov    rcx,rdi
   14001f32e:	call   QWORD PTR [rip+0x1e3f4]        # 0x14003d728
   14001f334:	mov    edx,0x1
   14001f339:	mov    rcx,rbx
   14001f33c:	call   rdi
   14001f33e:	nop
   14001f33f:	jmp    0x14000609b
   14001f344:	mov    ecx,0x80070057
   14001f349:	call   0x1400152fc
   14001f34e:	int3   
   14001f34f:	int3   
   14001f350:	mov    rax,QWORD PTR [rsi]
   14001f353:	mov    rbx,QWORD PTR [rax+0x10]
   14001f357:	mov    rcx,rbx
   14001f35a:	call   QWORD PTR [rip+0x1e3c8]        # 0x14003d728
   14001f360:	mov    rcx,rsi
   14001f363:	call   rbx
   14001f365:	mov    BYTE PTR [rsi+0x10],0x0
   14001f369:	jmp    0x1400061b0
   14001f36e:	mov    rbx,r14
   14001f371:	jmp    0x14000620f
   14001f376:	xor    r14d,r14d
   14001f379:	mov    rsi,QWORD PTR [rsp+0x50]
   14001f37e:	mov    rbx,QWORD PTR [rsp+0x58]
   14001f383:	jmp    0x140006214
   14001f388:	mov    ecx,0x8007000e
   14001f38d:	call   0x1400152fc
   14001f392:	int3   
   14001f393:	mov    ecx,0x8007000e
   14001f398:	call   0x1400152fc
   14001f39d:	nop
   14001f39e:	mov    rax,QWORD PTR [rbx]
   14001f3a1:	mov    rdi,QWORD PTR [rax]
   14001f3a4:	mov    rcx,rdi
   14001f3a7:	call   QWORD PTR [rip+0x1e37b]        # 0x14003d728
   14001f3ad:	mov    edx,0x1
   14001f3b2:	mov    rcx,rbx
   14001f3b5:	call   rdi
   14001f3b7:	nop
   14001f3b8:	jmp    0x14000626d
   14001f3bd:	int3   
   14001f3be:	mov    rax,QWORD PTR [rdi]
   14001f3c1:	mov    rbx,QWORD PTR [rax+0x10]
   14001f3c5:	mov    rcx,rbx
   14001f3c8:	call   QWORD PTR [rip+0x1e35a]        # 0x14003d728
   14001f3ce:	mov    rcx,rdi
   14001f3d1:	call   rbx
   14001f3d3:	mov    BYTE PTR [rdi+0x10],0x0
   14001f3d7:	jmp    0x1400062e4
   14001f3dc:	mov    rcx,rax
   14001f3df:	call   QWORD PTR [rip+0x1e343]        # 0x14003d728
   14001f3e5:	mov    rcx,rsi
   14001f3e8:	call   QWORD PTR [rsp+0x20]
   14001f3ec:	mov    rsi,rax
   14001f3ef:	mov    QWORD PTR [rsp+0x30],rax
   14001f3f4:	lea    rdx,[rip+0xfffffffffffe8a35]        # 0x140007e30
   14001f3fb:	jmp    0x14000637a
   14001f400:	mov    rax,QWORD PTR [rsi]
   14001f403:	mov    rsi,QWORD PTR [rax]
   14001f406:	mov    rcx,rsi
   14001f409:	call   QWORD PTR [rip+0x1e319]        # 0x14003d728
   14001f40f:	mov    r8d,0x2
   14001f415:	mov    edx,DWORD PTR [r14+0x8]
   14001f419:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f41e:	call   rsi
   14001f420:	mov    rsi,rax
   14001f423:	mov    QWORD PTR [rsp+0x30],rax
   14001f428:	test   rax,rax
   14001f42b:	jne    0x14001f432
   14001f42d:	call   0x14002dd90
   14001f432:	mov    eax,DWORD PTR [r14+0x8]
   14001f436:	mov    DWORD PTR [rsi+0x8],eax
   14001f439:	mov    eax,DWORD PTR [r14+0x8]
   14001f43d:	inc    eax
   14001f43f:	movsxd rdx,eax
   14001f442:	mov    QWORD PTR [rsp+0x98],rdx
   14001f44a:	lea    r9,[rdx+rdx*1]
   14001f44e:	lea    r8,[r14+0x18]
   14001f452:	add    rdx,rdx
   14001f455:	lea    rcx,[rsi+0x18]
   14001f459:	call   QWORD PTR [rip+0x1e1e1]        # 0x14003d640
   14001f45f:	lea    rdx,[rip+0xfffffffffffe89ca]        # 0x140007e30
   14001f466:	jmp    0x1400063b2
   14001f46b:	mov    rcx,rax
   14001f46e:	call   QWORD PTR [rip+0x1e2b4]        # 0x14003d728
   14001f474:	mov    rcx,rsi
   14001f477:	call   QWORD PTR [rsp+0x48]
   14001f47b:	mov    rsi,rax
   14001f47e:	mov    QWORD PTR [rsp+0x28],rax
   14001f483:	lea    rdx,[rip+0xfffffffffffe89a6]        # 0x140007e30
   14001f48a:	jmp    0x1400063f9
   14001f48f:	mov    rax,QWORD PTR [rsi]
   14001f492:	mov    rsi,QWORD PTR [rax]
   14001f495:	mov    rcx,rsi
   14001f498:	call   QWORD PTR [rip+0x1e28a]        # 0x14003d728
   14001f49e:	mov    r8d,0x2
   14001f4a4:	mov    edx,DWORD PTR [r14+0x8]
   14001f4a8:	mov    rcx,QWORD PTR [rsp+0x28]
   14001f4ad:	call   rsi
   14001f4af:	mov    rsi,rax
   14001f4b2:	mov    QWORD PTR [rsp+0x28],rax
   14001f4b7:	test   rax,rax
   14001f4ba:	jne    0x14001f4c1
   14001f4bc:	call   0x14002dd90
   14001f4c1:	mov    eax,DWORD PTR [r14+0x8]
   14001f4c5:	mov    DWORD PTR [rsi+0x8],eax
   14001f4c8:	mov    eax,DWORD PTR [r14+0x8]
   14001f4cc:	inc    eax
   14001f4ce:	movsxd rdx,eax
   14001f4d1:	mov    QWORD PTR [rsp+0x90],rdx
   14001f4d9:	lea    r9,[rdx+rdx*1]
   14001f4dd:	lea    r8,[r14+0x18]
   14001f4e1:	add    rdx,rdx
   14001f4e4:	lea    rcx,[rsi+0x18]
   14001f4e8:	call   QWORD PTR [rip+0x1e152]        # 0x14003d640
   14001f4ee:	lea    rdx,[rip+0xfffffffffffe893b]        # 0x140007e30
   14001f4f5:	jmp    0x140006431
   14001f4fa:	mov    rcx,rax
   14001f4fd:	call   QWORD PTR [rip+0x1e225]        # 0x14003d728
   14001f503:	mov    rcx,rsi
   14001f506:	call   QWORD PTR [rsp+0x48]
   14001f50a:	mov    rsi,rax
   14001f50d:	mov    QWORD PTR [rsp+0x20],rax
   14001f512:	jmp    0x14000647b
   14001f517:	mov    rax,QWORD PTR [rsi]
   14001f51a:	mov    rsi,QWORD PTR [rax]
   14001f51d:	mov    rcx,rsi
   14001f520:	call   QWORD PTR [rip+0x1e202]        # 0x14003d728
   14001f526:	mov    r8d,0x2
   14001f52c:	mov    edx,DWORD PTR [r14+0x8]
   14001f530:	mov    rcx,QWORD PTR [rsp+0x20]
   14001f535:	call   rsi
   14001f537:	mov    rsi,rax
   14001f53a:	mov    QWORD PTR [rsp+0x20],rax
   14001f53f:	test   rax,rax
   14001f542:	jne    0x14001f549
   14001f544:	call   0x14002dd90
   14001f549:	mov    eax,DWORD PTR [r14+0x8]
   14001f54d:	mov    DWORD PTR [rsi+0x8],eax
   14001f550:	mov    eax,DWORD PTR [r14+0x8]
   14001f554:	inc    eax
   14001f556:	movsxd rdx,eax
   14001f559:	mov    QWORD PTR [rsp+0xd0],rdx
   14001f561:	lea    r9,[rdx+rdx*1]
   14001f565:	lea    r8,[r14+0x18]
   14001f569:	add    rdx,rdx
   14001f56c:	lea    rcx,[rsi+0x18]
   14001f570:	call   QWORD PTR [rip+0x1e0ca]        # 0x14003d640
   14001f576:	nop
   14001f577:	jmp    0x1400064b3
   14001f57c:	mov    rcx,r14
   14001f57f:	call   QWORD PTR [rip+0x1e1a3]        # 0x14003d728
   14001f585:	lea    rcx,[rip+0x2f87c]        # 0x14004ee08
   14001f58c:	call   r14
   14001f58f:	nop
   14001f590:	jmp    0x140006503
   14001f595:	mov    ecx,0x80070057
   14001f59a:	call   0x1400152fc
   14001f59f:	call   0x14002afc0
   14001f5a4:	mov    ecx,eax
   14001f5a6:	call   0x1400152fc
   14001f5ab:	nop
   14001f5ac:	mov    rbx,r12
   14001f5af:	jmp    0x140006575
   14001f5b4:	xor    r12d,r12d
   14001f5b7:	mov    rdi,QWORD PTR [rsp+0x120]
   14001f5bf:	mov    rbx,QWORD PTR [rsp+0x38]
   14001f5c4:	jmp    0x14000657a
   14001f5c9:	mov    ecx,0x8007000e
   14001f5ce:	call   0x1400152fc
   14001f5d3:	int3   
   14001f5d4:	movsxd rax,DWORD PTR [rdi+0x30]
   14001f5d8:	cmp    rax,rsi
   14001f5db:	cmova  rsi,rax
   14001f5df:	mov    edx,0x8
   14001f5e4:	mov    rcx,rsi
   14001f5e7:	call   QWORD PTR [rip+0x1e013]        # 0x14003d600
   14001f5ed:	mov    QWORD PTR [rdi+0x18],rax
   14001f5f1:	test   rax,rax
   14001f5f4:	je     0x14001f634
   14001f5f6:	jmp    0x140006618
   14001f5fb:	cmp    eax,0xc
   14001f5fe:	je     0x14001f629
   14001f600:	cmp    eax,0x16
   14001f603:	je     0x14001f61e
   14001f605:	cmp    eax,0x22
   14001f608:	je     0x14001f61e
   14001f60a:	cmp    eax,0x50
   14001f60d:	je     0x14000660a
   14001f613:	mov    ecx,0x80004005
   14001f618:	call   0x1400152fc
   14001f61d:	int3   
   14001f61e:	mov    ecx,0x80070057
   14001f623:	call   0x1400152fc
   14001f628:	int3   
   14001f629:	mov    ecx,0x8007000e
   14001f62e:	call   0x1400152fc
   14001f633:	int3   
   14001f634:	mov    ecx,0x8007000e
   14001f639:	call   0x1400152fc
   14001f63e:	nop
   14001f63f:	mov    rax,QWORD PTR [rbx]
   14001f642:	mov    rdi,QWORD PTR [rax]
   14001f645:	mov    rcx,rdi
   14001f648:	call   QWORD PTR [rip+0x1e0da]        # 0x14003d728
   14001f64e:	mov    edx,0x1
   14001f653:	mov    rcx,rbx
   14001f656:	call   rdi
   14001f658:	nop
   14001f659:	jmp    0x140006652
   14001f65e:	mov    rdx,QWORD PTR [rbx+0x20]
   14001f662:	call   0x14002b12c
   14001f667:	mov    rcx,QWORD PTR [rbx+0x18]
   14001f66b:	call   QWORD PTR [rip+0x1dfd7]        # 0x14003d648
   14001f671:	nop
   14001f672:	jmp    0x1400066a1
   14001f677:	int3   
   14001f678:	mov    ecx,0x80070057
   14001f67d:	call   0x1400152fc
   14001f682:	int3   
   14001f683:	mov    ecx,0x80070057
   14001f688:	call   0x1400152fc
   14001f68d:	int3   
   14001f68e:	call   0x14002afc0
   14001f693:	mov    ecx,eax
   14001f695:	mov    BYTE PTR [rdi+0x4c],0x0
   14001f699:	call   0x1400152fc
   14001f69e:	int3   
   14001f69f:	int3   
   14001f6a0:	mov    rcx,r14
   14001f6a3:	call   QWORD PTR [rip+0x1e07f]        # 0x14003d728
   14001f6a9:	mov    rcx,rbx
   14001f6ac:	call   r14
   14001f6af:	nop
   14001f6b0:	jmp    0x1400067d1
   14001f6b5:	mov    rax,QWORD PTR [r14]
   14001f6b8:	mov    rbx,QWORD PTR [rax]
   14001f6bb:	mov    rcx,rbx
   14001f6be:	call   QWORD PTR [rip+0x1e064]        # 0x14003d728
   14001f6c4:	mov    r8d,0x2
   14001f6ca:	mov    edx,DWORD PTR [rdi-0x10]
   14001f6cd:	mov    rcx,r14
   14001f6d0:	call   rbx
   14001f6d2:	mov    rbx,rax
   14001f6d5:	test   rax,rax
   14001f6d8:	jne    0x14001f6e0
   14001f6da:	call   0x14002dd90
   14001f6df:	int3   
   14001f6e0:	mov    eax,DWORD PTR [rdi-0x10]
   14001f6e3:	mov    DWORD PTR [rbx+0x8],eax
   14001f6e6:	mov    eax,DWORD PTR [rdi-0x10]
   14001f6e9:	inc    eax
   14001f6eb:	movsxd rdx,eax
   14001f6ee:	lea    r9,[rdx+rdx*1]
   14001f6f2:	mov    r8,rdi
   14001f6f5:	add    rdx,rdx
   14001f6f8:	lea    rcx,[rbx+0x18]
   14001f6fc:	call   QWORD PTR [rip+0x1df3e]        # 0x14003d640
   14001f702:	nop
   14001f703:	jmp    0x1400067f0
   14001f708:	mov    rcx,r14
   14001f70b:	call   QWORD PTR [rip+0x1e017]        # 0x14003d728
   14001f711:	mov    rcx,rbx
   14001f714:	call   r14
   14001f717:	nop
   14001f718:	jmp    0x140006820
   14001f71d:	mov    rax,QWORD PTR [r14]
   14001f720:	mov    rbx,QWORD PTR [rax]
   14001f723:	mov    rcx,rbx
   14001f726:	call   QWORD PTR [rip+0x1dffc]        # 0x14003d728
   14001f72c:	mov    r8d,0x2
   14001f732:	mov    edx,DWORD PTR [rdi-0x10]
   14001f735:	mov    rcx,r14
   14001f738:	call   rbx
   14001f73a:	mov    rbx,rax
   14001f73d:	test   rax,rax
   14001f740:	jne    0x14001f748
   14001f742:	call   0x14002dd90
   14001f747:	int3   
   14001f748:	mov    eax,DWORD PTR [rdi-0x10]
   14001f74b:	mov    DWORD PTR [rbx+0x8],eax
   14001f74e:	mov    eax,DWORD PTR [rdi-0x10]
   14001f751:	inc    eax
   14001f753:	movsxd rdx,eax
   14001f756:	lea    r9,[rdx+rdx*1]
   14001f75a:	mov    r8,rdi
   14001f75d:	add    rdx,rdx
   14001f760:	lea    rcx,[rbx+0x18]
   14001f764:	call   QWORD PTR [rip+0x1ded6]        # 0x14003d640
   14001f76a:	nop
   14001f76b:	jmp    0x14000683f
   14001f770:	mov    rcx,r14
   14001f773:	call   QWORD PTR [rip+0x1dfaf]        # 0x14003d728
   14001f779:	mov    rcx,rdi
   14001f77c:	call   r14
   14001f77f:	nop
   14001f780:	jmp    0x14000686f
   14001f785:	mov    rax,QWORD PTR [r14]
   14001f788:	mov    rdi,QWORD PTR [rax]
   14001f78b:	mov    rcx,rdi
   14001f78e:	call   QWORD PTR [rip+0x1df94]        # 0x14003d728
   14001f794:	mov    r8d,0x2
   14001f79a:	mov    edx,DWORD PTR [rbx-0x10]
   14001f79d:	mov    rcx,r14
   14001f7a0:	call   rdi
   14001f7a2:	mov    rdi,rax
   14001f7a5:	test   rax,rax
   14001f7a8:	jne    0x14001f7b0
   14001f7aa:	call   0x14002dd90
   14001f7af:	int3   
   14001f7b0:	mov    eax,DWORD PTR [rbx-0x10]
   14001f7b3:	mov    DWORD PTR [rdi+0x8],eax
   14001f7b6:	mov    eax,DWORD PTR [rbx-0x10]
   14001f7b9:	inc    eax
   14001f7bb:	movsxd rdx,eax
   14001f7be:	lea    r9,[rdx+rdx*1]
   14001f7c2:	mov    r8,rbx
   14001f7c5:	add    rdx,rdx
   14001f7c8:	lea    rcx,[rdi+0x18]
   14001f7cc:	call   QWORD PTR [rip+0x1de6e]        # 0x14003d640
   14001f7d2:	nop
   14001f7d3:	jmp    0x14000688e
   14001f7d8:	mov    rcx,rbx
   14001f7db:	call   QWORD PTR [rip+0x1df47]        # 0x14003d728
   14001f7e1:	lea    rcx,[rip+0x2f620]        # 0x14004ee08
   14001f7e8:	call   rbx
   14001f7ea:	nop
   14001f7eb:	jmp    0x1400068bc
   14001f7f0:	mov    ecx,0x80070057
   14001f7f5:	call   0x1400152fc
   14001f7fa:	int3   
   14001f7fb:	call   0x14002afc0
   14001f800:	mov    ecx,eax
   14001f802:	call   0x1400152fc
   14001f807:	int3   
   14001f808:	mov    rsi,QWORD PTR [r15-0x18]
   14001f80c:	mov    rax,QWORD PTR [rsi]
   14001f80f:	mov    rdi,QWORD PTR [rax+0x8]
   14001f813:	mov    rcx,rdi
   14001f816:	call   QWORD PTR [rip+0x1df0c]        # 0x14003d728
   14001f81c:	lea    rdx,[r15-0x18]
   14001f820:	mov    rcx,rsi
   14001f823:	call   rdi
   14001f825:	nop
   14001f826:	jmp    0x14000695e
   14001f82b:	mov    rsi,QWORD PTR [r15-0x18]
   14001f82f:	mov    rax,QWORD PTR [rsi]
   14001f832:	mov    rdi,QWORD PTR [rax+0x8]
   14001f836:	mov    rcx,rdi
   14001f839:	call   QWORD PTR [rip+0x1dee9]        # 0x14003d728
   14001f83f:	lea    rdx,[r15-0x18]
   14001f843:	mov    rcx,rsi
   14001f846:	call   rdi
   14001f848:	nop
   14001f849:	jmp    0x140006973
   14001f84e:	mov    rsi,QWORD PTR [r15-0x18]
   14001f852:	mov    rax,QWORD PTR [rsi]
   14001f855:	mov    rdi,QWORD PTR [rax+0x8]
   14001f859:	mov    rcx,rdi
   14001f85c:	call   QWORD PTR [rip+0x1dec6]        # 0x14003d728
   14001f862:	lea    rdx,[r15-0x18]
   14001f866:	mov    rcx,rsi
   14001f869:	call   rdi
   14001f86b:	nop
   14001f86c:	jmp    0x140006988
   14001f871:	mov    rdi,QWORD PTR [rsi-0x18]
   14001f875:	mov    rax,QWORD PTR [rdi]
   14001f878:	mov    rbx,QWORD PTR [rax+0x8]
   14001f87c:	mov    rcx,rbx
   14001f87f:	call   QWORD PTR [rip+0x1dea3]        # 0x14003d728
   14001f885:	lea    rdx,[rsi-0x18]
   14001f889:	mov    rcx,rdi
   14001f88c:	call   rbx
   14001f88e:	nop
   14001f88f:	jmp    0x1400069a4
   14001f894:	mov    rcx,rdi
   14001f897:	call   QWORD PTR [rip+0x1de8b]        # 0x14003d728
   14001f89d:	lea    rcx,[rip+0x2f564]        # 0x14004ee08
   14001f8a4:	call   rdi
   14001f8a6:	nop
   14001f8a7:	jmp    0x140006a3e
   14001f8ac:	mov    rcx,rdi
   14001f8af:	call   QWORD PTR [rip+0x1de73]        # 0x14003d728
   14001f8b5:	lea    rcx,[rip+0x2f54c]        # 0x14004ee08
   14001f8bc:	call   rdi
   14001f8be:	nop
   14001f8bf:	jmp    0x140006a64
   14001f8c4:	mov    rcx,rdi
   14001f8c7:	call   QWORD PTR [rip+0x1de5b]        # 0x14003d728
   14001f8cd:	lea    rcx,[rip+0x2f534]        # 0x14004ee08
   14001f8d4:	call   rdi
   14001f8d6:	nop
   14001f8d7:	jmp    0x140006a8a
   14001f8dc:	mov    rcx,rdi
   14001f8df:	call   QWORD PTR [rip+0x1de43]        # 0x14003d728
   14001f8e5:	lea    rcx,[rip+0x2f51c]        # 0x14004ee08
   14001f8ec:	call   rdi
   14001f8ee:	mov    rbx,rax
   14001f8f1:	jmp    0x140006aad
   14001f8f6:	mov    ecx,0x80070057
   14001f8fb:	call   0x1400152fc
   14001f900:	int3   
   14001f901:	mov    ecx,0x80070057
   14001f906:	call   0x1400152fc
   14001f90b:	int3   
   14001f90c:	call   0x14002afc0
   14001f911:	mov    BYTE PTR [r14+0x4c],0x0
   14001f916:	mov    ecx,eax
   14001f918:	call   0x1400152fc
   14001f91d:	int3   
   14001f91e:	mov    ecx,0x80070057
   14001f923:	call   0x1400152fc
   14001f928:	int3   
   14001f929:	int3   
   14001f92a:	mov    rcx,rdi
   14001f92d:	call   QWORD PTR [rip+0x1ddf5]        # 0x14003d728
   14001f933:	lea    rcx,[rip+0x2f4ce]        # 0x14004ee08
   14001f93a:	call   rdi
   14001f93c:	nop
   14001f93d:	jmp    0x140006bfe
   14001f942:	mov    rcx,rdi
   14001f945:	call   QWORD PTR [rip+0x1dddd]        # 0x14003d728
   14001f94b:	lea    rcx,[rip+0x2f4b6]        # 0x14004ee08
   14001f952:	call   rdi
   14001f954:	nop
   14001f955:	jmp    0x140006c26
   14001f95a:	mov    rcx,rdi
   14001f95d:	call   QWORD PTR [rip+0x1ddc5]        # 0x14003d728
   14001f963:	lea    rcx,[rip+0x2f49e]        # 0x14004ee08
   14001f96a:	call   rdi
   14001f96c:	nop
   14001f96d:	jmp    0x140006c4e
   14001f972:	mov    rcx,rdi
   14001f975:	call   QWORD PTR [rip+0x1ddad]        # 0x14003d728
   14001f97b:	lea    rcx,[rip+0x2f486]        # 0x14004ee08
   14001f982:	call   rdi
   14001f984:	nop
   14001f985:	jmp    0x140006c76
   14001f98a:	cmp    DWORD PTR [rcx+0x10],0x0
   14001f98e:	jge    0x14001f9a0
   14001f990:	xor    edx,edx
   14001f992:	mov    rcx,rdi
   14001f995:	call   0x14002db08
   14001f99a:	nop
   14001f99b:	jmp    0x140007492
   14001f9a0:	call   0x14002a074
   14001f9a5:	mov    rax,QWORD PTR [rsi]
   14001f9a8:	mov    rbx,QWORD PTR [rax+0x18]
   14001f9ac:	mov    rcx,rbx
   14001f9af:	call   QWORD PTR [rip+0x1dd73]        # 0x14003d728
   14001f9b5:	mov    rcx,rsi
   14001f9b8:	call   rbx
   14001f9ba:	add    rax,0x18
   14001f9be:	mov    QWORD PTR [rdi],rax
   14001f9c1:	jmp    0x140007492
   14001f9c6:	call   0x14000746c
   14001f9cb:	nop
   14001f9cc:	jmp    0x140007551
   14001f9d1:	mov    ecx,0x80070057
   14001f9d6:	call   0x1400152fc
   14001f9db:	int3   
   14001f9dc:	lea    r8,[rcx+rbp*2]
   14001f9e0:	call   QWORD PTR [rip+0x1dc42]        # 0x14003d628
   14001f9e6:	nop
   14001f9e7:	jmp    0x14000752e
   14001f9ec:	mov    rcx,rdi
   14001f9ef:	call   QWORD PTR [rip+0x1dd33]        # 0x14003d728
   14001f9f5:	mov    rcx,r15
   14001f9f8:	call   rdi
   14001f9fa:	mov    r15,rax
   14001f9fd:	jmp    0x1400075c0
   14001fa02:	mov    rcx,rsi
   14001fa05:	jmp    0x140007623
   14001fa0a:	mov    rcx,rax
   14001fa0d:	call   QWORD PTR [rip+0x1dd15]        # 0x14003d728
   14001fa13:	mov    rdx,QWORD PTR [rsp+0x70]
   14001fa18:	mov    rcx,r13
   14001fa1b:	call   QWORD PTR [rsp+0x78]
   14001fa1f:	nop
   14001fa20:	jmp    0x14000765b
   14001fa25:	mov    rcx,rdi
   14001fa28:	call   QWORD PTR [rip+0x1dcfa]        # 0x14003d728
   14001fa2e:	mov    r8d,0x2
   14001fa34:	mov    edx,ebx
   14001fa36:	mov    rcx,r15
   14001fa39:	call   rdi
   14001fa3b:	mov    rsi,rax
   14001fa3e:	jmp    0x14000767e
   14001fa43:	mov    rdi,QWORD PTR [r14-0x18]
   14001fa47:	mov    rax,QWORD PTR [rdi]
   14001fa4a:	mov    rbx,QWORD PTR [rax+0x8]
   14001fa4e:	mov    rcx,rbx
   14001fa51:	call   QWORD PTR [rip+0x1dcd1]        # 0x14003d728
   14001fa57:	lea    rdx,[r14-0x18]
   14001fa5b:	mov    rcx,rdi
   14001fa5e:	call   rbx
   14001fa60:	nop
   14001fa61:	jmp    0x1400076b9
   14001fa66:	mov    r9d,DWORD PTR [rax-0xc]
   14001fa6a:	cmp    r9d,r8d
   14001fa6d:	jge    0x140007708
   14001fa73:	cmp    r9d,0x40000000
   14001fa7a:	jle    0x14001fa85
   14001fa7c:	add    r9d,0x100000
   14001fa83:	jmp    0x14001fa90
   14001fa85:	mov    eax,r9d
   14001fa88:	cdq    
   14001fa89:	sub    eax,edx
   14001fa8b:	sar    eax,1
   14001fa8d:	add    r9d,eax
   14001fa90:	cmp    r9d,r8d
   14001fa93:	cmovl  r9d,r8d
   14001fa97:	mov    edx,r9d
   14001fa9a:	call   0x14003960c
   14001fa9f:	nop
   14001faa0:	jmp    0x140007708
   14001faa5:	int3   
   14001faa6:	call   0x140013de0
   14001faab:	and    QWORD PTR [rbx],0x0
   14001faaf:	jmp    0x140007777
   14001fab4:	mov    rbx,QWORD PTR [rsp+0x40]
   14001fab9:	mov    edi,DWORD PTR [rsp+0x48]
   14001fabd:	jmp    0x1400077ac
   14001fac2:	or     r8,0xffffffffffffffff
   14001fac6:	jmp    0x14000790d
   14001facb:	mov    ecx,0x80004005
   14001fad0:	call   0x1400152fc
   14001fad5:	int3   
   14001fad6:	mov    ecx,0x8007000e
   14001fadb:	call   0x1400152fc
   14001fae0:	nop
   14001fae1:	mov    rcx,r14
   14001fae4:	call   QWORD PTR [rip+0x1dc3e]        # 0x14003d728
   14001faea:	lea    rcx,[rip+0x2f317]        # 0x14004ee08
   14001faf1:	call   r14
   14001faf4:	nop
   14001faf5:	jmp    0x14000787a
   14001fafa:	int3   
   14001fafb:	int3   
   14001fafc:	mov    ecx,0x8007000e
   14001fb01:	call   0x1400152fc
   14001fb06:	int3   
   14001fb07:	int3   
   14001fb08:	mov    rdx,QWORD PTR [rcx+0x8]
   14001fb0c:	call   0x140007aac
   14001fb11:	mov    edi,eax
   14001fb13:	mov    DWORD PTR [rsp+0x58],eax
   14001fb17:	jmp    0x140007b73
   14001fb1c:	xor    r8d,r8d
   14001fb1f:	mov    edx,edi
   14001fb21:	mov    rcx,r14
   14001fb24:	call   0x140007744
   14001fb29:	nop
   14001fb2a:	jmp    0x140007c3d
   14001fb2f:	xor    ebx,ebx
   14001fb31:	mov    r14,QWORD PTR [rsp+0x50]
   14001fb36:	mov    edi,DWORD PTR [rsp+0x58]
   14001fb3a:	mov    rsi,QWORD PTR [rsp+0x60]
   14001fb3f:	jmp    0x140007bab
   14001fb44:	mov    ecx,0x8007000e
   14001fb49:	call   0x1400152fc
   14001fb4e:	int3   
   14001fb4f:	int3   
   14001fb50:	mov    rcx,r13
   14001fb53:	call   QWORD PTR [rip+0x1dbcf]        # 0x14003d728
   14001fb59:	mov    rdx,r14
   14001fb5c:	mov    rcx,r15
   14001fb5f:	call   r13
   14001fb62:	nop
   14001fb63:	jmp    0x140007d1e
   14001fb68:	cmp    DWORD PTR [rdi+0x30],0x0
   14001fb6c:	jne    0x140007d3c
   14001fb72:	mov    rcx,rdi
   14001fb75:	call   0x140007aac
   14001fb7a:	mov    edx,eax
   14001fb7c:	mov    rcx,rdi
   14001fb7f:	call   0x140007b40
   14001fb84:	nop
   14001fb85:	jmp    0x140007d3c
   14001fb8a:	xor    edx,edx
   14001fb8c:	mov    rcx,rdi
   14001fb8f:	call   0x140007aac
   14001fb94:	mov    edx,eax
   14001fb96:	xor    r8d,r8d
   14001fb99:	mov    rcx,rdi
   14001fb9c:	call   0x140007744
   14001fba1:	nop
   14001fba2:	jmp    0x140007db1
   14001fba7:	int3   
   14001fba8:	mov    rcx,rsi
   14001fbab:	call   QWORD PTR [rip+0x1db77]        # 0x14003d728
   14001fbb1:	mov    rdx,rdi
   14001fbb4:	mov    rcx,rbx
   14001fbb7:	call   rsi
   14001fbb9:	nop
   14001fbba:	jmp    0x140007e15
   14001fbbf:	int3   
   14001fbc0:	mov    rcx,rbp
   14001fbc3:	call   QWORD PTR [rip+0x1db5f]        # 0x14003d728
   14001fbc9:	mov    rdx,r14
   14001fbcc:	mov    rcx,rsi
   14001fbcf:	call   rbp
   14001fbd1:	nop
   14001fbd2:	jmp    0x140007ef0
   14001fbd7:	int3   
   14001fbd8:	test   BYTE PTR [rdx+0x84],0x10
   14001fbdf:	jne    0x140007f5f
   14001fbe5:	jmp    0x14000800b
   14001fbea:	mov    rax,QWORD PTR [rsi]
   14001fbed:	mov    rbx,QWORD PTR [rax+0x20]
   14001fbf1:	mov    rcx,rbx
   14001fbf4:	call   QWORD PTR [rip+0x1db2e]        # 0x14003d728
   14001fbfa:	mov    rcx,rsi
   14001fbfd:	call   rbx
   14001fbff:	test   al,al
   14001fc01:	jne    0x140007fae
   14001fc07:	or     eax,0xffffffff
   14001fc0a:	jmp    0x140007fe2
   14001fc0f:	int3   
   14001fc10:	mov    edx,0xc000007b
   14001fc15:	mov    DWORD PTR [rsp+0x68],edx
   14001fc19:	jmp    0x14000865e
   14001fc1e:	mov    edx,0xc000007b
   14001fc23:	mov    DWORD PTR [rsp+0x68],edx
   14001fc27:	jmp    0x14000865e
   14001fc2c:	mov    edx,0xc000007b
   14001fc31:	mov    DWORD PTR [rsp+0x68],edx
   14001fc35:	jmp    0x14000865e
   14001fc3a:	mov    edx,0xc000007b
   14001fc3f:	mov    DWORD PTR [rsp+0x68],edx
   14001fc43:	jmp    0x14000865e
   14001fc48:	mov    edx,0xc000000d
   14001fc4d:	mov    DWORD PTR [rsp+0x68],edx
   14001fc51:	jmp    0x14000865e
   14001fc56:	movzx  ecx,WORD PTR [rsi+0x10]
   14001fc5a:	neg    cx
   14001fc5d:	jmp    0x14000876d
   14001fc62:	mov    eax,DWORD PTR [r14+0x10]
   14001fc66:	add    rax,rsi
   14001fc69:	cmp    rcx,rax
   14001fc6c:	jae    0x1400087a5
   14001fc72:	mov    edx,0x2e
   14001fc77:	call   QWORD PTR [rip+0x1d9db]        # 0x14003d658
   14001fc7d:	mov    rdi,rax
   14001fc80:	test   rax,rax
   14001fc83:	je     0x14001fdad
   14001fc89:	lea    rcx,[rip+0x1ee60]        # 0x14003eaf0
   14001fc90:	call   QWORD PTR [rip+0x1d59a]        # 0x14003d230
   14001fc96:	mov    QWORD PTR [rbp+0x6d8],rax
   14001fc9d:	test   rax,rax
   14001fca0:	je     0x14001fd95
   14001fca6:	cmp    BYTE PTR [rdi+0x1],0x23
   14001fcaa:	lea    r10,[rdi+0x1]
   14001fcae:	jne    0x14001fd4a
   14001fcb4:	xor    r9d,r9d
   14001fcb7:	lea    rdx,[rdi+0x2]
   14001fcbb:	mov    r10d,r9d
   14001fcbe:	mov    r8d,r9d
   14001fcc1:	mov    ecx,r9d
   14001fcc4:	test   rdx,rdx
   14001fcc7:	je     0x14001fd33
   14001fcc9:	mov    eax,0x1
   14001fcce:	mov    DWORD PTR [rbp+0x134],eax
   14001fcd4:	cmp    WORD PTR [rdx],0x20
   14001fcd8:	jne    0x14001fce4
   14001fcda:	add    rdx,0x2
   14001fcde:	cmp    WORD PTR [rdx],0x20
   14001fce2:	je     0x14001fcda
   14001fce4:	cmp    WORD PTR [rdx],0x2d
   14001fce8:	jne    0x14001fcf1
   14001fcea:	mov    r8d,eax
   14001fced:	add    rdx,0x2
   14001fcf1:	cmp    WORD PTR [rdx],0x20
   14001fcf5:	jne    0x14001fd01
   14001fcf7:	add    rdx,0x2
   14001fcfb:	cmp    WORD PTR [rdx],0x20
   14001fcff:	je     0x14001fcf7
   14001fd01:	movzx  edi,WORD PTR [rdx]
   14001fd04:	test   di,di
   14001fd07:	je     0x14001fd2a
   14001fd09:	lea    eax,[rdi-0x30]
   14001fd0c:	cmp    ax,0x9
   14001fd10:	ja     0x14001fd33
   14001fd12:	add    rdx,0x2
   14001fd16:	movzx  eax,di
   14001fd19:	lea    ecx,[rcx+rcx*4]
   14001fd1c:	lea    ecx,[rcx-0x18]
   14001fd1f:	movzx  edi,WORD PTR [rdx]
   14001fd22:	lea    ecx,[rax+rcx*2]
   14001fd25:	test   di,di
   14001fd28:	jne    0x14001fd09
   14001fd2a:	test   r8d,r8d
   14001fd2d:	je     0x14001fd4e
   14001fd2f:	neg    ecx
   14001fd31:	jmp    0x14001fd4e
   14001fd33:	mov    edx,DWORD PTR [rsp+0x68]
   14001fd37:	mov    edi,DWORD PTR [rbp-0x28]
   14001fd3a:	mov    DWORD PTR [rsp+0x68],edx
   14001fd3e:	mov    DWORD PTR [rbp+0x134],r9d
   14001fd45:	jmp    0x1400087b0
   14001fd4a:	xor    eax,eax
   14001fd4c:	mov    ecx,eax
   14001fd4e:	movzx  edx,cx
   14001fd51:	lea    r9,[rbp+0x4b0]
   14001fd58:	mov    rcx,r10
   14001fd5b:	lea    r8,[rbp+0x6d8]
   14001fd62:	call   0x1400153c4
   14001fd67:	mov    edi,DWORD PTR [rbp-0x28]
   14001fd6a:	xor    r9d,r9d
   14001fd6d:	mov    DWORD PTR [rsp+0x68],eax
   14001fd71:	mov    edx,eax
   14001fd73:	test   eax,eax
   14001fd75:	js     0x1400087a8
   14001fd7b:	mov    rcx,QWORD PTR [rbp+0x4b0]
   14001fd82:	jmp    0x1400087a5
   14001fd87:	mov    edx,0xc000007a
   14001fd8c:	mov    DWORD PTR [rsp+0x68],edx
   14001fd90:	jmp    0x1400087a8
   14001fd95:	xor    r14d,r14d
   14001fd98:	lea    r15,[rip+0x2f3b1]        # 0x14004f150
   14001fd9f:	mov    edi,0xc000007a
   14001fda4:	lea    r12d,[r14+0x60]
   14001fda8:	jmp    0x1400087f2
   14001fdad:	xor    r14d,r14d
   14001fdb0:	lea    r15,[rip+0x2f399]        # 0x14004f150
   14001fdb7:	mov    edi,0xc000007b
   14001fdbc:	lea    r12d,[r14+0x60]
   14001fdc0:	jmp    0x1400087f2
   14001fdc5:	xor    r14d,r14d
   14001fdc8:	mov    edi,0xc000007a
   14001fdcd:	lea    r12d,[r14+0x60]
   14001fdd1:	jmp    0x1400087f2
   14001fdd6:	mov    rcx,r13
   14001fdd9:	call   0x1400155d8
   14001fdde:	lea    rsi,[rip+0x2e23b]        # 0x14004e020
   14001fde5:	mov    r12d,0x60
   14001fdeb:	lea    r15,[rip+0x2f35e]        # 0x14004f150
   14001fdf2:	mov    edi,0xc000007a
   14001fdf7:	jmp    0x1400087f9
   14001fdfc:	mov    edi,DWORD PTR [rsp+0x68]
   14001fe00:	lea    r15,[rip+0x2f349]        # 0x14004f150
   14001fe07:	xor    r14d,r14d
   14001fe0a:	lea    r12d,[r14+0x60]
   14001fe0e:	jmp    0x1400087f2
   14001fe13:	mov    edi,r14d
   14001fe16:	jmp    0x1400087f2
   14001fe1b:	mov    rdi,r15
   14001fe1e:	mov    ebx,0x4
   14001fe23:	mov    rcx,QWORD PTR [rdi]
   14001fe26:	test   rcx,rcx
   14001fe29:	je     0x14001fe31
   14001fe2b:	call   QWORD PTR [rip+0x1d427]        # 0x14003d258
   14001fe31:	add    rdi,0x18
   14001fe35:	sub    rbx,0x1
   14001fe39:	jne    0x14001fe23
   14001fe3b:	mov    r8,r12
   14001fe3e:	xor    edx,edx
   14001fe40:	mov    rcx,r15
   14001fe43:	call   0x140014694
   14001fe48:	mov    r8d,0x170
   14001fe4e:	lea    rdx,[rip+0x2191b]        # 0x140041770
   14001fe55:	mov    rcx,rsi
   14001fe58:	call   0x1400156f2
   14001fe5d:	mov    r13d,0x80004005
   14001fe63:	jmp    0x140008837
   14001fe68:	call   QWORD PTR [rip+0x1d2fa]        # 0x14003d168
   14001fe6e:	mov    ebx,eax
   14001fe70:	test   eax,eax
   14001fe72:	jle    0x14001fe7d
   14001fe74:	movzx  ebx,ax
   14001fe77:	or     ebx,0x80070000
   14001fe7d:	test   ebx,ebx
   14001fe7f:	js     0x1400089b9
   14001fe85:	mov    ebx,r13d
   14001fe88:	jmp    0x1400089b9
   14001fe8d:	mov    ebx,0x8007000e
   14001fe92:	jmp    0x1400088cc
   14001fe97:	test   eax,eax
   14001fe99:	je     0x14001fea7
   14001fe9b:	jg     0x14001feb2
   14001fe9d:	mov    ebx,eax
   14001fe9f:	xor    r15d,r15d
   14001fea2:	jmp    0x1400088d6
   14001fea7:	mov    ebx,r13d
   14001feaa:	xor    r15d,r15d
   14001fead:	jmp    0x1400088d6
   14001feb2:	movzx  ebx,ax
   14001feb5:	or     ebx,0x80070000
   14001febb:	xor    r15d,r15d
   14001febe:	jmp    0x1400088d6
   14001fec3:	call   QWORD PTR [rip+0x1d29f]        # 0x14003d168
   14001fec9:	mov    ebx,eax
   14001fecb:	test   eax,eax
   14001fecd:	jle    0x14001fed8
   14001fecf:	movzx  ebx,ax
   14001fed2:	or     ebx,0x80070000
   14001fed8:	test   ebx,ebx
   14001feda:	js     0x1400089b9
   14001fee0:	mov    ebx,r13d
   14001fee3:	jmp    0x1400089b9
   14001fee8:	mov    ebx,0x8007000e
   14001feed:	jmp    0x14000895a
   14001fef2:	test   eax,eax
   14001fef4:	je     0x14001feff
   14001fef6:	jg     0x14001ff07
   14001fef8:	mov    ebx,eax
   14001fefa:	jmp    0x140008963
   14001feff:	mov    ebx,r13d
   14001ff02:	jmp    0x140008963
   14001ff07:	movzx  ebx,ax
   14001ff0a:	or     ebx,0x80070000
   14001ff10:	jmp    0x140008963
   14001ff15:	mov    DWORD PTR [rbp+0x8c],r14d
   14001ff1c:	jmp    0x1400089dc
   14001ff21:	mov    r15d,0x8007000e
   14001ff27:	mov    esi,DWORD PTR [rbp+0x140]
   14001ff2d:	lea    r13,[rip+0x2f21c]        # 0x14004f150
   14001ff34:	mov    ebx,0x1
   14001ff39:	lea    r12,[rip+0x2e0e0]        # 0x14004e020
   14001ff40:	jmp    0x14000afb2
   14001ff45:	mov    r15d,0xc0000017
   14001ff4b:	jmp    0x14000aed0
   14001ff50:	mov    rsi,QWORD PTR [rsp+0x78]
   14001ff55:	mov    r15d,0xc0000017
   14001ff5b:	jmp    0x14000aed0
   14001ff60:	mov    edi,DWORD PTR [rbp+0x7c]
   14001ff63:	jmp    0x140008b49
   14001ff68:	or     r10d,0xffffffff
   14001ff6c:	mov    r15d,0xc0000095
   14001ff72:	xor    ebx,ebx
   14001ff74:	jmp    0x140008b88
   14001ff79:	or     r9d,0xffffffff
   14001ff7d:	mov    r15d,0xc0000095
   14001ff83:	jmp    0x140008bc8
   14001ff88:	or     r11d,0xffffffff
   14001ff8c:	mov    r15d,0xc0000095
   14001ff92:	jmp    0x140008c0a
   14001ff97:	mov    r15d,0xc000003e
   14001ff9d:	jmp    0x140020b80
   14001ffa2:	or     r9d,0xffffffff
   14001ffa6:	mov    r15d,0xc0000095
   14001ffac:	jmp    0x140008c74
   14001ffb1:	or     r10d,0xffffffff
   14001ffb5:	mov    r15d,0xc0000095
   14001ffbb:	jmp    0x140008cb3
   14001ffc0:	or     eax,0xffffffff
   14001ffc3:	mov    r15d,0xc0000095
   14001ffc9:	jmp    0x140008cf0
   14001ffce:	mov    r15d,0xc0000017
   14001ffd4:	jmp    0x140020b80
   14001ffd9:	mov    r15d,0xc0000023
   14001ffdf:	jmp    0x140020b80
   14001ffe4:	mov    r15d,0xc000000d
   14001ffea:	jmp    0x140008d83
   14001ffef:	lea    r8,[rbp+0x454]
   14001fff6:	mov    edx,esi
   14001fff8:	mov    ecx,0x4
   14001fffd:	call   0x14000bad0
   140020002:	mov    edx,DWORD PTR [rbp+0x178]
   140020008:	test   eax,eax
   14002000a:	mov    r15d,eax
   14002000d:	cmovns edx,DWORD PTR [rbp+0x454]
   140020014:	mov    DWORD PTR [rbp+0x178],edx
   14002001a:	js     0x140008e39
   140020020:	mov    ecx,DWORD PTR [rbp-0x54]
   140020023:	lea    r8,[rbp-0x54]
   140020027:	call   0x14000bad0
   14002002c:	mov    edi,DWORD PTR [rbp-0x58]
   14002002f:	mov    r15d,eax
   140020032:	test   eax,eax
   140020034:	js     0x140008e39
   14002003a:	inc    edi
   14002003c:	mov    DWORD PTR [rbp-0x58],edi
   14002003f:	jmp    0x140008e42
   140020044:	mov    r15d,0xc0000023
   14002004a:	jmp    0x140020b80
   14002004f:	mov    r15d,0xc000000d
   140020055:	jmp    0x140008e39
   14002005a:	lea    r8,[rbp+0x470]
   140020061:	mov    edx,r12d
   140020064:	mov    ecx,0x4
   140020069:	call   0x14000bad0
   14002006e:	mov    edx,DWORD PTR [rbp+0x130]
   140020074:	test   eax,eax
   140020076:	mov    r15d,eax
   140020079:	cmovns edx,DWORD PTR [rbp+0x470]
   140020080:	mov    DWORD PTR [rbp+0x130],edx
   140020086:	js     0x140008ee3
   14002008c:	mov    ecx,DWORD PTR [rbp-0x54]
   14002008f:	lea    r8,[rbp-0x54]
   140020093:	call   0x14000bad0
   140020098:	mov    edi,DWORD PTR [rbp-0x58]
   14002009b:	mov    r15d,eax
   14002009e:	test   eax,eax
   1400200a0:	js     0x140008ee3
   1400200a6:	inc    edi
   1400200a8:	mov    DWORD PTR [rbp-0x58],edi
   1400200ab:	jmp    0x140008eec
   1400200b0:	mov    r15d,0xc0000095
   1400200b6:	jmp    0x140008e80
   1400200bb:	mov    r15d,0xc0000023
   1400200c1:	jmp    0x140020b80
   1400200c6:	mov    r15d,0xc000000d
   1400200cc:	jmp    0x140008ee3
   1400200d1:	mov    edx,0x8
   1400200d6:	lea    r8,[rbp+0x41c]
   1400200dd:	lea    ecx,[rdx-0x4]
   1400200e0:	call   0x14000bad0
   1400200e5:	mov    edx,DWORD PTR [rbp+0x188]
   1400200eb:	test   eax,eax
   1400200ed:	mov    r15d,eax
   1400200f0:	cmovns edx,DWORD PTR [rbp+0x41c]
   1400200f7:	mov    DWORD PTR [rbp+0x188],edx
   1400200fd:	js     0x140020139
   1400200ff:	mov    ecx,DWORD PTR [rbp-0x54]
   140020102:	lea    r8,[rbp-0x54]
   140020106:	call   0x14000bad0
   14002010b:	mov    r15d,eax
   14002010e:	test   eax,eax
   140020110:	js     0x140020139
   140020112:	inc    DWORD PTR [rbp-0x58]
   140020115:	xor    r10d,r10d
   140020118:	jmp    0x140008fa9
   14002011d:	mov    r15d,0xc0000095
   140020123:	jmp    0x140008f44
   140020128:	mov    r15d,0xc0000023
   14002012e:	jmp    0x140020b80
   140020133:	mov    r15d,0xc000000d
   140020139:	xor    r10d,r10d
   14002013c:	jmp    0x140008fa0
   140020141:	mov    QWORD PTR [rbp+0x280],r10
   140020148:	mov    r15d,0xc000003e
   14002014e:	jmp    0x140020b80
   140020153:	lea    r8,[rbp+0x2c0]
   14002015a:	mov    edx,r9d
   14002015d:	mov    ecx,0x4
   140020162:	call   0x14000bad0
   140020167:	mov    edx,DWORD PTR [rbp+0x138]
   14002016d:	test   eax,eax
   14002016f:	mov    r15d,eax
   140020172:	cmovns edx,DWORD PTR [rbp+0x2c0]
   140020179:	mov    DWORD PTR [rbp+0x138],edx
   14002017f:	js     0x140009081
   140020185:	mov    ecx,DWORD PTR [rbp-0x54]
   140020188:	lea    r8,[rbp-0x54]
   14002018c:	call   0x14000bad0
   140020191:	mov    r15d,eax
   140020194:	test   eax,eax
   140020196:	js     0x140009081
   14002019c:	inc    DWORD PTR [rbp-0x58]
   14002019f:	mov    r15d,r10d
   1400201a2:	jmp    0x140009081
   1400201a7:	mov    r15d,0xc0000095
   1400201ad:	jmp    0x14000901c
   1400201b2:	mov    r15d,0xc0000023
   1400201b8:	jmp    0x140009081
   1400201bd:	mov    r15d,0xc0000095
   1400201c3:	jmp    0x140009081
   1400201c8:	mov    r15d,0xc000000d
   1400201ce:	jmp    0x140009081
   1400201d3:	mov    edx,0x4
   1400201d8:	lea    r8,[rbp+0x328]
   1400201df:	mov    ecx,edx
   1400201e1:	call   0x14000bad0
   1400201e6:	mov    edx,DWORD PTR [rbp+0x174]
   1400201ec:	test   eax,eax
   1400201ee:	mov    r15d,eax
   1400201f1:	cmovns edx,DWORD PTR [rbp+0x328]
   1400201f8:	mov    DWORD PTR [rbp+0x174],edx
   1400201fe:	js     0x140009141
   140020204:	mov    ecx,DWORD PTR [rbp-0x54]
   140020207:	lea    r8,[rbp-0x54]
   14002020b:	call   0x14000bad0
   140020210:	mov    r15d,eax
   140020213:	test   eax,eax
   140020215:	js     0x140009141
   14002021b:	inc    DWORD PTR [rbp-0x58]
   14002021e:	jmp    0x14000914a
   140020223:	mov    r15d,0xc0000095
   140020229:	jmp    0x1400090e9
   14002022e:	mov    r15d,0xc0000023
   140020234:	jmp    0x140020b80
   140020239:	mov    r15d,0xc000000d
   14002023f:	jmp    0x140009141
   140020244:	mov    edx,0x4
   140020249:	lea    r8,[rbp+0x378]
   140020250:	mov    ecx,edx
   140020252:	call   0x14000bad0
   140020257:	mov    edx,DWORD PTR [rbp+0x148]
   14002025d:	test   eax,eax
   14002025f:	mov    r15d,eax
   140020262:	cmovns edx,DWORD PTR [rbp+0x378]
   140020269:	mov    DWORD PTR [rbp+0x148],edx
   14002026f:	js     0x1400091f3
   140020275:	mov    ecx,DWORD PTR [rbp-0x54]
   140020278:	lea    r8,[rbp-0x54]
   14002027c:	call   0x14000bad0
   140020281:	mov    r15d,eax
   140020284:	test   eax,eax
   140020286:	js     0x1400091f3
   14002028c:	inc    DWORD PTR [rbp-0x58]
   14002028f:	jmp    0x1400091fc
   140020294:	mov    r15d,0xc0000095
   14002029a:	jmp    0x14000919b
   14002029f:	mov    r15d,0xc0000023
   1400202a5:	jmp    0x140020b80
   1400202aa:	mov    r15d,0xc000000d
   1400202b0:	jmp    0x1400091f3
   1400202b5:	mov    edi,DWORD PTR [rbp+0x84]
   1400202bb:	jmp    0x140009226
   1400202c0:	mov    r14d,DWORD PTR [rbp+0x90]
   1400202c7:	jmp    0x140009385
   1400202cc:	mov    r15d,0xc0000095
   1400202d2:	jmp    0x1400094d3
   1400202d7:	mov    r15d,0xc0000017
   1400202dd:	jmp    0x1400202f3
   1400202df:	call   QWORD PTR [rip+0x1cedb]        # 0x14003d1c0
   1400202e5:	mov    r8,rdi
   1400202e8:	xor    edx,edx
   1400202ea:	mov    rcx,rax
   1400202ed:	call   QWORD PTR [rip+0x1ceed]        # 0x14003d1e0
   1400202f3:	mov    rdi,rsi
   1400202f6:	jmp    0x1400094d0
   1400202fb:	mov    r15d,0xc000000d
   140020301:	jmp    0x140009af4
   140020306:	mov    DWORD PTR [rbp-0x80],r10d
   14002030a:	mov    r9d,r10d
   14002030d:	mov    r8d,r10d
   140020310:	test   edx,edx
   140020312:	jle    0x140020345
   140020314:	mov    edi,0x38
   140020319:	movzx  eax,BYTE PTR [rsi]
   14002031c:	cmp    r8d,0x4
   140020320:	jge    0x14002032c
   140020322:	lea    ecx,[rdi-0x20]
   140020325:	shl    eax,cl
   140020327:	or     r9d,eax
   14002032a:	jmp    0x140020333
   14002032c:	mov    ecx,edi
   14002032e:	shl    eax,cl
   140020330:	or     r13d,eax
   140020333:	inc    rsi
   140020336:	inc    r8d
   140020339:	sub    edi,0x8
   14002033c:	cmp    r8d,edx
   14002033f:	jl     0x140020319
   140020341:	mov    DWORD PTR [rbp-0x80],r9d
   140020345:	mov    edi,r9d
   140020348:	mov    r11d,r13d
   14002034b:	xor    edi,0x4e61f5c7
   140020351:	xor    r11d,0x1be6ba80
   140020358:	mov    DWORD PTR [rbp+0x8],edi
   14002035b:	mov    eax,r10d
   14002035e:	mov    DWORD PTR [rbp-0x8],r11d
   140020362:	test   edx,edx
   140020364:	jle    0x14002038a
   140020366:	cmp    eax,0x4
   140020369:	jge    0x140020373
   14002036b:	rol    edi,0x8
   14002036e:	mov    BYTE PTR [rbx],dil
   140020371:	jmp    0x14002037a
   140020373:	rol    r11d,0x8
   140020377:	mov    BYTE PTR [rbx],r11b
   14002037a:	inc    rbx
   14002037d:	inc    eax
   14002037f:	cmp    eax,edx
   140020381:	jl     0x140020366
   140020383:	mov    edi,DWORD PTR [rbp+0x8]
   140020386:	mov    r11d,DWORD PTR [rbp-0x8]
   14002038a:	lea    eax,[rdx-0x4]
   14002038d:	test   eax,eax
   14002038f:	jle    0x1400203a7
   140020391:	mov    ecx,0x4
   140020396:	sub    ecx,eax
   140020398:	shl    ecx,0x3
   14002039b:	shr    r11d,cl
   14002039e:	shl    r11d,cl
   1400203a1:	mov    DWORD PTR [rbp-0x8],r11d
   1400203a5:	jmp    0x1400203c0
   1400203a7:	mov    DWORD PTR [rbp-0x8],r10d
   1400203ab:	mov    r11d,r10d
   1400203ae:	test   eax,eax
   1400203b0:	jns    0x1400203c0
   1400203b2:	neg    eax
   1400203b4:	shl    eax,0x3
   1400203b7:	mov    ecx,eax
   1400203b9:	shr    edi,cl
   1400203bb:	shl    edi,cl
   1400203bd:	mov    DWORD PTR [rbp+0x8],edi
   1400203c0:	mov    r8,QWORD PTR [rbp-0x38]
   1400203c4:	jmp    0x14000960a
   1400203c9:	mov    rsi,QWORD PTR [rbp-0x18]
   1400203cd:	mov    r15d,0xc0000017
   1400203d3:	xor    r10d,r10d
   1400203d6:	jmp    0x140009aa3
   1400203db:	mov    r15d,0xc0000017
   1400203e1:	mov    rbx,QWORD PTR [rdi+0x8]
   1400203e5:	test   rbx,rbx
   1400203e8:	je     0x140020406
   1400203ea:	call   QWORD PTR [rip+0x1cdd0]        # 0x14003d1c0
   1400203f0:	mov    r8,rbx
   1400203f3:	xor    edx,edx
   1400203f5:	mov    rcx,rax
   1400203f8:	call   QWORD PTR [rip+0x1cde2]        # 0x14003d1e0
   1400203fe:	xor    esi,esi
   140020400:	mov    QWORD PTR [rdi+0x8],rsi
   140020404:	jmp    0x140020408
   140020406:	xor    esi,esi
   140020408:	mov    rbx,QWORD PTR [rdi+0x18]
   14002040c:	test   rbx,rbx
   14002040f:	je     0x140020429
   140020411:	call   QWORD PTR [rip+0x1cda9]        # 0x14003d1c0
   140020417:	mov    r8,rbx
   14002041a:	xor    edx,edx
   14002041c:	mov    rcx,rax
   14002041f:	call   QWORD PTR [rip+0x1cdbb]        # 0x14003d1e0
   140020425:	mov    QWORD PTR [rdi+0x18],rsi
   140020429:	mov    rbx,QWORD PTR [rdi+0x28]
   14002042d:	test   rbx,rbx
   140020430:	je     0x14002044a
   140020432:	call   QWORD PTR [rip+0x1cd88]        # 0x14003d1c0
   140020438:	mov    r8,rbx
   14002043b:	xor    edx,edx
   14002043d:	mov    rcx,rax
   140020440:	call   QWORD PTR [rip+0x1cd9a]        # 0x14003d1e0
   140020446:	mov    QWORD PTR [rdi+0x28],rsi
   14002044a:	call   QWORD PTR [rip+0x1cd70]        # 0x14003d1c0
   140020450:	mov    r8,rdi
   140020453:	xor    edx,edx
   140020455:	mov    rcx,rax
   140020458:	call   QWORD PTR [rip+0x1cd82]        # 0x14003d1e0
   14002045e:	mov    rsi,QWORD PTR [rbp-0x18]
   140020462:	xor    r10d,r10d
   140020465:	jmp    0x140009aa3
   14002046a:	mov    r15d,0xc0000001
   140020470:	jmp    0x140009aba
   140020475:	xor    ebx,ebx
   140020477:	jmp    0x140009ae7
   14002047c:	mov    rdi,QWORD PTR [rsi+0x8]
   140020480:	test   rdi,rdi
   140020483:	je     0x14002049d
   140020485:	call   QWORD PTR [rip+0x1cd35]        # 0x14003d1c0
   14002048b:	mov    r8,rdi
   14002048e:	xor    edx,edx
   140020490:	mov    rcx,rax
   140020493:	call   QWORD PTR [rip+0x1cd47]        # 0x14003d1e0
   140020499:	mov    QWORD PTR [rsi+0x8],rbx
   14002049d:	mov    rdi,QWORD PTR [rsi+0x18]
   1400204a1:	test   rdi,rdi
   1400204a4:	je     0x1400204be
   1400204a6:	call   QWORD PTR [rip+0x1cd14]        # 0x14003d1c0
   1400204ac:	mov    r8,rdi
   1400204af:	xor    edx,edx
   1400204b1:	mov    rcx,rax
   1400204b4:	call   QWORD PTR [rip+0x1cd26]        # 0x14003d1e0
   1400204ba:	mov    QWORD PTR [rsi+0x18],rbx
   1400204be:	mov    rdi,QWORD PTR [rsi+0x28]
   1400204c2:	test   rdi,rdi
   1400204c5:	je     0x1400204df
   1400204c7:	call   QWORD PTR [rip+0x1ccf3]        # 0x14003d1c0
   1400204cd:	mov    r8,rdi
   1400204d0:	xor    edx,edx
   1400204d2:	mov    rcx,rax
   1400204d5:	call   QWORD PTR [rip+0x1cd05]        # 0x14003d1e0
   1400204db:	mov    QWORD PTR [rsi+0x28],rbx
   1400204df:	call   QWORD PTR [rip+0x1ccdb]        # 0x14003d1c0
   1400204e5:	mov    r8,rsi
   1400204e8:	xor    edx,edx
   1400204ea:	mov    rcx,rax
   1400204ed:	call   QWORD PTR [rip+0x1cced]        # 0x14003d1e0
   1400204f3:	nop
   1400204f4:	jmp    0x140009af0
   1400204f9:	mov    eax,DWORD PTR [rbp+0x218]
   1400204ff:	jmp    0x140009b9c
   140020504:	mov    r15d,0xc0000017
   14002050a:	jmp    0x140009cef
   14002050f:	call   QWORD PTR [rip+0x1ccab]        # 0x14003d1c0
   140020515:	mov    r8,rsi
   140020518:	xor    edx,edx
   14002051a:	mov    rcx,rax
   14002051d:	call   QWORD PTR [rip+0x1ccbd]        # 0x14003d1e0
   140020523:	nop
   140020524:	jmp    0x140009cef
   140020529:	mov    r15d,0xc0000095
   14002052f:	jmp    0x140009d89
   140020534:	mov    r15d,0xc000000d
   14002053a:	xor    r14d,r14d
   14002053d:	jmp    0x140009f77
   140020542:	mov    r15d,0xc000000d
   140020548:	jmp    0x140009f77
   14002054d:	mov    rax,r14
   140020550:	mov    QWORD PTR [rbp+0x118],rax
   140020557:	jmp    0x140009e2f
   14002055c:	mov    r15d,0xc000000d
   140020562:	jmp    0x140009f77
   140020567:	mov    rax,r14
   14002056a:	mov    QWORD PTR [rbp+0x1d0],rax
   140020571:	jmp    0x140009eb9
   140020576:	mov    eax,DWORD PTR [rbp+0x318]
   14002057c:	jmp    0x140009f5d
   140020581:	mov    r15d,0x8000ffff
   140020587:	jmp    0x14000a8b2
   14002058c:	mov    r15d,0xc0000095
   140020592:	jmp    0x140009f77
   140020597:	mov    rbx,QWORD PTR [rbp+0x128]
   14002059e:	mov    r15d,0xc0000017
   1400205a4:	jmp    0x140009fb3
   1400205a9:	mov    r15d,0x80070057
   1400205af:	jmp    0x14000a8b2
   1400205b4:	mov    r15d,0x80070057
   1400205ba:	jmp    0x14000a8b2
   1400205bf:	call   QWORD PTR [rip+0x1cba3]        # 0x14003d168
   1400205c5:	mov    r15d,eax
   1400205c8:	test   eax,eax
   1400205ca:	jle    0x1400205d7
   1400205cc:	movzx  r15d,ax
   1400205d0:	or     r15d,0x80070000
   1400205d7:	test   r15d,r15d
   1400205da:	js     0x1400205ed
   1400205dc:	mov    edx,DWORD PTR [rbp+0x80]
   1400205e2:	mov    r15d,0x80004005
   1400205e8:	jmp    0x14000a081
   1400205ed:	mov    edx,DWORD PTR [rbp+0x80]
   1400205f3:	jmp    0x14000a074
   1400205f8:	mov    r15d,0x8007007a
   1400205fe:	jmp    0x14000a8b2
   140020603:	mov    r15d,0xc000003e
   140020609:	jmp    0x1400207aa
   14002060e:	mov    r15d,0xc000003e
   140020614:	jmp    0x1400207a7
   140020619:	mov    r15d,0xc000003e
   14002061f:	jmp    0x1400207a7
   140020624:	mov    r15d,0xc000003e
   14002062a:	jmp    0x1400207a7
   14002062f:	mov    r15d,0xc000003e
   140020635:	jmp    0x1400207a7
   14002063a:	mov    r15d,0xc000003e
   140020640:	jmp    0x1400207a7
   140020645:	mov    r15d,0xc000003e
   14002064b:	jmp    0x1400207a7
   140020650:	mov    r15d,0xc000003e
   140020656:	jmp    0x1400207a7
   14002065b:	mov    rdi,QWORD PTR [rbp-0x18]
   14002065f:	mov    r15d,0xc0000017
   140020665:	xor    r14d,r14d
   140020668:	jmp    0x14000a26e
   14002066d:	xor    r14d,r14d
   140020670:	mov    r15d,0xc0000017
   140020676:	mov    rbx,QWORD PTR [rdi+0x8]
   14002067a:	test   rbx,rbx
   14002067d:	je     0x140020697
   14002067f:	call   QWORD PTR [rip+0x1cb3b]        # 0x14003d1c0
   140020685:	mov    r8,rbx
   140020688:	xor    edx,edx
   14002068a:	mov    rcx,rax
   14002068d:	call   QWORD PTR [rip+0x1cb4d]        # 0x14003d1e0
   140020693:	mov    QWORD PTR [rdi+0x8],r14
   140020697:	mov    rbx,QWORD PTR [rdi+0x18]
   14002069b:	test   rbx,rbx
   14002069e:	je     0x1400206b8
   1400206a0:	call   QWORD PTR [rip+0x1cb1a]        # 0x14003d1c0
   1400206a6:	mov    r8,rbx
   1400206a9:	xor    edx,edx
   1400206ab:	mov    rcx,rax
   1400206ae:	call   QWORD PTR [rip+0x1cb2c]        # 0x14003d1e0
   1400206b4:	mov    QWORD PTR [rdi+0x18],r14
   1400206b8:	mov    rbx,QWORD PTR [rdi+0x28]
   1400206bc:	test   rbx,rbx
   1400206bf:	je     0x1400206d9
   1400206c1:	call   QWORD PTR [rip+0x1caf9]        # 0x14003d1c0
   1400206c7:	mov    r8,rbx
   1400206ca:	xor    edx,edx
   1400206cc:	mov    rcx,rax
   1400206cf:	call   QWORD PTR [rip+0x1cb0b]        # 0x14003d1e0
   1400206d5:	mov    QWORD PTR [rdi+0x28],r14
   1400206d9:	call   QWORD PTR [rip+0x1cae1]        # 0x14003d1c0
   1400206df:	mov    r8,rdi
   1400206e2:	xor    edx,edx
   1400206e4:	mov    rcx,rax
   1400206e7:	call   QWORD PTR [rip+0x1caf3]        # 0x14003d1e0
   1400206ed:	mov    rdi,QWORD PTR [rbp-0x18]
   1400206f1:	jmp    0x14000a26e
   1400206f6:	xor    r14d,r14d
   1400206f9:	mov    DWORD PTR [rdi],r14d
   1400206fc:	mov    QWORD PTR [rdi+0x8],r14
   140020700:	jmp    0x14000a1e8
   140020705:	mov    DWORD PTR [rdi+0x10],r14d
   140020709:	mov    QWORD PTR [rdi+0x18],r14
   14002070d:	jmp    0x14000a229
   140020712:	mov    DWORD PTR [rdi+0x20],r14d
   140020716:	mov    QWORD PTR [rdi+0x28],r14
   14002071a:	jmp    0x14000a26e
   14002071f:	test   rdi,rdi
   140020722:	je     0x1400207aa
   140020728:	mov    rbx,QWORD PTR [rdi+0x8]
   14002072c:	test   rbx,rbx
   14002072f:	je     0x140020749
   140020731:	call   QWORD PTR [rip+0x1ca89]        # 0x14003d1c0
   140020737:	mov    r8,rbx
   14002073a:	xor    edx,edx
   14002073c:	mov    rcx,rax
   14002073f:	call   QWORD PTR [rip+0x1ca9b]        # 0x14003d1e0
   140020745:	mov    QWORD PTR [rdi+0x8],r14
   140020749:	mov    rbx,QWORD PTR [rdi+0x18]
   14002074d:	test   rbx,rbx
   140020750:	je     0x14002076a
   140020752:	call   QWORD PTR [rip+0x1ca68]        # 0x14003d1c0
   140020758:	mov    r8,rbx
   14002075b:	xor    edx,edx
   14002075d:	mov    rcx,rax
   140020760:	call   QWORD PTR [rip+0x1ca7a]        # 0x14003d1e0
   140020766:	mov    QWORD PTR [rdi+0x18],r14
   14002076a:	mov    rbx,QWORD PTR [rdi+0x28]
   14002076e:	test   rbx,rbx
   140020771:	je     0x14002078b
   140020773:	call   QWORD PTR [rip+0x1ca47]        # 0x14003d1c0
   140020779:	mov    r8,rbx
   14002077c:	xor    edx,edx
   14002077e:	mov    rcx,rax
   140020781:	call   QWORD PTR [rip+0x1ca59]        # 0x14003d1e0
   140020787:	mov    QWORD PTR [rdi+0x28],r14
   14002078b:	call   QWORD PTR [rip+0x1ca2f]        # 0x14003d1c0
   140020791:	mov    r8,rdi
   140020794:	xor    edx,edx
   140020796:	mov    rcx,rax
   140020799:	call   QWORD PTR [rip+0x1ca41]        # 0x14003d1e0
   14002079f:	jmp    0x1400207aa
   1400207a1:	mov    r15d,0xc0000095
   1400207a7:	xor    r14d,r14d
   1400207aa:	mov    rsi,QWORD PTR [rsp+0x60]
   1400207af:	jmp    0x14000a27f
   1400207b4:	mov    r15d,0xc000000d
   1400207ba:	jmp    0x1400208d4
   1400207bf:	mov    r15d,0xc000000d
   1400207c5:	jmp    0x1400208d4
   1400207ca:	mov    r15d,0xc000000d
   1400207d0:	jmp    0x1400208d4
   1400207d5:	mov    DWORD PTR [rbp-0x20],0xffffffff
   1400207dc:	mov    r12d,r14d
   1400207df:	mov    r8d,r14d
   1400207e2:	test   edx,edx
   1400207e4:	jle    0x140020813
   1400207e6:	mov    edi,0x38
   1400207eb:	movzx  eax,BYTE PTR [rsi]
   1400207ee:	cmp    r8d,0x4
   1400207f2:	jge    0x1400207fe
   1400207f4:	lea    ecx,[rdi-0x20]
   1400207f7:	shl    eax,cl
   1400207f9:	or     r13d,eax
   1400207fc:	jmp    0x140020805
   1400207fe:	mov    ecx,edi
   140020800:	shl    eax,cl
   140020802:	or     r12d,eax
   140020805:	inc    rsi
   140020808:	inc    r8d
   14002080b:	sub    edi,0x8
   14002080e:	cmp    r8d,edx
   140020811:	jl     0x1400207eb
   140020813:	mov    edi,r13d
   140020816:	mov    r11d,r12d
   140020819:	xor    edi,0xdc90ac75
   14002081f:	xor    r11d,0xe04bfdaa
   140020826:	mov    DWORD PTR [rbp+0x0],edi
   140020829:	mov    eax,r14d
   14002082c:	mov    DWORD PTR [rbp-0x20],r11d
   140020830:	test   edx,edx
   140020832:	jle    0x140020858
   140020834:	cmp    eax,0x4
   140020837:	jge    0x140020841
   140020839:	rol    edi,0x8
   14002083c:	mov    BYTE PTR [rbx],dil
   14002083f:	jmp    0x140020848
   140020841:	rol    r11d,0x8
   140020845:	mov    BYTE PTR [rbx],r11b
   140020848:	inc    rbx
   14002084b:	inc    eax
   14002084d:	cmp    eax,edx
   14002084f:	jl     0x140020834
   140020851:	mov    edi,DWORD PTR [rbp+0x0]
   140020854:	mov    r11d,DWORD PTR [rbp-0x20]
   140020858:	lea    eax,[rdx-0x4]
   14002085b:	test   eax,eax
   14002085d:	jle    0x140020875
   14002085f:	mov    ecx,0x4
   140020864:	sub    ecx,eax
   140020866:	shl    ecx,0x3
   140020869:	shr    r11d,cl
   14002086c:	shl    r11d,cl
   14002086f:	mov    DWORD PTR [rbp-0x20],r11d
   140020873:	jmp    0x14002088e
   140020875:	mov    DWORD PTR [rbp-0x20],r14d
   140020879:	mov    r11d,r14d
   14002087c:	test   eax,eax
   14002087e:	jns    0x14002088e
   140020880:	neg    eax
   140020882:	shl    eax,0x3
   140020885:	mov    ecx,eax
   140020887:	shr    edi,cl
   140020889:	shl    edi,cl
   14002088b:	mov    DWORD PTR [rbp+0x0],edi
   14002088e:	mov    r8,QWORD PTR [rbp-0x10]
   140020892:	mov    eax,DWORD PTR [rbp-0x68]
   140020895:	jmp    0x14000a318
   14002089a:	mov    rcx,r8
   14002089d:	call   0x1400155d8
   1400208a2:	mov    rsi,QWORD PTR [rsp+0x60]
   1400208a7:	mov    rdi,QWORD PTR [rbp+0x270]
   1400208ae:	mov    r15d,0xc0000001
   1400208b4:	test   rdi,rdi
   1400208b7:	je     0x1400208d4
   1400208b9:	call   QWORD PTR [rip+0x1c901]        # 0x14003d1c0
   1400208bf:	mov    r8,rdi
   1400208c2:	xor    edx,edx
   1400208c4:	mov    rcx,rax
   1400208c7:	call   QWORD PTR [rip+0x1c913]        # 0x14003d1e0
   1400208cd:	mov    QWORD PTR [rbp+0x270],r14
   1400208d4:	mov    r8,QWORD PTR [rbp-0x30]
   1400208d8:	jmp    0x14000a712
   1400208dd:	mov    r15d,0xc000003e
   1400208e3:	jmp    0x14000a8ad
   1400208e8:	mov    r15d,0xc000003e
   1400208ee:	jmp    0x14000a8ad
   1400208f3:	mov    r15d,0xc000003e
   1400208f9:	jmp    0x14000a8ad
   1400208fe:	mov    r15d,0xc0000095
   140020904:	jmp    0x14000a80f
   140020909:	mov    edi,DWORD PTR [rbp-0x78]
   14002090c:	jmp    0x14000a89c
   140020911:	mov    r15d,0xc000000d
   140020917:	jmp    0x14000a8ad
   14002091c:	mov    r15d,0xc0000017
   140020922:	jmp    0x14000a89c
   140020927:	mov    r15d,0xc000003e
   14002092d:	jmp    0x14000a8ad
   140020932:	mov    r15d,0xc0000095
   140020938:	jmp    0x14000a8ad
   14002093d:	xor    r14d,r14d
   140020940:	jmp    0x14000a90c
   140020945:	xor    r14d,r14d
   140020948:	jmp    0x14000a969
   14002094d:	mov    r12,QWORD PTR [rsp+0x70]
   140020952:	mov    r15d,0xc004d501
   140020958:	mov    rsi,QWORD PTR [rsp+0x78]
   14002095d:	jmp    0x14000aed0
   140020962:	mov    rax,r14
   140020965:	mov    QWORD PTR [rbp+0x330],rax
   14002096c:	jmp    0x14000aab7
   140020971:	mov    r9d,DWORD PTR [rbp+0x338]
   140020978:	mov    rax,QWORD PTR [rbp+0x658]
   14002097f:	jmp    0x14000aabe
   140020984:	mov    r12,QWORD PTR [rsp+0x70]
   140020989:	mov    r15d,0xc0000023
   14002098f:	mov    rsi,QWORD PTR [rsp+0x78]
   140020994:	jmp    0x14000aed0
   140020999:	mov    r15d,0xc000000d
   14002099f:	mov    eax,DWORD PTR [rbp+0x88]
   1400209a5:	jmp    0x14000aad8
   1400209aa:	mov    DWORD PTR [rbp+0x88],0x8007007a
   1400209b4:	jmp    0x14000aafe
   1400209b9:	mov    r12,QWORD PTR [rsp+0x70]
   1400209be:	mov    r15d,0xc004d501
   1400209c4:	mov    rsi,QWORD PTR [rsp+0x78]
   1400209c9:	jmp    0x14000aed0
   1400209ce:	mov    r15d,0xc000000d
   1400209d4:	jmp    0x14000abce
   1400209d9:	mov    rax,r14
   1400209dc:	mov    QWORD PTR [rbp+0x108],rax
   1400209e3:	jmp    0x14000abab
   1400209e8:	mov    edi,DWORD PTR [rbp+0x440]
   1400209ee:	mov    rax,QWORD PTR [rbp+0x558]
   1400209f5:	jmp    0x14000abb2
   1400209fa:	mov    r12,QWORD PTR [rsp+0x70]
   1400209ff:	mov    r15d,0xc0000023
   140020a05:	mov    rsi,QWORD PTR [rsp+0x78]
   140020a0a:	jmp    0x14000aed0
   140020a0f:	mov    r15d,0xc000000d
   140020a15:	jmp    0x14000ac79
   140020a1a:	mov    rax,r14
   140020a1d:	mov    QWORD PTR [rbp+0x1e0],rax
   140020a24:	jmp    0x14000ac59
   140020a29:	mov    edi,DWORD PTR [rbp+0x348]
   140020a2f:	mov    rax,QWORD PTR [rbp+0x608]
   140020a36:	jmp    0x14000ac60
   140020a3b:	mov    r12,QWORD PTR [rsp+0x70]
   140020a40:	mov    r15d,0xc0000023
   140020a46:	mov    rsi,QWORD PTR [rsp+0x78]
   140020a4b:	jmp    0x14000aed0
   140020a50:	mov    r15d,0xc0000095
   140020a56:	jmp    0x14000ac79
   140020a5b:	mov    r12,QWORD PTR [rsp+0x70]
   140020a60:	mov    r15d,0xc000000d
   140020a66:	mov    rsi,QWORD PTR [rsp+0x78]
   140020a6b:	jmp    0x14000aed0
   140020a70:	mov    r10,r14
   140020a73:	mov    QWORD PTR [rbp+0x1f0],r14
   140020a7a:	jmp    0x14000ad07
   140020a7f:	mov    r9d,DWORD PTR [rbp+0x408]
   140020a86:	mov    r10,QWORD PTR [rbp+0x568]
   140020a8d:	jmp    0x14000ad0e
   140020a92:	mov    rax,r14
   140020a95:	mov    QWORD PTR [rbp+0x200],rax
   140020a9c:	jmp    0x14000ad8a
   140020aa1:	mov    edi,DWORD PTR [rbp+0x358]
   140020aa7:	mov    rax,QWORD PTR [rbp+0x688]
   140020aae:	jmp    0x14000ad91
   140020ab3:	mov    r12,QWORD PTR [rsp+0x70]
   140020ab8:	mov    r15d,0xc0000023
   140020abe:	mov    rsi,QWORD PTR [rsp+0x78]
   140020ac3:	jmp    0x14000aed0
   140020ac8:	mov    r15d,0xc0000095
   140020ace:	jmp    0x14000adaa
   140020ad3:	mov    rax,r14
   140020ad6:	mov    QWORD PTR [rbp+0x1b0],rax
   140020add:	jmp    0x14000ae33
   140020ae2:	mov    edi,DWORD PTR [rbp+0x474]
   140020ae8:	mov    rax,QWORD PTR [rbp+0x578]
   140020aef:	jmp    0x14000ae3a
   140020af4:	mov    r15d,0xc0000023
   140020afa:	mov    r12,QWORD PTR [rsp+0x70]
   140020aff:	mov    rsi,QWORD PTR [rsp+0x78]
   140020b04:	jmp    0x14000aed0
   140020b09:	mov    r15d,0xc0000095
   140020b0f:	jmp    0x14000ae53
   140020b14:	mov    r12,QWORD PTR [rsp+0x70]
   140020b19:	mov    r15d,0xc004d501
   140020b1f:	mov    rsi,QWORD PTR [rsp+0x78]
   140020b24:	jmp    0x14000aed0
   140020b29:	mov    r12,QWORD PTR [rsp+0x70]
   140020b2e:	mov    r15d,0x8007007a
   140020b34:	mov    rsi,QWORD PTR [rsp+0x78]
   140020b39:	jmp    0x14000aed0
   140020b3e:	mov    r12,QWORD PTR [rsp+0x70]
   140020b43:	mov    r15d,0x8007007a
   140020b49:	mov    rsi,QWORD PTR [rsp+0x78]
   140020b4e:	jmp    0x14000aed0
   140020b53:	mov    r12,QWORD PTR [rsp+0x70]
   140020b58:	mov    r15d,0xc0000095
   140020b5e:	mov    rsi,QWORD PTR [rsp+0x78]
   140020b63:	jmp    0x14000aed0
   140020b68:	mov    r12,QWORD PTR [rsp+0x70]
   140020b6d:	jmp    0x140020b83
   140020b6f:	mov    QWORD PTR [rbp+0x280],0xffffffffffffffff
   140020b7a:	mov    r15d,0xc0000095
   140020b80:	mov    r12,r14
   140020b83:	mov    rsi,r13
   140020b86:	jmp    0x14000aed0
   140020b8b:	lea    r13,[rip+0xfffffffffffdf46e]        # 0x140000000
   140020b92:	mov    QWORD PTR [rbp+0x648],r14
   140020b99:	mov    rcx,r13
   140020b9c:	mov    DWORD PTR [rip+0x2df96],eax        # 0x14004eb38
   140020ba2:	mov    r8d,0x104
   140020ba8:	lea    rdx,[rbp+0x1720]
   140020baf:	call   QWORD PTR [rip+0x1c693]        # 0x14003d248
   140020bb5:	test   eax,eax
   140020bb7:	je     0x140020bfd
   140020bb9:	cmp    eax,0x104
   140020bbe:	jne    0x140020bcb
   140020bc0:	call   QWORD PTR [rip+0x1c5a2]        # 0x14003d168
   140020bc6:	cmp    eax,0x7a
   140020bc9:	je     0x140020bfd
   140020bcb:	mov    rdi,QWORD PTR [rip+0x2d546]        # 0x14004e118
   140020bd2:	mov    rcx,rdi
   140020bd5:	call   QWORD PTR [rip+0x1cb4d]        # 0x14003d728
   140020bdb:	xor    edx,edx
   140020bdd:	xor    ecx,ecx
   140020bdf:	mov    r8d,0x403
   140020be5:	call   rdi
   140020be7:	mov    QWORD PTR [rbp-0x38],rax
   140020beb:	mov    rsi,rax
   140020bee:	test   rax,rax
   140020bf1:	jne    0x140020fac
   140020bf7:	call   QWORD PTR [rip+0x1c56b]        # 0x14003d168
   140020bfd:	lea    r12,[rip+0x2d41c]        # 0x14004e020
   140020c04:	mov    ebx,0x1
   140020c09:	lea    r13,[rip+0x2e540]        # 0x14004f150
   140020c10:	lea    rcx,[rbp+0x648]
   140020c17:	call   0x14003a35c
   140020c1c:	cmp    DWORD PTR [rbp+0x8c],0x0
   140020c23:	je     0x14000af8b
   140020c29:	xor    eax,eax
   140020c2b:	mov    DWORD PTR [rbp+0x38],r14d
   140020c2f:	mov    QWORD PTR [rbp+0x3c],rax
   140020c33:	mov    rsi,r14
   140020c36:	mov    DWORD PTR [rbp+0x44],eax
   140020c39:	mov    r13,r14
   140020c3c:	mov    QWORD PTR [rbp+0x194],rax
   140020c43:	mov    DWORD PTR [rbp+0x19c],eax
   140020c49:	lea    rax,[rip+0x2d6d0]        # 0x14004e320
   140020c50:	mov    QWORD PTR [rbp+0x5e8],rax
   140020c57:	mov    DWORD PTR [rbp+0x190],r14d
   140020c5e:	mov    DWORD PTR [rbp+0x140],r14d
   140020c65:	mov    QWORD PTR [rbp+0x4e8],0xa0
   140020c70:	call   QWORD PTR [rip+0x1c54a]        # 0x14003d1c0
   140020c76:	mov    edx,0x8
   140020c7b:	mov    r8d,0xa0
   140020c81:	mov    rcx,rax
   140020c84:	call   QWORD PTR [rip+0x1c54e]        # 0x14003d1d8
   140020c8a:	mov    r14,rax
   140020c8d:	test   rax,rax
   140020c90:	je     0x140027b54
   140020c96:	mov    r8,QWORD PTR [rbp+0x4e8]
   140020c9d:	mov    rcx,rax
   140020ca0:	mov    rdx,QWORD PTR [rbp+0x5e8]
   140020ca7:	call   0x1400156f2
   140020cac:	mov    ebx,DWORD PTR [rbp+0x4e8]
   140020cb2:	lea    rax,[rip+0x2d7af]        # 0x14004e468
   140020cb9:	mov    QWORD PTR [rbp+0x690],rax
   140020cc0:	mov    rsi,r14
   140020cc3:	mov    QWORD PTR [rbp-0x70],r14
   140020cc7:	mov    QWORD PTR [rbp+0x4c8],0x8
   140020cd2:	call   QWORD PTR [rip+0x1c4e8]        # 0x14003d1c0
   140020cd8:	mov    edx,0x8
   140020cdd:	mov    rcx,rax
   140020ce0:	mov    r8d,edx
   140020ce3:	call   QWORD PTR [rip+0x1c4ef]        # 0x14003d1d8
   140020ce9:	mov    r12,rax
   140020cec:	test   rax,rax
   140020cef:	je     0x140020f03
   140020cf5:	mov    r8,QWORD PTR [rbp+0x4c8]
   140020cfc:	mov    rcx,rax
   140020cff:	mov    rdx,QWORD PTR [rbp+0x690]
   140020d06:	call   0x1400156f2
   140020d0b:	mov    rsi,QWORD PTR [rbp+0x4c8]
   140020d12:	mov    r13,r12
   140020d15:	mov    QWORD PTR [rbp-0x38],r12
   140020d19:	rdtsc  
   140020d1b:	shl    rdx,0x20
   140020d1f:	lea    r8,[rbp+0x380]
   140020d26:	or     rax,rdx
   140020d29:	mov    edx,0x4
   140020d2e:	mov    QWORD PTR [rbp+0x530],rax
   140020d35:	mov    ecx,edx
   140020d37:	xor    eax,eax
   140020d39:	mov    DWORD PTR [rbp+0x74],eax
   140020d3c:	call   0x14000bad0
   140020d41:	test   eax,eax
   140020d43:	js     0x140020f00
   140020d49:	mov    edx,DWORD PTR [rbp+0x380]
   140020d4f:	mov    DWORD PTR [rbp+0x13c],edx
   140020d55:	lea    r8,[rbp+0x74]
   140020d59:	xor    ecx,ecx
   140020d5b:	call   0x14000bad0
   140020d60:	or     eax,0x10000000
   140020d65:	jl     0x140020f00
   140020d6b:	lea    r8,[rbp+0x420]
   140020d72:	mov    edx,ebx
   140020d74:	mov    ecx,0x4
   140020d79:	call   0x14000bad0
   140020d7e:	test   eax,eax
   140020d80:	js     0x140020f00
   140020d86:	mov    edx,DWORD PTR [rbp+0x420]
   140020d8c:	mov    DWORD PTR [rbp+0x13c],edx
   140020d92:	mov    ecx,DWORD PTR [rbp+0x74]
   140020d95:	lea    r8,[rbp+0x74]
   140020d99:	call   0x14000bad0
   140020d9e:	or     eax,0x10000000
   140020da3:	jl     0x140020f00
   140020da9:	lea    r8,[rbp+0x388]
   140020db0:	mov    edx,esi
   140020db2:	mov    ecx,0x4
   140020db7:	call   0x14000bad0
   140020dbc:	test   eax,eax
   140020dbe:	js     0x140020f00
   140020dc4:	mov    edx,DWORD PTR [rbp+0x388]
   140020dca:	mov    DWORD PTR [rbp+0x13c],edx
   140020dd0:	mov    ecx,DWORD PTR [rbp+0x74]
   140020dd3:	lea    r8,[rbp+0x74]
   140020dd7:	call   0x14000bad0
   140020ddc:	or     eax,0x10000000
   140020de1:	jl     0x140020f00
   140020de7:	mov    edx,0x8
   140020dec:	lea    r8,[rbp+0x46c]
   140020df3:	lea    ecx,[rdx-0x4]
   140020df6:	call   0x14000bad0
   140020dfb:	test   eax,eax
   140020dfd:	js     0x140020f00
   140020e03:	mov    edx,DWORD PTR [rbp+0x46c]
   140020e09:	mov    DWORD PTR [rbp+0x13c],edx
   140020e0f:	mov    ecx,DWORD PTR [rbp+0x74]
   140020e12:	lea    r8,[rbp+0x74]
   140020e16:	call   0x14000bad0
   140020e1b:	or     eax,0x10000000
   140020e20:	jl     0x140020f00
   140020e26:	mov    eax,DWORD PTR [rbp+0x74]
   140020e29:	mov    DWORD PTR [rbp+0x3c],eax
   140020e2c:	mov    edi,eax
   140020e2e:	call   QWORD PTR [rip+0x1c38c]        # 0x14003d1c0
   140020e34:	mov    r8d,edi
   140020e37:	mov    edx,0x8
   140020e3c:	mov    rcx,rax
   140020e3f:	call   QWORD PTR [rip+0x1c393]        # 0x14003d1d8
   140020e45:	mov    rdi,rax
   140020e48:	test   rax,rax
   140020e4b:	je     0x140020f00
   140020e51:	xor    r10d,r10d
   140020e54:	mov    QWORD PTR [rbp+0x40],rax
   140020e58:	lea    rax,[rbp+0x208]
   140020e5f:	mov    DWORD PTR [rbp+0x38],r10d
   140020e63:	mov    DWORD PTR [rbp+0x208],0x4
   140020e6d:	test   rax,rax
   140020e70:	je     0x140020f00
   140020e76:	lea    r8,[rbp+0x768]
   140020e7d:	mov    rcx,rdi
   140020e80:	lea    edx,[r10+0x4]
   140020e84:	call   0x14000baf0
   140020e89:	test   eax,eax
   140020e8b:	js     0x140020f00
   140020e8d:	mov    ecx,DWORD PTR [rbp+0x3c]
   140020e90:	lea    rax,[rdi+0x8]
   140020e94:	add    rcx,rdi
   140020e97:	cmp    rax,rcx
   140020e9a:	ja     0x140020f00
   140020e9c:	mov    rcx,QWORD PTR [rbp+0x768]
   140020ea3:	mov    DWORD PTR [rdi],edx
   140020ea5:	mov    eax,DWORD PTR [rbp+0x208]
   140020eab:	mov    DWORD PTR [rcx],eax
   140020ead:	mov    r9d,DWORD PTR [rbp+0x38]
   140020eb1:	inc    r9d
   140020eb4:	mov    DWORD PTR [rbp+0x38],r9d
   140020eb8:	test   ebx,ebx
   140020eba:	je     0x140020f00
   140020ebc:	cmp    QWORD PTR [rbp+0x40],r10
   140020ec0:	jne    0x1400259a3
   140020ec6:	lea    r8,[rbp+0x398]
   140020ecd:	mov    edx,ebx
   140020ecf:	lea    ecx,[r10+0x4]
   140020ed3:	call   0x14000bad0
   140020ed8:	test   eax,eax
   140020eda:	js     0x140025d5e
   140020ee0:	mov    edx,DWORD PTR [rbp+0x398]
   140020ee6:	mov    DWORD PTR [rbp+0x3a8],edx
   140020eec:	mov    ecx,DWORD PTR [rbp+0x3c]
   140020eef:	lea    r8,[rbp+0x3c]
   140020ef3:	call   0x14000bad0
   140020ef8:	test   eax,eax
   140020efa:	jns    0x140025a49
   140020f00:	mov    rsi,r14
   140020f03:	xor    r14d,r14d
   140020f06:	mov    ebx,0x1
   140020f0b:	lea    r12,[rip+0x2d10e]        # 0x14004e020
   140020f12:	mov    rdi,QWORD PTR [rbp+0x40]
   140020f16:	mov    DWORD PTR [rbp+0x3c],r14d
   140020f1a:	mov    DWORD PTR [rbp+0x38],r14d
   140020f1e:	test   rdi,rdi
   140020f21:	je     0x140020f3b
   140020f23:	call   QWORD PTR [rip+0x1c297]        # 0x14003d1c0
   140020f29:	mov    r8,rdi
   140020f2c:	xor    edx,edx
   140020f2e:	mov    rcx,rax
   140020f31:	call   QWORD PTR [rip+0x1c2a9]        # 0x14003d1e0
   140020f37:	mov    QWORD PTR [rbp+0x40],r14
   140020f3b:	mov    rdi,QWORD PTR [rbp+0x198]
   140020f42:	mov    DWORD PTR [rbp+0x194],r14d
   140020f49:	mov    DWORD PTR [rbp+0x190],r14d
   140020f50:	test   rdi,rdi
   140020f53:	je     0x140020f70
   140020f55:	call   QWORD PTR [rip+0x1c265]        # 0x14003d1c0
   140020f5b:	mov    r8,rdi
   140020f5e:	xor    edx,edx
   140020f60:	mov    rcx,rax
   140020f63:	call   QWORD PTR [rip+0x1c277]        # 0x14003d1e0
   140020f69:	mov    QWORD PTR [rbp+0x198],r14
   140020f70:	test   rsi,rsi
   140020f73:	je     0x140020f89
   140020f75:	call   QWORD PTR [rip+0x1c245]        # 0x14003d1c0
   140020f7b:	mov    r8,rsi
   140020f7e:	xor    edx,edx
   140020f80:	mov    rcx,rax
   140020f83:	call   QWORD PTR [rip+0x1c257]        # 0x14003d1e0
   140020f89:	test   r13,r13
   140020f8c:	je     0x14000af84
   140020f92:	call   QWORD PTR [rip+0x1c228]        # 0x14003d1c0
   140020f98:	mov    r8,r13
   140020f9b:	xor    edx,edx
   140020f9d:	mov    rcx,rax
   140020fa0:	call   QWORD PTR [rip+0x1c23a]        # 0x14003d1e0
   140020fa6:	nop
   140020fa7:	jmp    0x14000af84
   140020fac:	mov    rdi,QWORD PTR [rip+0x2d105]        # 0x14004e0b8
   140020fb3:	mov    rcx,rdi
   140020fb6:	call   QWORD PTR [rip+0x1c76c]        # 0x14003d728
   140020fbc:	call   rdi
   140020fbe:	mov    edi,DWORD PTR [rip+0x2db74]        # 0x14004eb38
   140020fc4:	lea    rcx,[rbp+0x7b4]
   140020fcb:	xor    edx,edx
   140020fcd:	mov    QWORD PTR [rip+0x2db6c],rax        # 0x14004eb40
   140020fd4:	mov    DWORD PTR [rbp-0x78],edi
   140020fd7:	mov    DWORD PTR [rbp+0x7b0],r14d
   140020fde:	lea    r8d,[rdx+0x6c]
   140020fe2:	call   0x140014694
   140020fe7:	mov    ebx,0x1
   140020fec:	mov    QWORD PTR [rbp-0x30],r14
   140020ff0:	xorps  xmm0,xmm0
   140020ff3:	mov    DWORD PTR [rbp+0x228],ebx
   140020ff9:	xor    edx,edx
   140020ffb:	mov    QWORD PTR [rbp+0x168],r14
   140021002:	lea    rcx,[rbp+0xc94]
   140021009:	mov    DWORD PTR [rbp+0xc90],r14d
   140021010:	lea    r8d,[rbx+0x27]
   140021014:	movdqu XMMWORD PTR [rbp+0xe8],xmm0
   14002101c:	call   0x140014694
   140021021:	mov    QWORD PTR [rbp+0x128],r14
   140021028:	xor    eax,eax
   14002102a:	lock cmpxchg DWORD PTR [rip+0x2e10e],ebx        # 0x14004f140
   140021032:	jne    0x140021028
   140021034:	mov    eax,DWORD PTR [rip+0x2db0e]        # 0x14004eb48
   14002103a:	test   eax,eax
   14002103c:	jne    0x1400216ac
   140021042:	mov    ecx,0x338
   140021047:	mov    DWORD PTR [rbp-0x80],r14d
   14002104b:	mov    DWORD PTR [rbp-0x70],r14d
   14002104f:	mov    DWORD PTR [rbp-0x60],r14d
   140021053:	mov    QWORD PTR [rbp+0x340],r14
   14002105a:	mov    QWORD PTR [rbp+0x588],r14
   140021061:	call   0x14000f134
   140021066:	mov    QWORD PTR [rbp-0x48],rax
   14002106a:	mov    rbx,rax
   14002106d:	test   rax,rax
   140021070:	je     0x14002168c
   140021076:	xor    eax,eax
   140021078:	mov    DWORD PTR [rsp+0x60],0xffffffff
   140021080:	lea    r12,[rbx+0x7]
   140021084:	mov    DWORD PTR [rbp+0x24],r14d
   140021088:	mov    ebx,DWORD PTR [rsp+0x60]
   14002108c:	lea    r13,[rip+0x1ce4f]        # 0x14003dee2
   140021093:	mov    esi,r14d
   140021096:	mov    DWORD PTR [rbp+0x50],eax
   140021099:	lea    edi,[rax+0x67]
   14002109c:	mov    r8d,eax
   14002109f:	movzx  eax,BYTE PTR [r13-0x1]
   1400210a4:	movzx  r11d,BYTE PTR [r13-0x2]
   1400210a9:	movzx  r10d,BYTE PTR [r13+0x2]
   1400210ae:	lea    r13,[r13+0x8]
   1400210b2:	shl    r11d,0x8
   1400210b6:	or     r11d,eax
   1400210b9:	shl    r10d,0x8
   1400210bd:	movzx  eax,BYTE PTR [r13-0x8]
   1400210c2:	shl    r11d,0x8
   1400210c6:	or     r11d,eax
   1400210c9:	movzx  eax,BYTE PTR [r13-0x7]
   1400210ce:	shl    r11d,0x8
   1400210d2:	or     r11d,eax
   1400210d5:	movzx  eax,BYTE PTR [r13-0x5]
   1400210da:	or     r10d,eax
   1400210dd:	xor    r8d,r11d
   1400210e0:	movzx  eax,BYTE PTR [r13-0x4]
   1400210e5:	shl    r10d,0x8
   1400210e9:	or     r10d,eax
   1400210ec:	movzx  eax,BYTE PTR [r13-0x3]
   1400210f1:	shl    r10d,0x8
   1400210f5:	or     r10d,eax
   1400210f8:	xor    r14d,r10d
   1400210fb:	xor    r14d,r8d
   1400210fe:	xor    r14d,0x58830298
   140021105:	lea    eax,[r14+0x7b1e05f8]
   14002110c:	rol    eax,0x5
   14002110f:	imul   ecx,eax,0xf890
   140021115:	mov    eax,r14d
   140021118:	rol    eax,0xa
   14002111b:	add    ecx,eax
   14002111d:	xor    r8d,ecx
   140021120:	lea    eax,[r8-0x239d0770]
   140021127:	ror    eax,0x9
   14002112a:	imul   ecx,eax,0x84e1
   140021130:	mov    eax,r8d
   140021133:	rol    eax,0x2
   140021136:	sub    ecx,eax
   140021138:	xor    r14d,ecx
   14002113b:	lea    eax,[r14-0xf890]
   140021142:	imul   ecx,eax,0xfa08
   140021148:	mov    eax,r14d
   14002114b:	shr    eax,0xd
   14002114e:	sub    ecx,eax
   140021150:	xor    r8d,ecx
   140021153:	mov    eax,r8d
   140021156:	xor    eax,0x84e1
   14002115b:	rol    eax,0x6
   14002115e:	imul   ecx,eax,0xdc62
   140021164:	mov    eax,r8d
   140021167:	rol    eax,0x2
   14002116a:	sub    ecx,eax
   14002116c:	mov    eax,0xdc62f890
   140021171:	xor    r14d,ecx
   140021174:	mov    ecx,r14d
   140021177:	xor    ecx,0x84e1fa08
   14002117d:	sub    eax,ecx
   14002117f:	xor    r8d,eax
   140021182:	mov    eax,r8d
   140021185:	mov    edx,r8d
   140021188:	xor    eax,0xf890
   14002118d:	ror    edx,0x6
   140021190:	imul   ecx,eax,0x84e1
   140021196:	xor    edx,ecx
   140021198:	xor    r14d,edx
   14002119b:	lea    eax,[r14-0x239d0770]
   1400211a2:	ror    eax,0xf
   1400211a5:	imul   ecx,eax,0xfa08
   1400211ab:	mov    eax,r14d
   1400211ae:	rol    eax,0x2
   1400211b1:	add    ecx,eax
   1400211b3:	xor    r8d,ecx
   1400211b6:	lea    eax,[r8+0x7b1e05f8]
   1400211bd:	ror    eax,0xe
   1400211c0:	imul   ecx,eax,0xdc62
   1400211c6:	mov    eax,r8d
   1400211c9:	rol    eax,0x8
   1400211cc:	sub    ecx,eax
   1400211ce:	xor    r14d,ecx
   1400211d1:	mov    eax,r14d
   1400211d4:	xor    eax,0x84e1fa08
   1400211d9:	ror    eax,0xc
   1400211dc:	imul   ecx,eax,0xf890
   1400211e2:	mov    eax,r14d
   1400211e5:	ror    eax,0xa
   1400211e8:	xor    ecx,eax
   1400211ea:	xor    r8d,ecx
   1400211ed:	mov    eax,r8d
   1400211f0:	xor    eax,0xdc62
   1400211f5:	imul   ecx,eax,0x84e1
   1400211fb:	mov    eax,r8d
   1400211fe:	shr    eax,0xa
   140021201:	xor    ecx,eax
   140021203:	xor    r14d,ecx
   140021206:	mov    eax,r14d
   140021209:	mov    r9d,r14d
   14002120c:	not    eax
   14002120e:	ror    eax,0x5
   140021211:	imul   eax,eax,0xdc62
   140021217:	sub    eax,0x28c168f0
   14002121c:	xor    r8d,eax
   14002121f:	xor    r9d,r8d
   140021222:	xor    r9d,0x58830298
   140021229:	lea    eax,[r9-0x7b1e05f8]
   140021230:	rol    eax,0xb
   140021233:	imul   ecx,eax,0xdc62
   140021239:	mov    eax,r9d
   14002123c:	rol    eax,0xd
   14002123f:	add    ecx,eax
   140021241:	xor    r14d,ecx
   140021244:	mov    eax,r14d
   140021247:	xor    eax,0x84e1fa08
   14002124c:	ror    eax,0x5
   14002124f:	imul   ecx,eax,0xf890
   140021255:	mov    eax,r14d
   140021258:	ror    eax,0xc
   14002125b:	xor    ecx,eax
   14002125d:	xor    r9d,ecx
   140021260:	lea    eax,[r9-0xf890]
   140021267:	imul   ecx,eax,0x84e1
   14002126d:	mov    eax,r9d
   140021270:	shr    eax,0x9
   140021273:	sub    ecx,eax
   140021275:	xor    r14d,ecx
   140021278:	lea    eax,[r14+0x239c0d68]
   14002127f:	xor    r9d,eax
   140021282:	lea    r8d,[r9-0xdc62]
   140021289:	xor    r8d,r14d
   14002128c:	xor    r8d,0x84e1fa08
   140021293:	lea    eax,[r8+0x7b1e05f8]
   14002129a:	ror    eax,0x4
   14002129d:	imul   ecx,eax,0xf890
   1400212a3:	mov    eax,r8d
   1400212a6:	ror    eax,0xb
   1400212a9:	xor    ecx,eax
   1400212ab:	mov    eax,0xdc62f890
   1400212b0:	xor    r9d,ecx
   1400212b3:	sub    eax,r9d
   1400212b6:	ror    eax,0x7
   1400212b9:	imul   ecx,eax,0x84e1
   1400212bf:	mov    eax,r9d
   1400212c2:	ror    eax,0x3
   1400212c5:	add    ecx,eax
   1400212c7:	xor    r8d,ecx
   1400212ca:	mov    eax,r8d
   1400212cd:	xor    eax,0xdc62f890
   1400212d2:	rol    eax,1
   1400212d4:	imul   ecx,eax,0xfa08
   1400212da:	mov    eax,r8d
   1400212dd:	ror    eax,0x8
   1400212e0:	add    ecx,eax
   1400212e2:	xor    r9d,ecx
   1400212e5:	mov    eax,r9d
   1400212e8:	mov    edx,r9d
   1400212eb:	xor    eax,0xf890
   1400212f0:	ror    edx,1
   1400212f2:	imul   ecx,eax,0xdc62
   1400212f8:	add    edx,ecx
   1400212fa:	xor    r8d,edx
   1400212fd:	mov    eax,r8d
   140021300:	xor    eax,0xfa08
   140021305:	rol    eax,1
   140021307:	imul   ecx,eax,0xf890
   14002130d:	lea    r12,[r12+0x8]
   140021312:	mov    eax,r8d
   140021315:	rol    eax,0x8
   140021318:	xor    ecx,eax
   14002131a:	mov    eax,0x84e1fa08
   14002131f:	xor    r9d,ecx
   140021322:	mov    ecx,r9d
   140021325:	xor    ecx,0xdc62f890
   14002132b:	sub    eax,ecx
   14002132d:	xor    r8d,eax
   140021330:	lea    eax,[r8+0x239d0770]
   140021337:	ror    eax,0x3
   14002133a:	imul   ecx,eax,0xfa08
   140021340:	mov    eax,r8d
   140021343:	ror    eax,0x2
   140021346:	xor    r8d,ebx
   140021349:	mov    DWORD PTR [rbp+0x24],r8d
   14002134d:	mov    ebx,r10d
   140021350:	add    ecx,eax
   140021352:	xor    ecx,esi
   140021354:	mov    esi,r11d
   140021357:	xor    r9d,ecx
   14002135a:	mov    DWORD PTR [rbp+0x50],r9d
   14002135e:	mov    BYTE PTR [r12-0xc],r9b
   140021363:	movzx  eax,BYTE PTR [rbp+0x24]
   140021367:	ror    DWORD PTR [rbp+0x50],0x8
   14002136b:	mov    BYTE PTR [r12-0x8],al
   140021370:	ror    DWORD PTR [rbp+0x24],0x8
   140021374:	movzx  eax,BYTE PTR [rbp+0x50]
   140021378:	mov    BYTE PTR [r12-0xd],al
   14002137d:	movzx  eax,BYTE PTR [rbp+0x24]
   140021381:	ror    DWORD PTR [rbp+0x50],0x8
   140021385:	mov    BYTE PTR [r12-0x9],al
   14002138a:	ror    DWORD PTR [rbp+0x24],0x8
   14002138e:	movzx  eax,BYTE PTR [rbp+0x50]
   140021392:	mov    BYTE PTR [r12-0xe],al
   140021397:	ror    DWORD PTR [rbp+0x50],0x8
   14002139b:	movzx  eax,BYTE PTR [rbp+0x24]
   14002139f:	mov    BYTE PTR [r12-0xa],al
   1400213a4:	ror    DWORD PTR [rbp+0x24],0x8
   1400213a8:	movzx  eax,BYTE PTR [rbp+0x50]
   1400213ac:	mov    BYTE PTR [r12-0xf],al
   1400213b1:	movzx  eax,BYTE PTR [rbp+0x24]
   1400213b5:	mov    BYTE PTR [r12-0xb],al
   1400213ba:	mov    r8d,DWORD PTR [rbp+0x50]
   1400213be:	mov    r14d,DWORD PTR [rbp+0x24]
   1400213c2:	ror    r8d,0x8
   1400213c6:	ror    r14d,0x8
   1400213ca:	mov    DWORD PTR [rbp+0x50],r8d
   1400213ce:	mov    DWORD PTR [rbp+0x24],r14d
   1400213d2:	sub    rdi,0x1
   1400213d6:	jne    0x14002109f
   1400213dc:	mov    edi,DWORD PTR [rbp-0x78]
   1400213df:	xor    r14d,r14d
   1400213e2:	mov    rbx,QWORD PTR [rbp-0x48]
   1400213e6:	mov    eax,r14d
   1400213e9:	xorps  xmm1,xmm1
   1400213ec:	mov    esi,eax
   1400213ee:	movdqa xmm2,xmm1
   1400213f2:	movdqu xmm0,XMMWORD PTR [rbx+rax*1]
   1400213f7:	pxor   xmm0,xmm1
   1400213fb:	movdqa xmm1,xmm0
   1400213ff:	movdqu xmm0,XMMWORD PTR [rbx+rax*1+0x10]
   140021405:	add    rax,0x20
   140021409:	pxor   xmm0,xmm2
   14002140d:	movdqa xmm2,xmm0
   140021411:	cmp    rax,0x320
   140021417:	jb     0x1400213f2
   140021419:	pxor   xmm1,xmm0
   14002141d:	movdqa xmm0,xmm1
   140021421:	psrldq xmm0,0x8
   140021426:	pxor   xmm1,xmm0
   14002142a:	movdqa xmm0,xmm1
   14002142e:	psrldq xmm0,0x4
   140021433:	pxor   xmm1,xmm0
   140021437:	movdqa xmm0,xmm1
   14002143b:	psrldq xmm0,0x2
   140021440:	pxor   xmm1,xmm0
   140021444:	movdqa xmm0,xmm1
   140021448:	psrldq xmm0,0x1
   14002144d:	pxor   xmm1,xmm0
   140021451:	movd   ecx,xmm1
   140021455:	cmp    rax,0x338
   14002145b:	jae    0x14002146b
   14002145d:	xor    cl,BYTE PTR [rax+rbx*1]
   140021460:	inc    rax
   140021463:	cmp    rax,0x338
   140021469:	jb     0x14002145d
   14002146b:	movzx  eax,cl
   14002146e:	cmp    rax,QWORD PTR [rip+0x1cda3]        # 0x14003e218
   140021475:	jne    0x14002167d
   14002147b:	xor    edx,edx
   14002147d:	mov    QWORD PTR [rbp+0x340],rbx
   140021484:	lea    r12,[rip+0x2dcc5]        # 0x14004f150
   14002148b:	mov    QWORD PTR [rbp+0x588],0x338
   140021496:	mov    rcx,r12
   140021499:	mov    BYTE PTR [rbx+0x337],sil
   1400214a0:	lea    r8d,[rdx+0x60]
   1400214a4:	call   0x140014694
   1400214a9:	cmp    BYTE PTR [rbx],sil
   1400214ac:	je     0x1400215f1
   1400214b2:	mov    rdx,rbx
   1400214b5:	or     rax,0xffffffffffffffff
   1400214b9:	cmp    WORD PTR [rbx+rax*2+0x2],0x0
   1400214bf:	lea    rax,[rax+0x1]
   1400214c3:	jne    0x1400214b9
   1400214c5:	lea    rbx,[rbx+rax*2]
   1400214c9:	mov    eax,DWORD PTR [rbp-0x60]
   1400214cc:	lea    rcx,[rax+rax*2]
   1400214d0:	lea    r14,[r12+rcx*8]
   1400214d4:	xor    ecx,ecx
   1400214d6:	mov    r8,r14
   1400214d9:	call   QWORD PTR [rip+0x1bd61]        # 0x14003d240
   1400214df:	test   eax,eax
   1400214e1:	je     0x140021673
   1400214e7:	mov    rax,QWORD PTR [r14]
   1400214ea:	xor    edx,edx
   1400214ec:	mov    ecx,0x5a4d
   1400214f1:	mov    esi,edx
   1400214f3:	cmp    WORD PTR [rax],cx
   1400214f6:	je     0x1400214ff
   1400214f8:	mov    esi,0xc000007b
   1400214fd:	jmp    0x140021563
   1400214ff:	movsxd rcx,DWORD PTR [rax+0x3c]
   140021503:	cmp    ecx,0x10000000
   140021509:	jb     0x140021512
   14002150b:	mov    esi,0xc000007b
   140021510:	jmp    0x140021563
   140021512:	add    rcx,QWORD PTR [r14]
   140021515:	cmp    rcx,QWORD PTR [r14]
   140021518:	jae    0x140021521
   14002151a:	mov    esi,0xc000007b
   14002151f:	jmp    0x140021563
   140021521:	cmp    DWORD PTR [rcx],0x4550
   140021527:	je     0x140021530
   140021529:	mov    esi,0xc000007b
   14002152e:	jmp    0x140021563
   140021530:	movzx  eax,WORD PTR [rcx+0x18]
   140021534:	mov    r8d,0x10b
   14002153a:	sub    ax,r8w
   14002153e:	mov    r8d,0xfeff
   140021544:	test   r8w,ax
   140021548:	je     0x140021551
   14002154a:	mov    esi,0xc000000d
   14002154f:	jmp    0x140021563
   140021551:	mov    rax,QWORD PTR [rcx+0x88]
   140021558:	mov    QWORD PTR [r14+0xc],rax
   14002155c:	mov    eax,DWORD PTR [rcx+0x50]
   14002155f:	mov    DWORD PTR [r14+0x8],eax
   140021563:	mov    r13d,DWORD PTR [rbx+0x2]
   140021567:	mov    r12d,edx
   14002156a:	add    rbx,0x6
   14002156e:	test   r13d,r13d
   140021571:	je     0x1400215d4
   140021573:	mov    QWORD PTR [rbp+0x4a8],rdx
   14002157a:	mov    rcx,rbx
   14002157d:	or     rax,0xffffffffffffffff
   140021581:	inc    rax
   140021584:	cmp    BYTE PTR [rbx+rax*1],0x0
   140021588:	jne    0x140021581
   14002158a:	inc    rbx
   14002158d:	add    rbx,rax
   140021590:	test   esi,esi
   140021592:	js     0x1400215c4
   140021594:	lea    r9,[rbp+0x4a8]
   14002159b:	mov    r8,r14
   14002159e:	xor    edx,edx
   1400215a0:	call   0x1400153c4
   1400215a5:	mov    esi,eax
   1400215a7:	test   eax,eax
   1400215a9:	js     0x1400215e7
   1400215ab:	mov    eax,DWORD PTR [rbp-0x80]
   1400215ae:	lea    r8,[rip+0x2ca6b]        # 0x14004e020
   1400215b5:	mov    rcx,QWORD PTR [rbp+0x4a8]
   1400215bc:	xor    edx,edx
   1400215be:	mov    QWORD PTR [r8+rax*8],rcx
   1400215c2:	jmp    0x1400215c7
   1400215c4:	mov    eax,DWORD PTR [rbp-0x80]
   1400215c7:	inc    eax
   1400215c9:	inc    r12d
   1400215cc:	mov    DWORD PTR [rbp-0x80],eax
   1400215cf:	cmp    r12d,r13d
   1400215d2:	jb     0x140021573
   1400215d4:	inc    DWORD PTR [rbp-0x60]
   1400215d7:	lea    r12,[rip+0x2db72]        # 0x14004f150
   1400215de:	cmp    BYTE PTR [rbx],0x0
   1400215e1:	jne    0x1400214b2
   1400215e7:	lea    r12,[rip+0x2db62]        # 0x14004f150
   1400215ee:	xor    r14d,r14d
   1400215f1:	lea    r13,[rip+0xfffffffffffdea08]        # 0x140000000
   1400215f8:	cmp    QWORD PTR [rbp+0x340],0x0
   140021600:	je     0x14002161a
   140021602:	call   QWORD PTR [rip+0x1bbb8]        # 0x14003d1c0
   140021608:	mov    r8,QWORD PTR [rbp+0x340]
   14002160f:	xor    edx,edx
   140021611:	mov    rcx,rax
   140021614:	call   QWORD PTR [rip+0x1bbc6]        # 0x14003d1e0
   14002161a:	test   esi,esi
   14002161c:	jns    0x14002169d
   14002161e:	mov    rbx,r12
   140021621:	mov    esi,0x4
   140021626:	mov    rcx,QWORD PTR [rbx]
   140021629:	test   rcx,rcx
   14002162c:	je     0x140021634
   14002162e:	call   QWORD PTR [rip+0x1bc24]        # 0x14003d258
   140021634:	add    rbx,0x18
   140021638:	sub    rsi,0x1
   14002163c:	jne    0x140021626
   14002163e:	xor    edx,edx
   140021640:	lea    r8d,[rsi+0x60]
   140021644:	mov    rcx,r12
   140021647:	call   0x140014694
   14002164c:	lea    r12,[rip+0x2c9cd]        # 0x14004e020
   140021653:	mov    r8d,0x170
   140021659:	mov    rcx,r12
   14002165c:	lea    rdx,[rip+0x2010d]        # 0x140041770
   140021663:	call   0x1400156f2
   140021668:	mov    rsi,QWORD PTR [rbp-0x38]
   14002166c:	mov    ebx,0x1
   140021671:	jmp    0x1400216bb
   140021673:	mov    esi,0xc000007a
   140021678:	jmp    0x1400215ee
   14002167d:	mov    rcx,rbx
   140021680:	call   0x1400155d8
   140021685:	lea    r13,[rip+0xfffffffffffde974]        # 0x140000000
   14002168c:	mov    esi,0xc000007a
   140021691:	lea    r12,[rip+0x2dab8]        # 0x14004f150
   140021698:	jmp    0x1400215f8
   14002169d:	mov    eax,DWORD PTR [rip+0x2d4a5]        # 0x14004eb48
   1400216a3:	mov    ebx,0x1
   1400216a8:	mov    rsi,QWORD PTR [rbp-0x38]
   1400216ac:	inc    eax
   1400216ae:	lea    r12,[rip+0x2c96b]        # 0x14004e020
   1400216b5:	mov    DWORD PTR [rip+0x2d48d],eax        # 0x14004eb48
   1400216bb:	mov    eax,r14d
   1400216be:	mov    DWORD PTR [rbp-0x68],r14d
   1400216c2:	xchg   DWORD PTR [rip+0x2da78],eax        # 0x14004f140
   1400216c8:	xor    ecx,ecx
   1400216ca:	mov    QWORD PTR [rbp+0x370],r14
   1400216d1:	xorps  xmm0,xmm0
   1400216d4:	mov    DWORD PTR [rbp+0x1662],ecx
   1400216da:	xorps  xmm1,xmm1
   1400216dd:	mov    DWORD PTR [rbp+0x10],r14d
   1400216e1:	movdqu XMMWORD PTR [rbp+0x480],xmm1
   1400216e9:	mov    QWORD PTR [rsp+0x70],r14
   1400216ee:	movdqu XMMWORD PTR [rbp+0x150],xmm0
   1400216f6:	xor    eax,eax
   1400216f8:	lock cmpxchg DWORD PTR [rip+0x2da40],ebx        # 0x14004f140
   140021700:	jne    0x1400216f6
   140021702:	mov    eax,DWORD PTR [rip+0x2d440]        # 0x14004eb48
   140021708:	test   eax,eax
   14002170a:	jne    0x140021d7f
   140021710:	mov    ecx,0x338
   140021715:	mov    DWORD PTR [rbp-0x80],r14d
   140021719:	mov    DWORD PTR [rbp-0x70],r14d
   14002171d:	mov    DWORD PTR [rbp-0x60],r14d
   140021721:	mov    QWORD PTR [rbp+0x350],r14
   140021728:	mov    QWORD PTR [rbp+0x668],r14
   14002172f:	call   0x14000f134
   140021734:	mov    QWORD PTR [rbp-0x48],rax
   140021738:	mov    rbx,rax
   14002173b:	test   rax,rax
   14002173e:	je     0x140021d66
   140021744:	xor    eax,eax
   140021746:	mov    DWORD PTR [rsp+0x60],0xffffffff
   14002174e:	lea    r12,[rbx+0x7]
   140021752:	mov    DWORD PTR [rbp+0x28],r14d
   140021756:	mov    ebx,DWORD PTR [rsp+0x60]
   14002175a:	lea    r13,[rip+0x1c781]        # 0x14003dee2
   140021761:	mov    esi,r14d
   140021764:	mov    DWORD PTR [rbp+0x58],eax
   140021767:	lea    edi,[rax+0x67]
   14002176a:	mov    r8d,eax
   14002176d:	movzx  eax,BYTE PTR [r13-0x1]
   140021772:	movzx  r11d,BYTE PTR [r13-0x2]
   140021777:	movzx  r10d,BYTE PTR [r13+0x2]
   14002177c:	lea    r13,[r13+0x8]
   140021780:	shl    r11d,0x8
   140021784:	or     r11d,eax
   140021787:	shl    r10d,0x8
   14002178b:	movzx  eax,BYTE PTR [r13-0x8]
   140021790:	shl    r11d,0x8
   140021794:	or     r11d,eax
   140021797:	movzx  eax,BYTE PTR [r13-0x7]
   14002179c:	shl    r11d,0x8
   1400217a0:	or     r11d,eax
   1400217a3:	movzx  eax,BYTE PTR [r13-0x5]
   1400217a8:	or     r10d,eax
   1400217ab:	xor    r8d,r11d
   1400217ae:	movzx  eax,BYTE PTR [r13-0x4]
   1400217b3:	shl    r10d,0x8
   1400217b7:	or     r10d,eax
   1400217ba:	movzx  eax,BYTE PTR [r13-0x3]
   1400217bf:	shl    r10d,0x8
   1400217c3:	or     r10d,eax
   1400217c6:	xor    r14d,r10d
   1400217c9:	xor    r14d,r8d
   1400217cc:	xor    r14d,0x58830298
   1400217d3:	lea    eax,[r14+0x7b1e05f8]
   1400217da:	rol    eax,0x5
   1400217dd:	imul   ecx,eax,0xf890
   1400217e3:	mov    eax,r14d
   1400217e6:	rol    eax,0xa
   1400217e9:	add    ecx,eax
   1400217eb:	xor    r8d,ecx
   1400217ee:	lea    eax,[r8-0x239d0770]
   1400217f5:	ror    eax,0x9
   1400217f8:	imul   ecx,eax,0x84e1
   1400217fe:	mov    eax,r8d
   140021801:	rol    eax,0x2
   140021804:	sub    ecx,eax
   140021806:	xor    r14d,ecx
   140021809:	lea    eax,[r14-0xf890]
   140021810:	imul   ecx,eax,0xfa08
   140021816:	mov    eax,r14d
   140021819:	shr    eax,0xd
   14002181c:	sub    ecx,eax
   14002181e:	xor    r8d,ecx
   140021821:	mov    eax,r8d
   140021824:	xor    eax,0x84e1
   140021829:	rol    eax,0x6
   14002182c:	imul   ecx,eax,0xdc62
   140021832:	mov    eax,r8d
   140021835:	rol    eax,0x2
   140021838:	sub    ecx,eax
   14002183a:	mov    eax,0xdc62f890
   14002183f:	xor    r14d,ecx
   140021842:	mov    ecx,r14d
   140021845:	xor    ecx,0x84e1fa08
   14002184b:	sub    eax,ecx
   14002184d:	xor    r8d,eax
   140021850:	mov    eax,r8d
   140021853:	mov    edx,r8d
   140021856:	xor    eax,0xf890
   14002185b:	ror    edx,0x6
   14002185e:	imul   ecx,eax,0x84e1
   140021864:	xor    edx,ecx
   140021866:	xor    r14d,edx
   140021869:	lea    eax,[r14-0x239d0770]
   140021870:	ror    eax,0xf
   140021873:	imul   ecx,eax,0xfa08
   140021879:	mov    eax,r14d
   14002187c:	rol    eax,0x2
   14002187f:	add    ecx,eax
   140021881:	xor    r8d,ecx
   140021884:	lea    eax,[r8+0x7b1e05f8]
   14002188b:	ror    eax,0xe
   14002188e:	imul   ecx,eax,0xdc62
   140021894:	mov    eax,r8d
   140021897:	rol    eax,0x8
   14002189a:	sub    ecx,eax
   14002189c:	xor    r14d,ecx
   14002189f:	mov    eax,r14d
   1400218a2:	xor    eax,0x84e1fa08
   1400218a7:	ror    eax,0xc
   1400218aa:	imul   ecx,eax,0xf890
   1400218b0:	mov    eax,r14d
   1400218b3:	ror    eax,0xa
   1400218b6:	xor    ecx,eax
   1400218b8:	xor    r8d,ecx
   1400218bb:	mov    eax,r8d
   1400218be:	xor    eax,0xdc62
   1400218c3:	imul   ecx,eax,0x84e1
   1400218c9:	mov    eax,r8d
   1400218cc:	shr    eax,0xa
   1400218cf:	xor    ecx,eax
   1400218d1:	xor    r14d,ecx
   1400218d4:	mov    eax,r14d
   1400218d7:	mov    r9d,r14d
   1400218da:	not    eax
   1400218dc:	ror    eax,0x5
   1400218df:	imul   eax,eax,0xdc62
   1400218e5:	sub    eax,0x28c168f0
   1400218ea:	xor    r8d,eax
   1400218ed:	xor    r9d,r8d
   1400218f0:	xor    r9d,0x58830298
   1400218f7:	lea    eax,[r9-0x7b1e05f8]
   1400218fe:	rol    eax,0xb
   140021901:	imul   ecx,eax,0xdc62
   140021907:	mov    eax,r9d
   14002190a:	rol    eax,0xd
   14002190d:	add    ecx,eax
   14002190f:	xor    r14d,ecx
   140021912:	mov    eax,r14d
   140021915:	xor    eax,0x84e1fa08
   14002191a:	ror    eax,0x5
   14002191d:	imul   ecx,eax,0xf890
   140021923:	mov    eax,r14d
   140021926:	ror    eax,0xc
   140021929:	xor    ecx,eax
   14002192b:	xor    r9d,ecx
   14002192e:	lea    eax,[r9-0xf890]
   140021935:	imul   ecx,eax,0x84e1
   14002193b:	mov    eax,r9d
   14002193e:	shr    eax,0x9
   140021941:	sub    ecx,eax
   140021943:	xor    r14d,ecx
   140021946:	lea    eax,[r14+0x239c0d68]
   14002194d:	xor    r9d,eax
   140021950:	lea    r8d,[r9-0xdc62]
   140021957:	xor    r8d,r14d
   14002195a:	xor    r8d,0x84e1fa08
   140021961:	lea    eax,[r8+0x7b1e05f8]
   140021968:	ror    eax,0x4
   14002196b:	imul   ecx,eax,0xf890
   140021971:	mov    eax,r8d
   140021974:	ror    eax,0xb
   140021977:	xor    ecx,eax
   140021979:	mov    eax,0xdc62f890
   14002197e:	xor    r9d,ecx
   140021981:	sub    eax,r9d
   140021984:	ror    eax,0x7
   140021987:	imul   ecx,eax,0x84e1
   14002198d:	mov    eax,r9d
   140021990:	ror    eax,0x3
   140021993:	add    ecx,eax
   140021995:	xor    r8d,ecx
   140021998:	mov    eax,r8d
   14002199b:	xor    eax,0xdc62f890
   1400219a0:	rol    eax,1
   1400219a2:	imul   ecx,eax,0xfa08
   1400219a8:	mov    eax,r8d
   1400219ab:	ror    eax,0x8
   1400219ae:	add    ecx,eax
   1400219b0:	xor    r9d,ecx
   1400219b3:	mov    eax,r9d
   1400219b6:	mov    edx,r9d
   1400219b9:	xor    eax,0xf890
   1400219be:	ror    edx,1
   1400219c0:	imul   ecx,eax,0xdc62
   1400219c6:	add    edx,ecx
   1400219c8:	xor    r8d,edx
   1400219cb:	mov    eax,r8d
   1400219ce:	xor    eax,0xfa08
   1400219d3:	rol    eax,1
   1400219d5:	imul   ecx,eax,0xf890
   1400219db:	lea    r12,[r12+0x8]
   1400219e0:	mov    eax,r8d
   1400219e3:	rol    eax,0x8
   1400219e6:	xor    ecx,eax
   1400219e8:	mov    eax,0x84e1fa08
   1400219ed:	xor    r9d,ecx
   1400219f0:	mov    ecx,r9d
   1400219f3:	xor    ecx,0xdc62f890
   1400219f9:	sub    eax,ecx
   1400219fb:	xor    r8d,eax
   1400219fe:	lea    eax,[r8+0x239d0770]
   140021a05:	ror    eax,0x3
   140021a08:	imul   ecx,eax,0xfa08
   140021a0e:	mov    eax,r8d
   140021a11:	ror    eax,0x2
   140021a14:	xor    r8d,ebx
   140021a17:	mov    DWORD PTR [rbp+0x28],r8d
   140021a1b:	mov    ebx,r10d
   140021a1e:	add    ecx,eax
   140021a20:	xor    ecx,r9d
   140021a23:	xor    ecx,esi
   140021a25:	mov    esi,r11d
   140021a28:	mov    DWORD PTR [rbp+0x58],ecx
   140021a2b:	mov    BYTE PTR [r12-0xc],cl
   140021a30:	movzx  eax,BYTE PTR [rbp+0x28]
   140021a34:	ror    DWORD PTR [rbp+0x58],0x8
   140021a38:	mov    BYTE PTR [r12-0x8],al
   140021a3d:	ror    DWORD PTR [rbp+0x28],0x8
   140021a41:	movzx  eax,BYTE PTR [rbp+0x58]
   140021a45:	mov    BYTE PTR [r12-0xd],al
   140021a4a:	movzx  eax,BYTE PTR [rbp+0x28]
   140021a4e:	ror    DWORD PTR [rbp+0x58],0x8
   140021a52:	mov    BYTE PTR [r12-0x9],al
   140021a57:	ror    DWORD PTR [rbp+0x28],0x8
   140021a5b:	movzx  eax,BYTE PTR [rbp+0x58]
   140021a5f:	mov    BYTE PTR [r12-0xe],al
   140021a64:	ror    DWORD PTR [rbp+0x58],0x8
   140021a68:	movzx  eax,BYTE PTR [rbp+0x28]
   140021a6c:	mov    BYTE PTR [r12-0xa],al
   140021a71:	ror    DWORD PTR [rbp+0x28],0x8
   140021a75:	movzx  eax,BYTE PTR [rbp+0x58]
   140021a79:	mov    BYTE PTR [r12-0xf],al
   140021a7e:	movzx  eax,BYTE PTR [rbp+0x28]
   140021a82:	mov    BYTE PTR [r12-0xb],al
   140021a87:	mov    r8d,DWORD PTR [rbp+0x58]
   140021a8b:	mov    r14d,DWORD PTR [rbp+0x28]
   140021a8f:	ror    r8d,0x8
   140021a93:	ror    r14d,0x8
   140021a97:	mov    DWORD PTR [rbp+0x58],r8d
   140021a9b:	mov    DWORD PTR [rbp+0x28],r14d
   140021a9f:	sub    rdi,0x1
   140021aa3:	jne    0x14002176d
   140021aa9:	mov    edi,DWORD PTR [rbp-0x78]
   140021aac:	xor    r14d,r14d
   140021aaf:	mov    rbx,QWORD PTR [rbp-0x48]
   140021ab3:	xorps  xmm2,xmm2
   140021ab6:	mov    esi,DWORD PTR [rbp-0x70]
   140021ab9:	mov    eax,r14d
   140021abc:	movdqa xmm1,xmm2
   140021ac0:	movdqu xmm0,XMMWORD PTR [rax+rbx*1]
   140021ac5:	pxor   xmm0,xmm2
   140021ac9:	movdqa xmm2,xmm0
   140021acd:	movdqu xmm0,XMMWORD PTR [rax+rbx*1+0x10]
   140021ad3:	add    rax,0x20
   140021ad7:	pxor   xmm0,xmm1
   140021adb:	movdqa xmm1,xmm0
   140021adf:	cmp    rax,0x320
   140021ae5:	jb     0x140021ac0
   140021ae7:	pxor   xmm1,xmm2
   140021aeb:	movdqa xmm0,xmm1
   140021aef:	psrldq xmm0,0x8
   140021af4:	pxor   xmm1,xmm0
   140021af8:	movdqa xmm0,xmm1
   140021afc:	psrldq xmm0,0x4
   140021b01:	pxor   xmm1,xmm0
   140021b05:	movdqa xmm0,xmm1
   140021b09:	psrldq xmm0,0x2
   140021b0e:	pxor   xmm1,xmm0
   140021b12:	movdqa xmm0,xmm1
   140021b16:	psrldq xmm0,0x1
   140021b1b:	pxor   xmm1,xmm0
   140021b1f:	movd   ecx,xmm1
   140021b23:	cmp    rax,0x338
   140021b29:	jae    0x140021b39
   140021b2b:	xor    cl,BYTE PTR [rax+rbx*1]
   140021b2e:	inc    rax
   140021b31:	cmp    rax,0x338
   140021b37:	jb     0x140021b2b
   140021b39:	movzx  eax,cl
   140021b3c:	cmp    rax,QWORD PTR [rip+0x1c6d5]        # 0x14003e218
   140021b43:	jne    0x140021d50
   140021b49:	xor    edx,edx
   140021b4b:	mov    QWORD PTR [rbp+0x350],rbx
   140021b52:	lea    r12,[rip+0x2d5f7]        # 0x14004f150
   140021b59:	mov    QWORD PTR [rbp+0x668],0x338
   140021b64:	mov    rcx,r12
   140021b67:	mov    BYTE PTR [rbx+0x337],r14b
   140021b6e:	lea    r8d,[rdx+0x60]
   140021b72:	call   0x140014694
   140021b77:	cmp    BYTE PTR [rbx],r14b
   140021b7a:	je     0x140021cb8
   140021b80:	mov    rdx,rbx
   140021b83:	or     rax,0xffffffffffffffff
   140021b87:	cmp    WORD PTR [rbx+rax*2+0x2],0x0
   140021b8d:	lea    rax,[rax+0x1]
   140021b91:	jne    0x140021b87
   140021b93:	lea    rbx,[rbx+rax*2]
   140021b97:	mov    eax,DWORD PTR [rbp-0x60]
   140021b9a:	lea    rcx,[rax+rax*2]
   140021b9e:	lea    r14,[r12+rcx*8]
   140021ba2:	xor    ecx,ecx
   140021ba4:	mov    r8,r14
   140021ba7:	call   QWORD PTR [rip+0x1b693]        # 0x14003d240
   140021bad:	test   eax,eax
   140021baf:	je     0x140021d46
   140021bb5:	mov    rax,QWORD PTR [r14]
   140021bb8:	xor    edx,edx
   140021bba:	mov    ecx,0x5a4d
   140021bbf:	mov    esi,edx
   140021bc1:	cmp    WORD PTR [rax],cx
   140021bc4:	je     0x140021bcd
   140021bc6:	mov    esi,0xc000007b
   140021bcb:	jmp    0x140021c31
   140021bcd:	movsxd rcx,DWORD PTR [rax+0x3c]
   140021bd1:	cmp    ecx,0x10000000
   140021bd7:	jb     0x140021be0
   140021bd9:	mov    esi,0xc000007b
   140021bde:	jmp    0x140021c31
   140021be0:	add    rcx,QWORD PTR [r14]
   140021be3:	cmp    rcx,QWORD PTR [r14]
   140021be6:	jae    0x140021bef
   140021be8:	mov    esi,0xc000007b
   140021bed:	jmp    0x140021c31
   140021bef:	cmp    DWORD PTR [rcx],0x4550
   140021bf5:	je     0x140021bfe
   140021bf7:	mov    esi,0xc000007b
   140021bfc:	jmp    0x140021c31
   140021bfe:	movzx  eax,WORD PTR [rcx+0x18]
   140021c02:	mov    r8d,0x10b
   140021c08:	sub    ax,r8w
   140021c0c:	mov    r8d,0xfeff
   140021c12:	test   r8w,ax
   140021c16:	je     0x140021c1f
   140021c18:	mov    esi,0xc000000d
   140021c1d:	jmp    0x140021c31
   140021c1f:	mov    rax,QWORD PTR [rcx+0x88]
   140021c26:	mov    QWORD PTR [r14+0xc],rax
   140021c2a:	mov    eax,DWORD PTR [rcx+0x50]
   140021c2d:	mov    DWORD PTR [r14+0x8],eax
   140021c31:	mov    r13d,DWORD PTR [rbx+0x2]
   140021c35:	mov    r12d,edx
   140021c38:	add    rbx,0x6
   140021c3c:	test   r13d,r13d
   140021c3f:	je     0x140021ca2
   140021c41:	mov    QWORD PTR [rbp+0x490],rdx
   140021c48:	mov    rcx,rbx
   140021c4b:	or     rax,0xffffffffffffffff
   140021c4f:	inc    rax
   140021c52:	cmp    BYTE PTR [rbx+rax*1],0x0
   140021c56:	jne    0x140021c4f
   140021c58:	inc    rbx
   140021c5b:	add    rbx,rax
   140021c5e:	test   esi,esi
   140021c60:	js     0x140021c92
   140021c62:	lea    r9,[rbp+0x490]
   140021c69:	mov    r8,r14
   140021c6c:	xor    edx,edx
   140021c6e:	call   0x1400153c4
   140021c73:	mov    esi,eax
   140021c75:	test   eax,eax
   140021c77:	js     0x140021cb5
   140021c79:	mov    eax,DWORD PTR [rbp-0x80]
   140021c7c:	lea    r8,[rip+0x2c39d]        # 0x14004e020
   140021c83:	mov    rcx,QWORD PTR [rbp+0x490]
   140021c8a:	xor    edx,edx
   140021c8c:	mov    QWORD PTR [r8+rax*8],rcx
   140021c90:	jmp    0x140021c95
   140021c92:	mov    eax,DWORD PTR [rbp-0x80]
   140021c95:	inc    eax
   140021c97:	inc    r12d
   140021c9a:	mov    DWORD PTR [rbp-0x80],eax
   140021c9d:	cmp    r12d,r13d
   140021ca0:	jb     0x140021c41
   140021ca2:	inc    DWORD PTR [rbp-0x60]
   140021ca5:	lea    r12,[rip+0x2d4a4]        # 0x14004f150
   140021cac:	cmp    BYTE PTR [rbx],0x0
   140021caf:	jne    0x140021b80
   140021cb5:	xor    r14d,r14d
   140021cb8:	lea    r12,[rip+0x2c361]        # 0x14004e020
   140021cbf:	lea    r13,[rip+0xfffffffffffde33a]        # 0x140000000
   140021cc6:	cmp    QWORD PTR [rbp+0x350],0x0
   140021cce:	je     0x140021ce8
   140021cd0:	call   QWORD PTR [rip+0x1b4ea]        # 0x14003d1c0
   140021cd6:	mov    r8,QWORD PTR [rbp+0x350]
   140021cdd:	xor    edx,edx
   140021cdf:	mov    rcx,rax
   140021ce2:	call   QWORD PTR [rip+0x1b4f8]        # 0x14003d1e0
   140021ce8:	test   esi,esi
   140021cea:	jns    0x140021d70
   140021cf0:	lea    rbx,[rip+0x2d459]        # 0x14004f150
   140021cf7:	mov    esi,0x4
   140021cfc:	mov    rcx,QWORD PTR [rbx]
   140021cff:	test   rcx,rcx
   140021d02:	je     0x140021d0a
   140021d04:	call   QWORD PTR [rip+0x1b54e]        # 0x14003d258
   140021d0a:	add    rbx,0x18
   140021d0e:	sub    rsi,0x1
   140021d12:	jne    0x140021cfc
   140021d14:	xor    edx,edx
   140021d16:	lea    r8d,[rsi+0x60]
   140021d1a:	lea    rcx,[rip+0x2d42f]        # 0x14004f150
   140021d21:	call   0x140014694
   140021d26:	mov    r8d,0x170
   140021d2c:	lea    rdx,[rip+0x1fa3d]        # 0x140041770
   140021d33:	mov    rcx,r12
   140021d36:	call   0x1400156f2
   140021d3b:	mov    rsi,QWORD PTR [rbp-0x38]
   140021d3f:	mov    ebx,0x1
   140021d44:	jmp    0x140021d87
   140021d46:	mov    esi,0xc000007a
   140021d4b:	jmp    0x140021cb5
   140021d50:	mov    rcx,rbx
   140021d53:	call   0x1400155d8
   140021d58:	lea    r13,[rip+0xfffffffffffde2a1]        # 0x140000000
   140021d5f:	lea    r12,[rip+0x2c2ba]        # 0x14004e020
   140021d66:	mov    esi,0xc000007a
   140021d6b:	jmp    0x140021cc6
   140021d70:	mov    eax,DWORD PTR [rip+0x2cdd2]        # 0x14004eb48
   140021d76:	mov    ebx,0x1
   140021d7b:	mov    rsi,QWORD PTR [rbp-0x38]
   140021d7f:	inc    eax
   140021d81:	mov    DWORD PTR [rip+0x2cdc1],eax        # 0x14004eb48
   140021d87:	xor    edx,edx
   140021d89:	lea    rcx,[rbp+0x7b0]
   140021d90:	mov    eax,r14d
   140021d93:	xchg   DWORD PTR [rip+0x2d3a7],eax        # 0x14004f140
   140021d99:	lea    r8d,[rdx+0x70]
   140021d9d:	call   0x140014694
   140021da2:	xor    eax,eax
   140021da4:	mov    r14d,edi
   140021da7:	mov    QWORD PTR [rbp+0xe8],rax
   140021dae:	and    r14d,0xf
   140021db2:	mov    eax,edi
   140021db4:	mov    DWORD PTR [rsp+0x68],r14d
   140021db9:	shr    eax,0x4
   140021dbc:	and    ax,0xf
   140021dc0:	mov    WORD PTR [rbp+0x1660],ax
   140021dc7:	mov    eax,edi
   140021dc9:	shr    edi,0xc
   140021dcc:	and    di,0xf
   140021dd0:	shr    eax,0x8
   140021dd3:	and    ax,0xf
   140021dd7:	mov    WORD PTR [rbp+0x1664],di
   140021dde:	mov    rdi,QWORD PTR [rip+0x2c333]        # 0x14004e118
   140021de5:	mov    rcx,rdi
   140021de8:	mov    WORD PTR [rbp+0x1662],ax
   140021def:	call   QWORD PTR [rip+0x1b933]        # 0x14003d728
   140021df5:	xor    edx,edx
   140021df7:	xor    ecx,ecx
   140021df9:	mov    r8d,0x403
   140021dff:	call   rdi
   140021e01:	mov    QWORD PTR [rsp+0x78],rax
   140021e06:	mov    DWORD PTR [rbp-0x28],0xffffff
   140021e0d:	test   rax,rax
   140021e10:	jne    0x140021e41
   140021e12:	call   QWORD PTR [rip+0x1b350]        # 0x14003d168
   140021e18:	mov    r12d,eax
   140021e1b:	test   eax,eax
   140021e1d:	jle    0x140021e2a
   140021e1f:	movzx  r12d,ax
   140021e23:	or     r12d,0x80070000
   140021e2a:	mov    r13d,r14d
   140021e2d:	test   r12d,r12d
   140021e30:	js     0x140023507
   140021e36:	mov    r12d,0x80004005
   140021e3c:	jmp    0x140023507
   140021e41:	mov    rdi,QWORD PTR [rip+0x2c278]        # 0x14004e0c0
   140021e48:	xor    eax,eax
   140021e4a:	mov    rcx,rdi
   140021e4d:	mov    QWORD PTR [rbp+0x4f8],rax
   140021e54:	mov    esi,eax
   140021e56:	mov    QWORD PTR [rbp+0x2a0],rax
   140021e5d:	mov    QWORD PTR [rbp+0x4a0],rax
   140021e64:	mov    ebx,eax
   140021e66:	mov    QWORD PTR [rbp+0x1a0],rax
   140021e6d:	mov    r12d,eax
   140021e70:	mov    QWORD PTR [rbp+0x360],rax
   140021e77:	mov    QWORD PTR [rbp+0x220],rax
   140021e7e:	mov    DWORD PTR [rbp+0x18c],eax
   140021e84:	call   QWORD PTR [rip+0x1b89e]        # 0x14003d728
   140021e8a:	lea    r9,[rbp+0x18c]
   140021e91:	xor    r8d,r8d
   140021e94:	lea    rdx,[rbp+0xd8]
   140021e9b:	lea    ecx,[rbx+0x8]
   140021e9e:	call   rdi
   140021ea0:	test   eax,eax
   140021ea2:	jne    0x140021ed0
   140021ea4:	call   QWORD PTR [rip+0x1b2be]        # 0x14003d168
   140021eaa:	mov    r12d,eax
   140021ead:	test   eax,eax
   140021eaf:	jle    0x140021ebc
   140021eb1:	movzx  r12d,ax
   140021eb5:	or     r12d,0x80070000
   140021ebc:	test   r12d,r12d
   140021ebf:	js     0x140022049
   140021ec5:	mov    r12d,0x80004005
   140021ecb:	jmp    0x140022049
   140021ed0:	mov    ecx,DWORD PTR [rbp+0x18c]
   140021ed6:	add    rcx,rcx
   140021ed9:	call   0x14000f134
   140021ede:	mov    rdx,rax
   140021ee1:	lea    rcx,[rbp+0x360]
   140021ee8:	call   0x140015398
   140021eed:	mov    r13,QWORD PTR [rbp+0x360]
   140021ef4:	mov    rcx,r13
   140021ef7:	call   0x14003a34c
   140021efc:	test   al,al
   140021efe:	jne    0x14002203c
   140021f04:	test   r13,r13
   140021f07:	je     0x14002203c
   140021f0d:	mov    ecx,DWORD PTR [rbp+0xd8]
   140021f13:	inc    ecx
   140021f15:	shl    rcx,0x2
   140021f19:	call   0x14000f134
   140021f1e:	mov    rdx,rax
   140021f21:	lea    rcx,[rbp+0x220]
   140021f28:	call   0x140015398
   140021f2d:	mov    rdi,QWORD PTR [rbp+0x220]
   140021f34:	mov    rcx,rdi
   140021f37:	call   0x14003a34c
   140021f3c:	test   al,al
   140021f3e:	jne    0x14002203c
   140021f44:	test   rdi,rdi
   140021f47:	je     0x14002203c
   140021f4d:	mov    r14,QWORD PTR [rip+0x2c16c]        # 0x14004e0c0
   140021f54:	mov    rcx,r14
   140021f57:	call   QWORD PTR [rip+0x1b7cb]        # 0x14003d728
   140021f5d:	lea    r9,[rbp+0x18c]
   140021f64:	mov    r8,r13
   140021f67:	lea    rdx,[rbp+0xd8]
   140021f6e:	mov    ecx,0x8
   140021f73:	call   r14
   140021f76:	test   eax,eax
   140021f78:	jne    0x140021fb2
   140021f7a:	call   QWORD PTR [rip+0x1b1e8]        # 0x14003d168
   140021f80:	mov    r12d,eax
   140021f83:	test   eax,eax
   140021f85:	jle    0x140021f92
   140021f87:	movzx  r12d,ax
   140021f8b:	or     r12d,0x80070000
   140021f92:	mov    r14d,DWORD PTR [rsp+0x68]
   140021f97:	lea    r13,[rip+0xfffffffffffde062]        # 0x140000000
   140021f9e:	test   r12d,r12d
   140021fa1:	js     0x140022049
   140021fa7:	mov    r12d,0x80004005
   140021fad:	jmp    0x140022049
   140021fb2:	xor    eax,eax
   140021fb4:	mov    r14,rdi
   140021fb7:	cmp    DWORD PTR [rbp+0xd8],eax
   140021fbd:	jbe    0x140022009
   140021fbf:	mov    edi,eax
   140021fc1:	mov    rsi,QWORD PTR [rip+0x2c108]        # 0x14004e0d0
   140021fc8:	mov    rcx,rsi
   140021fcb:	call   QWORD PTR [rip+0x1b757]        # 0x14003d728
   140021fd1:	xor    edx,edx
   140021fd3:	mov    rcx,r13
   140021fd6:	call   rsi
   140021fd8:	mov    DWORD PTR [r14],eax
   140021fdb:	or     rax,0xffffffffffffffff
   140021fdf:	cmp    WORD PTR [r13+rax*2+0x2],bx
   140021fe5:	lea    rax,[rax+0x1]
   140021fe9:	jne    0x140021fdf
   140021feb:	lea    r13,[r13+rax*2+0x0]
   140021ff0:	add    r14,0x4
   140021ff4:	add    r13,0x2
   140021ff8:	inc    edi
   140021ffa:	cmp    edi,DWORD PTR [rbp+0xd8]
   140022000:	jb     0x140021fc1
   140022002:	mov    rdi,QWORD PTR [rbp+0x220]
   140022009:	mov    DWORD PTR [r14],0x409
   140022010:	lea    r13,[rip+0xfffffffffffddfe9]        # 0x140000000
   140022017:	mov    eax,DWORD PTR [rbp+0xd8]
   14002201d:	mov    rsi,rdi
   140022020:	mov    r14d,DWORD PTR [rsp+0x68]
   140022025:	xor    edi,edi
   140022027:	inc    eax
   140022029:	mov    QWORD PTR [rbp+0x220],rdi
   140022030:	mov    DWORD PTR [rbp-0x78],eax
   140022033:	mov    QWORD PTR [rbp+0x4f8],rsi
   14002203a:	jmp    0x14002204b
   14002203c:	lea    r13,[rip+0xfffffffffffddfbd]        # 0x140000000
   140022043:	mov    r12d,0x8007000e
   140022049:	xor    edi,edi
   14002204b:	lea    rcx,[rbp+0x220]
   140022052:	call   0x140015604
   140022057:	lea    rcx,[rbp+0x360]
   14002205e:	call   0x140015604
   140022063:	test   r12d,r12d
   140022066:	js     0x14002281e
   14002206c:	lea    r12,[rip+0x236cd]        # 0x140045740
   140022073:	mov    r11d,edi
   140022076:	mov    r9d,edi
   140022079:	mov    DWORD PTR [rbp-0x80],edi
   14002207c:	cmp    DWORD PTR [rbp-0x78],ebx
   14002207f:	jbe    0x1400220ce
   140022081:	mov    rcx,rsi
   140022084:	call   0x14003a34c
   140022089:	movzx  r10d,al
   14002208d:	mov    r8,rdi
   140022090:	mov    edx,edi
   140022092:	mov    rdi,r12
   140022095:	test   r10b,r10b
   140022098:	mov    rcx,rsi
   14002209b:	mov    rax,rbx
   14002209e:	mov    eax,DWORD PTR [rdi]
   1400220a0:	cmovne rcx,rbx
   1400220a4:	cmp    DWORD PTR [r8+rcx*1],eax
   1400220a8:	je     0x1400220c6
   1400220aa:	inc    edx
   1400220ac:	add    rdi,0x4
   1400220b0:	cmp    edx,0x27
   1400220b3:	jb     0x140022095
   1400220b5:	inc    r9d
   1400220b8:	add    r8,0x4
   1400220bc:	xor    edi,edi
   1400220be:	cmp    r9d,DWORD PTR [rbp-0x78]
   1400220c2:	jae    0x1400220ce
   1400220c4:	jmp    0x140022090
   1400220c6:	mov    r11d,edx
   1400220c9:	mov    DWORD PTR [rbp-0x80],edx
   1400220cc:	xor    edi,edi
   1400220ce:	mov    DWORD PTR [rbp-0x60],edi
   1400220d1:	mov    rdi,QWORD PTR [rip+0x2bff0]        # 0x14004e0c8
   1400220d8:	mov    rcx,rdi
   1400220db:	mov    esi,r11d
   1400220de:	call   QWORD PTR [rip+0x1b644]        # 0x14003d728
   1400220e4:	mov    ecx,DWORD PTR [r12+rsi*4]
   1400220e8:	lea    rdx,[rbp+0x1670]
   1400220ef:	xor    r9d,r9d
   1400220f2:	lea    r8d,[r9+0x55]
   1400220f6:	call   rdi
   1400220f8:	test   eax,eax
   1400220fa:	je     0x140022142
   1400220fc:	mov    rdi,QWORD PTR [rip+0x2bfad]        # 0x14004e0b0
   140022103:	mov    rcx,rdi
   140022106:	call   QWORD PTR [rip+0x1b61c]        # 0x14003d728
   14002210c:	mov    r9d,0x10
   140022112:	lea    r8,[rbp+0xed0]
   140022119:	lea    rcx,[rbp+0x1670]
   140022120:	lea    edx,[r9+0x48]
   140022124:	call   rdi
   140022126:	test   eax,eax
   140022128:	jle    0x140022142
   14002212a:	mov    r14d,DWORD PTR [rbp+0xedc]
   140022131:	shr    r14d,0x1b
   140022135:	and    r14d,0x1
   140022139:	mov    DWORD PTR [rbp-0x60],r14d
   14002213d:	mov    r14d,DWORD PTR [rsp+0x68]
   140022142:	lea    rcx,[rip+0x1dad7]        # 0x14003fc20
   140022149:	mov    edi,0x13
   14002214e:	lea    rdx,[rbp+0x15c0]
   140022155:	mov    QWORD PTR [rdx],rcx
   140022158:	or     rax,0xffffffffffffffff
   14002215c:	cmp    WORD PTR [rcx+rax*2+0x2],bx
   140022161:	lea    rax,[rax+0x1]
   140022165:	jne    0x14002215c
   140022167:	lea    rcx,[rcx+rax*2]
   14002216b:	add    rdx,0x8
   14002216f:	add    rcx,0x2
   140022173:	sub    rdi,0x1
   140022177:	jne    0x140022155
   140022179:	lea    rcx,[rsi+rsi*2]
   14002217d:	movzx  eax,BYTE PTR [rcx+r13*1+0x41a80]
   140022186:	lea    rdx,[rip+0xfffffffffffdde73]        # 0x140000000
   14002218d:	mov    r13,QWORD PTR [rbp+rax*8+0x15c0]
   140022195:	movzx  eax,BYTE PTR [rcx+rdx*1+0x41a81]
   14002219d:	mov    QWORD PTR [rbp+0x18],r13
   1400221a1:	mov    rdi,QWORD PTR [rbp+rax*8+0x15c0]
   1400221a9:	movzx  eax,BYTE PTR [rcx+rdx*1+0x41a82]
   1400221b1:	mov    QWORD PTR [rbp-0x48],rdi
   1400221b5:	mov    rsi,QWORD PTR [rbp+rax*8+0x15c0]
   1400221bd:	mov    QWORD PTR [rsp+0x70],rsi
   1400221c2:	xor    edi,edi
   1400221c4:	mov    ecx,0x1d18
   1400221c9:	mov    DWORD PTR [rbp-0x70],edi
   1400221cc:	call   0x14000f134
   1400221d1:	mov    QWORD PTR [rbp-0x18],rax
   1400221d5:	test   rax,rax
   1400221d8:	jne    0x1400221e5
   1400221da:	mov    r12d,0x8007000e
   1400221e0:	jmp    0x140022835
   1400221e5:	or     r12d,0xffffffff
   1400221e9:	mov    DWORD PTR [rbp+0x20],edi
   1400221ec:	mov    esi,edi
   1400221ee:	mov    DWORD PTR [rbp+0x48],edi
   1400221f1:	lea    r14,[rax+0x7]
   1400221f5:	mov    ebx,0x3a3
   1400221fa:	lea    r13,[rip+0x21821]        # 0x140043a22
   140022201:	mov    r11d,edi
   140022204:	movzx  eax,BYTE PTR [r13-0x1]
   140022209:	movzx  r10d,BYTE PTR [r13-0x2]
   14002220e:	movzx  r9d,BYTE PTR [r13+0x2]
   140022213:	lea    r13,[r13+0x8]
   140022217:	shl    r10d,0x8
   14002221b:	or     r10d,eax
   14002221e:	shl    r9d,0x8
   140022222:	movzx  eax,BYTE PTR [r13-0x8]
   140022227:	shl    r10d,0x8
   14002222b:	or     r10d,eax
   14002222e:	movzx  eax,BYTE PTR [r13-0x7]
   140022233:	shl    r10d,0x8
   140022237:	or     r10d,eax
   14002223a:	movzx  eax,BYTE PTR [r13-0x5]
   14002223f:	or     r9d,eax
   140022242:	xor    edi,r10d
   140022245:	movzx  eax,BYTE PTR [r13-0x4]
   14002224a:	shl    r9d,0x8
   14002224e:	or     r9d,eax
   140022251:	movzx  eax,BYTE PTR [r13-0x3]
   140022256:	shl    r9d,0x8
   14002225a:	or     r9d,eax
   14002225d:	xor    esi,r9d
   140022260:	xor    esi,edi
   140022262:	xor    esi,0x58830298
   140022268:	lea    eax,[rsi+0x7b1e05f8]
   14002226e:	rol    eax,0x5
   140022271:	imul   ecx,eax,0xf890
   140022277:	mov    eax,esi
   140022279:	rol    eax,0xa
   14002227c:	add    ecx,eax
   14002227e:	xor    edi,ecx
   140022280:	lea    eax,[rdi-0x239d0770]
   140022286:	ror    eax,0x9
   140022289:	imul   ecx,eax,0x84e1
   14002228f:	mov    eax,edi
   140022291:	rol    eax,0x2
   140022294:	sub    ecx,eax
   140022296:	xor    esi,ecx
   140022298:	lea    eax,[rsi-0xf890]
   14002229e:	imul   ecx,eax,0xfa08
   1400222a4:	mov    eax,esi
   1400222a6:	shr    eax,0xd
   1400222a9:	sub    ecx,eax
   1400222ab:	xor    edi,ecx
   1400222ad:	mov    eax,edi
   1400222af:	xor    eax,0x84e1
   1400222b4:	rol    eax,0x6
   1400222b7:	imul   ecx,eax,0xdc62
   1400222bd:	mov    eax,edi
   1400222bf:	rol    eax,0x2
   1400222c2:	sub    ecx,eax
   1400222c4:	mov    eax,0xdc62f890
   1400222c9:	xor    esi,ecx
   1400222cb:	mov    ecx,esi
   1400222cd:	xor    ecx,0x84e1fa08
   1400222d3:	sub    eax,ecx
   1400222d5:	xor    edi,eax
   1400222d7:	mov    eax,edi
   1400222d9:	mov    edx,edi
   1400222db:	xor    eax,0xf890
   1400222e0:	ror    edx,0x6
   1400222e3:	imul   ecx,eax,0x84e1
   1400222e9:	xor    edx,ecx
   1400222eb:	xor    esi,edx
   1400222ed:	lea    eax,[rsi-0x239d0770]
   1400222f3:	ror    eax,0xf
   1400222f6:	imul   ecx,eax,0xfa08
   1400222fc:	mov    eax,esi
   1400222fe:	rol    eax,0x2
   140022301:	add    ecx,eax
   140022303:	xor    edi,ecx
   140022305:	lea    eax,[rdi+0x7b1e05f8]
   14002230b:	ror    eax,0xe
   14002230e:	imul   ecx,eax,0xdc62
   140022314:	mov    eax,edi
   140022316:	rol    eax,0x8
   140022319:	sub    ecx,eax
   14002231b:	xor    esi,ecx
   14002231d:	mov    eax,esi
   14002231f:	xor    eax,0x84e1fa08
   140022324:	ror    eax,0xc
   140022327:	imul   ecx,eax,0xf890
   14002232d:	mov    eax,esi
   14002232f:	ror    eax,0xa
   140022332:	xor    ecx,eax
   140022334:	xor    edi,ecx
   140022336:	mov    eax,edi
   140022338:	xor    eax,0xdc62
   14002233d:	imul   ecx,eax,0x84e1
   140022343:	mov    eax,edi
   140022345:	shr    eax,0xa
   140022348:	xor    ecx,eax
   14002234a:	xor    esi,ecx
   14002234c:	mov    eax,esi
   14002234e:	mov    r8d,esi
   140022351:	not    eax
   140022353:	ror    eax,0x5
   140022356:	imul   eax,eax,0xdc62
   14002235c:	sub    eax,0x28c168f0
   140022361:	xor    edi,eax
   140022363:	xor    r8d,edi
   140022366:	xor    r8d,0x58830298
   14002236d:	lea    eax,[r8-0x7b1e05f8]
   140022374:	rol    eax,0xb
   140022377:	imul   ecx,eax,0xdc62
   14002237d:	mov    eax,r8d
   140022380:	rol    eax,0xd
   140022383:	add    ecx,eax
   140022385:	xor    esi,ecx
   140022387:	mov    eax,esi
   140022389:	xor    eax,0x84e1fa08
   14002238e:	ror    eax,0x5
   140022391:	imul   ecx,eax,0xf890
   140022397:	mov    eax,esi
   140022399:	ror    eax,0xc
   14002239c:	xor    ecx,eax
   14002239e:	xor    r8d,ecx
   1400223a1:	lea    eax,[r8-0xf890]
   1400223a8:	imul   ecx,eax,0x84e1
   1400223ae:	mov    eax,r8d
   1400223b1:	shr    eax,0x9
   1400223b4:	sub    ecx,eax
   1400223b6:	xor    esi,ecx
   1400223b8:	lea    eax,[rsi+0x239c0d68]
   1400223be:	xor    r8d,eax
   1400223c1:	lea    edi,[r8-0xdc62]
   1400223c8:	xor    edi,esi
   1400223ca:	xor    edi,0x84e1fa08
   1400223d0:	lea    eax,[rdi+0x7b1e05f8]
   1400223d6:	ror    eax,0x4
   1400223d9:	imul   ecx,eax,0xf890
   1400223df:	mov    eax,edi
   1400223e1:	ror    eax,0xb
   1400223e4:	xor    ecx,eax
   1400223e6:	mov    eax,0xdc62f890
   1400223eb:	xor    r8d,ecx
   1400223ee:	sub    eax,r8d
   1400223f1:	ror    eax,0x7
   1400223f4:	imul   ecx,eax,0x84e1
   1400223fa:	mov    eax,r8d
   1400223fd:	ror    eax,0x3
   140022400:	add    ecx,eax
   140022402:	xor    edi,ecx
   140022404:	mov    eax,edi
   140022406:	xor    eax,0xdc62f890
   14002240b:	rol    eax,1
   14002240d:	imul   ecx,eax,0xfa08
   140022413:	mov    eax,edi
   140022415:	ror    eax,0x8
   140022418:	add    ecx,eax
   14002241a:	xor    r8d,ecx
   14002241d:	mov    eax,r8d
   140022420:	mov    edx,r8d
   140022423:	xor    eax,0xf890
   140022428:	ror    edx,1
   14002242a:	imul   ecx,eax,0xdc62
   140022430:	add    edx,ecx
   140022432:	xor    edi,edx
   140022434:	mov    eax,edi
   140022436:	xor    eax,0xfa08
   14002243b:	rol    eax,1
   14002243d:	imul   ecx,eax,0xf890
   140022443:	lea    r14,[r14+0x8]
   140022447:	mov    eax,edi
   140022449:	rol    eax,0x8
   14002244c:	xor    ecx,eax
   14002244e:	mov    eax,0x84e1fa08
   140022453:	xor    r8d,ecx
   140022456:	mov    ecx,r8d
   140022459:	xor    ecx,0xdc62f890
   14002245f:	sub    eax,ecx
   140022461:	xor    edi,eax
   140022463:	lea    eax,[rdi+0x239d0770]
   140022469:	ror    eax,0x3
   14002246c:	imul   ecx,eax,0xfa08
   140022472:	mov    eax,edi
   140022474:	ror    eax,0x2
   140022477:	xor    edi,r12d
   14002247a:	mov    DWORD PTR [rbp+0x20],edi
   14002247d:	mov    r12d,r9d
   140022480:	add    ecx,eax
   140022482:	xor    ecx,r11d
   140022485:	mov    r11d,r10d
   140022488:	xor    r8d,ecx
   14002248b:	mov    DWORD PTR [rbp+0x48],r8d
   14002248f:	mov    BYTE PTR [r14-0xc],r8b
   140022493:	movzx  eax,BYTE PTR [rbp+0x20]
   140022497:	ror    DWORD PTR [rbp+0x48],0x8
   14002249b:	mov    BYTE PTR [r14-0x8],al
   14002249f:	ror    DWORD PTR [rbp+0x20],0x8
   1400224a3:	movzx  eax,BYTE PTR [rbp+0x48]
   1400224a7:	mov    BYTE PTR [r14-0xd],al
   1400224ab:	movzx  eax,BYTE PTR [rbp+0x20]
   1400224af:	ror    DWORD PTR [rbp+0x48],0x8
   1400224b3:	mov    BYTE PTR [r14-0x9],al
   1400224b7:	ror    DWORD PTR [rbp+0x20],0x8
   1400224bb:	movzx  eax,BYTE PTR [rbp+0x48]
   1400224bf:	mov    BYTE PTR [r14-0xe],al
   1400224c3:	ror    DWORD PTR [rbp+0x48],0x8
   1400224c7:	movzx  eax,BYTE PTR [rbp+0x20]
   1400224cb:	mov    BYTE PTR [r14-0xa],al
   1400224cf:	ror    DWORD PTR [rbp+0x20],0x8
   1400224d3:	movzx  eax,BYTE PTR [rbp+0x48]
   1400224d7:	mov    BYTE PTR [r14-0xf],al
   1400224db:	movzx  eax,BYTE PTR [rbp+0x20]
   1400224df:	mov    BYTE PTR [r14-0xb],al
   1400224e3:	mov    edi,DWORD PTR [rbp+0x48]
   1400224e6:	mov    esi,DWORD PTR [rbp+0x20]
   1400224e9:	ror    edi,0x8
   1400224ec:	ror    esi,0x8
   1400224ef:	mov    DWORD PTR [rbp+0x48],edi
   1400224f2:	mov    DWORD PTR [rbp+0x20],esi
   1400224f5:	sub    rbx,0x1
   1400224f9:	jne    0x140022204
   1400224ff:	mov    rbx,QWORD PTR [rbp+0x1a0]
   140022506:	xor    edi,edi
   140022508:	mov    r12d,DWORD PTR [rbp-0x70]
   14002250c:	xorps  xmm1,xmm1
   14002250f:	mov    r11,QWORD PTR [rbp-0x18]
   140022513:	mov    eax,edi
   140022515:	movdqa xmm2,xmm1
   140022519:	movdqu xmm0,XMMWORD PTR [r11+rax*1]
   14002251f:	pxor   xmm0,xmm1
   140022523:	movdqa xmm1,xmm0
   140022527:	movdqu xmm0,XMMWORD PTR [r11+rax*1+0x10]
   14002252e:	add    rax,0x20
   140022532:	pxor   xmm0,xmm2
   140022536:	movdqa xmm2,xmm0
   14002253a:	cmp    rax,0x1d00
   140022540:	jb     0x140022519
   140022542:	pxor   xmm1,xmm0
   140022546:	movdqa xmm0,xmm1
   14002254a:	psrldq xmm0,0x8
   14002254f:	pxor   xmm1,xmm0
   140022553:	movdqa xmm0,xmm1
   140022557:	psrldq xmm0,0x4
   14002255c:	pxor   xmm1,xmm0
   140022560:	movdqa xmm0,xmm1
   140022564:	psrldq xmm0,0x2
   140022569:	pxor   xmm1,xmm0
   14002256d:	movdqa xmm0,xmm1
   140022571:	psrldq xmm0,0x1
   140022576:	pxor   xmm1,xmm0
   14002257a:	movd   ecx,xmm1
   14002257e:	cmp    rax,0x1d18
   140022584:	jae    0x140022595
   140022586:	xor    cl,BYTE PTR [rax+r11*1]
   14002258a:	inc    rax
   14002258d:	cmp    rax,0x1d18
   140022593:	jb     0x140022586
   140022595:	movzx  eax,cl
   140022598:	cmp    rax,QWORD PTR [rip+0x23199]        # 0x140045738
   14002259f:	je     0x1400225b1
   1400225a1:	mov    r12d,0xc004d501
   1400225a7:	mov    rcx,r11
   1400225aa:	call   0x1400155d8
   1400225af:	jmp    0x1400225c3
   1400225b1:	mov    QWORD PTR [rbp+0x2a0],r11
   1400225b8:	mov    QWORD PTR [rbp+0x4a0],0x1d18
   1400225c3:	test   r12d,r12d
   1400225c6:	js     0x14002279d
   1400225cc:	mov    rcx,QWORD PTR [rbp+0x2a0]
   1400225d3:	call   0x14003a34c
   1400225d8:	mov    r9d,DWORD PTR [rbp-0x80]
   1400225dc:	test   al,al
   1400225de:	mov    r8d,0x6
   1400225e4:	cmovne rcx,rdi
   1400225e8:	lea    rdi,[rbp+0x1590]
   1400225ef:	xor    r13d,r13d
   1400225f2:	mov    edx,r13d
   1400225f5:	cmp    r9d,edx
   1400225f8:	jne    0x1400225fd
   1400225fa:	mov    QWORD PTR [rdi],rcx
   1400225fd:	or     rax,0xffffffffffffffff
   140022601:	inc    rax
   140022604:	cmp    BYTE PTR [rcx+rax*1],r13b
   140022608:	jne    0x140022601
   14002260a:	inc    rcx
   14002260d:	inc    edx
   14002260f:	add    rcx,rax
   140022612:	cmp    edx,0x27
   140022615:	jb     0x1400225f5
   140022617:	add    rdi,0x8
   14002261b:	sub    r8,0x1
   14002261f:	jne    0x1400225f2
   140022621:	lea    ecx,[r8+0x18]
   140022625:	call   0x14000f134
   14002262a:	mov    rdx,rax
   14002262d:	lea    rcx,[rbp+0x1a0]
   140022634:	call   0x140015398
   140022639:	mov    rbx,QWORD PTR [rbp+0x1a0]
   140022640:	mov    rcx,rbx
   140022643:	call   0x14003a34c
   140022648:	test   al,al
   14002264a:	jne    0x1400227db
   140022650:	test   rbx,rbx
   140022653:	je     0x1400227db
   140022659:	xor    eax,eax
   14002265b:	mov    DWORD PTR [rbp-0x78],r13d
   14002265f:	mov    QWORD PTR [rbx],rax
   140022662:	lea    rcx,[rbp+0x1660]
   140022669:	mov    rdx,r13
   14002266c:	mov    QWORD PTR [rbx+0x8],rax
   140022670:	mov    QWORD PTR [rbx+0x10],rax
   140022674:	mov    edi,r13d
   140022677:	mov    QWORD PTR [rbp-0x10],rdx
   14002267b:	mov    QWORD PTR [rbp-0x18],rcx
   14002267f:	movzx  r8d,WORD PTR [rcx]
   140022683:	lea    rcx,[rip+0x23156]        # 0x1400457e0
   14002268a:	mov    eax,r13d
   14002268d:	cmp    r8w,WORD PTR [rcx]
   140022691:	je     0x1400226a3
   140022693:	inc    eax
   140022695:	add    rcx,0x2
   140022699:	cmp    eax,0x6
   14002269c:	jb     0x14002268d
   14002269e:	jmp    0x14002275d
   1400226a3:	mov    r14,QWORD PTR [rbp+rax*8+0x1590]
   1400226ab:	or     rsi,0xffffffffffffffff
   1400226af:	cmp    BYTE PTR [r14+rsi*1+0x1],0x0
   1400226b5:	lea    rsi,[rsi+0x1]
   1400226b9:	jne    0x1400226af
   1400226bb:	mov    rdi,QWORD PTR [rip+0x2ba1e]        # 0x14004e0e0
   1400226c2:	mov    rcx,rdi
   1400226c5:	call   QWORD PTR [rip+0x1b05d]        # 0x14003d728
   1400226cb:	lea    r9d,[rsi+0x1]
   1400226cf:	mov    DWORD PTR [rsp+0x28],r13d
   1400226d4:	mov    r8,r14
   1400226d7:	mov    QWORD PTR [rsp+0x20],r13
   1400226dc:	xor    edx,edx
   1400226de:	mov    ecx,0xfde9
   1400226e3:	call   rdi
   1400226e5:	movsxd r13,eax
   1400226e8:	test   eax,eax
   1400226ea:	je     0x1400227ee
   1400226f0:	mov    rcx,r13
   1400226f3:	add    rcx,rcx
   1400226f6:	call   0x14000f134
   1400226fb:	mov    rcx,QWORD PTR [rbp-0x10]
   1400226ff:	mov    QWORD PTR [rbx+rcx*1],rax
   140022703:	cmp    rax,0x0
   140022707:	je     0x1400227db
   14002270d:	or     rsi,0xffffffffffffffff
   140022711:	cmp    BYTE PTR [r14+rsi*1+0x1],0x0
   140022717:	lea    rsi,[rsi+0x1]
   14002271b:	jne    0x140022711
   14002271d:	mov    rdi,QWORD PTR [rip+0x2b9bc]        # 0x14004e0e0
   140022724:	mov    rcx,rdi
   140022727:	call   QWORD PTR [rip+0x1affb]        # 0x14003d728
   14002272d:	mov    rax,QWORD PTR [rbp-0x10]
   140022731:	lea    r9d,[rsi+0x1]
   140022735:	mov    DWORD PTR [rsp+0x28],r13d
   14002273a:	mov    r8,r14
   14002273d:	xor    edx,edx
   14002273f:	mov    ecx,0xfde9
   140022744:	mov    rax,QWORD PTR [rbx+rax*1]
   140022748:	mov    QWORD PTR [rsp+0x20],rax
   14002274d:	call   rdi
   14002274f:	test   eax,eax
   140022751:	je     0x1400227ab
   140022753:	mov    rdx,QWORD PTR [rbp-0x10]
   140022757:	xor    r13d,r13d
   14002275a:	mov    edi,DWORD PTR [rbp-0x78]
   14002275d:	mov    rcx,QWORD PTR [rbp-0x18]
   140022761:	inc    edi
   140022763:	add    rcx,0x2
   140022767:	mov    DWORD PTR [rbp-0x78],edi
   14002276a:	add    rdx,0x8
   14002276e:	mov    QWORD PTR [rbp-0x18],rcx
   140022772:	mov    QWORD PTR [rbp-0x10],rdx
   140022776:	cmp    edi,0x3
   140022779:	jb     0x14002267f
   14002277f:	mov    rax,rbx
   140022782:	xor    edi,edi
   140022784:	mov    ebx,edi
   140022786:	mov    QWORD PTR [rbp+0x370],rax
   14002278d:	mov    eax,DWORD PTR [rbp-0x60]
   140022790:	mov    QWORD PTR [rbp+0x1a0],rbx
   140022797:	mov    DWORD PTR [rbp+0x7b0],eax
   14002279d:	mov    r13,QWORD PTR [rbp+0x18]
   1400227a1:	mov    r14d,DWORD PTR [rsp+0x68]
   1400227a6:	jmp    0x140022830
   1400227ab:	call   QWORD PTR [rip+0x1a9b7]        # 0x14003d168
   1400227b1:	mov    r12d,eax
   1400227b4:	test   eax,eax
   1400227b6:	jle    0x1400227c3
   1400227b8:	movzx  r12d,ax
   1400227bc:	or     r12d,0x80070000
   1400227c3:	test   r12d,r12d
   1400227c6:	js     0x1400227ce
   1400227c8:	mov    r12d,0x80004005
   1400227ce:	mov    r13,QWORD PTR [rbp+0x18]
   1400227d2:	xor    edi,edi
   1400227d4:	mov    r14d,DWORD PTR [rsp+0x68]
   1400227d9:	jmp    0x140022830
   1400227db:	mov    r13,QWORD PTR [rbp+0x18]
   1400227df:	mov    r12d,0x8007000e
   1400227e5:	mov    r14d,DWORD PTR [rsp+0x68]
   1400227ea:	xor    edi,edi
   1400227ec:	jmp    0x140022830
   1400227ee:	call   QWORD PTR [rip+0x1a974]        # 0x14003d168
   1400227f4:	mov    r12d,eax
   1400227f7:	test   eax,eax
   1400227f9:	jle    0x140022806
   1400227fb:	movzx  r12d,ax
   1400227ff:	or     r12d,0x80070000
   140022806:	test   r12d,r12d
   140022809:	js     0x1400227ce
   14002280b:	mov    r13,QWORD PTR [rbp+0x18]
   14002280f:	mov    r12d,0x80004005
   140022815:	mov    r14d,DWORD PTR [rsp+0x68]
   14002281a:	xor    edi,edi
   14002281c:	jmp    0x140022830
   14002281e:	mov    rax,QWORD PTR [rbp+0x158]
   140022825:	mov    r13,QWORD PTR [rbp+0x150]
   14002282c:	mov    QWORD PTR [rbp-0x48],rax
   140022830:	mov    rsi,QWORD PTR [rsp+0x70]
   140022835:	mov    rcx,rbx
   140022838:	call   0x14003a34c
   14002283d:	test   al,al
   14002283f:	jne    0x140022898
   140022841:	test   rbx,rbx
   140022844:	je     0x140022898
   140022846:	mov    rsi,rdi
   140022849:	mov    r14d,0x3
   14002284f:	cmp    QWORD PTR [rbx+rsi*1],0x0
   140022854:	je     0x140022882
   140022856:	mov    rax,QWORD PTR [rbx+rsi*1]
   14002285a:	or     rcx,0xffffffffffffffff
   14002285e:	cmp    WORD PTR [rax+rcx*2+0x2],0x0
   140022864:	lea    rcx,[rcx+0x1]
   140022868:	jne    0x14002285e
   14002286a:	mov    rdi,rax
   14002286d:	lea    rcx,[rcx*2+0x2]
   140022875:	xor    eax,eax
   140022877:	rep stos BYTE PTR es:[rdi],al
   140022879:	mov    rcx,QWORD PTR [rbx+rsi*1]
   14002287d:	call   0x1400155d8
   140022882:	add    rsi,0x8
   140022886:	sub    r14,0x1
   14002288a:	jne    0x14002284f
   14002288c:	mov    r14d,DWORD PTR [rsp+0x68]
   140022891:	xor    edi,edi
   140022893:	mov    rsi,QWORD PTR [rsp+0x70]
   140022898:	mov    rcx,QWORD PTR [rbp+0x2a0]
   14002289f:	call   0x14003a34c
   1400228a4:	test   al,al
   1400228a6:	jne    0x1400228bd
   1400228a8:	test   rcx,rcx
   1400228ab:	je     0x1400228bd
   1400228ad:	mov    rdi,rcx
   1400228b0:	xor    eax,eax
   1400228b2:	mov    rcx,QWORD PTR [rbp+0x4a0]
   1400228b9:	rep stos BYTE PTR es:[rdi],al
   1400228bb:	xor    edi,edi
   1400228bd:	lea    rcx,[rbp+0x1a0]
   1400228c4:	call   0x140015604
   1400228c9:	lea    rcx,[rbp+0x2a0]
   1400228d0:	call   0x140015604
   1400228d5:	lea    rcx,[rbp+0x4f8]
   1400228dc:	call   0x140015604
   1400228e1:	test   r12d,r12d
   1400228e4:	js     0x1400234e0
   1400228ea:	mov    rcx,QWORD PTR [rbp+0x370]
   1400228f1:	call   0x14003a34c
   1400228f6:	test   al,al
   1400228f8:	mov    rdx,rcx
   1400228fb:	mov    ebx,edi
   1400228fd:	mov    r12d,edi
   140022900:	cmovne rdx,rdi
   140022904:	mov    rdx,QWORD PTR [rdx]
   140022907:	mov    QWORD PTR [rbp+0x7b8],rdx
   14002290e:	mov    rdx,rcx
   140022911:	cmovne rcx,rdi
   140022915:	cmovne rdx,rdi
   140022919:	mov    rdi,QWORD PTR [rip+0x2b868]        # 0x14004e188
   140022920:	mov    rdx,QWORD PTR [rdx+0x8]
   140022924:	mov    QWORD PTR [rbp+0x7c0],rdx
   14002292b:	mov    rax,QWORD PTR [rcx+0x10]
   14002292f:	mov    rcx,rdi
   140022932:	mov    QWORD PTR [rbp+0x7c8],rax
   140022939:	xor    eax,eax
   14002293b:	mov    QWORD PTR [rbp+0x51c],rax
   140022942:	mov    DWORD PTR [rbp+0x524],eax
   140022948:	mov    DWORD PTR [rbp+0x518],0x10
   140022952:	call   QWORD PTR [rip+0x1add0]        # 0x14003d728
   140022958:	xor    edx,edx
   14002295a:	lea    r8,[rbp+0x518]
   140022961:	xor    r9d,r9d
   140022964:	lea    ecx,[rdx+0x42]
   140022967:	call   rdi
   140022969:	test   eax,eax
   14002296b:	jne    0x140022992
   14002296d:	call   QWORD PTR [rip+0x1a7f5]        # 0x14003d168
   140022973:	mov    r12d,eax
   140022976:	test   eax,eax
   140022978:	jle    0x140022985
   14002297a:	movzx  r12d,ax
   14002297e:	or     r12d,0x80070000
   140022985:	test   r12d,r12d
   140022988:	js     0x14002299b
   14002298a:	mov    r12d,0x80004005
   140022990:	jmp    0x14002299b
   140022992:	mov    ebx,DWORD PTR [rbp+0x51c]
   140022998:	and    ebx,0x1
   14002299b:	mov    DWORD PTR [rbp+0x7b4],ebx
   1400229a1:	test   r12d,r12d
   1400229a4:	js     0x1400234e0
   1400229aa:	mov    ecx,r14d
   1400229ad:	mov    eax,0x2a
   1400229b2:	mov    DWORD PTR [rbp+0x70],eax
   1400229b5:	sub    ecx,0x1
   1400229b8:	je     0x1400229dd
   1400229ba:	sub    ecx,0x1
   1400229bd:	je     0x1400229d4
   1400229bf:	cmp    ecx,0x1
   1400229c2:	jne    0x1400229e7
   1400229c4:	mov    r12d,0xe1
   1400229ca:	mov    DWORD PTR [rbp-0x68],r12d
   1400229ce:	mov    DWORD PTR [rbp+0x10],r12d
   1400229d2:	jmp    0x1400229e7
   1400229d4:	mov    DWORD PTR [rbp-0x68],0xf
   1400229db:	jmp    0x1400229e0
   1400229dd:	mov    DWORD PTR [rbp-0x68],eax
   1400229e0:	mov    DWORD PTR [rbp+0x10],0xb
   1400229e7:	mov    ebx,0x60
   1400229ec:	lea    rcx,[rbp+0xf72]
   1400229f3:	xor    r12d,r12d
   1400229f6:	mov    DWORD PTR [rbp-0x40],ebx
   1400229f9:	xor    edx,edx
   1400229fb:	mov    WORD PTR [rbp+0xf70],r12w
   140022a03:	lea    r8d,[rbx-0x22]
   140022a07:	call   0x140014694
   140022a0c:	xor    edx,edx
   140022a0e:	lea    r8d,[rbx+0x3c]
   140022a12:	lea    rcx,[rbp+0xfb0]
   140022a19:	call   0x140014694
   140022a1e:	mov    rdi,QWORD PTR [rip+0x2b6db]        # 0x14004e100
   140022a25:	mov    eax,0xdc
   140022a2a:	mov    rcx,rdi
   140022a2d:	mov    WORD PTR [rbp+0xfb4],ax
   140022a34:	call   QWORD PTR [rip+0x1acee]        # 0x14003d728
   140022a3a:	lea    r8,[rbp+0xf70]
   140022a41:	or     edx,0xffffffff
   140022a44:	xor    ecx,ecx
   140022a46:	call   rdi
   140022a48:	test   eax,eax
   140022a4a:	je     0x140022a87
   140022a4c:	mov    eax,DWORD PTR [rbp+0x101c]
   140022a52:	movzx  ebx,WORD PTR [rbp+0x1016]
   140022a59:	mov    DWORD PTR [rbp+0x488],eax
   140022a5f:	cmp    ebx,0x60
   140022a62:	mov    eax,DWORD PTR [rbp+0x1020]
   140022a68:	mov    DWORD PTR [rbp+0x48c],eax
   140022a6e:	mov    eax,0x60
   140022a73:	cmovl  ebx,eax
   140022a76:	mov    DWORD PTR [rbp+0x484],r12d
   140022a7d:	mov    DWORD PTR [rbp-0x40],ebx
   140022a80:	mov    DWORD PTR [rbp+0x480],r12d
   140022a87:	cmp    r14d,0x1
   140022a8b:	lea    rcx,[rbp+0xdb0]
   140022a92:	cmove  rsi,r13
   140022a96:	xor    edx,edx
   140022a98:	lea    r8d,[rdx+0x5c]
   140022a9c:	call   0x140014694
   140022aa1:	mov    rdi,QWORD PTR [rip+0x2b670]        # 0x14004e118
   140022aa8:	mov    rcx,rdi
   140022aab:	call   QWORD PTR [rip+0x1ac77]        # 0x14003d728
   140022ab1:	xor    edx,edx
   140022ab3:	xor    ecx,ecx
   140022ab5:	mov    r8d,0x403
   140022abb:	call   rdi
   140022abd:	mov    r14,rax
   140022ac0:	test   rax,rax
   140022ac3:	jne    0x140022af1
   140022ac5:	call   QWORD PTR [rip+0x1a69d]        # 0x14003d168
   140022acb:	mov    r12d,eax
   140022ace:	test   eax,eax
   140022ad0:	jle    0x140022add
   140022ad2:	movzx  r12d,ax
   140022ad6:	or     r12d,0x80070000
   140022add:	test   r12d,r12d
   140022ae0:	js     0x1400234e0
   140022ae6:	mov    r12d,0x80004005
   140022aec:	jmp    0x140022b9c
   140022af1:	mov    rdi,QWORD PTR [rip+0x2b5e0]        # 0x14004e0d8
   140022af8:	mov    rcx,rdi
   140022afb:	call   QWORD PTR [rip+0x1ac27]        # 0x14003d728
   140022b01:	mov    ecx,DWORD PTR [rbp-0x68]
   140022b04:	mov    r8d,0x48
   140022b0a:	mov    edx,ebx
   140022b0c:	call   rdi
   140022b0e:	neg    eax
   140022b10:	mov    DWORD PTR [rbp+0xdc0],0x190
   140022b1a:	mov    r8,rsi
   140022b1d:	mov    DWORD PTR [rbp+0xdb0],eax
   140022b23:	mov    edx,0x20
   140022b28:	mov    BYTE PTR [rbp+0xdca],0x5
   140022b2f:	lea    rcx,[rbp+0xdcc]
   140022b36:	call   0x14001531c
   140022b3b:	mov    rdi,QWORD PTR [rip+0x2b4fe]        # 0x14004e040
   140022b42:	mov    rcx,rdi
   140022b45:	call   QWORD PTR [rip+0x1abdd]        # 0x14003d728
   140022b4b:	lea    rcx,[rbp+0xdb0]
   140022b52:	call   rdi
   140022b54:	test   rax,rax
   140022b57:	jne    0x140022b7e
   140022b59:	call   QWORD PTR [rip+0x1a609]        # 0x14003d168
   140022b5f:	mov    r12d,eax
   140022b62:	test   eax,eax
   140022b64:	jle    0x140022b71
   140022b66:	movzx  r12d,ax
   140022b6a:	or     r12d,0x80070000
   140022b71:	test   r12d,r12d
   140022b74:	js     0x140022b85
   140022b76:	mov    r12d,0x80004005
   140022b7c:	jmp    0x140022b85
   140022b7e:	mov    QWORD PTR [rbp+0x7d0],rax
   140022b85:	mov    rdi,QWORD PTR [rip+0x2b5f4]        # 0x14004e180
   140022b8c:	mov    rcx,rdi
   140022b8f:	call   QWORD PTR [rip+0x1ab93]        # 0x14003d728
   140022b95:	mov    rdx,r14
   140022b98:	xor    ecx,ecx
   140022b9a:	call   rdi
   140022b9c:	test   r12d,r12d
   140022b9f:	js     0x1400234e0
   140022ba5:	mov    rax,QWORD PTR [rsp+0x70]
   140022baa:	lea    rcx,[rbp+0xe10]
   140022bb1:	mov    r14d,DWORD PTR [rsp+0x68]
   140022bb6:	cmp    r14d,0x1
   140022bba:	cmove  rax,r13
   140022bbe:	xor    edx,edx
   140022bc0:	mov    QWORD PTR [rsp+0x70],rax
   140022bc5:	lea    r8d,[rdx+0x5c]
   140022bc9:	call   0x140014694
   140022bce:	mov    rdi,QWORD PTR [rip+0x2b543]        # 0x14004e118
   140022bd5:	xor    eax,eax
   140022bd7:	mov    rcx,rdi
   140022bda:	mov    r12d,eax
   140022bdd:	call   QWORD PTR [rip+0x1ab45]        # 0x14003d728
   140022be3:	xor    edx,edx
   140022be5:	xor    ecx,ecx
   140022be7:	mov    r8d,0x403
   140022bed:	call   rdi
   140022bef:	mov    rsi,rax
   140022bf2:	test   rax,rax
   140022bf5:	jne    0x140022c28
   140022bf7:	call   QWORD PTR [rip+0x1a56b]        # 0x14003d168
   140022bfd:	mov    r12d,eax
   140022c00:	test   eax,eax
   140022c02:	jle    0x140022c0f
   140022c04:	movzx  r12d,ax
   140022c08:	or     r12d,0x80070000
   140022c0f:	mov    ebx,0x20
   140022c14:	test   r12d,r12d
   140022c17:	js     0x1400234db
   140022c1d:	mov    r12d,0x80004005
   140022c23:	jmp    0x140022cd7
   140022c28:	mov    rdi,QWORD PTR [rip+0x2b4a9]        # 0x14004e0d8
   140022c2f:	mov    rcx,rdi
   140022c32:	call   QWORD PTR [rip+0x1aaf0]        # 0x14003d728
   140022c38:	mov    ecx,DWORD PTR [rbp+0x10]
   140022c3b:	mov    r8d,0x48
   140022c41:	mov    edx,ebx
   140022c43:	call   rdi
   140022c45:	mov    r8,QWORD PTR [rsp+0x70]
   140022c4a:	lea    rcx,[rbp+0xe2c]
   140022c51:	neg    eax
   140022c53:	mov    DWORD PTR [rbp+0xe20],0x190
   140022c5d:	mov    ebx,0x20
   140022c62:	mov    DWORD PTR [rbp+0xe10],eax
   140022c68:	mov    edx,ebx
   140022c6a:	mov    BYTE PTR [rbp+0xe2a],0x5
   140022c71:	call   0x14001531c
   140022c76:	mov    rdi,QWORD PTR [rip+0x2b3c3]        # 0x14004e040
   140022c7d:	mov    rcx,rdi
   140022c80:	call   QWORD PTR [rip+0x1aaa2]        # 0x14003d728
   140022c86:	lea    rcx,[rbp+0xe10]
   140022c8d:	call   rdi
   140022c8f:	test   rax,rax
   140022c92:	jne    0x140022cb9
   140022c94:	call   QWORD PTR [rip+0x1a4ce]        # 0x14003d168
   140022c9a:	mov    r12d,eax
   140022c9d:	test   eax,eax
   140022c9f:	jle    0x140022cac
   140022ca1:	movzx  r12d,ax
   140022ca5:	or     r12d,0x80070000
   140022cac:	test   r12d,r12d
   140022caf:	js     0x140022cc0
   140022cb1:	mov    r12d,0x80004005
   140022cb7:	jmp    0x140022cc0
   140022cb9:	mov    QWORD PTR [rbp+0x7d8],rax
   140022cc0:	mov    rdi,QWORD PTR [rip+0x2b4b9]        # 0x14004e180
   140022cc7:	mov    rcx,rdi
   140022cca:	call   QWORD PTR [rip+0x1aa58]        # 0x14003d728
   140022cd0:	mov    rdx,rsi
   140022cd3:	xor    ecx,ecx
   140022cd5:	call   rdi
   140022cd7:	test   r12d,r12d
   140022cda:	js     0x1400234db
   140022ce0:	xor    edi,edi
   140022ce2:	mov    ecx,r14d
   140022ce5:	mov    esi,edi
   140022ce7:	mov    edx,edi
   140022ce9:	sub    ecx,0x1
   140022cec:	je     0x140022cf8
   140022cee:	sub    ecx,0x1
   140022cf1:	je     0x140022d2a
   140022cf3:	cmp    ecx,0x1
   140022cf6:	jne    0x140022d04
   140022cf8:	mov    esi,DWORD PTR [rbp+0x488]
   140022cfe:	mov    edx,DWORD PTR [rbp+0x48c]
   140022d04:	mov    DWORD PTR [rbp+0xf0],esi
   140022d0a:	mov    DWORD PTR [rbp+0xf4],edx
   140022d10:	cmp    r14d,0x1
   140022d14:	je     0x140022d60
   140022d16:	lea    eax,[r14-0x2]
   140022d1a:	cmp    eax,0x1
   140022d1d:	ja     0x140022d3e
   140022d1f:	mov    r13d,edi
   140022d22:	mov    DWORD PTR [rbp+0x70],edi
   140022d25:	mov    DWORD PTR [rbp+0x10],edi
   140022d28:	jmp    0x140022d69
   140022d2a:	mov    eax,DWORD PTR [rbp+0x488]
   140022d30:	cdq    
   140022d31:	and    edx,0x3
   140022d34:	lea    esi,[rdx+rax*1]
   140022d37:	mov    edx,edi
   140022d39:	sar    esi,0x2
   140022d3c:	jmp    0x140022d04
   140022d3e:	mov    eax,DWORD PTR [rbp+0x90]
   140022d44:	mov    r14d,DWORD PTR [rbp+0x90]
   140022d4b:	mov    r13d,DWORD PTR [rbp+0x90]
   140022d52:	mov    DWORD PTR [rbp+0x10],eax
   140022d55:	mov    eax,DWORD PTR [rbp+0x90]
   140022d5b:	mov    DWORD PTR [rbp+0x70],eax
   140022d5e:	jmp    0x140022d6c
   140022d60:	mov    r13d,0x96
   140022d66:	mov    DWORD PTR [rbp+0x10],ebx
   140022d69:	mov    r14d,edi
   140022d6c:	mov    rbx,QWORD PTR [rbp+0x7b8]
   140022d73:	sub    esi,r13d
   140022d76:	sub    esi,r14d
   140022d79:	mov    r12d,edi
   140022d7c:	mov    rdi,QWORD PTR [rip+0x2b315]        # 0x14004e098
   140022d83:	mov    rcx,rdi
   140022d86:	mov    DWORD PTR [rbp+0x804],esi
   140022d8c:	mov    DWORD PTR [rbp+0x7f4],esi
   140022d92:	call   QWORD PTR [rip+0x1a990]        # 0x14003d728
   140022d98:	mov    rdx,QWORD PTR [rbp+0x7d0]
   140022d9f:	mov    rcx,QWORD PTR [rsp+0x78]
   140022da4:	call   rdi
   140022da6:	mov    rdi,QWORD PTR [rip+0x2b34b]        # 0x14004e0f8
   140022dad:	mov    rcx,rdi
   140022db0:	mov    QWORD PTR [rbp-0x18],rax
   140022db4:	call   QWORD PTR [rip+0x1a96e]        # 0x14003d728
   140022dba:	mov    rcx,QWORD PTR [rsp+0x78]
   140022dbf:	lea    r9,[rbp+0x7ec]
   140022dc6:	xor    eax,eax
   140022dc8:	or     r8d,0xffffffff
   140022dcc:	mov    QWORD PTR [rsp+0x28],rax
   140022dd1:	mov    rdx,rbx
   140022dd4:	mov    DWORD PTR [rsp+0x20],0xc50
   140022ddc:	call   rdi
   140022dde:	test   eax,eax
   140022de0:	mov    eax,0x80004005
   140022de5:	cmove  r12d,eax
   140022de9:	mov    rbx,QWORD PTR [rbp-0x18]
   140022ded:	test   rbx,rbx
   140022df0:	je     0x140022e0c
   140022df2:	mov    rdi,QWORD PTR [rip+0x2b29f]        # 0x14004e098
   140022df9:	mov    rcx,rdi
   140022dfc:	call   QWORD PTR [rip+0x1a926]        # 0x14003d728
   140022e02:	mov    rcx,QWORD PTR [rsp+0x78]
   140022e07:	mov    rdx,rbx
   140022e0a:	call   rdi
   140022e0c:	test   r12d,r12d
   140022e0f:	js     0x1400234e0
   140022e15:	mov    rdi,QWORD PTR [rip+0x2b27c]        # 0x14004e098
   140022e1c:	xor    eax,eax
   140022e1e:	mov    rbx,QWORD PTR [rbp+0x7c0]
   140022e25:	mov    rcx,rdi
   140022e28:	mov    r12d,eax
   140022e2b:	call   QWORD PTR [rip+0x1a8f7]        # 0x14003d728
   140022e31:	mov    rdx,QWORD PTR [rbp+0x7d8]
   140022e38:	mov    rcx,QWORD PTR [rsp+0x78]
   140022e3d:	call   rdi
   140022e3f:	mov    rdi,QWORD PTR [rip+0x2b2b2]        # 0x14004e0f8
   140022e46:	mov    rcx,rdi
   140022e49:	mov    QWORD PTR [rbp-0x18],rax
   140022e4d:	call   QWORD PTR [rip+0x1a8d5]        # 0x14003d728
   140022e53:	mov    rcx,QWORD PTR [rsp+0x78]
   140022e58:	lea    r9,[rbp+0x7fc]
   140022e5f:	xor    eax,eax
   140022e61:	or     r8d,0xffffffff
   140022e65:	mov    QWORD PTR [rsp+0x28],rax
   140022e6a:	mov    rdx,rbx
   140022e6d:	mov    DWORD PTR [rsp+0x20],0xc50
   140022e75:	call   rdi
   140022e77:	test   eax,eax
   140022e79:	mov    eax,0x80004005
   140022e7e:	cmove  r12d,eax
   140022e82:	mov    rbx,QWORD PTR [rbp-0x18]
   140022e86:	test   rbx,rbx
   140022e89:	je     0x140022ea5
   140022e8b:	mov    rdi,QWORD PTR [rip+0x2b206]        # 0x14004e098
   140022e92:	mov    rcx,rdi
   140022e95:	call   QWORD PTR [rip+0x1a88d]        # 0x14003d728
   140022e9b:	mov    rcx,QWORD PTR [rsp+0x78]
   140022ea0:	mov    rdx,rbx
   140022ea3:	call   rdi
   140022ea5:	test   r12d,r12d
   140022ea8:	js     0x1400234e0
   140022eae:	mov    eax,DWORD PTR [rsp+0x68]
   140022eb2:	mov    ecx,DWORD PTR [rbp+0x7f4]
   140022eb8:	add    eax,0xfffffffe
   140022ebb:	cmp    eax,0x1
   140022ebe:	ja     0x140022ecb
   140022ec0:	mov    esi,DWORD PTR [rbp+0x804]
   140022ec6:	cmp    ecx,esi
   140022ec8:	cmovg  esi,ecx
   140022ecb:	cmp    DWORD PTR [rbp+0x7b0],0x0
   140022ed2:	mov    rdi,QWORD PTR [rip+0x2b297]        # 0x14004e170
   140022ed9:	je     0x140022f2e
   140022edb:	mov    ebx,r14d
   140022ede:	sub    ebx,ecx
   140022ee0:	mov    rcx,rdi
   140022ee3:	add    ebx,esi
   140022ee5:	call   QWORD PTR [rip+0x1a83d]        # 0x14003d728
   140022eeb:	mov    r8d,DWORD PTR [rbp+0x70]
   140022eef:	lea    rcx,[rbp+0x7ec]
   140022ef6:	mov    edx,ebx
   140022ef8:	call   rdi
   140022efa:	mov    rdi,QWORD PTR [rip+0x2b26f]        # 0x14004e170
   140022f01:	mov    ebx,DWORD PTR [rbp+0x10]
   140022f04:	mov    rcx,rdi
   140022f07:	sub    r14d,DWORD PTR [rbp+0x804]
   140022f0e:	add    ebx,DWORD PTR [rbp+0x7f8]
   140022f14:	add    r14d,esi
   140022f17:	call   QWORD PTR [rip+0x1a80b]        # 0x14003d728
   140022f1d:	mov    r8d,ebx
   140022f20:	lea    rcx,[rbp+0x7fc]
   140022f27:	mov    edx,r14d
   140022f2a:	call   rdi
   140022f2c:	jmp    0x140022f6f
   140022f2e:	mov    rcx,rdi
   140022f31:	call   QWORD PTR [rip+0x1a7f1]        # 0x14003d728
   140022f37:	mov    r8d,DWORD PTR [rbp+0x70]
   140022f3b:	lea    rcx,[rbp+0x7ec]
   140022f42:	mov    edx,r13d
   140022f45:	call   rdi
   140022f47:	mov    rbx,QWORD PTR [rip+0x2b222]        # 0x14004e170
   140022f4e:	mov    edi,DWORD PTR [rbp+0x10]
   140022f51:	mov    rcx,rbx
   140022f54:	add    edi,DWORD PTR [rbp+0x7f8]
   140022f5a:	call   QWORD PTR [rip+0x1a7c8]        # 0x14003d728
   140022f60:	mov    r8d,edi
   140022f63:	lea    rcx,[rbp+0x7fc]
   140022f6a:	mov    edx,r13d
   140022f6d:	call   rbx
   140022f6f:	mov    r13d,DWORD PTR [rsp+0x68]
   140022f74:	lea    eax,[r13-0x2]
   140022f78:	cmp    eax,0x1
   140022f7b:	jbe    0x14002329f
   140022f81:	cmp    r13d,0x1
   140022f85:	jne    0x1400232bb
   140022f8b:	xor    edx,edx
   140022f8d:	mov    DWORD PTR [rbp+0x7e8],0xffffff
   140022f97:	lea    r8d,[r13+0x5b]
   140022f9b:	lea    rcx,[rbp+0xe70]
   140022fa2:	call   0x140014694
   140022fa7:	mov    rdi,QWORD PTR [rip+0x2b16a]        # 0x14004e118
   140022fae:	xor    eax,eax
   140022fb0:	mov    rcx,rdi
   140022fb3:	mov    r12d,eax
   140022fb6:	call   QWORD PTR [rip+0x1a76c]        # 0x14003d728
   140022fbc:	xor    edx,edx
   140022fbe:	xor    ecx,ecx
   140022fc0:	mov    r8d,0x403
   140022fc6:	call   rdi
   140022fc8:	mov    rbx,rax
   140022fcb:	test   rax,rax
   140022fce:	jne    0x140023000
   140022fd0:	call   QWORD PTR [rip+0x1a192]        # 0x14003d168
   140022fd6:	mov    r12d,eax
   140022fd9:	test   eax,eax
   140022fdb:	jle    0x140022fe8
   140022fdd:	movzx  r12d,ax
   140022fe1:	or     r12d,0x80070000
   140022fe8:	mov    r14d,DWORD PTR [rbp-0x40]
   140022fec:	test   r12d,r12d
   140022fef:	js     0x1400234e5
   140022ff5:	mov    r12d,0x80004005
   140022ffb:	jmp    0x1400230b2
   140023000:	mov    rdi,QWORD PTR [rip+0x2b0d1]        # 0x14004e0d8
   140023007:	mov    rcx,rdi
   14002300a:	call   QWORD PTR [rip+0x1a718]        # 0x14003d728
   140023010:	mov    r14d,DWORD PTR [rbp-0x40]
   140023014:	mov    r8d,0x48
   14002301a:	mov    edx,r14d
   14002301d:	lea    ecx,[r8-0x3d]
   140023021:	call   rdi
   140023023:	mov    r8,QWORD PTR [rbp-0x48]
   140023027:	lea    rcx,[rbp+0xe8c]
   14002302e:	neg    eax
   140023030:	mov    DWORD PTR [rbp+0xe80],0x190
   14002303a:	mov    edx,0x20
   14002303f:	mov    DWORD PTR [rbp+0xe70],eax
   140023045:	mov    BYTE PTR [rbp+0xe8a],0x5
   14002304c:	call   0x14001531c
   140023051:	mov    rdi,QWORD PTR [rip+0x2afe8]        # 0x14004e040
   140023058:	mov    rcx,rdi
   14002305b:	call   QWORD PTR [rip+0x1a6c7]        # 0x14003d728
   140023061:	lea    rcx,[rbp+0xe70]
   140023068:	call   rdi
   14002306a:	test   rax,rax
   14002306d:	jne    0x140023094
   14002306f:	call   QWORD PTR [rip+0x1a0f3]        # 0x14003d168
   140023075:	mov    r12d,eax
   140023078:	test   eax,eax
   14002307a:	jle    0x140023087
   14002307c:	movzx  r12d,ax
   140023080:	or     r12d,0x80070000
   140023087:	test   r12d,r12d
   14002308a:	js     0x14002309b
   14002308c:	mov    r12d,0x80004005
   140023092:	jmp    0x14002309b
   140023094:	mov    QWORD PTR [rbp+0x7e0],rax
   14002309b:	mov    rdi,QWORD PTR [rip+0x2b0de]        # 0x14004e180
   1400230a2:	mov    rcx,rdi
   1400230a5:	call   QWORD PTR [rip+0x1a67d]        # 0x14003d728
   1400230ab:	mov    rdx,rbx
   1400230ae:	xor    ecx,ecx
   1400230b0:	call   rdi
   1400230b2:	test   r12d,r12d
   1400230b5:	js     0x1400234e5
   1400230bb:	mov    rdi,QWORD PTR [rip+0x2afd6]        # 0x14004e098
   1400230c2:	xor    eax,eax
   1400230c4:	mov    rbx,QWORD PTR [rbp+0x7c8]
   1400230cb:	mov    rcx,rdi
   1400230ce:	mov    DWORD PTR [rbp+0x814],esi
   1400230d4:	mov    r12d,eax
   1400230d7:	call   QWORD PTR [rip+0x1a64b]        # 0x14003d728
   1400230dd:	mov    r13,QWORD PTR [rsp+0x78]
   1400230e2:	mov    rdx,QWORD PTR [rbp+0x7e0]
   1400230e9:	mov    rcx,r13
   1400230ec:	call   rdi
   1400230ee:	mov    rdi,QWORD PTR [rip+0x2b003]        # 0x14004e0f8
   1400230f5:	mov    rsi,rax
   1400230f8:	mov    rcx,rdi
   1400230fb:	call   QWORD PTR [rip+0x1a627]        # 0x14003d728
   140023101:	xor    eax,eax
   140023103:	lea    r9,[rbp+0x80c]
   14002310a:	mov    QWORD PTR [rsp+0x28],rax
   14002310f:	or     r8d,0xffffffff
   140023113:	mov    rdx,rbx
   140023116:	mov    DWORD PTR [rsp+0x20],0x460
   14002311e:	mov    rcx,r13
   140023121:	call   rdi
   140023123:	test   eax,eax
   140023125:	mov    eax,0x80004005
   14002312a:	cmove  r12d,eax
   14002312e:	test   rsi,rsi
   140023131:	je     0x14002314b
   140023133:	mov    rdi,QWORD PTR [rip+0x2af5e]        # 0x14004e098
   14002313a:	mov    rcx,rdi
   14002313d:	call   QWORD PTR [rip+0x1a5e5]        # 0x14003d728
   140023143:	mov    rdx,rsi
   140023146:	mov    rcx,r13
   140023149:	call   rdi
   14002314b:	test   r12d,r12d
   14002314e:	js     0x1400234e0
   140023154:	mov    eax,DWORD PTR [rbp+0x814]
   14002315a:	mov    ecx,0x5a
   14002315f:	mov    rdi,QWORD PTR [rip+0x2af72]        # 0x14004e0d8
   140023166:	add    eax,0x18
   140023169:	cmp    eax,ecx
   14002316b:	mov    DWORD PTR [rbp+0x818],0x20
   140023175:	cmovl  eax,ecx
   140023178:	mov    rcx,rdi
   14002317b:	mov    DWORD PTR [rbp+0x814],eax
   140023181:	call   QWORD PTR [rip+0x1a5a1]        # 0x14003d728
   140023187:	mov    ecx,DWORD PTR [rbp+0x80c]
   14002318d:	mov    ebx,0x60
   140023192:	mov    r8d,ebx
   140023195:	mov    edx,r14d
   140023198:	call   rdi
   14002319a:	mov    rdi,QWORD PTR [rip+0x2af37]        # 0x14004e0d8
   1400231a1:	mov    rcx,rdi
   1400231a4:	mov    DWORD PTR [rbp+0x80c],eax
   1400231aa:	call   QWORD PTR [rip+0x1a578]        # 0x14003d728
   1400231b0:	mov    ecx,DWORD PTR [rbp+0x810]
   1400231b6:	mov    r8d,ebx
   1400231b9:	mov    edx,r14d
   1400231bc:	call   rdi
   1400231be:	mov    rdi,QWORD PTR [rip+0x2af13]        # 0x14004e0d8
   1400231c5:	mov    rcx,rdi
   1400231c8:	mov    DWORD PTR [rbp+0x810],eax
   1400231ce:	call   QWORD PTR [rip+0x1a554]        # 0x14003d728
   1400231d4:	mov    ecx,DWORD PTR [rbp+0x814]
   1400231da:	mov    r8d,ebx
   1400231dd:	mov    edx,r14d
   1400231e0:	call   rdi
   1400231e2:	mov    rdi,QWORD PTR [rip+0x2aeef]        # 0x14004e0d8
   1400231e9:	mov    rcx,rdi
   1400231ec:	mov    DWORD PTR [rbp+0x814],eax
   1400231f2:	call   QWORD PTR [rip+0x1a530]        # 0x14003d728
   1400231f8:	mov    ecx,DWORD PTR [rbp+0x818]
   1400231fe:	mov    r8d,ebx
   140023201:	mov    edx,r14d
   140023204:	call   rdi
   140023206:	cmp    DWORD PTR [rbp+0x7b0],0x0
   14002320d:	mov    DWORD PTR [rbp+0x818],eax
   140023213:	je     0x140023254
   140023215:	mov    esi,DWORD PTR [rbp+0x7fc]
   14002321b:	cmp    DWORD PTR [rbp+0x7ec],esi
   140023221:	mov    rbx,QWORD PTR [rip+0x2af48]        # 0x14004e170
   140023228:	cmovl  esi,DWORD PTR [rbp+0x7ec]
   14002322f:	mov    rcx,rbx
   140023232:	mov    edi,DWORD PTR [rbp+0x808]
   140023238:	call   QWORD PTR [rip+0x1a4ea]        # 0x14003d728
   14002323e:	lea    r8d,[rdi+0x24]
   140023242:	mov    edx,esi
   140023244:	lea    rcx,[rbp+0x80c]
   14002324b:	call   rbx
   14002324d:	mov    r13d,DWORD PTR [rsp+0x68]
   140023252:	jmp    0x1400232bb
   140023254:	mov    esi,DWORD PTR [rbp+0x804]
   14002325a:	cmp    DWORD PTR [rbp+0x7f4],esi
   140023260:	mov    rdi,QWORD PTR [rip+0x2af09]        # 0x14004e170
   140023267:	cmovg  esi,DWORD PTR [rbp+0x7f4]
   14002326e:	mov    rcx,rdi
   140023271:	sub    esi,DWORD PTR [rbp+0x814]
   140023277:	add    esi,DWORD PTR [rbp+0x80c]
   14002327d:	mov    ebx,DWORD PTR [rbp+0x808]
   140023283:	call   QWORD PTR [rip+0x1a49f]        # 0x14003d728
   140023289:	lea    r8d,[rbx+0x24]
   14002328d:	mov    edx,esi
   14002328f:	lea    rcx,[rbp+0x80c]
   140023296:	call   rdi
   140023298:	mov    r13d,DWORD PTR [rsp+0x68]
   14002329d:	jmp    0x1400232bb
   14002329f:	mov    eax,DWORD PTR [rbp+0x808]
   1400232a5:	mov    DWORD PTR [rbp+0xf4],eax
   1400232ab:	mov    DWORD PTR [rbp+0xf0],esi
   1400232b1:	mov    DWORD PTR [rbp+0x7e8],0xffa8a8a8
   1400232bb:	mov    r12d,DWORD PTR [rbp+0x7b0]
   1400232c2:	mov    ecx,r13d
   1400232c5:	mov    r14d,DWORD PTR [rbp+0xf4]
   1400232cc:	mov    esi,DWORD PTR [rbp+0xf0]
   1400232d2:	sub    ecx,0x1
   1400232d5:	je     0x1400234c8
   1400232db:	sub    ecx,0x1
   1400232de:	je     0x140023404
   1400232e4:	cmp    ecx,0x1
   1400232e7:	jne    0x1400233fa
   1400232ed:	xor    eax,eax
   1400232ef:	lea    r8d,[rcx+0x23]
   1400232f3:	lea    rcx,[rbp+0xcc4]
   1400232fa:	mov    DWORD PTR [rbp+0xcc0],eax
   140023300:	xor    edx,edx
   140023302:	call   0x140014694
   140023307:	mov    rdi,QWORD PTR [rip+0x2ae5a]        # 0x14004e168
   14002330e:	mov    rcx,rdi
   140023311:	call   QWORD PTR [rip+0x1a411]        # 0x14003d728
   140023317:	mov    edx,0x1
   14002331c:	xor    ecx,ecx
   14002331e:	call   rdi
   140023320:	mov    rdi,QWORD PTR [rip+0x2ae01]        # 0x14004e128
   140023327:	mov    rbx,rax
   14002332a:	mov    rcx,rdi
   14002332d:	mov    DWORD PTR [rbp+0xcc0],0x28
   140023337:	call   QWORD PTR [rip+0x1a3eb]        # 0x14003d728
   14002333d:	lea    rdx,[rbp+0xcc0]
   140023344:	mov    rcx,rbx
   140023347:	call   rdi
   140023349:	test   eax,eax
   14002334b:	je     0x1400233fa
   140023351:	mov    rdi,QWORD PTR [rip+0x2ae08]        # 0x14004e160
   140023358:	mov    rcx,rdi
   14002335b:	call   QWORD PTR [rip+0x1a3c7]        # 0x14003d728
   140023361:	lea    rdx,[rbp+0xcd4]
   140023368:	xor    ecx,ecx
   14002336a:	call   rdi
   14002336c:	mov    rdi,QWORD PTR [rip+0x2aded]        # 0x14004e160
   140023373:	mov    rcx,rdi
   140023376:	call   QWORD PTR [rip+0x1a3ac]        # 0x14003d728
   14002337c:	lea    rdx,[rbp+0xcdc]
   140023383:	xor    ecx,ecx
   140023385:	call   rdi
   140023387:	mov    eax,DWORD PTR [rbp+0xcdc]
   14002338d:	sub    eax,esi
   14002338f:	imul   ecx,eax,0x32
   140023392:	mov    eax,0x51eb851f
   140023397:	imul   ecx
   140023399:	sar    edx,0x5
   14002339c:	mov    ecx,edx
   14002339e:	shr    ecx,0x1f
   1400233a1:	add    edx,ecx
   1400233a3:	mov    rcx,QWORD PTR [rbp+0xcdc]
   1400233aa:	shr    rcx,0x20
   1400233ae:	sub    ecx,r14d
   1400233b1:	imul   ecx,ecx,0x32
   1400233b4:	jmp    0x1400233dd
   1400233b6:	sub    eax,esi
   1400233b8:	imul   ecx,eax,0x5f
   1400233bb:	mov    eax,0x51eb851f
   1400233c0:	imul   ecx
   1400233c2:	sar    edx,0x5
   1400233c5:	mov    eax,edx
   1400233c7:	shr    eax,0x1f
   1400233ca:	add    edx,eax
   1400233cc:	mov    rax,QWORD PTR [rbp+0xc84]
   1400233d3:	shr    rax,0x20
   1400233d7:	sub    eax,r14d
   1400233da:	imul   ecx,eax,0x5f
   1400233dd:	mov    DWORD PTR [rbp+0xe8],edx
   1400233e3:	mov    eax,0x51eb851f
   1400233e8:	imul   ecx
   1400233ea:	sar    edx,0x5
   1400233ed:	mov    eax,edx
   1400233ef:	shr    eax,0x1f
   1400233f2:	add    edx,eax
   1400233f4:	mov    DWORD PTR [rbp+0xec],edx
   1400233fa:	xor    edi,edi
   1400233fc:	mov    r12d,edi
   1400233ff:	jmp    0x1400234e5
   140023404:	xor    eax,eax
   140023406:	lea    rcx,[rbp+0xc6c]
   14002340d:	xor    edx,edx
   14002340f:	mov    DWORD PTR [rbp+0xc68],eax
   140023415:	lea    r8d,[rax+0x24]
   140023419:	call   0x140014694
   14002341e:	mov    rdi,QWORD PTR [rip+0x2ad43]        # 0x14004e168
   140023425:	mov    rcx,rdi
   140023428:	call   QWORD PTR [rip+0x1a2fa]        # 0x14003d728
   14002342e:	mov    edx,0x1
   140023433:	xor    ecx,ecx
   140023435:	call   rdi
   140023437:	mov    rdi,QWORD PTR [rip+0x2acea]        # 0x14004e128
   14002343e:	mov    rbx,rax
   140023441:	mov    rcx,rdi
   140023444:	mov    DWORD PTR [rbp+0xc68],0x28
   14002344e:	call   QWORD PTR [rip+0x1a2d4]        # 0x14003d728
   140023454:	lea    rdx,[rbp+0xc68]
   14002345b:	mov    rcx,rbx
   14002345e:	call   rdi
   140023460:	test   eax,eax
   140023462:	je     0x1400233fa
   140023464:	mov    rdi,QWORD PTR [rip+0x2acf5]        # 0x14004e160
   14002346b:	mov    rcx,rdi
   14002346e:	call   QWORD PTR [rip+0x1a2b4]        # 0x14003d728
   140023474:	lea    rdx,[rbp+0xc7c]
   14002347b:	xor    ecx,ecx
   14002347d:	call   rdi
   14002347f:	mov    rdi,QWORD PTR [rip+0x2acda]        # 0x14004e160
   140023486:	mov    rcx,rdi
   140023489:	call   QWORD PTR [rip+0x1a299]        # 0x14003d728
   14002348f:	lea    rdx,[rbp+0xc84]
   140023496:	xor    ecx,ecx
   140023498:	call   rdi
   14002349a:	mov    eax,DWORD PTR [rbp+0xc84]
   1400234a0:	test   r12d,r12d
   1400234a3:	je     0x1400233b6
   1400234a9:	lea    ecx,[rax+rax*4]
   1400234ac:	mov    eax,0x51eb851f
   1400234b1:	imul   ecx
   1400234b3:	sar    edx,0x5
   1400234b6:	mov    eax,edx
   1400234b8:	shr    eax,0x1f
   1400234bb:	add    edx,eax
   1400234bd:	add    edx,DWORD PTR [rbp+0xc7c]
   1400234c3:	jmp    0x1400233cc
   1400234c8:	xor    edi,edi
   1400234ca:	mov    DWORD PTR [rbp+0xe8],edi
   1400234d0:	mov    DWORD PTR [rbp+0xec],edi
   1400234d6:	jmp    0x1400233fc
   1400234db:	mov    r13d,r14d
   1400234de:	jmp    0x1400234e5
   1400234e0:	mov    r13d,DWORD PTR [rsp+0x68]
   1400234e5:	mov    rdi,QWORD PTR [rip+0x2ac94]        # 0x14004e180
   1400234ec:	mov    rcx,rdi
   1400234ef:	call   QWORD PTR [rip+0x1a233]        # 0x14003d728
   1400234f5:	mov    rdx,QWORD PTR [rsp+0x78]
   1400234fa:	xor    ecx,ecx
   1400234fc:	call   rdi
   1400234fe:	mov    rsi,QWORD PTR [rbp-0x38]
   140023502:	mov    ebx,0x1
   140023507:	xor    eax,eax
   140023509:	lock cmpxchg DWORD PTR [rip+0x2bc2f],ebx        # 0x14004f140
   140023511:	jne    0x140023507
   140023513:	mov    eax,DWORD PTR [rip+0x2b62f]        # 0x14004eb48
   140023519:	test   eax,eax
   14002351b:	jle    0x140023581
   14002351d:	sub    eax,0x1
   140023520:	mov    DWORD PTR [rip+0x2b622],eax        # 0x14004eb48
   140023526:	jne    0x140023581
   140023528:	lea    rdi,[rip+0x2bc21]        # 0x14004f150
   14002352f:	mov    ebx,0x4
   140023534:	mov    rcx,QWORD PTR [rdi]
   140023537:	test   rcx,rcx
   14002353a:	je     0x140023542
   14002353c:	call   QWORD PTR [rip+0x19d16]        # 0x14003d258
   140023542:	add    rdi,0x18
   140023546:	sub    rbx,0x1
   14002354a:	jne    0x140023534
   14002354c:	xor    edx,edx
   14002354e:	lea    r8d,[rbx+0x60]
   140023552:	lea    rcx,[rip+0x2bbf7]        # 0x14004f150
   140023559:	call   0x140014694
   14002355e:	lea    r14,[rip+0x2aabb]        # 0x14004e020
   140023565:	mov    r8d,0x170
   14002356b:	mov    rcx,r14
   14002356e:	lea    rdx,[rip+0x1e1fb]        # 0x140041770
   140023575:	call   0x1400156f2
   14002357a:	mov    ebx,0x1
   14002357f:	jmp    0x140023588
   140023581:	lea    r14,[rip+0x2aa98]        # 0x14004e020
   140023588:	xor    eax,eax
   14002358a:	lea    rcx,[rbp+0x370]
   140023591:	xchg   DWORD PTR [rip+0x2bba9],eax        # 0x14004f140
   140023597:	call   0x140015604
   14002359c:	test   r12d,r12d
   14002359f:	js     0x1400256c9
   1400235a5:	mov    rdi,QWORD PTR [rbp+0xe8]
   1400235ac:	lea    rcx,[rbp+0x824]
   1400235b3:	xor    r12d,r12d
   1400235b6:	mov    QWORD PTR [rbp-0x48],rdi
   1400235ba:	xor    edx,edx
   1400235bc:	mov    DWORD PTR [rbp+0x820],r12d
   1400235c3:	lea    r8d,[r12+0x64]
   1400235c8:	call   0x140014694
   1400235cd:	mov    esi,ebx
   1400235cf:	mov    rbx,QWORD PTR [rip+0x2aa9a]        # 0x14004e070
   1400235d6:	mov    rcx,rbx
   1400235d9:	call   QWORD PTR [rip+0x1a149]        # 0x14003d728
   1400235df:	mov    rcx,QWORD PTR [rbp-0x38]
   1400235e3:	lea    edx,[r12+0x7]
   1400235e8:	call   rbx
   1400235ea:	mov    r14,rax
   1400235ed:	test   rax,rax
   1400235f0:	je     0x14002363c
   1400235f2:	mov    rbx,QWORD PTR [rip+0x2aa8f]        # 0x14004e088
   1400235f9:	mov    rcx,rbx
   1400235fc:	call   QWORD PTR [rip+0x1a126]        # 0x14003d728
   140023602:	lea    r8,[rbp+0x820]
   140023609:	mov    rcx,r14
   14002360c:	lea    edx,[r12+0x68]
   140023611:	call   rbx
   140023613:	test   eax,eax
   140023615:	je     0x14002363c
   140023617:	cmp    WORD PTR [rbp+0x832],0x20
   14002361f:	jne    0x14002363c
   140023621:	cmp    QWORD PTR [rbp+0x838],r12
   140023628:	je     0x14002363c
   14002362a:	cmp    DWORD PTR [rbp+0x824],r12d
   140023631:	jle    0x14002363c
   140023633:	cmp    DWORD PTR [rbp+0x828],r12d
   14002363a:	jg     0x14002363f
   14002363c:	mov    esi,r12d
   14002363f:	mov    DWORD PTR [rbp+0x228],esi
   140023645:	test   esi,esi
   140023647:	jne    0x14002364f
   140023649:	cmp    r13d,0x1
   14002364d:	jne    0x1400236be
   14002364f:	mov    rbx,QWORD PTR [rip+0x2ab1a]        # 0x14004e170
   140023656:	mov    rcx,rbx
   140023659:	call   QWORD PTR [rip+0x1a0c9]        # 0x14003d728
   14002365f:	mov    r8d,DWORD PTR [rbp-0x44]
   140023663:	lea    rcx,[rbp+0x7ec]
   14002366a:	mov    edx,edi
   14002366c:	call   rbx
   14002366e:	mov    rbx,QWORD PTR [rip+0x2aafb]        # 0x14004e170
   140023675:	mov    rcx,rbx
   140023678:	call   QWORD PTR [rip+0x1a0aa]        # 0x14003d728
   14002367e:	mov    r8d,DWORD PTR [rbp-0x44]
   140023682:	lea    rcx,[rbp+0x7fc]
   140023689:	mov    edx,edi
   14002368b:	call   rbx
   14002368d:	cmp    r13d,0x1
   140023691:	jne    0x1400236be
   140023693:	cmp    DWORD PTR [rbp+0x7b4],r12d
   14002369a:	mov    ebx,0xb26720
   14002369f:	mov    rdi,QWORD PTR [rip+0x2a9a2]        # 0x14004e048
   1400236a6:	mov    rcx,rdi
   1400236a9:	cmovne ebx,r12d
   1400236ad:	call   QWORD PTR [rip+0x1a075]        # 0x14003d728
   1400236b3:	mov    ecx,ebx
   1400236b5:	call   rdi
   1400236b7:	mov    QWORD PTR [rbp+0x128],rax
   1400236be:	mov    rdi,QWORD PTR [rip+0x2a9db]        # 0x14004e0a0
   1400236c5:	mov    rcx,rdi
   1400236c8:	call   QWORD PTR [rip+0x1a05a]        # 0x14003d728
   1400236ce:	mov    rsi,QWORD PTR [rbp-0x38]
   1400236d2:	mov    edx,0x1
   1400236d7:	mov    rcx,rsi
   1400236da:	call   rdi
   1400236dc:	cmp    DWORD PTR [rbp+0x7b0],r12d
   1400236e3:	mov    ecx,0x20812
   1400236e8:	mov    DWORD PTR [rsp+0x78],eax
   1400236ec:	mov    eax,0x810
   1400236f1:	cmovne eax,ecx
   1400236f4:	mov    DWORD PTR [rbp+0x18],eax
   1400236f7:	cmp    DWORD PTR [rbp+0x228],r12d
   1400236fe:	je     0x1400241b5
   140023704:	mov    eax,DWORD PTR [rbp+0x7b4]
   14002370a:	lea    rcx,[rbp+0x974]
   140023711:	mov    r12,QWORD PTR [rbp+0x7b8]
   140023718:	xor    r13d,r13d
   14002371b:	mov    DWORD PTR [rsp+0x60],eax
   14002371f:	xor    edx,edx
   140023721:	mov    rax,QWORD PTR [rbp+0x7d0]
   140023728:	mov    QWORD PTR [rbp-0x18],rax
   14002372c:	lea    r8d,[r13+0x64]
   140023730:	mov    DWORD PTR [rbp+0x970],r13d
   140023737:	call   0x140014694
   14002373c:	xor    edx,edx
   14002373e:	mov    DWORD PTR [rbp+0xba0],r13d
   140023745:	lea    r8d,[r13+0x64]
   140023749:	lea    rcx,[rbp+0xba4]
   140023750:	call   0x140014694
   140023755:	xor    edx,edx
   140023757:	mov    QWORD PTR [rbp-0x48],r13
   14002375b:	lea    r8d,[r13+0x2c]
   14002375f:	mov    DWORD PTR [rbp-0x78],r13d
   140023763:	lea    rcx,[rbp+0xce8]
   14002376a:	mov    esi,r13d
   14002376d:	call   0x140014694
   140023772:	xorps  xmm0,xmm0
   140023775:	movdqu XMMWORD PTR [rbp+0xc48],xmm0
   14002377d:	test   r12,r12
   140023780:	je     0x140025006
   140023786:	mov    rdi,QWORD PTR [rip+0x2a8e3]        # 0x14004e070
   14002378d:	mov    rcx,rdi
   140023790:	call   QWORD PTR [rip+0x19f92]        # 0x14003d728
   140023796:	mov    r14,QWORD PTR [rbp-0x38]
   14002379a:	lea    edx,[r13+0x7]
   14002379e:	mov    rcx,r14
   1400237a1:	call   rdi
   1400237a3:	mov    rbx,rax
   1400237a6:	test   rax,rax
   1400237a9:	jne    0x1400237b9
   1400237ab:	call   QWORD PTR [rip+0x199b7]        # 0x14003d168
   1400237b1:	mov    rsi,r14
   1400237b4:	jmp    0x14002500a
   1400237b9:	mov    rdi,QWORD PTR [rip+0x2a8c8]        # 0x14004e088
   1400237c0:	mov    rcx,rdi
   1400237c3:	call   QWORD PTR [rip+0x19f5f]        # 0x14003d728
   1400237c9:	lea    r8,[rbp+0x970]
   1400237d0:	mov    edx,0x68
   1400237d5:	mov    rcx,rbx
   1400237d8:	call   rdi
   1400237da:	test   eax,eax
   1400237dc:	je     0x1400237f8
   1400237de:	mov    rax,QWORD PTR [rbp+0x988]
   1400237e5:	mov    esi,DWORD PTR [rbp+0x978]
   1400237eb:	mov    QWORD PTR [rbp-0x48],rax
   1400237ef:	mov    eax,DWORD PTR [rbp+0x974]
   1400237f5:	mov    DWORD PTR [rbp-0x78],eax
   1400237f8:	mov    rdi,QWORD PTR [rip+0x2a831]        # 0x14004e030
   1400237ff:	mov    rcx,rdi
   140023802:	call   QWORD PTR [rip+0x19f20]        # 0x14003d728
   140023808:	mov    rcx,r14
   14002380b:	call   rdi
   14002380d:	mov    r13,rax
   140023810:	test   rax,rax
   140023813:	jne    0x140023823
   140023815:	call   QWORD PTR [rip+0x1994d]        # 0x14003d168
   14002381b:	mov    rsi,r14
   14002381e:	jmp    0x14002500a
   140023823:	xor    ebx,ebx
   140023825:	lea    rcx,[rbp+0xce8]
   14002382c:	xor    edx,edx
   14002382e:	mov    QWORD PTR [rbp+0x598],rbx
   140023835:	mov    r14d,ebx
   140023838:	lea    r8d,[rbx+0x2c]
   14002383c:	call   0x140014694
   140023841:	mov    eax,DWORD PTR [rbp+0x7f4]
   140023847:	sub    eax,DWORD PTR [rbp+0x7ec]
   14002384d:	mov    rdi,QWORD PTR [rip+0x2a7e4]        # 0x14004e038
   140023854:	mov    DWORD PTR [rbp+0xcec],eax
   14002385a:	mov    rcx,rdi
   14002385d:	mov    eax,DWORD PTR [rbp+0x7f0]
   140023863:	sub    eax,DWORD PTR [rbp+0x7f8]
   140023869:	mov    DWORD PTR [rbp+0xcf0],eax
   14002386f:	mov    eax,0x1
   140023874:	mov    WORD PTR [rbp+0xcf4],ax
   14002387b:	mov    eax,0x20
   140023880:	mov    WORD PTR [rbp+0xcf6],ax
   140023887:	mov    DWORD PTR [rbp+0xce8],0x28
   140023891:	call   QWORD PTR [rip+0x19e91]        # 0x14003d728
   140023897:	lea    r9,[rbp+0x598]
   14002389e:	mov    DWORD PTR [rsp+0x28],ebx
   1400238a2:	xor    r8d,r8d
   1400238a5:	mov    QWORD PTR [rsp+0x20],rbx
   1400238aa:	lea    rdx,[rbp+0xce8]
   1400238b1:	mov    rcx,r13
   1400238b4:	call   rdi
   1400238b6:	mov    QWORD PTR [rbp-0x70],rax
   1400238ba:	mov    rbx,rax
   1400238bd:	test   rax,rax
   1400238c0:	jne    0x1400238ee
   1400238c2:	call   QWORD PTR [rip+0x198a0]        # 0x14003d168
   1400238c8:	mov    r14d,eax
   1400238cb:	test   eax,eax
   1400238cd:	jle    0x1400238da
   1400238cf:	movzx  r14d,ax
   1400238d3:	or     r14d,0x80070000
   1400238da:	test   r14d,r14d
   1400238dd:	js     0x140023c3c
   1400238e3:	mov    r14d,0x80004005
   1400238e9:	jmp    0x140023c3c
   1400238ee:	mov    rdi,QWORD PTR [rip+0x2a793]        # 0x14004e088
   1400238f5:	mov    rcx,rdi
   1400238f8:	call   QWORD PTR [rip+0x19e2a]        # 0x14003d728
   1400238fe:	lea    r8,[rbp+0xba0]
   140023905:	mov    edx,0x68
   14002390a:	mov    rcx,rbx
   14002390d:	call   rdi
   14002390f:	mov    rdi,QWORD PTR [rip+0x2a782]        # 0x14004e098
   140023916:	xor    ecx,ecx
   140023918:	test   eax,eax
   14002391a:	mov    eax,DWORD PTR [rbp+0x7f4]
   140023920:	cmovne rcx,QWORD PTR [rbp+0xbb8]
   140023928:	sub    eax,DWORD PTR [rbp+0x7ec]
   14002392e:	mov    DWORD PTR [rbp+0xc50],eax
   140023934:	mov    eax,DWORD PTR [rbp+0x7f8]
   14002393a:	sub    eax,DWORD PTR [rbp+0x7f0]
   140023940:	mov    QWORD PTR [rbp-0x10],rcx
   140023944:	mov    rcx,rdi
   140023947:	mov    DWORD PTR [rbp+0xc54],eax
   14002394d:	call   QWORD PTR [rip+0x19dd5]        # 0x14003d728
   140023953:	mov    rdx,rbx
   140023956:	mov    rcx,r13
   140023959:	call   rdi
   14002395b:	mov    rdi,QWORD PTR [rip+0x2a73e]        # 0x14004e0a0
   140023962:	mov    rcx,rdi
   140023965:	call   QWORD PTR [rip+0x19dbd]        # 0x14003d728
   14002396b:	mov    edx,0x1
   140023970:	mov    rcx,r13
   140023973:	call   rdi
   140023975:	mov    rdi,QWORD PTR [rip+0x2a71c]        # 0x14004e098
   14002397c:	mov    rcx,rdi
   14002397f:	call   QWORD PTR [rip+0x19da3]        # 0x14003d728
   140023985:	mov    rdx,QWORD PTR [rbp-0x18]
   140023989:	mov    rcx,r13
   14002398c:	call   rdi
   14002398e:	mov    rdi,QWORD PTR [rip+0x2a6fb]        # 0x14004e090
   140023995:	mov    rcx,rdi
   140023998:	mov    QWORD PTR [rbp-0x80],rax
   14002399c:	call   QWORD PTR [rip+0x19d86]        # 0x14003d728
   1400239a2:	xor    ecx,ecx
   1400239a4:	call   rdi
   1400239a6:	mov    rbx,QWORD PTR [rip+0x2a75b]        # 0x14004e108
   1400239ad:	mov    rdi,rax
   1400239b0:	mov    rcx,rbx
   1400239b3:	call   QWORD PTR [rip+0x19d6f]        # 0x14003d728
   1400239b9:	mov    r8,rdi
   1400239bc:	lea    rdx,[rbp+0xc48]
   1400239c3:	mov    rcx,r13
   1400239c6:	call   rbx
   1400239c8:	mov    rdi,QWORD PTR [rip+0x2a729]        # 0x14004e0f8
   1400239cf:	mov    rcx,rdi
   1400239d2:	call   QWORD PTR [rip+0x19d50]        # 0x14003d728
   1400239d8:	mov    eax,DWORD PTR [rbp+0x18]
   1400239db:	lea    r9,[rbp+0xc48]
   1400239e2:	xor    ebx,ebx
   1400239e4:	or     r8d,0xffffffff
   1400239e8:	mov    QWORD PTR [rsp+0x28],rbx
   1400239ed:	mov    rdx,r12
   1400239f0:	mov    rcx,r13
   1400239f3:	mov    DWORD PTR [rsp+0x20],eax
   1400239f7:	call   rdi
   1400239f9:	cmp    DWORD PTR [rsp+0x68],0x1
   1400239fe:	jne    0x140023a2b
   140023a00:	cmp    DWORD PTR [rsp+0x60],ebx
   140023a04:	je     0x140023a23
   140023a06:	mov    rdi,QWORD PTR [rip+0x2a72b]        # 0x14004e138
   140023a0d:	mov    rcx,rdi
   140023a10:	call   QWORD PTR [rip+0x19d12]        # 0x14003d728
   140023a16:	lea    ecx,[rbx+0x8]
   140023a19:	call   rdi
   140023a1b:	mov    r11d,eax
   140023a1e:	mov    DWORD PTR [rbp-0x40],eax
   140023a21:	jmp    0x140023a35
   140023a23:	mov    r11d,0xffffff
   140023a29:	jmp    0x140023a31
   140023a2b:	mov    r11d,0xffa8a8a8
   140023a31:	mov    DWORD PTR [rbp-0x40],r11d
   140023a35:	mov    r8d,DWORD PTR [rbp+0x7ec]
   140023a3c:	mov    edi,ebx
   140023a3e:	mov    edx,DWORD PTR [rbp+0x7f0]
   140023a44:	mov    ecx,ebx
   140023a46:	test   r8d,r8d
   140023a49:	jns    0x140023a53
   140023a4b:	mov    edi,r8d
   140023a4e:	mov    r8d,ebx
   140023a51:	neg    edi
   140023a53:	test   edx,edx
   140023a55:	jns    0x140023a5d
   140023a57:	mov    ecx,edx
   140023a59:	mov    edx,ebx
   140023a5b:	neg    ecx
   140023a5d:	movsxd r12,DWORD PTR [rbp-0x78]
   140023a61:	movsxd r9,DWORD PTR [rbp+0xc50]
   140023a68:	mov    r10d,r12d
   140023a6b:	sub    r10d,r8d
   140023a6e:	mov    eax,r9d
   140023a71:	sub    eax,edi
   140023a73:	cmp    eax,r10d
   140023a76:	cmovl  r10d,eax
   140023a7a:	mov    eax,DWORD PTR [rbp+0xc54]
   140023a80:	sub    eax,ecx
   140023a82:	sub    esi,edx
   140023a84:	cmp    eax,esi
   140023a86:	cmovl  esi,eax
   140023a89:	test   r10d,r10d
   140023a8c:	jle    0x140023c05
   140023a92:	test   esi,esi
   140023a94:	jle    0x140023c05
   140023a9a:	imul   ecx,r9d
   140023a9e:	movsxd rax,edi
   140023aa1:	imul   edx,r12d
   140023aa5:	movsxd rcx,ecx
   140023aa8:	add    rcx,rax
   140023aab:	mov    rax,QWORD PTR [rbp-0x10]
   140023aaf:	lea    rdi,[rax+rcx*4]
   140023ab3:	movsxd rax,r8d
   140023ab6:	movsxd rcx,edx
   140023ab9:	add    rcx,rax
   140023abc:	mov    QWORD PTR [rbp-0x18],rdi
   140023ac0:	mov    rax,QWORD PTR [rbp-0x48]
   140023ac4:	lea    rbx,[rax+rcx*4]
   140023ac8:	test   esi,esi
   140023aca:	jle    0x140023c05
   140023ad0:	mov    r8,r9
   140023ad3:	mov    eax,esi
   140023ad5:	shl    r8,0x2
   140023ad9:	mov    QWORD PTR [rsp+0x70],r8
   140023ade:	shl    r12,0x2
   140023ae2:	mov    QWORD PTR [rbp-0x10],rax
   140023ae6:	test   r10d,r10d
   140023ae9:	jle    0x140023bed
   140023aef:	mov    rsi,rdi
   140023af2:	lea    r9,[rbx+0x2]
   140023af6:	mov    edi,r10d
   140023af9:	sub    rsi,rbx
   140023afc:	mov    QWORD PTR [rbp-0x48],rdi
   140023b00:	movzx  eax,BYTE PTR [r9+rsi*1-0x2]
   140023b06:	movzx  ecx,BYTE PTR [r9+rsi*1-0x1]
   140023b0c:	lea    edx,[rax+rcx*2]
   140023b0f:	movzx  eax,BYTE PTR [r9+rsi*1]
   140023b14:	add    edx,eax
   140023b16:	sar    edx,0x2
   140023b19:	not    dl
   140023b1b:	test   dl,dl
   140023b1d:	je     0x140023bce
   140023b23:	movzx  edi,BYTE PTR [r9]
   140023b27:	mov    eax,0x80808081
   140023b2c:	movzx  r8d,dl
   140023b30:	movzx  ecx,r11b
   140023b34:	sub    ecx,edi
   140023b36:	imul   ecx,r8d
   140023b3a:	imul   ecx
   140023b3c:	add    edx,ecx
   140023b3e:	movzx  ecx,BYTE PTR [rbp-0x3f]
   140023b42:	sar    edx,0x7
   140023b45:	mov    eax,edx
   140023b47:	shr    eax,0x1f
   140023b4a:	add    edx,eax
   140023b4c:	mov    eax,0x80808081
   140023b51:	add    dl,dil
   140023b54:	mov    BYTE PTR [r9],dl
   140023b57:	movzx  edi,BYTE PTR [r9-0x1]
   140023b5c:	sub    ecx,edi
   140023b5e:	imul   ecx,r8d
   140023b62:	imul   ecx
   140023b64:	add    edx,ecx
   140023b66:	movzx  ecx,BYTE PTR [rbp-0x3e]
   140023b6a:	sar    edx,0x7
   140023b6d:	mov    eax,edx
   140023b6f:	shr    eax,0x1f
   140023b72:	add    edx,eax
   140023b74:	mov    eax,0x80808081
   140023b79:	add    dl,dil
   140023b7c:	mov    BYTE PTR [r9-0x1],dl
   140023b80:	movzx  edi,BYTE PTR [r9-0x2]
   140023b85:	sub    ecx,edi
   140023b87:	imul   ecx,r8d
   140023b8b:	imul   ecx
   140023b8d:	add    edx,ecx
   140023b8f:	mov    ecx,0xff
   140023b94:	sar    edx,0x7
   140023b97:	mov    eax,edx
   140023b99:	shr    eax,0x1f
   140023b9c:	add    edx,eax
   140023b9e:	mov    eax,0x80808081
   140023ba3:	add    dl,dil
   140023ba6:	mov    BYTE PTR [r9-0x2],dl
   140023baa:	movzx  edi,BYTE PTR [r9+0x1]
   140023baf:	sub    ecx,edi
   140023bb1:	imul   ecx,r8d
   140023bb5:	imul   ecx
   140023bb7:	add    edx,ecx
   140023bb9:	sar    edx,0x7
   140023bbc:	mov    eax,edx
   140023bbe:	shr    eax,0x1f
   140023bc1:	add    edx,eax
   140023bc3:	add    dl,dil
   140023bc6:	mov    rdi,QWORD PTR [rbp-0x48]
   140023bca:	mov    BYTE PTR [r9+0x1],dl
   140023bce:	add    r9,0x4
   140023bd2:	sub    rdi,0x1
   140023bd6:	mov    QWORD PTR [rbp-0x48],rdi
   140023bda:	jne    0x140023b00
   140023be0:	mov    rdi,QWORD PTR [rbp-0x18]
   140023be4:	mov    r8,QWORD PTR [rsp+0x70]
   140023be9:	mov    rax,QWORD PTR [rbp-0x10]
   140023bed:	add    rdi,r8
   140023bf0:	add    rbx,r12
   140023bf3:	sub    rax,0x1
   140023bf7:	mov    QWORD PTR [rbp-0x18],rdi
   140023bfb:	mov    QWORD PTR [rbp-0x10],rax
   140023bff:	jne    0x140023ae6
   140023c05:	mov    rdi,QWORD PTR [rip+0x2a44c]        # 0x14004e058
   140023c0c:	mov    rcx,rdi
   140023c0f:	call   QWORD PTR [rip+0x19b13]        # 0x14003d728
   140023c15:	mov    rcx,QWORD PTR [rbp-0x70]
   140023c19:	call   rdi
   140023c1b:	mov    rbx,QWORD PTR [rbp-0x80]
   140023c1f:	test   rbx,rbx
   140023c22:	je     0x140023c3c
   140023c24:	mov    rdi,QWORD PTR [rip+0x2a46d]        # 0x14004e098
   140023c2b:	mov    rcx,rdi
   140023c2e:	call   QWORD PTR [rip+0x19af4]        # 0x14003d728
   140023c34:	mov    rdx,rbx
   140023c37:	mov    rcx,r13
   140023c3a:	call   rdi
   140023c3c:	mov    rdi,QWORD PTR [rip+0x2a40d]        # 0x14004e050
   140023c43:	mov    rcx,rdi
   140023c46:	call   QWORD PTR [rip+0x19adc]        # 0x14003d728
   140023c4c:	mov    rcx,r13
   140023c4f:	call   rdi
   140023c51:	test   r14d,r14d
   140023c54:	js     0x1400241ad
   140023c5a:	mov    eax,DWORD PTR [rbp+0x7b4]
   140023c60:	lea    rcx,[rbp+0x904]
   140023c67:	mov    r12,QWORD PTR [rbp+0x7c0]
   140023c6e:	xor    r13d,r13d
   140023c71:	mov    DWORD PTR [rsp+0x60],eax
   140023c75:	xor    edx,edx
   140023c77:	mov    rax,QWORD PTR [rbp+0x7d8]
   140023c7e:	mov    QWORD PTR [rbp-0x18],rax
   140023c82:	lea    r8d,[r13+0x64]
   140023c86:	mov    DWORD PTR [rbp+0x900],r13d
   140023c8d:	call   0x140014694
   140023c92:	xor    edx,edx
   140023c94:	mov    DWORD PTR [rbp+0xb30],r13d
   140023c9b:	lea    r8d,[r13+0x64]
   140023c9f:	lea    rcx,[rbp+0xb34]
   140023ca6:	call   0x140014694
   140023cab:	xor    edx,edx
   140023cad:	mov    QWORD PTR [rbp-0x48],r13
   140023cb1:	lea    r8d,[r13+0x2c]
   140023cb5:	mov    DWORD PTR [rbp-0x78],r13d
   140023cb9:	lea    rcx,[rbp+0xd48]
   140023cc0:	mov    r14d,r13d
   140023cc3:	call   0x140014694
   140023cc8:	xorps  xmm0,xmm0
   140023ccb:	movdqu XMMWORD PTR [rbp+0xc38],xmm0
   140023cd3:	test   r12,r12
   140023cd6:	je     0x140025006
   140023cdc:	mov    rdi,QWORD PTR [rip+0x2a38d]        # 0x14004e070
   140023ce3:	mov    rcx,rdi
   140023ce6:	call   QWORD PTR [rip+0x19a3c]        # 0x14003d728
   140023cec:	mov    rsi,QWORD PTR [rbp-0x38]
   140023cf0:	lea    edx,[r13+0x7]
   140023cf4:	mov    rcx,rsi
   140023cf7:	call   rdi
   140023cf9:	mov    rbx,rax
   140023cfc:	test   rax,rax
   140023cff:	jne    0x140023d0c
   140023d01:	call   QWORD PTR [rip+0x19461]        # 0x14003d168
   140023d07:	jmp    0x14002500a
   140023d0c:	mov    rdi,QWORD PTR [rip+0x2a375]        # 0x14004e088
   140023d13:	mov    rcx,rdi
   140023d16:	call   QWORD PTR [rip+0x19a0c]        # 0x14003d728
   140023d1c:	lea    r8,[rbp+0x900]
   140023d23:	mov    edx,0x68
   140023d28:	mov    rcx,rbx
   140023d2b:	call   rdi
   140023d2d:	test   eax,eax
   140023d2f:	je     0x140023d4c
   140023d31:	mov    rax,QWORD PTR [rbp+0x918]
   140023d38:	mov    r14d,DWORD PTR [rbp+0x908]
   140023d3f:	mov    QWORD PTR [rbp-0x48],rax
   140023d43:	mov    eax,DWORD PTR [rbp+0x904]
   140023d49:	mov    DWORD PTR [rbp-0x78],eax
   140023d4c:	mov    rdi,QWORD PTR [rip+0x2a2dd]        # 0x14004e030
   140023d53:	mov    rcx,rdi
   140023d56:	call   QWORD PTR [rip+0x199cc]        # 0x14003d728
   140023d5c:	mov    rcx,rsi
   140023d5f:	call   rdi
   140023d61:	mov    r13,rax
   140023d64:	test   rax,rax
   140023d67:	jne    0x140023d74
   140023d69:	call   QWORD PTR [rip+0x193f9]        # 0x14003d168
   140023d6f:	jmp    0x14002500a
   140023d74:	xor    ebx,ebx
   140023d76:	lea    rcx,[rbp+0xd48]
   140023d7d:	xor    edx,edx
   140023d7f:	mov    QWORD PTR [rbp+0x628],rbx
   140023d86:	mov    esi,ebx
   140023d88:	mov    DWORD PTR [rbp-0x70],ebx
   140023d8b:	lea    r8d,[rbx+0x2c]
   140023d8f:	call   0x140014694
   140023d94:	mov    eax,DWORD PTR [rbp+0x804]
   140023d9a:	sub    eax,DWORD PTR [rbp+0x7fc]
   140023da0:	mov    rdi,QWORD PTR [rip+0x2a291]        # 0x14004e038
   140023da7:	mov    DWORD PTR [rbp+0xd4c],eax
   140023dad:	mov    rcx,rdi
   140023db0:	mov    eax,DWORD PTR [rbp+0x800]
   140023db6:	sub    eax,DWORD PTR [rbp+0x808]
   140023dbc:	mov    DWORD PTR [rbp+0xd50],eax
   140023dc2:	mov    eax,0x1
   140023dc7:	mov    WORD PTR [rbp+0xd54],ax
   140023dce:	mov    eax,0x20
   140023dd3:	mov    WORD PTR [rbp+0xd56],ax
   140023dda:	mov    DWORD PTR [rbp+0xd48],0x28
   140023de4:	call   QWORD PTR [rip+0x1993e]        # 0x14003d728
   140023dea:	lea    r9,[rbp+0x628]
   140023df1:	mov    DWORD PTR [rsp+0x28],ebx
   140023df5:	xor    r8d,r8d
   140023df8:	mov    QWORD PTR [rsp+0x20],rbx
   140023dfd:	lea    rdx,[rbp+0xd48]
   140023e04:	mov    rcx,r13
   140023e07:	call   rdi
   140023e09:	mov    QWORD PTR [rsp+0x70],rax
   140023e0e:	mov    rbx,rax
   140023e11:	test   rax,rax
   140023e14:	jne    0x140023e3d
   140023e16:	call   QWORD PTR [rip+0x1934c]        # 0x14003d168
   140023e1c:	mov    esi,eax
   140023e1e:	test   eax,eax
   140023e20:	jle    0x140023e2b
   140023e22:	movzx  esi,ax
   140023e25:	or     esi,0x80070000
   140023e2b:	test   esi,esi
   140023e2d:	js     0x140024184
   140023e33:	mov    esi,0x80004005
   140023e38:	jmp    0x140024184
   140023e3d:	mov    rdi,QWORD PTR [rip+0x2a244]        # 0x14004e088
   140023e44:	mov    rcx,rdi
   140023e47:	call   QWORD PTR [rip+0x198db]        # 0x14003d728
   140023e4d:	lea    r8,[rbp+0xb30]
   140023e54:	mov    edx,0x68
   140023e59:	mov    rcx,rbx
   140023e5c:	call   rdi
   140023e5e:	mov    rdi,QWORD PTR [rip+0x2a233]        # 0x14004e098
   140023e65:	xor    ecx,ecx
   140023e67:	test   eax,eax
   140023e69:	mov    eax,DWORD PTR [rbp+0x804]
   140023e6f:	cmovne rcx,QWORD PTR [rbp+0xb48]
   140023e77:	sub    eax,DWORD PTR [rbp+0x7fc]
   140023e7d:	mov    DWORD PTR [rbp+0xc40],eax
   140023e83:	mov    eax,DWORD PTR [rbp+0x808]
   140023e89:	sub    eax,DWORD PTR [rbp+0x800]
   140023e8f:	mov    QWORD PTR [rbp-0x10],rcx
   140023e93:	mov    rcx,rdi
   140023e96:	mov    DWORD PTR [rbp+0xc44],eax
   140023e9c:	call   QWORD PTR [rip+0x19886]        # 0x14003d728
   140023ea2:	mov    rdx,rbx
   140023ea5:	mov    rcx,r13
   140023ea8:	call   rdi
   140023eaa:	mov    rdi,QWORD PTR [rip+0x2a1ef]        # 0x14004e0a0
   140023eb1:	mov    rcx,rdi
   140023eb4:	call   QWORD PTR [rip+0x1986e]        # 0x14003d728
   140023eba:	mov    edx,0x1
   140023ebf:	mov    rcx,r13
   140023ec2:	call   rdi
   140023ec4:	mov    rdi,QWORD PTR [rip+0x2a1cd]        # 0x14004e098
   140023ecb:	mov    rcx,rdi
   140023ece:	call   QWORD PTR [rip+0x19854]        # 0x14003d728
   140023ed4:	mov    rdx,QWORD PTR [rbp-0x18]
   140023ed8:	mov    rcx,r13
   140023edb:	call   rdi
   140023edd:	mov    rdi,QWORD PTR [rip+0x2a1ac]        # 0x14004e090
   140023ee4:	mov    rcx,rdi
   140023ee7:	mov    QWORD PTR [rbp-0x80],rax
   140023eeb:	call   QWORD PTR [rip+0x19837]        # 0x14003d728
   140023ef1:	xor    ecx,ecx
   140023ef3:	call   rdi
   140023ef5:	mov    rbx,QWORD PTR [rip+0x2a20c]        # 0x14004e108
   140023efc:	mov    rdi,rax
   140023eff:	mov    rcx,rbx
   140023f02:	call   QWORD PTR [rip+0x19820]        # 0x14003d728
   140023f08:	mov    r8,rdi
   140023f0b:	lea    rdx,[rbp+0xc38]
   140023f12:	mov    rcx,r13
   140023f15:	call   rbx
   140023f17:	mov    rdi,QWORD PTR [rip+0x2a1da]        # 0x14004e0f8
   140023f1e:	mov    rcx,rdi
   140023f21:	call   QWORD PTR [rip+0x19801]        # 0x14003d728
   140023f27:	mov    eax,DWORD PTR [rbp+0x18]
   140023f2a:	lea    r9,[rbp+0xc38]
   140023f31:	xor    ebx,ebx
   140023f33:	or     r8d,0xffffffff
   140023f37:	mov    QWORD PTR [rsp+0x28],rbx
   140023f3c:	mov    rdx,r12
   140023f3f:	mov    rcx,r13
   140023f42:	mov    DWORD PTR [rsp+0x20],eax
   140023f46:	call   rdi
   140023f48:	cmp    DWORD PTR [rsp+0x68],0x1
   140023f4d:	jne    0x140023f75
   140023f4f:	cmp    DWORD PTR [rsp+0x60],ebx
   140023f53:	je     0x140023f6c
   140023f55:	mov    rdi,QWORD PTR [rip+0x2a1dc]        # 0x14004e138
   140023f5c:	mov    rcx,rdi
   140023f5f:	call   QWORD PTR [rip+0x197c3]        # 0x14003d728
   140023f65:	lea    ecx,[rbx+0x8]
   140023f68:	call   rdi
   140023f6a:	jmp    0x140023f7a
   140023f6c:	mov    DWORD PTR [rbp-0x40],0xffffff
   140023f73:	jmp    0x140023f80
   140023f75:	mov    eax,0xffa8a8a8
   140023f7a:	mov    DWORD PTR [rbp-0x40],eax
   140023f7d:	mov    DWORD PTR [rbp-0x28],eax
   140023f80:	mov    r8d,DWORD PTR [rbp+0x7fc]
   140023f87:	mov    edi,ebx
   140023f89:	mov    edx,DWORD PTR [rbp+0x800]
   140023f8f:	mov    ecx,ebx
   140023f91:	test   r8d,r8d
   140023f94:	jns    0x140023f9e
   140023f96:	mov    edi,r8d
   140023f99:	mov    r8d,ebx
   140023f9c:	neg    edi
   140023f9e:	test   edx,edx
   140023fa0:	jns    0x140023fa8
   140023fa2:	mov    ecx,edx
   140023fa4:	mov    edx,ebx
   140023fa6:	neg    ecx
   140023fa8:	movsxd r9,DWORD PTR [rbp+0xc40]
   140023faf:	movsxd rbx,DWORD PTR [rbp-0x78]
   140023fb3:	mov    eax,r9d
   140023fb6:	sub    eax,edi
   140023fb8:	mov    r10d,ebx
   140023fbb:	sub    r10d,r8d
   140023fbe:	cmp    eax,r10d
   140023fc1:	cmovl  r10d,eax
   140023fc5:	mov    eax,DWORD PTR [rbp+0xc44]
   140023fcb:	sub    eax,ecx
   140023fcd:	sub    r14d,edx
   140023fd0:	cmp    eax,r14d
   140023fd3:	cmovl  r14d,eax
   140023fd7:	test   r10d,r10d
   140023fda:	jle    0x14002414c
   140023fe0:	test   r14d,r14d
   140023fe3:	jle    0x14002414c
   140023fe9:	imul   ecx,r9d
   140023fed:	movsxd rax,edi
   140023ff0:	imul   edx,ebx
   140023ff3:	movsxd rcx,ecx
   140023ff6:	add    rcx,rax
   140023ff9:	mov    rax,QWORD PTR [rbp-0x10]
   140023ffd:	lea    r12,[rax+rcx*4]
   140024001:	movsxd rax,r8d
   140024004:	movsxd rcx,edx
   140024007:	add    rcx,rax
   14002400a:	mov    rax,QWORD PTR [rbp-0x48]
   14002400e:	lea    r11,[rax+rcx*4]
   140024012:	test   r14d,r14d
   140024015:	jle    0x14002414c
   14002401b:	mov    esi,DWORD PTR [rbp-0x28]
   14002401e:	mov    rdi,r9
   140024021:	shl    rdi,0x2
   140024025:	mov    r8,rbx
   140024028:	shl    r8,0x2
   14002402c:	mov    eax,r14d
   14002402f:	mov    QWORD PTR [rbp-0x10],r8
   140024033:	mov    QWORD PTR [rbp-0x18],rdi
   140024037:	mov    QWORD PTR [rbp-0x48],rax
   14002403b:	test   r10d,r10d
   14002403e:	jle    0x140024135
   140024044:	mov    rbx,r12
   140024047:	mov    r14d,r10d
   14002404a:	sub    rbx,r11
   14002404d:	lea    r9,[r11+0x2]
   140024051:	movzx  eax,BYTE PTR [r9+rbx*1-0x2]
   140024057:	movzx  ecx,BYTE PTR [r9+rbx*1-0x1]
   14002405d:	lea    edx,[rax+rcx*2]
   140024060:	movzx  eax,BYTE PTR [r9+rbx*1]
   140024065:	add    edx,eax
   140024067:	sar    edx,0x2
   14002406a:	not    dl
   14002406c:	test   dl,dl
   14002406e:	je     0x14002411b
   140024074:	movzx  edi,BYTE PTR [r9]
   140024078:	mov    eax,0x80808081
   14002407d:	movzx  r8d,dl
   140024081:	movzx  ecx,sil
   140024085:	sub    ecx,edi
   140024087:	imul   ecx,r8d
   14002408b:	imul   ecx
   14002408d:	add    edx,ecx
   14002408f:	movzx  ecx,BYTE PTR [rbp-0x3f]
   140024093:	sar    edx,0x7
   140024096:	mov    eax,edx
   140024098:	shr    eax,0x1f
   14002409b:	add    edx,eax
   14002409d:	mov    eax,0x80808081
   1400240a2:	add    dl,dil
   1400240a5:	mov    BYTE PTR [r9],dl
   1400240a8:	movzx  edi,BYTE PTR [r9-0x1]
   1400240ad:	sub    ecx,edi
   1400240af:	imul   ecx,r8d
   1400240b3:	imul   ecx
   1400240b5:	add    edx,ecx
   1400240b7:	movzx  ecx,BYTE PTR [rbp-0x3e]
   1400240bb:	sar    edx,0x7
   1400240be:	mov    eax,edx
   1400240c0:	shr    eax,0x1f
   1400240c3:	add    edx,eax
   1400240c5:	mov    eax,0x80808081
   1400240ca:	add    dl,dil
   1400240cd:	mov    BYTE PTR [r9-0x1],dl
   1400240d1:	movzx  edi,BYTE PTR [r9-0x2]
   1400240d6:	sub    ecx,edi
   1400240d8:	imul   ecx,r8d
   1400240dc:	imul   ecx
   1400240de:	add    edx,ecx
   1400240e0:	mov    ecx,0xff
   1400240e5:	sar    edx,0x7
   1400240e8:	mov    eax,edx
   1400240ea:	shr    eax,0x1f
   1400240ed:	add    edx,eax
   1400240ef:	mov    eax,0x80808081
   1400240f4:	add    dl,dil
   1400240f7:	mov    BYTE PTR [r9-0x2],dl
   1400240fb:	movzx  edi,BYTE PTR [r9+0x1]
   140024100:	sub    ecx,edi
   140024102:	imul   ecx,r8d
   140024106:	imul   ecx
   140024108:	add    edx,ecx
   14002410a:	sar    edx,0x7
   14002410d:	mov    eax,edx
   14002410f:	shr    eax,0x1f
   140024112:	add    edx,eax
   140024114:	add    dl,dil
   140024117:	mov    BYTE PTR [r9+0x1],dl
   14002411b:	add    r9,0x4
   14002411f:	sub    r14,0x1
   140024123:	jne    0x140024051
   140024129:	mov    rdi,QWORD PTR [rbp-0x18]
   14002412d:	mov    r8,QWORD PTR [rbp-0x10]
   140024131:	mov    rax,QWORD PTR [rbp-0x48]
   140024135:	add    r12,rdi
   140024138:	add    r11,r8
   14002413b:	sub    rax,0x1
   14002413f:	mov    QWORD PTR [rbp-0x48],rax
   140024143:	jne    0x14002403b
   140024149:	mov    esi,DWORD PTR [rbp-0x70]
   14002414c:	mov    rdi,QWORD PTR [rip+0x29f05]        # 0x14004e058
   140024153:	mov    rcx,rdi
   140024156:	call   QWORD PTR [rip+0x195cc]        # 0x14003d728
   14002415c:	mov    rcx,QWORD PTR [rsp+0x70]
   140024161:	call   rdi
   140024163:	mov    rbx,QWORD PTR [rbp-0x80]
   140024167:	test   rbx,rbx
   14002416a:	je     0x140024184
   14002416c:	mov    rdi,QWORD PTR [rip+0x29f25]        # 0x14004e098
   140024173:	mov    rcx,rdi
   140024176:	call   QWORD PTR [rip+0x195ac]        # 0x14003d728
   14002417c:	mov    rdx,rbx
   14002417f:	mov    rcx,r13
   140024182:	call   rdi
   140024184:	mov    rdi,QWORD PTR [rip+0x29ec5]        # 0x14004e050
   14002418b:	mov    rcx,rdi
   14002418e:	call   QWORD PTR [rip+0x19594]        # 0x14003d728
   140024194:	mov    rcx,r13
   140024197:	call   rdi
   140024199:	test   esi,esi
   14002419b:	js     0x1400241ad
   14002419d:	mov    rsi,QWORD PTR [rbp-0x30]
   1400241a1:	xor    r13d,r13d
   1400241a4:	mov    r14,QWORD PTR [rbp-0x38]
   1400241a8:	jmp    0x140024fa3
   1400241ad:	xor    r13d,r13d
   1400241b0:	jmp    0x140025006
   1400241b5:	cmp    DWORD PTR [rbp+0x7b4],r12d
   1400241bc:	jne    0x1400241c6
   1400241be:	mov    al,0xc0
   1400241c0:	cmp    r13d,0x1
   1400241c4:	jne    0x1400241c8
   1400241c6:	mov    al,0xff
   1400241c8:	mov    rdi,QWORD PTR [rip+0x29e61]        # 0x14004e030
   1400241cf:	xorps  xmm0,xmm0
   1400241d2:	mov    rcx,rdi
   1400241d5:	mov    BYTE PTR [rbp-0x60],r12b
   1400241d9:	mov    BYTE PTR [rbp-0x5f],r12b
   1400241dd:	mov    BYTE PTR [rbp-0x5e],al
   1400241e0:	mov    BYTE PTR [rbp-0x5d],0x1
   1400241e4:	movdqu XMMWORD PTR [rbp+0x250],xmm0
   1400241ec:	call   QWORD PTR [rip+0x19536]        # 0x14003d728
   1400241f2:	mov    rcx,rsi
   1400241f5:	call   rdi
   1400241f7:	mov    QWORD PTR [rbp-0x30],rax
   1400241fb:	test   rax,rax
   1400241fe:	jne    0x14002420e
   140024200:	call   QWORD PTR [rip+0x18f62]        # 0x14003d168
   140024206:	xor    r13d,r13d
   140024209:	jmp    0x14002500a
   14002420e:	cmp    r13d,0x1
   140024212:	jne    0x1400242ba
   140024218:	mov    r8d,DWORD PTR [rbp+0x7f4]
   14002421f:	mov    eax,r8d
   140024222:	mov    r9d,DWORD PTR [rbp+0x804]
   140024229:	mov    ecx,r9d
   14002422c:	mov    esi,DWORD PTR [rbp+0x7ec]
   140024232:	sub    eax,esi
   140024234:	mov    r10d,DWORD PTR [rbp+0x7fc]
   14002423b:	mov    edi,eax
   14002423d:	mov    r11d,DWORD PTR [rbp+0x808]
   140024244:	sub    ecx,r10d
   140024247:	mov    edx,DWORD PTR [rbp+0x7f0]
   14002424d:	cmp    ecx,eax
   14002424f:	mov    ebx,r11d
   140024252:	cmovg  edi,ecx
   140024255:	sub    ebx,edx
   140024257:	mov    DWORD PTR [rbp-0x80],edi
   14002425a:	mov    DWORD PTR [rbp-0x68],ebx
   14002425d:	cmp    DWORD PTR [rbp+0x7b0],r12d
   140024264:	je     0x14002427c
   140024266:	sub    esi,r8d
   140024269:	mov    r12d,r10d
   14002426c:	add    esi,edi
   14002426e:	sub    r12d,r9d
   140024271:	mov    DWORD PTR [rbp+0x250],esi
   140024277:	add    r12d,edi
   14002427a:	jmp    0x140024282
   14002427c:	mov    esi,DWORD PTR [rbp+0x250]
   140024282:	mov    r13d,DWORD PTR [rbp+0x800]
   140024289:	lea    r14d,[rsi+rax*1]
   14002428d:	mov    ebx,DWORD PTR [rbp+0x7f8]
   140024293:	lea    eax,[rcx+r12*1]
   140024297:	sub    r13d,edx
   14002429a:	mov    DWORD PTR [rbp+0x258],r14d
   1400242a1:	sub    ebx,edx
   1400242a3:	mov    ecx,r13d
   1400242a6:	sub    ecx,DWORD PTR [rbp+0x800]
   1400242ac:	add    ecx,r11d
   1400242af:	mov    DWORD PTR [rbp+0x25c],ebx
   1400242b5:	mov    DWORD PTR [rbp-0x78],ecx
   1400242b8:	jmp    0x140024318
   1400242ba:	movups xmm0,XMMWORD PTR [rbp+0x7ec]
   1400242c1:	mov    eax,DWORD PTR [rbp+0xf4]
   1400242c7:	mov    edi,DWORD PTR [rbp+0xf0]
   1400242cd:	movups XMMWORD PTR [rbp+0x250],xmm0
   1400242d4:	mov    ebx,DWORD PTR [rbp+0x25c]
   1400242da:	movups xmm0,XMMWORD PTR [rbp+0x7fc]
   1400242e1:	mov    r14d,DWORD PTR [rbp+0x258]
   1400242e8:	mov    esi,DWORD PTR [rbp+0x250]
   1400242ee:	movups XMMWORD PTR [rbp+0x150],xmm0
   1400242f5:	mov    r13d,DWORD PTR [rbp+0x154]
   1400242fc:	mov    r12d,DWORD PTR [rbp+0x150]
   140024303:	mov    DWORD PTR [rbp-0x68],eax
   140024306:	mov    eax,DWORD PTR [rbp+0x15c]
   14002430c:	mov    DWORD PTR [rbp-0x78],eax
   14002430f:	mov    eax,DWORD PTR [rbp+0x158]
   140024315:	mov    DWORD PTR [rbp-0x80],edi
   140024318:	mov    DWORD PTR [rbp+0x10],eax
   14002431b:	lea    rcx,[rbp+0xc90]
   140024322:	xor    eax,eax
   140024324:	xor    edx,edx
   140024326:	mov    QWORD PTR [rbp+0x5a8],rax
   14002432d:	lea    r8d,[rax+0x2c]
   140024331:	call   0x140014694
   140024336:	mov    eax,DWORD PTR [rbp-0x68]
   140024339:	neg    eax
   14002433b:	mov    DWORD PTR [rbp+0xc94],edi
   140024341:	mov    rdi,QWORD PTR [rip+0x29cf0]        # 0x14004e038
   140024348:	mov    DWORD PTR [rbp+0xc98],eax
   14002434e:	mov    rcx,rdi
   140024351:	mov    eax,0x1
   140024356:	mov    DWORD PTR [rbp+0xc90],0x28
   140024360:	mov    WORD PTR [rbp+0xc9c],ax
   140024367:	mov    eax,0x20
   14002436c:	mov    WORD PTR [rbp+0xc9e],ax
   140024373:	call   QWORD PTR [rip+0x193af]        # 0x14003d728
   140024379:	mov    rcx,QWORD PTR [rbp-0x30]
   14002437d:	lea    r9,[rbp+0x5a8]
   140024384:	xor    eax,eax
   140024386:	lea    rdx,[rbp+0xc90]
   14002438d:	mov    DWORD PTR [rsp+0x28],eax
   140024391:	xor    r8d,r8d
   140024394:	mov    QWORD PTR [rsp+0x20],rax
   140024399:	call   rdi
   14002439b:	mov    QWORD PTR [rbp+0x168],rax
   1400243a2:	test   rax,rax
   1400243a5:	jne    0x1400243b9
   1400243a7:	call   QWORD PTR [rip+0x18dbb]        # 0x14003d168
   1400243ad:	mov    rsi,QWORD PTR [rbp-0x30]
   1400243b1:	xor    r13d,r13d
   1400243b4:	jmp    0x140024fec
   1400243b9:	mov    rdi,QWORD PTR [rip+0x29cd8]        # 0x14004e098
   1400243c0:	mov    rcx,rdi
   1400243c3:	call   QWORD PTR [rip+0x1935f]        # 0x14003d728
   1400243c9:	mov    rdx,QWORD PTR [rbp+0x168]
   1400243d0:	mov    rcx,QWORD PTR [rbp-0x30]
   1400243d4:	call   rdi
   1400243d6:	cmp    DWORD PTR [rsp+0x68],0x1
   1400243db:	jne    0x14002442b
   1400243dd:	cmp    QWORD PTR [rbp+0x128],0x0
   1400243e5:	je     0x14002442b
   1400243e7:	mov    rdi,QWORD PTR [rip+0x29d1a]        # 0x14004e108
   1400243ee:	xor    eax,eax
   1400243f0:	mov    DWORD PTR [rbp+0xc58],eax
   1400243f6:	mov    rcx,rdi
   1400243f9:	mov    DWORD PTR [rbp+0xc5c],eax
   1400243ff:	mov    eax,DWORD PTR [rbp-0x80]
   140024402:	mov    DWORD PTR [rbp+0xc60],eax
   140024408:	mov    eax,DWORD PTR [rbp-0x68]
   14002440b:	mov    DWORD PTR [rbp+0xc64],eax
   140024411:	call   QWORD PTR [rip+0x19311]        # 0x14003d728
   140024417:	mov    r8,QWORD PTR [rbp+0x128]
   14002441e:	lea    rdx,[rbp+0xc58]
   140024425:	mov    rcx,QWORD PTR [rbp-0x30]
   140024429:	call   rdi
   14002442b:	mov    eax,DWORD PTR [rbp+0x7b4]
   140024431:	lea    rcx,[rbp+0x9e4]
   140024438:	mov    rdi,QWORD PTR [rbp+0x7b8]
   14002443f:	xor    edx,edx
   140024441:	mov    DWORD PTR [rsp+0x70],eax
   140024445:	mov    rax,QWORD PTR [rbp+0x7d0]
   14002444c:	mov    QWORD PTR [rbp+0xb0],rax
   140024453:	xor    eax,eax
   140024455:	mov    QWORD PTR [rbp+0xc0],rdi
   14002445c:	mov    DWORD PTR [rbp+0x9e0],eax
   140024462:	lea    r8d,[rax+0x64]
   140024466:	call   0x140014694
   14002446b:	xor    eax,eax
   14002446d:	lea    rcx,[rbp+0xac4]
   140024474:	xor    edx,edx
   140024476:	mov    DWORD PTR [rbp+0xac0],eax
   14002447c:	lea    r8d,[rax+0x64]
   140024480:	call   0x140014694
   140024485:	xor    ecx,ecx
   140024487:	xor    edx,edx
   140024489:	mov    QWORD PTR [rbp-0x48],rcx
   14002448d:	mov    DWORD PTR [rbp-0x70],ecx
   140024490:	mov    DWORD PTR [rsp+0x60],ecx
   140024494:	lea    r8d,[rcx+0x2c]
   140024498:	lea    rcx,[rbp+0xd18]
   14002449f:	call   0x140014694
   1400244a4:	xorps  xmm0,xmm0
   1400244a7:	movdqu XMMWORD PTR [rbp+0xc28],xmm0
   1400244af:	test   rdi,rdi
   1400244b2:	je     0x140024fc4
   1400244b8:	mov    rdi,QWORD PTR [rip+0x29bb1]        # 0x14004e070
   1400244bf:	mov    rcx,rdi
   1400244c2:	call   QWORD PTR [rip+0x19260]        # 0x14003d728
   1400244c8:	mov    rcx,QWORD PTR [rbp-0x30]
   1400244cc:	mov    edx,0x7
   1400244d1:	call   rdi
   1400244d3:	mov    QWORD PTR [rbp-0x18],rax
   1400244d7:	test   rax,rax
   1400244da:	je     0x140024fbe
   1400244e0:	mov    rdi,QWORD PTR [rip+0x29ba1]        # 0x14004e088
   1400244e7:	mov    rcx,rdi
   1400244ea:	call   QWORD PTR [rip+0x19238]        # 0x14003d728
   1400244f0:	mov    rcx,QWORD PTR [rbp-0x18]
   1400244f4:	lea    r8,[rbp+0x9e0]
   1400244fb:	mov    edx,0x68
   140024500:	call   rdi
   140024502:	test   eax,eax
   140024504:	je     0x140024524
   140024506:	mov    rax,QWORD PTR [rbp+0x9f8]
   14002450d:	mov    QWORD PTR [rbp-0x48],rax
   140024511:	mov    eax,DWORD PTR [rbp+0x9e4]
   140024517:	mov    DWORD PTR [rbp-0x70],eax
   14002451a:	mov    eax,DWORD PTR [rbp+0x9e8]
   140024520:	mov    DWORD PTR [rsp+0x60],eax
   140024524:	mov    rdi,QWORD PTR [rip+0x29b05]        # 0x14004e030
   14002452b:	mov    rcx,rdi
   14002452e:	call   QWORD PTR [rip+0x191f4]        # 0x14003d728
   140024534:	mov    rcx,QWORD PTR [rbp-0x30]
   140024538:	call   rdi
   14002453a:	mov    QWORD PTR [rbp-0x10],rax
   14002453e:	test   rax,rax
   140024541:	je     0x140024fbe
   140024547:	xor    eax,eax
   140024549:	lea    rcx,[rbp+0xd18]
   140024550:	xor    edx,edx
   140024552:	mov    QWORD PTR [rbp+0x528],rax
   140024559:	mov    DWORD PTR [rbp+0x70],eax
   14002455c:	lea    r8d,[rax+0x2c]
   140024560:	call   0x140014694
   140024565:	mov    rdi,QWORD PTR [rip+0x29acc]        # 0x14004e038
   14002456c:	sub    r14d,esi
   14002456f:	mov    DWORD PTR [rbp-0x40],r14d
   140024573:	mov    rcx,rdi
   140024576:	mov    DWORD PTR [rbp+0xd1c],r14d
   14002457d:	mov    r14d,DWORD PTR [rbp+0x254]
   140024584:	mov    eax,r14d
   140024587:	sub    eax,ebx
   140024589:	mov    DWORD PTR [rbp+0xd18],0x28
   140024593:	mov    DWORD PTR [rbp+0xd20],eax
   140024599:	mov    eax,0x1
   14002459e:	mov    WORD PTR [rbp+0xd24],ax
   1400245a5:	mov    eax,0x20
   1400245aa:	mov    WORD PTR [rbp+0xd26],ax
   1400245b1:	call   QWORD PTR [rip+0x19171]        # 0x14003d728
   1400245b7:	mov    rcx,QWORD PTR [rbp-0x10]
   1400245bb:	lea    r9,[rbp+0x528]
   1400245c2:	xor    eax,eax
   1400245c4:	lea    rdx,[rbp+0xd18]
   1400245cb:	mov    DWORD PTR [rsp+0x28],eax
   1400245cf:	xor    r8d,r8d
   1400245d2:	mov    QWORD PTR [rsp+0x20],rax
   1400245d7:	call   rdi
   1400245d9:	mov    QWORD PTR [rbp-0x18],rax
   1400245dd:	test   rax,rax
   1400245e0:	jne    0x14002460e
   1400245e2:	call   QWORD PTR [rip+0x18b80]        # 0x14003d168
   1400245e8:	mov    DWORD PTR [rbp+0x70],eax
   1400245eb:	test   eax,eax
   1400245ed:	jle    0x1400245fc
   1400245ef:	movzx  eax,ax
   1400245f2:	or     eax,0x80070000
   1400245f7:	mov    DWORD PTR [rbp+0x70],eax
   1400245fa:	test   eax,eax
   1400245fc:	js     0x14002497d
   140024602:	mov    DWORD PTR [rbp+0x70],0x80004005
   140024609:	jmp    0x14002497d
   14002460e:	mov    rdi,QWORD PTR [rip+0x29a73]        # 0x14004e088
   140024615:	mov    rcx,rdi
   140024618:	call   QWORD PTR [rip+0x1910a]        # 0x14003d728
   14002461e:	mov    rcx,QWORD PTR [rbp-0x18]
   140024622:	lea    r8,[rbp+0xac0]
   140024629:	mov    edx,0x68
   14002462e:	call   rdi
   140024630:	mov    rdi,QWORD PTR [rip+0x29a61]        # 0x14004e098
   140024637:	xor    ecx,ecx
   140024639:	test   eax,eax
   14002463b:	mov    eax,DWORD PTR [rbp-0x40]
   14002463e:	mov    DWORD PTR [rbp+0xc30],eax
   140024644:	cmovne rcx,QWORD PTR [rbp+0xad8]
   14002464c:	sub    ebx,r14d
   14002464f:	mov    QWORD PTR [rbp+0x150],rcx
   140024656:	mov    rcx,rdi
   140024659:	mov    DWORD PTR [rbp+0xc34],ebx
   14002465f:	call   QWORD PTR [rip+0x190c3]        # 0x14003d728
   140024665:	mov    rbx,QWORD PTR [rbp-0x10]
   140024669:	mov    rdx,QWORD PTR [rbp-0x18]
   14002466d:	mov    rcx,rbx
   140024670:	call   rdi
   140024672:	mov    rdi,QWORD PTR [rip+0x29a27]        # 0x14004e0a0
   140024679:	mov    rcx,rdi
   14002467c:	call   QWORD PTR [rip+0x190a6]        # 0x14003d728
   140024682:	mov    edx,0x1
   140024687:	mov    rcx,rbx
   14002468a:	call   rdi
   14002468c:	mov    rdi,QWORD PTR [rip+0x29a05]        # 0x14004e098
   140024693:	mov    rcx,rdi
   140024696:	call   QWORD PTR [rip+0x1908c]        # 0x14003d728
   14002469c:	mov    rdx,QWORD PTR [rbp+0xb0]
   1400246a3:	mov    rcx,rbx
   1400246a6:	call   rdi
   1400246a8:	mov    rdi,QWORD PTR [rip+0x299e1]        # 0x14004e090
   1400246af:	mov    rcx,rdi
   1400246b2:	mov    QWORD PTR [rbp+0xb0],rax
   1400246b9:	call   QWORD PTR [rip+0x19069]        # 0x14003d728
   1400246bf:	xor    ecx,ecx
   1400246c1:	call   rdi
   1400246c3:	mov    rbx,QWORD PTR [rip+0x29a3e]        # 0x14004e108
   1400246ca:	mov    rdi,rax
   1400246cd:	mov    rcx,rbx
   1400246d0:	call   QWORD PTR [rip+0x19052]        # 0x14003d728
   1400246d6:	mov    rcx,QWORD PTR [rbp-0x10]
   1400246da:	lea    rdx,[rbp+0xc28]
   1400246e1:	mov    r8,rdi
   1400246e4:	call   rbx
   1400246e6:	mov    rdi,QWORD PTR [rip+0x29a0b]        # 0x14004e0f8
   1400246ed:	mov    rcx,rdi
   1400246f0:	call   QWORD PTR [rip+0x19032]        # 0x14003d728
   1400246f6:	mov    rbx,QWORD PTR [rbp-0x10]
   1400246fa:	lea    r9,[rbp+0xc28]
   140024701:	mov    rdx,QWORD PTR [rbp+0xc0]
   140024708:	xor    eax,eax
   14002470a:	mov    QWORD PTR [rsp+0x28],rax
   14002470f:	or     r8d,0xffffffff
   140024713:	mov    eax,DWORD PTR [rbp+0x18]
   140024716:	mov    rcx,rbx
   140024719:	mov    DWORD PTR [rsp+0x20],eax
   14002471d:	call   rdi
   14002471f:	cmp    DWORD PTR [rsp+0x68],0x1
   140024724:	jne    0x140024754
   140024726:	cmp    DWORD PTR [rsp+0x70],0x0
   14002472b:	je     0x14002474c
   14002472d:	mov    rdi,QWORD PTR [rip+0x29a04]        # 0x14004e138
   140024734:	mov    rcx,rdi
   140024737:	call   QWORD PTR [rip+0x18feb]        # 0x14003d728
   14002473d:	mov    ecx,0x8
   140024742:	call   rdi
   140024744:	mov    r11d,eax
   140024747:	mov    DWORD PTR [rbp-0x40],eax
   14002474a:	jmp    0x14002475e
   14002474c:	mov    r11d,0xffffff
   140024752:	jmp    0x14002475a
   140024754:	mov    r11d,0xffa8a8a8
   14002475a:	mov    DWORD PTR [rbp-0x40],r11d
   14002475e:	xor    eax,eax
   140024760:	mov    edi,eax
   140024762:	mov    ecx,eax
   140024764:	test   esi,esi
   140024766:	jns    0x14002476e
   140024768:	mov    edi,esi
   14002476a:	mov    esi,eax
   14002476c:	neg    edi
   14002476e:	test   r14d,r14d
   140024771:	jns    0x14002477b
   140024773:	mov    ecx,r14d
   140024776:	mov    r14d,eax
   140024779:	neg    ecx
   14002477b:	movsxd r8,DWORD PTR [rbp+0xc30]
   140024782:	movsxd r9,DWORD PTR [rbp-0x70]
   140024786:	mov    eax,r8d
   140024789:	mov    edx,DWORD PTR [rsp+0x60]
   14002478d:	sub    eax,edi
   14002478f:	mov    r10d,r9d
   140024792:	sub    r10d,esi
   140024795:	cmp    eax,r10d
   140024798:	cmovl  r10d,eax
   14002479c:	mov    eax,DWORD PTR [rbp+0xc34]
   1400247a2:	sub    eax,ecx
   1400247a4:	sub    edx,r14d
   1400247a7:	cmp    eax,edx
   1400247a9:	cmovl  edx,eax
   1400247ac:	test   r10d,r10d
   1400247af:	jle    0x140024943
   1400247b5:	test   edx,edx
   1400247b7:	jle    0x140024943
   1400247bd:	imul   ecx,r8d
   1400247c1:	movsxd rax,edi
   1400247c4:	imul   r14d,r9d
   1400247c8:	movsxd rcx,ecx
   1400247cb:	add    rcx,rax
   1400247ce:	mov    rax,QWORD PTR [rbp+0x150]
   1400247d5:	lea    rdi,[rax+rcx*4]
   1400247d9:	movsxd rax,esi
   1400247dc:	movsxd rcx,r14d
   1400247df:	add    rcx,rax
   1400247e2:	mov    QWORD PTR [rsp+0x70],rdi
   1400247e7:	mov    rax,QWORD PTR [rbp-0x48]
   1400247eb:	lea    rsi,[rax+rcx*4]
   1400247ef:	test   edx,edx
   1400247f1:	jle    0x140024943
   1400247f7:	shl    r8,0x2
   1400247fb:	mov    rax,r9
   1400247fe:	shl    rax,0x2
   140024802:	mov    ecx,edx
   140024804:	mov    QWORD PTR [rbp+0xc0],rax
   14002480b:	mov    QWORD PTR [rbp+0x150],r8
   140024812:	mov    QWORD PTR [rsp+0x60],rcx
   140024817:	test   r10d,r10d
   14002481a:	jle    0x140024929
   140024820:	mov    r14,rdi
   140024823:	lea    r9,[rsi+0x2]
   140024827:	mov    edi,r10d
   14002482a:	sub    r14,rsi
   14002482d:	mov    QWORD PTR [rbp-0x48],rdi
   140024831:	movzx  eax,BYTE PTR [r9+r14*1-0x2]
   140024837:	movzx  ecx,BYTE PTR [r9+r14*1-0x1]
   14002483d:	lea    edx,[rax+rcx*2]
   140024840:	movzx  eax,BYTE PTR [r9+r14*1]
   140024845:	add    edx,eax
   140024847:	sar    edx,0x2
   14002484a:	not    dl
   14002484c:	test   dl,dl
   14002484e:	je     0x1400248ff
   140024854:	movzx  edi,BYTE PTR [r9]
   140024858:	mov    eax,0x80808081
   14002485d:	movzx  r8d,dl
   140024861:	movzx  ecx,r11b
   140024865:	sub    ecx,edi
   140024867:	imul   ecx,r8d
   14002486b:	imul   ecx
   14002486d:	add    edx,ecx
   14002486f:	movzx  ecx,BYTE PTR [rbp-0x3f]
   140024873:	sar    edx,0x7
   140024876:	mov    eax,edx
   140024878:	shr    eax,0x1f
   14002487b:	add    edx,eax
   14002487d:	mov    eax,0x80808081
   140024882:	add    dl,dil
   140024885:	mov    BYTE PTR [r9],dl
   140024888:	movzx  edi,BYTE PTR [r9-0x1]
   14002488d:	sub    ecx,edi
   14002488f:	imul   ecx,r8d
   140024893:	imul   ecx
   140024895:	add    edx,ecx
   140024897:	movzx  ecx,BYTE PTR [rbp-0x3e]
   14002489b:	sar    edx,0x7
   14002489e:	mov    eax,edx
   1400248a0:	shr    eax,0x1f
   1400248a3:	add    edx,eax
   1400248a5:	mov    eax,0x80808081
   1400248aa:	add    dl,dil
   1400248ad:	mov    BYTE PTR [r9-0x1],dl
   1400248b1:	movzx  edi,BYTE PTR [r9-0x2]
   1400248b6:	sub    ecx,edi
   1400248b8:	imul   ecx,r8d
   1400248bc:	imul   ecx
   1400248be:	add    edx,ecx
   1400248c0:	mov    ecx,0xff
   1400248c5:	sar    edx,0x7
   1400248c8:	mov    eax,edx
   1400248ca:	shr    eax,0x1f
   1400248cd:	add    edx,eax
   1400248cf:	mov    eax,0x80808081
   1400248d4:	add    dl,dil
   1400248d7:	mov    BYTE PTR [r9-0x2],dl
   1400248db:	movzx  edi,BYTE PTR [r9+0x1]
   1400248e0:	sub    ecx,edi
   1400248e2:	imul   ecx,r8d
   1400248e6:	imul   ecx
   1400248e8:	add    edx,ecx
   1400248ea:	sar    edx,0x7
   1400248ed:	mov    eax,edx
   1400248ef:	shr    eax,0x1f
   1400248f2:	add    edx,eax
   1400248f4:	add    dl,dil
   1400248f7:	mov    rdi,QWORD PTR [rbp-0x48]
   1400248fb:	mov    BYTE PTR [r9+0x1],dl
   1400248ff:	add    r9,0x4
   140024903:	sub    rdi,0x1
   140024907:	mov    QWORD PTR [rbp-0x48],rdi
   14002490b:	jne    0x140024831
   140024911:	mov    rdi,QWORD PTR [rsp+0x70]
   140024916:	mov    r8,QWORD PTR [rbp+0x150]
   14002491d:	mov    rax,QWORD PTR [rbp+0xc0]
   140024924:	mov    rcx,QWORD PTR [rsp+0x60]
   140024929:	add    rdi,r8
   14002492c:	add    rsi,rax
   14002492f:	sub    rcx,0x1
   140024933:	mov    QWORD PTR [rsp+0x70],rdi
   140024938:	mov    QWORD PTR [rsp+0x60],rcx
   14002493d:	jne    0x140024817
   140024943:	mov    rdi,QWORD PTR [rip+0x2970e]        # 0x14004e058
   14002494a:	mov    rcx,rdi
   14002494d:	call   QWORD PTR [rip+0x18dd5]        # 0x14003d728
   140024953:	mov    rcx,QWORD PTR [rbp-0x18]
   140024957:	call   rdi
   140024959:	mov    rsi,QWORD PTR [rbp+0xb0]
   140024960:	test   rsi,rsi
   140024963:	je     0x14002497d
   140024965:	mov    rdi,QWORD PTR [rip+0x2972c]        # 0x14004e098
   14002496c:	mov    rcx,rdi
   14002496f:	call   QWORD PTR [rip+0x18db3]        # 0x14003d728
   140024975:	mov    rdx,rsi
   140024978:	mov    rcx,rbx
   14002497b:	call   rdi
   14002497d:	mov    rdi,QWORD PTR [rip+0x296cc]        # 0x14004e050
   140024984:	mov    rcx,rdi
   140024987:	call   QWORD PTR [rip+0x18d9b]        # 0x14003d728
   14002498d:	mov    rcx,QWORD PTR [rbp-0x10]
   140024991:	call   rdi
   140024993:	cmp    DWORD PTR [rbp+0x70],0x0
   140024997:	jl     0x140024fc4
   14002499d:	mov    eax,DWORD PTR [rbp+0x7b4]
   1400249a3:	lea    rcx,[rbp+0x894]
   1400249aa:	mov    rdi,QWORD PTR [rbp+0x7c0]
   1400249b1:	xor    ebx,ebx
   1400249b3:	mov    DWORD PTR [rsp+0x70],eax
   1400249b7:	xor    edx,edx
   1400249b9:	mov    rax,QWORD PTR [rbp+0x7d8]
   1400249c0:	mov    QWORD PTR [rbp+0x150],rax
   1400249c7:	lea    r8d,[rbx+0x64]
   1400249cb:	mov    QWORD PTR [rbp+0xc0],rdi
   1400249d2:	mov    DWORD PTR [rbp+0x890],ebx
   1400249d8:	call   0x140014694
   1400249dd:	xor    edx,edx
   1400249df:	mov    DWORD PTR [rbp+0xa50],ebx
   1400249e5:	lea    r8d,[rbx+0x64]
   1400249e9:	lea    rcx,[rbp+0xa54]
   1400249f0:	call   0x140014694
   1400249f5:	xor    edx,edx
   1400249f7:	mov    QWORD PTR [rbp-0x48],rbx
   1400249fb:	lea    r8d,[rbx+0x2c]
   1400249ff:	mov    DWORD PTR [rsp+0x60],ebx
   140024a03:	lea    rcx,[rbp+0xd78]
   140024a0a:	mov    r14d,ebx
   140024a0d:	call   0x140014694
   140024a12:	xorps  xmm0,xmm0
   140024a15:	movdqu XMMWORD PTR [rbp+0xc18],xmm0
   140024a1d:	test   rdi,rdi
   140024a20:	je     0x140024fc4
   140024a26:	mov    rdi,QWORD PTR [rip+0x29643]        # 0x14004e070
   140024a2d:	mov    rcx,rdi
   140024a30:	call   QWORD PTR [rip+0x18cf2]        # 0x14003d728
   140024a36:	mov    rsi,QWORD PTR [rbp-0x30]
   140024a3a:	lea    edx,[rbx+0x7]
   140024a3d:	mov    rcx,rsi
   140024a40:	call   rdi
   140024a42:	mov    rbx,rax
   140024a45:	test   rax,rax
   140024a48:	jne    0x140024a55
   140024a4a:	call   QWORD PTR [rip+0x18718]        # 0x14003d168
   140024a50:	jmp    0x140024fc8
   140024a55:	mov    rdi,QWORD PTR [rip+0x2962c]        # 0x14004e088
   140024a5c:	mov    rcx,rdi
   140024a5f:	call   QWORD PTR [rip+0x18cc3]        # 0x14003d728
   140024a65:	lea    r8,[rbp+0x890]
   140024a6c:	mov    edx,0x68
   140024a71:	mov    rcx,rbx
   140024a74:	call   rdi
   140024a76:	test   eax,eax
   140024a78:	je     0x140024a96
   140024a7a:	mov    rax,QWORD PTR [rbp+0x8a8]
   140024a81:	mov    r14d,DWORD PTR [rbp+0x898]
   140024a88:	mov    QWORD PTR [rbp-0x48],rax
   140024a8c:	mov    eax,DWORD PTR [rbp+0x894]
   140024a92:	mov    DWORD PTR [rsp+0x60],eax
   140024a96:	mov    rdi,QWORD PTR [rip+0x29593]        # 0x14004e030
   140024a9d:	mov    rcx,rdi
   140024aa0:	call   QWORD PTR [rip+0x18c82]        # 0x14003d728
   140024aa6:	mov    rcx,rsi
   140024aa9:	call   rdi
   140024aab:	mov    QWORD PTR [rbp-0x18],rax
   140024aaf:	mov    rbx,rax
   140024ab2:	test   rax,rax
   140024ab5:	jne    0x140024ac2
   140024ab7:	call   QWORD PTR [rip+0x186ab]        # 0x14003d168
   140024abd:	jmp    0x140024fc8
   140024ac2:	xor    eax,eax
   140024ac4:	lea    rcx,[rbp+0xd78]
   140024acb:	xor    edx,edx
   140024acd:	mov    QWORD PTR [rbp+0x678],rax
   140024ad4:	mov    esi,eax
   140024ad6:	lea    r8d,[rax+0x2c]
   140024ada:	call   0x140014694
   140024adf:	mov    eax,DWORD PTR [rbp+0x10]
   140024ae2:	mov    rdi,QWORD PTR [rip+0x2954f]        # 0x14004e038
   140024ae9:	sub    eax,r12d
   140024aec:	mov    DWORD PTR [rbp+0x10],eax
   140024aef:	mov    rcx,rdi
   140024af2:	mov    DWORD PTR [rbp+0xd7c],eax
   140024af8:	mov    eax,r13d
   140024afb:	sub    eax,DWORD PTR [rbp-0x78]
   140024afe:	mov    DWORD PTR [rbp+0xd80],eax
   140024b04:	mov    eax,0x1
   140024b09:	mov    WORD PTR [rbp+0xd84],ax
   140024b10:	mov    eax,0x20
   140024b15:	mov    WORD PTR [rbp+0xd86],ax
   140024b1c:	mov    DWORD PTR [rbp+0xd78],0x28
   140024b26:	call   QWORD PTR [rip+0x18bfc]        # 0x14003d728
   140024b2c:	xor    eax,eax
   140024b2e:	lea    r9,[rbp+0x678]
   140024b35:	mov    DWORD PTR [rsp+0x28],eax
   140024b39:	lea    rdx,[rbp+0xd78]
   140024b40:	xor    r8d,r8d
   140024b43:	mov    QWORD PTR [rsp+0x20],rax
   140024b48:	mov    rcx,rbx
   140024b4b:	call   rdi
   140024b4d:	mov    QWORD PTR [rbp-0x10],rax
   140024b51:	test   rax,rax
   140024b54:	jne    0x140024b7d
   140024b56:	call   QWORD PTR [rip+0x1860c]        # 0x14003d168
   140024b5c:	mov    esi,eax
   140024b5e:	test   eax,eax
   140024b60:	jle    0x140024b6b
   140024b62:	movzx  esi,ax
   140024b65:	or     esi,0x80070000
   140024b6b:	test   esi,esi
   140024b6d:	js     0x140024ed6
   140024b73:	mov    esi,0x80004005
   140024b78:	jmp    0x140024ed6
   140024b7d:	mov    rdi,QWORD PTR [rip+0x29504]        # 0x14004e088
   140024b84:	mov    rcx,rdi
   140024b87:	call   QWORD PTR [rip+0x18b9b]        # 0x14003d728
   140024b8d:	mov    rcx,QWORD PTR [rbp-0x10]
   140024b91:	lea    r8,[rbp+0xa50]
   140024b98:	mov    edx,0x68
   140024b9d:	call   rdi
   140024b9f:	mov    rdi,QWORD PTR [rip+0x294f2]        # 0x14004e098
   140024ba6:	xor    ecx,ecx
   140024ba8:	test   eax,eax
   140024baa:	mov    eax,DWORD PTR [rbp+0x10]
   140024bad:	mov    DWORD PTR [rbp+0xc20],eax
   140024bb3:	cmovne rcx,QWORD PTR [rbp+0xa68]
   140024bbb:	mov    eax,DWORD PTR [rbp-0x78]
   140024bbe:	mov    QWORD PTR [rbp+0xb0],rcx
   140024bc5:	sub    eax,r13d
   140024bc8:	mov    rcx,rdi
   140024bcb:	mov    DWORD PTR [rbp+0xc24],eax
   140024bd1:	call   QWORD PTR [rip+0x18b51]        # 0x14003d728
   140024bd7:	mov    rdx,QWORD PTR [rbp-0x10]
   140024bdb:	mov    rcx,rbx
   140024bde:	call   rdi
   140024be0:	mov    rdi,QWORD PTR [rip+0x294b9]        # 0x14004e0a0
   140024be7:	mov    rcx,rdi
   140024bea:	call   QWORD PTR [rip+0x18b38]        # 0x14003d728
   140024bf0:	mov    edx,0x1
   140024bf5:	mov    rcx,rbx
   140024bf8:	call   rdi
   140024bfa:	mov    rdi,QWORD PTR [rip+0x29497]        # 0x14004e098
   140024c01:	mov    rcx,rdi
   140024c04:	call   QWORD PTR [rip+0x18b1e]        # 0x14003d728
   140024c0a:	mov    rdx,QWORD PTR [rbp+0x150]
   140024c11:	mov    rcx,rbx
   140024c14:	call   rdi
   140024c16:	mov    rdi,QWORD PTR [rip+0x29473]        # 0x14004e090
   140024c1d:	mov    rcx,rdi
   140024c20:	mov    QWORD PTR [rbp+0x150],rax
   140024c27:	call   QWORD PTR [rip+0x18afb]        # 0x14003d728
   140024c2d:	xor    ecx,ecx
   140024c2f:	call   rdi
   140024c31:	mov    rbx,QWORD PTR [rip+0x294d0]        # 0x14004e108
   140024c38:	mov    rdi,rax
   140024c3b:	mov    rcx,rbx
   140024c3e:	call   QWORD PTR [rip+0x18ae4]        # 0x14003d728
   140024c44:	mov    rcx,QWORD PTR [rbp-0x18]
   140024c48:	lea    rdx,[rbp+0xc18]
   140024c4f:	mov    r8,rdi
   140024c52:	call   rbx
   140024c54:	mov    rdi,QWORD PTR [rip+0x2949d]        # 0x14004e0f8
   140024c5b:	mov    rcx,rdi
   140024c5e:	call   QWORD PTR [rip+0x18ac4]        # 0x14003d728
   140024c64:	mov    rbx,QWORD PTR [rbp-0x18]
   140024c68:	lea    r9,[rbp+0xc18]
   140024c6f:	mov    rdx,QWORD PTR [rbp+0xc0]
   140024c76:	xor    eax,eax
   140024c78:	mov    QWORD PTR [rsp+0x28],rax
   140024c7d:	or     r8d,0xffffffff
   140024c81:	mov    eax,DWORD PTR [rbp+0x18]
   140024c84:	mov    rcx,rbx
   140024c87:	mov    DWORD PTR [rsp+0x20],eax
   140024c8b:	call   rdi
   140024c8d:	cmp    DWORD PTR [rsp+0x68],0x1
   140024c92:	jne    0x140024cbc
   140024c94:	cmp    DWORD PTR [rsp+0x70],esi
   140024c98:	je     0x140024cb3
   140024c9a:	mov    rdi,QWORD PTR [rip+0x29497]        # 0x14004e138
   140024ca1:	mov    rcx,rdi
   140024ca4:	call   QWORD PTR [rip+0x18a7e]        # 0x14003d728
   140024caa:	mov    ecx,0x8
   140024caf:	call   rdi
   140024cb1:	jmp    0x140024cc1
   140024cb3:	mov    DWORD PTR [rbp+0x18],0xffffff
   140024cba:	jmp    0x140024cc7
   140024cbc:	mov    eax,0xffa8a8a8
   140024cc1:	mov    DWORD PTR [rbp+0x18],eax
   140024cc4:	mov    DWORD PTR [rbp-0x28],eax
   140024cc7:	xor    eax,eax
   140024cc9:	mov    edx,eax
   140024ccb:	mov    ecx,eax
   140024ccd:	test   r12d,r12d
   140024cd0:	jns    0x140024cda
   140024cd2:	mov    edx,r12d
   140024cd5:	mov    r12d,eax
   140024cd8:	neg    edx
   140024cda:	test   r13d,r13d
   140024cdd:	jns    0x140024ce7
   140024cdf:	mov    ecx,r13d
   140024ce2:	mov    r13d,eax
   140024ce5:	neg    ecx
   140024ce7:	movsxd rdi,DWORD PTR [rbp+0xc20]
   140024cee:	movsxd r8,DWORD PTR [rsp+0x60]
   140024cf3:	mov    eax,edi
   140024cf5:	sub    eax,edx
   140024cf7:	mov    r10d,r8d
   140024cfa:	sub    r10d,r12d
   140024cfd:	cmp    eax,r10d
   140024d00:	cmovl  r10d,eax
   140024d04:	mov    eax,DWORD PTR [rbp+0xc24]
   140024d0a:	sub    eax,ecx
   140024d0c:	sub    r14d,r13d
   140024d0f:	cmp    eax,r14d
   140024d12:	cmovl  r14d,eax
   140024d16:	test   r10d,r10d
   140024d19:	jle    0x140024e9c
   140024d1f:	test   r14d,r14d
   140024d22:	jle    0x140024e9c
   140024d28:	imul   ecx,edi
   140024d2b:	movsxd rax,edx
   140024d2e:	imul   r13d,r8d
   140024d32:	movsxd rcx,ecx
   140024d35:	add    rcx,rax
   140024d38:	mov    rax,QWORD PTR [rbp+0xb0]
   140024d3f:	lea    rdx,[rax+rcx*4]
   140024d43:	movsxd rax,r12d
   140024d46:	movsxd rcx,r13d
   140024d49:	add    rcx,rax
   140024d4c:	mov    QWORD PTR [rsp+0x70],rdx
   140024d51:	mov    rax,QWORD PTR [rbp-0x48]
   140024d55:	lea    r11,[rax+rcx*4]
   140024d59:	test   r14d,r14d
   140024d5c:	jle    0x140024e9c
   140024d62:	mov    ebx,DWORD PTR [rbp-0x28]
   140024d65:	mov    r13,r8
   140024d68:	mov    r12,rdi
   140024d6b:	mov    r8d,r14d
   140024d6e:	shl    r12,0x2
   140024d72:	shl    r13,0x2
   140024d76:	mov    QWORD PTR [rsp+0x60],r8
   140024d7b:	test   r10d,r10d
   140024d7e:	jle    0x140024e7e
   140024d84:	mov    r14,rdx
   140024d87:	mov    edi,r10d
   140024d8a:	sub    r14,r11
   140024d8d:	mov    QWORD PTR [rbp-0x48],rdi
   140024d91:	lea    r9,[r11+0x2]
   140024d95:	movzx  eax,BYTE PTR [r9+r14*1-0x2]
   140024d9b:	movzx  ecx,BYTE PTR [r9+r14*1-0x1]
   140024da1:	lea    edx,[rax+rcx*2]
   140024da4:	movzx  eax,BYTE PTR [r9+r14*1]
   140024da9:	add    edx,eax
   140024dab:	sar    edx,0x2
   140024dae:	not    dl
   140024db0:	test   dl,dl
   140024db2:	je     0x140024e62
   140024db8:	movzx  edi,BYTE PTR [r9]
   140024dbc:	mov    eax,0x80808081
   140024dc1:	movzx  r8d,dl
   140024dc5:	movzx  ecx,bl
   140024dc8:	sub    ecx,edi
   140024dca:	imul   ecx,r8d
   140024dce:	imul   ecx
   140024dd0:	add    edx,ecx
   140024dd2:	movzx  ecx,BYTE PTR [rbp+0x19]
   140024dd6:	sar    edx,0x7
   140024dd9:	mov    eax,edx
   140024ddb:	shr    eax,0x1f
   140024dde:	add    edx,eax
   140024de0:	mov    eax,0x80808081
   140024de5:	add    dl,dil
   140024de8:	mov    BYTE PTR [r9],dl
   140024deb:	movzx  edi,BYTE PTR [r9-0x1]
   140024df0:	sub    ecx,edi
   140024df2:	imul   ecx,r8d
   140024df6:	imul   ecx
   140024df8:	add    edx,ecx
   140024dfa:	movzx  ecx,BYTE PTR [rbp+0x1a]
   140024dfe:	sar    edx,0x7
   140024e01:	mov    eax,edx
   140024e03:	shr    eax,0x1f
   140024e06:	add    edx,eax
   140024e08:	mov    eax,0x80808081
   140024e0d:	add    dl,dil
   140024e10:	mov    BYTE PTR [r9-0x1],dl
   140024e14:	movzx  edi,BYTE PTR [r9-0x2]
   140024e19:	sub    ecx,edi
   140024e1b:	imul   ecx,r8d
   140024e1f:	imul   ecx
   140024e21:	add    edx,ecx
   140024e23:	mov    ecx,0xff
   140024e28:	sar    edx,0x7
   140024e2b:	mov    eax,edx
   140024e2d:	shr    eax,0x1f
   140024e30:	add    edx,eax
   140024e32:	mov    eax,0x80808081
   140024e37:	add    dl,dil
   140024e3a:	mov    BYTE PTR [r9-0x2],dl
   140024e3e:	movzx  edi,BYTE PTR [r9+0x1]
   140024e43:	sub    ecx,edi
   140024e45:	imul   ecx,r8d
   140024e49:	imul   ecx
   140024e4b:	add    edx,ecx
   140024e4d:	sar    edx,0x7
   140024e50:	mov    eax,edx
   140024e52:	shr    eax,0x1f
   140024e55:	add    edx,eax
   140024e57:	add    dl,dil
   140024e5a:	mov    rdi,QWORD PTR [rbp-0x48]
   140024e5e:	mov    BYTE PTR [r9+0x1],dl
   140024e62:	add    r9,0x4
   140024e66:	sub    rdi,0x1
   140024e6a:	mov    QWORD PTR [rbp-0x48],rdi
   140024e6e:	jne    0x140024d95
   140024e74:	mov    rdx,QWORD PTR [rsp+0x70]
   140024e79:	mov    r8,QWORD PTR [rsp+0x60]
   140024e7e:	add    rdx,r12
   140024e81:	add    r11,r13
   140024e84:	sub    r8,0x1
   140024e88:	mov    QWORD PTR [rsp+0x70],rdx
   140024e8d:	mov    QWORD PTR [rsp+0x60],r8
   140024e92:	jne    0x140024d7b
   140024e98:	mov    rbx,QWORD PTR [rbp-0x18]
   140024e9c:	mov    rdi,QWORD PTR [rip+0x291b5]        # 0x14004e058
   140024ea3:	mov    rcx,rdi
   140024ea6:	call   QWORD PTR [rip+0x1887c]        # 0x14003d728
   140024eac:	mov    rcx,QWORD PTR [rbp-0x10]
   140024eb0:	call   rdi
   140024eb2:	mov    r14,QWORD PTR [rbp+0x150]
   140024eb9:	test   r14,r14
   140024ebc:	je     0x140024ed6
   140024ebe:	mov    rdi,QWORD PTR [rip+0x291d3]        # 0x14004e098
   140024ec5:	mov    rcx,rdi
   140024ec8:	call   QWORD PTR [rip+0x1885a]        # 0x14003d728
   140024ece:	mov    rdx,r14
   140024ed1:	mov    rcx,rbx
   140024ed4:	call   rdi
   140024ed6:	mov    rdi,QWORD PTR [rip+0x29173]        # 0x14004e050
   140024edd:	mov    rcx,rdi
   140024ee0:	call   QWORD PTR [rip+0x18842]        # 0x14003d728
   140024ee6:	mov    rcx,rbx
   140024ee9:	call   rdi
   140024eeb:	test   esi,esi
   140024eed:	js     0x140024fc4
   140024ef3:	cmp    DWORD PTR [rsp+0x68],0x1
   140024ef8:	jne    0x140024f4b
   140024efa:	mov    rdi,QWORD PTR [rip+0x2911f]        # 0x14004e020
   140024f01:	mov    rcx,rdi
   140024f04:	call   QWORD PTR [rip+0x1881e]        # 0x14003d728
   140024f0a:	mov    eax,DWORD PTR [rbp-0x68]
   140024f0d:	xor    r13d,r13d
   140024f10:	mov    rsi,QWORD PTR [rbp-0x30]
   140024f14:	mov    r14,QWORD PTR [rbp-0x38]
   140024f18:	mov    r9d,DWORD PTR [rbp-0x80]
   140024f1c:	mov    rcx,r14
   140024f1f:	mov    r8d,DWORD PTR [rbp+0x7f0]
   140024f26:	mov    edx,DWORD PTR [rbp+0x7ec]
   140024f2c:	mov    DWORD PTR [rsp+0x40],0xcc0020
   140024f34:	mov    DWORD PTR [rsp+0x38],r13d
   140024f39:	mov    DWORD PTR [rsp+0x30],r13d
   140024f3e:	mov    QWORD PTR [rsp+0x28],rsi
   140024f43:	mov    DWORD PTR [rsp+0x20],eax
   140024f47:	call   rdi
   140024f49:	jmp    0x140024fa3
   140024f4b:	mov    rdi,QWORD PTR [rip+0x2910e]        # 0x14004e060
   140024f52:	mov    rcx,rdi
   140024f55:	call   QWORD PTR [rip+0x187cd]        # 0x14003d728
   140024f5b:	mov    eax,DWORD PTR [rbp-0x60]
   140024f5e:	xor    r13d,r13d
   140024f61:	mov    ecx,DWORD PTR [rbp-0x68]
   140024f64:	mov    rsi,QWORD PTR [rbp-0x30]
   140024f68:	mov    r14,QWORD PTR [rbp-0x38]
   140024f6c:	mov    r8d,DWORD PTR [rbp+0xec]
   140024f73:	mov    edx,DWORD PTR [rbp+0xe8]
   140024f79:	mov    DWORD PTR [rsp+0x50],eax
   140024f7d:	mov    eax,DWORD PTR [rbp-0x80]
   140024f80:	mov    r9d,eax
   140024f83:	mov    DWORD PTR [rsp+0x48],ecx
   140024f87:	mov    DWORD PTR [rsp+0x40],eax
   140024f8b:	mov    DWORD PTR [rsp+0x38],r13d
   140024f90:	mov    DWORD PTR [rsp+0x30],r13d
   140024f95:	mov    QWORD PTR [rsp+0x28],rsi
   140024f9a:	mov    DWORD PTR [rsp+0x20],ecx
   140024f9e:	mov    rcx,r14
   140024fa1:	call   rdi
   140024fa3:	mov    rdi,QWORD PTR [rip+0x290f6]        # 0x14004e0a0
   140024faa:	mov    rcx,rdi
   140024fad:	call   QWORD PTR [rip+0x18775]        # 0x14003d728
   140024fb3:	mov    edx,DWORD PTR [rsp+0x78]
   140024fb7:	mov    rcx,r14
   140024fba:	call   rdi
   140024fbc:	jmp    0x140024fcb
   140024fbe:	call   QWORD PTR [rip+0x181a4]        # 0x14003d168
   140024fc4:	mov    rsi,QWORD PTR [rbp-0x30]
   140024fc8:	xor    r13d,r13d
   140024fcb:	mov    rbx,QWORD PTR [rbp+0x168]
   140024fd2:	test   rbx,rbx
   140024fd5:	je     0x140024fec
   140024fd7:	mov    rdi,QWORD PTR [rip+0x2907a]        # 0x14004e058
   140024fde:	mov    rcx,rdi
   140024fe1:	call   QWORD PTR [rip+0x18741]        # 0x14003d728
   140024fe7:	mov    rcx,rbx
   140024fea:	call   rdi
   140024fec:	test   rsi,rsi
   140024fef:	je     0x140025006
   140024ff1:	mov    rdi,QWORD PTR [rip+0x29058]        # 0x14004e050
   140024ff8:	mov    rcx,rdi
   140024ffb:	call   QWORD PTR [rip+0x18727]        # 0x14003d728
   140025001:	mov    rcx,rsi
   140025004:	call   rdi
   140025006:	mov    rsi,QWORD PTR [rbp-0x38]
   14002500a:	mov    rbx,QWORD PTR [rbp+0x128]
   140025011:	test   rbx,rbx
   140025014:	je     0x14002502b
   140025016:	mov    rdi,QWORD PTR [rip+0x2903b]        # 0x14004e058
   14002501d:	mov    rcx,rdi
   140025020:	call   QWORD PTR [rip+0x18702]        # 0x14003d728
   140025026:	mov    rcx,rbx
   140025029:	call   rdi
   14002502b:	lea    r14,[rip+0x28fee]        # 0x14004e020
   140025032:	mov    rax,QWORD PTR [rbp+0x7b8]
   140025039:	test   rax,rax
   14002503c:	je     0x140025074
   14002503e:	or     rcx,0xffffffffffffffff
   140025042:	cmp    WORD PTR [rax+rcx*2+0x2],0x0
   140025048:	lea    rcx,[rcx+0x1]
   14002504c:	jne    0x140025042
   14002504e:	mov    rdi,QWORD PTR [rbp+0x7b8]
   140025055:	lea    rcx,[rcx*2+0x2]
   14002505d:	xor    eax,eax
   14002505f:	rep stos BYTE PTR es:[rdi],al
   140025061:	mov    rcx,QWORD PTR [rbp+0x7b8]
   140025068:	call   0x1400155d8
   14002506d:	mov    QWORD PTR [rbp+0x7b8],r13
   140025074:	mov    rax,QWORD PTR [rbp+0x7c0]
   14002507b:	test   rax,rax
   14002507e:	je     0x1400250b6
   140025080:	or     rcx,0xffffffffffffffff
   140025084:	cmp    WORD PTR [rax+rcx*2+0x2],0x0
   14002508a:	lea    rcx,[rcx+0x1]
   14002508e:	jne    0x140025084
   140025090:	mov    rdi,QWORD PTR [rbp+0x7c0]
   140025097:	lea    rcx,[rcx*2+0x2]
   14002509f:	xor    eax,eax
   1400250a1:	rep stos BYTE PTR es:[rdi],al
   1400250a3:	mov    rcx,QWORD PTR [rbp+0x7c0]
   1400250aa:	call   0x1400155d8
   1400250af:	mov    QWORD PTR [rbp+0x7c0],r13
   1400250b6:	mov    rdi,QWORD PTR [rbp+0x7c8]
   1400250bd:	test   rdi,rdi
   1400250c0:	je     0x1400250f1
   1400250c2:	or     rcx,0xffffffffffffffff
   1400250c6:	cmp    WORD PTR [rdi+rcx*2+0x2],0x0
   1400250cc:	lea    rcx,[rcx+0x1]
   1400250d0:	jne    0x1400250c6
   1400250d2:	lea    rcx,[rcx*2+0x2]
   1400250da:	xor    eax,eax
   1400250dc:	rep stos BYTE PTR es:[rdi],al
   1400250de:	mov    rcx,QWORD PTR [rbp+0x7c8]
   1400250e5:	call   0x1400155d8
   1400250ea:	mov    QWORD PTR [rbp+0x7c8],r13
   1400250f1:	mov    rbx,QWORD PTR [rbp+0x7d0]
   1400250f8:	test   rbx,rbx
   1400250fb:	je     0x140025119
   1400250fd:	mov    rdi,QWORD PTR [rip+0x28f54]        # 0x14004e058
   140025104:	mov    rcx,rdi
   140025107:	call   QWORD PTR [rip+0x1861b]        # 0x14003d728
   14002510d:	mov    rcx,rbx
   140025110:	call   rdi
   140025112:	mov    QWORD PTR [rbp+0x7d0],r13
   140025119:	mov    rbx,QWORD PTR [rbp+0x7d8]
   140025120:	test   rbx,rbx
   140025123:	je     0x140025141
   140025125:	mov    rdi,QWORD PTR [rip+0x28f2c]        # 0x14004e058
   14002512c:	mov    rcx,rdi
   14002512f:	call   QWORD PTR [rip+0x185f3]        # 0x14003d728
   140025135:	mov    rcx,rbx
   140025138:	call   rdi
   14002513a:	mov    QWORD PTR [rbp+0x7d8],r13
   140025141:	mov    rbx,QWORD PTR [rbp+0x7e0]
   140025148:	test   rbx,rbx
   14002514b:	je     0x140025169
   14002514d:	mov    rdi,QWORD PTR [rip+0x28f04]        # 0x14004e058
   140025154:	mov    rcx,rdi
   140025157:	call   QWORD PTR [rip+0x185cb]        # 0x14003d728
   14002515d:	mov    rcx,rbx
   140025160:	call   rdi
   140025162:	mov    QWORD PTR [rbp+0x7e0],r13
   140025169:	mov    ebx,0x1
   14002516e:	xor    eax,eax
   140025170:	lock cmpxchg DWORD PTR [rip+0x29fc8],ebx        # 0x14004f140
   140025178:	jne    0x14002516e
   14002517a:	mov    eax,DWORD PTR [rip+0x299c8]        # 0x14004eb48
   140025180:	test   eax,eax
   140025182:	jle    0x1400251de
   140025184:	sub    eax,ebx
   140025186:	mov    DWORD PTR [rip+0x299bc],eax        # 0x14004eb48
   14002518c:	jne    0x1400251de
   14002518e:	lea    rdi,[rip+0x29fbb]        # 0x14004f150
   140025195:	mov    ebx,0x4
   14002519a:	mov    rcx,QWORD PTR [rdi]
   14002519d:	test   rcx,rcx
   1400251a0:	je     0x1400251a8
   1400251a2:	call   QWORD PTR [rip+0x180b0]        # 0x14003d258
   1400251a8:	add    rdi,0x18
   1400251ac:	sub    rbx,0x1
   1400251b0:	jne    0x14002519a
   1400251b2:	xor    edx,edx
   1400251b4:	lea    r8d,[rbx+0x60]
   1400251b8:	lea    rcx,[rip+0x29f91]        # 0x14004f150
   1400251bf:	call   0x140014694
   1400251c4:	mov    r8d,0x170
   1400251ca:	lea    rdx,[rip+0x1c59f]        # 0x140041770
   1400251d1:	mov    rcx,r14
   1400251d4:	call   0x1400156f2
   1400251d9:	mov    ebx,0x1
   1400251de:	mov    eax,r13d
   1400251e1:	xchg   DWORD PTR [rip+0x29f59],eax        # 0x14004f140
   1400251e7:	mov    rdi,QWORD PTR [rip+0x28eca]        # 0x14004e0b8
   1400251ee:	mov    r12d,DWORD PTR [rip+0x29943]        # 0x14004eb38
   1400251f5:	mov    rcx,rdi
   1400251f8:	mov    DWORD PTR [rbp-0x68],r12d
   1400251fc:	call   QWORD PTR [rip+0x18526]        # 0x14003d728
   140025202:	call   rdi
   140025204:	mov    r14,rax
   140025207:	mov    DWORD PTR [rbp+0x1550],r13d
   14002520e:	sub    r14d,DWORD PTR [rip+0x2992b]        # 0x14004eb40
   140025215:	lea    rcx,[rbp+0x1558]
   14002521c:	xor    edx,edx
   14002521e:	mov    QWORD PTR [rbp-0x10],r14
   140025222:	lea    r8d,[rdx+0x38]
   140025226:	call   0x140014694
   14002522b:	xor    eax,eax
   14002522d:	lock cmpxchg DWORD PTR [rip+0x29f0b],ebx        # 0x14004f140
   140025235:	jne    0x14002522b
   140025237:	mov    eax,DWORD PTR [rip+0x2990b]        # 0x14004eb48
   14002523d:	test   eax,eax
   14002523f:	jne    0x140025882
   140025245:	xor    edi,edi
   140025247:	mov    DWORD PTR [rbp-0x78],r13d
   14002524b:	mov    ecx,0x338
   140025250:	mov    QWORD PTR [rbp+0x390],rdi
   140025257:	mov    QWORD PTR [rbp+0x5d8],rdi
   14002525e:	mov    DWORD PTR [rsp+0x78],r13d
   140025263:	call   0x14000f134
   140025268:	mov    QWORD PTR [rbp+0x150],rax
   14002526f:	test   rax,rax
   140025272:	je     0x140025860
   140025278:	mov    r12d,edi
   14002527b:	mov    DWORD PTR [rbp+0x2c],edi
   14002527e:	or     r13d,0xffffffff
   140025282:	mov    DWORD PTR [rbp+0x54],edi
   140025285:	mov    r11d,edi
   140025288:	lea    r14,[rax+0x7]
   14002528c:	lea    rsi,[rip+0x18c4f]        # 0x14003dee2
   140025293:	lea    ebx,[rdi+0x67]
   140025296:	movzx  eax,BYTE PTR [rsi-0x1]
   14002529a:	movzx  r10d,BYTE PTR [rsi-0x2]
   14002529f:	movzx  r9d,BYTE PTR [rsi+0x2]
   1400252a4:	lea    rsi,[rsi+0x8]
   1400252a8:	shl    r10d,0x8
   1400252ac:	or     r10d,eax
   1400252af:	shl    r9d,0x8
   1400252b3:	movzx  eax,BYTE PTR [rsi-0x8]
   1400252b7:	shl    r10d,0x8
   1400252bb:	or     r10d,eax
   1400252be:	movzx  eax,BYTE PTR [rsi-0x7]
   1400252c2:	shl    r10d,0x8
   1400252c6:	or     r10d,eax
   1400252c9:	movzx  eax,BYTE PTR [rsi-0x5]
   1400252cd:	or     r9d,eax
   1400252d0:	xor    edi,r10d
   1400252d3:	movzx  eax,BYTE PTR [rsi-0x4]
   1400252d7:	shl    r9d,0x8
   1400252db:	or     r9d,eax
   1400252de:	movzx  eax,BYTE PTR [rsi-0x3]
   1400252e2:	shl    r9d,0x8
   1400252e6:	or     r9d,eax
   1400252e9:	xor    r11d,r9d
   1400252ec:	xor    r11d,edi
   1400252ef:	xor    r11d,0x58830298
   1400252f6:	lea    eax,[r11+0x7b1e05f8]
   1400252fd:	rol    eax,0x5
   140025300:	imul   ecx,eax,0xf890
   140025306:	mov    eax,r11d
   140025309:	rol    eax,0xa
   14002530c:	add    ecx,eax
   14002530e:	xor    edi,ecx
   140025310:	lea    eax,[rdi-0x239d0770]
   140025316:	ror    eax,0x9
   140025319:	imul   ecx,eax,0x84e1
   14002531f:	mov    eax,edi
   140025321:	rol    eax,0x2
   140025324:	sub    ecx,eax
   140025326:	xor    r11d,ecx
   140025329:	lea    eax,[r11-0xf890]
   140025330:	imul   ecx,eax,0xfa08
   140025336:	mov    eax,r11d
   140025339:	shr    eax,0xd
   14002533c:	sub    ecx,eax
   14002533e:	xor    edi,ecx
   140025340:	mov    eax,edi
   140025342:	xor    eax,0x84e1
   140025347:	rol    eax,0x6
   14002534a:	imul   ecx,eax,0xdc62
   140025350:	mov    eax,edi
   140025352:	rol    eax,0x2
   140025355:	sub    ecx,eax
   140025357:	mov    eax,0xdc62f890
   14002535c:	xor    r11d,ecx
   14002535f:	mov    ecx,r11d
   140025362:	xor    ecx,0x84e1fa08
   140025368:	sub    eax,ecx
   14002536a:	xor    edi,eax
   14002536c:	mov    eax,edi
   14002536e:	mov    edx,edi
   140025370:	xor    eax,0xf890
   140025375:	ror    edx,0x6
   140025378:	imul   ecx,eax,0x84e1
   14002537e:	xor    edx,ecx
   140025380:	xor    r11d,edx
   140025383:	lea    eax,[r11-0x239d0770]
   14002538a:	ror    eax,0xf
   14002538d:	imul   ecx,eax,0xfa08
   140025393:	mov    eax,r11d
   140025396:	rol    eax,0x2
   140025399:	add    ecx,eax
   14002539b:	xor    edi,ecx
   14002539d:	lea    eax,[rdi+0x7b1e05f8]
   1400253a3:	ror    eax,0xe
   1400253a6:	imul   ecx,eax,0xdc62
   1400253ac:	mov    eax,edi
   1400253ae:	rol    eax,0x8
   1400253b1:	sub    ecx,eax
   1400253b3:	xor    r11d,ecx
   1400253b6:	mov    eax,r11d
   1400253b9:	xor    eax,0x84e1fa08
   1400253be:	ror    eax,0xc
   1400253c1:	imul   ecx,eax,0xf890
   1400253c7:	mov    eax,r11d
   1400253ca:	ror    eax,0xa
   1400253cd:	xor    ecx,eax
   1400253cf:	xor    edi,ecx
   1400253d1:	mov    eax,edi
   1400253d3:	xor    eax,0xdc62
   1400253d8:	imul   ecx,eax,0x84e1
   1400253de:	mov    eax,edi
   1400253e0:	shr    eax,0xa
   1400253e3:	xor    ecx,eax
   1400253e5:	xor    r11d,ecx
   1400253e8:	mov    eax,r11d
   1400253eb:	mov    r8d,r11d
   1400253ee:	not    eax
   1400253f0:	ror    eax,0x5
   1400253f3:	imul   eax,eax,0xdc62
   1400253f9:	sub    eax,0x28c168f0
   1400253fe:	xor    edi,eax
   140025400:	xor    r8d,edi
   140025403:	xor    r8d,0x58830298
   14002540a:	lea    eax,[r8-0x7b1e05f8]
   140025411:	rol    eax,0xb
   140025414:	imul   ecx,eax,0xdc62
   14002541a:	mov    eax,r8d
   14002541d:	rol    eax,0xd
   140025420:	add    ecx,eax
   140025422:	xor    r11d,ecx
   140025425:	mov    eax,r11d
   140025428:	xor    eax,0x84e1fa08
   14002542d:	ror    eax,0x5
   140025430:	imul   ecx,eax,0xf890
   140025436:	mov    eax,r11d
   140025439:	ror    eax,0xc
   14002543c:	xor    ecx,eax
   14002543e:	xor    r8d,ecx
   140025441:	lea    eax,[r8-0xf890]
   140025448:	imul   ecx,eax,0x84e1
   14002544e:	mov    eax,r8d
   140025451:	shr    eax,0x9
   140025454:	sub    ecx,eax
   140025456:	xor    r11d,ecx
   140025459:	lea    eax,[r11+0x239c0d68]
   140025460:	xor    r8d,eax
   140025463:	lea    edi,[r8-0xdc62]
   14002546a:	xor    edi,r11d
   14002546d:	xor    edi,0x84e1fa08
   140025473:	lea    eax,[rdi+0x7b1e05f8]
   140025479:	ror    eax,0x4
   14002547c:	imul   ecx,eax,0xf890
   140025482:	mov    eax,edi
   140025484:	ror    eax,0xb
   140025487:	xor    ecx,eax
   140025489:	mov    eax,0xdc62f890
   14002548e:	xor    r8d,ecx
   140025491:	sub    eax,r8d
   140025494:	ror    eax,0x7
   140025497:	imul   ecx,eax,0x84e1
   14002549d:	mov    eax,r8d
   1400254a0:	ror    eax,0x3
   1400254a3:	add    ecx,eax
   1400254a5:	xor    edi,ecx
   1400254a7:	mov    eax,edi
   1400254a9:	xor    eax,0xdc62f890
   1400254ae:	rol    eax,1
   1400254b0:	imul   ecx,eax,0xfa08
   1400254b6:	mov    eax,edi
   1400254b8:	ror    eax,0x8
   1400254bb:	add    ecx,eax
   1400254bd:	xor    r8d,ecx
   1400254c0:	mov    eax,r8d
   1400254c3:	mov    edx,r8d
   1400254c6:	xor    eax,0xf890
   1400254cb:	ror    edx,1
   1400254cd:	imul   ecx,eax,0xdc62
   1400254d3:	add    edx,ecx
   1400254d5:	xor    edi,edx
   1400254d7:	mov    eax,edi
   1400254d9:	xor    eax,0xfa08
   1400254de:	rol    eax,1
   1400254e0:	imul   ecx,eax,0xf890
   1400254e6:	lea    r14,[r14+0x8]
   1400254ea:	mov    eax,edi
   1400254ec:	rol    eax,0x8
   1400254ef:	xor    ecx,eax
   1400254f1:	mov    eax,0x84e1fa08
   1400254f6:	xor    r8d,ecx
   1400254f9:	mov    ecx,r8d
   1400254fc:	xor    ecx,0xdc62f890
   140025502:	sub    eax,ecx
   140025504:	xor    edi,eax
   140025506:	lea    eax,[rdi+0x239d0770]
   14002550c:	ror    eax,0x3
   14002550f:	imul   ecx,eax,0xfa08
   140025515:	mov    eax,edi
   140025517:	ror    eax,0x2
   14002551a:	xor    edi,r13d
   14002551d:	mov    DWORD PTR [rbp+0x2c],edi
   140025520:	mov    r13d,r9d
   140025523:	add    ecx,eax
   140025525:	xor    ecx,r12d
   140025528:	mov    r12d,r10d
   14002552b:	xor    r8d,ecx
   14002552e:	mov    DWORD PTR [rbp+0x54],r8d
   140025532:	mov    BYTE PTR [r14-0xc],r8b
   140025536:	movzx  eax,BYTE PTR [rbp+0x2c]
   14002553a:	ror    DWORD PTR [rbp+0x54],0x8
   14002553e:	mov    BYTE PTR [r14-0x8],al
   140025542:	ror    DWORD PTR [rbp+0x2c],0x8
   140025546:	movzx  eax,BYTE PTR [rbp+0x54]
   14002554a:	mov    BYTE PTR [r14-0xd],al
   14002554e:	movzx  eax,BYTE PTR [rbp+0x2c]
   140025552:	ror    DWORD PTR [rbp+0x54],0x8
   140025556:	mov    BYTE PTR [r14-0x9],al
   14002555a:	ror    DWORD PTR [rbp+0x2c],0x8
   14002555e:	movzx  eax,BYTE PTR [rbp+0x54]
   140025562:	mov    BYTE PTR [r14-0xe],al
   140025566:	ror    DWORD PTR [rbp+0x54],0x8
   14002556a:	movzx  eax,BYTE PTR [rbp+0x2c]
   14002556e:	mov    BYTE PTR [r14-0xa],al
   140025572:	ror    DWORD PTR [rbp+0x2c],0x8
   140025576:	movzx  eax,BYTE PTR [rbp+0x54]
   14002557a:	mov    BYTE PTR [r14-0xf],al
   14002557e:	movzx  eax,BYTE PTR [rbp+0x2c]
   140025582:	mov    BYTE PTR [r14-0xb],al
   140025586:	mov    edi,DWORD PTR [rbp+0x54]
   140025589:	mov    r11d,DWORD PTR [rbp+0x2c]
   14002558d:	ror    edi,0x8
   140025590:	ror    r11d,0x8
   140025594:	mov    DWORD PTR [rbp+0x54],edi
   140025597:	mov    DWORD PTR [rbp+0x2c],r11d
   14002559b:	sub    rbx,0x1
   14002559f:	jne    0x140025296
   1400255a5:	mov    esi,DWORD PTR [rsp+0x78]
   1400255a9:	xorps  xmm1,xmm1
   1400255ac:	mov    rbx,QWORD PTR [rbp+0x150]
   1400255b3:	movdqa xmm2,xmm1
   1400255b7:	xor    eax,eax
   1400255b9:	mov    r13d,esi
   1400255bc:	movdqu xmm0,XMMWORD PTR [rbx+rax*1]
   1400255c1:	pxor   xmm0,xmm1
   1400255c5:	movdqa xmm1,xmm0
   1400255c9:	movdqu xmm0,XMMWORD PTR [rbx+rax*1+0x10]
   1400255cf:	add    rax,0x20
   1400255d3:	pxor   xmm0,xmm2
   1400255d7:	movdqa xmm2,xmm0
   1400255db:	cmp    rax,0x320
   1400255e1:	jb     0x1400255bc
   1400255e3:	pxor   xmm1,xmm0
   1400255e7:	movdqa xmm0,xmm1
   1400255eb:	psrldq xmm0,0x8
   1400255f0:	pxor   xmm1,xmm0
   1400255f4:	movdqa xmm0,xmm1
   1400255f8:	psrldq xmm0,0x4
   1400255fd:	pxor   xmm1,xmm0
   140025601:	movdqa xmm0,xmm1
   140025605:	psrldq xmm0,0x2
   14002560a:	pxor   xmm1,xmm0
   14002560e:	movdqa xmm0,xmm1
   140025612:	psrldq xmm0,0x1
   140025617:	pxor   xmm1,xmm0
   14002561b:	movd   ecx,xmm1
   14002561f:	cmp    rax,0x338
   140025625:	jae    0x140025635
   140025627:	xor    cl,BYTE PTR [rax+rbx*1]
   14002562a:	inc    rax
   14002562d:	cmp    rax,0x338
   140025633:	jb     0x140025627
   140025635:	movzx  eax,cl
   140025638:	cmp    rax,QWORD PTR [rip+0x18bd9]        # 0x14003e218
   14002563f:	jne    0x140025850
   140025645:	xor    edx,edx
   140025647:	mov    QWORD PTR [rbp+0x390],rbx
   14002564e:	lea    rdi,[rip+0x29afb]        # 0x14004f150
   140025655:	mov    QWORD PTR [rbp+0x5d8],0x338
   140025660:	mov    rcx,rdi
   140025663:	mov    BYTE PTR [rbx+0x337],0x0
   14002566a:	lea    r8d,[rdx+0x60]
   14002566e:	call   0x140014694
   140025673:	cmp    BYTE PTR [rbx],0x0
   140025676:	je     0x1400257bf
   14002567c:	mov    rdx,rbx
   14002567f:	or     rax,0xffffffffffffffff
   140025683:	cmp    WORD PTR [rbx+rax*2+0x2],0x0
   140025689:	lea    rax,[rax+0x1]
   14002568d:	jne    0x140025683
   14002568f:	lea    rbx,[rbx+rax*2]
   140025693:	mov    eax,r13d
   140025696:	lea    rcx,[rax+rax*2]
   14002569a:	lea    rdi,[rdi+rcx*8]
   14002569e:	xor    ecx,ecx
   1400256a0:	mov    r8,rdi
   1400256a3:	call   QWORD PTR [rip+0x17b97]        # 0x14003d240
   1400256a9:	test   eax,eax
   1400256ab:	je     0x140025846
   1400256b1:	mov    rax,QWORD PTR [rdi]
   1400256b4:	xor    edx,edx
   1400256b6:	mov    ecx,0x5a4d
   1400256bb:	mov    esi,edx
   1400256bd:	cmp    WORD PTR [rax],cx
   1400256c0:	je     0x1400256d1
   1400256c2:	mov    esi,0xc000007b
   1400256c7:	jmp    0x140025734
   1400256c9:	xor    r13d,r13d
   1400256cc:	jmp    0x140025032
   1400256d1:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400256d5:	cmp    ecx,0x10000000
   1400256db:	jb     0x1400256e4
   1400256dd:	mov    esi,0xc000007b
   1400256e2:	jmp    0x140025734
   1400256e4:	add    rcx,QWORD PTR [rdi]
   1400256e7:	cmp    rcx,QWORD PTR [rdi]
   1400256ea:	jae    0x1400256f3
   1400256ec:	mov    esi,0xc000007b
   1400256f1:	jmp    0x140025734
   1400256f3:	cmp    DWORD PTR [rcx],0x4550
   1400256f9:	je     0x140025702
   1400256fb:	mov    esi,0xc000007b
   140025700:	jmp    0x140025734
   140025702:	movzx  eax,WORD PTR [rcx+0x18]
   140025706:	mov    r8d,0x10b
   14002570c:	sub    ax,r8w
   140025710:	mov    r8d,0xfeff
   140025716:	test   r8w,ax
   14002571a:	je     0x140025723
   14002571c:	mov    esi,0xc000000d
   140025721:	jmp    0x140025734
   140025723:	mov    rax,QWORD PTR [rcx+0x88]
   14002572a:	mov    QWORD PTR [rdi+0xc],rax
   14002572e:	mov    eax,DWORD PTR [rcx+0x50]
   140025731:	mov    DWORD PTR [rdi+0x8],eax
   140025734:	mov    r12d,DWORD PTR [rbx+0x2]
   140025738:	mov    r14d,edx
   14002573b:	add    rbx,0x6
   14002573f:	test   r12d,r12d
   140025742:	je     0x1400257a5
   140025744:	mov    QWORD PTR [rbp+0x4b8],rdx
   14002574b:	mov    rcx,rbx
   14002574e:	or     rax,0xffffffffffffffff
   140025752:	inc    rax
   140025755:	cmp    BYTE PTR [rbx+rax*1],0x0
   140025759:	jne    0x140025752
   14002575b:	inc    rbx
   14002575e:	add    rbx,rax
   140025761:	test   esi,esi
   140025763:	js     0x140025795
   140025765:	lea    r9,[rbp+0x4b8]
   14002576c:	mov    r8,rdi
   14002576f:	xor    edx,edx
   140025771:	call   0x1400153c4
   140025776:	mov    esi,eax
   140025778:	test   eax,eax
   14002577a:	js     0x1400257b8
   14002577c:	mov    eax,DWORD PTR [rbp-0x78]
   14002577f:	lea    r8,[rip+0x2889a]        # 0x14004e020
   140025786:	mov    rcx,QWORD PTR [rbp+0x4b8]
   14002578d:	xor    edx,edx
   14002578f:	mov    QWORD PTR [r8+rax*8],rcx
   140025793:	jmp    0x140025798
   140025795:	mov    eax,DWORD PTR [rbp-0x78]
   140025798:	inc    eax
   14002579a:	inc    r14d
   14002579d:	mov    DWORD PTR [rbp-0x78],eax
   1400257a0:	cmp    r14d,r12d
   1400257a3:	jb     0x140025744
   1400257a5:	inc    r13d
   1400257a8:	lea    rdi,[rip+0x299a1]        # 0x14004f150
   1400257af:	cmp    BYTE PTR [rbx],0x0
   1400257b2:	jne    0x14002567c
   1400257b8:	lea    rdi,[rip+0x29991]        # 0x14004f150
   1400257bf:	mov    r12d,DWORD PTR [rbp-0x68]
   1400257c3:	mov    r14,QWORD PTR [rbp-0x10]
   1400257c7:	cmp    QWORD PTR [rbp+0x390],0x0
   1400257cf:	je     0x1400257e9
   1400257d1:	call   QWORD PTR [rip+0x179e9]        # 0x14003d1c0
   1400257d7:	mov    r8,QWORD PTR [rbp+0x390]
   1400257de:	xor    edx,edx
   1400257e0:	mov    rcx,rax
   1400257e3:	call   QWORD PTR [rip+0x179f7]        # 0x14003d1e0
   1400257e9:	test   esi,esi
   1400257eb:	jns    0x140025871
   1400257f1:	mov    ebx,0x4
   1400257f6:	mov    rcx,QWORD PTR [rdi]
   1400257f9:	test   rcx,rcx
   1400257fc:	je     0x140025804
   1400257fe:	call   QWORD PTR [rip+0x17a54]        # 0x14003d258
   140025804:	add    rdi,0x18
   140025808:	sub    rbx,0x1
   14002580c:	jne    0x1400257f6
   14002580e:	xor    edx,edx
   140025810:	lea    r8d,[rbx+0x60]
   140025814:	lea    rcx,[rip+0x29935]        # 0x14004f150
   14002581b:	call   0x140014694
   140025820:	mov    r8d,0x170
   140025826:	lea    rdx,[rip+0x1bf43]        # 0x140041770
   14002582d:	lea    rcx,[rip+0x287ec]        # 0x14004e020
   140025834:	call   0x1400156f2
   140025839:	mov    rsi,QWORD PTR [rbp-0x38]
   14002583d:	xor    r13d,r13d
   140025840:	lea    ebx,[r13+0x1]
   140025844:	jmp    0x14002588a
   140025846:	mov    esi,0xc000007a
   14002584b:	jmp    0x1400257b8
   140025850:	mov    rcx,rbx
   140025853:	call   0x1400155d8
   140025858:	mov    r14,QWORD PTR [rbp-0x10]
   14002585c:	mov    r12d,DWORD PTR [rbp-0x68]
   140025860:	mov    esi,0xc000007a
   140025865:	lea    rdi,[rip+0x298e4]        # 0x14004f150
   14002586c:	jmp    0x1400257c7
   140025871:	mov    eax,DWORD PTR [rip+0x292d1]        # 0x14004eb48
   140025877:	xor    r13d,r13d
   14002587a:	mov    rsi,QWORD PTR [rbp-0x38]
   14002587e:	lea    ebx,[r13+0x1]
   140025882:	inc    eax
   140025884:	mov    DWORD PTR [rip+0x292be],eax        # 0x14004eb48
   14002588a:	mov    eax,r13d
   14002588d:	xchg   DWORD PTR [rip+0x298ad],eax        # 0x14004f140
   140025893:	mov    rdi,QWORD PTR [rip+0x28856]        # 0x14004e0f0
   14002589a:	mov    rcx,rdi
   14002589d:	mov    DWORD PTR [rbp+0x1558],r14d
   1400258a4:	mov    DWORD PTR [rbp+0x1550],ebx
   1400258aa:	mov    DWORD PTR [rbp+0x1568],0x20826f6d
   1400258b4:	mov    DWORD PTR [rbp+0x1560],ebx
   1400258ba:	mov    DWORD PTR [rbp+0x1578],ebx
   1400258c0:	mov    DWORD PTR [rbp+0x1570],ebx
   1400258c6:	mov    DWORD PTR [rbp+0x1588],r12d
   1400258cd:	mov    DWORD PTR [rbp+0x1580],ebx
   1400258d3:	call   QWORD PTR [rip+0x17e4f]        # 0x14003d728
   1400258d9:	xor    ecx,ecx
   1400258db:	lea    r9,[rbp+0x1550]
   1400258e2:	mov    edx,0x2021
   1400258e7:	lea    r8d,[rcx+0x4]
   1400258eb:	call   rdi
   1400258ed:	xor    eax,eax
   1400258ef:	lock cmpxchg DWORD PTR [rip+0x29849],ebx        # 0x14004f140
   1400258f7:	jne    0x1400258ed
   1400258f9:	mov    eax,DWORD PTR [rip+0x29249]        # 0x14004eb48
   1400258ff:	lea    r13,[rip+0x2984a]        # 0x14004f150
   140025906:	test   eax,eax
   140025908:	jle    0x140025966
   14002590a:	sub    eax,0x1
   14002590d:	mov    DWORD PTR [rip+0x29235],eax        # 0x14004eb48
   140025913:	jne    0x140025966
   140025915:	mov    rdi,r13
   140025918:	mov    ebx,0x4
   14002591d:	mov    rcx,QWORD PTR [rdi]
   140025920:	test   rcx,rcx
   140025923:	je     0x14002592b
   140025925:	call   QWORD PTR [rip+0x1792d]        # 0x14003d258
   14002592b:	add    rdi,0x18
   14002592f:	sub    rbx,0x1
   140025933:	jne    0x14002591d
   140025935:	xor    edx,edx
   140025937:	lea    r8d,[rbx+0x60]
   14002593b:	mov    rcx,r13
   14002593e:	call   0x140014694
   140025943:	lea    r12,[rip+0x286d6]        # 0x14004e020
   14002594a:	mov    r8d,0x170
   140025950:	mov    rcx,r12
   140025953:	lea    rdx,[rip+0x1be16]        # 0x140041770
   14002595a:	call   0x1400156f2
   14002595f:	mov    ebx,0x1
   140025964:	jmp    0x14002596d
   140025966:	lea    r12,[rip+0x286b3]        # 0x14004e020
   14002596d:	xor    r14d,r14d
   140025970:	mov    eax,r14d
   140025973:	xchg   DWORD PTR [rip+0x297c7],eax        # 0x14004f140
   140025979:	mov    rdi,QWORD PTR [rip+0x28800]        # 0x14004e180
   140025980:	mov    rcx,rdi
   140025983:	call   QWORD PTR [rip+0x17d9f]        # 0x14003d728
   140025989:	mov    rdx,rsi
   14002598c:	xor    ecx,ecx
   14002598e:	call   rdi
   140025990:	mov    rax,QWORD PTR [rbp+0x240]
   140025997:	mov    QWORD PTR [rbp+0x168],rax
   14002599e:	jmp    0x140020c10
   1400259a3:	mov    rdi,QWORD PTR [rbp+0x40]
   1400259a7:	mov    QWORD PTR [rbp+0x3a0],rdi
   1400259ae:	test   r9d,r9d
   1400259b1:	je     0x140025a02
   1400259b3:	mov    edx,DWORD PTR [rdi]
   1400259b5:	lea    r8,[rbp+0x428]
   1400259bc:	mov    ecx,0x4
   1400259c1:	call   0x14000bad0
   1400259c6:	test   eax,eax
   1400259c8:	js     0x140025d5e
   1400259ce:	mov    eax,DWORD PTR [rbp+0x428]
   1400259d4:	mov    DWORD PTR [rbp+0x3a8],eax
   1400259da:	mov    edx,eax
   1400259dc:	lea    r8,[rbp+0x3a0]
   1400259e3:	mov    rcx,rdi
   1400259e6:	call   0x14000baf0
   1400259eb:	test   eax,eax
   1400259ed:	js     0x140020f00
   1400259f3:	mov    rdi,QWORD PTR [rbp+0x3a0]
   1400259fa:	inc    r10d
   1400259fd:	cmp    r10d,r9d
   140025a00:	jb     0x1400259b3
   140025a02:	lea    r8,[rbp+0x758]
   140025a09:	mov    edx,0x4
   140025a0e:	mov    rcx,rdi
   140025a11:	call   0x14000baf0
   140025a16:	test   eax,eax
   140025a18:	js     0x140020f00
   140025a1e:	mov    ecx,DWORD PTR [rbp+0x3c]
   140025a21:	lea    rax,[rbx+0x4]
   140025a25:	add    rcx,QWORD PTR [rbp+0x40]
   140025a29:	add    rax,rdi
   140025a2c:	mov    r8,rbx
   140025a2f:	cmp    rax,rcx
   140025a32:	ja     0x140020f00
   140025a38:	mov    rcx,QWORD PTR [rbp+0x758]
   140025a3f:	mov    rdx,r14
   140025a42:	mov    DWORD PTR [rdi],ebx
   140025a44:	call   0x1400156f2
   140025a49:	mov    edi,DWORD PTR [rbp+0x38]
   140025a4c:	inc    edi
   140025a4e:	mov    DWORD PTR [rbp+0x38],edi
   140025a51:	test   esi,esi
   140025a53:	je     0x140020f00
   140025a59:	cmp    QWORD PTR [rbp+0x40],0x0
   140025a5e:	jne    0x140025aa8
   140025a60:	lea    r8,[rbp+0x2c4]
   140025a67:	mov    edx,esi
   140025a69:	mov    ecx,0x4
   140025a6e:	call   0x14000bad0
   140025a73:	test   eax,eax
   140025a75:	js     0x140025d5e
   140025a7b:	mov    edx,DWORD PTR [rbp+0x2c4]
   140025a81:	mov    DWORD PTR [rbp+0x2d0],edx
   140025a87:	mov    ecx,DWORD PTR [rbp+0x3c]
   140025a8a:	lea    r8,[rbp+0x3c]
   140025a8e:	call   0x14000bad0
   140025a93:	test   eax,eax
   140025a95:	js     0x140020f00
   140025a9b:	mov    edi,DWORD PTR [rbp+0x38]
   140025a9e:	inc    edi
   140025aa0:	xor    r14d,r14d
   140025aa3:	jmp    0x140025b56
   140025aa8:	mov    r9,QWORD PTR [rbp+0x40]
   140025aac:	xor    r14d,r14d
   140025aaf:	mov    QWORD PTR [rbp+0x3b0],r9
   140025ab6:	mov    r10d,r14d
   140025ab9:	test   edi,edi
   140025abb:	je     0x140025b0d
   140025abd:	mov    edx,DWORD PTR [r9]
   140025ac0:	lea    r8,[rbp+0x2c8]
   140025ac7:	mov    ecx,0x4
   140025acc:	call   0x14000bad0
   140025ad1:	test   eax,eax
   140025ad3:	js     0x140025d61
   140025ad9:	mov    eax,DWORD PTR [rbp+0x2c8]
   140025adf:	mov    DWORD PTR [rbp+0x2d0],eax
   140025ae5:	mov    edx,eax
   140025ae7:	lea    r8,[rbp+0x3b0]
   140025aee:	mov    rcx,r9
   140025af1:	call   0x14000baf0
   140025af6:	test   eax,eax
   140025af8:	js     0x140025bb6
   140025afe:	mov    r9,QWORD PTR [rbp+0x3b0]
   140025b05:	inc    r10d
   140025b08:	cmp    r10d,edi
   140025b0b:	jb     0x140025abd
   140025b0d:	lea    r8,[rbp+0x778]
   140025b14:	mov    edx,0x4
   140025b19:	mov    rcx,r9
   140025b1c:	call   0x14000baf0
   140025b21:	test   eax,eax
   140025b23:	js     0x140025bb6
   140025b29:	mov    ecx,DWORD PTR [rbp+0x3c]
   140025b2c:	add    rcx,QWORD PTR [rbp+0x40]
   140025b30:	mov    r8d,esi
   140025b33:	lea    rax,[r8+0x4]
   140025b37:	add    rax,r9
   140025b3a:	cmp    rax,rcx
   140025b3d:	ja     0x140025bb6
   140025b3f:	mov    rcx,QWORD PTR [rbp+0x778]
   140025b46:	mov    rdx,r12
   140025b49:	mov    DWORD PTR [r9],esi
   140025b4c:	call   0x1400156f2
   140025b51:	mov    edi,DWORD PTR [rbp+0x38]
   140025b54:	inc    edi
   140025b56:	mov    DWORD PTR [rbp+0x38],edi
   140025b59:	mov    rax,QWORD PTR [rbp+0x530]
   140025b60:	mov    QWORD PTR [rbp+0x508],rax
   140025b67:	lea    rax,[rbp+0x508]
   140025b6e:	test   rax,rax
   140025b71:	je     0x140025bb6
   140025b73:	cmp    QWORD PTR [rbp+0x40],0x0
   140025b78:	jne    0x140025bbf
   140025b7a:	mov    edx,0x8
   140025b7f:	lea    r8,[rbp+0x2d8]
   140025b86:	lea    ecx,[rdx-0x4]
   140025b89:	call   0x14000bad0
   140025b8e:	test   eax,eax
   140025b90:	js     0x140025d61
   140025b96:	mov    edx,DWORD PTR [rbp+0x2d8]
   140025b9c:	mov    DWORD PTR [rbp+0x2e8],edx
   140025ba2:	mov    ecx,DWORD PTR [rbp+0x3c]
   140025ba5:	lea    r8,[rbp+0x3c]
   140025ba9:	call   0x14000bad0
   140025bae:	test   eax,eax
   140025bb0:	jns    0x140025c63
   140025bb6:	mov    rsi,QWORD PTR [rbp-0x70]
   140025bba:	jmp    0x140020f06
   140025bbf:	mov    r9,QWORD PTR [rbp+0x40]
   140025bc3:	mov    r10d,r14d
   140025bc6:	mov    QWORD PTR [rbp+0x3c0],r9
   140025bcd:	test   edi,edi
   140025bcf:	je     0x140025c1d
   140025bd1:	mov    edx,DWORD PTR [r9]
   140025bd4:	lea    r8,[rbp+0x2e0]
   140025bdb:	mov    ecx,0x4
   140025be0:	call   0x14000bad0
   140025be5:	test   eax,eax
   140025be7:	js     0x140025d61
   140025bed:	mov    eax,DWORD PTR [rbp+0x2e0]
   140025bf3:	mov    DWORD PTR [rbp+0x2e8],eax
   140025bf9:	mov    edx,eax
   140025bfb:	lea    r8,[rbp+0x3c0]
   140025c02:	mov    rcx,r9
   140025c05:	call   0x14000baf0
   140025c0a:	test   eax,eax
   140025c0c:	js     0x140025bb6
   140025c0e:	mov    r9,QWORD PTR [rbp+0x3c0]
   140025c15:	inc    r10d
   140025c18:	cmp    r10d,edi
   140025c1b:	jb     0x140025bd1
   140025c1d:	lea    r8,[rbp+0x740]
   140025c24:	mov    edx,0x4
   140025c29:	mov    rcx,r9
   140025c2c:	call   0x14000baf0
   140025c31:	test   eax,eax
   140025c33:	js     0x140025bb6
   140025c35:	mov    ecx,DWORD PTR [rbp+0x3c]
   140025c38:	lea    rax,[r9+0xc]
   140025c3c:	add    rcx,QWORD PTR [rbp+0x40]
   140025c40:	cmp    rax,rcx
   140025c43:	ja     0x140025bb6
   140025c49:	mov    rax,QWORD PTR [rbp+0x740]
   140025c50:	mov    DWORD PTR [r9],0x8
   140025c57:	movsd  xmm0,QWORD PTR [rbp+0x508]
   140025c5f:	movsd  QWORD PTR [rax],xmm0
   140025c63:	inc    DWORD PTR [rbp+0x38]
   140025c66:	mov    edx,0x4
   140025c6b:	lea    r8,[rbp+0x37c]
   140025c72:	mov    ecx,edx
   140025c74:	call   0x14000bad0
   140025c79:	test   eax,eax
   140025c7b:	js     0x140025bb6
   140025c81:	mov    edi,DWORD PTR [rbp+0x37c]
   140025c87:	mov    DWORD PTR [rbp+0x450],edi
   140025c8d:	lea    r8,[rbp+0x478]
   140025c94:	mov    DWORD PTR [rbp+0x1a8],edi
   140025c9a:	mov    edx,0x8
   140025c9f:	call   0x14000bad0
   140025ca4:	test   eax,eax
   140025ca6:	js     0x140025bb6
   140025cac:	mov    edx,DWORD PTR [rbp+0x478]
   140025cb2:	mov    DWORD PTR [rbp+0x450],edx
   140025cb8:	lea    r8,[rbp+0x1a8]
   140025cbf:	mov    ecx,edi
   140025cc1:	call   0x14000bad0
   140025cc6:	test   eax,eax
   140025cc8:	js     0x140025bb6
   140025cce:	xor    r9d,r9d
   140025cd1:	mov    QWORD PTR [rbp+0x18],r14
   140025cd5:	mov    QWORD PTR [rbp+0x298],r9
   140025cdc:	mov    edi,r9d
   140025cdf:	mov    QWORD PTR [rbp-0x30],r9
   140025ce3:	mov    r13d,r9d
   140025ce6:	mov    DWORD PTR [rbp-0x78],r9d
   140025cea:	mov    r12d,r9d
   140025ced:	mov    QWORD PTR [rsp+0x60],r9
   140025cf2:	mov    DWORD PTR [rbp+0x78],r9d
   140025cf6:	mov    QWORD PTR [rbp-0x80],r9
   140025cfa:	mov    QWORD PTR [rbp-0x60],r9
   140025cfe:	mov    DWORD PTR [rbp+0xa4],r9d
   140025d05:	mov    QWORD PTR [rbp+0x4d8],r9
   140025d0c:	rdtsc  
   140025d0e:	shl    rdx,0x20
   140025d12:	or     rax,rdx
   140025d15:	mov    QWORD PTR [rbp+0x4d8],rax
   140025d1c:	mov    DWORD PTR [rbp+0xdc],0x8
   140025d26:	mov    edx,DWORD PTR [rbp+0x3c]
   140025d29:	lea    r8,[rbp+0xdc]
   140025d30:	lea    ecx,[r9+0x8]
   140025d34:	call   0x14000bad0
   140025d39:	mov    ebx,eax
   140025d3b:	test   eax,eax
   140025d3d:	js     0x140025e2c
   140025d43:	mov    eax,DWORD PTR [rbp+0xdc]
   140025d49:	lea    rcx,[rax+0x7]
   140025d4d:	and    ecx,0xfffffff8
   140025d50:	cmp    ecx,eax
   140025d52:	jae    0x140025d6a
   140025d54:	mov    ebx,0xc0000095
   140025d59:	jmp    0x140025e2c
   140025d5e:	xor    r14d,r14d
   140025d61:	mov    rsi,QWORD PTR [rbp-0x70]
   140025d65:	jmp    0x140020f06
   140025d6a:	mov    DWORD PTR [rbp+0xdc],ecx
   140025d70:	mov    edi,ecx
   140025d72:	call   QWORD PTR [rip+0x17448]        # 0x14003d1c0
   140025d78:	mov    r8d,edi
   140025d7b:	mov    edx,0x8
   140025d80:	mov    rcx,rax
   140025d83:	call   QWORD PTR [rip+0x1744f]        # 0x14003d1d8
   140025d89:	mov    rdi,rax
   140025d8c:	test   rax,rax
   140025d8f:	jne    0x140025d9b
   140025d91:	mov    ebx,0xc0000017
   140025d96:	jmp    0x140025e26
   140025d9b:	mov    QWORD PTR [rbp+0x268],rax
   140025da2:	lea    r8,[rbp+0x268]
   140025da9:	mov    eax,DWORD PTR [rbp+0x38]
   140025dac:	mov    edx,0x4
   140025db1:	mov    rcx,rdi
   140025db4:	mov    DWORD PTR [rdi],eax
   140025db6:	call   0x14000baf0
   140025dbb:	mov    ebx,eax
   140025dbd:	test   eax,eax
   140025dbf:	js     0x140025e12
   140025dc1:	mov    rcx,QWORD PTR [rbp+0x268]
   140025dc8:	lea    r8,[rbp+0x268]
   140025dcf:	mov    eax,DWORD PTR [rbp+0x3c]
   140025dd2:	mov    DWORD PTR [rcx],eax
   140025dd4:	call   0x14000baf0
   140025dd9:	mov    ebx,eax
   140025ddb:	test   eax,eax
   140025ddd:	js     0x140025e12
   140025ddf:	mov    ecx,DWORD PTR [rbp+0xdc]
   140025de5:	mov    rax,QWORD PTR [rbp+0x4d8]
   140025dec:	mov    QWORD PTR [rcx+rdi*1-0x8],rax
   140025df1:	mov    r8d,DWORD PTR [rbp+0x3c]
   140025df5:	mov    rdx,QWORD PTR [rbp+0x40]
   140025df9:	mov    rcx,QWORD PTR [rbp+0x268]
   140025e00:	call   0x1400156f2
   140025e05:	mov    r14d,DWORD PTR [rbp+0xdc]
   140025e0c:	mov    QWORD PTR [rbp+0x18],rdi
   140025e10:	jmp    0x140025e26
   140025e12:	call   QWORD PTR [rip+0x173a8]        # 0x14003d1c0
   140025e18:	mov    r8,rdi
   140025e1b:	xor    edx,edx
   140025e1d:	mov    rcx,rax
   140025e20:	call   QWORD PTR [rip+0x173ba]        # 0x14003d1e0
   140025e26:	mov    rdi,r12
   140025e29:	xor    r9d,r9d
   140025e2c:	or     ebx,0x10000000
   140025e32:	jl     0x140027890
   140025e38:	mov    rsi,r9
   140025e3b:	mov    QWORD PTR [rbp+0x550],r9
   140025e42:	mov    QWORD PTR [rbp+0x560],r9
   140025e49:	mov    QWORD PTR [rbp+0x570],r9
   140025e50:	mov    QWORD PTR [rbp+0x580],r9
   140025e57:	mov    QWORD PTR [rbp+0x3d0],r9
   140025e5e:	mov    QWORD PTR [rbp+0x540],r9
   140025e65:	mov    QWORD PTR [rbp+0xc0],r9
   140025e6c:	cmp    QWORD PTR [rbp+0x18],r12
   140025e70:	jne    0x140025e7f
   140025e72:	mov    ebx,0xc000000d
   140025e77:	xor    r14d,r14d
   140025e7a:	jmp    0x14002663c
   140025e7f:	mov    ebx,r14d
   140025e82:	mov    QWORD PTR [rbp+0x150],rbx
   140025e89:	test   r14d,r14d
   140025e8c:	je     0x14002658c
   140025e92:	lea    rax,[rbx+0x8]
   140025e96:	mov    rcx,rax
   140025e99:	mov    QWORD PTR [rbp+0xb0],rax
   140025ea0:	call   0x14000f134
   140025ea5:	mov    QWORD PTR [rsp+0x78],rax
   140025eaa:	mov    rcx,rax
   140025ead:	test   rax,rax
   140025eb0:	je     0x14002658c
   140025eb6:	mov    rdi,QWORD PTR [rbp+0x18]
   140025eba:	xor    al,al
   140025ebc:	xor    r14d,r14d
   140025ebf:	mov    DWORD PTR [rbp-0x28],eax
   140025ec2:	mov    edx,r14d
   140025ec5:	test   rbx,rbx
   140025ec8:	je     0x140025f60
   140025ece:	cmp    rbx,0x20
   140025ed2:	jb     0x140025f4d
   140025ed4:	mov    ecx,ebx
   140025ed6:	mov    eax,ebx
   140025ed8:	and    ecx,0x1f
   140025edb:	xorps  xmm2,xmm2
   140025ede:	sub    rax,rcx
   140025ee1:	movdqa xmm1,xmm2
   140025ee5:	movdqu xmm0,XMMWORD PTR [rdx+rdi*1]
   140025eea:	pxor   xmm0,xmm2
   140025eee:	movdqa xmm2,xmm0
   140025ef2:	movdqu xmm0,XMMWORD PTR [rdx+rdi*1+0x10]
   140025ef8:	add    rdx,0x20
   140025efc:	pxor   xmm0,xmm1
   140025f00:	movdqa xmm1,xmm0
   140025f04:	cmp    rdx,rax
   140025f07:	jb     0x140025ee5
   140025f09:	mov    rcx,QWORD PTR [rsp+0x78]
   140025f0e:	pxor   xmm1,xmm2
   140025f12:	movdqa xmm0,xmm1
   140025f16:	psrldq xmm0,0x8
   140025f1b:	pxor   xmm1,xmm0
   140025f1f:	movdqa xmm0,xmm1
   140025f23:	psrldq xmm0,0x4
   140025f28:	pxor   xmm1,xmm0
   140025f2c:	movdqa xmm0,xmm1
   140025f30:	psrldq xmm0,0x2
   140025f35:	pxor   xmm1,xmm0
   140025f39:	movdqa xmm0,xmm1
   140025f3d:	psrldq xmm0,0x1
   140025f42:	pxor   xmm1,xmm0
   140025f46:	movd   eax,xmm1
   140025f4a:	mov    DWORD PTR [rbp-0x28],eax
   140025f4d:	cmp    rdx,rbx
   140025f50:	jae    0x140025f60
   140025f52:	xor    al,BYTE PTR [rdx+rdi*1]
   140025f55:	inc    rdx
   140025f58:	cmp    rdx,rbx
   140025f5b:	jb     0x140025f52
   140025f5d:	mov    DWORD PTR [rbp-0x28],eax
   140025f60:	or     r11d,0xffffffff
   140025f64:	mov    DWORD PTR [rbp+0xc],r14d
   140025f68:	mov    rdx,rbx
   140025f6b:	mov    DWORD PTR [rbp-0x4],r11d
   140025f6f:	mov    r9,rdi
   140025f72:	mov    r8,rcx
   140025f75:	mov    edi,r14d
   140025f78:	and    edx,0x7
   140025f7b:	je     0x14002603e
   140025f81:	mov    r10d,r14d
   140025f84:	test   edx,edx
   140025f86:	jle    0x140025fbb
   140025f88:	mov    edi,0x38
   140025f8d:	movzx  eax,BYTE PTR [r9]
   140025f91:	cmp    r10d,0x4
   140025f95:	jge    0x140025fa1
   140025f97:	lea    ecx,[rdi-0x20]
   140025f9a:	shl    eax,cl
   140025f9c:	or     r13d,eax
   140025f9f:	jmp    0x140025fa8
   140025fa1:	mov    ecx,edi
   140025fa3:	shl    eax,cl
   140025fa5:	or     r12d,eax
   140025fa8:	inc    r9
   140025fab:	inc    r10d
   140025fae:	sub    edi,0x8
   140025fb1:	cmp    r10d,edx
   140025fb4:	jl     0x140025f8d
   140025fb6:	mov    rcx,QWORD PTR [rsp+0x78]
   140025fbb:	mov    edi,r13d
   140025fbe:	mov    r11d,r12d
   140025fc1:	xor    edi,0x4e61f5c7
   140025fc7:	xor    r11d,0x1be6ba80
   140025fce:	mov    DWORD PTR [rbp+0xc],edi
   140025fd1:	mov    eax,r14d
   140025fd4:	mov    DWORD PTR [rbp-0x4],r11d
   140025fd8:	test   edx,edx
   140025fda:	jle    0x140026000
   140025fdc:	cmp    eax,0x4
   140025fdf:	jge    0x140025fe9
   140025fe1:	rol    edi,0x8
   140025fe4:	mov    BYTE PTR [r8],dil
   140025fe7:	jmp    0x140025ff0
   140025fe9:	rol    r11d,0x8
   140025fed:	mov    BYTE PTR [r8],r11b
   140025ff0:	inc    r8
   140025ff3:	inc    eax
   140025ff5:	cmp    eax,edx
   140025ff7:	jl     0x140025fdc
   140025ff9:	mov    edi,DWORD PTR [rbp+0xc]
   140025ffc:	mov    r11d,DWORD PTR [rbp-0x4]
   140026000:	lea    eax,[rdx-0x4]
   140026003:	test   eax,eax
   140026005:	jle    0x14002601d
   140026007:	mov    ecx,0x4
   14002600c:	sub    ecx,eax
   14002600e:	shl    ecx,0x3
   140026011:	shr    r11d,cl
   140026014:	shl    r11d,cl
   140026017:	mov    DWORD PTR [rbp-0x4],r11d
   14002601b:	jmp    0x140026036
   14002601d:	mov    DWORD PTR [rbp-0x4],r14d
   140026021:	mov    r11d,r14d
   140026024:	test   eax,eax
   140026026:	jns    0x14002603b
   140026028:	neg    eax
   14002602a:	shl    eax,0x3
   14002602d:	mov    ecx,eax
   14002602f:	shr    edi,cl
   140026031:	shl    edi,cl
   140026033:	mov    DWORD PTR [rbp+0xc],edi
   140026036:	mov    rcx,QWORD PTR [rsp+0x78]
   14002603b:	mov    eax,DWORD PTR [rbp-0x28]
   14002603e:	mov    r14,rbx
   140026041:	shr    r14,0x3
   140026045:	test   r14,r14
   140026048:	je     0x140026368
   14002604e:	lea    rsi,[r8+0x7]
   140026052:	lea    rbx,[r9+0x2]
   140026056:	movzx  eax,BYTE PTR [rbx-0x1]
   14002605a:	movzx  r10d,BYTE PTR [rbx-0x2]
   14002605f:	movzx  r9d,BYTE PTR [rbx+0x2]
   140026064:	lea    rbx,[rbx+0x8]
   140026068:	shl    r10d,0x8
   14002606c:	or     r10d,eax
   14002606f:	shl    r9d,0x8
   140026073:	movzx  eax,BYTE PTR [rbx-0x8]
   140026077:	shl    r10d,0x8
   14002607b:	or     r10d,eax
   14002607e:	movzx  eax,BYTE PTR [rbx-0x7]
   140026082:	shl    r10d,0x8
   140026086:	or     r10d,eax
   140026089:	movzx  eax,BYTE PTR [rbx-0x5]
   14002608d:	or     r9d,eax
   140026090:	movzx  eax,BYTE PTR [rbx-0x4]
   140026094:	shl    r9d,0x8
   140026098:	or     r9d,eax
   14002609b:	movzx  eax,BYTE PTR [rbx-0x3]
   14002609f:	shl    r9d,0x8
   1400260a3:	or     r9d,eax
   1400260a6:	xor    r11d,r9d
   1400260a9:	mov    eax,r11d
   1400260ac:	mov    edx,r11d
   1400260af:	xor    eax,0xc221
   1400260b4:	ror    edx,0xc
   1400260b7:	imul   ecx,eax,0x844b
   1400260bd:	sub    ecx,edx
   1400260bf:	xor    ecx,r10d
   1400260c2:	xor    edi,ecx
   1400260c4:	mov    eax,edi
   1400260c6:	xor    eax,0x3af61d2e
   1400260cb:	ror    eax,1
   1400260cd:	imul   ecx,eax,0xc221
   1400260d3:	mov    eax,edi
   1400260d5:	rol    eax,0xf
   1400260d8:	xor    ecx,eax
   1400260da:	xor    r11d,ecx
   1400260dd:	mov    eax,r11d
   1400260e0:	mov    edx,r11d
   1400260e3:	xor    eax,0x3af6
   1400260e8:	ror    edx,0xd
   1400260eb:	imul   ecx,eax,0x1d2e
   1400260f1:	add    edx,ecx
   1400260f3:	xor    edi,edx
   1400260f5:	mov    eax,edi
   1400260f7:	xor    eax,0x1d2e
   1400260fc:	rol    eax,0x2
   1400260ff:	imul   ecx,eax,0x3af6
   140026105:	mov    eax,edi
   140026107:	rol    eax,0x3
   14002610a:	add    ecx,eax
   14002610c:	xor    r11d,ecx
   14002610f:	mov    eax,r11d
   140026112:	not    eax
   140026114:	ror    eax,0xa
   140026117:	add    eax,0x844b
   14002611c:	imul   eax,eax,0x3af6
   140026122:	xor    edi,eax
   140026124:	mov    eax,edi
   140026126:	xor    eax,0x3af61d2e
   14002612b:	rol    eax,0x4
   14002612e:	imul   ecx,eax,0xc221
   140026134:	mov    eax,edi
   140026136:	shr    eax,0x5
   140026139:	sub    ecx,eax
   14002613b:	xor    r11d,ecx
   14002613e:	mov    eax,r11d
   140026141:	xor    eax,0x3af6
   140026146:	rol    eax,1
   140026148:	imul   ecx,eax,0x1d2e
   14002614e:	mov    eax,r11d
   140026151:	shr    eax,1
   140026153:	add    ecx,eax
   140026155:	xor    edi,ecx
   140026157:	mov    eax,edi
   140026159:	xor    eax,0xc221
   14002615e:	rol    eax,0x7
   140026161:	imul   ecx,eax,0x3af6
   140026167:	mov    eax,edi
   140026169:	ror    eax,0xb
   14002616c:	xor    ecx,eax
   14002616e:	xor    r11d,ecx
   140026171:	lea    eax,[r11-0xc221]
   140026178:	imul   ecx,eax,0x844b
   14002617e:	mov    eax,r11d
   140026181:	shr    eax,0xf
   140026184:	sub    ecx,eax
   140026186:	xor    edi,ecx
   140026188:	mov    eax,edi
   14002618a:	ror    eax,0xa
   14002618d:	sub    eax,0xc221
   140026192:	imul   eax,eax,0x1d2e
   140026198:	xor    r11d,eax
   14002619b:	mov    r8d,r11d
   14002619e:	xor    r8d,edi
   1400261a1:	xor    r8d,0xf8d79965
   1400261a8:	lea    edi,[r8-0x3af6]
   1400261af:	xor    edi,r11d
   1400261b2:	xor    edi,0xc221844b
   1400261b8:	lea    eax,[rdi-0x3af6a179]
   1400261be:	xor    r8d,eax
   1400261c1:	lea    eax,[rdi-0x1d2e]
   1400261c7:	rol    eax,0x3
   1400261ca:	imul   ecx,eax,0x844b
   1400261d0:	mov    eax,edi
   1400261d2:	shr    eax,0xf
   1400261d5:	xor    ecx,eax
   1400261d7:	xor    r8d,ecx
   1400261da:	lea    eax,[r8-0x1d2e]
   1400261e1:	imul   ecx,eax,0xc221
   1400261e7:	mov    eax,r8d
   1400261ea:	shr    eax,0xd
   1400261ed:	sub    ecx,eax
   1400261ef:	mov    eax,0xc221844b
   1400261f4:	xor    edi,ecx
   1400261f6:	sub    eax,edi
   1400261f8:	ror    eax,0x9
   1400261fb:	imul   ecx,eax,0x1d2e
   140026201:	mov    eax,edi
   140026203:	ror    eax,0xb
   140026206:	xor    ecx,eax
   140026208:	xor    r8d,ecx
   14002620b:	lea    eax,[r8+0x3dde40bf]
   140026212:	xor    edi,eax
   140026214:	mov    eax,edi
   140026216:	mov    edx,edi
   140026218:	xor    eax,0xc221
   14002621d:	ror    edx,0x7
   140026220:	imul   ecx,eax,0x844b
   140026226:	sub    ecx,edx
   140026228:	xor    r8d,ecx
   14002622b:	mov    eax,r8d
   14002622e:	xor    eax,0x3af6
   140026233:	rol    eax,0x4
   140026236:	imul   ecx,eax,0xc221
   14002623c:	mov    eax,r8d
   14002623f:	ror    eax,0x10
   140026242:	sub    ecx,eax
   140026244:	mov    eax,0xc221844b
   140026249:	xor    edi,ecx
   14002624b:	sub    eax,edi
   14002624d:	ror    eax,0xa
   140026250:	imul   ecx,eax,0x1d2e
   140026256:	mov    eax,edi
   140026258:	ror    eax,0x4
   14002625b:	add    ecx,eax
   14002625d:	xor    r8d,ecx
   140026260:	lea    eax,[r8+0x3dde7bb5]
   140026267:	ror    eax,0x4
   14002626a:	imul   ecx,eax,0x3af6
   140026270:	mov    eax,r8d
   140026273:	ror    eax,0x9
   140026276:	xor    ecx,eax
   140026278:	xor    edi,ecx
   14002627a:	mov    eax,edi
   14002627c:	xor    eax,0x3af61d2e
   140026281:	rol    eax,0x8
   140026284:	imul   ecx,eax,0x844b
   14002628a:	mov    eax,edi
   14002628c:	rol    eax,0x2
   14002628f:	sub    ecx,eax
   140026291:	xor    r8d,ecx
   140026294:	lea    rsi,[rsi+0x8]
   140026298:	mov    eax,0x3af61d2e
   14002629d:	sub    eax,r8d
   1400262a0:	ror    eax,0xb
   1400262a3:	imul   ecx,eax,0xc221
   1400262a9:	mov    eax,r8d
   1400262ac:	ror    eax,0xc
   1400262af:	sub    ecx,eax
   1400262b1:	xor    edi,ecx
   1400262b3:	mov    eax,edi
   1400262b5:	xor    eax,0xc221
   1400262ba:	imul   ecx,eax,0x1d2e
   1400262c0:	mov    eax,edi
   1400262c2:	shr    eax,0x8
   1400262c5:	xor    ecx,eax
   1400262c7:	xor    r8d,ecx
   1400262ca:	xor    edi,r8d
   1400262cd:	xor    r8d,r13d
   1400262d0:	mov    DWORD PTR [rbp+0xc],r8d
   1400262d4:	xor    edi,0xf8d79965
   1400262da:	xor    edi,r12d
   1400262dd:	mov    r13d,r10d
   1400262e0:	mov    DWORD PTR [rbp-0x4],edi
   1400262e3:	mov    r12d,r9d
   1400262e6:	mov    BYTE PTR [rsi-0xc],r8b
   1400262ea:	movzx  eax,BYTE PTR [rbp-0x4]
   1400262ee:	ror    DWORD PTR [rbp+0xc],0x8
   1400262f2:	mov    BYTE PTR [rsi-0x8],al
   1400262f5:	ror    DWORD PTR [rbp-0x4],0x8
   1400262f9:	movzx  eax,BYTE PTR [rbp+0xc]
   1400262fd:	mov    BYTE PTR [rsi-0xd],al
   140026300:	movzx  eax,BYTE PTR [rbp-0x4]
   140026304:	ror    DWORD PTR [rbp+0xc],0x8
   140026308:	mov    BYTE PTR [rsi-0x9],al
   14002630b:	ror    DWORD PTR [rbp-0x4],0x8
   14002630f:	movzx  eax,BYTE PTR [rbp+0xc]
   140026313:	mov    BYTE PTR [rsi-0xe],al
   140026316:	ror    DWORD PTR [rbp+0xc],0x8
   14002631a:	movzx  eax,BYTE PTR [rbp-0x4]
   14002631e:	mov    BYTE PTR [rsi-0xa],al
   140026321:	ror    DWORD PTR [rbp-0x4],0x8
   140026325:	movzx  eax,BYTE PTR [rbp+0xc]
   140026329:	mov    BYTE PTR [rsi-0xf],al
   14002632c:	movzx  eax,BYTE PTR [rbp-0x4]
   140026330:	mov    BYTE PTR [rsi-0xb],al
   140026333:	mov    edi,DWORD PTR [rbp+0xc]
   140026336:	mov    r11d,DWORD PTR [rbp-0x4]
   14002633a:	ror    edi,0x8
   14002633d:	ror    r11d,0x8
   140026341:	mov    DWORD PTR [rbp+0xc],edi
   140026344:	mov    DWORD PTR [rbp-0x4],r11d
   140026348:	sub    r14,0x1
   14002634c:	jne    0x140026056
   140026352:	mov    rbx,QWORD PTR [rbp+0x150]
   140026359:	mov    rsi,QWORD PTR [rbp+0xc0]
   140026360:	mov    rcx,QWORD PTR [rsp+0x78]
   140026365:	mov    eax,DWORD PTR [rbp-0x28]
   140026368:	movzx  eax,al
   14002636b:	lea    r14,[rip+0x2804e]        # 0x14004e3c0
   140026372:	mov    QWORD PTR [rcx+rbx*1],rax
   140026376:	lea    rax,[rip+0x280e3]        # 0x14004e460
   14002637d:	mov    rbx,QWORD PTR [rbp+0xb0]
   140026384:	mov    QWORD PTR [rbp+0x540],rbx
   14002638b:	mov    QWORD PTR [rbp+0x550],rax
   140026392:	mov    QWORD PTR [rbp+0x3d0],rcx
   140026399:	mov    QWORD PTR [rbp+0x560],0x8
   1400263a4:	mov    QWORD PTR [rbp+0x570],r14
   1400263ab:	mov    QWORD PTR [rbp+0x580],0xa0
   1400263b6:	call   QWORD PTR [rip+0x16e04]        # 0x14003d1c0
   1400263bc:	mov    edx,0x8
   1400263c1:	mov    rcx,rax
   1400263c4:	lea    r8d,[rdx+0x28]
   1400263c8:	call   QWORD PTR [rip+0x16e0a]        # 0x14003d1d8
   1400263ce:	mov    rdi,rax
   1400263d1:	test   rax,rax
   1400263d4:	jne    0x1400263e3
   1400263d6:	mov    ebx,0xc0000017
   1400263db:	xor    r14d,r14d
   1400263de:	jmp    0x140026575
   1400263e3:	mov    DWORD PTR [rax],ebx
   1400263e5:	mov    ebx,ebx
   1400263e7:	call   QWORD PTR [rip+0x16dd3]        # 0x14003d1c0
   1400263ed:	mov    r8d,ebx
   1400263f0:	mov    edx,0x8
   1400263f5:	mov    rcx,rax
   1400263f8:	call   QWORD PTR [rip+0x16dda]        # 0x14003d1d8
   1400263fe:	test   rax,rax
   140026401:	je     0x1400264ee
   140026407:	mov    rdx,QWORD PTR [rsp+0x78]
   14002640c:	mov    r8d,ebx
   14002640f:	mov    rcx,rax
   140026412:	mov    QWORD PTR [rdi+0x8],rax
   140026416:	call   0x1400156f2
   14002641b:	mov    DWORD PTR [rdi+0x10],0xa0
   140026422:	call   QWORD PTR [rip+0x16d98]        # 0x14003d1c0
   140026428:	mov    edx,0x8
   14002642d:	mov    r8d,0xa0
   140026433:	mov    rcx,rax
   140026436:	call   QWORD PTR [rip+0x16d9c]        # 0x14003d1d8
   14002643c:	test   rax,rax
   14002643f:	je     0x1400264ee
   140026445:	mov    QWORD PTR [rdi+0x18],rax
   140026449:	movups xmm0,XMMWORD PTR [r14]
   14002644d:	movups XMMWORD PTR [rax],xmm0
   140026450:	movups xmm1,XMMWORD PTR [r14+0x10]
   140026455:	movups XMMWORD PTR [rax+0x10],xmm1
   140026459:	movups xmm0,XMMWORD PTR [r14+0x20]
   14002645e:	movups XMMWORD PTR [rax+0x20],xmm0
   140026462:	movups xmm1,XMMWORD PTR [r14+0x30]
   140026467:	movups XMMWORD PTR [rax+0x30],xmm1
   14002646b:	movups xmm0,XMMWORD PTR [r14+0x40]
   140026470:	movups XMMWORD PTR [rax+0x40],xmm0
   140026474:	movups xmm1,XMMWORD PTR [r14+0x50]
   140026479:	movups XMMWORD PTR [rax+0x50],xmm1
   14002647d:	movups xmm0,XMMWORD PTR [r14+0x60]
   140026482:	movups XMMWORD PTR [rax+0x60],xmm0
   140026486:	movups xmm1,XMMWORD PTR [r14+0x70]
   14002648b:	movups XMMWORD PTR [rax+0x70],xmm1
   14002648f:	movups xmm0,XMMWORD PTR [r14+0x80]
   140026497:	movups XMMWORD PTR [rax+0x80],xmm0
   14002649e:	movups xmm1,XMMWORD PTR [r14+0x90]
   1400264a6:	movups XMMWORD PTR [rax+0x90],xmm1
   1400264ad:	mov    DWORD PTR [rdi+0x20],0x8
   1400264b4:	call   QWORD PTR [rip+0x16d06]        # 0x14003d1c0
   1400264ba:	mov    edx,0x8
   1400264bf:	mov    rcx,rax
   1400264c2:	mov    r8d,edx
   1400264c5:	call   QWORD PTR [rip+0x16d0d]        # 0x14003d1d8
   1400264cb:	test   rax,rax
   1400264ce:	je     0x1400264ee
   1400264d0:	mov    QWORD PTR [rdi+0x28],rax
   1400264d4:	xor    r14d,r14d
   1400264d7:	movsd  xmm0,QWORD PTR [rip+0x27f81]        # 0x14004e460
   1400264df:	mov    ebx,r14d
   1400264e2:	movsd  QWORD PTR [rax],xmm0
   1400264e6:	mov    rsi,rdi
   1400264e9:	jmp    0x140026575
   1400264ee:	mov    ebx,0xc0000017
   1400264f3:	mov    r14,QWORD PTR [rdi+0x8]
   1400264f7:	test   r14,r14
   1400264fa:	je     0x140026519
   1400264fc:	call   QWORD PTR [rip+0x16cbe]        # 0x14003d1c0
   140026502:	mov    r8,r14
   140026505:	xor    edx,edx
   140026507:	mov    rcx,rax
   14002650a:	call   QWORD PTR [rip+0x16cd0]        # 0x14003d1e0
   140026510:	xor    r12d,r12d
   140026513:	mov    QWORD PTR [rdi+0x8],r12
   140026517:	jmp    0x14002651c
   140026519:	xor    r12d,r12d
   14002651c:	mov    r14,QWORD PTR [rdi+0x18]
   140026520:	test   r14,r14
   140026523:	je     0x14002653d
   140026525:	call   QWORD PTR [rip+0x16c95]        # 0x14003d1c0
   14002652b:	mov    r8,r14
   14002652e:	xor    edx,edx
   140026530:	mov    rcx,rax
   140026533:	call   QWORD PTR [rip+0x16ca7]        # 0x14003d1e0
   140026539:	mov    QWORD PTR [rdi+0x18],r12
   14002653d:	mov    r14,QWORD PTR [rdi+0x28]
   140026541:	test   r14,r14
   140026544:	je     0x140026561
   140026546:	call   QWORD PTR [rip+0x16c74]        # 0x14003d1c0
   14002654c:	mov    r8,r14
   14002654f:	xor    edx,edx
   140026551:	mov    rcx,rax
   140026554:	call   QWORD PTR [rip+0x16c86]        # 0x14003d1e0
   14002655a:	xor    r14d,r14d
   14002655d:	mov    QWORD PTR [rdi+0x28],r14
   140026561:	call   QWORD PTR [rip+0x16c59]        # 0x14003d1c0
   140026567:	mov    r8,rdi
   14002656a:	xor    edx,edx
   14002656c:	mov    rcx,rax
   14002656f:	call   QWORD PTR [rip+0x16c6b]        # 0x14003d1e0
   140026575:	mov    r13,QWORD PTR [rbp-0x80]
   140026579:	mov    r12,r13
   14002657c:	test   ebx,ebx
   14002657e:	js     0x140026594
   140026580:	mov    QWORD PTR [rbp+0x298],rsi
   140026587:	mov    rsi,r14
   14002658a:	jmp    0x140026594
   14002658c:	mov    ebx,0xc0000001
   140026591:	xor    r14d,r14d
   140026594:	mov    rdi,QWORD PTR [rbp+0x3d0]
   14002659b:	test   rdi,rdi
   14002659e:	je     0x1400265bb
   1400265a0:	call   QWORD PTR [rip+0x16c1a]        # 0x14003d1c0
   1400265a6:	mov    r8,rdi
   1400265a9:	xor    edx,edx
   1400265ab:	mov    rcx,rax
   1400265ae:	call   QWORD PTR [rip+0x16c2c]        # 0x14003d1e0
   1400265b4:	mov    QWORD PTR [rbp+0x3d0],r14
   1400265bb:	test   rsi,rsi
   1400265be:	je     0x140026637
   1400265c0:	mov    rdi,QWORD PTR [rsi+0x8]
   1400265c4:	test   rdi,rdi
   1400265c7:	je     0x1400265e1
   1400265c9:	call   QWORD PTR [rip+0x16bf1]        # 0x14003d1c0
   1400265cf:	mov    r8,rdi
   1400265d2:	xor    edx,edx
   1400265d4:	mov    rcx,rax
   1400265d7:	call   QWORD PTR [rip+0x16c03]        # 0x14003d1e0
   1400265dd:	mov    QWORD PTR [rsi+0x8],r14
   1400265e1:	mov    rdi,QWORD PTR [rsi+0x18]
   1400265e5:	test   rdi,rdi
   1400265e8:	je     0x140026602
   1400265ea:	call   QWORD PTR [rip+0x16bd0]        # 0x14003d1c0
   1400265f0:	mov    r8,rdi
   1400265f3:	xor    edx,edx
   1400265f5:	mov    rcx,rax
   1400265f8:	call   QWORD PTR [rip+0x16be2]        # 0x14003d1e0
   1400265fe:	mov    QWORD PTR [rsi+0x18],r14
   140026602:	mov    rdi,QWORD PTR [rsi+0x28]
   140026606:	test   rdi,rdi
   140026609:	je     0x140026623
   14002660b:	call   QWORD PTR [rip+0x16baf]        # 0x14003d1c0
   140026611:	mov    r8,rdi
   140026614:	xor    edx,edx
   140026616:	mov    rcx,rax
   140026619:	call   QWORD PTR [rip+0x16bc1]        # 0x14003d1e0
   14002661f:	mov    QWORD PTR [rsi+0x28],r14
   140026623:	call   QWORD PTR [rip+0x16b97]        # 0x14003d1c0
   140026629:	mov    r8,rsi
   14002662c:	xor    edx,edx
   14002662e:	mov    rcx,rax
   140026631:	call   QWORD PTR [rip+0x16ba9]        # 0x14003d1e0
   140026637:	mov    rdi,QWORD PTR [rsp+0x60]
   14002663c:	or     ebx,0x10000000
   140026642:	jl     0x140027893
   140026648:	mov    rsi,QWORD PTR [rbp+0x298]
   14002664f:	lea    r8,[rbp+0x68]
   140026653:	mov    ecx,0x4
   140026658:	mov    DWORD PTR [rbp+0x68],0x4
   14002665f:	mov    edx,DWORD PTR [rsi]
   140026661:	call   0x14000bad0
   140026666:	mov    ebx,eax
   140026668:	test   eax,eax
   14002666a:	js     0x1400266d1
   14002666c:	mov    edx,ecx
   14002666e:	lea    r8,[rbp+0x68]
   140026672:	mov    ecx,DWORD PTR [rbp+0x68]
   140026675:	call   0x14000bad0
   14002667a:	mov    ebx,eax
   14002667c:	test   eax,eax
   14002667e:	js     0x1400266d1
   140026680:	mov    edx,DWORD PTR [rsi+0x10]
   140026683:	lea    r8,[rbp+0x68]
   140026687:	mov    ecx,DWORD PTR [rbp+0x68]
   14002668a:	call   0x14000bad0
   14002668f:	mov    ebx,eax
   140026691:	test   eax,eax
   140026693:	js     0x1400266d1
   140026695:	mov    ecx,DWORD PTR [rbp+0x68]
   140026698:	lea    r8,[rbp+0x68]
   14002669c:	mov    edx,0x4
   1400266a1:	call   0x14000bad0
   1400266a6:	mov    ebx,eax
   1400266a8:	test   eax,eax
   1400266aa:	js     0x1400266d1
   1400266ac:	mov    edx,DWORD PTR [rsi+0x20]
   1400266af:	lea    r8,[rbp+0x68]
   1400266b3:	mov    ecx,DWORD PTR [rbp+0x68]
   1400266b6:	call   0x14000bad0
   1400266bb:	mov    ebx,eax
   1400266bd:	mov    eax,DWORD PTR [rbp+0x144]
   1400266c3:	test   ebx,ebx
   1400266c5:	cmovns eax,DWORD PTR [rbp+0x68]
   1400266c9:	mov    DWORD PTR [rbp+0x144],eax
   1400266cf:	jmp    0x1400266d7
   1400266d1:	mov    eax,DWORD PTR [rbp+0x144]
   1400266d7:	test   ebx,ebx
   1400266d9:	js     0x14002684f
   1400266df:	mov    edi,eax
   1400266e1:	call   QWORD PTR [rip+0x16ad9]        # 0x14003d1c0
   1400266e7:	mov    r8d,edi
   1400266ea:	mov    edx,0x8
   1400266ef:	mov    rcx,rax
   1400266f2:	call   QWORD PTR [rip+0x16ae0]        # 0x14003d1d8
   1400266f8:	mov    r14,rax
   1400266fb:	test   rax,rax
   1400266fe:	jne    0x140026714
   140026700:	mov    r14d,DWORD PTR [rbp-0x78]
   140026704:	mov    ebx,0xc0000017
   140026709:	mov    edi,r14d
   14002670c:	mov    esi,r14d
   14002670f:	jmp    0x140026856
   140026714:	mov    QWORD PTR [rbp+0x98],rax
   14002671b:	lea    r8,[rbp+0x98]
   140026722:	mov    eax,DWORD PTR [rsi]
   140026724:	mov    edx,0x4
   140026729:	mov    rcx,r14
   14002672c:	mov    DWORD PTR [r14],eax
   14002672f:	call   0x14000baf0
   140026734:	mov    ebx,eax
   140026736:	test   eax,eax
   140026738:	js     0x14002682f
   14002673e:	mov    r8d,DWORD PTR [rsi]
   140026741:	mov    rdx,QWORD PTR [rsi+0x8]
   140026745:	mov    rcx,QWORD PTR [rbp+0x98]
   14002674c:	call   0x1400156f2
   140026751:	mov    edx,DWORD PTR [rsi]
   140026753:	lea    r8,[rbp+0x98]
   14002675a:	mov    rcx,QWORD PTR [rbp+0x98]
   140026761:	call   0x14000baf0
   140026766:	mov    ebx,eax
   140026768:	test   eax,eax
   14002676a:	js     0x14002682f
   140026770:	mov    rcx,QWORD PTR [rbp+0x98]
   140026777:	lea    r8,[rbp+0x98]
   14002677e:	mov    eax,DWORD PTR [rsi+0x10]
   140026781:	mov    edx,0x4
   140026786:	mov    DWORD PTR [rcx],eax
   140026788:	call   0x14000baf0
   14002678d:	mov    ebx,eax
   14002678f:	test   eax,eax
   140026791:	js     0x14002682f
   140026797:	mov    r8d,DWORD PTR [rsi+0x10]
   14002679b:	mov    rdx,QWORD PTR [rsi+0x18]
   14002679f:	mov    rcx,QWORD PTR [rbp+0x98]
   1400267a6:	call   0x1400156f2
   1400267ab:	mov    edx,DWORD PTR [rsi+0x10]
   1400267ae:	lea    r8,[rbp+0x98]
   1400267b5:	mov    rcx,QWORD PTR [rbp+0x98]
   1400267bc:	call   0x14000baf0
   1400267c1:	mov    ebx,eax
   1400267c3:	test   eax,eax
   1400267c5:	js     0x14002682f
   1400267c7:	mov    rcx,QWORD PTR [rbp+0x98]
   1400267ce:	lea    r8,[rbp+0x98]
   1400267d5:	mov    eax,DWORD PTR [rsi+0x20]
   1400267d8:	mov    edx,0x4
   1400267dd:	mov    DWORD PTR [rcx],eax
   1400267df:	call   0x14000baf0
   1400267e4:	mov    ebx,eax
   1400267e6:	test   eax,eax
   1400267e8:	js     0x14002682f
   1400267ea:	mov    r8d,DWORD PTR [rsi+0x20]
   1400267ee:	mov    rdx,QWORD PTR [rsi+0x28]
   1400267f2:	mov    rcx,QWORD PTR [rbp+0x98]
   1400267f9:	call   0x1400156f2
   1400267fe:	mov    edx,DWORD PTR [rsi+0x20]
   140026801:	lea    r8,[rbp+0x98]
   140026808:	mov    rcx,QWORD PTR [rbp+0x98]
   14002680f:	call   0x14000baf0
   140026814:	mov    ebx,eax
   140026816:	test   eax,eax
   140026818:	js     0x14002682f
   14002681a:	mov    rdi,QWORD PTR [rsp+0x60]
   14002681f:	mov    rsi,r14
   140026822:	mov    QWORD PTR [rbp-0x30],r14
   140026826:	mov    r14d,DWORD PTR [rbp+0x144]
   14002682d:	jmp    0x140026856
   14002682f:	call   QWORD PTR [rip+0x1698b]        # 0x14003d1c0
   140026835:	mov    r8,r14
   140026838:	xor    edx,edx
   14002683a:	mov    rcx,rax
   14002683d:	call   QWORD PTR [rip+0x1699d]        # 0x14003d1e0
   140026843:	mov    r14d,DWORD PTR [rbp-0x78]
   140026847:	mov    edi,r14d
   14002684a:	mov    esi,r14d
   14002684d:	jmp    0x140026856
   14002684f:	mov    r14d,DWORD PTR [rbp-0x78]
   140026853:	mov    esi,r14d
   140026856:	or     ebx,0x10000000
   14002685c:	jl     0x140027890
   140026862:	xor    r9d,r9d
   140026865:	mov    DWORD PTR [rbp+0x1ac],0x8
   14002686f:	mov    QWORD PTR [rbp+0x590],r9
   140026876:	mov    r10d,r9d
   140026879:	mov    DWORD PTR [rbp+0x2cc],r9d
   140026880:	mov    r11d,r9d
   140026883:	mov    QWORD PTR [rbp+0x5a0],r9
   14002688a:	mov    DWORD PTR [rbp+0x3b8],r9d
   140026891:	mov    edx,DWORD PTR [rbp+0x1a8]
   140026897:	lea    r8,[rbp+0x1ac]
   14002689e:	lea    ecx,[r9+0x8]
   1400268a2:	call   0x14000bad0
   1400268a7:	mov    ebx,eax
   1400268a9:	or     ebx,0x10000000
   1400268af:	jl     0x140026b2f
   1400268b5:	mov    eax,DWORD PTR [rbp+0x1ac]
   1400268bb:	lea    rcx,[rax+0x7]
   1400268bf:	and    ecx,0xfffffff8
   1400268c2:	cmp    ecx,eax
   1400268c4:	jae    0x1400268d3
   1400268c6:	mov    edi,DWORD PTR [rbp+0x1c0]
   1400268cc:	mov    ebx,0xc0000095
   1400268d1:	jmp    0x140026901
   1400268d3:	mov    DWORD PTR [rbp+0x1b8],ecx
   1400268d9:	lea    r8,[rbp+0x1b8]
   1400268e0:	mov    edx,0x8
   1400268e5:	call   0x14000bad0
   1400268ea:	mov    edi,DWORD PTR [rbp+0x1c0]
   1400268f0:	test   eax,eax
   1400268f2:	mov    ebx,eax
   1400268f4:	cmovns edi,DWORD PTR [rbp+0x1b8]
   1400268fb:	mov    DWORD PTR [rbp+0x1c0],edi
   140026901:	test   ebx,ebx
   140026903:	js     0x140026b2c
   140026909:	cmp    QWORD PTR [rbp+0x40],r9
   14002690d:	je     0x140026b27
   140026913:	cmp    DWORD PTR [rbp+0x38],0x1
   140026917:	jbe    0x140026b27
   14002691d:	mov    rcx,QWORD PTR [rbp+0x40]
   140026921:	mov    QWORD PTR [rbp+0x100],rcx
   140026928:	mov    esi,DWORD PTR [rcx]
   14002692a:	lea    r8,[rbp+0x100]
   140026931:	mov    edx,0x4
   140026936:	call   0x14000baf0
   14002693b:	mov    ebx,eax
   14002693d:	test   eax,eax
   14002693f:	js     0x1400269b1
   140026941:	mov    rcx,QWORD PTR [rbp+0x100]
   140026948:	lea    r8,[rbp+0x100]
   14002694f:	mov    edx,esi
   140026951:	call   0x14000baf0
   140026956:	mov    ebx,eax
   140026958:	test   eax,eax
   14002695a:	js     0x1400269b1
   14002695c:	mov    rcx,QWORD PTR [rbp+0x100]
   140026963:	inc    r9d
   140026966:	cmp    r9d,0x1
   14002696a:	jb     0x140026928
   14002696c:	mov    r9d,DWORD PTR [rcx]
   14002696f:	lea    r8,[rbp+0x100]
   140026976:	mov    edx,0x4
   14002697b:	call   0x14000baf0
   140026980:	mov    ebx,eax
   140026982:	test   eax,eax
   140026984:	js     0x1400269b1
   140026986:	mov    rax,QWORD PTR [rbp+0x100]
   14002698d:	test   r9d,r9d
   140026990:	mov    r10d,r9d
   140026993:	mov    DWORD PTR [rbp+0x2cc],r9d
   14002699a:	cmove  rax,r11
   14002699e:	mov    r9,r11
   1400269a1:	mov    QWORD PTR [rbp+0x100],rax
   1400269a8:	mov    QWORD PTR [rbp+0x590],rax
   1400269af:	jmp    0x1400269b4
   1400269b1:	xor    r9d,r9d
   1400269b4:	test   ebx,ebx
   1400269b6:	js     0x1400269c3
   1400269b8:	cmp    DWORD PTR [rbp+0x38],0x2
   1400269bc:	ja     0x1400269cf
   1400269be:	mov    ebx,0xc000000d
   1400269c3:	mov    rsi,QWORD PTR [rbp-0x30]
   1400269c7:	mov    rdi,r11
   1400269ca:	jmp    0x140026b2f
   1400269cf:	mov    rcx,QWORD PTR [rbp+0x40]
   1400269d3:	mov    QWORD PTR [rbp+0x120],rcx
   1400269da:	mov    esi,DWORD PTR [rcx]
   1400269dc:	lea    r8,[rbp+0x120]
   1400269e3:	mov    edx,0x4
   1400269e8:	call   0x14000baf0
   1400269ed:	mov    ebx,eax
   1400269ef:	test   eax,eax
   1400269f1:	js     0x140026a66
   1400269f3:	mov    rcx,QWORD PTR [rbp+0x120]
   1400269fa:	lea    r8,[rbp+0x120]
   140026a01:	mov    edx,esi
   140026a03:	call   0x14000baf0
   140026a08:	mov    ebx,eax
   140026a0a:	test   eax,eax
   140026a0c:	js     0x140026a66
   140026a0e:	mov    rcx,QWORD PTR [rbp+0x120]
   140026a15:	inc    r9d
   140026a18:	cmp    r9d,0x2
   140026a1c:	jb     0x1400269da
   140026a1e:	mov    r9d,DWORD PTR [rcx]
   140026a21:	lea    r8,[rbp+0x120]
   140026a28:	mov    edx,0x4
   140026a2d:	call   0x14000baf0
   140026a32:	mov    ebx,eax
   140026a34:	test   eax,eax
   140026a36:	js     0x140026a66
   140026a38:	mov    rax,QWORD PTR [rbp+0x120]
   140026a3f:	test   r9d,r9d
   140026a42:	mov    r11d,r9d
   140026a45:	mov    DWORD PTR [rbp+0x3b8],r9d
   140026a4c:	mov    r9d,0x0
   140026a52:	cmove  rax,r9
   140026a56:	mov    QWORD PTR [rbp+0x120],rax
   140026a5d:	mov    QWORD PTR [rbp+0x5a0],rax
   140026a64:	jmp    0x140026a69
   140026a66:	xor    r9d,r9d
   140026a69:	test   ebx,ebx
   140026a6b:	js     0x140026b1c
   140026a71:	lea    r8,[rbp+0x64]
   140026a75:	mov    DWORD PTR [rbp+0x64],0x4
   140026a7c:	mov    edx,edi
   140026a7e:	mov    ecx,0x4
   140026a83:	call   0x14000bad0
   140026a88:	mov    ebx,eax
   140026a8a:	test   eax,eax
   140026a8c:	js     0x140026af3
   140026a8e:	mov    edx,ecx
   140026a90:	lea    r8,[rbp+0x64]
   140026a94:	mov    ecx,DWORD PTR [rbp+0x64]
   140026a97:	call   0x14000bad0
   140026a9c:	mov    ebx,eax
   140026a9e:	test   eax,eax
   140026aa0:	js     0x140026af3
   140026aa2:	mov    ecx,DWORD PTR [rbp+0x64]
   140026aa5:	lea    r8,[rbp+0x64]
   140026aa9:	mov    edx,r10d
   140026aac:	call   0x14000bad0
   140026ab1:	mov    ebx,eax
   140026ab3:	test   eax,eax
   140026ab5:	js     0x140026af3
   140026ab7:	mov    ecx,DWORD PTR [rbp+0x64]
   140026aba:	lea    r8,[rbp+0x64]
   140026abe:	mov    edx,0x4
   140026ac3:	call   0x14000bad0
   140026ac8:	mov    ebx,eax
   140026aca:	test   eax,eax
   140026acc:	js     0x140026af3
   140026ace:	mov    ecx,DWORD PTR [rbp+0x64]
   140026ad1:	lea    r8,[rbp+0x64]
   140026ad5:	mov    edx,r11d
   140026ad8:	call   0x14000bad0
   140026add:	mov    ebx,eax
   140026adf:	mov    eax,DWORD PTR [rbp+0x22c]
   140026ae5:	test   ebx,ebx
   140026ae7:	cmovns eax,DWORD PTR [rbp+0x64]
   140026aeb:	mov    DWORD PTR [rbp+0x22c],eax
   140026af1:	jmp    0x140026af9
   140026af3:	mov    eax,DWORD PTR [rbp+0x22c]
   140026af9:	test   ebx,ebx
   140026afb:	js     0x140026b1c
   140026afd:	mov    rdi,QWORD PTR [rsp+0x60]
   140026b02:	cmp    eax,0x400000
   140026b07:	jbe    0x140026b13
   140026b09:	mov    ebx,0x8000ffff
   140026b0e:	jmp    0x140027890
   140026b13:	mov    rsi,QWORD PTR [rbp-0x30]
   140026b17:	mov    DWORD PTR [rbp+0x78],eax
   140026b1a:	jmp    0x140026b2f
   140026b1c:	mov    rdi,QWORD PTR [rsp+0x60]
   140026b21:	mov    rsi,QWORD PTR [rbp-0x30]
   140026b25:	jmp    0x140026b2f
   140026b27:	mov    ebx,0xc000000d
   140026b2c:	mov    rdi,r9
   140026b2f:	test   ebx,ebx
   140026b31:	js     0x140027890
   140026b37:	mov    edi,DWORD PTR [rbp+0x78]
   140026b3a:	mov    ebx,r9d
   140026b3d:	call   QWORD PTR [rip+0x1667d]        # 0x14003d1c0
   140026b43:	mov    r8d,edi
   140026b46:	mov    edx,0x8
   140026b4b:	mov    rcx,rax
   140026b4e:	call   QWORD PTR [rip+0x16684]        # 0x14003d1d8
   140026b54:	test   rax,rax
   140026b57:	jne    0x140026b65
   140026b59:	mov    rdi,QWORD PTR [rsp+0x60]
   140026b5e:	mov    ebx,0xc0000017
   140026b63:	jmp    0x140026b6d
   140026b65:	mov    rdi,rax
   140026b68:	mov    QWORD PTR [rsp+0x60],rax
   140026b6d:	or     ebx,0x10000000
   140026b73:	jl     0x140027890
   140026b79:	test   rsi,rsi
   140026b7c:	je     0x14002788b
   140026b82:	test   rdi,rdi
   140026b85:	je     0x14002788b
   140026b8b:	lea    r8,[rbp+0x5b0]
   140026b92:	mov    ecx,0x1
   140026b97:	lea    rdx,[rip+0x17f52]        # 0x14003eaf0
   140026b9e:	call   QWORD PTR [rip+0x1669c]        # 0x14003d240
   140026ba4:	test   eax,eax
   140026ba6:	jne    0x140026bfe
   140026ba8:	call   QWORD PTR [rip+0x165ba]        # 0x14003d168
   140026bae:	mov    ebx,eax
   140026bb0:	test   eax,eax
   140026bb2:	jle    0x140026bcd
   140026bb4:	movzx  ebx,ax
   140026bb7:	or     ebx,0x80070000
   140026bbd:	jmp    0x140026bcd
   140026bbf:	movzx  ebx,ax
   140026bc2:	or     ebx,0x80070000
   140026bc8:	mov    rdi,QWORD PTR [rsp+0x60]
   140026bcd:	mov    edx,DWORD PTR [rbp+0x78]
   140026bd0:	xor    r14d,r14d
   140026bd3:	test   ebx,ebx
   140026bd5:	js     0x140026c8c
   140026bdb:	mov    ebx,0x80004005
   140026be0:	test   ebx,ebx
   140026be2:	js     0x140027893
   140026be8:	mov    rsi,r14
   140026beb:	cmp    edx,0x4
   140026bee:	jae    0x140026ca2
   140026bf4:	mov    ebx,0xc000003e
   140026bf9:	jmp    0x14002702a
   140026bfe:	mov    rcx,QWORD PTR [rbp+0x5b0]
   140026c05:	lea    rdx,[rip+0x17ec4]        # 0x14003ead0
   140026c0c:	call   QWORD PTR [rip+0x16616]        # 0x14003d228
   140026c12:	mov    rdi,rax
   140026c15:	test   rax,rax
   140026c18:	jne    0x140026c28
   140026c1a:	call   QWORD PTR [rip+0x16548]        # 0x14003d168
   140026c20:	mov    ebx,eax
   140026c22:	test   eax,eax
   140026c24:	jle    0x140026bc8
   140026c26:	jmp    0x140026bbf
   140026c28:	mov    rax,QWORD PTR [rsp+0x60]
   140026c2d:	mov    rcx,rdi
   140026c30:	mov    QWORD PTR [rbp+0x6a0],rax
   140026c37:	mov    eax,DWORD PTR [rbp+0x78]
   140026c3a:	mov    DWORD PTR [rbp+0x6a8],r14d
   140026c41:	xor    r14d,r14d
   140026c44:	mov    DWORD PTR [rbp+0x6ac],eax
   140026c4a:	mov    QWORD PTR [rbp+0x698],rsi
   140026c51:	mov    DWORD PTR [rbp+0x6b0],r14d
   140026c58:	call   QWORD PTR [rip+0x16aca]        # 0x14003d728
   140026c5e:	lea    r8d,[r14+0x20]
   140026c62:	xor    r9d,r9d
   140026c65:	lea    rdx,[rbp+0x698]
   140026c6c:	lea    ecx,[r8+0x66]
   140026c70:	call   rdi
   140026c72:	mov    edx,DWORD PTR [rbp+0x78]
   140026c75:	mov    ebx,eax
   140026c77:	mov    rdi,QWORD PTR [rsp+0x60]
   140026c7c:	or     ebx,0x10000000
   140026c82:	cmovns edx,DWORD PTR [rbp+0x6ac]
   140026c89:	mov    DWORD PTR [rbp+0x78],edx
   140026c8c:	cmp    ebx,0xd0000023
   140026c92:	jne    0x140026be0
   140026c98:	mov    ebx,0x8007007a
   140026c9d:	jmp    0x140027893
   140026ca2:	mov    r13d,DWORD PTR [rdi]
   140026ca5:	lea    rcx,[rdi+0x4]
   140026ca9:	cmp    rcx,rdi
   140026cac:	jb     0x14002700b
   140026cb2:	lea    eax,[rdx-0x4]
   140026cb5:	cmp    eax,r13d
   140026cb8:	jae    0x140026cc8
   140026cba:	mov    r13,QWORD PTR [rbp-0x80]
   140026cbe:	mov    ebx,0xc000003e
   140026cc3:	jmp    0x14002702a
   140026cc8:	lea    r8,[rcx+r13*1]
   140026ccc:	mov    QWORD PTR [rbp+0xc0],r8
   140026cd3:	cmp    r8,rcx
   140026cd6:	jb     0x14002700b
   140026cdc:	lea    edi,[r13+0x4]
   140026ce0:	cmp    edi,0x4
   140026ce3:	jb     0x140027000
   140026ce9:	mov    eax,edx
   140026ceb:	sub    eax,edi
   140026ced:	cmp    eax,0x4
   140026cf0:	jae    0x140026d00
   140026cf2:	mov    r13,QWORD PTR [rbp-0x80]
   140026cf6:	mov    ebx,0xc000003e
   140026cfb:	jmp    0x140027025
   140026d00:	mov    r12d,DWORD PTR [r8]
   140026d03:	lea    rcx,[r8+0x4]
   140026d07:	cmp    rcx,r8
   140026d0a:	jb     0x140026ff9
   140026d10:	lea    r8d,[rdi+0x4]
   140026d14:	cmp    r8d,edi
   140026d17:	jb     0x140026ff9
   140026d1d:	mov    eax,edx
   140026d1f:	sub    eax,r8d
   140026d22:	cmp    eax,r12d
   140026d25:	jb     0x140027019
   140026d2b:	lea    r9,[r12+rcx*1]
   140026d2f:	cmp    r9,rcx
   140026d32:	jb     0x140026ff9
   140026d38:	lea    edi,[r12+r8*1]
   140026d3c:	cmp    edi,r8d
   140026d3f:	jb     0x140026ff9
   140026d45:	mov    eax,edx
   140026d47:	sub    eax,edi
   140026d49:	cmp    eax,0x4
   140026d4c:	jb     0x140027019
   140026d52:	mov    r14d,DWORD PTR [r9]
   140026d55:	lea    rax,[r9+0x4]
   140026d59:	mov    QWORD PTR [rbp-0x48],rax
   140026d5d:	cmp    rax,r9
   140026d60:	jb     0x140026fef
   140026d66:	lea    ecx,[rdi+0x4]
   140026d69:	cmp    ecx,edi
   140026d6b:	jb     0x140026fef
   140026d71:	mov    eax,edx
   140026d73:	sub    eax,ecx
   140026d75:	cmp    eax,r14d
   140026d78:	jb     0x140027016
   140026d7e:	lea    edi,[r14+rcx*1]
   140026d82:	cmp    edi,ecx
   140026d84:	jb     0x140026fef
   140026d8a:	cmp    edx,edi
   140026d8c:	jne    0x140027016
   140026d92:	lea    ecx,[r14+r12*1]
   140026d96:	mov    eax,edx
   140026d98:	add    ecx,r13d
   140026d9b:	add    rcx,0xc
   140026d9f:	cmp    rcx,rax
   140026da2:	jne    0x140027016
   140026da8:	call   QWORD PTR [rip+0x16412]        # 0x14003d1c0
   140026dae:	mov    edx,0x8
   140026db3:	mov    rcx,rax
   140026db6:	lea    r8d,[rdx+0x28]
   140026dba:	call   QWORD PTR [rip+0x16418]        # 0x14003d1d8
   140026dc0:	mov    rdi,rax
   140026dc3:	test   rax,rax
   140026dc6:	jne    0x140026dd5
   140026dc8:	mov    ebx,0xc0000017
   140026dcd:	xor    r14d,r14d
   140026dd0:	jmp    0x140026f59
   140026dd5:	mov    rax,QWORD PTR [rsp+0x60]
   140026dda:	xor    edx,edx
   140026ddc:	mov    ebx,edx
   140026dde:	add    rax,0x4
   140026de2:	je     0x140026e25
   140026de4:	mov    DWORD PTR [rdi],r13d
   140026de7:	call   QWORD PTR [rip+0x163d3]        # 0x14003d1c0
   140026ded:	mov    edx,0x8
   140026df2:	mov    rcx,rax
   140026df5:	mov    r8,r13
   140026df8:	call   QWORD PTR [rip+0x163da]        # 0x14003d1d8
   140026dfe:	mov    rcx,rax
   140026e01:	test   rax,rax
   140026e04:	je     0x140026ec2
   140026e0a:	mov    rdx,QWORD PTR [rsp+0x60]
   140026e0f:	mov    r8,r13
   140026e12:	mov    QWORD PTR [rdi+0x8],rax
   140026e16:	add    rdx,0x4
   140026e1a:	xor    eax,eax
   140026e1c:	call   0x1400156f2
   140026e21:	xor    edx,edx
   140026e23:	jmp    0x140026e2b
   140026e25:	mov    DWORD PTR [rdi],edx
   140026e27:	mov    QWORD PTR [rdi+0x8],rdx
   140026e2b:	mov    r13,QWORD PTR [rbp+0xc0]
   140026e32:	add    r13,0x4
   140026e36:	je     0x140026e70
   140026e38:	mov    DWORD PTR [rdi+0x10],r12d
   140026e3c:	call   QWORD PTR [rip+0x1637e]        # 0x14003d1c0
   140026e42:	mov    edx,0x8
   140026e47:	mov    rcx,rax
   140026e4a:	mov    r8,r12
   140026e4d:	call   QWORD PTR [rip+0x16385]        # 0x14003d1d8
   140026e53:	test   rax,rax
   140026e56:	je     0x140026ec2
   140026e58:	xor    ecx,ecx
   140026e5a:	mov    QWORD PTR [rdi+0x18],rax
   140026e5e:	mov    ebx,ecx
   140026e60:	mov    r8,r12
   140026e63:	mov    rcx,rax
   140026e66:	mov    rdx,r13
   140026e69:	call   0x1400156f2
   140026e6e:	jmp    0x140026e77
   140026e70:	mov    DWORD PTR [rdi+0x10],edx
   140026e73:	mov    QWORD PTR [rdi+0x18],rdx
   140026e77:	mov    r12,QWORD PTR [rbp-0x48]
   140026e7b:	test   r12,r12
   140026e7e:	je     0x140026f4b
   140026e84:	mov    DWORD PTR [rdi+0x20],r14d
   140026e88:	call   QWORD PTR [rip+0x16332]        # 0x14003d1c0
   140026e8e:	mov    r8,r14
   140026e91:	mov    edx,0x8
   140026e96:	mov    rcx,rax
   140026e99:	call   QWORD PTR [rip+0x16339]        # 0x14003d1d8
   140026e9f:	test   rax,rax
   140026ea2:	je     0x140026ec2
   140026ea4:	xor    ecx,ecx
   140026ea6:	mov    QWORD PTR [rdi+0x28],rax
   140026eaa:	mov    ebx,ecx
   140026eac:	mov    r8,r14
   140026eaf:	mov    rcx,rax
   140026eb2:	mov    rdx,r12
   140026eb5:	call   0x1400156f2
   140026eba:	xor    r14d,r14d
   140026ebd:	jmp    0x140026f56
   140026ec2:	mov    ebx,0xc0000017
   140026ec7:	mov    r14,QWORD PTR [rdi+0x8]
   140026ecb:	test   r14,r14
   140026ece:	je     0x140026eed
   140026ed0:	call   QWORD PTR [rip+0x162ea]        # 0x14003d1c0
   140026ed6:	mov    r8,r14
   140026ed9:	xor    edx,edx
   140026edb:	mov    rcx,rax
   140026ede:	call   QWORD PTR [rip+0x162fc]        # 0x14003d1e0
   140026ee4:	xor    r12d,r12d
   140026ee7:	mov    QWORD PTR [rdi+0x8],r12
   140026eeb:	jmp    0x140026ef0
   140026eed:	xor    r12d,r12d
   140026ef0:	mov    r14,QWORD PTR [rdi+0x18]
   140026ef4:	test   r14,r14
   140026ef7:	je     0x140026f11
   140026ef9:	call   QWORD PTR [rip+0x162c1]        # 0x14003d1c0
   140026eff:	mov    r8,r14
   140026f02:	xor    edx,edx
   140026f04:	mov    rcx,rax
   140026f07:	call   QWORD PTR [rip+0x162d3]        # 0x14003d1e0
   140026f0d:	mov    QWORD PTR [rdi+0x18],r12
   140026f11:	mov    r14,QWORD PTR [rdi+0x28]
   140026f15:	test   r14,r14
   140026f18:	je     0x140026f35
   140026f1a:	call   QWORD PTR [rip+0x162a0]        # 0x14003d1c0
   140026f20:	mov    r8,r14
   140026f23:	xor    edx,edx
   140026f25:	mov    rcx,rax
   140026f28:	call   QWORD PTR [rip+0x162b2]        # 0x14003d1e0
   140026f2e:	xor    r14d,r14d
   140026f31:	mov    QWORD PTR [rdi+0x28],r14
   140026f35:	call   QWORD PTR [rip+0x16285]        # 0x14003d1c0
   140026f3b:	mov    r8,rdi
   140026f3e:	xor    edx,edx
   140026f40:	mov    rcx,rax
   140026f43:	call   QWORD PTR [rip+0x16297]        # 0x14003d1e0
   140026f49:	jmp    0x140026f59
   140026f4b:	xor    r14d,r14d
   140026f4e:	mov    DWORD PTR [rdi+0x20],r14d
   140026f52:	mov    QWORD PTR [rdi+0x28],r14
   140026f56:	mov    rsi,rdi
   140026f59:	test   ebx,ebx
   140026f5b:	js     0x140026f6d
   140026f5d:	mov    r12,QWORD PTR [rbp-0x60]
   140026f61:	mov    r13,rsi
   140026f64:	mov    QWORD PTR [rbp-0x80],rsi
   140026f68:	jmp    0x140027025
   140026f6d:	test   rsi,rsi
   140026f70:	je     0x14002701e
   140026f76:	mov    rdi,QWORD PTR [rsi+0x8]
   140026f7a:	test   rdi,rdi
   140026f7d:	je     0x140026f97
   140026f7f:	call   QWORD PTR [rip+0x1623b]        # 0x14003d1c0
   140026f85:	mov    r8,rdi
   140026f88:	xor    edx,edx
   140026f8a:	mov    rcx,rax
   140026f8d:	call   QWORD PTR [rip+0x1624d]        # 0x14003d1e0
   140026f93:	mov    QWORD PTR [rsi+0x8],r14
   140026f97:	mov    rdi,QWORD PTR [rsi+0x18]
   140026f9b:	test   rdi,rdi
   140026f9e:	je     0x140026fb8
   140026fa0:	call   QWORD PTR [rip+0x1621a]        # 0x14003d1c0
   140026fa6:	mov    r8,rdi
   140026fa9:	xor    edx,edx
   140026fab:	mov    rcx,rax
   140026fae:	call   QWORD PTR [rip+0x1622c]        # 0x14003d1e0
   140026fb4:	mov    QWORD PTR [rsi+0x18],r14
   140026fb8:	mov    rdi,QWORD PTR [rsi+0x28]
   140026fbc:	test   rdi,rdi
   140026fbf:	je     0x140026fd9
   140026fc1:	call   QWORD PTR [rip+0x161f9]        # 0x14003d1c0
   140026fc7:	mov    r8,rdi
   140026fca:	xor    edx,edx
   140026fcc:	mov    rcx,rax
   140026fcf:	call   QWORD PTR [rip+0x1620b]        # 0x14003d1e0
   140026fd5:	mov    QWORD PTR [rsi+0x28],r14
   140026fd9:	call   QWORD PTR [rip+0x161e1]        # 0x14003d1c0
   140026fdf:	mov    r8,rsi
   140026fe2:	xor    edx,edx
   140026fe4:	mov    rcx,rax
   140026fe7:	call   QWORD PTR [rip+0x161f3]        # 0x14003d1e0
   140026fed:	jmp    0x14002701e
   140026fef:	mov    ebx,0xc0000095
   140026ff4:	xor    r14d,r14d
   140026ff7:	jmp    0x14002701e
   140026ff9:	mov    ebx,0xc0000095
   140026ffe:	jmp    0x14002701e
   140027000:	mov    r13,QWORD PTR [rbp-0x80]
   140027004:	mov    ebx,0xc0000095
   140027009:	jmp    0x140027025
   14002700b:	mov    r13,QWORD PTR [rbp-0x80]
   14002700f:	mov    ebx,0xc0000095
   140027014:	jmp    0x14002702a
   140027016:	xor    r14d,r14d
   140027019:	mov    ebx,0xc000003e
   14002701e:	mov    r13,QWORD PTR [rbp-0x80]
   140027022:	mov    r12,r13
   140027025:	mov    rdi,QWORD PTR [rsp+0x60]
   14002702a:	or     ebx,0x10000000
   140027030:	jl     0x140027893
   140027036:	mov    QWORD PTR [rbp+0x278],r14
   14002703d:	mov    ebx,r14d
   140027040:	mov    DWORD PTR [rsp+0x78],ebx
   140027044:	mov    rdi,r14
   140027047:	mov    QWORD PTR [rbp+0x5c0],r14
   14002704e:	test   r13,r13
   140027051:	jne    0x14002705d
   140027053:	mov    ebx,0xc000000d
   140027058:	jmp    0x1400275e8
   14002705d:	mov    r12,QWORD PTR [r13+0x8]
   140027061:	mov    QWORD PTR [rbp-0x48],r12
   140027065:	test   r12,r12
   140027068:	jne    0x140027074
   14002706a:	mov    ebx,0xc000000d
   14002706f:	jmp    0x1400275e4
   140027074:	mov    eax,DWORD PTR [r13+0x0]
   140027078:	test   eax,eax
   14002707a:	jne    0x140027086
   14002707c:	mov    ebx,0xc000000d
   140027081:	jmp    0x1400275e4
   140027086:	mov    rsi,rax
   140027089:	test   eax,eax
   14002708b:	je     0x1400275bf
   140027091:	add    rsi,0xfffffffffffffff8
   140027095:	mov    rcx,rsi
   140027098:	mov    QWORD PTR [rbp+0xc0],rsi
   14002709f:	call   0x14000f134
   1400270a4:	mov    QWORD PTR [rbp+0xb0],rax
   1400270ab:	mov    r14,rax
   1400270ae:	test   rax,rax
   1400270b1:	je     0x1400275b5
   1400270b7:	xor    ecx,ecx
   1400270b9:	xor    r10b,r10b
   1400270bc:	mov    rdx,rsi
   1400270bf:	mov    DWORD PTR [rsp+0x70],r10d
   1400270c4:	mov    DWORD PTR [rbp+0x4],ecx
   1400270c7:	mov    r9,r12
   1400270ca:	mov    r8,rax
   1400270cd:	mov    r13d,ecx
   1400270d0:	mov    edi,ecx
   1400270d2:	and    edx,0x7
   1400270d5:	je     0x140027197
   1400270db:	mov    DWORD PTR [rbp-0x24],0xffffffff
   1400270e2:	mov    r12d,ecx
   1400270e5:	test   edx,edx
   1400270e7:	jle    0x140027118
   1400270e9:	lea    r11d,[rcx+0x38]
   1400270ed:	movzx  eax,BYTE PTR [r9]
   1400270f1:	cmp    edi,0x4
   1400270f4:	jge    0x140027101
   1400270f6:	lea    ecx,[r11-0x20]
   1400270fa:	shl    eax,cl
   1400270fc:	or     r13d,eax
   1400270ff:	jmp    0x140027109
   140027101:	mov    ecx,r11d
   140027104:	shl    eax,cl
   140027106:	or     r12d,eax
   140027109:	inc    r9
   14002710c:	inc    edi
   14002710e:	sub    r11d,0x8
   140027112:	cmp    edi,edx
   140027114:	jl     0x1400270ed
   140027116:	xor    ecx,ecx
   140027118:	mov    edi,r13d
   14002711b:	mov    r11d,r12d
   14002711e:	xor    edi,0xdc90ac75
   140027124:	xor    r11d,0xe04bfdaa
   14002712b:	mov    DWORD PTR [rbp+0x4],edi
   14002712e:	mov    eax,ecx
   140027130:	mov    DWORD PTR [rbp-0x24],r11d
   140027134:	test   edx,edx
   140027136:	jle    0x14002715c
   140027138:	cmp    eax,0x4
   14002713b:	jge    0x140027145
   14002713d:	rol    edi,0x8
   140027140:	mov    BYTE PTR [r8],dil
   140027143:	jmp    0x14002714c
   140027145:	rol    r11d,0x8
   140027149:	mov    BYTE PTR [r8],r11b
   14002714c:	inc    r8
   14002714f:	inc    eax
   140027151:	cmp    eax,edx
   140027153:	jl     0x140027138
   140027155:	mov    edi,DWORD PTR [rbp+0x4]
   140027158:	mov    r11d,DWORD PTR [rbp-0x24]
   14002715c:	lea    eax,[rdx-0x4]
   14002715f:	test   eax,eax
   140027161:	jle    0x14002717b
   140027163:	mov    ecx,0x4
   140027168:	sub    ecx,eax
   14002716a:	shl    ecx,0x3
   14002716d:	shr    r11d,cl
   140027170:	shl    r11d,cl
   140027173:	mov    DWORD PTR [rbp-0x24],r11d
   140027177:	xor    ecx,ecx
   140027179:	jmp    0x1400271a1
   14002717b:	mov    DWORD PTR [rbp-0x24],ecx
   14002717e:	mov    r11d,ecx
   140027181:	test   eax,eax
   140027183:	jns    0x1400271a1
   140027185:	neg    eax
   140027187:	shl    eax,0x3
   14002718a:	mov    ecx,eax
   14002718c:	shr    edi,cl
   14002718e:	shl    edi,cl
   140027190:	mov    DWORD PTR [rbp+0x4],edi
   140027193:	xor    ecx,ecx
   140027195:	jmp    0x1400271a1
   140027197:	or     r12d,0xffffffff
   14002719b:	mov    DWORD PTR [rbp-0x24],ecx
   14002719e:	mov    r11d,ecx
   1400271a1:	mov    rax,rsi
   1400271a4:	shr    rax,0x3
   1400271a8:	test   rax,rax
   1400271ab:	je     0x1400274dd
   1400271b1:	lea    rsi,[r8+0x7]
   1400271b5:	mov    r14,rax
   1400271b8:	lea    rbx,[r9+0x2]
   1400271bc:	movzx  eax,BYTE PTR [rbx-0x1]
   1400271c0:	movzx  r10d,BYTE PTR [rbx-0x2]
   1400271c5:	movzx  r9d,BYTE PTR [rbx+0x2]
   1400271ca:	lea    rbx,[rbx+0x8]
   1400271ce:	shl    r10d,0x8
   1400271d2:	or     r10d,eax
   1400271d5:	shl    r9d,0x8
   1400271d9:	movzx  eax,BYTE PTR [rbx-0x8]
   1400271dd:	shl    r10d,0x8
   1400271e1:	or     r10d,eax
   1400271e4:	movzx  eax,BYTE PTR [rbx-0x7]
   1400271e8:	shl    r10d,0x8
   1400271ec:	or     r10d,eax
   1400271ef:	movzx  eax,BYTE PTR [rbx-0x5]
   1400271f3:	or     r9d,eax
   1400271f6:	xor    edi,r10d
   1400271f9:	movzx  eax,BYTE PTR [rbx-0x4]
   1400271fd:	shl    r9d,0x8
   140027201:	or     r9d,eax
   140027204:	movzx  eax,BYTE PTR [rbx-0x3]
   140027208:	shl    r9d,0x8
   14002720c:	or     r9d,eax
   14002720f:	xor    r11d,r9d
   140027212:	xor    r11d,edi
   140027215:	xor    r11d,0x58830298
   14002721c:	lea    eax,[r11+0x7b1e05f8]
   140027223:	rol    eax,0x5
   140027226:	imul   ecx,eax,0xf890
   14002722c:	mov    eax,r11d
   14002722f:	rol    eax,0xa
   140027232:	add    ecx,eax
   140027234:	xor    edi,ecx
   140027236:	lea    eax,[rdi-0x239d0770]
   14002723c:	ror    eax,0x9
   14002723f:	imul   ecx,eax,0x84e1
   140027245:	mov    eax,edi
   140027247:	rol    eax,0x2
   14002724a:	sub    ecx,eax
   14002724c:	xor    r11d,ecx
   14002724f:	lea    eax,[r11-0xf890]
   140027256:	imul   ecx,eax,0xfa08
   14002725c:	mov    eax,r11d
   14002725f:	shr    eax,0xd
   140027262:	sub    ecx,eax
   140027264:	xor    edi,ecx
   140027266:	mov    eax,edi
   140027268:	xor    eax,0x84e1
   14002726d:	rol    eax,0x6
   140027270:	imul   ecx,eax,0xdc62
   140027276:	mov    eax,edi
   140027278:	rol    eax,0x2
   14002727b:	sub    ecx,eax
   14002727d:	mov    eax,0xdc62f890
   140027282:	xor    r11d,ecx
   140027285:	mov    ecx,r11d
   140027288:	xor    ecx,0x84e1fa08
   14002728e:	sub    eax,ecx
   140027290:	xor    edi,eax
   140027292:	mov    eax,edi
   140027294:	mov    edx,edi
   140027296:	xor    eax,0xf890
   14002729b:	ror    edx,0x6
   14002729e:	imul   ecx,eax,0x84e1
   1400272a4:	xor    edx,ecx
   1400272a6:	xor    r11d,edx
   1400272a9:	lea    eax,[r11-0x239d0770]
   1400272b0:	ror    eax,0xf
   1400272b3:	imul   ecx,eax,0xfa08
   1400272b9:	mov    eax,r11d
   1400272bc:	rol    eax,0x2
   1400272bf:	add    ecx,eax
   1400272c1:	xor    edi,ecx
   1400272c3:	lea    eax,[rdi+0x7b1e05f8]
   1400272c9:	ror    eax,0xe
   1400272cc:	imul   ecx,eax,0xdc62
   1400272d2:	mov    eax,edi
   1400272d4:	rol    eax,0x8
   1400272d7:	sub    ecx,eax
   1400272d9:	xor    r11d,ecx
   1400272dc:	mov    eax,r11d
   1400272df:	xor    eax,0x84e1fa08
   1400272e4:	ror    eax,0xc
   1400272e7:	imul   ecx,eax,0xf890
   1400272ed:	mov    eax,r11d
   1400272f0:	ror    eax,0xa
   1400272f3:	xor    ecx,eax
   1400272f5:	xor    edi,ecx
   1400272f7:	mov    eax,edi
   1400272f9:	xor    eax,0xdc62
   1400272fe:	imul   ecx,eax,0x84e1
   140027304:	mov    eax,edi
   140027306:	shr    eax,0xa
   140027309:	xor    ecx,eax
   14002730b:	xor    r11d,ecx
   14002730e:	mov    eax,r11d
   140027311:	mov    r8d,r11d
   140027314:	not    eax
   140027316:	ror    eax,0x5
   140027319:	imul   eax,eax,0xdc62
   14002731f:	sub    eax,0x28c168f0
   140027324:	xor    edi,eax
   140027326:	xor    r8d,edi
   140027329:	xor    r8d,0x58830298
   140027330:	lea    eax,[r8-0x7b1e05f8]
   140027337:	rol    eax,0xb
   14002733a:	imul   ecx,eax,0xdc62
   140027340:	mov    eax,r8d
   140027343:	rol    eax,0xd
   140027346:	add    ecx,eax
   140027348:	xor    r11d,ecx
   14002734b:	mov    eax,r11d
   14002734e:	xor    eax,0x84e1fa08
   140027353:	ror    eax,0x5
   140027356:	imul   ecx,eax,0xf890
   14002735c:	mov    eax,r11d
   14002735f:	ror    eax,0xc
   140027362:	xor    ecx,eax
   140027364:	xor    r8d,ecx
   140027367:	lea    eax,[r8-0xf890]
   14002736e:	imul   ecx,eax,0x84e1
   140027374:	mov    eax,r8d
   140027377:	shr    eax,0x9
   14002737a:	sub    ecx,eax
   14002737c:	xor    r11d,ecx
   14002737f:	lea    eax,[r11+0x239c0d68]
   140027386:	xor    r8d,eax
   140027389:	lea    edi,[r8-0xdc62]
   140027390:	xor    edi,r11d
   140027393:	xor    edi,0x84e1fa08
   140027399:	lea    eax,[rdi+0x7b1e05f8]
   14002739f:	ror    eax,0x4
   1400273a2:	imul   ecx,eax,0xf890
   1400273a8:	mov    eax,edi
   1400273aa:	ror    eax,0xb
   1400273ad:	xor    ecx,eax
   1400273af:	mov    eax,0xdc62f890
   1400273b4:	xor    r8d,ecx
   1400273b7:	sub    eax,r8d
   1400273ba:	ror    eax,0x7
   1400273bd:	imul   ecx,eax,0x84e1
   1400273c3:	mov    eax,r8d
   1400273c6:	ror    eax,0x3
   1400273c9:	add    ecx,eax
   1400273cb:	xor    edi,ecx
   1400273cd:	mov    eax,edi
   1400273cf:	xor    eax,0xdc62f890
   1400273d4:	rol    eax,1
   1400273d6:	imul   ecx,eax,0xfa08
   1400273dc:	mov    eax,edi
   1400273de:	ror    eax,0x8
   1400273e1:	add    ecx,eax
   1400273e3:	xor    r8d,ecx
   1400273e6:	mov    eax,r8d
   1400273e9:	mov    edx,r8d
   1400273ec:	xor    eax,0xf890
   1400273f1:	ror    edx,1
   1400273f3:	imul   ecx,eax,0xdc62
   1400273f9:	add    edx,ecx
   1400273fb:	xor    edi,edx
   1400273fd:	mov    eax,edi
   1400273ff:	xor    eax,0xfa08
   140027404:	rol    eax,1
   140027406:	imul   ecx,eax,0xf890
   14002740c:	lea    rsi,[rsi+0x8]
   140027410:	mov    eax,edi
   140027412:	rol    eax,0x8
   140027415:	xor    ecx,eax
   140027417:	mov    eax,0x84e1fa08
   14002741c:	xor    r8d,ecx
   14002741f:	mov    ecx,r8d
   140027422:	xor    ecx,0xdc62f890
   140027428:	sub    eax,ecx
   14002742a:	xor    edi,eax
   14002742c:	lea    eax,[rdi+0x239d0770]
   140027432:	ror    eax,0x3
   140027435:	imul   ecx,eax,0xfa08
   14002743b:	mov    eax,edi
   14002743d:	ror    eax,0x2
   140027440:	xor    edi,r12d
   140027443:	mov    DWORD PTR [rbp-0x24],edi
   140027446:	mov    r12d,r9d
   140027449:	add    ecx,eax
   14002744b:	xor    ecx,r13d
   14002744e:	mov    r13d,r10d
   140027451:	xor    r8d,ecx
   140027454:	mov    DWORD PTR [rbp+0x4],r8d
   140027458:	mov    BYTE PTR [rsi-0xc],r8b
   14002745c:	movzx  eax,BYTE PTR [rbp-0x24]
   140027460:	ror    DWORD PTR [rbp+0x4],0x8
   140027464:	mov    BYTE PTR [rsi-0x8],al
   140027467:	ror    DWORD PTR [rbp-0x24],0x8
   14002746b:	movzx  eax,BYTE PTR [rbp+0x4]
   14002746f:	mov    BYTE PTR [rsi-0xd],al
   140027472:	movzx  eax,BYTE PTR [rbp-0x24]
   140027476:	ror    DWORD PTR [rbp+0x4],0x8
   14002747a:	mov    BYTE PTR [rsi-0x9],al
   14002747d:	ror    DWORD PTR [rbp-0x24],0x8
   140027481:	movzx  eax,BYTE PTR [rbp+0x4]
   140027485:	mov    BYTE PTR [rsi-0xe],al
   140027488:	ror    DWORD PTR [rbp+0x4],0x8
   14002748c:	movzx  eax,BYTE PTR [rbp-0x24]
   140027490:	mov    BYTE PTR [rsi-0xa],al
   140027493:	ror    DWORD PTR [rbp-0x24],0x8
   140027497:	movzx  eax,BYTE PTR [rbp+0x4]
   14002749b:	mov    BYTE PTR [rsi-0xf],al
   14002749e:	movzx  eax,BYTE PTR [rbp-0x24]
   1400274a2:	mov    BYTE PTR [rsi-0xb],al
   1400274a5:	mov    edi,DWORD PTR [rbp+0x4]
   1400274a8:	mov    r11d,DWORD PTR [rbp-0x24]
   1400274ac:	ror    edi,0x8
   1400274af:	ror    r11d,0x8
   1400274b3:	mov    DWORD PTR [rbp+0x4],edi
   1400274b6:	mov    DWORD PTR [rbp-0x24],r11d
   1400274ba:	sub    r14,0x1
   1400274be:	jne    0x1400271bc
   1400274c4:	mov    ebx,DWORD PTR [rsp+0x78]
   1400274c8:	xor    ecx,ecx
   1400274ca:	mov    rsi,QWORD PTR [rbp+0xc0]
   1400274d1:	mov    r14,QWORD PTR [rbp+0xb0]
   1400274d8:	mov    r10d,DWORD PTR [rsp+0x70]
   1400274dd:	test   rsi,rsi
   1400274e0:	je     0x140027577
   1400274e6:	cmp    rsi,0x20
   1400274ea:	jb     0x140027566
   1400274ec:	xor    eax,eax
   1400274ee:	mov    rdx,rsi
   1400274f1:	mov    ecx,eax
   1400274f3:	xorps  xmm1,xmm1
   1400274f6:	mov    rax,rsi
   1400274f9:	movdqa xmm2,xmm1
   1400274fd:	and    eax,0x1f
   140027500:	sub    rdx,rax
   140027503:	movdqu xmm0,XMMWORD PTR [rcx+r14*1]
   140027509:	pxor   xmm0,xmm1
   14002750d:	movdqa xmm1,xmm0
   140027511:	movdqu xmm0,XMMWORD PTR [rcx+r14*1+0x10]
   140027518:	add    rcx,0x20
   14002751c:	pxor   xmm0,xmm2
   140027520:	movdqa xmm2,xmm0
   140027524:	cmp    rcx,rdx
   140027527:	jb     0x140027503
   140027529:	pxor   xmm1,xmm0
   14002752d:	movdqa xmm0,xmm1
   140027531:	psrldq xmm0,0x8
   140027536:	pxor   xmm1,xmm0
   14002753a:	movdqa xmm0,xmm1
   14002753e:	psrldq xmm0,0x4
   140027543:	pxor   xmm1,xmm0
   140027547:	movdqa xmm0,xmm1
   14002754b:	psrldq xmm0,0x2
   140027550:	pxor   xmm1,xmm0
   140027554:	movdqa xmm0,xmm1
   140027558:	psrldq xmm0,0x1
   14002755d:	pxor   xmm1,xmm0
   140027561:	movd   r10d,xmm1
   140027566:	cmp    rcx,rsi
   140027569:	jae    0x140027577
   14002756b:	xor    r10b,BYTE PTR [rcx+r14*1]
   14002756f:	inc    rcx
   140027572:	cmp    rcx,rsi
   140027575:	jb     0x14002756b
   140027577:	mov    rcx,QWORD PTR [rbp-0x48]
   14002757b:	movzx  eax,r10b
   14002757f:	cmp    rax,QWORD PTR [rsi+rcx*1]
   140027583:	jne    0x1400275a9
   140027585:	mov    r13,QWORD PTR [rbp-0x80]
   140027589:	mov    r12,r14
   14002758c:	mov    QWORD PTR [rbp-0x60],r14
   140027590:	xor    r14d,r14d
   140027593:	mov    QWORD PTR [rbp+0x278],r14
   14002759a:	mov    QWORD PTR [rbp+0x5c0],rsi
   1400275a1:	mov    DWORD PTR [rbp+0xa4],esi
   1400275a7:	jmp    0x1400275e8
   1400275a9:	mov    rcx,r14
   1400275ac:	call   0x1400155d8
   1400275b1:	mov    r13,QWORD PTR [rbp-0x80]
   1400275b5:	mov    rdi,QWORD PTR [rbp+0x278]
   1400275bc:	xor    r14d,r14d
   1400275bf:	mov    ebx,0xc0000001
   1400275c4:	test   rdi,rdi
   1400275c7:	je     0x1400275e4
   1400275c9:	call   QWORD PTR [rip+0x15bf1]        # 0x14003d1c0
   1400275cf:	mov    r8,rdi
   1400275d2:	xor    edx,edx
   1400275d4:	mov    rcx,rax
   1400275d7:	call   QWORD PTR [rip+0x15c03]        # 0x14003d1e0
   1400275dd:	mov    QWORD PTR [rbp+0x278],r14
   1400275e4:	mov    r12,QWORD PTR [rbp-0x60]
   1400275e8:	or     ebx,0x10000000
   1400275ee:	jl     0x14002782f
   1400275f4:	cmp    DWORD PTR [rbp+0xa4],0x4
   1400275fb:	mov    DWORD PTR [rbp+0xa8],r14d
   140027602:	mov    QWORD PTR [rbp+0x288],r12
   140027609:	jae    0x140027615
   14002760b:	mov    ebx,0xc000003e
   140027610:	jmp    0x14002782b
   140027615:	mov    r9d,DWORD PTR [r12]
   140027619:	lea    r8,[rbp+0x288]
   140027620:	mov    edx,0x4
   140027625:	mov    DWORD PTR [rbp-0x68],r9d
   140027629:	mov    rcx,r12
   14002762c:	call   0x14000baf0
   140027631:	mov    ebx,eax
   140027633:	test   eax,eax
   140027635:	js     0x14002782b
   14002763b:	lea    r8,[rbp+0xa8]
   140027642:	xor    ecx,ecx
   140027644:	call   0x14000bad0
   140027649:	mov    ebx,eax
   14002764b:	test   eax,eax
   14002764d:	js     0x14002782b
   140027653:	mov    eax,DWORD PTR [rbp+0xa4]
   140027659:	mov    edi,DWORD PTR [rbp+0xa8]
   14002765f:	sub    eax,edi
   140027661:	cmp    eax,edx
   140027663:	jae    0x14002766f
   140027665:	mov    ebx,0xc000003e
   14002766a:	jmp    0x14002782b
   14002766f:	mov    rcx,QWORD PTR [rbp+0x288]
   140027676:	lea    r8,[rbp+0x288]
   14002767d:	mov    r14d,DWORD PTR [rcx]
   140027680:	call   0x14000baf0
   140027685:	mov    ebx,eax
   140027687:	test   eax,eax
   140027689:	js     0x140027828
   14002768f:	lea    r8,[rbp+0xa8]
   140027696:	mov    ecx,edi
   140027698:	call   0x14000bad0
   14002769d:	mov    ebx,eax
   14002769f:	test   eax,eax
   1400276a1:	js     0x140027828
   1400276a7:	mov    eax,DWORD PTR [rbp+0xa4]
   1400276ad:	mov    ecx,DWORD PTR [rbp+0xa8]
   1400276b3:	sub    eax,ecx
   1400276b5:	cmp    eax,r14d
   1400276b8:	jb     0x140027814
   1400276be:	lea    r8,[rbp+0xa8]
   1400276c5:	mov    edx,r14d
   1400276c8:	call   0x14000bad0
   1400276cd:	mov    ebx,eax
   1400276cf:	test   eax,eax
   1400276d1:	js     0x140027828
   1400276d7:	mov    edx,DWORD PTR [rbp+0xa4]
   1400276dd:	mov    rdi,QWORD PTR [rbp+0x288]
   1400276e4:	lea    rax,[r12+rdx*1]
   1400276e8:	lea    rcx,[rdi+r14*1]
   1400276ec:	cmp    rax,rcx
   1400276ef:	jb     0x140027814
   1400276f5:	mov    rax,r12
   1400276f8:	sub    rax,rdi
   1400276fb:	sub    rax,r14
   1400276fe:	add    rax,rdx
   140027701:	cmp    rax,0x8
   140027705:	jae    0x140027814
   14002770b:	xor    eax,eax
   14002770d:	mov    r12d,eax
   140027710:	mov    ebx,eax
   140027712:	mov    r13d,eax
   140027715:	test   rdi,rdi
   140027718:	je     0x1400277e5
   14002771e:	lea    r8,[rbp+0x5d0]
   140027725:	mov    edx,r14d
   140027728:	mov    rcx,rdi
   14002772b:	mov    r9,rdi
   14002772e:	call   0x14000baf0
   140027733:	mov    ebx,eax
   140027735:	test   eax,eax
   140027737:	js     0x140027836
   14002773d:	mov    r11,QWORD PTR [rbp+0x5d0]
   140027744:	cmp    rdi,r11
   140027747:	jae    0x1400277dc
   14002774d:	mov    r10d,DWORD PTR [rbp+0x430]
   140027754:	lea    r8,[rbp+0x5e0]
   14002775b:	mov    edx,0x4
   140027760:	mov    rcx,r9
   140027763:	call   0x14000baf0
   140027768:	mov    ebx,eax
   14002776a:	test   eax,eax
   14002776c:	js     0x140027836
   140027772:	cmp    QWORD PTR [rbp+0x5e0],r11
   140027779:	ja     0x14002781b
   14002777f:	mov    edx,DWORD PTR [r9]
   140027782:	lea    r8,[rbp+0x2d4]
   140027789:	mov    ecx,0x4
   14002778e:	call   0x14000bad0
   140027793:	test   eax,eax
   140027795:	mov    ebx,eax
   140027797:	cmovns r10d,DWORD PTR [rbp+0x2d4]
   14002779f:	mov    DWORD PTR [rbp+0x430],r10d
   1400277a6:	js     0x140027836
   1400277ac:	mov    edx,r10d
   1400277af:	lea    r8,[rbp+0x5f0]
   1400277b6:	mov    rcx,r9
   1400277b9:	call   0x14000baf0
   1400277be:	mov    ebx,eax
   1400277c0:	test   eax,eax
   1400277c2:	js     0x140027836
   1400277c4:	mov    r9,QWORD PTR [rbp+0x5f0]
   1400277cb:	cmp    r9,r11
   1400277ce:	ja     0x14002781b
   1400277d0:	inc    r13d
   1400277d3:	cmp    r9,r11
   1400277d6:	jb     0x140027754
   1400277dc:	cmp    r9,r11
   1400277df:	jne    0x14002781b
   1400277e1:	mov    r9d,DWORD PTR [rbp-0x68]
   1400277e5:	test   r14d,r14d
   1400277e8:	je     0x140027840
   1400277ea:	call   QWORD PTR [rip+0x159d0]        # 0x14003d1c0
   1400277f0:	mov    r8,r14
   1400277f3:	mov    edx,0x8
   1400277f8:	mov    rcx,rax
   1400277fb:	call   QWORD PTR [rip+0x159d7]        # 0x14003d1d8
   140027801:	mov    r9d,DWORD PTR [rbp-0x68]
   140027805:	mov    r12,rax
   140027808:	test   rax,rax
   14002780b:	jne    0x14002783c
   14002780d:	mov    ebx,0xc0000017
   140027812:	jmp    0x14002786c
   140027814:	mov    ebx,0xc000003e
   140027819:	jmp    0x140027828
   14002781b:	mov    ebx,0xc000000d
   140027820:	mov    r12,QWORD PTR [rbp-0x60]
   140027824:	mov    r13,QWORD PTR [rbp-0x80]
   140027828:	xor    r14d,r14d
   14002782b:	bts    ebx,0x1c
   14002782f:	mov    rdi,QWORD PTR [rsp+0x60]
   140027834:	jmp    0x140027893
   140027836:	mov    r9d,DWORD PTR [rbp-0x68]
   14002783a:	jmp    0x14002786c
   14002783c:	xor    eax,eax
   14002783e:	mov    ebx,eax
   140027840:	test   rdi,rdi
   140027843:	je     0x140027857
   140027845:	mov    r8,r14
   140027848:	mov    rdx,rdi
   14002784b:	mov    rcx,r12
   14002784e:	call   0x1400156f2
   140027853:	mov    r9d,DWORD PTR [rbp-0x68]
   140027857:	mov    QWORD PTR [rbp+0x198],r12
   14002785e:	mov    DWORD PTR [rbp+0x194],r14d
   140027865:	mov    DWORD PTR [rbp+0x190],r13d
   14002786c:	test   ebx,ebx
   14002786e:	js     0x140027820
   140027870:	mov    r13,QWORD PTR [rbp-0x80]
   140027874:	xor    r14d,r14d
   140027877:	mov    r12,QWORD PTR [rbp-0x60]
   14002787b:	cmp    r9d,DWORD PTR [rbp+0x190]
   140027882:	je     0x14002782b
   140027884:	mov    ebx,0xc000003e
   140027889:	jmp    0x14002782b
   14002788b:	mov    ebx,0x80070057
   140027890:	xor    r14d,r14d
   140027893:	mov    rsi,QWORD PTR [rbp+0x18]
   140027897:	test   rsi,rsi
   14002789a:	je     0x1400278b0
   14002789c:	call   QWORD PTR [rip+0x1591e]        # 0x14003d1c0
   1400278a2:	mov    r8,rsi
   1400278a5:	xor    edx,edx
   1400278a7:	mov    rcx,rax
   1400278aa:	call   QWORD PTR [rip+0x15930]        # 0x14003d1e0
   1400278b0:	mov    rsi,QWORD PTR [rbp+0x298]
   1400278b7:	test   rsi,rsi
   1400278ba:	je     0x140027943
   1400278c0:	mov    rdi,QWORD PTR [rsi+0x8]
   1400278c4:	test   rdi,rdi
   1400278c7:	je     0x1400278e1
   1400278c9:	call   QWORD PTR [rip+0x158f1]        # 0x14003d1c0
   1400278cf:	mov    r8,rdi
   1400278d2:	xor    edx,edx
   1400278d4:	mov    rcx,rax
   1400278d7:	call   QWORD PTR [rip+0x15903]        # 0x14003d1e0
   1400278dd:	mov    QWORD PTR [rsi+0x8],r14
   1400278e1:	mov    rdi,QWORD PTR [rsi+0x18]
   1400278e5:	test   rdi,rdi
   1400278e8:	je     0x140027902
   1400278ea:	call   QWORD PTR [rip+0x158d0]        # 0x14003d1c0
   1400278f0:	mov    r8,rdi
   1400278f3:	xor    edx,edx
   1400278f5:	mov    rcx,rax
   1400278f8:	call   QWORD PTR [rip+0x158e2]        # 0x14003d1e0
   1400278fe:	mov    QWORD PTR [rsi+0x18],r14
   140027902:	mov    rdi,QWORD PTR [rsi+0x28]
   140027906:	test   rdi,rdi
   140027909:	je     0x140027923
   14002790b:	call   QWORD PTR [rip+0x158af]        # 0x14003d1c0
   140027911:	mov    r8,rdi
   140027914:	xor    edx,edx
   140027916:	mov    rcx,rax
   140027919:	call   QWORD PTR [rip+0x158c1]        # 0x14003d1e0
   14002791f:	mov    QWORD PTR [rsi+0x28],r14
   140027923:	call   QWORD PTR [rip+0x15897]        # 0x14003d1c0
   140027929:	mov    r8,rsi
   14002792c:	xor    edx,edx
   14002792e:	mov    rcx,rax
   140027931:	call   QWORD PTR [rip+0x158a9]        # 0x14003d1e0
   140027937:	mov    rdi,QWORD PTR [rsp+0x60]
   14002793c:	mov    QWORD PTR [rbp+0x298],r14
   140027943:	mov    rsi,QWORD PTR [rbp-0x30]
   140027947:	test   rsi,rsi
   14002794a:	je     0x140027960
   14002794c:	call   QWORD PTR [rip+0x1586e]        # 0x14003d1c0
   140027952:	mov    r8,rsi
   140027955:	xor    edx,edx
   140027957:	mov    rcx,rax
   14002795a:	call   QWORD PTR [rip+0x15880]        # 0x14003d1e0
   140027960:	test   rdi,rdi
   140027963:	je     0x140027979
   140027965:	call   QWORD PTR [rip+0x15855]        # 0x14003d1c0
   14002796b:	mov    r8,rdi
   14002796e:	xor    edx,edx
   140027970:	mov    rcx,rax
   140027973:	call   QWORD PTR [rip+0x15867]        # 0x14003d1e0
   140027979:	test   r13,r13
   14002797c:	je     0x1400279f5
   14002797e:	mov    rdi,QWORD PTR [r13+0x8]
   140027982:	test   rdi,rdi
   140027985:	je     0x14002799f
   140027987:	call   QWORD PTR [rip+0x15833]        # 0x14003d1c0
   14002798d:	mov    r8,rdi
   140027990:	xor    edx,edx
   140027992:	mov    rcx,rax
   140027995:	call   QWORD PTR [rip+0x15845]        # 0x14003d1e0
   14002799b:	mov    QWORD PTR [r13+0x8],r14
   14002799f:	mov    rdi,QWORD PTR [r13+0x18]
   1400279a3:	test   rdi,rdi
   1400279a6:	je     0x1400279c0
   1400279a8:	call   QWORD PTR [rip+0x15812]        # 0x14003d1c0
   1400279ae:	mov    r8,rdi
   1400279b1:	xor    edx,edx
   1400279b3:	mov    rcx,rax
   1400279b6:	call   QWORD PTR [rip+0x15824]        # 0x14003d1e0
   1400279bc:	mov    QWORD PTR [r13+0x18],r14
   1400279c0:	mov    rdi,QWORD PTR [r13+0x28]
   1400279c4:	test   rdi,rdi
   1400279c7:	je     0x1400279e1
   1400279c9:	call   QWORD PTR [rip+0x157f1]        # 0x14003d1c0
   1400279cf:	mov    r8,rdi
   1400279d2:	xor    edx,edx
   1400279d4:	mov    rcx,rax
   1400279d7:	call   QWORD PTR [rip+0x15803]        # 0x14003d1e0
   1400279dd:	mov    QWORD PTR [r13+0x28],r14
   1400279e1:	call   QWORD PTR [rip+0x157d9]        # 0x14003d1c0
   1400279e7:	mov    r8,r13
   1400279ea:	xor    edx,edx
   1400279ec:	mov    rcx,rax
   1400279ef:	call   QWORD PTR [rip+0x157eb]        # 0x14003d1e0
   1400279f5:	test   r12,r12
   1400279f8:	je     0x140027a0e
   1400279fa:	call   QWORD PTR [rip+0x157c0]        # 0x14003d1c0
   140027a00:	mov    r8,r12
   140027a03:	xor    edx,edx
   140027a05:	mov    rcx,rax
   140027a08:	call   QWORD PTR [rip+0x157d2]        # 0x14003d1e0
   140027a0e:	test   ebx,ebx
   140027a10:	js     0x140027b47
   140027a16:	mov    r9d,DWORD PTR [rbp+0x190]
   140027a1d:	cmp    r9d,0x1
   140027a21:	jb     0x140027b47
   140027a27:	mov    rdi,QWORD PTR [rbp+0x198]
   140027a2e:	test   rdi,rdi
   140027a31:	je     0x140027b47
   140027a37:	test   r9d,r9d
   140027a3a:	je     0x140027b47
   140027a40:	mov    r10d,DWORD PTR [rdi]
   140027a43:	lea    r8,[rbp+0x3e0]
   140027a4a:	mov    edx,0x4
   140027a4f:	mov    QWORD PTR [rbp+0x3e0],rdi
   140027a56:	mov    rcx,rdi
   140027a59:	call   0x14000baf0
   140027a5e:	test   eax,eax
   140027a60:	js     0x140027b47
   140027a66:	mov    rax,QWORD PTR [rbp+0x3e0]
   140027a6d:	test   r10d,r10d
   140027a70:	mov    DWORD PTR [rbp+0x5b8],r10d
   140027a77:	cmove  rax,r14
   140027a7b:	mov    QWORD PTR [rbp+0x3e0],rax
   140027a82:	mov    QWORD PTR [rbp+0x748],rax
   140027a89:	cmp    r10d,edx
   140027a8c:	jne    0x140027b47
   140027a92:	mov    eax,DWORD PTR [rax]
   140027a94:	mov    DWORD PTR [rbp+0x140],eax
   140027a9a:	test   eax,eax
   140027a9c:	js     0x140027b47
   140027aa2:	cmp    r9d,0x1
   140027aa6:	jbe    0x140027b47
   140027aac:	mov    QWORD PTR [rbp+0x110],rdi
   140027ab3:	mov    r9d,r14d
   140027ab6:	lea    r8,[rbp+0x110]
   140027abd:	mov    edx,0x4
   140027ac2:	mov    rcx,rdi
   140027ac5:	call   0x14000baf0
   140027aca:	test   eax,eax
   140027acc:	js     0x140027b47
   140027ace:	mov    edx,DWORD PTR [rdi]
   140027ad0:	lea    r8,[rbp+0x110]
   140027ad7:	mov    rcx,QWORD PTR [rbp+0x110]
   140027ade:	call   0x14000baf0
   140027ae3:	test   eax,eax
   140027ae5:	js     0x140027b47
   140027ae7:	inc    r9d
   140027aea:	cmp    r9d,0x1
   140027aee:	jae    0x140027af9
   140027af0:	mov    rdi,QWORD PTR [rbp+0x110]
   140027af7:	jmp    0x140027ab6
   140027af9:	mov    rcx,QWORD PTR [rbp+0x110]
   140027b00:	lea    r8,[rbp+0x110]
   140027b07:	mov    edx,0x4
   140027b0c:	mov    edi,DWORD PTR [rcx]
   140027b0e:	call   0x14000baf0
   140027b13:	test   eax,eax
   140027b15:	js     0x140027b47
   140027b17:	mov    rax,QWORD PTR [rbp+0x110]
   140027b1e:	test   edi,edi
   140027b20:	mov    DWORD PTR [rbp+0x638],edi
   140027b26:	cmove  rax,r14
   140027b2a:	mov    QWORD PTR [rbp+0x110],rax
   140027b31:	mov    QWORD PTR [rbp+0x730],rax
   140027b38:	cmp    edi,0x8
   140027b3b:	jne    0x140027b47
   140027b3d:	mov    rax,QWORD PTR [rax]
   140027b40:	mov    QWORD PTR [rbp+0x728],rax
   140027b47:	mov    rsi,QWORD PTR [rbp-0x70]
   140027b4b:	mov    r13,QWORD PTR [rbp-0x38]
   140027b4f:	jmp    0x140020f06
   140027b54:	xor    r14d,r14d
   140027b57:	jmp    0x140020f12
   140027b5c:	cmp    r15d,0xd0000034
   140027b63:	jne    0x140027b6f
   140027b65:	mov    edi,0xc004f012
   140027b6a:	jmp    0x14000b05c
   140027b6f:	cmp    r15d,0xd00000e5
   140027b76:	je     0x140027bae
   140027b78:	cmp    r15d,0xc004d501
   140027b7f:	je     0x140027bae
   140027b81:	cmp    r15d,0xd000003e
   140027b88:	jne    0x140027b94
   140027b8a:	mov    edi,0xc004f028
   140027b8f:	jmp    0x14000b05c
   140027b94:	mov    edi,r15d
   140027b97:	cmp    r15d,0x8007007a
   140027b9e:	jne    0x14000b05c
   140027ba4:	mov    edi,0xc004f01e
   140027ba9:	jmp    0x14000b05c
   140027bae:	mov    edi,0xc004f027
   140027bb3:	jmp    0x14000b05c
   140027bb8:	mov    edi,0xc004f01e
   140027bbd:	jmp    0x14000b05c
   140027bc2:	mov    r13d,0x80070005
   140027bc8:	jmp    0x14000b674
   140027bcd:	mov    BYTE PTR [rip+0x26fa7],0x1        # 0x14004eb7b
   140027bd4:	jmp    0x14000b07d
   140027bd9:	movzx  eax,ax
   140027bdc:	or     eax,0x80070000
   140027be1:	test   eax,eax
   140027be3:	jmp    0x14000b293
   140027be8:	cmp    DWORD PTR [rbp+0x1bc],0x2
   140027bef:	jb     0x14000b2ec
   140027bf5:	xor    r9d,r9d
   140027bf8:	lea    r8,[rip+0x1b781]        # 0x140043380
   140027bff:	lea    rdx,[rip+0x1b7aa]        # 0x1400433b0
   140027c06:	xor    ecx,ecx
   140027c08:	call   QWORD PTR [rip+0x1540a]        # 0x14003d018
   140027c0e:	nop
   140027c0f:	jmp    0x14000b2ec
   140027c14:	mov    r15b,0x1
   140027c17:	jmp    0x14000b3f9
   140027c1c:	xor    r14b,r14b
   140027c1f:	jmp    0x14000b3f9
   140027c24:	mov    rcx,rbx
   140027c27:	call   QWORD PTR [rip+0x15afb]        # 0x14003d728
   140027c2d:	lea    r8,[rbp+0x2a8]
   140027c34:	mov    rcx,rdi
   140027c37:	lea    rdx,[rip+0x16722]        # 0x14003e360
   140027c3e:	call   rbx
   140027c40:	nop
   140027c41:	jmp    0x14000b490
   140027c46:	lea    rcx,[rbp+0x780]
   140027c4d:	call   QWORD PTR [rip+0x154ad]        # 0x14003d100
   140027c53:	lea    rcx,[rbp+0x780]
   140027c5a:	call   QWORD PTR [rip+0x15498]        # 0x14003d0f8
   140027c60:	xor    r9d,r9d
   140027c63:	lea    rcx,[rbp+0x780]
   140027c6a:	xor    r8d,r8d
   140027c6d:	xor    edx,edx
   140027c6f:	call   QWORD PTR [rip+0x15493]        # 0x14003d108
   140027c75:	test   eax,eax
   140027c77:	jg     0x140027c46
   140027c79:	jmp    0x14000b532
   140027c7e:	call   0x14002aee8
   140027c83:	nop
   140027c84:	jmp    0x14000b540
   140027c89:	mov    rdi,QWORD PTR [rbp+0x180]
   140027c90:	mov    rax,QWORD PTR [rdi]
   140027c93:	mov    rbx,QWORD PTR [rax+0x20]
   140027c97:	mov    rcx,rbx
   140027c9a:	call   QWORD PTR [rip+0x15a88]        # 0x14003d728
   140027ca0:	mov    edx,esi
   140027ca2:	mov    rcx,rdi
   140027ca5:	call   rbx
   140027ca7:	mov    rcx,QWORD PTR [rbp+0xf8]
   140027cae:	xor    edx,edx
   140027cb0:	call   QWORD PTR [rip+0x2b42a]        # 0x1400530e0
   140027cb6:	mov    rbx,QWORD PTR [rbp+0xf8]
   140027cbd:	xor    eax,eax
   140027cbf:	mov    QWORD PTR [rbp+0xf8],rax
   140027cc6:	mov    rax,QWORD PTR [rbx]
   140027cc9:	mov    rdi,QWORD PTR [rax+0x30]
   140027ccd:	mov    rcx,rdi
   140027cd0:	call   QWORD PTR [rip+0x15a52]        # 0x14003d728
   140027cd6:	mov    rcx,rbx
   140027cd9:	call   rdi
   140027cdb:	nop
   140027cdc:	jmp    0x14000b5bd
   140027ce1:	mov    r13d,0x16
   140027ce7:	jmp    0x14000b61c
   140027cec:	mov    r15b,0x1
   140027cef:	jmp    0x140027d76
   140027cf4:	mov    r8d,0xc
   140027cfa:	lea    rdx,[rip+0x1b5bf]        # 0x1400432c0
   140027d01:	mov    rcx,rbx
   140027d04:	call   QWORD PTR [rip+0x15906]        # 0x14003d610
   140027d0a:	test   eax,eax
   140027d0c:	jne    0x140027d1a
   140027d0e:	mov    BYTE PTR [rip+0x26e68],0x1        # 0x14004eb7d
   140027d15:	jmp    0x14000b989
   140027d1a:	mov    r8d,0xb
   140027d20:	lea    rdx,[rip+0x1b5b9]        # 0x1400432e0
   140027d27:	mov    rcx,rbx
   140027d2a:	call   QWORD PTR [rip+0x158e0]        # 0x14003d610
   140027d30:	test   eax,eax
   140027d32:	jne    0x140027d4e
   140027d34:	mov    BYTE PTR [rip+0x26e3f],0x1        # 0x14004eb7a
   140027d3b:	mov    BYTE PTR [rip+0x26e3c],r13b        # 0x14004eb7e
   140027d42:	mov    BYTE PTR [rip+0x26e32],0x1        # 0x14004eb7b
   140027d49:	jmp    0x14000b989
   140027d4e:	mov    r8d,0x5
   140027d54:	lea    rdx,[rip+0x1b59d]        # 0x1400432f8
   140027d5b:	mov    rcx,rbx
   140027d5e:	call   QWORD PTR [rip+0x158ac]        # 0x14003d610
   140027d64:	test   eax,eax
   140027d66:	jne    0x140027d82
   140027d68:	mov    BYTE PTR [rip+0x26e0a],0x1        # 0x14004eb79
   140027d6f:	mov    BYTE PTR [rip+0x26e05],0x1        # 0x14004eb7b
   140027d76:	mov    BYTE PTR [rip+0x26e01],r13b        # 0x14004eb7e
   140027d7d:	jmp    0x14000b989
   140027d82:	mov    r8d,0x11
   140027d88:	lea    rdx,[rip+0x1b579]        # 0x140043308
   140027d8f:	mov    rcx,rbx
   140027d92:	call   QWORD PTR [rip+0x15878]        # 0x14003d610
   140027d98:	test   eax,eax
   140027d9a:	je     0x140027d6f
   140027d9c:	mov    r8d,0xe
   140027da2:	lea    rdx,[rip+0x1b587]        # 0x140043330
   140027da9:	mov    rcx,rbx
   140027dac:	call   QWORD PTR [rip+0x1585e]        # 0x14003d610
   140027db2:	test   eax,eax
   140027db4:	jne    0x140027dc5
   140027db6:	mov    DWORD PTR [rip+0x266b0],0x1        # 0x14004e470
   140027dc0:	jmp    0x14000b989
   140027dc5:	mov    r8d,0xc
   140027dcb:	lea    rdx,[rip+0x1b57e]        # 0x140043350
   140027dd2:	mov    rcx,rbx
   140027dd5:	call   QWORD PTR [rip+0x15835]        # 0x14003d610
   140027ddb:	test   eax,eax
   140027ddd:	jne    0x140027deb
   140027ddf:	mov    DWORD PTR [rip+0x2668a],r13d        # 0x14004e470
   140027de6:	jmp    0x14000b989
   140027deb:	mov    r8d,0x7
   140027df1:	lea    rdx,[rip+0x1b578]        # 0x140043370
   140027df8:	mov    rcx,rbx
   140027dfb:	call   QWORD PTR [rip+0x1580f]        # 0x14003d610
   140027e01:	test   eax,eax
   140027e03:	jne    0x14000b989
   140027e09:	mov    r14b,0x1
   140027e0c:	mov    BYTE PTR [rip+0x26d6b],r14b        # 0x14004eb7e
   140027e13:	jmp    0x14000b989
   140027e18:	lea    rcx,[rbp-0x28]
   140027e1c:	mov    QWORD PTR [rbp-0x28],r13
   140027e20:	mov    QWORD PTR [rbp-0x20],r13
   140027e24:	call   0x14003bcec
   140027e29:	nop
   140027e2a:	jmp    0x14000b9aa
   140027e2f:	call   0x14002d810
   140027e34:	mov    QWORD PTR [rip+0x27455],rax        # 0x14004f290
   140027e3b:	jmp    0x14000b9cc
   140027e40:	xor    edx,edx
   140027e42:	mov    QWORD PTR [rbp-0x30],r13
   140027e46:	lea    rax,[rbp-0x30]
   140027e4a:	lea    r9,[rip+0x1641f]        # 0x14003e270
   140027e51:	mov    QWORD PTR [rsp+0x20],rax
   140027e56:	lea    rcx,[rip+0x1783b]        # 0x14003f698
   140027e5d:	lea    r8d,[rdx+0x4]
   140027e61:	call   QWORD PTR [rip+0x2b291]        # 0x1400530f8
   140027e67:	test   eax,eax
   140027e69:	js     0x140027ec4
   140027e6b:	mov    rbx,QWORD PTR [rbp-0x30]
   140027e6f:	test   rbx,rbx
   140027e72:	je     0x14000ba27
   140027e78:	mov    rax,QWORD PTR [rbx]
   140027e7b:	mov    rdi,QWORD PTR [rax+0x18]
   140027e7f:	mov    rcx,rdi
   140027e82:	call   QWORD PTR [rip+0x158a0]        # 0x14003d728
   140027e88:	xor    r8d,r8d
   140027e8b:	xor    edx,edx
   140027e8d:	mov    rcx,rbx
   140027e90:	call   rdi
   140027e92:	test   eax,eax
   140027e94:	js     0x140027eaf
   140027e96:	mov    rbx,QWORD PTR [rbp-0x30]
   140027e9a:	mov    rax,QWORD PTR [rbx]
   140027e9d:	mov    rdi,QWORD PTR [rax+0x20]
   140027ea1:	mov    rcx,rdi
   140027ea4:	call   QWORD PTR [rip+0x1587e]        # 0x14003d728
   140027eaa:	mov    rcx,rbx
   140027ead:	call   rdi
   140027eaf:	cmp    QWORD PTR [rbp-0x30],r13
   140027eb3:	je     0x14000ba27
   140027eb9:	xor    edx,edx
   140027ebb:	lea    rcx,[rbp-0x30]
   140027ebf:	call   0x14000dcd0
   140027ec4:	mov    rbx,QWORD PTR [rbp-0x30]
   140027ec8:	test   rbx,rbx
   140027ecb:	je     0x14000ba27
   140027ed1:	mov    rax,QWORD PTR [rbx]
   140027ed4:	mov    rdi,QWORD PTR [rax+0x10]
   140027ed8:	mov    rcx,rdi
   140027edb:	call   QWORD PTR [rip+0x15847]        # 0x14003d728
   140027ee1:	mov    rcx,rbx
   140027ee4:	call   rdi
   140027ee6:	nop
   140027ee7:	jmp    0x14000ba27
   140027eec:	mov    DWORD PTR [r12],0x17
   140027ef4:	jmp    0x14000ba27
   140027ef9:	int3   
   140027efa:	cmp    bx,0x20
   140027efe:	je     0x14000ba91
   140027f04:	cmp    bx,0x9
   140027f08:	je     0x14000ba8b
   140027f0e:	mov    rcx,rsi
   140027f11:	call   QWORD PTR [rip+0x15109]        # 0x14003d020
   140027f17:	mov    rcx,rdi
   140027f1a:	mov    rsi,rax
   140027f1d:	call   QWORD PTR [rip+0x150fd]        # 0x14003d020
   140027f23:	movzx  ecx,WORD PTR [rsi]
   140027f26:	mov    rdi,rax
   140027f29:	call   QWORD PTR [rip+0x151e9]        # 0x14003d118
   140027f2f:	movzx  ecx,WORD PTR [rdi]
   140027f32:	movzx  ebx,ax
   140027f35:	call   QWORD PTR [rip+0x151dd]        # 0x14003d118
   140027f3b:	movzx  r8d,ax
   140027f3f:	test   bx,bx
   140027f42:	jne    0x14000ba81
   140027f48:	jmp    0x14000ba8b
   140027f4d:	cmp    r8w,0x20
   140027f52:	ja     0x14000ba9e
   140027f58:	movzx  eax,r8w
   140027f5c:	bt     rbp,rax
   140027f60:	jae    0x14000ba9e
   140027f66:	xor    eax,eax
   140027f68:	jmp    0x14000baa9
   140027f6d:	int3   
   140027f6e:	and    DWORD PTR [rip+0x2717b],0x0        # 0x14004f0f0
   140027f75:	mov    BYTE PTR [rip+0x26bb4],0x1        # 0x14004eb30
   140027f7c:	jmp    0x14000bc7e
   140027f81:	int3   
   140027f82:	test   rdi,rdi
   140027f85:	js     0x140027fb4
   140027f87:	cmp    ebx,eax
   140027f89:	jge    0x140027fb4
   140027f8b:	mov    rax,QWORD PTR [rip+0x27196]        # 0x14004f128
   140027f92:	mov    rdx,rsi
   140027f95:	movzx  ecx,WORD PTR [rdi+rax*1]
   140027f99:	call   QWORD PTR [rip+0x15139]        # 0x14003d0d8
   140027f9f:	mov    eax,DWORD PTR [rip+0x2718b]        # 0x14004f130
   140027fa5:	inc    ebx
   140027fa7:	add    rdi,0x2
   140027fab:	cmp    ebx,eax
   140027fad:	jl     0x140027f82
   140027faf:	jmp    0x14000bcbb
   140027fb4:	xor    r9d,r9d
   140027fb7:	xor    r8d,r8d
   140027fba:	mov    ecx,0xc000008c
   140027fbf:	lea    edx,[r9+0x1]
   140027fc3:	call   QWORD PTR [rip+0x151af]        # 0x14003d178
   140027fc9:	int3   
   140027fca:	mov    BYTE PTR [rip+0x26b5f],0x1        # 0x14004eb30
   140027fd1:	jmp    0x14000bd66
   140027fd6:	cmp    eax,0x80010106
   140027fdb:	jne    0x140027ff3
   140027fdd:	lea    rcx,[rip+0x17b9c]        # 0x14003fb80
   140027fe4:	call   QWORD PTR [rip+0x15246]        # 0x14003d230
   140027fea:	test   rax,rax
   140027fed:	jne    0x14000bdc4
   140027ff3:	mov    BYTE PTR [rip+0x26b36],0x1        # 0x14004eb30
   140027ffa:	jmp    0x14000bdcb
   140027fff:	int3   
   140028000:	mov    rax,QWORD PTR [r14]
   140028003:	mov    rbx,QWORD PTR [rax+0x10]
   140028007:	mov    rcx,rbx
   14002800a:	call   QWORD PTR [rip+0x15718]        # 0x14003d728
   140028010:	mov    rcx,r14
   140028013:	call   rbx
   140028015:	nop
   140028016:	jmp    0x14000be22
   14002801b:	int3   
   14002801c:	call   QWORD PTR [rip+0x15626]        # 0x14003d648
   140028022:	and    QWORD PTR [rip+0x26db6],0x0        # 0x14004ede0
   14002802a:	jmp    0x14000c015
   14002802f:	int3   
   140028030:	mov    eax,0x80004003
   140028035:	jmp    0x14000c10d
   14002803a:	mov    rsi,rdi
   14002803d:	jmp    0x14000c0b4
   140028042:	xor    edi,edi
   140028044:	mov    r15,QWORD PTR [rsp+0x80]
   14002804c:	mov    r12,QWORD PTR [rsp+0x78]
   140028051:	mov    r13,QWORD PTR [rsp+0x70]
   140028056:	mov    r14d,DWORD PTR [rsp+0x88]
   14002805e:	mov    rsi,QWORD PTR [rsp+0x20]
   140028063:	jmp    0x14000c0b9
   140028068:	mov    rcx,rbx
   14002806b:	call   QWORD PTR [rip+0x156b7]        # 0x14003d728
   140028071:	mov    r8,r15
   140028074:	mov    rdx,r12
   140028077:	mov    rcx,rsi
   14002807a:	call   rbx
   14002807c:	nop
   14002807d:	jmp    0x14000c103
   140028082:	mov    eax,0x80004003
   140028087:	jmp    0x14000c2e9
   14002808c:	mov    ebp,0x1
   140028091:	jmp    0x14000c310
   140028096:	mov    rcx,rdi
   140028099:	call   QWORD PTR [rip+0x15689]        # 0x14003d728
   14002809f:	mov    r9,QWORD PTR [rbx+0x8]
   1400280a3:	mov    r8,r14
   1400280a6:	mov    rdx,rsi
   1400280a9:	mov    rcx,r15
   1400280ac:	call   rdi
   1400280ae:	test   eax,eax
   1400280b0:	je     0x14000c2df
   1400280b6:	test   ebp,ebp
   1400280b8:	jne    0x14000c2cd
   1400280be:	test   eax,eax
   1400280c0:	js     0x14000c2df
   1400280c6:	jmp    0x14000c2cd
   1400280cb:	mov    eax,0x80070057
   1400280d0:	jmp    0x14000c2e9
   1400280d5:	int3   
   1400280d6:	mov    eax,0x80040110
   1400280db:	jmp    0x14000c691
   1400280e0:	mov    rcx,rdi
   1400280e3:	mov    rax,QWORD PTR [rip+0x1563e]        # 0x14003d728
   1400280ea:	call   rax
   1400280ec:	mov    r8,r15
   1400280ef:	mov    rdx,r14
   1400280f2:	mov    rcx,rbx
   1400280f5:	call   rdi
   1400280f7:	nop
   1400280f8:	jmp    0x14000c691
   1400280fd:	int3   
   1400280fe:	mov    rcx,rsi
   140028101:	call   QWORD PTR [rip+0x15621]        # 0x14003d728
   140028107:	mov    edx,0x1
   14002810c:	mov    rcx,rbx
   14002810f:	call   rsi
   140028111:	nop
   140028112:	jmp    0x14000c6f6
   140028117:	mov    rcx,rsi
   14002811a:	call   QWORD PTR [rip+0x15608]        # 0x14003d728
   140028120:	mov    rcx,rbx
   140028123:	call   rsi
   140028125:	nop
   140028126:	jmp    0x14000c6f6
   14002812b:	int3   
   14002812c:	mov    rcx,rsi
   14002812f:	call   QWORD PTR [rip+0x155f3]        # 0x14003d728
   140028135:	mov    rcx,rbx
   140028138:	call   rsi
   14002813a:	nop
   14002813b:	jmp    0x14000c7fa
   140028140:	mov    rcx,rsi
   140028143:	call   0x14002ae70
   140028148:	and    QWORD PTR [rdi+0x10],0x0
   14002814d:	jmp    0x14000c880
   140028152:	mov    rax,QWORD PTR [r14]
   140028155:	mov    rbx,QWORD PTR [rax+0x10]
   140028159:	mov    rcx,rbx
   14002815c:	call   QWORD PTR [rip+0x155c6]        # 0x14003d728
   140028162:	mov    rcx,r14
   140028165:	call   rbx
   140028167:	nop
   140028168:	jmp    0x14000c88d
   14002816d:	int3   
   14002816e:	movzx  eax,ax
   140028171:	or     eax,ebx
   140028173:	test   eax,eax
   140028175:	jmp    0x14000c8f2
   14002817a:	cmp    DWORD PTR [rsp+0x30],0x1
   14002817f:	jne    0x14000c93e
   140028185:	xor    r9d,r9d
   140028188:	lea    r8,[rip+0x1b1f1]        # 0x140043380
   14002818f:	lea    rdx,[rip+0x1b27a]        # 0x140043410
   140028196:	xor    ecx,ecx
   140028198:	call   QWORD PTR [rip+0x14e7a]        # 0x14003d018
   14002819e:	nop
   14002819f:	jmp    0x14000c93e
   1400281a4:	lea    rdx,[rip+0x1a795]        # 0x140042940
   1400281ab:	call   0x14002dfbc
   1400281b0:	nop
   1400281b1:	jmp    0x14000c95b
   1400281b6:	call   QWORD PTR [rip+0x14fec]        # 0x14003d1a8
   1400281bc:	and    QWORD PTR [rip+0x269a4],0x0        # 0x14004eb68
   1400281c4:	jmp    0x14000c9a9
   1400281c9:	lea    rdx,[rip+0x1a730]        # 0x140042900
   1400281d0:	call   0x14002dfbc
   1400281d5:	nop
   1400281d6:	jmp    0x14000c9b6
   1400281db:	int3   
   1400281dc:	mov    rcx,rdi
   1400281df:	call   QWORD PTR [rip+0x15543]        # 0x14003d728
   1400281e5:	mov    rcx,rbx
   1400281e8:	call   rdi
   1400281ea:	nop
   1400281eb:	jmp    0x14000caf9
   1400281f0:	mov    rcx,rdi
   1400281f3:	call   QWORD PTR [rip+0x1552f]        # 0x14003d728
   1400281f9:	mov    rcx,rbx
   1400281fc:	call   rdi
   1400281fe:	nop
   1400281ff:	jmp    0x14000cb3d
   140028204:	mov    rax,QWORD PTR [rsi]
   140028207:	mov    rbx,QWORD PTR [rax+0x10]
   14002820b:	mov    rcx,rbx
   14002820e:	call   QWORD PTR [rip+0x15514]        # 0x14003d728
   140028214:	mov    rcx,rsi
   140028217:	call   rbx
   140028219:	nop
   14002821a:	jmp    0x14000cc4c
   14002821f:	mov    rax,QWORD PTR [rdi]
   140028222:	mov    rbx,QWORD PTR [rax+0x10]
   140028226:	mov    rcx,rbx
   140028229:	call   QWORD PTR [rip+0x154f9]        # 0x14003d728
   14002822f:	mov    rcx,rdi
   140028232:	call   rbx
   140028234:	nop
   140028235:	jmp    0x14000cc59
   14002823a:	call   QWORD PTR [rip+0x14fd0]        # 0x14003d210
   140028240:	mov    QWORD PTR [rsi+0x58],rbp
   140028244:	jmp    0x14000ccbe
   140028249:	cmp    BYTE PTR [rip+0x2692b],bpl        # 0x14004eb7b
   140028250:	jne    0x14000cd26
   140028256:	cmp    DWORD PTR [rsi+0x60],ebp
   140028259:	je     0x14000cd26
   14002825f:	mov    rcx,QWORD PTR [rsi+0x68]
   140028263:	test   rcx,rcx
   140028266:	je     0x140028272
   140028268:	call   QWORD PTR [rip+0x14f3a]        # 0x14003d1a8
   14002826e:	mov    QWORD PTR [rsi+0x68],rbp
   140028272:	mov    ecx,DWORD PTR [rsi+0x60]
   140028275:	xor    r9d,r9d
   140028278:	xor    r8d,r8d
   14002827b:	lea    edx,[r9+0x12]
   14002827f:	call   QWORD PTR [rip+0x14e6b]        # 0x14003d0f0
   140028285:	mov    DWORD PTR [rsi+0x60],ebp
   140028288:	jmp    0x14000cd26
   14002828d:	int3   
   14002828e:	mov    eax,0x80004003
   140028293:	jmp    0x14000cf93
   140028298:	mov    rbx,QWORD PTR [rsp+0x40]
   14002829d:	mov    edi,DWORD PTR [rsp+0x48]
   1400282a1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400282a6:	jmp    0x14000cf81
   1400282ab:	int3   
   1400282ac:	mov    rcx,r8
   1400282af:	call   0x14002c16c
   1400282b4:	test   eax,eax
   1400282b6:	jne    0x14000cfe7
   1400282bc:	mov    eax,0x80040110
   1400282c1:	jmp    0x14000d02d
   1400282c6:	mov    rcx,rbx
   1400282c9:	call   QWORD PTR [rip+0x15459]        # 0x14003d728
   1400282cf:	mov    r8,rdi
   1400282d2:	mov    rdx,rbp
   1400282d5:	mov    rcx,rsi
   1400282d8:	call   rbx
   1400282da:	nop
   1400282db:	jmp    0x14000d02d
   1400282e0:	mov    eax,0x80004003
   1400282e5:	jmp    0x14000d18a
   1400282ea:	mov    rsi,rdi
   1400282ed:	jmp    0x14000d126
   1400282f2:	xor    edi,edi
   1400282f4:	mov    r15,QWORD PTR [rsp+0x70]
   1400282f9:	mov    r14d,DWORD PTR [rsp+0x68]
   1400282fe:	mov    rsi,QWORD PTR [rsp+0x60]
   140028303:	jmp    0x14000d12b
   140028308:	mov    rcx,rbx
   14002830b:	call   QWORD PTR [rip+0x15417]        # 0x14003d728
   140028311:	mov    r8,r15
   140028314:	lea    rdx,[rip+0x16b55]        # 0x14003ee70
   14002831b:	mov    rcx,rsi
   14002831e:	call   rbx
   140028320:	nop
   140028321:	jmp    0x14000d180
   140028326:	mov    rcx,rbp
   140028329:	call   QWORD PTR [rip+0x153f9]        # 0x14003d728
   14002832f:	mov    rcx,rsi
   140028332:	call   rbp
   140028334:	nop
   140028335:	jmp    0x14000d21a
   14002833a:	mov    rcx,rsi
   14002833d:	call   QWORD PTR [rip+0x153e5]        # 0x14003d728
   140028343:	mov    edx,0x1
   140028348:	mov    rcx,rbx
   14002834b:	call   rsi
   14002834d:	nop
   14002834e:	jmp    0x14000d244
   140028353:	mov    rcx,rsi
   140028356:	call   QWORD PTR [rip+0x153cc]        # 0x14003d728
   14002835c:	mov    rcx,rbx
   14002835f:	call   rsi
   140028361:	nop
   140028362:	jmp    0x14000d1dc
   140028367:	int3   
   140028368:	mov    rcx,rsi
   14002836b:	call   QWORD PTR [rip+0x153b7]        # 0x14003d728
   140028371:	mov    rcx,rdi
   140028374:	call   rsi
   140028376:	nop
   140028377:	jmp    0x14000d371
   14002837c:	int3   
   14002837d:	int3   
   14002837e:	mov    rcx,rsi
   140028381:	call   QWORD PTR [rip+0x153a1]        # 0x14003d728
   140028387:	mov    rcx,rdi
   14002838a:	call   rsi
   14002838c:	nop
   14002838d:	jmp    0x14000d407
   140028392:	int3   
   140028393:	int3   
   140028394:	lea    rbx,[rdi+0xd0]
   14002839b:	mov    rcx,rbx
   14002839e:	call   QWORD PTR [rip+0x15024]        # 0x14003d3c8
   1400283a4:	mov    rsi,QWORD PTR [rdi+0xc8]
   1400283ab:	mov    rcx,rbx
   1400283ae:	mov    QWORD PTR [rdi+0xc8],rbp
   1400283b5:	call   QWORD PTR [rip+0x1501d]        # 0x14003d3d8
   1400283bb:	test   rsi,rsi
   1400283be:	je     0x14000d4c2
   1400283c4:	mov    r14,QWORD PTR [rdi+0x58]
   1400283c8:	test   r14,r14
   1400283cb:	je     0x1400283ef
   1400283cd:	mov    WORD PTR [rsp+0x60],bp
   1400283d2:	mov    rax,QWORD PTR [r14]
   1400283d5:	mov    rbx,QWORD PTR [rax+0x18]
   1400283d9:	mov    rcx,rbx
   1400283dc:	call   QWORD PTR [rip+0x15346]        # 0x14003d728
   1400283e2:	lea    r8,[rsp+0x60]
   1400283e7:	mov    rdx,rsi
   1400283ea:	mov    rcx,r14
   1400283ed:	call   rbx
   1400283ef:	mov    rax,QWORD PTR [rsi]
   1400283f2:	mov    rbx,QWORD PTR [rax+0x10]
   1400283f6:	mov    rcx,rbx
   1400283f9:	call   QWORD PTR [rip+0x15329]        # 0x14003d728
   1400283ff:	mov    rcx,rsi
   140028402:	call   rbx
   140028404:	nop
   140028405:	jmp    0x14000d4c2
   14002840a:	mov    rcx,QWORD PTR [rdi+0xa0]
   140028411:	mov    rdx,rdi
   140028414:	call   0x14003536c
   140028419:	nop
   14002841a:	jmp    0x14000d743
   14002841f:	int3   
   140028420:	mov    rax,QWORD PTR [rsi]
   140028423:	mov    rbx,QWORD PTR [rax+0x10]
   140028427:	mov    rcx,rbx
   14002842a:	call   QWORD PTR [rip+0x152f8]        # 0x14003d728
   140028430:	mov    rcx,rsi
   140028433:	call   rbx
   140028435:	nop
   140028436:	jmp    0x14000d7db
   14002843b:	mov    rax,QWORD PTR [rsi]
   14002843e:	mov    rbx,QWORD PTR [rax+0x10]
   140028442:	mov    rcx,rbx
   140028445:	call   QWORD PTR [rip+0x152dd]        # 0x14003d728
   14002844b:	mov    rcx,rsi
   14002844e:	call   rbx
   140028450:	nop
   140028451:	jmp    0x14000d7f2
   140028456:	mov    rax,QWORD PTR [rsi]
   140028459:	mov    rbx,QWORD PTR [rax+0x10]
   14002845d:	mov    rcx,rbx
   140028460:	call   QWORD PTR [rip+0x152c2]        # 0x14003d728
   140028466:	mov    rcx,rsi
   140028469:	call   rbx
   14002846b:	nop
   14002846c:	jmp    0x14000d7ff
   140028471:	mov    rax,QWORD PTR [rsi]
   140028474:	mov    rbx,QWORD PTR [rax+0x10]
   140028478:	mov    rcx,rbx
   14002847b:	call   QWORD PTR [rip+0x152a7]        # 0x14003d728
   140028481:	mov    rcx,rsi
   140028484:	call   rbx
   140028486:	nop
   140028487:	jmp    0x14000d80c
   14002848c:	mov    rax,QWORD PTR [rsi]
   14002848f:	mov    rbx,QWORD PTR [rax+0x10]
   140028493:	mov    rcx,rbx
   140028496:	call   QWORD PTR [rip+0x1528c]        # 0x14003d728
   14002849c:	mov    rcx,rsi
   14002849f:	call   rbx
   1400284a1:	nop
   1400284a2:	jmp    0x14000d819
   1400284a7:	int3   
   1400284a8:	lea    rdx,[rsp+0x40]
   1400284ad:	call   0x140032dfc
   1400284b2:	mov    r15,QWORD PTR [rax]
   1400284b5:	test   r15,r15
   1400284b8:	je     0x1400284d9
   1400284ba:	mov    rax,QWORD PTR [r15]
   1400284bd:	mov    rbx,QWORD PTR [rax+0x10]
   1400284c1:	mov    rcx,rbx
   1400284c4:	call   QWORD PTR [rip+0x1525e]        # 0x14003d728
   1400284ca:	mov    rcx,r15
   1400284cd:	call   rbx
   1400284cf:	test   rdi,rdi
   1400284d2:	je     0x1400284e3
   1400284d4:	and    QWORD PTR [rdi+0x10],0x0
   1400284d9:	mov    rdi,QWORD PTR [rsp+0x40]
   1400284de:	jmp    0x14000d872
   1400284e3:	mov    ecx,0x80004005
   1400284e8:	call   0x1400152fc
   1400284ed:	int3   
   1400284ee:	or     edx,0xffffffff
   1400284f1:	call   QWORD PTR [rip+0x14f01]        # 0x14003d3f8
   1400284f7:	mov    rcx,QWORD PTR [rsi+0x68]
   1400284fb:	call   QWORD PTR [rip+0x14ca7]        # 0x14003d1a8
   140028501:	and    QWORD PTR [rsi+0x68],0x0
   140028506:	jmp    0x14000d891
   14002850b:	int3   
   14002850c:	mov    rdx,QWORD PTR [rbx]
   14002850f:	test   rdx,rdx
   140028512:	je     0x14002852e
   140028514:	mov    rax,QWORD PTR [rdx]
   140028517:	mov    rcx,rbx
   14002851a:	mov    QWORD PTR [rbx],rax
   14002851d:	call   0x14000fe20
   140028522:	cmp    QWORD PTR [rbx+0x10],0x0
   140028527:	ja     0x14002850c
   140028529:	jmp    0x14000d8d0
   14002852e:	mov    ecx,0x80004005
   140028533:	call   0x1400152fc
   140028538:	int3   
   140028539:	int3   
   14002853a:	xor    edx,edx
   14002853c:	lea    rcx,[rsp+0x20]
   140028541:	call   0x14000dd50
   140028546:	mov    rdx,QWORD PTR [rbx]
   140028549:	mov    rcx,QWORD PTR [rdi]
   14002854c:	call   0x1400332a0
   140028551:	lea    rcx,[rsp+0x20]
   140028556:	call   0x14000ddc0
   14002855b:	nop
   14002855c:	jmp    0x14000dc84
   140028561:	int3   
   140028562:	test   rcx,rcx
   140028565:	je     0x14000dcbd
   14002856b:	call   0x140034ce8
   140028570:	mov    rcx,rbx
   140028573:	call   0x140013de0
   140028578:	nop
   140028579:	jmp    0x14000dcbd
   14002857e:	and    QWORD PTR [rcx],0x0
   140028582:	mov    rax,QWORD PTR [rdi]
   140028585:	mov    rbx,QWORD PTR [rax+0x10]
   140028589:	mov    rcx,rbx
   14002858c:	call   QWORD PTR [rip+0x15196]        # 0x14003d728
   140028592:	mov    rcx,rdi
   140028595:	call   rbx
   140028597:	nop
   140028598:	jmp    0x14000de02
   14002859d:	int3   
   14002859e:	call   QWORD PTR [rip+0x150a4]        # 0x14003d648
   1400285a4:	and    QWORD PTR [rbx],0x0
   1400285a8:	jmp    0x14000de29
   1400285ad:	int3   
   1400285ae:	mov    eax,0x80004003
   1400285b3:	jmp    0x14000df65
   1400285b8:	mov    rdi,rbx
   1400285bb:	jmp    0x14000def0
   1400285c0:	xor    ebx,ebx
   1400285c2:	mov    r14,QWORD PTR [rsp+0x80]
   1400285ca:	mov    r15,QWORD PTR [rsp+0x78]
   1400285cf:	mov    esi,DWORD PTR [rsp+0x70]
   1400285d3:	mov    rdi,QWORD PTR [rsp+0x88]
   1400285db:	jmp    0x14000def8
   1400285e0:	mov    rcx,rsi
   1400285e3:	call   QWORD PTR [rip+0x1513f]        # 0x14003d728
   1400285e9:	mov    r8,r14
   1400285ec:	mov    rdx,r15
   1400285ef:	mov    rcx,rdi
   1400285f2:	call   rsi
   1400285f4:	nop
   1400285f5:	jmp    0x14000df59
   1400285fa:	mov    rax,QWORD PTR [rdi]
   1400285fd:	mov    rbx,QWORD PTR [rax+0x28]
   140028601:	mov    rcx,rbx
   140028604:	call   QWORD PTR [rip+0x1511e]        # 0x14003d728
   14002860a:	mov    edx,0x1
   14002860f:	mov    rcx,rdi
   140028612:	call   rbx
   140028614:	nop
   140028615:	jmp    0x14000df63
   14002861a:	mov    rcx,rbx
   14002861d:	call   0x140035220
   140028622:	nop
   140028623:	jmp    0x14000e03b
   140028628:	mov    eax,0x80004003
   14002862d:	jmp    0x14000f6bf
   140028632:	mov    rdi,rbx
   140028635:	jmp    0x14000f640
   14002863a:	xor    ebx,ebx
   14002863c:	mov    r14,QWORD PTR [rsp+0x80]
   140028644:	mov    r15,QWORD PTR [rsp+0x78]
   140028649:	mov    esi,DWORD PTR [rsp+0x70]
   14002864d:	mov    rdi,QWORD PTR [rsp+0x88]
   140028655:	jmp    0x14000f648
   14002865a:	mov    rcx,rsi
   14002865d:	call   QWORD PTR [rip+0x150c5]        # 0x14003d728
   140028663:	mov    r8,r14
   140028666:	mov    rdx,r15
   140028669:	mov    rcx,rdi
   14002866c:	call   rsi
   14002866e:	nop
   14002866f:	jmp    0x14000f6b3
   140028674:	mov    rax,QWORD PTR [rdi]
   140028677:	mov    rbx,QWORD PTR [rax+0x88]
   14002867e:	mov    rcx,rbx
   140028681:	call   QWORD PTR [rip+0x150a1]        # 0x14003d728
   140028687:	mov    edx,0x1
   14002868c:	mov    rcx,rdi
   14002868f:	call   rbx
   140028691:	nop
   140028692:	jmp    0x14000f6bd
   140028697:	int3   
   140028698:	mov    rcx,rbp
   14002869b:	call   QWORD PTR [rip+0x15087]        # 0x14003d728
   1400286a1:	mov    rcx,r14
   1400286a4:	call   rbp
   1400286a6:	nop
   1400286a7:	jmp    0x14000f777
   1400286ac:	add    edi,edi
   1400286ae:	js     0x14000f84c
   1400286b4:	jmp    0x14000f7f8
   1400286b9:	int3   
   1400286ba:	xor    r9d,r9d
   1400286bd:	xor    r8d,r8d
   1400286c0:	mov    ecx,0xc000008c
   1400286c5:	lea    edx,[r9+0x1]
   1400286c9:	call   QWORD PTR [rip+0x14aa9]        # 0x14003d178
   1400286cf:	int3   
   1400286d0:	mov    rcx,rsi
   1400286d3:	call   QWORD PTR [rip+0x1504f]        # 0x14003d728
   1400286d9:	mov    rcx,rdi
   1400286dc:	call   rsi
   1400286de:	nop
   1400286df:	jmp    0x14000f905
   1400286e4:	int3   
   1400286e5:	int3   
   1400286e6:	mov    rcx,rbp
   1400286e9:	call   QWORD PTR [rip+0x15039]        # 0x14003d728
   1400286ef:	mov    rcx,rsi
   1400286f2:	call   rbp
   1400286f4:	nop
   1400286f5:	jmp    0x14000f9ea
   1400286fa:	mov    rcx,rsi
   1400286fd:	call   QWORD PTR [rip+0x15025]        # 0x14003d728
   140028703:	mov    edx,0x1
   140028708:	mov    rcx,rbx
   14002870b:	call   rsi
   14002870d:	nop
   14002870e:	jmp    0x14000fa17
   140028713:	mov    rcx,rsi
   140028716:	call   QWORD PTR [rip+0x1500c]        # 0x14003d728
   14002871c:	mov    rcx,rbx
   14002871f:	call   rsi
   140028721:	nop
   140028722:	jmp    0x14000f9ac
   140028727:	int3   
   140028728:	mov    rcx,rsi
   14002872b:	call   QWORD PTR [rip+0x14ff7]        # 0x14003d728
   140028731:	mov    rcx,rdi
   140028734:	call   rsi
   140028736:	nop
   140028737:	jmp    0x14000faaf
   14002873c:	int3   
   14002873d:	int3   
   14002873e:	mov    rcx,rdi
   140028741:	call   QWORD PTR [rip+0x14fe1]        # 0x14003d728
   140028747:	mov    rcx,rbx
   14002874a:	call   rdi
   14002874c:	nop
   14002874d:	jmp    0x14000fbff
   140028752:	xor    ebx,ebx
   140028754:	jmp    0x14000fcdc
   140028759:	lea    rcx,[rsp+0x40]
   14002875e:	call   0x140011f70
   140028763:	mov    rbx,QWORD PTR [rsp+0x40]
   140028768:	jmp    0x14000fd4a
   14002876d:	xor    bl,bl
   14002876f:	lea    rcx,[rsi+0x38]
   140028773:	call   QWORD PTR [rip+0x14c4f]        # 0x14003d3c8
   140028779:	cmp    QWORD PTR [rsi+0x18],0x0
   14002877e:	je     0x14002879e
   140028780:	lea    rcx,[rsi+0x8]
   140028784:	call   0x14000ff64
   140028789:	mov    rcx,QWORD PTR [rax]
   14002878c:	call   0x14000ff84
   140028791:	movzx  ebx,bl
   140028794:	mov    ecx,0x1
   140028799:	test   al,al
   14002879b:	cmovne ebx,ecx
   14002879e:	lea    rcx,[rsi+0x38]
   1400287a2:	call   QWORD PTR [rip+0x14c30]        # 0x14003d3d8
   1400287a8:	test   bl,bl
   1400287aa:	je     0x14000fd7d
   1400287b0:	call   0x14002e5f8
   1400287b5:	nop
   1400287b6:	jmp    0x14000fd7d
   1400287bb:	int3   
   1400287bc:	test   rdi,rdi
   1400287bf:	je     0x1400287d6
   1400287c1:	mov    rdx,QWORD PTR [rdi+0x58]
   1400287c5:	lea    rcx,[rsi+0x58]
   1400287c9:	call   0x14002c23c
   1400287ce:	test   al,al
   1400287d0:	jne    0x14000fdd8
   1400287d6:	xor    edx,edx
   1400287d8:	mov    rcx,rsi
   1400287db:	call   0x1400307a4
   1400287e0:	nop
   1400287e1:	jmp    0x14000fdd8
   1400287e6:	mov    rcx,rdi
   1400287e9:	call   QWORD PTR [rip+0x14f39]        # 0x14003d728
   1400287ef:	mov    rcx,rbx
   1400287f2:	call   rdi
   1400287f4:	nop
   1400287f5:	jmp    0x14000fe00
   1400287fa:	mov    ecx,0x8007000e
   1400287ff:	call   0x1400152fc
   140028804:	int3   
   140028805:	int3   
   140028806:	mov    ecx,0x80004005
   14002880b:	call   0x1400152fc
   140028810:	int3   
   140028811:	int3   
   140028812:	mov    ecx,0x80004005
   140028817:	call   0x1400152fc
   14002881c:	int3   
   14002881d:	int3   
   14002881e:	jmp    0x140010010
   140028823:	xor    r12b,r12b
   140028826:	jmp    0x140010049
   14002882b:	mov    rcx,rbp
   14002882e:	call   QWORD PTR [rip+0x14ef4]        # 0x14003d728
   140028834:	mov    rdx,rdi
   140028837:	mov    rcx,r14
   14002883a:	call   rbp
   14002883c:	nop
   14002883d:	jmp    0x1400100af
   140028842:	mov    rcx,rbp
   140028845:	call   QWORD PTR [rip+0x14edd]        # 0x14003d728
   14002884b:	mov    edx,0x1
   140028850:	mov    rcx,r14
   140028853:	call   rbp
   140028855:	nop
   140028856:	jmp    0x1400100e4
   14002885b:	mov    rcx,rbx
   14002885e:	call   QWORD PTR [rip+0x14ec4]        # 0x14003d728
   140028864:	mov    rcx,rdi
   140028867:	call   rbx
   140028869:	nop
   14002886a:	jmp    0x140010125
   14002886f:	int3   
   140028870:	mov    edx,esi
   140028872:	mov    rcx,rbp
   140028875:	call   0x14000f858
   14002887a:	mov    r14,QWORD PTR [rax]
   14002887d:	test   r14,r14
   140028880:	je     0x14002889b
   140028882:	mov    rax,QWORD PTR [r14]
   140028885:	mov    rbx,QWORD PTR [rax]
   140028888:	mov    rcx,rbx
   14002888b:	call   QWORD PTR [rip+0x14e97]        # 0x14003d728
   140028891:	mov    edx,0x1
   140028896:	mov    rcx,r14
   140028899:	call   rbx
   14002889b:	mov    edx,esi
   14002889d:	mov    rcx,rbp
   1400288a0:	call   0x14000f858
   1400288a5:	and    QWORD PTR [rax],0x0
   1400288a9:	inc    esi
   1400288ab:	cmp    esi,DWORD PTR [rbp+0x8]
   1400288ae:	jl     0x140028870
   1400288b0:	jmp    0x1400101cd
   1400288b5:	mov    rax,QWORD PTR [rsi]
   1400288b8:	mov    rbx,QWORD PTR [rax+0x10]
   1400288bc:	mov    rcx,rbx
   1400288bf:	call   QWORD PTR [rip+0x14e63]        # 0x14003d728
   1400288c5:	mov    rcx,rsi
   1400288c8:	call   rbx
   1400288ca:	nop
   1400288cb:	jmp    0x1400102a3
   1400288d0:	int3   
   1400288d1:	int3   
   1400288d2:	cmp    BYTE PTR [rdi+0x11a],0x0
   1400288d9:	je     0x14001034e
   1400288df:	mov    rcx,rsi
   1400288e2:	call   QWORD PTR [rip+0x14af0]        # 0x14003d3d8
   1400288e8:	mov    rax,QWORD PTR [rdi]
   1400288eb:	mov    rbx,QWORD PTR [rax+0x60]
   1400288ef:	mov    rcx,rbx
   1400288f2:	call   QWORD PTR [rip+0x14e30]        # 0x14003d728
   1400288f8:	mov    rcx,rdi
   1400288fb:	call   rbx
   1400288fd:	mov    rcx,rsi
   140028900:	call   QWORD PTR [rip+0x14ac2]        # 0x14003d3c8
   140028906:	nop
   140028907:	jmp    0x14001034e
   14002890c:	mov    rax,QWORD PTR [r14]
   14002890f:	mov    rbx,QWORD PTR [rax+0x10]
   140028913:	mov    rcx,rbx
   140028916:	call   QWORD PTR [rip+0x14e0c]        # 0x14003d728
   14002891c:	mov    rcx,r14
   14002891f:	call   rbx
   140028921:	and    QWORD PTR [rdi+0x50],0x0
   140028926:	jmp    0x14001035b
   14002892b:	int3   
   14002892c:	mov    ebx,0x80004005
   140028931:	lea    rcx,[rbp+0x58]
   140028935:	mov    WORD PTR [rbp+0x119],0x0
   14002893e:	mov    QWORD PTR [rbp+0x48],rdi
   140028942:	call   0x14000ddec
   140028947:	mov    QWORD PTR [rbp+0x120],rdi
   14002894e:	jmp    0x140010543
   140028953:	mov    rax,QWORD PTR [r15]
   140028956:	mov    rsi,QWORD PTR [rax+0x40]
   14002895a:	mov    rcx,rsi
   14002895d:	call   QWORD PTR [rip+0x14dc5]        # 0x14003d728
   140028963:	lea    r8,[rbp+0x110]
   14002896a:	mov    rcx,r15
   14002896d:	lea    rdx,[rbp+0x108]
   140028974:	call   rsi
   140028976:	nop
   140028977:	jmp    0x1400104ee
   14002897c:	mov    ebx,0x80070005
   140028981:	jmp    0x1400104fc
   140028986:	mov    rdx,r12
   140028989:	call   0x14000dcd0
   14002898e:	nop
   14002898f:	jmp    0x140010533
   140028994:	mov    rcx,rbx
   140028997:	call   QWORD PTR [rip+0x14d8b]        # 0x14003d728
   14002899d:	xor    edx,edx
   14002899f:	mov    rcx,rsi
   1400289a2:	call   rbx
   1400289a4:	nop
   1400289a5:	jmp    0x14001067f
   1400289aa:	mov    rcx,rbx
   1400289ad:	call   QWORD PTR [rip+0x14d75]        # 0x14003d728
   1400289b3:	xor    r8d,r8d
   1400289b6:	xor    edx,edx
   1400289b8:	mov    rcx,rsi
   1400289bb:	call   rbx
   1400289bd:	nop
   1400289be:	jmp    0x1400106a3
   1400289c3:	mov    ecx,0x38
   1400289c8:	call   0x140013d94
   1400289cd:	mov    QWORD PTR [rsp+0x70],rax
   1400289d2:	test   rax,rax
   1400289d5:	je     0x1400289e4
   1400289d7:	mov    rcx,rax
   1400289da:	call   0x140030fb4
   1400289df:	mov    r14,rax
   1400289e2:	jmp    0x1400289e7
   1400289e4:	mov    r14,rbx
   1400289e7:	test   r14,r14
   1400289ea:	je     0x140028a5a
   1400289ec:	mov    edi,ebx
   1400289ee:	cmp    DWORD PTR [rsp+0x90],ebx
   1400289f5:	setne  r15b
   1400289f9:	mov    ebx,DWORD PTR [rsp+0x98]
   140028a00:	test   ebx,ebx
   140028a02:	je     0x140028a19
   140028a04:	mov    edx,0x10
   140028a09:	mov    BYTE PTR [rsp+0x20],dil
   140028a0e:	xor    r9d,r9d
   140028a11:	mov    rcx,r14
   140028a14:	call   0x14003142c
   140028a19:	mov    BYTE PTR [rsp+0x20],dil
   140028a1e:	mov    r9b,r15b
   140028a21:	movzx  edx,bp
   140028a24:	mov    rcx,r14
   140028a27:	call   0x14003142c
   140028a2c:	mov    BYTE PTR [rsp+0x20],0x1
   140028a31:	mov    r9b,r15b
   140028a34:	movzx  edx,bp
   140028a37:	mov    rcx,r14
   140028a3a:	call   0x14003142c
   140028a3f:	test   ebx,ebx
   140028a41:	je     0x140028a64
   140028a43:	mov    edx,0x10
   140028a48:	mov    BYTE PTR [rsp+0x20],0x1
   140028a4d:	xor    r9d,r9d
   140028a50:	mov    rcx,r14
   140028a53:	call   0x14003142c
   140028a58:	jmp    0x140028a64
   140028a5a:	mov    edi,0x8007000e
   140028a5f:	jmp    0x14001071f
   140028a64:	xor    ebx,ebx
   140028a66:	jmp    0x1400106bb
   140028a6b:	mov    r15,rbx
   140028a6e:	jmp    0x1400106e7
   140028a73:	mov    edi,0x8007000e
   140028a78:	jmp    0x1400106f3
   140028a7d:	mov    rax,QWORD PTR [r15]
   140028a80:	mov    rbx,QWORD PTR [rax]
   140028a83:	mov    rcx,rbx
   140028a86:	call   QWORD PTR [rip+0x14c9c]        # 0x14003d728
   140028a8c:	mov    edx,0x1
   140028a91:	mov    rcx,r15
   140028a94:	call   rbx
   140028a96:	nop
   140028a97:	jmp    0x14001071f
   140028a9c:	mov    rax,QWORD PTR [r14]
   140028a9f:	mov    rbx,QWORD PTR [rax]
   140028aa2:	mov    rcx,rbx
   140028aa5:	call   QWORD PTR [rip+0x14c7d]        # 0x14003d728
   140028aab:	mov    edx,0x1
   140028ab0:	mov    rcx,r14
   140028ab3:	call   rbx
   140028ab5:	nop
   140028ab6:	jmp    0x140010728
   140028abb:	mov    rcx,rbx
   140028abe:	call   QWORD PTR [rip+0x14c64]        # 0x14003d728
   140028ac4:	mov    rcx,rsi
   140028ac7:	call   rbx
   140028ac9:	nop
   140028aca:	jmp    0x14001074f
   140028acf:	mov    rax,QWORD PTR [rsi]
   140028ad2:	mov    rbx,QWORD PTR [rax+0x60]
   140028ad6:	mov    rcx,rbx
   140028ad9:	call   QWORD PTR [rip+0x14c49]        # 0x14003d728
   140028adf:	mov    rcx,rsi
   140028ae2:	call   rbx
   140028ae4:	nop
   140028ae5:	jmp    0x140010759
   140028aea:	mov    rdi,QWORD PTR [rip+0x2606f]        # 0x14004eb60
   140028af1:	mov    rax,QWORD PTR [rdi]
   140028af4:	mov    rbx,QWORD PTR [rax+0x8]
   140028af8:	mov    rcx,rbx
   140028afb:	call   QWORD PTR [rip+0x14c27]        # 0x14003d728
   140028b01:	mov    rcx,rdi
   140028b04:	call   rbx
   140028b06:	nop
   140028b07:	test   r14,r14
   140028b0a:	je     0x140028b27
   140028b0c:	mov    rax,QWORD PTR [r14]
   140028b0f:	mov    rbx,QWORD PTR [rax+0x18]
   140028b13:	mov    rcx,rbx
   140028b16:	call   QWORD PTR [rip+0x14c0c]        # 0x14003d728
   140028b1c:	mov    edx,0x1
   140028b21:	mov    rcx,r14
   140028b24:	call   rbx
   140028b26:	nop
   140028b27:	mov    rdi,QWORD PTR [rip+0x26032]        # 0x14004eb60
   140028b2e:	mov    rdx,QWORD PTR [rdi]
   140028b31:	mov    rbx,QWORD PTR [rdx+0x10]
   140028b35:	mov    rcx,rbx
   140028b38:	call   QWORD PTR [rip+0x14bea]        # 0x14003d728
   140028b3e:	mov    rcx,rdi
   140028b41:	call   rbx
   140028b43:	nop
   140028b44:	jmp    0x1400107c4
   140028b49:	int3   
   140028b4a:	mov    rcx,rsi
   140028b4d:	call   QWORD PTR [rip+0x14bd5]        # 0x14003d728
   140028b53:	mov    rcx,rdi
   140028b56:	call   rsi
   140028b58:	nop
   140028b59:	jmp    0x1400108a5
   140028b5e:	int3   
   140028b5f:	int3   
   140028b60:	mov    rcx,rbx
   140028b63:	call   QWORD PTR [rip+0x14bbf]        # 0x14003d728
   140028b69:	mov    r8d,ebp
   140028b6c:	mov    rdx,r14
   140028b6f:	mov    rcx,rsi
   140028b72:	call   rbx
   140028b74:	nop
   140028b75:	jmp    0x14001090b
   140028b7a:	cmp    eax,0x80040208
   140028b7f:	je     0x140028b90
   140028b81:	test   eax,eax
   140028b83:	js     0x140010916
   140028b89:	mov    ecx,0x1e
   140028b8e:	jmp    0x140028b95
   140028b90:	mov    ecx,0x64
   140028b95:	call   QWORD PTR [rip+0x14815]        # 0x14003d3b0
   140028b9b:	mov    rdi,QWORD PTR [rdi+0x18]
   140028b9f:	mov    rax,QWORD PTR [rdi]
   140028ba2:	mov    rbx,QWORD PTR [rax+0x8]
   140028ba6:	mov    rcx,rbx
   140028ba9:	call   QWORD PTR [rip+0x14b79]        # 0x14003d728
   140028baf:	mov    rdx,rsi
   140028bb2:	mov    rcx,rdi
   140028bb5:	call   rbx
   140028bb7:	nop
   140028bb8:	jmp    0x140010916
   140028bbd:	int3   
   140028bbe:	mov    rax,QWORD PTR [rsi]
   140028bc1:	mov    rbx,QWORD PTR [rax]
   140028bc4:	mov    rcx,rbx
   140028bc7:	call   QWORD PTR [rip+0x14b5b]        # 0x14003d728
   140028bcd:	mov    edx,0x1
   140028bd2:	mov    rcx,rsi
   140028bd5:	call   rbx
   140028bd7:	and    QWORD PTR [rdi+0x18],0x0
   140028bdc:	jmp    0x14001096e
   140028be1:	int3   
   140028be2:	cmp    r14d,0x5
   140028be6:	jge    0x140010ac5
   140028bec:	mov    ecx,0x64
   140028bf1:	call   QWORD PTR [rip+0x147b9]        # 0x14003d3b0
   140028bf7:	mov    rax,QWORD PTR [rdi]
   140028bfa:	mov    rbx,QWORD PTR [rax+0x28]
   140028bfe:	mov    rcx,rbx
   140028c01:	call   QWORD PTR [rip+0x14b21]        # 0x14003d728
   140028c07:	mov    r8d,r15d
   140028c0a:	mov    rdx,r12
   140028c0d:	mov    rcx,rdi
   140028c10:	call   rbx
   140028c12:	inc    r14d
   140028c15:	jmp    0x140010ab8
   140028c1a:	or     DWORD PTR [rbp+0x118],0x20
   140028c21:	call   0x14000e048
   140028c26:	mov    rbx,rax
   140028c29:	test   rax,rax
   140028c2c:	je     0x140010af5
   140028c32:	xor    r9d,r9d
   140028c35:	mov    BYTE PTR [rsp+0x20],0x1
   140028c3a:	xor    r8d,r8d
   140028c3d:	xor    edx,edx
   140028c3f:	mov    rcx,rax
   140028c42:	call   0x140012368
   140028c47:	mov    rcx,rbx
   140028c4a:	call   0x14000dc9c
   140028c4f:	nop
   140028c50:	jmp    0x140010af5
   140028c55:	int3   
   140028c56:	mov    rax,QWORD PTR [r14]
   140028c59:	mov    rbx,QWORD PTR [rax+0x8]
   140028c5d:	mov    rcx,rbx
   140028c60:	call   QWORD PTR [rip+0x14ac2]        # 0x14003d728
   140028c66:	mov    rcx,r14
   140028c69:	call   rbx
   140028c6b:	nop
   140028c6c:	jmp    0x140010b6f
   140028c71:	int3   
   140028c72:	mov    rdx,QWORD PTR [rsi+0x170]
   140028c79:	lea    rcx,[rbp+0x40]
   140028c7d:	mov    QWORD PTR [rbp+0x40],rbx
   140028c81:	mov    rdi,rbx
   140028c84:	mov    QWORD PTR [rbp+0x60],rbx
   140028c88:	mov    QWORD PTR [rbp+0x48],rbx
   140028c8c:	call   0x14002edfc
   140028c91:	test   eax,eax
   140028c93:	js     0x140028ced
   140028c95:	mov    rdx,QWORD PTR [rsi+0x178]
   140028c9c:	lea    rcx,[rbp+0x60]
   140028ca0:	call   0x14002edfc
   140028ca5:	test   eax,eax
   140028ca7:	js     0x140028ce9
   140028ca9:	mov    rdx,QWORD PTR [rsi+0x180]
   140028cb0:	lea    rcx,[rbp+0x48]
   140028cb4:	call   0x14002edfc
   140028cb9:	test   eax,eax
   140028cbb:	js     0x140028ce5
   140028cbd:	mov    rax,QWORD PTR [rbp+0x40]
   140028cc1:	mov    rcx,QWORD PTR [rbp+0x68]
   140028cc5:	mov    QWORD PTR [r15],rax
   140028cc8:	mov    rax,QWORD PTR [rbp+0x60]
   140028ccc:	mov    QWORD PTR [r13+0x0],rax
   140028cd0:	mov    rax,QWORD PTR [rbp+0x48]
   140028cd4:	mov    QWORD PTR [rcx],rax
   140028cd7:	mov    DWORD PTR [r12],0x1
   140028cdf:	mov    QWORD PTR [rbp+0x40],rbx
   140028ce3:	jmp    0x140028ced
   140028ce5:	mov    rbx,QWORD PTR [rbp+0x48]
   140028ce9:	mov    rdi,QWORD PTR [rbp+0x60]
   140028ced:	mov    rcx,rbx
   140028cf0:	call   QWORD PTR [rip+0x2a3ca]        # 0x1400530c0
   140028cf6:	mov    rcx,rdi
   140028cf9:	call   QWORD PTR [rip+0x2a3c1]        # 0x1400530c0
   140028cff:	mov    rcx,QWORD PTR [rbp+0x40]
   140028d03:	call   QWORD PTR [rip+0x2a3b7]        # 0x1400530c0
   140028d09:	nop
   140028d0a:	jmp    0x140010cbf
   140028d0f:	int3   
   140028d10:	mov    rax,QWORD PTR [rsp+0x58]
   140028d15:	mov    ecx,0x1
   140028d1a:	mov    DWORD PTR [r15],ecx
   140028d1d:	mov    DWORD PTR [rax],ecx
   140028d1f:	mov    eax,DWORD PTR [rbx+0x154]
   140028d25:	mov    DWORD PTR [r14],eax
   140028d28:	mov    eax,DWORD PTR [rbx+0x158]
   140028d2e:	mov    DWORD PTR [rsi],eax
   140028d30:	mov    rax,QWORD PTR [rsp+0x50]
   140028d35:	mov    ecx,DWORD PTR [rbx+0x15c]
   140028d3b:	mov    DWORD PTR [rax],ecx
   140028d3d:	jmp    0x140010db1
   140028d42:	and    QWORD PTR [r14],0x0
   140028d46:	mov    rax,QWORD PTR [rsi]
   140028d49:	mov    rbx,QWORD PTR [rax+0x10]
   140028d4d:	mov    rcx,rbx
   140028d50:	call   QWORD PTR [rip+0x149d2]        # 0x14003d728
   140028d56:	mov    rcx,rsi
   140028d59:	call   rbx
   140028d5b:	nop
   140028d5c:	jmp    0x140010f17
   140028d61:	mov    rcx,rbp
   140028d64:	call   0x140031fd0
   140028d69:	jmp    0x140028d84
   140028d6b:	mov    rcx,rbx
   140028d6e:	call   QWORD PTR [rip+0x2a29c]        # 0x140053010
   140028d74:	test   eax,eax
   140028d76:	je     0x140010f52
   140028d7c:	mov    rcx,rbx
   140028d7f:	call   0x140031f2c
   140028d84:	mov    r15,rax
   140028d87:	test   rax,rax
   140028d8a:	je     0x140010f52
   140028d90:	mov    rcx,QWORD PTR [rax]
   140028d93:	mov    rbx,QWORD PTR [rcx]
   140028d96:	mov    rcx,rbx
   140028d99:	call   QWORD PTR [rip+0x14989]        # 0x14003d728
   140028d9f:	mov    r8,r14
   140028da2:	lea    rdx,[rip+0x16e0f]        # 0x14003fbb8
   140028da9:	mov    rcx,r15
   140028dac:	call   rbx
   140028dae:	mov    rcx,QWORD PTR [r15]
   140028db1:	mov    rbx,QWORD PTR [rcx+0x10]
   140028db5:	mov    rcx,rbx
   140028db8:	call   QWORD PTR [rip+0x1496a]        # 0x14003d728
   140028dbe:	mov    rcx,r15
   140028dc1:	call   rbx
   140028dc3:	nop
   140028dc4:	jmp    0x140010f52
   140028dc9:	mov    rcx,QWORD PTR [rax]
   140028dcc:	mov    rbx,QWORD PTR [rcx]
   140028dcf:	mov    rcx,rbx
   140028dd2:	call   QWORD PTR [rip+0x14950]        # 0x14003d728
   140028dd8:	mov    r8,r14
   140028ddb:	lea    rdx,[rip+0x16dd6]        # 0x14003fbb8
   140028de2:	mov    rcx,r15
   140028de5:	call   rbx
   140028de7:	mov    rcx,QWORD PTR [r15]
   140028dea:	mov    rbx,QWORD PTR [rcx+0x10]
   140028dee:	mov    rcx,rbx
   140028df1:	call   QWORD PTR [rip+0x14931]        # 0x14003d728
   140028df7:	mov    rcx,r15
   140028dfa:	call   rbx
   140028dfc:	nop
   140028dfd:	jmp    0x140010f76
   140028e02:	mov    rdx,QWORD PTR [rsp+0xa8]
   140028e0a:	test   rdx,rdx
   140028e0d:	je     0x140028e1b
   140028e0f:	mov    rcx,rbx
   140028e12:	call   0x14002edfc
   140028e17:	test   eax,eax
   140028e19:	js     0x140028e55
   140028e1b:	mov    rdx,QWORD PTR [rsp+0xb0]
   140028e23:	test   rdx,rdx
   140028e26:	je     0x140028e34
   140028e28:	mov    rcx,r14
   140028e2b:	call   0x14002edfc
   140028e30:	test   eax,eax
   140028e32:	js     0x140028e55
   140028e34:	mov    rdx,QWORD PTR [rsp+0xb8]
   140028e3c:	test   rdx,rdx
   140028e3f:	je     0x140010ff9
   140028e45:	mov    rcx,r15
   140028e48:	call   0x14002edfc
   140028e4d:	test   eax,eax
   140028e4f:	jns    0x140010ff9
   140028e55:	and    DWORD PTR [rdi+0x16c],0x0
   140028e5c:	jmp    0x140010ff9
   140028e61:	int3   
   140028e62:	mov    eax,0x80070057
   140028e67:	jmp    0x140011218
   140028e6c:	mov    r14,rax
   140028e6f:	mov    rax,QWORD PTR [rax]
   140028e72:	mov    rdi,QWORD PTR [rax+0x8]
   140028e76:	mov    rcx,rdi
   140028e79:	call   QWORD PTR [rip+0x148a9]        # 0x14003d728
   140028e7f:	mov    rcx,r14
   140028e82:	call   rdi
   140028e84:	nop
   140028e85:	jmp    0x1400110fd
   140028e8a:	cmp    eax,0x1f4
   140028e8f:	jae    0x1400111bb
   140028e95:	cmp    ecx,0xfffffe0b
   140028e9b:	jbe    0x1400111bb
   140028ea1:	jmp    0x14001111d
   140028ea6:	mov    rcx,rdi
   140028ea9:	call   QWORD PTR [rip+0x14879]        # 0x14003d728
   140028eaf:	mov    rax,QWORD PTR [rsp+0x100]
   140028eb7:	mov    QWORD PTR [rsp+0x58],rax
   140028ebc:	mov    rax,QWORD PTR [rsp+0xf8]
   140028ec4:	mov    QWORD PTR [rsp+0x50],rax
   140028ec9:	mov    rax,QWORD PTR [rsp+0xf0]
   140028ed1:	mov    QWORD PTR [rsp+0x48],rax
   140028ed6:	mov    eax,DWORD PTR [rsp+0xe8]
   140028edd:	mov    DWORD PTR [rsp+0x40],eax
   140028ee1:	mov    eax,DWORD PTR [rsp+0xe0]
   140028ee8:	mov    DWORD PTR [rsp+0x38],eax
   140028eec:	mov    rax,QWORD PTR [rsp+0xd0]
   140028ef4:	mov    QWORD PTR [rsp+0x30],rax
   140028ef9:	mov    rax,QWORD PTR [rsp+0xc8]
   140028f01:	mov    QWORD PTR [rsp+0x28],rax
   140028f06:	mov    rax,QWORD PTR [rsp+0xc0]
   140028f0e:	mov    QWORD PTR [rsp+0x20],rax
   140028f13:	mov    r9,r13
   140028f16:	mov    r8,QWORD PTR [rsp+0xb0]
   140028f1e:	mov    edx,ebp
   140028f20:	lea    rcx,[rsi-0x80]
   140028f24:	call   rdi
   140028f26:	nop
   140028f27:	jmp    0x1400111b8
   140028f2c:	mov    rax,QWORD PTR [r14]
   140028f2f:	mov    rbx,QWORD PTR [rax+0x10]
   140028f33:	mov    rcx,rbx
   140028f36:	call   QWORD PTR [rip+0x147ec]        # 0x14003d728
   140028f3c:	mov    rcx,r14
   140028f3f:	call   rbx
   140028f41:	nop
   140028f42:	jmp    0x140011216
   140028f47:	int3   
   140028f48:	mov    ecx,0x8007000e
   140028f4d:	call   0x1400152fc
   140028f52:	int3   
   140028f53:	int3   
   140028f54:	mov    eax,0x8007000e
   140028f59:	jmp    0x1400117af
   140028f5e:	cmp    eax,0xc
   140028f61:	je     0x140028f8c
   140028f63:	cmp    eax,0x16
   140028f66:	je     0x140028f81
   140028f68:	cmp    eax,0x22
   140028f6b:	je     0x140028f81
   140028f6d:	cmp    eax,0x50
   140028f70:	je     0x140011778
   140028f76:	mov    ecx,0x80004005
   140028f7b:	call   0x1400152fc
   140028f80:	int3   
   140028f81:	mov    ecx,0x80070057
   140028f86:	call   0x1400152fc
   140028f8b:	int3   
   140028f8c:	mov    ecx,0x8007000e
   140028f91:	call   0x1400152fc
   140028f96:	int3   
   140028f97:	cmp    eax,0xc
   140028f9a:	je     0x140028fc5
   140028f9c:	cmp    eax,0x16
   140028f9f:	je     0x140028fba
   140028fa1:	cmp    eax,0x22
   140028fa4:	je     0x140028fba
   140028fa6:	cmp    eax,0x50
   140028fa9:	je     0x140011798
   140028faf:	mov    ecx,0x80004005
   140028fb4:	call   0x1400152fc
   140028fb9:	int3   
   140028fba:	mov    ecx,0x80070057
   140028fbf:	call   0x1400152fc
   140028fc4:	int3   
   140028fc5:	mov    ecx,0x8007000e
   140028fca:	call   0x1400152fc
   140028fcf:	int3   
   140028fd0:	mov    eax,0x80004003
   140028fd5:	jmp    0x1400118e0
   140028fda:	mov    rdi,rbx
   140028fdd:	jmp    0x140011870
   140028fe2:	xor    ebx,ebx
   140028fe4:	mov    r14,QWORD PTR [rsp+0x80]
   140028fec:	mov    r15,QWORD PTR [rsp+0x78]
   140028ff1:	mov    esi,DWORD PTR [rsp+0x70]
   140028ff5:	mov    rdi,QWORD PTR [rsp+0x88]
   140028ffd:	jmp    0x140011878
   140029002:	mov    rcx,rsi
   140029005:	call   QWORD PTR [rip+0x1471d]        # 0x14003d728
   14002900b:	mov    r8,r14
   14002900e:	mov    rdx,r15
   140029011:	mov    rcx,rdi
   140029014:	call   rsi
   140029016:	nop
   140029017:	jmp    0x1400118d4
   14002901c:	mov    rax,QWORD PTR [rdi]
   14002901f:	mov    rbx,QWORD PTR [rax+0x18]
   140029023:	mov    rcx,rbx
   140029026:	call   QWORD PTR [rip+0x146fc]        # 0x14003d728
   14002902c:	mov    edx,0x1
   140029031:	mov    rcx,rdi
   140029034:	call   rbx
   140029036:	nop
   140029037:	jmp    0x1400118de
   14002903c:	lea    rdx,[rip+0x1a41d]        # 0x140043460
   140029043:	lea    rcx,[rsp+0x20]
   140029048:	call   0x1400156fe
   14002904d:	test   eax,eax
   14002904f:	je     0x140011965
   140029055:	jmp    0x14001198f
   14002905a:	mov    rcx,rdi
   14002905d:	call   QWORD PTR [rip+0x146c5]        # 0x14003d728
   140029063:	mov    rcx,rbx
   140029066:	call   rdi
   140029068:	nop
   140029069:	jmp    0x1400119ff
   14002906e:	mov    r8,rsi
   140029071:	mov    rdx,rax
   140029074:	mov    rcx,rbx
   140029077:	call   0x14003280c
   14002907c:	nop
   14002907d:	jmp    0x140011a31
   140029082:	mov    rcx,rdi
   140029085:	call   QWORD PTR [rip+0x1469d]        # 0x14003d728
   14002908b:	mov    rcx,rbx
   14002908e:	call   rdi
   140029090:	nop
   140029091:	jmp    0x140011a2f
   140029096:	and    QWORD PTR [rsp+0x30],r15
   14002909b:	and    DWORD PTR [rsp+0x28],r15d
   1400290a0:	mov    DWORD PTR [rsp+0x20],0x3
   1400290a8:	xor    r9d,r9d
   1400290ab:	mov    edx,0x80000000
   1400290b0:	lea    r8d,[r9+0x1]
   1400290b4:	mov    rcx,QWORD PTR [rbp+0x38]
   1400290b8:	call   QWORD PTR [rip+0x140ca]        # 0x14003d188
   1400290be:	mov    r15,rax
   1400290c1:	cmp    rax,0xffffffffffffffff
   1400290c5:	je     0x1400290e2
   1400290c7:	lea    r9,[rbp-0x18]
   1400290cb:	xor    r8d,r8d
   1400290ce:	xor    edx,edx
   1400290d0:	mov    rcx,rax
   1400290d3:	call   QWORD PTR [rip+0x140b7]        # 0x14003d190
   1400290d9:	mov    rcx,r15
   1400290dc:	call   QWORD PTR [rip+0x140c6]        # 0x14003d1a8
   1400290e2:	lea    rcx,[rip+0x25fd7]        # 0x14004f0c0
   1400290e9:	call   QWORD PTR [rip+0x142d9]        # 0x14003d3c8
   1400290ef:	lea    r8,[rbp-0x18]
   1400290f3:	lea    rdx,[rbp+0x38]
   1400290f7:	call   0x14003719c
   1400290fc:	mov    r15,rax
   1400290ff:	test   rax,rax
   140029102:	je     0x14002910f
   140029104:	inc    DWORD PTR [rax+0xa0]
   14002910a:	jmp    0x14002919a
   14002910f:	lea    rdx,[rbp+0x48]
   140029113:	mov    rcx,QWORD PTR [rbp+0x40]
   140029117:	call   0x140036b00
   14002911c:	test   al,al
   14002911e:	je     0x140029196
   140029120:	mov    ecx,0xb0
   140029125:	call   0x140013d94
   14002912a:	mov    QWORD PTR [rbp-0x8],rax
   14002912e:	mov    rbx,QWORD PTR [rbp+0x48]
   140029132:	test   rax,rax
   140029135:	je     0x140029162
   140029137:	lea    rcx,[rbp-0x18]
   14002913b:	mov    QWORD PTR [rsp+0x30],rcx
   140029140:	mov    QWORD PTR [rsp+0x28],rbx
   140029145:	mov    QWORD PTR [rsp+0x20],r14
   14002914a:	mov    r9,QWORD PTR [rbp+0x38]
   14002914e:	mov    r8,QWORD PTR [rbp+0x40]
   140029152:	mov    rdx,r12
   140029155:	mov    rcx,rax
   140029158:	call   0x140035ba4
   14002915d:	mov    r15,rax
   140029160:	jmp    0x140029165
   140029162:	xor    r15d,r15d
   140029165:	inc    DWORD PTR [r15+0xa0]
   14002916c:	mov    rcx,r15
   14002916f:	call   0x140036608
   140029174:	test   eax,eax
   140029176:	jns    0x140029183
   140029178:	mov    rcx,r15
   14002917b:	call   0x140038248
   140029180:	xor    r15d,r15d
   140029183:	test   r15,r15
   140029186:	je     0x14002919a
   140029188:	mov    r8,r15
   14002918b:	lea    rdx,[rbp+0x38]
   14002918f:	call   0x14003630c
   140029194:	jmp    0x14002919a
   140029196:	mov    rbx,QWORD PTR [rbp+0x48]
   14002919a:	lea    rcx,[rip+0x25f1f]        # 0x14004f0c0
   1400291a1:	call   QWORD PTR [rip+0x14231]        # 0x14003d3d8
   1400291a7:	nop
   1400291a8:	jmp    0x140011abc
   1400291ad:	int3   
   1400291ae:	call   QWORD PTR [rip+0x13ff4]        # 0x14003d1a8
   1400291b4:	and    QWORD PTR [rdi+0xe0],0x0
   1400291bc:	jmp    0x140011b43
   1400291c1:	mov    rax,QWORD PTR [rsi]
   1400291c4:	mov    rbx,QWORD PTR [rax+0x10]
   1400291c8:	mov    rcx,rbx
   1400291cb:	call   QWORD PTR [rip+0x14557]        # 0x14003d728
   1400291d1:	mov    rcx,rsi
   1400291d4:	call   rbx
   1400291d6:	nop
   1400291d7:	jmp    0x140011b65
   1400291dc:	mov    rax,QWORD PTR [rsi]
   1400291df:	mov    rbx,QWORD PTR [rax+0x10]
   1400291e3:	mov    rcx,rbx
   1400291e6:	call   QWORD PTR [rip+0x1453c]        # 0x14003d728
   1400291ec:	mov    rcx,rsi
   1400291ef:	call   rbx
   1400291f1:	nop
   1400291f2:	jmp    0x140011b75
   1400291f7:	mov    rax,QWORD PTR [rsi]
   1400291fa:	mov    rbx,QWORD PTR [rax+0x10]
   1400291fe:	mov    rcx,rbx
   140029201:	call   QWORD PTR [rip+0x14521]        # 0x14003d728
   140029207:	mov    rcx,rsi
   14002920a:	call   rbx
   14002920c:	nop
   14002920d:	jmp    0x140011b85
   140029212:	mov    rax,QWORD PTR [rsi]
   140029215:	mov    rbx,QWORD PTR [rax+0x10]
   140029219:	mov    rcx,rbx
   14002921c:	call   QWORD PTR [rip+0x14506]        # 0x14003d728
   140029222:	mov    rcx,rsi
   140029225:	call   rbx
   140029227:	nop
   140029228:	jmp    0x140011bbd
   14002922d:	int3   
   14002922e:	mov    rcx,QWORD PTR [rbx+0x40]
   140029232:	call   QWORD PTR [rip+0x14410]        # 0x14003d648
   140029238:	mov    BYTE PTR [rbx+0x48],0x0
   14002923c:	jmp    0x14000e12f
   140029241:	mov    rcx,QWORD PTR [rbx+0x28]
   140029245:	lea    rdx,[rbx+0x8]
   140029249:	mov    DWORD PTR [rbx],0x2
   14002924f:	call   0x14002a530
   140029254:	nop
   140029255:	jmp    0x14000e13d
   14002925a:	mov    ecx,0x7
   14002925f:	int    0x29
   140029261:	jmp    0x14000e161
   140029266:	cmp    eax,DWORD PTR [rdi+0x5c]
   140029269:	jne    0x14000e231
   14002926f:	add    rdi,0x58
   140029273:	jmp    0x14000e233
   140029278:	mov    rax,QWORD PTR [rbx+0x30]
   14002927c:	mov    r10,QWORD PTR [rax+0x28]
   140029280:	cmp    DWORD PTR [r10],0x5
   140029284:	jbe    0x14000e24e
   14002928a:	movabs rdx,0x200000000000
   140029294:	mov    rcx,r10
   140029297:	call   0x14000130c
   14002929c:	test   al,al
   14002929e:	je     0x14000e24e
   1400292a4:	mov    eax,DWORD PTR [rdi+0x4]
   1400292a7:	lea    rcx,[rbp-0x40]
   1400292ab:	mov    rdx,QWORD PTR [rdi+0x30]
   1400292af:	mov    esi,0x4
   1400292b4:	and    DWORD PTR [rbp-0x44],0x0
   1400292b8:	mov    DWORD PTR [rsp+0x38],eax
   1400292bc:	lea    rax,[rsp+0x38]
   1400292c1:	mov    QWORD PTR [rbp-0x50],rax
   1400292c5:	mov    DWORD PTR [rbp-0x48],esi
   1400292c8:	call   0x14002dfd8
   1400292cd:	mov    rdx,QWORD PTR [rdi+0x78]
   1400292d1:	lea    rcx,[rdi+0x38]
   1400292d5:	and    DWORD PTR [rbp-0x24],0x0
   1400292d9:	mov    QWORD PTR [rbp-0x30],rcx
   1400292dd:	lea    rcx,[rbp-0x20]
   1400292e1:	mov    DWORD PTR [rbp-0x28],esi
   1400292e4:	call   0x14002dfd8
   1400292e9:	mov    ecx,DWORD PTR [rdi]
   1400292eb:	lea    rax,[rsp+0x40]
   1400292f0:	mov    rdx,QWORD PTR [rdi+0x10]
   1400292f4:	and    DWORD PTR [rbp-0x4],0x0
   1400292f8:	mov    DWORD PTR [rsp+0x40],ecx
   1400292fc:	lea    rcx,[rbp+0x0]
   140029300:	mov    QWORD PTR [rbp-0x10],rax
   140029304:	mov    DWORD PTR [rbp-0x8],esi
   140029307:	call   0x14002e00c
   14002930c:	mov    ecx,DWORD PTR [rdi+0x18]
   14002930f:	lea    rax,[rsp+0x3c]
   140029314:	mov    rdx,QWORD PTR [rdi+0x40]
   140029318:	and    DWORD PTR [rbp+0x1c],0x0
   14002931c:	mov    DWORD PTR [rsp+0x3c],ecx
   140029320:	lea    rcx,[rbp+0x20]
   140029324:	mov    QWORD PTR [rbp+0x10],rax
   140029328:	mov    DWORD PTR [rbp+0x18],esi
   14002932b:	call   0x14002dfd8
   140029330:	mov    ecx,DWORD PTR [rdi+0x48]
   140029333:	lea    rax,[rsp+0x30]
   140029338:	mov    rdx,QWORD PTR [rdi+0x50]
   14002933c:	and    DWORD PTR [rbp+0x3c],0x0
   140029340:	mov    DWORD PTR [rsp+0x30],ecx
   140029344:	lea    rcx,[rbp+0x40]
   140029348:	mov    QWORD PTR [rbp+0x30],rax
   14002934c:	mov    DWORD PTR [rbp+0x38],esi
   14002934f:	call   0x14002dfd8
   140029354:	mov    rdx,QWORD PTR [rdi+0x58]
   140029358:	lea    rcx,[rbp+0x50]
   14002935c:	call   0x14002e00c
   140029361:	mov    ecx,DWORD PTR [rdi+0x60]
   140029364:	lea    rax,[rsp+0x34]
   140029369:	mov    rdx,QWORD PTR [rdi+0x68]
   14002936d:	and    DWORD PTR [rbp+0x6c],0x0
   140029371:	mov    DWORD PTR [rsp+0x34],ecx
   140029375:	lea    rcx,[rbp+0x70]
   140029379:	mov    QWORD PTR [rbp+0x60],rax
   14002937d:	mov    DWORD PTR [rbp+0x68],esi
   140029380:	call   0x14002dfd8
   140029385:	mov    rdx,QWORD PTR [rdi+0x70]
   140029389:	lea    rcx,[rbp+0x80]
   140029390:	call   0x14002e00c
   140029395:	lea    rax,[rbp-0x70]
   140029399:	mov    rcx,r10
   14002939c:	mov    QWORD PTR [rsp+0x28],rax
   1400293a1:	lea    rdx,[rip+0x18eb7]        # 0x14004225f
   1400293a8:	mov    DWORD PTR [rsp+0x20],0x10
   1400293b0:	jmp    0x14000e2e6
   1400293b5:	int3   
   1400293b6:	cmp    eax,DWORD PTR [rdi+0x5c]
   1400293b9:	jne    0x14000e536
   1400293bf:	add    rdi,0x58
   1400293c3:	jmp    0x14000e539
   1400293c8:	mov    rax,QWORD PTR [rbx+0x30]
   1400293cc:	mov    r10,QWORD PTR [rax+0x28]
   1400293d0:	cmp    DWORD PTR [r10],0x5
   1400293d4:	jbe    0x14000e554
   1400293da:	movabs rdx,0x200000000000
   1400293e4:	mov    rcx,r10
   1400293e7:	call   0x14000130c
   1400293ec:	test   al,al
   1400293ee:	je     0x14000e554
   1400293f4:	mov    eax,DWORD PTR [rdi+0x4]
   1400293f7:	lea    rcx,[rbp-0x50]
   1400293fb:	mov    rdx,QWORD PTR [rdi+0x30]
   1400293ff:	mov    DWORD PTR [rsp+0x5c],eax
   140029403:	lea    rax,[rsp+0x5c]
   140029408:	mov    QWORD PTR [rbp-0x60],rax
   14002940c:	mov    QWORD PTR [rbp-0x58],0x4
   140029414:	call   0x14002dfd8
   140029419:	mov    rdx,QWORD PTR [rdi+0x78]
   14002941d:	lea    rcx,[rdi+0x38]
   140029421:	mov    QWORD PTR [rbp-0x40],rcx
   140029425:	lea    rcx,[rbp-0x30]
   140029429:	mov    QWORD PTR [rbp-0x38],0x4
   140029431:	call   0x14002dfd8
   140029436:	mov    ecx,DWORD PTR [rdi]
   140029438:	lea    rax,[rsp+0x60]
   14002943d:	mov    rdx,QWORD PTR [rdi+0x10]
   140029441:	mov    DWORD PTR [rsp+0x60],ecx
   140029445:	lea    rcx,[rbp-0x10]
   140029449:	mov    QWORD PTR [rbp-0x20],rax
   14002944d:	mov    QWORD PTR [rbp-0x18],0x4
   140029455:	call   0x14002e00c
   14002945a:	mov    ecx,DWORD PTR [rdi+0x18]
   14002945d:	lea    rax,[rsp+0x58]
   140029462:	mov    rdx,QWORD PTR [rdi+0x40]
   140029466:	mov    DWORD PTR [rsp+0x58],ecx
   14002946a:	lea    rcx,[rbp+0x10]
   14002946e:	mov    QWORD PTR [rbp+0x0],rax
   140029472:	mov    QWORD PTR [rbp+0x8],0x4
   14002947a:	call   0x14002dfd8
   14002947f:	mov    ecx,DWORD PTR [rdi+0x48]
   140029482:	lea    rax,[rsp+0x50]
   140029487:	mov    rdx,QWORD PTR [rdi+0x50]
   14002948b:	mov    DWORD PTR [rsp+0x50],ecx
   14002948f:	lea    rcx,[rbp+0x30]
   140029493:	mov    QWORD PTR [rbp+0x20],rax
   140029497:	mov    QWORD PTR [rbp+0x28],0x4
   14002949f:	call   0x14002dfd8
   1400294a4:	mov    rdx,QWORD PTR [rdi+0x58]
   1400294a8:	lea    rcx,[rbp+0x40]
   1400294ac:	call   0x14002e00c
   1400294b1:	mov    ecx,DWORD PTR [rdi+0x60]
   1400294b4:	lea    rax,[rsp+0x4c]
   1400294b9:	mov    rdx,QWORD PTR [rdi+0x68]
   1400294bd:	mov    DWORD PTR [rsp+0x4c],ecx
   1400294c1:	lea    rcx,[rbp+0x60]
   1400294c5:	mov    QWORD PTR [rbp+0x50],rax
   1400294c9:	mov    QWORD PTR [rbp+0x58],0x4
   1400294d1:	call   0x14002dfd8
   1400294d6:	mov    rdx,QWORD PTR [rdi+0x70]
   1400294da:	lea    rcx,[rbp+0x70]
   1400294de:	call   0x14002e00c
   1400294e3:	call   0x140001334
   1400294e8:	lea    rcx,[rsp+0x30]
   1400294ed:	movups xmm0,XMMWORD PTR [rax]
   1400294f0:	mov    QWORD PTR [rbp+0xa0],rcx
   1400294f7:	lea    rax,[rsp+0x68]
   1400294fc:	mov    QWORD PTR [rbp+0x80],rax
   140029503:	lea    rcx,[rsp+0x38]
   140029508:	lea    rax,[rbp+0x148]
   14002950f:	mov    QWORD PTR [rbp+0xb0],rcx
   140029516:	mov    QWORD PTR [rbp+0x90],rax
   14002951d:	lea    rcx,[rsp+0x40]
   140029522:	lea    rax,[rsp+0x54]
   140029527:	mov    QWORD PTR [rbp+0xc0],rcx
   14002952e:	mov    QWORD PTR [rbp+0xe0],rax
   140029535:	lea    rcx,[rbp+0x168]
   14002953c:	lea    rax,[rsp+0x48]
   140029541:	mov    QWORD PTR [rbp+0x88],0x10
   14002954c:	mov    QWORD PTR [rbp+0xf0],rax
   140029553:	movdqu XMMWORD PTR [rsp+0x68],xmm0
   140029559:	mov    QWORD PTR [rbp+0x98],0x1
   140029564:	mov    QWORD PTR [rbp+0xa8],0x1
   14002956f:	mov    QWORD PTR [rbp+0xb8],0x1
   14002957a:	mov    QWORD PTR [rbp+0xc8],0x1
   140029585:	mov    QWORD PTR [rbp+0xd0],rcx
   14002958c:	mov    QWORD PTR [rbp+0xd8],0x1
   140029597:	mov    DWORD PTR [rsp+0x54],r15d
   14002959c:	mov    QWORD PTR [rbp+0xe8],0x4
   1400295a7:	mov    DWORD PTR [rsp+0x48],r14d
   1400295ac:	mov    QWORD PTR [rbp+0xf8],0x4
   1400295b7:	lea    rax,[rbp-0x80]
   1400295bb:	mov    rcx,r10
   1400295be:	mov    QWORD PTR [rsp+0x28],rax
   1400295c3:	lea    rdx,[rip+0x188aa]        # 0x140041e74
   1400295ca:	mov    DWORD PTR [rsp+0x20],0x18
   1400295d2:	jmp    0x14000e690
   1400295d7:	int3   
   1400295d8:	mov    rcx,rdi
   1400295db:	call   QWORD PTR [rip+0x14147]        # 0x14003d728
   1400295e1:	mov    rcx,rbx
   1400295e4:	call   rdi
   1400295e6:	nop
   1400295e7:	jmp    0x14000e901
   1400295ec:	mov    rax,QWORD PTR [rcx+0x138]
   1400295f3:	mov    ebx,0x1
   1400295f8:	test   rax,rax
   1400295fb:	jne    0x140029601
   1400295fd:	xor    ecx,ecx
   1400295ff:	jmp    0x140029605
   140029601:	lea    rcx,[rax+0x8]
   140029605:	lea    rdx,[rsp+0x38]
   14002960a:	call   0x14002c634
   14002960f:	mov    rcx,rax
   140029612:	jmp    0x14000e944
   140029617:	mov    rcx,QWORD PTR [rsp+0x38]
   14002961c:	test   rcx,rcx
   14002961f:	je     0x14000e969
   140029625:	call   QWORD PTR [rip+0x13d65]        # 0x14003d390
   14002962b:	nop
   14002962c:	jmp    0x14000e969
   140029631:	int3   
   140029632:	lea    rdx,[rsp+0x30]
   140029637:	call   0x14000e914
   14002963c:	mov    rax,QWORD PTR [rdi]
   14002963f:	test   rax,rax
   140029642:	je     0x140029649
   140029644:	cmp    DWORD PTR [rax],0x1
   140029647:	je     0x140029654
   140029649:	xor    sil,sil
   14002964c:	mov    rcx,rdi
   14002964f:	call   0x14000f028
   140029654:	mov    rcx,QWORD PTR [rsp+0x30]
   140029659:	test   rcx,rcx
   14002965c:	je     0x140029664
   14002965e:	call   QWORD PTR [rip+0x13d2c]        # 0x14003d390
   140029664:	test   sil,sil
   140029667:	je     0x14000e9bb
   14002966d:	jmp    0x14000e9ae
   140029672:	cmp    DWORD PTR [rcx+0x5c],0x0
   140029676:	lea    r8,[rsp+0x30]
   14002967b:	mov    edx,0x8007023e
   140029680:	cmovl  edx,DWORD PTR [rcx+0x5c]
   140029684:	call   0x14000e150
   140029689:	mov    rcx,rbx
   14002968c:	call   0x14000e8d8
   140029691:	nop
   140029692:	jmp    0x14000e9bb
   140029697:	int3   
   140029698:	mov    rax,QWORD PTR [rbx+0x30]
   14002969c:	mov    rdi,QWORD PTR [rax+0x28]
   1400296a0:	cmp    DWORD PTR [rdi],0x5
   1400296a3:	jbe    0x14000eaeb
   1400296a9:	and    DWORD PTR [rbp+0x33],0x0
   1400296ad:	lea    rax,[rbp-0x1]
   1400296b1:	mov    DWORD PTR [rbp-0x1],esi
   1400296b4:	mov    esi,0x4
   1400296b9:	mov    DWORD PTR [rbp+0x2f],esi
   1400296bc:	mov    QWORD PTR [rbp+0x27],rax
   1400296c0:	call   QWORD PTR [rip+0x13c32]        # 0x14003d2f8
   1400296c6:	and    DWORD PTR [rbp+0x43],0x0
   1400296ca:	mov    DWORD PTR [rbp-0x9],eax
   1400296cd:	lea    rax,[rbp-0x9]
   1400296d1:	mov    QWORD PTR [rbp+0x37],rax
   1400296d5:	mov    DWORD PTR [rbp+0x3f],esi
   1400296d8:	mov    r8,QWORD PTR [rbx+0x30]
   1400296dc:	lea    rax,[rbp+0x7]
   1400296e0:	mov    QWORD PTR [rsp+0x28],rax
   1400296e5:	lea    rdx,[rip+0x18676]        # 0x140041d62
   1400296ec:	add    r8,0x8
   1400296f0:	mov    DWORD PTR [rsp+0x20],esi
   1400296f4:	xor    r9d,r9d
   1400296f7:	mov    rcx,rdi
   1400296fa:	call   0x140001264
   1400296ff:	nop
   140029700:	jmp    0x14000eaeb
   140029705:	int3   
   140029706:	mov    rcx,QWORD PTR [rsp+0x28]
   14002970b:	mov    r9d,0x8007029c
   140029711:	call   0x14002c9c0
   140029716:	nop
   140029717:	jmp    0x14000ec8c
   14002971c:	mov    rcx,rdi
   14002971f:	call   0x140013de0
   140029724:	nop
   140029725:	jmp    0x14000ee9d
   14002972a:	mov    rcx,rdi
   14002972d:	call   QWORD PTR [rip+0x13ff5]        # 0x14003d728
   140029733:	xor    edx,edx
   140029735:	mov    rcx,rbx
   140029738:	call   rdi
   14002973a:	nop
   14002973b:	jmp    0x14000efa4
   140029740:	or     eax,0xffffffff
   140029743:	lock xadd DWORD PTR [rcx],eax
   140029747:	cmp    eax,0x1
   14002974a:	jne    0x140029765
   14002974c:	mov    rdi,QWORD PTR [rbx]
   14002974f:	test   rdi,rdi
   140029752:	je     0x140029765
   140029754:	lea    rcx,[rdi+0x8]
   140029758:	call   0x14000e110
   14002975d:	mov    rcx,rdi
   140029760:	call   0x140013de0
   140029765:	and    QWORD PTR [rbx],0x0
   140029769:	jmp    0x14000f041
   14002976e:	mov    rcx,QWORD PTR [rcx+0x8]
   140029772:	test   rcx,rcx
   140029775:	je     0x14000f12c
   14002977b:	rex.W jmp QWORD PTR [rip+0x13a36]        # 0x14003d1b8
   140029782:	call   0x140038248
   140029787:	and    QWORD PTR [rbx],0x0
   14002978b:	jmp    0x14000f1ea
   140029790:	jle    0x14000f37d
   140029796:	movzx  ebx,ax
   140029799:	or     ebx,0x80070000
   14002979f:	jmp    0x14000f37d
   1400297a4:	mov    rcx,rsi
   1400297a7:	call   QWORD PTR [rip+0x13f7b]        # 0x14003d728
   1400297ad:	mov    rax,QWORD PTR [rbx+0x30]
   1400297b1:	mov    r9,r14
   1400297b4:	mov    QWORD PTR [rsp+0x30],rax
   1400297b9:	mov    r8b,dil
   1400297bc:	mov    rax,QWORD PTR [rsp+0x88]
   1400297c4:	mov    edx,r15d
   1400297c7:	mov    QWORD PTR [rsp+0x28],rax
   1400297cc:	mov    rcx,r12
   1400297cf:	mov    QWORD PTR [rsp+0x20],rbp
   1400297d4:	call   rsi
   1400297d6:	nop
   1400297d7:	jmp    0x14000f47b
   1400297dc:	or     eax,0xffffffff
   1400297df:	lock xadd DWORD PTR [rcx],eax
   1400297e3:	cmp    eax,0x1
   1400297e6:	jne    0x1400297f1
   1400297e8:	mov    rcx,QWORD PTR [rbx]
   1400297eb:	call   QWORD PTR [rip+0x13e57]        # 0x14003d648
   1400297f1:	and    QWORD PTR [rbx],0x0
   1400297f5:	and    QWORD PTR [rbx+0x8],0x0
   1400297fa:	jmp    0x14000f53d
   1400297ff:	int3   
   140029800:	cmp    QWORD PTR [rip+0x25a80],0x0        # 0x14004f288
   140029808:	je     0x14000f594
   14002980e:	xor    edx,edx
   140029810:	xor    ecx,ecx
   140029812:	mov    r8d,0x2000000
   140029818:	call   QWORD PTR [rip+0x1382a]        # 0x14003d048
   14002981e:	mov    rdi,rax
   140029821:	test   rax,rax
   140029824:	je     0x14000f594
   14002982a:	and    QWORD PTR [rsp+0x20],0x0
   140029830:	lea    rdx,[rsp+0x20]
   140029835:	mov    rcx,rax
   140029838:	call   0x14002b830
   14002983d:	test   al,al
   14002983f:	je     0x14002989d
   140029841:	mov    rdx,QWORD PTR [rip+0x25a40]        # 0x14004f288
   140029848:	mov    rcx,QWORD PTR [rsp+0x20]
   14002984d:	call   QWORD PTR [rip+0x13de5]        # 0x14003d638
   140029853:	test   eax,eax
   140029855:	jne    0x140029875
   140029857:	mov    rdx,QWORD PTR [rip+0x25a4a]        # 0x14004f2a8
   14002985e:	test   rdx,rdx
   140029861:	je     0x14002989d
   140029863:	xor    ecx,ecx
   140029865:	call   QWORD PTR [rip+0x13845]        # 0x14003d0b0
   14002986b:	and    QWORD PTR [rip+0x25a35],0x0        # 0x14004f2a8
   140029873:	jmp    0x14002989d
   140029875:	cmp    QWORD PTR [rip+0x25a2b],0x0        # 0x14004f2a8
   14002987d:	jne    0x14002989d
   14002987f:	lea    r9,[rip+0x1cfa]        # 0x14002b580
   140029886:	xor    edx,edx
   140029888:	xor    ecx,ecx
   14002988a:	mov    r8d,0x493e0
   140029890:	call   QWORD PTR [rip+0x1384a]        # 0x14003d0e0
   140029896:	mov    QWORD PTR [rip+0x25a0b],rax        # 0x14004f2a8
   14002989d:	cmp    QWORD PTR [rsp+0x20],0x0
   1400298a3:	je     0x1400298af
   1400298a5:	mov    rcx,QWORD PTR [rsp+0x20]
   1400298aa:	call   0x140013de0
   1400298af:	mov    rcx,rdi
   1400298b2:	call   QWORD PTR [rip+0x13798]        # 0x14003d050
   1400298b8:	nop
   1400298b9:	jmp    0x14000f594
   1400298be:	mov    rax,QWORD PTR [rbx]
   1400298c1:	mov    rdi,QWORD PTR [rax+0x10]
   1400298c5:	mov    rcx,rdi
   1400298c8:	call   QWORD PTR [rip+0x13e5a]        # 0x14003d728
   1400298ce:	mov    rcx,rbx
   1400298d1:	call   rdi
   1400298d3:	nop
   1400298d4:	jmp    0x140011e72
   1400298d9:	int3   
   1400298da:	call   0x14003bc48
   1400298df:	test   al,al
   1400298e1:	je     0x140011ebf
   1400298e7:	mov    rcx,rsi
   1400298ea:	call   0x140011ed8
   1400298ef:	test   al,al
   1400298f1:	jne    0x140011ebd
   1400298f7:	mov    edi,ebx
   1400298f9:	mov    rcx,rsi
   1400298fc:	call   0x140011ed8
   140029901:	test   al,al
   140029903:	jne    0x140011ebd
   140029909:	mov    ecx,0x64
   14002990e:	call   QWORD PTR [rip+0x13a9c]        # 0x14003d3b0
   140029914:	inc    edi
   140029916:	cmp    edi,0x32
   140029919:	jl     0x1400298f9
   14002991b:	jmp    0x140011ebf
   140029920:	call   QWORD PTR [rip+0x2970a]        # 0x140053030
   140029926:	test   eax,eax
   140029928:	js     0x140011faf
   14002992e:	mov    rcx,QWORD PTR [rbx]
   140029931:	call   QWORD PTR [rip+0x29709]        # 0x140053040
   140029937:	test   eax,eax
   140029939:	js     0x140011faf
   14002993f:	and    QWORD PTR [rbx],0x0
   140029943:	jmp    0x140011faf
   140029948:	mov    DWORD PTR [rsp+0x28],0x8
   140029950:	lea    rcx,[rbx+0x68]
   140029954:	or     DWORD PTR [rsp+0x20],0xffffffff
   140029959:	lea    r8,[rip+0xfffffffffffe8660]        # 0x140011fc0
   140029960:	mov    r9,rbx
   140029963:	call   QWORD PTR [rip+0x138af]        # 0x14003d218
   140029969:	nop
   14002996a:	jmp    0x140012043
   14002996f:	int3   
   140029970:	mov    eax,0x80004003
   140029975:	jmp    0x14001214b
   14002997a:	mov    rsi,rbx
   14002997d:	jmp    0x1400120f0
   140029982:	xor    ebx,ebx
   140029984:	mov    r14,QWORD PTR [rsp+0x80]
   14002998c:	mov    r15,QWORD PTR [rsp+0x78]
   140029991:	mov    edi,DWORD PTR [rsp+0x70]
   140029995:	mov    rsi,QWORD PTR [rsp+0x88]
   14002999d:	jmp    0x1400120f8
   1400299a2:	mov    rcx,rdi
   1400299a5:	call   QWORD PTR [rip+0x13d7d]        # 0x14003d728
   1400299ab:	mov    r8,r14
   1400299ae:	mov    rdx,r15
   1400299b1:	mov    rcx,rsi
   1400299b4:	call   rdi
   1400299b6:	nop
   1400299b7:	jmp    0x14001213f
   1400299bc:	mov    rax,QWORD PTR [rsi]
   1400299bf:	mov    rbx,QWORD PTR [rax+0x50]
   1400299c3:	mov    rcx,rbx
   1400299c6:	call   QWORD PTR [rip+0x13d5c]        # 0x14003d728
   1400299cc:	mov    edx,0x1
   1400299d1:	mov    rcx,rsi
   1400299d4:	call   rbx
   1400299d6:	nop
   1400299d7:	jmp    0x140012149
   1400299dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400299e1:	add    rsp,0x20
   1400299e5:	pop    rdi
   1400299e6:	ret    
   1400299e7:	int3   
   1400299e8:	cmp    eax,0x1
   1400299eb:	jne    0x140029b6e
   1400299f1:	lea    rbx,[rbp+0xb8]
   1400299f8:	mov    rcx,rbx
   1400299fb:	call   QWORD PTR [rip+0x139c7]        # 0x14003d3c8
   140029a01:	mov    r14,QWORD PTR [rbp+0x110]
   140029a08:	mov    rcx,rbx
   140029a0b:	mov    QWORD PTR [rbp+0x110],r12
   140029a12:	call   QWORD PTR [rip+0x139c0]        # 0x14003d3d8
   140029a18:	test   r14,r14
   140029a1b:	je     0x140012207
   140029a21:	mov    r15d,r12d
   140029a24:	cmp    DWORD PTR [r14+0x8],r12d
   140029a28:	jle    0x140029a95
   140029a2a:	mov    edx,r15d
   140029a2d:	mov    rcx,r14
   140029a30:	call   0x140034e7c
   140029a35:	mov    rdi,QWORD PTR [rax]
   140029a38:	mov    rax,QWORD PTR [rdi]
   140029a3b:	mov    rbx,QWORD PTR [rax+0x8]
   140029a3f:	mov    rcx,rbx
   140029a42:	call   QWORD PTR [rip+0x13ce0]        # 0x14003d728
   140029a48:	mov    rcx,rdi
   140029a4b:	call   rbx
   140029a4d:	mov    edx,r15d
   140029a50:	mov    rcx,r14
   140029a53:	call   0x140034e7c
   140029a58:	mov    rdi,QWORD PTR [rax]
   140029a5b:	test   rdi,rdi
   140029a5e:	je     0x140029a79
   140029a60:	mov    rax,QWORD PTR [rdi]
   140029a63:	mov    rbx,QWORD PTR [rax]
   140029a66:	mov    rcx,rbx
   140029a69:	call   QWORD PTR [rip+0x13cb9]        # 0x14003d728
   140029a6f:	mov    edx,0x1
   140029a74:	mov    rcx,rdi
   140029a77:	call   rbx
   140029a79:	mov    edx,r15d
   140029a7c:	mov    rcx,r14
   140029a7f:	call   0x140034e7c
   140029a84:	inc    r15d
   140029a87:	mov    QWORD PTR [rax],r12
   140029a8a:	cmp    r15d,DWORD PTR [r14+0x8]
   140029a8e:	jl     0x140029a2a
   140029a90:	mov    edi,0x3
   140029a95:	mov    rcx,QWORD PTR [r14]
   140029a98:	test   rcx,rcx
   140029a9b:	je     0x140029aa6
   140029a9d:	call   QWORD PTR [rip+0x13ba5]        # 0x14003d648
   140029aa3:	mov    QWORD PTR [r14],r12
   140029aa6:	mov    rcx,r14
   140029aa9:	mov    QWORD PTR [r14+0x8],0x0
   140029ab1:	call   0x140013de0
   140029ab6:	nop
   140029ab7:	jmp    0x140012207
   140029abc:	mov    rcx,rsi
   140029abf:	mov    r14b,0x1
   140029ac2:	call   0x140034f40
   140029ac7:	nop
   140029ac8:	jmp    0x14001226f
   140029acd:	mov    r12d,DWORD PTR [rsi+0x8]
   140029ad1:	xor    r15d,r15d
   140029ad4:	mov    r14b,0x1
   140029ad7:	test   r12d,r12d
   140029ada:	jle    0x140029b0e
   140029adc:	mov    edx,r15d
   140029adf:	mov    rcx,rsi
   140029ae2:	call   0x14000f858
   140029ae7:	mov    rdi,QWORD PTR [rax]
   140029aea:	mov    rax,QWORD PTR [rdi]
   140029aed:	mov    rbx,QWORD PTR [rax+0x28]
   140029af1:	mov    rcx,rbx
   140029af4:	call   QWORD PTR [rip+0x13c2e]        # 0x14003d728
   140029afa:	mov    rcx,rdi
   140029afd:	call   rbx
   140029aff:	inc    r15d
   140029b02:	cmp    r15d,r12d
   140029b05:	jl     0x140029adc
   140029b07:	lea    rbx,[rbp+0x90]
   140029b0e:	mov    rcx,QWORD PTR [rsi+0x50]
   140029b12:	xor    r12d,r12d
   140029b15:	test   rcx,rcx
   140029b18:	je     0x140012279
   140029b1e:	call   QWORD PTR [rip+0x138c4]        # 0x14003d3e8
   140029b24:	nop
   140029b25:	jmp    0x140012279
   140029b2a:	mov    rcx,rsi
   140029b2d:	mov    r14b,0x1
   140029b30:	call   0x140034fd4
   140029b35:	nop
   140029b36:	jmp    0x140012283
   140029b3b:	mov    rcx,rsi
   140029b3e:	mov    r14b,0x1
   140029b41:	call   0x1400350e8
   140029b46:	nop
   140029b47:	jmp    0x14001228d
   140029b4c:	mov    rcx,rsi
   140029b4f:	mov    r14b,0x1
   140029b52:	call   0x140035188
   140029b57:	nop
   140029b58:	jmp    0x140012297
   140029b5d:	mov    rcx,rsi
   140029b60:	mov    r14b,0x1
   140029b63:	call   0x140035058
   140029b68:	nop
   140029b69:	jmp    0x1400122a4
   140029b6e:	lea    rbx,[rsp+0x30]
   140029b73:	mov    rcx,QWORD PTR [rbx]
   140029b76:	test   rcx,rcx
   140029b79:	je     0x140029b81
   140029b7b:	call   QWORD PTR [rip+0x13627]        # 0x14003d1a8
   140029b81:	add    rbx,0x8
   140029b85:	sub    rdi,0x1
   140029b89:	jne    0x140029b73
   140029b8b:	xor    eax,eax
   140029b8d:	mov    rcx,QWORD PTR [rsp+0x48]
   140029b92:	xor    rcx,rsp
   140029b95:	call   0x1400141d0
   140029b9a:	lea    r11,[rsp+0x50]
   140029b9f:	mov    rbx,QWORD PTR [r11+0x38]
   140029ba3:	mov    rbp,QWORD PTR [r11+0x40]
   140029ba7:	mov    rsi,QWORD PTR [r11+0x48]
   140029bab:	mov    rsp,r11
   140029bae:	pop    r15
   140029bb0:	pop    r14
   140029bb2:	pop    r13
   140029bb4:	pop    r12
   140029bb6:	pop    rdi
   140029bb7:	ret    
   140029bb8:	xor    al,al
   140029bba:	jmp    0x1400128cc
   140029bbf:	mov    rax,QWORD PTR [rdi]
   140029bc2:	mov    rbx,QWORD PTR [rax+0x8]
   140029bc6:	mov    rcx,rbx
   140029bc9:	call   QWORD PTR [rip+0x13b59]        # 0x14003d728
   140029bcf:	mov    rcx,rdi
   140029bd2:	call   rbx
   140029bd4:	nop
   140029bd5:	jmp    0x14001243b
   140029bda:	mov    rcx,r15
   140029bdd:	call   QWORD PTR [rip+0x13b45]        # 0x14003d728
   140029be3:	lea    rax,[rbp+0x0]
   140029be7:	mov    QWORD PTR [rsp+0x28],rax
   140029bec:	lea    rax,[rbp-0x10]
   140029bf0:	mov    QWORD PTR [rsp+0x20],rax
   140029bf5:	lea    r9,[rbp-0x28]
   140029bf9:	lea    r8,[rbp-0x18]
   140029bfd:	lea    rdx,[rbp-0x70]
   140029c01:	mov    rcx,rbx
   140029c04:	call   r15
   140029c07:	nop
   140029c08:	jmp    0x1400124fe
   140029c0d:	mov    rcx,r15
   140029c10:	call   QWORD PTR [rip+0x13b12]        # 0x14003d728
   140029c16:	lea    rax,[rbp-0x78]
   140029c1a:	mov    QWORD PTR [rsp+0x20],rax
   140029c1f:	lea    r9,[rbp-0x50]
   140029c23:	lea    r8,[rbp-0x48]
   140029c27:	lea    rdx,[rbp+0x28]
   140029c2b:	mov    rcx,rbx
   140029c2e:	call   r15
   140029c31:	nop
   140029c32:	jmp    0x140012532
   140029c37:	mov    rcx,r15
   140029c3a:	call   QWORD PTR [rip+0x13ae8]        # 0x14003d728
   140029c40:	lea    r8,[rbp-0x74]
   140029c44:	lea    rdx,[rbp-0x7c]
   140029c48:	mov    rcx,rbx
   140029c4b:	call   r15
   140029c4e:	nop
   140029c4f:	jmp    0x14001256b
   140029c54:	mov    rcx,r15
   140029c57:	call   QWORD PTR [rip+0x13acb]        # 0x14003d728
   140029c5d:	lea    rax,[rbp-0x58]
   140029c61:	mov    QWORD PTR [rsp+0x28],rax
   140029c66:	lea    rax,[rbp-0x40]
   140029c6a:	mov    QWORD PTR [rsp+0x20],rax
   140029c6f:	lea    r9,[rbp-0x54]
   140029c73:	lea    r8,[rbp-0x64]
   140029c77:	lea    rdx,[rbp-0x60]
   140029c7b:	mov    rcx,rbx
   140029c7e:	call   r15
   140029c81:	nop
   140029c82:	jmp    0x1400125b8
   140029c87:	mov    rcx,r15
   140029c8a:	call   QWORD PTR [rip+0x13a98]        # 0x14003d728
   140029c90:	lea    rdx,[rbp-0x6c]
   140029c94:	mov    rcx,rbx
   140029c97:	call   r15
   140029c9a:	nop
   140029c9b:	jmp    0x1400125db
   140029ca0:	mov    rcx,r15
   140029ca3:	call   QWORD PTR [rip+0x13a7f]        # 0x14003d728
   140029ca9:	lea    rax,[rbp-0x38]
   140029cad:	mov    QWORD PTR [rsp+0x28],rax
   140029cb2:	lea    rax,[rbp-0x20]
   140029cb6:	mov    QWORD PTR [rsp+0x20],rax
   140029cbb:	lea    r9,[rbp-0x30]
   140029cbf:	lea    r8,[rbp-0x4c]
   140029cc3:	lea    rdx,[rbp-0x68]
   140029cc7:	mov    rcx,rbx
   140029cca:	call   r15
   140029ccd:	nop
   140029cce:	jmp    0x140012618
   140029cd3:	mov    rcx,r15
   140029cd6:	call   QWORD PTR [rip+0x13a4c]        # 0x14003d728
   140029cdc:	lea    r9,[rbp-0x44]
   140029ce0:	lea    r8,[rbp-0x5c]
   140029ce4:	lea    rdx,[rbp-0x80]
   140029ce8:	mov    rcx,rbx
   140029ceb:	call   r15
   140029cee:	nop
   140029cef:	jmp    0x140012646
   140029cf4:	mov    r13,rsi
   140029cf7:	jmp    0x14001278e
   140029cfc:	mov    rax,QWORD PTR [rdi]
   140029cff:	mov    rbx,QWORD PTR [rax+0x10]
   140029d03:	mov    rcx,rbx
   140029d06:	call   QWORD PTR [rip+0x13a1c]        # 0x14003d728
   140029d0c:	mov    rcx,rdi
   140029d0f:	call   rbx
   140029d11:	nop
   140029d12:	jmp    0x140012817
   140029d17:	mov    rcx,r15
   140029d1a:	call   QWORD PTR [rip+0x13a08]        # 0x14003d728
   140029d20:	mov    rcx,rdi
   140029d23:	call   r15
   140029d26:	nop
   140029d27:	jmp    0x140012852
   140029d2c:	mov    QWORD PTR [rcx],rax
   140029d2f:	jmp    0x1400128aa
   140029d34:	mov    rdx,QWORD PTR [rbx]
   140029d37:	test   rdx,rdx
   140029d3a:	je     0x140029d56
   140029d3c:	mov    rax,QWORD PTR [rdx]
   140029d3f:	mov    rcx,rbx
   140029d42:	mov    QWORD PTR [rbx],rax
   140029d45:	call   0x140012c5c
   140029d4a:	cmp    QWORD PTR [rbx+0x10],0x0
   140029d4f:	ja     0x140029d34
   140029d51:	jmp    0x140012c98
   140029d56:	mov    ecx,0x80004005
   140029d5b:	call   0x1400152fc
   140029d60:	int3   
   140029d61:	int3   
   140029d62:	mov    ecx,0x80004005
   140029d67:	call   0x1400152fc
   140029d6c:	int3   
   140029d6d:	int3   
   140029d6e:	mov    rcx,rbp
   140029d71:	call   QWORD PTR [rip+0x139b1]        # 0x14003d728
   140029d77:	mov    rcx,r14
   140029d7a:	call   rbp
   140029d7c:	nop
   140029d7d:	jmp    0x140012d5f
   140029d82:	mov    rax,QWORD PTR [rsi]
   140029d85:	mov    rbx,QWORD PTR [rax+0x10]
   140029d89:	mov    rcx,rbx
   140029d8c:	call   QWORD PTR [rip+0x13996]        # 0x14003d728
   140029d92:	mov    rcx,rsi
   140029d95:	call   rbx
   140029d97:	nop
   140029d98:	jmp    0x140012de0
   140029d9d:	int3   
   140029d9e:	call   0x14000f858
   140029da3:	mov    rcx,QWORD PTR [rax]
   140029da6:	call   0x140033cb8
   140029dab:	nop
   140029dac:	jmp    0x140012f8b
   140029db1:	mov    rcx,rax
   140029db4:	call   QWORD PTR [rip+0x1396e]        # 0x14003d728
   140029dba:	mov    eax,DWORD PTR [rsp+0xe0]
   140029dc1:	mov    rcx,rbx
   140029dc4:	mov    r9,QWORD PTR [rsp+0x70]
   140029dc9:	mov    r8,QWORD PTR [rsp+0x78]
   140029dce:	mov    edx,DWORD PTR [rsp+0xe8]
   140029dd5:	mov    QWORD PTR [rsp+0x60],r14
   140029dda:	mov    QWORD PTR [rsp+0x58],r15
   140029ddf:	mov    QWORD PTR [rsp+0x50],r12
   140029de4:	mov    DWORD PTR [rsp+0x48],r13d
   140029de9:	mov    DWORD PTR [rsp+0x40],eax
   140029ded:	and    DWORD PTR [rsp+0x38],0x0
   140029df2:	and    QWORD PTR [rsp+0x30],0x0
   140029df8:	mov    rax,QWORD PTR [rsp+0xf0]
   140029e00:	mov    QWORD PTR [rsp+0x28],rax
   140029e05:	mov    rax,QWORD PTR [rsp+0xf8]
   140029e0d:	mov    QWORD PTR [rsp+0x20],rax
   140029e12:	call   QWORD PTR [rsp+0x80]
   140029e19:	nop
   140029e1a:	jmp    0x140012f72
   140029e1f:	int3   
   140029e20:	mov    rdx,r8
   140029e23:	call   0x14000dcd0
   140029e28:	nop
   140029e29:	jmp    0x140013026
   140029e2e:	mov    rdx,QWORD PTR [rsp+0xf8]
   140029e36:	test   rdx,rdx
   140029e39:	je     0x1400130c4
   140029e3f:	lea    rcx,[rsi+0x70]
   140029e43:	call   0x14002edfc
   140029e48:	test   eax,eax
   140029e4a:	js     0x140029e73
   140029e4c:	jmp    0x1400130c4
   140029e51:	lea    rcx,[rsi+0x78]
   140029e55:	call   0x14002edfc
   140029e5a:	test   eax,eax
   140029e5c:	js     0x140029e73
   140029e5e:	jmp    0x1400130d5
   140029e63:	mov    rcx,r13
   140029e66:	call   0x14002edfc
   140029e6b:	test   eax,eax
   140029e6d:	jns    0x1400130e6
   140029e73:	mov    DWORD PTR [rsi+0x6c],ebp
   140029e76:	jmp    0x1400130e6
   140029e7b:	int3   
   140029e7c:	mov    rcx,rsi
   140029e7f:	call   QWORD PTR [rip+0x138a3]        # 0x14003d728
   140029e85:	mov    rcx,rdi
   140029e88:	call   rsi
   140029e8a:	nop
   140029e8b:	jmp    0x1400132aa
   140029e90:	int3   
   140029e91:	int3   
   140029e92:	mov    eax,0x80004003
   140029e97:	jmp    0x1400137bb
   140029e9c:	and    QWORD PTR [rdi],0x0
   140029ea0:	mov    rax,QWORD PTR [r13+0x0]
   140029ea4:	mov    rbx,QWORD PTR [rax+0x10]
   140029ea8:	mov    rcx,rbx
   140029eab:	call   QWORD PTR [rip+0x13877]        # 0x14003d728
   140029eb1:	mov    rcx,r13
   140029eb4:	call   rbx
   140029eb6:	lea    rbx,[rsi+0x58]
   140029eba:	jmp    0x1400136ca
   140029ebf:	int3   
   140029ec0:	mov    ebx,0x80004003
   140029ec5:	jmp    0x1400138e3
   140029eca:	mov    ebx,0x80004005
   140029ecf:	jmp    0x140013a1c
   140029ed4:	mov    rcx,QWORD PTR [rsp+0x68]
   140029ed9:	call   QWORD PTR [rip+0x132c9]        # 0x14003d1a8
   140029edf:	nop
   140029ee0:	jmp    0x140013abc
   140029ee5:	call   QWORD PTR [rip+0x1327d]        # 0x14003d168
   140029eeb:	mov    rcx,QWORD PTR [rsp+0x68]
   140029ef0:	lea    rdx,[rbp-0x80]
   140029ef4:	and    DWORD PTR [rbp-0x80],0x0
   140029ef8:	call   QWORD PTR [rip+0x133aa]        # 0x14003d2a8
   140029efe:	mov    ebx,0x80004005
   140029f03:	jmp    0x140013abc
   140029f08:	test   rdx,rdx
   140029f0b:	je     0x140013b7f
   140029f11:	mov    WORD PTR [rsi],bp
   140029f14:	jmp    0x140013b7f
   140029f19:	int3   
   140029f1a:	movzx  ebx,ax
   140029f1d:	or     ebx,0x80070000
   140029f23:	jmp    0x140013be8
   140029f28:	movzx  ebx,ax
   140029f2b:	or     ebx,0x80070000
   140029f31:	jmp    0x140013c2c
   140029f36:	mov    rcx,rdi
   140029f39:	call   QWORD PTR [rip+0x137e9]        # 0x14003d728
   140029f3f:	lea    r8,[rsp+0x40]
   140029f44:	mov    rcx,rsi
   140029f47:	lea    rdx,[rip+0x15aba]        # 0x14003fa08
   140029f4e:	call   rdi
   140029f50:	nop
   140029f51:	jmp    0x140013cf4
   140029f56:	mov    rcx,rsi
   140029f59:	call   QWORD PTR [rip+0x137c9]        # 0x14003d728
   140029f5f:	mov    rcx,rbx
   140029f62:	call   rsi
   140029f64:	nop
   140029f65:	jmp    0x140013d46
   140029f6a:	int3   
   140029f6b:	int3   
   140029f6c:	int3   
   140029f6d:	int3   
   140029f6e:	int3   
   140029f6f:	int3   
   140029f70:	int3   
   140029f71:	int3   
   140029f72:	int3   
   140029f73:	int3   
   140029f74:	mov    QWORD PTR [rsp+0x8],rbx
   140029f79:	push   rdi
   140029f7a:	sub    rsp,0x20
   140029f7e:	mov    rbx,QWORD PTR [rcx]
   140029f81:	test   rbx,rbx
   140029f84:	je     0x140029fc7
   140029f86:	mov    rax,QWORD PTR [rbx]
   140029f89:	mov    rdi,QWORD PTR [rax+0x10]
   140029f8d:	lea    rax,[rip+0xfffffffffffe254c]        # 0x14000c4e0
   140029f94:	cmp    rdi,rax
   140029f97:	jne    0x140029fa3
   140029f99:	mov    rcx,rbx
   140029f9c:	call   0x14000c4e0
   140029fa1:	jmp    0x140029fc7
   140029fa3:	lea    rax,[rip+0xfffffffffffe2706]        # 0x14000c6b0
   140029faa:	cmp    rdi,rax
   140029fad:	jne    0x140029fb9
   140029faf:	mov    rcx,rbx
   140029fb2:	call   0x14000c6b0
   140029fb7:	jmp    0x140029fc7
   140029fb9:	mov    rcx,rdi
   140029fbc:	call   QWORD PTR [rip+0x13766]        # 0x14003d728
   140029fc2:	mov    rcx,rbx
   140029fc5:	call   rdi
   140029fc7:	mov    rbx,QWORD PTR [rsp+0x30]
   140029fcc:	add    rsp,0x20
   140029fd0:	pop    rdi
   140029fd1:	ret    
   140029fd2:	int3   
   140029fd3:	int3   
   140029fd4:	int3   
   140029fd5:	int3   
   140029fd6:	int3   
   140029fd7:	int3   
   140029fd8:	sub    rsp,0x28
   140029fdc:	add    rcx,0x8
   140029fe0:	cmp    BYTE PTR [rcx+0x28],0x0
   140029fe4:	je     0x140029ff0
   140029fe6:	mov    BYTE PTR [rcx+0x28],0x0
   140029fea:	call   QWORD PTR [rip+0x133c8]        # 0x14003d3b8
   140029ff0:	add    rsp,0x28
   140029ff4:	ret    
   140029ff5:	int3   
   140029ff6:	int3   
   140029ff7:	int3   
   140029ff8:	int3   
   140029ff9:	int3   
   140029ffa:	int3   
   140029ffb:	int3   
   140029ffc:	mov    QWORD PTR [rsp+0x8],rbx
   14002a001:	push   rdi
   14002a002:	sub    rsp,0x20
   14002a006:	mov    rdi,QWORD PTR [rip+0x24b53]        # 0x14004eb60
   14002a00d:	mov    rax,QWORD PTR [rdi]
   14002a010:	mov    rbx,QWORD PTR [rax+0x10]
   14002a014:	mov    rcx,rbx
   14002a017:	call   QWORD PTR [rip+0x1370b]        # 0x14003d728
   14002a01d:	mov    rcx,rdi
   14002a020:	mov    rax,rbx
   14002a023:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a028:	add    rsp,0x20
   14002a02c:	pop    rdi
   14002a02d:	rex.W jmp rax
   14002a030:	int3   
   14002a031:	int3   
   14002a032:	int3   
   14002a033:	int3   
   14002a034:	int3   
   14002a035:	int3   
   14002a036:	int3   
   14002a037:	int3   
   14002a038:	jmp    0x140011f98
   14002a03d:	int3   
   14002a03e:	int3   
   14002a03f:	int3   
   14002a040:	int3   
   14002a041:	int3   
   14002a042:	int3   
   14002a043:	int3   
   14002a044:	rex push rbx
   14002a046:	sub    rsp,0x20
   14002a04a:	mov    rbx,rcx
   14002a04d:	mov    rcx,QWORD PTR [rcx]
   14002a050:	test   rcx,rcx
   14002a053:	je     0x14002a05f
   14002a055:	call   QWORD PTR [rip+0x135ed]        # 0x14003d648
   14002a05b:	and    QWORD PTR [rbx],0x0
   14002a05f:	and    DWORD PTR [rbx+0x8],0x0
   14002a063:	and    DWORD PTR [rbx+0xc],0x0
   14002a067:	add    rsp,0x20
   14002a06b:	pop    rbx
   14002a06c:	ret    
   14002a06d:	int3   
   14002a06e:	int3   
   14002a06f:	int3   
   14002a070:	int3   
   14002a071:	int3   
   14002a072:	int3   
   14002a073:	int3   
   14002a074:	mov    QWORD PTR [rsp+0x8],rbx
   14002a079:	mov    QWORD PTR [rsp+0x10],rsi
   14002a07e:	push   rdi
   14002a07f:	sub    rsp,0x20
   14002a083:	mov    rsi,rcx
   14002a086:	or     eax,0xffffffff
   14002a089:	lock xadd DWORD PTR [rcx+0x10],eax
   14002a08e:	sub    eax,0x1
   14002a091:	jg     0x14002a0ae
   14002a093:	mov    rdi,QWORD PTR [rcx]
   14002a096:	mov    rax,QWORD PTR [rdi]
   14002a099:	mov    rbx,QWORD PTR [rax+0x8]
   14002a09d:	mov    rcx,rbx
   14002a0a0:	call   QWORD PTR [rip+0x13682]        # 0x14003d728
   14002a0a6:	mov    rdx,rsi
   14002a0a9:	mov    rcx,rdi
   14002a0ac:	call   rbx
   14002a0ae:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a0b3:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a0b8:	add    rsp,0x20
   14002a0bc:	pop    rdi
   14002a0bd:	ret    
   14002a0be:	int3   
   14002a0bf:	int3   
   14002a0c0:	int3   
   14002a0c1:	int3   
   14002a0c2:	int3   
   14002a0c3:	int3   
   14002a0c4:	rex push rbx
   14002a0c6:	sub    rsp,0x20
   14002a0ca:	lea    rax,[rip+0x14987]        # 0x14003ea58
   14002a0d1:	mov    rbx,rcx
   14002a0d4:	mov    QWORD PTR [rcx],rax
   14002a0d7:	mov    rcx,QWORD PTR [rcx+0x88]
   14002a0de:	call   QWORD PTR [rip+0x13564]        # 0x14003d648
   14002a0e4:	lea    rcx,[rbx+0x8]
   14002a0e8:	add    rsp,0x20
   14002a0ec:	pop    rbx
   14002a0ed:	jmp    0x140006920
   14002a0f2:	int3   
   14002a0f3:	int3   
   14002a0f4:	int3   
   14002a0f5:	int3   
   14002a0f6:	int3   
   14002a0f7:	int3   
   14002a0f8:	mov    rcx,QWORD PTR [rcx]
   14002a0fb:	sub    rcx,0x18
   14002a0ff:	jmp    0x14002a074
   14002a104:	int3   
   14002a105:	int3   
   14002a106:	int3   
   14002a107:	int3   
   14002a108:	int3   
   14002a109:	int3   
   14002a10a:	int3   
   14002a10b:	int3   
   14002a10c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a111:	push   rdi
   14002a112:	sub    rsp,0x20
   14002a116:	mov    rax,QWORD PTR [rip+0x24ceb]        # 0x14004ee08
   14002a11d:	mov    rbx,rcx
   14002a120:	mov    rdi,QWORD PTR [rax+0x18]
   14002a124:	lea    rax,[rip+0xfffffffffffddd15]        # 0x140007e40
   14002a12b:	cmp    rdi,rax
   14002a12e:	jne    0x14002a13e
   14002a130:	lea    rcx,[rip+0x24cd1]        # 0x14004ee08
   14002a137:	call   0x140007e40
   14002a13c:	jmp    0x14002a150
   14002a13e:	mov    rcx,rdi
   14002a141:	call   QWORD PTR [rip+0x135e1]        # 0x14003d728
   14002a147:	lea    rcx,[rip+0x24cba]        # 0x14004ee08
   14002a14e:	call   rdi
   14002a150:	add    rax,0x18
   14002a154:	mov    QWORD PTR [rbx],rax
   14002a157:	mov    rax,rbx
   14002a15a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a15f:	add    rsp,0x20
   14002a163:	pop    rdi
   14002a164:	ret    
   14002a165:	int3   
   14002a166:	int3   
   14002a167:	int3   
   14002a168:	int3   
   14002a169:	int3   
   14002a16a:	int3   
   14002a16b:	int3   
   14002a16c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a171:	mov    QWORD PTR [rsp+0x10],rsi
   14002a176:	mov    QWORD PTR [rsp+0x18],rdi
   14002a17b:	push   r14
   14002a17d:	sub    rsp,0x20
   14002a181:	mov    rdi,QWORD PTR [rdx]
   14002a184:	mov    r14,rcx
   14002a187:	mov    rbx,QWORD PTR [rdi-0x18]
   14002a18b:	mov    rax,QWORD PTR [rbx]
   14002a18e:	mov    rsi,QWORD PTR [rax+0x20]
   14002a192:	lea    rax,[rip+0xfffffffffffddc97]        # 0x140007e30
   14002a199:	cmp    rsi,rax
   14002a19c:	jne    0x14002a1a8
   14002a19e:	mov    rcx,rbx
   14002a1a1:	call   0x140007e30
   14002a1a6:	jmp    0x14002a1b6
   14002a1a8:	mov    rcx,rsi
   14002a1ab:	call   QWORD PTR [rip+0x13577]        # 0x14003d728
   14002a1b1:	mov    rcx,rbx
   14002a1b4:	call   rsi
   14002a1b6:	cmp    DWORD PTR [rdi-0x8],0x0
   14002a1ba:	mov    rsi,rax
   14002a1bd:	jl     0x14002a1cf
   14002a1bf:	cmp    rax,QWORD PTR [rdi-0x18]
   14002a1c3:	jne    0x14002a1cf
   14002a1c5:	lea    rbx,[rdi-0x18]
   14002a1c9:	lock inc DWORD PTR [rdi-0x8]
   14002a1cd:	jmp    0x14002a21b
   14002a1cf:	mov    rax,QWORD PTR [rsi]
   14002a1d2:	mov    rbx,QWORD PTR [rax]
   14002a1d5:	mov    rcx,rbx
   14002a1d8:	call   QWORD PTR [rip+0x1354a]        # 0x14003d728
   14002a1de:	mov    edx,DWORD PTR [rdi-0x10]
   14002a1e1:	mov    r8d,0x2
   14002a1e7:	mov    rcx,rsi
   14002a1ea:	call   rbx
   14002a1ec:	mov    rbx,rax
   14002a1ef:	test   rax,rax
   14002a1f2:	jne    0x14002a1fa
   14002a1f4:	call   0x14002dd90
   14002a1f9:	int3   
   14002a1fa:	mov    eax,DWORD PTR [rdi-0x10]
   14002a1fd:	lea    rcx,[rbx+0x18]
   14002a201:	mov    DWORD PTR [rbx+0x8],eax
   14002a204:	mov    r8,rdi
   14002a207:	mov    eax,DWORD PTR [rdi-0x10]
   14002a20a:	inc    eax
   14002a20c:	movsxd rdx,eax
   14002a20f:	add    rdx,rdx
   14002a212:	mov    r9,rdx
   14002a215:	call   QWORD PTR [rip+0x13425]        # 0x14003d640
   14002a21b:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a220:	lea    rax,[rbx+0x18]
   14002a224:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a229:	mov    rdi,QWORD PTR [rsp+0x40]
   14002a22e:	mov    QWORD PTR [r14],rax
   14002a231:	mov    rax,r14
   14002a234:	add    rsp,0x20
   14002a238:	pop    r14
   14002a23a:	ret    
   14002a23b:	int3   
   14002a23c:	int3   
   14002a23d:	int3   
   14002a23e:	int3   
   14002a23f:	int3   
   14002a240:	int3   
   14002a241:	int3   
   14002a242:	int3   
   14002a243:	int3   
   14002a244:	sub    rsp,0x28
   14002a248:	cmp    rdx,QWORD PTR [rcx+0x8]
   14002a24c:	jb     0x14002a259
   14002a24e:	mov    ecx,0x80070057
   14002a253:	call   0x1400152fc
   14002a258:	int3   
   14002a259:	mov    rax,QWORD PTR [rcx]
   14002a25c:	lea    rax,[rax+rdx*8]
   14002a260:	add    rsp,0x28
   14002a264:	ret    
   14002a265:	int3   
   14002a266:	int3   
   14002a267:	int3   
   14002a268:	int3   
   14002a269:	int3   
   14002a26a:	int3   
   14002a26b:	int3   
   14002a26c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a271:	mov    QWORD PTR [rsp+0x10],rsi
   14002a276:	push   rdi
   14002a277:	sub    rsp,0x20
   14002a27b:	mov    rsi,QWORD PTR [rcx]
   14002a27e:	mov    rdi,rcx
   14002a281:	test   rsi,rsi
   14002a284:	je     0x14002a29f
   14002a286:	mov    rax,QWORD PTR [rsi]
   14002a289:	mov    rbx,QWORD PTR [rax]
   14002a28c:	mov    rcx,rbx
   14002a28f:	call   QWORD PTR [rip+0x13493]        # 0x14003d728
   14002a295:	mov    edx,0x1
   14002a29a:	mov    rcx,rsi
   14002a29d:	call   rbx
   14002a29f:	and    QWORD PTR [rdi],0x0
   14002a2a3:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a2a8:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a2ad:	add    rsp,0x20
   14002a2b1:	pop    rdi
   14002a2b2:	ret    
   14002a2b3:	int3   
   14002a2b4:	int3   
   14002a2b5:	int3   
   14002a2b6:	int3   
   14002a2b7:	int3   
   14002a2b8:	int3   
   14002a2b9:	int3   
   14002a2ba:	int3   
   14002a2bb:	int3   
   14002a2bc:	mov    QWORD PTR [rsp+0x8],rbx
   14002a2c1:	push   rdi
   14002a2c2:	sub    rsp,0x20
   14002a2c6:	mov    rax,QWORD PTR [rdx]
   14002a2c9:	mov    rdi,rdx
   14002a2cc:	mov    rbx,rcx
   14002a2cf:	cmp    QWORD PTR [rcx],rax
   14002a2d2:	jne    0x14002a2df
   14002a2d4:	cmp    rcx,rdx
   14002a2d7:	je     0x14002a2ee
   14002a2d9:	and    QWORD PTR [rdx],0x0
   14002a2dd:	jmp    0x14002a2ee
   14002a2df:	call   0x14002a26c
   14002a2e4:	mov    rax,QWORD PTR [rdi]
   14002a2e7:	and    QWORD PTR [rdi],0x0
   14002a2eb:	mov    QWORD PTR [rbx],rax
   14002a2ee:	mov    rax,rbx
   14002a2f1:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a2f6:	add    rsp,0x20
   14002a2fa:	pop    rdi
   14002a2fb:	ret    
   14002a2fc:	int3   
   14002a2fd:	int3   
   14002a2fe:	int3   
   14002a2ff:	int3   
   14002a300:	int3   
   14002a301:	int3   
   14002a302:	int3   
   14002a303:	int3   
   14002a304:	jmp    0x14002a26c
   14002a309:	int3   
   14002a30a:	int3   
   14002a30b:	int3   
   14002a30c:	int3   
   14002a30d:	int3   
   14002a30e:	int3   
   14002a30f:	int3   
   14002a310:	lea    rax,[rip+0x14009]        # 0x14003e320
   14002a317:	mov    QWORD PTR [rcx],rax
   14002a31a:	jmp    0x1400050f0
   14002a31f:	int3   
   14002a320:	int3   
   14002a321:	int3   
   14002a322:	int3   
   14002a323:	int3   
   14002a324:	int3   
   14002a325:	int3   
   14002a326:	int3   
   14002a327:	int3   
   14002a328:	jmp    0x14000d8bc
   14002a32d:	int3   
   14002a32e:	int3   
   14002a32f:	int3   
   14002a330:	int3   
   14002a331:	int3   
   14002a332:	int3   
   14002a333:	int3   
   14002a334:	mov    QWORD PTR [rsp+0x8],rbx
   14002a339:	push   rdi
   14002a33a:	sub    rsp,0x20
   14002a33e:	mov    rbx,QWORD PTR [rcx]
   14002a341:	test   rbx,rbx
   14002a344:	je     0x14002a371
   14002a346:	mov    rax,QWORD PTR [rbx]
   14002a349:	mov    rdi,QWORD PTR [rax+0x10]
   14002a34d:	lea    rax,[rip+0xfffffffffffe218c]        # 0x14000c4e0
   14002a354:	cmp    rdi,rax
   14002a357:	jne    0x14002a363
   14002a359:	mov    rcx,rbx
   14002a35c:	call   0x14000c4e0
   14002a361:	jmp    0x14002a371
   14002a363:	mov    rcx,rdi
   14002a366:	call   QWORD PTR [rip+0x133bc]        # 0x14003d728
   14002a36c:	mov    rcx,rbx
   14002a36f:	call   rdi
   14002a371:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a376:	add    rsp,0x20
   14002a37a:	pop    rdi
   14002a37b:	ret    
   14002a37c:	int3   
   14002a37d:	int3   
   14002a37e:	int3   
   14002a37f:	int3   
   14002a380:	int3   
   14002a381:	int3   
   14002a382:	int3   
   14002a383:	int3   
   14002a384:	mov    rcx,QWORD PTR [rcx]
   14002a387:	rex.W jmp QWORD PTR [rip+0x1304a]        # 0x14003d3d8
   14002a38e:	int3   
   14002a38f:	int3   
   14002a390:	int3   
   14002a391:	int3   
   14002a392:	int3   
   14002a393:	int3   
   14002a394:	jmp    0x140011f70
   14002a399:	int3   
   14002a39a:	int3   
   14002a39b:	int3   
   14002a39c:	int3   
   14002a39d:	int3   
   14002a39e:	int3   
   14002a39f:	int3   
   14002a3a0:	mov    r10d,DWORD PTR [rdx]
   14002a3a3:	xor    edx,edx
   14002a3a5:	mov    eax,r10d
   14002a3a8:	mov    DWORD PTR [r9],r10d
   14002a3ab:	div    DWORD PTR [rip+0x24a9f]        # 0x14004ee50
   14002a3b1:	mov    r9d,edx
   14002a3b4:	mov    DWORD PTR [r8],r9d
   14002a3b7:	mov    r8,QWORD PTR [rip+0x24a82]        # 0x14004ee40
   14002a3be:	test   r8,r8
   14002a3c1:	je     0x14002a3ea
   14002a3c3:	mov    rdx,QWORD PTR [rsp+0x28]
   14002a3c8:	xor    ecx,ecx
   14002a3ca:	mov    rax,QWORD PTR [r8+r9*8]
   14002a3ce:	and    QWORD PTR [rdx],rcx
   14002a3d1:	jmp    0x14002a3e5
   14002a3d3:	cmp    DWORD PTR [rax+0x18],r10d
   14002a3d7:	jne    0x14002a3de
   14002a3d9:	cmp    DWORD PTR [rax],r10d
   14002a3dc:	je     0x14002a3ed
   14002a3de:	mov    rcx,rax
   14002a3e1:	mov    rax,QWORD PTR [rax+0x10]
   14002a3e5:	test   rax,rax
   14002a3e8:	jne    0x14002a3d3
   14002a3ea:	xor    eax,eax
   14002a3ec:	ret    
   14002a3ed:	mov    QWORD PTR [rdx],rcx
   14002a3f0:	ret    
   14002a3f1:	int3   
   14002a3f2:	int3   
   14002a3f3:	int3   
   14002a3f4:	int3   
   14002a3f5:	int3   
   14002a3f6:	int3   
   14002a3f7:	int3   
   14002a3f8:	mov    rax,rsp
   14002a3fb:	mov    QWORD PTR [rax+0x10],rbx
   14002a3ff:	mov    QWORD PTR [rax+0x18],rsi
   14002a403:	mov    QWORD PTR [rax+0x20],rdi
   14002a407:	push   r14
   14002a409:	sub    rsp,0x20
   14002a40d:	mov    rbx,rdx
   14002a410:	mov    BYTE PTR [rax+0x8],0x0
   14002a414:	lea    rdx,[rax+0x8]
   14002a418:	mov    rdi,rcx
   14002a41b:	test   r8,r8
   14002a41e:	mov    r14,r9
   14002a421:	cmovne rdx,r8
   14002a425:	mov    rcx,rdx
   14002a428:	call   0x14002d728
   14002a42d:	sub    rbx,rdi
   14002a430:	mov    rcx,rdi
   14002a433:	cmp    rax,rbx
   14002a436:	mov    rsi,rax
   14002a439:	cmovb  rbx,rax
   14002a43d:	mov    r8,rbx
   14002a440:	call   0x1400156f2
   14002a445:	xor    eax,eax
   14002a447:	cmp    rbx,0x1
   14002a44b:	cmova  rax,rdi
   14002a44f:	test   r14,r14
   14002a452:	je     0x14002a457
   14002a454:	mov    QWORD PTR [r14],rax
   14002a457:	cmp    rbx,rsi
   14002a45a:	jae    0x14002a467
   14002a45c:	test   rbx,rbx
   14002a45f:	je     0x14002a467
   14002a461:	xor    eax,eax
   14002a463:	mov    BYTE PTR [rbx+rdi*1-0x1],al
   14002a467:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a46c:	lea    rax,[rbx+rdi*1]
   14002a470:	mov    rbx,QWORD PTR [rsp+0x38]
   14002a475:	mov    rdi,QWORD PTR [rsp+0x48]
   14002a47a:	add    rsp,0x20
   14002a47e:	pop    r14
   14002a480:	ret    
   14002a481:	int3   
   14002a482:	int3   
   14002a483:	int3   
   14002a484:	int3   
   14002a485:	int3   
   14002a486:	int3   
   14002a487:	int3   
   14002a488:	mov    rax,rsp
   14002a48b:	mov    QWORD PTR [rax+0x10],rbx
   14002a48f:	mov    QWORD PTR [rax+0x18],rbp
   14002a493:	mov    QWORD PTR [rax+0x20],rsi
   14002a497:	push   rdi
   14002a498:	push   r14
   14002a49a:	push   r15
   14002a49c:	sub    rsp,0x20
   14002a4a0:	xor    r15d,r15d
   14002a4a3:	mov    rdi,rcx
   14002a4a6:	lea    rcx,[rax+0x8]
   14002a4aa:	mov    WORD PTR [rax+0x8],r15w
   14002a4af:	test   r8,r8
   14002a4b2:	mov    r14,r9
   14002a4b5:	mov    rbx,rdx
   14002a4b8:	cmovne rcx,r8
   14002a4bc:	call   0x14002d750
   14002a4c1:	sub    rbx,rdi
   14002a4c4:	mov    rbp,rax
   14002a4c7:	shr    rbp,1
   14002a4ca:	mov    rdx,rcx
   14002a4cd:	shr    rbx,1
   14002a4d0:	mov    rcx,rdi
   14002a4d3:	cmp    rbp,rbx
   14002a4d6:	cmovb  rbx,rbp
   14002a4da:	lea    rsi,[rbx+rbx*1]
   14002a4de:	mov    r8,rsi
   14002a4e1:	call   0x1400156f2
   14002a4e6:	cmp    rbx,0x1
   14002a4ea:	mov    eax,r15d
   14002a4ed:	cmova  rax,rdi
   14002a4f1:	test   r14,r14
   14002a4f4:	je     0x14002a4f9
   14002a4f6:	mov    QWORD PTR [r14],rax
   14002a4f9:	cmp    rbx,rbp
   14002a4fc:	jae    0x14002a50a
   14002a4fe:	test   rbx,rbx
   14002a501:	je     0x14002a50a
   14002a503:	xor    eax,eax
   14002a505:	mov    WORD PTR [rsi+rdi*1-0x2],ax
   14002a50a:	mov    rbx,QWORD PTR [rsp+0x48]
   14002a50f:	lea    rax,[rsi+rdi*1]
   14002a513:	mov    rsi,QWORD PTR [rsp+0x58]
   14002a518:	mov    rbp,QWORD PTR [rsp+0x50]
   14002a51d:	add    rsp,0x20
   14002a521:	pop    r15
   14002a523:	pop    r14
   14002a525:	pop    rdi
   14002a526:	ret    
   14002a527:	int3   
   14002a528:	int3   
   14002a529:	int3   
   14002a52a:	int3   
   14002a52b:	int3   
   14002a52c:	int3   
   14002a52d:	int3   
   14002a52e:	int3   
   14002a52f:	int3   
   14002a530:	sub    rsp,0x68
   14002a534:	mov    rax,QWORD PTR [rip+0x23ad5]        # 0x14004e010
   14002a53b:	xor    rax,rsp
   14002a53e:	mov    QWORD PTR [rsp+0x50],rax
   14002a543:	cmp    DWORD PTR [rcx],0x5
   14002a546:	mov    r10,rdx
   14002a549:	jbe    0x14002a582
   14002a54b:	movabs rdx,0x200000000000
   14002a555:	call   0x14000130c
   14002a55a:	test   al,al
   14002a55c:	je     0x14002a582
   14002a55e:	lea    rax,[rsp+0x30]
   14002a563:	xor    r9d,r9d
   14002a566:	mov    QWORD PTR [rsp+0x28],rax
   14002a56b:	lea    rdx,[rip+0x17597]        # 0x140041b09
   14002a572:	mov    r8,r10
   14002a575:	mov    DWORD PTR [rsp+0x20],0x2
   14002a57d:	call   0x140001264
   14002a582:	mov    rcx,QWORD PTR [rsp+0x50]
   14002a587:	xor    rcx,rsp
   14002a58a:	call   0x1400141d0
   14002a58f:	add    rsp,0x68
   14002a593:	ret    
   14002a594:	int3   
   14002a595:	int3   
   14002a596:	int3   
   14002a597:	int3   
   14002a598:	int3   
   14002a599:	int3   
   14002a59a:	int3   
   14002a59b:	int3   
   14002a59c:	mov    rax,rsp
   14002a59f:	mov    QWORD PTR [rax+0x8],rcx
   14002a5a3:	push   rdi
   14002a5a4:	sub    rsp,0x30
   14002a5a8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002a5b0:	mov    QWORD PTR [rax+0x18],rbx
   14002a5b4:	mov    QWORD PTR [rax+0x20],rsi
   14002a5b8:	mov    rdi,rdx
   14002a5bb:	mov    rsi,rcx
   14002a5be:	and    DWORD PTR [rcx+0x8],0x0
   14002a5c2:	lea    rax,[rip+0x18557]        # 0x140042b20
   14002a5c9:	mov    QWORD PTR [rcx],rax
   14002a5cc:	lea    rbx,[rcx+0x18]
   14002a5d0:	mov    QWORD PTR [rsp+0x48],rbx
   14002a5d5:	mov    rcx,rbx
   14002a5d8:	call   0x140010380
   14002a5dd:	lea    rax,[rip+0x18494]        # 0x140042a78
   14002a5e4:	mov    QWORD PTR [rbx],rax
   14002a5e7:	lea    rax,[rip+0x1846a]        # 0x140042a58
   14002a5ee:	mov    QWORD PTR [rbx+0x8],rax
   14002a5f2:	mov    QWORD PTR [rbx+0x10],rdi
   14002a5f6:	mov    rdi,QWORD PTR [rip+0x24563]        # 0x14004eb60
   14002a5fd:	mov    rax,QWORD PTR [rdi]
   14002a600:	mov    rbx,QWORD PTR [rax+0x8]
   14002a604:	mov    rcx,rbx
   14002a607:	call   QWORD PTR [rip+0x1311b]        # 0x14003d728
   14002a60d:	mov    rcx,rdi
   14002a610:	call   rbx
   14002a612:	nop
   14002a613:	mov    rax,rsi
   14002a616:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a61b:	mov    rsi,QWORD PTR [rsp+0x58]
   14002a620:	add    rsp,0x30
   14002a624:	pop    rdi
   14002a625:	ret    
   14002a626:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a62d:	add    rcx,0x8
   14002a631:	jmp    0x14000dff0
   14002a636:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a63d:	add    rcx,0x18
   14002a641:	jmp    0x14002a960
   14002a646:	int3   
   14002a647:	int3   
   14002a648:	int3   
   14002a649:	int3   
   14002a64a:	int3   
   14002a64b:	int3   
   14002a64c:	mov    rax,rsp
   14002a64f:	mov    QWORD PTR [rax+0x8],rcx
   14002a653:	push   rdi
   14002a654:	sub    rsp,0x30
   14002a658:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002a660:	mov    QWORD PTR [rax+0x10],rbx
   14002a664:	mov    QWORD PTR [rax+0x18],rsi
   14002a668:	mov    r8,rdx
   14002a66b:	mov    rsi,rcx
   14002a66e:	and    DWORD PTR [rcx+0x8],0x0
   14002a672:	lea    rax,[rip+0x18487]        # 0x140042b00
   14002a679:	mov    QWORD PTR [rcx],rax
   14002a67c:	add    rcx,0x10
   14002a680:	call   0x14000cd70
   14002a685:	lea    r9,[rip+0x18364]        # 0x1400429f0
   14002a68c:	mov    QWORD PTR [rcx],r9
   14002a68f:	lea    rax,[rip+0x1832a]        # 0x1400429c0
   14002a696:	mov    QWORD PTR [rcx+0x8],rax
   14002a69a:	lea    rax,[rip+0x182ef]        # 0x140042990
   14002a6a1:	mov    QWORD PTR [rcx+0x10],rax
   14002a6a5:	lea    rax,[rip+0x182c4]        # 0x140042970
   14002a6ac:	mov    QWORD PTR [rcx+0x18],rax
   14002a6b0:	lea    rax,[rip+0x18299]        # 0x140042950
   14002a6b7:	mov    QWORD PTR [rcx+0x20],rax
   14002a6bb:	mov    QWORD PTR [rcx+0x28],r8
   14002a6bf:	mov    rdi,QWORD PTR [rip+0x2449a]        # 0x14004eb60
   14002a6c6:	mov    rax,QWORD PTR [rdi]
   14002a6c9:	mov    rbx,QWORD PTR [rax+0x8]
   14002a6cd:	mov    rcx,rbx
   14002a6d0:	call   QWORD PTR [rip+0x13052]        # 0x14003d728
   14002a6d6:	mov    rcx,rdi
   14002a6d9:	call   rbx
   14002a6db:	nop
   14002a6dc:	mov    rax,rsi
   14002a6df:	mov    rbx,QWORD PTR [rsp+0x48]
   14002a6e4:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a6e9:	add    rsp,0x30
   14002a6ed:	pop    rdi
   14002a6ee:	ret    
   14002a6ef:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a6f6:	add    rcx,0x8
   14002a6fa:	jmp    0x14000dff0
   14002a6ff:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a706:	add    rcx,0x10
   14002a70a:	jmp    0x14002a96c
   14002a70f:	int3   
   14002a710:	int3   
   14002a711:	int3   
   14002a712:	int3   
   14002a713:	int3   
   14002a714:	int3   
   14002a715:	int3   
   14002a716:	int3   
   14002a717:	int3   
   14002a718:	mov    rax,rsp
   14002a71b:	mov    QWORD PTR [rax+0x8],rcx
   14002a71f:	push   rdi
   14002a720:	sub    rsp,0x30
   14002a724:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002a72c:	mov    QWORD PTR [rax+0x10],rbx
   14002a730:	mov    QWORD PTR [rax+0x18],rsi
   14002a734:	mov    rsi,rcx
   14002a737:	call   0x14000cd70
   14002a73c:	nop
   14002a73d:	lea    rax,[rip+0x1849c]        # 0x140042be0
   14002a744:	mov    QWORD PTR [rcx],rax
   14002a747:	lea    rax,[rip+0x18462]        # 0x140042bb0
   14002a74e:	mov    QWORD PTR [rcx+0x8],rax
   14002a752:	lea    rax,[rip+0x18427]        # 0x140042b80
   14002a759:	mov    QWORD PTR [rcx+0x10],rax
   14002a75d:	lea    rax,[rip+0x183fc]        # 0x140042b60
   14002a764:	mov    QWORD PTR [rcx+0x18],rax
   14002a768:	lea    rax,[rip+0x183d1]        # 0x140042b40
   14002a76f:	mov    QWORD PTR [rcx+0x20],rax
   14002a773:	mov    rdi,QWORD PTR [rip+0x243e6]        # 0x14004eb60
   14002a77a:	mov    rax,QWORD PTR [rdi]
   14002a77d:	mov    rbx,QWORD PTR [rax+0x8]
   14002a781:	mov    rcx,rbx
   14002a784:	call   QWORD PTR [rip+0x12f9e]        # 0x14003d728
   14002a78a:	mov    rcx,rdi
   14002a78d:	call   rbx
   14002a78f:	nop
   14002a790:	mov    rax,rsi
   14002a793:	mov    rbx,QWORD PTR [rsp+0x48]
   14002a798:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a79d:	add    rsp,0x30
   14002a7a1:	pop    rdi
   14002a7a2:	ret    
   14002a7a3:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a7aa:	jmp    0x14000cbd4
   14002a7af:	int3   
   14002a7b0:	int3   
   14002a7b1:	int3   
   14002a7b2:	int3   
   14002a7b3:	int3   
   14002a7b4:	int3   
   14002a7b5:	int3   
   14002a7b6:	int3   
   14002a7b7:	int3   
   14002a7b8:	rex push rbx
   14002a7ba:	sub    rsp,0x20
   14002a7be:	movups xmm0,XMMWORD PTR [rdx]
   14002a7c1:	mov    rbx,rcx
   14002a7c4:	movups XMMWORD PTR [rcx],xmm0
   14002a7c7:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14002a7cb:	movups XMMWORD PTR [rcx+0x10],xmm1
   14002a7cf:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14002a7d3:	movups XMMWORD PTR [rcx+0x20],xmm0
   14002a7d7:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14002a7db:	movups XMMWORD PTR [rcx+0x30],xmm1
   14002a7df:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14002a7e3:	movups XMMWORD PTR [rcx+0x40],xmm0
   14002a7e7:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14002a7eb:	movups XMMWORD PTR [rcx+0x50],xmm1
   14002a7ef:	movups xmm0,XMMWORD PTR [rdx+0x60]
   14002a7f3:	movups XMMWORD PTR [rcx+0x60],xmm0
   14002a7f7:	mov    ecx,0x80
   14002a7fc:	movups xmm0,XMMWORD PTR [rdx+0x70]
   14002a800:	movups XMMWORD PTR [rbx+rcx*1-0x10],xmm0
   14002a805:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   14002a809:	movups XMMWORD PTR [rbx+rcx*1],xmm1
   14002a80d:	lea    rcx,[rbx+0x90]
   14002a814:	and    QWORD PTR [rcx],0x0
   14002a818:	and    QWORD PTR [rcx+0x8],0x0
   14002a81d:	mov    r8,QWORD PTR [rdx+0x98]
   14002a824:	mov    rdx,QWORD PTR [rdx+0x90]
   14002a82b:	call   0x14002de00
   14002a830:	mov    rax,rbx
   14002a833:	add    rsp,0x20
   14002a837:	pop    rbx
   14002a838:	ret    
   14002a839:	int3   
   14002a83a:	int3   
   14002a83b:	int3   
   14002a83c:	int3   
   14002a83d:	int3   
   14002a83e:	int3   
   14002a83f:	int3   
   14002a840:	and    QWORD PTR [rcx],0x0
   14002a844:	mov    rax,rcx
   14002a847:	and    DWORD PTR [rcx+0x8],0x0
   14002a84b:	or     DWORD PTR [rcx+0xc],0xffffffff
   14002a84f:	ret    
   14002a850:	int3   
   14002a851:	int3   
   14002a852:	int3   
   14002a853:	int3   
   14002a854:	int3   
   14002a855:	int3   
   14002a856:	int3   
   14002a857:	int3   
   14002a858:	mov    rax,rsp
   14002a85b:	mov    QWORD PTR [rax+0x8],rcx
   14002a85f:	push   rdi
   14002a860:	sub    rsp,0x30
   14002a864:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002a86c:	mov    QWORD PTR [rax+0x10],rbx
   14002a870:	mov    QWORD PTR [rax+0x18],rsi
   14002a874:	lea    rax,[rip+0x182a5]        # 0x140042b20
   14002a87b:	mov    QWORD PTR [rcx],rax
   14002a87e:	mov    DWORD PTR [rcx+0x8],0xc0000001
   14002a885:	lea    rsi,[rcx+0x18]
   14002a889:	mov    rcx,rsi
   14002a88c:	call   0x14001031c
   14002a891:	mov    rdi,QWORD PTR [rip+0x242c8]        # 0x14004eb60
   14002a898:	mov    rax,QWORD PTR [rdi]
   14002a89b:	mov    rbx,QWORD PTR [rax+0x10]
   14002a89f:	mov    rcx,rbx
   14002a8a2:	call   QWORD PTR [rip+0x12e80]        # 0x14003d728
   14002a8a8:	mov    rcx,rdi
   14002a8ab:	call   rbx
   14002a8ad:	nop
   14002a8ae:	mov    QWORD PTR [rsp+0x40],rsi
   14002a8b3:	mov    rcx,rsi
   14002a8b6:	mov    rbx,QWORD PTR [rsp+0x48]
   14002a8bb:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a8c0:	add    rsp,0x30
   14002a8c4:	pop    rdi
   14002a8c5:	jmp    0x14001018c
   14002a8ca:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a8d1:	add    rcx,0x18
   14002a8d5:	jmp    0x14002a960
   14002a8da:	int3   
   14002a8db:	int3   
   14002a8dc:	int3   
   14002a8dd:	int3   
   14002a8de:	int3   
   14002a8df:	int3   
   14002a8e0:	mov    rax,rsp
   14002a8e3:	mov    QWORD PTR [rax+0x8],rcx
   14002a8e7:	push   rdi
   14002a8e8:	sub    rsp,0x30
   14002a8ec:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002a8f4:	mov    QWORD PTR [rax+0x10],rbx
   14002a8f8:	mov    QWORD PTR [rax+0x18],rsi
   14002a8fc:	mov    rsi,rcx
   14002a8ff:	lea    rax,[rip+0x181fa]        # 0x140042b00
   14002a906:	mov    QWORD PTR [rcx],rax
   14002a909:	mov    DWORD PTR [rcx+0x8],0xc0000001
   14002a910:	mov    rdi,QWORD PTR [rip+0x24249]        # 0x14004eb60
   14002a917:	mov    rax,QWORD PTR [rdi]
   14002a91a:	mov    rbx,QWORD PTR [rax+0x10]
   14002a91e:	mov    rcx,rbx
   14002a921:	call   QWORD PTR [rip+0x12e01]        # 0x14003d728
   14002a927:	mov    rcx,rdi
   14002a92a:	call   rbx
   14002a92c:	nop
   14002a92d:	lea    rcx,[rsi+0x10]
   14002a931:	mov    QWORD PTR [rsp+0x40],rcx
   14002a936:	mov    rbx,QWORD PTR [rsp+0x48]
   14002a93b:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a940:	add    rsp,0x30
   14002a944:	pop    rdi
   14002a945:	jmp    0x14000cbd4
   14002a94a:	mov    rcx,QWORD PTR [rdx+0x40]
   14002a951:	add    rcx,0x10
   14002a955:	jmp    0x14002a96c
   14002a95a:	int3   
   14002a95b:	int3   
   14002a95c:	int3   
   14002a95d:	int3   
   14002a95e:	int3   
   14002a95f:	int3   
   14002a960:	jmp    0x14001018c
   14002a965:	int3   
   14002a966:	int3   
   14002a967:	int3   
   14002a968:	int3   
   14002a969:	int3   
   14002a96a:	int3   
   14002a96b:	int3   
   14002a96c:	jmp    0x14000cbd4
   14002a971:	int3   
   14002a972:	int3   
   14002a973:	int3   
   14002a974:	int3   
   14002a975:	int3   
   14002a976:	int3   
   14002a977:	int3   
   14002a978:	rex push rbx
   14002a97a:	sub    rsp,0x20
   14002a97e:	cmp    BYTE PTR [rcx+0x8],0x0
   14002a982:	mov    rbx,rcx
   14002a985:	je     0x14002a994
   14002a987:	mov    rcx,QWORD PTR [rcx]
   14002a98a:	call   QWORD PTR [rip+0x12a48]        # 0x14003d3d8
   14002a990:	mov    BYTE PTR [rbx+0x8],0x0
   14002a994:	add    rsp,0x20
   14002a998:	pop    rbx
   14002a999:	ret    
   14002a99a:	int3   
   14002a99b:	int3   
   14002a99c:	int3   
   14002a99d:	int3   
   14002a99e:	int3   
   14002a99f:	int3   
   14002a9a0:	mov    rax,rsp
   14002a9a3:	mov    QWORD PTR [rax+0x8],rcx
   14002a9a7:	push   rdi
   14002a9a8:	sub    rsp,0x30
   14002a9ac:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002a9b4:	mov    QWORD PTR [rax+0x10],rbx
   14002a9b8:	mov    QWORD PTR [rax+0x18],rsi
   14002a9bc:	mov    rsi,rcx
   14002a9bf:	lea    rax,[rip+0x1821a]        # 0x140042be0
   14002a9c6:	mov    QWORD PTR [rcx],rax
   14002a9c9:	lea    rax,[rip+0x181e0]        # 0x140042bb0
   14002a9d0:	mov    QWORD PTR [rcx+0x8],rax
   14002a9d4:	lea    rax,[rip+0x181a5]        # 0x140042b80
   14002a9db:	mov    QWORD PTR [rcx+0x10],rax
   14002a9df:	lea    rax,[rip+0x1817a]        # 0x140042b60
   14002a9e6:	mov    QWORD PTR [rcx+0x18],rax
   14002a9ea:	lea    rax,[rip+0x1814f]        # 0x140042b40
   14002a9f1:	mov    QWORD PTR [rcx+0x20],rax
   14002a9f5:	mov    DWORD PTR [rcx+0x28],0xc0000001
   14002a9fc:	mov    rdi,QWORD PTR [rip+0x2415d]        # 0x14004eb60
   14002aa03:	mov    rax,QWORD PTR [rdi]
   14002aa06:	mov    rbx,QWORD PTR [rax+0x10]
   14002aa0a:	mov    rcx,rbx
   14002aa0d:	call   QWORD PTR [rip+0x12d15]        # 0x14003d728
   14002aa13:	mov    rcx,rdi
   14002aa16:	call   rbx
   14002aa18:	nop
   14002aa19:	mov    rcx,rsi
   14002aa1c:	mov    rbx,QWORD PTR [rsp+0x48]
   14002aa21:	mov    rsi,QWORD PTR [rsp+0x50]
   14002aa26:	add    rsp,0x30
   14002aa2a:	pop    rdi
   14002aa2b:	jmp    0x14000cbd4
   14002aa30:	mov    rcx,QWORD PTR [rdx+0x40]
   14002aa37:	jmp    0x14000cbd4
   14002aa3c:	int3   
   14002aa3d:	int3   
   14002aa3e:	int3   
   14002aa3f:	int3   
   14002aa40:	int3   
   14002aa41:	int3   
   14002aa42:	int3   
   14002aa43:	int3   
   14002aa44:	add    rcx,0x90
   14002aa4b:	jmp    0x14000f528
   14002aa50:	int3   
   14002aa51:	int3   
   14002aa52:	int3   
   14002aa53:	int3   
   14002aa54:	int3   
   14002aa55:	int3   
   14002aa56:	int3   
   14002aa57:	int3   
   14002aa58:	int3   
   14002aa59:	int3   
   14002aa5a:	int3   
   14002aa5b:	int3   
   14002aa5c:	int3   
   14002aa5d:	int3   
   14002aa5e:	int3   
   14002aa5f:	int3   
   14002aa60:	mov    QWORD PTR [rsp+0x8],rbx
   14002aa65:	push   rdi
   14002aa66:	sub    rsp,0x20
   14002aa6a:	mov    ebx,edx
   14002aa6c:	mov    rdi,rcx
   14002aa6f:	call   0x14002a858
   14002aa74:	test   bl,0x1
   14002aa77:	je     0x14002aa81
   14002aa79:	mov    rcx,rdi
   14002aa7c:	call   0x140013de0
   14002aa81:	mov    rax,rdi
   14002aa84:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aa89:	add    rsp,0x20
   14002aa8d:	pop    rdi
   14002aa8e:	ret    
   14002aa8f:	int3   
   14002aa90:	int3   
   14002aa91:	int3   
   14002aa92:	int3   
   14002aa93:	int3   
   14002aa94:	int3   
   14002aa95:	int3   
   14002aa96:	int3   
   14002aa97:	int3   
   14002aa98:	int3   
   14002aa99:	int3   
   14002aa9a:	int3   
   14002aa9b:	int3   
   14002aa9c:	int3   
   14002aa9d:	int3   
   14002aa9e:	int3   
   14002aa9f:	int3   
   14002aaa0:	mov    QWORD PTR [rsp+0x8],rbx
   14002aaa5:	push   rdi
   14002aaa6:	sub    rsp,0x20
   14002aaaa:	mov    ebx,edx
   14002aaac:	mov    rdi,rcx
   14002aaaf:	call   0x14002a8e0
   14002aab4:	test   bl,0x1
   14002aab7:	je     0x14002aac1
   14002aab9:	mov    rcx,rdi
   14002aabc:	call   0x140013de0
   14002aac1:	mov    rax,rdi
   14002aac4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aac9:	add    rsp,0x20
   14002aacd:	pop    rdi
   14002aace:	ret    
   14002aacf:	int3   
   14002aad0:	int3   
   14002aad1:	int3   
   14002aad2:	int3   
   14002aad3:	int3   
   14002aad4:	int3   
   14002aad5:	int3   
   14002aad6:	int3   
   14002aad7:	int3   
   14002aad8:	int3   
   14002aad9:	int3   
   14002aada:	int3   
   14002aadb:	int3   
   14002aadc:	int3   
   14002aadd:	int3   
   14002aade:	int3   
   14002aadf:	int3   
   14002aae0:	mov    QWORD PTR [rsp+0x8],rbx
   14002aae5:	push   rdi
   14002aae6:	sub    rsp,0x20
   14002aaea:	mov    ebx,edx
   14002aaec:	mov    rdi,rcx
   14002aaef:	call   0x14002a9a0
   14002aaf4:	test   bl,0x1
   14002aaf7:	je     0x14002ab01
   14002aaf9:	mov    rcx,rdi
   14002aafc:	call   0x140013de0
   14002ab01:	mov    rax,rdi
   14002ab04:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ab09:	add    rsp,0x20
   14002ab0d:	pop    rdi
   14002ab0e:	ret    
   14002ab0f:	int3   
   14002ab10:	int3   
   14002ab11:	int3   
   14002ab12:	int3   
   14002ab13:	int3   
   14002ab14:	int3   
   14002ab15:	int3   
   14002ab16:	int3   
   14002ab17:	int3   
   14002ab18:	int3   
   14002ab19:	int3   
   14002ab1a:	int3   
   14002ab1b:	int3   
   14002ab1c:	int3   
   14002ab1d:	int3   
   14002ab1e:	int3   
   14002ab1f:	int3   
   14002ab20:	mov    QWORD PTR [rsp+0x8],rbx
   14002ab25:	push   rdi
   14002ab26:	sub    rsp,0x20
   14002ab2a:	mov    ebx,edx
   14002ab2c:	mov    rdi,rcx
   14002ab2f:	call   0x14002a0c4
   14002ab34:	test   bl,0x1
   14002ab37:	je     0x14002ab41
   14002ab39:	mov    rcx,rdi
   14002ab3c:	call   0x140013de0
   14002ab41:	mov    rax,rdi
   14002ab44:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ab49:	add    rsp,0x20
   14002ab4d:	pop    rdi
   14002ab4e:	ret    
   14002ab4f:	int3   
   14002ab50:	int3   
   14002ab51:	int3   
   14002ab52:	int3   
   14002ab53:	int3   
   14002ab54:	int3   
   14002ab55:	int3   
   14002ab56:	int3   
   14002ab57:	int3   
   14002ab58:	int3   
   14002ab59:	int3   
   14002ab5a:	int3   
   14002ab5b:	int3   
   14002ab5c:	int3   
   14002ab5d:	int3   
   14002ab5e:	int3   
   14002ab5f:	int3   
   14002ab60:	mov    QWORD PTR [rsp+0x8],rbx
   14002ab65:	push   rdi
   14002ab66:	sub    rsp,0x20
   14002ab6a:	lea    rax,[rip+0x137bf]        # 0x14003e330
   14002ab71:	mov    rdi,rcx
   14002ab74:	mov    QWORD PTR [rcx],rax
   14002ab77:	mov    ebx,edx
   14002ab79:	mov    rcx,QWORD PTR [rcx+0x8]
   14002ab7d:	call   QWORD PTR [rip+0x12ac5]        # 0x14003d648
   14002ab83:	test   bl,0x1
   14002ab86:	je     0x14002ab90
   14002ab88:	mov    rcx,rdi
   14002ab8b:	call   0x140013de0
   14002ab90:	mov    rax,rdi
   14002ab93:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ab98:	add    rsp,0x20
   14002ab9c:	pop    rdi
   14002ab9d:	ret    
   14002ab9e:	int3   
   14002ab9f:	int3   
   14002aba0:	int3   
   14002aba1:	int3   
   14002aba2:	int3   
   14002aba3:	int3   
   14002aba4:	int3   
   14002aba5:	int3   
   14002aba6:	int3   
   14002aba7:	int3   
   14002aba8:	int3   
   14002aba9:	int3   
   14002abaa:	int3   
   14002abab:	int3   
   14002abac:	int3   
   14002abad:	int3   
   14002abae:	int3   
   14002abaf:	int3   
   14002abb0:	mov    QWORD PTR [rsp+0x8],rbx
   14002abb5:	push   rdi
   14002abb6:	sub    rsp,0x20
   14002abba:	mov    ebx,edx
   14002abbc:	mov    rdi,rcx
   14002abbf:	call   0x14000667c
   14002abc4:	test   bl,0x1
   14002abc7:	je     0x14002abd1
   14002abc9:	mov    rcx,rdi
   14002abcc:	call   0x140013de0
   14002abd1:	mov    rax,rdi
   14002abd4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002abd9:	add    rsp,0x20
   14002abdd:	pop    rdi
   14002abde:	ret    
   14002abdf:	int3   
   14002abe0:	int3   
   14002abe1:	int3   
   14002abe2:	int3   
   14002abe3:	int3   
   14002abe4:	int3   
   14002abe5:	int3   
   14002abe6:	int3   
   14002abe7:	int3   
   14002abe8:	int3   
   14002abe9:	int3   
   14002abea:	int3   
   14002abeb:	int3   
   14002abec:	int3   
   14002abed:	int3   
   14002abee:	int3   
   14002abef:	int3   
   14002abf0:	mov    QWORD PTR [rsp+0x8],rbx
   14002abf5:	push   rdi
   14002abf6:	sub    rsp,0x20
   14002abfa:	lea    rax,[rip+0x1371f]        # 0x14003e320
   14002ac01:	mov    ebx,edx
   14002ac03:	mov    QWORD PTR [rcx],rax
   14002ac06:	mov    rdi,rcx
   14002ac09:	call   0x1400050f0
   14002ac0e:	test   bl,0x1
   14002ac11:	je     0x14002ac1b
   14002ac13:	mov    rcx,rdi
   14002ac16:	call   0x140013de0
   14002ac1b:	mov    rax,rdi
   14002ac1e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ac23:	add    rsp,0x20
   14002ac27:	pop    rdi
   14002ac28:	ret    
   14002ac29:	int3   
   14002ac2a:	int3   
   14002ac2b:	int3   
   14002ac2c:	int3   
   14002ac2d:	int3   
   14002ac2e:	int3   
   14002ac2f:	int3   
   14002ac30:	mov    QWORD PTR [rsp+0x8],rbx
   14002ac35:	push   rdi
   14002ac36:	sub    rsp,0x20
   14002ac3a:	mov    ebx,edx
   14002ac3c:	mov    rdi,rcx
   14002ac3f:	call   0x140006920
   14002ac44:	test   bl,0x1
   14002ac47:	je     0x14002ac51
   14002ac49:	mov    rcx,rdi
   14002ac4c:	call   0x140013de0
   14002ac51:	mov    rax,rdi
   14002ac54:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ac59:	add    rsp,0x20
   14002ac5d:	pop    rdi
   14002ac5e:	ret    
   14002ac5f:	int3   
   14002ac60:	int3   
   14002ac61:	int3   
   14002ac62:	int3   
   14002ac63:	int3   
   14002ac64:	int3   
   14002ac65:	int3   
   14002ac66:	int3   
   14002ac67:	int3   
   14002ac68:	int3   
   14002ac69:	int3   
   14002ac6a:	int3   
   14002ac6b:	int3   
   14002ac6c:	int3   
   14002ac6d:	int3   
   14002ac6e:	int3   
   14002ac6f:	int3   
   14002ac70:	mov    QWORD PTR [rsp+0x8],rbx
   14002ac75:	push   rdi
   14002ac76:	sub    rsp,0x20
   14002ac7a:	mov    edi,edx
   14002ac7c:	mov    rbx,rcx
   14002ac7f:	xor    edx,edx
   14002ac81:	call   0x14000beec
   14002ac86:	mov    rcx,rbx
   14002ac89:	call   0x14000c854
   14002ac8e:	call   0x14000bddc
   14002ac93:	cmp    BYTE PTR [rbx+0x62],0x0
   14002ac97:	je     0x14002ac9f
   14002ac99:	call   QWORD PTR [rip+0x28461]        # 0x140053100
   14002ac9f:	mov    rcx,rbx
   14002aca2:	call   0x14000c854
   14002aca7:	test   dil,0x1
   14002acab:	je     0x14002acb5
   14002acad:	mov    rcx,rbx
   14002acb0:	call   0x140013de0
   14002acb5:	mov    rax,rbx
   14002acb8:	mov    rbx,QWORD PTR [rsp+0x30]
   14002acbd:	add    rsp,0x20
   14002acc1:	pop    rdi
   14002acc2:	ret    
   14002acc3:	int3   
   14002acc4:	int3   
   14002acc5:	int3   
   14002acc6:	int3   
   14002acc7:	int3   
   14002acc8:	int3   
   14002acc9:	int3   
   14002acca:	int3   
   14002accb:	int3   
   14002accc:	int3   
   14002accd:	int3   
   14002acce:	int3   
   14002accf:	int3   
   14002acd0:	mov    QWORD PTR [rsp+0x8],rbx
   14002acd5:	push   rdi
   14002acd6:	sub    rsp,0x20
   14002acda:	mov    ebx,edx
   14002acdc:	mov    rdi,rcx
   14002acdf:	call   0x14000cbd4
   14002ace4:	test   bl,0x1
   14002ace7:	je     0x14002acf1
   14002ace9:	mov    rcx,rdi
   14002acec:	call   0x140013de0
   14002acf1:	mov    rax,rdi
   14002acf4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002acf9:	add    rsp,0x20
   14002acfd:	pop    rdi
   14002acfe:	ret    
   14002acff:	int3   
   14002ad00:	int3   
   14002ad01:	int3   
   14002ad02:	int3   
   14002ad03:	int3   
   14002ad04:	int3   
   14002ad05:	int3   
   14002ad06:	int3   
   14002ad07:	int3   
   14002ad08:	int3   
   14002ad09:	int3   
   14002ad0a:	int3   
   14002ad0b:	int3   
   14002ad0c:	int3   
   14002ad0d:	int3   
   14002ad0e:	int3   
   14002ad0f:	int3   
   14002ad10:	mov    QWORD PTR [rsp+0x8],rbx
   14002ad15:	push   rdi
   14002ad16:	sub    rsp,0x20
   14002ad1a:	mov    ebx,edx
   14002ad1c:	mov    rdi,rcx
   14002ad1f:	call   0x14000f054
   14002ad24:	test   bl,0x1
   14002ad27:	je     0x14002ad31
   14002ad29:	mov    rcx,rdi
   14002ad2c:	call   0x140013de0
   14002ad31:	mov    rax,rdi
   14002ad34:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ad39:	add    rsp,0x20
   14002ad3d:	pop    rdi
   14002ad3e:	ret    
   14002ad3f:	int3   
   14002ad40:	int3   
   14002ad41:	int3   
   14002ad42:	int3   
   14002ad43:	int3   
   14002ad44:	int3   
   14002ad45:	int3   
   14002ad46:	int3   
   14002ad47:	int3   
   14002ad48:	mov    QWORD PTR [rsp+0x8],rbx
   14002ad4d:	push   rdi
   14002ad4e:	sub    rsp,0x20
   14002ad52:	mov    rdi,rcx
   14002ad55:	mov    rbx,rdx
   14002ad58:	mov    rcx,rdx
   14002ad5b:	call   QWORD PTR [rip+0x12647]        # 0x14003d3a8
   14002ad61:	mov    QWORD PTR [rdi],rbx
   14002ad64:	mov    rax,rdi
   14002ad67:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ad6c:	add    rsp,0x20
   14002ad70:	pop    rdi
   14002ad71:	ret    
   14002ad72:	int3   
   14002ad73:	int3   
   14002ad74:	int3   
   14002ad75:	int3   
   14002ad76:	int3   
   14002ad77:	int3   
   14002ad78:	int3   
   14002ad79:	int3   
   14002ad7a:	int3   
   14002ad7b:	int3   
   14002ad7c:	int3   
   14002ad7d:	int3   
   14002ad7e:	int3   
   14002ad7f:	int3   
   14002ad80:	mov    QWORD PTR [rsp+0x8],rbx
   14002ad85:	push   rdi
   14002ad86:	sub    rsp,0x20
   14002ad8a:	mov    rax,QWORD PTR [rdx]
   14002ad8d:	mov    rdi,rdx
   14002ad90:	mov    rbx,QWORD PTR [rax+0x18]
   14002ad94:	mov    rcx,rbx
   14002ad97:	call   QWORD PTR [rip+0x1298b]        # 0x14003d728
   14002ad9d:	lea    r8,[rip+0x182d4]        # 0x140043078
   14002ada4:	mov    rcx,rdi
   14002ada7:	lea    rdx,[rip+0x18292]        # 0x140043040
   14002adae:	mov    rax,rbx
   14002adb1:	mov    rbx,QWORD PTR [rsp+0x30]
   14002adb6:	add    rsp,0x20
   14002adba:	pop    rdi
   14002adbb:	rex.W jmp rax
   14002adbe:	int3   
   14002adbf:	int3   
   14002adc0:	int3   
   14002adc1:	int3   
   14002adc2:	int3   
   14002adc3:	int3   
   14002adc4:	int3   
   14002adc5:	int3   
   14002adc6:	int3   
   14002adc7:	int3   
   14002adc8:	int3   
   14002adc9:	int3   
   14002adca:	int3   
   14002adcb:	int3   
   14002adcc:	int3   
   14002adcd:	int3   
   14002adce:	int3   
   14002adcf:	int3   
   14002add0:	inc    DWORD PTR [rcx+0x8]
   14002add3:	mov    eax,DWORD PTR [rcx+0x8]
   14002add6:	ret    
   14002add7:	int3   
   14002add8:	int3   
   14002add9:	int3   
   14002adda:	int3   
   14002addb:	int3   
   14002addc:	int3   
   14002addd:	int3   
   14002adde:	int3   
   14002addf:	int3   
   14002ade0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ade5:	push   rdi
   14002ade6:	sub    rsp,0x20
   14002adea:	mov    rdi,QWORD PTR [rcx+0x10]
   14002adee:	mov    rax,QWORD PTR [rdi]
   14002adf1:	mov    rbx,QWORD PTR [rax+0x8]
   14002adf5:	mov    rcx,rbx
   14002adf8:	call   QWORD PTR [rip+0x1292a]        # 0x14003d728
   14002adfe:	mov    rcx,rdi
   14002ae01:	mov    rax,rbx
   14002ae04:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ae09:	add    rsp,0x20
   14002ae0d:	pop    rdi
   14002ae0e:	rex.W jmp rax
   14002ae11:	int3   
   14002ae12:	int3   
   14002ae13:	int3   
   14002ae14:	int3   
   14002ae15:	int3   
   14002ae16:	int3   
   14002ae17:	int3   
   14002ae18:	int3   
   14002ae19:	int3   
   14002ae1a:	int3   
   14002ae1b:	int3   
   14002ae1c:	int3   
   14002ae1d:	int3   
   14002ae1e:	int3   
   14002ae1f:	int3   
   14002ae20:	mov    QWORD PTR [rsp+0x8],rbx
   14002ae25:	push   rdi
   14002ae26:	sub    rsp,0x20
   14002ae2a:	mov    rdi,QWORD PTR [rcx+0x28]
   14002ae2e:	mov    rax,QWORD PTR [rdi]
   14002ae31:	mov    rbx,QWORD PTR [rax+0x8]
   14002ae35:	mov    rcx,rbx
   14002ae38:	call   QWORD PTR [rip+0x128ea]        # 0x14003d728
   14002ae3e:	mov    rcx,rdi
   14002ae41:	mov    rax,rbx
   14002ae44:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ae49:	add    rsp,0x20
   14002ae4d:	pop    rdi
   14002ae4e:	rex.W jmp rax
   14002ae51:	int3   
   14002ae52:	int3   
   14002ae53:	int3   
   14002ae54:	int3   
   14002ae55:	int3   
   14002ae56:	int3   
   14002ae57:	int3   
   14002ae58:	int3   
   14002ae59:	int3   
   14002ae5a:	int3   
   14002ae5b:	int3   
   14002ae5c:	int3   
   14002ae5d:	int3   
   14002ae5e:	int3   
   14002ae5f:	int3   
   14002ae60:	inc    DWORD PTR [rcx+0x28]
   14002ae63:	mov    eax,DWORD PTR [rcx+0x28]
   14002ae66:	ret    
   14002ae67:	int3   
   14002ae68:	int3   
   14002ae69:	int3   
   14002ae6a:	int3   
   14002ae6b:	int3   
   14002ae6c:	int3   
   14002ae6d:	int3   
   14002ae6e:	int3   
   14002ae6f:	int3   
   14002ae70:	mov    QWORD PTR [rsp+0x8],rbx
   14002ae75:	mov    QWORD PTR [rsp+0x10],rsi
   14002ae7a:	push   rdi
   14002ae7b:	sub    rsp,0x20
   14002ae7f:	mov    rdi,rcx
   14002ae82:	test   rcx,rcx
   14002ae85:	jne    0x14002ae9c
   14002ae87:	lea    edx,[rcx+0x1]
   14002ae8a:	xor    r9d,r9d
   14002ae8d:	mov    ecx,0xc0000005
   14002ae92:	xor    r8d,r8d
   14002ae95:	call   QWORD PTR [rip+0x122dd]        # 0x14003d178
   14002ae9b:	int3   
   14002ae9c:	mov    rsi,QWORD PTR [rcx+0x8]
   14002aea0:	test   rsi,rsi
   14002aea3:	je     0x14002aecb
   14002aea5:	mov    rbx,QWORD PTR [rsi]
   14002aea8:	mov    rcx,rbx
   14002aeab:	call   QWORD PTR [rip+0x12877]        # 0x14003d728
   14002aeb1:	mov    rcx,QWORD PTR [rsi+0x8]
   14002aeb5:	call   rbx
   14002aeb7:	mov    rbx,QWORD PTR [rsi+0x10]
   14002aebb:	mov    rcx,rsi
   14002aebe:	call   0x140013de0
   14002aec3:	mov    rsi,rbx
   14002aec6:	test   rbx,rbx
   14002aec9:	jne    0x14002aea5
   14002aecb:	and    QWORD PTR [rdi+0x8],0x0
   14002aed0:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aed5:	mov    rsi,QWORD PTR [rsp+0x38]
   14002aeda:	add    rsp,0x20
   14002aede:	pop    rdi
   14002aedf:	ret    
   14002aee0:	int3   
   14002aee1:	int3   
   14002aee2:	int3   
   14002aee3:	int3   
   14002aee4:	int3   
   14002aee5:	int3   
   14002aee6:	int3   
   14002aee7:	int3   
   14002aee8:	rex push rbx
   14002aeea:	sub    rsp,0x20
   14002aeee:	mov    rbx,QWORD PTR [rip+0x23e5b]        # 0x14004ed50
   14002aef5:	xor    eax,eax
   14002aef7:	mov    rcx,QWORD PTR [rip+0x23e5a]        # 0x14004ed58
   14002aefe:	jmp    0x14002af25
   14002af00:	test   eax,eax
   14002af02:	jne    0x14002af2a
   14002af04:	mov    rdx,QWORD PTR [rbx]
   14002af07:	test   rdx,rdx
   14002af0a:	je     0x14002af21
   14002af0c:	cmp    DWORD PTR [rdx+0x28],eax
   14002af0f:	je     0x14002af21
   14002af11:	mov    ecx,DWORD PTR [rdx+0x28]
   14002af14:	call   QWORD PTR [rip+0x281b6]        # 0x1400530d0
   14002af1a:	mov    rcx,QWORD PTR [rip+0x23e37]        # 0x14004ed58
   14002af21:	add    rbx,0x8
   14002af25:	cmp    rbx,rcx
   14002af28:	jb     0x14002af00
   14002af2a:	add    rsp,0x20
   14002af2e:	pop    rbx
   14002af2f:	ret    
   14002af30:	int3   
   14002af31:	int3   
   14002af32:	int3   
   14002af33:	int3   
   14002af34:	int3   
   14002af35:	int3   
   14002af36:	int3   
   14002af37:	int3   
   14002af38:	mov    QWORD PTR [rsp+0x8],rbx
   14002af3d:	mov    QWORD PTR [rsp+0x10],rsi
   14002af42:	mov    QWORD PTR [rsp+0x18],rdi
   14002af47:	push   r14
   14002af49:	sub    rsp,0x20
   14002af4d:	mov    r14,rdx
   14002af50:	mov    rdi,rcx
   14002af53:	test   rcx,rcx
   14002af56:	jne    0x14002af5c
   14002af58:	xor    eax,eax
   14002af5a:	jmp    0x14002afa3
   14002af5c:	mov    rsi,QWORD PTR [rcx]
   14002af5f:	and    QWORD PTR [rcx],0x0
   14002af63:	test   rdx,rdx
   14002af66:	je     0x14002af86
   14002af68:	mov    rax,QWORD PTR [rdx]
   14002af6b:	mov    rbx,QWORD PTR [rax]
   14002af6e:	mov    rcx,rbx
   14002af71:	call   QWORD PTR [rip+0x127b1]        # 0x14003d728
   14002af77:	mov    r8,rdi
   14002af7a:	lea    rdx,[rip+0x180cf]        # 0x140043050
   14002af81:	mov    rcx,r14
   14002af84:	call   rbx
   14002af86:	test   rsi,rsi
   14002af89:	je     0x14002afa0
   14002af8b:	mov    rax,QWORD PTR [rsi]
   14002af8e:	mov    rbx,QWORD PTR [rax+0x10]
   14002af92:	mov    rcx,rbx
   14002af95:	call   QWORD PTR [rip+0x1278d]        # 0x14003d728
   14002af9b:	mov    rcx,rsi
   14002af9e:	call   rbx
   14002afa0:	mov    rax,QWORD PTR [rdi]
   14002afa3:	mov    rbx,QWORD PTR [rsp+0x30]
   14002afa8:	mov    rsi,QWORD PTR [rsp+0x38]
   14002afad:	mov    rdi,QWORD PTR [rsp+0x40]
   14002afb2:	add    rsp,0x20
   14002afb6:	pop    r14
   14002afb8:	ret    
   14002afb9:	int3   
   14002afba:	int3   
   14002afbb:	int3   
   14002afbc:	int3   
   14002afbd:	int3   
   14002afbe:	int3   
   14002afbf:	int3   
   14002afc0:	sub    rsp,0x28
   14002afc4:	call   QWORD PTR [rip+0x1219e]        # 0x14003d168
   14002afca:	test   eax,eax
   14002afcc:	jle    0x14002afd6
   14002afce:	movzx  eax,ax
   14002afd1:	or     eax,0x80070000
   14002afd6:	add    rsp,0x28
   14002afda:	ret    
   14002afdb:	int3   
   14002afdc:	int3   
   14002afdd:	int3   
   14002afde:	int3   
   14002afdf:	int3   
   14002afe0:	int3   
   14002afe1:	int3   
   14002afe2:	int3   
   14002afe3:	int3   
   14002afe4:	mov    rax,rsp
   14002afe7:	mov    QWORD PTR [rax+0x18],r8
   14002afeb:	mov    QWORD PTR [rax+0x8],rcx
   14002afef:	push   rdi
   14002aff0:	sub    rsp,0x40
   14002aff4:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14002affc:	mov    QWORD PTR [rax+0x10],rbx
   14002b000:	mov    QWORD PTR [rax+0x20],rsi
   14002b004:	mov    rdi,rcx
   14002b007:	test   rcx,rcx
   14002b00a:	jne    0x14002b016
   14002b00c:	mov    eax,0x80070057
   14002b011:	jmp    0x14002b0a3
   14002b016:	and    QWORD PTR [rsp+0x60],0x0
   14002b01c:	mov    ecx,0x18
   14002b021:	call   0x140013d94
   14002b026:	mov    rbx,rax
   14002b029:	mov    QWORD PTR [rsp+0x60],rax
   14002b02e:	jmp    0x14002b03a
   14002b030:	mov    rdi,QWORD PTR [rsp+0x50]
   14002b035:	mov    rbx,QWORD PTR [rsp+0x60]
   14002b03a:	test   rbx,rbx
   14002b03d:	jne    0x14002b046
   14002b03f:	mov    esi,0x8007000e
   14002b044:	jmp    0x14002b0a1
   14002b046:	lea    rax,[rip+0x123]        # 0x14002b170
   14002b04d:	mov    QWORD PTR [rbx],rax
   14002b050:	lea    rax,[rip+0x23489]        # 0x14004e4e0
   14002b057:	mov    QWORD PTR [rbx+0x8],rax
   14002b05b:	lea    rax,[rdi+0x10]
   14002b05f:	mov    QWORD PTR [rsp+0x28],rax
   14002b064:	mov    BYTE PTR [rsp+0x30],0x0
   14002b069:	lea    rcx,[rsp+0x28]
   14002b06e:	call   0x14002c610
   14002b073:	mov    esi,eax
   14002b075:	test   eax,eax
   14002b077:	js     0x14002b087
   14002b079:	mov    rcx,QWORD PTR [rdi+0x8]
   14002b07d:	mov    QWORD PTR [rbx+0x10],rcx
   14002b081:	mov    QWORD PTR [rdi+0x8],rbx
   14002b085:	jmp    0x14002b08f
   14002b087:	mov    rcx,rbx
   14002b08a:	call   0x140013de0
   14002b08f:	cmp    BYTE PTR [rsp+0x30],0x0
   14002b094:	je     0x14002b0a1
   14002b096:	mov    rcx,QWORD PTR [rsp+0x28]
   14002b09b:	call   QWORD PTR [rip+0x12337]        # 0x14003d3d8
   14002b0a1:	mov    eax,esi
   14002b0a3:	mov    rbx,QWORD PTR [rsp+0x58]
   14002b0a8:	mov    rsi,QWORD PTR [rsp+0x68]
   14002b0ad:	add    rsp,0x40
   14002b0b1:	pop    rdi
   14002b0b2:	ret    
   14002b0b3:	mov    QWORD PTR [rsp+0x10],rdx
   14002b0b8:	push   rbp
   14002b0b9:	sub    rsp,0x20
   14002b0bd:	mov    rbp,rdx
   14002b0c0:	lea    rax,[rip+0xffffffffffffff69]        # 0x14002b030
   14002b0c7:	add    rsp,0x20
   14002b0cb:	pop    rbp
   14002b0cc:	ret    
   14002b0cd:	int3   
   14002b0ce:	int3   
   14002b0cf:	int3   
   14002b0d0:	int3   
   14002b0d1:	int3   
   14002b0d2:	int3   
   14002b0d3:	int3   
   14002b0d4:	sub    rsp,0x28
   14002b0d8:	call   QWORD PTR [rip+0x1208a]        # 0x14003d168
   14002b0de:	test   eax,eax
   14002b0e0:	jle    0x14002b0ea
   14002b0e2:	movzx  eax,ax
   14002b0e5:	or     eax,0x80070000
   14002b0ea:	mov    ecx,eax
   14002b0ec:	call   0x1400152fc
   14002b0f1:	int3   
   14002b0f2:	int3   
   14002b0f3:	int3   
   14002b0f4:	int3   
   14002b0f5:	int3   
   14002b0f6:	int3   
   14002b0f7:	int3   
   14002b0f8:	mov    QWORD PTR [rsp+0x8],rbx
   14002b0fd:	push   rdi
   14002b0fe:	sub    rsp,0x20
   14002b102:	mov    rbx,rdx
   14002b105:	mov    rdi,rcx
   14002b108:	cmp    QWORD PTR [rcx],rdx
   14002b10b:	je     0x14002b119
   14002b10d:	mov    rcx,QWORD PTR [rcx]
   14002b110:	call   QWORD PTR [rip+0x27faa]        # 0x1400530c0
   14002b116:	mov    QWORD PTR [rdi],rbx
   14002b119:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b11e:	add    rsp,0x20
   14002b122:	pop    rdi
   14002b123:	ret    
   14002b124:	int3   
   14002b125:	int3   
   14002b126:	int3   
   14002b127:	int3   
   14002b128:	int3   
   14002b129:	int3   
   14002b12a:	int3   
   14002b12b:	int3   
   14002b12c:	test   rdx,rdx
   14002b12f:	je     0x14002b15d
   14002b131:	mov    QWORD PTR [rsp+0x8],rbx
   14002b136:	push   rdi
   14002b137:	sub    rsp,0x20
   14002b13b:	mov    rdi,rdx
   14002b13e:	mov    rbx,rcx
   14002b141:	mov    rcx,rbx
   14002b144:	call   0x14002a26c
   14002b149:	add    rbx,0x8
   14002b14d:	sub    rdi,0x1
   14002b151:	jne    0x14002b141
   14002b153:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b158:	add    rsp,0x20
   14002b15c:	pop    rdi
   14002b15d:	ret    
   14002b15e:	int3   
   14002b15f:	int3   
   14002b160:	int3   
   14002b161:	int3   
   14002b162:	int3   
   14002b163:	int3   
   14002b164:	int3   
   14002b165:	int3   
   14002b166:	int3   
   14002b167:	int3   
   14002b168:	int3   
   14002b169:	int3   
   14002b16a:	int3   
   14002b16b:	int3   
   14002b16c:	int3   
   14002b16d:	int3   
   14002b16e:	int3   
   14002b16f:	int3   
   14002b170:	test   rcx,rcx
   14002b173:	je     0x14002b1e7
   14002b175:	mov    QWORD PTR [rsp+0x8],rbx
   14002b17a:	mov    QWORD PTR [rsp+0x10],rsi
   14002b17f:	push   rdi
   14002b180:	sub    rsp,0x20
   14002b184:	mov    rsi,QWORD PTR [rcx+0x18]
   14002b188:	mov    rdi,rcx
   14002b18b:	test   rsi,rsi
   14002b18e:	je     0x14002b1a5
   14002b190:	mov    rax,QWORD PTR [rsi]
   14002b193:	mov    rbx,QWORD PTR [rax+0x10]
   14002b197:	mov    rcx,rbx
   14002b19a:	call   QWORD PTR [rip+0x12588]        # 0x14003d728
   14002b1a0:	mov    rcx,rsi
   14002b1a3:	call   rbx
   14002b1a5:	and    QWORD PTR [rdi+0x18],0x0
   14002b1aa:	mov    rcx,QWORD PTR [rdi+0x28]
   14002b1ae:	test   rcx,rcx
   14002b1b1:	je     0x14002b1d3
   14002b1b3:	lea    rbx,[rcx-0x8]
   14002b1b7:	mov    edx,0x10
   14002b1bc:	mov    r8d,DWORD PTR [rbx]
   14002b1bf:	lea    r9,[rip+0xfffffffffffe41fa]        # 0x14000f3c0
   14002b1c6:	call   0x1400141f4
   14002b1cb:	mov    rcx,rbx
   14002b1ce:	call   0x140013de0
   14002b1d3:	and    QWORD PTR [rdi+0x28],0x0
   14002b1d8:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b1dd:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b1e2:	add    rsp,0x20
   14002b1e6:	pop    rdi
   14002b1e7:	ret    
   14002b1e8:	int3   
   14002b1e9:	int3   
   14002b1ea:	int3   
   14002b1eb:	int3   
   14002b1ec:	int3   
   14002b1ed:	int3   
   14002b1ee:	int3   
   14002b1ef:	int3   
   14002b1f0:	test   rcx,rcx
   14002b1f3:	je     0x14002b470
   14002b1f9:	jmp    0x14002b364
   14002b1fe:	int3   
   14002b1ff:	int3   
   14002b200:	int3   
   14002b201:	int3   
   14002b202:	int3   
   14002b203:	int3   
   14002b204:	mov    rax,rsp
   14002b207:	mov    QWORD PTR [rax+0x18],r8
   14002b20b:	mov    QWORD PTR [rax+0x10],rdx
   14002b20f:	push   rsi
   14002b210:	push   rdi
   14002b211:	push   r12
   14002b213:	push   r14
   14002b215:	push   r15
   14002b217:	sub    rsp,0x40
   14002b21b:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   14002b223:	mov    QWORD PTR [rax+0x8],rbx
   14002b227:	mov    r15,r8
   14002b22a:	mov    r12,rdx
   14002b22d:	mov    rbx,rcx
   14002b230:	xor    edi,edi
   14002b232:	test   r8,r8
   14002b235:	jne    0x14002b241
   14002b237:	mov    eax,0x80004003
   14002b23c:	jmp    0x14002b325
   14002b241:	mov    QWORD PTR [r8],rdi
   14002b244:	mov    r14d,0x8007000e
   14002b24a:	mov    DWORD PTR [rsp+0x88],r14d
   14002b252:	mov    QWORD PTR [rsp+0x20],rdi
   14002b257:	mov    ecx,0x140
   14002b25c:	call   0x140013d94
   14002b261:	mov    QWORD PTR [rsp+0x30],rax
   14002b266:	test   rax,rax
   14002b269:	je     0x14002b27b
   14002b26b:	mov    rdx,rbx
   14002b26e:	mov    rcx,rax
   14002b271:	call   0x14002a59c
   14002b276:	mov    rsi,rax
   14002b279:	jmp    0x14002b27e
   14002b27b:	mov    rsi,rdi
   14002b27e:	mov    QWORD PTR [rsp+0x20],rsi
   14002b283:	jmp    0x14002b2a1
   14002b285:	xor    edi,edi
   14002b287:	mov    r15,QWORD PTR [rsp+0x80]
   14002b28f:	mov    r12,QWORD PTR [rsp+0x78]
   14002b294:	mov    r14d,DWORD PTR [rsp+0x88]
   14002b29c:	mov    rsi,QWORD PTR [rsp+0x20]
   14002b2a1:	test   rsi,rsi
   14002b2a4:	je     0x14002b322
   14002b2a6:	lea    rcx,[rsi+0x30]
   14002b2aa:	call   0x14000c130
   14002b2af:	mov    r14d,eax
   14002b2b2:	test   eax,eax
   14002b2b4:	js     0x14002b2ba
   14002b2b6:	mov    BYTE PTR [rsi+0x58],0x1
   14002b2ba:	cmovns r14d,edi
   14002b2be:	test   r14d,r14d
   14002b2c1:	js     0x14002b2e5
   14002b2c3:	mov    WORD PTR [rsi+0x131],0x0
   14002b2cc:	mov    QWORD PTR [rsi+0x60],rdi
   14002b2d0:	lea    rcx,[rsi+0x70]
   14002b2d4:	call   0x14000ddec
   14002b2d9:	mov    QWORD PTR [rsi+0x138],rdi
   14002b2e0:	mov    r14d,edi
   14002b2e3:	test   edi,edi
   14002b2e5:	jne    0x14002b308
   14002b2e7:	mov    rax,QWORD PTR [rsi]
   14002b2ea:	mov    rbx,QWORD PTR [rax]
   14002b2ed:	mov    rcx,rbx
   14002b2f0:	call   QWORD PTR [rip+0x12432]        # 0x14003d728
   14002b2f6:	mov    r8,r15
   14002b2f9:	mov    rdx,r12
   14002b2fc:	mov    rcx,rsi
   14002b2ff:	call   rbx
   14002b301:	mov    r14d,eax
   14002b304:	test   eax,eax
   14002b306:	je     0x14002b322
   14002b308:	mov    r8,QWORD PTR [rsi]
   14002b30b:	mov    rbx,QWORD PTR [r8+0x18]
   14002b30f:	mov    rcx,rbx
   14002b312:	call   QWORD PTR [rip+0x12410]        # 0x14003d728
   14002b318:	mov    edx,0x1
   14002b31d:	mov    rcx,rsi
   14002b320:	call   rbx
   14002b322:	mov    eax,r14d
   14002b325:	mov    rbx,QWORD PTR [rsp+0x70]
   14002b32a:	add    rsp,0x40
   14002b32e:	pop    r15
   14002b330:	pop    r14
   14002b332:	pop    r12
   14002b334:	pop    rdi
   14002b335:	pop    rsi
   14002b336:	ret    
   14002b337:	mov    rcx,QWORD PTR [rdx+0x30]
   14002b33e:	jmp    0x140013de0
   14002b343:	mov    QWORD PTR [rsp+0x10],rdx
   14002b348:	push   rbp
   14002b349:	sub    rsp,0x20
   14002b34d:	mov    rbp,rdx
   14002b350:	lea    rax,[rip+0xffffffffffffff2e]        # 0x14002b285
   14002b357:	add    rsp,0x20
   14002b35b:	pop    rbp
   14002b35c:	ret    
   14002b35d:	int3   
   14002b35e:	int3   
   14002b35f:	int3   
   14002b360:	int3   
   14002b361:	int3   
   14002b362:	int3   
   14002b363:	int3   
   14002b364:	mov    QWORD PTR [rsp+0x18],r8
   14002b369:	mov    QWORD PTR [rsp+0x10],rdx
   14002b36e:	push   rbx
   14002b36f:	push   rsi
   14002b370:	push   rdi
   14002b371:	push   r14
   14002b373:	push   r15
   14002b375:	sub    rsp,0x40
   14002b379:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14002b382:	mov    r14,r8
   14002b385:	mov    r15,rdx
   14002b388:	mov    rbx,rcx
   14002b38b:	test   r8,r8
   14002b38e:	jne    0x14002b39a
   14002b390:	mov    eax,0x80004003
   14002b395:	jmp    0x14002b437
   14002b39a:	and    QWORD PTR [r8],0x0
   14002b39e:	mov    esi,0x8007000e
   14002b3a3:	mov    DWORD PTR [rsp+0x88],esi
   14002b3aa:	and    QWORD PTR [rsp+0x20],0x0
   14002b3b0:	mov    ecx,0xa0
   14002b3b5:	call   0x140013d94
   14002b3ba:	mov    QWORD PTR [rsp+0x30],rax
   14002b3bf:	test   rax,rax
   14002b3c2:	je     0x14002b3d4
   14002b3c4:	mov    rdx,rbx
   14002b3c7:	mov    rcx,rax
   14002b3ca:	call   0x14002a64c
   14002b3cf:	mov    rdi,rax
   14002b3d2:	jmp    0x14002b3d6
   14002b3d4:	xor    edi,edi
   14002b3d6:	mov    QWORD PTR [rsp+0x20],rdi
   14002b3db:	jmp    0x14002b3f6
   14002b3dd:	mov    r14,QWORD PTR [rsp+0x80]
   14002b3e5:	mov    r15,QWORD PTR [rsp+0x78]
   14002b3ea:	mov    esi,DWORD PTR [rsp+0x88]
   14002b3f1:	mov    rdi,QWORD PTR [rsp+0x20]
   14002b3f6:	test   rdi,rdi
   14002b3f9:	je     0x14002b435
   14002b3fb:	mov    rax,QWORD PTR [rdi]
   14002b3fe:	mov    rbx,QWORD PTR [rax]
   14002b401:	mov    rcx,rbx
   14002b404:	call   QWORD PTR [rip+0x1231e]        # 0x14003d728
   14002b40a:	mov    r8,r14
   14002b40d:	mov    rdx,r15
   14002b410:	mov    rcx,rdi
   14002b413:	call   rbx
   14002b415:	mov    esi,eax
   14002b417:	test   eax,eax
   14002b419:	je     0x14002b435
   14002b41b:	mov    rdx,QWORD PTR [rdi]
   14002b41e:	mov    rbx,QWORD PTR [rdx+0x18]
   14002b422:	mov    rcx,rbx
   14002b425:	call   QWORD PTR [rip+0x122fd]        # 0x14003d728
   14002b42b:	mov    edx,0x1
   14002b430:	mov    rcx,rdi
   14002b433:	call   rbx
   14002b435:	mov    eax,esi
   14002b437:	add    rsp,0x40
   14002b43b:	pop    r15
   14002b43d:	pop    r14
   14002b43f:	pop    rdi
   14002b440:	pop    rsi
   14002b441:	pop    rbx
   14002b442:	ret    
   14002b443:	mov    rcx,QWORD PTR [rdx+0x30]
   14002b44a:	jmp    0x140013de0
   14002b44f:	mov    QWORD PTR [rsp+0x10],rdx
   14002b454:	push   rbp
   14002b455:	sub    rsp,0x20
   14002b459:	mov    rbp,rdx
   14002b45c:	lea    rax,[rip+0xffffffffffffff7a]        # 0x14002b3dd
   14002b463:	add    rsp,0x20
   14002b467:	pop    rbp
   14002b468:	ret    
   14002b469:	int3   
   14002b46a:	int3   
   14002b46b:	int3   
   14002b46c:	int3   
   14002b46d:	int3   
   14002b46e:	int3   
   14002b46f:	int3   
   14002b470:	mov    rax,rsp
   14002b473:	mov    QWORD PTR [rax+0x18],r8
   14002b477:	mov    QWORD PTR [rax+0x10],rdx
   14002b47b:	mov    QWORD PTR [rax+0x8],rcx
   14002b47f:	push   rbx
   14002b480:	push   rsi
   14002b481:	push   rdi
   14002b482:	push   r14
   14002b484:	push   r15
   14002b486:	sub    rsp,0x30
   14002b48a:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14002b492:	mov    rsi,r8
   14002b495:	mov    r15,rdx
   14002b498:	test   r8,r8
   14002b49b:	jne    0x14002b4a7
   14002b49d:	mov    eax,0x80004003
   14002b4a2:	jmp    0x14002b543
   14002b4a7:	and    QWORD PTR [r8],0x0
   14002b4ab:	mov    r14d,0x8007000e
   14002b4b1:	mov    DWORD PTR [rsp+0x60],r14d
   14002b4b6:	and    QWORD PTR [rsp+0x78],0x0
   14002b4bc:	mov    ecx,0x90
   14002b4c1:	call   0x140013d94
   14002b4c6:	mov    QWORD PTR [rsp+0x28],rax
   14002b4cb:	test   rax,rax
   14002b4ce:	je     0x14002b4dd
   14002b4d0:	mov    rcx,rax
   14002b4d3:	call   0x14002a718
   14002b4d8:	mov    rdi,rax
   14002b4db:	jmp    0x14002b4df
   14002b4dd:	xor    edi,edi
   14002b4df:	mov    QWORD PTR [rsp+0x78],rdi
   14002b4e4:	jmp    0x14002b4fa
   14002b4e6:	mov    rsi,QWORD PTR [rsp+0x70]
   14002b4eb:	mov    r15,QWORD PTR [rsp+0x68]
   14002b4f0:	mov    r14d,DWORD PTR [rsp+0x60]
   14002b4f5:	mov    rdi,QWORD PTR [rsp+0x78]
   14002b4fa:	test   rdi,rdi
   14002b4fd:	je     0x14002b540
   14002b4ff:	inc    DWORD PTR [rdi+0x28]
   14002b502:	dec    DWORD PTR [rdi+0x28]
   14002b505:	mov    rax,QWORD PTR [rdi]
   14002b508:	mov    rbx,QWORD PTR [rax]
   14002b50b:	mov    rcx,rbx
   14002b50e:	call   QWORD PTR [rip+0x12214]        # 0x14003d728
   14002b514:	mov    r8,rsi
   14002b517:	mov    rdx,r15
   14002b51a:	mov    rcx,rdi
   14002b51d:	call   rbx
   14002b51f:	mov    r14d,eax
   14002b522:	test   eax,eax
   14002b524:	je     0x14002b540
   14002b526:	mov    r8,QWORD PTR [rdi]
   14002b529:	mov    rbx,QWORD PTR [r8+0x60]
   14002b52d:	mov    rcx,rbx
   14002b530:	call   QWORD PTR [rip+0x121f2]        # 0x14003d728
   14002b536:	mov    edx,0x1
   14002b53b:	mov    rcx,rdi
   14002b53e:	call   rbx
   14002b540:	mov    eax,r14d
   14002b543:	add    rsp,0x30
   14002b547:	pop    r15
   14002b549:	pop    r14
   14002b54b:	pop    rdi
   14002b54c:	pop    rsi
   14002b54d:	pop    rbx
   14002b54e:	ret    
   14002b54f:	mov    rcx,QWORD PTR [rdx+0x28]
   14002b556:	jmp    0x140013de0
   14002b55b:	mov    QWORD PTR [rsp+0x10],rdx
   14002b560:	push   rbp
   14002b561:	sub    rsp,0x20
   14002b565:	mov    rbp,rdx
   14002b568:	lea    rax,[rip+0xffffffffffffff77]        # 0x14002b4e6
   14002b56f:	add    rsp,0x20
   14002b573:	pop    rbp
   14002b574:	ret    
   14002b575:	int3   
   14002b576:	int3   
   14002b577:	int3   
   14002b578:	int3   
   14002b579:	int3   
   14002b57a:	int3   
   14002b57b:	int3   
   14002b57c:	int3   
   14002b57d:	int3   
   14002b57e:	int3   
   14002b57f:	int3   
   14002b580:	mov    ecx,DWORD PTR [rip+0x235ee]        # 0x14004eb74
   14002b586:	xor    r9d,r9d
   14002b589:	xor    r8d,r8d
   14002b58c:	lea    edx,[r9+0x12]
   14002b590:	rex.W jmp QWORD PTR [rip+0x11b59]        # 0x14003d0f0
   14002b597:	int3   
   14002b598:	int3   
   14002b599:	int3   
   14002b59a:	int3   
   14002b59b:	int3   
   14002b59c:	int3   
   14002b59d:	int3   
   14002b59e:	int3   
   14002b59f:	int3   
   14002b5a0:	sub    rsp,0x28
   14002b5a4:	xor    eax,eax
   14002b5a6:	cmp    QWORD PTR [rip+0x22f4b],rax        # 0x14004e4f8
   14002b5ad:	je     0x14002b5b8
   14002b5af:	cmp    QWORD PTR [rip+0x22f52],rax        # 0x14004e508
   14002b5b6:	jne    0x14002b5bd
   14002b5b8:	call   0x14002bcbc
   14002b5bd:	add    rsp,0x28
   14002b5c1:	ret    
   14002b5c2:	int3   
   14002b5c3:	int3   
   14002b5c4:	int3   
   14002b5c5:	int3   
   14002b5c6:	int3   
   14002b5c7:	int3   
   14002b5c8:	int3   
   14002b5c9:	int3   
   14002b5ca:	int3   
   14002b5cb:	int3   
   14002b5cc:	int3   
   14002b5cd:	int3   
   14002b5ce:	int3   
   14002b5cf:	int3   
   14002b5d0:	rex push rbx
   14002b5d2:	sub    rsp,0x20
   14002b5d6:	lea    rcx,[rip+0x13513]        # 0x14003eaf0
   14002b5dd:	call   QWORD PTR [rip+0x11c4d]        # 0x14003d230
   14002b5e3:	test   rax,rax
   14002b5e6:	je     0x14002b60b
   14002b5e8:	lea    rdx,[rip+0x17c39]        # 0x140043228
   14002b5ef:	mov    rcx,rax
   14002b5f2:	call   QWORD PTR [rip+0x11c30]        # 0x14003d228
   14002b5f8:	mov    rbx,rax
   14002b5fb:	test   rax,rax
   14002b5fe:	je     0x14002b60b
   14002b600:	mov    rcx,rax
   14002b603:	call   QWORD PTR [rip+0x1211f]        # 0x14003d728
   14002b609:	call   rbx
   14002b60b:	add    rsp,0x20
   14002b60f:	pop    rbx
   14002b610:	ret    
   14002b611:	int3   
   14002b612:	int3   
   14002b613:	int3   
   14002b614:	int3   
   14002b615:	int3   
   14002b616:	int3   
   14002b617:	int3   
   14002b618:	sub    rsp,0x48
   14002b61c:	mov    rax,QWORD PTR [rsp+0x48]
   14002b621:	lea    r8,[rip+0x17c40]        # 0x140043268
   14002b628:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   14002b630:	xor    r9d,r9d
   14002b633:	mov    DWORD PTR [rsp+0x30],0x4
   14002b63b:	mov    edx,0x759
   14002b640:	mov    QWORD PTR [rsp+0x28],rax
   14002b645:	and    QWORD PTR [rsp+0x20],0x0
   14002b64b:	call   0x14002d3a0
   14002b650:	add    rsp,0x48
   14002b654:	ret    
   14002b655:	int3   
   14002b656:	int3   
   14002b657:	int3   
   14002b658:	int3   
   14002b659:	int3   
   14002b65a:	int3   
   14002b65b:	int3   
   14002b65c:	mov    rax,rsp
   14002b65f:	mov    QWORD PTR [rax+0x8],rbx
   14002b663:	mov    QWORD PTR [rax+0x10],rbp
   14002b667:	mov    QWORD PTR [rax+0x18],rsi
   14002b66b:	mov    QWORD PTR [rax+0x20],rdi
   14002b66f:	push   r14
   14002b671:	sub    rsp,0x20
   14002b675:	mov    rdi,rdx
   14002b678:	mov    BYTE PTR [rdx],0x0
   14002b67b:	xor    edx,edx
   14002b67d:	mov    rbp,r8
   14002b680:	mov    rsi,rcx
   14002b683:	xor    r14b,r14b
   14002b686:	call   0x14000ecc8
   14002b68b:	mov    rbx,rax
   14002b68e:	test   rax,rax
   14002b691:	je     0x14002b6df
   14002b693:	cmp    QWORD PTR [rax],0x0
   14002b697:	je     0x14002b6df
   14002b699:	mov    BYTE PTR [rdi],r14b
   14002b69c:	mov    r9,rbp
   14002b69f:	mov    rdx,QWORD PTR [rax]
   14002b6a2:	mov    r8,rdi
   14002b6a5:	mov    rcx,rsi
   14002b6a8:	call   0x14002c038
   14002b6ad:	test   al,al
   14002b6af:	je     0x14002b6b5
   14002b6b1:	mov    QWORD PTR [rsi+0x40],rdi
   14002b6b5:	mov    rbp,QWORD PTR [rbx]
   14002b6b8:	mov    rdi,QWORD PTR [rbp+0x8]
   14002b6bc:	mov    rax,QWORD PTR [rdi]
   14002b6bf:	mov    rbx,QWORD PTR [rax]
   14002b6c2:	mov    rcx,rbx
   14002b6c5:	call   QWORD PTR [rip+0x1205d]        # 0x14003d728
   14002b6cb:	mov    rdx,rsi
   14002b6ce:	mov    rcx,rdi
   14002b6d1:	call   rbx
   14002b6d3:	mov    rbp,QWORD PTR [rbp+0x10]
   14002b6d7:	or     r14b,al
   14002b6da:	test   rbp,rbp
   14002b6dd:	jne    0x14002b6b8
   14002b6df:	mov    rbx,QWORD PTR [rip+0x23c22]        # 0x14004f308
   14002b6e6:	test   rbx,rbx
   14002b6e9:	je     0x14002b6fc
   14002b6eb:	mov    rcx,rbx
   14002b6ee:	call   QWORD PTR [rip+0x12034]        # 0x14003d728
   14002b6f4:	mov    rdx,rsi
   14002b6f7:	mov    cl,r14b
   14002b6fa:	call   rbx
   14002b6fc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b701:	mov    rbp,QWORD PTR [rsp+0x38]
   14002b706:	mov    rsi,QWORD PTR [rsp+0x40]
   14002b70b:	mov    rdi,QWORD PTR [rsp+0x48]
   14002b710:	add    rsp,0x20
   14002b714:	pop    r14
   14002b716:	ret    
   14002b717:	int3   
   14002b718:	int3   
   14002b719:	int3   
   14002b71a:	int3   
   14002b71b:	int3   
   14002b71c:	int3   
   14002b71d:	int3   
   14002b71e:	int3   
   14002b71f:	int3   
   14002b720:	mov    QWORD PTR [rsp+0x8],rbx
   14002b725:	push   rsi
   14002b726:	sub    rsp,0x150
   14002b72d:	mov    rax,QWORD PTR [rip+0x228dc]        # 0x14004e010
   14002b734:	xor    rax,rsp
   14002b737:	mov    QWORD PTR [rsp+0x140],rax
   14002b73f:	mov    al,BYTE PTR [rip+0x23b83]        # 0x14004f2c8
   14002b745:	lea    rsi,[rip+0x23c04]        # 0x14004f350
   14002b74c:	test   al,al
   14002b74e:	jne    0x14002b804
   14002b754:	mov    ebx,0x40
   14002b759:	xor    edx,edx
   14002b75b:	mov    r8d,ebx
   14002b75e:	mov    rcx,rsi
   14002b761:	call   0x140014694
   14002b766:	and    QWORD PTR [rsp+0x20],0x0
   14002b76c:	lea    r8,[rsp+0x20]
   14002b771:	lea    rdx,[rip+0xfffffffffffea218]        # 0x140015990
   14002b778:	lea    ecx,[rbx-0x3a]
   14002b77b:	call   QWORD PTR [rip+0x11abf]        # 0x14003d240
   14002b781:	test   eax,eax
   14002b783:	je     0x14002b7fd
   14002b785:	mov    rcx,QWORD PTR [rsp+0x20]
   14002b78a:	lea    rdx,[rsp+0x30]
   14002b78f:	mov    r8d,0x104
   14002b795:	call   QWORD PTR [rip+0x11ab5]        # 0x14003d250
   14002b79b:	test   eax,eax
   14002b79d:	je     0x14002b7fd
   14002b79f:	lea    rcx,[rsp+0x30]
   14002b7a4:	or     rax,0xffffffffffffffff
   14002b7a8:	inc    rax
   14002b7ab:	cmp    BYTE PTR [rcx+rax*1],0x0
   14002b7af:	jne    0x14002b7a8
   14002b7b1:	lea    rdx,[rsp+0x30]
   14002b7b6:	add    rdx,rax
   14002b7b9:	jmp    0x14002b7c4
   14002b7bb:	cmp    BYTE PTR [rdx-0x1],0x5c
   14002b7bf:	je     0x14002b7ce
   14002b7c1:	dec    rdx
   14002b7c4:	lea    rax,[rsp+0x30]
   14002b7c9:	cmp    rdx,rax
   14002b7cc:	ja     0x14002b7bb
   14002b7ce:	mov    rcx,rsi
   14002b7d1:	sub    rdx,rsi
   14002b7d4:	lea    rax,[rbx+0x7fffffbe]
   14002b7db:	test   rax,rax
   14002b7de:	je     0x14002b7f2
   14002b7e0:	mov    al,BYTE PTR [rdx+rcx*1]
   14002b7e3:	test   al,al
   14002b7e5:	je     0x14002b7f2
   14002b7e7:	mov    BYTE PTR [rcx],al
   14002b7e9:	inc    rcx
   14002b7ec:	sub    rbx,0x1
   14002b7f0:	jne    0x14002b7d4
   14002b7f2:	test   rbx,rbx
   14002b7f5:	jne    0x14002b7fa
   14002b7f7:	dec    rcx
   14002b7fa:	mov    BYTE PTR [rcx],0x0
   14002b7fd:	mov    BYTE PTR [rip+0x23ac4],0x1        # 0x14004f2c8
   14002b804:	mov    rax,rsi
   14002b807:	mov    rcx,QWORD PTR [rsp+0x140]
   14002b80f:	xor    rcx,rsp
   14002b812:	call   0x1400141d0
   14002b817:	mov    rbx,QWORD PTR [rsp+0x160]
   14002b81f:	add    rsp,0x150
   14002b826:	pop    rsi
   14002b827:	ret    
   14002b828:	int3   
   14002b829:	int3   
   14002b82a:	int3   
   14002b82b:	int3   
   14002b82c:	int3   
   14002b82d:	int3   
   14002b82e:	int3   
   14002b82f:	int3   
   14002b830:	mov    rax,rsp
   14002b833:	mov    QWORD PTR [rax+0x8],rbx
   14002b837:	mov    QWORD PTR [rax+0x20],rsi
   14002b83b:	push   rdi
   14002b83c:	sub    rsp,0x30
   14002b840:	xor    ebx,ebx
   14002b842:	mov    rdi,rdx
   14002b845:	mov    rsi,rcx
   14002b848:	test   rdx,rdx
   14002b84b:	je     0x14002b8bd
   14002b84d:	cmp    QWORD PTR [rdx],rbx
   14002b850:	jne    0x14002b8bd
   14002b852:	mov    DWORD PTR [rax+0x10],ebx
   14002b855:	lea    rax,[rax+0x10]
   14002b859:	xor    r9d,r9d
   14002b85c:	mov    QWORD PTR [rsp+0x20],rax
   14002b861:	xor    r8d,r8d
   14002b864:	lea    edx,[rbx+0x2]
   14002b867:	call   QWORD PTR [rip+0x117d3]        # 0x14003d040
   14002b86d:	mov    ecx,DWORD PTR [rsp+0x48]
   14002b871:	lea    eax,[rbx+0x2]
   14002b874:	shr    rcx,1
   14002b877:	mul    rcx
   14002b87a:	lea    rcx,[rbx-0x1]
   14002b87e:	cmovo  rax,rcx
   14002b882:	mov    rcx,rax
   14002b885:	call   0x140013dd4
   14002b88a:	mov    QWORD PTR [rdi],rax
   14002b88d:	test   rax,rax
   14002b890:	je     0x14002b8b9
   14002b892:	mov    r9d,DWORD PTR [rsp+0x48]
   14002b897:	lea    rcx,[rsp+0x50]
   14002b89c:	mov    QWORD PTR [rsp+0x20],rcx
   14002b8a1:	lea    edx,[rbx+0x2]
   14002b8a4:	mov    rcx,rsi
   14002b8a7:	mov    DWORD PTR [rsp+0x50],ebx
   14002b8ab:	mov    r8,rax
   14002b8ae:	call   QWORD PTR [rip+0x1178c]        # 0x14003d040
   14002b8b4:	test   eax,eax
   14002b8b6:	setne  bl
   14002b8b9:	mov    al,bl
   14002b8bb:	jmp    0x14002b8bf
   14002b8bd:	xor    al,al
   14002b8bf:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b8c4:	mov    rsi,QWORD PTR [rsp+0x58]
   14002b8c9:	add    rsp,0x30
   14002b8cd:	pop    rdi
   14002b8ce:	ret    
   14002b8cf:	int3   
   14002b8d0:	int3   
   14002b8d1:	int3   
   14002b8d2:	int3   
   14002b8d3:	int3   
   14002b8d4:	int3   
   14002b8d5:	int3   
   14002b8d6:	int3   
   14002b8d7:	int3   
   14002b8d8:	mov    QWORD PTR [rsp+0x20],rbx
   14002b8dd:	push   rbp
   14002b8de:	push   rsi
   14002b8df:	push   rdi
   14002b8e0:	push   r14
   14002b8e2:	push   r15
   14002b8e4:	sub    rsp,0x250
   14002b8eb:	mov    rax,QWORD PTR [rip+0x2271e]        # 0x14004e010
   14002b8f2:	xor    rax,rsp
   14002b8f5:	mov    QWORD PTR [rsp+0x240],rax
   14002b8fd:	mov    r14,rcx
   14002b900:	lea    rsi,[rip+0x17759]        # 0x140043060
   14002b907:	mov    ecx,DWORD PTR [r8]
   14002b90a:	xor    r15d,r15d
   14002b90d:	mov    rbx,r8
   14002b910:	mov    rdi,rdx
   14002b913:	test   ecx,ecx
   14002b915:	je     0x14002b94f
   14002b917:	sub    ecx,0x1
   14002b91a:	je     0x14002b946
   14002b91c:	sub    ecx,0x1
   14002b91f:	je     0x14002b93d
   14002b921:	sub    ecx,0x1
   14002b924:	je     0x14002b934
   14002b926:	cmp    ecx,0x1
   14002b929:	jne    0x14002b956
   14002b92b:	lea    rsi,[rip+0x177ce]        # 0x140043100
   14002b932:	jmp    0x14002b956
   14002b934:	lea    rsi,[rip+0x177bd]        # 0x1400430f8
   14002b93b:	jmp    0x14002b956
   14002b93d:	lea    rsi,[rip+0x1779c]        # 0x1400430e0
   14002b944:	jmp    0x14002b956
   14002b946:	lea    rsi,[rip+0x17783]        # 0x1400430d0
   14002b94d:	jmp    0x14002b956
   14002b94f:	lea    rsi,[rip+0x1776a]        # 0x1400430c0
   14002b956:	mov    r8d,DWORD PTR [r8+0x4]
   14002b95a:	lea    rax,[rsp+0x40]
   14002b95f:	mov    QWORD PTR [rsp+0x30],r15
   14002b964:	mov    r9d,0x400
   14002b96a:	mov    DWORD PTR [rsp+0x28],0x100
   14002b972:	xor    edx,edx
   14002b974:	mov    ecx,0x1200
   14002b979:	mov    QWORD PTR [rsp+0x20],rax
   14002b97e:	mov    WORD PTR [rsp+0x40],r15w
   14002b984:	call   QWORD PTR [rip+0x118ee]        # 0x14003d278
   14002b98a:	mov    r9,QWORD PTR [rbx+0x30]
   14002b98e:	lea    rdi,[r14+rdi*2]
   14002b992:	mov    rax,QWORD PTR [rbx+0x80]
   14002b999:	mov    rdx,rdi
   14002b99c:	mov    rcx,r14
   14002b99f:	test   r9,r9
   14002b9a2:	je     0x14002b9c7
   14002b9a4:	mov    QWORD PTR [rsp+0x30],rax
   14002b9a9:	lea    r8,[rip+0x17760]        # 0x140043110
   14002b9b0:	mov    rax,QWORD PTR [rbx+0x78]
   14002b9b4:	mov    QWORD PTR [rsp+0x28],rax
   14002b9b9:	mov    eax,DWORD PTR [rbx+0x38]
   14002b9bc:	mov    DWORD PTR [rsp+0x20],eax
   14002b9c0:	call   0x14002c93c
   14002b9c5:	jmp    0x14002b9dc
   14002b9c7:	mov    r9,QWORD PTR [rbx+0x78]
   14002b9cb:	lea    r8,[rip+0x17766]        # 0x140043138
   14002b9d2:	mov    QWORD PTR [rsp+0x20],rax
   14002b9d7:	call   0x14002c93c
   14002b9dc:	mov    r9,QWORD PTR [rbx+0x88]
   14002b9e3:	mov    rbp,rax
   14002b9e6:	test   r9,r9
   14002b9e9:	je     0x14002ba00
   14002b9eb:	lea    r8,[rip+0x1775e]        # 0x140043150
   14002b9f2:	mov    rdx,rdi
   14002b9f5:	mov    rcx,rax
   14002b9f8:	call   0x14002c93c
   14002b9fd:	mov    rbp,rax
   14002ba00:	call   QWORD PTR [rip+0x118f2]        # 0x14003d2f8
   14002ba06:	lea    rcx,[rsp+0x40]
   14002ba0b:	mov    r9,rsi
   14002ba0e:	mov    QWORD PTR [rsp+0x38],rcx
   14002ba13:	lea    r8,[rip+0x17756]        # 0x140043170
   14002ba1a:	mov    ecx,DWORD PTR [rbx+0x4]
   14002ba1d:	mov    rdx,rdi
   14002ba20:	mov    DWORD PTR [rsp+0x30],ecx
   14002ba24:	mov    rcx,rbp
   14002ba27:	mov    DWORD PTR [rsp+0x28],eax
   14002ba2b:	mov    eax,DWORD PTR [rbx+0x3c]
   14002ba2e:	mov    DWORD PTR [rsp+0x20],eax
   14002ba32:	call   0x14002c93c
   14002ba37:	cmp    QWORD PTR [rbx+0x10],r15
   14002ba3b:	jne    0x14002ba4d
   14002ba3d:	cmp    QWORD PTR [rbx+0x40],r15
   14002ba41:	jne    0x14002ba4d
   14002ba43:	cmp    QWORD PTR [rbx+0x28],r15
   14002ba47:	je     0x14002badd
   14002ba4d:	lea    r8,[rip+0x17754]        # 0x1400431a8
   14002ba54:	mov    rdx,rdi
   14002ba57:	mov    rcx,rax
   14002ba5a:	call   0x14002c93c
   14002ba5f:	mov    r9,QWORD PTR [rbx+0x10]
   14002ba63:	test   r9,r9
   14002ba66:	je     0x14002ba7a
   14002ba68:	lea    r8,[rip+0x17749]        # 0x1400431b8
   14002ba6f:	mov    rdx,rdi
   14002ba72:	mov    rcx,rax
   14002ba75:	call   0x14002c93c
   14002ba7a:	mov    r9,QWORD PTR [rbx+0x40]
   14002ba7e:	test   r9,r9
   14002ba81:	je     0x14002ba95
   14002ba83:	lea    r8,[rip+0x17746]        # 0x1400431d0
   14002ba8a:	mov    rdx,rdi
   14002ba8d:	mov    rcx,rax
   14002ba90:	call   0x14002c93c
   14002ba95:	mov    rcx,QWORD PTR [rbx+0x20]
   14002ba99:	mov    rdx,rdi
   14002ba9c:	mov    r9,QWORD PTR [rbx+0x28]
   14002baa0:	test   rcx,rcx
   14002baa3:	je     0x14002babb
   14002baa5:	mov    QWORD PTR [rsp+0x20],rcx
   14002baaa:	lea    r8,[rip+0x17747]        # 0x1400431f8
   14002bab1:	mov    rcx,rax
   14002bab4:	call   0x14002c93c
   14002bab9:	jmp    0x14002badd
   14002babb:	mov    rcx,rax
   14002babe:	test   r9,r9
   14002bac1:	je     0x14002bad1
   14002bac3:	lea    r8,[rip+0x17746]        # 0x140043210
   14002baca:	call   0x14002c93c
   14002bacf:	jmp    0x14002badd
   14002bad1:	lea    r8,[rip+0x17748]        # 0x140043220
   14002bad8:	call   0x14002c93c
   14002badd:	xor    eax,eax
   14002badf:	mov    rcx,QWORD PTR [rsp+0x240]
   14002bae7:	xor    rcx,rsp
   14002baea:	call   0x1400141d0
   14002baef:	mov    rbx,QWORD PTR [rsp+0x298]
   14002baf7:	add    rsp,0x250
   14002bafe:	pop    r15
   14002bb00:	pop    r14
   14002bb02:	pop    rdi
   14002bb03:	pop    rsi
   14002bb04:	pop    rbp
   14002bb05:	ret    
   14002bb06:	int3   
   14002bb07:	int3   
   14002bb08:	int3   
   14002bb09:	int3   
   14002bb0a:	int3   
   14002bb0b:	int3   
   14002bb0c:	int3   
   14002bb0d:	int3   
   14002bb0e:	int3   
   14002bb0f:	int3   
   14002bb10:	mov    QWORD PTR [rsp+0x8],rbx
   14002bb15:	mov    QWORD PTR [rsp+0x10],rsi
   14002bb1a:	push   rdi
   14002bb1b:	sub    rsp,0x30
   14002bb1f:	mov    rbx,rdx
   14002bb22:	test   rdx,rdx
   14002bb25:	jne    0x14002bb2e
   14002bb27:	mov    eax,0x80004003
   14002bb2c:	jmp    0x14002bb7e
   14002bb2e:	xor    esi,esi
   14002bb30:	lea    rdi,[rcx+0x40]
   14002bb34:	cmp    QWORD PTR [rdi],rsi
   14002bb37:	jne    0x14002bb5e
   14002bb39:	lea    r9,[rip+0x139b0]        # 0x14003f4f0
   14002bb40:	mov    QWORD PTR [rsp+0x20],rdi
   14002bb45:	xor    edx,edx
   14002bb47:	lea    r8d,[rsi+0x1]
   14002bb4b:	lea    rcx,[rip+0x139ae]        # 0x14003f500
   14002bb52:	call   QWORD PTR [rip+0x275a0]        # 0x1400530f8
   14002bb58:	mov    esi,eax
   14002bb5a:	test   eax,eax
   14002bb5c:	js     0x14002bb7c
   14002bb5e:	mov    rcx,QWORD PTR [rdi]
   14002bb61:	mov    QWORD PTR [rbx],rcx
   14002bb64:	mov    rdi,QWORD PTR [rdi]
   14002bb67:	mov    rdx,QWORD PTR [rdi]
   14002bb6a:	mov    rbx,QWORD PTR [rdx+0x8]
   14002bb6e:	mov    rcx,rbx
   14002bb71:	call   QWORD PTR [rip+0x11bb1]        # 0x14003d728
   14002bb77:	mov    rcx,rdi
   14002bb7a:	call   rbx
   14002bb7c:	mov    eax,esi
   14002bb7e:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bb83:	mov    rsi,QWORD PTR [rsp+0x48]
   14002bb88:	add    rsp,0x30
   14002bb8c:	pop    rdi
   14002bb8d:	ret    
   14002bb8e:	int3   
   14002bb8f:	int3   
   14002bb90:	int3   
   14002bb91:	int3   
   14002bb92:	int3   
   14002bb93:	int3   
   14002bb94:	int3   
   14002bb95:	int3   
   14002bb96:	int3   
   14002bb97:	int3   
   14002bb98:	int3   
   14002bb99:	int3   
   14002bb9a:	int3   
   14002bb9b:	int3   
   14002bb9c:	int3   
   14002bb9d:	int3   
   14002bb9e:	int3   
   14002bb9f:	int3   
   14002bba0:	jmp    0x14002bbac
   14002bba5:	int3   
   14002bba6:	int3   
   14002bba7:	int3   
   14002bba8:	int3   
   14002bba9:	int3   
   14002bbaa:	int3   
   14002bbab:	int3   
   14002bbac:	mov    rax,rsp
   14002bbaf:	mov    QWORD PTR [rax+0x8],rbx
   14002bbb3:	mov    QWORD PTR [rax+0x10],rbp
   14002bbb7:	mov    QWORD PTR [rax+0x20],rsi
   14002bbbb:	mov    QWORD PTR [rax+0x18],r8
   14002bbbf:	push   rdi
   14002bbc0:	push   r12
   14002bbc2:	push   r13
   14002bbc4:	push   r14
   14002bbc6:	push   r15
   14002bbc8:	sub    rsp,0x20
   14002bbcc:	mov    edx,DWORD PTR [rsp+0x70]
   14002bbd0:	mov    r13d,r9d
   14002bbd3:	mov    rbx,r8
   14002bbd6:	call   0x14002b5a0
   14002bbdb:	mov    r12,QWORD PTR [rip+0x22916]        # 0x14004e4f8
   14002bbe2:	xor    edx,edx
   14002bbe4:	test   r12,r12
   14002bbe7:	je     0x14002bc81
   14002bbed:	mov    rbp,QWORD PTR [rip+0x22914]        # 0x14004e508
   14002bbf4:	test   rbp,rbp
   14002bbf7:	je     0x14002bc5e
   14002bbf9:	cmp    r13d,0x1
   14002bbfd:	jne    0x14002bc5e
   14002bbff:	mov    r15,QWORD PTR [rbx]
   14002bc02:	test   r15,r15
   14002bc05:	jne    0x14002bc0b
   14002bc07:	mov    edi,edx
   14002bc09:	jmp    0x14002bc19
   14002bc0b:	or     rdi,0xffffffffffffffff
   14002bc0f:	inc    rdi
   14002bc12:	cmp    WORD PTR [r15+rdi*2],dx
   14002bc17:	jne    0x14002bc0f
   14002bc19:	mov    ebx,DWORD PTR [rip+0x228f1]        # 0x14004e510
   14002bc1f:	sub    ebx,0x1
   14002bc22:	js     0x14002bc5e
   14002bc24:	movsxd rsi,ebx
   14002bc27:	lea    r14,[rbp+0x8]
   14002bc2b:	mov    rax,rsi
   14002bc2e:	shl    rax,0x4
   14002bc32:	add    r14,rax
   14002bc35:	cmp    edi,DWORD PTR [r14]
   14002bc38:	jne    0x14002bc52
   14002bc3a:	movsxd r8,DWORD PTR [r14]
   14002bc3d:	mov    rdx,r15
   14002bc40:	mov    rcx,QWORD PTR [r14-0x8]
   14002bc44:	add    r8,r8
   14002bc47:	call   0x1400156e6
   14002bc4c:	xor    edx,edx
   14002bc4e:	test   eax,eax
   14002bc50:	je     0x14002bc9e
   14002bc52:	dec    ebx
   14002bc54:	sub    r14,0x10
   14002bc58:	sub    rsi,0x1
   14002bc5c:	jns    0x14002bc35
   14002bc5e:	mov    rax,QWORD PTR [r12]
   14002bc62:	mov    rbx,QWORD PTR [rax+0x50]
   14002bc66:	mov    rcx,rbx
   14002bc69:	call   QWORD PTR [rip+0x11ab9]        # 0x14003d728
   14002bc6f:	mov    r9,QWORD PTR [rsp+0x78]
   14002bc74:	mov    r8d,r13d
   14002bc77:	mov    rdx,QWORD PTR [rsp+0x60]
   14002bc7c:	mov    rcx,r12
   14002bc7f:	call   rbx
   14002bc81:	mov    rbx,QWORD PTR [rsp+0x50]
   14002bc86:	mov    rbp,QWORD PTR [rsp+0x58]
   14002bc8b:	mov    rsi,QWORD PTR [rsp+0x68]
   14002bc90:	add    rsp,0x20
   14002bc94:	pop    r15
   14002bc96:	pop    r14
   14002bc98:	pop    r13
   14002bc9a:	pop    r12
   14002bc9c:	pop    rdi
   14002bc9d:	ret    
   14002bc9e:	movsxd rax,ebx
   14002bca1:	add    rax,rax
   14002bca4:	mov    ecx,DWORD PTR [rbp+rax*8+0xc]
   14002bca8:	mov    rax,QWORD PTR [rsp+0x78]
   14002bcad:	mov    DWORD PTR [rax],ecx
   14002bcaf:	mov    eax,edx
   14002bcb1:	jmp    0x14002bc81
   14002bcb3:	int3   
   14002bcb4:	int3   
   14002bcb5:	int3   
   14002bcb6:	int3   
   14002bcb7:	int3   
   14002bcb8:	int3   
   14002bcb9:	int3   
   14002bcba:	int3   
   14002bcbb:	int3   
   14002bcbc:	mov    rax,rsp
   14002bcbf:	push   rbp
   14002bcc0:	lea    rbp,[rax-0x198]
   14002bcc7:	sub    rsp,0x290
   14002bcce:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14002bcd7:	mov    QWORD PTR [rax+0x8],rbx
   14002bcdb:	mov    QWORD PTR [rax+0x18],rsi
   14002bcdf:	mov    QWORD PTR [rax+0x20],rdi
   14002bce3:	mov    rax,QWORD PTR [rip+0x22326]        # 0x14004e010
   14002bcea:	xor    rax,rsp
   14002bced:	mov    QWORD PTR [rbp+0x180],rax
   14002bcf4:	mov    ebx,edx
   14002bcf6:	cmp    QWORD PTR [rip+0x227fa],0x0        # 0x14004e4f8
   14002bcfe:	je     0x14002bd11
   14002bd00:	cmp    QWORD PTR [rip+0x22800],0x0        # 0x14004e508
   14002bd08:	je     0x14002bd11
   14002bd0a:	xor    eax,eax
   14002bd0c:	jmp    0x14002bf6e
   14002bd11:	mov    rax,QWORD PTR [rip+0x22e48]        # 0x14004eb60
   14002bd18:	add    rax,0x18
   14002bd1c:	mov    QWORD PTR [rsp+0x50],rax
   14002bd21:	mov    BYTE PTR [rsp+0x58],0x0
   14002bd26:	lea    rcx,[rsp+0x50]
   14002bd2b:	call   0x14002c610
   14002bd30:	mov    esi,eax
   14002bd32:	test   eax,eax
   14002bd34:	js     0x14002bf5a
   14002bd3a:	mov    esi,0x80004005
   14002bd3f:	mov    rdx,QWORD PTR [rip+0x227b2]        # 0x14004e4f8
   14002bd46:	test   rdx,rdx
   14002bd49:	jne    0x14002bf42
   14002bd4f:	and    QWORD PTR [rsp+0x48],rdx
   14002bd54:	mov    r10,QWORD PTR [rip+0x2278d]        # 0x14004e4e8
   14002bd5b:	mov    rdx,r10
   14002bd5e:	lea    rcx,[rip+0x22deb]        # 0x14004eb50
   14002bd65:	call   0x14002de68
   14002bd6a:	movzx  r8d,WORD PTR [rip+0x22780]        # 0x14004e4f2
   14002bd72:	movzx  edx,WORD PTR [rip+0x22777]        # 0x14004e4f0
   14002bd79:	test   eax,eax
   14002bd7b:	je     0x14002bdc9
   14002bd7d:	mov    eax,0xffff
   14002bd82:	cmp    dx,ax
   14002bd85:	jne    0x14002bdc9
   14002bd87:	cmp    r8w,ax
   14002bd8b:	jne    0x14002bdc9
   14002bd8d:	mov    ebx,0x104
   14002bd92:	mov    r8d,ebx
   14002bd95:	lea    rdx,[rsp+0x70]
   14002bd9a:	mov    rcx,QWORD PTR [rip+0x22ff7]        # 0x14004ed98
   14002bda1:	call   QWORD PTR [rip+0x114a1]        # 0x14003d248
   14002bda7:	test   eax,eax
   14002bda9:	je     0x14002bf39
   14002bdaf:	cmp    eax,ebx
   14002bdb1:	je     0x14002bf39
   14002bdb7:	lea    rdx,[rsp+0x48]
   14002bdbc:	lea    rcx,[rsp+0x70]
   14002bdc1:	call   QWORD PTR [rip+0x27299]        # 0x140053060
   14002bdc7:	jmp    0x14002bddf
   14002bdc9:	lea    rax,[rsp+0x48]
   14002bdce:	mov    QWORD PTR [rsp+0x20],rax
   14002bdd3:	mov    r9d,ebx
   14002bdd6:	mov    rcx,r10
   14002bdd9:	call   QWORD PTR [rip+0x27279]        # 0x140053058
   14002bddf:	mov    esi,eax
   14002bde1:	test   eax,eax
   14002bde3:	js     0x14002bf39
   14002bde9:	and    QWORD PTR [rsp+0x38],0x0
   14002bdef:	mov    rdi,QWORD PTR [rsp+0x48]
   14002bdf4:	mov    rax,QWORD PTR [rdi]
   14002bdf7:	mov    rbx,QWORD PTR [rax+0x30]
   14002bdfb:	mov    rcx,rbx
   14002bdfe:	call   QWORD PTR [rip+0x11924]        # 0x14003d728
   14002be04:	lea    r8,[rsp+0x38]
   14002be09:	mov    rdx,QWORD PTR [rip+0x226d0]        # 0x14004e4e0
   14002be10:	mov    rcx,rdi
   14002be13:	call   rbx
   14002be15:	mov    esi,eax
   14002be17:	test   eax,eax
   14002be19:	js     0x14002beff
   14002be1f:	mov    rbx,QWORD PTR [rsp+0x38]
   14002be24:	mov    QWORD PTR [rsp+0x30],rbx
   14002be29:	test   rbx,rbx
   14002be2c:	je     0x14002be48
   14002be2e:	mov    rax,QWORD PTR [rbx]
   14002be31:	mov    rdi,QWORD PTR [rax+0x8]
   14002be35:	mov    rcx,rdi
   14002be38:	call   QWORD PTR [rip+0x118ea]        # 0x14003d728
   14002be3e:	mov    rcx,rbx
   14002be41:	call   rdi
   14002be43:	mov    rbx,QWORD PTR [rsp+0x38]
   14002be48:	and    QWORD PTR [rsp+0x40],0x0
   14002be4e:	mov    rax,QWORD PTR [rbx]
   14002be51:	mov    rdi,QWORD PTR [rax]
   14002be54:	mov    rcx,rdi
   14002be57:	call   QWORD PTR [rip+0x118cb]        # 0x14003d728
   14002be5d:	lea    r8,[rsp+0x40]
   14002be62:	lea    rdx,[rip+0x13cd7]        # 0x14003fb40
   14002be69:	mov    rcx,rbx
   14002be6c:	call   rdi
   14002be6e:	test   eax,eax
   14002be70:	js     0x14002be94
   14002be72:	mov    rdx,QWORD PTR [rsp+0x40]
   14002be77:	lea    rcx,[rsp+0x30]
   14002be7c:	call   0x14002c23c
   14002be81:	test   al,al
   14002be83:	jne    0x14002be94
   14002be85:	mov    rdx,QWORD PTR [rsp+0x40]
   14002be8a:	lea    rcx,[rsp+0x30]
   14002be8f:	call   0x14002af38
   14002be94:	mov    rax,QWORD PTR [rsp+0x30]
   14002be99:	and    QWORD PTR [rsp+0x30],0x0
   14002be9f:	mov    QWORD PTR [rip+0x22652],rax        # 0x14004e4f8
   14002bea6:	mov    rax,QWORD PTR [rip+0x22cb3]        # 0x14004eb60
   14002bead:	test   rax,rax
   14002beb0:	je     0x14002beb8
   14002beb2:	lea    rcx,[rax+0x8]
   14002beb6:	jmp    0x14002beba
   14002beb8:	xor    ecx,ecx
   14002beba:	call   0x14002afe4
   14002bebf:	nop
   14002bec0:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bec5:	test   rbx,rbx
   14002bec8:	je     0x14002bee0
   14002beca:	mov    rax,QWORD PTR [rbx]
   14002becd:	mov    rdi,QWORD PTR [rax+0x10]
   14002bed1:	mov    rcx,rdi
   14002bed4:	call   QWORD PTR [rip+0x1184e]        # 0x14003d728
   14002beda:	mov    rcx,rbx
   14002bedd:	call   rdi
   14002bedf:	nop
   14002bee0:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bee5:	test   rbx,rbx
   14002bee8:	je     0x14002beff
   14002beea:	mov    rax,QWORD PTR [rbx]
   14002beed:	mov    rdi,QWORD PTR [rax+0x10]
   14002bef1:	mov    rcx,rdi
   14002bef4:	call   QWORD PTR [rip+0x1182e]        # 0x14003d728
   14002befa:	mov    rcx,rbx
   14002befd:	call   rdi
   14002beff:	mov    rdi,QWORD PTR [rsp+0x48]
   14002bf04:	mov    rax,QWORD PTR [rdi]
   14002bf07:	mov    rbx,QWORD PTR [rax+0x10]
   14002bf0b:	mov    rcx,rbx
   14002bf0e:	call   QWORD PTR [rip+0x11814]        # 0x14003d728
   14002bf14:	mov    rcx,rdi
   14002bf17:	call   rbx
   14002bf19:	nop
   14002bf1a:	mov    rbx,QWORD PTR [rsp+0x38]
   14002bf1f:	test   rbx,rbx
   14002bf22:	je     0x14002bf39
   14002bf24:	mov    rax,QWORD PTR [rbx]
   14002bf27:	mov    rdi,QWORD PTR [rax+0x10]
   14002bf2b:	mov    rcx,rdi
   14002bf2e:	call   QWORD PTR [rip+0x117f4]        # 0x14003d728
   14002bf34:	mov    rcx,rbx
   14002bf37:	call   rdi
   14002bf39:	mov    rdx,QWORD PTR [rip+0x225b8]        # 0x14004e4f8
   14002bf40:	jmp    0x14002bf44
   14002bf42:	xor    esi,esi
   14002bf44:	test   rdx,rdx
   14002bf47:	je     0x14002bf5a
   14002bf49:	cmp    QWORD PTR [rip+0x225b7],0x0        # 0x14004e508
   14002bf51:	jne    0x14002bf5a
   14002bf53:	call   0x14002c374
   14002bf58:	mov    esi,eax
   14002bf5a:	cmp    BYTE PTR [rsp+0x58],0x0
   14002bf5f:	je     0x14002bf6c
   14002bf61:	mov    rcx,QWORD PTR [rsp+0x50]
   14002bf66:	call   QWORD PTR [rip+0x1146c]        # 0x14003d3d8
   14002bf6c:	mov    eax,esi
   14002bf6e:	mov    rcx,QWORD PTR [rbp+0x180]
   14002bf75:	xor    rcx,rsp
   14002bf78:	call   0x1400141d0
   14002bf7d:	lea    r11,[rsp+0x290]
   14002bf85:	mov    rbx,QWORD PTR [r11+0x10]
   14002bf89:	mov    rsi,QWORD PTR [r11+0x20]
   14002bf8d:	mov    rdi,QWORD PTR [r11+0x28]
   14002bf91:	mov    rsp,r11
   14002bf94:	pop    rbp
   14002bf95:	ret    
   14002bf96:	lea    rcx,[rdx+0x50]
   14002bf9d:	jmp    0x14002a978
   14002bfa2:	lea    rcx,[rdx+0x38]
   14002bfa9:	jmp    0x14000f4f0
   14002bfae:	lea    rcx,[rdx+0x30]
   14002bfb5:	jmp    0x14000f4f0
   14002bfba:	lea    rcx,[rdx+0x40]
   14002bfc1:	jmp    0x14000f4f0
   14002bfc6:	int3   
   14002bfc7:	int3   
   14002bfc8:	int3   
   14002bfc9:	int3   
   14002bfca:	int3   
   14002bfcb:	int3   
   14002bfcc:	mov    QWORD PTR [rsp+0x8],rbx
   14002bfd1:	push   rdi
   14002bfd2:	sub    rsp,0x20
   14002bfd6:	mov    rbx,r8
   14002bfd9:	test   r8,r8
   14002bfdc:	jne    0x14002bfe5
   14002bfde:	mov    eax,0x80004003
   14002bfe3:	jmp    0x14002c025
   14002bfe5:	mov    rcx,QWORD PTR [rip+0x2250c]        # 0x14004e4f8
   14002bfec:	xor    eax,eax
   14002bfee:	test   rcx,rcx
   14002bff1:	jne    0x14002bfff
   14002bff3:	call   0x14002bcbc
   14002bff8:	mov    rcx,QWORD PTR [rip+0x224f9]        # 0x14004e4f8
   14002bfff:	mov    QWORD PTR [rbx],rcx
   14002c002:	mov    rdi,QWORD PTR [rip+0x224ef]        # 0x14004e4f8
   14002c009:	test   rdi,rdi
   14002c00c:	je     0x14002c025
   14002c00e:	mov    rax,QWORD PTR [rdi]
   14002c011:	mov    rbx,QWORD PTR [rax+0x8]
   14002c015:	mov    rcx,rbx
   14002c018:	call   QWORD PTR [rip+0x1170a]        # 0x14003d728
   14002c01e:	mov    rcx,rdi
   14002c021:	call   rbx
   14002c023:	xor    eax,eax
   14002c025:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c02a:	add    rsp,0x20
   14002c02e:	pop    rdi
   14002c02f:	ret    
   14002c030:	int3   
   14002c031:	int3   
   14002c032:	int3   
   14002c033:	int3   
   14002c034:	int3   
   14002c035:	int3   
   14002c036:	int3   
   14002c037:	int3   
   14002c038:	mov    QWORD PTR [rsp+0x8],rbx
   14002c03d:	mov    QWORD PTR [rsp+0x10],rbp
   14002c042:	mov    QWORD PTR [rsp+0x18],rsi
   14002c047:	push   rdi
   14002c048:	sub    rsp,0x20
   14002c04c:	xor    al,al
   14002c04e:	mov    BYTE PTR [r8],0x0
   14002c052:	mov    rbp,r9
   14002c055:	mov    rbx,r8
   14002c058:	mov    rsi,rdx
   14002c05b:	mov    rdi,rcx
   14002c05e:	test   rdx,rdx
   14002c061:	je     0x14002c10e
   14002c067:	mov    rdx,QWORD PTR [rdx+0x10]
   14002c06b:	call   0x14002c038
   14002c070:	mov    rdx,QWORD PTR [rsi+0x20]
   14002c074:	xor    esi,esi
   14002c076:	test   rdx,rdx
   14002c079:	je     0x14002c10e
   14002c07f:	cmp    DWORD PTR [rdx],esi
   14002c081:	jne    0x14002c092
   14002c083:	lea    eax,[rsi+0x1]
   14002c086:	lock xadd DWORD PTR [rip+0x2248e],eax        # 0x14004e51c
   14002c08e:	inc    eax
   14002c090:	mov    DWORD PTR [rdx],eax
   14002c092:	cmp    DWORD PTR [rdi+0x48],esi
   14002c095:	jne    0x14002c0a8
   14002c097:	movups xmm0,XMMWORD PTR [rdx]
   14002c09a:	movups XMMWORD PTR [rdi+0x48],xmm0
   14002c09e:	movsd  xmm1,QWORD PTR [rdx+0x10]
   14002c0a3:	movsd  QWORD PTR [rdi+0x58],xmm1
   14002c0a8:	movups xmm0,XMMWORD PTR [rdx]
   14002c0ab:	or     rcx,0xffffffffffffffff
   14002c0af:	mov    rax,rcx
   14002c0b2:	movups XMMWORD PTR [rdi+0x60],xmm0
   14002c0b6:	movsd  xmm1,QWORD PTR [rdx+0x10]
   14002c0bb:	movsd  QWORD PTR [rdi+0x70],xmm1
   14002c0c0:	lea    rdi,[rbx+rbp*1]
   14002c0c4:	inc    rax
   14002c0c7:	cmp    BYTE PTR [rbx+rax*1],sil
   14002c0cb:	jne    0x14002c0c4
   14002c0cd:	add    rbx,rax
   14002c0d0:	mov    rax,rdi
   14002c0d3:	sub    rax,rbx
   14002c0d6:	cmp    rax,0x2
   14002c0da:	jle    0x14002c10c
   14002c0dc:	mov    BYTE PTR [rbx],0x5c
   14002c0df:	inc    rbx
   14002c0e2:	mov    rdx,QWORD PTR [rdx+0x8]
   14002c0e6:	inc    rcx
   14002c0e9:	cmp    BYTE PTR [rdx+rcx*1],sil
   14002c0ed:	jne    0x14002c0e6
   14002c0ef:	inc    rcx
   14002c0f2:	sub    rdi,rbx
   14002c0f5:	cmp    rcx,rdi
   14002c0f8:	cmovb  rdi,rcx
   14002c0fc:	mov    rcx,rbx
   14002c0ff:	mov    r8,rdi
   14002c102:	call   0x1400156f2
   14002c107:	mov    BYTE PTR [rdi+rbx*1-0x1],sil
   14002c10c:	mov    al,0x1
   14002c10e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c113:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c118:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c11d:	add    rsp,0x20
   14002c121:	pop    rdi
   14002c122:	ret    
   14002c123:	int3   
   14002c124:	int3   
   14002c125:	int3   
   14002c126:	int3   
   14002c127:	int3   
   14002c128:	int3   
   14002c129:	int3   
   14002c12a:	int3   
   14002c12b:	int3   
   14002c12c:	int3   
   14002c12d:	int3   
   14002c12e:	int3   
   14002c12f:	int3   
   14002c130:	mov    eax,r8d
   14002c133:	test   edx,edx
   14002c135:	je     0x14002c13d
   14002c137:	mov    eax,0x8002000b
   14002c13c:	ret    
   14002c13d:	mov    r8,r9
   14002c140:	mov    edx,eax
   14002c142:	jmp    0x14002bfcc
   14002c147:	int3   
   14002c148:	int3   
   14002c149:	int3   
   14002c14a:	int3   
   14002c14b:	int3   
   14002c14c:	int3   
   14002c14d:	int3   
   14002c14e:	int3   
   14002c14f:	int3   
   14002c150:	test   rdx,rdx
   14002c153:	jne    0x14002c15b
   14002c155:	mov    eax,0x80004003
   14002c15a:	ret    
   14002c15b:	mov    DWORD PTR [rdx],0x1
   14002c161:	xor    eax,eax
   14002c163:	ret    
   14002c164:	int3   
   14002c165:	int3   
   14002c166:	int3   
   14002c167:	int3   
   14002c168:	int3   
   14002c169:	int3   
   14002c16a:	int3   
   14002c16b:	int3   
   14002c16c:	xor    eax,eax
   14002c16e:	cmp    DWORD PTR [rcx],eax
   14002c170:	jne    0x14002c18e
   14002c172:	cmp    DWORD PTR [rcx+0x4],eax
   14002c175:	jne    0x14002c18e
   14002c177:	cmp    DWORD PTR [rcx+0x8],0xc0
   14002c17e:	jne    0x14002c18e
   14002c180:	cmp    DWORD PTR [rcx+0xc],0x46000000
   14002c187:	jne    0x14002c18e
   14002c189:	mov    eax,0x1
   14002c18e:	ret    
   14002c18f:	int3   
   14002c190:	int3   
   14002c191:	int3   
   14002c192:	int3   
   14002c193:	int3   
   14002c194:	int3   
   14002c195:	int3   
   14002c196:	int3   
   14002c197:	int3   
   14002c198:	int3   
   14002c199:	int3   
   14002c19a:	int3   
   14002c19b:	int3   
   14002c19c:	int3   
   14002c19d:	int3   
   14002c19e:	int3   
   14002c19f:	int3   
   14002c1a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002c1a5:	mov    QWORD PTR [rsp+0x10],rbp
   14002c1aa:	mov    QWORD PTR [rsp+0x18],rsi
   14002c1af:	push   rdi
   14002c1b0:	sub    rsp,0x40
   14002c1b4:	mov    esi,edx
   14002c1b6:	mov    rbp,rcx
   14002c1b9:	mov    edx,r9d
   14002c1bc:	call   0x14002b5a0
   14002c1c1:	mov    rdi,QWORD PTR [rip+0x22330]        # 0x14004e4f8
   14002c1c8:	test   rdi,rdi
   14002c1cb:	je     0x14002c21f
   14002c1cd:	mov    rax,QWORD PTR [rdi]
   14002c1d0:	mov    rbx,QWORD PTR [rax+0x58]
   14002c1d4:	mov    rcx,rbx
   14002c1d7:	call   QWORD PTR [rip+0x1154b]        # 0x14003d728
   14002c1dd:	mov    rax,QWORD PTR [rsp+0x90]
   14002c1e5:	mov    r8d,esi
   14002c1e8:	movzx  r9d,WORD PTR [rsp+0x70]
   14002c1ee:	mov    rdx,rbp
   14002c1f1:	mov    QWORD PTR [rsp+0x38],rax
   14002c1f6:	mov    rcx,rdi
   14002c1f9:	mov    rax,QWORD PTR [rsp+0x88]
   14002c201:	mov    QWORD PTR [rsp+0x30],rax
   14002c206:	mov    rax,QWORD PTR [rsp+0x80]
   14002c20e:	mov    QWORD PTR [rsp+0x28],rax
   14002c213:	mov    rax,QWORD PTR [rsp+0x78]
   14002c218:	mov    QWORD PTR [rsp+0x20],rax
   14002c21d:	call   rbx
   14002c21f:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c224:	mov    rbp,QWORD PTR [rsp+0x58]
   14002c229:	mov    rsi,QWORD PTR [rsp+0x60]
   14002c22e:	add    rsp,0x40
   14002c232:	pop    rdi
   14002c233:	ret    
   14002c234:	int3   
   14002c235:	int3   
   14002c236:	int3   
   14002c237:	int3   
   14002c238:	int3   
   14002c239:	int3   
   14002c23a:	int3   
   14002c23b:	int3   
   14002c23c:	mov    QWORD PTR [rsp+0x10],rbx
   14002c241:	mov    QWORD PTR [rsp+0x20],rbp
   14002c246:	push   rsi
   14002c247:	push   rdi
   14002c248:	push   r14
   14002c24a:	sub    rsp,0x20
   14002c24e:	mov    rsi,QWORD PTR [rcx]
   14002c251:	mov    rdi,rdx
   14002c254:	test   rsi,rsi
   14002c257:	jne    0x14002c269
   14002c259:	test   rdx,rdx
   14002c25c:	jne    0x14002c357
   14002c262:	mov    al,0x1
   14002c264:	jmp    0x14002c359
   14002c269:	test   rdx,rdx
   14002c26c:	je     0x14002c357
   14002c272:	and    QWORD PTR [rsp+0x40],0x0
   14002c278:	and    QWORD PTR [rsp+0x50],0x0
   14002c27e:	mov    rax,QWORD PTR [rsi]
   14002c281:	mov    rbx,QWORD PTR [rax]
   14002c284:	mov    rcx,rbx
   14002c287:	call   QWORD PTR [rip+0x1149b]        # 0x14003d728
   14002c28d:	lea    r8,[rsp+0x40]
   14002c292:	mov    rcx,rsi
   14002c295:	lea    rdx,[rip+0x1376c]        # 0x14003fa08
   14002c29c:	call   rbx
   14002c29e:	mov    rax,QWORD PTR [rdi]
   14002c2a1:	mov    rbx,QWORD PTR [rax]
   14002c2a4:	mov    rcx,rbx
   14002c2a7:	call   QWORD PTR [rip+0x1147b]        # 0x14003d728
   14002c2ad:	lea    r8,[rsp+0x50]
   14002c2b2:	mov    rcx,rdi
   14002c2b5:	lea    rdx,[rip+0x1374c]        # 0x14003fa08
   14002c2bc:	call   rbx
   14002c2be:	mov    rdi,QWORD PTR [rsp+0x50]
   14002c2c3:	lea    rbp,[rip+0xfffffffffffe03e6]        # 0x14000c6b0
   14002c2ca:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c2cf:	lea    r14,[rip+0xfffffffffffe020a]        # 0x14000c4e0
   14002c2d6:	cmp    rbx,rdi
   14002c2d9:	sete   sil
   14002c2dd:	test   rdi,rdi
   14002c2e0:	je     0x14002c31a
   14002c2e2:	mov    rax,QWORD PTR [rdi]
   14002c2e5:	mov    rbx,QWORD PTR [rax+0x10]
   14002c2e9:	cmp    rbx,r14
   14002c2ec:	jne    0x14002c2f8
   14002c2ee:	mov    rcx,rdi
   14002c2f1:	call   0x14000c4e0
   14002c2f6:	jmp    0x14002c315
   14002c2f8:	cmp    rbx,rbp
   14002c2fb:	jne    0x14002c307
   14002c2fd:	mov    rcx,rdi
   14002c300:	call   0x14000c6b0
   14002c305:	jmp    0x14002c315
   14002c307:	mov    rcx,rbx
   14002c30a:	call   QWORD PTR [rip+0x11418]        # 0x14003d728
   14002c310:	mov    rcx,rdi
   14002c313:	call   rbx
   14002c315:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c31a:	test   rbx,rbx
   14002c31d:	je     0x14002c352
   14002c31f:	mov    rax,QWORD PTR [rbx]
   14002c322:	mov    rdi,QWORD PTR [rax+0x10]
   14002c326:	cmp    rdi,r14
   14002c329:	jne    0x14002c335
   14002c32b:	mov    rcx,rbx
   14002c32e:	call   0x14000c4e0
   14002c333:	jmp    0x14002c352
   14002c335:	cmp    rdi,rbp
   14002c338:	jne    0x14002c344
   14002c33a:	mov    rcx,rbx
   14002c33d:	call   0x14000c6b0
   14002c342:	jmp    0x14002c352
   14002c344:	mov    rcx,rdi
   14002c347:	call   QWORD PTR [rip+0x113db]        # 0x14003d728
   14002c34d:	mov    rcx,rbx
   14002c350:	call   rdi
   14002c352:	mov    al,sil
   14002c355:	jmp    0x14002c359
   14002c357:	xor    al,al
   14002c359:	mov    rbx,QWORD PTR [rsp+0x48]
   14002c35e:	mov    rbp,QWORD PTR [rsp+0x58]
   14002c363:	add    rsp,0x20
   14002c367:	pop    r14
   14002c369:	pop    rdi
   14002c36a:	pop    rsi
   14002c36b:	ret    
   14002c36c:	int3   
   14002c36d:	int3   
   14002c36e:	int3   
   14002c36f:	int3   
   14002c370:	int3   
   14002c371:	int3   
   14002c372:	int3   
   14002c373:	int3   
   14002c374:	mov    QWORD PTR [rsp+0x10],rdx
   14002c379:	mov    QWORD PTR [rsp+0x8],rcx
   14002c37e:	push   rbx
   14002c37f:	push   rsi
   14002c380:	push   r12
   14002c382:	push   r13
   14002c384:	push   r14
   14002c386:	push   r15
   14002c388:	sub    rsp,0x48
   14002c38c:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002c395:	mov    r14,rdx
   14002c398:	mov    rax,QWORD PTR [rdx]
   14002c39b:	mov    rbx,QWORD PTR [rax+0x18]
   14002c39f:	mov    rcx,rbx
   14002c3a2:	call   QWORD PTR [rip+0x11380]        # 0x14003d728
   14002c3a8:	lea    rdx,[rsp+0x90]
   14002c3b0:	mov    rcx,r14
   14002c3b3:	call   rbx
   14002c3b5:	test   eax,eax
   14002c3b7:	js     0x14002c5c5
   14002c3bd:	xor    esi,esi
   14002c3bf:	mov    QWORD PTR [rsp+0x80],rsi
   14002c3c7:	mov    rax,QWORD PTR [rsp+0x90]
   14002c3cf:	movzx  ecx,WORD PTR [rax+0x30]
   14002c3d3:	mov    DWORD PTR [rip+0x22137],ecx        # 0x14004e510
   14002c3d9:	and    QWORD PTR [rip+0x22128],rsi        # 0x14004e508
   14002c3e0:	test   ecx,ecx
   14002c3e2:	je     0x14002c491
   14002c3e8:	mov    ebx,ecx
   14002c3ea:	lea    eax,[rsi+0x10]
   14002c3ed:	mul    rcx
   14002c3f0:	lea    rcx,[rsi-0x1]
   14002c3f4:	cmovo  rax,rcx
   14002c3f8:	add    rax,0x8
   14002c3fc:	cmovb  rax,rcx
   14002c400:	mov    rcx,rax
   14002c403:	call   0x140013dd4
   14002c408:	mov    QWORD PTR [rsp+0x98],rax
   14002c410:	test   rax,rax
   14002c413:	je     0x14002c440
   14002c415:	mov    DWORD PTR [rax],ebx
   14002c417:	lea    rsi,[rax+0x8]
   14002c41b:	lea    rax,[rip+0xfffffffffffe2f9e]        # 0x14000f3c0
   14002c422:	mov    QWORD PTR [rsp+0x20],rax
   14002c427:	lea    r9,[rip+0xffffffffffffe412]        # 0x14002a840
   14002c42e:	mov    r8d,ebx
   14002c431:	mov    edx,0x10
   14002c436:	mov    rcx,rsi
   14002c439:	call   0x14001459c
   14002c43e:	jmp    0x14002c442
   14002c440:	xor    esi,esi
   14002c442:	mov    QWORD PTR [rsp+0x80],rsi
   14002c44a:	jmp    0x14002c45c
   14002c44c:	mov    r14,QWORD PTR [rsp+0x88]
   14002c454:	mov    rsi,QWORD PTR [rsp+0x80]
   14002c45c:	test   rsi,rsi
   14002c45f:	jne    0x14002c48b
   14002c461:	mov    rax,QWORD PTR [r14]
   14002c464:	mov    rbx,QWORD PTR [rax+0x98]
   14002c46b:	mov    rcx,rbx
   14002c46e:	call   QWORD PTR [rip+0x112b4]        # 0x14003d728
   14002c474:	mov    rdx,QWORD PTR [rsp+0x90]
   14002c47c:	mov    rcx,r14
   14002c47f:	call   rbx
   14002c481:	mov    eax,0x8007000e
   14002c486:	jmp    0x14002c5c7
   14002c48b:	mov    ecx,DWORD PTR [rip+0x2207f]        # 0x14004e510
   14002c491:	xor    r15d,r15d
   14002c494:	test   ecx,ecx
   14002c496:	jle    0x14002c59e
   14002c49c:	lea    r12,[rsi+0xc]
   14002c4a0:	and    DWORD PTR [r12-0x4],0x0
   14002c4a6:	and    DWORD PTR [r12],0x0
   14002c4ab:	mov    rax,QWORD PTR [r14]
   14002c4ae:	mov    rbx,QWORD PTR [rax+0x28]
   14002c4b2:	mov    rcx,rbx
   14002c4b5:	call   QWORD PTR [rip+0x1126d]        # 0x14003d728
   14002c4bb:	lea    r8,[rsp+0x80]
   14002c4c3:	mov    edx,r15d
   14002c4c6:	mov    rcx,r14
   14002c4c9:	call   rbx
   14002c4cb:	test   eax,eax
   14002c4cd:	js     0x14002c58a
   14002c4d3:	and    QWORD PTR [rsp+0x88],0x0
   14002c4dc:	mov    rax,QWORD PTR [r14]
   14002c4df:	mov    rbx,QWORD PTR [rax+0x60]
   14002c4e3:	mov    rcx,rbx
   14002c4e6:	call   QWORD PTR [rip+0x1123c]        # 0x14003d728
   14002c4ec:	and    QWORD PTR [rsp+0x28],0x0
   14002c4f2:	and    QWORD PTR [rsp+0x20],0x0
   14002c4f8:	xor    r9d,r9d
   14002c4fb:	lea    r8,[rsp+0x88]
   14002c503:	mov    rax,QWORD PTR [rsp+0x80]
   14002c50b:	mov    edx,DWORD PTR [rax]
   14002c50d:	mov    rcx,r14
   14002c510:	call   rbx
   14002c512:	test   eax,eax
   14002c514:	js     0x14002c558
   14002c516:	mov    rdx,QWORD PTR [rsp+0x88]
   14002c51e:	and    QWORD PTR [rsp+0x88],0x0
   14002c527:	movsxd rcx,r15d
   14002c52a:	shl    rcx,0x4
   14002c52e:	add    rcx,rsi
   14002c531:	call   0x14002b0f8
   14002c536:	mov    rcx,QWORD PTR [r12-0xc]
   14002c53b:	call   QWORD PTR [rip+0x26acf]        # 0x140053010
   14002c541:	mov    DWORD PTR [r12-0x4],eax
   14002c546:	mov    r13,QWORD PTR [rsp+0x80]
   14002c54e:	mov    eax,DWORD PTR [r13+0x0]
   14002c552:	mov    DWORD PTR [r12],eax
   14002c556:	jmp    0x14002c560
   14002c558:	mov    r13,QWORD PTR [rsp+0x80]
   14002c560:	mov    rax,QWORD PTR [r14]
   14002c563:	mov    rbx,QWORD PTR [rax+0xa0]
   14002c56a:	mov    rcx,rbx
   14002c56d:	call   QWORD PTR [rip+0x111b5]        # 0x14003d728
   14002c573:	mov    rdx,r13
   14002c576:	mov    rcx,r14
   14002c579:	call   rbx
   14002c57b:	nop
   14002c57c:	mov    rcx,QWORD PTR [rsp+0x88]
   14002c584:	call   QWORD PTR [rip+0x26b36]        # 0x1400530c0
   14002c58a:	inc    r15d
   14002c58d:	add    r12,0x10
   14002c591:	cmp    r15d,DWORD PTR [rip+0x21f78]        # 0x14004e510
   14002c598:	jl     0x14002c4a0
   14002c59e:	mov    QWORD PTR [rip+0x21f63],rsi        # 0x14004e508
   14002c5a5:	mov    rax,QWORD PTR [r14]
   14002c5a8:	mov    rbx,QWORD PTR [rax+0x98]
   14002c5af:	mov    rcx,rbx
   14002c5b2:	call   QWORD PTR [rip+0x11170]        # 0x14003d728
   14002c5b8:	mov    rdx,QWORD PTR [rsp+0x90]
   14002c5c0:	mov    rcx,r14
   14002c5c3:	call   rbx
   14002c5c5:	xor    eax,eax
   14002c5c7:	add    rsp,0x48
   14002c5cb:	pop    r15
   14002c5cd:	pop    r14
   14002c5cf:	pop    r13
   14002c5d1:	pop    r12
   14002c5d3:	pop    rsi
   14002c5d4:	pop    rbx
   14002c5d5:	ret    
   14002c5d6:	mov    rcx,QWORD PTR [rdx+0x98]
   14002c5dd:	jmp    0x140013de0
   14002c5e2:	mov    QWORD PTR [rsp+0x10],rdx
   14002c5e7:	push   rbp
   14002c5e8:	sub    rsp,0x30
   14002c5ec:	mov    rbp,rdx
   14002c5ef:	lea    rax,[rip+0xfffffffffffffe56]        # 0x14002c44c
   14002c5f6:	add    rsp,0x30
   14002c5fa:	pop    rbp
   14002c5fb:	ret    
   14002c5fc:	int3   
   14002c5fd:	lea    rcx,[rdx+0x88]
   14002c604:	jmp    0x14000f3c0
   14002c609:	int3   
   14002c60a:	int3   
   14002c60b:	int3   
   14002c60c:	int3   
   14002c60d:	int3   
   14002c60e:	int3   
   14002c60f:	int3   
   14002c610:	rex push rbx
   14002c612:	sub    rsp,0x20
   14002c616:	mov    rbx,rcx
   14002c619:	mov    rcx,QWORD PTR [rcx]
   14002c61c:	call   QWORD PTR [rip+0x10da6]        # 0x14003d3c8
   14002c622:	xor    eax,eax
   14002c624:	mov    BYTE PTR [rbx+0x8],0x1
   14002c628:	add    rsp,0x20
   14002c62c:	pop    rbx
   14002c62d:	ret    
   14002c62e:	int3   
   14002c62f:	int3   
   14002c630:	int3   
   14002c631:	int3   
   14002c632:	int3   
   14002c633:	int3   
   14002c634:	rex push rbx
   14002c636:	sub    rsp,0x20
   14002c63a:	add    rcx,0xf8
   14002c641:	mov    rbx,rdx
   14002c644:	call   0x14002de44
   14002c649:	mov    rax,rbx
   14002c64c:	add    rsp,0x20
   14002c650:	pop    rbx
   14002c651:	ret    
   14002c652:	int3   
   14002c653:	int3   
   14002c654:	int3   
   14002c655:	int3   
   14002c656:	int3   
   14002c657:	int3   
   14002c658:	int3   
   14002c659:	int3   
   14002c65a:	int3   
   14002c65b:	int3   
   14002c65c:	int3   
   14002c65d:	int3   
   14002c65e:	int3   
   14002c65f:	int3   
   14002c660:	mov    QWORD PTR [rsp+0x8],rbx
   14002c665:	push   rdi
   14002c666:	sub    rsp,0x20
   14002c66a:	mov    rdi,QWORD PTR [rip+0x224ef]        # 0x14004eb60
   14002c671:	mov    rax,QWORD PTR [rdi]
   14002c674:	test   edx,edx
   14002c676:	je     0x14002c67e
   14002c678:	mov    rbx,QWORD PTR [rax+0x8]
   14002c67c:	jmp    0x14002c682
   14002c67e:	mov    rbx,QWORD PTR [rax+0x10]
   14002c682:	mov    rcx,rbx
   14002c685:	call   QWORD PTR [rip+0x1109d]        # 0x14003d728
   14002c68b:	mov    rcx,rdi
   14002c68e:	call   rbx
   14002c690:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c695:	xor    eax,eax
   14002c697:	add    rsp,0x20
   14002c69b:	pop    rdi
   14002c69c:	ret    
   14002c69d:	int3   
   14002c69e:	int3   
   14002c69f:	int3   
   14002c6a0:	int3   
   14002c6a1:	int3   
   14002c6a2:	int3   
   14002c6a3:	int3   
   14002c6a4:	mov    QWORD PTR [rsp+0x18],rbx
   14002c6a9:	mov    DWORD PTR [rsp+0x10],edx
   14002c6ad:	mov    QWORD PTR [rsp+0x8],rcx
   14002c6b2:	push   rbp
   14002c6b3:	push   rsi
   14002c6b4:	push   rdi
   14002c6b5:	push   r12
   14002c6b7:	push   r13
   14002c6b9:	push   r14
   14002c6bb:	push   r15
   14002c6bd:	sub    rsp,0x40
   14002c6c1:	mov    r15d,DWORD PTR [rsp+0xb0]
   14002c6c9:	mov    r13,r8
   14002c6cc:	mov    r14,QWORD PTR [rsp+0xd0]
   14002c6d4:	xor    r8d,r8d
   14002c6d7:	mov    rax,QWORD PTR [rsp+0xe0]
   14002c6df:	mov    r12,r9
   14002c6e2:	mov    edi,DWORD PTR [rsp+0xb8]
   14002c6e9:	mov    ebp,r8d
   14002c6ec:	mov    r10d,r15d
   14002c6ef:	mov    WORD PTR [r14],r8w
   14002c6f3:	mov    BYTE PTR [rax],r8b
   14002c6f6:	test   r15d,r15d
   14002c6f9:	je     0x14002c76e
   14002c6fb:	sub    r10d,0x1
   14002c6ff:	je     0x14002c765
   14002c701:	sub    r10d,0x1
   14002c705:	je     0x14002c75c
   14002c707:	sub    r10d,0x1
   14002c70b:	je     0x14002c71c
   14002c70d:	cmp    r10d,0x1
   14002c711:	jne    0x14002c777
   14002c713:	mov    ecx,edi
   14002c715:	call   0x140015990
   14002c71a:	jmp    0x14002c775
   14002c71c:	test   edi,edi
   14002c71e:	js     0x14002c753
   14002c720:	mov    rax,QWORD PTR [rsp+0xa8]
   14002c728:	mov    edi,0x8007029c
   14002c72d:	mov    DWORD PTR [rsp+0x38],edi
   14002c731:	mov    r8,r13
   14002c734:	mov    DWORD PTR [rsp+0x30],0x3
   14002c73c:	mov    QWORD PTR [rsp+0x28],rax
   14002c741:	mov    rax,QWORD PTR [rsp+0xa0]
   14002c749:	mov    QWORD PTR [rsp+0x20],rax
   14002c74e:	call   0x14002d3a0
   14002c753:	mov    ecx,edi
   14002c755:	call   0x14001599c
   14002c75a:	jmp    0x14002c775
   14002c75c:	mov    ecx,edi
   14002c75e:	call   0x1400159cc
   14002c763:	jmp    0x14002c775
   14002c765:	mov    ecx,edi
   14002c767:	call   0x1400159b4
   14002c76c:	jmp    0x14002c775
   14002c76e:	mov    ecx,edi
   14002c770:	call   0x14001596c
   14002c775:	mov    ebp,eax
   14002c777:	mov    rbx,QWORD PTR [rsp+0xf0]
   14002c77f:	mov    esi,0x1
   14002c784:	mov    eax,esi
   14002c786:	mov    DWORD PTR [rbx],r15d
   14002c789:	mov    DWORD PTR [rbx+0x4],edi
   14002c78c:	lock xadd DWORD PTR [rip+0x22b1c],eax        # 0x14004f2b0
   14002c794:	add    eax,esi
   14002c796:	xor    ecx,ecx
   14002c798:	mov    DWORD PTR [rbx+0x8],eax
   14002c79b:	mov    rax,QWORD PTR [rsp+0xc0]
   14002c7a3:	test   rax,rax
   14002c7a6:	je     0x14002c7ad
   14002c7a8:	cmp    WORD PTR [rax],cx
   14002c7ab:	jne    0x14002c7b0
   14002c7ad:	mov    rax,rcx
   14002c7b0:	mov    QWORD PTR [rbx+0x10],rax
   14002c7b4:	call   QWORD PTR [rip+0x10b3e]        # 0x14003d2f8
   14002c7ba:	mov    rdi,QWORD PTR [rip+0x223d7]        # 0x14004eb98
   14002c7c1:	mov    DWORD PTR [rbx+0x18],eax
   14002c7c4:	mov    eax,DWORD PTR [rsp+0x88]
   14002c7cb:	mov    DWORD PTR [rbx+0x38],eax
   14002c7ce:	mov    rax,QWORD PTR [rsp+0xa0]
   14002c7d6:	mov    QWORD PTR [rbx+0x20],rax
   14002c7da:	mov    rax,QWORD PTR [rsp+0xa8]
   14002c7e2:	mov    QWORD PTR [rbx+0x80],rax
   14002c7e9:	mov    rax,QWORD PTR [rsp+0x80]
   14002c7f1:	mov    DWORD PTR [rbx+0x3c],ebp
   14002c7f4:	xor    ebp,ebp
   14002c7f6:	mov    QWORD PTR [rbx+0x88],rax
   14002c7fd:	mov    QWORD PTR [rbx+0x30],r13
   14002c801:	mov    QWORD PTR [rbx+0x28],r12
   14002c805:	mov    QWORD PTR [rbx+0x40],rbp
   14002c809:	mov    DWORD PTR [rbx+0x60],ebp
   14002c80c:	mov    QWORD PTR [rbx+0x68],rbp
   14002c810:	mov    QWORD PTR [rbx+0x70],rbp
   14002c814:	mov    DWORD PTR [rbx+0x48],ebp
   14002c817:	mov    QWORD PTR [rbx+0x50],rbp
   14002c81b:	mov    QWORD PTR [rbx+0x58],rbp
   14002c81f:	test   rdi,rdi
   14002c822:	je     0x14002c831
   14002c824:	mov    rcx,rdi
   14002c827:	call   QWORD PTR [rip+0x10efb]        # 0x14003d728
   14002c82d:	call   rdi
   14002c82f:	jmp    0x14002c834
   14002c831:	mov    rax,rbp
   14002c834:	mov    rdx,QWORD PTR [rsp+0xe0]
   14002c83c:	mov    r8d,0x400
   14002c842:	mov    rcx,rbx
   14002c845:	mov    QWORD PTR [rbx+0x78],rax
   14002c849:	call   0x14002b65c
   14002c84e:	mov    rdi,QWORD PTR [rip+0x22aab]        # 0x14004f300
   14002c855:	test   rdi,rdi
   14002c858:	je     0x14002c868
   14002c85a:	mov    rcx,rdi
   14002c85d:	call   QWORD PTR [rip+0x10ec5]        # 0x14003d728
   14002c863:	mov    rcx,rbx
   14002c866:	call   rdi
   14002c868:	cmp    DWORD PTR [rbx+0x4],ebp
   14002c86b:	jl     0x14002c88a
   14002c86d:	cmp    r15d,0x4
   14002c871:	je     0x14002c88a
   14002c873:	mov    rcx,QWORD PTR [rsp+0x78]
   14002c878:	lea    r8,[rip+0x169e9]        # 0x140043268
   14002c87f:	mov    edx,0xb46
   14002c884:	call   0x14002ddc8
   14002c889:	int3   
   14002c88a:	cmp    BYTE PTR [rip+0x22a7f],bpl        # 0x14004f310
   14002c891:	mov    rdi,QWORD PTR [rip+0x22a80]        # 0x14004f318
   14002c898:	jne    0x14002c8ab
   14002c89a:	cmp    QWORD PTR [rip+0x22a67],rbp        # 0x14004f308
   14002c8a1:	jne    0x14002c8a8
   14002c8a3:	test   rdi,rdi
   14002c8a6:	je     0x14002c8ab
   14002c8a8:	mov    sil,bpl
   14002c8ab:	cmp    BYTE PTR [rsp+0xc8],bpl
   14002c8b3:	jne    0x14002c8dd
   14002c8b5:	test   sil,sil
   14002c8b8:	jne    0x14002c8dd
   14002c8ba:	test   rdi,rdi
   14002c8bd:	je     0x14002c91e
   14002c8bf:	cmp    BYTE PTR [rip+0x22a32],bpl        # 0x14004f2f8
   14002c8c6:	jne    0x14002c91e
   14002c8c8:	mov    rcx,rdi
   14002c8cb:	call   QWORD PTR [rip+0x10e57]        # 0x14003d728
   14002c8d1:	xor    r8d,r8d
   14002c8d4:	xor    edx,edx
   14002c8d6:	mov    rcx,rbx
   14002c8d9:	call   rdi
   14002c8db:	jmp    0x14002c91e
   14002c8dd:	mov    r15d,0x800
   14002c8e3:	test   rdi,rdi
   14002c8e6:	je     0x14002c8fc
   14002c8e8:	mov    rcx,rdi
   14002c8eb:	call   QWORD PTR [rip+0x10e37]        # 0x14003d728
   14002c8f1:	mov    r8d,r15d
   14002c8f4:	mov    rdx,r14
   14002c8f7:	mov    rcx,rbx
   14002c8fa:	call   rdi
   14002c8fc:	cmp    WORD PTR [r14],bp
   14002c900:	jne    0x14002c910
   14002c902:	mov    r8,rbx
   14002c905:	mov    rdx,r15
   14002c908:	mov    rcx,r14
   14002c90b:	call   0x14002b8d8
   14002c910:	test   sil,sil
   14002c913:	je     0x14002c91e
   14002c915:	mov    rcx,r14
   14002c918:	call   QWORD PTR [rip+0x10812]        # 0x14003d130
   14002c91e:	mov    rbx,QWORD PTR [rsp+0x90]
   14002c926:	add    rsp,0x40
   14002c92a:	pop    r15
   14002c92c:	pop    r14
   14002c92e:	pop    r13
   14002c930:	pop    r12
   14002c932:	pop    rdi
   14002c933:	pop    rsi
   14002c934:	pop    rbp
   14002c935:	ret    
   14002c936:	int3   
   14002c937:	int3   
   14002c938:	int3   
   14002c939:	int3   
   14002c93a:	int3   
   14002c93b:	int3   
   14002c93c:	mov    QWORD PTR [rsp+0x18],r8
   14002c941:	mov    QWORD PTR [rsp+0x20],r9
   14002c946:	push   rbx
   14002c947:	push   rsi
   14002c948:	push   rdi
   14002c949:	sub    rsp,0x20
   14002c94d:	mov    r10,rdx
   14002c950:	lea    r9,[rsp+0x58]
   14002c955:	sub    r10,rcx
   14002c958:	mov    rsi,rdx
   14002c95b:	sar    r10,1
   14002c95e:	mov    rbx,rcx
   14002c961:	lea    rax,[r10-0x1]
   14002c965:	cmp    rax,0x7ffffffe
   14002c96b:	ja     0x14002c98f
   14002c96d:	lea    rdi,[r10-0x1]
   14002c971:	mov    rdx,rdi
   14002c974:	call   QWORD PTR [rip+0x10c9e]        # 0x14003d618
   14002c97a:	xor    ecx,ecx
   14002c97c:	test   eax,eax
   14002c97e:	js     0x14002c989
   14002c980:	cdqe   
   14002c982:	cmp    rax,rdi
   14002c985:	ja     0x14002c989
   14002c987:	jne    0x14002c999
   14002c989:	mov    WORD PTR [rbx+rdi*2],cx
   14002c98d:	jmp    0x14002c999
   14002c98f:	xor    ecx,ecx
   14002c991:	test   r10,r10
   14002c994:	je     0x14002c999
   14002c996:	mov    WORD PTR [rbx],cx
   14002c999:	cmp    rsi,rbx
   14002c99c:	je     0x14002c9af
   14002c99e:	or     rax,0xffffffffffffffff
   14002c9a2:	inc    rax
   14002c9a5:	cmp    WORD PTR [rbx+rax*2],cx
   14002c9a9:	jne    0x14002c9a2
   14002c9ab:	lea    rbx,[rbx+rax*2]
   14002c9af:	mov    rax,rbx
   14002c9b2:	add    rsp,0x20
   14002c9b6:	pop    rdi
   14002c9b7:	pop    rsi
   14002c9b8:	pop    rbx
   14002c9b9:	ret    
   14002c9ba:	int3   
   14002c9bb:	int3   
   14002c9bc:	int3   
   14002c9bd:	int3   
   14002c9be:	int3   
   14002c9bf:	int3   
   14002c9c0:	rex push rbx
   14002c9c2:	sub    rsp,0x40
   14002c9c6:	mov    rax,QWORD PTR [rsp+0x48]
   14002c9cb:	lea    r8,[rip+0x16896]        # 0x140043268
   14002c9d2:	mov    ebx,r9d
   14002c9d5:	mov    edx,0x76d
   14002c9da:	mov    DWORD PTR [rsp+0x38],ebx
   14002c9de:	xor    r9d,r9d
   14002c9e1:	mov    DWORD PTR [rsp+0x30],0x3
   14002c9e9:	mov    QWORD PTR [rsp+0x28],rax
   14002c9ee:	and    QWORD PTR [rsp+0x20],0x0
   14002c9f4:	call   0x14002d3a0
   14002c9f9:	mov    eax,ebx
   14002c9fb:	add    rsp,0x40
   14002c9ff:	pop    rbx
   14002ca00:	ret    
   14002ca01:	int3   
   14002ca02:	int3   
   14002ca03:	int3   
   14002ca04:	int3   
   14002ca05:	int3   
   14002ca06:	int3   
   14002ca07:	int3   
   14002ca08:	int3   
   14002ca09:	int3   
   14002ca0a:	int3   
   14002ca0b:	int3   
   14002ca0c:	int3   
   14002ca0d:	int3   
   14002ca0e:	int3   
   14002ca0f:	int3   
   14002ca10:	mov    QWORD PTR [rsp+0x18],rbx
   14002ca15:	push   rbp
   14002ca16:	push   rsi
   14002ca17:	push   rdi
   14002ca18:	lea    rbp,[rsp-0x90]
   14002ca20:	sub    rsp,0x190
   14002ca27:	mov    rax,QWORD PTR [rip+0x215e2]        # 0x14004e010
   14002ca2e:	xor    rax,rsp
   14002ca31:	mov    QWORD PTR [rbp+0x80],rax
   14002ca38:	mov    rax,QWORD PTR [rcx]
   14002ca3b:	mov    rsi,rcx
   14002ca3e:	mov    rdi,rdx
   14002ca41:	mov    rbx,QWORD PTR [rax+0x10]
   14002ca45:	mov    rcx,rbx
   14002ca48:	call   QWORD PTR [rip+0x10cda]        # 0x14003d728
   14002ca4e:	mov    edx,DWORD PTR [rdi+0x8]
   14002ca51:	mov    rcx,rsi
   14002ca54:	call   rbx
   14002ca56:	xor    ebx,ebx
   14002ca58:	test   al,al
   14002ca5a:	mov    rax,QWORD PTR [rsi+0x30]
   14002ca5e:	mov    r10,QWORD PTR [rax+0x28]
   14002ca62:	jne    0x14002cb9b
   14002ca68:	cmp    DWORD PTR [r10],0x5
   14002ca6c:	jbe    0x14002cd19
   14002ca72:	movabs rdx,0x200000000000
   14002ca7c:	mov    rcx,r10
   14002ca7f:	call   0x14000130c
   14002ca84:	test   al,al
   14002ca86:	je     0x14002cd19
   14002ca8c:	mov    eax,DWORD PTR [rdi+0x4]
   14002ca8f:	lea    rcx,[rbp-0x80]
   14002ca93:	mov    rdx,QWORD PTR [rdi+0x30]
   14002ca97:	mov    DWORD PTR [rsp+0x3c],eax
   14002ca9b:	lea    rax,[rsp+0x3c]
   14002caa0:	mov    QWORD PTR [rsp+0x70],rax
   14002caa5:	mov    QWORD PTR [rsp+0x78],0x4
   14002caae:	call   0x14002dfd8
   14002cab3:	mov    rdx,QWORD PTR [rdi+0x78]
   14002cab7:	lea    rcx,[rdi+0x38]
   14002cabb:	mov    QWORD PTR [rbp-0x70],rcx
   14002cabf:	lea    rcx,[rbp-0x60]
   14002cac3:	mov    QWORD PTR [rbp-0x68],0x4
   14002cacb:	call   0x14002dfd8
   14002cad0:	mov    ecx,DWORD PTR [rdi]
   14002cad2:	lea    rax,[rsp+0x38]
   14002cad7:	mov    rdx,QWORD PTR [rdi+0x10]
   14002cadb:	mov    DWORD PTR [rsp+0x38],ecx
   14002cadf:	lea    rcx,[rbp-0x40]
   14002cae3:	mov    QWORD PTR [rbp-0x50],rax
   14002cae7:	mov    QWORD PTR [rbp-0x48],0x4
   14002caef:	call   0x14002e00c
   14002caf4:	mov    ecx,DWORD PTR [rdi+0x18]
   14002caf7:	lea    rax,[rsp+0x40]
   14002cafc:	mov    rdx,QWORD PTR [rdi+0x40]
   14002cb00:	mov    DWORD PTR [rsp+0x40],ecx
   14002cb04:	lea    rcx,[rbp-0x20]
   14002cb08:	mov    QWORD PTR [rbp-0x30],rax
   14002cb0c:	mov    QWORD PTR [rbp-0x28],0x4
   14002cb14:	call   0x14002dfd8
   14002cb19:	mov    ecx,DWORD PTR [rdi+0x48]
   14002cb1c:	lea    rax,[rsp+0x30]
   14002cb21:	mov    rdx,QWORD PTR [rdi+0x50]
   14002cb25:	mov    DWORD PTR [rsp+0x30],ecx
   14002cb29:	lea    rcx,[rbp+0x0]
   14002cb2d:	mov    QWORD PTR [rbp-0x10],rax
   14002cb31:	mov    QWORD PTR [rbp-0x8],0x4
   14002cb39:	call   0x14002dfd8
   14002cb3e:	mov    rdx,QWORD PTR [rdi+0x58]
   14002cb42:	lea    rcx,[rbp+0x10]
   14002cb46:	call   0x14002e00c
   14002cb4b:	mov    ecx,DWORD PTR [rdi+0x60]
   14002cb4e:	lea    rax,[rsp+0x34]
   14002cb53:	mov    rdx,QWORD PTR [rdi+0x68]
   14002cb57:	mov    DWORD PTR [rsp+0x34],ecx
   14002cb5b:	lea    rcx,[rbp+0x30]
   14002cb5f:	mov    QWORD PTR [rbp+0x20],rax
   14002cb63:	mov    QWORD PTR [rbp+0x28],0x4
   14002cb6b:	call   0x14002dfd8
   14002cb70:	mov    rdx,QWORD PTR [rdi+0x70]
   14002cb74:	lea    rcx,[rbp+0x40]
   14002cb78:	call   0x14002e00c
   14002cb7d:	lea    rax,[rsp+0x50]
   14002cb82:	mov    QWORD PTR [rsp+0x28],rax
   14002cb87:	lea    rdx,[rip+0x150cf]        # 0x140041c5d
   14002cb8e:	mov    DWORD PTR [rsp+0x20],0x10
   14002cb96:	jmp    0x14002cd06
   14002cb9b:	cmp    DWORD PTR [r10],0x5
   14002cb9f:	jbe    0x14002cd19
   14002cba5:	movabs rdx,0x200000000000
   14002cbaf:	mov    rcx,r10
   14002cbb2:	call   0x14000130c
   14002cbb7:	test   al,al
   14002cbb9:	je     0x14002cd19
   14002cbbf:	mov    eax,DWORD PTR [rdi+0x4]
   14002cbc2:	lea    rcx,[rbp-0x80]
   14002cbc6:	mov    rdx,QWORD PTR [rdi+0x30]
   14002cbca:	mov    DWORD PTR [rsp+0x34],eax
   14002cbce:	lea    rax,[rsp+0x34]
   14002cbd3:	mov    QWORD PTR [rsp+0x70],rax
   14002cbd8:	mov    QWORD PTR [rsp+0x78],0x4
   14002cbe1:	call   0x14002dfd8
   14002cbe6:	mov    rdx,QWORD PTR [rdi+0x78]
   14002cbea:	lea    rcx,[rdi+0x38]
   14002cbee:	mov    QWORD PTR [rbp-0x70],rcx
   14002cbf2:	lea    rcx,[rbp-0x60]
   14002cbf6:	mov    QWORD PTR [rbp-0x68],0x4
   14002cbfe:	call   0x14002dfd8
   14002cc03:	mov    ecx,DWORD PTR [rdi]
   14002cc05:	lea    rax,[rsp+0x30]
   14002cc0a:	mov    rdx,QWORD PTR [rdi+0x10]
   14002cc0e:	mov    DWORD PTR [rsp+0x30],ecx
   14002cc12:	lea    rcx,[rbp-0x40]
   14002cc16:	mov    QWORD PTR [rbp-0x50],rax
   14002cc1a:	mov    QWORD PTR [rbp-0x48],0x4
   14002cc22:	call   0x14002e00c
   14002cc27:	mov    ecx,DWORD PTR [rdi+0x18]
   14002cc2a:	lea    rax,[rsp+0x40]
   14002cc2f:	mov    rdx,QWORD PTR [rdi+0x40]
   14002cc33:	mov    DWORD PTR [rsp+0x40],ecx
   14002cc37:	lea    rcx,[rbp-0x20]
   14002cc3b:	mov    QWORD PTR [rbp-0x30],rax
   14002cc3f:	mov    QWORD PTR [rbp-0x28],0x4
   14002cc47:	call   0x14002dfd8
   14002cc4c:	mov    ecx,DWORD PTR [rdi+0x48]
   14002cc4f:	lea    rax,[rsp+0x38]
   14002cc54:	mov    rdx,QWORD PTR [rdi+0x50]
   14002cc58:	mov    DWORD PTR [rsp+0x38],ecx
   14002cc5c:	lea    rcx,[rbp+0x0]
   14002cc60:	mov    QWORD PTR [rbp-0x10],rax
   14002cc64:	mov    QWORD PTR [rbp-0x8],0x4
   14002cc6c:	call   0x14002dfd8
   14002cc71:	mov    rdx,QWORD PTR [rdi+0x58]
   14002cc75:	lea    rcx,[rbp+0x10]
   14002cc79:	call   0x14002e00c
   14002cc7e:	mov    ecx,DWORD PTR [rdi+0x60]
   14002cc81:	lea    rax,[rsp+0x3c]
   14002cc86:	mov    rdx,QWORD PTR [rdi+0x68]
   14002cc8a:	mov    DWORD PTR [rsp+0x3c],ecx
   14002cc8e:	lea    rcx,[rbp+0x30]
   14002cc92:	mov    QWORD PTR [rbp+0x20],rax
   14002cc96:	mov    QWORD PTR [rbp+0x28],0x4
   14002cc9e:	call   0x14002dfd8
   14002cca3:	mov    rdx,QWORD PTR [rdi+0x70]
   14002cca7:	lea    rcx,[rbp+0x40]
   14002ccab:	call   0x14002e00c
   14002ccb0:	mov    ecx,DWORD PTR [rdi+0x8]
   14002ccb3:	lea    rax,[rsp+0x44]
   14002ccb8:	mov    rdx,QWORD PTR [rdi+0x28]
   14002ccbc:	mov    QWORD PTR [rbp+0x50],rax
   14002ccc0:	mov    eax,DWORD PTR [rdi+0x3c]
   14002ccc3:	mov    DWORD PTR [rsp+0x48],eax
   14002ccc7:	lea    rax,[rsp+0x48]
   14002cccc:	mov    DWORD PTR [rsp+0x44],ecx
   14002ccd0:	lea    rcx,[rbp+0x70]
   14002ccd4:	mov    QWORD PTR [rbp+0x60],rax
   14002ccd8:	mov    QWORD PTR [rbp+0x58],0x4
   14002cce0:	mov    QWORD PTR [rbp+0x68],0x4
   14002cce8:	call   0x14002dfd8
   14002cced:	lea    rax,[rsp+0x50]
   14002ccf2:	mov    QWORD PTR [rsp+0x28],rax
   14002ccf7:	lea    rdx,[rip+0x14e37]        # 0x140041b35
   14002ccfe:	mov    DWORD PTR [rsp+0x20],0x13
   14002cd06:	mov    r8,QWORD PTR [rsi+0x30]
   14002cd0a:	xor    r9d,r9d
   14002cd0d:	add    r8,0x8
   14002cd11:	mov    rcx,r10
   14002cd14:	call   0x140001264
   14002cd19:	lea    rdx,[rsp+0x48]
   14002cd1e:	mov    rcx,rsi
   14002cd21:	call   0x14000e914
   14002cd26:	mov    rcx,QWORD PTR [rsi+0x30]
   14002cd2a:	mov    eax,DWORD PTR [rdi+0x4]
   14002cd2d:	cmp    eax,DWORD PTR [rcx+0x5c]
   14002cd30:	je     0x14002cd48
   14002cd32:	cmp    eax,DWORD PTR [rcx+0x54]
   14002cd35:	jne    0x14002cd3c
   14002cd37:	cmp    DWORD PTR [rcx+0x54],ebx
   14002cd3a:	jl     0x14002cd48
   14002cd3c:	add    rcx,0x58
   14002cd40:	mov    rdx,rdi
   14002cd43:	call   0x14002d8d8
   14002cd48:	mov    rcx,QWORD PTR [rsp+0x48]
   14002cd4d:	test   rcx,rcx
   14002cd50:	je     0x14002cd58
   14002cd52:	call   QWORD PTR [rip+0x10638]        # 0x14003d390
   14002cd58:	mov    al,0x1
   14002cd5a:	mov    rcx,QWORD PTR [rbp+0x80]
   14002cd61:	xor    rcx,rsp
   14002cd64:	call   0x1400141d0
   14002cd69:	mov    rbx,QWORD PTR [rsp+0x1c0]
   14002cd71:	add    rsp,0x190
   14002cd78:	pop    rdi
   14002cd79:	pop    rsi
   14002cd7a:	pop    rbp
   14002cd7b:	ret    
   14002cd7c:	int3   
   14002cd7d:	int3   
   14002cd7e:	int3   
   14002cd7f:	int3   
   14002cd80:	int3   
   14002cd81:	int3   
   14002cd82:	int3   
   14002cd83:	int3   
   14002cd84:	int3   
   14002cd85:	int3   
   14002cd86:	int3   
   14002cd87:	int3   
   14002cd88:	int3   
   14002cd89:	int3   
   14002cd8a:	int3   
   14002cd8b:	int3   
   14002cd8c:	int3   
   14002cd8d:	int3   
   14002cd8e:	int3   
   14002cd8f:	int3   
   14002cd90:	mov    QWORD PTR [rsp+0x8],rbx
   14002cd95:	mov    QWORD PTR [rsp+0x10],rsi
   14002cd9a:	push   rdi
   14002cd9b:	sub    rsp,0x20
   14002cd9f:	mov    r8d,DWORD PTR [rdx+0x8]
   14002cda3:	mov    rdi,rdx
   14002cda6:	mov    eax,DWORD PTR [rip+0x2176c]        # 0x14004e518
   14002cdac:	mov    rsi,rcx
   14002cdaf:	mov    DWORD PTR [rip+0x21762],r8d        # 0x14004e518
   14002cdb6:	cmp    eax,r8d
   14002cdb9:	je     0x14002cdd5
   14002cdbb:	mov    rax,QWORD PTR [rcx]
   14002cdbe:	mov    rbx,QWORD PTR [rax+0x10]
   14002cdc2:	mov    rcx,rbx
   14002cdc5:	call   QWORD PTR [rip+0x1095d]        # 0x14003d728
   14002cdcb:	mov    r8,rdi
   14002cdce:	xor    edx,edx
   14002cdd0:	mov    rcx,rsi
   14002cdd3:	call   rbx
   14002cdd5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cdda:	mov    al,0x1
   14002cddc:	mov    rsi,QWORD PTR [rsp+0x38]
   14002cde1:	add    rsp,0x20
   14002cde5:	pop    rdi
   14002cde6:	ret    
   14002cde7:	int3   
   14002cde8:	int3   
   14002cde9:	int3   
   14002cdea:	int3   
   14002cdeb:	int3   
   14002cdec:	int3   
   14002cded:	int3   
   14002cdee:	int3   
   14002cdef:	int3   
   14002cdf0:	sub    rsp,0x28
   14002cdf4:	test   dl,dl
   14002cdf6:	jne    0x14002ce18
   14002cdf8:	cmp    DWORD PTR [rcx+0x14],0x1
   14002cdfc:	jne    0x14002ce0a
   14002cdfe:	mov    rdx,r8
   14002ce01:	add    rsp,0x28
   14002ce05:	jmp    0x14002d3e4
   14002ce0a:	cmp    DWORD PTR [rcx+0x14],0x2
   14002ce0e:	jne    0x14002ce18
   14002ce10:	mov    rdx,r8
   14002ce13:	call   0x14002d570
   14002ce18:	add    rsp,0x28
   14002ce1c:	ret    
   14002ce1d:	int3   
   14002ce1e:	int3   
   14002ce1f:	int3   
   14002ce20:	int3   
   14002ce21:	int3   
   14002ce22:	int3   
   14002ce23:	int3   
   14002ce24:	int3   
   14002ce25:	int3   
   14002ce26:	int3   
   14002ce27:	int3   
   14002ce28:	int3   
   14002ce29:	int3   
   14002ce2a:	int3   
   14002ce2b:	int3   
   14002ce2c:	int3   
   14002ce2d:	int3   
   14002ce2e:	int3   
   14002ce2f:	int3   
   14002ce30:	mov    QWORD PTR [rsp+0x8],rbx
   14002ce35:	mov    QWORD PTR [rsp+0x10],rsi
   14002ce3a:	push   rdi
   14002ce3b:	sub    rsp,0x20
   14002ce3f:	xor    edi,edi
   14002ce41:	mov    rsi,rcx
   14002ce44:	test   r8,r8
   14002ce47:	jne    0x14002ce50
   14002ce49:	mov    eax,0x80004003
   14002ce4e:	jmp    0x14002ce93
   14002ce50:	mov    rcx,rdx
   14002ce53:	mov    QWORD PTR [r8],rdi
   14002ce56:	call   0x14002c16c
   14002ce5b:	test   eax,eax
   14002ce5d:	je     0x14002ce79
   14002ce5f:	mov    QWORD PTR [r8],rsi
   14002ce62:	mov    rax,QWORD PTR [rsi]
   14002ce65:	mov    rbx,QWORD PTR [rax+0x8]
   14002ce69:	mov    rcx,rbx
   14002ce6c:	call   QWORD PTR [rip+0x108b6]        # 0x14003d728
   14002ce72:	mov    rcx,rsi
   14002ce75:	call   rbx
   14002ce77:	jmp    0x14002ce91
   14002ce79:	mov    r9,r8
   14002ce7c:	lea    rcx,[rsi+0x18]
   14002ce80:	mov    r8,rdx
   14002ce83:	lea    rdx,[rip+0x158c6]        # 0x140042750
   14002ce8a:	call   0x14000c260
   14002ce8f:	mov    edi,eax
   14002ce91:	mov    eax,edi
   14002ce93:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ce98:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ce9d:	add    rsp,0x20
   14002cea1:	pop    rdi
   14002cea2:	ret    
   14002cea3:	int3   
   14002cea4:	int3   
   14002cea5:	int3   
   14002cea6:	int3   
   14002cea7:	int3   
   14002cea8:	int3   
   14002cea9:	int3   
   14002ceaa:	int3   
   14002ceab:	int3   
   14002ceac:	int3   
   14002cead:	int3   
   14002ceae:	int3   
   14002ceaf:	int3   
   14002ceb0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ceb5:	mov    QWORD PTR [rsp+0x10],rsi
   14002ceba:	push   rdi
   14002cebb:	sub    rsp,0x20
   14002cebf:	xor    edi,edi
   14002cec1:	mov    rsi,rcx
   14002cec4:	test   r8,r8
   14002cec7:	jne    0x14002ced0
   14002cec9:	mov    eax,0x80004003
   14002cece:	jmp    0x14002cf13
   14002ced0:	mov    rcx,rdx
   14002ced3:	mov    QWORD PTR [r8],rdi
   14002ced6:	call   0x14002c16c
   14002cedb:	test   eax,eax
   14002cedd:	je     0x14002cef9
   14002cedf:	mov    QWORD PTR [r8],rsi
   14002cee2:	mov    rax,QWORD PTR [rsi]
   14002cee5:	mov    rbx,QWORD PTR [rax+0x8]
   14002cee9:	mov    rcx,rbx
   14002ceec:	call   QWORD PTR [rip+0x10836]        # 0x14003d728
   14002cef2:	mov    rcx,rsi
   14002cef5:	call   rbx
   14002cef7:	jmp    0x14002cf11
   14002cef9:	mov    r9,r8
   14002cefc:	lea    rcx,[rsi+0x10]
   14002cf00:	mov    r8,rdx
   14002cf03:	lea    rdx,[rip+0x15716]        # 0x140042620
   14002cf0a:	call   0x14000c260
   14002cf0f:	mov    edi,eax
   14002cf11:	mov    eax,edi
   14002cf13:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cf18:	mov    rsi,QWORD PTR [rsp+0x38]
   14002cf1d:	add    rsp,0x20
   14002cf21:	pop    rdi
   14002cf22:	ret    
   14002cf23:	int3   
   14002cf24:	int3   
   14002cf25:	int3   
   14002cf26:	int3   
   14002cf27:	int3   
   14002cf28:	int3   
   14002cf29:	int3   
   14002cf2a:	int3   
   14002cf2b:	int3   
   14002cf2c:	int3   
   14002cf2d:	int3   
   14002cf2e:	int3   
   14002cf2f:	int3   
   14002cf30:	mov    QWORD PTR [rsp+0x8],rbx
   14002cf35:	mov    QWORD PTR [rsp+0x10],rbp
   14002cf3a:	mov    QWORD PTR [rsp+0x18],rsi
   14002cf3f:	push   rdi
   14002cf40:	sub    rsp,0x20
   14002cf44:	mov    rdi,QWORD PTR [rcx+0x10]
   14002cf48:	mov    rsi,r8
   14002cf4b:	mov    rbp,rdx
   14002cf4e:	mov    rax,QWORD PTR [rdi]
   14002cf51:	mov    rbx,QWORD PTR [rax]
   14002cf54:	mov    rcx,rbx
   14002cf57:	call   QWORD PTR [rip+0x107cb]        # 0x14003d728
   14002cf5d:	mov    r8,rsi
   14002cf60:	mov    rdx,rbp
   14002cf63:	mov    rcx,rdi
   14002cf66:	mov    rax,rbx
   14002cf69:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cf6e:	mov    rbp,QWORD PTR [rsp+0x38]
   14002cf73:	mov    rsi,QWORD PTR [rsp+0x40]
   14002cf78:	add    rsp,0x20
   14002cf7c:	pop    rdi
   14002cf7d:	rex.W jmp rax
   14002cf80:	int3   
   14002cf81:	int3   
   14002cf82:	int3   
   14002cf83:	int3   
   14002cf84:	int3   
   14002cf85:	int3   
   14002cf86:	int3   
   14002cf87:	int3   
   14002cf88:	int3   
   14002cf89:	int3   
   14002cf8a:	int3   
   14002cf8b:	int3   
   14002cf8c:	int3   
   14002cf8d:	int3   
   14002cf8e:	int3   
   14002cf8f:	int3   
   14002cf90:	mov    QWORD PTR [rsp+0x8],rbx
   14002cf95:	mov    QWORD PTR [rsp+0x10],rbp
   14002cf9a:	mov    QWORD PTR [rsp+0x18],rsi
   14002cf9f:	push   rdi
   14002cfa0:	sub    rsp,0x20
   14002cfa4:	mov    rdi,QWORD PTR [rcx+0x28]
   14002cfa8:	mov    rsi,r8
   14002cfab:	mov    rbp,rdx
   14002cfae:	mov    rax,QWORD PTR [rdi]
   14002cfb1:	mov    rbx,QWORD PTR [rax]
   14002cfb4:	mov    rcx,rbx
   14002cfb7:	call   QWORD PTR [rip+0x1076b]        # 0x14003d728
   14002cfbd:	mov    r8,rsi
   14002cfc0:	mov    rdx,rbp
   14002cfc3:	mov    rcx,rdi
   14002cfc6:	mov    rax,rbx
   14002cfc9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cfce:	mov    rbp,QWORD PTR [rsp+0x38]
   14002cfd3:	mov    rsi,QWORD PTR [rsp+0x40]
   14002cfd8:	add    rsp,0x20
   14002cfdc:	pop    rdi
   14002cfdd:	rex.W jmp rax
   14002cfe0:	int3   
   14002cfe1:	int3   
   14002cfe2:	int3   
   14002cfe3:	int3   
   14002cfe4:	int3   
   14002cfe5:	int3   
   14002cfe6:	int3   
   14002cfe7:	int3   
   14002cfe8:	int3   
   14002cfe9:	int3   
   14002cfea:	int3   
   14002cfeb:	int3   
   14002cfec:	int3   
   14002cfed:	int3   
   14002cfee:	int3   
   14002cfef:	int3   
   14002cff0:	mov    rax,rsp
   14002cff3:	push   rdi
   14002cff4:	sub    rsp,0x30
   14002cff8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002d000:	mov    QWORD PTR [rax+0x8],rbx
   14002d004:	mov    QWORD PTR [rax+0x10],rbp
   14002d008:	mov    QWORD PTR [rax+0x18],rsi
   14002d00c:	mov    rsi,rcx
   14002d00f:	sub    DWORD PTR [rcx+0x8],0x1
   14002d013:	mov    ebp,DWORD PTR [rcx+0x8]
   14002d016:	jne    0x14002d071
   14002d018:	mov    rdi,QWORD PTR [rip+0x21b41]        # 0x14004eb60
   14002d01f:	mov    rax,QWORD PTR [rdi]
   14002d022:	mov    rbx,QWORD PTR [rax+0x8]
   14002d026:	mov    rcx,rbx
   14002d029:	call   QWORD PTR [rip+0x106f9]        # 0x14003d728
   14002d02f:	mov    rcx,rdi
   14002d032:	call   rbx
   14002d034:	nop
   14002d035:	test   rsi,rsi
   14002d038:	je     0x14002d055
   14002d03a:	mov    rax,QWORD PTR [rsi]
   14002d03d:	mov    rbx,QWORD PTR [rax+0x18]
   14002d041:	mov    rcx,rbx
   14002d044:	call   QWORD PTR [rip+0x106de]        # 0x14003d728
   14002d04a:	mov    edx,0x1
   14002d04f:	mov    rcx,rsi
   14002d052:	call   rbx
   14002d054:	nop
   14002d055:	mov    rdi,QWORD PTR [rip+0x21b04]        # 0x14004eb60
   14002d05c:	mov    rdx,QWORD PTR [rdi]
   14002d05f:	mov    rbx,QWORD PTR [rdx+0x10]
   14002d063:	mov    rcx,rbx
   14002d066:	call   QWORD PTR [rip+0x106bc]        # 0x14003d728
   14002d06c:	mov    rcx,rdi
   14002d06f:	call   rbx
   14002d071:	mov    eax,ebp
   14002d073:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d078:	mov    rbp,QWORD PTR [rsp+0x48]
   14002d07d:	mov    rsi,QWORD PTR [rsp+0x50]
   14002d082:	add    rsp,0x30
   14002d086:	pop    rdi
   14002d087:	ret    
   14002d088:	lea    rcx,[rdx+0x28]
   14002d08f:	jmp    0x140029ffc
   14002d094:	int3   
   14002d095:	int3   
   14002d096:	int3   
   14002d097:	int3   
   14002d098:	int3   
   14002d099:	int3   
   14002d09a:	int3   
   14002d09b:	int3   
   14002d09c:	int3   
   14002d09d:	int3   
   14002d09e:	int3   
   14002d09f:	int3   
   14002d0a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d0a5:	push   rdi
   14002d0a6:	sub    rsp,0x20
   14002d0aa:	mov    rdi,QWORD PTR [rcx+0x10]
   14002d0ae:	mov    rax,QWORD PTR [rdi]
   14002d0b1:	mov    rbx,QWORD PTR [rax+0x10]
   14002d0b5:	mov    rcx,rbx
   14002d0b8:	call   QWORD PTR [rip+0x1066a]        # 0x14003d728
   14002d0be:	mov    rcx,rdi
   14002d0c1:	mov    rax,rbx
   14002d0c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d0c9:	add    rsp,0x20
   14002d0cd:	pop    rdi
   14002d0ce:	rex.W jmp rax
   14002d0d1:	int3   
   14002d0d2:	int3   
   14002d0d3:	int3   
   14002d0d4:	int3   
   14002d0d5:	int3   
   14002d0d6:	int3   
   14002d0d7:	int3   
   14002d0d8:	int3   
   14002d0d9:	int3   
   14002d0da:	int3   
   14002d0db:	int3   
   14002d0dc:	int3   
   14002d0dd:	int3   
   14002d0de:	int3   
   14002d0df:	int3   
   14002d0e0:	mov    rax,rsp
   14002d0e3:	push   rdi
   14002d0e4:	sub    rsp,0x30
   14002d0e8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002d0f0:	mov    QWORD PTR [rax+0x8],rbx
   14002d0f4:	mov    QWORD PTR [rax+0x10],rbp
   14002d0f8:	mov    QWORD PTR [rax+0x18],rsi
   14002d0fc:	mov    rsi,rcx
   14002d0ff:	sub    DWORD PTR [rcx+0x28],0x1
   14002d103:	mov    ebp,DWORD PTR [rcx+0x28]
   14002d106:	jne    0x14002d161
   14002d108:	mov    rdi,QWORD PTR [rip+0x21a51]        # 0x14004eb60
   14002d10f:	mov    rax,QWORD PTR [rdi]
   14002d112:	mov    rbx,QWORD PTR [rax+0x8]
   14002d116:	mov    rcx,rbx
   14002d119:	call   QWORD PTR [rip+0x10609]        # 0x14003d728
   14002d11f:	mov    rcx,rdi
   14002d122:	call   rbx
   14002d124:	nop
   14002d125:	test   rsi,rsi
   14002d128:	je     0x14002d145
   14002d12a:	mov    rax,QWORD PTR [rsi]
   14002d12d:	mov    rbx,QWORD PTR [rax+0x60]
   14002d131:	mov    rcx,rbx
   14002d134:	call   QWORD PTR [rip+0x105ee]        # 0x14003d728
   14002d13a:	mov    edx,0x1
   14002d13f:	mov    rcx,rsi
   14002d142:	call   rbx
   14002d144:	nop
   14002d145:	mov    rdi,QWORD PTR [rip+0x21a14]        # 0x14004eb60
   14002d14c:	mov    rdx,QWORD PTR [rdi]
   14002d14f:	mov    rbx,QWORD PTR [rdx+0x10]
   14002d153:	mov    rcx,rbx
   14002d156:	call   QWORD PTR [rip+0x105cc]        # 0x14003d728
   14002d15c:	mov    rcx,rdi
   14002d15f:	call   rbx
   14002d161:	mov    eax,ebp
   14002d163:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d168:	mov    rbp,QWORD PTR [rsp+0x48]
   14002d16d:	mov    rsi,QWORD PTR [rsp+0x50]
   14002d172:	add    rsp,0x30
   14002d176:	pop    rdi
   14002d177:	ret    
   14002d178:	lea    rcx,[rdx+0x28]
   14002d17f:	jmp    0x140029ffc
   14002d184:	int3   
   14002d185:	int3   
   14002d186:	int3   
   14002d187:	int3   
   14002d188:	int3   
   14002d189:	int3   
   14002d18a:	int3   
   14002d18b:	int3   
   14002d18c:	int3   
   14002d18d:	int3   
   14002d18e:	int3   
   14002d18f:	int3   
   14002d190:	mov    edx,edx
   14002d192:	add    rcx,0x18
   14002d196:	jmp    0x14002d1a4
   14002d19b:	int3   
   14002d19c:	int3   
   14002d19d:	int3   
   14002d19e:	int3   
   14002d19f:	int3   
   14002d1a0:	int3   
   14002d1a1:	int3   
   14002d1a2:	int3   
   14002d1a3:	int3   
   14002d1a4:	mov    QWORD PTR [rsp+0x8],rbx
   14002d1a9:	mov    QWORD PTR [rsp+0x10],rbp
   14002d1ae:	mov    QWORD PTR [rsp+0x18],rsi
   14002d1b3:	push   rdi
   14002d1b4:	sub    rsp,0x20
   14002d1b8:	lea    rdi,[rdx+0x1]
   14002d1bc:	mov    rbp,rdx
   14002d1bf:	mov    rbx,rcx
   14002d1c2:	cmp    rdi,rdx
   14002d1c5:	jb     0x14002d260
   14002d1cb:	mov    edx,0x1
   14002d1d0:	cmp    rdi,rdx
   14002d1d3:	jb     0x14002d260
   14002d1d9:	mov    rsi,QWORD PTR [rcx+0x8]
   14002d1dd:	cmp    rdi,rsi
   14002d1e0:	ja     0x14002d260
   14002d1e2:	mov    rax,QWORD PTR [rcx]
   14002d1e5:	lea    rcx,[rax+rbp*8]
   14002d1e9:	call   0x14002b12c
   14002d1ee:	sub    rsi,rdi
   14002d1f1:	je     0x14002d247
   14002d1f3:	mov    rax,QWORD PTR [rbx]
   14002d1f6:	mov    rdx,rsi
   14002d1f9:	shl    rdx,0x3
   14002d1fd:	mov    r9,rdx
   14002d200:	lea    r8,[rax+rdi*8]
   14002d204:	lea    rcx,[rax+rbp*8]
   14002d208:	call   QWORD PTR [rip+0x1041a]        # 0x14003d628
   14002d20e:	test   eax,eax
   14002d210:	je     0x14002d247
   14002d212:	cmp    eax,0xc
   14002d215:	je     0x14002d23c
   14002d217:	cmp    eax,0x16
   14002d21a:	je     0x14002d231
   14002d21c:	cmp    eax,0x22
   14002d21f:	je     0x14002d231
   14002d221:	cmp    eax,0x50
   14002d224:	je     0x14002d247
   14002d226:	mov    ecx,0x80004005
   14002d22b:	call   0x1400152fc
   14002d230:	int3   
   14002d231:	mov    ecx,0x80070057
   14002d236:	call   0x1400152fc
   14002d23b:	int3   
   14002d23c:	mov    ecx,0x8007000e
   14002d241:	call   0x1400152fc
   14002d246:	int3   
   14002d247:	dec    QWORD PTR [rbx+0x8]
   14002d24b:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d250:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d255:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d25a:	add    rsp,0x20
   14002d25e:	pop    rdi
   14002d25f:	ret    
   14002d260:	mov    ecx,0x80070057
   14002d265:	call   0x1400152fc
   14002d26a:	int3   
   14002d26b:	int3   
   14002d26c:	int3   
   14002d26d:	int3   
   14002d26e:	int3   
   14002d26f:	int3   
   14002d270:	int3   
   14002d271:	int3   
   14002d272:	int3   
   14002d273:	int3   
   14002d274:	rex push rbx
   14002d276:	push   rdi
   14002d277:	mov    eax,0x15c8
   14002d27c:	call   0x140015740
   14002d281:	sub    rsp,rax
   14002d284:	mov    rax,QWORD PTR [rip+0x20d85]        # 0x14004e010
   14002d28b:	xor    rax,rsp
   14002d28e:	mov    QWORD PTR [rsp+0x15b0],rax
   14002d296:	mov    edi,DWORD PTR [rsp+0x1610]
   14002d29d:	mov    r10,QWORD PTR [rsp+0x1600]
   14002d2a5:	mov    r11,QWORD PTR [rsp+0x1608]
   14002d2ad:	test   edi,edi
   14002d2af:	jne    0x14002d2bf
   14002d2b1:	cmp    QWORD PTR [rip+0x22037],0x0        # 0x14004f2f0
   14002d2b9:	je     0x14002d2bf
   14002d2bb:	mov    bl,0x1
   14002d2bd:	jmp    0x14002d2c1
   14002d2bf:	xor    bl,bl
   14002d2c1:	lea    rax,[rsp+0x120]
   14002d2c9:	mov    QWORD PTR [rsp+0x70],rax
   14002d2ce:	lea    rax,[rsp+0x1b0]
   14002d2d6:	mov    QWORD PTR [rsp+0x60],rax
   14002d2db:	lea    rax,[rsp+0x5b0]
   14002d2e3:	mov    QWORD PTR [rsp+0x50],rax
   14002d2e8:	mov    eax,DWORD PTR [rsp+0x1618]
   14002d2ef:	mov    BYTE PTR [rsp+0x48],bl
   14002d2f3:	and    QWORD PTR [rsp+0x40],0x0
   14002d2f9:	mov    DWORD PTR [rsp+0x38],eax
   14002d2fd:	mov    DWORD PTR [rsp+0x30],edi
   14002d301:	mov    QWORD PTR [rsp+0x28],r11
   14002d306:	mov    QWORD PTR [rsp+0x20],r10
   14002d30b:	call   0x14002c6a4
   14002d310:	cmp    edi,0x4
   14002d313:	jne    0x14002d334
   14002d315:	lea    ecx,[rdi+0x3]
   14002d318:	int    0x29
   14002d31a:	mov    rcx,QWORD PTR [rsp+0x15b0]
   14002d322:	xor    rcx,rsp
   14002d325:	call   0x1400141d0
   14002d32a:	add    rsp,0x15c8
   14002d331:	pop    rdi
   14002d332:	pop    rbx
   14002d333:	ret    
   14002d334:	test   edi,edi
   14002d336:	jne    0x14002d31a
   14002d338:	test   bl,bl
   14002d33a:	je     0x14002d35e
   14002d33c:	mov    rbx,QWORD PTR [rip+0x21fad]        # 0x14004f2f0
   14002d343:	mov    rcx,rbx
   14002d346:	call   QWORD PTR [rip+0x103dc]        # 0x14003d728
   14002d34c:	lea    rdx,[rsp+0x5b0]
   14002d354:	lea    rcx,[rsp+0x120]
   14002d35c:	call   rbx
   14002d35e:	and    QWORD PTR [rsp+0x110],0x0
   14002d367:	lea    rdx,[rsp+0x120]
   14002d36f:	and    QWORD PTR [rsp+0x118],0x0
   14002d378:	lea    rcx,[rsp+0x80]
   14002d380:	call   0x14002d8d8
   14002d385:	lea    rdx,[rip+0x1e4bc]        # 0x14004b848
   14002d38c:	lea    rcx,[rsp+0x80]
   14002d394:	call   0x14001562a
   14002d399:	int3   
   14002d39a:	int3   
   14002d39b:	int3   
   14002d39c:	int3   
   14002d39d:	int3   
   14002d39e:	int3   
   14002d39f:	int3   
   14002d3a0:	sub    rsp,0x58
   14002d3a4:	mov    eax,DWORD PTR [rsp+0x98]
   14002d3ab:	mov    DWORD PTR [rsp+0x38],eax
   14002d3af:	mov    eax,DWORD PTR [rsp+0x90]
   14002d3b6:	mov    DWORD PTR [rsp+0x30],eax
   14002d3ba:	mov    rax,QWORD PTR [rsp+0x88]
   14002d3c2:	mov    QWORD PTR [rsp+0x28],rax
   14002d3c7:	mov    rax,QWORD PTR [rsp+0x80]
   14002d3cf:	mov    QWORD PTR [rsp+0x20],rax
   14002d3d4:	call   0x14002d274
   14002d3d9:	add    rsp,0x58
   14002d3dd:	ret    
   14002d3de:	int3   
   14002d3df:	int3   
   14002d3e0:	int3   
   14002d3e1:	int3   
   14002d3e2:	int3   
   14002d3e3:	int3   
   14002d3e4:	mov    QWORD PTR [rsp+0x18],rbx
   14002d3e9:	push   rbp
   14002d3ea:	lea    rbp,[rsp-0x60]
   14002d3ef:	sub    rsp,0x160
   14002d3f6:	mov    rax,QWORD PTR [rip+0x20c13]        # 0x14004e010
   14002d3fd:	xor    rax,rsp
   14002d400:	mov    QWORD PTR [rbp+0x50],rax
   14002d404:	mov    r10,QWORD PTR [rcx+0x8]
   14002d408:	mov    r11,rdx
   14002d40b:	cmp    DWORD PTR [r10],0x5
   14002d40f:	jbe    0x14002d54c
   14002d415:	movabs rdx,0x200000000000
   14002d41f:	mov    rcx,r10
   14002d422:	call   0x14000130c
   14002d427:	test   al,al
   14002d429:	je     0x14002d54c
   14002d42f:	mov    eax,DWORD PTR [r11+0x4]
   14002d433:	lea    rcx,[rbp-0x80]
   14002d437:	mov    rdx,QWORD PTR [r11+0x30]
   14002d43b:	mov    ebx,0x4
   14002d440:	and    DWORD PTR [rsp+0x7c],0x0
   14002d445:	mov    DWORD PTR [rsp+0x40],eax
   14002d449:	lea    rax,[rsp+0x40]
   14002d44e:	mov    QWORD PTR [rsp+0x70],rax
   14002d453:	mov    DWORD PTR [rsp+0x78],ebx
   14002d457:	call   0x14002dfd8
   14002d45c:	mov    rdx,QWORD PTR [r11+0x78]
   14002d460:	lea    rcx,[r11+0x38]
   14002d464:	and    DWORD PTR [rbp-0x64],0x0
   14002d468:	mov    QWORD PTR [rbp-0x70],rcx
   14002d46c:	lea    rcx,[rbp-0x60]
   14002d470:	mov    DWORD PTR [rbp-0x68],ebx
   14002d473:	call   0x14002dfd8
   14002d478:	mov    ecx,DWORD PTR [r11]
   14002d47b:	lea    rax,[rsp+0x38]
   14002d480:	mov    rdx,QWORD PTR [r11+0x10]
   14002d484:	and    DWORD PTR [rbp-0x44],0x0
   14002d488:	mov    DWORD PTR [rsp+0x38],ecx
   14002d48c:	lea    rcx,[rbp-0x40]
   14002d490:	mov    QWORD PTR [rbp-0x50],rax
   14002d494:	mov    DWORD PTR [rbp-0x48],ebx
   14002d497:	call   0x14002e00c
   14002d49c:	mov    ecx,DWORD PTR [r11+0x18]
   14002d4a0:	lea    rax,[rsp+0x30]
   14002d4a5:	mov    rdx,QWORD PTR [r11+0x40]
   14002d4a9:	and    DWORD PTR [rbp-0x24],0x0
   14002d4ad:	mov    DWORD PTR [rsp+0x30],ecx
   14002d4b1:	lea    rcx,[rbp-0x20]
   14002d4b5:	mov    QWORD PTR [rbp-0x30],rax
   14002d4b9:	mov    DWORD PTR [rbp-0x28],ebx
   14002d4bc:	call   0x14002dfd8
   14002d4c1:	mov    ecx,DWORD PTR [r11+0x48]
   14002d4c5:	lea    rax,[rsp+0x34]
   14002d4ca:	mov    rdx,QWORD PTR [r11+0x50]
   14002d4ce:	and    DWORD PTR [rbp-0x4],0x0
   14002d4d2:	mov    DWORD PTR [rsp+0x34],ecx
   14002d4d6:	lea    rcx,[rbp+0x0]
   14002d4da:	mov    QWORD PTR [rbp-0x10],rax
   14002d4de:	mov    DWORD PTR [rbp-0x8],ebx
   14002d4e1:	call   0x14002dfd8
   14002d4e6:	mov    rdx,QWORD PTR [r11+0x58]
   14002d4ea:	lea    rcx,[rbp+0x10]
   14002d4ee:	call   0x14002e00c
   14002d4f3:	mov    ecx,DWORD PTR [r11+0x60]
   14002d4f7:	lea    rax,[rsp+0x3c]
   14002d4fc:	mov    rdx,QWORD PTR [r11+0x68]
   14002d500:	and    DWORD PTR [rbp+0x2c],0x0
   14002d504:	mov    DWORD PTR [rsp+0x3c],ecx
   14002d508:	lea    rcx,[rbp+0x30]
   14002d50c:	mov    QWORD PTR [rbp+0x20],rax
   14002d510:	mov    DWORD PTR [rbp+0x28],ebx
   14002d513:	call   0x14002dfd8
   14002d518:	mov    rdx,QWORD PTR [r11+0x70]
   14002d51c:	lea    rcx,[rbp+0x40]
   14002d520:	call   0x14002e00c
   14002d525:	lea    rax,[rsp+0x50]
   14002d52a:	xor    r9d,r9d
   14002d52d:	mov    QWORD PTR [rsp+0x28],rax
   14002d532:	lea    rdx,[rip+0x14f55]        # 0x14004248e
   14002d539:	xor    r8d,r8d
   14002d53c:	mov    DWORD PTR [rsp+0x20],0x10
   14002d544:	mov    rcx,r10
   14002d547:	call   0x140001264
   14002d54c:	mov    rcx,QWORD PTR [rbp+0x50]
   14002d550:	xor    rcx,rsp
   14002d553:	call   0x1400141d0
   14002d558:	mov    rbx,QWORD PTR [rsp+0x180]
   14002d560:	add    rsp,0x160
   14002d567:	pop    rbp
   14002d568:	ret    
   14002d569:	int3   
   14002d56a:	int3   
   14002d56b:	int3   
   14002d56c:	int3   
   14002d56d:	int3   
   14002d56e:	int3   
   14002d56f:	int3   
   14002d570:	mov    QWORD PTR [rsp+0x18],rdi
   14002d575:	push   rbp
   14002d576:	lea    rbp,[rsp-0x90]
   14002d57e:	sub    rsp,0x190
   14002d585:	mov    rax,QWORD PTR [rip+0x20a84]        # 0x14004e010
   14002d58c:	xor    rax,rsp
   14002d58f:	mov    QWORD PTR [rbp+0x80],rax
   14002d596:	mov    r11,QWORD PTR [rcx+0x8]
   14002d59a:	mov    r10,rdx
   14002d59d:	cmp    DWORD PTR [r11],0x5
   14002d5a1:	jbe    0x14002d700
   14002d5a7:	mov    eax,DWORD PTR [rdx+0x4]
   14002d5aa:	lea    rcx,[rbp-0x80]
   14002d5ae:	mov    rdx,QWORD PTR [rdx+0x30]
   14002d5b2:	mov    edi,0x4
   14002d5b7:	and    DWORD PTR [rsp+0x7c],0x0
   14002d5bc:	mov    DWORD PTR [rsp+0x40],eax
   14002d5c0:	lea    rax,[rsp+0x40]
   14002d5c5:	mov    QWORD PTR [rsp+0x70],rax
   14002d5ca:	mov    DWORD PTR [rsp+0x78],edi
   14002d5ce:	call   0x14002dfd8
   14002d5d3:	mov    rdx,QWORD PTR [r10+0x78]
   14002d5d7:	lea    rcx,[r10+0x38]
   14002d5db:	and    DWORD PTR [rbp-0x64],0x0
   14002d5df:	mov    QWORD PTR [rbp-0x70],rcx
   14002d5e3:	lea    rcx,[rbp-0x60]
   14002d5e7:	mov    DWORD PTR [rbp-0x68],edi
   14002d5ea:	call   0x14002dfd8
   14002d5ef:	mov    ecx,DWORD PTR [r10]
   14002d5f2:	lea    rax,[rsp+0x38]
   14002d5f7:	mov    rdx,QWORD PTR [r10+0x10]
   14002d5fb:	and    DWORD PTR [rbp-0x44],0x0
   14002d5ff:	mov    DWORD PTR [rsp+0x38],ecx
   14002d603:	lea    rcx,[rbp-0x40]
   14002d607:	mov    QWORD PTR [rbp-0x50],rax
   14002d60b:	mov    DWORD PTR [rbp-0x48],edi
   14002d60e:	call   0x14002e00c
   14002d613:	mov    ecx,DWORD PTR [r10+0x18]
   14002d617:	lea    rax,[rsp+0x48]
   14002d61c:	mov    rdx,QWORD PTR [r10+0x40]
   14002d620:	and    DWORD PTR [rbp-0x24],0x0
   14002d624:	mov    DWORD PTR [rsp+0x48],ecx
   14002d628:	lea    rcx,[rbp-0x20]
   14002d62c:	mov    QWORD PTR [rbp-0x30],rax
   14002d630:	mov    DWORD PTR [rbp-0x28],edi
   14002d633:	call   0x14002dfd8
   14002d638:	mov    ecx,DWORD PTR [r10+0x48]
   14002d63c:	lea    rax,[rsp+0x30]
   14002d641:	mov    rdx,QWORD PTR [r10+0x50]
   14002d645:	and    DWORD PTR [rbp-0x4],0x0
   14002d649:	mov    DWORD PTR [rsp+0x30],ecx
   14002d64d:	lea    rcx,[rbp+0x0]
   14002d651:	mov    QWORD PTR [rbp-0x10],rax
   14002d655:	mov    DWORD PTR [rbp-0x8],edi
   14002d658:	call   0x14002dfd8
   14002d65d:	mov    rdx,QWORD PTR [r10+0x58]
   14002d661:	lea    rcx,[rbp+0x10]
   14002d665:	call   0x14002e00c
   14002d66a:	mov    ecx,DWORD PTR [r10+0x60]
   14002d66e:	lea    rax,[rsp+0x34]
   14002d673:	mov    rdx,QWORD PTR [r10+0x68]
   14002d677:	and    DWORD PTR [rbp+0x2c],0x0
   14002d67b:	mov    DWORD PTR [rsp+0x34],ecx
   14002d67f:	lea    rcx,[rbp+0x30]
   14002d683:	mov    QWORD PTR [rbp+0x20],rax
   14002d687:	mov    DWORD PTR [rbp+0x28],edi
   14002d68a:	call   0x14002dfd8
   14002d68f:	mov    rdx,QWORD PTR [r10+0x70]
   14002d693:	lea    rcx,[rbp+0x40]
   14002d697:	call   0x14002e00c
   14002d69c:	mov    ecx,DWORD PTR [r10+0x8]
   14002d6a0:	lea    rax,[rsp+0x3c]
   14002d6a5:	and    DWORD PTR [rbp+0x5c],0x0
   14002d6a9:	and    DWORD PTR [rbp+0x6c],0x0
   14002d6ad:	mov    rdx,QWORD PTR [r10+0x28]
   14002d6b1:	mov    QWORD PTR [rbp+0x50],rax
   14002d6b5:	mov    eax,DWORD PTR [r10+0x3c]
   14002d6b9:	mov    DWORD PTR [rsp+0x44],eax
   14002d6bd:	lea    rax,[rsp+0x44]
   14002d6c2:	mov    DWORD PTR [rsp+0x3c],ecx
   14002d6c6:	lea    rcx,[rbp+0x70]
   14002d6ca:	mov    QWORD PTR [rbp+0x60],rax
   14002d6ce:	mov    DWORD PTR [rbp+0x58],edi
   14002d6d1:	mov    DWORD PTR [rbp+0x68],edi
   14002d6d4:	call   0x14002dfd8
   14002d6d9:	lea    rax,[rsp+0x50]
   14002d6de:	xor    r9d,r9d
   14002d6e1:	mov    QWORD PTR [rsp+0x28],rax
   14002d6e6:	lea    rdx,[rip+0x14c7b]        # 0x140042368
   14002d6ed:	xor    r8d,r8d
   14002d6f0:	mov    DWORD PTR [rsp+0x20],0x13
   14002d6f8:	mov    rcx,r11
   14002d6fb:	call   0x140001264
   14002d700:	mov    rcx,QWORD PTR [rbp+0x80]
   14002d707:	xor    rcx,rsp
   14002d70a:	call   0x1400141d0
   14002d70f:	mov    rdi,QWORD PTR [rsp+0x1b0]
   14002d717:	add    rsp,0x190
   14002d71e:	pop    rbp
   14002d71f:	ret    
   14002d720:	int3   
   14002d721:	int3   
   14002d722:	int3   
   14002d723:	int3   
   14002d724:	int3   
   14002d725:	int3   
   14002d726:	int3   
   14002d727:	int3   
   14002d728:	mov    rax,rcx
   14002d72b:	test   rcx,rcx
   14002d72e:	jne    0x14002d734
   14002d730:	lea    eax,[rcx+0x1]
   14002d733:	ret    
   14002d734:	or     rcx,0xffffffffffffffff
   14002d738:	inc    rcx
   14002d73b:	cmp    BYTE PTR [rax+rcx*1],0x0
   14002d73f:	jne    0x14002d738
   14002d741:	mov    eax,0x1
   14002d746:	add    rax,rcx
   14002d749:	ret    
   14002d74a:	int3   
   14002d74b:	int3   
   14002d74c:	int3   
   14002d74d:	int3   
   14002d74e:	int3   
   14002d74f:	int3   
   14002d750:	xor    edx,edx
   14002d752:	test   rcx,rcx
   14002d755:	jne    0x14002d75b
   14002d757:	lea    eax,[rdx+0x2]
   14002d75a:	ret    
   14002d75b:	or     rax,0xffffffffffffffff
   14002d75f:	inc    rax
   14002d762:	cmp    WORD PTR [rcx+rax*2],dx
   14002d766:	jne    0x14002d75f
   14002d768:	lea    rax,[rax*2+0x2]
   14002d770:	ret    
   14002d771:	int3   
   14002d772:	int3   
   14002d773:	int3   
   14002d774:	int3   
   14002d775:	int3   
   14002d776:	int3   
   14002d777:	int3   
   14002d778:	int3   
   14002d779:	int3   
   14002d77a:	int3   
   14002d77b:	int3   
   14002d77c:	int3   
   14002d77d:	int3   
   14002d77e:	int3   
   14002d77f:	int3   
   14002d780:	mov    QWORD PTR [rsp+0x8],rbx
   14002d785:	mov    QWORD PTR [rsp+0x10],rsi
   14002d78a:	push   rdi
   14002d78b:	sub    rsp,0x20
   14002d78f:	mov    rdi,QWORD PTR [rip+0x21b22]        # 0x14004f2b8
   14002d796:	xor    ebx,ebx
   14002d798:	mov    esi,ecx
   14002d79a:	test   rdi,rdi
   14002d79d:	jne    0x14002d7e6
   14002d79f:	mov    rax,QWORD PTR [rip+0x21b1a]        # 0x14004f2c0
   14002d7a6:	test   rax,rax
   14002d7a9:	jne    0x14002d7c7
   14002d7ab:	xor    edx,edx
   14002d7ad:	lea    rcx,[rip+0x1133c]        # 0x14003eaf0
   14002d7b4:	mov    r8d,0x800
   14002d7ba:	call   QWORD PTR [rip+0xfa78]        # 0x14003d238
   14002d7c0:	mov    QWORD PTR [rip+0x21af9],rax        # 0x14004f2c0
   14002d7c7:	lea    rdx,[rip+0x15a7a]        # 0x140043248
   14002d7ce:	mov    rcx,rax
   14002d7d1:	call   QWORD PTR [rip+0xfa51]        # 0x14003d228
   14002d7d7:	mov    QWORD PTR [rip+0x21ada],rax        # 0x14004f2b8
   14002d7de:	mov    rdi,rax
   14002d7e1:	test   rax,rax
   14002d7e4:	je     0x14002d7f5
   14002d7e6:	mov    rcx,rdi
   14002d7e9:	call   QWORD PTR [rip+0xff39]        # 0x14003d728
   14002d7ef:	mov    ecx,esi
   14002d7f1:	call   rdi
   14002d7f3:	mov    ebx,eax
   14002d7f5:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d7fa:	mov    eax,ebx
   14002d7fc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d801:	add    rsp,0x20
   14002d805:	pop    rdi
   14002d806:	ret    
   14002d807:	int3   
   14002d808:	int3   
   14002d809:	int3   
   14002d80a:	int3   
   14002d80b:	int3   
   14002d80c:	int3   
   14002d80d:	int3   
   14002d80e:	int3   
   14002d80f:	int3   
   14002d810:	rex push rbx
   14002d812:	sub    rsp,0x20
   14002d816:	and    QWORD PTR [rip+0x2134a],0x0        # 0x14004eb68
   14002d81e:	xor    edx,edx
   14002d820:	xor    ecx,ecx
   14002d822:	mov    r8d,0x2000000
   14002d828:	call   QWORD PTR [rip+0xf81a]        # 0x14003d048
   14002d82e:	mov    rbx,rax
   14002d831:	test   rax,rax
   14002d834:	je     0x14002d8bb
   14002d83a:	lea    rdx,[rip+0x21a47]        # 0x14004f288
   14002d841:	mov    rcx,rax
   14002d844:	call   0x14002b830
   14002d849:	test   al,al
   14002d84b:	je     0x14002d8bb
   14002d84d:	mov    rcx,QWORD PTR [rip+0x21a34]        # 0x14004f288
   14002d854:	test   rcx,rcx
   14002d857:	je     0x14002d8bb
   14002d859:	lea    rdx,[rip+0x10670]        # 0x14003ded0
   14002d860:	call   QWORD PTR [rip+0xfdd2]        # 0x14003d638
   14002d866:	test   eax,eax
   14002d868:	je     0x14002d8bb
   14002d86a:	mov    rcx,QWORD PTR [rip+0x21a17]        # 0x14004f288
   14002d871:	lea    rdx,[rip+0x15a10]        # 0x140043288
   14002d878:	call   QWORD PTR [rip+0xfdba]        # 0x14003d638
   14002d87e:	test   eax,eax
   14002d880:	je     0x14002d8bb
   14002d882:	mov    rcx,QWORD PTR [rip+0x219ff]        # 0x14004f288
   14002d889:	lea    rdx,[rip+0x15a10]        # 0x1400432a0
   14002d890:	call   QWORD PTR [rip+0xfda2]        # 0x14003d638
   14002d896:	test   eax,eax
   14002d898:	je     0x14002d8bb
   14002d89a:	mov    rdx,QWORD PTR [rip+0x219e7]        # 0x14004f288
   14002d8a1:	call   0x140004c10
   14002d8a6:	mov    QWORD PTR [rip+0x212bb],rax        # 0x14004eb68
   14002d8ad:	test   rax,rax
   14002d8b0:	jne    0x14002d8c7
   14002d8b2:	mov    rcx,rbx
   14002d8b5:	call   QWORD PTR [rip+0xf795]        # 0x14003d050
   14002d8bb:	cmp    QWORD PTR [rip+0x212a5],0x0        # 0x14004eb68
   14002d8c3:	jne    0x14002d8c7
   14002d8c5:	xor    ebx,ebx
   14002d8c7:	mov    rax,rbx
   14002d8ca:	add    rsp,0x20
   14002d8ce:	pop    rbx
   14002d8cf:	ret    
   14002d8d0:	int3   
   14002d8d1:	int3   
   14002d8d2:	int3   
   14002d8d3:	int3   
   14002d8d4:	int3   
   14002d8d5:	int3   
   14002d8d6:	int3   
   14002d8d7:	int3   
   14002d8d8:	mov    rax,rsp
   14002d8db:	mov    QWORD PTR [rax+0x8],rbx
   14002d8df:	mov    QWORD PTR [rax+0x10],rbp
   14002d8e3:	mov    QWORD PTR [rax+0x18],rsi
   14002d8e7:	mov    QWORD PTR [rax+0x20],rdi
   14002d8eb:	push   r14
   14002d8ed:	sub    rsp,0x20
   14002d8f1:	movups xmm0,XMMWORD PTR [rdx]
   14002d8f4:	mov    rbp,rcx
   14002d8f7:	mov    r14,rdx
   14002d8fa:	movups XMMWORD PTR [rcx],xmm0
   14002d8fd:	movups xmm1,XMMWORD PTR [rdx+0x10]
   14002d901:	movups XMMWORD PTR [rcx+0x10],xmm1
   14002d905:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14002d909:	movups XMMWORD PTR [rcx+0x20],xmm0
   14002d90d:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14002d911:	movups XMMWORD PTR [rcx+0x30],xmm1
   14002d915:	movups xmm0,XMMWORD PTR [rdx+0x40]
   14002d919:	movups XMMWORD PTR [rcx+0x40],xmm0
   14002d91d:	movups xmm1,XMMWORD PTR [rdx+0x50]
   14002d921:	movups XMMWORD PTR [rcx+0x50],xmm1
   14002d925:	movups xmm0,XMMWORD PTR [rdx+0x60]
   14002d929:	movups XMMWORD PTR [rcx+0x60],xmm0
   14002d92d:	mov    ecx,0x80
   14002d932:	movups xmm0,XMMWORD PTR [rdx+0x70]
   14002d936:	movups XMMWORD PTR [rbp+rcx*1-0x10],xmm0
   14002d93b:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   14002d93f:	movups XMMWORD PTR [rbp+rcx*1+0x0],xmm1
   14002d944:	mov    rcx,QWORD PTR [rdx+0x70]
   14002d948:	call   0x14002d750
   14002d94d:	mov    rcx,QWORD PTR [r14+0x58]
   14002d951:	mov    rdi,rax
   14002d954:	call   0x14002d750
   14002d959:	mov    rcx,QWORD PTR [r14+0x10]
   14002d95d:	add    rdi,rax
   14002d960:	call   0x14002d750
   14002d965:	mov    rcx,QWORD PTR [r14+0x68]
   14002d969:	add    rdi,rax
   14002d96c:	call   0x14002d728
   14002d971:	mov    rcx,QWORD PTR [r14+0x50]
   14002d975:	add    rdi,rax
   14002d978:	call   0x14002d728
   14002d97d:	mov    rcx,QWORD PTR [r14+0x40]
   14002d981:	add    rdi,rax
   14002d984:	call   0x14002d728
   14002d989:	mov    rcx,QWORD PTR [r14+0x30]
   14002d98d:	add    rdi,rax
   14002d990:	call   0x14002d728
   14002d995:	mov    rcx,QWORD PTR [r14+0x28]
   14002d999:	add    rdi,rax
   14002d99c:	call   0x14002d728
   14002d9a1:	mov    rcx,QWORD PTR [r14+0x20]
   14002d9a5:	add    rdi,rax
   14002d9a8:	call   0x14002d728
   14002d9ad:	mov    rcx,QWORD PTR [r14+0x78]
   14002d9b1:	add    rdi,rax
   14002d9b4:	call   0x14002d728
   14002d9b9:	add    rdi,rax
   14002d9bc:	lea    rsi,[rbp+0x90]
   14002d9c3:	mov    rax,QWORD PTR [rsi]
   14002d9c6:	xor    ebx,ebx
   14002d9c8:	test   rax,rax
   14002d9cb:	je     0x14002d9db
   14002d9cd:	cmp    DWORD PTR [rax],0x1
   14002d9d0:	jne    0x14002d9db
   14002d9d2:	cmp    QWORD PTR [rbp+0x98],rdi
   14002d9d9:	jae    0x14002da11
   14002d9db:	mov    rcx,rsi
   14002d9de:	call   0x14000f528
   14002d9e3:	test   rdi,rdi
   14002d9e6:	jne    0x14002d9f2
   14002d9e8:	mov    rcx,rsi
   14002d9eb:	call   0x14000f528
   14002d9f0:	jmp    0x14002da11
   14002d9f2:	lea    rcx,[rdi+0x4]
   14002d9f6:	call   QWORD PTR [rip+0xfc54]        # 0x14003d650
   14002d9fc:	test   rax,rax
   14002d9ff:	je     0x14002da11
   14002da01:	mov    r8,rdi
   14002da04:	mov    DWORD PTR [rax],ebx
   14002da06:	mov    rdx,rax
   14002da09:	mov    rcx,rsi
   14002da0c:	call   0x14002de00
   14002da11:	mov    rcx,QWORD PTR [rsi]
   14002da14:	mov    rax,QWORD PTR [rsi+0x8]
   14002da18:	test   rcx,rcx
   14002da1b:	jne    0x14002da22
   14002da1d:	mov    rcx,rbx
   14002da20:	jmp    0x14002da2c
   14002da22:	add    rcx,0x4
   14002da26:	je     0x14002da2c
   14002da28:	lea    rbx,[rax+rcx*1]
   14002da2c:	mov    r8,QWORD PTR [r14+0x10]
   14002da30:	lea    r9,[rbp+0x10]
   14002da34:	mov    rdx,rbx
   14002da37:	call   0x14002a488
   14002da3c:	mov    r8,QWORD PTR [r14+0x20]
   14002da40:	lea    r9,[rbp+0x20]
   14002da44:	mov    rdx,rbx
   14002da47:	mov    rcx,rax
   14002da4a:	call   0x14002a3f8
   14002da4f:	mov    r8,QWORD PTR [r14+0x28]
   14002da53:	lea    r9,[rbp+0x28]
   14002da57:	mov    rdx,rbx
   14002da5a:	mov    rcx,rax
   14002da5d:	call   0x14002a3f8
   14002da62:	mov    r8,QWORD PTR [r14+0x30]
   14002da66:	lea    r9,[rbp+0x30]
   14002da6a:	mov    rdx,rbx
   14002da6d:	mov    rcx,rax
   14002da70:	call   0x14002a3f8
   14002da75:	mov    r8,QWORD PTR [r14+0x40]
   14002da79:	lea    r9,[rbp+0x40]
   14002da7d:	mov    rdx,rbx
   14002da80:	mov    rcx,rax
   14002da83:	call   0x14002a3f8
   14002da88:	mov    r8,QWORD PTR [r14+0x78]
   14002da8c:	lea    r9,[rbp+0x78]
   14002da90:	mov    rdx,rbx
   14002da93:	mov    rcx,rax
   14002da96:	call   0x14002a3f8
   14002da9b:	mov    r8,QWORD PTR [r14+0x68]
   14002da9f:	lea    r9,[rbp+0x68]
   14002daa3:	mov    rdx,rbx
   14002daa6:	mov    rcx,rax
   14002daa9:	call   0x14002a3f8
   14002daae:	mov    r8,QWORD PTR [r14+0x70]
   14002dab2:	lea    r9,[rbp+0x70]
   14002dab6:	mov    rdx,rbx
   14002dab9:	mov    rcx,rax
   14002dabc:	call   0x14002a488
   14002dac1:	mov    r8,QWORD PTR [r14+0x50]
   14002dac5:	lea    r9,[rbp+0x50]
   14002dac9:	mov    rdx,rbx
   14002dacc:	mov    rcx,rax
   14002dacf:	call   0x14002a3f8
   14002dad4:	mov    r8,QWORD PTR [r14+0x58]
   14002dad8:	lea    r9,[rbp+0x58]
   14002dadc:	mov    rdx,rbx
   14002dadf:	mov    rcx,rax
   14002dae2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dae7:	mov    rbp,QWORD PTR [rsp+0x38]
   14002daec:	mov    rsi,QWORD PTR [rsp+0x40]
   14002daf1:	mov    rdi,QWORD PTR [rsp+0x48]
   14002daf6:	add    rsp,0x20
   14002dafa:	pop    r14
   14002dafc:	jmp    0x14002a488
   14002db01:	int3   
   14002db02:	int3   
   14002db03:	int3   
   14002db04:	int3   
   14002db05:	int3   
   14002db06:	int3   
   14002db07:	int3   
   14002db08:	sub    rsp,0x28
   14002db0c:	xor    r8d,r8d
   14002db0f:	test   edx,edx
   14002db11:	js     0x14002db2e
   14002db13:	mov    rax,QWORD PTR [rcx]
   14002db16:	cmp    edx,DWORD PTR [rax-0xc]
   14002db19:	jg     0x14002db2e
   14002db1b:	mov    DWORD PTR [rax-0x10],edx
   14002db1e:	mov    rax,QWORD PTR [rcx]
   14002db21:	movsxd rdx,edx
   14002db24:	mov    WORD PTR [rax+rdx*2],r8w
   14002db29:	add    rsp,0x28
   14002db2d:	ret    
   14002db2e:	mov    ecx,0x80070057
   14002db33:	call   0x1400152fc
   14002db38:	int3   
   14002db39:	int3   
   14002db3a:	int3   
   14002db3b:	int3   
   14002db3c:	int3   
   14002db3d:	int3   
   14002db3e:	int3   
   14002db3f:	int3   
   14002db40:	mov    rax,rsp
   14002db43:	mov    QWORD PTR [rax+0x10],rbx
   14002db47:	mov    QWORD PTR [rax+0x18],rsi
   14002db4b:	mov    QWORD PTR [rax+0x20],rdi
   14002db4f:	push   rbp
   14002db50:	lea    rbp,[rax-0xa8]
   14002db57:	sub    rsp,0x1a0
   14002db5e:	mov    rax,QWORD PTR [rip+0x204ab]        # 0x14004e010
   14002db65:	xor    rax,rsp
   14002db68:	mov    QWORD PTR [rbp+0x90],rax
   14002db6f:	mov    rdi,QWORD PTR [rcx+0x30]
   14002db73:	mov    rbx,rcx
   14002db76:	mov    eax,DWORD PTR [rdi+0x54]
   14002db79:	test   eax,eax
   14002db7b:	jns    0x14002db88
   14002db7d:	cmp    eax,DWORD PTR [rdi+0x5c]
   14002db80:	jne    0x14002db88
   14002db82:	add    rdi,0x58
   14002db86:	jmp    0x14002db8a
   14002db88:	xor    edi,edi
   14002db8a:	call   0x14000e9d4
   14002db8f:	test   rdi,rdi
   14002db92:	je     0x14002dcd2
   14002db98:	mov    rax,QWORD PTR [rbx+0x30]
   14002db9c:	mov    r10,QWORD PTR [rax+0x28]
   14002dba0:	cmp    DWORD PTR [r10],0x5
   14002dba4:	jbe    0x14002dd57
   14002dbaa:	movabs rdx,0x200000000000
   14002dbb4:	mov    rcx,r10
   14002dbb7:	call   0x14000130c
   14002dbbc:	test   al,al
   14002dbbe:	je     0x14002dd57
   14002dbc4:	mov    eax,DWORD PTR [rdi+0x4]
   14002dbc7:	lea    rcx,[rbp-0x40]
   14002dbcb:	mov    rdx,QWORD PTR [rdi+0x30]
   14002dbcf:	mov    esi,0x4
   14002dbd4:	and    DWORD PTR [rbp-0x44],0x0
   14002dbd8:	mov    DWORD PTR [rsp+0x38],eax
   14002dbdc:	lea    rax,[rsp+0x38]
   14002dbe1:	mov    QWORD PTR [rbp-0x50],rax
   14002dbe5:	mov    DWORD PTR [rbp-0x48],esi
   14002dbe8:	call   0x14002dfd8
   14002dbed:	mov    rdx,QWORD PTR [rdi+0x78]
   14002dbf1:	lea    rcx,[rdi+0x38]
   14002dbf5:	and    DWORD PTR [rbp-0x24],0x0
   14002dbf9:	mov    QWORD PTR [rbp-0x30],rcx
   14002dbfd:	lea    rcx,[rbp-0x20]
   14002dc01:	mov    DWORD PTR [rbp-0x28],esi
   14002dc04:	call   0x14002dfd8
   14002dc09:	mov    ecx,DWORD PTR [rdi]
   14002dc0b:	lea    rax,[rsp+0x40]
   14002dc10:	mov    rdx,QWORD PTR [rdi+0x10]
   14002dc14:	and    DWORD PTR [rbp-0x4],0x0
   14002dc18:	mov    DWORD PTR [rsp+0x40],ecx
   14002dc1c:	lea    rcx,[rbp+0x0]
   14002dc20:	mov    QWORD PTR [rbp-0x10],rax
   14002dc24:	mov    DWORD PTR [rbp-0x8],esi
   14002dc27:	call   0x14002e00c
   14002dc2c:	mov    ecx,DWORD PTR [rdi+0x18]
   14002dc2f:	lea    rax,[rsp+0x3c]
   14002dc34:	mov    rdx,QWORD PTR [rdi+0x40]
   14002dc38:	and    DWORD PTR [rbp+0x1c],0x0
   14002dc3c:	mov    DWORD PTR [rsp+0x3c],ecx
   14002dc40:	lea    rcx,[rbp+0x20]
   14002dc44:	mov    QWORD PTR [rbp+0x10],rax
   14002dc48:	mov    DWORD PTR [rbp+0x18],esi
   14002dc4b:	call   0x14002dfd8
   14002dc50:	mov    ecx,DWORD PTR [rdi+0x48]
   14002dc53:	lea    rax,[rsp+0x30]
   14002dc58:	mov    rdx,QWORD PTR [rdi+0x50]
   14002dc5c:	and    DWORD PTR [rbp+0x3c],0x0
   14002dc60:	mov    DWORD PTR [rsp+0x30],ecx
   14002dc64:	lea    rcx,[rbp+0x40]
   14002dc68:	mov    QWORD PTR [rbp+0x30],rax
   14002dc6c:	mov    DWORD PTR [rbp+0x38],esi
   14002dc6f:	call   0x14002dfd8
   14002dc74:	mov    rdx,QWORD PTR [rdi+0x58]
   14002dc78:	lea    rcx,[rbp+0x50]
   14002dc7c:	call   0x14002e00c
   14002dc81:	mov    ecx,DWORD PTR [rdi+0x60]
   14002dc84:	lea    rax,[rsp+0x34]
   14002dc89:	mov    rdx,QWORD PTR [rdi+0x68]
   14002dc8d:	and    DWORD PTR [rbp+0x6c],0x0
   14002dc91:	mov    DWORD PTR [rsp+0x34],ecx
   14002dc95:	lea    rcx,[rbp+0x70]
   14002dc99:	mov    QWORD PTR [rbp+0x60],rax
   14002dc9d:	mov    DWORD PTR [rbp+0x68],esi
   14002dca0:	call   0x14002dfd8
   14002dca5:	mov    rdx,QWORD PTR [rdi+0x70]
   14002dca9:	lea    rcx,[rbp+0x80]
   14002dcb0:	call   0x14002e00c
   14002dcb5:	lea    rax,[rbp-0x70]
   14002dcb9:	mov    rcx,r10
   14002dcbc:	mov    QWORD PTR [rsp+0x28],rax
   14002dcc1:	lea    rdx,[rip+0x14404]        # 0x1400420cc
   14002dcc8:	mov    DWORD PTR [rsp+0x20],0x10
   14002dcd0:	jmp    0x14002dd47
   14002dcd2:	mov    r9,QWORD PTR [rbx+0x30]
   14002dcd6:	mov    rdi,QWORD PTR [r9+0x28]
   14002dcda:	cmp    DWORD PTR [rdi],0x5
   14002dcdd:	jbe    0x14002dd57
   14002dcdf:	movabs rdx,0x200000000000
   14002dce9:	mov    rcx,rdi
   14002dcec:	call   0x14000130c
   14002dcf1:	test   al,al
   14002dcf3:	je     0x14002dd57
   14002dcf5:	mov    eax,DWORD PTR [r9+0x54]
   14002dcf9:	mov    esi,0x4
   14002dcfe:	and    DWORD PTR [rsp+0x7c],0x0
   14002dd03:	mov    DWORD PTR [rsp+0x34],eax
   14002dd07:	lea    rax,[rsp+0x34]
   14002dd0c:	mov    QWORD PTR [rsp+0x70],rax
   14002dd11:	mov    DWORD PTR [rsp+0x78],esi
   14002dd15:	call   QWORD PTR [rip+0xf5dd]        # 0x14003d2f8
   14002dd1b:	and    DWORD PTR [rbp-0x74],0x0
   14002dd1f:	lea    rdx,[rip+0x14355]        # 0x14004207b
   14002dd26:	mov    DWORD PTR [rsp+0x30],eax
   14002dd2a:	mov    rcx,rdi
   14002dd2d:	lea    rax,[rsp+0x30]
   14002dd32:	mov    DWORD PTR [rbp-0x78],esi
   14002dd35:	mov    QWORD PTR [rbp-0x80],rax
   14002dd39:	lea    rax,[rsp+0x50]
   14002dd3e:	mov    QWORD PTR [rsp+0x28],rax
   14002dd43:	mov    DWORD PTR [rsp+0x20],esi
   14002dd47:	mov    r8,QWORD PTR [rbx+0x30]
   14002dd4b:	xor    r9d,r9d
   14002dd4e:	add    r8,0x8
   14002dd52:	call   0x140001264
   14002dd57:	mov    rcx,rbx
   14002dd5a:	call   0x14000eb28
   14002dd5f:	mov    rcx,QWORD PTR [rbp+0x90]
   14002dd66:	xor    rcx,rsp
   14002dd69:	call   0x1400141d0
   14002dd6e:	lea    r11,[rsp+0x1a0]
   14002dd76:	mov    rbx,QWORD PTR [r11+0x18]
   14002dd7a:	mov    rsi,QWORD PTR [r11+0x20]
   14002dd7e:	mov    rdi,QWORD PTR [r11+0x28]
   14002dd82:	mov    rsp,r11
   14002dd85:	pop    rbp
   14002dd86:	ret    
   14002dd87:	int3   
   14002dd88:	int3   
   14002dd89:	int3   
   14002dd8a:	int3   
   14002dd8b:	int3   
   14002dd8c:	int3   
   14002dd8d:	int3   
   14002dd8e:	int3   
   14002dd8f:	int3   
   14002dd90:	sub    rsp,0x28
   14002dd94:	mov    ecx,0x8007000e
   14002dd99:	call   0x1400152fc
   14002dd9e:	int3   
   14002dd9f:	int3   
   14002dda0:	int3   
   14002dda1:	int3   
   14002dda2:	int3   
   14002dda3:	int3   
   14002dda4:	int3   
   14002dda5:	int3   
   14002dda6:	int3   
   14002dda7:	int3   
   14002dda8:	int3   
   14002dda9:	int3   
   14002ddaa:	int3   
   14002ddab:	int3   
   14002ddac:	int3   
   14002ddad:	int3   
   14002ddae:	int3   
   14002ddaf:	int3   
   14002ddb0:	mov    eax,DWORD PTR [rip+0x20762]        # 0x14004e518
   14002ddb6:	cmp    eax,edx
   14002ddb8:	mov    DWORD PTR [rip+0x2075a],edx        # 0x14004e518
   14002ddbe:	sete   al
   14002ddc1:	ret    
   14002ddc2:	int3   
   14002ddc3:	int3   
   14002ddc4:	int3   
   14002ddc5:	int3   
   14002ddc6:	int3   
   14002ddc7:	int3   
   14002ddc8:	sub    rsp,0x48
   14002ddcc:	mov    rax,QWORD PTR [rsp+0x48]
   14002ddd1:	xor    r9d,r9d
   14002ddd4:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   14002dddc:	mov    DWORD PTR [rsp+0x30],0x4
   14002dde4:	mov    QWORD PTR [rsp+0x28],rax
   14002dde9:	and    QWORD PTR [rsp+0x20],0x0
   14002ddef:	call   0x14002d3a0
   14002ddf4:	add    rsp,0x48
   14002ddf8:	ret    
   14002ddf9:	int3   
   14002ddfa:	int3   
   14002ddfb:	int3   
   14002ddfc:	int3   
   14002ddfd:	int3   
   14002ddfe:	int3   
   14002ddff:	int3   
   14002de00:	mov    QWORD PTR [rsp+0x8],rbx
   14002de05:	mov    QWORD PTR [rsp+0x10],rsi
   14002de0a:	push   rdi
   14002de0b:	sub    rsp,0x20
   14002de0f:	mov    rsi,r8
   14002de12:	mov    rbx,rdx
   14002de15:	mov    rdi,rcx
   14002de18:	call   0x14000f528
   14002de1d:	test   rbx,rbx
   14002de20:	je     0x14002de2c
   14002de22:	mov    QWORD PTR [rdi],rbx
   14002de25:	mov    QWORD PTR [rdi+0x8],rsi
   14002de29:	lock inc DWORD PTR [rbx]
   14002de2c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002de31:	mov    rsi,QWORD PTR [rsp+0x38]
   14002de36:	add    rsp,0x20
   14002de3a:	pop    rdi
   14002de3b:	ret    
   14002de3c:	int3   
   14002de3d:	int3   
   14002de3e:	int3   
   14002de3f:	int3   
   14002de40:	int3   
   14002de41:	int3   
   14002de42:	int3   
   14002de43:	int3   
   14002de44:	rex push rbx
   14002de46:	sub    rsp,0x20
   14002de4a:	mov    rbx,rdx
   14002de4d:	mov    rdx,rcx
   14002de50:	mov    rcx,rbx
   14002de53:	call   0x14002ad48
   14002de58:	mov    rax,rbx
   14002de5b:	add    rsp,0x20
   14002de5f:	pop    rbx
   14002de60:	ret    
   14002de61:	int3   
   14002de62:	int3   
   14002de63:	int3   
   14002de64:	int3   
   14002de65:	int3   
   14002de66:	int3   
   14002de67:	int3   
   14002de68:	mov    eax,DWORD PTR [rdx]
   14002de6a:	cmp    DWORD PTR [rcx],eax
   14002de6c:	jne    0x14002de8c
   14002de6e:	mov    eax,DWORD PTR [rdx+0x4]
   14002de71:	cmp    DWORD PTR [rcx+0x4],eax
   14002de74:	jne    0x14002de8c
   14002de76:	mov    eax,DWORD PTR [rdx+0x8]
   14002de79:	cmp    DWORD PTR [rcx+0x8],eax
   14002de7c:	jne    0x14002de8c
   14002de7e:	mov    eax,DWORD PTR [rdx+0xc]
   14002de81:	cmp    DWORD PTR [rcx+0xc],eax
   14002de84:	jne    0x14002de8c
   14002de86:	mov    eax,0x1
   14002de8b:	ret    
   14002de8c:	xor    eax,eax
   14002de8e:	ret    
   14002de8f:	int3   
   14002de90:	int3   
   14002de91:	int3   
   14002de92:	int3   
   14002de93:	int3   
   14002de94:	int3   
   14002de95:	int3   
   14002de96:	int3   
   14002de97:	int3   
   14002de98:	int3   
   14002de99:	int3   
   14002de9a:	int3   
   14002de9b:	int3   
   14002de9c:	int3   
   14002de9d:	int3   
   14002de9e:	int3   
   14002de9f:	int3   
   14002dea0:	mov    QWORD PTR [rsp+0x8],rbx
   14002dea5:	push   rdi
   14002dea6:	sub    rsp,0x20
   14002deaa:	mov    r10,QWORD PTR [rsp+0x60]
   14002deaf:	xor    edi,edi
   14002deb1:	test   r10,r10
   14002deb4:	je     0x14002dfa8
   14002deba:	test   edx,edx
   14002debc:	je     0x14002df67
   14002dec2:	sub    edx,0x1
   14002dec5:	jne    0x14002dfa8
   14002decb:	mov    r11d,edi
   14002dece:	mov    rax,QWORD PTR [rsp+0x50]
   14002ded3:	mov    QWORD PTR [r10+0x10],r9
   14002ded7:	lea    r9d,[rdi+0x1]
   14002dedb:	mov    DWORD PTR [r10+0x24],r9d
   14002dedf:	mov    BYTE PTR [r10+0x28],r8b
   14002dee3:	mov    QWORD PTR [r10+0x18],rax
   14002dee7:	cmp    di,WORD PTR [r10+0x2a]
   14002deec:	jae    0x14002dfa8
   14002def2:	mov    rax,QWORD PTR [r10+0x38]
   14002def6:	mov    dl,BYTE PTR [r10+0x28]
   14002defa:	mov    ebx,r11d
   14002defd:	mov    rcx,QWORD PTR [rax+rbx*8]
   14002df01:	mov    rax,QWORD PTR [r10+0x40]
   14002df05:	cmp    BYTE PTR [rbx+rax*1],dl
   14002df08:	jbe    0x14002df0e
   14002df0a:	test   dl,dl
   14002df0c:	jne    0x14002df26
   14002df0e:	test   rcx,rcx
   14002df11:	je     0x14002df41
   14002df13:	test   QWORD PTR [r10+0x10],rcx
   14002df17:	je     0x14002df26
   14002df19:	mov    rax,QWORD PTR [r10+0x18]
   14002df1d:	and    rax,rcx
   14002df20:	cmp    rax,QWORD PTR [r10+0x18]
   14002df24:	je     0x14002df41
   14002df26:	mov    r8,QWORD PTR [r10+0x30]
   14002df2a:	mov    ecx,r11d
   14002df2d:	and    ecx,0x1f
   14002df30:	shr    rbx,0x5
   14002df34:	mov    edx,r9d
   14002df37:	shl    edx,cl
   14002df39:	not    edx
   14002df3b:	and    DWORD PTR [r8+rbx*4],edx
   14002df3f:	jmp    0x14002df58
   14002df41:	mov    r8,QWORD PTR [r10+0x30]
   14002df45:	mov    ecx,r11d
   14002df48:	and    ecx,0x1f
   14002df4b:	shr    rbx,0x5
   14002df4f:	mov    edx,r9d
   14002df52:	shl    edx,cl
   14002df54:	or     DWORD PTR [r8+rbx*4],edx
   14002df58:	movzx  eax,WORD PTR [r10+0x2a]
   14002df5d:	add    r11d,r9d
   14002df60:	cmp    r11d,eax
   14002df63:	jb     0x14002def2
   14002df65:	jmp    0x14002dfa8
   14002df67:	mov    DWORD PTR [r10+0x24],edi
   14002df6b:	mov    BYTE PTR [r10+0x28],dil
   14002df6f:	mov    QWORD PTR [r10+0x10],rdi
   14002df73:	mov    QWORD PTR [r10+0x18],rdi
   14002df77:	cmp    WORD PTR [r10+0x2a],di
   14002df7c:	jbe    0x14002dfa8
   14002df7e:	movzx  eax,WORD PTR [r10+0x2a]
   14002df83:	mov    r9d,0x1
   14002df89:	sub    eax,r9d
   14002df8c:	cdq    
   14002df8d:	lea    ecx,[r9+0x1f]
   14002df91:	idiv   ecx
   14002df93:	mov    rcx,QWORD PTR [r10+0x30]
   14002df97:	xor    edx,edx
   14002df99:	add    eax,r9d
   14002df9c:	movsxd r8,eax
   14002df9f:	shl    r8,0x2
   14002dfa3:	call   0x140014694
   14002dfa8:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dfad:	add    rsp,0x20
   14002dfb1:	pop    rdi
   14002dfb2:	ret    
   14002dfb3:	int3   
   14002dfb4:	int3   
   14002dfb5:	int3   
   14002dfb6:	int3   
   14002dfb7:	int3   
   14002dfb8:	int3   
   14002dfb9:	int3   
   14002dfba:	int3   
   14002dfbb:	int3   
   14002dfbc:	mov    rcx,QWORD PTR [rip+0x20ffd]        # 0x14004efc0
   14002dfc3:	xor    r9d,r9d
   14002dfc6:	xor    r8d,r8d
   14002dfc9:	rex.W jmp QWORD PTR [rip+0xf718]        # 0x14003d6e8
   14002dfd0:	int3   
   14002dfd1:	int3   
   14002dfd2:	int3   
   14002dfd3:	int3   
   14002dfd4:	int3   
   14002dfd5:	int3   
   14002dfd6:	int3   
   14002dfd7:	int3   
   14002dfd8:	xor    eax,eax
   14002dfda:	lea    r8,[rip+0x1507f]        # 0x140043060
   14002dfe1:	test   rdx,rdx
   14002dfe4:	je     0x14002dff6
   14002dfe6:	mov    r8,rdx
   14002dfe9:	or     rax,0xffffffffffffffff
   14002dfed:	inc    rax
   14002dff0:	cmp    BYTE PTR [rdx+rax*1],0x0
   14002dff4:	jne    0x14002dfed
   14002dff6:	and    DWORD PTR [rcx+0xc],0x0
   14002dffa:	inc    eax
   14002dffc:	mov    DWORD PTR [rcx+0x8],eax
   14002dfff:	mov    QWORD PTR [rcx],r8
   14002e002:	ret    
   14002e003:	int3   
   14002e004:	int3   
   14002e005:	int3   
   14002e006:	int3   
   14002e007:	int3   
   14002e008:	int3   
   14002e009:	int3   
   14002e00a:	int3   
   14002e00b:	int3   
   14002e00c:	xor    r9d,r9d
   14002e00f:	lea    r8,[rip+0x15062]        # 0x140043078
   14002e016:	mov    eax,r9d
   14002e019:	test   rdx,rdx
   14002e01c:	je     0x14002e02f
   14002e01e:	mov    r8,rdx
   14002e021:	or     rax,0xffffffffffffffff
   14002e025:	inc    rax
   14002e028:	cmp    WORD PTR [rdx+rax*2],r9w
   14002e02d:	jne    0x14002e025
   14002e02f:	lea    eax,[rax*2+0x2]
   14002e036:	mov    QWORD PTR [rcx],r8
   14002e039:	mov    DWORD PTR [rcx+0x8],eax
   14002e03c:	mov    DWORD PTR [rcx+0xc],r9d
   14002e040:	ret    
   14002e041:	int3   
   14002e042:	int3   
   14002e043:	int3   
   14002e044:	int3   
   14002e045:	int3   
   14002e046:	int3   
   14002e047:	int3   
   14002e048:	int3   
   14002e049:	int3   
   14002e04a:	int3   
   14002e04b:	int3   
   14002e04c:	int3   
   14002e04d:	int3   
   14002e04e:	int3   
   14002e04f:	int3   
   14002e050:	mov    QWORD PTR [rsp+0x8],rbx
   14002e055:	push   rdi
   14002e056:	sub    rsp,0x20
   14002e05a:	mov    ebx,edx
   14002e05c:	mov    rdi,rcx
   14002e05f:	call   0x14000da40
   14002e064:	test   bl,0x1
   14002e067:	je     0x14002e071
   14002e069:	mov    rcx,rdi
   14002e06c:	call   0x140013de0
   14002e071:	mov    rax,rdi
   14002e074:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e079:	add    rsp,0x20
   14002e07d:	pop    rdi
   14002e07e:	ret    
   14002e07f:	int3   
   14002e080:	int3   
   14002e081:	int3   
   14002e082:	int3   
   14002e083:	int3   
   14002e084:	int3   
   14002e085:	int3   
   14002e086:	int3   
   14002e087:	int3   
   14002e088:	mov    QWORD PTR [rsp+0x8],rbx
   14002e08d:	mov    QWORD PTR [rsp+0x10],rbp
   14002e092:	mov    QWORD PTR [rsp+0x18],rsi
   14002e097:	push   rdi
   14002e098:	push   r14
   14002e09a:	push   r15
   14002e09c:	sub    rsp,0x20
   14002e0a0:	xor    r15d,r15d
   14002e0a3:	mov    rbp,r8
   14002e0a6:	mov    rbx,rdx
   14002e0a9:	mov    sil,r15b
   14002e0ac:	cmp    WORD PTR [rdx],r15w
   14002e0b0:	jne    0x14002e0b6
   14002e0b2:	xor    eax,eax
   14002e0b4:	jmp    0x14002e119
   14002e0b6:	mov    r14,rdx
   14002e0b9:	mov    edi,0x1
   14002e0be:	neg    r14
   14002e0c1:	lea    rax,[r14+rbx*1]
   14002e0c5:	sar    rax,1
   14002e0c8:	cmp    rax,rbp
   14002e0cb:	ja     0x14002e10f
   14002e0cd:	movzx  ecx,WORD PTR [rbx]
   14002e0d0:	call   QWORD PTR [rip+0xf50a]        # 0x14003d5e0
   14002e0d6:	test   eax,eax
   14002e0d8:	je     0x14002e10f
   14002e0da:	add    rbx,0x2
   14002e0de:	cmp    WORD PTR [rbx],r15w
   14002e0e2:	jne    0x14002e0c1
   14002e0e4:	jmp    0x14002e10f
   14002e0e6:	lea    rax,[r14+rbx*1]
   14002e0ea:	sar    rax,1
   14002e0ed:	cmp    rax,rbp
   14002e0f0:	ja     0x14002e117
   14002e0f2:	call   QWORD PTR [rip+0xf4e8]        # 0x14003d5e0
   14002e0f8:	test   eax,eax
   14002e0fa:	je     0x14002e101
   14002e0fc:	mov    sil,0x1
   14002e0ff:	jmp    0x14002e10b
   14002e101:	test   sil,sil
   14002e104:	je     0x14002e10b
   14002e106:	mov    sil,r15b
   14002e109:	inc    edi
   14002e10b:	add    rbx,0x2
   14002e10f:	movzx  ecx,WORD PTR [rbx]
   14002e112:	test   cx,cx
   14002e115:	jne    0x14002e0e6
   14002e117:	mov    eax,edi
   14002e119:	mov    rbx,QWORD PTR [rsp+0x40]
   14002e11e:	mov    rbp,QWORD PTR [rsp+0x48]
   14002e123:	mov    rsi,QWORD PTR [rsp+0x50]
   14002e128:	add    rsp,0x20
   14002e12c:	pop    r15
   14002e12e:	pop    r14
   14002e130:	pop    rdi
   14002e131:	ret    
   14002e132:	int3   
   14002e133:	int3   
   14002e134:	int3   
   14002e135:	int3   
   14002e136:	int3   
   14002e137:	int3   
   14002e138:	int3   
   14002e139:	int3   
   14002e13a:	int3   
   14002e13b:	int3   
   14002e13c:	int3   
   14002e13d:	int3   
   14002e13e:	int3   
   14002e13f:	int3   
   14002e140:	test   rdx,rdx
   14002e143:	je     0x14002e155
   14002e145:	test   r8,r8
   14002e148:	je     0x14002e155
   14002e14a:	and    QWORD PTR [r8],0x0
   14002e14e:	and    QWORD PTR [rdx],0x0
   14002e152:	xor    eax,eax
   14002e154:	ret    
   14002e155:	mov    eax,0x80004003
   14002e15a:	ret    
   14002e15b:	int3   
   14002e15c:	int3   
   14002e15d:	int3   
   14002e15e:	int3   
   14002e15f:	int3   
   14002e160:	int3   
   14002e161:	int3   
   14002e162:	int3   
   14002e163:	int3   
   14002e164:	int3   
   14002e165:	int3   
   14002e166:	int3   
   14002e167:	int3   
   14002e168:	int3   
   14002e169:	int3   
   14002e16a:	int3   
   14002e16b:	int3   
   14002e16c:	int3   
   14002e16d:	int3   
   14002e16e:	int3   
   14002e16f:	int3   
   14002e170:	sub    rsp,0x28
   14002e174:	and    DWORD PTR [rsp+0x38],0x0
   14002e179:	call   QWORD PTR [rip+0xeea9]        # 0x14003d028
   14002e17f:	mov    rcx,rax
   14002e182:	lea    rdx,[rsp+0x38]
   14002e187:	call   QWORD PTR [rip+0xef0b]        # 0x14003d098
   14002e18d:	mov    eax,DWORD PTR [rsp+0x38]
   14002e191:	add    rsp,0x28
   14002e195:	ret    
   14002e196:	int3   
   14002e197:	int3   
   14002e198:	int3   
   14002e199:	int3   
   14002e19a:	int3   
   14002e19b:	int3   
   14002e19c:	rex push rbx
   14002e19e:	sub    rsp,0x20
   14002e1a2:	mov    rbx,rcx
   14002e1a5:	lea    rcx,[rip+0x20ec4]        # 0x14004f070
   14002e1ac:	call   QWORD PTR [rip+0xf216]        # 0x14003d3c8
   14002e1b2:	cmp    QWORD PTR [rip+0x202bf],rbx        # 0x14004e478
   14002e1b9:	lea    r8,[rip+0x20b00]        # 0x14004ecc0
   14002e1c0:	mov    rdx,r8
   14002e1c3:	lea    rcx,[rip+0x20ea6]        # 0x14004f070
   14002e1ca:	cmovne rdx,QWORD PTR [rip+0x202a6]        # 0x14004e478
   14002e1d2:	cmp    QWORD PTR [rip+0x20b5f],rbx        # 0x14004ed38
   14002e1d9:	mov    QWORD PTR [rip+0x20298],rdx        # 0x14004e478
   14002e1e0:	cmovne r8,QWORD PTR [rip+0x20b50]        # 0x14004ed38
   14002e1e8:	mov    QWORD PTR [rip+0x20b49],r8        # 0x14004ed38
   14002e1ef:	add    rsp,0x20
   14002e1f3:	pop    rbx
   14002e1f4:	rex.W jmp QWORD PTR [rip+0xf1dd]        # 0x14003d3d8
   14002e1fb:	int3   
   14002e1fc:	int3   
   14002e1fd:	int3   
   14002e1fe:	int3   
   14002e1ff:	int3   
   14002e200:	int3   
   14002e201:	int3   
   14002e202:	int3   
   14002e203:	int3   
   14002e204:	mov    rax,rsp
   14002e207:	push   rbp
   14002e208:	push   rdi
   14002e209:	push   r12
   14002e20b:	push   r14
   14002e20d:	push   r15
   14002e20f:	lea    rbp,[rax-0x228]
   14002e216:	sub    rsp,0x300
   14002e21d:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14002e226:	mov    QWORD PTR [rax+0x18],rbx
   14002e22a:	mov    QWORD PTR [rax+0x20],rsi
   14002e22e:	mov    rax,QWORD PTR [rip+0x1fddb]        # 0x14004e010
   14002e235:	xor    rax,rsp
   14002e238:	mov    QWORD PTR [rbp+0x1f0],rax
   14002e23f:	mov    rsi,rdx
   14002e242:	mov    r14,rcx
   14002e245:	call   0x14003bab4
   14002e24a:	xor    r15d,r15d
   14002e24d:	test   al,al
   14002e24f:	je     0x14002e48c
   14002e255:	mov    QWORD PTR [rsp+0x20],r15
   14002e25a:	mov    rax,QWORD PTR [rsi]
   14002e25d:	mov    rbx,QWORD PTR [rax]
   14002e260:	mov    rcx,rbx
   14002e263:	call   QWORD PTR [rip+0xf4bf]        # 0x14003d728
   14002e269:	lea    r8,[rsp+0x20]
   14002e26e:	lea    rdx,[rip+0x151db]        # 0x140043450
   14002e275:	mov    rcx,rsi
   14002e278:	call   rbx
   14002e27a:	test   eax,eax
   14002e27c:	js     0x14002e46d
   14002e282:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e287:	test   rbx,rbx
   14002e28a:	je     0x14002e472
   14002e290:	lea    r12d,[r15+0x1]
   14002e294:	mov    DWORD PTR [rsp+0x34],r12d
   14002e299:	mov    rax,QWORD PTR [rbx]
   14002e29c:	mov    rdi,QWORD PTR [rax+0x48]
   14002e2a0:	mov    rcx,rdi
   14002e2a3:	call   QWORD PTR [rip+0xf47f]        # 0x14003d728
   14002e2a9:	lea    rdx,[rsp+0x34]
   14002e2ae:	mov    rcx,rbx
   14002e2b1:	call   rdi
   14002e2b3:	cmp    DWORD PTR [rsp+0x34],r15d
   14002e2b8:	jne    0x14002e46d
   14002e2be:	mov    QWORD PTR [rsp+0x38],r15
   14002e2c3:	mov    rax,QWORD PTR [rsi]
   14002e2c6:	mov    rbx,QWORD PTR [rax+0x38]
   14002e2ca:	mov    rcx,rbx
   14002e2cd:	call   QWORD PTR [rip+0xf455]        # 0x14003d728
   14002e2d3:	lea    rdx,[rsp+0x38]
   14002e2d8:	mov    rcx,rsi
   14002e2db:	call   rbx
   14002e2dd:	test   eax,eax
   14002e2df:	js     0x14002e462
   14002e2e5:	mov    rcx,QWORD PTR [rsp+0x38]
   14002e2ea:	call   QWORD PTR [rip+0x24d20]        # 0x140053010
   14002e2f0:	mov    r11d,eax
   14002e2f3:	mov    QWORD PTR [rsp+0x48],r15
   14002e2f8:	lea    rdx,[r11+0x1]
   14002e2fc:	lea    r8,[rsp+0x48]
   14002e301:	mov    rcx,QWORD PTR [rsp+0x38]
   14002e306:	call   0x14002e594
   14002e30b:	mov    rsi,QWORD PTR [rsp+0x48]
   14002e310:	test   eax,eax
   14002e312:	cmovs  rsi,r11
   14002e316:	mov    DWORD PTR [rsp+0x40],r15d
   14002e31b:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e320:	mov    rax,QWORD PTR [rbx]
   14002e323:	mov    rdi,QWORD PTR [rax+0x28]
   14002e327:	mov    rcx,rdi
   14002e32a:	call   QWORD PTR [rip+0xf3f8]        # 0x14003d728
   14002e330:	lea    rdx,[rsp+0x40]
   14002e335:	mov    rcx,rbx
   14002e338:	call   rdi
   14002e33a:	movzx  eax,WORD PTR [rsp+0x40]
   14002e33f:	mov    DWORD PTR [rsp+0x68],eax
   14002e343:	mov    DWORD PTR [rsp+0x60],r12d
   14002e348:	mov    DWORD PTR [rsp+0x30],r15d
   14002e34d:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e352:	mov    rax,QWORD PTR [rbx]
   14002e355:	mov    rdi,QWORD PTR [rax+0x18]
   14002e359:	mov    rcx,rdi
   14002e35c:	call   QWORD PTR [rip+0xf3c6]        # 0x14003d728
   14002e362:	lea    rdx,[rsp+0x30]
   14002e367:	mov    rcx,rbx
   14002e36a:	call   rdi
   14002e36c:	mov    eax,DWORD PTR [rsp+0x30]
   14002e370:	mov    DWORD PTR [rsp+0x78],eax
   14002e374:	mov    DWORD PTR [rsp+0x70],r12d
   14002e379:	mov    DWORD PTR [rbp-0x78],esi
   14002e37c:	mov    DWORD PTR [rbp-0x80],r12d
   14002e380:	mov    r8,rsi
   14002e383:	mov    rdx,QWORD PTR [rsp+0x38]
   14002e388:	call   0x14002e088
   14002e38d:	mov    DWORD PTR [rbp-0x68],eax
   14002e390:	mov    DWORD PTR [rbp-0x70],r12d
   14002e394:	mov    DWORD PTR [rsp+0x28],r15d
   14002e399:	mov    DWORD PTR [rsp+0x2c],r15d
   14002e39e:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e3a3:	mov    rax,QWORD PTR [rbx]
   14002e3a6:	mov    rdi,QWORD PTR [rax+0x58]
   14002e3aa:	mov    rcx,rdi
   14002e3ad:	call   QWORD PTR [rip+0xf375]        # 0x14003d728
   14002e3b3:	lea    r8,[rsp+0x2c]
   14002e3b8:	lea    rdx,[rsp+0x28]
   14002e3bd:	mov    rcx,rbx
   14002e3c0:	call   rdi
   14002e3c2:	mov    eax,DWORD PTR [rsp+0x28]
   14002e3c6:	mov    DWORD PTR [rbp-0x58],eax
   14002e3c9:	mov    DWORD PTR [rbp-0x60],r12d
   14002e3cd:	mov    rax,QWORD PTR [r14]
   14002e3d0:	mov    rbx,QWORD PTR [rax+0x88]
   14002e3d7:	mov    rcx,rbx
   14002e3da:	call   QWORD PTR [rip+0xf348]        # 0x14003d728
   14002e3e0:	mov    rcx,r14
   14002e3e3:	call   rbx
   14002e3e5:	mov    edx,eax
   14002e3e7:	lea    r8,[rbp-0x20]
   14002e3eb:	call   0x14002e4d8
   14002e3f0:	lea    rax,[rbp-0x20]
   14002e3f4:	lea    rcx,[rip+0x15045]        # 0x140043440
   14002e3fb:	cmp    WORD PTR [rbp-0x20],r15w
   14002e400:	cmove  rax,rcx
   14002e404:	mov    QWORD PTR [rbp-0x48],rax
   14002e408:	mov    DWORD PTR [rbp-0x50],0x2
   14002e40f:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e414:	mov    rax,QWORD PTR [rbx]
   14002e417:	mov    rdi,QWORD PTR [rax+0x38]
   14002e41b:	mov    rcx,rdi
   14002e41e:	call   QWORD PTR [rip+0xf304]        # 0x14003d728
   14002e424:	lea    rdx,[rsp+0x44]
   14002e429:	mov    rcx,rbx
   14002e42c:	call   rdi
   14002e42e:	mov    eax,r15d
   14002e431:	cmp    DWORD PTR [rsp+0x44],r15d
   14002e436:	setne  al
   14002e439:	mov    DWORD PTR [rbp-0x38],eax
   14002e43c:	mov    DWORD PTR [rbp-0x40],r12d
   14002e440:	mov    eax,DWORD PTR [rsp+0x2c]
   14002e444:	mov    DWORD PTR [rbp-0x28],eax
   14002e447:	mov    DWORD PTR [rbp-0x30],r12d
   14002e44b:	lea    r9,[rsp+0x60]
   14002e450:	mov    edx,0xf2
   14002e455:	xor    ecx,ecx
   14002e457:	lea    r8d,[r15+0x8]
   14002e45b:	call   QWORD PTR [rip+0xf27f]        # 0x14003d6e0
   14002e461:	nop
   14002e462:	mov    rcx,QWORD PTR [rsp+0x38]
   14002e467:	call   QWORD PTR [rip+0x24c53]        # 0x1400530c0
   14002e46d:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e472:	test   rbx,rbx
   14002e475:	je     0x14002e48c
   14002e477:	mov    rax,QWORD PTR [rbx]
   14002e47a:	mov    rdi,QWORD PTR [rax+0x10]
   14002e47e:	mov    rcx,rdi
   14002e481:	call   QWORD PTR [rip+0xf2a1]        # 0x14003d728
   14002e487:	mov    rcx,rbx
   14002e48a:	call   rdi
   14002e48c:	mov    rcx,QWORD PTR [rbp+0x1f0]
   14002e493:	xor    rcx,rsp
   14002e496:	call   0x1400141d0
   14002e49b:	lea    r11,[rsp+0x300]
   14002e4a3:	mov    rbx,QWORD PTR [r11+0x40]
   14002e4a7:	mov    rsi,QWORD PTR [r11+0x48]
   14002e4ab:	mov    rsp,r11
   14002e4ae:	pop    r15
   14002e4b0:	pop    r14
   14002e4b2:	pop    r12
   14002e4b4:	pop    rdi
   14002e4b5:	pop    rbp
   14002e4b6:	ret    
   14002e4b7:	lea    rcx,[rdx+0x20]
   14002e4be:	jmp    0x14000f4f0
   14002e4c3:	lea    rcx,[rdx+0x38]
   14002e4ca:	jmp    0x14000f3c0
   14002e4cf:	int3   
   14002e4d0:	int3   
   14002e4d1:	int3   
   14002e4d2:	int3   
   14002e4d3:	int3   
   14002e4d4:	int3   
   14002e4d5:	int3   
   14002e4d6:	int3   
   14002e4d7:	int3   
   14002e4d8:	mov    QWORD PTR [rsp+0x8],rbx
   14002e4dd:	push   rbp
   14002e4de:	push   rsi
   14002e4df:	push   rdi
   14002e4e0:	sub    rsp,0x240
   14002e4e7:	mov    rax,QWORD PTR [rip+0x1fb22]        # 0x14004e010
   14002e4ee:	xor    rax,rsp
   14002e4f1:	mov    QWORD PTR [rsp+0x230],rax
   14002e4f9:	mov    ecx,edx
   14002e4fb:	mov    rsi,r8
   14002e4fe:	lea    rdx,[rsp+0x20]
   14002e503:	call   0x14003b998
   14002e508:	xor    ebp,ebp
   14002e50a:	test   eax,eax
   14002e50c:	je     0x14002e566
   14002e50e:	lea    edx,[rbp+0x5c]
   14002e511:	lea    rcx,[rsp+0x20]
   14002e516:	call   QWORD PTR [rip+0xf0cc]        # 0x14003d5e8
   14002e51c:	mov    rbx,rax
   14002e51f:	test   rax,rax
   14002e522:	je     0x14002e52d
   14002e524:	add    rbx,0x2
   14002e528:	cmp    WORD PTR [rbx],bp
   14002e52b:	jne    0x14002e532
   14002e52d:	lea    rbx,[rsp+0x20]
   14002e532:	test   rbx,rbx
   14002e535:	je     0x14002e566
   14002e537:	mov    rdi,rbx
   14002e53a:	cmp    WORD PTR [rbx],bp
   14002e53d:	je     0x14002e554
   14002e53f:	movzx  ecx,WORD PTR [rdi]
   14002e542:	call   QWORD PTR [rip+0xf0a8]        # 0x14003d5f0
   14002e548:	mov    WORD PTR [rdi],ax
   14002e54b:	lea    rdi,[rdi+0x2]
   14002e54f:	cmp    WORD PTR [rdi],bp
   14002e552:	jne    0x14002e53f
   14002e554:	mov    r8,rbx
   14002e557:	mov    edx,0x104
   14002e55c:	mov    rcx,rsi
   14002e55f:	call   0x14001531c
   14002e564:	jmp    0x14002e569
   14002e566:	mov    WORD PTR [rsi],bp
   14002e569:	mov    rcx,QWORD PTR [rsp+0x230]
   14002e571:	xor    rcx,rsp
   14002e574:	call   0x1400141d0
   14002e579:	mov    rbx,QWORD PTR [rsp+0x260]
   14002e581:	add    rsp,0x240
   14002e588:	pop    rdi
   14002e589:	pop    rsi
   14002e58a:	pop    rbp
   14002e58b:	ret    
   14002e58c:	int3   
   14002e58d:	int3   
   14002e58e:	int3   
   14002e58f:	int3   
   14002e590:	int3   
   14002e591:	int3   
   14002e592:	int3   
   14002e593:	int3   
   14002e594:	xor    r10d,r10d
   14002e597:	test   rcx,rcx
   14002e59a:	je     0x14002e5e0
   14002e59c:	cmp    rdx,0x7fffffff
   14002e5a3:	ja     0x14002e5e0
   14002e5a5:	mov    r9,rdx
   14002e5a8:	mov    eax,r10d
   14002e5ab:	test   rdx,rdx
   14002e5ae:	je     0x14002e5c5
   14002e5b0:	cmp    WORD PTR [rcx],r10w
   14002e5b4:	je     0x14002e5c0
   14002e5b6:	add    rcx,0x2
   14002e5ba:	sub    r9,0x1
   14002e5be:	jne    0x14002e5b0
   14002e5c0:	test   r9,r9
   14002e5c3:	jne    0x14002e5ca
   14002e5c5:	mov    eax,0x80070057
   14002e5ca:	test   r8,r8
   14002e5cd:	je     0x14002e5e5
   14002e5cf:	test   eax,eax
   14002e5d1:	js     0x14002e5db
   14002e5d3:	sub    rdx,r9
   14002e5d6:	mov    QWORD PTR [r8],rdx
   14002e5d9:	jmp    0x14002e5e5
   14002e5db:	mov    QWORD PTR [r8],r10
   14002e5de:	jmp    0x14002e5e5
   14002e5e0:	mov    eax,0x80070057
   14002e5e5:	test   eax,eax
   14002e5e7:	jns    0x14002e5f1
   14002e5e9:	test   r8,r8
   14002e5ec:	je     0x14002e5f1
   14002e5ee:	mov    QWORD PTR [r8],r10
   14002e5f1:	ret    
   14002e5f2:	int3   
   14002e5f3:	int3   
   14002e5f4:	int3   
   14002e5f5:	int3   
   14002e5f6:	int3   
   14002e5f7:	int3   
   14002e5f8:	mov    QWORD PTR [rsp+0x8],rbx
   14002e5fd:	push   rdi
   14002e5fe:	sub    rsp,0x20
   14002e602:	lea    rcx,[rip+0x20a67]        # 0x14004f070
   14002e609:	call   QWORD PTR [rip+0xedb9]        # 0x14003d3c8
   14002e60f:	mov    rdi,QWORD PTR [rip+0x1fe62]        # 0x14004e478
   14002e616:	test   rdi,rdi
   14002e619:	je     0x14002e630
   14002e61b:	mov    rax,QWORD PTR [rdi]
   14002e61e:	mov    rbx,QWORD PTR [rax+0x8]
   14002e622:	mov    rcx,rbx
   14002e625:	call   QWORD PTR [rip+0xf0fd]        # 0x14003d728
   14002e62b:	mov    rcx,rdi
   14002e62e:	call   rbx
   14002e630:	lea    rcx,[rip+0x20a39]        # 0x14004f070
   14002e637:	call   QWORD PTR [rip+0xed9b]        # 0x14003d3d8
   14002e63d:	test   rdi,rdi
   14002e640:	je     0x14002e651
   14002e642:	lea    rax,[rip+0x20677]        # 0x14004ecc0
   14002e649:	mov    rdx,rdi
   14002e64c:	cmp    rdi,rax
   14002e64f:	jne    0x14002e658
   14002e651:	lea    rdx,[rip+0x205e8]        # 0x14004ec40
   14002e658:	call   0x140030f4c
   14002e65d:	test   rdi,rdi
   14002e660:	je     0x14002e677
   14002e662:	mov    rax,QWORD PTR [rdi]
   14002e665:	mov    rbx,QWORD PTR [rax+0x10]
   14002e669:	mov    rcx,rbx
   14002e66c:	call   QWORD PTR [rip+0xf0b6]        # 0x14003d728
   14002e672:	mov    rcx,rdi
   14002e675:	call   rbx
   14002e677:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e67c:	add    rsp,0x20
   14002e680:	pop    rdi
   14002e681:	ret    
   14002e682:	int3   
   14002e683:	int3   
   14002e684:	int3   
   14002e685:	int3   
   14002e686:	int3   
   14002e687:	int3   
   14002e688:	mov    rax,rsp
   14002e68b:	push   rdi
   14002e68c:	sub    rsp,0x60
   14002e690:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14002e698:	mov    QWORD PTR [rax+0x8],rbx
   14002e69c:	mov    QWORD PTR [rax+0x18],rsi
   14002e6a0:	mov    rdi,rdx
   14002e6a3:	mov    rsi,rcx
   14002e6a6:	test   rdx,rdx
   14002e6a9:	jne    0x14002e6b2
   14002e6ab:	mov    eax,0x80070057
   14002e6b0:	jmp    0x14002e723
   14002e6b2:	and    QWORD PTR [rsp+0x78],0x0
   14002e6b8:	mov    rax,QWORD PTR [rdx]
   14002e6bb:	mov    rbx,QWORD PTR [rax+0x38]
   14002e6bf:	mov    rcx,rbx
   14002e6c2:	call   QWORD PTR [rip+0xf060]        # 0x14003d728
   14002e6c8:	lea    rdx,[rsp+0x78]
   14002e6cd:	mov    rcx,rdi
   14002e6d0:	call   rbx
   14002e6d2:	mov    ebx,eax
   14002e6d4:	test   eax,eax
   14002e6d6:	js     0x14002e716
   14002e6d8:	lea    rcx,[rsp+0x28]
   14002e6dd:	call   0x140030fb4
   14002e6e2:	nop
   14002e6e3:	mov    rdx,QWORD PTR [rsp+0x78]
   14002e6e8:	lea    rcx,[rsp+0x28]
   14002e6ed:	call   0x1400314b0
   14002e6f2:	mov    rdx,rsi
   14002e6f5:	lea    rcx,[rsp+0x28]
   14002e6fa:	call   0x1400316e0
   14002e6ff:	mov    rdx,rdi
   14002e702:	mov    rcx,rsi
   14002e705:	call   0x14002e204
   14002e70a:	nop
   14002e70b:	lea    rcx,[rsp+0x28]
   14002e710:	call   0x14003109c
   14002e715:	nop
   14002e716:	mov    rcx,QWORD PTR [rsp+0x78]
   14002e71b:	call   QWORD PTR [rip+0x2499f]        # 0x1400530c0
   14002e721:	mov    eax,ebx
   14002e723:	lea    r11,[rsp+0x60]
   14002e728:	mov    rbx,QWORD PTR [r11+0x10]
   14002e72c:	mov    rsi,QWORD PTR [r11+0x20]
   14002e730:	mov    rsp,r11
   14002e733:	pop    rdi
   14002e734:	ret    
   14002e735:	lea    rcx,[rdx+0x78]
   14002e73c:	jmp    0x14000f3c0
   14002e741:	lea    rcx,[rdx+0x28]
   14002e748:	jmp    0x14003109c
   14002e74d:	int3   
   14002e74e:	int3   
   14002e74f:	int3   
   14002e750:	int3   
   14002e751:	int3   
   14002e752:	int3   
   14002e753:	int3   
   14002e754:	mov    rax,rsp
   14002e757:	mov    QWORD PTR [rax+0x8],rcx
   14002e75b:	push   rdi
   14002e75c:	sub    rsp,0x30
   14002e760:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002e768:	mov    QWORD PTR [rax+0x18],rbx
   14002e76c:	mov    QWORD PTR [rax+0x20],rsi
   14002e770:	mov    rdi,rdx
   14002e773:	mov    rsi,rcx
   14002e776:	and    DWORD PTR [rcx+0x8],0x0
   14002e77a:	lea    rax,[rip+0x146af]        # 0x140042e30
   14002e781:	mov    QWORD PTR [rcx],rax
   14002e784:	lea    rbx,[rcx+0x18]
   14002e788:	mov    QWORD PTR [rsp+0x48],rbx
   14002e78d:	mov    rcx,rbx
   14002e790:	call   0x14000d5e8
   14002e795:	lea    rax,[rip+0x14534]        # 0x140042cd0
   14002e79c:	mov    QWORD PTR [rbx],rax
   14002e79f:	lea    rax,[rip+0x144fa]        # 0x140042ca0
   14002e7a6:	mov    QWORD PTR [rbx+0x8],rax
   14002e7aa:	lea    rax,[rip+0x144cf]        # 0x140042c80
   14002e7b1:	mov    QWORD PTR [rbx+0x10],rax
   14002e7b5:	lea    rax,[rip+0x1448c]        # 0x140042c48
   14002e7bc:	mov    QWORD PTR [rbx+0x18],rax
   14002e7c0:	mov    QWORD PTR [rbx+0x20],rdi
   14002e7c4:	mov    rdi,QWORD PTR [rip+0x20395]        # 0x14004eb60
   14002e7cb:	mov    rax,QWORD PTR [rdi]
   14002e7ce:	mov    rbx,QWORD PTR [rax+0x8]
   14002e7d2:	mov    rcx,rbx
   14002e7d5:	call   QWORD PTR [rip+0xef4d]        # 0x14003d728
   14002e7db:	mov    rcx,rdi
   14002e7de:	call   rbx
   14002e7e0:	nop
   14002e7e1:	mov    rax,rsi
   14002e7e4:	mov    rbx,QWORD PTR [rsp+0x50]
   14002e7e9:	mov    rsi,QWORD PTR [rsp+0x58]
   14002e7ee:	add    rsp,0x30
   14002e7f2:	pop    rdi
   14002e7f3:	ret    
   14002e7f4:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e7fb:	add    rcx,0x8
   14002e7ff:	jmp    0x14000dff0
   14002e804:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e80b:	add    rcx,0x18
   14002e80f:	jmp    0x14002ea3c
   14002e814:	int3   
   14002e815:	int3   
   14002e816:	int3   
   14002e817:	int3   
   14002e818:	int3   
   14002e819:	int3   
   14002e81a:	int3   
   14002e81b:	int3   
   14002e81c:	mov    rax,rsp
   14002e81f:	mov    QWORD PTR [rax+0x8],rcx
   14002e823:	push   rdi
   14002e824:	sub    rsp,0x30
   14002e828:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002e830:	mov    QWORD PTR [rax+0x18],rbx
   14002e834:	mov    QWORD PTR [rax+0x20],rsi
   14002e838:	mov    rdi,rdx
   14002e83b:	mov    rsi,rcx
   14002e83e:	and    DWORD PTR [rcx+0x8],0x0
   14002e842:	lea    rax,[rip+0x14607]        # 0x140042e50
   14002e849:	mov    QWORD PTR [rcx],rax
   14002e84c:	lea    rbx,[rcx+0x18]
   14002e850:	mov    QWORD PTR [rsp+0x48],rbx
   14002e855:	mov    rcx,rbx
   14002e858:	call   0x1400112ec
   14002e85d:	lea    rax,[rip+0x14534]        # 0x140042d98
   14002e864:	mov    QWORD PTR [rbx],rax
   14002e867:	lea    rax,[rip+0x144fa]        # 0x140042d68
   14002e86e:	mov    QWORD PTR [rbx+0x78],rax
   14002e872:	lea    rax,[rip+0x1449f]        # 0x140042d18
   14002e879:	mov    QWORD PTR [rbx+0x80],rax
   14002e880:	lea    rax,[rip+0x14471]        # 0x140042cf8
   14002e887:	mov    QWORD PTR [rbx+0x88],rax
   14002e88e:	mov    QWORD PTR [rbx+0x90],rdi
   14002e895:	mov    rdi,QWORD PTR [rip+0x202c4]        # 0x14004eb60
   14002e89c:	mov    rax,QWORD PTR [rdi]
   14002e89f:	mov    rbx,QWORD PTR [rax+0x8]
   14002e8a3:	mov    rcx,rbx
   14002e8a6:	call   QWORD PTR [rip+0xee7c]        # 0x14003d728
   14002e8ac:	mov    rcx,rdi
   14002e8af:	call   rbx
   14002e8b1:	nop
   14002e8b2:	mov    rax,rsi
   14002e8b5:	mov    rbx,QWORD PTR [rsp+0x50]
   14002e8ba:	mov    rsi,QWORD PTR [rsp+0x58]
   14002e8bf:	add    rsp,0x30
   14002e8c3:	pop    rdi
   14002e8c4:	ret    
   14002e8c5:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e8cc:	add    rcx,0x8
   14002e8d0:	jmp    0x14000dff0
   14002e8d5:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e8dc:	add    rcx,0x18
   14002e8e0:	jmp    0x14002ea48
   14002e8e5:	int3   
   14002e8e6:	int3   
   14002e8e7:	int3   
   14002e8e8:	int3   
   14002e8e9:	int3   
   14002e8ea:	int3   
   14002e8eb:	int3   
   14002e8ec:	mov    QWORD PTR [rsp+0x8],rbx
   14002e8f1:	mov    QWORD PTR [rsp+0x10],rsi
   14002e8f6:	push   rdi
   14002e8f7:	sub    rsp,0x20
   14002e8fb:	mov    rdi,QWORD PTR [rdx]
   14002e8fe:	mov    rsi,rcx
   14002e901:	mov    QWORD PTR [rcx],rdi
   14002e904:	test   rdi,rdi
   14002e907:	je     0x14002e91e
   14002e909:	mov    rax,QWORD PTR [rdi]
   14002e90c:	mov    rbx,QWORD PTR [rax+0x8]
   14002e910:	mov    rcx,rbx
   14002e913:	call   QWORD PTR [rip+0xee0f]        # 0x14003d728
   14002e919:	mov    rcx,rdi
   14002e91c:	call   rbx
   14002e91e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e923:	mov    rax,rsi
   14002e926:	mov    rsi,QWORD PTR [rsp+0x38]
   14002e92b:	add    rsp,0x20
   14002e92f:	pop    rdi
   14002e930:	ret    
   14002e931:	int3   
   14002e932:	int3   
   14002e933:	int3   
   14002e934:	int3   
   14002e935:	int3   
   14002e936:	int3   
   14002e937:	int3   
   14002e938:	mov    rax,rsp
   14002e93b:	mov    QWORD PTR [rax+0x8],rcx
   14002e93f:	push   rdi
   14002e940:	sub    rsp,0x30
   14002e944:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002e94c:	mov    QWORD PTR [rax+0x10],rbx
   14002e950:	mov    QWORD PTR [rax+0x18],rsi
   14002e954:	lea    rax,[rip+0x144d5]        # 0x140042e30
   14002e95b:	mov    QWORD PTR [rcx],rax
   14002e95e:	mov    DWORD PTR [rcx+0x8],0xc0000001
   14002e965:	lea    rsi,[rcx+0x18]
   14002e969:	mov    rcx,rsi
   14002e96c:	call   0x14000d6a4
   14002e971:	mov    rdi,QWORD PTR [rip+0x201e8]        # 0x14004eb60
   14002e978:	mov    rax,QWORD PTR [rdi]
   14002e97b:	mov    rbx,QWORD PTR [rax+0x10]
   14002e97f:	mov    rcx,rbx
   14002e982:	call   QWORD PTR [rip+0xeda0]        # 0x14003d728
   14002e988:	mov    rcx,rdi
   14002e98b:	call   rbx
   14002e98d:	nop
   14002e98e:	mov    rcx,rsi
   14002e991:	mov    rbx,QWORD PTR [rsp+0x48]
   14002e996:	mov    rsi,QWORD PTR [rsp+0x50]
   14002e99b:	add    rsp,0x30
   14002e99f:	pop    rdi
   14002e9a0:	jmp    0x14000d7ac
   14002e9a5:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e9ac:	add    rcx,0x18
   14002e9b0:	jmp    0x14002ea3c
   14002e9b5:	int3   
   14002e9b6:	int3   
   14002e9b7:	int3   
   14002e9b8:	int3   
   14002e9b9:	int3   
   14002e9ba:	int3   
   14002e9bb:	int3   
   14002e9bc:	mov    rax,rsp
   14002e9bf:	mov    QWORD PTR [rax+0x8],rcx
   14002e9c3:	push   rdi
   14002e9c4:	sub    rsp,0x30
   14002e9c8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002e9d0:	mov    QWORD PTR [rax+0x10],rbx
   14002e9d4:	mov    QWORD PTR [rax+0x18],rsi
   14002e9d8:	mov    rsi,rcx
   14002e9db:	lea    rax,[rip+0x1446e]        # 0x140042e50
   14002e9e2:	mov    QWORD PTR [rcx],rax
   14002e9e5:	mov    DWORD PTR [rcx+0x8],0xc0000001
   14002e9ec:	mov    rdi,QWORD PTR [rip+0x2016d]        # 0x14004eb60
   14002e9f3:	mov    rax,QWORD PTR [rdi]
   14002e9f6:	mov    rbx,QWORD PTR [rax+0x10]
   14002e9fa:	mov    rcx,rbx
   14002e9fd:	call   QWORD PTR [rip+0xed25]        # 0x14003d728
   14002ea03:	mov    rcx,rdi
   14002ea06:	call   rbx
   14002ea08:	nop
   14002ea09:	lea    rcx,[rsi+0x18]
   14002ea0d:	mov    QWORD PTR [rsp+0x40],rcx
   14002ea12:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ea17:	mov    rsi,QWORD PTR [rsp+0x50]
   14002ea1c:	add    rsp,0x30
   14002ea20:	pop    rdi
   14002ea21:	jmp    0x14002eaf4
   14002ea26:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ea2d:	add    rcx,0x18
   14002ea31:	jmp    0x14002ea48
   14002ea36:	int3   
   14002ea37:	int3   
   14002ea38:	int3   
   14002ea39:	int3   
   14002ea3a:	int3   
   14002ea3b:	int3   
   14002ea3c:	jmp    0x14000d7ac
   14002ea41:	int3   
   14002ea42:	int3   
   14002ea43:	int3   
   14002ea44:	int3   
   14002ea45:	int3   
   14002ea46:	int3   
   14002ea47:	int3   
   14002ea48:	jmp    0x14002eaf4
   14002ea4d:	int3   
   14002ea4e:	int3   
   14002ea4f:	int3   
   14002ea50:	int3   
   14002ea51:	int3   
   14002ea52:	int3   
   14002ea53:	int3   
   14002ea54:	mov    rax,rsp
   14002ea57:	mov    QWORD PTR [rax+0x8],rcx
   14002ea5b:	push   rdi
   14002ea5c:	sub    rsp,0x30
   14002ea60:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002ea68:	mov    QWORD PTR [rax+0x10],rbx
   14002ea6c:	mov    QWORD PTR [rax+0x18],rsi
   14002ea70:	mov    rsi,rcx
   14002ea73:	lea    rax,[rip+0x108ce]        # 0x14003f348
   14002ea7a:	mov    QWORD PTR [rcx],rax
   14002ea7d:	lea    rax,[rip+0x10894]        # 0x14003f318
   14002ea84:	mov    QWORD PTR [rcx+0x78],rax
   14002ea88:	lea    rax,[rip+0x10839]        # 0x14003f2c8
   14002ea8f:	mov    QWORD PTR [rcx+0x80],rax
   14002ea96:	lea    rax,[rip+0x1080b]        # 0x14003f2a8
   14002ea9d:	mov    QWORD PTR [rcx+0x88],rax
   14002eaa4:	mov    DWORD PTR [rcx+0x90],0xc0000001
   14002eaae:	mov    rdi,QWORD PTR [rip+0x200ab]        # 0x14004eb60
   14002eab5:	mov    rax,QWORD PTR [rdi]
   14002eab8:	mov    rbx,QWORD PTR [rax+0x10]
   14002eabc:	mov    rcx,rbx
   14002eabf:	call   QWORD PTR [rip+0xec63]        # 0x14003d728
   14002eac5:	mov    rcx,rdi
   14002eac8:	call   rbx
   14002eaca:	nop
   14002eacb:	mov    rcx,rsi
   14002eace:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ead3:	mov    rsi,QWORD PTR [rsp+0x50]
   14002ead8:	add    rsp,0x30
   14002eadc:	pop    rdi
   14002eadd:	jmp    0x14002eaf4
   14002eae2:	mov    rcx,QWORD PTR [rdx+0x40]
   14002eae9:	jmp    0x14002eaf4
   14002eaee:	int3   
   14002eaef:	int3   
   14002eaf0:	int3   
   14002eaf1:	int3   
   14002eaf2:	int3   
   14002eaf3:	int3   
   14002eaf4:	mov    rax,rsp
   14002eaf7:	mov    QWORD PTR [rax+0x8],rcx
   14002eafb:	push   rdi
   14002eafc:	sub    rsp,0x30
   14002eb00:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002eb08:	mov    QWORD PTR [rax+0x10],rbx
   14002eb0c:	mov    QWORD PTR [rax+0x18],rsi
   14002eb10:	mov    rdi,rcx
   14002eb13:	lea    rbx,[rcx+0x1a8]
   14002eb1a:	mov    rcx,rbx
   14002eb1d:	call   0x14003a35c
   14002eb22:	mov    eax,DWORD PTR [rdi+0x118]
   14002eb28:	test   al,0x1
   14002eb2a:	je     0x14002eb3d
   14002eb2c:	and    eax,0xfffffffe
   14002eb2f:	mov    DWORD PTR [rdi+0x118],eax
   14002eb35:	mov    rcx,rdi
   14002eb38:	call   0x14002e19c
   14002eb3d:	mov    rcx,rbx
   14002eb40:	call   0x14003a35c
   14002eb45:	mov    rcx,QWORD PTR [rdi+0x180]
   14002eb4c:	call   QWORD PTR [rip+0x2456e]        # 0x1400530c0
   14002eb52:	mov    rcx,QWORD PTR [rdi+0x178]
   14002eb59:	call   QWORD PTR [rip+0x24561]        # 0x1400530c0
   14002eb5f:	mov    rcx,QWORD PTR [rdi+0x170]
   14002eb66:	call   QWORD PTR [rip+0x24554]        # 0x1400530c0
   14002eb6c:	mov    rbx,QWORD PTR [rdi+0x110]
   14002eb73:	test   rbx,rbx
   14002eb76:	je     0x14002ebb9
   14002eb78:	mov    rax,QWORD PTR [rbx]
   14002eb7b:	mov    rsi,QWORD PTR [rax+0x10]
   14002eb7f:	lea    rax,[rip+0xfffffffffffdd95a]        # 0x14000c4e0
   14002eb86:	cmp    rsi,rax
   14002eb89:	jne    0x14002eb95
   14002eb8b:	mov    rcx,rbx
   14002eb8e:	call   0x14000c4e0
   14002eb93:	jmp    0x14002ebb9
   14002eb95:	lea    rax,[rip+0xfffffffffffddb14]        # 0x14000c6b0
   14002eb9c:	cmp    rsi,rax
   14002eb9f:	jne    0x14002ebab
   14002eba1:	mov    rcx,rbx
   14002eba4:	call   0x14000c6b0
   14002eba9:	jmp    0x14002ebb9
   14002ebab:	mov    rcx,rsi
   14002ebae:	call   QWORD PTR [rip+0xeb74]        # 0x14003d728
   14002ebb4:	mov    rcx,rbx
   14002ebb7:	call   rsi
   14002ebb9:	mov    rsi,QWORD PTR [rdi+0x108]
   14002ebc0:	test   rsi,rsi
   14002ebc3:	je     0x14002ebda
   14002ebc5:	mov    rax,QWORD PTR [rsi]
   14002ebc8:	mov    rbx,QWORD PTR [rax+0x10]
   14002ebcc:	mov    rcx,rbx
   14002ebcf:	call   QWORD PTR [rip+0xeb53]        # 0x14003d728
   14002ebd5:	mov    rcx,rsi
   14002ebd8:	call   rbx
   14002ebda:	lea    rcx,[rdi+0xd8]
   14002ebe1:	call   QWORD PTR [rip+0xe7d1]        # 0x14003d3b8
   14002ebe7:	mov    rsi,QWORD PTR [rdi+0xd0]
   14002ebee:	test   rsi,rsi
   14002ebf1:	je     0x14002ec08
   14002ebf3:	mov    rax,QWORD PTR [rsi]
   14002ebf6:	mov    rbx,QWORD PTR [rax+0x10]
   14002ebfa:	mov    rcx,rbx
   14002ebfd:	call   QWORD PTR [rip+0xeb25]        # 0x14003d728
   14002ec03:	mov    rcx,rsi
   14002ec06:	call   rbx
   14002ec08:	mov    rsi,QWORD PTR [rdi+0xc8]
   14002ec0f:	test   rsi,rsi
   14002ec12:	je     0x14002ec29
   14002ec14:	mov    rax,QWORD PTR [rsi]
   14002ec17:	mov    rbx,QWORD PTR [rax+0x10]
   14002ec1b:	mov    rcx,rbx
   14002ec1e:	call   QWORD PTR [rip+0xeb04]        # 0x14003d728
   14002ec24:	mov    rcx,rsi
   14002ec27:	call   rbx
   14002ec29:	mov    rcx,rdi
   14002ec2c:	call   0x14000da40
   14002ec31:	nop
   14002ec32:	lea    rcx,[rdi+0x98]
   14002ec39:	cmp    BYTE PTR [rcx+0x28],0x0
   14002ec3d:	je     0x14002ec49
   14002ec3f:	mov    BYTE PTR [rcx+0x28],0x0
   14002ec43:	call   QWORD PTR [rip+0xe76f]        # 0x14003d3b8
   14002ec49:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ec4e:	mov    rsi,QWORD PTR [rsp+0x50]
   14002ec53:	add    rsp,0x30
   14002ec57:	pop    rdi
   14002ec58:	ret    
   14002ec59:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ec60:	add    rcx,0x90
   14002ec67:	jmp    0x140029fd8
   14002ec6c:	int3   
   14002ec6d:	int3   
   14002ec6e:	int3   
   14002ec6f:	int3   
   14002ec70:	int3   
   14002ec71:	int3   
   14002ec72:	int3   
   14002ec73:	int3   
   14002ec74:	int3   
   14002ec75:	int3   
   14002ec76:	int3   
   14002ec77:	int3   
   14002ec78:	int3   
   14002ec79:	int3   
   14002ec7a:	int3   
   14002ec7b:	int3   
   14002ec7c:	int3   
   14002ec7d:	int3   
   14002ec7e:	int3   
   14002ec7f:	int3   
   14002ec80:	mov    QWORD PTR [rsp+0x8],rbx
   14002ec85:	push   rdi
   14002ec86:	sub    rsp,0x20
   14002ec8a:	mov    ebx,edx
   14002ec8c:	mov    rdi,rcx
   14002ec8f:	call   0x14002e938
   14002ec94:	test   bl,0x1
   14002ec97:	je     0x14002eca1
   14002ec99:	mov    rcx,rdi
   14002ec9c:	call   0x140013de0
   14002eca1:	mov    rax,rdi
   14002eca4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002eca9:	add    rsp,0x20
   14002ecad:	pop    rdi
   14002ecae:	ret    
   14002ecaf:	int3   
   14002ecb0:	int3   
   14002ecb1:	int3   
   14002ecb2:	int3   
   14002ecb3:	int3   
   14002ecb4:	int3   
   14002ecb5:	int3   
   14002ecb6:	int3   
   14002ecb7:	int3   
   14002ecb8:	int3   
   14002ecb9:	int3   
   14002ecba:	int3   
   14002ecbb:	int3   
   14002ecbc:	int3   
   14002ecbd:	int3   
   14002ecbe:	int3   
   14002ecbf:	int3   
   14002ecc0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ecc5:	push   rdi
   14002ecc6:	sub    rsp,0x20
   14002ecca:	mov    ebx,edx
   14002eccc:	mov    rdi,rcx
   14002eccf:	call   0x14002e9bc
   14002ecd4:	test   bl,0x1
   14002ecd7:	je     0x14002ece1
   14002ecd9:	mov    rcx,rdi
   14002ecdc:	call   0x140013de0
   14002ece1:	mov    rax,rdi
   14002ece4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ece9:	add    rsp,0x20
   14002eced:	pop    rdi
   14002ecee:	ret    
   14002ecef:	int3   
   14002ecf0:	int3   
   14002ecf1:	int3   
   14002ecf2:	int3   
   14002ecf3:	int3   
   14002ecf4:	int3   
   14002ecf5:	int3   
   14002ecf6:	int3   
   14002ecf7:	int3   
   14002ecf8:	int3   
   14002ecf9:	int3   
   14002ecfa:	int3   
   14002ecfb:	int3   
   14002ecfc:	int3   
   14002ecfd:	int3   
   14002ecfe:	int3   
   14002ecff:	int3   
   14002ed00:	mov    QWORD PTR [rsp+0x8],rbx
   14002ed05:	push   rdi
   14002ed06:	sub    rsp,0x20
   14002ed0a:	mov    ebx,edx
   14002ed0c:	mov    rdi,rcx
   14002ed0f:	call   0x14002eaf4
   14002ed14:	test   bl,0x1
   14002ed17:	je     0x14002ed21
   14002ed19:	mov    rcx,rdi
   14002ed1c:	call   0x140013de0
   14002ed21:	mov    rax,rdi
   14002ed24:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ed29:	add    rsp,0x20
   14002ed2d:	pop    rdi
   14002ed2e:	ret    
   14002ed2f:	int3   
   14002ed30:	int3   
   14002ed31:	int3   
   14002ed32:	int3   
   14002ed33:	int3   
   14002ed34:	int3   
   14002ed35:	int3   
   14002ed36:	int3   
   14002ed37:	int3   
   14002ed38:	int3   
   14002ed39:	int3   
   14002ed3a:	int3   
   14002ed3b:	int3   
   14002ed3c:	int3   
   14002ed3d:	int3   
   14002ed3e:	int3   
   14002ed3f:	int3   
   14002ed40:	mov    QWORD PTR [rsp+0x8],rbx
   14002ed45:	push   rdi
   14002ed46:	sub    rsp,0x20
   14002ed4a:	mov    ebx,edx
   14002ed4c:	mov    rdi,rcx
   14002ed4f:	call   0x14002ea54
   14002ed54:	test   bl,0x1
   14002ed57:	je     0x14002ed61
   14002ed59:	mov    rcx,rdi
   14002ed5c:	call   0x140013de0
   14002ed61:	mov    rax,rdi
   14002ed64:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ed69:	add    rsp,0x20
   14002ed6d:	pop    rdi
   14002ed6e:	ret    
   14002ed6f:	int3   
   14002ed70:	int3   
   14002ed71:	int3   
   14002ed72:	int3   
   14002ed73:	int3   
   14002ed74:	int3   
   14002ed75:	int3   
   14002ed76:	int3   
   14002ed77:	int3   
   14002ed78:	int3   
   14002ed79:	int3   
   14002ed7a:	int3   
   14002ed7b:	int3   
   14002ed7c:	int3   
   14002ed7d:	int3   
   14002ed7e:	int3   
   14002ed7f:	int3   
   14002ed80:	mov    QWORD PTR [rsp+0x8],rbx
   14002ed85:	push   rdi
   14002ed86:	sub    rsp,0x20
   14002ed8a:	mov    rdi,QWORD PTR [rcx+0x20]
   14002ed8e:	mov    rax,QWORD PTR [rdi]
   14002ed91:	mov    rbx,QWORD PTR [rax+0x8]
   14002ed95:	mov    rcx,rbx
   14002ed98:	call   QWORD PTR [rip+0xe98a]        # 0x14003d728
   14002ed9e:	mov    rcx,rdi
   14002eda1:	mov    rax,rbx
   14002eda4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002eda9:	add    rsp,0x20
   14002edad:	pop    rdi
   14002edae:	rex.W jmp rax
   14002edb1:	int3   
   14002edb2:	int3   
   14002edb3:	int3   
   14002edb4:	int3   
   14002edb5:	int3   
   14002edb6:	int3   
   14002edb7:	int3   
   14002edb8:	int3   
   14002edb9:	int3   
   14002edba:	int3   
   14002edbb:	int3   
   14002edbc:	int3   
   14002edbd:	int3   
   14002edbe:	int3   
   14002edbf:	int3   
   14002edc0:	mov    QWORD PTR [rsp+0x8],rbx
   14002edc5:	push   rdi
   14002edc6:	sub    rsp,0x20
   14002edca:	mov    rdi,QWORD PTR [rcx+0x90]
   14002edd1:	mov    rax,QWORD PTR [rdi]
   14002edd4:	mov    rbx,QWORD PTR [rax+0x8]
   14002edd8:	mov    rcx,rbx
   14002eddb:	call   QWORD PTR [rip+0xe947]        # 0x14003d728
   14002ede1:	mov    rcx,rdi
   14002ede4:	mov    rax,rbx
   14002ede7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002edec:	add    rsp,0x20
   14002edf0:	pop    rdi
   14002edf1:	rex.W jmp rax
   14002edf4:	int3   
   14002edf5:	int3   
   14002edf6:	int3   
   14002edf7:	int3   
   14002edf8:	int3   
   14002edf9:	int3   
   14002edfa:	int3   
   14002edfb:	int3   
   14002edfc:	mov    QWORD PTR [rsp+0x8],rbx
   14002ee01:	push   rdi
   14002ee02:	sub    rsp,0x20
   14002ee06:	mov    rbx,rcx
   14002ee09:	mov    rdi,rdx
   14002ee0c:	mov    rcx,rdx
   14002ee0f:	call   QWORD PTR [rip+0x241fb]        # 0x140053010
   14002ee15:	test   eax,eax
   14002ee17:	je     0x14002ee49
   14002ee19:	mov    rcx,QWORD PTR [rbx]
   14002ee1c:	lea    r8,[rsp+0x40]
   14002ee21:	and    QWORD PTR [rsp+0x40],0x0
   14002ee27:	mov    rdx,rdi
   14002ee2a:	call   QWORD PTR [rip+0x24240]        # 0x140053070
   14002ee30:	mov    edi,eax
   14002ee32:	test   eax,eax
   14002ee34:	js     0x14002ee47
   14002ee36:	mov    rcx,QWORD PTR [rbx]
   14002ee39:	call   QWORD PTR [rip+0x24281]        # 0x1400530c0
   14002ee3f:	mov    rcx,QWORD PTR [rsp+0x40]
   14002ee44:	mov    QWORD PTR [rbx],rcx
   14002ee47:	mov    eax,edi
   14002ee49:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ee4e:	add    rsp,0x20
   14002ee52:	pop    rdi
   14002ee53:	ret    
   14002ee54:	int3   
   14002ee55:	int3   
   14002ee56:	int3   
   14002ee57:	int3   
   14002ee58:	int3   
   14002ee59:	int3   
   14002ee5a:	int3   
   14002ee5b:	int3   
   14002ee5c:	int3   
   14002ee5d:	int3   
   14002ee5e:	int3   
   14002ee5f:	int3   
   14002ee60:	mov    QWORD PTR [rsp+0x8],rbx
   14002ee65:	mov    QWORD PTR [rsp+0x10],rbp
   14002ee6a:	mov    QWORD PTR [rsp+0x18],rsi
   14002ee6f:	push   rdi
   14002ee70:	sub    rsp,0x30
   14002ee74:	mov    rsi,rcx
   14002ee77:	xor    edi,edi
   14002ee79:	add    rcx,0x58
   14002ee7d:	call   QWORD PTR [rip+0xe545]        # 0x14003d3c8
   14002ee83:	mov    rax,QWORD PTR [rsi+0x90]
   14002ee8a:	test   rax,rax
   14002ee8d:	je     0x14002eea7
   14002ee8f:	mov    rdi,rax
   14002ee92:	mov    rax,QWORD PTR [rax]
   14002ee95:	mov    rbx,QWORD PTR [rax+0x8]
   14002ee99:	mov    rcx,rbx
   14002ee9c:	call   QWORD PTR [rip+0xe886]        # 0x14003d728
   14002eea2:	mov    rcx,rdi
   14002eea5:	call   rbx
   14002eea7:	lea    rcx,[rsi+0x58]
   14002eeab:	mov    DWORD PTR [rsi+0xb8],0x1
   14002eeb5:	call   QWORD PTR [rip+0xe51d]        # 0x14003d3d8
   14002eebb:	call   0x14000e048
   14002eec0:	mov    rbx,rax
   14002eec3:	test   rax,rax
   14002eec6:	je     0x14002eeee
   14002eec8:	call   0x140035278
   14002eecd:	test   al,al
   14002eecf:	jne    0x14002eee6
   14002eed1:	mov    r9b,0x1
   14002eed4:	mov    BYTE PTR [rsp+0x20],0x1
   14002eed9:	xor    r8d,r8d
   14002eedc:	xor    edx,edx
   14002eede:	mov    rcx,rbx
   14002eee1:	call   0x140012368
   14002eee6:	mov    rcx,rbx
   14002eee9:	call   0x14000dc9c
   14002eeee:	and    DWORD PTR [rsi+0xb8],0x0
   14002eef5:	test   rdi,rdi
   14002eef8:	je     0x14002ef0f
   14002eefa:	mov    rax,QWORD PTR [rdi]
   14002eefd:	mov    rbx,QWORD PTR [rax+0x10]
   14002ef01:	mov    rcx,rbx
   14002ef04:	call   QWORD PTR [rip+0xe81e]        # 0x14003d728
   14002ef0a:	mov    rcx,rdi
   14002ef0d:	call   rbx
   14002ef0f:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ef14:	xor    eax,eax
   14002ef16:	mov    rbp,QWORD PTR [rsp+0x48]
   14002ef1b:	mov    rsi,QWORD PTR [rsp+0x50]
   14002ef20:	add    rsp,0x30
   14002ef24:	pop    rdi
   14002ef25:	ret    
   14002ef26:	int3   
   14002ef27:	int3   
   14002ef28:	int3   
   14002ef29:	int3   
   14002ef2a:	int3   
   14002ef2b:	int3   
   14002ef2c:	mov    rax,rsp
   14002ef2f:	mov    QWORD PTR [rax+0x18],r8
   14002ef33:	mov    QWORD PTR [rax+0x10],rdx
   14002ef37:	push   rsi
   14002ef38:	push   rdi
   14002ef39:	push   r12
   14002ef3b:	push   r14
   14002ef3d:	push   r15
   14002ef3f:	sub    rsp,0x40
   14002ef43:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   14002ef4b:	mov    QWORD PTR [rax+0x8],rbx
   14002ef4f:	mov    r15,r8
   14002ef52:	mov    r12,rdx
   14002ef55:	mov    rbx,rcx
   14002ef58:	xor    edi,edi
   14002ef5a:	test   r8,r8
   14002ef5d:	jne    0x14002ef69
   14002ef5f:	mov    eax,0x80004003
   14002ef64:	jmp    0x14002f03c
   14002ef69:	mov    QWORD PTR [r8],rdi
   14002ef6c:	mov    esi,0x8007000e
   14002ef71:	mov    DWORD PTR [rsp+0x88],esi
   14002ef78:	mov    QWORD PTR [rsp+0x20],rdi
   14002ef7d:	mov    ecx,0x110
   14002ef82:	call   0x140013d94
   14002ef87:	mov    QWORD PTR [rsp+0x30],rax
   14002ef8c:	test   rax,rax
   14002ef8f:	je     0x14002efa1
   14002ef91:	mov    rdx,rbx
   14002ef94:	mov    rcx,rax
   14002ef97:	call   0x14002e754
   14002ef9c:	mov    r14,rax
   14002ef9f:	jmp    0x14002efa4
   14002efa1:	mov    r14,rdi
   14002efa4:	mov    QWORD PTR [rsp+0x20],r14
   14002efa9:	jmp    0x14002efc6
   14002efab:	xor    edi,edi
   14002efad:	mov    r15,QWORD PTR [rsp+0x80]
   14002efb5:	mov    r12,QWORD PTR [rsp+0x78]
   14002efba:	mov    esi,DWORD PTR [rsp+0x88]
   14002efc1:	mov    r14,QWORD PTR [rsp+0x20]
   14002efc6:	test   r14,r14
   14002efc9:	je     0x14002f03a
   14002efcb:	lea    rcx,[r14+0x40]
   14002efcf:	call   0x14000c130
   14002efd4:	mov    esi,eax
   14002efd6:	test   eax,eax
   14002efd8:	js     0x14002efdf
   14002efda:	mov    BYTE PTR [r14+0x68],0x1
   14002efdf:	cmovns esi,edi
   14002efe2:	test   esi,esi
   14002efe4:	js     0x14002effe
   14002efe6:	mov    esi,edi
   14002efe8:	mov    eax,0x80070005
   14002efed:	cmp    BYTE PTR [rip+0x1fb87],dil        # 0x14004eb7b
   14002eff4:	cmovne esi,eax
   14002eff7:	test   esi,esi
   14002eff9:	cmovns esi,edi
   14002effc:	test   esi,esi
   14002effe:	jne    0x14002f020
   14002f000:	mov    rax,QWORD PTR [r14]
   14002f003:	mov    rbx,QWORD PTR [rax]
   14002f006:	mov    rcx,rbx
   14002f009:	call   QWORD PTR [rip+0xe719]        # 0x14003d728
   14002f00f:	mov    r8,r15
   14002f012:	mov    rdx,r12
   14002f015:	mov    rcx,r14
   14002f018:	call   rbx
   14002f01a:	mov    esi,eax
   14002f01c:	test   eax,eax
   14002f01e:	je     0x14002f03a
   14002f020:	mov    r8,QWORD PTR [r14]
   14002f023:	mov    rbx,QWORD PTR [r8+0x18]
   14002f027:	mov    rcx,rbx
   14002f02a:	call   QWORD PTR [rip+0xe6f8]        # 0x14003d728
   14002f030:	mov    edx,0x1
   14002f035:	mov    rcx,r14
   14002f038:	call   rbx
   14002f03a:	mov    eax,esi
   14002f03c:	mov    rbx,QWORD PTR [rsp+0x70]
   14002f041:	add    rsp,0x40
   14002f045:	pop    r15
   14002f047:	pop    r14
   14002f049:	pop    r12
   14002f04b:	pop    rdi
   14002f04c:	pop    rsi
   14002f04d:	ret    
   14002f04e:	mov    rcx,QWORD PTR [rdx+0x30]
   14002f055:	jmp    0x140013de0
   14002f05a:	mov    QWORD PTR [rsp+0x10],rdx
   14002f05f:	push   rbp
   14002f060:	sub    rsp,0x20
   14002f064:	mov    rbp,rdx
   14002f067:	lea    rax,[rip+0xffffffffffffff3d]        # 0x14002efab
   14002f06e:	add    rsp,0x20
   14002f072:	pop    rbp
   14002f073:	ret    
   14002f074:	int3   
   14002f075:	int3   
   14002f076:	int3   
   14002f077:	int3   
   14002f078:	int3   
   14002f079:	int3   
   14002f07a:	int3   
   14002f07b:	int3   
   14002f07c:	mov    rax,rsp
   14002f07f:	mov    QWORD PTR [rax+0x18],r8
   14002f083:	mov    QWORD PTR [rax+0x10],rdx
   14002f087:	push   rsi
   14002f088:	push   rdi
   14002f089:	push   r12
   14002f08b:	push   r14
   14002f08d:	push   r15
   14002f08f:	sub    rsp,0x40
   14002f093:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   14002f09b:	mov    QWORD PTR [rax+0x8],rbx
   14002f09f:	mov    r15,r8
   14002f0a2:	mov    r12,rdx
   14002f0a5:	mov    rbx,rcx
   14002f0a8:	xor    edi,edi
   14002f0aa:	test   r8,r8
   14002f0ad:	jne    0x14002f0b9
   14002f0af:	mov    eax,0x80004003
   14002f0b4:	jmp    0x14002f17c
   14002f0b9:	mov    QWORD PTR [r8],rdi
   14002f0bc:	mov    esi,0x8007000e
   14002f0c1:	mov    DWORD PTR [rsp+0x88],esi
   14002f0c8:	mov    QWORD PTR [rsp+0x20],rdi
   14002f0cd:	mov    ecx,0x1c8
   14002f0d2:	call   0x140013d94
   14002f0d7:	mov    QWORD PTR [rsp+0x30],rax
   14002f0dc:	test   rax,rax
   14002f0df:	je     0x14002f0f1
   14002f0e1:	mov    rdx,rbx
   14002f0e4:	mov    rcx,rax
   14002f0e7:	call   0x14002e81c
   14002f0ec:	mov    r14,rax
   14002f0ef:	jmp    0x14002f0f4
   14002f0f1:	mov    r14,rdi
   14002f0f4:	mov    QWORD PTR [rsp+0x20],r14
   14002f0f9:	jmp    0x14002f116
   14002f0fb:	xor    edi,edi
   14002f0fd:	mov    r15,QWORD PTR [rsp+0x80]
   14002f105:	mov    r12,QWORD PTR [rsp+0x78]
   14002f10a:	mov    esi,DWORD PTR [rsp+0x88]
   14002f111:	mov    r14,QWORD PTR [rsp+0x20]
   14002f116:	test   r14,r14
   14002f119:	je     0x14002f17a
   14002f11b:	lea    rbx,[r14+0xb0]
   14002f122:	mov    rcx,rbx
   14002f125:	call   0x14000c130
   14002f12a:	mov    esi,eax
   14002f12c:	test   eax,eax
   14002f12e:	js     0x14002f134
   14002f130:	mov    BYTE PTR [rbx+0x28],0x1
   14002f134:	cmovns esi,edi
   14002f137:	test   esi,esi
   14002f139:	cmovns esi,edi
   14002f13c:	test   esi,esi
   14002f13e:	jne    0x14002f160
   14002f140:	mov    rax,QWORD PTR [r14]
   14002f143:	mov    rbx,QWORD PTR [rax]
   14002f146:	mov    rcx,rbx
   14002f149:	call   QWORD PTR [rip+0xe5d9]        # 0x14003d728
   14002f14f:	mov    r8,r15
   14002f152:	mov    rdx,r12
   14002f155:	mov    rcx,r14
   14002f158:	call   rbx
   14002f15a:	mov    esi,eax
   14002f15c:	test   eax,eax
   14002f15e:	je     0x14002f17a
   14002f160:	mov    r8,QWORD PTR [r14]
   14002f163:	mov    rbx,QWORD PTR [r8+0x18]
   14002f167:	mov    rcx,rbx
   14002f16a:	call   QWORD PTR [rip+0xe5b8]        # 0x14003d728
   14002f170:	mov    edx,0x1
   14002f175:	mov    rcx,r14
   14002f178:	call   rbx
   14002f17a:	mov    eax,esi
   14002f17c:	mov    rbx,QWORD PTR [rsp+0x70]
   14002f181:	add    rsp,0x40
   14002f185:	pop    r15
   14002f187:	pop    r14
   14002f189:	pop    r12
   14002f18b:	pop    rdi
   14002f18c:	pop    rsi
   14002f18d:	ret    
   14002f18e:	mov    rcx,QWORD PTR [rdx+0x30]
   14002f195:	jmp    0x140013de0
   14002f19a:	mov    QWORD PTR [rsp+0x10],rdx
   14002f19f:	push   rbp
   14002f1a0:	sub    rsp,0x20
   14002f1a4:	mov    rbp,rdx
   14002f1a7:	lea    rax,[rip+0xffffffffffffff4d]        # 0x14002f0fb
   14002f1ae:	add    rsp,0x20
   14002f1b2:	pop    rbp
   14002f1b3:	ret    
   14002f1b4:	int3   
   14002f1b5:	int3   
   14002f1b6:	int3   
   14002f1b7:	int3   
   14002f1b8:	int3   
   14002f1b9:	int3   
   14002f1ba:	int3   
   14002f1bb:	int3   
   14002f1bc:	int3   
   14002f1bd:	int3   
   14002f1be:	int3   
   14002f1bf:	int3   
   14002f1c0:	rex push rbp
   14002f1c2:	push   rbx
   14002f1c3:	push   rsi
   14002f1c4:	push   rdi
   14002f1c5:	push   r12
   14002f1c7:	push   r14
   14002f1c9:	push   r15
   14002f1cb:	mov    rbp,rsp
   14002f1ce:	sub    rsp,0x40
   14002f1d2:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   14002f1da:	mov    r15,r8
   14002f1dd:	mov    r12,rdx
   14002f1e0:	mov    rsi,rcx
   14002f1e3:	and    QWORD PTR [rbp+0x40],0x0
   14002f1e8:	xor    edi,edi
   14002f1ea:	mov    QWORD PTR [rbp-0x10],rdi
   14002f1ee:	lea    r14,[rcx+0xd8]
   14002f1f5:	mov    rcx,r14
   14002f1f8:	call   QWORD PTR [rip+0xe1ca]        # 0x14003d3c8
   14002f1fe:	mov    rdx,QWORD PTR [rsi+0x110]
   14002f205:	test   rdx,rdx
   14002f208:	je     0x14002f217
   14002f20a:	lea    rcx,[rbp-0x10]
   14002f20e:	call   0x14000dcd0
   14002f213:	mov    rdi,QWORD PTR [rbp-0x10]
   14002f217:	mov    rsi,QWORD PTR [rsi+0xd0]
   14002f21e:	test   rsi,rsi
   14002f221:	je     0x14002f24e
   14002f223:	mov    rax,QWORD PTR [rsi]
   14002f226:	mov    rbx,QWORD PTR [rax+0x18]
   14002f22a:	mov    rcx,rbx
   14002f22d:	call   QWORD PTR [rip+0xe4f5]        # 0x14003d728
   14002f233:	lea    rax,[rbp+0x40]
   14002f237:	mov    QWORD PTR [rsp+0x20],rax
   14002f23c:	lea    rdx,[rip+0x1422d]        # 0x140043470
   14002f243:	mov    r9,rdx
   14002f246:	xor    r8d,r8d
   14002f249:	mov    rcx,rsi
   14002f24c:	call   rbx
   14002f24e:	mov    rcx,r14
   14002f251:	call   QWORD PTR [rip+0xe181]        # 0x14003d3d8
   14002f257:	and    QWORD PTR [rbp+0x58],0x0
   14002f25c:	mov    rbx,QWORD PTR [rbp+0x40]
   14002f260:	test   rbx,rbx
   14002f263:	je     0x14002f3a6
   14002f269:	and    QWORD PTR [rbp+0x50],0x0
   14002f26e:	mov    rax,QWORD PTR [rbx]
   14002f271:	mov    rsi,QWORD PTR [rax]
   14002f274:	mov    rcx,rsi
   14002f277:	call   QWORD PTR [rip+0xe4ab]        # 0x14003d728
   14002f27d:	lea    r8,[rbp+0x50]
   14002f281:	lea    rdx,[rip+0x10920]        # 0x14003fba8
   14002f288:	mov    rcx,rbx
   14002f28b:	call   rsi
   14002f28d:	mov    rbx,QWORD PTR [rbp+0x50]
   14002f291:	test   rbx,rbx
   14002f294:	je     0x14002f388
   14002f29a:	mov    rbx,QWORD PTR [rbp+0x40]
   14002f29e:	mov    rax,QWORD PTR [rbx]
   14002f2a1:	mov    rsi,QWORD PTR [rax+0x28]
   14002f2a5:	mov    rcx,rsi
   14002f2a8:	call   QWORD PTR [rip+0xe47a]        # 0x14003d728
   14002f2ae:	mov    rcx,rbx
   14002f2b1:	call   rsi
   14002f2b3:	mov    rbx,QWORD PTR [rbp+0x50]
   14002f2b7:	mov    rax,QWORD PTR [rbx]
   14002f2ba:	mov    rsi,QWORD PTR [rax+0x18]
   14002f2be:	mov    rcx,rsi
   14002f2c1:	call   QWORD PTR [rip+0xe461]        # 0x14003d728
   14002f2c7:	xor    edx,edx
   14002f2c9:	mov    r8d,0xc8
   14002f2cf:	mov    rcx,rbx
   14002f2d2:	call   rsi
   14002f2d4:	cmp    eax,0x80010115
   14002f2d9:	jne    0x14002f367
   14002f2df:	and    QWORD PTR [rbp+0x48],0x0
   14002f2e4:	mov    rbx,QWORD PTR [rbp+0x40]
   14002f2e8:	mov    rax,QWORD PTR [rbx]
   14002f2eb:	mov    rsi,QWORD PTR [rax]
   14002f2ee:	mov    rcx,rsi
   14002f2f1:	call   QWORD PTR [rip+0xe431]        # 0x14003d728
   14002f2f7:	lea    r8,[rbp+0x48]
   14002f2fb:	lea    rdx,[rip+0x10896]        # 0x14003fb98
   14002f302:	mov    rcx,rbx
   14002f305:	call   rsi
   14002f307:	test   eax,eax
   14002f309:	js     0x14002f349
   14002f30b:	mov    rbx,QWORD PTR [rbp+0x48]
   14002f30f:	mov    rax,QWORD PTR [rbx]
   14002f312:	mov    rsi,QWORD PTR [rax+0x18]
   14002f316:	mov    rcx,rsi
   14002f319:	call   QWORD PTR [rip+0xe409]        # 0x14003d728
   14002f31f:	xor    edx,edx
   14002f321:	mov    rcx,rbx
   14002f324:	call   rsi
   14002f326:	mov    rsi,QWORD PTR [rbp+0x48]
   14002f32a:	test   rsi,rsi
   14002f32d:	je     0x14002f34d
   14002f32f:	and    QWORD PTR [rbp+0x48],0x0
   14002f334:	mov    rax,QWORD PTR [rsi]
   14002f337:	mov    rbx,QWORD PTR [rax+0x10]
   14002f33b:	mov    rcx,rbx
   14002f33e:	call   QWORD PTR [rip+0xe3e4]        # 0x14003d728
   14002f344:	mov    rcx,rsi
   14002f347:	call   rbx
   14002f349:	mov    rsi,QWORD PTR [rbp+0x48]
   14002f34d:	test   rsi,rsi
   14002f350:	je     0x14002f367
   14002f352:	mov    rax,QWORD PTR [rsi]
   14002f355:	mov    rbx,QWORD PTR [rax+0x10]
   14002f359:	mov    rcx,rbx
   14002f35c:	call   QWORD PTR [rip+0xe3c6]        # 0x14003d728
   14002f362:	mov    rcx,rsi
   14002f365:	call   rbx
   14002f367:	mov    rbx,QWORD PTR [rbp+0x40]
   14002f36b:	mov    rax,QWORD PTR [rbx]
   14002f36e:	mov    rsi,QWORD PTR [rax+0x30]
   14002f372:	mov    rcx,rsi
   14002f375:	call   QWORD PTR [rip+0xe3ad]        # 0x14003d728
   14002f37b:	lea    rdx,[rbp+0x58]
   14002f37f:	mov    rcx,rbx
   14002f382:	call   rsi
   14002f384:	mov    rbx,QWORD PTR [rbp+0x50]
   14002f388:	test   rbx,rbx
   14002f38b:	je     0x14002f3a2
   14002f38d:	mov    rax,QWORD PTR [rbx]
   14002f390:	mov    rsi,QWORD PTR [rax+0x10]
   14002f394:	mov    rcx,rsi
   14002f397:	call   QWORD PTR [rip+0xe38b]        # 0x14003d728
   14002f39d:	mov    rcx,rbx
   14002f3a0:	call   rsi
   14002f3a2:	mov    rbx,QWORD PTR [rbp+0x40]
   14002f3a6:	mov    rax,QWORD PTR [rbp+0x58]
   14002f3aa:	mov    QWORD PTR [r15],rax
   14002f3ad:	and    QWORD PTR [rbp+0x58],0x0
   14002f3b2:	mov    QWORD PTR [r12],rdi
   14002f3b6:	test   rbx,rbx
   14002f3b9:	je     0x14002f3d0
   14002f3bb:	mov    rax,QWORD PTR [rbx]
   14002f3be:	mov    rdi,QWORD PTR [rax+0x10]
   14002f3c2:	mov    rcx,rdi
   14002f3c5:	call   QWORD PTR [rip+0xe35d]        # 0x14003d728
   14002f3cb:	mov    rcx,rbx
   14002f3ce:	call   rdi
   14002f3d0:	xor    eax,eax
   14002f3d2:	add    rsp,0x40
   14002f3d6:	pop    r15
   14002f3d8:	pop    r14
   14002f3da:	pop    r12
   14002f3dc:	pop    rdi
   14002f3dd:	pop    rsi
   14002f3de:	pop    rbx
   14002f3df:	pop    rbp
   14002f3e0:	ret    
   14002f3e1:	lea    rcx,[rdx+0x80]
   14002f3e8:	jmp    0x14000f4f0
   14002f3ed:	lea    rcx,[rdx+0x30]
   14002f3f4:	jmp    0x140029f74
   14002f3f9:	lea    rcx,[rdx+0x90]
   14002f400:	jmp    0x14000f4f0
   14002f405:	lea    rcx,[rdx+0x88]
   14002f40c:	jmp    0x14000f4f0
   14002f411:	int3   
   14002f412:	int3   
   14002f413:	int3   
   14002f414:	int3   
   14002f415:	int3   
   14002f416:	int3   
   14002f417:	int3   
   14002f418:	int3   
   14002f419:	int3   
   14002f41a:	int3   
   14002f41b:	int3   
   14002f41c:	int3   
   14002f41d:	int3   
   14002f41e:	int3   
   14002f41f:	int3   
   14002f420:	mov    r11,rsp
   14002f423:	push   rsi
   14002f424:	push   rdi
   14002f425:	push   r12
   14002f427:	push   r14
   14002f429:	push   r15
   14002f42b:	sub    rsp,0x40
   14002f42f:	mov    QWORD PTR [r11-0x38],0xfffffffffffffffe
   14002f437:	mov    QWORD PTR [r11+0x8],rbx
   14002f43b:	mov    QWORD PTR [r11+0x18],rbp
   14002f43f:	mov    r14,r9
   14002f442:	mov    r15,r8
   14002f445:	mov    rbp,rdx
   14002f448:	test   rdx,rdx
   14002f44b:	je     0x14002f50c
   14002f451:	test   r8,r8
   14002f454:	je     0x14002f50c
   14002f45a:	test   r9,r9
   14002f45d:	je     0x14002f50c
   14002f463:	mov    rsi,QWORD PTR [rsp+0x90]
   14002f46b:	test   rsi,rsi
   14002f46e:	je     0x14002f50c
   14002f474:	and    QWORD PTR [rdx],0x0
   14002f478:	and    QWORD PTR [r8],0x0
   14002f47c:	and    QWORD PTR [r9],0x0
   14002f480:	or     eax,0xffffffff
   14002f483:	mov    WORD PTR [rsi],ax
   14002f486:	lea    r12d,[rax+0x2]
   14002f48a:	mov    rdi,QWORD PTR [rcx+0x40]
   14002f48e:	test   rdi,rdi
   14002f491:	je     0x14002f507
   14002f493:	and    QWORD PTR [r11+0x10],0x0
   14002f498:	mov    rax,QWORD PTR [rdi]
   14002f49b:	mov    rbx,QWORD PTR [rax]
   14002f49e:	mov    rcx,rbx
   14002f4a1:	call   QWORD PTR [rip+0xe281]        # 0x14003d728
   14002f4a7:	lea    r8,[rsp+0x78]
   14002f4ac:	lea    rdx,[rip+0x1069d]        # 0x14003fb50
   14002f4b3:	mov    rcx,rdi
   14002f4b6:	call   rbx
   14002f4b8:	mov    rbx,QWORD PTR [rsp+0x78]
   14002f4bd:	test   rbx,rbx
   14002f4c0:	je     0x14002f4ed
   14002f4c2:	mov    rax,QWORD PTR [rbx]
   14002f4c5:	mov    rdi,QWORD PTR [rax+0x18]
   14002f4c9:	mov    rcx,rdi
   14002f4cc:	call   QWORD PTR [rip+0xe256]        # 0x14003d728
   14002f4d2:	mov    QWORD PTR [rsp+0x20],rsi
   14002f4d7:	mov    r9,r14
   14002f4da:	mov    r8,r15
   14002f4dd:	mov    rdx,rbp
   14002f4e0:	mov    rcx,rbx
   14002f4e3:	call   rdi
   14002f4e5:	mov    r12d,eax
   14002f4e8:	mov    rbx,QWORD PTR [rsp+0x78]
   14002f4ed:	test   rbx,rbx
   14002f4f0:	je     0x14002f507
   14002f4f2:	mov    rcx,QWORD PTR [rbx]
   14002f4f5:	mov    rdi,QWORD PTR [rcx+0x10]
   14002f4f9:	mov    rcx,rdi
   14002f4fc:	call   QWORD PTR [rip+0xe226]        # 0x14003d728
   14002f502:	mov    rcx,rbx
   14002f505:	call   rdi
   14002f507:	mov    eax,r12d
   14002f50a:	jmp    0x14002f511
   14002f50c:	mov    eax,0x80004003
   14002f511:	lea    r11,[rsp+0x40]
   14002f516:	mov    rbx,QWORD PTR [r11+0x30]
   14002f51a:	mov    rbp,QWORD PTR [r11+0x40]
   14002f51e:	mov    rsp,r11
   14002f521:	pop    r15
   14002f523:	pop    r14
   14002f525:	pop    r12
   14002f527:	pop    rdi
   14002f528:	pop    rsi
   14002f529:	ret    
   14002f52a:	lea    rcx,[rdx+0x78]
   14002f531:	jmp    0x14000f4f0
   14002f536:	int3   
   14002f537:	int3   
   14002f538:	int3   
   14002f539:	int3   
   14002f53a:	int3   
   14002f53b:	int3   
   14002f53c:	int3   
   14002f53d:	int3   
   14002f53e:	int3   
   14002f53f:	int3   
   14002f540:	mov    QWORD PTR [rsp+0x8],rbx
   14002f545:	mov    QWORD PTR [rsp+0x10],rsi
   14002f54a:	push   rdi
   14002f54b:	sub    rsp,0x20
   14002f54f:	xor    edi,edi
   14002f551:	mov    rsi,rcx
   14002f554:	test   r8,r8
   14002f557:	jne    0x14002f560
   14002f559:	mov    eax,0x80004003
   14002f55e:	jmp    0x14002f5a3
   14002f560:	mov    rcx,rdx
   14002f563:	mov    QWORD PTR [r8],rdi
   14002f566:	call   0x14002c16c
   14002f56b:	test   eax,eax
   14002f56d:	je     0x14002f589
   14002f56f:	mov    QWORD PTR [r8],rsi
   14002f572:	mov    rax,QWORD PTR [rsi]
   14002f575:	mov    rbx,QWORD PTR [rax+0x8]
   14002f579:	mov    rcx,rbx
   14002f57c:	call   QWORD PTR [rip+0xe1a6]        # 0x14003d728
   14002f582:	mov    rcx,rsi
   14002f585:	call   rbx
   14002f587:	jmp    0x14002f5a1
   14002f589:	mov    r9,r8
   14002f58c:	lea    rcx,[rsi+0x18]
   14002f590:	mov    r8,rdx
   14002f593:	lea    rdx,[rip+0x13136]        # 0x1400426d0
   14002f59a:	call   0x14000c260
   14002f59f:	mov    edi,eax
   14002f5a1:	mov    eax,edi
   14002f5a3:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f5a8:	mov    rsi,QWORD PTR [rsp+0x38]
   14002f5ad:	add    rsp,0x20
   14002f5b1:	pop    rdi
   14002f5b2:	ret    
   14002f5b3:	int3   
   14002f5b4:	int3   
   14002f5b5:	int3   
   14002f5b6:	int3   
   14002f5b7:	int3   
   14002f5b8:	int3   
   14002f5b9:	int3   
   14002f5ba:	int3   
   14002f5bb:	int3   
   14002f5bc:	int3   
   14002f5bd:	int3   
   14002f5be:	int3   
   14002f5bf:	int3   
   14002f5c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002f5c5:	mov    QWORD PTR [rsp+0x10],rsi
   14002f5ca:	push   rdi
   14002f5cb:	sub    rsp,0x20
   14002f5cf:	xor    edi,edi
   14002f5d1:	mov    rsi,rcx
   14002f5d4:	test   r8,r8
   14002f5d7:	jne    0x14002f5e0
   14002f5d9:	mov    eax,0x80004003
   14002f5de:	jmp    0x14002f623
   14002f5e0:	mov    rcx,rdx
   14002f5e3:	mov    QWORD PTR [r8],rdi
   14002f5e6:	call   0x14002c16c
   14002f5eb:	test   eax,eax
   14002f5ed:	je     0x14002f609
   14002f5ef:	mov    QWORD PTR [r8],rsi
   14002f5f2:	mov    rax,QWORD PTR [rsi]
   14002f5f5:	mov    rbx,QWORD PTR [rax+0x8]
   14002f5f9:	mov    rcx,rbx
   14002f5fc:	call   QWORD PTR [rip+0xe126]        # 0x14003d728
   14002f602:	mov    rcx,rsi
   14002f605:	call   rbx
   14002f607:	jmp    0x14002f621
   14002f609:	mov    r9,r8
   14002f60c:	lea    rcx,[rsi+0x18]
   14002f610:	mov    r8,rdx
   14002f613:	lea    rdx,[rip+0x13186]        # 0x1400427a0
   14002f61a:	call   0x14000c260
   14002f61f:	mov    edi,eax
   14002f621:	mov    eax,edi
   14002f623:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f628:	mov    rsi,QWORD PTR [rsp+0x38]
   14002f62d:	add    rsp,0x20
   14002f631:	pop    rdi
   14002f632:	ret    
   14002f633:	int3   
   14002f634:	int3   
   14002f635:	int3   
   14002f636:	int3   
   14002f637:	int3   
   14002f638:	int3   
   14002f639:	int3   
   14002f63a:	int3   
   14002f63b:	int3   
   14002f63c:	int3   
   14002f63d:	int3   
   14002f63e:	int3   
   14002f63f:	int3   
   14002f640:	mov    QWORD PTR [rsp+0x8],rbx
   14002f645:	mov    QWORD PTR [rsp+0x10],rbp
   14002f64a:	mov    QWORD PTR [rsp+0x18],rsi
   14002f64f:	push   rdi
   14002f650:	sub    rsp,0x20
   14002f654:	mov    rdi,QWORD PTR [rcx+0x20]
   14002f658:	mov    rsi,r8
   14002f65b:	mov    rbp,rdx
   14002f65e:	mov    rax,QWORD PTR [rdi]
   14002f661:	mov    rbx,QWORD PTR [rax]
   14002f664:	mov    rcx,rbx
   14002f667:	call   QWORD PTR [rip+0xe0bb]        # 0x14003d728
   14002f66d:	mov    r8,rsi
   14002f670:	mov    rdx,rbp
   14002f673:	mov    rcx,rdi
   14002f676:	mov    rax,rbx
   14002f679:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f67e:	mov    rbp,QWORD PTR [rsp+0x38]
   14002f683:	mov    rsi,QWORD PTR [rsp+0x40]
   14002f688:	add    rsp,0x20
   14002f68c:	pop    rdi
   14002f68d:	rex.W jmp rax
   14002f690:	int3   
   14002f691:	int3   
   14002f692:	int3   
   14002f693:	int3   
   14002f694:	int3   
   14002f695:	int3   
   14002f696:	int3   
   14002f697:	int3   
   14002f698:	int3   
   14002f699:	int3   
   14002f69a:	int3   
   14002f69b:	int3   
   14002f69c:	int3   
   14002f69d:	int3   
   14002f69e:	int3   
   14002f69f:	int3   
   14002f6a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002f6a5:	mov    QWORD PTR [rsp+0x10],rbp
   14002f6aa:	mov    QWORD PTR [rsp+0x18],rsi
   14002f6af:	push   rdi
   14002f6b0:	sub    rsp,0x20
   14002f6b4:	mov    rdi,QWORD PTR [rcx+0x90]
   14002f6bb:	mov    rsi,r8
   14002f6be:	mov    rbp,rdx
   14002f6c1:	mov    rax,QWORD PTR [rdi]
   14002f6c4:	mov    rbx,QWORD PTR [rax]
   14002f6c7:	mov    rcx,rbx
   14002f6ca:	call   QWORD PTR [rip+0xe058]        # 0x14003d728
   14002f6d0:	mov    r8,rsi
   14002f6d3:	mov    rdx,rbp
   14002f6d6:	mov    rcx,rdi
   14002f6d9:	mov    rax,rbx
   14002f6dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f6e1:	mov    rbp,QWORD PTR [rsp+0x38]
   14002f6e6:	mov    rsi,QWORD PTR [rsp+0x40]
   14002f6eb:	add    rsp,0x20
   14002f6ef:	pop    rdi
   14002f6f0:	rex.W jmp rax
   14002f6f3:	int3   
   14002f6f4:	int3   
   14002f6f5:	int3   
   14002f6f6:	int3   
   14002f6f7:	int3   
   14002f6f8:	int3   
   14002f6f9:	int3   
   14002f6fa:	int3   
   14002f6fb:	int3   
   14002f6fc:	int3   
   14002f6fd:	int3   
   14002f6fe:	int3   
   14002f6ff:	int3   
   14002f700:	mov    QWORD PTR [rsp+0x8],rbx
   14002f705:	push   rdi
   14002f706:	sub    rsp,0x20
   14002f70a:	mov    rdi,QWORD PTR [rcx+0x20]
   14002f70e:	mov    rax,QWORD PTR [rdi]
   14002f711:	mov    rbx,QWORD PTR [rax+0x10]
   14002f715:	mov    rcx,rbx
   14002f718:	call   QWORD PTR [rip+0xe00a]        # 0x14003d728
   14002f71e:	mov    rcx,rdi
   14002f721:	mov    rax,rbx
   14002f724:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f729:	add    rsp,0x20
   14002f72d:	pop    rdi
   14002f72e:	rex.W jmp rax
   14002f731:	int3   
   14002f732:	int3   
   14002f733:	int3   
   14002f734:	int3   
   14002f735:	int3   
   14002f736:	int3   
   14002f737:	int3   
   14002f738:	int3   
   14002f739:	int3   
   14002f73a:	int3   
   14002f73b:	int3   
   14002f73c:	int3   
   14002f73d:	int3   
   14002f73e:	int3   
   14002f73f:	int3   
   14002f740:	mov    QWORD PTR [rsp+0x8],rbx
   14002f745:	push   rdi
   14002f746:	sub    rsp,0x20
   14002f74a:	mov    rdi,QWORD PTR [rcx+0x90]
   14002f751:	mov    rax,QWORD PTR [rdi]
   14002f754:	mov    rbx,QWORD PTR [rax+0x10]
   14002f758:	mov    rcx,rbx
   14002f75b:	call   QWORD PTR [rip+0xdfc7]        # 0x14003d728
   14002f761:	mov    rcx,rdi
   14002f764:	mov    rax,rbx
   14002f767:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f76c:	add    rsp,0x20
   14002f770:	pop    rdi
   14002f771:	rex.W jmp rax
   14002f774:	int3   
   14002f775:	int3   
   14002f776:	int3   
   14002f777:	int3   
   14002f778:	int3   
   14002f779:	int3   
   14002f77a:	int3   
   14002f77b:	int3   
   14002f77c:	int3   
   14002f77d:	int3   
   14002f77e:	int3   
   14002f77f:	int3   
   14002f780:	mov    rax,rsp
   14002f783:	push   rdi
   14002f784:	push   r12
   14002f786:	push   r13
   14002f788:	push   r14
   14002f78a:	push   r15
   14002f78c:	sub    rsp,0x60
   14002f790:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14002f798:	mov    QWORD PTR [rax+0x10],rbx
   14002f79c:	mov    QWORD PTR [rax+0x18],rbp
   14002f7a0:	mov    QWORD PTR [rax+0x20],rsi
   14002f7a4:	mov    r14d,r9d
   14002f7a7:	movzx  r15d,r8w
   14002f7ab:	mov    r12d,edx
   14002f7ae:	mov    rbx,rcx
   14002f7b1:	lea    rdi,[rcx+0xd8]
   14002f7b8:	mov    rcx,rdi
   14002f7bb:	call   QWORD PTR [rip+0xdc07]        # 0x14003d3c8
   14002f7c1:	lea    rdx,[rbx+0xc8]
   14002f7c8:	lea    rcx,[rsp+0x90]
   14002f7d0:	call   0x14002e8ec
   14002f7d5:	nop
   14002f7d6:	mov    rcx,rdi
   14002f7d9:	call   QWORD PTR [rip+0xdbf9]        # 0x14003d3d8
   14002f7df:	mov    esi,0x80004005
   14002f7e4:	mov    rbx,QWORD PTR [rsp+0x90]
   14002f7ec:	test   rbx,rbx
   14002f7ef:	je     0x14002f8e4
   14002f7f5:	mov    rax,QWORD PTR [rbx]
   14002f7f8:	mov    rdi,QWORD PTR [rax+0x38]
   14002f7fc:	mov    rcx,rdi
   14002f7ff:	call   QWORD PTR [rip+0xdf23]        # 0x14003d728
   14002f805:	mov    r13,QWORD PTR [rsp+0xd8]
   14002f80d:	mov    QWORD PTR [rsp+0x48],r13
   14002f812:	mov    rax,QWORD PTR [rsp+0xd0]
   14002f81a:	mov    QWORD PTR [rsp+0x40],rax
   14002f81f:	mov    rax,QWORD PTR [rsp+0xc8]
   14002f827:	mov    QWORD PTR [rsp+0x38],rax
   14002f82c:	mov    rax,QWORD PTR [rsp+0xc0]
   14002f834:	mov    QWORD PTR [rsp+0x30],rax
   14002f839:	mov    eax,DWORD PTR [rsp+0xb8]
   14002f840:	mov    DWORD PTR [rsp+0x28],eax
   14002f844:	movzx  eax,WORD PTR [rsp+0xb0]
   14002f84c:	mov    WORD PTR [rsp+0x20],ax
   14002f851:	mov    r9d,r14d
   14002f854:	movzx  r8d,r15w
   14002f858:	mov    edx,r12d
   14002f85b:	mov    rcx,rbx
   14002f85e:	call   rdi
   14002f860:	xor    ebp,ebp
   14002f862:	jmp    0x14002f8db
   14002f864:	mov    ecx,ebp
   14002f866:	inc    ebp
   14002f868:	cmp    ecx,0x5
   14002f86b:	jge    0x14002f8e4
   14002f86d:	mov    ecx,0x64
   14002f872:	call   QWORD PTR [rip+0xdb38]        # 0x14003d3b0
   14002f878:	mov    rax,QWORD PTR [rbx]
   14002f87b:	mov    rdi,QWORD PTR [rax+0x38]
   14002f87f:	mov    rcx,rdi
   14002f882:	call   QWORD PTR [rip+0xdea0]        # 0x14003d728
   14002f888:	mov    QWORD PTR [rsp+0x48],r13
   14002f88d:	mov    rax,QWORD PTR [rsp+0xd0]
   14002f895:	mov    QWORD PTR [rsp+0x40],rax
   14002f89a:	mov    rax,QWORD PTR [rsp+0xc8]
   14002f8a2:	mov    QWORD PTR [rsp+0x38],rax
   14002f8a7:	mov    rax,QWORD PTR [rsp+0xc0]
   14002f8af:	mov    QWORD PTR [rsp+0x30],rax
   14002f8b4:	mov    eax,DWORD PTR [rsp+0xb8]
   14002f8bb:	mov    DWORD PTR [rsp+0x28],eax
   14002f8bf:	movzx  eax,WORD PTR [rsp+0xb0]
   14002f8c7:	mov    WORD PTR [rsp+0x20],ax
   14002f8cc:	mov    r9d,r14d
   14002f8cf:	movzx  r8d,r15w
   14002f8d3:	mov    edx,r12d
   14002f8d6:	mov    rcx,rbx
   14002f8d9:	call   rdi
   14002f8db:	cmp    eax,0x8001010a
   14002f8e0:	mov    esi,eax
   14002f8e2:	je     0x14002f864
   14002f8e4:	test   rbx,rbx
   14002f8e7:	je     0x14002f8fe
   14002f8e9:	mov    rax,QWORD PTR [rbx]
   14002f8ec:	mov    rdi,QWORD PTR [rax+0x10]
   14002f8f0:	mov    rcx,rdi
   14002f8f3:	call   QWORD PTR [rip+0xde2f]        # 0x14003d728
   14002f8f9:	mov    rcx,rbx
   14002f8fc:	call   rdi
   14002f8fe:	mov    eax,esi
   14002f900:	lea    r11,[rsp+0x60]
   14002f905:	mov    rbx,QWORD PTR [r11+0x38]
   14002f909:	mov    rbp,QWORD PTR [r11+0x40]
   14002f90d:	mov    rsi,QWORD PTR [r11+0x48]
   14002f911:	mov    rsp,r11
   14002f914:	pop    r15
   14002f916:	pop    r14
   14002f918:	pop    r13
   14002f91a:	pop    r12
   14002f91c:	pop    rdi
   14002f91d:	ret    
   14002f91e:	lea    rcx,[rdx+0x90]
   14002f925:	jmp    0x14000f4f0
   14002f92a:	int3   
   14002f92b:	int3   
   14002f92c:	int3   
   14002f92d:	int3   
   14002f92e:	int3   
   14002f92f:	int3   
   14002f930:	mov    rax,rsp
   14002f933:	push   rdi
   14002f934:	push   r14
   14002f936:	push   r15
   14002f938:	sub    rsp,0x30
   14002f93c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14002f944:	mov    QWORD PTR [rax+0x10],rbx
   14002f948:	mov    QWORD PTR [rax+0x18],rbp
   14002f94c:	mov    QWORD PTR [rax+0x20],rsi
   14002f950:	mov    r14d,r8d
   14002f953:	mov    r15,rdx
   14002f956:	mov    rbx,rcx
   14002f959:	lea    rdi,[rcx+0xd8]
   14002f960:	mov    rcx,rdi
   14002f963:	call   QWORD PTR [rip+0xda5f]        # 0x14003d3c8
   14002f969:	lea    rdx,[rbx+0xc8]
   14002f970:	lea    rcx,[rsp+0x50]
   14002f975:	call   0x14002e8ec
   14002f97a:	nop
   14002f97b:	mov    rcx,rdi
   14002f97e:	call   QWORD PTR [rip+0xda54]        # 0x14003d3d8
   14002f984:	mov    esi,0x80004005
   14002f989:	mov    rbx,QWORD PTR [rsp+0x50]
   14002f98e:	test   rbx,rbx
   14002f991:	je     0x14002f9ea
   14002f993:	mov    rax,QWORD PTR [rbx]
   14002f996:	mov    rdi,QWORD PTR [rax+0x30]
   14002f99a:	mov    rcx,rdi
   14002f99d:	call   QWORD PTR [rip+0xdd85]        # 0x14003d728
   14002f9a3:	mov    r8d,r14d
   14002f9a6:	mov    rdx,r15
   14002f9a9:	mov    rcx,rbx
   14002f9ac:	call   rdi
   14002f9ae:	xor    ebp,ebp
   14002f9b0:	jmp    0x14002f9e1
   14002f9b2:	mov    ecx,ebp
   14002f9b4:	inc    ebp
   14002f9b6:	cmp    ecx,0x5
   14002f9b9:	jge    0x14002f9ea
   14002f9bb:	mov    ecx,0x64
   14002f9c0:	call   QWORD PTR [rip+0xd9ea]        # 0x14003d3b0
   14002f9c6:	mov    rax,QWORD PTR [rbx]
   14002f9c9:	mov    rdi,QWORD PTR [rax+0x30]
   14002f9cd:	mov    rcx,rdi
   14002f9d0:	call   QWORD PTR [rip+0xdd52]        # 0x14003d728
   14002f9d6:	mov    r8d,r14d
   14002f9d9:	mov    rdx,r15
   14002f9dc:	mov    rcx,rbx
   14002f9df:	call   rdi
   14002f9e1:	cmp    eax,0x8001010a
   14002f9e6:	mov    esi,eax
   14002f9e8:	je     0x14002f9b2
   14002f9ea:	test   rbx,rbx
   14002f9ed:	je     0x14002fa04
   14002f9ef:	mov    rax,QWORD PTR [rbx]
   14002f9f2:	mov    rdi,QWORD PTR [rax+0x10]
   14002f9f6:	mov    rcx,rdi
   14002f9f9:	call   QWORD PTR [rip+0xdd29]        # 0x14003d728
   14002f9ff:	mov    rcx,rbx
   14002fa02:	call   rdi
   14002fa04:	mov    eax,esi
   14002fa06:	mov    rbx,QWORD PTR [rsp+0x58]
   14002fa0b:	mov    rbp,QWORD PTR [rsp+0x60]
   14002fa10:	mov    rsi,QWORD PTR [rsp+0x68]
   14002fa15:	add    rsp,0x30
   14002fa19:	pop    r15
   14002fa1b:	pop    r14
   14002fa1d:	pop    rdi
   14002fa1e:	ret    
   14002fa1f:	lea    rcx,[rdx+0x50]
   14002fa26:	jmp    0x14000f4f0
   14002fa2b:	int3   
   14002fa2c:	int3   
   14002fa2d:	int3   
   14002fa2e:	int3   
   14002fa2f:	int3   
   14002fa30:	int3   
   14002fa31:	int3   
   14002fa32:	int3   
   14002fa33:	int3   
   14002fa34:	int3   
   14002fa35:	int3   
   14002fa36:	int3   
   14002fa37:	int3   
   14002fa38:	int3   
   14002fa39:	int3   
   14002fa3a:	int3   
   14002fa3b:	int3   
   14002fa3c:	int3   
   14002fa3d:	int3   
   14002fa3e:	int3   
   14002fa3f:	int3   
   14002fa40:	mov    rax,rsp
   14002fa43:	mov    QWORD PTR [rax+0x8],rbx
   14002fa47:	mov    QWORD PTR [rax+0x10],rbp
   14002fa4b:	mov    QWORD PTR [rax+0x18],rsi
   14002fa4f:	mov    QWORD PTR [rax+0x20],rdi
   14002fa53:	push   r14
   14002fa55:	sub    rsp,0x30
   14002fa59:	mov    rsi,rcx
   14002fa5c:	mov    r14d,edx
   14002fa5f:	add    rcx,0x58
   14002fa63:	xor    edi,edi
   14002fa65:	call   QWORD PTR [rip+0xd95d]        # 0x14003d3c8
   14002fa6b:	mov    rax,QWORD PTR [rsi+0x90]
   14002fa72:	test   rax,rax
   14002fa75:	je     0x14002fa8f
   14002fa77:	mov    rdi,rax
   14002fa7a:	mov    rax,QWORD PTR [rax]
   14002fa7d:	mov    rbx,QWORD PTR [rax+0x8]
   14002fa81:	mov    rcx,rbx
   14002fa84:	call   QWORD PTR [rip+0xdc9e]        # 0x14003d728
   14002fa8a:	mov    rcx,rdi
   14002fa8d:	call   rbx
   14002fa8f:	lea    rcx,[rsi+0x58]
   14002fa93:	mov    DWORD PTR [rsi+0xbc],0x1
   14002fa9d:	mov    DWORD PTR [rsi+0xc0],r14d
   14002faa4:	call   QWORD PTR [rip+0xd92e]        # 0x14003d3d8
   14002faaa:	call   0x14000e048
   14002faaf:	mov    rbx,rax
   14002fab2:	test   rax,rax
   14002fab5:	je     0x14002fadc
   14002fab7:	call   0x140035278
   14002fabc:	test   al,al
   14002fabe:	jne    0x14002fad4
   14002fac0:	xor    r9d,r9d
   14002fac3:	mov    BYTE PTR [rsp+0x20],al
   14002fac7:	xor    r8d,r8d
   14002faca:	xor    edx,edx
   14002facc:	mov    rcx,rbx
   14002facf:	call   0x140012368
   14002fad4:	mov    rcx,rbx
   14002fad7:	call   0x14000dc9c
   14002fadc:	and    DWORD PTR [rsi+0xbc],0x0
   14002fae3:	test   rdi,rdi
   14002fae6:	je     0x14002fafd
   14002fae8:	mov    rax,QWORD PTR [rdi]
   14002faeb:	mov    rbx,QWORD PTR [rax+0x10]
   14002faef:	mov    rcx,rbx
   14002faf2:	call   QWORD PTR [rip+0xdc30]        # 0x14003d728
   14002faf8:	mov    rcx,rdi
   14002fafb:	call   rbx
   14002fafd:	mov    rbx,QWORD PTR [rsp+0x40]
   14002fb02:	xor    eax,eax
   14002fb04:	mov    rbp,QWORD PTR [rsp+0x48]
   14002fb09:	mov    rsi,QWORD PTR [rsp+0x50]
   14002fb0e:	mov    rdi,QWORD PTR [rsp+0x58]
   14002fb13:	add    rsp,0x30
   14002fb17:	pop    r14
   14002fb19:	ret    
   14002fb1a:	int3   
   14002fb1b:	int3   
   14002fb1c:	int3   
   14002fb1d:	int3   
   14002fb1e:	int3   
   14002fb1f:	int3   
   14002fb20:	mov    QWORD PTR [rsp+0x8],rbx
   14002fb25:	mov    QWORD PTR [rsp+0x18],rbp
   14002fb2a:	mov    QWORD PTR [rsp+0x20],rsi
   14002fb2f:	push   rdi
   14002fb30:	push   r14
   14002fb32:	push   r15
   14002fb34:	sub    rsp,0x20
   14002fb38:	mov    rbp,rdx
   14002fb3b:	mov    rsi,rcx
   14002fb3e:	test   rdx,rdx
   14002fb41:	jne    0x14002fb4d
   14002fb43:	mov    eax,0x80004003
   14002fb48:	jmp    0x14002fc53
   14002fb4d:	lea    r14,[rcx+0xd8]
   14002fb54:	mov    rcx,r14
   14002fb57:	call   QWORD PTR [rip+0xd86b]        # 0x14003d3c8
   14002fb5d:	mov    rdi,QWORD PTR [rsi+0xc8]
   14002fb64:	test   rdi,rdi
   14002fb67:	je     0x14002fb7e
   14002fb69:	mov    rax,QWORD PTR [rdi]
   14002fb6c:	mov    rbx,QWORD PTR [rax+0x8]
   14002fb70:	mov    rcx,rbx
   14002fb73:	call   QWORD PTR [rip+0xdbaf]        # 0x14003d728
   14002fb79:	mov    rcx,rdi
   14002fb7c:	call   rbx
   14002fb7e:	mov    rcx,r14
   14002fb81:	call   QWORD PTR [rip+0xd851]        # 0x14003d3d8
   14002fb87:	test   rdi,rdi
   14002fb8a:	je     0x14002fc42
   14002fb90:	cmp    QWORD PTR [rsi+0x110],0x0
   14002fb98:	je     0x14002fb9f
   14002fb9a:	xor    r14d,r14d
   14002fb9d:	jmp    0x14002fba3
   14002fb9f:	or     r14d,0xffffffff
   14002fba3:	mov    rax,QWORD PTR [rdi]
   14002fba6:	mov    rbx,QWORD PTR [rax+0x18]
   14002fbaa:	mov    rcx,rbx
   14002fbad:	call   QWORD PTR [rip+0xdb75]        # 0x14003d728
   14002fbb3:	lea    r9,[rsp+0x48]
   14002fbb8:	movzx  r8d,r14w
   14002fbbc:	mov    rdx,rbp
   14002fbbf:	mov    rcx,rdi
   14002fbc2:	call   rbx
   14002fbc4:	xor    r15d,r15d
   14002fbc7:	jmp    0x14002fc11
   14002fbc9:	cmp    r15d,0x5
   14002fbcd:	jge    0x14002fc1b
   14002fbcf:	mov    ecx,0x64
   14002fbd4:	call   QWORD PTR [rip+0xd7d6]        # 0x14003d3b0
   14002fbda:	cmp    QWORD PTR [rsi+0x110],0x0
   14002fbe2:	je     0x14002fbe9
   14002fbe4:	xor    r14d,r14d
   14002fbe7:	jmp    0x14002fbed
   14002fbe9:	or     r14d,0xffffffff
   14002fbed:	mov    rax,QWORD PTR [rdi]
   14002fbf0:	mov    rbx,QWORD PTR [rax+0x18]
   14002fbf4:	mov    rcx,rbx
   14002fbf7:	call   QWORD PTR [rip+0xdb2b]        # 0x14003d728
   14002fbfd:	lea    r9,[rsp+0x48]
   14002fc02:	movzx  r8d,r14w
   14002fc06:	mov    rdx,rbp
   14002fc09:	mov    rcx,rdi
   14002fc0c:	call   rbx
   14002fc0e:	inc    r15d
   14002fc11:	mov    r14d,eax
   14002fc14:	cmp    eax,0x8001010a
   14002fc19:	je     0x14002fbc9
   14002fc1b:	mov    rax,QWORD PTR [rdi]
   14002fc1e:	mov    rbx,QWORD PTR [rax+0x10]
   14002fc22:	mov    rcx,rbx
   14002fc25:	call   QWORD PTR [rip+0xdafd]        # 0x14003d728
   14002fc2b:	mov    rcx,rdi
   14002fc2e:	call   rbx
   14002fc30:	test   r14d,r14d
   14002fc33:	js     0x14002fc42
   14002fc35:	mov    rdx,rbp
   14002fc38:	mov    rcx,rsi
   14002fc3b:	call   0x14002e204
   14002fc40:	jmp    0x14002fc50
   14002fc42:	mov    rdx,rbp
   14002fc45:	mov    rcx,rsi
   14002fc48:	call   0x14002e688
   14002fc4d:	mov    r14d,eax
   14002fc50:	mov    eax,r14d
   14002fc53:	mov    rbx,QWORD PTR [rsp+0x40]
   14002fc58:	mov    rbp,QWORD PTR [rsp+0x50]
   14002fc5d:	mov    rsi,QWORD PTR [rsp+0x58]
   14002fc62:	add    rsp,0x20
   14002fc66:	pop    r15
   14002fc68:	pop    r14
   14002fc6a:	pop    rdi
   14002fc6b:	ret    
   14002fc6c:	int3   
   14002fc6d:	int3   
   14002fc6e:	int3   
   14002fc6f:	int3   
   14002fc70:	int3   
   14002fc71:	int3   
   14002fc72:	int3   
   14002fc73:	int3   
   14002fc74:	int3   
   14002fc75:	int3   
   14002fc76:	int3   
   14002fc77:	int3   
   14002fc78:	int3   
   14002fc79:	int3   
   14002fc7a:	int3   
   14002fc7b:	int3   
   14002fc7c:	int3   
   14002fc7d:	int3   
   14002fc7e:	int3   
   14002fc7f:	int3   
   14002fc80:	mov    QWORD PTR [rsp+0x8],rbx
   14002fc85:	mov    QWORD PTR [rsp+0x10],rbp
   14002fc8a:	mov    QWORD PTR [rsp+0x18],rsi
   14002fc8f:	push   rdi
   14002fc90:	push   r14
   14002fc92:	push   r15
   14002fc94:	sub    rsp,0x30
   14002fc98:	mov    rsi,rcx
   14002fc9b:	mov    r14d,r8d
   14002fc9e:	add    rcx,0x58
   14002fca2:	mov    r15d,edx
   14002fca5:	xor    edi,edi
   14002fca7:	call   QWORD PTR [rip+0xd71b]        # 0x14003d3c8
   14002fcad:	mov    rax,QWORD PTR [rsi+0x90]
   14002fcb4:	test   rax,rax
   14002fcb7:	je     0x14002fcd1
   14002fcb9:	mov    rdi,rax
   14002fcbc:	mov    rax,QWORD PTR [rax]
   14002fcbf:	mov    rbx,QWORD PTR [rax+0x8]
   14002fcc3:	mov    rcx,rbx
   14002fcc6:	call   QWORD PTR [rip+0xda5c]        # 0x14003d728
   14002fccc:	mov    rcx,rdi
   14002fccf:	call   rbx
   14002fcd1:	lea    rcx,[rsi+0x58]
   14002fcd5:	mov    BYTE PTR [rsi+0x118],0x1
   14002fcdc:	mov    DWORD PTR [rsi+0x11c],r15d
   14002fce3:	mov    DWORD PTR [rsi+0x120],r14d
   14002fcea:	call   QWORD PTR [rip+0xd6e8]        # 0x14003d3d8
   14002fcf0:	call   0x14000e048
   14002fcf5:	mov    rbx,rax
   14002fcf8:	test   rax,rax
   14002fcfb:	je     0x14002fd23
   14002fcfd:	call   0x140035278
   14002fd02:	test   al,al
   14002fd04:	jne    0x14002fd1b
   14002fd06:	xor    r9d,r9d
   14002fd09:	mov    BYTE PTR [rsp+0x20],0x1
   14002fd0e:	xor    r8d,r8d
   14002fd11:	xor    edx,edx
   14002fd13:	mov    rcx,rbx
   14002fd16:	call   0x140012368
   14002fd1b:	mov    rcx,rbx
   14002fd1e:	call   0x14000dc9c
   14002fd23:	mov    BYTE PTR [rsi+0x118],0x0
   14002fd2a:	test   rdi,rdi
   14002fd2d:	je     0x14002fd44
   14002fd2f:	mov    rax,QWORD PTR [rdi]
   14002fd32:	mov    rbx,QWORD PTR [rax+0x10]
   14002fd36:	mov    rcx,rbx
   14002fd39:	call   QWORD PTR [rip+0xd9e9]        # 0x14003d728
   14002fd3f:	mov    rcx,rdi
   14002fd42:	call   rbx
   14002fd44:	mov    rbx,QWORD PTR [rsp+0x50]
   14002fd49:	xor    eax,eax
   14002fd4b:	mov    rbp,QWORD PTR [rsp+0x58]
   14002fd50:	mov    rsi,QWORD PTR [rsp+0x60]
   14002fd55:	add    rsp,0x30
   14002fd59:	pop    r15
   14002fd5b:	pop    r14
   14002fd5d:	pop    rdi
   14002fd5e:	ret    
   14002fd5f:	int3   
   14002fd60:	int3   
   14002fd61:	int3   
   14002fd62:	int3   
   14002fd63:	int3   
   14002fd64:	int3   
   14002fd65:	int3   
   14002fd66:	int3   
   14002fd67:	int3   
   14002fd68:	int3   
   14002fd69:	int3   
   14002fd6a:	int3   
   14002fd6b:	int3   
   14002fd6c:	int3   
   14002fd6d:	int3   
   14002fd6e:	int3   
   14002fd6f:	int3   
   14002fd70:	mov    QWORD PTR [rsp+0x8],rbx
   14002fd75:	mov    QWORD PTR [rsp+0x10],rbp
   14002fd7a:	mov    QWORD PTR [rsp+0x18],rsi
   14002fd7f:	push   rdi
   14002fd80:	push   r14
   14002fd82:	push   r15
   14002fd84:	sub    rsp,0x20
   14002fd88:	mov    rsi,rcx
   14002fd8b:	mov    r14d,r8d
   14002fd8e:	add    rcx,0x58
   14002fd92:	mov    r15,rdx
   14002fd95:	xor    edi,edi
   14002fd97:	call   QWORD PTR [rip+0xd62b]        # 0x14003d3c8
   14002fd9d:	mov    rax,QWORD PTR [rsi+0x90]
   14002fda4:	test   rax,rax
   14002fda7:	je     0x14002fdc1
   14002fda9:	mov    rdi,rax
   14002fdac:	mov    rax,QWORD PTR [rax]
   14002fdaf:	mov    rbx,QWORD PTR [rax+0x8]
   14002fdb3:	mov    rcx,rbx
   14002fdb6:	call   QWORD PTR [rip+0xd96c]        # 0x14003d728
   14002fdbc:	mov    rcx,rdi
   14002fdbf:	call   rbx
   14002fdc1:	mov    DWORD PTR [rsi+0xb4],0x1
   14002fdcb:	lea    rcx,[rsi+0x58]
   14002fdcf:	movups xmm0,XMMWORD PTR [r15]
   14002fdd3:	mov    DWORD PTR [rsi+0xb0],r14d
   14002fdda:	movdqu XMMWORD PTR [rsi+0xa0],xmm0
   14002fde2:	call   QWORD PTR [rip+0xd5f0]        # 0x14003d3d8
   14002fde8:	call   0x14000e048
   14002fded:	mov    rbx,rax
   14002fdf0:	test   rax,rax
   14002fdf3:	je     0x14002fe05
   14002fdf5:	mov    rcx,rax
   14002fdf8:	call   0x140035670
   14002fdfd:	mov    rcx,rbx
   14002fe00:	call   0x14000dc9c
   14002fe05:	and    DWORD PTR [rsi+0xb4],0x0
   14002fe0c:	test   rdi,rdi
   14002fe0f:	je     0x14002fe26
   14002fe11:	mov    rax,QWORD PTR [rdi]
   14002fe14:	mov    rbx,QWORD PTR [rax+0x10]
   14002fe18:	mov    rcx,rbx
   14002fe1b:	call   QWORD PTR [rip+0xd907]        # 0x14003d728
   14002fe21:	mov    rcx,rdi
   14002fe24:	call   rbx
   14002fe26:	mov    rbx,QWORD PTR [rsp+0x40]
   14002fe2b:	xor    eax,eax
   14002fe2d:	mov    rbp,QWORD PTR [rsp+0x48]
   14002fe32:	mov    rsi,QWORD PTR [rsp+0x50]
   14002fe37:	add    rsp,0x20
   14002fe3b:	pop    r15
   14002fe3d:	pop    r14
   14002fe3f:	pop    rdi
   14002fe40:	ret    
   14002fe41:	int3   
   14002fe42:	int3   
   14002fe43:	int3   
   14002fe44:	int3   
   14002fe45:	int3   
   14002fe46:	int3   
   14002fe47:	int3   
   14002fe48:	int3   
   14002fe49:	int3   
   14002fe4a:	int3   
   14002fe4b:	int3   
   14002fe4c:	int3   
   14002fe4d:	int3   
   14002fe4e:	int3   
   14002fe4f:	int3   
   14002fe50:	mov    rax,rsp
   14002fe53:	mov    QWORD PTR [rax+0x8],rbx
   14002fe57:	mov    QWORD PTR [rax+0x10],rsi
   14002fe5b:	mov    QWORD PTR [rax+0x18],rdi
   14002fe5f:	mov    QWORD PTR [rax+0x20],r12
   14002fe63:	push   r13
   14002fe65:	push   r14
   14002fe67:	push   r15
   14002fe69:	sub    rsp,0x20
   14002fe6d:	mov    rdi,rcx
   14002fe70:	mov    r14d,r9d
   14002fe73:	add    rcx,0x58
   14002fe77:	mov    r15d,r8d
   14002fe7a:	mov    r12d,edx
   14002fe7d:	xor    esi,esi
   14002fe7f:	call   QWORD PTR [rip+0xd543]        # 0x14003d3c8
   14002fe85:	mov    rax,QWORD PTR [rdi+0x90]
   14002fe8c:	test   rax,rax
   14002fe8f:	je     0x14002fea9
   14002fe91:	mov    rsi,rax
   14002fe94:	mov    rax,QWORD PTR [rax]
   14002fe97:	mov    rbx,QWORD PTR [rax+0x8]
   14002fe9b:	mov    rcx,rbx
   14002fe9e:	call   QWORD PTR [rip+0xd884]        # 0x14003d728
   14002fea4:	mov    rcx,rsi
   14002fea7:	call   rbx
   14002fea9:	cmp    DWORD PTR [rsp+0x60],0x0
   14002feae:	je     0x14002fed1
   14002feb0:	mov    DWORD PTR [rdi+0xe0],0x1
   14002feba:	mov    DWORD PTR [rdi+0xd4],r12d
   14002fec1:	mov    DWORD PTR [rdi+0xd8],r15d
   14002fec8:	mov    DWORD PTR [rdi+0xdc],r14d
   14002fecf:	jmp    0x14002fef0
   14002fed1:	mov    DWORD PTR [rdi+0xd0],0x1
   14002fedb:	mov    DWORD PTR [rdi+0xc4],r12d
   14002fee2:	mov    DWORD PTR [rdi+0xc8],r15d
   14002fee9:	mov    DWORD PTR [rdi+0xcc],r14d
   14002fef0:	lea    rcx,[rdi+0x58]
   14002fef4:	call   QWORD PTR [rip+0xd4de]        # 0x14003d3d8
   14002fefa:	call   0x14000e048
   14002feff:	mov    rbx,rax
   14002ff02:	test   rax,rax
   14002ff05:	je     0x14002ff17
   14002ff07:	mov    rcx,rax
   14002ff0a:	call   0x140035670
   14002ff0f:	mov    rcx,rbx
   14002ff12:	call   0x14000dc9c
   14002ff17:	cmp    DWORD PTR [rsp+0x60],0x0
   14002ff1c:	je     0x14002ff27
   14002ff1e:	and    DWORD PTR [rdi+0xe0],0x0
   14002ff25:	jmp    0x14002ff2e
   14002ff27:	and    DWORD PTR [rdi+0xd0],0x0
   14002ff2e:	test   rsi,rsi
   14002ff31:	je     0x14002ff48
   14002ff33:	mov    rax,QWORD PTR [rsi]
   14002ff36:	mov    rbx,QWORD PTR [rax+0x10]
   14002ff3a:	mov    rcx,rbx
   14002ff3d:	call   QWORD PTR [rip+0xd7e5]        # 0x14003d728
   14002ff43:	mov    rcx,rsi
   14002ff46:	call   rbx
   14002ff48:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ff4d:	xor    eax,eax
   14002ff4f:	mov    rsi,QWORD PTR [rsp+0x48]
   14002ff54:	mov    rdi,QWORD PTR [rsp+0x50]
   14002ff59:	mov    r12,QWORD PTR [rsp+0x58]
   14002ff5e:	add    rsp,0x20
   14002ff62:	pop    r15
   14002ff64:	pop    r14
   14002ff66:	pop    r13
   14002ff68:	ret    
   14002ff69:	int3   
   14002ff6a:	int3   
   14002ff6b:	int3   
   14002ff6c:	int3   
   14002ff6d:	int3   
   14002ff6e:	int3   
   14002ff6f:	int3   
   14002ff70:	mov    QWORD PTR [rsp+0x8],rbx
   14002ff75:	mov    QWORD PTR [rsp+0x10],rbp
   14002ff7a:	mov    QWORD PTR [rsp+0x18],rsi
   14002ff7f:	push   rdi
   14002ff80:	push   r12
   14002ff82:	push   r13
   14002ff84:	push   r14
   14002ff86:	push   r15
   14002ff88:	sub    rsp,0x20
   14002ff8c:	mov    rdi,rcx
   14002ff8f:	mov    rbp,r9
   14002ff92:	add    rcx,0x58
   14002ff96:	mov    r14,r8
   14002ff99:	mov    r12d,edx
   14002ff9c:	xor    esi,esi
   14002ff9e:	call   QWORD PTR [rip+0xd424]        # 0x14003d3c8
   14002ffa4:	mov    rax,QWORD PTR [rdi+0x90]
   14002ffab:	test   rax,rax
   14002ffae:	je     0x14002ffc8
   14002ffb0:	mov    rsi,rax
   14002ffb3:	mov    rax,QWORD PTR [rax]
   14002ffb6:	mov    rbx,QWORD PTR [rax+0x8]
   14002ffba:	mov    rcx,rbx
   14002ffbd:	call   QWORD PTR [rip+0xd765]        # 0x14003d728
   14002ffc3:	mov    rcx,rsi
   14002ffc6:	call   rbx
   14002ffc8:	mov    DWORD PTR [rdi+0xe4],0x1
   14002ffd2:	lea    rbx,[rdi+0xf0]
   14002ffd9:	mov    DWORD PTR [rdi+0xec],r12d
   14002ffe0:	mov    rcx,QWORD PTR [rbx]
   14002ffe3:	call   QWORD PTR [rip+0x230d7]        # 0x1400530c0
   14002ffe9:	and    QWORD PTR [rbx],0x0
   14002ffed:	lea    r12,[rdi+0xf8]
   14002fff4:	mov    rcx,QWORD PTR [r12]
   14002fff8:	call   QWORD PTR [rip+0x230c2]        # 0x1400530c0
   14002fffe:	and    QWORD PTR [r12],0x0
   140030003:	lea    r13,[rdi+0x100]
   14003000a:	mov    rcx,QWORD PTR [r13+0x0]
   14003000e:	call   QWORD PTR [rip+0x230ac]        # 0x1400530c0
   140030014:	and    QWORD PTR [r13+0x0],0x0
   140030019:	cmp    DWORD PTR [rdi+0xec],0x0
   140030020:	je     0x140030067
   140030022:	test   r14,r14
   140030025:	je     0x140030036
   140030027:	mov    rdx,r14
   14003002a:	mov    rcx,rbx
   14003002d:	call   0x14002edfc
   140030032:	test   eax,eax
   140030034:	js     0x140030060
   140030036:	test   rbp,rbp
   140030039:	je     0x14003004a
   14003003b:	mov    rdx,rbp
   14003003e:	mov    rcx,r12
   140030041:	call   0x14002edfc
   140030046:	test   eax,eax
   140030048:	js     0x140030060
   14003004a:	mov    rdx,QWORD PTR [rsp+0x70]
   14003004f:	test   rdx,rdx
   140030052:	je     0x140030067
   140030054:	mov    rcx,r13
   140030057:	call   0x14002edfc
   14003005c:	test   eax,eax
   14003005e:	jns    0x140030067
   140030060:	and    DWORD PTR [rdi+0xec],0x0
   140030067:	lea    rcx,[rdi+0x58]
   14003006b:	call   QWORD PTR [rip+0xd367]        # 0x14003d3d8
   140030071:	call   0x14000e048
   140030076:	mov    rbx,rax
   140030079:	test   rax,rax
   14003007c:	je     0x14003008e
   14003007e:	mov    rcx,rax
   140030081:	call   0x140035670
   140030086:	mov    rcx,rbx
   140030089:	call   0x14000dc9c
   14003008e:	and    DWORD PTR [rdi+0xe4],0x0
   140030095:	test   rsi,rsi
   140030098:	je     0x1400300af
   14003009a:	mov    rax,QWORD PTR [rsi]
   14003009d:	mov    rbx,QWORD PTR [rax+0x10]
   1400300a1:	mov    rcx,rbx
   1400300a4:	call   QWORD PTR [rip+0xd67e]        # 0x14003d728
   1400300aa:	mov    rcx,rsi
   1400300ad:	call   rbx
   1400300af:	mov    rbx,QWORD PTR [rsp+0x50]
   1400300b4:	xor    eax,eax
   1400300b6:	mov    rbp,QWORD PTR [rsp+0x58]
   1400300bb:	mov    rsi,QWORD PTR [rsp+0x60]
   1400300c0:	add    rsp,0x20
   1400300c4:	pop    r15
   1400300c6:	pop    r14
   1400300c8:	pop    r13
   1400300ca:	pop    r12
   1400300cc:	pop    rdi
   1400300cd:	ret    
   1400300ce:	int3   
   1400300cf:	int3   
   1400300d0:	int3   
   1400300d1:	int3   
   1400300d2:	int3   
   1400300d3:	int3   
   1400300d4:	int3   
   1400300d5:	int3   
   1400300d6:	int3   
   1400300d7:	int3   
   1400300d8:	int3   
   1400300d9:	int3   
   1400300da:	int3   
   1400300db:	int3   
   1400300dc:	int3   
   1400300dd:	int3   
   1400300de:	int3   
   1400300df:	int3   
   1400300e0:	rex push rbx
   1400300e2:	sub    rsp,0x20
   1400300e6:	mov    rbx,rcx
   1400300e9:	call   0x14002e5f8
   1400300ee:	mov    dl,BYTE PTR [rbx+0xa0]
   1400300f4:	lea    rcx,[rbx-0x70]
   1400300f8:	shr    dl,1
   1400300fa:	and    dl,0x1
   1400300fd:	call   0x140032e28
   140030102:	mov    rcx,QWORD PTR [rbx+0x130]
   140030109:	test   rcx,rcx
   14003010c:	je     0x140030114
   14003010e:	call   QWORD PTR [rip+0xd2d4]        # 0x14003d3e8
   140030114:	xor    eax,eax
   140030116:	add    rsp,0x20
   14003011a:	pop    rbx
   14003011b:	ret    
   14003011c:	int3   
   14003011d:	int3   
   14003011e:	int3   
   14003011f:	int3   
   140030120:	int3   
   140030121:	int3   
   140030122:	int3   
   140030123:	int3   
   140030124:	int3   
   140030125:	int3   
   140030126:	int3   
   140030127:	int3   
   140030128:	int3   
   140030129:	int3   
   14003012a:	int3   
   14003012b:	int3   
   14003012c:	int3   
   14003012d:	int3   
   14003012e:	int3   
   14003012f:	int3   
   140030130:	mov    rax,rsp
   140030133:	mov    QWORD PTR [rax+0x8],rbx
   140030137:	mov    QWORD PTR [rax+0x10],rbp
   14003013b:	mov    QWORD PTR [rax+0x18],rsi
   14003013f:	mov    QWORD PTR [rax+0x20],rdi
   140030143:	push   r14
   140030145:	sub    rsp,0x20
   140030149:	mov    rdi,rcx
   14003014c:	xor    ebp,ebp
   14003014e:	add    rcx,0x60
   140030152:	call   QWORD PTR [rip+0xd270]        # 0x14003d3c8
   140030158:	mov    rsi,QWORD PTR [rdi+0x50]
   14003015c:	test   rsi,rsi
   14003015f:	je     0x140030176
   140030161:	mov    rax,QWORD PTR [rsi]
   140030164:	mov    rbx,QWORD PTR [rax+0x8]
   140030168:	mov    rcx,rbx
   14003016b:	call   QWORD PTR [rip+0xd5b7]        # 0x14003d728
   140030171:	mov    rcx,rsi
   140030174:	call   rbx
   140030176:	cmp    BYTE PTR [rdi+0x119],bpl
   14003017d:	je     0x140030186
   14003017f:	mov    ebp,0x80070005
   140030184:	jmp    0x14003018f
   140030186:	mov    WORD PTR [rdi+0x119],0x1
   14003018f:	lea    rcx,[rdi+0x60]
   140030193:	call   QWORD PTR [rip+0xd23f]        # 0x14003d3d8
   140030199:	lea    rbx,[rdi+0xb0]
   1400301a0:	mov    rcx,rbx
   1400301a3:	call   QWORD PTR [rip+0xd21f]        # 0x14003d3c8
   1400301a9:	lea    rcx,[rdi+0x58]
   1400301ad:	call   0x14000ddec
   1400301b2:	mov    rcx,rbx
   1400301b5:	call   QWORD PTR [rip+0xd21d]        # 0x14003d3d8
   1400301bb:	cmp    QWORD PTR [rdi+0x48],0x0
   1400301c0:	je     0x1400301ca
   1400301c2:	mov    rcx,rdi
   1400301c5:	call   0x140010144
   1400301ca:	test   rsi,rsi
   1400301cd:	je     0x1400301e4
   1400301cf:	mov    rdx,QWORD PTR [rsi]
   1400301d2:	mov    rbx,QWORD PTR [rdx+0x10]
   1400301d6:	mov    rcx,rbx
   1400301d9:	call   QWORD PTR [rip+0xd549]        # 0x14003d728
   1400301df:	mov    rcx,rsi
   1400301e2:	call   rbx
   1400301e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400301e9:	mov    eax,ebp
   1400301eb:	mov    rbp,QWORD PTR [rsp+0x38]
   1400301f0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400301f5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400301fa:	add    rsp,0x20
   1400301fe:	pop    r14
   140030200:	ret    
   140030201:	int3   
   140030202:	int3   
   140030203:	int3   
   140030204:	int3   
   140030205:	int3   
   140030206:	int3   
   140030207:	int3   
   140030208:	mov    QWORD PTR [rsp+0x8],rbx
   14003020d:	mov    QWORD PTR [rsp+0x10],rbp
   140030212:	mov    QWORD PTR [rsp+0x18],rsi
   140030217:	push   rdi
   140030218:	sub    rsp,0x20
   14003021c:	mov    rsi,rcx
   14003021f:	xor    bpl,bpl
   140030222:	add    rcx,0x60
   140030226:	call   QWORD PTR [rip+0xd19c]        # 0x14003d3c8
   14003022c:	mov    eax,0x1
   140030231:	movzx  ebx,bpl
   140030235:	cmp    BYTE PTR [rsi+0x119],al
   14003023b:	lea    rcx,[rsi+0x60]
   14003023f:	cmovne ebx,eax
   140030242:	call   QWORD PTR [rip+0xd190]        # 0x14003d3d8
   140030248:	test   bl,bl
   14003024a:	je     0x140030261
   14003024c:	mov    rax,QWORD PTR [rsi]
   14003024f:	mov    rbx,QWORD PTR [rax+0x60]
   140030253:	mov    rcx,rbx
   140030256:	call   QWORD PTR [rip+0xd4cc]        # 0x14003d728
   14003025c:	mov    rcx,rsi
   14003025f:	call   rbx
   140030261:	mov    rbx,QWORD PTR [rsp+0x30]
   140030266:	mov    rbp,QWORD PTR [rsp+0x38]
   14003026b:	mov    rsi,QWORD PTR [rsp+0x40]
   140030270:	add    rsp,0x20
   140030274:	pop    rdi
   140030275:	ret    
   140030276:	int3   
   140030277:	int3   
   140030278:	int3   
   140030279:	int3   
   14003027a:	int3   
   14003027b:	int3   
   14003027c:	int3   
   14003027d:	int3   
   14003027e:	int3   
   14003027f:	int3   
   140030280:	mov    rax,rsp
   140030283:	push   rdi
   140030284:	push   r12
   140030286:	push   r13
   140030288:	push   r14
   14003028a:	push   r15
   14003028c:	sub    rsp,0x40
   140030290:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140030298:	mov    QWORD PTR [rax+0x8],rbx
   14003029c:	mov    QWORD PTR [rax+0x18],rbp
   1400302a0:	mov    QWORD PTR [rax+0x20],rsi
   1400302a4:	mov    r15,r9
   1400302a7:	mov    r12,r8
   1400302aa:	mov    r13,rdx
   1400302ad:	mov    rdi,rcx
   1400302b0:	xor    ebx,ebx
   1400302b2:	test   rdx,rdx
   1400302b5:	je     0x14003039e
   1400302bb:	test   r8,r8
   1400302be:	je     0x14003039e
   1400302c4:	test   r9,r9
   1400302c7:	je     0x14003039e
   1400302cd:	mov    r14,QWORD PTR [rsp+0x90]
   1400302d5:	test   r14,r14
   1400302d8:	je     0x14003039e
   1400302de:	mov    QWORD PTR [rdx],rbx
   1400302e1:	mov    QWORD PTR [r8],rbx
   1400302e4:	mov    QWORD PTR [r9],rbx
   1400302e7:	or     eax,0xffffffff
   1400302ea:	mov    WORD PTR [r14],ax
   1400302ee:	mov    ebp,ebx
   1400302f0:	cmp    BYTE PTR [rcx+0x111],bl
   1400302f6:	jne    0x140030395
   1400302fc:	cmp    QWORD PTR [rcx+0x48],rbx
   140030300:	je     0x140030395
   140030306:	lea    rsi,[rcx+0x58]
   14003030a:	mov    rcx,rsi
   14003030d:	call   QWORD PTR [rip+0xd0b5]        # 0x14003d3c8
   140030313:	mov    QWORD PTR [rsp+0x78],rbx
   140030318:	mov    rdi,QWORD PTR [rdi+0x48]
   14003031c:	mov    rax,QWORD PTR [rdi]
   14003031f:	mov    rbx,QWORD PTR [rax]
   140030322:	mov    rcx,rbx
   140030325:	call   QWORD PTR [rip+0xd3fd]        # 0x14003d728
   14003032b:	lea    r8,[rsp+0x78]
   140030330:	lea    rdx,[rip+0xf819]        # 0x14003fb50
   140030337:	mov    rcx,rdi
   14003033a:	call   rbx
   14003033c:	mov    rcx,rsi
   14003033f:	call   QWORD PTR [rip+0xd093]        # 0x14003d3d8
   140030345:	mov    rbx,QWORD PTR [rsp+0x78]
   14003034a:	test   rbx,rbx
   14003034d:	je     0x140030379
   14003034f:	mov    rax,QWORD PTR [rbx]
   140030352:	mov    rdi,QWORD PTR [rax+0x18]
   140030356:	mov    rcx,rdi
   140030359:	call   QWORD PTR [rip+0xd3c9]        # 0x14003d728
   14003035f:	mov    QWORD PTR [rsp+0x20],r14
   140030364:	mov    r9,r15
   140030367:	mov    r8,r12
   14003036a:	mov    rdx,r13
   14003036d:	mov    rcx,rbx
   140030370:	call   rdi
   140030372:	mov    ebp,eax
   140030374:	mov    rbx,QWORD PTR [rsp+0x78]
   140030379:	test   rbx,rbx
   14003037c:	je     0x14003039a
   14003037e:	mov    rcx,QWORD PTR [rbx]
   140030381:	mov    rdi,QWORD PTR [rcx+0x10]
   140030385:	mov    rcx,rdi
   140030388:	call   QWORD PTR [rip+0xd39a]        # 0x14003d728
   14003038e:	mov    rcx,rbx
   140030391:	call   rdi
   140030393:	jmp    0x14003039a
   140030395:	mov    ebp,0x80004005
   14003039a:	mov    eax,ebp
   14003039c:	jmp    0x1400303a3
   14003039e:	mov    eax,0x80004003
   1400303a3:	lea    r11,[rsp+0x40]
   1400303a8:	mov    rbx,QWORD PTR [r11+0x30]
   1400303ac:	mov    rbp,QWORD PTR [r11+0x40]
   1400303b0:	mov    rsi,QWORD PTR [r11+0x48]
   1400303b4:	mov    rsp,r11
   1400303b7:	pop    r15
   1400303b9:	pop    r14
   1400303bb:	pop    r13
   1400303bd:	pop    r12
   1400303bf:	pop    rdi
   1400303c0:	ret    
   1400303c1:	lea    rcx,[rdx+0x78]
   1400303c8:	jmp    0x14000f4f0
   1400303cd:	int3   
   1400303ce:	int3   
   1400303cf:	int3   
   1400303d0:	int3   
   1400303d1:	int3   
   1400303d2:	int3   
   1400303d3:	int3   
   1400303d4:	int3   
   1400303d5:	int3   
   1400303d6:	int3   
   1400303d7:	int3   
   1400303d8:	int3   
   1400303d9:	int3   
   1400303da:	int3   
   1400303db:	int3   
   1400303dc:	int3   
   1400303dd:	int3   
   1400303de:	int3   
   1400303df:	int3   
   1400303e0:	rex push rbp
   1400303e2:	push   rsi
   1400303e3:	push   rdi
   1400303e4:	sub    rsp,0x30
   1400303e8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400303f1:	mov    QWORD PTR [rsp+0x50],rbx
   1400303f6:	mov    rdi,rdx
   1400303f9:	mov    rsi,rcx
   1400303fc:	test   rdx,rdx
   1400303ff:	jne    0x14003040b
   140030401:	mov    eax,0x80004003
   140030406:	jmp    0x1400304ee
   14003040b:	and    QWORD PTR [rsp+0x58],0x0
   140030411:	mov    rax,QWORD PTR [rdx]
   140030414:	mov    rbx,QWORD PTR [rax]
   140030417:	mov    rcx,rbx
   14003041a:	call   QWORD PTR [rip+0xd308]        # 0x14003d728
   140030420:	lea    r8,[rsp+0x58]
   140030425:	lea    rdx,[rip+0xf79c]        # 0x14003fbc8
   14003042c:	mov    rcx,rdi
   14003042f:	call   rbx
   140030431:	mov    ebp,eax
   140030433:	test   eax,eax
   140030435:	js     0x1400304cd
   14003043b:	mov    rbx,QWORD PTR [rsp+0x58]
   140030440:	test   rbx,rbx
   140030443:	je     0x1400304d2
   140030449:	mov    ecx,0x10
   14003044e:	call   0x140013d94
   140030453:	mov    QWORD PTR [rsp+0x60],rax
   140030458:	test   rax,rax
   14003045b:	je     0x14003046f
   14003045d:	mov    rdx,QWORD PTR [rsp+0x58]
   140030462:	mov    rcx,rax
   140030465:	call   0x140031044
   14003046a:	mov    rdi,rax
   14003046d:	jmp    0x140030471
   14003046f:	xor    edi,edi
   140030471:	test   rdi,rdi
   140030474:	je     0x1400304c8
   140030476:	cmp    BYTE PTR [rsi+0x118],0x0
   14003047d:	je     0x140030495
   14003047f:	mov    r8,QWORD PTR [rsi+0x110]
   140030486:	mov    rdx,QWORD PTR [rsi+0x108]
   14003048d:	mov    rcx,rdi
   140030490:	call   0x140031594
   140030495:	mov    QWORD PTR [rsp+0x60],rdi
   14003049a:	lea    rcx,[rsi+0xd8]
   1400304a1:	lea    rdx,[rsp+0x60]
   1400304a6:	call   0x14000fb08
   1400304ab:	test   eax,eax
   1400304ad:	jne    0x1400304cd
   1400304af:	mov    rax,QWORD PTR [rdi]
   1400304b2:	mov    rbx,QWORD PTR [rax]
   1400304b5:	mov    rcx,rbx
   1400304b8:	call   QWORD PTR [rip+0xd26a]        # 0x14003d728
   1400304be:	mov    edx,0x1
   1400304c3:	mov    rcx,rdi
   1400304c6:	call   rbx
   1400304c8:	mov    ebp,0x8007000e
   1400304cd:	mov    rbx,QWORD PTR [rsp+0x58]
   1400304d2:	test   rbx,rbx
   1400304d5:	je     0x1400304ec
   1400304d7:	mov    rcx,QWORD PTR [rbx]
   1400304da:	mov    rdi,QWORD PTR [rcx+0x10]
   1400304de:	mov    rcx,rdi
   1400304e1:	call   QWORD PTR [rip+0xd241]        # 0x14003d728
   1400304e7:	mov    rcx,rbx
   1400304ea:	call   rdi
   1400304ec:	mov    eax,ebp
   1400304ee:	mov    rbx,QWORD PTR [rsp+0x50]
   1400304f3:	add    rsp,0x30
   1400304f7:	pop    rdi
   1400304f8:	pop    rsi
   1400304f9:	pop    rbp
   1400304fa:	ret    
   1400304fb:	lea    rcx,[rdx+0x58]
   140030502:	jmp    0x14000f4f0
   140030507:	int3   
   140030508:	int3   
   140030509:	int3   
   14003050a:	int3   
   14003050b:	int3   
   14003050c:	int3   
   14003050d:	int3   
   14003050e:	int3   
   14003050f:	int3   
   140030510:	mov    rax,rsp
   140030513:	mov    QWORD PTR [rax+0x8],rbx
   140030517:	mov    QWORD PTR [rax+0x10],rbp
   14003051b:	mov    QWORD PTR [rax+0x18],rsi
   14003051f:	mov    QWORD PTR [rax+0x20],rdi
   140030523:	push   r12
   140030525:	push   r14
   140030527:	push   r15
   140030529:	sub    rsp,0x20
   14003052d:	mov    r12,QWORD PTR [rcx+0x50]
   140030531:	mov    r15,rcx
   140030534:	mov    QWORD PTR [rcx+0x50],rdx
   140030538:	mov    rdi,rdx
   14003053b:	mov    rax,QWORD PTR [rdx]
   14003053e:	mov    rbx,QWORD PTR [rax+0x8]
   140030542:	mov    rcx,rbx
   140030545:	call   QWORD PTR [rip+0xd1dd]        # 0x14003d728
   14003054b:	mov    rcx,rdi
   14003054e:	call   rbx
   140030550:	lea    rbp,[r15+0x108]
   140030557:	lea    r14,[r15+0x48]
   14003055b:	mov    rcx,rbp
   14003055e:	and    QWORD PTR [r14],0x0
   140030562:	call   0x14000ca70
   140030567:	lea    rsi,[r15+0x110]
   14003056e:	mov    rcx,rsi
   140030571:	call   0x14000ca70
   140030576:	mov    rdi,QWORD PTR [r15+0x50]
   14003057a:	mov    rax,QWORD PTR [rdi]
   14003057d:	mov    rbx,QWORD PTR [rax+0x40]
   140030581:	mov    rcx,rbx
   140030584:	call   QWORD PTR [rip+0xd19e]        # 0x14003d728
   14003058a:	mov    r8,rsi
   14003058d:	mov    rdx,rbp
   140030590:	mov    rcx,rdi
   140030593:	call   rbx
   140030595:	mov    rcx,QWORD PTR [r15+0x50]
   140030599:	mov    rdx,r14
   14003059c:	call   0x1400117d4
   1400305a1:	cmp    QWORD PTR [r14],0x0
   1400305a5:	je     0x1400305af
   1400305a7:	mov    rcx,r15
   1400305aa:	call   0x14001016c
   1400305af:	mov    rax,QWORD PTR [r12]
   1400305b3:	mov    rbx,QWORD PTR [rax+0x10]
   1400305b7:	mov    rcx,rbx
   1400305ba:	call   QWORD PTR [rip+0xd168]        # 0x14003d728
   1400305c0:	mov    rcx,r12
   1400305c3:	mov    rax,rbx
   1400305c6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400305cb:	mov    rbp,QWORD PTR [rsp+0x48]
   1400305d0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400305d5:	mov    rdi,QWORD PTR [rsp+0x58]
   1400305da:	add    rsp,0x20
   1400305de:	pop    r15
   1400305e0:	pop    r14
   1400305e2:	pop    r12
   1400305e4:	rex.W jmp rax
   1400305e7:	int3   
   1400305e8:	int3   
   1400305e9:	int3   
   1400305ea:	int3   
   1400305eb:	int3   
   1400305ec:	int3   
   1400305ed:	int3   
   1400305ee:	int3   
   1400305ef:	int3   
   1400305f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400305f5:	mov    QWORD PTR [rsp+0x18],rbp
   1400305fa:	mov    QWORD PTR [rsp+0x20],rsi
   1400305ff:	push   rdi
   140030600:	push   r12
   140030602:	push   r13
   140030604:	push   r14
   140030606:	push   r15
   140030608:	sub    rsp,0x50
   14003060c:	mov    rax,QWORD PTR [rcx]
   14003060f:	mov    r14,rcx
   140030612:	mov    ebp,r9d
   140030615:	movzx  r15d,r8w
   140030619:	mov    r12d,edx
   14003061c:	mov    rbx,QWORD PTR [rax+0x68]
   140030620:	mov    rcx,rbx
   140030623:	call   QWORD PTR [rip+0xd0ff]        # 0x14003d728
   140030629:	xor    edx,edx
   14003062b:	mov    rcx,r14
   14003062e:	call   rbx
   140030630:	mov    rax,QWORD PTR [r14]
   140030633:	mov    rbx,QWORD PTR [rax+0x50]
   140030637:	mov    rcx,rbx
   14003063a:	call   QWORD PTR [rip+0xd0e8]        # 0x14003d728
   140030640:	xor    r8d,r8d
   140030643:	xor    edx,edx
   140030645:	mov    rcx,r14
   140030648:	call   rbx
   14003064a:	xor    r13d,r13d
   14003064d:	mov    esi,eax
   14003064f:	test   eax,eax
   140030651:	js     0x140030766
   140030657:	lea    ecx,[r13+0x48]
   14003065b:	call   0x140013d94
   140030660:	mov    QWORD PTR [rsp+0x80],rax
   140030668:	mov    rdi,rax
   14003066b:	test   rax,rax
   14003066e:	je     0x140030695
   140030670:	mov    BYTE PTR [rdi+0x8],r13b
   140030674:	lea    rax,[rip+0x12805]        # 0x140042e80
   14003067b:	mov    QWORD PTR [rdi],rax
   14003067e:	mov    QWORD PTR [rdi+0x18],r13
   140030682:	mov    QWORD PTR [rdi+0x20],r13
   140030686:	mov    QWORD PTR [rdi+0x28],r13
   14003068a:	mov    QWORD PTR [rdi+0x30],r13
   14003068e:	mov    WORD PTR [rdi+0x3c],r13w
   140030693:	jmp    0x140030698
   140030695:	mov    rdi,r13
   140030698:	test   rdi,rdi
   14003069b:	jne    0x1400306a7
   14003069d:	mov    esi,0x8007000e
   1400306a2:	jmp    0x140030766
   1400306a7:	mov    rax,QWORD PTR [rsp+0xc8]
   1400306af:	mov    r9d,ebp
   1400306b2:	mov    QWORD PTR [rsp+0x48],rax
   1400306b7:	movzx  r8d,r15w
   1400306bb:	mov    rax,QWORD PTR [rsp+0xc0]
   1400306c3:	mov    edx,r12d
   1400306c6:	mov    QWORD PTR [rsp+0x40],rax
   1400306cb:	mov    rcx,rdi
   1400306ce:	mov    rax,QWORD PTR [rsp+0xb8]
   1400306d6:	mov    QWORD PTR [rsp+0x38],rax
   1400306db:	mov    rax,QWORD PTR [rsp+0xb0]
   1400306e3:	mov    QWORD PTR [rsp+0x30],rax
   1400306e8:	mov    eax,DWORD PTR [rsp+0xa8]
   1400306ef:	mov    DWORD PTR [rsp+0x28],eax
   1400306f3:	movzx  eax,WORD PTR [rsp+0xa0]
   1400306fb:	mov    WORD PTR [rsp+0x20],ax
   140030700:	call   0x140031620
   140030705:	mov    esi,eax
   140030707:	test   eax,eax
   140030709:	js     0x140030766
   14003070b:	lea    rcx,[r14+0xd8]
   140030712:	mov    QWORD PTR [rsp+0x80],rdi
   14003071a:	lea    rdx,[rsp+0x80]
   140030722:	call   0x14000fb08
   140030727:	test   eax,eax
   140030729:	jne    0x14003074b
   14003072b:	mov    rax,QWORD PTR [rdi]
   14003072e:	mov    esi,0x8007000e
   140030733:	mov    rbx,QWORD PTR [rax]
   140030736:	mov    rcx,rbx
   140030739:	call   QWORD PTR [rip+0xcfe9]        # 0x14003d728
   14003073f:	mov    edx,0x1
   140030744:	mov    rcx,rdi
   140030747:	call   rbx
   140030749:	jmp    0x140030766
   14003074b:	mov    rax,QWORD PTR [r14]
   14003074e:	mov    rbx,QWORD PTR [rax+0x58]
   140030752:	mov    rcx,rbx
   140030755:	call   QWORD PTR [rip+0xcfcd]        # 0x14003d728
   14003075b:	mov    rcx,r14
   14003075e:	call   rbx
   140030760:	mov    esi,eax
   140030762:	test   eax,eax
   140030764:	jns    0x14003077b
   140030766:	mov    rax,QWORD PTR [r14]
   140030769:	mov    rbx,QWORD PTR [rax+0x60]
   14003076d:	mov    rcx,rbx
   140030770:	call   QWORD PTR [rip+0xcfb2]        # 0x14003d728
   140030776:	mov    rcx,r14
   140030779:	call   rbx
   14003077b:	lea    r11,[rsp+0x50]
   140030780:	mov    eax,esi
   140030782:	mov    rbx,QWORD PTR [r11+0x38]
   140030786:	mov    rbp,QWORD PTR [r11+0x40]
   14003078a:	mov    rsi,QWORD PTR [r11+0x48]
   14003078e:	mov    rsp,r11
   140030791:	pop    r15
   140030793:	pop    r14
   140030795:	pop    r13
   140030797:	pop    r12
   140030799:	pop    rdi
   14003079a:	ret    
   14003079b:	int3   
   14003079c:	int3   
   14003079d:	int3   
   14003079e:	int3   
   14003079f:	int3   
   1400307a0:	int3   
   1400307a1:	int3   
   1400307a2:	int3   
   1400307a3:	int3   
   1400307a4:	rex push rbp
   1400307a6:	push   rbx
   1400307a7:	push   rsi
   1400307a8:	push   rdi
   1400307a9:	push   r12
   1400307ab:	push   r14
   1400307ad:	push   r15
   1400307af:	mov    rbp,rsp
   1400307b2:	sub    rsp,0x50
   1400307b6:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400307be:	mov    r12b,dl
   1400307c1:	mov    r14,rcx
   1400307c4:	xor    r15d,r15d
   1400307c7:	lea    rsi,[rcx+0xb0]
   1400307ce:	mov    rcx,rsi
   1400307d1:	call   QWORD PTR [rip+0xcbf1]        # 0x14003d3c8
   1400307d7:	mov    rdi,QWORD PTR [r14+0x58]
   1400307db:	mov    QWORD PTR [rbp-0x8],rdi
   1400307df:	test   rdi,rdi
   1400307e2:	je     0x1400307fa
   1400307e4:	mov    rax,QWORD PTR [rdi]
   1400307e7:	mov    rbx,QWORD PTR [rax+0x8]
   1400307eb:	mov    rcx,rbx
   1400307ee:	call   QWORD PTR [rip+0xcf34]        # 0x14003d728
   1400307f4:	mov    rcx,rdi
   1400307f7:	call   rbx
   1400307f9:	nop
   1400307fa:	mov    rcx,rsi
   1400307fd:	call   QWORD PTR [rip+0xcbd5]        # 0x14003d3d8
   140030803:	test   rdi,rdi
   140030806:	je     0x1400309ed
   14003080c:	and    QWORD PTR [rbp+0x58],0x0
   140030811:	and    QWORD PTR [rbp+0x40],0x0
   140030816:	and    QWORD PTR [rbp+0x50],0x0
   14003081b:	mov    rax,QWORD PTR [rdi]
   14003081e:	mov    rbx,QWORD PTR [rax]
   140030821:	mov    rcx,rbx
   140030824:	call   QWORD PTR [rip+0xcefe]        # 0x14003d728
   14003082a:	lea    r8,[rbp+0x58]
   14003082e:	lea    rdx,[rip+0xe943]        # 0x14003f178
   140030835:	mov    rcx,rdi
   140030838:	call   rbx
   14003083a:	mov    rbx,QWORD PTR [rbp+0x58]
   14003083e:	test   rbx,rbx
   140030841:	je     0x14003086e
   140030843:	mov    rax,QWORD PTR [rbx]
   140030846:	mov    rsi,QWORD PTR [rax+0x18]
   14003084a:	mov    rcx,rsi
   14003084d:	call   QWORD PTR [rip+0xced5]        # 0x14003d728
   140030853:	lea    rax,[rbp+0x40]
   140030857:	mov    QWORD PTR [rsp+0x20],rax
   14003085c:	lea    rdx,[rip+0x12c5d]        # 0x1400434c0
   140030863:	mov    r9,rdx
   140030866:	xor    r8d,r8d
   140030869:	mov    rcx,rbx
   14003086c:	call   rsi
   14003086e:	mov    rbx,QWORD PTR [rbp+0x40]
   140030872:	test   rbx,rbx
   140030875:	je     0x14003089d
   140030877:	mov    rax,QWORD PTR [rbx]
   14003087a:	mov    rsi,QWORD PTR [rax]
   14003087d:	mov    rcx,rsi
   140030880:	call   QWORD PTR [rip+0xcea2]        # 0x14003d728
   140030886:	lea    r8,[rbp+0x50]
   14003088a:	lea    rdx,[rip+0xf317]        # 0x14003fba8
   140030891:	mov    rcx,rbx
   140030894:	call   rsi
   140030896:	mov    r15d,eax
   140030899:	mov    rbx,QWORD PTR [rbp+0x40]
   14003089d:	test   r12b,r12b
   1400308a0:	je     0x14003091f
   1400308a2:	test   rbx,rbx
   1400308a5:	je     0x140030916
   1400308a7:	test   r15d,r15d
   1400308aa:	js     0x140030992
   1400308b0:	mov    rax,QWORD PTR [rbx]
   1400308b3:	mov    rsi,QWORD PTR [rax+0x28]
   1400308b7:	mov    rcx,rsi
   1400308ba:	call   QWORD PTR [rip+0xce68]        # 0x14003d728
   1400308c0:	mov    rcx,rbx
   1400308c3:	call   rsi
   1400308c5:	test   eax,eax
   1400308c7:	js     0x14003098e
   1400308cd:	mov    rsi,QWORD PTR [rbp+0x50]
   1400308d1:	test   rsi,rsi
   1400308d4:	je     0x1400308f3
   1400308d6:	mov    rax,QWORD PTR [rsi]
   1400308d9:	mov    rbx,QWORD PTR [rax+0x18]
   1400308dd:	mov    rcx,rbx
   1400308e0:	call   QWORD PTR [rip+0xce42]        # 0x14003d728
   1400308e6:	xor    edx,edx
   1400308e8:	mov    r8d,0x1f4
   1400308ee:	mov    rcx,rsi
   1400308f1:	call   rbx
   1400308f3:	mov    rbx,QWORD PTR [rbp+0x40]
   1400308f7:	test   eax,eax
   1400308f9:	js     0x140030992
   1400308ff:	mov    rax,QWORD PTR [rbx]
   140030902:	mov    rsi,QWORD PTR [rax+0x30]
   140030906:	mov    rcx,rsi
   140030909:	call   QWORD PTR [rip+0xce19]        # 0x14003d728
   14003090f:	mov    rcx,rbx
   140030912:	call   rsi
   140030914:	jmp    0x14003098e
   140030916:	mov    rax,QWORD PTR [rdi]
   140030919:	mov    rbx,QWORD PTR [rax+0x20]
   14003091d:	jmp    0x140030980
   14003091f:	test   rbx,rbx
   140030922:	je     0x140030979
   140030924:	test   r15d,r15d
   140030927:	js     0x140030992
   140030929:	mov    rax,QWORD PTR [rbx]
   14003092c:	mov    rsi,QWORD PTR [rax+0x18]
   140030930:	mov    rcx,rsi
   140030933:	call   QWORD PTR [rip+0xcdef]        # 0x14003d728
   140030939:	mov    rcx,rbx
   14003093c:	call   rsi
   14003093e:	test   eax,eax
   140030940:	js     0x14003098e
   140030942:	mov    rsi,QWORD PTR [rbp+0x50]
   140030946:	test   rsi,rsi
   140030949:	je     0x140030968
   14003094b:	mov    rax,QWORD PTR [rsi]
   14003094e:	mov    rbx,QWORD PTR [rax+0x18]
   140030952:	mov    rcx,rbx
   140030955:	call   QWORD PTR [rip+0xcdcd]        # 0x14003d728
   14003095b:	xor    edx,edx
   14003095d:	mov    r8d,0x1f4
   140030963:	mov    rcx,rsi
   140030966:	call   rbx
   140030968:	mov    rbx,QWORD PTR [rbp+0x40]
   14003096c:	test   eax,eax
   14003096e:	js     0x140030992
   140030970:	mov    rax,QWORD PTR [rbx]
   140030973:	mov    rsi,QWORD PTR [rax+0x20]
   140030977:	jmp    0x140030906
   140030979:	mov    rax,QWORD PTR [rdi]
   14003097c:	mov    rbx,QWORD PTR [rax+0x18]
   140030980:	mov    rcx,rbx
   140030983:	call   QWORD PTR [rip+0xcd9f]        # 0x14003d728
   140030989:	mov    rcx,rdi
   14003098c:	call   rbx
   14003098e:	mov    rbx,QWORD PTR [rbp+0x40]
   140030992:	mov    rsi,QWORD PTR [rbp+0x50]
   140030996:	test   rsi,rsi
   140030999:	je     0x1400309b4
   14003099b:	mov    rax,QWORD PTR [rsi]
   14003099e:	mov    rbx,QWORD PTR [rax+0x10]
   1400309a2:	mov    rcx,rbx
   1400309a5:	call   QWORD PTR [rip+0xcd7d]        # 0x14003d728
   1400309ab:	mov    rcx,rsi
   1400309ae:	call   rbx
   1400309b0:	mov    rbx,QWORD PTR [rbp+0x40]
   1400309b4:	test   rbx,rbx
   1400309b7:	je     0x1400309cf
   1400309b9:	mov    rax,QWORD PTR [rbx]
   1400309bc:	mov    rsi,QWORD PTR [rax+0x10]
   1400309c0:	mov    rcx,rsi
   1400309c3:	call   QWORD PTR [rip+0xcd5f]        # 0x14003d728
   1400309c9:	mov    rcx,rbx
   1400309cc:	call   rsi
   1400309ce:	nop
   1400309cf:	mov    rbx,QWORD PTR [rbp+0x58]
   1400309d3:	test   rbx,rbx
   1400309d6:	je     0x1400309ed
   1400309d8:	mov    rax,QWORD PTR [rbx]
   1400309db:	mov    rsi,QWORD PTR [rax+0x10]
   1400309df:	mov    rcx,rsi
   1400309e2:	call   QWORD PTR [rip+0xcd40]        # 0x14003d728
   1400309e8:	mov    rcx,rbx
   1400309eb:	call   rsi
   1400309ed:	lea    rsi,[r14+0x88]
   1400309f4:	mov    rcx,rsi
   1400309f7:	call   QWORD PTR [rip+0xc9cb]        # 0x14003d3c8
   1400309fd:	lea    r15,[r14+0x120]
   140030a04:	cmp    QWORD PTR [r15],0x0
   140030a08:	jne    0x140030a49
   140030a0a:	mov    rax,QWORD PTR [r14]
   140030a0d:	mov    rbx,QWORD PTR [rax+0x8]
   140030a11:	mov    rcx,rbx
   140030a14:	call   QWORD PTR [rip+0xcd0e]        # 0x14003d728
   140030a1a:	mov    rcx,r14
   140030a1d:	call   rbx
   140030a1f:	mov    DWORD PTR [rsp+0x30],0x8
   140030a27:	and    DWORD PTR [rsp+0x28],0x0
   140030a2c:	mov    DWORD PTR [rsp+0x20],0x1388
   140030a34:	mov    r9,r14
   140030a37:	lea    r8,[rip+0x432]        # 0x140030e70
   140030a3e:	xor    edx,edx
   140030a40:	mov    rcx,r15
   140030a43:	call   QWORD PTR [rip+0xc9ef]        # 0x14003d438
   140030a49:	mov    rcx,rsi
   140030a4c:	call   QWORD PTR [rip+0xc986]        # 0x14003d3d8
   140030a52:	nop
   140030a53:	test   rdi,rdi
   140030a56:	je     0x140030a6d
   140030a58:	mov    rax,QWORD PTR [rdi]
   140030a5b:	mov    rbx,QWORD PTR [rax+0x10]
   140030a5f:	mov    rcx,rbx
   140030a62:	call   QWORD PTR [rip+0xccc0]        # 0x14003d728
   140030a68:	mov    rcx,rdi
   140030a6b:	call   rbx
   140030a6d:	add    rsp,0x50
   140030a71:	pop    r15
   140030a73:	pop    r14
   140030a75:	pop    r12
   140030a77:	pop    rdi
   140030a78:	pop    rsi
   140030a79:	pop    rbx
   140030a7a:	pop    rbp
   140030a7b:	ret    
   140030a7c:	lea    rcx,[rdx+0x48]
   140030a83:	jmp    0x14000f4f0
   140030a88:	lea    rcx,[rdx+0xa8]
   140030a8f:	jmp    0x14000f4f0
   140030a94:	lea    rcx,[rdx+0x90]
   140030a9b:	jmp    0x14000f4f0
   140030aa0:	lea    rcx,[rdx+0xa0]
   140030aa7:	jmp    0x14000f4f0
   140030aac:	int3   
   140030aad:	int3   
   140030aae:	int3   
   140030aaf:	int3   
   140030ab0:	int3   
   140030ab1:	int3   
   140030ab2:	int3   
   140030ab3:	int3   
   140030ab4:	int3   
   140030ab5:	int3   
   140030ab6:	int3   
   140030ab7:	int3   
   140030ab8:	int3   
   140030ab9:	int3   
   140030aba:	int3   
   140030abb:	int3   
   140030abc:	int3   
   140030abd:	int3   
   140030abe:	int3   
   140030abf:	int3   
   140030ac0:	mov    rax,rsp
   140030ac3:	push   rdi
   140030ac4:	push   r14
   140030ac6:	push   r15
   140030ac8:	sub    rsp,0x30
   140030acc:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140030ad4:	mov    QWORD PTR [rax+0x10],rbx
   140030ad8:	mov    QWORD PTR [rax+0x18],rbp
   140030adc:	mov    QWORD PTR [rax+0x20],rsi
   140030ae0:	mov    ebp,r8d
   140030ae3:	mov    r15,rdx
   140030ae6:	mov    r14,rcx
   140030ae9:	mov    rax,QWORD PTR [rcx]
   140030aec:	mov    rbx,QWORD PTR [rax+0x68]
   140030af0:	mov    rcx,rbx
   140030af3:	call   QWORD PTR [rip+0xcc2f]        # 0x14003d728
   140030af9:	xor    edx,edx
   140030afb:	mov    rcx,r14
   140030afe:	call   rbx
   140030b00:	mov    rax,QWORD PTR [r14]
   140030b03:	mov    rbx,QWORD PTR [rax+0x50]
   140030b07:	mov    rcx,rbx
   140030b0a:	call   QWORD PTR [rip+0xcc18]        # 0x14003d728
   140030b10:	xor    r8d,r8d
   140030b13:	xor    edx,edx
   140030b15:	mov    rcx,r14
   140030b18:	call   rbx
   140030b1a:	mov    esi,eax
   140030b1c:	test   eax,eax
   140030b1e:	js     0x140030bb9
   140030b24:	mov    ecx,0x18
   140030b29:	call   0x140013d94
   140030b2e:	mov    rdi,rax
   140030b31:	mov    QWORD PTR [rsp+0x50],rax
   140030b36:	test   rax,rax
   140030b39:	je     0x140030b56
   140030b3b:	lea    rax,[rip+0x1234e]        # 0x140042e90
   140030b42:	mov    QWORD PTR [rdi],rax
   140030b45:	lea    rcx,[rdi+0x8]
   140030b49:	mov    rdx,r15
   140030b4c:	call   0x140011678
   140030b51:	mov    DWORD PTR [rdi+0x10],ebp
   140030b54:	jmp    0x140030b58
   140030b56:	xor    edi,edi
   140030b58:	test   rdi,rdi
   140030b5b:	jne    0x140030b64
   140030b5d:	mov    esi,0x8007000e
   140030b62:	jmp    0x140030bb9
   140030b64:	mov    QWORD PTR [rsp+0x50],rdi
   140030b69:	lea    rcx,[r14+0xd8]
   140030b70:	lea    rdx,[rsp+0x50]
   140030b75:	call   0x14000fb08
   140030b7a:	test   eax,eax
   140030b7c:	jne    0x140030b9e
   140030b7e:	mov    esi,0x8007000e
   140030b83:	mov    rax,QWORD PTR [rdi]
   140030b86:	mov    rbx,QWORD PTR [rax]
   140030b89:	mov    rcx,rbx
   140030b8c:	call   QWORD PTR [rip+0xcb96]        # 0x14003d728
   140030b92:	mov    edx,0x1
   140030b97:	mov    rcx,rdi
   140030b9a:	call   rbx
   140030b9c:	jmp    0x140030bb9
   140030b9e:	mov    rax,QWORD PTR [r14]
   140030ba1:	mov    rbx,QWORD PTR [rax+0x58]
   140030ba5:	mov    rcx,rbx
   140030ba8:	call   QWORD PTR [rip+0xcb7a]        # 0x14003d728
   140030bae:	mov    rcx,r14
   140030bb1:	call   rbx
   140030bb3:	mov    esi,eax
   140030bb5:	test   eax,eax
   140030bb7:	jns    0x140030bce
   140030bb9:	mov    rax,QWORD PTR [r14]
   140030bbc:	mov    rbx,QWORD PTR [rax+0x60]
   140030bc0:	mov    rcx,rbx
   140030bc3:	call   QWORD PTR [rip+0xcb5f]        # 0x14003d728
   140030bc9:	mov    rcx,r14
   140030bcc:	call   rbx
   140030bce:	mov    eax,esi
   140030bd0:	mov    rbx,QWORD PTR [rsp+0x58]
   140030bd5:	mov    rbp,QWORD PTR [rsp+0x60]
   140030bda:	mov    rsi,QWORD PTR [rsp+0x68]
   140030bdf:	add    rsp,0x30
   140030be3:	pop    r15
   140030be5:	pop    r14
   140030be7:	pop    rdi
   140030be8:	ret    
   140030be9:	mov    rcx,QWORD PTR [rdx+0x50]
   140030bf0:	jmp    0x140013de0
   140030bf5:	mov    rcx,QWORD PTR [rdx+0x50]
   140030bfc:	jmp    0x140015d18
   140030c01:	int3   
   140030c02:	int3   
   140030c03:	int3   
   140030c04:	int3   
   140030c05:	int3   
   140030c06:	int3   
   140030c07:	int3   
   140030c08:	int3   
   140030c09:	int3   
   140030c0a:	int3   
   140030c0b:	int3   
   140030c0c:	int3   
   140030c0d:	int3   
   140030c0e:	int3   
   140030c0f:	int3   
   140030c10:	rex push rdi
   140030c12:	sub    rsp,0x30
   140030c16:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140030c1f:	mov    QWORD PTR [rsp+0x40],rbx
   140030c24:	mov    QWORD PTR [rsp+0x48],rsi
   140030c29:	mov    rbx,rdx
   140030c2c:	mov    rsi,rcx
   140030c2f:	mov    ecx,0x38
   140030c34:	call   0x140013d94
   140030c39:	mov    QWORD PTR [rsp+0x50],rax
   140030c3e:	test   rax,rax
   140030c41:	je     0x140030c50
   140030c43:	mov    rcx,rax
   140030c46:	call   0x140030fb4
   140030c4b:	mov    rdi,rax
   140030c4e:	jmp    0x140030c52
   140030c50:	xor    edi,edi
   140030c52:	test   rdi,rdi
   140030c55:	jne    0x140030c5e
   140030c57:	mov    eax,0x8007000e
   140030c5c:	jmp    0x140030ca0
   140030c5e:	mov    rdx,rbx
   140030c61:	mov    rcx,rdi
   140030c64:	call   0x1400314b0
   140030c69:	mov    QWORD PTR [rsp+0x50],rdi
   140030c6e:	lea    rcx,[rsi+0xd8]
   140030c75:	lea    rdx,[rsp+0x50]
   140030c7a:	call   0x14000fb08
   140030c7f:	test   eax,eax
   140030c81:	jne    0x140030c9e
   140030c83:	mov    rax,QWORD PTR [rdi]
   140030c86:	mov    rbx,QWORD PTR [rax]
   140030c89:	mov    rcx,rbx
   140030c8c:	call   QWORD PTR [rip+0xca96]        # 0x14003d728
   140030c92:	mov    edx,0x1
   140030c97:	mov    rcx,rdi
   140030c9a:	call   rbx
   140030c9c:	jmp    0x140030c57
   140030c9e:	xor    eax,eax
   140030ca0:	mov    rbx,QWORD PTR [rsp+0x40]
   140030ca5:	mov    rsi,QWORD PTR [rsp+0x48]
   140030caa:	add    rsp,0x30
   140030cae:	pop    rdi
   140030caf:	ret    
   140030cb0:	mov    rcx,QWORD PTR [rdx+0x50]
   140030cb7:	jmp    0x140013de0
   140030cbc:	int3   
   140030cbd:	int3   
   140030cbe:	int3   
   140030cbf:	int3   
   140030cc0:	int3   
   140030cc1:	int3   
   140030cc2:	int3   
   140030cc3:	int3   
   140030cc4:	int3   
   140030cc5:	int3   
   140030cc6:	int3   
   140030cc7:	int3   
   140030cc8:	int3   
   140030cc9:	int3   
   140030cca:	int3   
   140030ccb:	int3   
   140030ccc:	int3   
   140030ccd:	int3   
   140030cce:	int3   
   140030ccf:	int3   
   140030cd0:	mov    rax,rsp
   140030cd3:	push   rdi
   140030cd4:	sub    rsp,0x40
   140030cd8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140030ce0:	mov    QWORD PTR [rax+0x8],rbx
   140030ce4:	mov    QWORD PTR [rax+0x10],rbp
   140030ce8:	mov    QWORD PTR [rax+0x18],rsi
   140030cec:	movzx  ebx,r8w
   140030cf0:	movzx  esi,dx
   140030cf3:	mov    rbp,rcx
   140030cf6:	mov    ecx,0x38
   140030cfb:	call   0x140013d94
   140030d00:	mov    QWORD PTR [rsp+0x68],rax
   140030d05:	test   rax,rax
   140030d08:	je     0x140030d17
   140030d0a:	mov    rcx,rax
   140030d0d:	call   0x140030fb4
   140030d12:	mov    rdi,rax
   140030d15:	jmp    0x140030d19
   140030d17:	xor    edi,edi
   140030d19:	test   rdi,rdi
   140030d1c:	jne    0x140030d25
   140030d1e:	mov    eax,0x8007000e
   140030d23:	jmp    0x140030d75
   140030d25:	xor    eax,eax
   140030d27:	cmp    bx,0xffff
   140030d2b:	sete   r9b
   140030d2f:	mov    BYTE PTR [rsp+0x20],al
   140030d33:	movzx  edx,si
   140030d36:	mov    rcx,rdi
   140030d39:	call   0x14003142c
   140030d3e:	mov    QWORD PTR [rsp+0x68],rdi
   140030d43:	lea    rcx,[rbp+0xd8]
   140030d4a:	lea    rdx,[rsp+0x68]
   140030d4f:	call   0x14000fb08
   140030d54:	test   eax,eax
   140030d56:	jne    0x140030d73
   140030d58:	mov    rax,QWORD PTR [rdi]
   140030d5b:	mov    rbx,QWORD PTR [rax]
   140030d5e:	mov    rcx,rbx
   140030d61:	call   QWORD PTR [rip+0xc9c1]        # 0x14003d728
   140030d67:	mov    edx,0x1
   140030d6c:	mov    rcx,rdi
   140030d6f:	call   rbx
   140030d71:	jmp    0x140030d1e
   140030d73:	xor    eax,eax
   140030d75:	mov    rbx,QWORD PTR [rsp+0x50]
   140030d7a:	mov    rbp,QWORD PTR [rsp+0x58]
   140030d7f:	mov    rsi,QWORD PTR [rsp+0x60]
   140030d84:	add    rsp,0x40
   140030d88:	pop    rdi
   140030d89:	ret    
   140030d8a:	mov    rcx,QWORD PTR [rdx+0x68]
   140030d91:	jmp    0x140013de0
   140030d96:	int3   
   140030d97:	int3   
   140030d98:	int3   
   140030d99:	int3   
   140030d9a:	int3   
   140030d9b:	int3   
   140030d9c:	int3   
   140030d9d:	int3   
   140030d9e:	int3   
   140030d9f:	int3   
   140030da0:	mov    rax,rsp
   140030da3:	push   rdi
   140030da4:	sub    rsp,0x40
   140030da8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140030db0:	mov    QWORD PTR [rax+0x8],rbx
   140030db4:	mov    QWORD PTR [rax+0x10],rbp
   140030db8:	mov    QWORD PTR [rax+0x18],rsi
   140030dbc:	movzx  ebx,r8w
   140030dc0:	movzx  esi,dx
   140030dc3:	mov    rbp,rcx
   140030dc6:	mov    ecx,0x38
   140030dcb:	call   0x140013d94
   140030dd0:	mov    QWORD PTR [rsp+0x68],rax
   140030dd5:	test   rax,rax
   140030dd8:	je     0x140030de7
   140030dda:	mov    rcx,rax
   140030ddd:	call   0x140030fb4
   140030de2:	mov    rdi,rax
   140030de5:	jmp    0x140030de9
   140030de7:	xor    edi,edi
   140030de9:	test   rdi,rdi
   140030dec:	jne    0x140030df5
   140030dee:	mov    eax,0x8007000e
   140030df3:	jmp    0x140030e44
   140030df5:	cmp    bx,0xffff
   140030df9:	sete   r9b
   140030dfd:	mov    BYTE PTR [rsp+0x20],0x1
   140030e02:	movzx  edx,si
   140030e05:	mov    rcx,rdi
   140030e08:	call   0x14003142c
   140030e0d:	mov    QWORD PTR [rsp+0x68],rdi
   140030e12:	lea    rcx,[rbp+0xd8]
   140030e19:	lea    rdx,[rsp+0x68]
   140030e1e:	call   0x14000fb08
   140030e23:	test   eax,eax
   140030e25:	jne    0x140030e42
   140030e27:	mov    rax,QWORD PTR [rdi]
   140030e2a:	mov    rbx,QWORD PTR [rax]
   140030e2d:	mov    rcx,rbx
   140030e30:	call   QWORD PTR [rip+0xc8f2]        # 0x14003d728
   140030e36:	mov    edx,0x1
   140030e3b:	mov    rcx,rdi
   140030e3e:	call   rbx
   140030e40:	jmp    0x140030dee
   140030e42:	xor    eax,eax
   140030e44:	mov    rbx,QWORD PTR [rsp+0x50]
   140030e49:	mov    rbp,QWORD PTR [rsp+0x58]
   140030e4e:	mov    rsi,QWORD PTR [rsp+0x60]
   140030e53:	add    rsp,0x40
   140030e57:	pop    rdi
   140030e58:	ret    
   140030e59:	mov    rcx,QWORD PTR [rdx+0x68]
   140030e60:	jmp    0x140013de0
   140030e65:	int3   
   140030e66:	int3   
   140030e67:	int3   
   140030e68:	int3   
   140030e69:	int3   
   140030e6a:	int3   
   140030e6b:	int3   
   140030e6c:	int3   
   140030e6d:	int3   
   140030e6e:	int3   
   140030e6f:	int3   
   140030e70:	test   rcx,rcx
   140030e73:	je     0x140030ea6
   140030e75:	mov    QWORD PTR [rsp+0x8],rbx
   140030e7a:	push   rdi
   140030e7b:	sub    rsp,0x20
   140030e7f:	mov    rdi,rcx
   140030e82:	call   0x140030208
   140030e87:	mov    rax,QWORD PTR [rdi]
   140030e8a:	mov    rbx,QWORD PTR [rax+0x10]
   140030e8e:	mov    rcx,rbx
   140030e91:	call   QWORD PTR [rip+0xc891]        # 0x14003d728
   140030e97:	mov    rcx,rdi
   140030e9a:	call   rbx
   140030e9c:	mov    rbx,QWORD PTR [rsp+0x30]
   140030ea1:	add    rsp,0x20
   140030ea5:	pop    rdi
   140030ea6:	ret    
   140030ea7:	int3   
   140030ea8:	int3   
   140030ea9:	int3   
   140030eaa:	int3   
   140030eab:	int3   
   140030eac:	int3   
   140030ead:	int3   
   140030eae:	int3   
   140030eaf:	int3   
   140030eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140030eb5:	push   rdi
   140030eb6:	sub    rsp,0x20
   140030eba:	lea    rax,[rip+0xe0d7]        # 0x14003ef98
   140030ec1:	mov    ebx,edx
   140030ec3:	mov    QWORD PTR [rcx],rax
   140030ec6:	mov    rdi,rcx
   140030ec9:	call   0x14000da40
   140030ece:	test   bl,0x1
   140030ed1:	je     0x140030edb
   140030ed3:	mov    rcx,rdi
   140030ed6:	call   0x140013de0
   140030edb:	mov    rax,rdi
   140030ede:	mov    rbx,QWORD PTR [rsp+0x30]
   140030ee3:	add    rsp,0x20
   140030ee7:	pop    rdi
   140030ee8:	ret    
   140030ee9:	int3   
   140030eea:	int3   
   140030eeb:	int3   
   140030eec:	int3   
   140030eed:	int3   
   140030eee:	int3   
   140030eef:	int3   
   140030ef0:	mov    r9d,0x80004002
   140030ef6:	test   r8,r8
   140030ef9:	jne    0x140030f03
   140030efb:	mov    r9d,0x80004003
   140030f01:	jmp    0x140030f29
   140030f03:	and    QWORD PTR [r8],0x0
   140030f07:	mov    rax,QWORD PTR [rdx]
   140030f0a:	sub    rax,QWORD PTR [rip+0xdeff]        # 0x14003ee10
   140030f11:	jne    0x140030f1e
   140030f13:	mov    rax,QWORD PTR [rdx+0x8]
   140030f17:	sub    rax,QWORD PTR [rip+0xdefa]        # 0x14003ee18
   140030f1e:	test   rax,rax
   140030f21:	jne    0x140030f29
   140030f23:	mov    QWORD PTR [r8],rcx
   140030f26:	xor    r9d,r9d
   140030f29:	mov    eax,r9d
   140030f2c:	ret    
   140030f2d:	int3   
   140030f2e:	int3   
   140030f2f:	int3   
   140030f30:	int3   
   140030f31:	int3   
   140030f32:	int3   
   140030f33:	int3   
   140030f34:	int3   
   140030f35:	int3   
   140030f36:	int3   
   140030f37:	int3   
   140030f38:	int3   
   140030f39:	int3   
   140030f3a:	int3   
   140030f3b:	int3   
   140030f3c:	int3   
   140030f3d:	int3   
   140030f3e:	int3   
   140030f3f:	int3   
   140030f40:	jmp    0x14002e688
   140030f45:	int3   
   140030f46:	int3   
   140030f47:	int3   
   140030f48:	int3   
   140030f49:	int3   
   140030f4a:	int3   
   140030f4b:	int3   
   140030f4c:	test   rdx,rdx
   140030f4f:	je     0x140030fac
   140030f51:	mov    r11,rsp
   140030f54:	mov    QWORD PTR [r11+0x10],rbx
   140030f58:	mov    QWORD PTR [r11+0x8],rcx
   140030f5c:	push   rdi
   140030f5d:	sub    rsp,0x20
   140030f61:	and    QWORD PTR [r11+0x8],0x0
   140030f66:	mov    rax,rdx
   140030f69:	mov    rcx,rax
   140030f6c:	lea    rdx,[r11+0x8]
   140030f70:	call   0x1400117d4
   140030f75:	mov    rdi,QWORD PTR [rsp+0x30]
   140030f7a:	test   rdi,rdi
   140030f7d:	je     0x140030fa2
   140030f7f:	lea    rdx,[rip+0x1dd42]        # 0x14004ecc8
   140030f86:	mov    rcx,rdi
   140030f89:	call   0x140032f74
   140030f8e:	mov    rax,QWORD PTR [rdi]
   140030f91:	mov    rbx,QWORD PTR [rax]
   140030f94:	mov    rcx,rbx
   140030f97:	call   QWORD PTR [rip+0xc78b]        # 0x14003d728
   140030f9d:	mov    rcx,rdi
   140030fa0:	call   rbx
   140030fa2:	mov    rbx,QWORD PTR [rsp+0x38]
   140030fa7:	add    rsp,0x20
   140030fab:	pop    rdi
   140030fac:	ret    
   140030fad:	int3   
   140030fae:	int3   
   140030faf:	int3   
   140030fb0:	int3   
   140030fb1:	int3   
   140030fb2:	int3   
   140030fb3:	int3   
   140030fb4:	mov    r11,rsp
   140030fb7:	mov    QWORD PTR [r11+0x8],rcx
   140030fbb:	push   rdi
   140030fbc:	sub    rsp,0x30
   140030fc0:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   140030fc8:	mov    QWORD PTR [r11+0x18],rbx
   140030fcc:	mov    rbx,rcx
   140030fcf:	lea    rax,[rip+0x11e9a]        # 0x140042e70
   140030fd6:	mov    QWORD PTR [rcx],rax
   140030fd9:	lea    rdi,[rcx+0x8]
   140030fdd:	mov    QWORD PTR [r11+0x10],rdi
   140030fe1:	and    QWORD PTR [rdi],0x0
   140030fe5:	lea    rcx,[rdi+0x8]
   140030fe9:	call   0x14000db2c
   140030fee:	nop
   140030fef:	mov    ecx,0x10
   140030ff4:	call   0x140013d94
   140030ff9:	mov    QWORD PTR [rsp+0x40],rax
   140030ffe:	test   rax,rax
   140031001:	je     0x14003100f
   140031003:	and    QWORD PTR [rax],0x0
   140031007:	and    DWORD PTR [rax+0x8],0x0
   14003100b:	and    DWORD PTR [rax+0xc],0x0
   14003100f:	mov    QWORD PTR [rdi],rax
   140031012:	mov    rax,rbx
   140031015:	mov    rbx,QWORD PTR [rsp+0x50]
   14003101a:	add    rsp,0x30
   14003101e:	pop    rdi
   14003101f:	ret    
   140031020:	mov    rcx,QWORD PTR [rdx+0x40]
   140031027:	jmp    0x140015d18
   14003102c:	mov    rcx,QWORD PTR [rdx+0x48]
   140031033:	add    rcx,0x8
   140031037:	jmp    0x14000db1c
   14003103c:	int3   
   14003103d:	int3   
   14003103e:	int3   
   14003103f:	int3   
   140031040:	int3   
   140031041:	int3   
   140031042:	int3   
   140031043:	int3   
   140031044:	mov    QWORD PTR [rsp+0x8],rbx
   140031049:	mov    QWORD PTR [rsp+0x10],rsi
   14003104e:	push   rdi
   14003104f:	sub    rsp,0x20
   140031053:	lea    rax,[rip+0x11e46]        # 0x140042ea0
   14003105a:	mov    rsi,rdx
   14003105d:	mov    QWORD PTR [rcx],rax
   140031060:	mov    rdi,rcx
   140031063:	mov    QWORD PTR [rcx+0x8],rdx
   140031067:	test   rdx,rdx
   14003106a:	je     0x140031081
   14003106c:	mov    rax,QWORD PTR [rdx]
   14003106f:	mov    rbx,QWORD PTR [rax+0x8]
   140031073:	mov    rcx,rbx
   140031076:	call   QWORD PTR [rip+0xc6ac]        # 0x14003d728
   14003107c:	mov    rcx,rsi
   14003107f:	call   rbx
   140031081:	mov    rbx,QWORD PTR [rsp+0x30]
   140031086:	mov    rax,rdi
   140031089:	mov    rsi,QWORD PTR [rsp+0x38]
   14003108e:	add    rsp,0x20
   140031092:	pop    rdi
   140031093:	ret    
   140031094:	int3   
   140031095:	int3   
   140031096:	int3   
   140031097:	int3   
   140031098:	int3   
   140031099:	int3   
   14003109a:	int3   
   14003109b:	int3   
   14003109c:	mov    QWORD PTR [rsp+0x8],rbx
   1400310a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400310a6:	push   rdi
   1400310a7:	sub    rsp,0x20
   1400310ab:	lea    rax,[rip+0x11dbe]        # 0x140042e70
   1400310b2:	mov    rbx,rcx
   1400310b5:	lea    rsi,[rcx+0x10]
   1400310b9:	mov    QWORD PTR [rcx],rax
   1400310bc:	mov    rcx,rsi
   1400310bf:	call   QWORD PTR [rip+0xc303]        # 0x14003d3c8
   1400310c5:	mov    rdi,QWORD PTR [rbx+0x8]
   1400310c9:	test   rdi,rdi
   1400310cc:	je     0x1400310de
   1400310ce:	mov    rcx,rdi
   1400310d1:	call   0x14002a044
   1400310d6:	mov    rcx,rdi
   1400310d9:	call   0x140013de0
   1400310de:	and    QWORD PTR [rbx+0x8],0x0
   1400310e3:	mov    rcx,rsi
   1400310e6:	call   QWORD PTR [rip+0xc2ec]        # 0x14003d3d8
   1400310ec:	mov    rcx,rsi
   1400310ef:	call   QWORD PTR [rip+0xc2c3]        # 0x14003d3b8
   1400310f5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400310fa:	lea    rax,[rip+0xe087]        # 0x14003f188
   140031101:	mov    QWORD PTR [rbx],rax
   140031104:	mov    rbx,QWORD PTR [rsp+0x30]
   140031109:	add    rsp,0x20
   14003110d:	pop    rdi
   14003110e:	ret    
   14003110f:	int3   
   140031110:	int3   
   140031111:	int3   
   140031112:	int3   
   140031113:	int3   
   140031114:	int3   
   140031115:	int3   
   140031116:	int3   
   140031117:	int3   
   140031118:	rex push rbx
   14003111a:	sub    rsp,0x20
   14003111e:	lea    rax,[rip+0x11d5b]        # 0x140042e80
   140031125:	mov    rbx,rcx
   140031128:	mov    QWORD PTR [rcx],rax
   14003112b:	mov    rcx,QWORD PTR [rcx+0x30]
   14003112f:	call   QWORD PTR [rip+0x21f8b]        # 0x1400530c0
   140031135:	mov    rcx,QWORD PTR [rbx+0x28]
   140031139:	call   QWORD PTR [rip+0x21f81]        # 0x1400530c0
   14003113f:	mov    rcx,QWORD PTR [rbx+0x20]
   140031143:	call   QWORD PTR [rip+0x21f77]        # 0x1400530c0
   140031149:	mov    rcx,QWORD PTR [rbx+0x18]
   14003114d:	call   QWORD PTR [rip+0x21f6d]        # 0x1400530c0
   140031153:	lea    rax,[rip+0xe02e]        # 0x14003f188
   14003115a:	mov    QWORD PTR [rbx],rax
   14003115d:	add    rsp,0x20
   140031161:	pop    rbx
   140031162:	ret    
   140031163:	int3   
   140031164:	int3   
   140031165:	int3   
   140031166:	int3   
   140031167:	int3   
   140031168:	int3   
   140031169:	int3   
   14003116a:	int3   
   14003116b:	int3   
   14003116c:	rex push rbx
   14003116e:	sub    rsp,0x20
   140031172:	lea    rax,[rip+0x11d17]        # 0x140042e90
   140031179:	mov    rbx,rcx
   14003117c:	mov    QWORD PTR [rcx],rax
   14003117f:	mov    rcx,QWORD PTR [rcx+0x8]
   140031183:	call   QWORD PTR [rip+0x21f37]        # 0x1400530c0
   140031189:	lea    rax,[rip+0xdff8]        # 0x14003f188
   140031190:	mov    QWORD PTR [rbx],rax
   140031193:	add    rsp,0x20
   140031197:	pop    rbx
   140031198:	ret    
   140031199:	int3   
   14003119a:	int3   
   14003119b:	int3   
   14003119c:	int3   
   14003119d:	int3   
   14003119e:	int3   
   14003119f:	int3   
   1400311a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400311a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400311aa:	push   rdi
   1400311ab:	sub    rsp,0x20
   1400311af:	lea    rax,[rip+0x11cea]        # 0x140042ea0
   1400311b6:	mov    rdi,rcx
   1400311b9:	mov    QWORD PTR [rcx],rax
   1400311bc:	mov    rsi,QWORD PTR [rcx+0x8]
   1400311c0:	test   rsi,rsi
   1400311c3:	je     0x1400311da
   1400311c5:	mov    rax,QWORD PTR [rsi]
   1400311c8:	mov    rbx,QWORD PTR [rax+0x10]
   1400311cc:	mov    rcx,rbx
   1400311cf:	call   QWORD PTR [rip+0xc553]        # 0x14003d728
   1400311d5:	mov    rcx,rsi
   1400311d8:	call   rbx
   1400311da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400311df:	lea    rax,[rip+0xdfa2]        # 0x14003f188
   1400311e6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400311eb:	mov    QWORD PTR [rdi],rax
   1400311ee:	add    rsp,0x20
   1400311f2:	pop    rdi
   1400311f3:	ret    
   1400311f4:	int3   
   1400311f5:	int3   
   1400311f6:	int3   
   1400311f7:	int3   
   1400311f8:	int3   
   1400311f9:	int3   
   1400311fa:	int3   
   1400311fb:	int3   
   1400311fc:	int3   
   1400311fd:	int3   
   1400311fe:	int3   
   1400311ff:	int3   
   140031200:	rex push rbx
   140031202:	sub    rsp,0x20
   140031206:	lea    rax,[rip+0xdf7b]        # 0x14003f188
   14003120d:	mov    rbx,rcx
   140031210:	mov    QWORD PTR [rcx],rax
   140031213:	test   dl,0x1
   140031216:	je     0x14003121d
   140031218:	call   0x140013de0
   14003121d:	mov    rax,rbx
   140031220:	add    rsp,0x20
   140031224:	pop    rbx
   140031225:	ret    
   140031226:	int3   
   140031227:	int3   
   140031228:	int3   
   140031229:	int3   
   14003122a:	int3   
   14003122b:	int3   
   14003122c:	int3   
   14003122d:	int3   
   14003122e:	int3   
   14003122f:	int3   
   140031230:	mov    QWORD PTR [rsp+0x8],rbx
   140031235:	push   rdi
   140031236:	sub    rsp,0x20
   14003123a:	mov    ebx,edx
   14003123c:	mov    rdi,rcx
   14003123f:	call   0x14003109c
   140031244:	test   bl,0x1
   140031247:	je     0x140031251
   140031249:	mov    rcx,rdi
   14003124c:	call   0x140013de0
   140031251:	mov    rax,rdi
   140031254:	mov    rbx,QWORD PTR [rsp+0x30]
   140031259:	add    rsp,0x20
   14003125d:	pop    rdi
   14003125e:	ret    
   14003125f:	int3   
   140031260:	int3   
   140031261:	int3   
   140031262:	int3   
   140031263:	int3   
   140031264:	int3   
   140031265:	int3   
   140031266:	int3   
   140031267:	int3   
   140031268:	int3   
   140031269:	int3   
   14003126a:	int3   
   14003126b:	int3   
   14003126c:	int3   
   14003126d:	int3   
   14003126e:	int3   
   14003126f:	int3   
   140031270:	mov    QWORD PTR [rsp+0x8],rbx
   140031275:	push   rdi
   140031276:	sub    rsp,0x20
   14003127a:	mov    ebx,edx
   14003127c:	mov    rdi,rcx
   14003127f:	call   0x140031118
   140031284:	test   bl,0x1
   140031287:	je     0x140031291
   140031289:	mov    rcx,rdi
   14003128c:	call   0x140013de0
   140031291:	mov    rax,rdi
   140031294:	mov    rbx,QWORD PTR [rsp+0x30]
   140031299:	add    rsp,0x20
   14003129d:	pop    rdi
   14003129e:	ret    
   14003129f:	int3   
   1400312a0:	int3   
   1400312a1:	int3   
   1400312a2:	int3   
   1400312a3:	int3   
   1400312a4:	int3   
   1400312a5:	int3   
   1400312a6:	int3   
   1400312a7:	int3   
   1400312a8:	int3   
   1400312a9:	int3   
   1400312aa:	int3   
   1400312ab:	int3   
   1400312ac:	int3   
   1400312ad:	int3   
   1400312ae:	int3   
   1400312af:	int3   
   1400312b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400312b5:	push   rdi
   1400312b6:	sub    rsp,0x20
   1400312ba:	mov    ebx,edx
   1400312bc:	mov    rdi,rcx
   1400312bf:	call   0x14003116c
   1400312c4:	test   bl,0x1
   1400312c7:	je     0x1400312d1
   1400312c9:	mov    rcx,rdi
   1400312cc:	call   0x140013de0
   1400312d1:	mov    rax,rdi
   1400312d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400312d9:	add    rsp,0x20
   1400312dd:	pop    rdi
   1400312de:	ret    
   1400312df:	int3   
   1400312e0:	int3   
   1400312e1:	int3   
   1400312e2:	int3   
   1400312e3:	int3   
   1400312e4:	int3   
   1400312e5:	int3   
   1400312e6:	int3   
   1400312e7:	int3   
   1400312e8:	int3   
   1400312e9:	int3   
   1400312ea:	int3   
   1400312eb:	int3   
   1400312ec:	int3   
   1400312ed:	int3   
   1400312ee:	int3   
   1400312ef:	int3   
   1400312f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400312f5:	push   rdi
   1400312f6:	sub    rsp,0x20
   1400312fa:	mov    ebx,edx
   1400312fc:	mov    rdi,rcx
   1400312ff:	call   0x1400311a0
   140031304:	test   bl,0x1
   140031307:	je     0x140031311
   140031309:	mov    rcx,rdi
   14003130c:	call   0x140013de0
   140031311:	mov    rax,rdi
   140031314:	mov    rbx,QWORD PTR [rsp+0x30]
   140031319:	add    rsp,0x20
   14003131d:	pop    rdi
   14003131e:	ret    
   14003131f:	int3   
   140031320:	int3   
   140031321:	int3   
   140031322:	int3   
   140031323:	int3   
   140031324:	int3   
   140031325:	int3   
   140031326:	int3   
   140031327:	int3   
   140031328:	mov    QWORD PTR [rsp+0x8],rbx
   14003132d:	mov    QWORD PTR [rsp+0x10],rbp
   140031332:	mov    QWORD PTR [rsp+0x18],rsi
   140031337:	push   rdi
   140031338:	sub    rsp,0x20
   14003133c:	mov    rbx,rcx
   14003133f:	mov    rbp,rdx
   140031342:	add    rcx,0x8
   140031346:	xor    edi,edi
   140031348:	call   QWORD PTR [rip+0xc07a]        # 0x14003d3c8
   14003134e:	cmp    QWORD PTR [rbx],rdi
   140031351:	je     0x140031360
   140031353:	mov    rcx,QWORD PTR [rbx]
   140031356:	mov    rdx,rbp
   140031359:	call   0x140031388
   14003135e:	mov    edi,eax
   140031360:	lea    rcx,[rbx+0x8]
   140031364:	call   QWORD PTR [rip+0xc06e]        # 0x14003d3d8
   14003136a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003136f:	mov    eax,edi
   140031371:	mov    rbp,QWORD PTR [rsp+0x38]
   140031376:	mov    rsi,QWORD PTR [rsp+0x40]
   14003137b:	add    rsp,0x20
   14003137f:	pop    rdi
   140031380:	ret    
   140031381:	int3   
   140031382:	int3   
   140031383:	int3   
   140031384:	int3   
   140031385:	int3   
   140031386:	int3   
   140031387:	int3   
   140031388:	mov    QWORD PTR [rsp+0x8],rbx
   14003138d:	mov    QWORD PTR [rsp+0x10],rsi
   140031392:	push   rdi
   140031393:	sub    rsp,0x20
   140031397:	mov    edi,DWORD PTR [rcx+0x8]
   14003139a:	mov    rsi,rdx
   14003139d:	mov    rbx,rcx
   1400313a0:	cmp    edi,DWORD PTR [rcx+0xc]
   1400313a3:	jne    0x1400313dc
   1400313a5:	cmp    DWORD PTR [rcx+0xc],0x0
   1400313a9:	jne    0x1400313b2
   1400313ab:	mov    edi,0x1
   1400313b0:	jmp    0x1400313b6
   1400313b2:	add    edi,edi
   1400313b4:	js     0x140031420
   1400313b6:	movsxd rdx,edi
   1400313b9:	cmp    rdx,0x3333333
   1400313c0:	ja     0x140031420
   1400313c2:	mov    rcx,QWORD PTR [rcx]
   1400313c5:	mov    r8d,0x28
   1400313cb:	call   QWORD PTR [rip+0x1cc2f]        # 0x14004e000
   1400313d1:	test   rax,rax
   1400313d4:	je     0x140031420
   1400313d6:	mov    DWORD PTR [rbx+0xc],edi
   1400313d9:	mov    QWORD PTR [rbx],rax
   1400313dc:	movsxd rax,DWORD PTR [rbx+0x8]
   1400313e0:	lea    rcx,[rax+rax*4]
   1400313e4:	mov    rax,QWORD PTR [rbx]
   1400313e7:	lea    rdx,[rax+rcx*8]
   1400313eb:	test   rdx,rdx
   1400313ee:	je     0x140031408
   1400313f0:	movups xmm0,XMMWORD PTR [rsi]
   1400313f3:	movups xmm1,XMMWORD PTR [rsi+0x10]
   1400313f7:	movups XMMWORD PTR [rdx],xmm0
   1400313fa:	movsd  xmm0,QWORD PTR [rsi+0x20]
   1400313ff:	movups XMMWORD PTR [rdx+0x10],xmm1
   140031403:	movsd  QWORD PTR [rdx+0x20],xmm0
   140031408:	inc    DWORD PTR [rbx+0x8]
   14003140b:	mov    eax,0x1
   140031410:	mov    rbx,QWORD PTR [rsp+0x30]
   140031415:	mov    rsi,QWORD PTR [rsp+0x38]
   14003141a:	add    rsp,0x20
   14003141e:	pop    rdi
   14003141f:	ret    
   140031420:	xor    eax,eax
   140031422:	jmp    0x140031410
   140031424:	int3   
   140031425:	int3   
   140031426:	int3   
   140031427:	int3   
   140031428:	int3   
   140031429:	int3   
   14003142a:	int3   
   14003142b:	int3   
   14003142c:	mov    rax,rsp
   14003142f:	mov    QWORD PTR [rax+0x8],rbx
   140031433:	mov    QWORD PTR [rax+0x10],rsi
   140031437:	push   rdi
   140031438:	sub    rsp,0x50
   14003143c:	and    QWORD PTR [rax-0x20],0x0
   140031441:	mov    dil,r9b
   140031444:	movzx  ebx,dx
   140031447:	mov    DWORD PTR [rax-0x38],0x1
   14003144e:	mov    rsi,rcx
   140031451:	call   QWORD PTR [rip+0xbfc1]        # 0x14003d418
   140031457:	movzx  ecx,bx
   14003145a:	mov    WORD PTR [rsp+0x28],bx
   14003145f:	mov    DWORD PTR [rsp+0x30],eax
   140031463:	call   0x140031888
   140031468:	mov    WORD PTR [rsp+0x2a],ax
   14003146d:	xor    eax,eax
   14003146f:	cmp    BYTE PTR [rsp+0x80],al
   140031476:	lea    ecx,[rax+0x2]
   140031479:	cmovne eax,ecx
   14003147c:	mov    DWORD PTR [rsp+0x2c],eax
   140031480:	test   dil,dil
   140031483:	je     0x14003148c
   140031485:	or     eax,0x1
   140031488:	mov    DWORD PTR [rsp+0x2c],eax
   14003148c:	lea    rcx,[rsi+0x8]
   140031490:	lea    rdx,[rsp+0x20]
   140031495:	call   0x140031328
   14003149a:	mov    rbx,QWORD PTR [rsp+0x60]
   14003149f:	mov    rsi,QWORD PTR [rsp+0x68]
   1400314a4:	add    rsp,0x50
   1400314a8:	pop    rdi
   1400314a9:	ret    
   1400314aa:	int3   
   1400314ab:	int3   
   1400314ac:	int3   
   1400314ad:	int3   
   1400314ae:	int3   
   1400314af:	int3   
   1400314b0:	test   rdx,rdx
   1400314b3:	je     0x14003158d
   1400314b9:	mov    QWORD PTR [rsp+0x8],rbx
   1400314be:	mov    QWORD PTR [rsp+0x10],rsi
   1400314c3:	mov    QWORD PTR [rsp+0x18],rdi
   1400314c8:	push   rbp
   1400314c9:	push   r14
   1400314cb:	push   r15
   1400314cd:	mov    rbp,rsp
   1400314d0:	sub    rsp,0x70
   1400314d4:	mov    rsi,rcx
   1400314d7:	mov    rbx,rdx
   1400314da:	mov    rcx,rdx
   1400314dd:	xor    r15d,r15d
   1400314e0:	call   QWORD PTR [rip+0x21b2a]        # 0x140053010
   1400314e6:	mov    edi,eax
   1400314e8:	call   QWORD PTR [rip+0xbf2a]        # 0x14003d418
   1400314ee:	mov    DWORD PTR [rbp-0x50],0x1
   1400314f5:	mov    r14d,eax
   1400314f8:	mov    DWORD PTR [rbp-0x44],r15d
   1400314fc:	mov    QWORD PTR [rbp-0x38],r15
   140031500:	test   edi,edi
   140031502:	je     0x140031574
   140031504:	movzx  eax,WORD PTR [rbx]
   140031507:	lea    rdx,[rbp-0x50]
   14003150b:	movsd  xmm1,QWORD PTR [rbp-0x30]
   140031510:	lea    rcx,[rsi+0x8]
   140031514:	mov    WORD PTR [rbp-0x46],ax
   140031518:	mov    DWORD PTR [rbp-0x40],r14d
   14003151c:	inc    r14d
   14003151f:	mov    WORD PTR [rbp-0x48],r15w
   140031524:	mov    DWORD PTR [rbp-0x44],0x4
   14003152b:	movups xmm2,XMMWORD PTR [rbp-0x50]
   14003152f:	mov    QWORD PTR [rbp-0x38],r15
   140031533:	movups xmm0,XMMWORD PTR [rbp-0x40]
   140031537:	movups XMMWORD PTR [rbp-0x28],xmm2
   14003153b:	psrldq xmm2,0x8
   140031540:	movq   rax,xmm2
   140031545:	movsd  QWORD PTR [rbp-0x8],xmm1
   14003154a:	shr    rax,0x20
   14003154e:	or     eax,0x2
   140031551:	mov    DWORD PTR [rbp-0x1c],eax
   140031554:	movups XMMWORD PTR [rbp-0x18],xmm0
   140031558:	call   0x140031328
   14003155d:	lea    rdx,[rbp-0x28]
   140031561:	lea    rcx,[rsi+0x8]
   140031565:	call   0x140031328
   14003156a:	lea    rbx,[rbx+0x2]
   14003156e:	sub    rdi,0x1
   140031572:	jne    0x140031504
   140031574:	lea    r11,[rsp+0x70]
   140031579:	mov    rbx,QWORD PTR [r11+0x20]
   14003157d:	mov    rsi,QWORD PTR [r11+0x28]
   140031581:	mov    rdi,QWORD PTR [r11+0x30]
   140031585:	mov    rsp,r11
   140031588:	pop    r15
   14003158a:	pop    r14
   14003158c:	pop    rbp
   14003158d:	ret    
   14003158e:	int3   
   14003158f:	int3   
   140031590:	int3   
   140031591:	int3   
   140031592:	int3   
   140031593:	int3   
   140031594:	mov    rax,rsp
   140031597:	mov    QWORD PTR [rax+0x8],rbx
   14003159b:	mov    QWORD PTR [rax+0x10],rbp
   14003159f:	mov    QWORD PTR [rax+0x18],rsi
   1400315a3:	mov    QWORD PTR [rax+0x20],rdi
   1400315a7:	push   r14
   1400315a9:	sub    rsp,0x20
   1400315ad:	mov    r14,QWORD PTR [rcx+0x8]
   1400315b1:	mov    rsi,r8
   1400315b4:	mov    rdi,rdx
   1400315b7:	mov    rbp,rcx
   1400315ba:	test   r14,r14
   1400315bd:	je     0x1400315fd
   1400315bf:	test   rdx,rdx
   1400315c2:	jne    0x1400315c9
   1400315c4:	test   r8,r8
   1400315c7:	je     0x1400315fd
   1400315c9:	mov    rax,QWORD PTR [r14]
   1400315cc:	mov    rbx,QWORD PTR [rax+0x48]
   1400315d0:	mov    rcx,rbx
   1400315d3:	call   QWORD PTR [rip+0xc14f]        # 0x14003d728
   1400315d9:	mov    rdx,rdi
   1400315dc:	mov    rcx,r14
   1400315df:	call   rbx
   1400315e1:	mov    rdi,QWORD PTR [rbp+0x8]
   1400315e5:	mov    rax,QWORD PTR [rdi]
   1400315e8:	mov    rbx,QWORD PTR [rax+0x58]
   1400315ec:	mov    rcx,rbx
   1400315ef:	call   QWORD PTR [rip+0xc133]        # 0x14003d728
   1400315f5:	mov    rdx,rsi
   1400315f8:	mov    rcx,rdi
   1400315fb:	call   rbx
   1400315fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140031602:	mov    rbp,QWORD PTR [rsp+0x38]
   140031607:	mov    rsi,QWORD PTR [rsp+0x40]
   14003160c:	mov    rdi,QWORD PTR [rsp+0x48]
   140031611:	add    rsp,0x20
   140031615:	pop    r14
   140031617:	ret    
   140031618:	int3   
   140031619:	int3   
   14003161a:	int3   
   14003161b:	int3   
   14003161c:	int3   
   14003161d:	int3   
   14003161e:	int3   
   14003161f:	int3   
   140031620:	mov    rax,rsp
   140031623:	mov    QWORD PTR [rax+0x8],rbx
   140031627:	mov    QWORD PTR [rax+0x10],rbp
   14003162b:	mov    QWORD PTR [rax+0x18],rsi
   14003162f:	mov    QWORD PTR [rax+0x20],rdi
   140031633:	push   r14
   140031635:	sub    rsp,0x20
   140031639:	mov    r14d,edx
   14003163c:	mov    BYTE PTR [rcx+0x8],0x0
   140031640:	mov    rdx,QWORD PTR [rsp+0x60]
   140031645:	mov    rbx,rcx
   140031648:	add    rcx,0x18
   14003164c:	mov    esi,r9d
   14003164f:	movzx  ebp,r8w
   140031653:	mov    edi,0x8007000e
   140031658:	call   0x14002edfc
   14003165d:	test   eax,eax
   14003165f:	js     0x1400316b8
   140031661:	mov    rdx,QWORD PTR [rsp+0x68]
   140031666:	lea    rcx,[rbx+0x20]
   14003166a:	call   0x14002edfc
   14003166f:	test   eax,eax
   140031671:	js     0x1400316b8
   140031673:	mov    rdx,QWORD PTR [rsp+0x70]
   140031678:	lea    rcx,[rbx+0x28]
   14003167c:	call   0x14002edfc
   140031681:	test   eax,eax
   140031683:	js     0x1400316b8
   140031685:	mov    rdx,QWORD PTR [rsp+0x78]
   14003168a:	lea    rcx,[rbx+0x30]
   14003168e:	call   0x14002edfc
   140031693:	test   eax,eax
   140031695:	js     0x1400316b8
   140031697:	movzx  eax,WORD PTR [rsp+0x50]
   14003169c:	xor    edi,edi
   14003169e:	mov    WORD PTR [rbx+0x3c],ax
   1400316a2:	mov    eax,DWORD PTR [rsp+0x58]
   1400316a6:	mov    DWORD PTR [rbx+0x40],eax
   1400316a9:	mov    DWORD PTR [rbx+0xc],r14d
   1400316ad:	mov    WORD PTR [rbx+0x10],bp
   1400316b1:	mov    DWORD PTR [rbx+0x38],esi
   1400316b4:	mov    BYTE PTR [rbx+0x8],0x1
   1400316b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400316bd:	mov    eax,edi
   1400316bf:	mov    rdi,QWORD PTR [rsp+0x48]
   1400316c4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400316c9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400316ce:	add    rsp,0x20
   1400316d2:	pop    r14
   1400316d4:	ret    
   1400316d5:	int3   
   1400316d6:	int3   
   1400316d7:	int3   
   1400316d8:	int3   
   1400316d9:	int3   
   1400316da:	int3   
   1400316db:	int3   
   1400316dc:	int3   
   1400316dd:	int3   
   1400316de:	int3   
   1400316df:	int3   
   1400316e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400316e5:	push   rdi
   1400316e6:	sub    rsp,0x20
   1400316ea:	mov    rdi,rcx
   1400316ed:	add    rcx,0x10
   1400316f1:	call   QWORD PTR [rip+0xbcd1]        # 0x14003d3c8
   1400316f7:	mov    rbx,QWORD PTR [rdi+0x8]
   1400316fb:	test   rbx,rbx
   1400316fe:	je     0x14003171e
   140031700:	mov    ecx,DWORD PTR [rbx+0x8]
   140031703:	test   ecx,ecx
   140031705:	je     0x140031716
   140031707:	mov    rdx,QWORD PTR [rbx]
   14003170a:	mov    r8d,0x28
   140031710:	call   QWORD PTR [rip+0xb97a]        # 0x14003d090
   140031716:	mov    rcx,rbx
   140031719:	call   0x14002a044
   14003171e:	lea    rcx,[rdi+0x10]
   140031722:	mov    rbx,QWORD PTR [rsp+0x30]
   140031727:	add    rsp,0x20
   14003172b:	pop    rdi
   14003172c:	rex.W jmp QWORD PTR [rip+0xbca5]        # 0x14003d3d8
   140031733:	int3   
   140031734:	int3   
   140031735:	int3   
   140031736:	int3   
   140031737:	int3   
   140031738:	int3   
   140031739:	int3   
   14003173a:	int3   
   14003173b:	int3   
   14003173c:	int3   
   14003173d:	int3   
   14003173e:	int3   
   14003173f:	int3   
   140031740:	mov    QWORD PTR [rsp+0x8],rbx
   140031745:	mov    QWORD PTR [rsp+0x10],rsi
   14003174a:	push   rdi
   14003174b:	sub    rsp,0x50
   14003174f:	cmp    BYTE PTR [rcx+0x8],0x0
   140031753:	mov    rsi,rdx
   140031756:	mov    rdi,rcx
   140031759:	je     0x1400317b0
   14003175b:	mov    rax,QWORD PTR [rdx]
   14003175e:	mov    rbx,QWORD PTR [rax+0x38]
   140031762:	mov    rcx,rbx
   140031765:	call   QWORD PTR [rip+0xbfbd]        # 0x14003d728
   14003176b:	mov    rax,QWORD PTR [rdi+0x30]
   14003176f:	mov    rcx,rsi
   140031772:	mov    r9d,DWORD PTR [rdi+0x38]
   140031776:	movzx  r8d,WORD PTR [rdi+0x10]
   14003177b:	mov    edx,DWORD PTR [rdi+0xc]
   14003177e:	mov    QWORD PTR [rsp+0x48],rax
   140031783:	mov    rax,QWORD PTR [rdi+0x28]
   140031787:	mov    QWORD PTR [rsp+0x40],rax
   14003178c:	mov    rax,QWORD PTR [rdi+0x20]
   140031790:	mov    QWORD PTR [rsp+0x38],rax
   140031795:	mov    rax,QWORD PTR [rdi+0x18]
   140031799:	mov    QWORD PTR [rsp+0x30],rax
   14003179e:	mov    eax,DWORD PTR [rdi+0x40]
   1400317a1:	mov    DWORD PTR [rsp+0x28],eax
   1400317a5:	movzx  eax,WORD PTR [rdi+0x3c]
   1400317a9:	mov    WORD PTR [rsp+0x20],ax
   1400317ae:	call   rbx
   1400317b0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400317b5:	mov    rsi,QWORD PTR [rsp+0x68]
   1400317ba:	add    rsp,0x50
   1400317be:	pop    rdi
   1400317bf:	ret    
   1400317c0:	int3   
   1400317c1:	int3   
   1400317c2:	int3   
   1400317c3:	int3   
   1400317c4:	int3   
   1400317c5:	int3   
   1400317c6:	int3   
   1400317c7:	int3   
   1400317c8:	int3   
   1400317c9:	int3   
   1400317ca:	int3   
   1400317cb:	int3   
   1400317cc:	int3   
   1400317cd:	int3   
   1400317ce:	int3   
   1400317cf:	int3   
   1400317d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400317d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400317da:	push   rdi
   1400317db:	sub    rsp,0x20
   1400317df:	mov    rax,QWORD PTR [rdx]
   1400317e2:	mov    rdi,rcx
   1400317e5:	mov    rsi,rdx
   1400317e8:	mov    rbx,QWORD PTR [rax+0x30]
   1400317ec:	mov    rcx,rbx
   1400317ef:	call   QWORD PTR [rip+0xbf33]        # 0x14003d728
   1400317f5:	mov    r8d,DWORD PTR [rdi+0x10]
   1400317f9:	mov    rcx,rsi
   1400317fc:	mov    rdx,QWORD PTR [rdi+0x8]
   140031800:	mov    rax,rbx
   140031803:	mov    rbx,QWORD PTR [rsp+0x30]
   140031808:	mov    rsi,QWORD PTR [rsp+0x38]
   14003180d:	add    rsp,0x20
   140031811:	pop    rdi
   140031812:	rex.W jmp rax
   140031815:	int3   
   140031816:	int3   
   140031817:	int3   
   140031818:	int3   
   140031819:	int3   
   14003181a:	int3   
   14003181b:	int3   
   14003181c:	int3   
   14003181d:	int3   
   14003181e:	int3   
   14003181f:	int3   
   140031820:	mov    QWORD PTR [rsp+0x8],rbx
   140031825:	mov    QWORD PTR [rsp+0x10],rsi
   14003182a:	push   rdi
   14003182b:	sub    rsp,0x20
   14003182f:	mov    rax,QWORD PTR [rdx]
   140031832:	mov    rsi,rcx
   140031835:	mov    rdi,rdx
   140031838:	mov    rbx,QWORD PTR [rax+0x20]
   14003183c:	mov    rcx,rbx
   14003183f:	call   QWORD PTR [rip+0xbee3]        # 0x14003d728
   140031845:	mov    rdx,QWORD PTR [rsi+0x8]
   140031849:	mov    rcx,rdi
   14003184c:	call   rbx
   14003184e:	mov    rdi,QWORD PTR [rsi+0x8]
   140031852:	test   rdi,rdi
   140031855:	je     0x140031871
   140031857:	and    QWORD PTR [rsi+0x8],0x0
   14003185c:	mov    rax,QWORD PTR [rdi]
   14003185f:	mov    rbx,QWORD PTR [rax+0x10]
   140031863:	mov    rcx,rbx
   140031866:	call   QWORD PTR [rip+0xbebc]        # 0x14003d728
   14003186c:	mov    rcx,rdi
   14003186f:	call   rbx
   140031871:	mov    rbx,QWORD PTR [rsp+0x30]
   140031876:	mov    rsi,QWORD PTR [rsp+0x38]
   14003187b:	add    rsp,0x20
   14003187f:	pop    rdi
   140031880:	ret    
   140031881:	int3   
   140031882:	int3   
   140031883:	int3   
   140031884:	int3   
   140031885:	int3   
   140031886:	int3   
   140031887:	int3   
   140031888:	rex push rbx
   14003188a:	sub    rsp,0x20
   14003188e:	and    DWORD PTR [rsp+0x38],0x0
   140031893:	movzx  ebx,cx
   140031896:	call   QWORD PTR [rip+0xb78c]        # 0x14003d028
   14003189c:	mov    rcx,rax
   14003189f:	lea    rdx,[rsp+0x38]
   1400318a4:	call   QWORD PTR [rip+0xb7ee]        # 0x14003d098
   1400318aa:	test   eax,eax
   1400318ac:	je     0x1400318cb
   1400318ae:	mov    ecx,eax
   1400318b0:	call   QWORD PTR [rip+0xb7ea]        # 0x14003d0a0
   1400318b6:	test   rax,rax
   1400318b9:	je     0x1400318cb
   1400318bb:	movzx  ecx,bx
   1400318be:	mov    r8,rax
   1400318c1:	xor    edx,edx
   1400318c3:	call   QWORD PTR [rip+0xb7df]        # 0x14003d0a8
   1400318c9:	jmp    0x1400318d6
   1400318cb:	movzx  ecx,bx
   1400318ce:	xor    edx,edx
   1400318d0:	call   QWORD PTR [rip+0xb83a]        # 0x14003d110
   1400318d6:	add    rsp,0x20
   1400318da:	pop    rbx
   1400318db:	ret    
   1400318dc:	int3   
   1400318dd:	int3   
   1400318de:	int3   
   1400318df:	int3   
   1400318e0:	int3   
   1400318e1:	int3   
   1400318e2:	int3   
   1400318e3:	int3   
   1400318e4:	rex push rbx
   1400318e6:	sub    rsp,0x20
   1400318ea:	mov    rbx,rcx
   1400318ed:	mov    rcx,QWORD PTR [rcx+0x20]
   1400318f1:	call   QWORD PTR [rip+0x217c9]        # 0x1400530c0
   1400318f7:	mov    rcx,QWORD PTR [rbx+0x18]
   1400318fb:	call   QWORD PTR [rip+0x217bf]        # 0x1400530c0
   140031901:	mov    rcx,QWORD PTR [rbx+0x10]
   140031905:	call   QWORD PTR [rip+0x217b5]        # 0x1400530c0
   14003190b:	mov    rcx,rbx
   14003190e:	call   0x140013de0
   140031913:	mov    rax,rbx
   140031916:	add    rsp,0x20
   14003191a:	pop    rbx
   14003191b:	ret    
   14003191c:	int3   
   14003191d:	int3   
   14003191e:	int3   
   14003191f:	int3   
   140031920:	int3   
   140031921:	int3   
   140031922:	int3   
   140031923:	int3   
   140031924:	int3   
   140031925:	int3   
   140031926:	int3   
   140031927:	int3   
   140031928:	int3   
   140031929:	int3   
   14003192a:	int3   
   14003192b:	int3   
   14003192c:	int3   
   14003192d:	int3   
   14003192e:	int3   
   14003192f:	int3   
   140031930:	mov    rax,rsp
   140031933:	mov    QWORD PTR [rax+0x8],rbx
   140031937:	mov    QWORD PTR [rax+0x10],rbp
   14003193b:	mov    QWORD PTR [rax+0x18],rsi
   14003193f:	mov    QWORD PTR [rax+0x20],rdi
   140031943:	push   r12
   140031945:	push   r14
   140031947:	push   r15
   140031949:	sub    rsp,0x20
   14003194d:	mov    rbp,rcx
   140031950:	mov    r12,r9
   140031953:	add    rcx,0xfffffffffffffff8
   140031957:	mov    r14,r8
   14003195a:	mov    ebx,edx
   14003195c:	call   0x140032d08
   140031961:	test   r14,r14
   140031964:	jne    0x140031970
   140031966:	mov    eax,0x80070057
   14003196b:	jmp    0x140031b31
   140031970:	cmp    BYTE PTR [rbp+0x38],0x0
   140031974:	jne    0x140031980
   140031976:	mov    eax,0x80004005
   14003197b:	jmp    0x140031b31
   140031980:	lea    rcx,[rbp+0x40]
   140031984:	call   QWORD PTR [rip+0xba3e]        # 0x14003d3c8
   14003198a:	xor    dil,dil
   14003198d:	cmp    BYTE PTR [rbp+0x39],dil
   140031991:	je     0x14003199b
   140031993:	cmp    DWORD PTR [rbp+0x88],ebx
   140031999:	je     0x1400319a9
   14003199b:	mov    edx,ebx
   14003199d:	lea    rcx,[rbp-0x8]
   1400319a1:	mov    dil,0x1
   1400319a4:	call   0x14003265c
   1400319a9:	lea    rbx,[rbp+0x90]
   1400319b0:	cmp    QWORD PTR [rbx],0x0
   1400319b4:	je     0x1400319c5
   1400319b6:	mov    rdx,r14
   1400319b9:	mov    rcx,rbx
   1400319bc:	call   0x14002c23c
   1400319c1:	test   al,al
   1400319c3:	jne    0x1400319e0
   1400319c5:	mov    rcx,rbx
   1400319c8:	mov    dil,0x1
   1400319cb:	call   0x1400013e4
   1400319d0:	cmp    QWORD PTR [rbx],r14
   1400319d3:	je     0x1400319e0
   1400319d5:	mov    rdx,r14
   1400319d8:	mov    rcx,rbx
   1400319db:	call   0x14000dcd0
   1400319e0:	lea    rbx,[rbp+0x98]
   1400319e7:	cmp    QWORD PTR [rbx],0x0
   1400319eb:	je     0x140031a0a
   1400319ed:	mov    rdx,r14
   1400319f0:	mov    rcx,rbx
   1400319f3:	call   0x14002c23c
   1400319f8:	test   al,al
   1400319fa:	jne    0x140031a04
   1400319fc:	mov    rcx,rbx
   1400319ff:	call   0x1400013e4
   140031a04:	cmp    QWORD PTR [rbx],0x0
   140031a08:	jne    0x140031a27
   140031a0a:	cmp    QWORD PTR [rbp+0xa0],0x0
   140031a12:	je     0x140031a27
   140031a14:	cmp    QWORD PTR [rbx],r14
   140031a17:	je     0x140031a24
   140031a19:	mov    rdx,r14
   140031a1c:	mov    rcx,rbx
   140031a1f:	call   0x14000dcd0
   140031a24:	mov    dil,0x1
   140031a27:	mov    rax,QWORD PTR [r14]
   140031a2a:	mov    rbx,QWORD PTR [rax+0x80]
   140031a31:	mov    rcx,rbx
   140031a34:	call   QWORD PTR [rip+0xbcee]        # 0x14003d728
   140031a3a:	mov    rdx,r12
   140031a3d:	mov    rcx,r14
   140031a40:	call   rbx
   140031a42:	mov    ebx,eax
   140031a44:	test   eax,eax
   140031a46:	js     0x140031a67
   140031a48:	mov    rax,QWORD PTR [r14]
   140031a4b:	mov    rbx,QWORD PTR [rax+0x90]
   140031a52:	mov    rcx,rbx
   140031a55:	call   QWORD PTR [rip+0xbccd]        # 0x14003d728
   140031a5b:	mov    rdx,QWORD PTR [rsp+0x68]
   140031a60:	mov    rcx,r14
   140031a63:	call   rbx
   140031a65:	mov    ebx,eax
   140031a67:	test   dil,dil
   140031a6a:	je     0x140031b25
   140031a70:	mov    rax,QWORD PTR [r14]
   140031a73:	xor    esi,esi
   140031a75:	mov    rdi,QWORD PTR [rax+0x60]
   140031a79:	mov    rcx,rdi
   140031a7c:	cmp    QWORD PTR [rbp+0xa0],rsi
   140031a83:	je     0x140031ac9
   140031a85:	mov    rbx,QWORD PTR [rbp+0x70]
   140031a89:	call   QWORD PTR [rip+0xbc99]        # 0x14003d728
   140031a8f:	mov    rdx,rbx
   140031a92:	mov    rcx,r14
   140031a95:	call   rdi
   140031a97:	test   eax,eax
   140031a99:	js     0x140031ae5
   140031a9b:	mov    rax,QWORD PTR [r14]
   140031a9e:	mov    rbx,QWORD PTR [rbp+0xa0]
   140031aa5:	mov    rdi,QWORD PTR [rax+0xb0]
   140031aac:	mov    rcx,rdi
   140031aaf:	call   QWORD PTR [rip+0xbc73]        # 0x14003d728
   140031ab5:	mov    rdx,rbx
   140031ab8:	mov    rcx,r14
   140031abb:	call   rdi
   140031abd:	test   eax,eax
   140031abf:	js     0x140031ae5
   140031ac1:	mov    esi,DWORD PTR [rbp+0x80]
   140031ac7:	jmp    0x140031ae5
   140031ac9:	mov    rbx,QWORD PTR [rbp+0x78]
   140031acd:	call   QWORD PTR [rip+0xbc55]        # 0x14003d728
   140031ad3:	mov    rdx,rbx
   140031ad6:	mov    rcx,r14
   140031ad9:	call   rdi
   140031adb:	test   eax,eax
   140031add:	js     0x140031ae5
   140031adf:	mov    esi,DWORD PTR [rbp+0x84]
   140031ae5:	or     esi,0x4
   140031ae8:	cmp    DWORD PTR [rsp+0x78],0x0
   140031aed:	jne    0x140031af2
   140031aef:	or     esi,0x40
   140031af2:	cmp    DWORD PTR [rsp+0x70],0x0
   140031af7:	je     0x140031afc
   140031af9:	and    esi,0xfffffffd
   140031afc:	cmp    DWORD PTR [rsp+0x80],0x0
   140031b04:	jne    0x140031b09
   140031b06:	or     esi,0x8
   140031b09:	mov    rax,QWORD PTR [r14]
   140031b0c:	mov    rbx,QWORD PTR [rax+0xa0]
   140031b13:	mov    rcx,rbx
   140031b16:	call   QWORD PTR [rip+0xbc0c]        # 0x14003d728
   140031b1c:	mov    edx,esi
   140031b1e:	mov    rcx,r14
   140031b21:	call   rbx
   140031b23:	mov    ebx,eax
   140031b25:	lea    rcx,[rbp+0x40]
   140031b29:	call   QWORD PTR [rip+0xb8a9]        # 0x14003d3d8
   140031b2f:	mov    eax,ebx
   140031b31:	mov    rbx,QWORD PTR [rsp+0x40]
   140031b36:	mov    rbp,QWORD PTR [rsp+0x48]
   140031b3b:	mov    rsi,QWORD PTR [rsp+0x50]
   140031b40:	mov    rdi,QWORD PTR [rsp+0x58]
   140031b45:	add    rsp,0x20
   140031b49:	pop    r15
   140031b4b:	pop    r14
   140031b4d:	pop    r12
   140031b4f:	ret    
   140031b50:	int3   
   140031b51:	int3   
   140031b52:	int3   
   140031b53:	int3   
   140031b54:	int3   
   140031b55:	int3   
   140031b56:	int3   
   140031b57:	int3   
   140031b58:	mov    QWORD PTR [rsp+0x8],rbx
   140031b5d:	push   rdi
   140031b5e:	sub    rsp,0x20
   140031b62:	mov    rbx,rdx
   140031b65:	mov    rdi,rcx
   140031b68:	call   QWORD PTR [rip+0x2154a]        # 0x1400530b8
   140031b6e:	mov    edx,eax
   140031b70:	test   eax,eax
   140031b72:	js     0x140031b9f
   140031b74:	test   rbx,rbx
   140031b77:	je     0x140031b9d
   140031b79:	cmp    WORD PTR [rbx],0xd
   140031b7d:	jne    0x140031b9d
   140031b7f:	test   rdi,rdi
   140031b82:	je     0x140031b9d
   140031b84:	movzx  eax,WORD PTR [rdi+0x2]
   140031b88:	mov    ecx,0x440
   140031b8d:	and    ax,cx
   140031b90:	cmp    ax,cx
   140031b93:	jne    0x140031b9d
   140031b95:	mov    eax,0x9
   140031b9a:	mov    WORD PTR [rbx],ax
   140031b9d:	mov    eax,edx
   140031b9f:	mov    rbx,QWORD PTR [rsp+0x30]
   140031ba4:	add    rsp,0x20
   140031ba8:	pop    rdi
   140031ba9:	ret    
   140031baa:	int3   
   140031bab:	int3   
   140031bac:	int3   
   140031bad:	int3   
   140031bae:	int3   
   140031baf:	int3   
   140031bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140031bb5:	push   rdi
   140031bb6:	sub    rsp,0x20
   140031bba:	mov    rbx,rdx
   140031bbd:	mov    rdi,rcx
   140031bc0:	test   rdx,rdx
   140031bc3:	jne    0x140031bd0
   140031bc5:	mov    ecx,0x80070057
   140031bca:	call   0x1400152fc
   140031bcf:	int3   
   140031bd0:	lea    rdx,[rsp+0x38]
   140031bd5:	mov    rcx,rbx
   140031bd8:	call   0x140031b58
   140031bdd:	test   eax,eax
   140031bdf:	jns    0x140031be9
   140031be1:	mov    ecx,eax
   140031be3:	call   0x1400152fc
   140031be8:	int3   
   140031be9:	cmp    WORD PTR [rsp+0x38],0x8
   140031bef:	je     0x140031bfc
   140031bf1:	mov    ecx,0x80070057
   140031bf6:	call   0x1400152fc
   140031bfb:	int3   
   140031bfc:	mov    rcx,rdi
   140031bff:	call   0x140011f98
   140031c04:	test   eax,eax
   140031c06:	jns    0x140031c10
   140031c08:	mov    ecx,eax
   140031c0a:	call   0x1400152fc
   140031c0f:	int3   
   140031c10:	mov    rcx,rbx
   140031c13:	mov    QWORD PTR [rdi],rbx
   140031c16:	call   QWORD PTR [rip+0x2141c]        # 0x140053038
   140031c1c:	mov    rbx,QWORD PTR [rsp+0x30]
   140031c21:	add    rsp,0x20
   140031c25:	pop    rdi
   140031c26:	ret    
   140031c27:	int3   
   140031c28:	int3   
   140031c29:	int3   
   140031c2a:	int3   
   140031c2b:	int3   
   140031c2c:	int3   
   140031c2d:	int3   
   140031c2e:	int3   
   140031c2f:	int3   
   140031c30:	mov    QWORD PTR [rsp+0x8],rbx
   140031c35:	push   rdi
   140031c36:	sub    rsp,0x20
   140031c3a:	mov    rbx,rdx
   140031c3d:	mov    rdi,rcx
   140031c40:	test   rdx,rdx
   140031c43:	jne    0x140031c50
   140031c45:	mov    ecx,0x80070057
   140031c4a:	call   0x1400152fc
   140031c4f:	int3   
   140031c50:	lea    rdx,[rsp+0x38]
   140031c55:	mov    rcx,rbx
   140031c58:	call   0x140031b58
   140031c5d:	test   eax,eax
   140031c5f:	jns    0x140031c69
   140031c61:	mov    ecx,eax
   140031c63:	call   0x1400152fc
   140031c68:	int3   
   140031c69:	cmp    WORD PTR [rsp+0x38],0x16
   140031c6f:	je     0x140031c7c
   140031c71:	mov    ecx,0x80070057
   140031c76:	call   0x1400152fc
   140031c7b:	int3   
   140031c7c:	mov    rcx,rdi
   140031c7f:	call   0x140011f98
   140031c84:	test   eax,eax
   140031c86:	jns    0x140031c90
   140031c88:	mov    ecx,eax
   140031c8a:	call   0x1400152fc
   140031c8f:	int3   
   140031c90:	mov    rcx,rbx
   140031c93:	mov    QWORD PTR [rdi],rbx
   140031c96:	call   QWORD PTR [rip+0x2139c]        # 0x140053038
   140031c9c:	mov    rbx,QWORD PTR [rsp+0x30]
   140031ca1:	add    rsp,0x20
   140031ca5:	pop    rdi
   140031ca6:	ret    
   140031ca7:	int3   
   140031ca8:	int3   
   140031ca9:	int3   
   140031caa:	int3   
   140031cab:	int3   
   140031cac:	int3   
   140031cad:	int3   
   140031cae:	int3   
   140031caf:	int3   
   140031cb0:	mov    rax,rsp
   140031cb3:	push   rsi
   140031cb4:	sub    rsp,0x60
   140031cb8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140031cc0:	mov    QWORD PTR [rax+0x18],rbx
   140031cc4:	mov    QWORD PTR [rax+0x20],rbp
   140031cc8:	mov    rbp,rcx
   140031ccb:	and    QWORD PTR [rax+0x10],0x0
   140031cd0:	mov    r10,QWORD PTR [rcx+0x30]
   140031cd4:	mov    r11,QWORD PTR [rcx+0x28]
   140031cd8:	mov    rbx,QWORD PTR [rcx+0x20]
   140031cdc:	lea    rax,[rcx+0x88]
   140031ce3:	lea    rdx,[rcx+0x78]
   140031ce7:	mov    QWORD PTR [rsp+0x48],rax
   140031cec:	mov    QWORD PTR [rsp+0x40],rdx
   140031cf1:	lea    rax,[rsp+0x78]
   140031cf6:	mov    QWORD PTR [rsp+0x38],rax
   140031cfb:	mov    QWORD PTR [rsp+0x30],r10
   140031d00:	mov    QWORD PTR [rsp+0x28],r11
   140031d05:	mov    QWORD PTR [rsp+0x20],rbx
   140031d0a:	mov    r9,QWORD PTR [rcx+0x18]
   140031d0e:	mov    r8,QWORD PTR [rcx+0x10]
   140031d12:	mov    edx,0x409
   140031d17:	call   0x14003289c
   140031d1c:	cmp    QWORD PTR [rsp+0x78],0x0
   140031d22:	je     0x140031dcd
   140031d28:	and    QWORD PTR [rsp+0x70],0x0
   140031d2e:	lea    rax,[rsp+0x70]
   140031d33:	mov    QWORD PTR [rsp+0x20],rax
   140031d38:	lea    r9,[rip+0xdea9]        # 0x14003fbe8
   140031d3f:	xor    edx,edx
   140031d41:	lea    r8d,[rdx+0x7]
   140031d45:	lea    rcx,[rip+0xdeac]        # 0x14003fbf8
   140031d4c:	call   QWORD PTR [rip+0x213a6]        # 0x1400530f8
   140031d52:	mov    rbx,QWORD PTR [rsp+0x70]
   140031d57:	test   eax,eax
   140031d59:	js     0x140031db2
   140031d5b:	test   rbx,rbx
   140031d5e:	je     0x140031d7f
   140031d60:	mov    rax,QWORD PTR [rbx]
   140031d63:	mov    rsi,QWORD PTR [rax+0x38]
   140031d67:	mov    rcx,rsi
   140031d6a:	call   QWORD PTR [rip+0xb9b8]        # 0x14003d728
   140031d70:	mov    rdx,QWORD PTR [rsp+0x78]
   140031d75:	mov    rcx,rbx
   140031d78:	call   rsi
   140031d7a:	mov    rbx,QWORD PTR [rsp+0x70]
   140031d7f:	test   eax,eax
   140031d81:	js     0x140031db2
   140031d83:	test   rbx,rbx
   140031d86:	je     0x140031db2
   140031d88:	mov    rax,QWORD PTR [rbx]
   140031d8b:	lea    rsi,[rbp+0xa8]
   140031d92:	mov    rbp,QWORD PTR [rax]
   140031d95:	mov    rcx,rbp
   140031d98:	call   QWORD PTR [rip+0xb98a]        # 0x14003d728
   140031d9e:	mov    r8,rsi
   140031da1:	lea    rdx,[rip+0xde30]        # 0x14003fbd8
   140031da8:	mov    rcx,rbx
   140031dab:	call   rbp
   140031dad:	mov    rbx,QWORD PTR [rsp+0x70]
   140031db2:	test   rbx,rbx
   140031db5:	je     0x140031dcd
   140031db7:	mov    rax,QWORD PTR [rbx]
   140031dba:	mov    rsi,QWORD PTR [rax+0x10]
   140031dbe:	mov    rcx,rsi
   140031dc1:	call   QWORD PTR [rip+0xb961]        # 0x14003d728
   140031dc7:	mov    rcx,rbx
   140031dca:	call   rsi
   140031dcc:	nop
   140031dcd:	mov    rcx,QWORD PTR [rsp+0x78]
   140031dd2:	call   QWORD PTR [rip+0x212e8]        # 0x1400530c0
   140031dd8:	xor    eax,eax
   140031dda:	lea    r11,[rsp+0x60]
   140031ddf:	mov    rbx,QWORD PTR [r11+0x20]
   140031de3:	mov    rbp,QWORD PTR [r11+0x28]
   140031de7:	mov    rsp,r11
   140031dea:	pop    rsi
   140031deb:	ret    
   140031dec:	lea    rcx,[rdx+0x78]
   140031df3:	jmp    0x14000f3c0
   140031df8:	lea    rcx,[rdx+0x70]
   140031dff:	jmp    0x14000f4f0
   140031e04:	int3   
   140031e05:	int3   
   140031e06:	int3   
   140031e07:	int3   
   140031e08:	int3   
   140031e09:	int3   
   140031e0a:	int3   
   140031e0b:	int3   
   140031e0c:	mov    QWORD PTR [rsp+0x8],rbx
   140031e11:	push   rdi
   140031e12:	sub    rsp,0x20
   140031e16:	mov    rax,QWORD PTR [rcx]
   140031e19:	mov    rdi,rcx
   140031e1c:	mov    rbx,QWORD PTR [rax+0x8]
   140031e20:	mov    rcx,rbx
   140031e23:	call   QWORD PTR [rip+0xb8ff]        # 0x14003d728
   140031e29:	mov    rcx,rdi
   140031e2c:	call   rbx
   140031e2e:	xor    r8d,r8d
   140031e31:	lea    rcx,[rip+0xf38]        # 0x140032d70
   140031e38:	mov    rdx,rdi
   140031e3b:	mov    rbx,QWORD PTR [rsp+0x30]
   140031e40:	add    rsp,0x20
   140031e44:	pop    rdi
   140031e45:	rex.W jmp QWORD PTR [rip+0xb5e4]        # 0x14003d430
   140031e4c:	int3   
   140031e4d:	int3   
   140031e4e:	int3   
   140031e4f:	int3   
   140031e50:	int3   
   140031e51:	int3   
   140031e52:	int3   
   140031e53:	int3   
   140031e54:	rex push rbx
   140031e56:	sub    rsp,0x20
   140031e5a:	mov    rbx,rcx
   140031e5d:	mov    rcx,QWORD PTR [rcx]
   140031e60:	test   rcx,rcx
   140031e63:	jne    0x140031e6d
   140031e65:	xor    eax,eax
   140031e67:	add    rsp,0x20
   140031e6b:	pop    rbx
   140031e6c:	ret    
   140031e6d:	call   QWORD PTR [rip+0x2120d]        # 0x140053080
   140031e73:	mov    rcx,QWORD PTR [rbx]
   140031e76:	mov    edx,eax
   140031e78:	add    rsp,0x20
   140031e7c:	pop    rbx
   140031e7d:	rex.W jmp QWORD PTR [rip+0x21204]        # 0x140053088
   140031e84:	int3   
   140031e85:	int3   
   140031e86:	int3   
   140031e87:	int3   
   140031e88:	int3   
   140031e89:	int3   
   140031e8a:	int3   
   140031e8b:	int3   
   140031e8c:	mov    QWORD PTR [rsp+0x8],rbx
   140031e91:	push   rdi
   140031e92:	sub    rsp,0x20
   140031e96:	mov    rdi,rdx
   140031e99:	mov    rbx,rcx
   140031e9c:	test   rdx,rdx
   140031e9f:	jne    0x140031ea8
   140031ea1:	mov    eax,0x80004003
   140031ea6:	jmp    0x140031ec3
   140031ea8:	call   0x140031e54
   140031ead:	mov    QWORD PTR [rdi],rax
   140031eb0:	test   rax,rax
   140031eb3:	jne    0x140031ec1
   140031eb5:	cmp    QWORD PTR [rbx],rax
   140031eb8:	je     0x140031ec1
   140031eba:	mov    eax,0x8007000e
   140031ebf:	jmp    0x140031ec3
   140031ec1:	xor    eax,eax
   140031ec3:	mov    rbx,QWORD PTR [rsp+0x30]
   140031ec8:	add    rsp,0x20
   140031ecc:	pop    rdi
   140031ecd:	ret    
   140031ece:	int3   
   140031ecf:	int3   
   140031ed0:	int3   
   140031ed1:	int3   
   140031ed2:	int3   
   140031ed3:	int3   
   140031ed4:	rex push rbx
   140031ed6:	sub    rsp,0x20
   140031eda:	and    DWORD PTR [rsp+0x34],0x0
   140031edf:	mov    rbx,rcx
   140031ee2:	cmp    QWORD PTR [rcx],0x0
   140031ee6:	mov    DWORD PTR [rsp+0x30],edx
   140031eea:	je     0x140031ef3
   140031eec:	mov    eax,0x80004005
   140031ef1:	jmp    0x140031f1e
   140031ef3:	mov    ecx,0x8
   140031ef8:	lea    r8,[rsp+0x30]
   140031efd:	lea    edx,[rcx-0x7]
   140031f00:	call   QWORD PTR [rip+0x21142]        # 0x140053048
   140031f06:	mov    QWORD PTR [rbx],rax
   140031f09:	test   rax,rax
   140031f0c:	jne    0x140031f15
   140031f0e:	mov    eax,0x8007000e
   140031f13:	jmp    0x140031f1e
   140031f15:	mov    rcx,rax
   140031f18:	call   QWORD PTR [rip+0x2111a]        # 0x140053038
   140031f1e:	add    rsp,0x20
   140031f22:	pop    rbx
   140031f23:	ret    
   140031f24:	int3   
   140031f25:	int3   
   140031f26:	int3   
   140031f27:	int3   
   140031f28:	int3   
   140031f29:	int3   
   140031f2a:	int3   
   140031f2b:	int3   
   140031f2c:	rex push rdi
   140031f2e:	sub    rsp,0x30
   140031f32:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140031f3b:	mov    QWORD PTR [rsp+0x40],rbx
   140031f40:	mov    QWORD PTR [rsp+0x50],rsi
   140031f45:	mov    rsi,rcx
   140031f48:	mov    ecx,0xf8
   140031f4d:	call   0x140013d94
   140031f52:	mov    QWORD PTR [rsp+0x48],rax
   140031f57:	test   rax,rax
   140031f5a:	je     0x140031f69
   140031f5c:	mov    rcx,rax
   140031f5f:	call   0x140011c54
   140031f64:	mov    rdi,rax
   140031f67:	jmp    0x140031f6b
   140031f69:	xor    edi,edi
   140031f6b:	test   rdi,rdi
   140031f6e:	je     0x140031fab
   140031f70:	mov    rax,QWORD PTR [rdi]
   140031f73:	mov    rbx,QWORD PTR [rax+0x8]
   140031f77:	mov    rcx,rbx
   140031f7a:	call   QWORD PTR [rip+0xb7a8]        # 0x14003d728
   140031f80:	mov    rcx,rdi
   140031f83:	call   rbx
   140031f85:	mov    rdx,rsi
   140031f88:	mov    rcx,rdi
   140031f8b:	call   0x140032468
   140031f90:	test   al,al
   140031f92:	jne    0x140031fab
   140031f94:	mov    rax,QWORD PTR [rdi]
   140031f97:	mov    rbx,QWORD PTR [rax+0x10]
   140031f9b:	mov    rcx,rbx
   140031f9e:	call   QWORD PTR [rip+0xb784]        # 0x14003d728
   140031fa4:	mov    rcx,rdi
   140031fa7:	call   rbx
   140031fa9:	xor    edi,edi
   140031fab:	mov    rax,rdi
   140031fae:	mov    rbx,QWORD PTR [rsp+0x40]
   140031fb3:	mov    rsi,QWORD PTR [rsp+0x50]
   140031fb8:	add    rsp,0x30
   140031fbc:	pop    rdi
   140031fbd:	ret    
   140031fbe:	mov    rcx,QWORD PTR [rdx+0x48]
   140031fc5:	jmp    0x140013de0
   140031fca:	int3   
   140031fcb:	int3   
   140031fcc:	int3   
   140031fcd:	int3   
   140031fce:	int3   
   140031fcf:	int3   
   140031fd0:	rex push rdi
   140031fd2:	sub    rsp,0x30
   140031fd6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140031fdf:	mov    QWORD PTR [rsp+0x40],rbx
   140031fe4:	mov    QWORD PTR [rsp+0x50],rsi
   140031fe9:	mov    rsi,rcx
   140031fec:	mov    ecx,0xf8
   140031ff1:	call   0x140013d94
   140031ff6:	mov    QWORD PTR [rsp+0x48],rax
   140031ffb:	test   rax,rax
   140031ffe:	je     0x14003200d
   140032000:	mov    rcx,rax
   140032003:	call   0x140011c54
   140032008:	mov    rdi,rax
   14003200b:	jmp    0x14003200f
   14003200d:	xor    edi,edi
   14003200f:	test   rdi,rdi
   140032012:	je     0x14003204f
   140032014:	mov    rax,QWORD PTR [rdi]
   140032017:	mov    rbx,QWORD PTR [rax+0x8]
   14003201b:	mov    rcx,rbx
   14003201e:	call   QWORD PTR [rip+0xb704]        # 0x14003d728
   140032024:	mov    rcx,rdi
   140032027:	call   rbx
   140032029:	mov    rdx,rsi
   14003202c:	mov    rcx,rdi
   14003202f:	call   0x1400324e0
   140032034:	test   al,al
   140032036:	jne    0x14003204f
   140032038:	mov    rax,QWORD PTR [rdi]
   14003203b:	mov    rbx,QWORD PTR [rax+0x10]
   14003203f:	mov    rcx,rbx
   140032042:	call   QWORD PTR [rip+0xb6e0]        # 0x14003d728
   140032048:	mov    rcx,rdi
   14003204b:	call   rbx
   14003204d:	xor    edi,edi
   14003204f:	mov    rax,rdi
   140032052:	mov    rbx,QWORD PTR [rsp+0x40]
   140032057:	mov    rsi,QWORD PTR [rsp+0x50]
   14003205c:	add    rsp,0x30
   140032060:	pop    rdi
   140032061:	ret    
   140032062:	mov    rcx,QWORD PTR [rdx+0x48]
   140032069:	jmp    0x140013de0
   14003206e:	int3   
   14003206f:	int3   
   140032070:	int3   
   140032071:	int3   
   140032072:	int3   
   140032073:	int3   
   140032074:	mov    QWORD PTR [rsp+0x18],rbx
   140032079:	mov    QWORD PTR [rsp+0x20],rbp
   14003207e:	push   rsi
   14003207f:	push   rdi
   140032080:	push   r12
   140032082:	push   r14
   140032084:	push   r15
   140032086:	sub    rsp,0x840
   14003208d:	mov    rax,QWORD PTR [rip+0x1bf7c]        # 0x14004e010
   140032094:	xor    rax,rsp
   140032097:	mov    QWORD PTR [rsp+0x830],rax
   14003209f:	mov    rax,QWORD PTR [rcx]
   1400320a2:	mov    r15,rcx
   1400320a5:	mov    rsi,rdx
   1400320a8:	mov    rbx,QWORD PTR [rax+0x28]
   1400320ac:	mov    rcx,rbx
   1400320af:	call   QWORD PTR [rip+0xb673]        # 0x14003d728
   1400320b5:	mov    rcx,r15
   1400320b8:	call   rbx
   1400320ba:	test   eax,eax
   1400320bc:	js     0x140032199
   1400320c2:	and    DWORD PTR [rsp+0x20],0x0
   1400320c7:	lea    rcx,[rsp+0x38]
   1400320cc:	and    QWORD PTR [rsp+0x30],0x0
   1400320d2:	xor    edx,edx
   1400320d4:	mov    r8d,0x7f8
   1400320da:	call   0x140014694
   1400320df:	xor    edi,edi
   1400320e1:	xor    r12d,r12d
   1400320e4:	xor    ebp,ebp
   1400320e6:	mov    rax,QWORD PTR [r15]
   1400320e9:	mov    rbx,QWORD PTR [rax+0x18]
   1400320ed:	mov    rcx,rbx
   1400320f0:	call   QWORD PTR [rip+0xb632]        # 0x14003d728
   1400320f6:	lea    r9,[rsp+0x20]
   1400320fb:	mov    edx,0x100
   140032100:	lea    r8,[rsp+0x30]
   140032105:	mov    rcx,r15
   140032108:	call   rbx
   14003210a:	test   eax,eax
   14003210c:	js     0x140032199
   140032112:	mov    ecx,DWORD PTR [rsp+0x20]
   140032116:	or     eax,0xffffffff
   140032119:	sub    eax,ecx
   14003211b:	inc    ebp
   14003211d:	cmp    edi,eax
   14003211f:	jae    0x140032184
   140032121:	add    edi,ecx
   140032123:	mov    rcx,rsi
   140032126:	cmp    QWORD PTR [rsi],0x0
   14003212a:	mov    edx,edi
   14003212c:	je     0x140032138
   14003212e:	xor    r8d,r8d
   140032131:	call   0x140032b28
   140032136:	jmp    0x14003213d
   140032138:	call   0x140031ed4
   14003213d:	xor    r14d,r14d
   140032140:	cmp    DWORD PTR [rsp+0x20],r14d
   140032145:	jbe    0x140032199
   140032147:	mov    rcx,QWORD PTR [rsp+r14*8+0x30]
   14003214c:	call   QWORD PTR [rip+0x20f26]        # 0x140053078
   140032152:	xor    r9d,r9d
   140032155:	lea    r8,[rsp+0x28]
   14003215a:	mov    edx,r12d
   14003215d:	mov    QWORD PTR [rsp+0x28],rax
   140032162:	mov    rcx,rsi
   140032165:	call   0x140032c34
   14003216a:	mov    rcx,QWORD PTR [rsp+r14*8+0x30]
   14003216f:	inc    r12d
   140032172:	call   QWORD PTR [rip+0x20fa8]        # 0x140053120
   140032178:	mov    ecx,DWORD PTR [rsp+0x20]
   14003217c:	inc    r14d
   14003217f:	cmp    r14d,ecx
   140032182:	jb     0x140032147
   140032184:	test   ecx,ecx
   140032186:	je     0x140032199
   140032188:	cmp    edi,0x800
   14003218e:	ja     0x140032199
   140032190:	cmp    ebp,0x20
   140032193:	jb     0x1400320e6
   140032199:	mov    rcx,QWORD PTR [rsp+0x830]
   1400321a1:	xor    rcx,rsp
   1400321a4:	call   0x1400141d0
   1400321a9:	lea    r11,[rsp+0x840]
   1400321b1:	mov    rbx,QWORD PTR [r11+0x40]
   1400321b5:	mov    rbp,QWORD PTR [r11+0x48]
   1400321b9:	mov    rsp,r11
   1400321bc:	pop    r15
   1400321be:	pop    r14
   1400321c0:	pop    r12
   1400321c2:	pop    rdi
   1400321c3:	pop    rsi
   1400321c4:	ret    
   1400321c5:	int3   
   1400321c6:	int3   
   1400321c7:	int3   
   1400321c8:	int3   
   1400321c9:	int3   
   1400321ca:	int3   
   1400321cb:	int3   
   1400321cc:	mov    DWORD PTR [rsp+0x10],edx
   1400321d0:	sub    rsp,0x28
   1400321d4:	mov    rcx,QWORD PTR [rcx]
   1400321d7:	lea    r8,[rsp+0x38]
   1400321dc:	and    DWORD PTR [rsp+0x38],0x0
   1400321e1:	mov    edx,0x1
   1400321e6:	call   QWORD PTR [rip+0x20eac]        # 0x140053098
   1400321ec:	test   eax,eax
   1400321ee:	jns    0x1400321f8
   1400321f0:	mov    ecx,eax
   1400321f2:	call   0x1400152fc
   1400321f7:	int3   
   1400321f8:	mov    eax,DWORD PTR [rsp+0x38]
   1400321fc:	add    rsp,0x28
   140032200:	ret    
   140032201:	int3   
   140032202:	int3   
   140032203:	int3   
   140032204:	int3   
   140032205:	int3   
   140032206:	int3   
   140032207:	int3   
   140032208:	int3   
   140032209:	int3   
   14003220a:	int3   
   14003220b:	int3   
   14003220c:	int3   
   14003220d:	int3   
   14003220e:	int3   
   14003220f:	int3   
   140032210:	mov    rax,rsp
   140032213:	mov    QWORD PTR [rax+0x8],rbx
   140032217:	mov    QWORD PTR [rax+0x10],rbp
   14003221b:	mov    QWORD PTR [rax+0x18],rsi
   14003221f:	mov    QWORD PTR [rax+0x20],rdi
   140032223:	push   r12
   140032225:	push   r14
   140032227:	push   r15
   140032229:	sub    rsp,0x20
   14003222d:	mov    rbx,rcx
   140032230:	mov    rsi,r9
   140032233:	add    rcx,0xfffffffffffffff8
   140032237:	mov    r14,r8
   14003223a:	mov    r15d,edx
   14003223d:	call   0x140032d08
   140032242:	cmp    BYTE PTR [rbx+0x38],0x0
   140032246:	jne    0x140032252
   140032248:	mov    eax,0x80004005
   14003224d:	jmp    0x1400322e0
   140032252:	test   r14,r14
   140032255:	je     0x1400322db
   14003225b:	test   rsi,rsi
   14003225e:	je     0x1400322db
   140032260:	mov    rdi,QWORD PTR [rsp+0x60]
   140032265:	test   rdi,rdi
   140032268:	je     0x1400322db
   14003226a:	lea    rcx,[rbx+0x40]
   14003226e:	call   QWORD PTR [rip+0xb154]        # 0x14003d3c8
   140032274:	cmp    BYTE PTR [rbx+0x39],0x0
   140032278:	je     0x140032283
   14003227a:	cmp    DWORD PTR [rbx+0x88],r15d
   140032281:	je     0x14003228f
   140032283:	mov    edx,r15d
   140032286:	lea    rcx,[rbx-0x8]
   14003228a:	call   0x14003265c
   14003228f:	lea    rcx,[rbx+0x68]
   140032293:	call   0x140031e54
   140032298:	mov    QWORD PTR [r14],rax
   14003229b:	cmp    QWORD PTR [rbx+0xa0],0x0
   1400322a3:	je     0x1400322b9
   1400322a5:	lea    rcx,[rbx+0x70]
   1400322a9:	call   0x140031e54
   1400322ae:	mov    QWORD PTR [rsi],rax
   1400322b1:	mov    eax,DWORD PTR [rbx+0x80]
   1400322b7:	jmp    0x1400322cb
   1400322b9:	lea    rcx,[rbx+0x78]
   1400322bd:	call   0x140031e54
   1400322c2:	mov    QWORD PTR [rsi],rax
   1400322c5:	mov    eax,DWORD PTR [rbx+0x84]
   1400322cb:	lea    rcx,[rbx+0x40]
   1400322cf:	mov    DWORD PTR [rdi],eax
   1400322d1:	call   QWORD PTR [rip+0xb101]        # 0x14003d3d8
   1400322d7:	xor    eax,eax
   1400322d9:	jmp    0x1400322e0
   1400322db:	mov    eax,0x80004003
   1400322e0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400322e5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400322ea:	mov    rsi,QWORD PTR [rsp+0x50]
   1400322ef:	mov    rdi,QWORD PTR [rsp+0x58]
   1400322f4:	add    rsp,0x20
   1400322f8:	pop    r15
   1400322fa:	pop    r14
   1400322fc:	pop    r12
   1400322fe:	ret    
   1400322ff:	int3   
   140032300:	int3   
   140032301:	int3   
   140032302:	int3   
   140032303:	int3   
   140032304:	int3   
   140032305:	int3   
   140032306:	int3   
   140032307:	int3   
   140032308:	int3   
   140032309:	int3   
   14003230a:	int3   
   14003230b:	int3   
   14003230c:	int3   
   14003230d:	int3   
   14003230e:	int3   
   14003230f:	int3   
   140032310:	mov    QWORD PTR [rsp+0x8],rbx
   140032315:	mov    QWORD PTR [rsp+0x10],rbp
   14003231a:	mov    QWORD PTR [rsp+0x18],rsi
   14003231f:	push   rdi
   140032320:	push   r14
   140032322:	push   r15
   140032324:	sub    rsp,0x20
   140032328:	mov    rbp,r9
   14003232b:	mov    rdi,r8
   14003232e:	mov    r15,rdx
   140032331:	mov    rbx,rcx
   140032334:	test   rdx,rdx
   140032337:	je     0x140032425
   14003233d:	test   r8,r8
   140032340:	je     0x140032425
   140032346:	test   r9,r9
   140032349:	je     0x140032425
   14003234f:	mov    rsi,QWORD PTR [rsp+0x60]
   140032354:	test   rsi,rsi
   140032357:	je     0x140032425
   14003235d:	mov    r14,QWORD PTR [rsp+0x68]
   140032362:	test   r14,r14
   140032365:	je     0x140032425
   14003236b:	and    QWORD PTR [rdx],0x0
   14003236f:	and    QWORD PTR [r8],0x0
   140032373:	and    QWORD PTR [r9],0x0
   140032377:	and    QWORD PTR [rsi],0x0
   14003237b:	and    QWORD PTR [r14],0x0
   14003237f:	call   0x140032d08
   140032384:	cmp    BYTE PTR [rbx+0x40],0x0
   140032388:	jne    0x140032394
   14003238a:	mov    eax,0x80004005
   14003238f:	jmp    0x14003242a
   140032394:	xor    eax,eax
   140032396:	cmp    QWORD PTR [rbx+0x10],rax
   14003239a:	je     0x1400323b9
   14003239c:	mov    rcx,QWORD PTR [rbx+0x10]
   1400323a0:	test   rcx,rcx
   1400323a3:	jne    0x1400323b0
   1400323a5:	mov    ecx,0x80004005
   1400323aa:	call   0x1400152fc
   1400323af:	int3   
   1400323b0:	mov    rdx,r15
   1400323b3:	call   QWORD PTR [rip+0x20cf7]        # 0x1400530b0
   1400323b9:	cmp    QWORD PTR [rbx+0x18],0x0
   1400323be:	je     0x1400323e1
   1400323c0:	test   eax,eax
   1400323c2:	js     0x1400323e1
   1400323c4:	mov    rcx,QWORD PTR [rbx+0x18]
   1400323c8:	test   rcx,rcx
   1400323cb:	jne    0x1400323d8
   1400323cd:	mov    ecx,0x80004005
   1400323d2:	call   0x1400152fc
   1400323d7:	int3   
   1400323d8:	mov    rdx,rdi
   1400323db:	call   QWORD PTR [rip+0x20ccf]        # 0x1400530b0
   1400323e1:	lea    rcx,[rbx+0x20]
   1400323e5:	cmp    QWORD PTR [rcx],0x0
   1400323e9:	je     0x1400323f7
   1400323eb:	test   eax,eax
   1400323ed:	js     0x1400323f7
   1400323ef:	mov    rdx,rbp
   1400323f2:	call   0x140031e8c
   1400323f7:	lea    rcx,[rbx+0x28]
   1400323fb:	cmp    QWORD PTR [rcx],0x0
   1400323ff:	je     0x14003240d
   140032401:	test   eax,eax
   140032403:	js     0x14003240d
   140032405:	mov    rdx,rsi
   140032408:	call   0x140031e8c
   14003240d:	lea    rcx,[rbx+0x30]
   140032411:	cmp    QWORD PTR [rcx],0x0
   140032415:	je     0x14003242a
   140032417:	test   eax,eax
   140032419:	js     0x14003242a
   14003241b:	mov    rdx,r14
   14003241e:	call   0x140031e8c
   140032423:	jmp    0x14003242a
   140032425:	mov    eax,0x80004003
   14003242a:	mov    rbx,QWORD PTR [rsp+0x40]
   14003242f:	mov    rbp,QWORD PTR [rsp+0x48]
   140032434:	mov    rsi,QWORD PTR [rsp+0x50]
   140032439:	add    rsp,0x20
   14003243d:	pop    r15
   14003243f:	pop    r14
   140032441:	pop    rdi
   140032442:	ret    
   140032443:	int3   
   140032444:	int3   
   140032445:	int3   
   140032446:	int3   
   140032447:	int3   
   140032448:	int3   
   140032449:	int3   
   14003244a:	int3   
   14003244b:	int3   
   14003244c:	int3   
   14003244d:	int3   
   14003244e:	int3   
   14003244f:	int3   
   140032450:	test   rdx,rdx
   140032453:	jne    0x14003245b
   140032455:	mov    eax,0x80004003
   14003245a:	ret    
   14003245b:	and    QWORD PTR [rdx],0x0
   14003245f:	xor    eax,eax
   140032461:	ret    
   140032462:	int3   
   140032463:	int3   
   140032464:	int3   
   140032465:	int3   
   140032466:	int3   
   140032467:	int3   
   140032468:	mov    QWORD PTR [rsp+0x8],rbx
   14003246d:	mov    QWORD PTR [rsp+0x10],rbp
   140032472:	mov    QWORD PTR [rsp+0x18],rsi
   140032477:	push   rdi
   140032478:	sub    rsp,0x20
   14003247c:	xor    edi,edi
   14003247e:	mov    rsi,rcx
   140032481:	test   rdx,rdx
   140032484:	jne    0x14003248a
   140032486:	xor    al,al
   140032488:	jmp    0x1400324c4
   14003248a:	add    rcx,0x20
   14003248e:	call   0x14002edfc
   140032493:	mov    rcx,QWORD PTR [rsi+0x20]
   140032497:	mov    ebp,eax
   140032499:	call   QWORD PTR [rip+0x20b71]        # 0x140053010
   14003249f:	test   eax,eax
   1400324a1:	je     0x1400324bd
   1400324a3:	test   ebp,ebp
   1400324a5:	js     0x1400324bd
   1400324a7:	lea    rcx,[rsi+0x30]
   1400324ab:	lea    rdx,[rip+0x1101e]        # 0x1400434d0
   1400324b2:	call   0x1400116b0
   1400324b7:	test   eax,eax
   1400324b9:	setns  dil
   1400324bd:	mov    BYTE PTR [rsi+0x40],dil
   1400324c1:	mov    al,dil
   1400324c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400324c9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400324ce:	mov    rsi,QWORD PTR [rsp+0x40]
   1400324d3:	add    rsp,0x20
   1400324d7:	pop    rdi
   1400324d8:	ret    
   1400324d9:	int3   
   1400324da:	int3   
   1400324db:	int3   
   1400324dc:	int3   
   1400324dd:	int3   
   1400324de:	int3   
   1400324df:	int3   
   1400324e0:	rex push rbp
   1400324e2:	push   rsi
   1400324e3:	push   rdi
   1400324e4:	push   r14
   1400324e6:	push   r15
   1400324e8:	sub    rsp,0x40
   1400324ec:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400324f5:	mov    QWORD PTR [rsp+0x78],rbx
   1400324fa:	mov    rdi,rdx
   1400324fd:	mov    r15,rcx
   140032500:	cmp    BYTE PTR [rcx+0x40],0x0
   140032504:	je     0x14003250d
   140032506:	xor    al,al
   140032508:	jmp    0x140032638
   14003250d:	test   rdx,rdx
   140032510:	je     0x14003260d
   140032516:	and    QWORD PTR [rsp+0x70],0x0
   14003251c:	mov    rax,QWORD PTR [rdx]
   14003251f:	mov    rbx,QWORD PTR [rax]
   140032522:	mov    rcx,rbx
   140032525:	call   QWORD PTR [rip+0xb1fd]        # 0x14003d728
   14003252b:	lea    r8,[rsp+0x70]
   140032530:	lea    rdx,[rip+0xd681]        # 0x14003fbb8
   140032537:	mov    rcx,rdi
   14003253a:	call   rbx
   14003253c:	mov    rbx,QWORD PTR [rsp+0x70]
   140032541:	test   rbx,rbx
   140032544:	je     0x1400325f3
   14003254a:	and    QWORD PTR [rsp+0x80],0x0
   140032553:	and    QWORD PTR [rsp+0x88],0x0
   14003255c:	mov    rax,QWORD PTR [rbx]
   14003255f:	lea    rdi,[r15+0x30]
   140032563:	lea    rsi,[r15+0x28]
   140032567:	mov    r14,QWORD PTR [rax+0x18]
   14003256b:	mov    rcx,r14
   14003256e:	call   QWORD PTR [rip+0xb1b4]        # 0x14003d728
   140032574:	mov    QWORD PTR [rsp+0x28],rdi
   140032579:	mov    QWORD PTR [rsp+0x20],rsi
   14003257e:	lea    r9,[r15+0x20]
   140032582:	lea    r8,[rsp+0x88]
   14003258a:	lea    rdx,[rsp+0x80]
   140032592:	mov    rcx,rbx
   140032595:	call   r14
   140032598:	mov    rbx,QWORD PTR [rsp+0x70]
   14003259d:	mov    rax,QWORD PTR [rbx]
   1400325a0:	mov    rdi,QWORD PTR [rax+0x20]
   1400325a4:	mov    rcx,rdi
   1400325a7:	call   QWORD PTR [rip+0xb17b]        # 0x14003d728
   1400325ad:	lea    rdx,[r15+0x38]
   1400325b1:	mov    rcx,rbx
   1400325b4:	call   rdi
   1400325b6:	mov    rdx,QWORD PTR [rsp+0x80]
   1400325be:	test   rdx,rdx
   1400325c1:	je     0x1400325cc
   1400325c3:	lea    rcx,[r15+0x10]
   1400325c7:	call   0x140031c30
   1400325cc:	cmp    QWORD PTR [r15+0x38],0x0
   1400325d1:	jne    0x1400325e9
   1400325d3:	mov    rdx,QWORD PTR [rsp+0x88]
   1400325db:	test   rdx,rdx
   1400325de:	je     0x1400325e9
   1400325e0:	lea    rcx,[r15+0x18]
   1400325e4:	call   0x140031bb0
   1400325e9:	mov    BYTE PTR [r15+0x40],0x1
   1400325ee:	mov    rbx,QWORD PTR [rsp+0x70]
   1400325f3:	test   rbx,rbx
   1400325f6:	je     0x14003260d
   1400325f8:	mov    rax,QWORD PTR [rbx]
   1400325fb:	mov    rdi,QWORD PTR [rax+0x10]
   1400325ff:	mov    rcx,rdi
   140032602:	call   QWORD PTR [rip+0xb120]        # 0x14003d728
   140032608:	mov    rcx,rbx
   14003260b:	call   rdi
   14003260d:	mov    rcx,QWORD PTR [r15+0x38]
   140032611:	test   rcx,rcx
   140032614:	je     0x140032625
   140032616:	lea    rdx,[r15+0x18]
   14003261a:	cmp    QWORD PTR [rdx],0x0
   14003261e:	jne    0x140032625
   140032620:	call   0x140032074
   140032625:	cmp    QWORD PTR [r15+0x18],0x0
   14003262a:	je     0x140032634
   14003262c:	mov    rcx,r15
   14003262f:	call   0x140031e0c
   140032634:	mov    al,BYTE PTR [r15+0x40]
   140032638:	mov    rbx,QWORD PTR [rsp+0x78]
   14003263d:	add    rsp,0x40
   140032641:	pop    r15
   140032643:	pop    r14
   140032645:	pop    rdi
   140032646:	pop    rsi
   140032647:	pop    rbp
   140032648:	ret    
   140032649:	lea    rcx,[rdx+0x70]
   140032650:	jmp    0x14000f4f0
   140032655:	int3   
   140032656:	int3   
   140032657:	int3   
   140032658:	int3   
   140032659:	int3   
   14003265a:	int3   
   14003265b:	int3   
   14003265c:	mov    QWORD PTR [rsp+0x8],rbx
   140032661:	mov    QWORD PTR [rsp+0x10],rbp
   140032666:	mov    QWORD PTR [rsp+0x18],rsi
   14003266b:	push   rdi
   14003266c:	push   r14
   14003266e:	push   r15
   140032670:	sub    rsp,0x50
   140032674:	xor    r14d,r14d
   140032677:	mov    r15d,edx
   14003267a:	mov    rbp,rcx
   14003267d:	cmp    BYTE PTR [rcx+0x41],r14b
   140032681:	je     0x14003268b
   140032683:	cmp    edx,DWORD PTR [rcx+0x90]
   140032689:	je     0x140032702
   14003268b:	lea    rdi,[rcx+0x8c]
   140032692:	lea    rsi,[rcx+0x70]
   140032696:	mov    DWORD PTR [rdi],r14d
   140032699:	mov    rcx,QWORD PTR [rsi]
   14003269c:	call   QWORD PTR [rip+0x20a1e]        # 0x1400530c0
   1400326a2:	mov    QWORD PTR [rsi],r14
   1400326a5:	lea    rbx,[rbp+0x80]
   1400326ac:	mov    rcx,QWORD PTR [rbx]
   1400326af:	call   QWORD PTR [rip+0x20a0b]        # 0x1400530c0
   1400326b5:	mov    QWORD PTR [rbx],r14
   1400326b8:	xor    r9d,r9d
   1400326bb:	mov    rdx,QWORD PTR [rbp+0x20]
   1400326bf:	mov    rax,QWORD PTR [rbp+0x30]
   1400326c3:	mov    rcx,QWORD PTR [rbp+0x28]
   1400326c7:	mov    r8,QWORD PTR [rbp+0x10]
   1400326cb:	mov    QWORD PTR [rsp+0x48],rdi
   1400326d0:	mov    QWORD PTR [rsp+0x40],rbx
   1400326d5:	mov    QWORD PTR [rsp+0x38],rsi
   1400326da:	mov    QWORD PTR [rsp+0x30],rax
   1400326df:	mov    QWORD PTR [rsp+0x28],rcx
   1400326e4:	mov    QWORD PTR [rsp+0x20],rdx
   1400326e9:	mov    edx,r15d
   1400326ec:	call   0x14003289c
   1400326f1:	test   eax,eax
   1400326f3:	mov    DWORD PTR [rbp+0x90],r15d
   1400326fa:	setns  r14b
   1400326fe:	mov    BYTE PTR [rbp+0x41],r14b
   140032702:	lea    r11,[rsp+0x50]
   140032707:	mov    rbx,QWORD PTR [r11+0x20]
   14003270b:	mov    rbp,QWORD PTR [r11+0x28]
   14003270f:	mov    rsi,QWORD PTR [r11+0x30]
   140032713:	mov    rsp,r11
   140032716:	pop    r15
   140032718:	pop    r14
   14003271a:	pop    rdi
   14003271b:	ret    
   14003271c:	int3   
   14003271d:	int3   
   14003271e:	int3   
   14003271f:	int3   
   140032720:	int3   
   140032721:	int3   
   140032722:	int3   
   140032723:	int3   
   140032724:	mov    QWORD PTR [rsp+0x8],rbx
   140032729:	mov    QWORD PTR [rsp+0x10],rsi
   14003272e:	push   rdi
   14003272f:	sub    rsp,0x30
   140032733:	test   BYTE PTR [rip+0x1cb46],0x1        # 0x14004f280
   14003273a:	mov    rdi,rcx
   14003273d:	je     0x14003274b
   14003273f:	lea    rdx,[rip+0x101ca]        # 0x140042910
   140032746:	call   0x14002dfbc
   14003274b:	cmp    QWORD PTR [rdi+0xf0],0x0
   140032753:	je     0x1400327b8
   140032755:	mov    rcx,QWORD PTR [rdi+0xe8]
   14003275c:	call   0x140039698
   140032761:	lea    rcx,[rdi+0x20]
   140032765:	mov    rdx,rax
   140032768:	mov    QWORD PTR [rsp+0x20],rcx
   14003276d:	lea    r8,[rdi+0x10]
   140032771:	mov    rcx,QWORD PTR [rdi+0xf0]
   140032778:	lea    r9,[rdi+0x18]
   14003277c:	mov    rbx,rax
   14003277f:	call   0x140036a24
   140032784:	mov    rcx,QWORD PTR [rdi+0xf0]
   14003278b:	call   0x140038248
   140032790:	and    QWORD PTR [rdi+0xf0],0x0
   140032798:	test   rbx,rbx
   14003279b:	je     0x1400327a5
   14003279d:	mov    rcx,rbx
   1400327a0:	call   0x1400318e4
   1400327a5:	cmp    QWORD PTR [rdi+0x18],0x0
   1400327aa:	mov    BYTE PTR [rdi+0x40],0x1
   1400327ae:	je     0x1400327b8
   1400327b0:	mov    rcx,rdi
   1400327b3:	call   0x140031cb0
   1400327b8:	mov    rcx,QWORD PTR [rdi+0xe0]
   1400327bf:	test   rcx,rcx
   1400327c2:	je     0x1400327ca
   1400327c4:	call   QWORD PTR [rip+0xac1e]        # 0x14003d3e8
   1400327ca:	mov    rax,QWORD PTR [rdi]
   1400327cd:	mov    rbx,QWORD PTR [rax+0x10]
   1400327d1:	mov    rcx,rbx
   1400327d4:	call   QWORD PTR [rip+0xaf4e]        # 0x14003d728
   1400327da:	mov    rcx,rdi
   1400327dd:	call   rbx
   1400327df:	test   BYTE PTR [rip+0x1ca9a],0x1        # 0x14004f280
   1400327e6:	je     0x1400327f4
   1400327e8:	lea    rdx,[rip+0x10101]        # 0x1400428f0
   1400327ef:	call   0x14002dfbc
   1400327f4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400327f9:	xor    eax,eax
   1400327fb:	mov    rsi,QWORD PTR [rsp+0x48]
   140032800:	add    rsp,0x30
   140032804:	pop    rdi
   140032805:	ret    
   140032806:	int3   
   140032807:	int3   
   140032808:	int3   
   140032809:	int3   
   14003280a:	int3   
   14003280b:	int3   
   14003280c:	mov    QWORD PTR [rsp+0x8],rbx
   140032811:	mov    QWORD PTR [rsp+0x10],rsi
   140032816:	push   rdi
   140032817:	sub    rsp,0x20
   14003281b:	xor    r9d,r9d
   14003281e:	mov    rbx,r8
   140032821:	mov    rsi,rdx
   140032824:	mov    rdi,rcx
   140032827:	xor    r8d,r8d
   14003282a:	xor    ecx,ecx
   14003282c:	lea    edx,[r9+0x1]
   140032830:	call   QWORD PTR [rip+0xabaa]        # 0x14003d3e0
   140032836:	mov    rcx,QWORD PTR [rdi+0xf0]
   14003283d:	mov    QWORD PTR [rdi+0xe0],rax
   140032844:	mov    QWORD PTR [rdi+0xe8],rbx
   14003284b:	test   rcx,rcx
   14003284e:	je     0x140032855
   140032850:	call   0x140038248
   140032855:	mov    rcx,QWORD PTR [rdi]
   140032858:	mov    QWORD PTR [rdi+0xf0],rsi
   14003285f:	mov    rbx,QWORD PTR [rcx+0x8]
   140032863:	mov    rcx,rbx
   140032866:	call   QWORD PTR [rip+0xaebc]        # 0x14003d728
   14003286c:	mov    rcx,rdi
   14003286f:	call   rbx
   140032871:	xor    r8d,r8d
   140032874:	lea    rcx,[rip+0x575]        # 0x140032df0
   14003287b:	mov    rdx,rdi
   14003287e:	call   QWORD PTR [rip+0xabac]        # 0x14003d430
   140032884:	mov    rbx,QWORD PTR [rsp+0x30]
   140032889:	mov    al,0x1
   14003288b:	mov    rsi,QWORD PTR [rsp+0x38]
   140032890:	add    rsp,0x20
   140032894:	pop    rdi
   140032895:	ret    
   140032896:	int3   
   140032897:	int3   
   140032898:	int3   
   140032899:	int3   
   14003289a:	int3   
   14003289b:	int3   
   14003289c:	mov    QWORD PTR [rsp+0x18],rbx
   1400328a1:	mov    DWORD PTR [rsp+0x10],edx
   1400328a5:	mov    QWORD PTR [rsp+0x8],rcx
   1400328aa:	push   rbp
   1400328ab:	push   rsi
   1400328ac:	push   rdi
   1400328ad:	push   r12
   1400328af:	push   r13
   1400328b1:	push   r14
   1400328b3:	push   r15
   1400328b5:	mov    rbp,rsp
   1400328b8:	sub    rsp,0x80
   1400328bf:	mov    r15,QWORD PTR [rbp+0x78]
   1400328c3:	mov    rbx,r9
   1400328c6:	mov    rsi,r8
   1400328c9:	test   r15,r15
   1400328cc:	je     0x140032a3f
   1400328d2:	mov    r14,QWORD PTR [rbp+0x80]
   1400328d9:	test   r14,r14
   1400328dc:	je     0x140032a3f
   1400328e2:	mov    rdi,QWORD PTR [rbp+0x88]
   1400328e9:	test   rdi,rdi
   1400328ec:	je     0x140032a3f
   1400328f2:	mov    r12,QWORD PTR [rbp+0x60]
   1400328f6:	xor    r13b,r13b
   1400328f9:	test   r8,r8
   1400328fc:	jne    0x14003295f
   1400328fe:	test   rbx,rbx
   140032901:	jne    0x14003295f
   140032903:	mov    rcx,r12
   140032906:	call   QWORD PTR [rip+0x20704]        # 0x140053010
   14003290c:	test   eax,eax
   14003290e:	je     0x14003295f
   140032910:	mov    rcx,QWORD PTR [rbp+0x68]
   140032914:	call   QWORD PTR [rip+0x206f6]        # 0x140053010
   14003291a:	test   eax,eax
   14003291c:	jne    0x14003295f
   14003291e:	mov    rcx,QWORD PTR [rbp+0x70]
   140032922:	call   QWORD PTR [rip+0x206e8]        # 0x140053010
   140032928:	test   eax,eax
   14003292a:	je     0x14003295f
   14003292c:	mov    r8,QWORD PTR [rbp+0x70]
   140032930:	lea    rax,[rip+0x10b99]        # 0x1400434d0
   140032937:	or     r9d,0xffffffff
   14003293b:	lea    edx,[rbx+0x5]
   14003293e:	mov    DWORD PTR [rsp+0x28],r9d
   140032943:	lea    ecx,[rbx+0x7f]
   140032946:	mov    QWORD PTR [rsp+0x20],rax
   14003294b:	call   QWORD PTR [rip+0xaa27]        # 0x14003d378
   140032951:	movzx  r13d,r13b
   140032955:	lea    ecx,[rbx+0x1]
   140032958:	cmp    eax,0x2
   14003295b:	cmove  r13d,ecx
   14003295f:	and    DWORD PTR [rbp-0x18],0x0
   140032963:	and    DWORD PTR [rbp-0x1c],0x0
   140032967:	and    DWORD PTR [rbp-0x20],0x0
   14003296b:	and    QWORD PTR [rbp-0x8],0x0
   140032970:	and    QWORD PTR [rbp-0x10],0x0
   140032975:	mov    BYTE PTR [rbp+0x40],0x0
   140032979:	mov    BYTE PTR [rbp+0x78],0x0
   14003297d:	test   rsi,rsi
   140032980:	je     0x140032998
   140032982:	lea    r9,[rbp-0x1c]
   140032986:	mov    rdx,rsi
   140032989:	lea    r8,[rbp-0x8]
   14003298d:	call   0x140032b8c
   140032992:	test   eax,eax
   140032994:	setns  BYTE PTR [rbp+0x40]
   140032998:	test   rbx,rbx
   14003299b:	je     0x1400329b3
   14003299d:	lea    r9,[rbp-0x20]
   1400329a1:	mov    rdx,rbx
   1400329a4:	lea    r8,[rbp-0x10]
   1400329a8:	call   0x140032b8c
   1400329ad:	test   eax,eax
   1400329af:	setns  BYTE PTR [rbp+0x78]
   1400329b3:	and    DWORD PTR [rdi],0x0
   1400329b6:	test   r13b,r13b
   1400329b9:	jne    0x1400329f7
   1400329bb:	mov    rax,QWORD PTR [rbp+0x70]
   1400329bf:	mov    r9,QWORD PTR [rbp-0x10]
   1400329c3:	mov    r8d,DWORD PTR [rbp-0x1c]
   1400329c7:	mov    rdx,QWORD PTR [rbp-0x8]
   1400329cb:	mov    ecx,DWORD PTR [rbp+0x48]
   1400329ce:	mov    QWORD PTR [rsp+0x50],rdi
   1400329d3:	mov    QWORD PTR [rsp+0x48],r14
   1400329d8:	mov    QWORD PTR [rsp+0x40],r15
   1400329dd:	mov    QWORD PTR [rsp+0x38],rax
   1400329e2:	mov    eax,DWORD PTR [rbp-0x20]
   1400329e5:	mov    QWORD PTR [rsp+0x28],r12
   1400329ea:	mov    DWORD PTR [rsp+0x20],eax
   1400329ee:	call   0x14003b730
   1400329f3:	mov    edi,eax
   1400329f5:	jmp    0x140032a0d
   1400329f7:	mov    rcx,r12
   1400329fa:	call   QWORD PTR [rip+0x20678]        # 0x140053078
   140032a00:	mov    QWORD PTR [r14],rax
   140032a03:	and    QWORD PTR [r15],0x0
   140032a07:	and    DWORD PTR [rdi],0x0
   140032a0a:	mov    edi,DWORD PTR [rbp-0x18]
   140032a0d:	cmp    BYTE PTR [rbp+0x40],0x0
   140032a11:	je     0x140032a1c
   140032a13:	mov    rcx,rsi
   140032a16:	call   QWORD PTR [rip+0x20674]        # 0x140053090
   140032a1c:	cmp    BYTE PTR [rbp+0x78],0x0
   140032a20:	je     0x140032a2b
   140032a22:	mov    rcx,rbx
   140032a25:	call   QWORD PTR [rip+0x20665]        # 0x140053090
   140032a2b:	xor    ecx,ecx
   140032a2d:	call   QWORD PTR [rip+0x2068d]        # 0x1400530c0
   140032a33:	xor    ecx,ecx
   140032a35:	call   QWORD PTR [rip+0x20685]        # 0x1400530c0
   140032a3b:	mov    eax,edi
   140032a3d:	jmp    0x140032a44
   140032a3f:	mov    eax,0x80004003
   140032a44:	mov    rbx,QWORD PTR [rsp+0xd0]
   140032a4c:	add    rsp,0x80
   140032a53:	pop    r15
   140032a55:	pop    r14
   140032a57:	pop    r13
   140032a59:	pop    r12
   140032a5b:	pop    rdi
   140032a5c:	pop    rsi
   140032a5d:	pop    rbp
   140032a5e:	ret    
   140032a5f:	int3   
   140032a60:	int3   
   140032a61:	int3   
   140032a62:	int3   
   140032a63:	int3   
   140032a64:	int3   
   140032a65:	int3   
   140032a66:	int3   
   140032a67:	int3   
   140032a68:	int3   
   140032a69:	int3   
   140032a6a:	int3   
   140032a6b:	int3   
   140032a6c:	int3   
   140032a6d:	int3   
   140032a6e:	int3   
   140032a6f:	int3   
   140032a70:	mov    QWORD PTR [rsp+0x8],rbx
   140032a75:	push   rdi
   140032a76:	sub    rsp,0x20
   140032a7a:	mov    rdi,rcx
   140032a7d:	mov    ecx,0x80004002
   140032a82:	test   r8,r8
   140032a85:	jne    0x140032a8f
   140032a87:	lea    eax,[rcx+0x1]
   140032a8a:	jmp    0x140032b15
   140032a8f:	and    QWORD PTR [r8],0x0
   140032a93:	mov    rax,QWORD PTR [rdx]
   140032a96:	sub    rax,QWORD PTR [rip+0xc373]        # 0x14003ee10
   140032a9d:	jne    0x140032aaa
   140032a9f:	mov    rax,QWORD PTR [rdx+0x8]
   140032aa3:	sub    rax,QWORD PTR [rip+0xc36e]        # 0x14003ee18
   140032aaa:	test   rax,rax
   140032aad:	je     0x140032af9
   140032aaf:	mov    rax,QWORD PTR [rdx]
   140032ab2:	sub    rax,QWORD PTR [rip+0x10a57]        # 0x140043510
   140032ab9:	jne    0x140032ac6
   140032abb:	mov    rax,QWORD PTR [rdx+0x8]
   140032abf:	sub    rax,QWORD PTR [rip+0x10a52]        # 0x140043518
   140032ac6:	test   rax,rax
   140032ac9:	je     0x140032af9
   140032acb:	mov    rax,QWORD PTR [rdx]
   140032ace:	sub    rax,QWORD PTR [rip+0x10a2b]        # 0x140043500
   140032ad5:	jne    0x140032ae2
   140032ad7:	mov    rax,QWORD PTR [rdx+0x8]
   140032adb:	sub    rax,QWORD PTR [rip+0x10a26]        # 0x140043508
   140032ae2:	test   rax,rax
   140032ae5:	jne    0x140032b13
   140032ae7:	test   rdi,rdi
   140032aea:	je     0x140032af2
   140032aec:	lea    rax,[rdi+0x8]
   140032af0:	jmp    0x140032af4
   140032af2:	xor    eax,eax
   140032af4:	mov    QWORD PTR [r8],rax
   140032af7:	jmp    0x140032afc
   140032af9:	mov    QWORD PTR [r8],rdi
   140032afc:	mov    rax,QWORD PTR [rdi]
   140032aff:	mov    rbx,QWORD PTR [rax+0x8]
   140032b03:	mov    rcx,rbx
   140032b06:	call   QWORD PTR [rip+0xac1c]        # 0x14003d728
   140032b0c:	mov    rcx,rdi
   140032b0f:	call   rbx
   140032b11:	xor    ecx,ecx
   140032b13:	mov    eax,ecx
   140032b15:	mov    rbx,QWORD PTR [rsp+0x30]
   140032b1a:	add    rsp,0x20
   140032b1e:	pop    rdi
   140032b1f:	ret    
   140032b20:	int3   
   140032b21:	int3   
   140032b22:	int3   
   140032b23:	int3   
   140032b24:	int3   
   140032b25:	int3   
   140032b26:	int3   
   140032b27:	int3   
   140032b28:	rex push rbx
   140032b2a:	sub    rsp,0x20
   140032b2e:	mov    rbx,rcx
   140032b31:	mov    DWORD PTR [rsp+0x30],edx
   140032b35:	mov    rcx,QWORD PTR [rcx]
   140032b38:	mov    DWORD PTR [rsp+0x34],r8d
   140032b3d:	test   rcx,rcx
   140032b40:	jne    0x140032b4d
   140032b42:	mov    ecx,0x80004005
   140032b47:	call   0x1400152fc
   140032b4c:	int3   
   140032b4d:	test   BYTE PTR [rcx+0x2],0x10
   140032b51:	je     0x140032b5a
   140032b53:	mov    eax,0x80004005
   140032b58:	jmp    0x140032b7f
   140032b5a:	call   QWORD PTR [rip+0x204d0]        # 0x140053030
   140032b60:	test   eax,eax
   140032b62:	js     0x140032b7f
   140032b64:	mov    rcx,QWORD PTR [rbx]
   140032b67:	lea    rdx,[rsp+0x30]
   140032b6c:	call   QWORD PTR [rip+0x204de]        # 0x140053050
   140032b72:	test   eax,eax
   140032b74:	js     0x140032b7f
   140032b76:	mov    rcx,QWORD PTR [rbx]
   140032b79:	call   QWORD PTR [rip+0x204b9]        # 0x140053038
   140032b7f:	add    rsp,0x20
   140032b83:	pop    rbx
   140032b84:	ret    
   140032b85:	int3   
   140032b86:	int3   
   140032b87:	int3   
   140032b88:	int3   
   140032b89:	int3   
   140032b8a:	int3   
   140032b8b:	int3   
   140032b8c:	mov    QWORD PTR [rsp+0x10],rbx
   140032b91:	mov    QWORD PTR [rsp+0x20],rsi
   140032b96:	mov    QWORD PTR [rsp+0x8],rcx
   140032b9b:	push   rdi
   140032b9c:	sub    rsp,0x20
   140032ba0:	mov    rsi,r9
   140032ba3:	mov    rdi,r8
   140032ba6:	mov    rbx,rdx
   140032ba9:	test   r8,r8
   140032bac:	jne    0x140032bb5
   140032bae:	mov    eax,0x80004003
   140032bb3:	jmp    0x140032c1b
   140032bb5:	and    DWORD PTR [r9],0x0
   140032bb9:	lea    r8,[rsp+0x40]
   140032bbe:	and    DWORD PTR [rsp+0x30],0x0
   140032bc3:	mov    edx,0x1
   140032bc8:	and    DWORD PTR [rsp+0x40],0x0
   140032bcd:	mov    rcx,rbx
   140032bd0:	call   QWORD PTR [rip+0x204c2]        # 0x140053098
   140032bd6:	mov    ecx,eax
   140032bd8:	test   eax,eax
   140032bda:	js     0x140032c19
   140032bdc:	lea    r8,[rsp+0x30]
   140032be1:	mov    edx,0x1
   140032be6:	mov    rcx,rbx
   140032be9:	call   QWORD PTR [rip+0x204b1]        # 0x1400530a0
   140032bef:	mov    ecx,eax
   140032bf1:	test   eax,eax
   140032bf3:	js     0x140032c19
   140032bf5:	mov    eax,DWORD PTR [rsp+0x40]
   140032bf9:	cmp    eax,DWORD PTR [rsp+0x30]
   140032bfd:	jg     0x140032c19
   140032bff:	test   eax,eax
   140032c01:	jne    0x140032c19
   140032c03:	mov    rdx,rdi
   140032c06:	mov    rcx,rbx
   140032c09:	call   QWORD PTR [rip+0x20499]        # 0x1400530a8
   140032c0f:	mov    ecx,eax
   140032c11:	mov    eax,DWORD PTR [rsp+0x30]
   140032c15:	inc    eax
   140032c17:	mov    DWORD PTR [rsi],eax
   140032c19:	mov    eax,ecx
   140032c1b:	mov    rbx,QWORD PTR [rsp+0x38]
   140032c20:	mov    rsi,QWORD PTR [rsp+0x48]
   140032c25:	add    rsp,0x20
   140032c29:	pop    rdi
   140032c2a:	ret    
   140032c2b:	int3   
   140032c2c:	int3   
   140032c2d:	int3   
   140032c2e:	int3   
   140032c2f:	int3   
   140032c30:	int3   
   140032c31:	int3   
   140032c32:	int3   
   140032c33:	int3   
   140032c34:	mov    QWORD PTR [rsp+0x8],rbx
   140032c39:	mov    QWORD PTR [rsp+0x10],rbp
   140032c3e:	push   rsi
   140032c3f:	push   rdi
   140032c40:	push   r14
   140032c42:	sub    rsp,0x20
   140032c46:	cmp    QWORD PTR [r8],0x0
   140032c4a:	mov    r14d,r9d
   140032c4d:	mov    rsi,r8
   140032c50:	movsxd rdi,edx
   140032c53:	mov    rbx,rcx
   140032c56:	je     0x140032ce7
   140032c5c:	call   0x1400321cc
   140032c61:	movsxd rbp,eax
   140032c64:	cmp    edi,ebp
   140032c66:	jl     0x140032ce7
   140032c68:	mov    rcx,QWORD PTR [rbx]
   140032c6b:	lea    r8,[rsp+0x50]
   140032c70:	and    DWORD PTR [rsp+0x50],0x0
   140032c75:	mov    edx,0x1
   140032c7a:	call   QWORD PTR [rip+0x20420]        # 0x1400530a0
   140032c80:	test   eax,eax
   140032c82:	jns    0x140032c8c
   140032c84:	mov    ecx,eax
   140032c86:	call   0x1400152fc
   140032c8b:	int3   
   140032c8c:	cmp    edi,DWORD PTR [rsp+0x50]
   140032c90:	jg     0x140032ce7
   140032c92:	mov    rax,QWORD PTR [rbx]
   140032c95:	sub    rdi,rbp
   140032c98:	mov    rcx,QWORD PTR [rax+0x10]
   140032c9c:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140032ca0:	test   rcx,rcx
   140032ca3:	je     0x140032cab
   140032ca5:	call   QWORD PTR [rip+0x20415]        # 0x1400530c0
   140032cab:	test   r14d,r14d
   140032cae:	je     0x140032cd5
   140032cb0:	mov    rcx,QWORD PTR [rsi]
   140032cb3:	call   QWORD PTR [rip+0x203bf]        # 0x140053078
   140032cb9:	mov    rdx,rax
   140032cbc:	test   rax,rax
   140032cbf:	jne    0x140032cc8
   140032cc1:	mov    eax,0x8007000e
   140032cc6:	jmp    0x140032cec
   140032cc8:	mov    rax,QWORD PTR [rbx]
   140032ccb:	mov    rcx,QWORD PTR [rax+0x10]
   140032ccf:	mov    QWORD PTR [rcx+rdi*8],rdx
   140032cd3:	jmp    0x140032ce3
   140032cd5:	mov    rax,QWORD PTR [rbx]
   140032cd8:	mov    rcx,QWORD PTR [rax+0x10]
   140032cdc:	mov    rax,QWORD PTR [rsi]
   140032cdf:	mov    QWORD PTR [rcx+rdi*8],rax
   140032ce3:	xor    eax,eax
   140032ce5:	jmp    0x140032cec
   140032ce7:	mov    eax,0x80070057
   140032cec:	mov    rbx,QWORD PTR [rsp+0x40]
   140032cf1:	mov    rbp,QWORD PTR [rsp+0x48]
   140032cf6:	add    rsp,0x20
   140032cfa:	pop    r14
   140032cfc:	pop    rdi
   140032cfd:	pop    rsi
   140032cfe:	ret    
   140032cff:	int3   
   140032d00:	int3   
   140032d01:	int3   
   140032d02:	int3   
   140032d03:	int3   
   140032d04:	int3   
   140032d05:	int3   
   140032d06:	int3   
   140032d07:	int3   
   140032d08:	mov    QWORD PTR [rsp+0x8],rbx
   140032d0d:	push   rdi
   140032d0e:	sub    rsp,0x20
   140032d12:	mov    rbx,rcx
   140032d15:	mov    rcx,QWORD PTR [rcx+0xe0]
   140032d1c:	test   rcx,rcx
   140032d1f:	je     0x140032d5f
   140032d21:	mov    edx,0x1388
   140032d26:	call   QWORD PTR [rip+0xa6cc]        # 0x14003d3f8
   140032d2c:	lea    rdi,[rbx+0xb8]
   140032d33:	mov    rcx,rdi
   140032d36:	call   QWORD PTR [rip+0xa68c]        # 0x14003d3c8
   140032d3c:	mov    rcx,QWORD PTR [rbx+0xe0]
   140032d43:	test   rcx,rcx
   140032d46:	je     0x140032d56
   140032d48:	call   QWORD PTR [rip+0xa45a]        # 0x14003d1a8
   140032d4e:	and    QWORD PTR [rbx+0xe0],0x0
   140032d56:	mov    rcx,rdi
   140032d59:	call   QWORD PTR [rip+0xa679]        # 0x14003d3d8
   140032d5f:	mov    rbx,QWORD PTR [rsp+0x30]
   140032d64:	add    rsp,0x20
   140032d68:	pop    rdi
   140032d69:	ret    
   140032d6a:	int3   
   140032d6b:	int3   
   140032d6c:	int3   
   140032d6d:	int3   
   140032d6e:	int3   
   140032d6f:	int3   
   140032d70:	mov    QWORD PTR [rsp+0x8],rbx
   140032d75:	push   rdi
   140032d76:	sub    rsp,0x20
   140032d7a:	test   BYTE PTR [rip+0x1c4ff],0x1        # 0x14004f280
   140032d81:	mov    rdi,rcx
   140032d84:	je     0x140032d92
   140032d86:	lea    rdx,[rip+0xfb93]        # 0x140042920
   140032d8d:	call   0x14002dfbc
   140032d92:	test   rdi,rdi
   140032d95:	je     0x140032dc4
   140032d97:	xor    edx,edx
   140032d99:	xor    ecx,ecx
   140032d9b:	call   QWORD PTR [rip+0x20377]        # 0x140053118
   140032da1:	mov    rcx,rdi
   140032da4:	call   0x140031cb0
   140032da9:	mov    rax,QWORD PTR [rdi]
   140032dac:	mov    rbx,QWORD PTR [rax+0x10]
   140032db0:	mov    rcx,rbx
   140032db3:	call   QWORD PTR [rip+0xa96f]        # 0x14003d728
   140032db9:	mov    rcx,rdi
   140032dbc:	call   rbx
   140032dbe:	call   QWORD PTR [rip+0x2033c]        # 0x140053100
   140032dc4:	test   BYTE PTR [rip+0x1c4b5],0x1        # 0x14004f280
   140032dcb:	je     0x140032dd9
   140032dcd:	lea    rdx,[rip+0xfb5c]        # 0x140042930
   140032dd4:	call   0x14002dfbc
   140032dd9:	xor    eax,eax
   140032ddb:	mov    rbx,QWORD PTR [rsp+0x30]
   140032de0:	add    rsp,0x20
   140032de4:	pop    rdi
   140032de5:	ret    
   140032de6:	int3   
   140032de7:	int3   
   140032de8:	int3   
   140032de9:	int3   
   140032dea:	int3   
   140032deb:	int3   
   140032dec:	int3   
   140032ded:	int3   
   140032dee:	int3   
   140032def:	int3   
   140032df0:	jmp    0x140032724
   140032df5:	int3   
   140032df6:	int3   
   140032df7:	int3   
   140032df8:	int3   
   140032df9:	int3   
   140032dfa:	int3   
   140032dfb:	int3   
   140032dfc:	sub    rsp,0x28
   140032e00:	mov    rcx,QWORD PTR [rdx]
   140032e03:	test   rcx,rcx
   140032e06:	jne    0x140032e13
   140032e08:	mov    ecx,0x80004005
   140032e0d:	call   0x1400152fc
   140032e12:	int3   
   140032e13:	mov    rax,QWORD PTR [rcx]
   140032e16:	mov    QWORD PTR [rdx],rax
   140032e19:	lea    rax,[rcx+0x10]
   140032e1d:	add    rsp,0x28
   140032e21:	ret    
   140032e22:	int3   
   140032e23:	int3   
   140032e24:	int3   
   140032e25:	int3   
   140032e26:	int3   
   140032e27:	int3   
   140032e28:	mov    rax,rsp
   140032e2b:	push   rbp
   140032e2c:	push   rdi
   140032e2d:	push   r12
   140032e2f:	push   r14
   140032e31:	push   r15
   140032e33:	mov    rbp,rsp
   140032e36:	sub    rsp,0x60
   140032e3a:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   140032e42:	mov    QWORD PTR [rax+0x10],rbx
   140032e46:	mov    QWORD PTR [rax+0x20],rsi
   140032e4a:	mov    r12b,dl
   140032e4d:	mov    r14,rcx
   140032e50:	add    rcx,0x38
   140032e54:	call   QWORD PTR [rip+0xa56e]        # 0x14003d3c8
   140032e5a:	xorps  xmm0,xmm0
   140032e5d:	movdqu XMMWORD PTR [rbp-0x38],xmm0
   140032e62:	and    QWORD PTR [rbp-0x28],0x0
   140032e67:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140032e6c:	mov    DWORD PTR [rbp-0x10],0xa
   140032e73:	mov    rax,QWORD PTR [r14+0x8]
   140032e77:	mov    QWORD PTR [rbp+0x30],rax
   140032e7b:	test   rax,rax
   140032e7e:	je     0x140032eb9
   140032e80:	lea    rdx,[rbp+0x30]
   140032e84:	call   0x140032dfc
   140032e89:	mov    rdi,QWORD PTR [rax]
   140032e8c:	mov    QWORD PTR [rbp+0x40],rdi
   140032e90:	lea    rdx,[rbp+0x40]
   140032e94:	lea    rcx,[rbp-0x38]
   140032e98:	call   0x14000fef0
   140032e9d:	mov    rax,QWORD PTR [rdi]
   140032ea0:	mov    rbx,QWORD PTR [rax+0x8]
   140032ea4:	mov    rcx,rbx
   140032ea7:	call   QWORD PTR [rip+0xa87b]        # 0x14003d728
   140032ead:	mov    rcx,rdi
   140032eb0:	call   rbx
   140032eb2:	cmp    QWORD PTR [rbp+0x30],0x0
   140032eb7:	jne    0x140032e80
   140032eb9:	mov    r15d,DWORD PTR [rbp-0x28]
   140032ebd:	lea    rcx,[r14+0x38]
   140032ec1:	call   QWORD PTR [rip+0xa511]        # 0x14003d3d8
   140032ec7:	mov    rdi,QWORD PTR [rbp-0x38]
   140032ecb:	mov    QWORD PTR [rbp+0x30],rdi
   140032ecf:	jmp    0x140032f0f
   140032ed1:	lea    rdx,[rbp+0x30]
   140032ed5:	call   0x140032dfc
   140032eda:	mov    rsi,QWORD PTR [rax]
   140032edd:	test   rsi,rsi
   140032ee0:	je     0x140032f0b
   140032ee2:	mov    dl,0x1
   140032ee4:	mov    rcx,rsi
   140032ee7:	call   0x1400307a4
   140032eec:	mov    rax,QWORD PTR [rsi]
   140032eef:	mov    rbx,QWORD PTR [rax+0x10]
   140032ef3:	mov    rcx,rbx
   140032ef6:	call   QWORD PTR [rip+0xa82c]        # 0x14003d728
   140032efc:	mov    rcx,rsi
   140032eff:	call   rbx
   140032f01:	test   rdi,rdi
   140032f04:	je     0x140032f16
   140032f06:	and    QWORD PTR [rdi+0x10],0x0
   140032f0b:	mov    rdi,QWORD PTR [rbp+0x30]
   140032f0f:	test   rdi,rdi
   140032f12:	jne    0x140032ed1
   140032f14:	jmp    0x140032f21
   140032f16:	mov    ecx,0x80004005
   140032f1b:	call   0x1400152fc
   140032f20:	int3   
   140032f21:	test   r15d,r15d
   140032f24:	jle    0x140032f3e
   140032f26:	test   r12b,r12b
   140032f29:	je     0x140032f3e
   140032f2b:	mov    rcx,QWORD PTR [r14+0x68]
   140032f2f:	test   rcx,rcx
   140032f32:	je     0x140032f3e
   140032f34:	or     edx,0xffffffff
   140032f37:	call   QWORD PTR [rip+0xa4bb]        # 0x14003d3f8
   140032f3d:	nop
   140032f3e:	lea    rcx,[rbp-0x38]
   140032f42:	call   0x14000d8bc
   140032f47:	lea    r11,[rsp+0x60]
   140032f4c:	mov    rbx,QWORD PTR [r11+0x38]
   140032f50:	mov    rsi,QWORD PTR [r11+0x48]
   140032f54:	mov    rsp,r11
   140032f57:	pop    r15
   140032f59:	pop    r14
   140032f5b:	pop    r12
   140032f5d:	pop    rdi
   140032f5e:	pop    rbp
   140032f5f:	ret    
   140032f60:	lea    rcx,[rdx+0x28]
   140032f67:	jmp    0x14002a328
   140032f6c:	int3   
   140032f6d:	int3   
   140032f6e:	int3   
   140032f6f:	int3   
   140032f70:	int3   
   140032f71:	int3   
   140032f72:	int3   
   140032f73:	int3   
   140032f74:	test   rdx,rdx
   140032f77:	je     0x14003301d
   140032f7d:	mov    QWORD PTR [rsp+0x8],rbx
   140032f82:	mov    QWORD PTR [rsp+0x18],rbp
   140032f87:	mov    QWORD PTR [rsp+0x20],rsi
   140032f8c:	push   rdi
   140032f8d:	push   r14
   140032f8f:	push   r15
   140032f91:	sub    rsp,0x20
   140032f95:	mov    rsi,rcx
   140032f98:	mov    rdi,rdx
   140032f9b:	add    rcx,0x38
   140032f9f:	call   QWORD PTR [rip+0xa423]        # 0x14003d3c8
   140032fa5:	lea    rcx,[rdi+0x38]
   140032fa9:	call   QWORD PTR [rip+0xa419]        # 0x14003d3c8
   140032faf:	cmp    QWORD PTR [rdi+0x18],0x0
   140032fb4:	je     0x140032ff1
   140032fb6:	lea    rcx,[rdi+0x8]
   140032fba:	call   0x14000ff64
   140032fbf:	lea    rcx,[rdi+0x8]
   140032fc3:	mov    r15,QWORD PTR [rax]
   140032fc6:	mov    QWORD PTR [rsp+0x48],r15
   140032fcb:	call   0x14000ff24
   140032fd0:	test   r15,r15
   140032fd3:	je     0x140032faf
   140032fd5:	mov    rdx,QWORD PTR [rsi+0x60]
   140032fd9:	mov    rcx,r15
   140032fdc:	call   0x140030510
   140032fe1:	lea    rcx,[rsi+0x8]
   140032fe5:	lea    rdx,[rsp+0x48]
   140032fea:	call   0x14000fef0
   140032fef:	jmp    0x140032faf
   140032ff1:	lea    rcx,[rdi+0x38]
   140032ff5:	call   QWORD PTR [rip+0xa3dd]        # 0x14003d3d8
   140032ffb:	lea    rcx,[rsi+0x38]
   140032fff:	call   QWORD PTR [rip+0xa3d3]        # 0x14003d3d8
   140033005:	mov    rbx,QWORD PTR [rsp+0x40]
   14003300a:	mov    rbp,QWORD PTR [rsp+0x50]
   14003300f:	mov    rsi,QWORD PTR [rsp+0x58]
   140033014:	add    rsp,0x20
   140033018:	pop    r15
   14003301a:	pop    r14
   14003301c:	pop    rdi
   14003301d:	ret    
   14003301e:	int3   
   14003301f:	int3   
   140033020:	int3   
   140033021:	int3   
   140033022:	int3   
   140033023:	int3   
   140033024:	int3   
   140033025:	int3   
   140033026:	int3   
   140033027:	int3   
   140033028:	int3   
   140033029:	int3   
   14003302a:	int3   
   14003302b:	int3   
   14003302c:	int3   
   14003302d:	int3   
   14003302e:	int3   
   14003302f:	int3   
   140033030:	mov    rax,rsp
   140033033:	push   rdi
   140033034:	sub    rsp,0x40
   140033038:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140033040:	mov    QWORD PTR [rax+0x10],rbx
   140033044:	mov    QWORD PTR [rax+0x18],rsi
   140033048:	mov    rdi,rcx
   14003304b:	lea    rbx,[rcx+0x68]
   14003304f:	mov    QWORD PTR [rax+0x8],rbx
   140033053:	mov    rcx,rbx
   140033056:	call   QWORD PTR [rip+0xa36c]        # 0x14003d3c8
   14003305c:	nop
   14003305d:	mov    rsi,QWORD PTR [rdi+0x90]
   140033064:	xor    r9d,r9d
   140033067:	xor    r8d,r8d
   14003306a:	xor    edx,edx
   14003306c:	xor    ecx,ecx
   14003306e:	call   QWORD PTR [rip+0xa36c]        # 0x14003d3e0
   140033074:	mov    rdi,rax
   140033077:	test   rax,rax
   14003307a:	je     0x1400330a3
   14003307c:	mov    BYTE PTR [rsp+0x20],0x1
   140033081:	xor    r9d,r9d
   140033084:	mov    r8,rax
   140033087:	mov    dl,0x1
   140033089:	mov    rcx,rsi
   14003308c:	call   0x140012368
   140033091:	test   al,al
   140033093:	je     0x1400330a3
   140033095:	mov    edx,0x1f4
   14003309a:	mov    rcx,rdi
   14003309d:	call   QWORD PTR [rip+0xa355]        # 0x14003d3f8
   1400330a3:	mov    rcx,rdi
   1400330a6:	call   QWORD PTR [rip+0xa0fc]        # 0x14003d1a8
   1400330ac:	nop
   1400330ad:	mov    rcx,rbx
   1400330b0:	call   QWORD PTR [rip+0xa322]        # 0x14003d3d8
   1400330b6:	xor    eax,eax
   1400330b8:	mov    rbx,QWORD PTR [rsp+0x58]
   1400330bd:	mov    rsi,QWORD PTR [rsp+0x60]
   1400330c2:	add    rsp,0x40
   1400330c6:	pop    rdi
   1400330c7:	ret    
   1400330c8:	lea    rcx,[rdx+0x50]
   1400330cf:	jmp    0x14002a384
   1400330d4:	int3   
   1400330d5:	int3   
   1400330d6:	int3   
   1400330d7:	int3   
   1400330d8:	int3   
   1400330d9:	int3   
   1400330da:	int3   
   1400330db:	int3   
   1400330dc:	int3   
   1400330dd:	int3   
   1400330de:	int3   
   1400330df:	int3   
   1400330e0:	mov    rax,rsp
   1400330e3:	push   rdi
   1400330e4:	sub    rsp,0x30
   1400330e8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400330f0:	mov    QWORD PTR [rax+0x10],rbx
   1400330f4:	mov    QWORD PTR [rax+0x18],rsi
   1400330f8:	mov    rsi,rcx
   1400330fb:	mov    edi,0x1
   140033100:	lea    rbx,[rcx+0x60]
   140033104:	mov    QWORD PTR [rax+0x8],rbx
   140033108:	mov    rcx,rbx
   14003310b:	call   QWORD PTR [rip+0xa2b7]        # 0x14003d3c8
   140033111:	nop
   140033112:	cmp    BYTE PTR [rsi+0x94],0x0
   140033119:	je     0x140033141
   14003311b:	mov    rsi,QWORD PTR [rsi+0x88]
   140033122:	mov    edi,0x8007000e
   140033127:	mov    rcx,rsi
   14003312a:	call   0x140034a9c
   14003312f:	test   rax,rax
   140033132:	je     0x140033141
   140033134:	mov    rdx,rax
   140033137:	mov    rcx,rsi
   14003313a:	call   0x1400356a4
   14003313f:	mov    edi,eax
   140033141:	mov    rcx,rbx
   140033144:	call   QWORD PTR [rip+0xa28e]        # 0x14003d3d8
   14003314a:	mov    eax,edi
   14003314c:	mov    rbx,QWORD PTR [rsp+0x48]
   140033151:	mov    rsi,QWORD PTR [rsp+0x50]
   140033156:	add    rsp,0x30
   14003315a:	pop    rdi
   14003315b:	ret    
   14003315c:	lea    rcx,[rdx+0x40]
   140033163:	jmp    0x14002a384
   140033168:	int3   
   140033169:	int3   
   14003316a:	int3   
   14003316b:	int3   
   14003316c:	int3   
   14003316d:	int3   
   14003316e:	int3   
   14003316f:	int3   
   140033170:	mov    rax,rsp
   140033173:	push   rsi
   140033174:	push   rdi
   140033175:	push   r14
   140033177:	sub    rsp,0x40
   14003317b:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140033183:	mov    QWORD PTR [rax+0x10],rbx
   140033187:	mov    QWORD PTR [rax+0x18],rbp
   14003318b:	mov    rbp,rcx
   14003318e:	xor    esi,esi
   140033190:	cmp    QWORD PTR [rcx+0x60],rsi
   140033194:	je     0x140033276
   14003319a:	lea    r14,[rcx+0x70]
   14003319e:	mov    rdi,QWORD PTR [r14]
   1400331a1:	test   rdi,rdi
   1400331a4:	je     0x140033221
   1400331a6:	and    QWORD PTR [rax+0x8],rsi
   1400331aa:	mov    rax,QWORD PTR [rdi]
   1400331ad:	mov    rbx,QWORD PTR [rax]
   1400331b0:	mov    rcx,rbx
   1400331b3:	call   QWORD PTR [rip+0xa56f]        # 0x14003d728
   1400331b9:	lea    r8,[rsp+0x60]
   1400331be:	lea    rdx,[rip+0xc9e3]        # 0x14003fba8
   1400331c5:	mov    rcx,rdi
   1400331c8:	call   rbx
   1400331ca:	mov    esi,eax
   1400331cc:	test   eax,eax
   1400331ce:	js     0x1400331f9
   1400331d0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400331d5:	test   rbx,rbx
   1400331d8:	je     0x1400331f9
   1400331da:	mov    rax,QWORD PTR [rbx]
   1400331dd:	mov    rdi,QWORD PTR [rax+0x18]
   1400331e1:	mov    rcx,rdi
   1400331e4:	call   QWORD PTR [rip+0xa53e]        # 0x14003d728
   1400331ea:	xor    edx,edx
   1400331ec:	mov    r8d,0xc8
   1400331f2:	mov    rcx,rbx
   1400331f5:	call   rdi
   1400331f7:	mov    esi,eax
   1400331f9:	mov    rcx,r14
   1400331fc:	call   0x14000ddec
   140033201:	nop
   140033202:	mov    rbx,QWORD PTR [rsp+0x60]
   140033207:	test   rbx,rbx
   14003320a:	je     0x140033221
   14003320c:	mov    rax,QWORD PTR [rbx]
   14003320f:	mov    rdi,QWORD PTR [rax+0x10]
   140033213:	mov    rcx,rdi
   140033216:	call   QWORD PTR [rip+0xa50c]        # 0x14003d728
   14003321c:	mov    rcx,rbx
   14003321f:	call   rdi
   140033221:	mov    rdi,QWORD PTR [rbp+0x68]
   140033225:	test   rdi,rdi
   140033228:	je     0x140033276
   14003322a:	mov    rax,QWORD PTR [rdi]
   14003322d:	mov    rbx,QWORD PTR [rax+0x18]
   140033231:	mov    rcx,rbx
   140033234:	call   QWORD PTR [rip+0xa4ee]        # 0x14003d728
   14003323a:	mov    QWORD PTR [rsp+0x20],r14
   14003323f:	lea    rdx,[rip+0x102da]        # 0x140043520
   140033246:	mov    r9,rdx
   140033249:	xor    r8d,r8d
   14003324c:	mov    rcx,rdi
   14003324f:	call   rbx
   140033251:	mov    esi,eax
   140033253:	test   eax,eax
   140033255:	js     0x140033276
   140033257:	mov    rdi,QWORD PTR [r14]
   14003325a:	test   rdi,rdi
   14003325d:	je     0x140033276
   14003325f:	mov    rax,QWORD PTR [rdi]
   140033262:	mov    rbx,QWORD PTR [rax+0x38]
   140033266:	mov    rcx,rbx
   140033269:	call   QWORD PTR [rip+0xa4b9]        # 0x14003d728
   14003326f:	mov    rcx,rdi
   140033272:	call   rbx
   140033274:	mov    esi,eax
   140033276:	mov    eax,esi
   140033278:	mov    rbx,QWORD PTR [rsp+0x68]
   14003327d:	mov    rbp,QWORD PTR [rsp+0x70]
   140033282:	add    rsp,0x40
   140033286:	pop    r14
   140033288:	pop    rdi
   140033289:	pop    rsi
   14003328a:	ret    
   14003328b:	lea    rcx,[rdx+0x60]
   140033292:	jmp    0x14000f4f0
   140033297:	int3   
   140033298:	int3   
   140033299:	int3   
   14003329a:	int3   
   14003329b:	int3   
   14003329c:	int3   
   14003329d:	int3   
   14003329e:	int3   
   14003329f:	int3   
   1400332a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400332a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400332aa:	push   rdi
   1400332ab:	sub    rsp,0x20
   1400332af:	lea    rdi,[rcx+0xd0]
   1400332b6:	mov    rbx,rcx
   1400332b9:	mov    rcx,rdi
   1400332bc:	mov    rsi,rdx
   1400332bf:	call   QWORD PTR [rip+0xa103]        # 0x14003d3c8
   1400332c5:	lea    rcx,[rbx+0xc8]
   1400332cc:	mov    rax,QWORD PTR [rcx]
   1400332cf:	and    QWORD PTR [rcx],0x0
   1400332d3:	mov    QWORD PTR [rsp+0x30],rax
   1400332d8:	cmp    QWORD PTR [rcx],rsi
   1400332db:	je     0x1400332e5
   1400332dd:	mov    rdx,rsi
   1400332e0:	call   0x14000dcd0
   1400332e5:	mov    rcx,rdi
   1400332e8:	call   QWORD PTR [rip+0xa0ea]        # 0x14003d3d8
   1400332ee:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400332f5:	test   rcx,rcx
   1400332f8:	je     0x140033300
   1400332fa:	call   QWORD PTR [rip+0xa0e8]        # 0x14003d3e8
   140033300:	lea    rcx,[rsp+0x30]
   140033305:	call   0x1400013e4
   14003330a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003330f:	test   rbx,rbx
   140033312:	je     0x140033329
   140033314:	mov    rax,QWORD PTR [rbx]
   140033317:	mov    rdi,QWORD PTR [rax+0x10]
   14003331b:	mov    rcx,rdi
   14003331e:	call   QWORD PTR [rip+0xa404]        # 0x14003d728
   140033324:	mov    rcx,rbx
   140033327:	call   rdi
   140033329:	mov    rbx,QWORD PTR [rsp+0x38]
   14003332e:	mov    rsi,QWORD PTR [rsp+0x40]
   140033333:	add    rsp,0x20
   140033337:	pop    rdi
   140033338:	ret    
   140033339:	int3   
   14003333a:	int3   
   14003333b:	int3   
   14003333c:	int3   
   14003333d:	int3   
   14003333e:	int3   
   14003333f:	int3   
   140033340:	mov    rax,rsp
   140033343:	push   rsi
   140033344:	push   rdi
   140033345:	push   r14
   140033347:	sub    rsp,0x30
   14003334b:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140033353:	mov    QWORD PTR [rax+0x10],rbx
   140033357:	mov    QWORD PTR [rax+0x18],rbp
   14003335b:	mov    ebp,r8d
   14003335e:	mov    r14d,edx
   140033361:	mov    rsi,rcx
   140033364:	mov    edi,0x1
   140033369:	lea    rbx,[rcx+0x60]
   14003336d:	mov    QWORD PTR [rax+0x8],rbx
   140033371:	mov    rcx,rbx
   140033374:	call   QWORD PTR [rip+0xa04e]        # 0x14003d3c8
   14003337a:	nop
   14003337b:	cmp    BYTE PTR [rsi+0x94],0x0
   140033382:	je     0x140033398
   140033384:	mov    r8d,ebp
   140033387:	mov    edx,r14d
   14003338a:	mov    rcx,QWORD PTR [rsi+0x88]
   140033391:	call   0x1400354c0
   140033396:	mov    edi,eax
   140033398:	mov    rcx,rbx
   14003339b:	call   QWORD PTR [rip+0xa037]        # 0x14003d3d8
   1400333a1:	mov    eax,edi
   1400333a3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400333a8:	mov    rbp,QWORD PTR [rsp+0x60]
   1400333ad:	add    rsp,0x30
   1400333b1:	pop    r14
   1400333b3:	pop    rdi
   1400333b4:	pop    rsi
   1400333b5:	ret    
   1400333b6:	lea    rcx,[rdx+0x50]
   1400333bd:	jmp    0x14002a384
   1400333c2:	int3   
   1400333c3:	int3   
   1400333c4:	int3   
   1400333c5:	int3   
   1400333c6:	int3   
   1400333c7:	int3   
   1400333c8:	int3   
   1400333c9:	int3   
   1400333ca:	int3   
   1400333cb:	int3   
   1400333cc:	int3   
   1400333cd:	int3   
   1400333ce:	int3   
   1400333cf:	int3   
   1400333d0:	mov    rax,rsp
   1400333d3:	push   rdi
   1400333d4:	push   r14
   1400333d6:	push   r15
   1400333d8:	sub    rsp,0x30
   1400333dc:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400333e4:	mov    QWORD PTR [rax+0x10],rbx
   1400333e8:	mov    QWORD PTR [rax+0x18],rbp
   1400333ec:	mov    QWORD PTR [rax+0x20],rsi
   1400333f0:	mov    ebp,r9d
   1400333f3:	mov    r14d,r8d
   1400333f6:	mov    r15d,edx
   1400333f9:	mov    rsi,rcx
   1400333fc:	mov    edi,0x1
   140033401:	lea    rbx,[rcx+0x60]
   140033405:	mov    QWORD PTR [rax+0x8],rbx
   140033409:	mov    rcx,rbx
   14003340c:	call   QWORD PTR [rip+0x9fb6]        # 0x14003d3c8
   140033412:	nop
   140033413:	cmp    BYTE PTR [rsi+0x94],0x0
   14003341a:	je     0x140033433
   14003341c:	mov    r9d,ebp
   14003341f:	mov    r8d,r14d
   140033422:	mov    edx,r15d
   140033425:	mov    rcx,QWORD PTR [rsi+0x88]
   14003342c:	call   0x14003551c
   140033431:	mov    edi,eax
   140033433:	mov    rcx,rbx
   140033436:	call   QWORD PTR [rip+0x9f9c]        # 0x14003d3d8
   14003343c:	mov    eax,edi
   14003343e:	mov    rbx,QWORD PTR [rsp+0x58]
   140033443:	mov    rbp,QWORD PTR [rsp+0x60]
   140033448:	mov    rsi,QWORD PTR [rsp+0x68]
   14003344d:	add    rsp,0x30
   140033451:	pop    r15
   140033453:	pop    r14
   140033455:	pop    rdi
   140033456:	ret    
   140033457:	lea    rcx,[rdx+0x50]
   14003345e:	jmp    0x14002a384
   140033463:	int3   
   140033464:	int3   
   140033465:	int3   
   140033466:	int3   
   140033467:	int3   
   140033468:	int3   
   140033469:	int3   
   14003346a:	int3   
   14003346b:	int3   
   14003346c:	int3   
   14003346d:	int3   
   14003346e:	int3   
   14003346f:	int3   
   140033470:	mov    QWORD PTR [rsp+0x8],rbx
   140033475:	mov    QWORD PTR [rsp+0x10],rsi
   14003347a:	push   rdi
   14003347b:	sub    rsp,0x20
   14003347f:	mov    rdi,rcx
   140033482:	mov    esi,0x1
   140033487:	add    rcx,0x60
   14003348b:	call   QWORD PTR [rip+0x9f37]        # 0x14003d3c8
   140033491:	xor    eax,eax
   140033493:	lea    rcx,[rdi+0x60]
   140033497:	cmp    BYTE PTR [rdi+0x94],al
   14003349d:	cmovne esi,eax
   1400334a0:	call   QWORD PTR [rip+0x9f32]        # 0x14003d3d8
   1400334a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400334ab:	mov    eax,esi
   1400334ad:	mov    rsi,QWORD PTR [rsp+0x38]
   1400334b2:	add    rsp,0x20
   1400334b6:	pop    rdi
   1400334b7:	ret    
   1400334b8:	int3   
   1400334b9:	int3   
   1400334ba:	int3   
   1400334bb:	int3   
   1400334bc:	int3   
   1400334bd:	int3   
   1400334be:	int3   
   1400334bf:	int3   
   1400334c0:	mov    rax,rsp
   1400334c3:	push   rdi
   1400334c4:	push   r14
   1400334c6:	push   r15
   1400334c8:	sub    rsp,0x40
   1400334cc:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400334d4:	mov    QWORD PTR [rax+0x10],rbx
   1400334d8:	mov    QWORD PTR [rax+0x18],rbp
   1400334dc:	mov    QWORD PTR [rax+0x20],rsi
   1400334e0:	mov    r15,rdx
   1400334e3:	mov    rbp,rcx
   1400334e6:	xor    esi,esi
   1400334e8:	cmp    QWORD PTR [rcx+0x60],rsi
   1400334ec:	je     0x1400335d1
   1400334f2:	lea    r14,[rcx+0x70]
   1400334f6:	mov    rdi,QWORD PTR [r14]
   1400334f9:	test   rdi,rdi
   1400334fc:	je     0x140033579
   1400334fe:	and    QWORD PTR [rax+0x8],rsi
   140033502:	mov    rax,QWORD PTR [rdi]
   140033505:	mov    rbx,QWORD PTR [rax]
   140033508:	mov    rcx,rbx
   14003350b:	call   QWORD PTR [rip+0xa217]        # 0x14003d728
   140033511:	lea    r8,[rsp+0x60]
   140033516:	lea    rdx,[rip+0xc68b]        # 0x14003fba8
   14003351d:	mov    rcx,rdi
   140033520:	call   rbx
   140033522:	mov    esi,eax
   140033524:	test   eax,eax
   140033526:	js     0x140033551
   140033528:	mov    rbx,QWORD PTR [rsp+0x60]
   14003352d:	test   rbx,rbx
   140033530:	je     0x140033551
   140033532:	mov    rax,QWORD PTR [rbx]
   140033535:	mov    rdi,QWORD PTR [rax+0x18]
   140033539:	mov    rcx,rdi
   14003353c:	call   QWORD PTR [rip+0xa1e6]        # 0x14003d728
   140033542:	xor    edx,edx
   140033544:	mov    r8d,0xc8
   14003354a:	mov    rcx,rbx
   14003354d:	call   rdi
   14003354f:	mov    esi,eax
   140033551:	mov    rcx,r14
   140033554:	call   0x14000ddec
   140033559:	nop
   14003355a:	mov    rbx,QWORD PTR [rsp+0x60]
   14003355f:	test   rbx,rbx
   140033562:	je     0x140033579
   140033564:	mov    rax,QWORD PTR [rbx]
   140033567:	mov    rdi,QWORD PTR [rax+0x10]
   14003356b:	mov    rcx,rdi
   14003356e:	call   QWORD PTR [rip+0xa1b4]        # 0x14003d728
   140033574:	mov    rcx,rbx
   140033577:	call   rdi
   140033579:	mov    rdi,QWORD PTR [rbp+0x68]
   14003357d:	test   rdi,rdi
   140033580:	je     0x1400335d1
   140033582:	mov    rax,QWORD PTR [rdi]
   140033585:	mov    rbx,QWORD PTR [rax+0x18]
   140033589:	mov    rcx,rbx
   14003358c:	call   QWORD PTR [rip+0xa196]        # 0x14003d728
   140033592:	mov    QWORD PTR [rsp+0x20],r14
   140033597:	lea    rdx,[rip+0xff82]        # 0x140043520
   14003359e:	mov    r9,rdx
   1400335a1:	xor    r8d,r8d
   1400335a4:	mov    rcx,rdi
   1400335a7:	call   rbx
   1400335a9:	mov    esi,eax
   1400335ab:	test   eax,eax
   1400335ad:	js     0x1400335d1
   1400335af:	mov    rdi,QWORD PTR [r14]
   1400335b2:	test   rdi,rdi
   1400335b5:	je     0x1400335d1
   1400335b7:	mov    rax,QWORD PTR [rdi]
   1400335ba:	mov    rbx,QWORD PTR [rax+0x18]
   1400335be:	mov    rcx,rbx
   1400335c1:	call   QWORD PTR [rip+0xa161]        # 0x14003d728
   1400335c7:	mov    rdx,r15
   1400335ca:	mov    rcx,rdi
   1400335cd:	call   rbx
   1400335cf:	mov    esi,eax
   1400335d1:	mov    eax,esi
   1400335d3:	mov    rbx,QWORD PTR [rsp+0x68]
   1400335d8:	mov    rbp,QWORD PTR [rsp+0x70]
   1400335dd:	mov    rsi,QWORD PTR [rsp+0x78]
   1400335e2:	add    rsp,0x40
   1400335e6:	pop    r15
   1400335e8:	pop    r14
   1400335ea:	pop    rdi
   1400335eb:	ret    
   1400335ec:	lea    rcx,[rdx+0x60]
   1400335f3:	jmp    0x14000f4f0
   1400335f8:	int3   
   1400335f9:	int3   
   1400335fa:	int3   
   1400335fb:	int3   
   1400335fc:	int3   
   1400335fd:	int3   
   1400335fe:	int3   
   1400335ff:	int3   
   140033600:	mov    rax,rsp
   140033603:	push   rdi
   140033604:	sub    rsp,0x30
   140033608:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140033610:	mov    QWORD PTR [rax+0x10],rbx
   140033614:	mov    QWORD PTR [rax+0x18],rsi
   140033618:	movzx  edi,dx
   14003361b:	mov    rsi,rcx
   14003361e:	lea    rbx,[rcx+0x70]
   140033622:	mov    QWORD PTR [rax+0x8],rbx
   140033626:	mov    rcx,rbx
   140033629:	call   QWORD PTR [rip+0x9d99]        # 0x14003d3c8
   14003362f:	nop
   140033630:	cmp    di,0xffff
   140033634:	sete   al
   140033637:	mov    BYTE PTR [rsi+0xa4],al
   14003363d:	lea    rdx,[rsi-0x8]
   140033641:	mov    rcx,QWORD PTR [rsi+0x98]
   140033648:	test   al,al
   14003364a:	je     0x140033653
   14003364c:	call   0x1400352f0
   140033651:	jmp    0x140033659
   140033653:	call   0x14003536c
   140033658:	nop
   140033659:	mov    rcx,rbx
   14003365c:	call   QWORD PTR [rip+0x9d76]        # 0x14003d3d8
   140033662:	xor    eax,eax
   140033664:	mov    rbx,QWORD PTR [rsp+0x48]
   140033669:	mov    rsi,QWORD PTR [rsp+0x50]
   14003366e:	add    rsp,0x30
   140033672:	pop    rdi
   140033673:	ret    
   140033674:	lea    rcx,[rdx+0x40]
   14003367b:	jmp    0x14002a384
   140033680:	int3   
   140033681:	int3   
   140033682:	int3   
   140033683:	int3   
   140033684:	int3   
   140033685:	int3   
   140033686:	int3   
   140033687:	int3   
   140033688:	mov    rax,rsp
   14003368b:	push   rsi
   14003368c:	push   rdi
   14003368d:	push   r14
   14003368f:	sub    rsp,0x40
   140033693:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14003369b:	mov    QWORD PTR [rax+0x10],rbx
   14003369f:	mov    QWORD PTR [rax+0x18],rbp
   1400336a3:	mov    rbp,rcx
   1400336a6:	xor    esi,esi
   1400336a8:	cmp    QWORD PTR [rcx+0x60],rsi
   1400336ac:	je     0x14003378e
   1400336b2:	lea    r14,[rcx+0x70]
   1400336b6:	mov    rdi,QWORD PTR [r14]
   1400336b9:	test   rdi,rdi
   1400336bc:	je     0x140033739
   1400336be:	and    QWORD PTR [rax+0x8],rsi
   1400336c2:	mov    rax,QWORD PTR [rdi]
   1400336c5:	mov    rbx,QWORD PTR [rax]
   1400336c8:	mov    rcx,rbx
   1400336cb:	call   QWORD PTR [rip+0xa057]        # 0x14003d728
   1400336d1:	lea    r8,[rsp+0x60]
   1400336d6:	lea    rdx,[rip+0xc4cb]        # 0x14003fba8
   1400336dd:	mov    rcx,rdi
   1400336e0:	call   rbx
   1400336e2:	mov    esi,eax
   1400336e4:	test   eax,eax
   1400336e6:	js     0x140033711
   1400336e8:	mov    rbx,QWORD PTR [rsp+0x60]
   1400336ed:	test   rbx,rbx
   1400336f0:	je     0x140033711
   1400336f2:	mov    rax,QWORD PTR [rbx]
   1400336f5:	mov    rdi,QWORD PTR [rax+0x18]
   1400336f9:	mov    rcx,rdi
   1400336fc:	call   QWORD PTR [rip+0xa026]        # 0x14003d728
   140033702:	xor    edx,edx
   140033704:	mov    r8d,0xc8
   14003370a:	mov    rcx,rbx
   14003370d:	call   rdi
   14003370f:	mov    esi,eax
   140033711:	mov    rcx,r14
   140033714:	call   0x14000ddec
   140033719:	nop
   14003371a:	mov    rbx,QWORD PTR [rsp+0x60]
   14003371f:	test   rbx,rbx
   140033722:	je     0x140033739
   140033724:	mov    rax,QWORD PTR [rbx]
   140033727:	mov    rdi,QWORD PTR [rax+0x10]
   14003372b:	mov    rcx,rdi
   14003372e:	call   QWORD PTR [rip+0x9ff4]        # 0x14003d728
   140033734:	mov    rcx,rbx
   140033737:	call   rdi
   140033739:	mov    rdi,QWORD PTR [rbp+0x68]
   14003373d:	test   rdi,rdi
   140033740:	je     0x14003378e
   140033742:	mov    rax,QWORD PTR [rdi]
   140033745:	mov    rbx,QWORD PTR [rax+0x18]
   140033749:	mov    rcx,rbx
   14003374c:	call   QWORD PTR [rip+0x9fd6]        # 0x14003d728
   140033752:	mov    QWORD PTR [rsp+0x20],r14
   140033757:	lea    rdx,[rip+0xfdc2]        # 0x140043520
   14003375e:	mov    r9,rdx
   140033761:	xor    r8d,r8d
   140033764:	mov    rcx,rdi
   140033767:	call   rbx
   140033769:	mov    esi,eax
   14003376b:	test   eax,eax
   14003376d:	js     0x14003378e
   14003376f:	mov    rdi,QWORD PTR [r14]
   140033772:	test   rdi,rdi
   140033775:	je     0x14003378e
   140033777:	mov    rax,QWORD PTR [rdi]
   14003377a:	mov    rbx,QWORD PTR [rax+0x28]
   14003377e:	mov    rcx,rbx
   140033781:	call   QWORD PTR [rip+0x9fa1]        # 0x14003d728
   140033787:	mov    rcx,rdi
   14003378a:	call   rbx
   14003378c:	mov    esi,eax
   14003378e:	mov    eax,esi
   140033790:	mov    rbx,QWORD PTR [rsp+0x68]
   140033795:	mov    rbp,QWORD PTR [rsp+0x70]
   14003379a:	add    rsp,0x40
   14003379e:	pop    r14
   1400337a0:	pop    rdi
   1400337a1:	pop    rsi
   1400337a2:	ret    
   1400337a3:	lea    rcx,[rdx+0x60]
   1400337aa:	jmp    0x14000f4f0
   1400337af:	int3   
   1400337b0:	int3   
   1400337b1:	int3   
   1400337b2:	int3   
   1400337b3:	int3   
   1400337b4:	int3   
   1400337b5:	int3   
   1400337b6:	int3   
   1400337b7:	int3   
   1400337b8:	int3   
   1400337b9:	int3   
   1400337ba:	int3   
   1400337bb:	int3   
   1400337bc:	int3   
   1400337bd:	int3   
   1400337be:	int3   
   1400337bf:	int3   
   1400337c0:	mov    rax,rsp
   1400337c3:	push   rsi
   1400337c4:	push   rdi
   1400337c5:	push   r14
   1400337c7:	sub    rsp,0x30
   1400337cb:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400337d3:	mov    QWORD PTR [rax+0x10],rbx
   1400337d7:	mov    QWORD PTR [rax+0x18],rbp
   1400337db:	mov    edi,r8d
   1400337de:	mov    r14,rdx
   1400337e1:	mov    rsi,rcx
   1400337e4:	mov    ebp,0x1
   1400337e9:	lea    rbx,[rcx+0x78]
   1400337ed:	mov    QWORD PTR [rax+0x8],rbx
   1400337f1:	mov    rcx,rbx
   1400337f4:	call   QWORD PTR [rip+0x9bce]        # 0x14003d3c8
   1400337fa:	nop
   1400337fb:	mov    eax,DWORD PTR [rsi+0xa8]
   140033801:	cmp    eax,edi
   140033803:	jb     0x140033814
   140033805:	cmp    edi,0x1f4
   14003380b:	jae    0x14003383d
   14003380d:	cmp    eax,0xfffffe0b
   140033812:	jbe    0x14003383d
   140033814:	mov    DWORD PTR [rsi+0xa8],edi
   14003381a:	cmp    BYTE PTR [rsi+0xac],0x0
   140033821:	je     0x14003383d
   140033823:	mov    rax,QWORD PTR [rsi]
   140033826:	mov    rdi,QWORD PTR [rax+0x20]
   14003382a:	mov    rcx,rdi
   14003382d:	call   QWORD PTR [rip+0x9ef5]        # 0x14003d728
   140033833:	mov    rdx,r14
   140033836:	mov    rcx,rsi
   140033839:	call   rdi
   14003383b:	mov    ebp,eax
   14003383d:	mov    rcx,rbx
   140033840:	call   QWORD PTR [rip+0x9b92]        # 0x14003d3d8
   140033846:	mov    eax,ebp
   140033848:	mov    rbx,QWORD PTR [rsp+0x58]
   14003384d:	mov    rbp,QWORD PTR [rsp+0x60]
   140033852:	add    rsp,0x30
   140033856:	pop    r14
   140033858:	pop    rdi
   140033859:	pop    rsi
   14003385a:	ret    
   14003385b:	lea    rcx,[rdx+0x50]
   140033862:	jmp    0x14002a384
   140033867:	int3   
   140033868:	int3   
   140033869:	int3   
   14003386a:	int3   
   14003386b:	int3   
   14003386c:	int3   
   14003386d:	int3   
   14003386e:	int3   
   14003386f:	int3   
   140033870:	mov    r11,rsp
   140033873:	push   rsi
   140033874:	push   rdi
   140033875:	push   r14
   140033877:	sub    rsp,0x40
   14003387b:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   140033883:	mov    QWORD PTR [r11+0x8],rbx
   140033887:	mov    QWORD PTR [r11+0x18],rbp
   14003388b:	mov    r14,rdx
   14003388e:	mov    rbp,rcx
   140033891:	xor    esi,esi
   140033893:	test   rdx,rdx
   140033896:	je     0x140033926
   14003389c:	and    QWORD PTR [r11+0x10],rsi
   1400338a0:	lea    rax,[r11+0x10]
   1400338a4:	mov    QWORD PTR [r11-0x38],rax
   1400338a8:	lea    r9,[rip+0xc359]        # 0x14003fc08
   1400338af:	xor    edx,edx
   1400338b1:	lea    r8d,[rsi+0x7]
   1400338b5:	lea    rcx,[rip+0xc2b4]        # 0x14003fb70
   1400338bc:	call   QWORD PTR [rip+0x1f836]        # 0x1400530f8
   1400338c2:	mov    esi,eax
   1400338c4:	mov    rbx,QWORD PTR [rsp+0x68]
   1400338c9:	test   rbx,rbx
   1400338cc:	je     0x1400338ed
   1400338ce:	mov    rax,QWORD PTR [rbx]
   1400338d1:	mov    rdi,QWORD PTR [rax+0x28]
   1400338d5:	mov    rcx,rdi
   1400338d8:	call   QWORD PTR [rip+0x9e4a]        # 0x14003d728
   1400338de:	mov    rdx,r14
   1400338e1:	mov    rcx,rbx
   1400338e4:	call   rdi
   1400338e6:	mov    esi,eax
   1400338e8:	mov    rbx,QWORD PTR [rsp+0x68]
   1400338ed:	test   esi,esi
   1400338ef:	js     0x14003390a
   1400338f1:	test   rbx,rbx
   1400338f4:	je     0x14003390a
   1400338f6:	mov    rdx,rbx
   1400338f9:	mov    rcx,QWORD PTR [rbp+0xa0]
   140033900:	call   0x140035758
   140033905:	mov    rbx,QWORD PTR [rsp+0x68]
   14003390a:	test   rbx,rbx
   14003390d:	je     0x140033932
   14003390f:	mov    rax,QWORD PTR [rbx]
   140033912:	mov    rdi,QWORD PTR [rax+0x10]
   140033916:	mov    rcx,rdi
   140033919:	call   QWORD PTR [rip+0x9e09]        # 0x14003d728
   14003391f:	mov    rcx,rbx
   140033922:	call   rdi
   140033924:	jmp    0x140033932
   140033926:	mov    rcx,QWORD PTR [rcx+0xa0]
   14003392d:	call   0x140035758
   140033932:	mov    eax,esi
   140033934:	mov    rbx,QWORD PTR [rsp+0x60]
   140033939:	mov    rbp,QWORD PTR [rsp+0x70]
   14003393e:	add    rsp,0x40
   140033942:	pop    r14
   140033944:	pop    rdi
   140033945:	pop    rsi
   140033946:	ret    
   140033947:	lea    rcx,[rdx+0x68]
   14003394e:	jmp    0x14000f4f0
   140033953:	int3   
   140033954:	int3   
   140033955:	int3   
   140033956:	int3   
   140033957:	int3   
   140033958:	int3   
   140033959:	int3   
   14003395a:	int3   
   14003395b:	int3   
   14003395c:	mov    rax,rsp
   14003395f:	mov    QWORD PTR [rax+0x8],rcx
   140033963:	push   rdi
   140033964:	sub    rsp,0x30
   140033968:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140033970:	mov    QWORD PTR [rax+0x18],rbx
   140033974:	mov    QWORD PTR [rax+0x20],rsi
   140033978:	mov    rdi,rdx
   14003397b:	mov    rsi,rcx
   14003397e:	and    DWORD PTR [rcx+0x8],0x0
   140033982:	lea    rax,[rip+0xf637]        # 0x140042fc0
   140033989:	mov    QWORD PTR [rcx],rax
   14003398c:	lea    rbx,[rcx+0x18]
   140033990:	mov    QWORD PTR [rsp+0x48],rbx
   140033995:	mov    rcx,rbx
   140033998:	call   0x1400137d8
   14003399d:	lea    rax,[rip+0xf5cc]        # 0x140042f70
   1400339a4:	mov    QWORD PTR [rbx],rax
   1400339a7:	lea    rax,[rip+0xf58a]        # 0x140042f38
   1400339ae:	mov    QWORD PTR [rbx+0x8],rax
   1400339b2:	lea    rax,[rip+0xf55f]        # 0x140042f18
   1400339b9:	mov    QWORD PTR [rbx+0x10],rax
   1400339bd:	lea    rax,[rip+0xf524]        # 0x140042ee8
   1400339c4:	mov    QWORD PTR [rbx+0x18],rax
   1400339c8:	lea    rax,[rip+0xf4e1]        # 0x140042eb0
   1400339cf:	mov    QWORD PTR [rbx+0x20],rax
   1400339d3:	mov    QWORD PTR [rbx+0x28],rdi
   1400339d7:	mov    rdi,QWORD PTR [rip+0x1b182]        # 0x14004eb60
   1400339de:	mov    rax,QWORD PTR [rdi]
   1400339e1:	mov    rbx,QWORD PTR [rax+0x8]
   1400339e5:	mov    rcx,rbx
   1400339e8:	call   QWORD PTR [rip+0x9d3a]        # 0x14003d728
   1400339ee:	mov    rcx,rdi
   1400339f1:	call   rbx
   1400339f3:	nop
   1400339f4:	mov    rax,rsi
   1400339f7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400339fc:	mov    rsi,QWORD PTR [rsp+0x58]
   140033a01:	add    rsp,0x30
   140033a05:	pop    rdi
   140033a06:	ret    
   140033a07:	mov    rcx,QWORD PTR [rdx+0x40]
   140033a0e:	add    rcx,0x8
   140033a12:	jmp    0x14000dff0
   140033a17:	mov    rcx,QWORD PTR [rdx+0x40]
   140033a1e:	add    rcx,0x18
   140033a22:	jmp    0x140033ab4
   140033a27:	int3   
   140033a28:	int3   
   140033a29:	int3   
   140033a2a:	int3   
   140033a2b:	int3   
   140033a2c:	int3   
   140033a2d:	int3   
   140033a2e:	int3   
   140033a2f:	int3   
   140033a30:	mov    rax,rsp
   140033a33:	mov    QWORD PTR [rax+0x8],rcx
   140033a37:	push   rdi
   140033a38:	sub    rsp,0x30
   140033a3c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140033a44:	mov    QWORD PTR [rax+0x10],rbx
   140033a48:	mov    QWORD PTR [rax+0x18],rsi
   140033a4c:	lea    rax,[rip+0xf56d]        # 0x140042fc0
   140033a53:	mov    QWORD PTR [rcx],rax
   140033a56:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140033a5d:	lea    rsi,[rcx+0x18]
   140033a61:	mov    rcx,rsi
   140033a64:	call   0x140034040
   140033a69:	mov    rdi,QWORD PTR [rip+0x1b0f0]        # 0x14004eb60
   140033a70:	mov    rax,QWORD PTR [rdi]
   140033a73:	mov    rbx,QWORD PTR [rax+0x10]
   140033a77:	mov    rcx,rbx
   140033a7a:	call   QWORD PTR [rip+0x9ca8]        # 0x14003d728
   140033a80:	mov    rcx,rdi
   140033a83:	call   rbx
   140033a85:	nop
   140033a86:	mov    rcx,rsi
   140033a89:	mov    rbx,QWORD PTR [rsp+0x48]
   140033a8e:	mov    rsi,QWORD PTR [rsp+0x50]
   140033a93:	add    rsp,0x30
   140033a97:	pop    rdi
   140033a98:	jmp    0x140033b68
   140033a9d:	mov    rcx,QWORD PTR [rdx+0x40]
   140033aa4:	add    rcx,0x18
   140033aa8:	jmp    0x140033ab4
   140033aad:	int3   
   140033aae:	int3   
   140033aaf:	int3   
   140033ab0:	int3   
   140033ab1:	int3   
   140033ab2:	int3   
   140033ab3:	int3   
   140033ab4:	jmp    0x140033b68
   140033ab9:	int3   
   140033aba:	int3   
   140033abb:	int3   
   140033abc:	int3   
   140033abd:	int3   
   140033abe:	int3   
   140033abf:	int3   
   140033ac0:	mov    rax,rsp
   140033ac3:	mov    QWORD PTR [rax+0x8],rcx
   140033ac7:	push   rdi
   140033ac8:	sub    rsp,0x30
   140033acc:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140033ad4:	mov    QWORD PTR [rax+0x10],rbx
   140033ad8:	mov    QWORD PTR [rax+0x18],rsi
   140033adc:	mov    rsi,rcx
   140033adf:	lea    rax,[rip+0xbdaa]        # 0x14003f890
   140033ae6:	mov    QWORD PTR [rcx],rax
   140033ae9:	lea    rax,[rip+0xbd68]        # 0x14003f858
   140033af0:	mov    QWORD PTR [rcx+0x8],rax
   140033af4:	lea    rax,[rip+0xbd3d]        # 0x14003f838
   140033afb:	mov    QWORD PTR [rcx+0x10],rax
   140033aff:	lea    rax,[rip+0xbd02]        # 0x14003f808
   140033b06:	mov    QWORD PTR [rcx+0x18],rax
   140033b0a:	lea    rax,[rip+0xbcbf]        # 0x14003f7d0
   140033b11:	mov    QWORD PTR [rcx+0x20],rax
   140033b15:	mov    DWORD PTR [rcx+0x28],0xc0000001
   140033b1c:	call   0x140034040
   140033b21:	mov    rdi,QWORD PTR [rip+0x1b038]        # 0x14004eb60
   140033b28:	mov    rax,QWORD PTR [rdi]
   140033b2b:	mov    rbx,QWORD PTR [rax+0x10]
   140033b2f:	mov    rcx,rbx
   140033b32:	call   QWORD PTR [rip+0x9bf0]        # 0x14003d728
   140033b38:	mov    rcx,rdi
   140033b3b:	call   rbx
   140033b3d:	nop
   140033b3e:	mov    rcx,rsi
   140033b41:	mov    rbx,QWORD PTR [rsp+0x48]
   140033b46:	mov    rsi,QWORD PTR [rsp+0x50]
   140033b4b:	add    rsp,0x30
   140033b4f:	pop    rdi
   140033b50:	jmp    0x140033b68
   140033b55:	mov    rcx,QWORD PTR [rdx+0x40]
   140033b5c:	jmp    0x140033b68
   140033b61:	int3   
   140033b62:	int3   
   140033b63:	int3   
   140033b64:	int3   
   140033b65:	int3   
   140033b66:	int3   
   140033b67:	int3   
   140033b68:	mov    QWORD PTR [rsp+0x8],rbx
   140033b6d:	mov    QWORD PTR [rsp+0x10],rsi
   140033b72:	push   rdi
   140033b73:	sub    rsp,0x20
   140033b77:	mov    rdi,rcx
   140033b7a:	add    rcx,0xa8
   140033b81:	call   QWORD PTR [rip+0x9831]        # 0x14003d3b8
   140033b87:	mov    rsi,QWORD PTR [rdi+0xa0]
   140033b8e:	test   rsi,rsi
   140033b91:	je     0x140033ba8
   140033b93:	mov    rax,QWORD PTR [rsi]
   140033b96:	mov    rbx,QWORD PTR [rax+0x10]
   140033b9a:	mov    rcx,rbx
   140033b9d:	call   QWORD PTR [rip+0x9b85]        # 0x14003d728
   140033ba3:	mov    rcx,rsi
   140033ba6:	call   rbx
   140033ba8:	mov    rsi,QWORD PTR [rdi+0x98]
   140033baf:	test   rsi,rsi
   140033bb2:	je     0x140033bc9
   140033bb4:	mov    rax,QWORD PTR [rsi]
   140033bb7:	mov    rbx,QWORD PTR [rax+0x10]
   140033bbb:	mov    rcx,rbx
   140033bbe:	call   QWORD PTR [rip+0x9b64]        # 0x14003d728
   140033bc4:	mov    rcx,rsi
   140033bc7:	call   rbx
   140033bc9:	mov    rsi,QWORD PTR [rdi+0x90]
   140033bd0:	test   rsi,rsi
   140033bd3:	je     0x140033bea
   140033bd5:	mov    rax,QWORD PTR [rsi]
   140033bd8:	mov    rbx,QWORD PTR [rax+0x10]
   140033bdc:	mov    rcx,rbx
   140033bdf:	call   QWORD PTR [rip+0x9b43]        # 0x14003d728
   140033be5:	mov    rcx,rsi
   140033be8:	call   rbx
   140033bea:	mov    rsi,QWORD PTR [rdi+0x88]
   140033bf1:	test   rsi,rsi
   140033bf4:	je     0x140033c0b
   140033bf6:	mov    rax,QWORD PTR [rsi]
   140033bf9:	mov    rbx,QWORD PTR [rax+0x10]
   140033bfd:	mov    rcx,rbx
   140033c00:	call   QWORD PTR [rip+0x9b22]        # 0x14003d728
   140033c06:	mov    rcx,rsi
   140033c09:	call   rbx
   140033c0b:	lea    rcx,[rdi+0x60]
   140033c0f:	call   QWORD PTR [rip+0x97a3]        # 0x14003d3b8
   140033c15:	lea    rcx,[rdi+0x30]
   140033c19:	cmp    BYTE PTR [rcx+0x28],0x0
   140033c1d:	je     0x140033c29
   140033c1f:	mov    BYTE PTR [rcx+0x28],0x0
   140033c23:	call   QWORD PTR [rip+0x978f]        # 0x14003d3b8
   140033c29:	mov    rbx,QWORD PTR [rsp+0x30]
   140033c2e:	mov    rsi,QWORD PTR [rsp+0x38]
   140033c33:	add    rsp,0x20
   140033c37:	pop    rdi
   140033c38:	ret    
   140033c39:	int3   
   140033c3a:	int3   
   140033c3b:	int3   
   140033c3c:	int3   
   140033c3d:	int3   
   140033c3e:	int3   
   140033c3f:	int3   
   140033c40:	mov    QWORD PTR [rsp+0x8],rbx
   140033c45:	push   rdi
   140033c46:	sub    rsp,0x20
   140033c4a:	mov    ebx,edx
   140033c4c:	mov    rdi,rcx
   140033c4f:	call   0x140033a30
   140033c54:	test   bl,0x1
   140033c57:	je     0x140033c61
   140033c59:	mov    rcx,rdi
   140033c5c:	call   0x140013de0
   140033c61:	mov    rax,rdi
   140033c64:	mov    rbx,QWORD PTR [rsp+0x30]
   140033c69:	add    rsp,0x20
   140033c6d:	pop    rdi
   140033c6e:	ret    
   140033c6f:	int3   
   140033c70:	int3   
   140033c71:	int3   
   140033c72:	int3   
   140033c73:	int3   
   140033c74:	int3   
   140033c75:	int3   
   140033c76:	int3   
   140033c77:	int3   
   140033c78:	int3   
   140033c79:	int3   
   140033c7a:	int3   
   140033c7b:	int3   
   140033c7c:	int3   
   140033c7d:	int3   
   140033c7e:	int3   
   140033c7f:	int3   
   140033c80:	mov    QWORD PTR [rsp+0x8],rbx
   140033c85:	push   rdi
   140033c86:	sub    rsp,0x20
   140033c8a:	mov    ebx,edx
   140033c8c:	mov    rdi,rcx
   140033c8f:	call   0x140033ac0
   140033c94:	test   bl,0x1
   140033c97:	je     0x140033ca1
   140033c99:	mov    rcx,rdi
   140033c9c:	call   0x140013de0
   140033ca1:	mov    rax,rdi
   140033ca4:	mov    rbx,QWORD PTR [rsp+0x30]
   140033ca9:	add    rsp,0x20
   140033cad:	pop    rdi
   140033cae:	ret    
   140033caf:	int3   
   140033cb0:	int3   
   140033cb1:	int3   
   140033cb2:	int3   
   140033cb3:	int3   
   140033cb4:	int3   
   140033cb5:	int3   
   140033cb6:	int3   
   140033cb7:	int3   
   140033cb8:	rex push rdi
   140033cba:	sub    rsp,0x30
   140033cbe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140033cc7:	mov    QWORD PTR [rsp+0x48],rbx
   140033ccc:	mov    QWORD PTR [rsp+0x50],rsi
   140033cd1:	mov    rdi,rcx
   140033cd4:	cmp    BYTE PTR [rcx+0xd8],0x0
   140033cdb:	jne    0x140033d48
   140033cdd:	add    rcx,0x60
   140033ce1:	call   QWORD PTR [rip+0x96e1]        # 0x14003d3c8
   140033ce7:	xor    ebx,ebx
   140033ce9:	mov    QWORD PTR [rsp+0x40],rbx
   140033cee:	mov    rdx,QWORD PTR [rdi+0x98]
   140033cf5:	test   rdx,rdx
   140033cf8:	je     0x140033d09
   140033cfa:	lea    rcx,[rsp+0x40]
   140033cff:	call   0x14000dcd0
   140033d04:	mov    rbx,QWORD PTR [rsp+0x40]
   140033d09:	lea    rcx,[rdi+0x60]
   140033d0d:	call   QWORD PTR [rip+0x96c5]        # 0x14003d3d8
   140033d13:	test   rbx,rbx
   140033d16:	je     0x140033d2e
   140033d18:	mov    rax,QWORD PTR [rbx]
   140033d1b:	mov    rdi,QWORD PTR [rax+0x18]
   140033d1f:	mov    rcx,rdi
   140033d22:	call   QWORD PTR [rip+0x9a00]        # 0x14003d728
   140033d28:	mov    rcx,rbx
   140033d2b:	call   rdi
   140033d2d:	nop
   140033d2e:	test   rbx,rbx
   140033d31:	je     0x140033d48
   140033d33:	mov    rax,QWORD PTR [rbx]
   140033d36:	mov    rdi,QWORD PTR [rax+0x10]
   140033d3a:	mov    rcx,rdi
   140033d3d:	call   QWORD PTR [rip+0x99e5]        # 0x14003d728
   140033d43:	mov    rcx,rbx
   140033d46:	call   rdi
   140033d48:	mov    rbx,QWORD PTR [rsp+0x48]
   140033d4d:	mov    rsi,QWORD PTR [rsp+0x50]
   140033d52:	add    rsp,0x30
   140033d56:	pop    rdi
   140033d57:	ret    
   140033d58:	lea    rcx,[rdx+0x40]
   140033d5f:	jmp    0x14000f4f0
   140033d64:	int3   
   140033d65:	int3   
   140033d66:	int3   
   140033d67:	int3   
   140033d68:	int3   
   140033d69:	int3   
   140033d6a:	int3   
   140033d6b:	int3   
   140033d6c:	int3   
   140033d6d:	int3   
   140033d6e:	int3   
   140033d6f:	int3   
   140033d70:	mov    rax,rsp
   140033d73:	push   rdi
   140033d74:	sub    rsp,0x30
   140033d78:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140033d80:	mov    QWORD PTR [rax+0x10],rbx
   140033d84:	mov    QWORD PTR [rax+0x18],rbp
   140033d88:	mov    QWORD PTR [rax+0x20],rsi
   140033d8c:	mov    rdi,rcx
   140033d8f:	mov    esi,0x1
   140033d94:	cmp    BYTE PTR [rcx+0xb8],0x0
   140033d9b:	jne    0x140033e09
   140033d9d:	add    rcx,0x40
   140033da1:	call   QWORD PTR [rip+0x9621]        # 0x14003d3c8
   140033da7:	xor    ebx,ebx
   140033da9:	mov    QWORD PTR [rsp+0x40],rbx
   140033dae:	mov    rdx,QWORD PTR [rdi+0x80]
   140033db5:	test   rdx,rdx
   140033db8:	je     0x140033dc9
   140033dba:	lea    rcx,[rsp+0x40]
   140033dbf:	call   0x14000dcd0
   140033dc4:	mov    rbx,QWORD PTR [rsp+0x40]
   140033dc9:	lea    rcx,[rdi+0x40]
   140033dcd:	call   QWORD PTR [rip+0x9605]        # 0x14003d3d8
   140033dd3:	test   rbx,rbx
   140033dd6:	je     0x140033def
   140033dd8:	mov    rax,QWORD PTR [rbx]
   140033ddb:	mov    rdi,QWORD PTR [rax+0x18]
   140033ddf:	mov    rcx,rdi
   140033de2:	call   QWORD PTR [rip+0x9940]        # 0x14003d728
   140033de8:	mov    rcx,rbx
   140033deb:	call   rdi
   140033ded:	mov    esi,eax
   140033def:	test   rbx,rbx
   140033df2:	je     0x140033e09
   140033df4:	mov    rcx,QWORD PTR [rbx]
   140033df7:	mov    rdi,QWORD PTR [rcx+0x10]
   140033dfb:	mov    rcx,rdi
   140033dfe:	call   QWORD PTR [rip+0x9924]        # 0x14003d728
   140033e04:	mov    rcx,rbx
   140033e07:	call   rdi
   140033e09:	mov    eax,esi
   140033e0b:	mov    rbx,QWORD PTR [rsp+0x48]
   140033e10:	mov    rbp,QWORD PTR [rsp+0x50]
   140033e15:	mov    rsi,QWORD PTR [rsp+0x58]
   140033e1a:	add    rsp,0x30
   140033e1e:	pop    rdi
   140033e1f:	ret    
   140033e20:	lea    rcx,[rdx+0x40]
   140033e27:	jmp    0x14000f4f0
   140033e2c:	int3   
   140033e2d:	int3   
   140033e2e:	int3   
   140033e2f:	int3   
   140033e30:	int3   
   140033e31:	int3   
   140033e32:	int3   
   140033e33:	int3   
   140033e34:	int3   
   140033e35:	int3   
   140033e36:	int3   
   140033e37:	int3   
   140033e38:	int3   
   140033e39:	int3   
   140033e3a:	int3   
   140033e3b:	int3   
   140033e3c:	int3   
   140033e3d:	int3   
   140033e3e:	int3   
   140033e3f:	int3   
   140033e40:	mov    rax,rsp
   140033e43:	push   rdi
   140033e44:	sub    rsp,0x30
   140033e48:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140033e50:	mov    QWORD PTR [rax+0x10],rbx
   140033e54:	mov    QWORD PTR [rax+0x18],rbp
   140033e58:	mov    QWORD PTR [rax+0x20],rsi
   140033e5c:	mov    rdi,rcx
   140033e5f:	mov    esi,0x1
   140033e64:	cmp    BYTE PTR [rcx+0xd8],0x0
   140033e6b:	jne    0x140033ed9
   140033e6d:	add    rcx,0x60
   140033e71:	call   QWORD PTR [rip+0x9551]        # 0x14003d3c8
   140033e77:	xor    ebx,ebx
   140033e79:	mov    QWORD PTR [rsp+0x40],rbx
   140033e7e:	mov    rdx,QWORD PTR [rdi+0x88]
   140033e85:	test   rdx,rdx
   140033e88:	je     0x140033e99
   140033e8a:	lea    rcx,[rsp+0x40]
   140033e8f:	call   0x14000dcd0
   140033e94:	mov    rbx,QWORD PTR [rsp+0x40]
   140033e99:	lea    rcx,[rdi+0x60]
   140033e9d:	call   QWORD PTR [rip+0x9535]        # 0x14003d3d8
   140033ea3:	test   rbx,rbx
   140033ea6:	je     0x140033ebf
   140033ea8:	mov    rax,QWORD PTR [rbx]
   140033eab:	mov    rdi,QWORD PTR [rax+0x28]
   140033eaf:	mov    rcx,rdi
   140033eb2:	call   QWORD PTR [rip+0x9870]        # 0x14003d728
   140033eb8:	mov    rcx,rbx
   140033ebb:	call   rdi
   140033ebd:	mov    esi,eax
   140033ebf:	test   rbx,rbx
   140033ec2:	je     0x140033ed9
   140033ec4:	mov    rcx,QWORD PTR [rbx]
   140033ec7:	mov    rdi,QWORD PTR [rcx+0x10]
   140033ecb:	mov    rcx,rdi
   140033ece:	call   QWORD PTR [rip+0x9854]        # 0x14003d728
   140033ed4:	mov    rcx,rbx
   140033ed7:	call   rdi
   140033ed9:	mov    eax,esi
   140033edb:	mov    rbx,QWORD PTR [rsp+0x48]
   140033ee0:	mov    rbp,QWORD PTR [rsp+0x50]
   140033ee5:	mov    rsi,QWORD PTR [rsp+0x58]
   140033eea:	add    rsp,0x30
   140033eee:	pop    rdi
   140033eef:	ret    
   140033ef0:	lea    rcx,[rdx+0x40]
   140033ef7:	jmp    0x14000f4f0
   140033efc:	int3   
   140033efd:	int3   
   140033efe:	int3   
   140033eff:	int3   
   140033f00:	int3   
   140033f01:	int3   
   140033f02:	int3   
   140033f03:	int3   
   140033f04:	mov    rax,rsp
   140033f07:	mov    QWORD PTR [rax+0x18],r8
   140033f0b:	mov    QWORD PTR [rax+0x10],rdx
   140033f0f:	push   rsi
   140033f10:	push   rdi
   140033f11:	push   r12
   140033f13:	push   r14
   140033f15:	push   r15
   140033f17:	sub    rsp,0x40
   140033f1b:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   140033f23:	mov    QWORD PTR [rax+0x8],rbx
   140033f27:	mov    r15,r8
   140033f2a:	mov    r12,rdx
   140033f2d:	mov    rbx,rcx
   140033f30:	xor    edi,edi
   140033f32:	test   r8,r8
   140033f35:	jne    0x140033f41
   140033f37:	mov    eax,0x80004003
   140033f3c:	jmp    0x140033fff
   140033f41:	mov    QWORD PTR [r8],rdi
   140033f44:	mov    esi,0x8007000e
   140033f49:	mov    DWORD PTR [rsp+0x88],esi
   140033f50:	mov    QWORD PTR [rsp+0x20],rdi
   140033f55:	mov    ecx,0xf8
   140033f5a:	call   0x140013d94
   140033f5f:	mov    QWORD PTR [rsp+0x30],rax
   140033f64:	test   rax,rax
   140033f67:	je     0x140033f79
   140033f69:	mov    rdx,rbx
   140033f6c:	mov    rcx,rax
   140033f6f:	call   0x14003395c
   140033f74:	mov    r14,rax
   140033f77:	jmp    0x140033f7c
   140033f79:	mov    r14,rdi
   140033f7c:	mov    QWORD PTR [rsp+0x20],r14
   140033f81:	jmp    0x140033f9e
   140033f83:	xor    edi,edi
   140033f85:	mov    r15,QWORD PTR [rsp+0x80]
   140033f8d:	mov    r12,QWORD PTR [rsp+0x78]
   140033f92:	mov    esi,DWORD PTR [rsp+0x88]
   140033f99:	mov    r14,QWORD PTR [rsp+0x20]
   140033f9e:	test   r14,r14
   140033fa1:	je     0x140033ffd
   140033fa3:	lea    rcx,[r14+0x48]
   140033fa7:	call   0x14000c130
   140033fac:	mov    esi,eax
   140033fae:	test   eax,eax
   140033fb0:	js     0x140033fb7
   140033fb2:	mov    BYTE PTR [r14+0x70],0x1
   140033fb7:	cmovns esi,edi
   140033fba:	test   esi,esi
   140033fbc:	cmovns esi,edi
   140033fbf:	test   esi,esi
   140033fc1:	jne    0x140033fe3
   140033fc3:	mov    rax,QWORD PTR [r14]
   140033fc6:	mov    rbx,QWORD PTR [rax]
   140033fc9:	mov    rcx,rbx
   140033fcc:	call   QWORD PTR [rip+0x9756]        # 0x14003d728
   140033fd2:	mov    r8,r15
   140033fd5:	mov    rdx,r12
   140033fd8:	mov    rcx,r14
   140033fdb:	call   rbx
   140033fdd:	mov    esi,eax
   140033fdf:	test   eax,eax
   140033fe1:	je     0x140033ffd
   140033fe3:	mov    r8,QWORD PTR [r14]
   140033fe6:	mov    rbx,QWORD PTR [r8+0x18]
   140033fea:	mov    rcx,rbx
   140033fed:	call   QWORD PTR [rip+0x9735]        # 0x14003d728
   140033ff3:	mov    edx,0x1
   140033ff8:	mov    rcx,r14
   140033ffb:	call   rbx
   140033ffd:	mov    eax,esi
   140033fff:	mov    rbx,QWORD PTR [rsp+0x70]
   140034004:	add    rsp,0x40
   140034008:	pop    r15
   14003400a:	pop    r14
   14003400c:	pop    r12
   14003400e:	pop    rdi
   14003400f:	pop    rsi
   140034010:	ret    
   140034011:	mov    rcx,QWORD PTR [rdx+0x30]
   140034018:	jmp    0x140013de0
   14003401d:	mov    QWORD PTR [rsp+0x10],rdx
   140034022:	push   rbp
   140034023:	sub    rsp,0x20
   140034027:	mov    rbp,rdx
   14003402a:	lea    rax,[rip+0xffffffffffffff52]        # 0x140033f83
   140034031:	add    rsp,0x20
   140034035:	pop    rbp
   140034036:	ret    
   140034037:	int3   
   140034038:	int3   
   140034039:	int3   
   14003403a:	int3   
   14003403b:	int3   
   14003403c:	int3   
   14003403d:	int3   
   14003403e:	int3   
   14003403f:	int3   
   140034040:	rex push rbx
   140034042:	sub    rsp,0x20
   140034046:	mov    rbx,rcx
   140034049:	mov    rcx,QWORD PTR [rcx+0xd0]
   140034050:	test   rcx,rcx
   140034053:	je     0x140034062
   140034055:	call   0x14000dc9c
   14003405a:	and    QWORD PTR [rbx+0xd0],0x0
   140034062:	add    rsp,0x20
   140034066:	pop    rbx
   140034067:	ret    
   140034068:	int3   
   140034069:	int3   
   14003406a:	int3   
   14003406b:	int3   
   14003406c:	int3   
   14003406d:	int3   
   14003406e:	int3   
   14003406f:	int3   
   140034070:	rex push rbx
   140034072:	sub    rsp,0x20
   140034076:	lea    rbx,[rcx-0x8]
   14003407a:	test   rbx,rbx
   14003407d:	je     0x14003408f
   14003407f:	mov    rcx,rbx
   140034082:	call   0x140033b68
   140034087:	mov    rcx,rbx
   14003408a:	call   0x140013de0
   14003408f:	xor    eax,eax
   140034091:	add    rsp,0x20
   140034095:	pop    rbx
   140034096:	ret    
   140034097:	int3   
   140034098:	int3   
   140034099:	int3   
   14003409a:	int3   
   14003409b:	int3   
   14003409c:	int3   
   14003409d:	int3   
   14003409e:	int3   
   14003409f:	int3   
   1400340a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400340a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400340aa:	push   rdi
   1400340ab:	sub    rsp,0x20
   1400340af:	xor    edi,edi
   1400340b1:	mov    rsi,rcx
   1400340b4:	test   r8,r8
   1400340b7:	jne    0x1400340c0
   1400340b9:	mov    eax,0x80004003
   1400340be:	jmp    0x140034103
   1400340c0:	mov    rcx,rdx
   1400340c3:	mov    QWORD PTR [r8],rdi
   1400340c6:	call   0x14002c16c
   1400340cb:	test   eax,eax
   1400340cd:	je     0x1400340e9
   1400340cf:	mov    QWORD PTR [r8],rsi
   1400340d2:	mov    rax,QWORD PTR [rsi]
   1400340d5:	mov    rbx,QWORD PTR [rax+0x8]
   1400340d9:	mov    rcx,rbx
   1400340dc:	call   QWORD PTR [rip+0x9646]        # 0x14003d728
   1400340e2:	mov    rcx,rsi
   1400340e5:	call   rbx
   1400340e7:	jmp    0x140034101
   1400340e9:	mov    r9,r8
   1400340ec:	lea    rcx,[rsi+0x18]
   1400340f0:	mov    r8,rdx
   1400340f3:	lea    rdx,[rip+0xe766]        # 0x140042860
   1400340fa:	call   0x14000c260
   1400340ff:	mov    edi,eax
   140034101:	mov    eax,edi
   140034103:	mov    rbx,QWORD PTR [rsp+0x30]
   140034108:	mov    rsi,QWORD PTR [rsp+0x38]
   14003410d:	add    rsp,0x20
   140034111:	pop    rdi
   140034112:	ret    
   140034113:	int3   
   140034114:	int3   
   140034115:	int3   
   140034116:	int3   
   140034117:	int3   
   140034118:	int3   
   140034119:	int3   
   14003411a:	int3   
   14003411b:	int3   
   14003411c:	int3   
   14003411d:	int3   
   14003411e:	int3   
   14003411f:	int3   
   140034120:	mov    rax,rsp
   140034123:	push   r14
   140034125:	sub    rsp,0x30
   140034129:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140034131:	mov    QWORD PTR [rax+0x8],rbx
   140034135:	mov    QWORD PTR [rax+0x10],rsi
   140034139:	mov    QWORD PTR [rax+0x18],rdi
   14003413d:	mov    r14,rcx
   140034140:	or     esi,0xffffffff
   140034143:	lock xadd DWORD PTR [rcx+0x8],esi
   140034148:	sub    esi,0x1
   14003414b:	jne    0x1400341a4
   14003414d:	mov    rdi,QWORD PTR [rip+0x1aa0c]        # 0x14004eb60
   140034154:	mov    rax,QWORD PTR [rdi]
   140034157:	mov    rbx,QWORD PTR [rax+0x8]
   14003415b:	mov    rcx,rbx
   14003415e:	call   QWORD PTR [rip+0x95c4]        # 0x14003d728
   140034164:	mov    rcx,rdi
   140034167:	call   rbx
   140034169:	nop
   14003416a:	test   r14,r14
   14003416d:	je     0x140034188
   14003416f:	mov    rax,QWORD PTR [r14]
   140034172:	mov    rbx,QWORD PTR [rax+0x18]
   140034176:	mov    rcx,rbx
   140034179:	call   QWORD PTR [rip+0x95a9]        # 0x14003d728
   14003417f:	lea    edx,[rsi+0x1]
   140034182:	mov    rcx,r14
   140034185:	call   rbx
   140034187:	nop
   140034188:	mov    rdi,QWORD PTR [rip+0x1a9d1]        # 0x14004eb60
   14003418f:	mov    rdx,QWORD PTR [rdi]
   140034192:	mov    rbx,QWORD PTR [rdx+0x10]
   140034196:	mov    rcx,rbx
   140034199:	call   QWORD PTR [rip+0x9589]        # 0x14003d728
   14003419f:	mov    rcx,rdi
   1400341a2:	call   rbx
   1400341a4:	mov    eax,esi
   1400341a6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400341ab:	mov    rsi,QWORD PTR [rsp+0x48]
   1400341b0:	mov    rdi,QWORD PTR [rsp+0x50]
   1400341b5:	add    rsp,0x30
   1400341b9:	pop    r14
   1400341bb:	ret    
   1400341bc:	lea    rcx,[rdx+0x28]
   1400341c3:	jmp    0x140029ffc
   1400341c8:	int3   
   1400341c9:	int3   
   1400341ca:	int3   
   1400341cb:	int3   
   1400341cc:	int3   
   1400341cd:	int3   
   1400341ce:	int3   
   1400341cf:	int3   
   1400341d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400341d5:	push   rdi
   1400341d6:	sub    rsp,0x20
   1400341da:	mov    rdi,QWORD PTR [rcx+0x28]
   1400341de:	mov    rax,QWORD PTR [rdi]
   1400341e1:	mov    rbx,QWORD PTR [rax+0x10]
   1400341e5:	mov    rcx,rbx
   1400341e8:	call   QWORD PTR [rip+0x953a]        # 0x14003d728
   1400341ee:	mov    rcx,rdi
   1400341f1:	mov    rax,rbx
   1400341f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400341f9:	add    rsp,0x20
   1400341fd:	pop    rdi
   1400341fe:	rex.W jmp rax
   140034201:	int3   
   140034202:	int3   
   140034203:	int3   
   140034204:	int3   
   140034205:	int3   
   140034206:	int3   
   140034207:	int3   
   140034208:	int3   
   140034209:	int3   
   14003420a:	int3   
   14003420b:	int3   
   14003420c:	int3   
   14003420d:	int3   
   14003420e:	int3   
   14003420f:	int3   
   140034210:	mov    rax,rsp
   140034213:	push   rdi
   140034214:	push   r14
   140034216:	push   r15
   140034218:	sub    rsp,0x30
   14003421c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140034224:	mov    QWORD PTR [rax+0x10],rbx
   140034228:	mov    QWORD PTR [rax+0x18],rbp
   14003422c:	mov    QWORD PTR [rax+0x20],rsi
   140034230:	mov    r14d,r8d
   140034233:	mov    r15d,edx
   140034236:	mov    rdi,rcx
   140034239:	mov    esi,0x1
   14003423e:	cmp    BYTE PTR [rcx+0xb8],0x0
   140034245:	jne    0x1400342b9
   140034247:	add    rcx,0x40
   14003424b:	call   QWORD PTR [rip+0x9177]        # 0x14003d3c8
   140034251:	xor    ebx,ebx
   140034253:	mov    QWORD PTR [rsp+0x50],rbx
   140034258:	mov    rdx,QWORD PTR [rdi+0x80]
   14003425f:	test   rdx,rdx
   140034262:	je     0x140034273
   140034264:	lea    rcx,[rsp+0x50]
   140034269:	call   0x14000dcd0
   14003426e:	mov    rbx,QWORD PTR [rsp+0x50]
   140034273:	lea    rcx,[rdi+0x40]
   140034277:	call   QWORD PTR [rip+0x915b]        # 0x14003d3d8
   14003427d:	test   rbx,rbx
   140034280:	je     0x14003429f
   140034282:	mov    rax,QWORD PTR [rbx]
   140034285:	mov    rdi,QWORD PTR [rax+0x30]
   140034289:	mov    rcx,rdi
   14003428c:	call   QWORD PTR [rip+0x9496]        # 0x14003d728
   140034292:	mov    r8d,r14d
   140034295:	mov    edx,r15d
   140034298:	mov    rcx,rbx
   14003429b:	call   rdi
   14003429d:	mov    esi,eax
   14003429f:	test   rbx,rbx
   1400342a2:	je     0x1400342b9
   1400342a4:	mov    rcx,QWORD PTR [rbx]
   1400342a7:	mov    rdi,QWORD PTR [rcx+0x10]
   1400342ab:	mov    rcx,rdi
   1400342ae:	call   QWORD PTR [rip+0x9474]        # 0x14003d728
   1400342b4:	mov    rcx,rbx
   1400342b7:	call   rdi
   1400342b9:	mov    eax,esi
   1400342bb:	mov    rbx,QWORD PTR [rsp+0x58]
   1400342c0:	mov    rbp,QWORD PTR [rsp+0x60]
   1400342c5:	mov    rsi,QWORD PTR [rsp+0x68]
   1400342ca:	add    rsp,0x30
   1400342ce:	pop    r15
   1400342d0:	pop    r14
   1400342d2:	pop    rdi
   1400342d3:	ret    
   1400342d4:	lea    rcx,[rdx+0x50]
   1400342db:	jmp    0x14000f4f0
   1400342e0:	int3   
   1400342e1:	int3   
   1400342e2:	int3   
   1400342e3:	int3   
   1400342e4:	int3   
   1400342e5:	int3   
   1400342e6:	int3   
   1400342e7:	int3   
   1400342e8:	int3   
   1400342e9:	int3   
   1400342ea:	int3   
   1400342eb:	int3   
   1400342ec:	int3   
   1400342ed:	int3   
   1400342ee:	int3   
   1400342ef:	int3   
   1400342f0:	rex push rsi
   1400342f2:	push   rdi
   1400342f3:	push   r12
   1400342f5:	push   r14
   1400342f7:	push   r15
   1400342f9:	sub    rsp,0x30
   1400342fd:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140034306:	mov    QWORD PTR [rsp+0x68],rbx
   14003430b:	mov    QWORD PTR [rsp+0x70],rbp
   140034310:	mov    r14d,r9d
   140034313:	mov    r15d,r8d
   140034316:	mov    r12d,edx
   140034319:	mov    rdi,rcx
   14003431c:	mov    esi,0x1
   140034321:	cmp    BYTE PTR [rcx+0xb8],0x0
   140034328:	jne    0x14003439f
   14003432a:	add    rcx,0x40
   14003432e:	call   QWORD PTR [rip+0x9094]        # 0x14003d3c8
   140034334:	xor    ebx,ebx
   140034336:	mov    QWORD PTR [rsp+0x60],rbx
   14003433b:	mov    rdx,QWORD PTR [rdi+0x80]
   140034342:	test   rdx,rdx
   140034345:	je     0x140034356
   140034347:	lea    rcx,[rsp+0x60]
   14003434c:	call   0x14000dcd0
   140034351:	mov    rbx,QWORD PTR [rsp+0x60]
   140034356:	lea    rcx,[rdi+0x40]
   14003435a:	call   QWORD PTR [rip+0x9078]        # 0x14003d3d8
   140034360:	test   rbx,rbx
   140034363:	je     0x140034385
   140034365:	mov    rax,QWORD PTR [rbx]
   140034368:	mov    rdi,QWORD PTR [rax+0x28]
   14003436c:	mov    rcx,rdi
   14003436f:	call   QWORD PTR [rip+0x93b3]        # 0x14003d728
   140034375:	mov    r9d,r14d
   140034378:	mov    r8d,r15d
   14003437b:	mov    edx,r12d
   14003437e:	mov    rcx,rbx
   140034381:	call   rdi
   140034383:	mov    esi,eax
   140034385:	test   rbx,rbx
   140034388:	je     0x14003439f
   14003438a:	mov    rcx,QWORD PTR [rbx]
   14003438d:	mov    rdi,QWORD PTR [rcx+0x10]
   140034391:	mov    rcx,rdi
   140034394:	call   QWORD PTR [rip+0x938e]        # 0x14003d728
   14003439a:	mov    rcx,rbx
   14003439d:	call   rdi
   14003439f:	mov    eax,esi
   1400343a1:	mov    rbx,QWORD PTR [rsp+0x68]
   1400343a6:	mov    rbp,QWORD PTR [rsp+0x70]
   1400343ab:	add    rsp,0x30
   1400343af:	pop    r15
   1400343b1:	pop    r14
   1400343b3:	pop    r12
   1400343b5:	pop    rdi
   1400343b6:	pop    rsi
   1400343b7:	ret    
   1400343b8:	lea    rcx,[rdx+0x60]
   1400343bf:	jmp    0x14000f4f0
   1400343c4:	int3   
   1400343c5:	int3   
   1400343c6:	int3   
   1400343c7:	int3   
   1400343c8:	int3   
   1400343c9:	int3   
   1400343ca:	int3   
   1400343cb:	int3   
   1400343cc:	int3   
   1400343cd:	int3   
   1400343ce:	int3   
   1400343cf:	int3   
   1400343d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400343d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400343da:	mov    QWORD PTR [rsp+0x20],rsi
   1400343df:	push   rdi
   1400343e0:	sub    rsp,0x20
   1400343e4:	cmp    BYTE PTR [rcx+0xb8],0x0
   1400343eb:	mov    rdi,rcx
   1400343ee:	mov    esi,0x1
   1400343f3:	jne    0x140034447
   1400343f5:	add    rcx,0x40
   1400343f9:	call   QWORD PTR [rip+0x8fc9]        # 0x14003d3c8
   1400343ff:	mov    rdx,QWORD PTR [rdi+0x80]
   140034406:	xor    ebx,ebx
   140034408:	mov    QWORD PTR [rsp+0x30],rbx
   14003440d:	test   rdx,rdx
   140034410:	je     0x140034421
   140034412:	lea    rcx,[rsp+0x30]
   140034417:	call   0x14000dcd0
   14003441c:	mov    rbx,QWORD PTR [rsp+0x30]
   140034421:	lea    rcx,[rdi+0x40]
   140034425:	call   QWORD PTR [rip+0x8fad]        # 0x14003d3d8
   14003442b:	test   rbx,rbx
   14003442e:	je     0x140034447
   140034430:	mov    rcx,QWORD PTR [rbx]
   140034433:	xor    esi,esi
   140034435:	mov    rdi,QWORD PTR [rcx+0x10]
   140034439:	mov    rcx,rdi
   14003443c:	call   QWORD PTR [rip+0x92e6]        # 0x14003d728
   140034442:	mov    rcx,rbx
   140034445:	call   rdi
   140034447:	mov    rbx,QWORD PTR [rsp+0x38]
   14003444c:	mov    eax,esi
   14003444e:	mov    rsi,QWORD PTR [rsp+0x48]
   140034453:	mov    rbp,QWORD PTR [rsp+0x40]
   140034458:	add    rsp,0x20
   14003445c:	pop    rdi
   14003445d:	ret    
   14003445e:	int3   
   14003445f:	int3   
   140034460:	int3   
   140034461:	int3   
   140034462:	int3   
   140034463:	int3   
   140034464:	int3   
   140034465:	int3   
   140034466:	int3   
   140034467:	int3   
   140034468:	int3   
   140034469:	int3   
   14003446a:	int3   
   14003446b:	int3   
   14003446c:	int3   
   14003446d:	int3   
   14003446e:	int3   
   14003446f:	int3   
   140034470:	mov    QWORD PTR [rsp+0x8],rbx
   140034475:	mov    QWORD PTR [rsp+0x10],rsi
   14003447a:	push   rdi
   14003447b:	sub    rsp,0x20
   14003447f:	add    rcx,0xffffffffffffffe8
   140034483:	mov    rsi,rdx
   140034486:	xor    ebx,ebx
   140034488:	call   0x14000db58
   14003448d:	mov    rdi,rax
   140034490:	test   rax,rax
   140034493:	je     0x1400344aa
   140034495:	mov    rdx,rsi
   140034498:	mov    rcx,rax
   14003449b:	call   0x14003558c
   1400344a0:	mov    rcx,rdi
   1400344a3:	mov    ebx,eax
   1400344a5:	call   0x14000dc9c
   1400344aa:	mov    rsi,QWORD PTR [rsp+0x38]
   1400344af:	mov    eax,ebx
   1400344b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400344b6:	add    rsp,0x20
   1400344ba:	pop    rdi
   1400344bb:	ret    
   1400344bc:	int3   
   1400344bd:	int3   
   1400344be:	int3   
   1400344bf:	int3   
   1400344c0:	int3   
   1400344c1:	int3   
   1400344c2:	int3   
   1400344c3:	int3   
   1400344c4:	int3   
   1400344c5:	int3   
   1400344c6:	int3   
   1400344c7:	int3   
   1400344c8:	int3   
   1400344c9:	int3   
   1400344ca:	int3   
   1400344cb:	int3   
   1400344cc:	int3   
   1400344cd:	int3   
   1400344ce:	int3   
   1400344cf:	int3   
   1400344d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400344d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400344da:	push   rdi
   1400344db:	sub    rsp,0x20
   1400344df:	lea    rbx,[rcx+0xa0]
   1400344e6:	mov    BYTE PTR [rcx+0xd0],0x1
   1400344ed:	mov    rdi,rcx
   1400344f0:	mov    rcx,rbx
   1400344f3:	call   QWORD PTR [rip+0x8ecf]        # 0x14003d3c8
   1400344f9:	mov    rsi,QWORD PTR [rdi+0xc8]
   140034500:	mov    rcx,rbx
   140034503:	and    QWORD PTR [rdi+0xc8],0x0
   14003450b:	call   QWORD PTR [rip+0x8ec7]        # 0x14003d3d8
   140034511:	test   rsi,rsi
   140034514:	je     0x14003451e
   140034516:	mov    rcx,rsi
   140034519:	call   0x14000dc9c
   14003451e:	mov    rbx,QWORD PTR [rsp+0x30]
   140034523:	xor    eax,eax
   140034525:	mov    rsi,QWORD PTR [rsp+0x38]
   14003452a:	add    rsp,0x20
   14003452e:	pop    rdi
   14003452f:	ret    
   140034530:	int3   
   140034531:	int3   
   140034532:	int3   
   140034533:	int3   
   140034534:	int3   
   140034535:	int3   
   140034536:	int3   
   140034537:	int3   
   140034538:	int3   
   140034539:	int3   
   14003453a:	int3   
   14003453b:	int3   
   14003453c:	int3   
   14003453d:	int3   
   14003453e:	int3   
   14003453f:	int3   
   140034540:	rex push rsi
   140034542:	push   rdi
   140034543:	push   r14
   140034545:	sub    rsp,0x30
   140034549:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140034552:	mov    QWORD PTR [rsp+0x58],rbx
   140034557:	mov    QWORD PTR [rsp+0x60],rbp
   14003455c:	mov    r14d,edx
   14003455f:	mov    rdi,rcx
   140034562:	mov    esi,0x1
   140034567:	cmp    BYTE PTR [rcx+0xd8],0x0
   14003456e:	jne    0x1400345df
   140034570:	add    rcx,0x60
   140034574:	call   QWORD PTR [rip+0x8e4e]        # 0x14003d3c8
   14003457a:	xor    ebx,ebx
   14003457c:	mov    QWORD PTR [rsp+0x50],rbx
   140034581:	mov    rdx,QWORD PTR [rdi+0x88]
   140034588:	test   rdx,rdx
   14003458b:	je     0x14003459c
   14003458d:	lea    rcx,[rsp+0x50]
   140034592:	call   0x14000dcd0
   140034597:	mov    rbx,QWORD PTR [rsp+0x50]
   14003459c:	lea    rcx,[rdi+0x60]
   1400345a0:	call   QWORD PTR [rip+0x8e32]        # 0x14003d3d8
   1400345a6:	test   rbx,rbx
   1400345a9:	je     0x1400345c5
   1400345ab:	mov    rax,QWORD PTR [rbx]
   1400345ae:	mov    rdi,QWORD PTR [rax+0x30]
   1400345b2:	mov    rcx,rdi
   1400345b5:	call   QWORD PTR [rip+0x916d]        # 0x14003d728
   1400345bb:	mov    edx,r14d
   1400345be:	mov    rcx,rbx
   1400345c1:	call   rdi
   1400345c3:	mov    esi,eax
   1400345c5:	test   rbx,rbx
   1400345c8:	je     0x1400345df
   1400345ca:	mov    rcx,QWORD PTR [rbx]
   1400345cd:	mov    rdi,QWORD PTR [rcx+0x10]
   1400345d1:	mov    rcx,rdi
   1400345d4:	call   QWORD PTR [rip+0x914e]        # 0x14003d728
   1400345da:	mov    rcx,rbx
   1400345dd:	call   rdi
   1400345df:	mov    eax,esi
   1400345e1:	mov    rbx,QWORD PTR [rsp+0x58]
   1400345e6:	mov    rbp,QWORD PTR [rsp+0x60]
   1400345eb:	add    rsp,0x30
   1400345ef:	pop    r14
   1400345f1:	pop    rdi
   1400345f2:	pop    rsi
   1400345f3:	ret    
   1400345f4:	lea    rcx,[rdx+0x50]
   1400345fb:	jmp    0x14000f4f0
   140034600:	int3   
   140034601:	int3   
   140034602:	int3   
   140034603:	int3   
   140034604:	int3   
   140034605:	int3   
   140034606:	int3   
   140034607:	int3   
   140034608:	int3   
   140034609:	int3   
   14003460a:	int3   
   14003460b:	int3   
   14003460c:	int3   
   14003460d:	int3   
   14003460e:	int3   
   14003460f:	int3   
   140034610:	mov    QWORD PTR [rsp+0x8],rbx
   140034615:	push   rdi
   140034616:	sub    rsp,0x20
   14003461a:	add    rcx,0xffffffffffffffe8
   14003461e:	xor    ebx,ebx
   140034620:	call   0x14000db58
   140034625:	mov    rdi,rax
   140034628:	test   rax,rax
   14003462b:	je     0x14003463f
   14003462d:	mov    rcx,rax
   140034630:	call   0x140035604
   140034635:	mov    rcx,rdi
   140034638:	mov    ebx,eax
   14003463a:	call   0x14000dc9c
   14003463f:	mov    eax,ebx
   140034641:	mov    rbx,QWORD PTR [rsp+0x30]
   140034646:	add    rsp,0x20
   14003464a:	pop    rdi
   14003464b:	ret    
   14003464c:	int3   
   14003464d:	int3   
   14003464e:	int3   
   14003464f:	int3   
   140034650:	int3   
   140034651:	int3   
   140034652:	int3   
   140034653:	int3   
   140034654:	int3   
   140034655:	int3   
   140034656:	int3   
   140034657:	int3   
   140034658:	int3   
   140034659:	int3   
   14003465a:	int3   
   14003465b:	int3   
   14003465c:	int3   
   14003465d:	int3   
   14003465e:	int3   
   14003465f:	int3   
   140034660:	mov    rax,rsp
   140034663:	push   rdi
   140034664:	push   r14
   140034666:	push   r15
   140034668:	sub    rsp,0x30
   14003466c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140034674:	mov    QWORD PTR [rax+0x10],rbx
   140034678:	mov    QWORD PTR [rax+0x18],rbp
   14003467c:	mov    QWORD PTR [rax+0x20],rsi
   140034680:	mov    r14d,r8d
   140034683:	mov    r15d,edx
   140034686:	mov    rdi,rcx
   140034689:	mov    esi,0x1
   14003468e:	cmp    BYTE PTR [rcx+0xd8],0x0
   140034695:	jne    0x140034709
   140034697:	add    rcx,0x60
   14003469b:	call   QWORD PTR [rip+0x8d27]        # 0x14003d3c8
   1400346a1:	xor    ebx,ebx
   1400346a3:	mov    QWORD PTR [rsp+0x50],rbx
   1400346a8:	mov    rdx,QWORD PTR [rdi+0x88]
   1400346af:	test   rdx,rdx
   1400346b2:	je     0x1400346c3
   1400346b4:	lea    rcx,[rsp+0x50]
   1400346b9:	call   0x14000dcd0
   1400346be:	mov    rbx,QWORD PTR [rsp+0x50]
   1400346c3:	lea    rcx,[rdi+0x60]
   1400346c7:	call   QWORD PTR [rip+0x8d0b]        # 0x14003d3d8
   1400346cd:	test   rbx,rbx
   1400346d0:	je     0x1400346ef
   1400346d2:	mov    rax,QWORD PTR [rbx]
   1400346d5:	mov    rdi,QWORD PTR [rax+0x48]
   1400346d9:	mov    rcx,rdi
   1400346dc:	call   QWORD PTR [rip+0x9046]        # 0x14003d728
   1400346e2:	mov    r8d,r14d
   1400346e5:	mov    edx,r15d
   1400346e8:	mov    rcx,rbx
   1400346eb:	call   rdi
   1400346ed:	mov    esi,eax
   1400346ef:	test   rbx,rbx
   1400346f2:	je     0x140034709
   1400346f4:	mov    rcx,QWORD PTR [rbx]
   1400346f7:	mov    rdi,QWORD PTR [rcx+0x10]
   1400346fb:	mov    rcx,rdi
   1400346fe:	call   QWORD PTR [rip+0x9024]        # 0x14003d728
   140034704:	mov    rcx,rbx
   140034707:	call   rdi
   140034709:	mov    eax,esi
   14003470b:	mov    rbx,QWORD PTR [rsp+0x58]
   140034710:	mov    rbp,QWORD PTR [rsp+0x60]
   140034715:	mov    rsi,QWORD PTR [rsp+0x68]
   14003471a:	add    rsp,0x30
   14003471e:	pop    r15
   140034720:	pop    r14
   140034722:	pop    rdi
   140034723:	ret    
   140034724:	lea    rcx,[rdx+0x50]
   14003472b:	jmp    0x14000f4f0
   140034730:	int3   
   140034731:	int3   
   140034732:	int3   
   140034733:	int3   
   140034734:	int3   
   140034735:	int3   
   140034736:	int3   
   140034737:	int3   
   140034738:	int3   
   140034739:	int3   
   14003473a:	int3   
   14003473b:	int3   
   14003473c:	int3   
   14003473d:	int3   
   14003473e:	int3   
   14003473f:	int3   
   140034740:	mov    QWORD PTR [rsp+0x8],rbx
   140034745:	mov    QWORD PTR [rsp+0x10],rsi
   14003474a:	push   rdi
   14003474b:	sub    rsp,0x20
   14003474f:	mov    rdi,rcx
   140034752:	add    rcx,0xfffffffffffffff8
   140034756:	call   0x14000db58
   14003475b:	mov    rbx,rax
   14003475e:	test   rax,rax
   140034761:	je     0x140034777
   140034763:	lea    rdx,[rdi-0x8]
   140034767:	mov    rcx,rax
   14003476a:	call   0x1400353e0
   14003476f:	mov    rcx,rbx
   140034772:	call   0x14000dc9c
   140034777:	lea    rcx,[rdi+0x58]
   14003477b:	call   QWORD PTR [rip+0x8c47]        # 0x14003d3c8
   140034781:	lea    rcx,[rdi+0x80]
   140034788:	call   0x14000ddec
   14003478d:	lea    rcx,[rdi+0x88]
   140034794:	call   0x14000ddec
   140034799:	lea    rcx,[rdi+0x90]
   1400347a0:	call   0x14000ddec
   1400347a5:	lea    rcx,[rdi+0x58]
   1400347a9:	call   QWORD PTR [rip+0x8c29]        # 0x14003d3d8
   1400347af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400347b4:	xor    eax,eax
   1400347b6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400347bb:	add    rsp,0x20
   1400347bf:	pop    rdi
   1400347c0:	ret    
   1400347c1:	int3   
   1400347c2:	int3   
   1400347c3:	int3   
   1400347c4:	int3   
   1400347c5:	int3   
   1400347c6:	int3   
   1400347c7:	int3   
   1400347c8:	int3   
   1400347c9:	int3   
   1400347ca:	int3   
   1400347cb:	int3   
   1400347cc:	int3   
   1400347cd:	int3   
   1400347ce:	int3   
   1400347cf:	int3   
   1400347d0:	mov    rax,rsp
   1400347d3:	push   rdi
   1400347d4:	push   r14
   1400347d6:	push   r15
   1400347d8:	sub    rsp,0x40
   1400347dc:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400347e4:	mov    QWORD PTR [rax+0x10],rbx
   1400347e8:	mov    QWORD PTR [rax+0x18],rbp
   1400347ec:	mov    QWORD PTR [rax+0x20],rsi
   1400347f0:	mov    r14d,r8d
   1400347f3:	mov    r15,rdx
   1400347f6:	mov    rdi,rcx
   1400347f9:	mov    esi,0x1
   1400347fe:	cmp    BYTE PTR [rcx+0xd8],0x0
   140034805:	jne    0x140034885
   140034807:	add    rcx,0x60
   14003480b:	call   QWORD PTR [rip+0x8bb7]        # 0x14003d3c8
   140034811:	xor    ebx,ebx
   140034813:	mov    QWORD PTR [rsp+0x60],rbx
   140034818:	mov    rdx,QWORD PTR [rdi+0x88]
   14003481f:	test   rdx,rdx
   140034822:	je     0x140034833
   140034824:	lea    rcx,[rsp+0x60]
   140034829:	call   0x14000dcd0
   14003482e:	mov    rbx,QWORD PTR [rsp+0x60]
   140034833:	lea    rcx,[rdi+0x60]
   140034837:	call   QWORD PTR [rip+0x8b9b]        # 0x14003d3d8
   14003483d:	test   rbx,rbx
   140034840:	je     0x14003486b
   140034842:	movups xmm0,XMMWORD PTR [r15]
   140034846:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14003484c:	mov    rax,QWORD PTR [rbx]
   14003484f:	mov    rdi,QWORD PTR [rax+0x20]
   140034853:	mov    rcx,rdi
   140034856:	call   QWORD PTR [rip+0x8ecc]        # 0x14003d728
   14003485c:	mov    r8d,r14d
   14003485f:	lea    rdx,[rsp+0x30]
   140034864:	mov    rcx,rbx
   140034867:	call   rdi
   140034869:	mov    esi,eax
   14003486b:	test   rbx,rbx
   14003486e:	je     0x140034885
   140034870:	mov    rcx,QWORD PTR [rbx]
   140034873:	mov    rdi,QWORD PTR [rcx+0x10]
   140034877:	mov    rcx,rdi
   14003487a:	call   QWORD PTR [rip+0x8ea8]        # 0x14003d728
   140034880:	mov    rcx,rbx
   140034883:	call   rdi
   140034885:	mov    eax,esi
   140034887:	mov    rbx,QWORD PTR [rsp+0x68]
   14003488c:	mov    rbp,QWORD PTR [rsp+0x70]
   140034891:	mov    rsi,QWORD PTR [rsp+0x78]
   140034896:	add    rsp,0x40
   14003489a:	pop    r15
   14003489c:	pop    r14
   14003489e:	pop    rdi
   14003489f:	ret    
   1400348a0:	lea    rcx,[rdx+0x60]
   1400348a7:	jmp    0x14000f4f0
   1400348ac:	int3   
   1400348ad:	int3   
   1400348ae:	int3   
   1400348af:	int3   
   1400348b0:	int3   
   1400348b1:	int3   
   1400348b2:	int3   
   1400348b3:	int3   
   1400348b4:	int3   
   1400348b5:	int3   
   1400348b6:	int3   
   1400348b7:	int3   
   1400348b8:	int3   
   1400348b9:	int3   
   1400348ba:	int3   
   1400348bb:	int3   
   1400348bc:	int3   
   1400348bd:	int3   
   1400348be:	int3   
   1400348bf:	int3   
   1400348c0:	mov    rax,rsp
   1400348c3:	push   rsi
   1400348c4:	push   rdi
   1400348c5:	push   r12
   1400348c7:	push   r14
   1400348c9:	push   r15
   1400348cb:	sub    rsp,0x40
   1400348cf:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400348d7:	mov    QWORD PTR [rax+0x10],rbx
   1400348db:	mov    QWORD PTR [rax+0x18],rbp
   1400348df:	mov    r14d,r9d
   1400348e2:	mov    r15d,r8d
   1400348e5:	mov    r12d,edx
   1400348e8:	mov    rdi,rcx
   1400348eb:	mov    esi,0x1
   1400348f0:	cmp    BYTE PTR [rcx+0xd8],0x0
   1400348f7:	jne    0x14003497d
   1400348fd:	add    rcx,0x60
   140034901:	call   QWORD PTR [rip+0x8ac1]        # 0x14003d3c8
   140034907:	xor    ebx,ebx
   140034909:	mov    QWORD PTR [rsp+0x70],rbx
   14003490e:	mov    rdx,QWORD PTR [rdi+0x88]
   140034915:	test   rdx,rdx
   140034918:	je     0x140034929
   14003491a:	lea    rcx,[rsp+0x70]
   14003491f:	call   0x14000dcd0
   140034924:	mov    rbx,QWORD PTR [rsp+0x70]
   140034929:	lea    rcx,[rdi+0x60]
   14003492d:	call   QWORD PTR [rip+0x8aa5]        # 0x14003d3d8
   140034933:	test   rbx,rbx
   140034936:	je     0x140034963
   140034938:	mov    rax,QWORD PTR [rbx]
   14003493b:	mov    rdi,QWORD PTR [rax+0x38]
   14003493f:	mov    rcx,rdi
   140034942:	call   QWORD PTR [rip+0x8de0]        # 0x14003d728
   140034948:	mov    eax,DWORD PTR [rsp+0x90]
   14003494f:	mov    DWORD PTR [rsp+0x20],eax
   140034953:	mov    r9d,r14d
   140034956:	mov    r8d,r15d
   140034959:	mov    edx,r12d
   14003495c:	mov    rcx,rbx
   14003495f:	call   rdi
   140034961:	mov    esi,eax
   140034963:	test   rbx,rbx
   140034966:	je     0x14003497d
   140034968:	mov    rcx,QWORD PTR [rbx]
   14003496b:	mov    rdi,QWORD PTR [rcx+0x10]
   14003496f:	mov    rcx,rdi
   140034972:	call   QWORD PTR [rip+0x8db0]        # 0x14003d728
   140034978:	mov    rcx,rbx
   14003497b:	call   rdi
   14003497d:	mov    eax,esi
   14003497f:	lea    r11,[rsp+0x40]
   140034984:	mov    rbx,QWORD PTR [r11+0x38]
   140034988:	mov    rbp,QWORD PTR [r11+0x40]
   14003498c:	mov    rsp,r11
   14003498f:	pop    r15
   140034991:	pop    r14
   140034993:	pop    r12
   140034995:	pop    rdi
   140034996:	pop    rsi
   140034997:	ret    
   140034998:	lea    rcx,[rdx+0x70]
   14003499f:	jmp    0x14000f4f0
   1400349a4:	int3   
   1400349a5:	int3   
   1400349a6:	int3   
   1400349a7:	int3   
   1400349a8:	int3   
   1400349a9:	int3   
   1400349aa:	int3   
   1400349ab:	int3   
   1400349ac:	int3   
   1400349ad:	int3   
   1400349ae:	int3   
   1400349af:	int3   
   1400349b0:	mov    rax,rsp
   1400349b3:	push   rsi
   1400349b4:	push   rdi
   1400349b5:	push   r12
   1400349b7:	push   r14
   1400349b9:	push   r15
   1400349bb:	sub    rsp,0x40
   1400349bf:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400349c7:	mov    QWORD PTR [rax+0x10],rbx
   1400349cb:	mov    QWORD PTR [rax+0x18],rbp
   1400349cf:	mov    r14,r9
   1400349d2:	mov    r15,r8
   1400349d5:	mov    r12d,edx
   1400349d8:	mov    rdi,rcx
   1400349db:	mov    esi,0x1
   1400349e0:	cmp    BYTE PTR [rcx+0xd8],0x0
   1400349e7:	jne    0x140034a6f
   1400349ed:	add    rcx,0x60
   1400349f1:	call   QWORD PTR [rip+0x89d1]        # 0x14003d3c8
   1400349f7:	xor    ebx,ebx
   1400349f9:	mov    QWORD PTR [rsp+0x70],rbx
   1400349fe:	mov    rdx,QWORD PTR [rdi+0x88]
   140034a05:	test   rdx,rdx
   140034a08:	je     0x140034a19
   140034a0a:	lea    rcx,[rsp+0x70]
   140034a0f:	call   0x14000dcd0
   140034a14:	mov    rbx,QWORD PTR [rsp+0x70]
   140034a19:	lea    rcx,[rdi+0x60]
   140034a1d:	call   QWORD PTR [rip+0x89b5]        # 0x14003d3d8
   140034a23:	test   rbx,rbx
   140034a26:	je     0x140034a55
   140034a28:	mov    rax,QWORD PTR [rbx]
   140034a2b:	mov    rdi,QWORD PTR [rax+0x40]
   140034a2f:	mov    rcx,rdi
   140034a32:	call   QWORD PTR [rip+0x8cf0]        # 0x14003d728
   140034a38:	mov    rax,QWORD PTR [rsp+0x90]
   140034a40:	mov    QWORD PTR [rsp+0x20],rax
   140034a45:	mov    r9,r14
   140034a48:	mov    r8,r15
   140034a4b:	mov    edx,r12d
   140034a4e:	mov    rcx,rbx
   140034a51:	call   rdi
   140034a53:	mov    esi,eax
   140034a55:	test   rbx,rbx
   140034a58:	je     0x140034a6f
   140034a5a:	mov    rcx,QWORD PTR [rbx]
   140034a5d:	mov    rdi,QWORD PTR [rcx+0x10]
   140034a61:	mov    rcx,rdi
   140034a64:	call   QWORD PTR [rip+0x8cbe]        # 0x14003d728
   140034a6a:	mov    rcx,rbx
   140034a6d:	call   rdi
   140034a6f:	mov    eax,esi
   140034a71:	lea    r11,[rsp+0x40]
   140034a76:	mov    rbx,QWORD PTR [r11+0x38]
   140034a7a:	mov    rbp,QWORD PTR [r11+0x40]
   140034a7e:	mov    rsp,r11
   140034a81:	pop    r15
   140034a83:	pop    r14
   140034a85:	pop    r12
   140034a87:	pop    rdi
   140034a88:	pop    rsi
   140034a89:	ret    
   140034a8a:	lea    rcx,[rdx+0x70]
   140034a91:	jmp    0x14000f4f0
   140034a96:	int3   
   140034a97:	int3   
   140034a98:	int3   
   140034a99:	int3   
   140034a9a:	int3   
   140034a9b:	int3   
   140034a9c:	mov    rax,rsp
   140034a9f:	push   rdi
   140034aa0:	sub    rsp,0x30
   140034aa4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140034aac:	mov    QWORD PTR [rax+0x10],rbx
   140034ab0:	mov    QWORD PTR [rax+0x18],rbp
   140034ab4:	mov    QWORD PTR [rax+0x20],rsi
   140034ab8:	mov    rsi,rcx
   140034abb:	xor    ebx,ebx
   140034abd:	add    rcx,0x48
   140034ac1:	call   QWORD PTR [rip+0x8901]        # 0x14003d3c8
   140034ac7:	mov    rbp,QWORD PTR [rsi+0x40]
   140034acb:	cmp    DWORD PTR [rbp+0x8],ebx
   140034ace:	jle    0x140034afd
   140034ad0:	lea    ecx,[rbx+0x18]
   140034ad3:	call   0x140013d94
   140034ad8:	mov    rdi,rax
   140034adb:	mov    QWORD PTR [rsp+0x40],rax
   140034ae0:	test   rax,rax
   140034ae3:	je     0x140034afd
   140034ae5:	mov    rdx,rbp
   140034ae8:	mov    rcx,rax
   140034aeb:	call   0x140039ddc
   140034af0:	lea    rax,[rip+0xe519]        # 0x140043010
   140034af7:	mov    QWORD PTR [rdi],rax
   140034afa:	mov    rbx,rdi
   140034afd:	lea    rcx,[rsi+0x48]
   140034b01:	call   QWORD PTR [rip+0x88d1]        # 0x14003d3d8
   140034b07:	mov    rax,rbx
   140034b0a:	mov    rbx,QWORD PTR [rsp+0x48]
   140034b0f:	mov    rbp,QWORD PTR [rsp+0x50]
   140034b14:	mov    rsi,QWORD PTR [rsp+0x58]
   140034b19:	add    rsp,0x30
   140034b1d:	pop    rdi
   140034b1e:	ret    
   140034b1f:	mov    rcx,QWORD PTR [rdx+0x40]
   140034b26:	jmp    0x140013de0
   140034b2b:	int3   
   140034b2c:	int3   
   140034b2d:	int3   
   140034b2e:	int3   
   140034b2f:	int3   
   140034b30:	int3   
   140034b31:	int3   
   140034b32:	int3   
   140034b33:	int3   
   140034b34:	mov    rax,rsp
   140034b37:	push   rdi
   140034b38:	sub    rsp,0x30
   140034b3c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140034b44:	mov    QWORD PTR [rax+0x10],rbx
   140034b48:	mov    QWORD PTR [rax+0x18],rbp
   140034b4c:	mov    QWORD PTR [rax+0x20],rsi
   140034b50:	mov    rsi,rcx
   140034b53:	xor    ebx,ebx
   140034b55:	add    rcx,0x48
   140034b59:	call   QWORD PTR [rip+0x8869]        # 0x14003d3c8
   140034b5f:	mov    rbp,QWORD PTR [rsi+0x40]
   140034b63:	cmp    DWORD PTR [rbp+0x8],ebx
   140034b66:	jle    0x140034b95
   140034b68:	lea    ecx,[rbx+0x20]
   140034b6b:	call   0x140013d94
   140034b70:	mov    rdi,rax
   140034b73:	mov    QWORD PTR [rsp+0x40],rax
   140034b78:	test   rax,rax
   140034b7b:	je     0x140034b95
   140034b7d:	mov    rdx,rbp
   140034b80:	mov    rcx,rax
   140034b83:	call   0x140039ddc
   140034b88:	lea    rax,[rip+0xe451]        # 0x140042fe0
   140034b8f:	mov    QWORD PTR [rdi],rax
   140034b92:	mov    rbx,rdi
   140034b95:	lea    rcx,[rsi+0x48]
   140034b99:	call   QWORD PTR [rip+0x8839]        # 0x14003d3d8
   140034b9f:	mov    rax,rbx
   140034ba2:	mov    rbx,QWORD PTR [rsp+0x48]
   140034ba7:	mov    rbp,QWORD PTR [rsp+0x50]
   140034bac:	mov    rsi,QWORD PTR [rsp+0x58]
   140034bb1:	add    rsp,0x30
   140034bb5:	pop    rdi
   140034bb6:	ret    
   140034bb7:	mov    rcx,QWORD PTR [rdx+0x40]
   140034bbe:	jmp    0x140013de0
   140034bc3:	int3   
   140034bc4:	int3   
   140034bc5:	int3   
   140034bc6:	int3   
   140034bc7:	int3   
   140034bc8:	int3   
   140034bc9:	int3   
   140034bca:	int3   
   140034bcb:	int3   
   140034bcc:	mov    rax,rsp
   140034bcf:	push   rdi
   140034bd0:	sub    rsp,0x30
   140034bd4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140034bdc:	mov    QWORD PTR [rax+0x10],rbx
   140034be0:	mov    QWORD PTR [rax+0x18],rbp
   140034be4:	mov    QWORD PTR [rax+0x20],rsi
   140034be8:	mov    rsi,rcx
   140034beb:	xor    ebx,ebx
   140034bed:	add    rcx,0x48
   140034bf1:	call   QWORD PTR [rip+0x87d1]        # 0x14003d3c8
   140034bf7:	mov    rbp,QWORD PTR [rsi+0x40]
   140034bfb:	cmp    DWORD PTR [rbp+0x8],ebx
   140034bfe:	jle    0x140034c2d
   140034c00:	lea    ecx,[rbx+0x28]
   140034c03:	call   0x140013d94
   140034c08:	mov    rdi,rax
   140034c0b:	mov    QWORD PTR [rsp+0x40],rax
   140034c10:	test   rax,rax
   140034c13:	je     0x140034c2d
   140034c15:	mov    rdx,rbp
   140034c18:	mov    rcx,rax
   140034c1b:	call   0x140039ddc
   140034c20:	lea    rax,[rip+0xe3d1]        # 0x140042ff8
   140034c27:	mov    QWORD PTR [rdi],rax
   140034c2a:	mov    rbx,rdi
   140034c2d:	lea    rcx,[rsi+0x48]
   140034c31:	call   QWORD PTR [rip+0x87a1]        # 0x14003d3d8
   140034c37:	mov    rax,rbx
   140034c3a:	mov    rbx,QWORD PTR [rsp+0x48]
   140034c3f:	mov    rbp,QWORD PTR [rsp+0x50]
   140034c44:	mov    rsi,QWORD PTR [rsp+0x58]
   140034c49:	add    rsp,0x30
   140034c4d:	pop    rdi
   140034c4e:	ret    
   140034c4f:	mov    rcx,QWORD PTR [rdx+0x40]
   140034c56:	jmp    0x140013de0
   140034c5b:	int3   
   140034c5c:	int3   
   140034c5d:	int3   
   140034c5e:	int3   
   140034c5f:	int3   
   140034c60:	int3   
   140034c61:	int3   
   140034c62:	int3   
   140034c63:	int3   
   140034c64:	jmp    0x140012c84
   140034c69:	int3   
   140034c6a:	int3   
   140034c6b:	int3   
   140034c6c:	int3   
   140034c6d:	int3   
   140034c6e:	int3   
   140034c6f:	int3   
   140034c70:	mov    QWORD PTR [rsp+0x8],rbx
   140034c75:	mov    QWORD PTR [rsp+0x10],rsi
   140034c7a:	push   rdi
   140034c7b:	sub    rsp,0x20
   140034c7f:	lea    rdi,[rcx+0x8]
   140034c83:	mov    rsi,rcx
   140034c86:	mov    rcx,rdi
   140034c89:	call   QWORD PTR [rip+0x8739]        # 0x14003d3c8
   140034c8f:	mov    rbx,QWORD PTR [rsi]
   140034c92:	test   rbx,rbx
   140034c95:	je     0x140034cb9
   140034c97:	mov    rcx,QWORD PTR [rbx]
   140034c9a:	test   rcx,rcx
   140034c9d:	je     0x140034ca9
   140034c9f:	call   QWORD PTR [rip+0x89a3]        # 0x14003d648
   140034ca5:	and    QWORD PTR [rbx],0x0
   140034ca9:	and    DWORD PTR [rbx+0x8],0x0
   140034cad:	mov    rcx,rbx
   140034cb0:	and    DWORD PTR [rbx+0xc],0x0
   140034cb4:	call   0x140013de0
   140034cb9:	and    QWORD PTR [rsi],0x0
   140034cbd:	mov    rcx,rdi
   140034cc0:	call   QWORD PTR [rip+0x8712]        # 0x14003d3d8
   140034cc6:	mov    rcx,rdi
   140034cc9:	mov    rbx,QWORD PTR [rsp+0x30]
   140034cce:	mov    rsi,QWORD PTR [rsp+0x38]
   140034cd3:	add    rsp,0x20
   140034cd7:	pop    rdi
   140034cd8:	rex.W jmp QWORD PTR [rip+0x86d9]        # 0x14003d3b8
   140034cdf:	int3   
   140034ce0:	int3   
   140034ce1:	int3   
   140034ce2:	int3   
   140034ce3:	int3   
   140034ce4:	int3   
   140034ce5:	int3   
   140034ce6:	int3   
   140034ce7:	int3   
   140034ce8:	mov    rax,rsp
   140034ceb:	mov    QWORD PTR [rax+0x8],rcx
   140034cef:	push   rdi
   140034cf0:	sub    rsp,0x30
   140034cf4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140034cfc:	mov    QWORD PTR [rax+0x10],rbx
   140034d00:	mov    QWORD PTR [rax+0x18],rsi
   140034d04:	mov    rdi,rcx
   140034d07:	cmp    QWORD PTR [rdi+0xf0],0x0
   140034d0f:	je     0x140034d2c
   140034d11:	lea    rcx,[rdi+0xe0]
   140034d18:	call   0x140012cc8
   140034d1d:	test   rax,rax
   140034d20:	je     0x140034d07
   140034d22:	mov    rcx,rax
   140034d25:	call   0x140012e54
   140034d2a:	jmp    0x140034d07
   140034d2c:	lea    rcx,[rdi+0xe0]
   140034d33:	call   0x140012c84
   140034d38:	nop
   140034d39:	lea    rcx,[rdi+0xb8]
   140034d40:	call   QWORD PTR [rip+0x8672]        # 0x14003d3b8
   140034d46:	nop
   140034d47:	lea    rcx,[rdi+0x90]
   140034d4e:	call   QWORD PTR [rip+0x8664]        # 0x14003d3b8
   140034d54:	nop
   140034d55:	lea    rsi,[rdi+0x48]
   140034d59:	mov    rcx,rsi
   140034d5c:	call   QWORD PTR [rip+0x8666]        # 0x14003d3c8
   140034d62:	mov    rbx,QWORD PTR [rdi+0x40]
   140034d66:	test   rbx,rbx
   140034d69:	je     0x140034d8d
   140034d6b:	mov    rcx,QWORD PTR [rbx]
   140034d6e:	test   rcx,rcx
   140034d71:	je     0x140034d7d
   140034d73:	call   QWORD PTR [rip+0x88cf]        # 0x14003d648
   140034d79:	and    QWORD PTR [rbx],0x0
   140034d7d:	and    DWORD PTR [rbx+0x8],0x0
   140034d81:	and    DWORD PTR [rbx+0xc],0x0
   140034d85:	mov    rcx,rbx
   140034d88:	call   0x140013de0
   140034d8d:	and    QWORD PTR [rdi+0x40],0x0
   140034d92:	mov    rcx,rsi
   140034d95:	call   QWORD PTR [rip+0x863d]        # 0x14003d3d8
   140034d9b:	mov    rcx,rsi
   140034d9e:	call   QWORD PTR [rip+0x8614]        # 0x14003d3b8
   140034da4:	nop
   140034da5:	mov    rsi,QWORD PTR [rdi+0x38]
   140034da9:	test   rsi,rsi
   140034dac:	je     0x140034dc4
   140034dae:	mov    rax,QWORD PTR [rsi]
   140034db1:	mov    rbx,QWORD PTR [rax+0x10]
   140034db5:	mov    rcx,rbx
   140034db8:	call   QWORD PTR [rip+0x896a]        # 0x14003d728
   140034dbe:	mov    rcx,rsi
   140034dc1:	call   rbx
   140034dc3:	nop
   140034dc4:	mov    rsi,QWORD PTR [rdi+0x30]
   140034dc8:	test   rsi,rsi
   140034dcb:	je     0x140034de3
   140034dcd:	mov    rax,QWORD PTR [rsi]
   140034dd0:	mov    rbx,QWORD PTR [rax+0x10]
   140034dd4:	mov    rcx,rbx
   140034dd7:	call   QWORD PTR [rip+0x894b]        # 0x14003d728
   140034ddd:	mov    rcx,rsi
   140034de0:	call   rbx
   140034de2:	nop
   140034de3:	lea    rcx,[rdi+0x8]
   140034de7:	mov    rbx,QWORD PTR [rsp+0x48]
   140034dec:	mov    rsi,QWORD PTR [rsp+0x50]
   140034df1:	add    rsp,0x30
   140034df5:	pop    rdi
   140034df6:	rex.W jmp QWORD PTR [rip+0x85bb]        # 0x14003d3b8
   140034dfd:	mov    rcx,QWORD PTR [rdx+0x40]
   140034e04:	add    rcx,0x8
   140034e08:	jmp    0x14000db1c
   140034e0d:	mov    rcx,QWORD PTR [rdx+0x40]
   140034e14:	add    rcx,0x30
   140034e18:	jmp    0x14000f4f0
   140034e1d:	mov    rcx,QWORD PTR [rdx+0x40]
   140034e24:	add    rcx,0x38
   140034e28:	jmp    0x14000f4f0
   140034e2d:	mov    rcx,QWORD PTR [rdx+0x40]
   140034e34:	add    rcx,0x40
   140034e38:	jmp    0x140034c70
   140034e3d:	mov    rcx,QWORD PTR [rdx+0x40]
   140034e44:	add    rcx,0x90
   140034e4b:	jmp    0x14000db1c
   140034e50:	mov    rcx,QWORD PTR [rdx+0x40]
   140034e57:	add    rcx,0xb8
   140034e5e:	jmp    0x14000db1c
   140034e63:	mov    rcx,QWORD PTR [rdx+0x40]
   140034e6a:	add    rcx,0xe0
   140034e71:	jmp    0x140034c64
   140034e76:	int3   
   140034e77:	int3   
   140034e78:	int3   
   140034e79:	int3   
   140034e7a:	int3   
   140034e7b:	int3   
   140034e7c:	sub    rsp,0x28
   140034e80:	test   edx,edx
   140034e82:	js     0x140034e98
   140034e84:	cmp    edx,DWORD PTR [rcx+0x8]
   140034e87:	jge    0x140034e98
   140034e89:	mov    rax,QWORD PTR [rcx]
   140034e8c:	movsxd rdx,edx
   140034e8f:	lea    rax,[rax+rdx*8]
   140034e93:	add    rsp,0x28
   140034e97:	ret    
   140034e98:	xor    r9d,r9d
   140034e9b:	xor    r8d,r8d
   140034e9e:	mov    ecx,0xc000008c
   140034ea3:	lea    edx,[r9+0x1]
   140034ea7:	call   QWORD PTR [rip+0x82cb]        # 0x14003d178
   140034ead:	int3   
   140034eae:	int3   
   140034eaf:	int3   
   140034eb0:	int3   
   140034eb1:	int3   
   140034eb2:	int3   
   140034eb3:	int3   
   140034eb4:	mov    QWORD PTR [rsp+0x8],rbx
   140034eb9:	mov    QWORD PTR [rsp+0x10],rsi
   140034ebe:	push   rdi
   140034ebf:	sub    rsp,0x20
   140034ec3:	mov    edi,DWORD PTR [rcx+0x8]
   140034ec6:	mov    rsi,rdx
   140034ec9:	mov    rbx,rcx
   140034ecc:	cmp    edi,DWORD PTR [rcx+0xc]
   140034ecf:	jne    0x140034f08
   140034ed1:	cmp    DWORD PTR [rcx+0xc],0x0
   140034ed5:	jne    0x140034ede
   140034ed7:	mov    edi,0x1
   140034edc:	jmp    0x140034ee2
   140034ede:	add    edi,edi
   140034ee0:	js     0x140034f36
   140034ee2:	movsxd rdx,edi
   140034ee5:	cmp    rdx,0xfffffff
   140034eec:	ja     0x140034f36
   140034eee:	mov    rcx,QWORD PTR [rcx]
   140034ef1:	mov    r8d,0x8
   140034ef7:	call   QWORD PTR [rip+0x19103]        # 0x14004e000
   140034efd:	test   rax,rax
   140034f00:	je     0x140034f36
   140034f02:	mov    DWORD PTR [rbx+0xc],edi
   140034f05:	mov    QWORD PTR [rbx],rax
   140034f08:	movsxd rdx,DWORD PTR [rbx+0x8]
   140034f0c:	mov    rcx,QWORD PTR [rbx]
   140034f0f:	lea    r8,[rcx+rdx*8]
   140034f13:	test   r8,r8
   140034f16:	je     0x140034f1e
   140034f18:	mov    rcx,QWORD PTR [rsi]
   140034f1b:	mov    QWORD PTR [r8],rcx
   140034f1e:	inc    DWORD PTR [rbx+0x8]
   140034f21:	mov    eax,0x1
   140034f26:	mov    rbx,QWORD PTR [rsp+0x30]
   140034f2b:	mov    rsi,QWORD PTR [rsp+0x38]
   140034f30:	add    rsp,0x20
   140034f34:	pop    rdi
   140034f35:	ret    
   140034f36:	xor    eax,eax
   140034f38:	jmp    0x140034f26
   140034f3a:	int3   
   140034f3b:	int3   
   140034f3c:	int3   
   140034f3d:	int3   
   140034f3e:	int3   
   140034f3f:	int3   
   140034f40:	mov    rax,rsp
   140034f43:	mov    QWORD PTR [rax+0x8],rbx
   140034f47:	mov    QWORD PTR [rax+0x10],rbp
   140034f4b:	mov    QWORD PTR [rax+0x18],rsi
   140034f4f:	mov    QWORD PTR [rax+0x20],rdi
   140034f53:	push   r14
   140034f55:	sub    rsp,0x30
   140034f59:	mov    ebp,DWORD PTR [rcx+0x8]
   140034f5c:	xor    r14d,r14d
   140034f5f:	mov    rsi,rcx
   140034f62:	test   ebp,ebp
   140034f64:	jle    0x140034fa4
   140034f66:	mov    edx,r14d
   140034f69:	mov    rcx,rsi
   140034f6c:	call   0x14000f858
   140034f71:	movups xmm0,XMMWORD PTR [rsi+0x3c]
   140034f75:	mov    rdi,QWORD PTR [rax]
   140034f78:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140034f7e:	mov    rax,QWORD PTR [rdi]
   140034f81:	mov    rbx,QWORD PTR [rax+0x20]
   140034f85:	mov    rcx,rbx
   140034f88:	call   QWORD PTR [rip+0x879a]        # 0x14003d728
   140034f8e:	mov    r8d,DWORD PTR [rsi+0x38]
   140034f92:	lea    rdx,[rsp+0x20]
   140034f97:	mov    rcx,rdi
   140034f9a:	call   rbx
   140034f9c:	inc    r14d
   140034f9f:	cmp    r14d,ebp
   140034fa2:	jl     0x140034f66
   140034fa4:	mov    rcx,QWORD PTR [rsi+0x50]
   140034fa8:	test   rcx,rcx
   140034fab:	je     0x140034fb3
   140034fad:	call   QWORD PTR [rip+0x8435]        # 0x14003d3e8
   140034fb3:	mov    rbx,QWORD PTR [rsp+0x40]
   140034fb8:	mov    rbp,QWORD PTR [rsp+0x48]
   140034fbd:	mov    rsi,QWORD PTR [rsp+0x50]
   140034fc2:	mov    rdi,QWORD PTR [rsp+0x58]
   140034fc7:	add    rsp,0x30
   140034fcb:	pop    r14
   140034fcd:	ret    
   140034fce:	int3   
   140034fcf:	int3   
   140034fd0:	int3   
   140034fd1:	int3   
   140034fd2:	int3   
   140034fd3:	int3   
   140034fd4:	mov    rax,rsp
   140034fd7:	mov    QWORD PTR [rax+0x8],rbx
   140034fdb:	mov    QWORD PTR [rax+0x10],rbp
   140034fdf:	mov    QWORD PTR [rax+0x18],rsi
   140034fe3:	mov    QWORD PTR [rax+0x20],rdi
   140034fe7:	push   r14
   140034fe9:	sub    rsp,0x20
   140034fed:	mov    ebp,DWORD PTR [rcx+0x8]
   140034ff0:	xor    r14d,r14d
   140034ff3:	mov    rsi,rcx
   140034ff6:	test   ebp,ebp
   140034ff8:	jle    0x140035028
   140034ffa:	mov    edx,r14d
   140034ffd:	mov    rcx,rsi
   140035000:	call   0x14000f858
   140035005:	mov    rdi,QWORD PTR [rax]
   140035008:	mov    rax,QWORD PTR [rdi]
   14003500b:	mov    rbx,QWORD PTR [rax+0x30]
   14003500f:	mov    rcx,rbx
   140035012:	call   QWORD PTR [rip+0x8710]        # 0x14003d728
   140035018:	mov    edx,DWORD PTR [rsi+0x5c]
   14003501b:	mov    rcx,rdi
   14003501e:	call   rbx
   140035020:	inc    r14d
   140035023:	cmp    r14d,ebp
   140035026:	jl     0x140034ffa
   140035028:	mov    rcx,QWORD PTR [rsi+0x50]
   14003502c:	test   rcx,rcx
   14003502f:	je     0x140035037
   140035031:	call   QWORD PTR [rip+0x83b1]        # 0x14003d3e8
   140035037:	mov    rbx,QWORD PTR [rsp+0x30]
   14003503c:	mov    rbp,QWORD PTR [rsp+0x38]
   140035041:	mov    rsi,QWORD PTR [rsp+0x40]
   140035046:	mov    rdi,QWORD PTR [rsp+0x48]
   14003504b:	add    rsp,0x20
   14003504f:	pop    r14
   140035051:	ret    
   140035052:	int3   
   140035053:	int3   
   140035054:	int3   
   140035055:	int3   
   140035056:	int3   
   140035057:	int3   
   140035058:	mov    rax,rsp
   14003505b:	mov    QWORD PTR [rax+0x8],rbx
   14003505f:	mov    QWORD PTR [rax+0x10],rbp
   140035063:	mov    QWORD PTR [rax+0x18],rsi
   140035067:	mov    QWORD PTR [rax+0x20],rdi
   14003506b:	push   r14
   14003506d:	sub    rsp,0x20
   140035071:	mov    ebp,DWORD PTR [rcx+0x8]
   140035074:	xor    r14d,r14d
   140035077:	mov    rsi,rcx
   14003507a:	test   ebp,ebp
   14003507c:	jle    0x1400350b6
   14003507e:	mov    edx,r14d
   140035081:	mov    rcx,rsi
   140035084:	call   0x14000f858
   140035089:	mov    rdi,QWORD PTR [rax]
   14003508c:	mov    rax,QWORD PTR [rdi]
   14003508f:	mov    rbx,QWORD PTR [rax+0x48]
   140035093:	mov    rcx,rbx
   140035096:	call   QWORD PTR [rip+0x868c]        # 0x14003d728
   14003509c:	mov    r8d,DWORD PTR [rsi+0xa0]
   1400350a3:	mov    rcx,rdi
   1400350a6:	mov    edx,DWORD PTR [rsi+0x9c]
   1400350ac:	call   rbx
   1400350ae:	inc    r14d
   1400350b1:	cmp    r14d,ebp
   1400350b4:	jl     0x14003507e
   1400350b6:	mov    rcx,QWORD PTR [rsi+0x50]
   1400350ba:	test   rcx,rcx
   1400350bd:	je     0x1400350c5
   1400350bf:	call   QWORD PTR [rip+0x8323]        # 0x14003d3e8
   1400350c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400350ca:	mov    rbp,QWORD PTR [rsp+0x38]
   1400350cf:	mov    rsi,QWORD PTR [rsp+0x40]
   1400350d4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400350d9:	add    rsp,0x20
   1400350dd:	pop    r14
   1400350df:	ret    
   1400350e0:	int3   
   1400350e1:	int3   
   1400350e2:	int3   
   1400350e3:	int3   
   1400350e4:	int3   
   1400350e5:	int3   
   1400350e6:	int3   
   1400350e7:	int3   
   1400350e8:	mov    rax,rsp
   1400350eb:	mov    QWORD PTR [rax+0x8],rbx
   1400350ef:	mov    QWORD PTR [rax+0x10],rbp
   1400350f3:	mov    QWORD PTR [rax+0x18],rsi
   1400350f7:	mov    QWORD PTR [rax+0x20],rdi
   1400350fb:	push   r14
   1400350fd:	sub    rsp,0x30
   140035101:	mov    ebp,DWORD PTR [rcx+0x8]
   140035104:	xor    r14d,r14d
   140035107:	mov    rsi,rcx
   14003510a:	test   ebp,ebp
   14003510c:	jle    0x140035157
   14003510e:	mov    edx,r14d
   140035111:	mov    rcx,rsi
   140035114:	call   0x14000f858
   140035119:	mov    rdi,QWORD PTR [rax]
   14003511c:	mov    rax,QWORD PTR [rdi]
   14003511f:	mov    rbx,QWORD PTR [rax+0x38]
   140035123:	mov    rcx,rbx
   140035126:	call   QWORD PTR [rip+0x85fc]        # 0x14003d728
   14003512c:	mov    eax,DWORD PTR [rsi+0xb0]
   140035132:	mov    rcx,rdi
   140035135:	mov    r9d,DWORD PTR [rsi+0xac]
   14003513c:	mov    r8d,DWORD PTR [rsi+0xa8]
   140035143:	mov    edx,DWORD PTR [rsi+0xa4]
   140035149:	mov    DWORD PTR [rsp+0x20],eax
   14003514d:	call   rbx
   14003514f:	inc    r14d
   140035152:	cmp    r14d,ebp
   140035155:	jl     0x14003510e
   140035157:	mov    rcx,QWORD PTR [rsi+0x50]
   14003515b:	test   rcx,rcx
   14003515e:	je     0x140035166
   140035160:	call   QWORD PTR [rip+0x8282]        # 0x14003d3e8
   140035166:	mov    rbx,QWORD PTR [rsp+0x40]
   14003516b:	mov    rbp,QWORD PTR [rsp+0x48]
   140035170:	mov    rsi,QWORD PTR [rsp+0x50]
   140035175:	mov    rdi,QWORD PTR [rsp+0x58]
   14003517a:	add    rsp,0x30
   14003517e:	pop    r14
   140035180:	ret    
   140035181:	int3   
   140035182:	int3   
   140035183:	int3   
   140035184:	int3   
   140035185:	int3   
   140035186:	int3   
   140035187:	int3   
   140035188:	mov    rax,rsp
   14003518b:	mov    QWORD PTR [rax+0x8],rbx
   14003518f:	mov    QWORD PTR [rax+0x10],rbp
   140035193:	mov    QWORD PTR [rax+0x18],rsi
   140035197:	mov    QWORD PTR [rax+0x20],rdi
   14003519b:	push   r14
   14003519d:	sub    rsp,0x30
   1400351a1:	mov    ebp,DWORD PTR [rcx+0x8]
   1400351a4:	xor    r14d,r14d
   1400351a7:	mov    rsi,rcx
   1400351aa:	test   ebp,ebp
   1400351ac:	jle    0x1400351f0
   1400351ae:	mov    edx,r14d
   1400351b1:	mov    rcx,rsi
   1400351b4:	call   0x14000f858
   1400351b9:	mov    rdi,QWORD PTR [rax]
   1400351bc:	mov    rax,QWORD PTR [rdi]
   1400351bf:	mov    rbx,QWORD PTR [rax+0x40]
   1400351c3:	mov    rcx,rbx
   1400351c6:	call   QWORD PTR [rip+0x855c]        # 0x14003d728
   1400351cc:	mov    rax,QWORD PTR [rsi+0x80]
   1400351d3:	mov    rcx,rdi
   1400351d6:	mov    r9,QWORD PTR [rsi+0x78]
   1400351da:	mov    r8,QWORD PTR [rsi+0x70]
   1400351de:	mov    edx,DWORD PTR [rsi+0x6c]
   1400351e1:	mov    QWORD PTR [rsp+0x20],rax
   1400351e6:	call   rbx
   1400351e8:	inc    r14d
   1400351eb:	cmp    r14d,ebp
   1400351ee:	jl     0x1400351ae
   1400351f0:	mov    rcx,QWORD PTR [rsi+0x50]
   1400351f4:	test   rcx,rcx
   1400351f7:	je     0x1400351ff
   1400351f9:	call   QWORD PTR [rip+0x81e9]        # 0x14003d3e8
   1400351ff:	mov    rbx,QWORD PTR [rsp+0x40]
   140035204:	mov    rbp,QWORD PTR [rsp+0x48]
   140035209:	mov    rsi,QWORD PTR [rsp+0x50]
   14003520e:	mov    rdi,QWORD PTR [rsp+0x58]
   140035213:	add    rsp,0x30
   140035217:	pop    r14
   140035219:	ret    
   14003521a:	int3   
   14003521b:	int3   
   14003521c:	int3   
   14003521d:	int3   
   14003521e:	int3   
   14003521f:	int3   
   140035220:	rex push rbx
   140035222:	sub    rsp,0x20
   140035226:	mov    rbx,rcx
   140035229:	mov    rcx,QWORD PTR [rcx+0x88]
   140035230:	call   QWORD PTR [rip+0x81b2]        # 0x14003d3e8
   140035236:	mov    rcx,QWORD PTR [rbx+0x70]
   14003523a:	mov    edx,0x3e8
   14003523f:	and    QWORD PTR [rbx+0x88],0x0
   140035247:	and    QWORD PTR [rbx+0x78],0x0
   14003524c:	and    QWORD PTR [rbx+0x80],0x0
   140035254:	call   QWORD PTR [rip+0x819e]        # 0x14003d3f8
   14003525a:	mov    rcx,QWORD PTR [rbx+0x70]
   14003525e:	call   QWORD PTR [rip+0x7f44]        # 0x14003d1a8
   140035264:	and    QWORD PTR [rbx+0x70],0x0
   140035269:	add    rsp,0x20
   14003526d:	pop    rbx
   14003526e:	ret    
   14003526f:	int3   
   140035270:	int3   
   140035271:	int3   
   140035272:	int3   
   140035273:	int3   
   140035274:	int3   
   140035275:	int3   
   140035276:	int3   
   140035277:	int3   
   140035278:	mov    rax,rsp
   14003527b:	mov    QWORD PTR [rax+0x10],rbx
   14003527f:	mov    QWORD PTR [rax+0x18],rsi
   140035283:	mov    QWORD PTR [rax+0x8],rcx
   140035287:	push   rdi
   140035288:	sub    rsp,0x20
   14003528c:	and    QWORD PTR [rax+0x8],0x0
   140035291:	lea    rdx,[rax+0x8]
   140035295:	xor    ecx,ecx
   140035297:	mov    sil,0x1
   14003529a:	call   0x140013868
   14003529f:	mov    rdi,QWORD PTR [rsp+0x30]
   1400352a4:	test   rdi,rdi
   1400352a7:	je     0x1400352d6
   1400352a9:	mov    rax,QWORD PTR [rdi]
   1400352ac:	mov    rbx,QWORD PTR [rax+0x68]
   1400352b0:	mov    rcx,rbx
   1400352b3:	call   QWORD PTR [rip+0x846f]        # 0x14003d728
   1400352b9:	mov    rcx,rdi
   1400352bc:	call   rbx
   1400352be:	mov    rdx,QWORD PTR [rdi]
   1400352c1:	mov    sil,al
   1400352c4:	mov    rbx,QWORD PTR [rdx+0x10]
   1400352c8:	mov    rcx,rbx
   1400352cb:	call   QWORD PTR [rip+0x8457]        # 0x14003d728
   1400352d1:	mov    rcx,rdi
   1400352d4:	call   rbx
   1400352d6:	mov    rbx,QWORD PTR [rsp+0x38]
   1400352db:	mov    al,sil
   1400352de:	mov    rsi,QWORD PTR [rsp+0x40]
   1400352e3:	add    rsp,0x20
   1400352e7:	pop    rdi
   1400352e8:	ret    
   1400352e9:	int3   
   1400352ea:	int3   
   1400352eb:	int3   
   1400352ec:	int3   
   1400352ed:	int3   
   1400352ee:	int3   
   1400352ef:	int3   
   1400352f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400352f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400352fa:	push   rdi
   1400352fb:	sub    rsp,0x30
   1400352ff:	cmp    BYTE PTR [rip+0x1989a],0x0        # 0x14004eba0
   140035306:	mov    rsi,rdx
   140035309:	mov    rdi,rcx
   14003530c:	jne    0x140035355
   14003530e:	cmp    QWORD PTR [rcx],rdx
   140035311:	je     0x140035355
   140035313:	add    rcx,0x8
   140035317:	call   QWORD PTR [rip+0x80ab]        # 0x14003d3c8
   14003531d:	mov    QWORD PTR [rdi],rsi
   140035320:	test   rsi,rsi
   140035323:	je     0x140035336
   140035325:	mov    rdx,QWORD PTR [rdi+0x30]
   140035329:	test   rdx,rdx
   14003532c:	je     0x140035336
   14003532e:	mov    rcx,rsi
   140035331:	call   0x1400332a0
   140035336:	lea    rcx,[rdi+0x8]
   14003533a:	call   QWORD PTR [rip+0x8098]        # 0x14003d3d8
   140035340:	xor    r9d,r9d
   140035343:	mov    BYTE PTR [rsp+0x20],0x1
   140035348:	xor    r8d,r8d
   14003534b:	xor    edx,edx
   14003534d:	mov    rcx,rdi
   140035350:	call   0x140012368
   140035355:	mov    rbx,QWORD PTR [rsp+0x40]
   14003535a:	mov    rsi,QWORD PTR [rsp+0x48]
   14003535f:	add    rsp,0x30
   140035363:	pop    rdi
   140035364:	ret    
   140035365:	int3   
   140035366:	int3   
   140035367:	int3   
   140035368:	int3   
   140035369:	int3   
   14003536a:	int3   
   14003536b:	int3   
   14003536c:	mov    QWORD PTR [rsp+0x8],rbx
   140035371:	mov    QWORD PTR [rsp+0x10],rsi
   140035376:	push   rdi
   140035377:	sub    rsp,0x30
   14003537b:	cmp    BYTE PTR [rip+0x1981e],0x0        # 0x14004eba0
   140035382:	mov    rsi,rdx
   140035385:	mov    rdi,rcx
   140035388:	jne    0x1400353ca
   14003538a:	cmp    QWORD PTR [rcx],rdx
   14003538d:	jne    0x1400353ca
   14003538f:	add    rcx,0x8
   140035393:	call   QWORD PTR [rip+0x802f]        # 0x14003d3c8
   140035399:	cmp    rsi,QWORD PTR [rdi]
   14003539c:	jne    0x1400353ab
   14003539e:	and    QWORD PTR [rdi],0x0
   1400353a2:	lea    rcx,[rdi+0x38]
   1400353a6:	call   0x1400013e4
   1400353ab:	lea    rcx,[rdi+0x8]
   1400353af:	call   QWORD PTR [rip+0x8023]        # 0x14003d3d8
   1400353b5:	xor    r9d,r9d
   1400353b8:	mov    BYTE PTR [rsp+0x20],0x1
   1400353bd:	xor    r8d,r8d
   1400353c0:	xor    edx,edx
   1400353c2:	mov    rcx,rdi
   1400353c5:	call   0x140012368
   1400353ca:	mov    rbx,QWORD PTR [rsp+0x40]
   1400353cf:	mov    rsi,QWORD PTR [rsp+0x48]
   1400353d4:	add    rsp,0x30
   1400353d8:	pop    rdi
   1400353d9:	ret    
   1400353da:	int3   
   1400353db:	int3   
   1400353dc:	int3   
   1400353dd:	int3   
   1400353de:	int3   
   1400353df:	int3   
   1400353e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400353e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400353ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400353ef:	push   rdi
   1400353f0:	sub    rsp,0x20
   1400353f4:	mov    rsi,rcx
   1400353f7:	mov    rbp,rdx
   1400353fa:	add    rcx,0x48
   1400353fe:	call   QWORD PTR [rip+0x7fc4]        # 0x14003d3c8
   140035404:	mov    rdi,QWORD PTR [rsi+0x40]
   140035408:	xor    ebx,ebx
   14003540a:	cmp    DWORD PTR [rdi+0x8],ebx
   14003540d:	jle    0x140035479
   14003540f:	mov    edx,ebx
   140035411:	mov    rcx,rdi
   140035414:	call   0x14000f858
   140035419:	cmp    QWORD PTR [rax],rbp
   14003541c:	jne    0x140035472
   14003541e:	test   ebx,ebx
   140035420:	js     0x140035472
   140035422:	mov    edx,DWORD PTR [rdi+0x8]
   140035425:	cmp    ebx,edx
   140035427:	jge    0x140035472
   140035429:	lea    eax,[rdx-0x1]
   14003542c:	cmp    ebx,eax
   14003542e:	je     0x14003546f
   140035430:	sub    edx,ebx
   140035432:	movsxd rcx,ebx
   140035435:	lea    eax,[rdx-0x1]
   140035438:	movsxd rdx,edx
   14003543b:	movsxd r9,eax
   14003543e:	mov    rax,QWORD PTR [rdi]
   140035441:	shl    r9,0x3
   140035445:	shl    rdx,0x3
   140035449:	lea    rcx,[rax+rcx*8]
   14003544d:	lea    r8,[rcx+0x8]
   140035451:	call   QWORD PTR [rip+0x81d1]        # 0x14003d628
   140035457:	test   eax,eax
   140035459:	je     0x14003546f
   14003545b:	cmp    eax,0xc
   14003545e:	je     0x1400354ae
   140035460:	cmp    eax,0x16
   140035463:	je     0x1400354a3
   140035465:	cmp    eax,0x22
   140035468:	je     0x1400354a3
   14003546a:	cmp    eax,0x50
   14003546d:	jne    0x140035498
   14003546f:	dec    DWORD PTR [rdi+0x8]
   140035472:	inc    ebx
   140035474:	cmp    ebx,DWORD PTR [rdi+0x8]
   140035477:	jl     0x14003540f
   140035479:	lea    rcx,[rsi+0x48]
   14003547d:	mov    rbx,QWORD PTR [rsp+0x30]
   140035482:	mov    rbp,QWORD PTR [rsp+0x38]
   140035487:	mov    rsi,QWORD PTR [rsp+0x40]
   14003548c:	add    rsp,0x20
   140035490:	pop    rdi
   140035491:	rex.W jmp QWORD PTR [rip+0x7f40]        # 0x14003d3d8
   140035498:	mov    ecx,0x80004005
   14003549d:	call   0x1400152fc
   1400354a2:	int3   
   1400354a3:	mov    ecx,0x80070057
   1400354a8:	call   0x1400152fc
   1400354ad:	int3   
   1400354ae:	mov    ecx,0x8007000e
   1400354b3:	call   0x1400152fc
   1400354b8:	int3   
   1400354b9:	int3   
   1400354ba:	int3   
   1400354bb:	int3   
   1400354bc:	int3   
   1400354bd:	int3   
   1400354be:	int3   
   1400354bf:	int3   
   1400354c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400354c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400354ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400354cf:	push   rdi
   1400354d0:	sub    rsp,0x20
   1400354d4:	mov    esi,r8d
   1400354d7:	mov    ebp,edx
   1400354d9:	mov    rdi,rcx
   1400354dc:	mov    ebx,0x8007000e
   1400354e1:	call   0x140034b34
   1400354e6:	test   rax,rax
   1400354e9:	je     0x1400354fe
   1400354eb:	mov    rdx,rax
   1400354ee:	mov    DWORD PTR [rax+0x18],ebp
   1400354f1:	mov    rcx,rdi
   1400354f4:	mov    DWORD PTR [rax+0x1c],esi
   1400354f7:	call   0x1400356a4
   1400354fc:	mov    ebx,eax
   1400354fe:	mov    rbp,QWORD PTR [rsp+0x38]
   140035503:	mov    eax,ebx
   140035505:	mov    rbx,QWORD PTR [rsp+0x30]
   14003550a:	mov    rsi,QWORD PTR [rsp+0x40]
   14003550f:	add    rsp,0x20
   140035513:	pop    rdi
   140035514:	ret    
   140035515:	int3   
   140035516:	int3   
   140035517:	int3   
   140035518:	int3   
   140035519:	int3   
   14003551a:	int3   
   14003551b:	int3   
   14003551c:	mov    rax,rsp
   14003551f:	mov    QWORD PTR [rax+0x8],rbx
   140035523:	mov    QWORD PTR [rax+0x10],rbp
   140035527:	mov    QWORD PTR [rax+0x18],rsi
   14003552b:	mov    QWORD PTR [rax+0x20],rdi
   14003552f:	push   r14
   140035531:	sub    rsp,0x20
   140035535:	mov    esi,r9d
   140035538:	mov    ebp,r8d
   14003553b:	mov    r14d,edx
   14003553e:	mov    rdi,rcx
   140035541:	mov    ebx,0x8007000e
   140035546:	call   0x140034bcc
   14003554b:	test   rax,rax
   14003554e:	je     0x140035567
   140035550:	mov    rdx,rax
   140035553:	mov    DWORD PTR [rax+0x18],r14d
   140035557:	mov    rcx,rdi
   14003555a:	mov    DWORD PTR [rax+0x1c],ebp
   14003555d:	mov    DWORD PTR [rax+0x20],esi
   140035560:	call   0x1400356a4
   140035565:	mov    ebx,eax
   140035567:	mov    rbp,QWORD PTR [rsp+0x38]
   14003556c:	mov    eax,ebx
   14003556e:	mov    rbx,QWORD PTR [rsp+0x30]
   140035573:	mov    rsi,QWORD PTR [rsp+0x40]
   140035578:	mov    rdi,QWORD PTR [rsp+0x48]
   14003557d:	add    rsp,0x20
   140035581:	pop    r14
   140035583:	ret    
   140035584:	int3   
   140035585:	int3   
   140035586:	int3   
   140035587:	int3   
   140035588:	int3   
   140035589:	int3   
   14003558a:	int3   
   14003558b:	int3   
   14003558c:	mov    rax,rsp
   14003558f:	push   rdi
   140035590:	sub    rsp,0x30
   140035594:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14003559c:	mov    QWORD PTR [rax+0x8],rbx
   1400355a0:	mov    QWORD PTR [rax+0x10],rsi
   1400355a4:	mov    rsi,rdx
   1400355a7:	mov    rdi,rcx
   1400355aa:	cmp    BYTE PTR [rip+0x195ef],0x0        # 0x14004eba0
   1400355b1:	jne    0x1400355df
   1400355b3:	lea    rbx,[rcx+0x8]
   1400355b7:	mov    QWORD PTR [rax+0x18],rbx
   1400355bb:	mov    rcx,rbx
   1400355be:	call   QWORD PTR [rip+0x7e04]        # 0x14003d3c8
   1400355c4:	nop
   1400355c5:	mov    rcx,QWORD PTR [rdi]
   1400355c8:	test   rcx,rcx
   1400355cb:	je     0x1400355d6
   1400355cd:	mov    rdx,rsi
   1400355d0:	call   0x1400334c0
   1400355d5:	nop
   1400355d6:	mov    rcx,rbx
   1400355d9:	call   QWORD PTR [rip+0x7df9]        # 0x14003d3d8
   1400355df:	xor    eax,eax
   1400355e1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400355e6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400355eb:	add    rsp,0x30
   1400355ef:	pop    rdi
   1400355f0:	ret    
   1400355f1:	lea    rcx,[rdx+0x50]
   1400355f8:	jmp    0x14002a384
   1400355fd:	int3   
   1400355fe:	int3   
   1400355ff:	int3   
   140035600:	int3   
   140035601:	int3   
   140035602:	int3   
   140035603:	int3   
   140035604:	rex push rdi
   140035606:	sub    rsp,0x30
   14003560a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140035613:	mov    QWORD PTR [rsp+0x40],rbx
   140035618:	mov    rdi,rcx
   14003561b:	cmp    BYTE PTR [rip+0x1957e],0x0        # 0x14004eba0
   140035622:	jne    0x14003564e
   140035624:	lea    rbx,[rcx+0x8]
   140035628:	mov    QWORD PTR [rsp+0x48],rbx
   14003562d:	mov    rcx,rbx
   140035630:	call   QWORD PTR [rip+0x7d92]        # 0x14003d3c8
   140035636:	nop
   140035637:	mov    rcx,QWORD PTR [rdi]
   14003563a:	test   rcx,rcx
   14003563d:	je     0x140035645
   14003563f:	call   0x140033688
   140035644:	nop
   140035645:	mov    rcx,rbx
   140035648:	call   QWORD PTR [rip+0x7d8a]        # 0x14003d3d8
   14003564e:	xor    eax,eax
   140035650:	mov    rbx,QWORD PTR [rsp+0x40]
   140035655:	add    rsp,0x30
   140035659:	pop    rdi
   14003565a:	ret    
   14003565b:	lea    rcx,[rdx+0x48]
   140035662:	jmp    0x14002a384
   140035667:	int3   
   140035668:	int3   
   140035669:	int3   
   14003566a:	int3   
   14003566b:	int3   
   14003566c:	int3   
   14003566d:	int3   
   14003566e:	int3   
   14003566f:	int3   
   140035670:	rex push rbx
   140035672:	sub    rsp,0x30
   140035676:	mov    rbx,rcx
   140035679:	call   0x140035278
   14003567e:	test   al,al
   140035680:	jne    0x140035697
   140035682:	xor    r9d,r9d
   140035685:	mov    BYTE PTR [rsp+0x20],0x1
   14003568a:	xor    r8d,r8d
   14003568d:	xor    edx,edx
   14003568f:	mov    rcx,rbx
   140035692:	call   0x140012368
   140035697:	add    rsp,0x30
   14003569b:	pop    rbx
   14003569c:	ret    
   14003569d:	int3   
   14003569e:	int3   
   14003569f:	int3   
   1400356a0:	int3   
   1400356a1:	int3   
   1400356a2:	int3   
   1400356a3:	int3   
   1400356a4:	mov    QWORD PTR [rsp+0x18],rbx
   1400356a9:	mov    QWORD PTR [rsp+0x20],rsi
   1400356ae:	mov    QWORD PTR [rsp+0x10],rdx
   1400356b3:	push   rdi
   1400356b4:	sub    rsp,0x20
   1400356b8:	lea    rsi,[rcx+0xb8]
   1400356bf:	mov    rbx,rcx
   1400356c2:	mov    rcx,rsi
   1400356c5:	mov    edi,0x8007000e
   1400356ca:	call   QWORD PTR [rip+0x7cf8]        # 0x14003d3c8
   1400356d0:	cmp    QWORD PTR [rbx+0x110],0x0
   1400356d8:	jne    0x140035701
   1400356da:	mov    ecx,0x10
   1400356df:	call   0x140013d94
   1400356e4:	mov    QWORD PTR [rsp+0x30],rax
   1400356e9:	test   rax,rax
   1400356ec:	je     0x1400356fa
   1400356ee:	and    QWORD PTR [rax],0x0
   1400356f2:	and    DWORD PTR [rax+0x8],0x0
   1400356f6:	and    DWORD PTR [rax+0xc],0x0
   1400356fa:	mov    QWORD PTR [rbx+0x110],rax
   140035701:	mov    rcx,QWORD PTR [rbx+0x110]
   140035708:	test   rcx,rcx
   14003570b:	je     0x140035729
   14003570d:	cmp    DWORD PTR [rcx+0x8],0xc8
   140035714:	jl     0x14003571d
   140035716:	mov    edi,0x6bb
   14003571b:	jmp    0x140035729
   14003571d:	lea    rdx,[rsp+0x38]
   140035722:	call   0x140034eb4
   140035727:	xor    edi,edi
   140035729:	mov    rcx,rsi
   14003572c:	call   QWORD PTR [rip+0x7ca6]        # 0x14003d3d8
   140035732:	mov    rcx,QWORD PTR [rbx+0x80]
   140035739:	call   QWORD PTR [rip+0x7ca9]        # 0x14003d3e8
   14003573f:	mov    rbx,QWORD PTR [rsp+0x40]
   140035744:	mov    eax,edi
   140035746:	mov    rsi,QWORD PTR [rsp+0x48]
   14003574b:	add    rsp,0x20
   14003574f:	pop    rdi
   140035750:	ret    
   140035751:	int3   
   140035752:	int3   
   140035753:	int3   
   140035754:	int3   
   140035755:	int3   
   140035756:	int3   
   140035757:	int3   
   140035758:	mov    QWORD PTR [rsp+0x8],rbx
   14003575d:	mov    QWORD PTR [rsp+0x10],rbp
   140035762:	mov    QWORD PTR [rsp+0x18],rsi
   140035767:	push   rdi
   140035768:	sub    rsp,0x30
   14003576c:	cmp    BYTE PTR [rip+0x1942d],0x0        # 0x14004eba0
   140035773:	mov    rbp,rdx
   140035776:	mov    rdi,rcx
   140035779:	jne    0x1400357c0
   14003577b:	add    rcx,0x8
   14003577f:	call   QWORD PTR [rip+0x7c43]        # 0x14003d3c8
   140035785:	lea    rsi,[rdi+0x38]
   140035789:	mov    rcx,rsi
   14003578c:	call   0x1400013e4
   140035791:	cmp    QWORD PTR [rsi],rbp
   140035794:	je     0x1400357a1
   140035796:	mov    rdx,rbp
   140035799:	mov    rcx,rsi
   14003579c:	call   0x14000dcd0
   1400357a1:	lea    rcx,[rdi+0x8]
   1400357a5:	call   QWORD PTR [rip+0x7c2d]        # 0x14003d3d8
   1400357ab:	xor    r9d,r9d
   1400357ae:	mov    BYTE PTR [rsp+0x20],0x1
   1400357b3:	xor    r8d,r8d
   1400357b6:	xor    edx,edx
   1400357b8:	mov    rcx,rdi
   1400357bb:	call   0x140012368
   1400357c0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400357c5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400357ca:	mov    rsi,QWORD PTR [rsp+0x50]
   1400357cf:	add    rsp,0x30
   1400357d3:	pop    rdi
   1400357d4:	ret    
   1400357d5:	int3   
   1400357d6:	int3   
   1400357d7:	int3   
   1400357d8:	int3   
   1400357d9:	int3   
   1400357da:	int3   
   1400357db:	int3   
   1400357dc:	int3   
   1400357dd:	int3   
   1400357de:	int3   
   1400357df:	int3   
   1400357e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400357e5:	push   rdi
   1400357e6:	sub    rsp,0x30
   1400357ea:	lea    rbx,[rcx-0x20]
   1400357ee:	mov    rcx,rbx
   1400357f1:	call   0x14000cbb4
   1400357f6:	lea    rdi,[rbx+0x30]
   1400357fa:	cmp    QWORD PTR [rdi],0x0
   1400357fe:	jne    0x14003581f
   140035800:	xor    edx,edx
   140035802:	mov    QWORD PTR [rsp+0x20],rdi
   140035807:	lea    r9,[rip+0x94ea]        # 0x14003ecf8
   14003580e:	lea    rcx,[rip+0x94d3]        # 0x14003ece8
   140035815:	lea    r8d,[rdx+0x7]
   140035819:	call   QWORD PTR [rip+0x1d8d9]        # 0x1400530f8
   14003581f:	mov    rdi,QWORD PTR [rdi]
   140035822:	test   rdi,rdi
   140035825:	je     0x14003583c
   140035827:	mov    rax,QWORD PTR [rdi]
   14003582a:	mov    rbx,QWORD PTR [rax+0x68]
   14003582e:	mov    rcx,rbx
   140035831:	call   QWORD PTR [rip+0x7ef1]        # 0x14003d728
   140035837:	mov    rcx,rdi
   14003583a:	call   rbx
   14003583c:	xor    eax,eax
   14003583e:	mov    rbx,QWORD PTR [rsp+0x40]
   140035843:	add    rsp,0x30
   140035847:	pop    rdi
   140035848:	ret    
   140035849:	int3   
   14003584a:	int3   
   14003584b:	int3   
   14003584c:	int3   
   14003584d:	int3   
   14003584e:	int3   
   14003584f:	int3   
   140035850:	mov    QWORD PTR [rsp+0x8],rbx
   140035855:	push   rdi
   140035856:	sub    rsp,0x30
   14003585a:	lea    rdi,[rcx+0x20]
   14003585e:	cmp    QWORD PTR [rdi],0x0
   140035862:	jne    0x140035883
   140035864:	xor    edx,edx
   140035866:	mov    QWORD PTR [rsp+0x20],rdi
   14003586b:	lea    r9,[rip+0x9486]        # 0x14003ecf8
   140035872:	lea    rcx,[rip+0x946f]        # 0x14003ece8
   140035879:	lea    r8d,[rdx+0x7]
   14003587d:	call   QWORD PTR [rip+0x1d875]        # 0x1400530f8
   140035883:	mov    rdi,QWORD PTR [rdi]
   140035886:	test   rdi,rdi
   140035889:	je     0x1400358a0
   14003588b:	mov    rax,QWORD PTR [rdi]
   14003588e:	mov    rbx,QWORD PTR [rax+0x60]
   140035892:	mov    rcx,rbx
   140035895:	call   QWORD PTR [rip+0x7e8d]        # 0x14003d728
   14003589b:	mov    rcx,rdi
   14003589e:	call   rbx
   1400358a0:	xor    eax,eax
   1400358a2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400358a7:	add    rsp,0x30
   1400358ab:	pop    rdi
   1400358ac:	ret    
   1400358ad:	int3   
   1400358ae:	int3   
   1400358af:	int3   
   1400358b0:	int3   
   1400358b1:	int3   
   1400358b2:	int3   
   1400358b3:	int3   
   1400358b4:	int3   
   1400358b5:	int3   
   1400358b6:	int3   
   1400358b7:	int3   
   1400358b8:	int3   
   1400358b9:	int3   
   1400358ba:	int3   
   1400358bb:	int3   
   1400358bc:	int3   
   1400358bd:	int3   
   1400358be:	int3   
   1400358bf:	int3   
   1400358c0:	add    rcx,0xffffffffffffffe8
   1400358c4:	jmp    0x1400359fc
   1400358c9:	int3   
   1400358ca:	int3   
   1400358cb:	int3   
   1400358cc:	int3   
   1400358cd:	int3   
   1400358ce:	int3   
   1400358cf:	int3   
   1400358d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400358d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400358da:	push   rdi
   1400358db:	sub    rsp,0x20
   1400358df:	xor    eax,eax
   1400358e1:	mov    rsi,rdx
   1400358e4:	mov    rbx,rcx
   1400358e7:	cmp    QWORD PTR [rcx+0x28],rax
   1400358eb:	jne    0x1400358f6
   1400358ed:	add    rcx,0xfffffffffffffff8
   1400358f1:	call   0x14000cb50
   1400358f6:	mov    rdi,QWORD PTR [rbx+0x28]
   1400358fa:	test   rdi,rdi
   1400358fd:	je     0x140035917
   1400358ff:	mov    rax,QWORD PTR [rdi]
   140035902:	mov    rbx,QWORD PTR [rax+0x48]
   140035906:	mov    rcx,rbx
   140035909:	call   QWORD PTR [rip+0x7e19]        # 0x14003d728
   14003590f:	mov    rdx,rsi
   140035912:	mov    rcx,rdi
   140035915:	call   rbx
   140035917:	mov    rbx,QWORD PTR [rsp+0x30]
   14003591c:	mov    rsi,QWORD PTR [rsp+0x38]
   140035921:	add    rsp,0x20
   140035925:	pop    rdi
   140035926:	ret    
   140035927:	int3   
   140035928:	int3   
   140035929:	int3   
   14003592a:	int3   
   14003592b:	int3   
   14003592c:	int3   
   14003592d:	int3   
   14003592e:	int3   
   14003592f:	int3   
   140035930:	mov    QWORD PTR [rsp+0x8],rbx
   140035935:	push   rdi
   140035936:	sub    rsp,0x20
   14003593a:	xor    eax,eax
   14003593c:	mov    rbx,rcx
   14003593f:	cmp    QWORD PTR [rcx+0x30],rax
   140035943:	jne    0x14003594a
   140035945:	call   0x14000cb50
   14003594a:	mov    rdi,QWORD PTR [rbx+0x30]
   14003594e:	test   rdi,rdi
   140035951:	je     0x14003596a
   140035953:	mov    rax,QWORD PTR [rdi]
   140035956:	mov    rbx,QWORD PTR [rax+0x48]
   14003595a:	mov    rcx,rbx
   14003595d:	call   QWORD PTR [rip+0x7dc5]        # 0x14003d728
   140035963:	xor    edx,edx
   140035965:	mov    rcx,rdi
   140035968:	call   rbx
   14003596a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003596f:	add    rsp,0x20
   140035973:	pop    rdi
   140035974:	ret    
   140035975:	int3   
   140035976:	int3   
   140035977:	int3   
   140035978:	int3   
   140035979:	int3   
   14003597a:	int3   
   14003597b:	int3   
   14003597c:	int3   
   14003597d:	int3   
   14003597e:	int3   
   14003597f:	int3   
   140035980:	mov    QWORD PTR [rsp+0x8],rbx
   140035985:	push   rdi
   140035986:	sub    rsp,0x20
   14003598a:	mov    rdi,QWORD PTR [rcx+0x28]
   14003598e:	xor    eax,eax
   140035990:	test   rdi,rdi
   140035993:	je     0x1400359aa
   140035995:	mov    rax,QWORD PTR [rdi]
   140035998:	mov    rbx,QWORD PTR [rax+0x78]
   14003599c:	mov    rcx,rbx
   14003599f:	call   QWORD PTR [rip+0x7d83]        # 0x14003d728
   1400359a5:	mov    rcx,rdi
   1400359a8:	call   rbx
   1400359aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400359af:	add    rsp,0x20
   1400359b3:	pop    rdi
   1400359b4:	ret    
   1400359b5:	int3   
   1400359b6:	int3   
   1400359b7:	int3   
   1400359b8:	int3   
   1400359b9:	int3   
   1400359ba:	int3   
   1400359bb:	int3   
   1400359bc:	int3   
   1400359bd:	int3   
   1400359be:	int3   
   1400359bf:	int3   
   1400359c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400359c5:	push   rdi
   1400359c6:	sub    rsp,0x20
   1400359ca:	mov    rdi,QWORD PTR [rcx+0x28]
   1400359ce:	xor    eax,eax
   1400359d0:	test   rdi,rdi
   1400359d3:	je     0x1400359ea
   1400359d5:	mov    rax,QWORD PTR [rdi]
   1400359d8:	mov    rbx,QWORD PTR [rax+0x70]
   1400359dc:	mov    rcx,rbx
   1400359df:	call   QWORD PTR [rip+0x7d43]        # 0x14003d728
   1400359e5:	mov    rcx,rdi
   1400359e8:	call   rbx
   1400359ea:	mov    rbx,QWORD PTR [rsp+0x30]
   1400359ef:	add    rsp,0x20
   1400359f3:	pop    rdi
   1400359f4:	ret    
   1400359f5:	int3   
   1400359f6:	int3   
   1400359f7:	int3   
   1400359f8:	int3   
   1400359f9:	int3   
   1400359fa:	int3   
   1400359fb:	int3   
   1400359fc:	mov    rax,rsp
   1400359ff:	mov    QWORD PTR [rax+0x8],rbx
   140035a03:	mov    QWORD PTR [rax+0x10],rbp
   140035a07:	mov    QWORD PTR [rax+0x18],rsi
   140035a0b:	mov    QWORD PTR [rax+0x20],rdi
   140035a0f:	push   r12
   140035a11:	push   r14
   140035a13:	push   r15
   140035a15:	sub    rsp,0x40
   140035a19:	xor    esi,esi
   140035a1b:	lea    r14,[rcx+0x38]
   140035a1f:	mov    rbp,r9
   140035a22:	mov    r15,r8
   140035a25:	mov    r12d,edx
   140035a28:	mov    rdi,rcx
   140035a2b:	cmp    QWORD PTR [r14],rsi
   140035a2e:	jne    0x140035a66
   140035a30:	cmp    QWORD PTR [rcx+0x30],rsi
   140035a34:	jne    0x140035a3d
   140035a36:	call   0x14000cb50
   140035a3b:	mov    esi,eax
   140035a3d:	cmp    QWORD PTR [rdi+0x30],0x0
   140035a42:	je     0x140035a66
   140035a44:	mov    rdi,QWORD PTR [rdi+0x30]
   140035a48:	mov    rdx,QWORD PTR [rdi]
   140035a4b:	mov    rbx,QWORD PTR [rdx]
   140035a4e:	mov    rcx,rbx
   140035a51:	call   QWORD PTR [rip+0x7cd1]        # 0x14003d728
   140035a57:	mov    r8,r14
   140035a5a:	lea    rdx,[rip+0xa0ff]        # 0x14003fb60
   140035a61:	mov    rcx,rdi
   140035a64:	call   rbx
   140035a66:	mov    rdi,QWORD PTR [r14]
   140035a69:	test   rdi,rdi
   140035a6c:	je     0x140035ab3
   140035a6e:	mov    rax,QWORD PTR [rdi]
   140035a71:	mov    rbx,QWORD PTR [rax+0x18]
   140035a75:	mov    rcx,rbx
   140035a78:	call   QWORD PTR [rip+0x7caa]        # 0x14003d728
   140035a7e:	mov    eax,DWORD PTR [rsp+0x90]
   140035a85:	mov    r9,rbp
   140035a88:	mov    DWORD PTR [rsp+0x30],eax
   140035a8c:	mov    r8,r15
   140035a8f:	mov    rax,QWORD PTR [rsp+0x88]
   140035a97:	mov    edx,r12d
   140035a9a:	mov    QWORD PTR [rsp+0x28],rax
   140035a9f:	mov    rcx,rdi
   140035aa2:	mov    rax,QWORD PTR [rsp+0x80]
   140035aaa:	mov    QWORD PTR [rsp+0x20],rax
   140035aaf:	call   rbx
   140035ab1:	mov    esi,eax
   140035ab3:	mov    rbx,QWORD PTR [rsp+0x60]
   140035ab8:	mov    eax,esi
   140035aba:	mov    rsi,QWORD PTR [rsp+0x70]
   140035abf:	mov    rbp,QWORD PTR [rsp+0x68]
   140035ac4:	mov    rdi,QWORD PTR [rsp+0x78]
   140035ac9:	add    rsp,0x40
   140035acd:	pop    r15
   140035acf:	pop    r14
   140035ad1:	pop    r12
   140035ad3:	ret    
   140035ad4:	int3   
   140035ad5:	int3   
   140035ad6:	int3   
   140035ad7:	int3   
   140035ad8:	int3   
   140035ad9:	int3   
   140035ada:	int3   
   140035adb:	int3   
   140035adc:	int3   
   140035add:	int3   
   140035ade:	int3   
   140035adf:	int3   
   140035ae0:	movzx  eax,BYTE PTR [rip+0x19095]        # 0x14004eb7c
   140035ae7:	test   dl,dl
   140035ae9:	mov    ecx,0x1
   140035aee:	cmove  eax,ecx
   140035af1:	mov    BYTE PTR [rip+0x19085],al        # 0x14004eb7c
   140035af7:	ret    
   140035af8:	int3   
   140035af9:	int3   
   140035afa:	int3   
   140035afb:	int3   
   140035afc:	int3   
   140035afd:	int3   
   140035afe:	int3   
   140035aff:	int3   
   140035b00:	sub    rsp,0x28
   140035b04:	movss  xmm0,DWORD PTR [rsp+0x50]
   140035b0a:	xor    edx,edx
   140035b0c:	mov    eax,0xffffffff
   140035b11:	movss  DWORD PTR [rcx+0x1c],xmm0
   140035b16:	mov    QWORD PTR [rcx],rdx
   140035b19:	mov    QWORD PTR [rcx+0x8],rdx
   140035b1d:	mov    QWORD PTR [rcx+0x20],rax
   140035b21:	mov    QWORD PTR [rcx+0x28],rdx
   140035b25:	mov    DWORD PTR [rcx+0x30],edx
   140035b28:	mov    QWORD PTR [rcx+0x38],rdx
   140035b2c:	mov    QWORD PTR [rcx+0x40],rdx
   140035b30:	movss  DWORD PTR [rcx+0x14],xmm2
   140035b35:	movss  DWORD PTR [rcx+0x18],xmm3
   140035b3a:	mov    DWORD PTR [rcx+0x10],0x11
   140035b41:	mov    DWORD PTR [rcx+0x34],0xa
   140035b48:	call   0x140005ca8
   140035b4d:	mov    rax,rcx
   140035b50:	add    rsp,0x28
   140035b54:	ret    
   140035b55:	int3   
   140035b56:	int3   
   140035b57:	int3   
   140035b58:	int3   
   140035b59:	int3   
   140035b5a:	int3   
   140035b5b:	int3   
   140035b5c:	mov    QWORD PTR [rsp+0x8],rbx
   140035b61:	push   rdi
   140035b62:	sub    rsp,0x20
   140035b66:	mov    rdi,rcx
   140035b69:	mov    rbx,rdx
   140035b6c:	mov    rcx,rdx
   140035b6f:	call   0x140031e54
   140035b74:	mov    QWORD PTR [rdi],rax
   140035b77:	cmp    QWORD PTR [rbx],0x0
   140035b7b:	je     0x140035b8d
   140035b7d:	test   rax,rax
   140035b80:	jne    0x140035b8d
   140035b82:	mov    ecx,0x8007000e
   140035b87:	call   0x1400152fc
   140035b8c:	int3   
   140035b8d:	mov    rax,rdi
   140035b90:	mov    rbx,QWORD PTR [rsp+0x30]
   140035b95:	add    rsp,0x20
   140035b99:	pop    rdi
   140035b9a:	ret    
   140035b9b:	int3   
   140035b9c:	int3   
   140035b9d:	int3   
   140035b9e:	int3   
   140035b9f:	int3   
   140035ba0:	int3   
   140035ba1:	int3   
   140035ba2:	int3   
   140035ba3:	int3   
   140035ba4:	mov    rax,rsp
   140035ba7:	mov    QWORD PTR [rax+0x8],rcx
   140035bab:	push   rdi
   140035bac:	push   r14
   140035bae:	push   r15
   140035bb0:	sub    rsp,0x40
   140035bb4:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140035bbc:	mov    QWORD PTR [rax+0x10],rbx
   140035bc0:	mov    QWORD PTR [rax+0x18],rbp
   140035bc4:	mov    QWORD PTR [rax+0x20],rsi
   140035bc8:	mov    rbp,r9
   140035bcb:	mov    r11,r8
   140035bce:	mov    r15,rcx
   140035bd1:	mov    QWORD PTR [rcx],rdx
   140035bd4:	xor    r9d,r9d
   140035bd7:	mov    QWORD PTR [rcx+0x8],r9
   140035bdb:	mov    QWORD PTR [rcx+0x10],r9
   140035bdf:	mov    QWORD PTR [rcx+0x18],r9
   140035be3:	mov    QWORD PTR [rcx+0x20],r9
   140035be7:	movss  xmm0,DWORD PTR [rip+0xfdbd]        # 0x1400459ac
   140035bef:	movss  DWORD PTR [rax-0x38],xmm0
   140035bf4:	movss  xmm3,DWORD PTR [rip+0xfda8]        # 0x1400459a4
   140035bfc:	movss  xmm2,DWORD PTR [rip+0xfda4]        # 0x1400459a8
   140035c04:	add    rcx,0x28
   140035c08:	call   0x140035b00
   140035c0d:	nop
   140035c0e:	mov    QWORD PTR [r15+0x70],r9
   140035c12:	mov    QWORD PTR [r15+0x78],r9
   140035c16:	mov    DWORD PTR [r15+0x80],r9d
   140035c1d:	mov    QWORD PTR [r15+0x88],r9
   140035c24:	mov    QWORD PTR [r15+0x90],r9
   140035c2b:	mov    DWORD PTR [r15+0x98],r9d
   140035c32:	mov    DWORD PTR [r15+0xa0],r9d
   140035c39:	mov    rax,QWORD PTR [rsp+0x90]
   140035c41:	mov    rdx,QWORD PTR [rax]
   140035c44:	mov    QWORD PTR [r15+0xa4],rdx
   140035c4b:	mov    rdx,r11
   140035c4e:	lea    rcx,[r15+0x8]
   140035c52:	call   0x14002edfc
   140035c57:	mov    rdx,rbp
   140035c5a:	lea    rcx,[r15+0x10]
   140035c5e:	call   0x14002edfc
   140035c63:	mov    rdx,QWORD PTR [rsp+0x80]
   140035c6b:	lea    rcx,[r15+0x18]
   140035c6f:	call   0x14002edfc
   140035c74:	mov    rdx,QWORD PTR [rsp+0x88]
   140035c7c:	lea    rcx,[r15+0x20]
   140035c80:	call   0x14002edfc
   140035c85:	xor    r8d,r8d
   140035c88:	lea    edx,[r8+0x1e]
   140035c8c:	lea    rcx,[r15+0x28]
   140035c90:	call   0x140036e58
   140035c95:	nop
   140035c96:	mov    rax,r15
   140035c99:	mov    rbx,QWORD PTR [rsp+0x68]
   140035c9e:	mov    rbp,QWORD PTR [rsp+0x70]
   140035ca3:	mov    rsi,QWORD PTR [rsp+0x78]
   140035ca8:	add    rsp,0x40
   140035cac:	pop    r15
   140035cae:	pop    r14
   140035cb0:	pop    rdi
   140035cb1:	ret    
   140035cb2:	mov    rcx,QWORD PTR [rdx+0x60]
   140035cb9:	add    rcx,0x8
   140035cbd:	jmp    0x14000f3c0
   140035cc2:	mov    rcx,QWORD PTR [rdx+0x60]
   140035cc9:	add    rcx,0x10
   140035ccd:	jmp    0x14000f3c0
   140035cd2:	mov    rcx,QWORD PTR [rdx+0x60]
   140035cd9:	add    rcx,0x18
   140035cdd:	jmp    0x14000f3c0
   140035ce2:	mov    rcx,QWORD PTR [rdx+0x60]
   140035ce9:	add    rcx,0x20
   140035ced:	jmp    0x14000f3c0
   140035cf2:	mov    rcx,QWORD PTR [rdx+0x60]
   140035cf9:	add    rcx,0x28
   140035cfd:	jmp    0x140035d2c
   140035d02:	mov    rcx,QWORD PTR [rdx+0x60]
   140035d09:	add    rcx,0x70
   140035d0d:	jmp    0x140035da0
   140035d12:	mov    rcx,QWORD PTR [rdx+0x60]
   140035d19:	add    rcx,0x88
   140035d20:	jmp    0x140035d38
   140035d25:	int3   
   140035d26:	int3   
   140035d27:	int3   
   140035d28:	int3   
   140035d29:	int3   
   140035d2a:	int3   
   140035d2b:	int3   
   140035d2c:	jmp    0x140038284
   140035d31:	int3   
   140035d32:	int3   
   140035d33:	int3   
   140035d34:	int3   
   140035d35:	int3   
   140035d36:	int3   
   140035d37:	int3   
   140035d38:	mov    QWORD PTR [rsp+0x8],rbx
   140035d3d:	push   rdi
   140035d3e:	sub    rsp,0x20
   140035d42:	cmp    QWORD PTR [rcx],0x0
   140035d46:	mov    rbx,rcx
   140035d49:	je     0x140035d75
   140035d4b:	xor    edi,edi
   140035d4d:	cmp    DWORD PTR [rcx+0x10],edi
   140035d50:	jle    0x140035d68
   140035d52:	mov    rax,QWORD PTR [rbx]
   140035d55:	movsxd rdx,edi
   140035d58:	lea    rcx,[rax+rdx*8]
   140035d5c:	call   0x1400360dc
   140035d61:	inc    edi
   140035d63:	cmp    edi,DWORD PTR [rbx+0x10]
   140035d66:	jl     0x140035d52
   140035d68:	mov    rcx,QWORD PTR [rbx]
   140035d6b:	call   QWORD PTR [rip+0x78d7]        # 0x14003d648
   140035d71:	and    QWORD PTR [rbx],0x0
   140035d75:	mov    rcx,QWORD PTR [rbx+0x8]
   140035d79:	test   rcx,rcx
   140035d7c:	je     0x140035d89
   140035d7e:	call   QWORD PTR [rip+0x78c4]        # 0x14003d648
   140035d84:	and    QWORD PTR [rbx+0x8],0x0
   140035d89:	and    DWORD PTR [rbx+0x10],0x0
   140035d8d:	mov    rbx,QWORD PTR [rsp+0x30]
   140035d92:	add    rsp,0x20
   140035d96:	pop    rdi
   140035d97:	ret    
   140035d98:	int3   
   140035d99:	int3   
   140035d9a:	int3   
   140035d9b:	int3   
   140035d9c:	int3   
   140035d9d:	int3   
   140035d9e:	int3   
   140035d9f:	int3   
   140035da0:	mov    QWORD PTR [rsp+0x8],rbx
   140035da5:	mov    QWORD PTR [rsp+0x10],rsi
   140035daa:	push   rdi
   140035dab:	sub    rsp,0x20
   140035daf:	cmp    QWORD PTR [rcx],0x0
   140035db3:	mov    rdi,rcx
   140035db6:	je     0x140035def
   140035db8:	xor    esi,esi
   140035dba:	cmp    DWORD PTR [rcx+0x10],esi
   140035dbd:	jle    0x140035de2
   140035dbf:	mov    rax,QWORD PTR [rdi]
   140035dc2:	movsxd rbx,esi
   140035dc5:	lea    rcx,[rax+rbx*8]
   140035dc9:	call   0x1400360dc
   140035dce:	mov    rax,QWORD PTR [rdi+0x8]
   140035dd2:	lea    rcx,[rax+rbx*8]
   140035dd6:	call   0x1400360dc
   140035ddb:	inc    esi
   140035ddd:	cmp    esi,DWORD PTR [rdi+0x10]
   140035de0:	jl     0x140035dbf
   140035de2:	mov    rcx,QWORD PTR [rdi]
   140035de5:	call   QWORD PTR [rip+0x785d]        # 0x14003d648
   140035deb:	and    QWORD PTR [rdi],0x0
   140035def:	mov    rcx,QWORD PTR [rdi+0x8]
   140035df3:	test   rcx,rcx
   140035df6:	je     0x140035e03
   140035df8:	call   QWORD PTR [rip+0x784a]        # 0x14003d648
   140035dfe:	and    QWORD PTR [rdi+0x8],0x0
   140035e03:	and    DWORD PTR [rdi+0x10],0x0
   140035e07:	mov    rbx,QWORD PTR [rsp+0x30]
   140035e0c:	mov    rsi,QWORD PTR [rsp+0x38]
   140035e11:	add    rsp,0x20
   140035e15:	pop    rdi
   140035e16:	ret    
   140035e17:	int3   
   140035e18:	int3   
   140035e19:	int3   
   140035e1a:	int3   
   140035e1b:	int3   
   140035e1c:	int3   
   140035e1d:	int3   
   140035e1e:	int3   
   140035e1f:	int3   
   140035e20:	mov    QWORD PTR [rsp+0x8],rbx
   140035e25:	mov    QWORD PTR [rsp+0x10],rbp
   140035e2a:	mov    QWORD PTR [rsp+0x18],rsi
   140035e2f:	push   rdi
   140035e30:	push   r14
   140035e32:	push   r15
   140035e34:	sub    rsp,0x20
   140035e38:	lea    r14,[rcx+0x28]
   140035e3c:	xor    r15d,r15d
   140035e3f:	mov    rdi,rcx
   140035e42:	cmp    QWORD PTR [r14+0x8],r15
   140035e46:	je     0x140035eda
   140035e4c:	mov    ecx,r15d
   140035e4f:	cmp    DWORD PTR [r14+0x10],r15d
   140035e53:	jbe    0x140035e68
   140035e55:	mov    rbx,QWORD PTR [r14]
   140035e58:	mov    eax,ecx
   140035e5a:	cmp    QWORD PTR [rbx+rax*8],r15
   140035e5e:	jne    0x140035e6d
   140035e60:	inc    ecx
   140035e62:	cmp    ecx,DWORD PTR [r14+0x10]
   140035e66:	jb     0x140035e58
   140035e68:	mov    rbx,r15
   140035e6b:	jmp    0x140035ed5
   140035e6d:	mov    eax,ecx
   140035e6f:	mov    rbx,QWORD PTR [rbx+rax*8]
   140035e73:	jmp    0x140035ed5
   140035e75:	mov    rsi,rbx
   140035e78:	test   rbx,rbx
   140035e7b:	jne    0x140035e82
   140035e7d:	mov    rbx,r15
   140035e80:	jmp    0x140035eb5
   140035e82:	mov    r8,QWORD PTR [rbx+0x10]
   140035e86:	test   r8,r8
   140035e89:	jne    0x140035eb2
   140035e8b:	mov    eax,DWORD PTR [rbx+0x18]
   140035e8e:	xor    edx,edx
   140035e90:	div    DWORD PTR [r14+0x10]
   140035e94:	mov    r8,r15
   140035e97:	inc    edx
   140035e99:	cmp    edx,DWORD PTR [r14+0x10]
   140035e9d:	jae    0x140035eb2
   140035e9f:	mov    rax,QWORD PTR [r14]
   140035ea2:	cmp    QWORD PTR [rax+rdx*8],r15
   140035ea6:	cmovne r8,QWORD PTR [rax+rdx*8]
   140035eab:	inc    edx
   140035ead:	test   r8,r8
   140035eb0:	je     0x140035e99
   140035eb2:	mov    rbx,r8
   140035eb5:	test   rsi,rsi
   140035eb8:	je     0x140035ed5
   140035eba:	mov    rcx,QWORD PTR [rsi]
   140035ebd:	test   rcx,rcx
   140035ec0:	je     0x140035ec7
   140035ec2:	call   0x1400318e4
   140035ec7:	mov    rcx,QWORD PTR [rsi+0x8]
   140035ecb:	test   rcx,rcx
   140035ece:	je     0x140035ed5
   140035ed0:	call   0x140036100
   140035ed5:	test   rbx,rbx
   140035ed8:	jne    0x140035e75
   140035eda:	mov    esi,DWORD PTR [rdi+0x98]
   140035ee0:	mov    ebx,r15d
   140035ee3:	test   esi,esi
   140035ee5:	jle    0x140035f08
   140035ee7:	mov    edx,ebx
   140035ee9:	lea    rcx,[rdi+0x88]
   140035ef0:	call   0x140036ac4
   140035ef5:	mov    rcx,QWORD PTR [rax]
   140035ef8:	test   rcx,rcx
   140035efb:	je     0x140035f02
   140035efd:	call   0x1400360a0
   140035f02:	inc    ebx
   140035f04:	cmp    ebx,esi
   140035f06:	jl     0x140035ee7
   140035f08:	cmp    QWORD PTR [rdi+0x88],r15
   140035f0f:	je     0x140035f4e
   140035f11:	mov    ebx,r15d
   140035f14:	cmp    DWORD PTR [rdi+0x98],r15d
   140035f1b:	jle    0x140035f3a
   140035f1d:	mov    rax,QWORD PTR [rdi+0x88]
   140035f24:	movsxd rcx,ebx
   140035f27:	lea    rcx,[rax+rcx*8]
   140035f2b:	call   0x1400360dc
   140035f30:	inc    ebx
   140035f32:	cmp    ebx,DWORD PTR [rdi+0x98]
   140035f38:	jl     0x140035f1d
   140035f3a:	mov    rcx,QWORD PTR [rdi+0x88]
   140035f41:	call   QWORD PTR [rip+0x7701]        # 0x14003d648
   140035f47:	mov    QWORD PTR [rdi+0x88],r15
   140035f4e:	mov    rcx,QWORD PTR [rdi+0x90]
   140035f55:	test   rcx,rcx
   140035f58:	je     0x140035f67
   140035f5a:	call   QWORD PTR [rip+0x76e8]        # 0x14003d648
   140035f60:	mov    QWORD PTR [rdi+0x90],r15
   140035f67:	mov    DWORD PTR [rdi+0x98],r15d
   140035f6e:	cmp    QWORD PTR [rdi+0x70],r15
   140035f72:	je     0x140035fb5
   140035f74:	mov    esi,r15d
   140035f77:	cmp    DWORD PTR [rdi+0x80],r15d
   140035f7e:	jle    0x140035fa7
   140035f80:	mov    rax,QWORD PTR [rdi+0x70]
   140035f84:	movsxd rbx,esi
   140035f87:	lea    rcx,[rax+rbx*8]
   140035f8b:	call   0x1400360dc
   140035f90:	mov    rax,QWORD PTR [rdi+0x78]
   140035f94:	lea    rcx,[rax+rbx*8]
   140035f98:	call   0x1400360dc
   140035f9d:	inc    esi
   140035f9f:	cmp    esi,DWORD PTR [rdi+0x80]
   140035fa5:	jl     0x140035f80
   140035fa7:	mov    rcx,QWORD PTR [rdi+0x70]
   140035fab:	call   QWORD PTR [rip+0x7697]        # 0x14003d648
   140035fb1:	mov    QWORD PTR [rdi+0x70],r15
   140035fb5:	mov    rcx,QWORD PTR [rdi+0x78]
   140035fb9:	test   rcx,rcx
   140035fbc:	je     0x140035fc8
   140035fbe:	call   QWORD PTR [rip+0x7684]        # 0x14003d648
   140035fc4:	mov    QWORD PTR [rdi+0x78],r15
   140035fc8:	mov    rcx,r14
   140035fcb:	mov    DWORD PTR [rdi+0x80],r15d
   140035fd2:	call   0x140038284
   140035fd7:	mov    rcx,QWORD PTR [rdi+0x20]
   140035fdb:	call   QWORD PTR [rip+0x1d0df]        # 0x1400530c0
   140035fe1:	mov    rcx,QWORD PTR [rdi+0x18]
   140035fe5:	call   QWORD PTR [rip+0x1d0d5]        # 0x1400530c0
   140035feb:	mov    rcx,QWORD PTR [rdi+0x10]
   140035fef:	call   QWORD PTR [rip+0x1d0cb]        # 0x1400530c0
   140035ff5:	mov    rcx,QWORD PTR [rdi+0x8]
   140035ff9:	mov    rbx,QWORD PTR [rsp+0x40]
   140035ffe:	mov    rbp,QWORD PTR [rsp+0x48]
   140036003:	mov    rsi,QWORD PTR [rsp+0x50]
   140036008:	add    rsp,0x20
   14003600c:	pop    r15
   14003600e:	pop    r14
   140036010:	pop    rdi
   140036011:	rex.W jmp QWORD PTR [rip+0x1d0a8]        # 0x1400530c0
   140036018:	int3   
   140036019:	int3   
   14003601a:	int3   
   14003601b:	int3   
   14003601c:	int3   
   14003601d:	int3   
   14003601e:	int3   
   14003601f:	int3   
   140036020:	mov    QWORD PTR [rsp+0x8],rbx
   140036025:	push   rdi
   140036026:	sub    rsp,0x20
   14003602a:	mov    rbx,rcx
   14003602d:	mov    rdi,rdx
   140036030:	mov    rcx,QWORD PTR [rcx]
   140036033:	cmp    rcx,QWORD PTR [rdx]
   140036036:	je     0x14003605f
   140036038:	call   QWORD PTR [rip+0x1d082]        # 0x1400530c0
   14003603e:	mov    rcx,rdi
   140036041:	call   0x140031e54
   140036046:	mov    QWORD PTR [rbx],rax
   140036049:	cmp    QWORD PTR [rdi],0x0
   14003604d:	je     0x14003605f
   14003604f:	test   rax,rax
   140036052:	jne    0x14003605f
   140036054:	mov    ecx,0x8007000e
   140036059:	call   0x1400152fc
   14003605e:	int3   
   14003605f:	mov    rax,rbx
   140036062:	mov    rbx,QWORD PTR [rsp+0x30]
   140036067:	add    rsp,0x20
   14003606b:	pop    rdi
   14003606c:	ret    
   14003606d:	int3   
   14003606e:	int3   
   14003606f:	int3   
   140036070:	int3   
   140036071:	int3   
   140036072:	int3   
   140036073:	int3   
   140036074:	sub    rsp,0x28
   140036078:	mov    rdx,QWORD PTR [rdx]
   14003607b:	xor    r9d,r9d
   14003607e:	mov    rcx,QWORD PTR [rcx]
   140036081:	mov    r8d,0x400
   140036087:	call   QWORD PTR [rip+0x1cf9b]        # 0x140053028
   14003608d:	cmp    eax,0x1
   140036090:	sete   al
   140036093:	add    rsp,0x28
   140036097:	ret    
   140036098:	int3   
   140036099:	int3   
   14003609a:	int3   
   14003609b:	int3   
   14003609c:	int3   
   14003609d:	int3   
   14003609e:	int3   
   14003609f:	int3   
   1400360a0:	rex push rbx
   1400360a2:	sub    rsp,0x20
   1400360a6:	mov    rbx,rcx
   1400360a9:	mov    rcx,QWORD PTR [rcx]
   1400360ac:	test   rcx,rcx
   1400360af:	je     0x1400360c3
   1400360b1:	mov    rdx,QWORD PTR [rbx+0x8]
   1400360b5:	call   0x14003650c
   1400360ba:	mov    rcx,QWORD PTR [rbx]
   1400360bd:	call   QWORD PTR [rip+0x7585]        # 0x14003d648
   1400360c3:	mov    rcx,rbx
   1400360c6:	call   0x140013de0
   1400360cb:	mov    rax,rbx
   1400360ce:	add    rsp,0x20
   1400360d2:	pop    rbx
   1400360d3:	ret    
   1400360d4:	int3   
   1400360d5:	int3   
   1400360d6:	int3   
   1400360d7:	int3   
   1400360d8:	int3   
   1400360d9:	int3   
   1400360da:	int3   
   1400360db:	int3   
   1400360dc:	rex push rbx
   1400360de:	sub    rsp,0x20
   1400360e2:	mov    rbx,rcx
   1400360e5:	mov    rcx,QWORD PTR [rcx]
   1400360e8:	call   QWORD PTR [rip+0x1cfd2]        # 0x1400530c0
   1400360ee:	mov    rax,rbx
   1400360f1:	add    rsp,0x20
   1400360f5:	pop    rbx
   1400360f6:	ret    
   1400360f7:	int3   
   1400360f8:	int3   
   1400360f9:	int3   
   1400360fa:	int3   
   1400360fb:	int3   
   1400360fc:	int3   
   1400360fd:	int3   
   1400360fe:	int3   
   1400360ff:	int3   
   140036100:	rex push rbx
   140036102:	sub    rsp,0x20
   140036106:	and    QWORD PTR [rcx+0x20],0x0
   14003610b:	mov    rbx,rcx
   14003610e:	mov    rcx,QWORD PTR [rcx+0x38]
   140036112:	call   QWORD PTR [rip+0x1cfa8]        # 0x1400530c0
   140036118:	mov    rcx,QWORD PTR [rbx+0x30]
   14003611c:	call   QWORD PTR [rip+0x1cf9e]        # 0x1400530c0
   140036122:	mov    rcx,QWORD PTR [rbx+0x28]
   140036126:	call   QWORD PTR [rip+0x1cf94]        # 0x1400530c0
   14003612c:	mov    rcx,QWORD PTR [rbx]
   14003612f:	test   rcx,rcx
   140036132:	je     0x14003613a
   140036134:	call   QWORD PTR [rip+0x750e]        # 0x14003d648
   14003613a:	mov    rcx,rbx
   14003613d:	call   0x140013de0
   140036142:	mov    rax,rbx
   140036145:	add    rsp,0x20
   140036149:	pop    rbx
   14003614a:	ret    
   14003614b:	int3   
   14003614c:	int3   
   14003614d:	int3   
   14003614e:	int3   
   14003614f:	int3   
   140036150:	int3   
   140036151:	int3   
   140036152:	int3   
   140036153:	int3   
   140036154:	mov    QWORD PTR [rsp+0x8],rbx
   140036159:	mov    QWORD PTR [rsp+0x10],rsi
   14003615e:	push   rdi
   14003615f:	sub    rsp,0x20
   140036163:	mov    rsi,QWORD PTR [rcx+0x10]
   140036167:	mov    rdi,rcx
   14003616a:	test   rsi,rsi
   14003616d:	je     0x140036189
   14003616f:	and    QWORD PTR [rcx+0x10],0x0
   140036174:	mov    rax,QWORD PTR [rsi]
   140036177:	mov    rbx,QWORD PTR [rax+0x10]
   14003617b:	mov    rcx,rbx
   14003617e:	call   QWORD PTR [rip+0x75a4]        # 0x14003d728
   140036184:	mov    rcx,rsi
   140036187:	call   rbx
   140036189:	mov    rcx,QWORD PTR [rdi+0x8]
   14003618d:	test   rcx,rcx
   140036190:	je     0x14003619d
   140036192:	call   QWORD PTR [rip+0x70c0]        # 0x14003d258
   140036198:	and    QWORD PTR [rdi+0x8],0x0
   14003619d:	mov    rsi,QWORD PTR [rdi+0x10]
   1400361a1:	test   rsi,rsi
   1400361a4:	je     0x1400361bb
   1400361a6:	mov    rax,QWORD PTR [rsi]
   1400361a9:	mov    rbx,QWORD PTR [rax+0x10]
   1400361ad:	mov    rcx,rbx
   1400361b0:	call   QWORD PTR [rip+0x7572]        # 0x14003d728
   1400361b6:	mov    rcx,rsi
   1400361b9:	call   rbx
   1400361bb:	mov    rcx,rdi
   1400361be:	call   0x140013de0
   1400361c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400361c8:	mov    rax,rdi
   1400361cb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400361d0:	add    rsp,0x20
   1400361d4:	pop    rdi
   1400361d5:	ret    
   1400361d6:	int3   
   1400361d7:	int3   
   1400361d8:	int3   
   1400361d9:	int3   
   1400361da:	int3   
   1400361db:	int3   
   1400361dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400361e1:	mov    QWORD PTR [rsp+0x10],rbp
   1400361e6:	mov    QWORD PTR [rsp+0x18],rsi
   1400361eb:	push   rdi
   1400361ec:	push   r14
   1400361ee:	push   r15
   1400361f0:	sub    rsp,0x20
   1400361f4:	mov    r14,r8
   1400361f7:	mov    ebp,edx
   1400361f9:	mov    rbx,rcx
   1400361fc:	test   r8,r8
   1400361ff:	jne    0x140036208
   140036201:	mov    eax,0x80070057
   140036206:	jmp    0x140036261
   140036208:	cmp    QWORD PTR [rcx],0x0
   14003620c:	jne    0x140036217
   14003620e:	call   0x140036544
   140036213:	test   eax,eax
   140036215:	js     0x140036261
   140036217:	mov    rcx,rbx
   14003621a:	call   0x140036750
   14003621f:	mov    rcx,rbx
   140036222:	mov    esi,eax
   140036224:	call   0x1400321cc
   140036229:	lea    edx,[rsi+rbp*1]
   14003622c:	mov    r8d,eax
   14003622f:	mov    rcx,rbx
   140036232:	mov    r15d,eax
   140036235:	call   0x140032b28
   14003623a:	test   eax,eax
   14003623c:	js     0x140036261
   14003623e:	xor    edi,edi
   140036240:	test   ebp,ebp
   140036242:	je     0x140036261
   140036244:	add    esi,r15d
   140036247:	lea    r8,[r14+rdi*4]
   14003624b:	mov    edx,esi
   14003624d:	mov    rcx,rbx
   140036250:	call   0x140038470
   140036255:	test   eax,eax
   140036257:	js     0x140036261
   140036259:	inc    edi
   14003625b:	inc    esi
   14003625d:	cmp    edi,ebp
   14003625f:	jb     0x140036247
   140036261:	mov    rbx,QWORD PTR [rsp+0x40]
   140036266:	mov    rbp,QWORD PTR [rsp+0x48]
   14003626b:	mov    rsi,QWORD PTR [rsp+0x50]
   140036270:	add    rsp,0x20
   140036274:	pop    r15
   140036276:	pop    r14
   140036278:	pop    rdi
   140036279:	ret    
   14003627a:	int3   
   14003627b:	int3   
   14003627c:	int3   
   14003627d:	int3   
   14003627e:	int3   
   14003627f:	int3   
   140036280:	mov    QWORD PTR [rsp+0x8],rbx
   140036285:	mov    QWORD PTR [rsp+0x10],rsi
   14003628a:	push   rdi
   14003628b:	sub    rsp,0x20
   14003628f:	mov    eax,DWORD PTR [rcx+0x10]
   140036292:	mov    rdi,r8
   140036295:	inc    eax
   140036297:	mov    rsi,rdx
   14003629a:	mov    rbx,rcx
   14003629d:	movsxd rdx,eax
   1400362a0:	mov    rcx,QWORD PTR [rcx]
   1400362a3:	mov    r8d,0x8
   1400362a9:	call   QWORD PTR [rip+0x17d51]        # 0x14004e000
   1400362af:	test   rax,rax
   1400362b2:	jne    0x1400362b8
   1400362b4:	xor    eax,eax
   1400362b6:	jmp    0x1400362f5
   1400362b8:	mov    rcx,QWORD PTR [rbx+0x8]
   1400362bc:	mov    r8d,0x8
   1400362c2:	mov    QWORD PTR [rbx],rax
   1400362c5:	mov    eax,DWORD PTR [rbx+0x10]
   1400362c8:	inc    eax
   1400362ca:	movsxd rdx,eax
   1400362cd:	call   QWORD PTR [rip+0x17d2d]        # 0x14004e000
   1400362d3:	test   rax,rax
   1400362d6:	je     0x1400362b4
   1400362d8:	mov    edx,DWORD PTR [rbx+0x10]
   1400362db:	mov    r9,rdi
   1400362de:	mov    r8,rsi
   1400362e1:	mov    QWORD PTR [rbx+0x8],rax
   1400362e5:	mov    rcx,rbx
   1400362e8:	call   0x140036fc4
   1400362ed:	inc    DWORD PTR [rbx+0x10]
   1400362f0:	mov    eax,0x1
   1400362f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400362fa:	mov    rsi,QWORD PTR [rsp+0x38]
   1400362ff:	add    rsp,0x20
   140036303:	pop    rdi
   140036304:	ret    
   140036305:	int3   
   140036306:	int3   
   140036307:	int3   
   140036308:	int3   
   140036309:	int3   
   14003630a:	int3   
   14003630b:	int3   
   14003630c:	mov    QWORD PTR [rsp+0x8],rbx
   140036311:	mov    QWORD PTR [rsp+0x10],rsi
   140036316:	mov    QWORD PTR [rsp+0x18],rdi
   14003631b:	push   r14
   14003631d:	sub    rsp,0x20
   140036321:	mov    rcx,QWORD PTR [rdx]
   140036324:	mov    rdi,r8
   140036327:	mov    rsi,rdx
   14003632a:	xor    ebx,ebx
   14003632c:	call   QWORD PTR [rip+0x1ccde]        # 0x140053010
   140036332:	test   eax,eax
   140036334:	je     0x1400363a1
   140036336:	test   rdi,rdi
   140036339:	je     0x1400363a1
   14003633b:	movsxd rax,DWORD PTR [rip+0x18f0e]        # 0x14004f250
   140036342:	lea    r14,[rip+0x18e67]        # 0x14004f1b0
   140036349:	mov    rdx,rsi
   14003634c:	lea    rcx,[r14+rax*8]
   140036350:	call   0x140036020
   140036355:	movsxd rdx,DWORD PTR [rip+0x18ef4]        # 0x14004f250
   14003635c:	mov    rcx,QWORD PTR [r14+rdx*8+0x50]
   140036361:	test   rcx,rcx
   140036364:	je     0x140036371
   140036366:	call   0x140038248
   14003636b:	mov    edx,DWORD PTR [rip+0x18edf]        # 0x14004f250
   140036371:	movsxd rax,edx
   140036374:	mov    QWORD PTR [r14+rax*8+0x50],rdi
   140036379:	movsxd rax,DWORD PTR [rip+0x18ed0]        # 0x14004f250
   140036380:	mov    rcx,QWORD PTR [r14+rax*8+0x50]
   140036385:	inc    DWORD PTR [rcx+0xa0]
   14003638b:	mov    eax,DWORD PTR [rip+0x18ebf]        # 0x14004f250
   140036391:	inc    eax
   140036393:	cmp    eax,0xa
   140036396:	cmovge eax,ebx
   140036399:	mov    bl,0x1
   14003639b:	mov    DWORD PTR [rip+0x18eaf],eax        # 0x14004f250
   1400363a1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400363a6:	mov    al,bl
   1400363a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400363ad:	mov    rdi,QWORD PTR [rsp+0x40]
   1400363b2:	add    rsp,0x20
   1400363b6:	pop    r14
   1400363b8:	ret    
   1400363b9:	int3   
   1400363ba:	int3   
   1400363bb:	int3   
   1400363bc:	int3   
   1400363bd:	int3   
   1400363be:	int3   
   1400363bf:	int3   
   1400363c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400363c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400363ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400363cf:	push   rdi
   1400363d0:	sub    rsp,0x20
   1400363d4:	lea    rbx,[rcx+0x28]
   1400363d8:	mov    rdi,rcx
   1400363db:	mov    rcx,QWORD PTR [rbx]
   1400363de:	mov    rsi,r8
   1400363e1:	mov    rbp,rdx
   1400363e4:	call   QWORD PTR [rip+0x1cc26]        # 0x140053010
   1400363ea:	test   eax,eax
   1400363ec:	je     0x1400363fb
   1400363ee:	mov    rcx,QWORD PTR [rbx]
   1400363f1:	call   QWORD PTR [rip+0x1ccc9]        # 0x1400530c0
   1400363f7:	and    QWORD PTR [rbx],0x0
   1400363fb:	mov    rdx,rbp
   1400363fe:	mov    rcx,rbx
   140036401:	call   0x14002b0f8
   140036406:	mov    rbx,QWORD PTR [rsp+0x30]
   14003640b:	mov    rbp,QWORD PTR [rsp+0x38]
   140036410:	mov    QWORD PTR [rdi+0x48],rsi
   140036414:	mov    rsi,QWORD PTR [rsp+0x40]
   140036419:	add    rsp,0x20
   14003641d:	pop    rdi
   14003641e:	ret    
   14003641f:	int3   
   140036420:	int3   
   140036421:	int3   
   140036422:	int3   
   140036423:	int3   
   140036424:	int3   
   140036425:	int3   
   140036426:	int3   
   140036427:	int3   
   140036428:	mov    QWORD PTR [rsp+0x8],rbx
   14003642d:	mov    QWORD PTR [rsp+0x10],rbp
   140036432:	mov    QWORD PTR [rsp+0x18],rsi
   140036437:	push   rdi
   140036438:	sub    rsp,0x20
   14003643c:	lea    rbx,[rcx+0x38]
   140036440:	mov    rdi,rcx
   140036443:	mov    rcx,QWORD PTR [rbx]
   140036446:	mov    rsi,r8
   140036449:	mov    rbp,rdx
   14003644c:	call   QWORD PTR [rip+0x1cbbe]        # 0x140053010
   140036452:	test   eax,eax
   140036454:	je     0x140036463
   140036456:	mov    rcx,QWORD PTR [rbx]
   140036459:	call   QWORD PTR [rip+0x1cc61]        # 0x1400530c0
   14003645f:	and    QWORD PTR [rbx],0x0
   140036463:	mov    rdx,rbp
   140036466:	mov    rcx,rbx
   140036469:	call   0x14002b0f8
   14003646e:	mov    rbx,QWORD PTR [rsp+0x30]
   140036473:	mov    rbp,QWORD PTR [rsp+0x38]
   140036478:	mov    QWORD PTR [rdi+0x40],rsi
   14003647c:	mov    rsi,QWORD PTR [rsp+0x40]
   140036481:	add    rsp,0x20
   140036485:	pop    rdi
   140036486:	ret    
   140036487:	int3   
   140036488:	int3   
   140036489:	int3   
   14003648a:	int3   
   14003648b:	int3   
   14003648c:	int3   
   14003648d:	int3   
   14003648e:	int3   
   14003648f:	int3   
   140036490:	mov    QWORD PTR [rsp+0x8],rcx
   140036495:	sub    rsp,0x38
   140036499:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400364a2:	and    QWORD PTR [rsp+0x48],0x0
   1400364a8:	test   rdx,rdx
   1400364ab:	je     0x1400364c5
   1400364ad:	mov    QWORD PTR [rsp+0x48],rdx
   1400364b2:	test   rcx,rcx
   1400364b5:	je     0x1400364bb
   1400364b7:	and    QWORD PTR [rcx],0x0
   1400364bb:	add    rcx,0x8
   1400364bf:	sub    rdx,0x1
   1400364c3:	jne    0x1400364b2
   1400364c5:	add    rsp,0x38
   1400364c9:	ret    
   1400364ca:	mov    QWORD PTR [rsp+0x10],rdx
   1400364cf:	push   rbx
   1400364d0:	push   rbp
   1400364d1:	push   rdi
   1400364d2:	sub    rsp,0x20
   1400364d6:	mov    rbp,rdx
   1400364d9:	mov    rbx,QWORD PTR [rbp+0x48]
   1400364dd:	test   rbx,rbx
   1400364e0:	je     0x1400364fc
   1400364e2:	mov    rax,QWORD PTR [rbp+0x40]
   1400364e6:	lea    rdi,[rax+rbx*8]
   1400364ea:	sub    rdi,0x8
   1400364ee:	mov    rcx,rdi
   1400364f1:	call   0x1400360dc
   1400364f6:	sub    rbx,0x1
   1400364fa:	jne    0x1400364ea
   1400364fc:	xor    edx,edx
   1400364fe:	xor    ecx,ecx
   140036500:	call   0x14001562a
   140036505:	nop
   140036506:	int3   
   140036507:	int3   
   140036508:	int3   
   140036509:	int3   
   14003650a:	int3   
   14003650b:	int3   
   14003650c:	test   rdx,rdx
   14003650f:	je     0x14003653d
   140036511:	mov    QWORD PTR [rsp+0x8],rbx
   140036516:	push   rdi
   140036517:	sub    rsp,0x20
   14003651b:	mov    rdi,rdx
   14003651e:	mov    rbx,rcx
   140036521:	mov    rcx,rbx
   140036524:	call   0x1400360dc
   140036529:	add    rbx,0x8
   14003652d:	sub    rdi,0x1
   140036531:	jne    0x140036521
   140036533:	mov    rbx,QWORD PTR [rsp+0x30]
   140036538:	add    rsp,0x20
   14003653c:	pop    rdi
   14003653d:	ret    
   14003653e:	int3   
   14003653f:	int3   
   140036540:	int3   
   140036541:	int3   
   140036542:	int3   
   140036543:	int3   
   140036544:	rex push rbx
   140036546:	sub    rsp,0x20
   14003654a:	and    DWORD PTR [rsp+0x30],0x0
   14003654f:	mov    rbx,rcx
   140036552:	and    DWORD PTR [rsp+0x34],0x0
   140036557:	cmp    QWORD PTR [rcx],0x0
   14003655b:	je     0x140036564
   14003655d:	mov    eax,0x80004005
   140036562:	jmp    0x14003658f
   140036564:	mov    ecx,0x16
   140036569:	lea    r8,[rsp+0x30]
   14003656e:	lea    edx,[rcx-0x15]
   140036571:	call   QWORD PTR [rip+0x1cad1]        # 0x140053048
   140036577:	mov    QWORD PTR [rbx],rax
   14003657a:	test   rax,rax
   14003657d:	jne    0x140036586
   14003657f:	mov    eax,0x8007000e
   140036584:	jmp    0x14003658f
   140036586:	mov    rcx,rax
   140036589:	call   QWORD PTR [rip+0x1caa9]        # 0x140053038
   14003658f:	add    rsp,0x20
   140036593:	pop    rbx
   140036594:	ret    
   140036595:	int3   
   140036596:	int3   
   140036597:	int3   
   140036598:	int3   
   140036599:	int3   
   14003659a:	int3   
   14003659b:	int3   
   14003659c:	mov    QWORD PTR [rsp+0x8],rbx
   1400365a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400365a6:	mov    QWORD PTR [rsp+0x18],rsi
   1400365ab:	push   rdi
   1400365ac:	sub    rsp,0x20
   1400365b0:	cmp    QWORD PTR [rcx],0x0
   1400365b4:	mov    edi,r9d
   1400365b7:	mov    esi,r8d
   1400365ba:	mov    rbp,rdx
   1400365bd:	mov    rbx,rcx
   1400365c0:	jne    0x1400365dc
   1400365c2:	mov    edx,DWORD PTR [rcx+0x10]
   1400365c5:	mov    r8b,0x1
   1400365c8:	call   0x140036e58
   1400365cd:	test   al,al
   1400365cf:	jne    0x1400365dc
   1400365d1:	mov    ecx,0x8007000e
   1400365d6:	call   0x1400152fc
   1400365db:	int3   
   1400365dc:	mov    r9d,edi
   1400365df:	mov    r8d,esi
   1400365e2:	mov    rdx,rbp
   1400365e5:	mov    rcx,rbx
   1400365e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400365ed:	mov    rbp,QWORD PTR [rsp+0x38]
   1400365f2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400365f7:	add    rsp,0x20
   1400365fb:	pop    rdi
   1400365fc:	jmp    0x140037328
   140036601:	int3   
   140036602:	int3   
   140036603:	int3   
   140036604:	int3   
   140036605:	int3   
   140036606:	int3   
   140036607:	int3   
   140036608:	rex push rdi
   14003660a:	sub    rsp,0x30
   14003660e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140036617:	mov    QWORD PTR [rsp+0x40],rbx
   14003661c:	mov    QWORD PTR [rsp+0x50],rsi
   140036621:	mov    rsi,rcx
   140036624:	mov    edi,0x80004005
   140036629:	mov    ecx,0x18
   14003662e:	call   0x140013d94
   140036633:	mov    QWORD PTR [rsp+0x48],rax
   140036638:	test   rax,rax
   14003663b:	je     0x14003664a
   14003663d:	mov    rcx,rax
   140036640:	call   0x140039708
   140036645:	mov    rbx,rax
   140036648:	jmp    0x14003664c
   14003664a:	xor    ebx,ebx
   14003664c:	cmp    QWORD PTR [rbx+0x10],0x0
   140036651:	jne    0x14003665d
   140036653:	mov    rcx,rbx
   140036656:	call   0x140036154
   14003665b:	xor    ebx,ebx
   14003665d:	test   rbx,rbx
   140036660:	je     0x140036698
   140036662:	mov    rdx,QWORD PTR [rsi+0x10]
   140036666:	mov    rcx,rbx
   140036669:	call   0x1400397b0
   14003666e:	mov    edi,eax
   140036670:	test   eax,eax
   140036672:	js     0x140036690
   140036674:	mov    rdx,rbx
   140036677:	mov    rcx,rsi
   14003667a:	call   0x140037234
   14003667f:	test   al,al
   140036681:	je     0x140036690
   140036683:	mov    rdx,rbx
   140036686:	mov    rcx,rsi
   140036689:	call   0x140037d70
   14003668e:	mov    edi,eax
   140036690:	mov    rcx,rbx
   140036693:	call   0x140036154
   140036698:	mov    eax,edi
   14003669a:	mov    rbx,QWORD PTR [rsp+0x40]
   14003669f:	mov    rsi,QWORD PTR [rsp+0x50]
   1400366a4:	add    rsp,0x30
   1400366a8:	pop    rdi
   1400366a9:	ret    
   1400366aa:	mov    rcx,QWORD PTR [rdx+0x48]
   1400366b1:	jmp    0x140013de0
   1400366b6:	int3   
   1400366b7:	int3   
   1400366b8:	int3   
   1400366b9:	int3   
   1400366ba:	int3   
   1400366bb:	int3   
   1400366bc:	rex push rbx
   1400366be:	sub    rsp,0x20
   1400366c2:	mov    rbx,rcx
   1400366c5:	test   rdx,rdx
   1400366c8:	jne    0x1400366d5
   1400366ca:	mov    ecx,0x80004005
   1400366cf:	call   0x1400152fc
   1400366d4:	int3   
   1400366d5:	mov    rax,QWORD PTR [rcx+0x40]
   1400366d9:	mov    QWORD PTR [rdx+0x10],rax
   1400366dd:	dec    QWORD PTR [rcx+0x8]
   1400366e1:	mov    QWORD PTR [rcx+0x40],rdx
   1400366e5:	mov    rdx,QWORD PTR [rcx+0x8]
   1400366e9:	cmp    rdx,QWORD PTR [rcx+0x28]
   1400366ed:	jae    0x140036704
   1400366ef:	cmp    DWORD PTR [rcx+0x30],0x0
   1400366f3:	jne    0x140036704
   1400366f5:	call   0x14003a4e4
   1400366fa:	mov    edx,eax
   1400366fc:	mov    rcx,rbx
   1400366ff:	call   0x14003811c
   140036704:	cmp    QWORD PTR [rbx+0x8],0x0
   140036709:	jne    0x140036713
   14003670b:	mov    rcx,rbx
   14003670e:	call   0x140036720
   140036713:	add    rsp,0x20
   140036717:	pop    rbx
   140036718:	ret    
   140036719:	int3   
   14003671a:	int3   
   14003671b:	int3   
   14003671c:	int3   
   14003671d:	int3   
   14003671e:	int3   
   14003671f:	int3   
   140036720:	rex push rbx
   140036722:	sub    rsp,0x20
   140036726:	and    QWORD PTR [rcx+0x40],0x0
   14003672b:	mov    rbx,rcx
   14003672e:	mov    rcx,QWORD PTR [rcx+0x38]
   140036732:	test   rcx,rcx
   140036735:	je     0x140036741
   140036737:	call   0x14000e0e8
   14003673c:	and    QWORD PTR [rbx+0x38],0x0
   140036741:	add    rsp,0x20
   140036745:	pop    rbx
   140036746:	ret    
   140036747:	int3   
   140036748:	int3   
   140036749:	int3   
   14003674a:	int3   
   14003674b:	int3   
   14003674c:	int3   
   14003674d:	int3   
   14003674e:	int3   
   14003674f:	int3   
   140036750:	mov    DWORD PTR [rsp+0x10],edx
   140036754:	push   rbx
   140036755:	sub    rsp,0x20
   140036759:	mov    rbx,rcx
   14003675c:	lea    r8,[rsp+0x30]
   140036761:	mov    rcx,QWORD PTR [rcx]
   140036764:	mov    edx,0x1
   140036769:	call   QWORD PTR [rip+0x1c929]        # 0x140053098
   14003676f:	test   eax,eax
   140036771:	jns    0x14003677b
   140036773:	mov    ecx,eax
   140036775:	call   0x1400152fc
   14003677a:	int3   
   14003677b:	mov    rcx,QWORD PTR [rbx]
   14003677e:	lea    r8,[rsp+0x38]
   140036783:	mov    edx,0x1
   140036788:	call   QWORD PTR [rip+0x1c912]        # 0x1400530a0
   14003678e:	test   eax,eax
   140036790:	jns    0x14003679a
   140036792:	mov    ecx,eax
   140036794:	call   0x1400152fc
   140036799:	int3   
   14003679a:	mov    eax,DWORD PTR [rsp+0x38]
   14003679e:	sub    eax,DWORD PTR [rsp+0x30]
   1400367a2:	inc    eax
   1400367a4:	add    rsp,0x20
   1400367a8:	pop    rbx
   1400367a9:	ret    
   1400367aa:	int3   
   1400367ab:	int3   
   1400367ac:	int3   
   1400367ad:	int3   
   1400367ae:	int3   
   1400367af:	int3   
   1400367b0:	mov    rax,rsp
   1400367b3:	mov    QWORD PTR [rax+0x8],rbx
   1400367b7:	mov    QWORD PTR [rax+0x10],rsi
   1400367bb:	mov    QWORD PTR [rax+0x18],rdi
   1400367bf:	mov    QWORD PTR [rax+0x20],r14
   1400367c3:	push   r15
   1400367c5:	sub    rsp,0x20
   1400367c9:	mov    rax,QWORD PTR [rdx]
   1400367cc:	mov    r15,rdx
   1400367cf:	neg    rax
   1400367d2:	mov    r14,r9
   1400367d5:	mov    r10,rcx
   1400367d8:	sbb    eax,eax
   1400367da:	xor    edx,edx
   1400367dc:	and    eax,0x25
   1400367df:	mov    DWORD PTR [r9],eax
   1400367e2:	div    DWORD PTR [rcx+0x10]
   1400367e5:	mov    DWORD PTR [r8],edx
   1400367e8:	cmp    QWORD PTR [rcx],0x0
   1400367ec:	je     0x140036835
   1400367ee:	mov    rsi,QWORD PTR [rsp+0x50]
   1400367f3:	xor    edi,edi
   1400367f5:	and    QWORD PTR [rsi],rdi
   1400367f8:	mov    ecx,DWORD PTR [r8]
   1400367fb:	mov    rax,QWORD PTR [r10]
   1400367fe:	mov    rbx,QWORD PTR [rax+rcx*8]
   140036802:	jmp    0x140036830
   140036804:	mov    eax,DWORD PTR [r14]
   140036807:	cmp    DWORD PTR [rbx+0x18],eax
   14003680a:	jne    0x140036829
   14003680c:	mov    rcx,QWORD PTR [rbx]
   14003680f:	test   rcx,rcx
   140036812:	je     0x140036823
   140036814:	mov    rdx,QWORD PTR [r15]
   140036817:	test   rdx,rdx
   14003681a:	je     0x140036823
   14003681c:	call   0x140038e34
   140036821:	jmp    0x140036825
   140036823:	xor    al,al
   140036825:	test   al,al
   140036827:	jne    0x140036852
   140036829:	mov    rdi,rbx
   14003682c:	mov    rbx,QWORD PTR [rbx+0x10]
   140036830:	test   rbx,rbx
   140036833:	jne    0x140036804
   140036835:	xor    eax,eax
   140036837:	mov    rbx,QWORD PTR [rsp+0x30]
   14003683c:	mov    rsi,QWORD PTR [rsp+0x38]
   140036841:	mov    rdi,QWORD PTR [rsp+0x40]
   140036846:	mov    r14,QWORD PTR [rsp+0x48]
   14003684b:	add    rsp,0x20
   14003684f:	pop    r15
   140036851:	ret    
   140036852:	mov    QWORD PTR [rsi],rdi
   140036855:	mov    rax,rbx
   140036858:	jmp    0x140036837
   14003685a:	int3   
   14003685b:	int3   
   14003685c:	int3   
   14003685d:	int3   
   14003685e:	int3   
   14003685f:	int3   
   140036860:	mov    QWORD PTR [rsp+0x10],rbx
   140036865:	mov    QWORD PTR [rsp+0x18],rbp
   14003686a:	push   rsi
   14003686b:	push   rdi
   14003686c:	push   r14
   14003686e:	sub    rsp,0x20
   140036872:	cmp    QWORD PTR [rcx+0x20],0x0
   140036877:	mov    rsi,rdx
   14003687a:	mov    rbx,rcx
   14003687d:	jne    0x1400368b7
   14003687f:	lea    rdi,[rcx+0x28]
   140036883:	mov    rcx,QWORD PTR [rdi]
   140036886:	call   QWORD PTR [rip+0x1c784]        # 0x140053010
   14003688c:	test   eax,eax
   14003688e:	je     0x1400368b7
   140036890:	mov    rcx,QWORD PTR [rbx+0x48]
   140036894:	test   rcx,rcx
   140036897:	je     0x1400368b7
   140036899:	mov    rdx,rdi
   14003689c:	call   0x140037090
   1400368a1:	mov    QWORD PTR [rbx+0x20],rax
   1400368a5:	mov    rcx,QWORD PTR [rdi]
   1400368a8:	call   QWORD PTR [rip+0x1c812]        # 0x1400530c0
   1400368ae:	and    QWORD PTR [rdi],0x0
   1400368b2:	and    QWORD PTR [rbx+0x48],0x0
   1400368b7:	mov    rax,QWORD PTR [rbx+0x20]
   1400368bb:	test   rax,rax
   1400368be:	je     0x140036950
   1400368c4:	cmp    DWORD PTR [rax+0x8],0x0
   1400368c8:	jle    0x140036950
   1400368ce:	movsxd rbp,DWORD PTR [rax+0x8]
   1400368d2:	xor    edi,edi
   1400368d4:	mov    rax,QWORD PTR [rbx+0x20]
   1400368d8:	cmp    rdi,QWORD PTR [rax+0x8]
   1400368dc:	jae    0x140036965
   1400368e2:	cmp    QWORD PTR [rsi],0x0
   1400368e6:	mov    rax,QWORD PTR [rax]
   1400368e9:	mov    rcx,QWORD PTR [rax+rdi*8]
   1400368ed:	mov    QWORD PTR [rsp+0x40],rcx
   1400368f2:	jne    0x140036902
   1400368f4:	xor    edx,edx
   1400368f6:	mov    rcx,rsi
   1400368f9:	call   0x140031ed4
   1400368fe:	test   eax,eax
   140036900:	js     0x140036948
   140036902:	mov    rcx,rsi
   140036905:	call   0x1400321cc
   14003690a:	mov    rcx,rsi
   14003690d:	mov    r14d,eax
   140036910:	call   0x140036750
   140036915:	mov    r8d,r14d
   140036918:	mov    rcx,rsi
   14003691b:	lea    edx,[rax+0x1]
   14003691e:	call   0x140032b28
   140036923:	test   eax,eax
   140036925:	js     0x140036948
   140036927:	mov    rcx,rsi
   14003692a:	call   0x140036750
   14003692f:	mov    r9d,0x1
   140036935:	lea    r8,[rsp+0x40]
   14003693a:	mov    rcx,rsi
   14003693d:	lea    edx,[rax-0x1]
   140036940:	add    edx,r14d
   140036943:	call   0x140032c34
   140036948:	inc    rdi
   14003694b:	cmp    rdi,rbp
   14003694e:	jl     0x1400368d4
   140036950:	mov    rbx,QWORD PTR [rsp+0x48]
   140036955:	xor    al,al
   140036957:	mov    rbp,QWORD PTR [rsp+0x50]
   14003695c:	add    rsp,0x20
   140036960:	pop    r14
   140036962:	pop    rdi
   140036963:	pop    rsi
   140036964:	ret    
   140036965:	mov    ecx,0x80070057
   14003696a:	call   0x1400152fc
   14003696f:	int3   
   140036970:	int3   
   140036971:	int3   
   140036972:	int3   
   140036973:	int3   
   140036974:	int3   
   140036975:	int3   
   140036976:	int3   
   140036977:	int3   
   140036978:	mov    rax,rsp
   14003697b:	push   r14
   14003697d:	sub    rsp,0x30
   140036981:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140036989:	mov    QWORD PTR [rax+0x10],rbx
   14003698d:	mov    QWORD PTR [rax+0x18],rsi
   140036991:	mov    QWORD PTR [rax+0x20],rdi
   140036995:	mov    r14,rdx
   140036998:	mov    rdi,rcx
   14003699b:	lea    rsi,[rcx+0x30]
   14003699f:	mov    rcx,QWORD PTR [rsi]
   1400369a2:	call   QWORD PTR [rip+0x1c668]        # 0x140053010
   1400369a8:	xor    ebx,ebx
   1400369aa:	test   eax,eax
   1400369ac:	jne    0x1400369e1
   1400369ae:	mov    rcx,QWORD PTR [rdi+0x40]
   1400369b2:	test   rcx,rcx
   1400369b5:	je     0x1400369e1
   1400369b7:	lea    r8,[rdi+0x38]
   1400369bb:	lea    rdx,[rsp+0x40]
   1400369c0:	call   0x1400370f8
   1400369c5:	nop
   1400369c6:	mov    rdx,rax
   1400369c9:	mov    rcx,rsi
   1400369cc:	call   0x140036020
   1400369d1:	nop
   1400369d2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400369d7:	call   QWORD PTR [rip+0x1c6e3]        # 0x1400530c0
   1400369dd:	mov    QWORD PTR [rdi+0x40],rbx
   1400369e1:	mov    rdx,rsi
   1400369e4:	mov    rcx,r14
   1400369e7:	call   0x140036020
   1400369ec:	mov    rcx,QWORD PTR [r14]
   1400369ef:	call   QWORD PTR [rip+0x1c61b]        # 0x140053010
   1400369f5:	test   eax,eax
   1400369f7:	setne  al
   1400369fa:	mov    rbx,QWORD PTR [rsp+0x48]
   1400369ff:	mov    rsi,QWORD PTR [rsp+0x50]
   140036a04:	mov    rdi,QWORD PTR [rsp+0x58]
   140036a09:	add    rsp,0x30
   140036a0d:	pop    r14
   140036a0f:	ret    
   140036a10:	lea    rcx,[rdx+0x40]
   140036a17:	jmp    0x14000f3c0
   140036a1c:	int3   
   140036a1d:	int3   
   140036a1e:	int3   
   140036a1f:	int3   
   140036a20:	int3   
   140036a21:	int3   
   140036a22:	int3   
   140036a23:	int3   
   140036a24:	mov    r11,rsp
   140036a27:	mov    QWORD PTR [r11+0x8],rbx
   140036a2b:	mov    QWORD PTR [r11+0x18],rbp
   140036a2f:	mov    QWORD PTR [r11+0x20],rsi
   140036a33:	mov    QWORD PTR [r11+0x10],rdx
   140036a37:	push   rdi
   140036a38:	sub    rsp,0x40
   140036a3c:	xor    dil,dil
   140036a3f:	mov    rsi,r9
   140036a42:	mov    rbp,r8
   140036a45:	test   rdx,rdx
   140036a48:	je     0x140036aa5
   140036a4a:	lea    rax,[r11-0x10]
   140036a4e:	add    rcx,0x28
   140036a52:	lea    r9,[r11-0x18]
   140036a56:	mov    QWORD PTR [r11-0x28],rax
   140036a5a:	lea    r8,[r11-0x14]
   140036a5e:	lea    rdx,[r11+0x10]
   140036a62:	call   0x1400367b0
   140036a67:	test   rax,rax
   140036a6a:	je     0x140036aa5
   140036a6c:	mov    rbx,QWORD PTR [rax+0x8]
   140036a70:	mov    dil,0x1
   140036a73:	test   rbx,rbx
   140036a76:	je     0x140036aa5
   140036a78:	cmp    QWORD PTR [rbx+0x8],0x0
   140036a7d:	jbe    0x140036a8d
   140036a7f:	mov    r8,QWORD PTR [rbx]
   140036a82:	mov    rcx,rbp
   140036a85:	mov    edx,DWORD PTR [rbx+0x8]
   140036a88:	call   0x1400361dc
   140036a8d:	mov    rdx,rsi
   140036a90:	mov    rcx,rbx
   140036a93:	call   0x140036860
   140036a98:	mov    rdx,QWORD PTR [rsp+0x70]
   140036a9d:	mov    rcx,rbx
   140036aa0:	call   0x140036978
   140036aa5:	mov    rbx,QWORD PTR [rsp+0x50]
   140036aaa:	mov    al,dil
   140036aad:	mov    rbp,QWORD PTR [rsp+0x60]
   140036ab2:	mov    rsi,QWORD PTR [rsp+0x68]
   140036ab7:	add    rsp,0x40
   140036abb:	pop    rdi
   140036abc:	ret    
   140036abd:	int3   
   140036abe:	int3   
   140036abf:	int3   
   140036ac0:	int3   
   140036ac1:	int3   
   140036ac2:	int3   
   140036ac3:	int3   
   140036ac4:	sub    rsp,0x28
   140036ac8:	test   edx,edx
   140036aca:	js     0x140036ae1
   140036acc:	cmp    edx,DWORD PTR [rcx+0x10]
   140036acf:	jge    0x140036ae1
   140036ad1:	mov    rax,QWORD PTR [rcx+0x8]
   140036ad5:	movsxd rdx,edx
   140036ad8:	lea    rax,[rax+rdx*8]
   140036adc:	add    rsp,0x28
   140036ae0:	ret    
   140036ae1:	xor    r9d,r9d
   140036ae4:	xor    r8d,r8d
   140036ae7:	mov    ecx,0xc000008c
   140036aec:	lea    edx,[r9+0x1]
   140036af0:	call   QWORD PTR [rip+0x6682]        # 0x14003d178
   140036af6:	int3   
   140036af7:	int3   
   140036af8:	int3   
   140036af9:	int3   
   140036afa:	int3   
   140036afb:	int3   
   140036afc:	int3   
   140036afd:	int3   
   140036afe:	int3   
   140036aff:	int3   
   140036b00:	mov    QWORD PTR [rsp+0x18],rbx
   140036b05:	push   rbp
   140036b06:	push   rsi
   140036b07:	push   rdi
   140036b08:	push   r14
   140036b0a:	push   r15
   140036b0c:	lea    rbp,[rsp-0x37]
   140036b11:	sub    rsp,0xe0
   140036b18:	mov    rax,QWORD PTR [rip+0x174f1]        # 0x14004e010
   140036b1f:	xor    rax,rsp
   140036b22:	mov    QWORD PTR [rbp+0x27],rax
   140036b26:	mov    rsi,rdx
   140036b29:	lea    r8,[rbp-0x51]
   140036b2d:	mov    rdx,rcx
   140036b30:	mov    r15,rcx
   140036b33:	mov    ecx,0x1
   140036b38:	call   QWORD PTR [rip+0x691a]        # 0x14003d458
   140036b3e:	mov    ecx,eax
   140036b40:	mov    r14d,eax
   140036b43:	call   QWORD PTR [rip+0x6b07]        # 0x14003d650
   140036b49:	xor    ebx,ebx
   140036b4b:	mov    rdi,rax
   140036b4e:	test   r14d,r14d
   140036b51:	je     0x140036c00
   140036b57:	test   rax,rax
   140036b5a:	je     0x140036c00
   140036b60:	mov    r9d,r14d
   140036b63:	mov    QWORD PTR [rsp+0x20],rax
   140036b68:	xor    r8d,r8d
   140036b6b:	lea    ecx,[rbx+0x3]
   140036b6e:	mov    rdx,r15
   140036b71:	call   QWORD PTR [rip+0x68d9]        # 0x14003d450
   140036b77:	lea    r9,[rbp-0x79]
   140036b7b:	mov    DWORD PTR [rbp-0x79],ebx
   140036b7e:	lea    r8,[rbp-0x59]
   140036b82:	mov    rcx,rdi
   140036b85:	lea    rdx,[rip+0xccac]        # 0x140043838
   140036b8c:	call   QWORD PTR [rip+0x68b6]        # 0x14003d448
   140036b92:	cmp    DWORD PTR [rbp-0x79],0x4
   140036b96:	jb     0x140036c00
   140036b98:	mov    rax,QWORD PTR [rbp-0x59]
   140036b9c:	lea    r8,[rip+0xcccd]        # 0x140043870
   140036ba3:	lea    edx,[rbx+0x32]
   140036ba6:	movzx  ecx,WORD PTR [rax+0x2]
   140036baa:	movzx  r9d,WORD PTR [rax]
   140036bae:	mov    DWORD PTR [rsp+0x20],ecx
   140036bb2:	lea    rcx,[rbp-0x49]
   140036bb6:	call   0x140013b28
   140036bbb:	test   eax,eax
   140036bbd:	js     0x140036c00
   140036bbf:	lea    r9,[rbp-0x69]
   140036bc3:	mov    QWORD PTR [rbp-0x71],rbx
   140036bc7:	lea    r8,[rbp-0x71]
   140036bcb:	mov    rcx,rdi
   140036bce:	lea    rdx,[rbp-0x49]
   140036bd2:	call   QWORD PTR [rip+0x6870]        # 0x14003d448
   140036bd8:	mov    edx,DWORD PTR [rbp-0x69]
   140036bdb:	lea    r8,[rbp-0x61]
   140036bdf:	mov    rcx,QWORD PTR [rbp-0x71]
   140036be3:	mov    QWORD PTR [rbp-0x61],rbx
   140036be7:	call   0x14002e594
   140036bec:	test   eax,eax
   140036bee:	js     0x140036c00
   140036bf0:	mov    r8d,DWORD PTR [rbp-0x61]
   140036bf4:	mov    rcx,rsi
   140036bf7:	mov    rdx,QWORD PTR [rbp-0x71]
   140036bfb:	call   0x1400116dc
   140036c00:	mov    rcx,rdi
   140036c03:	call   QWORD PTR [rip+0x6a3f]        # 0x14003d648
   140036c09:	mov    rcx,QWORD PTR [rsi]
   140036c0c:	call   QWORD PTR [rip+0x1c3fe]        # 0x140053010
   140036c12:	test   eax,eax
   140036c14:	setne  al
   140036c17:	mov    rcx,QWORD PTR [rbp+0x27]
   140036c1b:	xor    rcx,rsp
   140036c1e:	call   0x1400141d0
   140036c23:	mov    rbx,QWORD PTR [rsp+0x120]
   140036c2b:	add    rsp,0xe0
   140036c32:	pop    r15
   140036c34:	pop    r14
   140036c36:	pop    rdi
   140036c37:	pop    rsi
   140036c38:	pop    rbp
   140036c39:	ret    
   140036c3a:	int3   
   140036c3b:	int3   
   140036c3c:	int3   
   140036c3d:	int3   
   140036c3e:	int3   
   140036c3f:	int3   
   140036c40:	mov    QWORD PTR [rsp+0x8],rbx
   140036c45:	mov    QWORD PTR [rsp+0x10],rsi
   140036c4a:	push   rdi
   140036c4b:	sub    rsp,0x20
   140036c4f:	mov    rdi,rdx
   140036c52:	mov    rbx,rcx
   140036c55:	mov    rdx,QWORD PTR [rcx+0x10]
   140036c59:	cmp    rdi,rdx
   140036c5c:	jbe    0x140036d31
   140036c62:	cmp    QWORD PTR [rcx],0x0
   140036c66:	jne    0x140036c94
   140036c68:	movsxd rax,DWORD PTR [rcx+0x18]
   140036c6c:	mov    edx,0x8
   140036c71:	cmp    rax,rdi
   140036c74:	cmova  rdi,rax
   140036c78:	mov    rcx,rdi
   140036c7b:	call   QWORD PTR [rip+0x697f]        # 0x14003d600
   140036c81:	mov    QWORD PTR [rbx],rax
   140036c84:	test   rax,rax
   140036c87:	jne    0x140036d2d
   140036c8d:	xor    al,al
   140036c8f:	jmp    0x140036d33
   140036c94:	movsxd rcx,DWORD PTR [rcx+0x18]
   140036c98:	test   rcx,rcx
   140036c9b:	jne    0x140036cb0
   140036c9d:	mov    rcx,rdx
   140036ca0:	mov    rax,rdi
   140036ca3:	shr    rcx,1
   140036ca6:	sub    rax,rdx
   140036ca9:	cmp    rax,rcx
   140036cac:	cmova  rcx,rax
   140036cb0:	lea    rax,[rdx+rcx*1]
   140036cb4:	mov    edx,0x8
   140036cb9:	cmp    rdi,rax
   140036cbc:	cmovb  rdi,rax
   140036cc0:	mov    rcx,rdi
   140036cc3:	call   QWORD PTR [rip+0x6937]        # 0x14003d600
   140036cc9:	mov    rsi,rax
   140036ccc:	test   rax,rax
   140036ccf:	je     0x140036c8d
   140036cd1:	mov    rdx,QWORD PTR [rbx+0x8]
   140036cd5:	mov    rcx,rax
   140036cd8:	mov    r8,QWORD PTR [rbx]
   140036cdb:	shl    rdx,0x3
   140036cdf:	mov    r9,rdx
   140036ce2:	call   QWORD PTR [rip+0x6940]        # 0x14003d628
   140036ce8:	test   eax,eax
   140036cea:	je     0x140036d21
   140036cec:	cmp    eax,0xc
   140036cef:	je     0x140036d16
   140036cf1:	cmp    eax,0x16
   140036cf4:	je     0x140036d0b
   140036cf6:	cmp    eax,0x22
   140036cf9:	je     0x140036d0b
   140036cfb:	cmp    eax,0x50
   140036cfe:	je     0x140036d21
   140036d00:	mov    ecx,0x80004005
   140036d05:	call   0x1400152fc
   140036d0a:	int3   
   140036d0b:	mov    ecx,0x80070057
   140036d10:	call   0x1400152fc
   140036d15:	int3   
   140036d16:	mov    ecx,0x8007000e
   140036d1b:	call   0x1400152fc
   140036d20:	int3   
   140036d21:	mov    rcx,QWORD PTR [rbx]
   140036d24:	call   QWORD PTR [rip+0x691e]        # 0x14003d648
   140036d2a:	mov    QWORD PTR [rbx],rsi
   140036d2d:	mov    QWORD PTR [rbx+0x10],rdi
   140036d31:	mov    al,0x1
   140036d33:	mov    rbx,QWORD PTR [rsp+0x30]
   140036d38:	mov    rsi,QWORD PTR [rsp+0x38]
   140036d3d:	add    rsp,0x20
   140036d41:	pop    rdi
   140036d42:	ret    
   140036d43:	int3   
   140036d44:	int3   
   140036d45:	int3   
   140036d46:	int3   
   140036d47:	int3   
   140036d48:	int3   
   140036d49:	int3   
   140036d4a:	int3   
   140036d4b:	int3   
   140036d4c:	mov    QWORD PTR [rsp+0x8],rbx
   140036d51:	mov    QWORD PTR [rsp+0x10],rsi
   140036d56:	push   rdi
   140036d57:	sub    rsp,0x20
   140036d5b:	mov    rdi,rdx
   140036d5e:	mov    rbx,rcx
   140036d61:	mov    rdx,QWORD PTR [rcx+0x10]
   140036d65:	cmp    rdi,rdx
   140036d68:	jbe    0x140036e3d
   140036d6e:	cmp    QWORD PTR [rcx],0x0
   140036d72:	jne    0x140036da0
   140036d74:	movsxd rax,DWORD PTR [rcx+0x18]
   140036d78:	mov    edx,0x4
   140036d7d:	cmp    rax,rdi
   140036d80:	cmova  rdi,rax
   140036d84:	mov    rcx,rdi
   140036d87:	call   QWORD PTR [rip+0x6873]        # 0x14003d600
   140036d8d:	mov    QWORD PTR [rbx],rax
   140036d90:	test   rax,rax
   140036d93:	jne    0x140036e39
   140036d99:	xor    al,al
   140036d9b:	jmp    0x140036e3f
   140036da0:	movsxd rcx,DWORD PTR [rcx+0x18]
   140036da4:	test   rcx,rcx
   140036da7:	jne    0x140036dbc
   140036da9:	mov    rcx,rdx
   140036dac:	mov    rax,rdi
   140036daf:	shr    rcx,1
   140036db2:	sub    rax,rdx
   140036db5:	cmp    rax,rcx
   140036db8:	cmova  rcx,rax
   140036dbc:	lea    rax,[rdx+rcx*1]
   140036dc0:	mov    edx,0x4
   140036dc5:	cmp    rdi,rax
   140036dc8:	cmovb  rdi,rax
   140036dcc:	mov    rcx,rdi
   140036dcf:	call   QWORD PTR [rip+0x682b]        # 0x14003d600
   140036dd5:	mov    rsi,rax
   140036dd8:	test   rax,rax
   140036ddb:	je     0x140036d99
   140036ddd:	mov    rdx,QWORD PTR [rbx+0x8]
   140036de1:	mov    rcx,rax
   140036de4:	mov    r8,QWORD PTR [rbx]
   140036de7:	shl    rdx,0x2
   140036deb:	mov    r9,rdx
   140036dee:	call   QWORD PTR [rip+0x6834]        # 0x14003d628
   140036df4:	test   eax,eax
   140036df6:	je     0x140036e2d
   140036df8:	cmp    eax,0xc
   140036dfb:	je     0x140036e22
   140036dfd:	cmp    eax,0x16
   140036e00:	je     0x140036e17
   140036e02:	cmp    eax,0x22
   140036e05:	je     0x140036e17
   140036e07:	cmp    eax,0x50
   140036e0a:	je     0x140036e2d
   140036e0c:	mov    ecx,0x80004005
   140036e11:	call   0x1400152fc
   140036e16:	int3   
   140036e17:	mov    ecx,0x80070057
   140036e1c:	call   0x1400152fc
   140036e21:	int3   
   140036e22:	mov    ecx,0x8007000e
   140036e27:	call   0x1400152fc
   140036e2c:	int3   
   140036e2d:	mov    rcx,QWORD PTR [rbx]
   140036e30:	call   QWORD PTR [rip+0x6812]        # 0x14003d648
   140036e36:	mov    QWORD PTR [rbx],rsi
   140036e39:	mov    QWORD PTR [rbx+0x10],rdi
   140036e3d:	mov    al,0x1
   140036e3f:	mov    rbx,QWORD PTR [rsp+0x30]
   140036e44:	mov    rsi,QWORD PTR [rsp+0x38]
   140036e49:	add    rsp,0x20
   140036e4d:	pop    rdi
   140036e4e:	ret    
   140036e4f:	int3   
   140036e50:	int3   
   140036e51:	int3   
   140036e52:	int3   
   140036e53:	int3   
   140036e54:	int3   
   140036e55:	int3   
   140036e56:	int3   
   140036e57:	int3   
   140036e58:	mov    rax,rsp
   140036e5b:	mov    DWORD PTR [rax+0x10],edx
   140036e5e:	mov    QWORD PTR [rax+0x8],rcx
   140036e62:	push   rdi
   140036e63:	sub    rsp,0x30
   140036e67:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140036e6f:	mov    QWORD PTR [rax+0x18],rbx
   140036e73:	mov    QWORD PTR [rax+0x20],rsi
   140036e77:	mov    sil,r8b
   140036e7a:	mov    edi,edx
   140036e7c:	mov    rbx,rcx
   140036e7f:	mov    rcx,QWORD PTR [rcx]
   140036e82:	test   rcx,rcx
   140036e85:	je     0x140036e90
   140036e87:	call   0x140013de0
   140036e8c:	and    QWORD PTR [rbx],0x0
   140036e90:	test   sil,sil
   140036e93:	je     0x140036eea
   140036e95:	mov    rcx,rdi
   140036e98:	movabs rax,0x1fffffffffffffff
   140036ea2:	cmp    rdi,rax
   140036ea5:	jbe    0x140036eab
   140036ea7:	xor    al,al
   140036ea9:	jmp    0x140036ef7
   140036eab:	mov    eax,0x8
   140036eb0:	mul    rcx
   140036eb3:	mov    rcx,0xffffffffffffffff
   140036eba:	cmovo  rax,rcx
   140036ebe:	mov    rcx,rax
   140036ec1:	call   0x140013dd4
   140036ec6:	mov    QWORD PTR [rbx],rax
   140036ec9:	jmp    0x140036ed4
   140036ecb:	mov    rbx,QWORD PTR [rsp+0x40]
   140036ed0:	mov    edi,DWORD PTR [rsp+0x48]
   140036ed4:	mov    rcx,QWORD PTR [rbx]
   140036ed7:	test   rcx,rcx
   140036eda:	je     0x140036ea7
   140036edc:	mov    r8d,edi
   140036edf:	shl    r8,0x3
   140036ee3:	xor    edx,edx
   140036ee5:	call   0x140014694
   140036eea:	mov    DWORD PTR [rbx+0x10],edi
   140036eed:	mov    rcx,rbx
   140036ef0:	call   0x140005ca8
   140036ef5:	mov    al,0x1
   140036ef7:	mov    rbx,QWORD PTR [rsp+0x50]
   140036efc:	mov    rsi,QWORD PTR [rsp+0x58]
   140036f01:	add    rsp,0x30
   140036f05:	pop    rdi
   140036f06:	ret    
   140036f07:	mov    QWORD PTR [rsp+0x10],rdx
   140036f0c:	push   rbp
   140036f0d:	sub    rsp,0x20
   140036f11:	mov    rbp,rdx
   140036f14:	lea    rax,[rip+0xffffffffffffffb0]        # 0x140036ecb
   140036f1b:	add    rsp,0x20
   140036f1f:	pop    rbp
   140036f20:	ret    
   140036f21:	int3   
   140036f22:	int3   
   140036f23:	int3   
   140036f24:	int3   
   140036f25:	int3   
   140036f26:	int3   
   140036f27:	int3   
   140036f28:	mov    rax,rsp
   140036f2b:	mov    DWORD PTR [rax+0x10],edx
   140036f2e:	mov    QWORD PTR [rax+0x8],rcx
   140036f32:	push   rdi
   140036f33:	sub    rsp,0x30
   140036f37:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140036f3f:	mov    QWORD PTR [rax+0x18],rbx
   140036f43:	mov    QWORD PTR [rax+0x20],rsi
   140036f47:	mov    rsi,r9
   140036f4a:	mov    rbx,rcx
   140036f4d:	movsxd rdi,edx
   140036f50:	mov    rax,QWORD PTR [rcx]
   140036f53:	lea    rcx,[rax+rdi*8]
   140036f57:	mov    QWORD PTR [rsp+0x28],rcx
   140036f5c:	test   rcx,rcx
   140036f5f:	je     0x140036f6a
   140036f61:	mov    rdx,r8
   140036f64:	call   0x140035b5c
   140036f69:	nop
   140036f6a:	mov    rax,QWORD PTR [rbx+0x8]
   140036f6e:	lea    rcx,[rax+rdi*8]
   140036f72:	mov    QWORD PTR [rsp+0x40],rcx
   140036f77:	test   rcx,rcx
   140036f7a:	je     0x140036f82
   140036f7c:	mov    rax,QWORD PTR [rsi]
   140036f7f:	mov    QWORD PTR [rcx],rax
   140036f82:	mov    rbx,QWORD PTR [rsp+0x50]
   140036f87:	mov    rsi,QWORD PTR [rsp+0x58]
   140036f8c:	add    rsp,0x30
   140036f90:	pop    rdi
   140036f91:	ret    
   140036f92:	rex push rbp
   140036f94:	sub    rsp,0x20
   140036f98:	mov    rbp,rdx
   140036f9b:	mov    rdx,QWORD PTR [rbp+0x40]
   140036f9f:	movsxd rax,DWORD PTR [rbp+0x48]
   140036fa3:	imul   rax,rax,0x8
   140036fa7:	mov    rdx,QWORD PTR [rdx]
   140036faa:	add    rdx,rax
   140036fad:	mov    rcx,QWORD PTR [rbp+0x28]
   140036fb1:	call   0x14000dff0
   140036fb6:	add    rsp,0x20
   140036fba:	pop    rbp
   140036fbb:	ret    
   140036fbc:	int3   
   140036fbd:	int3   
   140036fbe:	int3   
   140036fbf:	int3   
   140036fc0:	int3   
   140036fc1:	int3   
   140036fc2:	int3   
   140036fc3:	int3   
   140036fc4:	mov    rax,rsp
   140036fc7:	mov    DWORD PTR [rax+0x10],edx
   140036fca:	mov    QWORD PTR [rax+0x8],rcx
   140036fce:	push   rdi
   140036fcf:	sub    rsp,0x30
   140036fd3:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140036fdb:	mov    QWORD PTR [rax+0x18],rbx
   140036fdf:	mov    QWORD PTR [rax+0x20],rsi
   140036fe3:	mov    rsi,r9
   140036fe6:	mov    rbx,rcx
   140036fe9:	movsxd rdi,edx
   140036fec:	mov    rax,QWORD PTR [rcx]
   140036fef:	lea    rcx,[rax+rdi*8]
   140036ff3:	mov    QWORD PTR [rsp+0x28],rcx
   140036ff8:	test   rcx,rcx
   140036ffb:	je     0x140037006
   140036ffd:	mov    rdx,r8
   140037000:	call   0x140035b5c
   140037005:	nop
   140037006:	mov    rax,QWORD PTR [rbx+0x8]
   14003700a:	lea    rcx,[rax+rdi*8]
   14003700e:	mov    QWORD PTR [rsp+0x28],rcx
   140037013:	test   rcx,rcx
   140037016:	je     0x140037021
   140037018:	mov    rdx,rsi
   14003701b:	call   0x140035b5c
   140037020:	nop
   140037021:	mov    rbx,QWORD PTR [rsp+0x50]
   140037026:	mov    rsi,QWORD PTR [rsp+0x58]
   14003702b:	add    rsp,0x30
   14003702f:	pop    rdi
   140037030:	ret    
   140037031:	rex push rbp
   140037033:	sub    rsp,0x20
   140037037:	mov    rbp,rdx
   14003703a:	mov    rdx,QWORD PTR [rbp+0x40]
   14003703e:	movsxd rax,DWORD PTR [rbp+0x48]
   140037042:	imul   rax,rax,0x8
   140037046:	mov    rdx,QWORD PTR [rdx]
   140037049:	add    rdx,rax
   14003704c:	mov    rcx,QWORD PTR [rbp+0x28]
   140037050:	call   0x14000dff0
   140037055:	add    rsp,0x20
   140037059:	pop    rbp
   14003705a:	ret    
   14003705b:	rex push rbp
   14003705d:	sub    rsp,0x20
   140037061:	mov    rbp,rdx
   140037064:	mov    rdx,QWORD PTR [rbp+0x40]
   140037068:	add    rdx,0x8
   14003706c:	movsxd rax,DWORD PTR [rbp+0x48]
   140037070:	imul   rax,rax,0x8
   140037074:	mov    rdx,QWORD PTR [rdx]
   140037077:	add    rdx,rax
   14003707a:	mov    rcx,QWORD PTR [rbp+0x28]
   14003707e:	call   0x14000dff0
   140037083:	add    rsp,0x20
   140037087:	pop    rbp
   140037088:	ret    
   140037089:	int3   
   14003708a:	int3   
   14003708b:	int3   
   14003708c:	int3   
   14003708d:	int3   
   14003708e:	int3   
   14003708f:	int3   
   140037090:	mov    QWORD PTR [rsp+0x8],rbx
   140037095:	mov    QWORD PTR [rsp+0x10],rsi
   14003709a:	push   rdi
   14003709b:	sub    rsp,0x20
   14003709f:	xor    ebx,ebx
   1400370a1:	mov    rsi,rdx
   1400370a4:	mov    rdi,rcx
   1400370a7:	cmp    DWORD PTR [rcx+0x10],ebx
   1400370aa:	jle    0x1400370c9
   1400370ac:	mov    rax,QWORD PTR [rdi]
   1400370af:	mov    rdx,rsi
   1400370b2:	movsxd r8,ebx
   1400370b5:	lea    rcx,[rax+r8*8]
   1400370b9:	call   0x140036074
   1400370be:	test   al,al
   1400370c0:	jne    0x1400370cc
   1400370c2:	inc    ebx
   1400370c4:	cmp    ebx,DWORD PTR [rdi+0x10]
   1400370c7:	jl     0x1400370ac
   1400370c9:	or     ebx,0xffffffff
   1400370cc:	cmp    ebx,0xffffffff
   1400370cf:	jne    0x1400370d5
   1400370d1:	xor    eax,eax
   1400370d3:	jmp    0x1400370e2
   1400370d5:	mov    edx,ebx
   1400370d7:	mov    rcx,rdi
   1400370da:	call   0x140036ac4
   1400370df:	mov    rax,QWORD PTR [rax]
   1400370e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400370e7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400370ec:	add    rsp,0x20
   1400370f0:	pop    rdi
   1400370f1:	ret    
   1400370f2:	int3   
   1400370f3:	int3   
   1400370f4:	int3   
   1400370f5:	int3   
   1400370f6:	int3   
   1400370f7:	int3   
   1400370f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400370fd:	mov    QWORD PTR [rsp+0x10],rbp
   140037102:	mov    QWORD PTR [rsp+0x18],rsi
   140037107:	push   rdi
   140037108:	sub    rsp,0x30
   14003710c:	and    DWORD PTR [rsp+0x20],0x0
   140037111:	xor    ebx,ebx
   140037113:	mov    rbp,r8
   140037116:	mov    rdi,rdx
   140037119:	mov    rsi,rcx
   14003711c:	cmp    DWORD PTR [rcx+0x10],ebx
   14003711f:	jle    0x14003713e
   140037121:	mov    rax,QWORD PTR [rsi]
   140037124:	movsxd rdx,ebx
   140037127:	lea    rcx,[rax+rdx*8]
   14003712b:	mov    rdx,rbp
   14003712e:	call   0x140036074
   140037133:	test   al,al
   140037135:	jne    0x140037141
   140037137:	inc    ebx
   140037139:	cmp    ebx,DWORD PTR [rsi+0x10]
   14003713c:	jl     0x140037121
   14003713e:	or     ebx,0xffffffff
   140037141:	cmp    ebx,0xffffffff
   140037144:	jne    0x140037162
   140037146:	and    QWORD PTR [rdi],0x0
   14003714a:	mov    rbx,QWORD PTR [rsp+0x40]
   14003714f:	mov    rax,rdi
   140037152:	mov    rbp,QWORD PTR [rsp+0x48]
   140037157:	mov    rsi,QWORD PTR [rsp+0x50]
   14003715c:	add    rsp,0x30
   140037160:	pop    rdi
   140037161:	ret    
   140037162:	test   ebx,ebx
   140037164:	js     0x140037180
   140037166:	cmp    ebx,DWORD PTR [rsi+0x10]
   140037169:	jge    0x140037180
   14003716b:	mov    rax,QWORD PTR [rsi+0x8]
   14003716f:	movsxd rcx,ebx
   140037172:	lea    rdx,[rax+rcx*8]
   140037176:	mov    rcx,rdi
   140037179:	call   0x140035b5c
   14003717e:	jmp    0x14003714a
   140037180:	xor    r9d,r9d
   140037183:	xor    r8d,r8d
   140037186:	mov    ecx,0xc000008c
   14003718b:	lea    edx,[r9+0x1]
   14003718f:	call   QWORD PTR [rip+0x5fe3]        # 0x14003d178
   140037195:	int3   
   140037196:	int3   
   140037197:	int3   
   140037198:	int3   
   140037199:	int3   
   14003719a:	int3   
   14003719b:	int3   
   14003719c:	mov    rax,rsp
   14003719f:	mov    QWORD PTR [rax+0x8],rbx
   1400371a3:	mov    QWORD PTR [rax+0x10],rbp
   1400371a7:	mov    QWORD PTR [rax+0x18],rsi
   1400371ab:	mov    QWORD PTR [rax+0x20],rdi
   1400371af:	push   r14
   1400371b1:	sub    rsp,0x20
   1400371b5:	xor    edi,edi
   1400371b7:	lea    rbx,[rip+0x18042]        # 0x14004f200
   1400371be:	xor    esi,esi
   1400371c0:	mov    rbp,r8
   1400371c3:	mov    r14,rdx
   1400371c6:	test   rdi,rdi
   1400371c9:	jne    0x14003720f
   1400371cb:	movsxd rax,esi
   1400371ce:	lea    rcx,[rip+0x17fdb]        # 0x14004f1b0
   1400371d5:	mov    rdx,r14
   1400371d8:	lea    rcx,[rcx+rax*8]
   1400371dc:	call   0x140036074
   1400371e1:	test   al,al
   1400371e3:	je     0x140037204
   1400371e5:	mov    rdx,QWORD PTR [rbx]
   1400371e8:	test   rdx,rdx
   1400371eb:	je     0x140037204
   1400371ed:	add    rdx,0xa4
   1400371f4:	mov    rcx,rbp
   1400371f7:	call   QWORD PTR [rip+0x5f9b]        # 0x14003d198
   1400371fd:	test   eax,eax
   1400371ff:	jne    0x140037204
   140037201:	mov    rdi,QWORD PTR [rbx]
   140037204:	inc    esi
   140037206:	add    rbx,0x8
   14003720a:	cmp    esi,0xa
   14003720d:	jl     0x1400371c6
   14003720f:	mov    rbx,QWORD PTR [rsp+0x30]
   140037214:	mov    rax,rdi
   140037217:	mov    rdi,QWORD PTR [rsp+0x48]
   14003721c:	mov    rbp,QWORD PTR [rsp+0x38]
   140037221:	mov    rsi,QWORD PTR [rsp+0x40]
   140037226:	add    rsp,0x20
   14003722a:	pop    r14
   14003722c:	ret    
   14003722d:	int3   
   14003722e:	int3   
   14003722f:	int3   
   140037230:	int3   
   140037231:	int3   
   140037232:	int3   
   140037233:	int3   
   140037234:	mov    rax,rsp
   140037237:	push   rdi
   140037238:	sub    rsp,0x30
   14003723c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140037244:	mov    QWORD PTR [rax+0x8],rbx
   140037248:	mov    QWORD PTR [rax+0x10],rbp
   14003724c:	mov    QWORD PTR [rax+0x20],rsi
   140037250:	mov    rdi,rdx
   140037253:	mov    rsi,rcx
   140037256:	xor    bpl,bpl
   140037259:	xor    ebx,ebx
   14003725b:	mov    QWORD PTR [rax+0x18],rbx
   14003725f:	mov    rcx,rdx
   140037262:	call   0x140039984
   140037267:	test   al,al
   140037269:	je     0x1400372f3
   14003726f:	lea    r8,[rsp+0x50]
   140037274:	mov    rcx,rdi
   140037277:	call   0x140039860
   14003727c:	mov    rbx,QWORD PTR [rsp+0x50]
   140037281:	test   al,al
   140037283:	je     0x1400372f3
   140037285:	mov    rcx,rbx
   140037288:	call   QWORD PTR [rip+0x1bd82]        # 0x140053010
   14003728e:	mov    edi,eax
   140037290:	mov    rcx,QWORD PTR [rsi+0x20]
   140037294:	call   QWORD PTR [rip+0x1bd76]        # 0x140053010
   14003729a:	cmp    edi,eax
   14003729c:	mov    rcx,rbx
   14003729f:	jb     0x1400372a5
   1400372a1:	mov    rcx,QWORD PTR [rsi+0x20]
   1400372a5:	call   QWORD PTR [rip+0x1bd65]        # 0x140053010
   1400372ab:	xor    cl,cl
   1400372ad:	test   eax,eax
   1400372af:	jle    0x1400372f3
   1400372b1:	xor    edx,edx
   1400372b3:	movsxd r11,eax
   1400372b6:	mov    r8,rbx
   1400372b9:	mov    r10,rbx
   1400372bc:	neg    r10
   1400372bf:	test   cl,cl
   1400372c1:	jne    0x1400372f3
   1400372c3:	movzx  r9d,WORD PTR [r8]
   1400372c7:	mov    rcx,QWORD PTR [rsi+0x20]
   1400372cb:	add    rcx,r10
   1400372ce:	cmp    r9w,WORD PTR [rcx+r8*1]
   1400372d3:	jne    0x1400372e5
   1400372d5:	xor    cl,cl
   1400372d7:	cmp    r9w,0x2e
   1400372dc:	jne    0x1400372e7
   1400372de:	test   rdx,rdx
   1400372e1:	setg   bpl
   1400372e5:	mov    cl,0x1
   1400372e7:	inc    rdx
   1400372ea:	add    r8,0x2
   1400372ee:	cmp    rdx,r11
   1400372f1:	jl     0x1400372bf
   1400372f3:	mov    rcx,rbx
   1400372f6:	call   QWORD PTR [rip+0x1bdc4]        # 0x1400530c0
   1400372fc:	mov    al,bpl
   1400372ff:	mov    rbx,QWORD PTR [rsp+0x40]
   140037304:	mov    rbp,QWORD PTR [rsp+0x48]
   140037309:	mov    rsi,QWORD PTR [rsp+0x58]
   14003730e:	add    rsp,0x30
   140037312:	pop    rdi
   140037313:	ret    
   140037314:	lea    rcx,[rdx+0x50]
   14003731b:	jmp    0x14000f3c0
   140037320:	int3   
   140037321:	int3   
   140037322:	int3   
   140037323:	int3   
   140037324:	int3   
   140037325:	int3   
   140037326:	int3   
   140037327:	int3   
   140037328:	mov    rax,rsp
   14003732b:	mov    QWORD PTR [rax+0x8],rcx
   14003732f:	push   rdi
   140037330:	push   r14
   140037332:	push   r15
   140037334:	sub    rsp,0x40
   140037338:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   140037340:	mov    QWORD PTR [rax+0x10],rbx
   140037344:	mov    QWORD PTR [rax+0x18],rsi
   140037348:	mov    esi,r9d
   14003734b:	mov    r15d,r8d
   14003734e:	mov    r14,rdx
   140037351:	mov    rbx,rcx
   140037354:	cmp    QWORD PTR [rcx+0x40],0x0
   140037359:	jne    0x1400373a8
   14003735b:	mov    edx,DWORD PTR [rcx+0x34]
   14003735e:	add    rcx,0x38
   140037362:	mov    r8d,0x20
   140037368:	call   0x1400132c4
   14003736d:	mov    r8,rax
   140037370:	test   rax,rax
   140037373:	jne    0x140037380
   140037375:	mov    ecx,0x8007000e
   14003737a:	call   0x1400152fc
   14003737f:	int3   
   140037380:	mov    edx,DWORD PTR [rbx+0x34]
   140037383:	lea    ecx,[rdx-0x1]
   140037386:	shl    rcx,0x5
   14003738a:	add    rcx,0x8
   14003738e:	add    r8,rcx
   140037391:	jmp    0x1400373a3
   140037393:	mov    rax,QWORD PTR [rbx+0x40]
   140037397:	mov    QWORD PTR [r8+0x10],rax
   14003739b:	mov    QWORD PTR [rbx+0x40],r8
   14003739f:	sub    r8,0x20
   1400373a3:	sub    edx,0x1
   1400373a6:	jns    0x140037393
   1400373a8:	mov    rdi,QWORD PTR [rbx+0x40]
   1400373ac:	test   rdi,rdi
   1400373af:	jne    0x1400373bc
   1400373b1:	mov    ecx,0x80004005
   1400373b6:	call   0x1400152fc
   1400373bb:	int3   
   1400373bc:	mov    QWORD PTR [rsp+0x20],rdi
   1400373c1:	mov    rax,QWORD PTR [rdi+0x10]
   1400373c5:	mov    QWORD PTR [rbx+0x40],rax
   1400373c9:	mov    rax,QWORD PTR [r14]
   1400373cc:	mov    QWORD PTR [rdi],rax
   1400373cf:	mov    DWORD PTR [rdi+0x18],esi
   1400373d2:	inc    QWORD PTR [rbx+0x8]
   1400373d6:	mov    rax,QWORD PTR [rbx]
   1400373d9:	mov    rcx,QWORD PTR [rax+r15*8]
   1400373dd:	mov    QWORD PTR [rdi+0x10],rcx
   1400373e1:	mov    rax,QWORD PTR [rbx]
   1400373e4:	mov    QWORD PTR [rax+r15*8],rdi
   1400373e8:	mov    rdx,QWORD PTR [rbx+0x8]
   1400373ec:	cmp    rdx,QWORD PTR [rbx+0x20]
   1400373f0:	jbe    0x14003740a
   1400373f2:	cmp    DWORD PTR [rbx+0x30],0x0
   1400373f6:	jne    0x14003740a
   1400373f8:	mov    rcx,rbx
   1400373fb:	call   0x14003a4e4
   140037400:	mov    edx,eax
   140037402:	mov    rcx,rbx
   140037405:	call   0x14003811c
   14003740a:	mov    rax,rdi
   14003740d:	mov    rbx,QWORD PTR [rsp+0x68]
   140037412:	mov    rsi,QWORD PTR [rsp+0x70]
   140037417:	add    rsp,0x40
   14003741b:	pop    r15
   14003741d:	pop    r14
   14003741f:	pop    rdi
   140037420:	ret    
   140037421:	mov    QWORD PTR [rsp+0x10],rdx
   140037426:	push   rbp
   140037427:	sub    rsp,0x20
   14003742b:	mov    rbp,rdx
   14003742e:	mov    rdx,QWORD PTR [rbp+0x60]
   140037432:	mov    rax,QWORD PTR [rdx+0x40]
   140037436:	mov    rcx,QWORD PTR [rbp+0x20]
   14003743a:	mov    QWORD PTR [rcx+0x10],rax
   14003743e:	mov    QWORD PTR [rdx+0x40],rcx
   140037442:	xor    edx,edx
   140037444:	xor    ecx,ecx
   140037446:	call   0x14001562a
   14003744b:	nop
   14003744c:	int3   
   14003744d:	int3   
   14003744e:	int3   
   14003744f:	int3   
   140037450:	int3   
   140037451:	int3   
   140037452:	int3   
   140037453:	int3   
   140037454:	mov    QWORD PTR [rsp+0x8],rbx
   140037459:	mov    QWORD PTR [rsp+0x10],rsi
   14003745e:	push   rbp
   14003745f:	push   rdi
   140037460:	push   r14
   140037462:	mov    rbp,rsp
   140037465:	sub    rsp,0x30
   140037469:	mov    rbx,rdx
   14003746c:	mov    r14,rcx
   14003746f:	xor    esi,esi
   140037471:	lea    rdx,[rip+0xc1b0]        # 0x140043628
   140037478:	mov    rcx,rbx
   14003747b:	call   0x140039a58
   140037480:	test   al,al
   140037482:	je     0x140037587
   140037488:	test   esi,esi
   14003748a:	js     0x140037587
   140037490:	lea    r8,[rbp+0x30]
   140037494:	xor    edx,edx
   140037496:	mov    rcx,rbx
   140037499:	call   0x140039cf0
   14003749e:	mov    esi,eax
   1400374a0:	test   eax,eax
   1400374a2:	js     0x140037471
   1400374a4:	and    QWORD PTR [rbp-0x10],0x0
   1400374a9:	lea    r8,[rbp+0x30]
   1400374ad:	and    QWORD PTR [rbp+0x38],0x0
   1400374b2:	lea    rdx,[rip+0xc17f]        # 0x140043638
   1400374b9:	mov    rcx,rbx
   1400374bc:	call   0x140039cf0
   1400374c1:	test   eax,eax
   1400374c3:	js     0x140037471
   1400374c5:	lea    r8,[rbp-0x10]
   1400374c9:	mov    rdx,rbx
   1400374cc:	call   0x140037a78
   1400374d1:	test   eax,eax
   1400374d3:	js     0x140037471
   1400374d5:	lea    rdx,[rip+0xc15c]        # 0x140043638
   1400374dc:	mov    rcx,rbx
   1400374df:	call   0x140039b44
   1400374e4:	test   eax,eax
   1400374e6:	js     0x140037471
   1400374e8:	lea    r8,[rbp+0x30]
   1400374ec:	mov    rcx,rbx
   1400374ef:	lea    rdx,[rip+0xc152]        # 0x140043648
   1400374f6:	call   0x140039cf0
   1400374fb:	test   eax,eax
   1400374fd:	js     0x140037471
   140037503:	lea    r8,[rbp+0x38]
   140037507:	mov    rdx,rbx
   14003750a:	mov    rcx,r14
   14003750d:	call   0x140037740
   140037512:	test   eax,eax
   140037514:	js     0x140037471
   14003751a:	lea    rdx,[rip+0xc127]        # 0x140043648
   140037521:	mov    rcx,rbx
   140037524:	call   0x140039b44
   140037529:	test   eax,eax
   14003752b:	js     0x140037471
   140037531:	mov    rdi,QWORD PTR [rbp-0x10]
   140037535:	test   rdi,rdi
   140037538:	je     0x140037558
   14003753a:	cmp    QWORD PTR [rbp+0x38],0x0
   14003753f:	je     0x140037566
   140037541:	lea    rcx,[r14+0x28]
   140037545:	lea    r8,[rbp+0x38]
   140037549:	lea    rdx,[rbp-0x10]
   14003754d:	call   0x1400383c4
   140037552:	xor    edi,edi
   140037554:	xor    ecx,ecx
   140037556:	jmp    0x14003755c
   140037558:	mov    rcx,QWORD PTR [rbp+0x38]
   14003755c:	test   rcx,rcx
   14003755f:	je     0x140037566
   140037561:	call   0x140036100
   140037566:	test   rdi,rdi
   140037569:	je     0x140037573
   14003756b:	mov    rcx,rdi
   14003756e:	call   0x1400318e4
   140037573:	lea    rdx,[rip+0xc0ae]        # 0x140043628
   14003757a:	mov    rcx,rbx
   14003757d:	call   0x140039b44
   140037582:	jmp    0x140037471
   140037587:	mov    rbx,QWORD PTR [rsp+0x50]
   14003758c:	mov    eax,esi
   14003758e:	mov    rsi,QWORD PTR [rsp+0x58]
   140037593:	add    rsp,0x30
   140037597:	pop    r14
   140037599:	pop    rdi
   14003759a:	pop    rbp
   14003759b:	ret    
   14003759c:	int3   
   14003759d:	int3   
   14003759e:	int3   
   14003759f:	int3   
   1400375a0:	int3   
   1400375a1:	int3   
   1400375a2:	int3   
   1400375a3:	int3   
   1400375a4:	rex push rbp
   1400375a6:	push   rdi
   1400375a7:	push   r14
   1400375a9:	mov    rbp,rsp
   1400375ac:	sub    rsp,0x30
   1400375b0:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   1400375b8:	mov    QWORD PTR [rsp+0x50],rbx
   1400375bd:	mov    QWORD PTR [rsp+0x58],rsi
   1400375c2:	mov    rsi,rdx
   1400375c5:	mov    r14,rcx
   1400375c8:	mov    BYTE PTR [rbp+0x30],0x0
   1400375cc:	xor    ebx,ebx
   1400375ce:	mov    QWORD PTR [rbp+0x38],rbx
   1400375d2:	xor    edi,edi
   1400375d4:	mov    QWORD PTR [rbp-0x10],rdi
   1400375d8:	lea    rdx,[rip+0xc079]        # 0x140043658
   1400375df:	mov    rcx,rsi
   1400375e2:	call   0x140039a58
   1400375e7:	test   al,al
   1400375e9:	je     0x1400376fc
   1400375ef:	lea    r8,[rbp+0x30]
   1400375f3:	xor    edx,edx
   1400375f5:	mov    rcx,rsi
   1400375f8:	call   0x140039cf0
   1400375fd:	test   eax,eax
   1400375ff:	js     0x1400375d8
   140037601:	lea    r8,[rbp+0x30]
   140037605:	lea    rdx,[rip+0xc074]        # 0x140043680
   14003760c:	mov    rcx,rsi
   14003760f:	call   0x140039cf0
   140037614:	test   eax,eax
   140037616:	js     0x1400375d8
   140037618:	cmp    BYTE PTR [rbp+0x30],0x0
   14003761c:	jne    0x14003764a
   14003761e:	cmp    DWORD PTR [rsi],0x3
   140037621:	jne    0x140037633
   140037623:	lea    rdx,[rbp+0x38]
   140037627:	mov    rcx,rsi
   14003762a:	call   0x140039c24
   14003762f:	mov    rbx,QWORD PTR [rbp+0x38]
   140037633:	test   eax,eax
   140037635:	js     0x1400376d9
   14003763b:	lea    rdx,[rip+0xc03e]        # 0x140043680
   140037642:	mov    rcx,rsi
   140037645:	call   0x140039b44
   14003764a:	test   eax,eax
   14003764c:	js     0x1400376d9
   140037652:	lea    r8,[rbp+0x30]
   140037656:	lea    rdx,[rip+0xc033]        # 0x140043690
   14003765d:	mov    rcx,rsi
   140037660:	call   0x140039cf0
   140037665:	test   eax,eax
   140037667:	js     0x1400376d9
   140037669:	cmp    BYTE PTR [rbp+0x30],0x0
   14003766d:	jne    0x140037697
   14003766f:	cmp    DWORD PTR [rsi],0x3
   140037672:	jne    0x140037684
   140037674:	lea    rdx,[rbp-0x10]
   140037678:	mov    rcx,rsi
   14003767b:	call   0x140039c24
   140037680:	mov    rdi,QWORD PTR [rbp-0x10]
   140037684:	test   eax,eax
   140037686:	js     0x1400376d9
   140037688:	lea    rdx,[rip+0xc001]        # 0x140043690
   14003768f:	mov    rcx,rsi
   140037692:	call   0x140039b44
   140037697:	test   eax,eax
   140037699:	js     0x1400376d9
   14003769b:	lea    rdx,[rip+0xbfb6]        # 0x140043658
   1400376a2:	mov    rcx,rsi
   1400376a5:	call   0x140039b44
   1400376aa:	test   eax,eax
   1400376ac:	js     0x1400376d9
   1400376ae:	mov    rcx,rbx
   1400376b1:	call   QWORD PTR [rip+0x1b959]        # 0x140053010
   1400376b7:	test   eax,eax
   1400376b9:	je     0x1400376d9
   1400376bb:	mov    rcx,rdi
   1400376be:	call   QWORD PTR [rip+0x1b94c]        # 0x140053010
   1400376c4:	test   eax,eax
   1400376c6:	je     0x1400376d9
   1400376c8:	lea    rcx,[r14+0x70]
   1400376cc:	lea    r8,[rbp-0x10]
   1400376d0:	lea    rdx,[rbp+0x38]
   1400376d4:	call   0x140036280
   1400376d9:	mov    rcx,rbx
   1400376dc:	call   QWORD PTR [rip+0x1b9de]        # 0x1400530c0
   1400376e2:	xor    ebx,ebx
   1400376e4:	mov    QWORD PTR [rbp+0x38],rbx
   1400376e8:	mov    rcx,rdi
   1400376eb:	call   QWORD PTR [rip+0x1b9cf]        # 0x1400530c0
   1400376f1:	xor    edi,edi
   1400376f3:	mov    QWORD PTR [rbp-0x10],rdi
   1400376f7:	jmp    0x1400375d8
   1400376fc:	xor    ecx,ecx
   1400376fe:	call   QWORD PTR [rip+0x1b9bc]        # 0x1400530c0
   140037704:	nop
   140037705:	xor    ecx,ecx
   140037707:	call   QWORD PTR [rip+0x1b9b3]        # 0x1400530c0
   14003770d:	xor    eax,eax
   14003770f:	mov    rbx,QWORD PTR [rsp+0x50]
   140037714:	mov    rsi,QWORD PTR [rsp+0x58]
   140037719:	add    rsp,0x30
   14003771d:	pop    r14
   14003771f:	pop    rdi
   140037720:	pop    rbp
   140037721:	ret    
   140037722:	lea    rcx,[rdx+0x68]
   140037729:	jmp    0x14000f3c0
   14003772e:	lea    rcx,[rdx+0x20]
   140037735:	jmp    0x14000f3c0
   14003773a:	int3   
   14003773b:	int3   
   14003773c:	int3   
   14003773d:	int3   
   14003773e:	int3   
   14003773f:	int3   
   140037740:	rex push rbp
   140037742:	push   rsi
   140037743:	push   rdi
   140037744:	push   r12
   140037746:	push   r13
   140037748:	push   r14
   14003774a:	push   r15
   14003774c:	mov    rbp,rsp
   14003774f:	sub    rsp,0x30
   140037753:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   14003775b:	mov    QWORD PTR [rsp+0x70],rbx
   140037760:	mov    r12,r8
   140037763:	mov    rdi,rdx
   140037766:	mov    r13,rcx
   140037769:	mov    ecx,0x50
   14003776e:	call   0x140013d94
   140037773:	mov    QWORD PTR [rbp+0x50],rax
   140037777:	xor    r14d,r14d
   14003777a:	test   rax,rax
   14003777d:	je     0x1400377a8
   14003777f:	mov    QWORD PTR [rax],r14
   140037782:	mov    QWORD PTR [rax+0x8],r14
   140037786:	mov    QWORD PTR [rax+0x10],r14
   14003778a:	mov    DWORD PTR [rax+0x18],r14d
   14003778e:	mov    QWORD PTR [rax+0x20],r14
   140037792:	mov    QWORD PTR [rax+0x28],r14
   140037796:	mov    QWORD PTR [rax+0x30],r14
   14003779a:	mov    QWORD PTR [rax+0x38],r14
   14003779e:	mov    QWORD PTR [rax+0x40],r14
   1400377a2:	mov    QWORD PTR [rax+0x48],r14
   1400377a6:	jmp    0x1400377ab
   1400377a8:	mov    rax,r14
   1400377ab:	mov    QWORD PTR [r12],rax
   1400377af:	test   rax,rax
   1400377b2:	jne    0x1400377be
   1400377b4:	mov    eax,0x8007000e
   1400377b9:	jmp    0x1400379e1
   1400377be:	mov    BYTE PTR [rbp+0x50],r14b
   1400377c2:	lea    r8,[rbp+0x50]
   1400377c6:	lea    rdx,[rip+0xbfeb]        # 0x1400437b8
   1400377cd:	mov    rcx,rdi
   1400377d0:	call   0x140039cf0
   1400377d5:	mov    esi,eax
   1400377d7:	test   eax,eax
   1400377d9:	js     0x1400379df
   1400377df:	cmp    BYTE PTR [rbp+0x50],r14b
   1400377e3:	jne    0x1400378e6
   1400377e9:	mov    QWORD PTR [rbp-0x10],r14
   1400377ed:	mov    DWORD PTR [rbp+0x58],r14d
   1400377f1:	lea    rdx,[rip+0xbfe8]        # 0x1400437e0
   1400377f8:	mov    rcx,rdi
   1400377fb:	call   0x140039a58
   140037800:	test   al,al
   140037802:	je     0x1400378c9
   140037808:	test   esi,esi
   14003780a:	js     0x1400378de
   140037810:	lea    r8,[rbp+0x50]
   140037814:	xor    edx,edx
   140037816:	mov    rcx,rdi
   140037819:	call   0x140039cf0
   14003781e:	mov    esi,eax
   140037820:	test   eax,eax
   140037822:	js     0x1400377f1
   140037824:	lea    rdx,[rbp-0x10]
   140037828:	mov    rcx,rdi
   14003782b:	call   0x140039c24
   140037830:	mov    esi,eax
   140037832:	mov    rbx,QWORD PTR [rbp-0x10]
   140037836:	test   eax,eax
   140037838:	js     0x140037880
   14003783a:	lea    rdx,[rbp+0x58]
   14003783e:	mov    rcx,rbx
   140037841:	call   0x1400385b8
   140037846:	test   al,al
   140037848:	je     0x1400378b6
   14003784a:	mov    r14,QWORD PTR [r12]
   14003784e:	mov    r15,QWORD PTR [r14+0x8]
   140037852:	cmp    r15,QWORD PTR [r14+0x10]
   140037856:	jb     0x140037868
   140037858:	lea    rdx,[r15+0x1]
   14003785c:	mov    rcx,r14
   14003785f:	call   0x140036d4c
   140037864:	test   al,al
   140037866:	je     0x1400378ab
   140037868:	mov    rax,QWORD PTR [r14]
   14003786b:	lea    rcx,[rax+r15*4]
   14003786f:	test   rcx,rcx
   140037872:	je     0x140037879
   140037874:	mov    eax,DWORD PTR [rbp+0x58]
   140037877:	mov    DWORD PTR [rcx],eax
   140037879:	inc    QWORD PTR [r14+0x8]
   14003787d:	xor    r14d,r14d
   140037880:	mov    rcx,rbx
   140037883:	call   QWORD PTR [rip+0x1b837]        # 0x1400530c0
   140037889:	mov    QWORD PTR [rbp-0x10],r14
   14003788d:	test   esi,esi
   14003788f:	js     0x1400377f1
   140037895:	lea    rdx,[rip+0xbf44]        # 0x1400437e0
   14003789c:	mov    rcx,rdi
   14003789f:	call   0x140039b44
   1400378a4:	mov    esi,eax
   1400378a6:	jmp    0x1400377f1
   1400378ab:	mov    ecx,0x8007000e
   1400378b0:	call   0x1400152fc
   1400378b5:	nop
   1400378b6:	mov    rcx,rbx
   1400378b9:	call   QWORD PTR [rip+0x1b801]        # 0x1400530c0
   1400378bf:	mov    eax,0x8000ffff
   1400378c4:	jmp    0x1400379e1
   1400378c9:	test   esi,esi
   1400378cb:	js     0x1400378de
   1400378cd:	lea    rdx,[rip+0xbee4]        # 0x1400437b8
   1400378d4:	mov    rcx,rdi
   1400378d7:	call   0x140039b44
   1400378dc:	mov    esi,eax
   1400378de:	xor    ecx,ecx
   1400378e0:	call   QWORD PTR [rip+0x1b7da]        # 0x1400530c0
   1400378e6:	test   esi,esi
   1400378e8:	js     0x1400379df
   1400378ee:	lea    r8,[rbp+0x50]
   1400378f2:	lea    rdx,[rip+0xbf07]        # 0x140043800
   1400378f9:	mov    rcx,rdi
   1400378fc:	call   0x140039cf0
   140037901:	mov    esi,eax
   140037903:	test   eax,eax
   140037905:	js     0x1400379df
   14003790b:	cmp    BYTE PTR [rbp+0x50],r14b
   14003790f:	jne    0x140037968
   140037911:	cmp    DWORD PTR [rdi],0x3
   140037914:	jne    0x14003794f
   140037916:	mov    QWORD PTR [rbp+0x58],r14
   14003791a:	lea    rdx,[rbp+0x58]
   14003791e:	mov    rcx,rdi
   140037921:	call   0x140039c24
   140037926:	mov    esi,eax
   140037928:	test   eax,eax
   14003792a:	js     0x140037942
   14003792c:	mov    rbx,r14
   14003792f:	lea    r8,[r13+0x70]
   140037933:	mov    rdx,QWORD PTR [rbp+0x58]
   140037937:	mov    rcx,QWORD PTR [r12]
   14003793b:	call   0x140036428
   140037940:	jmp    0x140037946
   140037942:	mov    rbx,QWORD PTR [rbp+0x58]
   140037946:	mov    rcx,rbx
   140037949:	call   QWORD PTR [rip+0x1b771]        # 0x1400530c0
   14003794f:	test   esi,esi
   140037951:	js     0x1400379df
   140037957:	lea    rdx,[rip+0xbea2]        # 0x140043800
   14003795e:	mov    rcx,rdi
   140037961:	call   0x140039b44
   140037966:	mov    esi,eax
   140037968:	test   esi,esi
   14003796a:	js     0x1400379df
   14003796c:	lea    r8,[rbp+0x50]
   140037970:	lea    rdx,[rip+0xbea1]        # 0x140043818
   140037977:	mov    rcx,rdi
   14003797a:	call   0x140039cf0
   14003797f:	mov    esi,eax
   140037981:	test   eax,eax
   140037983:	js     0x1400379df
   140037985:	cmp    BYTE PTR [rbp+0x50],r14b
   140037989:	jne    0x1400379df
   14003798b:	cmp    DWORD PTR [rdi],0x3
   14003798e:	jne    0x1400379cc
   140037990:	mov    QWORD PTR [rbp+0x50],r14
   140037994:	lea    rdx,[rbp+0x50]
   140037998:	mov    rcx,rdi
   14003799b:	call   0x140039c24
   1400379a0:	mov    esi,eax
   1400379a2:	test   eax,eax
   1400379a4:	js     0x1400379bf
   1400379a6:	mov    rbx,r14
   1400379a9:	lea    r8,[r13+0x88]
   1400379b0:	mov    rdx,QWORD PTR [rbp+0x50]
   1400379b4:	mov    rcx,QWORD PTR [r12]
   1400379b8:	call   0x1400363c0
   1400379bd:	jmp    0x1400379c3
   1400379bf:	mov    rbx,QWORD PTR [rbp+0x50]
   1400379c3:	mov    rcx,rbx
   1400379c6:	call   QWORD PTR [rip+0x1b6f4]        # 0x1400530c0
   1400379cc:	test   esi,esi
   1400379ce:	js     0x1400379df
   1400379d0:	lea    rdx,[rip+0xbe41]        # 0x140043818
   1400379d7:	mov    rcx,rdi
   1400379da:	call   0x140039b44
   1400379df:	xor    eax,eax
   1400379e1:	mov    rbx,QWORD PTR [rsp+0x70]
   1400379e6:	add    rsp,0x30
   1400379ea:	pop    r15
   1400379ec:	pop    r14
   1400379ee:	pop    r13
   1400379f0:	pop    r12
   1400379f2:	pop    rdi
   1400379f3:	pop    rsi
   1400379f4:	pop    rbp
   1400379f5:	ret    
   1400379f6:	lea    rcx,[rdx+0x20]
   1400379fd:	jmp    0x14000f3c0
   140037a02:	lea    rcx,[rdx+0x88]
   140037a09:	jmp    0x14000f3c0
   140037a0e:	lea    rcx,[rdx+0x80]
   140037a15:	jmp    0x14000f3c0
   140037a1a:	int3   
   140037a1b:	int3   
   140037a1c:	int3   
   140037a1d:	int3   
   140037a1e:	int3   
   140037a1f:	int3   
   140037a20:	mov    QWORD PTR [rsp+0x8],rbx
   140037a25:	push   rdi
   140037a26:	sub    rsp,0x20
   140037a2a:	mov    rbx,rdx
   140037a2d:	lea    r8,[rsp+0x40]
   140037a32:	mov    rdi,rcx
   140037a35:	lea    rdx,[rip+0xbbcc]        # 0x140043608
   140037a3c:	mov    rcx,rbx
   140037a3f:	call   0x140039cf0
   140037a44:	test   eax,eax
   140037a46:	js     0x140037a66
   140037a48:	mov    rdx,rbx
   140037a4b:	mov    rcx,rdi
   140037a4e:	call   0x140037454
   140037a53:	test   eax,eax
   140037a55:	js     0x140037a66
   140037a57:	lea    rdx,[rip+0xbbaa]        # 0x140043608
   140037a5e:	mov    rcx,rbx
   140037a61:	call   0x140039b44
   140037a66:	mov    rbx,QWORD PTR [rsp+0x30]
   140037a6b:	add    rsp,0x20
   140037a6f:	pop    rdi
   140037a70:	ret    
   140037a71:	int3   
   140037a72:	int3   
   140037a73:	int3   
   140037a74:	int3   
   140037a75:	int3   
   140037a76:	int3   
   140037a77:	int3   
   140037a78:	mov    rax,rsp
   140037a7b:	push   rbp
   140037a7c:	push   rdi
   140037a7d:	push   r12
   140037a7f:	push   r14
   140037a81:	push   r15
   140037a83:	mov    rbp,rsp
   140037a86:	sub    rsp,0x50
   140037a8a:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   140037a92:	mov    QWORD PTR [rax+0x10],rbx
   140037a96:	mov    QWORD PTR [rax+0x18],rsi
   140037a9a:	mov    r12,r8
   140037a9d:	mov    rsi,rdx
   140037aa0:	xor    edi,edi
   140037aa2:	mov    QWORD PTR [rbp-0x10],rdi
   140037aa6:	mov    QWORD PTR [rbp-0x18],rdi
   140037aaa:	mov    QWORD PTR [rbp-0x20],rdi
   140037aae:	mov    QWORD PTR [rbp+0x48],rdi
   140037ab2:	lea    r8,[rbp+0x30]
   140037ab6:	lea    rdx,[rip+0xbc2b]        # 0x1400436e8
   140037abd:	mov    rcx,rsi
   140037ac0:	call   0x140039cf0
   140037ac5:	mov    ebx,eax
   140037ac7:	test   eax,eax
   140037ac9:	js     0x140037cf2
   140037acf:	lea    rdx,[rbp-0x10]
   140037ad3:	mov    rcx,rsi
   140037ad6:	call   0x140039c24
   140037adb:	mov    ebx,eax
   140037add:	test   eax,eax
   140037adf:	js     0x140037cf2
   140037ae5:	lea    rdx,[rip+0xbbfc]        # 0x1400436e8
   140037aec:	mov    rcx,rsi
   140037aef:	call   0x140039b44
   140037af4:	mov    ebx,eax
   140037af6:	test   eax,eax
   140037af8:	js     0x140037cf2
   140037afe:	lea    r8,[rbp+0x30]
   140037b02:	lea    rdx,[rip+0xbbff]        # 0x140043708
   140037b09:	mov    rcx,rsi
   140037b0c:	call   0x140039cf0
   140037b11:	mov    ebx,eax
   140037b13:	test   eax,eax
   140037b15:	js     0x140037cf2
   140037b1b:	lea    rdx,[rbp-0x18]
   140037b1f:	mov    rcx,rsi
   140037b22:	call   0x140039c24
   140037b27:	mov    ebx,eax
   140037b29:	test   eax,eax
   140037b2b:	js     0x140037cf2
   140037b31:	lea    rdx,[rip+0xbbd0]        # 0x140043708
   140037b38:	mov    rcx,rsi
   140037b3b:	call   0x140039b44
   140037b40:	mov    ebx,eax
   140037b42:	test   eax,eax
   140037b44:	js     0x140037cf2
   140037b4a:	lea    r8,[rbp+0x30]
   140037b4e:	lea    rdx,[rip+0xbbd3]        # 0x140043728
   140037b55:	mov    rcx,rsi
   140037b58:	call   0x140039cf0
   140037b5d:	mov    ebx,eax
   140037b5f:	test   eax,eax
   140037b61:	js     0x140037cf2
   140037b67:	lea    rdx,[rbp+0x48]
   140037b6b:	mov    rcx,rsi
   140037b6e:	call   0x140039c24
   140037b73:	mov    ebx,eax
   140037b75:	test   eax,eax
   140037b77:	js     0x140037cf2
   140037b7d:	mov    rcx,QWORD PTR [rbp+0x48]
   140037b81:	call   QWORD PTR [rip+0x5a51]        # 0x14003d5d8
   140037b87:	mov    r15d,eax
   140037b8a:	mov    rcx,QWORD PTR [rbp+0x48]
   140037b8e:	call   QWORD PTR [rip+0x1b52c]        # 0x1400530c0
   140037b94:	mov    QWORD PTR [rbp+0x48],rdi
   140037b98:	lea    rdx,[rip+0xbb89]        # 0x140043728
   140037b9f:	mov    rcx,rsi
   140037ba2:	call   0x140039b44
   140037ba7:	mov    ebx,eax
   140037ba9:	test   eax,eax
   140037bab:	js     0x140037cf2
   140037bb1:	lea    r8,[rbp+0x30]
   140037bb5:	lea    rdx,[rip+0xbb84]        # 0x140043740
   140037bbc:	mov    rcx,rsi
   140037bbf:	call   0x140039cf0
   140037bc4:	mov    ebx,eax
   140037bc6:	test   eax,eax
   140037bc8:	js     0x140037cf2
   140037bce:	mov    rcx,rsi
   140037bd1:	call   0x140039af4
   140037bd6:	lea    rdx,[rip+0xbb63]        # 0x140043740
   140037bdd:	mov    rcx,rsi
   140037be0:	call   0x140039b44
   140037be5:	mov    ebx,eax
   140037be7:	test   eax,eax
   140037be9:	js     0x140037cf2
   140037bef:	lea    r8,[rbp+0x30]
   140037bf3:	lea    rdx,[rip+0xbb5e]        # 0x140043758
   140037bfa:	mov    rcx,rsi
   140037bfd:	call   0x140039cf0
   140037c02:	mov    ebx,eax
   140037c04:	test   eax,eax
   140037c06:	js     0x140037cf2
   140037c0c:	lea    rdx,[rbp-0x20]
   140037c10:	mov    rcx,rsi
   140037c13:	call   0x140039c24
   140037c18:	mov    ebx,eax
   140037c1a:	test   eax,eax
   140037c1c:	js     0x140037cf2
   140037c22:	lea    rdx,[rip+0xbb2f]        # 0x140043758
   140037c29:	mov    rcx,rsi
   140037c2c:	call   0x140039b44
   140037c31:	mov    ebx,eax
   140037c33:	test   eax,eax
   140037c35:	js     0x140037cf2
   140037c3b:	lea    r8,[rbp+0x30]
   140037c3f:	lea    rdx,[rip+0xbb32]        # 0x140043778
   140037c46:	mov    rcx,rsi
   140037c49:	call   0x140039cf0
   140037c4e:	mov    ebx,eax
   140037c50:	test   eax,eax
   140037c52:	js     0x140037cf2
   140037c58:	lea    rdx,[rbp+0x48]
   140037c5c:	mov    rcx,rsi
   140037c5f:	call   0x140039c24
   140037c64:	mov    ebx,eax
   140037c66:	test   eax,eax
   140037c68:	js     0x140037cf2
   140037c6e:	or     r9d,0xffffffff
   140037c72:	mov    DWORD PTR [rsp+0x28],r9d
   140037c77:	mov    rax,QWORD PTR [rbp+0x48]
   140037c7b:	mov    QWORD PTR [rsp+0x20],rax
   140037c80:	lea    r8,[rip+0xbb21]        # 0x1400437a8
   140037c87:	lea    edx,[rdi+0x1]
   140037c8a:	lea    ecx,[rdi+0x7f]
   140037c8d:	call   QWORD PTR [rip+0x56e5]        # 0x14003d378
   140037c93:	cmp    eax,0x2
   140037c96:	sete   r14b
   140037c9a:	lea    rdx,[rip+0xbad7]        # 0x140043778
   140037ca1:	mov    rcx,rsi
   140037ca4:	call   0x140039b44
   140037ca9:	mov    ebx,eax
   140037cab:	test   eax,eax
   140037cad:	js     0x140037cf2
   140037caf:	lea    ecx,[rdi+0x30]
   140037cb2:	call   0x140013d94
   140037cb7:	mov    QWORD PTR [rbp+0x30],rax
   140037cbb:	test   rax,rax
   140037cbe:	je     0x140037ce1
   140037cc0:	mov    BYTE PTR [rsp+0x28],r14b
   140037cc5:	mov    DWORD PTR [rsp+0x20],r15d
   140037cca:	lea    r9,[rbp-0x20]
   140037cce:	lea    r8,[rbp-0x18]
   140037cd2:	lea    rdx,[rbp-0x10]
   140037cd6:	mov    rcx,rax
   140037cd9:	call   0x140038d84
   140037cde:	mov    rdi,rax
   140037ce1:	mov    QWORD PTR [r12],rdi
   140037ce5:	neg    rdi
   140037ce8:	sbb    ebx,ebx
   140037cea:	not    ebx
   140037cec:	and    ebx,0x8007000e
   140037cf2:	mov    rcx,QWORD PTR [rbp+0x48]
   140037cf6:	call   QWORD PTR [rip+0x1b3c4]        # 0x1400530c0
   140037cfc:	nop
   140037cfd:	mov    rcx,QWORD PTR [rbp-0x20]
   140037d01:	call   QWORD PTR [rip+0x1b3b9]        # 0x1400530c0
   140037d07:	nop
   140037d08:	mov    rcx,QWORD PTR [rbp-0x18]
   140037d0c:	call   QWORD PTR [rip+0x1b3ae]        # 0x1400530c0
   140037d12:	nop
   140037d13:	mov    rcx,QWORD PTR [rbp-0x10]
   140037d17:	call   QWORD PTR [rip+0x1b3a3]        # 0x1400530c0
   140037d1d:	mov    eax,ebx
   140037d1f:	lea    r11,[rsp+0x50]
   140037d24:	mov    rbx,QWORD PTR [r11+0x38]
   140037d28:	mov    rsi,QWORD PTR [r11+0x40]
   140037d2c:	mov    rsp,r11
   140037d2f:	pop    r15
   140037d31:	pop    r14
   140037d33:	pop    r12
   140037d35:	pop    rdi
   140037d36:	pop    rbp
   140037d37:	ret    
   140037d38:	lea    rcx,[rdx+0x40]
   140037d3f:	jmp    0x14000f3c0
   140037d44:	lea    rcx,[rdx+0x38]
   140037d4b:	jmp    0x14000f3c0
   140037d50:	lea    rcx,[rdx+0x30]
   140037d57:	jmp    0x14000f3c0
   140037d5c:	lea    rcx,[rdx+0x98]
   140037d63:	jmp    0x14000f3c0
   140037d68:	int3   
   140037d69:	int3   
   140037d6a:	int3   
   140037d6b:	int3   
   140037d6c:	int3   
   140037d6d:	int3   
   140037d6e:	int3   
   140037d6f:	int3   
   140037d70:	mov    QWORD PTR [rsp+0x8],rbx
   140037d75:	push   rdi
   140037d76:	sub    rsp,0x20
   140037d7a:	mov    rbx,rdx
   140037d7d:	mov    BYTE PTR [rsp+0x40],0x0
   140037d82:	mov    rdi,rcx
   140037d85:	lea    r8,[rsp+0x40]
   140037d8a:	mov    rcx,rbx
   140037d8d:	lea    rdx,[rip+0xb7fc]        # 0x140043590
   140037d94:	call   0x140039cf0
   140037d99:	test   eax,eax
   140037d9b:	js     0x140037e78
   140037da1:	lea    r8,[rsp+0x40]
   140037da6:	mov    rcx,rbx
   140037da9:	lea    rdx,[rip+0xb7f8]        # 0x1400435a8
   140037db0:	call   0x140039cf0
   140037db5:	test   eax,eax
   140037db7:	js     0x140037e78
   140037dbd:	mov    rdx,rbx
   140037dc0:	mov    rcx,rdi
   140037dc3:	call   0x140037a20
   140037dc8:	test   eax,eax
   140037dca:	js     0x140037e78
   140037dd0:	lea    rdx,[rip+0xb7d1]        # 0x1400435a8
   140037dd7:	mov    rcx,rbx
   140037dda:	call   0x140039b44
   140037ddf:	test   eax,eax
   140037de1:	js     0x140037e78
   140037de7:	lea    r8,[rsp+0x40]
   140037dec:	mov    rcx,rbx
   140037def:	lea    rdx,[rip+0xb7c2]        # 0x1400435b8
   140037df6:	call   0x140039cf0
   140037dfb:	test   eax,eax
   140037dfd:	js     0x140037e78
   140037dff:	cmp    BYTE PTR [rsp+0x40],0x0
   140037e04:	jne    0x140037e24
   140037e06:	mov    rdx,rbx
   140037e09:	mov    rcx,rdi
   140037e0c:	call   0x1400375a4
   140037e11:	test   eax,eax
   140037e13:	js     0x140037e78
   140037e15:	lea    rdx,[rip+0xb79c]        # 0x1400435b8
   140037e1c:	mov    rcx,rbx
   140037e1f:	call   0x140039b44
   140037e24:	test   eax,eax
   140037e26:	js     0x140037e78
   140037e28:	lea    r8,[rsp+0x40]
   140037e2d:	mov    rcx,rbx
   140037e30:	lea    rdx,[rip+0xb7b1]        # 0x1400435e8
   140037e37:	call   0x140039cf0
   140037e3c:	test   eax,eax
   140037e3e:	js     0x140037e78
   140037e40:	cmp    BYTE PTR [rsp+0x40],0x0
   140037e45:	jne    0x140037e65
   140037e47:	mov    rdx,rbx
   140037e4a:	mov    rcx,rdi
   140037e4d:	call   0x140037e8c
   140037e52:	test   eax,eax
   140037e54:	js     0x140037e78
   140037e56:	lea    rdx,[rip+0xb78b]        # 0x1400435e8
   140037e5d:	mov    rcx,rbx
   140037e60:	call   0x140039b44
   140037e65:	test   eax,eax
   140037e67:	js     0x140037e78
   140037e69:	lea    rdx,[rip+0xb720]        # 0x140043590
   140037e70:	mov    rcx,rbx
   140037e73:	call   0x140039b44
   140037e78:	mov    rbx,QWORD PTR [rsp+0x30]
   140037e7d:	add    rsp,0x20
   140037e81:	pop    rdi
   140037e82:	ret    
   140037e83:	int3   
   140037e84:	int3   
   140037e85:	int3   
   140037e86:	int3   
   140037e87:	int3   
   140037e88:	int3   
   140037e89:	int3   
   140037e8a:	int3   
   140037e8b:	int3   
   140037e8c:	rex push rbp
   140037e8e:	push   rsi
   140037e8f:	push   rdi
   140037e90:	push   r14
   140037e92:	push   r15
   140037e94:	mov    rbp,rsp
   140037e97:	sub    rsp,0x30
   140037e9b:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   140037ea3:	mov    QWORD PTR [rsp+0x60],rbx
   140037ea8:	mov    r14,rdx
   140037eab:	mov    r15,rcx
   140037eae:	mov    BYTE PTR [rbp+0x40],0x0
   140037eb2:	xor    ebx,ebx
   140037eb4:	mov    QWORD PTR [rbp+0x48],rbx
   140037eb8:	xor    edi,edi
   140037eba:	lea    rdx,[rip+0xb7e7]        # 0x1400436a8
   140037ec1:	mov    rcx,r14
   140037ec4:	call   0x140039a58
   140037ec9:	test   al,al
   140037ecb:	je     0x1400380ec
   140037ed1:	lea    r8,[rbp+0x40]
   140037ed5:	xor    edx,edx
   140037ed7:	mov    rcx,r14
   140037eda:	call   0x140039cf0
   140037edf:	mov    edi,eax
   140037ee1:	test   eax,eax
   140037ee3:	js     0x1400380c2
   140037ee9:	lea    r8,[rbp+0x40]
   140037eed:	lea    rdx,[rip+0xb78c]        # 0x140043680
   140037ef4:	mov    rcx,r14
   140037ef7:	call   0x140039cf0
   140037efc:	mov    edi,eax
   140037efe:	test   eax,eax
   140037f00:	js     0x1400380c2
   140037f06:	cmp    BYTE PTR [rbp+0x40],0x0
   140037f0a:	jne    0x140037f3d
   140037f0c:	cmp    DWORD PTR [r14],0x3
   140037f10:	jne    0x140037f24
   140037f12:	lea    rdx,[rbp+0x48]
   140037f16:	mov    rcx,r14
   140037f19:	call   0x140039c24
   140037f1e:	mov    edi,eax
   140037f20:	mov    rbx,QWORD PTR [rbp+0x48]
   140037f24:	test   edi,edi
   140037f26:	js     0x1400380c2
   140037f2c:	lea    rdx,[rip+0xb74d]        # 0x140043680
   140037f33:	mov    rcx,r14
   140037f36:	call   0x140039b44
   140037f3b:	mov    edi,eax
   140037f3d:	test   edi,edi
   140037f3f:	js     0x1400380c2
   140037f45:	lea    r8,[rbp+0x40]
   140037f49:	lea    rdx,[rip+0xb770]        # 0x1400436c0
   140037f50:	mov    rcx,r14
   140037f53:	call   0x140039cf0
   140037f58:	mov    edi,eax
   140037f5a:	test   eax,eax
   140037f5c:	js     0x1400380c2
   140037f62:	mov    ecx,0x20
   140037f67:	call   0x140013d94
   140037f6c:	mov    rsi,rax
   140037f6f:	test   rax,rax
   140037f72:	je     0x140037f8c
   140037f74:	and    QWORD PTR [rax],0x0
   140037f78:	and    QWORD PTR [rax+0x8],0x0
   140037f7d:	and    QWORD PTR [rax+0x10],0x0
   140037f82:	and    DWORD PTR [rax+0x18],0x0
   140037f86:	mov    QWORD PTR [rbp-0x10],rax
   140037f8a:	jmp    0x140037f92
   140037f8c:	xor    esi,esi
   140037f8e:	mov    QWORD PTR [rbp-0x10],rsi
   140037f92:	lea    rdx,[rip+0xb73f]        # 0x1400436d8
   140037f99:	mov    rcx,r14
   140037f9c:	call   0x140039a58
   140037fa1:	test   al,al
   140037fa3:	je     0x14003801f
   140037fa5:	lea    r8,[rbp+0x40]
   140037fa9:	xor    edx,edx
   140037fab:	mov    rcx,r14
   140037fae:	call   0x140039cf0
   140037fb3:	mov    edi,eax
   140037fb5:	test   eax,eax
   140037fb7:	js     0x140038049
   140037fbd:	cmp    BYTE PTR [rbp+0x40],0x0
   140037fc1:	jne    0x140038017
   140037fc3:	cmp    DWORD PTR [r14],0x3
   140037fc7:	jne    0x140038002
   140037fc9:	mov    rdx,QWORD PTR [rsi+0x8]
   140037fcd:	inc    rdx
   140037fd0:	mov    rcx,rsi
   140037fd3:	call   0x140038510
   140037fd8:	test   al,al
   140037fda:	je     0x1400380e1
   140037fe0:	mov    rax,QWORD PTR [rsi+0x8]
   140037fe4:	lea    rcx,[rax-0x1]
   140037fe8:	cmp    rcx,rax
   140037feb:	jae    0x1400380d6
   140037ff1:	mov    rax,QWORD PTR [rsi]
   140037ff4:	lea    rdx,[rax+rcx*8]
   140037ff8:	mov    rcx,r14
   140037ffb:	call   0x140039c24
   140038000:	mov    edi,eax
   140038002:	test   edi,edi
   140038004:	js     0x140038049
   140038006:	lea    rdx,[rip+0xb6cb]        # 0x1400436d8
   14003800d:	mov    rcx,r14
   140038010:	call   0x140039b44
   140038015:	mov    edi,eax
   140038017:	test   edi,edi
   140038019:	jns    0x140037f92
   14003801f:	test   edi,edi
   140038021:	js     0x140038049
   140038023:	lea    rdx,[rip+0xb696]        # 0x1400436c0
   14003802a:	mov    rcx,r14
   14003802d:	call   0x140039b44
   140038032:	mov    edi,eax
   140038034:	test   eax,eax
   140038036:	js     0x140038049
   140038038:	lea    rdx,[rip+0xb669]        # 0x1400436a8
   14003803f:	mov    rcx,r14
   140038042:	call   0x140039b44
   140038047:	mov    edi,eax
   140038049:	test   rsi,rsi
   14003804c:	je     0x1400380c2
   14003804e:	mov    rcx,rbx
   140038051:	call   QWORD PTR [rip+0x1afb9]        # 0x140053010
   140038057:	test   eax,eax
   140038059:	je     0x1400380ba
   14003805b:	lea    rsi,[r15+0x88]
   140038062:	mov    eax,DWORD PTR [rsi+0x10]
   140038065:	inc    eax
   140038067:	movsxd rdx,eax
   14003806a:	mov    r8d,0x8
   140038070:	mov    rcx,QWORD PTR [rsi]
   140038073:	call   QWORD PTR [rip+0x15f87]        # 0x14004e000
   140038079:	test   rax,rax
   14003807c:	je     0x1400380c2
   14003807e:	mov    QWORD PTR [rsi],rax
   140038081:	mov    eax,DWORD PTR [rsi+0x10]
   140038084:	inc    eax
   140038086:	movsxd rdx,eax
   140038089:	mov    r8d,0x8
   14003808f:	mov    rcx,QWORD PTR [rsi+0x8]
   140038093:	call   QWORD PTR [rip+0x15f67]        # 0x14004e000
   140038099:	test   rax,rax
   14003809c:	je     0x1400380c2
   14003809e:	mov    QWORD PTR [rsi+0x8],rax
   1400380a2:	lea    r9,[rbp-0x10]
   1400380a6:	lea    r8,[rbp+0x48]
   1400380aa:	mov    edx,DWORD PTR [rsi+0x10]
   1400380ad:	mov    rcx,rsi
   1400380b0:	call   0x140036f28
   1400380b5:	inc    DWORD PTR [rsi+0x10]
   1400380b8:	jmp    0x1400380c2
   1400380ba:	mov    rcx,rsi
   1400380bd:	call   0x1400360a0
   1400380c2:	mov    rcx,rbx
   1400380c5:	call   QWORD PTR [rip+0x1aff5]        # 0x1400530c0
   1400380cb:	xor    ebx,ebx
   1400380cd:	mov    QWORD PTR [rbp+0x48],rbx
   1400380d1:	jmp    0x140037eba
   1400380d6:	mov    ecx,0x80070057
   1400380db:	call   0x1400152fc
   1400380e0:	int3   
   1400380e1:	mov    ecx,0x8007000e
   1400380e6:	call   0x1400152fc
   1400380eb:	nop
   1400380ec:	xor    ecx,ecx
   1400380ee:	call   QWORD PTR [rip+0x1afcc]        # 0x1400530c0
   1400380f4:	mov    eax,edi
   1400380f6:	mov    rbx,QWORD PTR [rsp+0x60]
   1400380fb:	add    rsp,0x30
   1400380ff:	pop    r15
   140038101:	pop    r14
   140038103:	pop    rdi
   140038104:	pop    rsi
   140038105:	pop    rbp
   140038106:	ret    
   140038107:	lea    rcx,[rdx+0x78]
   14003810e:	jmp    0x14000f3c0
   140038113:	int3   
   140038114:	int3   
   140038115:	int3   
   140038116:	int3   
   140038117:	int3   
   140038118:	int3   
   140038119:	int3   
   14003811a:	int3   
   14003811b:	int3   
   14003811c:	mov    DWORD PTR [rsp+0x10],edx
   140038120:	mov    QWORD PTR [rsp+0x8],rcx
   140038125:	push   rbx
   140038126:	push   rsi
   140038127:	push   rdi
   140038128:	sub    rsp,0x30
   14003812c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140038135:	mov    edi,edx
   140038137:	mov    rbx,rcx
   14003813a:	and    QWORD PTR [rsp+0x60],0x0
   140038140:	test   edx,edx
   140038142:	jne    0x140038153
   140038144:	mov    rdx,QWORD PTR [rcx+0x8]
   140038148:	call   0x14003a4e4
   14003814d:	mov    edi,eax
   14003814f:	mov    DWORD PTR [rsp+0x58],eax
   140038153:	cmp    edi,DWORD PTR [rbx+0x10]
   140038156:	je     0x14003821e
   14003815c:	cmp    QWORD PTR [rbx],0x0
   140038160:	jne    0x140038174
   140038162:	xor    r8d,r8d
   140038165:	mov    edx,edi
   140038167:	mov    rcx,rbx
   14003816a:	call   0x140036e58
   14003816f:	jmp    0x14003821e
   140038174:	mov    ecx,edi
   140038176:	mov    eax,0x8
   14003817b:	mul    rcx
   14003817e:	mov    rcx,0xffffffffffffffff
   140038185:	cmovo  rax,rcx
   140038189:	mov    rcx,rax
   14003818c:	call   0x140013dd4
   140038191:	mov    rsi,rax
   140038194:	mov    QWORD PTR [rsp+0x60],rax
   140038199:	jmp    0x1400381a9
   14003819b:	mov    rbx,QWORD PTR [rsp+0x50]
   1400381a0:	mov    edi,DWORD PTR [rsp+0x58]
   1400381a4:	mov    rsi,QWORD PTR [rsp+0x60]
   1400381a9:	test   rsi,rsi
   1400381ac:	jne    0x1400381b9
   1400381ae:	mov    ecx,0x8007000e
   1400381b3:	call   0x1400152fc
   1400381b8:	int3   
   1400381b9:	mov    r8d,edi
   1400381bc:	shl    r8,0x3
   1400381c0:	xor    edx,edx
   1400381c2:	mov    rcx,rsi
   1400381c5:	call   0x140014694
   1400381ca:	xor    r9d,r9d
   1400381cd:	cmp    DWORD PTR [rbx+0x10],r9d
   1400381d1:	jbe    0x140038208
   1400381d3:	mov    rax,QWORD PTR [rbx]
   1400381d6:	mov    r10,QWORD PTR [rax+r9*8]
   1400381da:	test   r10,r10
   1400381dd:	je     0x1400381ff
   1400381df:	mov    r8,QWORD PTR [r10+0x10]
   1400381e3:	xor    edx,edx
   1400381e5:	mov    eax,DWORD PTR [r10+0x18]
   1400381e9:	div    edi
   1400381eb:	mov    rax,QWORD PTR [rsi+rdx*8]
   1400381ef:	mov    QWORD PTR [r10+0x10],rax
   1400381f3:	mov    QWORD PTR [rsi+rdx*8],r10
   1400381f7:	mov    r10,r8
   1400381fa:	test   r8,r8
   1400381fd:	jne    0x1400381df
   1400381ff:	inc    r9d
   140038202:	cmp    r9d,DWORD PTR [rbx+0x10]
   140038206:	jb     0x1400381d3
   140038208:	mov    rcx,QWORD PTR [rbx]
   14003820b:	call   0x140013de0
   140038210:	mov    QWORD PTR [rbx],rsi
   140038213:	mov    DWORD PTR [rbx+0x10],edi
   140038216:	mov    rcx,rbx
   140038219:	call   0x140005ca8
   14003821e:	add    rsp,0x30
   140038222:	pop    rdi
   140038223:	pop    rsi
   140038224:	pop    rbx
   140038225:	ret    
   140038226:	mov    QWORD PTR [rsp+0x10],rdx
   14003822b:	push   rbp
   14003822c:	sub    rsp,0x20
   140038230:	mov    rbp,rdx
   140038233:	lea    rax,[rip+0xffffffffffffff61]        # 0x14003819b
   14003823a:	add    rsp,0x20
   14003823e:	pop    rbp
   14003823f:	ret    
   140038240:	int3   
   140038241:	int3   
   140038242:	int3   
   140038243:	int3   
   140038244:	int3   
   140038245:	int3   
   140038246:	int3   
   140038247:	int3   
   140038248:	mov    QWORD PTR [rsp+0x8],rbx
   14003824d:	push   rdi
   14003824e:	sub    rsp,0x20
   140038252:	add    DWORD PTR [rcx+0xa0],0xffffffff
   140038259:	mov    rbx,rcx
   14003825c:	mov    edi,DWORD PTR [rcx+0xa0]
   140038262:	jne    0x140038271
   140038264:	call   0x140035e20
   140038269:	mov    rcx,rbx
   14003826c:	call   0x140013de0
   140038271:	mov    eax,edi
   140038273:	mov    rbx,QWORD PTR [rsp+0x30]
   140038278:	add    rsp,0x20
   14003827c:	pop    rdi
   14003827d:	ret    
   14003827e:	int3   
   14003827f:	int3   
   140038280:	int3   
   140038281:	int3   
   140038282:	int3   
   140038283:	int3   
   140038284:	mov    QWORD PTR [rsp+0x8],rbx
   140038289:	mov    QWORD PTR [rsp+0x10],rsi
   14003828e:	push   rdi
   14003828f:	sub    rsp,0x20
   140038293:	inc    DWORD PTR [rcx+0x30]
   140038296:	mov    rbx,rcx
   140038299:	cmp    QWORD PTR [rcx],0x0
   14003829d:	je     0x1400382ca
   14003829f:	xor    edi,edi
   1400382a1:	cmp    DWORD PTR [rcx+0x10],edi
   1400382a4:	jbe    0x1400382ca
   1400382a6:	mov    rax,QWORD PTR [rbx]
   1400382a9:	mov    rsi,QWORD PTR [rax+rdi*8]
   1400382ad:	jmp    0x1400382be
   1400382af:	mov    rdx,rsi
   1400382b2:	mov    rcx,rbx
   1400382b5:	mov    rsi,QWORD PTR [rsi+0x10]
   1400382b9:	call   0x1400366bc
   1400382be:	test   rsi,rsi
   1400382c1:	jne    0x1400382af
   1400382c3:	inc    edi
   1400382c5:	cmp    edi,DWORD PTR [rbx+0x10]
   1400382c8:	jb     0x1400382a6
   1400382ca:	mov    rcx,QWORD PTR [rbx]
   1400382cd:	call   0x140013de0
   1400382d2:	and    QWORD PTR [rbx],0x0
   1400382d6:	and    QWORD PTR [rbx+0x8],0x0
   1400382db:	cmp    DWORD PTR [rbx+0x30],0x0
   1400382df:	jne    0x1400382f8
   1400382e1:	xor    edx,edx
   1400382e3:	mov    rcx,rbx
   1400382e6:	call   0x14003a4e4
   1400382eb:	mov    edx,eax
   1400382ed:	xor    r8d,r8d
   1400382f0:	mov    rcx,rbx
   1400382f3:	call   0x140036e58
   1400382f8:	mov    rcx,rbx
   1400382fb:	call   0x140036720
   140038300:	dec    DWORD PTR [rbx+0x30]
   140038303:	mov    rbx,QWORD PTR [rsp+0x30]
   140038308:	mov    rsi,QWORD PTR [rsp+0x38]
   14003830d:	add    rsp,0x20
   140038311:	pop    rdi
   140038312:	ret    
   140038313:	int3   
   140038314:	int3   
   140038315:	int3   
   140038316:	int3   
   140038317:	int3   
   140038318:	int3   
   140038319:	int3   
   14003831a:	int3   
   14003831b:	int3   
   14003831c:	sub    rsp,0x28
   140038320:	xor    r8d,r8d
   140038323:	mov    r9,rdx
   140038326:	test   rdx,rdx
   140038329:	jne    0x140038336
   14003832b:	mov    ecx,0x80004005
   140038330:	call   0x1400152fc
   140038335:	int3   
   140038336:	mov    eax,DWORD PTR [r9+0x18]
   14003833a:	xor    edx,edx
   14003833c:	div    DWORD PTR [rcx+0x10]
   14003833f:	mov    rax,QWORD PTR [rcx]
   140038342:	cmp    r9,QWORD PTR [rax+rdx*8]
   140038346:	je     0x14003835e
   140038348:	mov    r8,QWORD PTR [rax+rdx*8]
   14003834c:	mov    rax,QWORD PTR [r8+0x10]
   140038350:	jmp    0x140038359
   140038352:	mov    r8,rax
   140038355:	mov    rax,QWORD PTR [rax+0x10]
   140038359:	cmp    rax,r9
   14003835c:	jne    0x140038352
   14003835e:	mov    rdx,r9
   140038361:	add    rsp,0x28
   140038365:	jmp    0x140038370
   14003836a:	int3   
   14003836b:	int3   
   14003836c:	int3   
   14003836d:	int3   
   14003836e:	int3   
   14003836f:	int3   
   140038370:	sub    rsp,0x28
   140038374:	mov    r9,rdx
   140038377:	mov    r10,rcx
   14003837a:	test   rdx,rdx
   14003837d:	jne    0x14003838a
   14003837f:	mov    ecx,0x80004005
   140038384:	call   0x1400152fc
   140038389:	int3   
   14003838a:	test   r8,r8
   14003838d:	jne    0x1400383a5
   14003838f:	mov    eax,DWORD PTR [r9+0x18]
   140038393:	xor    edx,edx
   140038395:	div    DWORD PTR [rcx+0x10]
   140038398:	mov    rcx,QWORD PTR [rcx]
   14003839b:	mov    rax,QWORD PTR [r9+0x10]
   14003839f:	mov    QWORD PTR [rcx+rdx*8],rax
   1400383a3:	jmp    0x1400383ad
   1400383a5:	mov    rax,QWORD PTR [rdx+0x10]
   1400383a9:	mov    QWORD PTR [r8+0x10],rax
   1400383ad:	mov    rdx,r9
   1400383b0:	mov    rcx,r10
   1400383b3:	add    rsp,0x28
   1400383b7:	jmp    0x1400366bc
   1400383bc:	int3   
   1400383bd:	int3   
   1400383be:	int3   
   1400383bf:	int3   
   1400383c0:	int3   
   1400383c1:	int3   
   1400383c2:	int3   
   1400383c3:	int3   
   1400383c4:	mov    r11,rsp
   1400383c7:	mov    QWORD PTR [r11+0x8],rcx
   1400383cb:	push   rdi
   1400383cc:	sub    rsp,0x50
   1400383d0:	mov    QWORD PTR [r11-0x20],0xfffffffffffffffe
   1400383d8:	mov    QWORD PTR [r11+0x10],rbx
   1400383dc:	mov    QWORD PTR [r11+0x18],rsi
   1400383e0:	mov    rbx,r8
   1400383e3:	mov    rsi,rdx
   1400383e6:	mov    rdi,rcx
   1400383e9:	lea    rax,[r11-0x18]
   1400383ed:	mov    QWORD PTR [r11-0x38],rax
   1400383f1:	lea    r9,[r11+0x20]
   1400383f5:	lea    r8,[r11-0x28]
   1400383f9:	call   0x1400367b0
   1400383fe:	mov    r9,rax
   140038401:	test   rax,rax
   140038404:	jne    0x14003842c
   140038406:	mov    r9d,DWORD PTR [rsp+0x78]
   14003840b:	mov    r8d,DWORD PTR [rsp+0x30]
   140038410:	mov    rdx,rsi
   140038413:	mov    rcx,rdi
   140038416:	call   0x14003659c
   14003841b:	mov    r9,rax
   14003841e:	mov    QWORD PTR [rsp+0x78],rax
   140038423:	mov    rax,QWORD PTR [rbx]
   140038426:	mov    QWORD PTR [r9+0x8],rax
   14003842a:	jmp    0x140038433
   14003842c:	mov    rax,QWORD PTR [rbx]
   14003842f:	mov    QWORD PTR [r9+0x8],rax
   140038433:	mov    rax,r9
   140038436:	mov    rbx,QWORD PTR [rsp+0x68]
   14003843b:	mov    rsi,QWORD PTR [rsp+0x70]
   140038440:	add    rsp,0x50
   140038444:	pop    rdi
   140038445:	ret    
   140038446:	mov    QWORD PTR [rsp+0x10],rdx
   14003844b:	push   rbp
   14003844c:	sub    rsp,0x30
   140038450:	mov    rbp,rdx
   140038453:	mov    rdx,QWORD PTR [rbp+0x78]
   140038457:	mov    rcx,QWORD PTR [rbp+0x60]
   14003845b:	call   0x14003831c
   140038460:	xor    edx,edx
   140038462:	xor    ecx,ecx
   140038464:	call   0x14001562a
   140038469:	nop
   14003846a:	int3   
   14003846b:	int3   
   14003846c:	int3   
   14003846d:	int3   
   14003846e:	int3   
   14003846f:	int3   
   140038470:	mov    rax,rsp
   140038473:	mov    QWORD PTR [rax+0x8],rbx
   140038477:	mov    QWORD PTR [rax+0x10],rsi
   14003847b:	mov    QWORD PTR [rax+0x18],rdi
   14003847f:	mov    DWORD PTR [rax+0x20],r9d
   140038483:	push   r14
   140038485:	sub    rsp,0x20
   140038489:	cmp    QWORD PTR [rcx],0x0
   14003848d:	mov    r14,r8
   140038490:	movsxd rdi,edx
   140038493:	mov    rbx,rcx
   140038496:	jne    0x14003849f
   140038498:	mov    eax,0x80004005
   14003849d:	jmp    0x1400384f1
   14003849f:	call   0x1400321cc
   1400384a4:	movsxd rsi,eax
   1400384a7:	cmp    edi,esi
   1400384a9:	jl     0x1400384ec
   1400384ab:	mov    rcx,QWORD PTR [rbx]
   1400384ae:	lea    r8,[rsp+0x48]
   1400384b3:	and    DWORD PTR [rsp+0x48],0x0
   1400384b8:	mov    edx,0x1
   1400384bd:	call   QWORD PTR [rip+0x1abdd]        # 0x1400530a0
   1400384c3:	test   eax,eax
   1400384c5:	jns    0x1400384cf
   1400384c7:	mov    ecx,eax
   1400384c9:	call   0x1400152fc
   1400384ce:	int3   
   1400384cf:	cmp    edi,DWORD PTR [rsp+0x48]
   1400384d3:	jg     0x1400384ec
   1400384d5:	mov    rax,QWORD PTR [rbx]
   1400384d8:	mov    rdx,rdi
   1400384db:	sub    rdx,rsi
   1400384de:	mov    rcx,QWORD PTR [rax+0x10]
   1400384e2:	mov    eax,DWORD PTR [r14]
   1400384e5:	mov    DWORD PTR [rcx+rdx*4],eax
   1400384e8:	xor    eax,eax
   1400384ea:	jmp    0x1400384f1
   1400384ec:	mov    eax,0x80070057
   1400384f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400384f6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400384fb:	mov    rdi,QWORD PTR [rsp+0x40]
   140038500:	add    rsp,0x20
   140038504:	pop    r14
   140038506:	ret    
   140038507:	int3   
   140038508:	int3   
   140038509:	int3   
   14003850a:	int3   
   14003850b:	int3   
   14003850c:	int3   
   14003850d:	int3   
   14003850e:	int3   
   14003850f:	int3   
   140038510:	mov    QWORD PTR [rsp+0x8],rbx
   140038515:	push   rdi
   140038516:	sub    rsp,0x20
   14003851a:	mov    rdi,rdx
   14003851d:	mov    rbx,rcx
   140038520:	test   rdx,rdx
   140038523:	jne    0x14003854e
   140038525:	mov    rcx,QWORD PTR [rcx]
   140038528:	test   rcx,rcx
   14003852b:	je     0x140038542
   14003852d:	mov    rdx,QWORD PTR [rbx+0x8]
   140038531:	call   0x14003650c
   140038536:	mov    rcx,QWORD PTR [rbx]
   140038539:	call   QWORD PTR [rip+0x5109]        # 0x14003d648
   14003853f:	and    QWORD PTR [rbx],rdi
   140038542:	and    QWORD PTR [rbx+0x8],0x0
   140038547:	and    QWORD PTR [rbx+0x10],0x0
   14003854c:	jmp    0x1400385a2
   14003854e:	cmp    rdx,QWORD PTR [rcx+0x10]
   140038552:	ja     0x14003857f
   140038554:	mov    r8,QWORD PTR [rcx+0x8]
   140038558:	cmp    r8,rdx
   14003855b:	jae    0x140038569
   14003855d:	mov    rax,QWORD PTR [rcx]
   140038560:	sub    rdx,r8
   140038563:	lea    rcx,[rax+r8*8]
   140038567:	jmp    0x140038599
   140038569:	jbe    0x14003859e
   14003856b:	mov    rax,QWORD PTR [rcx]
   14003856e:	sub    r8,rdx
   140038571:	lea    rcx,[rax+rdx*8]
   140038575:	mov    rdx,r8
   140038578:	call   0x14003650c
   14003857d:	jmp    0x14003859e
   14003857f:	call   0x140036c40
   140038584:	test   al,al
   140038586:	je     0x1400385a4
   140038588:	mov    rcx,QWORD PTR [rbx+0x8]
   14003858c:	mov    rdx,rdi
   14003858f:	mov    rax,QWORD PTR [rbx]
   140038592:	sub    rdx,rcx
   140038595:	lea    rcx,[rax+rcx*8]
   140038599:	call   0x140036490
   14003859e:	mov    QWORD PTR [rbx+0x8],rdi
   1400385a2:	mov    al,0x1
   1400385a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400385a9:	add    rsp,0x20
   1400385ad:	pop    rdi
   1400385ae:	ret    
   1400385af:	int3   
   1400385b0:	int3   
   1400385b1:	int3   
   1400385b2:	int3   
   1400385b3:	int3   
   1400385b4:	int3   
   1400385b5:	int3   
   1400385b6:	int3   
   1400385b7:	int3   
   1400385b8:	mov    rax,rsp
   1400385bb:	mov    QWORD PTR [rax+0x8],rbx
   1400385bf:	mov    QWORD PTR [rax+0x10],rbp
   1400385c3:	mov    QWORD PTR [rax+0x18],rsi
   1400385c7:	push   rdi
   1400385c8:	push   r14
   1400385ca:	push   r15
   1400385cc:	sub    rsp,0x30
   1400385d0:	or     ebp,0xffffffff
   1400385d3:	lea    r8,[rip+0x5dce]        # 0x14003e3a8
   1400385da:	mov    DWORD PTR [rax-0x20],ebp
   1400385dd:	mov    rbx,rdx
   1400385e0:	mov    rdi,rcx
   1400385e3:	mov    QWORD PTR [rax-0x28],rcx
   1400385e7:	mov    esi,0x1
   1400385ec:	mov    r9d,ebp
   1400385ef:	xor    edx,edx
   1400385f1:	lea    r15d,[rsi+0x7e]
   1400385f5:	mov    ecx,r15d
   1400385f8:	call   QWORD PTR [rip+0x4d7a]        # 0x14003d378
   1400385fe:	lea    r14d,[rsi+0x1]
   140038602:	cmp    eax,r14d
   140038605:	jne    0x14003860f
   140038607:	and    DWORD PTR [rbx],0x0
   14003860a:	jmp    0x140038d5f
   14003860f:	mov    DWORD PTR [rsp+0x28],ebp
   140038613:	lea    r8,[rip+0xb2a6]        # 0x1400438c0
   14003861a:	mov    r9d,ebp
   14003861d:	mov    QWORD PTR [rsp+0x20],rdi
   140038622:	xor    edx,edx
   140038624:	mov    ecx,r15d
   140038627:	call   QWORD PTR [rip+0x4d4b]        # 0x14003d378
   14003862d:	cmp    eax,r14d
   140038630:	jne    0x140038639
   140038632:	mov    DWORD PTR [rbx],ebp
   140038634:	jmp    0x140038d5f
   140038639:	mov    DWORD PTR [rsp+0x28],ebp
   14003863d:	lea    r8,[rip+0xb29c]        # 0x1400438e0
   140038644:	mov    r9d,ebp
   140038647:	mov    QWORD PTR [rsp+0x20],rdi
   14003864c:	xor    edx,edx
   14003864e:	mov    ecx,r15d
   140038651:	call   QWORD PTR [rip+0x4d21]        # 0x14003d378
   140038657:	cmp    eax,r14d
   14003865a:	jne    0x140038667
   14003865c:	mov    DWORD PTR [rbx],0xfffffffe
   140038662:	jmp    0x140038d5f
   140038667:	mov    DWORD PTR [rsp+0x28],ebp
   14003866b:	lea    r8,[rip+0xb29e]        # 0x140043910
   140038672:	mov    r9d,ebp
   140038675:	mov    QWORD PTR [rsp+0x20],rdi
   14003867a:	xor    edx,edx
   14003867c:	mov    ecx,r15d
   14003867f:	call   QWORD PTR [rip+0x4cf3]        # 0x14003d378
   140038685:	cmp    eax,r14d
   140038688:	jne    0x140038695
   14003868a:	mov    DWORD PTR [rbx],0xfffffffc
   140038690:	jmp    0x140038d5f
   140038695:	mov    DWORD PTR [rsp+0x28],ebp
   140038699:	lea    r8,[rip+0x6010]        # 0x14003e6b0
   1400386a0:	mov    r9d,ebp
   1400386a3:	mov    QWORD PTR [rsp+0x20],rdi
   1400386a8:	xor    edx,edx
   1400386aa:	mov    ecx,r15d
   1400386ad:	call   QWORD PTR [rip+0x4cc5]        # 0x14003d378
   1400386b3:	cmp    eax,r14d
   1400386b6:	jne    0x1400386c3
   1400386b8:	mov    DWORD PTR [rbx],0x11
   1400386be:	jmp    0x140038d5f
   1400386c3:	mov    DWORD PTR [rsp+0x28],ebp
   1400386c7:	lea    r8,[rip+0x6002]        # 0x14003e6d0
   1400386ce:	mov    r9d,ebp
   1400386d1:	mov    QWORD PTR [rsp+0x20],rdi
   1400386d6:	xor    edx,edx
   1400386d8:	mov    ecx,r15d
   1400386db:	call   QWORD PTR [rip+0x4c97]        # 0x14003d378
   1400386e1:	cmp    eax,r14d
   1400386e4:	jne    0x1400386f1
   1400386e6:	mov    DWORD PTR [rbx],0x12
   1400386ec:	jmp    0x140038d5f
   1400386f1:	mov    DWORD PTR [rsp+0x28],ebp
   1400386f5:	lea    r8,[rip+0x5ee4]        # 0x14003e5e0
   1400386fc:	mov    r9d,ebp
   1400386ff:	mov    QWORD PTR [rsp+0x20],rdi
   140038704:	xor    edx,edx
   140038706:	mov    ecx,r15d
   140038709:	call   QWORD PTR [rip+0x4c69]        # 0x14003d378
   14003870f:	cmp    eax,r14d
   140038712:	jne    0x14003871f
   140038714:	mov    DWORD PTR [rbx],0xd
   14003871a:	jmp    0x140038d5f
   14003871f:	mov    DWORD PTR [rsp+0x28],ebp
   140038723:	lea    r8,[rip+0x5ef6]        # 0x14003e620
   14003872a:	mov    r9d,ebp
   14003872d:	mov    QWORD PTR [rsp+0x20],rdi
   140038732:	xor    edx,edx
   140038734:	mov    ecx,r15d
   140038737:	call   QWORD PTR [rip+0x4c3b]        # 0x14003d378
   14003873d:	cmp    eax,r14d
   140038740:	jne    0x14003874d
   140038742:	mov    DWORD PTR [rbx],0xe
   140038748:	jmp    0x140038d5f
   14003874d:	mov    DWORD PTR [rsp+0x28],ebp
   140038751:	lea    r8,[rip+0x5ef8]        # 0x14003e650
   140038758:	mov    r9d,ebp
   14003875b:	mov    QWORD PTR [rsp+0x20],rdi
   140038760:	xor    edx,edx
   140038762:	mov    ecx,r15d
   140038765:	call   QWORD PTR [rip+0x4c0d]        # 0x14003d378
   14003876b:	cmp    eax,r14d
   14003876e:	jne    0x14003877b
   140038770:	mov    DWORD PTR [rbx],0xf
   140038776:	jmp    0x140038d5f
   14003877b:	mov    DWORD PTR [rsp+0x28],ebp
   14003877f:	lea    r8,[rip+0x5ef2]        # 0x14003e678
   140038786:	mov    r9d,ebp
   140038789:	mov    QWORD PTR [rsp+0x20],rdi
   14003878e:	xor    edx,edx
   140038790:	mov    ecx,r15d
   140038793:	call   QWORD PTR [rip+0x4bdf]        # 0x14003d378
   140038799:	cmp    eax,r14d
   14003879c:	jne    0x1400387a9
   14003879e:	mov    DWORD PTR [rbx],0x10
   1400387a4:	jmp    0x140038d5f
   1400387a9:	mov    DWORD PTR [rsp+0x28],ebp
   1400387ad:	lea    r8,[rip+0x5f4c]        # 0x14003e700
   1400387b4:	mov    r9d,ebp
   1400387b7:	mov    QWORD PTR [rsp+0x20],rdi
   1400387bc:	xor    edx,edx
   1400387be:	mov    ecx,r15d
   1400387c1:	call   QWORD PTR [rip+0x4bb1]        # 0x14003d378
   1400387c7:	cmp    eax,r14d
   1400387ca:	jne    0x1400387d7
   1400387cc:	mov    DWORD PTR [rbx],0x13
   1400387d2:	jmp    0x140038d5f
   1400387d7:	mov    DWORD PTR [rsp+0x28],ebp
   1400387db:	lea    r8,[rip+0x5f56]        # 0x14003e738
   1400387e2:	mov    r9d,ebp
   1400387e5:	mov    QWORD PTR [rsp+0x20],rdi
   1400387ea:	xor    edx,edx
   1400387ec:	mov    ecx,r15d
   1400387ef:	call   QWORD PTR [rip+0x4b83]        # 0x14003d378
   1400387f5:	cmp    eax,r14d
   1400387f8:	jne    0x140038805
   1400387fa:	mov    DWORD PTR [rbx],0x14
   140038800:	jmp    0x140038d5f
   140038805:	mov    DWORD PTR [rsp+0x28],ebp
   140038809:	lea    r8,[rip+0x5f60]        # 0x14003e770
   140038810:	mov    r9d,ebp
   140038813:	mov    QWORD PTR [rsp+0x20],rdi
   140038818:	xor    edx,edx
   14003881a:	mov    ecx,r15d
   14003881d:	call   QWORD PTR [rip+0x4b55]        # 0x14003d378
   140038823:	cmp    eax,r14d
   140038826:	jne    0x140038833
   140038828:	mov    DWORD PTR [rbx],0x15
   14003882e:	jmp    0x140038d5f
   140038833:	mov    DWORD PTR [rsp+0x28],ebp
   140038837:	lea    r8,[rip+0x5f5a]        # 0x14003e798
   14003883e:	mov    r9d,ebp
   140038841:	mov    QWORD PTR [rsp+0x20],rdi
   140038846:	xor    edx,edx
   140038848:	mov    ecx,r15d
   14003884b:	call   QWORD PTR [rip+0x4b27]        # 0x14003d378
   140038851:	cmp    eax,r14d
   140038854:	jne    0x140038861
   140038856:	mov    DWORD PTR [rbx],0x16
   14003885c:	jmp    0x140038d5f
   140038861:	mov    DWORD PTR [rsp+0x28],ebp
   140038865:	lea    r8,[rip+0x5f54]        # 0x14003e7c0
   14003886c:	mov    r9d,ebp
   14003886f:	mov    QWORD PTR [rsp+0x20],rdi
   140038874:	xor    edx,edx
   140038876:	mov    ecx,r15d
   140038879:	call   QWORD PTR [rip+0x4af9]        # 0x14003d378
   14003887f:	cmp    eax,r14d
   140038882:	jne    0x14003888f
   140038884:	mov    DWORD PTR [rbx],0x17
   14003888a:	jmp    0x140038d5f
   14003888f:	mov    DWORD PTR [rsp+0x28],ebp
   140038893:	lea    r8,[rip+0x5f46]        # 0x14003e7e0
   14003889a:	mov    r9d,ebp
   14003889d:	mov    QWORD PTR [rsp+0x20],rdi
   1400388a2:	xor    edx,edx
   1400388a4:	mov    ecx,r15d
   1400388a7:	call   QWORD PTR [rip+0x4acb]        # 0x14003d378
   1400388ad:	cmp    eax,r14d
   1400388b0:	jne    0x1400388bd
   1400388b2:	mov    DWORD PTR [rbx],0x18
   1400388b8:	jmp    0x140038d5f
   1400388bd:	mov    DWORD PTR [rsp+0x28],ebp
   1400388c1:	lea    r8,[rip+0x5f30]        # 0x14003e7f8
   1400388c8:	mov    r9d,ebp
   1400388cb:	mov    QWORD PTR [rsp+0x20],rdi
   1400388d0:	xor    edx,edx
   1400388d2:	mov    ecx,r15d
   1400388d5:	call   QWORD PTR [rip+0x4a9d]        # 0x14003d378
   1400388db:	cmp    eax,r14d
   1400388de:	jne    0x1400388eb
   1400388e0:	mov    DWORD PTR [rbx],0x19
   1400388e6:	jmp    0x140038d5f
   1400388eb:	mov    DWORD PTR [rsp+0x28],ebp
   1400388ef:	lea    r8,[rip+0x5f22]        # 0x14003e818
   1400388f6:	mov    r9d,ebp
   1400388f9:	mov    QWORD PTR [rsp+0x20],rdi
   1400388fe:	xor    edx,edx
   140038900:	mov    ecx,r15d
   140038903:	call   QWORD PTR [rip+0x4a6f]        # 0x14003d378
   140038909:	cmp    eax,r14d
   14003890c:	jne    0x140038919
   14003890e:	mov    DWORD PTR [rbx],0x1a
   140038914:	jmp    0x140038d5f
   140038919:	mov    DWORD PTR [rsp+0x28],ebp
   14003891d:	lea    r8,[rip+0x5f1c]        # 0x14003e840
   140038924:	mov    r9d,ebp
   140038927:	mov    QWORD PTR [rsp+0x20],rdi
   14003892c:	xor    edx,edx
   14003892e:	mov    ecx,r15d
   140038931:	call   QWORD PTR [rip+0x4a41]        # 0x14003d378
   140038937:	cmp    eax,r14d
   14003893a:	jne    0x140038947
   14003893c:	mov    DWORD PTR [rbx],0x1b
   140038942:	jmp    0x140038d5f
   140038947:	mov    DWORD PTR [rsp+0x28],ebp
   14003894b:	lea    r8,[rip+0x5ad6]        # 0x14003e428
   140038952:	mov    r9d,ebp
   140038955:	mov    QWORD PTR [rsp+0x20],rdi
   14003895a:	xor    edx,edx
   14003895c:	mov    ecx,r15d
   14003895f:	call   QWORD PTR [rip+0x4a13]        # 0x14003d378
   140038965:	cmp    eax,r14d
   140038968:	jne    0x140038975
   14003896a:	mov    DWORD PTR [rbx],0x4
   140038970:	jmp    0x140038d5f
   140038975:	mov    DWORD PTR [rsp+0x28],ebp
   140038979:	lea    r8,[rip+0x5ad0]        # 0x14003e450
   140038980:	mov    r9d,ebp
   140038983:	mov    QWORD PTR [rsp+0x20],rdi
   140038988:	xor    edx,edx
   14003898a:	mov    ecx,r15d
   14003898d:	call   QWORD PTR [rip+0x49e5]        # 0x14003d378
   140038993:	cmp    eax,r14d
   140038996:	jne    0x1400389a3
   140038998:	mov    DWORD PTR [rbx],0x5
   14003899e:	jmp    0x140038d5f
   1400389a3:	mov    DWORD PTR [rsp+0x28],ebp
   1400389a7:	lea    r8,[rip+0x5a22]        # 0x14003e3d0
   1400389ae:	mov    r9d,ebp
   1400389b1:	mov    QWORD PTR [rsp+0x20],rdi
   1400389b6:	xor    edx,edx
   1400389b8:	mov    ecx,r15d
   1400389bb:	call   QWORD PTR [rip+0x49b7]        # 0x14003d378
   1400389c1:	cmp    eax,r14d
   1400389c4:	jne    0x1400389ce
   1400389c6:	mov    DWORD PTR [rbx],r14d
   1400389c9:	jmp    0x140038d5f
   1400389ce:	mov    DWORD PTR [rsp+0x28],ebp
   1400389d2:	lea    r8,[rip+0x5a27]        # 0x14003e400
   1400389d9:	mov    r9d,ebp
   1400389dc:	mov    QWORD PTR [rsp+0x20],rdi
   1400389e1:	xor    edx,edx
   1400389e3:	mov    ecx,r15d
   1400389e6:	call   QWORD PTR [rip+0x498c]        # 0x14003d378
   1400389ec:	cmp    eax,r14d
   1400389ef:	jne    0x1400389fc
   1400389f1:	mov    DWORD PTR [rbx],0x3
   1400389f7:	jmp    0x140038d5f
   1400389fc:	mov    DWORD PTR [rsp+0x28],ebp
   140038a00:	lea    r8,[rip+0x5a81]        # 0x14003e488
   140038a07:	mov    r9d,ebp
   140038a0a:	mov    QWORD PTR [rsp+0x20],rdi
   140038a0f:	xor    edx,edx
   140038a11:	mov    ecx,r15d
   140038a14:	call   QWORD PTR [rip+0x495e]        # 0x14003d378
   140038a1a:	cmp    eax,r14d
   140038a1d:	jne    0x140038a2a
   140038a1f:	mov    DWORD PTR [rbx],0x6
   140038a25:	jmp    0x140038d5f
   140038a2a:	mov    DWORD PTR [rsp+0x28],ebp
   140038a2e:	lea    r8,[rip+0x5e2b]        # 0x14003e860
   140038a35:	mov    r9d,ebp
   140038a38:	mov    QWORD PTR [rsp+0x20],rdi
   140038a3d:	xor    edx,edx
   140038a3f:	mov    ecx,r15d
   140038a42:	call   QWORD PTR [rip+0x4930]        # 0x14003d378
   140038a48:	cmp    eax,r14d
   140038a4b:	jne    0x140038a58
   140038a4d:	mov    DWORD PTR [rbx],0x1c
   140038a53:	jmp    0x140038d5f
   140038a58:	mov    DWORD PTR [rsp+0x28],ebp
   140038a5c:	lea    r8,[rip+0x5e15]        # 0x14003e878
   140038a63:	mov    r9d,ebp
   140038a66:	mov    QWORD PTR [rsp+0x20],rdi
   140038a6b:	xor    edx,edx
   140038a6d:	mov    ecx,r15d
   140038a70:	call   QWORD PTR [rip+0x4902]        # 0x14003d378
   140038a76:	cmp    eax,r14d
   140038a79:	jne    0x140038a86
   140038a7b:	mov    DWORD PTR [rbx],0x1d
   140038a81:	jmp    0x140038d5f
   140038a86:	mov    DWORD PTR [rsp+0x28],ebp
   140038a8a:	lea    r8,[rip+0x5dff]        # 0x14003e890
   140038a91:	mov    r9d,ebp
   140038a94:	mov    QWORD PTR [rsp+0x20],rdi
   140038a99:	xor    edx,edx
   140038a9b:	mov    ecx,r15d
   140038a9e:	call   QWORD PTR [rip+0x48d4]        # 0x14003d378
   140038aa4:	cmp    eax,r14d
   140038aa7:	jne    0x140038ab4
   140038aa9:	mov    DWORD PTR [rbx],0x1e
   140038aaf:	jmp    0x140038d5f
   140038ab4:	mov    DWORD PTR [rsp+0x28],ebp
   140038ab8:	lea    r8,[rip+0x5de9]        # 0x14003e8a8
   140038abf:	mov    r9d,ebp
   140038ac2:	mov    QWORD PTR [rsp+0x20],rdi
   140038ac7:	xor    edx,edx
   140038ac9:	mov    ecx,r15d
   140038acc:	call   QWORD PTR [rip+0x48a6]        # 0x14003d378
   140038ad2:	cmp    eax,r14d
   140038ad5:	jne    0x140038ae2
   140038ad7:	mov    DWORD PTR [rbx],0x1f
   140038add:	jmp    0x140038d5f
   140038ae2:	mov    DWORD PTR [rsp+0x28],ebp
   140038ae6:	lea    r8,[rip+0x59bb]        # 0x14003e4a8
   140038aed:	mov    r9d,ebp
   140038af0:	mov    QWORD PTR [rsp+0x20],rdi
   140038af5:	xor    edx,edx
   140038af7:	mov    ecx,r15d
   140038afa:	call   QWORD PTR [rip+0x4878]        # 0x14003d378
   140038b00:	cmp    eax,r14d
   140038b03:	jne    0x140038b10
   140038b05:	mov    DWORD PTR [rbx],0x7
   140038b0b:	jmp    0x140038d5f
   140038b10:	mov    DWORD PTR [rsp+0x28],ebp
   140038b14:	lea    r8,[rip+0x59c5]        # 0x14003e4e0
   140038b1b:	mov    r9d,ebp
   140038b1e:	mov    QWORD PTR [rsp+0x20],rdi
   140038b23:	xor    edx,edx
   140038b25:	mov    ecx,r15d
   140038b28:	call   QWORD PTR [rip+0x484a]        # 0x14003d378
   140038b2e:	cmp    eax,r14d
   140038b31:	jne    0x140038b3e
   140038b33:	mov    DWORD PTR [rbx],0x8
   140038b39:	jmp    0x140038d5f
   140038b3e:	mov    DWORD PTR [rsp+0x28],ebp
   140038b42:	lea    r8,[rip+0x59c7]        # 0x14003e510
   140038b49:	mov    r9d,ebp
   140038b4c:	mov    QWORD PTR [rsp+0x20],rdi
   140038b51:	xor    edx,edx
   140038b53:	mov    ecx,r15d
   140038b56:	call   QWORD PTR [rip+0x481c]        # 0x14003d378
   140038b5c:	cmp    eax,r14d
   140038b5f:	jne    0x140038b6c
   140038b61:	mov    DWORD PTR [rbx],0x9
   140038b67:	jmp    0x140038d5f
   140038b6c:	mov    DWORD PTR [rsp+0x28],ebp
   140038b70:	lea    r8,[rip+0x59d1]        # 0x14003e548
   140038b77:	mov    r9d,ebp
   140038b7a:	mov    QWORD PTR [rsp+0x20],rdi
   140038b7f:	xor    edx,edx
   140038b81:	mov    ecx,r15d
   140038b84:	call   QWORD PTR [rip+0x47ee]        # 0x14003d378
   140038b8a:	cmp    eax,r14d
   140038b8d:	jne    0x140038b9a
   140038b8f:	mov    DWORD PTR [rbx],0xa
   140038b95:	jmp    0x140038d5f
   140038b9a:	mov    DWORD PTR [rsp+0x28],ebp
   140038b9e:	lea    r8,[rip+0x59db]        # 0x14003e580
   140038ba5:	mov    r9d,ebp
   140038ba8:	mov    QWORD PTR [rsp+0x20],rdi
   140038bad:	xor    edx,edx
   140038baf:	mov    ecx,r15d
   140038bb2:	call   QWORD PTR [rip+0x47c0]        # 0x14003d378
   140038bb8:	cmp    eax,r14d
   140038bbb:	jne    0x140038bc8
   140038bbd:	mov    DWORD PTR [rbx],0xb
   140038bc3:	jmp    0x140038d5f
   140038bc8:	mov    DWORD PTR [rsp+0x28],ebp
   140038bcc:	lea    r8,[rip+0x59dd]        # 0x14003e5b0
   140038bd3:	mov    r9d,ebp
   140038bd6:	mov    QWORD PTR [rsp+0x20],rdi
   140038bdb:	xor    edx,edx
   140038bdd:	mov    ecx,r15d
   140038be0:	call   QWORD PTR [rip+0x4792]        # 0x14003d378
   140038be6:	cmp    eax,r14d
   140038be9:	jne    0x140038bf6
   140038beb:	mov    DWORD PTR [rbx],0xc
   140038bf1:	jmp    0x140038d5f
   140038bf6:	mov    DWORD PTR [rsp+0x28],ebp
   140038bfa:	lea    r8,[rip+0x5cbf]        # 0x14003e8c0
   140038c01:	mov    r9d,ebp
   140038c04:	mov    QWORD PTR [rsp+0x20],rdi
   140038c09:	xor    edx,edx
   140038c0b:	mov    ecx,r15d
   140038c0e:	call   QWORD PTR [rip+0x4764]        # 0x14003d378
   140038c14:	cmp    eax,r14d
   140038c17:	jne    0x140038c24
   140038c19:	mov    DWORD PTR [rbx],0x20
   140038c1f:	jmp    0x140038d5f
   140038c24:	mov    DWORD PTR [rsp+0x28],ebp
   140038c28:	lea    r8,[rip+0x5cd9]        # 0x14003e908
   140038c2f:	mov    r9d,ebp
   140038c32:	mov    QWORD PTR [rsp+0x20],rdi
   140038c37:	xor    edx,edx
   140038c39:	mov    ecx,r15d
   140038c3c:	call   QWORD PTR [rip+0x4736]        # 0x14003d378
   140038c42:	cmp    eax,r14d
   140038c45:	jne    0x140038c52
   140038c47:	mov    DWORD PTR [rbx],0x21
   140038c4d:	jmp    0x140038d5f
   140038c52:	mov    DWORD PTR [rsp+0x28],ebp
   140038c56:	lea    r8,[rip+0x5ce3]        # 0x14003e940
   140038c5d:	mov    r9d,ebp
   140038c60:	mov    QWORD PTR [rsp+0x20],rdi
   140038c65:	xor    edx,edx
   140038c67:	mov    ecx,r15d
   140038c6a:	call   QWORD PTR [rip+0x4708]        # 0x14003d378
   140038c70:	cmp    eax,r14d
   140038c73:	jne    0x140038c80
   140038c75:	mov    DWORD PTR [rbx],0x22
   140038c7b:	jmp    0x140038d5f
   140038c80:	mov    DWORD PTR [rsp+0x28],ebp
   140038c84:	lea    r8,[rip+0x5ce5]        # 0x14003e970
   140038c8b:	mov    r9d,ebp
   140038c8e:	mov    QWORD PTR [rsp+0x20],rdi
   140038c93:	xor    edx,edx
   140038c95:	mov    ecx,r15d
   140038c98:	call   QWORD PTR [rip+0x46da]        # 0x14003d378
   140038c9e:	cmp    eax,r14d
   140038ca1:	jne    0x140038cae
   140038ca3:	mov    DWORD PTR [rbx],0x23
   140038ca9:	jmp    0x140038d5f
   140038cae:	mov    DWORD PTR [rsp+0x28],ebp
   140038cb2:	lea    r8,[rip+0x5cef]        # 0x14003e9a8
   140038cb9:	mov    r9d,ebp
   140038cbc:	mov    QWORD PTR [rsp+0x20],rdi
   140038cc1:	xor    edx,edx
   140038cc3:	mov    ecx,r15d
   140038cc6:	call   QWORD PTR [rip+0x46ac]        # 0x14003d378
   140038ccc:	cmp    eax,r14d
   140038ccf:	jne    0x140038cdc
   140038cd1:	mov    DWORD PTR [rbx],0x24
   140038cd7:	jmp    0x140038d5f
   140038cdc:	mov    DWORD PTR [rsp+0x28],ebp
   140038ce0:	lea    r8,[rip+0x5ce9]        # 0x14003e9d0
   140038ce7:	mov    r9d,ebp
   140038cea:	mov    QWORD PTR [rsp+0x20],rdi
   140038cef:	xor    edx,edx
   140038cf1:	mov    ecx,r15d
   140038cf4:	call   QWORD PTR [rip+0x467e]        # 0x14003d378
   140038cfa:	cmp    eax,r14d
   140038cfd:	jne    0x140038d07
   140038cff:	mov    DWORD PTR [rbx],0x25
   140038d05:	jmp    0x140038d5f
   140038d07:	mov    DWORD PTR [rsp+0x28],ebp
   140038d0b:	lea    r8,[rip+0x5cde]        # 0x14003e9f0
   140038d12:	mov    r9d,ebp
   140038d15:	mov    QWORD PTR [rsp+0x20],rdi
   140038d1a:	xor    edx,edx
   140038d1c:	mov    ecx,r15d
   140038d1f:	call   QWORD PTR [rip+0x4653]        # 0x14003d378
   140038d25:	cmp    eax,r14d
   140038d28:	jne    0x140038d32
   140038d2a:	mov    DWORD PTR [rbx],0x26
   140038d30:	jmp    0x140038d5f
   140038d32:	mov    DWORD PTR [rsp+0x28],ebp
   140038d36:	lea    r8,[rip+0x5683]        # 0x14003e3c0
   140038d3d:	mov    r9d,ebp
   140038d40:	mov    QWORD PTR [rsp+0x20],rdi
   140038d45:	xor    edx,edx
   140038d47:	mov    ecx,r15d
   140038d4a:	call   QWORD PTR [rip+0x4628]        # 0x14003d378
   140038d50:	cmp    eax,r14d
   140038d53:	jne    0x140038d59
   140038d55:	mov    DWORD PTR [rbx],esi
   140038d57:	jmp    0x140038d5f
   140038d59:	and    DWORD PTR [rbx],0x0
   140038d5c:	xor    sil,sil
   140038d5f:	mov    rbx,QWORD PTR [rsp+0x50]
   140038d64:	mov    al,sil
   140038d67:	mov    rsi,QWORD PTR [rsp+0x60]
   140038d6c:	mov    rbp,QWORD PTR [rsp+0x58]
   140038d71:	add    rsp,0x30
   140038d75:	pop    r15
   140038d77:	pop    r14
   140038d79:	pop    rdi
   140038d7a:	ret    
   140038d7b:	int3   
   140038d7c:	int3   
   140038d7d:	int3   
   140038d7e:	int3   
   140038d7f:	int3   
   140038d80:	int3   
   140038d81:	int3   
   140038d82:	int3   
   140038d83:	int3   
   140038d84:	mov    rax,rsp
   140038d87:	mov    QWORD PTR [rax+0x8],rbx
   140038d8b:	mov    QWORD PTR [rax+0x10],rsi
   140038d8f:	mov    QWORD PTR [rax+0x18],rdi
   140038d93:	mov    QWORD PTR [rax+0x20],r14
   140038d97:	push   r15
   140038d99:	sub    rsp,0x20
   140038d9d:	mov    r15,rcx
   140038da0:	mov    rax,rdx
   140038da3:	add    rcx,0x10
   140038da7:	mov    r14,r9
   140038daa:	mov    rsi,r8
   140038dad:	and    QWORD PTR [rcx],0x0
   140038db1:	and    QWORD PTR [r15+0x18],0x0
   140038db6:	and    QWORD PTR [r15+0x20],0x0
   140038dbb:	mov    rdx,QWORD PTR [rdx]
   140038dbe:	and    QWORD PTR [rax],0x0
   140038dc2:	call   0x14002b0f8
   140038dc7:	mov    rdx,QWORD PTR [rsi]
   140038dca:	lea    rcx,[r15+0x18]
   140038dce:	and    QWORD PTR [rsi],0x0
   140038dd2:	call   0x14002b0f8
   140038dd7:	mov    rdx,QWORD PTR [r14]
   140038dda:	lea    rcx,[r15+0x20]
   140038dde:	and    QWORD PTR [r14],0x0
   140038de2:	call   0x14002b0f8
   140038de7:	mov    eax,DWORD PTR [rsp+0x50]
   140038deb:	and    QWORD PTR [r15],0x0
   140038def:	and    DWORD PTR [r15+0x2c],0x0
   140038df4:	mov    rbx,QWORD PTR [rsp+0x30]
   140038df9:	mov    rsi,QWORD PTR [rsp+0x38]
   140038dfe:	mov    rdi,QWORD PTR [rsp+0x40]
   140038e03:	mov    r14,QWORD PTR [rsp+0x48]
   140038e08:	mov    DWORD PTR [r15+0x28],eax
   140038e0c:	mov    al,BYTE PTR [rsp+0x58]
   140038e10:	mov    BYTE PTR [r15+0x8],al
   140038e14:	mov    rax,r15
   140038e17:	add    rsp,0x20
   140038e1b:	pop    r15
   140038e1d:	ret    
   140038e1e:	int3   
   140038e1f:	int3   
   140038e20:	int3   
   140038e21:	int3   
   140038e22:	int3   
   140038e23:	int3   
   140038e24:	rex.W jmp QWORD PTR [rip+0x1a1f5]        # 0x140053020
   140038e2b:	int3   
   140038e2c:	int3   
   140038e2d:	int3   
   140038e2e:	int3   
   140038e2f:	int3   
   140038e30:	int3   
   140038e31:	int3   
   140038e32:	int3   
   140038e33:	int3   
   140038e34:	mov    rax,rsp
   140038e37:	mov    QWORD PTR [rax+0x8],rbx
   140038e3b:	mov    QWORD PTR [rax+0x10],rbp
   140038e3f:	mov    QWORD PTR [rax+0x18],rsi
   140038e43:	mov    QWORD PTR [rax+0x20],rdi
   140038e47:	push   r14
   140038e49:	sub    rsp,0x30
   140038e4d:	mov    ebp,0x1
   140038e52:	mov    r14,rdx
   140038e55:	mov    rsi,rcx
   140038e58:	cmp    BYTE PTR [rcx+0x8],bpl
   140038e5c:	je     0x140038e64
   140038e5e:	cmp    BYTE PTR [rdx+0x8],bpl
   140038e62:	jne    0x140038ece
   140038e64:	mov    rcx,QWORD PTR [rcx+0x10]
   140038e68:	call   QWORD PTR [rip+0x1a1a2]        # 0x140053010
   140038e6e:	test   eax,eax
   140038e70:	je     0x140038f4b
   140038e76:	mov    rcx,QWORD PTR [rsi+0x10]
   140038e7a:	call   QWORD PTR [rip+0x1a190]        # 0x140053010
   140038e80:	mov    rcx,QWORD PTR [r14+0x10]
   140038e84:	mov    ebx,eax
   140038e86:	call   QWORD PTR [rip+0x1a184]        # 0x140053010
   140038e8c:	cmp    ebx,eax
   140038e8e:	jne    0x140038f4b
   140038e94:	mov    rcx,QWORD PTR [r14+0x10]
   140038e98:	call   QWORD PTR [rip+0x1a172]        # 0x140053010
   140038e9e:	mov    rcx,QWORD PTR [rsi+0x10]
   140038ea2:	mov    ebx,eax
   140038ea4:	mov    rdi,QWORD PTR [r14+0x10]
   140038ea8:	call   QWORD PTR [rip+0x1a162]        # 0x140053010
   140038eae:	mov    r8,QWORD PTR [rsi+0x10]
   140038eb2:	xor    edx,edx
   140038eb4:	mov    DWORD PTR [rsp+0x28],ebx
   140038eb8:	mov    r9d,eax
   140038ebb:	mov    QWORD PTR [rsp+0x20],rdi
   140038ec0:	lea    ecx,[rdx+0x7f]
   140038ec3:	call   QWORD PTR [rip+0x44af]        # 0x14003d378
   140038ec9:	cmp    eax,0x2
   140038ecc:	jne    0x140038f4b
   140038ece:	mov    eax,DWORD PTR [r14+0x28]
   140038ed2:	cmp    DWORD PTR [rsi+0x28],eax
   140038ed5:	jne    0x140038f4b
   140038ed7:	mov    rcx,QWORD PTR [r14+0x18]
   140038edb:	call   QWORD PTR [rip+0x1a12f]        # 0x140053010
   140038ee1:	mov    rcx,QWORD PTR [rsi+0x18]
   140038ee5:	mov    ebx,eax
   140038ee7:	mov    rdi,QWORD PTR [r14+0x18]
   140038eeb:	call   QWORD PTR [rip+0x1a11f]        # 0x140053010
   140038ef1:	mov    r8,QWORD PTR [rsi+0x18]
   140038ef5:	xor    edx,edx
   140038ef7:	mov    DWORD PTR [rsp+0x28],ebx
   140038efb:	mov    r9d,eax
   140038efe:	mov    QWORD PTR [rsp+0x20],rdi
   140038f03:	lea    ecx,[rdx+0x7f]
   140038f06:	call   QWORD PTR [rip+0x446c]        # 0x14003d378
   140038f0c:	cmp    eax,0x2
   140038f0f:	jne    0x140038f4b
   140038f11:	mov    rcx,QWORD PTR [r14+0x20]
   140038f15:	call   QWORD PTR [rip+0x1a0f5]        # 0x140053010
   140038f1b:	mov    rcx,QWORD PTR [rsi+0x20]
   140038f1f:	mov    ebx,eax
   140038f21:	mov    rdi,QWORD PTR [r14+0x20]
   140038f25:	call   QWORD PTR [rip+0x1a0e5]        # 0x140053010
   140038f2b:	mov    r8,QWORD PTR [rsi+0x20]
   140038f2f:	xor    edx,edx
   140038f31:	mov    DWORD PTR [rsp+0x28],ebx
   140038f35:	mov    r9d,eax
   140038f38:	mov    QWORD PTR [rsp+0x20],rdi
   140038f3d:	lea    ecx,[rdx+0x7f]
   140038f40:	call   QWORD PTR [rip+0x4432]        # 0x14003d378
   140038f46:	cmp    eax,0x2
   140038f49:	je     0x140038f4d
   140038f4b:	xor    ebp,ebp
   140038f4d:	mov    rbx,QWORD PTR [rsp+0x40]
   140038f52:	mov    al,bpl
   140038f55:	mov    rbp,QWORD PTR [rsp+0x48]
   140038f5a:	mov    rsi,QWORD PTR [rsp+0x50]
   140038f5f:	mov    rdi,QWORD PTR [rsp+0x58]
   140038f64:	add    rsp,0x30
   140038f68:	pop    r14
   140038f6a:	ret    
   140038f6b:	int3   
   140038f6c:	int3   
   140038f6d:	int3   
   140038f6e:	int3   
   140038f6f:	int3   
   140038f70:	int3   
   140038f71:	int3   
   140038f72:	int3   
   140038f73:	int3   
   140038f74:	sub    rsp,0x28
   140038f78:	mov    r9,rcx
   140038f7b:	mov    rcx,rdx
   140038f7e:	call   0x140007720
   140038f83:	mov    r8d,eax
   140038f86:	mov    rcx,r9
   140038f89:	add    rsp,0x28
   140038f8d:	jmp    0x140038f98
   140038f92:	int3   
   140038f93:	int3   
   140038f94:	int3   
   140038f95:	int3   
   140038f96:	int3   
   140038f97:	int3   
   140038f98:	mov    QWORD PTR [rsp+0x8],rbx
   140038f9d:	mov    QWORD PTR [rsp+0x10],rbp
   140038fa2:	mov    QWORD PTR [rsp+0x18],rsi
   140038fa7:	push   rdi
   140038fa8:	push   r14
   140038faa:	push   r15
   140038fac:	sub    rsp,0x20
   140038fb0:	mov    rax,QWORD PTR [rcx]
   140038fb3:	mov    rbx,rdx
   140038fb6:	sub    rbx,rax
   140038fb9:	movsxd r15,r8d
   140038fbc:	mov    r9d,0x1
   140038fc2:	sar    rbx,1
   140038fc5:	mov    rsi,rdx
   140038fc8:	mov    rdi,rcx
   140038fcb:	mov    r14d,DWORD PTR [rax-0x10]
   140038fcf:	sub    r9d,DWORD PTR [rax-0x8]
   140038fd3:	mov    eax,DWORD PTR [rax-0xc]
   140038fd6:	lea    ebp,[r14+r15*1]
   140038fda:	sub    eax,ebp
   140038fdc:	or     r9d,eax
   140038fdf:	jge    0x140038fe8
   140038fe1:	mov    edx,ebp
   140038fe3:	call   0x1400076e0
   140038fe8:	mov    rax,QWORD PTR [rdi]
   140038feb:	cmp    rbx,r14
   140038fee:	ja     0x140038ff4
   140038ff0:	lea    rsi,[rax+rbx*2]
   140038ff4:	mov    rdx,r15
   140038ff7:	lea    rcx,[rax+r14*2]
   140038ffb:	add    rdx,rdx
   140038ffe:	mov    r8,rsi
   140039001:	mov    r9,rdx
   140039004:	call   QWORD PTR [rip+0x4636]        # 0x14003d640
   14003900a:	mov    edx,ebp
   14003900c:	mov    rcx,rdi
   14003900f:	mov    rbx,QWORD PTR [rsp+0x40]
   140039014:	mov    rbp,QWORD PTR [rsp+0x48]
   140039019:	mov    rsi,QWORD PTR [rsp+0x50]
   14003901e:	add    rsp,0x20
   140039022:	pop    r15
   140039024:	pop    r14
   140039026:	pop    rdi
   140039027:	jmp    0x14002db08
   14003902c:	int3   
   14003902d:	int3   
   14003902e:	int3   
   14003902f:	int3   
   140039030:	int3   
   140039031:	int3   
   140039032:	int3   
   140039033:	int3   
   140039034:	mov    rax,rsp
   140039037:	mov    QWORD PTR [rax+0x10],rdx
   14003903b:	mov    QWORD PTR [rax+0x18],r8
   14003903f:	mov    QWORD PTR [rax+0x20],r9
   140039043:	sub    rsp,0x28
   140039047:	lea    r8,[rax+0x18]
   14003904b:	call   0x14003905c
   140039050:	add    rsp,0x28
   140039054:	ret    
   140039055:	int3   
   140039056:	int3   
   140039057:	int3   
   140039058:	int3   
   140039059:	int3   
   14003905a:	int3   
   14003905b:	int3   
   14003905c:	mov    QWORD PTR [rsp+0x8],rbx
   140039061:	mov    QWORD PTR [rsp+0x10],rbp
   140039066:	mov    QWORD PTR [rsp+0x18],rsi
   14003906b:	push   rdi
   14003906c:	push   r14
   14003906e:	push   r15
   140039070:	sub    rsp,0x20
   140039074:	mov    rax,QWORD PTR [rcx]
   140039077:	mov    r15,rdx
   14003907a:	mov    rbx,rcx
   14003907d:	mov    rdx,r8
   140039080:	mov    rcx,r15
   140039083:	mov    r14,r8
   140039086:	movsxd rbp,DWORD PTR [rax-0x10]
   14003908a:	call   QWORD PTR [rip+0x4540]        # 0x14003d5d0
   140039090:	mov    esi,eax
   140039092:	cmp    eax,0xffffffff
   140039095:	jne    0x1400390a2
   140039097:	mov    ecx,0x8007000e
   14003909c:	call   0x1400152fc
   1400390a1:	int3   
   1400390a2:	lea    edi,[rax+rbp*1]
   1400390a5:	mov    ecx,0x1
   1400390aa:	mov    rax,QWORD PTR [rbx]
   1400390ad:	sub    ecx,DWORD PTR [rax-0x8]
   1400390b0:	mov    eax,DWORD PTR [rax-0xc]
   1400390b3:	sub    eax,edi
   1400390b5:	or     ecx,eax
   1400390b7:	jge    0x1400390c3
   1400390b9:	mov    edx,edi
   1400390bb:	mov    rcx,rbx
   1400390be:	call   0x1400076e0
   1400390c3:	lea    eax,[rsi+0x1]
   1400390c6:	mov    r9,r14
   1400390c9:	movsxd rdx,eax
   1400390cc:	mov    r8,r15
   1400390cf:	mov    rax,QWORD PTR [rbx]
   1400390d2:	lea    rcx,[rax+rbp*2]
   1400390d6:	call   QWORD PTR [rip+0x44ec]        # 0x14003d5c8
   1400390dc:	mov    edx,edi
   1400390de:	mov    rcx,rbx
   1400390e1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400390e6:	mov    rbp,QWORD PTR [rsp+0x48]
   1400390eb:	mov    rsi,QWORD PTR [rsp+0x50]
   1400390f0:	add    rsp,0x20
   1400390f4:	pop    r15
   1400390f6:	pop    r14
   1400390f8:	pop    rdi
   1400390f9:	jmp    0x14002db08
   1400390fe:	int3   
   1400390ff:	int3   
   140039100:	int3   
   140039101:	int3   
   140039102:	int3   
   140039103:	int3   
   140039104:	mov    rax,rsp
   140039107:	push   rbp
   140039108:	push   r12
   14003910a:	push   r13
   14003910c:	push   r14
   14003910e:	push   r15
   140039110:	lea    rbp,[rax-0x738]
   140039117:	sub    rsp,0x810
   14003911e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140039127:	mov    QWORD PTR [rax+0x10],rbx
   14003912b:	mov    QWORD PTR [rax+0x18],rsi
   14003912f:	mov    QWORD PTR [rax+0x20],rdi
   140039133:	mov    rax,QWORD PTR [rip+0x14ed6]        # 0x14004e010
   14003913a:	xor    rax,rsp
   14003913d:	mov    QWORD PTR [rbp+0x700],rax
   140039144:	mov    r12,rcx
   140039147:	mov    edx,0x1
   14003914c:	mov    rcx,QWORD PTR [rcx]
   14003914f:	call   QWORD PTR [rip+0x3edb]        # 0x14003d030
   140039155:	mov    rsi,rax
   140039158:	mov    edx,0x3
   14003915d:	mov    rcx,QWORD PTR [r12]
   140039161:	call   QWORD PTR [rip+0x3f61]        # 0x14003d0c8
   140039167:	mov    rbx,rax
   14003916a:	mov    edx,0x2
   14003916f:	mov    rcx,QWORD PTR [r12]
   140039173:	call   QWORD PTR [rip+0x3f4f]        # 0x14003d0c8
   140039179:	mov    rdi,rax
   14003917c:	mov    rdx,rsi
   14003917f:	call   0x1400394f4
   140039184:	mov    r14d,eax
   140039187:	mov    rdx,rbx
   14003918a:	call   0x1400394f4
   14003918f:	mov    r15d,eax
   140039192:	mov    rdx,rdi
   140039195:	call   0x1400394f4
   14003919a:	mov    r13d,eax
   14003919d:	lea    rcx,[rsp+0x20]
   1400391a2:	call   0x14002a10c
   1400391a7:	nop
   1400391a8:	test   rsi,rsi
   1400391ab:	je     0x1400391dd
   1400391ad:	mov    r8d,0x3e8
   1400391b3:	lea    rdx,[rsp+0x30]
   1400391b8:	mov    rcx,rsi
   1400391bb:	call   QWORD PTR [rip+0x3ec7]        # 0x14003d088
   1400391c1:	test   eax,eax
   1400391c3:	je     0x1400391dd
   1400391c5:	lea    r8,[rsp+0x30]
   1400391ca:	lea    rdx,[rip+0xa77f]        # 0x140043950
   1400391d1:	lea    rcx,[rsp+0x20]
   1400391d6:	call   0x140039034
   1400391db:	jmp    0x1400391ee
   1400391dd:	lea    rdx,[rip+0xa75c]        # 0x140043940
   1400391e4:	lea    rcx,[rsp+0x20]
   1400391e9:	call   0x140038f74
   1400391ee:	mov    r8d,r14d
   1400391f1:	lea    rsi,[rip+0xa768]        # 0x140043960
   1400391f8:	mov    rdx,rsi
   1400391fb:	lea    rcx,[rsp+0x20]
   140039200:	call   0x140039034
   140039205:	test   rbx,rbx
   140039208:	je     0x14003923a
   14003920a:	mov    r8d,0x3e8
   140039210:	lea    rdx,[rsp+0x30]
   140039215:	mov    rcx,rbx
   140039218:	call   QWORD PTR [rip+0x3e6a]        # 0x14003d088
   14003921e:	test   eax,eax
   140039220:	je     0x14003923a
   140039222:	lea    r8,[rsp+0x30]
   140039227:	lea    rdx,[rip+0xa752]        # 0x140043980
   14003922e:	lea    rcx,[rsp+0x20]
   140039233:	call   0x140039034
   140039238:	jmp    0x14003924b
   14003923a:	lea    rdx,[rip+0xa727]        # 0x140043968
   140039241:	lea    rcx,[rsp+0x20]
   140039246:	call   0x140038f74
   14003924b:	mov    r8d,r15d
   14003924e:	mov    rdx,rsi
   140039251:	lea    rcx,[rsp+0x20]
   140039256:	call   0x140039034
   14003925b:	test   rdi,rdi
   14003925e:	je     0x140039290
   140039260:	mov    r8d,0x3e8
   140039266:	lea    rdx,[rsp+0x30]
   14003926b:	mov    rcx,rdi
   14003926e:	call   QWORD PTR [rip+0x3e14]        # 0x14003d088
   140039274:	test   eax,eax
   140039276:	je     0x140039290
   140039278:	lea    r8,[rsp+0x30]
   14003927d:	lea    rdx,[rip+0xa724]        # 0x1400439a8
   140039284:	lea    rcx,[rsp+0x20]
   140039289:	call   0x140039034
   14003928e:	jmp    0x1400392a1
   140039290:	lea    rdx,[rip+0xa6f9]        # 0x140043990
   140039297:	lea    rcx,[rsp+0x20]
   14003929c:	call   0x140038f74
   1400392a1:	mov    r8d,r13d
   1400392a4:	mov    rdx,rsi
   1400392a7:	lea    rcx,[rsp+0x20]
   1400392ac:	call   0x140039034
   1400392b1:	lea    rdi,[r12+0x20]
   1400392b6:	mov    rcx,QWORD PTR [rdi]
   1400392b9:	call   QWORD PTR [rip+0x19e01]        # 0x1400530c0
   1400392bf:	and    QWORD PTR [rdi],0x0
   1400392c3:	mov    rbx,QWORD PTR [rsp+0x20]
   1400392c8:	mov    rdx,rbx
   1400392cb:	mov    rcx,rdi
   1400392ce:	call   0x1400116b0
   1400392d3:	mov    rcx,QWORD PTR [rdi]
   1400392d6:	call   QWORD PTR [rip+0x19d34]        # 0x140053010
   1400392dc:	test   eax,eax
   1400392de:	setne  dil
   1400392e2:	lea    rcx,[rbx-0x18]
   1400392e6:	call   0x14002a074
   1400392eb:	mov    al,dil
   1400392ee:	mov    rcx,QWORD PTR [rbp+0x700]
   1400392f5:	xor    rcx,rsp
   1400392f8:	call   0x1400141d0
   1400392fd:	lea    r11,[rsp+0x810]
   140039305:	mov    rbx,QWORD PTR [r11+0x38]
   140039309:	mov    rsi,QWORD PTR [r11+0x40]
   14003930d:	mov    rdi,QWORD PTR [r11+0x48]
   140039311:	mov    rsp,r11
   140039314:	pop    r15
   140039316:	pop    r14
   140039318:	pop    r13
   14003931a:	pop    r12
   14003931c:	pop    rbp
   14003931d:	ret    
   14003931e:	lea    rcx,[rdx+0x20]
   140039325:	jmp    0x14002a0f8
   14003932a:	int3   
   14003932b:	int3   
   14003932c:	int3   
   14003932d:	int3   
   14003932e:	int3   
   14003932f:	int3   
   140039330:	mov    QWORD PTR [rsp+0x8],rbx
   140039335:	mov    QWORD PTR [rsp+0x10],rsi
   14003933a:	push   rdi
   14003933b:	sub    rsp,0x20
   14003933f:	xor    eax,eax
   140039341:	mov    rdi,rcx
   140039344:	cmp    DWORD PTR [rcx+0x28],eax
   140039347:	mov    bl,0x1
   140039349:	sete   al
   14003934c:	mov    BYTE PTR [rcx+0x8],al
   14003934f:	mov    rcx,QWORD PTR [rcx+0x10]
   140039353:	call   QWORD PTR [rip+0x19cb7]        # 0x140053010
   140039359:	test   eax,eax
   14003935b:	jne    0x140039376
   14003935d:	cmp    BYTE PTR [rdi+0x8],al
   140039360:	je     0x140039366
   140039362:	xor    bl,bl
   140039364:	jmp    0x140039376
   140039366:	lea    rdx,[rip+0xa64b]        # 0x1400439b8
   14003936d:	lea    rcx,[rdi+0x10]
   140039371:	call   0x1400116b0
   140039376:	mov    rsi,QWORD PTR [rsp+0x38]
   14003937b:	mov    al,bl
   14003937d:	mov    rbx,QWORD PTR [rsp+0x30]
   140039382:	add    rsp,0x20
   140039386:	pop    rdi
   140039387:	ret    
   140039388:	int3   
   140039389:	int3   
   14003938a:	int3   
   14003938b:	int3   
   14003938c:	int3   
   14003938d:	int3   
   14003938e:	int3   
   14003938f:	int3   
   140039390:	mov    rax,rsp
   140039393:	push   rbp
   140039394:	mov    rbp,rsp
   140039397:	sub    rsp,0x80
   14003939e:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   1400393a6:	mov    QWORD PTR [rax+0x10],rbx
   1400393aa:	mov    QWORD PTR [rax+0x18],rsi
   1400393ae:	mov    QWORD PTR [rax+0x20],rdi
   1400393b2:	mov    rsi,rcx
   1400393b5:	and    QWORD PTR [rbp+0x10],0x0
   1400393ba:	lea    r9,[rbp+0x10]
   1400393be:	lea    r8,[rip+0xa60b]        # 0x1400439d0
   1400393c5:	mov    edx,0xfffffffc
   1400393ca:	mov    rcx,QWORD PTR [rcx]
   1400393cd:	call   QWORD PTR [rip+0x19c2d]        # 0x140053000
   1400393d3:	mov    ecx,0x3
   1400393d8:	mov    WORD PTR [rbp-0x58],cx
   1400393dc:	and    DWORD PTR [rbp-0x50],0x0
   1400393e0:	test   eax,eax
   1400393e2:	js     0x14003947f
   1400393e8:	lea    rcx,[rbp-0x40]
   1400393ec:	call   QWORD PTR [rip+0x19c26]        # 0x140053018
   1400393f2:	nop
   1400393f3:	movups xmm0,XMMWORD PTR [rbp-0x58]
   1400393f7:	movaps XMMWORD PTR [rbp-0x20],xmm0
   1400393fb:	movsd  xmm1,QWORD PTR [rbp-0x48]
   140039400:	movsd  QWORD PTR [rbp-0x10],xmm1
   140039405:	mov    rbx,QWORD PTR [rbp+0x10]
   140039409:	mov    rax,QWORD PTR [rbx]
   14003940c:	mov    rdi,QWORD PTR [rax+0x68]
   140039410:	mov    rcx,rdi
   140039413:	call   QWORD PTR [rip+0x430f]        # 0x14003d728
   140039419:	lea    r8,[rbp-0x40]
   14003941d:	lea    rdx,[rbp-0x20]
   140039421:	mov    rcx,rbx
   140039424:	call   rdi
   140039426:	mov    ebx,eax
   140039428:	test   eax,eax
   14003942a:	js     0x140039432
   14003942c:	mov    ecx,DWORD PTR [rbp-0x38]
   14003942f:	mov    DWORD PTR [rsi+0x2c],ecx
   140039432:	lea    rcx,[rbp-0x40]
   140039436:	call   QWORD PTR [rip+0x19be4]        # 0x140053020
   14003943c:	test   ebx,ebx
   14003943e:	js     0x14003947f
   140039440:	movups xmm0,XMMWORD PTR [rbp-0x58]
   140039444:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140039448:	movsd  xmm1,QWORD PTR [rbp-0x48]
   14003944d:	movsd  QWORD PTR [rbp-0x10],xmm1
   140039452:	mov    rbx,QWORD PTR [rbp+0x10]
   140039456:	mov    rax,QWORD PTR [rbx]
   140039459:	lea    rdi,[rsi+0x10]
   14003945d:	mov    rsi,QWORD PTR [rax+0x50]
   140039461:	mov    rcx,rsi
   140039464:	call   QWORD PTR [rip+0x42be]        # 0x14003d728
   14003946a:	mov    r8,rdi
   14003946d:	lea    rdx,[rbp-0x20]
   140039471:	mov    rcx,rbx
   140039474:	call   rsi
   140039476:	test   eax,eax
   140039478:	js     0x14003947f
   14003947a:	mov    sil,0x1
   14003947d:	jmp    0x140039482
   14003947f:	xor    sil,sil
   140039482:	lea    rcx,[rbp-0x58]
   140039486:	call   QWORD PTR [rip+0x19b94]        # 0x140053020
   14003948c:	nop
   14003948d:	mov    rbx,QWORD PTR [rbp+0x10]
   140039491:	test   rbx,rbx
   140039494:	je     0x1400394ab
   140039496:	mov    rcx,QWORD PTR [rbx]
   140039499:	mov    rdi,QWORD PTR [rcx+0x10]
   14003949d:	mov    rcx,rdi
   1400394a0:	call   QWORD PTR [rip+0x4282]        # 0x14003d728
   1400394a6:	mov    rcx,rbx
   1400394a9:	call   rdi
   1400394ab:	mov    al,sil
   1400394ae:	lea    r11,[rsp+0x80]
   1400394b6:	mov    rbx,QWORD PTR [r11+0x18]
   1400394ba:	mov    rsi,QWORD PTR [r11+0x20]
   1400394be:	mov    rdi,QWORD PTR [r11+0x28]
   1400394c2:	mov    rsp,r11
   1400394c5:	pop    rbp
   1400394c6:	ret    
   1400394c7:	lea    rcx,[rdx+0x90]
   1400394ce:	jmp    0x14000f4f0
   1400394d3:	lea    rcx,[rdx+0x28]
   1400394da:	jmp    0x140038e24
   1400394df:	lea    rcx,[rdx+0x40]
   1400394e6:	jmp    0x140038e24
   1400394eb:	int3   
   1400394ec:	int3   
   1400394ed:	int3   
   1400394ee:	int3   
   1400394ef:	int3   
   1400394f0:	int3   
   1400394f1:	int3   
   1400394f2:	int3   
   1400394f3:	int3   
   1400394f4:	sub    rsp,0x28
   1400394f8:	mov    rcx,rdx
   1400394fb:	call   QWORD PTR [rip+0x3bbf]        # 0x14003d0c0
   140039501:	xor    ecx,ecx
   140039503:	cmp    eax,0xffff
   140039508:	cmova  eax,ecx
   14003950b:	add    rsp,0x28
   14003950f:	ret    
   140039510:	int3   
   140039511:	int3   
   140039512:	int3   
   140039513:	int3   
   140039514:	int3   
   140039515:	int3   
   140039516:	int3   
   140039517:	int3   
   140039518:	rex push rbx
   14003951a:	sub    rsp,0x800
   140039521:	mov    rax,QWORD PTR [rip+0x14ae8]        # 0x14004e010
   140039528:	xor    rax,rsp
   14003952b:	mov    QWORD PTR [rsp+0x7f0],rax
   140039533:	mov    rbx,rcx
   140039536:	lea    rdx,[rsp+0x20]
   14003953b:	mov    rcx,QWORD PTR [rcx]
   14003953e:	mov    r8d,0x3e8
   140039544:	call   QWORD PTR [rip+0x3b3e]        # 0x14003d088
   14003954a:	test   eax,eax
   14003954c:	jle    0x14003958c
   14003954e:	lea    rcx,[rbx+0x18]
   140039552:	lea    rdx,[rsp+0x20]
   140039557:	call   0x1400116b0
   14003955c:	mov    r8d,0xc
   140039562:	lea    rdx,[rsp+0x20]
   140039567:	lea    rcx,[rip+0xa3b2]        # 0x140043920
   14003956e:	call   QWORD PTR [rip+0x404c]        # 0x14003d5c0
   140039574:	test   eax,eax
   140039576:	jne    0x14003957d
   140039578:	and    DWORD PTR [rbx+0x28],eax
   14003957b:	jmp    0x140039588
   14003957d:	mov    rdx,QWORD PTR [rbx]
   140039580:	call   0x1400394f4
   140039585:	mov    DWORD PTR [rbx+0x28],eax
   140039588:	mov    al,0x1
   14003958a:	jmp    0x14003958e
   14003958c:	xor    al,al
   14003958e:	mov    rcx,QWORD PTR [rsp+0x7f0]
   140039596:	xor    rcx,rsp
   140039599:	call   0x1400141d0
   14003959e:	add    rsp,0x800
   1400395a5:	pop    rbx
   1400395a6:	ret    
   1400395a7:	int3   
   1400395a8:	int3   
   1400395a9:	int3   
   1400395aa:	int3   
   1400395ab:	int3   
   1400395ac:	int3   
   1400395ad:	int3   
   1400395ae:	int3   
   1400395af:	int3   
   1400395b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400395b5:	push   rdi
   1400395b6:	sub    rsp,0x20
   1400395ba:	mov    rdi,rcx
   1400395bd:	call   0x140039518
   1400395c2:	xor    ebx,ebx
   1400395c4:	test   al,al
   1400395c6:	je     0x1400395f6
   1400395c8:	mov    rcx,rdi
   1400395cb:	call   0x140039104
   1400395d0:	test   al,al
   1400395d2:	je     0x1400395f6
   1400395d4:	cmp    DWORD PTR [rdi+0x28],ebx
   1400395d7:	jne    0x1400395e5
   1400395d9:	mov    rcx,rdi
   1400395dc:	call   0x140039390
   1400395e1:	test   al,al
   1400395e3:	je     0x1400395f6
   1400395e5:	mov    rcx,rdi
   1400395e8:	call   0x140039330
   1400395ed:	test   al,al
   1400395ef:	je     0x1400395f6
   1400395f1:	mov    ebx,0x1
   1400395f6:	mov    al,bl
   1400395f8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400395fd:	add    rsp,0x20
   140039601:	pop    rdi
   140039602:	ret    
   140039603:	int3   
   140039604:	int3   
   140039605:	int3   
   140039606:	int3   
   140039607:	int3   
   140039608:	int3   
   140039609:	int3   
   14003960a:	int3   
   14003960b:	int3   
   14003960c:	mov    rax,rsp
   14003960f:	mov    QWORD PTR [rax+0x8],rbx
   140039613:	mov    QWORD PTR [rax+0x10],rsi
   140039617:	mov    QWORD PTR [rax+0x18],rdi
   14003961b:	mov    QWORD PTR [rax+0x20],r14
   14003961f:	push   r15
   140039621:	sub    rsp,0x20
   140039625:	mov    rdi,QWORD PTR [rcx]
   140039628:	mov    esi,edx
   14003962a:	mov    r14,rcx
   14003962d:	mov    r15,QWORD PTR [rdi-0x18]
   140039631:	cmp    DWORD PTR [rdi-0xc],edx
   140039634:	jge    0x140039689
   140039636:	test   edx,edx
   140039638:	jle    0x140039689
   14003963a:	mov    rax,QWORD PTR [r15]
   14003963d:	mov    rbx,QWORD PTR [rax+0x10]
   140039641:	mov    rcx,rbx
   140039644:	call   QWORD PTR [rip+0x40de]        # 0x14003d728
   14003964a:	mov    r9d,0x2
   140039650:	lea    rdx,[rdi-0x18]
   140039654:	mov    r8d,esi
   140039657:	mov    rcx,r15
   14003965a:	call   rbx
   14003965c:	test   rax,rax
   14003965f:	jne    0x140039667
   140039661:	call   0x14002dd90
   140039666:	int3   
   140039667:	mov    rbx,QWORD PTR [rsp+0x30]
   14003966c:	add    rax,0x18
   140039670:	mov    rsi,QWORD PTR [rsp+0x38]
   140039675:	mov    rdi,QWORD PTR [rsp+0x40]
   14003967a:	mov    QWORD PTR [r14],rax
   14003967d:	mov    r14,QWORD PTR [rsp+0x48]
   140039682:	add    rsp,0x20
   140039686:	pop    r15
   140039688:	ret    
   140039689:	call   0x14002dd90
   14003968e:	int3   
   14003968f:	int3   
   140039690:	int3   
   140039691:	int3   
   140039692:	int3   
   140039693:	int3   
   140039694:	int3   
   140039695:	int3   
   140039696:	int3   
   140039697:	int3   
   140039698:	mov    QWORD PTR [rsp+0x8],rbx
   14003969d:	push   rdi
   14003969e:	sub    rsp,0x20
   1400396a2:	mov    rdi,rcx
   1400396a5:	mov    ecx,0x30
   1400396aa:	call   0x140013d94
   1400396af:	mov    QWORD PTR [rsp+0x38],rax
   1400396b4:	mov    rbx,rax
   1400396b7:	test   rax,rax
   1400396ba:	je     0x1400396d4
   1400396bc:	and    QWORD PTR [rax+0x10],0x0
   1400396c1:	and    QWORD PTR [rax+0x18],0x0
   1400396c6:	and    QWORD PTR [rax+0x20],0x0
   1400396cb:	mov    QWORD PTR [rax],rdi
   1400396ce:	mov    BYTE PTR [rax+0x8],0x0
   1400396d2:	jmp    0x1400396d6
   1400396d4:	xor    ebx,ebx
   1400396d6:	test   rbx,rbx
   1400396d9:	je     0x1400396f1
   1400396db:	mov    rcx,rbx
   1400396de:	call   0x1400395b0
   1400396e3:	test   al,al
   1400396e5:	jne    0x1400396f1
   1400396e7:	mov    rcx,rbx
   1400396ea:	call   0x1400318e4
   1400396ef:	xor    ebx,ebx
   1400396f1:	mov    rax,rbx
   1400396f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400396f9:	add    rsp,0x20
   1400396fd:	pop    rdi
   1400396fe:	ret    
   1400396ff:	int3   
   140039700:	int3   
   140039701:	int3   
   140039702:	int3   
   140039703:	int3   
   140039704:	int3   
   140039705:	int3   
   140039706:	int3   
   140039707:	int3   
   140039708:	mov    rax,rsp
   14003970b:	mov    QWORD PTR [rax+0x8],rcx
   14003970f:	push   rdi
   140039710:	sub    rsp,0x30
   140039714:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14003971c:	mov    QWORD PTR [rax+0x10],rbx
   140039720:	mov    QWORD PTR [rax+0x18],rsi
   140039724:	mov    rbx,rcx
   140039727:	and    QWORD PTR [rcx+0x10],0x0
   14003972c:	lea    rcx,[rip+0xa2ad]        # 0x1400439e0
   140039733:	call   QWORD PTR [rip+0x3b2f]        # 0x14003d268
   140039739:	mov    QWORD PTR [rbx+0x8],rax
   14003973d:	test   rax,rax
   140039740:	je     0x140039786
   140039742:	lea    rdx,[rip+0xa2af]        # 0x1400439f8
   140039749:	mov    rcx,rax
   14003974c:	call   QWORD PTR [rip+0x3ad6]        # 0x14003d228
   140039752:	mov    rdi,rax
   140039755:	test   rax,rax
   140039758:	je     0x140039777
   14003975a:	mov    rcx,rax
   14003975d:	call   QWORD PTR [rip+0x3fc5]        # 0x14003d728
   140039763:	xor    r8d,r8d
   140039766:	lea    rdx,[rbx+0x10]
   14003976a:	lea    rcx,[rip+0xa297]        # 0x140043a08
   140039771:	call   rdi
   140039773:	test   eax,eax
   140039775:	jns    0x140039786
   140039777:	mov    rcx,QWORD PTR [rbx+0x8]
   14003977b:	call   QWORD PTR [rip+0x3ad7]        # 0x14003d258
   140039781:	and    QWORD PTR [rbx+0x8],0x0
   140039786:	mov    rax,rbx
   140039789:	mov    rbx,QWORD PTR [rsp+0x48]
   14003978e:	mov    rsi,QWORD PTR [rsp+0x50]
   140039793:	add    rsp,0x30
   140039797:	pop    rdi
   140039798:	ret    
   140039799:	mov    rcx,QWORD PTR [rdx+0x40]
   1400397a0:	add    rcx,0x10
   1400397a4:	jmp    0x14000f4f0
   1400397a9:	int3   
   1400397aa:	int3   
   1400397ab:	int3   
   1400397ac:	int3   
   1400397ad:	int3   
   1400397ae:	int3   
   1400397af:	int3   
   1400397b0:	mov    r11,rsp
   1400397b3:	push   rdi
   1400397b4:	sub    rsp,0x40
   1400397b8:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   1400397c0:	mov    QWORD PTR [r11+0x8],rbx
   1400397c4:	mov    QWORD PTR [r11+0x10],rsi
   1400397c8:	mov    rax,rdx
   1400397cb:	mov    rdi,rcx
   1400397ce:	and    QWORD PTR [r11+0x18],0x0
   1400397d3:	lea    rcx,[r11+0x18]
   1400397d7:	mov    QWORD PTR [r11-0x20],rcx
   1400397db:	and    QWORD PTR [r11-0x28],0x0
   1400397e0:	xor    r9d,r9d
   1400397e3:	xor    r8d,r8d
   1400397e6:	mov    edx,0x8000010
   1400397eb:	mov    rcx,rax
   1400397ee:	call   QWORD PTR [rip+0x1996c]        # 0x140053160
   1400397f4:	mov    esi,eax
   1400397f6:	test   eax,eax
   1400397f8:	js     0x14003981a
   1400397fa:	mov    rdi,QWORD PTR [rdi+0x10]
   1400397fe:	mov    rax,QWORD PTR [rdi]
   140039801:	mov    rbx,QWORD PTR [rax+0x18]
   140039805:	mov    rcx,rbx
   140039808:	call   QWORD PTR [rip+0x3f1a]        # 0x14003d728
   14003980e:	mov    rdx,QWORD PTR [rsp+0x60]
   140039813:	mov    rcx,rdi
   140039816:	call   rbx
   140039818:	mov    esi,eax
   14003981a:	mov    rbx,QWORD PTR [rsp+0x60]
   14003981f:	test   rbx,rbx
   140039822:	je     0x140039839
   140039824:	mov    rax,QWORD PTR [rbx]
   140039827:	mov    rdi,QWORD PTR [rax+0x10]
   14003982b:	mov    rcx,rdi
   14003982e:	call   QWORD PTR [rip+0x3ef4]        # 0x14003d728
   140039834:	mov    rcx,rbx
   140039837:	call   rdi
   140039839:	mov    eax,esi
   14003983b:	mov    rbx,QWORD PTR [rsp+0x50]
   140039840:	mov    rsi,QWORD PTR [rsp+0x58]
   140039845:	add    rsp,0x40
   140039849:	pop    rdi
   14003984a:	ret    
   14003984b:	lea    rcx,[rdx+0x60]
   140039852:	jmp    0x14000f4f0
   140039857:	int3   
   140039858:	int3   
   140039859:	int3   
   14003985a:	int3   
   14003985b:	int3   
   14003985c:	int3   
   14003985d:	int3   
   14003985e:	int3   
   14003985f:	int3   
   140039860:	mov    rax,rsp
   140039863:	mov    QWORD PTR [rax+0x18],rbx
   140039867:	mov    QWORD PTR [rax+0x20],rbp
   14003986b:	mov    QWORD PTR [rax+0x10],rdx
   14003986f:	push   rsi
   140039870:	push   rdi
   140039871:	push   r14
   140039873:	sub    rsp,0x30
   140039877:	and    QWORD PTR [rax+0x8],0x0
   14003987c:	xor    bpl,bpl
   14003987f:	and    DWORD PTR [rax+0x10],0x0
   140039883:	mov    r14,r8
   140039886:	mov    rsi,rcx
   140039889:	mov    rdi,QWORD PTR [rsi+0x10]
   14003988d:	mov    rax,QWORD PTR [rdi]
   140039890:	mov    rbx,QWORD PTR [rax+0x48]
   140039894:	mov    rcx,rbx
   140039897:	call   QWORD PTR [rip+0x3e8b]        # 0x14003d728
   14003989d:	mov    rcx,rdi
   1400398a0:	call   rbx
   1400398a2:	test   eax,eax
   1400398a4:	jne    0x140039949
   1400398aa:	mov    rdi,QWORD PTR [rsi+0x10]
   1400398ae:	mov    rax,QWORD PTR [rdi]
   1400398b1:	mov    rbx,QWORD PTR [rax+0x70]
   1400398b5:	mov    rcx,rbx
   1400398b8:	call   QWORD PTR [rip+0x3e6a]        # 0x14003d728
   1400398be:	lea    r8,[rsp+0x58]
   1400398c3:	mov    rcx,rdi
   1400398c6:	lea    rdx,[rsp+0x50]
   1400398cb:	call   rbx
   1400398cd:	mov    r9d,DWORD PTR [rsp+0x58]
   1400398d2:	test   r9d,r9d
   1400398d5:	je     0x140039940
   1400398d7:	or     DWORD PTR [rsp+0x28],0xffffffff
   1400398dc:	lea    rax,[rip+0x9c8d]        # 0x140043570
   1400398e3:	mov    r8,QWORD PTR [rsp+0x50]
   1400398e8:	mov    edx,0x1
   1400398ed:	mov    QWORD PTR [rsp+0x20],rax
   1400398f2:	lea    ecx,[rdx+0x7e]
   1400398f5:	call   QWORD PTR [rip+0x3a7d]        # 0x14003d378
   1400398fb:	cmp    eax,0x2
   1400398fe:	jne    0x140039940
   140039900:	mov    rdi,QWORD PTR [rsi+0x10]
   140039904:	mov    rax,QWORD PTR [rdi]
   140039907:	mov    rbx,QWORD PTR [rax+0x80]
   14003990e:	mov    rcx,rbx
   140039911:	call   QWORD PTR [rip+0x3e11]        # 0x14003d728
   140039917:	lea    r8,[rsp+0x58]
   14003991c:	mov    rcx,rdi
   14003991f:	lea    rdx,[rsp+0x50]
   140039924:	call   rbx
   140039926:	mov    r8d,DWORD PTR [rsp+0x58]
   14003992b:	test   r8d,r8d
   14003992e:	je     0x140039940
   140039930:	mov    rdx,QWORD PTR [rsp+0x50]
   140039935:	mov    rcx,r14
   140039938:	mov    bpl,0x1
   14003993b:	call   0x1400116dc
   140039940:	test   bpl,bpl
   140039943:	je     0x140039889
   140039949:	mov    rdi,QWORD PTR [rsi+0x10]
   14003994d:	mov    rdx,QWORD PTR [rdi]
   140039950:	mov    rbx,QWORD PTR [rdx+0x38]
   140039954:	mov    rcx,rbx
   140039957:	call   QWORD PTR [rip+0x3dcb]        # 0x14003d728
   14003995d:	mov    rdx,rsi
   140039960:	mov    rcx,rdi
   140039963:	call   rbx
   140039965:	mov    rbx,QWORD PTR [rsp+0x60]
   14003996a:	mov    al,bpl
   14003996d:	mov    rbp,QWORD PTR [rsp+0x68]
   140039972:	add    rsp,0x30
   140039976:	pop    r14
   140039978:	pop    rdi
   140039979:	pop    rsi
   14003997a:	ret    
   14003997b:	int3   
   14003997c:	int3   
   14003997d:	int3   
   14003997e:	int3   
   14003997f:	int3   
   140039980:	int3   
   140039981:	int3   
   140039982:	int3   
   140039983:	int3   
   140039984:	mov    rax,rsp
   140039987:	mov    QWORD PTR [rax+0x8],rbx
   14003998b:	mov    QWORD PTR [rax+0x20],rbp
   14003998f:	mov    QWORD PTR [rax+0x10],rdx
   140039993:	push   rsi
   140039994:	push   rdi
   140039995:	push   r14
   140039997:	sub    rsp,0x30
   14003999b:	and    QWORD PTR [rax+0x18],0x0
   1400399a0:	xor    sil,sil
   1400399a3:	and    DWORD PTR [rax+0x10],0x0
   1400399a7:	mov    rbp,rcx
   1400399aa:	mov    r14d,0x1
   1400399b0:	mov    rdi,QWORD PTR [rbp+0x10]
   1400399b4:	mov    rax,QWORD PTR [rdi]
   1400399b7:	mov    rbx,QWORD PTR [rax+0x30]
   1400399bb:	mov    rcx,rbx
   1400399be:	call   QWORD PTR [rip+0x3d64]        # 0x14003d728
   1400399c4:	mov    rdx,rbp
   1400399c7:	mov    rcx,rdi
   1400399ca:	call   rbx
   1400399cc:	test   eax,eax
   1400399ce:	jne    0x140039a3b
   1400399d0:	cmp    DWORD PTR [rbp+0x0],r14d
   1400399d4:	jne    0x140039a32
   1400399d6:	mov    rdi,QWORD PTR [rbp+0x10]
   1400399da:	mov    rax,QWORD PTR [rdi]
   1400399dd:	mov    rbx,QWORD PTR [rax+0x70]
   1400399e1:	mov    rcx,rbx
   1400399e4:	call   QWORD PTR [rip+0x3d3e]        # 0x14003d728
   1400399ea:	lea    r8,[rsp+0x58]
   1400399ef:	mov    rcx,rdi
   1400399f2:	lea    rdx,[rsp+0x60]
   1400399f7:	call   rbx
   1400399f9:	mov    r9d,DWORD PTR [rsp+0x58]
   1400399fe:	test   r9d,r9d
   140039a01:	je     0x140039a32
   140039a03:	or     DWORD PTR [rsp+0x28],0xffffffff
   140039a08:	lea    rax,[rip+0x9b51]        # 0x140043560
   140039a0f:	mov    r8,QWORD PTR [rsp+0x60]
   140039a14:	mov    edx,r14d
   140039a17:	mov    ecx,0x7f
   140039a1c:	mov    QWORD PTR [rsp+0x20],rax
   140039a21:	call   QWORD PTR [rip+0x3951]        # 0x14003d378
   140039a27:	cmp    eax,0x2
   140039a2a:	movzx  esi,sil
   140039a2e:	cmove  esi,r14d
   140039a32:	test   sil,sil
   140039a35:	je     0x1400399b0
   140039a3b:	mov    rbx,QWORD PTR [rsp+0x50]
   140039a40:	mov    al,sil
   140039a43:	mov    rbp,QWORD PTR [rsp+0x68]
   140039a48:	add    rsp,0x30
   140039a4c:	pop    r14
   140039a4e:	pop    rdi
   140039a4f:	pop    rsi
   140039a50:	ret    
   140039a51:	int3   
   140039a52:	int3   
   140039a53:	int3   
   140039a54:	int3   
   140039a55:	int3   
   140039a56:	int3   
   140039a57:	int3   
   140039a58:	mov    QWORD PTR [rsp+0x10],rbx
   140039a5d:	mov    QWORD PTR [rsp+0x20],rsi
   140039a62:	push   rdi
   140039a63:	sub    rsp,0x30
   140039a67:	xor    al,al
   140039a69:	mov    rsi,rdx
   140039a6c:	cmp    DWORD PTR [rcx],0x1
   140039a6f:	jne    0x140039adc
   140039a71:	mov    al,0x1
   140039a73:	test   rdx,rdx
   140039a76:	je     0x140039adc
   140039a78:	mov    rdi,QWORD PTR [rcx+0x10]
   140039a7c:	and    QWORD PTR [rsp+0x50],0x0
   140039a82:	and    DWORD PTR [rsp+0x40],0x0
   140039a87:	mov    rax,QWORD PTR [rdi]
   140039a8a:	mov    rbx,QWORD PTR [rax+0x70]
   140039a8e:	mov    rcx,rbx
   140039a91:	call   QWORD PTR [rip+0x3c91]        # 0x14003d728
   140039a97:	lea    r8,[rsp+0x40]
   140039a9c:	mov    rcx,rdi
   140039a9f:	lea    rdx,[rsp+0x50]
   140039aa4:	call   rbx
   140039aa6:	test   eax,eax
   140039aa8:	js     0x140039ada
   140039aaa:	mov    r9d,DWORD PTR [rsp+0x40]
   140039aaf:	test   r9d,r9d
   140039ab2:	je     0x140039ada
   140039ab4:	or     DWORD PTR [rsp+0x28],0xffffffff
   140039ab9:	mov    edx,0x1
   140039abe:	mov    r8,QWORD PTR [rsp+0x50]
   140039ac3:	mov    QWORD PTR [rsp+0x20],rsi
   140039ac8:	lea    ecx,[rdx+0x7e]
   140039acb:	call   QWORD PTR [rip+0x38a7]        # 0x14003d378
   140039ad1:	cmp    eax,0x2
   140039ad4:	jne    0x140039ada
   140039ad6:	mov    al,0x1
   140039ad8:	jmp    0x140039adc
   140039ada:	xor    al,al
   140039adc:	mov    rbx,QWORD PTR [rsp+0x48]
   140039ae1:	mov    rsi,QWORD PTR [rsp+0x58]
   140039ae6:	add    rsp,0x30
   140039aea:	pop    rdi
   140039aeb:	ret    
   140039aec:	int3   
   140039aed:	int3   
   140039aee:	int3   
   140039aef:	int3   
   140039af0:	int3   
   140039af1:	int3   
   140039af2:	int3   
   140039af3:	int3   
   140039af4:	mov    QWORD PTR [rsp+0x8],rbx
   140039af9:	mov    QWORD PTR [rsp+0x10],rsi
   140039afe:	push   rdi
   140039aff:	sub    rsp,0x20
   140039b03:	mov    rsi,rcx
   140039b06:	mov    rdi,QWORD PTR [rsi+0x10]
   140039b0a:	mov    rax,QWORD PTR [rdi]
   140039b0d:	mov    rbx,QWORD PTR [rax+0x30]
   140039b11:	mov    rcx,rbx
   140039b14:	call   QWORD PTR [rip+0x3c0e]        # 0x14003d728
   140039b1a:	mov    rdx,rsi
   140039b1d:	mov    rcx,rdi
   140039b20:	call   rbx
   140039b22:	test   eax,eax
   140039b24:	jne    0x140039b2b
   140039b26:	cmp    DWORD PTR [rsi],0xd
   140039b29:	je     0x140039b06
   140039b2b:	mov    rbx,QWORD PTR [rsp+0x30]
   140039b30:	mov    rsi,QWORD PTR [rsp+0x38]
   140039b35:	add    rsp,0x20
   140039b39:	pop    rdi
   140039b3a:	ret    
   140039b3b:	int3   
   140039b3c:	int3   
   140039b3d:	int3   
   140039b3e:	int3   
   140039b3f:	int3   
   140039b40:	int3   
   140039b41:	int3   
   140039b42:	int3   
   140039b43:	int3   
   140039b44:	mov    QWORD PTR [rsp+0x10],rbx
   140039b49:	mov    QWORD PTR [rsp+0x20],rbp
   140039b4e:	push   rsi
   140039b4f:	push   rdi
   140039b50:	push   r14
   140039b52:	sub    rsp,0x30
   140039b56:	mov    r14,rdx
   140039b59:	mov    rbp,rcx
   140039b5c:	xor    esi,esi
   140039b5e:	cmp    DWORD PTR [rbp+0x0],0x2
   140039b62:	je     0x140039b70
   140039b64:	cmp    DWORD PTR [rbp+0x0],0x8
   140039b68:	je     0x140039b70
   140039b6a:	cmp    DWORD PTR [rbp+0x0],0xd
   140039b6e:	jne    0x140039b92
   140039b70:	mov    rdi,QWORD PTR [rbp+0x10]
   140039b74:	mov    rax,QWORD PTR [rdi]
   140039b77:	mov    rbx,QWORD PTR [rax+0x30]
   140039b7b:	mov    rcx,rbx
   140039b7e:	call   QWORD PTR [rip+0x3ba4]        # 0x14003d728
   140039b84:	mov    rdx,rbp
   140039b87:	mov    rcx,rdi
   140039b8a:	call   rbx
   140039b8c:	test   eax,eax
   140039b8e:	je     0x140039b5e
   140039b90:	jmp    0x140039bfe
   140039b92:	cmp    DWORD PTR [rbp+0x0],0xf
   140039b96:	jne    0x140039bf9
   140039b98:	test   r14,r14
   140039b9b:	je     0x140039bfe
   140039b9d:	mov    rdi,QWORD PTR [rbp+0x10]
   140039ba1:	mov    QWORD PTR [rsp+0x60],rsi
   140039ba6:	mov    DWORD PTR [rsp+0x50],esi
   140039baa:	mov    rax,QWORD PTR [rdi]
   140039bad:	mov    rbx,QWORD PTR [rax+0x70]
   140039bb1:	mov    rcx,rbx
   140039bb4:	call   QWORD PTR [rip+0x3b6e]        # 0x14003d728
   140039bba:	lea    r8,[rsp+0x50]
   140039bbf:	mov    rcx,rdi
   140039bc2:	lea    rdx,[rsp+0x60]
   140039bc7:	call   rbx
   140039bc9:	test   eax,eax
   140039bcb:	js     0x140039bf9
   140039bcd:	mov    r9d,DWORD PTR [rsp+0x50]
   140039bd2:	test   r9d,r9d
   140039bd5:	je     0x140039bf9
   140039bd7:	or     DWORD PTR [rsp+0x28],0xffffffff
   140039bdc:	mov    edx,0x1
   140039be1:	mov    r8,QWORD PTR [rsp+0x60]
   140039be6:	mov    QWORD PTR [rsp+0x20],r14
   140039beb:	lea    ecx,[rdx+0x7e]
   140039bee:	call   QWORD PTR [rip+0x3784]        # 0x14003d378
   140039bf4:	cmp    eax,0x2
   140039bf7:	je     0x140039bfe
   140039bf9:	mov    esi,0x8000ffff
   140039bfe:	mov    rcx,rbp
   140039c01:	call   0x140039af4
   140039c06:	mov    rbx,QWORD PTR [rsp+0x58]
   140039c0b:	mov    eax,esi
   140039c0d:	mov    rbp,QWORD PTR [rsp+0x68]
   140039c12:	add    rsp,0x30
   140039c16:	pop    r14
   140039c18:	pop    rdi
   140039c19:	pop    rsi
   140039c1a:	ret    
   140039c1b:	int3   
   140039c1c:	int3   
   140039c1d:	int3   
   140039c1e:	int3   
   140039c1f:	int3   
   140039c20:	int3   
   140039c21:	int3   
   140039c22:	int3   
   140039c23:	int3   
   140039c24:	mov    QWORD PTR [rsp+0x10],rbx
   140039c29:	mov    QWORD PTR [rsp+0x20],rbp
   140039c2e:	push   rsi
   140039c2f:	push   rdi
   140039c30:	push   r14
   140039c32:	sub    rsp,0x20
   140039c36:	xor    ebx,ebx
   140039c38:	mov    rbp,rdx
   140039c3b:	cmp    DWORD PTR [rcx],0xd
   140039c3e:	mov    rsi,rcx
   140039c41:	jne    0x140039c6a
   140039c43:	test   ebx,ebx
   140039c45:	jne    0x140039c6a
   140039c47:	mov    rdi,QWORD PTR [rsi+0x10]
   140039c4b:	mov    rax,QWORD PTR [rdi]
   140039c4e:	mov    rbx,QWORD PTR [rax+0x30]
   140039c52:	mov    rcx,rbx
   140039c55:	call   QWORD PTR [rip+0x3acd]        # 0x14003d728
   140039c5b:	mov    rdx,rsi
   140039c5e:	mov    rcx,rdi
   140039c61:	call   rbx
   140039c63:	cmp    DWORD PTR [rsi],0xd
   140039c66:	mov    ebx,eax
   140039c68:	je     0x140039c43
   140039c6a:	cmp    DWORD PTR [rsi],0x3
   140039c6d:	mov    r14d,0x8000ffff
   140039c73:	cmovne ebx,r14d
   140039c77:	test   ebx,ebx
   140039c79:	jne    0x140039ccd
   140039c7b:	mov    rdi,QWORD PTR [rsi+0x10]
   140039c7f:	and    DWORD PTR [rsp+0x40],ebx
   140039c83:	and    QWORD PTR [rsp+0x50],0x0
   140039c89:	mov    rax,QWORD PTR [rdi]
   140039c8c:	mov    rbx,QWORD PTR [rax+0x80]
   140039c93:	mov    rcx,rbx
   140039c96:	call   QWORD PTR [rip+0x3a8c]        # 0x14003d728
   140039c9c:	lea    r8,[rsp+0x40]
   140039ca1:	mov    rcx,rdi
   140039ca4:	lea    rdx,[rsp+0x50]
   140039ca9:	call   rbx
   140039cab:	mov    ebx,eax
   140039cad:	test   eax,eax
   140039caf:	js     0x140039cca
   140039cb1:	mov    r8d,DWORD PTR [rsp+0x40]
   140039cb6:	test   r8d,r8d
   140039cb9:	je     0x140039cca
   140039cbb:	mov    rdx,QWORD PTR [rsp+0x50]
   140039cc0:	mov    rcx,rbp
   140039cc3:	call   0x1400116dc
   140039cc8:	jmp    0x140039ccd
   140039cca:	mov    ebx,r14d
   140039ccd:	mov    rcx,rsi
   140039cd0:	call   0x140039af4
   140039cd5:	mov    rbp,QWORD PTR [rsp+0x58]
   140039cda:	mov    eax,ebx
   140039cdc:	mov    rbx,QWORD PTR [rsp+0x48]
   140039ce1:	add    rsp,0x20
   140039ce5:	pop    r14
   140039ce7:	pop    rdi
   140039ce8:	pop    rsi
   140039ce9:	ret    
   140039cea:	int3   
   140039ceb:	int3   
   140039cec:	int3   
   140039ced:	int3   
   140039cee:	int3   
   140039cef:	int3   
   140039cf0:	mov    QWORD PTR [rsp+0x10],rbx
   140039cf5:	push   rbp
   140039cf6:	push   rsi
   140039cf7:	push   rdi
   140039cf8:	push   r14
   140039cfa:	push   r15
   140039cfc:	sub    rsp,0x30
   140039d00:	and    QWORD PTR [rsp+0x78],0x0
   140039d06:	mov    r15,r8
   140039d09:	and    DWORD PTR [rsp+0x60],0x0
   140039d0e:	mov    r14,rdx
   140039d11:	mov    rbp,rcx
   140039d14:	mov    esi,0x8000ffff
   140039d19:	cmp    DWORD PTR [rbp+0x0],0x1
   140039d1d:	mov    rdi,QWORD PTR [rbp+0x10]
   140039d21:	mov    rax,QWORD PTR [rdi]
   140039d24:	je     0x140039d41
   140039d26:	mov    rbx,QWORD PTR [rax+0x30]
   140039d2a:	mov    rcx,rbx
   140039d2d:	call   QWORD PTR [rip+0x39f5]        # 0x14003d728
   140039d33:	mov    rdx,rbp
   140039d36:	mov    rcx,rdi
   140039d39:	call   rbx
   140039d3b:	test   eax,eax
   140039d3d:	je     0x140039d19
   140039d3f:	jmp    0x140039db8
   140039d41:	mov    rbx,QWORD PTR [rax+0xa0]
   140039d48:	mov    rcx,rbx
   140039d4b:	call   QWORD PTR [rip+0x39d7]        # 0x14003d728
   140039d51:	mov    rcx,rdi
   140039d54:	call   rbx
   140039d56:	test   eax,eax
   140039d58:	setne  cl
   140039d5b:	mov    BYTE PTR [r15],cl
   140039d5e:	test   r14,r14
   140039d61:	je     0x140039db6
   140039d63:	mov    rdi,QWORD PTR [rbp+0x10]
   140039d67:	mov    rax,QWORD PTR [rdi]
   140039d6a:	mov    rbx,QWORD PTR [rax+0x70]
   140039d6e:	mov    rcx,rbx
   140039d71:	call   QWORD PTR [rip+0x39b1]        # 0x14003d728
   140039d77:	lea    r8,[rsp+0x60]
   140039d7c:	mov    rcx,rdi
   140039d7f:	lea    rdx,[rsp+0x78]
   140039d84:	call   rbx
   140039d86:	test   eax,eax
   140039d88:	js     0x140039db8
   140039d8a:	mov    r9d,DWORD PTR [rsp+0x60]
   140039d8f:	test   r9d,r9d
   140039d92:	je     0x140039db8
   140039d94:	or     DWORD PTR [rsp+0x28],0xffffffff
   140039d99:	mov    edx,0x1
   140039d9e:	mov    r8,QWORD PTR [rsp+0x78]
   140039da3:	mov    QWORD PTR [rsp+0x20],r14
   140039da8:	lea    ecx,[rdx+0x7e]
   140039dab:	call   QWORD PTR [rip+0x35c7]        # 0x14003d378
   140039db1:	cmp    eax,0x2
   140039db4:	jne    0x140039db8
   140039db6:	xor    esi,esi
   140039db8:	mov    rcx,rbp
   140039dbb:	call   0x140039af4
   140039dc0:	mov    rbx,QWORD PTR [rsp+0x68]
   140039dc5:	mov    eax,esi
   140039dc7:	add    rsp,0x30
   140039dcb:	pop    r15
   140039dcd:	pop    r14
   140039dcf:	pop    rdi
   140039dd0:	pop    rsi
   140039dd1:	pop    rbp
   140039dd2:	ret    
   140039dd3:	int3   
   140039dd4:	int3   
   140039dd5:	int3   
   140039dd6:	int3   
   140039dd7:	int3   
   140039dd8:	int3   
   140039dd9:	int3   
   140039dda:	int3   
   140039ddb:	int3   
   140039ddc:	mov    rax,rsp
   140039ddf:	mov    QWORD PTR [rax+0x8],rcx
   140039de3:	push   rsi
   140039de4:	push   rdi
   140039de5:	push   r12
   140039de7:	push   r14
   140039de9:	push   r15
   140039deb:	sub    rsp,0x30
   140039def:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140039df7:	mov    QWORD PTR [rax+0x10],rbx
   140039dfb:	mov    QWORD PTR [rax+0x18],rbp
   140039dff:	mov    rbp,rdx
   140039e02:	mov    r14,rcx
   140039e05:	lea    rax,[rip+0x921c]        # 0x140043028
   140039e0c:	mov    QWORD PTR [rcx],rax
   140039e0f:	xor    esi,esi
   140039e11:	mov    QWORD PTR [rcx+0x8],rsi
   140039e15:	mov    QWORD PTR [rcx+0x10],rsi
   140039e19:	mov    r12d,DWORD PTR [rdx+0x8]
   140039e1d:	test   r12d,r12d
   140039e20:	jle    0x140039e61
   140039e22:	mov    edx,esi
   140039e24:	mov    rcx,rbp
   140039e27:	call   0x14000f858
   140039e2c:	mov    rdx,rax
   140039e2f:	lea    rcx,[r14+0x8]
   140039e33:	call   0x14000f7cc
   140039e38:	mov    edx,esi
   140039e3a:	mov    rcx,rbp
   140039e3d:	call   0x14000f858
   140039e42:	mov    rdi,QWORD PTR [rax]
   140039e45:	mov    rax,QWORD PTR [rdi]
   140039e48:	mov    rbx,QWORD PTR [rax+0x8]
   140039e4c:	mov    rcx,rbx
   140039e4f:	call   QWORD PTR [rip+0x38d3]        # 0x14003d728
   140039e55:	mov    rcx,rdi
   140039e58:	call   rbx
   140039e5a:	inc    esi
   140039e5c:	cmp    esi,r12d
   140039e5f:	jl     0x140039e22
   140039e61:	mov    rax,r14
   140039e64:	mov    rbx,QWORD PTR [rsp+0x68]
   140039e69:	mov    rbp,QWORD PTR [rsp+0x70]
   140039e6e:	add    rsp,0x30
   140039e72:	pop    r15
   140039e74:	pop    r14
   140039e76:	pop    r12
   140039e78:	pop    rdi
   140039e79:	pop    rsi
   140039e7a:	ret    
   140039e7b:	mov    rcx,QWORD PTR [rdx+0x60]
   140039e82:	add    rcx,0x8
   140039e86:	jmp    0x14002a044
   140039e8b:	int3   
   140039e8c:	int3   
   140039e8d:	int3   
   140039e8e:	int3   
   140039e8f:	int3   
   140039e90:	int3   
   140039e91:	int3   
   140039e92:	int3   
   140039e93:	int3   
   140039e94:	mov    rax,rsp
   140039e97:	mov    QWORD PTR [rax+0x8],rcx
   140039e9b:	push   rdi
   140039e9c:	push   r14
   140039e9e:	push   r15
   140039ea0:	sub    rsp,0x30
   140039ea4:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140039eac:	mov    QWORD PTR [rax+0x10],rbx
   140039eb0:	mov    QWORD PTR [rax+0x18],rbp
   140039eb4:	mov    QWORD PTR [rax+0x20],rsi
   140039eb8:	mov    rsi,rcx
   140039ebb:	lea    rax,[rip+0x9166]        # 0x140043028
   140039ec2:	mov    QWORD PTR [rcx],rax
   140039ec5:	mov    ebp,DWORD PTR [rcx+0x10]
   140039ec8:	xor    r14d,r14d
   140039ecb:	test   ebp,ebp
   140039ecd:	jle    0x140039efb
   140039ecf:	mov    edx,r14d
   140039ed2:	lea    rcx,[rsi+0x8]
   140039ed6:	call   0x14000f858
   140039edb:	mov    rdi,QWORD PTR [rax]
   140039ede:	mov    rax,QWORD PTR [rdi]
   140039ee1:	mov    rbx,QWORD PTR [rax+0x10]
   140039ee5:	mov    rcx,rbx
   140039ee8:	call   QWORD PTR [rip+0x383a]        # 0x14003d728
   140039eee:	mov    rcx,rdi
   140039ef1:	call   rbx
   140039ef3:	inc    r14d
   140039ef6:	cmp    r14d,ebp
   140039ef9:	jl     0x140039ecf
   140039efb:	mov    rcx,QWORD PTR [rsi+0x8]
   140039eff:	test   rcx,rcx
   140039f02:	je     0x140039f0f
   140039f04:	call   QWORD PTR [rip+0x373e]        # 0x14003d648
   140039f0a:	and    QWORD PTR [rsi+0x8],0x0
   140039f0f:	and    DWORD PTR [rsi+0x10],0x0
   140039f13:	and    DWORD PTR [rsi+0x14],0x0
   140039f17:	mov    rbx,QWORD PTR [rsp+0x58]
   140039f1c:	mov    rbp,QWORD PTR [rsp+0x60]
   140039f21:	mov    rsi,QWORD PTR [rsp+0x68]
   140039f26:	add    rsp,0x30
   140039f2a:	pop    r15
   140039f2c:	pop    r14
   140039f2e:	pop    rdi
   140039f2f:	ret    
   140039f30:	mov    rcx,QWORD PTR [rdx+0x50]
   140039f37:	add    rcx,0x8
   140039f3b:	jmp    0x14002a044
   140039f40:	int3   
   140039f41:	int3   
   140039f42:	int3   
   140039f43:	int3   
   140039f44:	int3   
   140039f45:	int3   
   140039f46:	int3   
   140039f47:	int3   
   140039f48:	int3   
   140039f49:	int3   
   140039f4a:	int3   
   140039f4b:	int3   
   140039f4c:	int3   
   140039f4d:	int3   
   140039f4e:	int3   
   140039f4f:	int3   
   140039f50:	mov    QWORD PTR [rsp+0x8],rbx
   140039f55:	push   rdi
   140039f56:	sub    rsp,0x20
   140039f5a:	mov    ebx,edx
   140039f5c:	mov    rdi,rcx
   140039f5f:	call   0x140039e94
   140039f64:	test   bl,0x1
   140039f67:	je     0x140039f71
   140039f69:	mov    rcx,rdi
   140039f6c:	call   0x140013de0
   140039f71:	mov    rax,rdi
   140039f74:	mov    rbx,QWORD PTR [rsp+0x30]
   140039f79:	add    rsp,0x20
   140039f7d:	pop    rdi
   140039f7e:	ret    
   140039f7f:	int3   
   140039f80:	int3   
   140039f81:	int3   
   140039f82:	int3   
   140039f83:	int3   
   140039f84:	int3   
   140039f85:	int3   
   140039f86:	int3   
   140039f87:	int3   
   140039f88:	int3   
   140039f89:	int3   
   140039f8a:	int3   
   140039f8b:	int3   
   140039f8c:	int3   
   140039f8d:	int3   
   140039f8e:	int3   
   140039f8f:	int3   
   140039f90:	mov    QWORD PTR [rsp+0x8],rbx
   140039f95:	push   rdi
   140039f96:	sub    rsp,0x20
   140039f9a:	mov    rax,QWORD PTR [rdx]
   140039f9d:	mov    rdi,rdx
   140039fa0:	mov    rbx,QWORD PTR [rax+0x18]
   140039fa4:	mov    rcx,rbx
   140039fa7:	call   QWORD PTR [rip+0x377b]        # 0x14003d728
   140039fad:	mov    rcx,rdi
   140039fb0:	mov    rax,rbx
   140039fb3:	mov    rbx,QWORD PTR [rsp+0x30]
   140039fb8:	add    rsp,0x20
   140039fbc:	pop    rdi
   140039fbd:	rex.W jmp rax
   140039fc0:	int3   
   140039fc1:	int3   
   140039fc2:	int3   
   140039fc3:	int3   
   140039fc4:	int3   
   140039fc5:	int3   
   140039fc6:	int3   
   140039fc7:	int3   
   140039fc8:	int3   
   140039fc9:	int3   
   140039fca:	int3   
   140039fcb:	int3   
   140039fcc:	int3   
   140039fcd:	int3   
   140039fce:	int3   
   140039fcf:	int3   
   140039fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140039fd5:	mov    QWORD PTR [rsp+0x10],rsi
   140039fda:	push   rdi
   140039fdb:	sub    rsp,0x20
   140039fdf:	mov    rax,QWORD PTR [rdx]
   140039fe2:	mov    rdi,rcx
   140039fe5:	mov    rsi,rdx
   140039fe8:	mov    rbx,QWORD PTR [rax+0x30]
   140039fec:	mov    rcx,rbx
   140039fef:	call   QWORD PTR [rip+0x3733]        # 0x14003d728
   140039ff5:	mov    r8d,DWORD PTR [rdi+0x1c]
   140039ff9:	mov    rcx,rsi
   140039ffc:	mov    edx,DWORD PTR [rdi+0x18]
   140039fff:	mov    rax,rbx
   14003a002:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a007:	mov    rsi,QWORD PTR [rsp+0x38]
   14003a00c:	add    rsp,0x20
   14003a010:	pop    rdi
   14003a011:	rex.W jmp rax
   14003a014:	int3   
   14003a015:	int3   
   14003a016:	int3   
   14003a017:	int3   
   14003a018:	int3   
   14003a019:	int3   
   14003a01a:	int3   
   14003a01b:	int3   
   14003a01c:	int3   
   14003a01d:	int3   
   14003a01e:	int3   
   14003a01f:	int3   
   14003a020:	mov    QWORD PTR [rsp+0x8],rbx
   14003a025:	mov    QWORD PTR [rsp+0x10],rsi
   14003a02a:	push   rdi
   14003a02b:	sub    rsp,0x20
   14003a02f:	mov    rax,QWORD PTR [rdx]
   14003a032:	mov    rdi,rcx
   14003a035:	mov    rsi,rdx
   14003a038:	mov    rbx,QWORD PTR [rax+0x28]
   14003a03c:	mov    rcx,rbx
   14003a03f:	call   QWORD PTR [rip+0x36e3]        # 0x14003d728
   14003a045:	mov    r9d,DWORD PTR [rdi+0x20]
   14003a049:	mov    rcx,rsi
   14003a04c:	mov    r8d,DWORD PTR [rdi+0x1c]
   14003a050:	mov    edx,DWORD PTR [rdi+0x18]
   14003a053:	mov    rax,rbx
   14003a056:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a05b:	mov    rsi,QWORD PTR [rsp+0x38]
   14003a060:	add    rsp,0x20
   14003a064:	pop    rdi
   14003a065:	rex.W jmp rax
   14003a068:	int3   
   14003a069:	int3   
   14003a06a:	int3   
   14003a06b:	int3   
   14003a06c:	int3   
   14003a06d:	int3   
   14003a06e:	int3   
   14003a06f:	int3   
   14003a070:	mov    rax,rsp
   14003a073:	push   rdi
   14003a074:	push   r14
   14003a076:	push   r15
   14003a078:	sub    rsp,0x30
   14003a07c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14003a084:	mov    QWORD PTR [rax+0x10],rbx
   14003a088:	mov    QWORD PTR [rax+0x18],rbp
   14003a08c:	mov    QWORD PTR [rax+0x20],rsi
   14003a090:	mov    r14,rcx
   14003a093:	mov    ebp,DWORD PTR [rcx+0x10]
   14003a096:	xor    esi,esi
   14003a098:	test   ebp,ebp
   14003a09a:	jle    0x14003a130
   14003a0a0:	mov    edx,esi
   14003a0a2:	lea    rcx,[r14+0x8]
   14003a0a6:	call   0x14000f858
   14003a0ab:	mov    rcx,QWORD PTR [rax]
   14003a0ae:	cmp    QWORD PTR [rcx+0xa0],0x0
   14003a0b6:	je     0x14003a126
   14003a0b8:	and    QWORD PTR [rsp+0x50],0x0
   14003a0be:	mov    edx,esi
   14003a0c0:	lea    rcx,[r14+0x8]
   14003a0c4:	call   0x14000f858
   14003a0c9:	mov    rdi,QWORD PTR [rax]
   14003a0cc:	mov    rax,QWORD PTR [rdi]
   14003a0cf:	mov    rbx,QWORD PTR [rax]
   14003a0d2:	mov    rcx,rbx
   14003a0d5:	call   QWORD PTR [rip+0x364d]        # 0x14003d728
   14003a0db:	lea    r8,[rsp+0x50]
   14003a0e0:	lea    rdx,[rip+0x9409]        # 0x1400434f0
   14003a0e7:	mov    rcx,rdi
   14003a0ea:	call   rbx
   14003a0ec:	mov    rax,QWORD PTR [r14]
   14003a0ef:	mov    rbx,QWORD PTR [rax+0x10]
   14003a0f3:	mov    rcx,rbx
   14003a0f6:	call   QWORD PTR [rip+0x362c]        # 0x14003d728
   14003a0fc:	mov    rdx,QWORD PTR [rsp+0x50]
   14003a101:	mov    rcx,r14
   14003a104:	call   rbx
   14003a106:	nop
   14003a107:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a10c:	test   rbx,rbx
   14003a10f:	je     0x14003a126
   14003a111:	mov    rax,QWORD PTR [rbx]
   14003a114:	mov    rdi,QWORD PTR [rax+0x10]
   14003a118:	mov    rcx,rdi
   14003a11b:	call   QWORD PTR [rip+0x3607]        # 0x14003d728
   14003a121:	mov    rcx,rbx
   14003a124:	call   rdi
   14003a126:	inc    esi
   14003a128:	cmp    esi,ebp
   14003a12a:	jl     0x14003a0a0
   14003a130:	mov    rbx,QWORD PTR [rsp+0x58]
   14003a135:	mov    rbp,QWORD PTR [rsp+0x60]
   14003a13a:	mov    rsi,QWORD PTR [rsp+0x68]
   14003a13f:	add    rsp,0x30
   14003a143:	pop    r15
   14003a145:	pop    r14
   14003a147:	pop    rdi
   14003a148:	ret    
   14003a149:	lea    rcx,[rdx+0x50]
   14003a150:	jmp    0x14000f4f0
   14003a155:	int3   
   14003a156:	int3   
   14003a157:	int3   
   14003a158:	int3   
   14003a159:	int3   
   14003a15a:	int3   
   14003a15b:	int3   
   14003a15c:	int3   
   14003a15d:	int3   
   14003a15e:	int3   
   14003a15f:	int3   
   14003a160:	rex push rbx
   14003a162:	sub    rsp,0x20
   14003a166:	lea    rax,[rip+0x59a3]        # 0x14003fb10
   14003a16d:	mov    rbx,rcx
   14003a170:	mov    QWORD PTR [rcx],rax
   14003a173:	test   dl,0x1
   14003a176:	je     0x14003a17d
   14003a178:	call   0x140013de0
   14003a17d:	mov    rax,rbx
   14003a180:	add    rsp,0x20
   14003a184:	pop    rbx
   14003a185:	ret    
   14003a186:	int3   
   14003a187:	int3   
   14003a188:	int3   
   14003a189:	int3   
   14003a18a:	int3   
   14003a18b:	int3   
   14003a18c:	int3   
   14003a18d:	int3   
   14003a18e:	int3   
   14003a18f:	int3   
   14003a190:	mov    QWORD PTR [rsp+0x8],rbx
   14003a195:	push   rdi
   14003a196:	sub    rsp,0x20
   14003a19a:	mov    ebx,edx
   14003a19c:	mov    rdi,rcx
   14003a19f:	call   0x14000f118
   14003a1a4:	test   bl,0x1
   14003a1a7:	je     0x14003a1b1
   14003a1a9:	mov    rcx,rdi
   14003a1ac:	call   0x140013de0
   14003a1b1:	mov    rax,rdi
   14003a1b4:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a1b9:	add    rsp,0x20
   14003a1bd:	pop    rdi
   14003a1be:	ret    
   14003a1bf:	int3   
   14003a1c0:	int3   
   14003a1c1:	int3   
   14003a1c2:	int3   
   14003a1c3:	int3   
   14003a1c4:	int3   
   14003a1c5:	int3   
   14003a1c6:	int3   
   14003a1c7:	int3   
   14003a1c8:	int3   
   14003a1c9:	int3   
   14003a1ca:	int3   
   14003a1cb:	int3   
   14003a1cc:	int3   
   14003a1cd:	int3   
   14003a1ce:	int3   
   14003a1cf:	int3   
   14003a1d0:	mov    rcx,QWORD PTR [rcx+0x8]
   14003a1d4:	mov    r8,rdx
   14003a1d7:	xor    edx,edx
   14003a1d9:	rex.W jmp QWORD PTR [rip+0x2ff0]        # 0x14003d1d0
   14003a1e0:	int3   
   14003a1e1:	int3   
   14003a1e2:	int3   
   14003a1e3:	int3   
   14003a1e4:	int3   
   14003a1e5:	int3   
   14003a1e6:	int3   
   14003a1e7:	int3   
   14003a1e8:	int3   
   14003a1e9:	int3   
   14003a1ea:	int3   
   14003a1eb:	int3   
   14003a1ec:	int3   
   14003a1ed:	int3   
   14003a1ee:	int3   
   14003a1ef:	int3   
   14003a1f0:	mov    rax,rsp
   14003a1f3:	mov    QWORD PTR [rax+0x8],rbx
   14003a1f7:	mov    QWORD PTR [rax+0x10],rbp
   14003a1fb:	mov    QWORD PTR [rax+0x18],rsi
   14003a1ff:	mov    QWORD PTR [rax+0x20],rdi
   14003a203:	push   r14
   14003a205:	sub    rsp,0x20
   14003a209:	mov    r14,rdx
   14003a20c:	mov    rsi,rcx
   14003a20f:	test   r8d,r8d
   14003a212:	js     0x14003a27d
   14003a214:	mov    eax,0x7fffffff
   14003a219:	sub    eax,r8d
   14003a21c:	cmp    eax,0x1
   14003a21f:	jl     0x14003a27d
   14003a221:	inc    r8d
   14003a224:	lea    ebp,[r8+0x7]
   14003a228:	and    ebp,0xfffffff8
   14003a22b:	cmp    r8d,ebp
   14003a22e:	jg     0x14003a27d
   14003a230:	mov    eax,r9d
   14003a233:	mov    ecx,ebp
   14003a235:	imul   rcx,rax
   14003a239:	mov    eax,0xffffffff
   14003a23e:	cmp    rcx,rax
   14003a241:	ja     0x14003a27d
   14003a243:	cmp    ecx,0xffffffe7
   14003a246:	ja     0x14003a27d
   14003a248:	mov    rsi,QWORD PTR [rsi+0x8]
   14003a24c:	lea    ebx,[rcx+0x18]
   14003a24f:	mov    rax,QWORD PTR [rsi]
   14003a252:	mov    rdi,QWORD PTR [rax+0x10]
   14003a256:	mov    rcx,rdi
   14003a259:	call   QWORD PTR [rip+0x34c9]        # 0x14003d728
   14003a25f:	mov    r8d,ebx
   14003a262:	mov    rdx,r14
   14003a265:	mov    rcx,rsi
   14003a268:	call   rdi
   14003a26a:	mov    rcx,rax
   14003a26d:	test   rax,rax
   14003a270:	je     0x14003a27d
   14003a272:	lea    eax,[rbp-0x1]
   14003a275:	mov    DWORD PTR [rcx+0xc],eax
   14003a278:	mov    rax,rcx
   14003a27b:	jmp    0x14003a27f
   14003a27d:	xor    eax,eax
   14003a27f:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a284:	mov    rbp,QWORD PTR [rsp+0x38]
   14003a289:	mov    rsi,QWORD PTR [rsp+0x40]
   14003a28e:	mov    rdi,QWORD PTR [rsp+0x48]
   14003a293:	add    rsp,0x20
   14003a297:	pop    r14
   14003a299:	ret    
   14003a29a:	int3   
   14003a29b:	int3   
   14003a29c:	int3   
   14003a29d:	int3   
   14003a29e:	int3   
   14003a29f:	int3   
   14003a2a0:	mov    QWORD PTR [rsp+0x8],rbx
   14003a2a5:	mov    QWORD PTR [rsp+0x10],rbp
   14003a2aa:	mov    QWORD PTR [rsp+0x18],rsi
   14003a2af:	push   rdi
   14003a2b0:	sub    rsp,0x20
   14003a2b4:	mov    rsi,r8
   14003a2b7:	mov    rbp,rdx
   14003a2ba:	mov    rdi,rcx
   14003a2bd:	test   rdx,rdx
   14003a2c0:	jne    0x14003a2db
   14003a2c2:	mov    rax,QWORD PTR [rcx]
   14003a2c5:	mov    rbx,QWORD PTR [rax]
   14003a2c8:	mov    rcx,rbx
   14003a2cb:	call   QWORD PTR [rip+0x3457]        # 0x14003d728
   14003a2d1:	mov    rdx,rsi
   14003a2d4:	mov    rcx,rdi
   14003a2d7:	call   rbx
   14003a2d9:	jmp    0x14003a30e
   14003a2db:	test   r8,r8
   14003a2de:	jne    0x14003a2fc
   14003a2e0:	mov    rax,QWORD PTR [rcx]
   14003a2e3:	mov    rbx,QWORD PTR [rax+0x8]
   14003a2e7:	mov    rcx,rbx
   14003a2ea:	call   QWORD PTR [rip+0x3438]        # 0x14003d728
   14003a2f0:	mov    rdx,rbp
   14003a2f3:	mov    rcx,rdi
   14003a2f6:	call   rbx
   14003a2f8:	xor    eax,eax
   14003a2fa:	jmp    0x14003a30e
   14003a2fc:	mov    rcx,QWORD PTR [rcx+0x8]
   14003a300:	mov    r9,r8
   14003a303:	mov    r8,rdx
   14003a306:	xor    edx,edx
   14003a308:	call   QWORD PTR [rip+0x2eda]        # 0x14003d1e8
   14003a30e:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a313:	mov    rbp,QWORD PTR [rsp+0x38]
   14003a318:	mov    rsi,QWORD PTR [rsp+0x40]
   14003a31d:	add    rsp,0x20
   14003a321:	pop    rdi
   14003a322:	ret    
   14003a323:	int3   
   14003a324:	int3   
   14003a325:	int3   
   14003a326:	int3   
   14003a327:	int3   
   14003a328:	int3   
   14003a329:	int3   
   14003a32a:	int3   
   14003a32b:	int3   
   14003a32c:	int3   
   14003a32d:	int3   
   14003a32e:	int3   
   14003a32f:	int3   
   14003a330:	sub    rsp,0x28
   14003a334:	mov    ecx,0x7f
   14003a339:	call   QWORD PTR [rip+0x2e31]        # 0x14003d170
   14003a33f:	xor    eax,eax
   14003a341:	add    rsp,0x28
   14003a345:	ret    
   14003a346:	int3   
   14003a347:	int3   
   14003a348:	int3   
   14003a349:	int3   
   14003a34a:	int3   
   14003a34b:	int3   
   14003a34c:	test   rcx,rcx
   14003a34f:	sete   al
   14003a352:	ret    
   14003a353:	int3   
   14003a354:	int3   
   14003a355:	int3   
   14003a356:	int3   
   14003a357:	int3   
   14003a358:	int3   
   14003a359:	int3   
   14003a35a:	int3   
   14003a35b:	int3   
   14003a35c:	rex push rbx
   14003a35e:	sub    rsp,0x20
   14003a362:	mov    rbx,rcx
   14003a365:	mov    rcx,QWORD PTR [rcx]
   14003a368:	test   rcx,rcx
   14003a36b:	je     0x14003a377
   14003a36d:	call   QWORD PTR [rip+0x2e35]        # 0x14003d1a8
   14003a373:	and    QWORD PTR [rbx],0x0
   14003a377:	add    rsp,0x20
   14003a37b:	pop    rbx
   14003a37c:	ret    
   14003a37d:	int3   
   14003a37e:	int3   
   14003a37f:	int3   
   14003a380:	int3   
   14003a381:	int3   
   14003a382:	int3   
   14003a383:	int3   
   14003a384:	sub    rsp,0x28
   14003a388:	test   edx,edx
   14003a38a:	js     0x14003a3a0
   14003a38c:	cmp    edx,DWORD PTR [rcx+0x8]
   14003a38f:	jge    0x14003a3a0
   14003a391:	mov    rax,QWORD PTR [rcx]
   14003a394:	movsxd rdx,edx
   14003a397:	lea    rax,[rax+rdx*4]
   14003a39b:	add    rsp,0x28
   14003a39f:	ret    
   14003a3a0:	xor    r9d,r9d
   14003a3a3:	xor    r8d,r8d
   14003a3a6:	mov    ecx,0xc000008c
   14003a3ab:	lea    edx,[r9+0x1]
   14003a3af:	call   QWORD PTR [rip+0x2dc3]        # 0x14003d178
   14003a3b5:	int3   
   14003a3b6:	int3   
   14003a3b7:	int3   
   14003a3b8:	int3   
   14003a3b9:	int3   
   14003a3ba:	int3   
   14003a3bb:	int3   
   14003a3bc:	mov    QWORD PTR [rsp+0x8],rbx
   14003a3c1:	mov    QWORD PTR [rsp+0x10],rsi
   14003a3c6:	push   rdi
   14003a3c7:	sub    rsp,0x20
   14003a3cb:	mov    edi,DWORD PTR [rcx+0x8]
   14003a3ce:	mov    rsi,rdx
   14003a3d1:	mov    rbx,rcx
   14003a3d4:	cmp    edi,DWORD PTR [rcx+0xc]
   14003a3d7:	jne    0x14003a410
   14003a3d9:	cmp    DWORD PTR [rcx+0xc],0x0
   14003a3dd:	jne    0x14003a3e6
   14003a3df:	mov    edi,0x1
   14003a3e4:	jmp    0x14003a3ea
   14003a3e6:	add    edi,edi
   14003a3e8:	js     0x14003a43d
   14003a3ea:	movsxd rdx,edi
   14003a3ed:	cmp    rdx,0x1fffffff
   14003a3f4:	ja     0x14003a43d
   14003a3f6:	mov    rcx,QWORD PTR [rcx]
   14003a3f9:	mov    r8d,0x4
   14003a3ff:	call   QWORD PTR [rip+0x13bfb]        # 0x14004e000
   14003a405:	test   rax,rax
   14003a408:	je     0x14003a43d
   14003a40a:	mov    DWORD PTR [rbx+0xc],edi
   14003a40d:	mov    QWORD PTR [rbx],rax
   14003a410:	movsxd rdx,DWORD PTR [rbx+0x8]
   14003a414:	mov    rcx,QWORD PTR [rbx]
   14003a417:	lea    r8,[rcx+rdx*4]
   14003a41b:	test   r8,r8
   14003a41e:	je     0x14003a425
   14003a420:	mov    ecx,DWORD PTR [rsi]
   14003a422:	mov    DWORD PTR [r8],ecx
   14003a425:	inc    DWORD PTR [rbx+0x8]
   14003a428:	mov    eax,0x1
   14003a42d:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a432:	mov    rsi,QWORD PTR [rsp+0x38]
   14003a437:	add    rsp,0x20
   14003a43b:	pop    rdi
   14003a43c:	ret    
   14003a43d:	xor    eax,eax
   14003a43f:	jmp    0x14003a42d
   14003a441:	int3   
   14003a442:	int3   
   14003a443:	int3   
   14003a444:	int3   
   14003a445:	int3   
   14003a446:	int3   
   14003a447:	int3   
   14003a448:	movsxd r8,DWORD PTR [rcx+0x8]
   14003a44c:	xor    eax,eax
   14003a44e:	test   r8d,r8d
   14003a451:	jle    0x14003a46e
   14003a453:	mov    r9d,DWORD PTR [rdx]
   14003a456:	mov    edx,eax
   14003a458:	mov    rcx,QWORD PTR [rcx]
   14003a45b:	cmp    DWORD PTR [rcx],r9d
   14003a45e:	je     0x14003a471
   14003a460:	inc    eax
   14003a462:	inc    rdx
   14003a465:	add    rcx,0x4
   14003a469:	cmp    rdx,r8
   14003a46c:	jl     0x14003a45b
   14003a46e:	or     eax,0xffffffff
   14003a471:	ret    
   14003a472:	int3   
   14003a473:	int3   
   14003a474:	int3   
   14003a475:	int3   
   14003a476:	int3   
   14003a477:	int3   
   14003a478:	mov    QWORD PTR [rsp+0x8],rbx
   14003a47d:	push   rdi
   14003a47e:	sub    rsp,0x20
   14003a482:	mov    rbx,rcx
   14003a485:	mov    edi,edx
   14003a487:	mov    rcx,QWORD PTR [rcx]
   14003a48a:	test   rcx,rcx
   14003a48d:	je     0x14003a498
   14003a48f:	call   0x140013de0
   14003a494:	and    QWORD PTR [rbx],0x0
   14003a498:	mov    rcx,rbx
   14003a49b:	mov    DWORD PTR [rbx+0x10],edi
   14003a49e:	call   0x140005ca8
   14003a4a3:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a4a8:	mov    al,0x1
   14003a4aa:	add    rsp,0x20
   14003a4ae:	pop    rdi
   14003a4af:	ret    
   14003a4b0:	int3   
   14003a4b1:	int3   
   14003a4b2:	int3   
   14003a4b3:	int3   
   14003a4b4:	int3   
   14003a4b5:	int3   
   14003a4b6:	int3   
   14003a4b7:	int3   
   14003a4b8:	int3   
   14003a4b9:	int3   
   14003a4ba:	int3   
   14003a4bb:	int3   
   14003a4bc:	int3   
   14003a4bd:	int3   
   14003a4be:	int3   
   14003a4bf:	int3   
   14003a4c0:	test   rcx,rcx
   14003a4c3:	je     0x14003a4da
   14003a4c5:	test   rdx,rdx
   14003a4c8:	jne    0x14003a4da
   14003a4ca:	mov    eax,DWORD PTR [rdx]
   14003a4cc:	cmp    DWORD PTR [rcx],eax
   14003a4ce:	jle    0x14003a4d4
   14003a4d0:	lea    eax,[rdx+0x1]
   14003a4d3:	ret    
   14003a4d4:	jge    0x14003a4da
   14003a4d6:	or     eax,0xffffffff
   14003a4d9:	ret    
   14003a4da:	xor    eax,eax
   14003a4dc:	ret    
   14003a4dd:	int3   
   14003a4de:	int3   
   14003a4df:	int3   
   14003a4e0:	int3   
   14003a4e1:	int3   
   14003a4e2:	int3   
   14003a4e3:	int3   
   14003a4e4:	xorps  xmm1,xmm1
   14003a4e7:	cvtsi2sd xmm1,rdx
   14003a4ec:	test   rdx,rdx
   14003a4ef:	jns    0x14003a4f9
   14003a4f1:	addsd  xmm1,QWORD PTR [rip+0x73e7]        # 0x1400418e0
   14003a4f9:	movss  xmm0,DWORD PTR [rcx+0x14]
   14003a4fe:	xor    eax,eax
   14003a500:	cvtps2pd xmm0,xmm0
   14003a503:	divsd  xmm1,xmm0
   14003a507:	movsd  xmm0,QWORD PTR [rip+0x74d9]        # 0x1400419e8
   14003a50f:	comisd xmm1,xmm0
   14003a513:	jb     0x14003a52c
   14003a515:	subsd  xmm1,xmm0
   14003a519:	comisd xmm1,xmm0
   14003a51d:	jae    0x14003a52c
   14003a51f:	movabs rcx,0x8000000000000000
   14003a529:	mov    rax,rcx
   14003a52c:	cvttsd2si rcx,xmm1
   14003a531:	mov    r8d,0xffffffff
   14003a537:	lea    r9,[rip+0x73b2]        # 0x1400418f0
   14003a53e:	add    rcx,rax
   14003a541:	xor    eax,eax
   14003a543:	cmp    rcx,r8
   14003a546:	jbe    0x14003a54d
   14003a548:	mov    ecx,r8d
   14003a54b:	jmp    0x14003a552
   14003a54d:	cmp    ecx,0x11
   14003a550:	jbe    0x14003a55f
   14003a552:	mov    rdx,r9
   14003a555:	inc    eax
   14003a557:	lea    rdx,[rdx+0x4]
   14003a55b:	cmp    ecx,DWORD PTR [rdx]
   14003a55d:	ja     0x14003a555
   14003a55f:	cdqe   
   14003a561:	mov    eax,DWORD PTR [r9+rax*4]
   14003a565:	cmp    eax,r8d
   14003a568:	cmove  eax,ecx
   14003a56b:	ret    
   14003a56c:	int3   
   14003a56d:	int3   
   14003a56e:	int3   
   14003a56f:	int3   
   14003a570:	int3   
   14003a571:	int3   
   14003a572:	int3   
   14003a573:	int3   
   14003a574:	mov    DWORD PTR [rsp+0x10],edx
   14003a578:	mov    QWORD PTR [rsp+0x8],rcx
   14003a57d:	push   rbx
   14003a57e:	push   rsi
   14003a57f:	push   rdi
   14003a580:	sub    rsp,0x30
   14003a584:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003a58d:	mov    edi,edx
   14003a58f:	mov    rbx,rcx
   14003a592:	and    QWORD PTR [rsp+0x60],0x0
   14003a598:	test   edx,edx
   14003a59a:	jne    0x14003a5ab
   14003a59c:	mov    rdx,QWORD PTR [rcx+0x8]
   14003a5a0:	call   0x14003a4e4
   14003a5a5:	mov    edi,eax
   14003a5a7:	mov    DWORD PTR [rsp+0x58],eax
   14003a5ab:	cmp    edi,DWORD PTR [rbx+0x10]
   14003a5ae:	je     0x14003a673
   14003a5b4:	cmp    QWORD PTR [rbx],0x0
   14003a5b8:	jne    0x14003a5c9
   14003a5ba:	mov    edx,edi
   14003a5bc:	mov    rcx,rbx
   14003a5bf:	call   0x14003a478
   14003a5c4:	jmp    0x14003a673
   14003a5c9:	mov    ecx,edi
   14003a5cb:	mov    eax,0x8
   14003a5d0:	mul    rcx
   14003a5d3:	mov    rcx,0xffffffffffffffff
   14003a5da:	cmovo  rax,rcx
   14003a5de:	mov    rcx,rax
   14003a5e1:	call   0x140013dd4
   14003a5e6:	mov    rsi,rax
   14003a5e9:	mov    QWORD PTR [rsp+0x60],rax
   14003a5ee:	jmp    0x14003a5fe
   14003a5f0:	mov    rbx,QWORD PTR [rsp+0x50]
   14003a5f5:	mov    edi,DWORD PTR [rsp+0x58]
   14003a5f9:	mov    rsi,QWORD PTR [rsp+0x60]
   14003a5fe:	test   rsi,rsi
   14003a601:	jne    0x14003a60e
   14003a603:	mov    ecx,0x8007000e
   14003a608:	call   0x1400152fc
   14003a60d:	int3   
   14003a60e:	mov    r8d,edi
   14003a611:	shl    r8,0x3
   14003a615:	xor    edx,edx
   14003a617:	mov    rcx,rsi
   14003a61a:	call   0x140014694
   14003a61f:	xor    r9d,r9d
   14003a622:	cmp    DWORD PTR [rbx+0x10],r9d
   14003a626:	jbe    0x14003a65d
   14003a628:	mov    rax,QWORD PTR [rbx]
   14003a62b:	mov    r10,QWORD PTR [rax+r9*8]
   14003a62f:	test   r10,r10
   14003a632:	je     0x14003a654
   14003a634:	mov    r8,QWORD PTR [r10+0x8]
   14003a638:	xor    edx,edx
   14003a63a:	mov    eax,DWORD PTR [r10+0x10]
   14003a63e:	div    edi
   14003a640:	mov    rax,QWORD PTR [rsi+rdx*8]
   14003a644:	mov    QWORD PTR [r10+0x8],rax
   14003a648:	mov    QWORD PTR [rsi+rdx*8],r10
   14003a64c:	mov    r10,r8
   14003a64f:	test   r8,r8
   14003a652:	jne    0x14003a634
   14003a654:	inc    r9d
   14003a657:	cmp    r9d,DWORD PTR [rbx+0x10]
   14003a65b:	jb     0x14003a628
   14003a65d:	mov    rcx,QWORD PTR [rbx]
   14003a660:	call   0x140013de0
   14003a665:	mov    QWORD PTR [rbx],rsi
   14003a668:	mov    DWORD PTR [rbx+0x10],edi
   14003a66b:	mov    rcx,rbx
   14003a66e:	call   0x140005ca8
   14003a673:	add    rsp,0x30
   14003a677:	pop    rdi
   14003a678:	pop    rsi
   14003a679:	pop    rbx
   14003a67a:	ret    
   14003a67b:	mov    QWORD PTR [rsp+0x10],rdx
   14003a680:	push   rbp
   14003a681:	sub    rsp,0x20
   14003a685:	mov    rbp,rdx
   14003a688:	lea    rax,[rip+0xffffffffffffff61]        # 0x14003a5f0
   14003a68f:	add    rsp,0x20
   14003a693:	pop    rbp
   14003a694:	ret    
   14003a695:	int3   
   14003a696:	int3   
   14003a697:	int3   
   14003a698:	int3   
   14003a699:	int3   
   14003a69a:	int3   
   14003a69b:	int3   
   14003a69c:	rex push rbx
   14003a69e:	sub    rsp,0x20
   14003a6a2:	mov    rbx,rcx
   14003a6a5:	test   edx,edx
   14003a6a7:	js     0x14003a726
   14003a6a9:	mov    r10d,DWORD PTR [rcx+0x8]
   14003a6ad:	cmp    edx,r10d
   14003a6b0:	jge    0x14003a726
   14003a6b2:	lea    eax,[r10-0x1]
   14003a6b6:	cmp    edx,eax
   14003a6b8:	je     0x14003a71c
   14003a6ba:	sub    r10d,edx
   14003a6bd:	movsxd rcx,edx
   14003a6c0:	movsxd rdx,r10d
   14003a6c3:	shl    rdx,0x2
   14003a6c7:	lea    eax,[r10-0x1]
   14003a6cb:	movsxd r9,eax
   14003a6ce:	mov    rax,QWORD PTR [rbx]
   14003a6d1:	shl    r9,0x2
   14003a6d5:	lea    rcx,[rax+rcx*4]
   14003a6d9:	lea    r8,[rcx+0x4]
   14003a6dd:	call   QWORD PTR [rip+0x2f45]        # 0x14003d628
   14003a6e3:	test   eax,eax
   14003a6e5:	je     0x14003a71c
   14003a6e7:	cmp    eax,0xc
   14003a6ea:	je     0x14003a711
   14003a6ec:	cmp    eax,0x16
   14003a6ef:	je     0x14003a706
   14003a6f1:	cmp    eax,0x22
   14003a6f4:	je     0x14003a706
   14003a6f6:	cmp    eax,0x50
   14003a6f9:	je     0x14003a71c
   14003a6fb:	mov    ecx,0x80004005
   14003a700:	call   0x1400152fc
   14003a705:	int3   
   14003a706:	mov    ecx,0x80070057
   14003a70b:	call   0x1400152fc
   14003a710:	int3   
   14003a711:	mov    ecx,0x8007000e
   14003a716:	call   0x1400152fc
   14003a71b:	int3   
   14003a71c:	dec    DWORD PTR [rbx+0x8]
   14003a71f:	mov    eax,0x1
   14003a724:	jmp    0x14003a728
   14003a726:	xor    eax,eax
   14003a728:	add    rsp,0x20
   14003a72c:	pop    rbx
   14003a72d:	ret    
   14003a72e:	int3   
   14003a72f:	int3   
   14003a730:	int3   
   14003a731:	int3   
   14003a732:	int3   
   14003a733:	int3   
   14003a734:	mov    QWORD PTR [rsp+0x8],rbx
   14003a739:	xor    r11d,r11d
   14003a73c:	lea    rax,[rdx-0x1]
   14003a740:	cmp    rax,0x7ffffffe
   14003a746:	mov    r10d,r11d
   14003a749:	mov    ebx,0x80070057
   14003a74e:	cmova  r10d,ebx
   14003a752:	test   r10d,r10d
   14003a755:	js     0x14003a7a4
   14003a757:	cmp    r9,0x7ffffffe
   14003a75e:	jbe    0x14003a765
   14003a760:	mov    r10d,ebx
   14003a763:	jmp    0x14003a7a9
   14003a765:	mov    r10d,r11d
   14003a768:	test   rdx,rdx
   14003a76b:	je     0x14003a798
   14003a76d:	sub    r9,rdx
   14003a770:	sub    r8,rcx
   14003a773:	lea    rax,[r9+rdx*1]
   14003a777:	test   rax,rax
   14003a77a:	je     0x14003a793
   14003a77c:	movzx  eax,WORD PTR [r8+rcx*1]
   14003a781:	test   ax,ax
   14003a784:	je     0x14003a793
   14003a786:	mov    WORD PTR [rcx],ax
   14003a789:	add    rcx,0x2
   14003a78d:	sub    rdx,0x1
   14003a791:	jne    0x14003a773
   14003a793:	test   rdx,rdx
   14003a796:	jne    0x14003a7a9
   14003a798:	sub    rcx,0x2
   14003a79c:	mov    r10d,0x8007007a
   14003a7a2:	jmp    0x14003a7a9
   14003a7a4:	test   rdx,rdx
   14003a7a7:	je     0x14003a7ad
   14003a7a9:	mov    WORD PTR [rcx],r11w
   14003a7ad:	mov    rbx,QWORD PTR [rsp+0x8]
   14003a7b2:	mov    eax,r10d
   14003a7b5:	ret    
   14003a7b6:	int3   
   14003a7b7:	int3   
   14003a7b8:	int3   
   14003a7b9:	int3   
   14003a7ba:	int3   
   14003a7bb:	int3   
   14003a7bc:	mov    QWORD PTR [rsp+0x20],r9
   14003a7c1:	mov    BYTE PTR [rsp+0x18],r8b
   14003a7c6:	mov    QWORD PTR [rsp+0x8],rcx
   14003a7cb:	push   rbp
   14003a7cc:	push   rbx
   14003a7cd:	push   rsi
   14003a7ce:	push   rdi
   14003a7cf:	push   r12
   14003a7d1:	push   r13
   14003a7d3:	push   r14
   14003a7d5:	push   r15
   14003a7d7:	mov    rbp,rsp
   14003a7da:	sub    rsp,0x68
   14003a7de:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   14003a7e6:	mov    r13,r9
   14003a7e9:	mov    r14,rdx
   14003a7ec:	mov    rbx,rcx
   14003a7ef:	lea    rcx,[rbp-0x30]
   14003a7f3:	call   0x14002a10c
   14003a7f8:	nop
   14003a7f9:	mov    rcx,rbx
   14003a7fc:	call   QWORD PTR [rip+0x1880e]        # 0x140053010
   14003a802:	xor    edi,edi
   14003a804:	test   eax,eax
   14003a806:	setne  al
   14003a809:	mov    BYTE PTR [r13+0x0],al
   14003a80d:	mov    r12d,edi
   14003a810:	lea    esi,[rdi+0x1]
   14003a813:	lea    r15d,[rdi+0x7c]
   14003a817:	cmp    DWORD PTR [r14+0x8],edi
   14003a81b:	jbe    0x14003a929
   14003a821:	mov    rbx,QWORD PTR [rbp-0x30]
   14003a825:	mov    ecx,esi
   14003a827:	mov    r13d,DWORD PTR [rbx-0x10]
   14003a82b:	mov    eax,DWORD PTR [rbx-0xc]
   14003a82e:	sub    ecx,DWORD PTR [rbx-0x8]
   14003a831:	lea    r15d,[r13+0x1]
   14003a835:	sub    eax,r15d
   14003a838:	test   r12d,r12d
   14003a83b:	je     0x14003a858
   14003a83d:	or     eax,ecx
   14003a83f:	jge    0x14003a851
   14003a841:	mov    edx,r15d
   14003a844:	lea    rcx,[rbp-0x30]
   14003a848:	call   0x1400076e0
   14003a84d:	mov    rbx,QWORD PTR [rbp-0x30]
   14003a851:	mov    ecx,0x7c
   14003a856:	jmp    0x14003a871
   14003a858:	or     eax,ecx
   14003a85a:	jge    0x14003a86c
   14003a85c:	mov    edx,r15d
   14003a85f:	lea    rcx,[rbp-0x30]
   14003a863:	call   0x1400076e0
   14003a868:	mov    rbx,QWORD PTR [rbp-0x30]
   14003a86c:	mov    ecx,0x28
   14003a871:	mov    WORD PTR [rbx+r13*2],cx
   14003a876:	mov    edx,r15d
   14003a879:	lea    rcx,[rbp-0x30]
   14003a87d:	call   0x14002db08
   14003a882:	mov    edx,r12d
   14003a885:	mov    rcx,r14
   14003a888:	call   0x14003a384
   14003a88d:	mov    edx,DWORD PTR [rax]
   14003a88f:	call   0x14003b950
   14003a894:	mov    DWORD PTR [rbp+0x50],eax
   14003a897:	lea    rax,[rbp-0x18]
   14003a89b:	mov    QWORD PTR [rsp+0x20],rax
   14003a8a0:	lea    r9,[rbp-0x38]
   14003a8a4:	lea    r8,[rbp-0x34]
   14003a8a8:	lea    rdx,[rbp+0x50]
   14003a8ac:	call   0x14002a3a0
   14003a8b1:	test   rax,rax
   14003a8b4:	je     0x14003a8d2
   14003a8b6:	lea    rdx,[rax+0x8]
   14003a8ba:	lea    rcx,[rbp-0x28]
   14003a8be:	call   0x14002a16c
   14003a8c3:	mov    r15,QWORD PTR [rbp-0x28]
   14003a8c7:	lea    rcx,[r15-0x18]
   14003a8cb:	call   0x14002a074
   14003a8d0:	jmp    0x14003a8d5
   14003a8d2:	mov    r15,rdi
   14003a8d5:	test   r15,r15
   14003a8d8:	je     0x14003a91f
   14003a8da:	lea    rdx,[rip+0xaf7b]        # 0x14004585c
   14003a8e1:	lea    rcx,[rbp-0x30]
   14003a8e5:	call   0x140038f74
   14003a8ea:	mov    rdx,r15
   14003a8ed:	lea    rcx,[rbp-0x30]
   14003a8f1:	call   0x140038f74
   14003a8f6:	lea    rdx,[rip+0xaf67]        # 0x140045864
   14003a8fd:	lea    rcx,[rbp-0x30]
   14003a901:	call   0x140038f74
   14003a906:	add    r12d,esi
   14003a909:	cmp    r12d,DWORD PTR [r14+0x8]
   14003a90d:	jb     0x14003a821
   14003a913:	mov    r13,QWORD PTR [rbp+0x60]
   14003a917:	mov    r15d,0x7c
   14003a91d:	jmp    0x14003a929
   14003a91f:	mov    edi,0x80004005
   14003a924:	jmp    0x14003ac65
   14003a929:	cmp    BYTE PTR [r13+0x0],dil
   14003a92d:	jne    0x14003a9f3
   14003a933:	cmp    DWORD PTR [r14+0x8],0x3
   14003a938:	jne    0x14003a9f3
   14003a93e:	cmp    BYTE PTR [r14+0x11],dil
   14003a942:	je     0x14003a9f3
   14003a948:	xor    edx,edx
   14003a94a:	mov    rcx,r14
   14003a94d:	call   0x14003a384
   14003a952:	cmp    DWORD PTR [rax],esi
   14003a954:	jne    0x14003a9f3
   14003a95a:	mov    edx,esi
   14003a95c:	mov    rcx,r14
   14003a95f:	call   0x14003a384
   14003a964:	mov    edx,0x2
   14003a969:	cmp    DWORD PTR [rax],edx
   14003a96b:	jne    0x14003a9f3
   14003a971:	mov    rcx,r14
   14003a974:	call   0x14003a384
   14003a979:	cmp    DWORD PTR [rax],0x3
   14003a97c:	jne    0x14003a9f3
   14003a97e:	mov    rax,QWORD PTR [rbp-0x30]
   14003a982:	mov    r15d,DWORD PTR [rax-0x10]
   14003a986:	lea    ebx,[r15+0x1]
   14003a98a:	mov    r8d,esi
   14003a98d:	sub    r8d,DWORD PTR [rax-0x8]
   14003a991:	mov    ecx,DWORD PTR [rax-0xc]
   14003a994:	sub    ecx,ebx
   14003a996:	or     ecx,r8d
   14003a999:	jge    0x14003a9aa
   14003a99b:	mov    edx,ebx
   14003a99d:	lea    rcx,[rbp-0x30]
   14003a9a1:	call   0x1400076e0
   14003a9a6:	mov    rax,QWORD PTR [rbp-0x30]
   14003a9aa:	mov    rcx,r15
   14003a9ad:	mov    r15d,0x7c
   14003a9b3:	mov    WORD PTR [rax+rcx*2],r15w
   14003a9b8:	mov    edx,ebx
   14003a9ba:	lea    rcx,[rbp-0x30]
   14003a9be:	call   0x14002db08
   14003a9c3:	lea    rdx,[rip+0xae92]        # 0x14004585c
   14003a9ca:	lea    rcx,[rbp-0x30]
   14003a9ce:	call   0x140038f74
   14003a9d3:	lea    rdx,[rip+0xae8e]        # 0x140045868
   14003a9da:	lea    rcx,[rbp-0x30]
   14003a9de:	call   0x140038f74
   14003a9e3:	lea    rdx,[rip+0xae7a]        # 0x140045864
   14003a9ea:	lea    rcx,[rbp-0x30]
   14003a9ee:	call   0x140038f74
   14003a9f3:	cmp    BYTE PTR [rbp+0x58],dil
   14003a9f7:	je     0x14003aaa7
   14003a9fd:	cmp    DWORD PTR [r14+0x8],esi
   14003aa01:	jne    0x14003aa15
   14003aa03:	xor    edx,edx
   14003aa05:	mov    rcx,r14
   14003aa08:	call   0x14003a384
   14003aa0d:	cmp    DWORD PTR [rax],edi
   14003aa0f:	je     0x14003aaa7
   14003aa15:	mov    rax,QWORD PTR [rbp-0x30]
   14003aa19:	mov    ebx,DWORD PTR [rax-0x10]
   14003aa1c:	lea    r14d,[rbx+0x1]
   14003aa20:	mov    r8d,esi
   14003aa23:	mov    ecx,DWORD PTR [rax-0xc]
   14003aa26:	sub    r8d,DWORD PTR [rax-0x8]
   14003aa2a:	sub    ecx,r14d
   14003aa2d:	test   ebx,ebx
   14003aa2f:	jle    0x14003aa4d
   14003aa31:	or     ecx,r8d
   14003aa34:	jge    0x14003aa46
   14003aa36:	mov    edx,r14d
   14003aa39:	lea    rcx,[rbp-0x30]
   14003aa3d:	call   0x1400076e0
   14003aa42:	mov    rax,QWORD PTR [rbp-0x30]
   14003aa46:	mov    WORD PTR [rax+rbx*2],r15w
   14003aa4b:	jmp    0x14003aa6b
   14003aa4d:	or     ecx,r8d
   14003aa50:	jge    0x14003aa62
   14003aa52:	mov    edx,r14d
   14003aa55:	lea    rcx,[rbp-0x30]
   14003aa59:	call   0x1400076e0
   14003aa5e:	mov    rax,QWORD PTR [rbp-0x30]
   14003aa62:	mov    edx,0x28
   14003aa67:	mov    WORD PTR [rax+rbx*2],dx
   14003aa6b:	mov    edx,r14d
   14003aa6e:	lea    rcx,[rbp-0x30]
   14003aa72:	call   0x14002db08
   14003aa77:	lea    rdx,[rip+0xadde]        # 0x14004585c
   14003aa7e:	lea    rcx,[rbp-0x30]
   14003aa82:	call   0x140038f74
   14003aa87:	lea    rdx,[rip+0xadea]        # 0x140045878
   14003aa8e:	lea    rcx,[rbp-0x30]
   14003aa92:	call   0x140038f74
   14003aa97:	lea    rdx,[rip+0xadc6]        # 0x140045864
   14003aa9e:	lea    rcx,[rbp-0x30]
   14003aaa2:	call   0x140038f74
   14003aaa7:	mov    rbx,QWORD PTR [rbp-0x30]
   14003aaab:	mov    r14d,DWORD PTR [rbx-0x10]
   14003aaaf:	mov    r12d,0x29
   14003aab5:	test   r14d,r14d
   14003aab8:	jle    0x14003aaee
   14003aaba:	lea    r15d,[r14+0x1]
   14003aabe:	mov    ecx,esi
   14003aac0:	sub    ecx,DWORD PTR [rbx-0x8]
   14003aac3:	mov    eax,DWORD PTR [rbx-0xc]
   14003aac6:	sub    eax,r15d
   14003aac9:	or     eax,ecx
   14003aacb:	jge    0x14003aadd
   14003aacd:	mov    edx,r15d
   14003aad0:	lea    rcx,[rbp-0x30]
   14003aad4:	call   0x1400076e0
   14003aad9:	mov    rbx,QWORD PTR [rbp-0x30]
   14003aadd:	mov    WORD PTR [rbx+r14*2],r12w
   14003aae2:	mov    edx,r15d
   14003aae5:	lea    rcx,[rbp-0x30]
   14003aae9:	call   0x14002db08
   14003aaee:	cmp    BYTE PTR [r13+0x0],sil
   14003aaf2:	jne    0x14003ac0f
   14003aaf8:	mov    r14d,DWORD PTR [rbx-0x10]
   14003aafc:	test   r14d,r14d
   14003aaff:	jle    0x14003ab3a
   14003ab01:	lea    r15d,[r14+0x1]
   14003ab05:	mov    ecx,esi
   14003ab07:	sub    ecx,DWORD PTR [rbx-0x8]
   14003ab0a:	mov    eax,DWORD PTR [rbx-0xc]
   14003ab0d:	sub    eax,r15d
   14003ab10:	or     eax,ecx
   14003ab12:	jge    0x14003ab24
   14003ab14:	mov    edx,r15d
   14003ab17:	lea    rcx,[rbp-0x30]
   14003ab1b:	call   0x1400076e0
   14003ab20:	mov    rbx,QWORD PTR [rbp-0x30]
   14003ab24:	mov    ecx,0x7c
   14003ab29:	mov    WORD PTR [rbx+r14*2],cx
   14003ab2e:	mov    edx,r15d
   14003ab31:	lea    rcx,[rbp-0x30]
   14003ab35:	call   0x14002db08
   14003ab3a:	mov    r15d,DWORD PTR [rbx-0x10]
   14003ab3e:	lea    r14d,[r15+0x1]
   14003ab42:	mov    ecx,esi
   14003ab44:	sub    ecx,DWORD PTR [rbx-0x8]
   14003ab47:	mov    eax,DWORD PTR [rbx-0xc]
   14003ab4a:	sub    eax,r14d
   14003ab4d:	or     eax,ecx
   14003ab4f:	jge    0x14003ab61
   14003ab51:	mov    edx,r14d
   14003ab54:	lea    rcx,[rbp-0x30]
   14003ab58:	call   0x1400076e0
   14003ab5d:	mov    rbx,QWORD PTR [rbp-0x30]
   14003ab61:	mov    ecx,0x28
   14003ab66:	mov    WORD PTR [rbx+r15*2],cx
   14003ab6b:	mov    edx,r14d
   14003ab6e:	lea    rcx,[rbp-0x30]
   14003ab72:	call   0x14002db08
   14003ab77:	mov    eax,0x21
   14003ab7c:	mov    r12,QWORD PTR [rbp+0x48]
   14003ab80:	cmp    ax,WORD PTR [r12]
   14003ab85:	jne    0x14003abc4
   14003ab87:	mov    r15d,DWORD PTR [rbx-0x10]
   14003ab8b:	lea    r14d,[r15+0x1]
   14003ab8f:	mov    ecx,esi
   14003ab91:	sub    ecx,DWORD PTR [rbx-0x8]
   14003ab94:	mov    eax,DWORD PTR [rbx-0xc]
   14003ab97:	sub    eax,r14d
   14003ab9a:	or     eax,ecx
   14003ab9c:	jge    0x14003abae
   14003ab9e:	mov    edx,r14d
   14003aba1:	lea    rcx,[rbp-0x30]
   14003aba5:	call   0x1400076e0
   14003abaa:	mov    rbx,QWORD PTR [rbp-0x30]
   14003abae:	mov    ecx,0x5c
   14003abb3:	mov    WORD PTR [rbx+r15*2],cx
   14003abb8:	mov    edx,r14d
   14003abbb:	lea    rcx,[rbp-0x30]
   14003abbf:	call   0x14002db08
   14003abc4:	mov    rdx,r12
   14003abc7:	lea    rcx,[rbp-0x30]
   14003abcb:	call   0x140038f74
   14003abd0:	mov    rbx,QWORD PTR [rbp-0x30]
   14003abd4:	mov    r15d,DWORD PTR [rbx-0x10]
   14003abd8:	lea    r14d,[r15+0x1]
   14003abdc:	sub    esi,DWORD PTR [rbx-0x8]
   14003abdf:	mov    eax,DWORD PTR [rbx-0xc]
   14003abe2:	sub    eax,r14d
   14003abe5:	or     eax,esi
   14003abe7:	jge    0x14003abf9
   14003abe9:	mov    edx,r14d
   14003abec:	lea    rcx,[rbp-0x30]
   14003abf0:	call   0x1400076e0
   14003abf5:	mov    rbx,QWORD PTR [rbp-0x30]
   14003abf9:	mov    ecx,0x29
   14003abfe:	mov    WORD PTR [rbx+r15*2],cx
   14003ac03:	mov    edx,r14d
   14003ac06:	lea    rcx,[rbp-0x30]
   14003ac0a:	call   0x14002db08
   14003ac0f:	cmp    DWORD PTR [rbx-0x10],edi
   14003ac12:	jne    0x14003ac48
   14003ac14:	lea    rdx,[rip+0xac41]        # 0x14004585c
   14003ac1b:	lea    rcx,[rbp-0x30]
   14003ac1f:	call   0x140038f74
   14003ac24:	lea    rdx,[rip+0x377d]        # 0x14003e3a8
   14003ac2b:	lea    rcx,[rbp-0x30]
   14003ac2f:	call   0x140038f74
   14003ac34:	lea    rdx,[rip+0xac29]        # 0x140045864
   14003ac3b:	lea    rcx,[rbp-0x30]
   14003ac3f:	call   0x140038f74
   14003ac44:	mov    rbx,QWORD PTR [rbp-0x30]
   14003ac48:	mov    edx,DWORD PTR [rbx-0x10]
   14003ac4b:	mov    rcx,rbx
   14003ac4e:	call   QWORD PTR [rip+0x18414]        # 0x140053068
   14003ac54:	mov    rcx,QWORD PTR [rbp+0x68]
   14003ac58:	mov    QWORD PTR [rcx],rax
   14003ac5b:	test   rax,rax
   14003ac5e:	jne    0x14003ac65
   14003ac60:	mov    edi,0x8007000e
   14003ac65:	lea    rcx,[rbx-0x18]
   14003ac69:	call   0x14002a074
   14003ac6e:	mov    eax,edi
   14003ac70:	add    rsp,0x68
   14003ac74:	pop    r15
   14003ac76:	pop    r14
   14003ac78:	pop    r13
   14003ac7a:	pop    r12
   14003ac7c:	pop    rdi
   14003ac7d:	pop    rsi
   14003ac7e:	pop    rbx
   14003ac7f:	pop    rbp
   14003ac80:	ret    
   14003ac81:	lea    rcx,[rdx+0x38]
   14003ac88:	jmp    0x14002a0f8
   14003ac8d:	int3   
   14003ac8e:	int3   
   14003ac8f:	int3   
   14003ac90:	int3   
   14003ac91:	int3   
   14003ac92:	int3   
   14003ac93:	int3   
   14003ac94:	xor    r10d,r10d
   14003ac97:	test   r8b,r8b
   14003ac9a:	je     0x14003acb4
   14003ac9c:	cmp    DWORD PTR [rcx+0x8],0x1
   14003aca0:	jne    0x14003acb4
   14003aca2:	mov    rax,QWORD PTR [rcx]
   14003aca5:	cmp    DWORD PTR [rax],r10d
   14003aca8:	jne    0x14003acb4
   14003acaa:	test   dl,dl
   14003acac:	jne    0x14003acb4
   14003acae:	and    DWORD PTR [r9],0xfffffff4
   14003acb2:	jmp    0x14003ad0b
   14003acb4:	cmp    DWORD PTR [rcx+0x8],r10d
   14003acb8:	je     0x14003acc0
   14003acba:	cmp    BYTE PTR [rcx+0x13],r10b
   14003acbe:	je     0x14003accf
   14003acc0:	test   r8b,r8b
   14003acc3:	jne    0x14003accf
   14003acc5:	test   dl,dl
   14003acc7:	jne    0x14003accf
   14003acc9:	and    DWORD PTR [r9],0xfffffffe
   14003accd:	jmp    0x14003acd3
   14003accf:	or     DWORD PTR [r9],0x1
   14003acd3:	cmp    BYTE PTR [rcx+0x12],r10b
   14003acd7:	jne    0x14003acee
   14003acd9:	cmp    DWORD PTR [rcx+0x8],r10d
   14003acdd:	jne    0x14003ace8
   14003acdf:	test   r8b,r8b
   14003ace2:	jne    0x14003ace8
   14003ace4:	test   dl,dl
   14003ace6:	je     0x14003acee
   14003ace8:	or     DWORD PTR [r9],0x2
   14003acec:	jmp    0x14003acf2
   14003acee:	and    DWORD PTR [r9],0xfffffffd
   14003acf2:	cmp    BYTE PTR [rcx+0x14],r10b
   14003acf6:	jne    0x14003ad07
   14003acf8:	test   r8b,r8b
   14003acfb:	jne    0x14003ad07
   14003acfd:	test   dl,dl
   14003acff:	jne    0x14003ad07
   14003ad01:	and    DWORD PTR [r9],0xfffffff7
   14003ad05:	jmp    0x14003ad0b
   14003ad07:	or     DWORD PTR [r9],0x9
   14003ad0b:	xor    eax,eax
   14003ad0d:	ret    
   14003ad0e:	int3   
   14003ad0f:	int3   
   14003ad10:	int3   
   14003ad11:	int3   
   14003ad12:	int3   
   14003ad13:	int3   
   14003ad14:	mov    QWORD PTR [rsp+0x8],rbx
   14003ad19:	mov    QWORD PTR [rsp+0x18],r8
   14003ad1e:	push   rbp
   14003ad1f:	push   rsi
   14003ad20:	push   rdi
   14003ad21:	push   r12
   14003ad23:	push   r13
   14003ad25:	push   r14
   14003ad27:	push   r15
   14003ad29:	sub    rsp,0x30
   14003ad2d:	mov    ebp,edx
   14003ad2f:	xor    ebx,ebx
   14003ad31:	imul   edx,edx,0xf
   14003ad34:	mov    r13,r9
   14003ad37:	mov    r14,rcx
   14003ad3a:	mov    BYTE PTR [r9],bl
   14003ad3d:	inc    edx
   14003ad3f:	test   ebp,ebp
   14003ad41:	jne    0x14003ad4a
   14003ad43:	xor    eax,eax
   14003ad45:	jmp    0x14003ae56
   14003ad4a:	cmp    edx,ebp
   14003ad4c:	jae    0x14003ad58
   14003ad4e:	mov    ebx,0x80004005
   14003ad53:	jmp    0x14003ae54
   14003ad58:	test   rcx,rcx
   14003ad5b:	jne    0x14003ad67
   14003ad5d:	mov    ebx,0x80070057
   14003ad62:	jmp    0x14003ae54
   14003ad67:	xor    ecx,ecx
   14003ad69:	call   QWORD PTR [rip+0x182f9]        # 0x140053068
   14003ad6f:	mov    QWORD PTR [rsp+0x88],rax
   14003ad77:	mov    rdi,rax
   14003ad7a:	test   rax,rax
   14003ad7d:	jne    0x14003ad89
   14003ad7f:	mov    ebx,0x8007000e
   14003ad84:	jmp    0x14003ae54
   14003ad89:	mov    rcx,rax
   14003ad8c:	call   QWORD PTR [rip+0x1827e]        # 0x140053010
   14003ad92:	xor    esi,esi
   14003ad94:	xor    r12d,r12d
   14003ad97:	mov    DWORD PTR [rsp+0x78],eax
   14003ad9b:	test   ebp,ebp
   14003ad9d:	je     0x14003ae46
   14003ada3:	mov    rcx,QWORD PTR [r14]
   14003ada6:	call   QWORD PTR [rip+0x18264]        # 0x140053010
   14003adac:	mov    r15d,eax
   14003adaf:	dec    eax
   14003adb1:	cmp    eax,0xff
   14003adb6:	ja     0x14003ae0c
   14003adb8:	lea    rax,[rsp+0x88]
   14003adc0:	inc    r15d
   14003adc3:	mov    QWORD PTR [rsp+0x28],rax
   14003adc8:	mov    r9d,r12d
   14003adcb:	lea    rax,[rsp+0x78]
   14003add0:	mov    r8d,ebp
   14003add3:	mov    edx,esi
   14003add5:	mov    QWORD PTR [rsp+0x20],rax
   14003adda:	mov    ecx,r15d
   14003addd:	call   0x14003b654
   14003ade2:	mov    rdi,QWORD PTR [rsp+0x88]
   14003adea:	mov    ebx,eax
   14003adec:	test   eax,eax
   14003adee:	jne    0x14003ae46
   14003adf0:	mov    edx,DWORD PTR [rsp+0x78]
   14003adf4:	lea    rcx,[rdi+rsi*2]
   14003adf8:	mov    r8,QWORD PTR [r14]
   14003adfb:	sub    edx,esi
   14003adfd:	mov    r9d,r15d
   14003ae00:	call   0x14003a734
   14003ae05:	test   eax,eax
   14003ae07:	js     0x14003ae46
   14003ae09:	add    esi,r15d
   14003ae0c:	inc    r12d
   14003ae0f:	add    r14,0x8
   14003ae13:	cmp    r12d,ebp
   14003ae16:	jb     0x14003ada3
   14003ae18:	test   esi,esi
   14003ae1a:	je     0x14003ae46
   14003ae1c:	mov    edx,esi
   14003ae1e:	mov    BYTE PTR [r13+0x0],0x1
   14003ae23:	mov    rcx,rdi
   14003ae26:	call   QWORD PTR [rip+0x1823c]        # 0x140053068
   14003ae2c:	mov    rcx,QWORD PTR [rsp+0x80]
   14003ae34:	test   rax,rax
   14003ae37:	mov    QWORD PTR [rcx],rax
   14003ae3a:	mov    ecx,ebx
   14003ae3c:	mov    ebx,0x8007000e
   14003ae41:	cmove  ecx,ebx
   14003ae44:	mov    ebx,ecx
   14003ae46:	test   rdi,rdi
   14003ae49:	je     0x14003ae54
   14003ae4b:	mov    rcx,rdi
   14003ae4e:	call   QWORD PTR [rip+0x1826c]        # 0x1400530c0
   14003ae54:	mov    eax,ebx
   14003ae56:	mov    rbx,QWORD PTR [rsp+0x70]
   14003ae5b:	add    rsp,0x30
   14003ae5f:	pop    r15
   14003ae61:	pop    r14
   14003ae63:	pop    r13
   14003ae65:	pop    r12
   14003ae67:	pop    rdi
   14003ae68:	pop    rsi
   14003ae69:	pop    rbp
   14003ae6a:	ret    
   14003ae6b:	int3   
   14003ae6c:	int3   
   14003ae6d:	int3   
   14003ae6e:	int3   
   14003ae6f:	int3   
   14003ae70:	int3   
   14003ae71:	int3   
   14003ae72:	int3   
   14003ae73:	int3   
   14003ae74:	rex push rbp
   14003ae76:	push   rbx
   14003ae77:	push   rsi
   14003ae78:	push   rdi
   14003ae79:	push   r12
   14003ae7b:	push   r13
   14003ae7d:	push   r14
   14003ae7f:	push   r15
   14003ae81:	lea    rbp,[rsp-0x58]
   14003ae86:	sub    rsp,0x158
   14003ae8d:	mov    rax,QWORD PTR [rip+0x1317c]        # 0x14004e010
   14003ae94:	xor    rax,rsp
   14003ae97:	mov    QWORD PTR [rbp+0x40],rax
   14003ae9b:	mov    QWORD PTR [rsp+0x60],r8
   14003aea0:	mov    r13d,edx
   14003aea3:	mov    DWORD PTR [rsp+0x30],edx
   14003aea7:	mov    r14,rcx
   14003aeaa:	mov    QWORD PTR [rsp+0x50],rcx
   14003aeaf:	xor    ebx,ebx
   14003aeb1:	xor    edx,edx
   14003aeb3:	mov    BYTE PTR [r9],bl
   14003aeb6:	mov    r8d,0xc8
   14003aebc:	mov    QWORD PTR [rsp+0x68],r9
   14003aec1:	lea    rcx,[rsp+0x70]
   14003aec6:	mov    esi,ebx
   14003aec8:	call   0x140014694
   14003aecd:	lea    rcx,[rsp+0x70]
   14003aed2:	call   0x14003b360
   14003aed7:	test   eax,eax
   14003aed9:	cmovs  eax,ebx
   14003aedc:	lea    edi,[rax+r13*1]
   14003aee0:	mov    DWORD PTR [rsp+0x3c],edi
   14003aee4:	test   edi,edi
   14003aee6:	je     0x14003b12b
   14003aeec:	test   r13d,r13d
   14003aeef:	je     0x14003af00
   14003aef1:	test   r14,r14
   14003aef4:	jne    0x14003af00
   14003aef6:	mov    esi,0x80070057
   14003aefb:	jmp    0x14003b12b
   14003af00:	imul   edx,edi,0x5a
   14003af03:	inc    edx
   14003af05:	mov    DWORD PTR [rsp+0x34],edx
   14003af09:	cmp    edi,edx
   14003af0b:	jae    0x14003aef6
   14003af0d:	xor    ecx,ecx
   14003af0f:	call   QWORD PTR [rip+0x18153]        # 0x140053068
   14003af15:	mov    QWORD PTR [rsp+0x40],rax
   14003af1a:	mov    r12,rax
   14003af1d:	test   rax,rax
   14003af20:	jne    0x14003af2c
   14003af22:	mov    esi,0x8007000e
   14003af27:	jmp    0x14003b12b
   14003af2c:	mov    DWORD PTR [rsp+0x38],ebx
   14003af30:	mov    r15d,ebx
   14003af33:	mov    eax,ebx
   14003af35:	test   edi,edi
   14003af37:	je     0x14003b11d
   14003af3d:	cmp    eax,r13d
   14003af40:	jae    0x14003af47
   14003af42:	mov    r14,QWORD PTR [r14]
   14003af45:	jmp    0x14003af4f
   14003af47:	sub    eax,r13d
   14003af4a:	mov    r14,QWORD PTR [rsp+rax*8+0x70]
   14003af4f:	mov    rcx,r14
   14003af52:	call   QWORD PTR [rip+0x180b8]        # 0x140053010
   14003af58:	mov    edi,eax
   14003af5a:	test   eax,eax
   14003af5c:	je     0x14003b0cb
   14003af62:	jmp    0x14003af6e
   14003af64:	test   edi,edi
   14003af66:	jle    0x14003af7c
   14003af68:	add    r14,0x2
   14003af6c:	dec    edi
   14003af6e:	movzx  ecx,WORD PTR [r14]
   14003af72:	call   QWORD PTR [rip+0x2668]        # 0x14003d5e0
   14003af78:	test   eax,eax
   14003af7a:	jne    0x14003af64
   14003af7c:	movsxd r13,edi
   14003af7f:	lea    rax,[r13-0x1]
   14003af83:	lea    rax,[r14+rax*2]
   14003af87:	movzx  ecx,WORD PTR [rax]
   14003af8a:	mov    QWORD PTR [rsp+0x48],rax
   14003af8f:	call   QWORD PTR [rip+0x264b]        # 0x14003d5e0
   14003af95:	test   eax,eax
   14003af97:	je     0x14003afc0
   14003af99:	mov    r12,QWORD PTR [rsp+0x48]
   14003af9e:	test   r13,r13
   14003afa1:	jle    0x14003afbb
   14003afa3:	sub    r12,0x2
   14003afa7:	dec    edi
   14003afa9:	dec    r13
   14003afac:	movzx  ecx,WORD PTR [r12]
   14003afb1:	call   QWORD PTR [rip+0x2629]        # 0x14003d5e0
   14003afb7:	test   eax,eax
   14003afb9:	jne    0x14003af9e
   14003afbb:	mov    r12,QWORD PTR [rsp+0x40]
   14003afc0:	test   edi,edi
   14003afc2:	je     0x14003b0c6
   14003afc8:	cmp    edi,0x100
   14003afce:	jg     0x14003b0c6
   14003afd4:	mov    r13d,DWORD PTR [rsp+0x38]
   14003afd9:	lea    rax,[rsp+0x40]
   14003afde:	mov    r8d,DWORD PTR [rsp+0x3c]
   14003afe3:	inc    edi
   14003afe5:	mov    QWORD PTR [rsp+0x28],rax
   14003afea:	mov    r9d,r13d
   14003afed:	lea    rax,[rsp+0x34]
   14003aff2:	mov    edx,r15d
   14003aff5:	mov    ecx,edi
   14003aff7:	mov    QWORD PTR [rsp+0x20],rax
   14003affc:	call   0x14003b654
   14003b001:	mov    esi,eax
   14003b003:	test   eax,eax
   14003b005:	jne    0x14003b34f
   14003b00b:	mov    edx,DWORD PTR [rsp+0x34]
   14003b00f:	lea    eax,[rdi-0x1]
   14003b012:	mov    r12,QWORD PTR [rsp+0x40]
   14003b017:	sub    edx,r15d
   14003b01a:	movsxd r9,eax
   14003b01d:	mov    r8,r14
   14003b020:	mov    eax,r15d
   14003b023:	lea    rcx,[r12+rax*2]
   14003b027:	call   0x14003a734
   14003b02c:	mov    esi,eax
   14003b02e:	test   eax,eax
   14003b030:	js     0x14003b11d
   14003b036:	add    r15d,edi
   14003b039:	lea    rcx,[rip+0xa8e8]        # 0x140045928
   14003b040:	mov    r8d,0x8
   14003b046:	mov    rdx,r14
   14003b049:	lea    eax,[r15-0x1]
   14003b04d:	mov    WORD PTR [r12+rax*2],bx
   14003b052:	call   QWORD PTR [rip+0x25b8]        # 0x14003d610
   14003b058:	test   eax,eax
   14003b05a:	jne    0x14003b161
   14003b060:	sub    edi,0x8
   14003b063:	cmp    edi,0x2
   14003b066:	jl     0x14003b0c6
   14003b068:	mov    r8d,DWORD PTR [rsp+0x3c]
   14003b06d:	lea    rax,[rsp+0x40]
   14003b072:	mov    QWORD PTR [rsp+0x28],rax
   14003b077:	mov    r9d,r13d
   14003b07a:	lea    rax,[rsp+0x34]
   14003b07f:	mov    edx,r15d
   14003b082:	mov    ecx,edi
   14003b084:	mov    QWORD PTR [rsp+0x20],rax
   14003b089:	call   0x14003b654
   14003b08e:	mov    esi,eax
   14003b090:	test   eax,eax
   14003b092:	jne    0x14003b34f
   14003b098:	mov    edx,DWORD PTR [rsp+0x34]
   14003b09c:	lea    r8,[r14+0x10]
   14003b0a0:	mov    r12,QWORD PTR [rsp+0x40]
   14003b0a5:	sub    edx,r15d
   14003b0a8:	movsxd r9,edi
   14003b0ab:	lea    rcx,[r12+r15*2]
   14003b0af:	call   0x14003a734
   14003b0b4:	mov    esi,eax
   14003b0b6:	test   eax,eax
   14003b0b8:	js     0x14003b11d
   14003b0ba:	add    r15d,edi
   14003b0bd:	lea    eax,[r15-0x1]
   14003b0c1:	mov    WORD PTR [r12+rax*2],bx
   14003b0c6:	mov    r13d,DWORD PTR [rsp+0x30]
   14003b0cb:	mov    eax,DWORD PTR [rsp+0x38]
   14003b0cf:	mov    r14,QWORD PTR [rsp+0x50]
   14003b0d4:	inc    eax
   14003b0d6:	add    r14,0x8
   14003b0da:	mov    DWORD PTR [rsp+0x38],eax
   14003b0de:	mov    QWORD PTR [rsp+0x50],r14
   14003b0e3:	cmp    eax,DWORD PTR [rsp+0x3c]
   14003b0e7:	jb     0x14003af3d
   14003b0ed:	test   r15d,r15d
   14003b0f0:	je     0x14003b11d
   14003b0f2:	mov    rax,QWORD PTR [rsp+0x68]
   14003b0f7:	mov    edx,r15d
   14003b0fa:	mov    rcx,r12
   14003b0fd:	mov    BYTE PTR [rax],0x1
   14003b100:	call   QWORD PTR [rip+0x17f62]        # 0x140053068
   14003b106:	mov    rcx,QWORD PTR [rsp+0x60]
   14003b10b:	test   rax,rax
   14003b10e:	mov    QWORD PTR [rcx],rax
   14003b111:	mov    ecx,esi
   14003b113:	mov    esi,0x8007000e
   14003b118:	cmove  ecx,esi
   14003b11b:	mov    esi,ecx
   14003b11d:	test   r12,r12
   14003b120:	je     0x14003b12b
   14003b122:	mov    rcx,r12
   14003b125:	call   QWORD PTR [rip+0x17f95]        # 0x1400530c0
   14003b12b:	mov    rcx,QWORD PTR [rsp+rbx*8+0x70]
   14003b130:	call   QWORD PTR [rip+0x17f8a]        # 0x1400530c0
   14003b136:	inc    rbx
   14003b139:	cmp    rbx,0x19
   14003b13d:	jl     0x14003b12b
   14003b13f:	mov    eax,esi
   14003b141:	mov    rcx,QWORD PTR [rbp+0x40]
   14003b145:	xor    rcx,rsp
   14003b148:	call   0x1400141d0
   14003b14d:	add    rsp,0x158
   14003b154:	pop    r15
   14003b156:	pop    r14
   14003b158:	pop    r13
   14003b15a:	pop    r12
   14003b15c:	pop    rdi
   14003b15d:	pop    rsi
   14003b15e:	pop    rbx
   14003b15f:	pop    rbp
   14003b160:	ret    
   14003b161:	lea    rdx,[rip+0xa788]        # 0x1400458f0
   14003b168:	mov    rcx,r14
   14003b16b:	call   QWORD PTR [rip+0x24bf]        # 0x14003d630
   14003b171:	test   rax,rax
   14003b174:	jne    0x14003b0c6
   14003b17a:	mov    QWORD PTR [rsp+0x58],r14
   14003b17f:	mov    r13,rbx
   14003b182:	mov    DWORD PTR [rsp+0x48],ebx
   14003b186:	lea    rax,[rip+0xa76b]        # 0x1400458f8
   14003b18d:	or     r8,0xffffffffffffffff
   14003b191:	mov    rcx,QWORD PTR [rax+r13*8]
   14003b195:	inc    r8
   14003b198:	cmp    WORD PTR [rcx+r8*2],bx
   14003b19d:	jne    0x14003b195
   14003b19f:	mov    rdx,r14
   14003b1a2:	call   QWORD PTR [rip+0x2468]        # 0x14003d610
   14003b1a8:	test   eax,eax
   14003b1aa:	je     0x14003b1c3
   14003b1ac:	mov    eax,DWORD PTR [rsp+0x48]
   14003b1b0:	inc    r13
   14003b1b3:	inc    eax
   14003b1b5:	mov    DWORD PTR [rsp+0x48],eax
   14003b1b9:	cmp    eax,0x6
   14003b1bc:	jl     0x14003b186
   14003b1be:	jmp    0x14003b261
   14003b1c3:	lea    rax,[rip+0xa72e]        # 0x1400458f8
   14003b1ca:	mov    rcx,QWORD PTR [rax+r13*8]
   14003b1ce:	or     rax,0xffffffffffffffff
   14003b1d2:	inc    rax
   14003b1d5:	cmp    WORD PTR [rcx+rax*2],bx
   14003b1d9:	jne    0x14003b1d2
   14003b1db:	lea    r14,[r14+rax*2]
   14003b1df:	or     rax,0xffffffffffffffff
   14003b1e3:	inc    rax
   14003b1e6:	cmp    WORD PTR [rcx+rax*2],bx
   14003b1ea:	jne    0x14003b1e3
   14003b1ec:	sub    edi,eax
   14003b1ee:	cmp    QWORD PTR [rsp+0x58],r14
   14003b1f3:	je     0x14003b261
   14003b1f5:	cmp    edi,0x2
   14003b1f8:	jl     0x14003b0c6
   14003b1fe:	mov    r9d,DWORD PTR [rsp+0x38]
   14003b203:	lea    rax,[rsp+0x40]
   14003b208:	mov    r8d,DWORD PTR [rsp+0x3c]
   14003b20d:	mov    edx,r15d
   14003b210:	mov    QWORD PTR [rsp+0x28],rax
   14003b215:	mov    ecx,edi
   14003b217:	lea    rax,[rsp+0x34]
   14003b21c:	mov    QWORD PTR [rsp+0x20],rax
   14003b221:	call   0x14003b654
   14003b226:	mov    esi,eax
   14003b228:	test   eax,eax
   14003b22a:	jne    0x14003b34f
   14003b230:	mov    edx,DWORD PTR [rsp+0x34]
   14003b234:	mov    r8,r14
   14003b237:	mov    r12,QWORD PTR [rsp+0x40]
   14003b23c:	sub    edx,r15d
   14003b23f:	movsxd r9,edi
   14003b242:	lea    rcx,[r12+r15*2]
   14003b246:	call   0x14003a734
   14003b24b:	mov    esi,eax
   14003b24d:	test   eax,eax
   14003b24f:	js     0x14003b11d
   14003b255:	add    r15d,edi
   14003b258:	lea    eax,[r15-0x1]
   14003b25c:	mov    WORD PTR [r12+rax*2],bx
   14003b261:	mov    edx,0x2f
   14003b266:	mov    rcx,r14
   14003b269:	call   QWORD PTR [rip+0x23f1]        # 0x14003d660
   14003b26f:	mov    r13,rax
   14003b272:	test   rax,rax
   14003b275:	jne    0x14003b281
   14003b277:	movsxd r13,edi
   14003b27a:	dec    r13
   14003b27d:	lea    r13,[r14+r13*2]
   14003b281:	mov    eax,0x2e
   14003b286:	cmp    r14,r13
   14003b289:	jae    0x14003b299
   14003b28b:	sub    r13,0x2
   14003b28f:	cmp    ax,WORD PTR [r13+0x0]
   14003b294:	jne    0x14003b286
   14003b296:	cmp    r14,r13
   14003b299:	je     0x14003b0c6
   14003b29f:	mov    edx,eax
   14003b2a1:	mov    rcx,r14
   14003b2a4:	call   QWORD PTR [rip+0x23b6]        # 0x14003d660
   14003b2aa:	mov    QWORD PTR [rsp+0x48],rax
   14003b2af:	test   rax,rax
   14003b2b2:	je     0x14003b0c6
   14003b2b8:	add    rax,0x2
   14003b2bc:	cmp    rax,r13
   14003b2bf:	jae    0x14003b0c6
   14003b2c5:	sub    rax,r14
   14003b2c8:	sar    rax,1
   14003b2cb:	sub    edi,eax
   14003b2cd:	cmp    edi,0x2
   14003b2d0:	jl     0x14003b0c6
   14003b2d6:	mov    r9d,DWORD PTR [rsp+0x38]
   14003b2db:	lea    rax,[rsp+0x40]
   14003b2e0:	mov    r8d,DWORD PTR [rsp+0x3c]
   14003b2e5:	mov    edx,r15d
   14003b2e8:	mov    QWORD PTR [rsp+0x28],rax
   14003b2ed:	mov    ecx,edi
   14003b2ef:	lea    rax,[rsp+0x34]
   14003b2f4:	mov    QWORD PTR [rsp+0x20],rax
   14003b2f9:	call   0x14003b654
   14003b2fe:	mov    esi,eax
   14003b300:	test   eax,eax
   14003b302:	jne    0x14003b34f
   14003b304:	mov    edx,DWORD PTR [rsp+0x34]
   14003b308:	mov    r12,QWORD PTR [rsp+0x40]
   14003b30d:	sub    edx,r15d
   14003b310:	mov    r14,QWORD PTR [rsp+0x48]
   14003b315:	movsxd r9,edi
   14003b318:	lea    rcx,[r12+r15*2]
   14003b31c:	lea    r8,[r14+0x2]
   14003b320:	call   0x14003a734
   14003b325:	mov    esi,eax
   14003b327:	test   eax,eax
   14003b329:	js     0x14003b11d
   14003b32f:	add    r15d,edi
   14003b332:	mov    edx,0x2e
   14003b337:	lea    eax,[r15-0x1]
   14003b33b:	mov    WORD PTR [r12+rax*2],bx
   14003b340:	lea    rax,[r14+0x2]
   14003b344:	mov    r14,rax
   14003b347:	mov    rcx,rax
   14003b34a:	jmp    0x14003b2a4
   14003b34f:	mov    r12,QWORD PTR [rsp+0x40]
   14003b354:	jmp    0x14003b11d
   14003b359:	int3   
   14003b35a:	int3   
   14003b35b:	int3   
   14003b35c:	int3   
   14003b35d:	int3   
   14003b35e:	int3   
   14003b35f:	int3   
   14003b360:	mov    QWORD PTR [rsp+0x10],rbx
   14003b365:	mov    QWORD PTR [rsp+0x18],rsi
   14003b36a:	push   rbp
   14003b36b:	push   rdi
   14003b36c:	push   r14
   14003b36e:	lea    rbp,[rsp-0x180]
   14003b376:	sub    rsp,0x280
   14003b37d:	mov    rax,QWORD PTR [rip+0x12c8c]        # 0x14004e010
   14003b384:	xor    rax,rsp
   14003b387:	mov    QWORD PTR [rbp+0x170],rax
   14003b38e:	movabs rax,0x6c00720075
   14003b398:	mov    rsi,rcx
   14003b39b:	mov    QWORD PTR [rsp+0x48],rax
   14003b3a0:	xor    eax,eax
   14003b3a2:	and    QWORD PTR [rsp+0x38],rax
   14003b3a7:	mov    DWORD PTR [rsp+0x50],eax
   14003b3ab:	test   rcx,rcx
   14003b3ae:	jne    0x14003b3b8
   14003b3b0:	or     eax,0xffffffff
   14003b3b3:	jmp    0x14003b483
   14003b3b8:	lea    rax,[rsp+0x38]
   14003b3bd:	mov    r9d,0x20019
   14003b3c3:	xor    r8d,r8d
   14003b3c6:	mov    QWORD PTR [rsp+0x20],rax
   14003b3cb:	lea    rdx,[rip+0xa4be]        # 0x140045890
   14003b3d2:	mov    rcx,0xffffffff80000001
   14003b3d9:	call   QWORD PTR [rip+0x1f61]        # 0x14003d340
   14003b3df:	test   eax,eax
   14003b3e1:	jne    0x14003b3b0
   14003b3e3:	cmp    QWORD PTR [rsp+0x38],0x0
   14003b3e9:	je     0x14003b3b0
   14003b3eb:	xor    edi,edi
   14003b3ed:	xor    ebx,ebx
   14003b3ef:	mov    r8d,0xa
   14003b3f5:	mov    DWORD PTR [rsp+0x30],0x20a
   14003b3fd:	lea    rdx,[rsp+0x4e]
   14003b402:	lea    ecx,[rdi+0x1]
   14003b405:	call   QWORD PTR [rip+0x2265]        # 0x14003d670
   14003b40b:	mov    rcx,QWORD PTR [rsp+0x38]
   14003b410:	lea    rax,[rsp+0x30]
   14003b415:	mov    QWORD PTR [rsp+0x28],rax
   14003b41a:	lea    r9,[rsp+0x40]
   14003b41f:	lea    rax,[rsp+0x60]
   14003b424:	xor    r8d,r8d
   14003b427:	lea    rdx,[rsp+0x48]
   14003b42c:	mov    QWORD PTR [rsp+0x20],rax
   14003b431:	call   QWORD PTR [rip+0x1f11]        # 0x14003d348
   14003b437:	test   eax,eax
   14003b439:	je     0x14003b444
   14003b43b:	cmp    eax,0xea
   14003b440:	jne    0x14003b476
   14003b442:	jmp    0x14003b467
   14003b444:	cmp    DWORD PTR [rsp+0x40],0x1
   14003b449:	jne    0x14003b476
   14003b44b:	mov    edx,DWORD PTR [rsp+0x30]
   14003b44f:	cmp    edx,0x2
   14003b452:	jbe    0x14003b467
   14003b454:	shr    edx,1
   14003b456:	lea    rcx,[rsp+0x60]
   14003b45b:	dec    edx
   14003b45d:	call   QWORD PTR [rip+0x17c05]        # 0x140053068
   14003b463:	mov    QWORD PTR [rsi+rbx*8],rax
   14003b467:	inc    edi
   14003b469:	inc    rbx
   14003b46c:	cmp    rbx,0x19
   14003b470:	jl     0x14003b3ef
   14003b476:	mov    rcx,QWORD PTR [rsp+0x38]
   14003b47b:	call   QWORD PTR [rip+0x1ed7]        # 0x14003d358
   14003b481:	mov    eax,edi
   14003b483:	mov    rcx,QWORD PTR [rbp+0x170]
   14003b48a:	xor    rcx,rsp
   14003b48d:	call   0x1400141d0
   14003b492:	lea    r11,[rsp+0x280]
   14003b49a:	mov    rbx,QWORD PTR [r11+0x28]
   14003b49e:	mov    rsi,QWORD PTR [r11+0x30]
   14003b4a2:	mov    rsp,r11
   14003b4a5:	pop    r14
   14003b4a7:	pop    rdi
   14003b4a8:	pop    rbp
   14003b4a9:	ret    
   14003b4aa:	int3   
   14003b4ab:	int3   
   14003b4ac:	int3   
   14003b4ad:	int3   
   14003b4ae:	int3   
   14003b4af:	int3   
   14003b4b0:	mov    QWORD PTR [rsp+0x8],rbx
   14003b4b5:	mov    QWORD PTR [rsp+0x18],rbp
   14003b4ba:	push   rsi
   14003b4bb:	push   rdi
   14003b4bc:	push   r14
   14003b4be:	sub    rsp,0x40
   14003b4c2:	mov    rsi,rcx
   14003b4c5:	mov    DWORD PTR [r9+0x11],0x0
   14003b4cd:	mov    rcx,r9
   14003b4d0:	mov    BYTE PTR [r9+0x10],0x0
   14003b4d5:	mov    rbx,r9
   14003b4d8:	mov    r14b,r8b
   14003b4db:	mov    ebp,edx
   14003b4dd:	call   0x14002a044
   14003b4e2:	xor    edi,edi
   14003b4e4:	test   ebp,ebp
   14003b4e6:	je     0x14003b577
   14003b4ec:	mov    edx,DWORD PTR [rsi]
   14003b4ee:	lea    eax,[rdx+0x5]
   14003b4f1:	cmp    eax,0x34
   14003b4f4:	ja     0x14003b569
   14003b4f6:	test   edx,edx
   14003b4f8:	js     0x14003b569
   14003b4fa:	call   0x14003b950
   14003b4ff:	mov    edx,eax
   14003b501:	mov    DWORD PTR [rsp+0x68],eax
   14003b505:	mov    r11d,eax
   14003b508:	call   0x14003b950
   14003b50d:	mov    DWORD PTR [rsp+0x78],eax
   14003b511:	lea    r9,[rsp+0x30]
   14003b516:	lea    rax,[rsp+0x38]
   14003b51b:	lea    r8,[rsp+0x34]
   14003b520:	mov    QWORD PTR [rsp+0x20],rax
   14003b525:	lea    rdx,[rsp+0x78]
   14003b52a:	call   0x14002a3a0
   14003b52f:	test   rax,rax
   14003b532:	je     0x14003b645
   14003b538:	lea    rdx,[rsp+0x68]
   14003b53d:	mov    rcx,rbx
   14003b540:	call   0x14003a448
   14003b545:	test   eax,eax
   14003b547:	jns    0x14003b569
   14003b549:	test   r11d,r11d
   14003b54c:	jne    0x14003b552
   14003b54e:	mov    BYTE PTR [rbx+0x11],0x1
   14003b552:	cmp    r11d,0x1
   14003b556:	jne    0x14003b55c
   14003b558:	mov    BYTE PTR [rbx+0x10],r11b
   14003b55c:	lea    rdx,[rsp+0x68]
   14003b561:	mov    rcx,rbx
   14003b564:	call   0x14003a3bc
   14003b569:	inc    edi
   14003b56b:	add    rsi,0x4
   14003b56f:	cmp    edi,ebp
   14003b571:	jb     0x14003b4ec
   14003b577:	cmp    BYTE PTR [rbx+0x11],0x0
   14003b57b:	je     0x14003b5ad
   14003b57d:	cmp    r14b,0x1
   14003b581:	je     0x14003b589
   14003b583:	cmp    DWORD PTR [rbx+0x8],0x1
   14003b587:	jle    0x14003b5ad
   14003b589:	and    DWORD PTR [rsp+0x68],0x0
   14003b58e:	lea    rdx,[rsp+0x68]
   14003b593:	mov    rcx,rbx
   14003b596:	mov    BYTE PTR [rbx+0x12],0x1
   14003b59a:	call   0x14003a448
   14003b59f:	test   eax,eax
   14003b5a1:	js     0x14003b5ad
   14003b5a3:	mov    edx,eax
   14003b5a5:	mov    rcx,rbx
   14003b5a8:	call   0x14003a69c
   14003b5ad:	xor    edi,edi
   14003b5af:	cmp    DWORD PTR [rbx+0x8],edi
   14003b5b2:	jbe    0x14003b616
   14003b5b4:	mov    edx,edi
   14003b5b6:	mov    rcx,rbx
   14003b5b9:	call   0x14003a384
   14003b5be:	cmp    DWORD PTR [rax],0x0
   14003b5c1:	jne    0x14003b5c7
   14003b5c3:	mov    BYTE PTR [rbx+0x13],0x1
   14003b5c7:	mov    edx,edi
   14003b5c9:	mov    rcx,rbx
   14003b5cc:	call   0x14003a384
   14003b5d1:	mov    eax,DWORD PTR [rax]
   14003b5d3:	test   eax,eax
   14003b5d5:	jle    0x14003b5f8
   14003b5d7:	cmp    eax,0x7
   14003b5da:	jle    0x14003b5fc
   14003b5dc:	cmp    eax,0x8
   14003b5df:	jle    0x14003b5f8
   14003b5e1:	cmp    eax,0xb
   14003b5e4:	jle    0x14003b5fc
   14003b5e6:	cmp    eax,0xe
   14003b5e9:	je     0x14003b5fc
   14003b5eb:	cmp    eax,0x10
   14003b5ee:	je     0x14003b5fc
   14003b5f0:	add    eax,0xffffffee
   14003b5f3:	cmp    eax,0x1d
   14003b5f6:	jbe    0x14003b5fc
   14003b5f8:	mov    BYTE PTR [rbx+0x12],0x1
   14003b5fc:	mov    edx,edi
   14003b5fe:	mov    rcx,rbx
   14003b601:	call   0x14003a384
   14003b606:	cmp    DWORD PTR [rax],0x0
   14003b609:	je     0x14003b60f
   14003b60b:	mov    BYTE PTR [rbx+0x14],0x1
   14003b60f:	inc    edi
   14003b611:	cmp    edi,DWORD PTR [rbx+0x8]
   14003b614:	jb     0x14003b5b4
   14003b616:	movsxd rdx,DWORD PTR [rbx+0x8]
   14003b61a:	lea    r9,[rip+0xffffffffffffee9f]        # 0x14003a4c0
   14003b621:	mov    rcx,QWORD PTR [rbx]
   14003b624:	mov    r8d,0x4
   14003b62a:	call   QWORD PTR [rip+0x2038]        # 0x14003d668
   14003b630:	xor    eax,eax
   14003b632:	mov    rbx,QWORD PTR [rsp+0x60]
   14003b637:	mov    rbp,QWORD PTR [rsp+0x70]
   14003b63c:	add    rsp,0x40
   14003b640:	pop    r14
   14003b642:	pop    rdi
   14003b643:	pop    rsi
   14003b644:	ret    
   14003b645:	mov    eax,0x80070057
   14003b64a:	jmp    0x14003b632
   14003b64c:	int3   
   14003b64d:	int3   
   14003b64e:	int3   
   14003b64f:	int3   
   14003b650:	int3   
   14003b651:	int3   
   14003b652:	int3   
   14003b653:	int3   
   14003b654:	mov    rax,rsp
   14003b657:	mov    QWORD PTR [rax+0x8],rbx
   14003b65b:	mov    QWORD PTR [rax+0x10],rbp
   14003b65f:	mov    QWORD PTR [rax+0x18],rsi
   14003b663:	mov    QWORD PTR [rax+0x20],rdi
   14003b667:	push   r14
   14003b669:	sub    rsp,0x20
   14003b66d:	mov    r10d,ecx
   14003b670:	mov    esi,edx
   14003b672:	mov    ecx,0x7fffffff
   14003b677:	cmp    r10d,ecx
   14003b67a:	ja     0x14003b708
   14003b680:	cmp    esi,ecx
   14003b682:	ja     0x14003b708
   14003b688:	lea    eax,[r10+rsi*1]
   14003b68c:	cmp    eax,ecx
   14003b68e:	ja     0x14003b708
   14003b690:	mov    r14,QWORD PTR [rsp+0x50]
   14003b695:	cmp    eax,DWORD PTR [r14]
   14003b698:	jbe    0x14003b704
   14003b69a:	mov    eax,DWORD PTR [r14]
   14003b69d:	test   r9d,r9d
   14003b6a0:	mov    ecx,0x1
   14003b6a5:	cmovne ecx,r9d
   14003b6a9:	xor    edx,edx
   14003b6ab:	div    ecx
   14003b6ad:	sub    r8d,r9d
   14003b6b0:	lea    edi,[rax+0x4]
   14003b6b3:	imul   edi,r8d
   14003b6b7:	add    edi,DWORD PTR [r14]
   14003b6ba:	add    edi,r10d
   14003b6bd:	cmp    esi,edi
   14003b6bf:	ja     0x14003b708
   14003b6c1:	cmp    r10d,edi
   14003b6c4:	ja     0x14003b708
   14003b6c6:	mov    edx,edi
   14003b6c8:	xor    ecx,ecx
   14003b6ca:	call   QWORD PTR [rip+0x17998]        # 0x140053068
   14003b6d0:	mov    rbp,rax
   14003b6d3:	test   rax,rax
   14003b6d6:	jne    0x14003b6df
   14003b6d8:	mov    eax,0x8007000e
   14003b6dd:	jmp    0x14003b70d
   14003b6df:	mov    rbx,QWORD PTR [rsp+0x58]
   14003b6e4:	mov    r8,rsi
   14003b6e7:	add    r8,r8
   14003b6ea:	mov    rcx,rax
   14003b6ed:	mov    rdx,QWORD PTR [rbx]
   14003b6f0:	call   0x1400156f2
   14003b6f5:	mov    rcx,QWORD PTR [rbx]
   14003b6f8:	call   QWORD PTR [rip+0x179c2]        # 0x1400530c0
   14003b6fe:	mov    QWORD PTR [rbx],rbp
   14003b701:	mov    DWORD PTR [r14],edi
   14003b704:	xor    eax,eax
   14003b706:	jmp    0x14003b70d
   14003b708:	mov    eax,0x80004005
   14003b70d:	mov    rbx,QWORD PTR [rsp+0x30]
   14003b712:	mov    rbp,QWORD PTR [rsp+0x38]
   14003b717:	mov    rsi,QWORD PTR [rsp+0x40]
   14003b71c:	mov    rdi,QWORD PTR [rsp+0x48]
   14003b721:	add    rsp,0x20
   14003b725:	pop    r14
   14003b727:	ret    
   14003b728:	int3   
   14003b729:	int3   
   14003b72a:	int3   
   14003b72b:	int3   
   14003b72c:	int3   
   14003b72d:	int3   
   14003b72e:	int3   
   14003b72f:	int3   
   14003b730:	mov    rax,rsp
   14003b733:	mov    QWORD PTR [rax+0x8],rbx
   14003b737:	mov    QWORD PTR [rax+0x18],rsi
   14003b73b:	mov    QWORD PTR [rax+0x20],rdi
   14003b73f:	mov    QWORD PTR [rax+0x10],rdx
   14003b743:	push   rbp
   14003b744:	push   r12
   14003b746:	push   r13
   14003b748:	push   r14
   14003b74a:	push   r15
   14003b74c:	mov    rbp,rsp
   14003b74f:	sub    rsp,0x50
   14003b753:	xor    ebx,ebx
   14003b755:	mov    edi,ecx
   14003b757:	lea    rcx,[rbp-0x18]
   14003b75b:	mov    QWORD PTR [rbp-0x18],rbx
   14003b75f:	mov    QWORD PTR [rbp-0x10],rbx
   14003b763:	mov    r13,r9
   14003b766:	mov    DWORD PTR [rbp-0x7],ebx
   14003b769:	mov    r12d,r8d
   14003b76c:	mov    BYTE PTR [rbp-0x8],bl
   14003b76f:	mov    rsi,rdx
   14003b772:	call   0x14002a044
   14003b777:	mov    BYTE PTR [rbp+0x60],bl
   14003b77a:	test   rsi,rsi
   14003b77d:	jne    0x14003b788
   14003b77f:	test   r12d,r12d
   14003b782:	jne    0x14003b917
   14003b788:	cmp    r12d,0x2710
   14003b78f:	jae    0x14003b917
   14003b795:	mov    esi,DWORD PTR [rbp+0x50]
   14003b798:	test   r13,r13
   14003b79b:	jne    0x14003b7a5
   14003b79d:	test   esi,esi
   14003b79f:	jne    0x14003b917
   14003b7a5:	cmp    esi,0x1c9c380
   14003b7ab:	jae    0x14003b917
   14003b7b1:	mov    ecx,ebx
   14003b7b3:	mov    edx,0x1
   14003b7b8:	test   esi,esi
   14003b7ba:	je     0x14003b7d2
   14003b7bc:	mov    rax,r13
   14003b7bf:	cmp    QWORD PTR [rax],rbx
   14003b7c2:	je     0x14003b917
   14003b7c8:	add    ecx,edx
   14003b7ca:	add    rax,0x8
   14003b7ce:	cmp    ecx,esi
   14003b7d0:	jb     0x14003b7bf
   14003b7d2:	mov    rcx,QWORD PTR [rbp+0x68]
   14003b7d6:	call   QWORD PTR [rip+0x17834]        # 0x140053010
   14003b7dc:	test   eax,eax
   14003b7de:	je     0x14003b803
   14003b7e0:	test   r12d,r12d
   14003b7e3:	jne    0x14003b917
   14003b7e9:	test   esi,esi
   14003b7eb:	jne    0x14003b917
   14003b7f1:	mov    rcx,QWORD PTR [rbp+0x58]
   14003b7f5:	call   QWORD PTR [rip+0x17815]        # 0x140053010
   14003b7fb:	test   eax,eax
   14003b7fd:	jne    0x14003b917
   14003b803:	mov    r14,QWORD PTR [rbp+0x70]
   14003b807:	test   r14,r14
   14003b80a:	je     0x14003b917
   14003b810:	mov    r15,QWORD PTR [rbp+0x78]
   14003b814:	test   r15,r15
   14003b817:	je     0x14003b917
   14003b81d:	cmp    QWORD PTR [rbp+0x80],rbx
   14003b824:	je     0x14003b917
   14003b82a:	cmp    QWORD PTR [r14],rbx
   14003b82d:	jne    0x14003b917
   14003b833:	cmp    QWORD PTR [r15],rbx
   14003b836:	jne    0x14003b917
   14003b83c:	mov    eax,0x3ff
   14003b841:	and    di,ax
   14003b844:	cmp    di,0x4
   14003b848:	je     0x14003b91c
   14003b84e:	sub    di,0x11
   14003b852:	mov    eax,0x1
   14003b857:	cmp    di,ax
   14003b85a:	jbe    0x14003b91c
   14003b860:	mov    rcx,QWORD PTR [rbp+0x58]
   14003b864:	call   QWORD PTR [rip+0x177a6]        # 0x140053010
   14003b86a:	movzx  ecx,bl
   14003b86d:	lea    r9,[rbp-0x18]
   14003b871:	test   eax,eax
   14003b873:	mov    edx,r12d
   14003b876:	mov    eax,0x1
   14003b87b:	cmovne ecx,eax
   14003b87e:	mov    BYTE PTR [rbp-0x20],cl
   14003b881:	mov    r8b,cl
   14003b884:	mov    rcx,QWORD PTR [rbp+0x38]
   14003b888:	call   0x14003b4b0
   14003b88d:	mov    edi,eax
   14003b88f:	test   eax,eax
   14003b891:	jne    0x14003b8f3
   14003b893:	lea    r9,[rbp+0x60]
   14003b897:	mov    r8,r14
   14003b89a:	mov    edx,esi
   14003b89c:	mov    rcx,r13
   14003b89f:	cmp    BYTE PTR [rbp-0x8],bl
   14003b8a2:	je     0x14003b8ab
   14003b8a4:	call   0x14003ae74
   14003b8a9:	jmp    0x14003b8b0
   14003b8ab:	call   0x14003ad14
   14003b8b0:	mov    edi,eax
   14003b8b2:	test   eax,eax
   14003b8b4:	jne    0x14003b8f3
   14003b8b6:	mov    r8b,BYTE PTR [rbp+0x60]
   14003b8ba:	lea    r9,[rbp-0x20]
   14003b8be:	mov    rcx,QWORD PTR [rbp+0x58]
   14003b8c2:	lea    rdx,[rbp-0x18]
   14003b8c6:	mov    QWORD PTR [rsp+0x20],r15
   14003b8cb:	call   0x14003a7bc
   14003b8d0:	mov    edi,eax
   14003b8d2:	test   eax,eax
   14003b8d4:	jne    0x14003b8f3
   14003b8d6:	mov    r9,QWORD PTR [rbp+0x80]
   14003b8dd:	lea    rcx,[rbp-0x18]
   14003b8e1:	mov    r8b,BYTE PTR [rbp+0x60]
   14003b8e5:	mov    dl,BYTE PTR [rbp-0x20]
   14003b8e8:	call   0x14003ac94
   14003b8ed:	mov    edi,eax
   14003b8ef:	test   eax,eax
   14003b8f1:	je     0x14003b91c
   14003b8f3:	cmp    QWORD PTR [r15],rbx
   14003b8f6:	je     0x14003b904
   14003b8f8:	mov    rcx,QWORD PTR [r15]
   14003b8fb:	call   QWORD PTR [rip+0x177bf]        # 0x1400530c0
   14003b901:	mov    QWORD PTR [r15],rbx
   14003b904:	cmp    QWORD PTR [r14],rbx
   14003b907:	je     0x14003b91e
   14003b909:	mov    rcx,QWORD PTR [r14]
   14003b90c:	call   QWORD PTR [rip+0x177ae]        # 0x1400530c0
   14003b912:	mov    QWORD PTR [r14],rbx
   14003b915:	jmp    0x14003b91e
   14003b917:	mov    ebx,0x80070057
   14003b91c:	mov    edi,ebx
   14003b91e:	lea    rcx,[rbp-0x18]
   14003b922:	call   0x14002a044
   14003b927:	lea    r11,[rsp+0x50]
   14003b92c:	mov    eax,edi
   14003b92e:	mov    rbx,QWORD PTR [r11+0x30]
   14003b932:	mov    rsi,QWORD PTR [r11+0x40]
   14003b936:	mov    rdi,QWORD PTR [r11+0x48]
   14003b93a:	mov    rsp,r11
   14003b93d:	pop    r15
   14003b93f:	pop    r14
   14003b941:	pop    r13
   14003b943:	pop    r12
   14003b945:	pop    rbp
   14003b946:	ret    
   14003b947:	int3   
   14003b948:	int3   
   14003b949:	int3   
   14003b94a:	int3   
   14003b94b:	int3   
   14003b94c:	int3   
   14003b94d:	int3   
   14003b94e:	int3   
   14003b94f:	int3   
   14003b950:	mov    r9,QWORD PTR [rip+0x13531]        # 0x14004ee88
   14003b957:	mov    r8d,edx
   14003b95a:	test   r9,r9
   14003b95d:	je     0x14003b98d
   14003b95f:	xor    edx,edx
   14003b961:	mov    eax,r8d
   14003b964:	div    DWORD PTR [rip+0x1352e]        # 0x14004ee98
   14003b96a:	mov    rax,QWORD PTR [r9+rdx*8]
   14003b96e:	jmp    0x14003b97f
   14003b970:	cmp    DWORD PTR [rax+0x10],r8d
   14003b974:	jne    0x14003b97b
   14003b976:	cmp    DWORD PTR [rax],r8d
   14003b979:	je     0x14003b984
   14003b97b:	mov    rax,QWORD PTR [rax+0x8]
   14003b97f:	test   rax,rax
   14003b982:	jne    0x14003b970
   14003b984:	test   rax,rax
   14003b987:	je     0x14003b98d
   14003b989:	mov    eax,DWORD PTR [rax+0x4]
   14003b98c:	ret    
   14003b98d:	mov    eax,r8d
   14003b990:	ret    
   14003b991:	int3   
   14003b992:	int3   
   14003b993:	int3   
   14003b994:	int3   
   14003b995:	int3   
   14003b996:	int3   
   14003b997:	int3   
   14003b998:	mov    QWORD PTR [rsp+0x18],rbx
   14003b99d:	mov    QWORD PTR [rsp+0x20],rsi
   14003b9a2:	push   rbp
   14003b9a3:	push   rdi
   14003b9a4:	push   r14
   14003b9a6:	lea    rbp,[rsp-0xf50]
   14003b9ae:	mov    eax,0x1050
   14003b9b3:	call   0x140015740
   14003b9b8:	sub    rsp,rax
   14003b9bb:	mov    rax,QWORD PTR [rip+0x1264e]        # 0x14004e010
   14003b9c2:	xor    rax,rsp
   14003b9c5:	mov    QWORD PTR [rbp+0xf40],rax
   14003b9cc:	xor    ebx,ebx
   14003b9ce:	mov    esi,ecx
   14003b9d0:	mov    rdi,rdx
   14003b9d3:	test   rdx,rdx
   14003b9d6:	jne    0x14003b9df
   14003b9d8:	xor    eax,eax
   14003b9da:	jmp    0x14003ba84
   14003b9df:	xor    edx,edx
   14003b9e1:	mov    r8d,0x208
   14003b9e7:	mov    rcx,rdi
   14003b9ea:	call   0x140014694
   14003b9ef:	mov    r14d,0x1000
   14003b9f5:	lea    rcx,[rsp+0x40]
   14003b9fa:	mov    r8d,r14d
   14003b9fd:	xor    edx,edx
   14003b9ff:	call   0x140014694
   14003ba04:	mov    r8d,0x18
   14003ba0a:	mov    QWORD PTR [rsp+0x28],rsi
   14003ba0f:	lea    rax,[rsp+0x40]
   14003ba14:	mov    DWORD PTR [rsp+0x30],0x10000000
   14003ba1c:	lea    r9,[rsp+0x20]
   14003ba21:	mov    QWORD PTR [rsp+0x38],rax
   14003ba26:	lea    rdx,[rsp+0x28]
   14003ba2b:	mov    DWORD PTR [rsp+0x20],ebx
   14003ba2f:	lea    ecx,[r8+0x40]
   14003ba33:	call   QWORD PTR [rip+0x1c87]        # 0x14003d6c0
   14003ba39:	test   eax,eax
   14003ba3b:	js     0x14003ba82
   14003ba3d:	mov    r8,QWORD PTR [rsp+0x38]
   14003ba42:	test   r8,r8
   14003ba45:	je     0x14003ba82
   14003ba47:	cmp    WORD PTR [rsp+0x30],bx
   14003ba4c:	je     0x14003ba82
   14003ba4e:	movzx  edx,WORD PTR [rsp+0x30]
   14003ba53:	mov    ecx,0x7ff
   14003ba58:	shr    edx,1
   14003ba5a:	cmp    edx,0x800
   14003ba60:	cmovae edx,ecx
   14003ba63:	mov    rcx,rdi
   14003ba66:	movsxd rdx,edx
   14003ba69:	mov    WORD PTR [r8+rdx*2],bx
   14003ba6e:	mov    edx,0x104
   14003ba73:	mov    r8,QWORD PTR [rsp+0x38]
   14003ba78:	call   0x14001531c
   14003ba7d:	test   eax,eax
   14003ba7f:	setns  bl
   14003ba82:	mov    eax,ebx
   14003ba84:	mov    rcx,QWORD PTR [rbp+0xf40]
   14003ba8b:	xor    rcx,rsp
   14003ba8e:	call   0x1400141d0
   14003ba93:	lea    r11,[rsp+0x1050]
   14003ba9b:	mov    rbx,QWORD PTR [r11+0x30]
   14003ba9f:	mov    rsi,QWORD PTR [r11+0x38]
   14003baa3:	mov    rsp,r11
   14003baa6:	pop    r14
   14003baa8:	pop    rdi
   14003baa9:	pop    rbp
   14003baaa:	ret    
   14003baab:	int3   
   14003baac:	int3   
   14003baad:	int3   
   14003baae:	int3   
   14003baaf:	int3   
   14003bab0:	int3   
   14003bab1:	int3   
   14003bab2:	int3   
   14003bab3:	int3   
   14003bab4:	rex push rbx
   14003bab6:	sub    rsp,0x30
   14003baba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003bac3:	mov    eax,DWORD PTR [rip+0x138c7]        # 0x14004f390
   14003bac9:	test   al,0x1
   14003bacb:	jne    0x14003bae4
   14003bacd:	or     eax,0x1
   14003bad0:	mov    DWORD PTR [rip+0x138ba],eax        # 0x14004f390
   14003bad6:	call   0x14003bb5c
   14003badb:	test   eax,eax
   14003badd:	setne  BYTE PTR [rip+0x138b0]        # 0x14004f394
   14003bae4:	lea    rcx,[rsp+0x40]
   14003bae9:	call   QWORD PTR [rip+0x1921]        # 0x14003d410
   14003baef:	mov    eax,DWORD PTR [rsp+0x40]
   14003baf3:	mov    DWORD PTR [rsp+0x48],eax
   14003baf7:	mov    eax,DWORD PTR [rsp+0x44]
   14003bafb:	mov    DWORD PTR [rsp+0x4c],eax
   14003baff:	mov    rbx,QWORD PTR [rsp+0x48]
   14003bb04:	mov    rax,rbx
   14003bb07:	sub    rax,QWORD PTR [rip+0x1381a]        # 0x14004f328
   14003bb0e:	mov    ecx,0xd693a400
   14003bb13:	cmp    rax,rcx
   14003bb16:	jl     0x14003bb31
   14003bb18:	call   0x14003bb5c
   14003bb1d:	test   eax,eax
   14003bb1f:	setne  al
   14003bb22:	mov    BYTE PTR [rip+0x1386c],al        # 0x14004f394
   14003bb28:	mov    QWORD PTR [rip+0x137f9],rbx        # 0x14004f328
   14003bb2f:	jmp    0x14003bb37
   14003bb31:	mov    al,BYTE PTR [rip+0x1385d]        # 0x14004f394
   14003bb37:	add    rsp,0x30
   14003bb3b:	pop    rbx
   14003bb3c:	ret    
   14003bb3d:	rex push rbp
   14003bb3f:	mov    rbp,rdx
   14003bb42:	mov    eax,DWORD PTR [rip+0x13848]        # 0x14004f390
   14003bb48:	and    eax,0xfffffffe
   14003bb4b:	mov    DWORD PTR [rip+0x1383f],eax        # 0x14004f390
   14003bb51:	pop    rbp
   14003bb52:	ret    
   14003bb53:	int3   
   14003bb54:	int3   
   14003bb55:	int3   
   14003bb56:	int3   
   14003bb57:	int3   
   14003bb58:	int3   
   14003bb59:	int3   
   14003bb5a:	int3   
   14003bb5b:	int3   
   14003bb5c:	mov    QWORD PTR [rsp+0x8],rbx
   14003bb61:	push   rdi
   14003bb62:	sub    rsp,0x20
   14003bb66:	xor    ebx,ebx
   14003bb68:	cmp    DWORD PTR [rip+0x129b2],ebx        # 0x14004e520
   14003bb6e:	je     0x14003bbb0
   14003bb70:	mov    rdi,QWORD PTR [rip+0x137b9]        # 0x14004f330
   14003bb77:	test   rdi,rdi
   14003bb7a:	jne    0x14003bba3
   14003bb7c:	call   0x14003bbc4
   14003bb81:	mov    rcx,rax
   14003bb84:	test   rax,rax
   14003bb87:	jne    0x14003bb91
   14003bb89:	mov    DWORD PTR [rip+0x12991],ebx        # 0x14004e520
   14003bb8f:	jmp    0x14003bbb0
   14003bb91:	xor    eax,eax
   14003bb93:	lock cmpxchg QWORD PTR [rip+0x13794],rcx        # 0x14004f330
   14003bb9c:	mov    rdi,QWORD PTR [rip+0x1378d]        # 0x14004f330
   14003bba3:	mov    rcx,rdi
   14003bba6:	call   QWORD PTR [rip+0x1b7c]        # 0x14003d728
   14003bbac:	call   rdi
   14003bbae:	mov    ebx,eax
   14003bbb0:	mov    eax,ebx
   14003bbb2:	mov    rbx,QWORD PTR [rsp+0x30]
   14003bbb7:	add    rsp,0x20
   14003bbbb:	pop    rdi
   14003bbbc:	ret    
   14003bbbd:	int3   
   14003bbbe:	int3   
   14003bbbf:	int3   
   14003bbc0:	int3   
   14003bbc1:	int3   
   14003bbc2:	int3   
   14003bbc3:	int3   
   14003bbc4:	rex push rbx
   14003bbc6:	sub    rsp,0x20
   14003bbca:	xor    ebx,ebx
   14003bbcc:	cmp    DWORD PTR [rip+0x1294e],ebx        # 0x14004e520
   14003bbd2:	je     0x14003bc1c
   14003bbd4:	cmp    QWORD PTR [rip+0x1375d],rbx        # 0x14004f338
   14003bbdb:	jne    0x14003bc05
   14003bbdd:	lea    rcx,[rip+0x9d5c]        # 0x140045940
   14003bbe4:	call   QWORD PTR [rip+0x167e]        # 0x14003d268
   14003bbea:	mov    rcx,rax
   14003bbed:	test   rax,rax
   14003bbf0:	je     0x14003bc1c
   14003bbf2:	xor    eax,eax
   14003bbf4:	lock cmpxchg QWORD PTR [rip+0x1373b],rcx        # 0x14004f338
   14003bbfd:	je     0x14003bc05
   14003bbff:	call   QWORD PTR [rip+0x1653]        # 0x14003d258
   14003bc05:	mov    rcx,QWORD PTR [rip+0x1372c]        # 0x14004f338
   14003bc0c:	lea    rdx,[rip+0x9d45]        # 0x140045958
   14003bc13:	call   QWORD PTR [rip+0x160f]        # 0x14003d228
   14003bc19:	mov    rbx,rax
   14003bc1c:	mov    rax,rbx
   14003bc1f:	add    rsp,0x20
   14003bc23:	pop    rbx
   14003bc24:	ret    
   14003bc25:	int3   
   14003bc26:	int3   
   14003bc27:	int3   
   14003bc28:	int3   
   14003bc29:	int3   
   14003bc2a:	int3   
   14003bc2b:	int3   
   14003bc2c:	int3   
   14003bc2d:	int3   
   14003bc2e:	int3   
   14003bc2f:	int3   
   14003bc30:	mov    ecx,DWORD PTR [rcx+0x8]
   14003bc33:	mov    edx,0x1
   14003bc38:	rex.W jmp QWORD PTR [rip+0x174c9]        # 0x140053108
   14003bc3f:	int3   
   14003bc40:	int3   
   14003bc41:	int3   
   14003bc42:	int3   
   14003bc43:	int3   
   14003bc44:	int3   
   14003bc45:	int3   
   14003bc46:	int3   
   14003bc47:	int3   
   14003bc48:	mov    QWORD PTR [rsp+0x8],rbx
   14003bc4d:	mov    QWORD PTR [rsp+0x10],rbp
   14003bc52:	mov    QWORD PTR [rsp+0x18],rsi
   14003bc57:	push   rdi
   14003bc58:	sub    rsp,0x20
   14003bc5c:	xor    ebx,ebx
   14003bc5e:	xor    edx,edx
   14003bc60:	xor    ecx,ecx
   14003bc62:	lea    ebp,[rbx+0x1]
   14003bc65:	mov    r8d,ebp
   14003bc68:	call   QWORD PTR [rip+0x174da]        # 0x140053148
   14003bc6e:	mov    rdi,rax
   14003bc71:	test   rax,rax
   14003bc74:	je     0x14003bccc
   14003bc76:	lea    r8d,[rbx+0x10]
   14003bc7a:	mov    rcx,rax
   14003bc7d:	lea    rdx,[rip+0x9ce4]        # 0x140045968
   14003bc84:	call   QWORD PTR [rip+0x174ae]        # 0x140053138
   14003bc8a:	mov    rsi,rax
   14003bc8d:	test   rax,rax
   14003bc90:	je     0x14003bcc3
   14003bc92:	xor    r8d,r8d
   14003bc95:	xor    edx,edx
   14003bc97:	mov    rcx,rax
   14003bc9a:	call   QWORD PTR [rip+0x174b0]        # 0x140053150
   14003bca0:	test   eax,eax
   14003bca2:	je     0x14003bca9
   14003bca4:	mov    bl,bpl
   14003bca7:	jmp    0x14003bcba
   14003bca9:	call   QWORD PTR [rip+0x14b9]        # 0x14003d168
   14003bcaf:	cmp    eax,0x420
   14003bcb4:	movzx  ebx,bl
   14003bcb7:	cmove  ebx,ebp
   14003bcba:	mov    rcx,rsi
   14003bcbd:	call   QWORD PTR [rip+0x1747d]        # 0x140053140
   14003bcc3:	mov    rcx,rdi
   14003bcc6:	call   QWORD PTR [rip+0x17474]        # 0x140053140
   14003bccc:	mov    rbp,QWORD PTR [rsp+0x38]
   14003bcd1:	mov    al,bl
   14003bcd3:	mov    rbx,QWORD PTR [rsp+0x30]
   14003bcd8:	mov    rsi,QWORD PTR [rsp+0x40]
   14003bcdd:	add    rsp,0x20
   14003bce1:	pop    rdi
   14003bce2:	ret    
   14003bce3:	int3   
   14003bce4:	int3   
   14003bce5:	int3   
   14003bce6:	int3   
   14003bce7:	int3   
   14003bce8:	int3   
   14003bce9:	int3   
   14003bcea:	int3   
   14003bceb:	int3   
   14003bcec:	rex push rbx
   14003bcee:	sub    rsp,0x70
   14003bcf2:	mov    rax,QWORD PTR [rip+0x12317]        # 0x14004e010
   14003bcf9:	xor    rax,rsp
   14003bcfc:	mov    QWORD PTR [rsp+0x68],rax
   14003bd01:	mov    r9d,0x1
   14003bd07:	mov    BYTE PTR [rsp+0x30],0x0
   14003bd0c:	mov    rbx,rcx
   14003bd0f:	lea    r8,[rsp+0x30]
   14003bd14:	lea    rcx,[rsp+0x40]
   14003bd19:	lea    edx,[r9+0x7]
   14003bd1d:	call   QWORD PTR [rip+0x191d]        # 0x14003d640
   14003bd23:	mov    rax,QWORD PTR [rsp+0x40]
   14003bd28:	lea    r8,[rsp+0x40]
   14003bd2d:	movups xmm0,XMMWORD PTR [rbx]
   14003bd30:	mov    edx,0x10
   14003bd35:	mov    QWORD PTR [rsp+0x60],rax
   14003bd3a:	mov    r9d,edx
   14003bd3d:	lea    rcx,[rsp+0x50]
   14003bd42:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14003bd48:	call   QWORD PTR [rip+0x18f2]        # 0x14003d640
   14003bd4e:	mov    rcx,QWORD PTR [rip+0x9c3b]        # 0x140045990
   14003bd55:	lea    r8,[rsp+0x50]
   14003bd5a:	and    QWORD PTR [rsp+0x20],0x0
   14003bd60:	mov    r9d,0x18
   14003bd66:	xor    edx,edx
   14003bd68:	call   QWORD PTR [rip+0x19aa]        # 0x14003d718
   14003bd6e:	mov    rcx,QWORD PTR [rsp+0x68]
   14003bd73:	xor    rcx,rsp
   14003bd76:	call   0x1400141d0
   14003bd7b:	add    rsp,0x70
   14003bd7f:	pop    rbx
   14003bd80:	ret    

Disassembly of section .imrsiv:

000000014003c000 <.imrsiv>:
   14003c000:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000014003d000 <.rdata>:
   14003d000:	adc    bh,0x4
   14003d003:	add    BYTE PTR [rax],al
   14003d005:	add    BYTE PTR [rax],al
   14003d007:	add    BYTE PTR [rsi+0x4d7],bl
	...
   14003d015:	add    BYTE PTR [rax],al
   14003d017:	add    dl,ch
   14003d019:	mov    DWORD PTR [rax+rax*1],0x0
   14003d020:	clc    
   14003d021:	mov    DWORD PTR [rax+rax*1],0x0
   14003d028:	add    al,0xc8
   14003d02a:	add    al,0x0
   14003d02c:	add    BYTE PTR [rax],al
   14003d02e:	add    BYTE PTR [rax],al
   14003d030:	sbb    cl,al
   14003d032:	add    al,0x0
   14003d034:	add    BYTE PTR [rax],al
   14003d036:	add    BYTE PTR [rax],al
   14003d038:	sub    al,cl
   14003d03a:	add    al,0x0
   14003d03c:	add    BYTE PTR [rax],al
   14003d03e:	add    BYTE PTR [rax],al
   14003d040:	ds enter 0x4,0x0
   14003d045:	add    BYTE PTR [rax],al
   14003d047:	add    BYTE PTR [rdx-0x38],bl
   14003d04a:	add    al,0x0
   14003d04c:	add    BYTE PTR [rax],al
   14003d04e:	add    BYTE PTR [rax],al
   14003d050:	outs   dx,BYTE PTR ds:[rsi]
   14003d051:	enter  0x4,0x0
   14003d055:	add    BYTE PTR [rax],al
   14003d057:	add    BYTE PTR [rsi-0x38],bh
   14003d05a:	add    al,0x0
   14003d05c:	add    BYTE PTR [rax],al
   14003d05e:	add    BYTE PTR [rax],al
   14003d060:	xchg   esp,eax
   14003d061:	enter  0x4,0x0
   14003d065:	add    BYTE PTR [rax],al
   14003d067:	add    BYTE PTR [rax+0x4c8],ch
   14003d06d:	add    BYTE PTR [rax],al
   14003d06f:	add    BYTE PTR [rsi+0x4c8],dh
   14003d075:	add    BYTE PTR [rax],al
   14003d077:	add    dl,cl
   14003d079:	enter  0x4,0x0
   14003d07d:	add    BYTE PTR [rax],al
   14003d07f:	add    ah,bl
   14003d081:	enter  0x4,0x0
   14003d085:	add    BYTE PTR [rax],al
   14003d087:	add    dh,ch
   14003d089:	enter  0x4,0x0
   14003d08d:	add    BYTE PTR [rax],al
   14003d08f:	add    dh,bh
   14003d091:	enter  0x4,0x0
   14003d095:	add    BYTE PTR [rax],al
   14003d097:	add    BYTE PTR [rdx],cl
   14003d099:	leave  
   14003d09a:	add    al,0x0
   14003d09c:	add    BYTE PTR [rax],al
   14003d09e:	add    BYTE PTR [rax],al
   14003d0a0:	es leave 
   14003d0a2:	add    al,0x0
   14003d0a4:	add    BYTE PTR [rax],al
   14003d0a6:	add    BYTE PTR [rax],al
   14003d0a8:	cmp    cl,cl
   14003d0aa:	add    al,0x0
   14003d0ac:	add    BYTE PTR [rax],al
   14003d0ae:	add    BYTE PTR [rax],al
   14003d0b0:	faddp  st(7),st
   14003d0b2:	add    al,0x0
   14003d0b4:	add    BYTE PTR [rax],al
   14003d0b6:	add    BYTE PTR [rax],al
   14003d0b8:	(bad)  
   14003d0b9:	leave  
   14003d0ba:	add    al,0x0
   14003d0bc:	add    BYTE PTR [rax],al
   14003d0be:	add    BYTE PTR [rax],al
   14003d0c0:	je     0x14003d08b
   14003d0c2:	add    al,0x0
   14003d0c4:	add    BYTE PTR [rax],al
   14003d0c6:	add    BYTE PTR [rax],al
   14003d0c8:	test   cl,cl
   14003d0ca:	add    al,0x0
   14003d0cc:	add    BYTE PTR [rax],al
   14003d0ce:	add    BYTE PTR [rax],al
   14003d0d0:	loopne 0x14003d0a9
   14003d0d2:	add    al,0x0
   14003d0d4:	add    BYTE PTR [rax],al
   14003d0d6:	add    BYTE PTR [rax],al
   14003d0d8:	int3   
   14003d0d9:	xlat   BYTE PTR ds:[rbx]
   14003d0da:	add    al,0x0
   14003d0dc:	add    BYTE PTR [rax],al
   14003d0de:	add    BYTE PTR [rax],al
   14003d0e0:	rol    bh,cl
   14003d0e2:	add    al,0x0
   14003d0e4:	add    BYTE PTR [rax],al
   14003d0e6:	add    BYTE PTR [rax],al
   14003d0e8:	ret    0x4c7
   14003d0eb:	add    BYTE PTR [rax],al
   14003d0ed:	add    BYTE PTR [rax],al
   14003d0ef:	add    BYTE PTR [rdi+rax*8+0x4],ch
   14003d0f6:	add    BYTE PTR [rax],al
   14003d0f8:	cwde   
   14003d0f9:	mov    DWORD PTR [rax+rax*1],0x0
   14003d100:	test   bh,al
   14003d102:	add    al,0x0
   14003d104:	add    BYTE PTR [rax],al
   14003d106:	add    BYTE PTR [rax],al
   14003d108:	jbe    0x14003d0d1
   14003d10a:	add    al,0x0
   14003d10c:	add    BYTE PTR [rax],al
   14003d10e:	add    BYTE PTR [rax],al
   14003d110:	rex.WRX leave 
   14003d112:	add    al,0x0
   14003d114:	add    BYTE PTR [rax],al
   14003d116:	add    BYTE PTR [rax],al
   14003d118:	push   0x4c7
	...
   14003d125:	add    BYTE PTR [rax],al
   14003d127:	add    ah,bl
   14003d129:	rol    DWORD PTR [rax+rax*1],cl
   14003d12c:	add    BYTE PTR [rax],al
   14003d12e:	add    BYTE PTR [rax],al
   14003d130:	rol    BYTE PTR cs:[rax+rax*1],1
	...
   14003d140:	movabs al,ds:0x88000000000004d8
   14003d149:	fadd   DWORD PTR [rax+rax*1]
	...
   14003d158:	jbe    0x14003d12d
   14003d15a:	add    al,0x0
   14003d15c:	add    BYTE PTR [rax],al
   14003d15e:	add    BYTE PTR [rax],al
   14003d160:	pop    rdx
   14003d161:	rol    DWORD PTR [rax+rax*1],cl
   14003d164:	add    BYTE PTR [rax],al
   14003d166:	add    BYTE PTR [rax],al
   14003d168:	adc    ch,cl
   14003d16a:	add    al,0x0
   14003d16c:	add    BYTE PTR [rax],al
   14003d16e:	add    BYTE PTR [rax],al
   14003d170:	rex.WRX fadd DWORD PTR [rax+r8*1]
   14003d174:	add    BYTE PTR [rax],al
   14003d176:	add    BYTE PTR [rax],al
   14003d178:	fmul   st(7),st
   14003d17a:	add    al,0x0
	...
   14003d188:	sbb    dl,dl
   14003d18a:	add    al,0x0
   14003d18c:	add    BYTE PTR [rax],al
   14003d18e:	add    BYTE PTR [rax],al
   14003d190:	sub    dl,dl
   14003d192:	add    al,0x0
   14003d194:	add    BYTE PTR [rax],al
   14003d196:	add    BYTE PTR [rax],al
   14003d198:	(bad)  
   14003d199:	rol    BYTE PTR [rax+rax*1],cl
	...
   14003d1a8:	add    cl,ch
   14003d1aa:	add    al,0x0
	...
   14003d1b8:	cmp    dl,bl
   14003d1ba:	add    al,0x0
   14003d1bc:	add    BYTE PTR [rax],al
   14003d1be:	add    BYTE PTR [rax],al
   14003d1c0:	sub    bl,dl
   14003d1c2:	add    al,0x0
   14003d1c4:	add    BYTE PTR [rax],al
   14003d1c6:	add    BYTE PTR [rax],al
   14003d1c8:	mov    al,0xd0
   14003d1ca:	add    al,0x0
   14003d1cc:	add    BYTE PTR [rax],al
   14003d1ce:	add    BYTE PTR [rax],al
   14003d1d0:	not    dl
   14003d1d2:	add    al,0x0
   14003d1d4:	add    BYTE PTR [rax],al
   14003d1d6:	add    BYTE PTR [rax],al
   14003d1d8:	sbb    al,0xd3
   14003d1da:	add    al,0x0
   14003d1dc:	add    BYTE PTR [rax],al
   14003d1de:	add    BYTE PTR [rax],al
   14003d1e0:	adc    bl,dl
   14003d1e2:	add    al,0x0
   14003d1e4:	add    BYTE PTR [rax],al
   14003d1e6:	add    BYTE PTR [rax],al
   14003d1e8:	add    dl,bl
   14003d1ea:	add    al,0x0
	...
   14003d1f8:	pop    rsi
   14003d1f9:	fadd   DWORD PTR [rax+rax*1]
   14003d1fc:	add    BYTE PTR [rax],al
   14003d1fe:	add    BYTE PTR [rax],al
   14003d200:	ins    BYTE PTR es:[rdi],dx
   14003d201:	fadd   DWORD PTR [rax+rax*1]
	...
   14003d210:	lods   al,BYTE PTR ds:[rsi]
   14003d211:	(bad)  
   14003d212:	add    al,0x0
   14003d214:	add    BYTE PTR [rax],al
   14003d216:	add    BYTE PTR [rax],al
   14003d218:	mov    ss,esi
   14003d21a:	add    al,0x0
	...
   14003d228:	movabs ds:0x1a000000000004cf,al
   14003d231:	rol    BYTE PTR [rax+rax*1],1
   14003d234:	add    BYTE PTR [rax],al
   14003d236:	add    BYTE PTR [rax],al
   14003d238:	mov    ah,0xcf
   14003d23a:	add    al,0x0
   14003d23c:	add    BYTE PTR [rax],al
   14003d23e:	add    BYTE PTR [rax],al
   14003d240:	out    dx,al
   14003d241:	iret   
   14003d242:	add    al,0x0
   14003d244:	add    BYTE PTR [rax],al
   14003d246:	add    BYTE PTR [rax],al
   14003d248:	(bad)  
   14003d249:	rol    BYTE PTR [rax+rax*1],1
   14003d24c:	add    BYTE PTR [rax],al
   14003d24e:	add    BYTE PTR [rax],al
   14003d250:	add    al,0xd0
   14003d252:	add    al,0x0
   14003d254:	add    BYTE PTR [rax],al
   14003d256:	add    BYTE PTR [rax],al
   14003d258:	(bad)  
   14003d259:	int    0x4
	...
   14003d267:	add    dh,ah
   14003d269:	rol    BYTE PTR [rax+rax*1],cl
	...
   14003d278:	outs   dx,BYTE PTR ds:[rsi]
   14003d279:	int    0x4
	...
   14003d287:	add    dh,dh
   14003d289:	rol    BYTE PTR [rax+rax*1],1
	...
   14003d298:	xchg   esp,eax
   14003d299:	rol    DWORD PTR [rax+rax*1],cl
   14003d29c:	add    BYTE PTR [rax],al
   14003d29e:	add    BYTE PTR [rax],al
   14003d2a0:	jl     0x14003d271
   14003d2a2:	add    al,0x0
   14003d2a4:	add    BYTE PTR [rax],al
   14003d2a6:	add    BYTE PTR [rax],al
   14003d2a8:	add    al,0xd2
   14003d2aa:	add    al,0x0
   14003d2ac:	add    BYTE PTR [rax],al
   14003d2ae:	add    BYTE PTR [rax],al
   14003d2b0:	push   0x4cf
   14003d2b5:	add    BYTE PTR [rax],al
   14003d2b7:	add    ah,bl
   14003d2b9:	rol    DWORD PTR [rax+rax*1],1
   14003d2bc:	add    BYTE PTR [rax],al
   14003d2be:	add    BYTE PTR [rax],al
   14003d2c0:	pushf  
   14003d2c1:	rol    DWORD PTR [rax+rax*1],1
   14003d2c4:	add    BYTE PTR [rax],al
   14003d2c6:	add    BYTE PTR [rax],al
   14003d2c8:	pop    rsp
   14003d2c9:	rol    DWORD PTR [rax+rax*1],1
   14003d2cc:	add    BYTE PTR [rax],al
   14003d2ce:	add    BYTE PTR [rax],al
   14003d2d0:	rex.R rol DWORD PTR [rax+rax*1],1
   14003d2d4:	add    BYTE PTR [rax],al
   14003d2d6:	add    BYTE PTR [rax],al
   14003d2d8:	rol    BYTE PTR ss:[rax+rax*1],cl
   14003d2dc:	add    BYTE PTR [rax],al
   14003d2de:	add    BYTE PTR [rax],al
   14003d2e0:	push   rsp
   14003d2e1:	iret   
   14003d2e2:	add    al,0x0
   14003d2e4:	add    BYTE PTR [rax],al
   14003d2e6:	add    BYTE PTR [rax],al
   14003d2e8:	nop
   14003d2e9:	rol    BYTE PTR [rax+rax*1],1
   14003d2ec:	add    BYTE PTR [rax],al
   14003d2ee:	add    BYTE PTR [rax],al
   14003d2f0:	rol    QWORD PTR [rax+rax*1],cl
   14003d2f4:	add    BYTE PTR [rax],al
   14003d2f6:	add    BYTE PTR [rax],al
   14003d2f8:	(bad)  
   14003d2f9:	iret   
   14003d2fa:	add    al,0x0
   14003d2fc:	add    BYTE PTR [rax],al
   14003d2fe:	add    BYTE PTR [rax],al
   14003d300:	nop
   14003d301:	iret   
   14003d302:	add    al,0x0
	...
   14003d310:	test   al,0xd3
   14003d312:	add    al,0x0
	...
   14003d320:	rex.R rol BYTE PTR [rax+rax*1],cl
   14003d324:	add    BYTE PTR [rax],al
   14003d326:	add    BYTE PTR [rax],al
   14003d328:	jbe    0x14003d2fc
   14003d32a:	add    al,0x0
   14003d32c:	add    BYTE PTR [rax],al
   14003d32e:	add    BYTE PTR [rax],al
   14003d330:	pop    rsp
   14003d331:	rol    BYTE PTR [rax+rax*1],cl
	...
   14003d340:	pop    rsi
   14003d341:	rol    BYTE PTR [rax+rax*1],1
   14003d344:	add    BYTE PTR [rax],al
   14003d346:	add    BYTE PTR [rax],al
   14003d348:	jl     0x14003d31a
   14003d34a:	add    al,0x0
   14003d34c:	add    BYTE PTR [rax],al
   14003d34e:	add    BYTE PTR [rax],al
   14003d350:	hlt    
   14003d351:	rol    DWORD PTR [rax+rax*1],1
   14003d354:	add    BYTE PTR [rax],al
   14003d356:	add    BYTE PTR [rax],al
   14003d358:	outs   dx,BYTE PTR ds:[rsi]
   14003d359:	rol    BYTE PTR [rax+rax*1],1
	...
   14003d368:	(bad)  
   14003d369:	(bad)  
   14003d36a:	add    al,0x0
	...
   14003d378:	mov    dl,cl
   14003d37a:	add    al,0x0
	...
   14003d388:	sahf   
   14003d389:	int3   
   14003d38a:	add    al,0x0
   14003d38c:	add    BYTE PTR [rax],al
   14003d38e:	add    BYTE PTR [rax],al
   14003d390:	or     cl,dl
   14003d392:	add    al,0x0
   14003d394:	add    BYTE PTR [rax],al
   14003d396:	add    BYTE PTR [rax],al
   14003d398:	and    dl,cl
   14003d39a:	add    al,0x0
   14003d39c:	add    BYTE PTR [rax],al
   14003d39e:	add    BYTE PTR [rax],al
   14003d3a0:	rol    DWORD PTR ss:[rax+rax*1],1
   14003d3a4:	add    BYTE PTR [rax],al
   14003d3a6:	add    BYTE PTR [rax],al
   14003d3a8:	rex.R rol BYTE PTR [rax+rax*1],1
   14003d3ac:	add    BYTE PTR [rax],al
   14003d3ae:	add    BYTE PTR [rax],al
   14003d3b0:	jb     0x14003d383
   14003d3b2:	add    al,0x0
   14003d3b4:	add    BYTE PTR [rax],al
   14003d3b6:	add    BYTE PTR [rax],al
   14003d3b8:	mov    edx,0x4cc
   14003d3bd:	add    BYTE PTR [rax],al
   14003d3bf:	add    ah,bl
   14003d3c1:	rol    BYTE PTR [rax+rax*1],1
   14003d3c4:	add    BYTE PTR [rax],al
   14003d3c6:	add    BYTE PTR [rax],al
   14003d3c8:	ror    ah,cl
   14003d3ca:	add    al,0x0
   14003d3cc:	add    BYTE PTR [rax],al
   14003d3ce:	add    BYTE PTR [rax],al
   14003d3d0:	lods   al,BYTE PTR ds:[rsi]
   14003d3d1:	rol    DWORD PTR [rax+rax*1],1
   14003d3d4:	add    BYTE PTR [rax],al
   14003d3d6:	add    BYTE PTR [rax],al
   14003d3d8:	(bad)  
   14003d3d9:	int3   
   14003d3da:	add    al,0x0
   14003d3dc:	add    BYTE PTR [rax],al
   14003d3de:	add    BYTE PTR [rax],al
   14003d3e0:	and    ch,cl
   14003d3e2:	add    al,0x0
   14003d3e4:	add    BYTE PTR [rax],al
   14003d3e6:	add    BYTE PTR [rax],al
   14003d3e8:	xor    ch,cl
   14003d3ea:	add    al,0x0
   14003d3ec:	add    BYTE PTR [rax],al
   14003d3ee:	add    BYTE PTR [rax],al
   14003d3f0:	cmp    al,0xcd
   14003d3f2:	add    al,0x0
   14003d3f4:	add    BYTE PTR [rax],al
   14003d3f6:	add    BYTE PTR [rax],al
   14003d3f8:	rex.WX int 0x4
   14003d3fb:	add    BYTE PTR [rax],al
   14003d3fd:	add    BYTE PTR [rax],al
   14003d3ff:	add    BYTE PTR [rax-0x28],bh
   14003d402:	add    al,0x0
	...
   14003d410:	ret    0x4d3
   14003d413:	add    BYTE PTR [rax],al
   14003d415:	add    BYTE PTR [rax],al
   14003d417:	add    BYTE PTR [rdx-0x2f],bh
   14003d41a:	add    al,0x0
	...
   14003d428:	(bad)  
   14003d429:	fadd   DWORD PTR [rax+rax*1]
   14003d42c:	add    BYTE PTR [rax],al
   14003d42e:	add    BYTE PTR [rax],al
   14003d430:	(bad)  
   14003d431:	(bad)  
   14003d432:	add    al,0x0
   14003d434:	add    BYTE PTR [rax],al
   14003d436:	add    BYTE PTR [rax],al
   14003d438:	mov    esi,0x4d6
	...
   14003d445:	add    BYTE PTR [rax],al
   14003d447:	add    dl,al
   14003d449:	rol    BYTE PTR [rax+rax*1],cl
   14003d44c:	add    BYTE PTR [rax],al
   14003d44e:	add    BYTE PTR [rax],al
   14003d450:	stos   BYTE PTR es:[rdi],al
   14003d451:	rol    BYTE PTR [rax+rax*1],cl
   14003d454:	add    BYTE PTR [rax],al
   14003d456:	add    BYTE PTR [rax],al
   14003d458:	mov    ss,edx
   14003d45a:	add    al,0x0
	...
   14003d468:	or     al,0xce
   14003d46a:	add    al,0x0
   14003d46c:	add    BYTE PTR [rax],al
   14003d46e:	add    BYTE PTR [rax],al
   14003d470:	enter  0x4d1,0x0
   14003d474:	add    BYTE PTR [rax],al
   14003d476:	add    BYTE PTR [rax],al
   14003d478:	and    dh,cl
   14003d47a:	add    al,0x0
   14003d47c:	add    BYTE PTR [rax],al
   14003d47e:	add    BYTE PTR [rax],al
   14003d480:	fmul   st,st(5)
   14003d482:	add    al,0x0
   14003d484:	add    BYTE PTR [rax],al
   14003d486:	add    BYTE PTR [rax],al
   14003d488:	ds (bad) 
   14003d48a:	add    al,0x0
   14003d48c:	add    BYTE PTR [rax],al
   14003d48e:	add    BYTE PTR [rax],al
   14003d490:	add    cl,dh
   14003d492:	add    al,0x0
   14003d494:	add    BYTE PTR [rax],al
   14003d496:	add    BYTE PTR [rax],al
   14003d498:	jp     0x14003d468
   14003d49a:	add    al,0x0
   14003d49c:	add    BYTE PTR [rax],al
   14003d49e:	add    BYTE PTR [rax],al
   14003d4a0:	cwde   
   14003d4a1:	(bad)  
   14003d4a2:	add    al,0x0
   14003d4a4:	add    BYTE PTR [rax],al
   14003d4a6:	add    BYTE PTR [rax],al
   14003d4a8:	mov    ah,0xce
   14003d4aa:	add    al,0x0
   14003d4ac:	add    BYTE PTR [rax],al
   14003d4ae:	add    BYTE PTR [rax],al
   14003d4b0:	test   al,0xcd
   14003d4b2:	add    al,0x0
   14003d4b4:	add    BYTE PTR [rax],al
   14003d4b6:	add    BYTE PTR [rax],al
   14003d4b8:	repnz int 0x4
   14003d4bb:	add    BYTE PTR [rax],al
   14003d4bd:	add    BYTE PTR [rax],al
   14003d4bf:	add    dh,ah
   14003d4c1:	int    0x4
   14003d4c3:	add    BYTE PTR [rax],al
   14003d4c5:	add    BYTE PTR [rax],al
   14003d4c7:	add    al,dl
   14003d4c9:	(bad)  
   14003d4ca:	add    al,0x0
   14003d4cc:	add    BYTE PTR [rax],al
   14003d4ce:	add    BYTE PTR [rax],al
   14003d4d0:	or     ch,0x4
   14003d4d3:	add    BYTE PTR [rax],al
   14003d4d5:	add    BYTE PTR [rax],al
   14003d4d7:	add    BYTE PTR [rax+0x4cd],bl
   14003d4dd:	add    BYTE PTR [rax],al
   14003d4df:	add    BYTE PTR [rsi+0x4cd],bh
   14003d4e5:	add    BYTE PTR [rax],al
   14003d4e7:	add    ah,ch
   14003d4e9:	(bad)  
   14003d4ea:	add    al,0x0
   14003d4ec:	add    BYTE PTR [rax],al
   14003d4ee:	add    BYTE PTR [rax],al
   14003d4f0:	or     al,0xcf
   14003d4f2:	add    al,0x0
   14003d4f4:	add    BYTE PTR [rax],al
   14003d4f6:	add    BYTE PTR [rax],al
   14003d4f8:	pop    rsp
   14003d4f9:	(bad)  
   14003d4fa:	add    al,0x0
   14003d4fc:	add    BYTE PTR [rax],al
   14003d4fe:	add    BYTE PTR [rax],al
   14003d500:	(bad)  
   14003d501:	iret   
   14003d502:	add    al,0x0
   14003d504:	add    BYTE PTR [rax],al
   14003d506:	add    BYTE PTR [rax],al
   14003d508:	enter  0x4cd,0x0
   14003d50c:	add    BYTE PTR [rax],al
   14003d50e:	add    BYTE PTR [rax],al
   14003d510:	ds iret 
   14003d512:	add    al,0x0
	...
   14003d520:	mov    cl,bl
   14003d522:	add    al,0x0
   14003d524:	add    BYTE PTR [rax],al
   14003d526:	add    BYTE PTR [rax],al
   14003d528:	or     bl,0x4
   14003d52b:	add    BYTE PTR [rax],al
   14003d52d:	add    BYTE PTR [rax],al
   14003d52f:	add    BYTE PTR [rax-0x35],bh
   14003d532:	add    al,0x0
   14003d534:	add    BYTE PTR [rax],al
   14003d536:	add    BYTE PTR [rax],al
   14003d538:	lods   al,BYTE PTR ds:[rsi]
   14003d539:	retf   
   14003d53a:	add    al,0x0
   14003d53c:	add    BYTE PTR [rax],al
   14003d53e:	add    BYTE PTR [rax],al
   14003d540:	(bad)  
   14003d541:	retf   
   14003d542:	add    al,0x0
   14003d544:	add    BYTE PTR [rax],al
   14003d546:	add    BYTE PTR [rax],al
   14003d548:	rex retf 
   14003d54a:	add    al,0x0
   14003d54c:	add    BYTE PTR [rax],al
   14003d54e:	add    BYTE PTR [rax],al
   14003d550:	rex.WR fld DWORD PTR [rax+rax*1]
   14003d554:	add    BYTE PTR [rax],al
   14003d556:	add    BYTE PTR [rax],al
   14003d558:	mov    cs,edx
   14003d55a:	add    al,0x0
   14003d55c:	add    BYTE PTR [rax],al
   14003d55e:	add    BYTE PTR [rax],al
   14003d560:	sub    cl,bl
   14003d562:	add    al,0x0
   14003d564:	add    BYTE PTR [rax],al
   14003d566:	add    BYTE PTR [rax],al
   14003d568:	and    bl,cl
   14003d56a:	add    al,0x0
   14003d56c:	add    BYTE PTR [rax],al
   14003d56e:	add    BYTE PTR [rax],al
   14003d570:	or     bl,cl
   14003d572:	add    al,0x0
   14003d574:	add    BYTE PTR [rax],al
   14003d576:	add    BYTE PTR [rax],al
   14003d578:	fld    DWORD PTR [rax+r8*1]
   14003d57c:	add    BYTE PTR [rax],al
   14003d57e:	add    BYTE PTR [rax],al
   14003d580:	sub    al,0xd9
   14003d582:	add    al,0x0
   14003d584:	add    BYTE PTR [rax],al
   14003d586:	add    BYTE PTR [rax],al
   14003d588:	(bad)  
   14003d589:	fld    DWORD PTR [rax+rax*1]
   14003d58c:	add    BYTE PTR [rax],al
   14003d58e:	add    BYTE PTR [rax],al
   14003d590:	cld    
   14003d591:	retf   0x4
   14003d594:	add    BYTE PTR [rax],al
   14003d596:	add    BYTE PTR [rax],al
   14003d598:	call   0x14003da67
   14003d59d:	add    BYTE PTR [rax],al
   14003d59f:	add    BYTE PTR [rbx+rcx*8],dh
   14003d5a2:	add    al,0x0
   14003d5a4:	add    BYTE PTR [rax],al
   14003d5a6:	add    BYTE PTR [rax],al
   14003d5a8:	stos   BYTE PTR es:[rdi],al
   14003d5a9:	retf   0x4
   14003d5ac:	add    BYTE PTR [rax],al
   14003d5ae:	add    BYTE PTR [rax],al
   14003d5b0:	test   dl,cl
   14003d5b2:	add    al,0x0
   14003d5b4:	add    BYTE PTR [rax],al
   14003d5b6:	add    BYTE PTR [rax],al
   14003d5b8:	js     0x14003d584
   14003d5ba:	add    al,0x0
   14003d5bc:	add    BYTE PTR [rax],al
   14003d5be:	add    BYTE PTR [rax],al
   14003d5c0:	outs   dx,BYTE PTR ds:[rsi]
   14003d5c1:	retf   0x4
   14003d5c4:	add    BYTE PTR [rax],al
   14003d5c6:	add    BYTE PTR [rax],al
   14003d5c8:	(bad)  
   14003d5c9:	retf   0x4
   14003d5cc:	add    BYTE PTR [rax],al
   14003d5ce:	add    BYTE PTR [rax],al
   14003d5d0:	push   rdx
   14003d5d1:	retf   0x4
   14003d5d4:	add    BYTE PTR [rax],al
   14003d5d6:	add    BYTE PTR [rax],al
   14003d5d8:	rex.WX retf 0x4
   14003d5dc:	add    BYTE PTR [rax],al
   14003d5de:	add    BYTE PTR [rax],al
   14003d5e0:	ds retf 0x4
   14003d5e4:	add    BYTE PTR [rax],al
   14003d5e6:	add    BYTE PTR [rax],al
   14003d5e8:	xor    al,0xca
   14003d5ea:	add    al,0x0
   14003d5ec:	add    BYTE PTR [rax],al
   14003d5ee:	add    BYTE PTR [rax],al
   14003d5f0:	sub    dl,cl
   14003d5f2:	add    al,0x0
   14003d5f4:	add    BYTE PTR [rax],al
   14003d5f6:	add    BYTE PTR [rax],al
   14003d5f8:	sbb    al,0xca
   14003d5fa:	add    al,0x0
   14003d5fc:	add    BYTE PTR [rax],al
   14003d5fe:	add    BYTE PTR [rax],al
   14003d600:	adc    cl,dl
   14003d602:	add    al,0x0
   14003d604:	add    BYTE PTR [rax],al
   14003d606:	add    BYTE PTR [rax],al
   14003d608:	or     dl,cl
   14003d60a:	add    al,0x0
   14003d60c:	add    BYTE PTR [rax],al
   14003d60e:	add    BYTE PTR [rax],al
   14003d610:	cld    
   14003d611:	leave  
   14003d612:	add    al,0x0
   14003d614:	add    BYTE PTR [rax],al
   14003d616:	add    BYTE PTR [rax],al
   14003d618:	out    dx,al
   14003d619:	leave  
   14003d61a:	add    al,0x0
   14003d61c:	add    BYTE PTR [rax],al
   14003d61e:	add    BYTE PTR [rax],al
   14003d620:	fmul   st(1),st
   14003d622:	add    al,0x0
   14003d624:	add    BYTE PTR [rax],al
   14003d626:	add    BYTE PTR [rax],al
   14003d628:	ror    cl,1
   14003d62a:	add    al,0x0
   14003d62c:	add    BYTE PTR [rax],al
   14003d62e:	add    BYTE PTR [rax],al
   14003d630:	(bad)  
   14003d631:	leave  
   14003d632:	add    al,0x0
   14003d634:	add    BYTE PTR [rax],al
   14003d636:	add    BYTE PTR [rax],al
   14003d638:	mov    edx,0x4c9
   14003d63d:	add    BYTE PTR [rax],al
   14003d63f:	add    BYTE PTR [rsi+0x4c9],ch
   14003d645:	add    BYTE PTR [rax],al
   14003d647:	add    BYTE PTR [rsi+0x4c9],ah
   14003d64d:	add    BYTE PTR [rax],al
   14003d64f:	add    BYTE PTR [rcx+rcx*8+0x4],bl
   14003d656:	add    BYTE PTR [rax],al
   14003d658:	hlt    
   14003d659:	xlat   BYTE PTR ds:[rbx]
   14003d65a:	add    al,0x0
   14003d65c:	add    BYTE PTR [rax],al
   14003d65e:	add    BYTE PTR [rax],al
   14003d660:	(bad)  
   14003d661:	xlat   BYTE PTR ds:[rbx]
   14003d662:	add    al,0x0
   14003d664:	add    BYTE PTR [rax],al
   14003d666:	add    BYTE PTR [rax],al
   14003d668:	or     al,bl
   14003d66a:	add    al,0x0
   14003d66c:	add    BYTE PTR [rax],al
   14003d66e:	add    BYTE PTR [rax],al
   14003d670:	adc    al,bl
   14003d672:	add    al,0x0
   14003d674:	add    BYTE PTR [rax],al
   14003d676:	add    BYTE PTR [rax],al
   14003d678:	fmulp  st(2),st
   14003d67a:	add    al,0x0
   14003d67c:	add    BYTE PTR [rax],al
   14003d67e:	add    BYTE PTR [rax],al
   14003d680:	cwde   
   14003d681:	retf   
   14003d682:	add    al,0x0
   14003d684:	add    BYTE PTR [rax],al
   14003d686:	add    BYTE PTR [rax],al
   14003d688:	pushf  
   14003d689:	retf   0x4
   14003d68c:	add    BYTE PTR [rax],al
   14003d68e:	add    BYTE PTR [rax],al
   14003d690:	(bad)  
   14003d691:	retf   0x4
   14003d694:	add    BYTE PTR [rax],al
   14003d696:	add    BYTE PTR [rax],al
   14003d698:	(bad)  
   14003d699:	retf   0x4
   14003d69c:	add    BYTE PTR [rax],al
   14003d69e:	add    BYTE PTR [rax],al
   14003d6a0:	mov    esp,0x4ca
   14003d6a5:	add    BYTE PTR [rax],al
   14003d6a7:	add    BYTE PTR [rdx+0x4cb],ah
   14003d6ad:	add    BYTE PTR [rax],al
   14003d6af:	add    BYTE PTR [rsi-0x27],dl
   14003d6b2:	add    al,0x0
	...
   14003d6c0:	sbb    al,bl
   14003d6c2:	add    al,0x0
   14003d6c4:	add    BYTE PTR [rax],al
   14003d6c6:	add    BYTE PTR [rax],al
   14003d6c8:	or     ah,0x4
   14003d6cb:	add    BYTE PTR [rax],al
   14003d6cd:	add    BYTE PTR [rax],al
   14003d6cf:	add    BYTE PTR [rsi-0x34],ah
   14003d6d2:	add    al,0x0
   14003d6d4:	add    BYTE PTR [rax],al
   14003d6d6:	add    BYTE PTR [rax],al
   14003d6d8:	push   rdx
   14003d6d9:	int3   
   14003d6da:	add    al,0x0
   14003d6dc:	add    BYTE PTR [rax],al
   14003d6de:	add    BYTE PTR [rax],al
   14003d6e0:	ds int3 
   14003d6e2:	add    al,0x0
   14003d6e4:	add    BYTE PTR [rax],al
   14003d6e6:	add    BYTE PTR [rax],al
   14003d6e8:	cs int3 
   14003d6ea:	add    al,0x0
   14003d6ec:	add    BYTE PTR [rax],al
   14003d6ee:	add    BYTE PTR [rax],al
   14003d6f0:	adc    cl,ah
   14003d6f2:	add    al,0x0
   14003d6f4:	add    BYTE PTR [rax],al
   14003d6f6:	add    BYTE PTR [rax],al
   14003d6f8:	cli    
   14003d6f9:	retf   
   14003d6fa:	add    al,0x0
   14003d6fc:	add    BYTE PTR [rax],al
   14003d6fe:	add    BYTE PTR [rax],al
   14003d700:	loopne 0x14003d6cd
   14003d702:	add    al,0x0
   14003d704:	add    BYTE PTR [rax],al
   14003d706:	add    BYTE PTR [rax],al
   14003d708:	int3   
   14003d709:	retf   
   14003d70a:	add    al,0x0
   14003d70c:	add    BYTE PTR [rax],al
   14003d70e:	add    BYTE PTR [rax],al
   14003d710:	mov    dh,0xcb
   14003d712:	add    al,0x0
   14003d714:	add    BYTE PTR [rax],al
   14003d716:	add    BYTE PTR [rax],al
   14003d718:	xor    al,0xd8
   14003d71a:	add    al,0x0
	...
   14003d728:	lock fild WORD PTR [rax]
   14003d72b:	rex add DWORD PTR [rax],eax
   14003d72e:	add    BYTE PTR [rax],al
   14003d730:	and    BYTE PTR [rdi+0x1],dl
   14003d733:	rex add DWORD PTR [rax],eax
	...
   14003d73e:	add    BYTE PTR [rax],al
   14003d740:	sar    BYTE PTR [rsi],1
   14003d742:	add    DWORD PTR [rax+0x1],eax
   14003d745:	add    BYTE PTR [rax],al
   14003d747:	add    BYTE PTR [rax+0x11],ah
   14003d74a:	add    BYTE PTR [rax+0x1],al
   14003d74d:	add    BYTE PTR [rax],al
   14003d74f:	add    BYTE PTR [rax+0x1400011],al
   14003d755:	add    BYTE PTR [rax],al
   14003d757:	add    BYTE PTR [rax+0x1400011],ah
   14003d75d:	add    BYTE PTR [rax],al
   14003d75f:	add    al,al
   14003d761:	adc    DWORD PTR [rax],eax
   14003d763:	rex add DWORD PTR [rax],eax
   14003d766:	add    BYTE PTR [rax],al
   14003d768:	add    BYTE PTR [rdx],dl
   14003d76a:	add    BYTE PTR [rax+0x1],al
   14003d76d:	add    BYTE PTR [rax],al
   14003d76f:	add    BYTE PTR [rax],ah
   14003d771:	adc    BYTE PTR [rax],al
   14003d773:	rex add DWORD PTR [rax],eax
   14003d776:	add    BYTE PTR [rax],al
   14003d778:	push   rax
   14003d779:	adc    BYTE PTR [rax],al
   14003d77b:	rex add DWORD PTR [rax],eax
   14003d77e:	add    BYTE PTR [rax],al
   14003d780:	add    BYTE PTR [rax],dl
   14003d782:	add    BYTE PTR [rax+0x1],al
   14003d785:	add    BYTE PTR [rax],al
   14003d787:	add    BYTE PTR [rax+0x1400010],ah
   14003d78d:	add    BYTE PTR [rax],al
   14003d78f:	add    BYTE PTR [rax+0x1400010],al
   14003d795:	add    BYTE PTR [rax],al
   14003d797:	add    al,dh
   14003d799:	adc    BYTE PTR [rax],al
   14003d79b:	rex add DWORD PTR [rax],eax
   14003d79e:	add    BYTE PTR [rax],al
   14003d7a0:	rcl    BYTE PTR [rax],1
   14003d7a2:	add    BYTE PTR [rax+0x1],al
   14003d7a5:	add    BYTE PTR [rax],al
   14003d7a7:	add    BYTE PTR [rax],al
   14003d7a9:	adc    DWORD PTR [rax],eax
   14003d7ab:	rex add DWORD PTR [rax],eax
   14003d7ae:	add    BYTE PTR [rax],al
   14003d7b0:	and    BYTE PTR [rcx],dl
   14003d7b2:	add    BYTE PTR [rax+0x1],al
   14003d7b5:	add    BYTE PTR [rax],al
   14003d7b7:	add    BYTE PTR [rax+0x11],al
   14003d7ba:	add    BYTE PTR [rax+0x1],al
   14003d7bd:	add    BYTE PTR [rax],al
   14003d7bf:	add    BYTE PTR [rax+0x12],al
   14003d7c2:	add    BYTE PTR [rax+0x1],al
   14003d7c5:	add    BYTE PTR [rax],al
   14003d7c7:	add    BYTE PTR [rax],ah
   14003d7c9:	adc    al,BYTE PTR [rax]
   14003d7cb:	rex add DWORD PTR [rax],eax
	...
   14003d7de:	add    BYTE PTR [rax],al
   14003d7e0:	lock cmp eax,0x14001
   14003d7e6:	add    BYTE PTR [rax],al
   14003d7e8:	loopne 0x14003d830
   14003d7ea:	add    DWORD PTR [rax+0x1],eax
	...
   14003d7f9:	adc    BYTE PTR [rax],al
   14003d7fb:	add    BYTE PTR [rax],ah
   14003d7fd:	adc    BYTE PTR [rax],al
   14003d7ff:	add    BYTE PTR [rax+0x10],dl
   14003d802:	add    BYTE PTR [rax],al
   14003d804:	adc    BYTE PTR [rax],0x0
   14003d807:	add    BYTE PTR [rax-0x2ffffff0],ah
   14003d80d:	adc    BYTE PTR [rax],al
   14003d80f:	add    al,dh
   14003d811:	adc    BYTE PTR [rax],al
   14003d813:	add    BYTE PTR [rax],al
   14003d815:	adc    DWORD PTR [rax],eax
   14003d817:	add    BYTE PTR [rax],ah
   14003d819:	adc    DWORD PTR [rax],eax
   14003d81b:	add    BYTE PTR [rax+0x11],al
   14003d81e:	add    BYTE PTR [rax],al
   14003d820:	(bad)  
   14003d821:	adc    DWORD PTR [rax],eax
   14003d823:	add    BYTE PTR [rax-0x5fffffef],al
   14003d829:	adc    DWORD PTR [rax],eax
   14003d82b:	add    al,al
   14003d82d:	adc    DWORD PTR [rax],eax
   14003d82f:	add    BYTE PTR [rax],al
   14003d831:	adc    al,BYTE PTR [rax]
   14003d833:	add    BYTE PTR [rax],ah
   14003d835:	adc    al,BYTE PTR [rax]
   14003d837:	add    BYTE PTR [rax+0x12],al
   14003d83a:	add    BYTE PTR [rax],al
   14003d83c:	and    BYTE PTR [rax+rax*1],dl
   14003d83f:	add    al,dh
   14003d841:	push   rax
   14003d842:	add    BYTE PTR [rax],al
   14003d844:	nop
   14003d845:	pop    rdx
   14003d846:	add    BYTE PTR [rax],al
   14003d848:	jo     0x14003d8a5
   14003d84a:	add    BYTE PTR [rax],al
   14003d84c:	nop
   14003d84d:	pop    rbx
   14003d84e:	add    BYTE PTR [rax],al
   14003d850:	mov    al,0x5b
   14003d852:	add    BYTE PTR [rax],al
   14003d854:	push   rax
   14003d855:	pop    rdi
   14003d856:	add    BYTE PTR [rax],al
   14003d858:	(bad)  
   14003d859:	pop    rdi
   14003d85a:	add    BYTE PTR [rax],al
   14003d85c:	add    BYTE PTR [rcx+0x0],ah
   14003d85f:	add    BYTE PTR [rax],dh
   14003d861:	(bad)  
   14003d862:	add    BYTE PTR [rax],al
   14003d864:	loopne 0x14003d8e3
   14003d866:	add    BYTE PTR [rax],al
   14003d868:	xor    BYTE PTR [rsi+0x0],bh
   14003d86b:	add    BYTE PTR [rax+0x7e],al
   14003d86e:	add    BYTE PTR [rax],al
   14003d870:	push   rax
   14003d871:	jle    0x14003d873
   14003d873:	add    BYTE PTR [rax],ah
   14003d875:	add    BYTE PTR [rax],0x0
   14003d878:	xor    al,al
   14003d87a:	add    BYTE PTR [rax],al
   14003d87c:	(bad)  
   14003d87d:	rol    DWORD PTR [rax],0x0
   14003d880:	add    cl,0x0
   14003d883:	add    BYTE PTR [rax-0x1fffff3f],dh
   14003d889:	(bad)  
   14003d88a:	add    BYTE PTR [rax],al
   14003d88c:	push   rax
   14003d88d:	(bad)
   14003d890:	mov    al,0xc6
   14003d892:	add    BYTE PTR [rax],al
   14003d894:	rex mov DWORD PTR [rax],0xc7c000
   14003d89b:	add    al,ah
   14003d89d:	mov    DWORD PTR [rax],0xc84000
   14003d8a3:	add    BYTE PTR [rax-0xfffff34],al
   14003d8a9:	int    0x0
   14003d8ab:	add    BYTE PTR [rax-0x4fffff31],dh
   14003d8b1:	rol    DWORD PTR [rax],1
   14003d8b3:	add    BYTE PTR [rax-0x3fffff2e],al
   14003d8b9:	rol    BYTE PTR [rax],cl
   14003d8bb:	add    al,ah
   14003d8bd:	rol    BYTE PTR [rax],cl
   14003d8bf:	add    BYTE PTR [rax],ah
   14003d8c1:	(bad)  
   14003d8c2:	add    BYTE PTR [rax],al
   14003d8c4:	adc    bh,0x0
   14003d8c7:	add    BYTE PTR [rax-0x27],dl
   14003d8ca:	add    BYTE PTR [rax],al
   14003d8cc:	sbb    cl,0x0
   14003d8cf:	add    BYTE PTR [rax-0x2fffff27],ah
   14003d8d5:	fld    DWORD PTR [rax]
   14003d8d7:	add    al,ah
   14003d8d9:	fld    DWORD PTR [rax]
   14003d8db:	add    BYTE PTR [rax],dl
   14003d8dd:	fiadd  DWORD PTR [rax]
   14003d8df:	add    BYTE PTR [rax],ah
   14003d8e1:	fiadd  DWORD PTR [rax]
   14003d8e3:	add    BYTE PTR [rax+0x700000db],dh
   14003d8e9:	fiadd  WORD PTR [rax]
   14003d8eb:	add    BYTE PTR [rax-0xfffff21],ah
   14003d8f1:	fild   WORD PTR [rax]
   14003d8f3:	add    al,dh
   14003d8f5:	loope  0x14003d8f7
   14003d8f7:	add    BYTE PTR [rax-0x2fffff12],al
   14003d8fd:	lock add BYTE PTR [rax],al
   14003d900:	add    cl,dh
   14003d902:	add    BYTE PTR [rax],al
   14003d904:	shl    bl,0x0
   14003d907:	add    al,dl
   14003d909:	repz add BYTE PTR [rax],al
   14003d90c:	adc    ah,dh
   14003d90e:	add    BYTE PTR [rax],al
   14003d910:	mov    al,0xf4
   14003d912:	add    BYTE PTR [rax],al
   14003d914:	xor    ch,0x0
   14003d917:	add    BYTE PTR [rax-0x3fffff0b],ah
   14003d91d:	cmc    
   14003d91e:	add    BYTE PTR [rax],al
   14003d920:	loopne 0x14003d918
   14003d922:	add    BYTE PTR [rax],al
   14003d924:	nop
   14003d925:	clc    
   14003d926:	add    BYTE PTR [rax],al
   14003d928:	and    cl,bh
   14003d92a:	add    BYTE PTR [rax],al
   14003d92c:	(bad)  
   14003d92d:	stc    
   14003d92e:	add    BYTE PTR [rax],al
   14003d930:	cmp    cl,0x0
   14003d933:	add    BYTE PTR [rax-0x4],al
   14003d936:	add    BYTE PTR [rax],al
   14003d938:	(bad)  
   14003d939:	add    al,0x1
   14003d93b:	add    BYTE PTR [rax+0x10000105],al
   14003d941:	(bad)  
   14003d942:	add    DWORD PTR [rax],eax
   14003d944:	xor    BYTE PTR [rsi],al
   14003d946:	add    DWORD PTR [rax],eax
   14003d948:	nop
   14003d949:	(bad)  
   14003d94a:	add    DWORD PTR [rax],eax
   14003d94c:	lock (bad) 
   14003d94e:	add    DWORD PTR [rax],eax
   14003d950:	adc    BYTE PTR [rax],cl
   14003d952:	add    DWORD PTR [rax],eax
   14003d954:	ror    BYTE PTR [rax],0x1
   14003d957:	add    BYTE PTR [rax+0x30000109],ah
   14003d95d:	or     al,BYTE PTR [rcx]
   14003d95f:	add    BYTE PTR [rax],ah
   14003d961:	or     eax,DWORD PTR [rcx]
   14003d963:	add    al,ah
   14003d965:	or     eax,DWORD PTR [rcx]
   14003d967:	add    BYTE PTR [rax+0xc],ah
   14003d96a:	add    DWORD PTR [rax],eax
   14003d96c:	lock or al,0x1
   14003d96f:	add    BYTE PTR [rax+0xd],al
   14003d972:	add    DWORD PTR [rax],eax
   14003d974:	loopne 0x14003d983
   14003d976:	add    DWORD PTR [rax],eax
   14003d978:	push   rax
   14003d979:	(bad)  
   14003d97a:	add    DWORD PTR [rax],eax
   14003d97c:	loopne 0x14003d98c
   14003d97e:	add    DWORD PTR [rax],eax
   14003d980:	jo     0x14003d992
   14003d982:	add    DWORD PTR [rax],eax
   14003d984:	adc    al,BYTE PTR [rcx]
   14003d987:	add    al,dh
   14003d989:	(bad)  
   14003d98a:	add    DWORD PTR [rax],eax
   14003d98c:	adc    BYTE PTR [rcx+rax*1],bl
   14003d98f:	add    BYTE PTR [rax],dl
   14003d991:	sbb    eax,0x1d400001
   14003d996:	add    DWORD PTR [rax],eax
   14003d998:	rcr    BYTE PTR [rdi],0x1
   14003d99b:	add    BYTE PTR [rax+0x20],dh
   14003d99e:	add    DWORD PTR [rax],eax
   14003d9a0:	(bad)  
   14003d9a1:	and    DWORD PTR [rcx],eax
   14003d9a3:	add    BYTE PTR [rax],al
   14003d9a5:	xor    al,BYTE PTR [rcx]
   14003d9a7:	add    BYTE PTR [rax],dl
   14003d9a9:	xor    al,BYTE PTR [rcx]
   14003d9ab:	add    BYTE PTR [rax],dl
   14003d9ad:	xor    al,0x1
   14003d9af:	add    BYTE PTR [rax+0x34],ah
   14003d9b2:	add    DWORD PTR [rax],eax
   14003d9b4:	shl    BYTE PTR [rip+0x3df00001],0x1        # 0x17df3d9bc
   14003d9bb:	add    al,dl
   14003d9bd:	add    DWORD PTR ds:[rax],eax
   14003d9c0:	movabs al,ds:0x60000142e0000141
   14003d9c9:	rex.XB add DWORD PTR [r8],eax
   14003d9cc:	and    BYTE PTR [rsi+0x1],al
   14003d9cf:	add    BYTE PTR [rax],dh
   14003d9d1:	rex.RX add DWORD PTR [rax],r8d
   14003d9d4:	movabs al,ds:0x80000146e0000146
   14003d9dd:	add    QWORD PTR [r8],rax
   14003d9e0:	push   rax
   14003d9e1:	rex.WXB add QWORD PTR [r8],rax
   14003d9e4:	jo     0x14003da31
   14003d9e6:	add    DWORD PTR [rax],eax
   14003d9e8:	lock rex.WXB add QWORD PTR [r8],rax
   14003d9ec:	adc    BYTE PTR [rcx+rax*1+0x0],cl
   14003d9f0:	xor    BYTE PTR [rcx+rax*1+0x0],cl
   14003d9f4:	mov    al,0x4c
   14003d9f6:	add    DWORD PTR [rax],eax
   14003d9f8:	ror    BYTE PTR [rcx+rax*1+0x0],1
   14003d9fc:	lock add QWORD PTR [rax],r8
   14003da00:	adc    BYTE PTR [rbp+0x1],cl
   14003da03:	add    BYTE PTR [rax],dh
   14003da05:	add    QWORD PTR [r8],r8
   14003da08:	push   rax
   14003da09:	add    QWORD PTR [r8],r8
   14003da0c:	jo     0x14003da5b
   14003da0e:	add    DWORD PTR [rax],eax
   14003da10:	nop
   14003da11:	add    QWORD PTR [r8],r8
   14003da14:	mov    al,0x4d
   14003da16:	add    DWORD PTR [rax],eax
   14003da18:	ror    BYTE PTR [rbp+0x1],1
   14003da1b:	add    al,dh
   14003da1d:	add    QWORD PTR [r8],r8
   14003da20:	adc    BYTE PTR [rsi+0x1],cl
   14003da23:	add    BYTE PTR [rax],dh
   14003da25:	rex.WRX add QWORD PTR [rax],r8
   14003da28:	push   rax
   14003da29:	rex.WRX add QWORD PTR [rax],r8
   14003da2c:	jo     0x14003da7c
   14003da2e:	add    DWORD PTR [rax],eax
   14003da30:	nop
   14003da31:	rex.WRX add QWORD PTR [rax],r8
   14003da34:	mov    al,0x4e
   14003da36:	add    DWORD PTR [rax],eax
   14003da38:	ror    BYTE PTR [rsi+0x1],1
   14003da3b:	add    al,dh
   14003da3d:	rex.WRX add QWORD PTR [rax],r8
   14003da40:	adc    BYTE PTR [rdi+0x1],cl
   14003da43:	add    BYTE PTR [rax],dh
   14003da45:	rex.WRXB add QWORD PTR [r8],r8
   14003da48:	push   rax
   14003da49:	rex.WRXB add QWORD PTR [r8],r8
   14003da4c:	jo     0x14003da9d
   14003da4e:	add    DWORD PTR [rax],eax
   14003da50:	nop
   14003da51:	rex.WRXB add QWORD PTR [r8],r8
   14003da54:	mov    al,0x4f
   14003da56:	add    DWORD PTR [rax],eax
   14003da58:	ror    BYTE PTR [rdi+0x1],1
   14003da5b:	add    al,dh
   14003da5d:	rex.WRXB add QWORD PTR [r8],r8
   14003da60:	adc    BYTE PTR [rax+0x1],dl
   14003da63:	add    BYTE PTR [rax],dh
   14003da65:	push   rax
   14003da66:	add    DWORD PTR [rax],eax
   14003da68:	push   rax
   14003da69:	push   rax
   14003da6a:	add    DWORD PTR [rax],eax
   14003da6c:	jo     0x14003dabe
   14003da6e:	add    DWORD PTR [rax],eax
   14003da70:	lock push rax
   14003da72:	add    DWORD PTR [rax],eax
   14003da74:	adc    BYTE PTR [rcx+0x1],dl
   14003da77:	add    BYTE PTR [rax-0x4ffffeaf],dl
   14003da7d:	push   rcx
   14003da7e:	add    DWORD PTR [rax],eax
   14003da80:	rcl    BYTE PTR [rcx+0x1],1
   14003da83:	add    al,dh
   14003da85:	push   rcx
   14003da86:	add    DWORD PTR [rax],eax
   14003da88:	adc    BYTE PTR [rdx+0x1],dl
   14003da8b:	add    BYTE PTR [rax-0x4ffffeae],dl
   14003da91:	push   rdx
   14003da92:	add    DWORD PTR [rax],eax
   14003da94:	rcl    BYTE PTR [rdx+0x1],1
   14003da97:	add    al,dh
   14003da99:	push   rdx
   14003da9a:	add    DWORD PTR [rax],eax
   14003da9c:	rcl    BYTE PTR [rdi+0x1],1
   14003da9f:	add    al,ah
   14003daa1:	push   rdi
   14003daa2:	add    DWORD PTR [rax],eax
   14003daa4:	lock push rdi
   14003daa6:	add    DWORD PTR [rax],eax
   14003daa8:	add    BYTE PTR [rax+0x1],bl
   14003daab:	add    BYTE PTR [rax],dl
   14003daad:	pop    rax
   14003daae:	add    DWORD PTR [rax],eax
   14003dab0:	and    BYTE PTR [rax+0x1],bl
   14003dab3:	add    BYTE PTR [rax],dh
   14003dab5:	pop    rax
   14003dab6:	add    DWORD PTR [rax],eax
   14003dab8:	rex pop rax
   14003daba:	add    DWORD PTR [rax],eax
   14003dabc:	push   rax
   14003dabd:	pop    rax
   14003dabe:	add    DWORD PTR [rax],eax
   14003dac0:	(bad)  
   14003dac1:	pop    rax
   14003dac2:	add    DWORD PTR [rax],eax
   14003dac4:	jo     0x14003db1e
   14003dac6:	add    DWORD PTR [rax],eax
   14003dac8:	sbb    BYTE PTR [rax+0x1],0x0
   14003dacc:	nop
   14003dacd:	pop    rax
   14003dace:	add    DWORD PTR [rax],eax
   14003dad0:	movabs al,ds:0xc0000158b0000158
   14003dad9:	pop    rax
   14003dada:	add    DWORD PTR [rax],eax
   14003dadc:	rcr    BYTE PTR [rax+0x1],1
   14003dadf:	add    al,ah
   14003dae1:	pop    rax
   14003dae2:	add    DWORD PTR [rax],eax
   14003dae4:	lock pop rax
   14003dae6:	add    DWORD PTR [rax],eax
   14003dae8:	add    BYTE PTR [rcx+0x1],bl
   14003daeb:	add    BYTE PTR [rax],dl
   14003daed:	pop    rcx
   14003daee:	add    DWORD PTR [rax],eax
   14003daf0:	and    BYTE PTR [rcx+0x1],bl
   14003daf3:	add    BYTE PTR [rax],dh
   14003daf5:	pop    rcx
   14003daf6:	add    DWORD PTR [rax],eax
   14003daf8:	rex pop rcx
   14003dafa:	add    DWORD PTR [rax],eax
   14003dafc:	push   rax
   14003dafd:	pop    rcx
   14003dafe:	add    DWORD PTR [rax],eax
   14003db00:	(bad)  
   14003db01:	pop    rcx
   14003db02:	add    DWORD PTR [rax],eax
   14003db04:	nop
   14003db05:	pop    rcx
   14003db06:	add    DWORD PTR [rax],eax
   14003db08:	lock pop rcx
   14003db0a:	add    DWORD PTR [rax],eax
   14003db0c:	add    BYTE PTR [rdx+0x1],bl
   14003db0f:	add    BYTE PTR [rax],dl
   14003db11:	pop    rdx
   14003db12:	add    DWORD PTR [rax],eax
   14003db14:	and    BYTE PTR [rdx+0x1],bl
   14003db17:	add    BYTE PTR [rax],dh
   14003db19:	pop    rdx
   14003db1a:	add    DWORD PTR [rax],eax
   14003db1c:	rex pop rdx
   14003db1e:	add    DWORD PTR [rax],eax
   14003db20:	push   rax
   14003db21:	pop    rdx
   14003db22:	add    DWORD PTR [rax],eax
   14003db24:	(bad)  
   14003db25:	pop    rdx
   14003db26:	add    DWORD PTR [rax],eax
   14003db28:	jo     0x14003db84
   14003db2a:	add    DWORD PTR [rax],eax
   14003db2c:	sbb    BYTE PTR [rdx+0x1],0x0
   14003db30:	nop
   14003db31:	pop    rdx
   14003db32:	add    DWORD PTR [rax],eax
   14003db34:	movabs al,ds:0xc000015ab000015a
   14003db3d:	pop    rdx
   14003db3e:	add    DWORD PTR [rax],eax
   14003db40:	rcr    BYTE PTR [rdx+0x1],1
   14003db43:	add    al,ah
   14003db45:	pop    rdx
   14003db46:	add    DWORD PTR [rax],eax
   14003db48:	lock pop rdx
   14003db4a:	add    DWORD PTR [rax],eax
   14003db4c:	add    BYTE PTR [rbx+0x1],bl
   14003db4f:	add    BYTE PTR [rax],dl
   14003db51:	pop    rbx
   14003db52:	add    DWORD PTR [rax],eax
   14003db54:	and    BYTE PTR [rbx+0x1],bl
   14003db57:	add    BYTE PTR [rax],dh
   14003db59:	pop    rbx
   14003db5a:	add    DWORD PTR [rax],eax
   14003db5c:	rex pop rbx
   14003db5e:	add    DWORD PTR [rax],eax
   14003db60:	push   rax
   14003db61:	pop    rbx
   14003db62:	add    DWORD PTR [rax],eax
   14003db64:	(bad)  
   14003db65:	pop    rbx
   14003db66:	add    DWORD PTR [rax],eax
   14003db68:	jo     0x14003dbc5
   14003db6a:	add    DWORD PTR [rax],eax
   14003db6c:	sbb    BYTE PTR [rbx+0x1],0x0
   14003db70:	nop
   14003db71:	pop    rbx
   14003db72:	add    DWORD PTR [rax],eax
   14003db74:	movabs al,ds:0xc000015bb000015b
   14003db7d:	pop    rbx
   14003db7e:	add    DWORD PTR [rax],eax
   14003db80:	rcr    BYTE PTR [rbx+0x1],1
   14003db83:	add    al,ah
   14003db85:	pop    rbx
   14003db86:	add    DWORD PTR [rax],eax
   14003db88:	lock pop rbx
   14003db8a:	add    DWORD PTR [rax],eax
   14003db8c:	add    BYTE PTR [rcx+rax*1+0x0],bl
   14003db90:	adc    BYTE PTR [rcx+rax*1+0x0],bl
   14003db94:	and    BYTE PTR [rcx+rax*1+0x0],bl
   14003db98:	xor    BYTE PTR [rcx+rax*1+0x0],bl
   14003db9c:	rex pop rsp
   14003db9e:	add    DWORD PTR [rax],eax
   14003dba0:	push   rax
   14003dba1:	pop    rsp
   14003dba2:	add    DWORD PTR [rax],eax
   14003dba4:	(bad)  
   14003dba5:	pop    rsp
   14003dba6:	add    DWORD PTR [rax],eax
   14003dba8:	jo     0x14003dc06
   14003dbaa:	add    DWORD PTR [rax],eax
   14003dbac:	sbb    BYTE PTR [rcx+rax*1+0x0],0x90
   14003dbb1:	pop    rsp
   14003dbb2:	add    DWORD PTR [rax],eax
   14003dbb4:	movabs al,ds:0xc000015cb000015c
   14003dbbd:	pop    rsp
   14003dbbe:	add    DWORD PTR [rax],eax
   14003dbc0:	rcr    BYTE PTR [rcx+rax*1+0x0],1
   14003dbc4:	loopne 0x14003dc22
   14003dbc6:	add    DWORD PTR [rax],eax
   14003dbc8:	lock pop rsp
   14003dbca:	add    DWORD PTR [rax],eax
   14003dbcc:	add    BYTE PTR [rbp+0x1],bl
   14003dbcf:	add    BYTE PTR [rax],dl
   14003dbd1:	pop    rbp
   14003dbd2:	add    DWORD PTR [rax],eax
   14003dbd4:	xor    BYTE PTR [rbp+0x1],bl
   14003dbd7:	add    BYTE PTR [rax+0x5d],al
   14003dbda:	add    DWORD PTR [rax],eax
   14003dbdc:	push   rax
   14003dbdd:	pop    rbp
   14003dbde:	add    DWORD PTR [rax],eax
   14003dbe0:	(bad)  
   14003dbe1:	pop    rbp
   14003dbe2:	add    DWORD PTR [rax],eax
   14003dbe4:	jo     0x14003dc43
   14003dbe6:	add    DWORD PTR [rax],eax
   14003dbe8:	sbb    BYTE PTR [rbp+0x1],0x0
   14003dbec:	nop
   14003dbed:	pop    rbp
   14003dbee:	add    DWORD PTR [rax],eax
   14003dbf0:	movabs al,ds:0xc000015db000015d
   14003dbf9:	pop    rbp
   14003dbfa:	add    DWORD PTR [rax],eax
   14003dbfc:	rcr    BYTE PTR [rbp+0x1],1
   14003dbff:	add    al,ah
   14003dc01:	pop    rbp
   14003dc02:	add    DWORD PTR [rax],eax
   14003dc04:	lock pop rbp
   14003dc06:	add    DWORD PTR [rax],eax
   14003dc08:	add    BYTE PTR [rsi+0x1],bl
   14003dc0b:	add    BYTE PTR [rax],dl
   14003dc0d:	pop    rsi
   14003dc0e:	add    DWORD PTR [rax],eax
   14003dc10:	and    BYTE PTR [rsi+0x1],bl
   14003dc13:	add    BYTE PTR [rax+0x5e],dl
   14003dc16:	add    DWORD PTR [rax],eax
   14003dc18:	add    BYTE PTR [rbx+0x1],ch
   14003dc1b:	add    BYTE PTR [rax],dl
   14003dc1d:	imul   eax,DWORD PTR [rcx],0x0
   14003dc20:	and    BYTE PTR [rbx+0x1],ch
   14003dc23:	add    BYTE PTR [rax],dh
   14003dc25:	imul   eax,DWORD PTR [rcx],0x0
   14003dc28:	rex imul eax,DWORD PTR [rcx],0x0
   14003dc2c:	(bad)  
   14003dc2d:	imul   eax,DWORD PTR [rcx],0x0
   14003dc30:	jo     0x14003dc9d
   14003dc32:	add    DWORD PTR [rax],eax
   14003dc34:	sub    BYTE PTR [rbx+0x1],0x0
   14003dc38:	nop
   14003dc39:	imul   eax,DWORD PTR [rcx],0x0
   14003dc3c:	movabs al,ds:0xc000016bb000016b
   14003dc45:	imul   eax,DWORD PTR [rcx],0x0
   14003dc48:	shr    BYTE PTR [rbx+0x1],1
   14003dc4b:	add    al,ah
   14003dc4d:	imul   eax,DWORD PTR [rcx],0x0
   14003dc50:	lock imul eax,DWORD PTR [rcx],0x0
   14003dc54:	add    BYTE PTR [rcx+rax*1+0x0],ch
   14003dc58:	adc    BYTE PTR [rcx+rax*1+0x0],ch
   14003dc5c:	test   al,0x2
   14003dc5f:	add    BYTE PTR [rax-0x56],ah
   14003dc62:	add    al,BYTE PTR [rax]
   14003dc64:	movabs al,ds:0x200002aae00002aa
   14003dc6d:	stos   DWORD PTR es:[rdi],eax
   14003dc6e:	add    al,BYTE PTR [rax]
   14003dc70:	(bad)  
   14003dc71:	stos   DWORD PTR es:[rdi],eax
   14003dc72:	add    al,BYTE PTR [rax]
   14003dc74:	mov    al,0xab
   14003dc76:	add    al,BYTE PTR [rax]
   14003dc78:	lock stos DWORD PTR es:[rdi],eax
   14003dc7a:	add    al,BYTE PTR [rax]
   14003dc7c:	xor    BYTE PTR [rdx+rax*1+0x2ac7000],ch
   14003dc83:	add    al,dl
   14003dc85:	lods   al,BYTE PTR ds:[rsi]
   14003dc86:	add    al,BYTE PTR [rax]
   14003dc88:	adc    BYTE PTR [rbp-0x527ffffe],ch
   14003dc8e:	add    al,BYTE PTR [rax]
   14003dc90:	shr    BYTE PTR [rbp-0x521ffffe],1
   14003dc96:	add    al,BYTE PTR [rax]
   14003dc98:	and    BYTE PTR [rsi-0x519ffffe],ch
   14003dc9e:	add    al,BYTE PTR [rax]
   14003dca0:	jo     0x14003dc53
   14003dca2:	add    al,BYTE PTR [rax]
   14003dca4:	lock mov cl,0x2
   14003dca7:	add    BYTE PTR [rax-0x2ffffd4b],al
   14003dcad:	mov    ch,0x2
   14003dcaf:	add    BYTE PTR [rax],ah
   14003dcb1:	mov    bh,0x2
   14003dcb3:	add    BYTE PTR [rax],dl
   14003dcb5:	mov    ebx,0xbba00002
   14003dcba:	add    al,BYTE PTR [rax]
   14003dcbc:	xor    cl,al
   14003dcbe:	add    al,BYTE PTR [rax]
   14003dcc0:	push   rax
   14003dcc1:	rol    DWORD PTR [rdx],0x0
   14003dcc4:	movabs al,ds:0x100002c6600002c1
   14003dccd:	retf   0x2
   14003dcd0:	nop
   14003dcd1:	int    0x2
   14003dcd3:	add    al,dh
   14003dcd5:	int    0x2
   14003dcd7:	add    BYTE PTR [rax],dh
   14003dcd9:	(bad)  
   14003dcda:	add    al,BYTE PTR [rax]
   14003dcdc:	mov    al,0xce
   14003dcde:	add    al,BYTE PTR [rax]
   14003dce0:	xor    bh,cl
   14003dce2:	add    al,BYTE PTR [rax]
   14003dce4:	nop
   14003dce5:	iret   
   14003dce6:	add    al,BYTE PTR [rax]
   14003dce8:	lock iret 
   14003dcea:	add    al,BYTE PTR [rax]
   14003dcec:	movabs al,ds:0x900002d0e00002d0
   14003dcf5:	rol    DWORD PTR [rdx],1
   14003dcf7:	add    BYTE PTR [rax+0x400002d7],al
   14003dcfd:	fild   DWORD PTR [rdx]
   14003dcff:	add    BYTE PTR [rax-0x5ffffd23],dh
   14003dd05:	fiadd  WORD PTR [rdx]
   14003dd07:	add    BYTE PTR [rax-0x20],dl
   14003dd0a:	add    al,BYTE PTR [rax]
   14003dd0c:	rex loope 0x14003dd11
   14003dd0f:	add    BYTE PTR [rax-0x1f],dh
   14003dd12:	add    al,BYTE PTR [rax]
   14003dd14:	sub    ah,0x2
   14003dd17:	add    al,al
   14003dd19:	in     al,dx
   14003dd1a:	add    al,BYTE PTR [rax]
   14003dd1c:	add    ch,ch
   14003dd1e:	add    al,BYTE PTR [rax]
   14003dd20:	rex in eax,dx
   14003dd22:	add    al,BYTE PTR [rax]
   14003dd24:	sub    ch,0x2
   14003dd27:	add    al,al
   14003dd29:	in     eax,dx
   14003dd2a:	add    al,BYTE PTR [rax]
   14003dd2c:	(bad)  
   14003dd2d:	out    dx,al
   14003dd2e:	add    al,BYTE PTR [rax]
   14003dd30:	shl    cl,0x2
   14003dd33:	add    BYTE PTR [rax],ah
   14003dd35:	hlt    
   14003dd36:	add    al,BYTE PTR [rax]
   14003dd38:	rex cmc 
   14003dd3a:	add    al,BYTE PTR [rax]
   14003dd3c:	shl    ch,0x2
   14003dd3f:	add    BYTE PTR [rax-0xa],al
   14003dd42:	add    al,BYTE PTR [rax]
   14003dd44:	movabs al,ds:0x400002f7000002f6
   14003dd4d:	test   DWORD PTR [rdx],0x2f78000
   14003dd53:	add    BYTE PTR [rax],dh
   14003dd55:	stc    
   14003dd56:	add    al,BYTE PTR [rax]
   14003dd58:	rex cli 
   14003dd5a:	add    al,BYTE PTR [rax]
   14003dd5c:	and    bl,bh
   14003dd5e:	add    al,BYTE PTR [rax]
   14003dd60:	cmp    ah,0x2
   14003dd63:	add    BYTE PTR [rax-0x3],dh
   14003dd66:	add    al,BYTE PTR [rax]
   14003dd68:	push   rax
   14003dd69:	inc    BYTE PTR [rdx]
   14003dd6b:	add    BYTE PTR [rax-0x1],dh
   14003dd6e:	add    al,BYTE PTR [rax]
   14003dd70:	loopne 0x14003dd72
   14003dd72:	add    eax,DWORD PTR [rax]
   14003dd74:	xor    BYTE PTR [rcx],al
   14003dd76:	add    eax,DWORD PTR [rax]
   14003dd78:	add    BYTE PTR [rdx],0x3
   14003dd7b:	add    al,ah
   14003dd7d:	add    eax,DWORD PTR [rbx]
   14003dd7f:	add    al,dh
   14003dd81:	add    eax,0xac00003
   14003dd86:	add    eax,DWORD PTR [rax]
   14003dd88:	adc    BYTE PTR [rbx+rax*1],cl
   14003dd8b:	add    al,dl
   14003dd8d:	or     al,0x3
   14003dd8f:	add    BYTE PTR [rax+0x7000030d],ah
   14003dd95:	(bad)  
   14003dd96:	add    eax,DWORD PTR [rax]
   14003dd98:	mov    al,0xe
   14003dd9a:	add    eax,DWORD PTR [rax]
   14003dd9c:	lock (bad) 
   14003dd9e:	add    eax,DWORD PTR [rax]
   14003dda0:	rex lsl eax,WORD PTR [rax]
   14003dda4:	add    BYTE PTR [rdx],dl
   14003dda6:	add    eax,DWORD PTR [rax]
   14003dda8:	xor    BYTE PTR [rdx],dl
   14003ddaa:	add    eax,DWORD PTR [rax]
   14003ddac:	jo     0x14003ddc0
   14003ddae:	add    eax,DWORD PTR [rax]
   14003ddb0:	mov    al,0x12
   14003ddb2:	add    eax,DWORD PTR [rax]
   14003ddb4:	lock adc al,BYTE PTR [rbx]
   14003ddb7:	add    al,ah
   14003ddb9:	(bad)  
   14003ddba:	add    eax,DWORD PTR [rax]
   14003ddbc:	rex (bad) 
   14003ddbe:	add    eax,DWORD PTR [rax]
   14003ddc0:	rcl    BYTE PTR [rdi],1
   14003ddc2:	add    eax,DWORD PTR [rax]
   14003ddc4:	and    BYTE PTR [rax],bl
   14003ddc6:	add    eax,DWORD PTR [rax]
   14003ddc8:	xor    BYTE PTR [rcx],bl
   14003ddca:	add    eax,DWORD PTR [rax]
   14003ddcc:	adc    BYTE PTR [rdx],ah
   14003ddce:	add    eax,DWORD PTR [rax]
   14003ddd0:	adc    BYTE PTR [rbx],ah
   14003ddd2:	add    eax,DWORD PTR [rax]
   14003ddd4:	push   rax
   14003ddd5:	and    al,0x3
   14003ddd7:	add    BYTE PTR [rax+0x2a],dh
   14003ddda:	add    eax,DWORD PTR [rax]
   14003dddc:	jo     0x14003de0b
   14003ddde:	add    eax,DWORD PTR [rax]
   14003dde0:	lock sub eax,0x30300003
   14003dde6:	add    eax,DWORD PTR [rax]
   14003dde8:	loopne 0x14003de1a
   14003ddea:	add    eax,DWORD PTR [rax]
   14003ddec:	rex xor eax,DWORD PTR [rbx]
   14003ddef:	add    al,dl
   14003ddf1:	xor    eax,DWORD PTR [rbx]
   14003ddf3:	add    BYTE PTR [rax+0x34],dh
   14003ddf6:	add    eax,DWORD PTR [rax]
   14003ddf8:	add    BYTE PTR [rsi],dh
   14003ddfa:	add    eax,DWORD PTR [rax]
   14003ddfc:	shl    BYTE PTR [rdi],0x3
   14003ddff:	add    BYTE PTR [rax+0x38],dh
   14003de02:	add    eax,DWORD PTR [rax]
   14003de04:	cmp    al,0x3
   14003de07:	add    BYTE PTR [rax+0x7000033c],al
   14003de0d:	cmp    eax,0x3e400003
   14003de12:	add    eax,DWORD PTR [rax]
   14003de14:	jo     0x14003de56
   14003de16:	add    eax,DWORD PTR [rax]
   14003de18:	movabs al,ds:0xd000034120000340
   14003de21:	add    eax,DWORD PTR [r8]
   14003de24:	adc    BYTE PTR [rdx+0x3],al
   14003de27:	add    al,dh
   14003de29:	rex.X add eax,DWORD PTR [rax]
   14003de2c:	rol    BYTE PTR [rbx+0x3],1
   14003de2f:	add    BYTE PTR [rax+0x44],dh
   14003de32:	add    eax,DWORD PTR [rax]
   14003de34:	rol    BYTE PTR [rbx+rax*1+0x0],1
   14003de38:	rex
   14003de39:	add    r8d,DWORD PTR [r8]
   14003de3c:	adc    BYTE PTR [rsi+0x3],al
   14003de3f:	add    BYTE PTR [rax+0x46],ah
   14003de42:	add    eax,DWORD PTR [rax]
   14003de44:	rex
   14003de45:	rex.RXB add r8d,DWORD PTR [r8]
   14003de48:	rol    BYTE PTR [rdi+0x3],1
   14003de4b:	add    al,al
   14003de4d:	add    rax,QWORD PTR [rax]
   14003de50:	mov    al,0x49
   14003de52:	add    eax,DWORD PTR [rax]
   14003de54:	loopne 0x14003dead
   14003de56:	add    eax,DWORD PTR [rax]
   14003de58:	push   rax
   14003de59:	pop    rax
   14003de5a:	add    eax,DWORD PTR [rax]
   14003de5c:	rcr    BYTE PTR [rax+0x3],0x0
   14003de60:	rcr    BYTE PTR [rax+0x3],1
   14003de63:	add    BYTE PTR [rax],dh
   14003de65:	pop    rcx
   14003de66:	add    eax,DWORD PTR [rax]
   14003de68:	sbb    BYTE PTR [rcx+0x3],0x0
   14003de6c:	rcr    BYTE PTR [rcx+0x3],0x0
   14003de70:	loopne 0x14003decc
   14003de72:	add    eax,DWORD PTR [rax]
   14003de74:	push   rax
   14003de75:	lahf   
   14003de76:	add    eax,DWORD PTR [rax]
   14003de78:	nop
   14003de79:	lahf   
   14003de7a:	add    eax,DWORD PTR [rax]
   14003de7c:	rcr    BYTE PTR [rdi-0x5fdffffd],1
   14003de82:	add    eax,DWORD PTR [rax]
   14003de84:	jo     0x14003de26
   14003de86:	add    eax,DWORD PTR [rax]
   14003de88:	(bad)  
   14003de89:	movabs eax,ds:0xa1d00003a1900003
   14003de92:	add    eax,DWORD PTR [rax]
   14003de94:	lock movabs eax,ds:0xa3300003a2a00003
   14003de9e:	add    eax,DWORD PTR [rax]
   14003dea0:	shl    BYTE PTR [rbx+rax*1+0x3bc3000],0x0
	...
   14003deb0:	and    BYTE PTR [rsi+0x4bea054a],ch
   14003deb6:	rex.RXB
   14003deb7:	rex.XB mov sil,BYTE PTR [rip+0x2533a564]        # 0x165378422
   14003debe:	rex.WX popf 
   14003dec0:	cli    
   14003dec1:	jbe    0x14003dea8
   14003dec3:	rex.WR fadd QWORD PTR [rbx+0x1c954f88]
   14003deca:	popf   
   14003decb:	(bad)  
   14003decc:	(bad)  
   14003decd:	mov    ah,0xe3
   14003decf:	jbe    0x14003df15
   14003ded1:	add    BYTE PTR [rbp+0x0],ah
   14003ded4:	data16 add BYTE PTR [rcx+0x0],ah
   14003ded8:	jne    0x14003deda
   14003deda:	ins    BYTE PTR es:[rdi],dx
   14003dedb:	add    BYTE PTR [rax+rax*1+0x0],dh
   14003dedf:	add    BYTE PTR [rax+0x7a02dc1a],ch
   14003dee5:	xor    al,BYTE PTR [rdx]
   14003dee7:	push   rbp
   14003dee8:	rol    DWORD PTR [rdx-0x450f88cc],0xf8
   14003deef:	cmp    al,0xf9
   14003def1:	xchg   ecx,eax
   14003def2:	movabs al,ds:0x8b43d33f885a17da
   14003defb:	imul   DWORD PTR [rsi]
   14003defd:	(bad)  
   14003defe:	lods   al,BYTE PTR ds:[rsi]
   14003deff:	mov    dh,0x64
   14003df01:	fnstenv [rcx]
   14003df03:	xchg   ecx,eax
   14003df04:	ss jmp 0x14003defe
   14003df07:	shl    ebp,0x8d
   14003df0a:	and    DWORD PTR [rdi+0x1],esp
   14003df0d:	outs   dx,DWORD PTR ds:[rsi]
   14003df0e:	sub    BYTE PTR [rdi+0x1d],bh
   14003df11:	scas   eax,DWORD PTR es:[rdi]
   14003df12:	mov    dl,0x97
   14003df14:	in     eax,dx
   14003df15:	xor    rax,QWORD PTR [r8]
   14003df18:	loopne 0x14003dec4
   14003df1a:	(bad)  
   14003df1b:	push   rbp
   14003df1c:	mov    dl,0xbe
   14003df1e:	add    DWORD PTR [rbx+0xe0a5af2],0x2f9af900
   14003df28:	fs rex.WRB in eax,dx
   14003df2b:	mov    dh,0x1f
   14003df2d:	(bad)  
   14003df2e:	retf   
   14003df2f:	add    DWORD PTR [rbx-0x36],esi
   14003df32:	mov    esp,0x1d581ef6
   14003df37:	and    DWORD PTR [rdx],0x2d82207d
   14003df3d:	shl    DWORD PTR [rbx+0x4aae8df],0x41
   14003df44:	pop    rcx
   14003df45:	(bad)  
   14003df46:	fbld   TBYTE PTR [rcx-0x28affb98]
   14003df4c:	mov    dh,0x1f
   14003df4e:	ins    DWORD PTR es:[rdi],dx
   14003df4f:	pop    rdx
   14003df50:	fsubr  QWORD PTR [rbx+0x7f]
   14003df53:	mov    edi,0xd31f58b2
   14003df58:	mov    ecx,0xdf3a48b4
   14003df5d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003df5e:	add    bl,cl
   14003df60:	mov    al,0xbb
   14003df62:	loopne 0x14003dfc3
   14003df64:	jrcxz  0x14003df60
   14003df66:	nop
   14003df67:	mov    dl,0x84
   14003df69:	xchg   esi,eax
   14003df6a:	rex.RB
   14003df6b:	gs out 0x91,al
   14003df6e:	cmp    al,BYTE PTR [rsi+0x25]
   14003df71:	xchg   edi,eax
   14003df72:	out    0xe5,eax
   14003df74:	retf   
   14003df75:	sbb    QWORD PTR [r8-0x50],rsi
   14003df79:	and    edi,DWORD PTR [rcx]
   14003df7b:	or     cl,ah
   14003df7d:	lahf   
   14003df7e:	jo     0x14003dfcd
   14003df80:	outs   dx,BYTE PTR ds:[rsi]
   14003df81:	popf   
   14003df82:	cli    
   14003df83:	(bad)  
   14003df84:	xchg   ebx,eax
   14003df85:	rex.RX ret 0xa22e
   14003df89:	pushf  
   14003df8a:	rex.RXB out dx,eax
   14003df8c:	jbe    0x14003dfda
   14003df8e:	jb     0x14003df77
   14003df90:	int    0x46
   14003df92:	stos   DWORD PTR es:[rdi],eax
   14003df93:	mov    eax,0x55cc0197
   14003df98:	mov    ss,WORD PTR [rbx-0x35]
   14003df9b:	cmp    eax,0x5d49866f
   14003dfa0:	add    DWORD PTR [rbx-0x296dcc53],ebx
   14003dfa6:	xchg   BYTE PTR [rbx+rdx*4+0x2],cl
   14003dfaa:	clc    
   14003dfab:	movabs ds:0x82452edd0c762195,al
   14003dfb4:	pop    QWORD PTR [rdx+rdx*4]
   14003dfb7:	dec    al
   14003dfb9:	and    eax,0xec90ffb7
   14003dfbe:	(bad)  
   14003dfbf:	(bad)  
   14003dfc0:	(bad)  
   14003dfc1:	xor    esp,DWORD PTR [rax-0xf46a118]
   14003dfc7:	rex.WR and rax,0xffffffffc619b671
   14003dfcd:	cdq    
   14003dfce:	(bad)
   14003dfd1:	rex.X (bad) 
   14003dfd3:	rcl    BYTE PTR [rbp+0x3b2d66df],0x3a
   14003dfda:	rex.R jrcxz 0x14003e029
   14003dfdd:	fistp  DWORD PTR [rax]
   14003dfdf:	leave  
   14003dfe0:	addr32 (bad) 
   14003dfe2:	mov    ecx,0xffa19f92
   14003dfe7:	fisttp WORD PTR [rax]
   14003dfe9:	pop    rbp
   14003dfea:	or     r13d,DWORD PTR [rdx]
   14003dfed:	stos   DWORD PTR es:[rdi],eax
   14003dfee:	rcl    BYTE PTR [rbx+0xa],cl
   14003dff1:	mov    dl,0x3
   14003dff3:	xchg   DWORD PTR [rax],ebp
   14003dff5:	cmp    eax,0xdfb10472
   14003dffa:	(bad)  
   14003dffb:	(bad)  
   14003dffc:	xor    DWORD PTR [rdi-0x3e],eax
   14003dfff:	mov    bh,0x8e
   14003e001:	rex.R push rbp
   14003e003:	cmp    dh,BYTE PTR [rcx]
   14003e005:	pushf  
   14003e006:	pop    rbx
   14003e007:	lods   al,BYTE PTR ds:[rsi]
   14003e008:	fucom  st(3)
   14003e00a:	or     bl,dh
   14003e00c:	out    dx,eax
   14003e00d:	cs int 0x40
   14003e010:	push   rsi
   14003e011:	pushf  
   14003e012:	jne    0x14003e021
   14003e014:	retf   
   14003e015:	mov    r11b,0x9b
   14003e018:	xchg   ebp,eax
   14003e019:	xchg   esp,eax
   14003e01a:	xor    eax,0xe8c8bd8a
   14003e01f:	and    eax,DWORD PTR [rsi-0x3e]
   14003e022:	fdivr  st,st(0)
   14003e024:	or     cl,BYTE PTR [rsi]
   14003e026:	(bad)  
   14003e027:	mov    dl,0x4
   14003e029:	and    ebx,DWORD PTR [rbx-0x405c011d]
   14003e02f:	pop    rbx
   14003e030:	mov    ecx,0xe65db7c4
   14003e035:	fstp   TBYTE PTR [rdi+0x59]
   14003e038:	sti    
   14003e039:	pop    rdx
   14003e03a:	(bad)  
   14003e03b:	mov    esp,0x554e16d1
   14003e040:	ss gs rcl eax,0x98
   14003e045:	mov    esi,0x939061f8
   14003e04a:	idiv   BYTE PTR [rdi-0x55]
   14003e04d:	jo     0x14003e0ab
   14003e04f:	rex.WR adc rax,0x4c9861bf
   14003e055:	js     0x14003e05b
   14003e057:	jno    0x14003e051
   14003e059:	ret    
   14003e05a:	sbb    al,0xd8
   14003e05c:	cmc    
   14003e05d:	pop    rsi
   14003e05f:	sub    ah,ah
   14003e061:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e062:	scas   eax,DWORD PTR es:[rdi]
   14003e063:	xor    bh,BYTE PTR [rax-0x566b9c14]
   14003e069:	pop    rbx
   14003e06a:	sub    eax,0x15915567
   14003e06f:	mov    edx,gs
   14003e071:	mov    ch,ah
   14003e073:	scas   eax,DWORD PTR es:[rdi]
   14003e074:	fisubr WORD PTR [rbx]
   14003e076:	repnz pop rdi
   14003e078:	sti    
   14003e079:	fcmovb st,st(1)
   14003e07b:	cmp    esi,edx
   14003e07d:	(bad)  
   14003e07e:	jb     0x14003e009
   14003e080:	cwde   
   14003e081:	rcr    BYTE PTR [rbp+0x2b],1
   14003e084:	int3   
   14003e085:	enter  0x3e6a,0xe7
   14003e089:	rex.WRX xor QWORD PTR [rdx-0x6dda9e34],r13
   14003e090:	add    ah,dl
   14003e092:	je     0x14003e090
   14003e094:	ins    BYTE PTR es:[rdi],dx
   14003e095:	(bad)  
   14003e096:	mul    DWORD PTR [rax+0xcb9b2aa]
   14003e09c:	jg     0x14003e05f
   14003e09e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e09f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e0a0:	retf   0x9e49
   14003e0a3:	(bad)
   14003e0a7:	xor    BYTE PTR [rip+0xffffffffaa324a1e],ch        # 0xea362acb
   14003e0ad:	or     BYTE PTR [rsi+0x81c9c07],dl
   14003e0b3:	mov    dl,0xaf
   14003e0b5:	xchg   esp,eax
   14003e0b6:	iret   
   14003e0b7:	xlat   BYTE PTR ds:[rbx]
   14003e0b8:	out    dx,eax
   14003e0b9:	mov    bh,0xb0
   14003e0bb:	mov    eax,0x92ec2c85
   14003e0c0:	xchg   eax,ebx
   14003e0c2:	cmp    eax,0x1b8784e4
   14003e0c7:	jo     0x14003e059
   14003e0c9:	(bad)  
   14003e0ca:	lock (bad) 
   14003e0cc:	jae    0x14003e0a4
   14003e0ce:	ret    0x21ba
   14003e0d1:	div    DWORD PTR [rdx]
   14003e0d3:	rex.WRX imul r14,QWORD PTR [rsi],0x2041926e
   14003e0da:	(bad)  
   14003e0db:	pop    rsp
   14003e0dc:	test   al,0xeb
   14003e0de:	imul   BYTE PTR [rbp+0x21]
   14003e0e1:	rex.WRB jge 0x14003e097
   14003e0e4:	mov    bh,0xbd
   14003e0e6:	rex.RB
   14003e0e7:	adc    DWORD PTR gs:[rbp-0x7d],0xffffffe6
   14003e0ec:	xor    ah,BYTE PTR [rbp+rsi*2+0x2a4987a2]
   14003e0f3:	fadd   QWORD PTR [rdi]
   14003e0f5:	gs repnz in eax,0x5
   14003e0f9:	jb     0x14003e104
   14003e0fb:	movsxd edi,DWORD PTR [rax-0x76fb65b9]
   14003e101:	outs   dx,DWORD PTR ds:[rsi]
   14003e102:	jb     0x14003e17a
   14003e104:	pop    rdx
   14003e105:	(bad)  
   14003e106:	sbb    eax,0xf19c6bff
   14003e10b:	loop   0x14003e127
   14003e10d:	nop
   14003e10e:	push   QWORD PTR [rdx]
   14003e110:	push   rbx
   14003e111:	pushf  
   14003e112:	rex.RXB and r14b,BYTE PTR [r9+0x4]
   14003e116:	movsxd eax,eax
   14003e118:	in     al,0x2a
   14003e11a:	push   rdx
   14003e11b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e11c:	rex.WRB movabs r8,0xb63cbefe45a52fdd
   14003e126:	ror    BYTE PTR [rax-0x74],cl
   14003e129:	rex.RB mov r8b,0x67
   14003e12c:	mov    cl,0xc1
   14003e12e:	je     0x14003e19d
   14003e130:	add    dl,BYTE PTR [rip+0xffffffffe703fc31]        # 0x12707dd67
   14003e136:	push   rbx
   14003e137:	data16 mov dh,0xca
   14003e13a:	sub    DWORD PTR [rsi-0x7979e030],edi
   14003e140:	sbb    BYTE PTR [rdi+0x67e19d26],ah
   14003e146:	(bad)  
   14003e147:	jno    0x14003e0f4
   14003e149:	shl    DWORD PTR [rdi+0x4f396586],1
   14003e14f:	push   rbp
   14003e150:	stos   BYTE PTR es:[rdi],al
   14003e151:	nop
   14003e152:	(bad)  
   14003e153:	call   0x14dae967e
   14003e158:	mov    edi,0xbbc46321
   14003e15d:	rex.WB pushf 
   14003e15f:	push   rbp
   14003e161:	rcr    ah,1
   14003e163:	(bad)  
   14003e164:	push   rdi
   14003e165:	(bad)  
   14003e166:	adc    al,0xe7
   14003e168:	and    DWORD PTR [rax+0x4683b53f],ebx
   14003e16e:	test   esi,eax
   14003e170:	mov    dl,0xb2
   14003e172:	test   al,0x49
   14003e174:	sub    DWORD PTR [rdx+0x203ffc99],esp
   14003e17a:	mov    ah,0x46
   14003e17c:	sti    
   14003e17d:	sbb    DWORD PTR [rsi+0x52],ebp
   14003e180:	(bad)
   14003e183:	rex.WRX xchg rdi,rax
   14003e185:	imul   ecx,esi,0x56
   14003e188:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e189:	leave  
   14003e18a:	lea    esp,[rcx]
   14003e18c:	movabs eax,ds:0x4ceccffc4a481ef2
   14003e195:	ret    
   14003e196:	jle    0x14003e1d2
   14003e198:	xchg   BYTE PTR [rsi],dl
   14003e19a:	push   rsp
   14003e19b:	xor    DWORD PTR [rdi-0x1a3022fa],ebx
   14003e1a1:	(bad)  
   14003e1a2:	add    eax,0x66e86120
   14003e1a7:	jno    0x14003e145
   14003e1a9:	pop    rdi
   14003e1aa:	push   0xffffffffffffffcd
   14003e1ac:	xchg   ecx,eax
   14003e1ad:	xor    DWORD PTR [rdx-0x41],esp
   14003e1b0:	stc    
   14003e1b1:	or     bl,dl
   14003e1b3:	xlat   BYTE PTR ds:[rbx]
   14003e1b4:	jp     0x14003e194
   14003e1b6:	(bad)  
   14003e1b7:	fiadd  DWORD PTR [rdx-0x3d]
   14003e1ba:	rex.WB (bad) 
   14003e1bc:	pop    rcx
   14003e1bd:	fdiv   QWORD PTR [rdx+0x4a47b8f4]
   14003e1c3:	vpmacsdql ymm5,ymm4,ymm8,ymm1
   14003e1c9:	fisttp WORD PTR [rbx-0x4ef44410]
   14003e1cf:	or     BYTE PTR [rbp-0x5b269330],0xd8
   14003e1d6:	xor    eax,0x4c5e9dd
   14003e1db:	loopne 0x14003e1b1
   14003e1dd:	icebp  
   14003e1de:	cwde   
   14003e1df:	(bad)  
   14003e1e0:	mov    ebp,0x3c9bd57c
   14003e1e5:	sbb    cl,bh
   14003e1e7:	lahf   
   14003e1e8:	(bad)  
   14003e1e9:	sbb    BYTE PTR [rax+0x5bed36ea],ch
   14003e1ef:	fdivr  QWORD PTR [rbx-0x4d]
   14003e1f2:	pop    rdi
   14003e1f3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e1f4:	(bad)  
   14003e1f5:	stc    
   14003e1f6:	add    al,0x30
   14003e1f8:	cmc    
   14003e1f9:	(bad)  
   14003e1fa:	mov    al,0x2
   14003e1fc:	push   0xffffffff8fd41e94
   14003e201:	or     al,0xe1
   14003e203:	jg     0x14003e18b
   14003e205:	clc    
   14003e206:	(bad)  
   14003e207:	(bad)  
   14003e208:	mov    edi,0x5ef36d3
   14003e20d:	imul   eax,esp,0xfffffff5
   14003e210:	es jle 0x14003e216
   14003e213:	fld    TBYTE PTR [rcx-0x79]
   14003e216:	(bad)  
   14003e217:	movabs eax,ds:0x40
   14003e220:	push   rdi
   14003e221:	add    BYTE PTR [rcx+0x0],ch
   14003e224:	outs   dx,BYTE PTR ds:[rsi]
   14003e225:	add    BYTE PTR [rbx+0x0],dl
   14003e228:	je     0x14003e22a
   14003e22a:	(bad)  
   14003e22b:	add    BYTE PTR [rax],dh
   14003e22d:	add    BYTE PTR [rax],al
   14003e22f:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003e233:	add    BYTE PTR [rax+0x0],dh
   14003e236:	jae    0x14003e238
   14003e238:	imul   eax,DWORD PTR [rax],0x69
   14003e23b:	add    BYTE PTR [rsi+0x0],ch
   14003e23e:	jae    0x14003e240
   14003e240:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14003e245:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003e249:	add    BYTE PTR [rax],al
   14003e24b:	add    BYTE PTR [rax],al
   14003e24d:	add    BYTE PTR [rax],al
   14003e24f:	add    BYTE PTR [rdx+0x75],dl
   14003e252:	outs   dx,BYTE PTR ds:[rsi]
   14003e253:	rex.WRB
   14003e254:	gs jae 0x14003e2ca
   14003e257:	(bad)  
   14003e258:	addr32 gs push rax
   14003e25b:	jne    0x14003e2ca
   14003e25d:	jo     0x14003e25f
   14003e25f:	add    BYTE PTR [rax-0x6541b8d1],al
   14003e265:	cli    
   14003e266:	fadd   DWORD PTR [rsi-0x5f]
   14003e269:	pop    rax
   14003e26a:	clc    
   14003e26b:	mov    BYTE PTR [rbx+0x4d0b8e6d],al
   14003e271:	xor    ah,al
   14003e273:	adc    DWORD PTR [rdx-0x74b3cef1],ebp
   14003e279:	fisttp QWORD PTR [rbx+0x0]
   14003e27c:	add    cl,cl
   14003e27e:	xchg   esp,eax
   14003e27f:	jb     0x14003e2da
   14003e281:	shr    DWORD PTR [rbx-0x4d22a88c],cl
   14003e287:	rex.RX mov spl,0x59
   14003e28a:	mov    eax,0x673e80fc
   14003e28f:	(bad)  
   14003e290:	in     al,dx
   14003e291:	mov    al,BYTE PTR [rcx+rdx*2+0x3f]
   14003e295:	jl     0x14003e293
   14003e297:	rex.WRXB (bad) 
   14003e299:	push   rbx
   14003e29a:	adc    edi,DWORD PTR [rax]
   14003e29c:	mov    esi,0x54e4ca79
   14003e2a1:	add    BYTE PTR [rcx+0x0],ah
   14003e2a4:	(bad)  
   14003e2a5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003e2a9:	add    BYTE PTR [rax+0x0],dh
   14003e2ac:	sub    eax,0x61004d00
   14003e2b1:	add    BYTE PTR [rcx+0x0],ch
   14003e2b4:	outs   dx,BYTE PTR ds:[rsi]
   14003e2b5:	add    BYTE PTR [rbp+0x0],dl
   14003e2b8:	rex.WB add BYTE PTR [r8],al
   14003e2bb:	add    BYTE PTR [rax],al
   14003e2bd:	add    BYTE PTR [rax],al
   14003e2bf:	add    BYTE PTR [rax+rax*1+0x61],dl
   14003e2c3:	add    BYTE PTR [rdx+0x0],ah
   14003e2c6:	push   rsp
   14003e2c7:	add    BYTE PTR [rcx+0x0],ch
   14003e2ca:	jo     0x14003e2cc
   14003e2cc:	sub    eax,0x6e004500
   14003e2d1:	add    BYTE PTR [rax+rax*1+0x53],ah
   14003e2d5:	add    BYTE PTR [rbp+0x0],ah
   14003e2d8:	jae    0x14003e2da
   14003e2da:	jae    0x14003e2dc
   14003e2dc:	imul   eax,DWORD PTR [rax],0x6e006f
   14003e2e2:	add    BYTE PTR [rax],al
   14003e2e4:	add    BYTE PTR [rax],al
   14003e2e6:	add    BYTE PTR [rax],al
   14003e2e8:	add    BYTE PTR [rcx],al
   14003e2ea:	add    BYTE PTR [rax],al
   14003e2ec:	add    BYTE PTR [rax],al
   14003e2ee:	add    BYTE PTR [rax],al
   14003e2f0:	jo     0x14003e29e
   14003e2f2:	add    al,BYTE PTR [rax+0x1]
   14003e2f5:	add    BYTE PTR [rax],al
   14003e2f7:	add    BYTE PTR [rax-0x38],al
   14003e2fa:	add    BYTE PTR [rax+0x1],al
   14003e2fd:	add    BYTE PTR [rax],al
   14003e2ff:	add    BYTE PTR [rax],ah
   14003e301:	add    BYTE PTR [rax],0x40
   14003e304:	add    DWORD PTR [rax],eax
   14003e306:	add    BYTE PTR [rax],al
   14003e308:	mov    al,0x58
   14003e30a:	add    DWORD PTR [rax+0x1],eax
   14003e30d:	add    BYTE PTR [rax],al
   14003e30f:	add    BYTE PTR [rax],dl
   14003e311:	mov    ebx,0x14002
   14003e316:	add    BYTE PTR [rax],al
   14003e318:	sub    BYTE PTR [rbp+0x14002],0x0
   14003e31f:	add    al,dh
   14003e321:	stos   DWORD PTR es:[rdi],eax
   14003e322:	add    al,BYTE PTR [rax+0x1]
   14003e325:	add    BYTE PTR [rax],al
   14003e327:	add    al,dh
   14003e329:	push   rax
   14003e32a:	add    BYTE PTR [rax+0x1],al
   14003e32d:	add    BYTE PTR [rax],al
   14003e32f:	add    BYTE PTR [rax-0x55],ah
   14003e332:	add    al,BYTE PTR [rax+0x1]
   14003e335:	add    BYTE PTR [rax],al
   14003e337:	add    BYTE PTR [rax],ah
   14003e339:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003e33d:	add    BYTE PTR [rax],al
   14003e33f:	add    BYTE PTR [rax],ah
   14003e341:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003e345:	add    BYTE PTR [rax],al
   14003e347:	add    BYTE PTR [rax],ah
   14003e349:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003e34d:	add    BYTE PTR [rax],al
   14003e34f:	add    BYTE PTR [rax],ah
   14003e351:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003e355:	add    BYTE PTR [rax],al
   14003e357:	add    al,dh
   14003e359:	fild   WORD PTR [rax]
   14003e35b:	rex add DWORD PTR [rax],eax
   14003e35e:	add    BYTE PTR [rax],al
   14003e360:	add    DWORD PTR [rax],eax
   14003e362:	add    BYTE PTR [rax],al
   14003e364:	add    BYTE PTR [rax],al
   14003e366:	add    BYTE PTR [rax],al
   14003e368:	rol    BYTE PTR [rax],0x0
   14003e36b:	add    BYTE PTR [rax],al
   14003e36d:	add    BYTE PTR [rax],al
   14003e36f:	rex.RX add BYTE PTR [rax],r8b
   14003e372:	add    BYTE PTR [rax],al
   14003e374:	add    BYTE PTR [rip+0xffffffffabb00000],al        # 0xebb3e37a
   14003e37a:	add    al,BYTE PTR [rax+0x1]
   14003e37d:	add    BYTE PTR [rax],al
   14003e37f:	add    BYTE PTR [rax+0x5f],dl
   14003e382:	add    BYTE PTR [rax+0x1],al
   14003e385:	add    BYTE PTR [rax],al
   14003e387:	add    BYTE PTR [rax],dh
   14003e389:	(bad)  
   14003e38a:	add    BYTE PTR [rax+0x1],al
   14003e38d:	add    BYTE PTR [rax],al
   14003e38f:	add    BYTE PTR [rax+0x14002d1],dl
   14003e395:	add    BYTE PTR [rax],al
   14003e397:	add    BYTE PTR [rax],al
   14003e399:	(bad)  
   14003e39a:	add    BYTE PTR [rax+0x1],al
   14003e39d:	add    BYTE PTR [rax],al
   14003e39f:	add    BYTE PTR [rax+0x5f],ah
   14003e3a2:	add    BYTE PTR [rax+0x1],al
   14003e3a5:	add    BYTE PTR [rax],al
   14003e3a7:	add    BYTE PTR [rcx+0x0],cl
   14003e3aa:	push   rbx
   14003e3ab:	add    BYTE PTR [rdi+0x0],bl
   14003e3ae:	add    BYTE PTR [rbp+0x0],r8b
   14003e3b2:	rex.RX add BYTE PTR [rcx+0x0],r8b
   14003e3b6:	push   rbp
   14003e3b7:	add    BYTE PTR [rax+rax*1+0x54],cl
   14003e3bb:	add    BYTE PTR [rax],al
   14003e3bd:	add    BYTE PTR [rax],al
   14003e3bf:	add    BYTE PTR [rcx+0x0],cl
   14003e3c2:	push   rbx
   14003e3c3:	add    BYTE PTR [rdi+0x0],bl
   14003e3c6:	push   rbp
   14003e3c7:	add    BYTE PTR [rdx+0x0],dl
   14003e3ca:	rex.WR add BYTE PTR [rax],r8b
   14003e3cd:	add    BYTE PTR [rax],al
   14003e3cf:	add    BYTE PTR [rcx+0x0],cl
   14003e3d2:	push   rbx
   14003e3d3:	add    BYTE PTR [rdi+0x0],bl
   14003e3d6:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14003e3da:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14003e3de:	pop    rdi
   14003e3df:	add    BYTE PTR [rsi+0x0],al
   14003e3e2:	push   rbp
   14003e3e3:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14003e3e7:	add    BYTE PTR [rsi+0x0],al
   14003e3ea:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   14003e3ef:	add    BYTE PTR [rax+0x0],dl
   14003e3f2:	add    BYTE PTR [r8+rax*1+0x48],dl
	...
   14003e3ff:	add    BYTE PTR [rcx+0x0],cl
   14003e402:	push   rbx
   14003e403:	add    BYTE PTR [rdi+0x0],bl
   14003e406:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14003e40a:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14003e40e:	pop    rdi
   14003e40f:	add    BYTE PTR [rsi+0x0],al
   14003e412:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   14003e417:	add    BYTE PTR [rsi+0x0],cl
   14003e41a:	add    BYTE PTR [r13+0x0],cl
   14003e41e:	add    BYTE PTR [r8],r8b
   14003e421:	add    BYTE PTR [rax],al
   14003e423:	add    BYTE PTR [rax],al
   14003e425:	add    BYTE PTR [rax],al
   14003e427:	add    BYTE PTR [rcx+0x0],cl
   14003e42a:	push   rbx
   14003e42b:	add    BYTE PTR [rdi+0x0],bl
   14003e42e:	add    BYTE PTR [r13+0x0],r9b
   14003e432:	add    BYTE PTR [r9+0x0],cl
   14003e436:	rex.WR add BYTE PTR [rdi+0x0],r11b
   14003e43a:	push   rbp
   14003e43b:	add    BYTE PTR [rbx+0x0],dl
   14003e43e:	add    BYTE PTR [r10+0x0],r10b
   14003e442:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   14003e446:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14003e44a:	add    BYTE PTR [rax],al
   14003e44c:	add    BYTE PTR [rax],al
   14003e44e:	add    BYTE PTR [rax],al
   14003e450:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e454:	pop    rdi
   14003e455:	add    BYTE PTR [rbp+0x0],al
   14003e458:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14003e45c:	rex.WB add BYTE PTR [r8+rax*1+0x5f],cl
   14003e461:	add    BYTE PTR [rbx+0x0],dl
   14003e464:	rex.WRB add BYTE PTR [r8+rax*1+0x50],r10b
   14003e469:	add    BYTE PTR [rbp+0x0],al
   14003e46c:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14003e470:	rex.WB add BYTE PTR [r8+rax*1+0x41],cl
   14003e475:	add    BYTE PTR [rax+rax*1+0x44],al
   14003e479:	add    BYTE PTR [rdx+0x0],dl
   14003e47c:	add    BYTE PTR [r11+0x0],r10b
   14003e480:	push   rbx
   14003e481:	add    BYTE PTR [rax],al
   14003e483:	add    BYTE PTR [rax],al
   14003e485:	add    BYTE PTR [rax],al
   14003e487:	add    BYTE PTR [rcx+0x0],cl
   14003e48a:	push   rbx
   14003e48b:	add    BYTE PTR [rdi+0x0],bl
   14003e48e:	rex.WR add BYTE PTR [rdi+0x0],r9b
   14003e492:	rex.RXB add BYTE PTR [r9+0x0],r9b
   14003e496:	rex.WRX add BYTE PTR [rsi+0x0],r9b
   14003e49a:	add    BYTE PTR [r13+0x0],cl
   14003e49e:	add    BYTE PTR [r8],r8b
   14003e4a1:	add    BYTE PTR [rax],al
   14003e4a3:	add    BYTE PTR [rax],al
   14003e4a5:	add    BYTE PTR [rax],al
   14003e4a7:	add    BYTE PTR [rcx+0x0],cl
   14003e4aa:	push   rbx
   14003e4ab:	add    BYTE PTR [rdi+0x0],bl
   14003e4ae:	push   rax
   14003e4af:	add    BYTE PTR [rbp+0x0],al
   14003e4b2:	push   rdx
   14003e4b3:	add    BYTE PTR [rbx+0x0],dl
   14003e4b6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e4ba:	add    BYTE PTR [r8+rax*1+0x4e],cl
   14003e4bf:	add    BYTE PTR [rcx+0x0],al
   14003e4c2:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14003e4c6:	pop    rdi
   14003e4c7:	add    BYTE PTR [rsi+0x0],al
   14003e4ca:	push   rbp
   14003e4cb:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14003e4cf:	add    BYTE PTR [rsi+0x0],cl
   14003e4d2:	add    BYTE PTR [r13+0x0],cl
   14003e4d6:	add    BYTE PTR [r8],r8b
   14003e4d9:	add    BYTE PTR [rax],al
   14003e4db:	add    BYTE PTR [rax],al
   14003e4dd:	add    BYTE PTR [rax],al
   14003e4df:	add    BYTE PTR [rcx+0x0],cl
   14003e4e2:	push   rbx
   14003e4e3:	add    BYTE PTR [rdi+0x0],bl
   14003e4e6:	push   rax
   14003e4e7:	add    BYTE PTR [rbp+0x0],al
   14003e4ea:	push   rdx
   14003e4eb:	add    BYTE PTR [rbx+0x0],dl
   14003e4ee:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e4f2:	add    BYTE PTR [r8+rax*1+0x4e],cl
   14003e4f7:	add    BYTE PTR [rcx+0x0],al
   14003e4fa:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14003e4fe:	pop    rdi
   14003e4ff:	add    BYTE PTR [rax+0x0],dl
   14003e502:	push   rdx
   14003e503:	add    BYTE PTR [rbp+0x0],al
   14003e506:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14003e50a:	pop    rax
   14003e50b:	add    BYTE PTR [rax],al
   14003e50d:	add    BYTE PTR [rax],al
   14003e50f:	add    BYTE PTR [rcx+0x0],cl
   14003e512:	push   rbx
   14003e513:	add    BYTE PTR [rdi+0x0],bl
   14003e516:	push   rax
   14003e517:	add    BYTE PTR [rbp+0x0],al
   14003e51a:	push   rdx
   14003e51b:	add    BYTE PTR [rbx+0x0],dl
   14003e51e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e522:	add    BYTE PTR [r8+rax*1+0x4e],cl
   14003e527:	add    BYTE PTR [rcx+0x0],al
   14003e52a:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14003e52e:	pop    rdi
   14003e52f:	add    BYTE PTR [rdi+0x0],al
   14003e532:	rex.WB add BYTE PTR [r14+0x0],dl
   14003e536:	add    BYTE PTR [r14+0x0],r9b
   14003e53a:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   14003e53e:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14003e542:	add    BYTE PTR [rax],al
   14003e544:	add    BYTE PTR [rax],al
   14003e546:	add    BYTE PTR [rax],al
   14003e548:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e54c:	pop    rdi
   14003e54d:	add    BYTE PTR [rax+0x0],dl
   14003e550:	add    BYTE PTR [r10+0x0],r10b
   14003e554:	push   rbx
   14003e555:	add    BYTE PTR [rdi+0x0],cl
   14003e558:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   14003e55c:	rex.WR add BYTE PTR [rsi+0x0],r9b
   14003e560:	add    BYTE PTR [r13+0x0],cl
   14003e564:	add    BYTE PTR [r15+0x0],r11b
   14003e568:	rex.WRB add BYTE PTR [r9+0x0],r9b
   14003e56c:	add    BYTE PTR [rax+rax*1+0x4c],r8b
   14003e571:	add    BYTE PTR [rbp+0x0],al
   14003e574:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   14003e578:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14003e57c:	add    BYTE PTR [rax],al
   14003e57e:	add    BYTE PTR [rax],al
   14003e580:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e584:	pop    rdi
   14003e585:	add    BYTE PTR [rax+0x0],dl
   14003e588:	add    BYTE PTR [r10+0x0],r10b
   14003e58c:	push   rbx
   14003e58d:	add    BYTE PTR [rdi+0x0],cl
   14003e590:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   14003e594:	rex.WR add BYTE PTR [rsi+0x0],r9b
   14003e598:	add    BYTE PTR [r13+0x0],cl
   14003e59c:	add    BYTE PTR [r15+0x0],r11b
   14003e5a0:	push   rbx
   14003e5a1:	add    BYTE PTR [rbp+0x0],dl
   14003e5a4:	push   rdx
   14003e5a5:	add    BYTE PTR [rsi+0x0],cl
   14003e5a8:	add    BYTE PTR [r13+0x0],cl
   14003e5ac:	add    BYTE PTR [r8],r8b
   14003e5af:	add    BYTE PTR [rcx+0x0],cl
   14003e5b2:	push   rbx
   14003e5b3:	add    BYTE PTR [rdi+0x0],bl
   14003e5b6:	push   rax
   14003e5b7:	add    BYTE PTR [rbp+0x0],al
   14003e5ba:	push   rdx
   14003e5bb:	add    BYTE PTR [rbx+0x0],dl
   14003e5be:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e5c2:	add    BYTE PTR [r8+rax*1+0x4e],cl
   14003e5c7:	add    BYTE PTR [rcx+0x0],al
   14003e5ca:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14003e5ce:	pop    rdi
   14003e5cf:	add    BYTE PTR [rbx+0x0],dl
   14003e5d2:	push   rbp
   14003e5d3:	add    BYTE PTR [rsi+0x0],al
   14003e5d6:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14003e5da:	pop    rax
   14003e5db:	add    BYTE PTR [rax],al
   14003e5dd:	add    BYTE PTR [rax],al
   14003e5df:	add    BYTE PTR [rcx+0x0],cl
   14003e5e2:	push   rbx
   14003e5e3:	add    BYTE PTR [rdi+0x0],bl
   14003e5e6:	add    BYTE PTR [r8+rax*1+0x44],al
   14003e5eb:	add    BYTE PTR [rdx+0x0],dl
   14003e5ee:	add    BYTE PTR [r11+0x0],r10b
   14003e5f2:	push   rbx
   14003e5f3:	add    BYTE PTR [rdi+0x0],bl
   14003e5f6:	rex.RX add BYTE PTR [rbp+0x0],r10b
   14003e5fa:	rex.WR add BYTE PTR [rax+rax*1+0x50],r9b
   14003e5ff:	add    BYTE PTR [rdi+0x0],cl
   14003e602:	push   rbx
   14003e603:	add    BYTE PTR [rax+rax*1+0x41],dl
   14003e607:	add    BYTE PTR [rax+rax*1+0x41],cl
   14003e60b:	add    BYTE PTR [rax+rax*1+0x44],al
   14003e60f:	add    BYTE PTR [rdx+0x0],dl
   14003e612:	add    BYTE PTR [r11+0x0],r10b
   14003e616:	push   rbx
	...
   14003e61f:	add    BYTE PTR [rcx+0x0],cl
   14003e622:	push   rbx
   14003e623:	add    BYTE PTR [rdi+0x0],bl
   14003e626:	add    BYTE PTR [r8+rax*1+0x44],al
   14003e62b:	add    BYTE PTR [rdx+0x0],dl
   14003e62e:	add    BYTE PTR [r11+0x0],r10b
   14003e632:	push   rbx
   14003e633:	add    BYTE PTR [rdi+0x0],bl
   14003e636:	push   rax
   14003e637:	add    BYTE PTR [rdi+0x0],cl
   14003e63a:	push   rbx
   14003e63b:	add    BYTE PTR [rax+rax*1+0x41],dl
   14003e63f:	add    BYTE PTR [rax+rax*1+0x43],cl
   14003e643:	add    BYTE PTR [rdi+0x0],cl
   14003e646:	add    BYTE PTR [rbp+0x0],r8b
   14003e64a:	add    BYTE PTR [rax],al
   14003e64c:	add    BYTE PTR [rax],al
   14003e64e:	add    BYTE PTR [rax],al
   14003e650:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e654:	pop    rdi
   14003e655:	add    BYTE PTR [rcx+0x0],al
   14003e658:	add    BYTE PTR [rax+rax*1+0x52],r8b
   14003e65d:	add    BYTE PTR [rbp+0x0],al
   14003e660:	push   rbx
   14003e661:	add    BYTE PTR [rbx+0x0],dl
   14003e664:	pop    rdi
   14003e665:	add    BYTE PTR [rbx+0x0],dl
   14003e668:	push   rsp
   14003e669:	add    BYTE PTR [rdx+0x0],dl
   14003e66c:	add    BYTE PTR [r13+0x0],r8b
   14003e670:	push   rsp
   14003e671:	add    BYTE PTR [rax],al
   14003e673:	add    BYTE PTR [rax],al
   14003e675:	add    BYTE PTR [rax],al
   14003e677:	add    BYTE PTR [rcx+0x0],cl
   14003e67a:	push   rbx
   14003e67b:	add    BYTE PTR [rdi+0x0],bl
   14003e67e:	add    BYTE PTR [r8+rax*1+0x44],al
   14003e683:	add    BYTE PTR [rdx+0x0],dl
   14003e686:	add    BYTE PTR [r11+0x0],r10b
   14003e68a:	push   rbx
   14003e68b:	add    BYTE PTR [rdi+0x0],bl
   14003e68e:	push   rbx
   14003e68f:	add    BYTE PTR [rax+rax*1+0x41],dl
   14003e693:	add    BYTE PTR [rax+rax*1+0x45],dl
   14003e697:	add    BYTE PTR [rdi+0x0],cl
   14003e69a:	push   rdx
   14003e69b:	add    BYTE PTR [rax+0x0],dl
   14003e69e:	push   rdx
   14003e69f:	add    BYTE PTR [rdi+0x0],cl
   14003e6a2:	push   rsi
   14003e6a3:	add    BYTE PTR [rcx+0x0],cl
   14003e6a6:	rex.WRX add BYTE PTR [rbx+0x0],r8b
   14003e6aa:	add    BYTE PTR [r8],r8b
   14003e6ad:	add    BYTE PTR [rax],al
   14003e6af:	add    BYTE PTR [rcx+0x0],cl
   14003e6b2:	push   rbx
   14003e6b3:	add    BYTE PTR [rdi+0x0],bl
   14003e6b6:	add    BYTE PTR [r8+rax*1+0x44],al
   14003e6bb:	add    BYTE PTR [rdx+0x0],dl
   14003e6be:	add    BYTE PTR [r11+0x0],r10b
   14003e6c2:	push   rbx
   14003e6c3:	add    BYTE PTR [rdi+0x0],bl
   14003e6c6:	rex.XB add BYTE PTR [r9+0x0],cl
   14003e6ca:	push   rsp
   14003e6cb:	add    BYTE PTR [rcx+0x0],bl
   14003e6ce:	add    BYTE PTR [rax],al
   14003e6d0:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e6d4:	pop    rdi
   14003e6d5:	add    BYTE PTR [rcx+0x0],al
   14003e6d8:	add    BYTE PTR [rax+rax*1+0x52],r8b
   14003e6dd:	add    BYTE PTR [rbp+0x0],al
   14003e6e0:	push   rbx
   14003e6e1:	add    BYTE PTR [rbx+0x0],dl
   14003e6e4:	pop    rdi
   14003e6e5:	add    BYTE PTR [rbx+0x0],al
   14003e6e8:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14003e6ec:	rex.WRX add BYTE PTR [rax+r8*1+0x52],r10b
   14003e6f1:	add    BYTE PTR [rcx+0x0],bl
   14003e6f4:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   14003e6f8:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14003e6fc:	add    BYTE PTR [rax],al
   14003e6fe:	add    BYTE PTR [rax],al
   14003e700:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e704:	pop    rdi
   14003e705:	add    BYTE PTR [rcx+0x0],al
   14003e708:	add    BYTE PTR [rax+rax*1+0x52],r8b
   14003e70d:	add    BYTE PTR [rbp+0x0],al
   14003e710:	push   rbx
   14003e711:	add    BYTE PTR [rbx+0x0],dl
   14003e714:	pop    rdi
   14003e715:	add    BYTE PTR [rbx+0x0],al
   14003e718:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14003e71c:	rex.WRX add BYTE PTR [rax+r8*1+0x52],r10b
   14003e721:	add    BYTE PTR [rcx+0x0],bl
   14003e724:	push   rbx
   14003e725:	add    BYTE PTR [rax+0x0],cl
   14003e728:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14003e72c:	push   rsp
   14003e72d:	add    BYTE PTR [rsi+0x0],cl
   14003e730:	add    BYTE PTR [r13+0x0],cl
   14003e734:	add    BYTE PTR [r8],r8b
   14003e737:	add    BYTE PTR [rcx+0x0],cl
   14003e73a:	push   rbx
   14003e73b:	add    BYTE PTR [rdi+0x0],bl
   14003e73e:	rex.XB add BYTE PTR [r13+0x0],dl
   14003e742:	push   rdx
   14003e743:	add    BYTE PTR [rdx+0x0],dl
   14003e746:	add    BYTE PTR [r14+0x0],r9b
   14003e74a:	rex.XB add BYTE PTR [r9+0x0],bl
   14003e74e:	pop    rdi
   14003e74f:	add    BYTE PTR [rcx+0x0],al
   14003e752:	rex.WRB add BYTE PTR [r15+0x0],r9b
   14003e756:	push   rbp
   14003e757:	add    BYTE PTR [rsi+0x0],cl
   14003e75a:	push   rsp
   14003e75b:	add    BYTE PTR [rcx+0x0],al
   14003e75e:	rex.WRX add BYTE PTR [rax+r8*1+0x53],r8b
   14003e763:	add    BYTE PTR [rcx+0x0],bl
   14003e766:	rex.WRB add BYTE PTR [r10+0x0],r8b
   14003e76a:	rex.WRXB add BYTE PTR [r8+r8*1+0x0],r9b
   14003e76f:	add    BYTE PTR [rcx+0x0],cl
   14003e772:	push   rbx
   14003e773:	add    BYTE PTR [rdi+0x0],bl
   14003e776:	rex.XB add BYTE PTR [r13+0x0],dl
   14003e77a:	push   rdx
   14003e77b:	add    BYTE PTR [rdx+0x0],dl
   14003e77e:	add    BYTE PTR [r14+0x0],r9b
   14003e782:	rex.XB add BYTE PTR [r9+0x0],bl
   14003e786:	pop    rdi
   14003e787:	add    BYTE PTR [rcx+0x0],al
   14003e78a:	rex.WRB add BYTE PTR [r15+0x0],r9b
   14003e78e:	push   rbp
   14003e78f:	add    BYTE PTR [rsi+0x0],cl
   14003e792:	push   rsp
   14003e793:	add    BYTE PTR [rax],al
   14003e795:	add    BYTE PTR [rax],al
   14003e797:	add    BYTE PTR [rcx+0x0],cl
   14003e79a:	push   rbx
   14003e79b:	add    BYTE PTR [rdi+0x0],bl
   14003e79e:	add    BYTE PTR [rcx+0x0],r8b
   14003e7a2:	push   rsp
   14003e7a3:	add    BYTE PTR [rbp+0x0],al
   14003e7a6:	pop    rdi
   14003e7a7:	add    BYTE PTR [rsi+0x0],al
   14003e7aa:	push   rbp
   14003e7ab:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14003e7af:	add    BYTE PTR [rax+rax*1+0x41],al
   14003e7b3:	add    BYTE PTR [rax+rax*1+0x45],dl
	...
   14003e7bf:	add    BYTE PTR [rcx+0x0],cl
   14003e7c2:	push   rbx
   14003e7c3:	add    BYTE PTR [rdi+0x0],bl
   14003e7c6:	add    BYTE PTR [rcx+0x0],r8b
   14003e7ca:	push   rsp
   14003e7cb:	add    BYTE PTR [rbp+0x0],al
   14003e7ce:	pop    rdi
   14003e7cf:	add    BYTE PTR [rbp+0x0],cl
   14003e7d2:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e7d6:	push   rsp
   14003e7d7:	add    BYTE PTR [rax+0x0],cl
   14003e7da:	add    BYTE PTR [rax],al
   14003e7dc:	add    BYTE PTR [rax],al
   14003e7de:	add    BYTE PTR [rax],al
   14003e7e0:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e7e4:	pop    rdi
   14003e7e5:	add    BYTE PTR [rax+rax*1+0x41],al
   14003e7e9:	add    BYTE PTR [rax+rax*1+0x45],dl
   14003e7ed:	add    BYTE PTR [rdi+0x0],bl
   14003e7f0:	add    BYTE PTR [rcx+0x0],r8b
   14003e7f4:	pop    rcx
   14003e7f5:	add    BYTE PTR [rax],al
   14003e7f7:	add    BYTE PTR [rcx+0x0],cl
   14003e7fa:	push   rbx
   14003e7fb:	add    BYTE PTR [rdi+0x0],bl
   14003e7fe:	add    BYTE PTR [rcx+0x0],r8b
   14003e802:	push   rsp
   14003e803:	add    BYTE PTR [rbp+0x0],al
   14003e806:	pop    rdi
   14003e807:	add    BYTE PTR [rcx+0x0],bl
   14003e80a:	add    BYTE PTR [r9+0x0],r8b
   14003e80e:	push   rdx
	...
   14003e817:	add    BYTE PTR [rcx+0x0],cl
   14003e81a:	push   rbx
   14003e81b:	add    BYTE PTR [rdi+0x0],bl
   14003e81e:	add    BYTE PTR [rcx+0x0],r8b
   14003e822:	push   rsp
   14003e823:	add    BYTE PTR [rbp+0x0],al
   14003e826:	pop    rdi
   14003e827:	add    BYTE PTR [rbp+0x0],cl
   14003e82a:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e82e:	push   rsp
   14003e82f:	add    BYTE PTR [rax+0x0],cl
   14003e832:	rex.WRX add BYTE PTR [rcx+0x0],r8b
   14003e836:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14003e83a:	add    BYTE PTR [rax],al
   14003e83c:	add    BYTE PTR [rax],al
   14003e83e:	add    BYTE PTR [rax],al
   14003e840:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e844:	pop    rdi
   14003e845:	add    BYTE PTR [rax+rax*1+0x41],al
   14003e849:	add    BYTE PTR [rax+rax*1+0x45],dl
   14003e84d:	add    BYTE PTR [rdi+0x0],bl
   14003e850:	add    BYTE PTR [rcx+0x0],r8b
   14003e854:	pop    rcx
   14003e855:	add    BYTE PTR [rsi+0x0],cl
   14003e858:	add    BYTE PTR [r13+0x0],cl
   14003e85c:	add    BYTE PTR [r8],r8b
   14003e85f:	add    BYTE PTR [rcx+0x0],cl
   14003e862:	push   rbx
   14003e863:	add    BYTE PTR [rdi+0x0],bl
   14003e866:	add    BYTE PTR [rcx+0x0],r9b
   14003e86a:	rex.RXB add BYTE PTR [r9+0x0],r9b
   14003e86e:	push   rsp
   14003e86f:	add    BYTE PTR [rbx+0x0],dl
   14003e872:	add    BYTE PTR [rax],al
   14003e874:	add    BYTE PTR [rax],al
   14003e876:	add    BYTE PTR [rax],al
   14003e878:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e87c:	pop    rdi
   14003e87d:	add    BYTE PTR [rsi+0x0],cl
   14003e880:	push   rbp
   14003e881:	add    BYTE PTR [rbp+0x0],cl
   14003e884:	rex.X add BYTE PTR [rbp+0x0],al
   14003e888:	push   rdx
   14003e889:	add    BYTE PTR [rax],al
   14003e88b:	add    BYTE PTR [rax],al
   14003e88d:	add    BYTE PTR [rax],al
   14003e88f:	add    BYTE PTR [rcx+0x0],cl
   14003e892:	push   rbx
   14003e893:	add    BYTE PTR [rdi+0x0],bl
   14003e896:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e89a:	add    BYTE PTR [r11+0x0],r8b
   14003e89e:	rex.W add BYTE PTR [rcx+0x0],al
   14003e8a2:	push   rdx
   14003e8a3:	add    BYTE PTR [rax],al
   14003e8a5:	add    BYTE PTR [rax],al
   14003e8a7:	add    BYTE PTR [rcx+0x0],cl
   14003e8aa:	push   rbx
   14003e8ab:	add    BYTE PTR [rdi+0x0],bl
   14003e8ae:	push   rax
   14003e8af:	add    BYTE PTR [rcx+0x0],al
   14003e8b2:	push   rbx
   14003e8b3:	add    BYTE PTR [rbx+0x0],dl
   14003e8b6:	push   rdi
   14003e8b7:	add    BYTE PTR [rdi+0x0],cl
   14003e8ba:	push   rdx
   14003e8bb:	add    BYTE PTR [rax+rax*1+0x0],al
   14003e8bf:	add    BYTE PTR [rcx+0x0],cl
   14003e8c2:	push   rbx
   14003e8c3:	add    BYTE PTR [rdi+0x0],bl
   14003e8c6:	push   rsp
   14003e8c7:	add    BYTE PTR [rbp+0x0],al
   14003e8ca:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14003e8ce:	push   rax
   14003e8cf:	add    BYTE PTR [rax+0x0],cl
   14003e8d2:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e8d6:	add    BYTE PTR [r15+0x0],r11b
   14003e8da:	rex.RX add BYTE PTR [rbp+0x0],r10b
   14003e8de:	rex.WR add BYTE PTR [rax+rax*1+0x54],r9b
   14003e8e3:	add    BYTE PTR [rbp+0x0],al
   14003e8e6:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14003e8ea:	push   rax
   14003e8eb:	add    BYTE PTR [rax+0x0],cl
   14003e8ee:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e8f2:	add    BYTE PTR [r14+0x0],r9b
   14003e8f6:	push   rbp
   14003e8f7:	add    BYTE PTR [rbp+0x0],cl
   14003e8fa:	rex.X add BYTE PTR [rbp+0x0],al
   14003e8fe:	push   rdx
	...
   14003e907:	add    BYTE PTR [rcx+0x0],cl
   14003e90a:	push   rbx
   14003e90b:	add    BYTE PTR [rdi+0x0],bl
   14003e90e:	push   rsp
   14003e90f:	add    BYTE PTR [rbp+0x0],al
   14003e912:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14003e916:	push   rax
   14003e917:	add    BYTE PTR [rax+0x0],cl
   14003e91a:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e91e:	add    BYTE PTR [r15+0x0],r11b
   14003e922:	rex.XB add BYTE PTR [r15+0x0],cl
   14003e926:	push   rbp
   14003e927:	add    BYTE PTR [rsi+0x0],cl
   14003e92a:	push   rsp
   14003e92b:	add    BYTE PTR [rdx+0x0],dl
   14003e92e:	pop    rcx
   14003e92f:	add    BYTE PTR [rbx+0x0],al
   14003e932:	rex.WRXB add BYTE PTR [r8+r8*1+0x45],r8b
	...
   14003e93f:	add    BYTE PTR [rcx+0x0],cl
   14003e942:	push   rbx
   14003e943:	add    BYTE PTR [rdi+0x0],bl
   14003e946:	push   rsp
   14003e947:	add    BYTE PTR [rbp+0x0],al
   14003e94a:	rex.WR add BYTE PTR [rbp+0x0],r8b
   14003e94e:	push   rax
   14003e94f:	add    BYTE PTR [rax+0x0],cl
   14003e952:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003e956:	add    BYTE PTR [r15+0x0],r11b
   14003e95a:	add    BYTE PTR [r10+0x0],dl
   14003e95e:	add    BYTE PTR [r9+0x0],r8b
   14003e962:	rex.XB add BYTE PTR [r15+0x0],cl
   14003e966:	add    BYTE PTR [rbp+0x0],r8b
   14003e96a:	add    BYTE PTR [rax],al
   14003e96c:	add    BYTE PTR [rax],al
   14003e96e:	add    BYTE PTR [rax],al
   14003e970:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e974:	pop    rdi
   14003e975:	add    BYTE PTR [rax+rax*1+0x45],dl
   14003e979:	add    BYTE PTR [rax+rax*1+0x45],cl
   14003e97d:	add    BYTE PTR [rax+0x0],dl
   14003e980:	rex.W add BYTE PTR [rdi+0x0],cl
   14003e984:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14003e988:	pop    rdi
   14003e989:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14003e98d:	add    BYTE PTR [rbx+0x0],al
   14003e990:	add    BYTE PTR [r8+rax*1+0x4e],cl
   14003e995:	add    BYTE PTR [rbp+0x0],dl
   14003e998:	rex.WRB add BYTE PTR [r10+0x0],r8b
   14003e99c:	add    BYTE PTR [r10+0x0],r10b
	...
   14003e9a8:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e9ac:	pop    rdi
   14003e9ad:	add    BYTE PTR [rax+rax*1+0x49],dl
   14003e9b1:	add    BYTE PTR [rbp+0x0],cl
   14003e9b4:	add    BYTE PTR [r15+0x0],r11b
   14003e9b8:	rex.RX add BYTE PTR [rbp+0x0],r10b
   14003e9bc:	rex.WR add BYTE PTR [rax+rax*1+0x54],r9b
   14003e9c1:	add    BYTE PTR [rcx+0x0],cl
   14003e9c4:	rex.WRB add BYTE PTR [r13+0x0],r8b
	...
   14003e9d0:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e9d4:	pop    rdi
   14003e9d5:	add    BYTE PTR [rax+rax*1+0x49],dl
   14003e9d9:	add    BYTE PTR [rbp+0x0],cl
   14003e9dc:	add    BYTE PTR [r15+0x0],r11b
   14003e9e0:	rex.W add BYTE PTR [rdi+0x0],cl
   14003e9e4:	push   rbp
   14003e9e5:	add    BYTE PTR [rdx+0x0],dl
	...
   14003e9f0:	rex.WB add BYTE PTR [r11+0x0],dl
   14003e9f4:	pop    rdi
   14003e9f5:	add    BYTE PTR [rax+rax*1+0x49],dl
   14003e9f9:	add    BYTE PTR [rbp+0x0],cl
   14003e9fc:	add    BYTE PTR [r15+0x0],r11b
   14003ea00:	rex.WRB add BYTE PTR [r9+0x0],r9b
   14003ea04:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   14003ea08:	push   rdx
   14003ea09:	add    BYTE PTR [rbx+0x0],dl
   14003ea0c:	add    BYTE PTR [r11+0x0],r8b
	...
   14003ea18:	xor    BYTE PTR [rdx+rax*1+0x140],ch
   14003ea1f:	add    BYTE PTR [rax+0x140005a],dl
   14003ea25:	add    BYTE PTR [rax],al
   14003ea27:	add    BYTE PTR [rax+0x140005b],dh
   14003ea2d:	add    BYTE PTR [rax],al
   14003ea2f:	add    BYTE PTR [rax+0x140005b],dl
   14003ea35:	add    BYTE PTR [rax],al
   14003ea37:	add    BYTE PTR [rax+0x5b],dh
   14003ea3a:	add    BYTE PTR [rax+0x1],al
   14003ea3d:	add    BYTE PTR [rax],al
   14003ea3f:	add    al,dl
   14003ea41:	pop    rax
   14003ea42:	add    DWORD PTR [rax+0x1],eax
   14003ea45:	add    BYTE PTR [rax],al
   14003ea47:	add    al,ah
   14003ea49:	pop    rax
   14003ea4a:	add    DWORD PTR [rax+0x1],eax
   14003ea4d:	add    BYTE PTR [rax],al
   14003ea4f:	add    al,ah
   14003ea51:	pop    rax
   14003ea52:	add    DWORD PTR [rax+0x1],eax
   14003ea55:	add    BYTE PTR [rax],al
   14003ea57:	add    BYTE PTR [rax],ah
   14003ea59:	stos   DWORD PTR es:[rdi],eax
   14003ea5a:	add    al,BYTE PTR [rax+0x1]
   14003ea5d:	add    BYTE PTR [rax],al
   14003ea5f:	add    BYTE PTR [rax],ah
   14003ea61:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ea65:	add    BYTE PTR [rax],al
   14003ea67:	add    BYTE PTR [rax],ah
   14003ea69:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ea6d:	add    BYTE PTR [rax],al
   14003ea6f:	add    BYTE PTR [rax],ah
   14003ea71:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ea75:	add    BYTE PTR [rax],al
   14003ea77:	add    al,dl
   14003ea79:	pop    rax
   14003ea7a:	add    DWORD PTR [rax+0x1],eax
   14003ea7d:	add    BYTE PTR [rax],al
   14003ea7f:	add    al,ah
   14003ea81:	pop    rax
   14003ea82:	add    DWORD PTR [rax+0x1],eax
   14003ea85:	add    BYTE PTR [rax],al
   14003ea87:	add    al,ah
   14003ea89:	pop    rax
   14003ea8a:	add    DWORD PTR [rax+0x1],eax
   14003ea8d:	add    BYTE PTR [rax],al
   14003ea8f:	add    BYTE PTR [rax+rax*1+0x61],dl
   14003ea93:	add    BYTE PTR [rdx+0x0],ah
   14003ea96:	ins    BYTE PTR es:[rdi],dx
   14003ea97:	add    BYTE PTR [rbp+0x0],ah
   14003ea9a:	je     0x14003ea9c
   14003ea9c:	push   rax
   14003ea9d:	add    BYTE PTR [rbx+0x0],al
   14003eaa0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14003eaa4:	jo     0x14003eaa6
   14003eaa6:	jne    0x14003eaa8
   14003eaa8:	je     0x14003eaaa
   14003eaaa:	push   rax
   14003eaab:	add    BYTE PTR [rcx+0x0],ah
   14003eaae:	outs   dx,BYTE PTR ds:[rsi]
   14003eaaf:	add    BYTE PTR [rbp+0x0],ah
   14003eab2:	ins    BYTE PTR es:[rdi],dx
   14003eab3:	add    BYTE PTR [rip+0x6e004500],ch        # 0x1ae042fb9
   14003eab9:	add    BYTE PTR [rcx+0x0],ah
   14003eabc:	(bad)  
   14003eabd:	add    BYTE PTR [rax+rax*1+0x65],ch
   14003eac1:	add    BYTE PTR [rax+rax*1+0x49],dl
   14003eac5:	add    BYTE PTR [rax+0x0],dl
   14003eac8:	add    BYTE PTR [rax],al
   14003eaca:	add    BYTE PTR [rax],al
   14003eacc:	cmp    eax,DWORD PTR [rax]
   14003eace:	add    BYTE PTR [rax],al
   14003ead0:	rex.WRX je 0x14003eb24
   14003ead3:	jne    0x14003eb3a
   14003ead5:	jb     0x14003eb50
   14003ead7:	push   rbx
   14003ead8:	jns    0x14003eb4d
   14003eada:	je     0x14003eb41
   14003eadc:	ins    DWORD PTR es:[rdi],dx
   14003eadd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003eadf:	outs   dx,WORD PTR ds:[rsi]
   14003eae1:	jb     0x14003eb50
   14003eae3:	(bad)  
   14003eae4:	je     0x14003eb4f
   14003eae6:	outs   dx,DWORD PTR ds:[rsi]
   14003eae7:	outs   dx,BYTE PTR ds:[rsi]
	...
   14003eaf0:	outs   dx,BYTE PTR ds:[rsi]
   14003eaf1:	add    BYTE PTR [rax+rax*1+0x64],dh
   14003eaf5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003eaf9:	add    BYTE PTR [rsi],ch
   14003eafb:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14003eaff:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003eb03:	add    BYTE PTR [rax],al
   14003eb05:	add    BYTE PTR [rax],al
   14003eb07:	add    al,ah
   14003eb09:	cmp    eax,0x3c6f394c
   14003eb0e:	rcl    BYTE PTR [rcx],cl
   14003eb10:	cmp    DWORD PTR [rbx+0x0],0x7a794fc0
   14003eb17:	mov    bh,0x60
   14003eb19:	rol    DWORD PTR [rax],0x40
   14003eb1c:	add    DWORD PTR [rax],eax
   14003eb1e:	add    BYTE PTR [rax],al
   14003eb20:	mov    al,0xc1
   14003eb22:	add    BYTE PTR [rax+0x1],al
   14003eb25:	add    BYTE PTR [rax],al
   14003eb27:	add    al,ah
   14003eb29:	(bad)  
   14003eb2a:	add    BYTE PTR [rax+0x1],al
   14003eb2d:	add    BYTE PTR [rax],al
   14003eb2f:	add    BYTE PTR [rax+0x14000cf],dh
   14003eb35:	add    BYTE PTR [rax],al
   14003eb37:	add    BYTE PTR [rax-0x3a],ah
   14003eb3a:	add    al,BYTE PTR [rax+0x1]
   14003eb3d:	add    BYTE PTR [rax],al
   14003eb3f:	add    BYTE PTR [rax+rax*1+0x65],al
   14003eb43:	add    BYTE PTR [rax+rax*1+0x61],ch
   14003eb47:	add    BYTE PTR [rcx+0x0],bh
   14003eb4a:	push   rbx
   14003eb4b:	add    BYTE PTR [rax+rax*1+0x61],dh
   14003eb4f:	add    BYTE PTR [rdx+0x0],dh
   14003eb52:	je     0x14003eb54
	...
   14003eb60:	push   rbx
   14003eb61:	add    BYTE PTR [rdi+0x0],ch
   14003eb64:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14003eb69:	add    BYTE PTR [rcx+0x0],ah
   14003eb6c:	jb     0x14003eb6e
   14003eb6e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14003eb73:	add    BYTE PTR [rcx+0x0],ch
   14003eb76:	movsxd eax,DWORD PTR [rax]
   14003eb78:	jb     0x14003eb7a
   14003eb7a:	outs   dx,DWORD PTR ds:[rsi]
   14003eb7b:	add    BYTE PTR [rbx+0x0],dh
   14003eb7e:	outs   dx,DWORD PTR ds:[rsi]
   14003eb7f:	add    BYTE PTR [rsi+0x0],ah
   14003eb82:	je     0x14003eb84
   14003eb84:	pop    rsp
   14003eb85:	add    BYTE PTR [rdi+0x0],dl
   14003eb88:	imul   eax,DWORD PTR [rax],0x64006e
   14003eb8e:	outs   dx,DWORD PTR ds:[rsi]
   14003eb8f:	add    BYTE PTR [rdi+0x0],dh
   14003eb92:	jae    0x14003eb94
   14003eb94:	pop    rsp
   14003eb95:	add    BYTE PTR [rbx+0x0],al
   14003eb98:	jne    0x14003eb9a
   14003eb9a:	jb     0x14003eb9c
   14003eb9c:	jb     0x14003eb9e
   14003eb9e:	add    BYTE PTR gs:[rsi+0x0],ch
   14003eba2:	je     0x14003eba4
   14003eba4:	push   rsi
   14003eba5:	add    BYTE PTR [rbp+0x0],ah
   14003eba8:	jb     0x14003ebaa
   14003ebaa:	jae    0x14003ebac
   14003ebac:	imul   eax,DWORD PTR [rax],0x6e006f
   14003ebb2:	pop    rsp
   14003ebb3:	add    BYTE PTR [rax+rax*1+0x6f],dl
   14003ebb7:	add    BYTE PTR [rbp+0x0],dh
   14003ebba:	movsxd eax,DWORD PTR [rax]
   14003ebbc:	push   0x65004b00
   14003ebc1:	add    BYTE PTR [rcx+0x0],bh
   14003ebc4:	(bad)  
   14003ebc5:	add    BYTE PTR [rdi+0x0],ch
   14003ebc8:	(bad)  
   14003ebc9:	add    BYTE PTR [rdx+0x0],dh
   14003ebcc:	add    BYTE PTR fs:[rax],al
   14003ebcf:	add    BYTE PTR [rsi-0x8],cl
   14003ebd2:	js     0x14003ebbd
   14003ebd4:	sub    eax,0x97416758
   14003ebd9:	jle    0x14003ec0d
   14003ebdb:	scas   eax,DWORD PTR es:[rdi]
   14003ebdc:	push   rdx
   14003ebdd:	jo     0x14003ec47
   14003ebdf:	mov    BYTE PTR [rax+0x59],dl
   14003ebe2:	add    DWORD PTR [rax+0x1],eax
   14003ebe5:	add    BYTE PTR [rax],al
   14003ebe7:	add    BYTE PTR [rax+0x1400158],ah
   14003ebed:	add    BYTE PTR [rax],al
   14003ebef:	add    BYTE PTR [rax+0x140015a],ah
   14003ebf5:	add    BYTE PTR [rax],al
   14003ebf7:	add    al,ah
   14003ebf9:	push   rdi
   14003ebfa:	add    eax,DWORD PTR [rax+0x1]
   14003ebfd:	add    BYTE PTR [rax],al
   14003ebff:	add    BYTE PTR [rax+0x59],al
   14003ec02:	add    DWORD PTR [rax+0x1],eax
   14003ec05:	add    BYTE PTR [rax],al
   14003ec07:	add    BYTE PTR [rax+0x1400158],dl
   14003ec0d:	add    BYTE PTR [rax],al
   14003ec0f:	add    BYTE PTR [rax+0x140015a],dl
   14003ec15:	add    BYTE PTR [rax],al
   14003ec17:	add    al,al
   14003ec19:	pop    rax
   14003ec1a:	add    eax,DWORD PTR [rax+0x1]
   14003ec1d:	add    BYTE PTR [rax],al
   14003ec1f:	add    BYTE PTR [rax+0x59],ah
   14003ec22:	add    DWORD PTR [rax+0x1],eax
   14003ec25:	add    BYTE PTR [rax],al
   14003ec27:	add    BYTE PTR [rax+0x1400158],al
   14003ec2d:	add    BYTE PTR [rax],al
   14003ec2f:	add    BYTE PTR [rax+0x140015a],al
   14003ec35:	add    BYTE PTR [rax],al
   14003ec37:	add    al,dh
   14003ec39:	int    0x0
   14003ec3b:	rex add DWORD PTR [rax],eax
   14003ec3e:	add    BYTE PTR [rax],al
   14003ec40:	push   rax
   14003ec41:	pop    rax
   14003ec42:	add    eax,DWORD PTR [rax+0x1]
   14003ec45:	add    BYTE PTR [rax],al
   14003ec47:	add    BYTE PTR [rax+0x14000cc],al
   14003ec4d:	add    BYTE PTR [rax],al
   14003ec4f:	add    BYTE PTR [rax],dh
   14003ec51:	pop    rcx
   14003ec52:	add    DWORD PTR [rax+0x1],eax
   14003ec55:	add    BYTE PTR [rax],al
   14003ec57:	add    BYTE PTR [rax+0x58],dh
   14003ec5a:	add    DWORD PTR [rax+0x1],eax
   14003ec5d:	add    BYTE PTR [rax],al
   14003ec5f:	add    BYTE PTR [rax+0x5a],dh
   14003ec62:	add    DWORD PTR [rax+0x1],eax
   14003ec65:	add    BYTE PTR [rax],al
   14003ec67:	add    al,dl
   14003ec69:	pop    rax
   14003ec6a:	add    eax,DWORD PTR [rax+0x1]
   14003ec6d:	add    BYTE PTR [rax],al
   14003ec6f:	add    al,al
   14003ec71:	pop    rcx
   14003ec72:	add    eax,DWORD PTR [rax+0x1]
   14003ec75:	add    BYTE PTR [rax],al
   14003ec77:	add    BYTE PTR [rax+0x1400359],al
   14003ec7d:	add    BYTE PTR [rax],al
   14003ec7f:	add    al,al
   14003ec81:	mov    DWORD PTR [rax],0x140
   14003ec87:	add    al,ah
   14003ec89:	mov    DWORD PTR [rax],0x140
   14003ec8f:	add    BYTE PTR [rax+0x14000c6],dh
   14003ec95:	add    BYTE PTR [rax],al
   14003ec97:	add    BYTE PTR [rax-0x3f],dl
   14003ec9a:	add    al,BYTE PTR [rax+0x1]
   14003ec9d:	add    BYTE PTR [rax],al
   14003ec9f:	add    BYTE PTR [rax],dh
   14003eca1:	rol    DWORD PTR [rdx],0x40
   14003eca4:	add    DWORD PTR [rax],eax
   14003eca6:	add    BYTE PTR [rax],al
   14003eca8:	movabs al,ds:0xa0000000014002bb
   14003ecb1:	rol    DWORD PTR [rdx],0x40
   14003ecb4:	add    DWORD PTR [rax],eax
   14003ecb6:	add    BYTE PTR [rax],al
   14003ecb8:	rex sbb eax,0x14001
   14003ecbe:	add    BYTE PTR [rax],al
   14003ecc0:	or     BYTE PTR [rcx+0x1],0x40
   14003ecc4:	add    DWORD PTR [rax],eax
   14003ecc6:	add    BYTE PTR [rax],al
   14003ecc8:	xor    BYTE PTR [rcx+0x3],bl
   14003eccb:	rex add DWORD PTR [rax],eax
   14003ecce:	add    BYTE PTR [rax],al
   14003ecd0:	rcr    BYTE PTR [rax+0x1],0x40
   14003ecd4:	add    DWORD PTR [rax],eax
   14003ecd6:	add    BYTE PTR [rax],al
   14003ecd8:	or     BYTE PTR [rcx+0x1],0x40
   14003ecdc:	add    DWORD PTR [rax],eax
   14003ecde:	add    BYTE PTR [rax],al
   14003ece0:	rex mov DWORD PTR [rax],0x140
   14003ece7:	add    cl,ch
   14003ece9:	repnz mov ah,0xf3
   14003ecec:	int3   
   14003eced:	int3   
   14003ecee:	stos   BYTE PTR es:[rdi],al
   14003ecef:	rex.WB mov r8b,0xb2
   14003ecf2:	sub    al,0x4a
   14003ecf4:	add    ah,dh
   14003ecf6:	(bad)  
   14003ecf7:	(bad)  
   14003ecf8:	cmp    eax,0x7d3da2e6
   14003ecfd:	popf   
   14003ecfe:	mov    WORD PTR [rdi-0x43],es
   14003ed01:	mov    cl,0xbc
   14003ed03:	push   rsp
   14003ed04:	jmp    FWORD PTR es:[rdx+0x51]
   14003ed08:	and    BYTE PTR [rsi+0x1],al
   14003ed0b:	rex add DWORD PTR [rax],eax
   14003ed0e:	add    BYTE PTR [rax],al
   14003ed10:	and    BYTE PTR [rsi+0x1],al
   14003ed13:	rex add DWORD PTR [rax],eax
   14003ed16:	add    BYTE PTR [rax],al
   14003ed18:	and    BYTE PTR [rsi+0x1],al
   14003ed1b:	rex add DWORD PTR [rax],eax
   14003ed1e:	add    BYTE PTR [rax],al
   14003ed20:	loopne 0x14003ed79
   14003ed22:	add    eax,DWORD PTR [rax+0x1]
   14003ed25:	add    BYTE PTR [rax],al
   14003ed27:	add    BYTE PTR [rax],ah
   14003ed29:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ed2d:	add    BYTE PTR [rax],al
   14003ed2f:	add    BYTE PTR [rax],ah
   14003ed31:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ed35:	add    BYTE PTR [rax],al
   14003ed37:	add    BYTE PTR [rax],ah
   14003ed39:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ed3d:	add    BYTE PTR [rax],al
   14003ed3f:	add    al,al
   14003ed41:	pop    rax
   14003ed42:	add    eax,DWORD PTR [rax+0x1]
   14003ed45:	add    BYTE PTR [rax],al
   14003ed47:	add    BYTE PTR [rax],ah
   14003ed49:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ed4d:	add    BYTE PTR [rax],al
   14003ed4f:	add    BYTE PTR [rax],ah
   14003ed51:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ed55:	add    BYTE PTR [rax],al
   14003ed57:	add    BYTE PTR [rax],ah
   14003ed59:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ed5d:	add    BYTE PTR [rax],al
   14003ed5f:	add    al,dh
   14003ed61:	int    0x0
   14003ed63:	rex add DWORD PTR [rax],eax
   14003ed66:	add    BYTE PTR [rax],al
   14003ed68:	push   rax
   14003ed69:	pop    rax
   14003ed6a:	add    eax,DWORD PTR [rax+0x1]
   14003ed6d:	add    BYTE PTR [rax],al
   14003ed6f:	add    BYTE PTR [rax+0x14000cc],al
   14003ed75:	add    BYTE PTR [rax],al
   14003ed77:	add    BYTE PTR [rax],ah
   14003ed79:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ed7d:	add    BYTE PTR [rax],al
   14003ed7f:	add    BYTE PTR [rax],ah
   14003ed81:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ed85:	add    BYTE PTR [rax],al
   14003ed87:	add    BYTE PTR [rax],ah
   14003ed89:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003ed8d:	add    BYTE PTR [rax],al
   14003ed8f:	add    al,dl
   14003ed91:	pop    rax
   14003ed92:	add    eax,DWORD PTR [rax+0x1]
   14003ed95:	add    BYTE PTR [rax],al
   14003ed97:	add    al,al
   14003ed99:	pop    rcx
   14003ed9a:	add    eax,DWORD PTR [rax+0x1]
   14003ed9d:	add    BYTE PTR [rax],al
   14003ed9f:	add    BYTE PTR [rax+0x1400359],al
   14003eda5:	add    BYTE PTR [rax],al
   14003eda7:	add    BYTE PTR [rax],ah
   14003eda9:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003edad:	add    BYTE PTR [rax],al
   14003edaf:	add    BYTE PTR [rax],ah
   14003edb1:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003edb5:	add    BYTE PTR [rax],al
   14003edb7:	add    BYTE PTR [rax],ah
   14003edb9:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003edbd:	add    BYTE PTR [rax],al
   14003edbf:	add    BYTE PTR [rax-0x3f],dl
   14003edc2:	add    al,BYTE PTR [rax+0x1]
   14003edc5:	add    BYTE PTR [rax],al
   14003edc7:	add    BYTE PTR [rax],dh
   14003edc9:	rol    DWORD PTR [rdx],0x40
   14003edcc:	add    DWORD PTR [rax],eax
   14003edce:	add    BYTE PTR [rax],al
   14003edd0:	movabs al,ds:0xa0000000014002bb
   14003edd9:	rol    DWORD PTR [rdx],0x40
   14003eddc:	add    DWORD PTR [rax],eax
   14003edde:	add    BYTE PTR [rax],al
   14003ede0:	rex sbb eax,0x14001
   14003ede6:	add    BYTE PTR [rax],al
   14003ede8:	or     BYTE PTR [rcx+0x1],0x40
   14003edec:	add    DWORD PTR [rax],eax
   14003edee:	add    BYTE PTR [rax],al
   14003edf0:	xor    BYTE PTR [rcx+0x3],bl
   14003edf3:	rex add DWORD PTR [rax],eax
   14003edf6:	add    BYTE PTR [rax],al
   14003edf8:	rcr    BYTE PTR [rax+0x1],0x40
   14003edfc:	add    DWORD PTR [rax],eax
   14003edfe:	add    BYTE PTR [rax],al
   14003ee00:	or     BYTE PTR [rcx+0x1],0x40
   14003ee04:	add    DWORD PTR [rax],eax
   14003ee06:	add    BYTE PTR [rax],al
   14003ee08:	shr    BYTE PTR [rdx+rax*1+0x140],1
	...
   14003ee17:	add    al,al
   14003ee19:	add    BYTE PTR [rax],al
   14003ee1b:	add    BYTE PTR [rax],al
   14003ee1d:	add    BYTE PTR [rax],al
   14003ee1f:	rex.RX and BYTE PTR [rsi+0x1],r8b
   14003ee23:	rex add DWORD PTR [rax],eax
   14003ee26:	add    BYTE PTR [rax],al
   14003ee28:	and    BYTE PTR [rsi+0x1],al
   14003ee2b:	rex add DWORD PTR [rax],eax
   14003ee2e:	add    BYTE PTR [rax],al
   14003ee30:	and    BYTE PTR [rsi+0x1],al
   14003ee33:	rex add DWORD PTR [rax],eax
   14003ee36:	add    BYTE PTR [rax],al
   14003ee38:	push   rax
   14003ee39:	(bad)
   14003ee3c:	add    DWORD PTR [rax],eax
   14003ee3e:	add    BYTE PTR [rax],al
   14003ee40:	(bad)  
   14003ee41:	mov    BYTE PTR [rdx],0x40
   14003ee44:	add    DWORD PTR [rax],eax
   14003ee46:	add    BYTE PTR [rax],al
   14003ee48:	and    BYTE PTR [rsi+0x1],al
   14003ee4b:	rex add DWORD PTR [rax],eax
   14003ee4e:	add    BYTE PTR [rax],al
   14003ee50:	and    BYTE PTR [rsi+0x1],al
   14003ee53:	rex add DWORD PTR [rax],eax
   14003ee56:	add    BYTE PTR [rax],al
   14003ee58:	and    BYTE PTR [rsi+0x1],al
   14003ee5b:	rex add DWORD PTR [rax],eax
   14003ee5e:	add    BYTE PTR [rax],al
   14003ee60:	mov    al,0xcf
   14003ee62:	add    BYTE PTR [rax+0x1],al
   14003ee65:	add    BYTE PTR [rax],al
   14003ee67:	add    BYTE PTR [rax-0x3a],ah
   14003ee6a:	add    al,BYTE PTR [rax+0x1]
   14003ee6d:	add    BYTE PTR [rax],al
   14003ee6f:	add    BYTE PTR [rcx],al
   14003ee71:	add    BYTE PTR [rax],al
   14003ee73:	add    BYTE PTR [rax],al
   14003ee75:	add    BYTE PTR [rax],al
   14003ee77:	add    al,al
   14003ee79:	add    BYTE PTR [rax],al
   14003ee7b:	add    BYTE PTR [rax],al
   14003ee7d:	add    BYTE PTR [rax],al
   14003ee7f:	rex.RX (bad) 
   14003ee81:	rol    DWORD PTR [rax],0x40
   14003ee84:	add    DWORD PTR [rax],eax
   14003ee86:	add    BYTE PTR [rax],al
   14003ee88:	mov    al,0xc1
   14003ee8a:	add    BYTE PTR [rax+0x1],al
   14003ee8d:	add    BYTE PTR [rax],al
   14003ee8f:	add    BYTE PTR [rax+0x14000c1],al
   14003ee95:	add    BYTE PTR [rax],al
   14003ee97:	add    BYTE PTR [rax-0x3b],dl
   14003ee9a:	add    BYTE PTR [rax+0x1],al
   14003ee9d:	add    BYTE PTR [rax],al
   14003ee9f:	add    BYTE PTR [rax-0x3a],ah
   14003eea2:	add    al,BYTE PTR [rax+0x1]
	...
   14003eead:	add    BYTE PTR [rax],al
   14003eeaf:	add    BYTE PTR [rbx+0x0],bh
   14003eeb2:	add    BYTE PTR [rsi+0x0],r8b
   14003eeb6:	add    BYTE PTR [rax+r8*1+0x45],r8b
   14003eebb:	add    BYTE PTR [rdx],dh
   14003eebd:	add    BYTE PTR [rcx],dh
   14003eebf:	add    BYTE PTR [rbx],dh
   14003eec1:	add    BYTE PTR [rip+0x43003800],ch        # 0x1830426c7
   14003eec7:	add    BYTE PTR [rdx+0x0],al
   14003eeca:	xor    al,0x0
   14003eecc:	sub    eax,0x36003400
   14003eed1:	add    BYTE PTR [rcx+0x0],ah
   14003eed4:	cmp    DWORD PTR [rax],eax
   14003eed6:	sub    eax,0x30003900
   14003eedb:	add    BYTE PTR [rbp+0x0],al
   14003eede:	rex.X add BYTE PTR [rip+0x44003300],bpl        # 0x1840421e5
   14003eee5:	add    BYTE PTR [rcx+0x0],al
   14003eee8:	cmp    BYTE PTR [rax],al
   14003eeea:	xor    al,0x0
   14003eeec:	xor    eax,DWORD PTR [rax]
   14003eeee:	add    BYTE PTR [r14+0x0],al
   14003eef2:	add    BYTE PTR ss:[rsi],dh
   14003eef5:	add    BYTE PTR [rsi+0x0],al
   14003eef8:	cmp    DWORD PTR [rax],eax
   14003eefa:	jge    0x14003eefc
   14003eefc:	sub    eax,0x68007300
   14003ef01:	add    BYTE PTR [rdi+0x0],ch
   14003ef04:	ja     0x14003ef06
   14003ef06:	add    BYTE PTR [rax],al
   14003ef08:	lock (bad) 
   14003ef0a:	add    eax,DWORD PTR [rax+0x1]
   14003ef0d:	add    BYTE PTR [rax],al
   14003ef0f:	add    BYTE PTR [rax],al
   14003ef11:	xor    al,BYTE PTR [rcx]
   14003ef13:	rex add DWORD PTR [rax],eax
   14003ef16:	add    BYTE PTR [rax],al
   14003ef18:	or     BYTE PTR [rcx+0x1],0x40
   14003ef1c:	add    DWORD PTR [rax],eax
   14003ef1e:	add    BYTE PTR [rax],al
   14003ef20:	mov    al,0xe
   14003ef22:	add    eax,DWORD PTR [rax+0x1]
   14003ef25:	add    BYTE PTR [rax],al
   14003ef27:	add    BYTE PTR [rax+0xf],al
   14003ef2a:	add    eax,DWORD PTR [rax+0x1]
   14003ef2d:	add    BYTE PTR [rax],al
   14003ef2f:	add    BYTE PTR [rax],dl
   14003ef31:	pop    rbp
   14003ef32:	add    DWORD PTR [rax+0x1],eax
   14003ef35:	add    BYTE PTR [rax],al
   14003ef37:	add    BYTE PTR [rax],dl
   14003ef39:	pop    rbp
   14003ef3a:	add    DWORD PTR [rax+0x1],eax
   14003ef3d:	add    BYTE PTR [rax],al
   14003ef3f:	add    BYTE PTR [rax],dl
   14003ef41:	pop    rbp
   14003ef42:	add    DWORD PTR [rax+0x1],eax
   14003ef45:	add    BYTE PTR [rax],al
   14003ef47:	add    BYTE PTR [rax-0x1f],al
   14003ef4a:	add    al,BYTE PTR [rax+0x1]
   14003ef4d:	add    BYTE PTR [rax],al
   14003ef4f:	add    BYTE PTR [rax-0x27],dl
   14003ef52:	add    BYTE PTR [rax+0x1],al
   14003ef55:	add    BYTE PTR [rax],al
   14003ef57:	add    BYTE PTR [rax],ah
   14003ef59:	fiadd  DWORD PTR [rax]
   14003ef5b:	rex add DWORD PTR [rax],eax
   14003ef5e:	add    BYTE PTR [rax],al
   14003ef60:	adc    dl,bl
   14003ef62:	add    BYTE PTR [rax+0x1],al
   14003ef65:	add    BYTE PTR [rax],al
   14003ef67:	add    al,ah
   14003ef69:	fld    DWORD PTR [rax]
   14003ef6b:	rex add DWORD PTR [rax],eax
   14003ef6e:	add    BYTE PTR [rax],al
   14003ef70:	add    BYTE PTR [rbp+0x1],bl
   14003ef73:	rex add DWORD PTR [rax],eax
   14003ef76:	add    BYTE PTR [rax],al
   14003ef78:	rcr    cl,1
   14003ef7a:	add    BYTE PTR [rax+0x1],al
   14003ef7d:	add    BYTE PTR [rax],al
   14003ef7f:	add    BYTE PTR [rax+0x14000d9],ah
   14003ef85:	add    BYTE PTR [rax],al
   14003ef87:	add    BYTE PTR [rax+0x14000d9],al
   14003ef8d:	add    BYTE PTR [rax],al
   14003ef8f:	add    BYTE PTR [rax-0x1f],dh
   14003ef92:	add    al,BYTE PTR [rax+0x1]
   14003ef95:	add    BYTE PTR [rax],al
   14003ef97:	add    al,dh
   14003ef99:	(bad)  
   14003ef9a:	add    eax,DWORD PTR [rax+0x1]
   14003ef9d:	add    BYTE PTR [rax],al
   14003ef9f:	add    BYTE PTR [rax],al
   14003efa1:	xor    al,BYTE PTR [rcx]
   14003efa3:	rex add DWORD PTR [rax],eax
   14003efa6:	add    BYTE PTR [rax],al
   14003efa8:	or     BYTE PTR [rcx+0x1],0x40
   14003efac:	add    DWORD PTR [rax],eax
   14003efae:	add    BYTE PTR [rax],al
   14003efb0:	mov    al,0xe
   14003efb2:	add    eax,DWORD PTR [rax+0x1]
   14003efb5:	add    BYTE PTR [rax],al
   14003efb7:	add    BYTE PTR [rax+0xf],al
   14003efba:	add    eax,DWORD PTR [rax+0x1]
   14003efbd:	add    BYTE PTR [rax],al
   14003efbf:	add    BYTE PTR [rax],dl
   14003efc1:	pop    rbp
   14003efc2:	add    DWORD PTR [rax+0x1],eax
   14003efc5:	add    BYTE PTR [rax],al
   14003efc7:	add    BYTE PTR [rax],dl
   14003efc9:	pop    rbp
   14003efca:	add    DWORD PTR [rax+0x1],eax
   14003efcd:	add    BYTE PTR [rax],al
   14003efcf:	add    BYTE PTR [rax],dl
   14003efd1:	pop    rbp
   14003efd2:	add    DWORD PTR [rax+0x1],eax
   14003efd5:	add    BYTE PTR [rax],al
   14003efd7:	add    BYTE PTR [rax-0x1f],al
   14003efda:	add    al,BYTE PTR [rax+0x1]
   14003efdd:	add    BYTE PTR [rax],al
   14003efdf:	add    BYTE PTR [rax-0x27],dl
   14003efe2:	add    BYTE PTR [rax+0x1],al
   14003efe5:	add    BYTE PTR [rax],al
   14003efe7:	add    BYTE PTR [rax],ah
   14003efe9:	fiadd  DWORD PTR [rax]
   14003efeb:	rex add DWORD PTR [rax],eax
   14003efee:	add    BYTE PTR [rax],al
   14003eff0:	adc    dl,bl
   14003eff2:	add    BYTE PTR [rax+0x1],al
   14003eff5:	add    BYTE PTR [rax],al
   14003eff7:	add    al,ah
   14003eff9:	fld    DWORD PTR [rax]
   14003effb:	rex add DWORD PTR [rax],eax
   14003effe:	add    BYTE PTR [rax],al
   14003f000:	rcr    BYTE PTR [rax+0x1],1
   14003f003:	rex add DWORD PTR [rax],eax
   14003f006:	add    BYTE PTR [rax],al
   14003f008:	rcr    cl,1
   14003f00a:	add    BYTE PTR [rax+0x1],al
   14003f00d:	add    BYTE PTR [rax],al
   14003f00f:	add    BYTE PTR [rax+0x14000d9],ah
   14003f015:	add    BYTE PTR [rax],al
   14003f017:	add    BYTE PTR [rax+0x14000d9],al
   14003f01d:	add    BYTE PTR [rax],al
   14003f01f:	add    BYTE PTR [rax-0x1f],dh
   14003f022:	add    al,BYTE PTR [rax+0x1]
   14003f025:	add    BYTE PTR [rax],al
   14003f027:	add    BYTE PTR [rax-0x4],al
   14003f02a:	add    BYTE PTR [rax+0x1],al
   14003f02d:	add    BYTE PTR [rax],al
   14003f02f:	add    BYTE PTR [rax],ah
   14003f031:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003f035:	add    BYTE PTR [rax],al
   14003f037:	add    BYTE PTR [rax],ah
   14003f039:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003f03d:	add    BYTE PTR [rax],al
   14003f03f:	add    BYTE PTR [rax],ah
   14003f041:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003f045:	add    BYTE PTR [rax],al
   14003f047:	add    BYTE PTR [rax-0x20],dl
   14003f04a:	add    al,BYTE PTR [rax+0x1]
   14003f04d:	add    BYTE PTR [rax],al
   14003f04f:	add    BYTE PTR [rax],ah
   14003f051:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003f055:	add    BYTE PTR [rax],al
   14003f057:	add    BYTE PTR [rax],ah
   14003f059:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003f05d:	add    BYTE PTR [rax],al
   14003f05f:	add    BYTE PTR [rax],ah
   14003f061:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003f065:	add    BYTE PTR [rax],al
   14003f067:	add    BYTE PTR [rax],ah
   14003f069:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003f06d:	add    BYTE PTR [rax],al
   14003f06f:	add    BYTE PTR [rax-0x1f],al
   14003f072:	add    al,BYTE PTR [rax+0x1]
   14003f075:	add    BYTE PTR [rax],al
   14003f077:	add    BYTE PTR [rax-0x27],dl
   14003f07a:	add    BYTE PTR [rax+0x1],al
   14003f07d:	add    BYTE PTR [rax],al
   14003f07f:	add    BYTE PTR [rax],ah
   14003f081:	fiadd  DWORD PTR [rax]
   14003f083:	rex add DWORD PTR [rax],eax
   14003f086:	add    BYTE PTR [rax],al
   14003f088:	adc    dl,bl
   14003f08a:	add    BYTE PTR [rax+0x1],al
   14003f08d:	add    BYTE PTR [rax],al
   14003f08f:	add    al,ah
   14003f091:	fld    DWORD PTR [rax]
   14003f093:	rex add DWORD PTR [rax],eax
   14003f096:	add    BYTE PTR [rax],al
   14003f098:	rcr    BYTE PTR [rax+0x1],1
   14003f09b:	rex add DWORD PTR [rax],eax
   14003f09e:	add    BYTE PTR [rax],al
   14003f0a0:	rcr    cl,1
   14003f0a2:	add    BYTE PTR [rax+0x1],al
   14003f0a5:	add    BYTE PTR [rax],al
   14003f0a7:	add    BYTE PTR [rax+0x14000d9],ah
   14003f0ad:	add    BYTE PTR [rax],al
   14003f0af:	add    BYTE PTR [rax+0x14000d9],al
   14003f0b5:	add    BYTE PTR [rax],al
   14003f0b7:	add    BYTE PTR [rax-0x1f],dh
   14003f0ba:	add    al,BYTE PTR [rax+0x1]
   14003f0bd:	add    BYTE PTR [rax],al
   14003f0bf:	add    BYTE PTR [rax],al
   14003f0c1:	pop    rsp
   14003f0c2:	add    DWORD PTR [rax+0x1],eax
   14003f0c5:	add    BYTE PTR [rax],al
   14003f0c7:	add    BYTE PTR [rax],dh
   14003f0c9:	pop    rbx
   14003f0ca:	add    DWORD PTR [rax+0x1],eax
   14003f0cd:	add    BYTE PTR [rax],al
   14003f0cf:	add    al,al
   14003f0d1:	pop    rsp
   14003f0d2:	add    DWORD PTR [rax+0x1],eax
   14003f0d5:	add    BYTE PTR [rax],al
   14003f0d7:	add    al,ah
   14003f0d9:	xor    BYTE PTR [rbx],al
   14003f0db:	rex add DWORD PTR [rax],eax
   14003f0de:	add    BYTE PTR [rax],al
   14003f0e0:	jo     0x14003f116
   14003f0e2:	add    eax,DWORD PTR [rax+0x1]
   14003f0e5:	add    BYTE PTR [rax],al
   14003f0e7:	add    al,dl
   14003f0e9:	xor    eax,DWORD PTR [rbx]
   14003f0eb:	rex add DWORD PTR [rax],eax
   14003f0ee:	add    BYTE PTR [rax],al
   14003f0f0:	rex xor eax,DWORD PTR [rbx]
   14003f0f3:	rex add DWORD PTR [rax],eax
   14003f0f6:	add    BYTE PTR [rax],al
   14003f0f8:	lock pop rbx
   14003f0fa:	add    DWORD PTR [rax+0x1],eax
   14003f0fd:	add    BYTE PTR [rax],al
   14003f0ff:	add    BYTE PTR [rax],ah
   14003f101:	pop    rbx
   14003f102:	add    DWORD PTR [rax+0x1],eax
   14003f105:	add    BYTE PTR [rax],al
   14003f107:	add    BYTE PTR [rax+0x140015c],dh
   14003f10d:	add    BYTE PTR [rax],al
   14003f10f:	add    BYTE PTR [rax],dh
   14003f111:	xor    BYTE PTR [rbx],al
   14003f113:	rex add DWORD PTR [rax],eax
   14003f116:	add    BYTE PTR [rax],al
   14003f118:	loopne 0x14003f175
   14003f11a:	add    DWORD PTR [rax+0x1],eax
   14003f11d:	add    BYTE PTR [rax],al
   14003f11f:	add    BYTE PTR [rax],dl
   14003f121:	pop    rbx
   14003f122:	add    DWORD PTR [rax+0x1],eax
   14003f125:	add    BYTE PTR [rax],al
   14003f127:	add    BYTE PTR [rax+0x140015c],ah
   14003f12d:	add    BYTE PTR [rax],al
   14003f12f:	add    BYTE PTR [rax],al
   14003f131:	add    eax,DWORD PTR ss:[rax+0x1]
   14003f135:	add    BYTE PTR [rax],al
   14003f137:	add    BYTE PTR [rax+0x14000d7],al
   14003f13d:	add    BYTE PTR [rax],al
   14003f13f:	add    BYTE PTR [rax],ah
   14003f141:	(bad)  
   14003f142:	add    BYTE PTR [rax+0x1],al
   14003f145:	add    BYTE PTR [rax],al
   14003f147:	add    al,al
   14003f149:	rol    BYTE PTR [rax],cl
   14003f14b:	rex add DWORD PTR [rax],eax
   14003f14e:	add    BYTE PTR [rax],al
   14003f150:	loopne 0x14003f124
   14003f152:	add    BYTE PTR [rax+0x1],al
   14003f155:	add    BYTE PTR [rax],al
   14003f157:	add    BYTE PTR [rax+0x14000d1],dh
   14003f15d:	add    BYTE PTR [rax],al
   14003f15f:	add    al,al
   14003f161:	(bad)  
   14003f162:	add    eax,DWORD PTR [rax+0x1]
   14003f165:	add    BYTE PTR [rax],al
   14003f167:	add    BYTE PTR [rax+0x38],dh
   14003f16a:	add    eax,DWORD PTR [rax+0x1]
   14003f16d:	add    BYTE PTR [rax],al
   14003f16f:	add    BYTE PTR [rax+0x14000d2],al
   14003f175:	add    BYTE PTR [rax],al
   14003f177:	add    BYTE PTR [rax],dh
   14003f179:	cmp    dh,BYTE PTR [rbx+0x1c]
   14003f17c:	sbb    al,0x2a
   14003f17e:	(bad)  
   14003f17f:	adc    DWORD PTR [rbp+0xaa00e5],ebp
   14003f185:	rex.R ja 0x14003f1c5
   14003f188:	add    BYTE PTR [rdx],dl
   14003f18a:	add    eax,DWORD PTR [rax+0x1]
   14003f18d:	add    BYTE PTR [rax],al
   14003f18f:	add    BYTE PTR [rax],ah
   14003f191:	rex.RX add DWORD PTR [rax+0x1],r8d
   14003f195:	add    BYTE PTR [rax],al
   14003f197:	add    BYTE PTR [rax+0x1400109],ah
   14003f19d:	add    BYTE PTR [rax],al
   14003f19f:	add    al,al
   14003f1a1:	or     BYTE PTR [rcx],al
   14003f1a3:	rex add DWORD PTR [rax],eax
   14003f1a6:	add    BYTE PTR [rax],al
   14003f1a8:	and    BYTE PTR [rcx+0x1],bl
   14003f1ab:	rex add DWORD PTR [rax],eax
   14003f1ae:	add    BYTE PTR [rax],al
   14003f1b0:	and    BYTE PTR [rax+0x1],bl
   14003f1b3:	rex add DWORD PTR [rax],eax
   14003f1b6:	add    BYTE PTR [rax],al
   14003f1b8:	and    BYTE PTR [rdx+0x1],bl
   14003f1bb:	rex add DWORD PTR [rax],eax
   14003f1be:	add    BYTE PTR [rax],al
   14003f1c0:	add    BYTE PTR [rdx],0x3
   14003f1c3:	rex add DWORD PTR [rax],eax
   14003f1c6:	add    BYTE PTR [rax],al
   14003f1c8:	(bad)  
   14003f1c9:	stc    
   14003f1ca:	add    BYTE PTR [rax+0x1],al
   14003f1cd:	add    BYTE PTR [rax],al
   14003f1cf:	add    BYTE PTR [rax+0x14000f8],dl
   14003f1d5:	add    BYTE PTR [rax],al
   14003f1d7:	add    BYTE PTR [rax+0x14000f9],al
   14003f1dd:	add    BYTE PTR [rax],al
   14003f1df:	add    al,dl
   14003f1e1:	or     al,0x3
   14003f1e3:	rex add DWORD PTR [rax],eax
   14003f1e6:	add    BYTE PTR [rax],al
   14003f1e8:	movabs al,ds:0xc00000000140030d
   14003f1f1:	pop    rax
   14003f1f2:	add    DWORD PTR [rax+0x1],eax
   14003f1f5:	add    BYTE PTR [rax],al
   14003f1f7:	add    al,al
   14003f1f9:	pop    rax
   14003f1fa:	add    DWORD PTR [rax+0x1],eax
   14003f1fd:	add    BYTE PTR [rax],al
   14003f1ff:	add    BYTE PTR [rax],dl
   14003f201:	or     al,0x3
   14003f203:	rex add DWORD PTR [rax],eax
   14003f206:	add    BYTE PTR [rax],al
   14003f208:	or     BYTE PTR [rcx+0x1],0x40
   14003f20c:	add    DWORD PTR [rax],eax
   14003f20e:	add    BYTE PTR [rax],al
   14003f210:	loopne 0x14003f215
   14003f212:	add    eax,DWORD PTR [rax+0x1]
   14003f215:	add    BYTE PTR [rax],al
   14003f217:	add    BYTE PTR [rax+0x4],ah
   14003f21a:	add    DWORD PTR [rax+0x1],eax
   14003f21d:	add    BYTE PTR [rax],al
   14003f21f:	add    BYTE PTR [rax+0x1400105],al
   14003f225:	add    BYTE PTR [rax],al
   14003f227:	add    BYTE PTR [rax],dh
   14003f229:	add    DWORD PTR [rbx],eax
   14003f22b:	rex add DWORD PTR [rax],eax
   14003f22e:	add    BYTE PTR [rax],al
   14003f230:	adc    BYTE PTR [rsi],al
   14003f232:	add    DWORD PTR [rax+0x1],eax
   14003f235:	add    BYTE PTR [rax],al
   14003f237:	add    BYTE PTR [rax],dh
   14003f239:	(bad)  
   14003f23a:	add    DWORD PTR [rax+0x1],eax
   14003f23d:	add    BYTE PTR [rax],al
   14003f23f:	add    al,al
   14003f241:	or     al,BYTE PTR [rbx]
   14003f243:	rex add DWORD PTR [rax],eax
   14003f246:	add    BYTE PTR [rax],al
   14003f248:	lock add eax,0x14003
   14003f24e:	add    BYTE PTR [rax],al
   14003f250:	and    cl,bh
   14003f252:	add    BYTE PTR [rax+0x1],al
   14003f255:	add    BYTE PTR [rax],al
   14003f257:	add    BYTE PTR [rdi+0x0],dl
   14003f25a:	(bad)  
   14003f25b:	add    BYTE PTR [rcx+0x0],ch
   14003f25e:	je     0x14003f260
   14003f260:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14003f264:	jb     0x14003f266
   14003f266:	push   rax
   14003f267:	add    BYTE PTR [rbp+0x0],ah
   14003f26a:	outs   dx,BYTE PTR ds:[rsi]
   14003f26b:	add    BYTE PTR [rax+rax*1+0x69],ah
   14003f26f:	add    BYTE PTR [rsi+0x0],ch
   14003f272:	add    BYTE PTR [ecx+0x0],cl
   14003f276:	outs   dx,BYTE PTR ds:[rsi]
   14003f277:	add    BYTE PTR [rax+0x0],dh
   14003f27a:	jne    0x14003f27c
   14003f27c:	je     0x14003f27e
   14003f27e:	add    BYTE PTR [r14+0x0],r14b
   14003f282:	add    BYTE PTR gs:[rsi+0x0],ch
   14003f286:	je     0x14003f288
   14003f288:	add    BYTE PTR [rax],al
   14003f28a:	add    BYTE PTR [rax],al
   14003f28c:	and    eax,0x6400
   14003f291:	add    BYTE PTR [rax],al
   14003f293:	add    BYTE PTR [rax],al
   14003f295:	add    BYTE PTR [rax],al
   14003f297:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14003f29b:	add    BYTE PTR [rbx+0x0],ah
   14003f29e:	(bad)  
   14003f29f:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14003f2a3:	add    BYTE PTR [rax],al
   14003f2a5:	add    BYTE PTR [rax],al
   14003f2a7:	add    BYTE PTR [rax],dh
   14003f2a9:	pop    rsp
   14003f2aa:	add    DWORD PTR [rax+0x1],eax
   14003f2ad:	add    BYTE PTR [rax],al
   14003f2af:	add    BYTE PTR [rax+0x5b],ah
   14003f2b2:	add    DWORD PTR [rax+0x1],eax
   14003f2b5:	add    BYTE PTR [rax],al
   14003f2b7:	add    al,dh
   14003f2b9:	pop    rsp
   14003f2ba:	add    DWORD PTR [rax+0x1],eax
   14003f2bd:	add    BYTE PTR [rax],al
   14003f2bf:	add    BYTE PTR [rax],ah
   14003f2c1:	hlt    
   14003f2c2:	add    al,BYTE PTR [rax+0x1]
   14003f2c5:	add    BYTE PTR [rax],al
   14003f2c7:	add    BYTE PTR [rax],ah
   14003f2c9:	pop    rsp
   14003f2ca:	add    DWORD PTR [rax+0x1],eax
   14003f2cd:	add    BYTE PTR [rax],al
   14003f2cf:	add    BYTE PTR [rax+0x5b],dl
   14003f2d2:	add    DWORD PTR [rax+0x1],eax
   14003f2d5:	add    BYTE PTR [rax],al
   14003f2d7:	add    al,ah
   14003f2d9:	pop    rsp
   14003f2da:	add    DWORD PTR [rax+0x1],eax
   14003f2dd:	add    BYTE PTR [rax],al
   14003f2df:	add    BYTE PTR [rax+0x10],dh
   14003f2e2:	add    DWORD PTR [rax+0x1],eax
   14003f2e5:	add    BYTE PTR [rax],al
   14003f2e7:	add    BYTE PTR [rax-0x3],dh
   14003f2ea:	add    al,BYTE PTR [rax+0x1]
   14003f2ed:	add    BYTE PTR [rax],al
   14003f2ef:	add    BYTE PTR [rax-0x12],ah
   14003f2f2:	add    al,BYTE PTR [rax+0x1]
   14003f2f5:	add    BYTE PTR [rax],al
   14003f2f7:	add    BYTE PTR [rax-0x6],al
   14003f2fa:	add    al,BYTE PTR [rax+0x1]
   14003f2fd:	add    BYTE PTR [rax],al
   14003f2ff:	add    BYTE PTR [rax-0x2],dl
   14003f302:	add    al,BYTE PTR [rax+0x1]
   14003f305:	add    BYTE PTR [rax],al
   14003f307:	add    BYTE PTR [rax-0x1],dh
   14003f30a:	add    al,BYTE PTR [rax+0x1]
   14003f30d:	add    BYTE PTR [rax],al
   14003f30f:	add    BYTE PTR [rax+0x14002fc],al
   14003f315:	add    BYTE PTR [rax],al
   14003f317:	add    BYTE PTR [rax],dl
   14003f319:	pop    rsp
   14003f31a:	add    DWORD PTR [rax+0x1],eax
   14003f31d:	add    BYTE PTR [rax],al
   14003f31f:	add    BYTE PTR [rax+0x5b],al
   14003f322:	add    DWORD PTR [rax+0x1],eax
   14003f325:	add    BYTE PTR [rax],al
   14003f327:	add    al,dl
   14003f329:	pop    rsp
   14003f32a:	add    DWORD PTR [rax+0x1],eax
   14003f32d:	add    BYTE PTR [rax],al
   14003f32f:	add    BYTE PTR [rax+0x12],al
   14003f332:	add    DWORD PTR [rax+0x1],eax
   14003f335:	add    BYTE PTR [rax],al
   14003f337:	add    al,ah
   14003f339:	add    BYTE PTR [rbx],al
   14003f33b:	rex add DWORD PTR [rax],eax
   14003f33e:	add    BYTE PTR [rax],al
   14003f340:	rcr    BYTE PTR [rax+0x1],0x40
   14003f344:	add    DWORD PTR [rax],eax
   14003f346:	add    BYTE PTR [rax],al
   14003f348:	lock (bad) 
   14003f34a:	add    DWORD PTR [rax+0x1],eax
   14003f34d:	add    BYTE PTR [rax],al
   14003f34f:	add    BYTE PTR [rax],dl
   14003f351:	or     BYTE PTR [rcx],al
   14003f353:	rex add DWORD PTR [rax],eax
   14003f356:	add    BYTE PTR [rax],al
   14003f358:	nop
   14003f359:	(bad)  
   14003f35a:	add    DWORD PTR [rax+0x1],eax
   14003f35d:	add    BYTE PTR [rax],al
   14003f35f:	add    BYTE PTR [rax-0x13],al
   14003f362:	add    al,BYTE PTR [rax+0x1]
   14003f365:	add    BYTE PTR [rax],al
   14003f367:	add    BYTE PTR [rax],ah
   14003f369:	sti    
   14003f36a:	add    al,BYTE PTR [rax+0x1]
   14003f36d:	add    BYTE PTR [rax],al
   14003f36f:	add    BYTE PTR [rax],dh
   14003f371:	or     al,BYTE PTR [rcx]
   14003f373:	rex add DWORD PTR [rax],eax
   14003f376:	add    BYTE PTR [rax],al
   14003f378:	xor    cl,bh
   14003f37a:	add    al,BYTE PTR [rax+0x1]
   14003f37d:	add    BYTE PTR [rax],al
   14003f37f:	add    BYTE PTR [rax+0x14002f7],al
   14003f385:	add    BYTE PTR [rax],al
   14003f387:	add    al,al
   14003f389:	icebp  
   14003f38a:	add    al,BYTE PTR [rax+0x1]
   14003f38d:	add    BYTE PTR [rax],al
   14003f38f:	add    BYTE PTR [rax],ah
   14003f391:	or     eax,DWORD PTR [rcx]
   14003f393:	rex add DWORD PTR [rax],eax
   14003f396:	add    BYTE PTR [rax],al
   14003f398:	push   rax
   14003f399:	(bad)  
   14003f39a:	add    DWORD PTR [rax+0x1],eax
   14003f39d:	add    BYTE PTR [rax],al
   14003f39f:	add    al,ah
   14003f3a1:	or     eax,0x14001
   14003f3a6:	add    BYTE PTR [rax],al
   14003f3a8:	rex or eax,0x14001
   14003f3ae:	add    BYTE PTR [rax],al
   14003f3b0:	rcr    BYTE PTR [rax+0x1],1
   14003f3b3:	rex add DWORD PTR [rax],eax
   14003f3b6:	add    BYTE PTR [rax],al
   14003f3b8:	lock or al,0x1
   14003f3bb:	rex add DWORD PTR [rax],eax
   14003f3be:	add    BYTE PTR [rax],al
   14003f3c0:	(bad)  
   14003f3c1:	or     al,0x1
   14003f3c3:	rex add DWORD PTR [rax],eax
   14003f3c6:	add    BYTE PTR [rax],al
   14003f3c8:	loopne 0x14003f3d5
   14003f3ca:	add    DWORD PTR [rax+0x1],eax
   14003f3cd:	add    BYTE PTR [rax],al
   14003f3cf:	add    BYTE PTR [rax+0x5b],dh
   14003f3d2:	add    DWORD PTR [rax+0x1],eax
   14003f3d5:	add    BYTE PTR [rax],al
   14003f3d7:	add    al,ah
   14003f3d9:	(bad)  
   14003f3da:	add    DWORD PTR [rax+0x1],eax
   14003f3dd:	add    BYTE PTR [rax],al
   14003f3df:	add    BYTE PTR [rsi],ch
   14003f3e1:	add    BYTE PTR [rbx+0x0],ah
   14003f3e4:	je     0x14003f3e6
   14003f3e6:	ins    DWORD PTR es:[rdi],dx
	...
   14003f3ef:	add    BYTE PTR [rbx+0x0],dl
   14003f3f2:	push   0x6c006500
   14003f3f7:	add    BYTE PTR [rax+rax*1+0x5f],ch
   14003f3fb:	add    BYTE PTR [rax+rax*1+0x72],dl
   14003f3ff:	add    BYTE PTR [rcx+0x0],ah
   14003f402:	jns    0x14003f404
   14003f404:	push   rdi
   14003f405:	add    BYTE PTR [rsi+0x0],ch
   14003f408:	add    BYTE PTR fs:[rax],al
   14003f40b:	add    BYTE PTR [rax],al
   14003f40d:	add    BYTE PTR [rax],al
   14003f40f:	add    BYTE PTR [rax+0x5d],al
   14003f412:	add    DWORD PTR [rax+0x1],eax
   14003f415:	add    BYTE PTR [rax],al
   14003f417:	add    BYTE PTR [rax],dh
   14003f419:	pop    rbp
   14003f41a:	add    DWORD PTR [rax+0x1],eax
   14003f41d:	add    BYTE PTR [rax],al
   14003f41f:	add    BYTE PTR [rax+0x5d],dl
   14003f422:	add    DWORD PTR [rax+0x1],eax
   14003f425:	add    BYTE PTR [rax],al
   14003f427:	add    BYTE PTR [rax],dl
   14003f429:	and    al,BYTE PTR [rbx]
   14003f42b:	rex add DWORD PTR [rax],eax
   14003f42e:	add    BYTE PTR [rax],al
   14003f430:	xor    BYTE PTR [rcx],bl
   14003f432:	add    eax,DWORD PTR [rax+0x1]
   14003f435:	add    BYTE PTR [rax],al
   14003f437:	add    BYTE PTR [rax+0x2a],dh
   14003f43a:	add    eax,DWORD PTR [rax+0x1]
   14003f43d:	add    BYTE PTR [rax],al
   14003f43f:	add    BYTE PTR [rax+0x14000f5],ah
   14003f445:	add    BYTE PTR [rax],al
   14003f447:	add    BYTE PTR [rax],dl
   14003f449:	sbb    al,0x1
   14003f44b:	rex add DWORD PTR [rax],eax
   14003f44e:	add    BYTE PTR [rax],al
   14003f450:	adc    BYTE PTR [rbx],ah
   14003f452:	add    eax,DWORD PTR [rax+0x1]
   14003f455:	add    BYTE PTR [rax],al
   14003f457:	add    BYTE PTR [rax+0x24],dl
   14003f45a:	add    eax,DWORD PTR [rax+0x1]
   14003f45d:	add    BYTE PTR [rax],al
   14003f45f:	add    BYTE PTR [rax+rax*1+0x61],cl
   14003f463:	add    BYTE PTR [rbp+0x0],dh
   14003f466:	outs   dx,BYTE PTR ds:[rsi]
   14003f467:	add    BYTE PTR [rbx+0x0],ah
   14003f46a:	push   0x6e004900
   14003f46f:	add    BYTE PTR [rbx+0x0],ch
   14003f472:	push   rdi
   14003f473:	add    BYTE PTR [rcx+0x0],ah
   14003f476:	je     0x14003f478
   14003f478:	jae    0x14003f47a
   14003f47a:	outs   dx,DWORD PTR ds:[rsi]
   14003f47b:	add    BYTE PTR [rsi+0x0],ch
   14003f47e:	add    BYTE PTR [rax],al
   14003f480:	add    BYTE PTR [r13+0x0],sil
   14003f484:	je     0x14003f486
   14003f486:	outs   dx,DWORD PTR ds:[rsi]
   14003f487:	add    BYTE PTR [rbp+0x0],ch
   14003f48a:	(bad)  
   14003f48b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003f48f:	add    BYTE PTR [rdi+0x0],ch
   14003f492:	outs   dx,BYTE PTR ds:[rsi]
   14003f493:	add    BYTE PTR [rax],al
   14003f495:	add    BYTE PTR [rax],al
   14003f497:	add    BYTE PTR [rbp+0x0],al
   14003f49a:	ins    DWORD PTR es:[rdi],dx
   14003f49b:	add    BYTE PTR [rdx+0x0],ah
   14003f49e:	add    BYTE PTR gs:[rax+rax*1+0x64],ah
   14003f4a3:	add    BYTE PTR [rcx+0x0],ch
   14003f4a6:	outs   dx,BYTE PTR ds:[rsi]
   14003f4a7:	add    BYTE PTR [rdi+0x0],ah
   14003f4aa:	add    BYTE PTR [rax],al
   14003f4ac:	add    BYTE PTR [rax],al
   14003f4ae:	add    BYTE PTR [rax],al
   14003f4b0:	push   rcx
   14003f4b1:	add    BYTE PTR [rbp+0x0],dh
   14003f4b4:	imul   eax,DWORD PTR [rax],0x490074
   14003f4ba:	outs   dx,BYTE PTR ds:[rsi]
   14003f4bb:	add    BYTE PTR [rsi+0x0],ah
   14003f4be:	outs   dx,DWORD PTR ds:[rsi]
   14003f4bf:	add    BYTE PTR [rdx],bh
   14003f4c1:	add    BYTE PTR [rax],al
   14003f4c3:	add    BYTE PTR [rax],al
   14003f4c5:	add    BYTE PTR [rax],al
   14003f4c7:	add    BYTE PTR [rdi],ch
   14003f4c9:	add    BYTE PTR [rbx+0x0],al
   14003f4cc:	jb     0x14003f4ce
   14003f4ce:	(bad)  
   14003f4cf:	add    BYTE PTR [rbx+0x0],dh
   14003f4d2:	push   0x64006500
	...
   14003f4df:	add    BYTE PTR [rbx+0x1],bl
   14003f4e2:	add    BYTE PTR [rax],al
   14003f4e4:	add    BYTE PTR [rax],al
   14003f4e6:	add    BYTE PTR [rax],al
   14003f4e8:	rol    BYTE PTR [rax],0x0
   14003f4eb:	add    BYTE PTR [rax],al
   14003f4ed:	add    BYTE PTR [rax],al
   14003f4ef:	rex.RX
   14003f4f0:	rex.RX add DWORD PTR [rax],r8d
   14003f4f3:	add    BYTE PTR [rax],al
   14003f4f5:	add    BYTE PTR [rax],al
   14003f4f7:	add    al,al
   14003f4f9:	add    BYTE PTR [rax],al
   14003f4fb:	add    BYTE PTR [rax],al
   14003f4fd:	add    BYTE PTR [rax],al
   14003f4ff:	rex.RX and r8d,DWORD PTR [rbx]
   14003f502:	add    BYTE PTR [rax],al
   14003f504:	add    BYTE PTR [rax],al
   14003f506:	add    BYTE PTR [rax],al
   14003f508:	rol    BYTE PTR [rax],0x0
   14003f50b:	add    BYTE PTR [rax],al
   14003f50d:	add    BYTE PTR [rax],al
   14003f50f:	rex.RX
   14003f510:	rex.WXB add rax,QWORD PTR [r8]
   14003f513:	add    BYTE PTR [rax],al
   14003f515:	add    BYTE PTR [rax],al
   14003f517:	add    al,al
   14003f519:	add    BYTE PTR [rax],al
   14003f51b:	add    BYTE PTR [rax],al
   14003f51d:	add    BYTE PTR [rax],al
   14003f51f:	rex.RX out dx,eax
   14003f521:	push   rsi
   14003f522:	jae    0x14003f589
   14003f524:	xchg   ecx,eax
   14003f525:	jnp    0x14003f54b
   14003f527:	rex.WRXB sahf 
   14003f529:	sbb    DWORD PTR [rax+0x506081e1],0x19643ab8
   14003f533:	imul   edx,edi,0xc
   14003f536:	movsxd eax,DWORD PTR [rbp-0x49]
   14003f539:	adc    BYTE PTR [rbp-0x52036e3f],bh
   14003f53f:	cmp    edx,DWORD PTR [rax]
   14003f541:	retf   0x4002
   14003f544:	add    DWORD PTR [rax],eax
   14003f546:	add    BYTE PTR [rax],al
   14003f548:	and    BYTE PTR [rsi+0x1],al
   14003f54b:	rex add DWORD PTR [rax],eax
   14003f54e:	add    BYTE PTR [rax],al
   14003f550:	and    BYTE PTR [rsi+0x1],al
   14003f553:	rex add DWORD PTR [rax],eax
   14003f556:	add    BYTE PTR [rax],al
   14003f558:	adc    dl,cl
   14003f55a:	add    al,BYTE PTR [rax+0x1]
   14003f55d:	add    BYTE PTR [rax],al
   14003f55f:	add    BYTE PTR [rax-0x25],al
   14003f562:	add    al,BYTE PTR [rax+0x1]
   14003f565:	add    BYTE PTR [rax],al
   14003f567:	add    BYTE PTR [rax+0x14002dd],dh
   14003f56d:	add    BYTE PTR [rax],al
   14003f56f:	add    BYTE PTR [rcx+riz*2+0x62],dl
   14003f573:	push   rsp
   14003f574:	imul   esi,DWORD PTR [rax+0x49],0x6974696e
   14003f57b:	(bad)  
   14003f57c:	ins    BYTE PTR es:[rdi],dx
   14003f57d:	imul   edi,DWORD PTR [rdx+0x65],0x75636553
   14003f584:	jb     0x14003f5ef
   14003f586:	je     0x14003f601
   14003f588:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14003f58d:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x0
   14003f595:	add    BYTE PTR [rax],al
   14003f597:	add    BYTE PTR [rax+0x14002cd],dl
   14003f59d:	add    BYTE PTR [rax],al
   14003f59f:	add    al,dh
   14003f5a1:	fild   WORD PTR [rax]
   14003f5a3:	rex add DWORD PTR [rax],eax
   14003f5a6:	add    BYTE PTR [rax],al
   14003f5a8:	lock int 0x2
   14003f5ab:	rex add DWORD PTR [rax],eax
   14003f5ae:	add    BYTE PTR [rax],al
   14003f5b0:	sub    dh,0x0
   14003f5b3:	rex add DWORD PTR [rax],eax
   14003f5b6:	add    BYTE PTR [rax],al
   14003f5b8:	adc    dl,cl
   14003f5ba:	add    al,BYTE PTR [rax+0x1]
   14003f5bd:	add    BYTE PTR [rax],al
   14003f5bf:	add    al,dh
   14003f5c1:	loope  0x14003f5c3
   14003f5c3:	rex add DWORD PTR [rax],eax
   14003f5c6:	add    BYTE PTR [rax],al
   14003f5c8:	mov    al,0xdd
   14003f5ca:	add    al,BYTE PTR [rax+0x1]
   14003f5cd:	add    BYTE PTR [rax],al
   14003f5cf:	add    BYTE PTR [rcx+riz*2+0x62],dl
   14003f5d3:	push   rsp
   14003f5d4:	imul   esi,DWORD PTR [rax+0x52],0x63416e75
   14003f5db:	je     0x14003f646
   14003f5dd:	jbe    0x14003f648
   14003f5df:	je     0x14003f65a
   14003f5e1:	add    BYTE PTR [rax],al
   14003f5e3:	add    BYTE PTR [rax],al
   14003f5e5:	add    BYTE PTR [rax],al
   14003f5e7:	add    BYTE PTR [rax+0x14002cd],dl
   14003f5ed:	add    BYTE PTR [rax],al
   14003f5ef:	add    al,dh
   14003f5f1:	fild   WORD PTR [rax]
   14003f5f3:	rex add DWORD PTR [rax],eax
   14003f5f6:	add    BYTE PTR [rax],al
   14003f5f8:	lock int 0x2
   14003f5fb:	rex add DWORD PTR [rax],eax
   14003f5fe:	add    BYTE PTR [rax],al
   14003f600:	adc    BYTE PTR [rbp+0x14002],ch
   14003f606:	add    BYTE PTR [rax],al
   14003f608:	add    cl,dh
   14003f60a:	add    BYTE PTR [rax+0x1],al
   14003f60d:	add    BYTE PTR [rax],al
   14003f60f:	add    al,dl
   14003f611:	lock add BYTE PTR [rax+0x1],al
   14003f615:	add    BYTE PTR [rax],al
   14003f617:	add    BYTE PTR [rax+0x14003a2],ah
   14003f61d:	add    BYTE PTR [rax],al
   14003f61f:	add    al,dl
   14003f621:	movabs eax,ds:0xa190000000014003
   14003f62a:	add    eax,DWORD PTR [rax+0x1]
   14003f62d:	add    BYTE PTR [rax],al
   14003f62f:	add    BYTE PTR [rdi+0x0],al
   14003f632:	ins    BYTE PTR es:[rdi],dx
   14003f633:	add    BYTE PTR [rdi+0x0],ch
   14003f636:	(bad)  
   14003f637:	add    BYTE PTR [rcx+0x0],ah
   14003f63a:	ins    BYTE PTR es:[rdi],dx
   14003f63b:	add    BYTE PTR [rax+rax*1+0x57],bl
   14003f63f:	add    BYTE PTR [rcx+0x0],ch
   14003f642:	outs   dx,BYTE PTR ds:[rsi]
   14003f643:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14003f647:	add    BYTE PTR [rdi+0x0],dh
   14003f64a:	jae    0x14003f64c
   14003f64c:	add    BYTE PTR cs:[rbp+0x0],cl
   14003f650:	(bad)  
   14003f651:	add    BYTE PTR [rbx+0x0],ah
   14003f654:	push   0x6e006900
   14003f659:	add    BYTE PTR [rbp+0x0],ah
   14003f65c:	add    BYTE PTR cs:[rdi+0x0],cl
   14003f660:	rex.WRXB add BYTE PTR [r10+0x0],r8b
   14003f664:	add    BYTE PTR [r8],r8b
   14003f667:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14003f66b:	add    BYTE PTR [rdi+0x0],ah
   14003f66e:	outs   dx,DWORD PTR ds:[rsi]
   14003f66f:	add    BYTE PTR [rsi+0x0],ch
   14003f672:	push   rbp
   14003f673:	add    BYTE PTR [rcx+0x0],cl
   14003f676:	and    BYTE PTR [rax],al
   14003f678:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14003f67c:	add    BYTE PTR [edi+0x0],ch
   14003f680:	outs   dx,BYTE PTR ds:[rsi]
   14003f681:	add    BYTE PTR [rax],ah
   14003f683:	add    BYTE PTR [rdi+0x0],dl
   14003f686:	imul   eax,DWORD PTR [rax],0x64006e
   14003f68c:	outs   dx,DWORD PTR ds:[rsi]
   14003f68d:	add    BYTE PTR [rdi+0x0],dh
	...
   14003f698:	and    BYTE PTR [rsi+0x4bea054a],ch
   14003f69e:	rex.RXB
   14003f69f:	rex.XB mov sil,BYTE PTR [rip+0x2533a564]        # 0x165379c0a
   14003f6a6:	rex.WX popf 
   14003f6a8:	xchg   ebp,eax
   14003f6a9:	rex.WRB
   14003f6aa:	ds int3 
   14003f6ac:	frstor [rbx]
   14003f6ae:	rex.RX
   14003f6af:	rex.WR mov es,rsp
   14003f6b2:	sub    BYTE PTR [rax+0x7129260d],bh
	...
   14003f6c0:	jnp    0x14003f6c2
   14003f6c2:	add    BYTE PTR [rsi+0x0],r8b
   14003f6c6:	add    BYTE PTR [rax+r8*1+0x45],r8b
   14003f6cb:	add    BYTE PTR [rdx],dh
   14003f6cd:	add    BYTE PTR [rcx],dh
   14003f6cf:	add    BYTE PTR [rbx],dh
   14003f6d1:	add    BYTE PTR [rip+0x43003800],ch        # 0x183042ed7
   14003f6d7:	add    BYTE PTR [rdx+0x0],al
   14003f6da:	xor    al,0x0
   14003f6dc:	sub    eax,0x36003400
   14003f6e1:	add    BYTE PTR [rcx+0x0],ah
   14003f6e4:	cmp    DWORD PTR [rax],eax
   14003f6e6:	sub    eax,0x30003900
   14003f6eb:	add    BYTE PTR [rbp+0x0],al
   14003f6ee:	rex.X add BYTE PTR [rip+0x44003300],bpl        # 0x1840429f5
   14003f6f5:	add    BYTE PTR [rcx+0x0],al
   14003f6f8:	cmp    BYTE PTR [rax],al
   14003f6fa:	xor    al,0x0
   14003f6fc:	xor    eax,DWORD PTR [rax]
   14003f6fe:	add    BYTE PTR [r14+0x0],al
   14003f702:	add    BYTE PTR ss:[rsi],dh
   14003f705:	add    BYTE PTR [rsi+0x0],al
   14003f708:	cmp    DWORD PTR [rax],eax
   14003f70a:	jge    0x14003f70c
   14003f70c:	sub    eax,0x65007200
   14003f711:	add    BYTE PTR [rcx+0x0],dh
   14003f714:	jne    0x14003f716
   14003f716:	add    BYTE PTR gs:[rbx+0x0],dh
   14003f71a:	je     0x14003f71c
   14003f71c:	add    BYTE PTR [rax],al
   14003f71e:	add    BYTE PTR [rax],al
   14003f720:	add    BYTE PTR [r8+r8*1+0x6f],r13b
   14003f725:	add    BYTE PTR [rdx+0x0],ah
   14003f728:	(bad)  
   14003f729:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14003f72d:	add    BYTE PTR [rbx+0x0],bh
   14003f730:	add    BYTE PTR [rsi+0x0],r8b
   14003f734:	add    BYTE PTR [rax+r8*1+0x45],r8b
   14003f739:	add    BYTE PTR [rdx],dh
   14003f73b:	add    BYTE PTR [rcx],dh
   14003f73d:	add    BYTE PTR [rbx],dh
   14003f73f:	add    BYTE PTR [rip+0x43003800],ch        # 0x183042f45
   14003f745:	add    BYTE PTR [rdx+0x0],al
   14003f748:	xor    al,0x0
   14003f74a:	sub    eax,0x36003400
   14003f74f:	add    BYTE PTR [rcx+0x0],ah
   14003f752:	cmp    DWORD PTR [rax],eax
   14003f754:	sub    eax,0x30003900
   14003f759:	add    BYTE PTR [rbp+0x0],al
   14003f75c:	rex.X add BYTE PTR [rip+0x44003300],bpl        # 0x184042a63
   14003f763:	add    BYTE PTR [rcx+0x0],al
   14003f766:	cmp    BYTE PTR [rax],al
   14003f768:	xor    al,0x0
   14003f76a:	xor    eax,DWORD PTR [rax]
   14003f76c:	add    BYTE PTR [r14+0x0],al
   14003f770:	add    BYTE PTR ss:[rsi],dh
   14003f773:	add    BYTE PTR [rsi+0x0],al
   14003f776:	cmp    DWORD PTR [rax],eax
   14003f778:	jge    0x14003f77a
   14003f77a:	sub    eax,0x65007300
   14003f77f:	add    BYTE PTR [rdx+0x0],dh
   14003f782:	jbe    0x14003f784
   14003f784:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14003f790:	pop    rdx
   14003f791:	and    eax,0x910818a0
   14003f796:	test   DWORD PTR [rdx-0x7c],eax
   14003f799:	sbb    DWORD PTR [rcx-0x7c],edx
   14003f79c:	ja     0x14003f7a6
   14003f79e:	(bad)  
   14003f79f:	jbe    0x14003f81c
   14003f7a1:	rex.RX
   14003f7a2:	gs je  0x14003f7ec
   14003f7a5:	sub    al,0x3b
   14003f7a7:	rex.RX movabs ds:0x57738a3545f2f7a1,eax
   14003f7b1:	push   rsi
   14003f7b2:	rex.R movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003f7b4:	sar    DWORD PTR [rcx-0x29],0x11
   14003f7b8:	xchg   ebx,eax
   14003f7b9:	sub    al,BYTE PTR [rax]
   14003f7bb:	(bad)  
   14003f7bc:	pop    rbx
   14003f7bd:	sub    esi,0x53
   14003f7c0:	outs   dx,DWORD PTR ds:[rsi]
   14003f7c1:	sbb    BYTE PTR [rdi-0x117e8e6c],dl
   14003f7c7:	rex.WR movabs rcx,0xd07e2a32ec1ad9b0
   14003f7d1:	pop    rbp
   14003f7d2:	add    DWORD PTR [rax+0x1],eax
   14003f7d5:	add    BYTE PTR [rax],al
   14003f7d7:	add    BYTE PTR [rax],ah
   14003f7d9:	pop    rsi
   14003f7da:	add    DWORD PTR [rax+0x1],eax
   14003f7dd:	add    BYTE PTR [rax],al
   14003f7df:	add    BYTE PTR [rax],ah
   14003f7e1:	pop    rsi
   14003f7e2:	add    DWORD PTR [rax+0x1],eax
   14003f7e5:	add    BYTE PTR [rax],al
   14003f7e7:	add    BYTE PTR [rax+0x3d],dh
   14003f7ea:	add    eax,DWORD PTR [rax+0x1]
   14003f7ed:	add    BYTE PTR [rax],al
   14003f7ef:	add    al,dl
   14003f7f1:	rex.XB add eax,DWORD PTR [r8+0x1]
   14003f7f5:	add    BYTE PTR [rax],al
   14003f7f7:	add    al,dh
   14003f7f9:	rex.X add eax,DWORD PTR [rax+0x1]
   14003f7fd:	add    BYTE PTR [rax],al
   14003f7ff:	add    BYTE PTR [rax],dl
   14003f801:	rex.X add eax,DWORD PTR [rax+0x1]
   14003f805:	add    BYTE PTR [rax],al
   14003f807:	add    al,al
   14003f809:	pop    rbp
   14003f80a:	add    DWORD PTR [rax+0x1],eax
   14003f80d:	add    BYTE PTR [rax],al
   14003f80f:	add    BYTE PTR [rax+0x5d],dh
   14003f812:	add    DWORD PTR [rax+0x1],eax
   14003f815:	add    BYTE PTR [rax],al
   14003f817:	add    BYTE PTR [rax+0x5d],dh
   14003f81a:	add    DWORD PTR [rax+0x1],eax
   14003f81d:	add    BYTE PTR [rax],al
   14003f81f:	add    BYTE PTR [rax+0x44],dh
   14003f822:	add    eax,DWORD PTR [rax+0x1]
   14003f825:	add    BYTE PTR [rax],al
   14003f827:	add    BYTE PTR [rax],dl
   14003f829:	rex.RX add r8d,DWORD PTR [rax+0x1]
   14003f82d:	add    BYTE PTR [rax],al
   14003f82f:	add    BYTE PTR [rax],dl
   14003f831:	xor    al,0x1
   14003f833:	rex add DWORD PTR [rax],eax
   14003f836:	add    BYTE PTR [rax],al
   14003f838:	mov    al,0x5d
   14003f83a:	add    DWORD PTR [rax+0x1],eax
   14003f83d:	add    BYTE PTR [rax],al
   14003f83f:	add    BYTE PTR [rax],dl
   14003f841:	pop    rsi
   14003f842:	add    DWORD PTR [rax+0x1],eax
   14003f845:	add    BYTE PTR [rax],al
   14003f847:	add    BYTE PTR [rax],dl
   14003f849:	pop    rsi
   14003f84a:	add    DWORD PTR [rax+0x1],eax
   14003f84d:	add    BYTE PTR [rax],al
   14003f84f:	add    BYTE PTR [rax+0x14000db],dh
   14003f855:	add    BYTE PTR [rax],al
   14003f857:	add    BYTE PTR [rax+0x140015d],ah
   14003f85d:	add    BYTE PTR [rax],al
   14003f85f:	add    BYTE PTR [rax],al
   14003f861:	pop    rsi
   14003f862:	add    DWORD PTR [rax+0x1],eax
   14003f865:	add    BYTE PTR [rax],al
   14003f867:	add    BYTE PTR [rax],al
   14003f869:	pop    rsi
   14003f86a:	add    DWORD PTR [rax+0x1],eax
   14003f86d:	add    BYTE PTR [rax],al
   14003f86f:	add    al,al
   14003f871:	xor    eax,0x14001
   14003f876:	add    BYTE PTR [rax],al
   14003f878:	rex
   14003f879:	rex.RXB add r8d,DWORD PTR [r8+0x1]
   14003f87d:	add    BYTE PTR [rax],al
   14003f87f:	add    al,dl
   14003f881:	add    r8d,DWORD PTR [rax+0x1]
   14003f885:	add    BYTE PTR [rax],al
   14003f887:	add    BYTE PTR [rax+0x40],dh
   14003f88a:	add    eax,DWORD PTR [rax+0x1]
   14003f88d:	add    BYTE PTR [rax],al
   14003f88f:	add    BYTE PTR [rax],dl
   14003f891:	xor    al,BYTE PTR [rcx]
   14003f893:	rex add DWORD PTR [rax],eax
   14003f896:	add    BYTE PTR [rax],al
   14003f898:	add    BYTE PTR [rdx],dh
   14003f89a:	add    DWORD PTR [rax+0x1],eax
   14003f89d:	add    BYTE PTR [rax],al
   14003f89f:	add    BYTE PTR [rax],al
   14003f8a1:	xor    al,BYTE PTR [rcx]
   14003f8a3:	rex add DWORD PTR [rax],eax
   14003f8a6:	add    BYTE PTR [rax],al
   14003f8a8:	(bad)  
   14003f8a9:	xor    al,0x1
   14003f8ab:	rex add DWORD PTR [rax],eax
   14003f8ae:	add    BYTE PTR [rax],al
   14003f8b0:	rol    BYTE PTR [rdi+0x3],1
   14003f8b3:	rex add DWORD PTR [rax],eax
   14003f8b6:	add    BYTE PTR [rax],al
   14003f8b8:	rex
   14003f8b9:	add    eax,DWORD PTR ds:[rax+0x1]
   14003f8bd:	add    BYTE PTR [rax],al
   14003f8bf:	add    BYTE PTR [rax+0x45],al
   14003f8c2:	add    eax,DWORD PTR [rax+0x1]
   14003f8c5:	add    BYTE PTR [rax],al
   14003f8c7:	add    al,al
   14003f8c9:	add    rax,QWORD PTR [rax+0x1]
   14003f8cd:	add    BYTE PTR [rax],al
   14003f8cf:	add    BYTE PTR [rax+0x1400349],dh
   14003f8d5:	add    BYTE PTR [rax],al
   14003f8d7:	add    BYTE PTR [rax+0x46],ah
   14003f8da:	add    eax,DWORD PTR [rax+0x1]
   14003f8dd:	add    BYTE PTR [rax],al
   14003f8df:	add    BYTE PTR [rax+0x140033c],al
   14003f8e5:	add    BYTE PTR [rax],al
   14003f8e7:	add    BYTE PTR [rdi],ch
   14003f8e9:	add    BYTE PTR [rip+0x20007300],ah        # 0x160046bef
   14003f8ef:	add    BYTE PTR [rdi],ch
   14003f8f1:	add    BYTE PTR [rax+0x0],dl
   14003f8f4:	(bad)  
   14003f8f5:	add    BYTE PTR [rdx+0x0],dh
   14003f8f8:	add    BYTE PTR gs:[rsi+0x0],ch
   14003f8fc:	je     0x14003f8fe
   14003f8fe:	cmp    al,BYTE PTR [rax]
   14003f900:	and    eax,0x31002e00
   14003f905:	add    BYTE PTR [rsi],dh
   14003f907:	add    BYTE PTR [rax+0x0],bh
   14003f90a:	add    BYTE PTR [rax],al
   14003f90c:	add    BYTE PTR [rax],al
   14003f90e:	add    BYTE PTR [rax],al
   14003f910:	ins    BYTE PTR es:[rdi],dx
   14003f911:	add    BYTE PTR [rdi+0x0],ch
   14003f914:	(bad)  
   14003f915:	add    BYTE PTR [rax+rax*1+0x68],ah
   14003f919:	add    BYTE PTR [rdi+0x0],ch
   14003f91c:	outs   dx,DWORD PTR ds:[rsi]
   14003f91d:	add    BYTE PTR [rbx+0x0],ch
   14003f920:	jae    0x14003f922
	...
   14003f92e:	add    BYTE PTR [rax],al
   14003f930:	pop    rsp
   14003f931:	add    BYTE PTR [rbp+0x0],cl
   14003f934:	imul   eax,DWORD PTR [rax],0x720063
   14003f93a:	outs   dx,DWORD PTR ds:[rsi]
   14003f93b:	add    BYTE PTR [rbx+0x0],dh
   14003f93e:	outs   dx,DWORD PTR ds:[rsi]
   14003f93f:	add    BYTE PTR [rsi+0x0],ah
   14003f942:	je     0x14003f944
   14003f944:	and    BYTE PTR [rax],al
   14003f946:	push   rbx
   14003f947:	add    BYTE PTR [rax+0x0],ch
   14003f94a:	(bad)  
   14003f94b:	add    BYTE PTR [rdx+0x0],dh
   14003f94e:	add    BYTE PTR gs:[rax+rax*1+0x5c],ah
   14003f953:	add    BYTE PTR [rcx+0x0],cl
   14003f956:	outs   dx,BYTE PTR ds:[rsi]
   14003f957:	add    BYTE PTR [rbx+0x0],ch
   14003f95a:	pop    rsp
   14003f95b:	add    BYTE PTR [rax+rax*1+0x61],dl
   14003f95f:	add    BYTE PTR [rdx+0x0],ah
   14003f962:	push   rsp
   14003f963:	add    BYTE PTR [rcx+0x0],ch
   14003f966:	jo     0x14003f968
   14003f968:	xor    eax,DWORD PTR [rax]
   14003f96a:	xor    al,BYTE PTR [rax]
   14003f96c:	add    BYTE PTR cs:[rbp+0x0],ah
   14003f970:	js     0x14003f972
   14003f972:	add    BYTE PTR gs:[rax],al
   14003f975:	add    BYTE PTR [rax],al
   14003f977:	add    BYTE PTR [rbx+0x0],al
   14003f97a:	outs   dx,DWORD PTR ds:[rsi]
   14003f97b:	add    BYTE PTR [rbp+0x0],ch
   14003f97e:	ins    DWORD PTR es:[rdi],dx
   14003f97f:	add    BYTE PTR [rdi+0x0],ch
   14003f982:	outs   dx,BYTE PTR ds:[rsi]
   14003f983:	add    BYTE PTR [rsi+0x0],al
   14003f986:	imul   eax,DWORD PTR [rax],0x65006c
   14003f98c:	jae    0x14003f98e
   14003f98e:	add    BYTE PTR [rcx+0x0],r13b
   14003f992:	jb     0x14003f994
   14003f994:	and    BYTE PTR [rax],al
   14003f996:	sub    BYTE PTR [rax],al
   14003f998:	js     0x14003f99a
   14003f99a:	cmp    BYTE PTR [rax],al
   14003f99c:	add    BYTE PTR ss:[rcx],ch
	...
   14003f9af:	add    BYTE PTR [rbx+0x0],dl
   14003f9b2:	outs   dx,DWORD PTR ds:[rsi]
   14003f9b3:	add    BYTE PTR [rsi+0x0],ah
   14003f9b6:	je     0x14003f9b8
   14003f9b8:	ja     0x14003f9ba
   14003f9ba:	(bad)  
   14003f9bb:	add    BYTE PTR [rdx+0x0],dh
   14003f9be:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14003f9c3:	add    BYTE PTR [rcx+0x0],ch
   14003f9c6:	movsxd eax,DWORD PTR [rax]
   14003f9c8:	jb     0x14003f9ca
   14003f9ca:	outs   dx,DWORD PTR ds:[rsi]
   14003f9cb:	add    BYTE PTR [rbx+0x0],dh
   14003f9ce:	outs   dx,DWORD PTR ds:[rsi]
   14003f9cf:	add    BYTE PTR [rsi+0x0],ah
   14003f9d2:	je     0x14003f9d4
   14003f9d4:	pop    rsp
   14003f9d5:	add    BYTE PTR [rdi+0x0],dl
   14003f9d8:	imul   eax,DWORD PTR [rax],0x64006e
   14003f9de:	outs   dx,DWORD PTR ds:[rsi]
   14003f9df:	add    BYTE PTR [rdi+0x0],dh
   14003f9e2:	jae    0x14003f9e4
   14003f9e4:	pop    rsp
   14003f9e5:	add    BYTE PTR [rbx+0x0],al
   14003f9e8:	jne    0x14003f9ea
   14003f9ea:	jb     0x14003f9ec
   14003f9ec:	jb     0x14003f9ee
   14003f9ee:	add    BYTE PTR gs:[rsi+0x0],ch
   14003f9f2:	je     0x14003f9f4
   14003f9f4:	push   rsi
   14003f9f5:	add    BYTE PTR [rbp+0x0],ah
   14003f9f8:	jb     0x14003f9fa
   14003f9fa:	jae    0x14003f9fc
   14003f9fc:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   14003fa0e:	add    BYTE PTR [rax],al
   14003fa10:	rol    BYTE PTR [rax],0x0
   14003fa13:	add    BYTE PTR [rax],al
   14003fa15:	add    BYTE PTR [rax],al
   14003fa17:	rex.RX loopne 0x14003fa5c
   14003fa1a:	add    DWORD PTR [rax+0x1],eax
   14003fa1d:	add    BYTE PTR [rax],al
   14003fa1f:	add    BYTE PTR [rax-0x1b],ah
   14003fa22:	add    al,0x40
   14003fa24:	add    DWORD PTR [rax],eax
   14003fa26:	add    BYTE PTR [rax],al
   14003fa28:	add    dh,ah
   14003fa2a:	add    al,0x40
   14003fa2c:	add    DWORD PTR [rax],eax
   14003fa2e:	add    BYTE PTR [rax],al
   14003fa30:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003fa32:	jbe    0x14003fa95
   14003fa34:	ins    BYTE PTR es:[rdi],dx
   14003fa35:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x6d617261
   14003fa3d:	gs je  0x14003faa5
   14003fa40:	jb     0x14003fa62
   14003fa42:	jo     0x14003faa5
   14003fa44:	jae    0x14003fab9
   14003fa46:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14003fa4c:	rex.XB and BYTE PTR [r10+0x75],sil
   14003fa50:	outs   dx,BYTE PTR ds:[rsi]
   14003fa51:	je     0x14003fabc
   14003fa53:	ins    DWORD PTR es:[rdi],dx
   14003fa54:	and    BYTE PTR gs:[rsi+0x75],ah
   14003fa58:	outs   dx,BYTE PTR ds:[rsi]
   14003fa59:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14003fa5d:	outs   dx,BYTE PTR ds:[rsi]
   14003fa5e:	or     al,BYTE PTR cs:[rax]
	...
   14003fa6d:	add    BYTE PTR [rax],al
   14003fa6f:	add    BYTE PTR [rdi+0x4c],cl
   14003fa72:	rex.RB
   14003fa73:	push   r13
   14003fa75:	push   rsp
   14003fa76:	xor    esi,DWORD PTR [rdx]
   14003fa78:	cs fs ins BYTE PTR es:[rdi],dx
   14003fa7b:	ins    BYTE PTR es:[rdi],dx
   14003fa7c:	add    BYTE PTR [rax],al
   14003fa7e:	add    BYTE PTR [rax],al
   14003fa80:	(bad)  
   14003fa81:	jo     0x14003faec
   14003fa83:	sub    eax,0x772d736d
   14003fa88:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14003fa8f:	sub    eax,0x2d6d6f63
   14003fa94:	ins    BYTE PTR es:[rdi],dx
   14003fa95:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e3527cc
   14003fa9b:	fs ins BYTE PTR es:[rdi],dx
   14003fa9d:	ins    BYTE PTR es:[rdi],dx
   14003fa9e:	add    BYTE PTR [rax],al
   14003faa0:	(bad)  
   14003faa1:	jo     0x14003fb0c
   14003faa3:	sub    eax,0x772d736d
   14003faa8:	imul   ebp,DWORD PTR [rsi+0x2d],0x6f636873
   14003faaf:	jb     0x14003fb16
   14003fab1:	sub    eax,0x65727473
   14003fab6:	(bad)  
   14003fab7:	ins    DWORD PTR es:[rdi],dx
   14003fab8:	sub    eax,0x312d316c
   14003fabd:	sub    eax,0x6c642e30
   14003fac2:	ins    BYTE PTR es:[rdi],dx
	...
   14003facf:	add    BYTE PTR [rdi+0x4c],cl
   14003fad2:	rex.RB
   14003fad3:	rex.B
   14003fad4:	rex.XB
   14003fad5:	rex.XB
   14003fad6:	cs fs ins BYTE PTR es:[rdi],dx
   14003fad9:	ins    BYTE PTR es:[rdi],dx
   14003fada:	add    BYTE PTR [rax],al
   14003fadc:	add    BYTE PTR [rax],al
   14003fade:	add    BYTE PTR [rax],al
   14003fae0:	(bad)  
   14003fae1:	jo     0x14003fb4c
   14003fae3:	sub    eax,0x772d736d
   14003fae8:	imul   ebp,DWORD PTR [rsi+0x2d],0x76726573
   14003faef:	imul   esp,DWORD PTR [rbx+0x65],0x6e616d2d
   14003faf6:	(bad)  
   14003faf7:	gs ins DWORD PTR es:[edi],dx
   14003fafa:	outs   dx,BYTE PTR gs:[rsi]
   14003fafc:	je     0x14003fb2b
   14003fafe:	ins    BYTE PTR es:[rdi],dx
   14003faff:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e342836
   14003fb05:	fs ins BYTE PTR es:[rdi],dx
   14003fb07:	ins    BYTE PTR es:[rdi],dx
	...
   14003fb10:	push   rax
   14003fb11:	jle    0x14003fb13
   14003fb13:	rex add DWORD PTR [rax],eax
   14003fb16:	add    BYTE PTR [rax],al
   14003fb18:	loopne 0x14003fb97
   14003fb1a:	add    BYTE PTR [rax+0x1],al
   14003fb1d:	add    BYTE PTR [rax],al
   14003fb1f:	add    al,dh
   14003fb21:	movabs eax,ds:0x7e40000000014003
   14003fb2a:	add    BYTE PTR [rax+0x1],al
   14003fb2d:	add    BYTE PTR [rax],al
   14003fb2f:	add    BYTE PTR [rax],dh
   14003fb31:	jle    0x14003fb33
   14003fb33:	rex add DWORD PTR [rax],eax
   14003fb36:	add    BYTE PTR [rax],al
   14003fb38:	(bad)  
   14003fb39:	movabs eax,ds:0x412000000014003
   14003fb42:	add    al,BYTE PTR [rax]
   14003fb44:	add    BYTE PTR [rax],al
   14003fb46:	add    BYTE PTR [rax],al
   14003fb48:	rol    BYTE PTR [rax],0x0
   14003fb4b:	add    BYTE PTR [rax],al
   14003fb4d:	add    BYTE PTR [rax],al
   14003fb4f:	rex.RX push rdi
   14003fb51:	push   rsi
   14003fb52:	rex.R mov esi,0x11d7b22d
   14003fb58:	xchg   ebx,eax
   14003fb59:	xchg   ebx,eax
   14003fb5a:	add    BYTE PTR [rsi],al
   14003fb5c:	pop    rbx
   14003fb5d:	sub    esi,0x53
   14003fb60:	mov    edx,0xa98241dd
   14003fb65:	iret   
   14003fb66:	jrcxz  0x14003fbaa
   14003fb68:	popf   
   14003fb69:	jnp    0x14003fbb6
   14003fb6b:	ins    BYTE PTR es:[rdi],dx
   14003fb6c:	mov    bl,BYTE PTR [rbp-0x34532053]
   14003fb72:	lahf   
   14003fb73:	mov    edx,0x46bf3ae4
   14003fb78:	mov    bh,0xba
   14003fb7a:	xchg   sp,ax
   14003fb7c:	cwde   
   14003fb7d:	int3   
   14003fb7e:	enter  0x4dde,0x0
   14003fb82:	jae    0x14003fb84
   14003fb84:	movsxd eax,DWORD PTR [rax]
   14003fb86:	outs   dx,DWORD PTR ds:[rsi]
   14003fb87:	add    BYTE PTR [rdx+0x0],dh
   14003fb8a:	add    BYTE PTR gs:[rbp+0x0],ah
   14003fb8e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14003fb93:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003fb97:	add    BYTE PTR [rcx],ch
   14003fb99:	add    BYTE PTR [rax],al
   14003fb9b:	add    BYTE PTR [rax],al
   14003fb9d:	add    BYTE PTR [rax],al
   14003fb9f:	add    al,al
   14003fba1:	add    BYTE PTR [rax],al
   14003fba3:	add    BYTE PTR [rax],al
   14003fba5:	add    BYTE PTR [rax],al
   14003fba7:	rex.RX xor BYTE PTR [rax],r8b
   14003fbaa:	add    BYTE PTR [rax],al
   14003fbac:	add    BYTE PTR [rax],al
   14003fbae:	add    BYTE PTR [rax],al
   14003fbb0:	rol    BYTE PTR [rax],0x0
   14003fbb3:	add    BYTE PTR [rax],al
   14003fbb5:	add    BYTE PTR [rax],al
   14003fbb7:	rex.RX js 0x14003fbed
   14003fbba:	test   BYTE PTR [rdi+rax*1-0x6ab9cebe],bh
   14003fbc1:	pop    rsp
   14003fbc2:	pop    rcx
   14003fbc3:	push   rdi
   14003fbc4:	sub    al,0xf1
   14003fbc6:	cmp    DWORD PTR [rdx+0x9fa2184],esp
   14003fbcc:	out    dx,eax
   14003fbcd:	cdq    
   14003fbce:	xchg   ebp,eax
   14003fbcf:	rex stos DWORD PTR es:[rdi],eax
   14003fbd1:	(bad)  
   14003fbd2:	push   rsp
   14003fbd3:	jrcxz  0x14003fbec
   14003fbd5:	mov    ch,0xcb
   14003fbd7:	mov    edx,DWORD PTR [rcx+0x2f76ba34]
   14003fbdd:	retf   
   14003fbde:	imul   eax,DWORD PTR [rax-0x67],0x61
   14003fbe2:	(bad)  
   14003fbe3:	or     al,0x4c
   14003fbe5:	fisubr DWORD PTR [rsi+0x542586f2]
   14003fbeb:	adc    al,0xbf
   14003fbed:	adc    DWORD PTR [rdi+0x4f],ebx
   14003fbf0:	mov    dh,0xe7
   14003fbf2:	rex.WB shl BYTE PTR [r10+rcx*2-0x55],1
   14003fbf7:	outs   dx,BYTE PTR ds:[rsi]
   14003fbf8:	xchg   esp,eax
   14003fbf9:	push   rax
   14003fbfa:	call   0x131fb1b9c
   14003fbff:	test   BYTE PTR [rcx+0x15],r14b
   14003fc03:	movabs ds:0x22445657f3fc76fa,al
   14003fc0c:	mov    ah,0x79
   14003fc0e:	xlat   BYTE PTR ds:[rbx]
   14003fc0f:	adc    DWORD PTR [rbx+0x5b06002a],edx
   14003fc15:	sub    esi,0x53
	...
   14003fc20:	push   rbx
   14003fc21:	add    BYTE PTR [rbp+0x0],ah
   14003fc24:	add    BYTE PTR [edi+0x0],ch
   14003fc28:	add    BYTE PTR gs:[rax],ah
   14003fc2b:	add    BYTE PTR [rbp+0x0],dl
   14003fc2e:	rex.WB add BYTE PTR [r8],spl
   14003fc31:	add    BYTE PTR [rax+rax*1+0x69],cl
   14003fc35:	add    BYTE PTR [rdi+0x0],ah
   14003fc38:	push   0x7400
   14003fc3d:	add    BYTE PTR [rbx+0x0],dl
   14003fc40:	add    BYTE PTR gs:[rdi+0x0],ah
   14003fc44:	outs   dx,DWORD PTR ds:[rsi]
   14003fc45:	add    BYTE PTR [rbp+0x0],ah
   14003fc48:	and    BYTE PTR [rax],al
   14003fc4a:	push   rbp
   14003fc4b:	add    BYTE PTR [rcx+0x0],cl
   14003fc4e:	and    BYTE PTR [rax],al
   14003fc50:	push   rbx
   14003fc51:	add    BYTE PTR [rbp+0x0],ah
   14003fc54:	ins    DWORD PTR es:[rdi],dx
   14003fc55:	add    BYTE PTR [rcx+0x0],ch
   14003fc58:	rex.X add BYTE PTR [rdi+0x0],bpl
   14003fc5c:	ins    BYTE PTR es:[rdi],dx
   14003fc5d:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003fc61:	add    BYTE PTR [rbx+0x0],dl
   14003fc64:	add    BYTE PTR gs:[rdi+0x0],ah
   14003fc68:	outs   dx,DWORD PTR ds:[rsi]
   14003fc69:	add    BYTE PTR [rbp+0x0],ah
   14003fc6c:	and    BYTE PTR [rax],al
   14003fc6e:	push   rbp
   14003fc6f:	add    BYTE PTR [rcx+0x0],cl
   14003fc72:	add    BYTE PTR [rax],al
   14003fc74:	push   rbx
   14003fc75:	add    BYTE PTR [rbp+0x0],ah
   14003fc78:	add    BYTE PTR [edi+0x0],ch
   14003fc7c:	add    BYTE PTR gs:[rax],ah
   14003fc7f:	add    BYTE PTR [rax+0x0],dl
   14003fc82:	jae    0x14003fc84
   14003fc84:	add    BYTE PTR gs:[rbp+0x0],dh
   14003fc88:	add    BYTE PTR fs:[rdi+0x0],ch
   14003fc8c:	add    BYTE PTR [rax],al
   14003fc8e:	pop    rcx
   14003fc8f:	add    BYTE PTR [rbp+0x0],dh
   14003fc92:	and    BYTE PTR [rax],al
   14003fc94:	rex.RXB add BYTE PTR [r15+0x0],r13b
   14003fc98:	je     0x14003fc9a
   14003fc9a:	push   0x63006900
   14003fc9f:	add    BYTE PTR [rax],ah
   14003fca1:	add    BYTE PTR [rbp+0x0],dl
   14003fca4:	rex.WB add BYTE PTR [r8],spl
   14003fca7:	add    BYTE PTR [rax+rax*1+0x69],cl
   14003fcab:	add    BYTE PTR [rdi+0x0],ah
   14003fcae:	push   0x7400
   14003fcb3:	add    BYTE PTR [rcx+0x0],bl
   14003fcb6:	jne    0x14003fcb8
   14003fcb8:	and    BYTE PTR [rax],al
   14003fcba:	rex.RXB add BYTE PTR [r15+0x0],r13b
   14003fcbe:	je     0x14003fcc0
   14003fcc0:	push   0x63006900
   14003fcc5:	add    BYTE PTR [rax],ah
   14003fcc7:	add    BYTE PTR [rbp+0x0],dl
   14003fcca:	rex.WB add BYTE PTR [r8],spl
   14003fccd:	add    BYTE PTR [rbx+0x0],dl
   14003fcd0:	add    BYTE PTR gs:[rbp+0x0],ch
   14003fcd4:	imul   eax,DWORD PTR [rax],0x6f0062
   14003fcda:	ins    BYTE PTR es:[rdi],dx
   14003fcdb:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003fcdf:	add    BYTE PTR [rcx+0x0],bl
   14003fce2:	jne    0x14003fce4
   14003fce4:	and    BYTE PTR [rax],al
   14003fce6:	rex.RXB add BYTE PTR [r15+0x0],r13b
   14003fcea:	je     0x14003fcec
   14003fcec:	push   0x63006900
   14003fcf1:	add    BYTE PTR [rax],ah
   14003fcf3:	add    BYTE PTR [rbp+0x0],dl
   14003fcf6:	rex.WB add BYTE PTR [r8],al
   14003fcf9:	add    BYTE PTR [rbp+0x0],cl
   14003fcfc:	(bad)  
   14003fcfd:	add    BYTE PTR [rax+rax*1+0x67],ch
   14003fd01:	add    BYTE PTR [rbp+0x0],dh
   14003fd04:	outs   dx,BYTE PTR ds:[rsi]
   14003fd05:	add    BYTE PTR [rax],ah
   14003fd07:	add    BYTE PTR [rdi+0x0],al
   14003fd0a:	outs   dx,DWORD PTR ds:[rsi]
   14003fd0b:	add    BYTE PTR [rax+rax*1+0x68],dh
   14003fd0f:	add    BYTE PTR [rcx+0x0],ch
   14003fd12:	movsxd eax,DWORD PTR [rax]
   14003fd14:	and    BYTE PTR [rax],al
   14003fd16:	push   rbx
   14003fd17:	add    BYTE PTR [rbp+0x0],ah
   14003fd1a:	ins    DWORD PTR es:[rdi],dx
   14003fd1b:	add    BYTE PTR [rcx+0x0],ch
   14003fd1e:	ins    BYTE PTR es:[rdi],dx
   14003fd1f:	add    BYTE PTR [rcx+0x0],ch
   14003fd22:	add    BYTE PTR [eax+0x0],ch
   14003fd26:	je     0x14003fd28
   14003fd28:	add    BYTE PTR [rax],al
   14003fd2a:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14003fd2e:	ins    BYTE PTR es:[rdi],dx
   14003fd2f:	add    BYTE PTR [rdi+0x0],ah
   14003fd32:	jne    0x14003fd34
   14003fd34:	outs   dx,BYTE PTR ds:[rsi]
   14003fd35:	add    BYTE PTR [rax],ah
   14003fd37:	add    BYTE PTR [rdi+0x0],al
   14003fd3a:	outs   dx,DWORD PTR ds:[rsi]
   14003fd3b:	add    BYTE PTR [rax+rax*1+0x68],dh
   14003fd3f:	add    BYTE PTR [rcx+0x0],ch
   14003fd42:	movsxd eax,DWORD PTR [rax]
   14003fd44:	and    BYTE PTR [rax],al
   14003fd46:	rex.X add BYTE PTR [rdi+0x0],bpl
   14003fd4a:	ins    BYTE PTR es:[rdi],dx
   14003fd4b:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003fd4f:	add    BYTE PTR [rbp+0x0],cl
   14003fd52:	(bad)  
   14003fd53:	add    BYTE PTR [rax+rax*1+0x67],ch
   14003fd57:	add    BYTE PTR [rbp+0x0],dh
   14003fd5a:	outs   dx,BYTE PTR ds:[rsi]
   14003fd5b:	add    BYTE PTR [rax],ah
   14003fd5d:	add    BYTE PTR [rdi+0x0],al
   14003fd60:	outs   dx,DWORD PTR ds:[rsi]
   14003fd61:	add    BYTE PTR [rax+rax*1+0x68],dh
   14003fd65:	add    BYTE PTR [rcx+0x0],ch
   14003fd68:	movsxd eax,DWORD PTR [rax]
   14003fd6a:	add    BYTE PTR [rax],al
   14003fd6c:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14003fd70:	add    BYTE PTR gs:[rax+rax*1+0x61],ch
   14003fd75:	add    BYTE PTR [rdi+0x0],dh
   14003fd78:	(bad)  
   14003fd79:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003fd7d:	add    BYTE PTR [rbp+0x0],ah
   14003fd80:	and    BYTE PTR [rax],al
   14003fd82:	push   rbp
   14003fd83:	add    BYTE PTR [rcx+0x0],cl
   14003fd86:	and    BYTE PTR [rax],al
   14003fd88:	push   rbx
   14003fd89:	add    BYTE PTR [rbp+0x0],ah
   14003fd8c:	ins    DWORD PTR es:[rdi],dx
   14003fd8d:	add    BYTE PTR [rcx+0x0],ch
   14003fd90:	ins    BYTE PTR es:[rdi],dx
   14003fd91:	add    BYTE PTR [rcx+0x0],ch
   14003fd94:	add    BYTE PTR [eax+0x0],ch
   14003fd98:	je     0x14003fd9a
   14003fd9a:	add    BYTE PTR [rax],al
   14003fd9c:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14003fda0:	add    BYTE PTR gs:[rax+rax*1+0x61],ch
   14003fda5:	add    BYTE PTR [rdi+0x0],dh
   14003fda8:	(bad)  
   14003fda9:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003fdad:	add    BYTE PTR [rbp+0x0],ah
   14003fdb0:	and    BYTE PTR [rax],al
   14003fdb2:	push   rbp
   14003fdb3:	add    BYTE PTR [rcx+0x0],cl
   14003fdb6:	and    BYTE PTR [rax],al
   14003fdb8:	rex.X add BYTE PTR [rdi+0x0],bpl
   14003fdbc:	ins    BYTE PTR es:[rdi],dx
   14003fdbd:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003fdc1:	add    BYTE PTR [rax+rax*1+0x65],cl
   14003fdc5:	add    BYTE PTR [rbp+0x0],ah
   14003fdc8:	ins    BYTE PTR es:[rdi],dx
   14003fdc9:	add    BYTE PTR [rcx+0x0],ah
   14003fdcc:	ja     0x14003fdce
   14003fdce:	(bad)  
   14003fdcf:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003fdd3:	add    BYTE PTR [rbp+0x0],ah
   14003fdd6:	and    BYTE PTR [rax],al
   14003fdd8:	push   rbp
   14003fdd9:	add    BYTE PTR [rcx+0x0],cl
   14003fddc:	add    BYTE PTR [rax],al
   14003fdde:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14003fde2:	movsxd eax,DWORD PTR [rax]
   14003fde4:	jb     0x14003fde6
   14003fde6:	outs   dx,DWORD PTR ds:[rsi]
   14003fde7:	add    BYTE PTR [rbx+0x0],dh
   14003fdea:	outs   dx,DWORD PTR ds:[rsi]
   14003fdeb:	add    BYTE PTR [rsi+0x0],ah
   14003fdee:	je     0x14003fdf0
   14003fdf0:	and    BYTE PTR [rax],al
   14003fdf2:	pop    rcx
   14003fdf3:	add    BYTE PTR [rcx+0x0],ah
   14003fdf6:	rex.W add BYTE PTR [rbp+0x0],spl
   14003fdfa:	imul   eax,DWORD PTR [rax],0x550020
   14003fe00:	rex.WB add BYTE PTR [r8],spl
   14003fe03:	add    BYTE PTR [rax+rax*1+0x69],cl
   14003fe07:	add    BYTE PTR [rdi+0x0],ah
   14003fe0a:	push   0x7400
   14003fe0f:	add    BYTE PTR [rbp+0x0],cl
   14003fe12:	imul   eax,DWORD PTR [rax],0x720063
   14003fe18:	outs   dx,DWORD PTR ds:[rsi]
   14003fe19:	add    BYTE PTR [rbx+0x0],dh
   14003fe1c:	outs   dx,DWORD PTR ds:[rsi]
   14003fe1d:	add    BYTE PTR [rsi+0x0],ah
   14003fe20:	je     0x14003fe22
   14003fe22:	and    BYTE PTR [rax],al
   14003fe24:	pop    rcx
   14003fe25:	add    BYTE PTR [rcx+0x0],ah
   14003fe28:	rex.W add BYTE PTR [rbp+0x0],spl
   14003fe2c:	imul   eax,DWORD PTR [rax],0x550020
   14003fe32:	rex.WB add BYTE PTR [r8],spl
   14003fe35:	add    BYTE PTR [rdx+0x0],al
   14003fe38:	outs   dx,DWORD PTR ds:[rsi]
   14003fe39:	add    BYTE PTR [rax+rax*1+0x64],ch
   14003fe3d:	add    BYTE PTR [rax],al
   14003fe3f:	add    BYTE PTR [rbp+0x0],cl
   14003fe42:	imul   eax,DWORD PTR [rax],0x720063
   14003fe48:	outs   dx,DWORD PTR ds:[rsi]
   14003fe49:	add    BYTE PTR [rbx+0x0],dh
   14003fe4c:	outs   dx,DWORD PTR ds:[rsi]
   14003fe4d:	add    BYTE PTR [rsi+0x0],ah
   14003fe50:	je     0x14003fe52
   14003fe52:	and    BYTE PTR [rax],al
   14003fe54:	pop    rcx
   14003fe55:	add    BYTE PTR [rcx+0x0],ah
   14003fe58:	rex.W add BYTE PTR [rbp+0x0],spl
   14003fe5c:	imul   eax,DWORD PTR [rax],0x550020
   14003fe62:	rex.WB add BYTE PTR [r8],al
   14003fe65:	add    BYTE PTR [rbp+0x0],cl
   14003fe68:	imul   eax,DWORD PTR [rax],0x720063
   14003fe6e:	outs   dx,DWORD PTR ds:[rsi]
   14003fe6f:	add    BYTE PTR [rbx+0x0],dh
   14003fe72:	outs   dx,DWORD PTR ds:[rsi]
   14003fe73:	add    BYTE PTR [rsi+0x0],ah
   14003fe76:	je     0x14003fe78
   14003fe78:	and    BYTE PTR [rax],al
   14003fe7a:	rex.WX add BYTE PTR [rax+0x0],bpl
   14003fe7e:	add    BYTE PTR gs:[rsi+0x0],ch
   14003fe82:	add    BYTE PTR [eax+0x0],cl
   14003fe86:	add    BYTE PTR gs:[rcx+0x0],ch
   14003fe8a:	and    BYTE PTR [rax],al
   14003fe8c:	push   rbp
   14003fe8d:	add    BYTE PTR [rcx+0x0],cl
   14003fe90:	and    BYTE PTR [rax],al
   14003fe92:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14003fe96:	add    BYTE PTR [eax+0x0],ch
   14003fe9a:	je     0x14003fe9c
   14003fe9c:	add    BYTE PTR [rax],al
   14003fe9e:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14003fea2:	movsxd eax,DWORD PTR [rax]
   14003fea4:	jb     0x14003fea6
   14003fea6:	outs   dx,DWORD PTR ds:[rsi]
   14003fea7:	add    BYTE PTR [rbx+0x0],dh
   14003feaa:	outs   dx,DWORD PTR ds:[rsi]
   14003feab:	add    BYTE PTR [rsi+0x0],ah
   14003feae:	je     0x14003feb0
   14003feb0:	and    BYTE PTR [rax],al
   14003feb2:	rex.WX add BYTE PTR [rax+0x0],bpl
   14003feb6:	add    BYTE PTR gs:[rsi+0x0],ch
   14003feba:	add    BYTE PTR [eax+0x0],cl
   14003febe:	add    BYTE PTR gs:[rcx+0x0],ch
   14003fec2:	and    BYTE PTR [rax],al
   14003fec4:	push   rbp
   14003fec5:	add    BYTE PTR [rcx+0x0],cl
   14003fec8:	and    BYTE PTR [rax],al
   14003feca:	rex.X add BYTE PTR [rdi+0x0],bpl
   14003fece:	ins    BYTE PTR es:[rdi],dx
   14003fecf:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003fed3:	add    BYTE PTR [rbp+0x0],cl
   14003fed6:	imul   eax,DWORD PTR [rax],0x720063
   14003fedc:	outs   dx,DWORD PTR ds:[rsi]
   14003fedd:	add    BYTE PTR [rbx+0x0],dh
   14003fee0:	outs   dx,DWORD PTR ds:[rsi]
   14003fee1:	add    BYTE PTR [rsi+0x0],ah
   14003fee4:	je     0x14003fee6
   14003fee6:	and    BYTE PTR [rax],al
   14003fee8:	rex.WX add BYTE PTR [rax+0x0],bpl
   14003feec:	add    BYTE PTR gs:[rsi+0x0],ch
   14003fef0:	add    BYTE PTR [eax+0x0],cl
   14003fef4:	add    BYTE PTR gs:[rcx+0x0],ch
   14003fef8:	and    BYTE PTR [rax],al
   14003fefa:	push   rbp
   14003fefb:	add    BYTE PTR [rcx+0x0],cl
   14003fefe:	add    BYTE PTR [rax],al
   14003ff00:	and    al,BYTE PTR [rip+0x41993]        # 0x140081899
   14003ff06:	add    BYTE PTR [rax],al
   14003ff08:	adc    BYTE PTR [rsp+rax*1+0x0],dl
   14003ff0f:	add    BYTE PTR [rax],al
   14003ff11:	add    BYTE PTR [rax],al
   14003ff13:	add    BYTE PTR [rcx],cl
   14003ff15:	add    BYTE PTR [rax],al
   14003ff17:	add    BYTE PTR [rax],dh
   14003ff19:	xchg   esp,eax
   14003ff1a:	add    al,0x0
   14003ff1c:	(bad)  
   14003ff1d:	add    BYTE PTR [rax],al
   14003ff1f:	add    BYTE PTR [rax],al
   14003ff21:	add    BYTE PTR [rax],al
   14003ff23:	add    BYTE PTR [rcx],al
   14003ff25:	add    BYTE PTR [rax],al
   14003ff27:	add    BYTE PTR [rdx],ah
   14003ff29:	add    eax,0x41993
   14003ff2e:	add    BYTE PTR [rax],al
   14003ff30:	xchg   esp,eax
   14003ff31:	xchg   esp,eax
   14003ff32:	add    al,0x0
   14003ff34:	add    DWORD PTR [rax],eax
   14003ff36:	add    BYTE PTR [rax],al
   14003ff38:	mov    ah,0x94
   14003ff3a:	add    al,0x0
   14003ff3c:	or     BYTE PTR [rax],al
   14003ff3e:	add    BYTE PTR [rax],al
   14003ff40:	fcom   QWORD PTR [rsp+rax*1+0x3000]
   14003ff47:	add    BYTE PTR [rax],al
   14003ff49:	add    BYTE PTR [rax],al
   14003ff4b:	add    BYTE PTR [rcx],al
   14003ff4d:	add    BYTE PTR [rax],al
   14003ff4f:	add    BYTE PTR [rdx],ah
   14003ff51:	add    eax,0x21993
   14003ff56:	add    BYTE PTR [rax],al
   14003ff58:	push   rsp
   14003ff59:	xchg   ebp,eax
   14003ff5a:	add    al,0x0
   14003ff5c:	add    DWORD PTR [rax],eax
   14003ff5e:	add    BYTE PTR [rax],al
   14003ff60:	fs xchg ebp,eax
   14003ff62:	add    al,0x0
   14003ff64:	add    al,0x0
   14003ff66:	add    BYTE PTR [rax],al
   14003ff68:	mov    WORD PTR [rbp+0x200004],ss
   14003ff6e:	add    BYTE PTR [rax],al
   14003ff70:	add    BYTE PTR [rax],al
   14003ff72:	add    BYTE PTR [rax],al
   14003ff74:	add    DWORD PTR [rax],eax
   14003ff76:	add    BYTE PTR [rax],al
   14003ff78:	and    al,BYTE PTR [rip+0x21993]        # 0x140061911
   14003ff7e:	add    BYTE PTR [rax],al
   14003ff80:	xor    BYTE PTR [rbp+0x4],dh
   14003ff83:	add    BYTE PTR [rcx],al
   14003ff85:	add    BYTE PTR [rax],al
   14003ff87:	add    BYTE PTR [rax+0x75],al
   14003ff8a:	add    al,0x0
   14003ff8c:	(bad)  
   14003ff8d:	add    BYTE PTR [rax],al
   14003ff8f:	add    BYTE PTR [rax+0x75],ch
   14003ff92:	add    al,0x0
   14003ff94:	and    BYTE PTR [rax],al
   14003ff96:	add    BYTE PTR [rax],al
   14003ff98:	add    BYTE PTR [rax],al
   14003ff9a:	add    BYTE PTR [rax],al
   14003ff9c:	add    DWORD PTR [rax],eax
   14003ff9e:	add    BYTE PTR [rax],al
   14003ffa0:	and    al,BYTE PTR [rip+0x11993]        # 0x140051939
   14003ffa6:	add    BYTE PTR [rax],al
   14003ffa8:	add    al,0x96
   14003ffaa:	add    al,0x0
	...
   14003ffb4:	add    eax,DWORD PTR [rax]
   14003ffb6:	add    BYTE PTR [rax],al
   14003ffb8:	or     al,0x96
   14003ffba:	add    al,0x0
   14003ffbc:	and    BYTE PTR [rax],al
   14003ffbe:	add    BYTE PTR [rax],al
   14003ffc0:	add    BYTE PTR [rax],al
   14003ffc2:	add    BYTE PTR [rax],al
   14003ffc4:	add    DWORD PTR [rax],eax
   14003ffc6:	add    BYTE PTR [rax],al
   14003ffc8:	and    al,BYTE PTR [rip+0x11993]        # 0x140051961
   14003ffce:	add    BYTE PTR [rax],al
   14003ffd0:	cmp    al,0x96
   14003ffd2:	add    al,0x0
	...
   14003ffdc:	add    eax,DWORD PTR [rax]
   14003ffde:	add    BYTE PTR [rax],al
   14003ffe0:	rex.R xchg esi,eax
   14003ffe2:	add    al,0x0
   14003ffe4:	and    BYTE PTR [rax],al
   14003ffe6:	add    BYTE PTR [rax],al
   14003ffe8:	add    BYTE PTR [rax],al
   14003ffea:	add    BYTE PTR [rax],al
   14003ffec:	add    DWORD PTR [rax],eax
   14003ffee:	add    BYTE PTR [rax],al
   14003fff0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061989
   14003fff6:	add    BYTE PTR [rax],al
   14003fff8:	je     0x14003ff90
   14003fffa:	add    al,0x0
	...
   140040004:	add    al,0x0
   140040006:	add    BYTE PTR [rax],al
   140040008:	test   BYTE PTR [rsi+0x200004],dl
   14004000e:	add    BYTE PTR [rax],al
   140040010:	add    BYTE PTR [rax],al
   140040012:	add    BYTE PTR [rax],al
   140040014:	add    DWORD PTR [rax],eax
   140040016:	add    BYTE PTR [rax],al
   140040018:	and    al,BYTE PTR [rip+0x11993]        # 0x1400519b1
   14004001e:	add    BYTE PTR [rax],al
   140040020:	mov    esp,0x496
   140040025:	add    BYTE PTR [rax],al
   140040027:	add    BYTE PTR [rax],al
   140040029:	add    BYTE PTR [rax],al
   14004002b:	add    BYTE PTR [rbx],al
   14004002d:	add    BYTE PTR [rax],al
   14004002f:	add    ah,al
   140040031:	xchg   esi,eax
   140040032:	add    al,0x0
   140040034:	and    BYTE PTR [rax],al
   140040036:	add    BYTE PTR [rax],al
   140040038:	add    BYTE PTR [rax],al
   14004003a:	add    BYTE PTR [rax],al
   14004003c:	add    DWORD PTR [rax],eax
   14004003e:	add    BYTE PTR [rax],al
   140040040:	and    al,BYTE PTR [rip+0x21993]        # 0x1400619d9
   140040046:	add    BYTE PTR [rax],al
   140040048:	hlt    
   140040049:	xchg   esi,eax
   14004004a:	add    al,0x0
	...
   140040054:	add    al,0x0
   140040056:	add    BYTE PTR [rax],al
   140040058:	add    al,0x97
   14004005a:	add    al,0x0
   14004005c:	and    BYTE PTR [rax],al
   14004005e:	add    BYTE PTR [rax],al
   140040060:	add    BYTE PTR [rax],al
   140040062:	add    BYTE PTR [rax],al
   140040064:	add    DWORD PTR [rax],eax
   140040066:	add    BYTE PTR [rax],al
   140040068:	and    al,BYTE PTR [rip+0x11993]        # 0x140051a01
   14004006e:	add    BYTE PTR [rax],al
   140040070:	cmp    al,0x97
   140040072:	add    al,0x0
	...
   14004007c:	add    eax,DWORD PTR [rax]
   14004007e:	add    BYTE PTR [rax],al
   140040080:	rex.R xchg edi,eax
   140040082:	add    al,0x0
   140040084:	and    BYTE PTR [rax],al
   140040086:	add    BYTE PTR [rax],al
   140040088:	add    BYTE PTR [rax],al
   14004008a:	add    BYTE PTR [rax],al
   14004008c:	add    DWORD PTR [rax],eax
   14004008e:	add    BYTE PTR [rax],al
   140040090:	and    al,BYTE PTR [rip+0x11993]        # 0x140051a29
   140040096:	add    BYTE PTR [rax],al
   140040098:	rex.W jl 0x14004009f
	...
   1400400a3:	add    BYTE PTR [rax+rax*1],al
   1400400a6:	add    BYTE PTR [rax],al
   1400400a8:	push   rax
   1400400a9:	jl     0x1400400af
   1400400ab:	add    BYTE PTR [rax],ah
   1400400ad:	add    BYTE PTR [rax],al
   1400400af:	add    BYTE PTR [rax],al
   1400400b1:	add    BYTE PTR [rax],al
   1400400b3:	add    BYTE PTR [rcx],al
   1400400b5:	add    BYTE PTR [rax],al
   1400400b7:	add    BYTE PTR [rdx],ah
   1400400b9:	add    eax,0x31993
   1400400be:	add    BYTE PTR [rax],al
   1400400c0:	je     0x140040059
   1400400c2:	add    al,0x0
   1400400c4:	add    DWORD PTR [rax],eax
   1400400c6:	add    BYTE PTR [rax],al
   1400400c8:	mov    WORD PTR [rdi+0x60004],ss
   1400400ce:	add    BYTE PTR [rax],al
   1400400d0:	mov    ah,0x97
   1400400d2:	add    al,0x0
   1400400d4:	sub    BYTE PTR [rax],al
   1400400d6:	add    BYTE PTR [rax],al
   1400400d8:	add    BYTE PTR [rax],al
   1400400da:	add    BYTE PTR [rax],al
   1400400dc:	add    DWORD PTR [rax],eax
   1400400de:	add    BYTE PTR [rax],al
   1400400e0:	and    al,BYTE PTR [rip+0x31993]        # 0x140071a79
   1400400e6:	add    BYTE PTR [rax],al
   1400400e8:	or     al,0x98
   1400400ea:	add    al,0x0
   1400400ec:	add    DWORD PTR [rax],eax
   1400400ee:	add    BYTE PTR [rax],al
   1400400f0:	and    al,0x98
   1400400f2:	add    al,0x0
   1400400f4:	(bad)  
   1400400f5:	add    BYTE PTR [rax],al
   1400400f7:	add    BYTE PTR [rax+rbx*4+0x4],cl
   1400400fb:	add    BYTE PTR [rax],ah
   1400400fd:	add    BYTE PTR [rax],al
   1400400ff:	add    BYTE PTR [rax],al
   140040101:	add    BYTE PTR [rax],al
   140040103:	add    BYTE PTR [rcx],al
   140040105:	add    BYTE PTR [rax],al
   140040107:	add    BYTE PTR [rdx],ah
   140040109:	add    eax,0x31993
   14004010e:	add    BYTE PTR [rax],al
   140040110:	test   al,0x98
   140040112:	add    al,0x0
   140040114:	add    DWORD PTR [rax],eax
   140040116:	add    BYTE PTR [rax],al
   140040118:	rcr    BYTE PTR [rax+0x60004],0x0
   14004011f:	add    al,ch
   140040121:	cwde   
   140040122:	add    al,0x0
   140040124:	sub    BYTE PTR [rax],al
   140040126:	add    BYTE PTR [rax],al
   140040128:	add    BYTE PTR [rax],al
   14004012a:	add    BYTE PTR [rax],al
   14004012c:	add    DWORD PTR [rax],eax
   14004012e:	add    BYTE PTR [rax],al
   140040130:	and    al,BYTE PTR [rip+0x31993]        # 0x140071ac9
   140040136:	add    BYTE PTR [rax],al
   140040138:	sub    BYTE PTR [rbx+0x4],bh
   14004013b:	add    BYTE PTR [rcx],al
   14004013d:	add    BYTE PTR [rax],al
   14004013f:	add    BYTE PTR [rax+0x7b],al
   140040142:	add    al,0x0
   140040144:	or     DWORD PTR [rax],eax
   140040146:	add    BYTE PTR [rax],al
   140040148:	push   0x2000047b
   14004014d:	add    BYTE PTR [rax],al
   14004014f:	add    BYTE PTR [rax],al
   140040151:	add    BYTE PTR [rax],al
   140040153:	add    BYTE PTR [rcx],al
   140040155:	add    BYTE PTR [rax],al
   140040157:	add    BYTE PTR [rdx],ah
   140040159:	add    eax,0x21993
   14004015e:	add    BYTE PTR [rax],al
   140040160:	cld    
   140040161:	jne    0x140040167
   140040163:	add    BYTE PTR [rcx],al
   140040165:	add    BYTE PTR [rax],al
   140040167:	add    BYTE PTR [rsi+rsi*2],cl
   14004016a:	add    al,0x0
   14004016c:	(bad)  
   14004016d:	add    BYTE PTR [rax],al
   14004016f:	add    BYTE PTR [rsi+rsi*2],dh
   140040172:	add    al,0x0
   140040174:	and    BYTE PTR [rax],al
   140040176:	add    BYTE PTR [rax],al
   140040178:	add    BYTE PTR [rax],al
   14004017a:	add    BYTE PTR [rax],al
   14004017c:	add    DWORD PTR [rax],eax
   14004017e:	add    BYTE PTR [rax],al
   140040180:	and    al,BYTE PTR [rip+0x11993]        # 0x140051b19
   140040186:	add    BYTE PTR [rax],al
   140040188:	rex.R cdq 
   14004018a:	add    al,0x0
	...
   140040194:	add    eax,DWORD PTR [rax]
   140040196:	add    BYTE PTR [rax],al
   140040198:	rex.WR cqo 
   14004019a:	add    al,0x0
   14004019c:	and    BYTE PTR [rax],al
   14004019e:	add    BYTE PTR [rax],al
   1400401a0:	add    BYTE PTR [rax],al
   1400401a2:	add    BYTE PTR [rax],al
   1400401a4:	add    DWORD PTR [rax],eax
   1400401a6:	add    BYTE PTR [rax],al
   1400401a8:	and    al,BYTE PTR [rip+0x11993]        # 0x140051b41
   1400401ae:	add    BYTE PTR [rax],al
   1400401b0:	jl     0x14004014b
   1400401b2:	add    al,0x0
	...
   1400401bc:	add    eax,DWORD PTR [rax]
   1400401be:	add    BYTE PTR [rax],al
   1400401c0:	test   BYTE PTR [rcx+0x200004],bl
   1400401c6:	add    BYTE PTR [rax],al
   1400401c8:	add    BYTE PTR [rax],al
   1400401ca:	add    BYTE PTR [rax],al
   1400401cc:	add    DWORD PTR [rax],eax
   1400401ce:	add    BYTE PTR [rax],al
   1400401d0:	and    al,BYTE PTR [rip+0x21993]        # 0x140061b69
   1400401d6:	add    BYTE PTR [rax],al
   1400401d8:	jo     0x14004024b
   1400401da:	add    al,0x0
   1400401dc:	add    DWORD PTR [rax],eax
   1400401de:	add    BYTE PTR [rax],al
   1400401e0:	xor    BYTE PTR [rcx+0x4],0x0
   1400401e4:	(bad)  
   1400401e5:	add    BYTE PTR [rax],al
   1400401e7:	add    BYTE PTR [rax+0x28000471],ch
   1400401ed:	add    BYTE PTR [rax],al
   1400401ef:	add    BYTE PTR [rax],al
   1400401f1:	add    BYTE PTR [rax],al
   1400401f3:	add    BYTE PTR [rcx],al
   1400401f5:	add    BYTE PTR [rax],al
   1400401f7:	add    BYTE PTR [rdx],ah
   1400401f9:	add    eax,0x11993
   1400401fe:	add    BYTE PTR [rax],al
   140040200:	pushf  
   140040201:	jl     0x140040207
	...
   14004020b:	add    BYTE PTR [rsi],al
   14004020d:	add    BYTE PTR [rax],al
   14004020f:	add    BYTE PTR [rsp+rdi*2+0x200004],ah
   140040216:	add    BYTE PTR [rax],al
   140040218:	add    BYTE PTR [rax],al
   14004021a:	add    BYTE PTR [rax],al
   14004021c:	add    DWORD PTR [rax],eax
   14004021e:	add    BYTE PTR [rax],al
   140040220:	and    al,BYTE PTR [rip+0x11993]        # 0x140051bb9
   140040226:	add    BYTE PTR [rax],al
   140040228:	cld    
   140040229:	jl     0x14004022f
	...
   140040233:	add    BYTE PTR [rax+rax*1],al
   140040236:	add    BYTE PTR [rax],al
   140040238:	add    al,0x7d
   14004023a:	add    al,0x0
   14004023c:	and    BYTE PTR [rax],al
   14004023e:	add    BYTE PTR [rax],al
   140040240:	add    BYTE PTR [rax],al
   140040242:	add    BYTE PTR [rax],al
   140040244:	add    DWORD PTR [rax],eax
   140040246:	add    BYTE PTR [rax],al
   140040248:	and    al,BYTE PTR [rip+0x51993]        # 0x140091be1
   14004024e:	add    BYTE PTR [rax],al
   140040250:	or     BYTE PTR [rax+0x4],ah
	...
   14004025b:	add    BYTE PTR [rax],dl
   14004025d:	add    BYTE PTR [rax],al
   14004025f:	add    BYTE PTR [rax],dh
   140040261:	(bad)  
   140040262:	add    al,0x0
   140040264:	call   0x140040270
   140040269:	add    BYTE PTR [rax],al
   14004026b:	add    BYTE PTR [rax],al
   14004026d:	add    BYTE PTR [rax],al
   14004026f:	add    BYTE PTR [rdx],ah
   140040271:	add    eax,0x41993
   140040276:	add    BYTE PTR [rax],al
   140040278:	mov    eax,0x1000466
   14004027d:	add    BYTE PTR [rax],al
   14004027f:	add    al,bl
   140040281:	data16 add al,0x0
   140040284:	or     eax,DWORD PTR [rax]
   140040286:	add    BYTE PTR [rax],al
   140040288:	add    BYTE PTR [rdi+0x4],ah
   14004028b:	add    BYTE PTR [rax],ah
   14004028d:	add    BYTE PTR [rax],al
   14004028f:	add    BYTE PTR [rax],al
   140040291:	add    BYTE PTR [rax],al
   140040293:	add    BYTE PTR [rcx],al
   140040295:	add    BYTE PTR [rax],al
   140040297:	add    BYTE PTR [rdx],ah
   140040299:	add    eax,0xd1993
   14004029e:	add    BYTE PTR [rax],al
   1400402a0:	cwde   
   1400402a1:	addr32 add al,0x0
   1400402a4:	add    DWORD PTR [rax],eax
   1400402a6:	add    BYTE PTR [rax],al
   1400402a8:	add    BYTE PTR [rax+0x4],ch
   1400402ab:	add    BYTE PTR [rax],bl
   1400402ad:	add    BYTE PTR [rax],al
   1400402af:	add    BYTE PTR [rax],ch
   1400402b1:	push   0xa80004
	...
   1400402be:	add    BYTE PTR [rax],al
   1400402c0:	and    al,BYTE PTR [rip+0x41993]        # 0x140081c59
   1400402c6:	add    BYTE PTR [rax],al
   1400402c8:	pop    rsp
   1400402c9:	imul   eax,DWORD PTR [rax+rax*1],0x0
   1400402d0:	add    BYTE PTR [rax],al
   1400402d2:	add    BYTE PTR [rax],al
   1400402d4:	or     eax,DWORD PTR [rax]
   1400402d6:	add    BYTE PTR [rax],al
   1400402d8:	jl     0x140040343
   1400402da:	add    al,0x0
   1400402dc:	and    BYTE PTR [rax],al
   1400402de:	add    BYTE PTR [rax],al
   1400402e0:	add    BYTE PTR [rax],al
   1400402e2:	add    BYTE PTR [rax],al
   1400402e4:	add    DWORD PTR [rax],eax
   1400402e6:	add    BYTE PTR [rax],al
   1400402e8:	and    al,BYTE PTR [rip+0x41993]        # 0x140081c81
   1400402ee:	add    BYTE PTR [rax],al
   1400402f0:	fs push 0x4
	...
   1400402fb:	add    BYTE PTR [rax+rax*1],cl
   1400402fe:	add    BYTE PTR [rax],al
   140040300:	test   BYTE PTR [rdx+0x4],ch
   140040303:	add    BYTE PTR [rax],ch
	...
   14004030d:	add    BYTE PTR [rax],al
   14004030f:	add    BYTE PTR [rdx],ah
   140040311:	add    eax,0x21993
   140040316:	add    BYTE PTR [rax],al
   140040318:	pushf  
   140040319:	je     0x14004031f
	...
   140040323:	add    BYTE PTR [rdi],al
   140040325:	add    BYTE PTR [rax],al
   140040327:	add    BYTE PTR [rsp+rsi*2+0x200004],ch
   14004032e:	add    BYTE PTR [rax],al
   140040330:	add    BYTE PTR [rax],al
   140040332:	add    BYTE PTR [rax],al
   140040334:	add    DWORD PTR [rax],eax
   140040336:	add    BYTE PTR [rax],al
   140040338:	and    al,BYTE PTR [rip+0x21993]        # 0x140061cd1
   14004033e:	add    BYTE PTR [rax],al
   140040340:	sbb    BYTE PTR [rbx+0x4],bl
   140040346:	add    BYTE PTR [rax],al
   140040348:	add    BYTE PTR [rax],al
   14004034a:	add    BYTE PTR [rax],al
   14004034c:	add    eax,0x28000000
   140040351:	fwait
   140040352:	add    al,0x0
   140040354:	push   rax
   140040355:	add    BYTE PTR [rax],al
   140040357:	add    BYTE PTR [rax],al
   140040359:	add    BYTE PTR [rax],al
   14004035b:	add    BYTE PTR [rcx],al
   14004035d:	add    BYTE PTR [rax],al
   14004035f:	add    BYTE PTR [rdx],ah
   140040361:	add    eax,0x21993
   140040366:	add    BYTE PTR [rax],al
   140040368:	push   0x49b
   14004036d:	add    BYTE PTR [rax],al
   14004036f:	add    BYTE PTR [rax],al
   140040371:	add    BYTE PTR [rax],al
   140040373:	add    BYTE PTR [rip+0x78000000],al        # 0x1b8040379
   140040379:	fwait
   14004037a:	add    al,0x0
   14004037c:	and    BYTE PTR [rax],al
   14004037e:	add    BYTE PTR [rax],al
   140040380:	add    BYTE PTR [rax],al
   140040382:	add    BYTE PTR [rax],al
   140040384:	add    DWORD PTR [rax],eax
   140040386:	add    BYTE PTR [rax],al
   140040388:	and    al,BYTE PTR [rip+0x21993]        # 0x140061d21
   14004038e:	add    BYTE PTR [rax],al
   140040390:	int3   
   140040391:	js     0x140040397
	...
   14004039b:	add    BYTE PTR [rax+rax*1],al
   14004039e:	add    BYTE PTR [rax],al
   1400403a0:	fdivr  QWORD PTR [rax+0x4]
   1400403a3:	add    BYTE PTR [rax],ah
   1400403a5:	add    BYTE PTR [rax],al
   1400403a7:	add    BYTE PTR [rax],al
   1400403a9:	add    BYTE PTR [rax],al
   1400403ab:	add    BYTE PTR [rcx],al
   1400403ad:	add    BYTE PTR [rax],al
   1400403af:	add    BYTE PTR [rdx],ah
   1400403b1:	add    eax,0x11993
   1400403b6:	add    BYTE PTR [rax],al
   1400403b8:	adc    BYTE PTR [rcx+0x4],bh
	...
   1400403c3:	add    BYTE PTR [rbx],al
   1400403c5:	add    BYTE PTR [rax],al
   1400403c7:	add    BYTE PTR [rax],bl
   1400403c9:	jns    0x1400403cf
   1400403cb:	add    BYTE PTR [rax],ah
   1400403cd:	add    BYTE PTR [rax],al
   1400403cf:	add    BYTE PTR [rax],al
   1400403d1:	add    BYTE PTR [rax],al
   1400403d3:	add    BYTE PTR [rcx],al
   1400403d5:	add    BYTE PTR [rax],al
   1400403d7:	add    BYTE PTR [rdx],ah
   1400403d9:	add    eax,0x11993
   1400403de:	add    BYTE PTR [rax],al
   1400403e0:	(bad)  
   1400403e1:	fwait
   1400403e2:	add    al,0x0
	...
   1400403ec:	add    eax,DWORD PTR [rax]
   1400403ee:	add    BYTE PTR [rax],al
   1400403f0:	fcomp  QWORD PTR [rbx+0x200004]
   1400403f6:	add    BYTE PTR [rax],al
   1400403f8:	add    BYTE PTR [rax],al
   1400403fa:	add    BYTE PTR [rax],al
   1400403fc:	add    DWORD PTR [rax],eax
   1400403fe:	add    BYTE PTR [rax],al
   140040400:	and    al,BYTE PTR [rip+0x21993]        # 0x140061d99
   140040406:	add    BYTE PTR [rax],al
   140040408:	or     al,0x9c
   14004040a:	add    al,0x0
	...
   140040414:	add    al,0x0
   140040416:	add    BYTE PTR [rax],al
   140040418:	sbb    al,0x9c
   14004041a:	add    al,0x0
   14004041c:	and    BYTE PTR [rax],al
   14004041e:	add    BYTE PTR [rax],al
   140040420:	add    BYTE PTR [rax],al
   140040422:	add    BYTE PTR [rax],al
   140040424:	add    DWORD PTR [rax],eax
   140040426:	add    BYTE PTR [rax],al
   140040428:	and    al,BYTE PTR [rip+0x11993]        # 0x140051dc1
   14004042e:	add    BYTE PTR [rax],al
   140040430:	test   al,0x76
   140040432:	add    al,0x0
	...
   14004043c:	(bad)  
   14004043d:	add    BYTE PTR [rax],al
   14004043f:	add    BYTE PTR [rax+0x20000476],dh
   140040445:	add    BYTE PTR [rax],al
   140040447:	add    BYTE PTR [rax],al
   140040449:	add    BYTE PTR [rax],al
   14004044b:	add    BYTE PTR [rcx],al
   14004044d:	add    BYTE PTR [rax],al
   14004044f:	add    BYTE PTR [rdx],ah
   140040451:	add    eax,0x11993
   140040456:	add    BYTE PTR [rax],al
   140040458:	or     BYTE PTR [rdi+0x4],dh
	...
   140040463:	add    BYTE PTR [rax+rax*1],al
   140040466:	add    BYTE PTR [rax],al
   140040468:	adc    BYTE PTR [rdi+0x4],dh
   14004046b:	add    BYTE PTR [rax],ah
   14004046d:	add    BYTE PTR [rax],al
   14004046f:	add    BYTE PTR [rax],al
   140040471:	add    BYTE PTR [rax],al
   140040473:	add    BYTE PTR [rcx],al
   140040475:	add    BYTE PTR [rax],al
   140040477:	add    BYTE PTR [rdx],ah
   140040479:	add    eax,0x11993
   14004047e:	add    BYTE PTR [rax],al
   140040480:	pop    rax
   140040481:	ja     0x140040487
	...
   14004048b:	add    BYTE PTR [rax+rax*1],al
   14004048e:	add    BYTE PTR [rax],al
   140040490:	(bad)  
   140040491:	ja     0x140040497
   140040493:	add    BYTE PTR [rax],ah
   140040495:	add    BYTE PTR [rax],al
   140040497:	add    BYTE PTR [rax],al
   140040499:	add    BYTE PTR [rax],al
   14004049b:	add    BYTE PTR [rcx],al
   14004049d:	add    BYTE PTR [rax],al
   14004049f:	add    BYTE PTR [rdx],ah
   1400404a1:	add    eax,0x11993
   1400404a6:	add    BYTE PTR [rax],al
   1400404a8:	push   rsp
   1400404a9:	pushf  
   1400404aa:	add    al,0x0
	...
   1400404b4:	add    eax,DWORD PTR [rax]
   1400404b6:	add    BYTE PTR [rax],al
   1400404b8:	pop    rsp
   1400404b9:	pushf  
   1400404ba:	add    al,0x0
   1400404bc:	and    BYTE PTR [rax],al
   1400404be:	add    BYTE PTR [rax],al
   1400404c0:	add    BYTE PTR [rax],al
   1400404c2:	add    BYTE PTR [rax],al
   1400404c4:	add    DWORD PTR [rax],eax
   1400404c6:	add    BYTE PTR [rax],al
   1400404c8:	and    al,BYTE PTR [rip+0x21993]        # 0x140061e61
   1400404ce:	add    BYTE PTR [rax],al
   1400404d0:	mov    WORD PTR [rsp+rax*1+0x0],ds
   1400404d7:	add    BYTE PTR [rax],al
   1400404d9:	add    BYTE PTR [rax],al
   1400404db:	add    BYTE PTR [rax+rax*1],al
   1400404de:	add    BYTE PTR [rax],al
   1400404e0:	pushf  
   1400404e1:	pushf  
   1400404e2:	add    al,0x0
   1400404e4:	and    BYTE PTR [rax],al
   1400404e6:	add    BYTE PTR [rax],al
   1400404e8:	add    BYTE PTR [rax],al
   1400404ea:	add    BYTE PTR [rax],al
   1400404ec:	add    DWORD PTR [rax],eax
   1400404ee:	add    BYTE PTR [rax],al
   1400404f0:	and    al,BYTE PTR [rip+0x11993]        # 0x140051e89
   1400404f6:	add    BYTE PTR [rax],al
   1400404f8:	fadd   DWORD PTR [rax+0x4]
   1400404fe:	add    BYTE PTR [rax],al
   140040500:	add    BYTE PTR [rax],al
   140040502:	add    BYTE PTR [rax],al
   140040504:	add    al,0x0
   140040506:	add    BYTE PTR [rax],al
   140040508:	loopne 0x14004048a
   14004050a:	add    al,0x0
   14004050c:	and    BYTE PTR [rax],al
   14004050e:	add    BYTE PTR [rax],al
   140040510:	add    BYTE PTR [rax],al
   140040512:	add    BYTE PTR [rax],al
   140040514:	add    DWORD PTR [rax],eax
   140040516:	add    BYTE PTR [rax],al
   140040518:	and    al,BYTE PTR [rip+0x11993]        # 0x140051eb1
   14004051e:	add    BYTE PTR [rax],al
   140040520:	(bad)  
   140040521:	pushf  
   140040522:	add    al,0x0
	...
   14004052c:	add    eax,DWORD PTR [rax]
   14004052e:	add    BYTE PTR [rax],al
   140040530:	fcomp  QWORD PTR [rsp+rax*1+0x2000]
   140040537:	add    BYTE PTR [rax],al
   140040539:	add    BYTE PTR [rax],al
   14004053b:	add    BYTE PTR [rcx],al
   14004053d:	add    BYTE PTR [rax],al
   14004053f:	add    BYTE PTR [rdx],ah
   140040541:	add    eax,0x11993
   140040546:	add    BYTE PTR [rax],al
   140040548:	sub    BYTE PTR [rcx+0x4],al
   14004054e:	add    BYTE PTR [rax],al
   140040550:	add    BYTE PTR [rax],al
   140040552:	add    BYTE PTR [rax],al
   140040554:	add    al,0x0
   140040556:	add    BYTE PTR [rax],al
   140040558:	xor    BYTE PTR [rcx+0x200004],al
   14004055e:	add    BYTE PTR [rax],al
   140040560:	add    BYTE PTR [rax],al
   140040562:	add    BYTE PTR [rax],al
   140040564:	add    DWORD PTR [rax],eax
   140040566:	add    BYTE PTR [rax],al
   140040568:	and    al,BYTE PTR [rip+0x31993]        # 0x140071f01
   14004056e:	add    BYTE PTR [rax],al
   140040570:	adc    BYTE PTR [rbp+0x10004],bl
   140040576:	add    BYTE PTR [rax],al
   140040578:	sub    BYTE PTR [rbp+0x60004],bl
   14004057e:	add    BYTE PTR [rax],al
   140040580:	push   rax
   140040581:	popf   
   140040582:	add    al,0x0
   140040584:	sub    BYTE PTR [rax],al
   140040586:	add    BYTE PTR [rax],al
   140040588:	add    BYTE PTR [rax],al
   14004058a:	add    BYTE PTR [rax],al
   14004058c:	add    DWORD PTR [rax],eax
   14004058e:	add    BYTE PTR [rax],al
   140040590:	and    al,BYTE PTR [rip+0x31993]        # 0x140071f29
   140040596:	add    BYTE PTR [rax],al
   140040598:	adc    al,0x7a
   14004059a:	add    al,0x0
   14004059c:	add    DWORD PTR [rax],eax
   14004059e:	add    BYTE PTR [rax],al
   1400405a0:	sub    al,0x7a
   1400405a2:	add    al,0x0
   1400405a4:	or     DWORD PTR [rax],eax
   1400405a6:	add    BYTE PTR [rax],al
   1400405a8:	push   rsp
   1400405a9:	jp     0x1400405af
   1400405ab:	add    BYTE PTR [rax],ah
   1400405ad:	add    BYTE PTR [rax],al
   1400405af:	add    BYTE PTR [rax],al
   1400405b1:	add    BYTE PTR [rax],al
   1400405b3:	add    BYTE PTR [rcx],al
   1400405b5:	add    BYTE PTR [rax],al
   1400405b7:	add    BYTE PTR [rdx],ah
   1400405b9:	add    eax,0x31993
   1400405be:	add    BYTE PTR [rax],al
   1400405c0:	lods   al,BYTE PTR ds:[rsi]
   1400405c1:	popf   
   1400405c2:	add    al,0x0
   1400405c4:	add    DWORD PTR [rax],eax
   1400405c6:	add    BYTE PTR [rax],al
   1400405c8:	(bad)  
   1400405c9:	popf   
   1400405ca:	add    al,0x0
   1400405cc:	(bad)  
   1400405cd:	add    BYTE PTR [rax],al
   1400405cf:	add    ah,ch
   1400405d1:	popf   
   1400405d2:	add    al,0x0
   1400405d4:	sub    BYTE PTR [rax],al
   1400405d6:	add    BYTE PTR [rax],al
   1400405d8:	add    BYTE PTR [rax],al
   1400405da:	add    BYTE PTR [rax],al
   1400405dc:	add    DWORD PTR [rax],eax
   1400405de:	add    BYTE PTR [rax],al
   1400405e0:	and    al,BYTE PTR [rip+0x31993]        # 0x140071f79
   1400405e6:	add    BYTE PTR [rax],al
   1400405e8:	movabs al,ds:0xb800000001000484
   1400405f1:	test   BYTE PTR [rax+rax*1],al
   1400405f4:	or     DWORD PTR [rax],eax
   1400405f6:	add    BYTE PTR [rax],al
   1400405f8:	loopne 0x14004057e
   1400405fa:	add    al,0x0
   1400405fc:	and    BYTE PTR [rax],al
   1400405fe:	add    BYTE PTR [rax],al
   140040600:	add    BYTE PTR [rax],al
   140040602:	add    BYTE PTR [rax],al
   140040604:	add    DWORD PTR [rax],eax
   140040606:	add    BYTE PTR [rax],al
   140040608:	and    al,BYTE PTR [rip+0x41993]        # 0x140081fa1
   14004060e:	add    BYTE PTR [rax],al
   140040610:	rex.W sahf 
   140040612:	add    al,0x0
	...
   14004061c:	or     BYTE PTR [rax],al
   14004061e:	add    BYTE PTR [rax],al
   140040620:	push   0x3800049e
   140040625:	add    BYTE PTR [rax],al
   140040627:	add    BYTE PTR [rax],al
   140040629:	add    BYTE PTR [rax],al
   14004062b:	add    BYTE PTR [rcx],al
   14004062d:	add    BYTE PTR [rax],al
   14004062f:	add    BYTE PTR [rdx],ah
   140040631:	add    eax,0x11993
   140040636:	add    BYTE PTR [rax],al
   140040638:	int3   
   140040639:	sahf   
   14004063a:	add    al,0x0
	...
   140040644:	add    eax,DWORD PTR [rax]
   140040646:	add    BYTE PTR [rax],al
   140040648:	(bad)  
   140040649:	sahf   
   14004064a:	add    al,0x0
   14004064c:	push   rax
   14004064d:	add    BYTE PTR [rax],al
   14004064f:	add    BYTE PTR [rax],al
   140040651:	add    BYTE PTR [rax],al
   140040653:	add    BYTE PTR [rcx],al
   140040655:	add    BYTE PTR [rax],al
   140040657:	add    BYTE PTR [rdx],ah
   140040659:	add    eax,0x11993
   14004065e:	add    BYTE PTR [rax],al
   140040660:	or     al,0x9f
   140040662:	add    al,0x0
	...
   14004066c:	add    eax,DWORD PTR [rax]
   14004066e:	add    BYTE PTR [rax],al
   140040670:	adc    al,0x9f
   140040672:	add    al,0x0
   140040674:	and    BYTE PTR [rax],al
   140040676:	add    BYTE PTR [rax],al
   140040678:	add    BYTE PTR [rax],al
   14004067a:	add    BYTE PTR [rax],al
   14004067c:	add    DWORD PTR [rax],eax
   14004067e:	add    BYTE PTR [rax],al
   140040680:	and    al,BYTE PTR [rip+0x11993]        # 0x140052019
   140040686:	add    BYTE PTR [rax],al
   140040688:	rex add DWORD PTR [rax+rax*1],0x0
   14004068d:	add    BYTE PTR [rax],al
   14004068f:	add    BYTE PTR [rax],al
   140040691:	add    BYTE PTR [rax],al
   140040693:	add    BYTE PTR [rsi],al
   140040695:	add    BYTE PTR [rax],al
   140040697:	add    BYTE PTR [rax-0x7d],cl
   14004069a:	add    al,0x0
   14004069c:	(bad)  
   14004069d:	add    BYTE PTR [rax],al
   14004069f:	add    BYTE PTR [rax],al
   1400406a1:	add    BYTE PTR [rax],al
   1400406a3:	add    BYTE PTR [rcx],al
   1400406a5:	add    BYTE PTR [rax],al
   1400406a7:	add    BYTE PTR [rdx],ah
   1400406a9:	add    eax,0x11993
   1400406ae:	add    BYTE PTR [rax],al
   1400406b0:	enter  0x49f,0x0
	...
   1400406bc:	add    eax,DWORD PTR [rax]
   1400406be:	add    BYTE PTR [rax],al
   1400406c0:	rcr    BYTE PTR [rdi+0x300004],1
   1400406c6:	add    BYTE PTR [rax],al
   1400406c8:	add    BYTE PTR [rax],al
   1400406ca:	add    BYTE PTR [rax],al
   1400406cc:	add    DWORD PTR [rax],eax
   1400406ce:	add    BYTE PTR [rax],al
   1400406d0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052069
   1400406d6:	add    BYTE PTR [rax],al
   1400406d8:	add    BYTE PTR [rax+0x4],ah
   1400406de:	add    BYTE PTR [rax],al
   1400406e0:	add    BYTE PTR [rax],al
   1400406e2:	add    BYTE PTR [rax],al
   1400406e4:	add    eax,DWORD PTR [rax]
   1400406e6:	add    BYTE PTR [rax],al
   1400406e8:	or     BYTE PTR [rax+0x200004],ah
   1400406ee:	add    BYTE PTR [rax],al
   1400406f0:	add    BYTE PTR [rax],al
   1400406f2:	add    BYTE PTR [rax],al
   1400406f4:	add    DWORD PTR [rax],eax
   1400406f6:	add    BYTE PTR [rax],al
   1400406f8:	and    al,BYTE PTR [rip+0x41993]        # 0x140082091
   1400406fe:	add    BYTE PTR [rax],al
   140040700:	lods   al,BYTE PTR ds:[rsi]
   140040701:	add    DWORD PTR [rax+rax*1],0x0
   140040705:	add    BYTE PTR [rax],al
   140040707:	add    BYTE PTR [rax],al
   140040709:	add    BYTE PTR [rax],al
   14004070b:	add    BYTE PTR [rsi],al
   14004070d:	add    BYTE PTR [rax],al
   14004070f:	add    ah,cl
   140040711:	add    DWORD PTR [rax+rax*1],0x20
   140040715:	add    BYTE PTR [rax],al
   140040717:	add    BYTE PTR [rax],al
   140040719:	add    BYTE PTR [rax],al
   14004071b:	add    BYTE PTR [rcx],al
   14004071d:	add    BYTE PTR [rax],al
   14004071f:	add    BYTE PTR [rdx],ah
   140040721:	add    eax,0x41993
   140040726:	add    BYTE PTR [rax],al
   140040728:	cmp    al,0xa0
   14004072a:	add    al,0x0
	...
   140040734:	or     DWORD PTR [rax],eax
   140040736:	add    BYTE PTR [rax],al
   140040738:	pop    rsp
   140040739:	movabs al,ds:0x400004
   140040742:	add    BYTE PTR [rax],al
   140040744:	add    DWORD PTR [rax],eax
   140040746:	add    BYTE PTR [rax],al
   140040748:	and    al,BYTE PTR [rip+0x81993]        # 0x1400c20e1
   14004074e:	add    BYTE PTR [rax],al
   140040750:	cmp    BYTE PTR [rsi+0x4],0x0
	...
   14004075c:	adc    BYTE PTR [rax],al
   14004075e:	add    BYTE PTR [rax],al
   140040760:	sar    BYTE PTR [rsi+0x4],0x0
   140040764:	and    BYTE PTR [rax],al
   140040766:	add    BYTE PTR [rax],al
   140040768:	add    BYTE PTR [rax],al
   14004076a:	add    BYTE PTR [rax],al
   14004076c:	add    DWORD PTR [rax],eax
   14004076e:	add    BYTE PTR [rax],al
   140040770:	and    al,BYTE PTR [rip+0x61993]        # 0x1400a2109
   140040776:	add    BYTE PTR [rax],al
   140040778:	jl     0x1400407f9
   14004077a:	add    al,0x0
	...
   140040784:	or     al,BYTE PTR [rax]
   140040786:	add    BYTE PTR [rax],al
   140040788:	lods   al,BYTE PTR ds:[rsi]
   140040789:	jg     0x14004078f
   14004078b:	add    BYTE PTR [rax],ah
   14004078d:	add    BYTE PTR [rax],al
   14004078f:	add    BYTE PTR [rax],al
   140040791:	add    BYTE PTR [rax],al
   140040793:	add    BYTE PTR [rcx],al
   140040795:	add    BYTE PTR [rax],al
   140040797:	add    BYTE PTR [rdx],ah
   140040799:	add    eax,0x11993
   14004079e:	add    BYTE PTR [rax],al
   1400407a0:	shl    BYTE PTR [rax+0x4],0x0
   1400407a7:	add    BYTE PTR [rax],al
   1400407a9:	add    BYTE PTR [rax],al
   1400407ab:	add    BYTE PTR [rbx],al
   1400407ad:	add    BYTE PTR [rax],al
   1400407af:	add    al,cl
   1400407b1:	movabs al,ds:0x300004
   1400407ba:	add    BYTE PTR [rax],al
   1400407bc:	add    DWORD PTR [rax],eax
   1400407be:	add    BYTE PTR [rax],al
   1400407c0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052159
   1400407c6:	add    BYTE PTR [rax],al
   1400407c8:	cld    
   1400407c9:	movabs al,ds:0x4
   1400407d2:	add    BYTE PTR [rax],al
   1400407d4:	add    eax,DWORD PTR [rax]
   1400407d6:	add    BYTE PTR [rax],al
   1400407d8:	add    al,0xa1
   1400407da:	add    al,0x0
   1400407dc:	xor    BYTE PTR [rax],al
   1400407de:	add    BYTE PTR [rax],al
   1400407e0:	add    BYTE PTR [rax],al
   1400407e2:	add    BYTE PTR [rax],al
   1400407e4:	add    DWORD PTR [rax],eax
   1400407e6:	add    BYTE PTR [rax],al
   1400407e8:	and    al,BYTE PTR [rip+0x11993]        # 0x140052181
   1400407ee:	add    BYTE PTR [rax],al
   1400407f0:	xor    al,0xa1
   1400407f2:	add    al,0x0
	...
   1400407fc:	add    eax,DWORD PTR [rax]
   1400407fe:	add    BYTE PTR [rax],al
   140040800:	cmp    al,0xa1
   140040802:	add    al,0x0
   140040804:	and    BYTE PTR [rax],al
   140040806:	add    BYTE PTR [rax],al
   140040808:	add    BYTE PTR [rax],al
   14004080a:	add    BYTE PTR [rax],al
   14004080c:	add    DWORD PTR [rax],eax
   14004080e:	add    BYTE PTR [rax],al
   140040810:	and    al,BYTE PTR [rip+0x11993]        # 0x1400521a9
   140040816:	add    BYTE PTR [rax],al
   140040818:	ins    BYTE PTR es:[rdi],dx
   140040819:	movabs eax,ds:0x4
   140040822:	add    BYTE PTR [rax],al
   140040824:	add    eax,DWORD PTR [rax]
   140040826:	add    BYTE PTR [rax],al
   140040828:	je     0x1400407cb
   14004082a:	add    al,0x0
   14004082c:	and    BYTE PTR [rax],al
   14004082e:	add    BYTE PTR [rax],al
   140040830:	add    BYTE PTR [rax],al
   140040832:	add    BYTE PTR [rax],al
   140040834:	add    DWORD PTR [rax],eax
   140040836:	add    BYTE PTR [rax],al
   140040838:	and    al,BYTE PTR [rip+0x21993]        # 0x1400621d1
   14004083e:	add    BYTE PTR [rax],al
   140040840:	pop    rsp
   140040841:	add    BYTE PTR [rax+rax*1],0x0
   140040845:	add    BYTE PTR [rax],al
   140040847:	add    BYTE PTR [rax],al
   140040849:	add    BYTE PTR [rax],al
   14004084b:	add    BYTE PTR [rax],cl
   14004084d:	add    BYTE PTR [rax],al
   14004084f:	add    BYTE PTR [rax+rax*4+0x4],ch
   140040853:	add    BYTE PTR [rax],dh
   140040855:	add    BYTE PTR [rax],al
   140040857:	add    BYTE PTR [rax],al
   140040859:	add    BYTE PTR [rax],al
   14004085b:	add    BYTE PTR [rcx],al
   14004085d:	add    BYTE PTR [rax],al
   14004085f:	add    BYTE PTR [rdx],ah
   140040861:	add    eax,0x21993
   140040866:	add    BYTE PTR [rax],al
   140040868:	lods   al,BYTE PTR ds:[rsi]
   140040869:	movabs eax,ds:0x4
   140040872:	add    BYTE PTR [rax],al
   140040874:	add    eax,0xbc000000
   140040879:	movabs eax,ds:0x200004
   140040882:	add    BYTE PTR [rax],al
   140040884:	add    DWORD PTR [rax],eax
   140040886:	add    BYTE PTR [rax],al
   140040888:	and    al,BYTE PTR [rip+0x11993]        # 0x140052221
   14004088e:	add    BYTE PTR [rax],al
   140040890:	and    al,0xa2
   140040892:	add    al,0x0
	...
   14004089c:	add    eax,DWORD PTR [rax]
   14004089e:	add    BYTE PTR [rax],al
   1400408a0:	sub    al,0xa2
   1400408a2:	add    al,0x0
   1400408a4:	xor    BYTE PTR [rax],al
   1400408a6:	add    BYTE PTR [rax],al
   1400408a8:	add    BYTE PTR [rax],al
   1400408aa:	add    BYTE PTR [rax],al
   1400408ac:	add    DWORD PTR [rax],eax
   1400408ae:	add    BYTE PTR [rax],al
   1400408b0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062249
   1400408b6:	add    BYTE PTR [rax],al
   1400408b8:	movabs al,ds:0x481
   1400408c1:	add    BYTE PTR [rax],al
   1400408c3:	add    BYTE PTR [rip+0xffffffffb0000000],al        # 0xf00408c9
   1400408c9:	add    DWORD PTR [rax+rax*1],0x20
   1400408d0:	add    BYTE PTR [rax],al
   1400408d2:	add    BYTE PTR [rax],al
   1400408d4:	add    DWORD PTR [rax],eax
   1400408d6:	add    BYTE PTR [rax],al
   1400408d8:	and    al,BYTE PTR [rip+0x11993]        # 0x140052271
   1400408de:	add    BYTE PTR [rax],al
   1400408e0:	lock add DWORD PTR [rax+rax*1],0x0
   1400408e8:	add    BYTE PTR [rax],al
   1400408ea:	add    BYTE PTR [rax],al
   1400408ec:	add    eax,DWORD PTR [rax]
   1400408ee:	add    BYTE PTR [rax],al
   1400408f0:	clc    
   1400408f1:	add    DWORD PTR [rax+rax*1],0x20
   1400408f8:	add    BYTE PTR [rax],al
   1400408fa:	add    BYTE PTR [rax],al
   1400408fc:	add    DWORD PTR [rax],eax
   1400408fe:	add    BYTE PTR [rax],al
   140040900:	and    al,BYTE PTR [rip+0x21993]        # 0x140062299
   140040906:	add    BYTE PTR [rax],al
   140040908:	test   BYTE PTR [rdx+0x4],ah
   14004090e:	add    BYTE PTR [rax],al
   140040910:	add    BYTE PTR [rax],al
   140040912:	add    BYTE PTR [rax],al
   140040914:	add    al,0x0
   140040916:	add    BYTE PTR [rax],al
   140040918:	xchg   esp,eax
   140040919:	movabs ds:0x200004,al
   140040922:	add    BYTE PTR [rax],al
   140040924:	add    DWORD PTR [rax],eax
   140040926:	add    BYTE PTR [rax],al
   140040928:	and    al,BYTE PTR [rip+0x21993]        # 0x1400622c1
   14004092e:	add    BYTE PTR [rax],al
   140040930:	push   rax
   140040931:	movabs ds:0x4,eax
   14004093a:	add    BYTE PTR [rax],al
   14004093c:	add    eax,0x60000000
   140040941:	movabs ds:0x500004,eax
   14004094a:	add    BYTE PTR [rax],al
   14004094c:	add    DWORD PTR [rax],eax
   14004094e:	add    BYTE PTR [rax],al
   140040950:	and    al,BYTE PTR [rip+0x11993]        # 0x1400522e9
   140040956:	add    BYTE PTR [rax],al
   140040958:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140040959:	movabs ds:0x4,eax
   140040962:	add    BYTE PTR [rax],al
   140040964:	add    eax,DWORD PTR [rax]
   140040966:	add    BYTE PTR [rax],al
   140040968:	lods   al,BYTE PTR ds:[rsi]
   140040969:	movabs ds:0x300004,eax
   140040972:	add    BYTE PTR [rax],al
   140040974:	add    DWORD PTR [rax],eax
   140040976:	add    BYTE PTR [rax],al
   140040978:	and    al,BYTE PTR [rip+0xd1993]        # 0x140112311
   14004097e:	add    BYTE PTR [rax],al
   140040980:	pushf  
   140040981:	xchg   BYTE PTR [rax+rax*1],al
	...
   14004098c:	sldt   WORD PTR [rax]
   14004098f:	add    BYTE PTR [rdi+rax*4],al
   140040992:	add    al,0x0
   140040994:	and    BYTE PTR [rax],al
   140040996:	add    BYTE PTR [rax],al
   140040998:	add    BYTE PTR [rax],al
   14004099a:	add    BYTE PTR [rax],al
   14004099c:	add    DWORD PTR [rax],eax
   14004099e:	add    BYTE PTR [rax],al
   1400409a0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052339
   1400409a6:	add    BYTE PTR [rax],al
   1400409a8:	lock movabs ds:0x4,eax
   1400409b2:	add    BYTE PTR [rax],al
   1400409b4:	add    eax,DWORD PTR [rax]
   1400409b6:	add    BYTE PTR [rax],al
   1400409b8:	clc    
   1400409b9:	movabs ds:0x200004,eax
   1400409c2:	add    BYTE PTR [rax],al
   1400409c4:	add    DWORD PTR [rax],eax
   1400409c6:	add    BYTE PTR [rax],al
   1400409c8:	and    al,BYTE PTR [rip+0x11993]        # 0x140052361
   1400409ce:	add    BYTE PTR [rax],al
   1400409d0:	sub    BYTE PTR [rsp+rax*1+0x0],ah
   1400409d7:	add    BYTE PTR [rax],al
   1400409d9:	add    BYTE PTR [rax],al
   1400409db:	add    BYTE PTR [rbx],al
   1400409dd:	add    BYTE PTR [rax],al
   1400409df:	add    BYTE PTR [rax],dh
   1400409e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400409e2:	add    al,0x0
   1400409e4:	and    BYTE PTR [rax],al
   1400409e6:	add    BYTE PTR [rax],al
   1400409e8:	add    BYTE PTR [rax],al
   1400409ea:	add    BYTE PTR [rax],al
   1400409ec:	add    DWORD PTR [rax],eax
   1400409ee:	add    BYTE PTR [rax],al
   1400409f0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052389
   1400409f6:	add    BYTE PTR [rax],al
   1400409f8:	mov    BYTE PTR [rbp+0x4],al
   1400409fe:	add    BYTE PTR [rax],al
   140040a00:	add    BYTE PTR [rax],al
   140040a02:	add    BYTE PTR [rax],al
   140040a04:	add    eax,0x90000000
   140040a09:	test   DWORD PTR [rax+rax*1],eax
   140040a0c:	and    BYTE PTR [rax],al
   140040a0e:	add    BYTE PTR [rax],al
   140040a10:	add    BYTE PTR [rax],al
   140040a12:	add    BYTE PTR [rax],al
   140040a14:	add    DWORD PTR [rax],eax
   140040a16:	add    BYTE PTR [rax],al
   140040a18:	and    al,BYTE PTR [rip+0x11993]        # 0x1400523b1
   140040a1e:	add    BYTE PTR [rax],al
   140040a20:	mov    BYTE PTR [rbp+0x4],bh
	...
   140040a2b:	add    BYTE PTR [rip+0xffffffff90000000],al        # 0xd0040a31
   140040a31:	jge    0x140040a37
   140040a33:	add    BYTE PTR [rax],ah
   140040a35:	add    BYTE PTR [rax],al
   140040a37:	add    BYTE PTR [rax],al
   140040a39:	add    BYTE PTR [rax],al
   140040a3b:	add    BYTE PTR [rcx],al
   140040a3d:	add    BYTE PTR [rax],al
   140040a3f:	add    BYTE PTR [rdx],ah
   140040a41:	add    eax,0x11993
   140040a46:	add    BYTE PTR [rax],al
   140040a48:	and    BYTE PTR [rsp+rax*1+0x0],0x0
   140040a50:	add    BYTE PTR [rax],al
   140040a52:	add    BYTE PTR [rax],al
   140040a54:	add    eax,DWORD PTR [rax]
   140040a56:	add    BYTE PTR [rax],al
   140040a58:	mov    BYTE PTR [rsp+rax*1+0x2000],ah
   140040a5f:	add    BYTE PTR [rax],al
   140040a61:	add    BYTE PTR [rax],al
   140040a63:	add    BYTE PTR [rcx],al
   140040a65:	add    BYTE PTR [rax],al
   140040a67:	add    BYTE PTR [rdx],ah
   140040a69:	add    eax,0x11993
   140040a6e:	add    BYTE PTR [rax],al
   140040a70:	shl    BYTE PTR [rsp+rax*1+0x0],0x0
   140040a78:	add    BYTE PTR [rax],al
   140040a7a:	add    BYTE PTR [rax],al
   140040a7c:	add    eax,DWORD PTR [rax]
   140040a7e:	add    BYTE PTR [rax],al
   140040a80:	enter  0x4a4,0x0
   140040a84:	xor    BYTE PTR [rax],al
   140040a86:	add    BYTE PTR [rax],al
   140040a88:	add    BYTE PTR [rax],al
   140040a8a:	add    BYTE PTR [rax],al
   140040a8c:	add    DWORD PTR [rax],eax
   140040a8e:	add    BYTE PTR [rax],al
   140040a90:	and    al,BYTE PTR [rip+0x11993]        # 0x140052429
   140040a96:	add    BYTE PTR [rax],al
   140040a98:	cld    
   140040a99:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140040a9a:	add    al,0x0
	...
   140040aa4:	add    eax,DWORD PTR [rax]
   140040aa6:	add    BYTE PTR [rax],al
   140040aa8:	add    al,0xa5
   140040aaa:	add    al,0x0
   140040aac:	xor    BYTE PTR [rax],al
   140040aae:	add    BYTE PTR [rax],al
   140040ab0:	add    BYTE PTR [rax],al
   140040ab2:	add    BYTE PTR [rax],al
   140040ab4:	add    DWORD PTR [rax],eax
   140040ab6:	add    BYTE PTR [rax],al
   140040ab8:	and    al,BYTE PTR [rip+0x11993]        # 0x140052451
   140040abe:	add    BYTE PTR [rax],al
   140040ac0:	cmp    BYTE PTR [rbp+0x4],ah
   140040ac6:	add    BYTE PTR [rax],al
   140040ac8:	add    BYTE PTR [rax],al
   140040aca:	add    BYTE PTR [rax],al
   140040acc:	add    eax,DWORD PTR [rax]
   140040ace:	add    BYTE PTR [rax],al
   140040ad0:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040ad2:	add    al,0x0
   140040ad4:	xor    BYTE PTR [rax],al
   140040ad6:	add    BYTE PTR [rax],al
   140040ad8:	add    BYTE PTR [rax],al
   140040ada:	add    BYTE PTR [rax],al
   140040adc:	add    DWORD PTR [rax],eax
   140040ade:	add    BYTE PTR [rax],al
   140040ae0:	and    al,BYTE PTR [rip+0x71993]        # 0x1400b2479
   140040ae6:	add    BYTE PTR [rax],al
   140040ae8:	mov    esp,0x477
   140040aed:	add    BYTE PTR [rax],al
   140040aef:	add    BYTE PTR [rax],al
   140040af1:	add    BYTE PTR [rax],al
   140040af3:	add    BYTE PTR [rcx],cl
   140040af5:	add    BYTE PTR [rax],al
   140040af7:	add    ah,dh
   140040af9:	ja     0x140040aff
   140040afb:	add    BYTE PTR [rax],ah
   140040afd:	add    BYTE PTR [rax],al
   140040aff:	add    BYTE PTR [rax],al
   140040b01:	add    BYTE PTR [rax],al
   140040b03:	add    BYTE PTR [rcx],al
   140040b05:	add    BYTE PTR [rax],al
   140040b07:	add    BYTE PTR [rdx],ah
   140040b09:	add    eax,0x11993
   140040b0e:	add    BYTE PTR [rax],al
   140040b10:	test   BYTE PTR [rbp+0x4],ah
   140040b16:	add    BYTE PTR [rax],al
   140040b18:	add    BYTE PTR [rax],al
   140040b1a:	add    BYTE PTR [rax],al
   140040b1c:	add    eax,DWORD PTR [rax]
   140040b1e:	add    BYTE PTR [rax],al
   140040b20:	mov    WORD PTR [rbp+0x200004],fs
   140040b26:	add    BYTE PTR [rax],al
   140040b28:	add    BYTE PTR [rax],al
   140040b2a:	add    BYTE PTR [rax],al
   140040b2c:	add    DWORD PTR [rax],eax
   140040b2e:	add    BYTE PTR [rax],al
   140040b30:	and    al,BYTE PTR [rip+0x11993]        # 0x1400524c9
   140040b36:	add    BYTE PTR [rax],al
   140040b38:	shl    BYTE PTR [rbp+0x4],0x0
   140040b3f:	add    BYTE PTR [rax],al
   140040b41:	add    BYTE PTR [rax],al
   140040b43:	add    BYTE PTR [rbx],al
   140040b45:	add    BYTE PTR [rax],al
   140040b47:	add    al,cl
   140040b49:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040b4a:	add    al,0x0
   140040b4c:	xor    BYTE PTR [rax],al
   140040b4e:	add    BYTE PTR [rax],al
   140040b50:	add    BYTE PTR [rax],al
   140040b52:	add    BYTE PTR [rax],al
   140040b54:	add    DWORD PTR [rax],eax
   140040b56:	add    BYTE PTR [rax],al
   140040b58:	and    al,BYTE PTR [rip+0x11993]        # 0x1400524f1
   140040b5e:	add    BYTE PTR [rax],al
   140040b60:	clc    
   140040b61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140040b62:	add    al,0x0
	...
   140040b6c:	add    eax,DWORD PTR [rax]
   140040b6e:	add    BYTE PTR [rax],al
   140040b70:	add    BYTE PTR [rsi+0x200004],ah
   140040b76:	add    BYTE PTR [rax],al
   140040b78:	add    BYTE PTR [rax],al
   140040b7a:	add    BYTE PTR [rax],al
   140040b7c:	add    DWORD PTR [rax],eax
   140040b7e:	add    BYTE PTR [rax],al
   140040b80:	and    al,BYTE PTR [rip+0x11993]        # 0x140052519
   140040b86:	add    BYTE PTR [rax],al
   140040b88:	xor    BYTE PTR [rsi+0x4],ah
   140040b8e:	add    BYTE PTR [rax],al
   140040b90:	add    BYTE PTR [rax],al
   140040b92:	add    BYTE PTR [rax],al
   140040b94:	add    eax,DWORD PTR [rax]
   140040b96:	add    BYTE PTR [rax],al
   140040b98:	cmp    BYTE PTR [rsi+0x300004],ah
   140040b9e:	add    BYTE PTR [rax],al
   140040ba0:	add    BYTE PTR [rax],al
   140040ba2:	add    BYTE PTR [rax],al
   140040ba4:	add    DWORD PTR [rax],eax
   140040ba6:	add    BYTE PTR [rax],al
   140040ba8:	and    al,BYTE PTR [rip+0x11993]        # 0x140052541
   140040bae:	add    BYTE PTR [rax],al
   140040bb0:	push   0x4a6
   140040bb5:	add    BYTE PTR [rax],al
   140040bb7:	add    BYTE PTR [rax],al
   140040bb9:	add    BYTE PTR [rax],al
   140040bbb:	add    BYTE PTR [rbx],al
   140040bbd:	add    BYTE PTR [rax],al
   140040bbf:	add    BYTE PTR [rax-0x5a],dh
   140040bc2:	add    al,0x0
   140040bc4:	and    BYTE PTR [rax],al
   140040bc6:	add    BYTE PTR [rax],al
   140040bc8:	add    BYTE PTR [rax],al
   140040bca:	add    BYTE PTR [rax],al
   140040bcc:	add    DWORD PTR [rax],eax
   140040bce:	add    BYTE PTR [rax],al
   140040bd0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052569
   140040bd6:	add    BYTE PTR [rax],al
   140040bd8:	test   al,0xa6
   140040bda:	add    al,0x0
	...
   140040be4:	add    eax,DWORD PTR [rax]
   140040be6:	add    BYTE PTR [rax],al
   140040be8:	mov    al,0xa6
   140040bea:	add    al,0x0
   140040bec:	and    BYTE PTR [rax],al
   140040bee:	add    BYTE PTR [rax],al
   140040bf0:	add    BYTE PTR [rax],al
   140040bf2:	add    BYTE PTR [rax],al
   140040bf4:	add    DWORD PTR [rax],eax
   140040bf6:	add    BYTE PTR [rax],al
   140040bf8:	and    al,BYTE PTR [rip+0x11993]        # 0x140052591
   140040bfe:	add    BYTE PTR [rax],al
   140040c00:	in     al,0xa6
   140040c02:	add    al,0x0
	...
   140040c0c:	add    eax,DWORD PTR [rax]
   140040c0e:	add    BYTE PTR [rax],al
   140040c10:	in     al,dx
   140040c11:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140040c12:	add    al,0x0
   140040c14:	and    BYTE PTR [rax],al
   140040c16:	add    BYTE PTR [rax],al
   140040c18:	add    BYTE PTR [rax],al
   140040c1a:	add    BYTE PTR [rax],al
   140040c1c:	add    DWORD PTR [rax],eax
   140040c1e:	add    BYTE PTR [rax],al
   140040c20:	and    al,BYTE PTR [rip+0x11993]        # 0x1400525b9
   140040c26:	add    BYTE PTR [rax],al
   140040c28:	and    BYTE PTR [rdi+0x4],ah
   140040c2e:	add    BYTE PTR [rax],al
   140040c30:	add    BYTE PTR [rax],al
   140040c32:	add    BYTE PTR [rax],al
   140040c34:	add    eax,DWORD PTR [rax]
   140040c36:	add    BYTE PTR [rax],al
   140040c38:	sub    BYTE PTR [rdi+0x200004],ah
   140040c3e:	add    BYTE PTR [rax],al
   140040c40:	add    BYTE PTR [rax],al
   140040c42:	add    BYTE PTR [rax],al
   140040c44:	add    DWORD PTR [rax],eax
   140040c46:	add    BYTE PTR [rax],al
   140040c48:	and    al,BYTE PTR [rip+0x11993]        # 0x1400525e1
   140040c4e:	add    BYTE PTR [rax],al
   140040c50:	pop    rax
   140040c51:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040c52:	add    al,0x0
	...
   140040c5c:	add    eax,DWORD PTR [rax]
   140040c5e:	add    BYTE PTR [rax],al
   140040c60:	(bad)  
   140040c61:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040c62:	add    al,0x0
   140040c64:	and    BYTE PTR [rax],al
   140040c66:	add    BYTE PTR [rax],al
   140040c68:	add    BYTE PTR [rax],al
   140040c6a:	add    BYTE PTR [rax],al
   140040c6c:	add    DWORD PTR [rax],eax
   140040c6e:	add    BYTE PTR [rax],al
   140040c70:	and    al,BYTE PTR [rip+0x21993]        # 0x140062609
   140040c76:	add    BYTE PTR [rax],al
   140040c78:	nop
   140040c79:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040c7a:	add    al,0x0
	...
   140040c84:	add    al,0x0
   140040c86:	add    BYTE PTR [rax],al
   140040c88:	movabs al,ds:0x200004a7
   140040c91:	add    BYTE PTR [rax],al
   140040c93:	add    BYTE PTR [rcx],al
   140040c95:	add    BYTE PTR [rax],al
   140040c97:	add    BYTE PTR [rdx],ah
   140040c99:	add    eax,0x11993
   140040c9e:	add    BYTE PTR [rax],al
   140040ca0:	fsub   DWORD PTR [rdi+0x4]
   140040ca6:	add    BYTE PTR [rax],al
   140040ca8:	add    BYTE PTR [rax],al
   140040caa:	add    BYTE PTR [rax],al
   140040cac:	add    eax,DWORD PTR [rax]
   140040cae:	add    BYTE PTR [rax],al
   140040cb0:	loopne 0x140040c59
   140040cb2:	add    al,0x0
   140040cb4:	and    BYTE PTR [rax],al
   140040cb6:	add    BYTE PTR [rax],al
   140040cb8:	add    BYTE PTR [rax],al
   140040cba:	add    BYTE PTR [rax],al
   140040cbc:	add    DWORD PTR [rax],eax
   140040cbe:	add    BYTE PTR [rax],al
   140040cc0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052659
   140040cc6:	add    BYTE PTR [rax],al
   140040cc8:	fmul   QWORD PTR [rdi+0x4]
   140040cce:	add    BYTE PTR [rax],al
   140040cd0:	add    BYTE PTR [rax],al
   140040cd2:	add    BYTE PTR [rax],al
   140040cd4:	add    al,0x0
   140040cd6:	add    BYTE PTR [rax],al
   140040cd8:	in     al,0x8f
   140040cda:	add    al,0x0
   140040cdc:	and    BYTE PTR [rax],al
   140040cde:	add    BYTE PTR [rax],al
   140040ce0:	add    BYTE PTR [rax],al
   140040ce2:	add    BYTE PTR [rax],al
   140040ce4:	add    DWORD PTR [rax],eax
   140040ce6:	add    BYTE PTR [rax],al
   140040ce8:	and    al,BYTE PTR [rip+0x31993]        # 0x140072681
   140040cee:	add    BYTE PTR [rax],al
   140040cf0:	adc    al,0xa8
   140040cf2:	add    al,0x0
   140040cf4:	add    DWORD PTR [rax],eax
   140040cf6:	add    BYTE PTR [rax],al
   140040cf8:	sub    al,0xa8
   140040cfa:	add    al,0x0
   140040cfc:	(bad)  
   140040cfd:	add    BYTE PTR [rax],al
   140040cff:	add    BYTE PTR [rax+rbp*4+0x4],dl
   140040d03:	add    BYTE PTR [rax],ch
   140040d05:	add    BYTE PTR [rax],al
   140040d07:	add    BYTE PTR [rax],al
   140040d09:	add    BYTE PTR [rax],al
   140040d0b:	add    BYTE PTR [rcx],al
   140040d0d:	add    BYTE PTR [rax],al
   140040d0f:	add    BYTE PTR [rdx],ah
   140040d11:	add    eax,0x31993
   140040d16:	add    BYTE PTR [rax],al
   140040d18:	fmul   DWORD PTR [rdx+0x10004]
   140040d1e:	add    BYTE PTR [rax],al
   140040d20:	lock mov al,BYTE PTR [rax+rax*1]
   140040d24:	or     DWORD PTR [rax],eax
   140040d26:	add    BYTE PTR [rax],al
   140040d28:	sbb    BYTE PTR [rbx+0x200004],cl
   140040d2e:	add    BYTE PTR [rax],al
   140040d30:	add    BYTE PTR [rax],al
   140040d32:	add    BYTE PTR [rax],al
   140040d34:	add    DWORD PTR [rax],eax
   140040d36:	add    BYTE PTR [rax],al
   140040d38:	and    al,BYTE PTR [rip+0x11993]        # 0x1400526d1
   140040d3e:	add    BYTE PTR [rax],al
   140040d40:	mov    ah,0xa8
   140040d42:	add    al,0x0
	...
   140040d4c:	add    eax,DWORD PTR [rax]
   140040d4e:	add    BYTE PTR [rax],al
   140040d50:	mov    esp,0x200004a8
   140040d55:	add    BYTE PTR [rax],al
   140040d57:	add    BYTE PTR [rax],al
   140040d59:	add    BYTE PTR [rax],al
   140040d5b:	add    BYTE PTR [rcx],al
   140040d5d:	add    BYTE PTR [rax],al
   140040d5f:	add    BYTE PTR [rdx],ah
   140040d61:	add    eax,0x11993
   140040d66:	add    BYTE PTR [rax],al
   140040d68:	hlt    
   140040d69:	test   al,0x4
	...
   140040d73:	add    BYTE PTR [rbx],al
   140040d75:	add    BYTE PTR [rax],al
   140040d77:	add    ah,bh
   140040d79:	test   al,0x4
   140040d7b:	add    BYTE PTR [rax],ah
   140040d7d:	add    BYTE PTR [rax],al
   140040d7f:	add    BYTE PTR [rax],al
   140040d81:	add    BYTE PTR [rax],al
   140040d83:	add    BYTE PTR [rcx],al
   140040d85:	add    BYTE PTR [rax],al
   140040d87:	add    BYTE PTR [rdx],ah
   140040d89:	add    eax,0x11993
   140040d8e:	add    BYTE PTR [rax],al
   140040d90:	rex.R test eax,0x4
   140040d96:	add    BYTE PTR [rax],al
   140040d98:	add    BYTE PTR [rax],al
   140040d9a:	add    BYTE PTR [rax],al
   140040d9c:	add    eax,DWORD PTR [rax]
   140040d9e:	add    BYTE PTR [rax],al
   140040da0:	rex.WR test rax,0x200004
   140040da6:	add    BYTE PTR [rax],al
   140040da8:	add    BYTE PTR [rax],al
   140040daa:	add    BYTE PTR [rax],al
   140040dac:	add    DWORD PTR [rax],eax
   140040dae:	add    BYTE PTR [rax],al
   140040db0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052749
   140040db6:	add    BYTE PTR [rax],al
   140040db8:	jl     0x140040d63
   140040dba:	add    al,0x0
	...
   140040dc4:	add    eax,DWORD PTR [rax]
   140040dc6:	add    BYTE PTR [rax],al
   140040dc8:	test   BYTE PTR [rcx+0x200004],ch
   140040dce:	add    BYTE PTR [rax],al
   140040dd0:	add    BYTE PTR [rax],al
   140040dd2:	add    BYTE PTR [rax],al
   140040dd4:	add    DWORD PTR [rax],eax
   140040dd6:	add    BYTE PTR [rax],al
   140040dd8:	and    al,BYTE PTR [rip+0x11993]        # 0x140052771
   140040dde:	add    BYTE PTR [rax],al
   140040de0:	and    BYTE PTR [rax+0x4],dl
   140040de6:	add    BYTE PTR [rax],al
   140040de8:	add    BYTE PTR [rax],al
   140040dea:	add    BYTE PTR [rax],al
   140040dec:	add    eax,DWORD PTR [rax]
   140040dee:	add    BYTE PTR [rax],al
   140040df0:	sub    BYTE PTR [rax+0x200004],dl
   140040df6:	add    BYTE PTR [rax],al
   140040df8:	add    BYTE PTR [rax],al
   140040dfa:	add    BYTE PTR [rax],al
   140040dfc:	add    DWORD PTR [rax],eax
   140040dfe:	add    BYTE PTR [rax],al
   140040e00:	and    al,BYTE PTR [rip+0x11993]        # 0x140052799
   140040e06:	add    BYTE PTR [rax],al
   140040e08:	mov    esp,0x4a9
   140040e0d:	add    BYTE PTR [rax],al
   140040e0f:	add    BYTE PTR [rax],al
   140040e11:	add    BYTE PTR [rax],al
   140040e13:	add    BYTE PTR [rbx],al
   140040e15:	add    BYTE PTR [rax],al
   140040e17:	add    ah,al
   140040e19:	test   eax,0x200004
   140040e1e:	add    BYTE PTR [rax],al
   140040e20:	add    BYTE PTR [rax],al
   140040e22:	add    BYTE PTR [rax],al
   140040e24:	add    DWORD PTR [rax],eax
   140040e26:	add    BYTE PTR [rax],al
   140040e28:	and    al,BYTE PTR [rip+0x11993]        # 0x1400527c1
   140040e2e:	add    BYTE PTR [rax],al
   140040e30:	cld    
   140040e31:	test   eax,0x4
   140040e36:	add    BYTE PTR [rax],al
   140040e38:	add    BYTE PTR [rax],al
   140040e3a:	add    BYTE PTR [rax],al
   140040e3c:	add    eax,DWORD PTR [rax]
   140040e3e:	add    BYTE PTR [rax],al
   140040e40:	add    al,0xaa
   140040e42:	add    al,0x0
   140040e44:	xor    BYTE PTR [rax],al
   140040e46:	add    BYTE PTR [rax],al
   140040e48:	add    BYTE PTR [rax],al
   140040e4a:	add    BYTE PTR [rax],al
   140040e4c:	add    DWORD PTR [rax],eax
   140040e4e:	add    BYTE PTR [rax],al
   140040e50:	and    al,BYTE PTR [rip+0x11993]        # 0x1400527e9
   140040e56:	add    BYTE PTR [rax],al
   140040e58:	cmp    BYTE PTR [rdx+0x4],ch
   140040e5e:	add    BYTE PTR [rax],al
   140040e60:	add    BYTE PTR [rax],al
   140040e62:	add    BYTE PTR [rax],al
   140040e64:	add    eax,DWORD PTR [rax]
   140040e66:	add    BYTE PTR [rax],al
   140040e68:	stos   BYTE PTR es:[rdi],al
   140040e6a:	add    al,0x0
   140040e6c:	and    BYTE PTR [rax],al
   140040e6e:	add    BYTE PTR [rax],al
   140040e70:	add    BYTE PTR [rax],al
   140040e72:	add    BYTE PTR [rax],al
   140040e74:	add    DWORD PTR [rax],eax
   140040e76:	add    BYTE PTR [rax],al
   140040e78:	and    al,BYTE PTR [rip+0x11993]        # 0x140052811
   140040e7e:	add    BYTE PTR [rax],al
   140040e80:	je     0x140040e2c
   140040e82:	add    al,0x0
	...
   140040e8c:	add    eax,DWORD PTR [rax]
   140040e8e:	add    BYTE PTR [rax],al
   140040e90:	jl     0x140040e3c
   140040e92:	add    al,0x0
   140040e94:	and    BYTE PTR [rax],al
   140040e96:	add    BYTE PTR [rax],al
   140040e98:	add    BYTE PTR [rax],al
   140040e9a:	add    BYTE PTR [rax],al
   140040e9c:	add    DWORD PTR [rax],eax
   140040e9e:	add    BYTE PTR [rax],al
   140040ea0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052839
   140040ea6:	add    BYTE PTR [rax],al
   140040ea8:	mov    ah,0xaa
   140040eaa:	add    al,0x0
	...
   140040eb4:	add    eax,DWORD PTR [rax]
   140040eb6:	add    BYTE PTR [rax],al
   140040eb8:	mov    esp,0x300004aa
   140040ebd:	add    BYTE PTR [rax],al
   140040ebf:	add    BYTE PTR [rax],al
   140040ec1:	add    BYTE PTR [rax],al
   140040ec3:	add    BYTE PTR [rcx],al
   140040ec5:	add    BYTE PTR [rax],al
   140040ec7:	add    BYTE PTR [rdx],ah
   140040ec9:	add    eax,0x11993
   140040ece:	add    BYTE PTR [rax],al
   140040ed0:	hlt    
   140040ed1:	stos   BYTE PTR es:[rdi],al
   140040ed2:	add    al,0x0
	...
   140040edc:	add    eax,DWORD PTR [rax]
   140040ede:	add    BYTE PTR [rax],al
   140040ee0:	cld    
   140040ee1:	stos   BYTE PTR es:[rdi],al
   140040ee2:	add    al,0x0
   140040ee4:	and    BYTE PTR [rax],al
   140040ee6:	add    BYTE PTR [rax],al
   140040ee8:	add    BYTE PTR [rax],al
   140040eea:	add    BYTE PTR [rax],al
   140040eec:	add    DWORD PTR [rax],eax
   140040eee:	add    BYTE PTR [rax],al
   140040ef0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052889
   140040ef6:	add    BYTE PTR [rax],al
   140040ef8:	(bad)  
   140040ef9:	nop
   140040efa:	add    al,0x0
	...
   140040f04:	add    eax,DWORD PTR [rax]
   140040f06:	add    BYTE PTR [rax],al
   140040f08:	push   0x70000490
   140040f0d:	add    BYTE PTR [rax],al
   140040f0f:	add    BYTE PTR [rax],al
   140040f11:	add    BYTE PTR [rax],al
   140040f13:	add    BYTE PTR [rcx],al
   140040f15:	add    BYTE PTR [rax],al
   140040f17:	add    BYTE PTR [rdx],ah
   140040f19:	add    eax,0x41993
   140040f1e:	add    BYTE PTR [rax],al
   140040f20:	mov    al,0x90
   140040f22:	add    al,0x0
	...
   140040f2c:	or     eax,DWORD PTR [rax]
   140040f2e:	add    BYTE PTR [rax],al
   140040f30:	rcl    BYTE PTR [rax+0x280004],1
   140040f36:	add    BYTE PTR [rax],al
   140040f38:	add    BYTE PTR [rax],al
   140040f3a:	add    BYTE PTR [rax],al
   140040f3c:	add    DWORD PTR [rax],eax
   140040f3e:	add    BYTE PTR [rax],al
   140040f40:	and    al,BYTE PTR [rip+0x71993]        # 0x1400b28d9
   140040f46:	add    BYTE PTR [rax],al
   140040f48:	cmp    al,0x91
   140040f4a:	add    al,0x0
	...
   140040f54:	or     DWORD PTR [rax],eax
   140040f56:	add    BYTE PTR [rax],al
   140040f58:	je     0x140040eeb
   140040f5a:	add    al,0x0
   140040f5c:	and    BYTE PTR [rax],al
   140040f5e:	add    BYTE PTR [rax],al
   140040f60:	add    BYTE PTR [rax],al
   140040f62:	add    BYTE PTR [rax],al
   140040f64:	add    DWORD PTR [rax],eax
   140040f66:	add    BYTE PTR [rax],al
   140040f68:	and    al,BYTE PTR [rip+0x11993]        # 0x140052901
   140040f6e:	add    BYTE PTR [rax],al
   140040f70:	xor    BYTE PTR [rbx+0x4],ch
   140040f76:	add    BYTE PTR [rax],al
   140040f78:	add    BYTE PTR [rax],al
   140040f7a:	add    BYTE PTR [rax],al
   140040f7c:	add    eax,DWORD PTR [rax]
   140040f7e:	add    BYTE PTR [rax],al
   140040f80:	cmp    BYTE PTR [rbx+0x200004],ch
   140040f86:	add    BYTE PTR [rax],al
   140040f88:	add    BYTE PTR [rax],al
   140040f8a:	add    BYTE PTR [rax],al
   140040f8c:	add    DWORD PTR [rax],eax
   140040f8e:	add    BYTE PTR [rax],al
   140040f90:	and    al,BYTE PTR [rip+0x11993]        # 0x140052929
   140040f96:	add    BYTE PTR [rax],al
   140040f98:	ins    BYTE PTR es:[rdi],dx
   140040f99:	stos   DWORD PTR es:[rdi],eax
   140040f9a:	add    al,0x0
	...
   140040fa4:	add    eax,DWORD PTR [rax]
   140040fa6:	add    BYTE PTR [rax],al
   140040fa8:	je     0x140040f55
   140040faa:	add    al,0x0
   140040fac:	and    BYTE PTR [rax],al
   140040fae:	add    BYTE PTR [rax],al
   140040fb0:	add    BYTE PTR [rax],al
   140040fb2:	add    BYTE PTR [rax],al
   140040fb4:	add    DWORD PTR [rax],eax
   140040fb6:	add    BYTE PTR [rax],al
   140040fb8:	and    al,BYTE PTR [rip+0x11993]        # 0x140052951
   140040fbe:	add    BYTE PTR [rax],al
   140040fc0:	test   al,0xab
   140040fc2:	add    al,0x0
	...
   140040fcc:	add    eax,DWORD PTR [rax]
   140040fce:	add    BYTE PTR [rax],al
   140040fd0:	mov    al,0xab
   140040fd2:	add    al,0x0
   140040fd4:	and    BYTE PTR [rax],al
   140040fd6:	add    BYTE PTR [rax],al
   140040fd8:	add    BYTE PTR [rax],al
   140040fda:	add    BYTE PTR [rax],al
   140040fdc:	add    DWORD PTR [rax],eax
   140040fde:	add    BYTE PTR [rax],al
   140040fe0:	and    al,BYTE PTR [rip+0x71993]        # 0x1400b2979
   140040fe6:	add    BYTE PTR [rax],al
   140040fe8:	add    al,0x8c
   140040fea:	add    al,0x0
	...
   140040ff4:	(bad)  
   140040ff5:	add    BYTE PTR [rax],al
   140040ff7:	add    BYTE PTR [rsp+rcx*4],bh
   140040ffa:	add    al,0x0
   140040ffc:	mov    BYTE PTR [rcx],al
   140040ffe:	add    BYTE PTR [rax],al
   140041000:	add    BYTE PTR [rax],al
   140041002:	add    BYTE PTR [rax],al
   140041004:	add    DWORD PTR [rax],eax
   140041006:	add    BYTE PTR [rax],al
   140041008:	and    al,BYTE PTR [rip+0x71993]        # 0x1400b29a1
   14004100e:	add    BYTE PTR [rax],al
   140041010:	add    BYTE PTR [rsp+rax*1+0x0],ch
   140041017:	add    BYTE PTR [rax],al
   140041019:	add    BYTE PTR [rax],al
   14004101b:	add    BYTE PTR [rcx],cl
   14004101d:	add    BYTE PTR [rax],al
   14004101f:	add    BYTE PTR [rax],bh
   140041021:	lods   al,BYTE PTR ds:[rsi]
   140041022:	add    al,0x0
   140041024:	and    BYTE PTR [rax],al
   140041026:	add    BYTE PTR [rax],al
   140041028:	add    BYTE PTR [rax],al
   14004102a:	add    BYTE PTR [rax],al
   14004102c:	add    DWORD PTR [rax],eax
   14004102e:	add    BYTE PTR [rax],al
   140041030:	and    al,BYTE PTR [rip+0x61993]        # 0x1400a29c9
   140041036:	add    BYTE PTR [rax],al
   140041038:	or     al,0x8d
   14004103a:	add    al,0x0
	...
   140041044:	or     DWORD PTR [rax],eax
   140041046:	add    BYTE PTR [rax],al
   140041048:	cmp    al,0x8d
   14004104a:	add    al,0x0
   14004104c:	and    BYTE PTR [rax],al
   14004104e:	add    BYTE PTR [rax],al
   140041050:	add    BYTE PTR [rax],al
   140041052:	add    BYTE PTR [rax],al
   140041054:	add    DWORD PTR [rax],eax
   140041056:	add    BYTE PTR [rax],al
   140041058:	and    al,BYTE PTR [rip+0x71993]        # 0x1400b29f1
   14004105e:	add    BYTE PTR [rax],al
   140041060:	sbb    al,0x8e
   140041062:	add    al,0x0
	...
   14004106c:	sldt   WORD PTR [rax]
   14004106f:	add    BYTE PTR [rsi+rcx*4+0x4],dl
   140041073:	add    BYTE PTR [rax],ah
   140041075:	add    BYTE PTR [rax],al
   140041077:	add    BYTE PTR [rax],al
   140041079:	add    BYTE PTR [rax],al
   14004107b:	add    BYTE PTR [rcx],al
   14004107d:	add    BYTE PTR [rax],al
   14004107f:	add    BYTE PTR [rdx],ah
   140041081:	add    eax,0x71993
   140041086:	add    BYTE PTR [rax],al
   140041088:	and    al,0x8f
   14004108a:	add    al,0x0
	...
   140041094:	or     eax,DWORD PTR [rax]
   140041096:	add    BYTE PTR [rax],al
   140041098:	pop    rsp
   140041099:	pop    QWORD PTR [rax+rax*1]
   14004109c:	and    BYTE PTR [rax],al
   14004109e:	add    BYTE PTR [rax],al
   1400410a0:	add    BYTE PTR [rax],al
   1400410a2:	add    BYTE PTR [rax],al
   1400410a4:	add    DWORD PTR [rax],eax
   1400410a6:	add    BYTE PTR [rax],al
   1400410a8:	and    al,BYTE PTR [rip+0x11993]        # 0x140052a41
   1400410ae:	add    BYTE PTR [rax],al
   1400410b0:	xchg   esp,eax
   1400410b1:	lods   al,BYTE PTR ds:[rsi]
   1400410b2:	add    al,0x0
	...
   1400410bc:	add    eax,DWORD PTR [rax]
   1400410be:	add    BYTE PTR [rax],al
   1400410c0:	pushf  
   1400410c1:	lods   al,BYTE PTR ds:[rsi]
   1400410c2:	add    al,0x0
   1400410c4:	and    BYTE PTR [rax],al
   1400410c6:	add    BYTE PTR [rax],al
   1400410c8:	add    BYTE PTR [rax],al
   1400410ca:	add    BYTE PTR [rax],al
   1400410cc:	add    DWORD PTR [rax],eax
   1400410ce:	add    BYTE PTR [rax],al
   1400410d0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052a69
   1400410d6:	add    BYTE PTR [rax],al
   1400410d8:	cwde   
   1400410d9:	lea    eax,[rax+rax*1]
	...
   1400410e4:	add    al,0x0
   1400410e6:	add    BYTE PTR [rax],al
   1400410e8:	movabs al,ds:0x2000048d
   1400410f1:	add    BYTE PTR [rax],al
   1400410f3:	add    BYTE PTR [rcx],al
   1400410f5:	add    BYTE PTR [rax],al
   1400410f7:	add    BYTE PTR [rdx],ah
   1400410f9:	add    eax,0x11993
   1400410fe:	add    BYTE PTR [rax],al
   140041100:	int3   
   140041101:	lods   al,BYTE PTR ds:[rsi]
   140041102:	add    al,0x0
	...
   14004110c:	add    eax,DWORD PTR [rax]
   14004110e:	add    BYTE PTR [rax],al
   140041110:	(bad)  
   140041111:	lods   al,BYTE PTR ds:[rsi]
   140041112:	add    al,0x0
   140041114:	and    BYTE PTR [rax],al
   140041116:	add    BYTE PTR [rax],al
   140041118:	add    BYTE PTR [rax],al
   14004111a:	add    BYTE PTR [rax],al
   14004111c:	add    DWORD PTR [rax],eax
   14004111e:	add    BYTE PTR [rax],al
   140041120:	and    al,BYTE PTR [rip+0x11993]        # 0x140052ab9
   140041126:	add    BYTE PTR [rax],al
   140041128:	(bad)  
   140041129:	jp     0x14004112f
	...
   140041133:	add    BYTE PTR [rbx],al
   140041135:	add    BYTE PTR [rax],al
   140041137:	add    ah,bl
   140041139:	jp     0x14004113f
   14004113b:	add    BYTE PTR [rax],ah
   14004113d:	add    BYTE PTR [rax],al
   14004113f:	add    BYTE PTR [rax],al
   140041141:	add    BYTE PTR [rax],al
   140041143:	add    BYTE PTR [rcx],al
   140041145:	add    BYTE PTR [rax],al
   140041147:	add    BYTE PTR [rdx],ah
   140041149:	add    eax,0x11993
   14004114e:	add    BYTE PTR [rax],al
   140041150:	sub    al,0x8a
   140041152:	add    al,0x0
	...
   14004115c:	add    al,0x0
   14004115e:	add    BYTE PTR [rax],al
   140041160:	xor    al,0x8a
   140041162:	add    al,0x0
   140041164:	xor    BYTE PTR [rax],al
   140041166:	add    BYTE PTR [rax],al
   140041168:	add    BYTE PTR [rax],al
   14004116a:	add    BYTE PTR [rax],al
   14004116c:	add    DWORD PTR [rax],eax
   14004116e:	add    BYTE PTR [rax],al
   140041170:	and    al,BYTE PTR [rip+0x21993]        # 0x140062b09
   140041176:	add    BYTE PTR [rax],al
   140041178:	sbb    BYTE PTR [rbp+0x10004],ch
   14004117e:	add    BYTE PTR [rax],al
   140041180:	sub    BYTE PTR [rbp+0x50004],ch
   140041186:	add    BYTE PTR [rax],al
   140041188:	push   rax
   140041189:	lods   eax,DWORD PTR ds:[rsi]
   14004118a:	add    al,0x0
   14004118c:	and    BYTE PTR [rax],al
   14004118e:	add    BYTE PTR [rax],al
   140041190:	add    BYTE PTR [rax],al
   140041192:	add    BYTE PTR [rax],al
   140041194:	add    DWORD PTR [rax],eax
   140041196:	add    BYTE PTR [rax],al
   140041198:	and    al,BYTE PTR [rip+0x21993]        # 0x140062b31
   14004119e:	add    BYTE PTR [rax],al
   1400411a0:	test   al,0xad
   1400411a2:	add    al,0x0
   1400411a4:	add    DWORD PTR [rax],eax
   1400411a6:	add    BYTE PTR [rax],al
   1400411a8:	mov    eax,0x50004ad
   1400411ad:	add    BYTE PTR [rax],al
   1400411af:	add    al,ah
   1400411b1:	lods   eax,DWORD PTR ds:[rsi]
   1400411b2:	add    al,0x0
   1400411b4:	sub    BYTE PTR [rax],al
   1400411b6:	add    BYTE PTR [rax],al
   1400411b8:	add    BYTE PTR [rax],al
   1400411ba:	add    BYTE PTR [rax],al
   1400411bc:	add    DWORD PTR [rax],eax
   1400411be:	add    BYTE PTR [rax],al
   1400411c0:	and    al,BYTE PTR [rip+0x21993]        # 0x140062b59
   1400411c6:	add    BYTE PTR [rax],al
   1400411c8:	sub    al,0xae
   1400411ca:	add    al,0x0
   1400411cc:	add    DWORD PTR [rax],eax
   1400411ce:	add    BYTE PTR [rax],al
   1400411d0:	cmp    al,0xae
   1400411d2:	add    al,0x0
   1400411d4:	add    al,0x0
   1400411d6:	add    BYTE PTR [rax],al
   1400411d8:	fs scas al,BYTE PTR es:[rdi]
   1400411da:	add    al,0x0
   1400411dc:	and    BYTE PTR [rax],al
   1400411de:	add    BYTE PTR [rax],al
   1400411e0:	add    BYTE PTR [rax],al
   1400411e2:	add    BYTE PTR [rax],al
   1400411e4:	add    DWORD PTR [rax],eax
   1400411e6:	add    BYTE PTR [rax],al
   1400411e8:	and    al,BYTE PTR [rip+0x21993]        # 0x140062b81
   1400411ee:	add    BYTE PTR [rax],al
   1400411f0:	mov    eax,0x10004ae
   1400411f5:	add    BYTE PTR [rax],al
   1400411f7:	add    al,cl
   1400411f9:	scas   al,BYTE PTR es:[rdi]
   1400411fa:	add    al,0x0
   1400411fc:	add    al,0x0
   1400411fe:	add    BYTE PTR [rax],al
   140041200:	lock scas al,BYTE PTR es:[rdi]
   140041202:	add    al,0x0
   140041204:	and    BYTE PTR [rax],al
   140041206:	add    BYTE PTR [rax],al
   140041208:	add    BYTE PTR [rax],al
   14004120a:	add    BYTE PTR [rax],al
   14004120c:	add    DWORD PTR [rax],eax
   14004120e:	add    BYTE PTR [rax],al
   140041210:	and    al,BYTE PTR [rip+0x21993]        # 0x140062ba9
   140041216:	add    BYTE PTR [rax],al
   140041218:	cmp    BYTE PTR [rdi+0x10004],ch
   14004121e:	add    BYTE PTR [rax],al
   140041220:	scas   rax,QWORD PTR es:[rdi]
   140041222:	add    al,0x0
   140041224:	add    eax,0x70000000
   140041229:	scas   eax,DWORD PTR es:[rdi]
   14004122a:	add    al,0x0
   14004122c:	cmp    BYTE PTR [rax],al
   14004122e:	add    BYTE PTR [rax],al
   140041230:	add    BYTE PTR [rax],al
   140041232:	add    BYTE PTR [rax],al
   140041234:	add    DWORD PTR [rax],eax
   140041236:	add    BYTE PTR [rax],al
   140041238:	and    al,BYTE PTR [rip+0x11993]        # 0x140052bd1
   14004123e:	add    BYTE PTR [rax],al
   140041240:	(bad)  
   140041241:	scas   eax,DWORD PTR es:[rdi]
   140041242:	add    al,0x0
	...
   14004124c:	add    eax,DWORD PTR [rax]
   14004124e:	add    BYTE PTR [rax],al
   140041250:	fsubr  QWORD PTR [rdi+0x200004]
   140041256:	add    BYTE PTR [rax],al
   140041258:	add    BYTE PTR [rax],al
   14004125a:	add    BYTE PTR [rax],al
   14004125c:	add    DWORD PTR [rax],eax
   14004125e:	add    BYTE PTR [rax],al
   140041260:	and    al,BYTE PTR [rip+0x21993]        # 0x140062bf9
   140041266:	add    BYTE PTR [rax],al
   140041268:	adc    al,0xb0
   14004126a:	add    al,0x0
	...
   140041274:	add    eax,0x24000000
   140041279:	mov    al,0x4
   14004127b:	add    BYTE PTR [rax],ah
   14004127d:	add    BYTE PTR [rax],al
   14004127f:	add    BYTE PTR [rax],al
   140041281:	add    BYTE PTR [rax],al
   140041283:	add    BYTE PTR [rcx],al
   140041285:	add    BYTE PTR [rax],al
   140041287:	add    BYTE PTR [rdx],ah
   140041289:	add    eax,0x31993
   14004128e:	add    BYTE PTR [rax],al
   140041290:	jl     0x140041242
   140041292:	add    al,0x0
	...
   14004129c:	or     DWORD PTR [rax],eax
   14004129e:	add    BYTE PTR [rax],al
   1400412a0:	xchg   esp,eax
   1400412a1:	mov    al,0x4
   1400412a3:	add    BYTE PTR [rax],ch
   1400412a5:	add    BYTE PTR [rax],al
   1400412a7:	add    BYTE PTR [rax],al
   1400412a9:	add    BYTE PTR [rax],al
   1400412ab:	add    BYTE PTR [rcx],al
   1400412ad:	add    BYTE PTR [rax],al
   1400412af:	add    BYTE PTR [rdx],ah
   1400412b1:	add    eax,0x41993
   1400412b6:	add    BYTE PTR [rax],al
   1400412b8:	cld    
   1400412b9:	mov    al,0x4
	...
   1400412c3:	add    BYTE PTR [rcx],cl
   1400412c5:	add    BYTE PTR [rax],al
   1400412c7:	add    BYTE PTR [rcx+rsi*4],bl
   1400412ca:	add    al,0x0
   1400412cc:	rex.W add BYTE PTR [rax],al
   1400412cf:	add    BYTE PTR [rax],al
   1400412d1:	add    BYTE PTR [rax],al
   1400412d3:	add    BYTE PTR [rcx],al
   1400412d5:	add    BYTE PTR [rax],al
   1400412d7:	add    BYTE PTR [rdx],ah
   1400412d9:	add    eax,0x11993
   1400412de:	add    BYTE PTR [rax],al
   1400412e0:	xor    BYTE PTR [rcx+0x4],0x0
   1400412e7:	add    BYTE PTR [rax],al
   1400412e9:	add    BYTE PTR [rax],al
   1400412eb:	add    BYTE PTR [rbx],al
   1400412ed:	add    BYTE PTR [rax],al
   1400412ef:	add    BYTE PTR [rax+0x280004b1],cl
   1400412f5:	add    BYTE PTR [rax],al
   1400412f7:	add    BYTE PTR [rax],al
   1400412f9:	add    BYTE PTR [rax],al
   1400412fb:	add    BYTE PTR [rcx],al
   1400412fd:	add    BYTE PTR [rax],al
   1400412ff:	add    BYTE PTR [rdx],ah
   140041301:	add    eax,0x21993
   140041306:	add    BYTE PTR [rax],al
   140041308:	mov    esp,0x4b1
   14004130d:	add    BYTE PTR [rax],al
   14004130f:	add    BYTE PTR [rax],al
   140041311:	add    BYTE PTR [rax],al
   140041313:	add    BYTE PTR [rip+0xffffffffcc000000],al        # 0x10c041319
   140041319:	mov    cl,0x4
   14004131b:	add    BYTE PTR [rax],ch
   14004131d:	add    BYTE PTR [rax],al
   14004131f:	add    BYTE PTR [rax],al
   140041321:	add    BYTE PTR [rax],al
   140041323:	add    BYTE PTR [rcx],al
   140041325:	add    BYTE PTR [rax],al
   140041327:	add    BYTE PTR [rdx],ah
   140041329:	add    eax,0x11993
   14004132e:	add    BYTE PTR [rax],al
   140041330:	and    al,0xb2
   140041332:	add    al,0x0
	...
   14004133c:	add    eax,DWORD PTR [rax]
   14004133e:	add    BYTE PTR [rax],al
   140041340:	sub    al,0xb2
   140041342:	add    al,0x0
   140041344:	and    BYTE PTR [rax],al
   140041346:	add    BYTE PTR [rax],al
   140041348:	add    BYTE PTR [rax],al
   14004134a:	add    BYTE PTR [rax],al
   14004134c:	add    DWORD PTR [rax],eax
   14004134e:	add    BYTE PTR [rax],al
   140041350:	and    al,BYTE PTR [rip+0x11993]        # 0x140052ce9
   140041356:	add    BYTE PTR [rax],al
   140041358:	pop    rsp
   140041359:	mov    dl,0x4
	...
   140041363:	add    BYTE PTR [rbx],al
   140041365:	add    BYTE PTR [rax],al
   140041367:	add    BYTE PTR [rdx+rsi*4+0x4],ah
   14004136b:	add    BYTE PTR [rax],ah
   14004136d:	add    BYTE PTR [rax],al
   14004136f:	add    BYTE PTR [rax],al
   140041371:	add    BYTE PTR [rax],al
   140041373:	add    BYTE PTR [rcx],al
   140041375:	add    BYTE PTR [rax],al
   140041377:	add    BYTE PTR [rdx],ah
   140041379:	add    eax,0x71993
   14004137e:	add    BYTE PTR [rax],al
   140041380:	(bad)  
   140041381:	mov    dl,0x4
	...
   14004138b:	add    BYTE PTR [rcx],cl
   14004138d:	add    BYTE PTR [rax],al
   14004138f:	add    BYTE PTR [rbx+rsi*4],cl
   140041392:	add    al,0x0
   140041394:	xor    BYTE PTR [rax],al
   140041396:	add    BYTE PTR [rax],al
   140041398:	add    BYTE PTR [rax],al
   14004139a:	add    BYTE PTR [rax],al
   14004139c:	add    DWORD PTR [rax],eax
   14004139e:	add    BYTE PTR [rax],al
   1400413a0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052d39
   1400413a6:	add    BYTE PTR [rax],al
   1400413a8:	jo     0x14004135d
   1400413aa:	add    al,0x0
	...
   1400413b4:	add    eax,DWORD PTR [rax]
   1400413b6:	add    BYTE PTR [rax],al
   1400413b8:	js     0x14004136d
   1400413ba:	add    al,0x0
   1400413bc:	and    BYTE PTR [rax],al
   1400413be:	add    BYTE PTR [rax],al
   1400413c0:	add    BYTE PTR [rax],al
   1400413c2:	add    BYTE PTR [rax],al
   1400413c4:	add    DWORD PTR [rax],eax
   1400413c6:	add    BYTE PTR [rax],al
   1400413c8:	and    al,BYTE PTR [rip+0x51993]        # 0x140092d61
   1400413ce:	add    BYTE PTR [rax],al
   1400413d0:	loopne 0x140041357
   1400413d2:	add    al,0x0
	...
   1400413dc:	or     al,0x0
   1400413de:	add    BYTE PTR [rax],al
   1400413e0:	or     BYTE PTR [rsi+0x500004],al
   1400413e6:	add    BYTE PTR [rax],al
   1400413e8:	add    BYTE PTR [rax],al
   1400413ea:	add    BYTE PTR [rax],al
   1400413ec:	add    DWORD PTR [rax],eax
   1400413ee:	add    BYTE PTR [rax],al
   1400413f0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052d89
   1400413f6:	add    BYTE PTR [rax],al
   1400413f8:	add    al,0xb4
   1400413fa:	add    al,0x0
	...
   140041404:	add    eax,DWORD PTR [rax]
   140041406:	add    BYTE PTR [rax],al
   140041408:	or     al,0xb4
   14004140a:	add    al,0x0
   14004140c:	sub    BYTE PTR [rax],al
   14004140e:	add    BYTE PTR [rax],al
   140041410:	add    BYTE PTR [rax],al
   140041412:	add    BYTE PTR [rax],al
   140041414:	add    DWORD PTR [rax],eax
   140041416:	add    BYTE PTR [rax],al
   140041418:	and    al,BYTE PTR [rip+0x31993]        # 0x140072db1
   14004141e:	add    BYTE PTR [rax],al
   140041420:	push   rsp
   140041421:	mov    ah,0x4
	...
   14004142b:	add    BYTE PTR [rdi],al
   14004142d:	add    BYTE PTR [rax],al
   14004142f:	add    BYTE PTR [rsp+rsi*4+0x4],ch
   140041433:	add    BYTE PTR [rax],ah
   140041435:	add    BYTE PTR [rax],al
   140041437:	add    BYTE PTR [rax],al
   140041439:	add    BYTE PTR [rax],al
   14004143b:	add    BYTE PTR [rcx],al
   14004143d:	add    BYTE PTR [rax],al
   14004143f:	add    BYTE PTR [rdx],ah
   140041441:	add    eax,0x11993
   140041446:	add    BYTE PTR [rax],al
   140041448:	mov    esp,0x4b4
   14004144d:	add    BYTE PTR [rax],al
   14004144f:	add    BYTE PTR [rax],al
   140041451:	add    BYTE PTR [rax],al
   140041453:	add    BYTE PTR [rbx],al
   140041455:	add    BYTE PTR [rax],al
   140041457:	add    ah,al
   140041459:	mov    ah,0x4
   14004145b:	add    BYTE PTR [rax],ah
   14004145d:	add    BYTE PTR [rax],al
   14004145f:	add    BYTE PTR [rax],al
   140041461:	add    BYTE PTR [rax],al
   140041463:	add    BYTE PTR [rcx],al
   140041465:	add    BYTE PTR [rax],al
   140041467:	add    BYTE PTR [rdx],ah
   140041469:	add    eax,0x11993
   14004146e:	add    BYTE PTR [rax],al
   140041470:	hlt    
   140041471:	mov    ah,0x4
	...
   14004147b:	add    BYTE PTR [rbx],al
   14004147d:	add    BYTE PTR [rax],al
   14004147f:	add    ah,bh
   140041481:	mov    ah,0x4
   140041483:	add    BYTE PTR [rax],dh
   140041485:	add    BYTE PTR [rax],al
   140041487:	add    BYTE PTR [rax],al
   140041489:	add    BYTE PTR [rax],al
   14004148b:	add    BYTE PTR [rcx],al
   14004148d:	add    BYTE PTR [rax],al
   14004148f:	add    BYTE PTR [rdx],ah
   140041491:	add    eax,0x11993
   140041496:	add    BYTE PTR [rax],al
   140041498:	test   al,0xb5
   14004149a:	add    al,0x0
	...
   1400414a4:	add    eax,DWORD PTR [rax]
   1400414a6:	add    BYTE PTR [rax],al
   1400414a8:	mov    al,0xb5
   1400414aa:	add    al,0x0
   1400414ac:	and    BYTE PTR [rax],al
   1400414ae:	add    BYTE PTR [rax],al
   1400414b0:	add    BYTE PTR [rax],al
   1400414b2:	add    BYTE PTR [rax],al
   1400414b4:	add    DWORD PTR [rax],eax
   1400414b6:	add    BYTE PTR [rax],al
   1400414b8:	and    al,BYTE PTR [rip+0x11993]        # 0x140052e51
   1400414be:	add    BYTE PTR [rax],al
   1400414c0:	call   0x14004197a
   1400414c5:	add    BYTE PTR [rax],al
   1400414c7:	add    BYTE PTR [rax],al
   1400414c9:	add    BYTE PTR [rax],al
   1400414cb:	add    BYTE PTR [rbx],al
   1400414cd:	add    BYTE PTR [rax],al
   1400414cf:	add    al,dh
   1400414d1:	mov    ch,0x4
   1400414d3:	add    BYTE PTR [rax],ah
   1400414d5:	add    BYTE PTR [rax],al
   1400414d7:	add    BYTE PTR [rax],al
   1400414d9:	add    BYTE PTR [rax],al
   1400414db:	add    BYTE PTR [rcx],al
   1400414dd:	add    BYTE PTR [rax],al
   1400414df:	add    BYTE PTR [rdx],ah
   1400414e1:	add    eax,0x11993
   1400414e6:	add    BYTE PTR [rax],al
   1400414e8:	sub    BYTE PTR [rsi+0x4],dh
   1400414ee:	add    BYTE PTR [rax],al
   1400414f0:	add    BYTE PTR [rax],al
   1400414f2:	add    BYTE PTR [rax],al
   1400414f4:	add    eax,DWORD PTR [rax]
   1400414f6:	add    BYTE PTR [rax],al
   1400414f8:	xor    BYTE PTR [rsi+0x200004],dh
   1400414fe:	add    BYTE PTR [rax],al
   140041500:	add    BYTE PTR [rax],al
   140041502:	add    BYTE PTR [rax],al
   140041504:	add    DWORD PTR [rax],eax
   140041506:	add    BYTE PTR [rax],al
   140041508:	and    al,BYTE PTR [rip+0x21993]        # 0x140062ea1
   14004150e:	add    BYTE PTR [rax],al
   140041510:	ins    BYTE PTR es:[rdi],dx
   140041511:	mov    dh,0x4
   140041513:	add    BYTE PTR [rcx],al
   140041515:	add    BYTE PTR [rax],al
   140041517:	add    BYTE PTR [rsi+rsi*4+0x4],bh
   14004151b:	add    BYTE PTR [rax+rax*1],al
   14004151e:	add    BYTE PTR [rax],al
   140041520:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041521:	mov    dh,0x4
   140041523:	add    BYTE PTR [rax],ah
   140041525:	add    BYTE PTR [rax],al
   140041527:	add    BYTE PTR [rax],al
   140041529:	add    BYTE PTR [rax],al
   14004152b:	add    BYTE PTR [rcx],al
   14004152d:	add    BYTE PTR [rax],al
   14004152f:	add    BYTE PTR [rdx],ah
   140041531:	add    eax,0x21993
   140041536:	add    BYTE PTR [rax],al
   140041538:	int3   
   140041539:	ins    DWORD PTR es:[rdi],dx
   14004153a:	add    al,0x0
   14004153c:	add    DWORD PTR [rax],eax
   14004153e:	add    BYTE PTR [rax],al
   140041540:	fsubr  QWORD PTR [rbp+0x4]
   140041543:	add    BYTE PTR [rip+0x4000000],al        # 0x144041549
   140041549:	outs   dx,BYTE PTR ds:[rsi]
   14004154a:	add    al,0x0
   14004154c:	and    BYTE PTR [rax],al
   14004154e:	add    BYTE PTR [rax],al
   140041550:	add    BYTE PTR [rax],al
   140041552:	add    BYTE PTR [rax],al
   140041554:	add    DWORD PTR [rax],eax
   140041556:	add    BYTE PTR [rax],al
   140041558:	and    al,BYTE PTR [rip+0x21993]        # 0x140062ef1
   14004155e:	add    BYTE PTR [rax],al
   140041560:	rex.W ins BYTE PTR es:[rdi],dx
   140041562:	add    al,0x0
   140041564:	add    DWORD PTR [rax],eax
   140041566:	add    BYTE PTR [rax],al
   140041568:	pop    rax
   140041569:	ins    BYTE PTR es:[rdi],dx
   14004156a:	add    al,0x0
   14004156c:	add    eax,0x80000000
   140041571:	ins    BYTE PTR es:[rdi],dx
   140041572:	add    al,0x0
   140041574:	and    BYTE PTR [rax],al
   140041576:	add    BYTE PTR [rax],al
   140041578:	add    BYTE PTR [rax],al
   14004157a:	add    BYTE PTR [rax],al
   14004157c:	add    DWORD PTR [rax],eax
   14004157e:	add    BYTE PTR [rax],al
   140041580:	and    al,BYTE PTR [rip+0x11993]        # 0x140052f19
   140041586:	add    BYTE PTR [rax],al
   140041588:	rex.WR mov dil,0x4
	...
   140041593:	add    BYTE PTR [rbx],al
   140041595:	add    BYTE PTR [rax],al
   140041597:	add    BYTE PTR [rdi+rsi*4+0x4],dl
   14004159b:	add    BYTE PTR [rax+0x0],cl
   14004159e:	add    BYTE PTR [rax],al
   1400415a0:	add    BYTE PTR [rax],al
   1400415a2:	add    BYTE PTR [rax],al
   1400415a4:	add    DWORD PTR [rax],eax
   1400415a6:	add    BYTE PTR [rax],al
   1400415a8:	and    al,BYTE PTR [rip+0x31993]        # 0x140072f41
   1400415ae:	add    BYTE PTR [rax],al
   1400415b0:	in     al,0x6c
   1400415b2:	add    al,0x0
   1400415b4:	add    DWORD PTR [rax],eax
   1400415b6:	add    BYTE PTR [rax],al
   1400415b8:	cld    
   1400415b9:	ins    BYTE PTR es:[rdi],dx
   1400415ba:	add    al,0x0
   1400415bc:	or     DWORD PTR [rax],eax
   1400415be:	add    BYTE PTR [rax],al
   1400415c0:	and    al,0x6d
   1400415c2:	add    al,0x0
   1400415c4:	sub    BYTE PTR [rax],al
	...
   1400415ce:	add    BYTE PTR [rax],al
   1400415d0:	and    al,BYTE PTR [rip+0x11993]        # 0x140052f69
   1400415d6:	add    BYTE PTR [rax],al
   1400415d8:	sbb    BYTE PTR [rbx+0x4],ch
	...
   1400415e3:	add    BYTE PTR [rbx],al
   1400415e5:	add    BYTE PTR [rax],al
   1400415e7:	add    BYTE PTR [rax],ah
   1400415e9:	imul   eax,DWORD PTR [rax+rax*1],0x20
   1400415ed:	add    BYTE PTR [rax],al
   1400415ef:	add    BYTE PTR [rax],al
   1400415f1:	add    BYTE PTR [rax],al
   1400415f3:	add    BYTE PTR [rcx],al
   1400415f5:	add    BYTE PTR [rax],al
   1400415f7:	add    BYTE PTR [rdx],ah
   1400415f9:	add    eax,0x61993
   1400415fe:	add    BYTE PTR [rax],al
   140041600:	clc    
   140041601:	(bad)  
   140041602:	add    al,0x0
	...
   14004160c:	or     eax,0x28000000
   140041611:	movsxd eax,DWORD PTR [rax+rax*1]
   140041614:	push   0x0
   140041619:	add    BYTE PTR [rax],al
   14004161b:	add    BYTE PTR [rcx],al
   14004161d:	add    BYTE PTR [rax],al
   14004161f:	add    BYTE PTR [rdx],ah
   140041621:	add    eax,0x11993
   140041626:	add    BYTE PTR [rax],al
   140041628:	sub    al,0x61
   14004162a:	add    al,0x0
	...
   140041634:	add    al,0x0
   140041636:	add    BYTE PTR [rax],al
   140041638:	xor    al,0x61
   14004163a:	add    al,0x0
   14004163c:	and    BYTE PTR [rax],al
   14004163e:	add    BYTE PTR [rax],al
   140041640:	add    BYTE PTR [rax],al
   140041642:	add    BYTE PTR [rax],al
   140041644:	add    DWORD PTR [rax],eax
   140041646:	add    BYTE PTR [rax],al
   140041648:	and    al,BYTE PTR [rip+0x11993]        # 0x140052fe1
   14004164e:	add    BYTE PTR [rax],al
   140041650:	int3   
   140041651:	mov    bh,0x4
	...
   14004165b:	add    BYTE PTR [rbx],al
   14004165d:	add    BYTE PTR [rax],al
   14004165f:	add    ah,dl
   140041661:	mov    bh,0x4
   140041663:	add    BYTE PTR [rax],ah
   140041665:	add    BYTE PTR [rax],al
   140041667:	add    BYTE PTR [rax],al
   140041669:	add    BYTE PTR [rax],al
   14004166b:	add    BYTE PTR [rcx],al
   14004166d:	add    BYTE PTR [rax],al
   14004166f:	add    BYTE PTR [rax],al
   140041671:	add    BYTE PTR [rax],al
   140041673:	add    BYTE PTR [rsi+0x56553b],ah
   140041679:	add    BYTE PTR [rax],al
   14004167b:	add    BYTE PTR [rdx],al
   14004167d:	add    BYTE PTR [rax],al
   14004167f:	add    BYTE PTR [rbx],ah
   140041681:	add    BYTE PTR [rax],al
   140041683:	add    BYTE PTR [rax-0x4ffffba7],dh
   140041689:	cmp    eax,DWORD PTR [rax+rax*1]
   14004168c:	add    BYTE PTR [rax],al
   14004168e:	add    BYTE PTR [rax],al
   140041690:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140041691:	cmp    edx,DWORD PTR [rbp+0x56]
   140041694:	add    BYTE PTR [rax],al
   140041696:	add    BYTE PTR [rax],al
   140041698:	or     eax,0x98000000
   14004169d:	add    eax,0x59e80000
   1400416a2:	add    al,0x0
   1400416a4:	call   0x140041ae4
	...
   1400416cd:	add    BYTE PTR [rax],al
   1400416cf:	add    BYTE PTR [rax+0x0],ah
	...
   140041725:	add    BYTE PTR [rax],al
   140041727:	add    BYTE PTR [rax],dl
   140041729:	loopne 0x14004172f
   14004172b:	rex add DWORD PTR [rax],eax
	...
   14004173e:	add    BYTE PTR [rax],al
   140041740:	sub    bh,dl
   140041742:	add    eax,DWORD PTR [rax+0x1]
   140041745:	add    BYTE PTR [rax],al
   140041747:	add    BYTE PTR [rax],dh
   140041749:	xlat   BYTE PTR ds:[rbx]
   14004174a:	add    eax,DWORD PTR [rax+0x1]
   14004174d:	add    BYTE PTR [rax],al
   14004174f:	add    al,bh
   140041751:	xlat   BYTE PTR ds:[rbx]
   140041752:	add    eax,DWORD PTR [rax+0x1]
   140041755:	add    BYTE PTR [rax],al
   140041757:	add    BYTE PTR [rcx+rax*1+0x0],ch
   14004175e:	add    BYTE PTR [rax],al
   140041760:	add    BYTE PTR [rip+0x0],dh        # 0x140041766
	...
   14004176e:	add    BYTE PTR [rax],al
   140041770:	xor    BYTE PTR [rbx+0x14003],ah
   140041776:	add    BYTE PTR [rax],al
   140041778:	xor    BYTE PTR [rbx+0x14003],ah
   14004177e:	add    BYTE PTR [rax],al
   140041780:	xor    BYTE PTR [rbx+0x14003],ah
   140041786:	add    BYTE PTR [rax],al
   140041788:	xor    BYTE PTR [rbx+0x14003],ah
   14004178e:	add    BYTE PTR [rax],al
   140041790:	xor    BYTE PTR [rbx+0x14003],ah
   140041796:	add    BYTE PTR [rax],al
   140041798:	xor    BYTE PTR [rbx+0x14003],ah
   14004179e:	add    BYTE PTR [rax],al
   1400417a0:	xor    BYTE PTR [rbx+0x14003],ah
   1400417a6:	add    BYTE PTR [rax],al
   1400417a8:	xor    BYTE PTR [rbx+0x14003],ah
   1400417ae:	add    BYTE PTR [rax],al
   1400417b0:	or     BYTE PTR [rcx+0x1],0x40
   1400417b4:	add    DWORD PTR [rax],eax
   1400417b6:	add    BYTE PTR [rax],al
   1400417b8:	or     BYTE PTR [rcx+0x1],0x40
   1400417bc:	add    DWORD PTR [rax],eax
   1400417be:	add    BYTE PTR [rax],al
   1400417c0:	xor    BYTE PTR [rbx+0x14003],ah
   1400417c6:	add    BYTE PTR [rax],al
   1400417c8:	xor    BYTE PTR [rbx+0x14003],ah
   1400417ce:	add    BYTE PTR [rax],al
   1400417d0:	xor    BYTE PTR [rbx+0x14003],ah
   1400417d6:	add    BYTE PTR [rax],al
   1400417d8:	xor    BYTE PTR [rbx+0x14003],ah
   1400417de:	add    BYTE PTR [rax],al
   1400417e0:	xor    BYTE PTR [rbx+0x14003],ah
   1400417e6:	add    BYTE PTR [rax],al
   1400417e8:	xor    BYTE PTR [rbx+0x14003],ah
   1400417ee:	add    BYTE PTR [rax],al
   1400417f0:	or     BYTE PTR [rcx+0x1],0x40
   1400417f4:	add    DWORD PTR [rax],eax
   1400417f6:	add    BYTE PTR [rax],al
   1400417f8:	xor    BYTE PTR [rbx+0x14003],ah
   1400417fe:	add    BYTE PTR [rax],al
   140041800:	xor    BYTE PTR [rbx+0x14003],ah
   140041806:	add    BYTE PTR [rax],al
   140041808:	xor    BYTE PTR [rbx+0x14003],ah
   14004180e:	add    BYTE PTR [rax],al
   140041810:	xor    BYTE PTR [rbx+0x14003],ah
   140041816:	add    BYTE PTR [rax],al
   140041818:	xor    BYTE PTR [rbx+0x14003],ah
   14004181e:	add    BYTE PTR [rax],al
   140041820:	xor    BYTE PTR [rbx+0x14003],ah
   140041826:	add    BYTE PTR [rax],al
   140041828:	push   rax
   140041829:	pop    rsi
   14004182a:	add    DWORD PTR [rax+0x1],eax
   14004182d:	add    BYTE PTR [rax],al
   14004182f:	add    BYTE PTR [rax],dh
   140041831:	movabs ds:0xa330000000014003,eax
   14004183a:	add    eax,DWORD PTR [rax+0x1]
	...
   140041845:	add    BYTE PTR [rax],al
   140041847:	add    BYTE PTR [rax+0x1400149],al
   14004184d:	add    BYTE PTR [rax],al
   14004184f:	add    BYTE PTR [rax],dh
   140041851:	movabs ds:0xa330000000014003,eax
   14004185a:	add    eax,DWORD PTR [rax+0x1]
   14004185d:	add    BYTE PTR [rax],al
   14004185f:	add    BYTE PTR [rax],dh
   140041861:	movabs ds:0xa330000000014003,eax
   14004186a:	add    eax,DWORD PTR [rax+0x1]
   14004186d:	add    BYTE PTR [rax],al
   14004186f:	add    BYTE PTR [rax],dh
   140041871:	movabs ds:0x4980000000014003,eax
   14004187a:	add    DWORD PTR [rax+0x1],eax
   14004187d:	add    BYTE PTR [rax],al
   14004187f:	add    BYTE PTR [rax],dh
   140041881:	movabs ds:0xa330000000014003,eax
   14004188a:	add    eax,DWORD PTR [rax+0x1]
   14004188d:	add    BYTE PTR [rax],al
   14004188f:	add    BYTE PTR [rax],dh
   140041891:	movabs ds:0xa330000000014003,eax
   14004189a:	add    eax,DWORD PTR [rax+0x1]
   14004189d:	add    BYTE PTR [rax],al
   14004189f:	add    BYTE PTR [rax],dh
   1400418a1:	movabs ds:0xa330000000014003,eax
   1400418aa:	add    eax,DWORD PTR [rax+0x1]
   1400418ad:	add    BYTE PTR [rax],al
   1400418af:	add    BYTE PTR [rax+0x1400149],al
   1400418b5:	add    BYTE PTR [rax],al
   1400418b7:	add    BYTE PTR [rax+0x1400149],al
   1400418bd:	add    BYTE PTR [rax],al
   1400418bf:	add    BYTE PTR [rax+0x1400149],al
   1400418c5:	add    BYTE PTR [rax],al
   1400418c7:	add    BYTE PTR [rax+0x1400149],al
   1400418cd:	add    BYTE PTR [rax],al
   1400418cf:	add    BYTE PTR [rax],dh
   1400418d1:	movabs ds:0xa330000000014003,eax
   1400418da:	add    eax,DWORD PTR [rax+0x1]
	...
   1400418e5:	add    al,dh
   1400418e7:	rex.XB add BYTE PTR [r8],al
   1400418ea:	add    BYTE PTR [rax],al
   1400418ec:	add    BYTE PTR [rax],al
   1400418ee:	add    BYTE PTR [rax],al
   1400418f0:	adc    DWORD PTR [rax],eax
   1400418f2:	add    BYTE PTR [rax],al
   1400418f4:	(bad)  
   1400418f5:	add    BYTE PTR [rax],al
   1400418f7:	add    BYTE PTR [rip+0x25000000],bl        # 0x1650418fd
   1400418fd:	add    BYTE PTR [rax],al
   1400418ff:	add    BYTE PTR [rcx],ch
   140041901:	add    BYTE PTR [rax],al
   140041903:	add    BYTE PTR [rip+0x43000000],dh        # 0x183041909
   140041909:	add    BYTE PTR [rax],al
   14004190b:	add    BYTE PTR [rbx+0x0],dl
   14004190e:	add    BYTE PTR [rax],al
   140041910:	add    BYTE PTR [eax],al
   140041913:	add    BYTE PTR [rbx-0x5d000000],al
   140041919:	add    BYTE PTR [rax],al
   14004191b:	add    bl,dl
   14004191d:	add    BYTE PTR [rax],al
   14004191f:	add    BYTE PTR [rcx],al
   140041921:	add    DWORD PTR [rax],eax
   140041923:	add    BYTE PTR [rbx+0x1],cl
   140041926:	add    BYTE PTR [rax],al
   140041928:	cdq    
   140041929:	add    DWORD PTR [rax],eax
   14004192b:	add    BYTE PTR [rcx],cl
   14004192d:	add    al,BYTE PTR [rax]
   14004192f:	add    BYTE PTR [rdi+0x35000002],al
   140041935:	add    eax,DWORD PTR [rax]
   140041937:	add    BYTE PTR [rdi],al
   140041939:	add    al,0x0
   14004193b:	add    BYTE PTR [rbx],cl
   14004193d:	add    eax,0x65b0000
   140041942:	add    BYTE PTR [rax],al
   140041944:	add    eax,0x1f000008
   140041949:	or     al,BYTE PTR [rax]
   14004194b:	add    BYTE PTR [rbx+0x300000c],dh
   140041951:	adc    BYTE PTR [rax],al
   140041953:	add    BYTE PTR [rdi],ch
   140041955:	adc    al,0x0
   140041957:	add    BYTE PTR [rcx+0x19],bh
   14004195a:	add    BYTE PTR [rax],al
   14004195c:	adc    DWORD PTR [rax],esp
   14004195e:	add    BYTE PTR [rax],al
   140041960:	pop    rbx
   140041961:	sub    BYTE PTR [rax],al
   140041963:	add    bh,cl
   140041965:	xor    al,BYTE PTR [rax]
   140041967:	add    BYTE PTR [rbx],bl
   140041969:	add    BYTE PTR [rax],al
   14004196c:	mov    bh,0x50
   14004196e:	add    BYTE PTR [rax],al
   140041970:	movabs eax,ds:0x5300008003000065
   140041979:	movabs eax,ds:0x10000cb350000
   140041982:	add    DWORD PTR [rax],eax
   140041984:	mov    eax,DWORD PTR [rdx+0x1]
   140041987:	add    BYTE PTR [rcx-0x6a],ah
   14004198a:	add    DWORD PTR [rax],eax
   14004198c:	sbb    eax,0x29000200
   140041991:	test   DWORD PTR [rdx],eax
   140041993:	add    bl,al
   140041995:	sub    al,0x3
   140041997:	add    BYTE PTR [rbx],al
   140041999:	add    BYTE PTR [rax+rax*1],al
   14004199c:	(bad)  
   14004199d:	or     al,BYTE PTR [rip+0x6599300]        # 0x1465daca3
   1400419a3:	add    BYTE PTR [rip+0x53000800],dl        # 0x1930421a9
   1400419a9:	adc    al,0xa
   1400419ab:	add    BYTE PTR [rbx],ah
   1400419ad:	mov    bl,0xc
   1400419af:	add    BYTE PTR [rdi],al
   1400419b1:	add    BYTE PTR [rax],dl
   1400419b3:	add    BYTE PTR [rbx+0x1f001428],dh
   1400419b9:	sbb    WORD PTR [rax],ax
   1400419bc:	adc    DWORD PTR [rax],eax
   1400419be:	and    BYTE PTR [rax],al
   1400419c0:	push   rcx
   1400419c1:	push   rcx
   1400419c2:	sub    BYTE PTR [rax],al
   1400419c4:	dec    ebx
   1400419c6:	xor    al,BYTE PTR [rax]
   1400419c8:	sldt   WORD PTR [rax+0x0]
   1400419cc:	lea    esp,[rdx-0x67feffb0]
   1400419d2:	add    BYTE PTR gs:[rcx],cl
   1400419d5:	add    BYTE PTR [rax-0x5ebadf00],al
   1400419db:	add    cl,bh
   1400419dd:	(bad)  
   1400419de:	retf   
   1400419df:	add    bh,bh
   1400419e1:	(bad)  
   1400419e2:	(bad)  
   1400419e3:	inc    DWORD PTR [rax]
	...
   1400419ed:	add    al,ah
   1400419ef:	rex.XB add BYTE PTR [r8],al
   1400419f2:	add    BYTE PTR [rdi+0x2d],bl
   1400419f5:	add    BYTE PTR [rdi],ch
	...
   1400419ff:	add    BYTE PTR [rbx+rdi*2+0x3ffab4b],ah
   140041a06:	sbb    eax,0x9fa78640
   140041a0b:	repz (bad) 
   140041a0d:	shr    BYTE PTR [rdx-0x79],cl
   140041a10:	add    al,0x4
   140041a12:	add    al,0x4
   140041a14:	add    al,0x4
   140041a16:	add    al,0x4
   140041a18:	add    al,0x0
	...
   140041a22:	add    DWORD PTR [rax],eax
   140041a24:	add    BYTE PTR [rax],al
   140041a26:	add    BYTE PTR [rax+0x10000],al
	...
   140041a34:	add    BYTE PTR [rax],al
   140041a36:	add    BYTE PTR [rax+0x0],al
   140041a39:	add    BYTE PTR [rcx],al
   140041a3b:	add    BYTE PTR [rax],al
   140041a3d:	add    BYTE PTR [rax],al
   140041a3f:	and    BYTE PTR [rax],al
   140041a41:	add    BYTE PTR [rax],al
   140041a43:	add    BYTE PTR [rax],al
   140041a45:	add    BYTE PTR [rax],al
   140041a47:	and    BYTE PTR [rax],al
   140041a49:	add    BYTE PTR [rcx],al
   140041a4b:	add    BYTE PTR [rax],al
   140041a4d:	add    BYTE PTR [rcx],al
   140041a4f:	and    BYTE PTR [rax],al
   140041a51:	add    BYTE PTR [rcx],al
   140041a53:	add    BYTE PTR [rax],al
   140041a55:	add    BYTE PTR [rcx],al
   140041a57:	add    BYTE PTR [rax],0x0
   140041a5a:	add    DWORD PTR [rax],eax
   140041a5c:	add    BYTE PTR [rax],al
   140041a5e:	add    BYTE PTR [rax],cl
   140041a60:	add    BYTE PTR [rax],al
   140041a62:	add    BYTE PTR [rax],al
   140041a64:	add    BYTE PTR [rax],al
   140041a66:	add    BYTE PTR [rax],dl
	...
   140041a80:	add    BYTE PTR [rcx],al
   140041a82:	add    al,BYTE PTR [rbx]
   140041a84:	add    eax,DWORD PTR [rbx]
   140041a86:	add    BYTE PTR [rcx],al
   140041a88:	add    al,BYTE PTR [rax]
   140041a8a:	add    DWORD PTR [rdx],eax
   140041a8c:	add    BYTE PTR [rcx],al
   140041a8e:	add    al,BYTE PTR [rax]
   140041a90:	add    DWORD PTR [rdx],eax
   140041a92:	add    BYTE PTR [rcx],al
   140041a94:	add    al,BYTE PTR [rax]
   140041a96:	add    DWORD PTR [rdx],eax
   140041a98:	add    BYTE PTR [rcx],al
   140041a9a:	add    al,BYTE PTR [rax]
   140041a9c:	add    DWORD PTR [rdx],eax
   140041a9e:	add    BYTE PTR [rcx],al
   140041aa0:	add    al,BYTE PTR [rax]
   140041aa2:	add    DWORD PTR [rdx],eax
   140041aa4:	add    BYTE PTR [rcx],al
   140041aa6:	add    al,BYTE PTR [rax]
   140041aa8:	add    DWORD PTR [rdx],eax
   140041aaa:	add    BYTE PTR [rcx],al
   140041aac:	add    al,BYTE PTR [rax]
   140041aae:	add    DWORD PTR [rdx],eax
   140041ab0:	add    BYTE PTR [rcx],al
   140041ab2:	add    al,BYTE PTR [rax]
   140041ab4:	add    DWORD PTR [rdx],eax
   140041ab6:	add    al,0x5
   140041ab8:	(bad)  
   140041ab9:	(bad)  
   140041aba:	or     BYTE PTR [rcx],cl
   140041abc:	add    BYTE PTR [rcx],al
   140041abe:	add    al,BYTE PTR [rax]
   140041ac0:	add    DWORD PTR [rdx],eax
   140041ac2:	add    BYTE PTR [rcx],al
   140041ac4:	add    al,BYTE PTR [rax]
   140041ac6:	add    DWORD PTR [rdx],eax
   140041ac8:	add    BYTE PTR [rcx],al
   140041aca:	add    al,BYTE PTR [rax]
   140041acc:	add    DWORD PTR [rdx],eax
   140041ace:	add    BYTE PTR [rcx],al
   140041ad0:	add    al,BYTE PTR [rax]
   140041ad2:	add    DWORD PTR [rdx],eax
   140041ad4:	add    BYTE PTR [rcx],al
   140041ad6:	add    al,BYTE PTR [rax]
   140041ad8:	add    DWORD PTR [rdx],eax
   140041ada:	add    BYTE PTR [rcx],al
   140041adc:	add    al,BYTE PTR [rax]
   140041ade:	add    DWORD PTR [rdx],eax
   140041ae0:	add    BYTE PTR [rcx],al
   140041ae2:	add    cl,BYTE PTR [rdx]
   140041ae4:	or     ecx,DWORD PTR [rax+rax*1]
   140041ae7:	add    DWORD PTR [rdx],eax
   140041ae9:	add    BYTE PTR [rcx],al
   140041aeb:	add    cl,BYTE PTR [rip+0x11100f0e]        # 0x1511429ff
   140041af1:	adc    dl,BYTE PTR [rax]
   140041af3:	adc    DWORD PTR [rdx],edx
   140041af5:	add    BYTE PTR [rax],al
   140041af7:	add    BYTE PTR [rbp+0x54],al
   140041afa:	push   rdi
   140041afb:	xor    BYTE PTR [rax],dl
   140041afd:	add    BYTE PTR [rax],al
   140041aff:	add    DWORD PTR [rsi+0x2b88040e],eax
   140041b05:	add    eax,0xb03bb8a
   140041b0a:	add    eax,0x2
   140041b0f:	add    BYTE PTR [rax],al
   140041b11:	and    BYTE PTR [rax],al
   140041b13:	add    BYTE PTR [rax],ah
   140041b15:	add    BYTE PTR [rax],al
   140041b17:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140041b1c:	imul   esi,DWORD PTR [rcx+rdi*2+0x53],0x70706f74
   140041b24:	gs fs rex.B jne 0x140041b9d
   140041b29:	outs   dx,DWORD PTR ds:[rsi]
   140041b2a:	ins    DWORD PTR es:[rdi],dx
   140041b2b:	(bad)  
   140041b2c:	je     0x140041b97
   140041b2e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140041b31:	ins    BYTE PTR es:[rdi],dx
   140041b32:	jns    0x140041b34
   140041b34:	add    ecx,DWORD PTR [rbx]
   140041b36:	add    eax,0x0
   140041b3b:	add    BYTE PTR [rax],al
   140041b3d:	and    BYTE PTR [rax],al
   140041b3f:	add    BYTE PTR [rcx+rax*1],bl
   140041b42:	add    BYTE PTR [rcx+0x63],al
   140041b45:	je     0x140041bb0
   140041b47:	jbe    0x140041bb2
   140041b49:	je     0x140041bc4
   140041b4b:	rex.RB jb 0x140041bc0
   140041b4e:	outs   dx,DWORD PTR ds:[rsi]
   140041b4f:	jb     0x140041b51
   140041b51:	ja     0x140041bbc
   140041b53:	ins    BYTE PTR es:[rdi],dx
   140041b54:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140041b59:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72681198
   140041b61:	gs jae 0x140041bd9
   140041b64:	ins    BYTE PTR es:[rdi],dx
   140041b65:	je     0x140041b67
   140041b67:	or     BYTE PTR [rsi+0x69],ah
   140041b6a:	ins    BYTE PTR es:[rdi],dx
   140041b6b:	gs rex.WRX (bad) 
   140041b6e:	ins    DWORD PTR es:[rdi],dx
   140041b6f:	add    BYTE PTR gs:[rdx],al
   140041b72:	ins    BYTE PTR es:[rdi],dx
   140041b73:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140041b7a:	gs jb  0x140041b7d
   140041b7d:	or     BYTE PTR [rbp+0x6f],ch
   140041b80:	fs jne 0x140041bef
   140041b83:	add    BYTE PTR gs:[rdx],al
   140041b86:	data16 (bad) 
   140041b88:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   140041b90:	add    BYTE PTR gs:[rax],cl
   140041b93:	ins    DWORD PTR es:[rdi],dx
   140041b94:	gs jae 0x140041c0a
   140041b97:	(bad)  
   140041b98:	add    BYTE PTR gs:[ecx],al
   140041b9c:	je     0x140041c06
   140041b9e:	jb     0x140041c05
   140041ba0:	(bad)  
   140041ba1:	fs rex.WB
   140041ba3:	add    BYTE PTR fs:[rax],cl
   140041ba6:	movsxd esp,DWORD PTR [rcx+0x6c]
   140041ba9:	ins    BYTE PTR es:[rdi],dx
   140041baa:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041bac:	outs   dx,BYTE PTR ds:[rsi]
   140041bad:	je     0x140041c14
   140041baf:	js     0x140041c25
   140041bb1:	add    BYTE PTR [rdx],al
   140041bb3:	outs   dx,DWORD PTR ds:[rsi]
   140041bb4:	jb     0x140041c1f
   140041bb6:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140041bbe:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041bc0:	outs   dx,BYTE PTR ds:[rsi]
   140041bc1:	je     0x140041c28
   140041bc3:	js     0x140041c39
   140041bc5:	rex.WB
   140041bc6:	add    BYTE PTR fs:[rax],cl
   140041bc9:	outs   dx,DWORD PTR ds:[rsi]
   140041bca:	jb     0x140041c35
   140041bcc:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140041bd4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041bd6:	outs   dx,BYTE PTR ds:[rsi]
   140041bd7:	je     0x140041c3e
   140041bd9:	js     0x140041c4f
   140041bdb:	rex.WRX (bad) 
   140041bdd:	ins    DWORD PTR es:[rdi],dx
   140041bde:	add    BYTE PTR gs:[rdx],al
   140041be1:	outs   dx,DWORD PTR ds:[rsi]
   140041be2:	jb     0x140041c4d
   140041be4:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140041bec:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041bee:	outs   dx,BYTE PTR ds:[rsi]
   140041bef:	je     0x140041c56
   140041bf1:	js     0x140041c67
   140041bf3:	rex.WRB
   140041bf4:	gs jae 0x140041c6a
   140041bf7:	(bad)  
   140041bf8:	add    BYTE PTR gs:[ecx],al
   140041bfc:	movsxd esi,DWORD PTR [rbp+0x72]
   140041bff:	jb     0x140041c66
   140041c01:	outs   dx,BYTE PTR ds:[rsi]
   140041c02:	je     0x140041c47
   140041c04:	outs   dx,DWORD PTR ds:[rsi]
   140041c05:	outs   dx,BYTE PTR ds:[rsi]
   140041c06:	je     0x140041c6d
   140041c08:	js     0x140041c7e
   140041c0a:	rex.WB
   140041c0b:	add    BYTE PTR fs:[rax],cl
   140041c0e:	movsxd esi,DWORD PTR [rbp+0x72]
   140041c11:	jb     0x140041c78
   140041c13:	outs   dx,BYTE PTR ds:[rsi]
   140041c14:	je     0x140041c59
   140041c16:	outs   dx,DWORD PTR ds:[rsi]
   140041c17:	outs   dx,BYTE PTR ds:[rsi]
   140041c18:	je     0x140041c7f
   140041c1a:	js     0x140041c90
   140041c1c:	rex.WRX (bad) 
   140041c1e:	ins    DWORD PTR es:[rdi],dx
   140041c1f:	add    BYTE PTR gs:[rdx],al
   140041c22:	movsxd esi,DWORD PTR [rbp+0x72]
   140041c25:	jb     0x140041c8c
   140041c27:	outs   dx,BYTE PTR ds:[rsi]
   140041c28:	je     0x140041c6d
   140041c2a:	outs   dx,DWORD PTR ds:[rsi]
   140041c2b:	outs   dx,BYTE PTR ds:[rsi]
   140041c2c:	je     0x140041c93
   140041c2e:	js     0x140041ca4
   140041c30:	rex.WRB
   140041c31:	gs jae 0x140041ca7
   140041c34:	(bad)  
   140041c35:	add    BYTE PTR gs:[ecx],al
   140041c39:	data16 (bad) 
   140041c3b:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x644965
   140041c43:	or     BYTE PTR [rsi+0x61],ah
   140041c46:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x756f4365
   140041c4e:	outs   dx,BYTE PTR ds:[rsi]
   140041c4f:	je     0x140041c51
   140041c51:	or     BYTE PTR [rsi+0x75],ah
   140041c54:	outs   dx,BYTE PTR ds:[rsi]
   140041c55:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140041c59:	outs   dx,BYTE PTR ds:[rsi]
   140041c5a:	add    BYTE PTR [rdx],al
   140041c5c:	add    ecx,DWORD PTR [rbx]
   140041c5e:	add    eax,0x0
   140041c63:	add    BYTE PTR [rax],al
   140041c65:	and    BYTE PTR [rax],al
   140041c67:	add    cl,bh
   140041c69:	add    BYTE PTR [rax],al
   140041c6b:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140041c70:	imul   esi,DWORD PTR [rcx+rdi*2+0x45],0x726f7272
   140041c78:	add    BYTE PTR [rdi+0x69],dh
   140041c7b:	ins    BYTE PTR es:[rdi],dx
   140041c7c:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140041c81:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680e98
   140041c89:	gs jae 0x140041d01
   140041c8c:	ins    BYTE PTR es:[rdi],dx
   140041c8d:	je     0x140041c8f
   140041c8f:	or     BYTE PTR [rsi+0x69],ah
   140041c92:	ins    BYTE PTR es:[rdi],dx
   140041c93:	gs rex.WRX (bad) 
   140041c96:	ins    DWORD PTR es:[rdi],dx
   140041c97:	add    BYTE PTR gs:[rdx],al
   140041c9a:	ins    BYTE PTR es:[rdi],dx
   140041c9b:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140041ca2:	gs jb  0x140041ca5
   140041ca5:	or     BYTE PTR [rbp+0x6f],ch
   140041ca8:	fs jne 0x140041d17
   140041cab:	add    BYTE PTR gs:[rdx],al
   140041cae:	data16 (bad) 
   140041cb0:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   140041cb8:	add    BYTE PTR gs:[rax],cl
   140041cbb:	ins    DWORD PTR es:[rdi],dx
   140041cbc:	gs jae 0x140041d32
   140041cbf:	(bad)  
   140041cc0:	add    BYTE PTR gs:[ecx],al
   140041cc4:	je     0x140041d2e
   140041cc6:	jb     0x140041d2d
   140041cc8:	(bad)  
   140041cc9:	fs rex.WB
   140041ccb:	add    BYTE PTR fs:[rax],cl
   140041cce:	movsxd esp,DWORD PTR [rcx+0x6c]
   140041cd1:	ins    BYTE PTR es:[rdi],dx
   140041cd2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041cd4:	outs   dx,BYTE PTR ds:[rsi]
   140041cd5:	je     0x140041d3c
   140041cd7:	js     0x140041d4d
   140041cd9:	add    BYTE PTR [rdx],al
   140041cdb:	outs   dx,DWORD PTR ds:[rsi]
   140041cdc:	jb     0x140041d47
   140041cde:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140041ce6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041ce8:	outs   dx,BYTE PTR ds:[rsi]
   140041ce9:	je     0x140041d50
   140041ceb:	js     0x140041d61
   140041ced:	rex.WB
   140041cee:	add    BYTE PTR fs:[rax],cl
   140041cf1:	outs   dx,DWORD PTR ds:[rsi]
   140041cf2:	jb     0x140041d5d
   140041cf4:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140041cfc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041cfe:	outs   dx,BYTE PTR ds:[rsi]
   140041cff:	je     0x140041d66
   140041d01:	js     0x140041d77
   140041d03:	rex.WRX (bad) 
   140041d05:	ins    DWORD PTR es:[rdi],dx
   140041d06:	add    BYTE PTR gs:[rdx],al
   140041d09:	outs   dx,DWORD PTR ds:[rsi]
   140041d0a:	jb     0x140041d75
   140041d0c:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140041d14:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041d16:	outs   dx,BYTE PTR ds:[rsi]
   140041d17:	je     0x140041d7e
   140041d19:	js     0x140041d8f
   140041d1b:	rex.WRB
   140041d1c:	gs jae 0x140041d92
   140041d1f:	(bad)  
   140041d20:	add    BYTE PTR gs:[ecx],al
   140041d24:	movsxd esi,DWORD PTR [rbp+0x72]
   140041d27:	jb     0x140041d8e
   140041d29:	outs   dx,BYTE PTR ds:[rsi]
   140041d2a:	je     0x140041d6f
   140041d2c:	outs   dx,DWORD PTR ds:[rsi]
   140041d2d:	outs   dx,BYTE PTR ds:[rsi]
   140041d2e:	je     0x140041d95
   140041d30:	js     0x140041da6
   140041d32:	rex.WB
   140041d33:	add    BYTE PTR fs:[rax],cl
   140041d36:	movsxd esi,DWORD PTR [rbp+0x72]
   140041d39:	jb     0x140041da0
   140041d3b:	outs   dx,BYTE PTR ds:[rsi]
   140041d3c:	je     0x140041d81
   140041d3e:	outs   dx,DWORD PTR ds:[rsi]
   140041d3f:	outs   dx,BYTE PTR ds:[rsi]
   140041d40:	je     0x140041da7
   140041d42:	js     0x140041db8
   140041d44:	rex.WRX (bad) 
   140041d46:	ins    DWORD PTR es:[rdi],dx
   140041d47:	add    BYTE PTR gs:[rdx],al
   140041d4a:	movsxd esi,DWORD PTR [rbp+0x72]
   140041d4d:	jb     0x140041db4
   140041d4f:	outs   dx,BYTE PTR ds:[rsi]
   140041d50:	je     0x140041d95
   140041d52:	outs   dx,DWORD PTR ds:[rsi]
   140041d53:	outs   dx,BYTE PTR ds:[rsi]
   140041d54:	je     0x140041dbb
   140041d56:	js     0x140041dcc
   140041d58:	rex.WRB
   140041d59:	gs jae 0x140041dcf
   140041d5c:	(bad)  
   140041d5d:	add    BYTE PTR gs:[ecx],al
   140041d61:	add    ecx,DWORD PTR [rbx]
   140041d63:	add    eax,0x0
   140041d68:	add    BYTE PTR [rax],al
   140041d6a:	add    BYTE PTR [rax],al
   140041d6c:	add    BYTE PTR [rip+0x63410000],bh        # 0x1a3451d72
   140041d72:	je     0x140041ddd
   140041d74:	jbe    0x140041ddf
   140041d76:	je     0x140041df1
   140041d78:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140041d7a:	je     0x140041de1
   140041d7c:	jb     0x140041deb
   140041d7e:	gs imul esp,DWORD PTR fs:[rcx+0x74],0x6f745365
   140041d87:	jo     0x140041d89
   140041d89:	ja     0x140041df4
   140041d8b:	ins    BYTE PTR es:[rdi],dx
   140041d8c:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140041d91:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680298
   140041d99:	gs jae 0x140041e11
   140041d9c:	ins    BYTE PTR es:[rdi],dx
   140041d9d:	je     0x140041d9f
   140041d9f:	or     BYTE PTR [rax+rbp*2+0x72],dh
   140041da3:	gs (bad) 
   140041da5:	fs rex.WB
   140041da7:	add    BYTE PTR fs:[rax],cl
   140041daa:	add    ecx,DWORD PTR [rbx]
   140041dac:	add    eax,0x2
   140041db1:	add    BYTE PTR [rax],al
   140041db3:	and    BYTE PTR [rax],al
   140041db5:	add    BYTE PTR [rbp+0x61540000],bh
   140041dbb:	(bad)  
   140041dbc:	push   rsp
   140041dbd:	imul   esi,DWORD PTR [rax+0x49],0x6974696e
   140041dc4:	(bad)  
   140041dc5:	ins    BYTE PTR es:[rdi],dx
   140041dc6:	imul   edi,DWORD PTR [rdx+0x65],0x75636553
   140041dcd:	jb     0x140041e38
   140041dcf:	je     0x140041e4a
   140041dd1:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140041dd6:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x416c6977
   140041dde:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140041de2:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680298
   140041dea:	gs jae 0x140041e62
   140041ded:	ins    BYTE PTR es:[rdi],dx
   140041dee:	je     0x140041df0
   140041df0:	or     BYTE PTR [rax+rbp*2+0x72],dh
   140041df4:	gs (bad) 
   140041df6:	fs rex.WB
   140041df8:	add    BYTE PTR fs:[rax],cl
   140041dfb:	gs imul esi,DWORD PTR fs:[rcx+rcx*2+0x64],0x73690f00
   140041e05:	push   rbx
   140041e06:	(bad)  
   140041e07:	data16 rex.WRB outs dx,DWORD PTR gs:[rsi]
   140041e0b:	fs add BYTE PTR gs:[rbx+rax*1+0x65527369],al
   140041e14:	jae    0x140041e63
   140041e16:	outs   dx,DWORD PTR ds:[rsi]
   140041e17:	fs add BYTE PTR gs:[rbx+rax*1+0x79537369],al
   140041e20:	jae    0x140041e96
   140041e22:	gs ins DWORD PTR es:[rdi],dx
   140041e24:	add    BYTE PTR [rbx+rax*1+0x65537369],al
   140041e2b:	imul   eax,DWORD PTR gs:[rbp+riz*2+0x73],0x6b
   140041e31:	je     0x140041ea2
   140041e33:	jo     0x140041e35
   140041e35:	test   BYTE PTR [rbx],al
   140041e37:	imul   esi,DWORD PTR [rbx+0x55],0x53726573
   140041e3e:	jns    0x140041eb3
   140041e40:	je     0x140041ea7
   140041e42:	ins    DWORD PTR es:[rdi],dx
   140041e43:	add    BYTE PTR [rbx+rax*1+0x706d6f63],al
   140041e4a:	outs   dx,DWORD PTR ds:[rsi]
   140041e4b:	jae    0x140041eb6
   140041e4d:	je     0x140041eb4
   140041e4f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140041e51:	jo     0x140041ec8
   140041e53:	je     0x140041e98
   140041e55:	outs   dx,DWORD PTR ds:[rsi]
   140041e56:	outs   dx,DWORD PTR ds:[rsi]
   140041e57:	imul   ebp,DWORD PTR [rcx+0x65],0x0
   140041e5b:	or     BYTE PTR [rbx+rdx*2+0x46],dl
   140041e5f:	push   rbx
   140041e60:	je     0x140041ec3
   140041e62:	je     0x140041ec9
   140041e64:	rex.WRB (bad) 
   140041e66:	outs   dx,BYTE PTR ds:[rsi]
   140041e67:	(bad)  
   140041e68:	addr32 gs jb 0x140041eaf
   140041e6c:	outs   dx,DWORD PTR ds:[rsi]
   140041e6d:	outs   dx,DWORD PTR ds:[rsi]
   140041e6e:	imul   ebp,DWORD PTR [rcx+0x65],0x0
   140041e72:	or     BYTE PTR [rbx],al
   140041e74:	or     eax,DWORD PTR [rip+0x2]        # 0x140041e7c
   140041e7a:	add    BYTE PTR [rax],al
   140041e7c:	and    BYTE PTR [rax],al
   140041e7e:	add    BYTE PTR [rcx+rax*1+0x62615400],al
   140041e85:	push   rsp
   140041e86:	imul   esi,DWORD PTR [rax+0x49],0x6974696e
   140041e8d:	(bad)  
   140041e8e:	ins    BYTE PTR es:[rdi],dx
   140041e8f:	imul   edi,DWORD PTR [rdx+0x65],0x75636553
   140041e96:	jb     0x140041f01
   140041e98:	je     0x140041f13
   140041e9a:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140041e9f:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x416c6977
   140041ea7:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140041eab:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680e98
   140041eb3:	gs jae 0x140041f2b
   140041eb6:	ins    BYTE PTR es:[rdi],dx
   140041eb7:	je     0x140041eb9
   140041eb9:	or     BYTE PTR [rsi+0x69],ah
   140041ebc:	ins    BYTE PTR es:[rdi],dx
   140041ebd:	gs rex.WRX (bad) 
   140041ec0:	ins    DWORD PTR es:[rdi],dx
   140041ec1:	add    BYTE PTR gs:[rdx],al
   140041ec4:	ins    BYTE PTR es:[rdi],dx
   140041ec5:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140041ecc:	gs jb  0x140041ecf
   140041ecf:	or     BYTE PTR [rbp+0x6f],ch
   140041ed2:	fs jne 0x140041f41
   140041ed5:	add    BYTE PTR gs:[rdx],al
   140041ed8:	data16 (bad) 
   140041eda:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   140041ee2:	add    BYTE PTR gs:[rax],cl
   140041ee5:	ins    DWORD PTR es:[rdi],dx
   140041ee6:	gs jae 0x140041f5c
   140041ee9:	(bad)  
   140041eea:	add    BYTE PTR gs:[ecx],al
   140041eee:	je     0x140041f58
   140041ef0:	jb     0x140041f57
   140041ef2:	(bad)  
   140041ef3:	fs rex.WB
   140041ef5:	add    BYTE PTR fs:[rax],cl
   140041ef8:	movsxd esp,DWORD PTR [rcx+0x6c]
   140041efb:	ins    BYTE PTR es:[rdi],dx
   140041efc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041efe:	outs   dx,BYTE PTR ds:[rsi]
   140041eff:	je     0x140041f66
   140041f01:	js     0x140041f77
   140041f03:	add    BYTE PTR [rdx],al
   140041f05:	outs   dx,DWORD PTR ds:[rsi]
   140041f06:	jb     0x140041f71
   140041f08:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140041f10:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041f12:	outs   dx,BYTE PTR ds:[rsi]
   140041f13:	je     0x140041f7a
   140041f15:	js     0x140041f8b
   140041f17:	rex.WB
   140041f18:	add    BYTE PTR fs:[rax],cl
   140041f1b:	outs   dx,DWORD PTR ds:[rsi]
   140041f1c:	jb     0x140041f87
   140041f1e:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140041f26:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041f28:	outs   dx,BYTE PTR ds:[rsi]
   140041f29:	je     0x140041f90
   140041f2b:	js     0x140041fa1
   140041f2d:	rex.WRX (bad) 
   140041f2f:	ins    DWORD PTR es:[rdi],dx
   140041f30:	add    BYTE PTR gs:[rdx],al
   140041f33:	outs   dx,DWORD PTR ds:[rsi]
   140041f34:	jb     0x140041f9f
   140041f36:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140041f3e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140041f40:	outs   dx,BYTE PTR ds:[rsi]
   140041f41:	je     0x140041fa8
   140041f43:	js     0x140041fb9
   140041f45:	rex.WRB
   140041f46:	gs jae 0x140041fbc
   140041f49:	(bad)  
   140041f4a:	add    BYTE PTR gs:[ecx],al
   140041f4e:	movsxd esi,DWORD PTR [rbp+0x72]
   140041f51:	jb     0x140041fb8
   140041f53:	outs   dx,BYTE PTR ds:[rsi]
   140041f54:	je     0x140041f99
   140041f56:	outs   dx,DWORD PTR ds:[rsi]
   140041f57:	outs   dx,BYTE PTR ds:[rsi]
   140041f58:	je     0x140041fbf
   140041f5a:	js     0x140041fd0
   140041f5c:	rex.WB
   140041f5d:	add    BYTE PTR fs:[rax],cl
   140041f60:	movsxd esi,DWORD PTR [rbp+0x72]
   140041f63:	jb     0x140041fca
   140041f65:	outs   dx,BYTE PTR ds:[rsi]
   140041f66:	je     0x140041fab
   140041f68:	outs   dx,DWORD PTR ds:[rsi]
   140041f69:	outs   dx,BYTE PTR ds:[rsi]
   140041f6a:	je     0x140041fd1
   140041f6c:	js     0x140041fe2
   140041f6e:	rex.WRX (bad) 
   140041f70:	ins    DWORD PTR es:[rdi],dx
   140041f71:	add    BYTE PTR gs:[rdx],al
   140041f74:	movsxd esi,DWORD PTR [rbp+0x72]
   140041f77:	jb     0x140041fde
   140041f79:	outs   dx,BYTE PTR ds:[rsi]
   140041f7a:	je     0x140041fbf
   140041f7c:	outs   dx,DWORD PTR ds:[rsi]
   140041f7d:	outs   dx,BYTE PTR ds:[rsi]
   140041f7e:	je     0x140041fe5
   140041f80:	js     0x140041ff6
   140041f82:	rex.WRB
   140041f83:	gs jae 0x140041ff9
   140041f86:	(bad)  
   140041f87:	add    BYTE PTR gs:[ecx],al
   140041f8b:	gs imul esi,DWORD PTR fs:[rcx+rcx*2+0x64],0x73690f00
   140041f95:	push   rbx
   140041f96:	(bad)  
   140041f97:	data16 rex.WRB outs dx,DWORD PTR gs:[rsi]
   140041f9b:	fs add BYTE PTR gs:[rbx+rax*1+0x65527369],al
   140041fa4:	jae    0x140041ff3
   140041fa6:	outs   dx,DWORD PTR ds:[rsi]
   140041fa7:	fs add BYTE PTR gs:[rbx+rax*1+0x79537369],al
   140041fb0:	jae    0x140042026
   140041fb2:	gs ins DWORD PTR es:[rdi],dx
   140041fb4:	add    BYTE PTR [rbx+rax*1+0x65537369],al
   140041fbb:	imul   eax,DWORD PTR gs:[rbp+riz*2+0x73],0x6b
   140041fc1:	je     0x140042032
   140041fc3:	jo     0x140041fc5
   140041fc5:	test   BYTE PTR [rbx],al
   140041fc7:	imul   esi,DWORD PTR [rbx+0x55],0x53726573
   140041fce:	jns    0x140042043
   140041fd0:	je     0x140042037
   140041fd2:	ins    DWORD PTR es:[rdi],dx
   140041fd3:	add    BYTE PTR [rbx+rax*1+0x706d6f63],al
   140041fda:	outs   dx,DWORD PTR ds:[rsi]
   140041fdb:	jae    0x140042046
   140041fdd:	je     0x140042044
   140041fdf:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140041fe1:	jo     0x140042058
   140041fe3:	je     0x140042028
   140041fe5:	outs   dx,DWORD PTR ds:[rsi]
   140041fe6:	outs   dx,DWORD PTR ds:[rsi]
   140041fe7:	imul   ebp,DWORD PTR [rcx+0x65],0x0
   140041feb:	or     BYTE PTR [rbx+rdx*2+0x46],dl
   140041fef:	push   rbx
   140041ff0:	je     0x140042053
   140041ff2:	je     0x140042059
   140041ff4:	rex.WRB (bad) 
   140041ff6:	outs   dx,BYTE PTR ds:[rsi]
   140041ff7:	(bad)  
   140041ff8:	addr32 gs jb 0x14004203f
   140041ffc:	outs   dx,DWORD PTR ds:[rsi]
   140041ffd:	outs   dx,DWORD PTR ds:[rsi]
   140041ffe:	imul   ebp,DWORD PTR [rcx+0x65],0x0
   140042002:	or     BYTE PTR [rbx],al
   140042004:	or     eax,DWORD PTR [rip+0x1]        # 0x14004200b
   14004200a:	add    BYTE PTR [rax],al
   14004200c:	and    BYTE PTR [rax],al
   14004200e:	add    BYTE PTR [rbx+0x0],ch
   140042011:	add    BYTE PTR [rcx+riz*2+0x62],dl
   140042015:	push   rsp
   140042016:	imul   esi,DWORD PTR [rax+0x49],0x6974696e
   14004201d:	(bad)  
   14004201e:	ins    BYTE PTR es:[rdi],dx
   14004201f:	imul   edi,DWORD PTR [rdx+0x65],0x75636553
   140042026:	jb     0x140042091
   140042028:	je     0x1400420a3
   14004202a:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14004202f:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x416c6977
   140042037:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14004203b:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x68740198
   140042043:	jb     0x1400420aa
   140042045:	(bad)  
   140042046:	fs rex.WB
   140042048:	add    BYTE PTR fs:[rax],cl
   14004204b:	gs imul esi,DWORD PTR fs:[rcx+rcx*2+0x64],0x73690f00
   140042055:	push   rdx
   140042056:	gs jae 0x1400420a6
   140042059:	outs   dx,DWORD PTR ds:[rsi]
   14004205a:	fs add BYTE PTR gs:[rbx+rax*1+0x79537369],al
   140042063:	jae    0x1400420d9
   140042065:	gs ins DWORD PTR es:[rdi],dx
   140042067:	add    BYTE PTR [rbx+rax*1+0x65537369],al
   14004206e:	imul   eax,DWORD PTR gs:[rbp+riz*2+0x73],0x6b
   140042074:	je     0x1400420e5
   140042076:	jo     0x140042078
   140042078:	test   BYTE PTR [rbx],al
   14004207a:	add    ecx,DWORD PTR [rbx]
   14004207c:	add    eax,0x2
   140042081:	add    BYTE PTR [rax],al
   140042083:	and    BYTE PTR [rax],al
   140042085:	add    BYTE PTR [rbp+0x0],al
   140042088:	add    BYTE PTR [rcx+riz*2+0x62],dl
   14004208c:	push   rsp
   14004208d:	imul   esi,DWORD PTR [rax+0x49],0x6974696e
   140042094:	(bad)  
   140042095:	ins    BYTE PTR es:[rdi],dx
   140042096:	imul   edi,DWORD PTR [rdx+0x65],0x75636553
   14004209d:	jb     0x140042108
   14004209f:	je     0x14004211a
   1400420a1:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   1400420a6:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x416c6977
   1400420ae:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   1400420b2:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680298
   1400420ba:	gs jae 0x140042132
   1400420bd:	ins    BYTE PTR es:[rdi],dx
   1400420be:	je     0x1400420c0
   1400420c0:	or     BYTE PTR [rax+rbp*2+0x72],dh
   1400420c4:	gs (bad) 
   1400420c6:	fs rex.WB
   1400420c8:	add    BYTE PTR fs:[rax],cl
   1400420cb:	add    ecx,DWORD PTR [rbx]
   1400420cd:	add    eax,0x2
   1400420d2:	add    BYTE PTR [rax],al
   1400420d4:	and    BYTE PTR [rax],al
   1400420d6:	add    BYTE PTR [rcx+rax*1],cl
   1400420d9:	add    BYTE PTR [rcx+riz*2+0x62],dl
   1400420dd:	push   rsp
   1400420de:	imul   esi,DWORD PTR [rax+0x49],0x6974696e
   1400420e5:	(bad)  
   1400420e6:	ins    BYTE PTR es:[rdi],dx
   1400420e7:	imul   edi,DWORD PTR [rdx+0x65],0x75636553
   1400420ee:	jb     0x140042159
   1400420f0:	je     0x14004216b
   1400420f2:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   1400420f7:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x416c6977
   1400420ff:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140042103:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680e98
   14004210b:	gs jae 0x140042183
   14004210e:	ins    BYTE PTR es:[rdi],dx
   14004210f:	je     0x140042111
   140042111:	or     BYTE PTR [rsi+0x69],ah
   140042114:	ins    BYTE PTR es:[rdi],dx
   140042115:	gs rex.WRX (bad) 
   140042118:	ins    DWORD PTR es:[rdi],dx
   140042119:	add    BYTE PTR gs:[rdx],al
   14004211c:	ins    BYTE PTR es:[rdi],dx
   14004211d:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140042124:	gs jb  0x140042127
   140042127:	or     BYTE PTR [rbp+0x6f],ch
   14004212a:	fs jne 0x140042199
   14004212d:	add    BYTE PTR gs:[rdx],al
   140042130:	data16 (bad) 
   140042132:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   14004213a:	add    BYTE PTR gs:[rax],cl
   14004213d:	ins    DWORD PTR es:[rdi],dx
   14004213e:	gs jae 0x1400421b4
   140042141:	(bad)  
   140042142:	add    BYTE PTR gs:[ecx],al
   140042146:	je     0x1400421b0
   140042148:	jb     0x1400421af
   14004214a:	(bad)  
   14004214b:	fs rex.WB
   14004214d:	add    BYTE PTR fs:[rax],cl
   140042150:	movsxd esp,DWORD PTR [rcx+0x6c]
   140042153:	ins    BYTE PTR es:[rdi],dx
   140042154:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140042156:	outs   dx,BYTE PTR ds:[rsi]
   140042157:	je     0x1400421be
   140042159:	js     0x1400421cf
   14004215b:	add    BYTE PTR [rdx],al
   14004215d:	outs   dx,DWORD PTR ds:[rsi]
   14004215e:	jb     0x1400421c9
   140042160:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140042168:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004216a:	outs   dx,BYTE PTR ds:[rsi]
   14004216b:	je     0x1400421d2
   14004216d:	js     0x1400421e3
   14004216f:	rex.WB
   140042170:	add    BYTE PTR fs:[rax],cl
   140042173:	outs   dx,DWORD PTR ds:[rsi]
   140042174:	jb     0x1400421df
   140042176:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14004217e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140042180:	outs   dx,BYTE PTR ds:[rsi]
   140042181:	je     0x1400421e8
   140042183:	js     0x1400421f9
   140042185:	rex.WRX (bad) 
   140042187:	ins    DWORD PTR es:[rdi],dx
   140042188:	add    BYTE PTR gs:[rdx],al
   14004218b:	outs   dx,DWORD PTR ds:[rsi]
   14004218c:	jb     0x1400421f7
   14004218e:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140042196:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140042198:	outs   dx,BYTE PTR ds:[rsi]
   140042199:	je     0x140042200
   14004219b:	js     0x140042211
   14004219d:	rex.WRB
   14004219e:	gs jae 0x140042214
   1400421a1:	(bad)  
   1400421a2:	add    BYTE PTR gs:[ecx],al
   1400421a6:	movsxd esi,DWORD PTR [rbp+0x72]
   1400421a9:	jb     0x140042210
   1400421ab:	outs   dx,BYTE PTR ds:[rsi]
   1400421ac:	je     0x1400421f1
   1400421ae:	outs   dx,DWORD PTR ds:[rsi]
   1400421af:	outs   dx,BYTE PTR ds:[rsi]
   1400421b0:	je     0x140042217
   1400421b2:	js     0x140042228
   1400421b4:	rex.WB
   1400421b5:	add    BYTE PTR fs:[rax],cl
   1400421b8:	movsxd esi,DWORD PTR [rbp+0x72]
   1400421bb:	jb     0x140042222
   1400421bd:	outs   dx,BYTE PTR ds:[rsi]
   1400421be:	je     0x140042203
   1400421c0:	outs   dx,DWORD PTR ds:[rsi]
   1400421c1:	outs   dx,BYTE PTR ds:[rsi]
   1400421c2:	je     0x140042229
   1400421c4:	js     0x14004223a
   1400421c6:	rex.WRX (bad) 
   1400421c8:	ins    DWORD PTR es:[rdi],dx
   1400421c9:	add    BYTE PTR gs:[rdx],al
   1400421cc:	movsxd esi,DWORD PTR [rbp+0x72]
   1400421cf:	jb     0x140042236
   1400421d1:	outs   dx,BYTE PTR ds:[rsi]
   1400421d2:	je     0x140042217
   1400421d4:	outs   dx,DWORD PTR ds:[rsi]
   1400421d5:	outs   dx,BYTE PTR ds:[rsi]
   1400421d6:	je     0x14004223d
   1400421d8:	js     0x14004224e
   1400421da:	rex.WRB
   1400421db:	gs jae 0x140042251
   1400421de:	(bad)  
   1400421df:	add    BYTE PTR gs:[ecx],al
   1400421e3:	add    ecx,DWORD PTR [rbx]
   1400421e5:	add    eax,0x1
   1400421ea:	add    BYTE PTR [rax],al
   1400421ec:	and    BYTE PTR [rax],al
   1400421ee:	add    BYTE PTR [rip+0x61540000],ch        # 0x1a15821f4
   1400421f4:	(bad)  
   1400421f5:	push   rsp
   1400421f6:	imul   esi,DWORD PTR [rax+0x52],0x63416e75
   1400421fd:	je     0x140042268
   1400421ff:	jbe    0x14004226a
   140042201:	je     0x14004227c
   140042203:	add    BYTE PTR [rdi+0x69],dh
   140042206:	ins    BYTE PTR es:[rdi],dx
   140042207:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14004220c:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x68740198
   140042214:	jb     0x14004227b
   140042216:	(bad)  
   140042217:	fs rex.WB
   140042219:	add    BYTE PTR fs:[rax],cl
   14004221c:	add    ecx,DWORD PTR [rbx]
   14004221e:	add    eax,0x2
   140042223:	add    BYTE PTR [rax],al
   140042225:	and    BYTE PTR [rax],al
   140042227:	add    BYTE PTR [rsi],dh
   140042229:	add    BYTE PTR [rax],al
   14004222b:	push   rsp
   14004222c:	(bad)  
   14004222d:	(bad)  
   14004222e:	push   rsp
   14004222f:	imul   esi,DWORD PTR [rax+0x52],0x63416e75
   140042236:	je     0x1400422a1
   140042238:	jbe    0x1400422a3
   14004223a:	je     0x1400422b5
   14004223c:	add    BYTE PTR [rdi+0x69],dh
   14004223f:	ins    BYTE PTR es:[rdi],dx
   140042240:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140042245:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680298
   14004224d:	gs jae 0x1400422c5
   140042250:	ins    BYTE PTR es:[rdi],dx
   140042251:	je     0x140042253
   140042253:	or     BYTE PTR [rax+rbp*2+0x72],dh
   140042257:	gs (bad) 
   140042259:	fs rex.WB
   14004225b:	add    BYTE PTR fs:[rax],cl
   14004225e:	add    ecx,DWORD PTR [rbx]
   140042260:	add    eax,0x2
   140042265:	add    BYTE PTR [rax],al
   140042267:	and    BYTE PTR [rax],al
   140042269:	add    ch,bh
   14004226b:	add    BYTE PTR [rax],al
   14004226d:	push   rsp
   14004226e:	(bad)  
   14004226f:	(bad)  
   140042270:	push   rsp
   140042271:	imul   esi,DWORD PTR [rax+0x52],0x63416e75
   140042278:	je     0x1400422e3
   14004227a:	jbe    0x1400422e5
   14004227c:	je     0x1400422f7
   14004227e:	add    BYTE PTR [rdi+0x69],dh
   140042281:	ins    BYTE PTR es:[rdi],dx
   140042282:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140042287:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x72680e98
   14004228f:	gs jae 0x140042307
   140042292:	ins    BYTE PTR es:[rdi],dx
   140042293:	je     0x140042295
   140042295:	or     BYTE PTR [rsi+0x69],ah
   140042298:	ins    BYTE PTR es:[rdi],dx
   140042299:	gs rex.WRX (bad) 
   14004229c:	ins    DWORD PTR es:[rdi],dx
   14004229d:	add    BYTE PTR gs:[rdx],al
   1400422a0:	ins    BYTE PTR es:[rdi],dx
   1400422a1:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   1400422a8:	gs jb  0x1400422ab
   1400422ab:	or     BYTE PTR [rbp+0x6f],ch
   1400422ae:	fs jne 0x14004231d
   1400422b1:	add    BYTE PTR gs:[rdx],al
   1400422b4:	data16 (bad) 
   1400422b6:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   1400422be:	add    BYTE PTR gs:[rax],cl
   1400422c1:	ins    DWORD PTR es:[rdi],dx
   1400422c2:	gs jae 0x140042338
   1400422c5:	(bad)  
   1400422c6:	add    BYTE PTR gs:[ecx],al
   1400422ca:	je     0x140042334
   1400422cc:	jb     0x140042333
   1400422ce:	(bad)  
   1400422cf:	fs rex.WB
   1400422d1:	add    BYTE PTR fs:[rax],cl
   1400422d4:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400422d7:	ins    BYTE PTR es:[rdi],dx
   1400422d8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400422da:	outs   dx,BYTE PTR ds:[rsi]
   1400422db:	je     0x140042342
   1400422dd:	js     0x140042353
   1400422df:	add    BYTE PTR [rdx],al
   1400422e1:	outs   dx,DWORD PTR ds:[rsi]
   1400422e2:	jb     0x14004234d
   1400422e4:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   1400422ec:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400422ee:	outs   dx,BYTE PTR ds:[rsi]
   1400422ef:	je     0x140042356
   1400422f1:	js     0x140042367
   1400422f3:	rex.WB
   1400422f4:	add    BYTE PTR fs:[rax],cl
   1400422f7:	outs   dx,DWORD PTR ds:[rsi]
   1400422f8:	jb     0x140042363
   1400422fa:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140042302:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140042304:	outs   dx,BYTE PTR ds:[rsi]
   140042305:	je     0x14004236c
   140042307:	js     0x14004237d
   140042309:	rex.WRX (bad) 
   14004230b:	ins    DWORD PTR es:[rdi],dx
   14004230c:	add    BYTE PTR gs:[rdx],al
   14004230f:	outs   dx,DWORD PTR ds:[rsi]
   140042310:	jb     0x14004237b
   140042312:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14004231a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004231c:	outs   dx,BYTE PTR ds:[rsi]
   14004231d:	je     0x140042384
   14004231f:	js     0x140042395
   140042321:	rex.WRB
   140042322:	gs jae 0x140042398
   140042325:	(bad)  
   140042326:	add    BYTE PTR gs:[ecx],al
   14004232a:	movsxd esi,DWORD PTR [rbp+0x72]
   14004232d:	jb     0x140042394
   14004232f:	outs   dx,BYTE PTR ds:[rsi]
   140042330:	je     0x140042375
   140042332:	outs   dx,DWORD PTR ds:[rsi]
   140042333:	outs   dx,BYTE PTR ds:[rsi]
   140042334:	je     0x14004239b
   140042336:	js     0x1400423ac
   140042338:	rex.WB
   140042339:	add    BYTE PTR fs:[rax],cl
   14004233c:	movsxd esi,DWORD PTR [rbp+0x72]
   14004233f:	jb     0x1400423a6
   140042341:	outs   dx,BYTE PTR ds:[rsi]
   140042342:	je     0x140042387
   140042344:	outs   dx,DWORD PTR ds:[rsi]
   140042345:	outs   dx,BYTE PTR ds:[rsi]
   140042346:	je     0x1400423ad
   140042348:	js     0x1400423be
   14004234a:	rex.WRX (bad) 
   14004234c:	ins    DWORD PTR es:[rdi],dx
   14004234d:	add    BYTE PTR gs:[rdx],al
   140042350:	movsxd esi,DWORD PTR [rbp+0x72]
   140042353:	jb     0x1400423ba
   140042355:	outs   dx,BYTE PTR ds:[rsi]
   140042356:	je     0x14004239b
   140042358:	outs   dx,DWORD PTR ds:[rsi]
   140042359:	outs   dx,BYTE PTR ds:[rsi]
   14004235a:	je     0x1400423c1
   14004235c:	js     0x1400423d2
   14004235e:	rex.WRB
   14004235f:	gs jae 0x1400423d5
   140042362:	(bad)  
   140042363:	add    BYTE PTR gs:[ecx],al
   140042367:	add    ecx,DWORD PTR [rbx]
   140042369:	add    eax,0x0
   14004236e:	add    BYTE PTR [rax],al
   140042370:	add    BYTE PTR [rax],al
   140042372:	add    BYTE PTR [rdx],bl
   140042374:	add    DWORD PTR [rax],eax
   140042376:	rex.RX (bad) 
   140042378:	ins    BYTE PTR es:[rdi],dx
   140042379:	ins    BYTE PTR es:[rdi],dx
   14004237a:	(bad)  
   14004237c:	movsxd ebp,DWORD PTR [rbx+0x45]
   14004237f:	jb     0x1400423f3
   140042381:	outs   dx,DWORD PTR ds:[rsi]
   140042382:	jb     0x140042384
   140042384:	ja     0x1400423ef
   140042386:	ins    BYTE PTR es:[rdi],dx
   140042387:	push   rdx
   140042388:	gs jae 0x140042400
   14004238b:	ins    BYTE PTR es:[rdi],dx
   14004238c:	je     0x14004238e
   14004238e:	cwde   
   14004238f:	adc    DWORD PTR [rax+0x72],ebp
   140042392:	gs jae 0x14004240a
   140042395:	ins    BYTE PTR es:[rdi],dx
   140042396:	je     0x140042398
   140042398:	or     BYTE PTR [rsi+0x69],ah
   14004239b:	ins    BYTE PTR es:[rdi],dx
   14004239c:	gs rex.WRX (bad) 
   14004239f:	ins    DWORD PTR es:[rdi],dx
   1400423a0:	add    BYTE PTR gs:[rdx],al
   1400423a3:	ins    BYTE PTR es:[rdi],dx
   1400423a4:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   1400423ab:	gs jb  0x1400423ae
   1400423ae:	or     BYTE PTR [rbp+0x6f],ch
   1400423b1:	fs jne 0x140042420
   1400423b4:	add    BYTE PTR gs:[rdx],al
   1400423b7:	data16 (bad) 
   1400423b9:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   1400423c1:	add    BYTE PTR gs:[rax],cl
   1400423c4:	ins    DWORD PTR es:[rdi],dx
   1400423c5:	gs jae 0x14004243b
   1400423c8:	(bad)  
   1400423c9:	add    BYTE PTR gs:[ecx],al
   1400423cd:	je     0x140042437
   1400423cf:	jb     0x140042436
   1400423d1:	(bad)  
   1400423d2:	fs rex.WB
   1400423d4:	add    BYTE PTR fs:[rax],cl
   1400423d7:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400423da:	ins    BYTE PTR es:[rdi],dx
   1400423db:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400423dd:	outs   dx,BYTE PTR ds:[rsi]
   1400423de:	je     0x140042445
   1400423e0:	js     0x140042456
   1400423e2:	add    BYTE PTR [rdx],al
   1400423e4:	outs   dx,DWORD PTR ds:[rsi]
   1400423e5:	jb     0x140042450
   1400423e7:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   1400423ef:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400423f1:	outs   dx,BYTE PTR ds:[rsi]
   1400423f2:	je     0x140042459
   1400423f4:	js     0x14004246a
   1400423f6:	rex.WB
   1400423f7:	add    BYTE PTR fs:[rax],cl
   1400423fa:	outs   dx,DWORD PTR ds:[rsi]
   1400423fb:	jb     0x140042466
   1400423fd:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140042405:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140042407:	outs   dx,BYTE PTR ds:[rsi]
   140042408:	je     0x14004246f
   14004240a:	js     0x140042480
   14004240c:	rex.WRX (bad) 
   14004240e:	ins    DWORD PTR es:[rdi],dx
   14004240f:	add    BYTE PTR gs:[rdx],al
   140042412:	outs   dx,DWORD PTR ds:[rsi]
   140042413:	jb     0x14004247e
   140042415:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14004241d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004241f:	outs   dx,BYTE PTR ds:[rsi]
   140042420:	je     0x140042487
   140042422:	js     0x140042498
   140042424:	rex.WRB
   140042425:	gs jae 0x14004249b
   140042428:	(bad)  
   140042429:	add    BYTE PTR gs:[ecx],al
   14004242d:	movsxd esi,DWORD PTR [rbp+0x72]
   140042430:	jb     0x140042497
   140042432:	outs   dx,BYTE PTR ds:[rsi]
   140042433:	je     0x140042478
   140042435:	outs   dx,DWORD PTR ds:[rsi]
   140042436:	outs   dx,BYTE PTR ds:[rsi]
   140042437:	je     0x14004249e
   140042439:	js     0x1400424af
   14004243b:	rex.WB
   14004243c:	add    BYTE PTR fs:[rax],cl
   14004243f:	movsxd esi,DWORD PTR [rbp+0x72]
   140042442:	jb     0x1400424a9
   140042444:	outs   dx,BYTE PTR ds:[rsi]
   140042445:	je     0x14004248a
   140042447:	outs   dx,DWORD PTR ds:[rsi]
   140042448:	outs   dx,BYTE PTR ds:[rsi]
   140042449:	je     0x1400424b0
   14004244b:	js     0x1400424c1
   14004244d:	rex.WRX (bad) 
   14004244f:	ins    DWORD PTR es:[rdi],dx
   140042450:	add    BYTE PTR gs:[rdx],al
   140042453:	movsxd esi,DWORD PTR [rbp+0x72]
   140042456:	jb     0x1400424bd
   140042458:	outs   dx,BYTE PTR ds:[rsi]
   140042459:	je     0x14004249e
   14004245b:	outs   dx,DWORD PTR ds:[rsi]
   14004245c:	outs   dx,BYTE PTR ds:[rsi]
   14004245d:	je     0x1400424c4
   14004245f:	js     0x1400424d5
   140042461:	rex.WRB
   140042462:	gs jae 0x1400424d8
   140042465:	(bad)  
   140042466:	add    BYTE PTR gs:[ecx],al
   14004246a:	data16 (bad) 
   14004246c:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x644965
   140042474:	or     BYTE PTR [rsi+0x61],ah
   140042477:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x756f4365
   14004247f:	outs   dx,BYTE PTR ds:[rsi]
   140042480:	je     0x140042482
   140042482:	or     BYTE PTR [rsi+0x75],ah
   140042485:	outs   dx,BYTE PTR ds:[rsi]
   140042486:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004248a:	outs   dx,BYTE PTR ds:[rsi]
   14004248b:	add    BYTE PTR [rdx],al
   14004248d:	add    ecx,DWORD PTR [rbx]
   14004248f:	add    eax,0x0
   140042494:	add    BYTE PTR [rax],al
   140042496:	and    BYTE PTR [rax],al
   140042498:	add    bh,dh
   14004249a:	add    BYTE PTR [rax],al
   14004249c:	rex.RX (bad) 
   14004249e:	ins    BYTE PTR es:[rdi],dx
   14004249f:	ins    BYTE PTR es:[rdi],dx
   1400424a0:	(bad)  
   1400424a2:	movsxd ebp,DWORD PTR [rbx+0x45]
   1400424a5:	jb     0x140042519
   1400424a7:	outs   dx,DWORD PTR ds:[rsi]
   1400424a8:	jb     0x1400424aa
   1400424aa:	ja     0x140042515
   1400424ac:	ins    BYTE PTR es:[rdi],dx
   1400424ad:	push   rdx
   1400424ae:	gs jae 0x140042526
   1400424b1:	ins    BYTE PTR es:[rdi],dx
   1400424b2:	je     0x1400424b4
   1400424b4:	cwde   
   1400424b5:	(bad)  
   1400424b6:	push   0x75736572
   1400424bb:	ins    BYTE PTR es:[rdi],dx
   1400424bc:	je     0x1400424be
   1400424be:	or     BYTE PTR [rsi+0x69],ah
   1400424c1:	ins    BYTE PTR es:[rdi],dx
   1400424c2:	gs rex.WRX (bad) 
   1400424c5:	ins    DWORD PTR es:[rdi],dx
   1400424c6:	add    BYTE PTR gs:[rdx],al
   1400424c9:	ins    BYTE PTR es:[rdi],dx
   1400424ca:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   1400424d1:	gs jb  0x1400424d4
   1400424d4:	or     BYTE PTR [rbp+0x6f],ch
   1400424d7:	fs jne 0x140042546
   1400424da:	add    BYTE PTR gs:[rdx],al
   1400424dd:	data16 (bad) 
   1400424df:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x70795465
   1400424e7:	add    BYTE PTR gs:[rax],cl
   1400424ea:	ins    DWORD PTR es:[rdi],dx
   1400424eb:	gs jae 0x140042561
   1400424ee:	(bad)  
   1400424ef:	add    BYTE PTR gs:[ecx],al
   1400424f3:	je     0x14004255d
   1400424f5:	jb     0x14004255c
   1400424f7:	(bad)  
   1400424f8:	fs rex.WB
   1400424fa:	add    BYTE PTR fs:[rax],cl
   1400424fd:	movsxd esp,DWORD PTR [rcx+0x6c]
   140042500:	ins    BYTE PTR es:[rdi],dx
   140042501:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140042503:	outs   dx,BYTE PTR ds:[rsi]
   140042504:	je     0x14004256b
   140042506:	js     0x14004257c
   140042508:	add    BYTE PTR [rdx],al
   14004250a:	outs   dx,DWORD PTR ds:[rsi]
   14004250b:	jb     0x140042576
   14004250d:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140042515:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140042517:	outs   dx,BYTE PTR ds:[rsi]
   140042518:	je     0x14004257f
   14004251a:	js     0x140042590
   14004251c:	rex.WB
   14004251d:	add    BYTE PTR fs:[rax],cl
   140042520:	outs   dx,DWORD PTR ds:[rsi]
   140042521:	jb     0x14004258c
   140042523:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   14004252b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004252d:	outs   dx,BYTE PTR ds:[rsi]
   14004252e:	je     0x140042595
   140042530:	js     0x1400425a6
   140042532:	rex.WRX (bad) 
   140042534:	ins    DWORD PTR es:[rdi],dx
   140042535:	add    BYTE PTR gs:[rdx],al
   140042538:	outs   dx,DWORD PTR ds:[rsi]
   140042539:	jb     0x1400425a4
   14004253b:	imul   ebp,DWORD PTR [esi+0x61],0x676e6974
   140042543:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140042545:	outs   dx,BYTE PTR ds:[rsi]
   140042546:	je     0x1400425ad
   140042548:	js     0x1400425be
   14004254a:	rex.WRB
   14004254b:	gs jae 0x1400425c1
   14004254e:	(bad)  
   14004254f:	add    BYTE PTR gs:[ecx],al
   140042553:	movsxd esi,DWORD PTR [rbp+0x72]
   140042556:	jb     0x1400425bd
   140042558:	outs   dx,BYTE PTR ds:[rsi]
   140042559:	je     0x14004259e
   14004255b:	outs   dx,DWORD PTR ds:[rsi]
   14004255c:	outs   dx,BYTE PTR ds:[rsi]
   14004255d:	je     0x1400425c4
   14004255f:	js     0x1400425d5
   140042561:	rex.WB
   140042562:	add    BYTE PTR fs:[rax],cl
   140042565:	movsxd esi,DWORD PTR [rbp+0x72]
   140042568:	jb     0x1400425cf
   14004256a:	outs   dx,BYTE PTR ds:[rsi]
   14004256b:	je     0x1400425b0
   14004256d:	outs   dx,DWORD PTR ds:[rsi]
   14004256e:	outs   dx,BYTE PTR ds:[rsi]
   14004256f:	je     0x1400425d6
   140042571:	js     0x1400425e7
   140042573:	rex.WRX (bad) 
   140042575:	ins    DWORD PTR es:[rdi],dx
   140042576:	add    BYTE PTR gs:[rdx],al
   140042579:	movsxd esi,DWORD PTR [rbp+0x72]
   14004257c:	jb     0x1400425e3
   14004257e:	outs   dx,BYTE PTR ds:[rsi]
   14004257f:	je     0x1400425c4
   140042581:	outs   dx,DWORD PTR ds:[rsi]
   140042582:	outs   dx,BYTE PTR ds:[rsi]
   140042583:	je     0x1400425ea
   140042585:	js     0x1400425fb
   140042587:	rex.WRB
   140042588:	gs jae 0x1400425fe
   14004258b:	(bad)  
   14004258c:	add    BYTE PTR gs:[ecx],al
   140042590:	add    al,0x5f
   140042592:	outs   dx,DWORD PTR ds:[rsi]
   140042593:	cmp    DWORD PTR [rax-0x7b],ebp
   140042596:	out    0x1b,al
   140042598:	pop    rsp
   140042599:	xor    DWORD PTR [rcx-0x2607835f],eax
   14004259f:	outs   dx,DWORD PTR ds:[rsi]
   1400425a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400425a1:	rex.RXB add BYTE PTR [r13+0x69],r9b
   1400425a5:	movsxd esi,DWORD PTR [rdx+0x6f]
   1400425a8:	jae    0x140042619
   1400425aa:	data16 je 0x1400425db
   1400425ad:	push   rdi
   1400425ae:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400425b5:	rex.R
   1400425b6:	gs jae 0x140042624
   1400425b9:	je     0x14004262a
   1400425bb:	jo     0x1400425eb
   1400425bd:	push   rsp
   1400425be:	gs js  0x140042635
   1400425c1:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400425c3:	jo     0x14004263a
   1400425c5:	je     0x1400425f5
   1400425c7:	push   rsp
   1400425c8:	outs   dx,DWORD PTR ds:[rsi]
   1400425c9:	jne    0x14004262e
   1400425cb:	push   0x6279654b
   1400425d0:	outs   dx,DWORD PTR ds:[rsi]
   1400425d1:	(bad)  
   1400425d2:	jb     0x140042638
   1400425d4:	add    BYTE PTR [rbx],dl
   1400425d6:	add    BYTE PTR [rcx],al
   1400425d8:	sbb    dh,BYTE PTR [rbx+0x50]
   1400425db:	rex.WRXB iretq 
   1400425dd:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   1400425e3:	call   0xfa7a2ab1
   1400425e8:	add    DWORD PTR [rax],eax
   1400425ea:	add    BYTE PTR [rax],al
   1400425ec:	add    BYTE PTR [rax],al
   1400425ee:	add    BYTE PTR [rax],al
   1400425f0:	(bad)  
   1400425f1:	jrcxz  0x1400425f6
   1400425f3:	rex add DWORD PTR [rax],eax
	...
   1400425fe:	add    BYTE PTR [rax],al
   140042600:	add    DWORD PTR [rax],eax
	...
   14004261e:	add    BYTE PTR [rax],al
   140042620:	test   al,0xf6
   140042622:	add    eax,DWORD PTR [rax+0x1]
	...
   14004262d:	add    BYTE PTR [rax],al
   14004262f:	add    BYTE PTR [rcx],al
   140042631:	add    BYTE PTR [rax],al
   140042633:	add    BYTE PTR [rax],al
   140042635:	add    BYTE PTR [rax],al
   140042637:	add    BYTE PTR [rax+0x1400430],ah
   14004263d:	add    BYTE PTR [rax],al
   14004263f:	add    BYTE PTR [rax],cl
   140042641:	add    BYTE PTR [rax],al
   140042643:	add    BYTE PTR [rax],al
   140042645:	add    BYTE PTR [rax],al
   140042647:	add    BYTE PTR [rcx],al
   140042649:	add    BYTE PTR [rax],al
   14004264b:	add    BYTE PTR [rax],al
   14004264d:	add    BYTE PTR [rax],al
   14004264f:	add    BYTE PTR [rax-0x1e],dh
   140042652:	add    eax,DWORD PTR [rax+0x1]
   140042655:	add    BYTE PTR [rax],al
   140042657:	add    BYTE PTR [rax],dl
   140042659:	add    BYTE PTR [rax],al
   14004265b:	add    BYTE PTR [rax],al
   14004265d:	add    BYTE PTR [rax],al
   14004265f:	add    BYTE PTR [rcx],al
   140042661:	add    BYTE PTR [rax],al
   140042663:	add    BYTE PTR [rax],al
   140042665:	add    BYTE PTR [rax],al
   140042667:	add    BYTE PTR [rax+0x1400430],dl
   14004266d:	add    BYTE PTR [rax],al
   14004266f:	add    BYTE PTR [rax],ah
   140042671:	add    BYTE PTR [rax],al
   140042673:	add    BYTE PTR [rax],al
   140042675:	add    BYTE PTR [rax],al
   140042677:	add    BYTE PTR [rcx],al
   140042679:	add    BYTE PTR [rax],al
   14004267b:	add    BYTE PTR [rax],al
   14004267d:	add    BYTE PTR [rax],al
   14004267f:	add    BYTE PTR [rax+0x1400430],al
	...
   14004268d:	add    BYTE PTR [rax],al
   14004268f:	add    BYTE PTR [rcx],al
   140042691:	add    BYTE PTR [rax],al
   140042693:	add    BYTE PTR [rax],al
   140042695:	add    BYTE PTR [rax],al
   140042697:	add    BYTE PTR [rax-0x5],ah
   14004269a:	add    eax,DWORD PTR [rax+0x1]
   14004269d:	add    BYTE PTR [rax],al
   14004269f:	add    BYTE PTR [rax],bl
   1400426a1:	add    BYTE PTR [rax],al
   1400426a3:	add    BYTE PTR [rax],al
   1400426a5:	add    BYTE PTR [rax],al
   1400426a7:	add    BYTE PTR [rcx],al
	...
   1400426cd:	add    BYTE PTR [rax],al
   1400426cf:	add    BYTE PTR [rax+0x14003f7],dh
	...
   1400426dd:	add    BYTE PTR [rax],al
   1400426df:	add    BYTE PTR [rcx],al
   1400426e1:	add    BYTE PTR [rax],al
   1400426e3:	add    BYTE PTR [rax],al
   1400426e5:	add    BYTE PTR [rax],al
   1400426e7:	add    BYTE PTR [rax+0x1400434],dl
   1400426ed:	add    BYTE PTR [rax],al
   1400426ef:	add    BYTE PTR [rax],cl
   1400426f1:	add    BYTE PTR [rax],al
   1400426f3:	add    BYTE PTR [rax],al
   1400426f5:	add    BYTE PTR [rax],al
   1400426f7:	add    BYTE PTR [rcx],al
   1400426f9:	add    BYTE PTR [rax],al
   1400426fb:	add    BYTE PTR [rax],al
   1400426fd:	add    BYTE PTR [rax],al
   1400426ff:	add    BYTE PTR [rax+0x14003f7],ah
   140042705:	add    BYTE PTR [rax],al
   140042707:	add    BYTE PTR [rax],dl
   140042709:	add    BYTE PTR [rax],al
   14004270b:	add    BYTE PTR [rax],al
   14004270d:	add    BYTE PTR [rax],al
   14004270f:	add    BYTE PTR [rcx],al
   140042711:	add    BYTE PTR [rax],al
   140042713:	add    BYTE PTR [rax],al
   140042715:	add    BYTE PTR [rax],al
   140042717:	add    BYTE PTR [rax+0x14003f7],dl
   14004271d:	add    BYTE PTR [rax],al
   14004271f:	add    BYTE PTR [rax],bl
   140042721:	add    BYTE PTR [rax],al
   140042723:	add    BYTE PTR [rax],al
   140042725:	add    BYTE PTR [rax],al
   140042727:	add    BYTE PTR [rcx],al
	...
   14004274d:	add    BYTE PTR [rax],al
   14004274f:	add    BYTE PTR [rax+0x30],ch
   140042752:	add    al,0x40
   140042754:	add    DWORD PTR [rax],eax
	...
   14004275e:	add    BYTE PTR [rax],al
   140042760:	add    DWORD PTR [rax],eax
   140042762:	add    BYTE PTR [rax],al
   140042764:	add    BYTE PTR [rax],al
   140042766:	add    BYTE PTR [rax],al
   140042768:	push   rax
   140042769:	sti    
   14004276a:	add    eax,DWORD PTR [rax+0x1]
   14004276d:	add    BYTE PTR [rax],al
   14004276f:	add    BYTE PTR [rax],cl
   140042771:	add    BYTE PTR [rax],al
   140042773:	add    BYTE PTR [rax],al
   140042775:	add    BYTE PTR [rax],al
   140042777:	add    BYTE PTR [rcx],al
	...
   14004279d:	add    BYTE PTR [rax],al
   14004279f:	add    BYTE PTR [rax+0x1400434],dh
   1400427a5:	add    BYTE PTR [rax],al
   1400427a7:	add    BYTE PTR [rax+0x0],bh
   1400427aa:	add    BYTE PTR [rax],al
   1400427ac:	add    BYTE PTR [rax],al
   1400427ae:	add    BYTE PTR [rax],al
   1400427b0:	add    DWORD PTR [rax],eax
   1400427b2:	add    BYTE PTR [rax],al
   1400427b4:	add    BYTE PTR [rax],al
   1400427b6:	add    BYTE PTR [rax],al
   1400427b8:	shl    bh,0x3
   1400427bb:	rex add DWORD PTR [rax],eax
   1400427be:	add    BYTE PTR [rax],al
   1400427c0:	add    BYTE PTR [rax],0x0
   1400427c3:	add    BYTE PTR [rax],al
   1400427c5:	add    BYTE PTR [rax],al
   1400427c7:	add    BYTE PTR [rcx],al
   1400427c9:	add    BYTE PTR [rax],al
   1400427cb:	add    BYTE PTR [rax],al
   1400427cd:	add    BYTE PTR [rax],al
   1400427cf:	add    BYTE PTR [rax-0x5],dl
   1400427d2:	add    eax,DWORD PTR [rax+0x1]
   1400427d5:	add    BYTE PTR [rax],al
   1400427d7:	add    BYTE PTR [rax+0x0],cl
   1400427dd:	add    BYTE PTR [rax],al
   1400427df:	add    BYTE PTR [rcx],al
	...
   1400427fd:	add    BYTE PTR [rax],al
   1400427ff:	add    BYTE PTR [rbx+0x0],bh
   140042802:	add    BYTE PTR [rsi+0x0],r8b
   140042806:	add    BYTE PTR [rax+r8*1+0x45],r8b
   14004280b:	add    BYTE PTR [rdx],dh
   14004280d:	add    BYTE PTR [rcx],dh
   14004280f:	add    BYTE PTR [rbx],dh
   140042811:	add    BYTE PTR [rip+0x43003800],ch        # 0x183046017
   140042817:	add    BYTE PTR [rdx+0x0],al
   14004281a:	xor    al,0x0
   14004281c:	sub    eax,0x36003400
   140042821:	add    BYTE PTR [rcx+0x0],ah
   140042824:	cmp    DWORD PTR [rax],eax
   140042826:	sub    eax,0x30003900
   14004282b:	add    BYTE PTR [rbp+0x0],al
   14004282e:	rex.X add BYTE PTR [rip+0x44003300],bpl        # 0x184045b35
   140042835:	add    BYTE PTR [rcx+0x0],al
   140042838:	cmp    BYTE PTR [rax],al
   14004283a:	xor    al,0x0
   14004283c:	xor    eax,DWORD PTR [rax]
   14004283e:	add    BYTE PTR [r14+0x0],al
   140042842:	add    BYTE PTR ss:[rsi],dh
   140042845:	add    BYTE PTR [rsi+0x0],al
   140042848:	cmp    DWORD PTR [rax],eax
   14004284a:	jge    0x14004284c
   14004284c:	sub    eax,0x72006300
   140042851:	add    BYTE PTR [rcx+0x0],ah
   140042854:	jae    0x140042856
   140042856:	push   0x64006500
   14004285b:	add    BYTE PTR [rax],al
   14004285d:	add    BYTE PTR [rax],al
   14004285f:	add    al,al
   140042861:	test   DWORD PTR [rbx],0x140
	...
   14004286f:	add    BYTE PTR [rcx],al
   140042871:	add    BYTE PTR [rax],al
   140042873:	add    BYTE PTR [rax],al
   140042875:	add    BYTE PTR [rax],al
   140042877:	add    BYTE PTR [rax],ah
   140042879:	cmc    
   14004287a:	add    eax,DWORD PTR [rax+0x1]
   14004287d:	add    BYTE PTR [rax],al
   14004287f:	add    BYTE PTR [rax],cl
   140042881:	add    BYTE PTR [rax],al
   140042883:	add    BYTE PTR [rax],al
   140042885:	add    BYTE PTR [rax],al
   140042887:	add    BYTE PTR [rcx],al
   140042889:	add    BYTE PTR [rax],al
   14004288b:	add    BYTE PTR [rax],al
   14004288d:	add    BYTE PTR [rax],al
   14004288f:	add    BYTE PTR [rax+0x35],dl
   140042892:	add    al,0x40
   140042894:	add    DWORD PTR [rax],eax
   140042896:	add    BYTE PTR [rax],al
   140042898:	adc    BYTE PTR [rax],al
   14004289a:	add    BYTE PTR [rax],al
   14004289c:	add    BYTE PTR [rax],al
   14004289e:	add    BYTE PTR [rax],al
   1400428a0:	add    DWORD PTR [rax],eax
   1400428a2:	add    BYTE PTR [rax],al
   1400428a4:	add    BYTE PTR [rax],al
   1400428a6:	add    BYTE PTR [rax],al
   1400428a8:	rex xor eax,0x14004
   1400428ae:	add    BYTE PTR [rax],al
   1400428b0:	sbb    BYTE PTR [rax],al
   1400428b2:	add    BYTE PTR [rax],al
   1400428b4:	add    BYTE PTR [rax],al
   1400428b6:	add    BYTE PTR [rax],al
   1400428b8:	add    DWORD PTR [rax],eax
   1400428ba:	add    BYTE PTR [rax],al
   1400428bc:	add    BYTE PTR [rax],al
   1400428be:	add    BYTE PTR [rax],al
   1400428c0:	nop
   1400428c1:	test   DWORD PTR [rbx],0x140
   1400428c7:	add    BYTE PTR [rax],ah
   1400428c9:	add    BYTE PTR [rax],al
   1400428cb:	add    BYTE PTR [rax],al
   1400428cd:	add    BYTE PTR [rax],al
   1400428cf:	add    BYTE PTR [rcx],al
	...
   1400428ed:	add    BYTE PTR [rax],al
   1400428ef:	add    BYTE PTR [rax+rax*1+0x0],dl
   1400428f3:	adc    BYTE PTR [rdx+rax*1],al
   1400428f6:	sub    al,BYTE PTR [rax]
   1400428f8:	add    BYTE PTR [rax],al
   1400428fa:	add    DWORD PTR [rax],eax
   1400428fc:	add    BYTE PTR [rax],al
   1400428fe:	add    BYTE PTR [rax+0x100000b7],al
   140042904:	add    al,0x2
   140042906:	pop    rsp
   140042907:	add    BYTE PTR [rax],al
   140042909:	add    BYTE PTR [rcx],al
   14004290b:	add    BYTE PTR [rax],al
   14004290d:	add    BYTE PTR [rax],al
   14004290f:	adc    BYTE PTR [rbx+0x0],0x0
   140042913:	adc    BYTE PTR [rcx+rax*1],al
   140042916:	sub    al,BYTE PTR [rax]
   140042918:	add    BYTE PTR [rax],al
   14004291a:	add    DWORD PTR [rax],eax
   14004291c:	add    BYTE PTR [rax],al
   14004291e:	add    BYTE PTR [rax+0x10000055],al
   140042924:	add    al,0x1
   140042926:	sub    eax,DWORD PTR [rax]
   140042928:	add    BYTE PTR [rax],al
   14004292a:	add    DWORD PTR [rax],eax
   14004292c:	add    BYTE PTR [rax],al
   14004292e:	add    BYTE PTR [rax+0x10000056],al
   140042934:	add    al,0x2
   140042936:	sub    eax,DWORD PTR [rax]
   140042938:	add    BYTE PTR [rax],al
   14004293a:	add    DWORD PTR [rax],eax
   14004293c:	add    BYTE PTR [rax],al
   14004293e:	add    BYTE PTR [rax+0x100000b4],al
   140042944:	add    al,0x1
   140042946:	pop    rbx
   140042947:	add    BYTE PTR [rax],al
   140042949:	add    BYTE PTR [rcx],al
   14004294b:	add    BYTE PTR [rax],al
   14004294d:	add    BYTE PTR [rax],al
   14004294f:	adc    BYTE PTR [rax+0x140015d],0x0
   140042956:	add    BYTE PTR [rax],al
   140042958:	adc    BYTE PTR [rax+0x1],bl
   14004295b:	rex add DWORD PTR [rax],eax
   14004295e:	add    BYTE PTR [rax],al
   140042960:	adc    BYTE PTR [rdx+0x1],bl
   140042963:	rex add DWORD PTR [rax],eax
   140042966:	add    BYTE PTR [rax],al
   140042968:	loopne 0x1400429c1
   14004296a:	add    eax,DWORD PTR [rax+0x1]
   14004296d:	add    BYTE PTR [rax],al
   14004296f:	add    BYTE PTR [rax],dl
   140042971:	pop    rcx
   140042972:	add    DWORD PTR [rax+0x1],eax
   140042975:	add    BYTE PTR [rax],al
   140042977:	add    BYTE PTR [rax+0x5d],ah
   14004297a:	add    DWORD PTR [rax+0x1],eax
   14004297d:	add    BYTE PTR [rax],al
   14004297f:	add    al,dh
   140042981:	pop    rbp
   140042982:	add    DWORD PTR [rax+0x1],eax
   140042985:	add    BYTE PTR [rax],al
   140042987:	add    al,al
   140042989:	pop    rax
   14004298a:	add    eax,DWORD PTR [rax+0x1]
   14004298d:	add    BYTE PTR [rax],al
   14004298f:	add    BYTE PTR [rax],al
   140042991:	pop    rcx
   140042992:	add    DWORD PTR [rax+0x1],eax
   140042995:	add    BYTE PTR [rax],al
   140042997:	add    BYTE PTR [rax],al
   140042999:	pop    rax
   14004299a:	add    DWORD PTR [rax+0x1],eax
   14004299d:	add    BYTE PTR [rax],al
   14004299f:	add    al,ah
   1400429a1:	pop    rbp
   1400429a2:	add    DWORD PTR [rax+0x1],eax
   1400429a5:	add    BYTE PTR [rax],al
   1400429a7:	add    al,dh
   1400429a9:	int    0x0
   1400429ab:	rex add DWORD PTR [rax],eax
   1400429ae:	add    BYTE PTR [rax],al
   1400429b0:	push   rax
   1400429b1:	pop    rax
   1400429b2:	add    eax,DWORD PTR [rax+0x1]
   1400429b5:	add    BYTE PTR [rax],al
   1400429b7:	add    BYTE PTR [rax+0x14000cc],al
   1400429bd:	add    BYTE PTR [rax],al
   1400429bf:	add    BYTE PTR [rax+0x140015d],al
   1400429c5:	add    BYTE PTR [rax],al
   1400429c7:	add    al,dh
   1400429c9:	push   rdi
   1400429ca:	add    DWORD PTR [rax+0x1],eax
   1400429cd:	add    BYTE PTR [rax],al
   1400429cf:	add    BYTE PTR [rax],al
   1400429d1:	pop    rdx
   1400429d2:	add    DWORD PTR [rax+0x1],eax
   1400429d5:	add    BYTE PTR [rax],al
   1400429d7:	add    al,dl
   1400429d9:	pop    rax
   1400429da:	add    eax,DWORD PTR [rax+0x1]
   1400429dd:	add    BYTE PTR [rax],al
   1400429df:	add    al,al
   1400429e1:	pop    rcx
   1400429e2:	add    eax,DWORD PTR [rax+0x1]
   1400429e5:	add    BYTE PTR [rax],al
   1400429e7:	add    BYTE PTR [rax+0x1400359],al
   1400429ed:	add    BYTE PTR [rax],al
   1400429ef:	add    BYTE PTR [rax+0x14002cf],dl
   1400429f5:	add    BYTE PTR [rax],al
   1400429f7:	add    BYTE PTR [rax],ah
   1400429f9:	scas   al,BYTE PTR es:[rdi]
   1400429fa:	add    al,BYTE PTR [rax+0x1]
   1400429fd:	add    BYTE PTR [rax],al
   1400429ff:	add    al,dl
   140042a01:	add    eax,DWORD PTR [r8+0x1]
   140042a05:	add    BYTE PTR [rax],al
   140042a07:	add    BYTE PTR [rax-0x3f],dl
   140042a0a:	add    al,BYTE PTR [rax+0x1]
   140042a0d:	add    BYTE PTR [rax],al
   140042a0f:	add    BYTE PTR [rax],dh
   140042a11:	rol    DWORD PTR [rdx],0x40
   140042a14:	add    DWORD PTR [rax],eax
   140042a16:	add    BYTE PTR [rax],al
   140042a18:	movabs al,ds:0xa0000000014002bb
   140042a21:	rol    DWORD PTR [rdx],0x40
   140042a24:	add    DWORD PTR [rax],eax
   140042a26:	add    BYTE PTR [rax],al
   140042a28:	rex sbb eax,0x14001
   140042a2e:	add    BYTE PTR [rax],al
   140042a30:	or     BYTE PTR [rcx+0x1],0x40
   140042a34:	add    DWORD PTR [rax],eax
   140042a36:	add    BYTE PTR [rax],al
   140042a38:	xor    BYTE PTR [rcx+0x3],bl
   140042a3b:	rex add DWORD PTR [rax],eax
   140042a3e:	add    BYTE PTR [rax],al
   140042a40:	rcr    BYTE PTR [rax+0x1],0x40
   140042a44:	add    DWORD PTR [rax],eax
   140042a46:	add    BYTE PTR [rax],al
   140042a48:	or     BYTE PTR [rcx+0x1],0x40
   140042a4c:	add    DWORD PTR [rax],eax
   140042a4e:	add    BYTE PTR [rax],al
   140042a50:	shr    BYTE PTR [rdx+rax*1+0x140],1
   140042a57:	add    al,dh
   140042a59:	pop    rax
   140042a5a:	add    DWORD PTR [rax+0x1],eax
   140042a5d:	add    BYTE PTR [rax],al
   140042a5f:	add    al,ah
   140042a61:	push   rdi
   140042a62:	add    DWORD PTR [rax+0x1],eax
   140042a65:	add    BYTE PTR [rax],al
   140042a67:	add    al,dh
   140042a69:	pop    rcx
   140042a6a:	add    DWORD PTR [rax+0x1],eax
   140042a6d:	add    BYTE PTR [rax],al
   140042a6f:	add    BYTE PTR [rax+0x1400302],al
   140042a75:	add    BYTE PTR [rax],al
   140042a77:	add    BYTE PTR [rax],dh
   140042a79:	iret   
   140042a7a:	add    al,BYTE PTR [rax+0x1]
   140042a7d:	add    BYTE PTR [rax],al
   140042a7f:	add    al,ah
   140042a81:	lods   eax,DWORD PTR ds:[rsi]
   140042a82:	add    al,BYTE PTR [rax+0x1]
   140042a85:	add    BYTE PTR [rax],al
   140042a87:	add    BYTE PTR [rax+0x14002d0],ah
   140042a8d:	add    BYTE PTR [rax],al
   140042a8f:	add    al,dl
   140042a91:	or     al,0x3
   140042a93:	rex add DWORD PTR [rax],eax
   140042a96:	add    BYTE PTR [rax],al
   140042a98:	movabs al,ds:0xc00000000140030d
   140042aa1:	pop    rax
   140042aa2:	add    DWORD PTR [rax+0x1],eax
   140042aa5:	add    BYTE PTR [rax],al
   140042aa7:	add    al,al
   140042aa9:	pop    rax
   140042aaa:	add    DWORD PTR [rax+0x1],eax
   140042aad:	add    BYTE PTR [rax],al
   140042aaf:	add    BYTE PTR [rax],dl
   140042ab1:	or     al,0x3
   140042ab3:	rex add DWORD PTR [rax],eax
   140042ab6:	add    BYTE PTR [rax],al
   140042ab8:	or     BYTE PTR [rcx+0x1],0x40
   140042abc:	add    DWORD PTR [rax],eax
   140042abe:	add    BYTE PTR [rax],al
   140042ac0:	loopne 0x140042ac5
   140042ac2:	add    eax,DWORD PTR [rax+0x1]
   140042ac5:	add    BYTE PTR [rax],al
   140042ac7:	add    BYTE PTR [rax+0x4],ah
   140042aca:	add    DWORD PTR [rax+0x1],eax
   140042acd:	add    BYTE PTR [rax],al
   140042acf:	add    BYTE PTR [rax+0x1400105],al
   140042ad5:	add    BYTE PTR [rax],al
   140042ad7:	add    BYTE PTR [rax],dh
   140042ad9:	add    DWORD PTR [rbx],eax
   140042adb:	rex add DWORD PTR [rax],eax
   140042ade:	add    BYTE PTR [rax],al
   140042ae0:	adc    BYTE PTR [rsi],al
   140042ae2:	add    DWORD PTR [rax+0x1],eax
   140042ae5:	add    BYTE PTR [rax],al
   140042ae7:	add    BYTE PTR [rax],dh
   140042ae9:	(bad)  
   140042aea:	add    DWORD PTR [rax+0x1],eax
   140042aed:	add    BYTE PTR [rax],al
   140042aef:	add    al,al
   140042af1:	or     al,BYTE PTR [rbx]
   140042af3:	rex add DWORD PTR [rax],eax
   140042af6:	add    BYTE PTR [rax],al
   140042af8:	lock add eax,0x14003
   140042afe:	add    BYTE PTR [rax],al
   140042b00:	mov    al,0xce
   140042b02:	add    al,BYTE PTR [rax+0x1]
   140042b05:	add    BYTE PTR [rax],al
   140042b07:	add    al,dl
   140042b09:	lods   eax,DWORD PTR ds:[rsi]
   140042b0a:	add    al,BYTE PTR [rax+0x1]
   140042b0d:	add    BYTE PTR [rax],al
   140042b0f:	add    al,dh
   140042b11:	iret   
   140042b12:	add    al,BYTE PTR [rax+0x1]
   140042b15:	add    BYTE PTR [rax],al
   140042b17:	add    BYTE PTR [rax+0x14002aa],ah
   140042b1d:	add    BYTE PTR [rax],al
   140042b1f:	add    BYTE PTR [rax],dh
   140042b21:	(bad)  
   140042b22:	add    al,BYTE PTR [rax+0x1]
   140042b25:	add    BYTE PTR [rax],al
   140042b27:	add    BYTE PTR [rax+0x14000c1],dh
   140042b2d:	add    BYTE PTR [rax],al
   140042b2f:	add    BYTE PTR [rax],ah
   140042b31:	add    eax,DWORD PTR [r8+0x1]
   140042b35:	add    BYTE PTR [rax],al
   140042b37:	add    BYTE PTR [rax-0x56],ah
   140042b3a:	add    al,BYTE PTR [rax+0x1]
   140042b3d:	add    BYTE PTR [rax],al
   140042b3f:	add    BYTE PTR [rax+0x59],dl
   140042b42:	add    DWORD PTR [rax+0x1],eax
   140042b45:	add    BYTE PTR [rax],al
   140042b47:	add    BYTE PTR [rax+0x58],ah
   140042b4a:	add    DWORD PTR [rax+0x1],eax
   140042b4d:	add    BYTE PTR [rax],al
   140042b4f:	add    BYTE PTR [rax+0x5a],ah
   140042b52:	add    DWORD PTR [rax+0x1],eax
   140042b55:	add    BYTE PTR [rax],al
   140042b57:	add    al,ah
   140042b59:	push   rdi
   140042b5a:	add    eax,DWORD PTR [rax+0x1]
   140042b5d:	add    BYTE PTR [rax],al
   140042b5f:	add    BYTE PTR [rax+0x59],al
   140042b62:	add    DWORD PTR [rax+0x1],eax
   140042b65:	add    BYTE PTR [rax],al
   140042b67:	add    BYTE PTR [rax+0x58],dl
   140042b6a:	add    DWORD PTR [rax+0x1],eax
   140042b6d:	add    BYTE PTR [rax],al
   140042b6f:	add    BYTE PTR [rax+0x5a],dl
   140042b72:	add    DWORD PTR [rax+0x1],eax
   140042b75:	add    BYTE PTR [rax],al
   140042b77:	add    al,al
   140042b79:	pop    rax
   140042b7a:	add    eax,DWORD PTR [rax+0x1]
   140042b7d:	add    BYTE PTR [rax],al
   140042b7f:	add    BYTE PTR [rax+0x59],ah
   140042b82:	add    DWORD PTR [rax+0x1],eax
   140042b85:	add    BYTE PTR [rax],al
   140042b87:	add    BYTE PTR [rax+0x58],al
   140042b8a:	add    DWORD PTR [rax+0x1],eax
   140042b8d:	add    BYTE PTR [rax],al
   140042b8f:	add    BYTE PTR [rax+0x5a],al
   140042b92:	add    DWORD PTR [rax+0x1],eax
   140042b95:	add    BYTE PTR [rax],al
   140042b97:	add    al,dh
   140042b99:	int    0x0
   140042b9b:	rex add DWORD PTR [rax],eax
   140042b9e:	add    BYTE PTR [rax],al
   140042ba0:	push   rax
   140042ba1:	pop    rax
   140042ba2:	add    eax,DWORD PTR [rax+0x1]
   140042ba5:	add    BYTE PTR [rax],al
   140042ba7:	add    BYTE PTR [rax+0x14000cc],al
   140042bad:	add    BYTE PTR [rax],al
   140042baf:	add    BYTE PTR [rax],dh
   140042bb1:	pop    rcx
   140042bb2:	add    DWORD PTR [rax+0x1],eax
   140042bb5:	add    BYTE PTR [rax],al
   140042bb7:	add    BYTE PTR [rax],dh
   140042bb9:	pop    rax
   140042bba:	add    DWORD PTR [rax+0x1],eax
   140042bbd:	add    BYTE PTR [rax],al
   140042bbf:	add    BYTE PTR [rax],dh
   140042bc1:	pop    rdx
   140042bc2:	add    DWORD PTR [rax+0x1],eax
   140042bc5:	add    BYTE PTR [rax],al
   140042bc7:	add    al,dl
   140042bc9:	pop    rax
   140042bca:	add    eax,DWORD PTR [rax+0x1]
   140042bcd:	add    BYTE PTR [rax],al
   140042bcf:	add    al,al
   140042bd1:	pop    rcx
   140042bd2:	add    eax,DWORD PTR [rax+0x1]
   140042bd5:	add    BYTE PTR [rax],al
   140042bd7:	add    BYTE PTR [rax+0x1400359],al
   140042bdd:	add    BYTE PTR [rax],al
   140042bdf:	add    al,al
   140042be1:	mov    DWORD PTR [rax],0x140
   140042be7:	add    BYTE PTR [rax-0x52],ah
   140042bea:	add    al,BYTE PTR [rax+0x1]
   140042bed:	add    BYTE PTR [rax],al
   140042bef:	add    al,ah
   140042bf1:	rol    BYTE PTR [rdx],1
   140042bf3:	rex add DWORD PTR [rax],eax
   140042bf6:	add    BYTE PTR [rax],al
   140042bf8:	push   rax
   140042bf9:	rol    DWORD PTR [rdx],0x40
   140042bfc:	add    DWORD PTR [rax],eax
   140042bfe:	add    BYTE PTR [rax],al
   140042c00:	xor    cl,al
   140042c02:	add    al,BYTE PTR [rax+0x1]
   140042c05:	add    BYTE PTR [rax],al
   140042c07:	add    BYTE PTR [rax+0x14002bb],ah
   140042c0d:	add    BYTE PTR [rax],al
   140042c0f:	add    BYTE PTR [rax+0x14002c1],ah
   140042c15:	add    BYTE PTR [rax],al
   140042c17:	add    BYTE PTR [rax+0x1d],al
   140042c1a:	add    DWORD PTR [rax+0x1],eax
   140042c1d:	add    BYTE PTR [rax],al
   140042c1f:	add    BYTE PTR [rax+0x1400149],al
   140042c25:	add    BYTE PTR [rax],al
   140042c27:	add    BYTE PTR [rax],dh
   140042c29:	pop    rcx
   140042c2a:	add    eax,DWORD PTR [rax+0x1]
   140042c2d:	add    BYTE PTR [rax],al
   140042c2f:	add    al,al
   140042c31:	pop    rax
   140042c32:	add    DWORD PTR [rax+0x1],eax
   140042c35:	add    BYTE PTR [rax],al
   140042c37:	add    BYTE PTR [rax+0x1400149],al
   140042c3d:	add    BYTE PTR [rax],al
   140042c3f:	add    al,ah
   140042c41:	stos   BYTE PTR es:[rdi],al
   140042c42:	add    al,BYTE PTR [rax+0x1]
   140042c45:	add    BYTE PTR [rax],al
   140042c47:	add    BYTE PTR [rax+0x140015b],ah
   140042c4d:	add    BYTE PTR [rax],al
   140042c4f:	add    al,dl
   140042c51:	pop    rdx
   140042c52:	add    DWORD PTR [rax+0x1],eax
   140042c55:	add    BYTE PTR [rax],al
   140042c57:	add    BYTE PTR [rax+0x5c],ah
   140042c5a:	add    DWORD PTR [rax+0x1],eax
   140042c5d:	add    BYTE PTR [rax],al
   140042c5f:	add    al,ah
   140042c61:	xor    BYTE PTR [rbx],al
   140042c63:	rex add DWORD PTR [rax],eax
   140042c66:	add    BYTE PTR [rax],al
   140042c68:	jo     0x140042c9e
   140042c6a:	add    eax,DWORD PTR [rax+0x1]
   140042c6d:	add    BYTE PTR [rax],al
   140042c6f:	add    al,dl
   140042c71:	xor    eax,DWORD PTR [rbx]
   140042c73:	rex add DWORD PTR [rax],eax
   140042c76:	add    BYTE PTR [rax],al
   140042c78:	rex xor eax,DWORD PTR [rbx]
   140042c7b:	rex add DWORD PTR [rax],eax
   140042c7e:	add    BYTE PTR [rax],al
   140042c80:	nop
   140042c81:	pop    rbx
   140042c82:	add    DWORD PTR [rax+0x1],eax
   140042c85:	add    BYTE PTR [rax],al
   140042c87:	add    al,al
   140042c89:	pop    rdx
   140042c8a:	add    DWORD PTR [rax+0x1],eax
   140042c8d:	add    BYTE PTR [rax],al
   140042c8f:	add    BYTE PTR [rax+0x5c],dl
   140042c92:	add    DWORD PTR [rax+0x1],eax
   140042c95:	add    BYTE PTR [rax],al
   140042c97:	add    BYTE PTR [rax],dh
   140042c99:	xor    BYTE PTR [rbx],al
   140042c9b:	rex add DWORD PTR [rax],eax
   140042c9e:	add    BYTE PTR [rax],al
   140042ca0:	sbb    BYTE PTR [rbx+0x1],0x40
   140042ca4:	add    DWORD PTR [rax],eax
   140042ca6:	add    BYTE PTR [rax],al
   140042ca8:	mov    al,0x5a
   140042caa:	add    DWORD PTR [rax+0x1],eax
   140042cad:	add    BYTE PTR [rax],al
   140042caf:	add    BYTE PTR [rax+0x5c],al
   140042cb2:	add    DWORD PTR [rax+0x1],eax
   140042cb5:	add    BYTE PTR [rax],al
   140042cb7:	add    BYTE PTR [rax],al
   140042cb9:	add    eax,DWORD PTR ss:[rax+0x1]
   140042cbd:	add    BYTE PTR [rax],al
   140042cbf:	add    BYTE PTR [rax+0x14000d7],al
   140042cc5:	add    BYTE PTR [rax],al
   140042cc7:	add    BYTE PTR [rax],ah
   140042cc9:	(bad)  
   140042cca:	add    BYTE PTR [rax+0x1],al
   140042ccd:	add    BYTE PTR [rax],al
   140042ccf:	add    BYTE PTR [rax-0xa],al
   140042cd2:	add    al,BYTE PTR [rax+0x1]
   140042cd5:	add    BYTE PTR [rax],al
   140042cd7:	add    BYTE PTR [rax+0x14002ed],al
   140042cdd:	add    BYTE PTR [rax],al
   140042cdf:	add    BYTE PTR [rax],al
   140042ce1:	test   DWORD PTR [rdx],0x140
   140042ce7:	add    al,al
   140042ce9:	(bad)  
   140042cea:	add    eax,DWORD PTR [rax+0x1]
   140042ced:	add    BYTE PTR [rax],al
   140042cef:	add    BYTE PTR [rax+0x38],dh
   140042cf2:	add    eax,DWORD PTR [rax+0x1]
   140042cf5:	add    BYTE PTR [rax],al
   140042cf7:	add    al,dl
   140042cf9:	pop    rbx
   140042cfa:	add    DWORD PTR [rax+0x1],eax
   140042cfd:	add    BYTE PTR [rax],al
   140042cff:	add    BYTE PTR [rax],al
   140042d01:	pop    rbx
   140042d02:	add    DWORD PTR [rax+0x1],eax
   140042d05:	add    BYTE PTR [rax],al
   140042d07:	add    BYTE PTR [rax+0x140015c],dl
   140042d0d:	add    BYTE PTR [rax],al
   140042d0f:	add    BYTE PTR [rax],ah
   140042d11:	hlt    
   140042d12:	add    al,BYTE PTR [rax+0x1]
   140042d15:	add    BYTE PTR [rax],al
   140042d17:	add    al,al
   140042d19:	pop    rbx
   140042d1a:	add    DWORD PTR [rax+0x1],eax
   140042d1d:	add    BYTE PTR [rax],al
   140042d1f:	add    al,dh
   140042d21:	pop    rdx
   140042d22:	add    DWORD PTR [rax+0x1],eax
   140042d25:	add    BYTE PTR [rax],al
   140042d27:	add    BYTE PTR [rax+0x140015c],al
   140042d2d:	add    BYTE PTR [rax],al
   140042d2f:	add    BYTE PTR [rax+0x10],dh
   140042d32:	add    DWORD PTR [rax+0x1],eax
   140042d35:	add    BYTE PTR [rax],al
   140042d37:	add    BYTE PTR [rax-0x3],dh
   140042d3a:	add    al,BYTE PTR [rax+0x1]
   140042d3d:	add    BYTE PTR [rax],al
   140042d3f:	add    BYTE PTR [rax-0x12],ah
   140042d42:	add    al,BYTE PTR [rax+0x1]
   140042d45:	add    BYTE PTR [rax],al
   140042d47:	add    BYTE PTR [rax-0x6],al
   140042d4a:	add    al,BYTE PTR [rax+0x1]
   140042d4d:	add    BYTE PTR [rax],al
   140042d4f:	add    BYTE PTR [rax-0x2],dl
   140042d52:	add    al,BYTE PTR [rax+0x1]
   140042d55:	add    BYTE PTR [rax],al
   140042d57:	add    BYTE PTR [rax-0x1],dh
   140042d5a:	add    al,BYTE PTR [rax+0x1]
   140042d5d:	add    BYTE PTR [rax],al
   140042d5f:	add    BYTE PTR [rax+0x14002fc],al
   140042d65:	add    BYTE PTR [rax],al
   140042d67:	add    BYTE PTR [rax+0x140015b],dh
   140042d6d:	add    BYTE PTR [rax],al
   140042d6f:	add    al,ah
   140042d71:	pop    rdx
   140042d72:	add    DWORD PTR [rax+0x1],eax
   140042d75:	add    BYTE PTR [rax],al
   140042d77:	add    BYTE PTR [rax+0x5c],dh
   140042d7a:	add    DWORD PTR [rax+0x1],eax
   140042d7d:	add    BYTE PTR [rax],al
   140042d7f:	add    BYTE PTR [rax+0x12],al
   140042d82:	add    DWORD PTR [rax+0x1],eax
   140042d85:	add    BYTE PTR [rax],al
   140042d87:	add    al,ah
   140042d89:	add    BYTE PTR [rbx],al
   140042d8b:	rex add DWORD PTR [rax],eax
   140042d8e:	add    BYTE PTR [rax],al
   140042d90:	rcr    BYTE PTR [rax+0x1],0x40
   140042d94:	add    DWORD PTR [rax],eax
   140042d96:	add    BYTE PTR [rax],al
   140042d98:	movabs al,ds:0xc0000000014002f6
   140042da1:	in     eax,dx
   140042da2:	add    al,BYTE PTR [rax+0x1]
   140042da5:	add    BYTE PTR [rax],al
   140042da7:	add    BYTE PTR [rax-0x9],al
   140042daa:	add    al,BYTE PTR [rax+0x1]
   140042dad:	add    BYTE PTR [rax],al
   140042daf:	add    BYTE PTR [rax],al
   140042db1:	in     eax,dx
   140042db2:	add    al,BYTE PTR [rax+0x1]
   140042db5:	add    BYTE PTR [rax],al
   140042db7:	add    BYTE PTR [rax],ah
   140042db9:	sti    
   140042dba:	add    al,BYTE PTR [rax+0x1]
   140042dbd:	add    BYTE PTR [rax],al
   140042dbf:	add    BYTE PTR [rax],dh
   140042dc1:	or     al,BYTE PTR [rcx]
   140042dc3:	rex add DWORD PTR [rax],eax
   140042dc6:	add    BYTE PTR [rax],al
   140042dc8:	xor    cl,bh
   140042dca:	add    al,BYTE PTR [rax+0x1]
   140042dcd:	add    BYTE PTR [rax],al
   140042dcf:	add    BYTE PTR [rax+0x14002f7],al
   140042dd5:	add    BYTE PTR [rax],al
   140042dd7:	add    al,al
   140042dd9:	icebp  
   140042dda:	add    al,BYTE PTR [rax+0x1]
   140042ddd:	add    BYTE PTR [rax],al
   140042ddf:	add    BYTE PTR [rax],ah
   140042de1:	or     eax,DWORD PTR [rcx]
   140042de3:	rex add DWORD PTR [rax],eax
   140042de6:	add    BYTE PTR [rax],al
   140042de8:	push   rax
   140042de9:	(bad)  
   140042dea:	add    DWORD PTR [rax+0x1],eax
   140042ded:	add    BYTE PTR [rax],al
   140042def:	add    al,ah
   140042df1:	or     eax,0x14001
   140042df6:	add    BYTE PTR [rax],al
   140042df8:	rex or eax,0x14001
   140042dfe:	add    BYTE PTR [rax],al
   140042e00:	rcr    BYTE PTR [rax+0x1],1
   140042e03:	rex add DWORD PTR [rax],eax
   140042e06:	add    BYTE PTR [rax],al
   140042e08:	lock or al,0x1
   140042e0b:	rex add DWORD PTR [rax],eax
   140042e0e:	add    BYTE PTR [rax],al
   140042e10:	(bad)  
   140042e11:	or     al,0x1
   140042e13:	rex add DWORD PTR [rax],eax
   140042e16:	add    BYTE PTR [rax],al
   140042e18:	loopne 0x140042e25
   140042e1a:	add    DWORD PTR [rax+0x1],eax
   140042e1d:	add    BYTE PTR [rax],al
   140042e1f:	add    BYTE PTR [rax+0x5b],dh
   140042e22:	add    DWORD PTR [rax+0x1],eax
   140042e25:	add    BYTE PTR [rax],al
   140042e27:	add    al,ah
   140042e29:	(bad)  
   140042e2a:	add    DWORD PTR [rax+0x1],eax
   140042e2d:	add    BYTE PTR [rax],al
   140042e2f:	add    BYTE PTR [rax-0xb],al
   140042e32:	add    al,BYTE PTR [rax+0x1]
   140042e35:	add    BYTE PTR [rax],al
   140042e37:	add    BYTE PTR [rax+0x14000c1],dh
   140042e3d:	add    BYTE PTR [rax],al
   140042e3f:	add    BYTE PTR [rax],ah
   140042e41:	add    eax,DWORD PTR [r8+0x1]
   140042e45:	add    BYTE PTR [rax],al
   140042e47:	add    BYTE PTR [rax+0x14002ec],al
   140042e4d:	add    BYTE PTR [rax],al
   140042e4f:	add    al,al
   140042e51:	cmc    
   140042e52:	add    al,BYTE PTR [rax+0x1]
   140042e55:	add    BYTE PTR [rax],al
   140042e57:	add    BYTE PTR [rax+0x14000c1],dh
   140042e5d:	add    BYTE PTR [rax],al
   140042e5f:	add    BYTE PTR [rax],ah
   140042e61:	add    eax,DWORD PTR [r8+0x1]
   140042e65:	add    BYTE PTR [rax],al
   140042e67:	add    al,al
   140042e69:	in     al,dx
   140042e6a:	add    al,BYTE PTR [rax+0x1]
   140042e6d:	add    BYTE PTR [rax],al
   140042e6f:	add    BYTE PTR [rax],dh
   140042e71:	adc    al,BYTE PTR [rbx]
   140042e73:	rex add DWORD PTR [rax],eax
   140042e76:	add    BYTE PTR [rax],al
   140042e78:	loopne 0x140042e90
   140042e7a:	add    eax,DWORD PTR [rax+0x1]
   140042e7d:	add    BYTE PTR [rax],al
   140042e7f:	add    BYTE PTR [rax+0x12],dh
   140042e82:	add    eax,DWORD PTR [rax+0x1]
   140042e85:	add    BYTE PTR [rax],al
   140042e87:	add    BYTE PTR [rax+0x17],al
   140042e8a:	add    eax,DWORD PTR [rax+0x1]
   140042e8d:	add    BYTE PTR [rax],al
   140042e8f:	add    BYTE PTR [rax+0x1400312],dh
   140042e95:	add    BYTE PTR [rax],al
   140042e97:	add    al,dl
   140042e99:	(bad)  
   140042e9a:	add    eax,DWORD PTR [rax+0x1]
   140042e9d:	add    BYTE PTR [rax],al
   140042e9f:	add    al,dh
   140042ea1:	adc    al,BYTE PTR [rbx]
   140042ea3:	rex add DWORD PTR [rax],eax
   140042ea6:	add    BYTE PTR [rax],al
   140042ea8:	and    BYTE PTR [rax],bl
   140042eaa:	add    eax,DWORD PTR [rax+0x1]
   140042ead:	add    BYTE PTR [rax],al
   140042eaf:	add    BYTE PTR [rax+0x140015d],dl
   140042eb5:	add    BYTE PTR [rax],al
   140042eb7:	add    BYTE PTR [rax],dl
   140042eb9:	pop    rax
   140042eba:	add    DWORD PTR [rax+0x1],eax
   140042ebd:	add    BYTE PTR [rax],al
   140042ebf:	add    BYTE PTR [rax],dl
   140042ec1:	pop    rdx
   140042ec2:	add    DWORD PTR [rax+0x1],eax
   140042ec5:	add    BYTE PTR [rax],al
   140042ec7:	add    BYTE PTR [rax+0x3d],dh
   140042eca:	add    eax,DWORD PTR [rax+0x1]
   140042ecd:	add    BYTE PTR [rax],al
   140042ecf:	add    al,dl
   140042ed1:	rex.XB add eax,DWORD PTR [r8+0x1]
   140042ed5:	add    BYTE PTR [rax],al
   140042ed7:	add    al,dh
   140042ed9:	rex.X add eax,DWORD PTR [rax+0x1]
   140042edd:	add    BYTE PTR [rax],al
   140042edf:	add    BYTE PTR [rax],dl
   140042ee1:	rex.X add eax,DWORD PTR [rax+0x1]
   140042ee5:	add    BYTE PTR [rax],al
   140042ee7:	add    BYTE PTR [rax],dl
   140042ee9:	pop    rcx
   140042eea:	add    DWORD PTR [rax+0x1],eax
   140042eed:	add    BYTE PTR [rax],al
   140042eef:	add    BYTE PTR [rax+0x5d],ah
   140042ef2:	add    DWORD PTR [rax+0x1],eax
   140042ef5:	add    BYTE PTR [rax],al
   140042ef7:	add    al,dh
   140042ef9:	pop    rbp
   140042efa:	add    DWORD PTR [rax+0x1],eax
   140042efd:	add    BYTE PTR [rax],al
   140042eff:	add    BYTE PTR [rax+0x44],dh
   140042f02:	add    eax,DWORD PTR [rax+0x1]
   140042f05:	add    BYTE PTR [rax],al
   140042f07:	add    BYTE PTR [rax],dl
   140042f09:	rex.RX add r8d,DWORD PTR [rax+0x1]
   140042f0d:	add    BYTE PTR [rax],al
   140042f0f:	add    BYTE PTR [rax],dl
   140042f11:	xor    al,0x1
   140042f13:	rex add DWORD PTR [rax],eax
   140042f16:	add    BYTE PTR [rax],al
   140042f18:	add    BYTE PTR [rcx+0x1],bl
   140042f1b:	rex add DWORD PTR [rax],eax
   140042f1e:	add    BYTE PTR [rax],al
   140042f20:	add    BYTE PTR [rax+0x1],bl
   140042f23:	rex add DWORD PTR [rax],eax
   140042f26:	add    BYTE PTR [rax],al
   140042f28:	loopne 0x140042f87
   140042f2a:	add    DWORD PTR [rax+0x1],eax
   140042f2d:	add    BYTE PTR [rax],al
   140042f2f:	add    BYTE PTR [rax+0x14000db],dh
   140042f35:	add    BYTE PTR [rax],al
   140042f37:	add    BYTE PTR [rax+0x140015d],al
   140042f3d:	add    BYTE PTR [rax],al
   140042f3f:	add    al,dh
   140042f41:	push   rdi
   140042f42:	add    DWORD PTR [rax+0x1],eax
   140042f45:	add    BYTE PTR [rax],al
   140042f47:	add    BYTE PTR [rax],al
   140042f49:	pop    rdx
   140042f4a:	add    DWORD PTR [rax+0x1],eax
   140042f4d:	add    BYTE PTR [rax],al
   140042f4f:	add    al,al
   140042f51:	xor    eax,0x14001
   140042f56:	add    BYTE PTR [rax],al
   140042f58:	rex
   140042f59:	rex.RXB add r8d,DWORD PTR [r8+0x1]
   140042f5d:	add    BYTE PTR [rax],al
   140042f5f:	add    al,dl
   140042f61:	add    r8d,DWORD PTR [rax+0x1]
   140042f65:	add    BYTE PTR [rax],al
   140042f67:	add    BYTE PTR [rax+0x40],dh
   140042f6a:	add    eax,DWORD PTR [rax+0x1]
   140042f6d:	add    BYTE PTR [rax],al
   140042f6f:	add    BYTE PTR [rax+0x14002cf],dl
   140042f75:	add    BYTE PTR [rax],al
   140042f77:	add    BYTE PTR [rax],ah
   140042f79:	scas   al,BYTE PTR es:[rdi]
   140042f7a:	add    al,BYTE PTR [rax+0x1]
   140042f7d:	add    BYTE PTR [rax],al
   140042f7f:	add    al,dl
   140042f81:	add    eax,DWORD PTR [r8+0x1]
   140042f85:	add    BYTE PTR [rax],al
   140042f87:	add    BYTE PTR [rax+0x34],ah
   140042f8a:	add    DWORD PTR [rax+0x1],eax
   140042f8d:	add    BYTE PTR [rax],al
   140042f8f:	add    al,dl
   140042f91:	rex.RXB add r8d,DWORD PTR [r8+0x1]
   140042f95:	add    BYTE PTR [rax],al
   140042f97:	add    BYTE PTR [rax+0x3e],al
   140042f9a:	add    eax,DWORD PTR [rax+0x1]
   140042f9d:	add    BYTE PTR [rax],al
   140042f9f:	add    BYTE PTR [rax+0x45],al
   140042fa2:	add    eax,DWORD PTR [rax+0x1]
   140042fa5:	add    BYTE PTR [rax],al
   140042fa7:	add    al,al
   140042fa9:	add    rax,QWORD PTR [rax+0x1]
   140042fad:	add    BYTE PTR [rax],al
   140042faf:	add    BYTE PTR [rax+0x1400349],dh
   140042fb5:	add    BYTE PTR [rax],al
   140042fb7:	add    BYTE PTR [rax+0x46],ah
   140042fba:	add    eax,DWORD PTR [rax+0x1]
   140042fbd:	add    BYTE PTR [rax],al
   140042fbf:	add    BYTE PTR [rax+0x1400340],ah
   140042fc5:	add    BYTE PTR [rax],al
   140042fc7:	add    BYTE PTR [rax+0x14000c1],dh
   140042fcd:	add    BYTE PTR [rax],al
   140042fcf:	add    BYTE PTR [rax],ah
   140042fd1:	add    eax,DWORD PTR [r8+0x1]
   140042fd5:	add    BYTE PTR [rax],al
   140042fd7:	add    BYTE PTR [rax+0x3c],al
   140042fda:	add    eax,DWORD PTR [rax+0x1]
   140042fdd:	add    BYTE PTR [rax],al
   140042fdf:	add    BYTE PTR [rax-0x61],dl
   140042fe2:	add    eax,DWORD PTR [rax+0x1]
   140042fe5:	add    BYTE PTR [rax],al
   140042fe7:	add    BYTE PTR [rax-0x60],dh
   140042fea:	add    eax,DWORD PTR [rax+0x1]
   140042fed:	add    BYTE PTR [rax],al
   140042fef:	add    al,dl
   140042ff1:	lahf   
   140042ff2:	add    eax,DWORD PTR [rax+0x1]
   140042ff5:	add    BYTE PTR [rax],al
   140042ff7:	add    BYTE PTR [rax-0x61],dl
   140042ffa:	add    eax,DWORD PTR [rax+0x1]
   140042ffd:	add    BYTE PTR [rax],al
   140042fff:	add    BYTE PTR [rax-0x60],dh
   140043002:	add    eax,DWORD PTR [rax+0x1]
   140043005:	add    BYTE PTR [rax],al
   140043007:	add    BYTE PTR [rax],ah
   140043009:	movabs al,ds:0x9f50000000014003
   140043012:	add    eax,DWORD PTR [rax+0x1]
   140043015:	add    BYTE PTR [rax],al
   140043017:	add    BYTE PTR [rax-0x60],dh
   14004301a:	add    eax,DWORD PTR [rax+0x1]
   14004301d:	add    BYTE PTR [rax],al
   14004301f:	add    BYTE PTR [rax+0x140039f],dl
   140043025:	add    BYTE PTR [rax],al
   140043027:	add    BYTE PTR [rax-0x61],dl
   14004302a:	add    eax,DWORD PTR [rax+0x1]
   14004302d:	add    BYTE PTR [rax],al
   14004302f:	add    BYTE PTR [rax-0x60],dh
   140043032:	add    eax,DWORD PTR [rax+0x1]
   140043035:	add    BYTE PTR [rax],al
   140043037:	add    BYTE PTR [rax],ah
   140043039:	rex.RX add DWORD PTR [rax+0x1],r8d
   14004303d:	add    BYTE PTR [rax],al
   14004303f:	add    BYTE PTR [rcx+0x0],al
   140043042:	push   rax
   140043043:	add    BYTE PTR [rax+0x0],dl
   140043046:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14004304b:	add    BYTE PTR [rax],al
   14004304d:	add    BYTE PTR [rax],al
   14004304f:	add    BYTE PTR [rcx],al
   140043051:	add    al,0x2
   140043053:	add    BYTE PTR [rax],al
   140043055:	add    BYTE PTR [rax],al
   140043057:	add    al,al
   140043059:	add    BYTE PTR [rax],al
   14004305b:	add    BYTE PTR [rax],al
   14004305d:	add    BYTE PTR [rax],al
   14004305f:	rex.RX add BYTE PTR [rax],r8b
   140043062:	add    BYTE PTR [rax],al
   140043064:	add    BYTE PTR [rax],al
   140043066:	add    BYTE PTR [rax],al
   140043068:	(bad)  
   140043069:	cli    
   14004306a:	test   DWORD PTR [rsi+rdx*2-0x3f],edi
   14004306e:	(bad)  
   14004306f:	rex lea ebx,[rdi+rax*1+0x39d4cff3]
   140043077:	or     eax,0x0
   14004307c:	add    BYTE PTR [rax],al
   14004307e:	add    BYTE PTR [rax],al
   140043080:	add    BYTE PTR [rdx+rax*1],al
   140043083:	add    BYTE PTR [rax],al
   140043085:	add    BYTE PTR [rax],al
   140043087:	add    al,al
   140043089:	add    BYTE PTR [rax],al
   14004308b:	add    BYTE PTR [rax],al
   14004308d:	add    BYTE PTR [rax],al
   14004308f:	rex.RX xchg ebx,eax
   140043091:	mov    eax,0x216f3883
   140043096:	xchg   esp,eax
   140043097:	rex lods eax,DWORD PTR ds:[rsi]
   140043099:	(bad)  
   14004309a:	(bad)  
   14004309b:	ret    0x85bd
   14004309e:	icebp  
   14004309f:	sub    esp,edi
   1400430a1:	xchg   esp,eax
   1400430a2:	leave  
   1400430a3:	(bad)  
   1400430a4:	sub    eax,DWORD PTR [rbx+0x34]
   1400430a7:	rex.W movabs ds:0x954b833bf1e1dcf7,al
   1400430b1:	rex.WRB
   1400430b2:	ds int3 
   1400430b4:	frstor [rbx]
   1400430b6:	rex.RX
   1400430b7:	rex.WR mov es,rsp
   1400430ba:	sub    BYTE PTR [rax+0x7129260d],bh
   1400430c0:	rex.RB js 0x140043126
   1400430c3:	gs jo  0x14004313a
   1400430c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   1400430cd:	add    BYTE PTR [rax],al
   1400430cf:	add    BYTE PTR [rdx+0x65],dl
   1400430d2:	je     0x140043149
   1400430d4:	jb     0x140043144
   1400430d6:	rex.W jb 0x1400430d9
   1400430d9:	add    BYTE PTR [rax],al
   1400430db:	add    BYTE PTR [rax],al
   1400430dd:	add    BYTE PTR [rax],al
   1400430df:	add    BYTE PTR [rdx+0x65],dl
   1400430e2:	je     0x140043159
   1400430e4:	jb     0x140043154
   1400430e6:	rex.W jb 0x140043144
   1400430e9:	push   rax
   1400430ea:	jb     0x140043151
   1400430ec:	push   rdx
   1400430ed:	gs ins BYTE PTR es:[rdi],dx
   1400430ef:	gs (bad) 
   1400430f1:	jae    0x140043158
   1400430f3:	pop    rbp
   1400430f4:	add    BYTE PTR [rax],al
   1400430f6:	add    BYTE PTR [rax],al
   1400430f8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400430fa:	addr32 rex.W jb 0x1400430fe
   1400430fe:	add    BYTE PTR [rax],al
   140043100:	rex.RX (bad) 
   140043102:	imul   ebp,DWORD PTR [rsi+rax*2+0x61],0x7473
   14004310a:	add    BYTE PTR [rax],al
   14004310c:	add    BYTE PTR [rax],al
   14004310e:	add    BYTE PTR [rax],al
   140043110:	and    eax,0x73006800
   140043115:	add    BYTE PTR [rax],ch
   140043117:	add    BYTE PTR [rip+0x29006400],ah        # 0x16904951d
   14004311d:	add    BYTE PTR [rax+rax*1+0x25],bl
   140043121:	add    BYTE PTR [rax+0x0],ch
   140043124:	jae    0x140043126
   140043126:	and    DWORD PTR [rax],eax
   140043128:	and    eax,0x3a007000
   14004312d:	add    BYTE PTR [rax],ah
	...
   140043137:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b304993d
   14004313d:	add    BYTE PTR [rcx],ah
   14004313f:	add    BYTE PTR [rip+0x3a007000],ah        # 0x17a04a145
   140043145:	add    BYTE PTR [rax],ah
	...
   14004314f:	add    BYTE PTR [rax],ch
   140043151:	add    BYTE PTR [rbx+0x0],ah
   140043154:	(bad)  
   140043155:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140043159:	add    BYTE PTR [rbp+0x0],ah
   14004315c:	jb     0x14004315e
   14004315e:	cmp    al,BYTE PTR [rax]
   140043160:	and    BYTE PTR [rax],al
   140043162:	and    eax,0x29007000
   140043167:	add    BYTE PTR [rax],ah
   140043169:	add    BYTE PTR [rax],al
   14004316b:	add    BYTE PTR [rax],al
   14004316d:	add    BYTE PTR [rax],al
   14004316f:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3049975
   140043175:	add    BYTE PTR [rax],ch
   140043177:	add    BYTE PTR [rip+0x29006400],ah        # 0x16904957d
   14004317d:	add    BYTE PTR [rax],ah
   14004317f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140043183:	add    BYTE PTR [rax+rax*1+0x28],ah
   140043187:	add    BYTE PTR [rip+0x29007800],ah        # 0x16904a98d
   14004318d:	add    BYTE PTR [rax],ah
   14004318f:	add    BYTE PTR [rip+0x38003000],ah        # 0x178046195
   140043195:	add    BYTE PTR [rax+0x0],bl
   140043198:	and    BYTE PTR [rax],al
   14004319a:	and    eax,0x73007700
	...
   1400431a7:	add    BYTE PTR [rax],ah
   1400431a9:	add    BYTE PTR [rax],ah
   1400431ab:	add    BYTE PTR [rax],ah
   1400431ad:	add    BYTE PTR [rax],ah
	...
   1400431b7:	add    BYTE PTR [rbp+0x0],cl
   1400431ba:	jae    0x1400431bc
   1400431bc:	add    BYTE PTR [edx],bh
   1400431bf:	add    BYTE PTR [rbx+0x0],bl
   1400431c2:	and    eax,0x73007700
   1400431c7:	add    BYTE PTR [rbp+0x0],bl
   1400431ca:	and    BYTE PTR [rax],al
   1400431cc:	add    BYTE PTR [rax],al
   1400431ce:	add    BYTE PTR [rax],al
   1400431d0:	rex.XB add BYTE PTR [r9+0x0],spl
   1400431d4:	ins    BYTE PTR es:[rdi],dx
   1400431d5:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400431d9:	add    BYTE PTR [rdi+0x0],ch
   1400431dc:	outs   dx,BYTE PTR ds:[rsi]
   1400431dd:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400431e1:	add    BYTE PTR [rax+0x0],bh
   1400431e4:	je     0x1400431e6
   1400431e6:	cmp    al,BYTE PTR [rax]
   1400431e8:	pop    rbx
   1400431e9:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b30499ef
   1400431ef:	add    BYTE PTR [rbp+0x0],bl
   1400431f2:	and    BYTE PTR [rax],al
   1400431f4:	add    BYTE PTR [rax],al
   1400431f6:	add    BYTE PTR [rax],al
   1400431f8:	pop    rbx
   1400431f9:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b30499ff
   1400431ff:	add    BYTE PTR [rax],ch
   140043201:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3049a07
   140043207:	add    BYTE PTR [rcx],ch
   140043209:	add    BYTE PTR [rbp+0x0],bl
   14004320c:	or     al,BYTE PTR [rax]
   14004320e:	add    BYTE PTR [rax],al
   140043210:	pop    rbx
   140043211:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3049a17
   140043217:	add    BYTE PTR [rbp+0x0],bl
   14004321a:	or     al,BYTE PTR [rax]
   14004321c:	add    BYTE PTR [rax],al
   14004321e:	add    BYTE PTR [rax],al
   140043220:	or     al,BYTE PTR [rax]
   140043222:	add    BYTE PTR [rax],al
   140043224:	add    BYTE PTR [rax],al
   140043226:	add    BYTE PTR [rax],al
   140043228:	rex.WR
   140043229:	fs jb  0x140043272
   14004322c:	(bad)  
   14004322d:	jae    0x1400432a3
   14004322f:	rex.RX (bad) 
   140043231:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   140043239:	gs jb  0x14004327f
   14004323c:	(bad)  
   14004323d:	ins    BYTE PTR es:[rdi],dx
   14004323e:	ins    BYTE PTR es:[rdi],dx
   14004323f:	outs   dx,DWORD PTR ds:[rsi]
   140043240:	jne    0x1400432b6
   140043242:	add    BYTE PTR [rax],al
   140043244:	add    BYTE PTR [rax],al
   140043246:	add    BYTE PTR [rax],al
   140043248:	push   rdx
   140043249:	je     0x1400432b7
   14004324b:	rex.WRX je 0x1400432a1
   14004324e:	je     0x1400432b1
   140043250:	je     0x1400432c7
   140043252:	jae    0x1400432a8
   140043254:	outs   dx,DWORD PTR ds:[rsi]
   140043255:	rex.R outs dx,DWORD PTR ds:[rsi]
   140043257:	jae    0x14004329e
   140043259:	jb     0x1400432cd
   14004325b:	outs   dx,DWORD PTR ds:[rsi]
   14004325c:	jb     0x1400432ac
   14004325e:	outs   dx,DWORD PTR ds:[rsi]
   14004325f:	push   rsp
   140043260:	gs (bad) 
   140043262:	add    BYTE PTR [rax],al
   140043264:	add    BYTE PTR [rax],al
   140043266:	add    BYTE PTR [rax],al
   140043268:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14004326f:	ins    BYTE PTR es:[rdi],dx
   140043270:	pop    rsp
   140043271:	jae    0x1400432d7
   140043273:	imul   ebx,DWORD PTR [rcx+rbp*2+0x6e],0x63
   140043278:	pop    rsp
   140043279:	ja     0x1400432e4
   14004327b:	ins    BYTE PTR es:[rdi],dx
   14004327c:	pop    rsp
   14004327d:	jb     0x1400432e4
   14004327f:	jae    0x1400432f6
   140043281:	ins    BYTE PTR es:[rdi],dx
   140043282:	je     0x1400432b2
   140043284:	push   0x57000000
   140043289:	add    BYTE PTR [rcx+0x0],ch
   14004328c:	outs   dx,BYTE PTR ds:[rsi]
   14004328d:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140043291:	add    BYTE PTR [rdi+0x0],ah
   140043294:	outs   dx,DWORD PTR ds:[rsi]
   140043295:	add    BYTE PTR [rsi+0x0],ch
	...
   1400432a0:	push   rbx
   1400432a1:	add    BYTE PTR [rbx+0x0],ah
   1400432a4:	jb     0x1400432a6
   1400432a6:	add    BYTE PTR gs:[rbp+0x0],ah
   1400432aa:	outs   dx,BYTE PTR ds:[rsi]
   1400432ab:	add    BYTE PTR [rip+0x61007300],ch        # 0x1a104a5b1
   1400432b1:	add    BYTE PTR [rsi+0x0],dh
   1400432b4:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   1400432c0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400432c4:	outs   dx,BYTE PTR ds:[rsi]
   1400432c5:	add    BYTE PTR [rbp+0x0],dh
   1400432c8:	(bad)  
   1400432c9:	add    BYTE PTR [rax+rax*1+0x4c],ch
   1400432cd:	add    BYTE PTR [rcx+0x0],ah
   1400432d0:	jne    0x1400432d2
   1400432d2:	outs   dx,BYTE PTR ds:[rsi]
   1400432d3:	add    BYTE PTR [rbx+0x0],ah
   1400432d6:	push   0x0
   1400432db:	add    BYTE PTR [rax],al
   1400432dd:	add    BYTE PTR [rax],al
   1400432df:	add    BYTE PTR [rbx+0x0],dl
   1400432e2:	add    BYTE PTR gs:[rbp+0x0],ah
   1400432e6:	imul   eax,DWORD PTR [rax],0x44
   1400432e9:	add    BYTE PTR [rbp+0x0],ah
   1400432ec:	jae    0x1400432ee
   1400432ee:	imul   eax,DWORD PTR [rax],0x74
   1400432f1:	add    BYTE PTR [rdi+0x0],ch
   1400432f4:	jo     0x1400432f6
   1400432f6:	add    BYTE PTR [rax],al
   1400432f8:	push   rdi
   1400432f9:	add    BYTE PTR [rcx+0x0],ch
   1400432fc:	outs   dx,BYTE PTR ds:[rsi]
   1400432fd:	add    BYTE PTR [rdx+0x0],dl
   140043300:	add    BYTE PTR [r8],r8b
   140043303:	add    BYTE PTR [rax],al
   140043305:	add    BYTE PTR [rax],al
   140043307:	add    BYTE PTR [rbp+0x0],dl
   14004330a:	jae    0x14004330c
   14004330c:	add    BYTE PTR gs:[rdx+0x0],dl
   140043310:	add    BYTE PTR gs:[rbx+0x0],dh
   140043314:	je     0x140043316
   140043316:	jb     0x140043318
   140043318:	imul   eax,DWORD PTR [rax],0x740063
   14004331e:	add    BYTE PTR gs:[rax+rax*1+0x4d],ah
   140043323:	add    BYTE PTR [rdi+0x0],ch
   140043326:	add    BYTE PTR fs:[rbp+0x0],ah
   14004332a:	add    BYTE PTR [rax],al
   14004332c:	add    BYTE PTR [rax],al
   14004332e:	add    BYTE PTR [rax],al
   140043330:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140043334:	jb     0x140043336
   140043336:	movsxd eax,DWORD PTR [rax]
   140043338:	add    BYTE PTR gs:[rcx+0x0],cl
   14004333c:	ins    DWORD PTR es:[rdi],dx
   14004333d:	add    BYTE PTR [rbp+0x0],ch
   140043340:	add    BYTE PTR gs:[rdx+0x0],dh
   140043344:	jae    0x140043346
   140043346:	imul   eax,DWORD PTR [rax],0x650076
   14004334c:	add    BYTE PTR [rax],al
   14004334e:	add    BYTE PTR [rax],al
   140043350:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140043354:	jb     0x140043356
   140043356:	movsxd eax,DWORD PTR [rax]
   140043358:	add    BYTE PTR gs:[rbx+0x0],al
   14004335c:	ins    BYTE PTR es:[rdi],dx
   14004335d:	add    BYTE PTR [rcx+0x0],ah
   140043360:	jae    0x140043362
   140043362:	jae    0x140043364
   140043364:	imul   eax,DWORD PTR [rax],0x63
   14004336a:	add    BYTE PTR [rax],al
   14004336c:	add    BYTE PTR [rax],al
   14004336e:	add    BYTE PTR [rax],al
   140043370:	rex.XB add BYTE PTR [r10+0x0],sil
   140043374:	(bad)  
   140043375:	add    BYTE PTR [rbx+0x0],dh
   140043378:	push   0x64006500
   14004337d:	add    BYTE PTR [rax],al
   14004337f:	add    BYTE PTR [rax+rax*1+0x61],dl
   140043383:	add    BYTE PTR [rdx+0x0],ah
   140043386:	push   rsp
   140043387:	add    BYTE PTR [rcx+0x0],ch
   14004338a:	jo     0x14004338c
   14004338c:	and    BYTE PTR [rax],al
   14004338e:	rex.WRB add BYTE PTR [r13+0x0],r12b
   140043392:	jae    0x140043394
   140043394:	jae    0x140043396
   140043396:	(bad)  
   140043397:	add    BYTE PTR [rdi+0x0],ah
   14004339a:	add    BYTE PTR gs:[rdx+0x0],al
   14004339e:	outs   dx,DWORD PTR ds:[rsi]
   14004339f:	add    BYTE PTR [rax+0x0],bh
   1400433a2:	sub    BYTE PTR [rax],al
   1400433a4:	sub    DWORD PTR [rax],eax
	...
   1400433ae:	add    BYTE PTR [rax],al
   1400433b0:	push   rsp
   1400433b1:	add    BYTE PTR [rcx+0x0],ah
   1400433b4:	(bad)  
   1400433b5:	add    BYTE PTR [rax+rax*1+0x69],dl
   1400433b9:	add    BYTE PTR [rax+0x0],dh
   1400433bc:	and    BYTE PTR [rax],al
   1400433be:	push   0x73006100
   1400433c3:	add    BYTE PTR [rax],ah
   1400433c5:	add    BYTE PTR [rdx+0x0],ch
   1400433c8:	jne    0x1400433ca
   1400433ca:	jae    0x1400433cc
   1400433cc:	je     0x1400433ce
   1400433ce:	and    BYTE PTR [rax],al
   1400433d0:	movsxd eax,DWORD PTR [rax]
   1400433d2:	(bad)  
   1400433d3:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400433d7:	add    BYTE PTR [rbp+0x0],ah
   1400433da:	add    BYTE PTR fs:[rax],ah
   1400433dd:	add    BYTE PTR [rbx+0x0],al
   1400433e0:	outs   dx,DWORD PTR ds:[rsi]
   1400433e1:	add    BYTE PTR [rcx+0x0],cl
   1400433e4:	outs   dx,BYTE PTR ds:[rsi]
   1400433e5:	add    BYTE PTR [rcx+0x0],ch
   1400433e8:	je     0x1400433ea
   1400433ea:	imul   eax,DWORD PTR [rax],0x6c0061
   1400433f0:	imul   eax,DWORD PTR [rax],0x65007a
   1400433f6:	push   rbx
   1400433f7:	add    BYTE PTR [rbp+0x0],ah
   1400433fa:	movsxd eax,DWORD PTR [rax]
   1400433fc:	jne    0x1400433fe
   1400433fe:	jb     0x140043400
   140043400:	imul   eax,DWORD PTR [rax],0x790074
   140043406:	add    BYTE PTR cs:[rax],al
   140043409:	add    BYTE PTR [rax],al
   14004340b:	add    BYTE PTR [rax],al
   14004340d:	add    BYTE PTR [rax],al
   14004340f:	add    BYTE PTR [rax+rax*1+0x61],dl
   140043413:	add    BYTE PTR [rdx+0x0],ah
   140043416:	push   rsp
   140043417:	add    BYTE PTR [rcx+0x0],ch
   14004341a:	jo     0x14004341c
   14004341c:	and    BYTE PTR [rax],al
   14004341e:	imul   eax,DWORD PTR [rax],0x200073
   140043424:	(bad)  
   140043425:	add    BYTE PTR [rax+rax*1+0x20],dh
   140043429:	add    BYTE PTR [rdi+0x0],dl
   14004342c:	imul   eax,DWORD PTR [rax],0x4d006e
   140043432:	(bad)  
   140043433:	add    BYTE PTR [rcx+0x0],ch
   140043436:	outs   dx,BYTE PTR ds:[rsi]
   140043437:	add    BYTE PTR [rsi],ch
   140043439:	add    BYTE PTR [rax],al
   14004343b:	add    BYTE PTR [rax],al
   14004343d:	add    BYTE PTR [rax],al
   14004343f:	add    BYTE PTR [rax],ch
   140043441:	add    BYTE PTR [rsi+0x0],ch
   140043444:	jne    0x140043446
   140043446:	ins    BYTE PTR es:[rdi],dx
   140043447:	add    BYTE PTR [rax+rax*1+0x29],ch
   14004344b:	add    BYTE PTR [rax],al
   14004344d:	add    BYTE PTR [rax],al
   14004344f:	add    BYTE PTR [rcx+0x37],bl
   140043452:	mov    fs,WORD PTR [rdi]
   140043454:	test   ecx,ecx
   140043456:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140043457:	test   BYTE PTR [rsi+0x6e],bpl
   14004345b:	jg     0x140043409
   14004345d:	sbb    ecx,DWORD PTR [rcx-0xc]
   140043460:	push   rax
   140043461:	add    BYTE PTR [rdx+0x0],dh
   140043464:	outs   dx,DWORD PTR ds:[rsi]
   140043465:	add    BYTE PTR [rdi+0x0],ah
   140043468:	ins    DWORD PTR es:[rdi],dx
   140043469:	add    BYTE PTR [rcx+0x0],ah
   14004346c:	outs   dx,BYTE PTR ds:[rsi]
   14004346d:	add    BYTE PTR [rax],al
   14004346f:	add    BYTE PTR [rdx+0x64be5741],dh
   140043475:	(bad)  
   140043476:	xchg   edi,eax
   140043477:	rex.R pushf 
   140043479:	(bad)  
   14004347a:	outs   dx,BYTE PTR ds:[rsi]
   14004347b:	pop    gs
   14004347d:	outs   dx,BYTE PTR ds:[rsi]
   14004347e:	cwde   
   14004347f:	neg    BYTE PTR [rcx-0x753b2918]
   140043485:	jrcxz  0x1400434bf
   140043487:	xchg   rcx,rax
   140043489:	mov    BYTE PTR [rbx],cl
   14004348b:	cwde   
   14004348c:	out    dx,al
   14004348d:	xor    DWORD PTR [rbp-0x1a],esi
   140043490:	ja     0x14004343c
   140043492:	(bad)  
   140043493:	mov    bh,0x8f
   140043495:	jb     0x14004346c
   140043497:	mov    r15d,0x365c674
   14004349d:	mov    ecx,0x8812fc6f
   1400434a2:	call   0x101f75a7d
   1400434a7:	rex.WRB movabs r11,0x438de518660723c7
   1400434b1:	fcomp  QWORD PTR [rdx-0xa]
   1400434b4:	es in  al,0x88
   1400434b7:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400434b9:	mov    dh,0x56
   1400434bb:	out    0x9d,eax
   1400434bd:	jne    0x1400434ec
   1400434bf:	push   rbp
   1400434c0:	mov    ch,0xf6
   1400434c2:	lods   al,BYTE PTR ds:[rsi]
   1400434c3:	prefetcht2 BYTE PTR [rdi+0x63]
   1400434c7:	rex.XB mov eax,DWORD PTR [r10-0x372f6b48]
   1400434ce:	xchg   eax,eax
   1400434d0:	rex.WR add BYTE PTR [rbp+0x0],r12b
   1400434d4:	add    BYTE PTR [ecx+0x0],ah
   1400434d8:	movsxd eax,DWORD PTR [rax]
   1400434da:	jns    0x1400434dc
   1400434dc:	rex.RX add BYTE PTR [rcx+0x0],r12b
   1400434e0:	movsxd eax,DWORD PTR [rax]
   1400434e2:	je     0x1400434e4
   1400434e4:	outs   dx,DWORD PTR ds:[rsi]
   1400434e5:	add    BYTE PTR [rcx+0x0],ch
   1400434e8:	add    BYTE PTR fs:[rax],al
   1400434eb:	add    BYTE PTR [rax],al
   1400434ed:	add    BYTE PTR [rax],al
   1400434ef:	add    BYTE PTR [rdx+0x25],bl
   1400434f2:	movabs al,ds:0x5119844285910818
   1400434fb:	test   BYTE PTR [rdi+0x8],dh
   1400434fe:	(bad)  
   1400434ff:	jbe    0x14004357f
   140043501:	repz in eax,0x2b
   140043504:	cld    
   140043505:	xchg   BYTE PTR [rdi],bl
   140043507:	rex.B (bad) 
   140043509:	loope  0x14004349d
   14004350b:	lods   eax,DWORD PTR ds:[rsi]
   14004350c:	rex.RX
   14004350d:	rex.R
   14004350e:	repz (bad) 
   140043510:	js     0x140043545
   140043512:	test   BYTE PTR [rdi+rax*1-0x6ab9cebe],bh
   140043519:	pop    rsp
   14004351a:	pop    rcx
   14004351b:	push   rdi
   14004351c:	sub    al,0xf1
   14004351e:	cmp    DWORD PTR [rdx-0x77f97030],esp
   140043524:	movabs eax,ds:0x1cb80db9b94ea269
   14004352d:	mov    edi,0x643a9a52
   140043532:	sbb    DWORD PTR [rbx-0x29],ebp
   140043535:	or     al,0x63
   140043537:	rex.RB mov r15b,0x10
   14004353a:	mov    ebp,0xadfc91c1
   14004353f:	cmp    esi,eax
   140043541:	out    0xe4,eax
   140043543:	rex.RX (bad) 
   140043545:	mov    ch,0x63
   140043547:	rex.W mov sil,0x0
   14004354a:	pop    rcx
   14004354b:	mov    BYTE PTR [rbx-0x49],bh
   14004354e:	sbb    DWORD PTR [rbp+0x57],esp
   140043551:	push   rsi
   140043552:	rex.R (bad) 
   140043554:	int3   
   140043555:	adc    bh,0x11
   140043558:	xchg   ebx,eax
   140043559:	xor    DWORD PTR [rax],eax
   14004355b:	(bad)  
   14004355c:	pop    rbx
   14004355d:	sub    esi,0x53
   140043560:	push   rsi
   140043561:	add    BYTE PTR [rbp+0x0],ah
   140043564:	jb     0x140043566
   140043566:	jae    0x140043568
   140043568:	imul   eax,DWORD PTR [rax],0x6e006f
   14004356e:	add    BYTE PTR [rax],al
   140043570:	push   rsi
   140043571:	add    BYTE PTR [rbp+0x0],ah
   140043574:	jb     0x140043576
   140043576:	jae    0x140043578
   140043578:	imul   eax,DWORD PTR [rax],0x6e006f
   14004357e:	pop    rdi
   14004357f:	add    BYTE PTR [rsi+0x0],cl
   140043582:	jne    0x140043584
   140043584:	ins    DWORD PTR es:[rdi],dx
   140043585:	add    BYTE PTR [rdx+0x0],ah
   140043588:	add    BYTE PTR gs:[rdx+0x0],dh
   14004358c:	add    BYTE PTR [rax],al
   14004358e:	add    BYTE PTR [rax],al
   140043590:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140043594:	outs   dx,BYTE PTR ds:[rsi]
   140043595:	add    BYTE PTR [rcx+0x0],ch
   140043598:	data16 add BYTE PTR [rbp+0x0],ah
   14004359c:	jae    0x14004359e
   14004359e:	je     0x1400435a0
	...
   1400435a8:	push   rbx
   1400435a9:	add    BYTE PTR [rbx+0x0],ah
   1400435ac:	jb     0x1400435ae
   1400435ae:	add    BYTE PTR gs:[rbp+0x0],ah
   1400435b2:	outs   dx,BYTE PTR ds:[rsi]
   1400435b3:	add    BYTE PTR [rax],al
   1400435b5:	add    BYTE PTR [rax],al
   1400435b7:	add    BYTE PTR [rbx+0x0],al
   1400435ba:	jne    0x1400435bc
   1400435bc:	jae    0x1400435be
   1400435be:	je     0x1400435c0
   1400435c0:	outs   dx,DWORD PTR ds:[rsi]
   1400435c1:	add    BYTE PTR [rbp+0x0],ch
   1400435c4:	add    BYTE PTR [rbp+0x0],r12b
   1400435c8:	data16 add BYTE PTR [rcx+0x0],ch
   1400435cc:	outs   dx,BYTE PTR ds:[rsi]
   1400435cd:	add    BYTE PTR [rcx+0x0],ch
   1400435d0:	je     0x1400435d2
   1400435d2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400435d8:	rex.WR add BYTE PTR [rcx+0x0],r13b
   1400435dc:	jae    0x1400435de
   1400435de:	je     0x1400435e0
	...
   1400435e8:	push   rdi
   1400435e9:	add    BYTE PTR [rax+rax*1+0x46],cl
   1400435ed:	add    BYTE PTR [rcx+0x0],ah
   1400435f0:	movsxd eax,DWORD PTR [rax]
   1400435f2:	je     0x1400435f4
   1400435f4:	outs   dx,DWORD PTR ds:[rsi]
   1400435f5:	add    BYTE PTR [rcx+0x0],ch
   1400435f8:	add    BYTE PTR fs:[rax+rax*1+0x69],cl
   1400435fd:	add    BYTE PTR [rbx+0x0],dh
   140043600:	je     0x140043602
   140043602:	add    BYTE PTR [rax],al
   140043604:	add    BYTE PTR [rax],al
   140043606:	add    BYTE PTR [rax],al
   140043608:	add    BYTE PTR [r11+0x0],sil
   14004360c:	jae    0x14004360e
   14004360e:	outs   dx,DWORD PTR ds:[rsi]
   14004360f:	add    BYTE PTR [rbx+0x0],ah
   140043612:	imul   eax,DWORD PTR [rax],0x740061
   140043618:	imul   eax,DWORD PTR [rax],0x6e006f
   14004361e:	rex.WR add BYTE PTR [rcx+0x0],r13b
   140043622:	jae    0x140043624
   140043624:	je     0x140043626
   140043626:	add    BYTE PTR [rax],al
   140043628:	rex.WB add BYTE PTR [r11+0x0],dl
   14004362c:	movsxd eax,DWORD PTR [rax]
   14004362e:	outs   dx,DWORD PTR ds:[rsi]
   14004362f:	add    BYTE PTR [rax+0x0],dh
   140043632:	add    BYTE PTR gs:[rax],al
   140043635:	add    BYTE PTR [rax],al
   140043637:	add    BYTE PTR [rbx+0x0],dl
   14004363a:	imul   eax,DWORD PTR [rax],0x6e0067
	...
   140043648:	rex.RX add BYTE PTR [rcx+0x0],r12b
   14004364c:	movsxd eax,DWORD PTR [rax]
   14004364e:	je     0x140043650
   140043650:	outs   dx,DWORD PTR ds:[rsi]
   140043651:	add    BYTE PTR [rcx+0x0],ch
   140043654:	add    BYTE PTR fs:[rax],al
   140043657:	add    BYTE PTR [rbx+0x0],al
   14004365a:	jne    0x14004365c
   14004365c:	jae    0x14004365e
   14004365e:	je     0x140043660
   140043660:	outs   dx,DWORD PTR ds:[rsi]
   140043661:	add    BYTE PTR [rbp+0x0],ch
   140043664:	rex.WB add BYTE PTR [r14+0x0],bpl
   140043668:	jo     0x14004366a
   14004366a:	jne    0x14004366c
   14004366c:	je     0x14004366e
   14004366e:	push   rbx
   14004366f:	add    BYTE PTR [rbx+0x0],ah
   140043672:	outs   dx,DWORD PTR ds:[rsi]
   140043673:	add    BYTE PTR [rax+0x0],dh
   140043676:	add    BYTE PTR gs:[rax],al
   140043679:	add    BYTE PTR [rax],al
   14004367b:	add    BYTE PTR [rax],al
   14004367d:	add    BYTE PTR [rax],al
   14004367f:	add    BYTE PTR [rsi+0x0],cl
   140043682:	(bad)  
   140043683:	add    BYTE PTR [rbp+0x0],ch
   140043686:	add    BYTE PTR gs:[rax],al
   140043689:	add    BYTE PTR [rax],al
   14004368b:	add    BYTE PTR [rax],al
   14004368d:	add    BYTE PTR [rax],al
   14004368f:	add    BYTE PTR [rbp+0x0],al
   140043692:	js     0x140043694
   140043694:	jo     0x140043696
   140043696:	jb     0x140043698
   140043698:	add    BYTE PTR gs:[rbx+0x0],dh
   14004369c:	jae    0x14004369e
   14004369e:	imul   eax,DWORD PTR [rax],0x6e006f
   1400436a4:	add    BYTE PTR [rax],al
   1400436a6:	add    BYTE PTR [rax],al
   1400436a8:	push   rdi
   1400436a9:	add    BYTE PTR [rax+rax*1+0x46],cl
   1400436ad:	add    BYTE PTR [rcx+0x0],ah
   1400436b0:	movsxd eax,DWORD PTR [rax]
   1400436b2:	je     0x1400436b4
   1400436b4:	outs   dx,DWORD PTR ds:[rsi]
   1400436b5:	add    BYTE PTR [rcx+0x0],ch
   1400436b8:	add    BYTE PTR fs:[rax],al
   1400436bb:	add    BYTE PTR [rax],al
   1400436bd:	add    BYTE PTR [rax],al
   1400436bf:	add    BYTE PTR [rdi+0x0],dl
   1400436c2:	outs   dx,DWORD PTR ds:[rsi]
   1400436c3:	add    BYTE PTR [rdx+0x0],dh
   1400436c6:	add    BYTE PTR fs:[rax+rax*1+0x69],cl
   1400436cb:	add    BYTE PTR [rbx+0x0],dh
   1400436ce:	je     0x1400436d0
	...
   1400436d8:	push   rdi
   1400436d9:	add    BYTE PTR [rdi+0x0],ch
   1400436dc:	jb     0x1400436de
   1400436de:	add    BYTE PTR fs:[rax],al
   1400436e1:	add    BYTE PTR [rax],al
   1400436e3:	add    BYTE PTR [rax],al
   1400436e5:	add    BYTE PTR [rax],al
   1400436e7:	add    BYTE PTR [rcx+0x0],al
   1400436ea:	movsxd eax,DWORD PTR [rax]
   1400436ec:	movsxd eax,DWORD PTR [rax]
   1400436ee:	add    BYTE PTR gs:[rbx+0x0],dh
   1400436f2:	jae    0x1400436f4
   1400436f4:	imul   eax,DWORD PTR [rax],0x6c0062
   1400436fa:	add    BYTE PTR gs:[rsi+0x0],cl
   1400436fe:	(bad)  
   1400436ff:	add    BYTE PTR [rbp+0x0],ch
   140043702:	add    BYTE PTR gs:[rax],al
   140043705:	add    BYTE PTR [rax],al
   140043707:	add    BYTE PTR [rdi+0x0],dl
   14004370a:	imul   eax,DWORD PTR [rax],0x64006e
   140043710:	outs   dx,DWORD PTR ds:[rsi]
   140043711:	add    BYTE PTR [rdi+0x0],dh
   140043714:	add    BYTE PTR [r8+r8*1+0x61],bpl
   140043719:	add    BYTE PTR [rbx+0x0],dh
   14004371c:	jae    0x14004371e
   14004371e:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140043722:	ins    DWORD PTR es:[rdi],dx
   140043723:	add    BYTE PTR [rbp+0x0],ah
   140043726:	add    BYTE PTR [rax],al
   140043728:	push   rdi
   140043729:	add    BYTE PTR [rcx+0x0],ch
   14004372c:	outs   dx,BYTE PTR ds:[rsi]
   14004372d:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140043731:	add    BYTE PTR [rdi+0x0],dh
   140043734:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140043739:	add    BYTE PTR [rax],al
   14004373b:	add    BYTE PTR [rax],al
   14004373d:	add    BYTE PTR [rax],al
   14004373f:	add    BYTE PTR [rbx+0x0],al
   140043742:	outs   dx,DWORD PTR ds:[rsi]
   140043743:	add    BYTE PTR [rsi+0x0],ch
   140043746:	je     0x140043748
   140043748:	jb     0x14004374a
   14004374a:	outs   dx,DWORD PTR ds:[rsi]
   14004374b:	add    BYTE PTR [rax+rax*1+0x4e],ch
   14004374f:	add    BYTE PTR [rcx+0x0],ah
   140043752:	ins    DWORD PTR es:[rdi],dx
   140043753:	add    BYTE PTR [rbp+0x0],ah
   140043756:	add    BYTE PTR [rax],al
   140043758:	rex.XB add BYTE PTR [r15+0x0],bpl
   14004375c:	outs   dx,BYTE PTR ds:[rsi]
   14004375d:	add    BYTE PTR [rax+rax*1+0x72],dh
   140043761:	add    BYTE PTR [rdi+0x0],ch
   140043764:	ins    BYTE PTR es:[rdi],dx
   140043765:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140043769:	add    BYTE PTR [rbx+0x0],ah
   14004376c:	(bad)  
   14004376d:	add    BYTE PTR [rax+rax*1+0x69],ch
   140043771:	add    BYTE PTR [rax+rax*1+0x79],dh
   140043775:	add    BYTE PTR [rax],al
   140043777:	add    BYTE PTR [rcx+0x0],al
   14004377a:	movsxd eax,DWORD PTR [rax]
   14004377c:	movsxd eax,DWORD PTR [rax]
   14004377e:	add    BYTE PTR gs:[rbx+0x0],dh
   140043782:	jae    0x140043784
   140043784:	imul   eax,DWORD PTR [rax],0x6c0062
   14004378a:	add    BYTE PTR gs:[rsi+0x0],cl
   14004378e:	(bad)  
   14004378f:	add    BYTE PTR [rbp+0x0],ch
   140043792:	add    BYTE PTR gs:[rbp+0x0],cl
   140043796:	(bad)  
   140043797:	add    BYTE PTR [rsi+0x0],ch
   14004379a:	add    BYTE PTR fs:[rcx+0x0],ah
   14004379e:	je     0x1400437a0
   1400437a0:	outs   dx,DWORD PTR ds:[rsi]
   1400437a1:	add    BYTE PTR [rdx+0x0],dh
   1400437a4:	jns    0x1400437a6
   1400437a6:	add    BYTE PTR [rax],al
   1400437a8:	je     0x1400437aa
   1400437aa:	jb     0x1400437ac
   1400437ac:	jne    0x1400437ae
   1400437ae:	add    BYTE PTR gs:[rax],al
   1400437b1:	add    BYTE PTR [rax],al
   1400437b3:	add    BYTE PTR [rax],al
   1400437b5:	add    BYTE PTR [rax],al
   1400437b7:	add    BYTE PTR [rcx+0x0],cl
   1400437ba:	outs   dx,BYTE PTR ds:[rsi]
   1400437bb:	add    BYTE PTR [rax+0x0],dh
   1400437be:	jne    0x1400437c0
   1400437c0:	je     0x1400437c2
   1400437c2:	push   rbx
   1400437c3:	add    BYTE PTR [rbx+0x0],ah
   1400437c6:	outs   dx,DWORD PTR ds:[rsi]
   1400437c7:	add    BYTE PTR [rax+0x0],dh
   1400437ca:	add    BYTE PTR gs:[rbp+0x0],al
   1400437ce:	outs   dx,BYTE PTR ds:[rsi]
   1400437cf:	add    BYTE PTR [rbp+0x0],dh
   1400437d2:	ins    DWORD PTR es:[rdi],dx
   1400437d3:	add    BYTE PTR [rax+rax*1+0x69],cl
   1400437d7:	add    BYTE PTR [rbx+0x0],dh
   1400437da:	je     0x1400437dc
   1400437dc:	add    BYTE PTR [rax],al
   1400437de:	add    BYTE PTR [rax],al
   1400437e0:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400437e4:	jo     0x1400437e6
   1400437e6:	jne    0x1400437e8
   1400437e8:	je     0x1400437ea
   1400437ea:	push   rbx
   1400437eb:	add    BYTE PTR [rbx+0x0],ah
   1400437ee:	outs   dx,DWORD PTR ds:[rsi]
   1400437ef:	add    BYTE PTR [rax+0x0],dh
   1400437f2:	add    BYTE PTR gs:[rbp+0x0],al
   1400437f6:	outs   dx,BYTE PTR ds:[rsi]
   1400437f7:	add    BYTE PTR [rbp+0x0],dh
   1400437fa:	ins    DWORD PTR es:[rdi],dx
   1400437fb:	add    BYTE PTR [rax],al
   1400437fd:	add    BYTE PTR [rax],al
   1400437ff:	add    BYTE PTR [rdx+0x0],dl
   140043802:	add    BYTE PTR gs:[rdi+0x0],ah
   140043806:	add    BYTE PTR [r8+0x0],r15b
   14004380a:	jo     0x14004380c
   14004380c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140043810:	ins    DWORD PTR es:[rdi],dx
   140043811:	add    BYTE PTR [rbp+0x0],ah
   140043814:	add    BYTE PTR [rax],al
   140043816:	add    BYTE PTR [rax],al
   140043818:	push   rax
   140043819:	add    BYTE PTR [rax+0x0],ch
   14004381c:	jb     0x14004381e
   14004381e:	(bad)  
   14004381f:	add    BYTE PTR [rbx+0x0],dh
   140043822:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   140043827:	add    BYTE PTR [rbx+0x0],dh
   14004382a:	je     0x14004382c
   14004382c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140043830:	ins    DWORD PTR es:[rdi],dx
   140043831:	add    BYTE PTR [rbp+0x0],ah
   140043834:	add    BYTE PTR [rax],al
   140043836:	add    BYTE PTR [rax],al
   140043838:	pop    rsp
   140043839:	add    BYTE PTR [rsi+0x0],dl
   14004383c:	(bad)  
   14004383d:	add    BYTE PTR [rdx+0x0],dh
   140043840:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140043844:	ins    BYTE PTR es:[rdi],dx
   140043845:	add    BYTE PTR [rbp+0x0],ah
   140043848:	rex.WB add BYTE PTR [r14+0x0],bpl
   14004384c:	data16 add BYTE PTR [rdi+0x0],ch
   140043850:	pop    rsp
   140043851:	add    BYTE PTR [rax+rax*1+0x72],dl
   140043855:	add    BYTE PTR [rcx+0x0],ah
   140043858:	outs   dx,BYTE PTR ds:[rsi]
   140043859:	add    BYTE PTR [rbx+0x0],dh
   14004385c:	ins    BYTE PTR es:[rdi],dx
   14004385d:	add    BYTE PTR [rcx+0x0],ah
   140043860:	je     0x140043862
   140043862:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140043870:	pop    rsp
   140043871:	add    BYTE PTR [rbx+0x0],dl
   140043874:	je     0x140043876
   140043876:	jb     0x140043878
   140043878:	imul   eax,DWORD PTR [rax],0x67006e
   14004387e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140043882:	ins    BYTE PTR es:[rdi],dx
   140043883:	add    BYTE PTR [rbp+0x0],ah
   140043886:	rex.WB add BYTE PTR [r14+0x0],bpl
   14004388a:	data16 add BYTE PTR [rdi+0x0],ch
   14004388e:	pop    rsp
   14004388f:	add    BYTE PTR [rip+0x34003000],ah        # 0x174046895
   140043895:	add    BYTE PTR [rax+0x0],bh
   140043898:	and    eax,0x34003000
   14004389d:	add    BYTE PTR [rax+0x0],bh
   1400438a0:	pop    rsp
   1400438a1:	add    BYTE PTR [rax+0x0],dl
   1400438a4:	jb     0x1400438a6
   1400438a6:	outs   dx,DWORD PTR ds:[rsi]
   1400438a7:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400438ab:	add    BYTE PTR [rbx+0x0],ah
   1400438ae:	je     0x1400438b0
   1400438b0:	push   rsi
   1400438b1:	add    BYTE PTR [rbp+0x0],ah
   1400438b4:	jb     0x1400438b6
   1400438b6:	jae    0x1400438b8
   1400438b8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400438be:	add    BYTE PTR [rax],al
   1400438c0:	rex.WB add BYTE PTR [r11+0x0],dl
   1400438c4:	pop    rdi
   1400438c5:	add    BYTE PTR [rax+0x0],dl
   1400438c8:	rex.W add BYTE PTR [rdx+0x0],dl
   1400438cc:	add    BYTE PTR [r11+0x0],dl
   1400438d0:	add    BYTE PTR [r8+rax*1+0x49],r9b
   1400438d5:	add    BYTE PTR [rbx+0x0],dl
   1400438d8:	push   rsp
   1400438d9:	add    BYTE PTR [rax],al
   1400438db:	add    BYTE PTR [rax],al
   1400438dd:	add    BYTE PTR [rax],al
   1400438df:	add    BYTE PTR [rcx+0x0],cl
   1400438e2:	push   rbx
   1400438e3:	add    BYTE PTR [rdi+0x0],bl
   1400438e6:	push   rdx
   1400438e7:	add    BYTE PTR [rbp+0x0],al
   1400438ea:	rex.RXB add BYTE PTR [r13+0x0],r10b
   1400438ee:	rex.WR add BYTE PTR [rcx+0x0],r8b
   1400438f2:	push   rdx
   1400438f3:	add    BYTE PTR [rbp+0x0],al
   1400438f6:	pop    rax
   1400438f7:	add    BYTE PTR [rax+0x0],dl
   1400438fa:	push   rdx
   1400438fb:	add    BYTE PTR [rbp+0x0],al
   1400438fe:	push   rbx
   1400438ff:	add    BYTE PTR [rbx+0x0],dl
   140043902:	rex.WB add BYTE PTR [r15+0x0],cl
   140043906:	rex.WRX add BYTE PTR [rax],r8b
   140043909:	add    BYTE PTR [rax],al
   14004390b:	add    BYTE PTR [rax],al
   14004390d:	add    BYTE PTR [rax],al
   14004390f:	add    BYTE PTR [rcx+0x0],cl
   140043912:	push   rbx
   140043913:	add    BYTE PTR [rdi+0x0],bl
   140043916:	pop    rax
   140043917:	add    BYTE PTR [rbp+0x0],cl
   14004391a:	rex.WR add BYTE PTR [rax],r8b
   14004391d:	add    BYTE PTR [rax],al
   14004391f:	add    BYTE PTR [rdi+0x0],dl
   140043922:	imul   eax,DWORD PTR [rax],0x64006e
   140043928:	outs   dx,DWORD PTR ds:[rsi]
   140043929:	add    BYTE PTR [rdi+0x0],dh
   14004392c:	jae    0x14004392e
   14004392e:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140043932:	jb     0x140043934
   140043934:	ins    DWORD PTR es:[rdi],dx
   140043935:	add    BYTE PTR [rbx+0x0],dh
	...
   140043940:	push   rax
   140043941:	add    BYTE PTR [rbx+0x0],bl
   140043944:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   140043948:	ins    BYTE PTR es:[rdi],dx
   140043949:	add    BYTE PTR [rax+rax*1+0x2c],ch
   14004394d:	add    BYTE PTR [rax],al
   14004394f:	add    BYTE PTR [rax+0x0],dl
   140043952:	pop    rbx
   140043953:	add    BYTE PTR [rip+0x2c007300],ah        # 0x16c04ac59
   140043959:	add    BYTE PTR [rax],al
   14004395b:	add    BYTE PTR [rax],al
   14004395d:	add    BYTE PTR [rax],al
   14004395f:	add    BYTE PTR [rip+0x5d006400],ah        # 0x19d049d65
   140043965:	add    BYTE PTR [rax],al
   140043967:	add    BYTE PTR [rdx],bh
   140043969:	add    BYTE PTR [rax+0x0],dl
   14004396c:	push   rdx
   14004396d:	add    BYTE PTR [rbx+0x0],bl
   140043970:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   140043974:	ins    BYTE PTR es:[rdi],dx
   140043975:	add    BYTE PTR [rax+rax*1+0x2c],ch
   140043979:	add    BYTE PTR [rax],al
   14004397b:	add    BYTE PTR [rax],al
   14004397d:	add    BYTE PTR [rax],al
   14004397f:	add    BYTE PTR [rdx],bh
   140043981:	add    BYTE PTR [rax+0x0],dl
   140043984:	push   rdx
   140043985:	add    BYTE PTR [rbx+0x0],bl
   140043988:	and    eax,0x2c007300
   14004398d:	add    BYTE PTR [rax],al
   14004398f:	add    BYTE PTR [rdx],bh
   140043991:	add    BYTE PTR [rsi+0x0],cl
   140043994:	add    BYTE PTR [r11+0x0],r11b
   140043998:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   14004399c:	ins    BYTE PTR es:[rdi],dx
   14004399d:	add    BYTE PTR [rax+rax*1+0x2c],ch
   1400439a1:	add    BYTE PTR [rax],al
   1400439a3:	add    BYTE PTR [rax],al
   1400439a5:	add    BYTE PTR [rax],al
   1400439a7:	add    BYTE PTR [rdx],bh
   1400439a9:	add    BYTE PTR [rsi+0x0],cl
   1400439ac:	add    BYTE PTR [r11+0x0],r11b
   1400439b0:	and    eax,0x2c007300
   1400439b5:	add    BYTE PTR [rax],al
   1400439b7:	add    BYTE PTR [rsi+0x0],bh
   1400439ba:	push   rbp
   1400439bb:	add    BYTE PTR [rsi+0x0],ch
   1400439be:	imul   eax,DWORD PTR [rax],0x6e
   1400439c1:	add    BYTE PTR [rdi+0x0],ch
   1400439c4:	ja     0x1400439c6
   1400439c6:	outs   dx,BYTE PTR ds:[rsi]
   1400439c7:	add    BYTE PTR [rsi+0x0],bh
   1400439ca:	add    BYTE PTR [rax],al
   1400439cc:	add    BYTE PTR [rax],al
   1400439ce:	add    BYTE PTR [rax],al
   1400439d0:	loopne 0x140043a08
   1400439d2:	xchg   DWORD PTR [rcx+0x3d],esp
   1400439d5:	cmp    al,0xcf
   1400439d7:	adc    DWORD PTR [rcx+0xaa000c],eax
   1400439dd:	cmp    BYTE PTR [rbx+0x6d007871],bl
   1400439e3:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400439e7:	add    BYTE PTR [rcx+0x0],ch
   1400439ea:	je     0x1400439ec
   1400439ec:	add    BYTE PTR gs:[rsi],ch
   1400439ef:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1400439f3:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400439f7:	add    BYTE PTR [rbx+0x72],al
   1400439fa:	gs (bad) 
   1400439fc:	je     0x140043a63
   1400439fe:	pop    rax
   1400439ff:	ins    DWORD PTR es:[rdi],dx
   140043a00:	ins    BYTE PTR es:[rdi],dx
   140043a01:	push   rdx
   140043a02:	gs (bad) 
   140043a04:	fs gs jb 0x140043a08
   140043a08:	cmp    esp,0x709d7279
   140043a0e:	xchg   ebp,eax
   140043a0f:	mov    sil,0x3d
   140043a12:	imul   edi,esi,0x30900d4b
	...
   140043a20:	cmp    DWORD PTR [rdx],edi
   140043a22:	(bad)  
   140043a23:	fiadd  WORD PTR [rbx+0x14]
   140043a26:	rex.RB pop r10
   140043a28:	stc    
   140043a29:	xor    dh,BYTE PTR [rbp+0x72]
   140043a2c:	and    BYTE PTR [rax+0x60],ch
   140043a2f:	rex.WB push r9
   140043a31:	lods   eax,DWORD PTR ds:[rsi]
   140043a32:	push   rbx
   140043a33:	sub    al,BYTE PTR [rax]
   140043a35:	sti    
   140043a36:	fcomp  QWORD PTR [rbp+0x14]
   140043a39:	push   rax
   140043a3a:	mov    ebp,DWORD PTR [rbx-0x57]
   140043a3d:	stc    
   140043a3e:	(bad)  
   140043a3f:	mov    edi,ecx
   140043a41:	jnp    0x140043a2e
   140043a43:	or     eax,0xefdfc256
   140043a48:	xchg   DWORD PTR [rdi+0x48],ebp
   140043a4b:	add    dh,BYTE PTR [rbp+0x367c21f9]
   140043a51:	sti    
   140043a52:	test   al,0x56
   140043a54:	adc    BYTE PTR [rsi+rdi*1+0x6bdd891e],0x93
   140043a5c:	sub    al,0x96
   140043a5e:	test   eax,0xded834d0
   140043a63:	sub    edi,eax
   140043a65:	xchg   ebx,eax
   140043a66:	call   QWORD PTR [rcx+0x69]
   140043a69:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140043a6a:	push   0x18
   140043a6c:	jp     0x140043a0b
   140043a6e:	and    BYTE PTR [rax+0x52],bl
   140043a71:	jle    0x140043ab4
   140043a73:	jp     0x140043a5b
   140043a75:	loop   0x140043a80
   140043a77:	int3   
   140043a78:	sbb    ebp,0xbe10c189
   140043a7e:	cmp    eax,0x73eda52e
   140043a83:	add    ch,BYTE PTR [rcx+0x7c7204d9]
   140043a89:	(bad)  
   140043a8a:	push   rax
   140043a8b:	sbb    ah,cl
   140043a8d:	(bad)  
   140043a8e:	xchg   ecx,eax
   140043a8f:	add    DWORD PTR [ecx-0x253c4d0d],eax
   140043a96:	mov    dl,0x79
   140043a98:	je     0x140043a7c
   140043a9a:	(bad)  
   140043a9b:	(bad)  
   140043a9c:	pushf  
   140043a9d:	pop    rsi
   140043a9e:	rex.RB int 0xdf
   140043aa1:	xor    al,0xd
   140043aa3:	(bad)  
   140043aa4:	int3   
   140043aa5:	movabs ds:0xc2be1662b887da5f,al
   140043aae:	rex.XB xchg r13b,bpl
   140043ab1:	jns    0x140043b09
   140043ab3:	rex.WRXB and r12b,BYTE PTR [r9+0x4f]
   140043ab7:	cmp    DWORD PTR [rbp+0x4f903c4],0x84dac94f
   140043ac1:	rex.WRXB jrcxz 0x140043a52
   140043ac4:	mov    edi,0xfa5c4f01
   140043ac9:	leave  
   140043aca:	repz rex.WX sbb rax,0x419f5afa
   140043ad1:	stos   DWORD PTR es:[rdi],eax
   140043ad2:	push   rdx
   140043ad3:	xchg   BYTE PTR [rdi-0x3d19f05d],ah
   140043ad9:	(bad)  
   140043ada:	adc    BYTE PTR [rbx+0x1e],bh
   140043add:	clc    
   140043ade:	cld    
   140043adf:	mov    esi,0xc63cbce9
   140043ae4:	jnp    0x140043b5b
   140043ae6:	(bad)  
   140043ae7:	ja     0x140043aa5
   140043ae9:	cld    
   140043aea:	lods   eax,DWORD PTR ds:[rsi]
   140043aeb:	scas   al,BYTE PTR es:[rdi]
   140043aec:	pop    rdx
   140043aed:	xor    al,0x64
   140043aef:	xchg   edi,eax
   140043af0:	iret   
   140043af1:	jge    0x140043b43
   140043af3:	nop
   140043af4:	pop    rsi
   140043af5:	pop    rsp
   140043af6:	(bad)  
   140043af7:	push   rsi
   140043af8:	(bad)  
   140043af9:	pop    rsi
   140043afa:	xlat   BYTE PTR ds:[rbx]
   140043afb:	adc    ebx,DWORD PTR [rbx-0x26]
   140043afe:	iret   
   140043aff:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140043b00:	rol    DWORD PTR [rbx],1
   140043b02:	and    edx,DWORD PTR [rdi]
   140043b04:	int    0x1f
   140043b06:	sub    QWORD PTR [r10-0x78],0x69
   140043b0b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140043b0c:	cdq    
   140043b0d:	rex.W add BYTE PTR [rcx],dl
   140043b10:	fisubr DWORD PTR [rbx+0x7c609119]
   140043b16:	xchg   ecx,eax
   140043b17:	cli    
   140043b18:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140043b19:	int    0x86
   140043b1b:	xor    eax,0x3ae9516
   140043b20:	(bad)  
   140043b21:	sub    eax,DWORD PTR [rbp+0x16]
   140043b24:	or     eax,esp
   140043b26:	(bad)  
   140043b27:	je     0x140043ade
   140043b29:	ret    0x4fa9
   140043b2c:	rol    DWORD PTR [rbx-0x35],1
   140043b2f:	stc    
   140043b30:	ins    BYTE PTR es:[rdi],dx
   140043b31:	push   0xffffffffa0ee1de5
   140043b36:	icebp  
   140043b37:	(bad)  
   140043b38:	out    0xc2,al
   140043b3a:	jne    0x140043b29
   140043b3c:	out    dx,eax
   140043b3d:	xor    dl,BYTE PTR [rbx+0x13d8aa15]
   140043b43:	loope  0x140043bc3
   140043b45:	sbb    BYTE PTR [rax+0x4fadbf8],dh
   140043b4b:	adc    dl,ch
   140043b4d:	inc    DWORD PTR [rcx]
   140043b4f:	push   rdx
   140043b50:	add    DWORD PTR [rdx-0x6c],ecx
   140043b53:	mul    BYTE PTR [rsi+riz*4-0x7058e045]
   140043b5a:	mov    edi,0xce19937e
   140043b5f:	sbb    ah,BYTE PTR [rbx-0x6dda1205]
   140043b65:	lods   eax,DWORD PTR ds:[rsi]
   140043b66:	(bad)  
   140043b67:	adc    eax,0x614dcb60
   140043b6c:	cwde   
   140043b6d:	mov    edi,DWORD PTR cs:[rdx]
   140043b70:	(bad)  
   140043b71:	mov    edi,0xc0fcf73c
   140043b76:	mov    ecx,es
   140043b78:	cmp    al,0x7f
   140043b7a:	sub    ch,BYTE PTR [rcx]
   140043b7c:	cld    
   140043b7d:	(bad)  
   140043b7f:	(bad)  
   140043b80:	stos   BYTE PTR es:[rdi],al
   140043b81:	sub    dh,cl
   140043b83:	repz sub DWORD PTR [rsi],ebp
   140043b86:	(bad)  
   140043b87:	(bad)  
   140043b88:	jmp    FWORD PTR [rdx-0x28]
   140043b8b:	jmp    0x140043bfe
   140043b8d:	mov    ebx,0x57a1776e
   140043b92:	ret    
   140043b93:	ss (bad) 
   140043b95:	fimul  WORD PTR [rbx-0x39d39f24]
   140043b9b:	sbb    edi,edi
   140043b9d:	(bad)  
   140043b9e:	jns    0x140043b79
   140043ba0:	out    dx,eax
   140043ba1:	outs   dx,DWORD PTR ds:[rsi]
   140043ba2:	(bad)  
   140043ba3:	or     BYTE PTR [rdi-0x3d],dh
   140043ba6:	test   ch,0x85
   140043ba9:	iret   
   140043baa:	rex.RX pminsw mm5,QWORD PTR [rdx-0x4f]
   140043baf:	adc    al,0x5c
   140043bb1:	jrcxz  0x140043bc7
   140043bb3:	movabs al,ds:0x9770ddb439652cdf
   140043bbc:	cs retf 0x9605
   140043bc0:	ins    BYTE PTR es:[rdi],dx
   140043bc1:	cs pop rsp
   140043bc3:	and    cl,BYTE PTR [rax+0x7f]
   140043bc6:	sbb    esi,DWORD PTR [rdi+0x3f]
   140043bc9:	int    0x76
   140043bcb:	lock rex.RB fucomip st,st(1)
   140043bcf:	sbb    esp,edx
   140043bd1:	popf   
   140043bd2:	or     DWORD PTR [rip+0x7de2127d],ecx        # 0x1bde64e55
   140043bd8:	adc    BYTE PTR [rsi],ch
   140043bda:	add    BYTE PTR [rip+0x2ed6297c],al        # 0x16eda655c
   140043be0:	ins    DWORD PTR es:[rdi],dx
   140043be1:	or     bl,BYTE PTR [rax-0x2854f1b6]
   140043be7:	sub    dh,BYTE PTR [rdi-0x58e715db]
   140043bed:	or     eax,0xeeb92d06
   140043bf2:	xor    esp,ebp
   140043bf4:	mov    dh,0xa
   140043bf6:	stos   BYTE PTR es:[rdi],al
   140043bf7:	push   rdi
   140043bf8:	out    0xb8,eax
   140043bfa:	test   eax,ecx
   140043bfc:	jb     0x140043bae
   140043bfe:	call   0x17e40a65c
   140043c03:	test   eax,0xe1860717
   140043c08:	xor    DWORD PTR [rdx-0x79],0x83aaeb3c
   140043c0f:	sbb    al,0xe3
   140043c11:	push   rbp
   140043c12:	xlat   BYTE PTR ds:[rbx]
   140043c13:	sar    DWORD PTR [rsi-0x55],0x29
   140043c17:	rex.WXB (bad) 
   140043c19:	rex.WRX fdivr QWORD PTR [rcx+0x10b3f6e3]
   140043c20:	int    0x34
   140043c22:	(bad)  
   140043c23:	stos   DWORD PTR es:[rdi],eax
   140043c24:	(bad)  
   140043c25:	icebp  
   140043c26:	xchg   r14,rax
   140043c28:	ja     0x140043c03
   140043c2a:	push   rcx
   140043c2b:	(bad)  
   140043c2c:	mov    dl,0x55
   140043c2e:	pop    rsi
   140043c2f:	sahf   
   140043c30:	sub    BYTE PTR [rdi-0x31],dh
   140043c33:	stos   DWORD PTR es:[rdi],eax
   140043c34:	push   rdi
   140043c35:	(bad)  
   140043c36:	pop    rbp
   140043c37:	ret    
   140043c38:	jnp    0x140043c9e
   140043c3a:	pop    rdx
   140043c3b:	(bad)  
   140043c3c:	cmp    dl,BYTE PTR [rax]
   140043c3e:	add    esp,edi
   140043c40:	gs (bad) 
   140043c42:	iret   
   140043c43:	and    BYTE PTR [rax-0x25],cl
   140043c46:	rex.RXB iret 
   140043c48:	rex.WX outs dx,DWORD PTR ds:[rsi]
   140043c4a:	or     BYTE PTR [rsi],ch
   140043c4c:	adc    eax,0xc1c0366e
   140043c51:	xchg   ebp,eax
   140043c52:	rex.WB jne 0x140043c7e
   140043c55:	ror    BYTE PTR [rbp+0x7a3bea10],1
   140043c5b:	addr32 sahf 
   140043c5d:	lea    edx,[rax+rbp*2-0x776db952]
   140043c64:	lea    ebp,[rax+0x2b]
   140043c67:	sti    
   140043c68:	adc    DWORD PTR [rbp+0x39ee539e],0xb61c1cff
   140043c72:	push   rax
   140043c73:	stos   DWORD PTR es:[rdi],eax
   140043c74:	xchg   BYTE PTR [rax+0x2a54e995],cl
   140043c7a:	out    0xca,al
   140043c7c:	loope  0x140043c0f
   140043c7e:	test   BYTE PTR [rdi+0x6e2d7bcf],0x82
   140043c85:	(bad)  
   140043c86:	add    cl,BYTE PTR [rsi-0xb]
   140043c89:	mov    edx,0x1d81926
   140043c8e:	(bad)  
   140043c8f:	leave  
   140043c90:	data16 (bad) 
   140043c92:	retf   
   140043c93:	mov    BYTE PTR [rdx+riz*4],ch
   140043c96:	(bad)  
   140043c98:	ror    DWORD PTR [rcx],cl
   140043c9a:	test   al,0x4
   140043c9c:	mov    eax,0xdbb34762
   140043ca1:	mov    ecx,0xb1bf2953
   140043ca6:	or     bl,BYTE PTR [rcx]
   140043ca8:	rex.WR
   140043ca9:	rex.RXB xchg r11d,eax
   140043cab:	out    0x46,al
   140043cad:	(bad)  
   140043cae:	mov    ecx,0xa91558c5
   140043cb3:	xchg   BYTE PTR [rdi],cl
   140043cb5:	rex.WX int 0x76
   140043cb8:	rex.X mul DWORD PTR [rax]
   140043cbb:	test   eax,0x95d14435
   140043cc0:	mov    edi,0x89d67d92
   140043cc5:	cld    
   140043cc6:	mov    gs,WORD PTR [rbx+0x4571a560]
   140043ccc:	loope  0x140043cd1
   140043cce:	push   rsi
   140043ccf:	cdq    
   140043cd0:	int3   
   140043cd1:	mov    bh,0xa
   140043cd3:	out    0x89,eax
   140043cd5:	xchg   edx,eax
   140043cd6:	out    dx,al
   140043cd7:	push   rax
   140043cd8:	sti    
   140043cd9:	rex.WRX push rsp
   140043cdb:	(bad)  
   140043cdc:	ins    BYTE PTR es:[rdi],dx
   140043cdd:	or     dl,al
   140043cdf:	js     0x140043d11
   140043ce1:	add    DWORD PTR [rdi],esp
   140043ce3:	xor    ebx,DWORD PTR [rsi]
   140043ce5:	pop    rax
   140043ce6:	movabs ds:0xdb52fb73050fa2e0,al
   140043cef:	or     ebp,edx
   140043cf1:	(bad)  
   140043cf2:	(bad)  
   140043cf3:	push   rsi
   140043cf4:	(bad)  
   140043cf5:	sar    BYTE PTR [rdx+0x50],cl
   140043cf8:	(bad)  
   140043cf9:	int3   
   140043cfa:	loop   0x140043d43
   140043cfc:	cmc    
   140043cfd:	popf   
   140043cfe:	cmp    DWORD PTR [rcx+rbx*1+0xe],edx
   140043d02:	cmc    
   140043d03:	push   rax
   140043d04:	mov    ebx,0x8c1a48dd
   140043d09:	(bad)  
   140043d0a:	jne    0x140043cd3
   140043d0c:	adc    BYTE PTR [rdx],ch
   140043d0e:	jbe    0x16a180f79
   140043d14:	repz pop rdi
   140043d16:	(bad)  
   140043d17:	sbb    edi,ecx
   140043d19:	lods   eax,DWORD PTR ds:[rsi]
   140043d1a:	ror    al,0x16
   140043d1d:	movsxd edx,DWORD PTR [rdi+rdx*1-0x5a]
   140043d21:	pop    rcx
   140043d22:	movabs eax,ds:0xc2a4a875488246b7
   140043d2b:	xchg   cx,bx
   140043d2e:	int    0xcc
   140043d30:	sub    eax,0xdc3ec1cd
   140043d35:	rep lods eax,DWORD PTR ds:[rsi]
   140043d37:	jrcxz  0x140043d40
   140043d39:	rol    DWORD PTR [rsi+0x13c24703],1
   140043d3f:	(bad)  
   140043d40:	mov    ch,0x93
   140043d42:	fnstsw WORD PTR [rbx]
   140043d44:	adc    BYTE PTR [rax+0x47f4fa11],al
   140043d4a:	lods   eax,DWORD PTR ds:[rsi]
   140043d4b:	xchg   edx,eax
   140043d4c:	add    eax,0xff6bb54e
   140043d51:	js     0x140043dcd
   140043d53:	neg    BYTE PTR [rcx+0x7676559d]
   140043d59:	pop    rsp
   140043d5a:	pop    rcx
   140043d5b:	(bad)  
   140043d5c:	ja     0x140043ce5
   140043d5e:	fisubr DWORD PTR [rsi+0x45]
   140043d61:	lods   al,BYTE PTR ds:[rsi]
   140043d62:	fstp   st(4)
   140043d64:	fidiv  DWORD PTR [rcx+0x3ab06287]
   140043d6a:	mov    esp,0xc35de88f
   140043d6f:	add    dl,dl
   140043d71:	fld    QWORD PTR [rcx-0x17]
   140043d74:	add    eax,DWORD PTR [rcx-0x69139676]
   140043d7a:	fstp   DWORD PTR [rsi+rdx*1-0x7f]
   140043d7e:	jbe    0x140043d1a
   140043d80:	movabs ds:0x52adc482ceee93dd,eax
   140043d89:	loopne 0x140043d6e
   140043d8b:	push   rbp
   140043d8c:	jo     0x140043d28
   140043d8e:	mov    ebp,DWORD PTR [rdx+0x2e]
   140043d91:	loope  0x140043d88
   140043d93:	(bad)
   140043d98:	mov    DWORD PTR [rax-0x42],ecx
   140043d9b:	xchg   ebx,eax
   140043d9c:	cld    
   140043d9d:	leave  
   140043d9e:	adc    BYTE PTR [rbp-0xb],cl
   140043da1:	movabs rsp,0x77d639a008374859
   140043dab:	(bad)  
   140043dac:	out    0x54,eax
   140043dae:	pop    rcx
   140043daf:	rex.WB fidivr DWORD PTR [r8+riz*1+0xc]
   140043db4:	xchg   ecx,eax
   140043db5:	mov    edi,0x250ff0ae
   140043dba:	fstp   st(2)
   140043dbc:	(bad)  
   140043dbd:	(bad)  
   140043dbe:	imul   esi,DWORD PTR [rcx+rsi*4+0x2c],0xffffffba
   140043dc3:	mov    bl,0xbd
   140043dc5:	adc    eax,0x2d24610d
   140043dca:	in     al,dx
   140043dcb:	sub    DWORD PTR [rbx],ebx
   140043dcd:	or     eax,0xc8985f56
   140043dd2:	mov    edi,0x2952aa6b
   140043dd7:	call   FWORD PTR [rbp-0x6]
   140043dda:	cmp    BYTE PTR [rip+0xfffffffff0fda58d],dh        # 0x13101e36d
   140043de0:	mov    ecx,0x6829d9ec
   140043de5:	or     BYTE PTR [rsi],ch
   140043de7:	adc    eax,0x26b5f57
   140043dec:	(bad)  
   140043ded:	xor    al,0xa9
   140043def:	cld    
   140043df0:	sbb    dh,BYTE PTR [rip+0x33ebab74]        # 0x173efe96a
   140043df6:	test   al,0xd0
   140043df8:	xchg   esp,eax
   140043df9:	mov    ch,0xab
   140043dfb:	rex.WX jle 0x140043dec
   140043dfe:	stos   DWORD PTR es:[rdi],eax
   140043dff:	jae    0x140043e2a
   140043e01:	jne    0x140043e7d
   140043e03:	and    DWORD PTR [rax-0x4f],esp
   140043e06:	jno    0x140043de5
   140043e08:	(bad)  
   140043e09:	iret   
   140043e0a:	cmp    al,0xc3
   140043e0c:	xlat   BYTE PTR ds:[rbx]
   140043e0d:	outs   dx,DWORD PTR ds:[rsi]
   140043e0e:	shr    esp,cl
   140043e10:	mov    dh,0x6a
   140043e12:	or     eax,0x24b042d4
   140043e17:	fnstcw WORD PTR [rsi-0x565200f2]
   140043e1d:	int    0x8b
   140043e1f:	mov    ebp,0x38dee487
   140043e24:	sti    
   140043e25:	(bad)  
   140043e26:	jno    0x140043e4b
   140043e28:	in     al,dx
   140043e29:	xor    eax,0xdd3932fa
   140043e2e:	cmc    
   140043e2f:	jne    0x140043e83
   140043e31:	(bad)  
   140043e32:	scas   al,BYTE PTR es:[rdi]
   140043e33:	clc    
   140043e34:	(bad)  
   140043e35:	imul   eax,DWORD PTR [rdi+0x23bcd59e],0x1d
   140043e3c:	cmp    BYTE PTR [rdx-0x305a118f],cl
   140043e42:	add    bh,BYTE PTR [rsi]
   140043e44:	fisttp QWORD PTR [rdi+0x2d]
   140043e47:	imul   ebx,DWORD PTR [rdi+0x145d9ce9],0x73bbc38f
   140043e51:	iret   
   140043e52:	mov    ebp,0x3f256aa7
   140043e57:	out    0x76,eax
   140043e59:	sbb    dh,BYTE PTR [rsi+rcx*4]
   140043e5c:	sub    al,0x20
   140043e5e:	ror    ch,1
   140043e60:	fwait
   140043e61:	and    esp,DWORD PTR [rbx]
   140043e63:	xor    eax,0xc320fa6e
   140043e68:	xchg   ebp,eax
   140043e69:	xchg   BYTE PTR [rsi],ah
   140043e6b:	pop    rdx
   140043e6c:	(bad)  
   140043e6d:	jbe    0x140043e4d
   140043e6f:	add    al,0x46
   140043e71:	int3   
   140043e72:	stos   BYTE PTR es:[rdi],al
   140043e73:	xchg   esp,eax
   140043e74:	xchg   esi,eax
   140043e75:	cmp    al,0x7a
   140043e77:	cmp    ebp,esp
   140043e79:	cmp    al,0x48
   140043e7b:	(bad)  
   140043e7c:	or     bl,ch
   140043e7e:	mov    ecx,0x89068538
   140043e83:	retf   0xe501
   140043e86:	mov    ecx,eax
   140043e88:	mov    edx,0x3ccad9d6
   140043e8d:	(bad)
   140043e90:	cmp    dh,BYTE PTR [rdx]
   140043e92:	movs   BYTE PTR es:[rdi],BYTE PTR cs:[rsi]
   140043e94:	rcl    BYTE PTR [rdx+0x56],1
   140043e97:	movabs al,ds:0x3eae72988b0bb187
   140043ea0:	cmps   BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   140043ea2:	jl     0x140043f22
   140043ea4:	pop    rsp
   140043ea5:	jnp    0x140043f10
   140043ea7:	(bad)  
   140043ea8:	in     al,dx
   140043ea9:	cmp    edx,DWORD PTR [rdi-0x7b]
   140043eac:	or     eax,DWORD PTR [rax]
   140043eae:	(bad)  
   140043eaf:	je     0x140043f19
   140043eb1:	push   0x1814702e
   140043eb6:	fwait
   140043eb7:	ja     0x140043f19
   140043eb9:	jp     0x140043e67
   140043ebb:	or     BYTE PTR [rbx],bl
   140043ebd:	shr    ch,0x97
   140043ec0:	pop    rsi
   140043ec1:	cmc    
   140043ec2:	xchg   ebp,eax
   140043ec3:	sub    al,0xb5
   140043ec5:	mov    esi,DWORD PTR [rbx+0x3b]
   140043ec8:	lods   eax,DWORD PTR ds:[rsi]
   140043ec9:	rex.X sti 
   140043ecb:	popf   
   140043ecc:	mov    bh,0x23
   140043ece:	adc    BYTE PTR [rbx-0x112b9228],al
   140043ed4:	jne    0x140043eb9
   140043ed6:	xor    bh,BYTE PTR [rcx+0x4a8d42a2]
   140043edc:	pop    rdi
   140043edd:	(bad)  
   140043ede:	lea    ebx,[rdi-0x40c52ff6]
   140043ee4:	mov    esi,0x4bdfe112
   140043ee9:	outs   dx,DWORD PTR ds:[rsi]
   140043eea:	retf   
   140043eeb:	retf   0x1803
   140043eee:	(bad)  
   140043eef:	(bad)  
   140043ef0:	jl     0x140043ec2
   140043ef2:	add    dh,BYTE PTR [rsi]
   140043ef4:	leave  
   140043ef5:	and    dh,BYTE PTR [rbp+0x4de0cef]
   140043efb:	xchg   edi,eax
   140043efc:	outs   dx,BYTE PTR ds:[rsi]
   140043efd:	xor    eax,0xf2d2ddf0
   140043f02:	scas   eax,DWORD PTR es:[rdi]
   140043f03:	int3   
   140043f04:	nop
   140043f05:	xchg   ecx,eax
   140043f06:	gs mov edi,0x4056c3c0
   140043f0c:	(bad)  
   140043f0d:	(bad)  
   140043f0e:	sub    ebp,edx
   140043f10:	jae    0x140043efe
   140043f12:	or     BYTE PTR [rbp-0x772006b3],ah
   140043f18:	es repz pop rdx
   140043f1b:	and    al,0x38
   140043f1d:	push   rsi
   140043f1e:	rex.RX mov ebp,0x398073bb
   140043f24:	rex.RX bndldx (bad),[rbx-0x80]
   140043f29:	adc    DWORD PTR [rax-0x3a717be7],edi
   140043f2f:	mov    esi,0xa8afb9fb
   140043f34:	mov    edi,0x48728c32
   140043f39:	(bad)  
   140043f3a:	jmp    QWORD PTR [rax+rcx*1-0x1f048a83]
   140043f41:	mov    WORD PTR [rbx],?
   140043f43:	mov    dh,0xcd
   140043f45:	cs retf 
   140043f47:	pop    rcx
   140043f48:	add    eax,DWORD PTR [rdi+0x60166c98]
   140043f4e:	(bad)  
   140043f4f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043f50:	cli    
   140043f51:	(bad)  
   140043f52:	rex.WR movabs rbx,0xcfc1fe1acba55a17
   140043f5c:	(bad)  
   140043f5d:	rcl    ch,0xce
   140043f60:	mov    bh,0x17
   140043f62:	ins    BYTE PTR es:[rdi],dx
   140043f63:	cmp    al,0x9
   140043f65:	popf   
   140043f66:	mov    edi,eax
   140043f68:	cdq    
   140043f69:	loop   0x140043f4f
   140043f6b:	and    esi,DWORD PTR [rbx+0x66af6270]
   140043f71:	rex.R sar ebp,cl
   140043f74:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140043f76:	mov    bl,BYTE PTR [rdi]
   140043f78:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043f79:	sbb    esi,0x14
   140043f7c:	js     0x140043f8b
   140043f7e:	rex.W
   140043f7f:	and    BYTE PTR [r13+0x53],r11b
   140043f83:	movabs al,ds:0xc38dd38615b90ecf
   140043f8c:	movabs al,ds:0xf431a75146c8d63e
   140043f95:	add    eax,0xbed3ac5b
   140043f9a:	mov    bh,0xe3
   140043f9c:	jns    0x140043fe1
   140043f9e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043f9f:	cmp    DWORD PTR [rax-0x1],ebp
   140043fa2:	rex.WRXB out 0x30,eax
   140043fa5:	pop    rbx
   140043fa6:	in     eax,0xe2
   140043fa8:	cwde   
   140043fa9:	(bad)  
   140043faa:	add    al,0x50
   140043fac:	(bad)  
   140043fad:	sbb    eax,0x741ddca8
   140043fb2:	xchg   edx,eax
   140043fb3:	in     eax,dx
   140043fb4:	mov    edi,DWORD PTR [rsi+0x31]
   140043fb7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140043fb8:	lods   al,BYTE PTR ds:[rsi]
   140043fb9:	(bad)  
   140043fba:	sub    bh,BYTE PTR [rdx-0x565f6cdd]
   140043fc0:	xchg   BYTE PTR [rcx+0x4d],dh
   140043fc3:	test   DWORD PTR [rsi],0xe2f41f93
   140043fc9:	(bad)  
   140043fca:	sahf   
   140043fcb:	and    DWORD PTR [rdi+0x1a],ecx
   140043fce:	imul   edi,DWORD PTR [rax],0xffffff8b
   140043fd1:	(bad)  
   140043fd2:	fcmovnu st,st(2)
   140043fd4:	rex.WXB add QWORD PTR [r15-0x47b9f0c1],rbp
   140043fdb:	repz movabs al,gs:0xa06d4465baa0cbfe
   140043fe6:	mov    bh,0xd4
   140043fe8:	sbb    edi,edx
   140043fea:	mov    esp,esi
   140043fec:	rex.WRX
   140043fed:	rex.WB shl BYTE PTR [r13-0xd],cl
   140043ff1:	in     al,0x91
   140043ff3:	jae    0x140043ff3
   140043ff5:	movsxd esp,ebx
   140043ff7:	sti    
   140043ff8:	sbb    al,0xdf
   140043ffa:	mov    ebx,0x2a17a3bf
   140043fff:	imul   DWORD PTR [rsi+rax*4-0x5b]
   140044003:	xor    BYTE PTR [rax-0x38a29d04],0xa4
   14004400a:	loop   0x140044025
   14004400c:	(bad)  [rbp+0x5a]
   14004400f:	cmp    bl,BYTE PTR [rax+0x352b275a]
   140044015:	cmp    eax,0xddc080e2
   14004401a:	fsubr  QWORD PTR [rip+0x5db9a65b]        # 0x19dbde67b
   140044020:	jg     0x140043fc4
   140044022:	in     eax,dx
   140044023:	clc    
   140044024:	mov    ah,0x25
   140044026:	movlps QWORD PTR [rsi],xmm1
   140044029:	jmp    0x140043ffb
   14004402b:	mov    al,0xb8
   14004402d:	jp     0x140043fe4
   14004402f:	rol    edi,1
   140044031:	idiv   dl
   140044033:	sub    al,0x3f
   140044035:	jbe    0x1400440a6
   140044037:	hlt    
   140044038:	movabs al,ds:0xbf9c781c886a6ad
   140044041:	sub    edi,DWORD PTR [rbx-0x62ee031e]
   140044047:	sbb    QWORD PTR [rbx-0x335bc875],r12
   14004404e:	sub    ebp,DWORD PTR [rsi+0xd]
   140044051:	imul   eax,DWORD PTR [rsi+0x6bb5e1bc],0x7e
   140044058:	clc    
   140044059:	rex.WRX and BYTE PTR [rdx+0x22353a00],r15b
   140044060:	push   rdx
   140044061:	(bad)  
   140044062:	jge    0x1400440c6
   140044064:	lods   al,BYTE PTR ds:[rsi]
   140044065:	sbb    esp,DWORD PTR [rdx-0x7e]
   140044068:	mov    edx,0x37078fdc
   14004406d:	sub    DWORD PTR [rcx-0x2f],ebx
   140044070:	(bad)  
   140044072:	xchg   ch,dl
   140044074:	(bad)  
   140044075:	mov    ebx,0x6a0e0984
   14004407a:	(bad)  
   14004407b:	pop    rbx
   14004407c:	xchg   DWORD PTR [rax-0x2677d717],ebp
   140044082:	(bad)  
   140044083:	pop    rdi
   140044084:	loop   0x140044006
   140044086:	ins    DWORD PTR es:[rdi],dx
   140044087:	rex.WB hlt 
   140044089:	sar    DWORD PTR [rax],1
   14004408b:	and    DWORD PTR [rbp+rsi*1+0x57138511],eax
   140044092:	jp     0x1400440c1
   140044094:	(bad)  
   140044095:	movabs ds:0xe22f88e7096dcdad,eax
   14004409e:	xchg   edx,eax
   14004409f:	mov    ebx,0xeda0ce22
   1400440a4:	and    eax,0xe587f856
   1400440a9:	sbb    al,0xbc
   1400440ab:	sub    DWORD PTR [rdx+rsi*2+0x27f21a5f],0xffffffe4
   1400440b3:	jns    0x1400440a1
   1400440b5:	rcl    DWORD PTR [rsi-0x32021f42],0x77
   1400440bc:	movsxd ebp,DWORD PTR [rax-0x622790d6]
   1400440c2:	(bad)  
   1400440c3:	pop    rdi
   1400440c4:	or     dl,BYTE PTR [rax+0x75]
   1400440c7:	xchg   edi,eax
   1400440c8:	cmp    dl,ch
   1400440ca:	jg     0x1400440d8
   1400440cc:	lea    esi,[rbp+0x28d9781b]
   1400440d2:	mov    cl,0xfb
   1400440d4:	addr32 xchg edx,eax
   1400440d6:	icebp  
   1400440d7:	push   rdi
   1400440d8:	sbb    dl,BYTE PTR [rdx]
   1400440da:	movabs al,ds:0xc0511717a9d505df
   1400440e3:	ret    0x5030
   1400440e6:	jns    0x14004408e
   1400440e8:	int    0xfd
   1400440ea:	mov    al,BYTE PTR [rax]
   1400440ec:	icebp  
   1400440ed:	es jmp 0x1aa42561f
   1400440f3:	pop    rbx
   1400440f4:	movsxd ecx,DWORD PTR [rax+rdi*8]
   1400440f7:	rex.RXB
   1400440f8:	movs   BYTE PTR es:[rdi],BYTE PTR cs:[rsi]
   1400440fa:	lods   al,BYTE PTR ds:[rsi]
   1400440fb:	in     eax,0xe8
   1400440fd:	add    edx,esi
   1400440ff:	hlt    
   140044100:	cli    
   140044101:	jb     0x1400440ed
   140044103:	stc    
   140044104:	imul   edx
   140044106:	jrcxz  0x14004411d
   140044108:	vpaddusb xmm2,xmm2,XMMWORD PTR [rip+0xffffffff8cac2b6d]        # 0xccb06c7d
   140044110:	popf   
   140044111:	adc    al,0x1f
   140044113:	jnp    0x1400440fd
   140044115:	sbb    bl,dh
   140044117:	xchg   esi,eax
   140044118:	shl    DWORD PTR [rdi],cl
   14004411a:	retf   0x3b26
   14004411d:	(bad)  
   14004411e:	and    BYTE PTR [rbx+0x1a],bh
   140044121:	cmp    ebx,eax
   140044123:	(bad)  
   140044124:	repz loope 0x1400440ca
   140044127:	data16 jnp 0x14004417f
   14004412a:	ja     0x14004410f
   14004412c:	rex.WR cmp al,0xb
   14004412f:	jge    0x140044165
   140044131:	adc    al,0x8b
   140044133:	or     ch,BYTE PTR [rdx]
   140044135:	mov    eax,0xb1a54957
   14004413a:	rex.WRX (bad) 
   14004413c:	mov    es,WORD PTR [rax-0x4a]
   14004413f:	jmp    0xfa7a512e
   140044144:	out    dx,eax
   140044145:	(bad)  
   140044146:	rex.WB jge 0x140044162
   140044149:	in     al,0x7
   14004414b:	mov    eax,0x9c7724b9
   140044150:	in     al,0xae
   140044152:	cmp    edx,edx
   140044154:	lahf   
   140044155:	ror    DWORD PTR [rdi+0x6e],0x84
   140044159:	(bad)  
   14004415a:	ss fdivrp st(6),st
   14004415d:	and    dl,bh
   14004415f:	xor    eax,0x4e568e7d
   140044164:	adc    dl,BYTE PTR [rbp-0x41]
   140044167:	std    
   140044168:	sti    
   140044169:	fld    TBYTE PTR [rax-0x51fcf50]
   14004416f:	jle    0x14004414b
   140044171:	(bad)  
   140044172:	rex.RB (bad) 
   140044175:	movabs al,ds:0xb00cd094ccc8afa7
   14004417e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004417f:	or     BYTE PTR [rsp+rbp*1-0x440cb866],dl
   140044186:	fwait
   140044187:	shl    edx,1
   140044189:	sbb    esp,DWORD PTR [rsp]
   14004418c:	cmp    al,0x81
   14004418e:	mov    cl,0x4e
   140044190:	(bad)  
   140044191:	movabs ds:0xa47ce3d5a247abb4,al
   14004419a:	pop    rdi
   14004419b:	sbb    DWORD PTR [rdx],ebx
   14004419d:	xor    DWORD PTR [rcx+0x6a],esi
   1400441a0:	iret   
   1400441a1:	mov    al,0x20
   1400441a3:	mov    DWORD PTR [rbx],ebx
   1400441a5:	jb     0x1400441a2
   1400441a7:	mov    edx,0xe61ba2e2
   1400441ac:	mov    cl,0x1b
   1400441ae:	data16 add al,0xf2
   1400441b1:	addr32 (bad) 
   1400441b3:	scas   al,BYTE PTR es:[rdi]
   1400441b4:	out    0xb8,al
   1400441b6:	(bad)  
   1400441b7:	rex.B movs BYTE PTR es:[rdi],BYTE PTR gs:[rsi]
   1400441ba:	jg     0x140044202
   1400441bc:	rcl    DWORD PTR [rsi+rsi*1-0x1c],cl
   1400441c0:	shl    BYTE PTR [rbp+rbp*8+0x2f],cl
   1400441c4:	stos   BYTE PTR es:[rdi],al
   1400441c5:	xor    DWORD PTR [rsi+0x8],esp
   1400441c8:	jns    0x1400441ee
   1400441ca:	clc    
   1400441cb:	fmul   QWORD PTR [ecx-0x145e96c6]
   1400441d2:	lods   eax,DWORD PTR fs:[rsi]
   1400441d4:	push   0xffffffffffffffde
   1400441d6:	test   eax,0x6dca281f
   1400441db:	sub    ecx,DWORD PTR [rcx]
   1400441dd:	jrcxz  0x14004419e
   1400441df:	mov    ebx,0x2cbb7192
   1400441e4:	adc    esp,DWORD PTR [rdx+0x3d0b6612]
   1400441ea:	sub    al,0x59
   1400441ec:	ret    
   1400441ed:	mov    edx,0x1c693d08
   1400441f2:	cmp    eax,0x954dcff9
   1400441f7:	cmp    eax,0x313c926f
   1400441fc:	(bad)  
   1400441fd:	(bad)  
   1400441fe:	jge    0x1400441e8
   140044200:	adc    esi,esi
   140044202:	cmp    dh,BYTE PTR [rsi+0x3e]
   140044205:	fiadd  DWORD PTR [rsp+rsi*2-0x33f6c28e]
   14004420c:	or     al,0xbe
   14004420e:	cmc    
   14004420f:	jb     0x1400441a0
   140044211:	mov    DWORD PTR [rax+0x4a],edi
   140044214:	jge    0x140044208
   140044216:	sar    dh,1
   140044218:	cdq    
   140044219:	fs scas eax,DWORD PTR es:[rdi]
   14004421b:	frstor [rbp+rax*1+0x11]
   14004421f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140044220:	pop    rdx
   140044221:	movabs ds:0x4e39797b2b266224,eax
   14004422a:	fstp   DWORD PTR [rcx+0x450e591d]
   140044230:	loop   0x14004425b
   140044232:	mov    DWORD PTR [rbx-0x5f],edx
   140044235:	(bad)  
   140044236:	lock (bad) 
   140044238:	push   rsp
   140044239:	(bad)  
   14004423a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004423b:	mov    al,0x33
   14004423d:	push   rdx
   14004423e:	stos   BYTE PTR es:[rdi],al
   14004423f:	fimul  DWORD PTR [rcx+0x66]
   140044242:	rex.WRX or al,0xdb
   140044245:	mov    al,0xb0
   140044247:	in     eax,dx
   140044248:	(bad)  
   140044249:	scas   al,BYTE PTR es:[rdi]
   14004424a:	push   0xffffffffffffff8b
   14004424c:	lods   eax,DWORD PTR ds:[rsi]
   14004424d:	push   rax
   14004424e:	outs   dx,BYTE PTR ds:[rsi]
   14004424f:	stos   DWORD PTR es:[rdi],eax
   140044250:	sbb    al,0xb0
   140044252:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140044253:	adc    BYTE PTR [rax-0x433575ec],0xa6
   14004425a:	sbb    esi,DWORD PTR [rax+0x4]
   14004425d:	cwde   
   14004425e:	mov    ebx,0xa3bebdc1
   140044263:	pop    rbp
   140044265:	sti    
   140044266:	mov    ecx,esp
   140044268:	xor    DWORD PTR [rbp-0x62438035],0xad240437
   140044272:	xor    BYTE PTR [rsi+0xd12fc5e],bl
   140044278:	push   rdx
   140044279:	xchg   DWORD PTR [rdi-0x4a694b94],esp
   14004427f:	jns    0x140044249
   140044281:	cli    
   140044282:	add    eax,esi
   140044284:	(bad)  
   140044285:	pop    rax
   140044286:	(bad)  
   140044287:	or     BYTE PTR [rcx+rsi*8+0x14a5f72f],dl
   14004428e:	mov    ch,0xdf
   140044290:	rex.WB push r15
   140044292:	retf   
   140044293:	xor    cl,BYTE PTR [rcx-0x2ccb7ed1]
   140044299:	add    al,0xd2
   14004429b:	rex std 
   14004429d:	in     al,dx
   14004429e:	rex.RXB mov r9d,0xb6b9fa29
   1400442a4:	stc    
   1400442a5:	(bad)  
   1400442a6:	fnsave [rbp-0x75]
   1400442a9:	rex.RB ret 0xe87d
   1400442ad:	movabs ds:0x532235bd04f6c5a1,al
   1400442b6:	add    BYTE PTR [rcx+0x6e],bl
   1400442b9:	mov    ebp,0xe7c196d0
   1400442be:	sbb    ecx,DWORD PTR [rax-0x6d8101dd]
   1400442c4:	(bad)  
   1400442c5:	retf   
   1400442c6:	(bad)  
   1400442c7:	jno    0x140044288
   1400442c9:	cdq    
   1400442ca:	ftst   
   1400442cc:	pop    rdx
   1400442cd:	xchg   DWORD PTR [rdi+riz*1+0x59],esp
   1400442d1:	in     eax,dx
   1400442d2:	sub    bh,al
   1400442d4:	(bad)  
   1400442d5:	jmp    QWORD PTR [rbx-0x29]
   1400442d8:	mov    eax,0x3e98e0d1
   1400442dd:	fucom  st(3)
   1400442df:	push   rdx
   1400442e0:	pushf  
   1400442e1:	xor    BYTE PTR [rbx],al
   1400442e3:	cmp    ebx,DWORD PTR [rax]
   1400442e5:	cmp    BYTE PTR [rax],ah
   1400442e7:	adc    edi,ebp
   1400442e9:	ret    0x76fa
   1400442ec:	sub    dh,BYTE PTR [rax]
   1400442ee:	je     0x140044287
   1400442f0:	mov    bh,0x34
   1400442f2:	js     0x140044325
   1400442f4:	in     al,dx
   1400442f5:	push   rbp
   1400442f6:	pop    rbp
   1400442f7:	(bad)  
   1400442f8:	rex.WXB cld 
   1400442fa:	out    0xea,eax
   1400442fc:	(bad)  
   1400442fd:	shr    ebx,1
   1400442ff:	add    DWORD PTR [rax-0x7],ebp
   140044302:	jmp    0x1b16a614e
   140044307:	rex.X mov cl,0xd9
   14004430a:	push   rdi
   14004430b:	(bad)  
   14004430c:	adc    eax,0x53c1e373
   140044311:	movabs rdi,0x524af69cde9110d3
   14004431b:	push   rsi
   14004431c:	fisub  DWORD PTR [rdx]
   14004431e:	iret   
   14004431f:	xor    edi,DWORD PTR [rdi]
   140044321:	test   bh,al
   140044323:	rex.WRB (bad) 
   140044325:	pop    rbx
   140044326:	adc    eax,DWORD PTR [rcx+0x7c]
   140044329:	ret    0xae25
   14004432c:	jg     0x1400442b1
   14004432e:	ret    0x66b7
   140044331:	add    al,0x81
   140044333:	ror    dh,cl
   140044335:	in     al,0x49
   140044337:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140044338:	cmc    
   140044339:	cmc    
   14004433a:	pop    rdx
   14004433b:	not    BYTE PTR [rbx]
   14004433d:	stos   DWORD PTR es:[rdi],eax
   14004433e:	stos   DWORD PTR es:[rdi],eax
   14004433f:	iret   
   140044340:	sub    BYTE PTR [rdi+0x4b],cl
   140044343:	mov    BYTE PTR [rax+0x68],0x1c
   140044347:	jle    0x1400442ef
   140044349:	adc    al,0x85
   14004434b:	or     DWORD PTR [rip+0xffffffffabd23c85],esi        # 0xebd67fd6
   140044351:	sahf   
   140044352:	(bad)  
   140044353:	nop
   140044354:	sbb    edi,DWORD PTR [rcx]
   140044356:	pop    rdi
   140044357:	jne    0x140044347
   140044359:	fiadd  DWORD PTR [rcx]
   14004435b:	ins    DWORD PTR es:[rdi],dx
   14004435c:	hlt    
   14004435d:	rex.WX cli 
   14004435f:	jne    0x1400443ba
   140044361:	scas   eax,DWORD PTR es:[rdi]
   140044362:	push   rbp
   140044363:	je     0x14004433f
   140044365:	pop    rax
   140044366:	fiadd  WORD PTR [rdx]
   140044368:	or     DWORD PTR [rdx+rbx*4-0x79],0xce6e6bfb
   140044370:	mov    eax,0xb230e5c8
   140044375:	repz mov ch,0x2b
   140044378:	rex.X or edx,ebx
   14004437b:	stos   DWORD PTR es:[rdi],eax
   14004437c:	shl    DWORD PTR [rdx],0xed
   14004437f:	jnp    0x140044337
   140044381:	fsubr  QWORD PTR [rbp+0xb]
   140044384:	push   rax
   140044385:	lea    esp,[rax-0x5af62d97]
   14004438b:	fld1   
   14004438d:	pushf  
   14004438e:	mov    edx,0xb8c05063
   140044393:	add    ecx,DWORD PTR [rbx-0xc9005d5]
   140044399:	sub    al,0xdf
   14004439b:	cmp    ch,ah
   14004439d:	and    dl,BYTE PTR [rdi+0x4c014dd4]
   1400443a3:	rex.RX mov edi,0x4e2a0eb1
   1400443a9:	pop    rbp
   1400443aa:	js     0x14004438e
   1400443ac:	mov    esp,0xc8943688
   1400443b1:	ins    DWORD PTR es:[rdi],dx
   1400443b2:	mov    eax,0xd14387dc
   1400443b7:	mov    esi,0x7594ddd6
   1400443bc:	add    bh,ah
   1400443be:	addr32 pushf 
   1400443c0:	shl    BYTE PTR [rbx+rbx*1+0x7c],0x2e
   1400443c5:	(bad)  
   1400443c6:	jge    0x14004436d
   1400443c8:	cmp    dl,BYTE PTR [rdx-0xba20b99]
   1400443ce:	add    DWORD PTR [rsi+0x3c325799],edx
   1400443d4:	cdq    
   1400443d5:	rex.RX and r10b,bl
   1400443d8:	test   BYTE PTR [rax+rcx*2],ah
   1400443db:	or     edx,0xffffffdd
   1400443de:	loope  0x140044391
   1400443e0:	adc    DWORD PTR [rcx+rdi*8+0x27],0xff65a906
   1400443e8:	mov    al,0x92
   1400443ea:	mov    esp,0xc204541a
   1400443ef:	rex.WRB jns 0x1400443bf
   1400443f2:	hlt    
   1400443f3:	xchg   esp,eax
   1400443f4:	shr    DWORD PTR [rdx-0x6d],1
   1400443f7:	add    eax,0x292a7a7d
   1400443fc:	xlat   BYTE PTR ds:[rbx]
   1400443fd:	sub    BYTE PTR [rcx],ch
   1400443ff:	jge    0x14004442d
   140044401:	(bad)  
   140044402:	mov    edx,0xe25798d5
   140044407:	or     al,0x21
   140044409:	fild   QWORD PTR [rbx-0x77]
   14004440c:	jno    0x140044487
   14004440e:	xchg   BYTE PTR [rdx-0x7f],bl
   140044411:	(bad)  
   140044412:	je     0x140044409
   140044414:	sbb    DWORD PTR [rax+rdx*8+0x1],ebx
   140044418:	rex.XB
   140044419:	xor    rsi,QWORD PTR [r8+r8*1-0x1c]
   14004441e:	rex.WRXB call 0x1456f3818
   140044424:	mov    al,0xca
   140044426:	fstp   QWORD PTR [rdi-0x141dd516]
   14004442c:	adc    dl,BYTE PTR [rbp+0xab49c88]
   140044432:	rex.R cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140044434:	test   al,0x48
   140044436:	pop    rbx
   140044437:	(bad)  
   140044438:	in     eax,dx
   140044439:	stos   BYTE PTR es:[rdi],al
   14004443a:	add    rsi,QWORD PTR [r14]
   14004443d:	cld    
   14004443e:	(bad)  
   14004443f:	sub    DWORD PTR [rbx+0x44814d44],eax
   140044445:	jl     0x140044410
   140044447:	sbb    ah,BYTE PTR [rip+0xffffffffb4591725]        # 0xf45d5b72
   14004444d:	and    dl,dl
   14004444f:	(bad)  
   140044450:	jbe    0x1400444bf
   140044452:	mov    WORD PTR [rsi+rbp*4],es
   140044455:	push   rbx
   140044456:	fist   WORD PTR [rax+0x34]
   140044459:	xor    esp,ebp
   14004445b:	cli    
   14004445c:	movabs ds:0xf13cd961f82cb3cf,eax
   140044465:	jp     0x1400444cf
   140044467:	mov    cl,0xa9
   140044469:	je     0x140044494
   14004446b:	xchg   DWORD PTR [ebx-0x64],ebp
   14004446f:	sub    edx,DWORD PTR [rbx+rbx*4+0x1cff4006]
   140044476:	jmp    0x1a1eef3fc
   14004447b:	xchg   edi,eax
   14004447c:	(bad)  
   14004447d:	push   0x18
   14004447f:	(bad)
   140044483:	xor    edx,esp
   140044485:	ret    
   140044486:	sub    edx,DWORD PTR [rdi+rdx*8+0x5c02eef3]
   14004448d:	adc    eax,0xe3dae0df
   140044492:	push   rbp
   140044493:	int    0xc0
   140044495:	push   rax
   140044496:	mov    ecx,DWORD PTR [rcx-0x7d00c0c8]
   14004449c:	(bad)  
   14004449d:	mov    ebx,0xe801a49a
   1400444a2:	cmp    esp,eax
   1400444a4:	sbb    DWORD PTR [rcx+0xcaa1a0],eax
   1400444aa:	add    al,0xe1
   1400444ac:	adc    DWORD PTR [rbx+0x37],esp
   1400444af:	(bad)  
   1400444b0:	ror    DWORD PTR [rbx],0xc9
   1400444b3:	cli    
   1400444b4:	sbb    DWORD PTR [rdx],eax
   1400444b6:	add    cl,BYTE PTR [rsi-0x50]
   1400444b9:	out    0x5a,eax
   1400444bb:	jl     0x14004452f
   1400444bd:	js     0x140044452
   1400444bf:	push   rsi
   1400444c0:	and    ebx,DWORD PTR [rdi+rdx*2-0xf624ac3]
   1400444c7:	sub    BYTE PTR [rax+0x1a9d945c],al
   1400444cd:	xor    al,0xea
   1400444cf:	rcl    DWORD PTR [rdx-0x43683a06],cl
   1400444d5:	rex.WRX loopne 0x140044477
   1400444d8:	int    0x7a
   1400444da:	mov    dl,0x8e
   1400444dc:	rex.WRB or BYTE PTR [r10],r14b
   1400444df:	test   eax,0x7a58034
   1400444e4:	movsxd esi,DWORD PTR [rsi+riz*2]
   1400444e7:	xchg   ecx,eax
   1400444e8:	mov    ebp,0x389c2185
   1400444ed:	popf   
   1400444ee:	loope  0x1400444fe
   1400444f0:	ins    DWORD PTR es:[rdi],dx
   1400444f1:	cmovae esi,ebx
   1400444f4:	xor    BYTE PTR [rbp+0x11],0x58
   1400444f8:	or     al,0x98
   1400444fa:	mov    dh,0x1c
   1400444fc:	jp     0x1400444f8
   1400444fe:	clc    
   1400444ff:	xchg   edx,eax
   140044500:	rex.RXB add eax,0x6157856
   140044506:	mov    edi,DWORD PTR [rcx-0x1e02349e]
   14004450c:	sbb    esp,DWORD PTR [rcx-0x36]
   14004450f:	add    al,0x65
   140044511:	lods   eax,DWORD PTR ds:[rsi]
   140044512:	mov    ah,0x95
   140044514:	rex.RX int3 
   140044516:	push   rbp
   140044517:	(bad)  
   140044518:	add    BYTE PTR ds:[rcx+0x58],0xf7
   14004451d:	fcmovu st,st(6)
   14004451f:	movabs ds:0xfc20a075ccbd1fbb,al
   140044528:	out    0x18,eax
   14004452a:	sub    BYTE PTR [rdi],al
   14004452c:	ret    
   14004452d:	mov    esp,DWORD PTR [rsi-0x2e]
   140044530:	(bad)  
   140044531:	xor    DWORD PTR [rbp+0x5c],esi
   140044534:	xor    DWORD PTR [rcx],eax
   140044536:	(bad)  
   140044537:	or     DWORD PTR [rax-0x37e1de75],0x4f
   14004453e:	xor    eax,DWORD PTR [rdx]
   140044540:	sub    ebx,DWORD PTR [rax-0x33]
   140044543:	add    cl,ch
   140044545:	mov    dh,0xa4
   140044547:	push   rbx
   140044548:	popf   
   140044549:	(bad)  
   14004454a:	(bad)  
   14004454b:	xchg   BYTE PTR [rbx-0x32],cl
   14004454e:	push   rdi
   14004454f:	xor    ecx,edx
   140044551:	(bad)  
   140044553:	rex.R ret 
   140044555:	int    0x3b
   140044557:	cs jbe 0x1400444f7
   14004455a:	cmp    eax,0x7da8b2e9
   14004455f:	(bad)  
   140044561:	fadd   QWORD PTR [rdx-0xc]
   140044564:	stos   BYTE PTR es:[rdi],al
   140044565:	push   rbx
   140044566:	or     eax,0x823fa6e5
   14004456b:	xchg   BYTE PTR [rdi-0x3e],r15b
   14004456f:	rex.W mov cl,0x57
   140044572:	repnz movabs al,ds:0x6ba62caddda69c6d
   14004457c:	lock shr BYTE PTR [rcx],0xd8
   140044580:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140044581:	cmp    cl,al
   140044583:	imul   ecx,edi,0x1ef445a8
   140044589:	cwde   
   14004458a:	enter  0x9dcf,0xc7
   14004458e:	push   rcx
   14004458f:	scas   al,BYTE PTR es:[rdi]
   140044590:	popf   
   140044591:	sbb    al,0xf3
   140044593:	sub    DWORD PTR [rbx-0x3d],esi
   140044596:	ins    BYTE PTR es:[rdi],dx
   140044597:	cmp    DWORD PTR [rdx],0x2f
   14004459a:	add    bh,ah
   14004459c:	push   rdi
   14004459d:	out    0xd3,al
   14004459f:	jrcxz  0x14004457e
   1400445a1:	sbb    dh,BYTE PTR [rbx]
   1400445a3:	rex.XB out dx,eax
   1400445a5:	pop    rbx
   1400445a6:	push   rdi
   1400445a7:	rex.WRXB jne 0x14004452f
   1400445aa:	loopne 0x140044618
   1400445ac:	(bad)  
   1400445ad:	outs   dx,DWORD PTR ds:[rsi]
   1400445ae:	jo     0x140044624
   1400445b0:	jp     0x1400445de
   1400445b2:	cmp    al,0x93
   1400445b4:	pop    rbx
   1400445b5:	push   rdi
   1400445b6:	js     0x14004458e
   1400445b8:	and    al,0xf2
   1400445ba:	ja     0x12b3a8b15
   1400445c0:	lock mov ebp,0xaac349a0
   1400445c6:	fild   DWORD PTR [rsi-0x41]
   1400445c9:	lods   eax,DWORD PTR ds:[rsi]
   1400445ca:	(bad)  
   1400445cb:	pop    rbp
   1400445cc:	mov    bl,0x6d
   1400445ce:	push   0x1267bb3d
   1400445d3:	pop    rax
   1400445d4:	push   rbp
   1400445d5:	add    ah,BYTE PTR [rax+rax*4+0x47b6943]
   1400445dc:	(bad)  
   1400445dd:	test   BYTE PTR [rdi],cl
   1400445df:	cwde   
   1400445e0:	and    BYTE PTR [rbx],dh
   1400445e2:	push   rsi
   1400445e3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400445e4:	gs mov ecx,0xcecab218
   1400445ea:	repnz cdq 
   1400445ec:	adc    edx,DWORD PTR [rsi]
   1400445ee:	jb     0x140044624
   1400445f0:	xor    DWORD PTR [rax],edx
   1400445f2:	enter  0x295e,0x5b
   1400445f6:	mov    bl,0xa9
   1400445f8:	jp     0x1400445b9
   1400445fa:	xchg   ebx,eax
   1400445fb:	jg     0x1400445d4
   1400445fd:	in     eax,dx
   1400445fe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400445ff:	out    0xef,eax
   140044601:	out    dx,eax
   140044602:	xchg   ecx,eax
   140044603:	repnz or al,0x20
   140044606:	(bad)  
   140044607:	out    dx,eax
   140044608:	push   rbx
   140044609:	(bad)  
   14004460a:	adc    eax,0xb84bfa0b
   14004460f:	mov    bh,BYTE PTR [rdi]
   140044611:	test   al,0x2f
   140044613:	repz and bh,ch
   140044616:	and    al,0xf5
   140044618:	or     ch,ch
   14004461a:	jae    0x14004462e
   14004461c:	lods   al,BYTE PTR ds:[rsi]
   14004461d:	mov    edi,0xba24a3f5
   140044622:	jb     0x14004465d
   140044624:	(bad)  
   140044625:	(bad)  
   140044626:	sub    BYTE PTR [rbx-0x2168160],ch
   14004462c:	add    dl,BYTE PTR [rax-0x515c4482]
   140044632:	nop
   140044633:	rex.RXB
   140044634:	rex.X push 0xffffffff880bf407
   14004463a:	xor    al,al
   14004463c:	imul   esi,DWORD PTR [rdi+0x74],0xffffffd5
   140044640:	mov    ecx,0xac5e5eda
   140044645:	and    bl,BYTE PTR [rbp-0x57]
   140044648:	out    0x3f,al
   14004464a:	fs push di
   14004464d:	imul   DWORD PTR [rbp-0x22b968c2]
   140044653:	cmp    DWORD PTR [rsp+rbx*2+0x6],eax
   140044657:	push   0x3c
   140044659:	(bad)  
   14004465a:	pop    rcx
   14004465b:	(bad)  
   14004465c:	mov    ebx,0xb14cc3bc
   140044661:	pop    rbp
   140044662:	rex.XB mov r15d,0x29d7609c
   140044668:	xor    bl,dl
   14004466a:	mov    ?,WORD PTR [rdi+0x2bcbe18c]
   140044670:	ret    0xb3fb
   140044673:	add    BYTE PTR [rcx],ah
   140044675:	adc    eax,DWORD PTR [rsi-0x53c0ceae]
   14004467b:	mov    eax,0x34c3eaed
   140044680:	sbb    r14d,DWORD PTR [r10+0x79f17d9f]
   140044687:	push   rbp
   140044688:	adc    eax,DWORD PTR [rbx-0x23]
   14004468b:	cmp    DWORD PTR [rcx+rbp*4-0x501a0998],ecx
   140044692:	pop    rsp
   140044693:	stos   BYTE PTR es:[rdi],al
   140044694:	xor    eax,0x557c0c3a
   140044699:	mov    bh,0xa9
   14004469b:	mov    edx,0xc1b33fc3
   1400446a0:	fs ret 
   1400446a2:	push   rax
   1400446a3:	rcl    BYTE PTR [rsi],0x56
   1400446a6:	out    0xf4,eax
   1400446a8:	(bad)  
   1400446a9:	lock xchg dl,ch
   1400446ac:	test   al,0x2
   1400446ae:	rex.WR xchg rsi,rax
   1400446b0:	xchg   DWORD PTR [rax+0x78],esp
   1400446b3:	jl     0x14004472c
   1400446b5:	in     al,dx
   1400446b6:	shl    ebp,1
   1400446b8:	in     eax,0xe8
   1400446ba:	sbb    DWORD PTR [rdi-0x35197c87],edx
   1400446c0:	mov    cl,0xe5
   1400446c2:	(bad)  [rdx+rsi*8+0x3852fda9]
   1400446c9:	(bad)  
   1400446ca:	and    ebx,esi
   1400446cc:	in     al,dx
   1400446cd:	rex.XB mov r12b,0xdd
   1400446d0:	push   rsi
   1400446d1:	mov    ebx,0x45fa6796
   1400446d6:	xchg   cl,dh
   1400446d8:	xchg   edx,eax
   1400446da:	xchg   DWORD PTR [rdx-0x72],edx
   1400446dd:	adc    al,0xcc
   1400446df:	idiv   al
   1400446e1:	rex.WB pop r11
   1400446e3:	and    bh,BYTE PTR [rdx]
   1400446e5:	test   eax,0x1513228a
   1400446ea:	leave  
   1400446eb:	jrcxz  0x14004470d
   1400446ed:	and    ch,BYTE PTR [rax+0x57]
   1400446f0:	cli    
   1400446f1:	(bad)  
   1400446f2:	add    ecx,esp
   1400446f4:	mov    eax,0xa086b8d8
   1400446f9:	icebp  
   1400446fa:	jmp    0x1400446cc
   1400446fc:	cmp    al,0x22
   1400446fe:	mov    bh,0x85
   140044700:	nop    DWORD PTR [rax+0x14]
   140044704:	movabs ds:0x7cfbfbb491c84ae3,al
   14004470d:	(bad)  
   14004470e:	and    BYTE PTR [rbp-0x24],cl
   140044711:	(bad)  
   140044712:	mov    bh,0x5d
   140044714:	adc    al,0xce
   140044716:	add    DWORD PTR [rdx-0x29],esi
   140044719:	sub    cl,BYTE PTR [rsi]
   14004471b:	mov    dl,0xfc
   14004471d:	mov    cl,0x58
   14004471f:	cli    
   140044720:	xor    BYTE PTR [rdi-0x1],al
   140044723:	xchg   DWORD PTR [rip+0x372155ff],ebx        # 0x177259d28
   140044729:	es jb  0x14004478b
   14004472c:	add    DWORD PTR [rbx+0x7c59d486],0x634ef609
   140044736:	fstp   QWORD PTR [rdx-0x22054cee]
   14004473c:	ds scas al,BYTE PTR es:[rdi]
   14004473e:	jrcxz  0x1400447a7
   140044740:	scas   al,BYTE PTR es:[rdi]
   140044741:	lods   al,BYTE PTR ds:[rsi]
   140044742:	(bad)  
   140044743:	push   0x3
   140044745:	(bad)  
   140044746:	fwait
   140044747:	adc    al,0xa4
   140044749:	or     BYTE PTR [rdi+0x71dce68d],ch
   14004474f:	or     DWORD PTR [rcx],ebx
   140044751:	jbe    0x140044730
   140044753:	jg     0x140044793
   140044755:	cli    
   140044756:	(bad)  
   140044757:	sub    eax,0x236c2fef
   14004475c:	cli    
   14004475d:	xchg   bl,al
   14004475f:	adc    al,0xf
   140044761:	loopne 0x140044776
   140044763:	movabs al,ds:0xe06811273734b139
   14004476c:	mov    BYTE PTR [rbp+rdx*1-0x4a],ah
   140044770:	mov    bl,BYTE PTR [rip+0x79cb8f89]        # 0x1b9cfd6ff
   140044776:	js     0x1400447f4
   140044778:	out    dx,eax
   140044779:	pop    rbx
   14004477a:	in     eax,dx
   14004477b:	mov    eax,0xd82083f4
   140044780:	mov    ebx,0x20d6e3b5
   140044785:	add    edi,DWORD PTR ds:[rsi]
   140044788:	adc    esi,DWORD PTR [rax+0x4f1fa2c3]
   14004478e:	in     eax,0xbd
   140044790:	(bad)  
   140044791:	repnz mov BYTE PTR [rdx+0x22428e7c],bh
   140044798:	lods   al,BYTE PTR ds:[rsi]
   140044799:	jnp    0x1400447f2
   14004479b:	(bad)  
   14004479c:	jns    0x14004479c
   14004479e:	popf   
   14004479f:	test   eax,0xd70b6e07
   1400447a4:	pop    rax
   1400447a5:	(bad)  
   1400447a6:	xchg   esp,eax
   1400447a7:	repz (bad) 
   1400447a9:	(bad)  
   1400447aa:	shr    BYTE PTR [rax-0x25210c90],cl
   1400447b0:	lock jle 0x1400447a8
   1400447b3:	(bad)  
   1400447b4:	iret   
   1400447b5:	rex.WXB stos QWORD PTR es:[rdi],rax
   1400447b7:	(bad)  
   1400447b8:	(bad)  
   1400447b9:	fldenv [rsi+0x31]
   1400447bc:	rex.WB mov r13b,0x42
   1400447bf:	lods   eax,DWORD PTR ds:[rsi]
   1400447c0:	loope  0x14004481c
   1400447c2:	retf   0x60c5
   1400447c5:	(bad)  
   1400447c6:	pop    rdx
   1400447c7:	or     DWORD PTR [rbx-0x12],ecx
   1400447ca:	leave  
   1400447cb:	(bad)  
   1400447cc:	(bad)  
   1400447cd:	rcr    BYTE PTR [rsi+0x5f60fe41],cl
   1400447d3:	mov    eax,0xd8e13248
   1400447d8:	out    0x41,eax
   1400447da:	cmp    edx,DWORD PTR [rsi-0x17f3da8b]
   1400447e0:	add    BYTE PTR gs:[rbx+rbp*8+0x2bc7863b],ah
   1400447e8:	jge    0x140044792
   1400447ea:	int    0x44
   1400447ec:	pop    rsi
   1400447ed:	mov    ecx,0x722a2401
   1400447f2:	in     al,dx
   1400447f3:	jl     0x140044793
   1400447f5:	or     DWORD PTR [rbp-0xc],ebx
   1400447f8:	add    al,0xfe
   1400447fa:	outs   dx,DWORD PTR ds:[rsi]
   1400447fb:	jno    0x140044877
   1400447fd:	xchg   ebp,eax
   1400447fe:	xchg   edx,esi
   140044800:	mov    bl,0xc
   140044802:	gs xchg ebx,eax
   140044804:	and    BYTE PTR [rdx+0x682f39c2],dh
   14004480a:	pop    rbp
   14004480b:	ret    
   14004480c:	(bad)  
   14004480d:	and    BYTE PTR [rdi+0x1d],al
   140044810:	fistp  WORD PTR [rbx+0x1a]
   140044813:	popf   
   140044814:	xchg   BYTE PTR es:[rdx+0x3267cc82],bh
   14004481b:	ja     0x14004483f
   14004481d:	rcl    DWORD PTR [rsi],cl
   14004481f:	out    0xb4,eax
   140044821:	add    dl,al
   140044823:	sti    
   140044824:	in     al,0x4c
   140044826:	mov    ah,0xae
   140044828:	out    dx,al
   140044829:	xchg   esi,eax
   14004482a:	je     0x14004486b
   14004482c:	(bad)  
   14004482d:	shr    BYTE PTR [rbx+0x59],0x8
   140044831:	adc    ah,BYTE PTR [rdi+0x734da734]
   140044837:	adc    edi,DWORD PTR [rax+rax*1-0x65eb6dfc]
   14004483e:	lods   al,BYTE PTR ds:[rsi]
   14004483f:	and    eax,DWORD PTR [rcx+0x15084dbf]
   140044845:	sbb    ah,cl
   140044847:	mov    WORD PTR [rbx],cs
   140044849:	sti    
   14004484a:	sbb    dl,ch
   14004484c:	ins    DWORD PTR es:[rdi],dx
   14004484d:	iret   
   14004484e:	es push rdx
   140044850:	add    esi,DWORD PTR [rbx+rcx*1-0x58]
   140044854:	rex.WR scas al,BYTE PTR es:[rdi]
   140044856:	rex.XB xchg BYTE PTR [r14],cl
   140044859:	mov    DWORD PTR [rax],edx
   14004485b:	mov    esp,0x182ccf16
   140044860:	nop
   140044861:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140044862:	jmp    0x10346cef9
   140044867:	test   BYTE PTR [rdx-0x5b],dh
   14004486a:	lea    edx,[rcx-0x31bcb7ca]
   140044870:	mov    ch,0x94
   140044872:	ja     0x140044826
   140044874:	call   0x1b7f9e508
   140044879:	adc    BYTE PTR [rbx-0x38],0x73
   14004487d:	(bad)  
   14004487e:	(bad)  
   14004487f:	(bad)  
   140044880:	(bad)
   140044883:	and    dl,al
   140044885:	and    al,0x21
   140044887:	imul   esi,DWORD PTR cs:[rdx],0xffffffed
   14004488b:	sub    eax,0xb8161850
   140044890:	test   eax,0xbf7f2677
   140044895:	xlat   BYTE PTR ds:[rbx]
   140044896:	loop   0x1400448e8
   140044898:	sahf   
   140044899:	push   rdi
   14004489a:	xor    al,0x24
   14004489c:	(bad)  
   14004489d:	shl    esp,1
   14004489f:	je     0x140044880
   1400448a1:	rex.B (bad) 
   1400448a3:	jle    0x1400448f5
   1400448a5:	(bad)  
   1400448a6:	jle    0x14004487f
   1400448a8:	lods   eax,DWORD PTR ds:[rsi]
   1400448a9:	rex.WXB push r12
   1400448ab:	(bad)  
   1400448ac:	fist   WORD PTR [rbx+rax*2+0xe]
   1400448b0:	mov    dl,0x67
   1400448b2:	mov    esp,0x435f6cb4
   1400448b7:	or     BYTE PTR [rsi-0x1fcf1847],ch
   1400448bd:	cwde   
   1400448be:	cmp    al,0xb0
   1400448c0:	stc    
   1400448c1:	rex.WR (bad) 
   1400448c3:	mul    DWORD PTR [rdi-0x11]
   1400448c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400448c7:	jno    0x1400448fe
   1400448c9:	rex.WX jge 0x140044862
   1400448cc:	test   BYTE PTR [rbp+0x10ebe1a6],ah
   1400448d2:	test   al,0xb8
   1400448d4:	int3   
   1400448d5:	out    dx,eax
   1400448d6:	js     0x140044914
   1400448d8:	(bad)  
   1400448d9:	xchg   ecx,eax
   1400448da:	shl    BYTE PTR [rbp-0x40],1
   1400448dd:	rex.WB push r14
   1400448df:	(bad)
   1400448e2:	cmp    bh,BYTE PTR [rdi-0x16]
   1400448e5:	mov    ebx,DWORD PTR [rdi]
   1400448e7:	(bad)  [r11-0xb]
   1400448eb:	shl    esi,cl
   1400448ed:	push   rsp
   1400448ee:	jne    0x1400448d2
   1400448f0:	repnz or DWORD PTR [rdi],ebx
   1400448f3:	pop    rcx
   1400448f4:	scas   eax,DWORD PTR es:[rdi]
   1400448f5:	in     eax,0xc4
   1400448f7:	outs   dx,BYTE PTR ds:[rsi]
   1400448f8:	push   rcx
   1400448f9:	rex.WB loop 0x1400448f4
   1400448fc:	in     al,0x93
   1400448fe:	lods   eax,DWORD PTR ds:[rsi]
   1400448ff:	jrcxz  0x140044947
   140044901:	push   rbx
   140044902:	xchg   edx,eax
   140044903:	rex.WRB movabs ds:0x3b34312188c3571f,rax
   14004490d:	outs   dx,DWORD PTR ds:[rsi]
   14004490e:	xor    esi,DWORD PTR [rcx]
   140044910:	(bad)  
   140044911:	ror    DWORD PTR [rdx+0x18],1
   140044914:	stos   BYTE PTR es:[rdi],al
   140044915:	(bad)  
   140044917:	in     eax,dx
   140044918:	fs retf 
   14004491a:	in     eax,0x7d
   14004491c:	sbb    al,0xe3
   14004491e:	mov    WORD PTR [rsi+rbx*1-0x2761d501],?
   140044925:	ficom  WORD PTR [rip+0x52851dc4]        # 0x1928966ef
   14004492b:	mov    bl,BYTE PTR [rdx+0x2e]
   14004492e:	sbb    BYTE PTR [rdi-0x7],0x4c
   140044932:	cli    
   140044933:	xor    bh,dh
   140044935:	sub    BYTE PTR [rsi+0x770d93a8],cl
   14004493b:	mov    edi,0xb3461b43
   140044940:	cmp    bl,BYTE PTR [rcx-0x3e]
   140044943:	ret    
   140044944:	jnp    0x1400448d7
   140044946:	in     eax,dx
   140044947:	rex.WX jns 0x14004494b
   14004494a:	xchg   edx,eax
   14004494b:	rex.W (bad) 
   14004494d:	sbb    eax,0x3177ce4d
   140044952:	repz xchg ebp,eax
   140044954:	fmul   DWORD PTR [rax]
   140044956:	scas   eax,DWORD PTR es:[rdi]
   140044957:	adc    BYTE PTR [rdx+0x56],al
   14004495a:	sbb    bl,dh
   14004495c:	rcl    BYTE PTR [rcx],1
   14004495e:	push   rsp
   14004495f:	ret    0x9c4f
   140044962:	rex.WRB (bad) 
   140044964:	cdqe   
   140044966:	jbe    0x1400449a3
   140044968:	rcr    DWORD PTR [rax],0x76
   14004496b:	jbe    0x140044905
   14004496d:	jmp    0x140044969
   14004496f:	loopne 0x14004493d
   140044971:	rex.R jmp 0x140044918
   140044974:	xor    ah,ch
   140044976:	out    0x4e,eax
   140044978:	outs   dx,DWORD PTR ds:[rsi]
   140044979:	lahf   
   14004497a:	xchg   ebx,eax
   14004497b:	rex.WRX jbe 0x14004498e
   14004497e:	(bad)  
   14004497f:	(bad)  
   140044980:	fcmovnb st,st(1)
   140044982:	test   al,0x3b
   140044984:	jmp    rdi
   140044986:	pop    rsp
   140044987:	fs (bad) 
   140044989:	push   0xffffffff8cf3ad25
   14004498e:	cs pop rax
   140044990:	sub    eax,DWORD PTR [rcx]
   140044992:	xchg   ah,ah
   140044994:	add    eax,0x1a550727
   140044999:	mov    al,0xb7
   14004499b:	mov    ebp,0x7f3cb07b
   1400449a0:	xlat   BYTE PTR ds:[rbx]
   1400449a1:	jle    0x1400449da
   1400449a3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400449a4:	jg     0x140044927
   1400449a6:	sub    cl,BYTE PTR [rsi+0x76ad1a73]
   1400449ac:	fmul   DWORD PTR [rbp-0x49]
   1400449af:	and    eax,DWORD PTR [rdi]
   1400449b1:	hlt    
   1400449b2:	or     BYTE PTR [rip+0xffffffffbb670fb5],dl        # 0xfb6b596d
   1400449b8:	mov    ch,BYTE PTR [rsi]
   1400449ba:	(bad)
   1400449bd:	imul   DWORD PTR [rsi+0x69]
   1400449c0:	movabs al,ds:0xf639e2f5f2433661
   1400449c9:	pop    rdx
   1400449ca:	test   BYTE PTR [rbp-0x15],0xb
   1400449ce:	(bad)  
   1400449cf:	or     al,0xb5
   1400449d1:	and    cl,BYTE PTR [rcx-0x31]
   1400449d4:	sub    dl,dh
   1400449d6:	imul   ebp,edi,0x75
   1400449d9:	add    esi,DWORD PTR [rax]
   1400449db:	pop    rdi
   1400449dc:	pop    rcx
   1400449dd:	adc    DWORD PTR [rbp+0x66bab7e5],eax
   1400449e3:	outs   dx,BYTE PTR ds:[rsi]
   1400449e4:	ja     0x1400449b9
   1400449e6:	in     eax,dx
   1400449e7:	(bad)  
   1400449e8:	sub    DWORD PTR [rbx-0x1b21e9d9],edi
   1400449ee:	pop    rbp
   1400449ef:	outs   dx,BYTE PTR ds:[rsi]
   1400449f0:	(bad)  
   1400449f1:	fwait
   1400449f2:	jbe    0x140044a0b
   1400449f4:	shl    DWORD PTR [rbp+rdi*4-0x3d41037e],0x46
   1400449fc:	mov    bl,0xb2
   1400449fe:	ja     0x140044992
   140044a00:	cld    
   140044a01:	pop    rbx
   140044a02:	or     DWORD PTR [rbp+0x2e07efa8],esi
   140044a08:	rex.WX mov sil,0xa0
   140044a0b:	pop    rax
   140044a0c:	(bad)  
   140044a0d:	sub    DWORD PTR [rdx-0x7cd07902],esp
   140044a13:	ins    BYTE PTR es:[rdi],dx
   140044a14:	cmp    edx,esi
   140044a16:	push   rsi
   140044a17:	cmp    esi,eax
   140044a19:	fcom   QWORD PTR [rbp+0x47]
   140044a1c:	and    DWORD PTR [rbx],ecx
   140044a1e:	jrcxz  0x140044a41
   140044a20:	repnz xor DWORD PTR [rsi+rax*8],esp
   140044a24:	and    ecx,DWORD PTR [rdi+rbp*4]
   140044a27:	nop
   140044a28:	add    al,0x23
   140044a2a:	jle    0x140044a7e
   140044a2c:	nop
   140044a2d:	rex.WRXB
   140044a2e:	data16 xor al,0x9f
   140044a31:	xchg   edx,eax
   140044a32:	push   rbx
   140044a33:	push   rcx
   140044a34:	pop    rbx
   140044a35:	(bad)  
   140044a36:	leave  
   140044a37:	(bad)  
   140044a38:	(bad)  
   140044a39:	je     0x140044a52
   140044a3b:	sahf   
   140044a3c:	in     al,dx
   140044a3d:	lea    esi,[rbx]
   140044a3f:	(bad)  
   140044a40:	xchg   edi,eax
   140044a41:	enter  0x9702,0x86
   140044a45:	or     eax,0xc94c35c
   140044a4a:	call   0xfac80f5c
   140044a4f:	call   0x19878db86
   140044a54:	(bad)  
   140044a55:	ds test dh,cl
   140044a58:	xor    DWORD PTR [rdi+0x64],ebx
   140044a5b:	adc    DWORD PTR [rbx],ecx
   140044a5d:	mov    esp,0x526084ed
   140044a62:	sub    al,0x98
   140044a64:	adc    eax,0xbf875fae
   140044a69:	(bad)  
   140044a6a:	cmp    cl,BYTE PTR [rdi-0x67d7749f]
   140044a70:	rex.WRXB and r9,r9
   140044a73:	sbb    al,0x3a
   140044a75:	call   rbp
   140044a77:	js     0x140044a1b
   140044a79:	movabs ds:0xd624428bafc28c8b,al
   140044a82:	xor    ah,BYTE PTR [rsp+rsi*4+0x2433b6a9]
   140044a89:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140044a8a:	(bad)  
   140044a8b:	rex.WXB jl 0x140044abb
   140044a8e:	(bad)  
   140044a8f:	jne    0x140044af7
   140044a91:	iret   
   140044a92:	jge    0x140044a93
   140044a94:	jno    0x140044abc
   140044a96:	(bad)  
   140044a97:	add    ecx,edx
   140044a99:	add    bh,BYTE PTR [rcx+riz*4+0x5f6a2d42]
   140044aa0:	cs es rex.WX jg 0x140044aa9
   140044aa5:	test   eax,0xbc48db94
   140044aaa:	test   eax,0x535ea86f
   140044aaf:	rex.R clc 
   140044ab1:	cmp    BYTE PTR [rcx],ah
   140044ab3:	(bad)  
   140044ab4:	scas   al,BYTE PTR es:[rdi]
   140044ab5:	(bad)  
   140044ab6:	std    
   140044ab7:	data16 fisubr WORD PTR [rdi]
   140044aba:	std    
   140044abb:	jnp    0x140044af8
   140044abd:	movabs ds:0x39a101777ea78fa6,eax
   140044ac6:	xchg   edi,eax
   140044ac7:	icebp  
   140044ac8:	cmps   DWORD PTR ss:[rsi],DWORD PTR es:[rdi]
   140044aca:	(bad)  
   140044acb:	(bad)  
   140044acc:	in     al,dx
   140044acd:	sbb    ecx,DWORD PTR [rsi+0x44]
   140044ad0:	(bad)  
   140044ad1:	(bad)  
   140044ad2:	cli    
   140044ad3:	in     al,0x8a
   140044ad5:	ss jns 0x140044a97
   140044ad8:	push   rsi
   140044ad9:	(bad)  
   140044ada:	sub    BYTE PTR [rsi+0x5fc5a02e],ch
   140044ae0:	cwde   
   140044ae1:	rex.RXB jmp 0x140044aad
   140044ae4:	xchg   ebp,eax
   140044ae5:	fld    TBYTE PTR [rbx+0x69dd341a]
   140044aeb:	sbb    ebx,DWORD PTR [rbx]
   140044aed:	stos   DWORD PTR es:[rdi],eax
   140044aee:	lahf   
   140044aef:	(bad)  
   140044af0:	cmp    eax,0xb540dc47
   140044af5:	rex.XB
   140044af6:	repnz test esp,esi
   140044af9:	mov    dl,0xa
   140044afb:	push   0x7fd151a7
   140044b00:	es call 0x1640955da
   140044b06:	outs   dx,DWORD PTR ds:[rsi]
   140044b07:	xchg   esi,eax
   140044b08:	push   rsi
   140044b09:	cmp    BYTE PTR [rdx+0x7e970c97],cl
   140044b0f:	cmp    DWORD PTR [r8],esp
   140044b12:	add    bl,BYTE PTR [rax]
   140044b14:	xor    al,0xc8
   140044b16:	jns    0x140044ab0
   140044b18:	(bad)  
   140044b19:	call   0xcefb1793
   140044b1e:	repnz cmp DWORD PTR [rax+0x4b1bc6e2],edi
   140044b25:	stc    
   140044b26:	jb     0x140044ae6
   140044b28:	sub    eax,0xb6d45d2c
   140044b2d:	cdq    
   140044b2e:	xchg   al,ch
   140044b30:	xor    BYTE PTR [rdx-0x799b6de9],cl
   140044b36:	or     esp,DWORD PTR [rdi-0x15d74fee]
   140044b3c:	pushf  
   140044b3d:	pop    rdi
   140044b3e:	mov    ecx,0x26605f5f
   140044b43:	data16 xor BYTE PTR [rbp+0x49],al
   140044b47:	sub    eax,0x7ed3395c
   140044b4c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140044b4d:	in     al,dx
   140044b4e:	cli    
   140044b4f:	pop    rcx
   140044b50:	adc    al,0xe1
   140044b52:	lods   eax,DWORD PTR ds:[rsi]
   140044b53:	ins    DWORD PTR es:[rdi],dx
   140044b54:	push   rbp
   140044b55:	cli    
   140044b56:	movsxd ebp,DWORD PTR [rdi-0x7b]
   140044b59:	jrcxz  0x140044ae6
   140044b5b:	xchg   ebp,eax
   140044b5c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140044b5d:	cld    
   140044b5e:	mov    esp,DWORD PTR [rsp+rdx*1-0x1a]
   140044b62:	mov    ah,0xc1
   140044b64:	jb     0x140044b60
   140044b66:	mov    dh,0xbd
   140044b68:	(bad)  
   140044b69:	add    ebx,DWORD PTR [rip+0xffffffffd0f444fb]        # 0x110f8906a
   140044b6f:	adc    DWORD PTR [rsi],0xfb8be2ca
   140044b75:	(bad)  
   140044b76:	sbb    al,0x53
   140044b78:	pop    rbx
   140044b79:	(bad)  
   140044b7a:	fisttp QWORD PTR [rdx+0x7eb7f2b5]
   140044b80:	imul   ebp,edx,0xffffffe2
   140044b83:	(bad)  
   140044b84:	sbb    esi,DWORD PTR [rcx+0x60c94bd0]
   140044b8a:	rex.RB
   140044b8b:	rex.WRB
   140044b8c:	rex.WB xor al,0xd9
   140044b8f:	ret    0x76f
   140044b92:	jno    0x140044bb6
   140044b94:	sub    edi,edx
   140044b96:	and    al,0x41
   140044b98:	lods   eax,DWORD PTR ds:[rsi]
   140044b99:	mov    eax,0x892f0c06
   140044b9e:	(bad)  
   140044b9f:	adc    bl,cl
   140044ba1:	and    bl,BYTE PTR [rcx-0x3f]
   140044ba4:	out    dx,al
   140044ba5:	(bad)  
   140044ba6:	mov    ebp,0xc121a1a1
   140044bab:	(bad)  
   140044bac:	test   DWORD PTR [rsi+0x49],edx
   140044baf:	addr32 jns 0x140044b46
   140044bb2:	rex.WXB
   140044bb3:	gs in  al,dx
   140044bb5:	enter  0x26fa,0xae
   140044bb9:	mov    ah,0x7f
   140044bbb:	fsubr  QWORD PTR [rax-0x7e]
   140044bbe:	movabs al,ds:0xe57d7c8a94960051
   140044bc7:	outs   dx,DWORD PTR ds:[rsi]
   140044bc8:	pop    rsi
   140044bc9:	(bad)  
   140044bca:	mov    ah,0x9a
   140044bcc:	(bad)  
   140044bcd:	call   0xc6351bb9
   140044bd2:	loop   0x140044b74
   140044bd4:	sbb    al,0x12
   140044bd6:	jno    0x140044bdc
   140044bd8:	loopne 0x140044c55
   140044bda:	(bad)  
   140044bdb:	mov    edi,0xd40cc114
   140044be0:	rex.R shr bpl,1
   140044be3:	sbb    BYTE PTR [rcx+0x66804bd],ah
   140044be9:	mov    BYTE PTR [rbp+rcx*8+0x4b7b1bd8],al
   140044bf0:	or     DWORD PTR [rdi+0x367e25b8],ecx
   140044bf6:	sub    BYTE PTR [rdx+0x2f254bc9],bh
   140044bfc:	jmp    0xe209300f
   140044c01:	icebp  
   140044c02:	or     DWORD PTR [rbp+0x206254f7],ebx
   140044c08:	add    DWORD PTR [rbx-0x32e5b2d0],ebp
   140044c0e:	(bad)  
   140044c10:	(bad)  
   140044c11:	xor    al,0x86
   140044c13:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140044c15:	jbe    0x140044bab
   140044c17:	jg     0x140044c4d
   140044c19:	in     eax,0x21
   140044c1b:	(bad)  
   140044c1c:	sbb    eax,0xaff63270
   140044c21:	out    0x50,eax
   140044c23:	cs (bad) 
   140044c25:	push   rdi
   140044c26:	adc    DWORD PTR [rbp+0x7230cd8f],ebx
   140044c2c:	in     eax,dx
   140044c2d:	(bad)  
   140044c2e:	cmp    edi,DWORD PTR ds:[rdx+0x5f]
   140044c32:	outs   dx,BYTE PTR ds:[rsi]
   140044c33:	sbb    BYTE PTR [rcx+0x19d51612],bl
   140044c39:	adc    DWORD PTR [rbp+0x30],edx
   140044c3c:	xor    DWORD PTR [rsi-0x49],ecx
   140044c3f:	(bad)  
   140044c40:	retf   0x6aec
   140044c43:	test   r9b,r9b
   140044c46:	xchg   rdi,rax
   140044c48:	push   rbp
   140044c49:	pop    rsi
   140044c4a:	(bad)  
   140044c4b:	clc    
   140044c4c:	(bad)  
   140044c4d:	popf   
   140044c4e:	stos   DWORD PTR es:[rdi],eax
   140044c4f:	rex.X js 0x140044c65
   140044c52:	mov    ch,0x1d
   140044c54:	mov    dl,BYTE PTR [rsi-0x23]
   140044c57:	mov    esi,0xaa94f52e
   140044c5c:	es scas eax,DWORD PTR es:[rdi]
   140044c5e:	rol    BYTE PTR [rbp-0x77],1
   140044c61:	add    BYTE PTR [rax],cl
   140044c63:	movsxd ebp,DWORD PTR [rbx]
   140044c65:	scas   eax,DWORD PTR es:[rdi]
   140044c66:	(bad)
   140044c6b:	rex.WRB cli 
   140044c6d:	imul   ebp,edi,0x4
   140044c70:	pop    rbx
   140044c71:	ins    DWORD PTR es:[rdi],dx
   140044c72:	adc    dl,BYTE PTR [rax+rax*2]
   140044c75:	mov    esp,0x88d519a0
   140044c7a:	xchg   edi,eax
   140044c7b:	scas   al,BYTE PTR es:[rdi]
   140044c7c:	cmp    bl,BYTE PTR [rdx+0x4ddc3668]
   140044c82:	sub    BYTE PTR [rdi+0x294010be],cl
   140044c88:	rex.WX sub BYTE PTR [rbx],bpl
   140044c8b:	ds addr32 pop rax
   140044c8e:	add    DWORD PTR [rax-0x36],ebp
   140044c91:	mov    cl,0xe1
   140044c93:	add    ch,BYTE PTR [rdx+0x1e]
   140044c96:	(bad)
   140044c99:	push   rsp
   140044c9a:	(bad)  
   140044c9b:	(bad)  
   140044c9c:	cli    
   140044c9d:	(bad)  
   140044c9e:	add    eax,0xdb5c6ca9
   140044ca3:	sbb    eax,0xabc21755
   140044ca8:	cs int 0xb3
   140044cab:	in     al,dx
   140044cac:	call   0x11d49e68d
   140044cb1:	mov    edx,0x7d80879b
   140044cb6:	mov    ecx,0xb471d640
   140044cbc:	mov    edx,0xcb565fce
   140044cc1:	rex.RXB
   140044cc2:	rex.WXB sbb r9b,dil
   140044cc5:	mov    ebx,0xfa39e575
   140044cca:	repnz add dh,0xe6
   140044cce:	mov    bl,0xa3
   140044cd0:	jns    0x140044d39
   140044cd2:	rex.XB pop r15
   140044cd4:	movabs ds:0x25c97b4b52f11e14,eax
   140044cdd:	mov    dl,0x82
   140044cdf:	pop    rbx
   140044ce0:	rex.WXB retf 
   140044ce2:	shl    eax,0x1c
   140044ce5:	xchg   ecx,eax
   140044ce6:	or     BYTE PTR [rbx],ch
   140044ce8:	sub    eax,0x7f9f96b2
   140044ced:	test   al,0xe5
   140044cef:	sahf   
   140044cf0:	out    0x44,eax
   140044cf2:	rex.B (bad) 
   140044cf4:	jp     0x140044cbd
   140044cf6:	scas   eax,DWORD PTR es:[rdi]
   140044cf7:	xlat   BYTE PTR ds:[rbx]
   140044cf8:	idiv   DWORD PTR [rdi]
   140044cfa:	sub    DWORD PTR [rip+0xffffffffb1f01220],ecx        # 0xf1f45f20
   140044d00:	retf   0xbc13
   140044d03:	xor    eax,0xebe9e5b9
   140044d08:	adc    DWORD PTR [esi-0x7dba7ee3],edx
   140044d0f:	ds xor edx,edi
   140044d12:	rol    eax,1
   140044d14:	adc    edx,ebp
   140044d16:	adc    bh,BYTE PTR [rbx]
   140044d18:	rex.RX xor spl,0x4b
   140044d1c:	rex.X xor al,0x57
   140044d1f:	cmp    eax,ebp
   140044d21:	(bad)  
   140044d22:	inc    cl
   140044d24:	xor    DWORD PTR [rbx],eax
   140044d26:	out    dx,al
   140044d27:	(bad)  
   140044d28:	jl     0x140044d59
   140044d2a:	(bad)  
   140044d2b:	jne    0x140044d3f
   140044d2d:	stc    
   140044d2e:	xor    BYTE PTR [rdx],ah
   140044d30:	pop    rdi
   140044d31:	mov    bh,BYTE PTR [rsi-0x1b]
   140044d34:	ret    
   140044d35:	or     bh,BYTE PTR [rbp-0x4dbc4f93]
   140044d3b:	(bad)  
   140044d3c:	push   rcx
   140044d3d:	ret    0x1f41
   140044d40:	mov    esp,DWORD PTR [rdx+0x21]
   140044d43:	cli    
   140044d44:	mov    edi,edx
   140044d46:	not    esp
   140044d48:	not    DWORD PTR [rcx-0x54ed5f46]
   140044d4e:	(bad)  
   140044d4f:	outs   dx,BYTE PTR ds:[rsi]
   140044d50:	xchg   ebp,eax
   140044d51:	fild   QWORD PTR [rcx+0x4db27ddb]
   140044d57:	movabs ds:0xe7b471a432f5f06e,eax
   140044d60:	(bad)
   140044d63:	pop    rdi
   140044d64:	lock sbb edi,ebp
   140044d67:	xchg   ebx,eax
   140044d68:	rex.WXB and BYTE PTR [r14-0x69],dl
   140044d6c:	(bad)  
   140044d6d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140044d6e:	imul   esp,DWORD PTR [rax+0x16b5cede],0xe2f46310
   140044d78:	mov    ebp,0x7538d679
   140044d7d:	in     al,0x27
   140044d7f:	test   BYTE PTR [rdx-0x1e],0x5b
   140044d83:	cmp    BYTE PTR [rsi],dl
   140044d85:	fiadd  DWORD PTR [rax-0x5d8fc499]
   140044d8b:	test   DWORD PTR ss:[rax+0x77],esi
   140044d8f:	mov    ch,0x42
   140044d91:	(bad)  
   140044d92:	test   al,0xec
   140044d94:	mov    ecx,0xdbc74d3f
   140044d99:	outs   dx,BYTE PTR ds:[rsi]
   140044d9a:	loop   0x140044d51
   140044d9c:	rol    DWORD PTR [rdx],0xdb
   140044d9f:	movabs eax,ds:0x6e63ec0dbf3acd20
   140044da8:	(bad)  
   140044da9:	gs fcomp DWORD PTR es:[rcx]
   140044dad:	rex.B lods al,BYTE PTR ds:[rsi]
   140044daf:	or     esi,DWORD PTR [rbp-0x36d19769]
   140044db5:	jl     0x140044db9
   140044db7:	push   rbx
   140044db8:	mov    ch,0x8f
   140044dba:	sbb    eax,0x77062833
   140044dbf:	movabs ds:0x38d6c44b6bdcd91f,al
   140044dc8:	enter  0xa9a8,0xd7
   140044dcc:	or     DWORD PTR [rdi-0x38],edi
   140044dcf:	movabs al,ds:0x30a850df20b0d139
   140044dd8:	jmp    FWORD PTR [rax+0x36e4fdab]
   140044dde:	xor    QWORD PTR [rdx+r11*8+0x12773752],0xffffffffffffffb5
   140044de7:	jb     0x140044e21
   140044de9:	fsubr  QWORD PTR [rbx+0x34cb0b9d]
   140044def:	shl    DWORD PTR [rbp+0x783a0138],1
   140044df5:	(bad)  
   140044df6:	jp     0x140044e3a
   140044df8:	lock pushf 
   140044dfa:	movabs ds:0x57a2883763a566e9,eax
   140044e03:	rex.B jmp 0x140044dd9
   140044e06:	out    0x50,al
   140044e08:	pop    rax
   140044e09:	pop    rdx
   140044e0a:	movsxd edi,DWORD PTR [rbx+0x4efa983]
   140044e10:	xor    cl,BYTE PTR [rdx-0x10f840f0]
   140044e16:	cmp    DWORD PTR [rcx+0x5a],eax
   140044e19:	shl    DWORD PTR [rax+0x40],cl
   140044e1c:	jb     0x140044e84
   140044e1e:	cmp    dl,bh
   140044e20:	sbb    al,0xbf
   140044e22:	add    eax,0x93eb4999
   140044e27:	not    BYTE PTR [rcx+rsi*4+0x449f8494]
   140044e2e:	(bad)  
   140044e2f:	mov    esp,0xa5284d01
   140044e34:	sub    al,0xf1
   140044e36:	out    dx,eax
   140044e37:	test   DWORD PTR [rcx],edi
   140044e39:	cwde   
   140044e3a:	sub    BYTE PTR [rcx],bl
   140044e3c:	enter  0xaa1b,0xbf
   140044e40:	lods   al,BYTE PTR cs:[rsi]
   140044e42:	or     al,0xce
   140044e44:	rex.WRX jo 0x140044e28
   140044e47:	int    0x79
   140044e49:	repnz nop
   140044e4b:	and    ebp,edi
   140044e4d:	xchg   ebx,eax
   140044e4e:	(bad)  
   140044e4f:	mov    eax,0x5c581846
   140044e54:	pop    rbx
   140044e55:	(bad)  
   140044e56:	test   eax,0xf1c86d0e
   140044e5b:	loope  0x140044ea5
   140044e5d:	sub    DWORD PTR [rbx+0x29],0x71687f80
   140044e64:	xlat   BYTE PTR ds:[rbx]
   140044e65:	(bad)  
   140044e66:	xchg   ebx,eax
   140044e67:	out    dx,eax
   140044e68:	sub    BYTE PTR [rdx-0x40ce2d6c],dl
   140044e6e:	ret    0xe011
   140044e71:	stos   BYTE PTR es:[rdi],al
   140044e72:	cdq    
   140044e73:	or     bl,BYTE PTR [rsi+0x43]
   140044e76:	xor    eax,0xd7ead3
   140044e7b:	sbb    esi,eax
   140044e7d:	stc    
   140044e7e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140044e7f:	add    dl,BYTE PTR [rsi+0x18]
   140044e82:	ret    0x887c
   140044e85:	jno    0x140044e44
   140044e87:	xchg   esi,eax
   140044e88:	add    al,0xd
   140044e8a:	or     esp,edi
   140044e8c:	or     eax,0x5b4348f8
   140044e91:	jle    0x140044e7e
   140044e93:	sbb    DWORD PTR [rsi+rbp*2-0x55be2e45],0xb
   140044e9b:	pushf  
   140044e9c:	mov    es,WORD PTR [rbx+0x2b]
   140044e9f:	rex.W
   140044ea0:	rex.WB out dx,al
   140044ea2:	xchg   edi,eax
   140044ea3:	test   BYTE PTR [rbx+0x153e76d],dh
   140044ea9:	push   rbx
   140044eaa:	outs   dx,DWORD PTR ds:[rsi]
   140044eab:	pop    rbp
   140044eac:	jnp    0x140044f25
   140044eae:	mov    bl,0x6f
   140044eb0:	jge    0x140044e50
   140044eb2:	jle    0x140044e70
   140044eb4:	out    dx,eax
   140044eb5:	sub    bl,BYTE PTR [rbp-0x6f]
   140044eb8:	mov    BYTE PTR [rsi+0x7d],bl
   140044ebb:	test   BYTE PTR ds:[rcx+0x63],dl
   140044ebf:	lods   al,BYTE PTR ds:[rsi]
   140044ec0:	sbb    al,0xd1
   140044ec2:	sub    DWORD PTR [rdx-0x7d],edx
   140044ec5:	or     cl,bh
   140044ec7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140044ec8:	sbb    eax,0x7faf5933
   140044ecd:	pop    rax
   140044ece:	(bad)  
   140044ecf:	jne    0x140044ede
   140044ed1:	mov    eax,0x6b97bcd0
   140044ed6:	sub    edi,ebx
   140044ed8:	xchg   esi,esp
   140044eda:	jg     0x140044f3d
   140044edc:	jae    0x140044e7d
   140044ede:	xchg   ebx,eax
   140044edf:	pop    rbx
   140044ee0:	(bad)  
   140044ee1:	mov    cl,0xeb
   140044ee3:	jne    0x140044f57
   140044ee5:	fcomp  QWORD PTR [rbp+0x1b922897]
   140044eeb:	enter  0x5939,0xbd
   140044eef:	mov    eax,0x44bd0e16
   140044ef4:	rcr    DWORD PTR [rbp+rbp*1+0x50f276ba],cl
   140044efb:	fild   QWORD PTR [rcx-0x5b2dc8db]
   140044f01:	mov    WORD PTR [rdx+0x3f],?
   140044f04:	adc    esi,DWORD PTR [rdi+0x53]
   140044f07:	push   rax
   140044f08:	cmp    DWORD PTR [rsp+rsi*4-0x3fbff610],esi
   140044f0f:	ret    
   140044f10:	popf   
   140044f11:	test   BYTE PTR [rsi],0x60
   140044f14:	ror    DWORD PTR [rax-0x4],1
   140044f17:	push   rdx
   140044f18:	pop    rsp
   140044f19:	rex.RXB sar BYTE PTR es:[r11+0x6839b2e4],1
   140044f21:	leave  
   140044f22:	(bad)  
   140044f23:	sub    al,0xd4
   140044f25:	enter  0x7315,0xce
   140044f29:	and    DWORD PTR [rsi+0x27],ecx
   140044f2c:	(bad)  
   140044f2d:	fdiv   st,st(4)
   140044f2f:	push   rsp
   140044f30:	and    DWORD PTR [rdx+0x2f],eax
   140044f33:	mov    edi,0x20b25275
   140044f38:	rex.WRX popf 
   140044f3a:	push   0x79
   140044f3c:	(bad)  
   140044f3d:	mov    bl,0xec
   140044f3f:	jmp    FWORD PTR [rbx+0x75]
   140044f42:	out    0xf4,eax
   140044f44:	out    dx,al
   140044f45:	adc    BYTE PTR [rdi+0x41132f7e],dh
   140044f4b:	sbb    ah,BYTE PTR [rsi+0x56481130]
   140044f51:	sub    ebx,DWORD PTR [rbp+0x1d1e831d]
   140044f57:	adc    bl,al
   140044f59:	xchg   ebp,eax
   140044f5a:	ins    BYTE PTR es:[rdi],dx
   140044f5b:	and    al,0xf2
   140044f5d:	(bad)  
   140044f5e:	mov    WORD PTR [rcx+rcx*2-0x690b05f8],fs
   140044f65:	lahf   
   140044f66:	pushf  
   140044f67:	mov    dl,0xe3
   140044f69:	(bad)  
   140044f6a:	loope  0x140044fb4
   140044f6c:	xchg   rdi,rax
   140044f6e:	out    dx,eax
   140044f6f:	or     al,0x79
   140044f71:	(bad)  
   140044f72:	movabs al,ds:0x7e67a731930e6707
   140044f7b:	stos   BYTE PTR es:[rdi],al
   140044f7c:	test   eax,0xe9467524
   140044f81:	cdq    
   140044f82:	jb     0x140044f3d
   140044f84:	rex.WRX push 0xffffffffffffff8b
   140044f87:	fstp   st(6)
   140044f89:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140044f8b:	(bad)  
   140044f8c:	cli    
   140044f8d:	jrcxz  0x140044ffe
   140044f8f:	(bad)  
   140044f90:	sbb    edi,eax
   140044f92:	mov    DWORD PTR [rbp-0xb9dd45f],esi
   140044f98:	mov    al,0x18
   140044f9a:	nop
   140044f9b:	jge    0x140044f66
   140044f9d:	outs   dx,BYTE PTR ds:[rsi]
   140044f9e:	add    al,0x81
   140044fa0:	test   DWORD PTR [rax+rdx*4-0x1c],0xb46f5073
   140044fa8:	int3   
   140044fa9:	(bad)  
   140044faa:	adc    dh,BYTE PTR [rbx+0x2fda9327]
   140044fb0:	adc    ebp,ebx
   140044fb2:	pop    rax
   140044fb3:	fild   QWORD PTR [rdi+0x26c341ad]
   140044fb9:	jp     0x140044fef
   140044fbb:	sbb    eax,0x5cade2bf
   140044fc0:	mov    DWORD PTR [rax+rdi*8],ecx
   140044fc3:	stc    
   140044fc4:	ror    BYTE PTR [rbx-0x6f4483a5],1
   140044fca:	imul   ecx,DWORD PTR [rax-0x4715506e],0xffffffef
   140044fd1:	xchg   ebx,eax
   140044fd2:	(bad)  
   140044fd3:	fdiv   DWORD PTR [rdi]
   140044fd5:	leave  
   140044fd6:	(bad)  
   140044fd7:	jl     0x14004501f
   140044fd9:	stos   BYTE PTR es:[rdi],al
   140044fda:	pop    rdi
   140044fdb:	or     bh,BYTE PTR [rip+0xffffffffacd90eaa]        # 0xecdd5e8b
   140044fe1:	movabs ds:0x403d15040c57d9cf,al
   140044fea:	mov    dl,0x2d
   140044fec:	call   0x16e31fe1b
   140044ff1:	ficom  DWORD PTR [rdx]
   140044ff3:	mov    edi,0xaf106a4a
   140044ff8:	jb     0x140045023
   140044ffa:	cs or  ch,al
   140044ffd:	js     0x140045051
   140044fff:	retf   0x8474
   140045002:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045003:	rcr    bl,cl
   140045005:	mov    ch,0x32
   140045007:	xlat   BYTE PTR ds:[rbx]
   140045008:	repnz sar BYTE PTR [rbp+0x41],cl
   14004500c:	test   DWORD PTR [rax+0x118649e4],ebp
   140045012:	rex.WX icebp 
   140045014:	movabs ds:0x7cff80ad05b18edb,al
   14004501d:	call   rsp
   14004501f:	test   eax,0xf3f6d83e
   140045024:	jnp    0x140045002
   140045026:	(bad)  
   140045027:	ja     0x140044fc3
   140045029:	pop    rdx
   14004502a:	(bad)  
   14004502b:	push   rbp
   14004502c:	jns    0x140045072
   14004502e:	(bad)  
   14004502f:	rex.RXB xor eax,0x8e366669
   140045035:	jmp    0x140045073
   140045037:	neg    DWORD PTR [rdi]
   140045039:	imul   esi,esi,0x50
   14004503c:	jg     0x140044fdd
   14004503e:	push   rsp
   140045040:	not    DWORD PTR [rsi+rdx*8-0x3]
   140045044:	jb     0x140044fd5
   140045046:	pop    rsp
   140045047:	rex retf 0x6810
   14004504b:	push   rax
   14004504c:	xchg   esi,eax
   14004504d:	nop
   14004504e:	mov    cl,0xb6
   140045050:	xchg   ebx,ecx
   140045052:	rol    DWORD PTR [rbx],0x60
   140045055:	rcl    bl,1
   140045057:	(bad)  
   140045058:	ds pop rsi
   14004505a:	data16 (bad) 
   14004505c:	data16 jnp 0x140045031
   14004505f:	mov    bh,0xcf
   140045061:	ret    0x1b97
   140045064:	(bad)  
   140045065:	xor    BYTE PTR [rsi+0x456aff44],0xa
   14004506c:	and    BYTE PTR [rdi],dh
   14004506e:	sub    BYTE PTR [rax],dh
   140045070:	cwde   
   140045071:	push   rsi
   140045072:	xchg   ebx,eax
   140045073:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045074:	retf   
   140045075:	test   BYTE PTR [rsi+0x61],ch
   140045078:	jo     0x14004507a
   14004507a:	retf   
   14004507b:	ds (bad) 
   14004507d:	mov    ecx,0x2df3e6f9
   140045082:	out    dx,eax
   140045083:	xor    eax,esi
   140045085:	rcl    DWORD PTR [rsi+rbp*1+0x2e],1
   140045089:	rex.B movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004508b:	sahf   
   14004508c:	mov    ch,al
   14004508e:	xchg   ebx,eax
   14004508f:	push   rbp
   140045090:	(bad)  
   140045091:	jp     0x1400450e8
   140045093:	movabs al,ds:0xd81cecbac93a9ba5
   14004509c:	in     eax,dx
   14004509d:	rex.RXB (bad) 
   14004509f:	shr    DWORD PTR [rdi],cl
   1400450a1:	rex.X push rcx
   1400450a3:	je     0x14004511a
   1400450a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400450a6:	shr    DWORD PTR [rdx-0x58],cl
   1400450a9:	stos   DWORD PTR es:[rdi],eax
   1400450aa:	pop    rax
   1400450ab:	sub    al,0x46
   1400450ad:	scas   al,BYTE PTR es:[rdi]
   1400450ae:	je     0x1400450a8
   1400450b0:	idiv   esp
   1400450b2:	xlat   BYTE PTR ds:[rbx]
   1400450b3:	xor    DWORD PTR [rcx+0x5b],ebp
   1400450b6:	movabs al,ds:0xca2d162aa0137c10
   1400450bf:	rex.WR movabs rdx,0x5538d269b2459c9f
   1400450c9:	mov    edx,0x35f9b997
   1400450ce:	in     eax,dx
   1400450cf:	jge    0x14004514f
   1400450d1:	movabs ds:0xe0850b5f798d5936,al
   1400450da:	xor    al,0x2e
   1400450dc:	movabs eax,ds:0xf3a25798f14c0073
   1400450e5:	mov    edx,0x79f8db5d
   1400450ea:	mov    bh,0x9e
   1400450ec:	jo     0x140045116
   1400450ee:	add    eax,ecx
   1400450f0:	retf   0x974
   1400450f3:	push   0xffffffff8ee8c1e4
   1400450f8:	rex.WRXB out dx,al
   1400450fa:	xchg   ebp,eax
   1400450fb:	sahf   
   1400450fc:	xchg   edx,eax
   1400450fd:	rex.XB call 0xe10737f4
   140045103:	movabs ds:0x8a18944feecaafb4,al
   14004510c:	test   BYTE PTR [rsi+rbx*8-0x552b0651],dl
   140045113:	loop   0x1400450c3
   140045115:	fwait
   140045116:	and    eax,0xd5cac5a1
   14004511b:	or     eax,0x6a126976
   140045120:	outs   dx,DWORD PTR ds:[rsi]
   140045121:	xor    eax,0xde863c30
   140045126:	sbb    BYTE PTR [rsi+0x32068317],ah
   14004512c:	sbb    al,0x32
   14004512e:	hlt    
   14004512f:	loop   0x1400450c3
   140045131:	rex.WRXB movabs r14,0xbbbbc0383eddeeb7
   14004513b:	lods   eax,DWORD PTR ds:[rsi]
   14004513c:	mov    ecx,0x1d2a2593
   140045141:	rex.RXB
   140045142:	and    r9,QWORD PTR [rbp+0xb]
   140045146:	jbe    0x14004513d
   140045148:	(bad)  
   140045149:	cs loopne 0x1400451c7
   14004514c:	out    dx,eax
   14004514d:	test   al,0x5f
   14004514f:	mov    ah,0xfa
   140045151:	rex.XB (bad) [r10+0x9]
   140045155:	(bad)  
   140045156:	cli    
   140045157:	(bad)  
   140045158:	stos   DWORD PTR es:[rdi],eax
   140045159:	rol    DWORD PTR [rdi+0x2e],1
   14004515c:	retf   
   14004515d:	xchg   ecx,eax
   14004515e:	stos   DWORD PTR es:[rdi],eax
   14004515f:	or     dh,BYTE PTR [rsi+rax*2]
   140045162:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045163:	push   rax
   140045164:	jp     0x1400450f1
   140045166:	(bad)  
   140045167:	sub    esp,DWORD PTR [rbp-0x68869a3b]
   14004516d:	cwde   
   14004516e:	lock adc eax,0x3e8e9a4a
   140045174:	cmp    DWORD PTR [rcx+0x7],0xffffffea
   140045178:	sub    dh,BYTE PTR [rax+0x27b43e86]
   14004517e:	mov    esp,0x35d90301
   140045183:	ret    0x1004
   140045186:	lea    ecx,[rsi-0x3b]
   140045189:	and    ch,BYTE PTR [rax-0x2968a906]
   14004518f:	(bad)  
   140045190:	mov    ?,WORD PTR [rbx]
   140045192:	push   rdx
   140045193:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045194:	imul   eax,DWORD PTR [rdx],0xffffffb8
   140045197:	(bad)  
   140045198:	jns    0x140045177
   14004519a:	movabs al,ds:0xb42c7f6ae4d4e350
   1400451a3:	or     DWORD PTR [rcx+0x1ca373cf],esp
   1400451a9:	retf   
   1400451aa:	movabs ds:0x8398b07bc9582ff1,eax
   1400451b3:	jl     0x1400451ea
   1400451b5:	mov    edx,0x7826ed5f
   1400451ba:	std    
   1400451bb:	(bad)  
   1400451bc:	nop
   1400451bd:	int3   
   1400451be:	rex.RB
   1400451bf:	repz jrcxz 0x1400451d6
   1400451c2:	cmp    DWORD PTR [rbx],eax
   1400451c4:	add    ch,bh
   1400451c6:	jb     0x14004520c
   1400451c8:	(bad)  
   1400451c9:	pop    rdi
   1400451ca:	xlat   BYTE PTR ds:[rbx]
   1400451cb:	fisttp QWORD PTR [rsi]
   1400451cd:	mov    ds,WORD PTR [rcx]
   1400451cf:	scas   al,BYTE PTR es:[rdi]
   1400451d0:	cmp    DWORD PTR [rbp+0x3d],esp
   1400451d3:	or     BYTE PTR [rsi+0xb0ac99f],0x8
   1400451da:	(bad)  
   1400451db:	(bad)  
   1400451dc:	(bad)  
   1400451dd:	leave  
   1400451de:	sbb    BYTE PTR [rbx-0x6f],dh
   1400451e1:	rex.WRX
   1400451e2:	addr32 (bad) 
   1400451e4:	xchg   edx,eax
   1400451e5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400451e6:	mov    al,0x86
   1400451e8:	cmp    DWORD PTR [rcx+0x69],edi
   1400451eb:	fimul  WORD PTR [rbp-0x52]
   1400451ee:	(bad)  
   1400451ef:	stos   BYTE PTR es:[rdi],al
   1400451f0:	loope  0x140045184
   1400451f2:	es shr bh,1
   1400451f5:	push   rsi
   1400451f6:	lea    ecx,[rbx+0x38]
   1400451f9:	mov    edi,0x73373bf3
   1400451fe:	clc    
   1400451ff:	(bad)  
   140045200:	repz xor eax,0x93036a7f
   140045206:	or     eax,0x5cceb006
   14004520b:	jne    0x1400451bb
   14004520d:	jmp    0x1651713c5
   140045212:	push   rbp
   140045213:	and    al,0x83
   140045215:	xor    DWORD PTR [rax],esi
   140045217:	mov    dh,0x6
   140045219:	sub    BYTE PTR [rdx],bl
   14004521b:	movabs eax,ds:0xffcea049f17b0d2b
   140045224:	pop    rbx
   140045225:	mov    cl,ch
   140045227:	es fwait
   140045229:	(bad)  
   14004522a:	loop   0x1400451cc
   14004522c:	lahf   
   14004522d:	(bad)  
   14004522e:	and    bh,BYTE PTR [rdx]
   140045230:	lahf   
   140045231:	push   rsi
   140045232:	mov    bl,ch
   140045234:	(bad)  
   140045235:	pop    rbx
   140045236:	or     al,BYTE PTR [rbp+0x15]
   140045239:	int    0xb8
   14004523b:	xor    DWORD PTR [rbp-0x25ed8ff4],edi
   140045241:	lods   al,BYTE PTR ds:[rsi]
   140045242:	mov    esp,0x77f96323
   140045247:	(bad)  
   140045248:	xor    eax,0x247387f9
   14004524d:	mov    edi,0x9ad1dddf
   140045252:	adc    al,0x0
   140045254:	or     ah,ah
   140045256:	xchg   edi,eax
   140045257:	ds mov ecx,0xebb6ea32
   14004525d:	stos   BYTE PTR es:[rdi],al
   14004525e:	(bad)
   140045262:	xchg   edx,eax
   140045263:	enter  0xa0c8,0x89
   140045267:	xchg   edx,eax
   140045268:	pop    rcx
   140045269:	push   rdx
   14004526a:	ja     0x1400452d5
   14004526c:	mov    ?,WORD PTR [rdi-0x4f]
   14004526f:	(bad)  
   140045270:	out    0x21,ax
   140045273:	mul    BYTE PTR [rbp+0xd695077]
   140045279:	ja     0x14004521c
   14004527b:	add    DWORD PTR [rsp+rdx*2],edi
   14004527e:	rex.RXB cdq 
   140045280:	or     BYTE PTR [rbp+0x382ffa69],ch
   140045286:	(bad)  
   140045287:	pop    rbx
   140045288:	mov    bh,0x58
   14004528a:	jp     0x140045249
   14004528c:	rex.X scas eax,DWORD PTR es:[rdi]
   14004528e:	pop    rcx
   14004528f:	fimul  WORD PTR [rdx]
   140045291:	js     0x140045291
   140045293:	cmc    
   140045294:	mov    al,0x94
   140045296:	call   0x137b0ba03
   14004529b:	pushf  
   14004529c:	cli    
   14004529d:	(bad)  
   14004529e:	out    0x40,eax
   1400452a0:	fidivr DWORD PTR [rbx+0x1c]
   1400452a3:	add    ch,BYTE PTR [rsp+rdx*8-0x4927ff05]
   1400452aa:	cmp    esi,DWORD PTR [rdi-0x6c278fb5]
   1400452b0:	mov    bh,bh
   1400452b2:	ins    DWORD PTR es:[rdi],dx
   1400452b3:	mov    ebp,0xcecec4c8
   1400452b8:	ds push rsi
   1400452ba:	rex.WRB (bad) 
   1400452bc:	out    0x7a,al
   1400452be:	mov    eax,0xcf540609
   1400452c3:	(bad)  
   1400452c4:	fnstenv [rsi-0x7b]
   1400452c7:	xor    al,0x30
   1400452c9:	or     al,0xf5
   1400452cb:	xchg   edi,eax
   1400452cc:	jno    0x14004529c
   1400452ce:	rex.WRXB jg 0x140045270
   1400452d1:	rex.RB cmp eax,0x9c747ce5
   1400452d7:	rex.WR jp 0x140045333
   1400452da:	scas   eax,DWORD PTR es:[rdi]
   1400452db:	mov    bl,0x11
   1400452dd:	push   rax
   1400452de:	movabs ds:0x8d2465393e00ee51,rax
   1400452e8:	rex.RB ins BYTE PTR es:[rdi],dx
   1400452ea:	in     eax,dx
   1400452eb:	push   0xffffffff892af96e
   1400452f0:	movabs al,ds:0xcf38d5221d5e7e4
   1400452f9:	cmp    cl,BYTE PTR [rdi]
   1400452fb:	rex.X push rsi
   1400452fd:	(bad)  
   1400452fe:	cmp    BYTE PTR [rsi],cl
   140045300:	push   rax
   140045301:	push   rcx
   140045302:	rex.WX jmp FWORD PTR [rcx+0x3d]
   140045306:	mov    ecx,edx
   140045308:	jmp    0x110e887ef
   14004530d:	mov    bl,0x25
   14004530f:	loopne 0x14004538b
   140045311:	icebp  
   140045312:	rep lods al,BYTE PTR ds:[rsi]
   140045314:	(bad)  
   140045316:	iret   
   140045317:	pop    rsi
   140045318:	(bad)  
   140045319:	xchg   esp,eax
   14004531a:	mov    bh,0x22
   14004531c:	loopne 0x1400452ac
   14004531e:	add    DWORD PTR [rbx-0x36],ebx
   140045321:	int3   
   140045322:	add    QWORD PTR [r8+0x797cb6cc],r12
   140045329:	rex and DWORD PTR [rdx-0x786f8f4f],0xffffffd7
   140045331:	jp     0x14004538c
   140045333:	sub    al,0xbd
   140045335:	and    DWORD PTR [rsi],esi
   140045337:	rex.X
   140045338:	rex.WXB mov r11b,0x9b
   14004533b:	(bad)  
   14004533c:	fwait
   14004533d:	(bad)  
   14004533e:	test   al,0xf6
   140045340:	jns    0x1400453c1
   140045342:	test   al,0xc1
   140045344:	rex out dx,eax
   140045346:	mov    ebx,0xb8adbd8a
   14004534b:	movabs ds:0x7648156ae9afe5e,al
   140045354:	rex.R pop rcx
   140045356:	(bad)  
   140045357:	rex.R (bad) 
   140045359:	(bad)  [rax+riz*4]
   14004535c:	jbe    0x1400453a0
   14004535e:	fmul   DWORD PTR [rdi]
   140045360:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045361:	movabs al,ds:0x249b274ff545b24f
   14004536a:	movsxd ebx,DWORD PTR [rbp+0x22]
   14004536d:	push   rbp
   14004536e:	(bad)  
   14004536f:	shl    BYTE PTR [rsi+0x633db054],1
   140045375:	imul   ebp,DWORD PTR [rcx+0x2d],0xffffff9d
   140045379:	jnp    0x1400453d5
   14004537b:	sub    al,0x18
   14004537d:	pop    rdx
   14004537e:	lock mov eax,0xbd3e3a2
   140045384:	scas   eax,DWORD PTR es:[rdi]
   140045385:	adc    al,0x5f
   140045387:	xchg   esi,eax
   140045388:	(bad)  
   140045389:	(bad)
   14004538c:	sbb    al,0x3e
   14004538e:	in     al,0x76
   140045390:	rex.RXB add eax,0x4f6435eb
   140045396:	sar    bh,0x9d
   140045399:	jbe    0x140045337
   14004539b:	sbb    eax,0x61afc0ac
   1400453a0:	(bad)  
   1400453a1:	popf   
   1400453a2:	add    al,0x20
   1400453a4:	and    eax,0xa1adccfe
   1400453a9:	and    edx,eax
   1400453ab:	adc    ecx,DWORD PTR [rcx]
   1400453ad:	sub    cl,bh
   1400453af:	(bad)  
   1400453b0:	rcr    BYTE PTR [rdi-0x35],0x6c
   1400453b4:	add    ecx,DWORD PTR [rdx]
   1400453b6:	imul   DWORD PTR [rdi-0x519365a9]
   1400453bc:	sub    BYTE PTR [rcx+0x40],bh
   1400453bf:	xor    ah,dh
   1400453c1:	xchg   ecx,eax
   1400453c2:	es jno 0x140045346
   1400453c5:	js     0x140045421
   1400453c7:	xor    eax,DWORD PTR [rdx+0xa8eaca9]
   1400453cd:	and    al,0xab
   1400453cf:	pop    rsp
   1400453d0:	popf   
   1400453d1:	push   rax
   1400453d2:	(bad)  
   1400453d3:	xchg   dh,ch
   1400453d5:	mov    al,BYTE PTR [rdi+0x3c6e6015]
   1400453db:	in     al,0xfb
   1400453dd:	(bad)  
   1400453de:	pop    rsp
   1400453df:	mov    dl,0xbf
   1400453e1:	(bad)  
   1400453e2:	pop    rax
   1400453e3:	jp     0x1400453d9
   1400453e5:	sub    BYTE PTR [rip+0xffffffff92e078db],bh        # 0xd2e4ccc6
   1400453eb:	(bad)  
   1400453ec:	shr    BYTE PTR [rdx+0x7a],cl
   1400453ef:	retf   
   1400453f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400453f1:	stos   BYTE PTR es:[rdi],al
   1400453f2:	(bad)  
   1400453f3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400453f4:	ins    BYTE PTR es:[rdi],dx
   1400453f5:	retf   
   1400453f6:	icebp  
   1400453f7:	push   rsp
   1400453f8:	add    eax,0xd6493a0
   1400453fd:	es scas al,BYTE PTR es:[rdi]
   1400453ff:	rex.WR jl 0x140045480
   140045402:	pop    rax
   140045403:	pop    rdx
   140045404:	(bad)  
   140045405:	fdivr  QWORD PTR [rbx+rsi*8]
   140045408:	mov    gs,WORD PTR [rsi-0x45]
   14004540b:	jmp    0x14004543e
   14004540d:	sbb    BYTE PTR [r11],dil
   140045410:	and    dh,BYTE PTR [rbx]
   140045412:	sbb    esi,DWORD PTR [rsi]
   140045414:	jne    0x14004548c
   140045416:	rex.RB
   140045417:	repnz xor ebp,DWORD PTR [rbp+0x5291efd]
   14004541e:	pop    rsi
   14004541f:	out    dx,al
   140045420:	xlat   BYTE PTR ds:[rbx]
   140045421:	test   dl,0x3b
   140045424:	ret    
   140045425:	pop    rdi
   140045426:	or     eax,0x6cd106ce
   14004542b:	mov    ebx,0xdfeb4e3d
   140045430:	mov    DWORD PTR [rdx],eax
   140045432:	sub    DWORD PTR [rax-0x2d34cfd2],ecx
   140045438:	jle    0x140045462
   14004543a:	rex.RX adc r9d,DWORD PTR [rcx]
   14004543d:	and    BYTE PTR [rcx+0x24],al
   140045440:	xor    edx,ebx
   140045442:	push   rsi
   140045443:	push   0xffffffffffffffd0
   140045445:	pop    rbx
   140045446:	sub    DWORD PTR [rbp-0x4efc8836],esi
   14004544c:	fsub   st(0),st
   14004544e:	pop    rcx
   14004544f:	(bad)  
   140045450:	sbb    DWORD PTR [rsi+riz*1-0x79c23306],ebp
   140045457:	xchg   edx,eax
   140045458:	call   0x1b74a1649
   14004545d:	leave  
   14004545e:	shr    BYTE PTR [rdx+0x69],cl
   140045461:	jne    0x140045409
   140045463:	(bad)  
   140045464:	rex.R movabs eax,ds:0xad1b97fddfc22f28
   14004546e:	fsub   QWORD PTR [rcx]
   140045470:	and    BYTE PTR [riz*2-0x1222199e],bl
   140045477:	pop    rdi
   140045478:	(bad)  
   140045479:	xchg   ah,bl
   14004547b:	(bad)  
   14004547c:	(bad)  
   14004547d:	cdq    
   14004547e:	iret   
   14004547f:	push   rdx
   140045480:	adc    al,0xea
   140045482:	(bad)  
   140045483:	(bad)  
   140045484:	push   rdi
   140045485:	pop    rbx
   140045486:	(bad)  
   140045487:	adc    DWORD PTR [rsi],ecx
   140045489:	sti    
   14004548a:	lods   eax,DWORD PTR ds:[rsi]
   14004548b:	mov    DWORD PTR [rbx+rbx*1+0x45],ebp
   14004548f:	rex.WRX (bad) 
   140045491:	pop    rcx
   140045492:	mov    ah,0x4f
   140045494:	(bad)  
   140045495:	(bad)  
   140045496:	pop    rdx
   140045497:	not    BYTE PTR [rcx-0x41c4374e]
   14004549d:	adc    BYTE PTR [rbx],0xe9
   1400454a0:	mov    ebx,0xcb6d0280
   1400454a5:	pushf  
   1400454a6:	in     eax,0x75
   1400454a8:	cmp    BYTE PTR [rdx+rdx*4],dl
   1400454ab:	mov    edx,0x4e383c3a
   1400454b0:	(bad)  
   1400454b1:	xor    dh,BYTE PTR [rbp-0x5a]
   1400454b4:	push   rdx
   1400454b5:	bnd jb 0x14004545e
   1400454b8:	(bad)  
   1400454b9:	or     ebp,edi
   1400454bb:	push   rsp
   1400454bc:	jp     0x1400454ac
   1400454be:	jne    0x140045447
   1400454c0:	xor    BYTE PTR [rax-0x7c],al
   1400454c3:	(bad)  
   1400454c4:	jge    0x1400454a6
   1400454c6:	jle    0x14004544b
   1400454c8:	(bad)  
   1400454c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400454ca:	rex.R pop rdx
   1400454cc:	cdq    
   1400454cd:	fst    DWORD PTR [rsi-0x4e8111a3]
   1400454d3:	sub    bl,BYTE PTR [rbx+rbx*4]
   1400454d6:	hlt    
   1400454d7:	getsec 
   1400454d9:	sbb    r13d,DWORD PTR [rsi]
   1400454dc:	ins    DWORD PTR es:[rdi],dx
   1400454dd:	cld    
   1400454de:	fisubr DWORD PTR [rdi]
   1400454e0:	(bad)  
   1400454e1:	(bad)  [rbp-0x7d282a3f]
   1400454e7:	mov    bh,0x38
   1400454e9:	sysret 
   1400454eb:	xchg   DWORD PTR [rip+0xfffffffff522bff0],edi        # 0x1352714e1
   1400454f1:	scas   al,BYTE PTR es:[rdi]
   1400454f2:	mov    esp,0x524ca99a
   1400454f7:	cmp    edi,ebp
   1400454f9:	add    eax,0x5b75a1b8
   1400454fe:	and    eax,DWORD PTR [rdx]
   140045500:	retf   
   140045501:	jl     0x140045567
   140045503:	mov    ah,0x39
   140045505:	lahf   
   140045506:	jo     0x1400454fa
   140045508:	xchg   BYTE PTR [rdi-0x25693515],ah
   14004550e:	and    DWORD PTR [rcx],esp
   140045510:	xlat   BYTE PTR ds:[rbx]
   140045511:	fild   QWORD PTR [rbp+0x33d0aedd]
   140045517:	lock scas al,BYTE PTR es:[rdi]
   140045519:	and    ch,BYTE PTR [rbx]
   14004551b:	es es (bad) 
   14004551e:	shl    DWORD PTR [rax-0xc],cl
   140045521:	sbb    DWORD PTR [rsi-0x6be141c3],ebp
   140045527:	js     0x14004559f
   140045529:	cdq    
   14004552a:	cmp    dh,BYTE PTR [rip+0x2030eaa]        # 0x1420763da
   140045530:	adc    BYTE PTR [rbx],bh
   140045532:	adc    ch,ah
   140045534:	(bad)  
   140045535:	sbb    DWORD PTR [rsi-0x68],edi
   140045538:	adc    esi,DWORD PTR [rdx]
   14004553a:	movabs eax,ds:0x5a79d9cc6bf07662
   140045543:	rex.WRXB int3 
   140045545:	or     BYTE PTR [rdi-0x30],bh
   140045548:	or     eax,0x99462ee0
   14004554d:	rcl    cl,cl
   14004554f:	es rex.RX
   140045551:	fwait
   140045552:	add    al,0xb6
   140045554:	cmp    bl,BYTE PTR [rcx-0x2276dd75]
   14004555a:	fwait
   14004555b:	int    0x63
   14004555d:	rex and esp,DWORD PTR [rax-0x45399f4d]
   140045564:	nop
   140045565:	push   rsi
   140045566:	push   0x1
   140045568:	data16 lahf 
   14004556a:	xor    ecx,edi
   14004556c:	rex.RX icebp 
   14004556e:	es je  0x14004557c
   140045571:	(bad)  
   140045572:	test   DWORD PTR [rsi-0x309f128],edx
   140045578:	or     ch,ah
   14004557a:	mov    ebp,0xd5603c7b
   14004557f:	sub    BYTE PTR [rbp+riz*4+0x7e],dl
   140045583:	ins    BYTE PTR es:[rdi],dx
   140045584:	rcr    BYTE PTR [rdx],cl
   140045586:	adc    dh,0x60
   140045589:	cs out dx,eax
   14004558b:	(bad)  
   14004558c:	xchg   edi,eax
   14004558d:	jg     0x140045518
   14004558f:	(bad)  
   140045590:	and    DWORD PTR [rbx],edi
   140045592:	fistp  DWORD PTR [rip+0xffffffffc9c256f0]        # 0x109c6ac89
   140045599:	or     al,0x79
   14004559b:	rex.RXB sbb r9b,r15b
   14004559e:	imul   edx,DWORD PTR [rdx+rdx*1-0x4],0x36
   1400455a3:	sub    DWORD PTR [rsi+0x65195df7],0x1674bf0b
   1400455ad:	cli    
   1400455ae:	imul   edx,DWORD PTR [rip+0xfffffffff1d5f592],0x866c9a43        # 0x131da4b4a
   1400455b8:	sti    
   1400455b9:	and    eax,0xd6195cc6
   1400455be:	cmc    
   1400455bf:	mov    BYTE PTR [rbx],bl
   1400455c1:	sbb    bl,ch
   1400455c3:	movabs ds:0x1e296eaac4d03535,eax
   1400455cc:	jg     0x1400455a7
   1400455ce:	cmp    eax,0x40032ce6
   1400455d3:	(bad)  
   1400455d4:	stc    
   1400455d5:	push   rax
   1400455d6:	(bad)  
   1400455d7:	(bad)  [r9-0x1941406c]
   1400455de:	rex.WB (bad) 
   1400455e0:	scas   al,BYTE PTR es:[rdi]
   1400455e1:	mov    ebp,0xe194a4bf
   1400455e6:	mov    ah,0x23
   1400455e8:	popf   
   1400455e9:	xchg   DWORD PTR [rbp-0x642b7f1],eax
   1400455ef:	mov    ecx,0xd808dfa4
   1400455f4:	add    esi,DWORD PTR [rdx-0x52]
   1400455f7:	repz es retf 0x7c7c
   1400455fc:	int    0x65
   1400455fe:	cdq    
   1400455ff:	xchg   esp,eax
   140045600:	sub    BYTE PTR [rsi+rbp*1-0x4fa61b3d],ch
   140045607:	mov    esi,0xc1cce715
   14004560c:	cli    
   14004560d:	addr32 mov eax,ds:0xa53aef8
   140045613:	(bad)  
   140045614:	cmp    al,0xf9
   140045616:	(bad)  
   140045617:	ins    BYTE PTR es:[rdi],dx
   140045618:	rex.XB xor eax,0xc9515bbb
   14004561e:	mov    cl,0xf1
   140045620:	lea    ebx,[rbp+rdi*4+0x726d5566]
   140045627:	jo     0x140045694
   140045629:	rex.WX xchg QWORD PTR [rax-0x1e],rcx
   14004562d:	cwde   
   14004562e:	pop    rcx
   14004562f:	(bad)  
   140045630:	fprem  
   140045632:	(bad)  
   140045633:	jge    0x14004567b
   140045635:	imul   ebx,DWORD PTR [rip+0x42a1713e],0xc0ef13d7        # 0x182a5c77d
   14004563f:	(bad)  
   140045640:	movlps QWORD PTR [rbp+0x6a1ae8ce],xmm0
   140045647:	xchg   edi,eax
   140045648:	rex fisttp DWORD PTR [rsp+rbx*2]
   14004564c:	sbb    ebp,DWORD PTR [rdi]
   14004564e:	add    eax,0x854b1aff
   140045653:	or     al,0xd3
   140045655:	repz ror BYTE PTR [rdx],1
   140045658:	(bad)  
   140045659:	mov    esi,0x35f00d5
   14004565e:	enter  0xe13,0x5b
   140045662:	ja     0x1400456e0
   140045664:	mov    fs,WORD PTR [rdi]
   140045666:	sbb    eax,esi
   140045668:	push   rsp
   140045669:	mov    bl,0xe9
   14004566b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004566c:	and    al,0xed
   14004566e:	jae    0x140045642
   140045670:	(bad)  
   140045671:	push   rcx
   140045672:	mov    ah,0x37
   140045674:	jp     0x140045649
   140045676:	sub    BYTE PTR [rbp-0x7282deca],dl
   14004567c:	movabs ds:0x15edfebf39bcda3,al
   140045685:	in     al,dx
   140045686:	(bad)  
   140045687:	es lea esp,es:[rbp+0x3db4bce9]
   14004568f:	xor    esp,DWORD PTR [rbp-0x4d]
   140045692:	mov    ebp,esp
   140045694:	fidiv  WORD PTR [rsi-0xfd48627]
   14004569a:	rex.RX cmp BYTE PTR [rcx-0x44850f1d],r10b
   1400456a1:	in     eax,dx
   1400456a2:	pop    rbp
   1400456a3:	sbb    ebp,DWORD PTR [rsi-0x4]
   1400456a6:	jmp    rdx
   1400456a8:	add    QWORD PTR [rdx+rsi*8],r11
   1400456ac:	test   BYTE PTR [rsi+rbp*2+0x3c],dh
   1400456b0:	add    ebp,DWORD PTR [rdx+0x77]
   1400456b3:	rex.X lods eax,DWORD PTR ds:[rsi]
   1400456b5:	sub    al,0x60
   1400456b7:	xor    esp,DWORD PTR [rcx+0x7b574c92]
   1400456bd:	and    DWORD PTR [rcx+0x74],edi
   1400456c0:	js     0x1400456c5
   1400456c2:	call   0x1b9306534
   1400456c7:	jmp    0x140045731
   1400456c9:	(bad)  
   1400456ca:	cs (bad) 
   1400456cd:	sub    cl,bh
   1400456cf:	mov    DWORD PTR [rdx],ecx
   1400456d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400456d2:	(bad)  
   1400456d3:	in     al,dx
   1400456d4:	mov    ch,0x4
   1400456d6:	push   rax
   1400456d7:	jge    0x1400456f4
   1400456d9:	sbb    dl,ah
   1400456db:	(bad)  
   1400456dc:	sub    r8b,BYTE PTR [rdi]
   1400456df:	pop    rax
   1400456e0:	or     DWORD PTR [rcx+rax*2],0x3b
   1400456e4:	(bad)  
   1400456e5:	stc    
   1400456e6:	(bad)  
   1400456e7:	in     al,0x6a
   1400456e9:	(bad)  
   1400456ea:	lock (bad) 
   1400456ec:	sub    ebx,DWORD PTR [rdi+0x65066dac]
   1400456f2:	(bad)  
   1400456f3:	movabs al,ds:0x777818a3e3280453
   1400456fc:	jb     0x140045740
   1400456fe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400456ff:	es add ch,al
   140045702:	stc    
   140045703:	lock movabs ds:0xf85470d12b0a7252,al
   14004570d:	ret    
   14004570e:	jp     0x140045775
   140045710:	and    bl,ch
   140045712:	(bad)  
   140045713:	loop   0x14004572c
   140045715:	cmp    dh,BYTE PTR [rsi]
   140045717:	pop    rbx
   140045718:	fcmovb st,st(1)
   14004571a:	cmp    eax,0xf5cc8b76
   14004571f:	mov    ebx,0xe09ba761
   140045724:	cmp    eax,DWORD PTR [rcx+0xb]
   140045727:	sub    al,0x5b
   140045729:	int3   
   14004572a:	stos   DWORD PTR es:[rdi],eax
   14004572b:	rex.WRXB sti 
   14004572d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004572e:	mov    DWORD PTR [rcx],edx
   140045730:	retf   0x239f
   140045733:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140045734:	(bad)  
   140045735:	fidiv  DWORD PTR [rdi]
   140045737:	rex.RX in al,dx
   140045739:	add    BYTE PTR [rax],al
   14004573b:	add    BYTE PTR [rax],al
   14004573d:	add    BYTE PTR [rax],al
   14004573f:	add    BYTE PTR [rcx],cl
   140045741:	add    al,0x0
   140045743:	add    BYTE PTR [rcx],al
   140045745:	add    eax,0x9ff0000
   14004574a:	add    BYTE PTR [rax],al
   14004574c:	add    DWORD PTR [rax+rax*1],eax
   14004574f:	add    BYTE PTR [rdx],al
   140045751:	add    al,0x0
   140045753:	add    BYTE PTR [rip+0x6000004],al        # 0x14604575d
   140045759:	add    al,0x0
   14004575b:	add    BYTE PTR [rdi],al
   14004575d:	add    al,0x0
   14004575f:	add    BYTE PTR [rax],cl
   140045761:	add    al,0x0
   140045763:	add    BYTE PTR [rcx],cl
   140045765:	or     BYTE PTR [rax],al
   140045767:	add    BYTE PTR [rdx],cl
   140045769:	or     al,0x0
   14004576b:	add    BYTE PTR [rip+0xb000004],ah        # 0x14b045775
   140045771:	add    al,0x0
   140045773:	add    BYTE PTR [rsp+rax*1],cl
   140045776:	add    BYTE PTR [rax],al
   140045778:	or     eax,0x1a000004
   14004577d:	add    al,0x0
   14004577f:	add    BYTE PTR [rsi],cl
   140045781:	add    al,0x0
   140045783:	add    BYTE PTR [rax],dl
   140045785:	add    al,0x0
   140045787:	add    BYTE PTR [rcx],dl
   140045789:	add    al,0x0
   14004578b:	add    BYTE PTR [rdx],dl
   14004578d:	add    al,0x0
   14004578f:	add    BYTE PTR [rdi],ah
   140045791:	add    al,0x0
   140045793:	add    BYTE PTR [rsi],ah
   140045795:	add    al,0x0
   140045797:	add    BYTE PTR [rsp+rax*1],dl
   14004579a:	add    BYTE PTR [rax],al
   14004579c:	adc    eax,DWORD PTR [rax+rax*1]
   14004579f:	add    BYTE PTR [rip+0x16000004],dl        # 0x1560457a9
   1400457a5:	add    al,0x0
   1400457a7:	add    BYTE PTR [rsi],dl
   1400457a9:	or     BYTE PTR [rax],al
   1400457ab:	add    BYTE PTR [rax],bl
   1400457ad:	add    al,0x0
   1400457af:	add    BYTE PTR [rcx],bl
   1400457b1:	add    al,0x0
   1400457b3:	add    BYTE PTR [rbx],bl
   1400457b5:	add    al,0x0
   1400457b7:	add    BYTE PTR [rsp+rax*1],ah
   1400457ba:	add    BYTE PTR [rax],al
   1400457bc:	sbb    ah,BYTE PTR [rax+rax*1]
   1400457bf:	add    BYTE PTR [rip+0x1e000004],bl        # 0x15e0457c9
   1400457c5:	add    al,0x0
   1400457c7:	add    BYTE PTR [rdi],bl
   1400457c9:	add    al,0x0
   1400457cb:	add    BYTE PTR [rdx],ah
   1400457cd:	add    al,0x0
   1400457cf:	add    BYTE PTR [rax+rcx*1],al
   1400457d2:	add    BYTE PTR [rax],al
   1400457d4:	add    al,0xc
   1400457d6:	add    BYTE PTR [rax],al
   1400457d8:	add    al,0x4
   1400457da:	add    BYTE PTR [rax],al
   1400457dc:	add    BYTE PTR [rax],al
   1400457de:	add    BYTE PTR [rax],al
   1400457e0:	add    DWORD PTR [rax],eax
   1400457e2:	add    al,BYTE PTR [rax]
   1400457e4:	add    eax,DWORD PTR [rax]
   1400457e6:	add    al,0x0
   1400457e8:	add    eax,0x600
   1400457ed:	add    BYTE PTR [rax],al
   1400457ef:	add    BYTE PTR [rax+0x0],ch
   1400457f2:	je     0x1400457f4
   1400457f4:	je     0x1400457f6
   1400457f6:	jo     0x1400457f8
   1400457f8:	cmp    al,BYTE PTR [rax]
   1400457fa:	(bad)  
   1400457fb:	add    BYTE PTR [rdi],ch
   1400457fd:	add    BYTE PTR [rax],al
   1400457ff:	add    BYTE PTR [rax+0x0],ch
   140045802:	je     0x140045804
   140045804:	je     0x140045806
   140045806:	jo     0x140045808
   140045808:	jae    0x14004580a
   14004580a:	cmp    al,BYTE PTR [rax]
   14004580c:	(bad)  
   14004580d:	add    BYTE PTR [rdi],ch
	...
   140045817:	add    BYTE PTR [rsi+0x0],ah
   14004581a:	je     0x14004581c
   14004581c:	jo     0x14004581e
   14004581e:	cmp    al,BYTE PTR [rax]
   140045820:	(bad)  
   140045821:	add    BYTE PTR [rdi],ch
   140045823:	add    BYTE PTR [rax],al
   140045825:	add    BYTE PTR [rax],al
   140045827:	add    BYTE PTR [rsi+0x0],ch
   14004582a:	add    BYTE PTR gs:[rdi+0x0],dh
   14004582e:	jae    0x140045830
   140045830:	cmp    al,BYTE PTR [rax]
   140045832:	add    BYTE PTR [rax],al
   140045834:	add    BYTE PTR [rax],al
   140045836:	add    BYTE PTR [rax],al
   140045838:	je     0x14004583a
   14004583a:	add    BYTE PTR gs:[rax+rax*1+0x6e],ch
   14004583f:	add    BYTE PTR [rbp+0x0],ah
   140045842:	je     0x140045844
   140045844:	cmp    al,BYTE PTR [rax]
   140045846:	(bad)  
   140045847:	add    BYTE PTR [rdi],ch
   140045849:	add    BYTE PTR [rax],al
   14004584b:	add    BYTE PTR [rax],al
   14004584d:	add    BYTE PTR [rax],al
   14004584f:	add    BYTE PTR [rdi+0x0],dh
   140045852:	ja     0x140045854
   140045854:	ja     0x140045856
   140045856:	add    BYTE PTR cs:[rax],al
   140045859:	add    BYTE PTR [rax],al
   14004585b:	add    BYTE PTR [rax],ch
   14004585d:	add    BYTE PTR [rcx],ah
   14004585f:	add    BYTE PTR [rax],al
   140045861:	add    BYTE PTR [rax],al
   140045863:	add    BYTE PTR [rcx],ch
   140045865:	add    BYTE PTR [rax],al
   140045867:	add    BYTE PTR [rsi+0x0],cl
   14004586a:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14004586e:	add    BYTE PTR [r8],r8b
   140045871:	add    BYTE PTR [rax],al
   140045873:	add    BYTE PTR [rax],al
   140045875:	add    BYTE PTR [rax],al
   140045877:	add    BYTE PTR [rdi+0x0],dl
   14004587a:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   14004587e:	add    BYTE PTR [rax+rax*1+0x49],r9b
   140045883:	add    BYTE PTR [rbx+0x0],dl
   140045886:	push   rsp
	...
   14004588f:	add    BYTE PTR [rbx+0x0],dl
   140045892:	outs   dx,DWORD PTR ds:[rsi]
   140045893:	add    BYTE PTR [rsi+0x0],ah
   140045896:	je     0x140045898
   140045898:	ja     0x14004589a
   14004589a:	(bad)  
   14004589b:	add    BYTE PTR [rdx+0x0],dh
   14004589e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   1400458a3:	add    BYTE PTR [rcx+0x0],ch
   1400458a6:	movsxd eax,DWORD PTR [rax]
   1400458a8:	jb     0x1400458aa
   1400458aa:	outs   dx,DWORD PTR ds:[rsi]
   1400458ab:	add    BYTE PTR [rbx+0x0],dh
   1400458ae:	outs   dx,DWORD PTR ds:[rsi]
   1400458af:	add    BYTE PTR [rsi+0x0],ah
   1400458b2:	je     0x1400458b4
   1400458b4:	pop    rsp
   1400458b5:	add    BYTE PTR [rcx+0x0],cl
   1400458b8:	outs   dx,BYTE PTR ds:[rsi]
   1400458b9:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400458bd:	add    BYTE PTR [rdx+0x0],dh
   1400458c0:	outs   dx,BYTE PTR ds:[rsi]
   1400458c1:	add    BYTE PTR [rbp+0x0],ah
   1400458c4:	je     0x1400458c6
   1400458c6:	and    BYTE PTR [rax],al
   1400458c8:	add    BYTE PTR [r8+0x0],r15b
   1400458cc:	jo     0x1400458ce
   1400458ce:	ins    BYTE PTR es:[rdi],dx
   1400458cf:	add    BYTE PTR [rdi+0x0],ch
   1400458d2:	jb     0x1400458d4
   1400458d4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400458d8:	pop    rsp
   1400458d9:	add    BYTE PTR [rax+rax*1+0x79],dl
   1400458dd:	add    BYTE PTR [rax+0x0],dh
   1400458e0:	add    BYTE PTR gs:[rax+rax*1+0x55],ah
   1400458e5:	add    BYTE PTR [rdx+0x0],dl
   1400458e8:	rex.WR add BYTE PTR [rbx+0x0],r14b
   1400458ec:	add    BYTE PTR [rax],al
   1400458ee:	add    BYTE PTR [rax],al
   1400458f0:	add    BYTE PTR cs:[rsi],ch
   1400458f3:	add    BYTE PTR [rax],al
   1400458f5:	add    BYTE PTR [rax],al
   1400458f7:	add    al,dh
   1400458f9:	push   rdi
   1400458fa:	add    al,0x40
   1400458fc:	add    DWORD PTR [rax],eax
   1400458fe:	add    BYTE PTR [rax],al
   140045900:	add    BYTE PTR [rax+0x4],bl
   140045903:	rex add DWORD PTR [rax],eax
   140045906:	add    BYTE PTR [rax],al
   140045908:	sbb    BYTE PTR [rax+0x4],bl
   14004590b:	rex add DWORD PTR [rax],eax
   14004590e:	add    BYTE PTR [rax],al
   140045910:	sub    BYTE PTR [rax+0x4],bl
   140045913:	rex add DWORD PTR [rax],eax
   140045916:	add    BYTE PTR [rax],al
   140045918:	cmp    BYTE PTR [rax+0x4],bl
   14004591b:	rex add DWORD PTR [rax],eax
   14004591e:	add    BYTE PTR [rax],al
   140045920:	push   rax
   140045921:	pop    rax
   140045922:	add    al,0x40
   140045924:	add    DWORD PTR [rax],eax
   140045926:	add    BYTE PTR [rax],al
   140045928:	data16 add BYTE PTR [rcx+0x0],ch
   14004592c:	ins    BYTE PTR es:[rdi],dx
   14004592d:	add    BYTE PTR [rbp+0x0],ah
   140045930:	cmp    al,BYTE PTR [rax]
   140045932:	(bad)  
   140045933:	add    BYTE PTR [rdi],ch
   140045935:	add    BYTE PTR [rdi],ch
	...
   14004593f:	add    BYTE PTR [rsi+0x0],cl
   140045942:	je     0x140045944
   140045944:	add    BYTE PTR fs:[rax+rax*1+0x6c],ch
   140045949:	add    BYTE PTR [rsi],ch
   14004594b:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14004594f:	add    BYTE PTR [rax+rax*1+0x0],ch
   140045953:	add    BYTE PTR [rax],al
   140045955:	add    BYTE PTR [rax],al
   140045957:	add    BYTE PTR [rdi+0x69],dl
   14004595a:	outs   dx,BYTE PTR ds:[rsi]
   14004595b:	push   rbx
   14004595c:	jno    0x1400459cb
   14004595e:	rex.WB jae 0x1400459b0
   140045961:	jo     0x1400459d7
   140045963:	gs rex.WB outs dx,BYTE PTR fs:[rsi]
   140045967:	add    BYTE PTR [rax+rax*1+0x61],dl
   14004596b:	add    BYTE PTR [rdx+0x0],ah
   14004596e:	ins    BYTE PTR es:[rdi],dx
   14004596f:	add    BYTE PTR [rbp+0x0],ah
   140045972:	je     0x140045974
   140045974:	rex.WB add BYTE PTR [r14+0x0],bpl
   140045978:	jo     0x14004597a
   14004597a:	jne    0x14004597c
   14004597c:	je     0x14004597e
   14004597e:	push   rbx
   14004597f:	add    BYTE PTR [rbp+0x0],ah
   140045982:	jb     0x140045984
   140045984:	jbe    0x140045986
   140045986:	imul   eax,DWORD PTR [rax],0x650063
   14004598c:	add    BYTE PTR [rax],al
   14004598e:	add    BYTE PTR [rax],al
   140045990:	xor    eax,0x39a3bc08
   140045995:	add    eax,0xf84
	...
   1400459a6:	cmp    BYTE PTR [rsi],0x0
   1400459a9:	add    BYTE PTR [rax+0x3f],al
   1400459ac:	add    BYTE PTR [rax],al
   1400459ae:	adc    BYTE PTR [rax+0x52],al
   1400459b1:	push   rbx
   1400459b2:	rex.R push rbx
   1400459b4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400459b5:	mov    al,0xf3
   1400459b7:	sti    
   1400459b8:	jo     0x1400459e3
   1400459ba:	mov    edi,0x50109649
   1400459bf:	stos   DWORD PTR es:[rdi],eax
   1400459c0:	rex.X jae 0x140045948
   1400459c3:	rol    BYTE PTR [rcx],cl
   1400459c5:	add    BYTE PTR [rax],al
   1400459c7:	add    BYTE PTR [rcx+riz*2+0x62],dl
   1400459cb:	push   rsp
   1400459cc:	imul   esi,DWORD PTR [rax+0x2e],0x626470
	...
   1400459e7:	add    BYTE PTR [rax],al
   1400459e9:	push   rbp
   1400459ea:	rex.RXB push r8
   1400459ec:	add    BYTE PTR [rax],dl
   1400459ee:	add    BYTE PTR [rax],al
   1400459f0:	pop    rcx
   1400459f1:	add    al,BYTE PTR [rax]
   1400459f3:	add    BYTE PTR [rsi],ch
   1400459f5:	je     0x140045a5c
   1400459f7:	js     0x140045a6d
   1400459f9:	and    al,0x64
   1400459fb:	imul   eax,DWORD PTR [rax],0x5c000000
   140045a01:	adc    al,BYTE PTR [rax]
   140045a03:	add    bl,dh
   140045a05:	add    BYTE PTR [rax],al
   140045a07:	add    BYTE PTR [rsi],ch
   140045a09:	je     0x140045a70
   140045a0b:	js     0x140045a81
   140045a0d:	and    al,0x6c
   140045a0f:	jo     0x140045a41
   140045a11:	xor    BYTE PTR [rcx+riz*2+0x62],dh
   140045a15:	je     0x140045a80
   140045a17:	jo     0x140045a47
   140045a19:	gs js  0x140045a81
   140045a1c:	and    DWORD PTR [rdx],esi
   140045a1e:	xor    BYTE PTR [rdi+0x70],bl
   140045a21:	jb     0x140045a8c
   140045a23:	(bad)  
   140045a24:	add    BYTE PTR [rax],al
   140045a26:	add    BYTE PTR [rax],al
   140045a28:	push   rax
   140045a29:	adc    eax,DWORD PTR [rax]
   140045a2b:	add    BYTE PTR [rax-0x1e],ah
   140045a2e:	add    BYTE PTR [rax],al
   140045a30:	cs je  0x140045a98
   140045a33:	js     0x140045aa9
   140045a35:	and    al,0x6c
   140045a37:	jo     0x140045a69
   140045a39:	xor    DWORD PTR [rcx+riz*2+0x62],esi
   140045a3d:	je     0x140045aa8
   140045a3f:	jo     0x140045a6f
   140045a41:	gs js  0x140045aa9
   140045a44:	and    DWORD PTR [rdx],esi
   140045a46:	xor    BYTE PTR [rdi+0x70],bl
   140045a49:	jb     0x140045ab4
   140045a4b:	(bad)  
   140045a4c:	add    BYTE PTR [rax],al
   140045a4e:	add    BYTE PTR [rax],al
   140045a50:	mov    al,0xf5
   140045a52:	add    BYTE PTR [rax],al
   140045a54:	add    eax,0x2e00002a
   140045a59:	je     0x140045ac0
   140045a5b:	js     0x140045ad1
   140045a5d:	and    al,0x6c
   140045a5f:	jo     0x140045a91
   140045a61:	xor    esi,DWORD PTR [rcx+riz*2+0x62]
   140045a65:	je     0x140045ad0
   140045a67:	jo     0x140045a97
   140045a69:	gs js  0x140045ad1
   140045a6c:	and    DWORD PTR [rbx],esi
   140045a6e:	xor    BYTE PTR [rdi+0x63],bl
   140045a71:	ins    BYTE PTR es:[rdi],dx
   140045a72:	imul   esp,DWORD PTR [rbp+0x6e],0x6c6e6f74
   140045a79:	jns    0x140045a7b
   140045a7b:	add    BYTE PTR [rax-0x5cfffee1],bh
   140045a81:	add    BYTE PTR [rax],al
   140045a83:	add    BYTE PTR [rsi],ch
   140045a85:	je     0x140045aec
   140045a87:	js     0x140045afd
   140045a89:	and    al,0x6c
   140045a8b:	jo     0x140045abd
   140045a8d:	ss je  0x140045af1
   140045a90:	(bad)  
   140045a91:	je     0x140045afc
   140045a93:	jo     0x140045ac3
   140045a95:	gs js  0x140045afd
   140045a98:	and    DWORD PTR [rbx],esi
   140045a9a:	xor    eax,0x6279685f
   140045a9f:	jb     0x140045b0a
   140045aa1:	fs (bad) 
   140045aa3:	outs   dx,DWORD PTR ds:[rsi]
   140045aa4:	outs   dx,DWORD PTR ds:[rsi]
   140045aa5:	je     0x140045aa7
   140045aa7:	add    BYTE PTR [rax+riz*1+0x1],bl
   140045aab:	add    BYTE PTR [rax],al
   140045aad:	sbb    eax,0x742e0000
   140045ab2:	gs js  0x140045b29
   140045ab5:	and    al,0x6c
   140045ab7:	jo     0x140045ae9
   140045ab9:	(bad)  
   140045aba:	je     0x140045b1d
   140045abc:	(bad)  
   140045abd:	je     0x140045b28
   140045abf:	jo     0x140045aef
   140045ac1:	gs js  0x140045b29
   140045ac4:	and    DWORD PTR [rbx],esi
   140045ac6:	xor    eax,0x6279685f
   140045acb:	jb     0x140045b36
   140045acd:	fs (bad) 
   140045acf:	outs   dx,DWORD PTR ds:[rsi]
   140045ad0:	outs   dx,DWORD PTR ds:[rsi]
   140045ad1:	je     0x140045ad3
   140045ad3:	add    BYTE PTR [rax+0x3d],ah
   140045ad6:	add    DWORD PTR [rax],eax
   140045ad8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045ad9:	sbb    DWORD PTR [rax],eax
   140045adb:	add    BYTE PTR [rsi],ch
   140045add:	je     0x140045b44
   140045adf:	js     0x140045b55
   140045ae1:	and    al,0x6d
   140045ae3:	outs   dx,BYTE PTR ds:[rsi]
   140045ae4:	add    BYTE PTR [rax],al
   140045ae6:	add    BYTE PTR [rax],al
   140045ae8:	adc    BYTE PTR [rdi+0x1],dl
   140045aeb:	add    BYTE PTR [rbp+0x0],bh
   140045aee:	add    BYTE PTR [rax],al
   140045af0:	cs je  0x140045b58
   140045af3:	js     0x140045b69
   140045af5:	and    al,0x6d
   140045af7:	outs   dx,BYTE PTR ds:[rsi]
   140045af8:	and    al,0x30
   140045afa:	xor    BYTE PTR [rax],al
   140045afc:	nop
   140045afd:	push   rdi
   140045afe:	add    DWORD PTR [rax],eax
   140045b00:	(bad)  
   140045b01:	(bad)  
   140045b02:	add    BYTE PTR [rax],al
   140045b04:	cs je  0x140045b6c
   140045b07:	js     0x140045b7d
   140045b09:	and    al,0x6e
   140045b0b:	jo     0x140045b0d
   140045b0d:	add    BYTE PTR [rax],al
   140045b0f:	add    BYTE PTR [rax+0x5e],ah
   140045b12:	add    DWORD PTR [rax],eax
   140045b14:	movabs al,ds:0x747865742e00000c
   140045b1d:	and    al,0x78
   140045b1f:	add    BYTE PTR [rax],al
   140045b21:	imul   eax,DWORD PTR [rcx],0x0
   140045b24:	adc    eax,0x2e000001
   140045b29:	je     0x140045b90
   140045b2b:	js     0x140045ba1
   140045b2d:	and    al,0x79
   140045b2f:	add    BYTE PTR fs:[rax],al
   140045b32:	add    BYTE PTR [rax],al
   140045b34:	(bad)  
   140045b35:	ins    BYTE PTR es:[rdi],dx
   140045b36:	add    DWORD PTR [rax],eax
   140045b38:	sub    DWORD PTR [rax],eax
   140045b3a:	add    BYTE PTR [rax],al
   140045b3c:	cs je  0x140045ba4
   140045b3f:	js     0x140045bb5
   140045b41:	and    al,0x7a
   140045b43:	jae    0x140045b45
   140045b45:	add    BYTE PTR [rax],al
   140045b47:	add    BYTE PTR [rax+0x6c],al
   140045b4a:	add    DWORD PTR [rax],eax
   140045b4c:	sub    dh,BYTE PTR [rbx]
   140045b4e:	add    DWORD PTR [rax],eax
   140045b50:	cs je  0x140045bb8
   140045b53:	js     0x140045bc9
   140045b55:	and    al,0x7a
   140045b57:	jns    0x140045b59
   140045b59:	add    BYTE PTR [rax],al
   140045b5b:	add    BYTE PTR [rdi+rbx*4+0x2],ch
   140045b5f:	add    BYTE PTR [rip+0x2e00011e],dl        # 0x16e045c83
   140045b65:	je     0x140045bcc
   140045b67:	js     0x140045bdd
   140045b69:	and    al,0x7a
   140045b6b:	jp     0x140045b6d
   140045b6d:	add    BYTE PTR [rax],al
   140045b6f:	add    BYTE PTR [rax],al
   140045b71:	rol    BYTE PTR [rbx],0x0
   140045b74:	add    al,0x0
   140045b76:	add    BYTE PTR [rax],al
   140045b78:	imul   ebp,DWORD PTR cs:[rbp+0x72],0x766973
   140045b80:	add    al,dl
   140045b82:	add    eax,DWORD PTR [rax]
   140045b84:	sub    BYTE PTR [rdi],al
   140045b86:	add    BYTE PTR [rax],al
   140045b88:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140045b91:	add    BYTE PTR [rax],al
   140045b93:	add    BYTE PTR [rax],ch
   140045b95:	xlat   BYTE PTR ds:[rbx]
   140045b96:	add    eax,DWORD PTR [rax]
   140045b98:	adc    BYTE PTR [rax],al
   140045b9a:	add    BYTE PTR [rax],al
   140045b9c:	xor    BYTE PTR cs:[rax],dh
   140045b9f:	movsxd esp,DWORD PTR [rsi+0x67]
   140045ba2:	add    BYTE PTR [rax],al
   140045ba4:	cmp    bh,dl
   140045ba6:	add    eax,DWORD PTR [rax]
   140045ba8:	or     BYTE PTR [rax],al
   140045baa:	add    BYTE PTR [rax],al
   140045bac:	cs rex.XB push r10
   140045baf:	push   rsp
   140045bb0:	and    al,0x58
   140045bb2:	rex.XB
   140045bb3:	add    BYTE PTR [r8],al
   140045bb6:	add    BYTE PTR [rax],al
   140045bb8:	rex xlat BYTE PTR ds:[rbx]
   140045bba:	add    eax,DWORD PTR [rax]
   140045bbc:	or     BYTE PTR [rax],al
   140045bbe:	add    BYTE PTR [rax],al
   140045bc0:	cs rex.XB push r10
   140045bc3:	push   rsp
   140045bc4:	and    al,0x58
   140045bc6:	rex.XB
   140045bc7:	rex.B
   140045bc8:	add    BYTE PTR [r8],al
   140045bcb:	add    BYTE PTR [rax-0x29],cl
   140045bce:	add    eax,DWORD PTR [rax]
   140045bd0:	sub    BYTE PTR [rax],al
   140045bd2:	add    BYTE PTR [rax],al
   140045bd4:	cs rex.XB push r10
   140045bd7:	push   rsp
   140045bd8:	and    al,0x58
   140045bda:	rex.XB
   140045bdb:	rex.WR add BYTE PTR [rax],r8b
   140045bde:	add    BYTE PTR [rax],al
   140045be0:	jo     0x140045bb9
   140045be2:	add    eax,DWORD PTR [rax]
   140045be4:	(bad)  
   140045be5:	add    BYTE PTR [rax],al
   140045be7:	add    BYTE PTR [rsi],ch
   140045be9:	rex.XB push r10
   140045beb:	push   rsp
   140045bec:	and    al,0x58
   140045bee:	rex.XB push r13
   140045bf0:	add    BYTE PTR [rax],al
   140045bf2:	add    BYTE PTR [rax],al
   140045bf4:	rcl    bh,1
   140045bf6:	add    eax,DWORD PTR [rax]
   140045bf8:	or     BYTE PTR [rax],al
   140045bfa:	add    BYTE PTR [rax],al
   140045bfc:	cs rex.XB push r10
   140045bff:	push   rsp
   140045c00:	and    al,0x58
   140045c02:	rex.XB pop r10
   140045c04:	add    BYTE PTR [rax],al
   140045c06:	add    BYTE PTR [rax],al
   140045c08:	fcom   st(7)
   140045c0a:	add    eax,DWORD PTR [rax]
   140045c0c:	or     BYTE PTR [rax],al
   140045c0e:	add    BYTE PTR [rax],al
   140045c10:	cs rex.XB push r10
   140045c13:	push   rsp
   140045c14:	and    al,0x58
   140045c16:	rex.WB
   140045c17:	add    BYTE PTR [r8],al
   140045c1a:	add    BYTE PTR [rax],al
   140045c1c:	loopne 0x140045bf5
   140045c1e:	add    eax,DWORD PTR [rax]
   140045c20:	or     BYTE PTR [rax],al
   140045c22:	add    BYTE PTR [rax],al
   140045c24:	cs rex.XB push r10
   140045c27:	push   rsp
   140045c28:	and    al,0x58
   140045c2a:	rex.WB
   140045c2b:	rex.B
   140045c2c:	add    BYTE PTR [r8],al
   140045c2f:	add    al,ch
   140045c31:	xlat   BYTE PTR ds:[rbx]
   140045c32:	add    eax,DWORD PTR [rax]
   140045c34:	or     BYTE PTR [rax],al
   140045c36:	add    BYTE PTR [rax],al
   140045c38:	cs rex.XB push r10
   140045c3b:	push   rsp
   140045c3c:	and    al,0x58
   140045c3e:	rex.WB pop r9
   140045c40:	add    BYTE PTR [rax],al
   140045c42:	add    BYTE PTR [rax],al
   140045c44:	lock xlat BYTE PTR ds:[rbx]
   140045c46:	add    eax,DWORD PTR [rax]
   140045c48:	or     BYTE PTR [rax],al
   140045c4a:	add    BYTE PTR [rax],al
   140045c4c:	cs rex.XB push r10
   140045c4f:	push   rsp
   140045c50:	and    al,0x58
   140045c52:	rex.WB pop r10
   140045c54:	add    BYTE PTR [rax],al
   140045c56:	add    BYTE PTR [rax],al
   140045c58:	clc    
   140045c59:	xlat   BYTE PTR ds:[rbx]
   140045c5a:	add    eax,DWORD PTR [rax]
   140045c5c:	mov    al,0x6
   140045c5e:	add    BYTE PTR [rax],al
   140045c60:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140045c69:	add    BYTE PTR [rax],al
   140045c6b:	add    BYTE PTR [rax-0x3ffffc22],dh
   140045c71:	cmp    BYTE PTR [rax],al
   140045c73:	add    BYTE PTR [rsi],ch
   140045c75:	jb     0x140045cdb
   140045c77:	(bad)  
   140045c78:	je     0x140045cdb
   140045c7a:	add    BYTE PTR [rax],al
   140045c7c:	jo     0x140045c95
   140045c7e:	add    al,0x0
   140045c80:	test   DWORD PTR [rbx],eax
   140045c82:	add    BYTE PTR [rax],al
   140045c84:	cs jb  0x140045ceb
   140045c87:	(bad)  
   140045c88:	je     0x140045ceb
   140045c8a:	and    al,0x30
   140045c8c:	xor    BYTE PTR [rax],al
   140045c8e:	add    BYTE PTR [rax],al
   140045c90:	clc    
   140045c91:	sbb    al,BYTE PTR [rax+rax*1]
   140045c94:	adc    BYTE PTR [rax],al
   140045c96:	add    BYTE PTR [rax],al
   140045c98:	cs jb  0x140045cff
   140045c9b:	(bad)  
   140045c9c:	je     0x140045cff
   140045c9e:	and    al,0x7a
   140045ca0:	rex.RB push r12
   140045ca2:	push   rdi
   140045ca3:	xor    BYTE PTR [rax],al
   140045ca5:	add    BYTE PTR [rax],al
   140045ca7:	add    BYTE PTR [rax],cl
   140045ca9:	sbb    eax,DWORD PTR [rax+rax*1]
   140045cac:	mov    BYTE PTR [rdx],cl
   140045cae:	add    BYTE PTR [rax],al
   140045cb0:	cs jb  0x140045d17
   140045cb3:	(bad)  
   140045cb4:	je     0x140045d17
   140045cb6:	and    al,0x7a
   140045cb8:	rex.RB push r12
   140045cba:	push   rdi
   140045cbb:	xor    DWORD PTR [rax],eax
   140045cbd:	add    BYTE PTR [rax],al
   140045cbf:	add    BYTE PTR [rax+0x58000425],dl
   140045cc5:	add    BYTE PTR [rax],al
   140045cc7:	add    BYTE PTR [rsi],ch
   140045cc9:	jb     0x140045d2f
   140045ccb:	(bad)  
   140045ccc:	je     0x140045d2f
   140045cce:	and    al,0x7a
   140045cd0:	rex.RB push r12
   140045cd2:	push   rdi
   140045cd3:	xor    al,BYTE PTR [rax]
   140045cd5:	add    BYTE PTR [rax],al
   140045cd7:	add    al,ch
   140045cd9:	and    eax,0x10004
   140045cde:	add    BYTE PTR [rax],al
   140045ce0:	cs jb  0x140045d47
   140045ce3:	(bad)  
   140045ce4:	je     0x140045d47
   140045ce6:	and    al,0x7a
   140045ce8:	rex.RB push r12
   140045cea:	push   rdi
   140045ceb:	cmp    DWORD PTR [rax],eax
   140045ced:	add    BYTE PTR [rax],al
   140045cef:	add    al,dh
   140045cf1:	and    eax,0x33c00004
   140045cf6:	add    BYTE PTR [rax],al
   140045cf8:	cs jb  0x140045d5f
   140045cfb:	(bad)  
   140045cfc:	je     0x140045d5f
   140045cfe:	and    al,0x7a
   140045d00:	jp     0x140045d02
   140045d02:	add    BYTE PTR [rax],al
   140045d04:	mov    al,0x59
   140045d06:	add    al,0x0
   140045d08:	rol    BYTE PTR [rip+0x722e0000],1        # 0x1b2325d0e
   140045d0e:	fs (bad) 
   140045d10:	je     0x140045d73
   140045d12:	and    al,0x7a
   140045d14:	jp     0x140045d90
   140045d16:	fs (bad) 
   140045d18:	add    BYTE PTR [eax],al
   140045d1b:	add    BYTE PTR [rax-0x6ffffba1],al
   140045d21:	pop    rax
   140045d22:	add    BYTE PTR [rax],al
   140045d24:	cs js  0x140045d8b
   140045d27:	(bad)  
   140045d28:	je     0x140045d8b
   140045d2a:	add    BYTE PTR [rax],al
   140045d2c:	adc    BYTE PTR [rax+0xac0004],bh
   140045d32:	add    BYTE PTR [rax],al
   140045d34:	cs js  0x140045d9b
   140045d37:	(bad)  
   140045d38:	je     0x140045d9b
   140045d3a:	and    al,0x78
   140045d3c:	add    BYTE PTR [rax],al
   140045d3e:	add    BYTE PTR [rax],al
   140045d40:	sar    BYTE PTR [rax+0x80004],0x0
   140045d47:	add    BYTE PTR [rcx+0x54],al
   140045d4a:	rex.WR and al,0x5f
   140045d4d:	pop    rdi
   140045d4e:	(bad)  
   140045d4f:	add    al,cl
   140045d51:	mov    eax,0x180004
   140045d56:	add    BYTE PTR [rax],al
   140045d58:	push   r12
   140045d5a:	rex.WR and al,0x5f
   140045d5d:	pop    rdi
   140045d5e:	ins    DWORD PTR es:[rdi],dx
   140045d5f:	add    al,ah
   140045d61:	mov    eax,0x80004
   140045d66:	add    BYTE PTR [rax],al
   140045d68:	push   r12
   140045d6a:	rex.WR and al,0x5f
   140045d6d:	pop    rdi
   140045d6e:	jp     0x140045d70
   140045d70:	call   0xe004622d
   140045d75:	add    BYTE PTR [rax],al
   140045d77:	add    BYTE PTR [rsi],ch
   140045d79:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140045d82:	add    BYTE PTR [rax],al
   140045d84:	mov    BYTE PTR [rcx+0x200004],bh
   140045d8a:	add    BYTE PTR [rax],al
   140045d8c:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   140045d96:	add    BYTE PTR [rax],al
   140045d98:	test   al,0xb9
   140045d9a:	add    al,0x0
   140045d9c:	jo     0x140045d9f
   140045d9e:	add    BYTE PTR [rax],al
   140045da0:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   140045daa:	add    BYTE PTR [rax],al
   140045dac:	sbb    BYTE PTR [rbx+0x1840004],bh
   140045db2:	add    BYTE PTR [rax],al
   140045db4:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   140045dbe:	add    BYTE PTR [rax],al
   140045dc0:	movabs al,ds:0x2e000001700004bc
   140045dc9:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   140045dd2:	add    BYTE PTR [rax],al
   140045dd4:	adc    BYTE PTR [rsi+0x21c0004],bh
   140045dda:	add    BYTE PTR [rax],al
   140045ddc:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140045de5:	add    BYTE PTR [rax],al
   140045de7:	add    BYTE PTR [rax+rax*8],ch
   140045dea:	add    al,0x0
   140045dec:	adc    al,0x0
   140045dee:	add    BYTE PTR [rax],al
   140045df0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140045df9:	add    BYTE PTR [rax],al
   140045dfb:	add    BYTE PTR [rax-0x40],al
   140045dfe:	add    al,0x0
   140045e00:	sub    BYTE PTR [rdi],al
   140045e02:	add    BYTE PTR [rax],al
   140045e04:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140045e0d:	add    BYTE PTR [rax],al
   140045e0f:	add    BYTE PTR [rax-0x39],ch
   140045e12:	add    al,0x0
   140045e14:	clc    
   140045e15:	adc    DWORD PTR [rax],eax
   140045e17:	add    BYTE PTR [rsi],ch
   140045e19:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140045e21:	add    BYTE PTR [rax],al
   140045e23:	add    BYTE PTR [rax],al
   140045e25:	loopne 0x140045e2b
   140045e27:	add    BYTE PTR [rax],ah
   140045e29:	add    BYTE PTR [rax],al
   140045e2b:	add    BYTE PTR [rsi],ch
   140045e2d:	fs (bad) 
   140045e2f:	je     0x140045e92
   140045e31:	add    BYTE PTR [rax],al
   140045e33:	add    BYTE PTR [rax],ah
   140045e35:	loopne 0x140045e3b
   140045e37:	add    BYTE PTR [rax+0x1],bh
   140045e3a:	add    BYTE PTR [rax],al
   140045e3c:	cs fs (bad) 
   140045e3f:	je     0x140045ea2
   140045e41:	and    al,0x30
   140045e43:	xor    BYTE PTR [rax],al
   140045e45:	add    BYTE PTR [rax],al
   140045e47:	add    BYTE PTR [rax+0x400004e1],ah
   140045e4d:	add    BYTE PTR [rax],al
   140045e4f:	add    BYTE PTR [rsi],ch
   140045e51:	fs (bad) 
   140045e53:	je     0x140045eb6
   140045e55:	and    al,0x30
   140045e57:	xor    DWORD PTR [rax],eax
   140045e59:	add    BYTE PTR [rax],al
   140045e5b:	add    al,ah
   140045e5d:	loope  0x140045e63
   140045e5f:	add    al,ch
   140045e61:	add    BYTE PTR [rax],al
   140045e63:	add    BYTE PTR [rsi],ch
   140045e65:	fs (bad) 
   140045e67:	je     0x140045eca
   140045e69:	and    al,0x30
   140045e6b:	(bad)  
   140045e6c:	add    BYTE PTR [rax],al
   140045e6e:	add    BYTE PTR [rax],al
   140045e70:	shl    dl,1
   140045e72:	add    al,0x0
   140045e74:	movabs al,ds:0x617461642e000001
   140045e7d:	and    al,0x64
   140045e7f:	imul   esi,DWORD PTR [rax],0x30
   140045e82:	add    BYTE PTR [rax],al
   140045e84:	jo     0x140045e6a
   140045e86:	add    al,0x0
   140045e88:	adc    BYTE PTR [rax],al
   140045e8a:	add    BYTE PTR [rax],al
   140045e8c:	cs fs (bad) 
   140045e8f:	je     0x140045ef2
   140045e91:	and    al,0x70
   140045e93:	jb     0x140045ec5
   140045e95:	xor    BYTE PTR [rax],al
   140045e97:	add    BYTE PTR [rax+0x580004e4],al
   140045e9d:	add    BYTE PTR [rax],al
   140045e9f:	add    BYTE PTR [rsi],ch
   140045ea1:	fs (bad) 
   140045ea3:	je     0x140045f06
   140045ea5:	and    al,0x72
   140045ea7:	add    al,ah
   140045ea9:	in     al,0x4
   140045eab:	add    BYTE PTR [rax+rax*1+0x0],al
   140045eaf:	add    BYTE PTR [rsi],ch
   140045eb1:	fs (bad) 
   140045eb3:	je     0x140045f16
   140045eb5:	and    al,0x7a
   140045eb7:	jp     0x140045eb9
   140045eb9:	add    BYTE PTR [rax],al
   140045ebb:	add    BYTE PTR [rax],dh
   140045ebd:	in     eax,0x4
   140045ebf:	add    BYTE PTR [rax],al
   140045ec1:	(bad)  
   140045ec2:	add    BYTE PTR [rax],al
   140045ec4:	cs (bad) 
   140045ec7:	jae    0x140045ec9
   140045ec9:	add    BYTE PTR [rax],al
   140045ecb:	add    BYTE PTR [rax],dh
   140045ecd:	jmp    0x140045ed3
   140045ecf:	add    BYTE PTR [rax],ah
   140045ed1:	add    BYTE PTR [rax],al
   140045ed3:	add    BYTE PTR [rsi],ch
   140045ed5:	(bad)  
   140045ed7:	jae    0x140045efd
   140045ed9:	xor    BYTE PTR [rax],dh
   140045edb:	add    BYTE PTR [rax-0x15],dl
   140045ede:	add    al,0x0
   140045ee0:	jo     0x140045ee6
   140045ee2:	add    BYTE PTR [rax],al
   140045ee4:	cs (bad) 
   140045ee7:	jae    0x140045f0d
   140045ee9:	xor    BYTE PTR [rcx],dh
   140045eeb:	add    al,al
   140045eed:	out    dx,eax
   140045eee:	add    al,0x0
   140045ef0:	js     0x140045ef3
   140045ef2:	add    BYTE PTR [rax],al
   140045ef4:	cs (bad) 
   140045ef7:	jae    0x140045f1d
   140045ef9:	xor    BYTE PTR [rdi],dh
   140045efb:	add    BYTE PTR [rax-0xf],al
   140045efe:	add    al,0x0
   140045f00:	sub    BYTE PTR [rcx],al
   140045f02:	add    BYTE PTR [rax],al
   140045f04:	cs (bad) 
   140045f07:	jae    0x140045f2d
   140045f09:	imul   esi,DWORD PTR fs:[rax],0x30
   140045f0d:	add    BYTE PTR [rax],al
   140045f0f:	add    BYTE PTR [rax+0x180004f2],al
   140045f15:	add    BYTE PTR [rax],al
   140045f17:	add    BYTE PTR [rsi],ch
   140045f19:	(bad)  
   140045f1b:	jae    0x140045f41
   140045f1d:	jo     0x140045f91
   140045f1f:	xor    BYTE PTR [rax],dh
   140045f21:	add    BYTE PTR [rax],al
   140045f23:	add    BYTE PTR [rax-0xafffb0e],ah
   140045f29:	add    BYTE PTR [rax],al
   140045f2b:	add    BYTE PTR [rsi],ch
   140045f2d:	(bad)  
   140045f2f:	jae    0x140045f55
   140045f31:	jp     0x140045fad
   140045f33:	add    BYTE PTR [rax],al
   140045f35:	add    BYTE PTR [rip+0x2d3c00],al        # 0x140319b3b
   140045f3b:	add    BYTE PTR [rsi],ch
   140045f3d:	jo     0x140045fa3
   140045f3f:	(bad)  
   140045f40:	je     0x140045fa3
   140045f42:	add    BYTE PTR [rax],al
   140045f44:	add    BYTE PTR [rax],dh
   140045f46:	add    eax,0x17000
   140045f4b:	add    BYTE PTR [rsi],ch
   140045f4d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   140045f56:	add    BYTE PTR [rax],al
   140045f58:	add    BYTE PTR [rax+0x5],al
   140045f5b:	add    BYTE PTR [rdx+rax*1+0x722e0000],ah
   140045f62:	jae    0x140045fd6
   140045f64:	movsxd esp,DWORD PTR [rax+rsi*1]
   140045f67:	xor    DWORD PTR [rax],eax
   140045f69:	add    BYTE PTR [rax],al
   140045f6b:	add    BYTE PTR [rax+0x50000542],dh
   140045f71:	mov    cl,0x0
   140045f73:	add    BYTE PTR [rsi],ch
   140045f75:	jb     0x140045fea
   140045f77:	jb     0x140045fdc
   140045f79:	and    al,0x30
   140045f7b:	xor    al,BYTE PTR [rax]
   140045f7d:	add    BYTE PTR [rax],al
   140045f7f:	add    BYTE PTR [rcx],al
   140045f81:	(bad)  
   140045f82:	add    al,BYTE PTR [rax]
   140045f84:	(bad)  
   140045f85:	xor    al,BYTE PTR [rdx]
   140045f87:	xor    BYTE PTR [rcx],al
   140045f89:	or     al,BYTE PTR [rax+rax*1]
   140045f8c:	or     dh,BYTE PTR [rsi+rax*1]
   140045f8f:	add    BYTE PTR [rdx],cl
   140045f91:	xor    al,BYTE PTR [rsi]
   140045f93:	jo     0x140045fb6
   140045f95:	add    BYTE PTR [rax],al
   140045f97:	add    BYTE PTR [rbx+rdx*1+0x13b60000],cl
   140045f9e:	add    BYTE PTR [rax],al
   140045fa0:	mov    BYTE PTR [rdi+0x4],bl
   140045fa3:	add    BYTE PTR [rcx],al
   140045fa5:	or     al,BYTE PTR [rax+rax*1]
   140045fa8:	or     dh,BYTE PTR [rsi+rax*1]
   140045fab:	add    BYTE PTR [rdx],cl
   140045fad:	xor    al,BYTE PTR [rsi]
   140045faf:	jo     0x140045fd2
   140045fb1:	add    BYTE PTR [rax],al
   140045fb3:	add    BYTE PTR [rbx+rdx*1+0x13dd0000],bh
   140045fba:	add    BYTE PTR [rax],al
   140045fbc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140045fbd:	pop    rdi
   140045fbe:	add    al,0x0
   140045fc0:	add    DWORD PTR [rdx],ecx
   140045fc2:	add    al,0x0
   140045fc4:	or     dh,BYTE PTR [rsi+rax*1]
   140045fc7:	add    BYTE PTR [rdx],cl
   140045fc9:	xor    al,BYTE PTR [rsi]
   140045fcb:	jo     0x140045fe6
   140045fcd:	push   rbx
   140045fce:	or     eax,0x93744200
   140045fd3:	add    bh,BYTE PTR [rdx]
   140045fd5:	fs xchg edx,eax
   140045fd7:	add    dh,BYTE PTR [rdx]
   140045fd9:	xor    al,0x91
   140045fdb:	add    bl,BYTE PTR [rdi]
   140045fdd:	add    DWORD PTR [rdx+0x8f00a02],ecx
   140045fe3:	loopne 0x140045feb
   140045fe5:	rol    BYTE PTR [rax+rax*8],1
   140045fe8:	add    dl,BYTE PTR [rax+0x0]
   140045feb:	add    BYTE PTR [rsi+rdx*2+0x1],al
   140045fef:	add    BYTE PTR [rax+0x2],cl
   140045ff2:	add    al,0x0
   140045ff4:	rex.X adc al,0x0
   140045ff7:	add    BYTE PTR [rcx],ah
   140045ff9:	add    BYTE PTR [rax],al
   140045ffb:	add    BYTE PTR [rax],ah
   140045ffd:	adc    al,0x0
   140045fff:	add    ch,ah
   140046001:	rex.W add BYTE PTR [rax],al
   140046004:	int3   
   140046005:	pop    rdi
   140046006:	add    al,0x0
   140046008:	(bad)  
   140046009:	(bad)  
   14004600a:	(bad)  
   14004600b:	push   QWORD PTR [rax+0x5e]
   14004600e:	add    DWORD PTR [rax],eax
   140046010:	add    BYTE PTR [rax],al
   140046012:	add    BYTE PTR [rax],al
   140046014:	jl     0x140046074
   140046016:	add    DWORD PTR [rax],eax
   140046018:	add    DWORD PTR [rax],eax
   14004601a:	add    BYTE PTR [rax],al
   14004601c:	mov    BYTE PTR [rsi+0x1],bl
   14004601f:	add    BYTE PTR [rdx],al
   140046021:	add    BYTE PTR [rax],al
   140046023:	add    BYTE PTR [rsi+rbx*2+0x20001],dl
   14004602a:	add    BYTE PTR [rax],al
   14004602c:	movabs al,ds:0xff0000142000015e
   140046035:	(bad)  
   140046036:	(bad)  
   140046037:	call   QWORD PTR [rsi]
   140046039:	adc    eax,0x0
   14004603e:	add    BYTE PTR [rax],al
   140046040:	sbb    eax,0x1000015
   140046045:	add    BYTE PTR [rax],al
   140046047:	add    BYTE PTR [rdx+0x2000015],bh
   14004604d:	add    BYTE PTR [rax],al
   14004604f:	add    dh,cl
   140046051:	adc    eax,0x30000
   140046056:	add    BYTE PTR [rax],al
   140046058:	sbb    al,0x18
   14004605a:	add    BYTE PTR [rax],al
   14004605c:	add    al,BYTE PTR [rax]
   14004605e:	add    BYTE PTR [rax],al
   140046060:	rex.WRXB sbb QWORD PTR [r8],r8
   140046063:	add    BYTE PTR [rcx],al
   140046065:	add    BYTE PTR [rax],al
   140046067:	add    BYTE PTR [rdx+0x19],ah
   14004606a:	add    BYTE PTR [rax],al
   14004606c:	add    BYTE PTR [rax],al
   14004606e:	add    BYTE PTR [rax],al
   140046070:	outs   dx,DWORD PTR ds:[rsi]
   140046071:	sbb    DWORD PTR [rax],eax
   140046073:	add    bh,bh
   140046075:	(bad)  
   140046076:	(bad)  
   140046077:	push   QWORD PTR [rdi+0x48]
   14004607a:	add    BYTE PTR [rax],al
   14004607c:	add    DWORD PTR [rax],eax
   14004607e:	add    BYTE PTR [rax],al
   140046080:	ins    BYTE PTR es:[rdi],dx
   140046081:	ins    BYTE PTR es:[rdi],dx
   140046082:	add    DWORD PTR [rax],eax
   140046084:	(bad)  
   140046085:	(bad)  
   140046086:	(bad)  
   140046087:	jmp    FWORD PTR [rdx+rbp*8]
   14004608a:	add    DWORD PTR [rax],eax
   14004608c:	add    DWORD PTR [rax],eax
   14004608e:	add    BYTE PTR [rax],al
   140046090:	rex.WRX (bad) 
   140046092:	add    DWORD PTR [rax],eax
   140046094:	add    eax,DWORD PTR [rax]
   140046096:	add    BYTE PTR [rax],al
   140046098:	mov    ebp,edx
   14004609a:	add    DWORD PTR [rax],eax
   14004609c:	add    al,BYTE PTR [rax]
   14004609e:	add    BYTE PTR [rax],al
   1400460a0:	lods   eax,DWORD PTR ds:[rsi]
   1400460a1:	(bad)  
   1400460a2:	add    DWORD PTR [rax],eax
   1400460a4:	add    al,0x0
   1400460a6:	add    BYTE PTR [rax],al
   1400460a8:	cld    
   1400460a9:	(bad)  
   1400460aa:	add    DWORD PTR [rax],eax
   1400460ac:	add    al,BYTE PTR [rax]
   1400460ae:	add    BYTE PTR [rax],al
   1400460b0:	add    DWORD PTR [rbx],edx
   1400460b2:	(bad)  
   1400460b3:	add    BYTE PTR [rbx],dl
   1400460b5:	or     eax,DWORD PTR fs:[rax]
   1400460b8:	adc    esi,DWORD PTR [rdx+rcx*1]
   1400460bb:	add    BYTE PTR [rbx],dl
   1400460bd:	push   rdx
   1400460be:	pshufw mm3,QWORD PTR [rcx],0x25
   1400460c2:	(bad)  
   1400460c3:	add    BYTE PTR [rdi],dl
   1400460c5:	je     0x1400460e4
   1400460c7:	add    BYTE PTR [rdi],dl
   1400460c9:	xor    al,0x1c
   1400460cb:	add    BYTE PTR [rdi],dl
   1400460cd:	add    DWORD PTR [rdx],ebx
   1400460cf:	add    BYTE PTR [rbx],cl
   1400460d1:	push   rax
   1400460d2:	add    BYTE PTR [rax],al
   1400460d4:	mov    eax,0xc000014a
   1400460d9:	add    BYTE PTR [rax],al
   1400460db:	add    BYTE PTR [rcx],ah
   1400460dd:	add    BYTE PTR [rax],al
   1400460df:	add    BYTE PTR [rcx+rcx*2+0x4aa60000],dh
   1400460e6:	add    BYTE PTR [rax],al
   1400460e8:	shl    BYTE PTR [rax+0x4],0x0
   1400460ec:	add    DWORD PTR [rsi],eax
   1400460ee:	add    al,BYTE PTR [rax]
   1400460f0:	(bad)  
   1400460f1:	push   rdx
   1400460f2:	add    dh,BYTE PTR [rax]
   1400460f4:	add    DWORD PTR [rcx+rax*1],eax
   1400460f7:	add    BYTE PTR [rdx+rax*2],al
   1400460fa:	add    BYTE PTR [rax],al
   1400460fc:	adc    DWORD PTR [rcx],esp
   1400460fe:	or     al,BYTE PTR [rax]
   140046100:	and    DWORD PTR [rdi+rcx*1+0x0],esi
   140046104:	sbb    eax,0x19000e64
   140046109:	push   rsp
   14004610a:	or     eax,0xc341500
   14004610f:	add    BYTE PTR [rcx],cl
   140046111:	xchg   edx,eax
   140046112:	add    eax,0x15636e0
   140046117:	add    BYTE PTR [rax],ah
   140046119:	(bad)  
   14004611a:	add    al,0x0
   14004611c:	and    DWORD PTR [rax],eax
   14004611e:	add    BYTE PTR [rax],al
   140046120:	adc    BYTE PTR [rax+rax*1+0x0],cl
   140046124:	sub    DWORD PTR [rbp+0x0],ecx
   140046127:	add    ah,bh
   140046129:	(bad)  
   14004612a:	add    al,0x0
   14004612c:	(bad)  
   14004612d:	(bad)  
   14004612e:	(bad)  
   14004612f:	push   QWORD PTR [rdx+0x1000015e]
   140046135:	rex.WR add BYTE PTR [rax],r8b
   140046138:	(bad)  
   140046139:	(bad)  
   14004613a:	(bad)  
   14004613b:	push   QWORD PTR [rsp+rcx*2+0x0]
   140046142:	add    BYTE PTR [rax],al
   140046144:	hlt    
   140046145:	rex.WR add BYTE PTR [rax],r8b
   140046148:	(bad)  
   140046149:	(bad)  
   14004614a:	(bad)  
   14004614b:	jmp    FWORD PTR [rbx+rbp*8+0x1]
   14004614f:	add    BYTE PTR [rax],al
   140046151:	add    BYTE PTR [rax],al
   140046153:	add    BYTE PTR [rcx],al
   140046155:	sbb    DWORD PTR [rdx],ecx
   140046157:	add    BYTE PTR [rcx],bl
   140046159:	je     0x140046164
   14004615b:	add    BYTE PTR [rcx],bl
   14004615d:	or     BYTE PTR fs:[rax],al
   140046160:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140046164:	sbb    DWORD PTR [rsi+rax*1],esi
   140046167:	add    BYTE PTR [rcx],bl
   140046169:	xor    dl,BYTE PTR [rip+0x21e0]        # 0x14004834f
   14004616f:	add    BYTE PTR [rax],dh
   140046171:	rex.WRB add BYTE PTR [r8],r8b
   140046174:	sti    
   140046175:	rex.WRB add BYTE PTR [r8],r8b
   140046178:	push   rsp
   140046179:	(bad)  
   14004617a:	add    al,0x0
   14004617c:	add    DWORD PTR [rip+0x34050002],eax        # 0x174096184
   140046182:	add    DWORD PTR [rax],eax
   140046184:	and    DWORD PTR [rax],eax
   140046186:	add    BYTE PTR [rax],al
   140046188:	adc    BYTE PTR [rsi+0x0],cl
   14004618b:	add    ch,ah
   14004618d:	rex.WRX add BYTE PTR [rax],r8b
   140046190:	jl     0x1400461f3
   140046192:	add    al,0x0
   140046194:	add    DWORD PTR [rsi],eax
   140046196:	add    al,BYTE PTR [rax]
   140046198:	(bad)  
   140046199:	jb     0x14004619d
   14004619b:	xor    BYTE PTR [rcx],al
   14004619d:	adc    al,0x8
   14004619f:	add    BYTE PTR [rsp+riz*2],dl
   1400461a2:	or     BYTE PTR [rax],al
   1400461a4:	adc    al,0x54
   1400461a6:	(bad)  
   1400461a7:	add    BYTE PTR [rsp+rsi*1],dl
   1400461aa:	(bad)  
   1400461ab:	add    BYTE PTR [rdx+rsi*1],dl
   1400461ae:	adc    BYTE PTR [rax+0x21],dh
   1400461b1:	add    BYTE PTR [rax],al
   1400461b3:	add    ah,al
   1400461b5:	rex.WRXB add BYTE PTR [r8],r8b
   1400461b8:	cs push rax
   1400461ba:	add    BYTE PTR [rax],al
   1400461bc:	pushf  
   1400461bd:	(bad)  
   1400461be:	add    al,0x0
   1400461c0:	add    DWORD PTR [rdx],ecx
   1400461c2:	add    eax,DWORD PTR [rax]
   1400461c4:	or     al,BYTE PTR [rdx+0x50023003]
   1400461ca:	add    BYTE PTR [rax],al
   1400461cc:	and    DWORD PTR [rax],eax
   1400461ce:	add    BYTE PTR [rax],al
   1400461d0:	lock push rax
   1400461d2:	add    BYTE PTR [rax],al
   1400461d4:	mov    eax,0xc0000051
   1400461d9:	(bad)  
   1400461da:	add    al,0x0
   1400461dc:	add    DWORD PTR [rdx],ecx
   1400461de:	add    al,0x0
   1400461e0:	or     dh,BYTE PTR [rsi+rax*1]
   1400461e3:	add    BYTE PTR [rdx],cl
   1400461e5:	xor    al,BYTE PTR [rsi]
   1400461e7:	jo     0x14004620a
   1400461e9:	add    BYTE PTR [rax],al
   1400461eb:	add    al,al
   1400461ed:	push   rcx
   1400461ee:	add    BYTE PTR [rax],al
   1400461f0:	(bad)  
   1400461f1:	push   rdx
   1400461f2:	add    BYTE PTR [rax],al
   1400461f4:	fsub   QWORD PTR [rcx+0x4]
   1400461f7:	add    BYTE PTR [rcx],al
   1400461f9:	adc    al,0x9
   1400461fb:	add    BYTE PTR [rdx+riz*8],dl
   1400461fe:	or     eax,0x9e00bf0
   140046203:	rol    BYTE PTR [rdi],1
   140046205:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14364667c
   14004620c:	add    dl,BYTE PTR [rax+0x0]
   14004620f:	add    BYTE PTR [rcx],ah
   140046211:	add    BYTE PTR [rax],al
   140046213:	add    BYTE PTR [rdx+rdx*2],cl
   140046216:	add    BYTE PTR [rax],al
   140046218:	push   0xfffffffff8000052
   14004621d:	(bad)  
   14004621e:	add    al,0x0
   140046220:	sbb    DWORD PTR [rdi],edx
   140046222:	add    al,0x0
   140046224:	or     BYTE PTR [rdx+0x50037004],dl
   14004622a:	add    dh,BYTE PTR [rax]
   14004622c:	mov    eax,0x4000014a
   140046231:	add    BYTE PTR [rax],al
   140046233:	add    BYTE PTR [rcx],ah
   140046235:	adc    BYTE PTR [rax+rax*1],al
   140046238:	adc    ah,ah
   14004623a:	adc    DWORD PTR [rax],eax
   14004623c:	or     BYTE PTR [rax+rdx*1+0x0],ah
   140046240:	mov    al,0x52
   140046242:	add    BYTE PTR [rax],al
   140046244:	or     dl,BYTE PTR [rbx+0x0]
   140046247:	add    BYTE PTR [rax],ah
   140046249:	(bad)  
   14004624a:	add    al,0x0
   14004624c:	and    DWORD PTR [rax],eax
   14004624e:	add    BYTE PTR [rax],al
   140046250:	mov    al,0x52
   140046252:	add    BYTE PTR [rax],al
   140046254:	or     dl,BYTE PTR [rbx+0x0]
   140046257:	add    BYTE PTR [rax],ah
   140046259:	(bad)  
   14004625a:	add    al,0x0
   14004625c:	and    DWORD PTR [rax],eax
   14004625e:	add    al,0x0
   140046260:	add    ah,ah
   140046262:	adc    DWORD PTR [rax],eax
   140046264:	add    BYTE PTR [rax+rdx*1+0x0],ah
   140046268:	mov    al,0x52
   14004626a:	add    BYTE PTR [rax],al
   14004626c:	or     dl,BYTE PTR [rbx+0x0]
   14004626f:	add    BYTE PTR [rax],ah
   140046271:	(bad)  
   140046272:	add    al,0x0
   140046274:	and    DWORD PTR [rax],eax
   140046276:	add    BYTE PTR [rax],al
   140046278:	mov    al,0x52
   14004627a:	add    BYTE PTR [rax],al
   14004627c:	or     dl,BYTE PTR [rbx+0x0]
   14004627f:	add    BYTE PTR [rax],ah
   140046281:	(bad)  
   140046282:	add    al,0x0
   140046284:	and    DWORD PTR [rax],eax
   140046286:	add    al,0x0
   140046288:	add    ah,ah
   14004628a:	adc    DWORD PTR [rax],eax
   14004628c:	add    BYTE PTR [rax+rdx*1+0x0],ah
   140046290:	rex.X out dx,al
   140046292:	add    DWORD PTR [rax],eax
   140046294:	push   rax
   140046295:	out    dx,al
   140046296:	add    DWORD PTR [rax],eax
   140046298:	je     0x1400462fc
   14004629a:	add    al,0x0
   14004629c:	add    DWORD PTR [rcx],edx
   14004629e:	(bad)  
   14004629f:	add    BYTE PTR [rcx],dl
   1400462a1:	xor    al,0x9
   1400462a3:	add    BYTE PTR [rcx],dl
   1400462a5:	xor    cl,BYTE PTR [rip+0xb600c70]        # 0x14b646f1b
   1400462ab:	push   rax
   1400462ac:	and    DWORD PTR [rax],eax
   1400462ae:	add    BYTE PTR [rax],al
   1400462b0:	sub    al,0x54
   1400462b2:	add    BYTE PTR [rax],al
   1400462b4:	(bad)  
   1400462b5:	push   rsp
   1400462b6:	add    BYTE PTR [rax],al
   1400462b8:	pushf  
   1400462b9:	(bad)  
   1400462ba:	add    al,0x0
   1400462bc:	add    DWORD PTR [rcx],edx
   1400462be:	(bad)  
   1400462bf:	add    BYTE PTR [rcx],dl
   1400462c1:	xor    al,0x9
   1400462c3:	add    BYTE PTR [rcx],dl
   1400462c5:	xor    cl,BYTE PTR [rip+0xb600c70]        # 0x14b646f3b
   1400462cb:	push   rax
   1400462cc:	and    DWORD PTR [rax],eax
   1400462ce:	add    BYTE PTR [rax],al
   1400462d0:	add    al,0x55
   1400462d2:	add    BYTE PTR [rax],al
   1400462d4:	(bad)
   1400462d7:	add    BYTE PTR [rdx+riz*2+0x30190004],bh
   1400462de:	add    eax,0x55341f00
   1400462e3:	add    BYTE PTR [rdx],dl
   1400462e5:	add    DWORD PTR [rdx+0x0],edx
   1400462e8:	add    al,0x50
   1400462ea:	add    BYTE PTR [rax],al
   1400462ec:	rex.R push rsi
   1400462ee:	add    DWORD PTR [rax],eax
   1400462f0:	clc    
   1400462f1:	adc    eax,0x2820004
   1400462f6:	add    BYTE PTR [rax],al
   1400462f8:	(bad)  
   1400462f9:	(bad)  
   1400462fa:	(bad)  
   1400462fb:	inc    esp
   1400462fd:	pop    rsi
   1400462fe:	add    DWORD PTR [rax],eax
   140046300:	add    BYTE PTR [rax],al
   140046302:	add    BYTE PTR [rax],al
   140046304:	rcr    BYTE PTR [rsi+0x1],1
   140046307:	add    BYTE PTR [rcx],al
   140046309:	add    BYTE PTR [rax],al
   14004630b:	add    ah,bl
   14004630d:	pop    rsi
   14004630e:	add    DWORD PTR [rax],eax
   140046310:	add    al,BYTE PTR [rax]
   140046312:	add    BYTE PTR [rax],al
   140046314:	call   0x143046477
   140046319:	add    BYTE PTR [rax],al
   14004631b:	add    ah,dh
   14004631d:	pop    rsi
   14004631e:	add    DWORD PTR [rax],eax
   140046320:	add    eax,DWORD PTR [rax]
   140046322:	add    BYTE PTR [rax],al
   140046324:	add    BYTE PTR [rdi+0x1],bl
   140046327:	add    ah,cl
   140046329:	push   rbp
   14004632a:	add    BYTE PTR [rax],al
   14004632c:	(bad)  
   14004632d:	(bad)  
   14004632e:	(bad)  
   14004632f:	dec    DWORD PTR [rcx]
   140046331:	push   rsi
   140046332:	add    BYTE PTR [rax],al
   140046334:	add    BYTE PTR [rax],al
   140046336:	add    BYTE PTR [rax],al
   140046338:	(bad)  
   140046339:	push   rsi
   14004633a:	add    BYTE PTR [rax],al
   14004633c:	add    DWORD PTR [rax],eax
   14004633e:	add    BYTE PTR [rax],al
   140046340:	rex.W push rsi
   140046342:	add    BYTE PTR [rax],al
   140046344:	add    al,BYTE PTR [rax]
   140046346:	add    BYTE PTR [rax],al
   140046348:	test   eax,0x3000056
   14004634d:	add    BYTE PTR [rax],al
   14004634f:	add    BYTE PTR [rbx+0x4000056],dh
   140046355:	add    BYTE PTR [rax],al
   140046357:	add    bh,al
   140046359:	push   rsi
   14004635a:	add    BYTE PTR [rax],al
   14004635c:	add    eax,DWORD PTR [rax]
   14004635e:	add    BYTE PTR [rax],al
   140046360:	out    dx,al
   140046361:	push   rsi
   140046362:	add    BYTE PTR [rax],al
   140046364:	add    eax,0x2000000
   140046369:	push   rdi
   14004636a:	add    BYTE PTR [rax],al
   14004636c:	add    eax,DWORD PTR [rax]
   14004636e:	add    BYTE PTR [rax],al
   140046370:	xor    BYTE PTR [rdi+0x0],dl
   140046373:	add    BYTE PTR [rdx],al
   140046375:	add    BYTE PTR [rax],al
   140046377:	add    BYTE PTR [rbx],bh
   140046379:	push   rdi
   14004637a:	add    BYTE PTR [rax],al
   14004637c:	add    DWORD PTR [rax],eax
   14004637e:	add    BYTE PTR [rax],al
   140046380:	rex.W push rdi
   140046382:	add    BYTE PTR [rax],al
   140046384:	add    BYTE PTR [rax],al
   140046386:	add    BYTE PTR [rax],al
   140046388:	push   rbp
   140046389:	push   rdi
   14004638a:	add    BYTE PTR [rax],al
   14004638c:	(bad)  
   14004638d:	(bad)  
   14004638e:	(bad)  
   14004638f:	inc    DWORD PTR [rcx]
   140046391:	clts   
   140046393:	add    BYTE PTR [rdi],cl
   140046395:	fs (bad) 
   140046397:	add    BYTE PTR [rdi],cl
   140046399:	xor    al,0x6
   14004639b:	add    BYTE PTR [rdi],cl
   14004639d:	xor    cl,BYTE PTR [rbx]
   14004639f:	jo     0x1400463c2
   1400463a1:	add    BYTE PTR [rax],al
   1400463a3:	add    BYTE PTR [rdi+rdx*2+0x57e70000],al
   1400463aa:	add    BYTE PTR [rax],al
   1400463ac:	nop
   1400463ad:	movsxd eax,DWORD PTR [rax+rax*1]
   1400463b0:	add    DWORD PTR [rdx],ecx
   1400463b2:	add    al,0x0
   1400463b4:	or     dl,BYTE PTR [rdx+0x6]
   1400463b7:	lock add al,0xc0
   1400463ba:	add    ah,BYTE PTR [rax+0x21]
   1400463bd:	or     eax,0xe40d0004
   1400463c2:	add    al,0x0
   1400463c4:	add    eax,0xf0000a34
   1400463c9:	push   rdi
   1400463ca:	add    BYTE PTR [rax],al
   1400463cc:	or     al,0x58
   1400463ce:	add    BYTE PTR [rax],al
   1400463d0:	mov    al,0x63
   1400463d2:	add    al,0x0
   1400463d4:	and    DWORD PTR [rsi],edx
   1400463d6:	(bad)  
   1400463d7:	add    BYTE PTR [rsi],dl
   1400463d9:	push   rsp
   1400463da:	or     eax,DWORD PTR [rax]
   1400463dc:	or     dl,ah
   1400463de:	add    eax,0xc740500
   1400463e3:	add    BYTE PTR [rax+rbx*2],cl
   1400463e6:	add    BYTE PTR [rax],al
   1400463e8:	and    bl,BYTE PTR [rax+0x0]
   1400463eb:	add    BYTE PTR [rbx+riz*2+0x210004],bh
   1400463f2:	add    BYTE PTR [rax],al
   1400463f4:	or     al,0x58
   1400463f6:	add    BYTE PTR [rax],al
   1400463f8:	and    bl,BYTE PTR [rax+0x0]
   1400463fb:	add    BYTE PTR [rbx+riz*2+0x210004],bh
   140046402:	add    BYTE PTR [rax],al
   140046404:	lock push rdi
   140046406:	add    BYTE PTR [rax],al
   140046408:	or     al,0x58
   14004640a:	add    BYTE PTR [rax],al
   14004640c:	mov    al,0x63
   14004640e:	add    al,0x0
   140046410:	and    DWORD PTR [rax],eax
   140046412:	or     al,BYTE PTR [rax]
   140046414:	add    ah,ah
   140046416:	add    al,0x0
   140046418:	add    ah,dl
   14004641a:	add    eax,0xc740000
   14004641f:	add    BYTE PTR [rax],al
   140046421:	push   rsp
   140046422:	or     eax,DWORD PTR [rax]
   140046424:	add    BYTE PTR [rdx+rcx*1],dh
   140046427:	add    al,dh
   140046429:	push   rdi
   14004642a:	add    BYTE PTR [rax],al
   14004642c:	or     al,0x58
   14004642e:	add    BYTE PTR [rax],al
   140046430:	mov    al,0x63
   140046432:	add    al,0x0
   140046434:	add    DWORD PTR [rsp+rcx*1],ebx
   140046437:	add    BYTE PTR [rsp+riz*2],bl
   14004643a:	(bad)  
   14004643b:	add    BYTE PTR [rsp+rdx*2],bl
   14004643e:	or     eax,0xc341c00
   140046443:	add    BYTE PTR [rdx+rdx*2],bl
   140046446:	sbb    al,dh
   140046448:	(bad)  
   140046449:	loopne 0x14004645f
   14004644b:	rcl    BYTE PTR [rdx],1
   14004644d:	rcl    BYTE PTR [rax],0x70
   140046450:	and    DWORD PTR [rax],eax
   140046452:	add    BYTE PTR [rax],al
   140046454:	mov    al,0x58
   140046456:	add    BYTE PTR [rax],al
   140046458:	test   DWORD PTR [rdx+0x0],ebx
   14004645b:	add    BYTE PTR [rsp+riz*2],dh
   14004645e:	add    al,0x0
   140046460:	add    DWORD PTR [rsi],eax
   140046462:	add    al,BYTE PTR [rax]
   140046464:	(bad)  
   140046465:	push   rdx
   140046466:	add    dh,BYTE PTR [rax]
   140046468:	and    DWORD PTR [rip+0xfffffffff42d000a],ebp        # 0x134316478
   14004646e:	add    al,0x0
   140046470:	sub    ah,ah
   140046472:	add    eax,0xa741900
   140046477:	add    BYTE PTR [rcx],dl
   140046479:	or     DWORD PTR fs:[rax],eax
   14004647c:	add    eax,0x90000854
   140046481:	pop    rdx
   140046482:	add    BYTE PTR [rax],al
   140046484:	xchg   esi,eax
   140046485:	pop    rdx
   140046486:	add    BYTE PTR [rax],al
   140046488:	(bad)  
   140046489:	fs add al,0x0
   14004648c:	and    DWORD PTR [rax],eax
   14004648e:	or     BYTE PTR [rax],al
   140046490:	add    ah,dh
   140046492:	add    al,0x0
   140046494:	add    ah,ah
   140046496:	add    eax,0xa740000
   14004649b:	add    BYTE PTR [rax],al
   14004649d:	or     DWORD PTR fs:[rax],eax
   1400464a0:	nop
   1400464a1:	pop    rdx
   1400464a2:	add    BYTE PTR [rax],al
   1400464a4:	xchg   esi,eax
   1400464a5:	pop    rdx
   1400464a6:	add    BYTE PTR [rax],al
   1400464a8:	(bad)  
   1400464a9:	fs add al,0x0
   1400464ac:	and    DWORD PTR [rax],eax
   1400464ae:	add    BYTE PTR [rax],al
   1400464b0:	nop
   1400464b1:	pop    rdx
   1400464b2:	add    BYTE PTR [rax],al
   1400464b4:	xchg   esi,eax
   1400464b5:	pop    rdx
   1400464b6:	add    BYTE PTR [rax],al
   1400464b8:	(bad)  
   1400464b9:	fs add al,0x0
   1400464bc:	and    DWORD PTR [rax],eax
   1400464be:	or     al,BYTE PTR [rax]
   1400464c0:	add    ah,dh
   1400464c2:	add    al,0x0
   1400464c4:	add    ah,ah
   1400464c6:	add    eax,0xa740000
   1400464cb:	add    BYTE PTR [rax],al
   1400464cd:	or     DWORD PTR fs:[rax],eax
   1400464d0:	add    BYTE PTR [rax+rcx*1+0x0],dl
   1400464d4:	nop
   1400464d5:	pop    rdx
   1400464d6:	add    BYTE PTR [rax],al
   1400464d8:	xchg   esi,eax
   1400464d9:	pop    rdx
   1400464da:	add    BYTE PTR [rax],al
   1400464dc:	(bad)  
   1400464dd:	fs add al,0x0
   1400464e0:	and    DWORD PTR [rax],eax
   1400464e2:	or     BYTE PTR [rax],al
   1400464e4:	add    ah,dh
   1400464e6:	add    al,0x0
   1400464e8:	add    ah,ah
   1400464ea:	add    eax,0xa740000
   1400464ef:	add    BYTE PTR [rax],al
   1400464f1:	or     DWORD PTR fs:[rax],eax
   1400464f4:	nop
   1400464f5:	pop    rdx
   1400464f6:	add    BYTE PTR [rax],al
   1400464f8:	xchg   esi,eax
   1400464f9:	pop    rdx
   1400464fa:	add    BYTE PTR [rax],al
   1400464fc:	(bad)  
   1400464fd:	fs add al,0x0
   140046500:	add    DWORD PTR [rax+rcx*1],edx
   140046503:	add    BYTE PTR [rsp+riz*2],dl
   140046506:	or     BYTE PTR [rax],al
   140046508:	adc    al,0x54
   14004650a:	(bad)  
   14004650b:	add    BYTE PTR [rsp+rsi*1],dl
   14004650e:	(bad)  
   14004650f:	add    BYTE PTR [rdx+rsi*1],dl
   140046512:	adc    BYTE PTR [rax+0x21],dh
   140046515:	add    BYTE PTR [rax],al
   140046517:	add    BYTE PTR [rax-0x5fffffa5],dh
   14004651d:	pop    rsp
   14004651e:	add    BYTE PTR [rax],al
   140046520:	add    BYTE PTR [rbp+0x4],ah
   140046523:	add    BYTE PTR [rcx],al
   140046525:	(bad)  
   140046526:	add    al,BYTE PTR [rax]
   140046528:	(bad)  
   140046529:	xor    al,BYTE PTR [rdx]
   14004652b:	xor    BYTE PTR [rcx],ah
   14004652d:	add    BYTE PTR [rax],al
   14004652f:	add    BYTE PTR [rbx*2+0x5d450000],ah
   140046536:	add    BYTE PTR [rax],al
   140046538:	and    al,0x65
   14004653a:	add    al,0x0
   14004653c:	add    DWORD PTR [rax],ecx
   14004653e:	add    al,0x0
   140046540:	or     BYTE PTR [rdx+0x4],dh
   140046543:	jo     0x140046548
   140046545:	(bad)  
   140046546:	add    dh,BYTE PTR [rax]
   140046548:	and    DWORD PTR [rip+0x54050002],eax        # 0x194096550
   14004654e:	or     al,0x0
   140046550:	push   rax
   140046551:	pop    rbp
   140046552:	add    BYTE PTR [rax],al
   140046554:	outs   dx,DWORD PTR ds:[rsi]
   140046555:	pop    rbp
   140046556:	add    BYTE PTR [rax],al
   140046558:	cmp    al,0x65
   14004655a:	add    al,0x0
   14004655c:	and    DWORD PTR [rax],ebx
   14004655e:	(bad)  
   14004655f:	add    BYTE PTR [rax],bl
   140046561:	hlt    
   140046562:	(bad)  
   140046563:	add    BYTE PTR [rax],dl
   140046565:	in     al,0x7
   140046567:	add    BYTE PTR [rip+0x6f000dc4],al        # 0x1af047331
   14004656d:	pop    rbp
   14004656e:	add    BYTE PTR [rax],al
   140046570:	jns    0x1400465cf
   140046572:	add    BYTE PTR [rax],al
   140046574:	rex.W
   140046575:	gs add al,0x0
   140046578:	and    DWORD PTR [rax],eax
   14004657a:	add    al,BYTE PTR [rax]
   14004657c:	add    ah,ah
   14004657e:	(bad)  
   14004657f:	add    BYTE PTR [rdi+0x5d],ch
   140046582:	add    BYTE PTR [rax],al
   140046584:	jns    0x1400465e3
   140046586:	add    BYTE PTR [rax],al
   140046588:	rex.W
   140046589:	gs add al,0x0
   14004658c:	and    DWORD PTR [rax],eax
   14004658e:	add    BYTE PTR [rax],al
   140046590:	push   rax
   140046591:	pop    rbp
   140046592:	add    BYTE PTR [rax],al
   140046594:	outs   dx,DWORD PTR ds:[rsi]
   140046595:	pop    rbp
   140046596:	add    BYTE PTR [rax],al
   140046598:	cmp    al,0x65
   14004659a:	add    al,0x0
   14004659c:	and    DWORD PTR [rax],eax
   14004659e:	add    al,0x0
   1400465a0:	add    ah,ah
   1400465a2:	(bad)  
   1400465a3:	add    BYTE PTR [rax],al
   1400465a5:	push   rsp
   1400465a6:	or     al,0x0
   1400465a8:	push   rax
   1400465a9:	pop    rbp
   1400465aa:	add    BYTE PTR [rax],al
   1400465ac:	outs   dx,DWORD PTR ds:[rsi]
   1400465ad:	pop    rbp
   1400465ae:	add    BYTE PTR [rax],al
   1400465b0:	cmp    al,0x65
   1400465b2:	add    al,0x0
   1400465b4:	and    DWORD PTR [rax],eax
   1400465b6:	or     BYTE PTR [rax],al
   1400465b8:	add    ah,dh
   1400465ba:	(bad)  
   1400465bb:	add    BYTE PTR [rax],al
   1400465bd:	in     al,0x7
   1400465bf:	add    BYTE PTR [rax],al
   1400465c1:	(bad)  
   1400465c2:	or     eax,0xc540000
   1400465c7:	add    BYTE PTR [rax+0x5d],dl
   1400465ca:	add    BYTE PTR [rax],al
   1400465cc:	outs   dx,DWORD PTR ds:[rsi]
   1400465cd:	pop    rbp
   1400465ce:	add    BYTE PTR [rax],al
   1400465d0:	cmp    al,0x65
   1400465d2:	add    al,0x0
   1400465d4:	and    DWORD PTR [rax],eax
   1400465d6:	add    al,0x0
   1400465d8:	add    ah,ah
   1400465da:	(bad)  
   1400465db:	add    BYTE PTR [rax],al
   1400465dd:	push   rsp
   1400465de:	or     al,0x0
   1400465e0:	push   rax
   1400465e1:	pop    rbp
   1400465e2:	add    BYTE PTR [rax],al
   1400465e4:	outs   dx,DWORD PTR ds:[rsi]
   1400465e5:	pop    rbp
   1400465e6:	add    BYTE PTR [rax],al
   1400465e8:	cmp    al,0x65
   1400465ea:	add    al,0x0
   1400465ec:	add    DWORD PTR [rsi],ecx
   1400465ee:	add    al,0x0
   1400465f0:	(bad)  
   1400465f1:	jb     0x1400465fd
   1400465f3:	ror    BYTE PTR [rax],1
   1400465f5:	rol    BYTE PTR [rsi],0x30
   1400465f8:	and    DWORD PTR [rcx],ebx
   1400465fa:	or     al,BYTE PTR [rax]
   1400465fc:	sbb    esp,esi
   1400465fe:	add    al,0x0
   140046600:	adc    al,0xe4
   140046602:	add    eax,0x6740f00
   140046607:	add    BYTE PTR [rdx],cl
   140046609:	fs (bad) 
   14004660b:	add    BYTE PTR [rip+0x60000f54],al        # 0x1a0047565
   140046611:	pop    rdi
   140046612:	add    BYTE PTR [rax],al
   140046614:	xchg   DWORD PTR [rdi+0x0],ebx
   140046617:	add    ah,ch
   140046619:	gs add al,0x0
   14004661c:	and    DWORD PTR [rax],eax
   14004661e:	add    BYTE PTR [rax],al
   140046620:	(bad)  
   140046621:	pop    rdi
   140046622:	add    BYTE PTR [rax],al
   140046624:	xchg   DWORD PTR [rdi+0x0],ebx
   140046627:	add    ah,ch
   140046629:	gs add al,0x0
   14004662c:	and    DWORD PTR [rax],eax
   14004662e:	or     al,BYTE PTR [rax]
   140046630:	add    ah,dh
   140046632:	add    al,0x0
   140046634:	add    ah,ah
   140046636:	add    eax,0x6740000
   14004663b:	add    BYTE PTR [rax],al
   14004663d:	fs (bad) 
   14004663f:	add    BYTE PTR [rax],al
   140046641:	push   rsp
   140046642:	verr   WORD PTR [rax+0x5f]
   140046646:	add    BYTE PTR [rax],al
   140046648:	xchg   DWORD PTR [rdi+0x0],ebx
   14004664b:	add    ah,ch
   14004664d:	gs add al,0x0
   140046650:	and    DWORD PTR [rax],eax
   140046652:	or     al,BYTE PTR [rax]
   140046654:	add    ah,dh
   140046656:	add    al,0x0
   140046658:	add    ah,ah
   14004665a:	add    eax,0x6740000
   14004665f:	add    BYTE PTR [rax],al
   140046661:	fs (bad) 
   140046663:	add    BYTE PTR [rax],al
   140046665:	push   rsp
   140046666:	verr   WORD PTR [rax+0x5f]
   14004666a:	add    BYTE PTR [rax],al
   14004666c:	xchg   DWORD PTR [rdi+0x0],ebx
   14004666f:	add    ah,ch
   140046671:	gs add al,0x0
   140046674:	add    DWORD PTR [rcx+rax*1],eax
   140046677:	add    BYTE PTR [rdx+rax*2],al
   14004667a:	add    BYTE PTR [rax],al
   14004667c:	and    DWORD PTR [rax],eax
   14004667e:	add    BYTE PTR [rax],al
   140046680:	add    BYTE PTR [rcx+0x0],ah
   140046683:	add    BYTE PTR [rip+0x74000061],bl        # 0x1b40466ea
   140046689:	data16 add al,0x0
   14004668c:	sbb    DWORD PTR [rcx],esp
   14004668e:	or     BYTE PTR [rax],al
   140046690:	and    DWORD PTR [rbp+rcx*1+0x0],esp
   140046694:	sbb    al,0x34
   140046696:	or     al,0x0
   140046698:	(bad)  
   140046699:	push   rdx
   14004669a:	or     dh,al
   14004669c:	or     al,ah
   14004669e:	(bad)  
   14004669f:	jo     0x1400466d7
   1400466a1:	push   rsi
   1400466a2:	add    DWORD PTR [rax],eax
   1400466a4:	jo     0x1400466a8
   1400466a6:	add    al,0x0
   1400466a8:	and    DWORD PTR [rax],eax
   1400466aa:	add    BYTE PTR [rax],al
   1400466ac:	(bad)  
   1400466ad:	(bad)  
   1400466ae:	add    BYTE PTR [rax],al
   1400466b0:	xchg   DWORD PTR [rdx+0x0],esp
   1400466b3:	add    BYTE PTR [rsi+riz*2-0xfffc],cl
   1400466ba:	(bad)  
   1400466bb:	jmp    QWORD PTR [rax]
   1400466bd:	pop    rdi
   1400466be:	add    DWORD PTR [rax],eax
	...
   1400466c8:	add    DWORD PTR [rax],eax
   1400466ca:	add    BYTE PTR [rax],al
   1400466cc:	sub    al,0x5f
   1400466ce:	add    DWORD PTR [rax],eax
	...
   1400466d8:	add    DWORD PTR [rax],eax
   1400466da:	add    BYTE PTR [rax],al
   1400466dc:	add    al,BYTE PTR [rax]
   1400466de:	add    BYTE PTR [rax],al
   1400466e0:	add    eax,DWORD PTR [rax]
   1400466e2:	add    BYTE PTR [rax],al
   1400466e4:	add    DWORD PTR [rax],eax
   1400466e6:	add    BYTE PTR [rax],al
   1400466e8:	in     al,dx
   1400466e9:	data16 add al,0x0
   1400466ec:	add    BYTE PTR [rax],al
	...
   1400466f7:	add    BYTE PTR [rax],bh
   1400466f9:	pop    rdi
   1400466fa:	add    DWORD PTR [rax],eax
   1400466fc:	cmp    BYTE PTR [rax],al
   1400466fe:	add    BYTE PTR [rax],al
   140046700:	(bad)  
   140046701:	(bad)  
   140046702:	add    BYTE PTR [rax],al
   140046704:	(bad)  
   140046705:	(bad)  
   140046706:	(bad)  
   140046707:	(bad)  
   140046708:	mov    eax,0x1000061
   14004670d:	add    BYTE PTR [rax],al
   14004670f:	add    dl,cl
   140046711:	(bad)  
   140046712:	add    BYTE PTR [rax],al
   140046714:	add    al,BYTE PTR [rax]
   140046716:	add    BYTE PTR [rax],al
   140046718:	punpckldq mm0,DWORD PTR [rax]
   14004671b:	add    BYTE PTR [rcx],al
   14004671d:	add    BYTE PTR [rax],al
   14004671f:	add    BYTE PTR [rdx+riz*2],dl
   140046722:	add    BYTE PTR [rax],al
   140046724:	add    BYTE PTR [rax],al
   140046726:	add    BYTE PTR [rax],al
   140046728:	fs (bad) 
   14004672a:	add    BYTE PTR [rax],al
   14004672c:	(bad)  
   14004672d:	(bad)  
   14004672e:	(bad)  
   14004672f:	(bad)  
   140046730:	cmp    BYTE PTR [rdi+0x1],bl
   140046733:	add    BYTE PTR [rax],al
   140046735:	add    BYTE PTR [rax],al
   140046737:	add    BYTE PTR [rax-0xd],dl
   14004673a:	add    DWORD PTR [rax],eax
   14004673c:	(bad)  
   14004673d:	(bad)  
   14004673e:	(bad)  
   14004673f:	jmp    FWORD PTR [rsi-0xd]
   140046742:	add    DWORD PTR [rax],eax
   140046744:	add    al,BYTE PTR [rax]
   140046746:	add    BYTE PTR [rax],al
   140046748:	jbe    0x14004673d
   14004674a:	add    DWORD PTR [rax],eax
   14004674c:	add    BYTE PTR [rax],al
   14004674e:	add    BYTE PTR [rax],al
   140046750:	sahf   
   140046751:	repz add DWORD PTR [rax],eax
   140046754:	(bad)  
   140046755:	(bad)  
   140046756:	(bad)  
   140046757:	call   FWORD PTR [rcx]
   140046759:	or     al,BYTE PTR [rdx]
   14004675b:	add    BYTE PTR [rdx],cl
   14004675d:	xor    al,BYTE PTR [rsi]
   14004675f:	push   rax
   140046760:	ss push rsi
   140046762:	add    DWORD PTR [rax],eax
   140046764:	jo     0x140046768
   140046766:	add    al,0x0
   140046768:	sbb    DWORD PTR [rax],ebp
   14004676a:	or     DWORD PTR [rax],eax
   14004676c:	sbb    al,0x1
   14004676e:	sbb    al,0x0
   140046770:	adc    eax,0x11e013f0
   140046775:	ror    BYTE PTR [rdi],1
   140046777:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b6473ee
   14004677e:	add    BYTE PTR [rax],al
   140046780:	ss push rsi
   140046782:	add    DWORD PTR [rax],eax
   140046784:	cwde   
   140046785:	add    al,BYTE PTR [rax+rax*1]
   140046788:	and    DWORD PTR [rax],eax
   14004678a:	add    BYTE PTR [rax],al
   14004678c:	nop
   14004678d:	(bad)  
   14004678e:	add    BYTE PTR [rax],al
   140046790:	jne    0x1400467f8
   140046792:	add    BYTE PTR [rax],al
   140046794:	push   0xffffffffff000467
   140046799:	(bad)  
   14004679a:	(bad)  
   14004679b:	jmp    QWORD PTR [rax+0x5f]
   14004679e:	add    DWORD PTR [rax],eax
	...
   1400467a8:	add    DWORD PTR [rax],eax
   1400467aa:	add    BYTE PTR [rax],al
   1400467ac:	ins    BYTE PTR es:[rdi],dx
   1400467ad:	pop    rdi
   1400467ae:	add    DWORD PTR [rax],eax
   1400467b0:	add    al,BYTE PTR [rax]
   1400467b2:	add    BYTE PTR [rax],al
   1400467b4:	js     0x140046815
   1400467b6:	add    DWORD PTR [rax],eax
   1400467b8:	add    al,BYTE PTR [rax]
   1400467ba:	add    BYTE PTR [rax],al
   1400467bc:	test   BYTE PTR [rdi+0x1],bl
   1400467bf:	add    BYTE PTR [rax+rax*1],al
   1400467c2:	add    BYTE PTR [rax],al
   1400467c4:	xchg   esp,eax
   1400467c5:	pop    rdi
   1400467c6:	add    DWORD PTR [rax],eax
   1400467c8:	add    al,0x0
   1400467ca:	add    BYTE PTR [rax],al
   1400467cc:	movabs al,ds:0xb00000000600015f
   1400467d5:	pop    rdi
   1400467d6:	add    DWORD PTR [rax],eax
   1400467d8:	(bad)  
   1400467d9:	add    BYTE PTR [rax],al
   1400467db:	add    BYTE PTR [rdi+rbx*2+0x80001],bh
   1400467e2:	add    BYTE PTR [rax],al
   1400467e4:	int3   
   1400467e5:	pop    rdi
   1400467e6:	add    DWORD PTR [rax],eax
   1400467e8:	add    al,BYTE PTR [rax]
   1400467ea:	add    BYTE PTR [rax],al
   1400467ec:	fcomp  QWORD PTR [rdi+0x1]
   1400467ef:	add    BYTE PTR [rdx],al
   1400467f1:	add    BYTE PTR [rax],al
   1400467f3:	add    ah,ch
   1400467f5:	pop    rdi
   1400467f6:	add    DWORD PTR [rax],eax
	...
   140046800:	add    DWORD PTR [rax],eax
   140046802:	add    BYTE PTR [rax],al
   140046804:	or     eax,DWORD PTR [rax]
   140046806:	add    BYTE PTR [rax],al
   140046808:	or     al,0x0
   14004680a:	add    BYTE PTR [rax],al
   14004680c:	add    DWORD PTR [rax],eax
   14004680e:	add    BYTE PTR [rax],al
   140046810:	adc    al,0x68
   140046812:	add    al,0x0
   140046814:	add    BYTE PTR [rax],al
	...
   14004681f:	add    al,bh
   140046821:	pop    rdi
   140046822:	add    DWORD PTR [rax],eax
   140046824:	cmp    BYTE PTR [rax],al
   140046826:	add    BYTE PTR [rax],al
   140046828:	nop
   140046829:	(bad)  
   14004682a:	add    BYTE PTR [rax],al
   14004682c:	(bad)  
   14004682d:	(bad)  
   14004682e:	(bad)  
   14004682f:	(bad)  
   140046830:	in     al,dx
   140046831:	(bad)  
   140046832:	add    BYTE PTR [rax],al
   140046834:	add    DWORD PTR [rax],eax
   140046836:	add    BYTE PTR [rax],al
   140046838:	add    DWORD PTR [rbx+0x0],esp
   14004683b:	add    BYTE PTR [rdx],al
   14004683d:	add    BYTE PTR [rax],al
   14004683f:	add    BYTE PTR [rsi+0x4000063],bh
   140046845:	add    BYTE PTR [rax],al
   140046847:	add    BYTE PTR [rip+0x6000064],bh        # 0x1460468b1
   14004684d:	add    BYTE PTR [rax],al
   14004684f:	add    BYTE PTR [rdi+0x8000064],bh
   140046855:	add    BYTE PTR [rax],al
   140046857:	add    BYTE PTR [rdx],cl
   140046859:	add    BYTE PTR gs:[rax],al
   14004685c:	or     DWORD PTR [rax],eax
   14004685e:	add    BYTE PTR [rax],al
   140046860:	rex.WB
   140046861:	add    BYTE PTR gs:[rax],al
   140046864:	or     al,BYTE PTR [rax]
   140046866:	add    BYTE PTR [rax],al
   140046868:	fs add BYTE PTR gs:[rax],al
   14004686c:	or     eax,DWORD PTR [rax]
   14004686e:	add    BYTE PTR [rax],al
   140046870:	jne    0x1400468d7
   140046872:	add    BYTE PTR [rax],al
   140046874:	add    DWORD PTR [rax],eax
   140046876:	add    BYTE PTR [rax],al
   140046878:	jp     0x1400468df
   14004687a:	add    BYTE PTR [rax],al
   14004687c:	add    BYTE PTR [rax],al
   14004687e:	add    BYTE PTR [rax],al
   140046880:	rex.WB
   140046881:	data16 add BYTE PTR [rax],al
   140046884:	(bad)  
   140046885:	(bad)  
   140046886:	(bad)  
   140046887:	jmp    FWORD PTR [rsi+riz*2+0x0]
   14004688b:	add    BYTE PTR [rcx],cl
   14004688d:	add    BYTE PTR [rax],al
   14004688f:	add    BYTE PTR [rcx+0x66],dh
   140046892:	add    BYTE PTR [rax],al
   140046894:	(bad)  
   140046895:	(bad)  
   140046896:	(bad)  
   140046897:	(bad)  
   140046898:	clc    
   140046899:	pop    rdi
   14004689a:	add    DWORD PTR [rax],eax
   14004689c:	add    BYTE PTR [rax],al
   14004689e:	add    BYTE PTR [rax],al
   1400468a0:	mov    esi,0xff0001f3
   1400468a5:	(bad)  
   1400468a6:	(bad)  
   1400468a7:	(bad)  
   1400468a8:	fdivr  st(3),st
   1400468aa:	add    DWORD PTR [rax],eax
   1400468ac:	add    al,BYTE PTR [rax]
   1400468ae:	add    BYTE PTR [rax],al
   1400468b0:	imul   esi,esp,0x1
   1400468b3:	add    BYTE PTR [rax+rax*1],al
   1400468b6:	add    BYTE PTR [rax],al
   1400468b8:	cli    
   1400468b9:	hlt    
   1400468ba:	add    DWORD PTR [rax],eax
   1400468bc:	(bad)  
   1400468bd:	add    BYTE PTR [rax],al
   1400468bf:	add    BYTE PTR [rbp+rsi*8+0x1],bh
   1400468c3:	add    BYTE PTR [rax],cl
   1400468c5:	add    BYTE PTR [rax],al
   1400468c7:	add    BYTE PTR [rbp+0x90001f5],dl
   1400468cd:	add    BYTE PTR [rax],al
   1400468cf:	add    BYTE PTR [rbp+rsi*8+0x20001],ch
   1400468d6:	add    BYTE PTR [rax],al
   1400468d8:	mov    ah,0xf5
   1400468da:	add    DWORD PTR [rax],eax
   1400468dc:	add    BYTE PTR [rax],al
   1400468de:	add    BYTE PTR [rax],al
   1400468e0:	(bad)  
   1400468e1:	test   BYTE PTR [rcx],0x0
   1400468e4:	(bad)  
   1400468e5:	(bad)  
   1400468e6:	(bad)  
   1400468e7:	call   FWORD PTR [rcx]
   1400468e9:	or     al,BYTE PTR [rdx]
   1400468eb:	add    BYTE PTR [rdx],cl
   1400468ed:	xor    al,BYTE PTR [rsi]
   1400468ef:	push   rax
   1400468f0:	ss push rsi
   1400468f2:	add    DWORD PTR [rax],eax
   1400468f4:	cwde   
   1400468f5:	add    al,BYTE PTR [rax+rax*1]
   1400468f8:	add    DWORD PTR [rsi],eax
   1400468fa:	add    al,BYTE PTR [rax]
   1400468fc:	(bad)  
   1400468fd:	xor    al,BYTE PTR [rdx]
   1400468ff:	xor    BYTE PTR [rcx],ah
   140046901:	add    BYTE PTR [rax],al
   140046903:	add    BYTE PTR [rsi+riz*2+0x0],bh
   140046907:	add    BYTE PTR [rbx-0x7ffff9a],bh
   14004690d:	push   0xa010004
   140046912:	add    al,0x0
   140046914:	or     dh,BYTE PTR [rsi+rax*1]
   140046917:	add    BYTE PTR [rdx],cl
   140046919:	xor    al,BYTE PTR [rsi]
   14004691b:	jo     0x14004693e
   14004691d:	add    BYTE PTR [rax],al
   14004691f:	add    al,bh
   140046921:	data16 add BYTE PTR [rax],al
   140046924:	push   rcx
   140046925:	add    BYTE PTR [eax],al
   140046928:	adc    BYTE PTR [rcx+0x4],ch
   14004692b:	add    BYTE PTR [rcx],dl
   14004692d:	and    al,0xa
   14004692f:	add    BYTE PTR [rsp+rdx*2],ah
   140046932:	ltr    WORD PTR [rdi]
   140046935:	xor    al,0xe
   140046937:	add    BYTE PTR [rcx],dl
   140046939:	push   rdx
   14004693a:	or     eax,0x9e00bf0
   14004693f:	rol    BYTE PTR [rdi],0x70
   140046942:	(bad)  
   140046943:	(bad)  
   140046944:	ss push rsi
   140046946:	add    DWORD PTR [rax],eax
   140046948:	rol    BYTE PTR [rdx],0x4
   14004694b:	add    BYTE PTR [rcx],ah
   14004694d:	add    BYTE PTR [rax],al
   14004694f:	add    BYTE PTR [rax+0x67],ah
   140046952:	add    BYTE PTR [rax],al
   140046954:	sbb    BYTE PTR [rcx+0x0],ch
   140046957:	add    BYTE PTR [rcx+rbp*2],ch
   14004695a:	add    al,0x0
   14004695c:	(bad)  
   14004695d:	(bad)  
   14004695e:	(bad)  
   14004695f:	jmp    QWORD PTR [rax]
   140046961:	(bad)  
   140046962:	add    DWORD PTR [rax],eax
   140046964:	add    BYTE PTR [rax],al
   140046966:	add    BYTE PTR [rax],al
   140046968:	xor    BYTE PTR [rax+0x1],ah
   14004696b:	add    BYTE PTR [rcx],al
   14004696d:	add    BYTE PTR [rax],al
   14004696f:	add    BYTE PTR [rax+0x60],al
   140046972:	add    DWORD PTR [rax],eax
   140046974:	add    al,BYTE PTR [rax]
   140046976:	add    BYTE PTR [rax],al
   140046978:	push   rax
   140046979:	(bad)  
   14004697a:	add    DWORD PTR [rax],eax
   14004697c:	(bad)  
   14004697d:	add    BYTE PTR [eax],al
   140046980:	(bad)  
   140046981:	(bad)  
   140046982:	(bad)  
   140046983:	push   rdi
   140046985:	add    BYTE PTR [eax],al
   140046988:	add    BYTE PTR [rax],al
   14004698a:	add    BYTE PTR [rax],al
   14004698c:	rex.RX push 0x10000
   140046992:	add    BYTE PTR [rax],al
   140046994:	xchg   ebp,eax
   140046995:	push   0x20000
   14004699a:	add    BYTE PTR [rax],al
   14004699c:	(bad)  
   14004699d:	push   0x30000
   1400469a2:	add    BYTE PTR [rax],al
   1400469a4:	(bad)  
   1400469a5:	push   0xffffffffffff0000
   1400469aa:	(bad)  
   1400469ab:	jmp    QWORD PTR [rax-0xfffe0a]
   1400469b1:	(bad)  
   1400469b2:	(bad)  
   1400469b3:	dec    DWORD PTR [rax]
   1400469b5:	test   DWORD PTR [rcx],0x0
   1400469bb:	add    BYTE PTR [rax-0x9],dh
   1400469be:	add    DWORD PTR [rax],eax
   1400469c0:	add    DWORD PTR [rax],eax
   1400469c2:	add    BYTE PTR [rax],al
   1400469c4:	fdiv   st,st(7)
   1400469c6:	add    DWORD PTR [rax],eax
   1400469c8:	add    al,BYTE PTR [rax]
   1400469ca:	add    BYTE PTR [rax],al
   1400469cc:	lock test DWORD PTR [rcx],0x300
   1400469d3:	add    BYTE PTR [rcx],al
   1400469d5:	clts   
   1400469d7:	add    BYTE PTR [rdi],cl
   1400469d9:	or     DWORD PTR fs:[rax],eax
   1400469dc:	sysenter 
   1400469de:	or     BYTE PTR [rax],al
   1400469e0:	rdmsr  
   1400469e2:	or     esi,DWORD PTR [rax+0x21]
   1400469e5:	adc    BYTE PTR [rax+rax*1],al
   1400469e8:	adc    ah,dh
   1400469ea:	(bad)  
   1400469eb:	add    BYTE PTR [rip+0x200006e4],al        # 0x1600470d5
   1400469f1:	imul   eax,DWORD PTR [rax],0x693600
   1400469f7:	add    ah,dl
   1400469f9:	imul   eax,DWORD PTR [rax+rax*1],0x21
   140046a00:	and    BYTE PTR [rcx+0x0],ch
   140046a03:	add    BYTE PTR [rsi],dh
   140046a05:	imul   eax,DWORD PTR [rax],0x469d400
   140046a0b:	add    BYTE PTR [rcx],ah
   140046a0d:	add    BYTE PTR [rax+rax*1],al
   140046a10:	add    ah,dh
   140046a12:	(bad)  
   140046a13:	add    BYTE PTR [rax],al
   140046a15:	in     al,0x6
   140046a17:	add    BYTE PTR [rax],ah
   140046a19:	imul   eax,DWORD PTR [rax],0x693600
   140046a1f:	add    ah,dl
   140046a21:	imul   eax,DWORD PTR [rax+rax*1],0x21
   140046a28:	and    BYTE PTR [rcx+0x0],ch
   140046a2b:	add    BYTE PTR [rsi],dh
   140046a2d:	imul   eax,DWORD PTR [rax],0x469d400
   140046a33:	add    BYTE PTR [rcx],bl
   140046a35:	xor    al,BYTE PTR [rdi]
   140046a37:	add    BYTE PTR [rdi],dl
   140046a39:	add    DWORD PTR [rdx],edx
   140046a3b:	add    BYTE PTR [rax],dl
   140046a3d:	loopne 0x140046a4d
   140046a3f:	jo     0x140046a4e
   140046a41:	(bad)  
   140046a42:	or     al,0x50
   140046a44:	or     esi,DWORD PTR [rax]
   140046a46:	add    BYTE PTR [rax],al
   140046a48:	rex.R push rsi
   140046a4a:	add    DWORD PTR [rax],eax
   140046a4c:	call   0xc2046e53
   140046a51:	add    BYTE PTR [rax],al
   140046a53:	add    BYTE PTR [rcx],ah
   140046a55:	add    BYTE PTR [rax],al
   140046a57:	add    al,al
   140046a59:	imul   eax,DWORD PTR [rax],0x6ba100
   140046a5f:	add    BYTE PTR [rdx+rbp*2],dh
   140046a62:	add    al,0x0
   140046a64:	(bad)  
   140046a65:	(bad)  
   140046a66:	(bad)  
   140046a67:	push   QWORD PTR [rax+0x60]
   140046a6a:	add    DWORD PTR [rax],eax
   140046a6c:	add    BYTE PTR [rax],al
   140046a6e:	add    BYTE PTR [rax],al
   140046a70:	and    BYTE PTR [rax+0x1],0x0
   140046a74:	add    DWORD PTR [rax],eax
   140046a76:	add    BYTE PTR [rax],al
   140046a78:	nop
   140046a79:	(bad)  
   140046a7a:	add    DWORD PTR [rax],eax
   140046a7c:	add    al,BYTE PTR [rax]
   140046a7e:	add    BYTE PTR [rax],al
   140046a80:	movabs al,ds:0xff000069c0000160
   140046a89:	(bad)  
   140046a8a:	(bad)  
   140046a8b:	inc    DWORD PTR [rsi+0x6a]
   140046a8e:	add    BYTE PTR [rax],al
   140046a90:	add    BYTE PTR [rax],al
   140046a92:	add    BYTE PTR [rax],al
   140046a94:	ins    BYTE PTR es:[rdi],dx
   140046a95:	push   0x0
   140046a97:	add    BYTE PTR [rcx],al
   140046a99:	add    BYTE PTR [rax],al
   140046a9b:	add    BYTE PTR [rdx+0x200006a],dl
   140046aa1:	add    BYTE PTR [rax],al
   140046aa3:	add    BYTE PTR [rbp+0x300006a],dh
   140046aa9:	add    BYTE PTR [rax],al
   140046aab:	add    BYTE PTR [rdx+0x6b],bh
   140046aae:	add    BYTE PTR [rax],al
   140046ab0:	(bad)  
   140046ab1:	(bad)  
   140046ab2:	(bad)  
   140046ab3:	call   FWORD PTR [rbx+0x300006b]
   140046ab9:	add    BYTE PTR [rax],al
   140046abb:	add    BYTE PTR [rax+rdi*8-0xffff],dl
   140046ac2:	(bad)  
   140046ac3:	jmp    FWORD PTR [rax+rdi*8+0x1]
   140046aca:	add    BYTE PTR [rax],al
   140046acc:	(bad)  
   140046acd:	clc    
   140046ace:	add    DWORD PTR [rax],eax
   140046ad0:	add    DWORD PTR [rax],eax
   140046ad2:	add    BYTE PTR [rax],al
   140046ad4:	fdiv   st(0),st
   140046ad6:	add    DWORD PTR [rax],eax
   140046ad8:	add    al,BYTE PTR [rax]
   140046ada:	add    BYTE PTR [rax],al
   140046adc:	idiv   al
   140046ade:	add    DWORD PTR [rax],eax
   140046ae0:	add    eax,DWORD PTR [rax]
   140046ae2:	add    BYTE PTR [rax],al
   140046ae4:	add    DWORD PTR [rdi],ecx
   140046ae6:	(bad)  
   140046ae7:	add    BYTE PTR [rdi],cl
   140046ae9:	fs (bad) 
   140046aeb:	add    BYTE PTR [rdi],cl
   140046aed:	xor    al,0x6
   140046aef:	add    BYTE PTR [rdi],cl
   140046af1:	xor    cl,BYTE PTR [rbx]
   140046af3:	jo     0x140046b16
   140046af5:	add    BYTE PTR [rax],al
   140046af7:	add    BYTE PTR [rax-0x6effff95],dh
   140046afd:	ins    BYTE PTR es:[rdi],dx
   140046afe:	add    BYTE PTR [rax],al
   140046b00:	in     al,0x6a
   140046b02:	add    al,0x0
   140046b04:	adc    DWORD PTR [rdx],ebx
   140046b06:	add    al,0x0
   140046b08:	sbb    dh,BYTE PTR [rdx+rcx*1]
   140046b0b:	add    BYTE PTR [rip+0x36500652],cl        # 0x176547163
   140046b11:	push   rsi
   140046b12:	add    DWORD PTR [rax],eax
   140046b14:	rcl    BYTE PTR [rip+0xffffffffffff0004],1        # 0x140036b1e
   140046b1a:	(bad)  
   140046b1b:	inc    eax
   140046b1d:	(bad)  
   140046b1e:	add    DWORD PTR [rax],eax
   140046b20:	mov    al,0x6c
   140046b22:	add    BYTE PTR [rax],al
   140046b24:	(bad)  
   140046b25:	(bad)  
   140046b26:	(bad)  
   140046b27:	(bad)  
   140046b28:	fisubr WORD PTR [rax+rax*1+0x0]
   140046b2c:	add    BYTE PTR [rax],al
   140046b2e:	add    BYTE PTR [rax],al
   140046b30:	push   rsi
   140046b31:	je     0x140046b33
   140046b33:	add    bh,bh
   140046b35:	(bad)  
   140046b36:	(bad)  
   140046b37:	inc    DWORD PTR [rcx]
   140046b39:	clts   
   140046b3b:	add    BYTE PTR [rdi],cl
   140046b3d:	fs (bad) 
   140046b3f:	add    BYTE PTR [rdi],cl
   140046b41:	xor    al,0x6
   140046b43:	add    BYTE PTR [rdi],cl
   140046b45:	xor    cl,BYTE PTR [rbx]
   140046b47:	jo     0x140046b6a
   140046b49:	add    BYTE PTR [rax],al
   140046b4b:	add    BYTE PTR [rsp+rsi*2+0x0],ch
   140046b4f:	add    BYTE PTR [rdx+0x38000074],ah
   140046b55:	imul   eax,DWORD PTR [rax+rax*1],0x1
   140046b59:	clts   
   140046b5b:	add    BYTE PTR [rdi],cl
   140046b5d:	or     DWORD PTR fs:[rax],eax
   140046b60:	sysenter 
   140046b62:	or     BYTE PTR [rax],al
   140046b64:	rdmsr  
   140046b66:	or     esi,DWORD PTR [rax+0x21]
   140046b69:	adc    BYTE PTR [rax+rax*1],al
   140046b6c:	adc    ah,ah
   140046b6e:	(bad)  
   140046b6f:	add    BYTE PTR [rip+0xffffffffb0000654],al        # 0xf00471c9
   140046b75:	je     0x140046b77
   140046b77:	add    dl,ah
   140046b79:	je     0x140046b7b
   140046b7b:	add    BYTE PTR [rax+0x6b],bl
   140046b7e:	add    al,0x0
   140046b80:	and    DWORD PTR [rax],eax
   140046b82:	add    al,BYTE PTR [rax]
   140046b84:	add    ah,ah
   140046b86:	(bad)  
   140046b87:	add    BYTE PTR [rax-0x1dffff8c],dh
   140046b8d:	je     0x140046b8f
   140046b8f:	add    BYTE PTR [rax+0x6b],bl
   140046b92:	add    al,0x0
   140046b94:	and    DWORD PTR [rax],eax
   140046b96:	add    BYTE PTR [rax],al
   140046b98:	mov    al,0x74
   140046b9a:	add    BYTE PTR [rax],al
   140046b9c:	loop   0x140046c12
   140046b9e:	add    BYTE PTR [rax],al
   140046ba0:	pop    rax
   140046ba1:	imul   eax,DWORD PTR [rax+rax*1],0x21
   140046ba5:	add    BYTE PTR [rdx],al
   140046ba7:	add    BYTE PTR [rax],al
   140046ba9:	in     al,0x7
   140046bab:	add    BYTE PTR [rax-0x1dffff8c],dh
   140046bb1:	je     0x140046bb3
   140046bb3:	add    BYTE PTR [rax+0x6b],bl
   140046bb6:	add    al,0x0
   140046bb8:	and    DWORD PTR [rax],eax
   140046bba:	add    BYTE PTR [rax],al
   140046bbc:	mov    al,0x74
   140046bbe:	add    BYTE PTR [rax],al
   140046bc0:	loop   0x140046c36
   140046bc2:	add    BYTE PTR [rax],al
   140046bc4:	pop    rax
   140046bc5:	imul   eax,DWORD PTR [rax+rax*1],0x21
   140046bc9:	add    BYTE PTR [rax+rax*1],al
   140046bcc:	add    ah,ah
   140046bce:	(bad)  
   140046bcf:	add    BYTE PTR [rax],al
   140046bd1:	push   rsp
   140046bd2:	(bad)  
   140046bd3:	add    dh,al
   140046bd5:	stc    
   140046bd6:	add    DWORD PTR [rax],eax
   140046bd8:	fdiv   st(1),st
   140046bda:	add    DWORD PTR [rax],eax
   140046bdc:	mov    eax,0x100046b
   140046be1:	sbb    DWORD PTR [rdx],ecx
   140046be3:	add    BYTE PTR [rcx],bl
   140046be5:	xor    al,0xd
   140046be7:	add    BYTE PTR [rcx],bl
   140046be9:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e47fdf
   140046bef:	ror    BYTE PTR [rdi],1
   140046bf1:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b647868
   140046bf8:	and    DWORD PTR [rax],eax
   140046bfa:	add    BYTE PTR [rax],al
   140046bfc:	xor    BYTE PTR [rbp+0x0],0x0
   140046c00:	fdiv   DWORD PTR [rsi+0x0]
   140046c03:	add    al,ah
   140046c05:	imul   eax,DWORD PTR [rax+rax*1],0x1
   140046c09:	add    al,0x1
   140046c0b:	add    BYTE PTR [rdx+rax*2],al
   140046c0e:	add    BYTE PTR [rax],al
   140046c10:	and    DWORD PTR [rax],eax
   140046c12:	add    BYTE PTR [rax],al
   140046c14:	loopne 0x140046c8c
   140046c16:	add    BYTE PTR [rax],al
   140046c18:	adc    dh,BYTE PTR [rdi+0x0]
   140046c1b:	add    BYTE PTR [rax],cl
   140046c1d:	ins    BYTE PTR es:[rdi],dx
   140046c1e:	add    al,0x0
   140046c20:	sbb    DWORD PTR [rdi],ebx
   140046c22:	(bad)  
   140046c23:	add    BYTE PTR [rdi],bl
   140046c25:	or     eax,DWORD PTR fs:[rax]
   140046c28:	sbb    esi,DWORD PTR [rdx+rcx*1]
   140046c2b:	add    BYTE PTR [rdi],cl
   140046c2d:	push   rdx
   140046c2e:	or     esi,DWORD PTR [rax+0x36]
   140046c31:	push   rsi
   140046c32:	add    DWORD PTR [rax],eax
   140046c34:	pop    rax
   140046c35:	adc    eax,0x210004
   140046c3a:	add    BYTE PTR [rax],al
   140046c3c:	rex.R ja 0x140046c3f
   140046c3f:	add    bl,ah
   140046c41:	ja     0x140046c43
   140046c43:	add    BYTE PTR [rax],ah
   140046c45:	ins    BYTE PTR es:[rdi],dx
   140046c46:	add    al,0x0
   140046c48:	(bad)  
   140046c49:	(bad)  
   140046c4a:	(bad)  
   140046c4b:	inc    DWORD PTR [rax]
   140046c4d:	add    BYTE PTR [rax],al
   140046c4f:	add    bh,bh
   140046c51:	(bad)  
   140046c52:	(bad)  
   140046c53:	inc    DWORD PTR [rax]
	...
   140046c5d:	add    BYTE PTR [rax],al
   140046c5f:	add    BYTE PTR [rcx],al
   140046c61:	add    BYTE PTR [rax],al
   140046c63:	add    BYTE PTR [rcx],al
   140046c65:	add    BYTE PTR [rax],al
   140046c67:	add    BYTE PTR [rsp+rbp*2+0x4],ch
   140046c6b:	add    BYTE PTR [rax+0x0],al
	...
   140046c76:	add    BYTE PTR [rax],al
   140046c78:	shl    BYTE PTR [rax+0x1],cl
   140046c7b:	add    BYTE PTR [rax],bh
   140046c7d:	add    BYTE PTR [rax],al
   140046c7f:	add    BYTE PTR [rdi+rsi*2+0x0],al
   140046c83:	add    bh,bh
   140046c85:	(bad)  
   140046c86:	(bad)  
   140046c87:	dec    DWORD PTR [rsi+0x77]
   140046c8d:	add    BYTE PTR [rax],al
   140046c8f:	add    BYTE PTR [rdi+rsi*2-0x10000],ch
   140046c96:	(bad)  
   140046c97:	call   rdx
   140046c99:	(bad)  
   140046c9a:	add    DWORD PTR [rax],eax
   140046c9c:	add    BYTE PTR [rax],al
   140046c9e:	add    BYTE PTR [rax],al
   140046ca0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046ca1:	cli    
   140046ca2:	add    DWORD PTR [rax],eax
   140046ca4:	(bad)  
   140046ca5:	(bad)  
   140046ca6:	(bad)  
   140046ca7:	call   FWORD PTR [rcx]
   140046ca9:	or     al,BYTE PTR [rdx]
   140046cab:	add    BYTE PTR [rdx],cl
   140046cad:	xor    al,BYTE PTR [rsi]
   140046caf:	push   rax
   140046cb0:	ss push rsi
   140046cb2:	add    DWORD PTR [rax],eax
   140046cb4:	pop    rax
   140046cb5:	adc    eax,0x21190004
   140046cba:	or     BYTE PTR [rax],al
   140046cbc:	and    DWORD PTR [rsi+rcx*1+0x0],esp
   140046cc0:	sbb    al,0x34
   140046cc2:	or     eax,0xa720e00
   140046cc7:	lock or al,ah
   140046cca:	(bad)  
   140046ccb:	jo     0x140046d03
   140046ccd:	push   rsi
   140046cce:	add    DWORD PTR [rax],eax
   140046cd0:	test   al,0x15
   140046cd2:	add    al,0x0
   140046cd4:	and    DWORD PTR [rax],eax
   140046cd6:	add    BYTE PTR [rax],al
   140046cd8:	lock ja 0x140046cdb
   140046cdb:	add    al,al
   140046cdd:	jns    0x140046cdf
   140046cdf:	add    BYTE PTR [rax-0xfffb94],bh
   140046ce5:	(bad)  
   140046ce6:	(bad)  
   140046ce7:	inc    DWORD PTR [rax]
	...
   140046cf1:	(bad)  
   140046cf2:	add    DWORD PTR [rax],eax
   140046cf4:	(bad)  
   140046cf5:	(bad)  
   140046cf6:	(bad)  
   140046cf7:	inc    DWORD PTR [rax]
   140046cf9:	add    BYTE PTR [rax],al
   140046cfb:	add    BYTE PTR [rax],al
   140046cfd:	add    BYTE PTR [rax],al
   140046cff:	add    BYTE PTR [rcx],al
   140046d01:	add    BYTE PTR [rax],al
   140046d03:	add    BYTE PTR [rdx],al
   140046d05:	add    BYTE PTR [rax],al
   140046d07:	add    BYTE PTR [rcx],al
   140046d09:	add    BYTE PTR [rax],al
   140046d0b:	add    BYTE PTR [rax],dl
   140046d0d:	ins    DWORD PTR es:[rdi],dx
   140046d0e:	add    al,0x0
   140046d10:	add    BYTE PTR [rax],al
	...
   140046d1b:	add    BYTE PTR [rcx+riz*2],bl
   140046d1e:	add    DWORD PTR [rax],eax
   140046d20:	cmp    BYTE PTR [rax],al
   140046d22:	add    BYTE PTR [rax],al
   140046d24:	lock ja 0x140046d27
   140046d27:	add    bh,bh
   140046d29:	(bad)  
   140046d2a:	(bad)  
   140046d2b:	(bad)  
   140046d2c:	cmp    bh,BYTE PTR [rax+0x0]
   140046d2f:	add    BYTE PTR [rax],al
   140046d31:	add    BYTE PTR [rax],al
   140046d33:	add    BYTE PTR [rdi],bh
   140046d35:	js     0x140046d37
   140046d37:	add    BYTE PTR [rcx],al
   140046d39:	add    BYTE PTR [rax],al
   140046d3b:	add    BYTE PTR [rax+rdi*2-0x10000],al
   140046d42:	(bad)  
   140046d43:	call   FWORD PTR [rcx+riz*2]
   140046d46:	add    DWORD PTR [rax],eax
   140046d48:	add    BYTE PTR [rax],al
   140046d4a:	add    BYTE PTR [rax],al
   140046d4c:	sub    DWORD PTR [rcx+0x1],esp
   140046d4f:	add    BYTE PTR [rdx],al
   140046d51:	add    BYTE PTR [rax],al
   140046d53:	add    dl,al
   140046d55:	cli    
   140046d56:	add    DWORD PTR [rax],eax
   140046d58:	(bad)  
   140046d59:	(bad)  
   140046d5a:	(bad)  
   140046d5b:	jmp    rcx
   140046d5d:	cli    
   140046d5e:	add    DWORD PTR [rax],eax
   140046d60:	add    DWORD PTR [rax],eax
   140046d62:	add    BYTE PTR [rax],al
   140046d64:	sti    
   140046d65:	cli    
   140046d66:	add    DWORD PTR [rax],eax
   140046d68:	(bad)  
   140046d69:	(bad)  
   140046d6a:	(bad)  
   140046d6b:	inc    DWORD PTR [rcx]
   140046d6d:	(bad)  
   140046d6e:	add    al,BYTE PTR [rax]
   140046d70:	(bad)  
   140046d71:	xor    al,BYTE PTR [rdx]
   140046d73:	push   rax
   140046d74:	sbb    DWORD PTR [rdx],ecx
   140046d76:	add    al,BYTE PTR [rax]
   140046d78:	or     dh,BYTE PTR [rdx]
   140046d7a:	(bad)  
   140046d7b:	push   rax
   140046d7c:	ss push rsi
   140046d7e:	add    DWORD PTR [rax],eax
   140046d80:	test   al,0x15
   140046d82:	add    al,0x0
   140046d84:	add    DWORD PTR [rdi],ecx
   140046d86:	(bad)  
   140046d87:	add    BYTE PTR [rdi],cl
   140046d89:	fs (bad) 
   140046d8b:	add    BYTE PTR [rdi],cl
   140046d8d:	xor    al,0x6
   140046d8f:	add    BYTE PTR [rdi],cl
   140046d91:	xor    cl,BYTE PTR [rbx]
   140046d93:	jo     0x140046db6
   140046d95:	add    BYTE PTR [rax],al
   140046d97:	add    al,dl
   140046d99:	jns    0x140046d9b
   140046d9b:	add    BYTE PTR [rbp+0x7a],dh
   140046d9e:	add    BYTE PTR [rax],al
   140046da0:	test   BYTE PTR [rbp+0x4],ch
   140046da3:	add    BYTE PTR [rcx],bl
   140046da5:	(bad)  
   140046da6:	(bad)  
   140046da7:	add    BYTE PTR [rdi],bl
   140046da9:	xor    al,0xd
   140046dab:	add    BYTE PTR [rcx],dl
   140046dad:	push   rdx
   140046dae:	or     eax,0xa700be0
   140046db3:	(bad)  
   140046db4:	ss push rsi
   140046db6:	add    DWORD PTR [rax],eax
   140046db8:	xor    BYTE PTR [rip+0x210004],dl        # 0x140256dc2
   140046dbe:	add    BYTE PTR [rax],al
   140046dc0:	rex jnp 0x140046dc3
   140046dc3:	add    BYTE PTR [rdi+0x7c],dl
   140046dc6:	add    BYTE PTR [rax],al
   140046dc8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046dc9:	ins    DWORD PTR es:[rdi],dx
   140046dca:	add    al,0x0
   140046dcc:	(bad)  
   140046dcd:	(bad)  
   140046dce:	(bad)  
   140046dcf:	inc    DWORD PTR [rax]
   140046dd1:	add    BYTE PTR [rax],al
   140046dd3:	add    bh,bh
   140046dd5:	(bad)  
   140046dd6:	(bad)  
   140046dd7:	inc    DWORD PTR [rax]
	...
   140046de1:	add    BYTE PTR [rax],al
   140046de3:	add    BYTE PTR [rcx],al
   140046de5:	add    BYTE PTR [rax],al
   140046de7:	add    BYTE PTR [rcx],al
   140046de9:	add    BYTE PTR [rax],al
   140046deb:	add    al,dh
   140046ded:	ins    DWORD PTR es:[rdi],dx
   140046dee:	add    al,0x0
   140046df0:	add    BYTE PTR [rax],al
	...
   140046dfb:	add    BYTE PTR [rax+0x61],dl
   140046dfe:	add    DWORD PTR [rax],eax
   140046e00:	cmp    BYTE PTR [rax],al
   140046e02:	add    BYTE PTR [rax],al
   140046e04:	rex jnp 0x140046e07
   140046e07:	add    bh,bh
   140046e09:	(bad)  
   140046e0a:	(bad)  
   140046e0b:	inc    DWORD PTR [rsi+0x7b]
   140046e11:	add    BYTE PTR [rax],al
   140046e13:	add    BYTE PTR [rbx-0xffff85],ch
   140046e19:	(bad)  
   140046e1a:	(bad)  
   140046e1b:	call   QWORD PTR [rax+0x61]
   140046e1e:	add    DWORD PTR [rax],eax
   140046e20:	add    BYTE PTR [rax],al
   140046e22:	add    BYTE PTR [rax],al
   140046e24:	or     bl,bh
   140046e26:	add    DWORD PTR [rax],eax
   140046e28:	(bad)  
   140046e29:	(bad)  
   140046e2a:	(bad)  
   140046e2b:	call   FWORD PTR [rcx]
   140046e2d:	or     al,BYTE PTR [rdx]
   140046e2f:	add    BYTE PTR [rdx],cl
   140046e31:	xor    al,BYTE PTR [rsi]
   140046e33:	push   rax
   140046e34:	ss push rsi
   140046e36:	add    DWORD PTR [rax],eax
   140046e38:	xor    BYTE PTR [rip+0x8010004],dl        # 0x148056e42
   140046e3e:	add    al,BYTE PTR [rax]
   140046e40:	or     BYTE PTR [rdx+0x4],dh
   140046e43:	jo     0x140046e66
   140046e45:	add    al,0x2
   140046e47:	add    BYTE PTR [rsp+rsi*1],al
   140046e4a:	or     eax,DWORD PTR [rax]
   140046e4c:	(bad)  
   140046e4d:	jl     0x140046e4f
   140046e4f:	add    BYTE PTR [rax+0x7c],bh
   140046e52:	add    BYTE PTR [rax],al
   140046e54:	cmp    al,0x6e
   140046e56:	add    al,0x0
   140046e58:	and    DWORD PTR [rdi],ebx
   140046e5a:	or     al,0x0
   140046e5c:	(bad)  
   140046e5d:	hlt    
   140046e5e:	add    al,0x0
   140046e60:	sbb    esp,esp
   140046e62:	add    eax,0x6d41700
   140046e67:	add    BYTE PTR [rbx],dl
   140046e69:	(bad)  
   140046e6a:	(bad)  
   140046e6b:	add    BYTE PTR [rdi],cl
   140046e6d:	fs or  eax,0xc540400
   140046e73:	add    BYTE PTR [rax+0x7c],bh
   140046e76:	add    BYTE PTR [rax],al
   140046e78:	mov    edi,DWORD PTR [rax+rax*1+0x0]
   140046e7c:	rex.R outs dx,BYTE PTR ds:[rsi]
   140046e7e:	add    al,0x0
   140046e80:	and    DWORD PTR [rax],eax
   140046e82:	add    BYTE PTR [rax],al
   140046e84:	js     0x140046f02
   140046e86:	add    BYTE PTR [rax],al
   140046e88:	mov    edi,DWORD PTR [rax+rax*1+0x0]
   140046e8c:	rex.R outs dx,BYTE PTR ds:[rsi]
   140046e8e:	add    al,0x0
   140046e90:	and    DWORD PTR [rax],eax
   140046e92:	add    BYTE PTR [rax],al
   140046e94:	(bad)  
   140046e95:	jl     0x140046e97
   140046e97:	add    BYTE PTR [rax+0x7c],bh
   140046e9a:	add    BYTE PTR [rax],al
   140046e9c:	cmp    al,0x6e
   140046e9e:	add    al,0x0
   140046ea0:	and    DWORD PTR [rax],eax
   140046ea2:	(bad)  
   140046ea3:	add    BYTE PTR [rax],al
   140046ea5:	hlt    
   140046ea6:	add    al,0x0
   140046ea8:	add    ah,ah
   140046eaa:	add    eax,0x6d40000
   140046eaf:	add    BYTE PTR [rax],al
   140046eb1:	(bad)  
   140046eb2:	(bad)  
   140046eb3:	add    BYTE PTR [rax],al
   140046eb5:	fs or  eax,0xc540000
   140046ebb:	add    BYTE PTR [rax],al
   140046ebd:	xor    al,0xb
   140046ebf:	add    BYTE PTR [rax+0x7c],ah
   140046ec2:	add    BYTE PTR [rax],al
   140046ec4:	js     0x140046f42
   140046ec6:	add    BYTE PTR [rax],al
   140046ec8:	cmp    al,0x6e
   140046eca:	add    al,0x0
   140046ecc:	and    DWORD PTR [rax],eax
   140046ece:	(bad)  
   140046ecf:	add    BYTE PTR [rax],al
   140046ed1:	hlt    
   140046ed2:	add    al,0x0
   140046ed4:	add    ah,ah
   140046ed6:	add    eax,0x6d40000
   140046edb:	add    BYTE PTR [rax],al
   140046edd:	(bad)  
   140046ede:	(bad)  
   140046edf:	add    BYTE PTR [rax],al
   140046ee1:	fs or  eax,0xc540000
   140046ee7:	add    BYTE PTR [rax],al
   140046ee9:	xor    al,0xb
   140046eeb:	add    BYTE PTR [rax+0x7c],ah
   140046eee:	add    BYTE PTR [rax],al
   140046ef0:	js     0x140046f6e
   140046ef2:	add    BYTE PTR [rax],al
   140046ef4:	cmp    al,0x6e
   140046ef6:	add    al,0x0
   140046ef8:	and    DWORD PTR [rax],eax
   140046efa:	add    BYTE PTR [rax],al
   140046efc:	(bad)  
   140046efd:	jl     0x140046eff
   140046eff:	add    BYTE PTR [rax+0x7c],bh
   140046f02:	add    BYTE PTR [rax],al
   140046f04:	cmp    al,0x6e
   140046f06:	add    al,0x0
   140046f08:	add    DWORD PTR [rdi],ecx
   140046f0a:	(bad)  
   140046f0b:	add    BYTE PTR [rdi],cl
   140046f0d:	fs (bad) 
   140046f0f:	add    BYTE PTR [rdi],cl
   140046f11:	xor    al,0x6
   140046f13:	add    BYTE PTR [rdi],cl
   140046f15:	xor    cl,BYTE PTR [rbx]
   140046f17:	jo     0x140046f3a
   140046f19:	add    BYTE PTR [rax],al
   140046f1b:	add    al,ah
   140046f1d:	jge    0x140046f1f
   140046f1f:	add    BYTE PTR [rip+0x800007e],ah        # 0x148046fa3
   140046f25:	outs   dx,DWORD PTR ds:[rsi]
   140046f26:	add    al,0x0
   140046f28:	add    DWORD PTR [rsi],eax
   140046f2a:	add    al,BYTE PTR [rax]
   140046f2c:	(bad)  
   140046f2d:	xor    al,BYTE PTR [rdx]
   140046f2f:	jo     0x140046f52
   140046f31:	add    eax,0x34050002
   140046f36:	(bad)  
   140046f37:	add    BYTE PTR [rax+0x7e],dl
   140046f3a:	add    BYTE PTR [rax],al
   140046f3c:	jae    0x140046fbc
   140046f3e:	add    BYTE PTR [rax],al
   140046f40:	sub    BYTE PTR [rdi+0x4],ch
   140046f43:	add    BYTE PTR [rcx],ah
   140046f45:	adc    eax,DWORD PTR [rsi]
   140046f47:	add    BYTE PTR [rbx],dl
   140046f49:	in     al,0x9
   140046f4b:	add    BYTE PTR [rdx],cl
   140046f4d:	or     BYTE PTR fs:[rax],al
   140046f50:	add    eax,0x73000754
   140046f55:	jle    0x140046f57
   140046f57:	add    BYTE PTR [rsi+rdi*2+0x6f300000],dh
   140046f5e:	add    al,0x0
   140046f60:	and    DWORD PTR [rax],eax
   140046f62:	add    BYTE PTR [rax],al
   140046f64:	jae    0x140046fe4
   140046f66:	add    BYTE PTR [rax],al
   140046f68:	mov    ah,0x7e
   140046f6a:	add    BYTE PTR [rax],al
   140046f6c:	xor    BYTE PTR [rdi+0x4],ch
   140046f6f:	add    BYTE PTR [rcx],ah
   140046f71:	add    BYTE PTR [rax],al
   140046f73:	add    BYTE PTR [rax+0x7e],dl
   140046f76:	add    BYTE PTR [rax],al
   140046f78:	jae    0x140046ff8
   140046f7a:	add    BYTE PTR [rax],al
   140046f7c:	sub    BYTE PTR [rdi+0x4],ch
   140046f7f:	add    BYTE PTR [rcx],ah
   140046f81:	add    BYTE PTR [rdx],al
   140046f83:	add    BYTE PTR [rax],al
   140046f85:	xor    al,0x6
   140046f87:	add    BYTE PTR [rax+0x7e],dl
   140046f8a:	add    BYTE PTR [rax],al
   140046f8c:	jae    0x14004700c
   140046f8e:	add    BYTE PTR [rax],al
   140046f90:	sub    BYTE PTR [rdi+0x4],ch
   140046f93:	add    BYTE PTR [rcx],ah
   140046f95:	add    BYTE PTR [rax],cl
   140046f97:	add    BYTE PTR [rax],al
   140046f99:	in     al,0x9
   140046f9b:	add    BYTE PTR [rax],al
   140046f9d:	or     BYTE PTR fs:[rax],al
   140046fa0:	add    BYTE PTR [rdi+rax*1+0x0],dl
   140046fa4:	add    BYTE PTR [rsi+rax*1],dh
   140046fa7:	add    BYTE PTR [rax+0x7e],dl
   140046faa:	add    BYTE PTR [rax],al
   140046fac:	jae    0x14004702c
   140046fae:	add    BYTE PTR [rax],al
   140046fb0:	sub    BYTE PTR [rdi+0x4],ch
   140046fb3:	add    BYTE PTR [rcx],al
   140046fb5:	or     al,BYTE PTR [rax+rax*1]
   140046fb8:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   140046fbc:	or     dh,BYTE PTR [rdx]
   140046fbe:	(bad)  
   140046fbf:	jo     0x140046fe2
   140046fc1:	add    eax,0x34050002
   140046fc6:	(bad)  
   140046fc7:	add    BYTE PTR [rax+0x7f],al
   140046fca:	add    BYTE PTR [rax],al
   140046fcc:	(bad)  
   140046fcd:	jg     0x140046fcf
   140046fcf:	add    BYTE PTR [rdi+rbp*2+0x210004],dh
   140046fd6:	add    BYTE PTR [rax],al
   140046fd8:	rex jg 0x140046fdb
   140046fdb:	add    BYTE PTR [rdi-0x4bffff81],cl
   140046fe1:	outs   dx,DWORD PTR ds:[rsi]
   140046fe2:	add    al,0x0
   140046fe4:	and    DWORD PTR [rax],eax
   140046fe6:	add    al,BYTE PTR [rax]
   140046fe8:	add    BYTE PTR [rsi+rax*1],dh
   140046feb:	add    BYTE PTR [rax+0x7f],al
   140046fee:	add    BYTE PTR [rax],al
   140046ff0:	(bad)  
   140046ff1:	jg     0x140046ff3
   140046ff3:	add    BYTE PTR [rdi+rbp*2+0x210004],dh
   140046ffa:	add    BYTE PTR [rax],al
   140046ffc:	rex jg 0x140046fff
   140046fff:	add    BYTE PTR [rdi-0x4bffff81],cl
   140047005:	outs   dx,DWORD PTR ds:[rsi]
   140047006:	add    al,0x0
   140047008:	and    DWORD PTR [rax],eax
   14004700a:	add    al,BYTE PTR [rax]
   14004700c:	add    BYTE PTR [rsi+rax*1],dh
   14004700f:	add    al,bl
   140047011:	sti    
   140047012:	add    DWORD PTR [rax],eax
   140047014:	(bad)  
   140047015:	sti    
   140047016:	add    DWORD PTR [rax],eax
   140047018:	clc    
   140047019:	outs   dx,DWORD PTR ds:[rsi]
   14004701a:	add    al,0x0
   14004701c:	sbb    DWORD PTR [rsi],edi
   14004701e:	or     eax,0x50742d00
   140047023:	add    ebp,DWORD PTR [rip+0x2d034f64]        # 0x16d07bf8d
   140047029:	xor    al,0x4e
   14004702b:	add    ebp,DWORD PTR [rip+0x18034801]        # 0x15807b832
   140047031:	lock (bad) 
   140047033:	loopne 0x140047049
   140047035:	rcl    BYTE PTR [rdx],1
   140047037:	rcl    BYTE PTR [rax],0x50
   14004703a:	add    BYTE PTR [rax],al
   14004703c:	mov    eax,0x3000014a
   140047041:	sbb    al,BYTE PTR [rax]
   140047043:	add    BYTE PTR [rcx],ah
   140047045:	add    BYTE PTR [rax],al
   140047047:	add    BYTE PTR [rax-0x5ffff80],ah
   14004704d:	mov    bh,0x0
   14004704f:	add    BYTE PTR [rax+rsi*2],bl
   140047052:	add    al,0x0
   140047054:	sbb    DWORD PTR [rip+0x3417000a],esp        # 0x1741b7064
   14004705a:	adc    al,0x0
   14004705c:	(bad)  
   14004705d:	mov    dl,0x10
   14004705f:	lock (bad) 
   140047061:	loopne 0x14004706f
   140047063:	ror    BYTE PTR [rdx],1
   140047065:	ror    BYTE PTR [rax],0x70
   140047068:	(bad)  
   140047069:	(bad)  
   14004706a:	(bad)  
   14004706b:	push   rax
   14004706c:	mov    eax,0x5000014a
   140047071:	add    BYTE PTR [rax],al
   140047073:	add    BYTE PTR [rcx],ah
   140047075:	add    BYTE PTR [rax],al
   140047077:	add    BYTE PTR [rax],al
   140047079:	mov    eax,0xba350000
   14004707e:	add    BYTE PTR [rax],al
   140047080:	push   rsp
   140047081:	jo     0x140047087
   140047083:	add    BYTE PTR [rcx],al
   140047085:	adc    al,0x8
   140047087:	add    BYTE PTR [rsp+riz*2],dl
   14004708a:	or     BYTE PTR [rax],al
   14004708c:	adc    al,0x54
   14004708e:	(bad)  
   14004708f:	add    BYTE PTR [rsp+rsi*1],dl
   140047092:	(bad)  
   140047093:	add    BYTE PTR [rdx+rsi*1],dl
   140047096:	adc    BYTE PTR [rax+0x21],dh
   140047099:	add    BYTE PTR [rax],al
   14004709b:	add    BYTE PTR [rdx+rdi*4],bh
   14004709e:	add    BYTE PTR [rax],al
   1400470a0:	mov    esi,0x840000ba
   1400470a5:	jo     0x1400470ab
   1400470a7:	add    BYTE PTR [rcx],al
   1400470a9:	add    al,0x1
   1400470ab:	add    BYTE PTR [rdx+rax*2],al
   1400470ae:	add    BYTE PTR [rax],al
   1400470b0:	and    DWORD PTR [rax],eax
   1400470b2:	add    BYTE PTR [rax],al
   1400470b4:	sub    al,0xbc
   1400470b6:	add    BYTE PTR [rax],al
   1400470b8:	mov    bh,BYTE PTR [rax+rax*1+0x470a800]
   1400470bf:	add    BYTE PTR [rcx],al
   1400470c1:	clts   
   1400470c3:	add    BYTE PTR [rdi],cl
   1400470c5:	fs (bad) 
   1400470c7:	add    BYTE PTR [rdi],cl
   1400470c9:	xor    al,0x6
   1400470cb:	add    BYTE PTR [rdi],cl
   1400470cd:	xor    cl,BYTE PTR [rbx]
   1400470cf:	jo     0x1400470f2
   1400470d1:	add    BYTE PTR [rax],al
   1400470d3:	add    BYTE PTR [rax-0x2ffff44],dl
   1400470d9:	mov    esp,0x70c00000
   1400470de:	add    al,0x0
   1400470e0:	add    DWORD PTR [rsi],eax
   1400470e2:	add    al,BYTE PTR [rax]
   1400470e4:	(bad)  
   1400470e5:	xor    al,BYTE PTR [rdx]
   1400470e7:	jo     0x14004710a
   1400470e9:	add    BYTE PTR [rax],al
   1400470eb:	add    BYTE PTR [rdi*4-0x422c0000],al
   1400470f2:	add    BYTE PTR [rax],al
   1400470f4:	loopne 0x140047166
   1400470f6:	add    al,0x0
   1400470f8:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4197106
   1400470fe:	or     BYTE PTR [rax],al
   140047100:	adc    eax,0x15000764
   140047105:	xor    al,0x6
   140047107:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e4823f
   14004710d:	add    BYTE PTR [rax],al
   14004710f:	add    ah,bl
   140047111:	mov    ebp,0xbe5e0000
   140047116:	add    BYTE PTR [rax],al
   140047118:	clc    
   140047119:	jo     0x14004711f
   14004711b:	add    BYTE PTR [rcx],al
   14004711d:	clts   
   14004711f:	add    BYTE PTR [rdi],cl
   140047121:	fs (bad) 
   140047123:	add    BYTE PTR [rdi],cl
   140047125:	xor    al,0x6
   140047127:	add    BYTE PTR [rdi],cl
   140047129:	xor    cl,BYTE PTR [rbx]
   14004712b:	jo     0x14004712e
   14004712d:	add    al,0x1
   14004712f:	add    BYTE PTR [rdx+rax*2],al
   140047132:	add    BYTE PTR [rax],al
   140047134:	and    DWORD PTR [rax],eax
   140047136:	add    BYTE PTR [rax],al
   140047138:	hlt    
   140047139:	mov    edi,0xc0280000
   14004713e:	add    BYTE PTR [rax],al
   140047140:	sub    al,0x71
   140047142:	add    al,0x0
   140047144:	sbb    DWORD PTR [rsi],esp
   140047146:	or     BYTE PTR [rax],al
   140047148:	(bad)  
   140047149:	push   rdx
   14004714a:	sbb    dh,al
   14004714c:	sbb    al,ah
   14004714e:	(bad)  
   14004714f:	rcl    BYTE PTR [rax+rax*8],1
   140047152:	adc    dh,BYTE PTR [rax+0x11]
   140047155:	(bad)  
   140047156:	adc    BYTE PTR [rax],dh
   140047158:	ss push rsi
   14004715a:	add    DWORD PTR [rax],eax
   14004715c:	rol    BYTE PTR [rcx],1
   14004715e:	add    al,0x0
   140047160:	and    DWORD PTR [rax],eax
   140047162:	add    BYTE PTR [rax],al
   140047164:	xor    al,al
   140047166:	add    BYTE PTR [rax],al
   140047168:	(bad)  
   140047169:	rol    DWORD PTR [rax],0x0
   14004716c:	rex.R jno 0x140047173
   14004716f:	add    bh,bh
   140047171:	(bad)  
   140047172:	(bad)  
   140047173:	inc    DWORD PTR [rax]
   140047175:	add    BYTE PTR [rax],al
   140047177:	add    bh,bh
   140047179:	(bad)  
   14004717a:	(bad)  
   14004717b:	inc    DWORD PTR [rax]
	...
   140047185:	add    BYTE PTR [rax],al
   140047187:	add    BYTE PTR [rcx],al
   140047189:	add    BYTE PTR [rax],al
   14004718b:	add    BYTE PTR [rcx],al
   14004718d:	add    BYTE PTR [rax],al
   14004718f:	add    BYTE PTR [rcx+rsi*2+0x400004],dl
	...
   14004719e:	add    BYTE PTR [rax],al
   1400471a0:	jno    0x140047203
   1400471a2:	add    DWORD PTR [rax],eax
   1400471a4:	cmp    BYTE PTR [rax],al
   1400471a6:	add    BYTE PTR [rax],al
   1400471a8:	xor    al,al
   1400471aa:	add    BYTE PTR [rax],al
   1400471ac:	(bad)  
   1400471ad:	(bad)  
   1400471ae:	(bad)  
   1400471af:	inc    DWORD PTR [rax+0xc0]
   1400471b5:	add    BYTE PTR [rax],al
   1400471b7:	add    BYTE PTR [rcx-0xffff40],bh
   1400471bd:	(bad)  
   1400471be:	(bad)  
   1400471bf:	push   QWORD PTR [rcx+0x61]
   1400471c2:	add    DWORD PTR [rax],eax
   1400471c4:	add    BYTE PTR [rax],al
   1400471c6:	add    BYTE PTR [rax],al
   1400471c8:	xor    BYTE PTR [rax-0xfffe],al
   1400471ce:	(bad)  
   1400471cf:	(bad)  
   1400471d0:	cmp    al,BYTE PTR [rax+0x2]
   1400471d6:	add    BYTE PTR [rax],al
   1400471d8:	rex.X add BYTE PTR [rdx],0x0
   1400471dc:	(bad)  
   1400471dd:	(bad)  
   1400471de:	(bad)  
   1400471df:	call   FWORD PTR [rcx]
   1400471e1:	or     al,BYTE PTR [rdx]
   1400471e3:	add    BYTE PTR [rdx],cl
   1400471e5:	xor    al,BYTE PTR [rsi]
   1400471e7:	push   rax
   1400471e8:	ss push rsi
   1400471ea:	add    DWORD PTR [rax],eax
   1400471ec:	rol    BYTE PTR [rcx],1
   1400471ee:	add    al,0x0
   1400471f0:	or     DWORD PTR [rcx+rax*1],eax
   1400471f3:	add    BYTE PTR [rdx+riz*2],al
   1400471f6:	add    BYTE PTR [rax],al
   1400471f8:	xchg   esi,eax
   1400471f9:	add    QWORD PTR [r8],rax
   1400471fc:	add    DWORD PTR [rax],eax
   1400471fe:	add    BYTE PTR [rax],al
   140047200:	xor    al,0xc1
   140047202:	add    BYTE PTR [rax],al
   140047204:	rex.X rol DWORD PTR [rax],0x0
   140047208:	xchg   edx,eax
   140047209:	(bad)  
   14004720a:	add    DWORD PTR [rax],eax
   14004720c:	rex.X rol DWORD PTR [rax],0x0
   140047210:	add    DWORD PTR [rsi],eax
   140047212:	add    al,BYTE PTR [rax]
   140047214:	(bad)  
   140047215:	xor    al,BYTE PTR [rdx]
   140047217:	push   rax
   140047218:	add    DWORD PTR [rsi],ecx
   14004721a:	(bad)  
   14004721b:	add    BYTE PTR [rsi],cl
   14004721d:	xor    al,0xa
   14004721f:	add    BYTE PTR [rsi],cl
   140047221:	xor    cl,BYTE PTR [rdx]
   140047223:	lock or al,ah
   140047226:	(bad)  
   140047227:	(bad)  
   140047228:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4097230
   14004722e:	or     DWORD PTR [rax],eax
   140047230:	(bad)  
   140047231:	ret    0x0
   140047234:	movabs al,ds:0x21000472180000c2
   14004723d:	add    eax,0x54050002
   140047242:	or     BYTE PTR [rax],al
   140047244:	movabs al,ds:0x280000c2af0000c2
   14004724d:	jb     0x140047253
   14004724f:	add    BYTE PTR [rcx],ah
   140047251:	add    BYTE PTR [rax],al
   140047253:	add    BYTE PTR [rax-0x50ffff3e],ah
   140047259:	ret    0x0
   14004725c:	sub    BYTE PTR [rdx+0x4],dh
   14004725f:	add    BYTE PTR [rcx],ah
   140047261:	add    BYTE PTR [rax],al
   140047263:	add    BYTE PTR [rax-0x3e],ah
   140047266:	add    BYTE PTR [rax],al
   140047268:	movabs al,ds:0x21000472180000c2
   140047271:	add    BYTE PTR [rax+rax*1],al
   140047274:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   140047278:	add    BYTE PTR [rax+rcx*1+0x0],dl
   14004727c:	(bad)  
   14004727d:	ret    0x0
   140047280:	movabs al,ds:0x21000472180000c2
   140047289:	add    BYTE PTR [rdx],al
   14004728b:	add    BYTE PTR [rax],al
   14004728d:	je     0x140047298
   14004728f:	add    BYTE PTR [rax-0x3e],ah
   140047292:	add    BYTE PTR [rax],al
   140047294:	movabs al,ds:0x21000472180000c2
   14004729d:	add    BYTE PTR [rax+rax*1],al
   1400472a0:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   1400472a4:	add    BYTE PTR [rax+rcx*1+0x0],dl
   1400472a8:	(bad)  
   1400472a9:	ret    0x0
   1400472ac:	movabs al,ds:0x21000472180000c2
   1400472b5:	add    BYTE PTR [rdx],al
   1400472b7:	add    BYTE PTR [rax],al
   1400472b9:	je     0x1400472c4
   1400472bb:	add    BYTE PTR [rax-0x3e],ah
   1400472be:	add    BYTE PTR [rax],al
   1400472c0:	movabs al,ds:0x21000472180000c2
   1400472c9:	add    BYTE PTR [rax+rax*1],al
   1400472cc:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   1400472d0:	add    BYTE PTR [rax+rcx*1+0x0],dl
   1400472d4:	(bad)  
   1400472d5:	ret    0x0
   1400472d8:	movabs al,ds:0x21000472180000c2
   1400472e1:	add    BYTE PTR [rdx],al
   1400472e3:	add    BYTE PTR [rax],al
   1400472e5:	je     0x1400472f0
   1400472e7:	add    BYTE PTR [rax-0x3e],ah
   1400472ea:	add    BYTE PTR [rax],al
   1400472ec:	movabs al,ds:0x21000472180000c2
   1400472f5:	add    BYTE PTR [rax+rax*1],al
   1400472f8:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   1400472fc:	add    BYTE PTR [rax+rcx*1+0x0],dl
   140047300:	(bad)  
   140047301:	ret    0x0
   140047304:	movabs al,ds:0x21000472180000c2
   14004730d:	add    BYTE PTR [rdx],al
   14004730f:	add    BYTE PTR [rax],al
   140047311:	je     0x14004731c
   140047313:	add    BYTE PTR [rax-0x3e],ah
   140047316:	add    BYTE PTR [rax],al
   140047318:	movabs al,ds:0x21000472180000c2
   140047321:	add    BYTE PTR [rax+rax*1],al
   140047324:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   140047328:	add    BYTE PTR [rax+rcx*1+0x0],dl
   14004732c:	(bad)  
   14004732d:	ret    0x0
   140047330:	movabs al,ds:0x21000472180000c2
   140047339:	add    BYTE PTR [rax],al
   14004733b:	add    BYTE PTR [rax-0x3e],ah
   14004733e:	add    BYTE PTR [rax],al
   140047340:	movabs al,ds:0x21000472180000c2
   140047349:	add    BYTE PTR [rax+rax*1],al
   14004734c:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   140047350:	add    BYTE PTR [rax+rcx*1+0x0],dl
   140047354:	(bad)  
   140047355:	add    BYTE PTR [rdx],0x0
   140047358:	mov    WORD PTR [rax+0x73380002],es
   14004735e:	add    al,0x0
   140047360:	and    DWORD PTR [rax],eax
   140047362:	add    BYTE PTR [rax],al
   140047364:	(bad)  
   140047365:	add    BYTE PTR [rdx],0x0
   140047368:	mov    WORD PTR [rax+0x73380002],es
   14004736e:	add    al,0x0
   140047370:	adc    DWORD PTR [rcx],ebx
   140047372:	or     BYTE PTR [rax],al
   140047374:	sbb    DWORD PTR [rdx],esi
   140047376:	adc    eax,0x11e013f0
   14004737b:	ror    BYTE PTR [rdi],1
   14004737d:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b647ff4
   140047384:	xchg   esi,eax
   140047385:	add    QWORD PTR [r8],rax
   140047388:	add    DWORD PTR [rax],eax
   14004738a:	add    BYTE PTR [rax],al
   14004738c:	scas   al,BYTE PTR es:[rdi]
   14004738d:	(bad)
   140047390:	pop    rdi
   140047391:	mov    BYTE PTR [rax],0x0
   140047394:	mov    eax,0x161
   140047399:	add    BYTE PTR [rax],al
   14004739b:	add    BYTE PTR [rcx],ah
   14004739d:	add    BYTE PTR [rax],al
   14004739f:	add    BYTE PTR [rax-0x3b],dl
   1400473a2:	add    BYTE PTR [rax],al
   1400473a4:	stos   BYTE PTR es:[rdi],al
   1400473a5:	mov    BYTE PTR [rax],0x0
   1400473a8:	jo     0x14004741d
   1400473aa:	add    al,0x0
   1400473ac:	add    DWORD PTR [rsi],eax
   1400473ae:	add    al,BYTE PTR [rax]
   1400473b0:	(bad)  
   1400473b1:	xor    al,BYTE PTR [rdx]
   1400473b3:	push   rax
   1400473b4:	add    DWORD PTR [rdi],ecx
   1400473b6:	(bad)  
   1400473b7:	add    BYTE PTR [rdi],cl
   1400473b9:	fs (bad) 
   1400473bb:	add    BYTE PTR [rdi],cl
   1400473bd:	xor    al,0x6
   1400473bf:	add    BYTE PTR [rdi],cl
   1400473c1:	xor    cl,BYTE PTR [rbx]
   1400473c3:	jo     0x1400473e6
   1400473c5:	add    BYTE PTR [rax],al
   1400473c7:	add    BYTE PTR [rax+0x300000c6],dh
   1400473cd:	mov    DWORD PTR [rax],0x473b400
   1400473d3:	add    BYTE PTR [rcx],al
   1400473d5:	clts   
   1400473d7:	add    BYTE PTR [rdi],cl
   1400473d9:	fs (bad) 
   1400473db:	add    BYTE PTR [rdi],cl
   1400473dd:	xor    al,0x6
   1400473df:	add    BYTE PTR [rdi],cl
   1400473e1:	xor    cl,BYTE PTR [rbx]
   1400473e3:	jo     0x140047406
   1400473e5:	add    BYTE PTR [rax],al
   1400473e7:	add    al,ah
   1400473e9:	mov    DWORD PTR [rax],0xc83400
   1400473ef:	add    ah,dl
   1400473f1:	jae    0x1400473f7
   1400473f3:	add    BYTE PTR [rcx],al
   1400473f5:	adc    eax,0x74150008
   1400473fa:	or     BYTE PTR [rax],al
   1400473fc:	adc    eax,0x15000764
   140047401:	xor    al,0x6
   140047403:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e4853b
   140047409:	add    BYTE PTR [rax],al
   14004740b:	add    BYTE PTR [rax+rcx*8+0x0],dl
   14004740f:	add    BYTE PTR [rax-0xbffff38],dh
   140047415:	jae    0x14004741b
   140047417:	add    BYTE PTR [rcx],al
   140047419:	(bad)  
   14004741a:	add    al,BYTE PTR [rax]
   14004741c:	(bad)  
   14004741d:	jb     0x140047421
   14004741f:	xor    BYTE PTR [rcx],ah
   140047421:	add    BYTE PTR [rax],al
   140047423:	add    BYTE PTR [rax-0x31ffff38],bh
   140047429:	leave  
   14004742a:	add    BYTE PTR [rax],al
   14004742c:	sbb    BYTE PTR [rsp+rax*1+0x0],dh
   140047430:	add    DWORD PTR [rdx],ecx
   140047432:	add    al,0x0
   140047434:	or     dh,BYTE PTR [rsi+rax*1]
   140047437:	add    BYTE PTR [rdx],cl
   140047439:	xor    al,BYTE PTR [rsi]
   14004743b:	jo     0x14004745e
   14004743d:	add    BYTE PTR [rax],al
   14004743f:	add    ah,al
   140047441:	retf   0x0
   140047444:	add    al,0xcb
   140047446:	add    BYTE PTR [rax],al
   140047448:	xor    BYTE PTR [rsp+rax*1+0x0],dh
   14004744c:	add    DWORD PTR [rdx],ecx
   14004744e:	add    al,0x0
   140047450:	or     dh,BYTE PTR [rsi+rax*1]
   140047453:	add    BYTE PTR [rdx],cl
   140047455:	xor    al,BYTE PTR [rsi]
   140047457:	jo     0x14004747a
   140047459:	add    BYTE PTR [rax],al
   14004745b:	add    BYTE PTR [rbx+rcx*8],cl
   14004745e:	add    BYTE PTR [rax],al
   140047460:	rex.W retf 
   140047462:	add    BYTE PTR [rax],al
   140047464:	rex.WR je 0x14004746b
   140047467:	add    BYTE PTR [rcx],al
   140047469:	or     al,BYTE PTR [rax+rax*1]
   14004746c:	or     dh,BYTE PTR [rax+rcx*1]
   14004746f:	add    BYTE PTR [rdx],cl
   140047471:	push   rdx
   140047472:	(bad)  
   140047473:	jo     0x140047486
   140047475:	sbb    al,0x6
   140047477:	add    BYTE PTR [rsp+riz*2],bl
   14004747a:	or     al,BYTE PTR [rax]
   14004747c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004747f:	add    BYTE PTR [rdx+rdx*2],cl
   140047482:	or     BYTE PTR [rax+0x36],dh
   140047485:	push   rsi
   140047486:	add    DWORD PTR [rax],eax
   140047488:	adc    BYTE PTR [rbx],al
   14004748a:	add    al,0x0
   14004748c:	and    DWORD PTR [rax],eax
   14004748e:	add    BYTE PTR [rax],al
   140047490:	(bad)  
   140047491:	retf   
   140047492:	add    BYTE PTR [rax],al
   140047494:	jb     0x140047462
   140047496:	add    BYTE PTR [rax],al
   140047498:	je     0x14004750e
   14004749a:	add    al,0x0
   14004749c:	(bad)  
   14004749d:	(bad)  
   14004749e:	(bad)  
   14004749f:	(bad)  
   1400474a0:	fsub   QWORD PTR [rcx+0x1]
   1400474a3:	add    BYTE PTR [rax],al
   1400474a5:	add    BYTE PTR [rax],al
   1400474a7:	add    ah,ch
   1400474a9:	(bad)  
   1400474aa:	add    DWORD PTR [rax],eax
   1400474ac:	(bad)  
   1400474ad:	retf   
   1400474ae:	add    BYTE PTR [rax],al
   1400474b0:	(bad)  
   1400474b1:	(bad)  
   1400474b2:	(bad)  
   1400474b3:	jmp    FWORD PTR [rsp+rcx*8]
   1400474b6:	add    BYTE PTR [rax],al
   1400474b8:	add    DWORD PTR [rax],eax
   1400474ba:	add    BYTE PTR [rax],al
   1400474bc:	(bad)  
   1400474bd:	int3   
   1400474be:	add    BYTE PTR [rax],al
   1400474c0:	add    BYTE PTR [rax],al
   1400474c2:	add    BYTE PTR [rax],al
   1400474c4:	rex.WR int3 
   1400474c6:	add    BYTE PTR [rax],al
   1400474c8:	(bad)  
   1400474c9:	(bad)  
   1400474ca:	(bad)  
   1400474cb:	jmp    FWORD PTR [rcx-0x34]
   1400474ce:	add    BYTE PTR [rax],al
   1400474d0:	add    DWORD PTR [rax],eax
   1400474d2:	add    BYTE PTR [rax],al
   1400474d4:	add    al,0x82
   1400474d6:	add    al,BYTE PTR [rax]
   1400474d8:	add    BYTE PTR [rax],al
   1400474da:	add    BYTE PTR [rax],al
   1400474dc:	(bad)  
   1400474dd:	(bad)  
   1400474de:	add    al,BYTE PTR [rax]
   1400474e0:	(bad)  
   1400474e1:	(bad)  
   1400474e2:	(bad)  
   1400474e3:	inc    DWORD PTR [rcx]
   1400474e5:	sbb    DWORD PTR [rdx],ecx
   1400474e7:	add    BYTE PTR [rcx],bl
   1400474e9:	je     0x1400474f4
   1400474eb:	add    BYTE PTR [rcx],bl
   1400474ed:	or     BYTE PTR fs:[rax],al
   1400474f0:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400474f4:	sbb    DWORD PTR [rsi+rax*1],esi
   1400474f7:	add    BYTE PTR [rcx],bl
   1400474f9:	xor    dl,BYTE PTR [rip+0x21e0]        # 0x1400496df
   1400474ff:	add    BYTE PTR [rax+0x670000cc],al
   140047505:	int    0x0
   140047507:	add    ah,ah
   140047509:	je     0x14004750f
   14004750b:	add    BYTE PTR [rcx],bl
   14004750d:	sbb    BYTE PTR [rax+rax*1],al
   140047510:	sbb    BYTE PTR [rbx+rcx*1],dh
   140047513:	add    BYTE PTR [rdx],cl
   140047515:	push   rdx
   140047516:	(bad)  
   140047517:	jo     0x14004754f
   140047519:	push   rsi
   14004751a:	add    DWORD PTR [rax],eax
   14004751c:	js     0x14004751d
   14004751e:	add    eax,DWORD PTR [rax]
   140047520:	and    DWORD PTR [rax],eax
   140047522:	add    BYTE PTR [rax],al
   140047524:	clc    
   140047525:	(bad)  
   140047526:	add    BYTE PTR [rax],al
   140047528:	movabs ds:0xff0004750c0000cf,eax
   140047531:	(bad)  
   140047532:	(bad)  
   140047533:	inc    DWORD PTR [rax]
   140047535:	add    BYTE PTR [rax],al
   140047537:	add    bh,bh
   140047539:	(bad)  
   14004753a:	(bad)  
   14004753b:	inc    DWORD PTR [rax]
	...
   140047545:	add    BYTE PTR [rax],al
   140047547:	add    BYTE PTR [rcx],al
   140047549:	add    BYTE PTR [rax],al
   14004754b:	add    BYTE PTR [rcx],al
   14004754d:	add    BYTE PTR [rax],al
   14004754f:	add    BYTE PTR [rbp+rsi*2+0x4],dl
   140047553:	add    BYTE PTR [rax+0x0],al
	...
   14004755e:	add    BYTE PTR [rax],al
   140047560:	add    ah,BYTE PTR [rdx+0x1]
   140047563:	add    BYTE PTR [rax],bh
   140047565:	add    BYTE PTR [rax],al
   140047567:	add    al,bh
   140047569:	(bad)  
   14004756a:	add    BYTE PTR [rax],al
   14004756c:	(bad)  
   14004756d:	(bad)  
   14004756e:	(bad)  
   14004756f:	jmp    FWORD PTR [rdi]
   140047571:	iret   
   140047572:	add    BYTE PTR [rax],al
   140047574:	add    BYTE PTR [rax],al
   140047576:	add    BYTE PTR [rax],al
   140047578:	or     edi,0xffff0000
   14004757e:	(bad)  
   14004757f:	call   FWORD PTR [rsi+0xcf]
   140047585:	add    BYTE PTR [rax],al
   140047587:	add    BYTE PTR [rdx-0xffff31],ah
   14004758d:	(bad)  
   14004758e:	(bad)  
   14004758f:	inc    DWORD PTR [rdx]
   140047591:	(bad)  
   140047593:	add    BYTE PTR [rax],al
   140047595:	add    BYTE PTR [rax],al
   140047597:	add    BYTE PTR [rsi-0xfffd7e],cl
   14004759d:	(bad)  
   14004759e:	(bad)  
   14004759f:	call   FWORD PTR [rcx]
   1400475a1:	or     al,BYTE PTR [rdx]
   1400475a3:	add    BYTE PTR [rdx],cl
   1400475a5:	xor    al,BYTE PTR [rsi]
   1400475a7:	push   rax
   1400475a8:	ss push rsi
   1400475aa:	add    DWORD PTR [rax],eax
   1400475ac:	js     0x1400475ad
   1400475ae:	add    eax,DWORD PTR [rax]
   1400475b0:	add    DWORD PTR [rax+rcx*1],edx
   1400475b3:	add    BYTE PTR [rsp+riz*2],dl
   1400475b6:	or     BYTE PTR [rax],al
   1400475b8:	adc    al,0x54
   1400475ba:	(bad)  
   1400475bb:	add    BYTE PTR [rsp+rsi*1],dl
   1400475be:	(bad)  
   1400475bf:	add    BYTE PTR [rdx+rsi*1],dl
   1400475c2:	adc    BYTE PTR [rax+0x21],dh
   1400475c5:	add    BYTE PTR [rax],al
   1400475c7:	add    BYTE PTR [rax+0x720000cf],dh
   1400475cd:	rol    BYTE PTR [rax],1
   1400475cf:	add    BYTE PTR [rax+0x19000475],dh
   1400475d5:	and    al,BYTE PTR [rsi]
   1400475d7:	add    BYTE PTR [rdx],bl
   1400475d9:	push   rdx
   1400475da:	(bad)  
   1400475db:	lock adc al,0xe0
   1400475de:	adc    dh,BYTE PTR [rax+0x11]
   1400475e1:	(bad)  
   1400475e2:	adc    BYTE PTR [rax],dh
   1400475e4:	ss push rsi
   1400475e6:	add    DWORD PTR [rax],eax
   1400475e8:	pop    rax
   1400475e9:	add    DWORD PTR [rax+rax*1],eax
   1400475ec:	and    DWORD PTR [rax],eax
   1400475ee:	add    BYTE PTR [rax],al
   1400475f0:	test   al,0xd0
   1400475f2:	add    BYTE PTR [rax],al
   1400475f4:	movabs al,ds:0xff000475d40000d1
   1400475fd:	(bad)  
   1400475fe:	(bad)  
   1400475ff:	inc    DWORD PTR [rax]
   140047601:	add    BYTE PTR [rax],al
   140047603:	add    bh,bh
   140047605:	(bad)  
   140047606:	(bad)  
   140047607:	inc    DWORD PTR [rax]
	...
   140047611:	add    BYTE PTR [rax],al
   140047613:	add    BYTE PTR [rcx],al
   140047615:	add    BYTE PTR [rax],al
   140047617:	add    BYTE PTR [rcx],al
   140047619:	add    BYTE PTR [rax],al
   14004761b:	add    BYTE PTR [rax],ah
   14004761d:	jbe    0x140047623
   14004761f:	add    BYTE PTR [rax+0x0],al
	...
   14004762a:	add    BYTE PTR [rax],al
   14004762c:	and    esp,DWORD PTR [rdx+0x1]
   14004762f:	add    BYTE PTR [rax],bh
   140047631:	add    BYTE PTR [rax],al
   140047633:	add    BYTE PTR [rax-0xffff30],ch
   140047639:	(bad)  
   14004763a:	(bad)  
   14004763b:	(bad)  
   14004763c:	jmp    0x14004760e
   14004763e:	add    BYTE PTR [rax],al
   140047640:	add    BYTE PTR [rax],al
   140047642:	add    BYTE PTR [rax],al
   140047644:	sub    edx,ecx
   140047646:	add    BYTE PTR [rax],al
   140047648:	(bad)  
   140047649:	(bad)  
   14004764a:	(bad)  
   14004764b:	jmp    QWORD PTR [rbx]
   14004764d:	(bad)  
   14004764f:	add    BYTE PTR [rax],al
   140047651:	add    BYTE PTR [rax],al
   140047653:	add    al,ah
   140047655:	(bad)  
   140047656:	add    al,BYTE PTR [rax]
   140047658:	(bad)  
   140047659:	(bad)  
   14004765a:	(bad)  
   14004765b:	(bad)  
   14004765c:	(bad)  
   14004765d:	(bad)  
   14004765e:	add    al,BYTE PTR [rax]
   140047660:	add    BYTE PTR [rax],al
   140047662:	add    BYTE PTR [rax],al
   140047664:	repnz (bad) 
   140047666:	add    al,BYTE PTR [rax]
   140047668:	(bad)  
   140047669:	(bad)  
   14004766a:	(bad)  
   14004766b:	call   FWORD PTR [rcx]
   14004766d:	or     al,BYTE PTR [rdx]
   14004766f:	add    BYTE PTR [rdx],cl
   140047671:	xor    al,BYTE PTR [rsi]
   140047673:	push   rax
   140047674:	ss push rsi
   140047676:	add    DWORD PTR [rax],eax
   140047678:	pop    rax
   140047679:	add    DWORD PTR [rax+rax*1],eax
   14004767c:	adc    DWORD PTR [rax+rcx*1],ebx
   14004767f:	add    BYTE PTR [rsp+riz*2],bl
   140047682:	or     al,BYTE PTR [rax]
   140047684:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140047688:	adc    al,0x34
   14004768a:	or     BYTE PTR [rax],al
   14004768c:	or     BYTE PTR [rdx+0x4],dl
   14004768f:	jo     0x1400476c7
   140047691:	push   rsi
   140047692:	add    DWORD PTR [rax],eax
   140047694:	sub    BYTE PTR [rsp+rax*1],al
   140047697:	add    BYTE PTR [rcx],ah
   140047699:	add    BYTE PTR [rax],al
   14004769b:	add    BYTE PTR [rax+0x6f0000d1],dh
   1400476a1:	rol    BYTE PTR [rax],cl
   1400476a3:	add    BYTE PTR [rsi+rsi*2+0x4],bh
   1400476a7:	add    bh,bh
   1400476a9:	(bad)  
   1400476aa:	(bad)  
   1400476ab:	inc    DWORD PTR [rdx+riz*2+0x1]
   1400476af:	add    BYTE PTR [rax-0xffff2f],dh
   1400476b5:	(bad)  
   1400476b6:	(bad)  
   1400476b7:	call   FWORD PTR [rdx]
   1400476b9:	rol    BYTE PTR [rax],cl
   1400476bb:	add    BYTE PTR [rax],al
   1400476bd:	add    BYTE PTR [rax],al
   1400476bf:	add    BYTE PTR [rdx+rdx*8+0x0],al
   1400476c3:	add    bh,bh
   1400476c5:	(bad)  
   1400476c6:	(bad)  
   1400476c7:	jmp    QWORD PTR [rsi]
   1400476c9:	add    DWORD PTR [rdx],0x0
   1400476cc:	(bad)  
   1400476cd:	(bad)  
   1400476ce:	(bad)  
   1400476cf:	(bad)  
   1400476d0:	cmp    al,BYTE PTR [rbx+0x2]
   1400476d6:	add    BYTE PTR [rax],al
   1400476d8:	push   rbx
   1400476d9:	add    DWORD PTR [rdx],0x0
   1400476dc:	(bad)  
   1400476dd:	(bad)  
   1400476de:	(bad)  
   1400476df:	call   QWORD PTR [rcx]
   1400476e1:	sbb    al,0x6
   1400476e3:	add    BYTE PTR [rsp+riz*2],bl
   1400476e6:	or     al,BYTE PTR [rax]
   1400476e8:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400476eb:	add    BYTE PTR [rdx+rdx*2],cl
   1400476ee:	or     BYTE PTR [rax+0x36],dh
   1400476f1:	push   rsi
   1400476f2:	add    DWORD PTR [rax],eax
   1400476f4:	push   rax
   1400476f5:	add    al,0x4
   1400476f7:	add    BYTE PTR [rcx],ah
   1400476f9:	add    BYTE PTR [rax],al
   1400476fb:	add    ah,dh
   1400476fd:	rol    BYTE PTR [rax],cl
   1400476ff:	add    BYTE PTR [rax-0x1fffff2d],cl
   140047705:	jbe    0x14004770b
   140047707:	add    bh,bh
   140047709:	(bad)  
   14004770a:	(bad)  
   14004770b:	call   QWORD PTR [rsi+0x62]
   14004770e:	add    DWORD PTR [rax],eax
   140047710:	hlt    
   140047711:	rol    BYTE PTR [rax],cl
   140047713:	add    bh,bh
   140047715:	(bad)  
   140047716:	(bad)  
   140047717:	(bad)  
   140047718:	rol    DWORD PTR ds:[rax],cl
   14004771b:	add    BYTE PTR [rax],al
   14004771d:	add    BYTE PTR [rax],al
   14004771f:	add    BYTE PTR [rcx-0x2d],dh
   140047722:	add    BYTE PTR [rax],al
   140047724:	(bad)  
   140047725:	(bad)  
   140047726:	(bad)  
   140047727:	jmp    FWORD PTR [rax-0x7d]
   14004772a:	add    al,BYTE PTR [rax]
   14004772c:	add    BYTE PTR [rax],al
   14004772e:	add    BYTE PTR [rax],al
   140047730:	adc    DWORD PTR [rsi+rax*1],ebx
   140047733:	add    BYTE PTR [rsp+riz*2],bl
   140047736:	or     al,BYTE PTR [rax]
   140047738:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004773b:	add    BYTE PTR [rdx+rdx*2],cl
   14004773e:	or     BYTE PTR [rax+0x36],dh
   140047741:	push   rsi
   140047742:	add    DWORD PTR [rax],eax
   140047744:	js     0x14004774a
   140047746:	add    al,0x0
   140047748:	and    DWORD PTR [rax],eax
   14004774a:	add    BYTE PTR [rax],al
   14004774c:	nop
   14004774d:	rol    DWORD PTR [rax],cl
   14004774f:	add    BYTE PTR [rdx],bl
   140047751:	(bad)  
   140047752:	add    BYTE PTR [rax],al
   140047754:	xor    BYTE PTR [rdi+0x4],dh
   140047757:	add    bh,bh
   140047759:	(bad)  
   14004775a:	(bad)  
   14004775b:	call   QWORD PTR [rsi+0x62]
   14004775e:	add    DWORD PTR [rax],eax
   140047760:	nop
   140047761:	rol    DWORD PTR [rax],cl
   140047763:	add    bh,bh
   140047765:	(bad)  
   140047766:	(bad)  
   140047767:	push   QWORD PTR [rbp+0xd3]
   14004776d:	add    BYTE PTR [rax],al
   14004776f:	add    BYTE PTR [rdi],al
   140047771:	(bad)  
   140047772:	add    BYTE PTR [rax],al
   140047774:	(bad)  
   140047775:	(bad)  
   140047776:	(bad)  
   140047777:	(bad)  
   140047778:	jle    0x1400476fd
   14004777a:	add    al,BYTE PTR [rax]
   14004777c:	add    BYTE PTR [rax],al
   14004777e:	add    BYTE PTR [rax],al
   140047780:	add    DWORD PTR [rbx],edx
   140047782:	or     BYTE PTR [rax],al
   140047784:	adc    edx,DWORD PTR [rsi+rcx*1+0x0]
   140047788:	adc    esi,DWORD PTR [rcx*1+0xf721300]
   14004778f:	loopne 0x14004779e
   140047791:	jo     0x14004779f
   140047793:	(bad)  
   140047794:	and    DWORD PTR [rax],eax
   140047796:	add    BYTE PTR [rax],al
   140047798:	xchg   esp,eax
   140047799:	(bad)  
   14004779a:	add    BYTE PTR [rax],al
   14004779c:	cli    
   14004779d:	(bad)  
   14004779e:	add    BYTE PTR [rax],al
   1400477a0:	xor    BYTE PTR [rdi+0x4],0x0
   1400477a4:	adc    DWORD PTR [rsi+rax*1],ebx
   1400477a7:	add    BYTE PTR [rsp+riz*2],bl
   1400477aa:	or     al,BYTE PTR [rax]
   1400477ac:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400477af:	add    BYTE PTR [rdx+rdx*2],cl
   1400477b2:	or     BYTE PTR [rax+0x36],dh
   1400477b5:	push   rsi
   1400477b6:	add    DWORD PTR [rax],eax
   1400477b8:	loopne 0x1400477c4
   1400477ba:	add    al,0x0
   1400477bc:	(bad)  
   1400477bd:	(bad)  
   1400477be:	(bad)  
   1400477bf:	jmp    FWORD PTR [rax+0x62]
   1400477c2:	add    DWORD PTR [rax],eax
   1400477c4:	add    BYTE PTR [rax],al
   1400477c6:	add    BYTE PTR [rax],al
   1400477c8:	js     0x14004782c
   1400477ca:	add    DWORD PTR [rax],eax
   1400477cc:	add    DWORD PTR [rax],eax
   1400477ce:	add    BYTE PTR [rax],al
   1400477d0:	mov    BYTE PTR [rdx+0x1],ah
   1400477d3:	add    BYTE PTR [rdx],al
   1400477d5:	add    BYTE PTR [rax],al
   1400477d7:	add    BYTE PTR [rax+0x3000162],bl
   1400477dd:	add    BYTE PTR [rax],al
   1400477df:	add    BYTE PTR [rax+0x4000162],ch
   1400477e5:	add    BYTE PTR [rax],al
   1400477e7:	add    BYTE PTR [rax+0x5000162],bh
   1400477ed:	add    BYTE PTR [rax],al
   1400477ef:	add    al,cl
   1400477f1:	(bad)  
   1400477f3:	add    al,ch
   1400477f5:	(bad)  
   1400477f6:	add    BYTE PTR [rax],al
   1400477f8:	(bad)  
   1400477f9:	(bad)  
   1400477fa:	(bad)  
   1400477fb:	call   FWORD PTR [rsi]
   1400477fd:	(bad)  
   1400477fe:	add    BYTE PTR [rax],al
   140047800:	add    BYTE PTR [rax],al
   140047802:	add    BYTE PTR [rax],al
   140047804:	and    dl,dh
   140047806:	add    BYTE PTR [rax],al
   140047808:	add    DWORD PTR [rax],eax
   14004780a:	add    BYTE PTR [rax],al
   14004780c:	es (bad) 
   14004780e:	add    BYTE PTR [rax],al
   140047810:	add    al,BYTE PTR [rax]
   140047812:	add    BYTE PTR [rax],al
   140047814:	sub    dl,dh
   140047816:	add    BYTE PTR [rax],al
   140047818:	add    eax,DWORD PTR [rax]
   14004781a:	add    BYTE PTR [rax],al
   14004781c:	cs (bad) 
   14004781e:	add    BYTE PTR [rax],al
   140047820:	add    al,0x0
   140047822:	add    BYTE PTR [rax],al
   140047824:	cmp    dh,dl
   140047826:	add    BYTE PTR [rax],al
   140047828:	add    eax,0x6d000000
   14004782d:	(bad)  
   14004782e:	add    BYTE PTR [rax],al
   140047830:	(bad)  
   140047831:	add    BYTE PTR [rax],al
   140047833:	add    BYTE PTR [rbx-0xffff2a],cl
   140047839:	(bad)  
   14004783a:	(bad)  
   14004783b:	inc    DWORD PTR [rcx]
   14004783d:	clts   
   14004783f:	add    BYTE PTR [rdi],cl
   140047841:	fs (bad) 
   140047843:	add    BYTE PTR [rdi],cl
   140047845:	xor    al,0x6
   140047847:	add    BYTE PTR [rdi],cl
   140047849:	xor    cl,BYTE PTR [rbx]
   14004784b:	jo     0x14004786e
   14004784d:	add    BYTE PTR [rax],al
   14004784f:	add    BYTE PTR [rsi+rdx*8-0x28940000],ah
   140047856:	add    BYTE PTR [rax],al
   140047858:	cmp    al,0x78
   14004785a:	add    al,0x0
   14004785c:	add    DWORD PTR [rdi],ecx
   14004785e:	(bad)  
   14004785f:	add    BYTE PTR [rdi],cl
   140047861:	fs (bad) 
   140047863:	add    BYTE PTR [rdi],cl
   140047865:	xor    al,0x6
   140047867:	add    BYTE PTR [rdi],cl
   140047869:	xor    cl,BYTE PTR [rbx]
   14004786b:	jo     0x14004788e
   14004786d:	add    BYTE PTR [rax],al
   14004786f:	add    BYTE PTR [rdi+rdx*8-0x27c30000],ch
   140047876:	add    BYTE PTR [rax],al
   140047878:	pop    rsp
   140047879:	js     0x14004787f
   14004787b:	add    BYTE PTR [rcx],al
   14004787d:	sbb    BYTE PTR [rdx],cl
   14004787f:	add    BYTE PTR [rax],bl
   140047881:	or     eax,DWORD PTR fs:[rax]
   140047884:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140047888:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004788b:	add    BYTE PTR [rax],bl
   14004788d:	xor    dl,BYTE PTR [rax+rsi*8]
   140047890:	adc    ah,al
   140047892:	adc    BYTE PTR [rax+0x21],dh
   140047895:	add    BYTE PTR [rax],al
   140047897:	add    BYTE PTR [rax+rbx*8+0x0],al
   14004789b:	add    BYTE PTR [rax+rbx*8+0x787c0000],dh
   1400478a2:	add    al,0x0
   1400478a4:	add    DWORD PTR [rsi],eax
   1400478a6:	add    al,BYTE PTR [rax]
   1400478a8:	(bad)  
   1400478a9:	xor    al,BYTE PTR [rdx]
   1400478ab:	xor    BYTE PTR [rcx],ah
   1400478ad:	add    BYTE PTR [rax],al
   1400478af:	add    BYTE PTR [rax+rbx*8-0x27070000],bh
   1400478b6:	add    BYTE PTR [rax],al
   1400478b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400478b9:	js     0x1400478bf
   1400478bb:	add    BYTE PTR [rcx],dl
   1400478bd:	adc    eax,DWORD PTR [rdx]
   1400478bf:	add    BYTE PTR [rdx],cl
   1400478c1:	push   rdx
   1400478c2:	(bad)  
   1400478c3:	xor    BYTE PTR [rsi],dh
   1400478c5:	push   rsi
   1400478c6:	add    DWORD PTR [rax],eax
   1400478c8:	mov    BYTE PTR [rbx],al
   1400478ca:	add    al,0x0
   1400478cc:	(bad)  
   1400478cd:	(bad)  
   1400478ce:	(bad)  
   1400478cf:	jmp    rcx
   1400478d1:	(bad)  
   1400478d3:	add    BYTE PTR [rax],al
   1400478d5:	add    BYTE PTR [rax],al
   1400478d7:	add    cl,dh
   1400478d9:	(bad)  
   1400478db:	add    BYTE PTR [rax-0x26],al
   1400478de:	add    BYTE PTR [rax],al
   1400478e0:	(bad)  
   1400478e1:	(bad)  
   1400478e2:	(bad)  
   1400478e3:	push   QWORD PTR [rax-0x26]
   1400478e6:	add    BYTE PTR [rax],al
   1400478e8:	add    DWORD PTR [rax],eax
   1400478ea:	add    BYTE PTR [rax],al
   1400478ec:	jns    0x1400478c8
   1400478ee:	add    BYTE PTR [rax],al
   1400478f0:	add    BYTE PTR [rax],al
   1400478f2:	add    BYTE PTR [rax],al
   1400478f4:	test   dl,bl
   1400478f6:	add    BYTE PTR [rax],al
   1400478f8:	(bad)  
   1400478f9:	(bad)  
   1400478fa:	(bad)  
   1400478fb:	call   QWORD PTR [rcx]
   1400478fd:	sbb    BYTE PTR [rax+rax*1],al
   140047900:	sbb    BYTE PTR [rcx+rcx*1],dh
   140047903:	add    BYTE PTR [rdx+rdx*2],cl
   140047906:	or     BYTE PTR [rax+0x36],dh
   140047909:	push   rsi
   14004790a:	add    DWORD PTR [rax],eax
   14004790c:	mov    al,0x3
   14004790e:	add    al,0x0
   140047910:	(bad)  
   140047911:	(bad)  
   140047912:	(bad)  
   140047913:	inc    DWORD PTR [rdi]
   140047915:	movsxd eax,DWORD PTR [rcx]
   140047917:	add    BYTE PTR [rax-0xffff26],bl
   14004791d:	(bad)  
   14004791e:	(bad)  
   14004791f:	(bad)  
   140047920:	out    dx,eax
   140047921:	fiadd  DWORD PTR [rax]
   140047923:	add    BYTE PTR [rax],al
   140047925:	add    BYTE PTR [rax],al
   140047927:	add    BYTE PTR [rdx],al
   140047929:	fild   DWORD PTR [rax]
   14004792b:	add    bh,bh
   14004792d:	(bad)  
   14004792e:	(bad)  
   14004792f:	dec    DWORD PTR [rcx]
   140047931:	(bad)  
   140047932:	add    al,BYTE PTR [rax]
   140047934:	(bad)  
   140047935:	xor    al,BYTE PTR [rdx]
   140047937:	xor    BYTE PTR [rsi+0x1000149],dl
   14004793d:	add    BYTE PTR [rax],al
   14004793f:	add    BYTE PTR [rip+0x3d0000db],dh        # 0x17d047a20
   140047945:	fild   DWORD PTR [rax]
   140047947:	add    BYTE PTR [rip+0x3d000163],bl        # 0x17d047ab0
   14004794d:	fild   DWORD PTR [rax]
   14004794f:	add    BYTE PTR [rcx],al
   140047951:	(bad)  
   140047952:	add    al,BYTE PTR [rax]
   140047954:	(bad)  
   140047955:	xor    al,BYTE PTR [rdx]
   140047957:	push   rax
   140047958:	add    DWORD PTR [rdi],ecx
   14004795a:	(bad)  
   14004795b:	add    BYTE PTR [rdi],cl
   14004795d:	or     DWORD PTR fs:[rax],eax
   140047960:	sysenter 
   140047962:	or     BYTE PTR [rax],al
   140047964:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140047967:	jo     0x14004798a
   140047969:	add    BYTE PTR [rax],al
   14004796b:	add    BYTE PTR [rax],dh
   14004796d:	fadd   QWORD PTR [rax]
   14004796f:	add    BYTE PTR [rsp+rbx*8+0x79580000],dl
   140047976:	add    al,0x0
   140047978:	add    DWORD PTR [rdx],ecx
   14004797a:	add    al,0x0
   14004797c:	or     dh,BYTE PTR [rsi+rax*1]
   14004797f:	add    BYTE PTR [rdx],cl
   140047981:	xor    al,BYTE PTR [rsi]
   140047983:	jo     0x1400479a6
   140047985:	add    BYTE PTR [rax],al
   140047987:	add    BYTE PTR [rsp+rbx*8-0x23360000],bl
   14004798e:	add    BYTE PTR [rax],al
   140047990:	js     0x140047a0b
   140047992:	add    al,0x0
   140047994:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b41979a2
   14004799a:	or     BYTE PTR [rax],al
   14004799c:	adc    eax,0x15000764
   1400479a1:	xor    al,0x6
   1400479a3:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e48adb
   1400479a9:	or     al,BYTE PTR [rax+rax*1]
   1400479ac:	or     dh,BYTE PTR [rdx+rcx*1]
   1400479af:	add    BYTE PTR [rdx],cl
   1400479b1:	jb     0x1400479b9
   1400479b3:	jo     0x1400479b6
   1400479b5:	or     al,BYTE PTR [rax+rax*1]
   1400479b8:	or     dh,BYTE PTR [rsi+rax*1]
   1400479bb:	add    BYTE PTR [rdx],cl
   1400479bd:	xor    al,BYTE PTR [rsi]
   1400479bf:	jo     0x1400479e2
   1400479c1:	add    BYTE PTR [rax],al
   1400479c3:	add    ah,ch
   1400479c5:	fld    QWORD PTR [rax]
   1400479c7:	add    BYTE PTR [rip+0xffffffffb40000de],cl        # 0xf4047aab
   1400479cd:	jns    0x1400479d3
   1400479cf:	add    BYTE PTR [rcx],al
   1400479d1:	(bad)  
   1400479d2:	add    al,BYTE PTR [rax]
   1400479d4:	(bad)  
   1400479d5:	xor    al,BYTE PTR [rdx]
   1400479d7:	xor    BYTE PTR [rcx],ah
   1400479d9:	add    BYTE PTR [rax],al
   1400479db:	add    BYTE PTR [rsi+rbx*8],dl
   1400479de:	add    BYTE PTR [rax],al
   1400479e0:	(bad)  
   1400479e1:	fiadd  WORD PTR [rax]
   1400479e3:	add    al,dl
   1400479e5:	jns    0x1400479eb
   1400479e7:	add    BYTE PTR [rcx],bl
   1400479e9:	and    al,0x7
   1400479eb:	add    BYTE PTR [rdx+riz*2],bl
   1400479ee:	sbb    al,dh
   1400479f0:	(bad)  
   1400479f1:	loopne 0x140047a07
   1400479f3:	rcl    BYTE PTR [rdx],1
   1400479f5:	jo     0x140047a08
   1400479f7:	(bad)  
   1400479f8:	adc    BYTE PTR [rax],dh
   1400479fa:	add    BYTE PTR [rax],al
   1400479fc:	ss push rsi
   1400479fe:	add    DWORD PTR [rax],eax
   140047a00:	nop
   140047a01:	add    eax,0x210004
   140047a06:	add    BYTE PTR [rax],al
   140047a08:	test   dh,bl
   140047a0a:	add    BYTE PTR [rax],al
   140047a0c:	jae    0x1400479ed
   140047a0e:	add    BYTE PTR [rax],al
   140047a10:	call   0x13f047e8e
   140047a15:	(bad)  
   140047a16:	(bad)  
   140047a17:	inc    DWORD PTR [rax]
   140047a19:	add    BYTE PTR [rax],al
   140047a1b:	add    BYTE PTR [rax],al
   140047a1d:	add    BYTE PTR [rax],al
   140047a1f:	add    BYTE PTR [rbx+0x63],al
   140047a22:	add    DWORD PTR [rax],eax
   140047a24:	(bad)  
   140047a25:	(bad)  
   140047a26:	(bad)  
   140047a27:	inc    DWORD PTR [rax]
   140047a29:	add    BYTE PTR [rax],al
   140047a2b:	add    BYTE PTR [rax],al
   140047a2d:	add    BYTE PTR [rax],al
   140047a2f:	add    BYTE PTR [rcx],al
   140047a31:	add    BYTE PTR [rax],al
   140047a33:	add    BYTE PTR [rdx],al
   140047a35:	add    BYTE PTR [rax],al
   140047a37:	add    BYTE PTR [rcx],al
   140047a39:	add    BYTE PTR [rax],al
   140047a3b:	add    BYTE PTR [rax+0x7a],al
   140047a3e:	add    al,0x0
   140047a40:	add    BYTE PTR [rax],al
	...
   140047a4b:	add    BYTE PTR [rdi+0x63],cl
   140047a4e:	add    DWORD PTR [rax],eax
   140047a50:	cmp    BYTE PTR [rax],al
   140047a52:	add    BYTE PTR [rax],al
   140047a54:	test   dh,bl
   140047a56:	add    BYTE PTR [rax],al
   140047a58:	(bad)  
   140047a59:	(bad)  
   140047a5a:	(bad)  
   140047a5b:	dec    ebp
   140047a5d:	fiadd  WORD PTR [rax]
   140047a5f:	add    BYTE PTR [rax],al
   140047a61:	add    BYTE PTR [rax],al
   140047a63:	add    ah,bl
   140047a65:	fiadd  WORD PTR [rax]
   140047a67:	add    BYTE PTR [rcx],al
   140047a69:	add    BYTE PTR [rax],al
   140047a6b:	add    al,dh
   140047a6d:	fiadd  WORD PTR [rax]
   140047a6f:	add    BYTE PTR [rax],al
   140047a71:	add    BYTE PTR [rax],al
   140047a73:	add    al,bh
   140047a75:	fiadd  WORD PTR [rax]
   140047a77:	add    bh,bh
   140047a79:	(bad)  
   140047a7a:	(bad)  
   140047a7b:	dec    DWORD PTR [rdi+0x63]
   140047a7e:	add    DWORD PTR [rax],eax
   140047a80:	add    BYTE PTR [rax],al
   140047a82:	add    BYTE PTR [rax],al
   140047a84:	scas   al,BYTE PTR es:[rdi]
   140047a85:	test   DWORD PTR [rdx],eax
   140047a87:	add    bh,bh
   140047a89:	(bad)  
   140047a8a:	(bad)  
   140047a8b:	(bad)  
   140047a8c:	mov    eax,0x1000285
   140047a91:	add    BYTE PTR [rax],al
   140047a93:	add    al,al
   140047a95:	test   DWORD PTR [rdx],eax
   140047a97:	add    bh,bh
   140047a99:	(bad)  
   140047a9a:	(bad)  
   140047a9b:	call   FWORD PTR [rcx]
   140047a9d:	or     al,BYTE PTR [rdx]
   140047a9f:	add    BYTE PTR [rdx],cl
   140047aa1:	xor    al,BYTE PTR [rsi]
   140047aa3:	push   rax
   140047aa4:	ss push rsi
   140047aa6:	add    DWORD PTR [rax],eax
   140047aa8:	nop
   140047aa9:	add    eax,0x6010004
   140047aae:	add    al,BYTE PTR [rax]
   140047ab0:	(bad)  
   140047ab1:	xor    al,BYTE PTR [rdx]
   140047ab3:	xor    BYTE PTR [rcx],ah
   140047ab5:	add    BYTE PTR [rax],al
   140047ab7:	add    ah,bh
   140047ab9:	fild   WORD PTR [rax]
   140047abb:	add    BYTE PTR [rcx-0x20],al
   140047abe:	add    BYTE PTR [rax],al
   140047ac0:	lods   al,BYTE PTR ds:[rsi]
   140047ac1:	jp     0x140047ac7
   140047ac3:	add    BYTE PTR [rcx],dl
   140047ac5:	lar    eax,WORD PTR [rax]
   140047ac8:	(bad)  
   140047ac9:	push   rdx
   140047aca:	add    dh,BYTE PTR [rax]
   140047acc:	ss push rsi
   140047ace:	add    DWORD PTR [rax],eax
   140047ad0:	and    BYTE PTR [rcx],dl
   140047ad2:	add    al,0x0
   140047ad4:	(bad)  
   140047ad5:	(bad)  
   140047ad6:	(bad)  
   140047ad7:	push   QWORD PTR [rax+0x63]
   140047ada:	add    DWORD PTR [rax],eax
   140047adc:	rex.W loopne 0x140047adf
   140047adf:	add    bh,bh
   140047ae1:	(bad)  
   140047ae2:	(bad)  
   140047ae3:	(bad)  
   140047ae4:	mov    eax,0xe0
   140047ae9:	add    BYTE PTR [rax],al
   140047aeb:	add    dh,al
   140047aed:	loopne 0x140047aef
   140047aef:	add    bh,bh
   140047af1:	(bad)  
   140047af2:	(bad)  
   140047af3:	inc    DWORD PTR [rcx]
   140047af5:	or     al,BYTE PTR [rdx]
   140047af7:	add    BYTE PTR [rdx],cl
   140047af9:	xor    al,BYTE PTR [rsi]
   140047afb:	xor    BYTE PTR [rcx],bl
   140047afd:	and    al,0x7
   140047aff:	add    BYTE PTR [rdx+riz*2],bl
   140047b02:	sbb    al,dh
   140047b04:	(bad)  
   140047b05:	loopne 0x140047b1b
   140047b07:	rcl    BYTE PTR [rdx],1
   140047b09:	jo     0x140047b1c
   140047b0b:	(bad)  
   140047b0c:	adc    BYTE PTR [rax],dh
   140047b0e:	add    BYTE PTR [rax],al
   140047b10:	ss push rsi
   140047b12:	add    DWORD PTR [rax],eax
   140047b14:	xor    BYTE PTR [rcx],al
   140047b16:	add    al,0x0
   140047b18:	and    DWORD PTR [rax],eax
   140047b1a:	add    BYTE PTR [rax],al
   140047b1c:	(bad)  
   140047b1d:	cmc    
   140047b1e:	add    BYTE PTR [rax],al
   140047b20:	int    0xf6
   140047b22:	add    BYTE PTR [rax],al
   140047b24:	cld    
   140047b25:	jp     0x140047b2b
   140047b27:	add    bh,bh
   140047b29:	(bad)  
   140047b2a:	(bad)  
   140047b2b:	inc    DWORD PTR [rax]
   140047b2d:	add    BYTE PTR [rax],al
   140047b2f:	add    BYTE PTR [rax],al
   140047b31:	add    BYTE PTR [rax],al
   140047b33:	add    BYTE PTR [rdx-0xfffe9d],al
   140047b39:	(bad)  
   140047b3a:	(bad)  
   140047b3b:	inc    DWORD PTR [rax]
   140047b3d:	add    BYTE PTR [rax],al
   140047b3f:	add    BYTE PTR [rax],al
   140047b41:	add    BYTE PTR [rax],al
   140047b43:	add    BYTE PTR [rcx],al
   140047b45:	add    BYTE PTR [rax],al
   140047b47:	add    BYTE PTR [rdx],al
   140047b49:	add    BYTE PTR [rax],al
   140047b4b:	add    BYTE PTR [rcx],al
   140047b4d:	add    BYTE PTR [rax],al
   140047b4f:	add    BYTE PTR [rbx+rdi*2+0x4],dl
   140047b53:	add    BYTE PTR [rax+0x0],al
	...
   140047b5e:	add    BYTE PTR [rax],al
   140047b60:	mov    fs,WORD PTR [rbx+0x1]
   140047b63:	add    BYTE PTR [rax],bh
   140047b65:	add    BYTE PTR [rax],al
   140047b67:	add    ah,dl
   140047b69:	cmc    
   140047b6a:	add    BYTE PTR [rax],al
   140047b6c:	(bad)  
   140047b6d:	(bad)  
   140047b6e:	(bad)  
   140047b6f:	call   FWORD PTR [rip+0xf6]        # 0x140047c6b
   140047b75:	add    BYTE PTR [rax],al
   140047b77:	add    BYTE PTR [rsi+rsi*8],ch
   140047b7a:	add    BYTE PTR [rax],al
   140047b7c:	add    DWORD PTR [rax],eax
   140047b7e:	add    BYTE PTR [rax],al
   140047b80:	rex test BYTE PTR [rax],0x0
   140047b84:	add    BYTE PTR [rax],al
   140047b86:	add    BYTE PTR [rax],al
   140047b88:	rex.W test BYTE PTR [rax],0x0
   140047b8c:	(bad)  
   140047b8d:	(bad)  
   140047b8e:	(bad)  
   140047b8f:	dec    DWORD PTR [rsi+0x163]
   140047b95:	add    BYTE PTR [rax],al
   140047b97:	add    BYTE PTR [rax],ch
   140047b99:	xchg   BYTE PTR [rdx],al
   140047b9b:	add    bh,bh
   140047b9d:	(bad)  
   140047b9e:	(bad)  
   140047b9f:	push   QWORD PTR [rdx]
   140047ba1:	xchg   BYTE PTR [rdx],al
   140047ba3:	add    BYTE PTR [rcx],al
   140047ba5:	add    BYTE PTR [rax],al
   140047ba7:	add    BYTE PTR [rdx],bh
   140047ba9:	xchg   BYTE PTR [rdx],al
   140047bab:	add    bh,bh
   140047bad:	(bad)  
   140047bae:	(bad)  
   140047baf:	call   FWORD PTR [rcx]
   140047bb1:	or     al,BYTE PTR [rdx]
   140047bb3:	add    BYTE PTR [rdx],cl
   140047bb5:	xor    al,BYTE PTR [rsi]
   140047bb7:	push   rax
   140047bb8:	ss push rsi
   140047bba:	add    DWORD PTR [rax],eax
   140047bbc:	xor    BYTE PTR [rcx],al
   140047bbe:	add    al,0x0
   140047bc0:	add    DWORD PTR [rcx],ebx
   140047bc2:	or     al,BYTE PTR [rax]
   140047bc4:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140047bc8:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   140047bcc:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140047bd0:	sbb    DWORD PTR [rsi+rax*1],esi
   140047bd3:	add    BYTE PTR [rcx],bl
   140047bd5:	xor    dl,BYTE PTR [rip+0x21e0]        # 0x140049dbb
   140047bdb:	add    al,ah
   140047bdd:	test   BYTE PTR [rax],0x0
   140047be0:	(bad)
   140047be3:	add    al,al
   140047be5:	jnp    0x140047beb
   140047be7:	add    BYTE PTR [rcx],al
   140047be9:	clts   
   140047beb:	add    BYTE PTR [rdi],cl
   140047bed:	fs (bad) 
   140047bef:	add    BYTE PTR [rdi],cl
   140047bf1:	xor    al,0x6
   140047bf3:	add    BYTE PTR [rdi],cl
   140047bf5:	xor    cl,BYTE PTR [rbx]
   140047bf7:	jo     0x140047c1a
   140047bf9:	add    BYTE PTR [rax],al
   140047bfb:	add    ah,cl
   140047bfd:	test   DWORD PTR [rax],0xf85000
   140047c03:	add    al,ch
   140047c05:	jnp    0x140047c0b
   140047c07:	add    BYTE PTR [rcx],al
   140047c09:	add    al,0x1
   140047c0b:	add    BYTE PTR [rdx+rax*2],al
   140047c0e:	add    BYTE PTR [rax],al
   140047c10:	and    DWORD PTR [rax],eax
   140047c12:	add    BYTE PTR [rax],al
   140047c14:	pop    rax
   140047c15:	clc    
   140047c16:	add    BYTE PTR [rax],al
   140047c18:	jl     0x140047c12
   140047c1a:	add    BYTE PTR [rax],al
   140047c1c:	or     BYTE PTR [rsp+rax*1+0x0],bh
   140047c20:	adc    DWORD PTR [rsi+rax*1],ebx
   140047c23:	add    BYTE PTR [rsp+riz*2],bl
   140047c26:	or     al,BYTE PTR [rax]
   140047c28:	sbb    BYTE PTR [rcx+rcx*1],dh
   140047c2b:	add    BYTE PTR [rdx+rdx*2],cl
   140047c2e:	or     BYTE PTR [rax+0x36],dh
   140047c31:	push   rsi
   140047c32:	add    DWORD PTR [rax],eax
   140047c34:	nop
   140047c35:	add    BYTE PTR [rax+rax*1],al
   140047c38:	and    DWORD PTR [rax],eax
   140047c3a:	add    BYTE PTR [rax],al
   140047c3c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140047c3d:	clc    
   140047c3e:	add    BYTE PTR [rax],al
   140047c40:	sbb    cl,bh
   140047c42:	add    BYTE PTR [rax],al
   140047c44:	and    BYTE PTR [rsp+rax*1+0x0],bh
   140047c48:	(bad)  
   140047c49:	(bad)  
   140047c4a:	(bad)  
   140047c4b:	jmp    FWORD PTR [rdi-0x5bfffe9d]
   140047c51:	clc    
   140047c52:	add    BYTE PTR [rax],al
   140047c54:	(bad)  
   140047c55:	(bad)  
   140047c56:	(bad)  
   140047c57:	dec    ecx
   140047c59:	clc    
   140047c5a:	add    BYTE PTR [rax],al
   140047c5c:	add    BYTE PTR [rax],al
   140047c5e:	add    BYTE PTR [rax],al
   140047c60:	add    eax,0xff0000f9
   140047c65:	(bad)  
   140047c66:	(bad)  
   140047c67:	call   rax
   140047c69:	xchg   BYTE PTR [rdx],al
   140047c6b:	add    BYTE PTR [rax],al
   140047c6d:	add    BYTE PTR [rax],al
   140047c6f:	add    BYTE PTR [rcx],dl
   140047c71:	sbb    al,0x8
   140047c73:	add    BYTE PTR [rsp+riz*2],bl
   140047c76:	or     al,BYTE PTR [rax]
   140047c78:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140047c7c:	adc    al,0x34
   140047c7e:	or     BYTE PTR [rax],al
   140047c80:	or     BYTE PTR [rdx+0x4],dl
   140047c83:	jo     0x140047cbb
   140047c85:	push   rsi
   140047c86:	add    DWORD PTR [rax],eax
   140047c88:	clc    
   140047c89:	add    DWORD PTR [rax+rax*1],eax
   140047c8c:	and    DWORD PTR [rax],eax
   140047c8e:	add    BYTE PTR [rax],al
   140047c90:	cmp    cl,0x0
   140047c93:	add    BYTE PTR [rdx-0x6],al
   140047c96:	add    BYTE PTR [rax],al
   140047c98:	jo     0x140047d16
   140047c9a:	add    al,0x0
   140047c9c:	(bad)  
   140047c9d:	(bad)  
   140047c9e:	(bad)  
   140047c9f:	inc    DWORD PTR [rdx+riz*2+0x1]
   140047ca3:	add    BYTE PTR [rax-0xffff07],al
   140047ca9:	(bad)  
   140047caa:	(bad)  
   140047cab:	(bad)  
   140047cac:	(bad)  
   140047cad:	stc    
   140047cae:	add    BYTE PTR [rax],al
   140047cb0:	add    BYTE PTR [rax],al
   140047cb2:	add    BYTE PTR [rax],al
   140047cb4:	(bad)  
   140047cb5:	cli    
   140047cb6:	add    BYTE PTR [rax],al
   140047cb8:	(bad)  
   140047cb9:	(bad)  
   140047cba:	(bad)  
   140047cbb:	jmp    rsi
   140047cbd:	xchg   BYTE PTR [rdx],al
   140047cbf:	add    bh,bh
   140047cc1:	(bad)  
   140047cc2:	(bad)  
   140047cc3:	(bad)  
   140047cc4:	cli    
   140047cc5:	xchg   BYTE PTR [rdx],al
   140047cc7:	add    BYTE PTR [rax],al
   140047cc9:	add    BYTE PTR [rax],al
   140047ccb:	add    BYTE PTR [rbx],dl
   140047ccd:	xchg   DWORD PTR [rdx],eax
   140047ccf:	add    bh,bh
   140047cd1:	(bad)  
   140047cd2:	(bad)  
   140047cd3:	call   QWORD PTR [rcx]
   140047cd5:	sbb    al,0x6
   140047cd7:	add    BYTE PTR [rsp+riz*2],bl
   140047cda:	or     al,BYTE PTR [rax]
   140047cdc:	sbb    BYTE PTR [rcx+rcx*1],dh
   140047cdf:	add    BYTE PTR [rdx+rdx*2],cl
   140047ce2:	or     BYTE PTR [rax+0x36],dh
   140047ce5:	push   rsi
   140047ce6:	add    DWORD PTR [rax],eax
   140047ce8:	and    BYTE PTR [rdx],al
   140047cea:	add    al,0x0
   140047cec:	and    DWORD PTR [rax],eax
   140047cee:	add    BYTE PTR [rax],al
   140047cf0:	rex.W cli 
   140047cf2:	add    BYTE PTR [rax],al
   140047cf4:	(bad)  
   140047cf5:	cli    
   140047cf6:	add    BYTE PTR [rax],al
   140047cf8:	(bad)  
   140047cf9:	jl     0x140047cff
   140047cfb:	add    bh,bh
   140047cfd:	(bad)  
   140047cfe:	(bad)  
   140047cff:	jmp    FWORD PTR [rdi+0x48000163]
   140047d05:	cli    
   140047d06:	add    BYTE PTR [rax],al
   140047d08:	(bad)  
   140047d09:	(bad)  
   140047d0a:	(bad)  
   140047d0b:	(bad)  
   140047d0c:	jl     0x140047d08
   140047d0e:	add    BYTE PTR [rax],al
   140047d10:	add    BYTE PTR [rax],al
   140047d12:	add    BYTE PTR [rax],al
   140047d14:	scas   eax,DWORD PTR es:[rdi]
   140047d15:	cli    
   140047d16:	add    BYTE PTR [rax],al
   140047d18:	(bad)  
   140047d19:	(bad)  
   140047d1a:	(bad)  
   140047d1b:	jmp    FWORD PTR [rax]
   140047d1d:	xchg   DWORD PTR [rdx],eax
   140047d1f:	add    BYTE PTR [rax],al
   140047d21:	add    BYTE PTR [rax],al
   140047d23:	add    BYTE PTR [rcx],al
   140047d25:	adc    al,0x8
   140047d27:	add    BYTE PTR [rsp+riz*2],dl
   140047d2a:	or     BYTE PTR [rax],al
   140047d2c:	adc    al,0x54
   140047d2e:	(bad)  
   140047d2f:	add    BYTE PTR [rsp+rsi*1],dl
   140047d32:	(bad)  
   140047d33:	add    BYTE PTR [rdx+rsi*1],dl
   140047d36:	adc    BYTE PTR [rax+0x1],dh
   140047d39:	sbb    BYTE PTR [rax],cl
   140047d3b:	add    BYTE PTR [rax],bl
   140047d3d:	or     DWORD PTR fs:[rax],eax
   140047d40:	sbb    BYTE PTR [rax+rcx*1+0x0],dl
   140047d44:	sbb    BYTE PTR [rsi+rax*1],dh
   140047d47:	add    BYTE PTR [rax],bl
   140047d49:	xor    dl,BYTE PTR [rax+rsi*2]
   140047d4c:	and    DWORD PTR [rax],eax
   140047d4e:	add    BYTE PTR [rax],al
   140047d50:	mov    eax,0x2e0000fb
   140047d55:	cld    
   140047d56:	add    BYTE PTR [rax],al
   140047d58:	cmp    BYTE PTR [rbp+0x4],bh
   140047d5b:	add    BYTE PTR [rcx],dl
   140047d5d:	sbb    al,0x8
   140047d5f:	add    BYTE PTR [rsp+riz*2],bl
   140047d62:	or     eax,DWORD PTR [rax]
   140047d64:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140047d68:	adc    al,0x34
   140047d6a:	or     DWORD PTR [rax],eax
   140047d6c:	or     BYTE PTR [rdx+0x4],dl
   140047d6f:	jo     0x140047da7
   140047d71:	push   rsi
   140047d72:	add    DWORD PTR [rax],eax
   140047d74:	sbb    BYTE PTR [rdx],cl
   140047d76:	add    al,0x0
   140047d78:	and    DWORD PTR [rax],eax
   140047d7a:	add    BYTE PTR [rax],al
   140047d7c:	rex cld 
   140047d7e:	add    BYTE PTR [rax],al
   140047d80:	xchg   edx,eax
   140047d81:	std    
   140047d82:	add    BYTE PTR [rax],al
   140047d84:	pop    rsp
   140047d85:	jge    0x140047d8b
   140047d87:	add    bh,bh
   140047d89:	(bad)  
   140047d8a:	(bad)  
   140047d8b:	inc    ecx
   140047d8d:	movsxd eax,DWORD PTR [rcx]
   140047d8f:	add    BYTE PTR [rax-0x4],al
   140047d92:	add    BYTE PTR [rax],al
   140047d94:	(bad)  
   140047d95:	(bad)  
   140047d96:	(bad)  
   140047d97:	inc    DWORD PTR [rdi+0xfc]
   140047d9d:	add    BYTE PTR [rax],al
   140047d9f:	add    BYTE PTR [rbx-0x3],dh
   140047da2:	add    BYTE PTR [rax],al
   140047da4:	(bad)  
   140047da5:	(bad)  
   140047da6:	(bad)  
   140047da7:	call   QWORD PTR [rdx-0x79]
   140047daa:	add    al,BYTE PTR [rax]
   140047dac:	add    BYTE PTR [rax],al
   140047dae:	add    BYTE PTR [rax],al
   140047db0:	ins    DWORD PTR es:[rdi],dx
   140047db1:	xchg   DWORD PTR [rdx],eax
   140047db3:	add    bh,bh
   140047db5:	(bad)  
   140047db6:	(bad)  
   140047db7:	inc    DWORD PTR [rcx]
   140047db9:	adc    al,0x8
   140047dbb:	add    BYTE PTR [rsp+riz*2],dl
   140047dbe:	or     BYTE PTR [rax],al
   140047dc0:	adc    al,0x54
   140047dc2:	(bad)  
   140047dc3:	add    BYTE PTR [rsp+rsi*1],dl
   140047dc6:	(bad)  
   140047dc7:	add    BYTE PTR [rdx+rsi*1],dl
   140047dca:	adc    BYTE PTR [rax+0x21],dh
   140047dcd:	add    BYTE PTR [rax],al
   140047dcf:	add    BYTE PTR [rax+0x170000fd],bl
   140047dd5:	inc    BYTE PTR [rax]
   140047dd7:	add    BYTE PTR [rax+0x100047d],bh
   140047ddd:	clts   
   140047ddf:	add    BYTE PTR [rdi],cl
   140047de1:	fs (bad) 
   140047de3:	add    BYTE PTR [rdi],cl
   140047de5:	xor    al,0x6
   140047de7:	add    BYTE PTR [rdi],cl
   140047de9:	xor    cl,BYTE PTR [rbx]
   140047deb:	jo     0x140047e0e
   140047ded:	add    BYTE PTR [rax],al
   140047def:	add    BYTE PTR [rax-0x2],cl
   140047df2:	add    BYTE PTR [rax],al
   140047df4:	call   0x11c047ef7
   140047df9:	jge    0x140047dff
   140047dfb:	add    BYTE PTR [rcx],al
   140047dfd:	(bad)  
   140047dfe:	add    al,BYTE PTR [rax]
   140047e00:	(bad)  
   140047e01:	xor    al,BYTE PTR [rdx]
   140047e03:	xor    BYTE PTR [rcx],ah
   140047e05:	add    BYTE PTR [rax],al
   140047e07:	add    BYTE PTR [rdi+rdi*8],ah
   140047e0a:	add    BYTE PTR [rax],al
   140047e0c:	pop    rsi
   140047e0d:	inc    DWORD PTR [rax]
   140047e0f:	add    ah,bh
   140047e11:	jge    0x140047e17
   140047e13:	add    BYTE PTR [rcx],al
   140047e15:	add    al,0x1
   140047e17:	add    BYTE PTR [rdx+rax*2],al
   140047e1a:	add    BYTE PTR [rax],al
   140047e1c:	and    DWORD PTR [rax],eax
   140047e1e:	add    BYTE PTR [rax],al
   140047e20:	inc    DWORD PTR fs:[rax]
   140047e23:	add    BYTE PTR [rbp-0x1],bh
   140047e26:	add    BYTE PTR [rax],al
   140047e28:	adc    al,0x7e
   140047e2a:	add    al,0x0
   140047e2c:	add    DWORD PTR [rsi],edx
   140047e2e:	or     al,BYTE PTR [rax]
   140047e30:	(bad)  
   140047e31:	push   rsp
   140047e32:	or     al,0x0
   140047e34:	(bad)  
   140047e35:	xor    al,0xb
   140047e37:	add    BYTE PTR [rsi],dl
   140047e39:	xor    dl,BYTE PTR [rdx]
   140047e3b:	lock adc al,ah
   140047e3e:	(bad)  
   140047e3f:	ror    BYTE PTR [rax+rsi*2],0xb
   140047e43:	(bad)  
   140047e44:	and    DWORD PTR [rax],eax
   140047e46:	add    BYTE PTR [rax],al
   140047e48:	sar    bh,0x0
   140047e4b:	add    BYTE PTR [rcx+rax*1],bh
   140047e4e:	add    DWORD PTR [rax],eax
   140047e50:	sub    al,0x7e
   140047e52:	add    al,0x0
   140047e54:	adc    DWORD PTR [rdi],ebx
   140047e56:	or     BYTE PTR [rax],al
   140047e58:	(bad)  
   140047e59:	push   rsp
   140047e5a:	or     al,0x0
   140047e5c:	sbb    esi,DWORD PTR [rbx+rcx*1]
   140047e5f:	add    BYTE PTR [rdi],cl
   140047e61:	push   rdx
   140047e62:	or     esp,eax
   140047e64:	or     DWORD PTR [rax+0x8],esi
   140047e67:	(bad)  
   140047e68:	ss push rsi
   140047e6a:	add    DWORD PTR [rax],eax
   140047e6c:	rex.W (bad) 
   140047e6e:	add    al,0x0
   140047e70:	and    DWORD PTR [rax],eax
   140047e72:	add    BYTE PTR [rax],al
   140047e74:	mov    WORD PTR [rcx],es
   140047e76:	add    DWORD PTR [rax],eax
   140047e78:	adc    al,0x3
   140047e7a:	add    DWORD PTR [rax],eax
   140047e7c:	push   rsp
   140047e7d:	jle    0x140047e83
   140047e7f:	add    bh,bh
   140047e81:	(bad)  
   140047e82:	(bad)  
   140047e83:	call   rbx
   140047e85:	movsxd eax,DWORD PTR [rcx]
   140047e87:	add    BYTE PTR [rax],al
   140047e89:	add    BYTE PTR [rax],al
   140047e8b:	add    bl,ah
   140047e8d:	movsxd eax,DWORD PTR [rcx]
   140047e8f:	add    BYTE PTR [rcx],al
   140047e91:	add    BYTE PTR [rax],al
   140047e93:	add    bl,dh
   140047e95:	movsxd eax,DWORD PTR [rcx]
   140047e97:	add    BYTE PTR [rdx],al
   140047e99:	add    BYTE PTR [rax],al
   140047e9b:	add    BYTE PTR [rbx],al
   140047e9d:	add    DWORD PTR fs:[rax],eax
   140047ea0:	add    eax,DWORD PTR [rax]
   140047ea2:	add    BYTE PTR [rax],al
   140047ea4:	(bad)  
   140047ea5:	add    DWORD PTR fs:[rax],eax
   140047ea8:	add    al,0x0
   140047eaa:	add    BYTE PTR [rax],al
   140047eac:	sub    DWORD PTR [rcx+rax*1+0x0],esp
   140047eb0:	add    eax,0x3c000000
   140047eb5:	add    DWORD PTR fs:[rax],eax
   140047eb8:	(bad)  
   140047eb9:	add    BYTE PTR [rax],al
   140047ebb:	add    BYTE PTR [rdi+0x64],cl
   140047ebe:	add    DWORD PTR [rax],eax
   140047ec0:	mov    WORD PTR [rcx],es
   140047ec2:	add    DWORD PTR [rax],eax
   140047ec4:	(bad)  
   140047ec5:	(bad)  
   140047ec6:	(bad)  
   140047ec7:	jmp    FWORD PTR [rsi+0x7000101]
   140047ecd:	add    BYTE PTR [rax],al
   140047ecf:	add    bl,bl
   140047ed1:	add    DWORD PTR [rcx],eax
   140047ed3:	add    BYTE PTR [rsi],al
   140047ed5:	add    BYTE PTR [rax],al
   140047ed7:	add    BYTE PTR [rsi],cl
   140047ed9:	add    al,BYTE PTR [rcx]
   140047edb:	add    BYTE PTR [rip+0x33000000],al        # 0x173047ee1
   140047ee1:	add    al,BYTE PTR [rcx]
   140047ee3:	add    BYTE PTR [rax+rax*1],al
   140047ee6:	add    BYTE PTR [rax],al
   140047ee8:	outs   dx,DWORD PTR ds:[rsi]
   140047ee9:	add    al,BYTE PTR [rcx]
   140047eeb:	add    BYTE PTR [rbx],al
   140047eed:	add    BYTE PTR [rax],al
   140047eef:	add    BYTE PTR [rbp+0x2],bh
   140047ef2:	add    DWORD PTR [rax],eax
   140047ef4:	add    al,BYTE PTR [rax]
   140047ef6:	add    BYTE PTR [rax],al
   140047ef8:	mov    eax,DWORD PTR [rdx]
   140047efa:	add    DWORD PTR [rax],eax
   140047efc:	add    DWORD PTR [rax],eax
   140047efe:	add    BYTE PTR [rax],al
   140047f00:	xchg   esi,eax
   140047f01:	add    al,BYTE PTR [rcx]
   140047f03:	add    BYTE PTR [rax],al
   140047f05:	add    BYTE PTR [rax],al
   140047f07:	add    BYTE PTR [rbx-0xfffefe],ah
   140047f0d:	(bad)  
   140047f0e:	(bad)  
   140047f0f:	dec    edx
   140047f11:	add    al,BYTE PTR [rcx]
   140047f13:	add    BYTE PTR [rsi],al
   140047f15:	add    BYTE PTR [rax],al
   140047f17:	add    ah,bl
   140047f19:	add    al,BYTE PTR [rcx]
   140047f1b:	add    BYTE PTR [rip+0xffffffffee000000],al        # 0x12e047f21
   140047f21:	add    al,BYTE PTR [rcx]
   140047f23:	add    BYTE PTR [rsi],al
   140047f25:	add    BYTE PTR [rax],al
   140047f27:	add    BYTE PTR [rcx],al
   140047f29:	add    eax,DWORD PTR [rcx]
   140047f2b:	add    BYTE PTR [rip+0x70000000],al        # 0x1b0047f31
   140047f31:	mov    BYTE PTR [rdx],al
   140047f33:	add    BYTE PTR [rdi],al
   140047f35:	add    BYTE PTR [rax],al
   140047f37:	add    BYTE PTR [rbp+0x288],dh
   140047f3d:	add    BYTE PTR [rax],al
   140047f3f:	add    BYTE PTR [rcx],al
   140047f41:	adc    eax,0x74150008
   140047f46:	or     BYTE PTR [rax],al
   140047f48:	adc    eax,0x15000764
   140047f4d:	xor    al,0x6
   140047f4f:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e49087
   140047f55:	add    BYTE PTR [rax],al
   140047f57:	add    BYTE PTR [rbx+rax*1],bl
   140047f5a:	add    DWORD PTR [rax],eax
   140047f5c:	jp     0x140047f61
   140047f5e:	add    DWORD PTR [rax],eax
   140047f60:	rex jg 0x140047f67
   140047f63:	add    BYTE PTR [rcx],dl
   140047f65:	sbb    al,0x6
   140047f67:	add    BYTE PTR [rsp+riz*2],bl
   140047f6a:	or     eax,DWORD PTR [rax]
   140047f6c:	sbb    BYTE PTR [rdx+rcx*1],dh
   140047f6f:	add    BYTE PTR [rdx+rdx*2],cl
   140047f72:	or     BYTE PTR [rax+0x36],dh
   140047f75:	push   rsi
   140047f76:	add    DWORD PTR [rax],eax
   140047f78:	jo     0x140047f81
   140047f7a:	add    al,0x0
   140047f7c:	(bad)  
   140047f7d:	(bad)  
   140047f7e:	(bad)  
   140047f7f:	jmp    FWORD PTR [rax+0x64]
   140047f82:	add    DWORD PTR [rax],eax
   140047f84:	add    BYTE PTR [rax],al
   140047f86:	add    BYTE PTR [rax],al
   140047f88:	js     0x140047fee
   140047f8a:	add    DWORD PTR [rax],eax
   140047f8c:	add    DWORD PTR [rax],eax
   140047f8e:	add    BYTE PTR [rax],al
   140047f90:	mov    BYTE PTR [rcx+rax*1+0x0],ah
   140047f94:	add    al,BYTE PTR [rax]
   140047f96:	add    BYTE PTR [rax],al
   140047f98:	cwde   
   140047f99:	add    DWORD PTR fs:[rax],eax
   140047f9c:	add    eax,DWORD PTR [rax]
   140047f9e:	add    BYTE PTR [rax],al
   140047fa0:	stos   DWORD PTR es:[rdi],eax
   140047fa1:	add    DWORD PTR fs:[rax],eax
   140047fa4:	add    al,0x0
   140047fa6:	add    BYTE PTR [rax],al
   140047fa8:	mov    esi,0x80000164
   140047fad:	add    eax,DWORD PTR [rcx]
   140047faf:	add    bh,bh
   140047fb1:	(bad)  
   140047fb2:	(bad)  
   140047fb3:	push   QWORD PTR [rdi+0x103]
   140047fb9:	add    BYTE PTR [rax],al
   140047fbb:	add    bl,al
   140047fbd:	add    eax,DWORD PTR [rcx]
   140047fbf:	add    BYTE PTR [rcx],al
   140047fc1:	add    BYTE PTR [rax],al
   140047fc3:	add    ch,cl
   140047fc5:	add    eax,DWORD PTR [rcx]
   140047fc7:	add    BYTE PTR [rdx],al
   140047fc9:	add    BYTE PTR [rax],al
   140047fcb:	add    dl,bl
   140047fcd:	add    eax,DWORD PTR [rcx]
   140047fcf:	add    BYTE PTR [rbx],al
   140047fd1:	add    BYTE PTR [rax],al
   140047fd3:	add    bh,ah
   140047fd5:	add    eax,DWORD PTR [rcx]
   140047fd7:	add    BYTE PTR [rax+rax*1],al
   140047fda:	add    BYTE PTR [rax],al
   140047fdc:	add    BYTE PTR [rcx+rax*1],al
   140047fdf:	add    BYTE PTR [rip+0x1c000000],al        # 0x15c047fe5
   140047fe5:	add    al,0x1
   140047fe7:	add    BYTE PTR [rax+rax*1],al
   140047fea:	add    BYTE PTR [rax],al
   140047fec:	rex.B add al,0x1
   140047fef:	add    bh,bh
   140047ff1:	(bad)  
   140047ff2:	(bad)  
   140047ff3:	call   QWORD PTR [rsp+rax*1+0x1]
   140047ff7:	add    BYTE PTR [rip+0x1000000],al        # 0x141047ffd
   140047ffd:	sbb    al,0xc
   140047fff:	add    BYTE PTR [rsp+riz*2],bl
   140048002:	or     al,0x0
   140048004:	sbb    al,0x54
   140048006:	or     eax,DWORD PTR [rax]
   140048008:	sbb    al,0x34
   14004800a:	or     al,BYTE PTR [rax]
   14004800c:	sbb    al,0x32
   14004800e:	sbb    al,dh
   140048010:	(bad)  
   140048011:	loopne 0x140048027
   140048013:	rcl    BYTE PTR [rdx],1
   140048015:	rcl    BYTE PTR [rax],0x70
   140048018:	and    DWORD PTR [rax],eax
   14004801a:	add    BYTE PTR [rax],al
   14004801c:	(bad)  
   14004801d:	add    al,0x1
   14004801f:	add    BYTE PTR [rbp+rax*1+0x1],dh
   140048023:	add    ah,bh
   140048025:	jg     0x14004802b
   140048027:	add    BYTE PTR [rcx],dl
   140048029:	and    al,0xc
   14004802b:	add    BYTE PTR [rsp+riz*2],ah
   14004802e:	adc    DWORD PTR [rax],eax
   140048030:	and    BYTE PTR [rax+rdx*1+0x0],dl
   140048034:	sbb    al,0x34
   140048036:	lldt   WORD PTR [rax]
   140048039:	jb     0x140048047
   14004803b:	lock or ah,al
   14004803e:	or     al,dl
   140048040:	(bad)  
   140048041:	rol    BYTE PTR [rax+rsi*2],0x36
   140048045:	push   rsi
   140048046:	add    DWORD PTR [rax],eax
   140048048:	cmp    BYTE PTR [rax],cl
   14004804a:	add    al,0x0
   14004804c:	and    DWORD PTR [rax],eax
   14004804e:	add    BYTE PTR [rax],al
   140048050:	xor    BYTE PTR [rsi],al
   140048052:	add    DWORD PTR [rax],eax
   140048054:	add    BYTE PTR [rdi],0x1
   140048057:	add    BYTE PTR [rax],ch
   140048059:	add    BYTE PTR [rax+rax*1],0xff
   14004805d:	(bad)  
   14004805e:	(bad)  
   14004805f:	call   rsp
   140048061:	add    DWORD PTR fs:[rax],eax
   140048064:	(bad)  
   140048065:	(bad)  
   140048066:	(bad)  
   140048067:	jmp    rax
   140048069:	add    DWORD PTR fs:[rax],eax
   14004806c:	xor    BYTE PTR [rsi],al
   14004806e:	add    DWORD PTR [rax],eax
   140048070:	(bad)  
   140048071:	(bad)  
   140048072:	(bad)  
   140048073:	dec    edx
   140048075:	(bad)  
   140048076:	add    DWORD PTR [rax],eax
   140048078:	add    DWORD PTR [rax],eax
   14004807a:	add    BYTE PTR [rax],al
   14004807c:	out    0x6,eax
   14004807e:	add    DWORD PTR [rax],eax
   140048080:	(bad)  
   140048081:	(bad)  
   140048082:	(bad)  
   140048083:	call   QWORD PTR [rcx+rcx*4-0xfffe]
   14004808a:	(bad)  
   14004808b:	call   rdx
   14004808d:	mov    DWORD PTR [rdx],eax
   14004808f:	add    BYTE PTR [rax],al
   140048091:	add    BYTE PTR [rax],al
   140048093:	add    bh,ah
   140048095:	mov    DWORD PTR [rdx],eax
   140048097:	add    bh,bh
   140048099:	(bad)  
   14004809a:	(bad)  
   14004809b:	jmp    FWORD PTR [rbx-0x76]
   14004809e:	add    al,BYTE PTR [rax]
   1400480a0:	add    DWORD PTR [rax],eax
   1400480a2:	add    BYTE PTR [rax],al
   1400480a4:	jae    0x140048030
   1400480a6:	add    al,BYTE PTR [rax]
   1400480a8:	(bad)  
   1400480a9:	(bad)  
   1400480aa:	(bad)  
   1400480ab:	call   QWORD PTR [rcx]
   1400480ad:	sbb    eax,0x741d0008
   1400480b2:	or     al,BYTE PTR [rax]
   1400480b4:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   1400480b8:	adc    eax,0x9000834
   1400480bd:	push   rdx
   1400480be:	add    eax,0x15636e0
   1400480c3:	add    al,dh
   1400480c5:	add    al,0x4
   1400480c7:	add    BYTE PTR [rcx],ah
   1400480c9:	add    BYTE PTR [rax],al
   1400480cb:	add    BYTE PTR [rax-0x23fffef9],dl
   1400480d1:	(bad)  
   1400480d2:	add    DWORD PTR [rax],eax
   1400480d4:	lods   al,BYTE PTR ds:[rsi]
   1400480d5:	add    BYTE PTR [rax+rax*1],0xff
   1400480d9:	(bad)  
   1400480da:	(bad)  
   1400480db:	inc    DWORD PTR [rdx+riz*2+0x1]
   1400480df:	add    BYTE PTR [rax-0xfffef9],dl
   1400480e5:	(bad)  
   1400480e6:	(bad)  
   1400480e7:	(bad)  
   1400480e8:	(bad)  
   1400480e9:	mov    al,BYTE PTR [rdx]
   1400480eb:	add    bh,bh
   1400480ed:	(bad)  
   1400480ee:	(bad)  
   1400480ef:	inc    DWORD PTR [rdi]
   1400480f1:	mov    eax,DWORD PTR [rdx]
   1400480f3:	add    BYTE PTR [rax],al
   1400480f5:	add    BYTE PTR [rax],al
   1400480f7:	add    BYTE PTR [rdi],ah
   1400480f9:	mov    eax,DWORD PTR [rdx]
   1400480fb:	add    bh,bh
   1400480fd:	(bad)  
   1400480fe:	(bad)  
   1400480ff:	call   QWORD PTR [rcx]
   140048101:	sbb    al,0x6
   140048103:	add    BYTE PTR [rsp+riz*2],bl
   140048106:	or     al,BYTE PTR [rax]
   140048108:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004810b:	add    BYTE PTR [rdx+rdx*2],cl
   14004810e:	or     BYTE PTR [rax+0x36],dh
   140048111:	push   rsi
   140048112:	add    DWORD PTR [rax],eax
   140048114:	rex add eax,0x210004
   14004811a:	add    BYTE PTR [rax],al
   14004811c:	sub    BYTE PTR [rax],cl
   14004811e:	add    DWORD PTR [rax],eax
   140048120:	mov    eax,0x108
   140048125:	add    DWORD PTR [rax+rax*1],0xffffffff
   14004812c:	repnz add DWORD PTR fs:[rax],eax
   140048130:	sub    BYTE PTR [rax],cl
   140048132:	add    DWORD PTR [rax],eax
   140048134:	(bad)  
   140048135:	(bad)  
   140048136:	(bad)  
   140048137:	dec    DWORD PTR [rbp+0x8]
   14004813a:	add    DWORD PTR [rax],eax
   14004813c:	add    BYTE PTR [rax],al
   14004813e:	add    BYTE PTR [rax],al
   140048140:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140048141:	or     BYTE PTR [rcx],al
   140048143:	add    bh,bh
   140048145:	(bad)  
   140048146:	(bad)  
   140048147:	dec    DWORD PTR [rdx-0x75]
   14004814a:	add    al,BYTE PTR [rax]
   14004814c:	add    BYTE PTR [rax],al
   14004814e:	add    BYTE PTR [rax],al
   140048150:	add    DWORD PTR [rcx],ebx
   140048152:	or     al,BYTE PTR [rax]
   140048154:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140048158:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14004815c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140048160:	sbb    DWORD PTR [rsi+rax*1],esi
   140048163:	add    BYTE PTR [rcx],bl
   140048165:	xor    dl,BYTE PTR [rip+0x21e0]        # 0x14004a34b
   14004816b:	add    al,al
   14004816d:	or     BYTE PTR [rcx],al
   14004816f:	add    BYTE PTR [rcx],dh
   140048171:	or     DWORD PTR [rcx],eax
   140048173:	add    BYTE PTR [rax-0x7f],dl
   140048176:	add    al,0x0
   140048178:	adc    DWORD PTR [rsi+rax*1],ebx
   14004817b:	add    BYTE PTR [rsp+riz*2],bl
   14004817e:	or     al,BYTE PTR [rax]
   140048180:	sbb    BYTE PTR [rcx+rcx*1],dh
   140048183:	add    BYTE PTR [rdx+rdx*2],cl
   140048186:	or     BYTE PTR [rax+0x36],dh
   140048189:	push   rsi
   14004818a:	add    DWORD PTR [rax],eax
   14004818c:	mov    al,0x8
   14004818e:	add    al,0x0
   140048190:	and    DWORD PTR [rax],eax
   140048192:	add    BYTE PTR [rax],al
   140048194:	cmp    BYTE PTR [rcx],cl
   140048196:	add    DWORD PTR [rax],eax
   140048198:	xchg   ebx,eax
   140048199:	or     DWORD PTR [rcx],eax
   14004819b:	add    BYTE PTR [rax-0x7f],bh
   14004819e:	add    al,0x0
   1400481a0:	(bad)  
   1400481a1:	(bad)  
   1400481a2:	(bad)  
   1400481a3:	inc    DWORD PTR [riz*2+0x1]
   1400481aa:	add    BYTE PTR [rax],al
   1400481ac:	adc    BYTE PTR [rbp+0x1],ah
   1400481af:	add    BYTE PTR [rax],bh
   1400481b1:	or     DWORD PTR [rcx],eax
   1400481b3:	add    bh,bh
   1400481b5:	(bad)  
   1400481b6:	(bad)  
   1400481b7:	jmp    QWORD PTR [rcx+0x9]
   1400481ba:	add    DWORD PTR [rax],eax
   1400481bc:	add    DWORD PTR [rax],eax
   1400481be:	add    BYTE PTR [rax],al
   1400481c0:	outs   dx,BYTE PTR ds:[rsi]
   1400481c1:	or     DWORD PTR [rcx],eax
   1400481c3:	add    BYTE PTR [rax],al
   1400481c5:	add    BYTE PTR [rax],al
   1400481c7:	add    BYTE PTR [rcx+0x9],bh
   1400481ca:	add    DWORD PTR [rax],eax
   1400481cc:	(bad)  
   1400481cd:	(bad)  
   1400481ce:	(bad)  
   1400481cf:	(bad)  
   1400481d0:	mov    esi,0x100028b
   1400481d5:	add    BYTE PTR [rax],al
   1400481d7:	add    BYTE PTR [rcx],dl
   1400481d9:	sbb    al,0x6
   1400481db:	add    BYTE PTR [rsp+riz*2],bl
   1400481de:	or     al,BYTE PTR [rax]
   1400481e0:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400481e3:	add    BYTE PTR [rdx+rdx*2],cl
   1400481e6:	or     BYTE PTR [rax+0x36],dh
   1400481e9:	push   rsi
   1400481ea:	add    DWORD PTR [rax],eax
   1400481ec:	fmul   DWORD PTR [rax]
   1400481ee:	add    al,0x0
   1400481f0:	(bad)  
   1400481f1:	(bad)  
   1400481f2:	(bad)  
   1400481f3:	jmp    QWORD PTR [rsi]
   1400481f5:	add    DWORD PTR gs:[rax],eax
   1400481f8:	fmul   DWORD PTR [rcx]
   1400481fa:	add    DWORD PTR [rax],eax
   1400481fc:	(bad)  
   1400481fd:	(bad)  
   1400481fe:	(bad)  
   1400481ff:	(bad)  
   140048200:	std    
   140048201:	or     DWORD PTR [rcx],eax
   140048203:	add    BYTE PTR [rax],al
   140048205:	add    BYTE PTR [rax],al
   140048207:	add    BYTE PTR [rdi],dl
   140048209:	or     al,BYTE PTR [rcx]
   14004820b:	add    bh,bh
   14004820d:	(bad)  
   14004820e:	(bad)  
   14004820f:	inc    DWORD PTR [rcx]
   140048211:	sbb    eax,0x741d000c
   140048216:	or     eax,0xc641d00
   14004821b:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d048d75
   140048221:	xor    al,0xa
   140048223:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f49b7b
   140048229:	loopne 0x140048240
   14004822b:	shl    BYTE PTR [rcx],0x0
   14004822e:	add    BYTE PTR [rax],al
   140048230:	xor    BYTE PTR [rdx],cl
   140048232:	add    DWORD PTR [rax],eax
   140048234:	(bad)  
   140048235:	or     eax,DWORD PTR [rcx]
   140048237:	add    BYTE PTR [rax],dl
   140048239:	(bad)  
   14004823a:	add    al,0x0
   14004823c:	add    DWORD PTR [rax],ebx
   14004823e:	or     al,BYTE PTR [rax]
   140048240:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140048244:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140048248:	sbb    BYTE PTR [rax+rcx*1],dh
   14004824b:	add    BYTE PTR [rax],bl
   14004824d:	xor    dl,BYTE PTR [rax+rsi*8]
   140048250:	adc    ah,al
   140048252:	adc    BYTE PTR [rax+0x21],dh
   140048255:	add    BYTE PTR [rax],al
   140048257:	add    BYTE PTR [rax],ah
   140048259:	or     eax,DWORD PTR [rcx]
   14004825b:	add    bl,dl
   14004825d:	or     eax,DWORD PTR [rcx]
   14004825f:	add    BYTE PTR [rdx+rax*4],bh
   140048262:	add    al,0x0
   140048264:	add    DWORD PTR [rcx],ebx
   140048266:	or     al,BYTE PTR [rax]
   140048268:	sbb    esp,esp
   14004826a:	or     DWORD PTR [rax],eax
   14004826c:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   140048270:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   140048274:	sbb    DWORD PTR [rsi+rax*1],esi
   140048277:	add    BYTE PTR [rcx],bl
   140048279:	xor    dl,BYTE PTR [rip+0xa1701f0]        # 0x14a1b846f
   14004827f:	add    BYTE PTR [rdi],dl
   140048281:	xor    al,0xe
   140048283:	add    BYTE PTR [rdi],dl
   140048285:	xor    dl,BYTE PTR [rax]
   140048287:	lock (bad) 
   140048289:	loopne 0x140048297
   14004828b:	ror    BYTE PTR [rdx],1
   14004828d:	ror    BYTE PTR [rax],0x70
   140048290:	(bad)  
   140048291:	(bad)  
   140048292:	(bad)  
   140048293:	push   rax
   140048294:	and    DWORD PTR [rax],eax
   140048296:	add    BYTE PTR [rax],al
   140048298:	(bad)  
   140048299:	or     al,0x1
   14004829b:	add    ch,bl
   14004829d:	or     al,0x1
   14004829f:	add    BYTE PTR [rdx+rax*4+0x4],bh
   1400482a3:	add    BYTE PTR [rcx],al
   1400482a5:	sbb    DWORD PTR [rdx],ecx
   1400482a7:	add    BYTE PTR [rcx],bl
   1400482a9:	in     al,0x9
   1400482ab:	add    BYTE PTR [rcx],bl
   1400482ad:	je     0x1400482b7
   1400482af:	add    BYTE PTR [rcx],bl
   1400482b1:	fs (bad) 
   1400482b3:	add    BYTE PTR [rcx],bl
   1400482b5:	xor    al,0x6
   1400482b7:	add    BYTE PTR [rcx],bl
   1400482b9:	xor    dl,BYTE PTR [rip+0x21f0]        # 0x14004a4af
   1400482bf:	add    BYTE PTR [rax+0xd],al
   1400482c2:	add    DWORD PTR [rax],eax
   1400482c4:	(bad)  
   1400482c5:	or     eax,0x82a40001
   1400482ca:	add    al,0x0
   1400482cc:	add    DWORD PTR [rcx],ebx
   1400482ce:	or     al,BYTE PTR [rax]
   1400482d0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   1400482d4:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   1400482d8:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400482dc:	sbb    DWORD PTR [rsi+rax*1],esi
   1400482df:	add    BYTE PTR [rcx],bl
   1400482e1:	xor    dl,BYTE PTR [rip+0xa1801e0]        # 0x14a1c84c7
   1400482e7:	add    BYTE PTR [rax],bl
   1400482e9:	xor    al,0xe
   1400482eb:	add    BYTE PTR [rax],bl
   1400482ed:	xor    dl,BYTE PTR [rax+rsi*8]
   1400482f0:	adc    ah,al
   1400482f2:	adc    al,dl
   1400482f4:	(bad)  
   1400482f5:	ror    BYTE PTR [rax+rsi*2],0xb
   1400482f9:	(bad)  
   1400482fa:	or     dl,BYTE PTR [rax+0x21]
   1400482fd:	add    BYTE PTR [rax],al
   1400482ff:	add    al,ah
   140048301:	(bad)  
   140048302:	add    DWORD PTR [rax],eax
   140048304:	adc    BYTE PTR gs:[rcx],al
   140048307:	add    ah,ah
   140048309:	(bad)  
   14004830a:	add    al,0x0
   14004830c:	adc    DWORD PTR [rax],ebp
   14004830e:	or     al,0x0
   140048310:	sub    BYTE PTR [rdi+rdx*1+0x0],ah
   140048314:	and    al,0x54
   140048316:	adc    eax,0x14342000
   14004831b:	add    BYTE PTR [rdx+rdx*8],dl
   14004831e:	adc    al,dh
   140048320:	(bad)  
   140048321:	loopne 0x14004832f
   140048323:	ror    BYTE PTR [rdx],1
   140048325:	ror    BYTE PTR [rax],0x70
   140048328:	ss push rsi
   14004832a:	add    DWORD PTR [rax],eax
   14004832c:	add    BYTE PTR [rsi],0x4
   14004832f:	add    BYTE PTR [rcx],ah
   140048331:	add    BYTE PTR [rax],al
   140048333:	add    BYTE PTR [rax+0x10],dh
   140048336:	add    DWORD PTR [rax],eax
   140048338:	adc    al,BYTE PTR ss:[rcx]
   14004833b:	add    BYTE PTR [rbx+rax*4],cl
   14004833e:	add    al,0x0
   140048340:	(bad)  
   140048341:	(bad)  
   140048342:	(bad)  
   140048343:	(bad)  
   140048344:	cmp    BYTE PTR [rbp+0x1],ah
   140048347:	add    BYTE PTR [rax+0x10],dh
   14004834a:	add    DWORD PTR [rax],eax
   14004834c:	(bad)  
   14004834d:	(bad)  
   14004834e:	(bad)  
   14004834f:	dec    ecx
   140048351:	adc    BYTE PTR [rcx],al
   140048353:	add    BYTE PTR [rax],al
   140048355:	add    BYTE PTR [rax],al
   140048357:	add    BYTE PTR [rbx-0xfffeef],bh
   14004835d:	(bad)  
   14004835e:	(bad)  
   14004835f:	jmp    QWORD PTR [rdx-0x72]
   140048362:	add    al,BYTE PTR [rax]
   140048364:	(bad)  
   140048365:	(bad)  
   140048366:	(bad)  
   140048367:	jmp    FWORD PTR [rsi+rcx*4+0x2]
   14004836b:	add    BYTE PTR [rax],al
   14004836d:	add    BYTE PTR [rax],al
   14004836f:	add    BYTE PTR [rdi+rcx*4],ch
   140048372:	add    al,BYTE PTR [rax]
   140048374:	(bad)  
   140048375:	(bad)  
   140048376:	(bad)  
   140048377:	inc    DWORD PTR [rcx]
   140048379:	sbb    eax,0x741d000c
   14004837e:	or     eax,DWORD PTR [rax]
   140048380:	sbb    eax,0x1d000a64
   140048385:	push   rsp
   140048386:	or     DWORD PTR [rax],eax
   140048388:	sbb    eax,0x1d000834
   14004838d:	xor    bl,BYTE PTR [rcx]
   14004838f:	lock (bad) 
   140048391:	loopne 0x1400483a8
   140048393:	rcl    BYTE PTR [rcx],0x1c
   140048396:	(bad)  
   140048397:	add    BYTE PTR [rsp+riz*2],bl
   14004839a:	or     al,BYTE PTR [rax]
   14004839c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004839f:	add    BYTE PTR [rdx+rdx*2],cl
   1400483a2:	or     BYTE PTR [rax+0x36],dh
   1400483a5:	push   rsi
   1400483a6:	add    DWORD PTR [rax],eax
   1400483a8:	clc    
   1400483a9:	(bad)  
   1400483aa:	add    al,0x0
   1400483ac:	(bad)  
   1400483ad:	(bad)  
   1400483ae:	(bad)  
   1400483af:	dec    DWORD PTR [rdx+0x65]
   1400483b2:	add    DWORD PTR [rax],eax
   1400483b4:	add    BYTE PTR [rax],al
   1400483b6:	add    BYTE PTR [rax],al
   1400483b8:	pop    rbp
   1400483b9:	add    DWORD PTR gs:[rax],eax
   1400483bc:	add    DWORD PTR [rax],eax
   1400483be:	add    BYTE PTR [rax],al
   1400483c0:	imul   esp,DWORD PTR [rbp+0x1],0x200
   1400483c7:	add    BYTE PTR [rbp+riz*2+0x1],bh
   1400483cb:	add    ah,ch
   1400483cd:	adc    al,BYTE PTR [rcx]
   1400483cf:	add    bh,bh
   1400483d1:	(bad)  
   1400483d2:	(bad)  
   1400483d3:	jmp    FWORD PTR [rbx+rdx*1]
   1400483d6:	add    DWORD PTR [rax],eax
   1400483d8:	add    BYTE PTR [rax],al
   1400483da:	add    BYTE PTR [rax],al
   1400483dc:	xor    eax,0x1000113
   1400483e1:	add    BYTE PTR [rax],al
   1400483e3:	add    BYTE PTR [rbx+rdx*1],bh
   1400483e6:	add    DWORD PTR [rax],eax
   1400483e8:	add    al,BYTE PTR [rax]
   1400483ea:	add    BYTE PTR [rax],al
   1400483ec:	rex.XB adc eax,DWORD PTR [r9]
   1400483ef:	add    BYTE PTR [rbx],al
   1400483f1:	add    BYTE PTR [rax],al
   1400483f3:	add    BYTE PTR [rcx],bh
   1400483f5:	adc    al,0x1
   1400483f7:	add    bh,bh
   1400483f9:	(bad)  
   1400483fa:	(bad)  
   1400483fb:	call   FWORD PTR [rcx]
   1400483fd:	sub    DWORD PTR [rax],ecx
   1400483ff:	add    BYTE PTR [rax],bl
   140048401:	add    DWORD PTR [rbx+0x0],ecx
   140048404:	or     eax,esi
   140048406:	(bad)  
   140048407:	loopne 0x14004840e
   140048409:	jo     0x14004840f
   14004840b:	(bad)  
   14004840c:	add    esi,DWORD PTR [rax]
   14004840e:	add    dl,BYTE PTR [rax-0x48]
   140048411:	rex.WX add QWORD PTR [rax],rax
   140048414:	add    al,BYTE PTR [rax]
   140048417:	add    BYTE PTR [rcx],bl
   140048419:	sub    BYTE PTR [rip+0x14341600],al        # 0x154389a1f
   14004841f:	add    BYTE PTR [rsi],dl
   140048421:	add    DWORD PTR [rdx],edx
   140048423:	add    BYTE PTR [rdi],cl
   140048425:	jo     0x140048427
   140048427:	add    BYTE PTR [rax-0x7ffffeb6],bh
   14004842d:	add    BYTE PTR [rax],al
   14004842f:	add    BYTE PTR [rcx],al
   140048431:	(bad)  
   140048432:	add    al,BYTE PTR [rax]
   140048434:	(bad)  
   140048435:	xor    al,BYTE PTR [rdx]
   140048437:	xor    BYTE PTR [rcx],ah
   140048439:	add    BYTE PTR [rax],al
   14004843b:	add    BYTE PTR [rax+0x16],bh
   14004843e:	add    DWORD PTR [rax],eax
   140048440:	stos   BYTE PTR es:[rdi],al
   140048441:	(bad)  
   140048442:	add    DWORD PTR [rax],eax
   140048444:	xor    BYTE PTR [rsp+rax*1+0xc1d0100],al
   14004844b:	add    BYTE PTR [rip+0x1d000b74],bl        # 0x15d048fc5
   140048451:	or     al,BYTE PTR fs:[rax]
   140048454:	sbb    eax,0x1d000954
   140048459:	xor    al,0x8
   14004845b:	add    BYTE PTR [rip+0x17f01932],bl        # 0x157f49d93
   140048461:	loopne 0x140048478
   140048463:	shl    BYTE PTR [rcx],0x0
   140048466:	add    BYTE PTR [rax],al
   140048468:	fcom   QWORD PTR [rsi]
   14004846a:	add    DWORD PTR [rax],eax
   14004846c:	(bad)  
   14004846d:	(bad)  
   14004846e:	add    DWORD PTR [rax],eax
   140048470:	rex.W test BYTE PTR [rax+rax*1],al
   140048474:	sbb    DWORD PTR [rdi+rax*1],esp
   140048477:	add    BYTE PTR [rdx+riz*2],bl
   14004847a:	sbb    al,dh
   14004847c:	(bad)  
   14004847d:	loopne 0x140048493
   14004847f:	rcl    BYTE PTR [rdx],1
   140048481:	jo     0x140048494
   140048483:	(bad)  
   140048484:	adc    BYTE PTR [rax],dh
   140048486:	add    BYTE PTR [rax],al
   140048488:	ss push rsi
   14004848a:	add    DWORD PTR [rax],eax
   14004848c:	loopne 0x140048493
   14004848e:	add    al,0x0
   140048490:	and    DWORD PTR [rax],eax
   140048492:	add    BYTE PTR [rax],al
   140048494:	add    al,0x18
   140048496:	add    DWORD PTR [rax],eax
   140048498:	out    dx,al
   140048499:	sbb    BYTE PTR [rcx],al
   14004849b:	add    BYTE PTR [rsp+rax*4+0x4],dh
   14004849f:	add    bh,bh
   1400484a1:	(bad)  
   1400484a2:	(bad)  
   1400484a3:	inc    DWORD PTR [rax]
   1400484a5:	add    BYTE PTR [rax],al
   1400484a7:	add    BYTE PTR [rax],al
   1400484a9:	add    BYTE PTR [rax],al
   1400484ab:	add    BYTE PTR [rbp-0xfffe9b],dl
   1400484b1:	(bad)  
   1400484b2:	(bad)  
   1400484b3:	inc    DWORD PTR [rax]
   1400484b5:	add    BYTE PTR [rax],al
   1400484b7:	add    BYTE PTR [rax],al
   1400484b9:	add    BYTE PTR [rax],al
   1400484bb:	add    BYTE PTR [rcx],al
   1400484bd:	add    BYTE PTR [rax],al
   1400484bf:	add    BYTE PTR [rdx],al
   1400484c1:	add    BYTE PTR [rax],al
   1400484c3:	add    BYTE PTR [rcx],al
   1400484c5:	add    BYTE PTR [rax],al
   1400484c7:	add    ah,cl
   1400484c9:	test   BYTE PTR [rax+rax*1],al
   1400484cc:	add    BYTE PTR [rax],al
	...
   1400484d7:	add    BYTE PTR [rcx+0x38000165],ah
   1400484dd:	add    BYTE PTR [rax],al
   1400484df:	add    BYTE PTR [rax+rbx*1],al
   1400484e2:	add    DWORD PTR [rax],eax
   1400484e4:	(bad)  
   1400484e5:	(bad)  
   1400484e6:	(bad)  
   1400484e7:	dec    DWORD PTR [rbp+0x18]
   1400484ea:	add    DWORD PTR [rax],eax
   1400484ec:	add    BYTE PTR [rax],al
   1400484ee:	add    BYTE PTR [rax],al
   1400484f0:	pop    rsp
   1400484f1:	sbb    BYTE PTR [rcx],al
   1400484f3:	add    BYTE PTR [rcx],al
   1400484f5:	add    BYTE PTR [rax],al
   1400484f7:	add    BYTE PTR [rax+0x18],dh
   1400484fa:	add    DWORD PTR [rax],eax
   1400484fc:	add    BYTE PTR [rax],al
   1400484fe:	add    BYTE PTR [rax],al
   140048500:	js     0x14004851a
   140048502:	add    DWORD PTR [rax],eax
   140048504:	(bad)  
   140048505:	(bad)  
   140048506:	(bad)  
   140048507:	jmp    QWORD PTR [rcx+0x165]
   14004850d:	add    BYTE PTR [rax],al
   14004850f:	add    al,dl
   140048511:	pop    QWORD PTR [rdx]
   140048513:	add    bh,bh
   140048515:	(bad)  
   140048516:	(bad)  
   140048517:	(bad)  
   140048518:	fimul  DWORD PTR [rdi+0x10002]
   14004851e:	add    BYTE PTR [rax],al
   140048520:	loop   0x1400484b1
   140048522:	add    al,BYTE PTR [rax]
   140048524:	(bad)  
   140048525:	(bad)  
   140048526:	(bad)  
   140048527:	call   FWORD PTR [rcx]
   140048529:	or     al,BYTE PTR [rdx]
   14004852b:	add    BYTE PTR [rdx],cl
   14004852d:	xor    al,BYTE PTR [rsi]
   14004852f:	push   rax
   140048530:	ss push rsi
   140048532:	add    DWORD PTR [rax],eax
   140048534:	loopne 0x14004853b
   140048536:	add    al,0x0
   140048538:	sbb    DWORD PTR [rsi],ebx
   14004853a:	(bad)  
   14004853b:	add    BYTE PTR [rdi],cl
   14004853d:	fs (bad) 
   14004853f:	add    BYTE PTR [rdi],cl
   140048541:	xor    al,0xc
   140048543:	add    BYTE PTR [rdi],cl
   140048545:	xchg   edx,eax
   140048546:	or     esi,DWORD PTR [rax-0x48]
   140048549:	rex.WX add QWORD PTR [rax],rax
   14004854c:	rex.W add BYTE PTR [rax],al
   14004854f:	add    BYTE PTR [rcx],ah
   140048551:	add    BYTE PTR [rax],al
   140048553:	add    ah,dh
   140048555:	sbb    BYTE PTR [rcx],al
   140048557:	add    BYTE PTR [rax+0x38000119],bl
   14004855d:	test   DWORD PTR [rax+rax*1],eax
   140048560:	adc    DWORD PTR [rcx],ebx
   140048562:	(bad)  
   140048563:	add    BYTE PTR [rcx],bl
   140048565:	or     al,BYTE PTR fs:[rax]
   140048568:	adc    al,0x34
   14004856a:	or     BYTE PTR [rax],al
   14004856c:	(bad)  
   14004856d:	push   rdx
   14004856e:	add    dh,BYTE PTR [rax+0x36]
   140048571:	push   rsi
   140048572:	add    DWORD PTR [rax],eax
   140048574:	lock or DWORD PTR [rax+rax*1],eax
   140048578:	and    DWORD PTR [rax],eax
   14004857a:	add    BYTE PTR [rax],al
   14004857c:	movabs al,ds:0x6000011a48000119
   140048585:	test   DWORD PTR [rax+rax*1],eax
   140048588:	(bad)  
   140048589:	(bad)  
   14004858a:	(bad)  
   14004858b:	inc    edx
   14004858d:	add    DWORD PTR gs:[rax],eax
   140048590:	movabs al,ds:0xcbffffffff000119
   140048599:	sbb    DWORD PTR [rcx],eax
   14004859b:	add    BYTE PTR [rax],al
   14004859d:	add    BYTE PTR [rax],al
   14004859f:	add    bl,bl
   1400485a1:	sbb    DWORD PTR [rcx],eax
   1400485a3:	add    bh,bh
   1400485a5:	(bad)  
   1400485a6:	(bad)  
   1400485a7:	inc    DWORD PTR [rdx+rbx*1+0x1]
   1400485ab:	add    BYTE PTR [rax],al
   1400485ad:	add    BYTE PTR [rax],al
   1400485af:	add    BYTE PTR [rdx-0x70],bl
   1400485b2:	add    al,BYTE PTR [rax]
   1400485b4:	(bad)  
   1400485b5:	(bad)  
   1400485b6:	(bad)  
   1400485b7:	call   QWORD PTR [rcx]
   1400485b9:	sbb    BYTE PTR [rsi],al
   1400485bb:	add    BYTE PTR [rax],dl
   1400485bd:	mov    dl,0x9
   1400485bf:	lock (bad) 
   1400485c1:	loopne 0x1400485c8
   1400485c3:	rol    BYTE PTR [rbx],0x30
   1400485c6:	add    dl,BYTE PTR [rax+0x36]
   1400485c9:	push   rsi
   1400485ca:	add    DWORD PTR [rax],eax
   1400485cc:	enter  0x413,0x0
   1400485d0:	and    DWORD PTR [rax],eax
   1400485d2:	add    BYTE PTR [rax],al
   1400485d4:	push   rax
   1400485d5:	sbb    al,BYTE PTR [rcx]
   1400485d7:	add    ch,dh
   1400485d9:	sbb    al,BYTE PTR [rcx]
   1400485db:	add    BYTE PTR [rax-0xfffb7b],bh
   1400485e1:	(bad)  
   1400485e2:	(bad)  
   1400485e3:	call   rsp
   1400485e5:	add    DWORD PTR gs:[rax],eax
   1400485e8:	add    BYTE PTR [rax],al
   1400485ea:	add    BYTE PTR [rax],al
   1400485ec:	loopne 0x140048653
   1400485ee:	add    DWORD PTR [rax],eax
   1400485f0:	add    DWORD PTR [rax],eax
   1400485f2:	add    BYTE PTR [rax],al
   1400485f4:	in     al,dx
   1400485f5:	add    DWORD PTR gs:[rax],eax
   1400485f8:	add    al,BYTE PTR [rax]
   1400485fa:	add    BYTE PTR [rax],al
   1400485fc:	clc    
   1400485fd:	add    DWORD PTR gs:[rax],eax
   140048600:	add    eax,DWORD PTR [rax]
   140048602:	add    BYTE PTR [rax],al
   140048604:	add    al,0x66
   140048606:	add    DWORD PTR [rax],eax
   140048608:	push   rax
   140048609:	sbb    al,BYTE PTR [rcx]
   14004860b:	add    bh,bh
   14004860d:	(bad)  
   14004860e:	(bad)  
   14004860f:	push   QWORD PTR [rax+0x1a]
   140048612:	add    DWORD PTR [rax],eax
   140048614:	add    BYTE PTR [rax],al
   140048616:	add    BYTE PTR [rax],al
   140048618:	jne    0x140048634
   14004861a:	add    DWORD PTR [rax],eax
   14004861c:	add    DWORD PTR [rax],eax
   14004861e:	add    BYTE PTR [rax],al
   140048620:	jp     0x14004863c
   140048622:	add    DWORD PTR [rax],eax
   140048624:	add    al,BYTE PTR [rax]
   140048626:	add    BYTE PTR [rax],al
   140048628:	sbb    BYTE PTR [rdx],0x1
   14004862b:	add    BYTE PTR [rbx],al
   14004862d:	add    BYTE PTR [rax],al
   14004862f:	add    BYTE PTR [rdx+rbx*1+0x20001],bh
   140048636:	add    BYTE PTR [rax],al
   140048638:	(bad)  
   140048639:	sbb    al,BYTE PTR [rcx]
   14004863b:	add    BYTE PTR [rcx],al
   14004863d:	add    BYTE PTR [rax],al
   14004863f:	add    al,dl
   140048641:	sbb    al,BYTE PTR [rcx]
   140048643:	add    BYTE PTR [rax],al
   140048645:	add    BYTE PTR [rax],al
   140048647:	add    bl,bl
   140048649:	sbb    al,BYTE PTR [rcx]
   14004864b:	add    bh,bh
   14004864d:	(bad)  
   14004864e:	(bad)  
   14004864f:	call   QWORD PTR [rsi+0x3000290]
   140048655:	add    BYTE PTR [rax],al
   140048657:	add    BYTE PTR [rsi],ch
   140048659:	xchg   ecx,eax
   14004865a:	add    al,BYTE PTR [rax]
   14004865c:	add    al,0x0
   14004865e:	add    BYTE PTR [rax],al
   140048660:	gs xchg ecx,eax
   140048662:	add    al,BYTE PTR [rax]
   140048664:	add    eax,DWORD PTR [rax]
   140048666:	add    BYTE PTR [rax],al
   140048668:	add    DWORD PTR [rdi],ecx
   14004866a:	(bad)  
   14004866b:	add    BYTE PTR [rdi],cl
   14004866d:	fs (bad) 
   14004866f:	add    BYTE PTR [rdi],cl
   140048671:	xor    al,0x6
   140048673:	add    BYTE PTR [rdi],cl
   140048675:	xor    cl,BYTE PTR [rbx]
   140048677:	jo     0x14004869a
   140048679:	add    BYTE PTR [rax],al
   14004867b:	add    ah,bh
   14004867d:	sbb    al,BYTE PTR [rcx]
   14004867f:	add    ah,bh
   140048681:	sbb    eax,DWORD PTR [rcx]
   140048683:	add    BYTE PTR [rax-0x7a],ch
   140048686:	add    al,0x0
   140048688:	adc    DWORD PTR [rax],ebx
   14004868a:	add    al,0x0
   14004868c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004868f:	add    BYTE PTR [rdx],cl
   140048691:	push   rdx
   140048692:	(bad)  
   140048693:	jo     0x1400486cb
   140048695:	push   rsi
   140048696:	add    DWORD PTR [rax],eax
   140048698:	js     0x1400486a3
   14004869a:	add    al,0x0
   14004869c:	(bad)  
   14004869d:	(bad)  
   14004869e:	(bad)  
   14004869f:	call   QWORD PTR [rsi]
   1400486a1:	add    WORD PTR [rax],ax
   1400486a4:	add    BYTE PTR [rax],al
   1400486a6:	add    BYTE PTR [rax],al
   1400486a8:	add    WORD PTR es:[rax],ax
   1400486ac:	add    DWORD PTR [rax],eax
   1400486ae:	add    BYTE PTR [rax],al
   1400486b0:	add    WORD PTR ss:[rax],ax
   1400486b4:	add    al,BYTE PTR [rax]
   1400486b6:	add    BYTE PTR [rax],al
   1400486b8:	rex.RX
   1400486b9:	add    WORD PTR [rax],ax
   1400486bc:	add    eax,DWORD PTR [rax]
   1400486be:	add    BYTE PTR [rax],al
   1400486c0:	push   rsi
   1400486c1:	add    WORD PTR [rax],ax
   1400486c4:	add    al,0x0
   1400486c6:	add    BYTE PTR [rax],al
   1400486c8:	data16 add WORD PTR [rax],ax
   1400486cc:	add    eax,0x76000000
   1400486d1:	add    WORD PTR [rax],ax
   1400486d4:	(bad)  
   1400486d5:	add    BYTE PTR [rax],al
   1400486d7:	add    BYTE PTR [rsi+0x7000166],al
   1400486dd:	add    BYTE PTR [rax],al
   1400486df:	add    BYTE PTR [rsi+0x8000166],dl
   1400486e5:	add    BYTE PTR [rax],al
   1400486e7:	add    BYTE PTR [rsi+0x9000166],ah
   1400486ed:	add    BYTE PTR [rax],al
   1400486ef:	add    BYTE PTR [rcx+0xa000166],bh
   1400486f5:	add    BYTE PTR [rax],al
   1400486f7:	add    ah,cl
   1400486f9:	add    WORD PTR [rax],ax
   1400486fc:	or     eax,DWORD PTR [rax]
   1400486fe:	add    BYTE PTR [rax],al
   140048700:	fbld   TBYTE PTR [rsi+0x1]
   140048703:	add    BYTE PTR [rsp+rbx*1+0x1],dl
   140048707:	add    bh,bh
   140048709:	(bad)  
   14004870a:	(bad)  
   14004870b:	dec    DWORD PTR [rdx+0x11c]
   140048711:	add    BYTE PTR [rax],al
   140048713:	add    BYTE PTR [rsi+0x100011c],cl
   140048719:	add    BYTE PTR [rax],al
   14004871b:	add    BYTE PTR [rdx+0x200011c],dl
   140048721:	add    BYTE PTR [rax],al
   140048723:	add    BYTE PTR [rsi+0x300011c],dl
   140048729:	add    BYTE PTR [rax],al
   14004872b:	add    BYTE PTR [rdx+0x400011c],bl
   140048731:	add    BYTE PTR [rax],al
   140048733:	add    BYTE PTR [rsi+0x500011c],bl
   140048739:	add    BYTE PTR [rax],al
   14004873b:	add    BYTE PTR [rsp+rbx*1+0x60001],ch
   140048742:	add    BYTE PTR [rax],al
   140048744:	mov    al,0x1c
   140048746:	add    DWORD PTR [rax],eax
   140048748:	(bad)  
   140048749:	add    BYTE PTR [rax],al
   14004874b:	add    BYTE PTR [rsp+rbx*1+0x80001],dh
   140048752:	add    BYTE PTR [rax],al
   140048754:	mov    ebx,0x900011c
   140048759:	add    BYTE PTR [rax],al
   14004875b:	add    dl,al
   14004875d:	sbb    al,0x1
   14004875f:	add    BYTE PTR [rdx],cl
   140048761:	add    BYTE PTR [rax],al
   140048763:	add    cl,cl
   140048765:	sbb    al,0x1
   140048767:	add    BYTE PTR [rbx],cl
   140048769:	add    BYTE PTR [rax],al
   14004876b:	add    al,dl
   14004876d:	sbb    al,0x1
   14004876f:	add    BYTE PTR [rax+rax*1],cl
   140048772:	add    BYTE PTR [rax],al
   140048774:	lock sbb al,0x1
   140048777:	add    bh,bh
   140048779:	(bad)  
   14004877a:	(bad)  
   14004877b:	inc    DWORD PTR [rcx]
   14004877d:	(bad)  
   14004877e:	add    al,BYTE PTR [rax]
   140048780:	(bad)  
   140048781:	xor    al,BYTE PTR [rdx]
   140048783:	xor    BYTE PTR [rcx],ah
   140048785:	add    BYTE PTR [rax],al
   140048787:	add    BYTE PTR [rax],dl
   140048789:	loope  0x14004878b
   14004878b:	add    BYTE PTR [rcx-0x1f],cl
   14004878e:	add    BYTE PTR [rax],al
   140048790:	jl     0x140048719
   140048792:	add    al,0x0
   140048794:	sbb    DWORD PTR [rdi],ebp
   140048796:	or     DWORD PTR [rax],eax
   140048798:	(bad)  
   140048799:	je     0x1400487d4
   14004879b:	add    BYTE PTR [rsi],bl
   14004879d:	cmp    BYTE PTR fs:[rax],al
   1400487a0:	(bad)  
   1400487a1:	xor    al,0x37
   1400487a3:	add    BYTE PTR [rsi],bl
   1400487a5:	add    DWORD PTR [rax+rax*1],esi
   1400487a8:	adc    BYTE PTR [rax+0x0],dl
   1400487ab:	add    BYTE PTR [rax-0x6ffffeb6],bh
   1400487b1:	add    DWORD PTR [rax],eax
   1400487b3:	add    BYTE PTR [rcx],ah
   1400487b5:	add    BYTE PTR [rax],al
   1400487b7:	add    al,dh
   1400487b9:	loope  0x1400487bb
   1400487bb:	add    bl,bh
   1400487bd:	loop   0x1400487bf
   1400487bf:	add    BYTE PTR [rdi+rax*4+0x19190004],dl
   1400487c6:	add    al,0x0
   1400487c8:	or     dh,BYTE PTR [rcx+rdx*1]
   1400487cb:	add    BYTE PTR [rdx],cl
   1400487cd:	rol    BYTE PTR [rsi],cl
   1400487cf:	jo     0x140048789
   1400487d1:	rex.WX add QWORD PTR [rax],rax
   1400487d4:	push   0x1000000
   1400487d9:	(bad)  
   1400487da:	add    al,0x0
   1400487dc:	(bad)  
   1400487dd:	xor    al,0xa
   1400487df:	add    BYTE PTR [rsi],cl
   1400487e1:	push   rdx
   1400487e2:	or     dh,BYTE PTR [rax+0x19]
   1400487e5:	xor    eax,0x6424000b
   1400487ea:	rex.WXB add BYTE PTR [r12+r14*1],spl
   1400487ee:	rex.WX add BYTE PTR [rcx+r8*1],spl
   1400487f2:	rex.X add BYTE PTR [rsi],dl
   1400487f5:	lock adc al,0xe0
   1400487f8:	adc    al,al
   1400487fa:	adc    BYTE PTR [rax+0xf],dh
   1400487fd:	push   rax
   1400487fe:	add    BYTE PTR [rax],al
   140048800:	mov    eax,0x14a
   140048805:	add    al,BYTE PTR [rax]
   140048807:	add    BYTE PTR [rcx],ah
   140048809:	add    BYTE PTR [rax],al
   14004880b:	add    al,al
   14004880d:	in     al,0x0
   14004880f:	add    BYTE PTR [rbp-0x1bffff1a],ah
   140048815:	xchg   DWORD PTR [rax+rax*1],eax
   140048818:	sbb    DWORD PTR [rdx],ebp
   14004881a:	add    eax,0x1a011c00
   14004881f:	add    BYTE PTR [rcx],dl
   140048821:	jo     0x140048833
   140048823:	xor    BYTE PTR [rdi],cl
   140048825:	push   rax
   140048826:	add    BYTE PTR [rax],al
   140048828:	mov    eax,0xc000014a
   14004882d:	add    BYTE PTR [rax],al
   14004882f:	add    BYTE PTR [rcx],al
   140048831:	adc    BYTE PTR [rsi],al
   140048833:	add    BYTE PTR [rax],dl
   140048835:	xor    al,0xc
   140048837:	add    BYTE PTR [rax],dl
   140048839:	push   rdx
   14004883a:	or     al,0x70
   14004883c:	or     esp,DWORD PTR [rax+0xa]
   14004883f:	push   rax
   140048840:	add    DWORD PTR [rdx],ecx
   140048842:	add    al,0x0
   140048844:	or     dh,BYTE PTR [rdi+rax*1]
   140048847:	add    BYTE PTR [rdx],cl
   140048849:	xor    al,BYTE PTR [rsi]
   14004884b:	jo     0x14004886e
   14004884d:	add    BYTE PTR [rax],al
   14004884f:	add    al,bl
   140048851:	call   0x129108856
   140048856:	add    BYTE PTR [rax],al
   140048858:	mov    BYTE PTR [rax+rax*1],al
   14004885c:	add    DWORD PTR [rdx],ecx
   14004885e:	add    al,0x0
   140048860:	or     dh,BYTE PTR [rax+rcx*1]
   140048863:	add    BYTE PTR [rdx],cl
   140048865:	xor    al,BYTE PTR [rsi]
   140048867:	jo     0x14004888a
   140048869:	add    BYTE PTR [rax],al
   14004886b:	add    BYTE PTR [rcx+rbp*8],dl
   14004886e:	add    BYTE PTR [rax],al
   140048870:	jg     0x14004885b
   140048872:	add    BYTE PTR [rax],al
   140048874:	pop    rsp
   140048875:	mov    BYTE PTR [rax+rax*1],al
   140048878:	add    DWORD PTR [rdi],ecx
   14004887a:	(bad)  
   14004887b:	add    BYTE PTR [rdi],cl
   14004887d:	or     BYTE PTR fs:[rax],al
   140048880:	sysenter 
   140048882:	(bad)  
   140048883:	add    BYTE PTR [rdi],cl
   140048885:	xor    cl,BYTE PTR [rbx]
   140048887:	jo     0x1400488aa
   140048889:	add    BYTE PTR [rax],al
   14004888b:	add    BYTE PTR [rax-0x34ffff17],cl
   140048891:	jmp    0xc87c8896
   140048896:	add    al,0x0
   140048898:	sbb    DWORD PTR [rcx],ebp
   14004889a:	or     DWORD PTR [rax],eax
   14004889c:	sbb    esi,DWORD PTR [rdi+rdx*1+0x0]
   1400488a0:	sbb    esp,DWORD PTR [rsi+rdx*1+0x0]
   1400488a4:	sbb    esi,DWORD PTR [rdx*1+0x12011b00]
   1400488ab:	add    BYTE PTR [rax],dl
   1400488ad:	push   rax
   1400488ae:	add    BYTE PTR [rax],al
   1400488b0:	mov    eax,0x8000014a
   1400488b5:	add    BYTE PTR [rax],al
   1400488b7:	add    BYTE PTR [rcx],ah
   1400488b9:	add    BYTE PTR [rax],al
   1400488bb:	add    BYTE PTR [rax+0x200000ea],cl
   1400488c1:	jmp    0x1400488c3
   1400488c3:	add    BYTE PTR [rax+0x1000488],bl
   1400488c9:	(bad)  
   1400488ca:	add    al,BYTE PTR [rax]
   1400488cc:	(bad)  
   1400488cd:	xor    al,BYTE PTR [rdx]
   1400488cf:	xor    BYTE PTR [rcx],ah
   1400488d1:	add    BYTE PTR [rax],al
   1400488d3:	add    BYTE PTR [rsp+rbp*8+0x0],dh
   1400488d7:	add    al,al
   1400488d9:	in     al,dx
   1400488da:	add    BYTE PTR [rax],al
   1400488dc:	enter  0x488,0x0
   1400488e0:	add    DWORD PTR [rcx],ecx
   1400488e2:	add    DWORD PTR [rax],eax
   1400488e4:	or     DWORD PTR [rdx+0x0],eax
   1400488e7:	add    BYTE PTR [rcx],al
   1400488e9:	or     al,BYTE PTR [rax+rax*1]
   1400488ec:	or     dh,BYTE PTR [rsi+rax*1]
   1400488ef:	add    BYTE PTR [rdx],cl
   1400488f1:	xor    al,BYTE PTR [rsi]
   1400488f3:	jo     0x140048916
   1400488f5:	add    BYTE PTR [rax],al
   1400488f7:	add    BYTE PTR [rax-0x54ffff12],al
   1400488fd:	out    dx,al
   1400488fe:	add    BYTE PTR [rax],al
   140048900:	call   0x141048d8d
   140048905:	adc    BYTE PTR [rax+rax*1],al
   140048908:	adc    BYTE PTR [rax+rcx*1],dh
   14004890b:	add    BYTE PTR [rax],dl
   14004890d:	xor    cl,BYTE PTR [rax+rsi*2]
   140048910:	and    DWORD PTR [rax],eax
   140048912:	add    BYTE PTR [rax],al
   140048914:	rex.WR out dx,eax
   140048916:	add    BYTE PTR [rax],al
   140048918:	scas   eax,DWORD PTR es:[rdi]
   140048919:	out    dx,eax
   14004891a:	add    BYTE PTR [rax],al
   14004891c:	add    al,0x89
   14004891e:	add    al,0x0
   140048920:	add    DWORD PTR [rdx],ecx
   140048922:	add    al,0x0
   140048924:	or     dh,BYTE PTR [rsi+rax*1]
   140048927:	add    BYTE PTR [rdx],cl
   140048929:	xor    al,BYTE PTR [rsi]
   14004892b:	jo     0x14004894e
   14004892d:	add    BYTE PTR [rax],al
   14004892f:	add    BYTE PTR [rax],ch
   140048931:	lock add BYTE PTR [rax],al
   140048934:	rex.WR
   140048935:	lock add BYTE PTR [rax],al
   140048938:	and    BYTE PTR [rcx+0xf010004],cl
   14004893e:	(bad)  
   14004893f:	add    BYTE PTR [rdi],cl
   140048941:	or     BYTE PTR fs:[rax],al
   140048944:	sysenter 
   140048946:	(bad)  
   140048947:	add    BYTE PTR [rdi],cl
   140048949:	xor    cl,BYTE PTR [rbx]
   14004894b:	jo     0x14004896e
   14004894d:	add    BYTE PTR [rax],al
   14004894f:	add    BYTE PTR [rcx+rsi*8-0xde70000],bh
   140048956:	add    BYTE PTR [rax],al
   140048958:	cmp    al,0x89
   14004895a:	add    al,0x0
   14004895c:	sbb    DWORD PTR [rcx],ebx
   14004895e:	add    al,0x0
   140048960:	or     dh,BYTE PTR [rsi+rcx*1]
   140048963:	add    BYTE PTR [rdx],cl
   140048965:	mov    dl,0x6
   140048967:	jo     0x140048921
   140048969:	rex.WX add QWORD PTR [rax],rax
   14004896c:	push   rax
   14004896d:	add    BYTE PTR [rax],al
   14004896f:	add    BYTE PTR [rcx],bl
   140048971:	(bad)  
   140048972:	(bad)  
   140048973:	add    BYTE PTR [rdi],cl
   140048975:	fs or  al,0x0
   140048978:	sysenter 
   14004897a:	or     eax,DWORD PTR [rax]
   14004897c:	(bad)  
   14004897e:	or     esi,DWORD PTR [rax-0x48]
   140048981:	rex.WX add QWORD PTR [rax],rax
   140048984:	xor    BYTE PTR [rax],al
   140048986:	add    BYTE PTR [rax],al
   140048988:	and    DWORD PTR [rax],eax
   14004898a:	add    BYTE PTR [rax],al
   14004898c:	or     al,0xf3
   14004898e:	add    BYTE PTR [rax],al
   140048990:	pushf  
   140048991:	repz add BYTE PTR [rax],al
   140048994:	jo     0x14004891f
   140048996:	add    al,0x0
   140048998:	add    DWORD PTR [rcx+rax*1],eax
   14004899b:	add    BYTE PTR [rdx+riz*2],al
   14004899e:	add    BYTE PTR [rax],al
   1400489a0:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b42189b2
   1400489a6:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d049811
   1400489ad:	push   rsp
   1400489ae:	or     eax,0xc341d00
   1400489b3:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f4a32b
   1400489b9:	loopne 0x1400489d0
   1400489bb:	shl    BYTE PTR [rcx],0x0
   1400489be:	add    BYTE PTR [rax],al
   1400489c0:	adc    ah,dh
   1400489c2:	add    BYTE PTR [rax],al
   1400489c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400489c5:	hlt    
   1400489c6:	add    BYTE PTR [rax],al
   1400489c8:	movabs al,ds:0x900020901000489
   1400489d1:	xor    al,BYTE PTR [rip+0x2060130]        # 0x1420a8b07
   1400489d7:	add    BYTE PTR [rsi],al
   1400489d9:	xor    al,BYTE PTR [rdx]
   1400489db:	xor    BYTE PTR [rcx],ah
   1400489dd:	add    BYTE PTR [rax],al
   1400489df:	add    BYTE PTR [rax],ch
   1400489e1:	cmc    
   1400489e2:	add    BYTE PTR [rax],al
   1400489e4:	rex.XB cmc 
   1400489e6:	add    BYTE PTR [rax],al
   1400489e8:	(bad)  
   1400489e9:	mov    DWORD PTR [rax+rax*1],eax
   1400489ec:	add    DWORD PTR [rsi],eax
   1400489ee:	add    al,BYTE PTR [rax]
   1400489f0:	(bad)  
   1400489f1:	push   rdx
   1400489f2:	add    dh,BYTE PTR [rax+0x21]
   1400489f5:	add    BYTE PTR [rax],al
   1400489f7:	add    BYTE PTR [rax-0x65ffff0b],al
   1400489fd:	cmc    
   1400489fe:	add    BYTE PTR [rax],al
   140048a00:	in     al,dx
   140048a01:	mov    DWORD PTR [rax+rax*1],eax
   140048a04:	adc    DWORD PTR [rcx],ebx
   140048a06:	(bad)  
   140048a07:	add    BYTE PTR [rcx],bl
   140048a09:	fs or  al,0x0
   140048a0c:	adc    al,0x34
   140048a0e:	or     al,BYTE PTR [rax]
   140048a10:	(bad)  
   140048a11:	jb     0x140048a15
   140048a13:	jo     0x140048a4b
   140048a15:	push   rsi
   140048a16:	add    DWORD PTR [rax],eax
   140048a18:	adc    QWORD PTR [rax+rax*1],rax
   140048a1c:	and    DWORD PTR [rax],eax
   140048a1e:	add    BYTE PTR [rax],al
   140048a20:	mov    al,0x1d
   140048a22:	add    DWORD PTR [rax],eax
   140048a24:	(bad)  
   140048a25:	(bad)  
   140048a26:	add    DWORD PTR [rax],eax
   140048a28:	add    al,0x8a
   140048a2a:	add    al,0x0
   140048a2c:	(bad)  
   140048a2d:	(bad)  
   140048a2e:	(bad)  
   140048a2f:	(bad)  
   140048a30:	clc    
   140048a31:	add    WORD PTR [rax],ax
   140048a34:	mov    al,0x1d
   140048a36:	add    DWORD PTR [rax],eax
   140048a38:	(bad)  
   140048a39:	(bad)  
   140048a3a:	(bad)  
   140048a3b:	jmp    rdi
   140048a3d:	sbb    eax,0x1
   140048a42:	add    BYTE PTR [rax],al
   140048a44:	fs (bad) 
   140048a46:	add    DWORD PTR [rax],eax
   140048a48:	(bad)  
   140048a49:	(bad)  
   140048a4a:	(bad)  
   140048a4b:	(bad)  
   140048a4c:	mov    esi,0xff000298
   140048a51:	(bad)  
   140048a52:	(bad)  
   140048a53:	inc    DWORD PTR [rcx]
   140048a55:	clts   
   140048a57:	add    BYTE PTR [rdi],cl
   140048a59:	fs (bad) 
   140048a5b:	add    BYTE PTR [rdi],cl
   140048a5d:	xor    al,0x6
   140048a5f:	add    BYTE PTR [rdi],cl
   140048a61:	xor    cl,BYTE PTR [rbx]
   140048a63:	jo     0x140048a86
   140048a65:	add    BYTE PTR [rax],al
   140048a67:	add    BYTE PTR [rax-0x2efffee2],cl
   140048a6d:	(bad)  
   140048a6e:	add    DWORD PTR [rax],eax
   140048a70:	push   rsp
   140048a71:	mov    al,BYTE PTR [rax+rax*1]
   140048a74:	add    DWORD PTR [rsi],eax
   140048a76:	add    al,BYTE PTR [rax]
   140048a78:	(bad)  
   140048a79:	xor    al,BYTE PTR [rdx]
   140048a7b:	xor    BYTE PTR [rcx],ah
   140048a7d:	add    BYTE PTR [rax],al
   140048a7f:	add    BYTE PTR [rax-0x4afffee1],bl
   140048a85:	(bad)  
   140048a86:	add    DWORD PTR [rax],eax
   140048a88:	je     0x140048a14
   140048a8a:	add    al,0x0
   140048a8c:	add    DWORD PTR [rdi],ecx
   140048a8e:	(bad)  
   140048a8f:	add    BYTE PTR [rdi],cl
   140048a91:	or     DWORD PTR fs:[rax],eax
   140048a94:	sysenter 
   140048a96:	or     BYTE PTR [rax],al
   140048a98:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140048a9b:	jo     0x140048abe
   140048a9d:	add    BYTE PTR [rax],al
   140048a9f:	add    al,bl
   140048aa1:	(bad)  
   140048aa2:	add    DWORD PTR [rax],eax
   140048aa4:	pop    rbx
   140048aa5:	and    BYTE PTR [rcx],al
   140048aa7:	add    BYTE PTR [rdx+rcx*4+0x24190004],cl
   140048aae:	(bad)  
   140048aaf:	add    BYTE PTR [rdx+riz*2],bl
   140048ab2:	sbb    al,dh
   140048ab4:	(bad)  
   140048ab5:	loopne 0x140048acb
   140048ab7:	rcl    BYTE PTR [rdx],1
   140048ab9:	jo     0x140048acc
   140048abb:	(bad)  
   140048abc:	adc    BYTE PTR [rax],dh
   140048abe:	add    BYTE PTR [rax],al
   140048ac0:	ss push rsi
   140048ac2:	add    DWORD PTR [rax],eax
   140048ac4:	adc    BYTE PTR [rip+0x210004],cl        # 0x140258ace
   140048aca:	add    BYTE PTR [rax],al
   140048acc:	test   BYTE PTR [rax],ah
   140048ace:	add    DWORD PTR [rax],eax
   140048ad0:	pop    rcx
   140048ad1:	and    DWORD PTR [rcx],eax
   140048ad3:	add    BYTE PTR [rdx+rcx*4-0xfffc],ch
   140048ada:	(bad)  
   140048adb:	inc    DWORD PTR [rax]
   140048add:	add    BYTE PTR [rax],al
   140048adf:	add    BYTE PTR [rax],al
   140048ae1:	add    BYTE PTR [rax],al
   140048ae3:	add    BYTE PTR [rdx],cl
   140048ae5:	add    DWORD PTR [eax],eax
   140048ae8:	(bad)  
   140048ae9:	(bad)  
   140048aea:	(bad)  
   140048aeb:	inc    DWORD PTR [rax]
   140048aed:	add    BYTE PTR [rax],al
   140048aef:	add    BYTE PTR [rax],al
   140048af1:	add    BYTE PTR [rax],al
   140048af3:	add    BYTE PTR [rcx],al
   140048af5:	add    BYTE PTR [rax],al
   140048af7:	add    BYTE PTR [rdx],al
   140048af9:	add    BYTE PTR [rax],al
   140048afb:	add    BYTE PTR [rcx],al
   140048afd:	add    BYTE PTR [rax],al
   140048aff:	add    BYTE PTR [rbx+rcx*4],al
   140048b02:	add    al,0x0
   140048b04:	add    BYTE PTR [rax],al
	...
   140048b0f:	add    BYTE PTR [rsi],dl
   140048b11:	add    DWORD PTR [eax],eax
   140048b14:	cmp    BYTE PTR [rax],al
   140048b16:	add    BYTE PTR [rax],al
   140048b18:	test   BYTE PTR [rax],ah
   140048b1a:	add    DWORD PTR [rax],eax
   140048b1c:	(bad)  
   140048b1d:	(bad)  
   140048b1e:	(bad)  
   140048b1f:	dec    ebp
   140048b21:	and    BYTE PTR [rcx],al
   140048b23:	add    BYTE PTR [rax],al
   140048b25:	add    BYTE PTR [rax],al
   140048b27:	add    ah,bl
   140048b29:	and    BYTE PTR [rcx],al
   140048b2b:	add    BYTE PTR [rcx],al
   140048b2d:	add    BYTE PTR [rax],al
   140048b2f:	add    al,dh
   140048b31:	and    BYTE PTR [rcx],al
   140048b33:	add    BYTE PTR [rax],al
   140048b35:	add    BYTE PTR [rax],al
   140048b37:	add    al,bh
   140048b39:	and    BYTE PTR [rcx],al
   140048b3b:	add    bh,bh
   140048b3d:	(bad)  
   140048b3e:	(bad)  
   140048b3f:	call   QWORD PTR [rsi]
   140048b41:	add    DWORD PTR [eax],eax
   140048b44:	add    BYTE PTR [rax],al
   140048b46:	add    BYTE PTR [rax],al
   140048b48:	jo     0x140048ae3
   140048b4a:	add    al,BYTE PTR [rax]
   140048b4c:	(bad)  
   140048b4d:	(bad)  
   140048b4e:	(bad)  
   140048b4f:	(bad)  
   140048b50:	jp     0x140048aeb
   140048b52:	add    al,BYTE PTR [rax]
   140048b54:	add    DWORD PTR [rax],eax
   140048b56:	add    BYTE PTR [rax],al
   140048b58:	(bad)  
   140048b59:	cdq    
   140048b5a:	add    al,BYTE PTR [rax]
   140048b5c:	(bad)  
   140048b5d:	(bad)  
   140048b5e:	(bad)  
   140048b5f:	call   FWORD PTR [rcx]
   140048b61:	or     al,BYTE PTR [rdx]
   140048b63:	add    BYTE PTR [rdx],cl
   140048b65:	xor    al,BYTE PTR [rsi]
   140048b67:	push   rax
   140048b68:	ss push rsi
   140048b6a:	add    DWORD PTR [rax],eax
   140048b6c:	adc    BYTE PTR [rip+0xa010004],cl        # 0x14a058b76
   140048b72:	add    al,0x0
   140048b74:	or     dh,BYTE PTR [rsi+rax*1]
   140048b77:	add    BYTE PTR [rdx],cl
   140048b79:	xor    al,BYTE PTR [rsi]
   140048b7b:	jo     0x140048b9e
   140048b7d:	add    BYTE PTR [rax],al
   140048b7f:	add    BYTE PTR [rax+0x21],ah
   140048b82:	add    DWORD PTR [rax],eax
   140048b84:	stos   BYTE PTR es:[rdi],al
   140048b85:	and    DWORD PTR [rcx],eax
   140048b87:	add    BYTE PTR [rax-0x75],dh
   140048b8a:	add    al,0x0
   140048b8c:	sbb    DWORD PTR [rbx],ebp
   140048b8e:	or     al,0x0
   140048b90:	sbb    al,0x64
   140048b92:	adc    eax,DWORD PTR [rax]
   140048b94:	sbb    al,0x54
   140048b96:	adc    al,BYTE PTR [rax]
   140048b98:	sbb    al,0x34
   140048b9a:	adc    DWORD PTR [rax],eax
   140048b9c:	sbb    al,0x92
   140048b9e:	sbb    al,dh
   140048ba0:	(bad)  
   140048ba1:	loopne 0x140048bb7
   140048ba3:	rcl    BYTE PTR [rdx],1
   140048ba5:	rcl    BYTE PTR [rax],0x70
   140048ba8:	mov    eax,0x4800014a
   140048bad:	add    BYTE PTR [rax],al
   140048baf:	add    BYTE PTR [rcx],ah
   140048bb1:	add    BYTE PTR [rax],al
   140048bb3:	add    BYTE PTR [rax-0x30fffedf],dh
   140048bb9:	and    al,BYTE PTR [rcx]
   140048bbb:	add    BYTE PTR [rbx+rcx*4+0xa010004],cl
   140048bc2:	add    al,BYTE PTR [rax]
   140048bc4:	or     dl,BYTE PTR [rdx+0x6]
   140048bc7:	xor    BYTE PTR [rcx],bl
   140048bc9:	cmp    DWORD PTR [rip+0x3f742b00],ecx        # 0x17f78b6cf
   140048bcf:	add    BYTE PTR [rdi],ah
   140048bd1:	fs add BYTE PTR ds:[rbx],ah
   140048bd5:	xor    al,0x3d
   140048bd7:	add    BYTE PTR [rdi],dl
   140048bd9:	add    DWORD PTR [rsi],esi
   140048bdb:	add    BYTE PTR [rax+rsi*8],cl
   140048bde:	or     ah,al
   140048be0:	or     al,dl
   140048be2:	(bad)  
   140048be3:	rol    BYTE PTR [rax+rdx*2],0x0
   140048be7:	add    BYTE PTR [rsi+rdx*2+0x1],al
   140048beb:	add    al,ah
   140048bed:	(bad)  
   140048bef:	add    BYTE PTR [rdx+0x21000001],ch
   140048bf5:	add    BYTE PTR [rax],al
   140048bf7:	add    BYTE PTR [rax+0x23],ch
   140048bfa:	add    DWORD PTR [rax],eax
   140048bfc:	lods   al,BYTE PTR ds:[rsi]
   140048bfd:	sub    al,BYTE PTR [rcx]
   140048bff:	add    al,cl
   140048c01:	mov    eax,DWORD PTR [rax+rax*1]
   140048c04:	(bad)  
   140048c05:	(bad)  
   140048c06:	(bad)  
   140048c07:	push   QWORD PTR [rdi]
   140048c09:	add    DWORD PTR [eax],eax
   140048c0c:	add    BYTE PTR [rax],al
   140048c0e:	add    BYTE PTR [rax],al
   140048c10:	rex.XB
   140048c11:	add    DWORD PTR [eax],eax
   140048c14:	add    DWORD PTR [rax],eax
   140048c16:	add    BYTE PTR [rax],al
   140048c18:	rex.WRXB
   140048c19:	add    DWORD PTR [eax],eax
   140048c1c:	add    al,BYTE PTR [rax]
   140048c1e:	add    BYTE PTR [rax],al
   140048c20:	pop    rbx
   140048c21:	add    DWORD PTR [eax],eax
   140048c24:	add    eax,DWORD PTR [rax]
   140048c26:	add    BYTE PTR [rax],al
   140048c28:	addr32 add DWORD PTR [eax],eax
   140048c2c:	add    al,0x0
   140048c2e:	add    BYTE PTR [rax],al
   140048c30:	jae    0x140048c99
   140048c32:	add    DWORD PTR [rax],eax
   140048c34:	add    eax,0x7f000000
   140048c39:	add    DWORD PTR [eax],eax
   140048c3c:	push   0xffffffffff000123
   140048c41:	(bad)  
   140048c42:	(bad)  
   140048c43:	(bad)  
   140048c44:	cmp    esp,DWORD PTR [rcx+rax*1]
   140048c47:	add    BYTE PTR [rax],al
   140048c49:	add    BYTE PTR [rax],al
   140048c4b:	add    BYTE PTR [rsp+0x1],cl
   140048c4f:	add    BYTE PTR [rcx],al
   140048c51:	add    BYTE PTR [rax],al
   140048c53:	add    BYTE PTR [rax+0x24],dl
   140048c56:	add    DWORD PTR [rax],eax
   140048c58:	add    al,BYTE PTR [rax]
   140048c5a:	add    BYTE PTR [rax],al
   140048c5c:	ja     0x140048c82
   140048c5e:	add    DWORD PTR [rax],eax
   140048c60:	add    eax,DWORD PTR [rax]
   140048c62:	add    BYTE PTR [rax],al
   140048c64:	jnp    0x140048c8a
   140048c66:	add    DWORD PTR [rax],eax
   140048c68:	add    al,0x0
   140048c6a:	add    BYTE PTR [rax],al
   140048c6c:	jg     0x140048c92
   140048c6e:	add    DWORD PTR [rax],eax
   140048c70:	add    eax,0x7d000000
   140048c75:	add    DWORD PTR es:[rax],eax
   140048c78:	(bad)  
   140048c79:	add    BYTE PTR [rax],al
   140048c7b:	add    BYTE PTR [rsi+0x4000127],cl
   140048c81:	add    BYTE PTR [rax],al
   140048c83:	add    BYTE PTR [rcx+0x3000127],bl
   140048c89:	add    BYTE PTR [rax],al
   140048c8b:	add    BYTE PTR [rdi+riz*1+0x20001],ah
   140048c92:	add    BYTE PTR [rax],al
   140048c94:	scas   eax,DWORD PTR es:[rdi]
   140048c95:	(bad)  
   140048c96:	add    DWORD PTR [rax],eax
   140048c98:	add    DWORD PTR [rax],eax
   140048c9a:	add    BYTE PTR [rax],al
   140048c9c:	in     al,dx
   140048c9d:	(bad)  
   140048c9e:	add    DWORD PTR [rax],eax
   140048ca0:	add    BYTE PTR [rax],al
   140048ca2:	add    BYTE PTR [rax],al
   140048ca4:	(bad)  
   140048ca5:	sub    BYTE PTR [rcx],al
   140048ca7:	add    bh,bh
   140048ca9:	(bad)  
   140048caa:	(bad)  
   140048cab:	(bad)  
   140048cac:	stc    
   140048cad:	sub    BYTE PTR [rcx],al
   140048caf:	add    BYTE PTR [rcx],al
   140048cb1:	add    BYTE PTR [rax],al
   140048cb3:	add    BYTE PTR [rdi],cl
   140048cb5:	sub    DWORD PTR [rcx],eax
   140048cb7:	add    BYTE PTR [rax],al
   140048cb9:	add    BYTE PTR [rax],al
   140048cbb:	add    BYTE PTR [rip+0x5000129],ah        # 0x145048dea
   140048cc1:	add    BYTE PTR [rax],al
   140048cc3:	add    BYTE PTR [rdx+rbp*1+0x10001],al
   140048cca:	add    BYTE PTR [rax],al
   140048ccc:	cwde   
   140048ccd:	sub    al,BYTE PTR [rcx]
   140048ccf:	add    BYTE PTR [rax],al
   140048cd1:	add    BYTE PTR [rax],al
   140048cd3:	add    BYTE PTR [rax-0xfffd65],bh
   140048cd9:	(bad)  
   140048cda:	(bad)  
   140048cdb:	(bad)  
   140048cdc:	ficomp DWORD PTR [rbx+0x50002]
   140048ce2:	add    BYTE PTR [rax],al
   140048ce4:	hlt    
   140048ce5:	pushf  
   140048ce6:	add    al,BYTE PTR [rax]
   140048ce8:	(bad)  
   140048ce9:	add    BYTE PTR [rax],al
   140048ceb:	add    ah,bh
   140048ced:	pushf  
   140048cee:	add    al,BYTE PTR [rax]
   140048cf0:	(bad)  
   140048cf1:	(bad)  
   140048cf2:	(bad)  
   140048cf3:	call   QWORD PTR [rcx]
   140048cf5:	sbb    al,0x6
   140048cf7:	add    BYTE PTR [rsp+riz*2],bl
   140048cfa:	or     eax,DWORD PTR [rax]
   140048cfc:	sbb    BYTE PTR [rdx+rcx*1],dh
   140048cff:	add    BYTE PTR [rdx+rdx*2],cl
   140048d02:	or     BYTE PTR [rax+0x36],dh
   140048d05:	push   rsi
   140048d06:	add    DWORD PTR [rax],eax
   140048d08:	xor    BYTE PTR [rax],dl
   140048d0a:	add    al,0x0
   140048d0c:	(bad)  
   140048d0d:	(bad)  
   140048d0e:	(bad)  
   140048d0f:	call   QWORD PTR [rcx+0x167]
   140048d15:	add    BYTE PTR [rax],al
   140048d17:	add    BYTE PTR [rcx+0x1000167],ah
   140048d1d:	add    BYTE PTR [rax],al
   140048d1f:	add    BYTE PTR [rcx+0x2000167],dh
   140048d25:	add    BYTE PTR [rax],al
   140048d27:	add    cl,al
   140048d29:	add    DWORD PTR [eax],eax
   140048d2c:	add    al,BYTE PTR [rax]
   140048d2e:	add    BYTE PTR [rax],al
   140048d30:	shl    DWORD PTR [rdi+0x1],1
   140048d33:	add    BYTE PTR [rax+rax*1],al
   140048d36:	add    BYTE PTR [rax],al
   140048d38:	loope  0x140048da1
   140048d3a:	add    DWORD PTR [rax],eax
   140048d3c:	mov    ah,0x2a
   140048d3e:	add    DWORD PTR [rax],eax
   140048d40:	(bad)  
   140048d41:	(bad)  
   140048d42:	(bad)  
   140048d43:	jmp    rdx
   140048d45:	sub    al,BYTE PTR [rcx]
   140048d47:	add    BYTE PTR [rax],al
   140048d49:	add    BYTE PTR [rax],al
   140048d4b:	add    dh,ah
   140048d4d:	sub    al,BYTE PTR [rcx]
   140048d4f:	add    BYTE PTR [rcx],al
   140048d51:	add    BYTE PTR [rax],al
   140048d53:	add    dl,ch
   140048d55:	sub    al,BYTE PTR [rcx]
   140048d57:	add    BYTE PTR [rdx],al
   140048d59:	add    BYTE PTR [rax],al
   140048d5b:	add    BYTE PTR [rax],al
   140048d5d:	sub    eax,DWORD PTR [rcx]
   140048d5f:	add    BYTE PTR [rbx],al
   140048d61:	add    BYTE PTR [rax],al
   140048d63:	add    BYTE PTR [rax],ah
   140048d65:	sub    eax,DWORD PTR [rcx]
   140048d67:	add    BYTE PTR [rax+rax*1],al
   140048d6a:	add    BYTE PTR [rax],al
   140048d6c:	rex.XB sub eax,DWORD PTR [r9]
   140048d6f:	add    BYTE PTR [rip+0xffffffff89000000],al        # 0xc9048d75
   140048d75:	sub    eax,DWORD PTR [rcx]
   140048d77:	add    bh,bh
   140048d79:	(bad)  
   140048d7a:	(bad)  
   140048d7b:	call   FWORD PTR [rbx+rbp*1+0x30001]
   140048d82:	add    BYTE PTR [rax],al
   140048d84:	adc    DWORD PTR [rsp+rax*1],edx
   140048d87:	add    BYTE PTR [rsp+rsi*1],dl
   140048d8a:	or     BYTE PTR [rax],al
   140048d8c:	(bad)  
   140048d8d:	push   rdx
   140048d8e:	add    dh,BYTE PTR [rax+0x36]
   140048d91:	push   rsi
   140048d92:	add    DWORD PTR [rax],eax
   140048d94:	rcl    BYTE PTR [rax],1
   140048d96:	add    al,0x0
   140048d98:	(bad)  
   140048d99:	(bad)  
   140048d9a:	(bad)  
   140048d9b:	(bad)  
   140048d9c:	cli    
   140048d9d:	add    DWORD PTR [eax],eax
   140048da0:	cld    
   140048da1:	sub    eax,DWORD PTR [rcx]
   140048da3:	add    bh,bh
   140048da5:	(bad)  
   140048da6:	(bad)  
   140048da7:	jmp    FWORD PTR [rdi]
   140048da9:	sub    al,0x1
   140048dab:	add    BYTE PTR [rax],al
   140048dad:	add    BYTE PTR [rax],al
   140048daf:	add    BYTE PTR [rdi],dh
   140048db1:	sub    al,0x1
   140048db3:	add    bh,bh
   140048db5:	(bad)  
   140048db6:	(bad)  
   140048db7:	dec    DWORD PTR [rbp+0x2c]
   140048dba:	add    DWORD PTR [rax],eax
   140048dbc:	add    BYTE PTR [rax],al
   140048dbe:	add    BYTE PTR [rax],al
   140048dc0:	add    DWORD PTR [rsi],eax
   140048dc2:	add    al,BYTE PTR [rax]
   140048dc4:	(bad)  
   140048dc5:	xor    al,BYTE PTR [rdx]
   140048dc7:	xor    BYTE PTR [rcx],ah
   140048dc9:	add    BYTE PTR [rax],al
   140048dcb:	add    BYTE PTR [rsp+rbp*1+0x2cbf0001],al
   140048dd2:	add    DWORD PTR [rax],eax
   140048dd4:	ror    BYTE PTR [rbp+0x6010004],0x2
   140048ddb:	add    BYTE PTR [rsi],al
   140048ddd:	xor    al,BYTE PTR [rdx]
   140048ddf:	xor    BYTE PTR [rcx],ah
   140048de1:	add    BYTE PTR [rax],al
   140048de3:	add    al,cl
   140048de5:	sub    al,0x1
   140048de7:	add    BYTE PTR [rdx],al
   140048de9:	sub    eax,0x8dd80001
   140048dee:	add    al,0x0
   140048df0:	adc    DWORD PTR [rdi],ebx
   140048df2:	or     BYTE PTR [rax],al
   140048df4:	(bad)  
   140048df5:	push   rsp
   140048df6:	or     al,0x0
   140048df8:	sbb    esi,DWORD PTR [rbx+rcx*1]
   140048dfb:	add    BYTE PTR [rdi],cl
   140048dfd:	push   rdx
   140048dfe:	or     esp,eax
   140048e00:	or     DWORD PTR [rax+0x8],esi
   140048e03:	(bad)  
   140048e04:	ss push rsi
   140048e06:	add    DWORD PTR [rax],eax
   140048e08:	pop    rax
   140048e09:	adc    BYTE PTR [rax+rax*1],al
   140048e0c:	and    DWORD PTR [rax],eax
   140048e0e:	add    BYTE PTR [rax],al
   140048e10:	or     BYTE PTR [rip+0x2e4e0001],ch        # 0x16e528e17
   140048e16:	add    DWORD PTR [rax],eax
   140048e18:	lock lea eax,[rax+rax*1]
   140048e1c:	(bad)  
   140048e1d:	(bad)  
   140048e1e:	(bad)  
   140048e1f:	dec    DWORD PTR [rax+rbp*2]
   140048e22:	add    DWORD PTR [rax],eax
   140048e24:	add    BYTE PTR [rax],al
   140048e26:	add    BYTE PTR [rax],al
   140048e28:	sbb    BYTE PTR [rax+0x1],ch
   140048e2b:	add    BYTE PTR [rcx],al
   140048e2d:	add    BYTE PTR [rax],al
   140048e2f:	add    BYTE PTR [rax],ch
   140048e31:	push   0x20001
   140048e36:	add    BYTE PTR [rax],al
   140048e38:	cmp    BYTE PTR [rax+0x1],ch
   140048e3b:	add    BYTE PTR [rbx],al
   140048e3d:	add    BYTE PTR [rax],al
   140048e3f:	add    BYTE PTR [rax+0x68],cl
   140048e42:	add    DWORD PTR [rax],eax
   140048e44:	add    al,0x0
   140048e46:	add    BYTE PTR [rax],al
   140048e48:	pop    rax
   140048e49:	push   0x50001
   140048e4e:	add    BYTE PTR [rax],al
   140048e50:	push   0x8000168
   140048e55:	sub    eax,0xffff0001
   140048e5a:	(bad)  
   140048e5b:	jmp    FWORD PTR [rdx]
   140048e5d:	sub    eax,0x60001
   140048e62:	add    BYTE PTR [rax],al
   140048e64:	gs sub eax,0x50001
   140048e6a:	add    BYTE PTR [rax],al
   140048e6c:	jae    0x140048e9b
   140048e6e:	add    DWORD PTR [rax],eax
   140048e70:	add    al,0x0
   140048e72:	add    BYTE PTR [rax],al
   140048e74:	jle    0x140048ea3
   140048e76:	add    DWORD PTR [rax],eax
   140048e78:	add    eax,DWORD PTR [rax]
   140048e7a:	add    BYTE PTR [rax],al
   140048e7c:	mov    DWORD PTR [rip+0x20001],ebp        # 0x140068e83
   140048e82:	add    BYTE PTR [rax],al
   140048e84:	mov    ch,0x2d
   140048e86:	add    DWORD PTR [rax],eax
   140048e88:	add    DWORD PTR [rax],eax
   140048e8a:	add    BYTE PTR [rax],al
   140048e8c:	shr    DWORD PTR [rip+0x1],cl        # 0x140048e93
   140048e92:	add    BYTE PTR [rax],al
   140048e94:	loopne 0x140048ec3
   140048e96:	add    DWORD PTR [rax],eax
   140048e98:	(bad)  
   140048e99:	(bad)  
   140048e9a:	(bad)  
   140048e9b:	dec    DWORD PTR [rip+0x200012e]        # 0x142048fcf
   140048ea1:	add    BYTE PTR [rax],al
   140048ea3:	add    BYTE PTR [rsi+rbp*1],bl
   140048ea6:	add    DWORD PTR [rax],eax
   140048ea8:	add    DWORD PTR [rax],eax
   140048eaa:	add    BYTE PTR [rax],al
   140048eac:	sub    ebp,DWORD PTR [rsi]
   140048eae:	add    DWORD PTR [rax],eax
   140048eb0:	add    al,BYTE PTR [rax]
   140048eb2:	add    BYTE PTR [rax],al
   140048eb4:	ds add DWORD PTR cs:[rax],eax
   140048eb8:	add    DWORD PTR [rax],eax
   140048eba:	add    BYTE PTR [rax],al
   140048ebc:	outs   dx,BYTE PTR ds:[rsi]
   140048ebd:	popf   
   140048ebe:	add    al,BYTE PTR [rax]
   140048ec0:	(bad)  
   140048ec1:	add    BYTE PTR [rax],al
   140048ec3:	add    BYTE PTR [rdx+0x29d],al
   140048ec9:	add    BYTE PTR [rax],al
   140048ecb:	add    BYTE PTR [rcx],al
   140048ecd:	adc    al,0xa
   140048ecf:	add    BYTE PTR [rcx+rax*1],dl
   140048ed2:	adc    eax,DWORD PTR [rax]
   140048ed4:	or     eax,0x9e00bf0
   140048ed9:	rol    BYTE PTR [rdi],1
   140048edb:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143649352
   140048ee2:	add    dh,BYTE PTR [rax]
   140048ee4:	and    DWORD PTR [rax],eax
   140048ee6:	add    BYTE PTR [rax],al
   140048ee8:	jl     0x140048f18
   140048eea:	add    DWORD PTR [rax],eax
   140048eec:	mov    edx,0xcc00012f
   140048ef1:	mov    es,WORD PTR [rax+rax*1]
   140048ef4:	adc    DWORD PTR [rsi],esp
   140048ef6:	or     al,BYTE PTR [rax]
   140048ef8:	es xor al,0xf
   140048efb:	add    BYTE PTR [rdx],bl
   140048efd:	push   rdx
   140048efe:	(bad)  
   140048eff:	lock adc al,0xe0
   140048f02:	adc    dl,al
   140048f04:	adc    al,al
   140048f06:	(bad)  
   140048f07:	jo     0x140048f16
   140048f09:	(bad)  
   140048f0a:	or     al,0x50
   140048f0c:	ss push rsi
   140048f0e:	add    DWORD PTR [rax],eax
   140048f10:	adc    BYTE PTR [rax],0x4
   140048f13:	add    BYTE PTR [rcx],ah
   140048f15:	add    BYTE PTR [rax],al
   140048f17:	add    al,al
   140048f19:	(bad)  
   140048f1a:	add    DWORD PTR [rax],eax
   140048f1c:	icebp  
   140048f1d:	xor    DWORD PTR [rcx],eax
   140048f1f:	add    ah,dh
   140048f21:	mov    es,WORD PTR [rax+rax*1]
   140048f24:	(bad)  
   140048f25:	(bad)  
   140048f26:	(bad)  
   140048f27:	inc    DWORD PTR [rcx+0x168]
   140048f2d:	add    BYTE PTR [rax],al
   140048f2f:	add    BYTE PTR [rbp+0x1000168],cl
   140048f35:	add    BYTE PTR [rax],al
   140048f37:	add    BYTE PTR [rbp+0x2000168],bl
   140048f3d:	add    BYTE PTR [rax],al
   140048f3f:	add    BYTE PTR [rbp+0x3000168],ch
   140048f45:	add    BYTE PTR [rax],al
   140048f47:	add    BYTE PTR [rbp+0x4000168],bh
   140048f4d:	add    BYTE PTR [rax],al
   140048f4f:	add    ch,cl
   140048f51:	push   0x50001
   140048f56:	add    BYTE PTR [rax],al
   140048f58:	(bad)  [rax+0x1]
   140048f5b:	add    al,al
   140048f5d:	(bad)  
   140048f5e:	add    DWORD PTR [rax],eax
   140048f60:	(bad)  
   140048f61:	(bad)  
   140048f62:	(bad)  
   140048f63:	push   rbp
   140048f65:	(bad)  
   140048f66:	add    DWORD PTR [rax],eax
   140048f68:	add    BYTE PTR [rax],al
   140048f6a:	add    BYTE PTR [rax],al
   140048f6c:	cld    
   140048f6d:	(bad)  
   140048f6e:	add    DWORD PTR [rax],eax
   140048f70:	add    DWORD PTR [rax],eax
   140048f72:	add    BYTE PTR [rax],al
   140048f74:	add    esi,DWORD PTR [rax]
   140048f76:	add    DWORD PTR [rax],eax
   140048f78:	add    al,BYTE PTR [rax]
   140048f7a:	add    BYTE PTR [rax],al
   140048f7c:	or     dh,BYTE PTR [rax]
   140048f7e:	add    DWORD PTR [rax],eax
   140048f80:	add    eax,DWORD PTR [rax]
   140048f82:	add    BYTE PTR [rax],al
   140048f84:	(bad)  
   140048f85:	xor    BYTE PTR [rcx],al
   140048f87:	add    BYTE PTR [rax+rax*1],al
   140048f8a:	add    BYTE PTR [rax],al
   140048f8c:	adc    dh,BYTE PTR [rax]
   140048f8e:	add    DWORD PTR [rax],eax
   140048f90:	add    eax,0x1d000000
   140048f95:	xor    BYTE PTR [rcx],al
   140048f97:	add    BYTE PTR [rsi],al
   140048f99:	add    BYTE PTR [rax],al
   140048f9b:	add    BYTE PTR [rdi-0xfffecf],bh
   140048fa1:	(bad)  
   140048fa2:	(bad)  
   140048fa3:	call   rdi
   140048fa5:	xor    DWORD PTR [rcx],eax
   140048fa7:	add    BYTE PTR [rsi],al
   140048fa9:	add    BYTE PTR [rax],al
   140048fab:	add    BYTE PTR [rax],ah
   140048fad:	sahf   
   140048fae:	add    al,BYTE PTR [rax]
   140048fb0:	(bad)  
   140048fb1:	add    BYTE PTR [rax],al
   140048fb3:	add    BYTE PTR [rcx],dl
   140048fb5:	sbb    al,0x6
   140048fb7:	add    BYTE PTR [rsp+riz*2],bl
   140048fba:	or     al,BYTE PTR [rax]
   140048fbc:	sbb    BYTE PTR [rcx+rcx*1],dh
   140048fbf:	add    BYTE PTR [rdx+rdx*2],cl
   140048fc2:	or     BYTE PTR [rax+0x36],dh
   140048fc5:	push   rsi
   140048fc6:	add    DWORD PTR [rax],eax
   140048fc8:	ror    BYTE PTR [rsp+rax*1],0x0
   140048fcc:	and    DWORD PTR [rax],eax
   140048fce:	add    BYTE PTR [rax],al
   140048fd0:	sub    BYTE PTR [rdx],dh
   140048fd2:	add    DWORD PTR [rax],eax
   140048fd4:	mov    ebp,0xb4000132
   140048fd9:	pop    QWORD PTR [rax+rax*1]
   140048fdc:	(bad)  
   140048fdd:	(bad)  
   140048fde:	(bad)  
   140048fdf:	push   rsi
   140048fe1:	push   0x32280001
   140048fe6:	add    DWORD PTR [rax],eax
   140048fe8:	(bad)  
   140048fe9:	(bad)  
   140048fea:	(bad)  
   140048feb:	dec    DWORD PTR [rbp+0x32]
   140048fee:	add    DWORD PTR [rax],eax
   140048ff0:	add    BYTE PTR [rax],al
   140048ff2:	add    BYTE PTR [rax],al
   140048ff4:	stos   BYTE PTR es:[rdi],al
   140048ff5:	xor    al,BYTE PTR [rcx]
   140048ff7:	add    bh,bh
   140048ff9:	(bad)  
   140048ffa:	(bad)  
   140048ffb:	(bad)  
   140048ffc:	jl     0x140048f9c
   140048ffe:	add    al,BYTE PTR [rax]
   140049000:	add    BYTE PTR [rax],al
   140049002:	add    BYTE PTR [rax],al
   140049004:	adc    DWORD PTR [rax+rcx*1],ebx
   140049007:	add    BYTE PTR [rsp+riz*2],bl
   14004900a:	or     eax,DWORD PTR [rax]
   14004900c:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140049010:	adc    al,0x34
   140049012:	or     DWORD PTR [rax],eax
   140049014:	or     BYTE PTR [rdx+0x4],dl
   140049017:	jo     0x14004904f
   140049019:	push   rsi
   14004901a:	add    DWORD PTR [rax],eax
   14004901c:	fmul   DWORD PTR [rip+0xffffffffffff0004]        # 0x140039026
   140049022:	(bad)  
   140049023:	dec    DWORD PTR [rax]
   140049025:	imul   eax,DWORD PTR [rcx],0x1335800
   14004902b:	add    bh,bh
   14004902d:	(bad)  
   14004902e:	(bad)  
   14004902f:	call   QWORD PTR [rbx+rsi*1+0x1]
   140049036:	add    BYTE PTR [rax],al
   140049038:	fidiv  DWORD PTR [rbx]
   14004903a:	add    DWORD PTR [rax],eax
   14004903c:	(bad)  
   14004903d:	(bad)  
   14004903e:	(bad)  
   14004903f:	call   QWORD PTR [rcx]
   140049041:	and    cl,BYTE PTR [rdx]
   140049043:	add    BYTE PTR [rdx],ah
   140049045:	push   rsp
   140049046:	sbb    BYTE PTR [rax],al
   140049048:	(bad)  
   140049049:	xor    al,0x17
   14004904b:	add    BYTE PTR [rdx],dl
   14004904d:	repnz or esi,eax
   140049050:	or     eax,esp
   140049052:	(bad)  
   140049053:	rol    BYTE PTR [rip+0x36600470],0x56        # 0x1766494ca
   14004905a:	add    DWORD PTR [rax],eax
   14004905c:	lock (bad) 
   14004905e:	add    al,0x0
   140049060:	(bad)  
   140049061:	(bad)  
   140049062:	(bad)  
   140049063:	call   FWORD PTR [rdx]
   140049065:	imul   eax,DWORD PTR [rcx],0x1346000
   14004906b:	add    bh,bh
   14004906d:	(bad)  
   14004906e:	(bad)  
   14004906f:	push   QWORD PTR [rsp+rsi*1+0x1]
   140049076:	add    BYTE PTR [rax],al
   140049078:	ja     0x1400490af
   14004907a:	add    DWORD PTR [rax],eax
   14004907c:	(bad)  
   14004907d:	(bad)  
   14004907e:	(bad)  
   14004907f:	call   QWORD PTR [rcx]
   140049081:	and    BYTE PTR [rdx],cl
   140049083:	add    BYTE PTR [rax],ah
   140049085:	xor    al,0xe
   140049087:	add    BYTE PTR [rbx],dl
   140049089:	push   rdx
   14004908a:	or     al,0xf0
   14004908c:	or     ah,al
   14004908e:	or     al,dl
   140049090:	(bad)  
   140049091:	rol    BYTE PTR [rax+rsi*2],0x3
   140049095:	(bad)  
   140049096:	add    dl,BYTE PTR [rax+0x36]
   140049099:	push   rsi
   14004909a:	add    DWORD PTR [rax],eax
   14004909c:	sbb    BYTE PTR [rdi],cl
   14004909e:	add    al,0x0
   1400490a0:	and    DWORD PTR [rax],eax
   1400490a2:	add    BYTE PTR [rax],al
   1400490a4:	shl    BYTE PTR [rip+0x37d00001],0x1        # 0x177d490ac
   1400490ab:	add    BYTE PTR [rax-0xfffb70],al
   1400490b1:	(bad)  
   1400490b2:	(bad)  
   1400490b3:	jmp    FWORD PTR [rcx+rbp*2]
   1400490b6:	add    DWORD PTR [rax],eax
   1400490b8:	add    BYTE PTR [rax],al
   1400490ba:	add    BYTE PTR [rax],al
   1400490bc:	cmp    BYTE PTR [rcx+0x1],ch
   1400490bf:	add    BYTE PTR [rcx],al
   1400490c1:	add    BYTE PTR [rax],al
   1400490c3:	add    BYTE PTR [rcx+rbp*2+0x1],al
   1400490c7:	add    BYTE PTR [rdx],al
   1400490c9:	add    BYTE PTR [rax],al
   1400490cb:	add    BYTE PTR [rax+0x69],dl
   1400490ce:	add    DWORD PTR [rax],eax
   1400490d0:	shl    BYTE PTR [rip+0xffffffffffff0001],0xff        # 0x1400390d8
   1400490d7:	push   rbp
   1400490d9:	xor    eax,0x1
   1400490de:	add    BYTE PTR [rax],al
   1400490e0:	stc    
   1400490e1:	xor    eax,0x10001
   1400490e6:	add    BYTE PTR [rax],al
   1400490e8:	std    
   1400490e9:	xor    eax,0x20001
   1400490ee:	add    BYTE PTR [rax],al
   1400490f0:	add    DWORD PTR [rsi],esi
   1400490f2:	add    DWORD PTR [rax],eax
   1400490f4:	add    eax,DWORD PTR [rax]
   1400490f6:	add    BYTE PTR [rax],al
   1400490f8:	ds (bad) 
   1400490fa:	add    DWORD PTR [rax],eax
   1400490fc:	add    al,BYTE PTR [rax]
   1400490fe:	add    BYTE PTR [rax],al
   140049100:	pop    rbp
   140049101:	(bad)  
   140049102:	add    DWORD PTR [rax],eax
   140049104:	add    DWORD PTR [rax],eax
   140049106:	add    BYTE PTR [rax],al
   140049108:	jl     0x140049141
   14004910a:	add    DWORD PTR [rax],eax
   14004910c:	add    BYTE PTR [rax],al
   14004910e:	add    BYTE PTR [rax],al
   140049110:	fwait
   140049111:	(bad)  
   140049112:	add    DWORD PTR [rax],eax
   140049114:	(bad)  
   140049115:	(bad)  
   140049116:	(bad)  
   140049117:	call   QWORD PTR [rdx-0xfffd62]
   14004911d:	(bad)  
   14004911e:	(bad)  
   14004911f:	call   FWORD PTR [rsi+rbx*4+0x30002]
   140049126:	add    BYTE PTR [rax],al
   140049128:	adc    DWORD PTR [rax],ebx
   14004912a:	add    al,0x0
   14004912c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004912f:	add    BYTE PTR [rdx],cl
   140049131:	push   rdx
   140049132:	(bad)  
   140049133:	jo     0x14004916b
   140049135:	push   rsi
   140049136:	add    DWORD PTR [rax],eax
   140049138:	rex (bad) 
   14004913b:	add    bh,bh
   14004913d:	(bad)  
   14004913e:	(bad)  
   14004913f:	jmp    QWORD PTR [rdx+0x69]
   140049142:	add    DWORD PTR [rax],eax
   140049144:	add    BYTE PTR [rax],al
   140049146:	add    BYTE PTR [rax],al
   140049148:	jb     0x1400491b3
   14004914a:	add    DWORD PTR [rax],eax
   14004914c:	add    DWORD PTR [rax],eax
   14004914e:	add    BYTE PTR [rax],al
   140049150:	(bad)  
   140049151:	imul   eax,DWORD PTR [rcx],0x200
   140049157:	add    BYTE PTR [rbp+0x3000169],dl
   14004915d:	add    BYTE PTR [rax],al
   14004915f:	add    BYTE PTR [rax+0x4000169],ch
   140049165:	add    BYTE PTR [rax],al
   140049167:	add    BYTE PTR [rbx+0x5000169],bh
   14004916d:	add    BYTE PTR [rax],al
   14004916f:	add    dh,cl
   140049171:	imul   eax,DWORD PTR [rcx],0x137d800
   140049177:	add    bh,bh
   140049179:	(bad)  
   14004917a:	(bad)  
   14004917b:	dec    DWORD PTR [rdx]
   14004917d:	cmp    BYTE PTR [rcx],al
   14004917f:	add    BYTE PTR [rax],al
   140049181:	add    BYTE PTR [rax],al
   140049183:	add    BYTE PTR [rax+rdi*1],dl
   140049186:	add    DWORD PTR [rax],eax
   140049188:	add    DWORD PTR [rax],eax
   14004918a:	add    BYTE PTR [rax],al
   14004918c:	sbb    al,0x38
   14004918e:	add    DWORD PTR [rax],eax
   140049190:	add    al,BYTE PTR [rax]
   140049192:	add    BYTE PTR [rax],al
   140049194:	and    al,0x38
   140049196:	add    DWORD PTR [rax],eax
   140049198:	add    eax,DWORD PTR [rax]
   14004919a:	add    BYTE PTR [rax],al
   14004919c:	sub    al,0x38
   14004919e:	add    DWORD PTR [rax],eax
   1400491a0:	add    al,0x0
   1400491a2:	add    BYTE PTR [rax],al
   1400491a4:	xor    al,0x38
   1400491a6:	add    DWORD PTR [rax],eax
   1400491a8:	add    eax,0x41000000
   1400491ad:	cmp    BYTE PTR [rcx],al
   1400491af:	add    BYTE PTR [rsi],al
   1400491b1:	add    BYTE PTR [rax],al
   1400491b3:	add    BYTE PTR [rax+rdi*1+0x1],dl
   1400491b7:	add    bh,bh
   1400491b9:	(bad)  
   1400491ba:	(bad)  
   1400491bb:	inc    DWORD PTR [rcx]
   1400491bd:	adc    eax,0x74150008
   1400491c2:	or     BYTE PTR [rax],al
   1400491c4:	adc    eax,0x15000764
   1400491c9:	xor    al,0x6
   1400491cb:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e4a303
   1400491d1:	add    BYTE PTR [rax],al
   1400491d3:	add    BYTE PTR [rax+0x38],ch
   1400491d6:	add    DWORD PTR [rax],eax
   1400491d8:	or     al,0x39
   1400491da:	add    DWORD PTR [rax],eax
   1400491dc:	mov    esp,0x19000491
   1400491e1:	or     DWORD PTR cs:[rax],eax
   1400491e4:	sbb    eax,0x1d00ad64
   1400491e9:	xor    al,0xac
   1400491eb:	add    BYTE PTR [rip+0xe00a601],bl        # 0x14e0537f2
   1400491f1:	loopne 0x1400491ff
   1400491f3:	jo     0x140049200
   1400491f5:	push   rax
   1400491f6:	add    BYTE PTR [rax],al
   1400491f8:	mov    eax,0x2000014a
   1400491fd:	add    eax,0x210000
   140049202:	add    BYTE PTR [rax],al
   140049204:	adc    al,0x39
   140049206:	add    DWORD PTR [rax],eax
   140049208:	and    BYTE PTR [rbx],bh
   14004920a:	add    DWORD PTR [rax],eax
   14004920c:	loopne 0x14004919f
   14004920e:	add    al,0x0
   140049210:	add    DWORD PTR [rdx],edx
   140049212:	add    eax,0xe421200
   140049217:	jo     0x140049226
   140049219:	(bad)  
   14004921a:	or     al,0x50
   14004921c:	or     esi,DWORD PTR [rax]
   14004921e:	add    BYTE PTR [rax],al
   140049220:	and    DWORD PTR [rax],eax
   140049222:	add    BYTE PTR [rax],al
   140049224:	sub    BYTE PTR [rbx],bh
   140049226:	add    DWORD PTR [rax],eax
   140049228:	fwait
   140049229:	cmp    eax,DWORD PTR [rcx]
   14004922b:	add    BYTE PTR [rax],dl
   14004922d:	xchg   edx,eax
   14004922e:	add    al,0x0
   140049230:	add    DWORD PTR [rax],edx
   140049232:	(bad)  
   140049233:	add    BYTE PTR [rax],dl
   140049235:	fs or  eax,0xa341000
   14004923b:	add    BYTE PTR [rax],dl
   14004923d:	jb     0x14004924b
   14004923f:	jo     0x140049262
   140049241:	add    BYTE PTR [rax],al
   140049243:	add    BYTE PTR [rbx+rdi*1+0x3c580001],ah
   14004924a:	add    DWORD PTR [rax],eax
   14004924c:	xor    BYTE PTR [rdx+0x10010004],dl
   140049252:	(bad)  
   140049253:	add    BYTE PTR [rax],dl
   140049255:	or     al,BYTE PTR fs:[rax]
   140049258:	adc    BYTE PTR [rcx+rcx*1],dh
   14004925b:	add    BYTE PTR [rax],dl
   14004925d:	push   rdx
   14004925e:	or     al,0x70
   140049260:	and    DWORD PTR [rax],eax
   140049262:	add    BYTE PTR [rax],al
   140049264:	test   al,0x3c
   140049266:	add    DWORD PTR [rax],eax
   140049268:	pop    rsp
   140049269:	cmp    eax,0x92500001
   14004926e:	add    al,0x0
   140049270:	or     DWORD PTR [rbx+rcx*1],ebx
   140049273:	add    BYTE PTR [rsp+rsi*2],bl
   140049276:	sbb    al,0x0
   140049278:	sbb    al,0x64
   14004927a:	sbb    eax,DWORD PTR [rax]
   14004927c:	sbb    al,0x34
   14004927e:	sbb    al,BYTE PTR [rax]
   140049280:	sbb    al,0x1
   140049282:	(bad)  
   140049283:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e4a679
   140049289:	rol    BYTE PTR [rax],0x0
   14004928c:	xchg   esi,eax
   14004928d:	add    QWORD PTR [r8],rax
   140049290:	add    DWORD PTR [rax],eax
   140049292:	add    BYTE PTR [rax],al
   140049294:	push   rax
   140049295:	(bad)  
   140049296:	add    DWORD PTR [rax],eax
   140049298:	rex.RX
   140049299:	add    DWORD PTR [r8],eax
   14004929c:	out    0x69,eax
   14004929e:	add    DWORD PTR [rax],eax
   1400492a0:	rex.RX
   1400492a1:	add    DWORD PTR [r8],eax
   1400492a4:	add    BYTE PTR [rax],al
   1400492a6:	add    BYTE PTR [rax],al
   1400492a8:	add    DWORD PTR [rax],eax
   1400492aa:	add    BYTE PTR [rax],al
   1400492ac:	adc    DWORD PTR [rax],ebx
   1400492ae:	add    eax,0x14621800
   1400492b3:	loopne 0x1400492c7
   1400492b5:	jo     0x1400492c8
   1400492b7:	(bad)  
   1400492b8:	adc    BYTE PTR [rax],dh
   1400492ba:	add    BYTE PTR [rax],al
   1400492bc:	xchg   esi,eax
   1400492bd:	add    QWORD PTR [r8],rax
   1400492c0:	add    DWORD PTR [rax],eax
   1400492c2:	add    BYTE PTR [rax],al
   1400492c4:	(bad)  
   1400492c5:	rex.X add DWORD PTR [rax],eax
   1400492c8:	push   rsp
   1400492c9:	rex.X add DWORD PTR [rax],eax
   1400492cc:	or     ebp,DWORD PTR [rdx+0x1]
   1400492cf:	add    BYTE PTR [rax],al
   1400492d1:	add    BYTE PTR [rax],al
   1400492d3:	add    BYTE PTR [rcx],cl
   1400492d5:	(bad)  
   1400492d6:	(bad)  
   1400492d7:	add    BYTE PTR [rdi],dl
   1400492d9:	xor    al,0xd
   1400492db:	add    BYTE PTR [rdi],dl
   1400492dd:	jb     0x1400492f2
   1400492df:	loopne 0x1400492f2
   1400492e1:	jo     0x1400492f3
   1400492e3:	(bad)  
   1400492e4:	xchg   esi,eax
   1400492e5:	add    QWORD PTR [r8],rax
   1400492e8:	add    DWORD PTR [rax],eax
   1400492ea:	add    BYTE PTR [rax],al
   1400492ec:	xchg   DWORD PTR [rdx+0x1],eax
   1400492ef:	add    BYTE PTR [rdx+0x3d000142],ch
   1400492f5:	push   0x1
   1400492f7:	add    BYTE PTR [rdx+0x1000142],ch
   1400492fd:	(bad)  
   1400492fe:	add    al,BYTE PTR [rax]
   140049300:	(bad)  
   140049301:	xor    al,BYTE PTR [rdx]
   140049303:	push   rax
   140049304:	add    DWORD PTR [rdx+rax*1],ecx
   140049307:	add    BYTE PTR [rcx+rax*1],cl
   14004930a:	adc    DWORD PTR [rax],eax
   14004930c:	adc    DWORD PTR [rdx],ecx
   14004930e:	add    al,0x0
   140049310:	or     dh,BYTE PTR [rsi+rax*1]
   140049313:	add    BYTE PTR [rdx],cl
   140049315:	xor    al,BYTE PTR [rsi]
   140049317:	jo     0x1400492af
   140049319:	add    QWORD PTR [r8],rax
   14004931c:	add    DWORD PTR [rax],eax
   14004931e:	add    BYTE PTR [rax],al
   140049320:	sbb    DWORD PTR [rbp+0x1],eax
   140049323:	add    BYTE PTR [rsi+0x45],bl
   140049326:	add    DWORD PTR [rax],eax
   140049328:	test   DWORD PTR [rdx+0x1],ebp
   14004932b:	add    BYTE PTR [rax],al
   14004932d:	add    BYTE PTR [rax],al
   14004932f:	add    BYTE PTR [rcx],dl
   140049331:	sbb    al,0x8
   140049333:	add    BYTE PTR [rsp+riz*2],bl
   140049336:	or     eax,0xc341c00
   14004933b:	add    BYTE PTR [rdx+rdx*2],bl
   14004933e:	sbb    al,dh
   140049340:	(bad)  
   140049341:	loopne 0x140049357
   140049343:	jo     0x1400492db
   140049345:	add    QWORD PTR [r8],rax
   140049348:	add    DWORD PTR [rax],eax
   14004934a:	add    BYTE PTR [rax],al
   14004934c:	int3   
   14004934d:	add    DWORD PTR [r8],r8d
   140049350:	clc    
   140049351:	add    DWORD PTR [r8],r8d
   140049354:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140049355:	push   0x1
   140049357:	add    BYTE PTR [rax],al
   140049359:	add    BYTE PTR [rax],al
   14004935b:	add    BYTE PTR [rcx],cl
   14004935d:	add    al,0x1
   14004935f:	add    BYTE PTR [rdx+riz*1],al
   140049362:	add    BYTE PTR [rax],al
   140049364:	xchg   esi,eax
   140049365:	add    QWORD PTR [r8],rax
   140049368:	add    DWORD PTR [rax],eax
   14004936a:	add    BYTE PTR [rax],al
   14004936c:	sbb    al,0x47
   14004936e:	add    DWORD PTR [rax],eax
   140049370:	push   rdx
   140049371:	rex.RXB add DWORD PTR [r8],r8d
   140049374:	add    DWORD PTR [rax],eax
   140049376:	add    BYTE PTR [rax],al
   140049378:	push   rdx
   140049379:	rex.RXB add DWORD PTR [r8],r8d
   14004937c:	or     DWORD PTR [rdx],ecx
   14004937e:	add    al,0x0
   140049380:	or     dh,BYTE PTR [rsi+rax*1]
   140049383:	add    BYTE PTR [rdx],cl
   140049385:	xor    al,BYTE PTR [rsi]
   140049387:	jo     0x14004931f
   140049389:	add    QWORD PTR [r8],rax
   14004938c:	add    DWORD PTR [rax],eax
   14004938e:	add    BYTE PTR [rax],al
   140049390:	sbb    eax,0x50000148
   140049395:	add    QWORD PTR [rax],rax
   140049398:	loopne 0x140049404
   14004939a:	add    DWORD PTR [rax],eax
   14004939c:	push   rax
   14004939d:	add    QWORD PTR [rax],rax
   1400493a0:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1741193aa
   1400493a6:	or     DWORD PTR [rax],eax
   1400493a8:	or     eax,0x19500632
   1400493ad:	sbb    eax,DWORD PTR [rbx]
   1400493af:	add    BYTE PTR [rcx],cl
   1400493b1:	add    DWORD PTR [rax+0x300200],ebp
   1400493b7:	add    BYTE PTR [rax+0x3000014a],bh
   1400493bd:	add    eax,0x10000
   1400493c2:	add    BYTE PTR [rax],al
   1400493c4:	add    DWORD PTR [rax],ebx
   1400493c6:	add    DWORD PTR [rax],eax
   1400493c8:	sbb    dl,al
   1400493ca:	add    BYTE PTR [rax],al
   1400493cc:	add    DWORD PTR [rax],ebx
   1400493ce:	add    DWORD PTR [rax],eax
   1400493d0:	sbb    dl,al
   1400493d2:	add    BYTE PTR [rax],al
   1400493d4:	add    DWORD PTR [rax],ebx
   1400493d6:	add    DWORD PTR [rax],eax
   1400493d8:	sbb    dl,al
   1400493da:	add    BYTE PTR [rax],al
   1400493dc:	add    DWORD PTR [rax],ebx
   1400493de:	add    DWORD PTR [rax],eax
   1400493e0:	sbb    dl,al
   1400493e2:	add    BYTE PTR [rax],al
   1400493e4:	add    DWORD PTR [rax],ebx
   1400493e6:	add    DWORD PTR [rax],eax
   1400493e8:	sbb    dl,al
   1400493ea:	add    BYTE PTR [rax],al
   1400493ec:	sbb    DWORD PTR [rax],edi
   1400493ee:	or     DWORD PTR [rax],eax
   1400493f0:	(bad)  
   1400493f1:	je     0x14004944a
   1400493f3:	add    BYTE PTR [rbx],ah
   1400493f5:	fs push rsi
   1400493f7:	add    BYTE PTR [rdi],bl
   1400493f9:	xor    al,0x54
   1400493fb:	add    BYTE PTR [rdx],dl
   1400493fd:	add    DWORD PTR [rdx+0x0],edx
   140049400:	add    al,0x50
   140049402:	add    BYTE PTR [rax],al
   140049404:	rex.R push rsi
   140049406:	add    DWORD PTR [rax],eax
   140049408:	add    bh,bh
   14004940a:	add    eax,DWORD PTR [rax]
   14004940c:	(bad)  
   14004940d:	add    al,BYTE PTR [rax]
   14004940f:	add    bh,bh
   140049411:	(bad)  
   140049412:	(bad)  
   140049413:	call   QWORD PTR [rsi+0x2bf]
   140049419:	add    BYTE PTR [rax],al
   14004941b:	add    BYTE PTR [rdx+0x10002bf],ah
   140049421:	add    BYTE PTR [rax],al
   140049423:	add    BYTE PTR [rsi+0x20002bf],ch
   140049429:	add    BYTE PTR [rax],al
   14004942b:	add    BYTE PTR [rdx-0x43fffd41],bh
   140049431:	mov    esp,0xffff0002
   140049436:	(bad)  
   140049437:	jmp    QWORD PTR [rsi]
   140049439:	mov    ebp,0x2
   14004943e:	add    BYTE PTR [rax],al
   140049440:	out    dx,eax
   140049441:	mov    ebp,0x10002
   140049446:	add    BYTE PTR [rax],al
   140049448:	movabs rsi,0xbe4e000000020002
   140049452:	add    al,BYTE PTR [rax]
   140049454:	add    eax,DWORD PTR [rax]
   140049456:	add    BYTE PTR [rax],al
   140049458:	sar    BYTE PTR [rsi+0x20002],0x0
   14004945f:	add    al,ah
   140049461:	mov    esi,0x10002
   140049466:	add    BYTE PTR [rax],al
   140049468:	sbb    bh,BYTE PTR [rdi+0x2]
   14004946e:	add    BYTE PTR [rax],al
   140049470:	pop    rdx
   140049471:	mov    edi,0xffff0002
   140049476:	(bad)  
   140049477:	call   FWORD PTR [rcx]
   140049479:	and    DWORD PTR [rdi],eax
   14004947b:	add    BYTE PTR [rax],bl
   14004947d:	(bad)  
   14004947e:	adc    al,0xf0
   140049480:	adc    ah,al
   140049482:	adc    al,dl
   140049484:	(bad)  
   140049485:	ror    BYTE PTR [rax+riz*2],0xb
   140049489:	xor    BYTE PTR [rax],al
   14004948b:	add    BYTE PTR [rsi],dh
   14004948d:	push   rsi
   14004948e:	add    DWORD PTR [rax],eax
   140049490:	sub    bh,bh
   140049492:	add    eax,DWORD PTR [rax]
   140049494:	(bad)  
   140049495:	(bad)  
   140049496:	(bad)  
   140049497:	inc    DWORD PTR [rax]
   140049499:	add    BYTE PTR [rax],al
   14004949b:	add    BYTE PTR [rax],al
   14004949d:	add    BYTE PTR [rax],al
   14004949f:	add    dh,dl
   1400494a1:	(bad)
   1400494a4:	(bad)  
   1400494a5:	(bad)  
   1400494a6:	(bad)  
   1400494a7:	inc    DWORD PTR [rax]
   1400494a9:	add    BYTE PTR [rax],al
   1400494ab:	add    bh,bh
   1400494ad:	(bad)  
   1400494ae:	(bad)  
   1400494af:	(bad)  
   1400494b0:	std    
   1400494b1:	(bad)
   1400494b4:	add    BYTE PTR [rax],al
   1400494b6:	add    BYTE PTR [rax],al
   1400494b8:	add    DWORD PTR [rax],eax
   1400494ba:	add    BYTE PTR [rax],al
   1400494bc:	add    al,BYTE PTR [rax]
   1400494be:	add    BYTE PTR [rax],al
   1400494c0:	add    DWORD PTR [rax],eax
   1400494c2:	add    BYTE PTR [rax],al
   1400494c4:	enter  0x494,0x0
   1400494c8:	add    BYTE PTR [rax],al
	...
   1400494d3:	add    dl,ah
   1400494d5:	(bad)
   1400494d8:	rex.W add BYTE PTR [rax],al
   1400494db:	add    BYTE PTR [rbx+rax*8+0x2],dh
   1400494df:	add    bh,bh
   1400494e1:	(bad)  
   1400494e2:	(bad)  
   1400494e3:	(bad)  
   1400494e4:	call   0x1400497ac
   1400494e9:	add    BYTE PTR [rax],al
   1400494eb:	add    BYTE PTR [rax],dl
   1400494ed:	(bad)
   1400494f1:	add    BYTE PTR [rax],al
   1400494f3:	add    BYTE PTR [rdx-0x3c],al
   1400494f6:	add    al,BYTE PTR [rax]
   1400494f8:	add    BYTE PTR [rax],al
   1400494fa:	add    BYTE PTR [rax],al
   1400494fc:	(bad)
   140049501:	(bad)  
   140049502:	(bad)  
   140049503:	(bad)  
   140049504:	fadd   st(4),st
   140049506:	add    al,BYTE PTR [rax]
   140049508:	add    eax,DWORD PTR [rax]
   14004950a:	add    BYTE PTR [rax],al
   14004950c:	jl     0x1400494d3
   14004950e:	add    al,BYTE PTR [rax]
   140049510:	(bad)  
   140049511:	(bad)  
   140049512:	(bad)  
   140049513:	jmp    rdx
   140049515:	(bad)
   140049518:	add    BYTE PTR [rax],al
   14004951a:	add    BYTE PTR [rax],al
   14004951c:	sbb    DWORD PTR [rdx],ecx
   14004951e:	add    al,BYTE PTR [rax]
   140049520:	or     dl,BYTE PTR [rdx+0x6]
   140049523:	push   rax
   140049524:	ss push rsi
   140049526:	add    DWORD PTR [rax],eax
   140049528:	sub    bh,bh
   14004952a:	add    eax,DWORD PTR [rax]
   14004952c:	add    DWORD PTR [rsi+rax*1],edx
   14004952f:	add    BYTE PTR [rsp+riz*2],dl
   140049532:	(bad)  
   140049533:	add    BYTE PTR [rsp+rsi*1],dl
   140049536:	(bad)  
   140049537:	add    BYTE PTR [rdx+rsi*1],dl
   14004953a:	adc    BYTE PTR [rax+0x19],dh
   14004953d:	and    BYTE PTR [rsi],al
   14004953f:	add    BYTE PTR [rax],ah
   140049541:	fs or  eax,0xb341c00
   140049547:	add    BYTE PTR [rax],dl
   140049549:	jb     0x140049557
   14004954b:	jo     0x140049583
   14004954d:	push   rsi
   14004954e:	add    DWORD PTR [rax],eax
   140049550:	push   rax
   140049551:	inc    DWORD PTR [rbx]
   140049553:	add    bh,bh
   140049555:	(bad)  
   140049556:	(bad)  
   140049557:	inc    DWORD PTR [rax]
   140049559:	add    BYTE PTR [rax],al
   14004955b:	add    bh,bh
   14004955d:	(bad)  
   14004955e:	(bad)  
   14004955f:	inc    DWORD PTR [rax]
	...
   140049569:	add    BYTE PTR [rax],al
   14004956b:	add    BYTE PTR [rcx],al
   14004956d:	add    BYTE PTR [rax],al
   14004956f:	add    BYTE PTR [rcx],al
   140049571:	add    BYTE PTR [rax],al
   140049573:	add    BYTE PTR [rax-0x6b],bh
   140049576:	add    al,0x0
   140049578:	add    BYTE PTR [rax],al
	...
   140049583:	add    BYTE PTR [rbx+0x380002b0],dh
   140049589:	add    BYTE PTR [rax],al
   14004958b:	add    ah,ah
   14004958d:	scas   eax,DWORD PTR es:[rdi]
   14004958e:	add    al,BYTE PTR [rax]
   140049590:	(bad)  
   140049591:	(bad)  
   140049592:	(bad)  
   140049593:	call   FWORD PTR [rax+rsi*4]
   140049596:	add    al,BYTE PTR [rax]
   140049598:	add    BYTE PTR [rax],al
   14004959a:	add    BYTE PTR [rax],al
   14004959c:	cs mov al,0x2
   14004959f:	add    bh,bh
   1400495a1:	(bad)  
   1400495a2:	(bad)  
   1400495a3:	push   QWORD PTR [rbx+0x2b0]
   1400495a9:	add    BYTE PTR [rax],al
   1400495ab:	add    BYTE PTR [rcx],bl
   1400495ad:	or     al,BYTE PTR [rdx]
   1400495af:	add    BYTE PTR [rdx],cl
   1400495b1:	xor    al,BYTE PTR [rsi]
   1400495b3:	push   rax
   1400495b4:	ss push rsi
   1400495b6:	add    DWORD PTR [rax],eax
   1400495b8:	push   rax
   1400495b9:	inc    DWORD PTR [rbx]
   1400495bb:	add    BYTE PTR [rcx],al
   1400495bd:	and    BYTE PTR [rax+rax*1],cl
   1400495c0:	and    BYTE PTR [rbp+rcx*1+0x0],ah
   1400495c4:	and    BYTE PTR [rbx+rcx*1+0x0],dl
   1400495c8:	and    BYTE PTR [rdx+rcx*1],dh
   1400495cb:	add    BYTE PTR [rax],ah
   1400495cd:	xor    bl,BYTE PTR [rax+rsi*8]
   1400495d0:	sbb    ah,al
   1400495d2:	sbb    al,dl
   1400495d4:	(bad)  
   1400495d5:	rcl    BYTE PTR [rax+rsi*2],0x1
   1400495d9:	clts   
   1400495db:	add    BYTE PTR [rdi],cl
   1400495dd:	or     DWORD PTR fs:[rax],eax
   1400495e0:	sysenter 
   1400495e2:	or     BYTE PTR [rax],al
   1400495e4:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400495e7:	jo     0x1400495fa
   1400495e9:	sbb    al,0x8
   1400495eb:	add    BYTE PTR [rsp+riz*2],bl
   1400495ee:	or     al,BYTE PTR [rax]
   1400495f0:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400495f4:	adc    al,0x34
   1400495f6:	or     BYTE PTR [rax],al
   1400495f8:	or     BYTE PTR [rdx+0x4],dl
   1400495fb:	jo     0x140049633
   1400495fd:	push   rsi
   1400495fe:	add    DWORD PTR [rax],eax
   140049600:	movabs al,ds:0x88ffffffff0003ff
   140049609:	rol    BYTE PTR [rdx],1
   14004960b:	add    al,dh
   14004960d:	iret   
   14004960e:	add    al,BYTE PTR [rax]
   140049610:	(bad)  
   140049611:	(bad)  
   140049612:	(bad)  
   140049613:	push   QWORD PTR [rip+0x2d0]        # 0x1400498e9
   140049619:	add    BYTE PTR [rax],al
   14004961b:	add    BYTE PTR [rbp-0x30],dl
   14004961e:	add    al,BYTE PTR [rax]
   140049620:	(bad)  
   140049621:	(bad)  
   140049622:	(bad)  
   140049623:	call   QWORD PTR [rcx]
   140049625:	sbb    al,0x6
   140049627:	add    BYTE PTR [rsp+riz*2],bl
   14004962a:	or     al,BYTE PTR [rax]
   14004962c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004962f:	add    BYTE PTR [rdx+rdx*2],cl
   140049632:	or     BYTE PTR [rax+0x36],dh
   140049635:	push   rsi
   140049636:	add    DWORD PTR [rax],eax
   140049638:	enter  0x3ff,0x0
   14004963c:	(bad)  
   14004963d:	(bad)  
   14004963e:	(bad)  
   14004963f:	dec    DWORD PTR [rdx-0x57]
   140049642:	add    al,BYTE PTR [rax]
   140049644:	loopne 0x1400495ee
   140049646:	add    al,BYTE PTR [rax]
   140049648:	(bad)  
   140049649:	(bad)  
   14004964a:	(bad)  
   14004964b:	dec    DWORD PTR [rcx]
   14004964d:	test   eax,0x2
   140049652:	add    BYTE PTR [rax],al
   140049654:	sub    eax,0xff0002a9
   140049659:	(bad)  
   14004965a:	(bad)  
   14004965b:	call   QWORD PTR [rcx]
   14004965d:	sbb    al,0x6
   14004965f:	add    BYTE PTR [rsp+riz*2],bl
   140049662:	or     al,BYTE PTR [rax]
   140049664:	sbb    BYTE PTR [rcx+rcx*1],dh
   140049667:	add    BYTE PTR [rdx+rdx*2],cl
   14004966a:	or     BYTE PTR [rax+0x36],dh
   14004966d:	push   rsi
   14004966e:	add    DWORD PTR [rax],eax
   140049670:	lock inc DWORD PTR [rbx]
   140049673:	add    bh,bh
   140049675:	(bad)  
   140049676:	(bad)  
   140049677:	(bad)  
   140049678:	out    dx,eax
   140049679:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004967a:	add    al,BYTE PTR [rax]
   14004967c:	add    BYTE PTR [rax],al
   14004967e:	add    BYTE PTR [rax],al
   140049680:	jmp    QWORD PTR [rsi-0x59b3fffe]
   140049686:	add    al,BYTE PTR [rax]
   140049688:	(bad)  
   140049689:	(bad)  
   14004968a:	(bad)  
   14004968b:	push   QWORD PTR [rdx-0x5a]
   14004968e:	add    al,BYTE PTR [rax]
   140049690:	add    BYTE PTR [rax],al
   140049692:	add    BYTE PTR [rax],al
   140049694:	mov    edi,0x10002a6
   140049699:	add    BYTE PTR [rax],al
   14004969b:	add    ah,bl
   14004969d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004969e:	add    al,BYTE PTR [rax]
   1400496a0:	(bad)  
   1400496a1:	(bad)  
   1400496a2:	(bad)  
   1400496a3:	call   QWORD PTR [rcx]
   1400496a5:	sbb    al,0x6
   1400496a7:	add    BYTE PTR [rsp+riz*2],bl
   1400496aa:	or     al,BYTE PTR [rax]
   1400496ac:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400496af:	add    BYTE PTR [rdx+rdx*2],cl
   1400496b2:	or     BYTE PTR [rax+0x36],dh
   1400496b5:	push   rsi
   1400496b6:	add    DWORD PTR [rax],eax
   1400496b8:	sbb    BYTE PTR [rax],al
   1400496ba:	add    al,0x0
   1400496bc:	(bad)  
   1400496bd:	(bad)  
   1400496be:	(bad)  
   1400496bf:	dec    edx
   1400496c1:	test   al,0x2
   1400496c3:	add    BYTE PTR [rax-0x58],bl
   1400496c6:	add    al,BYTE PTR [rax]
   1400496c8:	(bad)  
   1400496c9:	(bad)  
   1400496ca:	(bad)  
   1400496cb:	(bad)  
   1400496cc:	jle    0x140049676
   1400496ce:	add    al,BYTE PTR [rax]
   1400496d0:	add    BYTE PTR [rax],al
   1400496d2:	add    BYTE PTR [rax],al
   1400496d4:	scas   al,BYTE PTR es:[rdi]
   1400496d5:	test   al,0x2
   1400496d7:	add    bh,bh
   1400496d9:	(bad)  
   1400496da:	(bad)  
   1400496db:	call   QWORD PTR [rcx]
   1400496dd:	sbb    al,0x6
   1400496df:	add    BYTE PTR [rsp+riz*2],bl
   1400496e2:	or     eax,DWORD PTR [rax]
   1400496e4:	sbb    BYTE PTR [rdx+rcx*1],dh
   1400496e7:	add    BYTE PTR [rdx+rdx*2],cl
   1400496ea:	or     BYTE PTR [rax+0x36],dh
   1400496ed:	push   rsi
   1400496ee:	add    DWORD PTR [rax],eax
   1400496f0:	add    BYTE PTR [rax+rax*1],al
   1400496f4:	(bad)  
   1400496f5:	(bad)  
   1400496f6:	(bad)  
   1400496f7:	jmp    QWORD PTR [rsi]
   1400496f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400496fa:	add    al,BYTE PTR [rax]
   1400496fc:	add    BYTE PTR [rax],al
   1400496fe:	add    BYTE PTR [rax],al
   140049700:	cmps   BYTE PTR ss:[rsi],BYTE PTR es:[rdi]
   140049702:	add    al,BYTE PTR [rax]
   140049704:	pushf  
   140049705:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140049706:	add    al,BYTE PTR [rax]
   140049708:	(bad)  
   140049709:	(bad)  
   14004970a:	(bad)  
   14004970b:	inc    edx
   14004970d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004970e:	add    al,BYTE PTR [rax]
   140049710:	add    BYTE PTR [rax],al
   140049712:	add    BYTE PTR [rax],al
   140049714:	mul    BYTE PTR [rbp+0x10002]
   14004971a:	add    BYTE PTR [rax],al
   14004971c:	adc    esp,DWORD PTR [rsi-0xfffe]
   140049722:	(bad)  
   140049723:	call   QWORD PTR [rcx]
   140049725:	sbb    al,0x6
   140049727:	add    BYTE PTR [rsp+riz*2],bl
   14004972a:	or     al,BYTE PTR [rax]
   14004972c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004972f:	add    BYTE PTR [rdx+rdx*2],cl
   140049732:	or     BYTE PTR [rax+0x36],dh
   140049735:	push   rsi
   140049736:	add    DWORD PTR [rax],eax
   140049738:	push   0xffffffffff000400
   14004973d:	(bad)  
   14004973e:	(bad)  
   14004973f:	jmp    QWORD PTR [rbx+0x180002a7]
   140049745:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140049746:	add    al,BYTE PTR [rax]
   140049748:	(bad)  
   140049749:	(bad)  
   14004974a:	(bad)  
   14004974b:	(bad)  
   14004974c:	cmp    eax,0x2a7
   140049751:	add    BYTE PTR [rax],al
   140049753:	add    BYTE PTR [rax-0xfffd59],dl
   140049759:	(bad)  
   14004975a:	(bad)  
   14004975b:	call   FWORD PTR [rcx]
   14004975d:	(bad)  
   14004975e:	(bad)  
   14004975f:	add    BYTE PTR [rip+0xff01172],dl        # 0x14ff4a8d7
   140049765:	loopne 0x140049774
   140049767:	jo     0x140049775
   140049769:	(bad)  
   14004976a:	or     esi,DWORD PTR [rax]
   14004976c:	ss push rsi
   14004976e:	add    DWORD PTR [rax],eax
   140049770:	mov    eax,0xff000400
   140049775:	(bad)  
   140049776:	(bad)  
   140049777:	inc    DWORD PTR [rax]
   140049779:	add    BYTE PTR [rax],al
   14004977b:	add    BYTE PTR [rax],al
   14004977d:	add    BYTE PTR [rax],al
   14004977f:	add    BYTE PTR [rbx-0x4c],al
   140049782:	add    al,BYTE PTR [rax]
   140049784:	(bad)  
   140049785:	(bad)  
   140049786:	(bad)  
   140049787:	inc    DWORD PTR [rax]
   140049789:	add    BYTE PTR [rax],al
   14004978b:	add    BYTE PTR [rax],al
   14004978d:	add    BYTE PTR [rax],al
   14004978f:	add    BYTE PTR [rcx],al
   140049791:	add    BYTE PTR [rax],al
   140049793:	add    BYTE PTR [rdx],al
   140049795:	add    BYTE PTR [rax],al
   140049797:	add    BYTE PTR [rcx],al
   140049799:	add    BYTE PTR [rax],al
   14004979b:	add    BYTE PTR [rax+0x40000497],ah
	...
   1400497a9:	add    BYTE PTR [rax],al
   1400497ab:	add    BYTE PTR [rdi-0x4c],cl
   1400497ae:	add    al,BYTE PTR [rax]
   1400497b0:	cmp    BYTE PTR [rax],al
   1400497b2:	add    BYTE PTR [rax],al
   1400497b4:	fs mov bl,0x2
   1400497b7:	add    bh,bh
   1400497b9:	(bad)  
   1400497ba:	(bad)  
   1400497bb:	push   QWORD PTR [rax+0x2b3]
   1400497c1:	add    BYTE PTR [rax],al
   1400497c3:	add    BYTE PTR [rdi+0x10002b3],bh
   1400497c9:	add    BYTE PTR [rax],al
   1400497cb:	add    dh,dl
   1400497cd:	mov    bl,0x2
   1400497cf:	add    BYTE PTR [rax],al
   1400497d1:	add    BYTE PTR [rax],al
   1400497d3:	add    bl,bl
   1400497d5:	mov    bl,0x2
   1400497d7:	add    bh,bh
   1400497d9:	(bad)  
   1400497da:	(bad)  
   1400497db:	dec    DWORD PTR [rdi-0x4c]
   1400497de:	add    al,BYTE PTR [rax]
   1400497e0:	add    BYTE PTR [rax],al
   1400497e2:	add    BYTE PTR [rax],al
   1400497e4:	sbb    DWORD PTR [rdx],ecx
   1400497e6:	add    al,BYTE PTR [rax]
   1400497e8:	or     dh,BYTE PTR [rdx]
   1400497ea:	(bad)  
   1400497eb:	push   rax
   1400497ec:	ss push rsi
   1400497ee:	add    DWORD PTR [rax],eax
   1400497f0:	mov    eax,0x19000400
   1400497f5:	and    al,BYTE PTR [rsi]
   1400497f7:	add    BYTE PTR [rdx],bl
   1400497f9:	push   rdx
   1400497fa:	(bad)  
   1400497fb:	lock adc al,0xe0
   1400497fe:	adc    dh,BYTE PTR [rax+0x11]
   140049801:	(bad)  
   140049802:	adc    BYTE PTR [rax],dh
   140049804:	ss push rsi
   140049806:	add    DWORD PTR [rax],eax
   140049808:	loopne 0x14004980a
   14004980a:	add    al,0x0
   14004980c:	(bad)  
   14004980d:	(bad)  
   14004980e:	(bad)  
   14004980f:	inc    DWORD PTR [rax]
   140049811:	add    BYTE PTR [rax],al
   140049813:	add    BYTE PTR [rax],al
   140049815:	add    BYTE PTR [rax],al
   140049817:	add    BYTE PTR [rdi-0x4b],cl
   14004981a:	add    al,BYTE PTR [rax]
   14004981c:	(bad)  
   14004981d:	(bad)  
   14004981e:	(bad)  
   14004981f:	inc    DWORD PTR [rax]
   140049821:	add    BYTE PTR [rax],al
   140049823:	add    BYTE PTR [rax],al
   140049825:	add    BYTE PTR [rax],al
   140049827:	add    BYTE PTR [rcx],al
   140049829:	add    BYTE PTR [rax],al
   14004982b:	add    BYTE PTR [rdx],al
   14004982d:	add    BYTE PTR [rax],al
   14004982f:	add    BYTE PTR [rcx],al
   140049831:	add    BYTE PTR [rax],al
   140049833:	add    BYTE PTR [rax],bh
   140049835:	cwde   
   140049836:	add    al,0x0
   140049838:	add    BYTE PTR [rax],al
	...
   140049843:	add    BYTE PTR [rbx-0x4b],bl
   140049846:	add    al,BYTE PTR [rax]
   140049848:	cmp    BYTE PTR [rax],al
   14004984a:	add    BYTE PTR [rax],al
   14004984c:	jo     0x140049802
   14004984e:	add    al,BYTE PTR [rax]
   140049850:	(bad)  
   140049851:	(bad)  
   140049852:	(bad)  
   140049853:	(bad)  
   140049854:	mov    esp,0x2b4
   140049859:	add    BYTE PTR [rax],al
   14004985b:	add    bl,cl
   14004985d:	mov    ah,0x2
   14004985f:	add    BYTE PTR [rcx],al
   140049861:	add    BYTE PTR [rax],al
   140049863:	add    bh,bl
   140049865:	mov    ah,0x2
   140049867:	add    BYTE PTR [rax],al
   140049869:	add    BYTE PTR [rax],al
   14004986b:	add    ah,ah
   14004986d:	mov    ah,0x2
   14004986f:	add    bh,bh
   140049871:	(bad)  
   140049872:	(bad)  
   140049873:	call   FWORD PTR [rbx-0x4b]
   140049876:	add    al,BYTE PTR [rax]
   140049878:	add    BYTE PTR [rax],al
   14004987a:	add    BYTE PTR [rax],al
   14004987c:	sbb    DWORD PTR [rdx],ecx
   14004987e:	add    al,BYTE PTR [rax]
   140049880:	or     dh,BYTE PTR [rdx]
   140049882:	(bad)  
   140049883:	push   rax
   140049884:	ss push rsi
   140049886:	add    DWORD PTR [rax],eax
   140049888:	loopne 0x14004988a
   14004988a:	add    al,0x0
   14004988c:	sbb    DWORD PTR [rbx],esp
   14004988e:	or     BYTE PTR [rax],al
   140049890:	and    esi,DWORD PTR [rsi+rcx*1]
   140049893:	add    BYTE PTR [rdi],dl
   140049895:	jb     0x1400498aa
   140049897:	lock adc eax,esp
   14004989a:	xadd   BYTE PTR [rip+0x36600c70],cl        # 0x17664a511
   1400498a1:	push   rsi
   1400498a2:	add    DWORD PTR [rax],eax
   1400498a4:	or     BYTE PTR [rcx],al
   1400498a6:	add    al,0x0
   1400498a8:	(bad)  
   1400498a9:	(bad)  
   1400498aa:	(bad)  
   1400498ab:	inc    DWORD PTR [rax]
   1400498ad:	add    BYTE PTR [rax],al
   1400498af:	add    BYTE PTR [rax],al
   1400498b1:	add    BYTE PTR [rax],al
   1400498b3:	add    BYTE PTR [rdi],dh
   1400498b5:	mov    bl,0x2
   1400498b7:	add    bh,bh
   1400498b9:	(bad)  
   1400498ba:	(bad)  
   1400498bb:	inc    DWORD PTR [rax]
   1400498bd:	add    BYTE PTR [rax],al
   1400498bf:	add    BYTE PTR [rax],al
   1400498c1:	add    BYTE PTR [rax],al
   1400498c3:	add    BYTE PTR [rcx],al
   1400498c5:	add    BYTE PTR [rax],al
   1400498c7:	add    BYTE PTR [rdx],al
   1400498c9:	add    BYTE PTR [rax],al
   1400498cb:	add    BYTE PTR [rcx],al
   1400498cd:	add    BYTE PTR [rax],al
   1400498cf:	add    ah,dl
   1400498d1:	cwde   
   1400498d2:	add    al,0x0
   1400498d4:	add    BYTE PTR [rax],al
	...
   1400498df:	add    BYTE PTR [rbx-0x4d],al
   1400498e2:	add    al,BYTE PTR [rax]
   1400498e4:	cmp    BYTE PTR [rax],al
   1400498e6:	add    BYTE PTR [rax],al
   1400498e8:	add    al,0xb2
   1400498ea:	add    al,BYTE PTR [rax]
   1400498ec:	(bad)  
   1400498ed:	(bad)  
   1400498ee:	(bad)  
   1400498ef:	call   QWORD PTR [rdi-0x4e]
   1400498f2:	add    al,BYTE PTR [rax]
   1400498f4:	add    BYTE PTR [rax],al
   1400498f6:	add    BYTE PTR [rax],al
   1400498f8:	data16 mov dl,0x2
   1400498fb:	add    BYTE PTR [rcx],al
   1400498fd:	add    BYTE PTR [rax],al
   1400498ff:	add    BYTE PTR [rsi-0x4e],bh
   140049902:	add    al,BYTE PTR [rax]
   140049904:	add    BYTE PTR [rax],al
   140049906:	add    BYTE PTR [rax],al
   140049908:	xor    DWORD PTR [rdx-0xfffe],0xffffffff
   14004990f:	inc    DWORD PTR [rbx-0x4d]
   140049912:	add    al,BYTE PTR [rax]
   140049914:	add    BYTE PTR [rax],al
   140049916:	add    BYTE PTR [rax],al
   140049918:	sbb    DWORD PTR [rdx],ecx
   14004991a:	add    al,BYTE PTR [rax]
   14004991c:	or     dh,BYTE PTR [rdx]
   14004991e:	(bad)  
   14004991f:	push   rax
   140049920:	ss push rsi
   140049922:	add    DWORD PTR [rax],eax
   140049924:	or     BYTE PTR [rcx],al
   140049926:	add    al,0x0
   140049928:	adc    DWORD PTR [rax+rcx*1],ebx
   14004992b:	add    BYTE PTR [rsp+riz*2],bl
   14004992e:	or     al,BYTE PTR [rax]
   140049930:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140049934:	adc    al,0x34
   140049936:	or     BYTE PTR [rax],al
   140049938:	or     BYTE PTR [rdx+0x4],dl
   14004993b:	jo     0x140049973
   14004993d:	push   rsi
   14004993e:	add    DWORD PTR [rax],eax
   140049940:	add    BYTE PTR [rcx],0x4
   140049943:	add    bh,bh
   140049945:	(bad)  
   140049946:	(bad)  
   140049947:	(bad)  
   140049948:	js     0x14004991b
   14004994a:	add    al,BYTE PTR [rax]
   14004994c:	loopne 0x14004991e
   14004994e:	add    al,BYTE PTR [rax]
   140049950:	(bad)  
   140049951:	(bad)  
   140049952:	(bad)  
   140049953:	jmp    QWORD PTR [rip+0x2d1]        # 0x140049c2a
   140049959:	add    BYTE PTR [rax],al
   14004995b:	add    BYTE PTR [rbp-0x2f],al
   14004995e:	add    al,BYTE PTR [rax]
   140049960:	(bad)  
   140049961:	(bad)  
   140049962:	(bad)  
   140049963:	call   QWORD PTR [rcx]
   140049965:	sbb    al,0x6
   140049967:	add    BYTE PTR [rsp+riz*2],bl
   14004996a:	or     al,BYTE PTR [rax]
   14004996c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004996f:	add    BYTE PTR [rdx+rdx*2],cl
   140049972:	or     BYTE PTR [rax+0x36],dh
   140049975:	push   rsi
   140049976:	add    DWORD PTR [rax],eax
   140049978:	test   al,0x1
   14004997a:	add    al,0x0
   14004997c:	(bad)  
   14004997d:	(bad)  
   14004997e:	(bad)  
   14004997f:	push   QWORD PTR [rax]
   140049981:	stos   BYTE PTR es:[rdi],al
   140049982:	add    al,BYTE PTR [rax]
   140049984:	movabs al,ds:0xf5ffffffff0002a9
   14004998d:	test   eax,0x2
   140049992:	add    BYTE PTR [rax],al
   140049994:	sbb    DWORD PTR [rdx-0xfffe],ebp
   14004999a:	(bad)  
   14004999b:	call   FWORD PTR [rcx]
   14004999d:	adc    eax,DWORD PTR [rcx]
   14004999f:	add    BYTE PTR [rdx+rax*8],al
   1400499a2:	add    BYTE PTR [rax],al
   1400499a4:	mov    eax,0x5000014a
   1400499a9:	add    BYTE PTR [rax],al
   1400499ab:	add    BYTE PTR [rcx],al
   1400499ad:	adc    eax,0x74150008
   1400499b2:	or     DWORD PTR [rax],eax
   1400499b4:	adc    eax,0x15000864
   1400499b9:	xor    al,0x7
   1400499bb:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e4aaf3
   1400499c1:	sbb    BYTE PTR [rdx],cl
   1400499c3:	add    BYTE PTR [rax],bl
   1400499c5:	or     eax,DWORD PTR fs:[rax]
   1400499c8:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   1400499cc:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400499cf:	add    BYTE PTR [rax],bl
   1400499d1:	xor    dl,BYTE PTR [rax+rsi*8]
   1400499d4:	adc    ah,al
   1400499d6:	adc    BYTE PTR [rax+0x19],dh
   1400499d9:	sub    BYTE PTR [rdi],al
   1400499db:	add    BYTE PTR [rdi],dl
   1400499dd:	xor    al,0x38
   1400499df:	add    BYTE PTR [rdi],dl
   1400499e1:	add    DWORD PTR [rdx],esi
   1400499e3:	add    BYTE PTR [rax],cl
   1400499e5:	jo     0x1400499ee
   1400499e7:	(bad)  
   1400499e8:	(bad)  
   1400499e9:	push   rax
   1400499ea:	add    BYTE PTR [rax],al
   1400499ec:	mov    eax,0x8000014a
   1400499f1:	add    DWORD PTR [rax],eax
   1400499f3:	add    BYTE PTR [rcx],al
   1400499f5:	adc    al,0x8
   1400499f7:	add    BYTE PTR [rsp+riz*2],dl
   1400499fa:	or     al,0x0
   1400499fc:	adc    al,0x54
   1400499fe:	or     eax,DWORD PTR [rax]
   140049a00:	adc    al,0x34
   140049a02:	or     al,BYTE PTR [rax]
   140049a04:	adc    al,0x72
   140049a06:	adc    BYTE PTR [rax+0x1],dh
   140049a09:	adc    BYTE PTR [rsi],al
   140049a0b:	add    BYTE PTR [rax],dl
   140049a0d:	or     eax,DWORD PTR fs:[rax]
   140049a10:	adc    BYTE PTR [rax+rcx*1],dh
   140049a13:	add    BYTE PTR [rax],dl
   140049a15:	push   rdx
   140049a16:	or     al,0x70
   140049a18:	sbb    DWORD PTR [rdi],ebp
   140049a1a:	or     DWORD PTR [rax],eax
   140049a1c:	(bad)  
   140049a1d:	je     0x140049a58
   140049a1f:	add    BYTE PTR [rsi],bl
   140049a21:	cmp    BYTE PTR fs:[rax],al
   140049a24:	(bad)  
   140049a25:	xor    al,0x37
   140049a27:	add    BYTE PTR [rsi],bl
   140049a29:	add    DWORD PTR [rax+rax*1],esi
   140049a2c:	adc    BYTE PTR [rax+0x0],dl
   140049a2f:	add    BYTE PTR [rax-0x6ffffeb6],bh
   140049a35:	add    DWORD PTR [rax],eax
   140049a37:	add    BYTE PTR [rcx],bl
   140049a39:	es add eax,0x36741500
   140049a3f:	add    BYTE PTR [rip+0x6003201],dl        # 0x14604cc46
   140049a45:	push   rax
   140049a46:	add    BYTE PTR [rax],al
   140049a48:	mov    eax,0x8000014a
   140049a4d:	add    DWORD PTR [rax],eax
   140049a4f:	add    BYTE PTR [rcx],bl
   140049a51:	and    BYTE PTR [rip+0x30341200],al        # 0x17038ac57
   140049a57:	add    BYTE PTR [rdx],dl
   140049a59:	add    DWORD PTR [rax+rax*1],ebp
   140049a5c:	(bad)  
   140049a5d:	push   rax
   140049a5e:	add    BYTE PTR [rax],al
   140049a60:	mov    eax,0x5000014a
   140049a65:	add    DWORD PTR [rax],eax
   140049a67:	add    BYTE PTR [rcx],al
   140049a69:	add    al,0x1
   140049a6b:	add    BYTE PTR [rdx+rax*4],al
   140049a6e:	add    BYTE PTR [rax],al
   140049a70:	add    DWORD PTR [rcx+rax*1],eax
   140049a73:	add    BYTE PTR [rdx+riz*4],al
   140049a76:	add    BYTE PTR [rax],al
   140049a78:	sbb    DWORD PTR [rdx],esp
   140049a7a:	add    al,0x0
   140049a7c:	adc    BYTE PTR [rcx],al
   140049a7e:	mov    ecx,0x2700302
   140049a83:	xor    BYTE PTR [rax-0x4ffffeb6],bh
   140049a89:	adc    eax,0x1d010000
   140049a8e:	or     al,BYTE PTR [rax]
   140049a90:	sbb    eax,0x1d001234
   140049a95:	jb     0x140049ab0
   140049a97:	lock (bad) 
   140049a99:	loopne 0x140049ab0
   140049a9b:	rcl    BYTE PTR [rbx],1
   140049a9d:	rcl    BYTE PTR [rcx],0x70
   140049aa0:	adc    BYTE PTR [rax+0xf],ah
   140049aa3:	push   rax
   140049aa4:	sbb    DWORD PTR [rdi],ebx
   140049aa6:	add    eax,0x2c340d00
   140049aab:	add    BYTE PTR [rip+0x6002a01],cl        # 0x14604c4b2
   140049ab1:	(bad)  
   140049ab2:	add    BYTE PTR [rax],al
   140049ab4:	mov    eax,0x4000014a
   140049ab9:	add    DWORD PTR [rax],eax
   140049abb:	add    BYTE PTR [rcx],bl
   140049abd:	and    eax,0x34130009
   140049ac2:	push   rbx
   140049ac3:	add    BYTE PTR [rbx],dl
   140049ac5:	add    DWORD PTR [rdx+0x0],ecx
   140049ac8:	or     al,0xf0
   140049aca:	or     ah,al
   140049acc:	or     BYTE PTR [rax+0x7],dh
   140049acf:	(bad)  
   140049ad0:	(bad)  
   140049ad1:	push   rax
   140049ad2:	add    BYTE PTR [rax],al
   140049ad4:	mov    eax,0x4000014a
   140049ad9:	add    al,BYTE PTR [rax]
   140049adb:	add    BYTE PTR [rcx],al
   140049add:	adc    DWORD PTR [rax+rax*1],eax
   140049ae0:	adc    DWORD PTR [rdx],esi
   140049ae2:	or     eax,0xb600c70
   140049ae7:	xor    BYTE PTR [rcx],al
   140049ae9:	add    eax,0x34050002
   140049aee:	add    DWORD PTR [rax],eax
   140049af0:	sbb    DWORD PTR [rbx],edi
   140049af2:	or     eax,DWORD PTR [rax]
   140049af4:	sub    ah,BYTE PTR [rcx+rbp*2+0x0]
   140049af8:	es xor al,0x68
   140049afb:	add    BYTE PTR [rcx],bl
   140049afd:	add    DWORD PTR [rax+0x0],esp
   140049b00:	or     esi,eax
   140049b02:	or     eax,esp
   140049b04:	(bad)  
   140049b05:	rol    BYTE PTR [rip+0x500470],0x0        # 0x140549f7c
   140049b0c:	rex.R push rsi
   140049b0e:	add    DWORD PTR [rax],eax
   140049b10:	cmp    BYTE PTR [rbx],al
   140049b12:	add    al,0x0
   140049b14:	repnz add al,BYTE PTR [rax]
   140049b17:	add    bh,bh
   140049b19:	(bad)  
   140049b1a:	(bad)  
   140049b1b:	push   QWORD PTR [rdi+0x2e4]
   140049b21:	add    BYTE PTR [rax],al
   140049b23:	add    bl,al
   140049b25:	in     al,0x2
   140049b27:	add    BYTE PTR [rdx+riz*8],al
   140049b2a:	add    al,BYTE PTR [rax]
   140049b2c:	(bad)  
   140049b2d:	(bad)  
   140049b2e:	(bad)  
   140049b2f:	call   FWORD PTR [rdx-0x1e]
   140049b32:	add    al,BYTE PTR [rax]
   140049b34:	add    BYTE PTR [rax],al
   140049b36:	add    BYTE PTR [rax],al
   140049b38:	ret    
   140049b39:	loop   0x140049b3d
   140049b3b:	add    BYTE PTR [rcx],al
   140049b3d:	add    BYTE PTR [rax],al
   140049b3f:	add    BYTE PTR [rdx-0x1c],ah
   140049b42:	add    al,BYTE PTR [rax]
   140049b44:	add    BYTE PTR [rax],al
   140049b46:	add    BYTE PTR [rax],al
   140049b48:	jb     0x140049b2e
   140049b4a:	add    al,BYTE PTR [rax]
   140049b4c:	(bad)  
   140049b4d:	(bad)  
   140049b4e:	(bad)  
   140049b4f:	call   QWORD PTR [rcx]
   140049b51:	sbb    BYTE PTR [rsi],al
   140049b53:	add    BYTE PTR [rax],bl
   140049b55:	adc    BYTE PTR fs:[rax],al
   140049b58:	adc    al,0x34
   140049b5a:	(bad)  
   140049b5b:	add    BYTE PTR [rax],cl
   140049b5d:	mov    dl,0x4
   140049b5f:	jo     0x140049b97
   140049b61:	push   rsi
   140049b62:	add    DWORD PTR [rax],eax
   140049b64:	(bad)  
   140049b65:	add    eax,DWORD PTR [rax+rax*1]
   140049b68:	(bad)  
   140049b69:	(bad)  
   140049b6a:	(bad)  
   140049b6b:	push   QWORD PTR [rip+0x2e7]        # 0x140049e58
   140049b71:	add    BYTE PTR [rax],al
   140049b73:	add    BYTE PTR [rcx-0x19],al
   140049b76:	add    al,BYTE PTR [rax]
   140049b78:	mov    dh,ah
   140049b7a:	add    al,BYTE PTR [rax]
   140049b7c:	(bad)  
   140049b7d:	(bad)  
   140049b7e:	(bad)  
   140049b7f:	(bad)  
   140049b80:	mov    eax,0x2e6
   140049b85:	add    BYTE PTR [rax],al
   140049b87:	add    bl,ah
   140049b89:	out    0x2,al
   140049b8b:	add    BYTE PTR [rcx],al
   140049b8d:	add    BYTE PTR [rax],al
   140049b8f:	add    BYTE PTR [rbx],cl
   140049b91:	out    0x2,eax
   140049b93:	add    BYTE PTR [rax],al
   140049b95:	add    BYTE PTR [rax],al
   140049b97:	add    BYTE PTR [rsi],dl
   140049b99:	out    0x2,eax
   140049b9b:	add    bh,bh
   140049b9d:	(bad)  
   140049b9e:	(bad)  
   140049b9f:	call   FWORD PTR [rcx]
   140049ba1:	and    DWORD PTR [rdi],eax
   140049ba3:	add    BYTE PTR [rdi],cl
   140049ba5:	xor    al,0x4c
   140049ba7:	add    BYTE PTR [rdi],cl
   140049ba9:	add    DWORD PTR [rax+0x0],ecx
   140049bac:	or     BYTE PTR [rax+0x7],dh
   140049baf:	(bad)  
   140049bb0:	(bad)  
   140049bb1:	push   rax
   140049bb2:	add    BYTE PTR [rax],al
   140049bb4:	mov    eax,0x3000014a
   140049bb9:	add    al,BYTE PTR [rax]
   140049bbb:	add    BYTE PTR [rcx],dl
   140049bbd:	sbb    al,0x6
   140049bbf:	add    BYTE PTR [rsp+riz*2],bl
   140049bc2:	or     al,BYTE PTR [rax]
   140049bc4:	sbb    BYTE PTR [rcx+rcx*1],dh
   140049bc7:	add    BYTE PTR [rdx+rdx*2],cl
   140049bca:	or     BYTE PTR [rax+0x36],dh
   140049bcd:	push   rsi
   140049bce:	add    DWORD PTR [rax],eax
   140049bd0:	fadd   DWORD PTR [rbx]
   140049bd2:	add    al,0x0
   140049bd4:	(bad)  
   140049bd5:	(bad)  
   140049bd6:	(bad)  
   140049bd7:	jmp    QWORD PTR [rbp+0x380002e9]
   140049bdd:	jmp    0x140039be4
   140049be2:	(bad)  
   140049be3:	call   FWORD PTR [rsi-0x17]
   140049be6:	add    al,BYTE PTR [rax]
   140049be8:	add    BYTE PTR [rax],al
   140049bea:	add    BYTE PTR [rax],al
   140049bec:	mov    gs,ecx
   140049bee:	add    al,BYTE PTR [rax]
   140049bf0:	(bad)  
   140049bf1:	(bad)  
   140049bf2:	(bad)  
   140049bf3:	call   QWORD PTR [rcx]
   140049bf5:	sbb    al,0x6
   140049bf7:	add    BYTE PTR [rsp+riz*2],bl
   140049bfa:	or     eax,DWORD PTR [rax]
   140049bfc:	sbb    BYTE PTR [rdx+rcx*1],dh
   140049bff:	add    BYTE PTR [rdx+rdx*2],cl
   140049c02:	or     BYTE PTR [rax+0x36],dh
   140049c05:	push   rsi
   140049c06:	add    DWORD PTR [rax],eax
   140049c08:	add    BYTE PTR [rsp+rax*1],al
   140049c0b:	add    bh,bh
   140049c0d:	(bad)  
   140049c0e:	(bad)  
   140049c0f:	push   rsp
   140049c11:	out    0x2,eax
   140049c13:	add    BYTE PTR [rax],al
   140049c15:	add    BYTE PTR [rax],al
   140049c17:	add    BYTE PTR [rax+rbp*8],al
   140049c1a:	add    al,BYTE PTR [rax]
   140049c1c:	push   rsp
   140049c1d:	out    0x2,eax
   140049c1f:	add    bh,bh
   140049c21:	(bad)  
   140049c22:	(bad)  
   140049c23:	(bad)  
   140049c24:	jp     0x140049c0d
   140049c26:	add    al,BYTE PTR [rax]
   140049c28:	add    BYTE PTR [rax],al
   140049c2a:	add    BYTE PTR [rax],al
   140049c2c:	(bad)  
   140049c2d:	out    0x2,eax
   140049c2f:	add    BYTE PTR [rcx],al
   140049c31:	add    BYTE PTR [rax],al
   140049c33:	add    cl,ah
   140049c35:	out    0x2,eax
   140049c37:	add    bh,bh
   140049c39:	(bad)  
   140049c3a:	(bad)  
   140049c3b:	call   QWORD PTR [rcx]
   140049c3d:	sbb    al,0x6
   140049c3f:	add    BYTE PTR [rsp+riz*2],bl
   140049c42:	or     al,BYTE PTR [rax]
   140049c44:	sbb    BYTE PTR [rcx+rcx*1],dh
   140049c47:	add    BYTE PTR [rdx+rdx*2],cl
   140049c4a:	or     BYTE PTR [rax+0x36],dh
   140049c4d:	push   rsi
   140049c4e:	add    DWORD PTR [rax],eax
   140049c50:	movabs al,ds:0x26ffffffff000404
   140049c59:	(bad)  
   140049c5a:	add    al,BYTE PTR [rax]
   140049c5c:	mov    esp,0xff0002e9
   140049c61:	(bad)  
   140049c62:	(bad)  
   140049c63:	jmp    rbp
   140049c65:	jmp    0x140049c6c
   140049c6a:	add    BYTE PTR [rax],al
   140049c6c:	or     edx,ebp
   140049c6e:	add    al,BYTE PTR [rax]
   140049c70:	(bad)  
   140049c71:	(bad)  
   140049c72:	(bad)  
   140049c73:	call   QWORD PTR [rcx]
   140049c75:	sbb    al,0x6
   140049c77:	add    BYTE PTR [rsp+riz*2],bl
   140049c7a:	or     eax,DWORD PTR [rax]
   140049c7c:	sbb    BYTE PTR [rdx+rcx*1],dh
   140049c7f:	add    BYTE PTR [rdx+rdx*2],cl
   140049c82:	or     BYTE PTR [rax+0x36],dh
   140049c85:	push   rsi
   140049c86:	add    DWORD PTR [rax],eax
   140049c88:	enter  0x404,0x0
   140049c8c:	(bad)  
   140049c8d:	(bad)  
   140049c8e:	(bad)  
   140049c8f:	inc    ebp
   140049c91:	call   0x140049c98
   140049c96:	add    BYTE PTR [rax],al
   140049c98:	(bad)  
   140049c99:	call   0x128209ca0
   140049c9e:	add    al,BYTE PTR [rax]
   140049ca0:	(bad)  
   140049ca1:	(bad)  
   140049ca2:	(bad)  
   140049ca3:	inc    DWORD PTR [rdx-0x18]
   140049ca6:	add    al,BYTE PTR [rax]
   140049ca8:	add    BYTE PTR [rax],al
   140049caa:	add    BYTE PTR [rax],al
   140049cac:	xchg   ebp,eax
   140049cad:	call   0x140059cb4
   140049cb2:	add    BYTE PTR [rax],al
   140049cb4:	mov    dl,0xe8
   140049cb6:	add    al,BYTE PTR [rax]
   140049cb8:	(bad)  
   140049cb9:	(bad)  
   140049cba:	(bad)  
   140049cbb:	call   QWORD PTR [rcx]
   140049cbd:	sbb    al,0x6
   140049cbf:	add    BYTE PTR [rsp+riz*2],bl
   140049cc2:	or     al,BYTE PTR [rax]
   140049cc4:	sbb    BYTE PTR [rcx+rcx*1],dh
   140049cc7:	add    BYTE PTR [rdx+rdx*2],cl
   140049cca:	or     BYTE PTR [rax+0x36],dh
   140049ccd:	push   rsi
   140049cce:	add    DWORD PTR [rax],eax
   140049cd0:	sbb    BYTE PTR [rip+0xffffffffffff0004],al        # 0x140039cda
   140049cd6:	(bad)  
   140049cd7:	jmp    rdx
   140049cd9:	(bad)  
   140049cda:	add    al,BYTE PTR [rax]
   140049cdc:	push   rsp
   140049cdd:	(bad)  
   140049cde:	add    al,BYTE PTR [rax]
   140049ce0:	(bad)  
   140049ce1:	(bad)  
   140049ce2:	(bad)  
   140049ce3:	jmp    QWORD PTR [rdx+rbp*8+0x2]
   140049cea:	add    BYTE PTR [rax],al
   140049cec:	retf   
   140049ced:	(bad)  
   140049cee:	add    al,BYTE PTR [rax]
   140049cf0:	(bad)  
   140049cf1:	(bad)  
   140049cf2:	(bad)  
   140049cf3:	call   FWORD PTR [rcx]
   140049cf5:	and    ecx,DWORD PTR [rax]
   140049cf7:	add    BYTE PTR [rbx],ah
   140049cf9:	xor    al,0xe
   140049cfb:	add    BYTE PTR [rdi],dl
   140049cfd:	jb     0x140049d12
   140049cff:	lock adc eax,esp
   140049d02:	xadd   BYTE PTR [rip+0x36600c70],cl        # 0x17664a979
   140049d09:	push   rsi
   140049d0a:	add    DWORD PTR [rax],eax
   140049d0c:	push   0xffffffffff000405
   140049d11:	(bad)  
   140049d12:	(bad)  
   140049d13:	inc    DWORD PTR [rax]
   140049d15:	add    BYTE PTR [rax],al
   140049d17:	add    BYTE PTR [rax],al
   140049d19:	add    BYTE PTR [rax],al
   140049d1b:	add    BYTE PTR [rsi-0x10],cl
   140049d1e:	add    al,BYTE PTR [rax]
   140049d20:	(bad)  
   140049d21:	(bad)  
   140049d22:	(bad)  
   140049d23:	inc    DWORD PTR [rax]
   140049d25:	add    BYTE PTR [rax],al
   140049d27:	add    BYTE PTR [rax],al
   140049d29:	add    BYTE PTR [rax],al
   140049d2b:	add    BYTE PTR [rcx],al
   140049d2d:	add    BYTE PTR [rax],al
   140049d2f:	add    BYTE PTR [rdx],al
   140049d31:	add    BYTE PTR [rax],al
   140049d33:	add    BYTE PTR [rcx],al
   140049d35:	add    BYTE PTR [rax],al
   140049d37:	add    BYTE PTR [rbx*4+0x400004],bh
	...
   140049d46:	add    BYTE PTR [rax],al
   140049d48:	pop    rdx
   140049d49:	lock add al,BYTE PTR [rax]
   140049d4c:	cmp    BYTE PTR [rax],al
   140049d4e:	add    BYTE PTR [rax],al
   140049d50:	sub    al,0xef
   140049d52:	add    al,BYTE PTR [rax]
   140049d54:	(bad)  
   140049d55:	(bad)  
   140049d56:	(bad)  
   140049d57:	(bad)  
   140049d58:	jge    0x140049d49
   140049d5a:	add    al,BYTE PTR [rax]
   140049d5c:	add    BYTE PTR [rax],al
   140049d5e:	add    BYTE PTR [rax],al
   140049d60:	mov    edi,gs
   140049d62:	add    al,BYTE PTR [rax]
   140049d64:	add    DWORD PTR [rax],eax
   140049d66:	add    BYTE PTR [rax],al
   140049d68:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049d69:	out    dx,eax
   140049d6a:	add    al,BYTE PTR [rax]
   140049d6c:	add    BYTE PTR [rax],al
   140049d6e:	add    BYTE PTR [rax],al
   140049d70:	test   eax,0xff0002ef
   140049d75:	(bad)  
   140049d76:	(bad)  
   140049d77:	call   FWORD PTR [rdx-0x10]
   140049d7a:	add    al,BYTE PTR [rax]
   140049d7c:	add    BYTE PTR [rax],al
   140049d7e:	add    BYTE PTR [rax],al
   140049d80:	sbb    DWORD PTR [rdx],ecx
   140049d82:	add    al,BYTE PTR [rax]
   140049d84:	or     dh,BYTE PTR [rdx]
   140049d86:	(bad)  
   140049d87:	push   rax
   140049d88:	ss push rsi
   140049d8a:	add    DWORD PTR [rax],eax
   140049d8c:	push   0x19000405
   140049d91:	and    ecx,DWORD PTR [rax]
   140049d93:	add    BYTE PTR [rbx],ah
   140049d95:	xor    al,0xe
   140049d97:	add    BYTE PTR [rdi],dl
   140049d99:	jb     0x140049dae
   140049d9b:	lock adc eax,esp
   140049d9e:	xadd   BYTE PTR [rip+0x36600c70],cl        # 0x17664aa15
   140049da5:	push   rsi
   140049da6:	add    DWORD PTR [rax],eax
   140049da8:	mov    eax,0xff000405
   140049dad:	(bad)  
   140049dae:	(bad)  
   140049daf:	inc    DWORD PTR [rax]
   140049db1:	add    BYTE PTR [rax],al
   140049db3:	add    BYTE PTR [rax],al
   140049db5:	add    BYTE PTR [rax],al
   140049db7:	add    BYTE PTR [rsi-0xfffd0f],cl
   140049dbd:	(bad)  
   140049dbe:	(bad)  
   140049dbf:	inc    DWORD PTR [rax]
   140049dc1:	add    BYTE PTR [rax],al
   140049dc3:	add    BYTE PTR [rax],al
   140049dc5:	add    BYTE PTR [rax],al
   140049dc7:	add    BYTE PTR [rcx],al
   140049dc9:	add    BYTE PTR [rax],al
   140049dcb:	add    BYTE PTR [rdx],al
   140049dcd:	add    BYTE PTR [rax],al
   140049dcf:	add    BYTE PTR [rcx],al
   140049dd1:	add    BYTE PTR [rax],al
   140049dd3:	add    al,bl
   140049dd5:	popf   
   140049dd6:	add    al,0x0
   140049dd8:	add    BYTE PTR [rax],al
	...
   140049de3:	add    BYTE PTR [rdx+0x380002f1],bl
   140049de9:	add    BYTE PTR [rax],al
   140049deb:	add    BYTE PTR [rax+rsi*8+0x2],bh
   140049def:	add    bh,bh
   140049df1:	(bad)  
   140049df2:	(bad)  
   140049df3:	dec    ebp
   140049df5:	lock add al,BYTE PTR [rax]
   140049df8:	add    BYTE PTR [rax],al
   140049dfa:	add    BYTE PTR [rax],al
   140049dfc:	fdivr  st(0),st
   140049dfe:	add    al,BYTE PTR [rax]
   140049e00:	add    DWORD PTR [rax],eax
   140049e02:	add    BYTE PTR [rax],al
   140049e04:	hlt    
   140049e05:	lock add al,BYTE PTR [rax]
   140049e08:	add    BYTE PTR [rax],al
   140049e0a:	add    BYTE PTR [rax],al
   140049e0c:	stc    
   140049e0d:	lock add al,BYTE PTR [rax]
   140049e10:	(bad)  
   140049e11:	(bad)  
   140049e12:	(bad)  
   140049e13:	call   FWORD PTR [rdx+0x2f1]
   140049e19:	add    BYTE PTR [rax],al
   140049e1b:	add    BYTE PTR [rcx],bl
   140049e1d:	or     al,BYTE PTR [rdx]
   140049e1f:	add    BYTE PTR [rdx],cl
   140049e21:	xor    al,BYTE PTR [rsi]
   140049e23:	push   rax
   140049e24:	ss push rsi
   140049e26:	add    DWORD PTR [rax],eax
   140049e28:	mov    eax,0x11000405
   140049e2d:	sbb    cl,BYTE PTR [rax]
   140049e2f:	add    BYTE PTR [rdx],dl
   140049e31:	jb     0x140049e3e
   140049e33:	lock or eax,esp
   140049e36:	(bad)  
   140049e37:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14364a2ae
   140049e3e:	add    dl,BYTE PTR [rax+0x36]
   140049e41:	push   rsi
   140049e42:	add    DWORD PTR [rax],eax
   140049e44:	or     BYTE PTR [rsi],al
   140049e46:	add    al,0x0
   140049e48:	(bad)  
   140049e49:	(bad)  
   140049e4a:	(bad)  
   140049e4b:	jmp    rcx
   140049e4d:	repz add al,BYTE PTR [rax]
   140049e50:	add    BYTE PTR [rax],al
   140049e52:	add    BYTE PTR [rax],al
   140049e54:	in     eax,dx
   140049e55:	repz add al,BYTE PTR [rax]
   140049e58:	add    DWORD PTR [rax],eax
   140049e5a:	add    BYTE PTR [rax],al
   140049e5c:	stc    
   140049e5d:	repz add al,BYTE PTR [rax]
   140049e60:	add    al,BYTE PTR [rax]
   140049e62:	add    BYTE PTR [rax],al
   140049e64:	add    eax,0xc00002f4
   140049e69:	icebp  
   140049e6a:	add    al,BYTE PTR [rax]
   140049e6c:	(bad)  
   140049e6d:	(bad)  
   140049e6e:	(bad)  
   140049e6f:	(bad)  
   140049e70:	call   0x14004a166
   140049e75:	add    BYTE PTR [rax],al
   140049e77:	add    dh,ch
   140049e79:	icebp  
   140049e7a:	add    al,BYTE PTR [rax]
   140049e7c:	add    DWORD PTR [rax],eax
   140049e7e:	add    BYTE PTR [rax],al
   140049e80:	outs   dx,BYTE PTR ds:[rsi]
   140049e81:	repnz add al,BYTE PTR [rax]
   140049e84:	add    al,BYTE PTR [rax]
   140049e86:	add    BYTE PTR [rax],al
   140049e88:	in     al,0xf2
   140049e8a:	add    al,BYTE PTR [rax]
   140049e8c:	add    eax,DWORD PTR [rax]
   140049e8e:	add    BYTE PTR [rax],al
   140049e90:	rex.WRB
   140049e91:	repz add al,BYTE PTR [rax]
   140049e94:	add    al,BYTE PTR [rax]
   140049e96:	add    BYTE PTR [rax],al
   140049e98:	mov    bl,dh
   140049e9a:	add    al,BYTE PTR [rax]
   140049e9c:	add    DWORD PTR [rax],eax
   140049e9e:	add    BYTE PTR [rax],al
   140049ea0:	mov    dh,0xf3
   140049ea2:	add    al,BYTE PTR [rax]
   140049ea4:	(bad)  
   140049ea5:	(bad)  
   140049ea6:	(bad)  
   140049ea7:	call   QWORD PTR [rcx]
   140049ea9:	and    al,0xc
   140049eab:	add    BYTE PTR [rsp+riz*2],ah
   140049eae:	adc    eax,0x14542000
   140049eb3:	add    BYTE PTR [rsp+rsi*1],bl
   140049eb6:	adc    eax,DWORD PTR [rax]
   140049eb8:	adc    BYTE PTR [rdx-0x1ff50ff4],dh
   140049ebe:	or     al,dl
   140049ec0:	(bad)  
   140049ec1:	rol    BYTE PTR [rax+rsi*2],0x36
   140049ec5:	push   rsi
   140049ec6:	add    DWORD PTR [rax],eax
   140049ec8:	xor    BYTE PTR [rsi],al
   140049eca:	add    al,0x0
   140049ecc:	(bad)  
   140049ecd:	(bad)  
   140049ece:	(bad)  
   140049ecf:	call   FWORD PTR [rsi]
   140049ed1:	stc    
   140049ed2:	add    al,BYTE PTR [rax]
   140049ed4:	xor    bh,0x2
   140049ed7:	add    bh,bh
   140049ed9:	(bad)  
   140049eda:	(bad)  
   140049edb:	call   rsi
   140049edd:	test   DWORD PTR [rdx],0x0
   140049ee3:	add    ah,ah
   140049ee5:	clc    
   140049ee6:	add    al,BYTE PTR [rax]
   140049ee8:	(bad)  
   140049ee9:	(bad)  
   140049eea:	(bad)  
   140049eeb:	call   QWORD PTR [rcx]
   140049eed:	and    BYTE PTR [rdx],cl
   140049eef:	add    BYTE PTR [rax],ah
   140049ef1:	fs or  eax,0xc541c00
   140049ef7:	add    BYTE PTR [rax],bl
   140049ef9:	xor    al,0xb
   140049efb:	add    BYTE PTR [rdx+rdx*2],cl
   140049efe:	or     al,dh
   140049f00:	(bad)  
   140049f01:	loopne 0x140049f07
   140049f03:	jo     0x140049f3b
   140049f05:	push   rsi
   140049f06:	add    DWORD PTR [rax],eax
   140049f08:	pop    rax
   140049f09:	(bad)  
   140049f0a:	add    al,0x0
   140049f0c:	(bad)  
   140049f0d:	(bad)  
   140049f0e:	(bad)  
   140049f0f:	call   FWORD PTR [rdi]
   140049f11:	cli    
   140049f12:	add    al,BYTE PTR [rax]
   140049f14:	xor    cl,bh
   140049f16:	add    al,BYTE PTR [rax]
   140049f18:	(bad)  
   140049f19:	(bad)  
   140049f1a:	(bad)  
   140049f1b:	(bad)  
   140049f1c:	jnp    0x140049f17
   140049f1e:	add    al,BYTE PTR [rax]
   140049f20:	add    BYTE PTR [rax],al
   140049f22:	add    BYTE PTR [rax],al
   140049f24:	(bad)  
   140049f25:	stc    
   140049f26:	add    al,BYTE PTR [rax]
   140049f28:	(bad)  
   140049f29:	(bad)  
   140049f2a:	(bad)  
   140049f2b:	inc    DWORD PTR [rcx]
   140049f2d:	sbb    BYTE PTR [rdx],cl
   140049f2f:	add    BYTE PTR [rax],bl
   140049f31:	or     eax,DWORD PTR fs:[rax]
   140049f34:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140049f38:	sbb    BYTE PTR [rax+rcx*1],dh
   140049f3b:	add    BYTE PTR [rax],bl
   140049f3d:	xor    dl,BYTE PTR [rax+rsi*8]
   140049f40:	adc    ah,al
   140049f42:	adc    BYTE PTR [rax+0x1],dh
   140049f45:	sbb    al,0xc
   140049f47:	add    BYTE PTR [rsp+riz*2],bl
   140049f4a:	or     al,0x0
   140049f4c:	sbb    al,0x54
   140049f4e:	or     eax,DWORD PTR [rax]
   140049f50:	sbb    al,0x34
   140049f52:	or     al,BYTE PTR [rax]
   140049f54:	sbb    al,0x32
   140049f56:	sbb    al,dh
   140049f58:	(bad)  
   140049f59:	loopne 0x140049f6f
   140049f5b:	rcl    BYTE PTR [rdx],1
   140049f5d:	rcl    BYTE PTR [rax],0x70
   140049f60:	add    DWORD PTR [rcx],ebx
   140049f62:	or     al,BYTE PTR [rax]
   140049f64:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   140049f68:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140049f6c:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140049f70:	sbb    DWORD PTR [rax+rcx*1],esi
   140049f73:	add    BYTE PTR [rcx],bl
   140049f75:	push   rdx
   140049f76:	adc    eax,0x81401e0
   140049f7b:	add    BYTE PTR [rsp+riz*2],dl
   140049f7e:	or     al,BYTE PTR [rax]
   140049f80:	adc    al,0x54
   140049f82:	or     DWORD PTR [rax],eax
   140049f84:	adc    al,0x34
   140049f86:	or     BYTE PTR [rax],al
   140049f88:	adc    al,0x52
   140049f8a:	adc    BYTE PTR [rax+0x1],dh
   140049f8d:	sbb    eax,0xc41d000c
   140049f92:	or     eax,DWORD PTR [rax]
   140049f94:	sbb    eax,0x1d000a74
   140049f99:	or     DWORD PTR fs:[rax],eax
   140049f9c:	sbb    eax,0x1d000834
   140049fa1:	xor    bl,BYTE PTR [rcx]
   140049fa3:	lock (bad) 
   140049fa5:	loopne 0x140049fbc
   140049fa7:	rcl    BYTE PTR [rcx],1
   140049fa9:	(bad)  
   140049faa:	or     al,BYTE PTR [rax]
   140049fac:	(bad)  
   140049fad:	push   rsp
   140049fae:	adc    BYTE PTR [rax],al
   140049fb0:	sbb    esi,DWORD PTR [rsi+rcx*1]
   140049fb3:	add    BYTE PTR [rdi],cl
   140049fb5:	jb     0x140049fc2
   140049fb7:	lock or eax,esp
   140049fba:	(bad)  
   140049fbb:	rol    BYTE PTR [rip+0x36600470],0x56        # 0x17664a432
   140049fc2:	add    DWORD PTR [rax],eax
   140049fc4:	test   al,0x6
   140049fc6:	add    al,0x0
   140049fc8:	(bad)  
   140049fc9:	(bad)  
   140049fca:	(bad)  
   140049fcb:	jmp    FWORD PTR [rdx]
   140049fcd:	cmc    
   140049fce:	add    al,BYTE PTR [rax]
   140049fd0:	and    ah,dh
   140049fd2:	add    al,BYTE PTR [rax]
   140049fd4:	(bad)  
   140049fd5:	(bad)  
   140049fd6:	(bad)  
   140049fd7:	call   FWORD PTR [rax+0x2f4]
   140049fdd:	add    BYTE PTR [rax],al
   140049fdf:	add    ch,ch
   140049fe1:	hlt    
   140049fe2:	add    al,BYTE PTR [rax]
   140049fe4:	(bad)  
   140049fe5:	(bad)  
   140049fe6:	(bad)  
   140049fe7:	call   QWORD PTR [rcx]
   140049fe9:	sbb    al,0x6
   140049feb:	add    BYTE PTR [rsp+riz*2],bl
   140049fee:	or     al,BYTE PTR [rax]
   140049ff0:	sbb    BYTE PTR [rcx+rcx*1],dh
   140049ff3:	add    BYTE PTR [rdx+rdx*2],cl
   140049ff6:	or     BYTE PTR [rax+0x36],dh
   140049ff9:	push   rsi
   140049ffa:	add    DWORD PTR [rax],eax
   140049ffc:	rol    BYTE PTR [rsi],1
   140049ffe:	add    al,0x0
   14004a000:	(bad)  
   14004a001:	(bad)  
   14004a002:	(bad)  
   14004a003:	call   FWORD PTR [rcx-0x14]
   14004a006:	add    al,BYTE PTR [rax]
   14004a008:	hlt    
   14004a009:	(bad)  
   14004a00a:	add    al,BYTE PTR [rax]
   14004a00c:	(bad)  
   14004a00d:	(bad)  
   14004a00e:	(bad)  
   14004a00f:	call   QWORD PTR [rbx]
   14004a011:	jmp    0x14004a015
   14004a013:	add    BYTE PTR [rax],al
   14004a015:	add    BYTE PTR [rax],al
   14004a017:	add    BYTE PTR [rdx],dh
   14004a019:	in     al,dx
   14004a01a:	add    al,BYTE PTR [rax]
   14004a01c:	(bad)  
   14004a01d:	(bad)  
   14004a01e:	(bad)  
   14004a01f:	call   QWORD PTR [rcx]
   14004a021:	sbb    cl,BYTE PTR [rax]
   14004a023:	add    BYTE PTR [rdx],dl
   14004a025:	xchg   edx,eax
   14004a026:	or     esi,eax
   14004a028:	or     eax,esp
   14004a02a:	(bad)  
   14004a02b:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14364a4a2
   14004a032:	add    dl,BYTE PTR [rax+0x36]
   14004a035:	push   rsi
   14004a036:	add    DWORD PTR [rax],eax
   14004a038:	and    BYTE PTR [rdi],al
   14004a03a:	add    al,0x0
   14004a03c:	(bad)  
   14004a03d:	(bad)  
   14004a03e:	(bad)  
   14004a03f:	(bad)  
   14004a040:	jl     0x14004a04c
   14004a042:	add    eax,DWORD PTR [rax]
   14004a044:	add    BYTE PTR [rax],al
   14004a046:	add    BYTE PTR [rax],al
   14004a048:	mov    BYTE PTR [rdx],cl
   14004a04a:	add    eax,DWORD PTR [rax]
   14004a04c:	add    DWORD PTR [rax],eax
   14004a04e:	add    BYTE PTR [rax],al
   14004a050:	xchg   esp,eax
   14004a051:	or     al,BYTE PTR [rbx]
   14004a053:	add    BYTE PTR [rdx],al
   14004a055:	add    BYTE PTR [rax],al
   14004a057:	add    BYTE PTR [rax-0x5bfffcf6],ah
   14004a05d:	(bad)  
   14004a05e:	add    eax,DWORD PTR [rax]
   14004a060:	(bad)  
   14004a061:	(bad)  
   14004a062:	(bad)  
   14004a063:	(bad)  
   14004a064:	cli    
   14004a065:	(bad)  
   14004a066:	add    eax,DWORD PTR [rax]
   14004a068:	add    BYTE PTR [rax],al
   14004a06a:	add    BYTE PTR [rax],al
   14004a06c:	adc    DWORD PTR [rax],ecx
   14004a06e:	add    eax,DWORD PTR [rax]
   14004a070:	add    DWORD PTR [rax],eax
   14004a072:	add    BYTE PTR [rax],al
   14004a074:	(bad)  
   14004a075:	or     BYTE PTR [rbx],al
   14004a077:	add    BYTE PTR [rdx],al
   14004a079:	add    BYTE PTR [rax],al
   14004a07b:	add    BYTE PTR [rbx],bl
   14004a07d:	or     BYTE PTR [rbx],al
   14004a07f:	add    BYTE PTR [rbx],al
   14004a081:	add    BYTE PTR [rax],al
   14004a083:	add    BYTE PTR [rdx+0x2000309],dl
   14004a089:	add    BYTE PTR [rax],al
   14004a08b:	add    BYTE PTR [rcx+rcx*1+0x10003],dh
   14004a092:	add    BYTE PTR [rax],al
   14004a094:	iret   
   14004a095:	or     DWORD PTR [rbx],eax
   14004a097:	add    BYTE PTR [rax],al
   14004a099:	add    BYTE PTR [rax],al
   14004a09b:	add    BYTE PTR [rbx+0xa],dl
   14004a09e:	add    eax,DWORD PTR [rax]
   14004a0a0:	(bad)  
   14004a0a1:	(bad)  
   14004a0a2:	(bad)  
   14004a0a3:	call   QWORD PTR [rcx]
   14004a0a5:	sbb    al,0x8
   14004a0a7:	add    BYTE PTR [rsp+riz*2],bl
   14004a0aa:	or     al,0x0
   14004a0ac:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   14004a0b0:	adc    al,0x34
   14004a0b2:	or     al,BYTE PTR [rax]
   14004a0b4:	or     BYTE PTR [rdx+0x4],dh
   14004a0b7:	jo     0x14004a0ef
   14004a0b9:	push   rsi
   14004a0ba:	add    DWORD PTR [rax],eax
   14004a0bc:	cwde   
   14004a0bd:	(bad)  
   14004a0be:	add    al,0x0
   14004a0c0:	(bad)  
   14004a0c1:	(bad)  
   14004a0c2:	(bad)  
   14004a0c3:	dec    DWORD PTR [rdx-0x2ffffcf3]
   14004a0c9:	or     al,0x3
   14004a0cb:	add    bh,bh
   14004a0cd:	(bad)  
   14004a0ce:	(bad)  
   14004a0cf:	inc    DWORD PTR [rip+0x30d]        # 0x14004a3e2
   14004a0d5:	add    BYTE PTR [rax],al
   14004a0d7:	add    BYTE PTR [rcx],bl
   14004a0d9:	or     eax,0xffff0003
   14004a0de:	(bad)  
   14004a0df:	call   QWORD PTR [rcx]
   14004a0e1:	sbb    al,0x8
   14004a0e3:	add    BYTE PTR [rsp+riz*2],bl
   14004a0e6:	or     al,0x0
   14004a0e8:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   14004a0ec:	adc    al,0x34
   14004a0ee:	or     al,BYTE PTR [rax]
   14004a0f0:	or     BYTE PTR [rdx+0x4],dh
   14004a0f3:	jo     0x14004a12b
   14004a0f5:	push   rsi
   14004a0f6:	add    DWORD PTR [rax],eax
   14004a0f8:	rol    BYTE PTR [rdi],0x4
   14004a0fb:	add    bh,bh
   14004a0fd:	(bad)  
   14004a0fe:	(bad)  
   14004a0ff:	call   FWORD PTR [rcx+0xe]
   14004a102:	add    eax,DWORD PTR [rax]
   14004a104:	movabs al,ds:0xd5ffffffff00030d
   14004a10d:	or     eax,0x3
   14004a112:	add    BYTE PTR [rax],al
   14004a114:	jmp    0x13f04a426
   14004a119:	(bad)  
   14004a11a:	(bad)  
   14004a11b:	call   QWORD PTR [rcx]
   14004a11d:	sbb    DWORD PTR [rsi],eax
   14004a11f:	add    BYTE PTR [rcx],bl
   14004a121:	or     DWORD PTR fs:[rax],eax
   14004a124:	adc    al,0x34
   14004a126:	or     BYTE PTR [rax],al
   14004a128:	(bad)  
   14004a129:	push   rdx
   14004a12a:	add    dh,BYTE PTR [rax+0x36]
   14004a12d:	push   rsi
   14004a12e:	add    DWORD PTR [rax],eax
   14004a130:	call   0x13f04a53c
   14004a135:	(bad)  
   14004a136:	(bad)  
   14004a137:	push   QWORD PTR [rax+0x1000030c]
   14004a13d:	or     al,0x3
   14004a13f:	add    bh,bh
   14004a141:	(bad)  
   14004a142:	(bad)  
   14004a143:	(bad)  
   14004a144:	ds or  al,0x3
   14004a147:	add    BYTE PTR [rax],al
   14004a149:	add    BYTE PTR [rax],al
   14004a14b:	add    BYTE PTR [rdx+0xc],dl
   14004a14e:	add    eax,DWORD PTR [rax]
   14004a150:	(bad)  
   14004a151:	(bad)  
   14004a152:	(bad)  
   14004a153:	call   QWORD PTR [rcx]
   14004a155:	(bad)  
   14004a156:	(bad)  
   14004a157:	add    BYTE PTR [rsi],dl
   14004a159:	xor    al,0xa
   14004a15b:	add    BYTE PTR [rax],cl
   14004a15d:	push   rdx
   14004a15e:	add    al,0x70
   14004a160:	add    esp,DWORD PTR [rax+0x2]
   14004a163:	push   rax
   14004a164:	ss push rsi
   14004a166:	add    DWORD PTR [rax],eax
   14004a168:	adc    BYTE PTR [rax],cl
   14004a16a:	add    al,0x0
   14004a16c:	(bad)  
   14004a16d:	(bad)  
   14004a16e:	(bad)  
   14004a16f:	(bad)  
   14004a170:	sti    
   14004a171:	add    al,0x3
   14004a173:	add    al,ah
   14004a175:	add    eax,DWORD PTR [rbx]
   14004a177:	add    bh,bh
   14004a179:	(bad)  
   14004a17a:	(bad)  
   14004a17b:	call   QWORD PTR [rcx]
   14004a17d:	add    al,0x3
   14004a17f:	add    BYTE PTR [rax],al
   14004a181:	add    BYTE PTR [rax],al
   14004a183:	add    dl,dl
   14004a185:	add    al,0x3
   14004a187:	add    bh,bh
   14004a189:	(bad)  
   14004a18a:	(bad)  
   14004a18b:	call   QWORD PTR [rcx]
   14004a18d:	and    BYTE PTR [rdx],cl
   14004a18f:	add    BYTE PTR [rax],ah
   14004a191:	fs or  eax,0xc541c00
   14004a197:	add    BYTE PTR [rax],bl
   14004a199:	xor    al,0xb
   14004a19b:	add    BYTE PTR [rdx+rdx*2],cl
   14004a19e:	or     al,dh
   14004a1a0:	(bad)  
   14004a1a1:	loopne 0x14004a1a7
   14004a1a3:	jo     0x14004a1db
   14004a1a5:	push   rsi
   14004a1a6:	add    DWORD PTR [rax],eax
   14004a1a8:	(bad)  
   14004a1a9:	or     BYTE PTR [rax+rax*1],al
   14004a1ac:	(bad)  
   14004a1ad:	(bad)  
   14004a1ae:	(bad)  
   14004a1af:	(bad)  
   14004a1b0:	jmp    0x14004a4c0
   14004a1b5:	add    BYTE PTR [rax],al
   14004a1b7:	add    ch,dh
   14004a1b9:	or     eax,DWORD PTR [rbx]
   14004a1bb:	add    al,al
   14004a1bd:	or     al,BYTE PTR [rbx]
   14004a1bf:	add    bh,bh
   14004a1c1:	(bad)  
   14004a1c2:	(bad)  
   14004a1c3:	push   QWORD PTR [rsi]
   14004a1c5:	or     eax,DWORD PTR [rbx]
   14004a1c7:	add    BYTE PTR [rax],al
   14004a1c9:	add    BYTE PTR [rax],al
   14004a1cb:	add    BYTE PTR [rbx],bh
   14004a1cd:	or     eax,DWORD PTR [rbx]
   14004a1cf:	add    BYTE PTR [rcx],al
   14004a1d1:	add    BYTE PTR [rax],al
   14004a1d3:	add    BYTE PTR [rbx+rcx*1+0x3],dl
   14004a1d7:	add    BYTE PTR [rax],al
   14004a1d9:	add    BYTE PTR [rax],al
   14004a1db:	add    BYTE PTR [rax+0xb],bl
   14004a1de:	add    eax,DWORD PTR [rax]
   14004a1e0:	(bad)  
   14004a1e1:	(bad)  
   14004a1e2:	(bad)  
   14004a1e3:	inc    DWORD PTR [rcx]
   14004a1e5:	sbb    al,0xc
   14004a1e7:	add    BYTE PTR [rsp+riz*2],bl
   14004a1ea:	adc    eax,DWORD PTR [rax]
   14004a1ec:	sbb    al,0x54
   14004a1ee:	adc    al,BYTE PTR [rax]
   14004a1f0:	sbb    al,0x34
   14004a1f2:	adc    DWORD PTR [rax],eax
   14004a1f4:	sbb    al,0x92
   14004a1f6:	sbb    al,dh
   14004a1f8:	(bad)  
   14004a1f9:	loopne 0x14004a20f
   14004a1fb:	rcl    BYTE PTR [rdx],1
   14004a1fd:	rcl    BYTE PTR [rax],0x70
   14004a200:	adc    DWORD PTR [rsp+rcx*1],esp
   14004a203:	add    BYTE PTR [rsp+riz*2],ah
   14004a206:	adc    DWORD PTR [rax],eax
   14004a208:	and    BYTE PTR [rax+rdx*1+0x0],dl
   14004a20c:	sbb    al,0x34
   14004a20e:	(bad)  
   14004a20f:	add    BYTE PTR [rax],dl
   14004a211:	jb     0x14004a21f
   14004a213:	lock or ah,al
   14004a216:	or     al,dl
   14004a218:	(bad)  
   14004a219:	rol    BYTE PTR [rax+rsi*2],0x36
   14004a21d:	push   rsi
   14004a21e:	add    DWORD PTR [rax],eax
   14004a220:	mov    BYTE PTR [rax],cl
   14004a222:	add    al,0x0
   14004a224:	(bad)  
   14004a225:	(bad)  
   14004a226:	(bad)  
   14004a227:	inc    ecx
   14004a229:	add    eax,DWORD PTR [rbx]
   14004a22b:	add    BYTE PTR [rax-0xfffcfe],al
   14004a231:	(bad)  
   14004a232:	(bad)  
   14004a233:	call   FWORD PTR [rax]
   14004a235:	add    eax,DWORD PTR [rbx]
   14004a237:	add    BYTE PTR [rax],al
   14004a239:	add    BYTE PTR [rax],al
   14004a23b:	add    BYTE PTR [rcx+0x3],bh
   14004a23e:	add    eax,DWORD PTR [rax]
   14004a240:	(bad)  
   14004a241:	(bad)  
   14004a242:	(bad)  
   14004a243:	inc    DWORD PTR [rcx]
   14004a245:	adc    eax,0x34150004
   14004a24a:	(bad)  
   14004a24b:	add    BYTE PTR [rip+0x1701132],dl        # 0x14174b383
   14004a251:	clts   
   14004a253:	add    BYTE PTR [rdi],cl
   14004a255:	fs or  eax,0xc340f00
   14004a25b:	add    BYTE PTR [rdi],cl
   14004a25d:	xchg   edx,eax
   14004a25e:	or     esi,DWORD PTR [rax+0x1]
   14004a261:	adc    BYTE PTR [rsi],al
   14004a263:	add    BYTE PTR [rax],dl
   14004a265:	fs or  eax,0xc341000
   14004a26b:	add    BYTE PTR [rax],dl
   14004a26d:	xchg   edx,eax
   14004a26e:	or     al,0x70
   14004a270:	adc    DWORD PTR [rax],ebx
   14004a272:	add    al,0x0
   14004a274:	sbb    BYTE PTR [rdx+rcx*1],dh
   14004a277:	add    BYTE PTR [rdx+rdx*2],cl
   14004a27a:	or     BYTE PTR [rax+0x36],dh
   14004a27d:	push   rsi
   14004a27e:	add    DWORD PTR [rax],eax
   14004a280:	add    BYTE PTR [rcx],cl
   14004a282:	add    al,0x0
   14004a284:	(bad)  
   14004a285:	(bad)  
   14004a286:	(bad)  
   14004a287:	jmp    QWORD PTR [rax]
   14004a289:	adc    BYTE PTR [rbx],al
   14004a28b:	add    BYTE PTR [rax],al
   14004a28d:	add    BYTE PTR [rax],al
   14004a28f:	add    BYTE PTR [rax+rdx*1],ch
   14004a292:	add    eax,DWORD PTR [rax]
   14004a294:	mov    ah,0xf
   14004a296:	add    eax,DWORD PTR [rax]
   14004a298:	(bad)  
   14004a299:	(bad)  
   14004a29a:	(bad)  
   14004a29b:	dec    edi
   14004a29d:	lsl    eax,WORD PTR [rax]
   14004a2a0:	add    BYTE PTR [rax],al
   14004a2a2:	add    BYTE PTR [rax],al
   14004a2a4:	out    dx,eax
   14004a2a5:	lsl    eax,WORD PTR [rax]
   14004a2a8:	add    DWORD PTR [rax],eax
   14004a2aa:	add    BYTE PTR [rax],al
   14004a2ac:	adc    dl,BYTE PTR [rax]
   14004a2ae:	add    eax,DWORD PTR [rax]
   14004a2b0:	(bad)  
   14004a2b1:	(bad)  
   14004a2b2:	(bad)  
   14004a2b3:	inc    DWORD PTR [rcx]
   14004a2b5:	and    al,0xa
   14004a2b7:	add    BYTE PTR [rsp+rsi*2],ah
   14004a2ba:	adc    al,0x0
   14004a2bc:	and    al,0x64
   14004a2be:	adc    eax,DWORD PTR [rax]
   14004a2c0:	and    al,0x34
   14004a2c2:	adc    al,BYTE PTR [rax]
   14004a2c4:	and    al,0xd2
   14004a2c6:	sbb    eax,0x19e01bf0
   14004a2cb:	push   rax
   14004a2cc:	add    DWORD PTR [rax],ecx
   14004a2ce:	add    DWORD PTR [rax],eax
   14004a2d0:	or     BYTE PTR [rdx+0x0],al
   14004a2d3:	add    BYTE PTR [rcx],bl
   14004a2d5:	sub    ecx,DWORD PTR [rbx]
   14004a2d7:	add    BYTE PTR [rcx],bl
   14004a2d9:	push   rsp
   14004a2da:	adc    DWORD PTR [rcx],eax
   14004a2dc:	sbb    DWORD PTR [rax+rdx*1],esi
   14004a2df:	add    DWORD PTR [rcx],ebx
   14004a2e1:	add    DWORD PTR [rax],ecx
   14004a2e3:	add    DWORD PTR [rdx],edx
   14004a2e5:	lock adc al,ah
   14004a2e8:	(bad)  
   14004a2e9:	ror    BYTE PTR [rax+rsi*2],0xb
   14004a2ed:	(bad)  
   14004a2ee:	add    BYTE PTR [rax],al
   14004a2f0:	mov    eax,0x3000014a
   14004a2f5:	or     BYTE PTR [rax],al
   14004a2f7:	add    BYTE PTR [rcx],al
   14004a2f9:	adc    al,0x6
   14004a2fb:	add    BYTE PTR [rsp+riz*2],dl
   14004a2fe:	or     DWORD PTR [rax],eax
   14004a300:	adc    al,0x34
   14004a302:	(bad)  
   14004a303:	add    BYTE PTR [rdx+rsi*1],dl
   14004a306:	adc    BYTE PTR [rax+0x1],dh
   14004a309:	and    ecx,DWORD PTR [rdx]
   14004a30b:	add    BYTE PTR [rbx],ah
   14004a30d:	xor    al,0x1a
   14004a30f:	add    BYTE PTR [rbx],ah
   14004a311:	repnz sbb eax,esi
   14004a314:	(bad)  
   14004a315:	loopne 0x14004a32c
   14004a317:	rcl    BYTE PTR [rbx],1
   14004a319:	rcl    BYTE PTR [rcx],0x70
   14004a31c:	adc    BYTE PTR [rax+0xf],ah
   14004a31f:	push   rax
   14004a320:	add    DWORD PTR [rax],ebx
   14004a322:	or     al,BYTE PTR [rax]
   14004a324:	sbb    BYTE PTR [rax+rdx*1+0x0],ah
   14004a328:	sbb    BYTE PTR [rdi+rcx*1+0x0],dl
   14004a32c:	sbb    BYTE PTR [rsi+rcx*1],dh
   14004a32f:	add    BYTE PTR [rax],bl
   14004a331:	xchg   edx,eax
   14004a332:	adc    al,0xf0
   14004a334:	adc    ah,al
   14004a336:	adc    BYTE PTR [rax+0x11],dh
   14004a339:	sbb    BYTE PTR [rsi],al
   14004a33b:	add    BYTE PTR [rax],bl
   14004a33d:	push   rsp
   14004a33e:	adc    DWORD PTR [rax],eax
   14004a340:	adc    al,0x34
   14004a342:	adc    BYTE PTR [rax],al
   14004a344:	or     BYTE PTR [rdx+0x56366004],dh
   14004a34a:	add    DWORD PTR [rax],eax
   14004a34c:	sub    BYTE PTR [rcx],cl
   14004a34e:	add    al,0x0
   14004a350:	(bad)  
   14004a351:	(bad)  
   14004a352:	(bad)  
   14004a353:	(bad)  
   14004a354:	in     al,dx
   14004a355:	sbb    eax,0x3
   14004a35a:	add    BYTE PTR [rax],al
   14004a35c:	clc    
   14004a35d:	sbb    eax,0x1cb00003
   14004a362:	add    eax,DWORD PTR [rax]
   14004a364:	(bad)  
   14004a365:	(bad)  
   14004a366:	(bad)  
   14004a367:	call   rax
   14004a369:	sbb    al,0x3
   14004a36b:	add    BYTE PTR [rax],al
   14004a36d:	add    BYTE PTR [rax],al
   14004a36f:	add    BYTE PTR [rsi],ch
   14004a371:	sbb    eax,0x10003
   14004a376:	add    BYTE PTR [rax],al
   14004a378:	mov    dl,0x1d
   14004a37a:	add    eax,DWORD PTR [rax]
   14004a37c:	add    BYTE PTR [rax],al
   14004a37e:	add    BYTE PTR [rax],al
   14004a380:	int    0x1d
   14004a382:	add    eax,DWORD PTR [rax]
   14004a384:	(bad)  
   14004a385:	(bad)  
   14004a386:	(bad)  
   14004a387:	call   QWORD PTR [rcx]
   14004a389:	sbb    cl,BYTE PTR [rax]
   14004a38b:	add    BYTE PTR [rdx],bl
   14004a38d:	xor    al,0xf
   14004a38f:	add    BYTE PTR [rdx+rsi*2],cl
   14004a392:	or     al,dh
   14004a394:	(bad)  
   14004a395:	loopne 0x14004a39b
   14004a397:	jo     0x14004a39c
   14004a399:	(bad)  
   14004a39a:	add    dl,BYTE PTR [rax+0x36]
   14004a39d:	push   rsi
   14004a39e:	add    DWORD PTR [rax],eax
   14004a3a0:	push   rax
   14004a3a1:	or     DWORD PTR [rax+rax*1],eax
   14004a3a4:	(bad)  
   14004a3a5:	(bad)  
   14004a3a6:	(bad)  
   14004a3a7:	dec    DWORD PTR [rcx+0x26]
   14004a3aa:	add    eax,DWORD PTR [rax]
   14004a3ac:	loopne 0x14004a3d2
   14004a3ae:	add    eax,DWORD PTR [rax]
   14004a3b0:	(bad)  
   14004a3b1:	(bad)  
   14004a3b2:	(bad)  
   14004a3b3:	call   FWORD PTR ds:0x3
   14004a3ba:	add    BYTE PTR [rax],al
   14004a3bc:	repz and eax,0xffff0003
   14004a3c2:	(bad)  
   14004a3c3:	inc    DWORD PTR [rcx]
   14004a3c5:	adc    cl,BYTE PTR [rax]
   14004a3c7:	add    BYTE PTR [rdx],dl
   14004a3c9:	push   rsp
   14004a3ca:	or     DWORD PTR [rax],eax
   14004a3cc:	adc    dh,BYTE PTR [rax+rcx*1]
   14004a3cf:	add    BYTE PTR [rdx],dl
   14004a3d1:	xor    cl,BYTE PTR [rsi]
   14004a3d3:	loopne 0x14004a3e1
   14004a3d5:	jo     0x14004a3e2
   14004a3d7:	(bad)  
   14004a3d8:	adc    DWORD PTR [rcx],ebx
   14004a3da:	(bad)  
   14004a3db:	add    BYTE PTR [rcx],bl
   14004a3dd:	or     al,BYTE PTR fs:[rax]
   14004a3e0:	adc    al,0x34
   14004a3e2:	or     BYTE PTR [rax],al
   14004a3e4:	(bad)  
   14004a3e5:	push   rdx
   14004a3e6:	add    dh,BYTE PTR [rax+0x36]
   14004a3e9:	push   rsi
   14004a3ea:	add    DWORD PTR [rax],eax
   14004a3ec:	movabs al,ds:0x62ffffffff000409
   14004a3f5:	and    BYTE PTR [rbx],al
   14004a3f7:	add    al,dl
   14004a3f9:	(bad)  
   14004a3fa:	add    eax,DWORD PTR [rax]
   14004a3fc:	(bad)  
   14004a3fd:	(bad)  
   14004a3fe:	(bad)  
   14004a3ff:	(bad)  
   14004a400:	sti    
   14004a401:	(bad)  
   14004a402:	add    eax,DWORD PTR [rax]
   14004a404:	add    BYTE PTR [rax],al
   14004a406:	add    BYTE PTR [rax],al
   14004a408:	mov    rbx,cr0
   14004a40b:	add    bh,bh
   14004a40d:	(bad)  
   14004a40e:	(bad)  
   14004a40f:	call   QWORD PTR [rcx]
   14004a411:	sbb    DWORD PTR [rsi],eax
   14004a413:	add    BYTE PTR [rcx],bl
   14004a415:	or     al,BYTE PTR fs:[rax]
   14004a418:	adc    al,0x34
   14004a41a:	or     BYTE PTR [rax],al
   14004a41c:	(bad)  
   14004a41d:	push   rdx
   14004a41e:	add    dh,BYTE PTR [rax+0x36]
   14004a421:	push   rsi
   14004a422:	add    DWORD PTR [rax],eax
   14004a424:	enter  0x409,0x0
   14004a428:	(bad)  
   14004a429:	(bad)  
   14004a42a:	(bad)  
   14004a42b:	(bad)  
   14004a42c:	mov    esi,0x2c00031f
   14004a431:	(bad)  
   14004a432:	add    eax,DWORD PTR [rax]
   14004a434:	(bad)  
   14004a435:	(bad)  
   14004a436:	(bad)  
   14004a437:	call   QWORD PTR [rdi+0x1f]
   14004a43a:	add    eax,DWORD PTR [rax]
   14004a43c:	add    BYTE PTR [rax],al
   14004a43e:	add    BYTE PTR [rax],al
   14004a440:	imul   ebx,DWORD PTR [rdi],0x3
   14004a443:	add    bh,bh
   14004a445:	(bad)  
   14004a446:	(bad)  
   14004a447:	inc    DWORD PTR [rcx]
   14004a449:	and    DWORD PTR [rdx],ecx
   14004a44b:	add    BYTE PTR [rcx],ah
   14004a44d:	or     eax,DWORD PTR fs:[rax]
   14004a450:	and    DWORD PTR [rdx+rcx*1+0x0],edx
   14004a454:	and    DWORD PTR [rax+rcx*1],esi
   14004a457:	add    BYTE PTR [rcx],ah
   14004a459:	xor    bl,BYTE PTR [rip+0x19e01bf0]        # 0x159e4c04f
   14004a45f:	jo     0x14004a472
   14004a461:	and    cl,BYTE PTR [rdx]
   14004a463:	add    BYTE PTR [rdx],ah
   14004a465:	fs adc eax,0x13341e00
   14004a46b:	add    BYTE PTR [rdx],dl
   14004a46d:	mov    dl,0xb
   14004a46f:	lock or eax,esp
   14004a472:	(bad)  
   14004a473:	rol    BYTE PTR [rip+0x36500470],0x56        # 0x17654a8ea
   14004a47a:	add    DWORD PTR [rax],eax
   14004a47c:	or     al,BYTE PTR [rax+rax*1]
   14004a480:	(bad)  
   14004a481:	(bad)  
   14004a482:	(bad)  
   14004a483:	jmp    QWORD PTR [rax+0x2f]
   14004a486:	add    eax,DWORD PTR [rax]
   14004a488:	sub    BYTE PTR [rsi],ch
   14004a48a:	add    eax,DWORD PTR [rax]
   14004a48c:	(bad)  
   14004a48d:	(bad)  
   14004a48e:	(bad)  
   14004a48f:	push   QWORD PTR [rbx+0x2e]
   14004a492:	add    eax,DWORD PTR [rax]
   14004a494:	add    BYTE PTR [rax],al
   14004a496:	add    BYTE PTR [rax],al
   14004a498:	ds (bad) 
   14004a49a:	add    eax,DWORD PTR [rax]
   14004a49c:	(bad)  
   14004a49d:	(bad)  
   14004a49e:	(bad)  
   14004a49f:	call   QWORD PTR [rcx]
   14004a4a1:	and    BYTE PTR [rdx],cl
   14004a4a3:	add    BYTE PTR [rax],ah
   14004a4a5:	ltr    WORD PTR fs:[rsp+rdx*2]
   14004a4aa:	(bad)  
   14004a4ab:	add    BYTE PTR [rax],bl
   14004a4ad:	xor    al,0xd
   14004a4af:	add    BYTE PTR [rdx+rsi*2],cl
   14004a4b2:	or     al,dh
   14004a4b4:	(bad)  
   14004a4b5:	loopne 0x14004a4bb
   14004a4b7:	jo     0x14004a4ef
   14004a4b9:	push   rsi
   14004a4ba:	add    DWORD PTR [rax],eax
   14004a4bc:	push   0xffffffffff00040a
   14004a4c1:	(bad)  
   14004a4c2:	(bad)  
   14004a4c3:	(bad)  
   14004a4c4:	in     al,dx
   14004a4c5:	xor    eax,0x34c00003
   14004a4ca:	add    eax,DWORD PTR [rax]
   14004a4cc:	(bad)  
   14004a4cd:	(bad)  
   14004a4ce:	(bad)  
   14004a4cf:	inc    DWORD PTR [rdx]
   14004a4d1:	xor    eax,0x3
   14004a4d6:	add    BYTE PTR [rax],al
   14004a4d8:	pop    rdx
   14004a4d9:	xor    eax,0xffff0003
   14004a4de:	(bad)  
   14004a4df:	call   QWORD PTR [rcx]
   14004a4e1:	sbb    ecx,DWORD PTR [rax]
   14004a4e3:	add    BYTE PTR [rbx],bl
   14004a4e5:	push   rsp
   14004a4e6:	(bad)  
   14004a4e7:	add    BYTE PTR [rdi],dl
   14004a4e9:	xor    al,0xd
   14004a4eb:	add    BYTE PTR [rbx],cl
   14004a4ed:	jb     0x14004a4f6
   14004a4ef:	loopne 0x14004a4f6
   14004a4f1:	jo     0x14004a4f7
   14004a4f3:	(bad)  
   14004a4f4:	ss push rsi
   14004a4f6:	add    DWORD PTR [rax],eax
   14004a4f8:	nop
   14004a4f9:	or     al,BYTE PTR [rax+rax*1]
   14004a4fc:	(bad)  
   14004a4fd:	(bad)  
   14004a4fe:	(bad)  
   14004a4ff:	dec    DWORD PTR [rbx+0x70000332]
   14004a505:	xor    DWORD PTR [rbx],eax
   14004a507:	add    bh,bh
   14004a509:	(bad)  
   14004a50a:	(bad)  
   14004a50b:	jmp    FWORD PTR [rdx+0x331]
   14004a511:	add    BYTE PTR [rax],al
   14004a513:	add    BYTE PTR [rdx],al
   14004a515:	xor    al,BYTE PTR [rbx]
   14004a517:	add    bh,bh
   14004a519:	(bad)  
   14004a51a:	(bad)  
   14004a51b:	call   QWORD PTR [rcx]
   14004a51d:	sbb    ecx,DWORD PTR [rax]
   14004a51f:	add    BYTE PTR [rbx],bl
   14004a521:	push   rsp
   14004a522:	(bad)  
   14004a523:	add    BYTE PTR [rdi],dl
   14004a525:	xor    al,0xd
   14004a527:	add    BYTE PTR [rbx],cl
   14004a529:	jb     0x14004a532
   14004a52b:	loopne 0x14004a532
   14004a52d:	jo     0x14004a533
   14004a52f:	(bad)  
   14004a530:	ss push rsi
   14004a532:	add    DWORD PTR [rax],eax
   14004a534:	mov    eax,0xff00040a
   14004a539:	(bad)  
   14004a53a:	(bad)  
   14004a53b:	jmp    QWORD PTR [rbx-0x77fffcc9]
   14004a541:	add    eax,DWORD PTR ss:[rax]
   14004a544:	(bad)  
   14004a545:	(bad)  
   14004a546:	(bad)  
   14004a547:	inc    edx
   14004a549:	add    eax,DWORD PTR ss:[rax]
   14004a54c:	add    BYTE PTR [rax],al
   14004a54e:	add    BYTE PTR [rax],al
   14004a550:	sbb    dh,BYTE PTR [rdi]
   14004a552:	add    eax,DWORD PTR [rax]
   14004a554:	(bad)  
   14004a555:	(bad)  
   14004a556:	(bad)  
   14004a557:	inc    DWORD PTR [rcx]
   14004a559:	clts   
   14004a55b:	add    BYTE PTR [rdi],cl
   14004a55d:	or     BYTE PTR fs:[rax],al
   14004a560:	sysenter 
   14004a562:	(bad)  
   14004a563:	add    BYTE PTR [rdi],cl
   14004a565:	xor    cl,BYTE PTR [rbx]
   14004a567:	jo     0x14004a57a
   14004a569:	sbb    ecx,DWORD PTR [rax]
   14004a56b:	add    BYTE PTR [rbx],bl
   14004a56d:	push   rsp
   14004a56e:	or     al,0x0
   14004a570:	(bad)  
   14004a571:	xor    al,0xb
   14004a573:	add    BYTE PTR [rbx],cl
   14004a575:	push   rdx
   14004a576:	(bad)  
   14004a577:	loopne 0x14004a57e
   14004a579:	jo     0x14004a57f
   14004a57b:	(bad)  
   14004a57c:	ss push rsi
   14004a57e:	add    DWORD PTR [rax],eax
   14004a580:	or     BYTE PTR [rbx],cl
   14004a582:	add    al,0x0
   14004a584:	(bad)  
   14004a585:	(bad)  
   14004a586:	(bad)  
   14004a587:	call   FWORD PTR [rbx+0x38]
   14004a58a:	add    eax,DWORD PTR [rax]
   14004a58c:	shl    BYTE PTR [rdi],0x3
   14004a58f:	add    bh,bh
   14004a591:	(bad)  
   14004a592:	(bad)  
   14004a593:	(bad)  
   14004a594:	sti    
   14004a595:	(bad)  
   14004a596:	add    eax,DWORD PTR [rax]
   14004a598:	add    BYTE PTR [rax],al
   14004a59a:	add    BYTE PTR [rax],al
   14004a59c:	cmp    eax,0xff000338
   14004a5a1:	(bad)  
   14004a5a2:	(bad)  
   14004a5a3:	call   QWORD PTR [rcx]
   14004a5a5:	sbb    ecx,DWORD PTR [rax]
   14004a5a7:	add    BYTE PTR [rbx],bl
   14004a5a9:	push   rsp
   14004a5aa:	(bad)  
   14004a5ab:	add    BYTE PTR [rdi],dl
   14004a5ad:	xor    al,0xc
   14004a5af:	add    BYTE PTR [rbx],cl
   14004a5b1:	jb     0x14004a5ba
   14004a5b3:	loopne 0x14004a5ba
   14004a5b5:	jo     0x14004a5bb
   14004a5b7:	(bad)  
   14004a5b8:	ss push rsi
   14004a5ba:	add    DWORD PTR [rax],eax
   14004a5bc:	xor    BYTE PTR [rbx],cl
   14004a5be:	add    al,0x0
   14004a5c0:	(bad)  
   14004a5c1:	(bad)  
   14004a5c2:	(bad)  
   14004a5c3:	inc    DWORD PTR [rdi+0x39]
   14004a5c6:	add    eax,DWORD PTR [rax]
   14004a5c8:	jo     0x14004a602
   14004a5ca:	add    eax,DWORD PTR [rax]
   14004a5cc:	(bad)  
   14004a5cd:	(bad)  
   14004a5ce:	(bad)  
   14004a5cf:	jmp    QWORD PTR [rax+0x338]
   14004a5d5:	add    BYTE PTR [rax],al
   14004a5d7:	add    BYTE PTR [rdx],cl
   14004a5d9:	cmp    DWORD PTR [rbx],eax
   14004a5db:	add    bh,bh
   14004a5dd:	(bad)  
   14004a5de:	(bad)  
   14004a5df:	call   QWORD PTR [rcx]
   14004a5e1:	sbb    BYTE PTR [rsi],al
   14004a5e3:	add    BYTE PTR [rax],bl
   14004a5e5:	or     al,BYTE PTR fs:[rax]
   14004a5e8:	adc    al,0x34
   14004a5ea:	or     DWORD PTR [rax],eax
   14004a5ec:	or     BYTE PTR [rdx+0x4],dl
   14004a5ef:	jo     0x14004a627
   14004a5f1:	push   rsi
   14004a5f2:	add    DWORD PTR [rax],eax
   14004a5f4:	pop    rax
   14004a5f5:	or     eax,DWORD PTR [rax+rax*1]
   14004a5f8:	(bad)  
   14004a5f9:	(bad)  
   14004a5fa:	(bad)  
   14004a5fb:	push   QWORD PTR [rsi+rsi*1+0x3]
   14004a5ff:	add    BYTE PTR [rax],al
   14004a601:	add    eax,DWORD PTR ss:[rax]
   14004a604:	(bad)  
   14004a605:	(bad)  
   14004a606:	(bad)  
   14004a607:	push   QWORD PTR [rax]
   14004a609:	add    eax,DWORD PTR ss:[rax]
   14004a60c:	add    BYTE PTR [rax],al
   14004a60e:	add    BYTE PTR [rax],al
   14004a610:	pop    rcx
   14004a611:	add    eax,DWORD PTR ss:[rax]
   14004a614:	(bad)  
   14004a615:	(bad)  
   14004a616:	(bad)  
   14004a617:	call   QWORD PTR [rcx]
   14004a619:	sbb    BYTE PTR [rsi],al
   14004a61b:	add    BYTE PTR [rax],bl
   14004a61d:	fs or  al,0x0
   14004a620:	adc    al,0x34
   14004a622:	or     eax,DWORD PTR [rax]
   14004a624:	or     BYTE PTR [rdx+0x4],dh
   14004a627:	jo     0x14004a65f
   14004a629:	push   rsi
   14004a62a:	add    DWORD PTR [rax],eax
   14004a62c:	or     BYTE PTR [rbx],0x4
   14004a62f:	add    bh,bh
   14004a631:	(bad)  
   14004a632:	(bad)  
   14004a633:	dec    eax
   14004a635:	xor    BYTE PTR [rbx],al
   14004a637:	add    BYTE PTR [rax],dh
   14004a639:	xor    BYTE PTR [rbx],al
   14004a63b:	add    bh,bh
   14004a63d:	(bad)  
   14004a63e:	(bad)  
   14004a63f:	call   FWORD PTR [rbp+0x30]
   14004a642:	add    eax,DWORD PTR [rax]
   14004a644:	add    BYTE PTR [rax],al
   14004a646:	add    BYTE PTR [rax],al
   14004a648:	lods   eax,DWORD PTR ds:[rsi]
   14004a649:	xor    BYTE PTR [rbx],al
   14004a64b:	add    bh,bh
   14004a64d:	(bad)  
   14004a64e:	(bad)  
   14004a64f:	call   QWORD PTR [rcx]
   14004a651:	sbb    BYTE PTR [rsi],al
   14004a653:	add    BYTE PTR [rax],bl
   14004a655:	or     al,BYTE PTR fs:[rax]
   14004a658:	adc    al,0x34
   14004a65a:	or     DWORD PTR [rax],eax
   14004a65c:	or     BYTE PTR [rdx+0x4],dl
   14004a65f:	jo     0x14004a697
   14004a661:	push   rsi
   14004a662:	add    DWORD PTR [rax],eax
   14004a664:	test   al,0xb
   14004a666:	add    al,0x0
   14004a668:	(bad)  
   14004a669:	(bad)  
   14004a66a:	(bad)  
   14004a66b:	call   FWORD PTR [rcx+rsi*1+0x3]
   14004a66f:	add    al,ah
   14004a671:	xor    BYTE PTR [rbx],al
   14004a673:	add    bh,bh
   14004a675:	(bad)  
   14004a676:	(bad)  
   14004a677:	call   QWORD PTR [rdx]
   14004a679:	xor    DWORD PTR [rbx],eax
   14004a67b:	add    BYTE PTR [rax],al
   14004a67d:	add    BYTE PTR [rax],al
   14004a67f:	add    BYTE PTR [rcx+0x31],al
   14004a682:	add    eax,DWORD PTR [rax]
   14004a684:	(bad)  
   14004a685:	(bad)  
   14004a686:	(bad)  
   14004a687:	call   QWORD PTR [rcx]
   14004a689:	and    BYTE PTR [rdx],cl
   14004a68b:	add    BYTE PTR [rax],ah
   14004a68d:	fs or  eax,0xc541c00
   14004a693:	add    BYTE PTR [rax],bl
   14004a695:	xor    al,0xb
   14004a697:	add    BYTE PTR [rdx+rdx*2],cl
   14004a69a:	or     al,dh
   14004a69c:	(bad)  
   14004a69d:	loopne 0x14004a6a3
   14004a69f:	jo     0x14004a6d7
   14004a6a1:	push   rsi
   14004a6a2:	add    DWORD PTR [rax],eax
   14004a6a4:	ror    BYTE PTR [rbx],1
   14004a6a6:	add    al,0x0
   14004a6a8:	(bad)  
   14004a6a9:	(bad)  
   14004a6aa:	(bad)  
   14004a6ab:	call   QWORD PTR [rdi+0x34]
   14004a6ae:	add    eax,DWORD PTR [rax]
   14004a6b0:	shl    BYTE PTR [rbx],1
   14004a6b2:	add    eax,DWORD PTR [rax]
   14004a6b4:	(bad)  
   14004a6b5:	(bad)  
   14004a6b6:	(bad)  
   14004a6b7:	call   QWORD PTR [rbx]
   14004a6b9:	xor    al,0x3
   14004a6bb:	add    BYTE PTR [rax],al
   14004a6bd:	add    BYTE PTR [rax],al
   14004a6bf:	add    BYTE PTR [rbx],dh
   14004a6c1:	xor    al,0x3
   14004a6c3:	add    bh,bh
   14004a6c5:	(bad)  
   14004a6c6:	(bad)  
   14004a6c7:	call   QWORD PTR [rcx]
   14004a6c9:	sbb    ecx,DWORD PTR [rax]
   14004a6cb:	add    BYTE PTR [rbx],bl
   14004a6cd:	push   rsp
   14004a6ce:	or     al,0x0
   14004a6d0:	(bad)  
   14004a6d1:	xor    al,0xb
   14004a6d3:	add    BYTE PTR [rbx],cl
   14004a6d5:	push   rdx
   14004a6d6:	(bad)  
   14004a6d7:	loopne 0x14004a6de
   14004a6d9:	jo     0x14004a6df
   14004a6db:	(bad)  
   14004a6dc:	ss push rsi
   14004a6de:	add    DWORD PTR [rax],eax
   14004a6e0:	clc    
   14004a6e1:	or     eax,DWORD PTR [rax+rax*1]
   14004a6e4:	(bad)  
   14004a6e5:	(bad)  
   14004a6e6:	(bad)  
   14004a6e7:	push   QWORD PTR [rsi+0x40000333]
   14004a6ed:	xor    eax,DWORD PTR [rbx]
   14004a6ef:	add    bh,bh
   14004a6f1:	(bad)  
   14004a6f2:	(bad)  
   14004a6f3:	(bad)  
   14004a6f4:	jnp    0x14004a729
   14004a6f6:	add    eax,DWORD PTR [rax]
   14004a6f8:	add    BYTE PTR [rax],al
   14004a6fa:	add    BYTE PTR [rax],al
   14004a6fc:	cwde   
   14004a6fd:	xor    eax,DWORD PTR [rbx]
   14004a6ff:	add    bh,bh
   14004a701:	(bad)  
   14004a702:	(bad)  
   14004a703:	call   QWORD PTR [rcx]
   14004a705:	sbb    eax,0x741d0008
   14004a70a:	or     al,BYTE PTR [rax]
   14004a70c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14004a710:	adc    eax,0x9000834
   14004a715:	push   rdx
   14004a716:	add    eax,0x15636e0
   14004a71b:	add    BYTE PTR [rax],ah
   14004a71d:	or     al,0x4
   14004a71f:	add    bh,bh
   14004a721:	(bad)  
   14004a722:	(bad)  
   14004a723:	(bad)  
   14004a724:	mov    esp,0x20000341
   14004a729:	add    eax,DWORD PTR [r8]
   14004a72c:	(bad)  
   14004a72d:	(bad)  
   14004a72e:	(bad)  
   14004a72f:	jmp    FWORD PTR [rdx+0x41]
   14004a732:	add    eax,DWORD PTR [rax]
   14004a734:	add    BYTE PTR [rax],al
   14004a736:	add    BYTE PTR [rax],al
   14004a738:	mov    BYTE PTR [rcx+0x3],al
   14004a73b:	add    bh,bh
   14004a73d:	(bad)  
   14004a73e:	(bad)  
   14004a73f:	call   QWORD PTR [rcx]
   14004a741:	sbb    al,0x6
   14004a743:	add    BYTE PTR [rsp+riz*2],bl
   14004a746:	or     al,BYTE PTR [rax]
   14004a748:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004a74b:	add    BYTE PTR [rdx+rdx*2],cl
   14004a74e:	or     BYTE PTR [rax+0x36],dh
   14004a751:	push   rsi
   14004a752:	add    DWORD PTR [rax],eax
   14004a754:	rex.W or al,0x4
   14004a757:	add    bh,bh
   14004a759:	(bad)  
   14004a75a:	(bad)  
   14004a75b:	call   FWORD PTR [rbp+0x3000033a]
   14004a761:	cmp    al,BYTE PTR [rbx]
   14004a763:	add    bh,bh
   14004a765:	(bad)  
   14004a766:	(bad)  
   14004a767:	call   QWORD PTR [rsi+0x3a]
   14004a76a:	add    eax,DWORD PTR [rax]
   14004a76c:	add    BYTE PTR [rax],al
   14004a76e:	add    BYTE PTR [rax],al
   14004a770:	xchg   BYTE PTR [rdx],bh
   14004a772:	add    eax,DWORD PTR [rax]
   14004a774:	(bad)  
   14004a775:	(bad)  
   14004a776:	(bad)  
   14004a777:	call   QWORD PTR [rcx]
   14004a779:	sbb    al,0x6
   14004a77b:	add    BYTE PTR [rsp+riz*2],bl
   14004a77e:	or     eax,DWORD PTR [rax]
   14004a780:	sbb    BYTE PTR [rdx+rcx*1],dh
   14004a783:	add    BYTE PTR [rdx+rdx*2],cl
   14004a786:	or     BYTE PTR [rax+0x36],dh
   14004a789:	push   rsi
   14004a78a:	add    DWORD PTR [rax],eax
   14004a78c:	jo     0x14004a79a
   14004a78e:	add    al,0x0
   14004a790:	(bad)  
   14004a791:	(bad)  
   14004a792:	(bad)  
   14004a793:	inc    DWORD PTR [rdi]
   14004a795:	cmp    al,BYTE PTR [rbx]
   14004a797:	add    BYTE PTR [rax],al
   14004a799:	add    BYTE PTR [rax],al
   14004a79b:	add    BYTE PTR [rdi],dl
   14004a79d:	cmp    al,BYTE PTR [rbx]
   14004a79f:	add    BYTE PTR [rcx+rdi*1+0x3],bl
   14004a7a3:	add    bh,bh
   14004a7a5:	(bad)  
   14004a7a6:	(bad)  
   14004a7a7:	inc    DWORD PTR [rdx+0x339]
   14004a7ad:	add    BYTE PTR [rax],al
   14004a7af:	add    bh,dl
   14004a7b1:	cmp    DWORD PTR [rbx],eax
   14004a7b3:	add    BYTE PTR [rcx],al
   14004a7b5:	add    BYTE PTR [rax],al
   14004a7b7:	add    ah,dh
   14004a7b9:	cmp    DWORD PTR [rbx],eax
   14004a7bb:	add    bh,bh
   14004a7bd:	(bad)  
   14004a7be:	(bad)  
   14004a7bf:	call   QWORD PTR [rcx]
   14004a7c1:	sbb    al,0x6
   14004a7c3:	add    BYTE PTR [rsp+riz*2],bl
   14004a7c6:	or     al,BYTE PTR [rax]
   14004a7c8:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004a7cb:	add    BYTE PTR [rdx+rdx*2],cl
   14004a7ce:	or     BYTE PTR [rax+0x36],dh
   14004a7d1:	push   rsi
   14004a7d2:	add    DWORD PTR [rax],eax
   14004a7d4:	cwde   
   14004a7d5:	or     al,0x4
   14004a7d7:	add    bh,bh
   14004a7d9:	(bad)  
   14004a7da:	(bad)  
   14004a7db:	call   QWORD PTR [rbp+0x3b]
   14004a7de:	add    eax,DWORD PTR [rax]
   14004a7e0:	sar    BYTE PTR [rdx],0x3
   14004a7e3:	add    bh,bh
   14004a7e5:	(bad)  
   14004a7e6:	(bad)  
   14004a7e7:	call   QWORD PTR [rip+0x33b]        # 0x14004ab28
   14004a7ed:	add    BYTE PTR [rax],al
   14004a7ef:	add    BYTE PTR [rsi],bh
   14004a7f1:	cmp    eax,DWORD PTR [rbx]
   14004a7f3:	add    bh,bh
   14004a7f5:	(bad)  
   14004a7f6:	(bad)  
   14004a7f7:	call   FWORD PTR [rcx]
   14004a7f9:	and    ecx,DWORD PTR [rax]
   14004a7fb:	add    BYTE PTR [rbx],ah
   14004a7fd:	xor    al,0xe
   14004a7ff:	add    BYTE PTR [rdi],dl
   14004a801:	jb     0x14004a816
   14004a803:	lock adc eax,esp
   14004a806:	xadd   BYTE PTR [rip+0x36600c70],cl        # 0x17664b47d
   14004a80d:	push   rsi
   14004a80e:	add    DWORD PTR [rax],eax
   14004a810:	call   0x13f04ac21
   14004a815:	(bad)  
   14004a816:	(bad)  
   14004a817:	inc    DWORD PTR [rax]
   14004a819:	add    BYTE PTR [rax],al
   14004a81b:	add    BYTE PTR [rax],al
   14004a81d:	add    BYTE PTR [rax],al
   14004a81f:	add    BYTE PTR [rcx],dl
   14004a821:	rex add eax,DWORD PTR [rax]
   14004a824:	(bad)  
   14004a825:	(bad)  
   14004a826:	(bad)  
   14004a827:	inc    DWORD PTR [rax]
   14004a829:	add    BYTE PTR [rax],al
   14004a82b:	add    BYTE PTR [rax],al
   14004a82d:	add    BYTE PTR [rax],al
   14004a82f:	add    BYTE PTR [rcx],al
   14004a831:	add    BYTE PTR [rax],al
   14004a833:	add    BYTE PTR [rdx],al
   14004a835:	add    BYTE PTR [rax],al
   14004a837:	add    BYTE PTR [rcx],al
   14004a839:	add    BYTE PTR [rax],al
   14004a83b:	add    BYTE PTR [rax-0x58],al
   14004a83e:	add    al,0x0
   14004a840:	add    BYTE PTR [rax],al
	...
   14004a84b:	add    BYTE PTR [rip+0x38000340],bl        # 0x17804ab91
   14004a851:	add    BYTE PTR [rax],al
   14004a853:	add    BYTE PTR [rdi+rdi*1],al
   14004a856:	add    eax,DWORD PTR [rax]
   14004a858:	(bad)  
   14004a859:	(bad)  
   14004a85a:	(bad)  
   14004a85b:	call   QWORD PTR [rbp+0x3f]
   14004a85e:	add    eax,DWORD PTR [rax]
   14004a860:	add    BYTE PTR [rax],al
   14004a862:	add    BYTE PTR [rax],al
   14004a864:	fs (bad) 
   14004a866:	add    eax,DWORD PTR [rax]
   14004a868:	add    DWORD PTR [rax],eax
   14004a86a:	add    BYTE PTR [rax],al
   14004a86c:	jl     0x14004a8ad
   14004a86e:	add    eax,DWORD PTR [rax]
   14004a870:	add    BYTE PTR [rax],al
   14004a872:	add    BYTE PTR [rax],al
   14004a874:	cmp    DWORD PTR [rdi],0xffff0003
   14004a87a:	(bad)  
   14004a87b:	call   FWORD PTR [rip+0x340]        # 0x14004abc1
   14004a881:	add    BYTE PTR [rax],al
   14004a883:	add    BYTE PTR [rcx],bl
   14004a885:	or     al,BYTE PTR [rdx]
   14004a887:	add    BYTE PTR [rdx],cl
   14004a889:	xor    al,BYTE PTR [rsi]
   14004a88b:	push   rax
   14004a88c:	ss push rsi
   14004a88e:	add    DWORD PTR [rax],eax
   14004a890:	call   0x15104aca1
   14004a895:	and    BYTE PTR [rdx],cl
   14004a897:	add    BYTE PTR [rax],ah
   14004a899:	fs or  eax,0xc541c00
   14004a89f:	add    BYTE PTR [rax],bl
   14004a8a1:	xor    al,0xb
   14004a8a3:	add    BYTE PTR [rdx+rdx*2],cl
   14004a8a6:	or     al,dh
   14004a8a8:	(bad)  
   14004a8a9:	loopne 0x14004a8af
   14004a8ab:	jo     0x14004a8e3
   14004a8ad:	push   rsi
   14004a8ae:	add    DWORD PTR [rax],eax
   14004a8b0:	cmp    BYTE PTR [rip+0xffffffffffff0004],cl        # 0x14003a8ba
   14004a8b6:	(bad)  
   14004a8b7:	call   rsp
   14004a8b9:	rex.X add eax,DWORD PTR [rax]
   14004a8bc:	adc    BYTE PTR [rdx+0x3],al
   14004a8bf:	add    bh,bh
   14004a8c1:	(bad)  
   14004a8c2:	(bad)  
   14004a8c3:	call   FWORD PTR [rax+0x42]
   14004a8c6:	add    eax,DWORD PTR [rax]
   14004a8c8:	add    BYTE PTR [rax],al
   14004a8ca:	add    BYTE PTR [rax],al
   14004a8cc:	lahf   
   14004a8cd:	rex.X add eax,DWORD PTR [rax]
   14004a8d0:	(bad)  
   14004a8d1:	(bad)  
   14004a8d2:	(bad)  
   14004a8d3:	call   QWORD PTR [rcx]
   14004a8d5:	and    BYTE PTR [rdx],cl
   14004a8d7:	add    BYTE PTR [rax],ah
   14004a8d9:	push   rsp
   14004a8da:	(bad)  
   14004a8db:	add    BYTE PTR [rbx],bl
   14004a8dd:	xor    al,0xd
   14004a8df:	add    BYTE PTR [rip+0x7f00952],cl        # 0x147f4b237
   14004a8e5:	loopne 0x14004a8ec
   14004a8e7:	rol    BYTE PTR [rbx],0x70
   14004a8ea:	add    ah,BYTE PTR [rax+0x36]
   14004a8ed:	push   rsi
   14004a8ee:	add    DWORD PTR [rax],eax
   14004a8f0:	(bad)  
   14004a8f1:	or     eax,0xffff0004
   14004a8f6:	(bad)  
   14004a8f7:	(bad)  
   14004a8f8:	mov    eax,0xf0000343
   14004a8fd:	rex.X add eax,DWORD PTR [rax]
   14004a900:	(bad)  
   14004a901:	(bad)  
   14004a902:	(bad)  
   14004a903:	(bad)  
   14004a904:	cmp    eax,DWORD PTR [rbx+0x3]
   14004a907:	add    BYTE PTR [rax],al
   14004a909:	add    BYTE PTR [rax],al
   14004a90b:	add    BYTE PTR [rbp-0xfffcbd],al
   14004a911:	(bad)  
   14004a912:	(bad)  
   14004a913:	inc    DWORD PTR [rcx]
   14004a915:	adc    al,0x8
   14004a917:	add    BYTE PTR [rsp+riz*2],dl
   14004a91a:	or     DWORD PTR [rax],eax
   14004a91c:	adc    al,0x54
   14004a91e:	or     BYTE PTR [rax],al
   14004a920:	adc    al,0x34
   14004a922:	(bad)  
   14004a923:	add    BYTE PTR [rdx+rsi*1],dl
   14004a926:	adc    BYTE PTR [rax+0x11],dh
   14004a929:	sbb    al,0x8
   14004a92b:	add    BYTE PTR [rsp+riz*2],bl
   14004a92e:	or     eax,DWORD PTR [rax]
   14004a930:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14004a934:	adc    al,0x34
   14004a936:	or     DWORD PTR [rax],eax
   14004a938:	or     BYTE PTR [rdx+0x4],dl
   14004a93b:	jo     0x14004a973
   14004a93d:	push   rsi
   14004a93e:	add    DWORD PTR [rax],eax
   14004a940:	mov    BYTE PTR [rip+0xffffffffffff0004],cl        # 0x14003a94a
   14004a946:	(bad)  
   14004a947:	jmp    QWORD PTR [rax]
   14004a949:	add    eax,DWORD PTR ds:[rax]
   14004a94c:	jo     0x14004a98b
   14004a94e:	add    eax,DWORD PTR [rax]
   14004a950:	(bad)  
   14004a951:	(bad)  
   14004a952:	(bad)  
   14004a953:	jmp    FWORD PTR [rsi+0x33d]
   14004a959:	add    BYTE PTR [rax],al
   14004a95b:	add    bh,ch
   14004a95d:	cmp    eax,0xffff0003
   14004a962:	(bad)  
   14004a963:	call   QWORD PTR [rcx]
   14004a965:	sbb    DWORD PTR [rsi],eax
   14004a967:	add    BYTE PTR [rcx],bl
   14004a969:	or     al,BYTE PTR fs:[rax]
   14004a96c:	adc    al,0x34
   14004a96e:	or     DWORD PTR [rax],eax
   14004a970:	(bad)  
   14004a971:	push   rdx
   14004a972:	add    dh,BYTE PTR [rax+0x36]
   14004a975:	push   rsi
   14004a976:	add    DWORD PTR [rax],eax
   14004a978:	mov    al,0xd
   14004a97a:	add    al,0x0
   14004a97c:	(bad)  
   14004a97d:	(bad)  
   14004a97e:	(bad)  
   14004a97f:	call   FWORD PTR [rax+0x3d]
   14004a982:	add    eax,DWORD PTR [rax]
   14004a984:	mov    eax,0xff00033c
   14004a989:	(bad)  
   14004a98a:	(bad)  
   14004a98b:	(bad)  
   14004a98c:	out    dx,al
   14004a98d:	cmp    al,0x3
   14004a98f:	add    BYTE PTR [rax],al
   14004a991:	add    BYTE PTR [rax],al
   14004a993:	add    BYTE PTR [rsi],ch
   14004a995:	cmp    eax,0xffff0003
   14004a99a:	(bad)  
   14004a99b:	call   QWORD PTR [rcx]
   14004a99d:	and    BYTE PTR [rdx],cl
   14004a99f:	add    BYTE PTR [rax],ah
   14004a9a1:	fs or  eax,0xc541c00
   14004a9a7:	add    BYTE PTR [rax],bl
   14004a9a9:	xor    al,0xb
   14004a9ab:	add    BYTE PTR [rdx+rdx*2],cl
   14004a9ae:	or     al,dh
   14004a9b0:	(bad)  
   14004a9b1:	loopne 0x14004a9b7
   14004a9b3:	jo     0x14004a9eb
   14004a9b5:	push   rsi
   14004a9b6:	add    DWORD PTR [rax],eax
   14004a9b8:	add    BYTE PTR [rsi],cl
   14004a9ba:	add    al,0x0
   14004a9bc:	(bad)  
   14004a9bd:	(bad)  
   14004a9be:	(bad)  
   14004a9bf:	jmp    QWORD PTR [rdi+rax*2]
   14004a9c2:	add    eax,DWORD PTR [rax]
   14004a9c4:	(bad)  
   14004a9c5:	rex.RX add r8d,DWORD PTR [rax]
   14004a9c8:	(bad)  
   14004a9c9:	(bad)  
   14004a9ca:	(bad)  
   14004a9cb:	jmp    FWORD PTR [rax+0x346]
   14004a9d1:	add    BYTE PTR [rax],al
   14004a9d3:	add    bh,ch
   14004a9d5:	rex.RX add r8d,DWORD PTR [rax]
   14004a9d8:	(bad)  
   14004a9d9:	(bad)  
   14004a9da:	(bad)  
   14004a9db:	call   QWORD PTR [rcx]
   14004a9dd:	(bad)  
   14004a9de:	or     al,BYTE PTR [rax]
   14004a9e0:	(bad)  
   14004a9e1:	push   rsp
   14004a9e2:	adc    BYTE PTR [rax],al
   14004a9e4:	sbb    esi,DWORD PTR [rdi+rcx*1]
   14004a9e7:	add    BYTE PTR [rdi],cl
   14004a9e9:	jb     0x14004a9f6
   14004a9eb:	lock or eax,esp
   14004a9ee:	(bad)  
   14004a9ef:	rol    BYTE PTR [rip+0x36600470],0x56        # 0x17664ae66
   14004a9f6:	add    DWORD PTR [rax],eax
   14004a9f8:	sub    BYTE PTR [rsi],cl
   14004a9fa:	add    al,0x0
   14004a9fc:	(bad)  
   14004a9fd:	(bad)  
   14004a9fe:	(bad)  
   14004a9ff:	dec    DWORD PTR [rdx-0x4ffffcb6]
   14004aa05:	add    rax,QWORD PTR [r8]
   14004aa08:	(bad)  
   14004aa09:	(bad)  
   14004aa0a:	(bad)  
   14004aa0b:	(bad)  
   14004aa0c:	dec    BYTE PTR [rcx+0x3]
   14004aa0f:	add    BYTE PTR [rax],al
   14004aa11:	add    BYTE PTR [rax],al
   14004aa13:	add    BYTE PTR [rbp+0x4a],dl
   14004aa16:	add    eax,DWORD PTR [rax]
   14004aa18:	(bad)  
   14004aa19:	(bad)  
   14004aa1a:	(bad)  
   14004aa1b:	call   QWORD PTR [rcx]
   14004aa1d:	sbb    al,0x8
   14004aa1f:	add    BYTE PTR [rsp+rdx*2],bl
   14004aa22:	or     al,0x0
   14004aa24:	(bad)  
   14004aa25:	xor    al,0xb
   14004aa27:	add    BYTE PTR [rcx],cl
   14004aa29:	push   rdx
   14004aa2a:	add    eax,0x27003e0
   14004aa2f:	(bad)  
   14004aa30:	ss push rsi
   14004aa32:	add    DWORD PTR [rax],eax
   14004aa34:	push   rax
   14004aa35:	(bad)  
   14004aa36:	add    al,0x0
   14004aa38:	(bad)  
   14004aa39:	(bad)  
   14004aa3a:	(bad)  
   14004aa3b:	push   rsp
   14004aa3d:	add    r8d,DWORD PTR [r8]
   14004aa40:	rex
   14004aa41:	add    r8d,DWORD PTR [r8]
   14004aa44:	(bad)  
   14004aa45:	(bad)  
   14004aa46:	(bad)  
   14004aa47:	inc    DWORD PTR [rcx+0x345]
   14004aa4d:	add    BYTE PTR [rax],al
   14004aa4f:	add    ch,al
   14004aa51:	add    r8d,DWORD PTR [r8]
   14004aa54:	(bad)  
   14004aa55:	(bad)  
   14004aa56:	(bad)  
   14004aa57:	call   QWORD PTR [rcx]
   14004aa59:	sbb    al,0x8
   14004aa5b:	add    BYTE PTR [rsp+riz*2],bl
   14004aa5e:	or     eax,DWORD PTR [rax]
   14004aa60:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14004aa64:	adc    al,0x34
   14004aa66:	or     DWORD PTR [rax],eax
   14004aa68:	or     BYTE PTR [rdx+0x4],dl
   14004aa6b:	jo     0x14004aaa3
   14004aa6d:	push   rsi
   14004aa6e:	add    DWORD PTR [rax],eax
   14004aa70:	js     0x14004aa80
   14004aa72:	add    al,0x0
   14004aa74:	(bad)  
   14004aa75:	(bad)  
   14004aa76:	(bad)  
   14004aa77:	push   rax
   14004aa79:	add    eax,DWORD PTR ds:[rax]
   14004aa7c:	rex
   14004aa7d:	add    eax,DWORD PTR ds:[rax]
   14004aa80:	(bad)  
   14004aa81:	(bad)  
   14004aa82:	(bad)  
   14004aa83:	(bad)  
   14004aa84:	jle    0x14004aac4
   14004aa86:	add    eax,DWORD PTR [rax]
   14004aa88:	add    BYTE PTR [rax],al
   14004aa8a:	add    BYTE PTR [rax],al
   14004aa8c:	mov    edi,0xff00033e
   14004aa91:	(bad)  
   14004aa92:	(bad)  
   14004aa93:	call   QWORD PTR [rcx]
   14004aa95:	(bad)  
   14004aa96:	or     al,BYTE PTR [rax]
   14004aa98:	(bad)  
   14004aa99:	push   rsp
   14004aa9a:	adc    BYTE PTR [rax],al
   14004aa9c:	sbb    esi,DWORD PTR [rdi+rcx*1]
   14004aa9f:	add    BYTE PTR [rdi],cl
   14004aaa1:	jb     0x14004aaae
   14004aaa3:	lock or eax,esp
   14004aaa6:	(bad)  
   14004aaa7:	rol    BYTE PTR [rip+0x36600470],0x56        # 0x17664af1e
   14004aaae:	add    DWORD PTR [rax],eax
   14004aab0:	movabs al,ds:0x98ffffffff00040e
   14004aab9:	add    rax,QWORD PTR [r8]
   14004aabc:	ror    BYTE PTR [rax+0x3],0x0
   14004aac0:	(bad)  
   14004aac1:	(bad)  
   14004aac2:	(bad)  
   14004aac3:	dec    DWORD PTR [rsi]
   14004aac5:	add    rax,QWORD PTR [r8]
   14004aac8:	add    BYTE PTR [rax],al
   14004aaca:	add    BYTE PTR [rax],al
   14004aacc:	movsxd ecx,DWORD PTR [rcx+0x3]
   14004aacf:	add    bh,bh
   14004aad1:	(bad)  
   14004aad2:	(bad)  
   14004aad3:	call   QWORD PTR [rcx]
   14004aad5:	and    BYTE PTR [rdx],cl
   14004aad7:	add    BYTE PTR [rax],ah
   14004aad9:	ltr    WORD PTR fs:[rsp+rdx*2]
   14004aade:	(bad)  
   14004aadf:	add    BYTE PTR [rax],bl
   14004aae1:	xor    al,0xd
   14004aae3:	add    BYTE PTR [rdx+rsi*2],cl
   14004aae6:	or     al,dh
   14004aae8:	(bad)  
   14004aae9:	loopne 0x14004aaef
   14004aaeb:	jo     0x14004ab23
   14004aaed:	push   rsi
   14004aaee:	add    DWORD PTR [rax],eax
   14004aaf0:	enter  0x40e,0x0
   14004aaf4:	(bad)  
   14004aaf5:	(bad)  
   14004aaf6:	(bad)  
   14004aaf7:	jmp    QWORD PTR [rax-0x2ffffcb8]
   14004aafd:	rex.RXB add r8d,DWORD PTR [r8]
   14004ab00:	(bad)  
   14004ab01:	(bad)  
   14004ab02:	(bad)  
   14004ab03:	call   FWORD PTR [rax]
   14004ab05:	add    rax,QWORD PTR [rax]
   14004ab08:	add    BYTE PTR [rax],al
   14004ab0a:	add    BYTE PTR [rax],al
   14004ab0c:	imul   ecx,DWORD PTR [rax+0x3],0x0
   14004ab10:	(bad)  
   14004ab11:	(bad)  
   14004ab12:	(bad)  
   14004ab13:	call   QWORD PTR [rcx]
   14004ab15:	sbb    al,0x8
   14004ab17:	add    BYTE PTR [rsp+riz*2],bl
   14004ab1a:	or     eax,DWORD PTR [rax]
   14004ab1c:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14004ab20:	adc    al,0x34
   14004ab22:	or     DWORD PTR [rax],eax
   14004ab24:	or     BYTE PTR [rdx+0x4],dl
   14004ab27:	jo     0x14004ab5f
   14004ab29:	push   rsi
   14004ab2a:	add    DWORD PTR [rax],eax
   14004ab2c:	push   0xffffffffff00040f
   14004ab31:	(bad)  
   14004ab32:	(bad)  
   14004ab33:	push   QWORD PTR [rdi+0x3400034b]
   14004ab39:	rex.WXB add rax,QWORD PTR [r8]
   14004ab3c:	(bad)  
   14004ab3d:	(bad)  
   14004ab3e:	(bad)  
   14004ab3f:	(bad)  
   14004ab40:	js     0x14004ab8d
   14004ab42:	add    eax,DWORD PTR [rax]
   14004ab44:	add    BYTE PTR [rax],al
   14004ab46:	add    BYTE PTR [rax],al
   14004ab48:	xchg   ebp,eax
   14004ab49:	rex.WXB add rax,QWORD PTR [r8]
   14004ab4c:	(bad)  
   14004ab4d:	(bad)  
   14004ab4e:	(bad)  
   14004ab4f:	call   QWORD PTR [rcx]
   14004ab51:	sbb    al,0x8
   14004ab53:	add    BYTE PTR [rsp+riz*2],bl
   14004ab56:	or     eax,DWORD PTR [rax]
   14004ab58:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14004ab5c:	adc    al,0x34
   14004ab5e:	or     DWORD PTR [rax],eax
   14004ab60:	or     BYTE PTR [rdx+0x4],dl
   14004ab63:	jo     0x14004ab9b
   14004ab65:	push   rsi
   14004ab66:	add    DWORD PTR [rax],eax
   14004ab68:	nop
   14004ab69:	(bad)  
   14004ab6b:	add    bh,bh
   14004ab6d:	(bad)  
   14004ab6e:	(bad)  
   14004ab6f:	dec    DWORD PTR [rdi+0x4c]
   14004ab72:	add    eax,DWORD PTR [rax]
   14004ab74:	int3   
   14004ab75:	rex.WXB add rax,QWORD PTR [r8]
   14004ab78:	(bad)  
   14004ab79:	(bad)  
   14004ab7a:	(bad)  
   14004ab7b:	call   QWORD PTR [rax]
   14004ab7d:	add    r8,QWORD PTR [rax]
   14004ab80:	add    BYTE PTR [rax],al
   14004ab82:	add    BYTE PTR [rax],al
   14004ab84:	sub    eax,0xff00034c
   14004ab89:	(bad)  
   14004ab8a:	(bad)  
   14004ab8b:	call   QWORD PTR [rcx]
   14004ab8d:	sbb    al,0x8
   14004ab8f:	add    BYTE PTR [rsp+riz*2],bl
   14004ab92:	or     eax,DWORD PTR [rax]
   14004ab94:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14004ab98:	adc    al,0x34
   14004ab9a:	or     DWORD PTR [rax],eax
   14004ab9c:	or     BYTE PTR [rdx+0x4],dl
   14004ab9f:	jo     0x14004abd7
   14004aba1:	push   rsi
   14004aba2:	add    DWORD PTR [rax],eax
   14004aba4:	mov    eax,0xff00040f
   14004aba9:	(bad)  
   14004abaa:	(bad)  
   14004abab:	call   FWORD PTR [rdi]
   14004abad:	rex.WXB add rax,QWORD PTR [r8]
   14004abb0:	pushf  
   14004abb1:	rex.WX add rax,QWORD PTR [rax]
   14004abb4:	(bad)  
   14004abb5:	(bad)  
   14004abb6:	(bad)  
   14004abb7:	jmp    rax
   14004abb9:	rex.WX add rax,QWORD PTR [rax]
   14004abbc:	add    BYTE PTR [rax],al
   14004abbe:	add    BYTE PTR [rax],al
   14004abc0:	std    
   14004abc1:	rex.WX add rax,QWORD PTR [rax]
   14004abc4:	(bad)  
   14004abc5:	(bad)  
   14004abc6:	(bad)  
   14004abc7:	inc    DWORD PTR [rcx]
   14004abc9:	adc    al,0x6
   14004abcb:	add    BYTE PTR [rsp+riz*2],dl
   14004abce:	or     DWORD PTR [rax],eax
   14004abd0:	adc    al,0x34
   14004abd2:	or     BYTE PTR [rax],al
   14004abd4:	adc    al,0x32
   14004abd6:	adc    BYTE PTR [rax+0x1],dh
   14004abd9:	adc    al,0x6
   14004abdb:	add    BYTE PTR [rsp+riz*2],dl
   14004abde:	or     BYTE PTR [rax],al
   14004abe0:	adc    al,0x34
   14004abe2:	(bad)  
   14004abe3:	add    BYTE PTR [rdx+rsi*1],dl
   14004abe6:	adc    BYTE PTR [rax+0x11],dh
   14004abe9:	sbb    al,0x6
   14004abeb:	add    BYTE PTR [rsp+riz*2],bl
   14004abee:	or     al,BYTE PTR [rax]
   14004abf0:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004abf3:	add    BYTE PTR [rdx+rdx*2],cl
   14004abf6:	or     BYTE PTR [rax+0x36],dh
   14004abf9:	push   rsi
   14004abfa:	add    DWORD PTR [rax],eax
   14004abfc:	or     BYTE PTR [rax],dl
   14004abfe:	add    al,0x0
   14004ac00:	(bad)  
   14004ac01:	(bad)  
   14004ac02:	(bad)  
   14004ac03:	(bad)  
   14004ac04:	std    
   14004ac05:	add    r8,QWORD PTR [r8]
   14004ac08:	add    BYTE PTR [rax],al
   14004ac0a:	add    BYTE PTR [rax],al
   14004ac0c:	or     eax,0x100034e
   14004ac11:	add    BYTE PTR [rax],al
   14004ac13:	add    BYTE PTR [rip+0x200034e],bl        # 0x14204af67
   14004ac19:	add    BYTE PTR [rax],al
   14004ac1b:	add    BYTE PTR [rip+0x300034e],ch        # 0x14304af6f
   14004ac21:	add    BYTE PTR [rax],al
   14004ac23:	add    BYTE PTR [rip+0x400034e],bh        # 0x14404af77
   14004ac29:	add    BYTE PTR [rax],al
   14004ac2b:	add    BYTE PTR [rax+0x4e],dl
   14004ac2e:	add    eax,DWORD PTR [rax]
   14004ac30:	add    eax,0x63000000
   14004ac35:	rex.WRX add r8,QWORD PTR [rax]
   14004ac38:	call   0x13f04af89
   14004ac3d:	(bad)  
   14004ac3e:	(bad)  
   14004ac3f:	inc    DWORD PTR [rdi]
   14004ac41:	add    r8,QWORD PTR [r8]
   14004ac44:	(bad)  
   14004ac45:	add    BYTE PTR [rax],al
   14004ac47:	add    BYTE PTR [rcx*2+0x50003],ch
   14004ac4e:	add    BYTE PTR [rax],al
   14004ac50:	cmp    DWORD PTR [rbp+0x3],ecx
   14004ac53:	add    BYTE PTR [rax+rax*1],al
   14004ac56:	add    BYTE PTR [rax],al
   14004ac58:	rex.RXB
   14004ac59:	add    r8,QWORD PTR [r8]
   14004ac5c:	add    eax,DWORD PTR [rax]
   14004ac5e:	add    BYTE PTR [rax],al
   14004ac60:	push   rbp
   14004ac61:	add    r8,QWORD PTR [r8]
   14004ac64:	add    al,BYTE PTR [rax]
   14004ac66:	add    BYTE PTR [rax],al
   14004ac68:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ac69:	add    r8,QWORD PTR [r8]
   14004ac6c:	add    DWORD PTR [rax],eax
   14004ac6e:	add    BYTE PTR [rax],al
   14004ac70:	(bad)  
   14004ac71:	add    r8,QWORD PTR [r8]
   14004ac74:	add    BYTE PTR [rax],al
   14004ac76:	add    BYTE PTR [rax],al
   14004ac78:	jrcxz  0x14004acc7
   14004ac7a:	add    eax,DWORD PTR [rax]
   14004ac7c:	(bad)  
   14004ac7d:	(bad)  
   14004ac7e:	(bad)  
   14004ac7f:	call   QWORD PTR [rcx]
   14004ac81:	adc    al,0x4
   14004ac83:	add    BYTE PTR [rsp+rsi*1],dl
   14004ac86:	or     BYTE PTR [rax],al
   14004ac88:	(bad)  
   14004ac89:	push   rdx
   14004ac8a:	add    dh,BYTE PTR [rax+0x36]
   14004ac8d:	push   rsi
   14004ac8e:	add    DWORD PTR [rax],eax
   14004ac90:	test   al,0x10
   14004ac92:	add    al,0x0
   14004ac94:	(bad)  
   14004ac95:	(bad)  
   14004ac96:	(bad)  
   14004ac97:	call   FWORD PTR [rbx+0x56]
   14004ac9a:	add    eax,DWORD PTR [rax]
   14004ac9c:	add    al,0x56
   14004ac9e:	add    eax,DWORD PTR [rax]
   14004aca0:	(bad)  
   14004aca1:	(bad)  
   14004aca2:	(bad)  
   14004aca3:	push   QWORD PTR [rdi]
   14004aca5:	push   rsi
   14004aca6:	add    eax,DWORD PTR [rax]
   14004aca8:	add    BYTE PTR [rax],al
   14004acaa:	add    BYTE PTR [rax],al
   14004acac:	rex.RB push r14
   14004acae:	add    eax,DWORD PTR [rax]
   14004acb0:	(bad)  
   14004acb1:	(bad)  
   14004acb2:	(bad)  
   14004acb3:	call   QWORD PTR [rcx]
   14004acb5:	sbb    BYTE PTR [rsi],al
   14004acb7:	add    BYTE PTR [rax],bl
   14004acb9:	or     DWORD PTR fs:[rax],eax
   14004acbc:	adc    al,0x34
   14004acbe:	or     BYTE PTR [rax],al
   14004acc0:	or     BYTE PTR [rdx+0x4],dl
   14004acc3:	jo     0x14004acfb
   14004acc5:	push   rsi
   14004acc6:	add    DWORD PTR [rax],eax
   14004acc8:	clc    
   14004acc9:	adc    BYTE PTR [rax+rax*1],al
   14004accc:	(bad)  
   14004accd:	(bad)  
   14004acce:	(bad)  
   14004accf:	push   rcx
   14004acd1:	push   rbp
   14004acd2:	add    eax,DWORD PTR [rax]
   14004acd4:	mov    WORD PTR [rbp+0x3],ss
   14004acd7:	add    bh,bh
   14004acd9:	(bad)  
   14004acda:	(bad)  
   14004acdb:	inc    ebp
   14004acdd:	push   rbp
   14004acde:	add    eax,DWORD PTR [rax]
   14004ace0:	add    BYTE PTR [rax],al
   14004ace2:	add    BYTE PTR [rax],al
   14004ace4:	(bad)  
   14004ace5:	push   rbp
   14004ace6:	add    eax,DWORD PTR [rax]
   14004ace8:	(bad)  
   14004ace9:	(bad)  
   14004acea:	(bad)  
   14004aceb:	inc    DWORD PTR [rcx]
   14004aced:	sbb    eax,0x741d000c
   14004acf2:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d04bb5d
   14004acf9:	push   rsp
   14004acfa:	or     eax,0xc341d00
   14004acff:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f4c677
   14004ad05:	loopne 0x14004ad1c
   14004ad07:	rcr    BYTE PTR [rcx],0x12
   14004ad0a:	add    DWORD PTR [rax],eax
   14004ad0c:	or     DWORD PTR [rdx+0x0],esp
   14004ad0f:	add    BYTE PTR [rsi],dh
   14004ad11:	push   rsi
   14004ad12:	add    DWORD PTR [rax],eax
   14004ad14:	jo     0x14004ad27
   14004ad16:	add    al,0x0
   14004ad18:	(bad)  
   14004ad19:	(bad)  
   14004ad1a:	(bad)  
   14004ad1b:	inc    DWORD PTR [rax]
   14004ad1d:	add    BYTE PTR [rax],al
   14004ad1f:	add    bh,bh
   14004ad21:	(bad)  
   14004ad22:	(bad)  
   14004ad23:	inc    DWORD PTR [rax]
	...
   14004ad2d:	add    BYTE PTR [rax],al
   14004ad2f:	add    BYTE PTR [rcx],al
   14004ad31:	add    BYTE PTR [rax],al
   14004ad33:	add    BYTE PTR [rcx],al
   14004ad35:	add    BYTE PTR [rax],al
   14004ad37:	add    BYTE PTR [rbp*4+0x400004],bh
	...
   14004ad46:	add    BYTE PTR [rax],al
   14004ad48:	retf   0x364
   14004ad4b:	add    BYTE PTR [rax+0x0],cl
   14004ad4e:	add    BYTE PTR [rax],al
   14004ad50:	nop
   14004ad51:	add    eax,DWORD PTR fs:[rax]
   14004ad54:	(bad)  
   14004ad55:	(bad)  
   14004ad56:	(bad)  
   14004ad57:	jmp    QWORD PTR [rdx+0x364]
   14004ad5d:	add    BYTE PTR [rax],al
   14004ad5f:	add    ch,al
   14004ad61:	add    eax,DWORD PTR fs:[rax]
   14004ad64:	(bad)  
   14004ad65:	(bad)  
   14004ad66:	(bad)  
   14004ad67:	dec    edx
   14004ad69:	add    eax,DWORD PTR fs:[rax]
   14004ad6c:	add    BYTE PTR [rax],al
   14004ad6e:	add    BYTE PTR [rax],al
   14004ad70:	fldenv [rbx+rax*1+0x0]
   14004ad74:	add    DWORD PTR [rax],eax
   14004ad76:	add    BYTE PTR [rax],al
   14004ad78:	sbb    DWORD PTR [rsp+rax*1],ecx
   14004ad7b:	add    BYTE PTR [rdx+rsi*1],cl
   14004ad7e:	or     BYTE PTR [rax+0x7],dh
   14004ad81:	push   rax
   14004ad82:	(bad)  
   14004ad83:	xor    BYTE PTR [rsi],dh
   14004ad85:	push   rsi
   14004ad86:	add    DWORD PTR [rax],eax
   14004ad88:	jo     0x14004ad9b
   14004ad8a:	add    al,0x0
   14004ad8c:	sbb    DWORD PTR [rax],esp
   14004ad8e:	or     BYTE PTR [rax],al
   14004ad90:	and    BYTE PTR [rsi+rcx*1+0x0],ah
   14004ad94:	sbb    al,0x34
   14004ad96:	or     eax,0xc721000
   14004ad9b:	lock or ah,al
   14004ad9e:	or     BYTE PTR [rax+0x36],dh
   14004ada1:	push   rsi
   14004ada2:	add    DWORD PTR [rax],eax
   14004ada4:	cwde   
   14004ada5:	adc    DWORD PTR [rax+rax*1],eax
   14004ada8:	(bad)  
   14004ada9:	(bad)  
   14004adaa:	(bad)  
   14004adab:	inc    DWORD PTR [rax]
   14004adad:	add    BYTE PTR [rax],al
   14004adaf:	add    bh,bh
   14004adb1:	(bad)  
   14004adb2:	(bad)  
   14004adb3:	inc    DWORD PTR [rax]
	...
   14004adbd:	add    BYTE PTR [rax],al
   14004adbf:	add    BYTE PTR [rcx],al
   14004adc1:	add    BYTE PTR [rax],al
   14004adc3:	add    BYTE PTR [rcx],al
   14004adc5:	add    BYTE PTR [rax],al
   14004adc7:	add    ah,cl
   14004adc9:	lods   eax,DWORD PTR ds:[rsi]
   14004adca:	add    al,0x0
   14004adcc:	add    BYTE PTR [rax],al
	...
   14004add7:	add    BYTE PTR [rcx],ah
   14004add9:	je     0x14004adde
   14004addb:	add    BYTE PTR [rax],bh
   14004addd:	add    BYTE PTR [rax],al
   14004addf:	add    BYTE PTR [rax],ch
   14004ade1:	jae    0x14004ade6
   14004ade3:	add    bh,bh
   14004ade5:	(bad)  
   14004ade6:	(bad)  
   14004ade7:	dec    ecx
   14004ade9:	jae    0x14004adee
   14004adeb:	add    BYTE PTR [rax],al
   14004aded:	add    BYTE PTR [rax],al
   14004adef:	add    dl,dl
   14004adf1:	jae    0x14004adf6
   14004adf3:	add    bh,bh
   14004adf5:	(bad)  
   14004adf6:	(bad)  
   14004adf7:	jmp    QWORD PTR [rcx]
   14004adf9:	je     0x14004adfe
   14004adfb:	add    BYTE PTR [rax],al
   14004adfd:	add    BYTE PTR [rax],al
   14004adff:	add    BYTE PTR [rsi],ch
   14004ae01:	je     0x14004ae06
   14004ae03:	add    BYTE PTR [rcx],al
   14004ae05:	add    BYTE PTR [rax],al
   14004ae07:	add    BYTE PTR [rcx],bl
   14004ae09:	or     al,BYTE PTR [rdx]
   14004ae0b:	add    BYTE PTR [rdx],cl
   14004ae0d:	xor    al,BYTE PTR [rsi]
   14004ae0f:	push   rax
   14004ae10:	ss push rsi
   14004ae12:	add    DWORD PTR [rax],eax
   14004ae14:	cwde   
   14004ae15:	adc    DWORD PTR [rax+rax*1],eax
   14004ae18:	sbb    DWORD PTR [rcx],ebx
   14004ae1a:	add    al,0x0
   14004ae1c:	adc    BYTE PTR [rdx+0xc],dl
   14004ae1f:	jo     0x14004ae2c
   14004ae21:	(bad)  
   14004ae22:	or     dh,BYTE PTR [rax]
   14004ae24:	ss push rsi
   14004ae26:	add    DWORD PTR [rax],eax
   14004ae28:	rcl    BYTE PTR [rcx],0x4
   14004ae2b:	add    bh,bh
   14004ae2d:	(bad)  
   14004ae2e:	(bad)  
   14004ae2f:	inc    DWORD PTR [rax]
   14004ae31:	add    BYTE PTR [rax],al
   14004ae33:	add    bh,bh
   14004ae35:	(bad)  
   14004ae36:	(bad)  
   14004ae37:	inc    DWORD PTR [rax]
	...
   14004ae41:	add    BYTE PTR [rax],al
   14004ae43:	add    BYTE PTR [rcx],al
   14004ae45:	add    BYTE PTR [rax],al
   14004ae47:	add    BYTE PTR [rcx],al
   14004ae49:	add    BYTE PTR [rax],al
   14004ae4b:	add    BYTE PTR [rax-0x52],dl
   14004ae4e:	add    al,0x0
   14004ae50:	add    BYTE PTR [rax],al
	...
   14004ae5b:	add    BYTE PTR [rsi],ah
   14004ae5d:	(bad)  
   14004ae5e:	add    eax,DWORD PTR [rax]
   14004ae60:	cmp    BYTE PTR [rax],al
   14004ae62:	add    BYTE PTR [rax],al
   14004ae64:	sbb    al,0x81
   14004ae66:	add    eax,DWORD PTR [rax]
   14004ae68:	(bad)  
   14004ae69:	(bad)  
   14004ae6a:	(bad)  
   14004ae6b:	push   QWORD PTR [rcx+rax*4+0x3]
   14004ae6f:	add    BYTE PTR [rax],al
   14004ae71:	add    BYTE PTR [rax],al
   14004ae73:	add    BYTE PTR [rcx-0xfffc7f],bl
   14004ae79:	(bad)  
   14004ae7a:	(bad)  
   14004ae7b:	jmp    QWORD PTR [rsi]
   14004ae7d:	(bad)  
   14004ae7e:	add    eax,DWORD PTR [rax]
   14004ae80:	add    BYTE PTR [rax],al
   14004ae82:	add    BYTE PTR [rax],al
   14004ae84:	sbb    DWORD PTR [rdx],ecx
   14004ae86:	add    al,BYTE PTR [rax]
   14004ae88:	or     dh,BYTE PTR [rdx]
   14004ae8a:	(bad)  
   14004ae8b:	push   rax
   14004ae8c:	ss push rsi
   14004ae8e:	add    DWORD PTR [rax],eax
   14004ae90:	rcl    BYTE PTR [rcx],0x4
   14004ae93:	add    BYTE PTR [rcx],al
   14004ae95:	(bad)  
   14004ae97:	add    BYTE PTR [rdi],cl
   14004ae99:	xor    al,0x6
   14004ae9b:	add    BYTE PTR [rdi],cl
   14004ae9d:	xor    cl,BYTE PTR [rbx]
   14004ae9f:	jo     0x14004aeba
   14004aea1:	(bad)  
   14004aea2:	(bad)  
   14004aea3:	add    BYTE PTR [rdi],bl
   14004aea5:	or     eax,DWORD PTR fs:[rax]
   14004aea8:	sbb    esi,DWORD PTR [rdx+rcx*1]
   14004aeab:	add    BYTE PTR [rdi],cl
   14004aead:	push   rdx
   14004aeae:	or     esi,DWORD PTR [rax+0x36]
   14004aeb1:	push   rsi
   14004aeb2:	add    DWORD PTR [rax],eax
   14004aeb4:	call   0x13f04b2ca
   14004aeb9:	(bad)  
   14004aeba:	(bad)  
   14004aebb:	inc    DWORD PTR [rax]
   14004aebd:	add    BYTE PTR [rax],al
   14004aebf:	add    bh,bh
   14004aec1:	(bad)  
   14004aec2:	(bad)  
   14004aec3:	inc    DWORD PTR [rax]
	...
   14004aecd:	add    BYTE PTR [rax],al
   14004aecf:	add    BYTE PTR [rcx],al
   14004aed1:	add    BYTE PTR [rax],al
   14004aed3:	add    BYTE PTR [rcx],al
   14004aed5:	add    BYTE PTR [rax],al
   14004aed7:	add    ah,bl
   14004aed9:	scas   al,BYTE PTR es:[rdi]
   14004aeda:	add    al,0x0
   14004aedc:	add    BYTE PTR [rax],al
	...
   14004aee7:	add    BYTE PTR [rdi],al
   14004aee9:	outs   dx,DWORD PTR ds:[rsi]
   14004aeea:	add    eax,DWORD PTR [rax]
   14004aeec:	cmp    BYTE PTR [rax],al
   14004aeee:	add    BYTE PTR [rax],al
   14004aef0:	pop    rax
   14004aef1:	outs   dx,BYTE PTR ds:[rsi]
   14004aef2:	add    eax,DWORD PTR [rax]
   14004aef4:	(bad)  
   14004aef5:	(bad)  
   14004aef6:	(bad)  
   14004aef7:	jmp    FWORD PTR [rbx+0x36e]
   14004aefd:	add    BYTE PTR [rax],al
   14004aeff:	add    cl,cl
   14004af01:	outs   dx,BYTE PTR ds:[rsi]
   14004af02:	add    eax,DWORD PTR [rax]
   14004af04:	(bad)  
   14004af05:	(bad)  
   14004af06:	(bad)  
   14004af07:	inc    DWORD PTR [rdi]
   14004af09:	outs   dx,DWORD PTR ds:[rsi]
   14004af0a:	add    eax,DWORD PTR [rax]
   14004af0c:	add    BYTE PTR [rax],al
   14004af0e:	add    BYTE PTR [rax],al
   14004af10:	sbb    DWORD PTR [rdx],ecx
   14004af12:	add    al,BYTE PTR [rax]
   14004af14:	or     dh,BYTE PTR [rdx]
   14004af16:	(bad)  
   14004af17:	push   rax
   14004af18:	ss push rsi
   14004af1a:	add    DWORD PTR [rax],eax
   14004af1c:	call   0x15904b332
   14004af21:	sbb    al,0x6
   14004af23:	add    BYTE PTR [rsp+riz*2],bl
   14004af26:	(bad)  
   14004af27:	add    BYTE PTR [rax],bl
   14004af29:	xor    al,0xd
   14004af2b:	add    BYTE PTR [rdx+rdx*4],cl
   14004af2e:	or     BYTE PTR [rax+0x36],dh
   14004af31:	push   rsi
   14004af32:	add    DWORD PTR [rax],eax
   14004af34:	adc    BYTE PTR [rdx],dl
   14004af36:	add    al,0x0
   14004af38:	(bad)  
   14004af39:	(bad)  
   14004af3a:	(bad)  
   14004af3b:	inc    DWORD PTR [rax]
   14004af3d:	add    BYTE PTR [rax],al
   14004af3f:	add    bh,bh
   14004af41:	(bad)  
   14004af42:	(bad)  
   14004af43:	inc    DWORD PTR [rax]
	...
   14004af4d:	add    BYTE PTR [rax],al
   14004af4f:	add    BYTE PTR [rcx],al
   14004af51:	add    BYTE PTR [rax],al
   14004af53:	add    BYTE PTR [rcx],al
   14004af55:	add    BYTE PTR [rax],al
   14004af57:	add    BYTE PTR [rdi+rbp*4+0x4],bl
   14004af5b:	add    BYTE PTR [rax+0x0],al
	...
   14004af66:	add    BYTE PTR [rax],al
   14004af68:	rex.RX test BYTE PTR [rbx],r8b
   14004af6b:	add    BYTE PTR [rax+0x0],cl
   14004af6e:	add    BYTE PTR [rax],al
   14004af70:	(bad)
   14004af74:	(bad)  
   14004af75:	(bad)  
   14004af76:	(bad)  
   14004af77:	jmp    QWORD PTR [rbx]
   14004af79:	test   BYTE PTR [rbx],al
   14004af7b:	add    BYTE PTR [rax],al
   14004af7d:	add    BYTE PTR [rax],al
   14004af7f:	add    BYTE PTR [rdx],ch
   14004af81:	test   BYTE PTR [rbx],al
   14004af83:	add    bh,bh
   14004af85:	(bad)  
   14004af86:	(bad)  
   14004af87:	inc    DWORD PTR [rsi-0x7c]
   14004af8a:	add    eax,DWORD PTR [rax]
   14004af8c:	add    BYTE PTR [rax],al
   14004af8e:	add    BYTE PTR [rax],al
   14004af90:	push   rbx
   14004af91:	test   BYTE PTR [rbx],al
   14004af93:	add    BYTE PTR [rcx],al
   14004af95:	add    BYTE PTR [rax],al
   14004af97:	add    BYTE PTR [rcx],bl
   14004af99:	or     al,BYTE PTR [rdx]
   14004af9b:	add    BYTE PTR [rdx],cl
   14004af9d:	push   rdx
   14004af9e:	(bad)  
   14004af9f:	push   rax
   14004afa0:	ss push rsi
   14004afa2:	add    DWORD PTR [rax],eax
   14004afa4:	adc    BYTE PTR [rdx],dl
   14004afa6:	add    al,0x0
   14004afa8:	add    DWORD PTR [rcx],ebx
   14004afaa:	or     BYTE PTR [rax],al
   14004afac:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   14004afb0:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   14004afb4:	sbb    DWORD PTR [rsi+rax*1],esi
   14004afb7:	add    BYTE PTR [rcx],bl
   14004afb9:	xor    dl,BYTE PTR [rip+0x61f11e0]        # 0x14623c19f
   14004afbf:	add    BYTE PTR [rdi],bl
   14004afc1:	or     eax,DWORD PTR fs:[rax]
   14004afc4:	sbb    esi,DWORD PTR [rdx+rcx*1]
   14004afc7:	add    BYTE PTR [rdi],cl
   14004afc9:	push   rdx
   14004afca:	or     esi,DWORD PTR [rax+0x36]
   14004afcd:	push   rsi
   14004afce:	add    DWORD PTR [rax],eax
   14004afd0:	cmp    BYTE PTR [rdx],dl
   14004afd2:	add    al,0x0
   14004afd4:	(bad)  
   14004afd5:	(bad)  
   14004afd6:	(bad)  
   14004afd7:	call   QWORD PTR [rdx+0x2800036f]
   14004afdd:	outs   dx,DWORD PTR ds:[rsi]
   14004afde:	add    eax,DWORD PTR [rax]
   14004afe0:	(bad)  
   14004afe1:	(bad)  
   14004afe2:	(bad)  
   14004afe3:	call   FWORD PTR [rdi+rbp*2+0x3]
   14004afe7:	add    BYTE PTR [rax],al
   14004afe9:	add    BYTE PTR [rax],al
   14004afeb:	add    BYTE PTR [rdx+0x6f],ch
   14004afee:	add    eax,DWORD PTR [rax]
   14004aff0:	(bad)  
   14004aff1:	(bad)  
   14004aff2:	(bad)  
   14004aff3:	inc    DWORD PTR [rcx]
   14004aff5:	(bad)  
   14004aff6:	add    al,BYTE PTR [rax]
   14004aff8:	(bad)  
   14004aff9:	xor    al,BYTE PTR [rdx]
   14004affb:	push   rax
   14004affc:	adc    DWORD PTR [rdi],ebx
   14004affe:	(bad)  
   14004afff:	add    BYTE PTR [rdi],bl
   14004b001:	or     eax,DWORD PTR fs:[rax]
   14004b004:	sbb    esi,DWORD PTR [rdx+rcx*1]
   14004b007:	add    BYTE PTR [rdi],cl
   14004b009:	push   rdx
   14004b00a:	or     esi,DWORD PTR [rax+0x36]
   14004b00d:	push   rsi
   14004b00e:	add    DWORD PTR [rax],eax
   14004b010:	(bad)  
   14004b011:	adc    al,BYTE PTR [rax+rax*1]
   14004b014:	(bad)  
   14004b015:	(bad)  
   14004b016:	(bad)  
   14004b017:	push   QWORD PTR [rcx]
   14004b019:	jo     0x14004b01e
   14004b01b:	add    bh,bh
   14004b01d:	(bad)  
   14004b01e:	(bad)  
   14004b01f:	call   FWORD PTR [rbx+0x70]
   14004b022:	add    eax,DWORD PTR [rax]
   14004b024:	(bad)  
   14004b025:	outs   dx,DWORD PTR ds:[rsi]
   14004b026:	add    eax,DWORD PTR [rax]
   14004b028:	(bad)  
   14004b029:	(bad)  
   14004b02a:	(bad)  
   14004b02b:	(bad)  
   14004b02c:	clc    
   14004b02d:	outs   dx,DWORD PTR ds:[rsi]
   14004b02e:	add    eax,DWORD PTR [rax]
   14004b030:	add    BYTE PTR [rax],al
   14004b032:	add    BYTE PTR [rax],al
   14004b034:	(bad)  
   14004b035:	jo     0x14004b03a
   14004b037:	add    bh,bh
   14004b039:	(bad)  
   14004b03a:	(bad)  
   14004b03b:	call   QWORD PTR [rbx]
   14004b03d:	jo     0x14004b042
   14004b03f:	add    BYTE PTR [rcx],al
   14004b041:	add    BYTE PTR [rax],al
   14004b043:	add    BYTE PTR [rcx],ah
   14004b045:	jo     0x14004b04a
   14004b047:	add    bh,bh
   14004b049:	(bad)  
   14004b04a:	(bad)  
   14004b04b:	inc    DWORD PTR [rcx]
   14004b04d:	(bad)  
   14004b04e:	add    al,BYTE PTR [rax]
   14004b050:	(bad)  
   14004b051:	xor    al,BYTE PTR [rdx]
   14004b053:	push   rax
   14004b054:	add    DWORD PTR [rsi],eax
   14004b056:	add    al,BYTE PTR [rax]
   14004b058:	(bad)  
   14004b059:	xor    al,BYTE PTR [rdx]
   14004b05b:	push   rax
   14004b05c:	adc    DWORD PTR [rax],esp
   14004b05e:	or     al,BYTE PTR [rax]
   14004b060:	and    BYTE PTR [rsi+rcx*1],dh
   14004b063:	add    BYTE PTR [rbx],dl
   14004b065:	push   rdx
   14004b066:	or     al,0xf0
   14004b068:	or     ah,al
   14004b06a:	or     al,dl
   14004b06c:	(bad)  
   14004b06d:	rol    BYTE PTR [rax+rsi*2],0x3
   14004b071:	(bad)  
   14004b072:	add    dl,BYTE PTR [rax+0x36]
   14004b075:	push   rsi
   14004b076:	add    DWORD PTR [rax],eax
   14004b078:	mov    BYTE PTR [rdx],dl
   14004b07a:	add    al,0x0
   14004b07c:	(bad)  
   14004b07d:	(bad)  
   14004b07e:	(bad)  
   14004b07f:	push   rsi
   14004b081:	jns    0x14004b086
   14004b083:	add    bh,bh
   14004b085:	(bad)  
   14004b086:	(bad)  
   14004b087:	inc    DWORD PTR [rdx]
   14004b089:	jp     0x14004b08e
   14004b08b:	add    bh,bh
   14004b08d:	(bad)  
   14004b08e:	(bad)  
   14004b08f:	dec    DWORD PTR [rsi]
   14004b091:	jp     0x14004b096
   14004b093:	add    BYTE PTR [rax+0x77],al
   14004b096:	add    eax,DWORD PTR [rax]
   14004b098:	(bad)  
   14004b099:	(bad)  
   14004b09a:	(bad)  
   14004b09b:	(bad)  
   14004b09c:	in     eax,dx
   14004b09d:	ja     0x14004b0a2
   14004b09f:	add    BYTE PTR [rax],al
   14004b0a1:	add    BYTE PTR [rax],al
   14004b0a3:	add    BYTE PTR [rsi-0xfffc88],dh
   14004b0a9:	(bad)  
   14004b0aa:	(bad)  
   14004b0ab:	dec    ecx
   14004b0ad:	js     0x14004b0b2
   14004b0af:	add    BYTE PTR [rax],al
   14004b0b1:	add    BYTE PTR [rax],al
   14004b0b3:	add    dh,bl
   14004b0b5:	js     0x14004b0ba
   14004b0b7:	add    bh,bh
   14004b0b9:	(bad)  
   14004b0ba:	(bad)  
   14004b0bb:	call   FWORD PTR [rdx]
   14004b0bd:	jns    0x14004b0c2
   14004b0bf:	add    BYTE PTR [rcx],al
   14004b0c1:	add    BYTE PTR [rax],al
   14004b0c3:	add    BYTE PTR [rsi+0x79],al
   14004b0c6:	add    eax,DWORD PTR [rax]
   14004b0c8:	(bad)  
   14004b0c9:	(bad)  
   14004b0ca:	(bad)  
   14004b0cb:	call   QWORD PTR [rcx+rdi*2+0x20003]
   14004b0d2:	add    BYTE PTR [rax],al
   14004b0d4:	ret    
   14004b0d5:	jns    0x14004b0da
   14004b0d7:	add    bh,bh
   14004b0d9:	(bad)  
   14004b0da:	(bad)  
   14004b0db:	call   QWORD PTR [rcx]
   14004b0dd:	and    cl,BYTE PTR [rdx]
   14004b0df:	add    BYTE PTR [rdx],ah
   14004b0e1:	adc    al,BYTE PTR fs:[rax]
   14004b0e4:	(bad)  
   14004b0e5:	xor    al,0x11
   14004b0e7:	add    BYTE PTR [rdx],dl
   14004b0e9:	xchg   edx,eax
   14004b0ea:	or     esi,eax
   14004b0ec:	or     eax,esp
   14004b0ee:	(bad)  
   14004b0ef:	rol    BYTE PTR [rip+0x36500470],0x56        # 0x17654b566
   14004b0f6:	add    DWORD PTR [rax],eax
   14004b0f8:	mov    al,0x12
   14004b0fa:	add    al,0x0
   14004b0fc:	(bad)  
   14004b0fd:	(bad)  
   14004b0fe:	(bad)  
   14004b0ff:	(bad)  
   14004b100:	cmp    BYTE PTR [rbp+0x3],bh
   14004b103:	add    BYTE PTR [rax],al
   14004b105:	add    BYTE PTR [rax],al
   14004b107:	add    BYTE PTR [rbp+rdi*2+0x3],al
   14004b10b:	add    BYTE PTR [rcx],al
   14004b10d:	add    BYTE PTR [rax],al
   14004b10f:	add    BYTE PTR [rax+0x7d],dl
   14004b112:	add    eax,DWORD PTR [rax]
   14004b114:	add    al,BYTE PTR [rax]
   14004b116:	add    BYTE PTR [rax],al
   14004b118:	pop    rsp
   14004b119:	jge    0x14004b11e
   14004b11b:	add    BYTE PTR [rax+0x7a],bh
   14004b11e:	add    eax,DWORD PTR [rax]
   14004b120:	(bad)  
   14004b121:	(bad)  
   14004b122:	(bad)  
   14004b123:	jmp    QWORD PTR [rsi+0x37a]
   14004b129:	add    BYTE PTR [rax],al
   14004b12b:	add    BYTE PTR [rdx+0x100037a],ch
   14004b131:	add    BYTE PTR [rax],al
   14004b133:	add    BYTE PTR [rsi+0x200037a],ch
   14004b139:	add    BYTE PTR [rax],al
   14004b13b:	add    BYTE PTR [rdx+0x300037a],dh
   14004b141:	add    BYTE PTR [rax],al
   14004b143:	add    dl,dh
   14004b145:	jl     0x14004b14a
   14004b147:	add    BYTE PTR [rdx],al
   14004b149:	add    BYTE PTR [rax],al
   14004b14b:	add    ch,bh
   14004b14d:	jl     0x14004b152
   14004b14f:	add    BYTE PTR [rcx],al
   14004b151:	add    BYTE PTR [rax],al
   14004b153:	add    BYTE PTR [rax],cl
   14004b155:	jge    0x14004b15a
   14004b157:	add    BYTE PTR [rax],al
   14004b159:	add    BYTE PTR [rax],al
   14004b15b:	add    BYTE PTR [rbx],dl
   14004b15d:	jge    0x14004b162
   14004b15f:	add    bh,bh
   14004b161:	(bad)  
   14004b162:	(bad)  
   14004b163:	call   QWORD PTR [rcx]
   14004b165:	sbb    al,0x8
   14004b167:	add    BYTE PTR [rsp+rsi*1],bl
   14004b16a:	or     al,0x0
   14004b16c:	rsqrtps xmm1,XMMWORD PTR [rax]
   14004b16f:	lock (bad) 
   14004b171:	loopne 0x14004b177
   14004b173:	jo     0x14004b178
   14004b175:	(bad)  
   14004b176:	add    dl,BYTE PTR [rax+0x36]
   14004b179:	push   rsi
   14004b17a:	add    DWORD PTR [rax],eax
   14004b17c:	fcom   DWORD PTR [rdx]
   14004b17e:	add    al,0x0
   14004b180:	(bad)  
   14004b181:	(bad)  
   14004b182:	(bad)  
   14004b183:	inc    DWORD PTR [rdi]
   14004b185:	add    DWORD PTR [rbx],0x37e8c00
   14004b18b:	add    bh,bh
   14004b18d:	(bad)  
   14004b18e:	(bad)  
   14004b18f:	(bad)  
   14004b190:	mov    eax,0x37e
   14004b195:	add    BYTE PTR [rax],al
   14004b197:	add    ah,ch
   14004b199:	add    BYTE PTR [rbx],0x0
   14004b19c:	(bad)  
   14004b19d:	(bad)  
   14004b19e:	(bad)  
   14004b19f:	call   QWORD PTR [rcx]
   14004b1a1:	(bad)  
   14004b1a2:	or     BYTE PTR [rax],al
   14004b1a4:	(bad)  
   14004b1a5:	or     eax,DWORD PTR fs:[rax]
   14004b1a8:	sbb    DWORD PTR [rdx+rcx*1],esi
   14004b1ab:	add    BYTE PTR [rdx+rdx*2],cl
   14004b1ae:	add    eax,0x27003e0
   14004b1b3:	push   rax
   14004b1b4:	ss push rsi
   14004b1b6:	add    DWORD PTR [rax],eax
   14004b1b8:	add    BYTE PTR [rbx],dl
   14004b1ba:	add    al,0x0
   14004b1bc:	(bad)  
   14004b1bd:	(bad)  
   14004b1be:	(bad)  
   14004b1bf:	jmp    QWORD PTR [rdx]
   14004b1c1:	ja     0x14004b1c6
   14004b1c3:	add    BYTE PTR [rax],al
   14004b1c5:	add    BYTE PTR [rax],al
   14004b1c7:	add    BYTE PTR [rsi],ch
   14004b1c9:	ja     0x14004b1ce
   14004b1cb:	add    BYTE PTR [rbp+rsi*2-0xfffd],ah
   14004b1d2:	(bad)  
   14004b1d3:	call   rdx
   14004b1d5:	jne    0x14004b1da
   14004b1d7:	add    BYTE PTR [rax],al
   14004b1d9:	add    BYTE PTR [rax],al
   14004b1db:	add    al,bl
   14004b1dd:	jne    0x14004b1e2
   14004b1df:	add    BYTE PTR [rcx],al
   14004b1e1:	add    BYTE PTR [rax],al
   14004b1e3:	add    ah,bh
   14004b1e5:	jbe    0x14004b1ea
   14004b1e7:	add    BYTE PTR [rax],al
   14004b1e9:	add    BYTE PTR [rax],al
   14004b1eb:	add    BYTE PTR [rip+0xffffffffff000377],al        # 0x13f04b568
   14004b1f1:	(bad)  
   14004b1f2:	(bad)  
   14004b1f3:	inc    DWORD PTR [rcx]
   14004b1f5:	adc    eax,0x64150008
   14004b1fa:	or     eax,DWORD PTR [rax]
   14004b1fc:	adc    eax,0x15000a34
   14004b201:	push   rdx
   14004b202:	(bad)  
   14004b203:	loopne 0x14004b211
   14004b205:	jo     0x14004b212
   14004b207:	push   rax
   14004b208:	adc    DWORD PTR [rax+rcx*1],ebx
   14004b20b:	add    BYTE PTR [rsp+riz*2],bl
   14004b20e:	or     eax,DWORD PTR [rax]
   14004b210:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14004b214:	adc    al,0x34
   14004b216:	or     BYTE PTR [rax],al
   14004b218:	or     BYTE PTR [rdx+0x4],dl
   14004b21b:	jo     0x14004b253
   14004b21d:	push   rsi
   14004b21e:	add    DWORD PTR [rax],eax
   14004b220:	sub    BYTE PTR [rbx],dl
   14004b222:	add    al,0x0
   14004b224:	(bad)  
   14004b225:	(bad)  
   14004b226:	(bad)  
   14004b227:	call   QWORD PTR [rbx+rsi*2]
   14004b22a:	add    eax,DWORD PTR [rax]
   14004b22c:	xor    al,0x72
   14004b22e:	add    eax,DWORD PTR [rax]
   14004b230:	(bad)  
   14004b231:	(bad)  
   14004b232:	(bad)  
   14004b233:	call   FWORD PTR [rdi+0x72]
   14004b236:	add    eax,DWORD PTR [rax]
   14004b238:	add    BYTE PTR [rax],al
   14004b23a:	add    BYTE PTR [rax],al
   14004b23c:	repz jb 0x14004b242
   14004b23f:	add    bh,bh
   14004b241:	(bad)  
   14004b242:	(bad)  
   14004b243:	call   QWORD PTR [rcx]
   14004b245:	sbb    DWORD PTR [rsi],eax
   14004b247:	add    BYTE PTR [rcx],bl
   14004b249:	or     al,BYTE PTR fs:[rax]
   14004b24c:	adc    al,0x34
   14004b24e:	or     BYTE PTR [rax],al
   14004b250:	(bad)  
   14004b251:	push   rdx
   14004b252:	add    dh,BYTE PTR [rax+0x36]
   14004b255:	push   rsi
   14004b256:	add    DWORD PTR [rax],eax
   14004b258:	push   rax
   14004b259:	adc    eax,DWORD PTR [rax+rax*1]
   14004b25c:	(bad)  
   14004b25d:	(bad)  
   14004b25e:	(bad)  
   14004b25f:	jmp    FWORD PTR [rdx+0x8000366]
   14004b265:	add    ax,WORD PTR [rax]
   14004b268:	(bad)  
   14004b269:	(bad)  
   14004b26a:	(bad)  
   14004b26b:	(bad)  
   14004b26c:	cmp    BYTE PTR [rsi+0x3],ah
   14004b26f:	add    BYTE PTR [rax],al
   14004b271:	add    BYTE PTR [rax],al
   14004b273:	add    BYTE PTR [rsi+riz*2+0x3],cl
   14004b277:	add    bh,bh
   14004b279:	(bad)  
   14004b27a:	(bad)  
   14004b27b:	inc    DWORD PTR [rcx]
   14004b27d:	sbb    BYTE PTR [rdx],cl
   14004b27f:	add    BYTE PTR [rax],bl
   14004b281:	fs or  al,0x0
   14004b284:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   14004b288:	sbb    BYTE PTR [rdx+rcx*1],dh
   14004b28b:	add    BYTE PTR [rax],bl
   14004b28d:	push   rdx
   14004b28e:	adc    al,0xf0
   14004b290:	adc    ah,al
   14004b292:	adc    BYTE PTR [rax+0x19],dh
   14004b295:	or     DWORD PTR es:[rax],eax
   14004b298:	sbb    BYTE PTR [rsp],dh
   14004b29b:	add    BYTE PTR [rax],bl
   14004b29d:	add    DWORD PTR [rax+rax*1],ebx
   14004b2a0:	or     al,0xf0
   14004b2a2:	or     ah,al
   14004b2a4:	or     BYTE PTR [rax+0x7],dh
   14004b2a7:	(bad)  
   14004b2a8:	(bad)  
   14004b2a9:	push   rax
   14004b2aa:	add    BYTE PTR [rax],al
   14004b2ac:	mov    eax,0xd000014a
   14004b2b1:	add    BYTE PTR [rax],al
   14004b2b3:	add    BYTE PTR [rcx],dl
   14004b2b5:	and    al,0xa
   14004b2b7:	add    BYTE PTR [rsp+riz*2],ah
   14004b2ba:	verr   WORD PTR [rax]
   14004b2bd:	push   rsp
   14004b2be:	(bad)  
   14004b2bf:	add    BYTE PTR [rsp+rsi*1],bl
   14004b2c2:	or     eax,0xc721000
   14004b2c7:	lock or ah,al
   14004b2ca:	or     BYTE PTR [rax+0x36],dh
   14004b2cd:	push   rsi
   14004b2ce:	add    DWORD PTR [rax],eax
   14004b2d0:	js     0x14004b2e5
   14004b2d2:	add    al,0x0
   14004b2d4:	(bad)  
   14004b2d5:	(bad)  
   14004b2d6:	(bad)  
   14004b2d7:	push   QWORD PTR [rdx+0x35c]
   14004b2dd:	add    BYTE PTR [rax],al
   14004b2df:	add    dl,al
   14004b2e1:	pop    rsp
   14004b2e2:	add    eax,DWORD PTR [rax]
   14004b2e4:	add    DWORD PTR [rax],eax
   14004b2e6:	add    BYTE PTR [rax],al
   14004b2e8:	rcr    BYTE PTR [rbx+rax*1+0x0],cl
   14004b2ec:	add    al,BYTE PTR [rax]
   14004b2ee:	add    BYTE PTR [rax],al
   14004b2f0:	loop   0x14004b34e
   14004b2f2:	add    eax,DWORD PTR [rax]
   14004b2f4:	add    eax,DWORD PTR [rax]
   14004b2f6:	add    BYTE PTR [rax],al
   14004b2f8:	repnz pop rsp
   14004b2fa:	add    eax,DWORD PTR [rax]
   14004b2fc:	add    al,0x0
   14004b2fe:	add    BYTE PTR [rax],al
   14004b300:	add    bl,BYTE PTR [rbp+0x3]
   14004b303:	add    BYTE PTR [rip+0x12000000],al        # 0x15204b309
   14004b309:	pop    rbp
   14004b30a:	add    eax,DWORD PTR [rax]
   14004b30c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004b30d:	pop    rbx
   14004b30e:	add    eax,DWORD PTR [rax]
   14004b310:	(bad)  
   14004b311:	(bad)  
   14004b312:	(bad)  
   14004b313:	(bad)  
   14004b314:	fistp  DWORD PTR [rbx+0x3]
   14004b317:	add    BYTE PTR [rax],al
   14004b319:	add    BYTE PTR [rax],al
   14004b31b:	add    bh,bl
   14004b31d:	pop    rbx
   14004b31e:	add    eax,DWORD PTR [rax]
   14004b320:	add    DWORD PTR [rax],eax
   14004b322:	add    BYTE PTR [rax],al
   14004b324:	jrcxz  0x14004b381
   14004b326:	add    eax,DWORD PTR [rax]
   14004b328:	add    al,BYTE PTR [rax]
   14004b32a:	add    BYTE PTR [rax],al
   14004b32c:	out    0x5b,eax
   14004b32e:	add    eax,DWORD PTR [rax]
   14004b330:	add    eax,DWORD PTR [rax]
   14004b332:	add    BYTE PTR [rax],al
   14004b334:	(bad)  
   14004b335:	pop    rsp
   14004b336:	add    eax,DWORD PTR [rax]
   14004b338:	add    al,0x0
   14004b33a:	add    BYTE PTR [rax],al
   14004b33c:	sbb    eax,0x500035c
   14004b341:	add    BYTE PTR [rax],al
   14004b343:	add    BYTE PTR [rdx],dh
   14004b345:	pop    rsp
   14004b346:	add    eax,DWORD PTR [rax]
   14004b348:	(bad)  
   14004b349:	add    BYTE PTR [rax],al
   14004b34b:	add    BYTE PTR [rsi-0xfffca4],dl
   14004b351:	(bad)  
   14004b352:	(bad)  
   14004b353:	call   QWORD PTR [rcx]
   14004b355:	sbb    eax,0x741d0008
   14004b35a:	or     eax,DWORD PTR [rax]
   14004b35c:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   14004b360:	adc    eax,0x9000934
   14004b365:	push   rdx
   14004b366:	add    eax,0x15636e0
   14004b36b:	add    BYTE PTR [rax-0xfffbed],ah
   14004b371:	(bad)  
   14004b372:	(bad)  
   14004b373:	call   QWORD PTR [rax]
   14004b375:	push   0x3
   14004b377:	add    BYTE PTR [rax+0x69],bh
   14004b37a:	add    eax,DWORD PTR [rax]
   14004b37c:	(bad)  
   14004b37d:	(bad)  
   14004b37e:	(bad)  
   14004b37f:	inc    esi
   14004b381:	imul   eax,DWORD PTR [rbx],0x0
   14004b387:	add    dl,dl
   14004b389:	imul   eax,DWORD PTR [rbx],0xffffff00
   14004b38f:	inc    DWORD PTR [rcx]
   14004b391:	adc    cl,BYTE PTR [rax]
   14004b393:	add    BYTE PTR [rdx],dl
   14004b395:	push   rsp
   14004b396:	or     al,BYTE PTR [rax]
   14004b398:	adc    dh,BYTE PTR [rcx+rcx*1]
   14004b39b:	add    BYTE PTR [rdx],dl
   14004b39d:	xor    cl,BYTE PTR [rsi]
   14004b39f:	loopne 0x14004b3ad
   14004b3a1:	jo     0x14004b3ae
   14004b3a3:	(bad)  
   14004b3a4:	add    DWORD PTR [rax],ebx
   14004b3a6:	or     BYTE PTR [rax],al
   14004b3a8:	sbb    BYTE PTR [rbp+rcx*1+0x0],ah
   14004b3ac:	sbb    BYTE PTR [rsp+rcx*1+0x0],dl
   14004b3b0:	sbb    BYTE PTR [rdx+rcx*1],dh
   14004b3b3:	add    BYTE PTR [rax],bl
   14004b3b5:	jb     0x14004b3cb
   14004b3b7:	jo     0x14004b3ba
   14004b3b9:	sbb    BYTE PTR [rdx],cl
   14004b3bb:	add    BYTE PTR [rax],bl
   14004b3bd:	or     al,BYTE PTR fs:[rax]
   14004b3c0:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14004b3c4:	sbb    BYTE PTR [rax+rcx*1],dh
   14004b3c7:	add    BYTE PTR [rax],bl
   14004b3c9:	xor    dl,BYTE PTR [rax+rsi*8]
   14004b3cc:	adc    ah,al
   14004b3ce:	adc    BYTE PTR [rax+0x1],dh
   14004b3d1:	adc    eax,DWORD PTR [rcx]
   14004b3d3:	add    BYTE PTR [rbx],dl
   14004b3d5:	rex.X add BYTE PTR [rax],al
   14004b3d8:	sbb    DWORD PTR [rax+0xd],eax
   14004b3db:	add    BYTE PTR [rdi],ch
   14004b3dd:	je     0x14004b3ea
   14004b3df:	add    DWORD PTR [rbx],ebp
   14004b3e1:	or     al,BYTE PTR fs:[rcx]
   14004b3e4:	(bad)  
   14004b3e5:	xor    al,0x9
   14004b3e7:	add    DWORD PTR [rdx],ebx
   14004b3e9:	add    DWORD PTR [rdx],eax
   14004b3eb:	add    DWORD PTR [rax+rsi*8],ecx
   14004b3ee:	or     ah,al
   14004b3f0:	or     al,dl
   14004b3f2:	(bad)  
   14004b3f3:	rol    BYTE PTR [rax+rdx*2],0x0
   14004b3f7:	add    BYTE PTR [rsi+rdx*2+0x1],al
   14004b3fb:	add    al,dh
   14004b3fd:	adc    eax,DWORD PTR [rax+rax*1]
   14004b400:	add    cl,BYTE PTR [rax]
   14004b402:	add    BYTE PTR [rax],al
   14004b404:	(bad)  
   14004b405:	(bad)  
   14004b406:	(bad)  
   14004b407:	call   FWORD PTR [rsi]
   14004b409:	xchg   ebx,eax
   14004b40a:	add    eax,DWORD PTR [rax]
   14004b40c:	add    al,0x91
   14004b40e:	add    eax,DWORD PTR [rax]
   14004b410:	(bad)  
   14004b411:	(bad)  
   14004b412:	(bad)  
   14004b413:	jmp    FWORD PTR [rax+0x391]
   14004b419:	add    BYTE PTR [rax],al
   14004b41b:	add    dl,ah
   14004b41d:	xchg   edx,eax
   14004b41e:	add    eax,DWORD PTR [rax]
   14004b420:	(bad)  
   14004b421:	(bad)  
   14004b422:	(bad)  
   14004b423:	call   FWORD PTR [rcx]
   14004b425:	sbb    eax,DWORD PTR [rbx]
   14004b427:	add    BYTE PTR [rcx],cl
   14004b429:	add    DWORD PTR [rax],eax
   14004b42b:	add    DWORD PTR [rdx],eax
   14004b42d:	xor    BYTE PTR [rax],al
   14004b42f:	add    BYTE PTR [rax-0xffffeb6],bh
   14004b435:	(bad)  
   14004b436:	add    BYTE PTR [rax],al
   14004b438:	adc    DWORD PTR [rdx],esp
   14004b43a:	or     BYTE PTR [rax],al
   14004b43c:	and    dh,BYTE PTR [rbp+rdx*1+0x0]
   14004b440:	(bad)  
   14004b441:	fs adc al,0x0
   14004b444:	sbb    dh,BYTE PTR [rbx+rdx*1]
   14004b447:	add    BYTE PTR [rsi],cl
   14004b449:	repnz add al,0x50
   14004b44c:	ss push rsi
   14004b44e:	add    DWORD PTR [rax],eax
   14004b450:	sbb    BYTE PTR [rsp+rax*1],dl
   14004b453:	add    bh,bh
   14004b455:	(bad)  
   14004b456:	(bad)  
   14004b457:	inc    edi
   14004b459:	xchg   esp,eax
   14004b45a:	add    eax,DWORD PTR [rax]
   14004b45c:	add    BYTE PTR [rax],al
   14004b45e:	add    BYTE PTR [rax],al
   14004b460:	rcl    DWORD PTR [rbx+rax*1+0x100],cl
   14004b467:	add    bh,bl
   14004b469:	xchg   esp,eax
   14004b46a:	add    eax,DWORD PTR [rax]
   14004b46c:	nop
   14004b46d:	xchg   ebx,eax
   14004b46e:	add    eax,DWORD PTR [rax]
   14004b470:	(bad)  
   14004b471:	(bad)  
   14004b472:	(bad)  
   14004b473:	(bad)  
   14004b474:	mov    edx,0x393
   14004b479:	add    BYTE PTR [rax],al
   14004b47b:	add    al,ah
   14004b47d:	xchg   ebx,eax
   14004b47e:	add    eax,DWORD PTR [rax]
   14004b480:	add    DWORD PTR [rax],eax
   14004b482:	add    BYTE PTR [rax],al
   14004b484:	repz xchg ebx,eax
   14004b486:	add    eax,DWORD PTR [rax]
   14004b488:	add    al,BYTE PTR [rax]
   14004b48a:	add    BYTE PTR [rax],al
   14004b48c:	xor    dl,BYTE PTR [rbx+rax*1+0x100]
   14004b493:	add    BYTE PTR [rdx+0x394],al
   14004b499:	add    BYTE PTR [rax],al
   14004b49b:	add    BYTE PTR [rbp-0xfffc6c],cl
   14004b4a1:	(bad)  
   14004b4a2:	(bad)  
   14004b4a3:	call   QWORD PTR [rcx]
   14004b4a5:	sbb    al,0x6
   14004b4a7:	add    BYTE PTR [rsp+riz*2],bl
   14004b4aa:	or     al,BYTE PTR [rax]
   14004b4ac:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004b4af:	add    BYTE PTR [rdx+rdx*2],cl
   14004b4b2:	or     BYTE PTR [rax+0x36],dh
   14004b4b5:	push   rsi
   14004b4b6:	add    DWORD PTR [rax],eax
   14004b4b8:	adc    al,0x4
   14004b4bb:	add    bh,bh
   14004b4bd:	(bad)  
   14004b4be:	(bad)  
   14004b4bf:	call   FWORD PTR [rcx+0x8000397]
   14004b4c5:	xchg   edi,eax
   14004b4c6:	add    eax,DWORD PTR [rax]
   14004b4c8:	(bad)  
   14004b4c9:	(bad)  
   14004b4ca:	(bad)  
   14004b4cb:	jmp    FWORD PTR [rdi+rdx*4]
   14004b4ce:	add    eax,DWORD PTR [rax]
   14004b4d0:	add    BYTE PTR [rax],al
   14004b4d2:	add    BYTE PTR [rax],al
   14004b4d4:	xchg   BYTE PTR [rdi-0xfffd],dl
   14004b4da:	(bad)  
   14004b4db:	call   QWORD PTR [rcx]
   14004b4dd:	sbb    BYTE PTR [rsi],al
   14004b4df:	add    BYTE PTR [rax],bl
   14004b4e1:	or     eax,DWORD PTR fs:[rax]
   14004b4e4:	adc    al,0x34
   14004b4e6:	or     al,BYTE PTR [rax]
   14004b4e8:	or     BYTE PTR [rdx+0x4],dh
   14004b4eb:	jo     0x14004b523
   14004b4ed:	push   rsi
   14004b4ee:	add    DWORD PTR [rax],eax
   14004b4f0:	push   0xffffffffff000414
   14004b4f5:	(bad)  
   14004b4f6:	(bad)  
   14004b4f7:	dec    DWORD PTR [rbx-0x68]
   14004b4fa:	add    eax,DWORD PTR [rax]
   14004b4fc:	mov    al,0x97
   14004b4fe:	add    eax,DWORD PTR [rax]
   14004b500:	(bad)  
   14004b501:	(bad)  
   14004b502:	(bad)  
   14004b503:	call   rbx
   14004b505:	xchg   edi,eax
   14004b506:	add    eax,DWORD PTR [rax]
   14004b508:	add    BYTE PTR [rax],al
   14004b50a:	add    BYTE PTR [rax],al
   14004b50c:	sbb    bl,BYTE PTR [rax-0xfffd]
   14004b512:	(bad)  
   14004b513:	inc    DWORD PTR [rcx]
   14004b515:	(bad)  
   14004b516:	or     BYTE PTR [rax],al
   14004b518:	(bad)  
   14004b519:	push   rsp
   14004b51a:	or     eax,0xa341700
   14004b51f:	add    BYTE PTR [rdi],dl
   14004b521:	push   rdx
   14004b522:	adc    esp,eax
   14004b524:	adc    DWORD PTR [rax+0x10],esi
   14004b527:	(bad)  
   14004b528:	add    DWORD PTR [rdi],edx
   14004b52a:	or     BYTE PTR [rax],al
   14004b52c:	(bad)  
   14004b52d:	push   rsp
   14004b52e:	or     eax,0xc341700
   14004b533:	add    BYTE PTR [rdi],dl
   14004b535:	push   rdx
   14004b536:	adc    esp,eax
   14004b538:	adc    DWORD PTR [rax+0x10],esi
   14004b53b:	(bad)  
   14004b53c:	add    DWORD PTR [rax],edx
   14004b53e:	or     BYTE PTR [rax],al
   14004b540:	adc    BYTE PTR [rcx*1+0xc521000],dh
   14004b547:	lock or ah,al
   14004b54a:	or     BYTE PTR [rax+0x7],dh
   14004b54d:	(bad)  
   14004b54e:	(bad)  
   14004b54f:	push   rax
   14004b550:	add    DWORD PTR [rdx],edx
   14004b552:	or     BYTE PTR [rax],al
   14004b554:	adc    dl,BYTE PTR [rbp+rcx*1+0x0]
   14004b558:	adc    dh,BYTE PTR [rbx+rcx*1]
   14004b55b:	add    BYTE PTR [rdx],dl
   14004b55d:	push   rdx
   14004b55e:	(bad)  
   14004b55f:	loopne 0x14004b56d
   14004b561:	jo     0x14004b56e
   14004b563:	(bad)  
   14004b564:	add    DWORD PTR [rdi],ecx
   14004b566:	(bad)  
   14004b567:	add    BYTE PTR [rdi],cl
   14004b569:	or     eax,DWORD PTR fs:[rax]
   14004b56c:	sysenter 
   14004b56e:	or     DWORD PTR [rax],eax
   14004b570:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14004b573:	jo     0x14004b576
   14004b575:	adc    cl,BYTE PTR [rax]
   14004b577:	add    BYTE PTR [rdx],dl
   14004b579:	push   rsp
   14004b57a:	or     eax,DWORD PTR [rax]
   14004b57c:	adc    dh,BYTE PTR [rcx+rcx*1]
   14004b57f:	add    BYTE PTR [rdx],dl
   14004b581:	xor    cl,BYTE PTR [rsi]
   14004b583:	loopne 0x14004b591
   14004b585:	jo     0x14004b592
   14004b587:	(bad)  
   14004b588:	adc    DWORD PTR [rax],esp
   14004b58a:	or     al,BYTE PTR [rax]
   14004b58c:	and    BYTE PTR [rbp+rcx*1+0x0],ah
   14004b590:	sbb    al,0x54
   14004b592:	or     al,0x0
   14004b594:	sbb    BYTE PTR [rbx+rcx*1],dh
   14004b597:	add    BYTE PTR [rdx+rdx*2],cl
   14004b59a:	or     al,dh
   14004b59c:	(bad)  
   14004b59d:	loopne 0x14004b5a3
   14004b59f:	jo     0x14004b5d7
   14004b5a1:	push   rsi
   14004b5a2:	add    DWORD PTR [rax],eax
   14004b5a4:	nop
   14004b5a5:	adc    al,0x4
   14004b5a7:	add    bh,bh
   14004b5a9:	(bad)  
   14004b5aa:	(bad)  
   14004b5ab:	dec    DWORD PTR [rcx-0x5f]
   14004b5ae:	add    eax,DWORD PTR [rax]
   14004b5b0:	jo     0x14004b552
   14004b5b2:	add    eax,DWORD PTR [rax]
   14004b5b4:	(bad)  
   14004b5b5:	(bad)  
   14004b5b6:	(bad)  
   14004b5b7:	(bad)  
   14004b5b8:	mov    esi,0x3a0
   14004b5bd:	add    BYTE PTR [rax],al
   14004b5bf:	add    BYTE PTR [rdi],al
   14004b5c1:	movabs eax,ds:0x2411ffffffff0003
   14004b5ca:	or     al,BYTE PTR [rax]
   14004b5cc:	and    al,0x64
   14004b5ce:	or     eax,0xc542000
   14004b5d3:	add    BYTE PTR [rsp+rsi*1],bl
   14004b5d6:	or     eax,DWORD PTR [rax]
   14004b5d8:	adc    BYTE PTR [rdx+0xc],dl
   14004b5db:	lock or ah,al
   14004b5de:	or     BYTE PTR [rax+0x36],dh
   14004b5e1:	push   rsi
   14004b5e2:	add    DWORD PTR [rax],eax
   14004b5e4:	mov    eax,0xff000414
   14004b5e9:	(bad)  
   14004b5ea:	(bad)  
   14004b5eb:	push   QWORD PTR [rax]
   14004b5ed:	lahf   
   14004b5ee:	add    eax,DWORD PTR [rax]
   14004b5f0:	xchg   esp,eax
   14004b5f1:	sahf   
   14004b5f2:	add    eax,DWORD PTR [rax]
   14004b5f4:	(bad)  
   14004b5f5:	(bad)  
   14004b5f6:	(bad)  
   14004b5f7:	inc    ebp
   14004b5f9:	sahf   
   14004b5fa:	add    eax,DWORD PTR [rax]
   14004b5fc:	add    BYTE PTR [rax],al
   14004b5fe:	add    BYTE PTR [rax],al
   14004b600:	sti    
   14004b601:	sahf   
   14004b602:	add    eax,DWORD PTR [rax]
   14004b604:	(bad)  
   14004b605:	(bad)  
   14004b606:	(bad)  
   14004b607:	call   QWORD PTR [rcx]
   14004b609:	and    ecx,DWORD PTR [rdx]
   14004b60b:	add    BYTE PTR [rbx],ah
   14004b60d:	push   rsp
   14004b60e:	(bad)  
   14004b60f:	add    BYTE PTR [rdi],bl
   14004b611:	xor    al,0xd
   14004b613:	add    BYTE PTR [rbx],dl
   14004b615:	push   rdx
   14004b616:	(bad)  
   14004b618:	or     eax,0x9c00be0
   14004b61d:	jo     0x14004b627
   14004b61f:	(bad)  
   14004b620:	ss push rsi
   14004b622:	add    DWORD PTR [rax],eax
   14004b624:	loopne 0x14004b63a
   14004b626:	add    al,0x0
   14004b628:	(bad)  
   14004b629:	(bad)  
   14004b62a:	(bad)  
   14004b62b:	(bad)  
   14004b62c:	jnp    0x14004b5cc
   14004b62e:	add    eax,DWORD PTR [rax]
   14004b630:	fcomp  QWORD PTR [rbp-0xfffd]
   14004b636:	(bad)  
   14004b637:	call   FWORD PTR [rcx]
   14004b639:	sahf   
   14004b63a:	add    eax,DWORD PTR [rax]
   14004b63c:	add    BYTE PTR [rax],al
   14004b63e:	add    BYTE PTR [rax],al
   14004b640:	(bad)  
   14004b641:	sahf   
   14004b642:	add    eax,DWORD PTR [rax]
   14004b644:	(bad)  
   14004b645:	(bad)  
   14004b646:	(bad)  
   14004b647:	inc    DWORD PTR [rcx]
   14004b649:	sbb    al,BYTE PTR [rsi]
   14004b64b:	add    BYTE PTR [rdx],bl
   14004b64d:	xor    al,0xf
   14004b64f:	add    BYTE PTR [rdx],bl
   14004b651:	xchg   edx,eax
   14004b652:	(bad)  
   14004b653:	jo     0x14004b66a
   14004b655:	(bad)  
   14004b656:	adc    al,0x50
   14004b658:	sbb    DWORD PTR [rcx],ebx
   14004b65a:	add    al,0x0
   14004b65c:	adc    BYTE PTR [rdx+0xc],dl
   14004b65f:	jo     0x14004b66c
   14004b661:	(bad)  
   14004b662:	or     dh,BYTE PTR [rax]
   14004b664:	ss push rsi
   14004b666:	add    DWORD PTR [rax],eax
   14004b668:	or     BYTE PTR [rip+0xffffffffffff0004],dl        # 0x14003b672
   14004b66e:	(bad)  
   14004b66f:	inc    DWORD PTR [rax]
   14004b671:	add    BYTE PTR [rax],al
   14004b673:	add    bh,bh
   14004b675:	(bad)  
   14004b676:	(bad)  
   14004b677:	inc    DWORD PTR [rax]
	...
   14004b681:	add    BYTE PTR [rax],al
   14004b683:	add    BYTE PTR [rcx],al
   14004b685:	add    BYTE PTR [rax],al
   14004b687:	add    BYTE PTR [rcx],al
   14004b689:	add    BYTE PTR [rax],al
   14004b68b:	add    BYTE PTR [rax+0x400004b6],dl
	...
   14004b699:	add    BYTE PTR [rax],al
   14004b69b:	add    BYTE PTR [rbx-0x5a],bh
   14004b69e:	add    eax,DWORD PTR [rax]
   14004b6a0:	cmp    BYTE PTR [rax],al
   14004b6a2:	add    BYTE PTR [rax],al
   14004b6a4:	je     0x14004b64b
   14004b6a6:	add    eax,DWORD PTR [rax]
   14004b6a8:	(bad)  
   14004b6a9:	(bad)  
   14004b6aa:	(bad)  
   14004b6ab:	dec    ecx
   14004b6ad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b6ae:	add    eax,DWORD PTR [rax]
   14004b6b0:	add    BYTE PTR [rax],al
   14004b6b2:	add    BYTE PTR [rax],al
   14004b6b4:	out    dx,al
   14004b6b5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b6b6:	add    eax,DWORD PTR [rax]
   14004b6b8:	(bad)  
   14004b6b9:	(bad)  
   14004b6ba:	(bad)  
   14004b6bb:	(bad)  
   14004b6bc:	jnp    0x14004b664
   14004b6be:	add    eax,DWORD PTR [rax]
   14004b6c0:	add    BYTE PTR [rax],al
   14004b6c2:	add    BYTE PTR [rax],al
   14004b6c4:	sbb    DWORD PTR [rdx],ecx
   14004b6c6:	add    al,BYTE PTR [rax]
   14004b6c8:	or     dh,BYTE PTR [rdx]
   14004b6ca:	(bad)  
   14004b6cb:	push   rax
   14004b6cc:	ss push rsi
   14004b6ce:	add    DWORD PTR [rax],eax
   14004b6d0:	or     BYTE PTR [rip+0x27190004],dl        # 0x1671db6da
   14004b6d6:	or     al,BYTE PTR [rax]
   14004b6d8:	sbb    DWORD PTR [rcx],eax
   14004b6da:	sub    eax,DWORD PTR [rax]
   14004b6dc:	or     eax,0x9e00bf0
   14004b6e1:	rol    BYTE PTR [rdi],1
   14004b6e3:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14364bb5a
   14004b6ea:	add    dl,BYTE PTR [rax-0x48]
   14004b6ed:	rex.WX add QWORD PTR [rax],rax
   14004b6f0:	rex add DWORD PTR [rax],eax
   14004b6f3:	add    BYTE PTR [rcx],bl
   14004b6f5:	or     DWORD PTR cs:[rax],eax
   14004b6f8:	sbb    eax,0x1d005664
   14004b6fd:	xor    al,0x55
   14004b6ff:	add    BYTE PTR [rip+0xe005001],bl        # 0x14e050706
   14004b705:	loopne 0x14004b713
   14004b707:	jo     0x14004b714
   14004b709:	push   rax
   14004b70a:	add    BYTE PTR [rax],al
   14004b70c:	mov    eax,0x7000014a
   14004b711:	add    al,BYTE PTR [rax]
   14004b713:	add    BYTE PTR [rcx],al
   14004b715:	sbb    DWORD PTR [rdx],ecx
   14004b717:	add    BYTE PTR [rcx],bl
   14004b719:	xor    al,0xe
   14004b71b:	add    BYTE PTR [rcx],bl
   14004b71d:	push   rdx
   14004b71e:	adc    eax,0x11e013f0
   14004b723:	ror    BYTE PTR [rdi],1
   14004b725:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b64c39c
   14004b72c:	adc    DWORD PTR [rdx],ebp
   14004b72e:	or     DWORD PTR [rax],eax
   14004b730:	and    al,dl
   14004b732:	sbb    esi,eax
   14004b734:	sbb    eax,esp
   14004b736:	(bad)  
   14004b737:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x15274cafd
   14004b73d:	(bad)  
   14004b73e:	adc    DWORD PTR [rax],esi
   14004b740:	adc    BYTE PTR [rax+0x0],dl
   14004b743:	add    BYTE PTR [rsi],dh
   14004b745:	push   rsi
   14004b746:	add    DWORD PTR [rax],eax
   14004b748:	adc    BYTE PTR [rip+0xffffffffffff0004],0xff        # 0x14003b753
   14004b74f:	inc    DWORD PTR [rcx-0x43fffc54]
   14004b755:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004b756:	add    eax,DWORD PTR [rax]
   14004b758:	(bad)  
   14004b759:	(bad)  
   14004b75a:	(bad)  
   14004b75b:	(bad)  
   14004b75c:	stc    
   14004b75d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004b75e:	add    eax,DWORD PTR [rax]
   14004b760:	add    BYTE PTR [rax],al
   14004b762:	add    BYTE PTR [rax],al
   14004b764:	lods   al,BYTE PTR gs:[rsi]
   14004b766:	add    eax,DWORD PTR [rax]
   14004b768:	(bad)  
   14004b769:	(bad)  
   14004b76a:	(bad)  
   14004b76b:	inc    DWORD PTR [rcx]
   14004b76d:	adc    cl,BYTE PTR [rax]
   14004b76f:	add    BYTE PTR [rdx],dl
   14004b771:	push   rsp
   14004b772:	(bad)  
   14004b773:	add    BYTE PTR [rdx],dl
   14004b775:	xor    al,0xc
   14004b777:	add    BYTE PTR [rdx],dl
   14004b779:	jb     0x14004b789
   14004b77b:	loopne 0x14004b789
   14004b77d:	jo     0x14004b78a
   14004b77f:	(bad)  
   14004b780:	add    DWORD PTR [rbx],esp
   14004b782:	or     al,0x0
   14004b784:	and    esi,DWORD PTR [rbx+rdx*1+0x0]
   14004b788:	and    esp,DWORD PTR [rdx+rdx*1+0x0]
   14004b78c:	and    esi,DWORD PTR [rax+rdx*1]
   14004b78f:	add    BYTE PTR [rbx],ah
   14004b791:	xchg   edx,eax
   14004b792:	sbb    al,0xf0
   14004b794:	sbb    ah,al
   14004b796:	sbb    al,dl
   14004b798:	(bad)  
   14004b799:	rcl    BYTE PTR [rax+rdx*2],0x19
   14004b79d:	xor    al,0x9
   14004b79f:	add    BYTE PTR [rbx],ah
   14004b7a1:	adc    DWORD PTR fs:[rdx],eax
   14004b7a4:	and    esi,DWORD PTR [rax+rdx*1]
   14004b7a7:	add    ah,BYTE PTR [rbx]
   14004b7a9:	add    DWORD PTR [rdx],ecx
   14004b7ab:	add    cl,BYTE PTR [rsi]
   14004b7ad:	loopne 0x14004b7bb
   14004b7af:	jo     0x14004b7bc
   14004b7b1:	push   rax
   14004b7b2:	add    BYTE PTR [rax],al
   14004b7b4:	mov    eax,0x4000014a
   14004b7b9:	adc    BYTE PTR [rax],al
   14004b7bb:	add    BYTE PTR [rcx],dl
   14004b7bd:	lar    eax,WORD PTR [rax]
   14004b7c0:	(bad)  
   14004b7c1:	push   rdx
   14004b7c2:	add    dh,BYTE PTR [rax]
   14004b7c4:	ss push rsi
   14004b7c6:	add    DWORD PTR [rax],eax
   14004b7c8:	rex.W (bad) 
   14004b7ca:	add    al,0x0
   14004b7cc:	(bad)  
   14004b7cd:	(bad)  
   14004b7ce:	(bad)  
   14004b7cf:	(bad)  
   14004b7d0:	cmp    eax,0xb40003bb
   14004b7d5:	mov    edx,0xffff0003
   14004b7da:	(bad)  
   14004b7db:	call   rsi
   14004b7dd:	mov    edx,0x3
   14004b7e2:	add    BYTE PTR [rax],al
   14004b7e4:	in     al,0xba
   14004b7e6:	add    eax,DWORD PTR [rax]
   14004b7e8:	(bad)  
   14004b7e9:	(bad)  
   14004b7ea:	(bad)  
   14004b7eb:	inc    DWORD PTR [rcx]
   14004b7ed:	add    al,BYTE PTR [rcx]
   14004b7ef:	add    BYTE PTR [rdx],al
   14004b7f1:	push   rax
   14004b7f2:	add    BYTE PTR [rax],al
   14004b7f4:	sbb    DWORD PTR [rip+0xffffffffd2060002],edx        # 0x1120ab7fc
   14004b7fa:	add    dh,BYTE PTR [rax]
   14004b7fc:	mov    eax,0x6800014a
   14004b801:	add    BYTE PTR [rax],al
   14004b803:	add    BYTE PTR [rax],al
   14004b805:	add    BYTE PTR [rax],al
   14004b807:	add    BYTE PTR [rcx],al
   14004b809:	add    al,0x1
   14004b80b:	add    BYTE PTR [rdx+rdx*1],al
   14004b80e:	add    BYTE PTR [rax],al
   14004b810:	add    DWORD PTR [rax],eax
   14004b812:	add    BYTE PTR [rax],al
   14004b814:	and    BYTE PTR [rax+0x4],bh
	...
   14004b822:	add    BYTE PTR [rax],al
   14004b824:	and    ah,0x4
   14004b827:	add    BYTE PTR [rax],al
   14004b829:	add    BYTE PTR [rax],al
   14004b82b:	add    bh,bh
   14004b82d:	(bad)  
   14004b82e:	(bad)  
   14004b82f:	inc    DWORD PTR [rax]
   14004b831:	add    BYTE PTR [rax],al
   14004b833:	add    BYTE PTR [rax-0x48000000],ah
   14004b839:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004b83a:	add    al,BYTE PTR [rax]
	...
   14004b84c:	rex.R stos BYTE PTR es:[rdi],al
   14004b84e:	add    al,BYTE PTR [rax]
   14004b850:	add    BYTE PTR [rax],al
   14004b852:	add    BYTE PTR [rax],al
   14004b854:	adc    BYTE PTR [rax+0x4],bh
	...
   14004b86a:	add    BYTE PTR [rax],al
   14004b86c:	mov    al,0xe4
   14004b86e:	add    al,0x0
   14004b870:	add    BYTE PTR [rax],al
   14004b872:	add    BYTE PTR [rax],al
   14004b874:	(bad)  
   14004b875:	(bad)  
   14004b876:	(bad)  
   14004b877:	inc    DWORD PTR [rax]
   14004b879:	add    BYTE PTR [rax],al
   14004b87b:	add    BYTE PTR [rax+rax*1],al
	...
   14004b88e:	add    BYTE PTR [rax],al
   14004b890:	add    DWORD PTR [rax],eax
   14004b892:	add    BYTE PTR [rax],al
   14004b894:	push   0x4b8
	...
   14004b8a9:	add    BYTE PTR [rax],al
   14004b8ab:	add    BYTE PTR [rax+0x4b8],dl
	...
   14004b8c5:	add    BYTE PTR [rax],al
   14004b8c7:	add    al,ah
   14004b8c9:	loope  0x14004b8cf
   14004b8cb:	rex add DWORD PTR [rax],eax
   14004b8ce:	add    BYTE PTR [rax],al
   14004b8d0:	xor    dl,ah
   14004b8d2:	add    al,0x40
   14004b8d4:	add    DWORD PTR [rax],eax
   14004b8d6:	add    BYTE PTR [rax],al
   14004b8d8:	and    dl,0x4
   14004b8db:	rex add DWORD PTR [rax],eax
	...
   14004b8e6:	add    BYTE PTR [rax],al
   14004b8e8:	add    DWORD PTR [rax],eax
   14004b8ea:	add    BYTE PTR [rax],al
   14004b8ec:	jo     0x14004b8e8
   14004b8ee:	add    eax,DWORD PTR [rax]
   14004b8f0:	loopne 0x14004b8dc
   14004b8f2:	add    al,0x0
   14004b8f4:	adc    BYTE PTR [rax],dh
   14004b8f6:	add    eax,0x4b9b800
   14004b8fb:	add    BYTE PTR [rax+0x4bc],ah
   14004b901:	add    BYTE PTR [rax],al
   14004b903:	add    BYTE PTR [rax],al
   14004b905:	add    BYTE PTR [rax],al
   14004b907:	add    BYTE PTR [rcx],al
   14004b909:	add    BYTE PTR [rax],al
   14004b90b:	add    BYTE PTR [rax-0x17fffc06],al
   14004b911:	(bad)  
   14004b912:	add    al,0x0
   14004b914:	shl    BYTE PTR [rax],1
   14004b916:	add    eax,0x4ba7800
   14004b91b:	add    BYTE PTR [rax+0x4bc],bh
   14004b921:	add    BYTE PTR [rax],al
   14004b923:	add    BYTE PTR [rax],al
   14004b925:	add    BYTE PTR [rax],al
   14004b927:	add    BYTE PTR [rcx],al
   14004b929:	add    BYTE PTR [rax],al
   14004b92b:	add    BYTE PTR [rax-0xffffc06],ah
   14004b931:	(bad)  
   14004b932:	add    al,0x0
   14004b934:	(bad)  
   14004b935:	xor    DWORD PTR [rip+0x4bb0800],eax        # 0x144bfc13b
   14004b93b:	add    BYTE PTR [rax+0x4bd],dh
   14004b941:	add    BYTE PTR [rax],al
   14004b943:	add    BYTE PTR [rax],al
   14004b945:	add    BYTE PTR [rax],al
   14004b947:	add    BYTE PTR [rcx],al
   14004b949:	add    BYTE PTR [rax],al
   14004b94b:	add    al,dl
   14004b94d:	cli    
   14004b94e:	add    eax,DWORD PTR [rax]
   14004b950:	clc    
   14004b951:	(bad)  
   14004b952:	add    al,0x0
   14004b954:	add    BYTE PTR [rax],dh
   14004b956:	add    eax,0x4b9a800
   14004b95b:	add    al,al
   14004b95d:	mov    ebp,0x4
   14004b962:	add    BYTE PTR [rax],al
   14004b964:	add    BYTE PTR [rax],al
   14004b966:	add    BYTE PTR [rax],al
   14004b968:	add    DWORD PTR [rax],eax
   14004b96a:	add    BYTE PTR [rax],al
   14004b96c:	loopne 0x14004b968
   14004b96e:	add    eax,DWORD PTR [rax]
   14004b970:	add    bl,ch
   14004b972:	add    al,0x0
   14004b974:	cmp    BYTE PTR [rcx],dh
   14004b976:	add    eax,0x4bae000
   14004b97b:	add    al,ch
   14004b97d:	mov    ebp,0x4
	...
   14004b9a6:	add    BYTE PTR [rax],al
   14004b9a8:	out    dx,al
   14004b9a9:	mov    ebx,0x4
	...
   14004b9b6:	add    BYTE PTR [rax],al
   14004b9b8:	(bad)  
   14004b9b9:	add    BYTE PTR [rax],al
   14004b9bb:	add    BYTE PTR [rax],al
   14004b9bd:	add    BYTE PTR [rax],al
   14004b9bf:	or     BYTE PTR [rax],0x0
   14004b9c2:	add    BYTE PTR [rax],al
   14004b9c4:	add    BYTE PTR [rax],al
   14004b9c6:	add    BYTE PTR [rax+0x9],al
   14004b9cc:	add    BYTE PTR [rax],al
   14004b9ce:	add    BYTE PTR [rax+0x13a],al
   14004b9d4:	add    BYTE PTR [rax],al
   14004b9d6:	add    BYTE PTR [rax+0x16],al
   14004b9dc:	add    BYTE PTR [rax],al
   14004b9de:	add    BYTE PTR [rax+0x15],al
   14004b9e4:	add    BYTE PTR [rax],al
   14004b9e6:	add    BYTE PTR [rax+0x10],al
   14004b9ec:	add    BYTE PTR [rax],al
   14004b9ee:	add    BYTE PTR [rax+0xf],al
   14004b9f4:	add    BYTE PTR [rax],al
   14004b9f6:	add    BYTE PTR [rax+0x28],al
   14004b9fc:	add    BYTE PTR [rax],al
   14004b9fe:	add    BYTE PTR [rax+0xa2],al
   14004ba04:	add    BYTE PTR [rax],al
   14004ba06:	add    BYTE PTR [rax+0xa1],al
   14004ba0c:	add    BYTE PTR [rax],al
   14004ba0e:	add    BYTE PTR [rax+0x4],al
   14004ba14:	add    BYTE PTR [rax],al
   14004ba16:	add    BYTE PTR [rax+0x139],al
   14004ba1c:	add    BYTE PTR [rax],al
   14004ba1e:	add    BYTE PTR [rax+0x2],al
   14004ba24:	add    BYTE PTR [rax],al
   14004ba26:	add    BYTE PTR [rax+0x95],al
   14004ba2c:	add    BYTE PTR [rax],al
   14004ba2e:	add    BYTE PTR [rax+0x96],al
   14004ba34:	add    BYTE PTR [rax],al
   14004ba36:	add    BYTE PTR [rax+0x18],al
   14004ba3c:	add    BYTE PTR [rax],al
   14004ba3e:	add    BYTE PTR [rax+0x14],al
   14004ba44:	add    BYTE PTR [rax],al
   14004ba46:	add    BYTE PTR [rax+0x13],al
   14004ba4c:	add    BYTE PTR [rax],al
   14004ba4e:	add    BYTE PTR [rax+0x17],al
   14004ba54:	add    BYTE PTR [rax],al
   14004ba56:	add    BYTE PTR [rax+0x1b],al
   14004ba5c:	add    BYTE PTR [rax],al
   14004ba5e:	add    BYTE PTR [rax+0x4d],al
   14004ba64:	add    BYTE PTR [rax],al
   14004ba66:	add    BYTE PTR [rax+0x6],al
   14004ba6c:	add    BYTE PTR [rax],al
   14004ba6e:	add    BYTE PTR [rax+0x0],al
   14004ba74:	add    BYTE PTR [rax],al
   14004ba76:	add    BYTE PTR [rax],al
   14004ba78:	scas   al,BYTE PTR es:[rdi]
   14004ba79:	mov    ebx,0x4
   14004ba7e:	add    BYTE PTR [rax],al
   14004ba80:	xchg   esi,eax
   14004ba81:	mov    ebx,0x4
   14004ba86:	add    BYTE PTR [rax],al
   14004ba88:	cmp    BYTE PTR [rbx+0x4],0x0
   14004ba8f:	add    BYTE PTR [rax-0x45],ch
   14004ba92:	add    al,0x0
   14004ba94:	add    BYTE PTR [rax],al
   14004ba96:	add    BYTE PTR [rax],al
   14004ba98:	push   rax
   14004ba99:	mov    ebx,0x4
   14004ba9e:	add    BYTE PTR [rax],al
   14004baa0:	cmp    al,0xbb
   14004baa2:	add    al,0x0
   14004baa4:	add    BYTE PTR [rax],al
   14004baa6:	add    BYTE PTR [rax],al
   14004baa8:	sub    bh,BYTE PTR [rbx+0x4]
   14004baae:	add    BYTE PTR [rax],al
   14004bab0:	rex.R mov esp,0x4
   14004bab6:	add    BYTE PTR [rax],al
   14004bab8:	sub    BYTE PTR [rsp+rax*1+0x0],bh
   14004babf:	add    BYTE PTR [rax],bl
   14004bac1:	mov    ebx,0x4
   14004bac6:	add    BYTE PTR [rax],al
   14004bac8:	(bad)  
   14004bac9:	mov    ebx,0x4
   14004bace:	add    BYTE PTR [rax],al
   14004bad0:	or     al,0xbc
   14004bad2:	add    al,0x0
	...
   14004bae0:	jl     0x14004ba9e
   14004bae2:	add    al,0x0
   14004bae4:	add    BYTE PTR [rax],al
   14004bae6:	add    BYTE PTR [rax],al
   14004bae8:	push   rsp
   14004bae9:	mov    esp,0x4
   14004baee:	add    BYTE PTR [rax],al
   14004baf0:	push   0xffffffffffffffbc
   14004baf2:	add    al,0x0
   14004baf4:	add    BYTE PTR [rax],al
   14004baf6:	add    BYTE PTR [rax],al
   14004baf8:	mov    WORD PTR [rsp+rax*1+0x0],?
	...
   14004bb07:	add    ah,dl
   14004bb09:	mov    ebx,0x4
	...
   14004bb1a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004bb1c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004bb1e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004bb26:	rex.RB js 0x14004bb29
   14004bb29:	add    BYTE PTR [rax],al
   14004bb2b:	add    BYTE PTR [rbx+0x6f],al
   14004bb2e:	push   rbp
   14004bb2f:	outs   dx,BYTE PTR ds:[rsi]
   14004bb30:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14004bb37:	imul   edi,DWORD PTR [rdx+0x65],0x0
   14004bb3e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004bb40:	rex.XB jb 0x14004bba8
   14004bb43:	(bad)  
   14004bb44:	je     0x14004bbab
   14004bb46:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004bb48:	jae    0x14004bbbe
   14004bb4a:	(bad)  
   14004bb4b:	outs   dx,BYTE PTR ds:[rsi]
   14004bb4c:	movsxd esp,DWORD PTR [rbp+0x0]
   14004bb4f:	add    BYTE PTR [rax],al
   14004bb51:	add    BYTE PTR [rbx+0x6f],al
   14004bb54:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004bb56:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004bb5e:	push   rbx
   14004bb5f:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004bb63:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43000000
   14004bb6b:	outs   dx,DWORD PTR ds:[rsi]
   14004bb6c:	push   rdx
   14004bb6d:	gs jae 0x14004bbe5
   14004bb70:	ins    DWORD PTR es:[rdi],dx
   14004bb71:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14004bb74:	(bad)  
   14004bb75:	jae    0x14004bbea
   14004bb77:	rex.WRXB (bad) 
   14004bb79:	push   0x65
   14004bb7b:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14004bb7f:	add    BYTE PTR [rax],al
   14004bb81:	add    BYTE PTR [rbx+0x6f],al
   14004bb84:	imul   r14d,DWORD PTR [rbx+0x63],0x656e6e6f
   14004bb8c:	movsxd esi,DWORD PTR [rdi+rcx*2+0x62]
   14004bb90:	push   0x65
   14004bb92:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14004bb96:	add    BYTE PTR [rax],al
   14004bb98:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004bb9a:	push   rdx
   14004bb9b:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   14004bba4:	(bad)  
   14004bba5:	jae    0x14004bc1a
   14004bba7:	rex.WRXB (bad) 
   14004bba9:	push   0x65
   14004bbab:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14004bbaf:	add    BYTE PTR [rbx+0x6f],al
   14004bbb2:	push   rdx
   14004bbb3:	gs jbe 0x14004bc25
   14004bbb6:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14004bbba:	(bad)  
   14004bbbb:	jae    0x14004bc30
   14004bbbd:	rex.WRXB (bad) 
   14004bbbf:	push   0x65
   14004bbc1:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14004bbc5:	add    BYTE PTR [rbx+0x6f],al
   14004bbc8:	push   rsp
   14004bbc9:	(bad)  
   14004bbca:	jae    0x14004bc37
   14004bbcc:	rex.WRB
   14004bbcd:	gs ins DWORD PTR es:[rdi],dx
   14004bbcf:	rex.RX jb 0x14004bc37
   14004bbd2:	add    BYTE PTR gs:[rax],al
   14004bbd5:	add    BYTE PTR [rbx+0x48],dl
   14004bbd8:	rex.XB jb 0x14004bc40
   14004bbdb:	(bad)  
   14004bbdc:	je     0x14004bc43
   14004bbde:	push   rbx
   14004bbdf:	je     0x14004bc53
   14004bbe1:	gs (bad) 
   14004bbe3:	ins    DWORD PTR es:[rdi],dx
   14004bbe4:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14004bbe6:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x78
   14004bbef:	add    BYTE PTR [rcx+0x63],al
   14004bbf2:	movsxd esp,DWORD PTR [rbp+0x73]
   14004bbf5:	jae    0x14004bc60
   14004bbf7:	(bad)  
   14004bbf8:	ins    BYTE PTR es:[rdi],dx
   14004bbf9:	gs rex.WRXB (bad) 
   14004bbfc:	push   0x65
   14004bbfe:	movsxd esi,DWORD PTR [rsi+rax*2+0x72]
   14004bc02:	outs   dx,DWORD PTR ds:[rsi]
   14004bc03:	ins    DWORD PTR es:[rdi],dx
   14004bc04:	push   rdi
   14004bc05:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14004bc0c:	add    BYTE PTR [rax],al
   14004bc0e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004bc10:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004bc12:	(bad)  
   14004bc13:	(bad)  
   14004bc14:	ins    BYTE PTR es:[rdi],dx
   14004bc15:	gs rex.XB (bad) 
   14004bc18:	ins    BYTE PTR es:[rdi],dx
   14004bc19:	ins    BYTE PTR es:[rdi],dx
   14004bc1a:	rex.XB (bad) 
   14004bc1c:	outs   dx,BYTE PTR ds:[rsi]
   14004bc1d:	movsxd esp,DWORD PTR [rbp+0x6c]
   14004bc20:	ins    BYTE PTR es:[rdi],dx
   14004bc21:	(bad)  
   14004bc22:	je     0x14004bc8d
   14004bc24:	outs   dx,DWORD PTR ds:[rsi]
   14004bc25:	outs   dx,BYTE PTR ds:[rsi]
   14004bc26:	add    BYTE PTR [rax],al
   14004bc28:	add    BYTE PTR [rax],al
   14004bc2a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004bc2c:	imul   r14d,DWORD PTR [rbx+0x61],0x43656c62
   14004bc34:	(bad)  
   14004bc35:	ins    BYTE PTR es:[rdi],dx
   14004bc36:	ins    BYTE PTR es:[rdi],dx
   14004bc37:	rex.XB (bad) 
   14004bc39:	outs   dx,BYTE PTR ds:[rsi]
   14004bc3a:	movsxd esp,DWORD PTR [rbp+0x6c]
   14004bc3d:	ins    BYTE PTR es:[rdi],dx
   14004bc3e:	(bad)  
   14004bc3f:	je     0x14004bcaa
   14004bc41:	outs   dx,DWORD PTR ds:[rsi]
   14004bc42:	outs   dx,BYTE PTR ds:[rsi]
   14004bc43:	add    BYTE PTR [rax],al
   14004bc45:	add    BYTE PTR [rbx+0x6f],al
   14004bc48:	rex.XB (bad) 
   14004bc4a:	outs   dx,BYTE PTR ds:[rsi]
   14004bc4b:	movsxd esp,DWORD PTR [rbp+0x6c]
   14004bc4e:	rex.XB (bad) 
   14004bc50:	ins    BYTE PTR es:[rdi],dx
   14004bc51:	ins    BYTE PTR es:[rdi],dx
   14004bc52:	add    BYTE PTR [rax],al
   14004bc54:	add    BYTE PTR [rax],al
   14004bc56:	rex.XB ins BYTE PTR es:[rdi],dx
   14004bc58:	outs   dx,DWORD PTR ds:[rsi]
   14004bc59:	jae    0x14004bcc0
   14004bc5b:	push   rbx
   14004bc5c:	gs jb  0x14004bcd5
   14004bc5f:	imul   esp,DWORD PTR [rbx+0x65],0x646e6148
   14004bc66:	ins    BYTE PTR es:[rdi],dx
   14004bc67:	add    BYTE PTR gs:[rax],al
   14004bc6a:	add    BYTE PTR [rax],al
   14004bc6c:	rex.WRXB jo 0x14004bcd4
   14004bc6f:	outs   dx,BYTE PTR ds:[rsi]
   14004bc70:	push   rbx
   14004bc71:	rex.XB
   14004bc72:	rex.WRB (bad) 
   14004bc74:	outs   dx,BYTE PTR ds:[rsi]
   14004bc75:	(bad)  
   14004bc76:	addr32 gs jb 0x14004bcd1
   14004bc7a:	add    BYTE PTR [rax],al
   14004bc7c:	add    BYTE PTR [rax],al
   14004bc7e:	rex.WRXB jo 0x14004bce6
   14004bc81:	outs   dx,BYTE PTR ds:[rsi]
   14004bc82:	push   rbx
   14004bc83:	gs jb  0x14004bcfc
   14004bc86:	imul   esp,DWORD PTR [rbx+0x65],0x57
   14004bc8d:	add    BYTE PTR [rbx+0x74],dl
   14004bc90:	(bad)  
   14004bc91:	jb     0x14004bd07
   14004bc93:	push   rbx
   14004bc94:	gs jb  0x14004bd0d
   14004bc97:	imul   esp,DWORD PTR [rbx+0x65],0x57
	...
   14004be0e:	add    BYTE PTR [rax],al
   14004be10:	pop    rax
   14004be11:	rol    BYTE PTR [rax+rax*1],0x0
   14004be15:	add    BYTE PTR [rax],al
   14004be17:	add    BYTE PTR [rax],al
   14004be19:	add    BYTE PTR [rax],al
   14004be1b:	add    BYTE PTR [rax+0x180004c9],dl
   14004be21:	rol    BYTE PTR [rbx],1
   14004be23:	add    BYTE PTR [rax-0x3b],ah
   14004be26:	add    al,0x0
	...
   14004be30:	push   rsp
   14004be31:	retf   
   14004be32:	add    al,0x0
   14004be34:	and    ch,dl
   14004be36:	add    eax,DWORD PTR [rax]
   14004be38:	add    bh,al
   14004be3a:	add    al,0x0
	...
   14004be44:	xchg   esp,eax
   14004be45:	int3   
   14004be46:	add    al,0x0
   14004be48:	rcl    dh,0x3
   14004be4b:	add    al,cl
   14004be4d:	ret    
   14004be4e:	add    al,0x0
	...
   14004be58:	repnz rol DWORD PTR [rax+rax*1],cl
   14004be5c:	mov    bl,dl
   14004be5e:	add    eax,DWORD PTR [rax]
   14004be60:	call   0x14004c326
   14004be65:	add    BYTE PTR [rax],al
   14004be67:	add    BYTE PTR [rax],al
   14004be69:	add    BYTE PTR [rax],al
   14004be6b:	add    BYTE PTR [rsp+rdx*8],dl
   14004be6e:	add    al,0x0
   14004be70:	test   al,0xd1
   14004be72:	add    eax,DWORD PTR [rax]
   14004be74:	cwde   
   14004be75:	rol    DWORD PTR [rax+rax*1],0x0
   14004be79:	add    BYTE PTR [rax],al
   14004be7b:	add    BYTE PTR [rax],al
   14004be7d:	add    BYTE PTR [rax],al
   14004be7f:	add    BYTE PTR [rsi],dh
   14004be81:	(bad)  
   14004be82:	add    al,0x0
   14004be84:	pop    rax
   14004be85:	rol    DWORD PTR [rbx],1
   14004be87:	add    BYTE PTR [rax-0x3e],ch
   14004be8a:	add    al,0x0
	...
   14004be94:	(bad)  
   14004be95:	(bad)  
   14004be96:	add    al,0x0
   14004be98:	sub    dl,dl
   14004be9a:	add    eax,DWORD PTR [rax]
   14004be9c:	mov    eax,0x4c2
   14004bea1:	add    BYTE PTR [rax],al
   14004bea3:	add    BYTE PTR [rax],al
   14004bea5:	add    BYTE PTR [rax],al
   14004bea7:	add    BYTE PTR [rdx+0x780004d4],cl
   14004bead:	rol    BYTE PTR [rbx],cl
   14004beaf:	add    BYTE PTR [rax+0x4c4],ch
   14004beb5:	add    BYTE PTR [rax],al
   14004beb7:	add    BYTE PTR [rax],al
   14004beb9:	add    BYTE PTR [rax],al
   14004bebb:	add    BYTE PTR [rdx+0x680004d4],dh
   14004bec1:	(bad)  
   14004bec2:	add    eax,DWORD PTR [rax]
   14004bec4:	fadd   st,st(2)
   14004bec6:	add    al,0x0
	...
   14004bed0:	(bad)  
   14004bed1:	(bad)  
   14004bed2:	add    al,0x0
   14004bed4:	cwde   
   14004bed5:	rol    BYTE PTR [rbx],cl
   14004bed7:	add    BYTE PTR [rax-0x3f],ch
   14004beda:	add    al,0x0
	...
   14004bee4:	add    ch,dl
   14004bee6:	add    al,0x0
   14004bee8:	sub    cl,dl
   14004beea:	add    eax,DWORD PTR [rax]
   14004beec:	add    bl,0x4
	...
   14004bef7:	add    BYTE PTR [rdx],ah
   14004bef9:	(bad)  
   14004befa:	add    al,0x0
   14004befc:	rol    DWORD PTR [rbx],cl
   14004beff:	add    al,bh
   14004bf01:	rol    DWORD PTR [rax+rax*1],0x0
   14004bf05:	add    BYTE PTR [rax],al
   14004bf07:	add    BYTE PTR [rax],al
   14004bf09:	add    BYTE PTR [rax],al
   14004bf0b:	add    BYTE PTR [rsi-0x2b],al
   14004bf0e:	add    al,0x0
   14004bf10:	mov    eax,0xc80003d1
   14004bf15:	ret    0x4
	...
   14004bf20:	data16 (bad) 
   14004bf22:	add    al,0x0
   14004bf24:	mov    dl,dl
   14004bf26:	add    eax,DWORD PTR [rax]
   14004bf28:	push   rax
   14004bf29:	(bad)  
   14004bf2a:	add    al,0x0
	...
   14004bf34:	xchg   esp,eax
   14004bf35:	(bad)  
   14004bf36:	add    al,0x0
   14004bf38:	adc    ah,dl
   14004bf3a:	add    eax,DWORD PTR [rax]
   14004bf3c:	mov    eax,0x4c3
   14004bf41:	add    BYTE PTR [rax],al
   14004bf43:	add    BYTE PTR [rax],al
   14004bf45:	add    BYTE PTR [rax],al
   14004bf47:	add    BYTE PTR [rax+0x780004d5],bh
   14004bf4d:	rol    DWORD PTR [rbx],cl
   14004bf4f:	add    al,cl
   14004bf51:	rol    DWORD PTR [rax+rax*1],0x0
   14004bf55:	add    BYTE PTR [rax],al
   14004bf57:	add    BYTE PTR [rax],al
   14004bf59:	add    BYTE PTR [rax],al
   14004bf5b:	add    dl,bl
   14004bf5d:	(bad)  
   14004bf5e:	add    al,0x0
   14004bf60:	mov    cl,dl
   14004bf62:	add    eax,DWORD PTR [rax]
   14004bf64:	(bad)  
   14004bf65:	ret    
   14004bf66:	add    al,0x0
	...
   14004bf70:	cli    
   14004bf71:	(bad)  
   14004bf72:	add    al,0x0
   14004bf74:	and    bl,dl
   14004bf76:	add    eax,DWORD PTR [rax]
   14004bf78:	mov    ah,al
   14004bf7a:	add    al,0x0
	...
   14004bf84:	sbb    al,0xd6
   14004bf86:	add    al,0x0
   14004bf88:	rex.W (bad) 
   14004bf8a:	add    eax,DWORD PTR [rax]
   14004bf8c:	test   al,0xc2
   14004bf8e:	add    al,0x0
	...
   14004bf98:	rex (bad) 
   14004bf9a:	add    al,0x0
   14004bf9c:	push   0x500003d2
   14004bfa1:	ret    
   14004bfa2:	add    al,0x0
	...
   14004bfac:	push   0xffffffffffffffd6
   14004bfae:	add    al,0x0
   14004bfb0:	adc    bl,dl
   14004bfb2:	add    eax,DWORD PTR [rax]
   14004bfb4:	push   rax
   14004bfb5:	ret    0x4
	...
   14004bfc0:	cld    
   14004bfc1:	(bad)  
   14004bfc2:	add    al,0x0
   14004bfc4:	adc    dl,dl
   14004bfc6:	add    eax,DWORD PTR [rax]
   14004bfc8:	push   0x4c4
   14004bfcd:	add    BYTE PTR [rax],al
   14004bfcf:	add    BYTE PTR [rax],al
   14004bfd1:	add    BYTE PTR [rax],al
   14004bfd3:	add    BYTE PTR [rax],ch
   14004bfd5:	xlat   BYTE PTR ds:[rbx]
   14004bfd6:	add    al,0x0
   14004bfd8:	sub    ah,dl
   14004bfda:	add    eax,DWORD PTR [rax]
   14004bfdc:	test   al,0xc3
   14004bfde:	add    al,0x0
	...
   14004bfe8:	push   rsi
   14004bfe9:	xlat   BYTE PTR ds:[rbx]
   14004bfea:	add    al,0x0
   14004bfec:	push   0x400003d3
   14004bff1:	rol    BYTE PTR [rax+rax*1],0x0
   14004bff5:	add    BYTE PTR [rax],al
   14004bff7:	add    BYTE PTR [rax],al
   14004bff9:	add    BYTE PTR [rax],al
   14004bffb:	add    BYTE PTR [rsi+0x4d7],bh
   14004c001:	rol    BYTE PTR [rbx],1
   14004c003:	add    BYTE PTR [rax],bh
   14004c005:	ret    0x4
	...
   14004c010:	mov    eax,0xf80004d8
   14004c015:	rol    DWORD PTR [rbx],1
   14004c017:	add    BYTE PTR [rax+0x4c1],al
   14004c01d:	add    BYTE PTR [rax],al
   14004c01f:	add    BYTE PTR [rax],al
   14004c021:	add    BYTE PTR [rax],al
   14004c023:	add    al,bl
   14004c025:	fadd   DWORD PTR [rax+rax*1]
   14004c028:	rex rol DWORD PTR [rbx],1
	...
   14004c03f:	add    BYTE PTR [rax+0x4d7],al
   14004c045:	add    BYTE PTR [rax],al
   14004c047:	add    BYTE PTR [rsi+0x4d7],bl
	...
   14004c055:	add    BYTE PTR [rax],al
   14004c057:	add    dl,ch
   14004c059:	mov    DWORD PTR [rax+rax*1],0x0
   14004c060:	clc    
   14004c061:	mov    DWORD PTR [rax+rax*1],0x0
   14004c068:	add    al,0xc8
   14004c06a:	add    al,0x0
   14004c06c:	add    BYTE PTR [rax],al
   14004c06e:	add    BYTE PTR [rax],al
   14004c070:	sbb    cl,al
   14004c072:	add    al,0x0
   14004c074:	add    BYTE PTR [rax],al
   14004c076:	add    BYTE PTR [rax],al
   14004c078:	sub    al,cl
   14004c07a:	add    al,0x0
   14004c07c:	add    BYTE PTR [rax],al
   14004c07e:	add    BYTE PTR [rax],al
   14004c080:	ds enter 0x4,0x0
   14004c085:	add    BYTE PTR [rax],al
   14004c087:	add    BYTE PTR [rdx-0x38],bl
   14004c08a:	add    al,0x0
   14004c08c:	add    BYTE PTR [rax],al
   14004c08e:	add    BYTE PTR [rax],al
   14004c090:	outs   dx,BYTE PTR ds:[rsi]
   14004c091:	enter  0x4,0x0
   14004c095:	add    BYTE PTR [rax],al
   14004c097:	add    BYTE PTR [rsi-0x38],bh
   14004c09a:	add    al,0x0
   14004c09c:	add    BYTE PTR [rax],al
   14004c09e:	add    BYTE PTR [rax],al
   14004c0a0:	xchg   esp,eax
   14004c0a1:	enter  0x4,0x0
   14004c0a5:	add    BYTE PTR [rax],al
   14004c0a7:	add    BYTE PTR [rax+0x4c8],ch
   14004c0ad:	add    BYTE PTR [rax],al
   14004c0af:	add    BYTE PTR [rsi+0x4c8],dh
   14004c0b5:	add    BYTE PTR [rax],al
   14004c0b7:	add    dl,cl
   14004c0b9:	enter  0x4,0x0
   14004c0bd:	add    BYTE PTR [rax],al
   14004c0bf:	add    ah,bl
   14004c0c1:	enter  0x4,0x0
   14004c0c5:	add    BYTE PTR [rax],al
   14004c0c7:	add    dh,ch
   14004c0c9:	enter  0x4,0x0
   14004c0cd:	add    BYTE PTR [rax],al
   14004c0cf:	add    dh,bh
   14004c0d1:	enter  0x4,0x0
   14004c0d5:	add    BYTE PTR [rax],al
   14004c0d7:	add    BYTE PTR [rdx],cl
   14004c0d9:	leave  
   14004c0da:	add    al,0x0
   14004c0dc:	add    BYTE PTR [rax],al
   14004c0de:	add    BYTE PTR [rax],al
   14004c0e0:	es leave 
   14004c0e2:	add    al,0x0
   14004c0e4:	add    BYTE PTR [rax],al
   14004c0e6:	add    BYTE PTR [rax],al
   14004c0e8:	cmp    cl,cl
   14004c0ea:	add    al,0x0
   14004c0ec:	add    BYTE PTR [rax],al
   14004c0ee:	add    BYTE PTR [rax],al
   14004c0f0:	faddp  st(7),st
   14004c0f2:	add    al,0x0
   14004c0f4:	add    BYTE PTR [rax],al
   14004c0f6:	add    BYTE PTR [rax],al
   14004c0f8:	(bad)  
   14004c0f9:	leave  
   14004c0fa:	add    al,0x0
   14004c0fc:	add    BYTE PTR [rax],al
   14004c0fe:	add    BYTE PTR [rax],al
   14004c100:	je     0x14004c0cb
   14004c102:	add    al,0x0
   14004c104:	add    BYTE PTR [rax],al
   14004c106:	add    BYTE PTR [rax],al
   14004c108:	test   cl,cl
   14004c10a:	add    al,0x0
   14004c10c:	add    BYTE PTR [rax],al
   14004c10e:	add    BYTE PTR [rax],al
   14004c110:	loopne 0x14004c0e9
   14004c112:	add    al,0x0
   14004c114:	add    BYTE PTR [rax],al
   14004c116:	add    BYTE PTR [rax],al
   14004c118:	int3   
   14004c119:	xlat   BYTE PTR ds:[rbx]
   14004c11a:	add    al,0x0
   14004c11c:	add    BYTE PTR [rax],al
   14004c11e:	add    BYTE PTR [rax],al
   14004c120:	rol    bh,cl
   14004c122:	add    al,0x0
   14004c124:	add    BYTE PTR [rax],al
   14004c126:	add    BYTE PTR [rax],al
   14004c128:	ret    0x4c7
   14004c12b:	add    BYTE PTR [rax],al
   14004c12d:	add    BYTE PTR [rax],al
   14004c12f:	add    BYTE PTR [rdi+rax*8+0x4],ch
   14004c136:	add    BYTE PTR [rax],al
   14004c138:	cwde   
   14004c139:	mov    DWORD PTR [rax+rax*1],0x0
   14004c140:	test   bh,al
   14004c142:	add    al,0x0
   14004c144:	add    BYTE PTR [rax],al
   14004c146:	add    BYTE PTR [rax],al
   14004c148:	jbe    0x14004c111
   14004c14a:	add    al,0x0
   14004c14c:	add    BYTE PTR [rax],al
   14004c14e:	add    BYTE PTR [rax],al
   14004c150:	rex.WRX leave 
   14004c152:	add    al,0x0
   14004c154:	add    BYTE PTR [rax],al
   14004c156:	add    BYTE PTR [rax],al
   14004c158:	push   0x4c7
	...
   14004c165:	add    BYTE PTR [rax],al
   14004c167:	add    ah,bl
   14004c169:	rol    DWORD PTR [rax+rax*1],cl
   14004c16c:	add    BYTE PTR [rax],al
   14004c16e:	add    BYTE PTR [rax],al
   14004c170:	rol    BYTE PTR cs:[rax+rax*1],1
	...
   14004c180:	movabs al,ds:0x88000000000004d8
   14004c189:	fadd   DWORD PTR [rax+rax*1]
	...
   14004c198:	jbe    0x14004c16d
   14004c19a:	add    al,0x0
   14004c19c:	add    BYTE PTR [rax],al
   14004c19e:	add    BYTE PTR [rax],al
   14004c1a0:	pop    rdx
   14004c1a1:	rol    DWORD PTR [rax+rax*1],cl
   14004c1a4:	add    BYTE PTR [rax],al
   14004c1a6:	add    BYTE PTR [rax],al
   14004c1a8:	adc    ch,cl
   14004c1aa:	add    al,0x0
   14004c1ac:	add    BYTE PTR [rax],al
   14004c1ae:	add    BYTE PTR [rax],al
   14004c1b0:	rex.WRX fadd DWORD PTR [rax+r8*1]
   14004c1b4:	add    BYTE PTR [rax],al
   14004c1b6:	add    BYTE PTR [rax],al
   14004c1b8:	fmul   st(7),st
   14004c1ba:	add    al,0x0
	...
   14004c1c8:	sbb    dl,dl
   14004c1ca:	add    al,0x0
   14004c1cc:	add    BYTE PTR [rax],al
   14004c1ce:	add    BYTE PTR [rax],al
   14004c1d0:	sub    dl,dl
   14004c1d2:	add    al,0x0
   14004c1d4:	add    BYTE PTR [rax],al
   14004c1d6:	add    BYTE PTR [rax],al
   14004c1d8:	(bad)  
   14004c1d9:	rol    BYTE PTR [rax+rax*1],cl
	...
   14004c1e8:	add    cl,ch
   14004c1ea:	add    al,0x0
	...
   14004c1f8:	cmp    dl,bl
   14004c1fa:	add    al,0x0
   14004c1fc:	add    BYTE PTR [rax],al
   14004c1fe:	add    BYTE PTR [rax],al
   14004c200:	sub    bl,dl
   14004c202:	add    al,0x0
   14004c204:	add    BYTE PTR [rax],al
   14004c206:	add    BYTE PTR [rax],al
   14004c208:	mov    al,0xd0
   14004c20a:	add    al,0x0
   14004c20c:	add    BYTE PTR [rax],al
   14004c20e:	add    BYTE PTR [rax],al
   14004c210:	not    dl
   14004c212:	add    al,0x0
   14004c214:	add    BYTE PTR [rax],al
   14004c216:	add    BYTE PTR [rax],al
   14004c218:	sbb    al,0xd3
   14004c21a:	add    al,0x0
   14004c21c:	add    BYTE PTR [rax],al
   14004c21e:	add    BYTE PTR [rax],al
   14004c220:	adc    bl,dl
   14004c222:	add    al,0x0
   14004c224:	add    BYTE PTR [rax],al
   14004c226:	add    BYTE PTR [rax],al
   14004c228:	add    dl,bl
   14004c22a:	add    al,0x0
	...
   14004c238:	pop    rsi
   14004c239:	fadd   DWORD PTR [rax+rax*1]
   14004c23c:	add    BYTE PTR [rax],al
   14004c23e:	add    BYTE PTR [rax],al
   14004c240:	ins    BYTE PTR es:[rdi],dx
   14004c241:	fadd   DWORD PTR [rax+rax*1]
	...
   14004c250:	lods   al,BYTE PTR ds:[rsi]
   14004c251:	(bad)  
   14004c252:	add    al,0x0
   14004c254:	add    BYTE PTR [rax],al
   14004c256:	add    BYTE PTR [rax],al
   14004c258:	mov    ss,esi
   14004c25a:	add    al,0x0
	...
   14004c268:	movabs ds:0x1a000000000004cf,al
   14004c271:	rol    BYTE PTR [rax+rax*1],1
   14004c274:	add    BYTE PTR [rax],al
   14004c276:	add    BYTE PTR [rax],al
   14004c278:	mov    ah,0xcf
   14004c27a:	add    al,0x0
   14004c27c:	add    BYTE PTR [rax],al
   14004c27e:	add    BYTE PTR [rax],al
   14004c280:	out    dx,al
   14004c281:	iret   
   14004c282:	add    al,0x0
   14004c284:	add    BYTE PTR [rax],al
   14004c286:	add    BYTE PTR [rax],al
   14004c288:	(bad)  
   14004c289:	rol    BYTE PTR [rax+rax*1],1
   14004c28c:	add    BYTE PTR [rax],al
   14004c28e:	add    BYTE PTR [rax],al
   14004c290:	add    al,0xd0
   14004c292:	add    al,0x0
   14004c294:	add    BYTE PTR [rax],al
   14004c296:	add    BYTE PTR [rax],al
   14004c298:	(bad)  
   14004c299:	int    0x4
	...
   14004c2a7:	add    dh,ah
   14004c2a9:	rol    BYTE PTR [rax+rax*1],cl
	...
   14004c2b8:	outs   dx,BYTE PTR ds:[rsi]
   14004c2b9:	int    0x4
	...
   14004c2c7:	add    dh,dh
   14004c2c9:	rol    BYTE PTR [rax+rax*1],1
	...
   14004c2d8:	xchg   esp,eax
   14004c2d9:	rol    DWORD PTR [rax+rax*1],cl
   14004c2dc:	add    BYTE PTR [rax],al
   14004c2de:	add    BYTE PTR [rax],al
   14004c2e0:	jl     0x14004c2b1
   14004c2e2:	add    al,0x0
   14004c2e4:	add    BYTE PTR [rax],al
   14004c2e6:	add    BYTE PTR [rax],al
   14004c2e8:	add    al,0xd2
   14004c2ea:	add    al,0x0
   14004c2ec:	add    BYTE PTR [rax],al
   14004c2ee:	add    BYTE PTR [rax],al
   14004c2f0:	push   0x4cf
   14004c2f5:	add    BYTE PTR [rax],al
   14004c2f7:	add    ah,bl
   14004c2f9:	rol    DWORD PTR [rax+rax*1],1
   14004c2fc:	add    BYTE PTR [rax],al
   14004c2fe:	add    BYTE PTR [rax],al
   14004c300:	pushf  
   14004c301:	rol    DWORD PTR [rax+rax*1],1
   14004c304:	add    BYTE PTR [rax],al
   14004c306:	add    BYTE PTR [rax],al
   14004c308:	pop    rsp
   14004c309:	rol    DWORD PTR [rax+rax*1],1
   14004c30c:	add    BYTE PTR [rax],al
   14004c30e:	add    BYTE PTR [rax],al
   14004c310:	rex.R rol DWORD PTR [rax+rax*1],1
   14004c314:	add    BYTE PTR [rax],al
   14004c316:	add    BYTE PTR [rax],al
   14004c318:	rol    BYTE PTR ss:[rax+rax*1],cl
   14004c31c:	add    BYTE PTR [rax],al
   14004c31e:	add    BYTE PTR [rax],al
   14004c320:	push   rsp
   14004c321:	iret   
   14004c322:	add    al,0x0
   14004c324:	add    BYTE PTR [rax],al
   14004c326:	add    BYTE PTR [rax],al
   14004c328:	nop
   14004c329:	rol    BYTE PTR [rax+rax*1],1
   14004c32c:	add    BYTE PTR [rax],al
   14004c32e:	add    BYTE PTR [rax],al
   14004c330:	rol    QWORD PTR [rax+rax*1],cl
   14004c334:	add    BYTE PTR [rax],al
   14004c336:	add    BYTE PTR [rax],al
   14004c338:	(bad)  
   14004c339:	iret   
   14004c33a:	add    al,0x0
   14004c33c:	add    BYTE PTR [rax],al
   14004c33e:	add    BYTE PTR [rax],al
   14004c340:	nop
   14004c341:	iret   
   14004c342:	add    al,0x0
	...
   14004c350:	test   al,0xd3
   14004c352:	add    al,0x0
	...
   14004c360:	rex.R rol BYTE PTR [rax+rax*1],cl
   14004c364:	add    BYTE PTR [rax],al
   14004c366:	add    BYTE PTR [rax],al
   14004c368:	jbe    0x14004c33c
   14004c36a:	add    al,0x0
   14004c36c:	add    BYTE PTR [rax],al
   14004c36e:	add    BYTE PTR [rax],al
   14004c370:	pop    rsp
   14004c371:	rol    BYTE PTR [rax+rax*1],cl
	...
   14004c380:	pop    rsi
   14004c381:	rol    BYTE PTR [rax+rax*1],1
   14004c384:	add    BYTE PTR [rax],al
   14004c386:	add    BYTE PTR [rax],al
   14004c388:	jl     0x14004c35a
   14004c38a:	add    al,0x0
   14004c38c:	add    BYTE PTR [rax],al
   14004c38e:	add    BYTE PTR [rax],al
   14004c390:	hlt    
   14004c391:	rol    DWORD PTR [rax+rax*1],1
   14004c394:	add    BYTE PTR [rax],al
   14004c396:	add    BYTE PTR [rax],al
   14004c398:	outs   dx,BYTE PTR ds:[rsi]
   14004c399:	rol    BYTE PTR [rax+rax*1],1
	...
   14004c3a8:	(bad)  
   14004c3a9:	(bad)  
   14004c3aa:	add    al,0x0
	...
   14004c3b8:	mov    dl,cl
   14004c3ba:	add    al,0x0
	...
   14004c3c8:	sahf   
   14004c3c9:	int3   
   14004c3ca:	add    al,0x0
   14004c3cc:	add    BYTE PTR [rax],al
   14004c3ce:	add    BYTE PTR [rax],al
   14004c3d0:	or     cl,dl
   14004c3d2:	add    al,0x0
   14004c3d4:	add    BYTE PTR [rax],al
   14004c3d6:	add    BYTE PTR [rax],al
   14004c3d8:	and    dl,cl
   14004c3da:	add    al,0x0
   14004c3dc:	add    BYTE PTR [rax],al
   14004c3de:	add    BYTE PTR [rax],al
   14004c3e0:	rol    DWORD PTR ss:[rax+rax*1],1
   14004c3e4:	add    BYTE PTR [rax],al
   14004c3e6:	add    BYTE PTR [rax],al
   14004c3e8:	rex.R rol BYTE PTR [rax+rax*1],1
   14004c3ec:	add    BYTE PTR [rax],al
   14004c3ee:	add    BYTE PTR [rax],al
   14004c3f0:	jb     0x14004c3c3
   14004c3f2:	add    al,0x0
   14004c3f4:	add    BYTE PTR [rax],al
   14004c3f6:	add    BYTE PTR [rax],al
   14004c3f8:	mov    edx,0x4cc
   14004c3fd:	add    BYTE PTR [rax],al
   14004c3ff:	add    ah,bl
   14004c401:	rol    BYTE PTR [rax+rax*1],1
   14004c404:	add    BYTE PTR [rax],al
   14004c406:	add    BYTE PTR [rax],al
   14004c408:	ror    ah,cl
   14004c40a:	add    al,0x0
   14004c40c:	add    BYTE PTR [rax],al
   14004c40e:	add    BYTE PTR [rax],al
   14004c410:	lods   al,BYTE PTR ds:[rsi]
   14004c411:	rol    DWORD PTR [rax+rax*1],1
   14004c414:	add    BYTE PTR [rax],al
   14004c416:	add    BYTE PTR [rax],al
   14004c418:	(bad)  
   14004c419:	int3   
   14004c41a:	add    al,0x0
   14004c41c:	add    BYTE PTR [rax],al
   14004c41e:	add    BYTE PTR [rax],al
   14004c420:	and    ch,cl
   14004c422:	add    al,0x0
   14004c424:	add    BYTE PTR [rax],al
   14004c426:	add    BYTE PTR [rax],al
   14004c428:	xor    ch,cl
   14004c42a:	add    al,0x0
   14004c42c:	add    BYTE PTR [rax],al
   14004c42e:	add    BYTE PTR [rax],al
   14004c430:	cmp    al,0xcd
   14004c432:	add    al,0x0
   14004c434:	add    BYTE PTR [rax],al
   14004c436:	add    BYTE PTR [rax],al
   14004c438:	rex.WX int 0x4
   14004c43b:	add    BYTE PTR [rax],al
   14004c43d:	add    BYTE PTR [rax],al
   14004c43f:	add    BYTE PTR [rax-0x28],bh
   14004c442:	add    al,0x0
	...
   14004c450:	ret    0x4d3
   14004c453:	add    BYTE PTR [rax],al
   14004c455:	add    BYTE PTR [rax],al
   14004c457:	add    BYTE PTR [rdx-0x2f],bh
   14004c45a:	add    al,0x0
	...
   14004c468:	(bad)  
   14004c469:	fadd   DWORD PTR [rax+rax*1]
   14004c46c:	add    BYTE PTR [rax],al
   14004c46e:	add    BYTE PTR [rax],al
   14004c470:	(bad)  
   14004c471:	(bad)  
   14004c472:	add    al,0x0
   14004c474:	add    BYTE PTR [rax],al
   14004c476:	add    BYTE PTR [rax],al
   14004c478:	mov    esi,0x4d6
	...
   14004c485:	add    BYTE PTR [rax],al
   14004c487:	add    dl,al
   14004c489:	rol    BYTE PTR [rax+rax*1],cl
   14004c48c:	add    BYTE PTR [rax],al
   14004c48e:	add    BYTE PTR [rax],al
   14004c490:	stos   BYTE PTR es:[rdi],al
   14004c491:	rol    BYTE PTR [rax+rax*1],cl
   14004c494:	add    BYTE PTR [rax],al
   14004c496:	add    BYTE PTR [rax],al
   14004c498:	mov    ss,edx
   14004c49a:	add    al,0x0
	...
   14004c4a8:	or     al,0xce
   14004c4aa:	add    al,0x0
   14004c4ac:	add    BYTE PTR [rax],al
   14004c4ae:	add    BYTE PTR [rax],al
   14004c4b0:	enter  0x4d1,0x0
   14004c4b4:	add    BYTE PTR [rax],al
   14004c4b6:	add    BYTE PTR [rax],al
   14004c4b8:	and    dh,cl
   14004c4ba:	add    al,0x0
   14004c4bc:	add    BYTE PTR [rax],al
   14004c4be:	add    BYTE PTR [rax],al
   14004c4c0:	fmul   st,st(5)
   14004c4c2:	add    al,0x0
   14004c4c4:	add    BYTE PTR [rax],al
   14004c4c6:	add    BYTE PTR [rax],al
   14004c4c8:	ds (bad) 
   14004c4ca:	add    al,0x0
   14004c4cc:	add    BYTE PTR [rax],al
   14004c4ce:	add    BYTE PTR [rax],al
   14004c4d0:	add    cl,dh
   14004c4d2:	add    al,0x0
   14004c4d4:	add    BYTE PTR [rax],al
   14004c4d6:	add    BYTE PTR [rax],al
   14004c4d8:	jp     0x14004c4a8
   14004c4da:	add    al,0x0
   14004c4dc:	add    BYTE PTR [rax],al
   14004c4de:	add    BYTE PTR [rax],al
   14004c4e0:	cwde   
   14004c4e1:	(bad)  
   14004c4e2:	add    al,0x0
   14004c4e4:	add    BYTE PTR [rax],al
   14004c4e6:	add    BYTE PTR [rax],al
   14004c4e8:	mov    ah,0xce
   14004c4ea:	add    al,0x0
   14004c4ec:	add    BYTE PTR [rax],al
   14004c4ee:	add    BYTE PTR [rax],al
   14004c4f0:	test   al,0xcd
   14004c4f2:	add    al,0x0
   14004c4f4:	add    BYTE PTR [rax],al
   14004c4f6:	add    BYTE PTR [rax],al
   14004c4f8:	repnz int 0x4
   14004c4fb:	add    BYTE PTR [rax],al
   14004c4fd:	add    BYTE PTR [rax],al
   14004c4ff:	add    dh,ah
   14004c501:	int    0x4
   14004c503:	add    BYTE PTR [rax],al
   14004c505:	add    BYTE PTR [rax],al
   14004c507:	add    al,dl
   14004c509:	(bad)  
   14004c50a:	add    al,0x0
   14004c50c:	add    BYTE PTR [rax],al
   14004c50e:	add    BYTE PTR [rax],al
   14004c510:	or     ch,0x4
   14004c513:	add    BYTE PTR [rax],al
   14004c515:	add    BYTE PTR [rax],al
   14004c517:	add    BYTE PTR [rax+0x4cd],bl
   14004c51d:	add    BYTE PTR [rax],al
   14004c51f:	add    BYTE PTR [rsi+0x4cd],bh
   14004c525:	add    BYTE PTR [rax],al
   14004c527:	add    ah,ch
   14004c529:	(bad)  
   14004c52a:	add    al,0x0
   14004c52c:	add    BYTE PTR [rax],al
   14004c52e:	add    BYTE PTR [rax],al
   14004c530:	or     al,0xcf
   14004c532:	add    al,0x0
   14004c534:	add    BYTE PTR [rax],al
   14004c536:	add    BYTE PTR [rax],al
   14004c538:	pop    rsp
   14004c539:	(bad)  
   14004c53a:	add    al,0x0
   14004c53c:	add    BYTE PTR [rax],al
   14004c53e:	add    BYTE PTR [rax],al
   14004c540:	(bad)  
   14004c541:	iret   
   14004c542:	add    al,0x0
   14004c544:	add    BYTE PTR [rax],al
   14004c546:	add    BYTE PTR [rax],al
   14004c548:	enter  0x4cd,0x0
   14004c54c:	add    BYTE PTR [rax],al
   14004c54e:	add    BYTE PTR [rax],al
   14004c550:	ds iret 
   14004c552:	add    al,0x0
	...
   14004c560:	mov    cl,bl
   14004c562:	add    al,0x0
   14004c564:	add    BYTE PTR [rax],al
   14004c566:	add    BYTE PTR [rax],al
   14004c568:	or     bl,0x4
   14004c56b:	add    BYTE PTR [rax],al
   14004c56d:	add    BYTE PTR [rax],al
   14004c56f:	add    BYTE PTR [rax-0x35],bh
   14004c572:	add    al,0x0
   14004c574:	add    BYTE PTR [rax],al
   14004c576:	add    BYTE PTR [rax],al
   14004c578:	lods   al,BYTE PTR ds:[rsi]
   14004c579:	retf   
   14004c57a:	add    al,0x0
   14004c57c:	add    BYTE PTR [rax],al
   14004c57e:	add    BYTE PTR [rax],al
   14004c580:	(bad)  
   14004c581:	retf   
   14004c582:	add    al,0x0
   14004c584:	add    BYTE PTR [rax],al
   14004c586:	add    BYTE PTR [rax],al
   14004c588:	rex retf 
   14004c58a:	add    al,0x0
   14004c58c:	add    BYTE PTR [rax],al
   14004c58e:	add    BYTE PTR [rax],al
   14004c590:	rex.WR fld DWORD PTR [rax+rax*1]
   14004c594:	add    BYTE PTR [rax],al
   14004c596:	add    BYTE PTR [rax],al
   14004c598:	mov    cs,edx
   14004c59a:	add    al,0x0
   14004c59c:	add    BYTE PTR [rax],al
   14004c59e:	add    BYTE PTR [rax],al
   14004c5a0:	sub    cl,bl
   14004c5a2:	add    al,0x0
   14004c5a4:	add    BYTE PTR [rax],al
   14004c5a6:	add    BYTE PTR [rax],al
   14004c5a8:	and    bl,cl
   14004c5aa:	add    al,0x0
   14004c5ac:	add    BYTE PTR [rax],al
   14004c5ae:	add    BYTE PTR [rax],al
   14004c5b0:	or     bl,cl
   14004c5b2:	add    al,0x0
   14004c5b4:	add    BYTE PTR [rax],al
   14004c5b6:	add    BYTE PTR [rax],al
   14004c5b8:	fld    DWORD PTR [rax+r8*1]
   14004c5bc:	add    BYTE PTR [rax],al
   14004c5be:	add    BYTE PTR [rax],al
   14004c5c0:	sub    al,0xd9
   14004c5c2:	add    al,0x0
   14004c5c4:	add    BYTE PTR [rax],al
   14004c5c6:	add    BYTE PTR [rax],al
   14004c5c8:	(bad)  
   14004c5c9:	fld    DWORD PTR [rax+rax*1]
   14004c5cc:	add    BYTE PTR [rax],al
   14004c5ce:	add    BYTE PTR [rax],al
   14004c5d0:	cld    
   14004c5d1:	retf   0x4
   14004c5d4:	add    BYTE PTR [rax],al
   14004c5d6:	add    BYTE PTR [rax],al
   14004c5d8:	call   0x14004caa7
   14004c5dd:	add    BYTE PTR [rax],al
   14004c5df:	add    BYTE PTR [rbx+rcx*8],dh
   14004c5e2:	add    al,0x0
   14004c5e4:	add    BYTE PTR [rax],al
   14004c5e6:	add    BYTE PTR [rax],al
   14004c5e8:	stos   BYTE PTR es:[rdi],al
   14004c5e9:	retf   0x4
   14004c5ec:	add    BYTE PTR [rax],al
   14004c5ee:	add    BYTE PTR [rax],al
   14004c5f0:	test   dl,cl
   14004c5f2:	add    al,0x0
   14004c5f4:	add    BYTE PTR [rax],al
   14004c5f6:	add    BYTE PTR [rax],al
   14004c5f8:	js     0x14004c5c4
   14004c5fa:	add    al,0x0
   14004c5fc:	add    BYTE PTR [rax],al
   14004c5fe:	add    BYTE PTR [rax],al
   14004c600:	outs   dx,BYTE PTR ds:[rsi]
   14004c601:	retf   0x4
   14004c604:	add    BYTE PTR [rax],al
   14004c606:	add    BYTE PTR [rax],al
   14004c608:	(bad)  
   14004c609:	retf   0x4
   14004c60c:	add    BYTE PTR [rax],al
   14004c60e:	add    BYTE PTR [rax],al
   14004c610:	push   rdx
   14004c611:	retf   0x4
   14004c614:	add    BYTE PTR [rax],al
   14004c616:	add    BYTE PTR [rax],al
   14004c618:	rex.WX retf 0x4
   14004c61c:	add    BYTE PTR [rax],al
   14004c61e:	add    BYTE PTR [rax],al
   14004c620:	ds retf 0x4
   14004c624:	add    BYTE PTR [rax],al
   14004c626:	add    BYTE PTR [rax],al
   14004c628:	xor    al,0xca
   14004c62a:	add    al,0x0
   14004c62c:	add    BYTE PTR [rax],al
   14004c62e:	add    BYTE PTR [rax],al
   14004c630:	sub    dl,cl
   14004c632:	add    al,0x0
   14004c634:	add    BYTE PTR [rax],al
   14004c636:	add    BYTE PTR [rax],al
   14004c638:	sbb    al,0xca
   14004c63a:	add    al,0x0
   14004c63c:	add    BYTE PTR [rax],al
   14004c63e:	add    BYTE PTR [rax],al
   14004c640:	adc    cl,dl
   14004c642:	add    al,0x0
   14004c644:	add    BYTE PTR [rax],al
   14004c646:	add    BYTE PTR [rax],al
   14004c648:	or     dl,cl
   14004c64a:	add    al,0x0
   14004c64c:	add    BYTE PTR [rax],al
   14004c64e:	add    BYTE PTR [rax],al
   14004c650:	cld    
   14004c651:	leave  
   14004c652:	add    al,0x0
   14004c654:	add    BYTE PTR [rax],al
   14004c656:	add    BYTE PTR [rax],al
   14004c658:	out    dx,al
   14004c659:	leave  
   14004c65a:	add    al,0x0
   14004c65c:	add    BYTE PTR [rax],al
   14004c65e:	add    BYTE PTR [rax],al
   14004c660:	fmul   st(1),st
   14004c662:	add    al,0x0
   14004c664:	add    BYTE PTR [rax],al
   14004c666:	add    BYTE PTR [rax],al
   14004c668:	ror    cl,1
   14004c66a:	add    al,0x0
   14004c66c:	add    BYTE PTR [rax],al
   14004c66e:	add    BYTE PTR [rax],al
   14004c670:	(bad)  
   14004c671:	leave  
   14004c672:	add    al,0x0
   14004c674:	add    BYTE PTR [rax],al
   14004c676:	add    BYTE PTR [rax],al
   14004c678:	mov    edx,0x4c9
   14004c67d:	add    BYTE PTR [rax],al
   14004c67f:	add    BYTE PTR [rsi+0x4c9],ch
   14004c685:	add    BYTE PTR [rax],al
   14004c687:	add    BYTE PTR [rsi+0x4c9],ah
   14004c68d:	add    BYTE PTR [rax],al
   14004c68f:	add    BYTE PTR [rcx+rcx*8+0x4],bl
   14004c696:	add    BYTE PTR [rax],al
   14004c698:	hlt    
   14004c699:	xlat   BYTE PTR ds:[rbx]
   14004c69a:	add    al,0x0
   14004c69c:	add    BYTE PTR [rax],al
   14004c69e:	add    BYTE PTR [rax],al
   14004c6a0:	(bad)  
   14004c6a1:	xlat   BYTE PTR ds:[rbx]
   14004c6a2:	add    al,0x0
   14004c6a4:	add    BYTE PTR [rax],al
   14004c6a6:	add    BYTE PTR [rax],al
   14004c6a8:	or     al,bl
   14004c6aa:	add    al,0x0
   14004c6ac:	add    BYTE PTR [rax],al
   14004c6ae:	add    BYTE PTR [rax],al
   14004c6b0:	adc    al,bl
   14004c6b2:	add    al,0x0
   14004c6b4:	add    BYTE PTR [rax],al
   14004c6b6:	add    BYTE PTR [rax],al
   14004c6b8:	fmulp  st(2),st
   14004c6ba:	add    al,0x0
   14004c6bc:	add    BYTE PTR [rax],al
   14004c6be:	add    BYTE PTR [rax],al
   14004c6c0:	cwde   
   14004c6c1:	retf   
   14004c6c2:	add    al,0x0
   14004c6c4:	add    BYTE PTR [rax],al
   14004c6c6:	add    BYTE PTR [rax],al
   14004c6c8:	pushf  
   14004c6c9:	retf   0x4
   14004c6cc:	add    BYTE PTR [rax],al
   14004c6ce:	add    BYTE PTR [rax],al
   14004c6d0:	(bad)  
   14004c6d1:	retf   0x4
   14004c6d4:	add    BYTE PTR [rax],al
   14004c6d6:	add    BYTE PTR [rax],al
   14004c6d8:	(bad)  
   14004c6d9:	retf   0x4
   14004c6dc:	add    BYTE PTR [rax],al
   14004c6de:	add    BYTE PTR [rax],al
   14004c6e0:	mov    esp,0x4ca
   14004c6e5:	add    BYTE PTR [rax],al
   14004c6e7:	add    BYTE PTR [rdx+0x4cb],ah
   14004c6ed:	add    BYTE PTR [rax],al
   14004c6ef:	add    BYTE PTR [rsi-0x27],dl
   14004c6f2:	add    al,0x0
	...
   14004c700:	sbb    al,bl
   14004c702:	add    al,0x0
   14004c704:	add    BYTE PTR [rax],al
   14004c706:	add    BYTE PTR [rax],al
   14004c708:	or     ah,0x4
   14004c70b:	add    BYTE PTR [rax],al
   14004c70d:	add    BYTE PTR [rax],al
   14004c70f:	add    BYTE PTR [rsi-0x34],ah
   14004c712:	add    al,0x0
   14004c714:	add    BYTE PTR [rax],al
   14004c716:	add    BYTE PTR [rax],al
   14004c718:	push   rdx
   14004c719:	int3   
   14004c71a:	add    al,0x0
   14004c71c:	add    BYTE PTR [rax],al
   14004c71e:	add    BYTE PTR [rax],al
   14004c720:	ds int3 
   14004c722:	add    al,0x0
   14004c724:	add    BYTE PTR [rax],al
   14004c726:	add    BYTE PTR [rax],al
   14004c728:	cs int3 
   14004c72a:	add    al,0x0
   14004c72c:	add    BYTE PTR [rax],al
   14004c72e:	add    BYTE PTR [rax],al
   14004c730:	adc    cl,ah
   14004c732:	add    al,0x0
   14004c734:	add    BYTE PTR [rax],al
   14004c736:	add    BYTE PTR [rax],al
   14004c738:	cli    
   14004c739:	retf   
   14004c73a:	add    al,0x0
   14004c73c:	add    BYTE PTR [rax],al
   14004c73e:	add    BYTE PTR [rax],al
   14004c740:	loopne 0x14004c70d
   14004c742:	add    al,0x0
   14004c744:	add    BYTE PTR [rax],al
   14004c746:	add    BYTE PTR [rax],al
   14004c748:	int3   
   14004c749:	retf   
   14004c74a:	add    al,0x0
   14004c74c:	add    BYTE PTR [rax],al
   14004c74e:	add    BYTE PTR [rax],al
   14004c750:	mov    dh,0xcb
   14004c752:	add    al,0x0
   14004c754:	add    BYTE PTR [rax],al
   14004c756:	add    BYTE PTR [rax],al
   14004c758:	xor    al,0xd8
   14004c75a:	add    al,0x0
	...
   14004c768:	cmp    al,0x0
   14004c76a:	rex.XB push 0x70557261
   14004c770:	jo     0x14004c7d7
   14004c772:	jb     0x14004c7cb
   14004c774:	add    BYTE PTR [rax],al
   14004c776:	js     0x14004c779
   14004c778:	rex.RXB
   14004c779:	gs je  0x14004c7c9
   14004c77c:	gs jae 0x14004c7f2
   14004c77f:	(bad)  
   14004c780:	addr32 gs push rdi
   14004c783:	add    BYTE PTR [rbx+0x3],ch
   14004c786:	push   rsp
   14004c787:	jb     0x14004c7ea
   14004c789:	outs   dx,BYTE PTR ds:[rsi]
   14004c78a:	jae    0x14004c7f8
   14004c78c:	(bad)  
   14004c78d:	je     0x14004c7f4
   14004c78f:	rex.WRB
   14004c790:	gs jae 0x14004c806
   14004c793:	(bad)  
   14004c794:	add    BYTE PTR gs:[eax],al
   14004c798:	mov    dh,0x0
   14004c79a:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14004c7a2:	rex.WRB
   14004c7a3:	gs jae 0x14004c819
   14004c7a6:	(bad)  
   14004c7a7:	addr32 gs push rdi
   14004c7aa:	add    BYTE PTR [rax],al
   14004c7ac:	xchg   BYTE PTR [rdx],al
   14004c7ae:	push   rax
   14004c7af:	outs   dx,DWORD PTR ds:[rsi]
   14004c7b0:	jae    0x14004c826
   14004c7b2:	push   rsp
   14004c7b3:	push   0x64616572
   14004c7b8:	rex.WRB
   14004c7b9:	gs jae 0x14004c82f
   14004c7bc:	(bad)  
   14004c7bd:	addr32 gs push rdi
   14004c7c0:	add    BYTE PTR [rax],al
   14004c7c2:	add    DWORD PTR [rdx],0x50
   14004c7c5:	outs   dx,DWORD PTR ds:[rsi]
   14004c7c6:	jae    0x14004c83c
   14004c7c8:	rex.WRB
   14004c7c9:	gs jae 0x14004c83f
   14004c7cc:	(bad)  
   14004c7cd:	addr32 gs push rdi
   14004c7d0:	add    BYTE PTR [rax],al
   14004c7d2:	sub    eax,DWORD PTR [rbx]
   14004c7d4:	push   rbx
   14004c7d5:	gs je  0x14004c82c
   14004c7d8:	imul   ebp,DWORD PTR [rbp+0x65],0x2c000072
   14004c7df:	add    cl,BYTE PTR [rbx+0x69]
   14004c7e2:	ins    BYTE PTR es:[rdi],dx
   14004c7e3:	ins    BYTE PTR es:[rdi],dx
   14004c7e4:	push   rsp
   14004c7e5:	imul   ebp,DWORD PTR [rbp+0x65],0x2600072
   14004c7ec:	rex.WRB
   14004c7ed:	gs jae 0x14004c863
   14004c7f0:	(bad)  
   14004c7f1:	rex.X outs dx,DWORD PTR gs:[esi]
   14004c7f5:	js     0x14004c84e
   14004c7f7:	add    BYTE PTR [rcx],dh
   14004c7f9:	add    BYTE PTR [rbx+0x68],al
   14004c7fc:	(bad)  
   14004c7fd:	jb     0x14004c84d
   14004c7ff:	gs js  0x14004c876
   14004c802:	push   rdi
   14004c803:	add    BYTE PTR [rax+0x1],cl
   14004c806:	rex.RXB
   14004c807:	gs je  0x14004c850
   14004c80a:	outs   dx,DWORD PTR ds:[rsi]
   14004c80b:	jb     0x14004c872
   14004c80d:	addr32 jb 0x14004c87f
   14004c810:	jne    0x14004c880
   14004c812:	fs push rdi
   14004c814:	imul   ebp,DWORD PTR [rsi+0x64],0x1500776f
   14004c81b:	add    DWORD PTR [rdi+0x65],eax
   14004c81e:	je     0x14004c861
   14004c820:	outs   dx,BYTE PTR ds:[rsi]
   14004c821:	movsxd esp,DWORD PTR [rbp+0x73]
   14004c824:	je     0x14004c895
   14004c826:	jb     0x14004c828
   14004c828:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c829:	add    dl,BYTE PTR [rdx+0x65]
   14004c82c:	(bad)  
   14004c82d:	ins    BYTE PTR es:[rdi],dx
   14004c82e:	rex.RXB
   14004c82f:	gs je  0x14004c889
   14004c832:	imul   ebp,DWORD PTR [rsi+0x64],0x6c43776f
   14004c839:	(bad)  
   14004c83a:	jae    0x14004c8af
   14004c83c:	push   rdi
   14004c83d:	add    BYTE PTR [rsi+0x74654701],bh
   14004c843:	push   rbp
   14004c844:	jae    0x14004c8ab
   14004c846:	jb     0x14004c897
   14004c848:	(bad)  
   14004c849:	push   0x65
   14004c84b:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14004c84f:	outs   dx,WORD PTR ds:[rsi]
   14004c851:	jb     0x14004c8c0
   14004c853:	(bad)  
   14004c854:	je     0x14004c8bf
   14004c856:	outs   dx,DWORD PTR ds:[rsi]
   14004c857:	outs   dx,BYTE PTR ds:[rsi]
   14004c858:	push   rdi
   14004c859:	add    BYTE PTR [rbp+0x2],dh
   14004c85c:	rex.WRXB jo 0x14004c8c4
   14004c85f:	outs   dx,BYTE PTR ds:[rsi]
   14004c860:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004c862:	jo     0x14004c8d9
   14004c864:	je     0x14004c8aa
   14004c866:	gs jae 0x14004c8d4
   14004c869:	je     0x14004c8da
   14004c86b:	jo     0x14004c86d
   14004c86d:	add    BYTE PTR [rax+rax*1+0x43],cl
   14004c871:	ins    BYTE PTR es:[rdi],dx
   14004c872:	outs   dx,DWORD PTR ds:[rsi]
   14004c873:	jae    0x14004c8da
   14004c875:	rex.R
   14004c876:	gs jae 0x14004c8e4
   14004c879:	je     0x14004c8ea
   14004c87b:	jo     0x14004c87d
   14004c87d:	add    BYTE PTR [rip+0x74655303],dl        # 0x1b46a1b86
   14004c883:	push   rax
   14004c884:	jb     0x14004c8f5
   14004c886:	movsxd esp,DWORD PTR [rbp+0x73]
   14004c889:	jae    0x14004c8cf
   14004c88b:	push   rax
   14004c88c:	rex.WB
   14004c88d:	rex.B ja 0x14004c8f1
   14004c890:	jb     0x14004c8f7
   14004c892:	add    BYTE PTR [rax],al
   14004c894:	mov    al,0x1
   14004c896:	rex.RXB
   14004c897:	gs je  0x14004c8ed
   14004c89a:	jns    0x14004c90f
   14004c89c:	je     0x14004c903
   14004c89e:	ins    DWORD PTR es:[rdi],dx
   14004c89f:	rex.WRB
   14004c8a0:	gs je  0x14004c915
   14004c8a3:	imul   esp,DWORD PTR [rbx+0x73],0x10b0000
   14004c8aa:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x646e6957
   14004c8b2:	outs   dx,DWORD PTR ds:[rsi]
   14004c8b3:	ja     0x14004c90c
   14004c8b5:	add    BYTE PTR [rcx],ch
   14004c8b7:	add    edx,DWORD PTR [rbx+0x65]
   14004c8ba:	je     0x14004c910
   14004c8bc:	push   0x64616572
   14004c8c1:	rex.R
   14004c8c2:	gs jae 0x14004c930
   14004c8c5:	je     0x14004c936
   14004c8c7:	jo     0x14004c8c9
   14004c8c9:	add    BYTE PTR [rdi],ch
   14004c8cb:	add    edx,DWORD PTR [rbx+0x65]
   14004c8ce:	je     0x14004c927
   14004c8d0:	imul   ebp,DWORD PTR [rsi+0x45],0x746e6576
   14004c8d7:	rex.W outs dx,DWORD PTR ds:[rsi]
   14004c8d9:	outs   dx,DWORD PTR ds:[rsi]
   14004c8da:	imul   eax,DWORD PTR [rax],0x6d
   14004c8dd:	add    edx,DWORD PTR [rbp+0x6e]
   14004c8e0:	push   0x576b6f6f
   14004c8e5:	imul   ebp,DWORD PTR [rsi+0x45],0x746e6576
   14004c8ec:	add    BYTE PTR [rax],al
   14004c8ee:	(bad)  
   14004c8ef:	add    DWORD PTR [rdi+0x65],eax
   14004c8f2:	je     0x14004c937
   14004c8f4:	ins    BYTE PTR es:[rdi],dx
   14004c8f5:	(bad)  
   14004c8f6:	jae    0x14004c96b
   14004c8f8:	rex.WRX (bad) 
   14004c8fa:	ins    DWORD PTR es:[rdi],dx
   14004c8fb:	gs push rdi
   14004c8fd:	add    ah,bl
   14004c8ff:	add    dl,BYTE PTR [rbx+0x65]
   14004c902:	outs   dx,BYTE PTR ds:[rsi]
   14004c903:	rex.WB outs dx,BYTE PTR fs:[rsi]
   14004c906:	jo     0x14004c97d
   14004c908:	je     0x14004c90a
   14004c90a:	fadd   QWORD PTR [rcx]
   14004c90c:	rex.RXB
   14004c90d:	gs je  0x14004c967
   14004c910:	imul   ebp,DWORD PTR [rsi+0x64],0x6854776f
   14004c917:	jb     0x14004c97e
   14004c919:	(bad)  
   14004c91a:	fs push rax
   14004c91c:	jb     0x14004c98d
   14004c91e:	movsxd esp,DWORD PTR [rbp+0x73]
   14004c921:	jae    0x14004c96c
   14004c923:	add    BYTE PTR fs:[rax],al
   14004c926:	pop    rcx
   14004c927:	add    DWORD PTR [rdi+0x65],eax
   14004c92a:	je     0x14004c977
   14004c92c:	gs jns 0x14004c991
   14004c92f:	outs   dx,DWORD PTR ds:[rsi]
   14004c930:	(bad)  
   14004c931:	jb     0x14004c997
   14004c933:	rex.WR (bad) 
   14004c935:	jns    0x14004c9a6
   14004c937:	jne    0x14004c9ad
   14004c939:	add    BYTE PTR [rdx+0x2],dl
   14004c93c:	rex.WRB (bad) 
   14004c93e:	jo     0x14004c996
   14004c940:	imul   esi,DWORD PTR [rdx+0x74],0x4b6c6175
   14004c947:	gs jns 0x14004c98f
   14004c94a:	js     0x14004c9a3
   14004c94c:	add    BYTE PTR [rax],al
   14004c94e:	push   rbx
   14004c94f:	add    cl,BYTE PTR [rbp+0x61]
   14004c952:	jo     0x14004c9aa
   14004c954:	imul   esi,DWORD PTR [rdx+0x74],0x4b6c6175
   14004c95b:	gs jns 0x14004c9b5
   14004c95e:	add    BYTE PTR [rax],al
   14004c960:	cdq    
   14004c961:	add    edx,DWORD PTR [rdi+0x61]
   14004c964:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x706e4972
   14004c96c:	jne    0x14004c9e2
   14004c96e:	rex.WB
   14004c96f:	fs ins BYTE PTR es:[rdi],dx
   14004c971:	add    BYTE PTR gs:[rax],al
   14004c974:	(bad)  
   14004c975:	add    DWORD PTR [rdi+0x65],eax
   14004c978:	je     0x14004c9be
   14004c97a:	ins    BYTE PTR es:[rdi],dx
   14004c97b:	addr32 rex.XB je 0x14004c9f1
   14004c97f:	ins    BYTE PTR es:[rdi],dx
   14004c980:	rex.WB
   14004c981:	add    BYTE PTR [rax],r8b
   14004c984:	rol    DWORD PTR [rcx],0x47
   14004c987:	gs je  0x14004c9e1
   14004c98a:	imul   ebp,DWORD PTR [rsi+0x64],0x5500776f
   14004c991:	push   rbx
   14004c992:	rex.RB push r10
   14004c994:	xor    esi,DWORD PTR [rdx]
   14004c996:	cs fs ins BYTE PTR es:[rdi],dx
   14004c999:	ins    BYTE PTR es:[rdi],dx
   14004c99a:	add    BYTE PTR [rax],al
   14004c99c:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14004c9a3:	movsxd eax,DWORD PTR [rax]
   14004c9a5:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14004c9a9:	jb     0x14004ca10
   14004c9ab:	add    BYTE PTR gs:[rax],al
   14004c9ae:	xchg   ebx,eax
   14004c9af:	add    al,0x6d
   14004c9b1:	gs ins DWORD PTR es:[rdi],dx
   14004c9b3:	movsxd esi,DWORD PTR [rax+0x79]
   14004c9b6:	pop    rdi
   14004c9b7:	jae    0x14004c9b9
   14004c9b9:	add    BYTE PTR [rdx+0x63775f03],cl
   14004c9bf:	jae    0x14004ca2a
   14004c9c1:	movsxd ebp,DWORD PTR [rbp+0x70]
   14004c9c4:	add    BYTE PTR [rax],al
   14004c9c6:	adc    al,0x5
   14004c9c8:	ja     0x14004ca2d
   14004c9ca:	jae    0x14004ca3f
   14004c9cc:	je     0x14004ca40
   14004c9ce:	add    BYTE PTR [rax],al
   14004c9d0:	xchg   ebp,eax
   14004c9d1:	add    al,0x6d
   14004c9d3:	gs ins DWORD PTR es:[rdi],dx
   14004c9d5:	ins    DWORD PTR es:[rdi],dx
   14004c9d6:	outs   dx,DWORD PTR ds:[rsi]
   14004c9d7:	jbe    0x14004ca3e
   14004c9d9:	pop    rdi
   14004c9da:	jae    0x14004c9dc
   14004c9dc:	mov    esp,0x65625f00
   14004c9e1:	imul   ebp,DWORD PTR [esi+0x74],0x61657268
   14004c9e9:	fs gs js 0x14004c9ed
   14004c9ed:	add    BYTE PTR [rcx+0x3],ch
   14004c9f0:	pop    rdi
   14004c9f1:	jbe    0x14004ca66
   14004c9f3:	outs   dx,BYTE PTR ds:[rsi]
   14004c9f4:	ja     0x14004ca66
   14004c9f6:	jb     0x14004ca61
   14004c9f8:	outs   dx,BYTE PTR ds:[rsi]
   14004c9f9:	je     0x14004ca61
   14004c9fb:	add    BYTE PTR [rbx+rax*1+0x7363775f],dl
   14004ca02:	outs   dx,BYTE PTR ds:[rsi]
   14004ca03:	imul   esp,DWORD PTR [rbx+0x6d],0x5180070
   14004ca0a:	ja     0x14004ca6f
   14004ca0c:	jae    0x14004ca82
   14004ca0e:	outs   dx,DWORD PTR ds:[rsi]
   14004ca0f:	ins    BYTE PTR es:[rdi],dx
   14004ca10:	add    BYTE PTR [rax],al
   14004ca12:	and    eax,0x6c616304
   14004ca17:	ins    BYTE PTR es:[rdi],dx
   14004ca18:	outs   dx,DWORD PTR ds:[rsi]
   14004ca19:	movsxd eax,DWORD PTR [rax]
   14004ca1b:	add    BYTE PTR [rsi+0x75705f02],bl
   14004ca21:	jb     0x14004ca88
   14004ca23:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004ca26:	ins    BYTE PTR es:[rdi],dx
   14004ca27:	add    ah,ch
   14004ca29:	add    al,0x74
   14004ca2b:	outs   dx,DWORD PTR ds:[rsi]
   14004ca2c:	ja     0x14004caa3
   14004ca2e:	jo     0x14004caa0
   14004ca30:	gs jb  0x14004ca33
   14004ca33:	add    BYTE PTR [rax],dl
   14004ca35:	add    eax,0x72736377
   14004ca3a:	movsxd ebp,DWORD PTR [rax+0x72]
   14004ca3d:	add    BYTE PTR [rax+0x4],bh
   14004ca40:	imul   esi,DWORD PTR [rbx+0x77],0x63617073
   14004ca47:	add    BYTE PTR gs:[rax],al
   14004ca4a:	add    eax,0x74775f04
   14004ca4f:	outs   dx,DWORD PTR ds:[rsi]
   14004ca50:	imul   eax,DWORD PTR [rax],0x765f0360
   14004ca56:	jae    0x14004cabb
   14004ca58:	ja     0x14004caca
   14004ca5a:	jb     0x14004cac5
   14004ca5c:	outs   dx,BYTE PTR ds:[rsi]
   14004ca5d:	je     0x14004cac5
   14004ca5f:	add    dl,bh
   14004ca61:	add    al,0x76
   14004ca63:	jae    0x14004cadc
   14004ca65:	jo     0x14004cad9
   14004ca67:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   14004ca6e:	or     eax,DWORD PTR [rip+0x6e736377]        # 0x1ae782deb
   14004ca74:	movsxd ebp,DWORD PTR [rbp+0x70]
   14004ca77:	add    BYTE PTR [rdi+0x61635f00],bh
   14004ca7d:	ins    BYTE PTR es:[rdi],dx
   14004ca7e:	ins    BYTE PTR es:[rdi],dx
   14004ca7f:	outs   dx,BYTE PTR ds:[rsi]
   14004ca80:	gs ja  0x14004caeb
   14004ca83:	add    BYTE PTR [rsi+0x6d656d04],dl
   14004ca89:	jae    0x14004caf0
   14004ca8b:	je     0x14004ca8d
   14004ca8d:	add    BYTE PTR [rbp+0x0],dl
   14004ca90:	pop    rdi
   14004ca91:	pop    rax
   14004ca92:	movsxd esi,DWORD PTR [rax+0x74]
   14004ca95:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14004ca9e:	pop    rdi
   14004ca9f:	(bad)  
   14004caa0:	ins    DWORD PTR es:[rdi],dx
   14004caa1:	jae    0x14004cb0a
   14004caa3:	pop    rdi
   14004caa4:	gs js  0x14004cb10
   14004caa7:	je     0x14004caa9
   14004caa9:	add    BYTE PTR [rbp+0x775f5f00],bl
   14004caaf:	addr32 gs je 0x14004cb20
   14004cab3:	(bad)  
   14004cab4:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14004cabb:	add    BYTE PTR [rsi+0x735f5f00],cl
   14004cac1:	gs je  0x14004cb23
   14004cac4:	(bad)  
   14004cac5:	jo     0x14004cb37
   14004cac7:	pop    rdi
   14004cac8:	je     0x14004cb43
   14004caca:	jo     0x14004cb31
   14004cacc:	add    BYTE PTR [rax],al
   14004cace:	xor    al,BYTE PTR [riz*2+0x746978]
   14004cad5:	add    BYTE PTR [rsi],cl
   14004cad7:	add    DWORD PTR [rdi+0x65],ebx
   14004cada:	js     0x14004cb45
   14004cadc:	je     0x14004cade
   14004cade:	rol    DWORD PTR [rax],0x5f
   14004cae1:	movsxd esp,DWORD PTR [rbp+0x78]
   14004cae4:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14004caec:	jae    0x14004cb53
   14004caee:	je     0x14004cb65
   14004caf0:	jae    0x14004cb57
   14004caf2:	jb     0x14004cb61
   14004caf4:	(bad)  
   14004caf5:	je     0x14004cb5f
   14004caf7:	gs jb  0x14004cb6c
   14004cafa:	add    BYTE PTR [rax],al
   14004cafc:	jge    0x14004caff
   14004cafe:	pop    rdi
   14004caff:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14004cb06:	ins    DWORD PTR es:[rdi],dx
   14004cb07:	add    BYTE PTR [rdi+0x0],dl
   14004cb0a:	pop    rdi
   14004cb0b:	pop    rdi
   14004cb0c:	rex.XB pop r15
   14004cb0e:	jae    0x14004cb80
   14004cb10:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14004cb14:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14004cb1b:	ins    BYTE PTR es:[rdi],dx
   14004cb1c:	gs jb  0x14004cb1f
   14004cb1f:	add    BYTE PTR [rdx+0x63775f03],al
   14004cb25:	ins    DWORD PTR es:[rdi],dx
   14004cb26:	fs ins BYTE PTR es:[rdi],dx
   14004cb28:	outs   dx,BYTE PTR ds:[rsi]
   14004cb29:	add    BYTE PTR [rdi],ah
   14004cb2b:	add    DWORD PTR [rdi+0x66],ebx
   14004cb2e:	ins    DWORD PTR es:[rdi],dx
   14004cb2f:	outs   dx,DWORD PTR ds:[rsi]
   14004cb30:	fs add BYTE PTR gs:[rax],al
   14004cb34:	rol    BYTE PTR [rax],cl
   14004cb36:	pop    rdi
   14004cb37:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14004cb3a:	ins    DWORD PTR es:[rdi],dx
   14004cb3b:	outs   dx,DWORD PTR ds:[rsi]
   14004cb3c:	fs add BYTE PTR gs:[rax],al
   14004cb40:	(bad)  
   14004cb41:	add    BYTE PTR [rdi],bh
   14004cb43:	je     0x14004cbaa
   14004cb45:	jb     0x14004cbb4
   14004cb47:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14004cb4e:	pop    rcx
   14004cb4f:	pop    r8
   14004cb51:	pop    rax
   14004cb52:	pop    rdx
   14004cb53:	add    BYTE PTR [rbp+0x73],ch
   14004cb56:	jbe    0x14004cbbb
   14004cb58:	jb     0x14004cbce
   14004cb5a:	cs fs ins BYTE PTR es:[rdi],dx
   14004cb5d:	ins    BYTE PTR es:[rdi],dx
   14004cb5e:	add    BYTE PTR [rax],al
   14004cb60:	adc    al,BYTE PTR [rax]
   14004cb62:	(bad)  
   14004cb63:	(bad)  
   14004cb64:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14004cb68:	gs pop rdi
   14004cb6a:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14004cb71:	rex.RB
   14004cb72:	rex.B
   14004cb73:	rex.B
   14004cb74:	rex pop rax
   14004cb76:	pop    rdx
   14004cb77:	add    dh,ah
   14004cb79:	add    DWORD PTR [rdi+0x6c],ebx
   14004cb7c:	outs   dx,DWORD PTR ds:[rsi]
   14004cb7d:	movsxd ebp,DWORD PTR [rbx+0x0]
   14004cb80:	add    ebx,DWORD PTR [r15+0x75]
   14004cb84:	outs   dx,BYTE PTR ds:[rsi]
   14004cb85:	ins    BYTE PTR es:[rdi],dx
   14004cb86:	outs   dx,DWORD PTR ds:[rsi]
   14004cb87:	movsxd ebp,DWORD PTR [rbx+0x0]
   14004cb8a:	jnp    0x14004cb8c
   14004cb8c:	pop    rdi
   14004cb8d:	pop    rdi
   14004cb8e:	fs ins BYTE PTR es:[rdi],dx
   14004cb90:	ins    BYTE PTR es:[rdi],dx
   14004cb91:	outs   dx,DWORD PTR ds:[rsi]
   14004cb92:	outs   dx,BYTE PTR ds:[rsi]
   14004cb93:	gs js  0x14004cbff
   14004cb96:	je     0x14004cb98
   14004cb98:	nop
   14004cb99:	add    bl,BYTE PTR [rdi+0x6f]
   14004cb9c:	outs   dx,BYTE PTR ds:[rsi]
   14004cb9d:	gs js  0x14004cc09
   14004cba0:	je     0x14004cba2
   14004cba2:	add    eax,0x72655f01
   14004cba7:	jb     0x14004cc17
   14004cba9:	outs   dx,DWORD PTR ds:[rsi]
   14004cbaa:	add    BYTE PTR [rax],al
   14004cbac:	test   eax,0x61657204
   14004cbb1:	ins    BYTE PTR es:[rdi],dx
   14004cbb2:	ins    BYTE PTR es:[rdi],dx
   14004cbb3:	outs   dx,DWORD PTR ds:[rsi]
   14004cbb4:	movsxd eax,DWORD PTR [rax]
   14004cbb6:	cmp    eax,DWORD PTR [rax]
   14004cbb8:	rex.RB je 0x14004cc32
   14004cbbb:	rex.RB jbe 0x14004cc23
   14004cbbe:	outs   dx,BYTE PTR ds:[rsi]
   14004cbbf:	je     0x14004cc16
   14004cbc1:	outs   dx,BYTE PTR ds:[rsi]
   14004cbc2:	jb     0x14004cc29
   14004cbc4:	imul   esi,DWORD PTR [ebx+0x74],0x7265
   14004cbcc:	cmp    DWORD PTR [rax],eax
   14004cbce:	rex.RB je 0x14004cc48
   14004cbd1:	rex.RB jbe 0x14004cc39
   14004cbd4:	outs   dx,BYTE PTR ds:[rsi]
   14004cbd5:	je     0x14004cc29
   14004cbd7:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7265
   14004cbe0:	cmp    al,BYTE PTR [rax]
   14004cbe2:	rex.RB je 0x14004cc5c
   14004cbe5:	rex.RB jbe 0x14004cc4d
   14004cbe8:	outs   dx,BYTE PTR ds:[rsi]
   14004cbe9:	je     0x14004cc3e
   14004cbeb:	gs je  0x14004cc37
   14004cbee:	outs   dx,BYTE PTR ds:[rsi]
   14004cbef:	outs   dx,WORD PTR ds:[rsi]
   14004cbf1:	jb     0x14004cc60
   14004cbf3:	(bad)  
   14004cbf4:	je     0x14004cc5f
   14004cbf6:	outs   dx,DWORD PTR ds:[rsi]
   14004cbf7:	outs   dx,BYTE PTR ds:[rsi]
   14004cbf8:	add    BYTE PTR [rax],al
   14004cbfa:	rex.XB add BYTE PTR [r13+0x74],al
   14004cbfe:	ja     0x14004cc45
   14004cc00:	jbe    0x14004cc67
   14004cc02:	outs   dx,BYTE PTR ds:[rsi]
   14004cc03:	je     0x14004cc5c
   14004cc05:	jb     0x14004cc70
   14004cc07:	je     0x14004cc6e
   14004cc09:	push   rsp
   14004cc0a:	jb     0x14004cc6d
   14004cc0c:	outs   dx,BYTE PTR ds:[rsi]
   14004cc0d:	jae    0x14004cc75
   14004cc0f:	gs jb  0x14004cc12
   14004cc12:	add    BYTE PTR ss:[rbp+0x74],al
   14004cc16:	ja     0x14004cc5d
   14004cc18:	jbe    0x14004cc7f
   14004cc1a:	outs   dx,BYTE PTR ds:[rsi]
   14004cc1b:	je     0x14004cc5e
   14004cc1d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14004cc21:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6e6f4364
   14004cc29:	je     0x14004cc9d
   14004cc2b:	outs   dx,DWORD PTR ds:[rsi]
   14004cc2c:	ins    BYTE PTR es:[rdi],dx
   14004cc2d:	add    BYTE PTR [rax+rax*1],bh
   14004cc30:	rex.RB je 0x14004ccaa
   14004cc33:	rex.RB jbe 0x14004cc9b
   14004cc36:	outs   dx,BYTE PTR ds:[rsi]
   14004cc37:	je     0x14004cc90
   14004cc39:	jb     0x14004cca4
   14004cc3b:	je     0x14004cca2
   14004cc3d:	add    BYTE PTR [rax],ah
   14004cc3f:	(bad)  
   14004cc40:	push   rdi
   14004cc41:	imul   ebp,DWORD PTR [rsi+0x53],0x64416d71
   14004cc48:	fs push rsp
   14004cc4a:	outs   dx,DWORD PTR ds:[rsi]
   14004cc4b:	push   rbx
   14004cc4c:	je     0x14004ccc0
   14004cc4e:	gs (bad) 
   14004cc50:	ins    DWORD PTR es:[rdi],dx
   14004cc51:	add    dh,al
   14004cc53:	add    dl,BYTE PTR [rdx+0x74]
   14004cc56:	ins    BYTE PTR es:[rdi],dx
   14004cc57:	rex.XB (bad) 
   14004cc59:	jo     0x14004cccf
   14004cc5b:	jne    0x14004cccf
   14004cc5d:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14004cc60:	outs   dx,BYTE PTR ds:[rsi]
   14004cc61:	je     0x14004ccc8
   14004cc63:	js     0x14004ccd9
   14004cc65:	add    BYTE PTR [rdi+0x4],dh
   14004cc68:	push   rdx
   14004cc69:	je     0x14004ccd7
   14004cc6b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004cc6d:	outs   dx,DWORD PTR ds:[rsi]
   14004cc6e:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14004cc72:	jne    0x14004cce2
   14004cc74:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004cc78:	outs   dx,BYTE PTR ds:[rsi]
   14004cc79:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004cc7b:	je     0x14004ccef
   14004cc7d:	jns    0x14004cc7f
   14004cc7f:	add    BYTE PTR [rbx+0x6c745205],cl
   14004cc85:	push   rsi
   14004cc86:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14004cc8d:	outs   dx,BYTE PTR ds:[rsi]
   14004cc8e:	ja     0x14004ccf9
   14004cc90:	outs   dx,BYTE PTR ds:[rsi]
   14004cc91:	add    BYTE PTR fs:[rax],al
   14004cc94:	outs   dx,BYTE PTR ds:[rsi]
   14004cc95:	je     0x14004ccfb
   14004cc97:	ins    BYTE PTR es:[rdi],dx
   14004cc98:	ins    BYTE PTR es:[rdi],dx
   14004cc99:	cs fs ins BYTE PTR es:[rdi],dx
   14004cc9c:	ins    BYTE PTR es:[rdi],dx
   14004cc9d:	add    BYTE PTR [rax],bl
   14004cc9f:	add    BYTE PTR [rcx+0x6e],cl
   14004cca2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004ccaa:	rex.XB jb 0x14004cd16
   14004ccad:	je     0x14004cd18
   14004ccaf:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004ccb2:	push   rbx
   14004ccb3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004ccb8:	outs   dx,BYTE PTR ds:[rsi]
   14004ccb9:	add    BYTE PTR [rdi],cl
   14004ccbb:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14004ccbf:	gs je  0x14004cd27
   14004ccc2:	rex.XB jb 0x14004cd2e
   14004ccc5:	je     0x14004cd30
   14004ccc7:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004ccca:	push   rbx
   14004cccb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004ccd0:	outs   dx,BYTE PTR ds:[rsi]
   14004ccd1:	add    BYTE PTR [rcx],dl
   14004ccd3:	add    BYTE PTR [rbp+0x6e],al
   14004ccd6:	je     0x14004cd3d
   14004ccd8:	jb     0x14004cd1d
   14004ccda:	jb     0x14004cd45
   14004ccdc:	je     0x14004cd47
   14004ccde:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004cce1:	push   rbx
   14004cce2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004cce7:	outs   dx,BYTE PTR ds:[rsi]
   14004cce8:	add    BYTE PTR [rax],al
   14004ccea:	sbb    eax,0x61654c00
   14004ccef:	jbe    0x14004cd56
   14004ccf1:	rex.XB jb 0x14004cd5d
   14004ccf4:	je     0x14004cd5f
   14004ccf6:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004ccf9:	push   rbx
   14004ccfa:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004ccff:	outs   dx,BYTE PTR ds:[rsi]
   14004cd00:	add    BYTE PTR [rax],al
   14004cd02:	add    BYTE PTR [rax],al
   14004cd04:	rex.XB ins BYTE PTR es:[rdi],dx
   14004cd06:	outs   dx,DWORD PTR ds:[rsi]
   14004cd07:	jae    0x14004cd6e
   14004cd09:	rex.W (bad) 
   14004cd0b:	outs   dx,BYTE PTR ds:[rsi]
   14004cd0c:	fs ins BYTE PTR es:[rdi],dx
   14004cd0e:	add    BYTE PTR gs:[rip+0x74654700],al        # 0x1b46a1415
   14004cd15:	rex.WR (bad) 
   14004cd17:	jae    0x14004cd8d
   14004cd19:	rex.RB jb 0x14004cd8e
   14004cd1c:	outs   dx,DWORD PTR ds:[rsi]
   14004cd1d:	jb     0x14004cd1f
   14004cd1f:	add    BYTE PTR [rsi],al
   14004cd21:	add    BYTE PTR [rbx+0x72],al
   14004cd24:	gs (bad) 
   14004cd26:	je     0x14004cd8d
   14004cd28:	rex.RB jbe 0x14004cd90
   14004cd2b:	outs   dx,BYTE PTR ds:[rsi]
   14004cd2c:	je     0x14004cd85
   14004cd2e:	add    BYTE PTR [rax],al
   14004cd30:	sub    DWORD PTR [rax],eax
   14004cd32:	push   rbx
   14004cd33:	gs je  0x14004cd7b
   14004cd36:	jbe    0x14004cd9d
   14004cd38:	outs   dx,BYTE PTR ds:[rsi]
   14004cd39:	je     0x14004cd3b
   14004cd3b:	add    BYTE PTR [rax],ah
   14004cd3d:	add    BYTE PTR [rdi+0x70],cl
   14004cd40:	outs   dx,BYTE PTR gs:[rsi]
   14004cd42:	rex.WRB jne 0x14004cdb9
   14004cd45:	gs js  0x14004cd9f
   14004cd48:	add    BYTE PTR [rax],al
   14004cd4a:	add    BYTE PTR ss:[rdi+0x61],dl
   14004cd4e:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14004cd56:	ins    BYTE PTR es:[edi],dx
   14004cd58:	gs rex.WRXB (bad) 
   14004cd5b:	push   0x65
   14004cd5d:	movsxd esi,DWORD PTR [rax+rax*1+0xb]
   14004cd61:	add    BYTE PTR [rsi+0x72],al
   14004cd64:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14004cd6e:	or     BYTE PTR [rax],al
   14004cd70:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14004cd72:	jb     0x14004cde1
   14004cd74:	(bad)  
   14004cd75:	je     0x14004cdc4
   14004cd77:	gs jae 0x14004cded
   14004cd7a:	(bad)  
   14004cd7b:	addr32 gs push rdi
   14004cd7e:	add    BYTE PTR [rax],al
   14004cd80:	cmp    eax,0x74654700
   14004cd85:	push   rbx
   14004cd86:	imul   esp,DWORD PTR [rsp+rcx*2+0x65],0x6874676e
   14004cd8e:	push   rdx
   14004cd8f:	gs jno 0x14004ce07
   14004cd92:	imul   esi,DWORD PTR [rdx+0x65],0x47000064
   14004cd99:	add    BYTE PTR [rcx+0x6e],cl
   14004cd9c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004cda4:	push   rbx
   14004cda5:	imul   esp,DWORD PTR [rax+rax*1+0x3e],0x74654700
   14004cdad:	push   rbx
   14004cdae:	imul   esp,DWORD PTR [rbx+rdx*2+0x75],0x74754162
   14004cdb6:	push   0x7469726f
   14004cdbb:	jns    0x14004cdbd
   14004cdbd:	add    BYTE PTR [rsi],bl
   14004cdbf:	add    BYTE PTR [rbx+0x6f],al
   14004cdc2:	jo     0x14004ce3d
   14004cdc4:	push   rbx
   14004cdc5:	imul   esp,DWORD PTR [rax+rax*1+0x33],0x74654700
   14004cdcd:	rex.WR
   14004cdce:	outs   dx,BYTE PTR gs:[rsi]
   14004cdd0:	addr32 je 0x14004ce3b
   14004cdd3:	push   rbx
   14004cdd4:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x7349004b
   14004cddc:	push   rsi
   14004cddd:	(bad)  
   14004cdde:	ins    BYTE PTR es:[rdi],dx
   14004cddf:	imul   esp,DWORD PTR [rbx+rdx*2+0x69],0x2a000064
   14004cde7:	add    BYTE PTR [rbp+0x71],al
   14004cdea:	jne    0x14004ce4d
   14004cdec:	ins    BYTE PTR es:[rdi],dx
   14004cded:	push   rbx
   14004cdee:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6e490045
   14004cdf6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004cdfe:	movsxd ebp,DWORD PTR [r8+rax*1+0xd]
   14004ce03:	add    BYTE PTR [rcx+0x64],al
   14004ce06:	movsxd esp,DWORD PTR fs:[r13+0x0]
   14004ce0b:	add    BYTE PTR [rsi],ch
   14004ce0d:	add    BYTE PTR [rdi+0x65],al
   14004ce10:	je     0x14004ce53
   14004ce12:	movsxd ebp,DWORD PTR [rcx+rcx*2+0x6e]
   14004ce16:	outs   dx,WORD PTR ds:[rsi]
   14004ce18:	jb     0x14004ce87
   14004ce1a:	(bad)  
   14004ce1b:	je     0x14004ce86
   14004ce1d:	outs   dx,DWORD PTR ds:[rsi]
   14004ce1e:	outs   dx,BYTE PTR ds:[rsi]
   14004ce1f:	add    BYTE PTR [rcx],bh
   14004ce21:	add    BYTE PTR [rdi+0x65],al
   14004ce24:	je     0x14004ce79
   14004ce26:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004ce2a:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14004ce32:	imul   esi,DWORD PTR [rax+0x74],0x774f726f
   14004ce39:	outs   dx,BYTE PTR ds:[rsi]
   14004ce3a:	gs jb  0x14004ce3d
   14004ce3d:	add    BYTE PTR [rdx+0x0],ah
   14004ce40:	push   rbx
   14004ce41:	gs je  0x14004ce97
   14004ce44:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004ce48:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14004ce50:	imul   esi,DWORD PTR [rax+0x74],0x774f726f
   14004ce57:	outs   dx,BYTE PTR ds:[rsi]
   14004ce58:	gs jb  0x14004ce5b
   14004ce5b:	add    BYTE PTR [rdi],dh
   14004ce5d:	add    BYTE PTR [rdi+0x65],al
   14004ce60:	je     0x14004ceb5
   14004ce62:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004ce66:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14004ce6e:	imul   esi,DWORD PTR [rax+0x74],0x7247726f
   14004ce75:	outs   dx,DWORD PTR ds:[rsi]
   14004ce76:	jne    0x14004cee8
   14004ce78:	add    BYTE PTR [rax],al
   14004ce7a:	(bad)  
   14004ce7b:	add    BYTE PTR [rbx+0x65],dl
   14004ce7e:	je     0x14004ced3
   14004ce80:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004ce84:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14004ce8c:	imul   esi,DWORD PTR [rax+0x74],0x7247726f
   14004ce93:	outs   dx,DWORD PTR ds:[rsi]
   14004ce94:	jne    0x14004cf06
   14004ce96:	add    BYTE PTR [rax],al
   14004ce98:	add    BYTE PTR ss:[rdi+0x65],al
   14004ce9c:	je     0x14004cef1
   14004ce9e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004cea2:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14004ceaa:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   14004ceb1:	movsxd ebp,DWORD PTR [rax+rax*1+0x60]
   14004ceb5:	add    BYTE PTR [rbx+0x65],dl
   14004ceb8:	je     0x14004cf0d
   14004ceba:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004cebe:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14004cec6:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   14004cecd:	movsxd ebp,DWORD PTR [rax+rax*1+0x3b]
   14004ced1:	add    BYTE PTR [rdi+0x65],al
   14004ced4:	je     0x14004cf29
   14004ced6:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004ceda:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14004cee2:	imul   esi,DWORD PTR [rax+0x74],0x6153726f
   14004cee9:	movsxd ebp,DWORD PTR [rax+rax*1+0x35]
   14004ceed:	add    BYTE PTR [rdi+0x65],al
   14004cef0:	je     0x14004cf45
   14004cef2:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004cef6:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14004cefe:	imul   esi,DWORD PTR [rax+0x74],0x6f43726f
   14004cf05:	outs   dx,BYTE PTR ds:[rsi]
   14004cf06:	je     0x14004cf7a
   14004cf08:	outs   dx,DWORD PTR ds:[rsi]
   14004cf09:	ins    BYTE PTR es:[rdi],dx
   14004cf0a:	add    BYTE PTR [rax],al
   14004cf0c:	rex.WRB add BYTE PTR [r13+0x61],r9b
   14004cf10:	imul   esp,DWORD PTR [rbp+0x41],0x62
   14004cf14:	jae    0x14004cf85
   14004cf16:	ins    BYTE PTR es:[rdi],dx
   14004cf17:	jne    0x14004cf8d
   14004cf19:	gs push rbx
   14004cf1b:	add    BYTE PTR [rax],r8b
   14004cf1e:	rex.RX add BYTE PTR [rcx+0x6e],r9b
   14004cf22:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004cf2a:	push   rbx
   14004cf2b:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004cf2f:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14004cf37:	imul   esi,DWORD PTR [rax+0x74],0x726f
   14004cf3e:	add    BYTE PTR [rdi+0x65],al
   14004cf42:	je     0x14004cf98
   14004cf44:	outs   dx,DWORD PTR ds:[rsi]
   14004cf45:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14004cf49:	outs   dx,BYTE PTR ds:[rsi]
   14004cf4a:	outs   dx,WORD PTR ds:[rsi]
   14004cf4c:	jb     0x14004cfbb
   14004cf4e:	(bad)  
   14004cf4f:	je     0x14004cfba
   14004cf51:	outs   dx,DWORD PTR ds:[rsi]
   14004cf52:	outs   dx,BYTE PTR ds:[rsi]
   14004cf53:	add    BYTE PTR [rax+rax*1],cl
   14004cf56:	rex.RXB
   14004cf57:	gs je  0x14004cf9d
   14004cf5a:	jne    0x14004cfce
   14004cf5c:	jb     0x14004cfc3
   14004cf5e:	outs   dx,BYTE PTR ds:[rsi]
   14004cf5f:	je     0x14004cfb1
   14004cf61:	jb     0x14004cfd2
   14004cf63:	movsxd esp,DWORD PTR [rbp+0x73]
   14004cf66:	jae    0x14004cf68
   14004cf68:	xor    BYTE PTR [rax],al
   14004cf6a:	rex.WRXB jo 0x14004cfd2
   14004cf6d:	outs   dx,BYTE PTR ds:[rsi]
   14004cf6e:	push   rax
   14004cf6f:	jb     0x14004cfe0
   14004cf71:	movsxd esp,DWORD PTR [rbp+0x73]
   14004cf74:	jae    0x14004cfca
   14004cf76:	outs   dx,DWORD PTR ds:[rsi]
   14004cf77:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14004cf7b:	add    BYTE PTR [rax],dl
   14004cf7d:	add    BYTE PTR [rdi+0x65],al
   14004cf80:	je     0x14004cfc5
   14004cf82:	jne    0x14004cff6
   14004cf84:	jb     0x14004cfeb
   14004cf86:	outs   dx,BYTE PTR ds:[rsi]
   14004cf87:	je     0x14004cfdd
   14004cf89:	push   0x64616572
   14004cf8e:	add    BYTE PTR [rax],al
   14004cf90:	xor    al,BYTE PTR [rax]
   14004cf92:	rex.WRXB jo 0x14004cffa
   14004cf95:	outs   dx,BYTE PTR ds:[rsi]
   14004cf96:	push   rsp
   14004cf97:	push   0x64616572
   14004cf9c:	push   rsp
   14004cf9d:	outs   dx,DWORD PTR ds:[rsi]
   14004cf9e:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14004cfa2:	adc    al,0x0
   14004cfa4:	rex.RXB
   14004cfa5:	gs je  0x14004cff8
   14004cfa8:	jb     0x14004d019
   14004cfaa:	movsxd eax,DWORD PTR [rcx+0x64]
   14004cfad:	fs jb  0x14004d015
   14004cfb0:	jae    0x14004d025
   14004cfb2:	add    BYTE PTR [rax],al
   14004cfb4:	(bad)  
   14004cfb5:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14004cfb9:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14004cfc2:	js     0x14004d01b
   14004cfc4:	add    BYTE PTR [rax],al
   14004cfc6:	adc    DWORD PTR [rax],eax
   14004cfc8:	rex.RXB
   14004cfc9:	gs je  0x14004d00f
   14004cfcc:	jne    0x14004d040
   14004cfce:	jb     0x14004d035
   14004cfd0:	outs   dx,BYTE PTR ds:[rsi]
   14004cfd1:	je     0x14004d027
   14004cfd3:	push   0x64616572
   14004cfd8:	rex.WB
   14004cfd9:	add    BYTE PTR fs:[rax],al
   14004cfdc:	(bad)  
   14004cfdd:	add    BYTE PTR [rdx+0x61],dl
   14004cfe0:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14004cfe7:	jo     0x14004d05d
   14004cfe9:	imul   ebp,DWORD PTR [rdi+0x6e],0x120000
   14004cff0:	rex.RXB
   14004cff1:	gs je  0x14004d041
   14004cff4:	outs   dx,DWORD PTR ds:[rsi]
   14004cff5:	fs jne 0x14004d064
   14004cff8:	gs rex.W (bad) 
   14004cffb:	outs   dx,BYTE PTR ds:[rsi]
   14004cffc:	fs ins BYTE PTR es:[rdi],dx
   14004cffe:	gs rex.RB js 0x14004d059
   14004d002:	add    BYTE PTR [rax],al
   14004d004:	(bad)  
   14004d005:	add    BYTE PTR [rdi+0x65],al
   14004d008:	je     0x14004d057
   14004d00a:	outs   dx,DWORD PTR ds:[rsi]
   14004d00b:	fs jne 0x14004d07a
   14004d00e:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14004d018:	add    BYTE PTR [rax],al
   14004d01a:	adc    eax,DWORD PTR [rax]
   14004d01c:	rex.RXB
   14004d01d:	gs je  0x14004d06d
   14004d020:	outs   dx,DWORD PTR ds:[rsi]
   14004d021:	fs jne 0x14004d090
   14004d024:	gs rex.W (bad) 
   14004d027:	outs   dx,BYTE PTR ds:[rsi]
   14004d028:	fs ins BYTE PTR es:[rdi],dx
   14004d02a:	gs push rdi
   14004d02c:	add    BYTE PTR [rax],al
   14004d02e:	(bad)  
   14004d02f:	add    BYTE PTR [rdi+0x75],cl
   14004d032:	je     0x14004d0a4
   14004d034:	jne    0x14004d0aa
   14004d036:	rex.R
   14004d037:	gs (bad) 
   14004d039:	jne    0x14004d0a2
   14004d03b:	push   rbx
   14004d03c:	je     0x14004d0b0
   14004d03e:	imul   ebp,DWORD PTR [rsi+0x67],0x57
   14004d045:	add    BYTE PTR [rcx+0x63],al
   14004d048:	jno    0x14004d0bf
   14004d04a:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14004d051:	outs   dx,DWORD PTR ds:[rsi]
   14004d052:	movsxd ebp,DWORD PTR [rbx+0x45]
   14004d055:	js     0x14004d0ba
   14004d057:	ins    BYTE PTR es:[rdi],dx
   14004d058:	jne    0x14004d0cd
   14004d05a:	imul   esi,DWORD PTR [rsi+0x65],0x52001e00
   14004d061:	gs addr32 rex.WRXB jo 0x14004d0cb
   14004d066:	outs   dx,BYTE PTR ds:[rsi]
   14004d067:	rex.WXB
   14004d068:	gs jns 0x14004d0b0
   14004d06b:	js     0x14004d0c4
   14004d06d:	add    BYTE PTR [rax],al
   14004d06f:	add    BYTE PTR [rdx+0x65],dl
   14004d072:	rex.XB ins BYTE PTR es:[edi],dx
   14004d075:	outs   dx,DWORD PTR ds:[rsi]
   14004d076:	jae    0x14004d0dd
   14004d078:	rex.WXB
   14004d079:	gs jns 0x14004d07c
   14004d07c:	and    eax,DWORD PTR [rax]
   14004d07e:	push   rdx
   14004d07f:	gs addr32 push rcx
   14004d082:	jne    0x14004d0e9
   14004d084:	jb     0x14004d0ff
   14004d086:	push   rsi
   14004d087:	(bad)  
   14004d088:	ins    BYTE PTR es:[rdi],dx
   14004d089:	jne    0x14004d0f0
   14004d08b:	rex.RB js 0x14004d0e5
   14004d08e:	add    BYTE PTR [rax],al
   14004d090:	add    BYTE PTR ds:[rbx+0x65],dl
   14004d094:	je     0x14004d0e6
   14004d096:	jb     0x14004d107
   14004d098:	movsxd esp,DWORD PTR [rbp+0x73]
   14004d09b:	jae    0x14004d0f0
   14004d09d:	push   0x6f647475
   14004d0a2:	ja     0x14004d112
   14004d0a4:	push   rax
   14004d0a5:	(bad)  
   14004d0a6:	jb     0x14004d109
   14004d0a8:	ins    DWORD PTR es:[rdi],dx
   14004d0a9:	gs je  0x14004d111
   14004d0ac:	jb     0x14004d121
   14004d0ae:	add    BYTE PTR [rax],al
   14004d0b0:	or     al,BYTE PTR [rax]
   14004d0b2:	rex.W
   14004d0b3:	gs (bad) 
   14004d0b5:	jo     0x14004d10a
   14004d0b7:	gs je  0x14004d103
   14004d0ba:	outs   dx,BYTE PTR ds:[rsi]
   14004d0bb:	outs   dx,WORD PTR ds:[rsi]
   14004d0bd:	jb     0x14004d12c
   14004d0bf:	(bad)  
   14004d0c0:	je     0x14004d12b
   14004d0c2:	outs   dx,DWORD PTR ds:[rsi]
   14004d0c3:	outs   dx,BYTE PTR ds:[rsi]
   14004d0c4:	add    BYTE PTR [rax],al
   14004d0c6:	sldt   WORD PTR [rdi+0x65]
   14004d0ca:	je     0x14004d119
   14004d0cc:	outs   dx,DWORD PTR ds:[rsi]
   14004d0cd:	fs jne 0x14004d13c
   14004d0d0:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14004d0da:	add    BYTE PTR [rax],al
   14004d0dc:	adc    eax,DWORD PTR [rax]
   14004d0de:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004d0e0:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x65426563
   14004d0e8:	imul   ebp,DWORD PTR [esi+0x49],0x6974696e
   14004d0f0:	(bad)  
   14004d0f1:	ins    BYTE PTR es:[rdi],dx
   14004d0f2:	imul   edi,DWORD PTR [rdx+0x65],0x47000500
   14004d0f9:	gs je  0x14004d13f
   14004d0fc:	outs   dx,DWORD PTR ds:[rsi]
   14004d0fd:	ins    DWORD PTR es:[rdi],dx
   14004d0fe:	ins    DWORD PTR es:[rdi],dx
   14004d0ff:	(bad)  
   14004d100:	outs   dx,BYTE PTR ds:[rsi]
   14004d101:	imul   r13,QWORD PTR fs:[rsi+0x65],0x240057
   14004d10a:	push   rdx
   14004d10b:	gs ins BYTE PTR es:[rdi],dx
   14004d10d:	gs (bad) 
   14004d10f:	jae    0x14004d176
   14004d111:	push   rbx
   14004d112:	push   rdx
   14004d113:	push   rdi
   14004d114:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004d116:	movsxd ebp,DWORD PTR [rbx+0x45]
   14004d119:	js     0x14004d17e
   14004d11b:	ins    BYTE PTR es:[rdi],dx
   14004d11c:	jne    0x14004d191
   14004d11e:	imul   esi,DWORD PTR [rsi+0x65],0x49001400
   14004d125:	outs   dx,BYTE PTR ds:[rsi]
   14004d126:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x6f436563
   14004d12e:	ins    DWORD PTR es:[rdi],dx
   14004d12f:	jo     0x14004d19d
   14004d131:	gs je  0x14004d199
   14004d134:	add    BYTE PTR [rax],al
   14004d136:	(bad)  
   14004d137:	add    BYTE PTR [rdi+0x70],cl
   14004d13a:	outs   dx,BYTE PTR gs:[rsi]
   14004d13c:	rex.RB jbe 0x14004d1a4
   14004d13f:	outs   dx,BYTE PTR ds:[rsi]
   14004d140:	je     0x14004d199
   14004d142:	add    BYTE PTR [rax],al
   14004d144:	xor    eax,DWORD PTR [rax]
   14004d146:	push   rax
   14004d147:	jb     0x14004d1b8
   14004d149:	movsxd esp,DWORD PTR [rbp+0x73]
   14004d14c:	jae    0x14004d197
   14004d14e:	fs push rsp
   14004d150:	outs   dx,DWORD PTR ds:[rsi]
   14004d151:	push   rbx
   14004d152:	gs jae 0x14004d1c8
   14004d155:	imul   ebp,DWORD PTR [rdi+0x6e],0x6449
   14004d15c:	or     eax,0x74654700
   14004d161:	rex.XB jne 0x14004d1d6
   14004d164:	jb     0x14004d1cb
   14004d166:	outs   dx,BYTE PTR ds:[rsi]
   14004d167:	je     0x14004d1b9
   14004d169:	jb     0x14004d1da
   14004d16b:	movsxd esp,DWORD PTR [rbp+0x73]
   14004d16e:	jae    0x14004d1b9
   14004d170:	add    BYTE PTR fs:[rip+0x656c5300],ch        # 0x1a5712477
   14004d177:	gs jo  0x14004d17a
   14004d17a:	sbb    BYTE PTR [rax],al
   14004d17c:	rex.RXB
   14004d17d:	gs je  0x14004d1d4
   14004d180:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14004d187:	je     0x14004d189
   14004d189:	add    BYTE PTR [rdx],al
   14004d18b:	add    BYTE PTR [rbx+0x6f],al
   14004d18e:	ins    DWORD PTR es:[rdi],dx
   14004d18f:	jo     0x14004d1f2
   14004d191:	jb     0x14004d1f8
   14004d193:	push   rbx
   14004d194:	je     0x14004d208
   14004d196:	imul   ebp,DWORD PTR [rsi+0x67],0x6000057
   14004d19d:	add    BYTE PTR [rbx+0x72],al
   14004d1a0:	gs (bad) 
   14004d1a2:	je     0x14004d209
   14004d1a4:	push   rsp
   14004d1a5:	push   0x64616572
   14004d1aa:	add    BYTE PTR [rax],al
   14004d1ac:	xor    eax,0x69615700
   14004d1b1:	je     0x14004d1f9
   14004d1b3:	outs   dx,DWORD PTR ds:[rsi]
   14004d1b4:	jb     0x14004d203
   14004d1b6:	jne    0x14004d224
   14004d1b8:	je     0x14004d223
   14004d1ba:	jo     0x14004d228
   14004d1bc:	gs rex.WRXB (bad) 
   14004d1bf:	push   0x65
   14004d1c1:	movsxd esi,DWORD PTR [rbx+rsi*2+0x45]
   14004d1c5:	js     0x14004d1c7
   14004d1c7:	add    BYTE PTR [rdi],ah
   14004d1c9:	add    BYTE PTR [rbp+rsi*2+0x70],al
   14004d1cd:	ins    BYTE PTR es:[rdi],dx
   14004d1ce:	imul   esp,DWORD PTR [rbx+0x61],0x6f546574
   14004d1d5:	imul   esp,DWORD PTR [rbp+0x6e],0x45
   14004d1d9:	js     0x14004d1db
   14004d1db:	add    BYTE PTR [rdx],al
   14004d1dd:	add    BYTE PTR [rbx+0x72],al
   14004d1e0:	gs (bad) 
   14004d1e2:	je     0x14004d249
   14004d1e4:	push   rax
   14004d1e5:	jb     0x14004d256
   14004d1e7:	movsxd esp,DWORD PTR [rbp+0x73]
   14004d1ea:	jae    0x14004d22d
   14004d1ec:	jae    0x14004d243
   14004d1ee:	jae    0x14004d255
   14004d1f0:	jb     0x14004d249
   14004d1f2:	add    BYTE PTR [rax],al
   14004d1f4:	adc    al,0x0
   14004d1f6:	push   rdx
   14004d1f7:	gs addr32 rex.RXB
   14004d1fa:	gs je  0x14004d253
   14004d1fd:	(bad)  
   14004d1fe:	ins    BYTE PTR es:[rdi],dx
   14004d1ff:	jne    0x14004d266
   14004d201:	push   rdi
   14004d202:	add    BYTE PTR [rax],al
   14004d204:	adc    eax,DWORD PTR [rax]
   14004d206:	rex.RXB
   14004d207:	gs je  0x14004d24f
   14004d20a:	js     0x14004d275
   14004d20c:	je     0x14004d251
   14004d20e:	outs   dx,DWORD PTR ds:[rsi]
   14004d20f:	fs gs push rax
   14004d212:	jb     0x14004d283
   14004d214:	movsxd esp,DWORD PTR [rbp+0x73]
   14004d217:	jae    0x14004d219
   14004d219:	add    BYTE PTR [rsi],al
   14004d21b:	add    BYTE PTR [rbx+0x72],al
   14004d21e:	gs (bad) 
   14004d220:	je     0x14004d287
   14004d222:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x47002e00
   14004d22b:	gs je  0x14004d274
   14004d22e:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x656d69
   14004d236:	(bad)  
   14004d237:	add    BYTE PTR [rdi+0x70],cl
   14004d23a:	outs   dx,BYTE PTR gs:[rsi]
   14004d23c:	push   rax
   14004d23d:	jb     0x14004d2ae
   14004d23f:	movsxd esp,DWORD PTR [rbp+0x73]
   14004d242:	jae    0x14004d244
   14004d244:	add    eax,DWORD PTR [rax]
   14004d246:	rex.WXB xor rsi,QWORD PTR [r10]
   14004d249:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004d24b:	jne    0x14004d2ba
   14004d24d:	push   rax
   14004d24e:	jb     0x14004d2bf
   14004d250:	movsxd esp,DWORD PTR [rbp+0x73]
   14004d253:	jae    0x14004d2a2
   14004d255:	outs   dx,DWORD PTR ds:[rsi]
   14004d256:	fs jne 0x14004d2c5
   14004d259:	gs jae 0x14004d25c
   14004d25c:	or     al,BYTE PTR [rax]
   14004d25e:	rex.WXB xor rsi,QWORD PTR [r10]
   14004d261:	rex.RXB
   14004d262:	gs je  0x14004d2b2
   14004d265:	outs   dx,DWORD PTR ds:[rsi]
   14004d266:	fs jne 0x14004d2d5
   14004d269:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x45656d61
   14004d273:	js     0x14004d2cc
   14004d275:	add    BYTE PTR [rcx],cl
   14004d277:	add    BYTE PTR [rbx+0x33],cl
   14004d27a:	xor    al,BYTE PTR [rdi+0x65]
   14004d27d:	je     0x14004d2cc
   14004d27f:	outs   dx,DWORD PTR ds:[rsi]
   14004d280:	fs jne 0x14004d2ef
   14004d283:	gs rex.X (bad) 
   14004d286:	jae    0x14004d2ed
   14004d288:	rex.WRX (bad) 
   14004d28a:	ins    DWORD PTR es:[rdi],dx
   14004d28b:	gs push rdi
   14004d28d:	add    BYTE PTR [rcx],al
   14004d28f:	add    BYTE PTR [rdi+0x65],al
   14004d292:	je     0x14004d2da
   14004d294:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   14004d29c:	outs   dx,DWORD PTR ds:[rsi]
   14004d29d:	outs   dx,BYTE PTR ds:[rsi]
   14004d29e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004d2a0:	outs   dx,WORD PTR ds:[rsi]
   14004d2a2:	push   rbx
   14004d2a3:	imul   edi,DWORD PTR [rdx+0x65],0x577845
   14004d2aa:	add    BYTE PTR [rax],al
   14004d2ac:	rex.RXB
   14004d2ad:	gs je  0x14004d2f6
   14004d2b0:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   14004d2b8:	outs   dx,DWORD PTR ds:[rsi]
   14004d2b9:	outs   dx,BYTE PTR ds:[rsi]
   14004d2ba:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004d2bc:	outs   dx,WORD PTR ds:[rsi]
   14004d2be:	rex.RB js 0x14004d318
   14004d2c1:	add    BYTE PTR [rip+0x72655600],al        # 0x1b26a28c7
   14004d2c7:	push   rcx
   14004d2c8:	jne    0x14004d32f
   14004d2ca:	jb     0x14004d345
   14004d2cc:	push   rsi
   14004d2cd:	(bad)  
   14004d2ce:	ins    BYTE PTR es:[rdi],dx
   14004d2cf:	jne    0x14004d336
   14004d2d1:	push   rdi
   14004d2d2:	add    BYTE PTR [rax],al
   14004d2d4:	add    DWORD PTR [rax],eax
   14004d2d6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004d2d8:	ins    DWORD PTR es:[rdi],dx
   14004d2d9:	jo     0x14004d33c
   14004d2db:	jb     0x14004d342
   14004d2dd:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   14004d2e6:	sbb    BYTE PTR [rax],al
   14004d2e8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004d2ea:	(bad)  
   14004d2eb:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14004d2f4:	add    BYTE PTR [rax],al
   14004d2f6:	or     eax,DWORD PTR [rax]
   14004d2f8:	rex.W
   14004d2f9:	gs (bad) 
   14004d2fb:	jo     0x14004d350
   14004d2fd:	imul   edi,DWORD PTR [rdx+0x65],0x90000
   14004d304:	rex.W
   14004d305:	gs (bad) 
   14004d307:	jo     0x14004d35b
   14004d309:	gs rex.B ins BYTE PTR es:[rdi],dx
   14004d30c:	ins    BYTE PTR es:[rdi],dx
   14004d30d:	outs   dx,DWORD PTR ds:[rsi]
   14004d30e:	movsxd eax,DWORD PTR [rax]
   14004d310:	(bad)  
   14004d311:	add    BYTE PTR [rax+0x65],cl
   14004d314:	(bad)  
   14004d315:	jo     0x14004d35d
   14004d317:	jb     0x14004d37e
   14004d319:	add    BYTE PTR gs:[rax],al
   14004d31c:	add    al,BYTE PTR [rax]
   14004d31e:	rex.W
   14004d31f:	gs (bad) 
   14004d321:	jo     0x14004d364
   14004d323:	ins    BYTE PTR es:[rdi],dx
   14004d324:	ins    BYTE PTR es:[rdi],dx
   14004d325:	outs   dx,DWORD PTR ds:[rsi]
   14004d326:	movsxd eax,DWORD PTR [rax]
   14004d328:	add    BYTE PTR [rax],al
   14004d32a:	rex.RXB
   14004d32b:	gs je  0x14004d37e
   14004d32e:	jb     0x14004d39f
   14004d330:	movsxd esp,DWORD PTR [rbp+0x73]
   14004d333:	jae    0x14004d37d
   14004d335:	gs (bad) 
   14004d337:	jo     0x14004d339
   14004d339:	add    BYTE PTR [rip+0x61654800],al        # 0x1a16a1b3f
   14004d33f:	jo     0x14004d385
   14004d341:	gs jae 0x14004d3b8
   14004d344:	jb     0x14004d3b5
   14004d346:	jns    0x14004d348
   14004d348:	and    BYTE PTR [rax],al
   14004d34a:	rex.RXB
   14004d34b:	gs je  0x14004d3a1
   14004d34e:	je     0x14004d3b1
   14004d350:	jb     0x14004d3c6
   14004d352:	jne    0x14004d3c4
   14004d354:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004d356:	outs   dx,WORD PTR ds:[rsi]
   14004d358:	push   rdi
   14004d359:	add    BYTE PTR [rcx],dl
   14004d35b:	add    BYTE PTR [rbp+0x6e],dl
   14004d35e:	push   0x6c646e61
   14004d363:	gs fs rex.RB js 0x14004d3cb
   14004d368:	gs jo  0x14004d3df
   14004d36b:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14004d372:	gs jb  0x14004d375
   14004d375:	add    BYTE PTR [rdi],cl
   14004d377:	add    BYTE PTR [rbx+0x65],dl
   14004d37a:	je     0x14004d3d1
   14004d37c:	outs   dx,BYTE PTR ds:[rsi]
   14004d37d:	push   0x6c646e61
   14004d382:	gs fs rex.RB js 0x14004d3ea
   14004d387:	gs jo  0x14004d3fe
   14004d38a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14004d391:	gs jb  0x14004d394
   14004d394:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14004d399:	ins    DWORD PTR es:[rdi],dx
   14004d39a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14004d3a1:	outs   dx,DWORD PTR ds:[rsi]
   14004d3a2:	movsxd esp,DWORD PTR [rbp+0x73]
   14004d3a5:	jae    0x14004d3a7
   14004d3a7:	add    BYTE PTR [rax],al
   14004d3a9:	add    BYTE PTR [rcx+0x75],dl
   14004d3ac:	gs jb  0x14004d428
   14004d3af:	push   rax
   14004d3b0:	gs jb  0x14004d419
   14004d3b3:	outs   dx,DWORD PTR ds:[rsi]
   14004d3b4:	jb     0x14004d423
   14004d3b6:	(bad)  
   14004d3b7:	outs   dx,BYTE PTR ds:[rsi]
   14004d3b8:	movsxd esp,DWORD PTR [rbp+0x43]
   14004d3bb:	outs   dx,DWORD PTR ds:[rsi]
   14004d3bc:	jne    0x14004d42c
   14004d3be:	je     0x14004d425
   14004d3c0:	jb     0x14004d3c2
   14004d3c2:	adc    al,0x0
   14004d3c4:	rex.RXB
   14004d3c5:	gs je  0x14004d41b
   14004d3c8:	jns    0x14004d43d
   14004d3ca:	je     0x14004d431
   14004d3cc:	ins    DWORD PTR es:[rdi],dx
   14004d3cd:	push   rsp
   14004d3ce:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14004d3d5:	ins    BYTE PTR es:[rdi],dx
   14004d3d6:	gs push rsp
   14004d3d8:	imul   ebp,DWORD PTR [rbp+0x65],0x4f000600
   14004d3df:	jne    0x14004d455
   14004d3e1:	jo     0x14004d458
   14004d3e3:	je     0x14004d429
   14004d3e5:	gs (bad) 
   14004d3e7:	jne    0x14004d450
   14004d3e9:	push   rbx
   14004d3ea:	je     0x14004d45e
   14004d3ec:	imul   ebp,DWORD PTR [rsi+0x67],0x61000041
   14004d3f3:	jo     0x14004d45e
   14004d3f5:	sub    eax,0x772d736d
   14004d3fa:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d401:	sub    eax,0x636e7973
   14004d406:	push   0x2d316c2d
   14004d40b:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac690241
   14004d411:	ins    BYTE PTR es:[rdi],dx
   14004d412:	add    BYTE PTR [rax],al
   14004d414:	(bad)  
   14004d415:	jo     0x14004d480
   14004d417:	sub    eax,0x772d736d
   14004d41c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d423:	sub    eax,0x646e6168
   14004d428:	ins    BYTE PTR es:[rdi],dx
   14004d429:	gs sub eax,0x312d316c
   14004d42f:	sub    eax,0x6c642e30
   14004d434:	ins    BYTE PTR es:[rdi],dx
   14004d435:	add    BYTE PTR [rcx+0x70],ah
   14004d438:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b73247af
   14004d442:	outs   dx,DWORD PTR ds:[rsi]
   14004d443:	jb     0x14004d4aa
   14004d445:	sub    eax,0x6f727265
   14004d44a:	jb     0x14004d4b4
   14004d44c:	(bad)  
   14004d44d:	outs   dx,BYTE PTR ds:[rsi]
   14004d44e:	fs ins BYTE PTR es:[rdi],dx
   14004d450:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14004d457:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac69028e
   14004d45d:	ins    BYTE PTR es:[rdi],dx
   14004d45e:	add    BYTE PTR [rax],al
   14004d460:	(bad)  
   14004d461:	jo     0x14004d4cc
   14004d463:	sub    eax,0x772d736d
   14004d468:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d46f:	sub    eax,0x7262696c
   14004d474:	(bad)  
   14004d475:	jb     0x14004d4f0
   14004d477:	ins    BYTE PTR es:[rdi],dx
   14004d478:	outs   dx,DWORD PTR ds:[rsi]
   14004d479:	(bad)  
   14004d47a:	fs gs jb 0x14004d4ab
   14004d47e:	ins    BYTE PTR es:[rdi],dx
   14004d47f:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e3501b7
   14004d485:	fs ins BYTE PTR es:[rdi],dx
   14004d487:	ins    BYTE PTR es:[rdi],dx
   14004d488:	add    BYTE PTR [rax],al
   14004d48a:	(bad)  
   14004d48b:	jo     0x14004d4f6
   14004d48d:	sub    eax,0x772d736d
   14004d492:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d499:	sub    eax,0x61636f6c
   14004d49e:	ins    BYTE PTR es:[rdi],dx
   14004d49f:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14004d4a6:	sub    eax,0x322d316c
   14004d4ab:	sub    eax,0x6c642e31
   14004d4b0:	ins    BYTE PTR es:[rdi],dx
   14004d4b1:	add    BYTE PTR [rcx+0x70],ah
   14004d4b4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b732482b
   14004d4be:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004d4c2:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x65736162
   14004d4ca:	sub    eax,0x322d316c
   14004d4cf:	sub    eax,0x6c642e30
   14004d4d4:	ins    BYTE PTR es:[rdi],dx
   14004d4d5:	add    BYTE PTR [rcx+0x70],ah
   14004d4d8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b732484f
   14004d4e2:	outs   dx,DWORD PTR ds:[rsi]
   14004d4e3:	jb     0x14004d54a
   14004d4e5:	sub    eax,0x636f7270
   14004d4ea:	gs jae 0x14004d560
   14004d4ed:	je     0x14004d557
   14004d4ef:	jb     0x14004d556
   14004d4f1:	(bad)  
   14004d4f2:	fs jae 0x14004d522
   14004d4f5:	ins    BYTE PTR es:[rdi],dx
   14004d4f6:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e37022d
   14004d4fc:	fs ins BYTE PTR es:[rdi],dx
   14004d4fe:	ins    BYTE PTR es:[rdi],dx
   14004d4ff:	add    BYTE PTR [rcx+0x70],ah
   14004d502:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b7324879
   14004d50c:	outs   dx,DWORD PTR ds:[rsi]
   14004d50d:	jb     0x14004d574
   14004d50f:	sub    eax,0x75626564
   14004d514:	addr32 sub eax,0x312d316c
   14004d51a:	sub    eax,0x6c642e31
   14004d51f:	ins    BYTE PTR es:[rdi],dx
   14004d520:	add    BYTE PTR [rax],al
   14004d522:	(bad)  
   14004d523:	jo     0x14004d58e
   14004d525:	sub    eax,0x772d736d
   14004d52a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d531:	sub    eax,0x69676572
   14004d536:	jae    0x14004d5ac
   14004d538:	jb     0x14004d5b3
   14004d53a:	sub    eax,0x312d316c
   14004d53f:	sub    eax,0x6c642e30
   14004d544:	ins    BYTE PTR es:[rdi],dx
   14004d545:	add    BYTE PTR [rcx+0x70],ah
   14004d548:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b73248bf
   14004d552:	outs   dx,DWORD PTR ds:[rsi]
   14004d553:	jb     0x14004d5ba
   14004d555:	sub    eax,0x70616568
   14004d55a:	sub    eax,0x322d316c
   14004d55f:	sub    eax,0x6c642e30
   14004d564:	ins    BYTE PTR es:[rdi],dx
   14004d565:	add    BYTE PTR [rcx+0x70],ah
   14004d568:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b73248df
   14004d572:	outs   dx,DWORD PTR ds:[rsi]
   14004d573:	jb     0x14004d5da
   14004d575:	sub    eax,0x636f7270
   14004d57a:	gs jae 0x14004d5f0
   14004d57d:	outs   dx,BYTE PTR gs:[rsi]
   14004d57f:	jbe    0x14004d5ea
   14004d581:	jb     0x14004d5f2
   14004d583:	outs   dx,BYTE PTR ds:[rsi]
   14004d584:	ins    DWORD PTR es:[rdi],dx
   14004d585:	outs   dx,BYTE PTR gs:[rsi]
   14004d587:	je     0x14004d5b6
   14004d589:	ins    BYTE PTR es:[rdi],dx
   14004d58a:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e3502c2
   14004d590:	fs ins BYTE PTR es:[rdi],dx
   14004d592:	ins    BYTE PTR es:[rdi],dx
   14004d593:	add    BYTE PTR [rcx+0x70],ah
   14004d596:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b732490d
   14004d5a0:	outs   dx,DWORD PTR ds:[rsi]
   14004d5a1:	jb     0x14004d608
   14004d5a3:	sub    eax,0x69737973
   14004d5a8:	outs   dx,BYTE PTR ds:[rsi]
   14004d5a9:	outs   dx,WORD PTR ds:[rsi]
   14004d5ab:	sub    eax,0x322d316c
   14004d5b0:	sub    eax,0x6c642e31
   14004d5b5:	ins    BYTE PTR es:[rdi],dx
   14004d5b6:	add    BYTE PTR [rax],al
   14004d5b8:	(bad)  
   14004d5b9:	jo     0x14004d624
   14004d5bb:	sub    eax,0x772d736d
   14004d5c0:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d5c7:	sub    eax,0x69727473
   14004d5cc:	outs   dx,BYTE PTR ds:[rsi]
   14004d5cd:	addr32 sub eax,0x312d316c
   14004d5d3:	sub    eax,0x6c642e30
   14004d5d8:	ins    BYTE PTR es:[rdi],dx
   14004d5d9:	add    BYTE PTR [rcx+0x70],ah
   14004d5dc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b7324953
   14004d5e6:	outs   dx,DWORD PTR ds:[rsi]
   14004d5e7:	jb     0x14004d64e
   14004d5e9:	sub    eax,0x656c6966
   14004d5ee:	sub    eax,0x322d316c
   14004d5f3:	sub    eax,0x6c642e31
   14004d5f8:	ins    BYTE PTR es:[rdi],dx
   14004d5f9:	add    BYTE PTR [rcx+0x70],ah
   14004d5fc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b7324973
   14004d606:	outs   dx,DWORD PTR ds:[rsi]
   14004d607:	jb     0x14004d66e
   14004d609:	sub    eax,0x70617370
   14004d60e:	imul   ebp,DWORD PTR [rip+0x312d316c],0x642e302d        # 0x171320784
   14004d618:	ins    BYTE PTR es:[rdi],dx
   14004d619:	ins    BYTE PTR es:[rdi],dx
   14004d61a:	add    BYTE PTR [rax],al
   14004d61c:	(bad)  
   14004d61d:	jo     0x14004d688
   14004d61f:	sub    eax,0x772d736d
   14004d624:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d62b:	sub    eax,0x73726576
   14004d630:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d316c2d
   14004d637:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac69046d
   14004d63d:	ins    BYTE PTR es:[rdi],dx
   14004d63e:	add    BYTE PTR [rax],al
   14004d640:	(bad)  
   14004d641:	jo     0x14004d6ac
   14004d643:	sub    eax,0x772d736d
   14004d648:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d64f:	sub    eax,0x7262696c
   14004d654:	(bad)  
   14004d655:	jb     0x14004d6d0
   14004d657:	ins    BYTE PTR es:[rdi],dx
   14004d658:	outs   dx,DWORD PTR ds:[rsi]
   14004d659:	(bad)  
   14004d65a:	fs gs jb 0x14004d68b
   14004d65e:	ins    BYTE PTR es:[rdi],dx
   14004d65f:	xor    DWORD PTR [rip+0x2e312d32],ebp        # 0x16e360397
   14004d665:	fs ins BYTE PTR es:[rdi],dx
   14004d667:	ins    BYTE PTR es:[rdi],dx
   14004d668:	add    BYTE PTR [rax],al
   14004d66a:	(bad)  
   14004d66b:	jo     0x14004d6d6
   14004d66d:	sub    eax,0x772d736d
   14004d672:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d679:	sub    eax,0x666f7270
   14004d67e:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14004d686:	sub    eax,0x6c642e30
   14004d68b:	ins    BYTE PTR es:[rdi],dx
   14004d68c:	add    BYTE PTR [rax],al
   14004d68e:	rex.X add BYTE PTR [rdx+0x65],dl
   14004d692:	imul   esi,DWORD PTR [ebx+0x74],0x61577265
   14004d69a:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14004d6a2:	ins    BYTE PTR es:[edi],dx
   14004d6a4:	gs rex.WRXB (bad) 
   14004d6a7:	push   0x65
   14004d6a9:	movsxd esi,DWORD PTR [rax+rax*1+0x4c]
   14004d6ad:	add    BYTE PTR [rbp+0x6e],dl
   14004d6b0:	jb     0x14004d717
   14004d6b2:	imul   esi,DWORD PTR [ebx+0x74],0x61577265
   14004d6ba:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x72430002
   14004d6c2:	gs (bad) 
   14004d6c4:	je     0x14004d72b
   14004d6c6:	push   rsp
   14004d6c7:	imul   ebp,DWORD PTR [rbp+0x65],0x65755172
   14004d6ce:	jne    0x14004d735
   14004d6d0:	push   rsp
   14004d6d1:	imul   ebp,DWORD PTR [rbp+0x65],0x50072
   14004d6d8:	push   rcx
   14004d6d9:	jne    0x14004d740
   14004d6db:	jne    0x14004d742
   14004d6dd:	push   rbp
   14004d6de:	jae    0x14004d745
   14004d6e0:	jb     0x14004d739
   14004d6e2:	outs   dx,DWORD PTR ds:[rsi]
   14004d6e3:	jb     0x14004d750
   14004d6e5:	rex.WB je 0x14004d74d
   14004d6e8:	ins    DWORD PTR es:[rdi],dx
   14004d6e9:	add    BYTE PTR [rax+rax*1],dl
   14004d6ec:	push   rax
   14004d6ed:	(bad)  
   14004d6ee:	je     0x14004d758
   14004d6f0:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x74736978
   14004d6f9:	jae    0x14004d752
   14004d6fb:	add    BYTE PTR [rcx+0x70],ah
   14004d6fe:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b7324a75
   14004d708:	outs   dx,DWORD PTR ds:[rsi]
   14004d709:	jb     0x14004d770
   14004d70b:	sub    eax,0x6e72656b
   14004d710:	gs ins BYTE PTR es:[rdi],dx
   14004d712:	xor    esi,DWORD PTR [rdx]
   14004d714:	sub    eax,0x6167656c
   14004d719:	movsxd edi,DWORD PTR [rcx+0x2d]
   14004d71c:	ins    BYTE PTR es:[rdi],dx
   14004d71d:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e360454
   14004d723:	fs ins BYTE PTR es:[rdi],dx
   14004d725:	ins    BYTE PTR es:[rdi],dx
   14004d726:	add    BYTE PTR [rax],al
   14004d728:	(bad)  
   14004d729:	jo     0x14004d794
   14004d72b:	sub    eax,0x772d736d
   14004d730:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d737:	sub    eax,0x65726874
   14004d73c:	(bad)  
   14004d73d:	fs jo  0x14004d7af
   14004d740:	outs   dx,DWORD PTR ds:[rsi]
   14004d741:	ins    BYTE PTR es:[rdi],dx
   14004d742:	sub    eax,0x6167656c
   14004d747:	movsxd edi,DWORD PTR [rcx+0x2d]
   14004d74a:	ins    BYTE PTR es:[rdi],dx
   14004d74b:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e350482
   14004d751:	fs ins BYTE PTR es:[rdi],dx
   14004d753:	ins    BYTE PTR es:[rdi],dx
   14004d754:	add    BYTE PTR [rax],al
   14004d756:	(bad)  
   14004d757:	jo     0x14004d7c2
   14004d759:	sub    eax,0x772d736d
   14004d75e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d765:	sub    eax,0x776c6873
   14004d76a:	(bad)  
   14004d76b:	jo     0x14004d7d6
   14004d76d:	sub    eax,0x6167656c
   14004d772:	movsxd edi,DWORD PTR [rcx+0x2d]
   14004d775:	ins    BYTE PTR es:[rdi],dx
   14004d776:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e3504ad
   14004d77c:	fs ins BYTE PTR es:[rdi],dx
   14004d77e:	ins    BYTE PTR es:[rdi],dx
   14004d77f:	add    BYTE PTR [rsp+rax*1+0x69676552],cl
   14004d786:	jae    0x14004d7fc
   14004d788:	gs jb  0x14004d7cc
   14004d78b:	jo     0x14004d7fd
   14004d78d:	ins    BYTE PTR es:[rdi],dx
   14004d78e:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004d795:	push   rdx
   14004d796:	gs jae 0x14004d80d
   14004d799:	(bad)  
   14004d79a:	jb     0x14004d810
   14004d79c:	add    BYTE PTR [rax],al
   14004d79e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d79f:	add    eax,0x65726e55
   14004d7a4:	imul   esi,DWORD PTR [ebx+0x74],0x70417265
   14004d7ac:	jo     0x14004d81a
   14004d7ae:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004d7b5:	push   rdx
   14004d7b6:	gs jae 0x14004d82d
   14004d7b9:	(bad)  
   14004d7ba:	jb     0x14004d830
   14004d7bc:	add    BYTE PTR [rax],al
   14004d7be:	rex.WXB
   14004d7bf:	rex.RB push r10
   14004d7c1:	rex.WRX
   14004d7c2:	rex.RB
   14004d7c3:	xor    r14,QWORD PTR [rdx]
   14004d7c6:	cs fs ins BYTE PTR es:[rdi],dx
   14004d7c9:	ins    BYTE PTR es:[rdi],dx
   14004d7ca:	add    BYTE PTR [rax],al
   14004d7cc:	je     0x14004d7d1
   14004d7ce:	push   rbp
   14004d7cf:	outs   dx,BYTE PTR ds:[rsi]
   14004d7d0:	jb     0x14004d837
   14004d7d2:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   14004d7da:	(bad)  
   14004d7db:	jae    0x14004d850
   14004d7dd:	add    BYTE PTR [r8],al
   14004d7e0:	mov    ah,0x1
   14004d7e2:	rex.RXB
   14004d7e3:	gs je  0x14004d83a
   14004d7e6:	push   0x64616572
   14004d7eb:	rex.R
   14004d7ec:	gs jae 0x14004d85a
   14004d7ef:	je     0x14004d860
   14004d7f1:	jo     0x14004d7f3
   14004d7f3:	add    cl,al
   14004d7f5:	add    al,0x73
   14004d7f7:	je     0x14004d86b
   14004d7f9:	movsxd ebp,DWORD PTR [rax+0x72]
   14004d7fc:	add    BYTE PTR [rax],al
   14004d7fe:	add    DWORD PTR [rip+0x63736377],eax        # 0x1a3783b7b
   14004d804:	push   0xffffffffa4000072
   14004d809:	add    al,0x71
   14004d80b:	jae    0x14004d87c
   14004d80d:	jb     0x14004d883
   14004d80f:	add    cl,bl
   14004d811:	add    DWORD PTR [rdi+0x69],ebx
   14004d814:	je     0x14004d885
   14004d816:	ja     0x14004d818
   14004d818:	(bad)  
   14004d819:	add    DWORD PTR [rsi+0x74],ecx
   14004d81c:	push   rcx
   14004d81d:	jne    0x14004d884
   14004d81f:	jb     0x14004d89a
   14004d821:	push   rbx
   14004d822:	jns    0x14004d897
   14004d824:	je     0x14004d88b
   14004d826:	ins    DWORD PTR es:[rdi],dx
   14004d827:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004d829:	outs   dx,WORD PTR ds:[rsi]
   14004d82b:	jb     0x14004d89a
   14004d82d:	(bad)  
   14004d82e:	je     0x14004d899
   14004d830:	outs   dx,DWORD PTR ds:[rsi]
   14004d831:	outs   dx,BYTE PTR ds:[rsi]
   14004d832:	add    BYTE PTR [rax],al
   14004d834:	movabs ds:0x6c6275506c745204,al
   14004d83d:	imul   esi,DWORD PTR [rbx+0x68],0x53666e57
   14004d844:	je     0x14004d8a7
   14004d846:	je     0x14004d8ad
   14004d848:	rex.R (bad) 
   14004d84a:	je     0x14004d8ad
   14004d84c:	add    BYTE PTR [rax],al
   14004d84e:	or     eax,0x74655300
   14004d853:	rex.WR (bad) 
   14004d855:	jae    0x14004d8cb
   14004d857:	rex.RB jb 0x14004d8cc
   14004d85a:	outs   dx,DWORD PTR ds:[rsi]
   14004d85b:	jb     0x14004d85d
   14004d85d:	add    BYTE PTR [rdx],al
   14004d85f:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   14004d863:	(bad)  
   14004d864:	ins    BYTE PTR es:[rdi],dx
   14004d865:	rex.B ins BYTE PTR es:[rdi],dx
   14004d867:	ins    BYTE PTR es:[rdi],dx
   14004d868:	outs   dx,DWORD PTR ds:[rsi]
   14004d869:	movsxd eax,DWORD PTR [rax]
   14004d86b:	add    BYTE PTR [rbx],al
   14004d86d:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   14004d871:	(bad)  
   14004d872:	ins    BYTE PTR es:[rdi],dx
   14004d873:	rex.RX jb 0x14004d8db
   14004d876:	add    BYTE PTR gs:[rdx],cl
   14004d879:	add    BYTE PTR [rbx+0x72],al
   14004d87c:	gs (bad) 
   14004d87e:	je     0x14004d8e5
   14004d880:	rex.WRB jne 0x14004d8f7
   14004d883:	gs js  0x14004d8dd
   14004d886:	add    BYTE PTR [rax],al
   14004d888:	add    DWORD PTR [rax],eax
   14004d88a:	push   rdx
   14004d88b:	gs jae 0x14004d8fd
   14004d88e:	ins    BYTE PTR es:[rdi],dx
   14004d88f:	jbe    0x14004d8f6
   14004d891:	rex.R
   14004d892:	gs ins BYTE PTR es:[rdi],dx
   14004d894:	(bad)  
   14004d895:	jns    0x14004d8e3
   14004d897:	outs   dx,DWORD PTR ds:[rsi]
   14004d898:	(bad)  
   14004d899:	fs gs fs push r8
   14004d89e:	rex.WB add BYTE PTR [r8],al
   14004d8a1:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14004d8a5:	(bad)  
   14004d8a6:	jns    0x14004d8f4
   14004d8a8:	outs   dx,DWORD PTR ds:[rsi]
   14004d8a9:	(bad)  
   14004d8aa:	fs rex.RX (bad) 
   14004d8ad:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   14004d8b5:	imul   eax,DWORD PTR [rax],0x0
   14004d8b8:	(bad)  
   14004d8b9:	jo     0x14004d924
   14004d8bb:	sub    eax,0x772d736d
   14004d8c0:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14004d8c7:	sub    eax,0x70616568
   14004d8cc:	sub    eax,0x312d326c
   14004d8d1:	sub    eax,0x6c642e30
   14004d8d6:	ins    BYTE PTR es:[rdi],dx
   14004d8d7:	add    BYTE PTR [rcx+0x70],ah
   14004d8da:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b7324c51
   14004d8e4:	outs   dx,DWORD PTR ds:[rsi]
   14004d8e5:	jb     0x14004d94c
   14004d8e7:	sub    eax,0x616c6564
   14004d8ec:	jns    0x14004d95a
   14004d8ee:	outs   dx,DWORD PTR ds:[rsi]
   14004d8ef:	(bad)  
   14004d8f0:	fs sub eax,0x312d316c
   14004d8f6:	sub    eax,0x6c642e31
   14004d8fb:	ins    BYTE PTR es:[rdi],dx
   14004d8fc:	add    BYTE PTR [rax],al
   14004d8fe:	add    al,0x0
   14004d900:	rex.R
   14004d901:	gs ins BYTE PTR es:[rdi],dx
   14004d903:	gs je  0x14004d96b
   14004d906:	push   rsp
   14004d907:	imul   ebp,DWORD PTR [rbp+0x65],0x65755172
   14004d90e:	jne    0x14004d975
   14004d910:	push   rsp
   14004d911:	imul   ebp,DWORD PTR [rbp+0x65],0x4b0072
   14004d918:	pop    rdi
   14004d919:	rex.XB js 0x14004d994
   14004d91c:	push   rsp
   14004d91d:	push   0x45776f72
   14004d922:	js     0x14004d987
   14004d924:	gs jo  0x14004d99b
   14004d927:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   14004d92e:	pop    rdi
   14004d92f:	pop    rdi
   14004d930:	rex.XB js 0x14004d9ab
   14004d933:	rex.RX jb 0x14004d997
   14004d936:	ins    DWORD PTR es:[rdi],dx
   14004d937:	gs rex.W (bad) 
   14004d93a:	outs   dx,BYTE PTR ds:[rsi]
   14004d93b:	fs ins BYTE PTR es:[rdi],dx
   14004d93d:	gs jb  0x14004d973
   14004d940:	add    BYTE PTR [rax],al
   14004d942:	xchg   ecx,eax
   14004d943:	add    al,0x6d
   14004d945:	gs ins DWORD PTR es:[rdi],dx
   14004d947:	movsxd ebp,DWORD PTR [rbp+0x70]
   14004d94a:	add    BYTE PTR [rax],al
   14004d94c:	xchg   edx,eax
   14004d94d:	add    al,0x6d
   14004d94f:	gs ins DWORD PTR es:[rdi],dx
   14004d951:	movsxd esi,DWORD PTR [rax+0x79]
   14004d954:	add    BYTE PTR [rax],al
   14004d956:	add    al,BYTE PTR [rip+0x63736377]        # 0x1a3783cd3
   14004d95c:	ins    DWORD PTR es:[rdi],dx
   14004d95d:	jo     0x14004d95f
	...

Disassembly of section .data:

000000014004e000 <.data>:
   14004e000:	xor    BYTE PTR [rsi+0x1],al
   14004e003:	rex add DWORD PTR [rax],eax
   14004e006:	add    BYTE PTR [rax],al
   14004e008:	add    DWORD PTR [rax],eax
   14004e00a:	add    BYTE PTR [rax],al
   14004e00c:	add    BYTE PTR [rax],al
   14004e00e:	add    BYTE PTR [rax],al
   14004e010:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14004e016:	add    BYTE PTR [rax],al
   14004e018:	int    0x5d
   14004e01a:	and    dl,dl
   14004e01c:	data16 (bad) 
   14004e01e:	(bad)  
   14004e01f:	push   QWORD PTR [rax]
   14004e021:	movabs ds:0xa330000000014003,eax
   14004e02a:	add    eax,DWORD PTR [rax+0x1]
   14004e02d:	add    BYTE PTR [rax],al
   14004e02f:	add    BYTE PTR [rax],dh
   14004e031:	movabs ds:0xa330000000014003,eax
   14004e03a:	add    eax,DWORD PTR [rax+0x1]
   14004e03d:	add    BYTE PTR [rax],al
   14004e03f:	add    BYTE PTR [rax],dh
   14004e041:	movabs ds:0xa330000000014003,eax
   14004e04a:	add    eax,DWORD PTR [rax+0x1]
   14004e04d:	add    BYTE PTR [rax],al
   14004e04f:	add    BYTE PTR [rax],dh
   14004e051:	movabs ds:0xa330000000014003,eax
   14004e05a:	add    eax,DWORD PTR [rax+0x1]
   14004e05d:	add    BYTE PTR [rax],al
   14004e05f:	add    BYTE PTR [rax+0x1400149],al
   14004e065:	add    BYTE PTR [rax],al
   14004e067:	add    BYTE PTR [rax+0x1400149],al
   14004e06d:	add    BYTE PTR [rax],al
   14004e06f:	add    BYTE PTR [rax],dh
   14004e071:	movabs ds:0xa330000000014003,eax
   14004e07a:	add    eax,DWORD PTR [rax+0x1]
   14004e07d:	add    BYTE PTR [rax],al
   14004e07f:	add    BYTE PTR [rax],dh
   14004e081:	movabs ds:0xa330000000014003,eax
   14004e08a:	add    eax,DWORD PTR [rax+0x1]
   14004e08d:	add    BYTE PTR [rax],al
   14004e08f:	add    BYTE PTR [rax],dh
   14004e091:	movabs ds:0xa330000000014003,eax
   14004e09a:	add    eax,DWORD PTR [rax+0x1]
   14004e09d:	add    BYTE PTR [rax],al
   14004e09f:	add    BYTE PTR [rax+0x1400149],al
   14004e0a5:	add    BYTE PTR [rax],al
   14004e0a7:	add    BYTE PTR [rax],dh
   14004e0a9:	movabs ds:0xa330000000014003,eax
   14004e0b2:	add    eax,DWORD PTR [rax+0x1]
   14004e0b5:	add    BYTE PTR [rax],al
   14004e0b7:	add    BYTE PTR [rax],dh
   14004e0b9:	movabs ds:0xa330000000014003,eax
   14004e0c2:	add    eax,DWORD PTR [rax+0x1]
   14004e0c5:	add    BYTE PTR [rax],al
   14004e0c7:	add    BYTE PTR [rax],dh
   14004e0c9:	movabs ds:0xa330000000014003,eax
   14004e0d2:	add    eax,DWORD PTR [rax+0x1]
   14004e0d5:	add    BYTE PTR [rax],al
   14004e0d7:	add    BYTE PTR [rax+0x5e],dl
   14004e0da:	add    DWORD PTR [rax+0x1],eax
   14004e0dd:	add    BYTE PTR [rax],al
   14004e0df:	add    BYTE PTR [rax],dh
   14004e0e1:	movabs ds:0xa330000000014003,eax
   14004e0ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e0f5:	add    BYTE PTR [rax],al
   14004e0f7:	add    BYTE PTR [rax+0x1400149],al
   14004e0fd:	add    BYTE PTR [rax],al
   14004e0ff:	add    BYTE PTR [rax],dh
   14004e101:	movabs ds:0xa330000000014003,eax
   14004e10a:	add    eax,DWORD PTR [rax+0x1]
   14004e10d:	add    BYTE PTR [rax],al
   14004e10f:	add    BYTE PTR [rax],dh
   14004e111:	movabs ds:0xa330000000014003,eax
   14004e11a:	add    eax,DWORD PTR [rax+0x1]
   14004e11d:	add    BYTE PTR [rax],al
   14004e11f:	add    BYTE PTR [rax],dh
   14004e121:	movabs ds:0x4980000000014003,eax
   14004e12a:	add    DWORD PTR [rax+0x1],eax
   14004e12d:	add    BYTE PTR [rax],al
   14004e12f:	add    BYTE PTR [rax],dh
   14004e131:	movabs ds:0xa330000000014003,eax
   14004e13a:	add    eax,DWORD PTR [rax+0x1]
   14004e13d:	add    BYTE PTR [rax],al
   14004e13f:	add    BYTE PTR [rax],dh
   14004e141:	movabs ds:0xa330000000014003,eax
   14004e14a:	add    eax,DWORD PTR [rax+0x1]
   14004e14d:	add    BYTE PTR [rax],al
   14004e14f:	add    BYTE PTR [rax],dh
   14004e151:	movabs ds:0xa330000000014003,eax
   14004e15a:	add    eax,DWORD PTR [rax+0x1]
   14004e15d:	add    BYTE PTR [rax],al
   14004e15f:	add    BYTE PTR [rax+0x1400149],al
   14004e165:	add    BYTE PTR [rax],al
   14004e167:	add    BYTE PTR [rax+0x1400149],al
   14004e16d:	add    BYTE PTR [rax],al
   14004e16f:	add    BYTE PTR [rax+0x1400149],al
   14004e175:	add    BYTE PTR [rax],al
   14004e177:	add    BYTE PTR [rax+0x1400149],al
   14004e17d:	add    BYTE PTR [rax],al
   14004e17f:	add    BYTE PTR [rax],dh
   14004e181:	movabs ds:0xa330000000014003,eax
   14004e18a:	add    eax,DWORD PTR [rax+0x1]
   14004e18d:	add    BYTE PTR [rax],al
   14004e18f:	add    BYTE PTR [rcx],al
	...
   14004e1a5:	add    BYTE PTR [rax],al
   14004e1a7:	add    BYTE PTR [rcx+0x1400425],ah
	...
   14004e1dd:	add    BYTE PTR [rax],al
   14004e1df:	add    BYTE PTR [rax+0x1400434],al
   14004e1e5:	add    BYTE PTR [rax],al
   14004e1e7:	add    BYTE PTR [rax+0x1400149],al
   14004e1ed:	add    BYTE PTR [rax],al
   14004e1ef:	add    BYTE PTR [rax],dh
   14004e1f1:	rol    BYTE PTR [rax],0x40
   14004e1f4:	add    DWORD PTR [rax],eax
   14004e1f6:	add    BYTE PTR [rax],al
   14004e1f8:	jo     0x14004e1d8
   14004e1fa:	add    BYTE PTR [rax+0x1],al
	...
   14004e20d:	add    BYTE PTR [rax],al
   14004e20f:	add    BYTE PTR [rax+0x1400149],al
   14004e215:	add    BYTE PTR [rax],al
   14004e217:	add    BYTE PTR [rax+0x1400149],al
   14004e21d:	add    BYTE PTR [rax],al
   14004e21f:	add    al,dh
   14004e221:	fild   WORD PTR [rax]
   14004e223:	rex add DWORD PTR [rax],eax
	...
   14004e22e:	add    BYTE PTR [rax],al
   14004e230:	movabs al,ds:0x8000000001400434
   14004e239:	add    QWORD PTR [r8+0x1],rax
   14004e23d:	add    BYTE PTR [rax],al
   14004e23f:	add    BYTE PTR [rax],dh
   14004e241:	rol    BYTE PTR [rax],0x40
   14004e244:	add    DWORD PTR [rax],eax
   14004e246:	add    BYTE PTR [rax],al
   14004e248:	lock (bad) 
   14004e24a:	add    DWORD PTR [rax+0x1],eax
	...
   14004e25d:	add    BYTE PTR [rax],al
   14004e25f:	add    BYTE PTR [rax+0x1400149],al
   14004e265:	add    BYTE PTR [rax],al
   14004e267:	add    BYTE PTR [rax+0x1400149],al
   14004e26d:	add    BYTE PTR [rax],al
   14004e26f:	add    al,dh
   14004e271:	fild   WORD PTR [rax]
   14004e273:	rex add DWORD PTR [rax],eax
	...
   14004e27e:	add    BYTE PTR [rax],al
   14004e280:	xor    BYTE PTR [rip+0x14004],dh        # 0x14006228a
   14004e286:	add    BYTE PTR [rax],al
   14004e288:	or     BYTE PTR [rcx+0x1],0x40
   14004e28c:	add    DWORD PTR [rax],eax
   14004e28e:	add    BYTE PTR [rax],al
   14004e290:	xor    al,al
   14004e292:	add    BYTE PTR [rax+0x1],al
   14004e295:	add    BYTE PTR [rax],al
   14004e297:	add    BYTE PTR [rax+0x20],dh
   14004e29a:	add    DWORD PTR [rax+0x1],eax
	...
   14004e2ad:	add    BYTE PTR [rax],al
   14004e2af:	add    BYTE PTR [rax+0x1400149],al
   14004e2b5:	add    BYTE PTR [rax],al
   14004e2b7:	add    BYTE PTR [rax+0x1400149],al
   14004e2bd:	add    BYTE PTR [rax],al
   14004e2bf:	add    al,dh
   14004e2c1:	fild   WORD PTR [rax]
   14004e2c3:	rex add DWORD PTR [rax],eax
	...
   14004e2fa:	or     DWORD PTR [rax],eax
   14004e2fc:	add    BYTE PTR [rax],al
   14004e2fe:	add    BYTE PTR [rax],al
   14004e300:	xor    dl,0x4
   14004e303:	rex add DWORD PTR [rax],eax
   14004e306:	add    BYTE PTR [rax],al
   14004e308:	and    BYTE PTR [rdx],bl
   14004e30a:	add    al,0x40
   14004e30c:	add    DWORD PTR [rax],eax
   14004e30e:	add    BYTE PTR [rax],al
   14004e310:	adc    BYTE PTR [rdx],bl
   14004e312:	add    al,0x40
   14004e314:	add    DWORD PTR [rax],eax
	...
   14004e31e:	add    BYTE PTR [rax],al
   14004e320:	push   rsi
   14004e321:	and    DWORD PTR [rbp+rbx*8+0x44949b39],ebx
   14004e328:	addr32 jle 0x14004e2be
   14004e32b:	scas   eax,DWORD PTR es:[rdi]
   14004e32c:	rex.WRB loope 0x14004e37c
   14004e32f:	xchg   ecx,eax
   14004e330:	(bad)  
   14004e331:	pop    rsp
   14004e332:	movabs ds:0x48bdc1b9bcdfb593,al
   14004e33b:	add    al,BYTE PTR [rax]
   14004e33d:	xor    al,0x69
   14004e33f:	stos   DWORD PTR es:[rdi],eax
   14004e340:	ins    BYTE PTR es:[rdi],dx
   14004e341:	jns    0x14004e356
   14004e343:	retf   0x872
   14004e346:	rex.RB
   14004e347:	cs sar ah,0x2a
   14004e34b:	retf   0x14c7
   14004e34e:	int3   
   14004e34f:	imul   edi,edi,0x3
   14004e352:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004e353:	jae    0x14004e355
	...
   14004e39d:	add    BYTE PTR [rax],al
   14004e39f:	add    BYTE PTR [rip+0xe030b1b],dl        # 0x14e07eec0
   14004e3a5:	or     eax,0x11e1d12
   14004e3aa:	adc    al,0xc
   14004e3ac:	sbb    al,0x1f
   14004e3ae:	(bad)  
   14004e3af:	(bad)  
   14004e3b0:	(bad)  
   14004e3b1:	(bad)  
   14004e3b2:	(bad)  
   14004e3b3:	(bad)  
   14004e3b4:	(bad)  
   14004e3b5:	(bad)  
   14004e3b6:	(bad)  
   14004e3b7:	(bad)  
   14004e3b8:	(bad)  
   14004e3b9:	(bad)  
   14004e3ba:	(bad)  
   14004e3bb:	(bad)  
   14004e3bc:	(bad)  
   14004e3bd:	(bad)  
   14004e3be:	(bad)  
   14004e3bf:	(bad)  
   14004e3c0:	lea    esi,[rax-0x7d3537a]
   14004e3c6:	adc    BYTE PTR [rax+0x1f26fc2d],cl
   14004e3cc:	push   rsi
   14004e3cd:	add    esi,edx
   14004e3cf:	scas   al,BYTE PTR es:[rdi]
   14004e3d0:	stc    
   14004e3d1:	sti    
   14004e3d2:	(bad)  
   14004e3d3:	pushf  
   14004e3d4:	mov    dl,0x81
   14004e3d6:	test   eax,0xb4313020
   14004e3db:	and    ebp,esp
   14004e3dd:	xor    BYTE PTR [rbp+0x2efd276],ah
   14004e3e3:	stos   DWORD PTR es:[rdi],eax
   14004e3e4:	nop
   14004e3e5:	jle    0x14004e3d5
   14004e3e7:	mov    dl,0xad
   14004e3e9:	cmp    ecx,DWORD PTR [rax]
   14004e3eb:	lahf   
   14004e3ec:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004e3ed:	push   0x10651c71
   14004e3f2:	xlat   BYTE PTR ds:[rbx]
   14004e3f3:	or     al,0x0
	...
   14004e43d:	add    BYTE PTR [rax],al
   14004e43f:	add    BYTE PTR [rsp+rdx*1],al
   14004e442:	add    ecx,DWORD PTR [rcx]
   14004e444:	sbb    BYTE PTR [rdi],al
   14004e446:	(bad)  
   14004e447:	or     eax,DWORD PTR [rcx]
   14004e449:	sbb    DWORD PTR [rbx*1+0x1f1f1f1e],ebx
   14004e450:	(bad)  
   14004e451:	(bad)  
   14004e452:	(bad)  
   14004e453:	(bad)  
   14004e454:	(bad)  
   14004e455:	(bad)  
   14004e456:	(bad)  
   14004e457:	(bad)  
   14004e458:	(bad)  
   14004e459:	(bad)  
   14004e45a:	(bad)  
   14004e45b:	(bad)  
   14004e45c:	(bad)  
   14004e45d:	(bad)  
   14004e45e:	(bad)  
   14004e45f:	(bad)  
   14004e460:	rex.WXB test BYTE PTR [r9],spl
   14004e463:	ret    0x1d2e
   14004e466:	idiv   BYTE PTR [rdx]
   14004e468:	or     dl,bh
   14004e46a:	loope  0x14004e3f0
   14004e46c:	nop
   14004e46d:	clc    
   14004e46e:	(bad)  
   14004e46f:	fadd   QWORD PTR [rdx]
   14004e471:	add    BYTE PTR [rax],al
   14004e473:	add    BYTE PTR [rax],al
   14004e475:	add    BYTE PTR [rax],al
   14004e477:	add    al,al
   14004e479:	in     al,dx
   14004e47a:	add    al,0x40
   14004e47c:	add    DWORD PTR [rax],eax
   14004e47e:	add    BYTE PTR [rax],al
   14004e480:	sbb    dl,bh
   14004e482:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e48d:	add    BYTE PTR [rax],al
   14004e48f:	add    BYTE PTR [rsi],ch
   14004e491:	(bad)  
   14004e492:	push   r14
   14004e494:	push   rdx
   14004e495:	gs jae 0x14004e50d
   14004e498:	ins    BYTE PTR es:[rdi],dx
   14004e499:	je     0x14004e4e0
   14004e49b:	js     0x14004e500
   14004e49d:	gs jo  0x14004e514
   14004e4a0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c697740
   14004e4a7:	rex
   14004e4a8:	add    BYTE PTR [rax],al
   14004e4ab:	add    BYTE PTR [rax],al
   14004e4ad:	add    BYTE PTR [rax],al
   14004e4af:	add    BYTE PTR [rax],bl
   14004e4b1:	cli    
   14004e4b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e4bd:	add    BYTE PTR [rax],al
   14004e4bf:	add    BYTE PTR [rsi],ch
   14004e4c1:	(bad)  
   14004e4c2:	push   r14
   14004e4c4:	rex.XB
   14004e4c5:	rex.B je 0x14004e534
   14004e4c8:	rex.RB js 0x14004e52e
   14004e4cb:	gs jo  0x14004e542
   14004e4ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14004e4d5:	rex
   14004e4d6:	add    BYTE PTR [rax],al
   14004e4d9:	add    BYTE PTR [rax],al
   14004e4db:	add    BYTE PTR [rax],al
   14004e4dd:	add    BYTE PTR [rax],al
   14004e4df:	add    BYTE PTR [rax+0x1400430],dh
   14004e4e5:	add    BYTE PTR [rax],al
   14004e4e7:	add    BYTE PTR [rax],al
   14004e4e9:	sbb    al,BYTE PTR [rax+rax*2]
   14004e4ec:	add    DWORD PTR [rax],eax
   14004e4ee:	add    BYTE PTR [rax],al
   14004e4f0:	add    DWORD PTR [rax],eax
	...
   14004e516:	add    BYTE PTR [rax],al
   14004e518:	(bad)  
   14004e519:	(bad)  
   14004e51a:	(bad)  
   14004e51b:	inc    DWORD PTR [rcx]
   14004e51d:	add    BYTE PTR [rax],al
   14004e51f:	add    BYTE PTR [rcx],al
	...

Disassembly of section .pdata:

0000000140050000 <.pdata>:
   140050000:	add    BYTE PTR [rax],dl
   140050002:	add    BYTE PTR [rax],al
   140050004:	sbb    DWORD PTR [rax],edx
   140050006:	add    BYTE PTR [rax],al
   140050008:	hlt    
   140050009:	(bad)  
   14005000a:	add    al,0x0
   14005000c:	push   rax
   14005000d:	adc    BYTE PTR [rax],al
   14005000f:	add    BYTE PTR [rax+0x10],bh
   140050012:	add    BYTE PTR [rax],al
   140050014:	hlt    
   140050015:	(bad)  
   140050016:	add    al,0x0
   140050018:	adc    BYTE PTR [rax],0x0
   14005001b:	add    BYTE PTR [rcx-0xbfffff0],bl
   140050021:	(bad)  
   140050022:	add    al,0x0
   140050024:	movabs al,ds:0xf4000010ce000010
   14005002d:	(bad)  
   14005002e:	add    al,0x0
   140050030:	rcl    BYTE PTR [rax],1
   140050032:	add    BYTE PTR [rax],al
   140050034:	lock adc BYTE PTR [rax],al
   140050037:	add    ah,dh
   140050039:	(bad)  
   14005003a:	add    al,0x0
   14005003c:	add    BYTE PTR [rcx],dl
   14005003e:	add    BYTE PTR [rax],al
   140050040:	and    BYTE PTR [rcx],dl
   140050042:	add    BYTE PTR [rax],al
   140050044:	hlt    
   140050045:	(bad)  
   140050046:	add    al,0x0
   140050048:	and    BYTE PTR [rcx],dl
   14005004a:	add    BYTE PTR [rax],al
   14005004c:	rex adc DWORD PTR [rax],eax
   14005004f:	add    ah,dh
   140050051:	(bad)  
   140050052:	add    al,0x0
   140050054:	rex adc DWORD PTR [rax],eax
   140050057:	add    BYTE PTR [rcx+0x11],bl
   14005005a:	add    BYTE PTR [rax],al
   14005005c:	hlt    
   14005005d:	(bad)  
   14005005e:	add    al,0x0
   140050060:	(bad)  
   140050061:	adc    DWORD PTR [rax],eax
   140050063:	add    BYTE PTR [rcx+0x11],bh
   140050066:	add    BYTE PTR [rax],al
   140050068:	hlt    
   140050069:	(bad)  
   14005006a:	add    al,0x0
   14005006c:	adc    BYTE PTR [rcx],0x0
   14005006f:	add    BYTE PTR [rcx-0xbffffef],bl
   140050075:	(bad)  
   140050076:	add    al,0x0
   140050078:	movabs al,ds:0xf4000011b9000011
   140050081:	(bad)  
   140050082:	add    al,0x0
   140050084:	rcl    BYTE PTR [rcx],0x0
   140050087:	add    dh,dh
   140050089:	adc    DWORD PTR [rax],eax
   14005008b:	add    ah,dh
   14005008d:	(bad)  
   14005008e:	add    al,0x0
   140050090:	add    BYTE PTR [rdx],dl
   140050092:	add    BYTE PTR [rax],al
   140050094:	sbb    DWORD PTR [rdx],edx
   140050096:	add    BYTE PTR [rax],al
   140050098:	hlt    
   140050099:	(bad)  
   14005009a:	add    al,0x0
   14005009c:	and    BYTE PTR [rdx],dl
   14005009e:	add    BYTE PTR [rax],al
   1400500a0:	cmp    DWORD PTR [rdx],edx
   1400500a2:	add    BYTE PTR [rax],al
   1400500a4:	hlt    
   1400500a5:	(bad)  
   1400500a6:	add    al,0x0
   1400500a8:	adc    al,BYTE PTR [rax]
   1400500ab:	add    BYTE PTR [rcx+0x12],bl
   1400500ae:	add    BYTE PTR [rax],al
   1400500b0:	hlt    
   1400500b1:	(bad)  
   1400500b2:	add    al,0x0
   1400500b4:	adc    al,BYTE PTR fs:[rax]
   1400500b7:	add    BYTE PTR [rbx+rdx*1],al
   1400500ba:	add    BYTE PTR [rax],al
   1400500bc:	xchg   esp,eax
   1400500bd:	(bad)  
   1400500be:	add    al,0x0
   1400500c0:	pop    rax
   1400500c1:	adc    eax,DWORD PTR [rax]
   1400500c3:	add    BYTE PTR [rcx+0x13],bh
   1400500c6:	add    BYTE PTR [rax],al
   1400500c8:	sbb    BYTE PTR [rdi+0x4],0x0
   1400500cc:	mov    WORD PTR [rbx],ss
   1400500ce:	add    BYTE PTR [rax],al
   1400500d0:	mov    dh,0x13
   1400500d2:	add    BYTE PTR [rax],al
   1400500d4:	mov    BYTE PTR [rdi+0x4],bl
   1400500d7:	add    BYTE PTR [rbx+rdx*1+0x13dd0000],bh
   1400500de:	add    BYTE PTR [rax],al
   1400500e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400500e1:	pop    rdi
   1400500e2:	add    al,0x0
   1400500e4:	in     al,0x13
   1400500e6:	add    BYTE PTR [rax],al
   1400500e8:	sbb    dl,BYTE PTR [rax+rax*1]
   1400500eb:	add    al,al
   1400500ed:	pop    rdi
   1400500ee:	add    al,0x0
   1400500f0:	and    BYTE PTR [rax+rax*1],dl
   1400500f3:	add    ch,ah
   1400500f5:	rex.W add BYTE PTR [rax],al
   1400500f8:	int3   
   1400500f9:	pop    rdi
   1400500fa:	add    al,0x0
   1400500fc:	in     al,dx
   1400500fd:	rex.W add BYTE PTR [rax],al
   140050100:	lods   eax,DWORD PTR ds:[rsi]
   140050101:	rex.WB add BYTE PTR [r8],al
   140050104:	mov    al,0x60
   140050106:	add    al,0x0
   140050108:	mov    ah,0x49
   14005010a:	add    BYTE PTR [rax],al
   14005010c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005010d:	rex.WX add BYTE PTR [rax],al
   140050110:	shl    BYTE PTR [rax+0x4],0x0
   140050114:	lods   al,BYTE PTR ds:[rsi]
   140050115:	rex.WX add BYTE PTR [rax],al
   140050118:	ins    DWORD PTR es:[rdi],dx
   140050119:	rex.WXB add BYTE PTR [r8],al
   14005011c:	mov    al,0x60
   14005011e:	add    al,0x0
   140050120:	je     0x14005016d
   140050122:	add    BYTE PTR [rax],al
   140050124:	sahf   
   140050125:	rex.WXB add BYTE PTR [r8],al
   140050128:	in     al,dx
   140050129:	(bad)  
   14005012a:	add    al,0x0
   14005012c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005012d:	rex.WXB add BYTE PTR [r8],al
   140050130:	ror    DWORD PTR [rbx+0x0],1
   140050133:	add    ah,ch
   140050135:	(bad)  
   140050136:	add    al,0x0
   140050138:	in     al,dx
   140050139:	rex.WXB add BYTE PTR [r8],al
   14005013c:	or     BYTE PTR [rax+rax*1+0x0],cl
   140050140:	hlt    
   140050141:	(bad)  
   140050142:	add    al,0x0
   140050144:	adc    BYTE PTR [rax+rax*1+0x0],cl
   140050148:	sub    DWORD PTR [rbp+0x0],ecx
   14005014b:	add    ah,bh
   14005014d:	(bad)  
   14005014e:	add    al,0x0
   140050150:	xor    BYTE PTR [rbp+0x0],cl
   140050153:	add    bl,bh
   140050155:	rex.WRB add BYTE PTR [r8],r8b
   140050158:	push   rsp
   140050159:	(bad)  
   14005015a:	add    al,0x0
   14005015c:	adc    BYTE PTR [rsi+0x0],cl
   14005015f:	add    ch,ah
   140050161:	rex.WRX add BYTE PTR [rax],r8b
   140050164:	jl     0x1400501c7
   140050166:	add    al,0x0
   140050168:	in     al,dx
   140050169:	rex.WRX add BYTE PTR [rax],r8b
   14005016c:	sbb    DWORD PTR [rdi+0x0],ecx
   14005016f:	add    ah,ch
   140050171:	(bad)  
   140050172:	add    al,0x0
   140050174:	and    BYTE PTR [rdi+0x0],cl
   140050177:	add    BYTE PTR [rbp+0x4f],dl
   14005017a:	add    BYTE PTR [rax],al
   14005017c:	xchg   esp,eax
   14005017d:	(bad)  
   14005017e:	add    al,0x0
   140050180:	pop    rsp
   140050181:	rex.WRXB add BYTE PTR [r8],r8b
   140050184:	mov    esi,0x8000004f
   140050189:	pop    rdi
   14005018a:	add    al,0x0
   14005018c:	(bad)  
   14005018d:	rex.WRXB add BYTE PTR [r8],r8b
   140050190:	cs push rax
   140050192:	add    BYTE PTR [rax],al
   140050194:	pushf  
   140050195:	(bad)  
   140050196:	add    al,0x0
   140050198:	rex push rax
   14005019a:	add    BYTE PTR [rax],al
   14005019c:	loop   0x1400501ee
   14005019e:	add    BYTE PTR [rax],al
   1400501a0:	hlt    
   1400501a1:	(bad)  
   1400501a2:	add    al,0x0
   1400501a4:	lock push rax
   1400501a6:	add    BYTE PTR [rax],al
   1400501a8:	mov    eax,0xc0000051
   1400501ad:	(bad)  
   1400501ae:	add    al,0x0
   1400501b0:	rcl    BYTE PTR [rcx+0x0],0x0
   1400501b4:	(bad)  
   1400501b5:	push   rdx
   1400501b6:	add    BYTE PTR [rax],al
   1400501b8:	fsub   QWORD PTR [rcx+0x4]
   1400501bb:	add    BYTE PTR [rdx+rdx*2],cl
   1400501be:	add    BYTE PTR [rax],al
   1400501c0:	push   0xfffffffff8000052
   1400501c5:	(bad)  
   1400501c6:	add    al,0x0
   1400501c8:	jo     0x14005021c
   1400501ca:	add    BYTE PTR [rax],al
   1400501cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400501cd:	push   rdx
   1400501ce:	add    BYTE PTR [rax],al
   1400501d0:	sbb    BYTE PTR [rdi+0x4],0x0
   1400501d4:	mov    al,0x52
   1400501d6:	add    BYTE PTR [rax],al
   1400501d8:	or     dl,BYTE PTR [rbx+0x0]
   1400501db:	add    BYTE PTR [rax],ah
   1400501dd:	(bad)  
   1400501de:	add    al,0x0
   1400501e0:	or     dl,BYTE PTR [rbx+0x0]
   1400501e3:	add    BYTE PTR [rsp+rdx*2],dl
   1400501e6:	add    BYTE PTR [rax],al
   1400501e8:	xor    al,0x62
   1400501ea:	add    al,0x0
   1400501ec:	adc    al,0x54
   1400501ee:	add    BYTE PTR [rax],al
   1400501f0:	sbb    dl,BYTE PTR [rax+rax*1+0x0]
   1400501f4:	rex.WR (bad) 
   1400501f6:	add    al,0x0
   1400501f8:	sbb    dl,BYTE PTR [rax+rax*1+0x0]
   1400501fc:	and    eax,0x5c000054
   140050201:	(bad)  
   140050202:	add    al,0x0
   140050204:	sub    al,0x54
   140050206:	add    BYTE PTR [rax],al
   140050208:	(bad)  
   140050209:	push   rsp
   14005020a:	add    BYTE PTR [rax],al
   14005020c:	pushf  
   14005020d:	(bad)  
   14005020e:	add    al,0x0
   140050210:	add    al,0x55
   140050212:	add    BYTE PTR [rax],al
   140050214:	(bad)
   140050217:	add    BYTE PTR [rdx+riz*2+0x55cc0004],bh
   14005021e:	add    BYTE PTR [rax],al
   140050220:	jle    0x140050279
   140050222:	add    BYTE PTR [rax],al
   140050224:	fsub   QWORD PTR [rdx+0x4]
   140050227:	add    BYTE PTR [rdi+rdx*2+0x57e70000],al
   14005022e:	add    BYTE PTR [rax],al
   140050230:	nop
   140050231:	movsxd eax,DWORD PTR [rax+rax*1]
   140050234:	lock push rdi
   140050236:	add    BYTE PTR [rax],al
   140050238:	or     al,0x58
   14005023a:	add    BYTE PTR [rax],al
   14005023c:	mov    al,0x63
   14005023e:	add    al,0x0
   140050240:	or     al,0x58
   140050242:	add    BYTE PTR [rax],al
   140050244:	and    bl,BYTE PTR [rax+0x0]
   140050247:	add    BYTE PTR [rbx+riz*2+0x58220004],bh
   14005024e:	add    BYTE PTR [rax],al
   140050250:	sbb    BYTE PTR [rax+0x0],0x0
   140050254:	(bad)  
   140050255:	movsxd eax,DWORD PTR [rax+rax*1]
   140050258:	sbb    BYTE PTR [rax+0x0],0x0
   14005025c:	xchg   esi,eax
   14005025d:	pop    rax
   14005025e:	add    BYTE PTR [rax],al
   140050260:	lock movsxd eax,DWORD PTR [rax+rax*1]
   140050264:	xchg   esi,eax
   140050265:	pop    rax
   140050266:	add    BYTE PTR [rax],al
   140050268:	stos   BYTE PTR es:[rdi],al
   140050269:	pop    rax
   14005026a:	add    BYTE PTR [rax],al
   14005026c:	add    BYTE PTR [rsp+rax*1+0x0],ah
   140050270:	mov    al,0x58
   140050272:	add    BYTE PTR [rax],al
   140050274:	test   DWORD PTR [rdx+0x0],ebx
   140050277:	add    BYTE PTR [rsp+riz*2],dh
   14005027a:	add    al,0x0
   14005027c:	nop
   14005027d:	pop    rdx
   14005027e:	add    BYTE PTR [rax],al
   140050280:	xchg   esi,eax
   140050281:	pop    rdx
   140050282:	add    BYTE PTR [rax],al
   140050284:	(bad)  
   140050285:	fs add al,0x0
   140050288:	xchg   esi,eax
   140050289:	pop    rdx
   14005028a:	add    BYTE PTR [rax],al
   14005028c:	xor    DWORD PTR [rbx+0x0],ebx
   14005028f:	add    BYTE PTR [rax+0x64],ch
   140050292:	add    al,0x0
   140050294:	xor    DWORD PTR [rbx+0x0],ebx
   140050297:	add    BYTE PTR [rbx+0x5b],cl
   14005029a:	add    BYTE PTR [rax],al
   14005029c:	mov    WORD PTR [rsp+rax*1+0x0],fs
   1400502a0:	rex.WXB pop r11
   1400502a2:	add    BYTE PTR [rax],al
   1400502a4:	pop    rsp
   1400502a5:	pop    rbx
   1400502a6:	add    BYTE PTR [rax],al
   1400502a8:	lods   al,BYTE PTR ds:[rsi]
   1400502a9:	fs add al,0x0
   1400502ac:	nop
   1400502ad:	pop    rbx
   1400502ae:	add    BYTE PTR [rax],al
   1400502b0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400502b1:	pop    rbx
   1400502b2:	add    BYTE PTR [rax],al
   1400502b4:	hlt    
   1400502b5:	(bad)  
   1400502b6:	add    al,0x0
   1400502b8:	mov    al,0x5b
   1400502ba:	add    BYTE PTR [rax],al
   1400502bc:	movabs al,ds:0x240004650000005c
   1400502c5:	pop    rbp
   1400502c6:	add    BYTE PTR [rax],al
   1400502c8:	rex.RB pop r13
   1400502ca:	add    BYTE PTR [rax],al
   1400502cc:	and    al,0x65
   1400502ce:	add    al,0x0
   1400502d0:	push   rax
   1400502d1:	pop    rbp
   1400502d2:	add    BYTE PTR [rax],al
   1400502d4:	outs   dx,DWORD PTR ds:[rsi]
   1400502d5:	pop    rbp
   1400502d6:	add    BYTE PTR [rax],al
   1400502d8:	cmp    al,0x65
   1400502da:	add    al,0x0
   1400502dc:	outs   dx,DWORD PTR ds:[rsi]
   1400502dd:	pop    rbp
   1400502de:	add    BYTE PTR [rax],al
   1400502e0:	jns    0x14005033f
   1400502e2:	add    BYTE PTR [rax],al
   1400502e4:	rex.W
   1400502e5:	gs add al,0x0
   1400502e8:	jns    0x140050347
   1400502ea:	add    BYTE PTR [rax],al
   1400502ec:	mov    DWORD PTR [rsi+0x0],ebx
   1400502ef:	add    BYTE PTR [rbp+riz*2+0x4],bl
   1400502f3:	add    BYTE PTR [rcx+0x2d00005e],cl
   1400502f9:	pop    rdi
   1400502fa:	add    BYTE PTR [rax],al
   1400502fc:	js     0x140050363
   1400502fe:	add    al,0x0
   140050300:	sub    eax,0x3700005f
   140050305:	pop    rdi
   140050306:	add    BYTE PTR [rax],al
   140050308:	mov    WORD PTR [rbp+0x4],fs
   14005030b:	add    BYTE PTR [rdi],dh
   14005030d:	pop    rdi
   14005030e:	add    BYTE PTR [rax],al
   140050310:	cmp    al,0x5f
   140050312:	add    BYTE PTR [rax],al
   140050314:	pushf  
   140050315:	gs add al,0x0
   140050318:	(bad)  
   140050319:	pop    rdi
   14005031a:	add    BYTE PTR [rax],al
   14005031c:	xchg   DWORD PTR [rdi+0x0],ebx
   14005031f:	add    ah,ch
   140050321:	gs add al,0x0
   140050324:	xchg   DWORD PTR [rdi+0x0],ebx
   140050327:	add    BYTE PTR [rax+riz*2+0x65f80000],dh
   14005032e:	add    al,0x0
   140050330:	mov    ah,0x60
   140050332:	add    BYTE PTR [rax],al
   140050334:	in     eax,0x60
   140050336:	add    BYTE PTR [rax],al
   140050338:	sbb    al,0x66
   14005033a:	add    al,0x0
   14005033c:	in     eax,0x60
   14005033e:	add    BYTE PTR [rax],al
   140050340:	out    dx,eax
   140050341:	(bad)  
   140050342:	add    BYTE PTR [rax],al
   140050344:	sub    al,0x66
   140050346:	add    al,0x0
   140050348:	add    BYTE PTR [rcx+0x0],ah
   14005034b:	add    BYTE PTR [rip+0x74000061],bl        # 0x1b40503b2
   140050351:	data16 add al,0x0
   140050354:	xor    BYTE PTR [rcx+0x0],ah
   140050357:	add    BYTE PTR [rdi+0x61],dl
   14005035a:	add    BYTE PTR [rax],al
   14005035c:	sbb    BYTE PTR [rdi+0x4],0x0
   140050360:	(bad)  
   140050361:	(bad)  
   140050362:	add    BYTE PTR [rax],al
   140050364:	xchg   DWORD PTR [rdx+0x0],esp
   140050367:	add    BYTE PTR [rsi+riz*2+0x62900004],cl
   14005036e:	add    BYTE PTR [rax],al
   140050370:	jne    0x1400503d8
   140050372:	add    BYTE PTR [rax],al
   140050374:	push   0x7c000467
   140050379:	data16 add BYTE PTR [rax],al
   14005037c:	mov    ebx,0xf8000066
   140050381:	push   0x66f80004
   140050386:	add    BYTE PTR [rax],al
   140050388:	push   rcx
   140050389:	add    BYTE PTR [eax],al
   14005038c:	adc    BYTE PTR [rcx+0x4],ch
   14005038f:	add    BYTE PTR [rax+0x67],ah
   140050392:	add    BYTE PTR [rax],al
   140050394:	sbb    BYTE PTR [rcx+0x0],ch
   140050397:	add    BYTE PTR [rcx+rbp*2],ch
   14005039a:	add    al,0x0
   14005039c:	and    BYTE PTR [rcx+0x0],ch
   14005039f:	add    BYTE PTR [rsi],dh
   1400503a1:	imul   eax,DWORD PTR [rax],0x469d400
   1400503a7:	add    BYTE PTR [rsi],dh
   1400503a9:	imul   eax,DWORD PTR [rax],0x69a400
   1400503af:	add    ah,ah
   1400503b1:	imul   eax,DWORD PTR [rax+rax*1],0x69a4
   1400503b8:	mov    ah,0x69
   1400503ba:	add    BYTE PTR [rax],al
   1400503bc:	cld    
   1400503bd:	imul   eax,DWORD PTR [rax+rax*1],0x69c0
   1400503c4:	movabs eax,ds:0xb000046a3400006b
   1400503cd:	imul   eax,DWORD PTR [rax],0x0
   1400503d0:	xchg   ecx,eax
   1400503d1:	ins    BYTE PTR es:[rdi],dx
   1400503d2:	add    BYTE PTR [rax],al
   1400503d4:	in     al,0x6a
   1400503d6:	add    al,0x0
   1400503d8:	mov    al,0x6c
   1400503da:	add    BYTE PTR [rax],al
   1400503dc:	fs je  0x1400503df
   1400503df:	add    BYTE PTR [rbx+rbp*2],al
   1400503e2:	add    al,0x0
   1400503e4:	ins    BYTE PTR es:[rdi],dx
   1400503e5:	je     0x1400503e7
   1400503e7:	add    BYTE PTR [rdx+0x38000074],ah
   1400503ed:	imul   eax,DWORD PTR [rax+rax*1],0xffffffb0
   1400503f1:	je     0x1400503f3
   1400503f3:	add    dl,ah
   1400503f5:	je     0x1400503f7
   1400503f7:	add    BYTE PTR [rax+0x6b],bl
   1400503fa:	add    al,0x0
   1400503fc:	loop   0x140050472
   1400503fe:	add    BYTE PTR [rax],al
   140050400:	(bad)  
   140050401:	jne    0x140050403
   140050403:	add    BYTE PTR [rax+0x6b],ch
   140050406:	add    al,0x0
   140050408:	(bad)  
   140050409:	jne    0x14005040b
   14005040b:	add    BYTE PTR [rcx+0x75],dl
   14005040e:	add    BYTE PTR [rax],al
   140050410:	sub    BYTE PTR [rbx+0x4],0x0
   140050414:	push   rcx
   140050415:	jne    0x140050417
   140050417:	add    BYTE PTR [rcx+0x75],ah
   14005041a:	add    BYTE PTR [rax],al
   14005041c:	xchg   esp,eax
   14005041d:	imul   eax,DWORD PTR [rax+rax*1],0x61
   140050421:	jne    0x140050423
   140050423:	add    BYTE PTR [rbp+rsi*2+0x0],ch
   140050427:	add    BYTE PTR [rbx+rbp*2+0x75800004],ah
   14005042e:	add    BYTE PTR [rax],al
   140050430:	fdiv   DWORD PTR [rsi+0x0]
   140050433:	add    al,ah
   140050435:	imul   eax,DWORD PTR [rax+rax*1],0xffffffe0
   140050439:	jbe    0x14005043b
   14005043b:	add    BYTE PTR [rdx],dl
   14005043d:	ja     0x14005043f
   14005043f:	add    BYTE PTR [rax],cl
   140050441:	ins    BYTE PTR es:[rdi],dx
   140050442:	add    al,0x0
   140050444:	rex.R ja 0x140050447
   140050447:	add    bl,ah
   140050449:	ja     0x14005044b
   14005044b:	add    BYTE PTR [rax],ah
   14005044d:	ins    BYTE PTR es:[rdi],dx
   14005044e:	add    al,0x0
   140050450:	lock ja 0x140050453
   140050453:	add    al,al
   140050455:	jns    0x140050457
   140050457:	add    BYTE PTR [rax-0x2ffffb94],bh
   14005045d:	jns    0x14005045f
   14005045f:	add    BYTE PTR [rbp+0x7a],dh
   140050462:	add    BYTE PTR [rax],al
   140050464:	test   BYTE PTR [rbp+0x4],ch
   140050467:	add    BYTE PTR [rdx+rdi*2+0x0],bh
   14005046b:	add    BYTE PTR [rbp-0x7fffff86],ah
   140050471:	pop    rdi
   140050472:	add    al,0x0
   140050474:	rex jnp 0x140050477
   140050477:	add    BYTE PTR [rdi+0x7c],dl
   14005047a:	add    BYTE PTR [rax],al
   14005047c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005047d:	ins    DWORD PTR es:[rdi],dx
   14005047e:	add    al,0x0
   140050480:	(bad)  
   140050481:	jl     0x140050483
   140050483:	add    BYTE PTR [rax+0x7c],bh
   140050486:	add    BYTE PTR [rax],al
   140050488:	cmp    al,0x6e
   14005048a:	add    al,0x0
   14005048c:	js     0x14005050a
   14005048e:	add    BYTE PTR [rax],al
   140050490:	mov    edi,DWORD PTR [rax+rax*1+0x0]
   140050494:	rex.R outs dx,BYTE PTR ds:[rsi]
   140050496:	add    al,0x0
   140050498:	mov    edi,DWORD PTR [rax+rax*1+0x0]
   14005049c:	mov    edi,DWORD PTR [rbp+0x0]
   14005049f:	add    BYTE PTR [rax+0x6e],bl
   1400504a2:	add    al,0x0
   1400504a4:	mov    edi,DWORD PTR [rbp+0x0]
   1400504a7:	add    BYTE PTR [rax-0x7fffff83],dl
   1400504ad:	outs   dx,BYTE PTR ds:[rsi]
   1400504ae:	add    al,0x0
   1400504b0:	nop
   1400504b1:	jge    0x1400504b3
   1400504b3:	add    dl,al
   1400504b5:	jge    0x1400504b7
   1400504b7:	add    BYTE PTR [rax-0x3dfffb92],dl
   1400504bd:	jge    0x1400504bf
   1400504bf:	add    bh,cl
   1400504c1:	jge    0x1400504c3
   1400504c3:	add    BYTE PTR [rax-0x1ffffb92],ah
   1400504c9:	jge    0x1400504cb
   1400504cb:	add    BYTE PTR [rip+0x800007e],ah        # 0x14805054f
   1400504d1:	outs   dx,DWORD PTR ds:[rsi]
   1400504d2:	add    al,0x0
   1400504d4:	push   rax
   1400504d5:	jle    0x1400504d7
   1400504d7:	add    BYTE PTR [rbx+0x7e],dh
   1400504da:	add    BYTE PTR [rax],al
   1400504dc:	sub    BYTE PTR [rdi+0x4],ch
   1400504df:	add    BYTE PTR [rbx+0x7e],dh
   1400504e2:	add    BYTE PTR [rax],al
   1400504e4:	mov    ah,0x7e
   1400504e6:	add    BYTE PTR [rax],al
   1400504e8:	xor    BYTE PTR [rdi+0x4],ch
   1400504eb:	add    BYTE PTR [rsi+rdi*2+0x7f070000],dh
   1400504f2:	add    BYTE PTR [rax],al
   1400504f4:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400504f6:	add    al,0x0
   1400504f8:	(bad)  
   1400504f9:	jg     0x1400504fb
   1400504fb:	add    BYTE PTR [rsi],ah
   1400504fd:	jg     0x1400504ff
   1400504ff:	add    BYTE PTR [rax+0x6f],ah
   140050502:	add    al,0x0
   140050504:	es jg  0x140050507
   140050507:	add    BYTE PTR [rax],dh
   140050509:	jg     0x14005050b
   14005050b:	add    BYTE PTR [rax+0x6f],dh
   14005050e:	add    al,0x0
   140050510:	xor    BYTE PTR [rdi+0x0],bh
   140050513:	add    BYTE PTR [rax],bh
   140050515:	jg     0x140050517
   140050517:	add    BYTE PTR [rax+0x4000046f],al
   14005051d:	jg     0x14005051f
   14005051f:	add    BYTE PTR [rdi-0x4bffff81],cl
   140050525:	outs   dx,DWORD PTR ds:[rsi]
   140050526:	add    al,0x0
   140050528:	(bad)  
   140050529:	jg     0x14005052b
   14005052b:	add    bh,ah
   14005052d:	jg     0x14005052f
   14005052f:	add    al,al
   140050531:	outs   dx,DWORD PTR ds:[rsi]
   140050532:	add    al,0x0
   140050534:	out    0x7f,eax
   140050536:	add    BYTE PTR [rax],al
   140050538:	adc    BYTE PTR [rax+0x6fd40000],al
   14005053e:	add    al,0x0
   140050540:	adc    BYTE PTR [rax-0x7fe90000],al
   140050546:	add    BYTE PTR [rax],al
   140050548:	in     al,0x6f
   14005054a:	add    al,0x0
   14005054c:	xor    al,0x80
   14005054e:	add    BYTE PTR [rax],al
   140050550:	push   0xffffffffffffff80
   140050552:	add    BYTE PTR [rax],al
   140050554:	sbb    BYTE PTR [rdi+0x4],0x0
   140050558:	jo     0x1400504da
   14005055a:	add    BYTE PTR [rax],al
   14005055c:	xchg   ebx,eax
   14005055d:	add    BYTE PTR [rax],0x0
   140050560:	hlt    
   140050561:	(bad)  
   140050562:	add    al,0x0
   140050564:	movabs al,ds:0x1c0000b7fa000080
   14005056d:	jo     0x140050573
   14005056f:	add    BYTE PTR [rax],al
   140050571:	mov    eax,0xba350000
   140050576:	add    BYTE PTR [rax],al
   140050578:	push   rsp
   140050579:	jo     0x14005057f
   14005057b:	add    BYTE PTR [rdx+rdi*4],bh
   14005057e:	add    BYTE PTR [rax],al
   140050580:	mov    esi,0x840000ba
   140050585:	jo     0x14005058b
   140050587:	add    BYTE PTR [rax-0x45],ah
   14005058a:	add    BYTE PTR [rax],al
   14005058c:	sar    BYTE PTR [rbx+0x5fc00000],1
   140050592:	add    al,0x0
   140050594:	sub    al,0xbc
   140050596:	add    BYTE PTR [rax],al
   140050598:	mov    bh,BYTE PTR [rax+rax*1+0x470a800]
   14005059f:	add    BYTE PTR [rax-0x2ffff44],dl
   1400505a5:	mov    esp,0x70c00000
   1400505aa:	add    al,0x0
   1400505ac:	add    al,0xbd
   1400505ae:	add    BYTE PTR [rax],al
   1400505b0:	(bad)  
   1400505b1:	mov    ebp,0x70e00000
   1400505b6:	add    al,0x0
   1400505b8:	fdivr  QWORD PTR [rbp-0x41a20000]
   1400505be:	add    BYTE PTR [rax],al
   1400505c0:	clc    
   1400505c1:	jo     0x1400505c7
   1400505c3:	add    BYTE PTR [rsi+rdi*4+0x0],ah
   1400505c7:	add    dl,bl
   1400505c9:	mov    esi,0x60f40000
   1400505ce:	add    al,0x0
   1400505d0:	in     al,dx
   1400505d1:	mov    esi,0xbf480000
   1400505d6:	add    BYTE PTR [rax],al
   1400505d8:	sbb    al,0x71
   1400505da:	add    al,0x0
   1400505dc:	push   rax
   1400505dd:	mov    edi,0xbfeb0000
   1400505e2:	add    BYTE PTR [rax],al
   1400505e4:	sbb    BYTE PTR [rdi+0x4],0x0
   1400505e8:	hlt    
   1400505e9:	mov    edi,0xc0280000
   1400505ee:	add    BYTE PTR [rax],al
   1400505f0:	sub    al,0x71
   1400505f2:	add    al,0x0
   1400505f4:	xor    al,al
   1400505f6:	add    BYTE PTR [rax],al
   1400505f8:	(bad)  
   1400505f9:	rol    DWORD PTR [rax],0x0
   1400505fc:	rex.R jno 0x140050603
   1400505ff:	add    BYTE PTR [rax],dh
   140050601:	rol    DWORD PTR [rax],0x0
   140050604:	push   rax
   140050605:	rol    DWORD PTR [rax],0x0
   140050608:	lock jno 0x14005060f
   14005060b:	add    BYTE PTR [rax-0x58ffff3f],al
   140050611:	rol    DWORD PTR [rax],0x0
   140050614:	sbb    BYTE PTR [rdi+0x4],0x0
   140050618:	(bad)
   14005061c:	push   rsp
   14005061d:	ret    0x0
   140050620:	sbb    al,0x71
   140050622:	add    al,0x0
   140050624:	(bad)  
   140050625:	ret    0x0
   140050628:	movabs al,ds:0xa0000472180000c2
   140050631:	ret    0x0
   140050634:	scas   eax,DWORD PTR es:[rdi]
   140050635:	ret    0x0
   140050638:	sub    BYTE PTR [rdx+0x4],dh
   14005063b:	add    BYTE PTR [rdi-0x1bffff3e],ch
   140050641:	ret    0x0
   140050644:	cmp    al,0x72
   140050646:	add    al,0x0
   140050648:	in     al,0xc2
   14005064a:	add    BYTE PTR [rax],al
   14005064c:	jmp    0x190050713
   140050651:	jb     0x140050657
   140050653:	add    cl,ch
   140050655:	ret    0x0
   140050658:	clc    
   140050659:	ret    0x0
   14005065c:	(bad)  
   14005065d:	jb     0x140050663
   14005065f:	add    al,bh
   140050661:	ret    0x0
   140050664:	nop
   140050665:	ret    
   140050666:	add    BYTE PTR [rax],al
   140050668:	jo     0x1400506dc
   14005066a:	add    al,0x0
   14005066c:	nop
   14005066d:	ret    
   14005066e:	add    BYTE PTR [rax],al
   140050670:	sbb    eax,0x880000c4
   140050675:	jb     0x14005067b
   140050677:	add    BYTE PTR [rip+0x410000c4],bl        # 0x181050741
   14005067d:	(bad)  
   14005067e:	add    BYTE PTR [rax],al
   140050680:	pushf  
   140050681:	jb     0x140050687
   140050683:	add    BYTE PTR [rcx-0x3c],al
   140050686:	add    BYTE PTR [rax],al
   140050688:	gs (bad) 
   14005068a:	add    BYTE PTR [rax],al
   14005068c:	mov    ah,0x72
   14005068e:	add    al,0x0
   140050690:	gs (bad) 
   140050692:	add    BYTE PTR [rax],al
   140050694:	ja     0x14005065a
   140050696:	add    BYTE PTR [rax],al
   140050698:	enter  0x472,0x0
   14005069c:	ja     0x140050662
   14005069e:	add    BYTE PTR [rax],al
   1400506a0:	mov    esp,eax
   1400506a2:	add    BYTE PTR [rax],al
   1400506a4:	loopne 0x140050718
   1400506a6:	add    al,0x0
   1400506a8:	mov    esp,eax
   1400506aa:	add    BYTE PTR [rax],al
   1400506ac:	fwait
   1400506ad:	(bad)  
   1400506ae:	add    BYTE PTR [rax],al
   1400506b0:	hlt    
   1400506b1:	jb     0x1400506b7
   1400506b3:	add    BYTE PTR [rbx-0x40ffff3c],bl
   1400506b9:	(bad)  
   1400506ba:	add    BYTE PTR [rax],al
   1400506bc:	or     al,0x73
   1400506be:	add    al,0x0
   1400506c0:	mov    edi,0xd10000c4
   1400506c5:	(bad)  
   1400506c6:	add    BYTE PTR [rax],al
   1400506c8:	and    BYTE PTR [rbx+0x4],dh
   1400506cb:	add    al,ah
   1400506cd:	(bad)  
   1400506ce:	add    BYTE PTR [rax],al
   1400506d0:	(bad)  
   1400506d1:	(bad)
   1400506d4:	sbb    BYTE PTR [rdi+0x4],0x0
   1400506d8:	adc    ch,al
   1400506da:	add    BYTE PTR [rax],al
   1400506dc:	(bad)
   1400506e0:	sbb    BYTE PTR [rdi+0x4],0x0
   1400506e4:	push   rax
   1400506e5:	(bad)
   1400506e8:	stos   BYTE PTR es:[rdi],al
   1400506e9:	mov    BYTE PTR [rax],0x0
   1400506ec:	jo     0x140050761
   1400506ee:	add    al,0x0
   1400506f0:	mov    al,0xc6
   1400506f2:	add    BYTE PTR [rax],al
   1400506f4:	xor    bh,al
   1400506f6:	add    BYTE PTR [rax],al
   1400506f8:	mov    ah,0x73
   1400506fa:	add    al,0x0
   1400506fc:	rex mov DWORD PTR [rax],0xc7ac00
   140050703:	add    al,al
   140050705:	pop    rdi
   140050706:	add    al,0x0
   140050708:	loopne 0x1400506d1
   14005070a:	add    BYTE PTR [rax],al
   14005070c:	xor    al,0xc8
   14005070e:	add    BYTE PTR [rax],al
   140050710:	(bad)  
   140050711:	jae    0x140050717
   140050713:	add    BYTE PTR [rax+rcx*8+0x0],dl
   140050717:	add    BYTE PTR [rax-0xbffff38],dh
   14005071d:	jae    0x140050723
   14005071f:	add    BYTE PTR [rax-0x31ffff38],bh
   140050725:	leave  
   140050726:	add    BYTE PTR [rax],al
   140050728:	sbb    BYTE PTR [rsp+rax*1+0x0],dh
   14005072c:	or     al,0xca
   14005072e:	add    BYTE PTR [rax],al
   140050730:	push   0xffffffffffffffca
   140050732:	add    BYTE PTR [rax],al
   140050734:	rcr    BYTE PTR [rdi+0x4],0x0
   140050738:	jo     0x140050704
   14005073a:	add    BYTE PTR [rax],al
   14005073c:	mov    esp,0xc00000ca
   140050741:	pop    rdi
   140050742:	add    al,0x0
   140050744:	(bad)  
   140050745:	retf   0x0
   140050748:	add    al,0xcb
   14005074a:	add    BYTE PTR [rax],al
   14005074c:	xor    BYTE PTR [rsp+rax*1+0x0],dh
   140050750:	or     al,0xcb
   140050752:	add    BYTE PTR [rax],al
   140050754:	rex.W retf 
   140050756:	add    BYTE PTR [rax],al
   140050758:	rex.WR je 0x14005075f
   14005075b:	add    BYTE PTR [rax-0x35],dl
   14005075e:	add    BYTE PTR [rax],al
   140050760:	lods   eax,DWORD PTR ds:[rsi]
   140050761:	retf   
   140050762:	add    BYTE PTR [rax],al
   140050764:	push   0xffffffffb4000474
   140050769:	retf   
   14005076a:	add    BYTE PTR [rax],al
   14005076c:	retf   
   14005076d:	retf   
   14005076e:	add    BYTE PTR [rax],al
   140050770:	hlt    
   140050771:	(bad)  
   140050772:	add    al,0x0
   140050774:	(bad)  
   140050775:	retf   
   140050776:	add    BYTE PTR [rax],al
   140050778:	jb     0x140050746
   14005077a:	add    BYTE PTR [rax],al
   14005077c:	je     0x1400507f2
   14005077e:	add    al,0x0
   140050780:	or     ah,0x0
   140050783:	add    BYTE PTR [rdi-0x33],ah
   140050786:	add    BYTE PTR [rax],al
   140050788:	in     al,0x74
   14005078a:	add    al,0x0
   14005078c:	lock int 0x0
   14005078f:	add    bh,ch
   140050791:	(bad)  
   140050792:	add    BYTE PTR [rax],al
   140050794:	push   0xfffffffff8000474
   140050799:	(bad)  
   14005079a:	add    BYTE PTR [rax],al
   14005079c:	movabs ds:0xb00004750c0000cf,eax
   1400507a5:	iret   
   1400507a6:	add    BYTE PTR [rax],al
   1400507a8:	jb     0x14005077a
   1400507aa:	add    BYTE PTR [rax],al
   1400507ac:	mov    al,0x75
   1400507ae:	add    al,0x0
   1400507b0:	js     0x140050782
   1400507b2:	add    BYTE PTR [rax],al
   1400507b4:	lahf   
   1400507b5:	rol    BYTE PTR [rax],1
   1400507b7:	add    ah,dh
   1400507b9:	(bad)  
   1400507ba:	add    al,0x0
   1400507bc:	test   al,0xd0
   1400507be:	add    BYTE PTR [rax],al
   1400507c0:	movabs al,ds:0xb0000475d40000d1
   1400507c9:	rol    DWORD PTR [rax],1
   1400507cb:	add    BYTE PTR [rdi-0x2e],ch
   1400507ce:	add    BYTE PTR [rax],al
   1400507d0:	jl     0x140050848
   1400507d2:	add    al,0x0
   1400507d4:	adc    dl,0x0
   1400507d7:	add    BYTE PTR [rdi-0x3fffff2e],ch
   1400507dd:	pop    rdi
   1400507de:	add    al,0x0
   1400507e0:	hlt    
   1400507e1:	rol    BYTE PTR [rax],cl
   1400507e3:	add    BYTE PTR [rax-0x1fffff2d],cl
   1400507e9:	jbe    0x1400507ef
   1400507eb:	add    BYTE PTR [rax+0x1a0000d3],dl
   1400507f1:	(bad)  
   1400507f2:	add    BYTE PTR [rax],al
   1400507f4:	xor    BYTE PTR [rdi+0x4],dh
   1400507f7:	add    BYTE PTR [rax],ah
   1400507f9:	(bad)  
   1400507fa:	add    BYTE PTR [rax],al
   1400507fc:	mov    esp,ss
   1400507fe:	add    BYTE PTR [rax],al
   140050800:	sbb    al,0x71
   140050802:	add    al,0x0
   140050804:	xchg   esp,eax
   140050805:	(bad)  
   140050806:	add    BYTE PTR [rax],al
   140050808:	cli    
   140050809:	(bad)  
   14005080a:	add    BYTE PTR [rax],al
   14005080c:	xor    BYTE PTR [rdi+0x4],0x0
   140050810:	add    ch,dl
   140050812:	add    BYTE PTR [rax],al
   140050814:	ins    DWORD PTR es:[rdi],dx
   140050815:	(bad)  
   140050816:	add    BYTE PTR [rax],al
   140050818:	sbb    BYTE PTR [rdi+0x4],0x0
   14005081c:	je     0x1400507f3
   14005081e:	add    BYTE PTR [rax],al
   140050820:	loop   0x1400507f7
   140050822:	add    BYTE PTR [rax],al
   140050824:	in     al,dx
   140050825:	(bad)  
   140050826:	add    al,0x0
   140050828:	call   0xde050902
   14005082d:	(bad)  
   14005082e:	add    BYTE PTR [rax],al
   140050830:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050831:	ja     0x140050837
   140050833:	add    BYTE PTR [rsi+rdx*8-0x28940000],ah
   14005083a:	add    BYTE PTR [rax],al
   14005083c:	cmp    al,0x78
   14005083e:	add    al,0x0
   140050840:	adc    bh,0x0
   140050843:	add    BYTE PTR [rsi-0xbffff29],ah
   140050849:	(bad)  
   14005084a:	add    al,0x0
   14005084c:	lods   al,BYTE PTR ds:[rsi]
   14005084d:	xlat   BYTE PTR ds:[rbx]
   14005084e:	add    BYTE PTR [rax],al
   140050850:	cmp    eax,0x5c0000d8
   140050855:	js     0x14005085b
   140050857:	add    BYTE PTR [rax+rbx*8+0x0],al
   14005085b:	add    BYTE PTR [rax+rbx*8+0x787c0000],dh
   140050862:	add    al,0x0
   140050864:	mov    esp,0xf90000d8
   140050869:	fadd   DWORD PTR [rax]
   14005086b:	add    BYTE PTR [rax+rdi*2-0x26fffffc],ah
   140050872:	add    BYTE PTR [rax],al
   140050874:	sub    al,0xd9
   140050876:	add    BYTE PTR [rax],al
   140050878:	sbb    BYTE PTR [rdi+0x4],0x0
   14005087c:	rex fiadd DWORD PTR [rax]
   14005087f:	add    BYTE PTR [rdx-0x43ffff26],dl
   140050885:	js     0x14005088b
   140050887:	add    BYTE PTR [rax+0x140000da],bl
   14005088d:	fild   DWORD PTR [rax]
   14005088f:	add    ah,bh
   140050891:	js     0x140050897
   140050893:	add    BYTE PTR [rbx+rbx*8],ch
   140050896:	add    BYTE PTR [rax],al
   140050898:	push   rcx
   140050899:	fild   DWORD PTR [rax]
   14005089b:	add    BYTE PTR [rax],dh
   14005089d:	jns    0x1400508a3
   14005089f:	add    BYTE PTR [rax-0x25],bl
   1400508a2:	add    BYTE PTR [rax],al
   1400508a4:	lahf   
   1400508a5:	fild   DWORD PTR [rax]
   1400508a7:	add    al,al
   1400508a9:	pop    rdi
   1400508aa:	add    al,0x0
   1400508ac:	mov    al,0xdb
   1400508ae:	add    BYTE PTR [rax],al
   1400508b0:	sub    ah,bl
   1400508b2:	add    BYTE PTR [rax],al
   1400508b4:	sbb    al,0x71
   1400508b6:	add    al,0x0
   1400508b8:	xor    ah,bl
   1400508ba:	add    BYTE PTR [rax],al
   1400508bc:	xchg   esp,eax
   1400508bd:	fadd   QWORD PTR [rax]
   1400508bf:	add    BYTE PTR [rax+0x79],bl
   1400508c2:	add    al,0x0
   1400508c4:	pushf  
   1400508c5:	fadd   QWORD PTR [rax]
   1400508c7:	add    dl,cl
   1400508c9:	fadd   QWORD PTR [rax]
   1400508cb:	add    BYTE PTR [rax+0x79],bh
   1400508ce:	add    al,0x0
   1400508d0:	rcr    ah,1
   1400508d2:	add    BYTE PTR [rax],al
   1400508d4:	rex.WB fld QWORD PTR [r8]
   1400508d7:	add    BYTE PTR [rcx+rdi*2-0x22affffc],dl
   1400508de:	add    BYTE PTR [rax],al
   1400508e0:	mov    edx,0xa80000dd
   1400508e5:	jns    0x1400508eb
   1400508e7:	add    al,al
   1400508e9:	fld    QWORD PTR [rax]
   1400508eb:	add    ch,ah
   1400508ed:	fld    QWORD PTR [rax]
   1400508ef:	add    ah,dh
   1400508f1:	(bad)  
   1400508f2:	add    al,0x0
   1400508f4:	in     al,dx
   1400508f5:	fld    QWORD PTR [rax]
   1400508f7:	add    BYTE PTR [rip+0xffffffffb40000de],cl        # 0xf40509db
   1400508fd:	jns    0x140050903
   1400508ff:	add    BYTE PTR [rsi+rbx*8],dl
   140050902:	add    BYTE PTR [rax],al
   140050904:	(bad)  
   140050905:	fiadd  WORD PTR [rax]
   140050907:	add    al,dl
   140050909:	jns    0x14005090f
   14005090b:	add    BYTE PTR [rax-0x22],al
   14005090e:	add    BYTE PTR [rax],al
   140050910:	fiadd  WORD PTR [eax]
   140050913:	add    ah,dh
   140050915:	(bad)  
   140050916:	add    al,0x0
   140050918:	test   dh,bl
   14005091a:	add    BYTE PTR [rax],al
   14005091c:	jae    0x1400508fd
   14005091e:	add    BYTE PTR [rax],al
   140050920:	call   0xe0050d9e
   140050925:	fild   WORD PTR [rax]
   140050927:	add    al,ah
   140050929:	fild   WORD PTR [rax]
   14005092b:	add    al,al
   14005092d:	pop    rdi
   14005092e:	add    al,0x0
   140050930:	cld    
   140050931:	fild   WORD PTR [rax]
   140050933:	add    BYTE PTR [rcx-0x20],al
   140050936:	add    BYTE PTR [rax],al
   140050938:	lods   al,BYTE PTR ds:[rsi]
   140050939:	jp     0x14005093f
   14005093b:	add    BYTE PTR [rax-0x20],cl
   14005093e:	add    BYTE PTR [rax],al
   140050940:	loopne 0x140050922
   140050942:	add    BYTE PTR [rax],al
   140050944:	(bad)  
   140050945:	jp     0x14005094b
   140050947:	add    al,ch
   140050949:	loopne 0x14005094b
   14005094b:	add    BYTE PTR [rcx],cl
   14005094d:	loope  0x14005094f
   14005094f:	add    ah,dh
   140050951:	jp     0x140050957
   140050953:	add    BYTE PTR [rax],dl
   140050955:	loope  0x140050957
   140050957:	add    BYTE PTR [rcx-0x1f],cl
   14005095a:	add    BYTE PTR [rax],al
   14005095c:	jl     0x1400508e5
   14005095e:	add    al,0x0
   140050960:	nop
   140050961:	loope  0x140050963
   140050963:	add    BYTE PTR [rdi-0x7fffff1f],ah
   140050969:	pop    rdi
   14005096a:	add    al,0x0
   14005096c:	mov    al,0xe1
   14005096e:	add    BYTE PTR [rax],al
   140050970:	loope  0x140050953
   140050972:	add    BYTE PTR [rax],al
   140050974:	in     al,dx
   140050975:	(bad)  
   140050976:	add    al,0x0
   140050978:	lock loope 0x14005097b
   14005097b:	add    bl,bh
   14005097d:	loop   0x14005097f
   14005097f:	add    BYTE PTR [rdi+rax*4-0x1cfbfffc],dl
   140050986:	add    BYTE PTR [rax],al
   140050988:	int3   
   140050989:	jrcxz  0x14005098b
   14005098b:	add    ah,al
   14005098d:	xchg   DWORD PTR [rax+rax*1],eax
   140050990:	(bad)  
   140050991:	jrcxz  0x140050993
   140050993:	add    cl,bh
   140050995:	jrcxz  0x140050997
   140050997:	add    BYTE PTR [rax+0x45f],al
   14005099d:	in     al,0x0
   14005099f:	add    BYTE PTR [rcx-0x27ffff1c],bh
   1400509a5:	xchg   DWORD PTR [rax+rax*1],eax
   1400509a8:	shl    ah,0x0
   1400509ab:	add    BYTE PTR [rbp-0x1bffff1a],ah
   1400509b1:	xchg   DWORD PTR [rax+rax*1],eax
   1400509b4:	lods   al,BYTE PTR ds:[rsi]
   1400509b5:	out    0x0,al
   1400509b7:	add    ch,cl
   1400509b9:	out    0x0,eax
   1400509bb:	add    BYTE PTR [rax],bl
   1400509bd:	mov    BYTE PTR [rax+rax*1],al
   1400509c0:	(bad)  
   1400509c1:	out    0x0,eax
   1400509c3:	add    cl,bh
   1400509c5:	out    0x0,eax
   1400509c7:	add    BYTE PTR [rax+0x45f],al
   1400509cd:	call   0x128d509d2
   1400509d2:	add    BYTE PTR [rax],al
   1400509d4:	xor    BYTE PTR [rax-0x1727fffc],cl
   1400509da:	add    BYTE PTR [rax],al
   1400509dc:	or     al,0xe9
   1400509de:	add    BYTE PTR [rax],al
   1400509e0:	mov    BYTE PTR [rax+rax*1],al
   1400509e4:	adc    al,0xe9
   1400509e6:	add    BYTE PTR [rax],al
   1400509e8:	jg     0x1400509d3
   1400509ea:	add    BYTE PTR [rax],al
   1400509ec:	pop    rsp
   1400509ed:	mov    BYTE PTR [rax+rax*1],al
   1400509f0:	mov    cl,ch
   1400509f2:	add    BYTE PTR [rax],al
   1400509f4:	retf   
   1400509f5:	jmp    0xc87d09fa
   1400509fa:	add    al,0x0
   1400509fc:	(bad)  
   1400509fd:	jmp    0x12a120a02
   140050a02:	add    BYTE PTR [rax],al
   140050a04:	sbb    BYTE PTR [rdi+0x4],0x0
   140050a08:	adc    al,0xea
   140050a0a:	add    BYTE PTR [rax],al
   140050a0c:	sub    dl,0x0
   140050a0f:	add    BYTE PTR [rax-0x77fffba1],al
   140050a15:	(bad)  
   140050a16:	add    BYTE PTR [rax],al
   140050a18:	and    bl,ch
   140050a1a:	add    BYTE PTR [rax],al
   140050a1c:	cwde   
   140050a1d:	mov    BYTE PTR [rax+rax*1],al
   140050a20:	sub    bl,ch
   140050a22:	add    BYTE PTR [rax],al
   140050a24:	rex jmp 0x140050a27
   140050a27:	add    ah,dh
   140050a29:	(bad)  
   140050a2a:	add    al,0x0
   140050a2c:	rex.W jmp 0x140050a2f
   140050a2f:	add    dh,ah
   140050a31:	jmp    0x140050a33
   140050a33:	add    BYTE PTR [rcx+rsi*2],bl
   140050a36:	add    al,0x0
   140050a38:	in     al,dx
   140050a39:	jmp    0x140050a3b
   140050a3b:	add    BYTE PTR [rsp+rbp*8],ah
   140050a3e:	add    BYTE PTR [rax],al
   140050a40:	sbb    BYTE PTR [rdi+0x4],0x0
   140050a44:	sub    al,0xec
   140050a46:	add    BYTE PTR [rax],al
   140050a48:	outs   dx,BYTE PTR ds:[rsi]
   140050a49:	in     al,dx
   140050a4a:	add    BYTE PTR [rax],al
   140050a4c:	sbb    BYTE PTR [rdi+0x4],0x0
   140050a50:	je     0x140050a3e
   140050a52:	add    BYTE PTR [rax],al
   140050a54:	shr    ah,0x0
   140050a57:	add    al,cl
   140050a59:	mov    BYTE PTR [rax+rax*1],al
   140050a5c:	enter  0xec,0x0
   140050a60:	jne    0x140050a4f
   140050a62:	add    BYTE PTR [rax],al
   140050a64:	xchg   esp,eax
   140050a65:	jns    0x140050a6b
   140050a67:	add    BYTE PTR [rbp+rbp*8+0x0],bh
   140050a6b:	add    dl,al
   140050a6d:	in     eax,dx
   140050a6e:	add    BYTE PTR [rax],al
   140050a70:	rcr    BYTE PTR [rdi+0x4],0x0
   140050a74:	enter  0xed,0x0
   140050a78:	(bad)  
   140050a79:	out    dx,al
   140050a7a:	add    BYTE PTR [rax],al
   140050a7c:	loopne 0x140050a06
   140050a7e:	add    al,0x0
   140050a80:	or     al,0xee
   140050a82:	add    BYTE PTR [rax],al
   140050a84:	jbe    0x140050a74
   140050a86:	add    BYTE PTR [rax],al
   140050a88:	sbb    al,0x71
   140050a8a:	add    al,0x0
   140050a8c:	sub    dh,0x0
   140050a8f:	add    BYTE PTR [rbx-0x17ffff12],ch
   140050a95:	mov    BYTE PTR [rax+rax*1],al
   140050a98:	mov    ah,0xee
   140050a9a:	add    BYTE PTR [rax],al
   140050a9c:	rex.XB out dx,eax
   140050a9e:	add    BYTE PTR [rax],al
   140050aa0:	in     al,dx
   140050aa1:	(bad)  
   140050aa2:	add    al,0x0
   140050aa4:	rex.WR out dx,eax
   140050aa6:	add    BYTE PTR [rax],al
   140050aa8:	scas   eax,DWORD PTR es:[rdi]
   140050aa9:	out    dx,eax
   140050aaa:	add    BYTE PTR [rax],al
   140050aac:	add    al,0x89
   140050aae:	add    al,0x0
   140050ab0:	mov    eax,0x220000ef
   140050ab5:	lock add BYTE PTR [rax],al
   140050ab8:	sbb    al,0x71
   140050aba:	add    al,0x0
   140050abc:	sub    al,dh
   140050abe:	add    BYTE PTR [rax],al
   140050ac0:	rex.WR
   140050ac1:	lock add BYTE PTR [rax],al
   140050ac4:	and    BYTE PTR [rcx-0xfabfffc],cl
   140050aca:	add    BYTE PTR [rax],al
   140050acc:	xchg   al,dh
   140050ace:	add    BYTE PTR [rax],al
   140050ad0:	sbb    BYTE PTR [rdi+0x4],0x0
   140050ad4:	mov    eax,?
   140050ad6:	add    BYTE PTR [rax],al
   140050ad8:	(bad)  
   140050ad9:	lock add BYTE PTR [rax],al
   140050adc:	rcr    BYTE PTR [rdi+0x4],0x0
   140050ae0:	shl    al,1
   140050ae2:	add    BYTE PTR [rax],al
   140050ae4:	in     eax,dx
   140050ae5:	lock add BYTE PTR [rax],al
   140050ae8:	hlt    
   140050ae9:	(bad)  
   140050aea:	add    al,0x0
   140050aec:	xor    al,0xf1
   140050aee:	add    BYTE PTR [rax],al
   140050af0:	push   rdi
   140050af1:	icebp  
   140050af2:	add    BYTE PTR [rax],al
   140050af4:	sbb    BYTE PTR [rdi+0x4],0x0
   140050af8:	(bad)  
   140050af9:	icebp  
   140050afa:	add    BYTE PTR [rax],al
   140050afc:	mov    bl,0xf1
   140050afe:	add    BYTE PTR [rax],al
   140050b00:	in     al,dx
   140050b01:	(bad)  
   140050b02:	add    al,0x0
   140050b04:	mov    esp,0x190000f1
   140050b09:	repnz add BYTE PTR [rax],al
   140050b0c:	cmp    al,0x89
   140050b0e:	add    al,0x0
   140050b10:	and    dl,dh
   140050b12:	add    BYTE PTR [rax],al
   140050b14:	pop    rsp
   140050b15:	repnz add BYTE PTR [rax],al
   140050b18:	sbb    BYTE PTR [rdi+0x4],0x0
   140050b1c:	repnz add BYTE PTR fs:[rax],al
   140050b20:	add    al,0xf3
   140050b22:	add    BYTE PTR [rax],al
   140050b24:	pop    rsp
   140050b25:	mov    DWORD PTR [rax+rax*1],eax
   140050b28:	or     al,0xf3
   140050b2a:	add    BYTE PTR [rax],al
   140050b2c:	pushf  
   140050b2d:	repz add BYTE PTR [rax],al
   140050b30:	jo     0x140050abb
   140050b32:	add    al,0x0
   140050b34:	shl    bl,1
   140050b36:	add    BYTE PTR [rax],al
   140050b38:	(bad)  
   140050b39:	hlt    
   140050b3a:	add    BYTE PTR [rax],al
   140050b3c:	cwde   
   140050b3d:	mov    DWORD PTR [rax+rax*1],eax
   140050b40:	adc    ah,dh
   140050b42:	add    BYTE PTR [rax],al
   140050b44:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050b45:	hlt    
   140050b46:	add    BYTE PTR [rax],al
   140050b48:	movabs al,ds:0xe70000f4b0000489
   140050b51:	hlt    
   140050b52:	add    BYTE PTR [rax],al
   140050b54:	int3   
   140050b55:	mov    DWORD PTR [rax+rax*1],eax
   140050b58:	lock hlt 
   140050b5a:	add    BYTE PTR [rax],al
   140050b5c:	and    dh,ch
   140050b5e:	add    BYTE PTR [rax],al
   140050b60:	rcr    BYTE PTR [rdi+0x4],0x0
   140050b64:	sub    ch,dh
   140050b66:	add    BYTE PTR [rax],al
   140050b68:	rex.XB cmc 
   140050b6a:	add    BYTE PTR [rax],al
   140050b6c:	(bad)  
   140050b6d:	mov    DWORD PTR [rax+rax*1],eax
   140050b70:	rex.WR cmc 
   140050b72:	add    BYTE PTR [rax],al
   140050b74:	ins    BYTE PTR es:[rdi],dx
   140050b75:	cmc    
   140050b76:	add    BYTE PTR [rax],al
   140050b78:	hlt    
   140050b79:	(bad)  
   140050b7a:	add    al,0x0
   140050b7c:	xor    ch,0x0
   140050b7f:	add    BYTE PTR [rdx-0x13ffff0b],bl
   140050b85:	mov    DWORD PTR [rax+rax*1],eax
   140050b88:	(bad)  
   140050b89:	cmc    
   140050b8a:	add    BYTE PTR [rax],al
   140050b8c:	int    0xf6
   140050b8e:	add    BYTE PTR [rax],al
   140050b90:	cld    
   140050b91:	jp     0x140050b97
   140050b93:	add    al,ah
   140050b95:	test   BYTE PTR [rax],0x0
   140050b98:	(bad)
   140050b9b:	add    al,al
   140050b9d:	jnp    0x140050ba3
   140050b9f:	add    ah,cl
   140050ba1:	test   DWORD PTR [rax],0xf85000
   140050ba7:	add    al,ch
   140050ba9:	jnp    0x140050baf
   140050bab:	add    BYTE PTR [rax-0x8],bl
   140050bae:	add    BYTE PTR [rax],al
   140050bb0:	jl     0x140050baa
   140050bb2:	add    BYTE PTR [rax],al
   140050bb4:	or     BYTE PTR [rsp+rax*1+0x0],bh
   140050bb8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050bb9:	clc    
   140050bba:	add    BYTE PTR [rax],al
   140050bbc:	sbb    cl,bh
   140050bbe:	add    BYTE PTR [rax],al
   140050bc0:	and    BYTE PTR [rsp+rax*1+0x0],bh
   140050bc4:	and    cl,bh
   140050bc6:	add    BYTE PTR [rax],al
   140050bc8:	rex.WRXB stc 
   140050bca:	add    BYTE PTR [rax],al
   140050bcc:	rcr    BYTE PTR [rdi+0x4],0x0
   140050bd0:	cmp    cl,0x0
   140050bd3:	add    BYTE PTR [rdx-0x6],al
   140050bd6:	add    BYTE PTR [rax],al
   140050bd8:	jo     0x140050c56
   140050bda:	add    al,0x0
   140050bdc:	rex.W cli 
   140050bde:	add    BYTE PTR [rax],al
   140050be0:	(bad)  
   140050be1:	cli    
   140050be2:	add    BYTE PTR [rax],al
   140050be4:	(bad)  
   140050be5:	jl     0x140050beb
   140050be7:	add    ah,cl
   140050be9:	cli    
   140050bea:	add    BYTE PTR [rax],al
   140050bec:	add    bl,bh
   140050bee:	add    BYTE PTR [rax],al
   140050bf0:	sbb    BYTE PTR [rdi+0x4],0x0
   140050bf4:	or     bl,bh
   140050bf6:	add    BYTE PTR [rax],al
   140050bf8:	(bad)  
   140050bf9:	sti    
   140050bfa:	add    BYTE PTR [rax],al
   140050bfc:	and    al,0x7d
   140050bfe:	add    al,0x0
   140050c00:	push   0xffffffffb00000fb
   140050c05:	sti    
   140050c06:	add    BYTE PTR [rax],al
   140050c08:	rcr    BYTE PTR [rdi+0x4],0x0
   140050c0c:	mov    eax,0x2e0000fb
   140050c11:	cld    
   140050c12:	add    BYTE PTR [rax],al
   140050c14:	cmp    BYTE PTR [rbp+0x4],bh
   140050c17:	add    BYTE PTR [rax-0x4],al
   140050c1a:	add    BYTE PTR [rax],al
   140050c1c:	xchg   edx,eax
   140050c1d:	std    
   140050c1e:	add    BYTE PTR [rax],al
   140050c20:	pop    rsp
   140050c21:	jge    0x140050c27
   140050c23:	add    BYTE PTR [rax+0x170000fd],bl
   140050c29:	inc    BYTE PTR [rax]
   140050c2b:	add    BYTE PTR [rax+0x2000047d],bh
   140050c31:	inc    BYTE PTR [rax]
   140050c33:	add    BYTE PTR [rax-0x2],al
   140050c36:	add    BYTE PTR [rax],al
   140050c38:	hlt    
   140050c39:	(bad)  
   140050c3a:	add    al,0x0
   140050c3c:	rex.W inc BYTE PTR [rax]
   140050c3f:	add    al,ch
   140050c41:	inc    BYTE PTR [rax]
   140050c43:	add    ah,bl
   140050c45:	jge    0x140050c4b
   140050c47:	add    al,dh
   140050c49:	inc    BYTE PTR [rax]
   140050c4b:	add    BYTE PTR [rip+0xffffffff800000ff],bl        # 0xc0050d50
   140050c51:	pop    rdi
   140050c52:	add    al,0x0
   140050c54:	and    al,0xff
   140050c56:	add    BYTE PTR [rax],al
   140050c58:	pop    rsi
   140050c59:	inc    DWORD PTR [rax]
   140050c5b:	add    ah,bh
   140050c5d:	jge    0x140050c63
   140050c5f:	add    BYTE PTR [rdi+rdi*8+0x0],ah
   140050c63:	add    BYTE PTR [rbp-0x1],bh
   140050c66:	add    BYTE PTR [rax],al
   140050c68:	adc    al,0x7e
   140050c6a:	add    al,0x0
   140050c6c:	test   bh,bh
   140050c6e:	add    BYTE PTR [rax],al
   140050c70:	mov    edx,0xc00000ff
   140050c75:	pop    rdi
   140050c76:	add    al,0x0
   140050c78:	sar    bh,0x0
   140050c7b:	add    BYTE PTR [rcx+rax*1],bh
   140050c7e:	add    DWORD PTR [rax],eax
   140050c80:	sub    al,0x7e
   140050c82:	add    al,0x0
   140050c84:	add    DWORD PTR [rcx],r8d
   140050c87:	add    BYTE PTR [rbp+0x1],ah
   140050c8a:	add    DWORD PTR [rax],eax
   140050c8c:	hlt    
   140050c8d:	(bad)  
   140050c8e:	add    al,0x0
   140050c90:	mov    WORD PTR [rcx],es
   140050c92:	add    DWORD PTR [rax],eax
   140050c94:	adc    al,0x3
   140050c96:	add    DWORD PTR [rax],eax
   140050c98:	push   rsp
   140050c99:	jle    0x140050c9f
   140050c9b:	add    BYTE PTR [rbx+rax*1],bl
   140050c9e:	add    DWORD PTR [rax],eax
   140050ca0:	jp     0x140050ca5
   140050ca2:	add    DWORD PTR [rax],eax
   140050ca4:	rex jg 0x140050cab
   140050ca7:	add    BYTE PTR [rax+0x5a000103],al
   140050cad:	add    al,0x1
   140050caf:	add    BYTE PTR [rdi+rdi*2+0x4],ah
   140050cb3:	add    BYTE PTR [rax+0x4],ah
   140050cb6:	add    DWORD PTR [rax],eax
   140050cb8:	je     0x140050cbf
   140050cba:	add    DWORD PTR [rax],eax
   140050cbc:	cld    
   140050cbd:	jg     0x140050cc3
   140050cbf:	add    BYTE PTR [rax+0x6000105],al
   140050cc5:	(bad)  
   140050cc6:	add    DWORD PTR [rax],eax
   140050cc8:	sbb    al,0x71
   140050cca:	add    al,0x0
   140050ccc:	xor    BYTE PTR [rsi],al
   140050cce:	add    DWORD PTR [rax],eax
   140050cd0:	add    BYTE PTR [rdi],0x1
   140050cd3:	add    BYTE PTR [rax],ch
   140050cd5:	add    BYTE PTR [rax+rax*1],0x90
   140050cd9:	(bad)  
   140050cda:	add    DWORD PTR [rax],eax
   140050cdc:	fadd   QWORD PTR [rdi]
   140050cde:	add    DWORD PTR [rax],eax
   140050ce0:	lods   al,BYTE PTR ds:[rsi]
   140050ce1:	add    BYTE PTR [rax+rax*1],0x28
   140050ce5:	or     BYTE PTR [rcx],al
   140050ce7:	add    BYTE PTR [rax+0x108],bh
   140050ced:	add    DWORD PTR [rax+rax*1],0x108c0
   140050cf4:	xor    DWORD PTR [rcx],ecx
   140050cf6:	add    DWORD PTR [rax],eax
   140050cf8:	push   rax
   140050cf9:	add    DWORD PTR [rax+rax*1],0x10938
   140050d00:	xchg   ebx,eax
   140050d01:	or     DWORD PTR [rcx],eax
   140050d03:	add    BYTE PTR [rax-0x7f],bh
   140050d06:	add    al,0x0
   140050d08:	movabs al,ds:0xc0000109cf000109
   140050d11:	pop    rdi
   140050d12:	add    al,0x0
   140050d14:	fmul   DWORD PTR [rcx]
   140050d16:	add    DWORD PTR [rax],eax
   140050d18:	sub    cl,BYTE PTR [rdx]
   140050d1a:	add    DWORD PTR [rax],eax
   140050d1c:	fadd   DWORD PTR [rcx+0xa300004]
   140050d22:	add    DWORD PTR [rax],eax
   140050d24:	(bad)  
   140050d25:	or     eax,DWORD PTR [rcx]
   140050d27:	add    BYTE PTR [rax],dl
   140050d29:	(bad)  
   140050d2a:	add    al,0x0
   140050d2c:	and    BYTE PTR [rbx],cl
   140050d2e:	add    DWORD PTR [rax],eax
   140050d30:	ror    DWORD PTR [rbx],cl
   140050d32:	add    DWORD PTR [rax],eax
   140050d34:	cmp    al,0x82
   140050d36:	add    al,0x0
   140050d38:	loopne 0x140050d45
   140050d3a:	add    DWORD PTR [rax],eax
   140050d3c:	push   rbx
   140050d3d:	or     al,0x1
   140050d3f:	add    BYTE PTR [rdx+rax*4+0x4],ah
   140050d43:	add    BYTE PTR [rax+0xc],ah
   140050d46:	add    DWORD PTR [rax],eax
   140050d48:	fisttp QWORD PTR [rcx+rax*1]
   140050d4b:	add    BYTE PTR [rdx+rax*4+0x4],bh
   140050d4f:	add    al,dh
   140050d51:	or     al,0x1
   140050d53:	add    BYTE PTR [rsi],dh
   140050d55:	or     eax,0x711c0001
   140050d5a:	add    al,0x0
   140050d5c:	rex or eax,0xdd50001
   140050d62:	add    DWORD PTR [rax],eax
   140050d64:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050d65:	(bad)  
   140050d66:	add    al,0x0
   140050d68:	loopne 0x140050d77
   140050d6a:	add    DWORD PTR [rax],eax
   140050d6c:	ds (bad) 
   140050d6e:	add    DWORD PTR [rax],eax
   140050d70:	xchg   esp,eax
   140050d71:	jns    0x140050d77
   140050d73:	add    BYTE PTR [rax+0xe],dl
   140050d76:	add    DWORD PTR [rax],eax
   140050d78:	ror    BYTE PTR [rsi],cl
   140050d7a:	add    DWORD PTR [rax],eax
   140050d7c:	int3   
   140050d7d:	(bad)  
   140050d7e:	add    al,0x0
   140050d80:	loopne 0x140050d90
   140050d82:	add    DWORD PTR [rax],eax
   140050d84:	adc    BYTE PTR gs:[rcx],al
   140050d87:	add    ah,ah
   140050d89:	(bad)  
   140050d8a:	add    al,0x0
   140050d8c:	jo     0x140050d9e
   140050d8e:	add    DWORD PTR [rax],eax
   140050d90:	adc    al,BYTE PTR ss:[rcx]
   140050d93:	add    BYTE PTR [rbx+rax*4],cl
   140050d96:	add    al,0x0
   140050d98:	adc    al,BYTE PTR [rcx]
   140050d9b:	add    dh,ah
   140050d9d:	adc    al,BYTE PTR [rcx]
   140050d9f:	add    BYTE PTR [rax-0x7d],bh
   140050da2:	add    al,0x0
   140050da4:	in     al,dx
   140050da5:	adc    al,BYTE PTR [rcx]
   140050da7:	add    BYTE PTR [rsp+rdx*1+0x1],cl
   140050dab:	add    BYTE PTR [rbx+rax*4+0x14540004],dl
   140050db2:	add    DWORD PTR [rax],eax
   140050db4:	mov    edx,DWORD PTR [rip+0xffffffff83fc0001]        # 0xc4010dbb
   140050dba:	add    al,0x0
   140050dbc:	xchg   esp,eax
   140050dbd:	adc    eax,0x16700001
   140050dc2:	add    DWORD PTR [rax],eax
   140050dc4:	sbb    BYTE PTR [rsp+rax*1+0x1167800],al
   140050dcb:	add    BYTE PTR [rdx+0x30000116],ch
   140050dd1:	test   BYTE PTR [rax+rax*1],al
   140050dd4:	fcom   QWORD PTR [rsi]
   140050dd6:	add    DWORD PTR [rax],eax
   140050dd8:	(bad)  
   140050dd9:	(bad)  
   140050dda:	add    DWORD PTR [rax],eax
   140050ddc:	rex.W test BYTE PTR [rax+rax*1],al
   140050de0:	add    al,0x18
   140050de2:	add    DWORD PTR [rax],eax
   140050de4:	out    dx,al
   140050de5:	sbb    BYTE PTR [rcx],al
   140050de7:	add    BYTE PTR [rsp+rax*4+0x4],dh
   140050deb:	add    ah,dh
   140050ded:	sbb    BYTE PTR [rcx],al
   140050def:	add    BYTE PTR [rax+0x38000119],bl
   140050df5:	test   DWORD PTR [rax+rax*1],eax
   140050df8:	movabs al,ds:0x6000011a48000119
   140050e01:	test   DWORD PTR [rax+rax*1],eax
   140050e04:	push   rax
   140050e05:	sbb    al,BYTE PTR [rcx]
   140050e07:	add    ch,dh
   140050e09:	sbb    al,BYTE PTR [rcx]
   140050e0b:	add    BYTE PTR [rax-0x3fffb7b],bh
   140050e11:	sbb    al,BYTE PTR [rcx]
   140050e13:	add    ah,bh
   140050e15:	sbb    eax,DWORD PTR [rcx]
   140050e17:	add    BYTE PTR [rax-0x7a],ch
   140050e1a:	add    al,0x0
   140050e1c:	adc    BYTE PTR [rcx+rax*1],bl
   140050e1f:	add    BYTE PTR [rsp+rbx*1+0x1],cl
   140050e23:	add    al,al
   140050e25:	pop    rdi
   140050e26:	add    al,0x0
   140050e28:	push   rsp
   140050e29:	sbb    al,0x1
   140050e2b:	add    dh,bh
   140050e2d:	sbb    al,0x1
   140050e2f:	add    BYTE PTR [rax+0x10000486],cl
   140050e35:	sbb    eax,0x1d2c0001
   140050e3a:	add    DWORD PTR [rax],eax
   140050e3c:	hlt    
   140050e3d:	(bad)  
   140050e3e:	add    al,0x0
   140050e40:	rex sbb eax,0x1da90001
   140050e46:	add    DWORD PTR [rax],eax
   140050e48:	and    al,0x7d
   140050e4a:	add    al,0x0
   140050e4c:	mov    al,0x1d
   140050e4e:	add    DWORD PTR [rax],eax
   140050e50:	(bad)  
   140050e51:	(bad)  
   140050e52:	add    DWORD PTR [rax],eax
   140050e54:	add    al,0x8a
   140050e56:	add    al,0x0
   140050e58:	mov    BYTE PTR [rsi],bl
   140050e5a:	add    DWORD PTR [rax],eax
   140050e5c:	rcr    DWORD PTR [rsi],1
   140050e5e:	add    DWORD PTR [rax],eax
   140050e60:	push   rsp
   140050e61:	mov    al,BYTE PTR [rax+rax*1]
   140050e64:	fcomp  DWORD PTR [rsi]
   140050e66:	add    DWORD PTR [rax],eax
   140050e68:	push   0x1f
   140050e6a:	add    DWORD PTR [rax],eax
   140050e6c:	sbb    al,0x71
   140050e6e:	add    al,0x0
   140050e70:	jo     0x140050e91
   140050e72:	add    DWORD PTR [rax],eax
   140050e74:	xchg   edx,eax
   140050e75:	(bad)  
   140050e76:	add    DWORD PTR [rax],eax
   140050e78:	sbb    BYTE PTR [rdi+0x4],0x0
   140050e7c:	cwde   
   140050e7d:	(bad)  
   140050e7e:	add    DWORD PTR [rax],eax
   140050e80:	mov    ch,0x1f
   140050e82:	add    DWORD PTR [rax],eax
   140050e84:	je     0x140050e10
   140050e86:	add    al,0x0
   140050e88:	rcr    BYTE PTR [rdi],0x1
   140050e8b:	add    dl,dl
   140050e8d:	(bad)  
   140050e8e:	add    DWORD PTR [rax],eax
   140050e90:	hlt    
   140050e91:	(bad)  
   140050e92:	add    al,0x0
   140050e94:	fcomp  DWORD PTR [rdi]
   140050e96:	add    DWORD PTR [rax],eax
   140050e98:	pop    rbx
   140050e99:	and    BYTE PTR [rcx],al
   140050e9b:	add    BYTE PTR [rdx+rcx*4+0x20840004],cl
   140050ea2:	add    DWORD PTR [rax],eax
   140050ea4:	pop    rcx
   140050ea5:	and    DWORD PTR [rcx],eax
   140050ea7:	add    BYTE PTR [rdx+rcx*4+0x21600004],ch
   140050eae:	add    DWORD PTR [rax],eax
   140050eb0:	stos   BYTE PTR es:[rdi],al
   140050eb1:	and    DWORD PTR [rcx],eax
   140050eb3:	add    BYTE PTR [rax-0x75],dh
   140050eb6:	add    al,0x0
   140050eb8:	mov    al,0x21
   140050eba:	add    DWORD PTR [rax],eax
   140050ebc:	iret   
   140050ebd:	and    al,BYTE PTR [rcx]
   140050ebf:	add    BYTE PTR [rbx+rcx*4+0x22d80004],cl
   140050ec6:	add    DWORD PTR [rax],eax
   140050ec8:	pop    rdi
   140050ec9:	and    eax,DWORD PTR [rcx]
   140050ecb:	add    al,al
   140050ecd:	mov    eax,DWORD PTR [rax+rax*1]
   140050ed0:	push   0xffffffffac000123
   140050ed5:	sub    al,BYTE PTR [rcx]
   140050ed7:	add    al,cl
   140050ed9:	mov    eax,DWORD PTR [rax+rax*1]
   140050edc:	mov    ah,0x2a
   140050ede:	add    DWORD PTR [rax],eax
   140050ee0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050ee1:	sub    eax,DWORD PTR [rcx]
   140050ee3:	add    ah,dh
   140050ee5:	mov    WORD PTR [rax+rax*1],es
   140050ee8:	lods   al,BYTE PTR ds:[rsi]
   140050ee9:	sub    eax,DWORD PTR [rcx]
   140050eeb:	add    dh,dh
   140050eed:	sub    eax,DWORD PTR [rcx]
   140050eef:	add    al,al
   140050ef1:	mov    eax,DWORD PTR [rax+rax*1]
   140050ef4:	cld    
   140050ef5:	sub    eax,DWORD PTR [rcx]
   140050ef7:	add    BYTE PTR [rsi+0x2c],dl
   140050efa:	add    DWORD PTR [rax],eax
   140050efc:	test   BYTE PTR [rbp+0x2c5c0004],cl
   140050f02:	add    DWORD PTR [rax],eax
   140050f04:	jl     0x140050f32
   140050f06:	add    DWORD PTR [rax],eax
   140050f08:	hlt    
   140050f09:	(bad)  
   140050f0a:	add    al,0x0
   140050f0c:	test   BYTE PTR [rcx+rax*1],ch
   140050f0f:	add    BYTE PTR [rdi-0x3ffffed4],bh
   140050f15:	lea    eax,[rax+rax*1]
   140050f18:	enter  0x12c,0x0
   140050f1c:	add    ch,BYTE PTR [rip+0xffffffff8dd80001]        # 0xcddd0f23
   140050f22:	add    al,0x0
   140050f24:	or     BYTE PTR [rip+0x2e4e0001],ch        # 0x16e530f2b
   140050f2a:	add    DWORD PTR [rax],eax
   140050f2c:	lock lea eax,[rax+rax*1]
   140050f30:	push   rsp
   140050f31:	add    DWORD PTR cs:[rax],eax
   140050f34:	jae    0x140050f64
   140050f36:	add    DWORD PTR [rax],eax
   140050f38:	sbb    BYTE PTR [rdi+0x4],0x0
   140050f3c:	jl     0x140050f6c
   140050f3e:	add    DWORD PTR [rax],eax
   140050f40:	mov    edx,0xcc00012f
   140050f45:	mov    es,WORD PTR [rax+rax*1]
   140050f48:	shr    BYTE PTR [rdi],0x1
   140050f4b:	add    cl,dh
   140050f4d:	xor    DWORD PTR [rcx],eax
   140050f4f:	add    ah,dh
   140050f51:	mov    es,WORD PTR [rax+rax*1]
   140050f54:	sub    BYTE PTR [rdx],dh
   140050f56:	add    DWORD PTR [rax],eax
   140050f58:	mov    ebp,0xb4000132
   140050f5d:	pop    QWORD PTR [rax+rax*1]
   140050f60:	(bad)  
   140050f61:	xor    al,BYTE PTR [rcx]
   140050f63:	add    BYTE PTR [rbx],bl
   140050f65:	xor    eax,DWORD PTR [rcx]
   140050f67:	add    BYTE PTR [rax+0x5800045f],al
   140050f6d:	xor    eax,DWORD PTR [rcx]
   140050f6f:	add    BYTE PTR [rcx],cl
   140050f71:	xor    al,0x1
   140050f73:	add    BYTE PTR [rax+rdx*4],al
   140050f76:	add    al,0x0
   140050f78:	adc    BYTE PTR [rcx+rax*1],dh
   140050f7b:	add    BYTE PTR [rsp+rsi*1+0x1],cl
   140050f7f:	add    al,al
   140050f81:	pop    rdi
   140050f82:	add    al,0x0
   140050f84:	(bad)  
   140050f85:	xor    al,0x1
   140050f87:	add    BYTE PTR [rdi+0x40000135],ch
   140050f8d:	nop
   140050f8e:	add    al,0x0
   140050f90:	shl    BYTE PTR [rip+0x37d00001],0x1        # 0x177d50f98
   140050f97:	add    BYTE PTR [rax-0x27fffb70],al
   140050f9d:	(bad)  
   140050f9e:	add    DWORD PTR [rax],eax
   140050fa0:	(bad)  
   140050fa1:	cmp    BYTE PTR [rcx],al
   140050fa3:	add    BYTE PTR [rax],ch
   140050fa5:	xchg   ecx,eax
   140050fa6:	add    al,0x0
   140050fa8:	push   0xc000138
   140050fad:	cmp    DWORD PTR [rcx],eax
   140050faf:	add    BYTE PTR [rcx+rdx*4+0x39140004],bh
   140050fb6:	add    DWORD PTR [rax],eax
   140050fb8:	and    BYTE PTR [rbx],bh
   140050fba:	add    DWORD PTR [rax],eax
   140050fbc:	loopne 0x140050f4f
   140050fbe:	add    al,0x0
   140050fc0:	sub    BYTE PTR [rbx],bh
   140050fc2:	add    DWORD PTR [rax],eax
   140050fc4:	fwait
   140050fc5:	cmp    eax,DWORD PTR [rcx]
   140050fc7:	add    BYTE PTR [rax],dl
   140050fc9:	xchg   edx,eax
   140050fca:	add    al,0x0
   140050fcc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050fcd:	cmp    eax,DWORD PTR [rcx]
   140050fcf:	add    BYTE PTR [rax+0x3c],bl
   140050fd2:	add    DWORD PTR [rax],eax
   140050fd4:	xor    BYTE PTR [rdx+0x3c600004],dl
   140050fda:	add    DWORD PTR [rax],eax
   140050fdc:	movabs ds:0xa800045f8000013c,al
   140050fe5:	cmp    al,0x1
   140050fe7:	add    BYTE PTR [rbp+rdi*1+0x1],bl
   140050feb:	add    BYTE PTR [rax-0x6e],dl
   140050fee:	add    al,0x0
   140050ff0:	xchg   esp,eax
   140050ff1:	cmp    eax,0x3dcd0001
   140050ff6:	add    DWORD PTR [rax],eax
   140050ff8:	rcr    BYTE PTR [rdi+0x4],0x0
   140050ffc:	lock cmp eax,0x3ebf0001
   140051002:	add    DWORD PTR [rax],eax
   140051004:	hlt    
   140051005:	(bad)  
   140051006:	add    al,0x0
   140051008:	sar    BYTE PTR [rsi],1
   14005100a:	add    DWORD PTR [rax],eax
   14005100c:	sbb    DWORD PTR [rdi],edi
   14005100e:	add    DWORD PTR [rax],eax
   140051010:	cwde   
   140051011:	mov    DWORD PTR [rax+rax*1],eax
   140051014:	and    BYTE PTR [rdi],bh
   140051016:	add    DWORD PTR [rax],eax
   140051018:	xchg   ecx,eax
   140051019:	add    DWORD PTR [r8],eax
   14005101c:	jo     0x140050fb0
   14005101e:	add    al,0x0
   140051020:	movabs al,ds:0xf4000141b2000141
   140051029:	(bad)  
   14005102a:	add    al,0x0
   14005102c:	rol    BYTE PTR [rcx+0x1],1
   14005102f:	add    dh,ch
   140051031:	add    DWORD PTR [r8],eax
   140051034:	test   al,0x92
   140051036:	add    al,0x0
   140051038:	hlt    
   140051039:	add    DWORD PTR [r8],eax
   14005103c:	pop    rsi
   14005103d:	rex.X add DWORD PTR [rax],eax
   140051040:	lods   al,BYTE PTR ds:[rsi]
   140051041:	xchg   edx,eax
   140051042:	add    al,0x0
   140051044:	rex.X add DWORD PTR fs:[rax],eax
   140051048:	mov    eax,0xd4000142
   14005104d:	xchg   edx,eax
   14005104e:	add    al,0x0
   140051050:	loopne 0x140051094
   140051052:	add    DWORD PTR [rax],eax
   140051054:	adc    BYTE PTR [rbx+0x1],al
   140051057:	add    al,al
   140051059:	pop    rdi
   14005105a:	add    al,0x0
   14005105c:	sbb    BYTE PTR [rbx+0x1],al
   14005105f:	add    BYTE PTR [rbx+rax*2+0x1],cl
   140051063:	add    BYTE PTR [rax+0x6000045f],al
   140051069:	rex.XB add DWORD PTR [r8],eax
   14005106c:	rol    DWORD PTR [rcx+rax*1+0x0],1
   140051070:	add    al,0x93
   140051072:	add    al,0x0
   140051074:	fadd   DWORD PTR [rcx+rax*1+0x0]
   140051078:	jbe    0x1400510bf
   14005107a:	add    DWORD PTR [rax],eax
   14005107c:	or     al,0x93
   14005107e:	add    al,0x0
   140051080:	jl     0x1400510c7
   140051082:	add    DWORD PTR [rax],eax
   140051084:	xchg   ebx,eax
   140051085:	add    DWORD PTR [r8],r8d
   140051088:	hlt    
   140051089:	(bad)  
   14005108a:	add    al,0x0
   14005108c:	pushf  
   14005108d:	add    DWORD PTR [r8],r8d
   140051090:	or     al,0x46
   140051092:	add    DWORD PTR [rax],eax
   140051094:	xor    BYTE PTR [rbx+0x46300004],dl
   14005109a:	add    DWORD PTR [rax],eax
   14005109c:	add    DWORD PTR [rsi+0x1],0x4899800
   1400510a3:	add    BYTE PTR [rax-0x26fffeba],ah
   1400510a9:	rex.RX add DWORD PTR [rax],r8d
   1400510ac:	hlt    
   1400510ad:	(bad)  
   1400510ae:	add    al,0x0
   1400510b0:	loopne 0x1400510f8
   1400510b2:	add    DWORD PTR [rax],eax
   1400510b4:	clc    
   1400510b5:	rex.RX add DWORD PTR [rax],r8d
   1400510b8:	hlt    
   1400510b9:	(bad)  
   1400510ba:	add    al,0x0
   1400510bc:	or     al,0x47
   1400510be:	add    DWORD PTR [rax],eax
   1400510c0:	(bad)  
   1400510c1:	rex.RXB add DWORD PTR [r8],r8d
   1400510c4:	pop    rsp
   1400510c5:	xchg   ebx,eax
   1400510c6:	add    al,0x0
   1400510c8:	push   0xffffffffad000147
   1400510cd:	rex.RXB add DWORD PTR [r8],r8d
   1400510d0:	sbb    BYTE PTR [rdi+0x4],0x0
   1400510d4:	adc    BYTE PTR [rax+0x1],cl
   1400510d7:	add    BYTE PTR [rbp+0x48],bl
   1400510da:	add    DWORD PTR [rax],eax
   1400510dc:	jl     0x140051071
   1400510de:	add    al,0x0
   1400510e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400510e1:	add    QWORD PTR [rax],rax
   1400510e4:	je     0x14005112f
   1400510e6:	add    DWORD PTR [rax],eax
   1400510e8:	movabs al,ds:0xa3000149e0000493
   1400510f1:	rex.WX add QWORD PTR [rax],rax
   1400510f4:	lods   al,BYTE PTR ds:[rsi]
   1400510f5:	xchg   ebx,eax
   1400510f6:	add    al,0x0
   1400510f8:	mov    eax,0xd500014a
   1400510fd:	rex.WX add QWORD PTR [rax],rax
   140051100:	hlt    
   140051101:	(bad)  
   140051102:	add    al,0x0
   140051104:	fmul   QWORD PTR [rdx+0x1]
   140051107:	add    BYTE PTR [rdi],bh
   140051109:	rex.WXB add QWORD PTR [r8],rax
   14005110c:	sbb    BYTE PTR [rdi+0x4],0x0
   140051110:	jo     0x14005115d
   140051112:	add    DWORD PTR [rax],eax
   140051114:	out    0x4b,eax
   140051116:	add    DWORD PTR [rax],eax
   140051118:	(bad)  
   140051119:	xchg   ebx,eax
   14005111a:	add    al,0x0
   14005111c:	xor    BYTE PTR [rcx+rax*1+0x0],cl
   140051120:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051121:	add    QWORD PTR [rax],r8
   140051124:	int3   
   140051125:	xchg   ebx,eax
   140051126:	add    al,0x0
   140051128:	jo     0x14005117a
   14005112a:	add    DWORD PTR [rax],eax
   14005112c:	out    0x50,eax
   14005112e:	add    DWORD PTR [rax],eax
   140051130:	(bad)  
   140051131:	xchg   ebx,eax
   140051132:	add    al,0x0
   140051134:	adc    BYTE PTR [rcx+0x1],dl
   140051137:	add    BYTE PTR [rdi-0x23fffeaf],al
   14005113d:	xchg   ebx,eax
   14005113e:	add    al,0x0
   140051140:	adc    BYTE PTR [rdx+0x1],dl
   140051143:	add    BYTE PTR [rdi-0x1bfffeae],al
   140051149:	xchg   ebx,eax
   14005114a:	add    al,0x0
   14005114c:	cld    
   14005114d:	push   rdx
   14005114e:	add    DWORD PTR [rax],eax
   140051150:	(bad)  
   140051151:	push   rbx
   140051152:	add    DWORD PTR [rax],eax
   140051154:	hlt    
   140051155:	(bad)  
   140051156:	add    al,0x0
   140051158:	sbb    al,0x53
   14005115a:	add    DWORD PTR [rax],eax
   14005115c:	xchg   edx,eax
   14005115d:	push   rbx
   14005115e:	add    DWORD PTR [rax],eax
   140051160:	call   0xd80515ff
   140051165:	push   rbx
   140051166:	add    DWORD PTR [rax],eax
   140051168:	mov    ebx,0xc0000153
   14005116d:	pop    rdi
   14005116e:	add    al,0x0
   140051170:	(bad)  
   140051171:	push   rbx
   140051172:	add    DWORD PTR [rax],eax
   140051174:	iret   
   140051175:	push   rbp
   140051176:	add    DWORD PTR [rax],eax
   140051178:	rex.W mov sil,0x4
   14005117b:	add    al,bl
   14005117d:	push   rbp
   14005117e:	add    DWORD PTR [rax],eax
   140051180:	sti    
   140051181:	push   rbp
   140051182:	add    DWORD PTR [rax],eax
   140051184:	sbb    BYTE PTR [rdi+0x4],0x0
   140051188:	add    al,0x56
   14005118a:	add    DWORD PTR [rax],eax
   14005118c:	and    al,0x56
   14005118e:	add    DWORD PTR [rax],eax
   140051190:	sbb    BYTE PTR [rdi+0x4],0x0
   140051194:	rex.R push rsi
   140051196:	add    DWORD PTR [rax],eax
   140051198:	rcl    DWORD PTR [rsi+0x1],cl
   14005119b:	add    ah,cl
   14005119d:	(bad)  
   14005119e:	add    al,0x0
   1400511a0:	and    BYTE PTR [rdi+0x1],dl
   1400511a3:	add    BYTE PTR [rdx],ah
   1400511a5:	push   rdi
   1400511a6:	add    DWORD PTR [rax],eax
   1400511a8:	rcl    BYTE PTR [rbx+0x57400004],0x1
   1400511af:	add    BYTE PTR [rbp+0x8000157],cl
   1400511b5:	mov    eax,0x57900004
   1400511ba:	add    DWORD PTR [rax],eax
   1400511bc:	iret   
   1400511bd:	push   rdi
   1400511be:	add    DWORD PTR [rax],eax
   1400511c0:	hlt    
   1400511c1:	(bad)  
   1400511c2:	add    al,0x0
   1400511c4:	cmp    BYTE PTR [rdi+0x1],bl
   1400511c7:	add    BYTE PTR [rbx+0x5f],dl
   1400511ca:	add    DWORD PTR [rax],eax
   1400511cc:	pop    rax
   1400511cd:	addr32 add al,0x0
   1400511d0:	clc    
   1400511d1:	pop    rdi
   1400511d2:	add    DWORD PTR [rax],eax
   1400511d4:	adc    esp,DWORD PTR [rax+0x1]
   1400511d7:	add    al,ch
   1400511d9:	push   0x60d20004
   1400511de:	add    DWORD PTR [rax],eax
   1400511e0:	in     eax,dx
   1400511e1:	(bad)  
   1400511e2:	add    DWORD PTR [rax],eax
   1400511e4:	test   al,0x6c
   1400511e6:	add    al,0x0
   1400511e8:	add    BYTE PTR [rcx+0x1],ah
   1400511eb:	add    BYTE PTR [rcx+riz*2],bl
   1400511ee:	add    DWORD PTR [rax],eax
   1400511f0:	ins    BYTE PTR es:[rdi],dx
   1400511f1:	ins    DWORD PTR es:[rdi],dx
   1400511f2:	add    al,0x0
   1400511f4:	sbb    al,0x61
   1400511f6:	add    DWORD PTR [rax],eax
   1400511f8:	rex.WB (bad) 
   1400511fa:	add    DWORD PTR [rax],eax
   1400511fc:	je     0x14005126b
   1400511fe:	add    al,0x0
   140051200:	push   rax
   140051201:	(bad)  
   140051202:	add    DWORD PTR [rax],eax
   140051204:	imul   esp,DWORD PTR [rcx+0x1],0x0
   140051208:	sub    al,0x6e
   14005120a:	add    al,0x0
   14005120c:	jno    0x14005126f
   14005120e:	add    DWORD PTR [rax],eax
   140051210:	mov    WORD PTR [rcx+0x1],fs
   140051213:	add    al,ah
   140051215:	jno    0x14005121b
   140051217:	add    BYTE PTR [rdx-0x4dfffe9f],dl
   14005121d:	(bad)  
   14005121e:	add    DWORD PTR [rax],eax
   140051220:	adc    BYTE PTR [rdx+0x4],dh
   140051223:	add    BYTE PTR [rax-0x29fffe9f],bh
   140051229:	(bad)  
   14005122a:	add    DWORD PTR [rax],eax
   14005122c:	lods   al,BYTE PTR ds:[rsi]
   14005122d:	jae    0x140051233
   14005122f:	add    BYTE PTR [rdx],al
   140051231:	(bad)  
   140051233:	add    BYTE PTR [rip+0xffffffffa0000162],bl        # 0xe005139b
   140051239:	jne    0x14005123f
   14005123b:	add    BYTE PTR [rbx],ah
   14005123d:	(bad)  
   14005123f:	add    BYTE PTR [rsi],bh
   140051241:	(bad)  
   140051243:	add    BYTE PTR [rsi+rsi*2+0x4],ch
   140051247:	add    BYTE PTR [rip+0x3d000163],bl        # 0x17d0513b0
   14005124d:	movsxd eax,DWORD PTR [rcx]
   14005124f:	add    BYTE PTR [rax+0x79],dl
   140051252:	add    al,0x0
   140051254:	rex.WRXB movsxd r8,DWORD PTR [r9]
   140051257:	add    BYTE PTR [rdx+0x63],ch
   14005125a:	add    DWORD PTR [rax],eax
   14005125c:	pushf  
   14005125d:	jp     0x140051263
   14005125f:	add    BYTE PTR [rsi-0x56fffe9d],cl
   140051265:	movsxd eax,DWORD PTR [rcx]
   140051267:	add    BYTE PTR [rax-0x5efffb85],dh
   14005126d:	add    DWORD PTR gs:[rax],eax
   140051270:	mov    esp,0x28000165
   140051275:	test   DWORD PTR [rax+rax*1],eax
   140051278:	(bad)  
   140051279:	add    DWORD PTR [eax],eax
   14005127c:	xor    DWORD PTR [rdi+0x1],esp
   14005127f:	add    BYTE PTR [rax-0x75],ah
   140051282:	add    al,0x0
   140051284:	out    0x69,eax
   140051286:	add    DWORD PTR [rax],eax
   140051288:	add    eax,0xfc00016a
   14005128d:	xchg   edx,eax
   14005128e:	add    al,0x0
   140051290:	or     ebp,DWORD PTR [rdx+0x1]
   140051293:	add    BYTE PTR [rdi],dh
   140051295:	push   0x1
   140051297:	add    ah,bh
   140051299:	xchg   edx,eax
   14005129a:	add    al,0x0
   14005129c:	cmp    eax,0x7f00016a
   1400512a1:	push   0x1
   1400512a3:	add    ah,bh
   1400512a5:	xchg   edx,eax
   1400512a6:	add    al,0x0
   1400512a8:	test   DWORD PTR [rdx+0x1],ebp
   1400512ab:	add    BYTE PTR [rax-0x3fffe96],ah
   1400512b1:	xchg   edx,eax
   1400512b2:	add    al,0x0
   1400512b4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400512b5:	push   0x1
   1400512b7:	add    dl,dl
   1400512b9:	push   0x1
   1400512bb:	add    ah,bh
   1400512bd:	xchg   edx,eax
   1400512be:	add    al,0x0
   1400512c0:	loopne 0x14005132c
   1400512c2:	add    DWORD PTR [rax],eax
   1400512c4:	add    BYTE PTR [rbx+0x1],ch
   1400512c7:	add    ah,bh
   1400512c9:	xchg   edx,eax
   1400512ca:	add    al,0x0
   1400512cc:	rex ins BYTE PTR es:[rdi],dx
   1400512ce:	add    DWORD PTR [rax],eax
   1400512d0:	rex.WRXB ins BYTE PTR es:[rdi],dx
   1400512d2:	add    DWORD PTR [rax],eax
   1400512d4:	xchg   esp,eax
   1400512d5:	pop    rdi
   1400512d6:	add    al,0x0
   1400512d8:	push   rax
   1400512d9:	ins    BYTE PTR es:[rdi],dx
   1400512da:	add    DWORD PTR [rax],eax
   1400512dc:	imul   ebp,DWORD PTR [rcx+rax*1+0x0],0xffffffb0
   1400512e1:	pop    rdi
   1400512e2:	add    al,0x0
   1400512e4:	ins    BYTE PTR es:[rdi],dx
   1400512e5:	ins    BYTE PTR es:[rdi],dx
   1400512e6:	add    DWORD PTR [rax],eax
   1400512e8:	push   rdx
   1400512e9:	jmp    0x1400512ec
   1400512eb:	add    al,bh
   1400512ed:	pop    rdi
   1400512ee:	add    al,0x0
   1400512f0:	push   rdx
   1400512f1:	jmp    0x1400512f4
   1400512f3:	add    BYTE PTR [rbx-0x15],ch
   1400512f6:	add    DWORD PTR [rax],eax
   1400512f8:	fsub   QWORD PTR [rax+0x4]
   1400512fb:	add    BYTE PTR [rbx+rbp*8+0x1],ch
   1400512ff:	add    BYTE PTR [rsi-0x15],bh
   140051302:	add    DWORD PTR [rax],eax
   140051304:	sbb    al,0x61
   140051306:	add    al,0x0
   140051308:	jle    0x1400512f5
   14005130a:	add    DWORD PTR [rax],eax
   14005130c:	(bad)  
   14005130d:	jmp    0x140051310
   14005130f:	add    BYTE PTR [rcx+riz*2+0x4],ch
   140051313:	add    BYTE PTR [rax-0x5bfffe15],dl
   140051319:	jmp    0x14005131c
   14005131b:	add    BYTE PTR [rcx+riz*2-0x145bfffc],al
   140051322:	add    DWORD PTR [rax],eax
   140051324:	sub    eax,0xb00001ec
   140051329:	(bad)  
   14005132a:	add    al,0x0
   14005132c:	cs in  al,dx
   14005132e:	add    DWORD PTR [rax],eax
   140051330:	ds in  al,dx
   140051332:	add    DWORD PTR [rax],eax
   140051334:	int3   
   140051335:	(bad)  
   140051336:	add    al,0x0
   140051338:	ds in  al,dx
   14005133a:	add    DWORD PTR [rax],eax
   14005133c:	addr32 in al,dx
   14005133e:	add    DWORD PTR [rax],eax
   140051340:	call   0x1a80517a6
   140051345:	in     al,dx
   140051346:	add    DWORD PTR [rax],eax
   140051348:	rex.B out dx,al
   14005134a:	add    DWORD PTR [rax],eax
   14005134c:	adc    BYTE PTR [rdx+0x4],ah
   14005134f:	add    BYTE PTR [rdx-0x12],al
   140051352:	add    DWORD PTR [rax],eax
   140051354:	push   rax
   140051355:	out    dx,al
   140051356:	add    DWORD PTR [rax],eax
   140051358:	je     0x1400513bc
   14005135a:	add    al,0x0
   14005135c:	push   rax
   14005135d:	out    dx,al
   14005135e:	add    DWORD PTR [rax],eax
   140051360:	(bad)  
   140051361:	out    dx,al
   140051362:	add    DWORD PTR [rax],eax
   140051364:	test   BYTE PTR [rdx+0x4],ah
   140051367:	add    al,cl
   140051369:	out    dx,al
   14005136a:	add    DWORD PTR [rax],eax
   14005136c:	or     edi,ebp
   14005136e:	add    DWORD PTR [rax],eax
   140051370:	lods   al,BYTE PTR ds:[rsi]
   140051371:	(bad)  
   140051372:	add    al,0x0
   140051374:	or     ch,bh
   140051376:	add    DWORD PTR [rax],eax
   140051378:	(bad)  
   140051379:	out    dx,eax
   14005137a:	add    DWORD PTR [rax],eax
   14005137c:	int3   
   14005137d:	(bad)  
   14005137e:	add    al,0x0
   140051380:	(bad)  
   140051381:	out    dx,eax
   140051382:	add    DWORD PTR [rax],eax
   140051384:	add    al,0xf0
   140051386:	add    DWORD PTR [rax],eax
   140051388:	movabs al,ds:0x1d0001f004000463
   140051391:	lock add DWORD PTR [rax],eax
   140051394:	adc    BYTE PTR [rsp+rax*1+0x0],ah
   140051398:	(bad)  
   140051399:	lock add DWORD PTR [rax],eax
   14005139c:	sbb    cl,dh
   14005139e:	add    DWORD PTR [rax],eax
   1400513a0:	push   rax
   1400513a1:	fs add al,0x0
   1400513a4:	sbb    cl,dh
   1400513a6:	add    DWORD PTR [rax],eax
   1400513a8:	xor    ecx,0x64bc0001
   1400513ae:	add    al,0x0
   1400513b0:	xor    ecx,0xf1a40001
   1400513b6:	add    DWORD PTR [rax],eax
   1400513b8:	loopne 0x14005141e
   1400513ba:	add    al,0x0
   1400513bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400513bd:	icebp  
   1400513be:	add    DWORD PTR [rax],eax
   1400513c0:	adc    edx,esi
   1400513c2:	add    DWORD PTR [rax],eax
   1400513c4:	adc    al,0x65
   1400513c6:	add    al,0x0
   1400513c8:	adc    dh,dl
   1400513ca:	add    DWORD PTR [rax],eax
   1400513cc:	and    edx,esi
   1400513ce:	add    DWORD PTR [rax],eax
   1400513d0:	sub    al,0x65
   1400513d2:	add    al,0x0
   1400513d4:	and    dh,dl
   1400513d6:	add    DWORD PTR [rax],eax
   1400513d8:	cmp    al,0xf2
   1400513da:	add    DWORD PTR [rax],eax
   1400513dc:	mov    ah,0x65
   1400513de:	add    al,0x0
   1400513e0:	cmp    al,0xf2
   1400513e2:	add    DWORD PTR [rax],eax
   1400513e4:	rex.WRX
   1400513e5:	repnz add DWORD PTR [rax],eax
   1400513e8:	(bad)  
   1400513e9:	gs add al,0x0
   1400513ec:	rex.WRX
   1400513ed:	repnz add DWORD PTR [rax],eax
   1400513f0:	rex.R
   1400513f1:	repz add DWORD PTR [rax],eax
   1400513f4:	push   rax
   1400513f5:	data16 add al,0x0
   1400513f8:	rex.R
   1400513f9:	repz add DWORD PTR [rax],eax
   1400513fc:	rex.WRXB
   1400513fd:	repz add DWORD PTR [rax],eax
   140051400:	jl     0x140051468
   140051402:	add    al,0x0
   140051404:	push   rax
   140051405:	repz add DWORD PTR [rax],eax
   140051408:	mov    ebp,0xa80001f3
   14005140d:	data16 add al,0x0
   140051410:	mov    esi,0x5e0001f3
   140051415:	test   BYTE PTR [rcx],0x0
   140051418:	mov    BYTE PTR [rdi+0x4],ah
   14005141b:	add    BYTE PTR [rsi-0xa],bl
   14005141e:	add    DWORD PTR [rax],eax
   140051420:	ja     0x140051418
   140051422:	add    DWORD PTR [rax],eax
   140051424:	add    BYTE PTR [rcx+0x4],ch
   140051427:	add    BYTE PTR [rax-0xa],bh
   14005142a:	add    DWORD PTR [rax],eax
   14005142c:	lahf   
   14005142d:	test   BYTE PTR [rcx],0x0
   140051430:	sbb    al,0x69
   140051432:	add    al,0x0
   140051434:	movabs al,ds:0x4c0001f8080001f6
   14005143d:	imul   eax,DWORD PTR [rax+rax*1],0x1f808
   140051444:	jno    0x14005143e
   140051446:	add    DWORD PTR [rax],eax
   140051448:	or     al,0x6a
   14005144a:	add    al,0x0
   14005144c:	jno    0x140051446
   14005144e:	add    DWORD PTR [rax],eax
   140051450:	xchg   esp,eax
   140051451:	clc    
   140051452:	add    DWORD PTR [rax],eax
   140051454:	and    al,0x6a
   140051456:	add    al,0x0
   140051458:	xchg   esp,eax
   140051459:	clc    
   14005145a:	add    DWORD PTR [rax],eax
   14005145c:	sub    ecx,edi
   14005145e:	add    DWORD PTR [rax],eax
   140051460:	push   rsp
   140051461:	push   0x4
   140051463:	add    BYTE PTR [rdx],ch
   140051465:	stc    
   140051466:	add    DWORD PTR [rax],eax
   140051468:	mov    bh,cl
   14005146a:	add    DWORD PTR [rax],eax
   14005146c:	hlt    
   14005146d:	push   0x4
   14005146f:	add    BYTE PTR [rdx-0x39fffe07],cl
   140051475:	stc    
   140051476:	add    DWORD PTR [rax],eax
   140051478:	imul   rax,QWORD PTR [rax+rax*1],0xffffffffffffffc6
   14005147d:	stc    
   14005147e:	add    DWORD PTR [rax],eax
   140051480:	fdiv   st(1),st
   140051482:	add    DWORD PTR [rax],eax
   140051484:	mov    eax,0xdc00046b
   140051489:	stc    
   14005148a:	add    DWORD PTR [rax],eax
   14005148c:	in     al,dx
   14005148d:	stc    
   14005148e:	add    DWORD PTR [rax],eax
   140051490:	enter  0x46b,0x0
   140051494:	in     al,dx
   140051495:	stc    
   140051496:	add    DWORD PTR [rax],eax
   140051498:	data16 cli 
   14005149a:	add    DWORD PTR [rax],eax
   14005149c:	clc    
   14005149d:	imul   eax,DWORD PTR [rax+rax*1],0x66
   1400514a1:	cli    
   1400514a2:	add    DWORD PTR [rax],eax
   1400514a4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400514a5:	cli    
   1400514a6:	add    DWORD PTR [rax],eax
   1400514a8:	adc    BYTE PTR [rsp+rax*1+0x0],ch
   1400514ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400514ad:	cli    
   1400514ae:	add    DWORD PTR [rax],eax
   1400514b0:	ret    0x1fa
   1400514b3:	add    BYTE PTR [rax],bh
   1400514b5:	ins    BYTE PTR es:[rdi],dx
   1400514b6:	add    al,0x0
   1400514b8:	ret    0x1fa
   1400514bb:	add    ah,bh
   1400514bd:	cli    
   1400514be:	add    DWORD PTR [rax],eax
   1400514c0:	(bad)  
   1400514c1:	ins    BYTE PTR es:[rdi],dx
   1400514c2:	add    al,0x0
   1400514c4:	cld    
   1400514c5:	cli    
   1400514c6:	add    DWORD PTR [rax],eax
   1400514c8:	(bad)  
   1400514c9:	sti    
   1400514ca:	add    DWORD PTR [rax],eax
   1400514cc:	xchg   esp,eax
   1400514cd:	ins    DWORD PTR es:[rdi],dx
   1400514ce:	add    al,0x0
   1400514d0:	or     bl,bh
   1400514d2:	add    DWORD PTR [rax],eax
   1400514d4:	rex.WRXB sti 
   1400514d6:	add    DWORD PTR [rax],eax
   1400514d8:	mov    esp,0x5000046d
   1400514dd:	sti    
   1400514de:	add    DWORD PTR [rax],eax
   1400514e0:	mov    bh,bl
   1400514e2:	add    DWORD PTR [rax],eax
   1400514e4:	int3   
   1400514e5:	outs   dx,BYTE PTR ds:[rsi]
   1400514e6:	add    al,0x0
   1400514e8:	mov    bh,bl
   1400514ea:	add    DWORD PTR [rax],eax
   1400514ec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400514ed:	sti    
   1400514ee:	add    DWORD PTR [rax],eax
   1400514f0:	clc    
   1400514f1:	outs   dx,BYTE PTR ds:[rsi]
   1400514f2:	add    al,0x0
   1400514f4:	test   al,0xfb
   1400514f6:	add    DWORD PTR [rax],eax
   1400514f8:	mov    edi,0x180001fb
   1400514fd:	outs   dx,DWORD PTR ds:[rsi]
   1400514fe:	add    al,0x0
   140051500:	sar    bl,0x1
   140051503:	add    bh,dl
   140051505:	sti    
   140051506:	add    DWORD PTR [rax],eax
   140051508:	xchg   esp,eax
   140051509:	outs   dx,DWORD PTR ds:[rsi]
   14005150a:	add    al,0x0
   14005150c:	fdivr  st,st(3)
   14005150e:	add    DWORD PTR [rax],eax
   140051510:	(bad)  
   140051511:	sti    
   140051512:	add    DWORD PTR [rax],eax
   140051514:	clc    
   140051515:	outs   dx,DWORD PTR ds:[rsi]
   140051516:	add    al,0x0
   140051518:	(bad)  
   140051519:	sti    
   14005151a:	add    DWORD PTR [rax],eax
   14005151c:	paddb  mm0,QWORD PTR [rcx]
   14005151f:	add    BYTE PTR [rax],cl
   140051521:	jo     0x140051527
   140051523:	add    BYTE PTR [rax],dl
   140051525:	cld    
   140051526:	add    DWORD PTR [rax],eax
   140051528:	in     al,dx
   140051529:	jl     0x14005152d
   14005152b:	add    BYTE PTR [rax+rsi*2+0x4],al
   14005152f:	add    ah,ch
   140051531:	jl     0x140051535
   140051533:	add    cl,bh
   140051535:	jle    0x140051539
   140051537:	add    BYTE PTR [rax+rsi*2+0x4],dh
   14005153b:	add    dl,bh
   14005153d:	jle    0x140051541
   14005153f:	add    BYTE PTR [rbp+0x7f],ch
   140051542:	add    al,BYTE PTR [rax]
   140051544:	cwde   
   140051545:	jo     0x14005154b
   140051547:	add    BYTE PTR [rsi+0x7f],ch
   14005154a:	add    al,BYTE PTR [rax]
   14005154c:	cmp    DWORD PTR [rdi+0x2],0x470b000
   140051553:	add    BYTE PTR [rdx-0x35fffd81],al
   140051559:	jg     0x14005155d
   14005155b:	add    al,dl
   14005155d:	jo     0x140051563
   14005155f:	add    dl,cl
   140051561:	jg     0x140051565
   140051563:	add    bh,bh
   140051565:	jg     0x140051569
   140051567:	add    al,ch
   140051569:	jo     0x14005156f
   14005156b:	add    BYTE PTR [rax],al
   14005156d:	add    BYTE PTR [rdx],0x0
   140051570:	sbb    eax,DWORD PTR [rax+0x710c0002]
   140051576:	add    al,0x0
   140051578:	sbb    al,0x80
   14005157a:	add    al,BYTE PTR [rax]
   14005157c:	(bad)  
   14005157d:	add    BYTE PTR [rdx],0x0
   140051580:	xor    al,0x71
   140051582:	add    al,0x0
   140051584:	xor    BYTE PTR [rax-0x7f7dfffe],al
   14005158a:	add    al,BYTE PTR [rax]
   14005158c:	(bad)  
   14005158d:	jno    0x140051593
   14005158f:	add    BYTE PTR [rdx-0x73fffd80],al
   140051595:	add    BYTE PTR [rdx],0x0
   140051598:	cmp    BYTE PTR [rbx+0x4],dh
   14005159b:	add    BYTE PTR [rax+rax*4-0x7f34fffe],cl
   1400515a2:	add    al,BYTE PTR [rax]
   1400515a4:	rex.W jae 0x1400515ab
   1400515a7:	add    bl,cl
   1400515a9:	add    BYTE PTR [rdx],0x0
   1400515ac:	(bad)  
   1400515ad:	add    BYTE PTR [rdx],0x0
   1400515b0:	(bad)  
   1400515b1:	jae    0x1400515b7
   1400515b3:	add    dh,dl
   1400515b5:	add    BYTE PTR [rdx],0x0
   1400515b8:	std    
   1400515b9:	add    BYTE PTR [rdx],0x0
   1400515bc:	pushf  
   1400515bd:	jae    0x1400515c3
   1400515bf:	add    dh,bh
   1400515c1:	add    BYTE PTR [rdx],0x0
   1400515c4:	sub    eax,DWORD PTR [rcx+0x73c40002]
   1400515ca:	add    al,0x0
   1400515cc:	sub    al,0x81
   1400515ce:	add    al,BYTE PTR [rax]
   1400515d0:	rex add DWORD PTR [rdx],0x473e400
   1400515d7:	add    BYTE PTR [rax-0x7f],al
   1400515da:	add    al,BYTE PTR [rax]
   1400515dc:	ins    DWORD PTR es:[rdi],dx
   1400515dd:	add    DWORD PTR [rdx],0x4740800
   1400515e3:	add    BYTE PTR [rsi-0x7f],ch
   1400515e6:	add    al,BYTE PTR [rax]
   1400515e8:	fild   DWORD PTR [rcx+0x74200002]
   1400515ee:	add    al,0x0
   1400515f0:	fadd   QWORD PTR [rcx-0x7e0ffffe]
   1400515f6:	add    al,BYTE PTR [rax]
   1400515f8:	cmp    al,0x74
   1400515fa:	add    al,0x0
   1400515fc:	lock add DWORD PTR [rdx],0x2820400
   140051603:	add    BYTE PTR [rax+0x74],bl
   140051606:	add    al,0x0
   140051608:	add    al,0x82
   14005160a:	add    al,BYTE PTR [rax]
   14005160c:	cmp    al,BYTE PTR [rdx+0x748c0002]
   140051612:	add    al,0x0
   140051614:	cmp    al,BYTE PTR [rdx-0x7d72fffe]
   14005161a:	add    al,BYTE PTR [rax]
   14005161c:	cld    
   14005161d:	je     0x140051623
   14005161f:	add    BYTE PTR [rsi-0x54fffd7e],cl
   140051625:	(bad)  
   140051626:	add    al,BYTE PTR [rax]
   140051628:	and    BYTE PTR [rbp+0x4],dh
   14005162b:	add    BYTE PTR [rdx+rax*4-0x7d1ffffe],ch
   140051632:	add    al,BYTE PTR [rax]
   140051634:	(bad)  
   140051635:	jne    0x14005163b
   140051637:	add    al,ah
   140051639:	(bad)  
   14005163a:	add    al,BYTE PTR [rax]
   14005163c:	add    DWORD PTR es:[rdx],0x0
   140051640:	in     al,dx
   140051641:	jne    0x140051647
   140051643:	add    BYTE PTR [rsi],ah
   140051645:	add    DWORD PTR [rdx],0x0
   140051648:	add    DWORD PTR [edx],0x0
   14005164c:	cwde   
   14005164d:	jbe    0x140051653
   14005164f:	add    BYTE PTR [rax-0x7d],ch
   140051652:	add    al,BYTE PTR [rax]
   140051654:	jge    0x1400515d9
   140051656:	add    al,BYTE PTR [rax]
   140051658:	clc    
   140051659:	jbe    0x14005165f
   14005165b:	add    BYTE PTR [rsi-0x7d],bh
   14005165e:	add    al,BYTE PTR [rax]
   140051660:	xchg   ebx,eax
   140051661:	add    DWORD PTR [rdx],0x0
   140051664:	rex.W ja 0x14005166b
   140051667:	add    BYTE PTR [rbx+rax*4-0x7bf5fffe],dl
   14005166e:	add    al,BYTE PTR [rax]
   140051670:	xchg   esp,eax
   140051671:	ja     0x140051677
   140051673:	add    BYTE PTR [rdx],cl
   140051675:	test   BYTE PTR [rdx],al
   140051677:	add    BYTE PTR [rdi],bl
   140051679:	test   BYTE PTR [rdx],al
   14005167b:	add    BYTE PTR [rax+rdi*2+0x4],cl
   14005167f:	add    BYTE PTR [rax],ah
   140051681:	test   BYTE PTR [rdx],al
   140051683:	add    BYTE PTR [rdi+0x6c000284],ah
   140051689:	js     0x14005168f
   14005168b:	add    BYTE PTR [rax+0xb000284],ch
   140051691:	test   DWORD PTR [rdx],eax
   140051693:	add    BYTE PTR [rax+rdi*2-0x7af3fffc],dl
   14005169a:	add    al,BYTE PTR [rax]
   14005169c:	cmp    DWORD PTR [rbp+0x78ac0002],eax
   1400516a2:	add    al,0x0
   1400516a4:	cmp    al,BYTE PTR [rbp-0x7a9efffe]
   1400516aa:	add    al,BYTE PTR [rax]
   1400516ac:	push   0x62000479
   1400516b1:	test   DWORD PTR [rdx],eax
   1400516b3:	add    BYTE PTR [rsi-0x7b],bh
   1400516b6:	add    al,BYTE PTR [rax]
   1400516b8:	test   BYTE PTR [rcx+0x4],bh
   1400516bb:	add    BYTE PTR [rsi-0x7b],bh
   1400516be:	add    al,BYTE PTR [rax]
   1400516c0:	popf   
   1400516c1:	test   DWORD PTR [rdx],eax
   1400516c3:	add    al,al
   1400516c5:	jns    0x1400516cb
   1400516c7:	add    BYTE PTR [rsi-0x52fffd7b],bl
   1400516cd:	test   DWORD PTR [rdx],eax
   1400516cf:	add    al,bl
   1400516d1:	jns    0x1400516d7
   1400516d3:	add    BYTE PTR [rsi+0x1a000285],ch
   1400516d9:	xchg   BYTE PTR [rdx],al
   1400516db:	add    BYTE PTR [rdx+rdi*2],al
   1400516de:	add    al,0x0
   1400516e0:	sbb    al,BYTE PTR [rsi-0x79d7fffe]
   1400516e6:	add    al,BYTE PTR [rax]
   1400516e8:	mov    ah,0x7a
   1400516ea:	add    al,0x0
   1400516ec:	sub    BYTE PTR [rsi-0x7968fffe],al
   1400516f2:	add    al,BYTE PTR [rax]
   1400516f4:	sbb    BYTE PTR [rbx+0x4],bh
   1400516f7:	add    BYTE PTR [rax-0x53fffd7a],bl
   1400516fd:	xchg   BYTE PTR [rdx],al
   1400516ff:	add    al,bl
   140051701:	jnp    0x140051707
   140051703:	add    BYTE PTR [rsi+rax*4-0x7946fffe],ch
   14005170a:	add    al,BYTE PTR [rax]
   14005170c:	clc    
   14005170d:	jnp    0x140051713
   14005170f:	add    BYTE PTR [rdx-0x2ffffd7a],bh
   140051715:	xchg   BYTE PTR [rdx],al
   140051717:	add    BYTE PTR [rax],dl
   140051719:	jl     0x14005171f
   14005171b:	add    al,dl
   14005171d:	xchg   BYTE PTR [rdx],al
   14005171f:	add    ch,ah
   140051721:	xchg   BYTE PTR [rdx],al
   140051723:	add    BYTE PTR [rax],bh
   140051725:	jl     0x14005172b
   140051727:	add    dh,ah
   140051729:	xchg   BYTE PTR [rdx],al
   14005172b:	add    BYTE PTR [rdi],ah
   14005172d:	xchg   DWORD PTR [rdx],eax
   14005172f:	add    BYTE PTR [rsp+rdi*2-0x78d7fffc],cl
   140051736:	add    al,BYTE PTR [rax]
   140051738:	cmp    eax,0xec000287
   14005173d:	jl     0x140051743
   14005173f:	add    BYTE PTR [rsi],bh
   140051741:	xchg   DWORD PTR [rdx],eax
   140051743:	add    BYTE PTR [rdx-0x79],dl
   140051746:	add    al,BYTE PTR [rax]
   140051748:	rex.WR jge 0x14005174f
   14005174b:	add    BYTE PTR [rdx-0x79],dl
   14005174e:	add    al,BYTE PTR [rax]
   140051750:	mov    ebx,0x78000287
   140051755:	jge    0x14005175b
   140051757:	add    BYTE PTR [rdi+rax*4-0x7805fffe],bh
   14005175e:	add    al,BYTE PTR [rax]
   140051760:	int3   
   140051761:	jge    0x140051767
   140051763:	add    dl,bh
   140051765:	xchg   DWORD PTR [rdx],eax
   140051767:	add    BYTE PTR [rip+0xffffffffec000288],al        # 0x12c0519f5
   14005176d:	jge    0x140051773
   14005176f:	add    BYTE PTR [rsi],al
   140051771:	mov    BYTE PTR [rdx],al
   140051773:	add    BYTE PTR [rcx],dl
   140051775:	mov    BYTE PTR [rdx],al
   140051777:	add    BYTE PTR [rsi+rdi*2],al
   14005177a:	add    al,0x0
   14005177c:	adc    cl,BYTE PTR [rax-0x77e2fffe]
   140051782:	add    al,BYTE PTR [rax]
   140051784:	sbb    al,0x7e
   140051786:	add    al,0x0
   140051788:	(bad)  
   140051789:	mov    BYTE PTR [rdx],al
   14005178b:	add    BYTE PTR [rdi-0x78],ch
   14005178e:	add    al,BYTE PTR [rax]
   140051790:	rex.R jle 0x140051797
   140051793:	add    BYTE PTR [rax-0x78],dh
   140051796:	add    al,BYTE PTR [rax]
   140051798:	ror    DWORD PTR [rax+0x7e700002],1
   14005179e:	add    al,0x0
   1400517a0:	ror    BYTE PTR [rax-0x76d4fffe],cl
   1400517a6:	add    al,BYTE PTR [rax]
   1400517a8:	push   rsp
   1400517a9:	jg     0x1400517af
   1400517ab:	add    BYTE PTR [rcx+rcx*4],ch
   1400517ae:	add    al,BYTE PTR [rax]
   1400517b0:	xchg   esp,eax
   1400517b1:	mov    DWORD PTR [rdx],eax
   1400517b3:	add    BYTE PTR [rax],bl
   1400517b5:	add    BYTE PTR [rax+rax*1],0x94
   1400517b9:	mov    DWORD PTR [rdx],eax
   1400517bb:	add    dl,ch
   1400517bd:	mov    al,BYTE PTR [rdx]
   1400517bf:	add    BYTE PTR [rax+rax*4+0x4],cl
   1400517c3:	add    dl,ch
   1400517c5:	mov    al,BYTE PTR [rdx]
   1400517c7:	add    BYTE PTR [rcx-0x75],cl
   1400517ca:	add    al,BYTE PTR [rax]
   1400517cc:	enter  0x480,0x0
   1400517d0:	rex.WX mov rax,QWORD PTR [rdx]
   1400517d3:	add    BYTE PTR [rdi-0x75],bl
   1400517d6:	add    al,BYTE PTR [rax]
   1400517d8:	sbb    BYTE PTR [rcx-0x749ffffc],al
   1400517de:	add    al,BYTE PTR [rax]
   1400517e0:	mov    ebp,0x6800028b
   1400517e5:	add    DWORD PTR [rax+rax*1],0x28bbe
   1400517ec:	loop   0x140051779
   1400517ee:	add    al,BYTE PTR [rax]
   1400517f0:	nop
   1400517f1:	add    DWORD PTR [rax+rax*1],0x28be2
   1400517f8:	push   rbp
   1400517f9:	mov    WORD PTR [rdx],es
   1400517fb:	add    BYTE PTR [rdx+rax*4],ch
   1400517fe:	add    al,0x0
   140051800:	push   rsi
   140051801:	mov    WORD PTR [rdx],es
   140051803:	add    BYTE PTR [rcx-0x74],dh
   140051806:	add    al,BYTE PTR [rax]
   140051808:	push   rsp
   140051809:	(bad)  
   14005180a:	add    al,0x0
   14005180c:	jb     0x14005179a
   14005180e:	add    al,BYTE PTR [rax]
   140051810:	jge    0xc2991818
   140051816:	add    al,0x0
   140051818:	adc    BYTE PTR [rbp-0x72bdfffe],cl
   14005181e:	add    al,BYTE PTR [rax]
   140051820:	mov    esp,0x42000482
   140051825:	lea    eax,[rdx]
   140051827:	add    BYTE PTR [rcx-0x72],ah
   14005182a:	add    al,BYTE PTR [rax]
   14005182c:	cld    
   14005182d:	(bad)  
   14005182e:	add    al,0x0
   140051830:	(bad)  
   140051831:	mov    es,WORD PTR [rdx]
   140051833:	add    BYTE PTR [rdi-0x71],al
   140051836:	add    al,BYTE PTR [rax]
   140051838:	xor    BYTE PTR [rbx-0x70b7fffc],al
   14005183e:	add    al,BYTE PTR [rax]
   140051840:	push   rbx
   140051841:	pop    QWORD PTR [rdx]
   140051843:	add    BYTE PTR [rax],bh
   140051845:	test   BYTE PTR [rax+rax*1],al
   140051848:	push   rsp
   140051849:	pop    QWORD PTR [rdx]
   14005184b:	add    al,dl
   14005184d:	pop    QWORD PTR [rdx]
   14005184f:	add    BYTE PTR [rsp+rax*4+0x4],ah
   140051853:	add    al,dl
   140051855:	pop    QWORD PTR [rdx]
   140051857:	add    BYTE PTR [rax+rdx*4],bh
   14005185a:	add    al,BYTE PTR [rax]
   14005185c:	nop
   14005185d:	test   BYTE PTR [rax+rax*1],al
   140051860:	cmp    al,0x90
   140051862:	add    al,BYTE PTR [rax]
   140051864:	pop    rdx
   140051865:	nop
   140051866:	add    al,BYTE PTR [rax]
   140051868:	push   rax
   140051869:	test   DWORD PTR [rax+rax*1],eax
   14005186c:	pop    rdx
   14005186d:	nop
   14005186e:	add    al,BYTE PTR [rax]
   140051870:	xchg   esi,eax
   140051871:	nop
   140051872:	add    al,BYTE PTR [rax]
   140051874:	js     0x1400517fb
   140051876:	add    al,0x0
   140051878:	xchg   esi,eax
   140051879:	nop
   14005187a:	add    al,BYTE PTR [rax]
   14005187c:	scas   al,BYTE PTR es:[rdi]
   14005187d:	xchg   ecx,eax
   14005187e:	add    al,BYTE PTR [rax]
   140051880:	rol    BYTE PTR [rbp-0x6e51fffc],1
   140051886:	add    al,BYTE PTR [rax]
   140051888:	sub    eax,0x78000292
   14005188d:	xchg   BYTE PTR [rax+rax*1],al
   140051890:	cs xchg edx,eax
   140051892:	add    al,BYTE PTR [rax]
   140051894:	pop    rdx
   140051895:	xchg   edx,eax
   140051896:	add    al,BYTE PTR [rax]
   140051898:	test   BYTE PTR [rdi-0x6d99fffc],al
   14005189e:	add    al,BYTE PTR [rax]
   1400518a0:	mov    ch,0x93
   1400518a2:	add    al,BYTE PTR [rax]
   1400518a4:	mov    ah,0x87
   1400518a6:	add    al,0x0
   1400518a8:	mov    dh,0x93
   1400518aa:	add    al,BYTE PTR [rax]
   1400518ac:	xlat   BYTE PTR ds:[rbx]
   1400518ad:	xchg   ebp,eax
   1400518ae:	add    al,BYTE PTR [rax]
   1400518b0:	or     BYTE PTR [rax-0x6a27fffc],cl
   1400518b6:	add    al,BYTE PTR [rax]
   1400518b8:	in     al,dx
   1400518b9:	xchg   ebp,eax
   1400518ba:	add    al,BYTE PTR [rax]
   1400518bc:	rex.WR mov BYTE PTR [rax+rax*1],r8b
   1400518c0:	in     al,dx
   1400518c1:	xchg   ebp,eax
   1400518c2:	add    al,BYTE PTR [rax]
   1400518c4:	xor    DWORD PTR [rsi-0x7797fffe],edx
   1400518ca:	add    al,0x0
   1400518cc:	xor    dl,BYTE PTR [rsi-0x6968fffe]
   1400518d2:	add    al,BYTE PTR [rax]
   1400518d4:	mov    BYTE PTR [rax-0x6967fffc],cl
   1400518da:	add    al,BYTE PTR [rax]
   1400518dc:	add    eax,0xb8000297
   1400518e1:	mov    BYTE PTR [rax+rax*1],al
   1400518e4:	(bad)  
   1400518e5:	xchg   edi,eax
   1400518e6:	add    al,BYTE PTR [rax]
   1400518e8:	sbb    al,0x97
   1400518ea:	add    al,BYTE PTR [rax]
   1400518ec:	ror    BYTE PTR [rax-0x68e3fffc],1
   1400518f2:	add    al,BYTE PTR [rax]
   1400518f4:	sub    dl,BYTE PTR [rdi-0x770bfffe]
   1400518fa:	add    al,0x0
   1400518fc:	sub    dl,BYTE PTR [rdi-0x68bffffe]
   140051902:	add    al,BYTE PTR [rax]
   140051904:	adc    BYTE PTR [rcx-0x68bffffc],cl
   14005190a:	add    al,BYTE PTR [rax]
   14005190c:	outs   dx,BYTE PTR ds:[rsi]
   14005190d:	xchg   edi,eax
   14005190e:	add    al,BYTE PTR [rax]
   140051910:	sub    al,0x89
   140051912:	add    al,0x0
   140051914:	(bad)  
   140051915:	xchg   edi,eax
   140051916:	add    al,BYTE PTR [rax]
   140051918:	nop
   140051919:	xchg   edi,eax
   14005191a:	add    al,BYTE PTR [rax]
   14005191c:	mov    QWORD PTR [rax+rax*1],r8
   140051920:	nop
   140051921:	xchg   edi,eax
   140051922:	add    al,BYTE PTR [rax]
   140051924:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051925:	xchg   edi,eax
   140051926:	add    al,BYTE PTR [rax]
   140051928:	mov    BYTE PTR [rcx-0x685bfffc],cl
   14005192e:	add    al,BYTE PTR [rax]
   140051930:	fcom   QWORD PTR [rdi-0x7643fffe]
   140051936:	add    al,0x0
   140051938:	fcom   QWORD PTR [rdi-0x6800fffe]
   14005193e:	add    al,BYTE PTR [rax]
   140051940:	fmul   QWORD PTR [rcx-0x67fffffc]
   140051946:	add    al,BYTE PTR [rax]
   140051948:	mov    esi,0xf4000298
   14005194d:	mov    DWORD PTR [rax+rax*1],eax
   140051950:	mov    esi,0xd9000298
   140051955:	cwde   
   140051956:	add    al,BYTE PTR [rax]
   140051958:	sbb    al,0x8a
   14005195a:	add    al,0x0
   14005195c:	ficomp DWORD PTR [rax-0x66dffffe]
   140051962:	add    al,BYTE PTR [rax]
   140051964:	mov    al,BYTE PTR fs:[rax+rax*1]
   140051968:	and    BYTE PTR [rcx-0x66b7fffe],bl
   14005196e:	add    al,BYTE PTR [rax]
   140051970:	jl     0x1400518fc
   140051972:	add    al,0x0
   140051974:	cqo    
   140051976:	add    al,BYTE PTR [rax]
   140051978:	outs   dx,DWORD PTR ds:[rsi]
   140051979:	cdq    
   14005197a:	add    al,BYTE PTR [rax]
   14005197c:	pushf  
   14005197d:	mov    al,BYTE PTR [rax+rax*1]
   140051980:	jo     0x14005191b
   140051982:	add    al,BYTE PTR [rax]
   140051984:	fcomp  QWORD PTR [rcx-0x7537fffe]
   14005198a:	add    al,0x0
   14005198c:	fcomp  QWORD PTR [rcx-0x6618fffe]
   140051992:	add    al,BYTE PTR [rax]
   140051994:	jl     0x140051921
   140051996:	add    al,0x0
   140051998:	call   0xf8051c36
   14005199d:	fwait
   14005199e:	add    al,BYTE PTR [rax]
   1400519a0:	mov    al,0x8b
   1400519a2:	add    al,0x0
   1400519a4:	mov    eax,0x3400029b
   1400519a9:	popf   
   1400519aa:	add    al,BYTE PTR [rax]
   1400519ac:	hlt    
   1400519ad:	mov    eax,DWORD PTR [rax+rax*1]
   1400519b0:	xor    al,0x9d
   1400519b2:	add    al,BYTE PTR [rax]
   1400519b4:	(bad)  
   1400519b5:	popf   
   1400519b6:	add    al,BYTE PTR [rax]
   1400519b8:	enter  0x48d,0x0
   1400519bc:	(bad)  
   1400519bd:	popf   
   1400519be:	add    al,BYTE PTR [rax]
   1400519c0:	ins    DWORD PTR es:[rdi],dx
   1400519c1:	popf   
   1400519c2:	add    al,BYTE PTR [rax]
   1400519c4:	loopne 0x140051953
   1400519c6:	add    al,0x0
   1400519c8:	outs   dx,BYTE PTR ds:[rsi]
   1400519c9:	popf   
   1400519ca:	add    al,BYTE PTR [rax]
   1400519cc:	sahf   
   1400519cd:	popf   
   1400519ce:	add    al,BYTE PTR [rax]
   1400519d0:	or     al,0x8e
   1400519d2:	add    al,0x0
   1400519d4:	sahf   
   1400519d5:	popf   
   1400519d6:	add    al,BYTE PTR [rax]
   1400519d8:	(bad)  
   1400519d9:	sahf   
   1400519da:	add    al,BYTE PTR [rax]
   1400519dc:	in     al,0x8e
   1400519de:	add    al,0x0
   1400519e0:	and    BYTE PTR [rsi-0x6183fffe],bl
   1400519e6:	add    al,BYTE PTR [rax]
   1400519e8:	adc    al,0x8f
   1400519ea:	add    al,0x0
   1400519ec:	jl     0x14005198c
   1400519ee:	add    al,BYTE PTR [rax]
   1400519f0:	xchg   ecx,eax
   1400519f1:	sahf   
   1400519f2:	add    al,BYTE PTR [rax]
   1400519f4:	int3   
   1400519f5:	pop    QWORD PTR [rax+rax*1]
   1400519f8:	xchg   edx,eax
   1400519f9:	sahf   
   1400519fa:	add    al,BYTE PTR [rax]
   1400519fc:	rcr    BYTE PTR [rsi-0x6f5ffffe],0x4
   140051a03:	add    al,al
   140051a05:	sahf   
   140051a06:	add    al,BYTE PTR [rax]
   140051a08:	retf   0x29e
   140051a0b:	add    al,dl
   140051a0d:	xchg   ecx,eax
   140051a0e:	add    al,0x0
   140051a10:	retf   0x29e
   140051a13:	add    BYTE PTR [rax],cl
   140051a15:	lahf   
   140051a16:	add    al,BYTE PTR [rax]
   140051a18:	add    BYTE PTR [rdx-0x60f7fffc],dl
   140051a1e:	add    al,BYTE PTR [rax]
   140051a20:	sbb    DWORD PTR [rdi-0x6ddffffe],ebx
   140051a26:	add    al,0x0
   140051a28:	sbb    bl,BYTE PTR [rdi-0x60c9fffe]
   140051a2e:	add    al,BYTE PTR [rax]
   140051a30:	rex xchg edx,eax
   140051a32:	add    al,0x0
   140051a34:	ss lahf 
   140051a36:	add    al,BYTE PTR [rax]
   140051a38:	push   0xffffffffffffff9f
   140051a3a:	add    al,BYTE PTR [rax]
   140051a3c:	(bad)  
   140051a3d:	xchg   edx,eax
   140051a3e:	add    al,0x0
   140051a40:	je     0x1400519e1
   140051a42:	add    al,BYTE PTR [rax]
   140051a44:	rcr    BYTE PTR [rdi+0x5fc00002],cl
   140051a4a:	add    al,0x0
   140051a4c:	fcomp  DWORD PTR [rdi-0x600afffe]
   140051a52:	add    al,BYTE PTR [rax]
   140051a54:	hlt    
   140051a55:	(bad)  
   140051a56:	add    al,0x0
   140051a58:	cld    
   140051a59:	lahf   
   140051a5a:	add    al,BYTE PTR [rax]
   140051a5c:	xor    BYTE PTR [rax+0x5fc00002],ah
   140051a62:	add    al,0x0
   140051a64:	rex.R movabs al,ds:0x5f800002a06d0002
   140051a6e:	add    al,0x0
   140051a70:	je     0x140051a12
   140051a72:	add    al,BYTE PTR [rax]
   140051a74:	mov    esi,0x1c0002a0
   140051a79:	jno    0x140051a7f
   140051a7b:	add    ah,al
   140051a7d:	movabs al,ds:0x5f800002a0f20002
   140051a86:	add    al,0x0
   140051a88:	or     al,0xa1
   140051a8a:	add    al,BYTE PTR [rax]
   140051a8c:	movabs eax,gs:0xa16c00045fc00002
   140051a96:	add    al,BYTE PTR [rax]
   140051a98:	cmp    esp,DWORD PTR [rdx+0x79940002]
   140051a9e:	add    al,0x0
   140051aa0:	rex.R movabs ds:0x60f40002a2650002,al
   140051aaa:	add    al,0x0
   140051aac:	ins    BYTE PTR es:[rdi],dx
   140051aad:	movabs ds:0x711c0002a2b30002,al
   140051ab6:	add    al,0x0
   140051ab8:	mov    esp,0xfc0002a2
   140051abd:	movabs ds:0xa33400045fc00002,al
   140051ac6:	add    al,BYTE PTR [rax]
   140051ac8:	jl     0x140051a6d
   140051aca:	add    al,BYTE PTR [rax]
   140051acc:	rcr    BYTE PTR [rdi+0x4],0x0
   140051ad0:	clc    
   140051ad1:	movabs ds:0x99ac0002a4810002,eax
   140051ada:	add    al,0x0
   140051adc:	mov    BYTE PTR [rdx+rax*1+0x2a52700],ah
   140051ae3:	add    al,al
   140051ae5:	cdq    
   140051ae6:	add    al,0x0
   140051ae8:	xor    BYTE PTR [rbp-0x5a6bfffe],ah
   140051aee:	add    al,BYTE PTR [rax]
   140051af0:	pushf  
   140051af1:	cdq    
   140051af2:	add    al,0x0
   140051af4:	pushf  
   140051af5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051af6:	add    al,BYTE PTR [rax]
   140051af8:	cmps   BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   140051afa:	add    al,BYTE PTR [rax]
   140051afc:	fcom   QWORD PTR [rsi-0x59b3fffc]
   140051b02:	add    al,BYTE PTR [rax]
   140051b04:	out    dx,eax
   140051b05:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051b06:	add    al,BYTE PTR [rax]
   140051b08:	pop    rsp
   140051b09:	xchg   esi,eax
   140051b0a:	add    al,0x0
   140051b0c:	sbb    BYTE PTR [rdi-0x585cfffe],ah
   140051b12:	add    al,BYTE PTR [rax]
   140051b14:	and    al,0x97
   140051b16:	add    al,0x0
   140051b18:	mov    eax,0x390002a7
   140051b1d:	test   al,0x2
   140051b1f:	add    BYTE PTR [rax+0x5800045f],al
   140051b25:	test   al,0x2
   140051b27:	add    dl,cl
   140051b29:	test   al,0x2
   140051b2b:	add    BYTE PTR [rsi+rdx*4-0x571ffffc],ah
   140051b32:	add    al,BYTE PTR [rax]
   140051b34:	rex.WX test rax,0xffffffff96240002
   140051b3a:	add    al,0x0
   140051b3c:	js     0x140051ae7
   140051b3e:	add    al,BYTE PTR [rax]
   140051b40:	(bad)  
   140051b41:	test   eax,0x5f800002
   140051b46:	add    al,0x0
   140051b48:	movabs al,ds:0x640002aa300002a9
   140051b51:	cdq    
   140051b52:	add    al,0x0
   140051b54:	(bad)  
   140051b55:	stos   BYTE PTR es:[rdi],al
   140051b56:	add    al,BYTE PTR [rax]
   140051b58:	(bad)
   140051b5c:	rcr    BYTE PTR [rdi+0x4],0x0
   140051b60:	movabs al,ds:0xc00002aacf0002aa
   140051b69:	pop    rdi
   140051b6a:	add    al,0x0
   140051b6c:	loopne 0x140051b18
   140051b6e:	add    al,BYTE PTR [rax]
   140051b70:	bts    DWORD PTR [rdx],eax
   140051b73:	add    al,al
   140051b75:	pop    rdi
   140051b76:	add    al,0x0
   140051b78:	and    BYTE PTR [rbx-0x54b0fffe],ch
   140051b7e:	add    al,BYTE PTR [rax]
   140051b80:	rcr    BYTE PTR [rdi+0x4],0x0
   140051b84:	(bad)  
   140051b85:	stos   DWORD PTR es:[rdi],eax
   140051b86:	add    al,BYTE PTR [rax]
   140051b88:	sahf   
   140051b89:	stos   DWORD PTR es:[rdi],eax
   140051b8a:	add    al,BYTE PTR [rax]
   140051b8c:	rcr    BYTE PTR [rdi+0x4],0x0
   140051b90:	mov    al,0xab
   140051b92:	add    al,BYTE PTR [rax]
   140051b94:	fild   QWORD PTR [rbx+0x5fc00002]
   140051b9a:	add    al,0x0
   140051b9c:	lock stos DWORD PTR es:[rdi],eax
   140051b9e:	add    al,BYTE PTR [rax]
   140051ba0:	sub    DWORD PTR [rdx+rax*1+0x45fc000],ebp
   140051ba7:	add    BYTE PTR [rax],dh
   140051ba9:	lods   al,BYTE PTR ds:[rsi]
   140051baa:	add    al,BYTE PTR [rax]
   140051bac:	pop    rdi
   140051bad:	lods   al,BYTE PTR ds:[rsi]
   140051bae:	add    al,BYTE PTR [rax]
   140051bb0:	rcr    BYTE PTR [rdi+0x4],0x0
   140051bb4:	jo     0x140051b62
   140051bb6:	add    al,BYTE PTR [rax]
   140051bb8:	ret    
   140051bb9:	lods   al,BYTE PTR ds:[rsi]
   140051bba:	add    al,BYTE PTR [rax]
   140051bbc:	rcr    BYTE PTR [rdi+0x4],0x0
   140051bc0:	shr    BYTE PTR [rdx+rax*1+0x2acff00],1
   140051bc7:	add    al,al
   140051bc9:	pop    rdi
   140051bca:	add    al,0x0
   140051bcc:	adc    BYTE PTR [rbp-0x52c0fffe],ch
   140051bd2:	add    al,BYTE PTR [rax]
   140051bd4:	rcr    BYTE PTR [rdi+0x4],0x0
   140051bd8:	lods   rax,QWORD PTR ds:[rsi]
   140051bda:	add    al,BYTE PTR [rax]
   140051bdc:	jb     0x140051b8b
   140051bde:	add    al,BYTE PTR [rax]
   140051be0:	rcr    BYTE PTR [rdi+0x4],0x0
   140051be4:	sub    BYTE PTR [rbp-0x5241fffe],0x2
   140051beb:	add    al,al
   140051bed:	pop    rdi
   140051bee:	add    al,0x0
   140051bf0:	loopne 0x140051b9f
   140051bf2:	add    al,BYTE PTR [rax]
   140051bf4:	adc    DWORD PTR [rsi+0x5fc00002],ebp
   140051bfa:	add    al,0x0
   140051bfc:	and    BYTE PTR [rsi-0x51aefffe],ch
   140051c02:	add    al,BYTE PTR [rax]
   140051c04:	rcr    BYTE PTR [rdi+0x4],0x0
   140051c08:	jo     0x140051bb8
   140051c0a:	add    al,BYTE PTR [rax]
   140051c0c:	loopne 0x140051bbc
   140051c0e:	add    al,BYTE PTR [rax]
   140051c10:	sbb    al,0x71
   140051c12:	add    al,0x0
   140051c14:	call   0x170051ec7
   140051c19:	scas   eax,DWORD PTR es:[rdi]
   140051c1a:	add    al,BYTE PTR [rax]
   140051c1c:	sbb    BYTE PTR [rdi+0x4],0x0
   140051c20:	cmp    BYTE PTR [rdi-0x5046fffe],ch
   140051c26:	add    al,BYTE PTR [rax]
   140051c28:	xchg   esp,eax
   140051c29:	jns    0x140051c2f
   140051c2b:	add    al,al
   140051c2d:	scas   eax,DWORD PTR es:[rdi]
   140051c2e:	add    al,BYTE PTR [rax]
   140051c30:	fld    TBYTE PTR [rdi+0x60f40002]
   140051c36:	add    al,0x0
   140051c38:	in     al,0xaf
   140051c3a:	add    al,BYTE PTR [rax]
   140051c3c:	mov    bl,0xb0
   140051c3e:	add    al,BYTE PTR [rax]
   140051c40:	cmp    al,0x95
   140051c42:	add    al,0x0
   140051c44:	mov    bl,0xb0
   140051c46:	add    al,BYTE PTR [rax]
   140051c48:	(bad)  
   140051c49:	mov    al,0x2
   140051c4b:	add    BYTE PTR [rbp+rdx*4-0x4f2bfffc],ch
   140051c52:	add    al,BYTE PTR [rax]
   140051c54:	repnz mov al,0x2
   140051c57:	add    ah,dh
   140051c59:	(bad)  
   140051c5a:	add    al,0x0
   140051c5c:	clc    
   140051c5d:	mov    al,0x2
   140051c5f:	add    BYTE PTR [rcx+rsi*4],ah
   140051c62:	add    al,BYTE PTR [rax]
   140051c64:	rcr    BYTE PTR [rdi+0x4],0x0
   140051c68:	sub    al,0xb1
   140051c6a:	add    al,BYTE PTR [rax]
   140051c6c:	pop    rsi
   140051c6d:	mov    cl,0x2
   140051c6f:	add    BYTE PTR [rsi+rbp*4-0x4e8ffffc],dl
   140051c76:	add    al,BYTE PTR [rax]
   140051c78:	call   0x16c051f2e
   140051c7d:	xchg   ebp,eax
   140051c7e:	add    al,0x0
   140051c80:	add    al,0xb2
   140051c82:	add    al,BYTE PTR [rax]
   140051c84:	(bad)  
   140051c85:	mov    bl,0x2
   140051c87:	add    BYTE PTR [rax+rbx*4-0x4cbcfffc],cl
   140051c8e:	add    al,BYTE PTR [rax]
   140051c90:	pop    rsi
   140051c91:	mov    bl,0x2
   140051c93:	add    BYTE PTR [rax],bl
   140051c95:	cdq    
   140051c96:	add    al,0x0
   140051c98:	fs mov bl,0x2
   140051c9b:	add    BYTE PTR [rbx-0x4c],al
   140051c9e:	add    al,BYTE PTR [rax]
   140051ca0:	pop    rsp
   140051ca1:	xchg   edi,eax
   140051ca2:	add    al,0x0
   140051ca4:	rex.WRXB mov r12b,0x2
   140051ca7:	add    BYTE PTR [rdx-0x4c],ch
   140051caa:	add    al,BYTE PTR [rax]
   140051cac:	in     al,0x97
   140051cae:	add    al,0x0
   140051cb0:	jo     0x140051c66
   140051cb2:	add    al,BYTE PTR [rax]
   140051cb4:	rex.WRXB mov r13b,0x2
   140051cb7:	add    ah,dh
   140051cb9:	xchg   edi,eax
   140051cba:	add    al,0x0
   140051cbc:	pop    rbx
   140051cbd:	mov    ch,0x2
   140051cbf:	add    BYTE PTR [rsi-0x4b],dh
   140051cc2:	add    al,BYTE PTR [rax]
   140051cc4:	jl     0x140051c5e
   140051cc6:	add    al,0x0
   140051cc8:	movabs al,ds:0xf40002b5c20002b5
   140051cd1:	(bad)  
   140051cd2:	add    al,0x0
   140051cd4:	shl    BYTE PTR [rbp-0x49eefffe],1
   140051cda:	add    al,BYTE PTR [rax]
   140051cdc:	sbb    BYTE PTR [rdi+0x4],0x0
   140051ce0:	sbb    BYTE PTR [rsi-0x49aafffe],dh
   140051ce6:	add    al,BYTE PTR [rax]
   140051ce8:	push   0x5c00049a
   140051ced:	mov    dh,0x2
   140051cef:	add    BYTE PTR [rdi],dl
   140051cf1:	mov    bh,0x2
   140051cf3:	add    ah,cl
   140051cf5:	(bad)  
   140051cf6:	add    al,0x0
   140051cf8:	and    BYTE PTR [rdi-0x47d7fffe],dh
   140051cfe:	add    al,BYTE PTR [rax]
   140051d00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051d01:	(bad)  
   140051d02:	add    al,0x0
   140051d04:	xor    BYTE PTR [rax-0x4730fffe],bh
   140051d0a:	add    al,BYTE PTR [rax]
   140051d0c:	or     BYTE PTR [rdx-0x4727fffc],bl
   140051d12:	add    al,BYTE PTR [rax]
   140051d14:	(bad)  
   140051d15:	mov    ebx,0x9abc0002
   140051d1a:	add    al,0x0
   140051d1c:	adc    BYTE PTR [rbx-0x4471fffe],bh
   140051d22:	add    al,BYTE PTR [rax]
   140051d24:	fcom   DWORD PTR [rbp-0x4453fffc]
   140051d2a:	add    al,BYTE PTR [rax]
   140051d2c:	mov    bl,0xbc
   140051d2e:	add    al,BYTE PTR [rax]
   140051d30:	mov    esp,0xbc000495
   140051d35:	mov    esp,0xbf960002
   140051d3a:	add    al,BYTE PTR [rax]
   140051d3c:	in     al,dx
   140051d3d:	xchg   ebx,eax
   140051d3e:	add    al,0x0
   140051d40:	int3   
   140051d41:	mov    edi,0xc0300002
   140051d46:	add    al,BYTE PTR [rax]
   140051d48:	rcr    BYTE PTR [rdi+0x4],0x0
   140051d4c:	cmp    al,al
   140051d4e:	add    al,BYTE PTR [rax]
   140051d50:	and    eax,ecx
   140051d52:	add    al,BYTE PTR [rax]
   140051d54:	and    al,0x7d
   140051d56:	add    al,0x0
   140051d58:	movabs al,ds:0xf40002c2340002c1
   140051d61:	cdq    
   140051d62:	add    al,0x0
   140051d64:	cmp    al,0xc2
   140051d66:	add    al,BYTE PTR [rax]
   140051d68:	ins    BYTE PTR es:[rdi],dx
   140051d69:	ret    
   140051d6a:	add    al,BYTE PTR [rax]
   140051d6c:	je     0x140051d23
   140051d6e:	add    al,0x0
   140051d70:	je     0x140051d35
   140051d72:	add    al,BYTE PTR [rax]
   140051d74:	(bad)  
   140051d75:	(bad)
   140051d78:	js     0x140051d0e
   140051d7a:	add    al,0x0
   140051d7c:	loop   0x140051d43
   140051d7e:	add    al,BYTE PTR [rax]
   140051d80:	std    
   140051d81:	(bad)
   140051d84:	sbb    al,0x95
   140051d86:	add    al,0x0
   140051d88:	adc    dh,al
   140051d8a:	add    al,BYTE PTR [rax]
   140051d8c:	mov    BYTE PTR cs:[rdx],0x0
   140051d90:	sbb    BYTE PTR [rdi+0x4],0x0
   140051d94:	xor    al,0xc6
   140051d96:	add    al,BYTE PTR [rax]
   140051d98:	push   rdx
   140051d99:	mov    BYTE PTR [rdx],0x0
   140051d9c:	sbb    BYTE PTR [rdi+0x4],0x0
   140051da0:	(bad)  
   140051da1:	mov    BYTE PTR [rdx],0x0
   140051da4:	popf   
   140051da5:	mov    BYTE PTR [rdx],0x0
   140051da8:	rcr    BYTE PTR [rdi+0x4],0x0
   140051dac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051dad:	mov    BYTE PTR [rdx],0x0
   140051db0:	ss leave 
   140051db2:	add    al,BYTE PTR [rax]
   140051db4:	mov    WORD PTR [rdx-0x36c3fffc],ds
   140051dba:	add    al,BYTE PTR [rax]
   140051dbc:	mov    edx,0xdc0002c9
   140051dc1:	(bad)  
   140051dc2:	add    al,0x0
   140051dc4:	ror    cl,0x2
   140051dc7:	add    BYTE PTR [rcx],al
   140051dc9:	retf   0x2
   140051dcc:	xchg   esp,eax
   140051dcd:	(bad)  
   140051dce:	add    al,0x0
   140051dd0:	adc    dl,cl
   140051dd2:	add    al,BYTE PTR [rax]
   140051dd4:	jl     0x140051da3
   140051dd6:	add    al,BYTE PTR [rax]
   140051dd8:	fcomp  DWORD PTR [rcx-0x326ffffc]
   140051dde:	add    al,BYTE PTR [rax]
   140051de0:	out    0xcd,eax
   140051de2:	add    al,BYTE PTR [rax]
   140051de4:	sbb    al,0x71
   140051de6:	add    al,0x0
   140051de8:	lock int 0x2
   140051deb:	add    BYTE PTR [rip+0xfffffffff40002ce],bl        # 0x1340520bf
   140051df1:	(bad)  
   140051df2:	add    al,0x0
   140051df4:	xor    dh,cl
   140051df6:	add    al,BYTE PTR [rax]
   140051df8:	movabs ds:0xb00004711c0002ce,eax
   140051e01:	(bad)  
   140051e02:	add    al,BYTE PTR [rax]
   140051e04:	and    ecx,edi
   140051e06:	add    al,BYTE PTR [rax]
   140051e08:	sbb    al,0x71
   140051e0a:	add    al,0x0
   140051e0c:	xor    bh,cl
   140051e0e:	add    al,BYTE PTR [rax]
   140051e10:	or     bh,0x2
   140051e13:	add    BYTE PTR [rdi*2-0x306ffffc],ah
   140051e1a:	add    al,BYTE PTR [rax]
   140051e1c:	loopne 0x140051ded
   140051e1e:	add    al,BYTE PTR [rax]
   140051e20:	and    al,0x7d
   140051e22:	add    al,0x0
   140051e24:	lock iret 
   140051e26:	add    al,BYTE PTR [rax]
   140051e28:	mov    al,dl
   140051e2a:	add    al,BYTE PTR [rax]
   140051e2c:	call   0xe00522c6
   140051e31:	rol    BYTE PTR [rdx],1
   140051e33:	add    cl,dl
   140051e35:	rol    BYTE PTR [rdx],1
   140051e37:	add    al,al
   140051e39:	pop    rdi
   140051e3a:	add    al,0x0
   140051e3c:	loopne 0x140051e0e
   140051e3e:	add    al,BYTE PTR [rax]
   140051e40:	js     0x140051e13
   140051e42:	add    al,BYTE PTR [rax]
   140051e44:	sub    BYTE PTR [rcx-0x2e5bfffc],bl
   140051e4a:	add    al,BYTE PTR [rax]
   140051e4c:	imul   edx,edx,0x2
   140051e4f:	add    BYTE PTR [rdi*2-0x2d8bfffc],ah
   140051e56:	add    al,BYTE PTR [rax]
   140051e58:	(bad)  
   140051e59:	rol    DWORD PTR [rdx],cl
   140051e5b:	add    BYTE PTR [rax-0x66],bh
   140051e5e:	add    al,0x0
   140051e60:	movabs al,ds:0x700002d3de0002d3
   140051e69:	(bad)  
   140051e6a:	add    al,0x0
   140051e6c:	in     al,0xd3
   140051e6e:	add    al,BYTE PTR [rax]
   140051e70:	imul   edx,ebp,0x9a500002
   140051e76:	add    al,0x0
   140051e78:	jo     0x140051e4f
   140051e7a:	add    al,BYTE PTR [rax]
   140051e7c:	and    bh,dl
   140051e7e:	add    al,BYTE PTR [rax]
   140051e80:	cmp    BYTE PTR [rdx-0x287ffffc],bl
   140051e86:	add    al,BYTE PTR [rax]
   140051e88:	(bad)  
   140051e89:	fadd   DWORD PTR [rdx]
   140051e8b:	add    BYTE PTR [rcx+rsi*2],bl
   140051e8e:	add    al,0x0
   140051e90:	adc    al,bl
   140051e92:	add    al,BYTE PTR [rax]
   140051e94:	rcr    al,1
   140051e96:	add    al,BYTE PTR [rax]
   140051e98:	sbb    BYTE PTR [rdi+0x4],0x0
   140051e9c:	fcomp  st(0)
   140051e9e:	add    al,BYTE PTR [rax]
   140051ea0:	add    ebx,ebx
   140051ea2:	add    al,BYTE PTR [rax]
   140051ea4:	int3   
   140051ea5:	(bad)  
   140051ea6:	add    al,0x0
   140051ea8:	or     bl,bl
   140051eaa:	add    al,BYTE PTR [rax]
   140051eac:	cmp    ebx,ebx
   140051eae:	add    al,BYTE PTR [rax]
   140051eb0:	hlt    
   140051eb1:	(bad)  
   140051eb2:	add    al,0x0
   140051eb4:	rex fild DWORD PTR [rdx]
   140051eb7:	add    BYTE PTR [rdi+0x180002dd],al
   140051ebd:	(bad)  
   140051ebe:	add    al,0x0
   140051ec0:	nop
   140051ec1:	fld    QWORD PTR [rdx]
   140051ec3:	add    BYTE PTR [rdi-0xbfffd23],bl
   140051ec9:	(bad)  
   140051eca:	add    al,0x0
   140051ecc:	enter  0x2dd,0x0
   140051ed0:	stc    
   140051ed1:	fld    QWORD PTR [rdx]
   140051ed3:	add    BYTE PTR [rax-0x66],ch
   140051ed6:	add    al,0x0
   140051ed8:	add    dh,bl
   140051eda:	add    al,BYTE PTR [rax]
   140051edc:	cmp    al,0xde
   140051ede:	add    al,BYTE PTR [rax]
   140051ee0:	sbb    al,0x71
   140051ee2:	add    al,0x0
   140051ee4:	rex.R fiadd WORD PTR [rdx]
   140051ee7:	add    BYTE PTR [rcx-0x22],ah
   140051eea:	add    al,BYTE PTR [rax]
   140051eec:	sbb    BYTE PTR [rdi+0x4],0x0
   140051ef0:	movabs al,ds:0xc00002dfb30002de
   140051ef9:	pop    rdi
   140051efa:	add    al,0x0
   140051efc:	push   rax
   140051efd:	loopne 0x140051f01
   140051eff:	add    BYTE PTR [rdi-0x20],bh
   140051f02:	add    al,BYTE PTR [rax]
   140051f04:	rcr    BYTE PTR [rdi+0x4],0x0
   140051f08:	mov    al,ah
   140051f0a:	add    al,BYTE PTR [rax]
   140051f0c:	xor    ah,cl
   140051f0e:	add    al,BYTE PTR [rax]
   140051f10:	mov    eax,0x700004b3
   140051f15:	loope  0x140051f19
   140051f17:	add    BYTE PTR [rsi-0xbfffd1f],dl
   140051f1d:	(bad)  
   140051f1e:	add    al,0x0
   140051f20:	pushf  
   140051f21:	loope  0x140051f25
   140051f23:	add    bl,bh
   140051f25:	loope  0x140051f29
   140051f27:	add    BYTE PTR [rax+0x400045f],al
   140051f2d:	loop   0x140051f31
   140051f2f:	add    BYTE PTR [rdi-0xffffd1c],dh
   140051f35:	(bad)  
   140051f36:	add    al,0x0
   140051f38:	fsub   st,st(4)
   140051f3a:	add    al,BYTE PTR [rax]
   140051f3c:	mov    ebp,fs
   140051f3e:	add    al,BYTE PTR [rax]
   140051f40:	movabs al,ds:0x820002e5f800049b
   140051f49:	out    0x2,al
   140051f4b:	add    al,al
   140051f4d:	pop    rdi
   140051f4e:	add    al,0x0
   140051f50:	mov    dh,ah
   140051f52:	add    al,BYTE PTR [rax]
   140051f54:	xor    eax,0x500002e7
   140051f59:	fwait
   140051f5a:	add    al,0x0
   140051f5c:	push   rsp
   140051f5d:	out    0x2,eax
   140051f5f:	add    ah,dh
   140051f61:	out    0x2,eax
   140051f63:	add    ah,dh
   140051f65:	fwait
   140051f66:	add    al,0x0
   140051f68:	sbb    al,0xe8
   140051f6a:	add    al,BYTE PTR [rax]
   140051f6c:	(bad)
   140051f6f:	add    BYTE PTR [rsp+rbx*4+0x4],dh
   140051f73:	add    ah,ch
   140051f75:	call   0x129361f7c
   140051f7a:	add    al,BYTE PTR [rax]
   140051f7c:	sbb    al,0x71
   140051f7e:	add    al,0x0
   140051f80:	cmp    cl,ch
   140051f82:	add    al,BYTE PTR [rax]
   140051f84:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051f85:	jmp    0xdbc11f8c
   140051f8a:	add    al,0x0
   140051f8c:	mov    esp,0x260002e9
   140051f91:	(bad)  
   140051f92:	add    al,BYTE PTR [rax]
   140051f94:	cmp    al,0x9c
   140051f96:	add    al,0x0
   140051f98:	push   rsp
   140051f99:	(bad)  
   140051f9a:	add    al,BYTE PTR [rax]
   140051f9c:	loop   0x140051f88
   140051f9e:	add    al,BYTE PTR [rax]
   140051fa0:	mov    esp,0xf400049c
   140051fa5:	(bad)  
   140051fa6:	add    al,BYTE PTR [rax]
   140051fa8:	pop    rcx
   140051fa9:	in     al,dx
   140051faa:	add    al,BYTE PTR [rax]
   140051fac:	call   0xc0052450
   140051fb1:	in     al,dx
   140051fb2:	add    al,BYTE PTR [rax]
   140051fb4:	scas   eax,DWORD PTR es:[rdi]
   140051fb5:	in     al,dx
   140051fb6:	add    al,BYTE PTR [rax]
   140051fb8:	rcr    BYTE PTR [rdi+0x4],0x0
   140051fbc:	shr    ah,0x2
   140051fbf:	add    bh,ch
   140051fc1:	in     al,dx
   140051fc2:	add    al,BYTE PTR [rax]
   140051fc4:	rcr    BYTE PTR [rdi+0x4],0x0
   140051fc8:	add    ch,ch
   140051fca:	add    al,BYTE PTR [rax]
   140051fcc:	(bad)  
   140051fcd:	in     eax,dx
   140051fce:	add    al,BYTE PTR [rax]
   140051fd0:	rcr    BYTE PTR [rdi+0x4],0x0
   140051fd4:	rex in eax,dx
   140051fd6:	add    al,BYTE PTR [rax]
   140051fd8:	outs   dx,DWORD PTR ds:[rsi]
   140051fd9:	in     eax,dx
   140051fda:	add    al,BYTE PTR [rax]
   140051fdc:	rcr    BYTE PTR [rdi+0x4],0x0
   140051fe0:	sub    ch,0x2
   140051fe3:	add    BYTE PTR [rcx-0x3ffffd13],dh
   140051fe9:	pop    rdi
   140051fea:	add    al,0x0
   140051fec:	shr    ch,0x2
   140051fef:	add    ah,dh
   140051ff1:	in     eax,dx
   140051ff2:	add    al,BYTE PTR [rax]
   140051ff4:	rcr    BYTE PTR [rdi+0x4],0x0
   140051ff8:	cld    
   140051ff9:	in     eax,dx
   140051ffa:	add    al,BYTE PTR [rax]
   140051ffc:	push   rsp
   140051ffd:	out    dx,al
   140051ffe:	add    al,BYTE PTR [rax]
   140052000:	rcr    BYTE PTR [rdi+0x4],0x0
   140052004:	(bad)  
   140052005:	out    dx,al
   140052006:	add    al,BYTE PTR [rax]
   140052008:	es out dx,eax
   14005200a:	add    al,BYTE PTR [rax]
   14005200c:	js     0x140051fad
   14005200e:	add    al,0x0
   140052010:	sub    al,0xef
   140052012:	add    al,BYTE PTR [rax]
   140052014:	rex.WRX
   140052015:	lock add al,BYTE PTR [rax]
   140052018:	hlt    
   140052019:	pushf  
   14005201a:	add    al,0x0
   14005201c:	pop    rdx
   14005201d:	lock add al,BYTE PTR [rax]
   140052020:	jne    0x140052012
   140052022:	add    al,BYTE PTR [rax]
   140052024:	sbb    BYTE PTR [rbp-0xf83fffc],0x2
   14005202b:	add    BYTE PTR [rsi-0x6ffffd0f],cl
   140052031:	popf   
   140052032:	add    al,0x0
   140052034:	(bad)  
   140052035:	icebp  
   140052036:	add    al,BYTE PTR [rax]
   140052038:	mov    ch,0xf1
   14005203a:	add    al,BYTE PTR [rax]
   14005203c:	sbb    al,0x9e
   14005203e:	add    al,0x0
   140052040:	shl    cl,0x2
   140052043:	add    cl,ah
   140052045:	repz add al,BYTE PTR [rax]
   140052048:	sub    al,0x9e
   14005204a:	add    al,0x0
   14005204c:	and    ah,dh
   14005204e:	add    al,BYTE PTR [rax]
   140052050:	sub    dh,ch
   140052052:	add    al,BYTE PTR [rax]
   140052054:	test   al,0x9f
   140052056:	add    al,0x0
   140052058:	rex cmc 
   14005205a:	add    al,BYTE PTR [rax]
   14005205c:	mov    bl,0xf5
   14005205e:	add    al,BYTE PTR [rax]
   140052060:	sbb    al,0x71
   140052062:	add    al,0x0
   140052064:	shl    ch,0x2
   140052067:	add    BYTE PTR [rbx],dh
   140052069:	test   BYTE PTR [rdx],0x0
   14005206c:	sbb    al,0x71
   14005206e:	add    al,0x0
   140052070:	rex test BYTE PTR [rdx],0x0
   140052074:	nop
   140052075:	test   BYTE PTR [rdx],0x0
   140052078:	and    al,0x7d
   14005207a:	add    al,0x0
   14005207c:	movabs al,ds:0x240002f6f30002f6
   140052085:	jge    0x14005208b
   140052087:	add    BYTE PTR [rax],al
   140052089:	test   DWORD PTR [rdx],0x2f73100
   14005208f:	add    al,al
   140052091:	pop    rdi
   140052092:	add    al,0x0
   140052094:	rex test DWORD PTR [rdx],0x2f77400
   14005209b:	add    al,al
   14005209d:	pop    rdi
   14005209e:	add    al,0x0
   1400520a0:	xor    bh,0x2
   1400520a3:	add    BYTE PTR [rsi],bl
   1400520a5:	stc    
   1400520a6:	add    al,BYTE PTR [rax]
   1400520a8:	test   al,0x9e
   1400520aa:	add    al,0x0
   1400520ac:	xor    cl,bh
   1400520ae:	add    al,BYTE PTR [rax]
   1400520b0:	(bad)  
   1400520b1:	cli    
   1400520b2:	add    al,BYTE PTR [rax]
   1400520b4:	in     al,dx
   1400520b5:	sahf   
   1400520b6:	add    al,0x0
   1400520b8:	rex cli 
   1400520ba:	add    al,BYTE PTR [rax]
   1400520bc:	sbb    bh,bl
   1400520be:	add    al,BYTE PTR [rax]
   1400520c0:	(bad)  
   1400520c1:	lahf   
   1400520c2:	add    al,0x0
   1400520c4:	and    bl,bh
   1400520c6:	add    al,BYTE PTR [rax]
   1400520c8:	ins    BYTE PTR es:[rdi],dx
   1400520c9:	cld    
   1400520ca:	add    al,BYTE PTR [rax]
   1400520cc:	sub    al,0x9f
   1400520ce:	add    al,0x0
   1400520d0:	cmp    ah,0x2
   1400520d3:	add    BYTE PTR [rdi-0x3],bl
   1400520d6:	add    al,BYTE PTR [rax]
   1400520d8:	jl     0x14005208c
   1400520da:	add    al,0x0
   1400520dc:	jo     0x1400520db
   1400520de:	add    al,BYTE PTR [rax]
   1400520e0:	inc    BYTE PTR [r10]
   1400520e3:	add    BYTE PTR [rax+0x500004b3],bh
   1400520e9:	inc    BYTE PTR [rdx]
   1400520eb:	add    BYTE PTR [rcx-0x1],ch
   1400520ee:	add    al,BYTE PTR [rax]
   1400520f0:	mov    WORD PTR [rdi-0x8ffffc],ds
   1400520f6:	add    al,BYTE PTR [rax]
   1400520f8:	(bad)  
   1400520f9:	add    BYTE PTR [rbx],al
   1400520fb:	add    BYTE PTR [rdi+rbx*4+0x4],al
   1400520ff:	add    al,ah
   140052101:	add    BYTE PTR [rbx],al
   140052103:	add    BYTE PTR [rcx+rax*1],bl
   140052106:	add    eax,DWORD PTR [rax]
   140052108:	sbb    BYTE PTR [rdi+0x4],0x0
   14005210c:	xor    BYTE PTR [rcx],al
   14005210e:	add    eax,DWORD PTR [rax]
   140052110:	add    DWORD PTR [rdx],eax
   140052112:	add    eax,DWORD PTR [rax]
   140052114:	int3   
   140052115:	(bad)  
   140052116:	add    al,0x0
   140052118:	or     BYTE PTR [rdx],al
   14005211a:	add    eax,DWORD PTR [rax]
   14005211c:	jbe    0x140052120
   14005211e:	add    eax,DWORD PTR [rax]
   140052120:	and    al,0x7d
   140052122:	add    al,0x0
   140052124:	add    BYTE PTR [rdx],0x3
   140052127:	add    cl,al
   140052129:	add    eax,DWORD PTR [rbx]
   14005212b:	add    BYTE PTR [rax],al
   14005212d:	movabs ds:0x4fb000303e00004,al
   140052136:	add    eax,DWORD PTR [rax]
   140052138:	push   rsp
   140052139:	movabs eax,ds:0x5e7000305100004
   140052142:	add    eax,DWORD PTR [rax]
   140052144:	js     0x1400520c9
   140052146:	add    al,0x0
   140052148:	lock add eax,0x79b0003
   14005214e:	add    eax,DWORD PTR [rax]
   140052150:	in     al,0xa1
   140052152:	add    al,0x0
   140052154:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052155:	(bad)  
   140052156:	add    eax,DWORD PTR [rax]
   140052158:	jl     0x140052164
   14005215a:	add    eax,DWORD PTR [rax]
   14005215c:	and    BYTE PTR [rax+0xac00004],ah
   140052162:	add    eax,DWORD PTR [rax]
   140052164:	jmp    0xcc052474
   140052169:	movabs eax,ds:0xcb000030c100004
   140052172:	add    eax,DWORD PTR [rax]
   140052174:	sbb    al,0xa1
   140052176:	add    al,0x0
   140052178:	ror    BYTE PTR [rbx+rax*1],1
   14005217b:	add    BYTE PTR [rdx-0x5bfffcf3],cl
   140052181:	movabs al,ds:0xe5900030da00004
   14005218a:	add    eax,DWORD PTR [rax]
   14005218c:	loopne 0x14005212e
   14005218e:	add    al,0x0
   140052190:	jo     0x1400521a0
   140052192:	add    eax,DWORD PTR [rax]
   140052194:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052195:	(bad)  
   140052196:	add    eax,DWORD PTR [rax]
   140052198:	xchg   esp,eax
   140052199:	scas   al,BYTE PTR es:[rdi]
   14005219a:	add    al,0x0
   14005219c:	mov    al,0xe
   14005219e:	add    eax,DWORD PTR [rax]
   1400521a0:	jmp    0x1000524b3
   1400521a5:	pop    rdi
   1400521a6:	add    al,0x0
   1400521a8:	lsl    r8,WORD PTR [rax]
   1400521ac:	lods   eax,DWORD PTR ds:[rsi]
   1400521ad:	lsl    eax,WORD PTR [rax]
   1400521b0:	rex.R movabs ds:0x102000030fb40004,al
   1400521ba:	add    eax,DWORD PTR [rax]
   1400521bc:	jo     0x140052160
   1400521be:	add    al,0x0
   1400521c0:	adc    BYTE PTR [rbx],r8b
   1400521c3:	add    BYTE PTR [rax+rdx*1+0x711c0003],dl
   1400521ca:	add    al,0x0
   1400521cc:	pushf  
   1400521cd:	adc    BYTE PTR [rbx],al
   1400521cf:	add    BYTE PTR [rdi],cl
   1400521d1:	adc    DWORD PTR [rbx],eax
   1400521d3:	add    BYTE PTR [rcx+rsi*2],bl
   1400521d6:	add    al,0x0
   1400521d8:	sbb    BYTE PTR [rcx],dl
   1400521da:	add    eax,DWORD PTR [rax]
   1400521dc:	movsxd edx,DWORD PTR [rcx]
   1400521de:	add    eax,DWORD PTR [rax]
   1400521e0:	sbb    BYTE PTR [rdi+0x4],0x0
   1400521e4:	ins    BYTE PTR es:[rdi],dx
   1400521e5:	adc    DWORD PTR [rbx],eax
   1400521e7:	add    BYTE PTR [rcx-0x7ffffcef],bl
   1400521ed:	pop    rdi
   1400521ee:	add    al,0x0
   1400521f0:	movabs al,ds:0x1c000311f4000311
   1400521f9:	jno    0x1400521ff
   1400521fb:	add    BYTE PTR [rax],al
   1400521fd:	adc    al,BYTE PTR [rbx]
   1400521ff:	add    BYTE PTR [rsi],ah
   140052201:	adc    al,BYTE PTR [rbx]
   140052203:	add    BYTE PTR [rax+0x3000045f],al
   140052209:	adc    al,BYTE PTR [rbx]
   14005220b:	add    BYTE PTR [rdi+0x12],bl
   14005220e:	add    eax,DWORD PTR [rax]
   140052210:	rcr    BYTE PTR [rdi+0x4],0x0
   140052214:	jo     0x140052228
   140052216:	add    eax,DWORD PTR [rax]
   140052218:	lahf   
   140052219:	adc    al,BYTE PTR [rbx]
   14005221b:	add    al,al
   14005221d:	pop    rdi
   14005221e:	add    al,0x0
   140052220:	mov    al,0x12
   140052222:	add    eax,DWORD PTR [rax]
   140052224:	fist   WORD PTR [rdx]
   140052226:	add    eax,DWORD PTR [rax]
   140052228:	rcr    BYTE PTR [rdi+0x4],0x0
   14005222c:	lock adc al,BYTE PTR [rbx]
   14005222f:	add    BYTE PTR [rdi],bl
   140052231:	adc    eax,DWORD PTR [rbx]
   140052233:	add    al,al
   140052235:	pop    rdi
   140052236:	add    al,0x0
   140052238:	sub    BYTE PTR [rbx],dl
   14005223a:	add    eax,DWORD PTR [rax]
   14005223c:	adc    DWORD PTR [rbx],0x7d240003
   140052242:	add    al,0x0
   140052244:	mov    BYTE PTR [rbx],dl
   140052246:	add    eax,DWORD PTR [rax]
   140052248:	and    al,0x14
   14005224a:	add    eax,DWORD PTR [rax]
   14005224c:	sbb    al,0x71
   14005224e:	add    al,0x0
   140052250:	sub    al,0x14
   140052252:	add    eax,DWORD PTR [rax]
   140052254:	stos   BYTE PTR es:[rdi],al
   140052255:	adc    al,0x3
   140052257:	add    BYTE PTR [rax-0x5e],ah
   14005225a:	add    al,0x0
   14005225c:	mov    al,0x14
   14005225e:	add    eax,DWORD PTR [rax]
   140052260:	mov    ss,WORD PTR [rip+0xffffffffa2b40003]        # 0xe2b92269
   140052266:	add    al,0x0
   140052268:	xchg   esp,eax
   140052269:	adc    eax,0x16180003
   14005226e:	add    eax,DWORD PTR [rax]
   140052270:	int3   
   140052271:	(bad)  
   140052272:	add    al,0x0
   140052274:	and    BYTE PTR [rsi],dl
   140052276:	add    eax,DWORD PTR [rax]
   140052278:	(bad)  
   140052279:	(bad)  
   14005227a:	add    eax,DWORD PTR [rax]
   14005227c:	int3   
   14005227d:	(bad)  
   14005227e:	add    al,0x0
   140052280:	loopne 0x140052298
   140052282:	add    eax,DWORD PTR [rax]
   140052284:	xor    edx,DWORD PTR [rdi]
   140052286:	add    eax,DWORD PTR [rax]
   140052288:	rcr    BYTE PTR [rdi+0x4],0x0
   14005228c:	rex (bad) 
   14005228e:	add    eax,DWORD PTR [rax]
   140052290:	rcl    BYTE PTR [rdi],0x3
   140052293:	add    BYTE PTR [rax-0x5e],dl
   140052296:	add    al,0x0
   140052298:	rcl    BYTE PTR [rdi],1
   14005229a:	add    eax,DWORD PTR [rax]
   14005229c:	adc    eax,0x1c000318
   1400522a1:	jno    0x1400522a7
   1400522a3:	add    BYTE PTR [rax],ah
   1400522a5:	sbb    BYTE PTR [rbx],al
   1400522a7:	add    BYTE PTR [rcx+0x1c000318],al
   1400522ad:	jno    0x1400522b3
   1400522af:	add    BYTE PTR [rax-0x23fffce8],cl
   1400522b5:	sbb    BYTE PTR [rbx],al
   1400522b7:	add    BYTE PTR [rax-0x1bfffba1],al
   1400522bd:	sbb    BYTE PTR [rbx],al
   1400522bf:	add    BYTE PTR [rcx+rbx*1],bl
   1400522c2:	add    eax,DWORD PTR [rax]
   1400522c4:	sbb    BYTE PTR [rdi+0x4],0x0
   1400522c8:	xor    BYTE PTR [rcx],bl
   1400522ca:	add    eax,DWORD PTR [rax]
   1400522cc:	push   rax
   1400522cd:	sbb    eax,DWORD PTR [rbx]
   1400522cf:	add    BYTE PTR [rax-0x7d],bh
   1400522d2:	add    al,0x0
   1400522d4:	pop    rax
   1400522d5:	sbb    eax,DWORD PTR [rbx]
   1400522d7:	add    BYTE PTR [rdx-0x3ffffce5],ch
   1400522dd:	pop    rdi
   1400522de:	add    al,0x0
   1400522e0:	mov    al,0x1b
   1400522e2:	add    eax,DWORD PTR [rax]
   1400522e4:	(bad)  
   1400522e5:	sbb    al,0x3
   1400522e7:	add    al,al
   1400522e9:	pop    rdi
   1400522ea:	add    al,0x0
   1400522ec:	xor    BYTE PTR [rbx+rax*1],bl
   1400522ef:	add    BYTE PTR [rdi-0x3ffffce4],ah
   1400522f5:	pop    rdi
   1400522f6:	add    al,0x0
   1400522f8:	mov    al,0x1c
   1400522fa:	add    eax,DWORD PTR [rax]
   1400522fc:	in     al,dx
   1400522fd:	sbb    eax,0xa3380003
   140052302:	add    al,0x0
   140052304:	or     al,0x1e
   140052306:	add    eax,DWORD PTR [rax]
   140052308:	rex.WR (bad) 
   14005230a:	add    eax,DWORD PTR [rax]
   14005230c:	rcr    BYTE PTR [rdi+0x4],0x0
   140052310:	push   rsp
   140052311:	(bad)  
   140052312:	add    eax,DWORD PTR [rax]
   140052314:	test   BYTE PTR [rsi],bl
   140052316:	add    eax,DWORD PTR [rax]
   140052318:	sbb    BYTE PTR [rdi+0x4],0x0
   14005231c:	mov    WORD PTR [rsi],ds
   14005231e:	add    eax,DWORD PTR [rax]
   140052320:	(bad)  
   140052321:	(bad)  
   140052322:	add    eax,DWORD PTR [rax]
   140052324:	rcr    BYTE PTR [rdi+0x4],0x0
   140052328:	(bad)  
   140052329:	(bad)  
   14005232a:	add    eax,DWORD PTR [rax]
   14005232c:	and    al,0x1f
   14005232e:	add    eax,DWORD PTR [rax]
   140052330:	sbb    BYTE PTR [rdi+0x4],0x0
   140052334:	sub    al,0x1f
   140052336:	add    eax,DWORD PTR [rax]
   140052338:	mov    esi,0x1000031f
   14005233d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005233e:	add    al,0x0
   140052340:	rcr    BYTE PTR [rdi],1
   140052342:	add    eax,DWORD PTR [rax]
   140052344:	(bad)  
   140052345:	and    BYTE PTR [rbx],al
   140052347:	add    al,bl
   140052349:	movabs ds:0x21c5000320740004,eax
   140052352:	add    eax,DWORD PTR [rax]
   140052354:	(bad)  
   140052355:	movabs ds:0x2201000321cc0004,al
   14005235e:	add    eax,DWORD PTR [rax]
   140052360:	int3   
   140052361:	movabs ds:0x22ff000322100004,al
   14005236a:	add    eax,DWORD PTR [rax]
   14005236c:	js     0x1400522f1
   14005236e:	add    al,0x0
   140052370:	adc    BYTE PTR [rbx],ah
   140052372:	add    eax,DWORD PTR [rax]
   140052374:	rex.XB and al,0x3
   140052377:	add    BYTE PTR [rax+0x680004b3],bh
   14005237d:	and    al,0x3
   14005237f:	add    cl,bl
   140052381:	and    al,0x3
   140052383:	add    BYTE PTR [rdi*2+0x24e00004],ah
   14005238a:	add    eax,DWORD PTR [rax]
   14005238c:	rex.WB
   14005238d:	add    eax,DWORD PTR es:[rax]
   140052390:	mov    BYTE PTR [rbx+0x265c0004],ah
   140052396:	add    eax,DWORD PTR [rax]
   140052398:	sbb    al,0x27
   14005239a:	add    eax,DWORD PTR [rax]
   14005239c:	and    BYTE PTR [rbx+0x27240004],ah
   1400523a2:	add    eax,DWORD PTR [rax]
   1400523a4:	(bad)  
   1400523a5:	sub    BYTE PTR [rbx],al
   1400523a7:	add    al,bl
   1400523a9:	xchg   ebp,eax
   1400523aa:	add    al,0x0
   1400523ac:	or     al,0x28
   1400523ae:	add    eax,DWORD PTR [rax]
   1400523b0:	xchg   esi,eax
   1400523b1:	sub    BYTE PTR [rbx],al
   1400523b3:	add    BYTE PTR [rcx+rsi*2],bl
   1400523b6:	add    al,0x0
   1400523b8:	pushf  
   1400523b9:	sub    BYTE PTR [rbx],al
   1400523bb:	add    BYTE PTR [rdi+0x2a],bl
   1400523be:	add    eax,DWORD PTR [rax]
   1400523c0:	or     BYTE PTR [rbx+0x2a700004],ah
   1400523c6:	add    eax,DWORD PTR [rax]
   1400523c8:	and    BYTE PTR [rbx],ch
   1400523ca:	add    eax,DWORD PTR [rax]
   1400523cc:	rcr    BYTE PTR [rdi+0x4],0x0
   1400523d0:	sub    BYTE PTR [rbx],ch
   1400523d2:	add    eax,DWORD PTR [rax]
   1400523d4:	test   DWORD PTR [rbx],ebp
   1400523d6:	add    eax,DWORD PTR [rax]
   1400523d8:	sbb    BYTE PTR [rdi+0x4],0x0
   1400523dc:	mov    WORD PTR [rbx],gs
   1400523de:	add    eax,DWORD PTR [rax]
   1400523e0:	sub    ebp,DWORD PTR [rbx+rax*1]
   1400523e3:	add    al,bh
   1400523e5:	movabs ds:0x2cff00032c340004,al
   1400523ee:	add    eax,DWORD PTR [rax]
   1400523f0:	(bad)
   1400523f4:	or     BYTE PTR [rip+0x2d6a0003],ch        # 0x16d6f23fd
   1400523fa:	add    eax,DWORD PTR [rax]
   1400523fc:	rcr    BYTE PTR [rdi+0x4],0x0
   140052400:	jo     0x14005242f
   140052402:	add    eax,DWORD PTR [rax]
   140052404:	out    0x2d,al
   140052406:	add    eax,DWORD PTR [rax]
   140052408:	rcr    BYTE PTR [rdi+0x4],0x0
   14005240c:	cld    
   14005240d:	sub    eax,0x2e220003
   140052412:	add    eax,DWORD PTR [rax]
   140052414:	hlt    
   140052415:	(bad)  
   140052416:	add    al,0x0
   140052418:	sub    BYTE PTR [rsi],ch
   14005241a:	add    eax,DWORD PTR [rax]
   14005241c:	(bad)  
   14005241d:	(bad)  
   14005241e:	add    eax,DWORD PTR [rax]
   140052420:	(bad)  
   140052421:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052422:	add    al,0x0
   140052424:	je     0x140052455
   140052426:	add    eax,DWORD PTR [rax]
   140052428:	(bad)  
   140052429:	xor    BYTE PTR [rbx],al
   14005242b:	add    BYTE PTR [rax-0x5c],cl
   14005242e:	add    al,0x0
   140052430:	xor    BYTE PTR [rax],dh
   140052432:	add    eax,DWORD PTR [rax]
   140052434:	enter  0x330,0x0
   140052438:	sbb    BYTE PTR [rsi+0x30e00004],ah
   14005243e:	add    eax,DWORD PTR [rax]
   140052440:	pop    rsp
   140052441:	xor    DWORD PTR [rbx],eax
   140052443:	add    BYTE PTR [rax-0x5a],dl
   140052446:	add    al,0x0
   140052448:	jo     0x14005247b
   14005244a:	add    eax,DWORD PTR [rax]
   14005244c:	mov    esi,DWORD PTR [rdx]
   14005244e:	add    eax,DWORD PTR [rax]
   140052450:	loopne 0x1400523f6
   140052452:	add    al,0x0
   140052454:	movabs al,ds:0x5800033339000332
   14005245d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005245e:	add    al,0x0
   140052460:	rex xor eax,DWORD PTR [rbx]
   140052463:	add    BYTE PTR [rsi-0x37fffccd],dh
   140052469:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005246a:	add    al,0x0
   14005246c:	shl    BYTE PTR [rbx],1
   14005246e:	add    eax,DWORD PTR [rax]
   140052470:	push   rdi
   140052471:	xor    al,0x3
   140052473:	add    BYTE PTR [rax+0x700004a6],cl
   140052479:	xor    al,0x3
   14005247b:	add    BYTE PTR [rax+0x1c000334],bh
   140052481:	jno    0x140052487
   140052483:	add    al,al
   140052485:	xor    al,0x3
   140052487:	add    ah,ch
   140052489:	xor    eax,0xa4a00003
   14005248e:	add    al,0x0
   140052490:	add    BYTE PTR [rsi],dh
   140052492:	add    eax,DWORD PTR [rax]
   140052494:	je     0x1400524cc
   140052496:	add    eax,DWORD PTR [rax]
   140052498:	loopne 0x14005243f
   14005249a:	add    al,0x0
   14005249c:	mov    BYTE PTR [rsi],dh
   14005249e:	add    eax,DWORD PTR [rax]
   1400524a0:	movabs ds:0xc00004a51c000337,eax
   1400524a9:	(bad)  
   1400524aa:	add    eax,DWORD PTR [rax]
   1400524ac:	pop    rbx
   1400524ad:	cmp    BYTE PTR [rbx],al
   1400524af:	add    BYTE PTR [rax-0x5b],ch
   1400524b2:	add    al,0x0
   1400524b4:	jo     0x1400524ee
   1400524b6:	add    eax,DWORD PTR [rax]
   1400524b8:	rex.RXB cmp DWORD PTR [r11],r8d
   1400524bb:	add    BYTE PTR [rbp+riz*4+0x395c0004],ah
   1400524c2:	add    eax,DWORD PTR [rax]
   1400524c4:	(bad)  
   1400524c5:	cmp    al,BYTE PTR [rbx]
   1400524c7:	add    BYTE PTR [rax-0x59],bh
   1400524ca:	add    al,0x0
   1400524cc:	xor    BYTE PTR [rdx],bh
   1400524ce:	add    eax,DWORD PTR [rax]
   1400524d0:	popf   
   1400524d1:	cmp    al,BYTE PTR [rbx]
   1400524d3:	add    BYTE PTR [rax-0x59],al
   1400524d6:	add    al,0x0
   1400524d8:	sar    BYTE PTR [rdx],0x3
   1400524db:	add    BYTE PTR [rbp+0x3b],dl
   1400524de:	add    eax,DWORD PTR [rax]
   1400524e0:	shl    BYTE PTR [rdi+0x3b680004],0x3
   1400524e7:	add    BYTE PTR [rcx],bh
   1400524e9:	cmp    al,0x3
   1400524eb:	add    BYTE PTR [rcx+rsi*2],bl
   1400524ee:	add    al,0x0
   1400524f0:	cmp    al,0x3
   1400524f3:	add    BYTE PTR [rdi+0x3c],ch
   1400524f6:	add    eax,DWORD PTR [rax]
   1400524f8:	rcr    BYTE PTR [rdi+0x4],0x0
   1400524fc:	cmp    BYTE PTR [rbx+rax*1],0x0
   140052500:	scas   eax,DWORD PTR es:[rdi]
   140052501:	cmp    al,0x3
   140052503:	add    al,al
   140052505:	pop    rdi
   140052506:	add    al,0x0
   140052508:	mov    eax,0x5800033c
   14005250d:	cmp    eax,0xa9640003
   140052512:	add    al,0x0
   140052514:	jo     0x140052553
   140052516:	add    eax,DWORD PTR [rax]
   140052518:	and    BYTE PTR [rsi],bh
   14005251a:	add    eax,DWORD PTR [rax]
   14005251c:	sub    BYTE PTR [rcx+0x3e400004],ch
   140052522:	add    eax,DWORD PTR [rax]
   140052524:	lock add eax,DWORD PTR ds:[rax]
   140052528:	pop    rax
   140052529:	stos   BYTE PTR es:[rdi],al
   14005252a:	add    al,0x0
   14005252c:	add    al,0x3f
   14005252e:	add    eax,DWORD PTR [rax]
   140052530:	adc    DWORD PTR [rax+0x3],eax
   140052533:	add    al,bh
   140052535:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052536:	add    al,0x0
   140052538:	sbb    eax,0x38000340
   14005253d:	rex add eax,DWORD PTR [rax]
   140052540:	test   BYTE PTR [rax+0x40400004],ch
   140052546:	add    eax,DWORD PTR [rax]
   140052548:	push   0xffffffff80000340
   14005254d:	pop    rdi
   14005254e:	add    al,0x0
   140052550:	jo     0x140052592
   140052552:	add    eax,DWORD PTR [rax]
   140052554:	xchg   edi,eax
   140052555:	rex add eax,DWORD PTR [rax]
   140052558:	sbb    BYTE PTR [rdi+0x4],0x0
   14005255c:	movabs al,ds:0x1c00034113000340
   140052565:	jno    0x14005256b
   140052567:	add    BYTE PTR [rax],ah
   140052569:	add    eax,DWORD PTR [r8]
   14005256c:	mov    esp,0x4000341
   140052571:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052572:	add    al,0x0
   140052574:	rol    BYTE PTR [rcx+0x3],1
   140052577:	add    BYTE PTR [rcx],al
   140052579:	rex.X add eax,DWORD PTR [rax]
   14005257c:	rcr    BYTE PTR [rdi+0x4],0x0
   140052580:	adc    BYTE PTR [rdx+0x3],al
   140052583:	add    ah,dl
   140052585:	rex.X add eax,DWORD PTR [rax]
   140052588:	xchg   esp,eax
   140052589:	test   al,0x4
   14005258b:	add    al,dh
   14005258d:	rex.X add eax,DWORD PTR [rax]
   140052590:	mov    eax,0xd4000343
   140052595:	test   al,0x4
   140052597:	add    al,dl
   140052599:	rex.XB add eax,DWORD PTR [r8]
   14005259c:	pop    rsi
   14005259d:	add    r8d,DWORD PTR [rax]
   1400525a0:	adc    al,0xa9
   1400525a2:	add    al,0x0
   1400525a4:	jo     0x1400525ea
   1400525a6:	add    eax,DWORD PTR [rax]
   1400525a8:	mov    esp,0x1c000344
   1400525ad:	jno    0x1400525b3
   1400525af:	add    al,dl
   1400525b1:	add    r8d,DWORD PTR [rax]
   1400525b4:	xor    BYTE PTR [rbp+0x3],al
   1400525b7:	add    BYTE PTR [rcx+rsi*2],bl
   1400525ba:	add    al,0x0
   1400525bc:	rex
   1400525bd:	add    r8d,DWORD PTR [r8]
   1400525c0:	hlt    
   1400525c1:	add    r8d,DWORD PTR [r8]
   1400525c4:	sbb    al,0xaa
   1400525c6:	add    al,0x0
   1400525c8:	adc    BYTE PTR [rsi+0x3],al
   1400525cb:	add    BYTE PTR [rsi+rax*2+0x3],cl
   1400525cf:	add    al,al
   1400525d1:	pop    rdi
   1400525d2:	add    al,0x0
   1400525d4:	(bad)  
   1400525d5:	rex.RX add r8d,DWORD PTR [rax]
   1400525d8:	and    al,0x47
   1400525da:	add    eax,DWORD PTR [rax]
   1400525dc:	pushf  
   1400525dd:	test   eax,0x47400004
   1400525e2:	add    eax,DWORD PTR [rax]
   1400525e4:	rol    DWORD PTR [rdi+0x3],0x0
   1400525e8:	sbb    al,0x71
   1400525ea:	add    al,0x0
   1400525ec:	rol    BYTE PTR [rdi+0x3],1
   1400525ef:	add    BYTE PTR [rax-0x2bfffcb8],ah
   1400525f5:	stos   BYTE PTR es:[rdi],al
   1400525f6:	add    al,0x0
   1400525f8:	ror    BYTE PTR [rax+0x3],0x0
   1400525fc:	cwde   
   1400525fd:	add    rax,QWORD PTR [r8]
   140052600:	xchg   esp,eax
   140052601:	stos   BYTE PTR es:[rdi],al
   140052602:	add    al,0x0
   140052604:	mov    al,0x49
   140052606:	add    eax,DWORD PTR [rax]
   140052608:	mov    cl,BYTE PTR [rdx+0x3]
   14005260b:	add    ah,bl
   14005260d:	test   eax,0x4a9c0004
   140052612:	add    eax,DWORD PTR [rax]
   140052614:	(bad)  
   140052615:	rex.WXB add rax,QWORD PTR [r8]
   140052618:	mov    WORD PTR [rbx+0x4b340004],gs
   14005261e:	add    eax,DWORD PTR [rax]
   140052620:	mov    bh,0x4b
   140052622:	add    eax,DWORD PTR [rax]
   140052624:	adc    al,0xab
   140052626:	add    al,0x0
   140052628:	int3   
   140052629:	rex.WXB add rax,QWORD PTR [r8]
   14005262c:	rex.WRXB
   14005262d:	add    r8,QWORD PTR [rax]
   140052630:	push   rax
   140052631:	stos   DWORD PTR es:[rdi],eax
   140052632:	add    al,0x0
   140052634:	jo     0x140052682
   140052636:	add    eax,DWORD PTR [rax]
   140052638:	fisttp WORD PTR [rbx+rax*1+0x0]
   14005263c:	sbb    al,0x71
   14005263e:	add    al,0x0
   140052640:	call   0x13d052991
   140052645:	add    r8,QWORD PTR [r8]
   140052648:	call   0x1bc052af8
   14005264d:	rex.WRX add r8,QWORD PTR [rax]
   140052650:	scas   al,BYTE PTR es:[rdi]
   140052651:	rex.WRX add r8,QWORD PTR [rax]
   140052654:	hlt    
   140052655:	(bad)  
   140052656:	add    al,0x0
   140052658:	mov    ah,0x4e
   14005265a:	add    eax,DWORD PTR [rax]
   14005265c:	cmp    cl,BYTE PTR [rdi+0x3]
   14005265f:	add    BYTE PTR [rcx+rsi*2],bl
   140052662:	add    al,0x0
   140052664:	rex
   140052665:	rex.WRXB add r8,QWORD PTR [r8]
   140052668:	(bad)  
   140052669:	rex.WRXB add r8,QWORD PTR [r8]
   14005266c:	(bad)  
   14005266d:	lahf   
   14005266e:	add    al,0x0
   140052670:	(bad)  
   140052671:	rex.WRXB add r8,QWORD PTR [r8]
   140052674:	push   rdx
   140052675:	push   rax
   140052676:	add    eax,DWORD PTR [rax]
   140052678:	int3   
   140052679:	(bad)  
   14005267a:	add    al,0x0
   14005267c:	pop    rax
   14005267d:	push   rax
   14005267e:	add    eax,DWORD PTR [rax]
   140052680:	loopne 0x1400526d2
   140052682:	add    eax,DWORD PTR [rax]
   140052684:	int3   
   140052685:	(bad)  
   140052686:	add    al,0x0
   140052688:	call   0xc10529dd
   14005268d:	push   rcx
   14005268e:	add    eax,DWORD PTR [rax]
   140052690:	(bad)  
   140052691:	lahf   
   140052692:	add    al,0x0
   140052694:	mov    BYTE PTR [rcx+0x3],dl
   140052697:	add    BYTE PTR [rdx],bl
   140052699:	push   rdx
   14005269a:	add    eax,DWORD PTR [rax]
   14005269c:	(bad)  
   14005269d:	lahf   
   14005269e:	add    al,0x0
   1400526a0:	and    BYTE PTR [rdx+0x3],dl
   1400526a3:	add    BYTE PTR [rdi+0x52],ch
   1400526a6:	add    eax,DWORD PTR [rax]
   1400526a8:	sbb    BYTE PTR [rdi+0x4],0x0
   1400526ac:	js     0x140052700
   1400526ae:	add    eax,DWORD PTR [rax]
   1400526b0:	jmp    0x118052a07
   1400526b5:	stos   DWORD PTR es:[rdi],eax
   1400526b6:	add    al,0x0
   1400526b8:	lock push rdx
   1400526ba:	add    eax,DWORD PTR [rax]
   1400526bc:	gs push rbx
   1400526be:	add    eax,DWORD PTR [rax]
   1400526c0:	fcom   DWORD PTR [rbp+0x536c0004]
   1400526c6:	add    eax,DWORD PTR [rax]
   1400526c8:	ficom  DWORD PTR [rbx+0x3]
   1400526cb:	add    al,bl
   1400526cd:	xchg   ebp,eax
   1400526ce:	add    al,0x0
   1400526d0:	loopne 0x140052725
   1400526d2:	add    eax,DWORD PTR [rax]
   1400526d4:	mov    ecx,0x24000354
   1400526d9:	jge    0x1400526df
   1400526db:	add    al,al
   1400526dd:	push   rsp
   1400526de:	add    eax,DWORD PTR [rax]
   1400526e0:	adc    eax,0x24000355
   1400526e5:	jge    0x1400526eb
   1400526e7:	add    BYTE PTR [rdx*2+0x55840003],bl
   1400526ee:	add    eax,DWORD PTR [rax]
   1400526f0:	int3   
   1400526f1:	(bad)  
   1400526f2:	add    al,0x0
   1400526f4:	mov    WORD PTR [rbp+0x3],ss
   1400526f7:	add    cl,dh
   1400526f9:	push   rbp
   1400526fa:	add    eax,DWORD PTR [rax]
   1400526fc:	mov    ah,0xac
   1400526fe:	add    al,0x0
   140052700:	add    al,0x56
   140052702:	add    eax,DWORD PTR [rax]
   140052704:	pop    rbx
   140052705:	push   rsi
   140052706:	add    eax,DWORD PTR [rax]
   140052708:	sub    BYTE PTR [rsp+rax*1+0x3567000],0x0
   140052710:	popf   
   140052711:	push   rsi
   140052712:	add    eax,DWORD PTR [rax]
   140052714:	in     al,dx
   140052715:	(bad)  
   140052716:	add    al,0x0
   140052718:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052719:	push   rsi
   14005271a:	add    eax,DWORD PTR [rax]
   14005271c:	push   rcx
   14005271d:	push   rdi
   14005271e:	add    eax,DWORD PTR [rax]
   140052720:	enter  0x4ab,0x0
   140052724:	pop    rax
   140052725:	push   rdi
   140052726:	add    eax,DWORD PTR [rax]
   140052728:	(bad)  
   140052729:	push   rdi
   14005272a:	add    eax,DWORD PTR [rax]
   14005272c:	js     0x1400526cd
   14005272e:	add    al,0x0
   140052730:	loopne 0x140052789
   140052732:	add    eax,DWORD PTR [rax]
   140052734:	rex.WB pop r8
   140052736:	add    eax,DWORD PTR [rax]
   140052738:	push   0x50000474
   14005273d:	pop    rax
   14005273e:	add    eax,DWORD PTR [rax]
   140052740:	lods   eax,DWORD PTR ds:[rsi]
   140052741:	pop    rax
   140052742:	add    eax,DWORD PTR [rax]
   140052744:	push   0xffffffffd0000474
   140052749:	pop    rax
   14005274a:	add    eax,DWORD PTR [rax]
   14005274c:	(bad)  
   14005274d:	pop    rcx
   14005274e:	add    eax,DWORD PTR [rax]
   140052750:	sbb    al,0x71
   140052752:	add    al,0x0
   140052754:	xor    BYTE PTR [rcx+0x3],bl
   140052757:	add    BYTE PTR [rbp+0x59],dh
   14005275a:	add    eax,DWORD PTR [rax]
   14005275c:	rcr    BYTE PTR [rdi+0x4],0x0
   140052760:	sbb    BYTE PTR [rcx+0x3],0x0
   140052764:	mov    ch,0x59
   140052766:	add    eax,DWORD PTR [rax]
   140052768:	rcr    BYTE PTR [rdi+0x4],0x0
   14005276c:	rcr    BYTE PTR [rcx+0x3],0x0
   140052770:	cmc    
   140052771:	pop    rcx
   140052772:	add    eax,DWORD PTR [rax]
   140052774:	rcr    BYTE PTR [rdi+0x4],0x0
   140052778:	cld    
   140052779:	pop    rcx
   14005277a:	add    eax,DWORD PTR [rax]
   14005277c:	(bad)  
   14005277d:	pop    rdx
   14005277e:	add    eax,DWORD PTR [rax]
   140052780:	in     al,dx
   140052781:	lods   al,BYTE PTR ds:[rsi]
   140052782:	add    al,0x0
   140052784:	add    BYTE PTR [rbx+0x3],bl
   140052787:	add    BYTE PTR [rbp+0x5b],dl
   14005278a:	add    eax,DWORD PTR [rax]
   14005278c:	hlt    
   14005278d:	(bad)  
   14005278e:	add    al,0x0
   140052790:	pop    rsp
   140052791:	pop    rbx
   140052792:	add    eax,DWORD PTR [rax]
   140052794:	fwait
   140052795:	pop    rbx
   140052796:	add    eax,DWORD PTR [rax]
   140052798:	rcr    BYTE PTR [rdi+0x4],0x0
   14005279c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005279d:	pop    rbx
   14005279e:	add    eax,DWORD PTR [rax]
   1400527a0:	mov    dl,0x5c
   1400527a2:	add    eax,DWORD PTR [rax]
   1400527a4:	mov    ah,0xb2
   1400527a6:	add    al,0x0
   1400527a8:	cmp    BYTE PTR [rbp+0x3],bl
   1400527ab:	add    BYTE PTR [rax-0x3ffffca3],bl
   1400527b1:	pop    rdi
   1400527b2:	add    al,0x0
   1400527b4:	movabs al,ds:0x1c00035e1700035d
   1400527bd:	jno    0x1400527c3
   1400527bf:	add    BYTE PTR [rax],ah
   1400527c1:	pop    rsi
   1400527c2:	add    eax,DWORD PTR [rax]
   1400527c4:	sbb    BYTE PTR [rax+0x3],ah
   1400527c7:	add    BYTE PTR [rax+0x200004b3],bh
   1400527cd:	(bad)  
   1400527ce:	add    eax,DWORD PTR [rax]
   1400527d0:	ins    DWORD PTR es:[rdi],dx
   1400527d1:	(bad)  
   1400527d2:	add    eax,DWORD PTR [rax]
   1400527d4:	rcr    BYTE PTR [rdi+0x4],0x0
   1400527d8:	je     0x14005283a
   1400527da:	add    eax,DWORD PTR [rax]
   1400527dc:	cwde   
   1400527dd:	(bad)  
   1400527de:	add    eax,DWORD PTR [rax]
   1400527e0:	hlt    
   1400527e1:	(bad)  
   1400527e2:	add    al,0x0
   1400527e4:	movabs al,ds:0x80000360d4000360
   1400527ed:	pop    rdi
   1400527ee:	add    al,0x0
   1400527f0:	fsub   QWORD PTR [rax+0x3]
   1400527f3:	add    bh,dh
   1400527f5:	(bad)  
   1400527f6:	add    eax,DWORD PTR [rax]
   1400527f8:	sbb    BYTE PTR [rdi+0x4],0x0
   1400527fc:	add    BYTE PTR [rcx+0x3],ah
   1400527ff:	add    BYTE PTR [rbx+0x61],cl
   140052802:	add    eax,DWORD PTR [rax]
   140052804:	sbb    BYTE PTR [rdi+0x4],0x0
   140052808:	push   rsp
   140052809:	(bad)  
   14005280a:	add    eax,DWORD PTR [rax]
   14005280c:	(bad)  
   14005280d:	(bad)  
   14005280e:	add    eax,DWORD PTR [rax]
   140052810:	sbb    al,0x71
   140052812:	add    al,0x0
   140052814:	fsub   QWORD PTR [rcx+0x3]
   140052817:	add    BYTE PTR [rdx+0x62],bh
   14005281a:	add    eax,DWORD PTR [rax]
   14005281c:	mov    eax,0x800004b3
   140052821:	(bad)  
   140052823:	add    BYTE PTR [rip+0x1c000363],al        # 0x15c052b8c
   140052829:	jno    0x14005282f
   14005282b:	add    BYTE PTR [rbx+riz*2],cl
   14005282e:	add    eax,DWORD PTR [rax]
   140052830:	mov    ecx,0x94000363
   140052835:	jns    0x14005283b
   140052837:	add    al,al
   140052839:	movsxd eax,DWORD PTR [rbx]
   14005283b:	add    BYTE PTR [rdi],bl
   14005283d:	add    eax,DWORD PTR fs:[rax]
   140052840:	and    al,0x7d
   140052842:	add    al,0x0
   140052844:	sub    BYTE PTR [rbx+rax*1+0x0],ah
   140052848:	xchg   DWORD PTR [rbx+rax*1+0x0],esp
   14005284c:	and    al,0x7d
   14005284e:	add    al,0x0
   140052850:	nop
   140052851:	add    eax,DWORD PTR fs:[rax]
   140052854:	retf   0x364
   140052857:	add    BYTE PTR [rax],cl
   140052859:	lods   eax,DWORD PTR ds:[rsi]
   14005285a:	add    al,0x0
   14005285c:	retf   0x364
   14005285f:	add    BYTE PTR [rsi],al
   140052861:	add    eax,DWORD PTR gs:[rax]
   140052864:	js     0x140052813
   140052866:	add    al,0x0
   140052868:	or     al,0x65
   14005286a:	add    eax,DWORD PTR [rax]
   14005286c:	ds add eax,DWORD PTR gs:[rax]
   140052870:	xchg   esp,eax
   140052871:	scas   al,BYTE PTR es:[rdi]
   140052872:	add    al,0x0
   140052874:	rex.R
   140052875:	add    eax,DWORD PTR gs:[rax]
   140052878:	xchg   ebp,eax
   140052879:	add    eax,DWORD PTR gs:[rax]
   14005287c:	sbb    BYTE PTR [rdi+0x4],0x0
   140052880:	pushf  
   140052881:	add    eax,DWORD PTR gs:[rax]
   140052884:	add    DWORD PTR [rsi+0x3],esp
   140052887:	add    BYTE PTR [rdi*2+0x66080004],ah
   14005288e:	add    eax,DWORD PTR [rax]
   140052890:	stos   BYTE PTR es:[rdi],al
   140052891:	add    ax,WORD PTR [rax]
   140052894:	rex.R mov dl,0x4
   140052897:	add    BYTE PTR [rsi+riz*2+0x67190003],bh
   14005289e:	add    eax,DWORD PTR [rax]
   1400528a0:	sbb    BYTE PTR [rdi+0x4],0x0
   1400528a4:	and    BYTE PTR [rdi+0x3],ah
   1400528a7:	add    BYTE PTR [rdi+0x67],al
   1400528aa:	add    eax,DWORD PTR [rax]
   1400528ac:	sbb    BYTE PTR [rdi+0x4],0x0
   1400528b0:	push   rax
   1400528b1:	add    eax,DWORD PTR [eax]
   1400528b4:	stos   BYTE PTR es:[rdi],al
   1400528b5:	add    eax,DWORD PTR [eax]
   1400528b8:	int3   
   1400528b9:	mov    DWORD PTR [rax+rax*1],eax
   1400528bc:	mov    al,0x67
   1400528be:	add    eax,DWORD PTR [rax]
   1400528c0:	pop    rdx
   1400528c1:	push   0xffffffff82640003
   1400528c6:	add    al,0x0
   1400528c8:	(bad)  
   1400528c9:	push   0x69700003
   1400528ce:	add    eax,DWORD PTR [rax]
   1400528d0:	nop
   1400528d1:	mov    bl,0x4
   1400528d3:	add    BYTE PTR [rax+0x69],bh
   1400528d6:	add    eax,DWORD PTR [rax]
   1400528d8:	adc    BYTE PTR [rdx+0x3],ch
   1400528db:	add    BYTE PTR [rbx+rsi*4+0x4],dl
   1400528df:	add    BYTE PTR [rdx+rbp*2],ah
   1400528e2:	add    eax,DWORD PTR [rax]
   1400528e4:	mov    ebp,0xa400036a
   1400528e9:	mov    bl,0x4
   1400528eb:	add    ah,al
   1400528ed:	push   0x3
   1400528ef:	add    bh,dh
   1400528f1:	push   0x3
   1400528f3:	add    ah,dh
   1400528f5:	(bad)  
   1400528f6:	add    al,0x0
   1400528f8:	add    BYTE PTR [rbx+0x3],ch
   1400528fb:	add    BYTE PTR [rdx],bh
   1400528fd:	ins    BYTE PTR es:[rdi],dx
   1400528fe:	add    eax,DWORD PTR [rax]
   140052900:	xchg   esp,eax
   140052901:	mov    dl,0x4
   140052903:	add    BYTE PTR [rax+0x6c],al
   140052906:	add    eax,DWORD PTR [rax]
   140052908:	rex.XB ins DWORD PTR es:[rdi],dx
   14005290a:	add    eax,DWORD PTR [rax]
   14005290c:	sbb    al,0x71
   14005290e:	add    al,0x0
   140052910:	rex.WR ins DWORD PTR es:[rdi],dx
   140052912:	add    eax,DWORD PTR [rax]
   140052914:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140052916:	add    eax,DWORD PTR [rax]
   140052918:	sbb    al,0x71
   14005291a:	add    al,0x0
   14005291c:	pop    rax
   14005291d:	outs   dx,BYTE PTR ds:[rsi]
   14005291e:	add    eax,DWORD PTR [rax]
   140052920:	(bad)  
   140052921:	outs   dx,DWORD PTR ds:[rsi]
   140052922:	add    eax,DWORD PTR [rax]
   140052924:	movabs al,ds:0x2200036f070004ae
   14005292d:	outs   dx,DWORD PTR ds:[rsi]
   14005292e:	add    eax,DWORD PTR [rax]
   140052930:	adc    BYTE PTR [rdi+0x6f280004],ch
   140052936:	add    eax,DWORD PTR [rax]
   140052938:	xchg   edx,eax
   140052939:	outs   dx,DWORD PTR ds:[rsi]
   14005293a:	add    eax,DWORD PTR [rax]
   14005293c:	mov    esp,0x920004af
   140052941:	outs   dx,DWORD PTR ds:[rsi]
   140052942:	add    eax,DWORD PTR [rax]
   140052944:	mov    esp,0xf400036f
   140052949:	scas   eax,DWORD PTR es:[rdi]
   14005294a:	add    al,0x0
   14005294c:	(bad)  
   14005294d:	outs   dx,DWORD PTR ds:[rsi]
   14005294e:	add    eax,DWORD PTR [rax]
   140052950:	xor    DWORD PTR [rax+0x3],esi
   140052953:	add    ah,bh
   140052955:	scas   eax,DWORD PTR es:[rdi]
   140052956:	add    al,0x0
   140052958:	xor    DWORD PTR [rax+0x3],esi
   14005295b:	add    BYTE PTR [rbx+0x70],bl
   14005295e:	add    eax,DWORD PTR [rax]
   140052960:	rex.WR mov al,0x4
   140052963:	add    BYTE PTR [rbx+0x70],bl
   140052966:	add    eax,DWORD PTR [rax]
   140052968:	mov    DWORD PTR [rax+0x3],esi
   14005296b:	add    BYTE PTR [rax+rsi*4+0x4],dl
   14005296f:	add    BYTE PTR [rax-0xdfffc90],dl
   140052975:	jo     0x14005297a
   140052977:	add    BYTE PTR [rcx+rsi*2],bl
   14005297a:	add    al,0x0
   14005297c:	clc    
   14005297d:	jo     0x140052982
   14005297f:	add    BYTE PTR [rsi+0x78000371],dl
   140052985:	lahf   
   140052986:	add    al,0x0
   140052988:	pushf  
   140052989:	jno    0x14005298e
   14005298b:	add    BYTE PTR [rip+0xffffffffcc000372],ch        # 0x10c052d03
   140052991:	(bad)  
   140052992:	add    al,0x0
   140052994:	xor    al,0x72
   140052996:	add    eax,DWORD PTR [rax]
   140052998:	adc    al,0x73
   14005299a:	add    eax,DWORD PTR [rax]
   14005299c:	or     BYTE PTR [rdx+0x73280004],dh
   1400529a2:	add    eax,DWORD PTR [rax]
   1400529a4:	and    DWORD PTR [rbx+rax*1+0x0],esi
   1400529a8:	mov    WORD PTR [rbp+0x74210004],gs
   1400529ae:	add    eax,DWORD PTR [rax]
   1400529b0:	rex.WR je 0x1400529b6
   1400529b3:	add    BYTE PTR [rax],cl
   1400529b5:	scas   al,BYTE PTR es:[rdi]
   1400529b6:	add    al,0x0
   1400529b8:	push   rsp
   1400529b9:	je     0x1400529be
   1400529bb:	add    BYTE PTR [rbp+rsi*2-0x4e0bfffd],bl
   1400529c2:	add    al,0x0
   1400529c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400529c5:	jne    0x1400529ca
   1400529c7:	add    BYTE PTR [rdx],ah
   1400529c9:	ja     0x1400529ce
   1400529cb:	add    BYTE PTR [rax+0x400004b1],ah
   1400529d1:	ja     0x1400529d6
   1400529d3:	add    dh,dh
   1400529d5:	jns    0x1400529da
   1400529d7:	add    BYTE PTR [rax+rsi*4+0x4],bl
   1400529db:	add    BYTE PTR [rax],ah
   1400529dd:	jp     0x1400529e2
   1400529df:	add    BYTE PTR [rcx+0x7a],dh
   1400529e2:	add    eax,DWORD PTR [rax]
   1400529e4:	rcr    BYTE PTR [rdi+0x4],0x0
   1400529e8:	js     0x140052a64
   1400529ea:	add    eax,DWORD PTR [rax]
   1400529ec:	cmp    BYTE PTR [rbp+0x3],bh
   1400529ef:	add    ah,bl
   1400529f1:	mov    al,0x4
   1400529f3:	add    BYTE PTR [rax+0x7d],dh
   1400529f6:	add    eax,DWORD PTR [rax]
   1400529f8:	cmp    DWORD PTR [rsi+0x3],0x0
   1400529fc:	rcr    BYTE PTR [rdi+0x4],0x0
   140052a00:	mov    WORD PTR [rsi+0x3],?
   140052a03:	add    BYTE PTR [rdi],al
   140052a05:	add    DWORD PTR [rbx],0x4b16400
   140052a0b:	add    BYTE PTR [rcx+rax*4],bl
   140052a0e:	add    eax,DWORD PTR [rax]
   140052a10:	es (bad) 
   140052a12:	add    eax,DWORD PTR [rax]
   140052a14:	sbb    BYTE PTR [rsi-0x7dd9fffc],ch
   140052a1a:	add    eax,DWORD PTR [rax]
   140052a1c:	rex.B (bad) 
   140052a1e:	add    eax,DWORD PTR [rax]
   140052a20:	test   BYTE PTR [rsi-0x7db7fffc],ch
   140052a26:	add    eax,DWORD PTR [rax]
   140052a28:	jle    0x1400529ac
   140052a2a:	add    eax,DWORD PTR [rax]
   140052a2c:	rcr    BYTE PTR [rdi+0x4],0x0
   140052a30:	test   BYTE PTR [rdx-0x7cecfffd],al
   140052a36:	add    eax,DWORD PTR [rax]
   140052a38:	sbb    al,0x71
   140052a3a:	add    al,0x0
   140052a3c:	sbb    al,0x83
   140052a3e:	add    eax,DWORD PTR [rax]
   140052a40:	push   0xffffffffffffff83
   140052a42:	add    eax,DWORD PTR [rax]
   140052a44:	hlt    
   140052a45:	(bad)  
   140052a46:	add    al,0x0
   140052a48:	jo     0x1400529cd
   140052a4a:	add    eax,DWORD PTR [rax]
   140052a4c:	mov    esp,0xf4000383
   140052a51:	(bad)  
   140052a52:	add    al,0x0
   140052a54:	(bad)
   140052a58:	rex.RX test BYTE PTR [rbx],r8b
   140052a5b:	add    BYTE PTR [rax],ah
   140052a5d:	scas   eax,DWORD PTR es:[rdi]
   140052a5e:	add    al,0x0
   140052a60:	rex.RX test BYTE PTR [rbx],r8b
   140052a63:	add    BYTE PTR [rdx-0x7c],ch
   140052a66:	add    eax,DWORD PTR [rax]
   140052a68:	cwde   
   140052a69:	scas   eax,DWORD PTR es:[rdi]
   140052a6a:	add    al,0x0
   140052a6c:	jo     0x1400529f2
   140052a6e:	add    eax,DWORD PTR [rax]
   140052a70:	(bad)  
   140052a71:	test   DWORD PTR [rbx],eax
   140052a73:	add    BYTE PTR [rax+0x100004af],ch
   140052a79:	test   DWORD PTR [rbx],eax
   140052a7b:	add    BYTE PTR [rdi-0x3ffffc7b],ch
   140052a81:	pop    rdi
   140052a82:	add    al,0x0
   140052a84:	mov    eax,0x7b000385
   140052a89:	lea    eax,[rbx]
   140052a8b:	add    BYTE PTR [rdx+rsi*4+0x4],bh
   140052a8f:	add    BYTE PTR [rbp+rcx*4-0x71e1fffd],al
   140052a96:	add    eax,DWORD PTR [rax]
   140052a98:	fs (bad) 
   140052a9a:	add    al,0x0
   140052a9c:	xor    al,0x8e
   140052a9e:	add    eax,DWORD PTR [rax]
   140052aa0:	imul   ecx,DWORD PTR [rdi-0x609ffffd],0x4
   140052aa7:	add    BYTE PTR [rdi+rcx*4+0x3],dh
   140052aab:	add    BYTE PTR [rdx-0xbfffc71],dl
   140052ab1:	(bad)  
   140052ab2:	add    al,0x0
   140052ab4:	cwde   
   140052ab5:	pop    QWORD PTR [rbx]
   140052ab7:	add    BYTE PTR [rax+rdx*4],ch
   140052aba:	add    eax,DWORD PTR [rax]
   140052abc:	mov    eax,0x340004b3
   140052ac1:	nop
   140052ac2:	add    eax,DWORD PTR [rax]
   140052ac4:	push   rbp
   140052ac5:	nop
   140052ac6:	add    eax,DWORD PTR [rax]
   140052ac8:	shl    BYTE PTR [rbx-0x6fa3fffc],1
   140052ace:	add    eax,DWORD PTR [rax]
   140052ad0:	(bad)  
   140052ad1:	nop
   140052ad2:	add    eax,DWORD PTR [rax]
   140052ad4:	mov    eax,0x40004b3
   140052ad9:	xchg   ecx,eax
   140052ada:	add    eax,DWORD PTR [rax]
   140052adc:	(bad)  
   140052add:	xchg   ebx,eax
   140052ade:	add    eax,DWORD PTR [rax]
   140052ae0:	fdiv   DWORD PTR [rbx-0x6ccffffc]
   140052ae6:	add    eax,DWORD PTR [rax]
   140052ae8:	mov    BYTE PTR [rbx+0x711c0003],dl
   140052aee:	add    al,0x0
   140052af0:	nop
   140052af1:	xchg   ebx,eax
   140052af2:	add    eax,DWORD PTR [rax]
   140052af4:	(bad)  
   140052af5:	xchg   esp,eax
   140052af6:	add    eax,DWORD PTR [rax]
   140052af8:	cmp    BYTE PTR [rsp+rax*1+0x394f400],dh
   140052aff:	add    BYTE PTR [rax],dl
   140052b01:	xchg   ebp,eax
   140052b02:	add    eax,DWORD PTR [rax]
   140052b04:	hlt    
   140052b05:	(bad)  
   140052b06:	add    al,0x0
   140052b08:	sbb    BYTE PTR [rbp-0x6a58fffd],dl
   140052b0e:	add    eax,DWORD PTR [rax]
   140052b10:	and    al,0xb4
   140052b12:	add    al,0x0
   140052b14:	mov    al,0x95
   140052b16:	add    eax,DWORD PTR [rax]
   140052b18:	add    edx,DWORD PTR [rsi+0x5fc00003]
   140052b1e:	add    al,0x0
   140052b20:	or     al,0x96
   140052b22:	add    eax,DWORD PTR [rax]
   140052b24:	(bad)  
   140052b25:	xchg   esi,eax
   140052b26:	add    eax,DWORD PTR [rax]
   140052b28:	fs (bad) 
   140052b2a:	add    al,0x0
   140052b2c:	cwde   
   140052b2d:	xchg   esi,eax
   140052b2e:	add    eax,DWORD PTR [rax]
   140052b30:	call   QWORD PTR [rsi+0x5fc00003]
   140052b36:	add    al,0x0
   140052b38:	or     BYTE PTR [rdi-0x6866fffd],dl
   140052b3e:	add    eax,DWORD PTR [rax]
   140052b40:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052b41:	mov    ah,0x4
   140052b43:	add    BYTE PTR [rax+0x4b000397],dh
   140052b49:	cwde   
   140052b4a:	add    eax,DWORD PTR [rax]
   140052b4c:	fdiv   QWORD PTR [rsp+rax*1+0x3986000]
   140052b53:	add    BYTE PTR [rbx-0x67],bh
   140052b56:	add    eax,DWORD PTR [rax]
   140052b58:	sub    BYTE PTR [rbp-0x667bfffc],dh
   140052b5e:	add    eax,DWORD PTR [rax]
   140052b60:	push   rcx
   140052b61:	(bad)  
   140052b62:	add    eax,DWORD PTR [rax]
   140052b64:	adc    al,0xb5
   140052b66:	add    al,0x0
   140052b68:	pop    rax
   140052b69:	(bad)  
   140052b6a:	add    eax,DWORD PTR [rax]
   140052b6c:	in     al,dx
   140052b6d:	(bad)  
   140052b6e:	add    eax,DWORD PTR [rax]
   140052b70:	fs mov ch,0x4
   140052b73:	add    ah,dh
   140052b75:	(bad)  
   140052b76:	add    eax,DWORD PTR [rax]
   140052b78:	cmp    ebx,DWORD PTR [rbx+0x711c0003]
   140052b7e:	add    al,0x0
   140052b80:	rex.R
   140052b81:	fwait
   140052b82:	add    eax,DWORD PTR [rax]
   140052b84:	sbb    ebx,DWORD PTR [rbx+rax*1+0x4b55000]
   140052b8b:	add    BYTE PTR [rsp+rbx*4],ah
   140052b8e:	add    eax,DWORD PTR [rax]
   140052b90:	(bad)  
   140052b91:	pushf  
   140052b92:	add    eax,DWORD PTR [rax]
   140052b94:	je     0x140052b4b
   140052b96:	add    al,0x0
   140052b98:	lock pushf 
   140052b9a:	add    eax,DWORD PTR [rax]
   140052b9c:	rcr    DWORD PTR [rbp-0x4ac3fffd],cl
   140052ba2:	add    al,0x0
   140052ba4:	fcomp  QWORD PTR [rbp-0x6184fffd]
   140052baa:	add    eax,DWORD PTR [rax]
   140052bac:	or     BYTE PTR [rsi-0x616bfffc],dh
   140052bb2:	add    eax,DWORD PTR [rax]
   140052bb4:	xor    BYTE PTR [rdi-0x4a37fffd],bl
   140052bba:	add    al,0x0
   140052bbc:	push   rax
   140052bbd:	lahf   
   140052bbe:	add    eax,DWORD PTR [rax]
   140052bc0:	jg     0x140052b61
   140052bc2:	add    eax,DWORD PTR [rax]
   140052bc4:	rcr    BYTE PTR [rdi+0x4],0x0
   140052bc8:	nop
   140052bc9:	lahf   
   140052bca:	add    eax,DWORD PTR [rax]
   140052bcc:	rcr    BYTE PTR [rdi+0x5fc00003],0x4
   140052bd3:	add    al,dl
   140052bd5:	lahf   
   140052bd6:	add    eax,DWORD PTR [rax]
   140052bd8:	adc    al,0xa0
   140052bda:	add    eax,DWORD PTR [rax]
   140052bdc:	sbb    al,0x71
   140052bde:	add    al,0x0
   140052be0:	and    BYTE PTR [rax-0x5f97fffd],ah
   140052be6:	add    eax,DWORD PTR [rax]
   140052be8:	sbb    al,0x71
   140052bea:	add    al,0x0
   140052bec:	jo     0x140052b8e
   140052bee:	add    eax,DWORD PTR [rax]
   140052bf0:	rex.WB movabs rax,ds:0xa1600004b5880003
   140052bfa:	add    eax,DWORD PTR [rax]
   140052bfc:	xchg   BYTE PTR [rcx+0x5f800003],ah
   140052c02:	add    al,0x0
   140052c04:	nop
   140052c05:	movabs eax,ds:0x5fc00003a1bf0003
   140052c0e:	add    al,0x0
   140052c10:	lock movabs eax,ds:0x82cc0003a29a0003
   140052c1a:	add    al,0x0
   140052c1c:	movabs al,ds:0x240003a3230003a2
   140052c25:	jge    0x140052c2b
   140052c27:	add    BYTE PTR [rax],dh
   140052c29:	movabs ds:0x60f40003a3460003,eax
   140052c32:	add    al,0x0
   140052c34:	pop    rsp
   140052c35:	movabs ds:0x5f800003a37d0003,eax
   140052c3e:	add    al,0x0
   140052c40:	test   BYTE PTR [rbx-0x5c49fffd],ah
   140052c46:	add    eax,DWORD PTR [rax]
   140052c48:	hlt    
   140052c49:	(bad)  
   140052c4a:	add    al,0x0
   140052c4c:	mov    esp,0x410003a3
   140052c51:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052c52:	add    eax,DWORD PTR [rax]
   140052c54:	sbb    al,0x71
   140052c56:	add    al,0x0
   140052c58:	js     0x140052bfe
   140052c5a:	add    eax,DWORD PTR [rax]
   140052c5c:	mov    al,0xa4
   140052c5e:	add    eax,DWORD PTR [rax]
   140052c60:	rcr    BYTE PTR [rdi+0x4],0x0
   140052c64:	je     0x140052c0b
   140052c66:	add    eax,DWORD PTR [rax]
   140052c68:	jnp    0x140052c10
   140052c6a:	add    eax,DWORD PTR [rax]
   140052c6c:	pop    rax
   140052c6d:	mov    dh,0x4
   140052c6f:	add    BYTE PTR [rbx-0x5a],bh
   140052c72:	add    eax,DWORD PTR [rax]
   140052c74:	xchg   esi,eax
   140052c75:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052c76:	add    eax,DWORD PTR [rax]
   140052c78:	(bad)  
   140052c79:	mov    dh,0x4
   140052c7b:	add    BYTE PTR [rsi+riz*4-0x58d1fffd],bl
   140052c82:	add    eax,DWORD PTR [rax]
   140052c84:	sbb    BYTE PTR [rdi+0x4],0x0
   140052c88:	xor    al,0xa7
   140052c8a:	add    eax,DWORD PTR [rax]
   140052c8c:	mov    dh,0xa7
   140052c8e:	add    eax,DWORD PTR [rax]
   140052c90:	call   0xfc05312f
   140052c95:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052c96:	add    eax,DWORD PTR [rax]
   140052c98:	sub    DWORD PTR [rbx+rax*1+0x4b72c00],0x3ad1400
   140052ca3:	add    BYTE PTR [rbx-0x52],ch
   140052ca6:	add    eax,DWORD PTR [rax]
   140052ca8:	adc    al,0xb7
   140052caa:	add    al,0x0
   140052cac:	je     0x140052c5c
   140052cae:	add    eax,DWORD PTR [rax]
   140052cb0:	pop    rcx
   140052cb1:	mov    bl,0x3
   140052cb3:	add    ah,dl
   140052cb5:	mov    dh,0x4
   140052cb7:	add    BYTE PTR [rax-0x4d],ah
   140052cba:	add    eax,DWORD PTR [rax]
   140052cbc:	stos   BYTE PTR es:[rdi],al
   140052cbd:	mov    ah,0x3
   140052cbf:	add    ah,dh
   140052cc1:	mov    dh,0x4
   140052cc3:	add    BYTE PTR [rax+0x4c0003b4],dh
   140052cc9:	mov    dh,0x3
   140052ccb:	add    BYTE PTR [rdi+rsi*4+0x4],ch
   140052ccf:	add    BYTE PTR [rsi+rsi*4+0x3],dl
   140052cd3:	add    BYTE PTR [rax],ch
   140052cd5:	mov    bh,0x3
   140052cd7:	add    ah,cl
   140052cd9:	(bad)  
   140052cda:	add    al,0x0
   140052cdc:	xor    BYTE PTR [rdi-0x46b8fffd],dh
   140052ce2:	add    eax,DWORD PTR [rax]
   140052ce4:	xor    BYTE PTR [rdi-0x4667fffc],0x3
   140052ceb:	add    BYTE PTR [rbx-0x63fffc46],ch
   140052cf1:	mov    bh,0x4
   140052cf3:	add    BYTE PTR [rdx+rdi*4-0x44c2fffd],dh
   140052cfa:	add    eax,DWORD PTR [rax]
   140052cfc:	mov    esp,0x3d0004b7
   140052d01:	mov    ebx,0xbb530003
   140052d06:	add    eax,DWORD PTR [rax]
   140052d08:	in     al,dx
   140052d09:	mov    bh,0x4
   140052d0b:	add    BYTE PTR [rbx+rdi*4+0x3],bl
   140052d0f:	add    BYTE PTR [rbp-0x3ffffc45],bh
   140052d15:	pop    rdi
   140052d16:	add    al,0x0
   140052d18:	(bad)  
   140052d19:	mov    ebx,0xbc250003
   140052d1e:	add    eax,DWORD PTR [rax]
   140052d20:	sbb    BYTE PTR [rdi+0x4],0x0
   140052d24:	movabs rsp,0x7d240003bce30003
   140052d2e:	add    al,0x0
   140052d30:	in     al,dx
   140052d31:	mov    esp,0xbd810003
   140052d36:	add    eax,DWORD PTR [rax]
   140052d38:	hlt    
   140052d39:	mov    bh,0x4
	...

Disassembly of section .didat:

0000000140053000 <.didat>:
   140053000:	lock push rax
   140053002:	add    DWORD PTR [rax+0x1],eax
	...
   14005300d:	add    BYTE PTR [rax],al
   14005300f:	add    al,dh
   140053011:	rex.WXB add QWORD PTR [r8+0x1],rax
   140053015:	add    BYTE PTR [rax],al
   140053017:	add    BYTE PTR [rax],dh
   140053019:	push   rax
   14005301a:	add    DWORD PTR [rax+0x1],eax
   14005301d:	add    BYTE PTR [rax],al
   14005301f:	add    BYTE PTR [rax],dl
   140053021:	push   rax
   140053022:	add    DWORD PTR [rax+0x1],eax
   140053025:	add    BYTE PTR [rax],al
   140053027:	add    al,dh
   140053029:	rex.WRXB add QWORD PTR [r8+0x1],r8
   14005302d:	add    BYTE PTR [rax],al
   14005302f:	add    al,dl
   140053031:	rex.WRXB add QWORD PTR [r8+0x1],r8
   140053035:	add    BYTE PTR [rax],al
   140053037:	add    BYTE PTR [rax+0x140014f],dh
   14005303d:	add    BYTE PTR [rax],al
   14005303f:	add    BYTE PTR [rax+0x140014f],dl
   140053045:	add    BYTE PTR [rax],al
   140053047:	add    BYTE PTR [rax+0x4f],dh
   14005304a:	add    DWORD PTR [rax+0x1],eax
   14005304d:	add    BYTE PTR [rax],al
   14005304f:	add    BYTE PTR [rax+0x4f],dl
   140053052:	add    DWORD PTR [rax+0x1],eax
   140053055:	add    BYTE PTR [rax],al
   140053057:	add    BYTE PTR [rax+0x140014d],dl
   14005305d:	add    BYTE PTR [rax],al
   14005305f:	add    BYTE PTR [rax+0x140014d],dh
   140053065:	add    BYTE PTR [rax],al
   140053067:	add    al,dl
   140053069:	add    QWORD PTR [r8+0x1],r8
   14005306d:	add    BYTE PTR [rax],al
   14005306f:	add    al,dh
   140053071:	add    QWORD PTR [r8+0x1],r8
   140053075:	add    BYTE PTR [rax],al
   140053077:	add    BYTE PTR [rax],dl
   140053079:	rex.WRX add QWORD PTR [rax+0x1],r8
   14005307d:	add    BYTE PTR [rax],al
   14005307f:	add    BYTE PTR [rax],dh
   140053081:	rex.WRX add QWORD PTR [rax+0x1],r8
   140053085:	add    BYTE PTR [rax],al
   140053087:	add    BYTE PTR [rax+0x4e],dl
   14005308a:	add    DWORD PTR [rax+0x1],eax
   14005308d:	add    BYTE PTR [rax],al
   14005308f:	add    BYTE PTR [rax+0x4e],dh
   140053092:	add    DWORD PTR [rax+0x1],eax
   140053095:	add    BYTE PTR [rax],al
   140053097:	add    BYTE PTR [rax+0x140014e],dl
   14005309d:	add    BYTE PTR [rax],al
   14005309f:	add    BYTE PTR [rax+0x140014e],dh
   1400530a5:	add    BYTE PTR [rax],al
   1400530a7:	add    al,dl
   1400530a9:	rex.WRX add QWORD PTR [rax+0x1],r8
   1400530ad:	add    BYTE PTR [rax],al
   1400530af:	add    BYTE PTR [rax],dh
   1400530b1:	rex.WRXB add QWORD PTR [r8+0x1],r8
   1400530b5:	add    BYTE PTR [rax],al
   1400530b7:	add    BYTE PTR [rax],dl
   1400530b9:	rex.WRXB add QWORD PTR [r8+0x1],r8
   1400530bd:	add    BYTE PTR [rax],al
   1400530bf:	add    BYTE PTR [rax+0x4b],dl
   1400530c2:	add    DWORD PTR [rax+0x1],eax
	...
   1400530cd:	add    BYTE PTR [rax],al
   1400530cf:	add    BYTE PTR [rax+0x4d],dh
   1400530d2:	add    DWORD PTR [rax+0x1],eax
   1400530d5:	add    BYTE PTR [rax],al
   1400530d7:	add    BYTE PTR [rax+0x4d],dl
   1400530da:	add    DWORD PTR [rax+0x1],eax
   1400530dd:	add    BYTE PTR [rax],al
   1400530df:	add    BYTE PTR [rax],dh
   1400530e1:	add    QWORD PTR [r8+0x1],r8
   1400530e5:	add    BYTE PTR [rax],al
   1400530e7:	add    BYTE PTR [rax],dl
   1400530e9:	add    QWORD PTR [r8+0x1],r8
   1400530ed:	add    BYTE PTR [rax],al
   1400530ef:	add    al,dh
   1400530f1:	add    QWORD PTR [rax+0x1],r8
   1400530f5:	add    BYTE PTR [rax],al
   1400530f7:	add    al,dl
   1400530f9:	add    QWORD PTR [rax+0x1],r8
   1400530fd:	add    BYTE PTR [rax],al
   1400530ff:	add    BYTE PTR [rax+0x140014c],dh
   140053105:	add    BYTE PTR [rax],al
   140053107:	add    al,dl
   140053109:	push   rcx
   14005310a:	add    DWORD PTR [rax+0x1],eax
   14005310d:	add    BYTE PTR [rax],al
   14005310f:	add    BYTE PTR [rax+0x1400151],dh
   140053115:	add    BYTE PTR [rax],al
   140053117:	add    BYTE PTR [rax],dl
   140053119:	add    QWORD PTR [rax+0x1],r8
   14005311d:	add    BYTE PTR [rax],al
   14005311f:	add    al,dh
   140053121:	rex.WRX add QWORD PTR [rax+0x1],r8
   140053125:	add    BYTE PTR [rax],al
   140053127:	add    BYTE PTR [rax+0x1400151],dl
	...
   140053135:	add    BYTE PTR [rax],al
   140053137:	add    BYTE PTR [rax+0x1400152],dh
   14005313d:	add    BYTE PTR [rax],al
   14005313f:	add    al,dh
   140053141:	push   rcx
   140053142:	add    DWORD PTR [rax+0x1],eax
   140053145:	add    BYTE PTR [rax],al
   140053147:	add    BYTE PTR [rax+0x1400152],dl
   14005314d:	add    BYTE PTR [rax],al
   14005314f:	add    al,dl
   140053151:	push   rdx
   140053152:	add    DWORD PTR [rax+0x1],eax
	...
   14005315d:	add    BYTE PTR [rax],al
   14005315f:	add    BYTE PTR [rax+0x50],dl
   140053162:	add    DWORD PTR [rax+0x1],eax
	...

Disassembly of section .rsrc:

0000000140054000 <.rsrc>:
	...
   14005400c:	add    DWORD PTR [rax],eax
   14005400e:	add    al,0x0
   140054010:	pushf  
   140054011:	add    al,BYTE PTR [rax]
   140054013:	cmp    BYTE PTR [rax],0x0
   140054016:	add    BYTE PTR [rax+0x3],al
   14005401c:	push   rax
   14005401d:	add    BYTE PTR [rax],al
   14005401f:	or     BYTE PTR [rsi],0x0
   140054022:	add    BYTE PTR [rax],al
   140054024:	cwde   
   140054025:	add    BYTE PTR [rax],al
   140054027:	adc    BYTE PTR [rax],0x0
   14005402a:	add    BYTE PTR [rax],al
   14005402c:	mov    al,0x0
   14005402e:	add    BYTE PTR [rax+0x18],al
   140054034:	enter  0x0,0x80
	...
   140054044:	add    BYTE PTR [rax],al
   140054046:	add    DWORD PTR [rax],eax
   140054048:	add    DWORD PTR [rax],eax
   14005404a:	add    BYTE PTR [rax],al
   14005404c:	loopne 0x14005404e
   14005404e:	add    BYTE PTR [rax+0x0],al
	...
   14005405c:	add    BYTE PTR [rax],al
   14005405e:	(bad)  
   14005405f:	add    BYTE PTR [rcx],al
   140054061:	add    BYTE PTR [rax],al
   140054063:	add    al,bh
   140054065:	add    BYTE PTR [rax],al
   140054067:	add    BYTE PTR [rdx],0x0
   14005406a:	add    BYTE PTR [rax],al
   14005406c:	adc    BYTE PTR [rcx],al
   14005406e:	add    BYTE PTR [rax+0x3],al
   140054074:	sub    BYTE PTR [rcx],al
   140054076:	add    BYTE PTR [rax+0x4],al
   14005407c:	rex add DWORD PTR [rax],eax
   14005407f:	add    BYTE PTR [rip+0x58000000],0x1        # 0x198054086
   140054086:	add    BYTE PTR [rax+0x6],al
   14005408c:	jo     0x14005408f
   14005408e:	add    BYTE PTR [rax+0x7],al
   140054094:	mov    BYTE PTR [rcx],al
   140054096:	add    BYTE PTR [rax+0x0],al
	...
   1400540a4:	add    DWORD PTR [rax],eax
   1400540a6:	add    BYTE PTR [rax],al
   1400540a8:	cwde   
   1400540a9:	add    al,BYTE PTR [rax]
   1400540ab:	and    BYTE PTR [rax+0x800001],0x0
	...
   1400540be:	add    DWORD PTR [rax],eax
   1400540c0:	add    DWORD PTR [rax],eax
   1400540c2:	add    BYTE PTR [rax],al
   1400540c4:	mov    eax,0x800001
	...
   1400540d5:	add    BYTE PTR [rcx],al
   1400540d7:	add    BYTE PTR [rcx],al
   1400540d9:	add    BYTE PTR [rax],al
   1400540db:	add    al,dl
   1400540dd:	add    DWORD PTR [rax],eax
   1400540df:	add    BYTE PTR [rax],0x0
	...
   1400540ee:	add    DWORD PTR [rax],eax
   1400540f0:	or     DWORD PTR [rax+rax*1],eax
   1400540f3:	add    al,ch
   1400540f5:	add    DWORD PTR [rax],eax
	...
   140054103:	add    BYTE PTR [rax],al
   140054105:	add    BYTE PTR [rcx],al
   140054107:	add    BYTE PTR [rcx],cl
   140054109:	add    al,0x0
   14005410b:	add    al,bh
   14005410d:	add    DWORD PTR [rax],eax
	...
   14005411b:	add    BYTE PTR [rax],al
   14005411d:	add    BYTE PTR [rcx],al
   14005411f:	add    BYTE PTR [rcx],cl
   140054121:	add    al,0x0
   140054123:	add    BYTE PTR [rax],cl
   140054125:	add    al,BYTE PTR [rax]
	...
   140054133:	add    BYTE PTR [rax],al
   140054135:	add    BYTE PTR [rcx],al
   140054137:	add    BYTE PTR [rcx],cl
   140054139:	add    al,0x0
   14005413b:	add    BYTE PTR [rax],bl
   14005413d:	add    al,BYTE PTR [rax]
	...
   14005414b:	add    BYTE PTR [rax],al
   14005414d:	add    BYTE PTR [rcx],al
   14005414f:	add    BYTE PTR [rcx],cl
   140054151:	add    al,0x0
   140054153:	add    BYTE PTR [rax],ch
   140054155:	add    al,BYTE PTR [rax]
	...
   140054163:	add    BYTE PTR [rax],al
   140054165:	add    BYTE PTR [rcx],al
   140054167:	add    BYTE PTR [rcx],cl
   140054169:	add    al,0x0
   14005416b:	add    BYTE PTR [rax],bh
   14005416d:	add    al,BYTE PTR [rax]
	...
   14005417b:	add    BYTE PTR [rax],al
   14005417d:	add    BYTE PTR [rcx],al
   14005417f:	add    BYTE PTR [rcx],cl
   140054181:	add    al,0x0
   140054183:	add    BYTE PTR [rax+0x2],cl
	...
   140054196:	add    DWORD PTR [rax],eax
   140054198:	or     DWORD PTR [rax+rax*1],eax
   14005419b:	add    BYTE PTR [rax+0x2],bl
	...
   1400541ae:	add    DWORD PTR [rax],eax
   1400541b0:	or     DWORD PTR [rax+rax*1],eax
   1400541b3:	add    BYTE PTR [rax+0x2],ch
	...
   1400541c6:	add    DWORD PTR [rax],eax
   1400541c8:	or     DWORD PTR [rax+rax*1],eax
   1400541cb:	add    BYTE PTR [rax+0x2],bh
	...
   1400541de:	add    DWORD PTR [rax],eax
   1400541e0:	or     DWORD PTR [rax+rax*1],eax
   1400541e3:	add    BYTE PTR [rax+0x30000002],cl
   1400541e9:	repz add eax,0xd000
	...
   1400541f7:	add    BYTE PTR [rax+0x47],ah
   1400541fa:	add    eax,0x422800
	...
   140054207:	add    BYTE PTR [rax-0x57fffa77],cl
   14005420d:	and    eax,0x0
   140054212:	add    BYTE PTR [rax],al
   140054214:	add    BYTE PTR [rax],al
   140054216:	add    BYTE PTR [rax],al
   140054218:	xor    BYTE PTR [rdi+0x1a680005],ch
	...
   140054226:	add    BYTE PTR [rax],al
   140054228:	cwde   
   140054229:	leave  
   14005422a:	add    eax,0x10a800
	...
   140054237:	add    BYTE PTR [rax-0x26],al
   14005423a:	add    eax,0x98800
	...
   140054247:	add    al,cl
   140054249:	jrcxz  0x140054250
   14005424b:	add    BYTE PTR [rax+0x6],bh
   140054251:	add    BYTE PTR [rax],al
   140054253:	add    BYTE PTR [rax],al
   140054255:	add    BYTE PTR [rax],al
   140054257:	add    BYTE PTR [rax+0x680005ea],al
   14005425d:	add    al,0x0
	...
   140054267:	add    al,ch
   140054269:	out    dx,al
   14005426a:	add    eax,0x6800
	...
   140054277:	add    BYTE PTR [rax-0x11],dl
   14005427a:	add    eax,0x3e000
	...
   140054287:	add    BYTE PTR [rax-0x56fffabe],dh
   14005428d:	add    al,0x0
	...
   140054297:	add    BYTE PTR [rcx],al
   140054299:	add    BYTE PTR [rax],dh
   14005429b:	add    BYTE PTR [rbx],al
   14005429d:	add    BYTE PTR [rbp+0x0],cl
   1400542a0:	push   rbp
   1400542a1:	add    BYTE PTR [rcx+0x0],cl
	...
   1400542b0:	cmp    al,0x3f
   1400542b2:	js     0x140054321
   1400542b4:	ins    BYTE PTR es:[rdi],dx
   1400542b5:	and    BYTE PTR [rsi+0x65],dh
   1400542b8:	jb     0x14005432d
   1400542ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400542c1:	xor    BYTE PTR [rdx],ah
   1400542c3:	and    BYTE PTR [rbp+0x6e],ah
   1400542c6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400542c9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400542d0:	rex.RX sub eax,0x73202238
   1400542d6:	je     0x140054339
   1400542d8:	outs   dx,BYTE PTR ds:[rsi]
   1400542d9:	fs (bad) 
   1400542db:	ins    BYTE PTR es:[rdi],dx
   1400542dc:	outs   dx,DWORD PTR ds:[rsi]
   1400542dd:	outs   dx,BYTE PTR ds:[rsi]
   1400542de:	gs cmp eax,0x73657922
   1400542e4:	and    bh,BYTE PTR [rdi]
   1400542e6:	ds or  eax,0x3c0a0d0a
   1400542ec:	and    DWORD PTR [rip+0x6f43202d],ebp        # 0x1af48631f
   1400542f2:	jo     0x14005436d
   1400542f4:	jb     0x14005435f
   1400542f6:	addr32 push 0x63282074
   1400542fc:	sub    DWORD PTR [rax],esp
   1400542fe:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140054306:	je     0x140054328
   140054308:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14005430a:	jb     0x14005437c
   14005430c:	outs   dx,DWORD PTR ds:[rsi]
   14005430d:	jb     0x140054370
   14005430f:	je     0x14005437a
   140054311:	outs   dx,DWORD PTR ds:[rsi]
   140054312:	outs   dx,BYTE PTR ds:[rsi]
   140054313:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a128146
   140054319:	cmp    al,0x61
   14005431b:	jae    0x140054390
   14005431d:	gs ins DWORD PTR es:[rdi],dx
   14005431f:	(bad)  
   140054320:	ins    BYTE PTR es:[rdi],dx
   140054321:	jns    0x140054343
   140054323:	js     0x140054392
   140054325:	ins    BYTE PTR es:[rdi],dx
   140054326:	outs   dx,BYTE PTR ds:[rsi]
   140054327:	jae    0x140054366
   140054329:	and    dh,BYTE PTR [rbp+0x72]
   14005432c:	outs   dx,BYTE PTR ds:[rsi]
   14005432d:	cmp    dh,BYTE PTR [rbx+0x63]
   140054330:	push   0x73616d65
   140054335:	sub    eax,0x7263696d
   14005433a:	outs   dx,DWORD PTR ds:[rsi]
   14005433b:	jae    0x1400543ac
   14005433d:	data16 je 0x14005436d
   140054340:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140054343:	cmp    ah,BYTE PTR [rcx+0x73]
   140054346:	ins    DWORD PTR es:[rdi],dx
   140054347:	cs jbe 0x14005437b
   14005434a:	and    ah,BYTE PTR [rax]
   14005434c:	ins    DWORD PTR es:[rdi],dx
   14005434d:	(bad)  
   14005434e:	outs   dx,BYTE PTR ds:[rsi]
   14005434f:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140054356:	jb     0x1400543cb
   140054358:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14005435f:	xor    BYTE PTR [rdx],ah
   140054361:	ds or  eax,0x3c0a0d0a
   140054367:	(bad)  
   140054368:	jo     0x1400543da
   14005436a:	ins    BYTE PTR es:[rdi],dx
   14005436b:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140054372:	and    BYTE PTR [rax],ah
   140054374:	js     0x1400543e3
   140054376:	ins    BYTE PTR es:[rdi],dx
   140054377:	outs   dx,BYTE PTR ds:[rsi]
   140054378:	jae    0x1400543b7
   14005437a:	and    dh,BYTE PTR [rbp+0x72]
   14005437d:	outs   dx,BYTE PTR ds:[rsi]
   14005437e:	cmp    dh,BYTE PTR [rbx+0x63]
   140054381:	push   0x73616d65
   140054386:	sub    eax,0x7263696d
   14005438b:	outs   dx,DWORD PTR ds:[rsi]
   14005438c:	jae    0x1400543fd
   14005438e:	data16 je 0x1400543be
   140054391:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140054394:	cmp    ah,BYTE PTR [rcx+0x73]
   140054397:	ins    DWORD PTR es:[rdi],dx
   140054398:	cs jbe 0x1400543ce
   14005439b:	and    bh,BYTE PTR [rsi]
   14005439d:	or     eax,0x3c20200a
   1400543a2:	ja     0x14005440d
   1400543a4:	outs   dx,BYTE PTR ds:[rsi]
   1400543a5:	outs   dx,DWORD PTR fs:[rsi]
   1400543a7:	ja     0x14005441c
   1400543a9:	push   rbx
   1400543aa:	gs je  0x140054421
   1400543ad:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   1400543b4:	and    BYTE PTR [rax],ah
   1400543b6:	and    BYTE PTR [rax],ah
   1400543b8:	cmp    al,0x64
   1400543ba:	jo     0x140054425
   1400543bc:	rex.B ja 0x140054420
   1400543bf:	jb     0x140054426
   1400543c1:	and    BYTE PTR [rax+0x6d],bh
   1400543c4:	ins    BYTE PTR es:[rdi],dx
   1400543c5:	outs   dx,BYTE PTR ds:[rsi]
   1400543c6:	jae    0x140054405
   1400543c8:	and    ch,BYTE PTR [rax+0x74]
   1400543cb:	je     0x14005443d
   1400543cd:	cmp    ch,BYTE PTR [rdi]
   1400543cf:	(bad)  
   1400543d0:	jae    0x140054435
   1400543d2:	push   0x73616d65
   1400543d7:	cs ins DWORD PTR es:[rdi],dx
   1400543d9:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   1400543e0:	je     0x140054410
   1400543e2:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400543e5:	(bad)  
   1400543e6:	push   rbx
   1400543e7:	rex.WRB
   1400543e8:	rex.WB (bad) 
   1400543ea:	xor    dh,BYTE PTR [rax]
   1400543ec:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6e9b21
   1400543f2:	outs   dx,DWORD PTR fs:[rsi]
   1400543f4:	ja     0x140054469
   1400543f6:	push   rbx
   1400543f7:	gs je  0x14005446e
   1400543fa:	imul   ebp,DWORD PTR [rsi+0x67],0x703e2273
   140054401:	gs jb  0x140054424
   140054404:	ins    DWORD PTR es:[rdi],dx
   140054405:	outs   dx,DWORD PTR ds:[rsi]
   140054406:	outs   dx,BYTE PTR ds:[rsi]
   140054407:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x70642f3c
   14005440f:	imul   eax,DWORD PTR [rcx+0x77],0x3e657261
   140054416:	or     eax,0x3c20200a
   14005441b:	(bad)  
   14005441c:	ja     0x140054487
   14005441e:	outs   dx,BYTE PTR ds:[rsi]
   14005441f:	outs   dx,DWORD PTR fs:[rsi]
   140054421:	ja     0x140054496
   140054423:	push   rbx
   140054424:	gs je  0x14005449b
   140054427:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14005442e:	cmp    al,0x2f
   140054430:	(bad)  
   140054431:	jo     0x1400544a3
   140054433:	ins    BYTE PTR es:[rdi],dx
   140054434:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14005443b:	ds or  eax,0x3c0a0d0a
   140054441:	(bad)  
   140054442:	jae    0x1400544b7
   140054444:	gs ins DWORD PTR es:[rdi],dx
   140054446:	(bad)  
   140054447:	ins    BYTE PTR es:[rdi],dx
   140054448:	jns    0x140054493
   14005444a:	fs outs dx,BYTE PTR gs:[rsi]
   14005444d:	je     0x1400544b8
   14005444f:	je     0x1400544ca
   140054451:	or     eax,0x200a0d0a
   140054456:	and    BYTE PTR [rax],ah
   140054458:	and    BYTE PTR [rsi+0x65],dh
   14005445b:	jb     0x1400544d0
   14005445d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   140054464:	xor    DWORD PTR [rsi],ebp
   140054466:	xor    BYTE PTR [rsi],ch
   140054468:	xor    BYTE PTR [rdx],ah
   14005446a:	or     eax,0x2020200a
   14005446f:	and    BYTE PTR [rax+0x72],dh
   140054472:	outs   dx,DWORD PTR ds:[rsi]
   140054473:	movsxd esp,DWORD PTR [rbp+0x73]
   140054476:	jae    0x1400544e7
   140054478:	jb     0x1400544bb
   14005447a:	jb     0x1400544df
   14005447c:	push   0x63657469
   140054481:	je     0x1400544f8
   140054483:	jb     0x1400544ea
   140054485:	cmp    eax,0x646d6122
   14005448a:	ss xor al,0x22
   14005448d:	or     eax,0x2020200a
   140054492:	and    BYTE PTR [rsi+0x61],ch
   140054495:	ins    DWORD PTR es:[rdi],dx
   140054496:	gs cmp eax,0x63694d22
   14005449c:	jb     0x14005450d
   14005449e:	jae    0x14005450f
   1400544a0:	data16 je 0x1400544d1
   1400544a3:	push   rsp
   1400544a4:	(bad)  
   1400544a5:	(bad)  
   1400544a6:	ins    BYTE PTR es:[rdi],dx
   1400544a7:	gs je  0x1400544fa
   1400544aa:	rex.XB
   1400544ab:	cs push rsp
   1400544ad:	(bad)  
   1400544ae:	(bad)  
   1400544af:	ins    BYTE PTR es:[rdi],dx
   1400544b0:	gs je  0x140054507
   1400544b3:	rex.WB push r8
   1400544b5:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602564c5
   1400544bb:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400544bf:	gs cmp eax,0x6e697722
   1400544c5:	xor    esi,DWORD PTR [rdx]
   1400544c7:	and    cl,BYTE PTR [rip+0x2f0a0d0a]        # 0x16f0f51d7
   1400544cd:	ds or  eax,0x3c0a0d0a
   1400544d3:	je     0x140054547
   1400544d5:	jne    0x14005454a
   1400544d7:	je     0x140054522
   1400544d9:	outs   dx,BYTE PTR ds:[rsi]
   1400544da:	outs   dx,WORD PTR ds:[rsi]
   1400544dc:	and    BYTE PTR [rax+0x6d],bh
   1400544df:	ins    BYTE PTR es:[rdi],dx
   1400544e0:	outs   dx,BYTE PTR ds:[rsi]
   1400544e1:	jae    0x140054520
   1400544e3:	and    dh,BYTE PTR [rbp+0x72]
   1400544e6:	outs   dx,BYTE PTR ds:[rsi]
   1400544e7:	cmp    dh,BYTE PTR [rbx+0x63]
   1400544ea:	push   0x73616d65
   1400544ef:	sub    eax,0x7263696d
   1400544f4:	outs   dx,DWORD PTR ds:[rsi]
   1400544f5:	jae    0x140054566
   1400544f7:	data16 je 0x140054527
   1400544fa:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400544fd:	cmp    ah,BYTE PTR [rcx+0x73]
   140054500:	ins    DWORD PTR es:[rdi],dx
   140054501:	cs jbe 0x140054537
   140054504:	and    bh,BYTE PTR [rsi]
   140054506:	or     eax,0x3c20200a
   14005450b:	jae    0x140054572
   14005450d:	movsxd esi,DWORD PTR [rbp+0x72]
   140054510:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140054518:	and    BYTE PTR [rax],ah
   14005451a:	and    BYTE PTR [rax],ah
   14005451c:	cmp    al,0x72
   14005451e:	gs jno 0x140054596
   140054521:	gs jae 0x140054598
   140054524:	gs fs push rax
   140054527:	jb     0x140054592
   140054529:	jbe    0x140054594
   14005452b:	ins    BYTE PTR es:[rdi],dx
   14005452c:	gs addr32 gs jae 0x14005456f
   140054531:	or     eax,0x2020200a
   140054536:	and    BYTE PTR [rax],ah
   140054538:	and    BYTE PTR [rax],ah
   14005453a:	and    BYTE PTR [rax],ah
   14005453c:	and    BYTE PTR [rdx+rsi*2],bh
   14005453f:	gs jno 0x1400545b7
   140054542:	gs jae 0x1400545b9
   140054545:	gs fs rex.RB js 0x1400545af
   14005454a:	movsxd esi,DWORD PTR [rbp+0x74]
   14005454d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140054554:	ins    BYTE PTR es:[rdi],dx
   140054555:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140054559:	gs ins BYTE PTR es:[rdi],dx
   14005455b:	cmp    eax,0x49736122
   140054560:	outs   dx,BYTE PTR ds:[rsi]
   140054561:	jbe    0x1400545d2
   140054563:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140054567:	and    BYTE PTR [rbp+0x69],dh
   14005456a:	movsxd esp,DWORD PTR [r11+0x65]
   14005456e:	jae    0x1400545e3
   140054570:	cmp    eax,0x75727422
   140054575:	and    ch,BYTE PTR gs:[rdi]
   140054578:	ds or  eax,0x2020200a
   14005457e:	and    BYTE PTR [rax],ah
   140054580:	and    BYTE PTR [rdi+rbp*1],bh
   140054583:	jb     0x1400545ea
   140054585:	jno    0x1400545fc
   140054587:	gs jae 0x1400545fe
   14005458a:	gs fs push rax
   14005458d:	jb     0x1400545f8
   14005458f:	jbe    0x1400545fa
   140054591:	ins    BYTE PTR es:[rdi],dx
   140054592:	gs addr32 gs jae 0x1400545d5
   140054597:	or     eax,0x3c20200a
   14005459c:	(bad)  
   14005459d:	jae    0x140054604
   14005459f:	movsxd esi,DWORD PTR [rbp+0x72]
   1400545a2:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   1400545aa:	je     0x14005461e
   1400545ac:	jne    0x140054621
   1400545ae:	je     0x1400545f9
   1400545b0:	outs   dx,BYTE PTR ds:[rsi]
   1400545b1:	outs   dx,WORD PTR ds:[rsi]
   1400545b3:	ds or  eax,0x3c0a0d0a
   1400545b9:	fs gs jae 0x140054620
   1400545bd:	jb     0x140054628
   1400545bf:	jo     0x140054635
   1400545c1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6261543e
   1400545c8:	ins    BYTE PTR es:[rdi],dx
   1400545c9:	gs je  0x1400545ec
   1400545cc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400545ce:	jo     0x140054645
   1400545d0:	je     0x1400545f2
   1400545d2:	push   rax
   1400545d3:	(bad)  
   1400545d4:	outs   dx,BYTE PTR ds:[rsi]
   1400545d5:	gs ins BYTE PTR es:[rdi],dx
   1400545d7:	cs cmp al,0x2f
   1400545da:	fs gs jae 0x140054641
   1400545de:	jb     0x140054649
   1400545e0:	jo     0x140054656
   1400545e2:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   1400545e9:	and    BYTE PTR [rip+0x65643c0a],cl        # 0x1a56981f9
   1400545ef:	jo     0x140054656
   1400545f1:	outs   dx,BYTE PTR ds:[rsi]
   1400545f2:	fs outs dx,BYTE PTR gs:[rsi]
   1400545f5:	movsxd edi,DWORD PTR [rcx+0x3e]
   1400545f8:	or     eax,0x2020200a
   1400545fd:	and    BYTE PTR [rsp+riz*2],bh
   140054600:	gs jo  0x140054668
   140054603:	outs   dx,BYTE PTR ds:[rsi]
   140054604:	fs outs dx,BYTE PTR gs:[rsi]
   140054607:	je     0x14005464a
   140054609:	jae    0x14005467e
   14005460b:	gs ins DWORD PTR es:[rdi],dx
   14005460d:	(bad)  
   14005460e:	ins    BYTE PTR es:[rdi],dx
   14005460f:	jns    0x14005464f
   140054611:	or     eax,0x2020200a
   140054616:	and    BYTE PTR [rax],ah
   140054618:	and    BYTE PTR [rax],ah
   14005461a:	and    BYTE PTR [rcx+riz*2],bh
   14005461d:	jae    0x140054692
   14005461f:	gs ins DWORD PTR es:[rdi],dx
   140054621:	(bad)  
   140054622:	ins    BYTE PTR es:[rdi],dx
   140054623:	jns    0x14005466e
   140054625:	fs outs dx,BYTE PTR gs:[rsi]
   140054628:	je     0x140054693
   14005462a:	je     0x1400546a5
   14005462c:	or     eax,0x200a0d0a
   140054631:	and    BYTE PTR [rax],ah
   140054633:	and    BYTE PTR [rax],ah
   140054635:	and    BYTE PTR [rax],ah
   140054637:	and    BYTE PTR [rax],ah
   140054639:	and    BYTE PTR [rax],ah
   14005463b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14005463f:	gs cmp eax,0x6e697722
   140054645:	xor    esi,DWORD PTR [rdx]
   140054647:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160256657
   14005464d:	and    BYTE PTR [rax],ah
   14005464f:	and    BYTE PTR [rax],ah
   140054651:	and    BYTE PTR [rax],ah
   140054653:	and    BYTE PTR [rax],ah
   140054655:	and    BYTE PTR [rsi+0x61],ch
   140054658:	ins    DWORD PTR es:[rdi],dx
   140054659:	gs cmp eax,0x63694d22
   14005465f:	jb     0x1400546d0
   140054661:	jae    0x1400546d2
   140054663:	data16 je 0x140054694
   140054666:	push   rdi
   140054667:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14005466e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140054670:	ins    DWORD PTR es:[rdi],dx
   140054671:	ins    DWORD PTR es:[rdi],dx
   140054672:	outs   dx,DWORD PTR ds:[rsi]
   140054673:	outs   dx,BYTE PTR ds:[rsi]
   140054674:	sub    eax,0x746e6f43
   140054679:	jb     0x1400546ea
   14005467b:	ins    BYTE PTR es:[rdi],dx
   14005467c:	jae    0x1400546a0
   14005467e:	or     eax,0x2020200a
   140054683:	and    BYTE PTR [rax],ah
   140054685:	and    BYTE PTR [rax],ah
   140054687:	and    BYTE PTR [rax],ah
   140054689:	and    BYTE PTR [rax],ah
   14005468b:	and    BYTE PTR [rsi+0x65],dh
   14005468e:	jb     0x140054703
   140054690:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   140054697:	xor    BYTE PTR [rsi],ch
   140054699:	xor    BYTE PTR [rsi],ch
   14005469b:	xor    BYTE PTR [rdx],ah
   14005469d:	or     eax,0x2020200a
   1400546a2:	and    BYTE PTR [rax],ah
   1400546a4:	and    BYTE PTR [rax],ah
   1400546a6:	and    BYTE PTR [rax],ah
   1400546a8:	and    BYTE PTR [rax],ah
   1400546aa:	and    BYTE PTR [rax+0x72],dh
   1400546ad:	outs   dx,DWORD PTR ds:[rsi]
   1400546ae:	movsxd esp,DWORD PTR [rbp+0x73]
   1400546b1:	jae    0x140054722
   1400546b3:	jb     0x1400546f6
   1400546b5:	jb     0x14005471a
   1400546b7:	push   0x63657469
   1400546bc:	je     0x140054733
   1400546be:	jb     0x140054725
   1400546c0:	cmp    eax,0x646d6122
   1400546c5:	ss xor al,0x22
   1400546c8:	or     eax,0x2020200a
   1400546cd:	and    BYTE PTR [rax],ah
   1400546cf:	and    BYTE PTR [rax],ah
   1400546d1:	and    BYTE PTR [rax],ah
   1400546d3:	and    BYTE PTR [rax],ah
   1400546d5:	and    BYTE PTR [rax+0x75],dh
   1400546d8:	(bad)  
   1400546d9:	ins    BYTE PTR es:[rdi],dx
   1400546da:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   1400546e1:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   1400546e5:	and    dh,BYTE PTR [rsi]
   1400546e7:	xor    eax,0x36623539
   1400546ec:	xor    al,0x31
   1400546ee:	xor    al,0x34
   1400546f0:	movsxd esp,DWORD PTR [rbx+0x66]
   1400546f3:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   1400546f7:	or     eax,0x2020200a
   1400546fc:	and    BYTE PTR [rax],ah
   1400546fe:	and    BYTE PTR [rax],ah
   140054700:	and    BYTE PTR [rax],ah
   140054702:	and    BYTE PTR [rax],ah
   140054704:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   140054708:	addr32 jne 0x14005476c
   14005470b:	addr32 gs cmp eax,0xd222a22
   140054712:	or     cl,BYTE PTR [rip+0x2020200a]        # 0x160256722
   140054718:	and    BYTE PTR [rax],ah
   14005471a:	and    BYTE PTR [rax],ah
   14005471c:	and    BYTE PTR [rdi],ch
   14005471e:	ds or  eax,0x2020200a
   140054724:	and    BYTE PTR [rdi+rbp*1],bh
   140054727:	fs gs jo 0x140054790
   14005472b:	outs   dx,BYTE PTR ds:[rsi]
   14005472c:	fs outs dx,BYTE PTR gs:[rsi]
   14005472f:	je     0x140054772
   140054731:	jae    0x1400547a6
   140054733:	gs ins DWORD PTR es:[rdi],dx
   140054735:	(bad)  
   140054736:	ins    BYTE PTR es:[rdi],dx
   140054737:	jns    0x140054777
   140054739:	or     eax,0x642f3c0a
   14005473e:	gs jo  0x1400547a6
   140054741:	outs   dx,BYTE PTR ds:[rsi]
   140054742:	fs outs dx,BYTE PTR gs:[rsi]
   140054745:	movsxd edi,DWORD PTR [rcx+0x3e]
   140054748:	or     eax,0x612f3c0a
   14005474d:	jae    0x1400547c2
   14005474f:	gs ins DWORD PTR es:[rdi],dx
   140054751:	(bad)  
   140054752:	ins    BYTE PTR es:[rdi],dx
   140054753:	jns    0x140054793
   140054755:	or     eax,0xa0d0a
   14005475a:	add    BYTE PTR [rax],al
   14005475c:	add    BYTE PTR [rax],al
   14005475e:	add    BYTE PTR [rax],al
   140054760:	sub    BYTE PTR [rax],al
   140054762:	add    BYTE PTR [rax],al
   140054764:	add    BYTE PTR [rax],al
   140054767:	add    BYTE PTR [rax+0x1000000],al
   14005476d:	add    BYTE PTR [rax],ah
   14005476f:	add    BYTE PTR [rax],al
   140054771:	add    BYTE PTR [rax],al
   140054773:	add    BYTE PTR [rax],al
   140054775:	rex.X add BYTE PTR [rax],al
	...
   140055594:	add    BYTE PTR [rax],al
   140055596:	add    BYTE PTR [rax],ch
   140055598:	add    BYTE PTR [rax],al
   14005559a:	add    BYTE PTR [rax+0x0],dh
   14005559d:	add    BYTE PTR [rax],al
   14005559f:	add    BYTE PTR [rax],0x0
   1400555a2:	add    BYTE PTR [rax-0x80000000],al
   1400555a8:	add    BYTE PTR [rax],al
   1400555aa:	add    BYTE PTR [rax-0x80000000],al
   1400555b0:	add    BYTE PTR [rax],al
   1400555b2:	add    BYTE PTR [rax-0x80000000],al
   1400555b8:	add    BYTE PTR [rax],al
   1400555ba:	add    BYTE PTR [rax-0x80000000],al
   1400555c0:	add    BYTE PTR [rax],al
   1400555c2:	add    BYTE PTR [rax-0x80000000],al
   1400555c8:	add    BYTE PTR [rax],al
   1400555ca:	add    BYTE PTR [rax-0x80000000],al
   1400555d0:	add    BYTE PTR [rax],al
   1400555d2:	add    BYTE PTR [rax-0x80000000],al
   1400555d8:	add    BYTE PTR [rax],al
   1400555da:	add    BYTE PTR [rax-0x80000000],al
   1400555e0:	add    BYTE PTR [rax],al
   1400555e2:	add    BYTE PTR [rax-0x80000000],al
   1400555e8:	add    BYTE PTR [rax],al
   1400555ea:	add    BYTE PTR [rax-0x80000000],al
   1400555f0:	add    BYTE PTR [rax],al
   1400555f2:	add    BYTE PTR [rax-0x80000000],al
   1400555f8:	add    BYTE PTR [rax],al
   1400555fa:	add    BYTE PTR [rax-0x80000000],al
   140055600:	add    BYTE PTR [rax],al
   140055602:	add    BYTE PTR [rax-0x80000000],al
   140055608:	add    BYTE PTR [rax],al
   14005560a:	add    BYTE PTR [rax-0x80000000],al
   140055610:	add    BYTE PTR [rax],al
   140055612:	add    BYTE PTR [rax-0x80000000],al
   140055618:	add    BYTE PTR [rax],al
   14005561a:	add    BYTE PTR [rax-0x80000000],al
   140055620:	add    BYTE PTR [rax],al
   140055622:	add    BYTE PTR [rax-0x80000000],al
   140055628:	add    BYTE PTR [rax],al
   14005562a:	add    BYTE PTR [rax-0x80000000],al
   140055630:	add    BYTE PTR [rax],al
   140055632:	add    BYTE PTR [rax-0x80000000],al
   140055638:	add    BYTE PTR [rax],al
   14005563a:	add    BYTE PTR [rax-0x80000000],al
   140055640:	add    BYTE PTR [rax],al
   140055642:	add    BYTE PTR [rax-0x80000000],al
   140055648:	add    BYTE PTR [rax],al
   14005564a:	add    BYTE PTR [rax-0x80000000],al
   140055650:	add    BYTE PTR [rax],al
   140055652:	add    BYTE PTR [rax-0x80000000],al
   140055658:	add    BYTE PTR [rax],al
   14005565a:	add    BYTE PTR [rax-0x80000000],al
   140055660:	add    BYTE PTR [rax],al
   140055662:	add    BYTE PTR [rax-0x80000000],al
   140055668:	add    BYTE PTR [rax],al
   14005566a:	add    BYTE PTR [rax-0x80000000],al
   140055670:	add    BYTE PTR [rax],al
   140055672:	add    BYTE PTR [rax+0x70000000],al
   140055678:	add    BYTE PTR [rax],al
   14005567a:	add    BYTE PTR [rax],ch
	...
   140055690:	add    BYTE PTR [rax],al
   140055692:	add    BYTE PTR [rax],ch
   140055694:	(bad)  
   140055695:	(bad)  
   140055696:	(bad)  
   140055697:	mov    dl,bl
   140055699:	fcmovu st,st(2)
   14005569b:	(bad)  
   14005569d:	(bad)  
   14005569e:	(bad)  
   14005569f:	(bad)  
   1400556a0:	(bad)  
   1400556a1:	(bad)  
   1400556a2:	(bad)  
   1400556a3:	(bad)  
   1400556a4:	(bad)  
   1400556a5:	(bad)  
   1400556a6:	(bad)  
   1400556a7:	(bad)  
   1400556a8:	(bad)  
   1400556a9:	(bad)  
   1400556aa:	(bad)  
   1400556ab:	(bad)  
   1400556ac:	(bad)  
   1400556ad:	(bad)  
   1400556ae:	(bad)  
   1400556af:	(bad)  
   1400556b0:	(bad)  
   1400556b1:	(bad)  
   1400556b2:	(bad)  
   1400556b3:	(bad)  
   1400556b4:	(bad)  
   1400556b5:	(bad)  
   1400556b6:	(bad)  
   1400556b7:	(bad)  
   1400556b8:	(bad)  
   1400556b9:	(bad)  
   1400556ba:	(bad)  
   1400556bb:	(bad)  
   1400556bc:	(bad)  
   1400556bd:	(bad)  
   1400556be:	(bad)  
   1400556bf:	(bad)  
   1400556c0:	(bad)  
   1400556c1:	(bad)  
   1400556c2:	(bad)  
   1400556c3:	(bad)  
   1400556c4:	(bad)  
   1400556c5:	(bad)  
   1400556c6:	(bad)  
   1400556c7:	(bad)  
   1400556c8:	(bad)  
   1400556c9:	(bad)  
   1400556ca:	(bad)  
   1400556cb:	(bad)  
   1400556cc:	(bad)  
   1400556cd:	(bad)  
   1400556ce:	(bad)  
   1400556cf:	(bad)  
   1400556d0:	(bad)  
   1400556d1:	(bad)  
   1400556d2:	(bad)  
   1400556d3:	(bad)  
   1400556d4:	(bad)  
   1400556d5:	(bad)  
   1400556d6:	(bad)  
   1400556d7:	(bad)  
   1400556d8:	(bad)  
   1400556d9:	(bad)  
   1400556da:	(bad)  
   1400556db:	(bad)  
   1400556dc:	(bad)  
   1400556dd:	(bad)  
   1400556de:	(bad)  
   1400556df:	(bad)  
   1400556e0:	(bad)  
   1400556e1:	(bad)  
   1400556e2:	(bad)  
   1400556e3:	(bad)  
   1400556e4:	(bad)  
   1400556e5:	(bad)  
   1400556e6:	(bad)  
   1400556e7:	(bad)  
   1400556e8:	(bad)  
   1400556e9:	(bad)  
   1400556ea:	(bad)  
   1400556eb:	(bad)  
   1400556ec:	(bad)  
   1400556ed:	(bad)  
   1400556ee:	(bad)  
   1400556ef:	(bad)  
   1400556f0:	(bad)  
   1400556f1:	(bad)  
   1400556f2:	(bad)  
   1400556f3:	(bad)  
   1400556f4:	(bad)  
   1400556f5:	(bad)  
   1400556f6:	(bad)  
   1400556f7:	(bad)  
   1400556f8:	(bad)  
   1400556f9:	(bad)  
   1400556fa:	(bad)  
   1400556fb:	(bad)  
   1400556fc:	(bad)  
   1400556fd:	(bad)  
   1400556fe:	(bad)  
   1400556ff:	(bad)  
   140055700:	(bad)  
   140055701:	(bad)  
   140055702:	(bad)  
   140055703:	(bad)  
   140055704:	(bad)  
   140055705:	(bad)  
   140055706:	(bad)  
   140055707:	(bad)  
   140055708:	(bad)  
   140055709:	(bad)  
   14005570a:	(bad)  
   14005570b:	(bad)  
   14005570c:	(bad)  
   14005570d:	(bad)  
   14005570e:	(bad)  
   14005570f:	(bad)  
   140055710:	(bad)  
   140055711:	(bad)  
   140055712:	(bad)  
   140055713:	(bad)  
   140055714:	(bad)  
   140055715:	(bad)  
   140055716:	(bad)  
   140055717:	(bad)  
   140055718:	(bad)  
   140055719:	(bad)  
   14005571a:	(bad)  
   14005571b:	(bad)  
   14005571c:	(bad)  
   14005571d:	(bad)  
   14005571e:	(bad)  
   14005571f:	(bad)  
   140055720:	(bad)  
   140055721:	(bad)  
   140055722:	(bad)  
   140055723:	(bad)  
   140055724:	(bad)  
   140055725:	(bad)  
   140055726:	(bad)  
   140055727:	(bad)  
   140055728:	(bad)  
   140055729:	(bad)  
   14005572a:	(bad)  
   14005572b:	(bad)  
   14005572c:	(bad)  
   14005572d:	(bad)  
   14005572e:	(bad)  
   14005572f:	(bad)  
   140055730:	(bad)  
   140055731:	(bad)  
   140055732:	(bad)  
   140055733:	(bad)  
   140055734:	(bad)  
   140055735:	(bad)  
   140055736:	(bad)  
   140055737:	(bad)  
   140055738:	(bad)  
   140055739:	(bad)  
   14005573a:	(bad)  
   14005573b:	(bad)  
   14005573c:	(bad)  
   14005573d:	(bad)  
   14005573e:	(bad)  
   14005573f:	(bad)  
   140055740:	(bad)  
   140055741:	(bad)  
   140055742:	(bad)  
   140055743:	(bad)  
   140055744:	(bad)  
   140055745:	(bad)  
   140055746:	(bad)  
   140055747:	(bad)  
   140055748:	(bad)  
   140055749:	(bad)  
   14005574a:	(bad)  
   14005574b:	(bad)  
   14005574c:	(bad)  
   14005574d:	(bad)  
   14005574e:	(bad)  
   14005574f:	(bad)  
   140055750:	(bad)  
   140055751:	(bad)  
   140055752:	(bad)  
   140055753:	(bad)  
   140055754:	(bad)  
   140055755:	(bad)  
   140055756:	(bad)  
   140055757:	(bad)  
   140055758:	(bad)  
   140055759:	(bad)  
   14005575a:	(bad)  
   14005575b:	(bad)  
   14005575c:	(bad)  
   14005575d:	(bad)  
   14005575e:	(bad)  
   14005575f:	(bad)  
   140055760:	(bad)  
   140055761:	(bad)  
   140055762:	(bad)  
   140055763:	(bad)  
   140055764:	(bad)  
   140055765:	(bad)  
   140055766:	(bad)  
   140055767:	(bad)  
   140055768:	(bad)  
   140055769:	(bad)  
   14005576a:	(bad)  
   14005576b:	(bad)  
   14005576c:	(bad)  
   14005576d:	(bad)  
   14005576e:	(bad)  
   14005576f:	(bad)  
   140055770:	(bad)  
   140055771:	(bad)  
   140055772:	(bad)  
   140055773:	(bad)  
   140055774:	fcmovu st,st(2)
   140055776:	fcmovu st,st(7)
   140055778:	(bad)  
   140055779:	(bad)  
   14005577a:	(bad)  
   14005577b:	mov    BYTE PTR [rax],al
   14005577d:	add    BYTE PTR [rax],al
   14005577f:	sub    BYTE PTR [rax],al
	...
   140055791:	add    BYTE PTR [rax],al
   140055793:	jo     0x14005576f
   140055795:	fcmovu st,st(2)
   140055797:	(bad)  
   140055799:	(bad)  
   14005579a:	(bad)  
   14005579b:	(bad)  
   14005579c:	(bad)  
   14005579d:	(bad)  
   14005579e:	(bad)  
   14005579f:	(bad)  
   1400557a0:	(bad)  
   1400557a1:	(bad)  
   1400557a2:	(bad)  
   1400557a3:	(bad)  
   1400557a4:	(bad)  
   1400557a5:	(bad)  
   1400557a6:	(bad)  
   1400557a7:	(bad)  
   1400557a8:	(bad)  
   1400557a9:	(bad)  
   1400557aa:	(bad)  
   1400557ab:	(bad)  
   1400557ac:	(bad)  
   1400557ad:	(bad)  
   1400557ae:	(bad)  
   1400557af:	(bad)  
   1400557b0:	(bad)  
   1400557b1:	(bad)  
   1400557b2:	(bad)  
   1400557b3:	(bad)  
   1400557b4:	(bad)  
   1400557b5:	(bad)  
   1400557b6:	(bad)  
   1400557b7:	(bad)  
   1400557b8:	(bad)  
   1400557b9:	(bad)  
   1400557ba:	(bad)  
   1400557bb:	(bad)  
   1400557bc:	(bad)  
   1400557bd:	(bad)  
   1400557be:	(bad)  
   1400557bf:	(bad)  
   1400557c0:	(bad)  
   1400557c1:	(bad)  
   1400557c2:	(bad)  
   1400557c3:	(bad)  
   1400557c4:	(bad)  
   1400557c5:	(bad)  
   1400557c6:	(bad)  
   1400557c7:	(bad)  
   1400557c8:	(bad)  
   1400557c9:	(bad)  
   1400557ca:	(bad)  
   1400557cb:	(bad)  
   1400557cc:	(bad)  
   1400557cd:	(bad)  
   1400557ce:	(bad)  
   1400557cf:	(bad)  
   1400557d0:	(bad)  
   1400557d1:	(bad)  
   1400557d2:	(bad)  
   1400557d3:	(bad)  
   1400557d4:	(bad)  
   1400557d5:	(bad)  
   1400557d6:	(bad)  
   1400557d7:	(bad)  
   1400557d8:	(bad)  
   1400557d9:	(bad)  
   1400557da:	(bad)  
   1400557db:	(bad)  
   1400557dc:	(bad)  
   1400557dd:	(bad)  
   1400557de:	(bad)  
   1400557df:	(bad)  
   1400557e0:	(bad)  
   1400557e1:	(bad)  
   1400557e2:	(bad)  
   1400557e3:	(bad)  
   1400557e4:	(bad)  
   1400557e5:	(bad)  
   1400557e6:	(bad)  
   1400557e7:	(bad)  
   1400557e8:	(bad)  
   1400557e9:	(bad)  
   1400557ea:	(bad)  
   1400557eb:	(bad)  
   1400557ec:	(bad)  
   1400557ed:	(bad)  
   1400557ee:	(bad)  
   1400557ef:	(bad)  
   1400557f0:	(bad)  
   1400557f1:	(bad)  
   1400557f2:	(bad)  
   1400557f3:	(bad)  
   1400557f4:	(bad)  
   1400557f5:	(bad)  
   1400557f6:	(bad)  
   1400557f7:	(bad)  
   1400557f8:	(bad)  
   1400557f9:	(bad)  
   1400557fa:	(bad)  
   1400557fb:	(bad)  
   1400557fc:	(bad)  
   1400557fd:	(bad)  
   1400557fe:	(bad)  
   1400557ff:	(bad)  
   140055800:	(bad)  
   140055801:	(bad)  
   140055802:	(bad)  
   140055803:	(bad)  
   140055804:	(bad)  
   140055805:	(bad)  
   140055806:	(bad)  
   140055807:	(bad)  
   140055808:	(bad)  
   140055809:	(bad)  
   14005580a:	(bad)  
   14005580b:	(bad)  
   14005580c:	(bad)  
   14005580d:	(bad)  
   14005580e:	(bad)  
   14005580f:	(bad)  
   140055810:	(bad)  
   140055811:	(bad)  
   140055812:	(bad)  
   140055813:	(bad)  
   140055814:	(bad)  
   140055815:	(bad)  
   140055816:	(bad)  
   140055817:	(bad)  
   140055818:	(bad)  
   140055819:	(bad)  
   14005581a:	(bad)  
   14005581b:	(bad)  
   14005581c:	(bad)  
   14005581d:	(bad)  
   14005581e:	(bad)  
   14005581f:	(bad)  
   140055820:	(bad)  
   140055821:	(bad)  
   140055822:	(bad)  
   140055823:	(bad)  
   140055824:	(bad)  
   140055825:	(bad)  
   140055826:	(bad)  
   140055827:	(bad)  
   140055828:	(bad)  
   140055829:	(bad)  
   14005582a:	(bad)  
   14005582b:	(bad)  
   14005582c:	(bad)  
   14005582d:	(bad)  
   14005582e:	(bad)  
   14005582f:	(bad)  
   140055830:	(bad)  
   140055831:	(bad)  
   140055832:	(bad)  
   140055833:	(bad)  
   140055834:	(bad)  
   140055835:	(bad)  
   140055836:	(bad)  
   140055837:	(bad)  
   140055838:	(bad)  
   140055839:	(bad)  
   14005583a:	(bad)  
   14005583b:	(bad)  
   14005583c:	(bad)  
   14005583d:	(bad)  
   14005583e:	(bad)  
   14005583f:	(bad)  
   140055840:	(bad)  
   140055841:	(bad)  
   140055842:	(bad)  
   140055843:	(bad)  
   140055844:	(bad)  
   140055845:	(bad)  
   140055846:	(bad)  
   140055847:	(bad)  
   140055848:	(bad)  
   140055849:	(bad)  
   14005584a:	(bad)  
   14005584b:	(bad)  
   14005584c:	(bad)  
   14005584d:	(bad)  
   14005584e:	(bad)  
   14005584f:	(bad)  
   140055850:	(bad)  
   140055851:	(bad)  
   140055852:	(bad)  
   140055853:	(bad)  
   140055854:	(bad)  
   140055855:	(bad)  
   140055856:	(bad)  
   140055857:	(bad)  
   140055858:	(bad)  
   140055859:	(bad)  
   14005585a:	(bad)  
   14005585b:	(bad)  
   14005585c:	(bad)  
   14005585d:	(bad)  
   14005585e:	(bad)  
   14005585f:	(bad)  
   140055860:	(bad)  
   140055861:	(bad)  
   140055862:	(bad)  
   140055863:	(bad)  
   140055864:	(bad)  
   140055865:	(bad)  
   140055866:	(bad)  
   140055867:	(bad)  
   140055868:	(bad)  
   140055869:	(bad)  
   14005586a:	(bad)  
   14005586b:	(bad)  
   14005586c:	(bad)  
   14005586d:	(bad)  
   14005586e:	(bad)  
   14005586f:	(bad)  
   140055870:	(bad)  
   140055871:	(bad)  
   140055872:	(bad)  
   140055873:	(bad)  
   140055874:	(bad)  
   140055875:	(bad)  
   140055876:	(bad)  
   140055877:	(bad)  
   140055878:	fcmovu st,st(2)
   14005587a:	fcmovu st,st(7)
   14005587c:	add    BYTE PTR [rax],al
   14005587e:	add    BYTE PTR [rax+0x0],dh
	...
   140055891:	add    BYTE PTR [rax],al
   140055893:	cmp    bh,0xff
   140055896:	(bad)  
   140055897:	(bad)  
   140055898:	(bad)  
   140055899:	(bad)  
   14005589a:	(bad)  
   14005589b:	(bad)  
   14005589c:	(bad)  
   14005589d:	(bad)  
   14005589e:	(bad)  
   14005589f:	(bad)  
   1400558a0:	(bad)  
   1400558a1:	(bad)  
   1400558a2:	(bad)  
   1400558a3:	(bad)  
   1400558a4:	(bad)  
   1400558a5:	(bad)  
   1400558a6:	(bad)  
   1400558a7:	(bad)  
   1400558a8:	(bad)  
   1400558a9:	(bad)  
   1400558aa:	(bad)  
   1400558ab:	(bad)  
   1400558ac:	(bad)  
   1400558ad:	(bad)  
   1400558ae:	(bad)  
   1400558af:	(bad)  
   1400558b0:	(bad)  
   1400558b1:	(bad)  
   1400558b2:	(bad)  
   1400558b3:	(bad)  
   1400558b4:	(bad)  
   1400558b5:	(bad)  
   1400558b6:	(bad)  
   1400558b7:	(bad)  
   1400558b8:	(bad)  
   1400558b9:	(bad)  
   1400558ba:	(bad)  
   1400558bb:	(bad)  
   1400558bc:	(bad)  
   1400558bd:	(bad)  
   1400558be:	(bad)  
   1400558bf:	(bad)  
   1400558c0:	(bad)  
   1400558c1:	(bad)  
   1400558c2:	(bad)  
   1400558c3:	(bad)  
   1400558c4:	(bad)  
   1400558c5:	(bad)  
   1400558c6:	(bad)  
   1400558c7:	(bad)  
   1400558c8:	(bad)  
   1400558c9:	(bad)  
   1400558ca:	(bad)  
   1400558cb:	(bad)  
   1400558cc:	(bad)  
   1400558cd:	(bad)  
   1400558ce:	(bad)  
   1400558cf:	(bad)  
   1400558d0:	(bad)  
   1400558d1:	(bad)  
   1400558d2:	(bad)  
   1400558d3:	(bad)  
   1400558d4:	(bad)  
   1400558d5:	(bad)  
   1400558d6:	(bad)  
   1400558d7:	(bad)  
   1400558d8:	(bad)  
   1400558d9:	(bad)  
   1400558da:	(bad)  
   1400558db:	(bad)  
   1400558dc:	(bad)  
   1400558dd:	(bad)  
   1400558de:	(bad)  
   1400558df:	(bad)  
   1400558e0:	(bad)  
   1400558e1:	(bad)  
   1400558e2:	(bad)  
   1400558e3:	(bad)  
   1400558e4:	(bad)  
   1400558e5:	(bad)  
   1400558e6:	(bad)  
   1400558e7:	(bad)  
   1400558e8:	(bad)  
   1400558e9:	(bad)  
   1400558ea:	(bad)  
   1400558eb:	(bad)  
   1400558ec:	(bad)  
   1400558ed:	(bad)  
   1400558ee:	(bad)  
   1400558ef:	(bad)  
   1400558f0:	(bad)  
   1400558f1:	(bad)  
   1400558f2:	(bad)  
   1400558f3:	(bad)  
   1400558f4:	(bad)  
   1400558f5:	(bad)  
   1400558f6:	(bad)  
   1400558f7:	(bad)  
   1400558f8:	(bad)  
   1400558f9:	(bad)  
   1400558fa:	(bad)  
   1400558fb:	(bad)  
   1400558fc:	(bad)  
   1400558fd:	(bad)  
   1400558fe:	(bad)  
   1400558ff:	(bad)  
   140055900:	(bad)  
   140055901:	(bad)  
   140055902:	(bad)  
   140055903:	(bad)  
   140055904:	(bad)  
   140055905:	(bad)  
   140055906:	(bad)  
   140055907:	(bad)  
   140055908:	(bad)  
   140055909:	(bad)  
   14005590a:	(bad)  
   14005590b:	(bad)  
   14005590c:	(bad)  
   14005590d:	(bad)  
   14005590e:	(bad)  
   14005590f:	(bad)  
   140055910:	(bad)  
   140055911:	(bad)  
   140055912:	(bad)  
   140055913:	(bad)  
   140055914:	(bad)  
   140055915:	(bad)  
   140055916:	(bad)  
   140055917:	(bad)  
   140055918:	(bad)  
   140055919:	(bad)  
   14005591a:	(bad)  
   14005591b:	(bad)  
   14005591c:	(bad)  
   14005591d:	(bad)  
   14005591e:	(bad)  
   14005591f:	(bad)  
   140055920:	(bad)  
   140055921:	(bad)  
   140055922:	(bad)  
   140055923:	(bad)  
   140055924:	(bad)  
   140055925:	(bad)  
   140055926:	(bad)  
   140055927:	(bad)  
   140055928:	(bad)  
   140055929:	(bad)  
   14005592a:	(bad)  
   14005592b:	(bad)  
   14005592c:	(bad)  
   14005592d:	(bad)  
   14005592e:	(bad)  
   14005592f:	(bad)  
   140055930:	(bad)  
   140055931:	(bad)  
   140055932:	(bad)  
   140055933:	(bad)  
   140055934:	(bad)  
   140055935:	(bad)  
   140055936:	(bad)  
   140055937:	(bad)  
   140055938:	(bad)  
   140055939:	(bad)  
   14005593a:	(bad)  
   14005593b:	(bad)  
   14005593c:	(bad)  
   14005593d:	(bad)  
   14005593e:	(bad)  
   14005593f:	(bad)  
   140055940:	(bad)  
   140055941:	(bad)  
   140055942:	(bad)  
   140055943:	(bad)  
   140055944:	(bad)  
   140055945:	(bad)  
   140055946:	(bad)  
   140055947:	(bad)  
   140055948:	(bad)  
   140055949:	(bad)  
   14005594a:	(bad)  
   14005594b:	(bad)  
   14005594c:	(bad)  
   14005594d:	(bad)  
   14005594e:	(bad)  
   14005594f:	(bad)  
   140055950:	(bad)  
   140055951:	(bad)  
   140055952:	(bad)  
   140055953:	(bad)  
   140055954:	(bad)  
   140055955:	(bad)  
   140055956:	(bad)  
   140055957:	(bad)  
   140055958:	(bad)  
   140055959:	(bad)  
   14005595a:	(bad)  
   14005595b:	(bad)  
   14005595c:	(bad)  
   14005595d:	(bad)  
   14005595e:	(bad)  
   14005595f:	(bad)  
   140055960:	(bad)  
   140055961:	(bad)  
   140055962:	(bad)  
   140055963:	(bad)  
   140055964:	(bad)  
   140055965:	(bad)  
   140055966:	(bad)  
   140055967:	(bad)  
   140055968:	(bad)  
   140055969:	(bad)  
   14005596a:	(bad)  
   14005596b:	(bad)  
   14005596c:	(bad)  
   14005596d:	(bad)  
   14005596e:	(bad)  
   14005596f:	(bad)  
   140055970:	(bad)  
   140055971:	(bad)  
   140055972:	(bad)  
   140055973:	(bad)  
   140055974:	(bad)  
   140055975:	(bad)  
   140055976:	(bad)  
   140055977:	(bad)  
   140055978:	(bad)  
   140055979:	(bad)  
   14005597a:	(bad)  
   14005597b:	(bad)  
   14005597c:	cmp    BYTE PTR [rax],bh
   14005597e:	cmp    BYTE PTR [rax+0x0],dl
	...
   140055990:	add    BYTE PTR [rax],al
   140055992:	add    BYTE PTR [rax-0x1],al
   140055998:	(bad)  
   140055999:	(bad)  
   14005599a:	(bad)  
   14005599b:	(bad)  
   14005599c:	(bad)  
   14005599d:	(bad)  
   14005599e:	(bad)  
   14005599f:	(bad)  
   1400559a0:	(bad)  
   1400559a1:	(bad)  
   1400559a2:	(bad)  
   1400559a3:	(bad)  
   1400559a4:	(bad)  
   1400559a5:	(bad)  
   1400559a6:	(bad)  
   1400559a7:	(bad)  
   1400559a8:	(bad)  
   1400559a9:	(bad)  
   1400559aa:	(bad)  
   1400559ab:	(bad)  
   1400559ac:	(bad)  
   1400559ad:	(bad)  
   1400559ae:	(bad)  
   1400559af:	(bad)  
   1400559b0:	(bad)  
   1400559b1:	(bad)  
   1400559b2:	(bad)  
   1400559b3:	(bad)  
   1400559b4:	(bad)  
   1400559b5:	(bad)  
   1400559b6:	(bad)  
   1400559b7:	(bad)  
   1400559b8:	(bad)  
   1400559b9:	(bad)  
   1400559ba:	(bad)  
   1400559bb:	(bad)  
   1400559bc:	(bad)  
   1400559bd:	(bad)  
   1400559be:	(bad)  
   1400559bf:	(bad)  
   1400559c0:	(bad)  
   1400559c1:	(bad)  
   1400559c2:	(bad)  
   1400559c3:	(bad)  
   1400559c4:	(bad)  
   1400559c5:	(bad)  
   1400559c6:	(bad)  
   1400559c7:	(bad)  
   1400559c8:	(bad)  
   1400559c9:	(bad)  
   1400559ca:	(bad)  
   1400559cb:	(bad)  
   1400559cc:	(bad)  
   1400559cd:	(bad)  
   1400559ce:	(bad)  
   1400559cf:	(bad)  
   1400559d0:	(bad)  
   1400559d1:	(bad)  
   1400559d2:	(bad)  
   1400559d3:	(bad)  
   1400559d4:	(bad)  
   1400559d5:	(bad)  
   1400559d6:	(bad)  
   1400559d7:	(bad)  
   1400559d8:	(bad)  
   1400559d9:	(bad)  
   1400559da:	(bad)  
   1400559db:	(bad)  
   1400559dc:	(bad)  
   1400559dd:	(bad)  
   1400559de:	(bad)  
   1400559df:	(bad)  
   1400559e0:	(bad)  
   1400559e1:	(bad)  
   1400559e2:	(bad)  
   1400559e3:	(bad)  
   1400559e4:	(bad)  
   1400559e5:	(bad)  
   1400559e6:	(bad)  
   1400559e7:	(bad)  
   1400559e8:	(bad)  
   1400559e9:	(bad)  
   1400559ea:	(bad)  
   1400559eb:	(bad)  
   1400559ec:	(bad)  
   1400559ed:	(bad)  
   1400559ee:	(bad)  
   1400559ef:	(bad)  
   1400559f0:	(bad)  
   1400559f1:	(bad)  
   1400559f2:	(bad)  
   1400559f3:	(bad)  
   1400559f4:	(bad)  
   1400559f5:	(bad)  
   1400559f6:	(bad)  
   1400559f7:	(bad)  
   1400559f8:	(bad)  
   1400559f9:	(bad)  
   1400559fa:	(bad)  
   1400559fb:	(bad)  
   1400559fc:	(bad)  
   1400559fd:	(bad)  
   1400559fe:	(bad)  
   1400559ff:	(bad)  
   140055a00:	(bad)  
   140055a01:	(bad)  
   140055a02:	(bad)  
   140055a03:	(bad)  
   140055a04:	(bad)  
   140055a05:	(bad)  
   140055a06:	(bad)  
   140055a07:	(bad)  
   140055a08:	(bad)  
   140055a09:	(bad)  
   140055a0a:	(bad)  
   140055a0b:	(bad)  
   140055a0c:	(bad)  
   140055a0d:	(bad)  
   140055a0e:	(bad)  
   140055a0f:	(bad)  
   140055a10:	(bad)  
   140055a11:	(bad)  
   140055a12:	(bad)  
   140055a13:	(bad)  
   140055a14:	(bad)  
   140055a15:	(bad)  
   140055a16:	(bad)  
   140055a17:	(bad)  
   140055a18:	(bad)  
   140055a19:	(bad)  
   140055a1a:	(bad)  
   140055a1b:	(bad)  
   140055a1c:	(bad)  
   140055a1d:	(bad)  
   140055a1e:	(bad)  
   140055a1f:	(bad)  
   140055a20:	(bad)  
   140055a21:	(bad)  
   140055a22:	(bad)  
   140055a23:	(bad)  
   140055a24:	(bad)  
   140055a25:	(bad)  
   140055a26:	(bad)  
   140055a27:	(bad)  
   140055a28:	(bad)  
   140055a29:	(bad)  
   140055a2a:	(bad)  
   140055a2b:	(bad)  
   140055a2c:	(bad)  
   140055a2d:	(bad)  
   140055a2e:	(bad)  
   140055a2f:	(bad)  
   140055a30:	(bad)  
   140055a31:	(bad)  
   140055a32:	(bad)  
   140055a33:	(bad)  
   140055a34:	(bad)  
   140055a35:	(bad)  
   140055a36:	(bad)  
   140055a37:	(bad)  
   140055a38:	(bad)  
   140055a39:	(bad)  
   140055a3a:	(bad)  
   140055a3b:	(bad)  
   140055a3c:	(bad)  
   140055a3d:	(bad)  
   140055a3e:	(bad)  
   140055a3f:	(bad)  
   140055a40:	(bad)  
   140055a41:	(bad)  
   140055a42:	(bad)  
   140055a43:	(bad)  
   140055a44:	(bad)  
   140055a45:	(bad)  
   140055a46:	(bad)  
   140055a47:	(bad)  
   140055a48:	(bad)  
   140055a49:	(bad)  
   140055a4a:	(bad)  
   140055a4b:	(bad)  
   140055a4c:	(bad)  
   140055a4d:	(bad)  
   140055a4e:	(bad)  
   140055a4f:	(bad)  
   140055a50:	(bad)  
   140055a51:	(bad)  
   140055a52:	(bad)  
   140055a53:	(bad)  
   140055a54:	(bad)  
   140055a55:	(bad)  
   140055a56:	(bad)  
   140055a57:	(bad)  
   140055a58:	(bad)  
   140055a59:	(bad)  
   140055a5a:	(bad)  
   140055a5b:	(bad)  
   140055a5c:	(bad)  
   140055a5d:	(bad)  
   140055a5e:	(bad)  
   140055a5f:	(bad)  
   140055a60:	(bad)  
   140055a61:	(bad)  
   140055a62:	(bad)  
   140055a63:	(bad)  
   140055a64:	(bad)  
   140055a65:	(bad)  
   140055a66:	(bad)  
   140055a67:	(bad)  
   140055a68:	(bad)  
   140055a69:	(bad)  
   140055a6a:	(bad)  
   140055a6b:	(bad)  
   140055a6c:	(bad)  
   140055a6d:	(bad)  
   140055a6e:	(bad)  
   140055a6f:	(bad)  
   140055a70:	(bad)  
   140055a71:	(bad)  
   140055a72:	(bad)  
   140055a73:	(bad)  
   140055a74:	(bad)  
   140055a75:	(bad)  
   140055a76:	(bad)  
   140055a77:	(bad)  
   140055a78:	(bad)  
   140055a79:	(bad)  
   140055a7a:	(bad)  
   140055a7b:	inc    DWORD PTR [rax]
   140055a7d:	add    BYTE PTR [rax],al
   140055a7f:	add    BYTE PTR [rax],0x0
	...
   140055a92:	add    BYTE PTR [rax-0x1],al
   140055a98:	(bad)  
   140055a99:	(bad)  
   140055a9a:	(bad)  
   140055a9b:	(bad)  
   140055a9c:	(bad)  
   140055a9d:	(bad)  
   140055a9e:	(bad)  
   140055a9f:	(bad)  
   140055aa0:	(bad)  
   140055aa1:	(bad)  
   140055aa2:	(bad)  
   140055aa3:	inc    DWORD PTR [rax]
   140055aa5:	add    BYTE PTR [rax],al
   140055aa7:	add    BYTE PTR [rax],0x0
   140055aaa:	add    BYTE PTR [rax-0x80000000],al
   140055ab0:	add    BYTE PTR [rax],al
   140055ab2:	add    BYTE PTR [rax-0x80000000],al
   140055ab8:	add    BYTE PTR [rax],al
   140055aba:	add    BYTE PTR [rax-0x80000000],al
   140055ac0:	add    BYTE PTR [rax],al
   140055ac2:	add    BYTE PTR [rax-0x80000000],al
   140055ac8:	add    BYTE PTR [rax],al
   140055aca:	add    BYTE PTR [rax-0x80000000],al
   140055ad0:	add    BYTE PTR [rax],al
   140055ad2:	add    BYTE PTR [rax-0x80000000],al
   140055ad8:	add    BYTE PTR [rax],al
   140055ada:	add    BYTE PTR [rax-0x80000000],al
   140055ae0:	add    BYTE PTR [rax],al
   140055ae2:	add    BYTE PTR [rax-0x80000000],al
   140055ae8:	add    BYTE PTR [rax],al
   140055aea:	add    BYTE PTR [rax-0x80000000],al
   140055af0:	add    BYTE PTR [rax],al
   140055af2:	add    BYTE PTR [rax-0x80000000],al
   140055af8:	add    BYTE PTR [rax],al
   140055afa:	add    BYTE PTR [rax-0x80000000],al
   140055b00:	add    BYTE PTR [rax],al
   140055b02:	add    BYTE PTR [rax-0x80000000],al
   140055b08:	add    BYTE PTR [rax],al
   140055b0a:	add    BYTE PTR [rax-0x80000000],al
   140055b10:	add    BYTE PTR [rax],al
   140055b12:	add    BYTE PTR [rax-0x80000000],al
   140055b18:	add    BYTE PTR [rax],al
   140055b1a:	add    BYTE PTR [rax-0x80000000],al
   140055b20:	add    BYTE PTR [rax],al
   140055b22:	add    BYTE PTR [rax-0x80000000],al
   140055b28:	add    BYTE PTR [rax],al
   140055b2a:	add    BYTE PTR [rax-0x80000000],al
   140055b30:	add    BYTE PTR [rax],al
   140055b32:	add    BYTE PTR [rax-0x80000000],al
   140055b38:	add    BYTE PTR [rax],al
   140055b3a:	add    BYTE PTR [rax-0x80000000],al
   140055b40:	add    BYTE PTR [rax],al
   140055b42:	add    BYTE PTR [rax-0x80000000],al
   140055b48:	add    BYTE PTR [rax],al
   140055b4a:	add    BYTE PTR [rax-0x80000000],al
   140055b50:	add    BYTE PTR [rax],al
   140055b52:	add    BYTE PTR [rax-0x80000000],al
   140055b58:	add    BYTE PTR [rax],al
   140055b5a:	add    BYTE PTR [rax-0x80000000],al
   140055b60:	add    BYTE PTR [rax],al
   140055b62:	add    BYTE PTR [rax-0x80000000],al
   140055b68:	add    BYTE PTR [rax],al
   140055b6a:	add    BYTE PTR [rax-0x1],al
   140055b70:	(bad)  
   140055b71:	(bad)  
   140055b72:	(bad)  
   140055b73:	(bad)  
   140055b74:	(bad)  
   140055b75:	(bad)  
   140055b76:	(bad)  
   140055b77:	(bad)  
   140055b78:	(bad)  
   140055b79:	(bad)  
   140055b7a:	(bad)  
   140055b7b:	inc    DWORD PTR [rax]
   140055b7d:	add    BYTE PTR [rax],al
   140055b7f:	add    BYTE PTR [rax],0x0
	...
   140055b92:	add    BYTE PTR [rax-0x1],al
   140055b98:	(bad)  
   140055b99:	(bad)  
   140055b9a:	(bad)  
   140055b9b:	(bad)  
   140055b9c:	(bad)  
   140055b9d:	(bad)  
   140055b9e:	(bad)  
   140055b9f:	(bad)  
   140055ba0:	(bad)  
   140055ba1:	(bad)  
   140055ba2:	(bad)  
   140055ba3:	inc    DWORD PTR [rax]
   140055ba5:	add    BYTE PTR [rax],al
   140055ba7:	add    BYTE PTR [rax],0x0
   140055baa:	add    BYTE PTR [rax-0x80000000],al
   140055bb0:	add    BYTE PTR [rax],al
   140055bb2:	add    BYTE PTR [rax-0x80000000],al
   140055bb8:	add    BYTE PTR [rax],al
   140055bba:	add    BYTE PTR [rax-0x80000000],al
   140055bc0:	add    BYTE PTR [rax],al
   140055bc2:	add    BYTE PTR [rax-0x80000000],al
   140055bc8:	add    BYTE PTR [rax],al
   140055bca:	add    BYTE PTR [rax-0x80000000],al
   140055bd0:	add    BYTE PTR [rax],al
   140055bd2:	add    BYTE PTR [rax-0x80000000],al
   140055bd8:	add    BYTE PTR [rax],al
   140055bda:	add    BYTE PTR [rax-0x80000000],al
   140055be0:	add    BYTE PTR [rax],al
   140055be2:	add    BYTE PTR [rax-0x80000000],al
   140055be8:	add    BYTE PTR [rax],al
   140055bea:	add    BYTE PTR [rax-0x80000000],al
   140055bf0:	add    BYTE PTR [rax],al
   140055bf2:	add    BYTE PTR [rax-0x80000000],al
   140055bf8:	add    BYTE PTR [rax],al
   140055bfa:	add    BYTE PTR [rax-0x80000000],al
   140055c00:	add    BYTE PTR [rax],al
   140055c02:	add    BYTE PTR [rax-0x80000000],al
   140055c08:	add    BYTE PTR [rax],al
   140055c0a:	add    BYTE PTR [rax-0x80000000],al
   140055c10:	add    BYTE PTR [rax],al
   140055c12:	add    BYTE PTR [rax-0x80000000],al
   140055c18:	add    BYTE PTR [rax],al
   140055c1a:	add    BYTE PTR [rax-0x80000000],al
   140055c20:	add    BYTE PTR [rax],al
   140055c22:	add    BYTE PTR [rax-0x80000000],al
   140055c28:	add    BYTE PTR [rax],al
   140055c2a:	add    BYTE PTR [rax-0x80000000],al
   140055c30:	add    BYTE PTR [rax],al
   140055c32:	add    BYTE PTR [rax-0x80000000],al
   140055c38:	add    BYTE PTR [rax],al
   140055c3a:	add    BYTE PTR [rax-0x80000000],al
   140055c40:	add    BYTE PTR [rax],al
   140055c42:	add    BYTE PTR [rax-0x80000000],al
   140055c48:	add    BYTE PTR [rax],al
   140055c4a:	add    BYTE PTR [rax-0x80000000],al
   140055c50:	add    BYTE PTR [rax],al
   140055c52:	add    BYTE PTR [rax-0x80000000],al
   140055c58:	add    BYTE PTR [rax],al
   140055c5a:	add    BYTE PTR [rax-0x80000000],al
   140055c60:	add    BYTE PTR [rax],al
   140055c62:	add    BYTE PTR [rax-0x80000000],al
   140055c68:	add    BYTE PTR [rax],al
   140055c6a:	add    BYTE PTR [rax-0x1],al
   140055c70:	(bad)  
   140055c71:	(bad)  
   140055c72:	(bad)  
   140055c73:	(bad)  
   140055c74:	(bad)  
   140055c75:	(bad)  
   140055c76:	(bad)  
   140055c77:	(bad)  
   140055c78:	(bad)  
   140055c79:	(bad)  
   140055c7a:	(bad)  
   140055c7b:	inc    DWORD PTR [rax]
   140055c7d:	add    BYTE PTR [rax],al
   140055c7f:	add    BYTE PTR [rax],0x0
	...
   140055c92:	add    BYTE PTR [rax-0x1],al
   140055c98:	(bad)  
   140055c99:	(bad)  
   140055c9a:	(bad)  
   140055c9b:	(bad)  
   140055c9c:	(bad)  
   140055c9d:	(bad)  
   140055c9e:	(bad)  
   140055c9f:	(bad)  
   140055ca0:	(bad)  
   140055ca1:	(bad)  
   140055ca2:	(bad)  
   140055ca3:	inc    DWORD PTR [rax]
   140055ca5:	add    BYTE PTR [rax],al
   140055ca7:	add    BYTE PTR [rax],0x0
   140055caa:	add    BYTE PTR [rax-0x1],al
   140055cb0:	(bad)  
   140055cb1:	(bad)  
   140055cb2:	(bad)  
   140055cb3:	(bad)  
   140055cb4:	(bad)  
   140055cb5:	(bad)  
   140055cb6:	(bad)  
   140055cb7:	(bad)  
   140055cb8:	(bad)  
   140055cb9:	(bad)  
   140055cba:	(bad)  
   140055cbb:	(bad)  
   140055cbc:	(bad)  
   140055cbd:	(bad)  
   140055cbe:	(bad)  
   140055cbf:	(bad)  
   140055cc0:	(bad)  
   140055cc1:	(bad)  
   140055cc2:	(bad)  
   140055cc3:	(bad)  
   140055cc4:	(bad)  
   140055cc5:	(bad)  
   140055cc6:	(bad)  
   140055cc7:	(bad)  
   140055cc8:	(bad)  
   140055cc9:	(bad)  
   140055cca:	(bad)  
   140055ccb:	inc    DWORD PTR [rax]
   140055ccd:	add    BYTE PTR [rax],al
   140055ccf:	add    BYTE PTR [rax],0x0
   140055cd2:	add    BYTE PTR [rax-0x1],al
   140055cd8:	(bad)  
   140055cd9:	(bad)  
   140055cda:	(bad)  
   140055cdb:	(bad)  
   140055cdc:	(bad)  
   140055cdd:	(bad)  
   140055cde:	(bad)  
   140055cdf:	(bad)  
   140055ce0:	(bad)  
   140055ce1:	(bad)  
   140055ce2:	(bad)  
   140055ce3:	(bad)  
   140055ce4:	(bad)  
   140055ce5:	(bad)  
   140055ce6:	(bad)  
   140055ce7:	(bad)  
   140055ce8:	(bad)  
   140055ce9:	(bad)  
   140055cea:	(bad)  
   140055ceb:	(bad)  
   140055cec:	(bad)  
   140055ced:	(bad)  
   140055cee:	(bad)  
   140055cef:	(bad)  
   140055cf0:	(bad)  
   140055cf1:	(bad)  
   140055cf2:	(bad)  
   140055cf3:	(bad)  
   140055cf4:	(bad)  
   140055cf5:	(bad)  
   140055cf6:	(bad)  
   140055cf7:	(bad)  
   140055cf8:	(bad)  
   140055cf9:	(bad)  
   140055cfa:	(bad)  
   140055cfb:	(bad)  
   140055cfc:	(bad)  
   140055cfd:	(bad)  
   140055cfe:	(bad)  
   140055cff:	(bad)  
   140055d00:	(bad)  
   140055d01:	(bad)  
   140055d02:	(bad)  
   140055d03:	(bad)  
   140055d04:	(bad)  
   140055d05:	(bad)  
   140055d06:	(bad)  
   140055d07:	(bad)  
   140055d08:	(bad)  
   140055d09:	(bad)  
   140055d0a:	(bad)  
   140055d0b:	(bad)  
   140055d0c:	(bad)  
   140055d0d:	(bad)  
   140055d0e:	(bad)  
   140055d0f:	(bad)  
   140055d10:	(bad)  
   140055d11:	(bad)  
   140055d12:	(bad)  
   140055d13:	(bad)  
   140055d14:	(bad)  
   140055d15:	(bad)  
   140055d16:	(bad)  
   140055d17:	(bad)  
   140055d18:	(bad)  
   140055d19:	(bad)  
   140055d1a:	(bad)  
   140055d1b:	(bad)  
   140055d1c:	(bad)  
   140055d1d:	(bad)  
   140055d1e:	(bad)  
   140055d1f:	(bad)  
   140055d20:	(bad)  
   140055d21:	(bad)  
   140055d22:	(bad)  
   140055d23:	(bad)  
   140055d24:	(bad)  
   140055d25:	(bad)  
   140055d26:	(bad)  
   140055d27:	(bad)  
   140055d28:	(bad)  
   140055d29:	(bad)  
   140055d2a:	(bad)  
   140055d2b:	(bad)  
   140055d2c:	(bad)  
   140055d2d:	(bad)  
   140055d2e:	(bad)  
   140055d2f:	(bad)  
   140055d30:	(bad)  
   140055d31:	(bad)  
   140055d32:	(bad)  
   140055d33:	(bad)  
   140055d34:	(bad)  
   140055d35:	(bad)  
   140055d36:	(bad)  
   140055d37:	(bad)  
   140055d38:	(bad)  
   140055d39:	(bad)  
   140055d3a:	(bad)  
   140055d3b:	inc    DWORD PTR [rax]
   140055d3d:	add    BYTE PTR [rax],al
   140055d3f:	add    BYTE PTR [rax],0x0
   140055d42:	add    BYTE PTR [rax-0x1],al
   140055d48:	(bad)  
   140055d49:	(bad)  
   140055d4a:	(bad)  
   140055d4b:	(bad)  
   140055d4c:	(bad)  
   140055d4d:	(bad)  
   140055d4e:	(bad)  
   140055d4f:	(bad)  
   140055d50:	(bad)  
   140055d51:	(bad)  
   140055d52:	(bad)  
   140055d53:	(bad)  
   140055d54:	(bad)  
   140055d55:	(bad)  
   140055d56:	(bad)  
   140055d57:	(bad)  
   140055d58:	(bad)  
   140055d59:	(bad)  
   140055d5a:	(bad)  
   140055d5b:	(bad)  
   140055d5c:	(bad)  
   140055d5d:	(bad)  
   140055d5e:	(bad)  
   140055d5f:	(bad)  
   140055d60:	(bad)  
   140055d61:	(bad)  
   140055d62:	(bad)  
   140055d63:	inc    DWORD PTR [rax]
   140055d65:	add    BYTE PTR [rax],al
   140055d67:	add    BYTE PTR [rax],0x0
   140055d6a:	add    BYTE PTR [rax-0x1],al
   140055d70:	(bad)  
   140055d71:	(bad)  
   140055d72:	(bad)  
   140055d73:	(bad)  
   140055d74:	(bad)  
   140055d75:	(bad)  
   140055d76:	(bad)  
   140055d77:	(bad)  
   140055d78:	(bad)  
   140055d79:	(bad)  
   140055d7a:	(bad)  
   140055d7b:	inc    DWORD PTR [rax]
   140055d7d:	add    BYTE PTR [rax],al
   140055d7f:	add    BYTE PTR [rax],0x0
	...
   140055d92:	add    BYTE PTR [rax-0x1],al
   140055d98:	(bad)  
   140055d99:	(bad)  
   140055d9a:	(bad)  
   140055d9b:	(bad)  
   140055d9c:	(bad)  
   140055d9d:	(bad)  
   140055d9e:	(bad)  
   140055d9f:	(bad)  
   140055da0:	(bad)  
   140055da1:	(bad)  
   140055da2:	(bad)  
   140055da3:	inc    DWORD PTR [rax]
   140055da5:	add    BYTE PTR [rax],al
   140055da7:	add    BYTE PTR [rax],0x0
   140055daa:	add    BYTE PTR [rax-0x1],al
   140055db0:	(bad)  
   140055db1:	(bad)  
   140055db2:	(bad)  
   140055db3:	(bad)  
   140055db4:	(bad)  
   140055db5:	(bad)  
   140055db6:	(bad)  
   140055db7:	(bad)  
   140055db8:	(bad)  
   140055db9:	(bad)  
   140055dba:	(bad)  
   140055dbb:	(bad)  
   140055dbc:	(bad)  
   140055dbd:	(bad)  
   140055dbe:	(bad)  
   140055dbf:	(bad)  
   140055dc0:	(bad)  
   140055dc1:	(bad)  
   140055dc2:	(bad)  
   140055dc3:	(bad)  
   140055dc4:	(bad)  
   140055dc5:	(bad)  
   140055dc6:	(bad)  
   140055dc7:	(bad)  
   140055dc8:	(bad)  
   140055dc9:	(bad)  
   140055dca:	(bad)  
   140055dcb:	inc    DWORD PTR [rax]
   140055dcd:	add    BYTE PTR [rax],al
   140055dcf:	add    BYTE PTR [rax],0x0
   140055dd2:	add    BYTE PTR [rax-0x1],al
   140055dd8:	(bad)  
   140055dd9:	(bad)  
   140055dda:	(bad)  
   140055ddb:	(bad)  
   140055ddc:	(bad)  
   140055ddd:	(bad)  
   140055dde:	(bad)  
   140055ddf:	(bad)  
   140055de0:	(bad)  
   140055de1:	(bad)  
   140055de2:	(bad)  
   140055de3:	(bad)  
   140055de4:	(bad)  
   140055de5:	(bad)  
   140055de6:	(bad)  
   140055de7:	(bad)  
   140055de8:	(bad)  
   140055de9:	(bad)  
   140055dea:	(bad)  
   140055deb:	(bad)  
   140055dec:	(bad)  
   140055ded:	(bad)  
   140055dee:	(bad)  
   140055def:	(bad)  
   140055df0:	(bad)  
   140055df1:	(bad)  
   140055df2:	(bad)  
   140055df3:	(bad)  
   140055df4:	(bad)  
   140055df5:	(bad)  
   140055df6:	(bad)  
   140055df7:	(bad)  
   140055df8:	(bad)  
   140055df9:	(bad)  
   140055dfa:	(bad)  
   140055dfb:	(bad)  
   140055dfc:	(bad)  
   140055dfd:	(bad)  
   140055dfe:	(bad)  
   140055dff:	(bad)  
   140055e00:	(bad)  
   140055e01:	(bad)  
   140055e02:	(bad)  
   140055e03:	(bad)  
   140055e04:	(bad)  
   140055e05:	(bad)  
   140055e06:	(bad)  
   140055e07:	(bad)  
   140055e08:	(bad)  
   140055e09:	(bad)  
   140055e0a:	(bad)  
   140055e0b:	(bad)  
   140055e0c:	(bad)  
   140055e0d:	(bad)  
   140055e0e:	(bad)  
   140055e0f:	(bad)  
   140055e10:	(bad)  
   140055e11:	(bad)  
   140055e12:	(bad)  
   140055e13:	(bad)  
   140055e14:	(bad)  
   140055e15:	(bad)  
   140055e16:	(bad)  
   140055e17:	(bad)  
   140055e18:	(bad)  
   140055e19:	(bad)  
   140055e1a:	(bad)  
   140055e1b:	(bad)  
   140055e1c:	(bad)  
   140055e1d:	(bad)  
   140055e1e:	(bad)  
   140055e1f:	(bad)  
   140055e20:	(bad)  
   140055e21:	(bad)  
   140055e22:	(bad)  
   140055e23:	(bad)  
   140055e24:	(bad)  
   140055e25:	(bad)  
   140055e26:	(bad)  
   140055e27:	(bad)  
   140055e28:	(bad)  
   140055e29:	(bad)  
   140055e2a:	(bad)  
   140055e2b:	(bad)  
   140055e2c:	(bad)  
   140055e2d:	(bad)  
   140055e2e:	(bad)  
   140055e2f:	(bad)  
   140055e30:	(bad)  
   140055e31:	(bad)  
   140055e32:	(bad)  
   140055e33:	(bad)  
   140055e34:	(bad)  
   140055e35:	(bad)  
   140055e36:	(bad)  
   140055e37:	(bad)  
   140055e38:	(bad)  
   140055e39:	(bad)  
   140055e3a:	(bad)  
   140055e3b:	inc    DWORD PTR [rax]
   140055e3d:	add    BYTE PTR [rax],al
   140055e3f:	add    BYTE PTR [rax],0x0
   140055e42:	add    BYTE PTR [rax-0x1],al
   140055e48:	(bad)  
   140055e49:	(bad)  
   140055e4a:	(bad)  
   140055e4b:	(bad)  
   140055e4c:	(bad)  
   140055e4d:	(bad)  
   140055e4e:	(bad)  
   140055e4f:	(bad)  
   140055e50:	(bad)  
   140055e51:	(bad)  
   140055e52:	(bad)  
   140055e53:	(bad)  
   140055e54:	(bad)  
   140055e55:	(bad)  
   140055e56:	(bad)  
   140055e57:	(bad)  
   140055e58:	(bad)  
   140055e59:	(bad)  
   140055e5a:	(bad)  
   140055e5b:	(bad)  
   140055e5c:	(bad)  
   140055e5d:	(bad)  
   140055e5e:	(bad)  
   140055e5f:	(bad)  
   140055e60:	(bad)  
   140055e61:	(bad)  
   140055e62:	(bad)  
   140055e63:	inc    DWORD PTR [rax]
   140055e65:	add    BYTE PTR [rax],al
   140055e67:	add    BYTE PTR [rax],0x0
   140055e6a:	add    BYTE PTR [rax-0x1],al
   140055e70:	(bad)  
   140055e71:	(bad)  
   140055e72:	(bad)  
   140055e73:	(bad)  
   140055e74:	(bad)  
   140055e75:	(bad)  
   140055e76:	(bad)  
   140055e77:	(bad)  
   140055e78:	(bad)  
   140055e79:	(bad)  
   140055e7a:	(bad)  
   140055e7b:	inc    DWORD PTR [rax]
   140055e7d:	add    BYTE PTR [rax],al
   140055e7f:	add    BYTE PTR [rax],0x0
	...
   140055e92:	add    BYTE PTR [rax-0x1],al
   140055e98:	(bad)  
   140055e99:	(bad)  
   140055e9a:	(bad)  
   140055e9b:	(bad)  
   140055e9c:	(bad)  
   140055e9d:	(bad)  
   140055e9e:	(bad)  
   140055e9f:	(bad)  
   140055ea0:	(bad)  
   140055ea1:	(bad)  
   140055ea2:	(bad)  
   140055ea3:	inc    DWORD PTR [rax]
   140055ea5:	add    BYTE PTR [rax],al
   140055ea7:	add    BYTE PTR [rax],0x0
   140055eaa:	add    BYTE PTR [rax-0x1],al
   140055eb0:	(bad)  
   140055eb1:	(bad)  
   140055eb2:	(bad)  
   140055eb3:	(bad)  
   140055eb4:	(bad)  
   140055eb5:	(bad)  
   140055eb6:	(bad)  
   140055eb7:	(bad)  
   140055eb8:	(bad)  
   140055eb9:	(bad)  
   140055eba:	(bad)  
   140055ebb:	(bad)  
   140055ebc:	(bad)  
   140055ebd:	(bad)  
   140055ebe:	(bad)  
   140055ebf:	(bad)  
   140055ec0:	(bad)  
   140055ec1:	(bad)  
   140055ec2:	(bad)  
   140055ec3:	(bad)  
   140055ec4:	(bad)  
   140055ec5:	(bad)  
   140055ec6:	(bad)  
   140055ec7:	(bad)  
   140055ec8:	(bad)  
   140055ec9:	(bad)  
   140055eca:	(bad)  
   140055ecb:	inc    DWORD PTR [rax]
   140055ecd:	add    BYTE PTR [rax],al
   140055ecf:	add    BYTE PTR [rax],0x0
   140055ed2:	add    BYTE PTR [rax-0x1],al
   140055ed8:	(bad)  
   140055ed9:	(bad)  
   140055eda:	(bad)  
   140055edb:	(bad)  
   140055edc:	(bad)  
   140055edd:	(bad)  
   140055ede:	(bad)  
   140055edf:	(bad)  
   140055ee0:	(bad)  
   140055ee1:	(bad)  
   140055ee2:	(bad)  
   140055ee3:	(bad)  
   140055ee4:	(bad)  
   140055ee5:	(bad)  
   140055ee6:	(bad)  
   140055ee7:	(bad)  
   140055ee8:	(bad)  
   140055ee9:	(bad)  
   140055eea:	(bad)  
   140055eeb:	(bad)  
   140055eec:	(bad)  
   140055eed:	(bad)  
   140055eee:	(bad)  
   140055eef:	(bad)  
   140055ef0:	(bad)  
   140055ef1:	(bad)  
   140055ef2:	(bad)  
   140055ef3:	(bad)  
   140055ef4:	(bad)  
   140055ef5:	(bad)  
   140055ef6:	(bad)  
   140055ef7:	(bad)  
   140055ef8:	(bad)  
   140055ef9:	(bad)  
   140055efa:	(bad)  
   140055efb:	(bad)  
   140055efc:	(bad)  
   140055efd:	(bad)  
   140055efe:	(bad)  
   140055eff:	(bad)  
   140055f00:	(bad)  
   140055f01:	(bad)  
   140055f02:	(bad)  
   140055f03:	(bad)  
   140055f04:	(bad)  
   140055f05:	(bad)  
   140055f06:	(bad)  
   140055f07:	(bad)  
   140055f08:	(bad)  
   140055f09:	(bad)  
   140055f0a:	(bad)  
   140055f0b:	(bad)  
   140055f0c:	(bad)  
   140055f0d:	(bad)  
   140055f0e:	(bad)  
   140055f0f:	(bad)  
   140055f10:	(bad)  
   140055f11:	(bad)  
   140055f12:	(bad)  
   140055f13:	(bad)  
   140055f14:	(bad)  
   140055f15:	(bad)  
   140055f16:	(bad)  
   140055f17:	(bad)  
   140055f18:	(bad)  
   140055f19:	(bad)  
   140055f1a:	(bad)  
   140055f1b:	(bad)  
   140055f1c:	(bad)  
   140055f1d:	(bad)  
   140055f1e:	(bad)  
   140055f1f:	(bad)  
   140055f20:	(bad)  
   140055f21:	(bad)  
   140055f22:	(bad)  
   140055f23:	(bad)  
   140055f24:	(bad)  
   140055f25:	(bad)  
   140055f26:	(bad)  
   140055f27:	(bad)  
   140055f28:	(bad)  
   140055f29:	(bad)  
   140055f2a:	(bad)  
   140055f2b:	(bad)  
   140055f2c:	(bad)  
   140055f2d:	(bad)  
   140055f2e:	(bad)  
   140055f2f:	(bad)  
   140055f30:	(bad)  
   140055f31:	(bad)  
   140055f32:	(bad)  
   140055f33:	(bad)  
   140055f34:	(bad)  
   140055f35:	(bad)  
   140055f36:	(bad)  
   140055f37:	(bad)  
   140055f38:	(bad)  
   140055f39:	(bad)  
   140055f3a:	(bad)  
   140055f3b:	inc    DWORD PTR [rax]
   140055f3d:	add    BYTE PTR [rax],al
   140055f3f:	add    BYTE PTR [rax],0x0
   140055f42:	add    BYTE PTR [rax-0x1],al
   140055f48:	(bad)  
   140055f49:	(bad)  
   140055f4a:	(bad)  
   140055f4b:	(bad)  
   140055f4c:	(bad)  
   140055f4d:	(bad)  
   140055f4e:	(bad)  
   140055f4f:	(bad)  
   140055f50:	(bad)  
   140055f51:	(bad)  
   140055f52:	(bad)  
   140055f53:	(bad)  
   140055f54:	(bad)  
   140055f55:	(bad)  
   140055f56:	(bad)  
   140055f57:	(bad)  
   140055f58:	(bad)  
   140055f59:	(bad)  
   140055f5a:	(bad)  
   140055f5b:	(bad)  
   140055f5c:	(bad)  
   140055f5d:	(bad)  
   140055f5e:	(bad)  
   140055f5f:	(bad)  
   140055f60:	(bad)  
   140055f61:	(bad)  
   140055f62:	(bad)  
   140055f63:	inc    DWORD PTR [rax]
   140055f65:	add    BYTE PTR [rax],al
   140055f67:	add    BYTE PTR [rax],0x0
   140055f6a:	add    BYTE PTR [rax-0x1],al
   140055f70:	(bad)  
   140055f71:	(bad)  
   140055f72:	(bad)  
   140055f73:	(bad)  
   140055f74:	(bad)  
   140055f75:	(bad)  
   140055f76:	(bad)  
   140055f77:	(bad)  
   140055f78:	(bad)  
   140055f79:	(bad)  
   140055f7a:	(bad)  
   140055f7b:	inc    DWORD PTR [rax]
   140055f7d:	add    BYTE PTR [rax],al
   140055f7f:	add    BYTE PTR [rax],0x0
	...
   140055f92:	add    BYTE PTR [rax-0x1],al
   140055f98:	(bad)  
   140055f99:	(bad)  
   140055f9a:	(bad)  
   140055f9b:	(bad)  
   140055f9c:	(bad)  
   140055f9d:	(bad)  
   140055f9e:	(bad)  
   140055f9f:	(bad)  
   140055fa0:	(bad)  
   140055fa1:	(bad)  
   140055fa2:	(bad)  
   140055fa3:	inc    DWORD PTR [rax]
   140055fa5:	add    BYTE PTR [rax],al
   140055fa7:	add    BYTE PTR [rax],0x0
   140055faa:	add    BYTE PTR [rax-0x1],al
   140055fb0:	(bad)  
   140055fb1:	(bad)  
   140055fb2:	(bad)  
   140055fb3:	(bad)  
   140055fb4:	(bad)  
   140055fb5:	(bad)  
   140055fb6:	(bad)  
   140055fb7:	(bad)  
   140055fb8:	(bad)  
   140055fb9:	(bad)  
   140055fba:	(bad)  
   140055fbb:	(bad)  
   140055fbc:	(bad)  
   140055fbd:	(bad)  
   140055fbe:	(bad)  
   140055fbf:	(bad)  
   140055fc0:	(bad)  
   140055fc1:	(bad)  
   140055fc2:	(bad)  
   140055fc3:	(bad)  
   140055fc4:	(bad)  
   140055fc5:	(bad)  
   140055fc6:	(bad)  
   140055fc7:	(bad)  
   140055fc8:	(bad)  
   140055fc9:	(bad)  
   140055fca:	(bad)  
   140055fcb:	inc    DWORD PTR [rax]
   140055fcd:	add    BYTE PTR [rax],al
   140055fcf:	add    BYTE PTR [rax],0x0
   140055fd2:	add    BYTE PTR [rax-0x1],al
   140055fd8:	(bad)  
   140055fd9:	(bad)  
   140055fda:	(bad)  
   140055fdb:	(bad)  
   140055fdc:	(bad)  
   140055fdd:	(bad)  
   140055fde:	(bad)  
   140055fdf:	(bad)  
   140055fe0:	(bad)  
   140055fe1:	(bad)  
   140055fe2:	(bad)  
   140055fe3:	(bad)  
   140055fe4:	(bad)  
   140055fe5:	(bad)  
   140055fe6:	(bad)  
   140055fe7:	(bad)  
   140055fe8:	(bad)  
   140055fe9:	(bad)  
   140055fea:	(bad)  
   140055feb:	(bad)  
   140055fec:	(bad)  
   140055fed:	(bad)  
   140055fee:	(bad)  
   140055fef:	(bad)  
   140055ff0:	(bad)  
   140055ff1:	(bad)  
   140055ff2:	(bad)  
   140055ff3:	(bad)  
   140055ff4:	(bad)  
   140055ff5:	(bad)  
   140055ff6:	(bad)  
   140055ff7:	(bad)  
   140055ff8:	(bad)  
   140055ff9:	(bad)  
   140055ffa:	(bad)  
   140055ffb:	(bad)  
   140055ffc:	(bad)  
   140055ffd:	(bad)  
   140055ffe:	(bad)  
   140055fff:	(bad)  
   140056000:	(bad)  
   140056001:	(bad)  
   140056002:	(bad)  
   140056003:	(bad)  
   140056004:	(bad)  
   140056005:	(bad)  
   140056006:	(bad)  
   140056007:	(bad)  
   140056008:	(bad)  
   140056009:	(bad)  
   14005600a:	(bad)  
   14005600b:	(bad)  
   14005600c:	(bad)  
   14005600d:	(bad)  
   14005600e:	(bad)  
   14005600f:	(bad)  
   140056010:	(bad)  
   140056011:	(bad)  
   140056012:	(bad)  
   140056013:	(bad)  
   140056014:	(bad)  
   140056015:	(bad)  
   140056016:	(bad)  
   140056017:	(bad)  
   140056018:	(bad)  
   140056019:	(bad)  
   14005601a:	(bad)  
   14005601b:	(bad)  
   14005601c:	(bad)  
   14005601d:	(bad)  
   14005601e:	(bad)  
   14005601f:	(bad)  
   140056020:	(bad)  
   140056021:	(bad)  
   140056022:	(bad)  
   140056023:	(bad)  
   140056024:	(bad)  
   140056025:	(bad)  
   140056026:	(bad)  
   140056027:	(bad)  
   140056028:	(bad)  
   140056029:	(bad)  
   14005602a:	(bad)  
   14005602b:	(bad)  
   14005602c:	(bad)  
   14005602d:	(bad)  
   14005602e:	(bad)  
   14005602f:	(bad)  
   140056030:	(bad)  
   140056031:	(bad)  
   140056032:	(bad)  
   140056033:	(bad)  
   140056034:	(bad)  
   140056035:	(bad)  
   140056036:	(bad)  
   140056037:	(bad)  
   140056038:	(bad)  
   140056039:	(bad)  
   14005603a:	(bad)  
   14005603b:	inc    DWORD PTR [rax]
   14005603d:	add    BYTE PTR [rax],al
   14005603f:	add    BYTE PTR [rax],0x0
   140056042:	add    BYTE PTR [rax-0x1],al
   140056048:	(bad)  
   140056049:	(bad)  
   14005604a:	(bad)  
   14005604b:	(bad)  
   14005604c:	(bad)  
   14005604d:	(bad)  
   14005604e:	(bad)  
   14005604f:	(bad)  
   140056050:	(bad)  
   140056051:	(bad)  
   140056052:	(bad)  
   140056053:	(bad)  
   140056054:	(bad)  
   140056055:	(bad)  
   140056056:	(bad)  
   140056057:	(bad)  
   140056058:	(bad)  
   140056059:	(bad)  
   14005605a:	(bad)  
   14005605b:	(bad)  
   14005605c:	(bad)  
   14005605d:	(bad)  
   14005605e:	(bad)  
   14005605f:	(bad)  
   140056060:	(bad)  
   140056061:	(bad)  
   140056062:	(bad)  
   140056063:	inc    DWORD PTR [rax]
   140056065:	add    BYTE PTR [rax],al
   140056067:	add    BYTE PTR [rax],0x0
   14005606a:	add    BYTE PTR [rax-0x1],al
   140056070:	(bad)  
   140056071:	(bad)  
   140056072:	(bad)  
   140056073:	(bad)  
   140056074:	(bad)  
   140056075:	(bad)  
   140056076:	(bad)  
   140056077:	(bad)  
   140056078:	(bad)  
   140056079:	(bad)  
   14005607a:	(bad)  
   14005607b:	inc    DWORD PTR [rax]
   14005607d:	add    BYTE PTR [rax],al
   14005607f:	add    BYTE PTR [rax],0x0
	...
   140056092:	add    BYTE PTR [rax-0x1],al
   140056098:	(bad)  
   140056099:	(bad)  
   14005609a:	(bad)  
   14005609b:	(bad)  
   14005609c:	(bad)  
   14005609d:	(bad)  
   14005609e:	(bad)  
   14005609f:	(bad)  
   1400560a0:	(bad)  
   1400560a1:	(bad)  
   1400560a2:	(bad)  
   1400560a3:	inc    DWORD PTR [rax]
   1400560a5:	add    BYTE PTR [rax],al
   1400560a7:	add    BYTE PTR [rax],0x0
   1400560aa:	add    BYTE PTR [rax-0x1],al
   1400560b0:	(bad)  
   1400560b1:	(bad)  
   1400560b2:	(bad)  
   1400560b3:	(bad)  
   1400560b4:	(bad)  
   1400560b5:	(bad)  
   1400560b6:	(bad)  
   1400560b7:	(bad)  
   1400560b8:	(bad)  
   1400560b9:	(bad)  
   1400560ba:	(bad)  
   1400560bb:	(bad)  
   1400560bc:	(bad)  
   1400560bd:	(bad)  
   1400560be:	(bad)  
   1400560bf:	(bad)  
   1400560c0:	(bad)  
   1400560c1:	(bad)  
   1400560c2:	(bad)  
   1400560c3:	(bad)  
   1400560c4:	(bad)  
   1400560c5:	(bad)  
   1400560c6:	(bad)  
   1400560c7:	(bad)  
   1400560c8:	(bad)  
   1400560c9:	(bad)  
   1400560ca:	(bad)  
   1400560cb:	inc    DWORD PTR [rax]
   1400560cd:	add    BYTE PTR [rax],al
   1400560cf:	add    BYTE PTR [rax],0x0
   1400560d2:	add    BYTE PTR [rax-0x1],al
   1400560d8:	(bad)  
   1400560d9:	(bad)  
   1400560da:	(bad)  
   1400560db:	(bad)  
   1400560dc:	(bad)  
   1400560dd:	(bad)  
   1400560de:	(bad)  
   1400560df:	(bad)  
   1400560e0:	(bad)  
   1400560e1:	(bad)  
   1400560e2:	(bad)  
   1400560e3:	(bad)  
   1400560e4:	(bad)  
   1400560e5:	(bad)  
   1400560e6:	(bad)  
   1400560e7:	(bad)  
   1400560e8:	(bad)  
   1400560e9:	(bad)  
   1400560ea:	(bad)  
   1400560eb:	(bad)  
   1400560ec:	(bad)  
   1400560ed:	(bad)  
   1400560ee:	(bad)  
   1400560ef:	(bad)  
   1400560f0:	(bad)  
   1400560f1:	(bad)  
   1400560f2:	(bad)  
   1400560f3:	(bad)  
   1400560f4:	(bad)  
   1400560f5:	(bad)  
   1400560f6:	(bad)  
   1400560f7:	(bad)  
   1400560f8:	(bad)  
   1400560f9:	(bad)  
   1400560fa:	(bad)  
   1400560fb:	(bad)  
   1400560fc:	(bad)  
   1400560fd:	(bad)  
   1400560fe:	(bad)  
   1400560ff:	(bad)  
   140056100:	(bad)  
   140056101:	(bad)  
   140056102:	(bad)  
   140056103:	(bad)  
   140056104:	(bad)  
   140056105:	(bad)  
   140056106:	(bad)  
   140056107:	(bad)  
   140056108:	(bad)  
   140056109:	(bad)  
   14005610a:	(bad)  
   14005610b:	(bad)  
   14005610c:	(bad)  
   14005610d:	(bad)  
   14005610e:	(bad)  
   14005610f:	(bad)  
   140056110:	(bad)  
   140056111:	(bad)  
   140056112:	(bad)  
   140056113:	(bad)  
   140056114:	(bad)  
   140056115:	(bad)  
   140056116:	(bad)  
   140056117:	(bad)  
   140056118:	(bad)  
   140056119:	(bad)  
   14005611a:	(bad)  
   14005611b:	(bad)  
   14005611c:	(bad)  
   14005611d:	(bad)  
   14005611e:	(bad)  
   14005611f:	(bad)  
   140056120:	(bad)  
   140056121:	(bad)  
   140056122:	(bad)  
   140056123:	(bad)  
   140056124:	(bad)  
   140056125:	(bad)  
   140056126:	(bad)  
   140056127:	(bad)  
   140056128:	(bad)  
   140056129:	(bad)  
   14005612a:	(bad)  
   14005612b:	(bad)  
   14005612c:	(bad)  
   14005612d:	(bad)  
   14005612e:	(bad)  
   14005612f:	(bad)  
   140056130:	(bad)  
   140056131:	(bad)  
   140056132:	(bad)  
   140056133:	(bad)  
   140056134:	(bad)  
   140056135:	(bad)  
   140056136:	(bad)  
   140056137:	(bad)  
   140056138:	(bad)  
   140056139:	(bad)  
   14005613a:	(bad)  
   14005613b:	inc    DWORD PTR [rax]
   14005613d:	add    BYTE PTR [rax],al
   14005613f:	add    BYTE PTR [rax],0x0
   140056142:	add    BYTE PTR [rax-0x1],al
   140056148:	(bad)  
   140056149:	(bad)  
   14005614a:	(bad)  
   14005614b:	(bad)  
   14005614c:	(bad)  
   14005614d:	(bad)  
   14005614e:	(bad)  
   14005614f:	(bad)  
   140056150:	(bad)  
   140056151:	(bad)  
   140056152:	(bad)  
   140056153:	(bad)  
   140056154:	(bad)  
   140056155:	(bad)  
   140056156:	(bad)  
   140056157:	(bad)  
   140056158:	(bad)  
   140056159:	(bad)  
   14005615a:	(bad)  
   14005615b:	(bad)  
   14005615c:	(bad)  
   14005615d:	(bad)  
   14005615e:	(bad)  
   14005615f:	(bad)  
   140056160:	(bad)  
   140056161:	(bad)  
   140056162:	(bad)  
   140056163:	inc    DWORD PTR [rax]
   140056165:	add    BYTE PTR [rax],al
   140056167:	add    BYTE PTR [rax],0x0
   14005616a:	add    BYTE PTR [rax-0x1],al
   140056170:	(bad)  
   140056171:	(bad)  
   140056172:	(bad)  
   140056173:	(bad)  
   140056174:	(bad)  
   140056175:	(bad)  
   140056176:	(bad)  
   140056177:	(bad)  
   140056178:	(bad)  
   140056179:	(bad)  
   14005617a:	(bad)  
   14005617b:	inc    DWORD PTR [rax]
   14005617d:	add    BYTE PTR [rax],al
   14005617f:	add    BYTE PTR [rax],0x0
	...
   140056192:	add    BYTE PTR [rax-0x1],al
   140056198:	(bad)  
   140056199:	(bad)  
   14005619a:	(bad)  
   14005619b:	(bad)  
   14005619c:	(bad)  
   14005619d:	(bad)  
   14005619e:	(bad)  
   14005619f:	(bad)  
   1400561a0:	(bad)  
   1400561a1:	(bad)  
   1400561a2:	(bad)  
   1400561a3:	inc    DWORD PTR [rax]
   1400561a5:	add    BYTE PTR [rax],al
   1400561a7:	add    BYTE PTR [rax],0x0
   1400561aa:	add    BYTE PTR [rax-0x1],al
   1400561b0:	(bad)  
   1400561b1:	(bad)  
   1400561b2:	(bad)  
   1400561b3:	(bad)  
   1400561b4:	(bad)  
   1400561b5:	(bad)  
   1400561b6:	(bad)  
   1400561b7:	(bad)  
   1400561b8:	(bad)  
   1400561b9:	(bad)  
   1400561ba:	(bad)  
   1400561bb:	(bad)  
   1400561bc:	(bad)  
   1400561bd:	(bad)  
   1400561be:	(bad)  
   1400561bf:	(bad)  
   1400561c0:	(bad)  
   1400561c1:	(bad)  
   1400561c2:	(bad)  
   1400561c3:	(bad)  
   1400561c4:	(bad)  
   1400561c5:	(bad)  
   1400561c6:	(bad)  
   1400561c7:	(bad)  
   1400561c8:	(bad)  
   1400561c9:	(bad)  
   1400561ca:	(bad)  
   1400561cb:	inc    DWORD PTR [rax]
   1400561cd:	add    BYTE PTR [rax],al
   1400561cf:	add    BYTE PTR [rax],0x0
   1400561d2:	add    BYTE PTR [rax-0x1],al
   1400561d8:	(bad)  
   1400561d9:	(bad)  
   1400561da:	(bad)  
   1400561db:	(bad)  
   1400561dc:	(bad)  
   1400561dd:	(bad)  
   1400561de:	(bad)  
   1400561df:	(bad)  
   1400561e0:	(bad)  
   1400561e1:	(bad)  
   1400561e2:	(bad)  
   1400561e3:	(bad)  
   1400561e4:	(bad)  
   1400561e5:	(bad)  
   1400561e6:	(bad)  
   1400561e7:	(bad)  
   1400561e8:	(bad)  
   1400561e9:	(bad)  
   1400561ea:	(bad)  
   1400561eb:	(bad)  
   1400561ec:	(bad)  
   1400561ed:	(bad)  
   1400561ee:	(bad)  
   1400561ef:	(bad)  
   1400561f0:	(bad)  
   1400561f1:	(bad)  
   1400561f2:	(bad)  
   1400561f3:	(bad)  
   1400561f4:	(bad)  
   1400561f5:	(bad)  
   1400561f6:	(bad)  
   1400561f7:	(bad)  
   1400561f8:	(bad)  
   1400561f9:	(bad)  
   1400561fa:	(bad)  
   1400561fb:	(bad)  
   1400561fc:	(bad)  
   1400561fd:	(bad)  
   1400561fe:	(bad)  
   1400561ff:	(bad)  
   140056200:	(bad)  
   140056201:	(bad)  
   140056202:	(bad)  
   140056203:	(bad)  
   140056204:	(bad)  
   140056205:	(bad)  
   140056206:	(bad)  
   140056207:	(bad)  
   140056208:	(bad)  
   140056209:	(bad)  
   14005620a:	(bad)  
   14005620b:	(bad)  
   14005620c:	(bad)  
   14005620d:	(bad)  
   14005620e:	(bad)  
   14005620f:	(bad)  
   140056210:	(bad)  
   140056211:	(bad)  
   140056212:	(bad)  
   140056213:	(bad)  
   140056214:	(bad)  
   140056215:	(bad)  
   140056216:	(bad)  
   140056217:	(bad)  
   140056218:	(bad)  
   140056219:	(bad)  
   14005621a:	(bad)  
   14005621b:	(bad)  
   14005621c:	(bad)  
   14005621d:	(bad)  
   14005621e:	(bad)  
   14005621f:	(bad)  
   140056220:	(bad)  
   140056221:	(bad)  
   140056222:	(bad)  
   140056223:	(bad)  
   140056224:	(bad)  
   140056225:	(bad)  
   140056226:	(bad)  
   140056227:	(bad)  
   140056228:	(bad)  
   140056229:	(bad)  
   14005622a:	(bad)  
   14005622b:	(bad)  
   14005622c:	(bad)  
   14005622d:	(bad)  
   14005622e:	(bad)  
   14005622f:	(bad)  
   140056230:	(bad)  
   140056231:	(bad)  
   140056232:	(bad)  
   140056233:	(bad)  
   140056234:	(bad)  
   140056235:	(bad)  
   140056236:	(bad)  
   140056237:	(bad)  
   140056238:	(bad)  
   140056239:	(bad)  
   14005623a:	(bad)  
   14005623b:	inc    DWORD PTR [rax]
   14005623d:	add    BYTE PTR [rax],al
   14005623f:	add    BYTE PTR [rax],0x0
   140056242:	add    BYTE PTR [rax-0x1],al
   140056248:	(bad)  
   140056249:	(bad)  
   14005624a:	(bad)  
   14005624b:	(bad)  
   14005624c:	(bad)  
   14005624d:	(bad)  
   14005624e:	(bad)  
   14005624f:	(bad)  
   140056250:	(bad)  
   140056251:	(bad)  
   140056252:	(bad)  
   140056253:	(bad)  
   140056254:	(bad)  
   140056255:	(bad)  
   140056256:	(bad)  
   140056257:	(bad)  
   140056258:	(bad)  
   140056259:	(bad)  
   14005625a:	(bad)  
   14005625b:	(bad)  
   14005625c:	(bad)  
   14005625d:	(bad)  
   14005625e:	(bad)  
   14005625f:	(bad)  
   140056260:	(bad)  
   140056261:	(bad)  
   140056262:	(bad)  
   140056263:	inc    DWORD PTR [rax]
   140056265:	add    BYTE PTR [rax],al
   140056267:	add    BYTE PTR [rax],0x0
   14005626a:	add    BYTE PTR [rax-0x1],al
   140056270:	(bad)  
   140056271:	(bad)  
   140056272:	(bad)  
   140056273:	(bad)  
   140056274:	(bad)  
   140056275:	(bad)  
   140056276:	(bad)  
   140056277:	(bad)  
   140056278:	(bad)  
   140056279:	(bad)  
   14005627a:	(bad)  
   14005627b:	inc    DWORD PTR [rax]
   14005627d:	add    BYTE PTR [rax],al
   14005627f:	add    BYTE PTR [rax],0x0
	...
   140056292:	add    BYTE PTR [rax-0x1],al
   140056298:	(bad)  
   140056299:	(bad)  
   14005629a:	(bad)  
   14005629b:	(bad)  
   14005629c:	(bad)  
   14005629d:	(bad)  
   14005629e:	(bad)  
   14005629f:	(bad)  
   1400562a0:	(bad)  
   1400562a1:	(bad)  
   1400562a2:	(bad)  
   1400562a3:	inc    DWORD PTR [rax]
   1400562a5:	add    BYTE PTR [rax],al
   1400562a7:	add    BYTE PTR [rax],0x0
   1400562aa:	add    BYTE PTR [rax-0x80000000],al
   1400562b0:	add    BYTE PTR [rax],al
   1400562b2:	add    BYTE PTR [rax-0x80000000],al
   1400562b8:	add    BYTE PTR [rax],al
   1400562ba:	add    BYTE PTR [rax-0x80000000],al
   1400562c0:	add    BYTE PTR [rax],al
   1400562c2:	add    BYTE PTR [rax-0x80000000],al
   1400562c8:	add    BYTE PTR [rax],al
   1400562ca:	add    BYTE PTR [rax-0x80000000],al
   1400562d0:	add    BYTE PTR [rax],al
   1400562d2:	add    BYTE PTR [rax-0x80000000],al
   1400562d8:	add    BYTE PTR [rax],al
   1400562da:	add    BYTE PTR [rax-0x80000000],al
   1400562e0:	add    BYTE PTR [rax],al
   1400562e2:	add    BYTE PTR [rax-0x80000000],al
   1400562e8:	add    BYTE PTR [rax],al
   1400562ea:	add    BYTE PTR [rax-0x80000000],al
   1400562f0:	add    BYTE PTR [rax],al
   1400562f2:	add    BYTE PTR [rax-0x80000000],al
   1400562f8:	add    BYTE PTR [rax],al
   1400562fa:	add    BYTE PTR [rax-0x80000000],al
   140056300:	add    BYTE PTR [rax],al
   140056302:	add    BYTE PTR [rax-0x80000000],al
   140056308:	add    BYTE PTR [rax],al
   14005630a:	add    BYTE PTR [rax-0x80000000],al
   140056310:	add    BYTE PTR [rax],al
   140056312:	add    BYTE PTR [rax-0x80000000],al
   140056318:	add    BYTE PTR [rax],al
   14005631a:	add    BYTE PTR [rax-0x80000000],al
   140056320:	add    BYTE PTR [rax],al
   140056322:	add    BYTE PTR [rax-0x80000000],al
   140056328:	add    BYTE PTR [rax],al
   14005632a:	add    BYTE PTR [rax-0x80000000],al
   140056330:	add    BYTE PTR [rax],al
   140056332:	add    BYTE PTR [rax-0x80000000],al
   140056338:	add    BYTE PTR [rax],al
   14005633a:	add    BYTE PTR [rax-0x80000000],al
   140056340:	add    BYTE PTR [rax],al
   140056342:	add    BYTE PTR [rax-0x80000000],al
   140056348:	add    BYTE PTR [rax],al
   14005634a:	add    BYTE PTR [rax-0x80000000],al
   140056350:	add    BYTE PTR [rax],al
   140056352:	add    BYTE PTR [rax-0x80000000],al
   140056358:	add    BYTE PTR [rax],al
   14005635a:	add    BYTE PTR [rax-0x80000000],al
   140056360:	add    BYTE PTR [rax],al
   140056362:	add    BYTE PTR [rax-0x80000000],al
   140056368:	add    BYTE PTR [rax],al
   14005636a:	add    BYTE PTR [rax-0x1],al
   140056370:	(bad)  
   140056371:	(bad)  
   140056372:	(bad)  
   140056373:	(bad)  
   140056374:	(bad)  
   140056375:	(bad)  
   140056376:	(bad)  
   140056377:	(bad)  
   140056378:	(bad)  
   140056379:	(bad)  
   14005637a:	(bad)  
   14005637b:	inc    DWORD PTR [rax]
   14005637d:	add    BYTE PTR [rax],al
   14005637f:	add    BYTE PTR [rax],0x0
	...
   140056392:	add    BYTE PTR [rax-0x1],al
   140056398:	(bad)  
   140056399:	(bad)  
   14005639a:	(bad)  
   14005639b:	(bad)  
   14005639c:	(bad)  
   14005639d:	(bad)  
   14005639e:	(bad)  
   14005639f:	(bad)  
   1400563a0:	(bad)  
   1400563a1:	(bad)  
   1400563a2:	(bad)  
   1400563a3:	inc    DWORD PTR [rax]
   1400563a5:	add    BYTE PTR [rax],al
   1400563a7:	add    BYTE PTR [rax],0x0
   1400563aa:	add    BYTE PTR [rax-0x80000000],al
   1400563b0:	add    BYTE PTR [rax],al
   1400563b2:	add    BYTE PTR [rax-0x80000000],al
   1400563b8:	add    BYTE PTR [rax],al
   1400563ba:	add    BYTE PTR [rax-0x80000000],al
   1400563c0:	add    BYTE PTR [rax],al
   1400563c2:	add    BYTE PTR [rax-0x80000000],al
   1400563c8:	add    BYTE PTR [rax],al
   1400563ca:	add    BYTE PTR [rax-0x80000000],al
   1400563d0:	add    BYTE PTR [rax],al
   1400563d2:	add    BYTE PTR [rax-0x80000000],al
   1400563d8:	add    BYTE PTR [rax],al
   1400563da:	add    BYTE PTR [rax-0x80000000],al
   1400563e0:	add    BYTE PTR [rax],al
   1400563e2:	add    BYTE PTR [rax-0x80000000],al
   1400563e8:	add    BYTE PTR [rax],al
   1400563ea:	add    BYTE PTR [rax-0x80000000],al
   1400563f0:	add    BYTE PTR [rax],al
   1400563f2:	add    BYTE PTR [rax-0x80000000],al
   1400563f8:	add    BYTE PTR [rax],al
   1400563fa:	add    BYTE PTR [rax-0x80000000],al
   140056400:	add    BYTE PTR [rax],al
   140056402:	add    BYTE PTR [rax-0x80000000],al
   140056408:	add    BYTE PTR [rax],al
   14005640a:	add    BYTE PTR [rax-0x80000000],al
   140056410:	add    BYTE PTR [rax],al
   140056412:	add    BYTE PTR [rax-0x80000000],al
   140056418:	add    BYTE PTR [rax],al
   14005641a:	add    BYTE PTR [rax-0x80000000],al
   140056420:	add    BYTE PTR [rax],al
   140056422:	add    BYTE PTR [rax-0x80000000],al
   140056428:	add    BYTE PTR [rax],al
   14005642a:	add    BYTE PTR [rax-0x80000000],al
   140056430:	add    BYTE PTR [rax],al
   140056432:	add    BYTE PTR [rax-0x80000000],al
   140056438:	add    BYTE PTR [rax],al
   14005643a:	add    BYTE PTR [rax-0x80000000],al
   140056440:	add    BYTE PTR [rax],al
   140056442:	add    BYTE PTR [rax-0x80000000],al
   140056448:	add    BYTE PTR [rax],al
   14005644a:	add    BYTE PTR [rax-0x80000000],al
   140056450:	add    BYTE PTR [rax],al
   140056452:	add    BYTE PTR [rax-0x80000000],al
   140056458:	add    BYTE PTR [rax],al
   14005645a:	add    BYTE PTR [rax-0x80000000],al
   140056460:	add    BYTE PTR [rax],al
   140056462:	add    BYTE PTR [rax-0x80000000],al
   140056468:	add    BYTE PTR [rax],al
   14005646a:	add    BYTE PTR [rax-0x1],al
   140056470:	(bad)  
   140056471:	(bad)  
   140056472:	(bad)  
   140056473:	(bad)  
   140056474:	(bad)  
   140056475:	(bad)  
   140056476:	(bad)  
   140056477:	(bad)  
   140056478:	(bad)  
   140056479:	(bad)  
   14005647a:	(bad)  
   14005647b:	inc    DWORD PTR [rax]
   14005647d:	add    BYTE PTR [rax],al
   14005647f:	add    BYTE PTR [rax],0x0
	...
   140056492:	add    BYTE PTR [rax-0x1],al
   140056498:	(bad)  
   140056499:	(bad)  
   14005649a:	(bad)  
   14005649b:	(bad)  
   14005649c:	(bad)  
   14005649d:	(bad)  
   14005649e:	(bad)  
   14005649f:	(bad)  
   1400564a0:	(bad)  
   1400564a1:	(bad)  
   1400564a2:	(bad)  
   1400564a3:	inc    DWORD PTR [rax]
   1400564a5:	add    BYTE PTR [rax],al
   1400564a7:	add    BYTE PTR [rax],0x0
   1400564aa:	add    BYTE PTR [rax-0x1],al
   1400564b0:	(bad)  
   1400564b1:	(bad)  
   1400564b2:	(bad)  
   1400564b3:	(bad)  
   1400564b4:	(bad)  
   1400564b5:	(bad)  
   1400564b6:	(bad)  
   1400564b7:	(bad)  
   1400564b8:	(bad)  
   1400564b9:	(bad)  
   1400564ba:	(bad)  
   1400564bb:	(bad)  
   1400564bc:	(bad)  
   1400564bd:	(bad)  
   1400564be:	(bad)  
   1400564bf:	(bad)  
   1400564c0:	(bad)  
   1400564c1:	(bad)  
   1400564c2:	(bad)  
   1400564c3:	inc    DWORD PTR [rax]
   1400564c5:	add    BYTE PTR [rax],al
   1400564c7:	add    BYTE PTR [rax],0x0
   1400564ca:	add    BYTE PTR [rax-0x1],al
   1400564d0:	(bad)  
   1400564d1:	(bad)  
   1400564d2:	(bad)  
   1400564d3:	(bad)  
   1400564d4:	(bad)  
   1400564d5:	(bad)  
   1400564d6:	(bad)  
   1400564d7:	(bad)  
   1400564d8:	(bad)  
   1400564d9:	(bad)  
   1400564da:	(bad)  
   1400564db:	(bad)  
   1400564dc:	(bad)  
   1400564dd:	(bad)  
   1400564de:	(bad)  
   1400564df:	(bad)  
   1400564e0:	(bad)  
   1400564e1:	(bad)  
   1400564e2:	(bad)  
   1400564e3:	inc    DWORD PTR [rax]
   1400564e5:	add    BYTE PTR [rax],al
   1400564e7:	add    BYTE PTR [rax],0x0
   1400564ea:	add    BYTE PTR [rax-0x1],al
   1400564f0:	(bad)  
   1400564f1:	(bad)  
   1400564f2:	(bad)  
   1400564f3:	(bad)  
   1400564f4:	(bad)  
   1400564f5:	(bad)  
   1400564f6:	(bad)  
   1400564f7:	(bad)  
   1400564f8:	(bad)  
   1400564f9:	(bad)  
   1400564fa:	(bad)  
   1400564fb:	(bad)  
   1400564fc:	(bad)  
   1400564fd:	(bad)  
   1400564fe:	(bad)  
   1400564ff:	(bad)  
   140056500:	(bad)  
   140056501:	(bad)  
   140056502:	(bad)  
   140056503:	inc    DWORD PTR [rax]
   140056505:	add    BYTE PTR [rax],al
   140056507:	add    BYTE PTR [rax],0x0
   14005650a:	add    BYTE PTR [rax-0x1],al
   140056510:	(bad)  
   140056511:	(bad)  
   140056512:	(bad)  
   140056513:	(bad)  
   140056514:	(bad)  
   140056515:	(bad)  
   140056516:	(bad)  
   140056517:	(bad)  
   140056518:	(bad)  
   140056519:	(bad)  
   14005651a:	(bad)  
   14005651b:	(bad)  
   14005651c:	(bad)  
   14005651d:	(bad)  
   14005651e:	(bad)  
   14005651f:	(bad)  
   140056520:	(bad)  
   140056521:	(bad)  
   140056522:	(bad)  
   140056523:	inc    DWORD PTR [rax]
   140056525:	add    BYTE PTR [rax],al
   140056527:	add    BYTE PTR [rax],0x0
   14005652a:	add    BYTE PTR [rax-0x1],al
   140056530:	(bad)  
   140056531:	(bad)  
   140056532:	(bad)  
   140056533:	(bad)  
   140056534:	(bad)  
   140056535:	(bad)  
   140056536:	(bad)  
   140056537:	(bad)  
   140056538:	(bad)  
   140056539:	(bad)  
   14005653a:	(bad)  
   14005653b:	(bad)  
   14005653c:	(bad)  
   14005653d:	(bad)  
   14005653e:	(bad)  
   14005653f:	(bad)  
   140056540:	(bad)  
   140056541:	(bad)  
   140056542:	(bad)  
   140056543:	inc    DWORD PTR [rax]
   140056545:	add    BYTE PTR [rax],al
   140056547:	add    BYTE PTR [rax],0x0
   14005654a:	add    BYTE PTR [rax-0x1],al
   140056550:	(bad)  
   140056551:	(bad)  
   140056552:	(bad)  
   140056553:	(bad)  
   140056554:	(bad)  
   140056555:	(bad)  
   140056556:	(bad)  
   140056557:	(bad)  
   140056558:	(bad)  
   140056559:	(bad)  
   14005655a:	(bad)  
   14005655b:	(bad)  
   14005655c:	(bad)  
   14005655d:	(bad)  
   14005655e:	(bad)  
   14005655f:	(bad)  
   140056560:	(bad)  
   140056561:	(bad)  
   140056562:	(bad)  
   140056563:	inc    DWORD PTR [rax]
   140056565:	add    BYTE PTR [rax],al
   140056567:	add    BYTE PTR [rax],0x0
   14005656a:	add    BYTE PTR [rax-0x1],al
   140056570:	(bad)  
   140056571:	(bad)  
   140056572:	(bad)  
   140056573:	(bad)  
   140056574:	(bad)  
   140056575:	(bad)  
   140056576:	(bad)  
   140056577:	(bad)  
   140056578:	(bad)  
   140056579:	(bad)  
   14005657a:	(bad)  
   14005657b:	inc    DWORD PTR [rax]
   14005657d:	add    BYTE PTR [rax],al
   14005657f:	add    BYTE PTR [rax],0x0
	...
   140056592:	add    BYTE PTR [rax-0x1],al
   140056598:	(bad)  
   140056599:	(bad)  
   14005659a:	(bad)  
   14005659b:	(bad)  
   14005659c:	(bad)  
   14005659d:	(bad)  
   14005659e:	(bad)  
   14005659f:	(bad)  
   1400565a0:	(bad)  
   1400565a1:	(bad)  
   1400565a2:	(bad)  
   1400565a3:	inc    DWORD PTR [rax]
   1400565a5:	add    BYTE PTR [rax],al
   1400565a7:	add    BYTE PTR [rax],0x0
   1400565aa:	add    BYTE PTR [rax-0x1],al
   1400565b0:	(bad)  
   1400565b1:	(bad)  
   1400565b2:	(bad)  
   1400565b3:	(bad)  
   1400565b4:	(bad)  
   1400565b5:	(bad)  
   1400565b6:	(bad)  
   1400565b7:	(bad)  
   1400565b8:	(bad)  
   1400565b9:	(bad)  
   1400565ba:	(bad)  
   1400565bb:	(bad)  
   1400565bc:	(bad)  
   1400565bd:	(bad)  
   1400565be:	(bad)  
   1400565bf:	(bad)  
   1400565c0:	(bad)  
   1400565c1:	(bad)  
   1400565c2:	(bad)  
   1400565c3:	inc    DWORD PTR [rax]
   1400565c5:	add    BYTE PTR [rax],al
   1400565c7:	add    BYTE PTR [rax],0x0
   1400565ca:	add    BYTE PTR [rax-0x1],al
   1400565d0:	(bad)  
   1400565d1:	(bad)  
   1400565d2:	(bad)  
   1400565d3:	(bad)  
   1400565d4:	(bad)  
   1400565d5:	(bad)  
   1400565d6:	(bad)  
   1400565d7:	(bad)  
   1400565d8:	(bad)  
   1400565d9:	(bad)  
   1400565da:	(bad)  
   1400565db:	(bad)  
   1400565dc:	(bad)  
   1400565dd:	(bad)  
   1400565de:	(bad)  
   1400565df:	(bad)  
   1400565e0:	(bad)  
   1400565e1:	(bad)  
   1400565e2:	(bad)  
   1400565e3:	inc    DWORD PTR [rax]
   1400565e5:	add    BYTE PTR [rax],al
   1400565e7:	add    BYTE PTR [rax],0x0
   1400565ea:	add    BYTE PTR [rax-0x1],al
   1400565f0:	(bad)  
   1400565f1:	(bad)  
   1400565f2:	(bad)  
   1400565f3:	(bad)  
   1400565f4:	(bad)  
   1400565f5:	(bad)  
   1400565f6:	(bad)  
   1400565f7:	(bad)  
   1400565f8:	(bad)  
   1400565f9:	(bad)  
   1400565fa:	(bad)  
   1400565fb:	(bad)  
   1400565fc:	(bad)  
   1400565fd:	(bad)  
   1400565fe:	(bad)  
   1400565ff:	(bad)  
   140056600:	(bad)  
   140056601:	(bad)  
   140056602:	(bad)  
   140056603:	inc    DWORD PTR [rax]
   140056605:	add    BYTE PTR [rax],al
   140056607:	add    BYTE PTR [rax],0x0
   14005660a:	add    BYTE PTR [rax-0x1],al
   140056610:	(bad)  
   140056611:	(bad)  
   140056612:	(bad)  
   140056613:	(bad)  
   140056614:	(bad)  
   140056615:	(bad)  
   140056616:	(bad)  
   140056617:	(bad)  
   140056618:	(bad)  
   140056619:	(bad)  
   14005661a:	(bad)  
   14005661b:	(bad)  
   14005661c:	(bad)  
   14005661d:	(bad)  
   14005661e:	(bad)  
   14005661f:	(bad)  
   140056620:	(bad)  
   140056621:	(bad)  
   140056622:	(bad)  
   140056623:	inc    DWORD PTR [rax]
   140056625:	add    BYTE PTR [rax],al
   140056627:	add    BYTE PTR [rax],0x0
   14005662a:	add    BYTE PTR [rax-0x1],al
   140056630:	(bad)  
   140056631:	(bad)  
   140056632:	(bad)  
   140056633:	(bad)  
   140056634:	(bad)  
   140056635:	(bad)  
   140056636:	(bad)  
   140056637:	(bad)  
   140056638:	(bad)  
   140056639:	(bad)  
   14005663a:	(bad)  
   14005663b:	(bad)  
   14005663c:	(bad)  
   14005663d:	(bad)  
   14005663e:	(bad)  
   14005663f:	(bad)  
   140056640:	(bad)  
   140056641:	(bad)  
   140056642:	(bad)  
   140056643:	inc    DWORD PTR [rax]
   140056645:	add    BYTE PTR [rax],al
   140056647:	add    BYTE PTR [rax],0x0
   14005664a:	add    BYTE PTR [rax-0x1],al
   140056650:	(bad)  
   140056651:	(bad)  
   140056652:	(bad)  
   140056653:	(bad)  
   140056654:	(bad)  
   140056655:	(bad)  
   140056656:	(bad)  
   140056657:	(bad)  
   140056658:	(bad)  
   140056659:	(bad)  
   14005665a:	(bad)  
   14005665b:	(bad)  
   14005665c:	(bad)  
   14005665d:	(bad)  
   14005665e:	(bad)  
   14005665f:	(bad)  
   140056660:	(bad)  
   140056661:	(bad)  
   140056662:	(bad)  
   140056663:	inc    DWORD PTR [rax]
   140056665:	add    BYTE PTR [rax],al
   140056667:	add    BYTE PTR [rax],0x0
   14005666a:	add    BYTE PTR [rax-0x1],al
   140056670:	(bad)  
   140056671:	(bad)  
   140056672:	(bad)  
   140056673:	(bad)  
   140056674:	(bad)  
   140056675:	(bad)  
   140056676:	(bad)  
   140056677:	(bad)  
   140056678:	(bad)  
   140056679:	(bad)  
   14005667a:	(bad)  
   14005667b:	inc    DWORD PTR [rax]
   14005667d:	add    BYTE PTR [rax],al
   14005667f:	add    BYTE PTR [rax],0x0
	...
   140056692:	add    BYTE PTR [rax-0x1],al
   140056698:	(bad)  
   140056699:	(bad)  
   14005669a:	(bad)  
   14005669b:	(bad)  
   14005669c:	(bad)  
   14005669d:	(bad)  
   14005669e:	(bad)  
   14005669f:	(bad)  
   1400566a0:	(bad)  
   1400566a1:	(bad)  
   1400566a2:	(bad)  
   1400566a3:	inc    DWORD PTR [rax]
   1400566a5:	add    BYTE PTR [rax],al
   1400566a7:	add    BYTE PTR [rax],0x0
   1400566aa:	add    BYTE PTR [rax-0x1],al
   1400566b0:	(bad)  
   1400566b1:	(bad)  
   1400566b2:	(bad)  
   1400566b3:	(bad)  
   1400566b4:	(bad)  
   1400566b5:	(bad)  
   1400566b6:	(bad)  
   1400566b7:	(bad)  
   1400566b8:	(bad)  
   1400566b9:	(bad)  
   1400566ba:	(bad)  
   1400566bb:	(bad)  
   1400566bc:	(bad)  
   1400566bd:	(bad)  
   1400566be:	(bad)  
   1400566bf:	(bad)  
   1400566c0:	(bad)  
   1400566c1:	(bad)  
   1400566c2:	(bad)  
   1400566c3:	inc    DWORD PTR [rax]
   1400566c5:	add    BYTE PTR [rax],al
   1400566c7:	add    BYTE PTR [rax],0x0
   1400566ca:	add    BYTE PTR [rax-0x1],al
   1400566d0:	(bad)  
   1400566d1:	(bad)  
   1400566d2:	(bad)  
   1400566d3:	(bad)  
   1400566d4:	(bad)  
   1400566d5:	(bad)  
   1400566d6:	(bad)  
   1400566d7:	(bad)  
   1400566d8:	(bad)  
   1400566d9:	(bad)  
   1400566da:	(bad)  
   1400566db:	(bad)  
   1400566dc:	(bad)  
   1400566dd:	(bad)  
   1400566de:	(bad)  
   1400566df:	(bad)  
   1400566e0:	(bad)  
   1400566e1:	(bad)  
   1400566e2:	(bad)  
   1400566e3:	inc    DWORD PTR [rax]
   1400566e5:	add    BYTE PTR [rax],al
   1400566e7:	add    BYTE PTR [rax],0x0
   1400566ea:	add    BYTE PTR [rax-0x1],al
   1400566f0:	(bad)  
   1400566f1:	(bad)  
   1400566f2:	(bad)  
   1400566f3:	(bad)  
   1400566f4:	(bad)  
   1400566f5:	(bad)  
   1400566f6:	(bad)  
   1400566f7:	(bad)  
   1400566f8:	(bad)  
   1400566f9:	(bad)  
   1400566fa:	(bad)  
   1400566fb:	(bad)  
   1400566fc:	(bad)  
   1400566fd:	(bad)  
   1400566fe:	(bad)  
   1400566ff:	(bad)  
   140056700:	(bad)  
   140056701:	(bad)  
   140056702:	(bad)  
   140056703:	inc    DWORD PTR [rax]
   140056705:	add    BYTE PTR [rax],al
   140056707:	add    BYTE PTR [rax],0x0
   14005670a:	add    BYTE PTR [rax-0x1],al
   140056710:	(bad)  
   140056711:	(bad)  
   140056712:	(bad)  
   140056713:	(bad)  
   140056714:	(bad)  
   140056715:	(bad)  
   140056716:	(bad)  
   140056717:	(bad)  
   140056718:	(bad)  
   140056719:	(bad)  
   14005671a:	(bad)  
   14005671b:	(bad)  
   14005671c:	(bad)  
   14005671d:	(bad)  
   14005671e:	(bad)  
   14005671f:	(bad)  
   140056720:	(bad)  
   140056721:	(bad)  
   140056722:	(bad)  
   140056723:	inc    DWORD PTR [rax]
   140056725:	add    BYTE PTR [rax],al
   140056727:	add    BYTE PTR [rax],0x0
   14005672a:	add    BYTE PTR [rax-0x1],al
   140056730:	(bad)  
   140056731:	(bad)  
   140056732:	(bad)  
   140056733:	(bad)  
   140056734:	(bad)  
   140056735:	(bad)  
   140056736:	(bad)  
   140056737:	(bad)  
   140056738:	(bad)  
   140056739:	(bad)  
   14005673a:	(bad)  
   14005673b:	(bad)  
   14005673c:	(bad)  
   14005673d:	(bad)  
   14005673e:	(bad)  
   14005673f:	(bad)  
   140056740:	(bad)  
   140056741:	(bad)  
   140056742:	(bad)  
   140056743:	inc    DWORD PTR [rax]
   140056745:	add    BYTE PTR [rax],al
   140056747:	add    BYTE PTR [rax],0x0
   14005674a:	add    BYTE PTR [rax-0x1],al
   140056750:	(bad)  
   140056751:	(bad)  
   140056752:	(bad)  
   140056753:	(bad)  
   140056754:	(bad)  
   140056755:	(bad)  
   140056756:	(bad)  
   140056757:	(bad)  
   140056758:	(bad)  
   140056759:	(bad)  
   14005675a:	(bad)  
   14005675b:	(bad)  
   14005675c:	(bad)  
   14005675d:	(bad)  
   14005675e:	(bad)  
   14005675f:	(bad)  
   140056760:	(bad)  
   140056761:	(bad)  
   140056762:	(bad)  
   140056763:	inc    DWORD PTR [rax]
   140056765:	add    BYTE PTR [rax],al
   140056767:	add    BYTE PTR [rax],0x0
   14005676a:	add    BYTE PTR [rax-0x1],al
   140056770:	(bad)  
   140056771:	(bad)  
   140056772:	(bad)  
   140056773:	(bad)  
   140056774:	(bad)  
   140056775:	(bad)  
   140056776:	(bad)  
   140056777:	(bad)  
   140056778:	(bad)  
   140056779:	(bad)  
   14005677a:	(bad)  
   14005677b:	inc    DWORD PTR [rax]
   14005677d:	add    BYTE PTR [rax],al
   14005677f:	add    BYTE PTR [rax],0x0
	...
   140056792:	add    BYTE PTR [rax-0x1],al
   140056798:	(bad)  
   140056799:	(bad)  
   14005679a:	(bad)  
   14005679b:	(bad)  
   14005679c:	(bad)  
   14005679d:	(bad)  
   14005679e:	(bad)  
   14005679f:	(bad)  
   1400567a0:	(bad)  
   1400567a1:	(bad)  
   1400567a2:	(bad)  
   1400567a3:	inc    DWORD PTR [rax]
   1400567a5:	add    BYTE PTR [rax],al
   1400567a7:	add    BYTE PTR [rax],0x0
   1400567aa:	add    BYTE PTR [rax-0x1],al
   1400567b0:	(bad)  
   1400567b1:	(bad)  
   1400567b2:	(bad)  
   1400567b3:	(bad)  
   1400567b4:	(bad)  
   1400567b5:	(bad)  
   1400567b6:	(bad)  
   1400567b7:	(bad)  
   1400567b8:	(bad)  
   1400567b9:	(bad)  
   1400567ba:	(bad)  
   1400567bb:	(bad)  
   1400567bc:	(bad)  
   1400567bd:	(bad)  
   1400567be:	(bad)  
   1400567bf:	(bad)  
   1400567c0:	(bad)  
   1400567c1:	(bad)  
   1400567c2:	(bad)  
   1400567c3:	inc    DWORD PTR [rax]
   1400567c5:	add    BYTE PTR [rax],al
   1400567c7:	add    BYTE PTR [rax],0x0
   1400567ca:	add    BYTE PTR [rax-0x1],al
   1400567d0:	(bad)  
   1400567d1:	(bad)  
   1400567d2:	(bad)  
   1400567d3:	(bad)  
   1400567d4:	(bad)  
   1400567d5:	(bad)  
   1400567d6:	(bad)  
   1400567d7:	(bad)  
   1400567d8:	(bad)  
   1400567d9:	(bad)  
   1400567da:	(bad)  
   1400567db:	(bad)  
   1400567dc:	(bad)  
   1400567dd:	(bad)  
   1400567de:	(bad)  
   1400567df:	(bad)  
   1400567e0:	(bad)  
   1400567e1:	(bad)  
   1400567e2:	(bad)  
   1400567e3:	inc    DWORD PTR [rax]
   1400567e5:	add    BYTE PTR [rax],al
   1400567e7:	add    BYTE PTR [rax],0x0
   1400567ea:	add    BYTE PTR [rax-0x1],al
   1400567f0:	(bad)  
   1400567f1:	(bad)  
   1400567f2:	(bad)  
   1400567f3:	(bad)  
   1400567f4:	(bad)  
   1400567f5:	(bad)  
   1400567f6:	(bad)  
   1400567f7:	(bad)  
   1400567f8:	(bad)  
   1400567f9:	(bad)  
   1400567fa:	(bad)  
   1400567fb:	(bad)  
   1400567fc:	(bad)  
   1400567fd:	(bad)  
   1400567fe:	(bad)  
   1400567ff:	(bad)  
   140056800:	(bad)  
   140056801:	(bad)  
   140056802:	(bad)  
   140056803:	inc    DWORD PTR [rax]
   140056805:	add    BYTE PTR [rax],al
   140056807:	add    BYTE PTR [rax],0x0
   14005680a:	add    BYTE PTR [rax-0x1],al
   140056810:	(bad)  
   140056811:	(bad)  
   140056812:	(bad)  
   140056813:	(bad)  
   140056814:	(bad)  
   140056815:	(bad)  
   140056816:	(bad)  
   140056817:	(bad)  
   140056818:	(bad)  
   140056819:	(bad)  
   14005681a:	(bad)  
   14005681b:	(bad)  
   14005681c:	(bad)  
   14005681d:	(bad)  
   14005681e:	(bad)  
   14005681f:	(bad)  
   140056820:	(bad)  
   140056821:	(bad)  
   140056822:	(bad)  
   140056823:	inc    DWORD PTR [rax]
   140056825:	add    BYTE PTR [rax],al
   140056827:	add    BYTE PTR [rax],0x0
   14005682a:	add    BYTE PTR [rax-0x1],al
   140056830:	(bad)  
   140056831:	(bad)  
   140056832:	(bad)  
   140056833:	(bad)  
   140056834:	(bad)  
   140056835:	(bad)  
   140056836:	(bad)  
   140056837:	(bad)  
   140056838:	(bad)  
   140056839:	(bad)  
   14005683a:	(bad)  
   14005683b:	(bad)  
   14005683c:	(bad)  
   14005683d:	(bad)  
   14005683e:	(bad)  
   14005683f:	(bad)  
   140056840:	(bad)  
   140056841:	(bad)  
   140056842:	(bad)  
   140056843:	inc    DWORD PTR [rax]
   140056845:	add    BYTE PTR [rax],al
   140056847:	add    BYTE PTR [rax],0x0
   14005684a:	add    BYTE PTR [rax-0x1],al
   140056850:	(bad)  
   140056851:	(bad)  
   140056852:	(bad)  
   140056853:	(bad)  
   140056854:	(bad)  
   140056855:	(bad)  
   140056856:	(bad)  
   140056857:	(bad)  
   140056858:	(bad)  
   140056859:	(bad)  
   14005685a:	(bad)  
   14005685b:	(bad)  
   14005685c:	(bad)  
   14005685d:	(bad)  
   14005685e:	(bad)  
   14005685f:	(bad)  
   140056860:	(bad)  
   140056861:	(bad)  
   140056862:	(bad)  
   140056863:	inc    DWORD PTR [rax]
   140056865:	add    BYTE PTR [rax],al
   140056867:	add    BYTE PTR [rax],0x0
   14005686a:	add    BYTE PTR [rax-0x1],al
   140056870:	(bad)  
   140056871:	(bad)  
   140056872:	(bad)  
   140056873:	(bad)  
   140056874:	(bad)  
   140056875:	(bad)  
   140056876:	(bad)  
   140056877:	(bad)  
   140056878:	(bad)  
   140056879:	(bad)  
   14005687a:	(bad)  
   14005687b:	inc    DWORD PTR [rax]
   14005687d:	add    BYTE PTR [rax],al
   14005687f:	add    BYTE PTR [rax],0x0
	...
   140056892:	add    BYTE PTR [rax-0x1],al
   140056898:	(bad)  
   140056899:	(bad)  
   14005689a:	(bad)  
   14005689b:	(bad)  
   14005689c:	(bad)  
   14005689d:	(bad)  
   14005689e:	(bad)  
   14005689f:	(bad)  
   1400568a0:	(bad)  
   1400568a1:	(bad)  
   1400568a2:	(bad)  
   1400568a3:	inc    DWORD PTR [rax]
   1400568a5:	add    BYTE PTR [rax],al
   1400568a7:	add    BYTE PTR [rax],0x0
   1400568aa:	add    BYTE PTR [rax-0x1],al
   1400568b0:	(bad)  
   1400568b1:	(bad)  
   1400568b2:	(bad)  
   1400568b3:	(bad)  
   1400568b4:	(bad)  
   1400568b5:	(bad)  
   1400568b6:	(bad)  
   1400568b7:	(bad)  
   1400568b8:	(bad)  
   1400568b9:	(bad)  
   1400568ba:	(bad)  
   1400568bb:	(bad)  
   1400568bc:	(bad)  
   1400568bd:	(bad)  
   1400568be:	(bad)  
   1400568bf:	(bad)  
   1400568c0:	(bad)  
   1400568c1:	(bad)  
   1400568c2:	(bad)  
   1400568c3:	inc    DWORD PTR [rax]
   1400568c5:	add    BYTE PTR [rax],al
   1400568c7:	add    BYTE PTR [rax],0x0
   1400568ca:	add    BYTE PTR [rax-0x1],al
   1400568d0:	(bad)  
   1400568d1:	(bad)  
   1400568d2:	(bad)  
   1400568d3:	(bad)  
   1400568d4:	(bad)  
   1400568d5:	(bad)  
   1400568d6:	(bad)  
   1400568d7:	(bad)  
   1400568d8:	(bad)  
   1400568d9:	(bad)  
   1400568da:	(bad)  
   1400568db:	(bad)  
   1400568dc:	(bad)  
   1400568dd:	(bad)  
   1400568de:	(bad)  
   1400568df:	(bad)  
   1400568e0:	(bad)  
   1400568e1:	(bad)  
   1400568e2:	(bad)  
   1400568e3:	inc    DWORD PTR [rax]
   1400568e5:	add    BYTE PTR [rax],al
   1400568e7:	add    BYTE PTR [rax],0x0
   1400568ea:	add    BYTE PTR [rax-0x1],al
   1400568f0:	(bad)  
   1400568f1:	(bad)  
   1400568f2:	(bad)  
   1400568f3:	(bad)  
   1400568f4:	(bad)  
   1400568f5:	(bad)  
   1400568f6:	(bad)  
   1400568f7:	(bad)  
   1400568f8:	(bad)  
   1400568f9:	(bad)  
   1400568fa:	(bad)  
   1400568fb:	(bad)  
   1400568fc:	(bad)  
   1400568fd:	(bad)  
   1400568fe:	(bad)  
   1400568ff:	(bad)  
   140056900:	(bad)  
   140056901:	(bad)  
   140056902:	(bad)  
   140056903:	inc    DWORD PTR [rax]
   140056905:	add    BYTE PTR [rax],al
   140056907:	add    BYTE PTR [rax],0x0
   14005690a:	add    BYTE PTR [rax-0x1],al
   140056910:	(bad)  
   140056911:	(bad)  
   140056912:	(bad)  
   140056913:	(bad)  
   140056914:	(bad)  
   140056915:	(bad)  
   140056916:	(bad)  
   140056917:	(bad)  
   140056918:	(bad)  
   140056919:	(bad)  
   14005691a:	(bad)  
   14005691b:	(bad)  
   14005691c:	(bad)  
   14005691d:	(bad)  
   14005691e:	(bad)  
   14005691f:	(bad)  
   140056920:	(bad)  
   140056921:	(bad)  
   140056922:	(bad)  
   140056923:	inc    DWORD PTR [rax]
   140056925:	add    BYTE PTR [rax],al
   140056927:	add    BYTE PTR [rax],0x0
   14005692a:	add    BYTE PTR [rax-0x1],al
   140056930:	(bad)  
   140056931:	(bad)  
   140056932:	(bad)  
   140056933:	(bad)  
   140056934:	(bad)  
   140056935:	(bad)  
   140056936:	(bad)  
   140056937:	(bad)  
   140056938:	(bad)  
   140056939:	(bad)  
   14005693a:	(bad)  
   14005693b:	(bad)  
   14005693c:	(bad)  
   14005693d:	(bad)  
   14005693e:	(bad)  
   14005693f:	(bad)  
   140056940:	(bad)  
   140056941:	(bad)  
   140056942:	(bad)  
   140056943:	inc    DWORD PTR [rax]
   140056945:	add    BYTE PTR [rax],al
   140056947:	add    BYTE PTR [rax],0x0
   14005694a:	add    BYTE PTR [rax-0x1],al
   140056950:	(bad)  
   140056951:	(bad)  
   140056952:	(bad)  
   140056953:	(bad)  
   140056954:	(bad)  
   140056955:	(bad)  
   140056956:	(bad)  
   140056957:	(bad)  
   140056958:	(bad)  
   140056959:	(bad)  
   14005695a:	(bad)  
   14005695b:	(bad)  
   14005695c:	(bad)  
   14005695d:	(bad)  
   14005695e:	(bad)  
   14005695f:	(bad)  
   140056960:	(bad)  
   140056961:	(bad)  
   140056962:	(bad)  
   140056963:	inc    DWORD PTR [rax]
   140056965:	add    BYTE PTR [rax],al
   140056967:	add    BYTE PTR [rax],0x0
   14005696a:	add    BYTE PTR [rax-0x1],al
   140056970:	(bad)  
   140056971:	(bad)  
   140056972:	(bad)  
   140056973:	(bad)  
   140056974:	(bad)  
   140056975:	(bad)  
   140056976:	(bad)  
   140056977:	(bad)  
   140056978:	(bad)  
   140056979:	(bad)  
   14005697a:	(bad)  
   14005697b:	inc    DWORD PTR [rax]
   14005697d:	add    BYTE PTR [rax],al
   14005697f:	add    BYTE PTR [rax],0x0
	...
   140056992:	add    BYTE PTR [rax-0x1],al
   140056998:	(bad)  
   140056999:	(bad)  
   14005699a:	(bad)  
   14005699b:	(bad)  
   14005699c:	(bad)  
   14005699d:	(bad)  
   14005699e:	(bad)  
   14005699f:	(bad)  
   1400569a0:	(bad)  
   1400569a1:	(bad)  
   1400569a2:	(bad)  
   1400569a3:	inc    DWORD PTR [rax]
   1400569a5:	add    BYTE PTR [rax],al
   1400569a7:	add    BYTE PTR [rax],0x0
   1400569aa:	add    BYTE PTR [rax-0x1],al
   1400569b0:	(bad)  
   1400569b1:	(bad)  
   1400569b2:	(bad)  
   1400569b3:	(bad)  
   1400569b4:	(bad)  
   1400569b5:	(bad)  
   1400569b6:	(bad)  
   1400569b7:	(bad)  
   1400569b8:	(bad)  
   1400569b9:	(bad)  
   1400569ba:	(bad)  
   1400569bb:	(bad)  
   1400569bc:	(bad)  
   1400569bd:	(bad)  
   1400569be:	(bad)  
   1400569bf:	(bad)  
   1400569c0:	(bad)  
   1400569c1:	(bad)  
   1400569c2:	(bad)  
   1400569c3:	inc    DWORD PTR [rax]
   1400569c5:	add    BYTE PTR [rax],al
   1400569c7:	add    BYTE PTR [rax],0x0
   1400569ca:	add    BYTE PTR [rax-0x1],al
   1400569d0:	(bad)  
   1400569d1:	(bad)  
   1400569d2:	(bad)  
   1400569d3:	(bad)  
   1400569d4:	(bad)  
   1400569d5:	(bad)  
   1400569d6:	(bad)  
   1400569d7:	(bad)  
   1400569d8:	(bad)  
   1400569d9:	(bad)  
   1400569da:	(bad)  
   1400569db:	(bad)  
   1400569dc:	(bad)  
   1400569dd:	(bad)  
   1400569de:	(bad)  
   1400569df:	(bad)  
   1400569e0:	(bad)  
   1400569e1:	(bad)  
   1400569e2:	(bad)  
   1400569e3:	inc    DWORD PTR [rax]
   1400569e5:	add    BYTE PTR [rax],al
   1400569e7:	add    BYTE PTR [rax],0x0
   1400569ea:	add    BYTE PTR [rax-0x1],al
   1400569f0:	(bad)  
   1400569f1:	(bad)  
   1400569f2:	(bad)  
   1400569f3:	(bad)  
   1400569f4:	(bad)  
   1400569f5:	(bad)  
   1400569f6:	(bad)  
   1400569f7:	(bad)  
   1400569f8:	(bad)  
   1400569f9:	(bad)  
   1400569fa:	(bad)  
   1400569fb:	(bad)  
   1400569fc:	(bad)  
   1400569fd:	(bad)  
   1400569fe:	(bad)  
   1400569ff:	(bad)  
   140056a00:	(bad)  
   140056a01:	(bad)  
   140056a02:	(bad)  
   140056a03:	inc    DWORD PTR [rax]
   140056a05:	add    BYTE PTR [rax],al
   140056a07:	add    BYTE PTR [rax],0x0
   140056a0a:	add    BYTE PTR [rax-0x1],al
   140056a10:	(bad)  
   140056a11:	(bad)  
   140056a12:	(bad)  
   140056a13:	(bad)  
   140056a14:	(bad)  
   140056a15:	(bad)  
   140056a16:	(bad)  
   140056a17:	(bad)  
   140056a18:	(bad)  
   140056a19:	(bad)  
   140056a1a:	(bad)  
   140056a1b:	(bad)  
   140056a1c:	(bad)  
   140056a1d:	(bad)  
   140056a1e:	(bad)  
   140056a1f:	(bad)  
   140056a20:	(bad)  
   140056a21:	(bad)  
   140056a22:	(bad)  
   140056a23:	inc    DWORD PTR [rax]
   140056a25:	add    BYTE PTR [rax],al
   140056a27:	add    BYTE PTR [rax],0x0
   140056a2a:	add    BYTE PTR [rax-0x1],al
   140056a30:	(bad)  
   140056a31:	(bad)  
   140056a32:	(bad)  
   140056a33:	(bad)  
   140056a34:	(bad)  
   140056a35:	(bad)  
   140056a36:	(bad)  
   140056a37:	(bad)  
   140056a38:	(bad)  
   140056a39:	(bad)  
   140056a3a:	(bad)  
   140056a3b:	(bad)  
   140056a3c:	(bad)  
   140056a3d:	(bad)  
   140056a3e:	(bad)  
   140056a3f:	(bad)  
   140056a40:	(bad)  
   140056a41:	(bad)  
   140056a42:	(bad)  
   140056a43:	inc    DWORD PTR [rax]
   140056a45:	add    BYTE PTR [rax],al
   140056a47:	add    BYTE PTR [rax],0x0
   140056a4a:	add    BYTE PTR [rax-0x1],al
   140056a50:	(bad)  
   140056a51:	(bad)  
   140056a52:	(bad)  
   140056a53:	(bad)  
   140056a54:	(bad)  
   140056a55:	(bad)  
   140056a56:	(bad)  
   140056a57:	(bad)  
   140056a58:	(bad)  
   140056a59:	(bad)  
   140056a5a:	(bad)  
   140056a5b:	(bad)  
   140056a5c:	(bad)  
   140056a5d:	(bad)  
   140056a5e:	(bad)  
   140056a5f:	(bad)  
   140056a60:	(bad)  
   140056a61:	(bad)  
   140056a62:	(bad)  
   140056a63:	inc    DWORD PTR [rax]
   140056a65:	add    BYTE PTR [rax],al
   140056a67:	add    BYTE PTR [rax],0x0
   140056a6a:	add    BYTE PTR [rax-0x1],al
   140056a70:	(bad)  
   140056a71:	(bad)  
   140056a72:	(bad)  
   140056a73:	(bad)  
   140056a74:	(bad)  
   140056a75:	(bad)  
   140056a76:	(bad)  
   140056a77:	(bad)  
   140056a78:	(bad)  
   140056a79:	(bad)  
   140056a7a:	(bad)  
   140056a7b:	inc    DWORD PTR [rax]
   140056a7d:	add    BYTE PTR [rax],al
   140056a7f:	add    BYTE PTR [rax],0x0
	...
   140056a92:	add    BYTE PTR [rax-0x1],al
   140056a98:	(bad)  
   140056a99:	(bad)  
   140056a9a:	(bad)  
   140056a9b:	(bad)  
   140056a9c:	(bad)  
   140056a9d:	(bad)  
   140056a9e:	(bad)  
   140056a9f:	(bad)  
   140056aa0:	(bad)  
   140056aa1:	(bad)  
   140056aa2:	(bad)  
   140056aa3:	inc    DWORD PTR [rax]
   140056aa5:	add    BYTE PTR [rax],al
   140056aa7:	add    BYTE PTR [rax],0x0
   140056aaa:	add    BYTE PTR [rax-0x80000000],al
   140056ab0:	add    BYTE PTR [rax],al
   140056ab2:	add    BYTE PTR [rax-0x80000000],al
   140056ab8:	add    BYTE PTR [rax],al
   140056aba:	add    BYTE PTR [rax-0x80000000],al
   140056ac0:	add    BYTE PTR [rax],al
   140056ac2:	add    BYTE PTR [rax-0x80000000],al
   140056ac8:	add    BYTE PTR [rax],al
   140056aca:	add    BYTE PTR [rax-0x80000000],al
   140056ad0:	add    BYTE PTR [rax],al
   140056ad2:	add    BYTE PTR [rax-0x80000000],al
   140056ad8:	add    BYTE PTR [rax],al
   140056ada:	add    BYTE PTR [rax-0x80000000],al
   140056ae0:	add    BYTE PTR [rax],al
   140056ae2:	add    BYTE PTR [rax-0x80000000],al
   140056ae8:	add    BYTE PTR [rax],al
   140056aea:	add    BYTE PTR [rax-0x80000000],al
   140056af0:	add    BYTE PTR [rax],al
   140056af2:	add    BYTE PTR [rax-0x80000000],al
   140056af8:	add    BYTE PTR [rax],al
   140056afa:	add    BYTE PTR [rax-0x80000000],al
   140056b00:	add    BYTE PTR [rax],al
   140056b02:	add    BYTE PTR [rax-0x80000000],al
   140056b08:	add    BYTE PTR [rax],al
   140056b0a:	add    BYTE PTR [rax-0x80000000],al
   140056b10:	add    BYTE PTR [rax],al
   140056b12:	add    BYTE PTR [rax-0x80000000],al
   140056b18:	add    BYTE PTR [rax],al
   140056b1a:	add    BYTE PTR [rax-0x80000000],al
   140056b20:	add    BYTE PTR [rax],al
   140056b22:	add    BYTE PTR [rax-0x80000000],al
   140056b28:	add    BYTE PTR [rax],al
   140056b2a:	add    BYTE PTR [rax-0x80000000],al
   140056b30:	add    BYTE PTR [rax],al
   140056b32:	add    BYTE PTR [rax-0x80000000],al
   140056b38:	add    BYTE PTR [rax],al
   140056b3a:	add    BYTE PTR [rax-0x80000000],al
   140056b40:	add    BYTE PTR [rax],al
   140056b42:	add    BYTE PTR [rax-0x80000000],al
   140056b48:	add    BYTE PTR [rax],al
   140056b4a:	add    BYTE PTR [rax-0x80000000],al
   140056b50:	add    BYTE PTR [rax],al
   140056b52:	add    BYTE PTR [rax-0x80000000],al
   140056b58:	add    BYTE PTR [rax],al
   140056b5a:	add    BYTE PTR [rax-0x80000000],al
   140056b60:	add    BYTE PTR [rax],al
   140056b62:	add    BYTE PTR [rax-0x80000000],al
   140056b68:	add    BYTE PTR [rax],al
   140056b6a:	add    BYTE PTR [rax-0x1],al
   140056b70:	(bad)  
   140056b71:	(bad)  
   140056b72:	(bad)  
   140056b73:	(bad)  
   140056b74:	(bad)  
   140056b75:	(bad)  
   140056b76:	(bad)  
   140056b77:	(bad)  
   140056b78:	(bad)  
   140056b79:	(bad)  
   140056b7a:	(bad)  
   140056b7b:	inc    DWORD PTR [rax]
   140056b7d:	add    BYTE PTR [rax],al
   140056b7f:	add    BYTE PTR [rax],0x0
	...
   140056b92:	add    BYTE PTR [rax-0x1],al
   140056b98:	(bad)  
   140056b99:	(bad)  
   140056b9a:	(bad)  
   140056b9b:	(bad)  
   140056b9c:	(bad)  
   140056b9d:	(bad)  
   140056b9e:	(bad)  
   140056b9f:	(bad)  
   140056ba0:	(bad)  
   140056ba1:	(bad)  
   140056ba2:	(bad)  
   140056ba3:	inc    DWORD PTR [rax]
   140056ba5:	add    BYTE PTR [rax],al
   140056ba7:	add    BYTE PTR [rax],0x0
   140056baa:	add    BYTE PTR [rax-0x80000000],al
   140056bb0:	add    BYTE PTR [rax],al
   140056bb2:	add    BYTE PTR [rax-0x80000000],al
   140056bb8:	add    BYTE PTR [rax],al
   140056bba:	add    BYTE PTR [rax-0x80000000],al
   140056bc0:	add    BYTE PTR [rax],al
   140056bc2:	add    BYTE PTR [rax-0x80000000],al
   140056bc8:	add    BYTE PTR [rax],al
   140056bca:	add    BYTE PTR [rax-0x80000000],al
   140056bd0:	add    BYTE PTR [rax],al
   140056bd2:	add    BYTE PTR [rax-0x80000000],al
   140056bd8:	add    BYTE PTR [rax],al
   140056bda:	add    BYTE PTR [rax-0x80000000],al
   140056be0:	add    BYTE PTR [rax],al
   140056be2:	add    BYTE PTR [rax-0x80000000],al
   140056be8:	add    BYTE PTR [rax],al
   140056bea:	add    BYTE PTR [rax-0x80000000],al
   140056bf0:	add    BYTE PTR [rax],al
   140056bf2:	add    BYTE PTR [rax-0x80000000],al
   140056bf8:	add    BYTE PTR [rax],al
   140056bfa:	add    BYTE PTR [rax-0x80000000],al
   140056c00:	add    BYTE PTR [rax],al
   140056c02:	add    BYTE PTR [rax-0x80000000],al
   140056c08:	add    BYTE PTR [rax],al
   140056c0a:	add    BYTE PTR [rax-0x80000000],al
   140056c10:	add    BYTE PTR [rax],al
   140056c12:	add    BYTE PTR [rax-0x80000000],al
   140056c18:	add    BYTE PTR [rax],al
   140056c1a:	add    BYTE PTR [rax-0x80000000],al
   140056c20:	add    BYTE PTR [rax],al
   140056c22:	add    BYTE PTR [rax-0x80000000],al
   140056c28:	add    BYTE PTR [rax],al
   140056c2a:	add    BYTE PTR [rax-0x80000000],al
   140056c30:	add    BYTE PTR [rax],al
   140056c32:	add    BYTE PTR [rax-0x80000000],al
   140056c38:	add    BYTE PTR [rax],al
   140056c3a:	add    BYTE PTR [rax-0x80000000],al
   140056c40:	add    BYTE PTR [rax],al
   140056c42:	add    BYTE PTR [rax-0x80000000],al
   140056c48:	add    BYTE PTR [rax],al
   140056c4a:	add    BYTE PTR [rax-0x80000000],al
   140056c50:	add    BYTE PTR [rax],al
   140056c52:	add    BYTE PTR [rax-0x80000000],al
   140056c58:	add    BYTE PTR [rax],al
   140056c5a:	add    BYTE PTR [rax-0x80000000],al
   140056c60:	add    BYTE PTR [rax],al
   140056c62:	add    BYTE PTR [rax-0x80000000],al
   140056c68:	add    BYTE PTR [rax],al
   140056c6a:	add    BYTE PTR [rax-0x1],al
   140056c70:	(bad)  
   140056c71:	(bad)  
   140056c72:	(bad)  
   140056c73:	(bad)  
   140056c74:	(bad)  
   140056c75:	(bad)  
   140056c76:	(bad)  
   140056c77:	(bad)  
   140056c78:	(bad)  
   140056c79:	(bad)  
   140056c7a:	(bad)  
   140056c7b:	inc    DWORD PTR [rax]
   140056c7d:	add    BYTE PTR [rax],al
   140056c7f:	add    BYTE PTR [rax],0x0
	...
   140056c92:	add    BYTE PTR [rax-0x1],al
   140056c98:	(bad)  
   140056c99:	(bad)  
   140056c9a:	(bad)  
   140056c9b:	(bad)  
   140056c9c:	(bad)  
   140056c9d:	(bad)  
   140056c9e:	(bad)  
   140056c9f:	(bad)  
   140056ca0:	(bad)  
   140056ca1:	(bad)  
   140056ca2:	(bad)  
   140056ca3:	inc    DWORD PTR [rax]
   140056ca5:	add    BYTE PTR [rax],al
   140056ca7:	add    BYTE PTR [rax],0x0
   140056caa:	add    BYTE PTR [rax-0x1],al
   140056cb0:	(bad)  
   140056cb1:	(bad)  
   140056cb2:	(bad)  
   140056cb3:	(bad)  
   140056cb4:	(bad)  
   140056cb5:	(bad)  
   140056cb6:	(bad)  
   140056cb7:	(bad)  
   140056cb8:	(bad)  
   140056cb9:	(bad)  
   140056cba:	(bad)  
   140056cbb:	(bad)  
   140056cbc:	(bad)  
   140056cbd:	(bad)  
   140056cbe:	(bad)  
   140056cbf:	(bad)  
   140056cc0:	(bad)  
   140056cc1:	(bad)  
   140056cc2:	(bad)  
   140056cc3:	inc    DWORD PTR [rax]
   140056cc5:	add    BYTE PTR [rax],al
   140056cc7:	add    BYTE PTR [rax],0x0
   140056cca:	add    BYTE PTR [rax-0x1],al
   140056cd0:	(bad)  
   140056cd1:	(bad)  
   140056cd2:	(bad)  
   140056cd3:	(bad)  
   140056cd4:	(bad)  
   140056cd5:	(bad)  
   140056cd6:	(bad)  
   140056cd7:	(bad)  
   140056cd8:	(bad)  
   140056cd9:	(bad)  
   140056cda:	(bad)  
   140056cdb:	(bad)  
   140056cdc:	(bad)  
   140056cdd:	(bad)  
   140056cde:	(bad)  
   140056cdf:	(bad)  
   140056ce0:	(bad)  
   140056ce1:	(bad)  
   140056ce2:	(bad)  
   140056ce3:	inc    DWORD PTR [rax]
   140056ce5:	add    BYTE PTR [rax],al
   140056ce7:	add    BYTE PTR [rax],0x0
   140056cea:	add    BYTE PTR [rax-0x1],al
   140056cf0:	(bad)  
   140056cf1:	(bad)  
   140056cf2:	(bad)  
   140056cf3:	(bad)  
   140056cf4:	(bad)  
   140056cf5:	(bad)  
   140056cf6:	(bad)  
   140056cf7:	(bad)  
   140056cf8:	(bad)  
   140056cf9:	(bad)  
   140056cfa:	(bad)  
   140056cfb:	(bad)  
   140056cfc:	(bad)  
   140056cfd:	(bad)  
   140056cfe:	(bad)  
   140056cff:	(bad)  
   140056d00:	(bad)  
   140056d01:	(bad)  
   140056d02:	(bad)  
   140056d03:	inc    DWORD PTR [rax]
   140056d05:	add    BYTE PTR [rax],al
   140056d07:	add    BYTE PTR [rax],0x0
   140056d0a:	add    BYTE PTR [rax-0x1],al
   140056d10:	(bad)  
   140056d11:	(bad)  
   140056d12:	(bad)  
   140056d13:	(bad)  
   140056d14:	(bad)  
   140056d15:	(bad)  
   140056d16:	(bad)  
   140056d17:	(bad)  
   140056d18:	(bad)  
   140056d19:	(bad)  
   140056d1a:	(bad)  
   140056d1b:	(bad)  
   140056d1c:	(bad)  
   140056d1d:	(bad)  
   140056d1e:	(bad)  
   140056d1f:	(bad)  
   140056d20:	(bad)  
   140056d21:	(bad)  
   140056d22:	(bad)  
   140056d23:	inc    DWORD PTR [rax]
   140056d25:	add    BYTE PTR [rax],al
   140056d27:	add    BYTE PTR [rax],0x0
   140056d2a:	add    BYTE PTR [rax-0x1],al
   140056d30:	(bad)  
   140056d31:	(bad)  
   140056d32:	(bad)  
   140056d33:	(bad)  
   140056d34:	(bad)  
   140056d35:	(bad)  
   140056d36:	(bad)  
   140056d37:	(bad)  
   140056d38:	(bad)  
   140056d39:	(bad)  
   140056d3a:	(bad)  
   140056d3b:	(bad)  
   140056d3c:	(bad)  
   140056d3d:	(bad)  
   140056d3e:	(bad)  
   140056d3f:	(bad)  
   140056d40:	(bad)  
   140056d41:	(bad)  
   140056d42:	(bad)  
   140056d43:	inc    DWORD PTR [rax]
   140056d45:	add    BYTE PTR [rax],al
   140056d47:	add    BYTE PTR [rax],0x0
   140056d4a:	add    BYTE PTR [rax-0x1],al
   140056d50:	(bad)  
   140056d51:	(bad)  
   140056d52:	(bad)  
   140056d53:	(bad)  
   140056d54:	(bad)  
   140056d55:	(bad)  
   140056d56:	(bad)  
   140056d57:	(bad)  
   140056d58:	(bad)  
   140056d59:	(bad)  
   140056d5a:	(bad)  
   140056d5b:	(bad)  
   140056d5c:	(bad)  
   140056d5d:	(bad)  
   140056d5e:	(bad)  
   140056d5f:	(bad)  
   140056d60:	(bad)  
   140056d61:	(bad)  
   140056d62:	(bad)  
   140056d63:	inc    DWORD PTR [rax]
   140056d65:	add    BYTE PTR [rax],al
   140056d67:	add    BYTE PTR [rax],0x0
   140056d6a:	add    BYTE PTR [rax-0x1],al
   140056d70:	(bad)  
   140056d71:	(bad)  
   140056d72:	(bad)  
   140056d73:	(bad)  
   140056d74:	(bad)  
   140056d75:	(bad)  
   140056d76:	(bad)  
   140056d77:	(bad)  
   140056d78:	(bad)  
   140056d79:	(bad)  
   140056d7a:	(bad)  
   140056d7b:	inc    DWORD PTR [rax]
   140056d7d:	add    BYTE PTR [rax],al
   140056d7f:	add    BYTE PTR [rax],0x0
	...
   140056d92:	add    BYTE PTR [rax-0x1],al
   140056d98:	(bad)  
   140056d99:	(bad)  
   140056d9a:	(bad)  
   140056d9b:	(bad)  
   140056d9c:	(bad)  
   140056d9d:	(bad)  
   140056d9e:	(bad)  
   140056d9f:	(bad)  
   140056da0:	(bad)  
   140056da1:	(bad)  
   140056da2:	(bad)  
   140056da3:	inc    DWORD PTR [rax]
   140056da5:	add    BYTE PTR [rax],al
   140056da7:	add    BYTE PTR [rax],0x0
   140056daa:	add    BYTE PTR [rax-0x1],al
   140056db0:	(bad)  
   140056db1:	(bad)  
   140056db2:	(bad)  
   140056db3:	(bad)  
   140056db4:	(bad)  
   140056db5:	(bad)  
   140056db6:	(bad)  
   140056db7:	(bad)  
   140056db8:	(bad)  
   140056db9:	(bad)  
   140056dba:	(bad)  
   140056dbb:	(bad)  
   140056dbc:	(bad)  
   140056dbd:	(bad)  
   140056dbe:	(bad)  
   140056dbf:	(bad)  
   140056dc0:	(bad)  
   140056dc1:	(bad)  
   140056dc2:	(bad)  
   140056dc3:	inc    DWORD PTR [rax]
   140056dc5:	add    BYTE PTR [rax],al
   140056dc7:	add    BYTE PTR [rax],0x0
   140056dca:	add    BYTE PTR [rax-0x1],al
   140056dd0:	(bad)  
   140056dd1:	(bad)  
   140056dd2:	(bad)  
   140056dd3:	(bad)  
   140056dd4:	(bad)  
   140056dd5:	(bad)  
   140056dd6:	(bad)  
   140056dd7:	(bad)  
   140056dd8:	(bad)  
   140056dd9:	(bad)  
   140056dda:	(bad)  
   140056ddb:	(bad)  
   140056ddc:	(bad)  
   140056ddd:	(bad)  
   140056dde:	(bad)  
   140056ddf:	(bad)  
   140056de0:	(bad)  
   140056de1:	(bad)  
   140056de2:	(bad)  
   140056de3:	inc    DWORD PTR [rax]
   140056de5:	add    BYTE PTR [rax],al
   140056de7:	add    BYTE PTR [rax],0x0
   140056dea:	add    BYTE PTR [rax-0x1],al
   140056df0:	(bad)  
   140056df1:	(bad)  
   140056df2:	(bad)  
   140056df3:	(bad)  
   140056df4:	(bad)  
   140056df5:	(bad)  
   140056df6:	(bad)  
   140056df7:	(bad)  
   140056df8:	(bad)  
   140056df9:	(bad)  
   140056dfa:	(bad)  
   140056dfb:	(bad)  
   140056dfc:	(bad)  
   140056dfd:	(bad)  
   140056dfe:	(bad)  
   140056dff:	(bad)  
   140056e00:	(bad)  
   140056e01:	(bad)  
   140056e02:	(bad)  
   140056e03:	inc    DWORD PTR [rax]
   140056e05:	add    BYTE PTR [rax],al
   140056e07:	add    BYTE PTR [rax],0x0
   140056e0a:	add    BYTE PTR [rax-0x1],al
   140056e10:	(bad)  
   140056e11:	(bad)  
   140056e12:	(bad)  
   140056e13:	(bad)  
   140056e14:	(bad)  
   140056e15:	(bad)  
   140056e16:	(bad)  
   140056e17:	(bad)  
   140056e18:	(bad)  
   140056e19:	(bad)  
   140056e1a:	(bad)  
   140056e1b:	(bad)  
   140056e1c:	(bad)  
   140056e1d:	(bad)  
   140056e1e:	(bad)  
   140056e1f:	(bad)  
   140056e20:	(bad)  
   140056e21:	(bad)  
   140056e22:	(bad)  
   140056e23:	inc    DWORD PTR [rax]
   140056e25:	add    BYTE PTR [rax],al
   140056e27:	add    BYTE PTR [rax],0x0
   140056e2a:	add    BYTE PTR [rax-0x1],al
   140056e30:	(bad)  
   140056e31:	(bad)  
   140056e32:	(bad)  
   140056e33:	(bad)  
   140056e34:	(bad)  
   140056e35:	(bad)  
   140056e36:	(bad)  
   140056e37:	(bad)  
   140056e38:	(bad)  
   140056e39:	(bad)  
   140056e3a:	(bad)  
   140056e3b:	(bad)  
   140056e3c:	(bad)  
   140056e3d:	(bad)  
   140056e3e:	(bad)  
   140056e3f:	(bad)  
   140056e40:	(bad)  
   140056e41:	(bad)  
   140056e42:	(bad)  
   140056e43:	inc    DWORD PTR [rax]
   140056e45:	add    BYTE PTR [rax],al
   140056e47:	add    BYTE PTR [rax],0x0
   140056e4a:	add    BYTE PTR [rax-0x1],al
   140056e50:	(bad)  
   140056e51:	(bad)  
   140056e52:	(bad)  
   140056e53:	(bad)  
   140056e54:	(bad)  
   140056e55:	(bad)  
   140056e56:	(bad)  
   140056e57:	(bad)  
   140056e58:	(bad)  
   140056e59:	(bad)  
   140056e5a:	(bad)  
   140056e5b:	(bad)  
   140056e5c:	(bad)  
   140056e5d:	(bad)  
   140056e5e:	(bad)  
   140056e5f:	(bad)  
   140056e60:	(bad)  
   140056e61:	(bad)  
   140056e62:	(bad)  
   140056e63:	inc    DWORD PTR [rax]
   140056e65:	add    BYTE PTR [rax],al
   140056e67:	add    BYTE PTR [rax],0x0
   140056e6a:	add    BYTE PTR [rax-0x1],al
   140056e70:	(bad)  
   140056e71:	(bad)  
   140056e72:	(bad)  
   140056e73:	(bad)  
   140056e74:	(bad)  
   140056e75:	(bad)  
   140056e76:	(bad)  
   140056e77:	(bad)  
   140056e78:	(bad)  
   140056e79:	(bad)  
   140056e7a:	(bad)  
   140056e7b:	inc    DWORD PTR [rax]
   140056e7d:	add    BYTE PTR [rax],al
   140056e7f:	add    BYTE PTR [rax],0x0
	...
   140056e92:	add    BYTE PTR [rax-0x1],al
   140056e98:	(bad)  
   140056e99:	(bad)  
   140056e9a:	(bad)  
   140056e9b:	(bad)  
   140056e9c:	(bad)  
   140056e9d:	(bad)  
   140056e9e:	(bad)  
   140056e9f:	(bad)  
   140056ea0:	(bad)  
   140056ea1:	(bad)  
   140056ea2:	(bad)  
   140056ea3:	inc    DWORD PTR [rax]
   140056ea5:	add    BYTE PTR [rax],al
   140056ea7:	add    BYTE PTR [rax],0x0
   140056eaa:	add    BYTE PTR [rax-0x1],al
   140056eb0:	(bad)  
   140056eb1:	(bad)  
   140056eb2:	(bad)  
   140056eb3:	(bad)  
   140056eb4:	(bad)  
   140056eb5:	(bad)  
   140056eb6:	(bad)  
   140056eb7:	(bad)  
   140056eb8:	(bad)  
   140056eb9:	(bad)  
   140056eba:	(bad)  
   140056ebb:	(bad)  
   140056ebc:	(bad)  
   140056ebd:	(bad)  
   140056ebe:	(bad)  
   140056ebf:	(bad)  
   140056ec0:	(bad)  
   140056ec1:	(bad)  
   140056ec2:	(bad)  
   140056ec3:	inc    DWORD PTR [rax]
   140056ec5:	add    BYTE PTR [rax],al
   140056ec7:	add    BYTE PTR [rax],0x0
   140056eca:	add    BYTE PTR [rax-0x1],al
   140056ed0:	(bad)  
   140056ed1:	(bad)  
   140056ed2:	(bad)  
   140056ed3:	(bad)  
   140056ed4:	(bad)  
   140056ed5:	(bad)  
   140056ed6:	(bad)  
   140056ed7:	(bad)  
   140056ed8:	(bad)  
   140056ed9:	(bad)  
   140056eda:	(bad)  
   140056edb:	(bad)  
   140056edc:	(bad)  
   140056edd:	(bad)  
   140056ede:	(bad)  
   140056edf:	(bad)  
   140056ee0:	(bad)  
   140056ee1:	(bad)  
   140056ee2:	(bad)  
   140056ee3:	inc    DWORD PTR [rax]
   140056ee5:	add    BYTE PTR [rax],al
   140056ee7:	add    BYTE PTR [rax],0x0
   140056eea:	add    BYTE PTR [rax-0x1],al
   140056ef0:	(bad)  
   140056ef1:	(bad)  
   140056ef2:	(bad)  
   140056ef3:	(bad)  
   140056ef4:	(bad)  
   140056ef5:	(bad)  
   140056ef6:	(bad)  
   140056ef7:	(bad)  
   140056ef8:	(bad)  
   140056ef9:	(bad)  
   140056efa:	(bad)  
   140056efb:	(bad)  
   140056efc:	(bad)  
   140056efd:	(bad)  
   140056efe:	(bad)  
   140056eff:	(bad)  
   140056f00:	(bad)  
   140056f01:	(bad)  
   140056f02:	(bad)  
   140056f03:	inc    DWORD PTR [rax]
   140056f05:	add    BYTE PTR [rax],al
   140056f07:	add    BYTE PTR [rax],0x0
   140056f0a:	add    BYTE PTR [rax-0x1],al
   140056f10:	(bad)  
   140056f11:	(bad)  
   140056f12:	(bad)  
   140056f13:	(bad)  
   140056f14:	(bad)  
   140056f15:	(bad)  
   140056f16:	(bad)  
   140056f17:	(bad)  
   140056f18:	(bad)  
   140056f19:	(bad)  
   140056f1a:	(bad)  
   140056f1b:	(bad)  
   140056f1c:	(bad)  
   140056f1d:	(bad)  
   140056f1e:	(bad)  
   140056f1f:	(bad)  
   140056f20:	(bad)  
   140056f21:	(bad)  
   140056f22:	(bad)  
   140056f23:	inc    DWORD PTR [rax]
   140056f25:	add    BYTE PTR [rax],al
   140056f27:	add    BYTE PTR [rax],0x0
   140056f2a:	add    BYTE PTR [rax-0x1],al
   140056f30:	(bad)  
   140056f31:	(bad)  
   140056f32:	(bad)  
   140056f33:	(bad)  
   140056f34:	(bad)  
   140056f35:	(bad)  
   140056f36:	(bad)  
   140056f37:	(bad)  
   140056f38:	(bad)  
   140056f39:	(bad)  
   140056f3a:	(bad)  
   140056f3b:	(bad)  
   140056f3c:	(bad)  
   140056f3d:	(bad)  
   140056f3e:	(bad)  
   140056f3f:	(bad)  
   140056f40:	(bad)  
   140056f41:	(bad)  
   140056f42:	(bad)  
   140056f43:	inc    DWORD PTR [rax]
   140056f45:	add    BYTE PTR [rax],al
   140056f47:	add    BYTE PTR [rax],0x0
   140056f4a:	add    BYTE PTR [rax-0x1],al
   140056f50:	(bad)  
   140056f51:	(bad)  
   140056f52:	(bad)  
   140056f53:	(bad)  
   140056f54:	(bad)  
   140056f55:	(bad)  
   140056f56:	(bad)  
   140056f57:	(bad)  
   140056f58:	(bad)  
   140056f59:	(bad)  
   140056f5a:	(bad)  
   140056f5b:	(bad)  
   140056f5c:	(bad)  
   140056f5d:	(bad)  
   140056f5e:	(bad)  
   140056f5f:	(bad)  
   140056f60:	(bad)  
   140056f61:	(bad)  
   140056f62:	(bad)  
   140056f63:	inc    DWORD PTR [rax]
   140056f65:	add    BYTE PTR [rax],al
   140056f67:	add    BYTE PTR [rax],0x0
   140056f6a:	add    BYTE PTR [rax-0x1],al
   140056f70:	(bad)  
   140056f71:	(bad)  
   140056f72:	(bad)  
   140056f73:	(bad)  
   140056f74:	(bad)  
   140056f75:	(bad)  
   140056f76:	(bad)  
   140056f77:	(bad)  
   140056f78:	(bad)  
   140056f79:	(bad)  
   140056f7a:	(bad)  
   140056f7b:	inc    DWORD PTR [rax]
   140056f7d:	add    BYTE PTR [rax],al
   140056f7f:	add    BYTE PTR [rax],0x0
	...
   140056f92:	add    BYTE PTR [rax-0x1],al
   140056f98:	(bad)  
   140056f99:	(bad)  
   140056f9a:	(bad)  
   140056f9b:	(bad)  
   140056f9c:	(bad)  
   140056f9d:	(bad)  
   140056f9e:	(bad)  
   140056f9f:	(bad)  
   140056fa0:	(bad)  
   140056fa1:	(bad)  
   140056fa2:	(bad)  
   140056fa3:	inc    DWORD PTR [rax]
   140056fa5:	add    BYTE PTR [rax],al
   140056fa7:	add    BYTE PTR [rax],0x0
   140056faa:	add    BYTE PTR [rax-0x1],al
   140056fb0:	(bad)  
   140056fb1:	(bad)  
   140056fb2:	(bad)  
   140056fb3:	(bad)  
   140056fb4:	(bad)  
   140056fb5:	(bad)  
   140056fb6:	(bad)  
   140056fb7:	(bad)  
   140056fb8:	(bad)  
   140056fb9:	(bad)  
   140056fba:	(bad)  
   140056fbb:	(bad)  
   140056fbc:	(bad)  
   140056fbd:	(bad)  
   140056fbe:	(bad)  
   140056fbf:	(bad)  
   140056fc0:	(bad)  
   140056fc1:	(bad)  
   140056fc2:	(bad)  
   140056fc3:	inc    DWORD PTR [rax]
   140056fc5:	add    BYTE PTR [rax],al
   140056fc7:	add    BYTE PTR [rax],0x0
   140056fca:	add    BYTE PTR [rax-0x1],al
   140056fd0:	(bad)  
   140056fd1:	(bad)  
   140056fd2:	(bad)  
   140056fd3:	(bad)  
   140056fd4:	(bad)  
   140056fd5:	(bad)  
   140056fd6:	(bad)  
   140056fd7:	(bad)  
   140056fd8:	(bad)  
   140056fd9:	(bad)  
   140056fda:	(bad)  
   140056fdb:	(bad)  
   140056fdc:	(bad)  
   140056fdd:	(bad)  
   140056fde:	(bad)  
   140056fdf:	(bad)  
   140056fe0:	(bad)  
   140056fe1:	(bad)  
   140056fe2:	(bad)  
   140056fe3:	inc    DWORD PTR [rax]
   140056fe5:	add    BYTE PTR [rax],al
   140056fe7:	add    BYTE PTR [rax],0x0
   140056fea:	add    BYTE PTR [rax-0x1],al
   140056ff0:	(bad)  
   140056ff1:	(bad)  
   140056ff2:	(bad)  
   140056ff3:	(bad)  
   140056ff4:	(bad)  
   140056ff5:	(bad)  
   140056ff6:	(bad)  
   140056ff7:	(bad)  
   140056ff8:	(bad)  
   140056ff9:	(bad)  
   140056ffa:	(bad)  
   140056ffb:	(bad)  
   140056ffc:	(bad)  
   140056ffd:	(bad)  
   140056ffe:	(bad)  
   140056fff:	(bad)  
   140057000:	(bad)  
   140057001:	(bad)  
   140057002:	(bad)  
   140057003:	inc    DWORD PTR [rax]
   140057005:	add    BYTE PTR [rax],al
   140057007:	add    BYTE PTR [rax],0x0
   14005700a:	add    BYTE PTR [rax-0x1],al
   140057010:	(bad)  
   140057011:	(bad)  
   140057012:	(bad)  
   140057013:	(bad)  
   140057014:	(bad)  
   140057015:	(bad)  
   140057016:	(bad)  
   140057017:	(bad)  
   140057018:	(bad)  
   140057019:	(bad)  
   14005701a:	(bad)  
   14005701b:	(bad)  
   14005701c:	(bad)  
   14005701d:	(bad)  
   14005701e:	(bad)  
   14005701f:	(bad)  
   140057020:	(bad)  
   140057021:	(bad)  
   140057022:	(bad)  
   140057023:	inc    DWORD PTR [rax]
   140057025:	add    BYTE PTR [rax],al
   140057027:	add    BYTE PTR [rax],0x0
   14005702a:	add    BYTE PTR [rax-0x1],al
   140057030:	(bad)  
   140057031:	(bad)  
   140057032:	(bad)  
   140057033:	(bad)  
   140057034:	(bad)  
   140057035:	(bad)  
   140057036:	(bad)  
   140057037:	(bad)  
   140057038:	(bad)  
   140057039:	(bad)  
   14005703a:	(bad)  
   14005703b:	(bad)  
   14005703c:	(bad)  
   14005703d:	(bad)  
   14005703e:	(bad)  
   14005703f:	(bad)  
   140057040:	(bad)  
   140057041:	(bad)  
   140057042:	(bad)  
   140057043:	inc    DWORD PTR [rax]
   140057045:	add    BYTE PTR [rax],al
   140057047:	add    BYTE PTR [rax],0x0
   14005704a:	add    BYTE PTR [rax-0x1],al
   140057050:	(bad)  
   140057051:	(bad)  
   140057052:	(bad)  
   140057053:	(bad)  
   140057054:	(bad)  
   140057055:	(bad)  
   140057056:	(bad)  
   140057057:	(bad)  
   140057058:	(bad)  
   140057059:	(bad)  
   14005705a:	(bad)  
   14005705b:	(bad)  
   14005705c:	(bad)  
   14005705d:	(bad)  
   14005705e:	(bad)  
   14005705f:	(bad)  
   140057060:	(bad)  
   140057061:	(bad)  
   140057062:	(bad)  
   140057063:	inc    DWORD PTR [rax]
   140057065:	add    BYTE PTR [rax],al
   140057067:	add    BYTE PTR [rax],0x0
   14005706a:	add    BYTE PTR [rax-0x1],al
   140057070:	(bad)  
   140057071:	(bad)  
   140057072:	(bad)  
   140057073:	(bad)  
   140057074:	(bad)  
   140057075:	(bad)  
   140057076:	(bad)  
   140057077:	(bad)  
   140057078:	(bad)  
   140057079:	(bad)  
   14005707a:	(bad)  
   14005707b:	inc    DWORD PTR [rax]
   14005707d:	add    BYTE PTR [rax],al
   14005707f:	add    BYTE PTR [rax],0x0
	...
   140057092:	add    BYTE PTR [rax-0x1],al
   140057098:	(bad)  
   140057099:	(bad)  
   14005709a:	(bad)  
   14005709b:	(bad)  
   14005709c:	(bad)  
   14005709d:	(bad)  
   14005709e:	(bad)  
   14005709f:	(bad)  
   1400570a0:	(bad)  
   1400570a1:	(bad)  
   1400570a2:	(bad)  
   1400570a3:	inc    DWORD PTR [rax]
   1400570a5:	add    BYTE PTR [rax],al
   1400570a7:	add    BYTE PTR [rax],0x0
   1400570aa:	add    BYTE PTR [rax-0x1],al
   1400570b0:	(bad)  
   1400570b1:	(bad)  
   1400570b2:	(bad)  
   1400570b3:	(bad)  
   1400570b4:	(bad)  
   1400570b5:	(bad)  
   1400570b6:	(bad)  
   1400570b7:	(bad)  
   1400570b8:	(bad)  
   1400570b9:	(bad)  
   1400570ba:	(bad)  
   1400570bb:	(bad)  
   1400570bc:	(bad)  
   1400570bd:	(bad)  
   1400570be:	(bad)  
   1400570bf:	(bad)  
   1400570c0:	(bad)  
   1400570c1:	(bad)  
   1400570c2:	(bad)  
   1400570c3:	inc    DWORD PTR [rax]
   1400570c5:	add    BYTE PTR [rax],al
   1400570c7:	add    BYTE PTR [rax],0x0
   1400570ca:	add    BYTE PTR [rax-0x1],al
   1400570d0:	(bad)  
   1400570d1:	(bad)  
   1400570d2:	(bad)  
   1400570d3:	(bad)  
   1400570d4:	(bad)  
   1400570d5:	(bad)  
   1400570d6:	(bad)  
   1400570d7:	(bad)  
   1400570d8:	(bad)  
   1400570d9:	(bad)  
   1400570da:	(bad)  
   1400570db:	(bad)  
   1400570dc:	(bad)  
   1400570dd:	(bad)  
   1400570de:	(bad)  
   1400570df:	(bad)  
   1400570e0:	(bad)  
   1400570e1:	(bad)  
   1400570e2:	(bad)  
   1400570e3:	inc    DWORD PTR [rax]
   1400570e5:	add    BYTE PTR [rax],al
   1400570e7:	add    BYTE PTR [rax],0x0
   1400570ea:	add    BYTE PTR [rax-0x1],al
   1400570f0:	(bad)  
   1400570f1:	(bad)  
   1400570f2:	(bad)  
   1400570f3:	(bad)  
   1400570f4:	(bad)  
   1400570f5:	(bad)  
   1400570f6:	(bad)  
   1400570f7:	(bad)  
   1400570f8:	(bad)  
   1400570f9:	(bad)  
   1400570fa:	(bad)  
   1400570fb:	(bad)  
   1400570fc:	(bad)  
   1400570fd:	(bad)  
   1400570fe:	(bad)  
   1400570ff:	(bad)  
   140057100:	(bad)  
   140057101:	(bad)  
   140057102:	(bad)  
   140057103:	inc    DWORD PTR [rax]
   140057105:	add    BYTE PTR [rax],al
   140057107:	add    BYTE PTR [rax],0x0
   14005710a:	add    BYTE PTR [rax-0x1],al
   140057110:	(bad)  
   140057111:	(bad)  
   140057112:	(bad)  
   140057113:	(bad)  
   140057114:	(bad)  
   140057115:	(bad)  
   140057116:	(bad)  
   140057117:	(bad)  
   140057118:	(bad)  
   140057119:	(bad)  
   14005711a:	(bad)  
   14005711b:	(bad)  
   14005711c:	(bad)  
   14005711d:	(bad)  
   14005711e:	(bad)  
   14005711f:	(bad)  
   140057120:	(bad)  
   140057121:	(bad)  
   140057122:	(bad)  
   140057123:	inc    DWORD PTR [rax]
   140057125:	add    BYTE PTR [rax],al
   140057127:	add    BYTE PTR [rax],0x0
   14005712a:	add    BYTE PTR [rax-0x1],al
   140057130:	(bad)  
   140057131:	(bad)  
   140057132:	(bad)  
   140057133:	(bad)  
   140057134:	(bad)  
   140057135:	(bad)  
   140057136:	(bad)  
   140057137:	(bad)  
   140057138:	(bad)  
   140057139:	(bad)  
   14005713a:	(bad)  
   14005713b:	(bad)  
   14005713c:	(bad)  
   14005713d:	(bad)  
   14005713e:	(bad)  
   14005713f:	(bad)  
   140057140:	(bad)  
   140057141:	(bad)  
   140057142:	(bad)  
   140057143:	inc    DWORD PTR [rax]
   140057145:	add    BYTE PTR [rax],al
   140057147:	add    BYTE PTR [rax],0x0
   14005714a:	add    BYTE PTR [rax-0x1],al
   140057150:	(bad)  
   140057151:	(bad)  
   140057152:	(bad)  
   140057153:	(bad)  
   140057154:	(bad)  
   140057155:	(bad)  
   140057156:	(bad)  
   140057157:	(bad)  
   140057158:	(bad)  
   140057159:	(bad)  
   14005715a:	(bad)  
   14005715b:	(bad)  
   14005715c:	(bad)  
   14005715d:	(bad)  
   14005715e:	(bad)  
   14005715f:	(bad)  
   140057160:	(bad)  
   140057161:	(bad)  
   140057162:	(bad)  
   140057163:	inc    DWORD PTR [rax]
   140057165:	add    BYTE PTR [rax],al
   140057167:	add    BYTE PTR [rax],0x0
   14005716a:	add    BYTE PTR [rax-0x1],al
   140057170:	(bad)  
   140057171:	(bad)  
   140057172:	(bad)  
   140057173:	(bad)  
   140057174:	(bad)  
   140057175:	(bad)  
   140057176:	(bad)  
   140057177:	(bad)  
   140057178:	(bad)  
   140057179:	(bad)  
   14005717a:	(bad)  
   14005717b:	inc    DWORD PTR [rax]
   14005717d:	add    BYTE PTR [rax],al
   14005717f:	add    BYTE PTR [rax],0x0
	...
   140057192:	add    BYTE PTR [rax-0x1],al
   140057198:	(bad)  
   140057199:	(bad)  
   14005719a:	(bad)  
   14005719b:	(bad)  
   14005719c:	(bad)  
   14005719d:	(bad)  
   14005719e:	(bad)  
   14005719f:	(bad)  
   1400571a0:	(bad)  
   1400571a1:	(bad)  
   1400571a2:	(bad)  
   1400571a3:	inc    DWORD PTR [rax]
   1400571a5:	add    BYTE PTR [rax],al
   1400571a7:	add    BYTE PTR [rax],0x0
   1400571aa:	add    BYTE PTR [rax-0x1],al
   1400571b0:	(bad)  
   1400571b1:	(bad)  
   1400571b2:	(bad)  
   1400571b3:	(bad)  
   1400571b4:	(bad)  
   1400571b5:	(bad)  
   1400571b6:	(bad)  
   1400571b7:	(bad)  
   1400571b8:	(bad)  
   1400571b9:	(bad)  
   1400571ba:	(bad)  
   1400571bb:	(bad)  
   1400571bc:	(bad)  
   1400571bd:	(bad)  
   1400571be:	(bad)  
   1400571bf:	(bad)  
   1400571c0:	(bad)  
   1400571c1:	(bad)  
   1400571c2:	(bad)  
   1400571c3:	inc    DWORD PTR [rax]
   1400571c5:	add    BYTE PTR [rax],al
   1400571c7:	add    BYTE PTR [rax],0x0
   1400571ca:	add    BYTE PTR [rax-0x1],al
   1400571d0:	(bad)  
   1400571d1:	(bad)  
   1400571d2:	(bad)  
   1400571d3:	(bad)  
   1400571d4:	(bad)  
   1400571d5:	(bad)  
   1400571d6:	(bad)  
   1400571d7:	(bad)  
   1400571d8:	(bad)  
   1400571d9:	(bad)  
   1400571da:	(bad)  
   1400571db:	(bad)  
   1400571dc:	(bad)  
   1400571dd:	(bad)  
   1400571de:	(bad)  
   1400571df:	(bad)  
   1400571e0:	(bad)  
   1400571e1:	(bad)  
   1400571e2:	(bad)  
   1400571e3:	inc    DWORD PTR [rax]
   1400571e5:	add    BYTE PTR [rax],al
   1400571e7:	add    BYTE PTR [rax],0x0
   1400571ea:	add    BYTE PTR [rax-0x1],al
   1400571f0:	(bad)  
   1400571f1:	(bad)  
   1400571f2:	(bad)  
   1400571f3:	(bad)  
   1400571f4:	(bad)  
   1400571f5:	(bad)  
   1400571f6:	(bad)  
   1400571f7:	(bad)  
   1400571f8:	(bad)  
   1400571f9:	(bad)  
   1400571fa:	(bad)  
   1400571fb:	(bad)  
   1400571fc:	(bad)  
   1400571fd:	(bad)  
   1400571fe:	(bad)  
   1400571ff:	(bad)  
   140057200:	(bad)  
   140057201:	(bad)  
   140057202:	(bad)  
   140057203:	inc    DWORD PTR [rax]
   140057205:	add    BYTE PTR [rax],al
   140057207:	add    BYTE PTR [rax],0x0
   14005720a:	add    BYTE PTR [rax-0x1],al
   140057210:	(bad)  
   140057211:	(bad)  
   140057212:	(bad)  
   140057213:	(bad)  
   140057214:	(bad)  
   140057215:	(bad)  
   140057216:	(bad)  
   140057217:	(bad)  
   140057218:	(bad)  
   140057219:	(bad)  
   14005721a:	(bad)  
   14005721b:	(bad)  
   14005721c:	(bad)  
   14005721d:	(bad)  
   14005721e:	(bad)  
   14005721f:	(bad)  
   140057220:	(bad)  
   140057221:	(bad)  
   140057222:	(bad)  
   140057223:	inc    DWORD PTR [rax]
   140057225:	add    BYTE PTR [rax],al
   140057227:	add    BYTE PTR [rax],0x0
   14005722a:	add    BYTE PTR [rax-0x1],al
   140057230:	(bad)  
   140057231:	(bad)  
   140057232:	(bad)  
   140057233:	(bad)  
   140057234:	(bad)  
   140057235:	(bad)  
   140057236:	(bad)  
   140057237:	(bad)  
   140057238:	(bad)  
   140057239:	(bad)  
   14005723a:	(bad)  
   14005723b:	(bad)  
   14005723c:	(bad)  
   14005723d:	(bad)  
   14005723e:	(bad)  
   14005723f:	(bad)  
   140057240:	(bad)  
   140057241:	(bad)  
   140057242:	(bad)  
   140057243:	inc    DWORD PTR [rax]
   140057245:	add    BYTE PTR [rax],al
   140057247:	add    BYTE PTR [rax],0x0
   14005724a:	add    BYTE PTR [rax-0x1],al
   140057250:	(bad)  
   140057251:	(bad)  
   140057252:	(bad)  
   140057253:	(bad)  
   140057254:	(bad)  
   140057255:	(bad)  
   140057256:	(bad)  
   140057257:	(bad)  
   140057258:	(bad)  
   140057259:	(bad)  
   14005725a:	(bad)  
   14005725b:	(bad)  
   14005725c:	(bad)  
   14005725d:	(bad)  
   14005725e:	(bad)  
   14005725f:	(bad)  
   140057260:	(bad)  
   140057261:	(bad)  
   140057262:	(bad)  
   140057263:	inc    DWORD PTR [rax]
   140057265:	add    BYTE PTR [rax],al
   140057267:	add    BYTE PTR [rax],0x0
   14005726a:	add    BYTE PTR [rax-0x1],al
   140057270:	(bad)  
   140057271:	(bad)  
   140057272:	(bad)  
   140057273:	(bad)  
   140057274:	(bad)  
   140057275:	(bad)  
   140057276:	(bad)  
   140057277:	(bad)  
   140057278:	(bad)  
   140057279:	(bad)  
   14005727a:	(bad)  
   14005727b:	inc    DWORD PTR [rax]
   14005727d:	add    BYTE PTR [rax],al
   14005727f:	add    BYTE PTR [rax],0x0
	...
   140057292:	add    BYTE PTR [rax-0x1],al
   140057298:	(bad)  
   140057299:	(bad)  
   14005729a:	(bad)  
   14005729b:	(bad)  
   14005729c:	(bad)  
   14005729d:	(bad)  
   14005729e:	(bad)  
   14005729f:	(bad)  
   1400572a0:	(bad)  
   1400572a1:	(bad)  
   1400572a2:	(bad)  
   1400572a3:	inc    DWORD PTR [rax]
   1400572a5:	add    BYTE PTR [rax],al
   1400572a7:	add    BYTE PTR [rax],0x0
   1400572aa:	add    BYTE PTR [rax-0x80000000],al
   1400572b0:	add    BYTE PTR [rax],al
   1400572b2:	add    BYTE PTR [rax-0x80000000],al
   1400572b8:	add    BYTE PTR [rax],al
   1400572ba:	add    BYTE PTR [rax-0x80000000],al
   1400572c0:	add    BYTE PTR [rax],al
   1400572c2:	add    BYTE PTR [rax-0x80000000],al
   1400572c8:	add    BYTE PTR [rax],al
   1400572ca:	add    BYTE PTR [rax-0x80000000],al
   1400572d0:	add    BYTE PTR [rax],al
   1400572d2:	add    BYTE PTR [rax-0x80000000],al
   1400572d8:	add    BYTE PTR [rax],al
   1400572da:	add    BYTE PTR [rax-0x80000000],al
   1400572e0:	add    BYTE PTR [rax],al
   1400572e2:	add    BYTE PTR [rax-0x80000000],al
   1400572e8:	add    BYTE PTR [rax],al
   1400572ea:	add    BYTE PTR [rax-0x80000000],al
   1400572f0:	add    BYTE PTR [rax],al
   1400572f2:	add    BYTE PTR [rax-0x80000000],al
   1400572f8:	add    BYTE PTR [rax],al
   1400572fa:	add    BYTE PTR [rax-0x80000000],al
   140057300:	add    BYTE PTR [rax],al
   140057302:	add    BYTE PTR [rax-0x80000000],al
   140057308:	add    BYTE PTR [rax],al
   14005730a:	add    BYTE PTR [rax-0x80000000],al
   140057310:	add    BYTE PTR [rax],al
   140057312:	add    BYTE PTR [rax-0x80000000],al
   140057318:	add    BYTE PTR [rax],al
   14005731a:	add    BYTE PTR [rax-0x80000000],al
   140057320:	add    BYTE PTR [rax],al
   140057322:	add    BYTE PTR [rax-0x80000000],al
   140057328:	add    BYTE PTR [rax],al
   14005732a:	add    BYTE PTR [rax-0x80000000],al
   140057330:	add    BYTE PTR [rax],al
   140057332:	add    BYTE PTR [rax-0x80000000],al
   140057338:	add    BYTE PTR [rax],al
   14005733a:	add    BYTE PTR [rax-0x80000000],al
   140057340:	add    BYTE PTR [rax],al
   140057342:	add    BYTE PTR [rax-0x80000000],al
   140057348:	add    BYTE PTR [rax],al
   14005734a:	add    BYTE PTR [rax-0x80000000],al
   140057350:	add    BYTE PTR [rax],al
   140057352:	add    BYTE PTR [rax-0x80000000],al
   140057358:	add    BYTE PTR [rax],al
   14005735a:	add    BYTE PTR [rax-0x80000000],al
   140057360:	add    BYTE PTR [rax],al
   140057362:	add    BYTE PTR [rax-0x80000000],al
   140057368:	add    BYTE PTR [rax],al
   14005736a:	add    BYTE PTR [rax-0x1],al
   140057370:	(bad)  
   140057371:	(bad)  
   140057372:	(bad)  
   140057373:	(bad)  
   140057374:	(bad)  
   140057375:	(bad)  
   140057376:	(bad)  
   140057377:	(bad)  
   140057378:	(bad)  
   140057379:	(bad)  
   14005737a:	(bad)  
   14005737b:	inc    DWORD PTR [rax]
   14005737d:	add    BYTE PTR [rax],al
   14005737f:	add    BYTE PTR [rax],0x0
	...
   140057392:	add    BYTE PTR [rax-0x1],al
   140057398:	(bad)  
   140057399:	(bad)  
   14005739a:	(bad)  
   14005739b:	(bad)  
   14005739c:	(bad)  
   14005739d:	(bad)  
   14005739e:	(bad)  
   14005739f:	(bad)  
   1400573a0:	(bad)  
   1400573a1:	(bad)  
   1400573a2:	(bad)  
   1400573a3:	inc    DWORD PTR [rax]
   1400573a5:	add    BYTE PTR [rax],al
   1400573a7:	add    BYTE PTR [rax],0x0
   1400573aa:	add    BYTE PTR [rax-0x80000000],al
   1400573b0:	add    BYTE PTR [rax],al
   1400573b2:	add    BYTE PTR [rax-0x80000000],al
   1400573b8:	add    BYTE PTR [rax],al
   1400573ba:	add    BYTE PTR [rax-0x80000000],al
   1400573c0:	add    BYTE PTR [rax],al
   1400573c2:	add    BYTE PTR [rax-0x80000000],al
   1400573c8:	add    BYTE PTR [rax],al
   1400573ca:	add    BYTE PTR [rax-0x80000000],al
   1400573d0:	add    BYTE PTR [rax],al
   1400573d2:	add    BYTE PTR [rax-0x80000000],al
   1400573d8:	add    BYTE PTR [rax],al
   1400573da:	add    BYTE PTR [rax-0x80000000],al
   1400573e0:	add    BYTE PTR [rax],al
   1400573e2:	add    BYTE PTR [rax-0x80000000],al
   1400573e8:	add    BYTE PTR [rax],al
   1400573ea:	add    BYTE PTR [rax-0x80000000],al
   1400573f0:	add    BYTE PTR [rax],al
   1400573f2:	add    BYTE PTR [rax-0x80000000],al
   1400573f8:	add    BYTE PTR [rax],al
   1400573fa:	add    BYTE PTR [rax-0x80000000],al
   140057400:	add    BYTE PTR [rax],al
   140057402:	add    BYTE PTR [rax-0x80000000],al
   140057408:	add    BYTE PTR [rax],al
   14005740a:	add    BYTE PTR [rax-0x80000000],al
   140057410:	add    BYTE PTR [rax],al
   140057412:	add    BYTE PTR [rax-0x80000000],al
   140057418:	add    BYTE PTR [rax],al
   14005741a:	add    BYTE PTR [rax-0x80000000],al
   140057420:	add    BYTE PTR [rax],al
   140057422:	add    BYTE PTR [rax-0x80000000],al
   140057428:	add    BYTE PTR [rax],al
   14005742a:	add    BYTE PTR [rax-0x80000000],al
   140057430:	add    BYTE PTR [rax],al
   140057432:	add    BYTE PTR [rax-0x80000000],al
   140057438:	add    BYTE PTR [rax],al
   14005743a:	add    BYTE PTR [rax-0x80000000],al
   140057440:	add    BYTE PTR [rax],al
   140057442:	add    BYTE PTR [rax-0x80000000],al
   140057448:	add    BYTE PTR [rax],al
   14005744a:	add    BYTE PTR [rax-0x80000000],al
   140057450:	add    BYTE PTR [rax],al
   140057452:	add    BYTE PTR [rax-0x80000000],al
   140057458:	add    BYTE PTR [rax],al
   14005745a:	add    BYTE PTR [rax-0x80000000],al
   140057460:	add    BYTE PTR [rax],al
   140057462:	add    BYTE PTR [rax-0x80000000],al
   140057468:	add    BYTE PTR [rax],al
   14005746a:	add    BYTE PTR [rax-0x1],al
   140057470:	(bad)  
   140057471:	(bad)  
   140057472:	(bad)  
   140057473:	(bad)  
   140057474:	(bad)  
   140057475:	(bad)  
   140057476:	(bad)  
   140057477:	(bad)  
   140057478:	(bad)  
   140057479:	(bad)  
   14005747a:	(bad)  
   14005747b:	inc    DWORD PTR [rax]
   14005747d:	add    BYTE PTR [rax],al
   14005747f:	add    BYTE PTR [rax],0x0
	...
   140057492:	add    BYTE PTR [rax-0x1],al
   140057498:	(bad)  
   140057499:	(bad)  
   14005749a:	(bad)  
   14005749b:	(bad)  
   14005749c:	(bad)  
   14005749d:	(bad)  
   14005749e:	(bad)  
   14005749f:	(bad)  
   1400574a0:	(bad)  
   1400574a1:	(bad)  
   1400574a2:	(bad)  
   1400574a3:	(bad)  
   1400574a4:	(bad)  
   1400574a5:	(bad)  
   1400574a6:	(bad)  
   1400574a7:	(bad)  
   1400574a8:	(bad)  
   1400574a9:	(bad)  
   1400574aa:	(bad)  
   1400574ab:	(bad)  
   1400574ac:	(bad)  
   1400574ad:	(bad)  
   1400574ae:	(bad)  
   1400574af:	(bad)  
   1400574b0:	(bad)  
   1400574b1:	(bad)  
   1400574b2:	(bad)  
   1400574b3:	(bad)  
   1400574b4:	(bad)  
   1400574b5:	(bad)  
   1400574b6:	(bad)  
   1400574b7:	(bad)  
   1400574b8:	(bad)  
   1400574b9:	(bad)  
   1400574ba:	(bad)  
   1400574bb:	(bad)  
   1400574bc:	(bad)  
   1400574bd:	(bad)  
   1400574be:	(bad)  
   1400574bf:	(bad)  
   1400574c0:	(bad)  
   1400574c1:	(bad)  
   1400574c2:	(bad)  
   1400574c3:	(bad)  
   1400574c4:	(bad)  
   1400574c5:	(bad)  
   1400574c6:	(bad)  
   1400574c7:	(bad)  
   1400574c8:	(bad)  
   1400574c9:	(bad)  
   1400574ca:	(bad)  
   1400574cb:	(bad)  
   1400574cc:	(bad)  
   1400574cd:	(bad)  
   1400574ce:	(bad)  
   1400574cf:	(bad)  
   1400574d0:	(bad)  
   1400574d1:	(bad)  
   1400574d2:	(bad)  
   1400574d3:	(bad)  
   1400574d4:	(bad)  
   1400574d5:	(bad)  
   1400574d6:	(bad)  
   1400574d7:	(bad)  
   1400574d8:	(bad)  
   1400574d9:	(bad)  
   1400574da:	(bad)  
   1400574db:	(bad)  
   1400574dc:	(bad)  
   1400574dd:	(bad)  
   1400574de:	(bad)  
   1400574df:	(bad)  
   1400574e0:	(bad)  
   1400574e1:	(bad)  
   1400574e2:	(bad)  
   1400574e3:	(bad)  
   1400574e4:	(bad)  
   1400574e5:	(bad)  
   1400574e6:	(bad)  
   1400574e7:	(bad)  
   1400574e8:	(bad)  
   1400574e9:	(bad)  
   1400574ea:	(bad)  
   1400574eb:	(bad)  
   1400574ec:	(bad)  
   1400574ed:	(bad)  
   1400574ee:	(bad)  
   1400574ef:	(bad)  
   1400574f0:	(bad)  
   1400574f1:	(bad)  
   1400574f2:	(bad)  
   1400574f3:	(bad)  
   1400574f4:	(bad)  
   1400574f5:	(bad)  
   1400574f6:	(bad)  
   1400574f7:	(bad)  
   1400574f8:	(bad)  
   1400574f9:	(bad)  
   1400574fa:	(bad)  
   1400574fb:	(bad)  
   1400574fc:	(bad)  
   1400574fd:	(bad)  
   1400574fe:	(bad)  
   1400574ff:	(bad)  
   140057500:	(bad)  
   140057501:	(bad)  
   140057502:	(bad)  
   140057503:	(bad)  
   140057504:	(bad)  
   140057505:	(bad)  
   140057506:	(bad)  
   140057507:	(bad)  
   140057508:	(bad)  
   140057509:	(bad)  
   14005750a:	(bad)  
   14005750b:	(bad)  
   14005750c:	(bad)  
   14005750d:	(bad)  
   14005750e:	(bad)  
   14005750f:	(bad)  
   140057510:	(bad)  
   140057511:	(bad)  
   140057512:	(bad)  
   140057513:	(bad)  
   140057514:	(bad)  
   140057515:	(bad)  
   140057516:	(bad)  
   140057517:	(bad)  
   140057518:	(bad)  
   140057519:	(bad)  
   14005751a:	(bad)  
   14005751b:	(bad)  
   14005751c:	(bad)  
   14005751d:	(bad)  
   14005751e:	(bad)  
   14005751f:	(bad)  
   140057520:	(bad)  
   140057521:	(bad)  
   140057522:	(bad)  
   140057523:	(bad)  
   140057524:	(bad)  
   140057525:	(bad)  
   140057526:	(bad)  
   140057527:	(bad)  
   140057528:	(bad)  
   140057529:	(bad)  
   14005752a:	(bad)  
   14005752b:	(bad)  
   14005752c:	(bad)  
   14005752d:	(bad)  
   14005752e:	(bad)  
   14005752f:	(bad)  
   140057530:	(bad)  
   140057531:	(bad)  
   140057532:	(bad)  
   140057533:	(bad)  
   140057534:	(bad)  
   140057535:	(bad)  
   140057536:	(bad)  
   140057537:	(bad)  
   140057538:	(bad)  
   140057539:	(bad)  
   14005753a:	(bad)  
   14005753b:	(bad)  
   14005753c:	(bad)  
   14005753d:	(bad)  
   14005753e:	(bad)  
   14005753f:	(bad)  
   140057540:	(bad)  
   140057541:	(bad)  
   140057542:	(bad)  
   140057543:	(bad)  
   140057544:	(bad)  
   140057545:	(bad)  
   140057546:	(bad)  
   140057547:	(bad)  
   140057548:	(bad)  
   140057549:	(bad)  
   14005754a:	(bad)  
   14005754b:	(bad)  
   14005754c:	(bad)  
   14005754d:	(bad)  
   14005754e:	(bad)  
   14005754f:	(bad)  
   140057550:	(bad)  
   140057551:	(bad)  
   140057552:	(bad)  
   140057553:	(bad)  
   140057554:	(bad)  
   140057555:	(bad)  
   140057556:	(bad)  
   140057557:	(bad)  
   140057558:	(bad)  
   140057559:	(bad)  
   14005755a:	(bad)  
   14005755b:	(bad)  
   14005755c:	(bad)  
   14005755d:	(bad)  
   14005755e:	(bad)  
   14005755f:	(bad)  
   140057560:	(bad)  
   140057561:	(bad)  
   140057562:	(bad)  
   140057563:	(bad)  
   140057564:	(bad)  
   140057565:	(bad)  
   140057566:	(bad)  
   140057567:	(bad)  
   140057568:	(bad)  
   140057569:	(bad)  
   14005756a:	(bad)  
   14005756b:	(bad)  
   14005756c:	(bad)  
   14005756d:	(bad)  
   14005756e:	(bad)  
   14005756f:	(bad)  
   140057570:	(bad)  
   140057571:	(bad)  
   140057572:	(bad)  
   140057573:	(bad)  
   140057574:	(bad)  
   140057575:	(bad)  
   140057576:	(bad)  
   140057577:	(bad)  
   140057578:	(bad)  
   140057579:	(bad)  
   14005757a:	(bad)  
   14005757b:	inc    DWORD PTR [rax]
   14005757d:	add    BYTE PTR [rax],al
   14005757f:	add    BYTE PTR [rax],0x0
	...
   140057592:	add    BYTE PTR [rax-0x1],al
   140057598:	(bad)  
   140057599:	(bad)  
   14005759a:	(bad)  
   14005759b:	(bad)  
   14005759c:	(bad)  
   14005759d:	(bad)  
   14005759e:	(bad)  
   14005759f:	(bad)  
   1400575a0:	(bad)  
   1400575a1:	(bad)  
   1400575a2:	(bad)  
   1400575a3:	(bad)  
   1400575a4:	(bad)  
   1400575a5:	(bad)  
   1400575a6:	(bad)  
   1400575a7:	(bad)  
   1400575a8:	(bad)  
   1400575a9:	(bad)  
   1400575aa:	(bad)  
   1400575ab:	(bad)  
   1400575ac:	(bad)  
   1400575ad:	(bad)  
   1400575ae:	(bad)  
   1400575af:	(bad)  
   1400575b0:	(bad)  
   1400575b1:	(bad)  
   1400575b2:	(bad)  
   1400575b3:	(bad)  
   1400575b4:	(bad)  
   1400575b5:	(bad)  
   1400575b6:	(bad)  
   1400575b7:	(bad)  
   1400575b8:	(bad)  
   1400575b9:	(bad)  
   1400575ba:	(bad)  
   1400575bb:	(bad)  
   1400575bc:	(bad)  
   1400575bd:	(bad)  
   1400575be:	(bad)  
   1400575bf:	(bad)  
   1400575c0:	(bad)  
   1400575c1:	(bad)  
   1400575c2:	(bad)  
   1400575c3:	(bad)  
   1400575c4:	(bad)  
   1400575c5:	(bad)  
   1400575c6:	(bad)  
   1400575c7:	(bad)  
   1400575c8:	(bad)  
   1400575c9:	(bad)  
   1400575ca:	(bad)  
   1400575cb:	(bad)  
   1400575cc:	(bad)  
   1400575cd:	(bad)  
   1400575ce:	(bad)  
   1400575cf:	(bad)  
   1400575d0:	(bad)  
   1400575d1:	(bad)  
   1400575d2:	(bad)  
   1400575d3:	(bad)  
   1400575d4:	(bad)  
   1400575d5:	(bad)  
   1400575d6:	(bad)  
   1400575d7:	(bad)  
   1400575d8:	(bad)  
   1400575d9:	(bad)  
   1400575da:	(bad)  
   1400575db:	(bad)  
   1400575dc:	(bad)  
   1400575dd:	(bad)  
   1400575de:	(bad)  
   1400575df:	(bad)  
   1400575e0:	(bad)  
   1400575e1:	(bad)  
   1400575e2:	(bad)  
   1400575e3:	(bad)  
   1400575e4:	(bad)  
   1400575e5:	(bad)  
   1400575e6:	(bad)  
   1400575e7:	(bad)  
   1400575e8:	(bad)  
   1400575e9:	(bad)  
   1400575ea:	(bad)  
   1400575eb:	(bad)  
   1400575ec:	(bad)  
   1400575ed:	(bad)  
   1400575ee:	(bad)  
   1400575ef:	(bad)  
   1400575f0:	(bad)  
   1400575f1:	(bad)  
   1400575f2:	(bad)  
   1400575f3:	(bad)  
   1400575f4:	(bad)  
   1400575f5:	(bad)  
   1400575f6:	(bad)  
   1400575f7:	(bad)  
   1400575f8:	(bad)  
   1400575f9:	(bad)  
   1400575fa:	(bad)  
   1400575fb:	(bad)  
   1400575fc:	(bad)  
   1400575fd:	(bad)  
   1400575fe:	(bad)  
   1400575ff:	(bad)  
   140057600:	(bad)  
   140057601:	(bad)  
   140057602:	(bad)  
   140057603:	(bad)  
   140057604:	(bad)  
   140057605:	(bad)  
   140057606:	(bad)  
   140057607:	(bad)  
   140057608:	(bad)  
   140057609:	(bad)  
   14005760a:	(bad)  
   14005760b:	(bad)  
   14005760c:	(bad)  
   14005760d:	(bad)  
   14005760e:	(bad)  
   14005760f:	(bad)  
   140057610:	(bad)  
   140057611:	(bad)  
   140057612:	(bad)  
   140057613:	(bad)  
   140057614:	(bad)  
   140057615:	(bad)  
   140057616:	(bad)  
   140057617:	(bad)  
   140057618:	(bad)  
   140057619:	(bad)  
   14005761a:	(bad)  
   14005761b:	(bad)  
   14005761c:	(bad)  
   14005761d:	(bad)  
   14005761e:	(bad)  
   14005761f:	(bad)  
   140057620:	(bad)  
   140057621:	(bad)  
   140057622:	(bad)  
   140057623:	(bad)  
   140057624:	(bad)  
   140057625:	(bad)  
   140057626:	(bad)  
   140057627:	(bad)  
   140057628:	(bad)  
   140057629:	(bad)  
   14005762a:	(bad)  
   14005762b:	(bad)  
   14005762c:	(bad)  
   14005762d:	(bad)  
   14005762e:	(bad)  
   14005762f:	(bad)  
   140057630:	(bad)  
   140057631:	(bad)  
   140057632:	(bad)  
   140057633:	(bad)  
   140057634:	(bad)  
   140057635:	(bad)  
   140057636:	(bad)  
   140057637:	(bad)  
   140057638:	(bad)  
   140057639:	(bad)  
   14005763a:	(bad)  
   14005763b:	(bad)  
   14005763c:	(bad)  
   14005763d:	(bad)  
   14005763e:	(bad)  
   14005763f:	(bad)  
   140057640:	(bad)  
   140057641:	(bad)  
   140057642:	(bad)  
   140057643:	(bad)  
   140057644:	(bad)  
   140057645:	(bad)  
   140057646:	(bad)  
   140057647:	(bad)  
   140057648:	(bad)  
   140057649:	(bad)  
   14005764a:	(bad)  
   14005764b:	(bad)  
   14005764c:	(bad)  
   14005764d:	(bad)  
   14005764e:	(bad)  
   14005764f:	(bad)  
   140057650:	(bad)  
   140057651:	(bad)  
   140057652:	(bad)  
   140057653:	(bad)  
   140057654:	(bad)  
   140057655:	(bad)  
   140057656:	(bad)  
   140057657:	(bad)  
   140057658:	(bad)  
   140057659:	(bad)  
   14005765a:	(bad)  
   14005765b:	(bad)  
   14005765c:	(bad)  
   14005765d:	(bad)  
   14005765e:	(bad)  
   14005765f:	(bad)  
   140057660:	(bad)  
   140057661:	(bad)  
   140057662:	(bad)  
   140057663:	(bad)  
   140057664:	(bad)  
   140057665:	(bad)  
   140057666:	(bad)  
   140057667:	(bad)  
   140057668:	(bad)  
   140057669:	(bad)  
   14005766a:	(bad)  
   14005766b:	(bad)  
   14005766c:	(bad)  
   14005766d:	(bad)  
   14005766e:	(bad)  
   14005766f:	(bad)  
   140057670:	(bad)  
   140057671:	(bad)  
   140057672:	(bad)  
   140057673:	(bad)  
   140057674:	(bad)  
   140057675:	(bad)  
   140057676:	(bad)  
   140057677:	(bad)  
   140057678:	(bad)  
   140057679:	(bad)  
   14005767a:	(bad)  
   14005767b:	inc    DWORD PTR [rax]
   14005767d:	add    BYTE PTR [rax],al
   14005767f:	add    BYTE PTR [rax],0x0
	...
   140057692:	add    BYTE PTR [rax-0x26],dh
   140057695:	fcmovu st,st(2)
   140057697:	(bad)  
   140057699:	(bad)  
   14005769a:	(bad)  
   14005769b:	(bad)  
   14005769c:	(bad)  
   14005769d:	(bad)  
   14005769e:	(bad)  
   14005769f:	(bad)  
   1400576a0:	(bad)  
   1400576a1:	(bad)  
   1400576a2:	(bad)  
   1400576a3:	(bad)  
   1400576a4:	(bad)  
   1400576a5:	(bad)  
   1400576a6:	(bad)  
   1400576a7:	(bad)  
   1400576a8:	(bad)  
   1400576a9:	(bad)  
   1400576aa:	(bad)  
   1400576ab:	(bad)  
   1400576ac:	(bad)  
   1400576ad:	(bad)  
   1400576ae:	(bad)  
   1400576af:	(bad)  
   1400576b0:	(bad)  
   1400576b1:	(bad)  
   1400576b2:	(bad)  
   1400576b3:	(bad)  
   1400576b4:	(bad)  
   1400576b5:	(bad)  
   1400576b6:	(bad)  
   1400576b7:	(bad)  
   1400576b8:	(bad)  
   1400576b9:	(bad)  
   1400576ba:	(bad)  
   1400576bb:	(bad)  
   1400576bc:	(bad)  
   1400576bd:	(bad)  
   1400576be:	(bad)  
   1400576bf:	(bad)  
   1400576c0:	(bad)  
   1400576c1:	(bad)  
   1400576c2:	(bad)  
   1400576c3:	(bad)  
   1400576c4:	(bad)  
   1400576c5:	(bad)  
   1400576c6:	(bad)  
   1400576c7:	(bad)  
   1400576c8:	(bad)  
   1400576c9:	(bad)  
   1400576ca:	(bad)  
   1400576cb:	(bad)  
   1400576cc:	(bad)  
   1400576cd:	(bad)  
   1400576ce:	(bad)  
   1400576cf:	(bad)  
   1400576d0:	(bad)  
   1400576d1:	(bad)  
   1400576d2:	(bad)  
   1400576d3:	(bad)  
   1400576d4:	(bad)  
   1400576d5:	(bad)  
   1400576d6:	(bad)  
   1400576d7:	(bad)  
   1400576d8:	(bad)  
   1400576d9:	(bad)  
   1400576da:	(bad)  
   1400576db:	(bad)  
   1400576dc:	(bad)  
   1400576dd:	(bad)  
   1400576de:	(bad)  
   1400576df:	(bad)  
   1400576e0:	(bad)  
   1400576e1:	(bad)  
   1400576e2:	(bad)  
   1400576e3:	(bad)  
   1400576e4:	(bad)  
   1400576e5:	(bad)  
   1400576e6:	(bad)  
   1400576e7:	(bad)  
   1400576e8:	(bad)  
   1400576e9:	(bad)  
   1400576ea:	(bad)  
   1400576eb:	(bad)  
   1400576ec:	(bad)  
   1400576ed:	(bad)  
   1400576ee:	(bad)  
   1400576ef:	(bad)  
   1400576f0:	(bad)  
   1400576f1:	(bad)  
   1400576f2:	(bad)  
   1400576f3:	(bad)  
   1400576f4:	(bad)  
   1400576f5:	(bad)  
   1400576f6:	(bad)  
   1400576f7:	(bad)  
   1400576f8:	(bad)  
   1400576f9:	(bad)  
   1400576fa:	(bad)  
   1400576fb:	(bad)  
   1400576fc:	(bad)  
   1400576fd:	(bad)  
   1400576fe:	(bad)  
   1400576ff:	(bad)  
   140057700:	(bad)  
   140057701:	(bad)  
   140057702:	(bad)  
   140057703:	(bad)  
   140057704:	(bad)  
   140057705:	(bad)  
   140057706:	(bad)  
   140057707:	(bad)  
   140057708:	(bad)  
   140057709:	(bad)  
   14005770a:	(bad)  
   14005770b:	(bad)  
   14005770c:	(bad)  
   14005770d:	(bad)  
   14005770e:	(bad)  
   14005770f:	(bad)  
   140057710:	(bad)  
   140057711:	(bad)  
   140057712:	(bad)  
   140057713:	(bad)  
   140057714:	(bad)  
   140057715:	(bad)  
   140057716:	(bad)  
   140057717:	(bad)  
   140057718:	(bad)  
   140057719:	(bad)  
   14005771a:	(bad)  
   14005771b:	(bad)  
   14005771c:	(bad)  
   14005771d:	(bad)  
   14005771e:	(bad)  
   14005771f:	(bad)  
   140057720:	(bad)  
   140057721:	(bad)  
   140057722:	(bad)  
   140057723:	(bad)  
   140057724:	(bad)  
   140057725:	(bad)  
   140057726:	(bad)  
   140057727:	(bad)  
   140057728:	(bad)  
   140057729:	(bad)  
   14005772a:	(bad)  
   14005772b:	(bad)  
   14005772c:	(bad)  
   14005772d:	(bad)  
   14005772e:	(bad)  
   14005772f:	(bad)  
   140057730:	(bad)  
   140057731:	(bad)  
   140057732:	(bad)  
   140057733:	(bad)  
   140057734:	(bad)  
   140057735:	(bad)  
   140057736:	(bad)  
   140057737:	(bad)  
   140057738:	(bad)  
   140057739:	(bad)  
   14005773a:	(bad)  
   14005773b:	(bad)  
   14005773c:	(bad)  
   14005773d:	(bad)  
   14005773e:	(bad)  
   14005773f:	(bad)  
   140057740:	(bad)  
   140057741:	(bad)  
   140057742:	(bad)  
   140057743:	(bad)  
   140057744:	(bad)  
   140057745:	(bad)  
   140057746:	(bad)  
   140057747:	(bad)  
   140057748:	(bad)  
   140057749:	(bad)  
   14005774a:	(bad)  
   14005774b:	(bad)  
   14005774c:	(bad)  
   14005774d:	(bad)  
   14005774e:	(bad)  
   14005774f:	(bad)  
   140057750:	(bad)  
   140057751:	(bad)  
   140057752:	(bad)  
   140057753:	(bad)  
   140057754:	(bad)  
   140057755:	(bad)  
   140057756:	(bad)  
   140057757:	(bad)  
   140057758:	(bad)  
   140057759:	(bad)  
   14005775a:	(bad)  
   14005775b:	(bad)  
   14005775c:	(bad)  
   14005775d:	(bad)  
   14005775e:	(bad)  
   14005775f:	(bad)  
   140057760:	(bad)  
   140057761:	(bad)  
   140057762:	(bad)  
   140057763:	(bad)  
   140057764:	(bad)  
   140057765:	(bad)  
   140057766:	(bad)  
   140057767:	(bad)  
   140057768:	(bad)  
   140057769:	(bad)  
   14005776a:	(bad)  
   14005776b:	(bad)  
   14005776c:	(bad)  
   14005776d:	(bad)  
   14005776e:	(bad)  
   14005776f:	(bad)  
   140057770:	(bad)  
   140057771:	(bad)  
   140057772:	(bad)  
   140057773:	(bad)  
   140057774:	(bad)  
   140057775:	(bad)  
   140057776:	(bad)  
   140057777:	(bad)  
   140057778:	fcmovu st,st(2)
   14005777a:	fcmovu st,st(7)
   14005777c:	add    BYTE PTR [rax],al
   14005777e:	add    BYTE PTR [rax+0x0],dh
	...
   140057791:	add    BYTE PTR [rax],al
   140057793:	sub    BYTE PTR [rsi],bl
   140057795:	(bad)  
   140057796:	(bad)  
   140057797:	mov    dl,bl
   140057799:	fcmovu st,st(2)
   14005779b:	(bad)  
   14005779d:	(bad)  
   14005779e:	(bad)  
   14005779f:	(bad)  
   1400577a0:	(bad)  
   1400577a1:	(bad)  
   1400577a2:	(bad)  
   1400577a3:	(bad)  
   1400577a4:	(bad)  
   1400577a5:	(bad)  
   1400577a6:	(bad)  
   1400577a7:	(bad)  
   1400577a8:	(bad)  
   1400577a9:	(bad)  
   1400577aa:	(bad)  
   1400577ab:	(bad)  
   1400577ac:	(bad)  
   1400577ad:	(bad)  
   1400577ae:	(bad)  
   1400577af:	(bad)  
   1400577b0:	(bad)  
   1400577b1:	(bad)  
   1400577b2:	(bad)  
   1400577b3:	(bad)  
   1400577b4:	(bad)  
   1400577b5:	(bad)  
   1400577b6:	(bad)  
   1400577b7:	(bad)  
   1400577b8:	(bad)  
   1400577b9:	(bad)  
   1400577ba:	(bad)  
   1400577bb:	(bad)  
   1400577bc:	(bad)  
   1400577bd:	(bad)  
   1400577be:	(bad)  
   1400577bf:	(bad)  
   1400577c0:	(bad)  
   1400577c1:	(bad)  
   1400577c2:	(bad)  
   1400577c3:	(bad)  
   1400577c4:	(bad)  
   1400577c5:	(bad)  
   1400577c6:	(bad)  
   1400577c7:	(bad)  
   1400577c8:	(bad)  
   1400577c9:	(bad)  
   1400577ca:	(bad)  
   1400577cb:	(bad)  
   1400577cc:	(bad)  
   1400577cd:	(bad)  
   1400577ce:	(bad)  
   1400577cf:	(bad)  
   1400577d0:	(bad)  
   1400577d1:	(bad)  
   1400577d2:	(bad)  
   1400577d3:	(bad)  
   1400577d4:	(bad)  
   1400577d5:	(bad)  
   1400577d6:	(bad)  
   1400577d7:	(bad)  
   1400577d8:	(bad)  
   1400577d9:	(bad)  
   1400577da:	(bad)  
   1400577db:	(bad)  
   1400577dc:	(bad)  
   1400577dd:	(bad)  
   1400577de:	(bad)  
   1400577df:	(bad)  
   1400577e0:	(bad)  
   1400577e1:	(bad)  
   1400577e2:	(bad)  
   1400577e3:	(bad)  
   1400577e4:	(bad)  
   1400577e5:	(bad)  
   1400577e6:	(bad)  
   1400577e7:	(bad)  
   1400577e8:	(bad)  
   1400577e9:	(bad)  
   1400577ea:	(bad)  
   1400577eb:	(bad)  
   1400577ec:	(bad)  
   1400577ed:	(bad)  
   1400577ee:	(bad)  
   1400577ef:	(bad)  
   1400577f0:	(bad)  
   1400577f1:	(bad)  
   1400577f2:	(bad)  
   1400577f3:	(bad)  
   1400577f4:	(bad)  
   1400577f5:	(bad)  
   1400577f6:	(bad)  
   1400577f7:	(bad)  
   1400577f8:	(bad)  
   1400577f9:	(bad)  
   1400577fa:	(bad)  
   1400577fb:	(bad)  
   1400577fc:	(bad)  
   1400577fd:	(bad)  
   1400577fe:	(bad)  
   1400577ff:	(bad)  
   140057800:	(bad)  
   140057801:	(bad)  
   140057802:	(bad)  
   140057803:	(bad)  
   140057804:	(bad)  
   140057805:	(bad)  
   140057806:	(bad)  
   140057807:	(bad)  
   140057808:	(bad)  
   140057809:	(bad)  
   14005780a:	(bad)  
   14005780b:	(bad)  
   14005780c:	(bad)  
   14005780d:	(bad)  
   14005780e:	(bad)  
   14005780f:	(bad)  
   140057810:	(bad)  
   140057811:	(bad)  
   140057812:	(bad)  
   140057813:	(bad)  
   140057814:	(bad)  
   140057815:	(bad)  
   140057816:	(bad)  
   140057817:	(bad)  
   140057818:	(bad)  
   140057819:	(bad)  
   14005781a:	(bad)  
   14005781b:	(bad)  
   14005781c:	(bad)  
   14005781d:	(bad)  
   14005781e:	(bad)  
   14005781f:	(bad)  
   140057820:	(bad)  
   140057821:	(bad)  
   140057822:	(bad)  
   140057823:	(bad)  
   140057824:	(bad)  
   140057825:	(bad)  
   140057826:	(bad)  
   140057827:	(bad)  
   140057828:	(bad)  
   140057829:	(bad)  
   14005782a:	(bad)  
   14005782b:	(bad)  
   14005782c:	(bad)  
   14005782d:	(bad)  
   14005782e:	(bad)  
   14005782f:	(bad)  
   140057830:	(bad)  
   140057831:	(bad)  
   140057832:	(bad)  
   140057833:	(bad)  
   140057834:	(bad)  
   140057835:	(bad)  
   140057836:	(bad)  
   140057837:	(bad)  
   140057838:	(bad)  
   140057839:	(bad)  
   14005783a:	(bad)  
   14005783b:	(bad)  
   14005783c:	(bad)  
   14005783d:	(bad)  
   14005783e:	(bad)  
   14005783f:	(bad)  
   140057840:	(bad)  
   140057841:	(bad)  
   140057842:	(bad)  
   140057843:	(bad)  
   140057844:	(bad)  
   140057845:	(bad)  
   140057846:	(bad)  
   140057847:	(bad)  
   140057848:	(bad)  
   140057849:	(bad)  
   14005784a:	(bad)  
   14005784b:	(bad)  
   14005784c:	(bad)  
   14005784d:	(bad)  
   14005784e:	(bad)  
   14005784f:	(bad)  
   140057850:	(bad)  
   140057851:	(bad)  
   140057852:	(bad)  
   140057853:	(bad)  
   140057854:	(bad)  
   140057855:	(bad)  
   140057856:	(bad)  
   140057857:	(bad)  
   140057858:	(bad)  
   140057859:	(bad)  
   14005785a:	(bad)  
   14005785b:	(bad)  
   14005785c:	(bad)  
   14005785d:	(bad)  
   14005785e:	(bad)  
   14005785f:	(bad)  
   140057860:	(bad)  
   140057861:	(bad)  
   140057862:	(bad)  
   140057863:	(bad)  
   140057864:	(bad)  
   140057865:	(bad)  
   140057866:	(bad)  
   140057867:	(bad)  
   140057868:	(bad)  
   140057869:	(bad)  
   14005786a:	(bad)  
   14005786b:	(bad)  
   14005786c:	(bad)  
   14005786d:	(bad)  
   14005786e:	(bad)  
   14005786f:	(bad)  
   140057870:	(bad)  
   140057871:	(bad)  
   140057872:	(bad)  
   140057873:	(bad)  
   140057874:	fcmovu st,st(2)
   140057876:	fcmovu st,st(7)
   140057878:	(bad)  
   140057879:	(bad)  
   14005787a:	(bad)  
   14005787b:	mov    BYTE PTR [rax],al
   14005787d:	add    BYTE PTR [rax],al
   14005787f:	sub    BYTE PTR [rax],al
	...
   140057895:	add    BYTE PTR [rax],al
   140057897:	sub    BYTE PTR [rax],al
   140057899:	add    BYTE PTR [rax],al
   14005789b:	jo     0x14005789d
   14005789d:	add    BYTE PTR [rax],al
   14005789f:	add    BYTE PTR [rax],0x0
   1400578a2:	add    BYTE PTR [rax-0x80000000],al
   1400578a8:	add    BYTE PTR [rax],al
   1400578aa:	add    BYTE PTR [rax-0x80000000],al
   1400578b0:	add    BYTE PTR [rax],al
   1400578b2:	add    BYTE PTR [rax-0x80000000],al
   1400578b8:	add    BYTE PTR [rax],al
   1400578ba:	add    BYTE PTR [rax-0x80000000],al
   1400578c0:	add    BYTE PTR [rax],al
   1400578c2:	add    BYTE PTR [rax-0x80000000],al
   1400578c8:	add    BYTE PTR [rax],al
   1400578ca:	add    BYTE PTR [rax-0x80000000],al
   1400578d0:	add    BYTE PTR [rax],al
   1400578d2:	add    BYTE PTR [rax-0x80000000],al
   1400578d8:	add    BYTE PTR [rax],al
   1400578da:	add    BYTE PTR [rax-0x80000000],al
   1400578e0:	add    BYTE PTR [rax],al
   1400578e2:	add    BYTE PTR [rax-0x80000000],al
   1400578e8:	add    BYTE PTR [rax],al
   1400578ea:	add    BYTE PTR [rax-0x80000000],al
   1400578f0:	add    BYTE PTR [rax],al
   1400578f2:	add    BYTE PTR [rax-0x80000000],al
   1400578f8:	add    BYTE PTR [rax],al
   1400578fa:	add    BYTE PTR [rax-0x80000000],al
   140057900:	add    BYTE PTR [rax],al
   140057902:	add    BYTE PTR [rax-0x80000000],al
   140057908:	add    BYTE PTR [rax],al
   14005790a:	add    BYTE PTR [rax-0x80000000],al
   140057910:	add    BYTE PTR [rax],al
   140057912:	add    BYTE PTR [rax-0x80000000],al
   140057918:	add    BYTE PTR [rax],al
   14005791a:	add    BYTE PTR [rax-0x80000000],al
   140057920:	add    BYTE PTR [rax],al
   140057922:	add    BYTE PTR [rax-0x80000000],al
   140057928:	add    BYTE PTR [rax],al
   14005792a:	add    BYTE PTR [rax-0x80000000],al
   140057930:	add    BYTE PTR [rax],al
   140057932:	add    BYTE PTR [rax-0x80000000],al
   140057938:	add    BYTE PTR [rax],al
   14005793a:	add    BYTE PTR [rax-0x80000000],al
   140057940:	add    BYTE PTR [rax],al
   140057942:	add    BYTE PTR [rax-0x80000000],al
   140057948:	add    BYTE PTR [rax],al
   14005794a:	add    BYTE PTR [rax-0x80000000],al
   140057950:	add    BYTE PTR [rax],al
   140057952:	add    BYTE PTR [rax-0x80000000],al
   140057958:	add    BYTE PTR [rax],al
   14005795a:	add    BYTE PTR [rax-0x80000000],al
   140057960:	add    BYTE PTR [rax],al
   140057962:	add    BYTE PTR [rax-0x80000000],al
   140057968:	add    BYTE PTR [rax],al
   14005796a:	add    BYTE PTR [rax-0x80000000],al
   140057970:	add    BYTE PTR [rax],al
   140057972:	add    BYTE PTR [rax+0x70000000],al
   140057978:	add    BYTE PTR [rax],al
   14005797a:	add    BYTE PTR [rax],ch
	...
   140058788:	(bad)  
   140058789:	(bad)  
   14005878a:	(bad)  
   14005878b:	(bad)  
   14005878c:	(bad)  
   14005878d:	(bad)  
   14005878e:	(bad)  
   14005878f:	(bad)  
   140058790:	(bad)  
   140058791:	(bad)  
   140058792:	(bad)  
   140058793:	(bad)  
   140058794:	(bad)  
   140058795:	(bad)  
   140058796:	(bad)  
   140058797:	(bad)  
   140058798:	(bad)  
   140058799:	(bad)  
   14005879a:	(bad)  
   14005879b:	(bad)  
   14005879c:	(bad)  
   14005879d:	(bad)  
   14005879e:	(bad)  
   14005879f:	(bad)  
   1400587a0:	(bad)  
   1400587a1:	(bad)  
   1400587a2:	(bad)  
   1400587a3:	(bad)  
   1400587a4:	(bad)  
   1400587a5:	(bad)  
   1400587a6:	(bad)  
   1400587a7:	(bad)  
   1400587a8:	(bad)  
   1400587a9:	(bad)  
   1400587aa:	(bad)  
   1400587ab:	(bad)  
   1400587ac:	(bad)  
   1400587ad:	(bad)  
   1400587ae:	(bad)  
   1400587af:	(bad)  
   1400587b0:	(bad)  
   1400587b1:	(bad)  
   1400587b2:	(bad)  
   1400587b3:	(bad)  
   1400587b4:	(bad)  
   1400587b5:	(bad)  
   1400587b6:	(bad)  
   1400587b7:	(bad)  
   1400587b8:	(bad)  
   1400587b9:	(bad)  
   1400587ba:	(bad)  
   1400587bb:	(bad)  
   1400587bc:	(bad)  
   1400587bd:	(bad)  
   1400587be:	(bad)  
   1400587bf:	(bad)  
   1400587c0:	(bad)  
   1400587c1:	(bad)  
   1400587c2:	(bad)  
   1400587c3:	(bad)  
   1400587c4:	(bad)  
   1400587c5:	(bad)  
   1400587c6:	(bad)  
   1400587c7:	(bad)  
   1400587c8:	(bad)  
   1400587c9:	(bad)  
   1400587ca:	(bad)  
   1400587cb:	(bad)  
   1400587cc:	(bad)  
   1400587cd:	(bad)  
   1400587ce:	(bad)  
   1400587cf:	(bad)  
   1400587d0:	(bad)  
   1400587d1:	(bad)  
   1400587d2:	(bad)  
   1400587d3:	(bad)  
   1400587d4:	(bad)  
   1400587d5:	(bad)  
   1400587d6:	(bad)  
   1400587d7:	(bad)  
   1400587d8:	(bad)  
   1400587d9:	(bad)  
   1400587da:	(bad)  
   1400587db:	(bad)  
   1400587dc:	(bad)  
   1400587dd:	(bad)  
   1400587de:	(bad)  
   1400587df:	(bad)  
   1400587e0:	(bad)  
   1400587e1:	(bad)  
   1400587e2:	(bad)  
   1400587e3:	(bad)  
   1400587e4:	(bad)  
   1400587e5:	(bad)  
   1400587e6:	(bad)  
   1400587e7:	(bad)  
   1400587e8:	(bad)  
   1400587e9:	(bad)  
   1400587ea:	(bad)  
   1400587eb:	(bad)  
   1400587ec:	(bad)  
   1400587ed:	(bad)  
   1400587ee:	(bad)  
   1400587ef:	(bad)  
   1400587f0:	(bad)  
   1400587f1:	(bad)  
   1400587f2:	(bad)  
   1400587f3:	(bad)  
   1400587f4:	(bad)  
   1400587f5:	(bad)  
   1400587f6:	(bad)  
   1400587f7:	jmp    rax
   1400587f9:	add    BYTE PTR [rax],al
   1400587fb:	add    BYTE PTR [rax],al
   1400587fd:	add    BYTE PTR [rax],al
   1400587ff:	(bad)  
   140058800:	rol    BYTE PTR [rax],0x0
   140058803:	add    BYTE PTR [rax],al
   140058805:	add    BYTE PTR [rax],al
   140058807:	add    eax,eax
   140058809:	add    BYTE PTR [rax],al
   14005880b:	add    BYTE PTR [rax],al
   14005880d:	add    BYTE PTR [rax],al
   14005880f:	add    eax,eax
   140058811:	add    BYTE PTR [rax],al
   140058813:	add    BYTE PTR [rax],al
   140058815:	add    BYTE PTR [rax],al
   140058817:	add    eax,eax
   140058819:	add    BYTE PTR [rax],al
   14005881b:	add    BYTE PTR [rax],al
   14005881d:	add    BYTE PTR [rax],al
   14005881f:	add    eax,eax
   140058821:	add    BYTE PTR [rax],al
   140058823:	add    BYTE PTR [rax],al
   140058825:	add    BYTE PTR [rax],al
   140058827:	add    eax,eax
   140058829:	add    BYTE PTR [rax],al
   14005882b:	add    BYTE PTR [rax],al
   14005882d:	add    BYTE PTR [rax],al
   14005882f:	add    eax,eax
   140058831:	add    BYTE PTR [rax],al
   140058833:	add    BYTE PTR [rax],al
   140058835:	add    BYTE PTR [rax],al
   140058837:	add    eax,eax
   140058839:	add    BYTE PTR [rax],al
   14005883b:	add    BYTE PTR [rax],al
   14005883d:	add    BYTE PTR [rax],al
   14005883f:	add    eax,eax
   140058841:	add    BYTE PTR [rax],al
   140058843:	add    BYTE PTR [rax],al
   140058845:	add    BYTE PTR [rax],al
   140058847:	add    eax,eax
   140058849:	add    BYTE PTR [rax],al
   14005884b:	add    BYTE PTR [rax],al
   14005884d:	add    BYTE PTR [rax],al
   14005884f:	add    eax,eax
   140058851:	add    BYTE PTR [rax],al
   140058853:	add    BYTE PTR [rax],al
   140058855:	add    BYTE PTR [rax],al
   140058857:	add    eax,eax
   140058859:	add    BYTE PTR [rax],al
   14005885b:	add    BYTE PTR [rax],al
   14005885d:	add    BYTE PTR [rax],al
   14005885f:	add    eax,eax
   140058861:	add    BYTE PTR [rax],al
   140058863:	add    BYTE PTR [rax],al
   140058865:	add    BYTE PTR [rax],al
   140058867:	add    eax,eax
   140058869:	add    BYTE PTR [rax],al
   14005886b:	add    BYTE PTR [rax],al
   14005886d:	add    BYTE PTR [rax],al
   14005886f:	add    eax,eax
   140058871:	add    BYTE PTR [rax],al
   140058873:	add    BYTE PTR [rax],al
   140058875:	add    BYTE PTR [rax],al
   140058877:	add    eax,eax
   140058879:	add    BYTE PTR [rax],al
   14005887b:	add    BYTE PTR [rax],al
   14005887d:	add    BYTE PTR [rax],al
   14005887f:	add    eax,eax
   140058881:	add    BYTE PTR [rax],al
   140058883:	add    BYTE PTR [rax],al
   140058885:	add    BYTE PTR [rax],al
   140058887:	add    eax,eax
   140058889:	add    BYTE PTR [rax],al
   14005888b:	add    BYTE PTR [rax],al
   14005888d:	add    BYTE PTR [rax],al
   14005888f:	add    eax,eax
   140058891:	add    BYTE PTR [rax],al
   140058893:	add    BYTE PTR [rax],al
   140058895:	add    BYTE PTR [rax],al
   140058897:	add    eax,eax
   140058899:	add    BYTE PTR [rax],al
   14005889b:	add    BYTE PTR [rax],al
   14005889d:	add    BYTE PTR [rax],al
   14005889f:	add    eax,eax
   1400588a1:	add    BYTE PTR [rax],al
   1400588a3:	add    BYTE PTR [rax],al
   1400588a5:	add    BYTE PTR [rax],al
   1400588a7:	add    eax,eax
   1400588a9:	add    BYTE PTR [rax],al
   1400588ab:	add    BYTE PTR [rax],al
   1400588ad:	add    BYTE PTR [rax],al
   1400588af:	add    eax,eax
   1400588b1:	add    BYTE PTR [rax],al
   1400588b3:	add    BYTE PTR [rax],al
   1400588b5:	add    BYTE PTR [rax],al
   1400588b7:	add    eax,eax
   1400588b9:	add    BYTE PTR [rax],al
   1400588bb:	add    BYTE PTR [rax],al
   1400588bd:	add    BYTE PTR [rax],al
   1400588bf:	add    eax,eax
   1400588c1:	add    BYTE PTR [rax],al
   1400588c3:	add    BYTE PTR [rax],al
   1400588c5:	add    BYTE PTR [rax],al
   1400588c7:	add    eax,eax
   1400588c9:	add    BYTE PTR [rax],al
   1400588cb:	add    BYTE PTR [rax],al
   1400588cd:	add    BYTE PTR [rax],al
   1400588cf:	add    eax,eax
   1400588d1:	add    BYTE PTR [rax],al
   1400588d3:	add    BYTE PTR [rax],al
   1400588d5:	add    BYTE PTR [rax],al
   1400588d7:	add    eax,eax
   1400588d9:	add    BYTE PTR [rax],al
   1400588db:	add    BYTE PTR [rax],al
   1400588dd:	add    BYTE PTR [rax],al
   1400588df:	add    eax,eax
   1400588e1:	add    BYTE PTR [rax],al
   1400588e3:	add    BYTE PTR [rax],al
   1400588e5:	add    BYTE PTR [rax],al
   1400588e7:	add    eax,eax
   1400588e9:	add    BYTE PTR [rax],al
   1400588eb:	add    BYTE PTR [rax],al
   1400588ed:	add    BYTE PTR [rax],al
   1400588ef:	add    eax,eax
   1400588f1:	add    BYTE PTR [rax],al
   1400588f3:	add    BYTE PTR [rax],al
   1400588f5:	add    BYTE PTR [rax],al
   1400588f7:	add    eax,eax
   1400588f9:	add    BYTE PTR [rax],al
   1400588fb:	add    BYTE PTR [rax],al
   1400588fd:	add    BYTE PTR [rax],al
   1400588ff:	add    eax,eax
   140058901:	add    BYTE PTR [rax],al
   140058903:	add    BYTE PTR [rax],al
   140058905:	add    BYTE PTR [rax],al
   140058907:	add    eax,eax
   140058909:	add    BYTE PTR [rax],al
   14005890b:	add    BYTE PTR [rax],al
   14005890d:	add    BYTE PTR [rax],al
   14005890f:	add    esp,eax
   140058911:	add    BYTE PTR [rax],al
   140058913:	add    BYTE PTR [rax],al
   140058915:	add    BYTE PTR [rax],al
   140058917:	(bad)  
   140058918:	(bad)  
   140058919:	(bad)  
   14005891a:	(bad)  
   14005891b:	(bad)  
   14005891c:	(bad)  
   14005891d:	(bad)  
   14005891e:	(bad)  
   14005891f:	(bad)  
   140058920:	(bad)  
   140058921:	(bad)  
   140058922:	(bad)  
   140058923:	(bad)  
   140058924:	(bad)  
   140058925:	(bad)  
   140058926:	(bad)  
   140058927:	(bad)  
   140058928:	(bad)  
   140058929:	(bad)  
   14005892a:	(bad)  
   14005892b:	(bad)  
   14005892c:	(bad)  
   14005892d:	(bad)  
   14005892e:	(bad)  
   14005892f:	(bad)  
   140058930:	(bad)  
   140058931:	(bad)  
   140058932:	(bad)  
   140058933:	(bad)  
   140058934:	(bad)  
   140058935:	(bad)  
   140058936:	(bad)  
   140058937:	(bad)  
   140058938:	(bad)  
   140058939:	(bad)  
   14005893a:	(bad)  
   14005893b:	(bad)  
   14005893c:	(bad)  
   14005893d:	(bad)  
   14005893e:	(bad)  
   14005893f:	(bad)  
   140058940:	(bad)  
   140058941:	(bad)  
   140058942:	(bad)  
   140058943:	(bad)  
   140058944:	(bad)  
   140058945:	(bad)  
   140058946:	(bad)  
   140058947:	(bad)  
   140058948:	(bad)  
   140058949:	(bad)  
   14005894a:	(bad)  
   14005894b:	(bad)  
   14005894c:	(bad)  
   14005894d:	(bad)  
   14005894e:	(bad)  
   14005894f:	(bad)  
   140058950:	(bad)  
   140058951:	(bad)  
   140058952:	(bad)  
   140058953:	(bad)  
   140058954:	(bad)  
   140058955:	(bad)  
   140058956:	(bad)  
   140058957:	(bad)  
   140058958:	(bad)  
   140058959:	(bad)  
   14005895a:	(bad)  
   14005895b:	(bad)  
   14005895c:	(bad)  
   14005895d:	(bad)  
   14005895e:	(bad)  
   14005895f:	(bad)  
   140058960:	(bad)  
   140058961:	(bad)  
   140058962:	(bad)  
   140058963:	(bad)  
   140058964:	(bad)  
   140058965:	(bad)  
   140058966:	(bad)  
   140058967:	(bad)  
   140058968:	(bad)  
   140058969:	(bad)  
   14005896a:	(bad)  
   14005896b:	(bad)  
   14005896c:	(bad)  
   14005896d:	(bad)  
   14005896e:	(bad)  
   14005896f:	(bad)  
   140058970:	(bad)  
   140058971:	(bad)  
   140058972:	(bad)  
   140058973:	(bad)  
   140058974:	(bad)  
   140058975:	(bad)  
   140058976:	(bad)  
   140058977:	(bad)  
   140058978:	(bad)  
   140058979:	(bad)  
   14005897a:	(bad)  
   14005897b:	(bad)  
   14005897c:	(bad)  
   14005897d:	(bad)  
   14005897e:	(bad)  
   14005897f:	(bad)  
   140058980:	(bad)  
   140058981:	(bad)  
   140058982:	(bad)  
   140058983:	(bad)  
   140058984:	(bad)  
   140058985:	(bad)  
   140058986:	(bad)  
   140058987:	jmp    FWORD PTR [rax]
   140058989:	add    BYTE PTR [rax],al
   14005898b:	add    BYTE PTR [rax],dh
   14005898d:	add    BYTE PTR [rax],al
   14005898f:	add    BYTE PTR [rax+0x0],ah
   140058992:	add    BYTE PTR [rax],al
   140058994:	add    DWORD PTR [rax],eax
   140058996:	and    BYTE PTR [rax],al
   140058998:	add    BYTE PTR [rax],al
   14005899a:	add    BYTE PTR [rax],al
   14005899c:	and    BYTE PTR [rip+0x0],0x0        # 0x1400589a3
	...
   140059073:	or     BYTE PTR [rax],al
   140059075:	add    BYTE PTR [rax],al
   140059077:	pop    rax
   140059078:	add    BYTE PTR [rax],al
   14005907a:	add    BYTE PTR [rax-0x80000000],al
   140059080:	add    BYTE PTR [rax],al
   140059082:	add    BYTE PTR [rax-0x80000000],al
   140059088:	add    BYTE PTR [rax],al
   14005908a:	add    BYTE PTR [rax-0x80000000],al
   140059090:	add    BYTE PTR [rax],al
   140059092:	add    BYTE PTR [rax-0x80000000],al
   140059098:	add    BYTE PTR [rax],al
   14005909a:	add    BYTE PTR [rax-0x80000000],al
   1400590a0:	add    BYTE PTR [rax],al
   1400590a2:	add    BYTE PTR [rax-0x80000000],al
   1400590a8:	add    BYTE PTR [rax],al
   1400590aa:	add    BYTE PTR [rax-0x80000000],al
   1400590b0:	add    BYTE PTR [rax],al
   1400590b2:	add    BYTE PTR [rax-0x80000000],al
   1400590b8:	add    BYTE PTR [rax],al
   1400590ba:	add    BYTE PTR [rax-0x80000000],al
   1400590c0:	add    BYTE PTR [rax],al
   1400590c2:	add    BYTE PTR [rax-0x80000000],al
   1400590c8:	add    BYTE PTR [rax],al
   1400590ca:	add    BYTE PTR [rax-0x80000000],al
   1400590d0:	add    BYTE PTR [rax],al
   1400590d2:	add    BYTE PTR [rax-0x80000000],al
   1400590d8:	add    BYTE PTR [rax],al
   1400590da:	add    BYTE PTR [rax-0x80000000],al
   1400590e0:	add    BYTE PTR [rax],al
   1400590e2:	add    BYTE PTR [rax-0x80000000],al
   1400590e8:	add    BYTE PTR [rax],al
   1400590ea:	add    BYTE PTR [rax-0x80000000],al
   1400590f0:	add    BYTE PTR [rax],al
   1400590f2:	add    BYTE PTR [rax-0x80000000],al
   1400590f8:	add    BYTE PTR [rax],al
   1400590fa:	add    BYTE PTR [rax-0x80000000],al
   140059100:	add    BYTE PTR [rax],al
   140059102:	add    BYTE PTR [rax-0x80000000],al
   140059108:	add    BYTE PTR [rax],al
   14005910a:	add    BYTE PTR [rax-0x80000000],al
   140059110:	add    BYTE PTR [rax],al
   140059112:	add    BYTE PTR [rax-0x80000000],al
   140059118:	add    BYTE PTR [rax],al
   14005911a:	add    BYTE PTR [rax-0x80000000],al
   140059120:	add    BYTE PTR [rax],al
   140059122:	add    BYTE PTR [rax-0x80000000],al
   140059128:	add    BYTE PTR [rax],al
   14005912a:	add    BYTE PTR [rax+0x0],bl
   14005912d:	add    BYTE PTR [rax],al
   14005912f:	or     BYTE PTR [rax],al
   140059131:	add    BYTE PTR [rax],al
   140059133:	(bad)  
   140059134:	mov    ecx,DWORD PTR [rbx-0x4f75]
   14005913a:	(bad)  
   14005913b:	(bad)  
   14005913c:	(bad)  
   14005913d:	(bad)  
   14005913e:	(bad)  
   14005913f:	(bad)  
   140059140:	(bad)  
   140059141:	(bad)  
   140059142:	(bad)  
   140059143:	(bad)  
   140059144:	(bad)  
   140059145:	(bad)  
   140059146:	(bad)  
   140059147:	(bad)  
   140059148:	(bad)  
   140059149:	(bad)  
   14005914a:	(bad)  
   14005914b:	(bad)  
   14005914c:	(bad)  
   14005914d:	(bad)  
   14005914e:	(bad)  
   14005914f:	(bad)  
   140059150:	(bad)  
   140059151:	(bad)  
   140059152:	(bad)  
   140059153:	(bad)  
   140059154:	(bad)  
   140059155:	(bad)  
   140059156:	(bad)  
   140059157:	(bad)  
   140059158:	(bad)  
   140059159:	(bad)  
   14005915a:	(bad)  
   14005915b:	(bad)  
   14005915c:	(bad)  
   14005915d:	(bad)  
   14005915e:	(bad)  
   14005915f:	(bad)  
   140059160:	(bad)  
   140059161:	(bad)  
   140059162:	(bad)  
   140059163:	(bad)  
   140059164:	(bad)  
   140059165:	(bad)  
   140059166:	(bad)  
   140059167:	(bad)  
   140059168:	(bad)  
   140059169:	(bad)  
   14005916a:	(bad)  
   14005916b:	(bad)  
   14005916c:	(bad)  
   14005916d:	(bad)  
   14005916e:	(bad)  
   14005916f:	(bad)  
   140059170:	(bad)  
   140059171:	(bad)  
   140059172:	(bad)  
   140059173:	(bad)  
   140059174:	(bad)  
   140059175:	(bad)  
   140059176:	(bad)  
   140059177:	(bad)  
   140059178:	(bad)  
   140059179:	(bad)  
   14005917a:	(bad)  
   14005917b:	(bad)  
   14005917c:	(bad)  
   14005917d:	(bad)  
   14005917e:	(bad)  
   14005917f:	(bad)  
   140059180:	(bad)  
   140059181:	(bad)  
   140059182:	(bad)  
   140059183:	(bad)  
   140059184:	(bad)  
   140059185:	(bad)  
   140059186:	(bad)  
   140059187:	(bad)  
   140059188:	(bad)  
   140059189:	(bad)  
   14005918a:	(bad)  
   14005918b:	(bad)  
   14005918c:	(bad)  
   14005918d:	(bad)  
   14005918e:	(bad)  
   14005918f:	(bad)  
   140059190:	(bad)  
   140059191:	(bad)  
   140059192:	(bad)  
   140059193:	(bad)  
   140059194:	(bad)  
   140059195:	(bad)  
   140059196:	(bad)  
   140059197:	(bad)  
   140059198:	(bad)  
   140059199:	(bad)  
   14005919a:	(bad)  
   14005919b:	(bad)  
   14005919c:	(bad)  
   14005919d:	(bad)  
   14005919e:	(bad)  
   14005919f:	(bad)  
   1400591a0:	(bad)  
   1400591a1:	(bad)  
   1400591a2:	(bad)  
   1400591a3:	(bad)  
   1400591a4:	(bad)  
   1400591a5:	(bad)  
   1400591a6:	(bad)  
   1400591a7:	(bad)  
   1400591a8:	(bad)  
   1400591a9:	(bad)  
   1400591aa:	(bad)  
   1400591ab:	(bad)  
   1400591ac:	(bad)  
   1400591ad:	(bad)  
   1400591ae:	(bad)  
   1400591af:	(bad)  
   1400591b0:	(bad)  
   1400591b1:	(bad)  
   1400591b2:	(bad)  
   1400591b3:	(bad)  
   1400591b4:	(bad)  
   1400591b5:	(bad)  
   1400591b6:	(bad)  
   1400591b7:	(bad)  
   1400591b8:	(bad)  
   1400591b9:	(bad)  
   1400591ba:	(bad)  
   1400591bb:	(bad)  
   1400591bc:	(bad)  
   1400591bd:	(bad)  
   1400591be:	(bad)  
   1400591bf:	(bad)  
   1400591c0:	(bad)  
   1400591c1:	(bad)  
   1400591c2:	(bad)  
   1400591c3:	(bad)  
   1400591c4:	(bad)  
   1400591c5:	(bad)  
   1400591c6:	(bad)  
   1400591c7:	(bad)  
   1400591c8:	(bad)  
   1400591c9:	(bad)  
   1400591ca:	(bad)  
   1400591cb:	(bad)  
   1400591cc:	(bad)  
   1400591cd:	(bad)  
   1400591ce:	(bad)  
   1400591cf:	(bad)  
   1400591d0:	(bad)  
   1400591d1:	(bad)  
   1400591d2:	(bad)  
   1400591d3:	(bad)  
   1400591d4:	(bad)  
   1400591d5:	(bad)  
   1400591d6:	(bad)  
   1400591d7:	(bad)  
   1400591d8:	(bad)  
   1400591d9:	(bad)  
   1400591da:	(bad)  
   1400591db:	(bad)  
   1400591dc:	(bad)  
   1400591dd:	(bad)  
   1400591de:	(bad)  
   1400591df:	(bad)  
   1400591e0:	(bad)  
   1400591e1:	(bad)  
   1400591e2:	(bad)  
   1400591e3:	(bad)  
   1400591e4:	(bad)  
   1400591e5:	(bad)  
   1400591e6:	(bad)  
   1400591e7:	dec    DWORD PTR [rbx+0xb08b8b]
   1400591ed:	add    BYTE PTR [rax],al
   1400591ef:	pop    rax
   1400591f0:	add    BYTE PTR [rax],al
   1400591f2:	add    BYTE PTR [rax-0x1],al
   1400591f8:	(bad)  
   1400591f9:	(bad)  
   1400591fa:	(bad)  
   1400591fb:	(bad)  
   1400591fc:	(bad)  
   1400591fd:	(bad)  
   1400591fe:	(bad)  
   1400591ff:	(bad)  
   140059200:	(bad)  
   140059201:	(bad)  
   140059202:	(bad)  
   140059203:	(bad)  
   140059204:	(bad)  
   140059205:	(bad)  
   140059206:	(bad)  
   140059207:	(bad)  
   140059208:	(bad)  
   140059209:	(bad)  
   14005920a:	(bad)  
   14005920b:	(bad)  
   14005920c:	(bad)  
   14005920d:	(bad)  
   14005920e:	(bad)  
   14005920f:	(bad)  
   140059210:	(bad)  
   140059211:	(bad)  
   140059212:	(bad)  
   140059213:	(bad)  
   140059214:	(bad)  
   140059215:	(bad)  
   140059216:	(bad)  
   140059217:	(bad)  
   140059218:	(bad)  
   140059219:	(bad)  
   14005921a:	(bad)  
   14005921b:	(bad)  
   14005921c:	(bad)  
   14005921d:	(bad)  
   14005921e:	(bad)  
   14005921f:	(bad)  
   140059220:	(bad)  
   140059221:	(bad)  
   140059222:	(bad)  
   140059223:	(bad)  
   140059224:	(bad)  
   140059225:	(bad)  
   140059226:	(bad)  
   140059227:	(bad)  
   140059228:	(bad)  
   140059229:	(bad)  
   14005922a:	(bad)  
   14005922b:	(bad)  
   14005922c:	(bad)  
   14005922d:	(bad)  
   14005922e:	(bad)  
   14005922f:	(bad)  
   140059230:	(bad)  
   140059231:	(bad)  
   140059232:	(bad)  
   140059233:	(bad)  
   140059234:	(bad)  
   140059235:	(bad)  
   140059236:	(bad)  
   140059237:	(bad)  
   140059238:	(bad)  
   140059239:	(bad)  
   14005923a:	(bad)  
   14005923b:	(bad)  
   14005923c:	(bad)  
   14005923d:	(bad)  
   14005923e:	(bad)  
   14005923f:	(bad)  
   140059240:	(bad)  
   140059241:	(bad)  
   140059242:	(bad)  
   140059243:	(bad)  
   140059244:	(bad)  
   140059245:	(bad)  
   140059246:	(bad)  
   140059247:	(bad)  
   140059248:	(bad)  
   140059249:	(bad)  
   14005924a:	(bad)  
   14005924b:	(bad)  
   14005924c:	(bad)  
   14005924d:	(bad)  
   14005924e:	(bad)  
   14005924f:	(bad)  
   140059250:	(bad)  
   140059251:	(bad)  
   140059252:	(bad)  
   140059253:	(bad)  
   140059254:	(bad)  
   140059255:	(bad)  
   140059256:	(bad)  
   140059257:	(bad)  
   140059258:	(bad)  
   140059259:	(bad)  
   14005925a:	(bad)  
   14005925b:	(bad)  
   14005925c:	(bad)  
   14005925d:	(bad)  
   14005925e:	(bad)  
   14005925f:	(bad)  
   140059260:	(bad)  
   140059261:	(bad)  
   140059262:	(bad)  
   140059263:	(bad)  
   140059264:	(bad)  
   140059265:	(bad)  
   140059266:	(bad)  
   140059267:	(bad)  
   140059268:	(bad)  
   140059269:	(bad)  
   14005926a:	(bad)  
   14005926b:	(bad)  
   14005926c:	(bad)  
   14005926d:	(bad)  
   14005926e:	(bad)  
   14005926f:	(bad)  
   140059270:	(bad)  
   140059271:	(bad)  
   140059272:	(bad)  
   140059273:	(bad)  
   140059274:	(bad)  
   140059275:	(bad)  
   140059276:	(bad)  
   140059277:	(bad)  
   140059278:	(bad)  
   140059279:	(bad)  
   14005927a:	(bad)  
   14005927b:	(bad)  
   14005927c:	(bad)  
   14005927d:	(bad)  
   14005927e:	(bad)  
   14005927f:	(bad)  
   140059280:	(bad)  
   140059281:	(bad)  
   140059282:	(bad)  
   140059283:	(bad)  
   140059284:	(bad)  
   140059285:	(bad)  
   140059286:	(bad)  
   140059287:	(bad)  
   140059288:	(bad)  
   140059289:	(bad)  
   14005928a:	(bad)  
   14005928b:	(bad)  
   14005928c:	(bad)  
   14005928d:	(bad)  
   14005928e:	(bad)  
   14005928f:	(bad)  
   140059290:	(bad)  
   140059291:	(bad)  
   140059292:	(bad)  
   140059293:	(bad)  
   140059294:	(bad)  
   140059295:	(bad)  
   140059296:	(bad)  
   140059297:	(bad)  
   140059298:	(bad)  
   140059299:	(bad)  
   14005929a:	(bad)  
   14005929b:	(bad)  
   14005929c:	(bad)  
   14005929d:	(bad)  
   14005929e:	(bad)  
   14005929f:	(bad)  
   1400592a0:	(bad)  
   1400592a1:	(bad)  
   1400592a2:	(bad)  
   1400592a3:	(bad)  
   1400592a4:	(bad)  
   1400592a5:	(bad)  
   1400592a6:	(bad)  
   1400592a7:	(bad)  
   1400592a8:	(bad)  
   1400592a9:	(bad)  
   1400592aa:	(bad)  
   1400592ab:	inc    DWORD PTR [rax]
   1400592ad:	add    BYTE PTR [rax],al
   1400592af:	add    BYTE PTR [rax],0x0
   1400592b2:	add    BYTE PTR [rax-0x1],al
   1400592b8:	(bad)  
   1400592b9:	(bad)  
   1400592ba:	(bad)  
   1400592bb:	(bad)  
   1400592bc:	(bad)  
   1400592bd:	(bad)  
   1400592be:	(bad)  
   1400592bf:	(bad)  
   1400592c0:	(bad)  
   1400592c1:	(bad)  
   1400592c2:	(bad)  
   1400592c3:	(bad)  
   1400592c4:	(bad)  
   1400592c5:	(bad)  
   1400592c6:	(bad)  
   1400592c7:	(bad)  
   1400592c8:	(bad)  
   1400592c9:	(bad)  
   1400592ca:	(bad)  
   1400592cb:	(bad)  
   1400592cc:	(bad)  
   1400592cd:	(bad)  
   1400592ce:	(bad)  
   1400592cf:	(bad)  
   1400592d0:	(bad)  
   1400592d1:	(bad)  
   1400592d2:	(bad)  
   1400592d3:	(bad)  
   1400592d4:	(bad)  
   1400592d5:	(bad)  
   1400592d6:	(bad)  
   1400592d7:	(bad)  
   1400592d8:	(bad)  
   1400592d9:	(bad)  
   1400592da:	(bad)  
   1400592db:	(bad)  
   1400592dc:	(bad)  
   1400592dd:	(bad)  
   1400592de:	(bad)  
   1400592df:	(bad)  
   1400592e0:	(bad)  
   1400592e1:	(bad)  
   1400592e2:	(bad)  
   1400592e3:	(bad)  
   1400592e4:	(bad)  
   1400592e5:	(bad)  
   1400592e6:	(bad)  
   1400592e7:	(bad)  
   1400592e8:	(bad)  
   1400592e9:	(bad)  
   1400592ea:	(bad)  
   1400592eb:	(bad)  
   1400592ec:	(bad)  
   1400592ed:	(bad)  
   1400592ee:	(bad)  
   1400592ef:	(bad)  
   1400592f0:	(bad)  
   1400592f1:	(bad)  
   1400592f2:	(bad)  
   1400592f3:	(bad)  
   1400592f4:	(bad)  
   1400592f5:	(bad)  
   1400592f6:	(bad)  
   1400592f7:	(bad)  
   1400592f8:	(bad)  
   1400592f9:	(bad)  
   1400592fa:	(bad)  
   1400592fb:	(bad)  
   1400592fc:	(bad)  
   1400592fd:	(bad)  
   1400592fe:	(bad)  
   1400592ff:	(bad)  
   140059300:	(bad)  
   140059301:	(bad)  
   140059302:	(bad)  
   140059303:	(bad)  
   140059304:	(bad)  
   140059305:	(bad)  
   140059306:	(bad)  
   140059307:	(bad)  
   140059308:	(bad)  
   140059309:	(bad)  
   14005930a:	(bad)  
   14005930b:	(bad)  
   14005930c:	(bad)  
   14005930d:	(bad)  
   14005930e:	(bad)  
   14005930f:	(bad)  
   140059310:	(bad)  
   140059311:	(bad)  
   140059312:	(bad)  
   140059313:	(bad)  
   140059314:	(bad)  
   140059315:	(bad)  
   140059316:	(bad)  
   140059317:	(bad)  
   140059318:	(bad)  
   140059319:	(bad)  
   14005931a:	(bad)  
   14005931b:	(bad)  
   14005931c:	(bad)  
   14005931d:	(bad)  
   14005931e:	(bad)  
   14005931f:	(bad)  
   140059320:	(bad)  
   140059321:	(bad)  
   140059322:	(bad)  
   140059323:	(bad)  
   140059324:	(bad)  
   140059325:	(bad)  
   140059326:	(bad)  
   140059327:	(bad)  
   140059328:	(bad)  
   140059329:	(bad)  
   14005932a:	(bad)  
   14005932b:	(bad)  
   14005932c:	(bad)  
   14005932d:	(bad)  
   14005932e:	(bad)  
   14005932f:	(bad)  
   140059330:	(bad)  
   140059331:	(bad)  
   140059332:	(bad)  
   140059333:	(bad)  
   140059334:	(bad)  
   140059335:	(bad)  
   140059336:	(bad)  
   140059337:	(bad)  
   140059338:	(bad)  
   140059339:	(bad)  
   14005933a:	(bad)  
   14005933b:	(bad)  
   14005933c:	(bad)  
   14005933d:	(bad)  
   14005933e:	(bad)  
   14005933f:	(bad)  
   140059340:	(bad)  
   140059341:	(bad)  
   140059342:	(bad)  
   140059343:	(bad)  
   140059344:	(bad)  
   140059345:	(bad)  
   140059346:	(bad)  
   140059347:	(bad)  
   140059348:	(bad)  
   140059349:	(bad)  
   14005934a:	(bad)  
   14005934b:	(bad)  
   14005934c:	(bad)  
   14005934d:	(bad)  
   14005934e:	(bad)  
   14005934f:	(bad)  
   140059350:	(bad)  
   140059351:	(bad)  
   140059352:	(bad)  
   140059353:	(bad)  
   140059354:	(bad)  
   140059355:	(bad)  
   140059356:	(bad)  
   140059357:	(bad)  
   140059358:	(bad)  
   140059359:	(bad)  
   14005935a:	(bad)  
   14005935b:	(bad)  
   14005935c:	(bad)  
   14005935d:	(bad)  
   14005935e:	(bad)  
   14005935f:	(bad)  
   140059360:	(bad)  
   140059361:	(bad)  
   140059362:	(bad)  
   140059363:	(bad)  
   140059364:	(bad)  
   140059365:	(bad)  
   140059366:	(bad)  
   140059367:	(bad)  
   140059368:	(bad)  
   140059369:	(bad)  
   14005936a:	(bad)  
   14005936b:	inc    DWORD PTR [rax]
   14005936d:	add    BYTE PTR [rax],al
   14005936f:	add    BYTE PTR [rax],0x0
   140059372:	add    BYTE PTR [rax-0x1],al
   140059378:	(bad)  
   140059379:	(bad)  
   14005937a:	(bad)  
   14005937b:	(bad)  
   14005937c:	(bad)  
   14005937d:	(bad)  
   14005937e:	(bad)  
   14005937f:	(bad)  
   140059380:	(bad)  
   140059381:	(bad)  
   140059382:	(bad)  
   140059383:	(bad)  
   140059384:	(bad)  
   140059385:	(bad)  
   140059386:	(bad)  
   140059387:	(bad)  
   140059388:	(bad)  
   140059389:	(bad)  
   14005938a:	(bad)  
   14005938b:	(bad)  
   14005938c:	(bad)  
   14005938d:	(bad)  
   14005938e:	(bad)  
   14005938f:	(bad)  
   140059390:	(bad)  
   140059391:	(bad)  
   140059392:	(bad)  
   140059393:	(bad)  
   140059394:	(bad)  
   140059395:	(bad)  
   140059396:	(bad)  
   140059397:	(bad)  
   140059398:	(bad)  
   140059399:	(bad)  
   14005939a:	(bad)  
   14005939b:	(bad)  
   14005939c:	(bad)  
   14005939d:	(bad)  
   14005939e:	(bad)  
   14005939f:	(bad)  
   1400593a0:	(bad)  
   1400593a1:	(bad)  
   1400593a2:	(bad)  
   1400593a3:	(bad)  
   1400593a4:	(bad)  
   1400593a5:	(bad)  
   1400593a6:	(bad)  
   1400593a7:	(bad)  
   1400593a8:	(bad)  
   1400593a9:	(bad)  
   1400593aa:	(bad)  
   1400593ab:	(bad)  
   1400593ac:	(bad)  
   1400593ad:	(bad)  
   1400593ae:	(bad)  
   1400593af:	(bad)  
   1400593b0:	(bad)  
   1400593b1:	(bad)  
   1400593b2:	(bad)  
   1400593b3:	(bad)  
   1400593b4:	(bad)  
   1400593b5:	(bad)  
   1400593b6:	(bad)  
   1400593b7:	(bad)  
   1400593b8:	(bad)  
   1400593b9:	(bad)  
   1400593ba:	(bad)  
   1400593bb:	(bad)  
   1400593bc:	(bad)  
   1400593bd:	(bad)  
   1400593be:	(bad)  
   1400593bf:	(bad)  
   1400593c0:	(bad)  
   1400593c1:	(bad)  
   1400593c2:	(bad)  
   1400593c3:	(bad)  
   1400593c4:	(bad)  
   1400593c5:	(bad)  
   1400593c6:	(bad)  
   1400593c7:	(bad)  
   1400593c8:	(bad)  
   1400593c9:	(bad)  
   1400593ca:	(bad)  
   1400593cb:	(bad)  
   1400593cc:	(bad)  
   1400593cd:	(bad)  
   1400593ce:	(bad)  
   1400593cf:	(bad)  
   1400593d0:	(bad)  
   1400593d1:	(bad)  
   1400593d2:	(bad)  
   1400593d3:	(bad)  
   1400593d4:	(bad)  
   1400593d5:	(bad)  
   1400593d6:	(bad)  
   1400593d7:	(bad)  
   1400593d8:	(bad)  
   1400593d9:	(bad)  
   1400593da:	(bad)  
   1400593db:	(bad)  
   1400593dc:	(bad)  
   1400593dd:	(bad)  
   1400593de:	(bad)  
   1400593df:	(bad)  
   1400593e0:	(bad)  
   1400593e1:	(bad)  
   1400593e2:	(bad)  
   1400593e3:	(bad)  
   1400593e4:	(bad)  
   1400593e5:	(bad)  
   1400593e6:	(bad)  
   1400593e7:	(bad)  
   1400593e8:	(bad)  
   1400593e9:	(bad)  
   1400593ea:	(bad)  
   1400593eb:	(bad)  
   1400593ec:	(bad)  
   1400593ed:	(bad)  
   1400593ee:	(bad)  
   1400593ef:	(bad)  
   1400593f0:	(bad)  
   1400593f1:	(bad)  
   1400593f2:	(bad)  
   1400593f3:	(bad)  
   1400593f4:	(bad)  
   1400593f5:	(bad)  
   1400593f6:	(bad)  
   1400593f7:	(bad)  
   1400593f8:	(bad)  
   1400593f9:	(bad)  
   1400593fa:	(bad)  
   1400593fb:	(bad)  
   1400593fc:	(bad)  
   1400593fd:	(bad)  
   1400593fe:	(bad)  
   1400593ff:	(bad)  
   140059400:	(bad)  
   140059401:	(bad)  
   140059402:	(bad)  
   140059403:	(bad)  
   140059404:	(bad)  
   140059405:	(bad)  
   140059406:	(bad)  
   140059407:	(bad)  
   140059408:	(bad)  
   140059409:	(bad)  
   14005940a:	(bad)  
   14005940b:	(bad)  
   14005940c:	(bad)  
   14005940d:	(bad)  
   14005940e:	(bad)  
   14005940f:	(bad)  
   140059410:	(bad)  
   140059411:	(bad)  
   140059412:	(bad)  
   140059413:	(bad)  
   140059414:	(bad)  
   140059415:	(bad)  
   140059416:	(bad)  
   140059417:	(bad)  
   140059418:	(bad)  
   140059419:	(bad)  
   14005941a:	(bad)  
   14005941b:	(bad)  
   14005941c:	(bad)  
   14005941d:	(bad)  
   14005941e:	(bad)  
   14005941f:	(bad)  
   140059420:	(bad)  
   140059421:	(bad)  
   140059422:	(bad)  
   140059423:	(bad)  
   140059424:	(bad)  
   140059425:	(bad)  
   140059426:	(bad)  
   140059427:	(bad)  
   140059428:	(bad)  
   140059429:	(bad)  
   14005942a:	(bad)  
   14005942b:	inc    DWORD PTR [rax]
   14005942d:	add    BYTE PTR [rax],al
   14005942f:	add    BYTE PTR [rax],0x0
   140059432:	add    BYTE PTR [rax-0x1],al
   140059438:	(bad)  
   140059439:	(bad)  
   14005943a:	(bad)  
   14005943b:	(bad)  
   14005943c:	(bad)  
   14005943d:	(bad)  
   14005943e:	(bad)  
   14005943f:	(bad)  
   140059440:	(bad)  
   140059441:	(bad)  
   140059442:	(bad)  
   140059443:	inc    DWORD PTR [rax]
   140059445:	add    BYTE PTR [rax],al
   140059447:	add    BYTE PTR [rax],0x0
   14005944a:	add    BYTE PTR [rax-0x80000000],al
   140059450:	add    BYTE PTR [rax],al
   140059452:	add    BYTE PTR [rax-0x80000000],al
   140059458:	add    BYTE PTR [rax],al
   14005945a:	add    BYTE PTR [rax-0x80000000],al
   140059460:	add    BYTE PTR [rax],al
   140059462:	add    BYTE PTR [rax-0x80000000],al
   140059468:	add    BYTE PTR [rax],al
   14005946a:	add    BYTE PTR [rax-0x80000000],al
   140059470:	add    BYTE PTR [rax],al
   140059472:	add    BYTE PTR [rax-0x80000000],al
   140059478:	add    BYTE PTR [rax],al
   14005947a:	add    BYTE PTR [rax-0x80000000],al
   140059480:	add    BYTE PTR [rax],al
   140059482:	add    BYTE PTR [rax-0x80000000],al
   140059488:	add    BYTE PTR [rax],al
   14005948a:	add    BYTE PTR [rax-0x80000000],al
   140059490:	add    BYTE PTR [rax],al
   140059492:	add    BYTE PTR [rax-0x80000000],al
   140059498:	add    BYTE PTR [rax],al
   14005949a:	add    BYTE PTR [rax-0x80000000],al
   1400594a0:	add    BYTE PTR [rax],al
   1400594a2:	add    BYTE PTR [rax-0x80000000],al
   1400594a8:	add    BYTE PTR [rax],al
   1400594aa:	add    BYTE PTR [rax-0x80000000],al
   1400594b0:	add    BYTE PTR [rax],al
   1400594b2:	add    BYTE PTR [rax-0x80000000],al
   1400594b8:	add    BYTE PTR [rax],al
   1400594ba:	add    BYTE PTR [rax-0x80000000],al
   1400594c0:	add    BYTE PTR [rax],al
   1400594c2:	add    BYTE PTR [rax-0x80000000],al
   1400594c8:	add    BYTE PTR [rax],al
   1400594ca:	add    BYTE PTR [rax-0x80000000],al
   1400594d0:	add    BYTE PTR [rax],al
   1400594d2:	add    BYTE PTR [rax-0x80000000],al
   1400594d8:	add    BYTE PTR [rax],al
   1400594da:	add    BYTE PTR [rax-0x1],al
   1400594e0:	(bad)  
   1400594e1:	(bad)  
   1400594e2:	(bad)  
   1400594e3:	(bad)  
   1400594e4:	(bad)  
   1400594e5:	(bad)  
   1400594e6:	(bad)  
   1400594e7:	(bad)  
   1400594e8:	(bad)  
   1400594e9:	(bad)  
   1400594ea:	(bad)  
   1400594eb:	inc    DWORD PTR [rax]
   1400594ed:	add    BYTE PTR [rax],al
   1400594ef:	add    BYTE PTR [rax],0x0
   1400594f2:	add    BYTE PTR [rax-0x1],al
   1400594f8:	(bad)  
   1400594f9:	(bad)  
   1400594fa:	(bad)  
   1400594fb:	(bad)  
   1400594fc:	(bad)  
   1400594fd:	(bad)  
   1400594fe:	(bad)  
   1400594ff:	(bad)  
   140059500:	(bad)  
   140059501:	(bad)  
   140059502:	(bad)  
   140059503:	inc    DWORD PTR [rax]
   140059505:	add    BYTE PTR [rax],al
   140059507:	add    BYTE PTR [rax],0x0
   14005950a:	add    BYTE PTR [rax-0x80000000],al
   140059510:	add    BYTE PTR [rax],al
   140059512:	add    BYTE PTR [rax-0x80000000],al
   140059518:	add    BYTE PTR [rax],al
   14005951a:	add    BYTE PTR [rax-0x80000000],al
   140059520:	add    BYTE PTR [rax],al
   140059522:	add    BYTE PTR [rax-0x80000000],al
   140059528:	add    BYTE PTR [rax],al
   14005952a:	add    BYTE PTR [rax-0x80000000],al
   140059530:	add    BYTE PTR [rax],al
   140059532:	add    BYTE PTR [rax-0x80000000],al
   140059538:	add    BYTE PTR [rax],al
   14005953a:	add    BYTE PTR [rax-0x80000000],al
   140059540:	add    BYTE PTR [rax],al
   140059542:	add    BYTE PTR [rax-0x80000000],al
   140059548:	add    BYTE PTR [rax],al
   14005954a:	add    BYTE PTR [rax-0x80000000],al
   140059550:	add    BYTE PTR [rax],al
   140059552:	add    BYTE PTR [rax-0x80000000],al
   140059558:	add    BYTE PTR [rax],al
   14005955a:	add    BYTE PTR [rax-0x80000000],al
   140059560:	add    BYTE PTR [rax],al
   140059562:	add    BYTE PTR [rax-0x80000000],al
   140059568:	add    BYTE PTR [rax],al
   14005956a:	add    BYTE PTR [rax-0x80000000],al
   140059570:	add    BYTE PTR [rax],al
   140059572:	add    BYTE PTR [rax-0x80000000],al
   140059578:	add    BYTE PTR [rax],al
   14005957a:	add    BYTE PTR [rax-0x80000000],al
   140059580:	add    BYTE PTR [rax],al
   140059582:	add    BYTE PTR [rax-0x80000000],al
   140059588:	add    BYTE PTR [rax],al
   14005958a:	add    BYTE PTR [rax-0x80000000],al
   140059590:	add    BYTE PTR [rax],al
   140059592:	add    BYTE PTR [rax-0x80000000],al
   140059598:	add    BYTE PTR [rax],al
   14005959a:	add    BYTE PTR [rax-0x1],al
   1400595a0:	(bad)  
   1400595a1:	(bad)  
   1400595a2:	(bad)  
   1400595a3:	(bad)  
   1400595a4:	(bad)  
   1400595a5:	(bad)  
   1400595a6:	(bad)  
   1400595a7:	(bad)  
   1400595a8:	(bad)  
   1400595a9:	(bad)  
   1400595aa:	(bad)  
   1400595ab:	inc    DWORD PTR [rax]
   1400595ad:	add    BYTE PTR [rax],al
   1400595af:	add    BYTE PTR [rax],0x0
   1400595b2:	add    BYTE PTR [rax-0x1],al
   1400595b8:	(bad)  
   1400595b9:	(bad)  
   1400595ba:	(bad)  
   1400595bb:	(bad)  
   1400595bc:	(bad)  
   1400595bd:	(bad)  
   1400595be:	(bad)  
   1400595bf:	(bad)  
   1400595c0:	(bad)  
   1400595c1:	(bad)  
   1400595c2:	(bad)  
   1400595c3:	inc    DWORD PTR [rax]
   1400595c5:	add    BYTE PTR [rax],al
   1400595c7:	add    BYTE PTR [rax],0x0
   1400595ca:	add    BYTE PTR [rax-0x1],al
   1400595d0:	(bad)  
   1400595d1:	(bad)  
   1400595d2:	(bad)  
   1400595d3:	(bad)  
   1400595d4:	(bad)  
   1400595d5:	(bad)  
   1400595d6:	(bad)  
   1400595d7:	(bad)  
   1400595d8:	(bad)  
   1400595d9:	(bad)  
   1400595da:	(bad)  
   1400595db:	(bad)  
   1400595dc:	(bad)  
   1400595dd:	(bad)  
   1400595de:	(bad)  
   1400595df:	(bad)  
   1400595e0:	(bad)  
   1400595e1:	(bad)  
   1400595e2:	(bad)  
   1400595e3:	inc    DWORD PTR [rax]
   1400595e5:	add    BYTE PTR [rax],al
   1400595e7:	add    BYTE PTR [rax],0x0
   1400595ea:	add    BYTE PTR [rax-0x1],al
   1400595f0:	(bad)  
   1400595f1:	(bad)  
   1400595f2:	(bad)  
   1400595f3:	(bad)  
   1400595f4:	(bad)  
   1400595f5:	(bad)  
   1400595f6:	(bad)  
   1400595f7:	(bad)  
   1400595f8:	(bad)  
   1400595f9:	(bad)  
   1400595fa:	(bad)  
   1400595fb:	(bad)  
   1400595fc:	(bad)  
   1400595fd:	(bad)  
   1400595fe:	(bad)  
   1400595ff:	(bad)  
   140059600:	(bad)  
   140059601:	(bad)  
   140059602:	(bad)  
   140059603:	(bad)  
   140059604:	(bad)  
   140059605:	(bad)  
   140059606:	(bad)  
   140059607:	(bad)  
   140059608:	(bad)  
   140059609:	(bad)  
   14005960a:	(bad)  
   14005960b:	(bad)  
   14005960c:	(bad)  
   14005960d:	(bad)  
   14005960e:	(bad)  
   14005960f:	(bad)  
   140059610:	(bad)  
   140059611:	(bad)  
   140059612:	(bad)  
   140059613:	(bad)  
   140059614:	(bad)  
   140059615:	(bad)  
   140059616:	(bad)  
   140059617:	(bad)  
   140059618:	(bad)  
   140059619:	(bad)  
   14005961a:	(bad)  
   14005961b:	(bad)  
   14005961c:	(bad)  
   14005961d:	(bad)  
   14005961e:	(bad)  
   14005961f:	(bad)  
   140059620:	(bad)  
   140059621:	(bad)  
   140059622:	(bad)  
   140059623:	(bad)  
   140059624:	(bad)  
   140059625:	(bad)  
   140059626:	(bad)  
   140059627:	(bad)  
   140059628:	(bad)  
   140059629:	(bad)  
   14005962a:	(bad)  
   14005962b:	(bad)  
   14005962c:	(bad)  
   14005962d:	(bad)  
   14005962e:	(bad)  
   14005962f:	(bad)  
   140059630:	(bad)  
   140059631:	(bad)  
   140059632:	(bad)  
   140059633:	inc    DWORD PTR [rax]
   140059635:	add    BYTE PTR [rax],al
   140059637:	add    BYTE PTR [rax],0x0
   14005963a:	add    BYTE PTR [rax-0x1],al
   140059640:	(bad)  
   140059641:	(bad)  
   140059642:	(bad)  
   140059643:	(bad)  
   140059644:	(bad)  
   140059645:	(bad)  
   140059646:	(bad)  
   140059647:	(bad)  
   140059648:	(bad)  
   140059649:	(bad)  
   14005964a:	(bad)  
   14005964b:	(bad)  
   14005964c:	(bad)  
   14005964d:	(bad)  
   14005964e:	(bad)  
   14005964f:	(bad)  
   140059650:	(bad)  
   140059651:	(bad)  
   140059652:	(bad)  
   140059653:	inc    DWORD PTR [rax]
   140059655:	add    BYTE PTR [rax],al
   140059657:	add    BYTE PTR [rax],0x0
   14005965a:	add    BYTE PTR [rax-0x1],al
   140059660:	(bad)  
   140059661:	(bad)  
   140059662:	(bad)  
   140059663:	(bad)  
   140059664:	(bad)  
   140059665:	(bad)  
   140059666:	(bad)  
   140059667:	(bad)  
   140059668:	(bad)  
   140059669:	(bad)  
   14005966a:	(bad)  
   14005966b:	inc    DWORD PTR [rax]
   14005966d:	add    BYTE PTR [rax],al
   14005966f:	add    BYTE PTR [rax],0x0
   140059672:	add    BYTE PTR [rax-0x1],al
   140059678:	(bad)  
   140059679:	(bad)  
   14005967a:	(bad)  
   14005967b:	(bad)  
   14005967c:	(bad)  
   14005967d:	(bad)  
   14005967e:	(bad)  
   14005967f:	(bad)  
   140059680:	(bad)  
   140059681:	(bad)  
   140059682:	(bad)  
   140059683:	inc    DWORD PTR [rax]
   140059685:	add    BYTE PTR [rax],al
   140059687:	add    BYTE PTR [rax],0x0
   14005968a:	add    BYTE PTR [rax-0x1],al
   140059690:	(bad)  
   140059691:	(bad)  
   140059692:	(bad)  
   140059693:	(bad)  
   140059694:	(bad)  
   140059695:	(bad)  
   140059696:	(bad)  
   140059697:	(bad)  
   140059698:	(bad)  
   140059699:	(bad)  
   14005969a:	(bad)  
   14005969b:	(bad)  
   14005969c:	(bad)  
   14005969d:	(bad)  
   14005969e:	(bad)  
   14005969f:	(bad)  
   1400596a0:	(bad)  
   1400596a1:	(bad)  
   1400596a2:	(bad)  
   1400596a3:	inc    DWORD PTR [rax]
   1400596a5:	add    BYTE PTR [rax],al
   1400596a7:	add    BYTE PTR [rax],0x0
   1400596aa:	add    BYTE PTR [rax-0x1],al
   1400596b0:	(bad)  
   1400596b1:	(bad)  
   1400596b2:	(bad)  
   1400596b3:	(bad)  
   1400596b4:	(bad)  
   1400596b5:	(bad)  
   1400596b6:	(bad)  
   1400596b7:	(bad)  
   1400596b8:	(bad)  
   1400596b9:	(bad)  
   1400596ba:	(bad)  
   1400596bb:	(bad)  
   1400596bc:	(bad)  
   1400596bd:	(bad)  
   1400596be:	(bad)  
   1400596bf:	(bad)  
   1400596c0:	(bad)  
   1400596c1:	(bad)  
   1400596c2:	(bad)  
   1400596c3:	(bad)  
   1400596c4:	(bad)  
   1400596c5:	(bad)  
   1400596c6:	(bad)  
   1400596c7:	(bad)  
   1400596c8:	(bad)  
   1400596c9:	(bad)  
   1400596ca:	(bad)  
   1400596cb:	(bad)  
   1400596cc:	(bad)  
   1400596cd:	(bad)  
   1400596ce:	(bad)  
   1400596cf:	(bad)  
   1400596d0:	(bad)  
   1400596d1:	(bad)  
   1400596d2:	(bad)  
   1400596d3:	(bad)  
   1400596d4:	(bad)  
   1400596d5:	(bad)  
   1400596d6:	(bad)  
   1400596d7:	(bad)  
   1400596d8:	(bad)  
   1400596d9:	(bad)  
   1400596da:	(bad)  
   1400596db:	(bad)  
   1400596dc:	(bad)  
   1400596dd:	(bad)  
   1400596de:	(bad)  
   1400596df:	(bad)  
   1400596e0:	(bad)  
   1400596e1:	(bad)  
   1400596e2:	(bad)  
   1400596e3:	(bad)  
   1400596e4:	(bad)  
   1400596e5:	(bad)  
   1400596e6:	(bad)  
   1400596e7:	(bad)  
   1400596e8:	(bad)  
   1400596e9:	(bad)  
   1400596ea:	(bad)  
   1400596eb:	(bad)  
   1400596ec:	(bad)  
   1400596ed:	(bad)  
   1400596ee:	(bad)  
   1400596ef:	(bad)  
   1400596f0:	(bad)  
   1400596f1:	(bad)  
   1400596f2:	(bad)  
   1400596f3:	inc    DWORD PTR [rax]
   1400596f5:	add    BYTE PTR [rax],al
   1400596f7:	add    BYTE PTR [rax],0x0
   1400596fa:	add    BYTE PTR [rax-0x1],al
   140059700:	(bad)  
   140059701:	(bad)  
   140059702:	(bad)  
   140059703:	(bad)  
   140059704:	(bad)  
   140059705:	(bad)  
   140059706:	(bad)  
   140059707:	(bad)  
   140059708:	(bad)  
   140059709:	(bad)  
   14005970a:	(bad)  
   14005970b:	(bad)  
   14005970c:	(bad)  
   14005970d:	(bad)  
   14005970e:	(bad)  
   14005970f:	(bad)  
   140059710:	(bad)  
   140059711:	(bad)  
   140059712:	(bad)  
   140059713:	inc    DWORD PTR [rax]
   140059715:	add    BYTE PTR [rax],al
   140059717:	add    BYTE PTR [rax],0x0
   14005971a:	add    BYTE PTR [rax-0x1],al
   140059720:	(bad)  
   140059721:	(bad)  
   140059722:	(bad)  
   140059723:	(bad)  
   140059724:	(bad)  
   140059725:	(bad)  
   140059726:	(bad)  
   140059727:	(bad)  
   140059728:	(bad)  
   140059729:	(bad)  
   14005972a:	(bad)  
   14005972b:	inc    DWORD PTR [rax]
   14005972d:	add    BYTE PTR [rax],al
   14005972f:	add    BYTE PTR [rax],0x0
   140059732:	add    BYTE PTR [rax-0x1],al
   140059738:	(bad)  
   140059739:	(bad)  
   14005973a:	(bad)  
   14005973b:	(bad)  
   14005973c:	(bad)  
   14005973d:	(bad)  
   14005973e:	(bad)  
   14005973f:	(bad)  
   140059740:	(bad)  
   140059741:	(bad)  
   140059742:	(bad)  
   140059743:	inc    DWORD PTR [rax]
   140059745:	add    BYTE PTR [rax],al
   140059747:	add    BYTE PTR [rax],0x0
   14005974a:	add    BYTE PTR [rax-0x1],al
   140059750:	(bad)  
   140059751:	(bad)  
   140059752:	(bad)  
   140059753:	(bad)  
   140059754:	(bad)  
   140059755:	(bad)  
   140059756:	(bad)  
   140059757:	(bad)  
   140059758:	(bad)  
   140059759:	(bad)  
   14005975a:	(bad)  
   14005975b:	(bad)  
   14005975c:	(bad)  
   14005975d:	(bad)  
   14005975e:	(bad)  
   14005975f:	(bad)  
   140059760:	(bad)  
   140059761:	(bad)  
   140059762:	(bad)  
   140059763:	inc    DWORD PTR [rax]
   140059765:	add    BYTE PTR [rax],al
   140059767:	add    BYTE PTR [rax],0x0
   14005976a:	add    BYTE PTR [rax-0x1],al
   140059770:	(bad)  
   140059771:	(bad)  
   140059772:	(bad)  
   140059773:	(bad)  
   140059774:	(bad)  
   140059775:	(bad)  
   140059776:	(bad)  
   140059777:	(bad)  
   140059778:	(bad)  
   140059779:	(bad)  
   14005977a:	(bad)  
   14005977b:	(bad)  
   14005977c:	(bad)  
   14005977d:	(bad)  
   14005977e:	(bad)  
   14005977f:	(bad)  
   140059780:	(bad)  
   140059781:	(bad)  
   140059782:	(bad)  
   140059783:	(bad)  
   140059784:	(bad)  
   140059785:	(bad)  
   140059786:	(bad)  
   140059787:	(bad)  
   140059788:	(bad)  
   140059789:	(bad)  
   14005978a:	(bad)  
   14005978b:	(bad)  
   14005978c:	(bad)  
   14005978d:	(bad)  
   14005978e:	(bad)  
   14005978f:	(bad)  
   140059790:	(bad)  
   140059791:	(bad)  
   140059792:	(bad)  
   140059793:	(bad)  
   140059794:	(bad)  
   140059795:	(bad)  
   140059796:	(bad)  
   140059797:	(bad)  
   140059798:	(bad)  
   140059799:	(bad)  
   14005979a:	(bad)  
   14005979b:	(bad)  
   14005979c:	(bad)  
   14005979d:	(bad)  
   14005979e:	(bad)  
   14005979f:	(bad)  
   1400597a0:	(bad)  
   1400597a1:	(bad)  
   1400597a2:	(bad)  
   1400597a3:	(bad)  
   1400597a4:	(bad)  
   1400597a5:	(bad)  
   1400597a6:	(bad)  
   1400597a7:	(bad)  
   1400597a8:	(bad)  
   1400597a9:	(bad)  
   1400597aa:	(bad)  
   1400597ab:	(bad)  
   1400597ac:	(bad)  
   1400597ad:	(bad)  
   1400597ae:	(bad)  
   1400597af:	(bad)  
   1400597b0:	(bad)  
   1400597b1:	(bad)  
   1400597b2:	(bad)  
   1400597b3:	inc    DWORD PTR [rax]
   1400597b5:	add    BYTE PTR [rax],al
   1400597b7:	add    BYTE PTR [rax],0x0
   1400597ba:	add    BYTE PTR [rax-0x1],al
   1400597c0:	(bad)  
   1400597c1:	(bad)  
   1400597c2:	(bad)  
   1400597c3:	(bad)  
   1400597c4:	(bad)  
   1400597c5:	(bad)  
   1400597c6:	(bad)  
   1400597c7:	(bad)  
   1400597c8:	(bad)  
   1400597c9:	(bad)  
   1400597ca:	(bad)  
   1400597cb:	(bad)  
   1400597cc:	(bad)  
   1400597cd:	(bad)  
   1400597ce:	(bad)  
   1400597cf:	(bad)  
   1400597d0:	(bad)  
   1400597d1:	(bad)  
   1400597d2:	(bad)  
   1400597d3:	inc    DWORD PTR [rax]
   1400597d5:	add    BYTE PTR [rax],al
   1400597d7:	add    BYTE PTR [rax],0x0
   1400597da:	add    BYTE PTR [rax-0x1],al
   1400597e0:	(bad)  
   1400597e1:	(bad)  
   1400597e2:	(bad)  
   1400597e3:	(bad)  
   1400597e4:	(bad)  
   1400597e5:	(bad)  
   1400597e6:	(bad)  
   1400597e7:	(bad)  
   1400597e8:	(bad)  
   1400597e9:	(bad)  
   1400597ea:	(bad)  
   1400597eb:	inc    DWORD PTR [rax]
   1400597ed:	add    BYTE PTR [rax],al
   1400597ef:	add    BYTE PTR [rax],0x0
   1400597f2:	add    BYTE PTR [rax-0x1],al
   1400597f8:	(bad)  
   1400597f9:	(bad)  
   1400597fa:	(bad)  
   1400597fb:	(bad)  
   1400597fc:	(bad)  
   1400597fd:	(bad)  
   1400597fe:	(bad)  
   1400597ff:	(bad)  
   140059800:	(bad)  
   140059801:	(bad)  
   140059802:	(bad)  
   140059803:	inc    DWORD PTR [rax]
   140059805:	add    BYTE PTR [rax],al
   140059807:	add    BYTE PTR [rax],0x0
   14005980a:	add    BYTE PTR [rax-0x1],al
   140059810:	(bad)  
   140059811:	(bad)  
   140059812:	(bad)  
   140059813:	(bad)  
   140059814:	(bad)  
   140059815:	(bad)  
   140059816:	(bad)  
   140059817:	(bad)  
   140059818:	(bad)  
   140059819:	(bad)  
   14005981a:	(bad)  
   14005981b:	(bad)  
   14005981c:	(bad)  
   14005981d:	(bad)  
   14005981e:	(bad)  
   14005981f:	(bad)  
   140059820:	(bad)  
   140059821:	(bad)  
   140059822:	(bad)  
   140059823:	inc    DWORD PTR [rax]
   140059825:	add    BYTE PTR [rax],al
   140059827:	add    BYTE PTR [rax],0x0
   14005982a:	add    BYTE PTR [rax-0x1],al
   140059830:	(bad)  
   140059831:	(bad)  
   140059832:	(bad)  
   140059833:	(bad)  
   140059834:	(bad)  
   140059835:	(bad)  
   140059836:	(bad)  
   140059837:	(bad)  
   140059838:	(bad)  
   140059839:	(bad)  
   14005983a:	(bad)  
   14005983b:	(bad)  
   14005983c:	(bad)  
   14005983d:	(bad)  
   14005983e:	(bad)  
   14005983f:	(bad)  
   140059840:	(bad)  
   140059841:	(bad)  
   140059842:	(bad)  
   140059843:	(bad)  
   140059844:	(bad)  
   140059845:	(bad)  
   140059846:	(bad)  
   140059847:	(bad)  
   140059848:	(bad)  
   140059849:	(bad)  
   14005984a:	(bad)  
   14005984b:	(bad)  
   14005984c:	(bad)  
   14005984d:	(bad)  
   14005984e:	(bad)  
   14005984f:	(bad)  
   140059850:	(bad)  
   140059851:	(bad)  
   140059852:	(bad)  
   140059853:	(bad)  
   140059854:	(bad)  
   140059855:	(bad)  
   140059856:	(bad)  
   140059857:	(bad)  
   140059858:	(bad)  
   140059859:	(bad)  
   14005985a:	(bad)  
   14005985b:	(bad)  
   14005985c:	(bad)  
   14005985d:	(bad)  
   14005985e:	(bad)  
   14005985f:	(bad)  
   140059860:	(bad)  
   140059861:	(bad)  
   140059862:	(bad)  
   140059863:	(bad)  
   140059864:	(bad)  
   140059865:	(bad)  
   140059866:	(bad)  
   140059867:	(bad)  
   140059868:	(bad)  
   140059869:	(bad)  
   14005986a:	(bad)  
   14005986b:	(bad)  
   14005986c:	(bad)  
   14005986d:	(bad)  
   14005986e:	(bad)  
   14005986f:	(bad)  
   140059870:	(bad)  
   140059871:	(bad)  
   140059872:	(bad)  
   140059873:	inc    DWORD PTR [rax]
   140059875:	add    BYTE PTR [rax],al
   140059877:	add    BYTE PTR [rax],0x0
   14005987a:	add    BYTE PTR [rax-0x1],al
   140059880:	(bad)  
   140059881:	(bad)  
   140059882:	(bad)  
   140059883:	(bad)  
   140059884:	(bad)  
   140059885:	(bad)  
   140059886:	(bad)  
   140059887:	(bad)  
   140059888:	(bad)  
   140059889:	(bad)  
   14005988a:	(bad)  
   14005988b:	(bad)  
   14005988c:	(bad)  
   14005988d:	(bad)  
   14005988e:	(bad)  
   14005988f:	(bad)  
   140059890:	(bad)  
   140059891:	(bad)  
   140059892:	(bad)  
   140059893:	inc    DWORD PTR [rax]
   140059895:	add    BYTE PTR [rax],al
   140059897:	add    BYTE PTR [rax],0x0
   14005989a:	add    BYTE PTR [rax-0x1],al
   1400598a0:	(bad)  
   1400598a1:	(bad)  
   1400598a2:	(bad)  
   1400598a3:	(bad)  
   1400598a4:	(bad)  
   1400598a5:	(bad)  
   1400598a6:	(bad)  
   1400598a7:	(bad)  
   1400598a8:	(bad)  
   1400598a9:	(bad)  
   1400598aa:	(bad)  
   1400598ab:	inc    DWORD PTR [rax]
   1400598ad:	add    BYTE PTR [rax],al
   1400598af:	add    BYTE PTR [rax],0x0
   1400598b2:	add    BYTE PTR [rax-0x1],al
   1400598b8:	(bad)  
   1400598b9:	(bad)  
   1400598ba:	(bad)  
   1400598bb:	(bad)  
   1400598bc:	(bad)  
   1400598bd:	(bad)  
   1400598be:	(bad)  
   1400598bf:	(bad)  
   1400598c0:	(bad)  
   1400598c1:	(bad)  
   1400598c2:	(bad)  
   1400598c3:	inc    DWORD PTR [rax]
   1400598c5:	add    BYTE PTR [rax],al
   1400598c7:	add    BYTE PTR [rax],0x0
   1400598ca:	add    BYTE PTR [rax-0x80000000],al
   1400598d0:	add    BYTE PTR [rax],al
   1400598d2:	add    BYTE PTR [rax-0x80000000],al
   1400598d8:	add    BYTE PTR [rax],al
   1400598da:	add    BYTE PTR [rax-0x80000000],al
   1400598e0:	add    BYTE PTR [rax],al
   1400598e2:	add    BYTE PTR [rax-0x80000000],al
   1400598e8:	add    BYTE PTR [rax],al
   1400598ea:	add    BYTE PTR [rax-0x80000000],al
   1400598f0:	add    BYTE PTR [rax],al
   1400598f2:	add    BYTE PTR [rax-0x80000000],al
   1400598f8:	add    BYTE PTR [rax],al
   1400598fa:	add    BYTE PTR [rax-0x80000000],al
   140059900:	add    BYTE PTR [rax],al
   140059902:	add    BYTE PTR [rax-0x80000000],al
   140059908:	add    BYTE PTR [rax],al
   14005990a:	add    BYTE PTR [rax-0x80000000],al
   140059910:	add    BYTE PTR [rax],al
   140059912:	add    BYTE PTR [rax-0x80000000],al
   140059918:	add    BYTE PTR [rax],al
   14005991a:	add    BYTE PTR [rax-0x80000000],al
   140059920:	add    BYTE PTR [rax],al
   140059922:	add    BYTE PTR [rax-0x80000000],al
   140059928:	add    BYTE PTR [rax],al
   14005992a:	add    BYTE PTR [rax-0x80000000],al
   140059930:	add    BYTE PTR [rax],al
   140059932:	add    BYTE PTR [rax-0x80000000],al
   140059938:	add    BYTE PTR [rax],al
   14005993a:	add    BYTE PTR [rax-0x80000000],al
   140059940:	add    BYTE PTR [rax],al
   140059942:	add    BYTE PTR [rax-0x80000000],al
   140059948:	add    BYTE PTR [rax],al
   14005994a:	add    BYTE PTR [rax-0x80000000],al
   140059950:	add    BYTE PTR [rax],al
   140059952:	add    BYTE PTR [rax-0x80000000],al
   140059958:	add    BYTE PTR [rax],al
   14005995a:	add    BYTE PTR [rax-0x1],al
   140059960:	(bad)  
   140059961:	(bad)  
   140059962:	(bad)  
   140059963:	(bad)  
   140059964:	(bad)  
   140059965:	(bad)  
   140059966:	(bad)  
   140059967:	(bad)  
   140059968:	(bad)  
   140059969:	(bad)  
   14005996a:	(bad)  
   14005996b:	inc    DWORD PTR [rax]
   14005996d:	add    BYTE PTR [rax],al
   14005996f:	add    BYTE PTR [rax],0x0
   140059972:	add    BYTE PTR [rax-0x1],al
   140059978:	(bad)  
   140059979:	(bad)  
   14005997a:	(bad)  
   14005997b:	(bad)  
   14005997c:	(bad)  
   14005997d:	(bad)  
   14005997e:	(bad)  
   14005997f:	(bad)  
   140059980:	(bad)  
   140059981:	(bad)  
   140059982:	(bad)  
   140059983:	inc    DWORD PTR [rax]
   140059985:	add    BYTE PTR [rax],al
   140059987:	add    BYTE PTR [rax],0x0
   14005998a:	add    BYTE PTR [rax-0x80000000],al
   140059990:	add    BYTE PTR [rax],al
   140059992:	add    BYTE PTR [rax-0x80000000],al
   140059998:	add    BYTE PTR [rax],al
   14005999a:	add    BYTE PTR [rax-0x80000000],al
   1400599a0:	add    BYTE PTR [rax],al
   1400599a2:	add    BYTE PTR [rax-0x80000000],al
   1400599a8:	add    BYTE PTR [rax],al
   1400599aa:	add    BYTE PTR [rax-0x80000000],al
   1400599b0:	add    BYTE PTR [rax],al
   1400599b2:	add    BYTE PTR [rax-0x80000000],al
   1400599b8:	add    BYTE PTR [rax],al
   1400599ba:	add    BYTE PTR [rax-0x80000000],al
   1400599c0:	add    BYTE PTR [rax],al
   1400599c2:	add    BYTE PTR [rax-0x80000000],al
   1400599c8:	add    BYTE PTR [rax],al
   1400599ca:	add    BYTE PTR [rax-0x80000000],al
   1400599d0:	add    BYTE PTR [rax],al
   1400599d2:	add    BYTE PTR [rax-0x80000000],al
   1400599d8:	add    BYTE PTR [rax],al
   1400599da:	add    BYTE PTR [rax-0x80000000],al
   1400599e0:	add    BYTE PTR [rax],al
   1400599e2:	add    BYTE PTR [rax-0x80000000],al
   1400599e8:	add    BYTE PTR [rax],al
   1400599ea:	add    BYTE PTR [rax-0x80000000],al
   1400599f0:	add    BYTE PTR [rax],al
   1400599f2:	add    BYTE PTR [rax-0x80000000],al
   1400599f8:	add    BYTE PTR [rax],al
   1400599fa:	add    BYTE PTR [rax-0x80000000],al
   140059a00:	add    BYTE PTR [rax],al
   140059a02:	add    BYTE PTR [rax-0x80000000],al
   140059a08:	add    BYTE PTR [rax],al
   140059a0a:	add    BYTE PTR [rax-0x80000000],al
   140059a10:	add    BYTE PTR [rax],al
   140059a12:	add    BYTE PTR [rax-0x80000000],al
   140059a18:	add    BYTE PTR [rax],al
   140059a1a:	add    BYTE PTR [rax-0x1],al
   140059a20:	(bad)  
   140059a21:	(bad)  
   140059a22:	(bad)  
   140059a23:	(bad)  
   140059a24:	(bad)  
   140059a25:	(bad)  
   140059a26:	(bad)  
   140059a27:	(bad)  
   140059a28:	(bad)  
   140059a29:	(bad)  
   140059a2a:	(bad)  
   140059a2b:	inc    DWORD PTR [rax]
   140059a2d:	add    BYTE PTR [rax],al
   140059a2f:	add    BYTE PTR [rax],0x0
   140059a32:	add    BYTE PTR [rax-0x1],al
   140059a38:	(bad)  
   140059a39:	(bad)  
   140059a3a:	(bad)  
   140059a3b:	(bad)  
   140059a3c:	(bad)  
   140059a3d:	(bad)  
   140059a3e:	(bad)  
   140059a3f:	(bad)  
   140059a40:	(bad)  
   140059a41:	(bad)  
   140059a42:	(bad)  
   140059a43:	inc    DWORD PTR [rax]
   140059a45:	add    BYTE PTR [rax],al
   140059a47:	add    BYTE PTR [rax],0x0
   140059a4a:	add    BYTE PTR [rax-0x1],al
   140059a50:	(bad)  
   140059a51:	(bad)  
   140059a52:	(bad)  
   140059a53:	(bad)  
   140059a54:	(bad)  
   140059a55:	(bad)  
   140059a56:	(bad)  
   140059a57:	(bad)  
   140059a58:	(bad)  
   140059a59:	(bad)  
   140059a5a:	(bad)  
   140059a5b:	inc    DWORD PTR [rax]
   140059a5d:	add    BYTE PTR [rax],al
   140059a5f:	add    BYTE PTR [rax],0x0
   140059a62:	add    BYTE PTR [rax-0x1],al
   140059a68:	(bad)  
   140059a69:	(bad)  
   140059a6a:	(bad)  
   140059a6b:	(bad)  
   140059a6c:	(bad)  
   140059a6d:	(bad)  
   140059a6e:	(bad)  
   140059a6f:	(bad)  
   140059a70:	(bad)  
   140059a71:	(bad)  
   140059a72:	(bad)  
   140059a73:	inc    DWORD PTR [rax]
   140059a75:	add    BYTE PTR [rax],al
   140059a77:	add    BYTE PTR [rax],0x0
   140059a7a:	add    BYTE PTR [rax-0x1],al
   140059a80:	(bad)  
   140059a81:	(bad)  
   140059a82:	(bad)  
   140059a83:	(bad)  
   140059a84:	(bad)  
   140059a85:	(bad)  
   140059a86:	(bad)  
   140059a87:	(bad)  
   140059a88:	(bad)  
   140059a89:	(bad)  
   140059a8a:	(bad)  
   140059a8b:	inc    DWORD PTR [rax]
   140059a8d:	add    BYTE PTR [rax],al
   140059a8f:	add    BYTE PTR [rax],0x0
   140059a92:	add    BYTE PTR [rax-0x1],al
   140059a98:	(bad)  
   140059a99:	(bad)  
   140059a9a:	(bad)  
   140059a9b:	(bad)  
   140059a9c:	(bad)  
   140059a9d:	(bad)  
   140059a9e:	(bad)  
   140059a9f:	(bad)  
   140059aa0:	(bad)  
   140059aa1:	(bad)  
   140059aa2:	(bad)  
   140059aa3:	inc    DWORD PTR [rax]
   140059aa5:	add    BYTE PTR [rax],al
   140059aa7:	add    BYTE PTR [rax],0x0
   140059aaa:	add    BYTE PTR [rax-0x1],al
   140059ab0:	(bad)  
   140059ab1:	(bad)  
   140059ab2:	(bad)  
   140059ab3:	(bad)  
   140059ab4:	(bad)  
   140059ab5:	(bad)  
   140059ab6:	(bad)  
   140059ab7:	(bad)  
   140059ab8:	(bad)  
   140059ab9:	(bad)  
   140059aba:	(bad)  
   140059abb:	inc    DWORD PTR [rax]
   140059abd:	add    BYTE PTR [rax],al
   140059abf:	add    BYTE PTR [rax],0x0
   140059ac2:	add    BYTE PTR [rax-0x1],al
   140059ac8:	(bad)  
   140059ac9:	(bad)  
   140059aca:	(bad)  
   140059acb:	(bad)  
   140059acc:	(bad)  
   140059acd:	(bad)  
   140059ace:	(bad)  
   140059acf:	(bad)  
   140059ad0:	(bad)  
   140059ad1:	(bad)  
   140059ad2:	(bad)  
   140059ad3:	inc    DWORD PTR [rax]
   140059ad5:	add    BYTE PTR [rax],al
   140059ad7:	add    BYTE PTR [rax],0x0
   140059ada:	add    BYTE PTR [rax-0x1],al
   140059ae0:	(bad)  
   140059ae1:	(bad)  
   140059ae2:	(bad)  
   140059ae3:	(bad)  
   140059ae4:	(bad)  
   140059ae5:	(bad)  
   140059ae6:	(bad)  
   140059ae7:	(bad)  
   140059ae8:	(bad)  
   140059ae9:	(bad)  
   140059aea:	(bad)  
   140059aeb:	inc    DWORD PTR [rax]
   140059aed:	add    BYTE PTR [rax],al
   140059aef:	add    BYTE PTR [rax],0x0
   140059af2:	add    BYTE PTR [rax-0x1],al
   140059af8:	(bad)  
   140059af9:	(bad)  
   140059afa:	(bad)  
   140059afb:	(bad)  
   140059afc:	(bad)  
   140059afd:	(bad)  
   140059afe:	(bad)  
   140059aff:	(bad)  
   140059b00:	(bad)  
   140059b01:	(bad)  
   140059b02:	(bad)  
   140059b03:	inc    DWORD PTR [rax]
   140059b05:	add    BYTE PTR [rax],al
   140059b07:	add    BYTE PTR [rax],0x0
   140059b0a:	add    BYTE PTR [rax-0x1],al
   140059b10:	(bad)  
   140059b11:	(bad)  
   140059b12:	(bad)  
   140059b13:	(bad)  
   140059b14:	(bad)  
   140059b15:	(bad)  
   140059b16:	(bad)  
   140059b17:	(bad)  
   140059b18:	(bad)  
   140059b19:	(bad)  
   140059b1a:	(bad)  
   140059b1b:	inc    DWORD PTR [rax]
   140059b1d:	add    BYTE PTR [rax],al
   140059b1f:	add    BYTE PTR [rax],0x0
   140059b22:	add    BYTE PTR [rax-0x1],al
   140059b28:	(bad)  
   140059b29:	(bad)  
   140059b2a:	(bad)  
   140059b2b:	(bad)  
   140059b2c:	(bad)  
   140059b2d:	(bad)  
   140059b2e:	(bad)  
   140059b2f:	(bad)  
   140059b30:	(bad)  
   140059b31:	(bad)  
   140059b32:	(bad)  
   140059b33:	inc    DWORD PTR [rax]
   140059b35:	add    BYTE PTR [rax],al
   140059b37:	add    BYTE PTR [rax],0x0
   140059b3a:	add    BYTE PTR [rax-0x1],al
   140059b40:	(bad)  
   140059b41:	(bad)  
   140059b42:	(bad)  
   140059b43:	(bad)  
   140059b44:	(bad)  
   140059b45:	(bad)  
   140059b46:	(bad)  
   140059b47:	(bad)  
   140059b48:	(bad)  
   140059b49:	(bad)  
   140059b4a:	(bad)  
   140059b4b:	inc    DWORD PTR [rax]
   140059b4d:	add    BYTE PTR [rax],al
   140059b4f:	add    BYTE PTR [rax],0x0
   140059b52:	add    BYTE PTR [rax-0x1],al
   140059b58:	(bad)  
   140059b59:	(bad)  
   140059b5a:	(bad)  
   140059b5b:	(bad)  
   140059b5c:	(bad)  
   140059b5d:	(bad)  
   140059b5e:	(bad)  
   140059b5f:	(bad)  
   140059b60:	(bad)  
   140059b61:	(bad)  
   140059b62:	(bad)  
   140059b63:	inc    DWORD PTR [rax]
   140059b65:	add    BYTE PTR [rax],al
   140059b67:	add    BYTE PTR [rax],0x0
   140059b6a:	add    BYTE PTR [rax-0x1],al
   140059b70:	(bad)  
   140059b71:	(bad)  
   140059b72:	(bad)  
   140059b73:	(bad)  
   140059b74:	(bad)  
   140059b75:	(bad)  
   140059b76:	(bad)  
   140059b77:	(bad)  
   140059b78:	(bad)  
   140059b79:	(bad)  
   140059b7a:	(bad)  
   140059b7b:	inc    DWORD PTR [rax]
   140059b7d:	add    BYTE PTR [rax],al
   140059b7f:	add    BYTE PTR [rax],0x0
   140059b82:	add    BYTE PTR [rax-0x1],al
   140059b88:	(bad)  
   140059b89:	(bad)  
   140059b8a:	(bad)  
   140059b8b:	(bad)  
   140059b8c:	(bad)  
   140059b8d:	(bad)  
   140059b8e:	(bad)  
   140059b8f:	(bad)  
   140059b90:	(bad)  
   140059b91:	(bad)  
   140059b92:	(bad)  
   140059b93:	inc    DWORD PTR [rax]
   140059b95:	add    BYTE PTR [rax],al
   140059b97:	add    BYTE PTR [rax],0x0
   140059b9a:	add    BYTE PTR [rax-0x1],al
   140059ba0:	(bad)  
   140059ba1:	(bad)  
   140059ba2:	(bad)  
   140059ba3:	(bad)  
   140059ba4:	(bad)  
   140059ba5:	(bad)  
   140059ba6:	(bad)  
   140059ba7:	(bad)  
   140059ba8:	(bad)  
   140059ba9:	(bad)  
   140059baa:	(bad)  
   140059bab:	inc    DWORD PTR [rax]
   140059bad:	add    BYTE PTR [rax],al
   140059baf:	add    BYTE PTR [rax],0x0
   140059bb2:	add    BYTE PTR [rax-0x1],al
   140059bb8:	(bad)  
   140059bb9:	(bad)  
   140059bba:	(bad)  
   140059bbb:	(bad)  
   140059bbc:	(bad)  
   140059bbd:	(bad)  
   140059bbe:	(bad)  
   140059bbf:	(bad)  
   140059bc0:	(bad)  
   140059bc1:	(bad)  
   140059bc2:	(bad)  
   140059bc3:	inc    DWORD PTR [rax]
   140059bc5:	add    BYTE PTR [rax],al
   140059bc7:	add    BYTE PTR [rax],0x0
   140059bca:	add    BYTE PTR [rax-0x1],al
   140059bd0:	(bad)  
   140059bd1:	(bad)  
   140059bd2:	(bad)  
   140059bd3:	(bad)  
   140059bd4:	(bad)  
   140059bd5:	(bad)  
   140059bd6:	(bad)  
   140059bd7:	(bad)  
   140059bd8:	(bad)  
   140059bd9:	(bad)  
   140059bda:	(bad)  
   140059bdb:	inc    DWORD PTR [rax]
   140059bdd:	add    BYTE PTR [rax],al
   140059bdf:	add    BYTE PTR [rax],0x0
   140059be2:	add    BYTE PTR [rax-0x1],al
   140059be8:	(bad)  
   140059be9:	(bad)  
   140059bea:	(bad)  
   140059beb:	(bad)  
   140059bec:	(bad)  
   140059bed:	(bad)  
   140059bee:	(bad)  
   140059bef:	(bad)  
   140059bf0:	(bad)  
   140059bf1:	(bad)  
   140059bf2:	(bad)  
   140059bf3:	inc    DWORD PTR [rax]
   140059bf5:	add    BYTE PTR [rax],al
   140059bf7:	add    BYTE PTR [rax],0x0
   140059bfa:	add    BYTE PTR [rax-0x1],al
   140059c00:	(bad)  
   140059c01:	(bad)  
   140059c02:	(bad)  
   140059c03:	(bad)  
   140059c04:	(bad)  
   140059c05:	(bad)  
   140059c06:	(bad)  
   140059c07:	(bad)  
   140059c08:	(bad)  
   140059c09:	(bad)  
   140059c0a:	(bad)  
   140059c0b:	inc    DWORD PTR [rax]
   140059c0d:	add    BYTE PTR [rax],al
   140059c0f:	add    BYTE PTR [rax],0x0
   140059c12:	add    BYTE PTR [rax-0x1],al
   140059c18:	(bad)  
   140059c19:	(bad)  
   140059c1a:	(bad)  
   140059c1b:	(bad)  
   140059c1c:	(bad)  
   140059c1d:	(bad)  
   140059c1e:	(bad)  
   140059c1f:	(bad)  
   140059c20:	(bad)  
   140059c21:	(bad)  
   140059c22:	(bad)  
   140059c23:	inc    DWORD PTR [rax]
   140059c25:	add    BYTE PTR [rax],al
   140059c27:	add    BYTE PTR [rax],0x0
   140059c2a:	add    BYTE PTR [rax-0x1],al
   140059c30:	(bad)  
   140059c31:	(bad)  
   140059c32:	(bad)  
   140059c33:	(bad)  
   140059c34:	(bad)  
   140059c35:	(bad)  
   140059c36:	(bad)  
   140059c37:	(bad)  
   140059c38:	(bad)  
   140059c39:	(bad)  
   140059c3a:	(bad)  
   140059c3b:	inc    DWORD PTR [rax]
   140059c3d:	add    BYTE PTR [rax],al
   140059c3f:	add    BYTE PTR [rax],0x0
   140059c42:	add    BYTE PTR [rax-0x1],al
   140059c48:	(bad)  
   140059c49:	(bad)  
   140059c4a:	(bad)  
   140059c4b:	(bad)  
   140059c4c:	(bad)  
   140059c4d:	(bad)  
   140059c4e:	(bad)  
   140059c4f:	(bad)  
   140059c50:	(bad)  
   140059c51:	(bad)  
   140059c52:	(bad)  
   140059c53:	inc    DWORD PTR [rax]
   140059c55:	add    BYTE PTR [rax],al
   140059c57:	add    BYTE PTR [rax],0x0
   140059c5a:	add    BYTE PTR [rax-0x1],al
   140059c60:	(bad)  
   140059c61:	(bad)  
   140059c62:	(bad)  
   140059c63:	(bad)  
   140059c64:	(bad)  
   140059c65:	(bad)  
   140059c66:	(bad)  
   140059c67:	(bad)  
   140059c68:	(bad)  
   140059c69:	(bad)  
   140059c6a:	(bad)  
   140059c6b:	inc    DWORD PTR [rax]
   140059c6d:	add    BYTE PTR [rax],al
   140059c6f:	add    BYTE PTR [rax],0x0
   140059c72:	add    BYTE PTR [rax-0x1],al
   140059c78:	(bad)  
   140059c79:	(bad)  
   140059c7a:	(bad)  
   140059c7b:	(bad)  
   140059c7c:	(bad)  
   140059c7d:	(bad)  
   140059c7e:	(bad)  
   140059c7f:	(bad)  
   140059c80:	(bad)  
   140059c81:	(bad)  
   140059c82:	(bad)  
   140059c83:	inc    DWORD PTR [rax]
   140059c85:	add    BYTE PTR [rax],al
   140059c87:	add    BYTE PTR [rax],0x0
   140059c8a:	add    BYTE PTR [rax-0x1],al
   140059c90:	(bad)  
   140059c91:	(bad)  
   140059c92:	(bad)  
   140059c93:	(bad)  
   140059c94:	(bad)  
   140059c95:	(bad)  
   140059c96:	(bad)  
   140059c97:	(bad)  
   140059c98:	(bad)  
   140059c99:	(bad)  
   140059c9a:	(bad)  
   140059c9b:	inc    DWORD PTR [rax]
   140059c9d:	add    BYTE PTR [rax],al
   140059c9f:	add    BYTE PTR [rax],0x0
   140059ca2:	add    BYTE PTR [rax-0x1],al
   140059ca8:	(bad)  
   140059ca9:	(bad)  
   140059caa:	(bad)  
   140059cab:	(bad)  
   140059cac:	(bad)  
   140059cad:	(bad)  
   140059cae:	(bad)  
   140059caf:	(bad)  
   140059cb0:	(bad)  
   140059cb1:	(bad)  
   140059cb2:	(bad)  
   140059cb3:	inc    DWORD PTR [rax]
   140059cb5:	add    BYTE PTR [rax],al
   140059cb7:	add    BYTE PTR [rax],0x0
   140059cba:	add    BYTE PTR [rax-0x1],al
   140059cc0:	(bad)  
   140059cc1:	(bad)  
   140059cc2:	(bad)  
   140059cc3:	(bad)  
   140059cc4:	(bad)  
   140059cc5:	(bad)  
   140059cc6:	(bad)  
   140059cc7:	(bad)  
   140059cc8:	(bad)  
   140059cc9:	(bad)  
   140059cca:	(bad)  
   140059ccb:	inc    DWORD PTR [rax]
   140059ccd:	add    BYTE PTR [rax],al
   140059ccf:	add    BYTE PTR [rax],0x0
   140059cd2:	add    BYTE PTR [rax-0x1],al
   140059cd8:	(bad)  
   140059cd9:	(bad)  
   140059cda:	(bad)  
   140059cdb:	(bad)  
   140059cdc:	(bad)  
   140059cdd:	(bad)  
   140059cde:	(bad)  
   140059cdf:	(bad)  
   140059ce0:	(bad)  
   140059ce1:	(bad)  
   140059ce2:	(bad)  
   140059ce3:	inc    DWORD PTR [rax]
   140059ce5:	add    BYTE PTR [rax],al
   140059ce7:	add    BYTE PTR [rax],0x0
   140059cea:	add    BYTE PTR [rax-0x1],al
   140059cf0:	(bad)  
   140059cf1:	(bad)  
   140059cf2:	(bad)  
   140059cf3:	(bad)  
   140059cf4:	(bad)  
   140059cf5:	(bad)  
   140059cf6:	(bad)  
   140059cf7:	(bad)  
   140059cf8:	(bad)  
   140059cf9:	(bad)  
   140059cfa:	(bad)  
   140059cfb:	inc    DWORD PTR [rax]
   140059cfd:	add    BYTE PTR [rax],al
   140059cff:	add    BYTE PTR [rax],0x0
   140059d02:	add    BYTE PTR [rax-0x1],al
   140059d08:	(bad)  
   140059d09:	(bad)  
   140059d0a:	(bad)  
   140059d0b:	(bad)  
   140059d0c:	(bad)  
   140059d0d:	(bad)  
   140059d0e:	(bad)  
   140059d0f:	(bad)  
   140059d10:	(bad)  
   140059d11:	(bad)  
   140059d12:	(bad)  
   140059d13:	inc    DWORD PTR [rax]
   140059d15:	add    BYTE PTR [rax],al
   140059d17:	add    BYTE PTR [rax],0x0
   140059d1a:	add    BYTE PTR [rax-0x1],al
   140059d20:	(bad)  
   140059d21:	(bad)  
   140059d22:	(bad)  
   140059d23:	(bad)  
   140059d24:	(bad)  
   140059d25:	(bad)  
   140059d26:	(bad)  
   140059d27:	(bad)  
   140059d28:	(bad)  
   140059d29:	(bad)  
   140059d2a:	(bad)  
   140059d2b:	inc    DWORD PTR [rax]
   140059d2d:	add    BYTE PTR [rax],al
   140059d2f:	add    BYTE PTR [rax],0x0
   140059d32:	add    BYTE PTR [rax-0x1],al
   140059d38:	(bad)  
   140059d39:	(bad)  
   140059d3a:	(bad)  
   140059d3b:	(bad)  
   140059d3c:	(bad)  
   140059d3d:	(bad)  
   140059d3e:	(bad)  
   140059d3f:	(bad)  
   140059d40:	(bad)  
   140059d41:	(bad)  
   140059d42:	(bad)  
   140059d43:	inc    DWORD PTR [rax]
   140059d45:	add    BYTE PTR [rax],al
   140059d47:	add    BYTE PTR [rax],0x0
   140059d4a:	add    BYTE PTR [rax-0x80000000],al
   140059d50:	add    BYTE PTR [rax],al
   140059d52:	add    BYTE PTR [rax-0x80000000],al
   140059d58:	add    BYTE PTR [rax],al
   140059d5a:	add    BYTE PTR [rax-0x80000000],al
   140059d60:	add    BYTE PTR [rax],al
   140059d62:	add    BYTE PTR [rax-0x80000000],al
   140059d68:	add    BYTE PTR [rax],al
   140059d6a:	add    BYTE PTR [rax-0x80000000],al
   140059d70:	add    BYTE PTR [rax],al
   140059d72:	add    BYTE PTR [rax-0x80000000],al
   140059d78:	add    BYTE PTR [rax],al
   140059d7a:	add    BYTE PTR [rax-0x80000000],al
   140059d80:	add    BYTE PTR [rax],al
   140059d82:	add    BYTE PTR [rax-0x80000000],al
   140059d88:	add    BYTE PTR [rax],al
   140059d8a:	add    BYTE PTR [rax-0x80000000],al
   140059d90:	add    BYTE PTR [rax],al
   140059d92:	add    BYTE PTR [rax-0x80000000],al
   140059d98:	add    BYTE PTR [rax],al
   140059d9a:	add    BYTE PTR [rax-0x80000000],al
   140059da0:	add    BYTE PTR [rax],al
   140059da2:	add    BYTE PTR [rax-0x80000000],al
   140059da8:	add    BYTE PTR [rax],al
   140059daa:	add    BYTE PTR [rax-0x80000000],al
   140059db0:	add    BYTE PTR [rax],al
   140059db2:	add    BYTE PTR [rax-0x80000000],al
   140059db8:	add    BYTE PTR [rax],al
   140059dba:	add    BYTE PTR [rax-0x80000000],al
   140059dc0:	add    BYTE PTR [rax],al
   140059dc2:	add    BYTE PTR [rax-0x80000000],al
   140059dc8:	add    BYTE PTR [rax],al
   140059dca:	add    BYTE PTR [rax-0x80000000],al
   140059dd0:	add    BYTE PTR [rax],al
   140059dd2:	add    BYTE PTR [rax-0x80000000],al
   140059dd8:	add    BYTE PTR [rax],al
   140059dda:	add    BYTE PTR [rax-0x1],al
   140059de0:	(bad)  
   140059de1:	(bad)  
   140059de2:	(bad)  
   140059de3:	(bad)  
   140059de4:	(bad)  
   140059de5:	(bad)  
   140059de6:	(bad)  
   140059de7:	(bad)  
   140059de8:	(bad)  
   140059de9:	(bad)  
   140059dea:	(bad)  
   140059deb:	inc    DWORD PTR [rax]
   140059ded:	add    BYTE PTR [rax],al
   140059def:	add    BYTE PTR [rax],0x0
   140059df2:	add    BYTE PTR [rax-0x1],al
   140059df8:	(bad)  
   140059df9:	(bad)  
   140059dfa:	(bad)  
   140059dfb:	(bad)  
   140059dfc:	(bad)  
   140059dfd:	(bad)  
   140059dfe:	(bad)  
   140059dff:	(bad)  
   140059e00:	(bad)  
   140059e01:	(bad)  
   140059e02:	(bad)  
   140059e03:	inc    DWORD PTR [rax]
   140059e05:	add    BYTE PTR [rax],al
   140059e07:	add    BYTE PTR [rax],0x0
   140059e0a:	add    BYTE PTR [rax-0x80000000],al
   140059e10:	add    BYTE PTR [rax],al
   140059e12:	add    BYTE PTR [rax-0x80000000],al
   140059e18:	add    BYTE PTR [rax],al
   140059e1a:	add    BYTE PTR [rax-0x80000000],al
   140059e20:	add    BYTE PTR [rax],al
   140059e22:	add    BYTE PTR [rax-0x80000000],al
   140059e28:	add    BYTE PTR [rax],al
   140059e2a:	add    BYTE PTR [rax-0x80000000],al
   140059e30:	add    BYTE PTR [rax],al
   140059e32:	add    BYTE PTR [rax-0x80000000],al
   140059e38:	add    BYTE PTR [rax],al
   140059e3a:	add    BYTE PTR [rax-0x80000000],al
   140059e40:	add    BYTE PTR [rax],al
   140059e42:	add    BYTE PTR [rax-0x80000000],al
   140059e48:	add    BYTE PTR [rax],al
   140059e4a:	add    BYTE PTR [rax-0x80000000],al
   140059e50:	add    BYTE PTR [rax],al
   140059e52:	add    BYTE PTR [rax-0x80000000],al
   140059e58:	add    BYTE PTR [rax],al
   140059e5a:	add    BYTE PTR [rax-0x80000000],al
   140059e60:	add    BYTE PTR [rax],al
   140059e62:	add    BYTE PTR [rax-0x80000000],al
   140059e68:	add    BYTE PTR [rax],al
   140059e6a:	add    BYTE PTR [rax-0x80000000],al
   140059e70:	add    BYTE PTR [rax],al
   140059e72:	add    BYTE PTR [rax-0x80000000],al
   140059e78:	add    BYTE PTR [rax],al
   140059e7a:	add    BYTE PTR [rax-0x80000000],al
   140059e80:	add    BYTE PTR [rax],al
   140059e82:	add    BYTE PTR [rax-0x80000000],al
   140059e88:	add    BYTE PTR [rax],al
   140059e8a:	add    BYTE PTR [rax-0x80000000],al
   140059e90:	add    BYTE PTR [rax],al
   140059e92:	add    BYTE PTR [rax-0x80000000],al
   140059e98:	add    BYTE PTR [rax],al
   140059e9a:	add    BYTE PTR [rax-0x1],al
   140059ea0:	(bad)  
   140059ea1:	(bad)  
   140059ea2:	(bad)  
   140059ea3:	(bad)  
   140059ea4:	(bad)  
   140059ea5:	(bad)  
   140059ea6:	(bad)  
   140059ea7:	(bad)  
   140059ea8:	(bad)  
   140059ea9:	(bad)  
   140059eaa:	(bad)  
   140059eab:	inc    DWORD PTR [rax]
   140059ead:	add    BYTE PTR [rax],al
   140059eaf:	add    BYTE PTR [rax],0x0
   140059eb2:	add    BYTE PTR [rax-0x1],al
   140059eb8:	(bad)  
   140059eb9:	(bad)  
   140059eba:	(bad)  
   140059ebb:	(bad)  
   140059ebc:	(bad)  
   140059ebd:	(bad)  
   140059ebe:	(bad)  
   140059ebf:	(bad)  
   140059ec0:	(bad)  
   140059ec1:	(bad)  
   140059ec2:	(bad)  
   140059ec3:	inc    DWORD PTR [rax]
   140059ec5:	add    BYTE PTR [rax],al
   140059ec7:	add    BYTE PTR [rax],0x0
   140059eca:	add    BYTE PTR [rax-0x1],al
   140059ed0:	(bad)  
   140059ed1:	(bad)  
   140059ed2:	(bad)  
   140059ed3:	(bad)  
   140059ed4:	(bad)  
   140059ed5:	(bad)  
   140059ed6:	(bad)  
   140059ed7:	(bad)  
   140059ed8:	(bad)  
   140059ed9:	(bad)  
   140059eda:	(bad)  
   140059edb:	inc    DWORD PTR [rax]
   140059edd:	add    BYTE PTR [rax],al
   140059edf:	add    BYTE PTR [rax],0x0
   140059ee2:	add    BYTE PTR [rax-0x1],al
   140059ee8:	(bad)  
   140059ee9:	(bad)  
   140059eea:	(bad)  
   140059eeb:	(bad)  
   140059eec:	(bad)  
   140059eed:	(bad)  
   140059eee:	(bad)  
   140059eef:	(bad)  
   140059ef0:	(bad)  
   140059ef1:	(bad)  
   140059ef2:	(bad)  
   140059ef3:	inc    DWORD PTR [rax]
   140059ef5:	add    BYTE PTR [rax],al
   140059ef7:	add    BYTE PTR [rax],0x0
   140059efa:	add    BYTE PTR [rax-0x1],al
   140059f00:	(bad)  
   140059f01:	(bad)  
   140059f02:	(bad)  
   140059f03:	(bad)  
   140059f04:	(bad)  
   140059f05:	(bad)  
   140059f06:	(bad)  
   140059f07:	(bad)  
   140059f08:	(bad)  
   140059f09:	(bad)  
   140059f0a:	(bad)  
   140059f0b:	inc    DWORD PTR [rax]
   140059f0d:	add    BYTE PTR [rax],al
   140059f0f:	add    BYTE PTR [rax],0x0
   140059f12:	add    BYTE PTR [rax-0x1],al
   140059f18:	(bad)  
   140059f19:	(bad)  
   140059f1a:	(bad)  
   140059f1b:	(bad)  
   140059f1c:	(bad)  
   140059f1d:	(bad)  
   140059f1e:	(bad)  
   140059f1f:	(bad)  
   140059f20:	(bad)  
   140059f21:	(bad)  
   140059f22:	(bad)  
   140059f23:	inc    DWORD PTR [rax]
   140059f25:	add    BYTE PTR [rax],al
   140059f27:	add    BYTE PTR [rax],0x0
   140059f2a:	add    BYTE PTR [rax-0x1],al
   140059f30:	(bad)  
   140059f31:	(bad)  
   140059f32:	(bad)  
   140059f33:	(bad)  
   140059f34:	(bad)  
   140059f35:	(bad)  
   140059f36:	(bad)  
   140059f37:	(bad)  
   140059f38:	(bad)  
   140059f39:	(bad)  
   140059f3a:	(bad)  
   140059f3b:	inc    DWORD PTR [rax]
   140059f3d:	add    BYTE PTR [rax],al
   140059f3f:	add    BYTE PTR [rax],0x0
   140059f42:	add    BYTE PTR [rax-0x1],al
   140059f48:	(bad)  
   140059f49:	(bad)  
   140059f4a:	(bad)  
   140059f4b:	(bad)  
   140059f4c:	(bad)  
   140059f4d:	(bad)  
   140059f4e:	(bad)  
   140059f4f:	(bad)  
   140059f50:	(bad)  
   140059f51:	(bad)  
   140059f52:	(bad)  
   140059f53:	inc    DWORD PTR [rax]
   140059f55:	add    BYTE PTR [rax],al
   140059f57:	add    BYTE PTR [rax],0x0
   140059f5a:	add    BYTE PTR [rax-0x1],al
   140059f60:	(bad)  
   140059f61:	(bad)  
   140059f62:	(bad)  
   140059f63:	(bad)  
   140059f64:	(bad)  
   140059f65:	(bad)  
   140059f66:	(bad)  
   140059f67:	(bad)  
   140059f68:	(bad)  
   140059f69:	(bad)  
   140059f6a:	(bad)  
   140059f6b:	inc    DWORD PTR [rax]
   140059f6d:	add    BYTE PTR [rax],al
   140059f6f:	add    BYTE PTR [rax],0x0
   140059f72:	add    BYTE PTR [rax-0x1],al
   140059f78:	(bad)  
   140059f79:	(bad)  
   140059f7a:	(bad)  
   140059f7b:	(bad)  
   140059f7c:	(bad)  
   140059f7d:	(bad)  
   140059f7e:	(bad)  
   140059f7f:	(bad)  
   140059f80:	(bad)  
   140059f81:	(bad)  
   140059f82:	(bad)  
   140059f83:	inc    DWORD PTR [rax]
   140059f85:	add    BYTE PTR [rax],al
   140059f87:	add    BYTE PTR [rax],0x0
   140059f8a:	add    BYTE PTR [rax-0x1],al
   140059f90:	(bad)  
   140059f91:	(bad)  
   140059f92:	(bad)  
   140059f93:	(bad)  
   140059f94:	(bad)  
   140059f95:	(bad)  
   140059f96:	(bad)  
   140059f97:	(bad)  
   140059f98:	(bad)  
   140059f99:	(bad)  
   140059f9a:	(bad)  
   140059f9b:	inc    DWORD PTR [rax]
   140059f9d:	add    BYTE PTR [rax],al
   140059f9f:	add    BYTE PTR [rax],0x0
   140059fa2:	add    BYTE PTR [rax-0x1],al
   140059fa8:	(bad)  
   140059fa9:	(bad)  
   140059faa:	(bad)  
   140059fab:	(bad)  
   140059fac:	(bad)  
   140059fad:	(bad)  
   140059fae:	(bad)  
   140059faf:	(bad)  
   140059fb0:	(bad)  
   140059fb1:	(bad)  
   140059fb2:	(bad)  
   140059fb3:	inc    DWORD PTR [rax]
   140059fb5:	add    BYTE PTR [rax],al
   140059fb7:	add    BYTE PTR [rax],0x0
   140059fba:	add    BYTE PTR [rax-0x1],al
   140059fc0:	(bad)  
   140059fc1:	(bad)  
   140059fc2:	(bad)  
   140059fc3:	(bad)  
   140059fc4:	(bad)  
   140059fc5:	(bad)  
   140059fc6:	(bad)  
   140059fc7:	(bad)  
   140059fc8:	(bad)  
   140059fc9:	(bad)  
   140059fca:	(bad)  
   140059fcb:	inc    DWORD PTR [rax]
   140059fcd:	add    BYTE PTR [rax],al
   140059fcf:	add    BYTE PTR [rax],0x0
   140059fd2:	add    BYTE PTR [rax-0x1],al
   140059fd8:	(bad)  
   140059fd9:	(bad)  
   140059fda:	(bad)  
   140059fdb:	(bad)  
   140059fdc:	(bad)  
   140059fdd:	(bad)  
   140059fde:	(bad)  
   140059fdf:	(bad)  
   140059fe0:	(bad)  
   140059fe1:	(bad)  
   140059fe2:	(bad)  
   140059fe3:	inc    DWORD PTR [rax]
   140059fe5:	add    BYTE PTR [rax],al
   140059fe7:	add    BYTE PTR [rax],0x0
   140059fea:	add    BYTE PTR [rax-0x1],al
   140059ff0:	(bad)  
   140059ff1:	(bad)  
   140059ff2:	(bad)  
   140059ff3:	(bad)  
   140059ff4:	(bad)  
   140059ff5:	(bad)  
   140059ff6:	(bad)  
   140059ff7:	(bad)  
   140059ff8:	(bad)  
   140059ff9:	(bad)  
   140059ffa:	(bad)  
   140059ffb:	inc    DWORD PTR [rax]
   140059ffd:	add    BYTE PTR [rax],al
   140059fff:	add    BYTE PTR [rax],0x0
   14005a002:	add    BYTE PTR [rax-0x1],al
   14005a008:	(bad)  
   14005a009:	(bad)  
   14005a00a:	(bad)  
   14005a00b:	(bad)  
   14005a00c:	(bad)  
   14005a00d:	(bad)  
   14005a00e:	(bad)  
   14005a00f:	(bad)  
   14005a010:	(bad)  
   14005a011:	(bad)  
   14005a012:	(bad)  
   14005a013:	inc    DWORD PTR [rax]
   14005a015:	add    BYTE PTR [rax],al
   14005a017:	add    BYTE PTR [rax],0x0
   14005a01a:	add    BYTE PTR [rax-0x1],al
   14005a020:	(bad)  
   14005a021:	(bad)  
   14005a022:	(bad)  
   14005a023:	(bad)  
   14005a024:	(bad)  
   14005a025:	(bad)  
   14005a026:	(bad)  
   14005a027:	(bad)  
   14005a028:	(bad)  
   14005a029:	(bad)  
   14005a02a:	(bad)  
   14005a02b:	inc    DWORD PTR [rax]
   14005a02d:	add    BYTE PTR [rax],al
   14005a02f:	add    BYTE PTR [rax],0x0
   14005a032:	add    BYTE PTR [rax-0x1],al
   14005a038:	(bad)  
   14005a039:	(bad)  
   14005a03a:	(bad)  
   14005a03b:	(bad)  
   14005a03c:	(bad)  
   14005a03d:	(bad)  
   14005a03e:	(bad)  
   14005a03f:	(bad)  
   14005a040:	(bad)  
   14005a041:	(bad)  
   14005a042:	(bad)  
   14005a043:	inc    DWORD PTR [rax]
   14005a045:	add    BYTE PTR [rax],al
   14005a047:	add    BYTE PTR [rax],0x0
   14005a04a:	add    BYTE PTR [rax-0x1],al
   14005a050:	(bad)  
   14005a051:	(bad)  
   14005a052:	(bad)  
   14005a053:	(bad)  
   14005a054:	(bad)  
   14005a055:	(bad)  
   14005a056:	(bad)  
   14005a057:	(bad)  
   14005a058:	(bad)  
   14005a059:	(bad)  
   14005a05a:	(bad)  
   14005a05b:	inc    DWORD PTR [rax]
   14005a05d:	add    BYTE PTR [rax],al
   14005a05f:	add    BYTE PTR [rax],0x0
   14005a062:	add    BYTE PTR [rax-0x1],al
   14005a068:	(bad)  
   14005a069:	(bad)  
   14005a06a:	(bad)  
   14005a06b:	(bad)  
   14005a06c:	(bad)  
   14005a06d:	(bad)  
   14005a06e:	(bad)  
   14005a06f:	(bad)  
   14005a070:	(bad)  
   14005a071:	(bad)  
   14005a072:	(bad)  
   14005a073:	inc    DWORD PTR [rax]
   14005a075:	add    BYTE PTR [rax],al
   14005a077:	add    BYTE PTR [rax],0x0
   14005a07a:	add    BYTE PTR [rax-0x1],al
   14005a080:	(bad)  
   14005a081:	(bad)  
   14005a082:	(bad)  
   14005a083:	(bad)  
   14005a084:	(bad)  
   14005a085:	(bad)  
   14005a086:	(bad)  
   14005a087:	(bad)  
   14005a088:	(bad)  
   14005a089:	(bad)  
   14005a08a:	(bad)  
   14005a08b:	inc    DWORD PTR [rax]
   14005a08d:	add    BYTE PTR [rax],al
   14005a08f:	add    BYTE PTR [rax],0x0
   14005a092:	add    BYTE PTR [rax-0x1],al
   14005a098:	(bad)  
   14005a099:	(bad)  
   14005a09a:	(bad)  
   14005a09b:	(bad)  
   14005a09c:	(bad)  
   14005a09d:	(bad)  
   14005a09e:	(bad)  
   14005a09f:	(bad)  
   14005a0a0:	(bad)  
   14005a0a1:	(bad)  
   14005a0a2:	(bad)  
   14005a0a3:	inc    DWORD PTR [rax]
   14005a0a5:	add    BYTE PTR [rax],al
   14005a0a7:	add    BYTE PTR [rax],0x0
   14005a0aa:	add    BYTE PTR [rax-0x1],al
   14005a0b0:	(bad)  
   14005a0b1:	(bad)  
   14005a0b2:	(bad)  
   14005a0b3:	(bad)  
   14005a0b4:	(bad)  
   14005a0b5:	(bad)  
   14005a0b6:	(bad)  
   14005a0b7:	(bad)  
   14005a0b8:	(bad)  
   14005a0b9:	(bad)  
   14005a0ba:	(bad)  
   14005a0bb:	inc    DWORD PTR [rax]
   14005a0bd:	add    BYTE PTR [rax],al
   14005a0bf:	add    BYTE PTR [rax],0x0
   14005a0c2:	add    BYTE PTR [rax-0x1],al
   14005a0c8:	(bad)  
   14005a0c9:	(bad)  
   14005a0ca:	(bad)  
   14005a0cb:	(bad)  
   14005a0cc:	(bad)  
   14005a0cd:	(bad)  
   14005a0ce:	(bad)  
   14005a0cf:	(bad)  
   14005a0d0:	(bad)  
   14005a0d1:	(bad)  
   14005a0d2:	(bad)  
   14005a0d3:	inc    DWORD PTR [rax]
   14005a0d5:	add    BYTE PTR [rax],al
   14005a0d7:	add    BYTE PTR [rax],0x0
   14005a0da:	add    BYTE PTR [rax-0x1],al
   14005a0e0:	(bad)  
   14005a0e1:	(bad)  
   14005a0e2:	(bad)  
   14005a0e3:	(bad)  
   14005a0e4:	(bad)  
   14005a0e5:	(bad)  
   14005a0e6:	(bad)  
   14005a0e7:	(bad)  
   14005a0e8:	(bad)  
   14005a0e9:	(bad)  
   14005a0ea:	(bad)  
   14005a0eb:	inc    DWORD PTR [rax]
   14005a0ed:	add    BYTE PTR [rax],al
   14005a0ef:	add    BYTE PTR [rax],0x0
   14005a0f2:	add    BYTE PTR [rax-0x1],al
   14005a0f8:	(bad)  
   14005a0f9:	(bad)  
   14005a0fa:	(bad)  
   14005a0fb:	(bad)  
   14005a0fc:	(bad)  
   14005a0fd:	(bad)  
   14005a0fe:	(bad)  
   14005a0ff:	(bad)  
   14005a100:	(bad)  
   14005a101:	(bad)  
   14005a102:	(bad)  
   14005a103:	inc    DWORD PTR [rax]
   14005a105:	add    BYTE PTR [rax],al
   14005a107:	add    BYTE PTR [rax],0x0
   14005a10a:	add    BYTE PTR [rax-0x1],al
   14005a110:	(bad)  
   14005a111:	(bad)  
   14005a112:	(bad)  
   14005a113:	(bad)  
   14005a114:	(bad)  
   14005a115:	(bad)  
   14005a116:	(bad)  
   14005a117:	(bad)  
   14005a118:	(bad)  
   14005a119:	(bad)  
   14005a11a:	(bad)  
   14005a11b:	inc    DWORD PTR [rax]
   14005a11d:	add    BYTE PTR [rax],al
   14005a11f:	add    BYTE PTR [rax],0x0
   14005a122:	add    BYTE PTR [rax-0x1],al
   14005a128:	(bad)  
   14005a129:	(bad)  
   14005a12a:	(bad)  
   14005a12b:	(bad)  
   14005a12c:	(bad)  
   14005a12d:	(bad)  
   14005a12e:	(bad)  
   14005a12f:	(bad)  
   14005a130:	(bad)  
   14005a131:	(bad)  
   14005a132:	(bad)  
   14005a133:	inc    DWORD PTR [rax]
   14005a135:	add    BYTE PTR [rax],al
   14005a137:	add    BYTE PTR [rax],0x0
   14005a13a:	add    BYTE PTR [rax-0x1],al
   14005a140:	(bad)  
   14005a141:	(bad)  
   14005a142:	(bad)  
   14005a143:	(bad)  
   14005a144:	(bad)  
   14005a145:	(bad)  
   14005a146:	(bad)  
   14005a147:	(bad)  
   14005a148:	(bad)  
   14005a149:	(bad)  
   14005a14a:	(bad)  
   14005a14b:	inc    DWORD PTR [rax]
   14005a14d:	add    BYTE PTR [rax],al
   14005a14f:	add    BYTE PTR [rax],0x0
   14005a152:	add    BYTE PTR [rax-0x1],al
   14005a158:	(bad)  
   14005a159:	(bad)  
   14005a15a:	(bad)  
   14005a15b:	(bad)  
   14005a15c:	(bad)  
   14005a15d:	(bad)  
   14005a15e:	(bad)  
   14005a15f:	(bad)  
   14005a160:	(bad)  
   14005a161:	(bad)  
   14005a162:	(bad)  
   14005a163:	inc    DWORD PTR [rax]
   14005a165:	add    BYTE PTR [rax],al
   14005a167:	add    BYTE PTR [rax],0x0
   14005a16a:	add    BYTE PTR [rax-0x1],al
   14005a170:	(bad)  
   14005a171:	(bad)  
   14005a172:	(bad)  
   14005a173:	(bad)  
   14005a174:	(bad)  
   14005a175:	(bad)  
   14005a176:	(bad)  
   14005a177:	(bad)  
   14005a178:	(bad)  
   14005a179:	(bad)  
   14005a17a:	(bad)  
   14005a17b:	inc    DWORD PTR [rax]
   14005a17d:	add    BYTE PTR [rax],al
   14005a17f:	add    BYTE PTR [rax],0x0
   14005a182:	add    BYTE PTR [rax-0x1],al
   14005a188:	(bad)  
   14005a189:	(bad)  
   14005a18a:	(bad)  
   14005a18b:	(bad)  
   14005a18c:	(bad)  
   14005a18d:	(bad)  
   14005a18e:	(bad)  
   14005a18f:	(bad)  
   14005a190:	(bad)  
   14005a191:	(bad)  
   14005a192:	(bad)  
   14005a193:	inc    DWORD PTR [rax]
   14005a195:	add    BYTE PTR [rax],al
   14005a197:	add    BYTE PTR [rax],0x0
   14005a19a:	add    BYTE PTR [rax-0x1],al
   14005a1a0:	(bad)  
   14005a1a1:	(bad)  
   14005a1a2:	(bad)  
   14005a1a3:	(bad)  
   14005a1a4:	(bad)  
   14005a1a5:	(bad)  
   14005a1a6:	(bad)  
   14005a1a7:	(bad)  
   14005a1a8:	(bad)  
   14005a1a9:	(bad)  
   14005a1aa:	(bad)  
   14005a1ab:	inc    DWORD PTR [rax]
   14005a1ad:	add    BYTE PTR [rax],al
   14005a1af:	add    BYTE PTR [rax],0x0
   14005a1b2:	add    BYTE PTR [rax-0x1],al
   14005a1b8:	(bad)  
   14005a1b9:	(bad)  
   14005a1ba:	(bad)  
   14005a1bb:	(bad)  
   14005a1bc:	(bad)  
   14005a1bd:	(bad)  
   14005a1be:	(bad)  
   14005a1bf:	(bad)  
   14005a1c0:	(bad)  
   14005a1c1:	(bad)  
   14005a1c2:	(bad)  
   14005a1c3:	inc    DWORD PTR [rax]
   14005a1c5:	add    BYTE PTR [rax],al
   14005a1c7:	add    BYTE PTR [rax],0x0
   14005a1ca:	add    BYTE PTR [rax-0x80000000],al
   14005a1d0:	add    BYTE PTR [rax],al
   14005a1d2:	add    BYTE PTR [rax-0x80000000],al
   14005a1d8:	add    BYTE PTR [rax],al
   14005a1da:	add    BYTE PTR [rax-0x80000000],al
   14005a1e0:	add    BYTE PTR [rax],al
   14005a1e2:	add    BYTE PTR [rax-0x80000000],al
   14005a1e8:	add    BYTE PTR [rax],al
   14005a1ea:	add    BYTE PTR [rax-0x80000000],al
   14005a1f0:	add    BYTE PTR [rax],al
   14005a1f2:	add    BYTE PTR [rax-0x80000000],al
   14005a1f8:	add    BYTE PTR [rax],al
   14005a1fa:	add    BYTE PTR [rax-0x80000000],al
   14005a200:	add    BYTE PTR [rax],al
   14005a202:	add    BYTE PTR [rax-0x80000000],al
   14005a208:	add    BYTE PTR [rax],al
   14005a20a:	add    BYTE PTR [rax-0x80000000],al
   14005a210:	add    BYTE PTR [rax],al
   14005a212:	add    BYTE PTR [rax-0x80000000],al
   14005a218:	add    BYTE PTR [rax],al
   14005a21a:	add    BYTE PTR [rax-0x80000000],al
   14005a220:	add    BYTE PTR [rax],al
   14005a222:	add    BYTE PTR [rax-0x80000000],al
   14005a228:	add    BYTE PTR [rax],al
   14005a22a:	add    BYTE PTR [rax-0x80000000],al
   14005a230:	add    BYTE PTR [rax],al
   14005a232:	add    BYTE PTR [rax-0x80000000],al
   14005a238:	add    BYTE PTR [rax],al
   14005a23a:	add    BYTE PTR [rax-0x80000000],al
   14005a240:	add    BYTE PTR [rax],al
   14005a242:	add    BYTE PTR [rax-0x80000000],al
   14005a248:	add    BYTE PTR [rax],al
   14005a24a:	add    BYTE PTR [rax-0x80000000],al
   14005a250:	add    BYTE PTR [rax],al
   14005a252:	add    BYTE PTR [rax-0x80000000],al
   14005a258:	add    BYTE PTR [rax],al
   14005a25a:	add    BYTE PTR [rax-0x1],al
   14005a260:	(bad)  
   14005a261:	(bad)  
   14005a262:	(bad)  
   14005a263:	(bad)  
   14005a264:	(bad)  
   14005a265:	(bad)  
   14005a266:	(bad)  
   14005a267:	(bad)  
   14005a268:	(bad)  
   14005a269:	(bad)  
   14005a26a:	(bad)  
   14005a26b:	inc    DWORD PTR [rax]
   14005a26d:	add    BYTE PTR [rax],al
   14005a26f:	add    BYTE PTR [rax],0x0
   14005a272:	add    BYTE PTR [rax-0x1],al
   14005a278:	(bad)  
   14005a279:	(bad)  
   14005a27a:	(bad)  
   14005a27b:	(bad)  
   14005a27c:	(bad)  
   14005a27d:	(bad)  
   14005a27e:	(bad)  
   14005a27f:	(bad)  
   14005a280:	(bad)  
   14005a281:	(bad)  
   14005a282:	(bad)  
   14005a283:	inc    DWORD PTR [rax]
   14005a285:	add    BYTE PTR [rax],al
   14005a287:	add    BYTE PTR [rax],0x0
   14005a28a:	add    BYTE PTR [rax-0x80000000],al
   14005a290:	add    BYTE PTR [rax],al
   14005a292:	add    BYTE PTR [rax-0x80000000],al
   14005a298:	add    BYTE PTR [rax],al
   14005a29a:	add    BYTE PTR [rax-0x80000000],al
   14005a2a0:	add    BYTE PTR [rax],al
   14005a2a2:	add    BYTE PTR [rax-0x80000000],al
   14005a2a8:	add    BYTE PTR [rax],al
   14005a2aa:	add    BYTE PTR [rax-0x80000000],al
   14005a2b0:	add    BYTE PTR [rax],al
   14005a2b2:	add    BYTE PTR [rax-0x80000000],al
   14005a2b8:	add    BYTE PTR [rax],al
   14005a2ba:	add    BYTE PTR [rax-0x80000000],al
   14005a2c0:	add    BYTE PTR [rax],al
   14005a2c2:	add    BYTE PTR [rax-0x80000000],al
   14005a2c8:	add    BYTE PTR [rax],al
   14005a2ca:	add    BYTE PTR [rax-0x80000000],al
   14005a2d0:	add    BYTE PTR [rax],al
   14005a2d2:	add    BYTE PTR [rax-0x80000000],al
   14005a2d8:	add    BYTE PTR [rax],al
   14005a2da:	add    BYTE PTR [rax-0x80000000],al
   14005a2e0:	add    BYTE PTR [rax],al
   14005a2e2:	add    BYTE PTR [rax-0x80000000],al
   14005a2e8:	add    BYTE PTR [rax],al
   14005a2ea:	add    BYTE PTR [rax-0x80000000],al
   14005a2f0:	add    BYTE PTR [rax],al
   14005a2f2:	add    BYTE PTR [rax-0x80000000],al
   14005a2f8:	add    BYTE PTR [rax],al
   14005a2fa:	add    BYTE PTR [rax-0x80000000],al
   14005a300:	add    BYTE PTR [rax],al
   14005a302:	add    BYTE PTR [rax-0x80000000],al
   14005a308:	add    BYTE PTR [rax],al
   14005a30a:	add    BYTE PTR [rax-0x80000000],al
   14005a310:	add    BYTE PTR [rax],al
   14005a312:	add    BYTE PTR [rax-0x80000000],al
   14005a318:	add    BYTE PTR [rax],al
   14005a31a:	add    BYTE PTR [rax-0x1],al
   14005a320:	(bad)  
   14005a321:	(bad)  
   14005a322:	(bad)  
   14005a323:	(bad)  
   14005a324:	(bad)  
   14005a325:	(bad)  
   14005a326:	(bad)  
   14005a327:	(bad)  
   14005a328:	(bad)  
   14005a329:	(bad)  
   14005a32a:	(bad)  
   14005a32b:	inc    DWORD PTR [rax]
   14005a32d:	add    BYTE PTR [rax],al
   14005a32f:	add    BYTE PTR [rax],0x0
   14005a332:	add    BYTE PTR [rax-0x1],al
   14005a338:	(bad)  
   14005a339:	(bad)  
   14005a33a:	(bad)  
   14005a33b:	(bad)  
   14005a33c:	(bad)  
   14005a33d:	(bad)  
   14005a33e:	(bad)  
   14005a33f:	(bad)  
   14005a340:	(bad)  
   14005a341:	(bad)  
   14005a342:	(bad)  
   14005a343:	(bad)  
   14005a344:	(bad)  
   14005a345:	(bad)  
   14005a346:	(bad)  
   14005a347:	(bad)  
   14005a348:	(bad)  
   14005a349:	(bad)  
   14005a34a:	(bad)  
   14005a34b:	(bad)  
   14005a34c:	(bad)  
   14005a34d:	(bad)  
   14005a34e:	(bad)  
   14005a34f:	(bad)  
   14005a350:	(bad)  
   14005a351:	(bad)  
   14005a352:	(bad)  
   14005a353:	(bad)  
   14005a354:	(bad)  
   14005a355:	(bad)  
   14005a356:	(bad)  
   14005a357:	(bad)  
   14005a358:	(bad)  
   14005a359:	(bad)  
   14005a35a:	(bad)  
   14005a35b:	(bad)  
   14005a35c:	(bad)  
   14005a35d:	(bad)  
   14005a35e:	(bad)  
   14005a35f:	(bad)  
   14005a360:	(bad)  
   14005a361:	(bad)  
   14005a362:	(bad)  
   14005a363:	(bad)  
   14005a364:	(bad)  
   14005a365:	(bad)  
   14005a366:	(bad)  
   14005a367:	(bad)  
   14005a368:	(bad)  
   14005a369:	(bad)  
   14005a36a:	(bad)  
   14005a36b:	(bad)  
   14005a36c:	(bad)  
   14005a36d:	(bad)  
   14005a36e:	(bad)  
   14005a36f:	(bad)  
   14005a370:	(bad)  
   14005a371:	(bad)  
   14005a372:	(bad)  
   14005a373:	(bad)  
   14005a374:	(bad)  
   14005a375:	(bad)  
   14005a376:	(bad)  
   14005a377:	(bad)  
   14005a378:	(bad)  
   14005a379:	(bad)  
   14005a37a:	(bad)  
   14005a37b:	(bad)  
   14005a37c:	(bad)  
   14005a37d:	(bad)  
   14005a37e:	(bad)  
   14005a37f:	(bad)  
   14005a380:	(bad)  
   14005a381:	(bad)  
   14005a382:	(bad)  
   14005a383:	(bad)  
   14005a384:	(bad)  
   14005a385:	(bad)  
   14005a386:	(bad)  
   14005a387:	(bad)  
   14005a388:	(bad)  
   14005a389:	(bad)  
   14005a38a:	(bad)  
   14005a38b:	(bad)  
   14005a38c:	(bad)  
   14005a38d:	(bad)  
   14005a38e:	(bad)  
   14005a38f:	(bad)  
   14005a390:	(bad)  
   14005a391:	(bad)  
   14005a392:	(bad)  
   14005a393:	(bad)  
   14005a394:	(bad)  
   14005a395:	(bad)  
   14005a396:	(bad)  
   14005a397:	(bad)  
   14005a398:	(bad)  
   14005a399:	(bad)  
   14005a39a:	(bad)  
   14005a39b:	(bad)  
   14005a39c:	(bad)  
   14005a39d:	(bad)  
   14005a39e:	(bad)  
   14005a39f:	(bad)  
   14005a3a0:	(bad)  
   14005a3a1:	(bad)  
   14005a3a2:	(bad)  
   14005a3a3:	(bad)  
   14005a3a4:	(bad)  
   14005a3a5:	(bad)  
   14005a3a6:	(bad)  
   14005a3a7:	(bad)  
   14005a3a8:	(bad)  
   14005a3a9:	(bad)  
   14005a3aa:	(bad)  
   14005a3ab:	(bad)  
   14005a3ac:	(bad)  
   14005a3ad:	(bad)  
   14005a3ae:	(bad)  
   14005a3af:	(bad)  
   14005a3b0:	(bad)  
   14005a3b1:	(bad)  
   14005a3b2:	(bad)  
   14005a3b3:	(bad)  
   14005a3b4:	(bad)  
   14005a3b5:	(bad)  
   14005a3b6:	(bad)  
   14005a3b7:	(bad)  
   14005a3b8:	(bad)  
   14005a3b9:	(bad)  
   14005a3ba:	(bad)  
   14005a3bb:	(bad)  
   14005a3bc:	(bad)  
   14005a3bd:	(bad)  
   14005a3be:	(bad)  
   14005a3bf:	(bad)  
   14005a3c0:	(bad)  
   14005a3c1:	(bad)  
   14005a3c2:	(bad)  
   14005a3c3:	(bad)  
   14005a3c4:	(bad)  
   14005a3c5:	(bad)  
   14005a3c6:	(bad)  
   14005a3c7:	(bad)  
   14005a3c8:	(bad)  
   14005a3c9:	(bad)  
   14005a3ca:	(bad)  
   14005a3cb:	(bad)  
   14005a3cc:	(bad)  
   14005a3cd:	(bad)  
   14005a3ce:	(bad)  
   14005a3cf:	(bad)  
   14005a3d0:	(bad)  
   14005a3d1:	(bad)  
   14005a3d2:	(bad)  
   14005a3d3:	(bad)  
   14005a3d4:	(bad)  
   14005a3d5:	(bad)  
   14005a3d6:	(bad)  
   14005a3d7:	(bad)  
   14005a3d8:	(bad)  
   14005a3d9:	(bad)  
   14005a3da:	(bad)  
   14005a3db:	(bad)  
   14005a3dc:	(bad)  
   14005a3dd:	(bad)  
   14005a3de:	(bad)  
   14005a3df:	(bad)  
   14005a3e0:	(bad)  
   14005a3e1:	(bad)  
   14005a3e2:	(bad)  
   14005a3e3:	(bad)  
   14005a3e4:	(bad)  
   14005a3e5:	(bad)  
   14005a3e6:	(bad)  
   14005a3e7:	(bad)  
   14005a3e8:	(bad)  
   14005a3e9:	(bad)  
   14005a3ea:	(bad)  
   14005a3eb:	inc    DWORD PTR [rax]
   14005a3ed:	add    BYTE PTR [rax],al
   14005a3ef:	add    BYTE PTR [rax],0x0
   14005a3f2:	add    BYTE PTR [rax-0x1],al
   14005a3f8:	(bad)  
   14005a3f9:	(bad)  
   14005a3fa:	(bad)  
   14005a3fb:	(bad)  
   14005a3fc:	(bad)  
   14005a3fd:	(bad)  
   14005a3fe:	(bad)  
   14005a3ff:	(bad)  
   14005a400:	(bad)  
   14005a401:	(bad)  
   14005a402:	(bad)  
   14005a403:	(bad)  
   14005a404:	(bad)  
   14005a405:	(bad)  
   14005a406:	(bad)  
   14005a407:	(bad)  
   14005a408:	(bad)  
   14005a409:	(bad)  
   14005a40a:	(bad)  
   14005a40b:	(bad)  
   14005a40c:	(bad)  
   14005a40d:	(bad)  
   14005a40e:	(bad)  
   14005a40f:	(bad)  
   14005a410:	(bad)  
   14005a411:	(bad)  
   14005a412:	(bad)  
   14005a413:	(bad)  
   14005a414:	(bad)  
   14005a415:	(bad)  
   14005a416:	(bad)  
   14005a417:	(bad)  
   14005a418:	(bad)  
   14005a419:	(bad)  
   14005a41a:	(bad)  
   14005a41b:	(bad)  
   14005a41c:	(bad)  
   14005a41d:	(bad)  
   14005a41e:	(bad)  
   14005a41f:	(bad)  
   14005a420:	(bad)  
   14005a421:	(bad)  
   14005a422:	(bad)  
   14005a423:	(bad)  
   14005a424:	(bad)  
   14005a425:	(bad)  
   14005a426:	(bad)  
   14005a427:	(bad)  
   14005a428:	(bad)  
   14005a429:	(bad)  
   14005a42a:	(bad)  
   14005a42b:	(bad)  
   14005a42c:	(bad)  
   14005a42d:	(bad)  
   14005a42e:	(bad)  
   14005a42f:	(bad)  
   14005a430:	(bad)  
   14005a431:	(bad)  
   14005a432:	(bad)  
   14005a433:	(bad)  
   14005a434:	(bad)  
   14005a435:	(bad)  
   14005a436:	(bad)  
   14005a437:	(bad)  
   14005a438:	(bad)  
   14005a439:	(bad)  
   14005a43a:	(bad)  
   14005a43b:	(bad)  
   14005a43c:	(bad)  
   14005a43d:	(bad)  
   14005a43e:	(bad)  
   14005a43f:	(bad)  
   14005a440:	(bad)  
   14005a441:	(bad)  
   14005a442:	(bad)  
   14005a443:	(bad)  
   14005a444:	(bad)  
   14005a445:	(bad)  
   14005a446:	(bad)  
   14005a447:	(bad)  
   14005a448:	(bad)  
   14005a449:	(bad)  
   14005a44a:	(bad)  
   14005a44b:	(bad)  
   14005a44c:	(bad)  
   14005a44d:	(bad)  
   14005a44e:	(bad)  
   14005a44f:	(bad)  
   14005a450:	(bad)  
   14005a451:	(bad)  
   14005a452:	(bad)  
   14005a453:	(bad)  
   14005a454:	(bad)  
   14005a455:	(bad)  
   14005a456:	(bad)  
   14005a457:	(bad)  
   14005a458:	(bad)  
   14005a459:	(bad)  
   14005a45a:	(bad)  
   14005a45b:	(bad)  
   14005a45c:	(bad)  
   14005a45d:	(bad)  
   14005a45e:	(bad)  
   14005a45f:	(bad)  
   14005a460:	(bad)  
   14005a461:	(bad)  
   14005a462:	(bad)  
   14005a463:	(bad)  
   14005a464:	(bad)  
   14005a465:	(bad)  
   14005a466:	(bad)  
   14005a467:	(bad)  
   14005a468:	(bad)  
   14005a469:	(bad)  
   14005a46a:	(bad)  
   14005a46b:	(bad)  
   14005a46c:	(bad)  
   14005a46d:	(bad)  
   14005a46e:	(bad)  
   14005a46f:	(bad)  
   14005a470:	(bad)  
   14005a471:	(bad)  
   14005a472:	(bad)  
   14005a473:	(bad)  
   14005a474:	(bad)  
   14005a475:	(bad)  
   14005a476:	(bad)  
   14005a477:	(bad)  
   14005a478:	(bad)  
   14005a479:	(bad)  
   14005a47a:	(bad)  
   14005a47b:	(bad)  
   14005a47c:	(bad)  
   14005a47d:	(bad)  
   14005a47e:	(bad)  
   14005a47f:	(bad)  
   14005a480:	(bad)  
   14005a481:	(bad)  
   14005a482:	(bad)  
   14005a483:	(bad)  
   14005a484:	(bad)  
   14005a485:	(bad)  
   14005a486:	(bad)  
   14005a487:	(bad)  
   14005a488:	(bad)  
   14005a489:	(bad)  
   14005a48a:	(bad)  
   14005a48b:	(bad)  
   14005a48c:	(bad)  
   14005a48d:	(bad)  
   14005a48e:	(bad)  
   14005a48f:	(bad)  
   14005a490:	(bad)  
   14005a491:	(bad)  
   14005a492:	(bad)  
   14005a493:	(bad)  
   14005a494:	(bad)  
   14005a495:	(bad)  
   14005a496:	(bad)  
   14005a497:	(bad)  
   14005a498:	(bad)  
   14005a499:	(bad)  
   14005a49a:	(bad)  
   14005a49b:	(bad)  
   14005a49c:	(bad)  
   14005a49d:	(bad)  
   14005a49e:	(bad)  
   14005a49f:	(bad)  
   14005a4a0:	(bad)  
   14005a4a1:	(bad)  
   14005a4a2:	(bad)  
   14005a4a3:	(bad)  
   14005a4a4:	(bad)  
   14005a4a5:	(bad)  
   14005a4a6:	(bad)  
   14005a4a7:	(bad)  
   14005a4a8:	(bad)  
   14005a4a9:	(bad)  
   14005a4aa:	(bad)  
   14005a4ab:	inc    DWORD PTR [rax]
   14005a4ad:	add    BYTE PTR [rax],al
   14005a4af:	add    BYTE PTR [rax],0x0
   14005a4b2:	add    BYTE PTR [rax-0x1],al
   14005a4b8:	(bad)  
   14005a4b9:	(bad)  
   14005a4ba:	(bad)  
   14005a4bb:	(bad)  
   14005a4bc:	(bad)  
   14005a4bd:	(bad)  
   14005a4be:	(bad)  
   14005a4bf:	(bad)  
   14005a4c0:	(bad)  
   14005a4c1:	(bad)  
   14005a4c2:	(bad)  
   14005a4c3:	(bad)  
   14005a4c4:	(bad)  
   14005a4c5:	(bad)  
   14005a4c6:	(bad)  
   14005a4c7:	(bad)  
   14005a4c8:	(bad)  
   14005a4c9:	(bad)  
   14005a4ca:	(bad)  
   14005a4cb:	(bad)  
   14005a4cc:	(bad)  
   14005a4cd:	(bad)  
   14005a4ce:	(bad)  
   14005a4cf:	(bad)  
   14005a4d0:	(bad)  
   14005a4d1:	(bad)  
   14005a4d2:	(bad)  
   14005a4d3:	(bad)  
   14005a4d4:	(bad)  
   14005a4d5:	(bad)  
   14005a4d6:	(bad)  
   14005a4d7:	(bad)  
   14005a4d8:	(bad)  
   14005a4d9:	(bad)  
   14005a4da:	(bad)  
   14005a4db:	(bad)  
   14005a4dc:	(bad)  
   14005a4dd:	(bad)  
   14005a4de:	(bad)  
   14005a4df:	(bad)  
   14005a4e0:	(bad)  
   14005a4e1:	(bad)  
   14005a4e2:	(bad)  
   14005a4e3:	(bad)  
   14005a4e4:	(bad)  
   14005a4e5:	(bad)  
   14005a4e6:	(bad)  
   14005a4e7:	(bad)  
   14005a4e8:	(bad)  
   14005a4e9:	(bad)  
   14005a4ea:	(bad)  
   14005a4eb:	(bad)  
   14005a4ec:	(bad)  
   14005a4ed:	(bad)  
   14005a4ee:	(bad)  
   14005a4ef:	(bad)  
   14005a4f0:	(bad)  
   14005a4f1:	(bad)  
   14005a4f2:	(bad)  
   14005a4f3:	(bad)  
   14005a4f4:	(bad)  
   14005a4f5:	(bad)  
   14005a4f6:	(bad)  
   14005a4f7:	(bad)  
   14005a4f8:	(bad)  
   14005a4f9:	(bad)  
   14005a4fa:	(bad)  
   14005a4fb:	(bad)  
   14005a4fc:	(bad)  
   14005a4fd:	(bad)  
   14005a4fe:	(bad)  
   14005a4ff:	(bad)  
   14005a500:	(bad)  
   14005a501:	(bad)  
   14005a502:	(bad)  
   14005a503:	(bad)  
   14005a504:	(bad)  
   14005a505:	(bad)  
   14005a506:	(bad)  
   14005a507:	(bad)  
   14005a508:	(bad)  
   14005a509:	(bad)  
   14005a50a:	(bad)  
   14005a50b:	(bad)  
   14005a50c:	(bad)  
   14005a50d:	(bad)  
   14005a50e:	(bad)  
   14005a50f:	(bad)  
   14005a510:	(bad)  
   14005a511:	(bad)  
   14005a512:	(bad)  
   14005a513:	(bad)  
   14005a514:	(bad)  
   14005a515:	(bad)  
   14005a516:	(bad)  
   14005a517:	(bad)  
   14005a518:	(bad)  
   14005a519:	(bad)  
   14005a51a:	(bad)  
   14005a51b:	(bad)  
   14005a51c:	(bad)  
   14005a51d:	(bad)  
   14005a51e:	(bad)  
   14005a51f:	(bad)  
   14005a520:	(bad)  
   14005a521:	(bad)  
   14005a522:	(bad)  
   14005a523:	(bad)  
   14005a524:	(bad)  
   14005a525:	(bad)  
   14005a526:	(bad)  
   14005a527:	(bad)  
   14005a528:	(bad)  
   14005a529:	(bad)  
   14005a52a:	(bad)  
   14005a52b:	(bad)  
   14005a52c:	(bad)  
   14005a52d:	(bad)  
   14005a52e:	(bad)  
   14005a52f:	(bad)  
   14005a530:	(bad)  
   14005a531:	(bad)  
   14005a532:	(bad)  
   14005a533:	(bad)  
   14005a534:	(bad)  
   14005a535:	(bad)  
   14005a536:	(bad)  
   14005a537:	(bad)  
   14005a538:	(bad)  
   14005a539:	(bad)  
   14005a53a:	(bad)  
   14005a53b:	(bad)  
   14005a53c:	(bad)  
   14005a53d:	(bad)  
   14005a53e:	(bad)  
   14005a53f:	(bad)  
   14005a540:	(bad)  
   14005a541:	(bad)  
   14005a542:	(bad)  
   14005a543:	(bad)  
   14005a544:	(bad)  
   14005a545:	(bad)  
   14005a546:	(bad)  
   14005a547:	(bad)  
   14005a548:	(bad)  
   14005a549:	(bad)  
   14005a54a:	(bad)  
   14005a54b:	(bad)  
   14005a54c:	(bad)  
   14005a54d:	(bad)  
   14005a54e:	(bad)  
   14005a54f:	(bad)  
   14005a550:	(bad)  
   14005a551:	(bad)  
   14005a552:	(bad)  
   14005a553:	(bad)  
   14005a554:	(bad)  
   14005a555:	(bad)  
   14005a556:	(bad)  
   14005a557:	(bad)  
   14005a558:	(bad)  
   14005a559:	(bad)  
   14005a55a:	(bad)  
   14005a55b:	(bad)  
   14005a55c:	(bad)  
   14005a55d:	(bad)  
   14005a55e:	(bad)  
   14005a55f:	(bad)  
   14005a560:	(bad)  
   14005a561:	(bad)  
   14005a562:	(bad)  
   14005a563:	(bad)  
   14005a564:	(bad)  
   14005a565:	(bad)  
   14005a566:	(bad)  
   14005a567:	(bad)  
   14005a568:	(bad)  
   14005a569:	(bad)  
   14005a56a:	(bad)  
   14005a56b:	inc    DWORD PTR [rax]
   14005a56d:	add    BYTE PTR [rax],al
   14005a56f:	add    BYTE PTR [rax],0x0
   14005a572:	add    BYTE PTR [rax-0x75],bl
   14005a575:	mov    ecx,DWORD PTR [rbx-0x50]
   14005a57b:	(bad)  
   14005a57c:	(bad)  
   14005a57d:	(bad)  
   14005a57e:	(bad)  
   14005a57f:	(bad)  
   14005a580:	(bad)  
   14005a581:	(bad)  
   14005a582:	(bad)  
   14005a583:	(bad)  
   14005a584:	(bad)  
   14005a585:	(bad)  
   14005a586:	(bad)  
   14005a587:	(bad)  
   14005a588:	(bad)  
   14005a589:	(bad)  
   14005a58a:	(bad)  
   14005a58b:	(bad)  
   14005a58c:	(bad)  
   14005a58d:	(bad)  
   14005a58e:	(bad)  
   14005a58f:	(bad)  
   14005a590:	(bad)  
   14005a591:	(bad)  
   14005a592:	(bad)  
   14005a593:	(bad)  
   14005a594:	(bad)  
   14005a595:	(bad)  
   14005a596:	(bad)  
   14005a597:	(bad)  
   14005a598:	(bad)  
   14005a599:	(bad)  
   14005a59a:	(bad)  
   14005a59b:	(bad)  
   14005a59c:	(bad)  
   14005a59d:	(bad)  
   14005a59e:	(bad)  
   14005a59f:	(bad)  
   14005a5a0:	(bad)  
   14005a5a1:	(bad)  
   14005a5a2:	(bad)  
   14005a5a3:	(bad)  
   14005a5a4:	(bad)  
   14005a5a5:	(bad)  
   14005a5a6:	(bad)  
   14005a5a7:	(bad)  
   14005a5a8:	(bad)  
   14005a5a9:	(bad)  
   14005a5aa:	(bad)  
   14005a5ab:	(bad)  
   14005a5ac:	(bad)  
   14005a5ad:	(bad)  
   14005a5ae:	(bad)  
   14005a5af:	(bad)  
   14005a5b0:	(bad)  
   14005a5b1:	(bad)  
   14005a5b2:	(bad)  
   14005a5b3:	(bad)  
   14005a5b4:	(bad)  
   14005a5b5:	(bad)  
   14005a5b6:	(bad)  
   14005a5b7:	(bad)  
   14005a5b8:	(bad)  
   14005a5b9:	(bad)  
   14005a5ba:	(bad)  
   14005a5bb:	(bad)  
   14005a5bc:	(bad)  
   14005a5bd:	(bad)  
   14005a5be:	(bad)  
   14005a5bf:	(bad)  
   14005a5c0:	(bad)  
   14005a5c1:	(bad)  
   14005a5c2:	(bad)  
   14005a5c3:	(bad)  
   14005a5c4:	(bad)  
   14005a5c5:	(bad)  
   14005a5c6:	(bad)  
   14005a5c7:	(bad)  
   14005a5c8:	(bad)  
   14005a5c9:	(bad)  
   14005a5ca:	(bad)  
   14005a5cb:	(bad)  
   14005a5cc:	(bad)  
   14005a5cd:	(bad)  
   14005a5ce:	(bad)  
   14005a5cf:	(bad)  
   14005a5d0:	(bad)  
   14005a5d1:	(bad)  
   14005a5d2:	(bad)  
   14005a5d3:	(bad)  
   14005a5d4:	(bad)  
   14005a5d5:	(bad)  
   14005a5d6:	(bad)  
   14005a5d7:	(bad)  
   14005a5d8:	(bad)  
   14005a5d9:	(bad)  
   14005a5da:	(bad)  
   14005a5db:	(bad)  
   14005a5dc:	(bad)  
   14005a5dd:	(bad)  
   14005a5de:	(bad)  
   14005a5df:	(bad)  
   14005a5e0:	(bad)  
   14005a5e1:	(bad)  
   14005a5e2:	(bad)  
   14005a5e3:	(bad)  
   14005a5e4:	(bad)  
   14005a5e5:	(bad)  
   14005a5e6:	(bad)  
   14005a5e7:	(bad)  
   14005a5e8:	(bad)  
   14005a5e9:	(bad)  
   14005a5ea:	(bad)  
   14005a5eb:	(bad)  
   14005a5ec:	(bad)  
   14005a5ed:	(bad)  
   14005a5ee:	(bad)  
   14005a5ef:	(bad)  
   14005a5f0:	(bad)  
   14005a5f1:	(bad)  
   14005a5f2:	(bad)  
   14005a5f3:	(bad)  
   14005a5f4:	(bad)  
   14005a5f5:	(bad)  
   14005a5f6:	(bad)  
   14005a5f7:	(bad)  
   14005a5f8:	(bad)  
   14005a5f9:	(bad)  
   14005a5fa:	(bad)  
   14005a5fb:	(bad)  
   14005a5fc:	(bad)  
   14005a5fd:	(bad)  
   14005a5fe:	(bad)  
   14005a5ff:	(bad)  
   14005a600:	(bad)  
   14005a601:	(bad)  
   14005a602:	(bad)  
   14005a603:	(bad)  
   14005a604:	(bad)  
   14005a605:	(bad)  
   14005a606:	(bad)  
   14005a607:	(bad)  
   14005a608:	(bad)  
   14005a609:	(bad)  
   14005a60a:	(bad)  
   14005a60b:	(bad)  
   14005a60c:	(bad)  
   14005a60d:	(bad)  
   14005a60e:	(bad)  
   14005a60f:	(bad)  
   14005a610:	(bad)  
   14005a611:	(bad)  
   14005a612:	(bad)  
   14005a613:	(bad)  
   14005a614:	(bad)  
   14005a615:	(bad)  
   14005a616:	(bad)  
   14005a617:	(bad)  
   14005a618:	(bad)  
   14005a619:	(bad)  
   14005a61a:	(bad)  
   14005a61b:	(bad)  
   14005a61c:	(bad)  
   14005a61d:	(bad)  
   14005a61e:	(bad)  
   14005a61f:	(bad)  
   14005a620:	(bad)  
   14005a621:	(bad)  
   14005a622:	(bad)  
   14005a623:	(bad)  
   14005a624:	(bad)  
   14005a625:	(bad)  
   14005a626:	(bad)  
   14005a627:	dec    DWORD PTR [rbx+0xb08b8b]
   14005a62d:	add    BYTE PTR [rax],al
   14005a62f:	(bad)  
   14005a630:	add    BYTE PTR [rax],al
   14005a632:	add    BYTE PTR [rax],cl
   14005a634:	add    BYTE PTR [rax],al
   14005a636:	add    BYTE PTR [rax+0x0],ah
   14005a639:	add    BYTE PTR [rax],al
   14005a63b:	add    BYTE PTR [rax],0x0
   14005a63e:	add    BYTE PTR [rax-0x80000000],al
   14005a644:	add    BYTE PTR [rax],al
   14005a646:	add    BYTE PTR [rax-0x80000000],al
   14005a64c:	add    BYTE PTR [rax],al
   14005a64e:	add    BYTE PTR [rax-0x80000000],al
   14005a654:	add    BYTE PTR [rax],al
   14005a656:	add    BYTE PTR [rax-0x80000000],al
   14005a65c:	add    BYTE PTR [rax],al
   14005a65e:	add    BYTE PTR [rax-0x80000000],al
   14005a664:	add    BYTE PTR [rax],al
   14005a666:	add    BYTE PTR [rax-0x80000000],al
   14005a66c:	add    BYTE PTR [rax],al
   14005a66e:	add    BYTE PTR [rax-0x80000000],al
   14005a674:	add    BYTE PTR [rax],al
   14005a676:	add    BYTE PTR [rax-0x80000000],al
   14005a67c:	add    BYTE PTR [rax],al
   14005a67e:	add    BYTE PTR [rax-0x80000000],al
   14005a684:	add    BYTE PTR [rax],al
   14005a686:	add    BYTE PTR [rax-0x80000000],al
   14005a68c:	add    BYTE PTR [rax],al
   14005a68e:	add    BYTE PTR [rax-0x80000000],al
   14005a694:	add    BYTE PTR [rax],al
   14005a696:	add    BYTE PTR [rax-0x80000000],al
   14005a69c:	add    BYTE PTR [rax],al
   14005a69e:	add    BYTE PTR [rax-0x80000000],al
   14005a6a4:	add    BYTE PTR [rax],al
   14005a6a6:	add    BYTE PTR [rax-0x80000000],al
   14005a6ac:	add    BYTE PTR [rax],al
   14005a6ae:	add    BYTE PTR [rax-0x80000000],al
   14005a6b4:	add    BYTE PTR [rax],al
   14005a6b6:	add    BYTE PTR [rax-0x80000000],al
   14005a6bc:	add    BYTE PTR [rax],al
   14005a6be:	add    BYTE PTR [rax-0x80000000],al
   14005a6c4:	add    BYTE PTR [rax],al
   14005a6c6:	add    BYTE PTR [rax-0x80000000],al
   14005a6cc:	add    BYTE PTR [rax],al
   14005a6ce:	add    BYTE PTR [rax-0x80000000],al
   14005a6d4:	add    BYTE PTR [rax],al
   14005a6d6:	add    BYTE PTR [rax-0x80000000],al
   14005a6dc:	add    BYTE PTR [rax],al
   14005a6de:	add    BYTE PTR [rax-0x80000000],al
   14005a6e4:	add    BYTE PTR [rax],al
   14005a6e6:	add    BYTE PTR [rax+0x58000000],al
   14005a6ec:	add    BYTE PTR [rax],al
   14005a6ee:	add    BYTE PTR [rax],cl
	...
   14005a6f8:	add    BYTE PTR [rax],al
   14005a6fa:	add    BYTE PTR [rax],cl
	...
   14005adb0:	(bad)  
   14005adb1:	(bad)  
   14005adb2:	(bad)  
   14005adb3:	(bad)  
   14005adb4:	(bad)  
   14005adb5:	inc    DWORD PTR [rax]
   14005adb7:	add    bh,bh
   14005adb9:	(bad)  
   14005adba:	(bad)  
   14005adbb:	(bad)  
   14005adbc:	(bad)  
   14005adbd:	inc    DWORD PTR [rax]
   14005adbf:	add    bh,bh
   14005adc1:	(bad)  
   14005adc2:	(bad)  
   14005adc3:	(bad)  
   14005adc4:	(bad)  
   14005adc5:	inc    DWORD PTR [rax]
   14005adc7:	add    bh,bh
   14005adc9:	(bad)  
   14005adca:	(bad)  
   14005adcb:	(bad)  
   14005adcc:	(bad)  
   14005adcd:	inc    DWORD PTR [rax]
   14005adcf:	add    bh,bh
   14005add1:	(bad)  
   14005add2:	(bad)  
   14005add3:	(bad)  
   14005add4:	(bad)  
   14005add5:	inc    DWORD PTR [rax]
   14005add7:	add    bh,bh
   14005add9:	(bad)  
   14005adda:	(bad)  
   14005addb:	(bad)  
   14005addc:	(bad)  
   14005addd:	inc    DWORD PTR [rax]
   14005addf:	add    bh,bh
   14005ade1:	(bad)  
   14005ade2:	(bad)  
   14005ade3:	(bad)  
   14005ade4:	(bad)  
   14005ade5:	inc    DWORD PTR [rax]
   14005ade7:	add    bh,bh
   14005ade9:	(bad)  
   14005adea:	(bad)  
   14005adeb:	(bad)  
   14005adec:	(bad)  
   14005aded:	inc    DWORD PTR [rax]
   14005adef:	add    bh,bh
   14005adf1:	(bad)  
   14005adf2:	(bad)  
   14005adf3:	(bad)  
   14005adf4:	(bad)  
   14005adf5:	inc    DWORD PTR [rax]
	...
   14005aee7:	add    bh,bl
   14005aee9:	(bad)  
   14005aeea:	(bad)  
   14005aeeb:	(bad)  
   14005aeec:	(bad)  
   14005aeed:	inc    DWORD PTR [rax]
   14005aeef:	add    bh,bh
   14005aef1:	(bad)  
   14005aef2:	(bad)  
   14005aef3:	(bad)  
   14005aef4:	(bad)  
   14005aef5:	inc    DWORD PTR [rax]
   14005aef7:	add    bh,bh
   14005aef9:	(bad)  
   14005aefa:	(bad)  
   14005aefb:	(bad)  
   14005aefc:	(bad)  
   14005aefd:	inc    DWORD PTR [rax]
   14005aeff:	add    bh,bh
   14005af01:	(bad)  
   14005af02:	(bad)  
   14005af03:	(bad)  
   14005af04:	(bad)  
   14005af05:	inc    DWORD PTR [rax]
   14005af07:	add    bh,bh
   14005af09:	(bad)  
   14005af0a:	(bad)  
   14005af0b:	(bad)  
   14005af0c:	(bad)  
   14005af0d:	inc    DWORD PTR [rax]
   14005af0f:	add    bh,bh
   14005af11:	(bad)  
   14005af12:	(bad)  
   14005af13:	(bad)  
   14005af14:	(bad)  
   14005af15:	inc    DWORD PTR [rax]
   14005af17:	add    bh,bh
   14005af19:	(bad)  
   14005af1a:	(bad)  
   14005af1b:	(bad)  
   14005af1c:	(bad)  
   14005af1d:	inc    DWORD PTR [rax]
   14005af1f:	add    bh,bh
   14005af21:	(bad)  
   14005af22:	(bad)  
   14005af23:	(bad)  
   14005af24:	(bad)  
   14005af25:	inc    DWORD PTR [rax]
   14005af27:	add    bh,bh
   14005af29:	(bad)  
   14005af2a:	(bad)  
   14005af2b:	(bad)  
   14005af2c:	(bad)  
   14005af2d:	inc    DWORD PTR [rax]
   14005af2f:	add    BYTE PTR [rax],ch
   14005af31:	add    BYTE PTR [rax],al
   14005af33:	add    BYTE PTR [rax],ch
   14005af35:	add    BYTE PTR [rax],al
   14005af37:	add    BYTE PTR [rax+0x0],dl
   14005af3a:	add    BYTE PTR [rax],al
   14005af3c:	add    DWORD PTR [rax],eax
   14005af3e:	and    BYTE PTR [rax],al
   14005af40:	add    BYTE PTR [rax],al
   14005af42:	add    BYTE PTR [rax],al
   14005af44:	sbb    al,BYTE PTR [rax]
	...
   14005b3bb:	sbb    BYTE PTR [rax],al
   14005b3bd:	add    BYTE PTR [rax],al
   14005b3bf:	(bad)  
   14005b3c0:	add    BYTE PTR [rax],al
   14005b3c2:	add    BYTE PTR [rax-0x80000000],al
   14005b3c8:	add    BYTE PTR [rax],al
   14005b3ca:	add    BYTE PTR [rax-0x80000000],al
   14005b3d0:	add    BYTE PTR [rax],al
   14005b3d2:	add    BYTE PTR [rax-0x80000000],al
   14005b3d8:	add    BYTE PTR [rax],al
   14005b3da:	add    BYTE PTR [rax-0x80000000],al
   14005b3e0:	add    BYTE PTR [rax],al
   14005b3e2:	add    BYTE PTR [rax-0x80000000],al
   14005b3e8:	add    BYTE PTR [rax],al
   14005b3ea:	add    BYTE PTR [rax-0x80000000],al
   14005b3f0:	add    BYTE PTR [rax],al
   14005b3f2:	add    BYTE PTR [rax-0x80000000],al
   14005b3f8:	add    BYTE PTR [rax],al
   14005b3fa:	add    BYTE PTR [rax-0x80000000],al
   14005b400:	add    BYTE PTR [rax],al
   14005b402:	add    BYTE PTR [rax-0x80000000],al
   14005b408:	add    BYTE PTR [rax],al
   14005b40a:	add    BYTE PTR [rax-0x80000000],al
   14005b410:	add    BYTE PTR [rax],al
   14005b412:	add    BYTE PTR [rax-0x80000000],al
   14005b418:	add    BYTE PTR [rax],al
   14005b41a:	add    BYTE PTR [rax-0x80000000],al
   14005b420:	add    BYTE PTR [rax],al
   14005b422:	add    BYTE PTR [rax-0x80000000],al
   14005b428:	add    BYTE PTR [rax],al
   14005b42a:	add    BYTE PTR [rax-0x80000000],al
   14005b430:	add    BYTE PTR [rax],al
   14005b432:	add    BYTE PTR [rax-0x80000000],al
   14005b438:	add    BYTE PTR [rax],al
   14005b43a:	add    BYTE PTR [rax-0x80000000],al
   14005b440:	add    BYTE PTR [rax],al
   14005b442:	add    BYTE PTR [rax-0x80000000],al
   14005b448:	add    BYTE PTR [rax],al
   14005b44a:	add    BYTE PTR [rax+0x68000000],al
   14005b450:	add    BYTE PTR [rax],al
   14005b452:	add    BYTE PTR [rax],bl
   14005b454:	add    BYTE PTR [rax],al
   14005b456:	add    BYTE PTR [rax],al
   14005b458:	add    BYTE PTR [rax],al
   14005b45a:	add    BYTE PTR [rax-0x3c],ch
   14005b45d:	(bad)  
   14005b45e:	(bad)  
   14005b45f:	iret   
   14005b460:	(bad)  
   14005b461:	(bad)  
   14005b462:	(bad)  
   14005b463:	(bad)  
   14005b464:	(bad)  
   14005b465:	(bad)  
   14005b466:	(bad)  
   14005b467:	(bad)  
   14005b468:	(bad)  
   14005b469:	(bad)  
   14005b46a:	(bad)  
   14005b46b:	(bad)  
   14005b46c:	(bad)  
   14005b46d:	(bad)  
   14005b46e:	(bad)  
   14005b46f:	(bad)  
   14005b470:	(bad)  
   14005b471:	(bad)  
   14005b472:	(bad)  
   14005b473:	(bad)  
   14005b474:	(bad)  
   14005b475:	(bad)  
   14005b476:	(bad)  
   14005b477:	(bad)  
   14005b478:	(bad)  
   14005b479:	(bad)  
   14005b47a:	(bad)  
   14005b47b:	(bad)  
   14005b47c:	(bad)  
   14005b47d:	(bad)  
   14005b47e:	(bad)  
   14005b47f:	(bad)  
   14005b480:	(bad)  
   14005b481:	(bad)  
   14005b482:	(bad)  
   14005b483:	(bad)  
   14005b484:	(bad)  
   14005b485:	(bad)  
   14005b486:	(bad)  
   14005b487:	(bad)  
   14005b488:	(bad)  
   14005b489:	(bad)  
   14005b48a:	(bad)  
   14005b48b:	(bad)  
   14005b48c:	(bad)  
   14005b48d:	(bad)  
   14005b48e:	(bad)  
   14005b48f:	(bad)  
   14005b490:	(bad)  
   14005b491:	(bad)  
   14005b492:	(bad)  
   14005b493:	(bad)  
   14005b494:	(bad)  
   14005b495:	(bad)  
   14005b496:	(bad)  
   14005b497:	(bad)  
   14005b498:	(bad)  
   14005b499:	(bad)  
   14005b49a:	(bad)  
   14005b49b:	(bad)  
   14005b49c:	(bad)  
   14005b49d:	(bad)  
   14005b49e:	(bad)  
   14005b49f:	(bad)  
   14005b4a0:	(bad)  
   14005b4a1:	(bad)  
   14005b4a2:	(bad)  
   14005b4a3:	(bad)  
   14005b4a4:	(bad)  
   14005b4a5:	(bad)  
   14005b4a6:	(bad)  
   14005b4a7:	(bad)  
   14005b4a8:	(bad)  
   14005b4a9:	(bad)  
   14005b4aa:	(bad)  
   14005b4ab:	(bad)  
   14005b4ac:	(bad)  
   14005b4ad:	(bad)  
   14005b4ae:	(bad)  
   14005b4af:	(bad)  
   14005b4b0:	(bad)  
   14005b4b1:	(bad)  
   14005b4b2:	(bad)  
   14005b4b3:	(bad)  
   14005b4b4:	(bad)  
   14005b4b5:	(bad)  
   14005b4b6:	(bad)  
   14005b4b7:	(bad)  
   14005b4b8:	(bad)  
   14005b4b9:	(bad)  
   14005b4ba:	(bad)  
   14005b4bb:	(bad)  
   14005b4bc:	(bad)  
   14005b4bd:	(bad)  
   14005b4be:	(bad)  
   14005b4bf:	(bad)  
   14005b4c0:	(bad)  
   14005b4c1:	(bad)  
   14005b4c2:	(bad)  
   14005b4c3:	(bad)  
   14005b4c4:	(bad)  
   14005b4c5:	(bad)  
   14005b4c6:	(bad)  
   14005b4c7:	(bad)  
   14005b4c8:	(bad)  
   14005b4c9:	(bad)  
   14005b4ca:	(bad)  
   14005b4cb:	(bad)  
   14005b4cc:	(bad)  
   14005b4cd:	(bad)  
   14005b4ce:	(bad)  
   14005b4cf:	(bad)  
   14005b4d0:	(bad)  
   14005b4d1:	(bad)  
   14005b4d2:	(bad)  
   14005b4d3:	(bad)  
   14005b4d4:	(bad)  
   14005b4d5:	(bad)  
   14005b4d6:	(bad)  
   14005b4d7:	(bad)  
   14005b4d8:	(bad)  
   14005b4d9:	(bad)  
   14005b4da:	(bad)  
   14005b4db:	(bad)  
   14005b4dc:	(bad)  
   14005b4dd:	(bad)  
   14005b4de:	(bad)  
   14005b4df:	(bad)  
   14005b4e0:	(bad)  
   14005b4e1:	(bad)  
   14005b4e2:	(bad)  
   14005b4e3:	(bad)  
   14005b4e4:	(bad)  
   14005b4e5:	(bad)  
   14005b4e6:	(bad)  
   14005b4e7:	(bad)  
   14005b4e8:	(bad)  
   14005b4e9:	(bad)  
   14005b4ea:	(bad)  
   14005b4eb:	inc    esp
   14005b4ed:	(bad)  
   14005b4ee:	(bad)  
   14005b4ef:	iret   
   14005b4f0:	add    BYTE PTR [rax],al
   14005b4f2:	add    BYTE PTR [rax+0x0],ah
   14005b4f5:	add    BYTE PTR [rax],al
   14005b4f7:	add    BYTE PTR [rax],al
   14005b4f9:	add    BYTE PTR [rax],al
   14005b4fb:	cmp    bh,0xff
   14005b4fe:	(bad)  
   14005b4ff:	(bad)  
   14005b500:	(bad)  
   14005b501:	(bad)  
   14005b502:	(bad)  
   14005b503:	(bad)  
   14005b504:	(bad)  
   14005b505:	(bad)  
   14005b506:	(bad)  
   14005b507:	(bad)  
   14005b508:	(bad)  
   14005b509:	(bad)  
   14005b50a:	(bad)  
   14005b50b:	(bad)  
   14005b50c:	(bad)  
   14005b50d:	(bad)  
   14005b50e:	(bad)  
   14005b50f:	(bad)  
   14005b510:	(bad)  
   14005b511:	(bad)  
   14005b512:	(bad)  
   14005b513:	(bad)  
   14005b514:	(bad)  
   14005b515:	(bad)  
   14005b516:	(bad)  
   14005b517:	(bad)  
   14005b518:	(bad)  
   14005b519:	(bad)  
   14005b51a:	(bad)  
   14005b51b:	(bad)  
   14005b51c:	(bad)  
   14005b51d:	(bad)  
   14005b51e:	(bad)  
   14005b51f:	(bad)  
   14005b520:	(bad)  
   14005b521:	(bad)  
   14005b522:	(bad)  
   14005b523:	(bad)  
   14005b524:	(bad)  
   14005b525:	(bad)  
   14005b526:	(bad)  
   14005b527:	(bad)  
   14005b528:	(bad)  
   14005b529:	(bad)  
   14005b52a:	(bad)  
   14005b52b:	(bad)  
   14005b52c:	(bad)  
   14005b52d:	(bad)  
   14005b52e:	(bad)  
   14005b52f:	(bad)  
   14005b530:	(bad)  
   14005b531:	(bad)  
   14005b532:	(bad)  
   14005b533:	(bad)  
   14005b534:	(bad)  
   14005b535:	(bad)  
   14005b536:	(bad)  
   14005b537:	(bad)  
   14005b538:	(bad)  
   14005b539:	(bad)  
   14005b53a:	(bad)  
   14005b53b:	(bad)  
   14005b53c:	(bad)  
   14005b53d:	(bad)  
   14005b53e:	(bad)  
   14005b53f:	(bad)  
   14005b540:	(bad)  
   14005b541:	(bad)  
   14005b542:	(bad)  
   14005b543:	(bad)  
   14005b544:	(bad)  
   14005b545:	(bad)  
   14005b546:	(bad)  
   14005b547:	(bad)  
   14005b548:	(bad)  
   14005b549:	(bad)  
   14005b54a:	(bad)  
   14005b54b:	(bad)  
   14005b54c:	(bad)  
   14005b54d:	(bad)  
   14005b54e:	(bad)  
   14005b54f:	(bad)  
   14005b550:	(bad)  
   14005b551:	(bad)  
   14005b552:	(bad)  
   14005b553:	(bad)  
   14005b554:	(bad)  
   14005b555:	(bad)  
   14005b556:	(bad)  
   14005b557:	(bad)  
   14005b558:	(bad)  
   14005b559:	(bad)  
   14005b55a:	(bad)  
   14005b55b:	(bad)  
   14005b55c:	(bad)  
   14005b55d:	(bad)  
   14005b55e:	(bad)  
   14005b55f:	(bad)  
   14005b560:	(bad)  
   14005b561:	(bad)  
   14005b562:	(bad)  
   14005b563:	(bad)  
   14005b564:	(bad)  
   14005b565:	(bad)  
   14005b566:	(bad)  
   14005b567:	(bad)  
   14005b568:	(bad)  
   14005b569:	(bad)  
   14005b56a:	(bad)  
   14005b56b:	(bad)  
   14005b56c:	(bad)  
   14005b56d:	(bad)  
   14005b56e:	(bad)  
   14005b56f:	(bad)  
   14005b570:	(bad)  
   14005b571:	(bad)  
   14005b572:	(bad)  
   14005b573:	(bad)  
   14005b574:	(bad)  
   14005b575:	(bad)  
   14005b576:	(bad)  
   14005b577:	(bad)  
   14005b578:	(bad)  
   14005b579:	(bad)  
   14005b57a:	(bad)  
   14005b57b:	(bad)  
   14005b57c:	(bad)  
   14005b57d:	(bad)  
   14005b57e:	(bad)  
   14005b57f:	(bad)  
   14005b580:	(bad)  
   14005b581:	(bad)  
   14005b582:	(bad)  
   14005b583:	(bad)  
   14005b584:	(bad)  
   14005b585:	(bad)  
   14005b586:	(bad)  
   14005b587:	(bad)  
   14005b588:	(bad)  
   14005b589:	(bad)  
   14005b58a:	(bad)  
   14005b58b:	(bad)  
   14005b58c:	(bad)  
   14005b58d:	(bad)  
   14005b58e:	(bad)  
   14005b58f:	inc    DWORD PTR [rax]
   14005b591:	add    BYTE PTR [rax],al
   14005b593:	add    BYTE PTR [rax],0x0
   14005b596:	add    BYTE PTR [rax],al
   14005b598:	add    BYTE PTR [rax],al
   14005b59a:	add    BYTE PTR [rax-0x1],al
   14005b5a0:	(bad)  
   14005b5a1:	(bad)  
   14005b5a2:	(bad)  
   14005b5a3:	(bad)  
   14005b5a4:	(bad)  
   14005b5a5:	(bad)  
   14005b5a6:	(bad)  
   14005b5a7:	(bad)  
   14005b5a8:	(bad)  
   14005b5a9:	(bad)  
   14005b5aa:	(bad)  
   14005b5ab:	(bad)  
   14005b5ac:	(bad)  
   14005b5ad:	(bad)  
   14005b5ae:	(bad)  
   14005b5af:	(bad)  
   14005b5b0:	(bad)  
   14005b5b1:	(bad)  
   14005b5b2:	(bad)  
   14005b5b3:	(bad)  
   14005b5b4:	(bad)  
   14005b5b5:	(bad)  
   14005b5b6:	(bad)  
   14005b5b7:	(bad)  
   14005b5b8:	(bad)  
   14005b5b9:	(bad)  
   14005b5ba:	(bad)  
   14005b5bb:	(bad)  
   14005b5bc:	(bad)  
   14005b5bd:	(bad)  
   14005b5be:	(bad)  
   14005b5bf:	(bad)  
   14005b5c0:	(bad)  
   14005b5c1:	(bad)  
   14005b5c2:	(bad)  
   14005b5c3:	(bad)  
   14005b5c4:	(bad)  
   14005b5c5:	(bad)  
   14005b5c6:	(bad)  
   14005b5c7:	(bad)  
   14005b5c8:	(bad)  
   14005b5c9:	(bad)  
   14005b5ca:	(bad)  
   14005b5cb:	(bad)  
   14005b5cc:	(bad)  
   14005b5cd:	(bad)  
   14005b5ce:	(bad)  
   14005b5cf:	(bad)  
   14005b5d0:	(bad)  
   14005b5d1:	(bad)  
   14005b5d2:	(bad)  
   14005b5d3:	(bad)  
   14005b5d4:	(bad)  
   14005b5d5:	(bad)  
   14005b5d6:	(bad)  
   14005b5d7:	(bad)  
   14005b5d8:	(bad)  
   14005b5d9:	(bad)  
   14005b5da:	(bad)  
   14005b5db:	(bad)  
   14005b5dc:	(bad)  
   14005b5dd:	(bad)  
   14005b5de:	(bad)  
   14005b5df:	(bad)  
   14005b5e0:	(bad)  
   14005b5e1:	(bad)  
   14005b5e2:	(bad)  
   14005b5e3:	(bad)  
   14005b5e4:	(bad)  
   14005b5e5:	(bad)  
   14005b5e6:	(bad)  
   14005b5e7:	(bad)  
   14005b5e8:	(bad)  
   14005b5e9:	(bad)  
   14005b5ea:	(bad)  
   14005b5eb:	(bad)  
   14005b5ec:	(bad)  
   14005b5ed:	(bad)  
   14005b5ee:	(bad)  
   14005b5ef:	(bad)  
   14005b5f0:	(bad)  
   14005b5f1:	(bad)  
   14005b5f2:	(bad)  
   14005b5f3:	(bad)  
   14005b5f4:	(bad)  
   14005b5f5:	(bad)  
   14005b5f6:	(bad)  
   14005b5f7:	(bad)  
   14005b5f8:	(bad)  
   14005b5f9:	(bad)  
   14005b5fa:	(bad)  
   14005b5fb:	(bad)  
   14005b5fc:	(bad)  
   14005b5fd:	(bad)  
   14005b5fe:	(bad)  
   14005b5ff:	(bad)  
   14005b600:	(bad)  
   14005b601:	(bad)  
   14005b602:	(bad)  
   14005b603:	(bad)  
   14005b604:	(bad)  
   14005b605:	(bad)  
   14005b606:	(bad)  
   14005b607:	(bad)  
   14005b608:	(bad)  
   14005b609:	(bad)  
   14005b60a:	(bad)  
   14005b60b:	(bad)  
   14005b60c:	(bad)  
   14005b60d:	(bad)  
   14005b60e:	(bad)  
   14005b60f:	(bad)  
   14005b610:	(bad)  
   14005b611:	(bad)  
   14005b612:	(bad)  
   14005b613:	(bad)  
   14005b614:	(bad)  
   14005b615:	(bad)  
   14005b616:	(bad)  
   14005b617:	(bad)  
   14005b618:	(bad)  
   14005b619:	(bad)  
   14005b61a:	(bad)  
   14005b61b:	(bad)  
   14005b61c:	(bad)  
   14005b61d:	(bad)  
   14005b61e:	(bad)  
   14005b61f:	(bad)  
   14005b620:	(bad)  
   14005b621:	(bad)  
   14005b622:	(bad)  
   14005b623:	(bad)  
   14005b624:	(bad)  
   14005b625:	(bad)  
   14005b626:	(bad)  
   14005b627:	(bad)  
   14005b628:	(bad)  
   14005b629:	(bad)  
   14005b62a:	(bad)  
   14005b62b:	(bad)  
   14005b62c:	(bad)  
   14005b62d:	(bad)  
   14005b62e:	(bad)  
   14005b62f:	inc    DWORD PTR [rax]
   14005b631:	add    BYTE PTR [rax],al
   14005b633:	add    BYTE PTR [rax],0x0
   14005b636:	add    BYTE PTR [rax],al
   14005b638:	add    BYTE PTR [rax],al
   14005b63a:	add    BYTE PTR [rax-0x1],al
   14005b640:	(bad)  
   14005b641:	(bad)  
   14005b642:	(bad)  
   14005b643:	(bad)  
   14005b644:	(bad)  
   14005b645:	(bad)  
   14005b646:	(bad)  
   14005b647:	inc    DWORD PTR [rax]
   14005b649:	add    BYTE PTR [rax],al
   14005b64b:	add    BYTE PTR [rax],0x0
   14005b64e:	add    BYTE PTR [rax-0x80000000],al
   14005b654:	add    BYTE PTR [rax],al
   14005b656:	add    BYTE PTR [rax-0x80000000],al
   14005b65c:	add    BYTE PTR [rax],al
   14005b65e:	add    BYTE PTR [rax-0x80000000],al
   14005b664:	add    BYTE PTR [rax],al
   14005b666:	add    BYTE PTR [rax-0x80000000],al
   14005b66c:	add    BYTE PTR [rax],al
   14005b66e:	add    BYTE PTR [rax-0x80000000],al
   14005b674:	add    BYTE PTR [rax],al
   14005b676:	add    BYTE PTR [rax-0x80000000],al
   14005b67c:	add    BYTE PTR [rax],al
   14005b67e:	add    BYTE PTR [rax-0x80000000],al
   14005b684:	add    BYTE PTR [rax],al
   14005b686:	add    BYTE PTR [rax-0x80000000],al
   14005b68c:	add    BYTE PTR [rax],al
   14005b68e:	add    BYTE PTR [rax-0x80000000],al
   14005b694:	add    BYTE PTR [rax],al
   14005b696:	add    BYTE PTR [rax-0x80000000],al
   14005b69c:	add    BYTE PTR [rax],al
   14005b69e:	add    BYTE PTR [rax-0x80000000],al
   14005b6a4:	add    BYTE PTR [rax],al
   14005b6a6:	add    BYTE PTR [rax-0x80000000],al
   14005b6ac:	add    BYTE PTR [rax],al
   14005b6ae:	add    BYTE PTR [rax-0x80000000],al
   14005b6b4:	add    BYTE PTR [rax],al
   14005b6b6:	add    BYTE PTR [rax-0x80000000],al
   14005b6bc:	add    BYTE PTR [rax],al
   14005b6be:	add    BYTE PTR [rax-0x80000000],al
   14005b6c4:	(bad)  
   14005b6c5:	(bad)  
   14005b6c6:	(bad)  
   14005b6c7:	(bad)  
   14005b6c8:	(bad)  
   14005b6c9:	(bad)  
   14005b6ca:	(bad)  
   14005b6cb:	(bad)  
   14005b6cc:	(bad)  
   14005b6cd:	(bad)  
   14005b6ce:	(bad)  
   14005b6cf:	inc    DWORD PTR [rax]
   14005b6d1:	add    BYTE PTR [rax],al
   14005b6d3:	add    BYTE PTR [rax],0x0
   14005b6d6:	add    BYTE PTR [rax],al
   14005b6d8:	add    BYTE PTR [rax],al
   14005b6da:	add    BYTE PTR [rax-0x1],al
   14005b6e0:	(bad)  
   14005b6e1:	(bad)  
   14005b6e2:	(bad)  
   14005b6e3:	(bad)  
   14005b6e4:	(bad)  
   14005b6e5:	(bad)  
   14005b6e6:	(bad)  
   14005b6e7:	inc    DWORD PTR [rax]
   14005b6e9:	add    BYTE PTR [rax],al
   14005b6eb:	cmp    bh,0xff
   14005b6ee:	(bad)  
   14005b6ef:	(bad)  
   14005b6f0:	(bad)  
   14005b6f1:	(bad)  
   14005b6f2:	(bad)  
   14005b6f3:	(bad)  
   14005b6f4:	(bad)  
   14005b6f5:	(bad)  
   14005b6f6:	(bad)  
   14005b6f7:	(bad)  
   14005b6f8:	(bad)  
   14005b6f9:	(bad)  
   14005b6fa:	(bad)  
   14005b6fb:	(bad)  
   14005b6fc:	(bad)  
   14005b6fd:	(bad)  
   14005b6fe:	(bad)  
   14005b6ff:	(bad)  
   14005b700:	(bad)  
   14005b701:	(bad)  
   14005b702:	(bad)  
   14005b703:	inc    DWORD PTR [rax]
   14005b705:	add    BYTE PTR [rax],al
   14005b707:	cmp    bh,0xff
   14005b70a:	(bad)  
   14005b70b:	(bad)  
   14005b70c:	(bad)  
   14005b70d:	(bad)  
   14005b70e:	(bad)  
   14005b70f:	(bad)  
   14005b710:	(bad)  
   14005b711:	(bad)  
   14005b712:	(bad)  
   14005b713:	(bad)  
   14005b714:	(bad)  
   14005b715:	(bad)  
   14005b716:	(bad)  
   14005b717:	(bad)  
   14005b718:	(bad)  
   14005b719:	(bad)  
   14005b71a:	(bad)  
   14005b71b:	(bad)  
   14005b71c:	(bad)  
   14005b71d:	(bad)  
   14005b71e:	(bad)  
   14005b71f:	(bad)  
   14005b720:	(bad)  
   14005b721:	(bad)  
   14005b722:	(bad)  
   14005b723:	(bad)  
   14005b724:	(bad)  
   14005b725:	(bad)  
   14005b726:	(bad)  
   14005b727:	(bad)  
   14005b728:	(bad)  
   14005b729:	(bad)  
   14005b72a:	(bad)  
   14005b72b:	(bad)  
   14005b72c:	(bad)  
   14005b72d:	(bad)  
   14005b72e:	(bad)  
   14005b72f:	(bad)  
   14005b730:	(bad)  
   14005b731:	(bad)  
   14005b732:	(bad)  
   14005b733:	(bad)  
   14005b734:	(bad)  
   14005b735:	(bad)  
   14005b736:	(bad)  
   14005b737:	(bad)  
   14005b738:	(bad)  
   14005b739:	(bad)  
   14005b73a:	(bad)  
   14005b73b:	(bad)  
   14005b73c:	(bad)  
   14005b73d:	(bad)  
   14005b73e:	(bad)  
   14005b73f:	(bad)  
   14005b740:	(bad)  
   14005b741:	(bad)  
   14005b742:	(bad)  
   14005b743:	inc    DWORD PTR [rax]
   14005b745:	add    BYTE PTR [rax],al
   14005b747:	cmp    bh,0xff
   14005b74a:	(bad)  
   14005b74b:	(bad)  
   14005b74c:	(bad)  
   14005b74d:	(bad)  
   14005b74e:	(bad)  
   14005b74f:	(bad)  
   14005b750:	(bad)  
   14005b751:	(bad)  
   14005b752:	(bad)  
   14005b753:	(bad)  
   14005b754:	(bad)  
   14005b755:	(bad)  
   14005b756:	(bad)  
   14005b757:	(bad)  
   14005b758:	(bad)  
   14005b759:	(bad)  
   14005b75a:	(bad)  
   14005b75b:	(bad)  
   14005b75c:	(bad)  
   14005b75d:	(bad)  
   14005b75e:	(bad)  
   14005b75f:	inc    DWORD PTR [rax]
   14005b761:	add    BYTE PTR [rax],al
   14005b763:	cmp    bh,0xff
   14005b766:	(bad)  
   14005b767:	(bad)  
   14005b768:	(bad)  
   14005b769:	(bad)  
   14005b76a:	(bad)  
   14005b76b:	(bad)  
   14005b76c:	(bad)  
   14005b76d:	(bad)  
   14005b76e:	(bad)  
   14005b76f:	inc    DWORD PTR [rax]
   14005b771:	add    BYTE PTR [rax],al
   14005b773:	add    BYTE PTR [rax],0x0
   14005b776:	add    BYTE PTR [rax],al
   14005b778:	add    BYTE PTR [rax],al
   14005b77a:	add    BYTE PTR [rax-0x1],al
   14005b780:	(bad)  
   14005b781:	(bad)  
   14005b782:	(bad)  
   14005b783:	(bad)  
   14005b784:	(bad)  
   14005b785:	(bad)  
   14005b786:	(bad)  
   14005b787:	inc    DWORD PTR [rax]
   14005b789:	add    BYTE PTR [rax],al
   14005b78b:	cmp    bh,0xff
   14005b78e:	(bad)  
   14005b78f:	(bad)  
   14005b790:	(bad)  
   14005b791:	(bad)  
   14005b792:	(bad)  
   14005b793:	(bad)  
   14005b794:	(bad)  
   14005b795:	(bad)  
   14005b796:	(bad)  
   14005b797:	(bad)  
   14005b798:	(bad)  
   14005b799:	(bad)  
   14005b79a:	(bad)  
   14005b79b:	(bad)  
   14005b79c:	(bad)  
   14005b79d:	(bad)  
   14005b79e:	(bad)  
   14005b79f:	(bad)  
   14005b7a0:	(bad)  
   14005b7a1:	(bad)  
   14005b7a2:	(bad)  
   14005b7a3:	inc    DWORD PTR [rax]
   14005b7a5:	add    BYTE PTR [rax],al
   14005b7a7:	cmp    bh,0xff
   14005b7aa:	(bad)  
   14005b7ab:	(bad)  
   14005b7ac:	(bad)  
   14005b7ad:	(bad)  
   14005b7ae:	(bad)  
   14005b7af:	(bad)  
   14005b7b0:	(bad)  
   14005b7b1:	(bad)  
   14005b7b2:	(bad)  
   14005b7b3:	(bad)  
   14005b7b4:	(bad)  
   14005b7b5:	(bad)  
   14005b7b6:	(bad)  
   14005b7b7:	(bad)  
   14005b7b8:	(bad)  
   14005b7b9:	(bad)  
   14005b7ba:	(bad)  
   14005b7bb:	(bad)  
   14005b7bc:	(bad)  
   14005b7bd:	(bad)  
   14005b7be:	(bad)  
   14005b7bf:	(bad)  
   14005b7c0:	(bad)  
   14005b7c1:	(bad)  
   14005b7c2:	(bad)  
   14005b7c3:	(bad)  
   14005b7c4:	(bad)  
   14005b7c5:	(bad)  
   14005b7c6:	(bad)  
   14005b7c7:	(bad)  
   14005b7c8:	(bad)  
   14005b7c9:	(bad)  
   14005b7ca:	(bad)  
   14005b7cb:	(bad)  
   14005b7cc:	(bad)  
   14005b7cd:	(bad)  
   14005b7ce:	(bad)  
   14005b7cf:	(bad)  
   14005b7d0:	(bad)  
   14005b7d1:	(bad)  
   14005b7d2:	(bad)  
   14005b7d3:	(bad)  
   14005b7d4:	(bad)  
   14005b7d5:	(bad)  
   14005b7d6:	(bad)  
   14005b7d7:	(bad)  
   14005b7d8:	(bad)  
   14005b7d9:	(bad)  
   14005b7da:	(bad)  
   14005b7db:	(bad)  
   14005b7dc:	(bad)  
   14005b7dd:	(bad)  
   14005b7de:	(bad)  
   14005b7df:	(bad)  
   14005b7e0:	(bad)  
   14005b7e1:	(bad)  
   14005b7e2:	(bad)  
   14005b7e3:	inc    DWORD PTR [rax]
   14005b7e5:	add    BYTE PTR [rax],al
   14005b7e7:	cmp    bh,0xff
   14005b7ea:	(bad)  
   14005b7eb:	(bad)  
   14005b7ec:	(bad)  
   14005b7ed:	(bad)  
   14005b7ee:	(bad)  
   14005b7ef:	(bad)  
   14005b7f0:	(bad)  
   14005b7f1:	(bad)  
   14005b7f2:	(bad)  
   14005b7f3:	(bad)  
   14005b7f4:	(bad)  
   14005b7f5:	(bad)  
   14005b7f6:	(bad)  
   14005b7f7:	(bad)  
   14005b7f8:	(bad)  
   14005b7f9:	(bad)  
   14005b7fa:	(bad)  
   14005b7fb:	(bad)  
   14005b7fc:	(bad)  
   14005b7fd:	(bad)  
   14005b7fe:	(bad)  
   14005b7ff:	inc    DWORD PTR [rax]
   14005b801:	add    BYTE PTR [rax],al
   14005b803:	cmp    bh,0xff
   14005b806:	(bad)  
   14005b807:	(bad)  
   14005b808:	(bad)  
   14005b809:	(bad)  
   14005b80a:	(bad)  
   14005b80b:	(bad)  
   14005b80c:	(bad)  
   14005b80d:	(bad)  
   14005b80e:	(bad)  
   14005b80f:	inc    DWORD PTR [rax]
   14005b811:	add    BYTE PTR [rax],al
   14005b813:	add    BYTE PTR [rax],0x0
   14005b816:	add    BYTE PTR [rax],al
   14005b818:	add    BYTE PTR [rax],al
   14005b81a:	add    BYTE PTR [rax-0x1],al
   14005b820:	(bad)  
   14005b821:	(bad)  
   14005b822:	(bad)  
   14005b823:	(bad)  
   14005b824:	(bad)  
   14005b825:	(bad)  
   14005b826:	(bad)  
   14005b827:	inc    DWORD PTR [rax]
   14005b829:	add    BYTE PTR [rax],al
   14005b82b:	cmp    bh,0xff
   14005b82e:	(bad)  
   14005b82f:	(bad)  
   14005b830:	(bad)  
   14005b831:	(bad)  
   14005b832:	(bad)  
   14005b833:	(bad)  
   14005b834:	(bad)  
   14005b835:	(bad)  
   14005b836:	(bad)  
   14005b837:	(bad)  
   14005b838:	(bad)  
   14005b839:	(bad)  
   14005b83a:	(bad)  
   14005b83b:	(bad)  
   14005b83c:	(bad)  
   14005b83d:	(bad)  
   14005b83e:	(bad)  
   14005b83f:	(bad)  
   14005b840:	(bad)  
   14005b841:	(bad)  
   14005b842:	(bad)  
   14005b843:	inc    DWORD PTR [rax]
   14005b845:	add    BYTE PTR [rax],al
   14005b847:	cmp    bh,0xff
   14005b84a:	(bad)  
   14005b84b:	(bad)  
   14005b84c:	(bad)  
   14005b84d:	(bad)  
   14005b84e:	(bad)  
   14005b84f:	(bad)  
   14005b850:	(bad)  
   14005b851:	(bad)  
   14005b852:	(bad)  
   14005b853:	(bad)  
   14005b854:	(bad)  
   14005b855:	(bad)  
   14005b856:	(bad)  
   14005b857:	(bad)  
   14005b858:	(bad)  
   14005b859:	(bad)  
   14005b85a:	(bad)  
   14005b85b:	(bad)  
   14005b85c:	(bad)  
   14005b85d:	(bad)  
   14005b85e:	(bad)  
   14005b85f:	(bad)  
   14005b860:	(bad)  
   14005b861:	(bad)  
   14005b862:	(bad)  
   14005b863:	(bad)  
   14005b864:	(bad)  
   14005b865:	(bad)  
   14005b866:	(bad)  
   14005b867:	(bad)  
   14005b868:	(bad)  
   14005b869:	(bad)  
   14005b86a:	(bad)  
   14005b86b:	(bad)  
   14005b86c:	(bad)  
   14005b86d:	(bad)  
   14005b86e:	(bad)  
   14005b86f:	(bad)  
   14005b870:	(bad)  
   14005b871:	(bad)  
   14005b872:	(bad)  
   14005b873:	(bad)  
   14005b874:	(bad)  
   14005b875:	(bad)  
   14005b876:	(bad)  
   14005b877:	(bad)  
   14005b878:	(bad)  
   14005b879:	(bad)  
   14005b87a:	(bad)  
   14005b87b:	(bad)  
   14005b87c:	(bad)  
   14005b87d:	(bad)  
   14005b87e:	(bad)  
   14005b87f:	(bad)  
   14005b880:	(bad)  
   14005b881:	(bad)  
   14005b882:	(bad)  
   14005b883:	inc    DWORD PTR [rax]
   14005b885:	add    BYTE PTR [rax],al
   14005b887:	cmp    bh,0xff
   14005b88a:	(bad)  
   14005b88b:	(bad)  
   14005b88c:	(bad)  
   14005b88d:	(bad)  
   14005b88e:	(bad)  
   14005b88f:	(bad)  
   14005b890:	(bad)  
   14005b891:	(bad)  
   14005b892:	(bad)  
   14005b893:	(bad)  
   14005b894:	(bad)  
   14005b895:	(bad)  
   14005b896:	(bad)  
   14005b897:	(bad)  
   14005b898:	(bad)  
   14005b899:	(bad)  
   14005b89a:	(bad)  
   14005b89b:	(bad)  
   14005b89c:	(bad)  
   14005b89d:	(bad)  
   14005b89e:	(bad)  
   14005b89f:	inc    DWORD PTR [rax]
   14005b8a1:	add    BYTE PTR [rax],al
   14005b8a3:	cmp    bh,0xff
   14005b8a6:	(bad)  
   14005b8a7:	(bad)  
   14005b8a8:	(bad)  
   14005b8a9:	(bad)  
   14005b8aa:	(bad)  
   14005b8ab:	(bad)  
   14005b8ac:	(bad)  
   14005b8ad:	(bad)  
   14005b8ae:	(bad)  
   14005b8af:	inc    DWORD PTR [rax]
   14005b8b1:	add    BYTE PTR [rax],al
   14005b8b3:	add    BYTE PTR [rax],0x0
   14005b8b6:	add    BYTE PTR [rax],al
   14005b8b8:	add    BYTE PTR [rax],al
   14005b8ba:	add    BYTE PTR [rax-0x1],al
   14005b8c0:	(bad)  
   14005b8c1:	(bad)  
   14005b8c2:	(bad)  
   14005b8c3:	(bad)  
   14005b8c4:	(bad)  
   14005b8c5:	(bad)  
   14005b8c6:	(bad)  
   14005b8c7:	inc    DWORD PTR [rax]
   14005b8c9:	add    BYTE PTR [rax],al
   14005b8cb:	cmp    bh,0xff
   14005b8ce:	(bad)  
   14005b8cf:	(bad)  
   14005b8d0:	(bad)  
   14005b8d1:	(bad)  
   14005b8d2:	(bad)  
   14005b8d3:	(bad)  
   14005b8d4:	(bad)  
   14005b8d5:	(bad)  
   14005b8d6:	(bad)  
   14005b8d7:	(bad)  
   14005b8d8:	(bad)  
   14005b8d9:	(bad)  
   14005b8da:	(bad)  
   14005b8db:	(bad)  
   14005b8dc:	(bad)  
   14005b8dd:	(bad)  
   14005b8de:	(bad)  
   14005b8df:	(bad)  
   14005b8e0:	(bad)  
   14005b8e1:	(bad)  
   14005b8e2:	(bad)  
   14005b8e3:	inc    DWORD PTR [rax]
   14005b8e5:	add    BYTE PTR [rax],al
   14005b8e7:	cmp    bh,0xff
   14005b8ea:	(bad)  
   14005b8eb:	(bad)  
   14005b8ec:	(bad)  
   14005b8ed:	(bad)  
   14005b8ee:	(bad)  
   14005b8ef:	(bad)  
   14005b8f0:	(bad)  
   14005b8f1:	(bad)  
   14005b8f2:	(bad)  
   14005b8f3:	(bad)  
   14005b8f4:	(bad)  
   14005b8f5:	(bad)  
   14005b8f6:	(bad)  
   14005b8f7:	(bad)  
   14005b8f8:	(bad)  
   14005b8f9:	(bad)  
   14005b8fa:	(bad)  
   14005b8fb:	(bad)  
   14005b8fc:	(bad)  
   14005b8fd:	(bad)  
   14005b8fe:	(bad)  
   14005b8ff:	(bad)  
   14005b900:	(bad)  
   14005b901:	(bad)  
   14005b902:	(bad)  
   14005b903:	(bad)  
   14005b904:	(bad)  
   14005b905:	(bad)  
   14005b906:	(bad)  
   14005b907:	(bad)  
   14005b908:	(bad)  
   14005b909:	(bad)  
   14005b90a:	(bad)  
   14005b90b:	(bad)  
   14005b90c:	(bad)  
   14005b90d:	(bad)  
   14005b90e:	(bad)  
   14005b90f:	(bad)  
   14005b910:	(bad)  
   14005b911:	(bad)  
   14005b912:	(bad)  
   14005b913:	(bad)  
   14005b914:	(bad)  
   14005b915:	(bad)  
   14005b916:	(bad)  
   14005b917:	(bad)  
   14005b918:	(bad)  
   14005b919:	(bad)  
   14005b91a:	(bad)  
   14005b91b:	(bad)  
   14005b91c:	(bad)  
   14005b91d:	(bad)  
   14005b91e:	(bad)  
   14005b91f:	(bad)  
   14005b920:	(bad)  
   14005b921:	(bad)  
   14005b922:	(bad)  
   14005b923:	inc    DWORD PTR [rax]
   14005b925:	add    BYTE PTR [rax],al
   14005b927:	cmp    bh,0xff
   14005b92a:	(bad)  
   14005b92b:	(bad)  
   14005b92c:	(bad)  
   14005b92d:	(bad)  
   14005b92e:	(bad)  
   14005b92f:	(bad)  
   14005b930:	(bad)  
   14005b931:	(bad)  
   14005b932:	(bad)  
   14005b933:	(bad)  
   14005b934:	(bad)  
   14005b935:	(bad)  
   14005b936:	(bad)  
   14005b937:	(bad)  
   14005b938:	(bad)  
   14005b939:	(bad)  
   14005b93a:	(bad)  
   14005b93b:	(bad)  
   14005b93c:	(bad)  
   14005b93d:	(bad)  
   14005b93e:	(bad)  
   14005b93f:	inc    DWORD PTR [rax]
   14005b941:	add    BYTE PTR [rax],al
   14005b943:	cmp    bh,0xff
   14005b946:	(bad)  
   14005b947:	(bad)  
   14005b948:	(bad)  
   14005b949:	(bad)  
   14005b94a:	(bad)  
   14005b94b:	(bad)  
   14005b94c:	(bad)  
   14005b94d:	(bad)  
   14005b94e:	(bad)  
   14005b94f:	inc    DWORD PTR [rax]
   14005b951:	add    BYTE PTR [rax],al
   14005b953:	add    BYTE PTR [rax],0x0
   14005b956:	add    BYTE PTR [rax],al
   14005b958:	add    BYTE PTR [rax],al
   14005b95a:	add    BYTE PTR [rax-0x1],al
   14005b960:	(bad)  
   14005b961:	(bad)  
   14005b962:	(bad)  
   14005b963:	(bad)  
   14005b964:	(bad)  
   14005b965:	(bad)  
   14005b966:	(bad)  
   14005b967:	inc    DWORD PTR [rax]
   14005b969:	add    BYTE PTR [rax],al
   14005b96b:	add    BYTE PTR [rax],0x0
   14005b96e:	add    BYTE PTR [rax-0x80000000],al
   14005b974:	add    BYTE PTR [rax],al
   14005b976:	add    BYTE PTR [rax-0x80000000],al
   14005b97c:	add    BYTE PTR [rax],al
   14005b97e:	add    BYTE PTR [rax-0x80000000],al
   14005b984:	add    BYTE PTR [rax],al
   14005b986:	add    BYTE PTR [rax-0x80000000],al
   14005b98c:	add    BYTE PTR [rax],al
   14005b98e:	add    BYTE PTR [rax-0x80000000],al
   14005b994:	add    BYTE PTR [rax],al
   14005b996:	add    BYTE PTR [rax-0x80000000],al
   14005b99c:	add    BYTE PTR [rax],al
   14005b99e:	add    BYTE PTR [rax-0x80000000],al
   14005b9a4:	add    BYTE PTR [rax],al
   14005b9a6:	add    BYTE PTR [rax-0x80000000],al
   14005b9ac:	add    BYTE PTR [rax],al
   14005b9ae:	add    BYTE PTR [rax-0x80000000],al
   14005b9b4:	add    BYTE PTR [rax],al
   14005b9b6:	add    BYTE PTR [rax-0x80000000],al
   14005b9bc:	add    BYTE PTR [rax],al
   14005b9be:	add    BYTE PTR [rax-0x80000000],al
   14005b9c4:	add    BYTE PTR [rax],al
   14005b9c6:	add    BYTE PTR [rax-0x80000000],al
   14005b9cc:	add    BYTE PTR [rax],al
   14005b9ce:	add    BYTE PTR [rax-0x80000000],al
   14005b9d4:	add    BYTE PTR [rax],al
   14005b9d6:	add    BYTE PTR [rax-0x80000000],al
   14005b9dc:	add    BYTE PTR [rax],al
   14005b9de:	add    BYTE PTR [rax-0x80000000],al
   14005b9e4:	(bad)  
   14005b9e5:	(bad)  
   14005b9e6:	(bad)  
   14005b9e7:	(bad)  
   14005b9e8:	(bad)  
   14005b9e9:	(bad)  
   14005b9ea:	(bad)  
   14005b9eb:	(bad)  
   14005b9ec:	(bad)  
   14005b9ed:	(bad)  
   14005b9ee:	(bad)  
   14005b9ef:	inc    DWORD PTR [rax]
   14005b9f1:	add    BYTE PTR [rax],al
   14005b9f3:	add    BYTE PTR [rax],0x0
   14005b9f6:	add    BYTE PTR [rax],al
   14005b9f8:	add    BYTE PTR [rax],al
   14005b9fa:	add    BYTE PTR [rax-0x1],al
   14005ba00:	(bad)  
   14005ba01:	(bad)  
   14005ba02:	(bad)  
   14005ba03:	(bad)  
   14005ba04:	(bad)  
   14005ba05:	(bad)  
   14005ba06:	(bad)  
   14005ba07:	inc    DWORD PTR [rax]
   14005ba09:	add    BYTE PTR [rax],al
   14005ba0b:	cmp    bh,0xff
   14005ba0e:	(bad)  
   14005ba0f:	(bad)  
   14005ba10:	(bad)  
   14005ba11:	(bad)  
   14005ba12:	(bad)  
   14005ba13:	(bad)  
   14005ba14:	(bad)  
   14005ba15:	(bad)  
   14005ba16:	(bad)  
   14005ba17:	(bad)  
   14005ba18:	(bad)  
   14005ba19:	(bad)  
   14005ba1a:	(bad)  
   14005ba1b:	inc    DWORD PTR [rax]
   14005ba1d:	add    BYTE PTR [rax],al
   14005ba1f:	cmp    bh,0xff
   14005ba22:	(bad)  
   14005ba23:	(bad)  
   14005ba24:	(bad)  
   14005ba25:	(bad)  
   14005ba26:	(bad)  
   14005ba27:	(bad)  
   14005ba28:	(bad)  
   14005ba29:	(bad)  
   14005ba2a:	(bad)  
   14005ba2b:	(bad)  
   14005ba2c:	(bad)  
   14005ba2d:	(bad)  
   14005ba2e:	(bad)  
   14005ba2f:	inc    DWORD PTR [rax]
   14005ba31:	add    BYTE PTR [rax],al
   14005ba33:	cmp    bh,0xff
   14005ba36:	(bad)  
   14005ba37:	(bad)  
   14005ba38:	(bad)  
   14005ba39:	(bad)  
   14005ba3a:	(bad)  
   14005ba3b:	(bad)  
   14005ba3c:	(bad)  
   14005ba3d:	(bad)  
   14005ba3e:	(bad)  
   14005ba3f:	(bad)  
   14005ba40:	(bad)  
   14005ba41:	(bad)  
   14005ba42:	(bad)  
   14005ba43:	inc    DWORD PTR [rax]
   14005ba45:	add    BYTE PTR [rax],al
   14005ba47:	cmp    bh,0xff
   14005ba4a:	(bad)  
   14005ba4b:	(bad)  
   14005ba4c:	(bad)  
   14005ba4d:	(bad)  
   14005ba4e:	(bad)  
   14005ba4f:	(bad)  
   14005ba50:	(bad)  
   14005ba51:	(bad)  
   14005ba52:	(bad)  
   14005ba53:	(bad)  
   14005ba54:	(bad)  
   14005ba55:	(bad)  
   14005ba56:	(bad)  
   14005ba57:	inc    DWORD PTR [rax]
   14005ba59:	add    BYTE PTR [rax],al
   14005ba5b:	cmp    bh,0xff
   14005ba5e:	(bad)  
   14005ba5f:	(bad)  
   14005ba60:	(bad)  
   14005ba61:	(bad)  
   14005ba62:	(bad)  
   14005ba63:	(bad)  
   14005ba64:	(bad)  
   14005ba65:	(bad)  
   14005ba66:	(bad)  
   14005ba67:	(bad)  
   14005ba68:	(bad)  
   14005ba69:	(bad)  
   14005ba6a:	(bad)  
   14005ba6b:	inc    DWORD PTR [rax]
   14005ba6d:	add    BYTE PTR [rax],al
   14005ba6f:	cmp    bh,0xff
   14005ba72:	(bad)  
   14005ba73:	(bad)  
   14005ba74:	(bad)  
   14005ba75:	(bad)  
   14005ba76:	(bad)  
   14005ba77:	(bad)  
   14005ba78:	(bad)  
   14005ba79:	(bad)  
   14005ba7a:	(bad)  
   14005ba7b:	(bad)  
   14005ba7c:	(bad)  
   14005ba7d:	(bad)  
   14005ba7e:	(bad)  
   14005ba7f:	inc    DWORD PTR [rax]
   14005ba81:	add    BYTE PTR [rax],al
   14005ba83:	cmp    bh,0xff
   14005ba86:	(bad)  
   14005ba87:	(bad)  
   14005ba88:	(bad)  
   14005ba89:	(bad)  
   14005ba8a:	(bad)  
   14005ba8b:	(bad)  
   14005ba8c:	(bad)  
   14005ba8d:	(bad)  
   14005ba8e:	(bad)  
   14005ba8f:	inc    DWORD PTR [rax]
   14005ba91:	add    BYTE PTR [rax],al
   14005ba93:	add    BYTE PTR [rax],0x0
   14005ba96:	add    BYTE PTR [rax],al
   14005ba98:	add    BYTE PTR [rax],al
   14005ba9a:	add    BYTE PTR [rax-0x1],al
   14005baa0:	(bad)  
   14005baa1:	(bad)  
   14005baa2:	(bad)  
   14005baa3:	(bad)  
   14005baa4:	(bad)  
   14005baa5:	(bad)  
   14005baa6:	(bad)  
   14005baa7:	inc    DWORD PTR [rax]
   14005baa9:	add    BYTE PTR [rax],al
   14005baab:	cmp    bh,0xff
   14005baae:	(bad)  
   14005baaf:	(bad)  
   14005bab0:	(bad)  
   14005bab1:	(bad)  
   14005bab2:	(bad)  
   14005bab3:	(bad)  
   14005bab4:	(bad)  
   14005bab5:	(bad)  
   14005bab6:	(bad)  
   14005bab7:	(bad)  
   14005bab8:	(bad)  
   14005bab9:	(bad)  
   14005baba:	(bad)  
   14005babb:	inc    DWORD PTR [rax]
   14005babd:	add    BYTE PTR [rax],al
   14005babf:	cmp    bh,0xff
   14005bac2:	(bad)  
   14005bac3:	(bad)  
   14005bac4:	(bad)  
   14005bac5:	(bad)  
   14005bac6:	(bad)  
   14005bac7:	(bad)  
   14005bac8:	(bad)  
   14005bac9:	(bad)  
   14005baca:	(bad)  
   14005bacb:	(bad)  
   14005bacc:	(bad)  
   14005bacd:	(bad)  
   14005bace:	(bad)  
   14005bacf:	inc    DWORD PTR [rax]
   14005bad1:	add    BYTE PTR [rax],al
   14005bad3:	cmp    bh,0xff
   14005bad6:	(bad)  
   14005bad7:	(bad)  
   14005bad8:	(bad)  
   14005bad9:	(bad)  
   14005bada:	(bad)  
   14005badb:	(bad)  
   14005badc:	(bad)  
   14005badd:	(bad)  
   14005bade:	(bad)  
   14005badf:	(bad)  
   14005bae0:	(bad)  
   14005bae1:	(bad)  
   14005bae2:	(bad)  
   14005bae3:	inc    DWORD PTR [rax]
   14005bae5:	add    BYTE PTR [rax],al
   14005bae7:	cmp    bh,0xff
   14005baea:	(bad)  
   14005baeb:	(bad)  
   14005baec:	(bad)  
   14005baed:	(bad)  
   14005baee:	(bad)  
   14005baef:	(bad)  
   14005baf0:	(bad)  
   14005baf1:	(bad)  
   14005baf2:	(bad)  
   14005baf3:	(bad)  
   14005baf4:	(bad)  
   14005baf5:	(bad)  
   14005baf6:	(bad)  
   14005baf7:	inc    DWORD PTR [rax]
   14005baf9:	add    BYTE PTR [rax],al
   14005bafb:	cmp    bh,0xff
   14005bafe:	(bad)  
   14005baff:	(bad)  
   14005bb00:	(bad)  
   14005bb01:	(bad)  
   14005bb02:	(bad)  
   14005bb03:	(bad)  
   14005bb04:	(bad)  
   14005bb05:	(bad)  
   14005bb06:	(bad)  
   14005bb07:	(bad)  
   14005bb08:	(bad)  
   14005bb09:	(bad)  
   14005bb0a:	(bad)  
   14005bb0b:	inc    DWORD PTR [rax]
   14005bb0d:	add    BYTE PTR [rax],al
   14005bb0f:	cmp    bh,0xff
   14005bb12:	(bad)  
   14005bb13:	(bad)  
   14005bb14:	(bad)  
   14005bb15:	(bad)  
   14005bb16:	(bad)  
   14005bb17:	(bad)  
   14005bb18:	(bad)  
   14005bb19:	(bad)  
   14005bb1a:	(bad)  
   14005bb1b:	(bad)  
   14005bb1c:	(bad)  
   14005bb1d:	(bad)  
   14005bb1e:	(bad)  
   14005bb1f:	inc    DWORD PTR [rax]
   14005bb21:	add    BYTE PTR [rax],al
   14005bb23:	cmp    bh,0xff
   14005bb26:	(bad)  
   14005bb27:	(bad)  
   14005bb28:	(bad)  
   14005bb29:	(bad)  
   14005bb2a:	(bad)  
   14005bb2b:	(bad)  
   14005bb2c:	(bad)  
   14005bb2d:	(bad)  
   14005bb2e:	(bad)  
   14005bb2f:	inc    DWORD PTR [rax]
   14005bb31:	add    BYTE PTR [rax],al
   14005bb33:	add    BYTE PTR [rax],0x0
   14005bb36:	add    BYTE PTR [rax],al
   14005bb38:	add    BYTE PTR [rax],al
   14005bb3a:	add    BYTE PTR [rax-0x1],al
   14005bb40:	(bad)  
   14005bb41:	(bad)  
   14005bb42:	(bad)  
   14005bb43:	(bad)  
   14005bb44:	(bad)  
   14005bb45:	(bad)  
   14005bb46:	(bad)  
   14005bb47:	inc    DWORD PTR [rax]
   14005bb49:	add    BYTE PTR [rax],al
   14005bb4b:	cmp    bh,0xff
   14005bb4e:	(bad)  
   14005bb4f:	(bad)  
   14005bb50:	(bad)  
   14005bb51:	(bad)  
   14005bb52:	(bad)  
   14005bb53:	(bad)  
   14005bb54:	(bad)  
   14005bb55:	(bad)  
   14005bb56:	(bad)  
   14005bb57:	(bad)  
   14005bb58:	(bad)  
   14005bb59:	(bad)  
   14005bb5a:	(bad)  
   14005bb5b:	inc    DWORD PTR [rax]
   14005bb5d:	add    BYTE PTR [rax],al
   14005bb5f:	cmp    bh,0xff
   14005bb62:	(bad)  
   14005bb63:	(bad)  
   14005bb64:	(bad)  
   14005bb65:	(bad)  
   14005bb66:	(bad)  
   14005bb67:	(bad)  
   14005bb68:	(bad)  
   14005bb69:	(bad)  
   14005bb6a:	(bad)  
   14005bb6b:	(bad)  
   14005bb6c:	(bad)  
   14005bb6d:	(bad)  
   14005bb6e:	(bad)  
   14005bb6f:	inc    DWORD PTR [rax]
   14005bb71:	add    BYTE PTR [rax],al
   14005bb73:	cmp    bh,0xff
   14005bb76:	(bad)  
   14005bb77:	(bad)  
   14005bb78:	(bad)  
   14005bb79:	(bad)  
   14005bb7a:	(bad)  
   14005bb7b:	(bad)  
   14005bb7c:	(bad)  
   14005bb7d:	(bad)  
   14005bb7e:	(bad)  
   14005bb7f:	(bad)  
   14005bb80:	(bad)  
   14005bb81:	(bad)  
   14005bb82:	(bad)  
   14005bb83:	inc    DWORD PTR [rax]
   14005bb85:	add    BYTE PTR [rax],al
   14005bb87:	cmp    bh,0xff
   14005bb8a:	(bad)  
   14005bb8b:	(bad)  
   14005bb8c:	(bad)  
   14005bb8d:	(bad)  
   14005bb8e:	(bad)  
   14005bb8f:	(bad)  
   14005bb90:	(bad)  
   14005bb91:	(bad)  
   14005bb92:	(bad)  
   14005bb93:	(bad)  
   14005bb94:	(bad)  
   14005bb95:	(bad)  
   14005bb96:	(bad)  
   14005bb97:	inc    DWORD PTR [rax]
   14005bb99:	add    BYTE PTR [rax],al
   14005bb9b:	cmp    bh,0xff
   14005bb9e:	(bad)  
   14005bb9f:	(bad)  
   14005bba0:	(bad)  
   14005bba1:	(bad)  
   14005bba2:	(bad)  
   14005bba3:	(bad)  
   14005bba4:	(bad)  
   14005bba5:	(bad)  
   14005bba6:	(bad)  
   14005bba7:	(bad)  
   14005bba8:	(bad)  
   14005bba9:	(bad)  
   14005bbaa:	(bad)  
   14005bbab:	inc    DWORD PTR [rax]
   14005bbad:	add    BYTE PTR [rax],al
   14005bbaf:	cmp    bh,0xff
   14005bbb2:	(bad)  
   14005bbb3:	(bad)  
   14005bbb4:	(bad)  
   14005bbb5:	(bad)  
   14005bbb6:	(bad)  
   14005bbb7:	(bad)  
   14005bbb8:	(bad)  
   14005bbb9:	(bad)  
   14005bbba:	(bad)  
   14005bbbb:	(bad)  
   14005bbbc:	(bad)  
   14005bbbd:	(bad)  
   14005bbbe:	(bad)  
   14005bbbf:	inc    DWORD PTR [rax]
   14005bbc1:	add    BYTE PTR [rax],al
   14005bbc3:	cmp    bh,0xff
   14005bbc6:	(bad)  
   14005bbc7:	(bad)  
   14005bbc8:	(bad)  
   14005bbc9:	(bad)  
   14005bbca:	(bad)  
   14005bbcb:	(bad)  
   14005bbcc:	(bad)  
   14005bbcd:	(bad)  
   14005bbce:	(bad)  
   14005bbcf:	inc    DWORD PTR [rax]
   14005bbd1:	add    BYTE PTR [rax],al
   14005bbd3:	add    BYTE PTR [rax],0x0
   14005bbd6:	add    BYTE PTR [rax],al
   14005bbd8:	add    BYTE PTR [rax],al
   14005bbda:	add    BYTE PTR [rax-0x1],al
   14005bbe0:	(bad)  
   14005bbe1:	(bad)  
   14005bbe2:	(bad)  
   14005bbe3:	(bad)  
   14005bbe4:	(bad)  
   14005bbe5:	(bad)  
   14005bbe6:	(bad)  
   14005bbe7:	inc    DWORD PTR [rax]
   14005bbe9:	add    BYTE PTR [rax],al
   14005bbeb:	cmp    bh,0xff
   14005bbee:	(bad)  
   14005bbef:	(bad)  
   14005bbf0:	(bad)  
   14005bbf1:	(bad)  
   14005bbf2:	(bad)  
   14005bbf3:	(bad)  
   14005bbf4:	(bad)  
   14005bbf5:	(bad)  
   14005bbf6:	(bad)  
   14005bbf7:	(bad)  
   14005bbf8:	(bad)  
   14005bbf9:	(bad)  
   14005bbfa:	(bad)  
   14005bbfb:	inc    DWORD PTR [rax]
   14005bbfd:	add    BYTE PTR [rax],al
   14005bbff:	cmp    bh,0xff
   14005bc02:	(bad)  
   14005bc03:	(bad)  
   14005bc04:	(bad)  
   14005bc05:	(bad)  
   14005bc06:	(bad)  
   14005bc07:	(bad)  
   14005bc08:	(bad)  
   14005bc09:	(bad)  
   14005bc0a:	(bad)  
   14005bc0b:	(bad)  
   14005bc0c:	(bad)  
   14005bc0d:	(bad)  
   14005bc0e:	(bad)  
   14005bc0f:	inc    DWORD PTR [rax]
   14005bc11:	add    BYTE PTR [rax],al
   14005bc13:	cmp    bh,0xff
   14005bc16:	(bad)  
   14005bc17:	(bad)  
   14005bc18:	(bad)  
   14005bc19:	(bad)  
   14005bc1a:	(bad)  
   14005bc1b:	(bad)  
   14005bc1c:	(bad)  
   14005bc1d:	(bad)  
   14005bc1e:	(bad)  
   14005bc1f:	(bad)  
   14005bc20:	(bad)  
   14005bc21:	(bad)  
   14005bc22:	(bad)  
   14005bc23:	inc    DWORD PTR [rax]
   14005bc25:	add    BYTE PTR [rax],al
   14005bc27:	cmp    bh,0xff
   14005bc2a:	(bad)  
   14005bc2b:	(bad)  
   14005bc2c:	(bad)  
   14005bc2d:	(bad)  
   14005bc2e:	(bad)  
   14005bc2f:	(bad)  
   14005bc30:	(bad)  
   14005bc31:	(bad)  
   14005bc32:	(bad)  
   14005bc33:	(bad)  
   14005bc34:	(bad)  
   14005bc35:	(bad)  
   14005bc36:	(bad)  
   14005bc37:	inc    DWORD PTR [rax]
   14005bc39:	add    BYTE PTR [rax],al
   14005bc3b:	cmp    bh,0xff
   14005bc3e:	(bad)  
   14005bc3f:	(bad)  
   14005bc40:	(bad)  
   14005bc41:	(bad)  
   14005bc42:	(bad)  
   14005bc43:	(bad)  
   14005bc44:	(bad)  
   14005bc45:	(bad)  
   14005bc46:	(bad)  
   14005bc47:	(bad)  
   14005bc48:	(bad)  
   14005bc49:	(bad)  
   14005bc4a:	(bad)  
   14005bc4b:	inc    DWORD PTR [rax]
   14005bc4d:	add    BYTE PTR [rax],al
   14005bc4f:	cmp    bh,0xff
   14005bc52:	(bad)  
   14005bc53:	(bad)  
   14005bc54:	(bad)  
   14005bc55:	(bad)  
   14005bc56:	(bad)  
   14005bc57:	(bad)  
   14005bc58:	(bad)  
   14005bc59:	(bad)  
   14005bc5a:	(bad)  
   14005bc5b:	(bad)  
   14005bc5c:	(bad)  
   14005bc5d:	(bad)  
   14005bc5e:	(bad)  
   14005bc5f:	inc    DWORD PTR [rax]
   14005bc61:	add    BYTE PTR [rax],al
   14005bc63:	cmp    bh,0xff
   14005bc66:	(bad)  
   14005bc67:	(bad)  
   14005bc68:	(bad)  
   14005bc69:	(bad)  
   14005bc6a:	(bad)  
   14005bc6b:	(bad)  
   14005bc6c:	(bad)  
   14005bc6d:	(bad)  
   14005bc6e:	(bad)  
   14005bc6f:	inc    DWORD PTR [rax]
   14005bc71:	add    BYTE PTR [rax],al
   14005bc73:	add    BYTE PTR [rax],0x0
   14005bc76:	add    BYTE PTR [rax],al
   14005bc78:	add    BYTE PTR [rax],al
   14005bc7a:	add    BYTE PTR [rax-0x1],al
   14005bc80:	(bad)  
   14005bc81:	(bad)  
   14005bc82:	(bad)  
   14005bc83:	(bad)  
   14005bc84:	(bad)  
   14005bc85:	(bad)  
   14005bc86:	(bad)  
   14005bc87:	inc    DWORD PTR [rax]
   14005bc89:	add    BYTE PTR [rax],al
   14005bc8b:	add    BYTE PTR [rax],0x0
   14005bc8e:	add    BYTE PTR [rax-0x80000000],al
   14005bc94:	add    BYTE PTR [rax],al
   14005bc96:	add    BYTE PTR [rax-0x80000000],al
   14005bc9c:	add    BYTE PTR [rax],al
   14005bc9e:	add    BYTE PTR [rax-0x80000000],al
   14005bca4:	add    BYTE PTR [rax],al
   14005bca6:	add    BYTE PTR [rax-0x80000000],al
   14005bcac:	add    BYTE PTR [rax],al
   14005bcae:	add    BYTE PTR [rax-0x80000000],al
   14005bcb4:	add    BYTE PTR [rax],al
   14005bcb6:	add    BYTE PTR [rax-0x80000000],al
   14005bcbc:	add    BYTE PTR [rax],al
   14005bcbe:	add    BYTE PTR [rax-0x80000000],al
   14005bcc4:	add    BYTE PTR [rax],al
   14005bcc6:	add    BYTE PTR [rax-0x80000000],al
   14005bccc:	add    BYTE PTR [rax],al
   14005bcce:	add    BYTE PTR [rax-0x80000000],al
   14005bcd4:	add    BYTE PTR [rax],al
   14005bcd6:	add    BYTE PTR [rax-0x80000000],al
   14005bcdc:	add    BYTE PTR [rax],al
   14005bcde:	add    BYTE PTR [rax-0x80000000],al
   14005bce4:	add    BYTE PTR [rax],al
   14005bce6:	add    BYTE PTR [rax-0x80000000],al
   14005bcec:	add    BYTE PTR [rax],al
   14005bcee:	add    BYTE PTR [rax-0x80000000],al
   14005bcf4:	add    BYTE PTR [rax],al
   14005bcf6:	add    BYTE PTR [rax-0x80000000],al
   14005bcfc:	add    BYTE PTR [rax],al
   14005bcfe:	add    BYTE PTR [rax-0x80000000],al
   14005bd04:	(bad)  
   14005bd05:	(bad)  
   14005bd06:	(bad)  
   14005bd07:	(bad)  
   14005bd08:	(bad)  
   14005bd09:	(bad)  
   14005bd0a:	(bad)  
   14005bd0b:	(bad)  
   14005bd0c:	(bad)  
   14005bd0d:	(bad)  
   14005bd0e:	(bad)  
   14005bd0f:	inc    DWORD PTR [rax]
   14005bd11:	add    BYTE PTR [rax],al
   14005bd13:	add    BYTE PTR [rax],0x0
   14005bd16:	add    BYTE PTR [rax],al
   14005bd18:	add    BYTE PTR [rax],al
   14005bd1a:	add    BYTE PTR [rax-0x1],al
   14005bd20:	(bad)  
   14005bd21:	(bad)  
   14005bd22:	(bad)  
   14005bd23:	(bad)  
   14005bd24:	(bad)  
   14005bd25:	(bad)  
   14005bd26:	(bad)  
   14005bd27:	inc    DWORD PTR [rax]
   14005bd29:	add    BYTE PTR [rax],al
   14005bd2b:	cmp    bh,0xff
   14005bd2e:	(bad)  
   14005bd2f:	(bad)  
   14005bd30:	(bad)  
   14005bd31:	(bad)  
   14005bd32:	(bad)  
   14005bd33:	(bad)  
   14005bd34:	(bad)  
   14005bd35:	(bad)  
   14005bd36:	(bad)  
   14005bd37:	(bad)  
   14005bd38:	(bad)  
   14005bd39:	(bad)  
   14005bd3a:	(bad)  
   14005bd3b:	inc    DWORD PTR [rax]
   14005bd3d:	add    BYTE PTR [rax],al
   14005bd3f:	cmp    bh,0xff
   14005bd42:	(bad)  
   14005bd43:	(bad)  
   14005bd44:	(bad)  
   14005bd45:	(bad)  
   14005bd46:	(bad)  
   14005bd47:	(bad)  
   14005bd48:	(bad)  
   14005bd49:	(bad)  
   14005bd4a:	(bad)  
   14005bd4b:	(bad)  
   14005bd4c:	(bad)  
   14005bd4d:	(bad)  
   14005bd4e:	(bad)  
   14005bd4f:	inc    DWORD PTR [rax]
   14005bd51:	add    BYTE PTR [rax],al
   14005bd53:	cmp    bh,0xff
   14005bd56:	(bad)  
   14005bd57:	(bad)  
   14005bd58:	(bad)  
   14005bd59:	(bad)  
   14005bd5a:	(bad)  
   14005bd5b:	(bad)  
   14005bd5c:	(bad)  
   14005bd5d:	(bad)  
   14005bd5e:	(bad)  
   14005bd5f:	(bad)  
   14005bd60:	(bad)  
   14005bd61:	(bad)  
   14005bd62:	(bad)  
   14005bd63:	inc    DWORD PTR [rax]
   14005bd65:	add    BYTE PTR [rax],al
   14005bd67:	cmp    bh,0xff
   14005bd6a:	(bad)  
   14005bd6b:	(bad)  
   14005bd6c:	(bad)  
   14005bd6d:	(bad)  
   14005bd6e:	(bad)  
   14005bd6f:	(bad)  
   14005bd70:	(bad)  
   14005bd71:	(bad)  
   14005bd72:	(bad)  
   14005bd73:	(bad)  
   14005bd74:	(bad)  
   14005bd75:	(bad)  
   14005bd76:	(bad)  
   14005bd77:	inc    DWORD PTR [rax]
   14005bd79:	add    BYTE PTR [rax],al
   14005bd7b:	cmp    bh,0xff
   14005bd7e:	(bad)  
   14005bd7f:	(bad)  
   14005bd80:	(bad)  
   14005bd81:	(bad)  
   14005bd82:	(bad)  
   14005bd83:	(bad)  
   14005bd84:	(bad)  
   14005bd85:	(bad)  
   14005bd86:	(bad)  
   14005bd87:	(bad)  
   14005bd88:	(bad)  
   14005bd89:	(bad)  
   14005bd8a:	(bad)  
   14005bd8b:	inc    DWORD PTR [rax]
   14005bd8d:	add    BYTE PTR [rax],al
   14005bd8f:	cmp    bh,0xff
   14005bd92:	(bad)  
   14005bd93:	(bad)  
   14005bd94:	(bad)  
   14005bd95:	(bad)  
   14005bd96:	(bad)  
   14005bd97:	(bad)  
   14005bd98:	(bad)  
   14005bd99:	(bad)  
   14005bd9a:	(bad)  
   14005bd9b:	(bad)  
   14005bd9c:	(bad)  
   14005bd9d:	(bad)  
   14005bd9e:	(bad)  
   14005bd9f:	inc    DWORD PTR [rax]
   14005bda1:	add    BYTE PTR [rax],al
   14005bda3:	cmp    bh,0xff
   14005bda6:	(bad)  
   14005bda7:	(bad)  
   14005bda8:	(bad)  
   14005bda9:	(bad)  
   14005bdaa:	(bad)  
   14005bdab:	(bad)  
   14005bdac:	(bad)  
   14005bdad:	(bad)  
   14005bdae:	(bad)  
   14005bdaf:	inc    DWORD PTR [rax]
   14005bdb1:	add    BYTE PTR [rax],al
   14005bdb3:	add    BYTE PTR [rax],0x0
   14005bdb6:	add    BYTE PTR [rax],al
   14005bdb8:	add    BYTE PTR [rax],al
   14005bdba:	add    BYTE PTR [rax-0x1],al
   14005bdc0:	(bad)  
   14005bdc1:	(bad)  
   14005bdc2:	(bad)  
   14005bdc3:	(bad)  
   14005bdc4:	(bad)  
   14005bdc5:	(bad)  
   14005bdc6:	(bad)  
   14005bdc7:	inc    DWORD PTR [rax]
   14005bdc9:	add    BYTE PTR [rax],al
   14005bdcb:	cmp    bh,0xff
   14005bdce:	(bad)  
   14005bdcf:	(bad)  
   14005bdd0:	(bad)  
   14005bdd1:	(bad)  
   14005bdd2:	(bad)  
   14005bdd3:	(bad)  
   14005bdd4:	(bad)  
   14005bdd5:	(bad)  
   14005bdd6:	(bad)  
   14005bdd7:	(bad)  
   14005bdd8:	(bad)  
   14005bdd9:	(bad)  
   14005bdda:	(bad)  
   14005bddb:	inc    DWORD PTR [rax]
   14005bddd:	add    BYTE PTR [rax],al
   14005bddf:	cmp    bh,0xff
   14005bde2:	(bad)  
   14005bde3:	(bad)  
   14005bde4:	(bad)  
   14005bde5:	(bad)  
   14005bde6:	(bad)  
   14005bde7:	(bad)  
   14005bde8:	(bad)  
   14005bde9:	(bad)  
   14005bdea:	(bad)  
   14005bdeb:	(bad)  
   14005bdec:	(bad)  
   14005bded:	(bad)  
   14005bdee:	(bad)  
   14005bdef:	inc    DWORD PTR [rax]
   14005bdf1:	add    BYTE PTR [rax],al
   14005bdf3:	cmp    bh,0xff
   14005bdf6:	(bad)  
   14005bdf7:	(bad)  
   14005bdf8:	(bad)  
   14005bdf9:	(bad)  
   14005bdfa:	(bad)  
   14005bdfb:	(bad)  
   14005bdfc:	(bad)  
   14005bdfd:	(bad)  
   14005bdfe:	(bad)  
   14005bdff:	(bad)  
   14005be00:	(bad)  
   14005be01:	(bad)  
   14005be02:	(bad)  
   14005be03:	inc    DWORD PTR [rax]
   14005be05:	add    BYTE PTR [rax],al
   14005be07:	cmp    bh,0xff
   14005be0a:	(bad)  
   14005be0b:	(bad)  
   14005be0c:	(bad)  
   14005be0d:	(bad)  
   14005be0e:	(bad)  
   14005be0f:	(bad)  
   14005be10:	(bad)  
   14005be11:	(bad)  
   14005be12:	(bad)  
   14005be13:	(bad)  
   14005be14:	(bad)  
   14005be15:	(bad)  
   14005be16:	(bad)  
   14005be17:	inc    DWORD PTR [rax]
   14005be19:	add    BYTE PTR [rax],al
   14005be1b:	cmp    bh,0xff
   14005be1e:	(bad)  
   14005be1f:	(bad)  
   14005be20:	(bad)  
   14005be21:	(bad)  
   14005be22:	(bad)  
   14005be23:	(bad)  
   14005be24:	(bad)  
   14005be25:	(bad)  
   14005be26:	(bad)  
   14005be27:	(bad)  
   14005be28:	(bad)  
   14005be29:	(bad)  
   14005be2a:	(bad)  
   14005be2b:	inc    DWORD PTR [rax]
   14005be2d:	add    BYTE PTR [rax],al
   14005be2f:	cmp    bh,0xff
   14005be32:	(bad)  
   14005be33:	(bad)  
   14005be34:	(bad)  
   14005be35:	(bad)  
   14005be36:	(bad)  
   14005be37:	(bad)  
   14005be38:	(bad)  
   14005be39:	(bad)  
   14005be3a:	(bad)  
   14005be3b:	(bad)  
   14005be3c:	(bad)  
   14005be3d:	(bad)  
   14005be3e:	(bad)  
   14005be3f:	inc    DWORD PTR [rax]
   14005be41:	add    BYTE PTR [rax],al
   14005be43:	cmp    bh,0xff
   14005be46:	(bad)  
   14005be47:	(bad)  
   14005be48:	(bad)  
   14005be49:	(bad)  
   14005be4a:	(bad)  
   14005be4b:	(bad)  
   14005be4c:	(bad)  
   14005be4d:	(bad)  
   14005be4e:	(bad)  
   14005be4f:	inc    DWORD PTR [rax]
   14005be51:	add    BYTE PTR [rax],al
   14005be53:	add    BYTE PTR [rax],0x0
   14005be56:	add    BYTE PTR [rax],al
   14005be58:	add    BYTE PTR [rax],al
   14005be5a:	add    BYTE PTR [rax-0x1],al
   14005be60:	(bad)  
   14005be61:	(bad)  
   14005be62:	(bad)  
   14005be63:	(bad)  
   14005be64:	(bad)  
   14005be65:	(bad)  
   14005be66:	(bad)  
   14005be67:	inc    DWORD PTR [rax]
   14005be69:	add    BYTE PTR [rax],al
   14005be6b:	cmp    bh,0xff
   14005be6e:	(bad)  
   14005be6f:	(bad)  
   14005be70:	(bad)  
   14005be71:	(bad)  
   14005be72:	(bad)  
   14005be73:	(bad)  
   14005be74:	(bad)  
   14005be75:	(bad)  
   14005be76:	(bad)  
   14005be77:	(bad)  
   14005be78:	(bad)  
   14005be79:	(bad)  
   14005be7a:	(bad)  
   14005be7b:	inc    DWORD PTR [rax]
   14005be7d:	add    BYTE PTR [rax],al
   14005be7f:	cmp    bh,0xff
   14005be82:	(bad)  
   14005be83:	(bad)  
   14005be84:	(bad)  
   14005be85:	(bad)  
   14005be86:	(bad)  
   14005be87:	(bad)  
   14005be88:	(bad)  
   14005be89:	(bad)  
   14005be8a:	(bad)  
   14005be8b:	(bad)  
   14005be8c:	(bad)  
   14005be8d:	(bad)  
   14005be8e:	(bad)  
   14005be8f:	inc    DWORD PTR [rax]
   14005be91:	add    BYTE PTR [rax],al
   14005be93:	cmp    bh,0xff
   14005be96:	(bad)  
   14005be97:	(bad)  
   14005be98:	(bad)  
   14005be99:	(bad)  
   14005be9a:	(bad)  
   14005be9b:	(bad)  
   14005be9c:	(bad)  
   14005be9d:	(bad)  
   14005be9e:	(bad)  
   14005be9f:	(bad)  
   14005bea0:	(bad)  
   14005bea1:	(bad)  
   14005bea2:	(bad)  
   14005bea3:	inc    DWORD PTR [rax]
   14005bea5:	add    BYTE PTR [rax],al
   14005bea7:	cmp    bh,0xff
   14005beaa:	(bad)  
   14005beab:	(bad)  
   14005beac:	(bad)  
   14005bead:	(bad)  
   14005beae:	(bad)  
   14005beaf:	(bad)  
   14005beb0:	(bad)  
   14005beb1:	(bad)  
   14005beb2:	(bad)  
   14005beb3:	(bad)  
   14005beb4:	(bad)  
   14005beb5:	(bad)  
   14005beb6:	(bad)  
   14005beb7:	inc    DWORD PTR [rax]
   14005beb9:	add    BYTE PTR [rax],al
   14005bebb:	cmp    bh,0xff
   14005bebe:	(bad)  
   14005bebf:	(bad)  
   14005bec0:	(bad)  
   14005bec1:	(bad)  
   14005bec2:	(bad)  
   14005bec3:	(bad)  
   14005bec4:	(bad)  
   14005bec5:	(bad)  
   14005bec6:	(bad)  
   14005bec7:	(bad)  
   14005bec8:	(bad)  
   14005bec9:	(bad)  
   14005beca:	(bad)  
   14005becb:	inc    DWORD PTR [rax]
   14005becd:	add    BYTE PTR [rax],al
   14005becf:	cmp    bh,0xff
   14005bed2:	(bad)  
   14005bed3:	(bad)  
   14005bed4:	(bad)  
   14005bed5:	(bad)  
   14005bed6:	(bad)  
   14005bed7:	(bad)  
   14005bed8:	(bad)  
   14005bed9:	(bad)  
   14005beda:	(bad)  
   14005bedb:	(bad)  
   14005bedc:	(bad)  
   14005bedd:	(bad)  
   14005bede:	(bad)  
   14005bedf:	inc    DWORD PTR [rax]
   14005bee1:	add    BYTE PTR [rax],al
   14005bee3:	cmp    bh,0xff
   14005bee6:	(bad)  
   14005bee7:	(bad)  
   14005bee8:	(bad)  
   14005bee9:	(bad)  
   14005beea:	(bad)  
   14005beeb:	(bad)  
   14005beec:	(bad)  
   14005beed:	(bad)  
   14005beee:	(bad)  
   14005beef:	inc    DWORD PTR [rax]
   14005bef1:	add    BYTE PTR [rax],al
   14005bef3:	add    BYTE PTR [rax],0x0
   14005bef6:	add    BYTE PTR [rax],al
   14005bef8:	add    BYTE PTR [rax],al
   14005befa:	add    BYTE PTR [rax-0x1],al
   14005bf00:	(bad)  
   14005bf01:	(bad)  
   14005bf02:	(bad)  
   14005bf03:	(bad)  
   14005bf04:	(bad)  
   14005bf05:	(bad)  
   14005bf06:	(bad)  
   14005bf07:	inc    DWORD PTR [rax]
   14005bf09:	add    BYTE PTR [rax],al
   14005bf0b:	cmp    bh,0xff
   14005bf0e:	(bad)  
   14005bf0f:	(bad)  
   14005bf10:	(bad)  
   14005bf11:	(bad)  
   14005bf12:	(bad)  
   14005bf13:	(bad)  
   14005bf14:	(bad)  
   14005bf15:	(bad)  
   14005bf16:	(bad)  
   14005bf17:	(bad)  
   14005bf18:	(bad)  
   14005bf19:	(bad)  
   14005bf1a:	(bad)  
   14005bf1b:	inc    DWORD PTR [rax]
   14005bf1d:	add    BYTE PTR [rax],al
   14005bf1f:	cmp    bh,0xff
   14005bf22:	(bad)  
   14005bf23:	(bad)  
   14005bf24:	(bad)  
   14005bf25:	(bad)  
   14005bf26:	(bad)  
   14005bf27:	(bad)  
   14005bf28:	(bad)  
   14005bf29:	(bad)  
   14005bf2a:	(bad)  
   14005bf2b:	(bad)  
   14005bf2c:	(bad)  
   14005bf2d:	(bad)  
   14005bf2e:	(bad)  
   14005bf2f:	inc    DWORD PTR [rax]
   14005bf31:	add    BYTE PTR [rax],al
   14005bf33:	cmp    bh,0xff
   14005bf36:	(bad)  
   14005bf37:	(bad)  
   14005bf38:	(bad)  
   14005bf39:	(bad)  
   14005bf3a:	(bad)  
   14005bf3b:	(bad)  
   14005bf3c:	(bad)  
   14005bf3d:	(bad)  
   14005bf3e:	(bad)  
   14005bf3f:	(bad)  
   14005bf40:	(bad)  
   14005bf41:	(bad)  
   14005bf42:	(bad)  
   14005bf43:	inc    DWORD PTR [rax]
   14005bf45:	add    BYTE PTR [rax],al
   14005bf47:	cmp    bh,0xff
   14005bf4a:	(bad)  
   14005bf4b:	(bad)  
   14005bf4c:	(bad)  
   14005bf4d:	(bad)  
   14005bf4e:	(bad)  
   14005bf4f:	(bad)  
   14005bf50:	(bad)  
   14005bf51:	(bad)  
   14005bf52:	(bad)  
   14005bf53:	(bad)  
   14005bf54:	(bad)  
   14005bf55:	(bad)  
   14005bf56:	(bad)  
   14005bf57:	inc    DWORD PTR [rax]
   14005bf59:	add    BYTE PTR [rax],al
   14005bf5b:	cmp    bh,0xff
   14005bf5e:	(bad)  
   14005bf5f:	(bad)  
   14005bf60:	(bad)  
   14005bf61:	(bad)  
   14005bf62:	(bad)  
   14005bf63:	(bad)  
   14005bf64:	(bad)  
   14005bf65:	(bad)  
   14005bf66:	(bad)  
   14005bf67:	(bad)  
   14005bf68:	(bad)  
   14005bf69:	(bad)  
   14005bf6a:	(bad)  
   14005bf6b:	inc    DWORD PTR [rax]
   14005bf6d:	add    BYTE PTR [rax],al
   14005bf6f:	cmp    bh,0xff
   14005bf72:	(bad)  
   14005bf73:	(bad)  
   14005bf74:	(bad)  
   14005bf75:	(bad)  
   14005bf76:	(bad)  
   14005bf77:	(bad)  
   14005bf78:	(bad)  
   14005bf79:	(bad)  
   14005bf7a:	(bad)  
   14005bf7b:	(bad)  
   14005bf7c:	(bad)  
   14005bf7d:	(bad)  
   14005bf7e:	(bad)  
   14005bf7f:	inc    DWORD PTR [rax]
   14005bf81:	add    BYTE PTR [rax],al
   14005bf83:	cmp    bh,0xff
   14005bf86:	(bad)  
   14005bf87:	(bad)  
   14005bf88:	(bad)  
   14005bf89:	(bad)  
   14005bf8a:	(bad)  
   14005bf8b:	(bad)  
   14005bf8c:	(bad)  
   14005bf8d:	(bad)  
   14005bf8e:	(bad)  
   14005bf8f:	inc    DWORD PTR [rax]
   14005bf91:	add    BYTE PTR [rax],al
   14005bf93:	add    BYTE PTR [rax],0x0
   14005bf96:	add    BYTE PTR [rax],al
   14005bf98:	add    BYTE PTR [rax],al
   14005bf9a:	add    BYTE PTR [rax-0x1],al
   14005bfa0:	(bad)  
   14005bfa1:	(bad)  
   14005bfa2:	(bad)  
   14005bfa3:	(bad)  
   14005bfa4:	(bad)  
   14005bfa5:	(bad)  
   14005bfa6:	(bad)  
   14005bfa7:	inc    DWORD PTR [rax]
   14005bfa9:	add    BYTE PTR [rax],al
   14005bfab:	add    BYTE PTR [rax],0x0
   14005bfae:	add    BYTE PTR [rax-0x80000000],al
   14005bfb4:	add    BYTE PTR [rax],al
   14005bfb6:	add    BYTE PTR [rax-0x80000000],al
   14005bfbc:	add    BYTE PTR [rax],al
   14005bfbe:	add    BYTE PTR [rax-0x80000000],al
   14005bfc4:	add    BYTE PTR [rax],al
   14005bfc6:	add    BYTE PTR [rax-0x80000000],al
   14005bfcc:	add    BYTE PTR [rax],al
   14005bfce:	add    BYTE PTR [rax-0x80000000],al
   14005bfd4:	add    BYTE PTR [rax],al
   14005bfd6:	add    BYTE PTR [rax-0x80000000],al
   14005bfdc:	add    BYTE PTR [rax],al
   14005bfde:	add    BYTE PTR [rax-0x80000000],al
   14005bfe4:	add    BYTE PTR [rax],al
   14005bfe6:	add    BYTE PTR [rax-0x80000000],al
   14005bfec:	add    BYTE PTR [rax],al
   14005bfee:	add    BYTE PTR [rax-0x80000000],al
   14005bff4:	add    BYTE PTR [rax],al
   14005bff6:	add    BYTE PTR [rax-0x80000000],al
   14005bffc:	add    BYTE PTR [rax],al
   14005bffe:	add    BYTE PTR [rax-0x80000000],al
   14005c004:	add    BYTE PTR [rax],al
   14005c006:	add    BYTE PTR [rax-0x80000000],al
   14005c00c:	add    BYTE PTR [rax],al
   14005c00e:	add    BYTE PTR [rax-0x80000000],al
   14005c014:	add    BYTE PTR [rax],al
   14005c016:	add    BYTE PTR [rax-0x80000000],al
   14005c01c:	add    BYTE PTR [rax],al
   14005c01e:	add    BYTE PTR [rax-0x80000000],al
   14005c024:	(bad)  
   14005c025:	(bad)  
   14005c026:	(bad)  
   14005c027:	(bad)  
   14005c028:	(bad)  
   14005c029:	(bad)  
   14005c02a:	(bad)  
   14005c02b:	(bad)  
   14005c02c:	(bad)  
   14005c02d:	(bad)  
   14005c02e:	(bad)  
   14005c02f:	inc    DWORD PTR [rax]
   14005c031:	add    BYTE PTR [rax],al
   14005c033:	add    BYTE PTR [rax],0x0
   14005c036:	add    BYTE PTR [rax],al
   14005c038:	add    BYTE PTR [rax],al
   14005c03a:	add    BYTE PTR [rax-0x1],al
   14005c040:	(bad)  
   14005c041:	(bad)  
   14005c042:	(bad)  
   14005c043:	(bad)  
   14005c044:	(bad)  
   14005c045:	(bad)  
   14005c046:	(bad)  
   14005c047:	(bad)  
   14005c048:	(bad)  
   14005c049:	(bad)  
   14005c04a:	(bad)  
   14005c04b:	(bad)  
   14005c04c:	(bad)  
   14005c04d:	(bad)  
   14005c04e:	(bad)  
   14005c04f:	(bad)  
   14005c050:	(bad)  
   14005c051:	(bad)  
   14005c052:	(bad)  
   14005c053:	(bad)  
   14005c054:	(bad)  
   14005c055:	(bad)  
   14005c056:	(bad)  
   14005c057:	(bad)  
   14005c058:	(bad)  
   14005c059:	(bad)  
   14005c05a:	(bad)  
   14005c05b:	(bad)  
   14005c05c:	(bad)  
   14005c05d:	(bad)  
   14005c05e:	(bad)  
   14005c05f:	(bad)  
   14005c060:	(bad)  
   14005c061:	(bad)  
   14005c062:	(bad)  
   14005c063:	(bad)  
   14005c064:	(bad)  
   14005c065:	(bad)  
   14005c066:	(bad)  
   14005c067:	(bad)  
   14005c068:	(bad)  
   14005c069:	(bad)  
   14005c06a:	(bad)  
   14005c06b:	(bad)  
   14005c06c:	(bad)  
   14005c06d:	(bad)  
   14005c06e:	(bad)  
   14005c06f:	(bad)  
   14005c070:	(bad)  
   14005c071:	(bad)  
   14005c072:	(bad)  
   14005c073:	(bad)  
   14005c074:	(bad)  
   14005c075:	(bad)  
   14005c076:	(bad)  
   14005c077:	(bad)  
   14005c078:	(bad)  
   14005c079:	(bad)  
   14005c07a:	(bad)  
   14005c07b:	(bad)  
   14005c07c:	(bad)  
   14005c07d:	(bad)  
   14005c07e:	(bad)  
   14005c07f:	(bad)  
   14005c080:	(bad)  
   14005c081:	(bad)  
   14005c082:	(bad)  
   14005c083:	(bad)  
   14005c084:	(bad)  
   14005c085:	(bad)  
   14005c086:	(bad)  
   14005c087:	(bad)  
   14005c088:	(bad)  
   14005c089:	(bad)  
   14005c08a:	(bad)  
   14005c08b:	(bad)  
   14005c08c:	(bad)  
   14005c08d:	(bad)  
   14005c08e:	(bad)  
   14005c08f:	(bad)  
   14005c090:	(bad)  
   14005c091:	(bad)  
   14005c092:	(bad)  
   14005c093:	(bad)  
   14005c094:	(bad)  
   14005c095:	(bad)  
   14005c096:	(bad)  
   14005c097:	(bad)  
   14005c098:	(bad)  
   14005c099:	(bad)  
   14005c09a:	(bad)  
   14005c09b:	(bad)  
   14005c09c:	(bad)  
   14005c09d:	(bad)  
   14005c09e:	(bad)  
   14005c09f:	(bad)  
   14005c0a0:	(bad)  
   14005c0a1:	(bad)  
   14005c0a2:	(bad)  
   14005c0a3:	(bad)  
   14005c0a4:	(bad)  
   14005c0a5:	(bad)  
   14005c0a6:	(bad)  
   14005c0a7:	(bad)  
   14005c0a8:	(bad)  
   14005c0a9:	(bad)  
   14005c0aa:	(bad)  
   14005c0ab:	(bad)  
   14005c0ac:	(bad)  
   14005c0ad:	(bad)  
   14005c0ae:	(bad)  
   14005c0af:	(bad)  
   14005c0b0:	(bad)  
   14005c0b1:	(bad)  
   14005c0b2:	(bad)  
   14005c0b3:	(bad)  
   14005c0b4:	(bad)  
   14005c0b5:	(bad)  
   14005c0b6:	(bad)  
   14005c0b7:	(bad)  
   14005c0b8:	(bad)  
   14005c0b9:	(bad)  
   14005c0ba:	(bad)  
   14005c0bb:	(bad)  
   14005c0bc:	(bad)  
   14005c0bd:	(bad)  
   14005c0be:	(bad)  
   14005c0bf:	(bad)  
   14005c0c0:	(bad)  
   14005c0c1:	(bad)  
   14005c0c2:	(bad)  
   14005c0c3:	(bad)  
   14005c0c4:	(bad)  
   14005c0c5:	(bad)  
   14005c0c6:	(bad)  
   14005c0c7:	(bad)  
   14005c0c8:	(bad)  
   14005c0c9:	(bad)  
   14005c0ca:	(bad)  
   14005c0cb:	(bad)  
   14005c0cc:	(bad)  
   14005c0cd:	(bad)  
   14005c0ce:	(bad)  
   14005c0cf:	inc    DWORD PTR [rax]
   14005c0d1:	add    BYTE PTR [rax],al
   14005c0d3:	add    BYTE PTR [rax],0x0
   14005c0d6:	add    BYTE PTR [rax],al
   14005c0d8:	add    BYTE PTR [rax],al
   14005c0da:	add    BYTE PTR [rax-0x1],al
   14005c0e0:	(bad)  
   14005c0e1:	(bad)  
   14005c0e2:	(bad)  
   14005c0e3:	(bad)  
   14005c0e4:	(bad)  
   14005c0e5:	(bad)  
   14005c0e6:	(bad)  
   14005c0e7:	(bad)  
   14005c0e8:	(bad)  
   14005c0e9:	(bad)  
   14005c0ea:	(bad)  
   14005c0eb:	(bad)  
   14005c0ec:	(bad)  
   14005c0ed:	(bad)  
   14005c0ee:	(bad)  
   14005c0ef:	(bad)  
   14005c0f0:	(bad)  
   14005c0f1:	(bad)  
   14005c0f2:	(bad)  
   14005c0f3:	(bad)  
   14005c0f4:	(bad)  
   14005c0f5:	(bad)  
   14005c0f6:	(bad)  
   14005c0f7:	(bad)  
   14005c0f8:	(bad)  
   14005c0f9:	(bad)  
   14005c0fa:	(bad)  
   14005c0fb:	(bad)  
   14005c0fc:	(bad)  
   14005c0fd:	(bad)  
   14005c0fe:	(bad)  
   14005c0ff:	(bad)  
   14005c100:	(bad)  
   14005c101:	(bad)  
   14005c102:	(bad)  
   14005c103:	(bad)  
   14005c104:	(bad)  
   14005c105:	(bad)  
   14005c106:	(bad)  
   14005c107:	(bad)  
   14005c108:	(bad)  
   14005c109:	(bad)  
   14005c10a:	(bad)  
   14005c10b:	(bad)  
   14005c10c:	(bad)  
   14005c10d:	(bad)  
   14005c10e:	(bad)  
   14005c10f:	(bad)  
   14005c110:	(bad)  
   14005c111:	(bad)  
   14005c112:	(bad)  
   14005c113:	(bad)  
   14005c114:	(bad)  
   14005c115:	(bad)  
   14005c116:	(bad)  
   14005c117:	(bad)  
   14005c118:	(bad)  
   14005c119:	(bad)  
   14005c11a:	(bad)  
   14005c11b:	(bad)  
   14005c11c:	(bad)  
   14005c11d:	(bad)  
   14005c11e:	(bad)  
   14005c11f:	(bad)  
   14005c120:	(bad)  
   14005c121:	(bad)  
   14005c122:	(bad)  
   14005c123:	(bad)  
   14005c124:	(bad)  
   14005c125:	(bad)  
   14005c126:	(bad)  
   14005c127:	(bad)  
   14005c128:	(bad)  
   14005c129:	(bad)  
   14005c12a:	(bad)  
   14005c12b:	(bad)  
   14005c12c:	(bad)  
   14005c12d:	(bad)  
   14005c12e:	(bad)  
   14005c12f:	(bad)  
   14005c130:	(bad)  
   14005c131:	(bad)  
   14005c132:	(bad)  
   14005c133:	(bad)  
   14005c134:	(bad)  
   14005c135:	(bad)  
   14005c136:	(bad)  
   14005c137:	(bad)  
   14005c138:	(bad)  
   14005c139:	(bad)  
   14005c13a:	(bad)  
   14005c13b:	(bad)  
   14005c13c:	(bad)  
   14005c13d:	(bad)  
   14005c13e:	(bad)  
   14005c13f:	(bad)  
   14005c140:	(bad)  
   14005c141:	(bad)  
   14005c142:	(bad)  
   14005c143:	(bad)  
   14005c144:	(bad)  
   14005c145:	(bad)  
   14005c146:	(bad)  
   14005c147:	(bad)  
   14005c148:	(bad)  
   14005c149:	(bad)  
   14005c14a:	(bad)  
   14005c14b:	(bad)  
   14005c14c:	(bad)  
   14005c14d:	(bad)  
   14005c14e:	(bad)  
   14005c14f:	(bad)  
   14005c150:	(bad)  
   14005c151:	(bad)  
   14005c152:	(bad)  
   14005c153:	(bad)  
   14005c154:	(bad)  
   14005c155:	(bad)  
   14005c156:	(bad)  
   14005c157:	(bad)  
   14005c158:	(bad)  
   14005c159:	(bad)  
   14005c15a:	(bad)  
   14005c15b:	(bad)  
   14005c15c:	(bad)  
   14005c15d:	(bad)  
   14005c15e:	(bad)  
   14005c15f:	(bad)  
   14005c160:	(bad)  
   14005c161:	(bad)  
   14005c162:	(bad)  
   14005c163:	(bad)  
   14005c164:	(bad)  
   14005c165:	(bad)  
   14005c166:	(bad)  
   14005c167:	(bad)  
   14005c168:	(bad)  
   14005c169:	(bad)  
   14005c16a:	(bad)  
   14005c16b:	(bad)  
   14005c16c:	(bad)  
   14005c16d:	(bad)  
   14005c16e:	(bad)  
   14005c16f:	inc    DWORD PTR [rax]
   14005c171:	add    BYTE PTR [rax],al
   14005c173:	add    BYTE PTR [rax],0x0
   14005c176:	add    BYTE PTR [rax],al
   14005c178:	add    BYTE PTR [rax],al
   14005c17a:	add    BYTE PTR [rax-0x3c],ah
   14005c17d:	(bad)  
   14005c17e:	(bad)  
   14005c17f:	iret   
   14005c180:	(bad)  
   14005c181:	(bad)  
   14005c182:	(bad)  
   14005c183:	(bad)  
   14005c184:	(bad)  
   14005c185:	(bad)  
   14005c186:	(bad)  
   14005c187:	(bad)  
   14005c188:	(bad)  
   14005c189:	(bad)  
   14005c18a:	(bad)  
   14005c18b:	(bad)  
   14005c18c:	(bad)  
   14005c18d:	(bad)  
   14005c18e:	(bad)  
   14005c18f:	(bad)  
   14005c190:	(bad)  
   14005c191:	(bad)  
   14005c192:	(bad)  
   14005c193:	(bad)  
   14005c194:	(bad)  
   14005c195:	(bad)  
   14005c196:	(bad)  
   14005c197:	(bad)  
   14005c198:	(bad)  
   14005c199:	(bad)  
   14005c19a:	(bad)  
   14005c19b:	(bad)  
   14005c19c:	(bad)  
   14005c19d:	(bad)  
   14005c19e:	(bad)  
   14005c19f:	(bad)  
   14005c1a0:	(bad)  
   14005c1a1:	(bad)  
   14005c1a2:	(bad)  
   14005c1a3:	(bad)  
   14005c1a4:	(bad)  
   14005c1a5:	(bad)  
   14005c1a6:	(bad)  
   14005c1a7:	(bad)  
   14005c1a8:	(bad)  
   14005c1a9:	(bad)  
   14005c1aa:	(bad)  
   14005c1ab:	(bad)  
   14005c1ac:	(bad)  
   14005c1ad:	(bad)  
   14005c1ae:	(bad)  
   14005c1af:	(bad)  
   14005c1b0:	(bad)  
   14005c1b1:	(bad)  
   14005c1b2:	(bad)  
   14005c1b3:	(bad)  
   14005c1b4:	(bad)  
   14005c1b5:	(bad)  
   14005c1b6:	(bad)  
   14005c1b7:	(bad)  
   14005c1b8:	(bad)  
   14005c1b9:	(bad)  
   14005c1ba:	(bad)  
   14005c1bb:	(bad)  
   14005c1bc:	(bad)  
   14005c1bd:	(bad)  
   14005c1be:	(bad)  
   14005c1bf:	(bad)  
   14005c1c0:	(bad)  
   14005c1c1:	(bad)  
   14005c1c2:	(bad)  
   14005c1c3:	(bad)  
   14005c1c4:	(bad)  
   14005c1c5:	(bad)  
   14005c1c6:	(bad)  
   14005c1c7:	(bad)  
   14005c1c8:	(bad)  
   14005c1c9:	(bad)  
   14005c1ca:	(bad)  
   14005c1cb:	(bad)  
   14005c1cc:	(bad)  
   14005c1cd:	(bad)  
   14005c1ce:	(bad)  
   14005c1cf:	(bad)  
   14005c1d0:	(bad)  
   14005c1d1:	(bad)  
   14005c1d2:	(bad)  
   14005c1d3:	(bad)  
   14005c1d4:	(bad)  
   14005c1d5:	(bad)  
   14005c1d6:	(bad)  
   14005c1d7:	(bad)  
   14005c1d8:	(bad)  
   14005c1d9:	(bad)  
   14005c1da:	(bad)  
   14005c1db:	(bad)  
   14005c1dc:	(bad)  
   14005c1dd:	(bad)  
   14005c1de:	(bad)  
   14005c1df:	(bad)  
   14005c1e0:	(bad)  
   14005c1e1:	(bad)  
   14005c1e2:	(bad)  
   14005c1e3:	(bad)  
   14005c1e4:	(bad)  
   14005c1e5:	(bad)  
   14005c1e6:	(bad)  
   14005c1e7:	(bad)  
   14005c1e8:	(bad)  
   14005c1e9:	(bad)  
   14005c1ea:	(bad)  
   14005c1eb:	(bad)  
   14005c1ec:	(bad)  
   14005c1ed:	(bad)  
   14005c1ee:	(bad)  
   14005c1ef:	(bad)  
   14005c1f0:	(bad)  
   14005c1f1:	(bad)  
   14005c1f2:	(bad)  
   14005c1f3:	(bad)  
   14005c1f4:	(bad)  
   14005c1f5:	(bad)  
   14005c1f6:	(bad)  
   14005c1f7:	(bad)  
   14005c1f8:	(bad)  
   14005c1f9:	(bad)  
   14005c1fa:	(bad)  
   14005c1fb:	(bad)  
   14005c1fc:	(bad)  
   14005c1fd:	(bad)  
   14005c1fe:	(bad)  
   14005c1ff:	(bad)  
   14005c200:	(bad)  
   14005c201:	(bad)  
   14005c202:	(bad)  
   14005c203:	(bad)  
   14005c204:	(bad)  
   14005c205:	(bad)  
   14005c206:	(bad)  
   14005c207:	(bad)  
   14005c208:	(bad)  
   14005c209:	(bad)  
   14005c20a:	(bad)  
   14005c20b:	inc    esp
   14005c20d:	(bad)  
   14005c20e:	(bad)  
   14005c20f:	iret   
   14005c210:	add    BYTE PTR [rax],al
   14005c212:	add    BYTE PTR [rax+0x0],ch
   14005c215:	add    BYTE PTR [rax],al
   14005c217:	add    BYTE PTR [rax],al
   14005c219:	add    BYTE PTR [rax],al
   14005c21b:	sbb    BYTE PTR [rax],al
   14005c21d:	add    BYTE PTR [rax],al
   14005c21f:	push   0xffffffff80000000
   14005c224:	add    BYTE PTR [rax],al
   14005c226:	add    BYTE PTR [rax-0x80000000],al
   14005c22c:	add    BYTE PTR [rax],al
   14005c22e:	add    BYTE PTR [rax-0x80000000],al
   14005c234:	add    BYTE PTR [rax],al
   14005c236:	add    BYTE PTR [rax-0x80000000],al
   14005c23c:	add    BYTE PTR [rax],al
   14005c23e:	add    BYTE PTR [rax-0x80000000],al
   14005c244:	add    BYTE PTR [rax],al
   14005c246:	add    BYTE PTR [rax-0x80000000],al
   14005c24c:	add    BYTE PTR [rax],al
   14005c24e:	add    BYTE PTR [rax-0x80000000],al
   14005c254:	add    BYTE PTR [rax],al
   14005c256:	add    BYTE PTR [rax-0x80000000],al
   14005c25c:	add    BYTE PTR [rax],al
   14005c25e:	add    BYTE PTR [rax-0x80000000],al
   14005c264:	add    BYTE PTR [rax],al
   14005c266:	add    BYTE PTR [rax-0x80000000],al
   14005c26c:	add    BYTE PTR [rax],al
   14005c26e:	add    BYTE PTR [rax-0x80000000],al
   14005c274:	add    BYTE PTR [rax],al
   14005c276:	add    BYTE PTR [rax-0x80000000],al
   14005c27c:	add    BYTE PTR [rax],al
   14005c27e:	add    BYTE PTR [rax-0x80000000],al
   14005c284:	add    BYTE PTR [rax],al
   14005c286:	add    BYTE PTR [rax-0x80000000],al
   14005c28c:	add    BYTE PTR [rax],al
   14005c28e:	add    BYTE PTR [rax-0x80000000],al
   14005c294:	add    BYTE PTR [rax],al
   14005c296:	add    BYTE PTR [rax-0x80000000],al
   14005c29c:	add    BYTE PTR [rax],al
   14005c29e:	add    BYTE PTR [rax-0x80000000],al
   14005c2a4:	add    BYTE PTR [rax],al
   14005c2a6:	add    BYTE PTR [rax-0x80000000],al
   14005c2ac:	add    BYTE PTR [rax],al
   14005c2ae:	add    BYTE PTR [rax+0x0],ah
   14005c2b1:	add    BYTE PTR [rax],al
   14005c2b3:	sbb    BYTE PTR [rax],al
	...
   14005c855:	add    BYTE PTR [rax],al
   14005c857:	add    bh,bh
   14005c859:	(bad)  
   14005c85a:	(bad)  
   14005c85b:	(bad)  
   14005c85c:	inc    DWORD PTR [rax]
   14005c85e:	add    BYTE PTR [rax],al
   14005c860:	(bad)  
   14005c861:	(bad)  
   14005c862:	(bad)  
   14005c863:	(bad)  
   14005c864:	inc    DWORD PTR [rax]
   14005c866:	add    BYTE PTR [rax],al
   14005c868:	(bad)  
   14005c869:	(bad)  
   14005c86a:	(bad)  
   14005c86b:	(bad)  
   14005c86c:	inc    DWORD PTR [rax]
   14005c86e:	add    BYTE PTR [rax],al
   14005c870:	(bad)  
   14005c871:	(bad)  
   14005c872:	(bad)  
   14005c873:	(bad)  
   14005c874:	inc    DWORD PTR [rax]
   14005c876:	add    BYTE PTR [rax],al
   14005c878:	(bad)  
   14005c879:	(bad)  
   14005c87a:	(bad)  
   14005c87b:	(bad)  
   14005c87c:	inc    DWORD PTR [rax]
   14005c87e:	add    BYTE PTR [rax],al
   14005c880:	(bad)  
   14005c881:	(bad)  
   14005c882:	(bad)  
   14005c883:	(bad)  
   14005c884:	inc    DWORD PTR [rax]
   14005c886:	add    BYTE PTR [rax],al
   14005c888:	(bad)  
   14005c889:	(bad)  
   14005c88a:	(bad)  
   14005c88b:	(bad)  
   14005c88c:	inc    DWORD PTR [rax]
   14005c88e:	add    BYTE PTR [rax],al
   14005c890:	add    BYTE PTR [rax],al
   14005c892:	add    BYTE PTR [rax],al
   14005c894:	add    DWORD PTR [rax],eax
   14005c896:	add    BYTE PTR [rax],al
   14005c898:	add    BYTE PTR [rax],al
   14005c89a:	add    BYTE PTR [rax],al
   14005c89c:	add    DWORD PTR [rax],eax
   14005c89e:	add    BYTE PTR [rax],al
   14005c8a0:	add    BYTE PTR [rax],al
   14005c8a2:	add    BYTE PTR [rax],al
   14005c8a4:	add    DWORD PTR [rax],eax
   14005c8a6:	add    BYTE PTR [rax],al
   14005c8a8:	add    BYTE PTR [rax],al
   14005c8aa:	add    BYTE PTR [rax],al
   14005c8ac:	add    DWORD PTR [rax],eax
   14005c8ae:	add    BYTE PTR [rax],al
   14005c8b0:	add    BYTE PTR [rax],al
   14005c8b2:	add    BYTE PTR [rax],al
   14005c8b4:	add    DWORD PTR [rax],eax
   14005c8b6:	add    BYTE PTR [rax],al
   14005c8b8:	add    BYTE PTR [rax],al
   14005c8ba:	add    BYTE PTR [rax],al
   14005c8bc:	add    DWORD PTR [rax],eax
   14005c8be:	add    BYTE PTR [rax],al
   14005c8c0:	add    BYTE PTR [rax],al
   14005c8c2:	add    BYTE PTR [rax],al
   14005c8c4:	add    DWORD PTR [rax],eax
   14005c8c6:	add    BYTE PTR [rax],al
   14005c8c8:	add    BYTE PTR [rax],al
   14005c8ca:	add    BYTE PTR [rax],al
   14005c8cc:	add    DWORD PTR [rax],eax
   14005c8ce:	add    BYTE PTR [rax],al
   14005c8d0:	add    BYTE PTR [rax],al
   14005c8d2:	add    BYTE PTR [rax],al
   14005c8d4:	add    DWORD PTR [rax],eax
   14005c8d6:	add    BYTE PTR [rax],al
   14005c8d8:	add    BYTE PTR [rax],al
   14005c8da:	add    BYTE PTR [rax],al
   14005c8dc:	add    DWORD PTR [rax],eax
   14005c8de:	add    BYTE PTR [rax],al
   14005c8e0:	add    BYTE PTR [rax],al
   14005c8e2:	add    BYTE PTR [rax],al
   14005c8e4:	add    DWORD PTR [rax],eax
   14005c8e6:	add    BYTE PTR [rax],al
   14005c8e8:	add    BYTE PTR [rax],al
   14005c8ea:	add    BYTE PTR [rax],al
   14005c8ec:	add    DWORD PTR [rax],eax
   14005c8ee:	add    BYTE PTR [rax],al
   14005c8f0:	add    BYTE PTR [rax],al
   14005c8f2:	add    BYTE PTR [rax],al
   14005c8f4:	add    DWORD PTR [rax],eax
   14005c8f6:	add    BYTE PTR [rax],al
   14005c8f8:	add    BYTE PTR [rax],al
   14005c8fa:	add    BYTE PTR [rax],al
   14005c8fc:	add    DWORD PTR [rax],eax
   14005c8fe:	add    BYTE PTR [rax],al
   14005c900:	add    BYTE PTR [rax],al
   14005c902:	add    BYTE PTR [rax],al
   14005c904:	add    DWORD PTR [rax],eax
   14005c906:	add    BYTE PTR [rax],al
   14005c908:	add    BYTE PTR [rax],al
   14005c90a:	add    BYTE PTR [rax],al
   14005c90c:	add    DWORD PTR [rax],eax
   14005c90e:	add    BYTE PTR [rax],al
   14005c910:	add    BYTE PTR [rax],al
   14005c912:	add    BYTE PTR [rax],al
   14005c914:	add    DWORD PTR [rax],eax
   14005c916:	add    BYTE PTR [rax],al
   14005c918:	add    BYTE PTR [rax],al
   14005c91a:	add    BYTE PTR [rax],al
   14005c91c:	add    DWORD PTR [rax],eax
   14005c91e:	add    BYTE PTR [rax],al
   14005c920:	add    BYTE PTR [rax],al
   14005c922:	add    BYTE PTR [rax],al
   14005c924:	add    DWORD PTR [rax],eax
   14005c926:	add    BYTE PTR [rax],al
   14005c928:	add    BYTE PTR [rax],al
   14005c92a:	add    BYTE PTR [rax],al
   14005c92c:	add    DWORD PTR [rax],eax
   14005c92e:	add    BYTE PTR [rax],al
   14005c930:	add    BYTE PTR [rax],al
   14005c932:	add    BYTE PTR [rax],al
   14005c934:	add    DWORD PTR [rax],eax
   14005c936:	add    BYTE PTR [rax],al
   14005c938:	add    BYTE PTR [rax],al
   14005c93a:	add    BYTE PTR [rax],al
   14005c93c:	add    DWORD PTR [rax],eax
   14005c93e:	add    BYTE PTR [rax],al
   14005c940:	add    BYTE PTR [rax],al
   14005c942:	add    BYTE PTR [rax],al
   14005c944:	add    DWORD PTR [rax],eax
   14005c946:	add    BYTE PTR [rax],al
   14005c948:	add    BYTE PTR [rax],al
   14005c94a:	add    BYTE PTR [rax],al
   14005c94c:	add    DWORD PTR [rax],eax
   14005c94e:	add    BYTE PTR [rax],al
   14005c950:	(bad)  
   14005c951:	(bad)  
   14005c952:	(bad)  
   14005c953:	(bad)  
   14005c954:	inc    DWORD PTR [rax]
   14005c956:	add    BYTE PTR [rax],al
   14005c958:	(bad)  
   14005c959:	(bad)  
   14005c95a:	(bad)  
   14005c95b:	(bad)  
   14005c95c:	inc    DWORD PTR [rax]
   14005c95e:	add    BYTE PTR [rax],al
   14005c960:	(bad)  
   14005c961:	(bad)  
   14005c962:	(bad)  
   14005c963:	(bad)  
   14005c964:	inc    DWORD PTR [rax]
   14005c966:	add    BYTE PTR [rax],al
   14005c968:	(bad)  
   14005c969:	(bad)  
   14005c96a:	(bad)  
   14005c96b:	(bad)  
   14005c96c:	inc    DWORD PTR [rax]
   14005c96e:	add    BYTE PTR [rax],al
   14005c970:	(bad)  
   14005c971:	(bad)  
   14005c972:	(bad)  
   14005c973:	(bad)  
   14005c974:	inc    DWORD PTR [rax]
   14005c976:	add    BYTE PTR [rax],al
   14005c978:	(bad)  
   14005c979:	(bad)  
   14005c97a:	(bad)  
   14005c97b:	(bad)  
   14005c97c:	inc    DWORD PTR [rax]
   14005c97e:	add    BYTE PTR [rax],al
   14005c980:	(bad)  
   14005c981:	(bad)  
   14005c982:	(bad)  
   14005c983:	(bad)  
   14005c984:	inc    DWORD PTR [rax]
   14005c986:	add    BYTE PTR [rax],al
   14005c988:	(bad)  
   14005c989:	(bad)  
   14005c98a:	(bad)  
   14005c98b:	(bad)  
   14005c98c:	inc    DWORD PTR [rax]
   14005c98e:	add    BYTE PTR [rax],al
   14005c990:	(bad)  
   14005c991:	(bad)  
   14005c992:	(bad)  
   14005c993:	(bad)  
   14005c994:	inc    DWORD PTR [rax]
   14005c996:	add    BYTE PTR [rax],al
   14005c998:	sub    BYTE PTR [rax],al
   14005c99a:	add    BYTE PTR [rax],al
   14005c99c:	and    BYTE PTR [rax],al
   14005c99e:	add    BYTE PTR [rax],al
   14005c9a0:	add    BYTE PTR [rax],al
   14005c9a3:	add    BYTE PTR [rcx],al
   14005c9a5:	add    BYTE PTR [rax],ah
   14005c9a7:	add    BYTE PTR [rax],al
   14005c9a9:	add    BYTE PTR [rax],al
   14005c9ab:	add    BYTE PTR [rax+0x10],al
	...
   14005ccc1:	add    BYTE PTR [rax],al
   14005ccc3:	and    BYTE PTR [rax],al
   14005ccc5:	add    BYTE PTR [rax],al
   14005ccc7:	js     0x14005ccc9
   14005ccc9:	add    BYTE PTR [rax],al
   14005cccb:	add    BYTE PTR [rax],0x0
   14005ccce:	add    BYTE PTR [rax-0x80000000],al
   14005ccd4:	add    BYTE PTR [rax],al
   14005ccd6:	add    BYTE PTR [rax-0x80000000],al
   14005ccdc:	add    BYTE PTR [rax],al
   14005ccde:	add    BYTE PTR [rax-0x80000000],al
   14005cce4:	add    BYTE PTR [rax],al
   14005cce6:	add    BYTE PTR [rax-0x80000000],al
   14005ccec:	add    BYTE PTR [rax],al
   14005ccee:	add    BYTE PTR [rax-0x80000000],al
   14005ccf4:	add    BYTE PTR [rax],al
   14005ccf6:	add    BYTE PTR [rax-0x80000000],al
   14005ccfc:	add    BYTE PTR [rax],al
   14005ccfe:	add    BYTE PTR [rax-0x80000000],al
   14005cd04:	add    BYTE PTR [rax],al
   14005cd06:	add    BYTE PTR [rax-0x80000000],al
   14005cd0c:	add    BYTE PTR [rax],al
   14005cd0e:	add    BYTE PTR [rax-0x80000000],al
   14005cd14:	add    BYTE PTR [rax],al
   14005cd16:	add    BYTE PTR [rax-0x80000000],al
   14005cd1c:	add    BYTE PTR [rax],al
   14005cd1e:	add    BYTE PTR [rax-0x80000000],al
   14005cd24:	add    BYTE PTR [rax],al
   14005cd26:	add    BYTE PTR [rax-0x80000000],al
   14005cd2c:	add    BYTE PTR [rax],al
   14005cd2e:	add    BYTE PTR [rax-0x80000000],al
   14005cd34:	add    BYTE PTR [rax],al
   14005cd36:	add    BYTE PTR [rax+0x0],bh
   14005cd39:	add    BYTE PTR [rax],al
   14005cd3b:	and    BYTE PTR [rax],al
   14005cd3d:	add    BYTE PTR [rax],al
   14005cd3f:	add    BYTE PTR [rax],al
   14005cd41:	add    BYTE PTR [rax],al
   14005cd43:	js     0x14005cd2a
   14005cd45:	in     eax,0xe5
   14005cd47:	out    0xff,eax
   14005cd49:	(bad)  
   14005cd4a:	(bad)  
   14005cd4b:	(bad)  
   14005cd4c:	(bad)  
   14005cd4d:	(bad)  
   14005cd4e:	(bad)  
   14005cd4f:	(bad)  
   14005cd50:	(bad)  
   14005cd51:	(bad)  
   14005cd52:	(bad)  
   14005cd53:	(bad)  
   14005cd54:	(bad)  
   14005cd55:	(bad)  
   14005cd56:	(bad)  
   14005cd57:	(bad)  
   14005cd58:	(bad)  
   14005cd59:	(bad)  
   14005cd5a:	(bad)  
   14005cd5b:	(bad)  
   14005cd5c:	(bad)  
   14005cd5d:	(bad)  
   14005cd5e:	(bad)  
   14005cd5f:	(bad)  
   14005cd60:	(bad)  
   14005cd61:	(bad)  
   14005cd62:	(bad)  
   14005cd63:	(bad)  
   14005cd64:	(bad)  
   14005cd65:	(bad)  
   14005cd66:	(bad)  
   14005cd67:	(bad)  
   14005cd68:	(bad)  
   14005cd69:	(bad)  
   14005cd6a:	(bad)  
   14005cd6b:	(bad)  
   14005cd6c:	(bad)  
   14005cd6d:	(bad)  
   14005cd6e:	(bad)  
   14005cd6f:	(bad)  
   14005cd70:	(bad)  
   14005cd71:	(bad)  
   14005cd72:	(bad)  
   14005cd73:	(bad)  
   14005cd74:	(bad)  
   14005cd75:	(bad)  
   14005cd76:	(bad)  
   14005cd77:	(bad)  
   14005cd78:	(bad)  
   14005cd79:	(bad)  
   14005cd7a:	(bad)  
   14005cd7b:	(bad)  
   14005cd7c:	(bad)  
   14005cd7d:	(bad)  
   14005cd7e:	(bad)  
   14005cd7f:	(bad)  
   14005cd80:	(bad)  
   14005cd81:	(bad)  
   14005cd82:	(bad)  
   14005cd83:	(bad)  
   14005cd84:	(bad)  
   14005cd85:	(bad)  
   14005cd86:	(bad)  
   14005cd87:	(bad)  
   14005cd88:	(bad)  
   14005cd89:	(bad)  
   14005cd8a:	(bad)  
   14005cd8b:	(bad)  
   14005cd8c:	(bad)  
   14005cd8d:	(bad)  
   14005cd8e:	(bad)  
   14005cd8f:	(bad)  
   14005cd90:	(bad)  
   14005cd91:	(bad)  
   14005cd92:	(bad)  
   14005cd93:	(bad)  
   14005cd94:	(bad)  
   14005cd95:	(bad)  
   14005cd96:	(bad)  
   14005cd97:	(bad)  
   14005cd98:	(bad)  
   14005cd99:	(bad)  
   14005cd9a:	(bad)  
   14005cd9b:	(bad)  
   14005cd9c:	(bad)  
   14005cd9d:	(bad)  
   14005cd9e:	(bad)  
   14005cd9f:	(bad)  
   14005cda0:	(bad)  
   14005cda1:	(bad)  
   14005cda2:	(bad)  
   14005cda3:	(bad)  
   14005cda4:	(bad)  
   14005cda5:	(bad)  
   14005cda6:	(bad)  
   14005cda7:	(bad)  
   14005cda8:	(bad)  
   14005cda9:	(bad)  
   14005cdaa:	(bad)  
   14005cdab:	(bad)  
   14005cdac:	(bad)  
   14005cdad:	(bad)  
   14005cdae:	(bad)  
   14005cdaf:	(bad)  
   14005cdb0:	(bad)  
   14005cdb1:	(bad)  
   14005cdb2:	(bad)  
   14005cdb3:	jmp    rbp
   14005cdb5:	in     eax,0xe5
   14005cdb7:	out    0x0,eax
   14005cdb9:	add    BYTE PTR [rax],al
   14005cdbb:	js     0x14005cdbd
   14005cdbd:	add    BYTE PTR [rax],al
   14005cdbf:	add    BYTE PTR [rax],al
   14005cdc1:	add    BYTE PTR [rax],al
   14005cdc3:	cmp    bh,0xff
   14005cdc6:	(bad)  
   14005cdc7:	(bad)  
   14005cdc8:	(bad)  
   14005cdc9:	(bad)  
   14005cdca:	(bad)  
   14005cdcb:	(bad)  
   14005cdcc:	(bad)  
   14005cdcd:	(bad)  
   14005cdce:	(bad)  
   14005cdcf:	(bad)  
   14005cdd0:	(bad)  
   14005cdd1:	(bad)  
   14005cdd2:	(bad)  
   14005cdd3:	(bad)  
   14005cdd4:	(bad)  
   14005cdd5:	(bad)  
   14005cdd6:	(bad)  
   14005cdd7:	(bad)  
   14005cdd8:	(bad)  
   14005cdd9:	(bad)  
   14005cdda:	(bad)  
   14005cddb:	(bad)  
   14005cddc:	(bad)  
   14005cddd:	(bad)  
   14005cdde:	(bad)  
   14005cddf:	(bad)  
   14005cde0:	(bad)  
   14005cde1:	(bad)  
   14005cde2:	(bad)  
   14005cde3:	(bad)  
   14005cde4:	(bad)  
   14005cde5:	(bad)  
   14005cde6:	(bad)  
   14005cde7:	(bad)  
   14005cde8:	(bad)  
   14005cde9:	(bad)  
   14005cdea:	(bad)  
   14005cdeb:	(bad)  
   14005cdec:	(bad)  
   14005cded:	(bad)  
   14005cdee:	(bad)  
   14005cdef:	(bad)  
   14005cdf0:	(bad)  
   14005cdf1:	(bad)  
   14005cdf2:	(bad)  
   14005cdf3:	(bad)  
   14005cdf4:	(bad)  
   14005cdf5:	(bad)  
   14005cdf6:	(bad)  
   14005cdf7:	(bad)  
   14005cdf8:	(bad)  
   14005cdf9:	(bad)  
   14005cdfa:	(bad)  
   14005cdfb:	(bad)  
   14005cdfc:	(bad)  
   14005cdfd:	(bad)  
   14005cdfe:	(bad)  
   14005cdff:	(bad)  
   14005ce00:	(bad)  
   14005ce01:	(bad)  
   14005ce02:	(bad)  
   14005ce03:	(bad)  
   14005ce04:	(bad)  
   14005ce05:	(bad)  
   14005ce06:	(bad)  
   14005ce07:	(bad)  
   14005ce08:	(bad)  
   14005ce09:	(bad)  
   14005ce0a:	(bad)  
   14005ce0b:	(bad)  
   14005ce0c:	(bad)  
   14005ce0d:	(bad)  
   14005ce0e:	(bad)  
   14005ce0f:	(bad)  
   14005ce10:	(bad)  
   14005ce11:	(bad)  
   14005ce12:	(bad)  
   14005ce13:	(bad)  
   14005ce14:	(bad)  
   14005ce15:	(bad)  
   14005ce16:	(bad)  
   14005ce17:	(bad)  
   14005ce18:	(bad)  
   14005ce19:	(bad)  
   14005ce1a:	(bad)  
   14005ce1b:	(bad)  
   14005ce1c:	(bad)  
   14005ce1d:	(bad)  
   14005ce1e:	(bad)  
   14005ce1f:	(bad)  
   14005ce20:	(bad)  
   14005ce21:	(bad)  
   14005ce22:	(bad)  
   14005ce23:	(bad)  
   14005ce24:	(bad)  
   14005ce25:	(bad)  
   14005ce26:	(bad)  
   14005ce27:	(bad)  
   14005ce28:	(bad)  
   14005ce29:	(bad)  
   14005ce2a:	(bad)  
   14005ce2b:	(bad)  
   14005ce2c:	(bad)  
   14005ce2d:	(bad)  
   14005ce2e:	(bad)  
   14005ce2f:	(bad)  
   14005ce30:	(bad)  
   14005ce31:	(bad)  
   14005ce32:	(bad)  
   14005ce33:	(bad)  
   14005ce34:	(bad)  
   14005ce35:	(bad)  
   14005ce36:	(bad)  
   14005ce37:	inc    DWORD PTR [rax]
   14005ce39:	add    BYTE PTR [rax],al
   14005ce3b:	add    BYTE PTR [rax],0x0
   14005ce3e:	add    BYTE PTR [rax],al
   14005ce40:	add    BYTE PTR [rax],al
   14005ce42:	add    BYTE PTR [rax-0x1],al
   14005ce48:	(bad)  
   14005ce49:	(bad)  
   14005ce4a:	(bad)  
   14005ce4b:	inc    DWORD PTR [rax]
   14005ce4d:	add    BYTE PTR [rax],al
   14005ce4f:	add    BYTE PTR [rax],0x0
   14005ce52:	add    BYTE PTR [rax-0x80000000],al
   14005ce58:	add    BYTE PTR [rax],al
   14005ce5a:	add    BYTE PTR [rax-0x80000000],al
   14005ce60:	add    BYTE PTR [rax],al
   14005ce62:	add    BYTE PTR [rax-0x80000000],al
   14005ce68:	add    BYTE PTR [rax],al
   14005ce6a:	add    BYTE PTR [rax-0x80000000],al
   14005ce70:	add    BYTE PTR [rax],al
   14005ce72:	add    BYTE PTR [rax-0x80000000],al
   14005ce78:	add    BYTE PTR [rax],al
   14005ce7a:	add    BYTE PTR [rax-0x80000000],al
   14005ce80:	add    BYTE PTR [rax],al
   14005ce82:	add    BYTE PTR [rax-0x80000000],al
   14005ce88:	add    BYTE PTR [rax],al
   14005ce8a:	add    BYTE PTR [rax-0x80000000],al
   14005ce90:	add    BYTE PTR [rax],al
   14005ce92:	add    BYTE PTR [rax-0x80000000],al
   14005ce98:	add    BYTE PTR [rax],al
   14005ce9a:	add    BYTE PTR [rax-0x80000000],al
   14005cea0:	add    BYTE PTR [rax],al
   14005cea2:	add    BYTE PTR [rax-0x80000000],al
   14005cea8:	add    BYTE PTR [rax],al
   14005ceaa:	add    BYTE PTR [rax-0x80000000],al
   14005ceb0:	(bad)  
   14005ceb1:	(bad)  
   14005ceb2:	(bad)  
   14005ceb3:	(bad)  
   14005ceb4:	(bad)  
   14005ceb5:	(bad)  
   14005ceb6:	(bad)  
   14005ceb7:	inc    DWORD PTR [rax]
   14005ceb9:	add    BYTE PTR [rax],al
   14005cebb:	add    BYTE PTR [rax],0x0
   14005cebe:	add    BYTE PTR [rax],al
   14005cec0:	add    BYTE PTR [rax],al
   14005cec2:	add    BYTE PTR [rax-0x1],al
   14005cec8:	(bad)  
   14005cec9:	(bad)  
   14005ceca:	(bad)  
   14005cecb:	inc    DWORD PTR [rax]
   14005cecd:	add    BYTE PTR [rax],al
   14005cecf:	cmp    bh,0xff
   14005ced2:	(bad)  
   14005ced3:	(bad)  
   14005ced4:	(bad)  
   14005ced5:	(bad)  
   14005ced6:	(bad)  
   14005ced7:	(bad)  
   14005ced8:	(bad)  
   14005ced9:	(bad)  
   14005ceda:	(bad)  
   14005cedb:	(bad)  
   14005cedc:	(bad)  
   14005cedd:	(bad)  
   14005cede:	(bad)  
   14005cedf:	inc    DWORD PTR [rax]
   14005cee1:	add    BYTE PTR [rax],al
   14005cee3:	cmp    bh,0xff
   14005cee6:	(bad)  
   14005cee7:	(bad)  
   14005cee8:	(bad)  
   14005cee9:	(bad)  
   14005ceea:	(bad)  
   14005ceeb:	(bad)  
   14005ceec:	(bad)  
   14005ceed:	(bad)  
   14005ceee:	(bad)  
   14005ceef:	(bad)  
   14005cef0:	(bad)  
   14005cef1:	(bad)  
   14005cef2:	(bad)  
   14005cef3:	(bad)  
   14005cef4:	(bad)  
   14005cef5:	(bad)  
   14005cef6:	(bad)  
   14005cef7:	(bad)  
   14005cef8:	(bad)  
   14005cef9:	(bad)  
   14005cefa:	(bad)  
   14005cefb:	(bad)  
   14005cefc:	(bad)  
   14005cefd:	(bad)  
   14005cefe:	(bad)  
   14005ceff:	(bad)  
   14005cf00:	(bad)  
   14005cf01:	(bad)  
   14005cf02:	(bad)  
   14005cf03:	(bad)  
   14005cf04:	(bad)  
   14005cf05:	(bad)  
   14005cf06:	(bad)  
   14005cf07:	(bad)  
   14005cf08:	(bad)  
   14005cf09:	(bad)  
   14005cf0a:	(bad)  
   14005cf0b:	(bad)  
   14005cf0c:	(bad)  
   14005cf0d:	(bad)  
   14005cf0e:	(bad)  
   14005cf0f:	(bad)  
   14005cf10:	(bad)  
   14005cf11:	(bad)  
   14005cf12:	(bad)  
   14005cf13:	(bad)  
   14005cf14:	(bad)  
   14005cf15:	(bad)  
   14005cf16:	(bad)  
   14005cf17:	inc    DWORD PTR [rax]
   14005cf19:	add    BYTE PTR [rax],al
   14005cf1b:	cmp    bh,0xff
   14005cf1e:	(bad)  
   14005cf1f:	(bad)  
   14005cf20:	(bad)  
   14005cf21:	(bad)  
   14005cf22:	(bad)  
   14005cf23:	(bad)  
   14005cf24:	(bad)  
   14005cf25:	(bad)  
   14005cf26:	(bad)  
   14005cf27:	(bad)  
   14005cf28:	(bad)  
   14005cf29:	(bad)  
   14005cf2a:	(bad)  
   14005cf2b:	inc    DWORD PTR [rax]
   14005cf2d:	add    BYTE PTR [rax],al
   14005cf2f:	cmp    bh,0xff
   14005cf32:	(bad)  
   14005cf33:	(bad)  
   14005cf34:	(bad)  
   14005cf35:	(bad)  
   14005cf36:	(bad)  
   14005cf37:	inc    DWORD PTR [rax]
   14005cf39:	add    BYTE PTR [rax],al
   14005cf3b:	add    BYTE PTR [rax],0x0
   14005cf3e:	add    BYTE PTR [rax],al
   14005cf40:	add    BYTE PTR [rax],al
   14005cf42:	add    BYTE PTR [rax-0x1],al
   14005cf48:	(bad)  
   14005cf49:	(bad)  
   14005cf4a:	(bad)  
   14005cf4b:	inc    DWORD PTR [rax]
   14005cf4d:	add    BYTE PTR [rax],al
   14005cf4f:	cmp    bh,0xff
   14005cf52:	(bad)  
   14005cf53:	(bad)  
   14005cf54:	(bad)  
   14005cf55:	(bad)  
   14005cf56:	(bad)  
   14005cf57:	(bad)  
   14005cf58:	(bad)  
   14005cf59:	(bad)  
   14005cf5a:	(bad)  
   14005cf5b:	(bad)  
   14005cf5c:	(bad)  
   14005cf5d:	(bad)  
   14005cf5e:	(bad)  
   14005cf5f:	inc    DWORD PTR [rax]
   14005cf61:	add    BYTE PTR [rax],al
   14005cf63:	cmp    bh,0xff
   14005cf66:	(bad)  
   14005cf67:	(bad)  
   14005cf68:	(bad)  
   14005cf69:	(bad)  
   14005cf6a:	(bad)  
   14005cf6b:	(bad)  
   14005cf6c:	(bad)  
   14005cf6d:	(bad)  
   14005cf6e:	(bad)  
   14005cf6f:	(bad)  
   14005cf70:	(bad)  
   14005cf71:	(bad)  
   14005cf72:	(bad)  
   14005cf73:	(bad)  
   14005cf74:	(bad)  
   14005cf75:	(bad)  
   14005cf76:	(bad)  
   14005cf77:	(bad)  
   14005cf78:	(bad)  
   14005cf79:	(bad)  
   14005cf7a:	(bad)  
   14005cf7b:	(bad)  
   14005cf7c:	(bad)  
   14005cf7d:	(bad)  
   14005cf7e:	(bad)  
   14005cf7f:	(bad)  
   14005cf80:	(bad)  
   14005cf81:	(bad)  
   14005cf82:	(bad)  
   14005cf83:	(bad)  
   14005cf84:	(bad)  
   14005cf85:	(bad)  
   14005cf86:	(bad)  
   14005cf87:	(bad)  
   14005cf88:	(bad)  
   14005cf89:	(bad)  
   14005cf8a:	(bad)  
   14005cf8b:	(bad)  
   14005cf8c:	(bad)  
   14005cf8d:	(bad)  
   14005cf8e:	(bad)  
   14005cf8f:	(bad)  
   14005cf90:	(bad)  
   14005cf91:	(bad)  
   14005cf92:	(bad)  
   14005cf93:	(bad)  
   14005cf94:	(bad)  
   14005cf95:	(bad)  
   14005cf96:	(bad)  
   14005cf97:	inc    DWORD PTR [rax]
   14005cf99:	add    BYTE PTR [rax],al
   14005cf9b:	cmp    bh,0xff
   14005cf9e:	(bad)  
   14005cf9f:	(bad)  
   14005cfa0:	(bad)  
   14005cfa1:	(bad)  
   14005cfa2:	(bad)  
   14005cfa3:	(bad)  
   14005cfa4:	(bad)  
   14005cfa5:	(bad)  
   14005cfa6:	(bad)  
   14005cfa7:	(bad)  
   14005cfa8:	(bad)  
   14005cfa9:	(bad)  
   14005cfaa:	(bad)  
   14005cfab:	inc    DWORD PTR [rax]
   14005cfad:	add    BYTE PTR [rax],al
   14005cfaf:	cmp    bh,0xff
   14005cfb2:	(bad)  
   14005cfb3:	(bad)  
   14005cfb4:	(bad)  
   14005cfb5:	(bad)  
   14005cfb6:	(bad)  
   14005cfb7:	inc    DWORD PTR [rax]
   14005cfb9:	add    BYTE PTR [rax],al
   14005cfbb:	add    BYTE PTR [rax],0x0
   14005cfbe:	add    BYTE PTR [rax],al
   14005cfc0:	add    BYTE PTR [rax],al
   14005cfc2:	add    BYTE PTR [rax-0x1],al
   14005cfc8:	(bad)  
   14005cfc9:	(bad)  
   14005cfca:	(bad)  
   14005cfcb:	inc    DWORD PTR [rax]
   14005cfcd:	add    BYTE PTR [rax],al
   14005cfcf:	cmp    bh,0xff
   14005cfd2:	(bad)  
   14005cfd3:	(bad)  
   14005cfd4:	(bad)  
   14005cfd5:	(bad)  
   14005cfd6:	(bad)  
   14005cfd7:	(bad)  
   14005cfd8:	(bad)  
   14005cfd9:	(bad)  
   14005cfda:	(bad)  
   14005cfdb:	(bad)  
   14005cfdc:	(bad)  
   14005cfdd:	(bad)  
   14005cfde:	(bad)  
   14005cfdf:	inc    DWORD PTR [rax]
   14005cfe1:	add    BYTE PTR [rax],al
   14005cfe3:	cmp    bh,0xff
   14005cfe6:	(bad)  
   14005cfe7:	(bad)  
   14005cfe8:	(bad)  
   14005cfe9:	(bad)  
   14005cfea:	(bad)  
   14005cfeb:	(bad)  
   14005cfec:	(bad)  
   14005cfed:	(bad)  
   14005cfee:	(bad)  
   14005cfef:	(bad)  
   14005cff0:	(bad)  
   14005cff1:	(bad)  
   14005cff2:	(bad)  
   14005cff3:	(bad)  
   14005cff4:	(bad)  
   14005cff5:	(bad)  
   14005cff6:	(bad)  
   14005cff7:	(bad)  
   14005cff8:	(bad)  
   14005cff9:	(bad)  
   14005cffa:	(bad)  
   14005cffb:	(bad)  
   14005cffc:	(bad)  
   14005cffd:	(bad)  
   14005cffe:	(bad)  
   14005cfff:	(bad)  
   14005d000:	(bad)  
   14005d001:	(bad)  
   14005d002:	(bad)  
   14005d003:	(bad)  
   14005d004:	(bad)  
   14005d005:	(bad)  
   14005d006:	(bad)  
   14005d007:	(bad)  
   14005d008:	(bad)  
   14005d009:	(bad)  
   14005d00a:	(bad)  
   14005d00b:	(bad)  
   14005d00c:	(bad)  
   14005d00d:	(bad)  
   14005d00e:	(bad)  
   14005d00f:	(bad)  
   14005d010:	(bad)  
   14005d011:	(bad)  
   14005d012:	(bad)  
   14005d013:	(bad)  
   14005d014:	(bad)  
   14005d015:	(bad)  
   14005d016:	(bad)  
   14005d017:	inc    DWORD PTR [rax]
   14005d019:	add    BYTE PTR [rax],al
   14005d01b:	cmp    bh,0xff
   14005d01e:	(bad)  
   14005d01f:	(bad)  
   14005d020:	(bad)  
   14005d021:	(bad)  
   14005d022:	(bad)  
   14005d023:	(bad)  
   14005d024:	(bad)  
   14005d025:	(bad)  
   14005d026:	(bad)  
   14005d027:	(bad)  
   14005d028:	(bad)  
   14005d029:	(bad)  
   14005d02a:	(bad)  
   14005d02b:	inc    DWORD PTR [rax]
   14005d02d:	add    BYTE PTR [rax],al
   14005d02f:	cmp    bh,0xff
   14005d032:	(bad)  
   14005d033:	(bad)  
   14005d034:	(bad)  
   14005d035:	(bad)  
   14005d036:	(bad)  
   14005d037:	inc    DWORD PTR [rax]
   14005d039:	add    BYTE PTR [rax],al
   14005d03b:	add    BYTE PTR [rax],0x0
   14005d03e:	add    BYTE PTR [rax],al
   14005d040:	add    BYTE PTR [rax],al
   14005d042:	add    BYTE PTR [rax-0x1],al
   14005d048:	(bad)  
   14005d049:	(bad)  
   14005d04a:	(bad)  
   14005d04b:	inc    DWORD PTR [rax]
   14005d04d:	add    BYTE PTR [rax],al
   14005d04f:	add    BYTE PTR [rax],0x0
   14005d052:	add    BYTE PTR [rax-0x80000000],al
   14005d058:	add    BYTE PTR [rax],al
   14005d05a:	add    BYTE PTR [rax-0x80000000],al
   14005d060:	add    BYTE PTR [rax],al
   14005d062:	add    BYTE PTR [rax-0x80000000],al
   14005d068:	add    BYTE PTR [rax],al
   14005d06a:	add    BYTE PTR [rax-0x80000000],al
   14005d070:	add    BYTE PTR [rax],al
   14005d072:	add    BYTE PTR [rax-0x80000000],al
   14005d078:	add    BYTE PTR [rax],al
   14005d07a:	add    BYTE PTR [rax-0x80000000],al
   14005d080:	add    BYTE PTR [rax],al
   14005d082:	add    BYTE PTR [rax-0x80000000],al
   14005d088:	add    BYTE PTR [rax],al
   14005d08a:	add    BYTE PTR [rax-0x80000000],al
   14005d090:	add    BYTE PTR [rax],al
   14005d092:	add    BYTE PTR [rax-0x80000000],al
   14005d098:	add    BYTE PTR [rax],al
   14005d09a:	add    BYTE PTR [rax-0x80000000],al
   14005d0a0:	add    BYTE PTR [rax],al
   14005d0a2:	add    BYTE PTR [rax-0x80000000],al
   14005d0a8:	add    BYTE PTR [rax],al
   14005d0aa:	add    BYTE PTR [rax-0x80000000],al
   14005d0b0:	(bad)  
   14005d0b1:	(bad)  
   14005d0b2:	(bad)  
   14005d0b3:	(bad)  
   14005d0b4:	(bad)  
   14005d0b5:	(bad)  
   14005d0b6:	(bad)  
   14005d0b7:	inc    DWORD PTR [rax]
   14005d0b9:	add    BYTE PTR [rax],al
   14005d0bb:	add    BYTE PTR [rax],0x0
   14005d0be:	add    BYTE PTR [rax],al
   14005d0c0:	add    BYTE PTR [rax],al
   14005d0c2:	add    BYTE PTR [rax-0x1],al
   14005d0c8:	(bad)  
   14005d0c9:	(bad)  
   14005d0ca:	(bad)  
   14005d0cb:	inc    DWORD PTR [rax]
   14005d0cd:	add    BYTE PTR [rax],al
   14005d0cf:	cmp    bh,0xff
   14005d0d2:	(bad)  
   14005d0d3:	(bad)  
   14005d0d4:	(bad)  
   14005d0d5:	(bad)  
   14005d0d6:	(bad)  
   14005d0d7:	(bad)  
   14005d0d8:	(bad)  
   14005d0d9:	(bad)  
   14005d0da:	(bad)  
   14005d0db:	inc    DWORD PTR [rax]
   14005d0dd:	add    BYTE PTR [rax],al
   14005d0df:	cmp    bh,0xff
   14005d0e2:	(bad)  
   14005d0e3:	(bad)  
   14005d0e4:	(bad)  
   14005d0e5:	(bad)  
   14005d0e6:	(bad)  
   14005d0e7:	(bad)  
   14005d0e8:	(bad)  
   14005d0e9:	(bad)  
   14005d0ea:	(bad)  
   14005d0eb:	inc    DWORD PTR [rax]
   14005d0ed:	add    BYTE PTR [rax],al
   14005d0ef:	cmp    bh,0xff
   14005d0f2:	(bad)  
   14005d0f3:	(bad)  
   14005d0f4:	(bad)  
   14005d0f5:	(bad)  
   14005d0f6:	(bad)  
   14005d0f7:	(bad)  
   14005d0f8:	(bad)  
   14005d0f9:	(bad)  
   14005d0fa:	(bad)  
   14005d0fb:	inc    DWORD PTR [rax]
   14005d0fd:	add    BYTE PTR [rax],al
   14005d0ff:	cmp    bh,0xff
   14005d102:	(bad)  
   14005d103:	(bad)  
   14005d104:	(bad)  
   14005d105:	(bad)  
   14005d106:	(bad)  
   14005d107:	(bad)  
   14005d108:	(bad)  
   14005d109:	(bad)  
   14005d10a:	(bad)  
   14005d10b:	inc    DWORD PTR [rax]
   14005d10d:	add    BYTE PTR [rax],al
   14005d10f:	cmp    bh,0xff
   14005d112:	(bad)  
   14005d113:	(bad)  
   14005d114:	(bad)  
   14005d115:	(bad)  
   14005d116:	(bad)  
   14005d117:	(bad)  
   14005d118:	(bad)  
   14005d119:	(bad)  
   14005d11a:	(bad)  
   14005d11b:	inc    DWORD PTR [rax]
   14005d11d:	add    BYTE PTR [rax],al
   14005d11f:	cmp    bh,0xff
   14005d122:	(bad)  
   14005d123:	(bad)  
   14005d124:	(bad)  
   14005d125:	(bad)  
   14005d126:	(bad)  
   14005d127:	(bad)  
   14005d128:	(bad)  
   14005d129:	(bad)  
   14005d12a:	(bad)  
   14005d12b:	inc    DWORD PTR [rax]
   14005d12d:	add    BYTE PTR [rax],al
   14005d12f:	cmp    bh,0xff
   14005d132:	(bad)  
   14005d133:	(bad)  
   14005d134:	(bad)  
   14005d135:	(bad)  
   14005d136:	(bad)  
   14005d137:	inc    DWORD PTR [rax]
   14005d139:	add    BYTE PTR [rax],al
   14005d13b:	add    BYTE PTR [rax],0x0
   14005d13e:	add    BYTE PTR [rax],al
   14005d140:	add    BYTE PTR [rax],al
   14005d142:	add    BYTE PTR [rax-0x1],al
   14005d148:	(bad)  
   14005d149:	(bad)  
   14005d14a:	(bad)  
   14005d14b:	inc    DWORD PTR [rax]
   14005d14d:	add    BYTE PTR [rax],al
   14005d14f:	cmp    bh,0xff
   14005d152:	(bad)  
   14005d153:	(bad)  
   14005d154:	(bad)  
   14005d155:	(bad)  
   14005d156:	(bad)  
   14005d157:	(bad)  
   14005d158:	(bad)  
   14005d159:	(bad)  
   14005d15a:	(bad)  
   14005d15b:	inc    DWORD PTR [rax]
   14005d15d:	add    BYTE PTR [rax],al
   14005d15f:	cmp    bh,0xff
   14005d162:	(bad)  
   14005d163:	(bad)  
   14005d164:	(bad)  
   14005d165:	(bad)  
   14005d166:	(bad)  
   14005d167:	(bad)  
   14005d168:	(bad)  
   14005d169:	(bad)  
   14005d16a:	(bad)  
   14005d16b:	inc    DWORD PTR [rax]
   14005d16d:	add    BYTE PTR [rax],al
   14005d16f:	cmp    bh,0xff
   14005d172:	(bad)  
   14005d173:	(bad)  
   14005d174:	(bad)  
   14005d175:	(bad)  
   14005d176:	(bad)  
   14005d177:	(bad)  
   14005d178:	(bad)  
   14005d179:	(bad)  
   14005d17a:	(bad)  
   14005d17b:	inc    DWORD PTR [rax]
   14005d17d:	add    BYTE PTR [rax],al
   14005d17f:	cmp    bh,0xff
   14005d182:	(bad)  
   14005d183:	(bad)  
   14005d184:	(bad)  
   14005d185:	(bad)  
   14005d186:	(bad)  
   14005d187:	(bad)  
   14005d188:	(bad)  
   14005d189:	(bad)  
   14005d18a:	(bad)  
   14005d18b:	inc    DWORD PTR [rax]
   14005d18d:	add    BYTE PTR [rax],al
   14005d18f:	cmp    bh,0xff
   14005d192:	(bad)  
   14005d193:	(bad)  
   14005d194:	(bad)  
   14005d195:	(bad)  
   14005d196:	(bad)  
   14005d197:	(bad)  
   14005d198:	(bad)  
   14005d199:	(bad)  
   14005d19a:	(bad)  
   14005d19b:	inc    DWORD PTR [rax]
   14005d19d:	add    BYTE PTR [rax],al
   14005d19f:	cmp    bh,0xff
   14005d1a2:	(bad)  
   14005d1a3:	(bad)  
   14005d1a4:	(bad)  
   14005d1a5:	(bad)  
   14005d1a6:	(bad)  
   14005d1a7:	(bad)  
   14005d1a8:	(bad)  
   14005d1a9:	(bad)  
   14005d1aa:	(bad)  
   14005d1ab:	inc    DWORD PTR [rax]
   14005d1ad:	add    BYTE PTR [rax],al
   14005d1af:	cmp    bh,0xff
   14005d1b2:	(bad)  
   14005d1b3:	(bad)  
   14005d1b4:	(bad)  
   14005d1b5:	(bad)  
   14005d1b6:	(bad)  
   14005d1b7:	inc    DWORD PTR [rax]
   14005d1b9:	add    BYTE PTR [rax],al
   14005d1bb:	add    BYTE PTR [rax],0x0
   14005d1be:	add    BYTE PTR [rax],al
   14005d1c0:	add    BYTE PTR [rax],al
   14005d1c2:	add    BYTE PTR [rax-0x1],al
   14005d1c8:	(bad)  
   14005d1c9:	(bad)  
   14005d1ca:	(bad)  
   14005d1cb:	inc    DWORD PTR [rax]
   14005d1cd:	add    BYTE PTR [rax],al
   14005d1cf:	cmp    bh,0xff
   14005d1d2:	(bad)  
   14005d1d3:	(bad)  
   14005d1d4:	(bad)  
   14005d1d5:	(bad)  
   14005d1d6:	(bad)  
   14005d1d7:	(bad)  
   14005d1d8:	(bad)  
   14005d1d9:	(bad)  
   14005d1da:	(bad)  
   14005d1db:	inc    DWORD PTR [rax]
   14005d1dd:	add    BYTE PTR [rax],al
   14005d1df:	cmp    bh,0xff
   14005d1e2:	(bad)  
   14005d1e3:	(bad)  
   14005d1e4:	(bad)  
   14005d1e5:	(bad)  
   14005d1e6:	(bad)  
   14005d1e7:	(bad)  
   14005d1e8:	(bad)  
   14005d1e9:	(bad)  
   14005d1ea:	(bad)  
   14005d1eb:	inc    DWORD PTR [rax]
   14005d1ed:	add    BYTE PTR [rax],al
   14005d1ef:	cmp    bh,0xff
   14005d1f2:	(bad)  
   14005d1f3:	(bad)  
   14005d1f4:	(bad)  
   14005d1f5:	(bad)  
   14005d1f6:	(bad)  
   14005d1f7:	(bad)  
   14005d1f8:	(bad)  
   14005d1f9:	(bad)  
   14005d1fa:	(bad)  
   14005d1fb:	inc    DWORD PTR [rax]
   14005d1fd:	add    BYTE PTR [rax],al
   14005d1ff:	cmp    bh,0xff
   14005d202:	(bad)  
   14005d203:	(bad)  
   14005d204:	(bad)  
   14005d205:	(bad)  
   14005d206:	(bad)  
   14005d207:	(bad)  
   14005d208:	(bad)  
   14005d209:	(bad)  
   14005d20a:	(bad)  
   14005d20b:	inc    DWORD PTR [rax]
   14005d20d:	add    BYTE PTR [rax],al
   14005d20f:	cmp    bh,0xff
   14005d212:	(bad)  
   14005d213:	(bad)  
   14005d214:	(bad)  
   14005d215:	(bad)  
   14005d216:	(bad)  
   14005d217:	(bad)  
   14005d218:	(bad)  
   14005d219:	(bad)  
   14005d21a:	(bad)  
   14005d21b:	inc    DWORD PTR [rax]
   14005d21d:	add    BYTE PTR [rax],al
   14005d21f:	cmp    bh,0xff
   14005d222:	(bad)  
   14005d223:	(bad)  
   14005d224:	(bad)  
   14005d225:	(bad)  
   14005d226:	(bad)  
   14005d227:	(bad)  
   14005d228:	(bad)  
   14005d229:	(bad)  
   14005d22a:	(bad)  
   14005d22b:	inc    DWORD PTR [rax]
   14005d22d:	add    BYTE PTR [rax],al
   14005d22f:	cmp    bh,0xff
   14005d232:	(bad)  
   14005d233:	(bad)  
   14005d234:	(bad)  
   14005d235:	(bad)  
   14005d236:	(bad)  
   14005d237:	inc    DWORD PTR [rax]
   14005d239:	add    BYTE PTR [rax],al
   14005d23b:	add    BYTE PTR [rax],0x0
   14005d23e:	add    BYTE PTR [rax],al
   14005d240:	add    BYTE PTR [rax],al
   14005d242:	add    BYTE PTR [rax-0x1],al
   14005d248:	(bad)  
   14005d249:	(bad)  
   14005d24a:	(bad)  
   14005d24b:	inc    DWORD PTR [rax]
   14005d24d:	add    BYTE PTR [rax],al
   14005d24f:	add    BYTE PTR [rax],0x0
   14005d252:	add    BYTE PTR [rax-0x80000000],al
   14005d258:	add    BYTE PTR [rax],al
   14005d25a:	add    BYTE PTR [rax-0x80000000],al
   14005d260:	add    BYTE PTR [rax],al
   14005d262:	add    BYTE PTR [rax-0x80000000],al
   14005d268:	add    BYTE PTR [rax],al
   14005d26a:	add    BYTE PTR [rax-0x80000000],al
   14005d270:	add    BYTE PTR [rax],al
   14005d272:	add    BYTE PTR [rax-0x80000000],al
   14005d278:	add    BYTE PTR [rax],al
   14005d27a:	add    BYTE PTR [rax-0x80000000],al
   14005d280:	add    BYTE PTR [rax],al
   14005d282:	add    BYTE PTR [rax-0x80000000],al
   14005d288:	add    BYTE PTR [rax],al
   14005d28a:	add    BYTE PTR [rax-0x80000000],al
   14005d290:	add    BYTE PTR [rax],al
   14005d292:	add    BYTE PTR [rax-0x80000000],al
   14005d298:	add    BYTE PTR [rax],al
   14005d29a:	add    BYTE PTR [rax-0x80000000],al
   14005d2a0:	add    BYTE PTR [rax],al
   14005d2a2:	add    BYTE PTR [rax-0x80000000],al
   14005d2a8:	add    BYTE PTR [rax],al
   14005d2aa:	add    BYTE PTR [rax-0x80000000],al
   14005d2b0:	(bad)  
   14005d2b1:	(bad)  
   14005d2b2:	(bad)  
   14005d2b3:	(bad)  
   14005d2b4:	(bad)  
   14005d2b5:	(bad)  
   14005d2b6:	(bad)  
   14005d2b7:	inc    DWORD PTR [rax]
   14005d2b9:	add    BYTE PTR [rax],al
   14005d2bb:	add    BYTE PTR [rax],0x0
   14005d2be:	add    BYTE PTR [rax],al
   14005d2c0:	add    BYTE PTR [rax],al
   14005d2c2:	add    BYTE PTR [rax-0x1],al
   14005d2c8:	(bad)  
   14005d2c9:	(bad)  
   14005d2ca:	(bad)  
   14005d2cb:	inc    DWORD PTR [rax]
   14005d2cd:	add    BYTE PTR [rax],al
   14005d2cf:	cmp    bh,0xff
   14005d2d2:	(bad)  
   14005d2d3:	(bad)  
   14005d2d4:	(bad)  
   14005d2d5:	(bad)  
   14005d2d6:	(bad)  
   14005d2d7:	(bad)  
   14005d2d8:	(bad)  
   14005d2d9:	(bad)  
   14005d2da:	(bad)  
   14005d2db:	inc    DWORD PTR [rax]
   14005d2dd:	add    BYTE PTR [rax],al
   14005d2df:	cmp    bh,0xff
   14005d2e2:	(bad)  
   14005d2e3:	(bad)  
   14005d2e4:	(bad)  
   14005d2e5:	(bad)  
   14005d2e6:	(bad)  
   14005d2e7:	(bad)  
   14005d2e8:	(bad)  
   14005d2e9:	(bad)  
   14005d2ea:	(bad)  
   14005d2eb:	inc    DWORD PTR [rax]
   14005d2ed:	add    BYTE PTR [rax],al
   14005d2ef:	cmp    bh,0xff
   14005d2f2:	(bad)  
   14005d2f3:	(bad)  
   14005d2f4:	(bad)  
   14005d2f5:	(bad)  
   14005d2f6:	(bad)  
   14005d2f7:	(bad)  
   14005d2f8:	(bad)  
   14005d2f9:	(bad)  
   14005d2fa:	(bad)  
   14005d2fb:	inc    DWORD PTR [rax]
   14005d2fd:	add    BYTE PTR [rax],al
   14005d2ff:	cmp    bh,0xff
   14005d302:	(bad)  
   14005d303:	(bad)  
   14005d304:	(bad)  
   14005d305:	(bad)  
   14005d306:	(bad)  
   14005d307:	(bad)  
   14005d308:	(bad)  
   14005d309:	(bad)  
   14005d30a:	(bad)  
   14005d30b:	inc    DWORD PTR [rax]
   14005d30d:	add    BYTE PTR [rax],al
   14005d30f:	cmp    bh,0xff
   14005d312:	(bad)  
   14005d313:	(bad)  
   14005d314:	(bad)  
   14005d315:	(bad)  
   14005d316:	(bad)  
   14005d317:	(bad)  
   14005d318:	(bad)  
   14005d319:	(bad)  
   14005d31a:	(bad)  
   14005d31b:	inc    DWORD PTR [rax]
   14005d31d:	add    BYTE PTR [rax],al
   14005d31f:	cmp    bh,0xff
   14005d322:	(bad)  
   14005d323:	(bad)  
   14005d324:	(bad)  
   14005d325:	(bad)  
   14005d326:	(bad)  
   14005d327:	(bad)  
   14005d328:	(bad)  
   14005d329:	(bad)  
   14005d32a:	(bad)  
   14005d32b:	inc    DWORD PTR [rax]
   14005d32d:	add    BYTE PTR [rax],al
   14005d32f:	cmp    bh,0xff
   14005d332:	(bad)  
   14005d333:	(bad)  
   14005d334:	(bad)  
   14005d335:	(bad)  
   14005d336:	(bad)  
   14005d337:	inc    DWORD PTR [rax]
   14005d339:	add    BYTE PTR [rax],al
   14005d33b:	add    BYTE PTR [rax],0x0
   14005d33e:	add    BYTE PTR [rax],al
   14005d340:	add    BYTE PTR [rax],al
   14005d342:	add    BYTE PTR [rax-0x1],al
   14005d348:	(bad)  
   14005d349:	(bad)  
   14005d34a:	(bad)  
   14005d34b:	inc    DWORD PTR [rax]
   14005d34d:	add    BYTE PTR [rax],al
   14005d34f:	cmp    bh,0xff
   14005d352:	(bad)  
   14005d353:	(bad)  
   14005d354:	(bad)  
   14005d355:	(bad)  
   14005d356:	(bad)  
   14005d357:	(bad)  
   14005d358:	(bad)  
   14005d359:	(bad)  
   14005d35a:	(bad)  
   14005d35b:	inc    DWORD PTR [rax]
   14005d35d:	add    BYTE PTR [rax],al
   14005d35f:	cmp    bh,0xff
   14005d362:	(bad)  
   14005d363:	(bad)  
   14005d364:	(bad)  
   14005d365:	(bad)  
   14005d366:	(bad)  
   14005d367:	(bad)  
   14005d368:	(bad)  
   14005d369:	(bad)  
   14005d36a:	(bad)  
   14005d36b:	inc    DWORD PTR [rax]
   14005d36d:	add    BYTE PTR [rax],al
   14005d36f:	cmp    bh,0xff
   14005d372:	(bad)  
   14005d373:	(bad)  
   14005d374:	(bad)  
   14005d375:	(bad)  
   14005d376:	(bad)  
   14005d377:	(bad)  
   14005d378:	(bad)  
   14005d379:	(bad)  
   14005d37a:	(bad)  
   14005d37b:	inc    DWORD PTR [rax]
   14005d37d:	add    BYTE PTR [rax],al
   14005d37f:	cmp    bh,0xff
   14005d382:	(bad)  
   14005d383:	(bad)  
   14005d384:	(bad)  
   14005d385:	(bad)  
   14005d386:	(bad)  
   14005d387:	(bad)  
   14005d388:	(bad)  
   14005d389:	(bad)  
   14005d38a:	(bad)  
   14005d38b:	inc    DWORD PTR [rax]
   14005d38d:	add    BYTE PTR [rax],al
   14005d38f:	cmp    bh,0xff
   14005d392:	(bad)  
   14005d393:	(bad)  
   14005d394:	(bad)  
   14005d395:	(bad)  
   14005d396:	(bad)  
   14005d397:	(bad)  
   14005d398:	(bad)  
   14005d399:	(bad)  
   14005d39a:	(bad)  
   14005d39b:	inc    DWORD PTR [rax]
   14005d39d:	add    BYTE PTR [rax],al
   14005d39f:	cmp    bh,0xff
   14005d3a2:	(bad)  
   14005d3a3:	(bad)  
   14005d3a4:	(bad)  
   14005d3a5:	(bad)  
   14005d3a6:	(bad)  
   14005d3a7:	(bad)  
   14005d3a8:	(bad)  
   14005d3a9:	(bad)  
   14005d3aa:	(bad)  
   14005d3ab:	inc    DWORD PTR [rax]
   14005d3ad:	add    BYTE PTR [rax],al
   14005d3af:	cmp    bh,0xff
   14005d3b2:	(bad)  
   14005d3b3:	(bad)  
   14005d3b4:	(bad)  
   14005d3b5:	(bad)  
   14005d3b6:	(bad)  
   14005d3b7:	inc    DWORD PTR [rax]
   14005d3b9:	add    BYTE PTR [rax],al
   14005d3bb:	add    BYTE PTR [rax],0x0
   14005d3be:	add    BYTE PTR [rax],al
   14005d3c0:	add    BYTE PTR [rax],al
   14005d3c2:	add    BYTE PTR [rax-0x1],al
   14005d3c8:	(bad)  
   14005d3c9:	(bad)  
   14005d3ca:	(bad)  
   14005d3cb:	inc    DWORD PTR [rax]
   14005d3cd:	add    BYTE PTR [rax],al
   14005d3cf:	cmp    bh,0xff
   14005d3d2:	(bad)  
   14005d3d3:	(bad)  
   14005d3d4:	(bad)  
   14005d3d5:	(bad)  
   14005d3d6:	(bad)  
   14005d3d7:	(bad)  
   14005d3d8:	(bad)  
   14005d3d9:	(bad)  
   14005d3da:	(bad)  
   14005d3db:	inc    DWORD PTR [rax]
   14005d3dd:	add    BYTE PTR [rax],al
   14005d3df:	cmp    bh,0xff
   14005d3e2:	(bad)  
   14005d3e3:	(bad)  
   14005d3e4:	(bad)  
   14005d3e5:	(bad)  
   14005d3e6:	(bad)  
   14005d3e7:	(bad)  
   14005d3e8:	(bad)  
   14005d3e9:	(bad)  
   14005d3ea:	(bad)  
   14005d3eb:	inc    DWORD PTR [rax]
   14005d3ed:	add    BYTE PTR [rax],al
   14005d3ef:	cmp    bh,0xff
   14005d3f2:	(bad)  
   14005d3f3:	(bad)  
   14005d3f4:	(bad)  
   14005d3f5:	(bad)  
   14005d3f6:	(bad)  
   14005d3f7:	(bad)  
   14005d3f8:	(bad)  
   14005d3f9:	(bad)  
   14005d3fa:	(bad)  
   14005d3fb:	inc    DWORD PTR [rax]
   14005d3fd:	add    BYTE PTR [rax],al
   14005d3ff:	cmp    bh,0xff
   14005d402:	(bad)  
   14005d403:	(bad)  
   14005d404:	(bad)  
   14005d405:	(bad)  
   14005d406:	(bad)  
   14005d407:	(bad)  
   14005d408:	(bad)  
   14005d409:	(bad)  
   14005d40a:	(bad)  
   14005d40b:	inc    DWORD PTR [rax]
   14005d40d:	add    BYTE PTR [rax],al
   14005d40f:	cmp    bh,0xff
   14005d412:	(bad)  
   14005d413:	(bad)  
   14005d414:	(bad)  
   14005d415:	(bad)  
   14005d416:	(bad)  
   14005d417:	(bad)  
   14005d418:	(bad)  
   14005d419:	(bad)  
   14005d41a:	(bad)  
   14005d41b:	inc    DWORD PTR [rax]
   14005d41d:	add    BYTE PTR [rax],al
   14005d41f:	cmp    bh,0xff
   14005d422:	(bad)  
   14005d423:	(bad)  
   14005d424:	(bad)  
   14005d425:	(bad)  
   14005d426:	(bad)  
   14005d427:	(bad)  
   14005d428:	(bad)  
   14005d429:	(bad)  
   14005d42a:	(bad)  
   14005d42b:	inc    DWORD PTR [rax]
   14005d42d:	add    BYTE PTR [rax],al
   14005d42f:	cmp    bh,0xff
   14005d432:	(bad)  
   14005d433:	(bad)  
   14005d434:	(bad)  
   14005d435:	(bad)  
   14005d436:	(bad)  
   14005d437:	inc    DWORD PTR [rax]
   14005d439:	add    BYTE PTR [rax],al
   14005d43b:	add    BYTE PTR [rax],0x0
   14005d43e:	add    BYTE PTR [rax],al
   14005d440:	add    BYTE PTR [rax],al
   14005d442:	add    BYTE PTR [rax-0x1],al
   14005d448:	(bad)  
   14005d449:	(bad)  
   14005d44a:	(bad)  
   14005d44b:	inc    DWORD PTR [rax]
   14005d44d:	add    BYTE PTR [rax],al
   14005d44f:	add    BYTE PTR [rax],0x0
   14005d452:	add    BYTE PTR [rax-0x80000000],al
   14005d458:	add    BYTE PTR [rax],al
   14005d45a:	add    BYTE PTR [rax-0x80000000],al
   14005d460:	add    BYTE PTR [rax],al
   14005d462:	add    BYTE PTR [rax-0x80000000],al
   14005d468:	add    BYTE PTR [rax],al
   14005d46a:	add    BYTE PTR [rax-0x80000000],al
   14005d470:	add    BYTE PTR [rax],al
   14005d472:	add    BYTE PTR [rax-0x80000000],al
   14005d478:	add    BYTE PTR [rax],al
   14005d47a:	add    BYTE PTR [rax-0x80000000],al
   14005d480:	add    BYTE PTR [rax],al
   14005d482:	add    BYTE PTR [rax-0x80000000],al
   14005d488:	add    BYTE PTR [rax],al
   14005d48a:	add    BYTE PTR [rax-0x80000000],al
   14005d490:	add    BYTE PTR [rax],al
   14005d492:	add    BYTE PTR [rax-0x80000000],al
   14005d498:	add    BYTE PTR [rax],al
   14005d49a:	add    BYTE PTR [rax-0x80000000],al
   14005d4a0:	add    BYTE PTR [rax],al
   14005d4a2:	add    BYTE PTR [rax-0x80000000],al
   14005d4a8:	add    BYTE PTR [rax],al
   14005d4aa:	add    BYTE PTR [rax-0x80000000],al
   14005d4b0:	(bad)  
   14005d4b1:	(bad)  
   14005d4b2:	(bad)  
   14005d4b3:	(bad)  
   14005d4b4:	(bad)  
   14005d4b5:	(bad)  
   14005d4b6:	(bad)  
   14005d4b7:	inc    DWORD PTR [rax]
   14005d4b9:	add    BYTE PTR [rax],al
   14005d4bb:	add    BYTE PTR [rax],0x0
   14005d4be:	add    BYTE PTR [rax],al
   14005d4c0:	add    BYTE PTR [rax],al
   14005d4c2:	add    BYTE PTR [rax-0x1],al
   14005d4c8:	(bad)  
   14005d4c9:	(bad)  
   14005d4ca:	(bad)  
   14005d4cb:	(bad)  
   14005d4cc:	(bad)  
   14005d4cd:	(bad)  
   14005d4ce:	(bad)  
   14005d4cf:	(bad)  
   14005d4d0:	(bad)  
   14005d4d1:	(bad)  
   14005d4d2:	(bad)  
   14005d4d3:	(bad)  
   14005d4d4:	(bad)  
   14005d4d5:	(bad)  
   14005d4d6:	(bad)  
   14005d4d7:	(bad)  
   14005d4d8:	(bad)  
   14005d4d9:	(bad)  
   14005d4da:	(bad)  
   14005d4db:	(bad)  
   14005d4dc:	(bad)  
   14005d4dd:	(bad)  
   14005d4de:	(bad)  
   14005d4df:	(bad)  
   14005d4e0:	(bad)  
   14005d4e1:	(bad)  
   14005d4e2:	(bad)  
   14005d4e3:	(bad)  
   14005d4e4:	(bad)  
   14005d4e5:	(bad)  
   14005d4e6:	(bad)  
   14005d4e7:	(bad)  
   14005d4e8:	(bad)  
   14005d4e9:	(bad)  
   14005d4ea:	(bad)  
   14005d4eb:	(bad)  
   14005d4ec:	(bad)  
   14005d4ed:	(bad)  
   14005d4ee:	(bad)  
   14005d4ef:	(bad)  
   14005d4f0:	(bad)  
   14005d4f1:	(bad)  
   14005d4f2:	(bad)  
   14005d4f3:	(bad)  
   14005d4f4:	(bad)  
   14005d4f5:	(bad)  
   14005d4f6:	(bad)  
   14005d4f7:	(bad)  
   14005d4f8:	(bad)  
   14005d4f9:	(bad)  
   14005d4fa:	(bad)  
   14005d4fb:	(bad)  
   14005d4fc:	(bad)  
   14005d4fd:	(bad)  
   14005d4fe:	(bad)  
   14005d4ff:	(bad)  
   14005d500:	(bad)  
   14005d501:	(bad)  
   14005d502:	(bad)  
   14005d503:	(bad)  
   14005d504:	(bad)  
   14005d505:	(bad)  
   14005d506:	(bad)  
   14005d507:	(bad)  
   14005d508:	(bad)  
   14005d509:	(bad)  
   14005d50a:	(bad)  
   14005d50b:	(bad)  
   14005d50c:	(bad)  
   14005d50d:	(bad)  
   14005d50e:	(bad)  
   14005d50f:	(bad)  
   14005d510:	(bad)  
   14005d511:	(bad)  
   14005d512:	(bad)  
   14005d513:	(bad)  
   14005d514:	(bad)  
   14005d515:	(bad)  
   14005d516:	(bad)  
   14005d517:	(bad)  
   14005d518:	(bad)  
   14005d519:	(bad)  
   14005d51a:	(bad)  
   14005d51b:	(bad)  
   14005d51c:	(bad)  
   14005d51d:	(bad)  
   14005d51e:	(bad)  
   14005d51f:	(bad)  
   14005d520:	(bad)  
   14005d521:	(bad)  
   14005d522:	(bad)  
   14005d523:	(bad)  
   14005d524:	(bad)  
   14005d525:	(bad)  
   14005d526:	(bad)  
   14005d527:	(bad)  
   14005d528:	(bad)  
   14005d529:	(bad)  
   14005d52a:	(bad)  
   14005d52b:	(bad)  
   14005d52c:	(bad)  
   14005d52d:	(bad)  
   14005d52e:	(bad)  
   14005d52f:	(bad)  
   14005d530:	(bad)  
   14005d531:	(bad)  
   14005d532:	(bad)  
   14005d533:	(bad)  
   14005d534:	(bad)  
   14005d535:	(bad)  
   14005d536:	(bad)  
   14005d537:	inc    DWORD PTR [rax]
   14005d539:	add    BYTE PTR [rax],al
   14005d53b:	add    BYTE PTR [rax],0x0
   14005d53e:	add    BYTE PTR [rax],al
   14005d540:	add    BYTE PTR [rax],al
   14005d542:	add    BYTE PTR [rax-0x1b],bh
   14005d545:	in     eax,0xe5
   14005d547:	out    0xff,eax
   14005d549:	(bad)  
   14005d54a:	(bad)  
   14005d54b:	(bad)  
   14005d54c:	(bad)  
   14005d54d:	(bad)  
   14005d54e:	(bad)  
   14005d54f:	(bad)  
   14005d550:	(bad)  
   14005d551:	(bad)  
   14005d552:	(bad)  
   14005d553:	(bad)  
   14005d554:	(bad)  
   14005d555:	(bad)  
   14005d556:	(bad)  
   14005d557:	(bad)  
   14005d558:	(bad)  
   14005d559:	(bad)  
   14005d55a:	(bad)  
   14005d55b:	(bad)  
   14005d55c:	(bad)  
   14005d55d:	(bad)  
   14005d55e:	(bad)  
   14005d55f:	(bad)  
   14005d560:	(bad)  
   14005d561:	(bad)  
   14005d562:	(bad)  
   14005d563:	(bad)  
   14005d564:	(bad)  
   14005d565:	(bad)  
   14005d566:	(bad)  
   14005d567:	(bad)  
   14005d568:	(bad)  
   14005d569:	(bad)  
   14005d56a:	(bad)  
   14005d56b:	(bad)  
   14005d56c:	(bad)  
   14005d56d:	(bad)  
   14005d56e:	(bad)  
   14005d56f:	(bad)  
   14005d570:	(bad)  
   14005d571:	(bad)  
   14005d572:	(bad)  
   14005d573:	(bad)  
   14005d574:	(bad)  
   14005d575:	(bad)  
   14005d576:	(bad)  
   14005d577:	(bad)  
   14005d578:	(bad)  
   14005d579:	(bad)  
   14005d57a:	(bad)  
   14005d57b:	(bad)  
   14005d57c:	(bad)  
   14005d57d:	(bad)  
   14005d57e:	(bad)  
   14005d57f:	(bad)  
   14005d580:	(bad)  
   14005d581:	(bad)  
   14005d582:	(bad)  
   14005d583:	(bad)  
   14005d584:	(bad)  
   14005d585:	(bad)  
   14005d586:	(bad)  
   14005d587:	(bad)  
   14005d588:	(bad)  
   14005d589:	(bad)  
   14005d58a:	(bad)  
   14005d58b:	(bad)  
   14005d58c:	(bad)  
   14005d58d:	(bad)  
   14005d58e:	(bad)  
   14005d58f:	(bad)  
   14005d590:	(bad)  
   14005d591:	(bad)  
   14005d592:	(bad)  
   14005d593:	(bad)  
   14005d594:	(bad)  
   14005d595:	(bad)  
   14005d596:	(bad)  
   14005d597:	(bad)  
   14005d598:	(bad)  
   14005d599:	(bad)  
   14005d59a:	(bad)  
   14005d59b:	(bad)  
   14005d59c:	(bad)  
   14005d59d:	(bad)  
   14005d59e:	(bad)  
   14005d59f:	(bad)  
   14005d5a0:	(bad)  
   14005d5a1:	(bad)  
   14005d5a2:	(bad)  
   14005d5a3:	(bad)  
   14005d5a4:	(bad)  
   14005d5a5:	(bad)  
   14005d5a6:	(bad)  
   14005d5a7:	(bad)  
   14005d5a8:	(bad)  
   14005d5a9:	(bad)  
   14005d5aa:	(bad)  
   14005d5ab:	(bad)  
   14005d5ac:	(bad)  
   14005d5ad:	(bad)  
   14005d5ae:	(bad)  
   14005d5af:	(bad)  
   14005d5b0:	(bad)  
   14005d5b1:	(bad)  
   14005d5b2:	(bad)  
   14005d5b3:	jmp    rbp
   14005d5b5:	in     eax,0xe5
   14005d5b7:	out    0x0,eax
   14005d5b9:	add    BYTE PTR [rax],al
   14005d5bb:	js     0x14005d5bd
   14005d5bd:	add    BYTE PTR [rax],al
   14005d5bf:	add    BYTE PTR [rax],al
   14005d5c1:	add    BYTE PTR [rax],al
   14005d5c3:	sub    BYTE PTR [rax],al
   14005d5c5:	add    BYTE PTR [rax],al
   14005d5c7:	js     0x14005d5c9
   14005d5c9:	add    BYTE PTR [rax],al
   14005d5cb:	add    BYTE PTR [rax],0x0
   14005d5ce:	add    BYTE PTR [rax-0x80000000],al
   14005d5d4:	add    BYTE PTR [rax],al
   14005d5d6:	add    BYTE PTR [rax-0x80000000],al
   14005d5dc:	add    BYTE PTR [rax],al
   14005d5de:	add    BYTE PTR [rax-0x80000000],al
   14005d5e4:	add    BYTE PTR [rax],al
   14005d5e6:	add    BYTE PTR [rax-0x80000000],al
   14005d5ec:	add    BYTE PTR [rax],al
   14005d5ee:	add    BYTE PTR [rax-0x80000000],al
   14005d5f4:	add    BYTE PTR [rax],al
   14005d5f6:	add    BYTE PTR [rax-0x80000000],al
   14005d5fc:	add    BYTE PTR [rax],al
   14005d5fe:	add    BYTE PTR [rax-0x80000000],al
   14005d604:	add    BYTE PTR [rax],al
   14005d606:	add    BYTE PTR [rax-0x80000000],al
   14005d60c:	add    BYTE PTR [rax],al
   14005d60e:	add    BYTE PTR [rax-0x80000000],al
   14005d614:	add    BYTE PTR [rax],al
   14005d616:	add    BYTE PTR [rax-0x80000000],al
   14005d61c:	add    BYTE PTR [rax],al
   14005d61e:	add    BYTE PTR [rax-0x80000000],al
   14005d624:	add    BYTE PTR [rax],al
   14005d626:	add    BYTE PTR [rax-0x80000000],al
   14005d62c:	add    BYTE PTR [rax],al
   14005d62e:	add    BYTE PTR [rax-0x80000000],al
   14005d634:	add    BYTE PTR [rax],al
   14005d636:	add    BYTE PTR [rax+0x0],bh
   14005d639:	add    BYTE PTR [rax],al
   14005d63b:	and    BYTE PTR [rax],al
	...
   14005d9bd:	add    BYTE PTR [rax],al
   14005d9bf:	add    bh,bh
   14005d9c1:	(bad)  
   14005d9c2:	(bad)  
   14005d9c3:	(bad)  
   14005d9c4:	(bad)  
   14005d9c5:	(bad)  
   14005d9c6:	(bad)  
   14005d9c7:	(bad)  
   14005d9c8:	(bad)  
   14005d9c9:	(bad)  
   14005d9ca:	(bad)  
   14005d9cb:	(bad)  
   14005d9cc:	(bad)  
   14005d9cd:	(bad)  
   14005d9ce:	(bad)  
   14005d9cf:	(bad)  
   14005d9d0:	(bad)  
   14005d9d1:	(bad)  
   14005d9d2:	(bad)  
   14005d9d3:	(bad)  
   14005d9d4:	(bad)  
   14005d9d5:	(bad)  
   14005d9d6:	(bad)  
   14005d9d7:	inc    DWORD PTR [rax]
   14005d9d9:	add    BYTE PTR [rax],al
   14005d9db:	add    DWORD PTR [rax],eax
   14005d9dd:	add    BYTE PTR [rax],al
   14005d9df:	add    DWORD PTR [rax],eax
   14005d9e1:	add    BYTE PTR [rax],al
   14005d9e3:	add    DWORD PTR [rax],eax
   14005d9e5:	add    BYTE PTR [rax],al
   14005d9e7:	add    DWORD PTR [rax],eax
   14005d9e9:	add    BYTE PTR [rax],al
   14005d9eb:	add    DWORD PTR [rax],eax
   14005d9ed:	add    BYTE PTR [rax],al
   14005d9ef:	add    DWORD PTR [rax],eax
   14005d9f1:	add    BYTE PTR [rax],al
   14005d9f3:	add    DWORD PTR [rax],eax
   14005d9f5:	add    BYTE PTR [rax],al
   14005d9f7:	add    DWORD PTR [rax],eax
   14005d9f9:	add    BYTE PTR [rax],al
   14005d9fb:	add    DWORD PTR [rax],eax
   14005d9fd:	add    BYTE PTR [rax],al
   14005d9ff:	add    DWORD PTR [rax],eax
   14005da01:	add    BYTE PTR [rax],al
   14005da03:	add    DWORD PTR [rax],eax
   14005da05:	add    BYTE PTR [rax],al
   14005da07:	add    DWORD PTR [rax],eax
   14005da09:	add    BYTE PTR [rax],al
   14005da0b:	add    DWORD PTR [rax],eax
   14005da0d:	add    BYTE PTR [rax],al
   14005da0f:	add    DWORD PTR [rax],eax
   14005da11:	add    BYTE PTR [rax],al
   14005da13:	add    DWORD PTR [rax],eax
   14005da15:	add    BYTE PTR [rax],al
   14005da17:	add    DWORD PTR [rax],eax
   14005da19:	add    BYTE PTR [rax],al
   14005da1b:	add    DWORD PTR [rax],eax
   14005da1d:	add    BYTE PTR [rax],al
   14005da1f:	add    DWORD PTR [rax],eax
   14005da21:	add    BYTE PTR [rax],al
   14005da23:	add    edi,edi
   14005da25:	(bad)  
   14005da26:	(bad)  
   14005da27:	(bad)  
   14005da28:	(bad)  
   14005da29:	(bad)  
   14005da2a:	(bad)  
   14005da2b:	(bad)  
   14005da2c:	(bad)  
   14005da2d:	(bad)  
   14005da2e:	(bad)  
   14005da2f:	(bad)  
   14005da30:	(bad)  
   14005da31:	(bad)  
   14005da32:	(bad)  
   14005da33:	(bad)  
   14005da34:	(bad)  
   14005da35:	(bad)  
   14005da36:	(bad)  
   14005da37:	(bad)  
   14005da38:	(bad)  
   14005da39:	(bad)  
   14005da3a:	(bad)  
   14005da3b:	(bad)  
   14005da3c:	(bad)  
   14005da3d:	(bad)  
   14005da3e:	(bad)  
   14005da3f:	jmp    FWORD PTR [rax]
   14005da41:	add    BYTE PTR [rax],al
   14005da43:	add    BYTE PTR [rax],bl
   14005da45:	add    BYTE PTR [rax],al
   14005da47:	add    BYTE PTR [rax],dh
   14005da49:	add    BYTE PTR [rax],al
   14005da4b:	add    BYTE PTR [rcx],al
   14005da4d:	add    BYTE PTR [rax],ah
   14005da4f:	add    BYTE PTR [rax],al
   14005da51:	add    BYTE PTR [rax],al
   14005da53:	add    BYTE PTR [rax+0x9],ah
	...
   14005dc4a:	add    BYTE PTR [rax+0x0],dl
   14005dc4d:	add    BYTE PTR [rax],al
   14005dc4f:	add    BYTE PTR [rax],0x0
   14005dc52:	add    BYTE PTR [rax-0x80000000],al
   14005dc58:	add    BYTE PTR [rax],al
   14005dc5a:	add    BYTE PTR [rax-0x80000000],al
   14005dc60:	add    BYTE PTR [rax],al
   14005dc62:	add    BYTE PTR [rax-0x80000000],al
   14005dc68:	add    BYTE PTR [rax],al
   14005dc6a:	add    BYTE PTR [rax-0x80000000],al
   14005dc70:	add    BYTE PTR [rax],al
   14005dc72:	add    BYTE PTR [rax-0x80000000],al
   14005dc78:	add    BYTE PTR [rax],al
   14005dc7a:	add    BYTE PTR [rax-0x80000000],al
   14005dc80:	add    BYTE PTR [rax],al
   14005dc82:	add    BYTE PTR [rax-0x80000000],al
   14005dc88:	add    BYTE PTR [rax],al
   14005dc8a:	add    BYTE PTR [rax-0x80000000],al
   14005dc90:	add    BYTE PTR [rax],al
   14005dc92:	add    BYTE PTR [rax-0x80000000],al
   14005dc98:	add    BYTE PTR [rax],al
   14005dc9a:	add    BYTE PTR [rax-0x80000000],al
   14005dca0:	add    BYTE PTR [rax],al
   14005dca2:	add    BYTE PTR [rax+0x0],dl
   14005dca5:	add    BYTE PTR [rax],al
   14005dca7:	add    BYTE PTR [rax],al
   14005dca9:	add    BYTE PTR [rax],al
   14005dcab:	cmp    bh,0xff
   14005dcae:	(bad)  
   14005dcaf:	(bad)  
   14005dcb0:	(bad)  
   14005dcb1:	(bad)  
   14005dcb2:	(bad)  
   14005dcb3:	(bad)  
   14005dcb4:	(bad)  
   14005dcb5:	(bad)  
   14005dcb6:	(bad)  
   14005dcb7:	(bad)  
   14005dcb8:	(bad)  
   14005dcb9:	(bad)  
   14005dcba:	(bad)  
   14005dcbb:	(bad)  
   14005dcbc:	(bad)  
   14005dcbd:	(bad)  
   14005dcbe:	(bad)  
   14005dcbf:	(bad)  
   14005dcc0:	(bad)  
   14005dcc1:	(bad)  
   14005dcc2:	(bad)  
   14005dcc3:	(bad)  
   14005dcc4:	(bad)  
   14005dcc5:	(bad)  
   14005dcc6:	(bad)  
   14005dcc7:	(bad)  
   14005dcc8:	(bad)  
   14005dcc9:	(bad)  
   14005dcca:	(bad)  
   14005dccb:	(bad)  
   14005dccc:	(bad)  
   14005dccd:	(bad)  
   14005dcce:	(bad)  
   14005dccf:	(bad)  
   14005dcd0:	(bad)  
   14005dcd1:	(bad)  
   14005dcd2:	(bad)  
   14005dcd3:	(bad)  
   14005dcd4:	(bad)  
   14005dcd5:	(bad)  
   14005dcd6:	(bad)  
   14005dcd7:	(bad)  
   14005dcd8:	(bad)  
   14005dcd9:	(bad)  
   14005dcda:	(bad)  
   14005dcdb:	(bad)  
   14005dcdc:	(bad)  
   14005dcdd:	(bad)  
   14005dcde:	(bad)  
   14005dcdf:	(bad)  
   14005dce0:	(bad)  
   14005dce1:	(bad)  
   14005dce2:	(bad)  
   14005dce3:	(bad)  
   14005dce4:	(bad)  
   14005dce5:	(bad)  
   14005dce6:	(bad)  
   14005dce7:	(bad)  
   14005dce8:	(bad)  
   14005dce9:	(bad)  
   14005dcea:	(bad)  
   14005dceb:	(bad)  
   14005dcec:	(bad)  
   14005dced:	(bad)  
   14005dcee:	(bad)  
   14005dcef:	(bad)  
   14005dcf0:	(bad)  
   14005dcf1:	(bad)  
   14005dcf2:	(bad)  
   14005dcf3:	(bad)  
   14005dcf4:	(bad)  
   14005dcf5:	(bad)  
   14005dcf6:	(bad)  
   14005dcf7:	(bad)  
   14005dcf8:	(bad)  
   14005dcf9:	(bad)  
   14005dcfa:	(bad)  
   14005dcfb:	(bad)  
   14005dcfc:	(bad)  
   14005dcfd:	(bad)  
   14005dcfe:	(bad)  
   14005dcff:	inc    DWORD PTR [rax]
   14005dd01:	add    BYTE PTR [rax],al
   14005dd03:	add    BYTE PTR [rax],0x0
   14005dd06:	add    BYTE PTR [rax],al
   14005dd08:	add    BYTE PTR [rax],al
   14005dd0a:	add    BYTE PTR [rax-0x1],al
   14005dd10:	add    BYTE PTR [rax],al
   14005dd12:	add    BYTE PTR [rax-0x80000000],al
   14005dd18:	add    BYTE PTR [rax],al
   14005dd1a:	add    BYTE PTR [rax-0x80000000],al
   14005dd20:	add    BYTE PTR [rax],al
   14005dd22:	add    BYTE PTR [rax-0x80000000],al
   14005dd28:	add    BYTE PTR [rax],al
   14005dd2a:	add    BYTE PTR [rax-0x80000000],al
   14005dd30:	add    BYTE PTR [rax],al
   14005dd32:	add    BYTE PTR [rax-0x80000000],al
   14005dd38:	add    BYTE PTR [rax],al
   14005dd3a:	add    BYTE PTR [rax-0x80000000],al
   14005dd40:	add    BYTE PTR [rax],al
   14005dd42:	add    BYTE PTR [rax-0x80000000],al
   14005dd48:	add    BYTE PTR [rax],al
   14005dd4a:	add    BYTE PTR [rax-0x80000000],al
   14005dd50:	add    BYTE PTR [rax],al
   14005dd52:	add    BYTE PTR [rax-0x80000000],al
   14005dd58:	add    BYTE PTR [rax],al
   14005dd5a:	add    BYTE PTR [rax-0x1],al
   14005dd60:	add    BYTE PTR [rax],al
   14005dd62:	add    BYTE PTR [rax+0x0],al
   14005dd68:	add    BYTE PTR [rax],al
   14005dd6a:	add    BYTE PTR [rax-0x1],al
   14005dd70:	add    BYTE PTR [rax],al
   14005dd72:	add    BYTE PTR [rax-0x1],al
   14005dd78:	(bad)  
   14005dd79:	(bad)  
   14005dd7a:	(bad)  
   14005dd7b:	(bad)  
   14005dd7c:	(bad)  
   14005dd7d:	(bad)  
   14005dd7e:	(bad)  
   14005dd7f:	(bad)  
   14005dd80:	(bad)  
   14005dd81:	(bad)  
   14005dd82:	(bad)  
   14005dd83:	inc    DWORD PTR [rax]
   14005dd85:	add    BYTE PTR [rax],al
   14005dd87:	cmp    bh,0xff
   14005dd8a:	(bad)  
   14005dd8b:	(bad)  
   14005dd8c:	(bad)  
   14005dd8d:	(bad)  
   14005dd8e:	(bad)  
   14005dd8f:	(bad)  
   14005dd90:	(bad)  
   14005dd91:	(bad)  
   14005dd92:	(bad)  
   14005dd93:	(bad)  
   14005dd94:	(bad)  
   14005dd95:	(bad)  
   14005dd96:	(bad)  
   14005dd97:	(bad)  
   14005dd98:	(bad)  
   14005dd99:	(bad)  
   14005dd9a:	(bad)  
   14005dd9b:	(bad)  
   14005dd9c:	(bad)  
   14005dd9d:	(bad)  
   14005dd9e:	(bad)  
   14005dd9f:	(bad)  
   14005dda0:	(bad)  
   14005dda1:	(bad)  
   14005dda2:	(bad)  
   14005dda3:	inc    DWORD PTR [rax]
   14005dda5:	add    BYTE PTR [rax],al
   14005dda7:	cmp    bh,0xff
   14005ddaa:	(bad)  
   14005ddab:	(bad)  
   14005ddac:	(bad)  
   14005ddad:	(bad)  
   14005ddae:	(bad)  
   14005ddaf:	(bad)  
   14005ddb0:	(bad)  
   14005ddb1:	(bad)  
   14005ddb2:	(bad)  
   14005ddb3:	(bad)  
   14005ddb4:	(bad)  
   14005ddb5:	(bad)  
   14005ddb6:	(bad)  
   14005ddb7:	inc    DWORD PTR [rax]
   14005ddb9:	add    BYTE PTR [rax],al
   14005ddbb:	cmp    bh,0xff
   14005ddbe:	(bad)  
   14005ddbf:	inc    DWORD PTR [rax]
   14005ddc1:	add    BYTE PTR [rax],al
   14005ddc3:	add    BYTE PTR [rax],0x0
   14005ddc6:	add    BYTE PTR [rax],al
   14005ddc8:	add    BYTE PTR [rax],al
   14005ddca:	add    BYTE PTR [rax-0x1],al
   14005ddd0:	add    BYTE PTR [rax],al
   14005ddd2:	add    BYTE PTR [rax-0x1],al
   14005ddd8:	(bad)  
   14005ddd9:	(bad)  
   14005ddda:	(bad)  
   14005dddb:	(bad)  
   14005dddc:	(bad)  
   14005dddd:	(bad)  
   14005ddde:	(bad)  
   14005dddf:	(bad)  
   14005dde0:	(bad)  
   14005dde1:	(bad)  
   14005dde2:	(bad)  
   14005dde3:	inc    DWORD PTR [rax]
   14005dde5:	add    BYTE PTR [rax],al
   14005dde7:	cmp    bh,0xff
   14005ddea:	(bad)  
   14005ddeb:	(bad)  
   14005ddec:	(bad)  
   14005dded:	(bad)  
   14005ddee:	(bad)  
   14005ddef:	(bad)  
   14005ddf0:	(bad)  
   14005ddf1:	(bad)  
   14005ddf2:	(bad)  
   14005ddf3:	(bad)  
   14005ddf4:	(bad)  
   14005ddf5:	(bad)  
   14005ddf6:	(bad)  
   14005ddf7:	(bad)  
   14005ddf8:	(bad)  
   14005ddf9:	(bad)  
   14005ddfa:	(bad)  
   14005ddfb:	(bad)  
   14005ddfc:	(bad)  
   14005ddfd:	(bad)  
   14005ddfe:	(bad)  
   14005ddff:	(bad)  
   14005de00:	(bad)  
   14005de01:	(bad)  
   14005de02:	(bad)  
   14005de03:	inc    DWORD PTR [rax]
   14005de05:	add    BYTE PTR [rax],al
   14005de07:	cmp    bh,0xff
   14005de0a:	(bad)  
   14005de0b:	(bad)  
   14005de0c:	(bad)  
   14005de0d:	(bad)  
   14005de0e:	(bad)  
   14005de0f:	(bad)  
   14005de10:	(bad)  
   14005de11:	(bad)  
   14005de12:	(bad)  
   14005de13:	(bad)  
   14005de14:	(bad)  
   14005de15:	(bad)  
   14005de16:	(bad)  
   14005de17:	inc    DWORD PTR [rax]
   14005de19:	add    BYTE PTR [rax],al
   14005de1b:	cmp    bh,0xff
   14005de1e:	(bad)  
   14005de1f:	inc    DWORD PTR [rax]
   14005de21:	add    BYTE PTR [rax],al
   14005de23:	add    BYTE PTR [rax],0x0
   14005de26:	add    BYTE PTR [rax],al
   14005de28:	add    BYTE PTR [rax],al
   14005de2a:	add    BYTE PTR [rax-0x1],al
   14005de30:	add    BYTE PTR [rax],al
   14005de32:	add    BYTE PTR [rax-0x80000000],al
   14005de38:	add    BYTE PTR [rax],al
   14005de3a:	add    BYTE PTR [rax-0x80000000],al
   14005de40:	add    BYTE PTR [rax],al
   14005de42:	add    BYTE PTR [rax-0x80000000],al
   14005de48:	add    BYTE PTR [rax],al
   14005de4a:	add    BYTE PTR [rax-0x80000000],al
   14005de50:	add    BYTE PTR [rax],al
   14005de52:	add    BYTE PTR [rax-0x80000000],al
   14005de58:	add    BYTE PTR [rax],al
   14005de5a:	add    BYTE PTR [rax-0x80000000],al
   14005de60:	add    BYTE PTR [rax],al
   14005de62:	add    BYTE PTR [rax-0x80000000],al
   14005de68:	add    BYTE PTR [rax],al
   14005de6a:	add    BYTE PTR [rax-0x80000000],al
   14005de70:	add    BYTE PTR [rax],al
   14005de72:	add    BYTE PTR [rax-0x80000000],al
   14005de78:	add    BYTE PTR [rax],al
   14005de7a:	add    BYTE PTR [rax-0x1],al
   14005de80:	add    BYTE PTR [rax],al
   14005de82:	add    BYTE PTR [rax+0x0],al
   14005de88:	add    BYTE PTR [rax],al
   14005de8a:	add    BYTE PTR [rax-0x1],al
   14005de90:	add    BYTE PTR [rax],al
   14005de92:	add    BYTE PTR [rax-0x1],al
   14005de98:	(bad)  
   14005de99:	(bad)  
   14005de9a:	(bad)  
   14005de9b:	inc    DWORD PTR [rax]
   14005de9d:	add    BYTE PTR [rax],al
   14005de9f:	cmp    bh,0xff
   14005dea2:	(bad)  
   14005dea3:	(bad)  
   14005dea4:	(bad)  
   14005dea5:	(bad)  
   14005dea6:	(bad)  
   14005dea7:	inc    DWORD PTR [rax]
   14005dea9:	add    BYTE PTR [rax],al
   14005deab:	cmp    bh,0xff
   14005deae:	(bad)  
   14005deaf:	(bad)  
   14005deb0:	(bad)  
   14005deb1:	(bad)  
   14005deb2:	(bad)  
   14005deb3:	inc    DWORD PTR [rax]
   14005deb5:	add    BYTE PTR [rax],al
   14005deb7:	cmp    bh,0xff
   14005deba:	(bad)  
   14005debb:	(bad)  
   14005debc:	(bad)  
   14005debd:	(bad)  
   14005debe:	(bad)  
   14005debf:	inc    DWORD PTR [rax]
   14005dec1:	add    BYTE PTR [rax],al
   14005dec3:	cmp    bh,0xff
   14005dec6:	(bad)  
   14005dec7:	(bad)  
   14005dec8:	(bad)  
   14005dec9:	(bad)  
   14005deca:	(bad)  
   14005decb:	inc    DWORD PTR [rax]
   14005decd:	add    BYTE PTR [rax],al
   14005decf:	cmp    bh,0xff
   14005ded2:	(bad)  
   14005ded3:	(bad)  
   14005ded4:	(bad)  
   14005ded5:	(bad)  
   14005ded6:	(bad)  
   14005ded7:	inc    DWORD PTR [rax]
   14005ded9:	add    BYTE PTR [rax],al
   14005dedb:	cmp    bh,0xff
   14005dede:	(bad)  
   14005dedf:	inc    DWORD PTR [rax]
   14005dee1:	add    BYTE PTR [rax],al
   14005dee3:	add    BYTE PTR [rax],0x0
   14005dee6:	add    BYTE PTR [rax],al
   14005dee8:	add    BYTE PTR [rax],al
   14005deea:	add    BYTE PTR [rax-0x1],al
   14005def0:	add    BYTE PTR [rax],al
   14005def2:	add    BYTE PTR [rax-0x1],al
   14005def8:	(bad)  
   14005def9:	(bad)  
   14005defa:	(bad)  
   14005defb:	inc    DWORD PTR [rax]
   14005defd:	add    BYTE PTR [rax],al
   14005deff:	cmp    bh,0xff
   14005df02:	(bad)  
   14005df03:	(bad)  
   14005df04:	(bad)  
   14005df05:	(bad)  
   14005df06:	(bad)  
   14005df07:	inc    DWORD PTR [rax]
   14005df09:	add    BYTE PTR [rax],al
   14005df0b:	cmp    bh,0xff
   14005df0e:	(bad)  
   14005df0f:	(bad)  
   14005df10:	(bad)  
   14005df11:	(bad)  
   14005df12:	(bad)  
   14005df13:	inc    DWORD PTR [rax]
   14005df15:	add    BYTE PTR [rax],al
   14005df17:	cmp    bh,0xff
   14005df1a:	(bad)  
   14005df1b:	(bad)  
   14005df1c:	(bad)  
   14005df1d:	(bad)  
   14005df1e:	(bad)  
   14005df1f:	inc    DWORD PTR [rax]
   14005df21:	add    BYTE PTR [rax],al
   14005df23:	cmp    bh,0xff
   14005df26:	(bad)  
   14005df27:	(bad)  
   14005df28:	(bad)  
   14005df29:	(bad)  
   14005df2a:	(bad)  
   14005df2b:	inc    DWORD PTR [rax]
   14005df2d:	add    BYTE PTR [rax],al
   14005df2f:	cmp    bh,0xff
   14005df32:	(bad)  
   14005df33:	(bad)  
   14005df34:	(bad)  
   14005df35:	(bad)  
   14005df36:	(bad)  
   14005df37:	inc    DWORD PTR [rax]
   14005df39:	add    BYTE PTR [rax],al
   14005df3b:	cmp    bh,0xff
   14005df3e:	(bad)  
   14005df3f:	inc    DWORD PTR [rax]
   14005df41:	add    BYTE PTR [rax],al
   14005df43:	add    BYTE PTR [rax],0x0
   14005df46:	add    BYTE PTR [rax],al
   14005df48:	add    BYTE PTR [rax],al
   14005df4a:	add    BYTE PTR [rax-0x1],al
   14005df50:	add    BYTE PTR [rax],al
   14005df52:	add    BYTE PTR [rax-0x80000000],al
   14005df58:	add    BYTE PTR [rax],al
   14005df5a:	add    BYTE PTR [rax-0x80000000],al
   14005df60:	add    BYTE PTR [rax],al
   14005df62:	add    BYTE PTR [rax-0x80000000],al
   14005df68:	add    BYTE PTR [rax],al
   14005df6a:	add    BYTE PTR [rax-0x80000000],al
   14005df70:	add    BYTE PTR [rax],al
   14005df72:	add    BYTE PTR [rax-0x80000000],al
   14005df78:	add    BYTE PTR [rax],al
   14005df7a:	add    BYTE PTR [rax-0x80000000],al
   14005df80:	add    BYTE PTR [rax],al
   14005df82:	add    BYTE PTR [rax-0x80000000],al
   14005df88:	add    BYTE PTR [rax],al
   14005df8a:	add    BYTE PTR [rax-0x80000000],al
   14005df90:	add    BYTE PTR [rax],al
   14005df92:	add    BYTE PTR [rax-0x80000000],al
   14005df98:	add    BYTE PTR [rax],al
   14005df9a:	add    BYTE PTR [rax-0x1],al
   14005dfa0:	add    BYTE PTR [rax],al
   14005dfa2:	add    BYTE PTR [rax+0x0],al
   14005dfa8:	add    BYTE PTR [rax],al
   14005dfaa:	add    BYTE PTR [rax-0x1],al
   14005dfb0:	add    BYTE PTR [rax],al
   14005dfb2:	add    BYTE PTR [rax-0x1],al
   14005dfb8:	(bad)  
   14005dfb9:	(bad)  
   14005dfba:	(bad)  
   14005dfbb:	inc    DWORD PTR [rax]
   14005dfbd:	add    BYTE PTR [rax],al
   14005dfbf:	cmp    bh,0xff
   14005dfc2:	(bad)  
   14005dfc3:	(bad)  
   14005dfc4:	(bad)  
   14005dfc5:	(bad)  
   14005dfc6:	(bad)  
   14005dfc7:	inc    DWORD PTR [rax]
   14005dfc9:	add    BYTE PTR [rax],al
   14005dfcb:	cmp    bh,0xff
   14005dfce:	(bad)  
   14005dfcf:	(bad)  
   14005dfd0:	(bad)  
   14005dfd1:	(bad)  
   14005dfd2:	(bad)  
   14005dfd3:	inc    DWORD PTR [rax]
   14005dfd5:	add    BYTE PTR [rax],al
   14005dfd7:	cmp    bh,0xff
   14005dfda:	(bad)  
   14005dfdb:	(bad)  
   14005dfdc:	(bad)  
   14005dfdd:	(bad)  
   14005dfde:	(bad)  
   14005dfdf:	inc    DWORD PTR [rax]
   14005dfe1:	add    BYTE PTR [rax],al
   14005dfe3:	cmp    bh,0xff
   14005dfe6:	(bad)  
   14005dfe7:	(bad)  
   14005dfe8:	(bad)  
   14005dfe9:	(bad)  
   14005dfea:	(bad)  
   14005dfeb:	inc    DWORD PTR [rax]
   14005dfed:	add    BYTE PTR [rax],al
   14005dfef:	cmp    bh,0xff
   14005dff2:	(bad)  
   14005dff3:	(bad)  
   14005dff4:	(bad)  
   14005dff5:	(bad)  
   14005dff6:	(bad)  
   14005dff7:	inc    DWORD PTR [rax]
   14005dff9:	add    BYTE PTR [rax],al
   14005dffb:	cmp    bh,0xff
   14005dffe:	(bad)  
   14005dfff:	inc    DWORD PTR [rax]
   14005e001:	add    BYTE PTR [rax],al
   14005e003:	add    BYTE PTR [rax],0x0
   14005e006:	add    BYTE PTR [rax],al
   14005e008:	add    BYTE PTR [rax],al
   14005e00a:	add    BYTE PTR [rax-0x1],al
   14005e010:	add    BYTE PTR [rax],al
   14005e012:	add    BYTE PTR [rax-0x1],al
   14005e018:	(bad)  
   14005e019:	(bad)  
   14005e01a:	(bad)  
   14005e01b:	inc    DWORD PTR [rax]
   14005e01d:	add    BYTE PTR [rax],al
   14005e01f:	cmp    bh,0xff
   14005e022:	(bad)  
   14005e023:	(bad)  
   14005e024:	(bad)  
   14005e025:	(bad)  
   14005e026:	(bad)  
   14005e027:	inc    DWORD PTR [rax]
   14005e029:	add    BYTE PTR [rax],al
   14005e02b:	cmp    bh,0xff
   14005e02e:	(bad)  
   14005e02f:	(bad)  
   14005e030:	(bad)  
   14005e031:	(bad)  
   14005e032:	(bad)  
   14005e033:	inc    DWORD PTR [rax]
   14005e035:	add    BYTE PTR [rax],al
   14005e037:	cmp    bh,0xff
   14005e03a:	(bad)  
   14005e03b:	(bad)  
   14005e03c:	(bad)  
   14005e03d:	(bad)  
   14005e03e:	(bad)  
   14005e03f:	inc    DWORD PTR [rax]
   14005e041:	add    BYTE PTR [rax],al
   14005e043:	cmp    bh,0xff
   14005e046:	(bad)  
   14005e047:	(bad)  
   14005e048:	(bad)  
   14005e049:	(bad)  
   14005e04a:	(bad)  
   14005e04b:	inc    DWORD PTR [rax]
   14005e04d:	add    BYTE PTR [rax],al
   14005e04f:	cmp    bh,0xff
   14005e052:	(bad)  
   14005e053:	(bad)  
   14005e054:	(bad)  
   14005e055:	(bad)  
   14005e056:	(bad)  
   14005e057:	inc    DWORD PTR [rax]
   14005e059:	add    BYTE PTR [rax],al
   14005e05b:	cmp    bh,0xff
   14005e05e:	(bad)  
   14005e05f:	inc    DWORD PTR [rax]
   14005e061:	add    BYTE PTR [rax],al
   14005e063:	add    BYTE PTR [rax],0x0
   14005e066:	add    BYTE PTR [rax],al
   14005e068:	add    BYTE PTR [rax],al
   14005e06a:	add    BYTE PTR [rax-0x1],al
   14005e070:	add    BYTE PTR [rax],al
   14005e072:	add    BYTE PTR [rax-0x80000000],al
   14005e078:	add    BYTE PTR [rax],al
   14005e07a:	add    BYTE PTR [rax-0x80000000],al
   14005e080:	add    BYTE PTR [rax],al
   14005e082:	add    BYTE PTR [rax-0x80000000],al
   14005e088:	add    BYTE PTR [rax],al
   14005e08a:	add    BYTE PTR [rax-0x80000000],al
   14005e090:	add    BYTE PTR [rax],al
   14005e092:	add    BYTE PTR [rax-0x80000000],al
   14005e098:	add    BYTE PTR [rax],al
   14005e09a:	add    BYTE PTR [rax-0x80000000],al
   14005e0a0:	add    BYTE PTR [rax],al
   14005e0a2:	add    BYTE PTR [rax-0x80000000],al
   14005e0a8:	add    BYTE PTR [rax],al
   14005e0aa:	add    BYTE PTR [rax-0x80000000],al
   14005e0b0:	add    BYTE PTR [rax],al
   14005e0b2:	add    BYTE PTR [rax-0x80000000],al
   14005e0b8:	add    BYTE PTR [rax],al
   14005e0ba:	add    BYTE PTR [rax-0x1],al
   14005e0c0:	add    BYTE PTR [rax],al
   14005e0c2:	add    BYTE PTR [rax+0x0],al
   14005e0c8:	cmp    BYTE PTR [rax],bh
   14005e0ca:	cmp    BYTE PTR [rax-0x1],dl
   14005e0d0:	(bad)  
   14005e0d1:	(bad)  
   14005e0d2:	(bad)  
   14005e0d3:	(bad)  
   14005e0d4:	(bad)  
   14005e0d5:	(bad)  
   14005e0d6:	(bad)  
   14005e0d7:	(bad)  
   14005e0d8:	(bad)  
   14005e0d9:	(bad)  
   14005e0da:	(bad)  
   14005e0db:	(bad)  
   14005e0dc:	(bad)  
   14005e0dd:	(bad)  
   14005e0de:	(bad)  
   14005e0df:	(bad)  
   14005e0e0:	(bad)  
   14005e0e1:	(bad)  
   14005e0e2:	(bad)  
   14005e0e3:	(bad)  
   14005e0e4:	(bad)  
   14005e0e5:	(bad)  
   14005e0e6:	(bad)  
   14005e0e7:	(bad)  
   14005e0e8:	(bad)  
   14005e0e9:	(bad)  
   14005e0ea:	(bad)  
   14005e0eb:	(bad)  
   14005e0ec:	(bad)  
   14005e0ed:	(bad)  
   14005e0ee:	(bad)  
   14005e0ef:	(bad)  
   14005e0f0:	(bad)  
   14005e0f1:	(bad)  
   14005e0f2:	(bad)  
   14005e0f3:	(bad)  
   14005e0f4:	(bad)  
   14005e0f5:	(bad)  
   14005e0f6:	(bad)  
   14005e0f7:	(bad)  
   14005e0f8:	(bad)  
   14005e0f9:	(bad)  
   14005e0fa:	(bad)  
   14005e0fb:	(bad)  
   14005e0fc:	(bad)  
   14005e0fd:	(bad)  
   14005e0fe:	(bad)  
   14005e0ff:	(bad)  
   14005e100:	(bad)  
   14005e101:	(bad)  
   14005e102:	(bad)  
   14005e103:	(bad)  
   14005e104:	(bad)  
   14005e105:	(bad)  
   14005e106:	(bad)  
   14005e107:	(bad)  
   14005e108:	(bad)  
   14005e109:	(bad)  
   14005e10a:	(bad)  
   14005e10b:	(bad)  
   14005e10c:	(bad)  
   14005e10d:	(bad)  
   14005e10e:	(bad)  
   14005e10f:	(bad)  
   14005e110:	(bad)  
   14005e111:	(bad)  
   14005e112:	(bad)  
   14005e113:	(bad)  
   14005e114:	(bad)  
   14005e115:	(bad)  
   14005e116:	(bad)  
   14005e117:	(bad)  
   14005e118:	(bad)  
   14005e119:	(bad)  
   14005e11a:	(bad)  
   14005e11b:	(bad)  
   14005e11c:	(bad)  
   14005e11d:	(bad)  
   14005e11e:	(bad)  
   14005e11f:	inc    DWORD PTR [rax]
   14005e121:	add    BYTE PTR [rax],al
   14005e123:	add    BYTE PTR [rax],0x0
   14005e126:	add    BYTE PTR [rax],al
   14005e128:	add    BYTE PTR [rax],al
   14005e12a:	add    BYTE PTR [rax+0x0],dl
   14005e12d:	add    BYTE PTR [rax],al
   14005e12f:	add    BYTE PTR [rax],0x0
   14005e132:	add    BYTE PTR [rax-0x80000000],al
   14005e138:	add    BYTE PTR [rax],al
   14005e13a:	add    BYTE PTR [rax-0x80000000],al
   14005e140:	add    BYTE PTR [rax],al
   14005e142:	add    BYTE PTR [rax-0x80000000],al
   14005e148:	add    BYTE PTR [rax],al
   14005e14a:	add    BYTE PTR [rax-0x80000000],al
   14005e150:	add    BYTE PTR [rax],al
   14005e152:	add    BYTE PTR [rax-0x80000000],al
   14005e158:	add    BYTE PTR [rax],al
   14005e15a:	add    BYTE PTR [rax-0x80000000],al
   14005e160:	add    BYTE PTR [rax],al
   14005e162:	add    BYTE PTR [rax-0x80000000],al
   14005e168:	add    BYTE PTR [rax],al
   14005e16a:	add    BYTE PTR [rax-0x80000000],al
   14005e170:	add    BYTE PTR [rax],al
   14005e172:	add    BYTE PTR [rax-0x80000000],al
   14005e178:	add    BYTE PTR [rax],al
   14005e17a:	add    BYTE PTR [rax-0x80000000],al
   14005e180:	add    BYTE PTR [rax],al
   14005e182:	add    BYTE PTR [rax+0x0],dl
	...
   14005e365:	add    BYTE PTR [rax],al
   14005e367:	add    bh,bh
   14005e369:	(bad)  
   14005e36a:	inc    DWORD PTR [rax]
   14005e36c:	(bad)  
   14005e36d:	(bad)  
   14005e36e:	inc    DWORD PTR [rax]
   14005e370:	(bad)  
   14005e371:	(bad)  
   14005e372:	inc    DWORD PTR [rax]
   14005e374:	(bad)  
   14005e375:	(bad)  
   14005e376:	inc    DWORD PTR [rax]
   14005e378:	(bad)  
   14005e379:	(bad)  
   14005e37a:	inc    DWORD PTR [rax]
   14005e37c:	add    BYTE PTR [rax],al
   14005e37e:	add    DWORD PTR [rax],eax
   14005e380:	add    BYTE PTR [rax],al
   14005e382:	add    DWORD PTR [rax],eax
   14005e384:	add    BYTE PTR [rax],al
   14005e386:	add    DWORD PTR [rax],eax
   14005e388:	add    BYTE PTR [rax],al
   14005e38a:	add    DWORD PTR [rax],eax
   14005e38c:	add    BYTE PTR [rax],al
   14005e38e:	add    DWORD PTR [rax],eax
   14005e390:	add    BYTE PTR [rax],al
   14005e392:	add    DWORD PTR [rax],eax
   14005e394:	add    BYTE PTR [rax],al
   14005e396:	add    DWORD PTR [rax],eax
   14005e398:	add    BYTE PTR [rax],al
   14005e39a:	add    DWORD PTR [rax],eax
   14005e39c:	add    BYTE PTR [rax],al
   14005e39e:	add    DWORD PTR [rax],eax
   14005e3a0:	add    BYTE PTR [rax],al
   14005e3a2:	add    DWORD PTR [rax],eax
   14005e3a4:	add    BYTE PTR [rax],al
   14005e3a6:	add    DWORD PTR [rax],eax
   14005e3a8:	add    BYTE PTR [rax],al
   14005e3aa:	add    DWORD PTR [rax],eax
   14005e3ac:	add    BYTE PTR [rax],al
   14005e3ae:	add    DWORD PTR [rax],eax
   14005e3b0:	add    BYTE PTR [rax],al
   14005e3b2:	add    DWORD PTR [rax],eax
   14005e3b4:	(bad)  
   14005e3b5:	(bad)  
   14005e3b6:	inc    DWORD PTR [rax]
   14005e3b8:	(bad)  
   14005e3b9:	(bad)  
   14005e3ba:	inc    DWORD PTR [rax]
   14005e3bc:	(bad)  
   14005e3bd:	(bad)  
   14005e3be:	inc    DWORD PTR [rax]
   14005e3c0:	(bad)  
   14005e3c1:	(bad)  
   14005e3c2:	inc    DWORD PTR [rax]
   14005e3c4:	(bad)  
   14005e3c5:	(bad)  
   14005e3c6:	inc    DWORD PTR [rax]
   14005e3c8:	sub    BYTE PTR [rax],al
   14005e3ca:	add    BYTE PTR [rax],al
   14005e3cc:	adc    al,0x0
   14005e3ce:	add    BYTE PTR [rax],al
   14005e3d0:	sub    BYTE PTR [rax],al
   14005e3d2:	add    BYTE PTR [rax],al
   14005e3d4:	add    DWORD PTR [rax],eax
   14005e3d6:	and    BYTE PTR [rax],al
   14005e3d8:	add    BYTE PTR [rax],al
   14005e3da:	add    BYTE PTR [rax],al
   14005e3dc:	nop
   14005e3dd:	(bad)  
	...
   14005e532:	add    BYTE PTR [rax+0x0],dl
   14005e535:	add    BYTE PTR [rax],al
   14005e537:	add    BYTE PTR [rax],0x0
   14005e53a:	add    BYTE PTR [rax-0x80000000],al
   14005e540:	add    BYTE PTR [rax],al
   14005e542:	add    BYTE PTR [rax-0x80000000],al
   14005e548:	add    BYTE PTR [rax],al
   14005e54a:	add    BYTE PTR [rax-0x80000000],al
   14005e550:	add    BYTE PTR [rax],al
   14005e552:	add    BYTE PTR [rax-0x80000000],al
   14005e558:	add    BYTE PTR [rax],al
   14005e55a:	add    BYTE PTR [rax-0x80000000],al
   14005e560:	add    BYTE PTR [rax],al
   14005e562:	add    BYTE PTR [rax-0x80000000],al
   14005e568:	add    BYTE PTR [rax],al
   14005e56a:	add    BYTE PTR [rax-0x80000000],al
   14005e570:	add    BYTE PTR [rax],al
   14005e572:	add    BYTE PTR [rax-0x80000000],al
   14005e578:	add    BYTE PTR [rax],al
   14005e57a:	add    BYTE PTR [rax+0x0],dl
   14005e57d:	add    BYTE PTR [rax],al
   14005e57f:	add    BYTE PTR [rax],al
   14005e581:	add    BYTE PTR [rax],al
   14005e583:	cmp    bh,0xff
   14005e586:	(bad)  
   14005e587:	(bad)  
   14005e588:	(bad)  
   14005e589:	(bad)  
   14005e58a:	(bad)  
   14005e58b:	(bad)  
   14005e58c:	(bad)  
   14005e58d:	(bad)  
   14005e58e:	(bad)  
   14005e58f:	(bad)  
   14005e590:	(bad)  
   14005e591:	(bad)  
   14005e592:	(bad)  
   14005e593:	(bad)  
   14005e594:	(bad)  
   14005e595:	(bad)  
   14005e596:	(bad)  
   14005e597:	(bad)  
   14005e598:	(bad)  
   14005e599:	(bad)  
   14005e59a:	(bad)  
   14005e59b:	(bad)  
   14005e59c:	(bad)  
   14005e59d:	(bad)  
   14005e59e:	(bad)  
   14005e59f:	(bad)  
   14005e5a0:	(bad)  
   14005e5a1:	(bad)  
   14005e5a2:	(bad)  
   14005e5a3:	(bad)  
   14005e5a4:	(bad)  
   14005e5a5:	(bad)  
   14005e5a6:	(bad)  
   14005e5a7:	(bad)  
   14005e5a8:	(bad)  
   14005e5a9:	(bad)  
   14005e5aa:	(bad)  
   14005e5ab:	(bad)  
   14005e5ac:	(bad)  
   14005e5ad:	(bad)  
   14005e5ae:	(bad)  
   14005e5af:	(bad)  
   14005e5b0:	(bad)  
   14005e5b1:	(bad)  
   14005e5b2:	(bad)  
   14005e5b3:	(bad)  
   14005e5b4:	(bad)  
   14005e5b5:	(bad)  
   14005e5b6:	(bad)  
   14005e5b7:	(bad)  
   14005e5b8:	(bad)  
   14005e5b9:	(bad)  
   14005e5ba:	(bad)  
   14005e5bb:	(bad)  
   14005e5bc:	(bad)  
   14005e5bd:	(bad)  
   14005e5be:	(bad)  
   14005e5bf:	(bad)  
   14005e5c0:	(bad)  
   14005e5c1:	(bad)  
   14005e5c2:	(bad)  
   14005e5c3:	(bad)  
   14005e5c4:	(bad)  
   14005e5c5:	(bad)  
   14005e5c6:	(bad)  
   14005e5c7:	inc    DWORD PTR [rax]
   14005e5c9:	add    BYTE PTR [rax],al
   14005e5cb:	add    BYTE PTR [rax],0x0
   14005e5ce:	add    BYTE PTR [rax],al
   14005e5d0:	add    BYTE PTR [rax],al
   14005e5d2:	add    BYTE PTR [rax-0x1],al
   14005e5d8:	add    BYTE PTR [rax],al
   14005e5da:	add    BYTE PTR [rax-0x80000000],al
   14005e5e0:	add    BYTE PTR [rax],al
   14005e5e2:	add    BYTE PTR [rax-0x80000000],al
   14005e5e8:	add    BYTE PTR [rax],al
   14005e5ea:	add    BYTE PTR [rax-0x80000000],al
   14005e5f0:	add    BYTE PTR [rax],al
   14005e5f2:	add    BYTE PTR [rax-0x80000000],al
   14005e5f8:	add    BYTE PTR [rax],al
   14005e5fa:	add    BYTE PTR [rax-0x80000000],al
   14005e600:	add    BYTE PTR [rax],al
   14005e602:	add    BYTE PTR [rax-0x80000000],al
   14005e608:	add    BYTE PTR [rax],al
   14005e60a:	add    BYTE PTR [rax-0x80000000],al
   14005e610:	add    BYTE PTR [rax],al
   14005e612:	add    BYTE PTR [rax-0x1],al
   14005e618:	add    BYTE PTR [rax],al
   14005e61a:	add    BYTE PTR [rax+0x0],al
   14005e620:	add    BYTE PTR [rax],al
   14005e622:	add    BYTE PTR [rax-0x1],al
   14005e628:	add    BYTE PTR [rax],al
   14005e62a:	add    BYTE PTR [rax-0x1],al
   14005e630:	(bad)  
   14005e631:	(bad)  
   14005e632:	(bad)  
   14005e633:	inc    DWORD PTR [rax]
   14005e635:	add    BYTE PTR [rax],al
   14005e637:	cmp    bh,0xff
   14005e63a:	(bad)  
   14005e63b:	(bad)  
   14005e63c:	(bad)  
   14005e63d:	(bad)  
   14005e63e:	(bad)  
   14005e63f:	(bad)  
   14005e640:	(bad)  
   14005e641:	(bad)  
   14005e642:	(bad)  
   14005e643:	(bad)  
   14005e644:	(bad)  
   14005e645:	(bad)  
   14005e646:	(bad)  
   14005e647:	(bad)  
   14005e648:	(bad)  
   14005e649:	(bad)  
   14005e64a:	(bad)  
   14005e64b:	(bad)  
   14005e64c:	(bad)  
   14005e64d:	(bad)  
   14005e64e:	(bad)  
   14005e64f:	(bad)  
   14005e650:	(bad)  
   14005e651:	(bad)  
   14005e652:	(bad)  
   14005e653:	inc    DWORD PTR [rax]
   14005e655:	add    BYTE PTR [rax],al
   14005e657:	cmp    bh,0xff
   14005e65a:	(bad)  
   14005e65b:	(bad)  
   14005e65c:	(bad)  
   14005e65d:	(bad)  
   14005e65e:	(bad)  
   14005e65f:	inc    DWORD PTR [rax]
   14005e661:	add    BYTE PTR [rax],al
   14005e663:	cmp    bh,0xff
   14005e666:	(bad)  
   14005e667:	inc    DWORD PTR [rax]
   14005e669:	add    BYTE PTR [rax],al
   14005e66b:	add    BYTE PTR [rax],0x0
   14005e66e:	add    BYTE PTR [rax],al
   14005e670:	add    BYTE PTR [rax],al
   14005e672:	add    BYTE PTR [rax-0x1],al
   14005e678:	add    BYTE PTR [rax],al
   14005e67a:	add    BYTE PTR [rax-0x80000000],al
   14005e680:	add    BYTE PTR [rax],al
   14005e682:	add    BYTE PTR [rax-0x80000000],al
   14005e688:	add    BYTE PTR [rax],al
   14005e68a:	add    BYTE PTR [rax-0x80000000],al
   14005e690:	add    BYTE PTR [rax],al
   14005e692:	add    BYTE PTR [rax-0x80000000],al
   14005e698:	add    BYTE PTR [rax],al
   14005e69a:	add    BYTE PTR [rax-0x80000000],al
   14005e6a0:	add    BYTE PTR [rax],al
   14005e6a2:	add    BYTE PTR [rax-0x80000000],al
   14005e6a8:	add    BYTE PTR [rax],al
   14005e6aa:	add    BYTE PTR [rax-0x80000000],al
   14005e6b0:	add    BYTE PTR [rax],al
   14005e6b2:	add    BYTE PTR [rax-0x1],al
   14005e6b8:	add    BYTE PTR [rax],al
   14005e6ba:	add    BYTE PTR [rax+0x0],al
   14005e6c0:	add    BYTE PTR [rax],al
   14005e6c2:	add    BYTE PTR [rax-0x1],al
   14005e6c8:	add    BYTE PTR [rax],al
   14005e6ca:	add    BYTE PTR [rax-0x1],al
   14005e6d0:	add    BYTE PTR [rax],al
   14005e6d2:	add    BYTE PTR [rax-0x1],al
   14005e6d8:	add    BYTE PTR [rax],al
   14005e6da:	add    BYTE PTR [rax-0x1],al
   14005e6e0:	add    BYTE PTR [rax],al
   14005e6e2:	add    BYTE PTR [rax-0x1],al
   14005e6e8:	add    BYTE PTR [rax],al
   14005e6ea:	add    BYTE PTR [rax-0x1],al
   14005e6f0:	add    BYTE PTR [rax],al
   14005e6f2:	add    BYTE PTR [rax-0x1],al
   14005e6f8:	add    BYTE PTR [rax],al
   14005e6fa:	add    BYTE PTR [rax-0x1],al
   14005e700:	add    BYTE PTR [rax],al
   14005e702:	add    BYTE PTR [rax-0x1],al
   14005e708:	add    BYTE PTR [rax],al
   14005e70a:	add    BYTE PTR [rax+0x0],al
   14005e710:	add    BYTE PTR [rax],al
   14005e712:	add    BYTE PTR [rax-0x1],al
   14005e718:	add    BYTE PTR [rax],al
   14005e71a:	add    BYTE PTR [rax-0x80000000],al
   14005e720:	add    BYTE PTR [rax],al
   14005e722:	add    BYTE PTR [rax-0x80000000],al
   14005e728:	add    BYTE PTR [rax],al
   14005e72a:	add    BYTE PTR [rax-0x80000000],al
   14005e730:	add    BYTE PTR [rax],al
   14005e732:	add    BYTE PTR [rax-0x80000000],al
   14005e738:	add    BYTE PTR [rax],al
   14005e73a:	add    BYTE PTR [rax-0x80000000],al
   14005e740:	add    BYTE PTR [rax],al
   14005e742:	add    BYTE PTR [rax-0x80000000],al
   14005e748:	add    BYTE PTR [rax],al
   14005e74a:	add    BYTE PTR [rax-0x80000000],al
   14005e750:	add    BYTE PTR [rax],al
   14005e752:	add    BYTE PTR [rax-0x1],al
   14005e758:	add    BYTE PTR [rax],al
   14005e75a:	add    BYTE PTR [rax+0x0],al
   14005e760:	add    BYTE PTR [rax],al
   14005e762:	add    BYTE PTR [rax-0x1],al
   14005e768:	add    BYTE PTR [rax],al
   14005e76a:	add    BYTE PTR [rax-0x1],al
   14005e770:	add    BYTE PTR [rax],al
   14005e772:	add    BYTE PTR [rax-0x1],al
   14005e778:	add    BYTE PTR [rax],al
   14005e77a:	add    BYTE PTR [rax-0x1],al
   14005e780:	add    BYTE PTR [rax],al
   14005e782:	add    BYTE PTR [rax-0x1],al
   14005e788:	add    BYTE PTR [rax],al
   14005e78a:	add    BYTE PTR [rax-0x1],al
   14005e790:	add    BYTE PTR [rax],al
   14005e792:	add    BYTE PTR [rax-0x1],al
   14005e798:	add    BYTE PTR [rax],al
   14005e79a:	add    BYTE PTR [rax-0x1],al
   14005e7a0:	add    BYTE PTR [rax],al
   14005e7a2:	add    BYTE PTR [rax-0x1],al
   14005e7a8:	add    BYTE PTR [rax],al
   14005e7aa:	add    BYTE PTR [rax+0x0],al
   14005e7b0:	add    BYTE PTR [rax],al
   14005e7b2:	add    BYTE PTR [rax-0x1],al
   14005e7b8:	add    BYTE PTR [rax],al
   14005e7ba:	add    BYTE PTR [rax-0x80000000],al
   14005e7c0:	add    BYTE PTR [rax],al
   14005e7c2:	add    BYTE PTR [rax-0x80000000],al
   14005e7c8:	add    BYTE PTR [rax],al
   14005e7ca:	add    BYTE PTR [rax-0x80000000],al
   14005e7d0:	add    BYTE PTR [rax],al
   14005e7d2:	add    BYTE PTR [rax-0x80000000],al
   14005e7d8:	add    BYTE PTR [rax],al
   14005e7da:	add    BYTE PTR [rax-0x80000000],al
   14005e7e0:	add    BYTE PTR [rax],al
   14005e7e2:	add    BYTE PTR [rax-0x80000000],al
   14005e7e8:	add    BYTE PTR [rax],al
   14005e7ea:	add    BYTE PTR [rax-0x80000000],al
   14005e7f0:	add    BYTE PTR [rax],al
   14005e7f2:	add    BYTE PTR [rax-0x1],al
   14005e7f8:	add    BYTE PTR [rax],al
   14005e7fa:	add    BYTE PTR [rax+0x0],al
   14005e800:	cmp    BYTE PTR [rax],bh
   14005e802:	cmp    BYTE PTR [rax-0x1],dl
   14005e808:	(bad)  
   14005e809:	(bad)  
   14005e80a:	(bad)  
   14005e80b:	(bad)  
   14005e80c:	(bad)  
   14005e80d:	(bad)  
   14005e80e:	(bad)  
   14005e80f:	(bad)  
   14005e810:	(bad)  
   14005e811:	(bad)  
   14005e812:	(bad)  
   14005e813:	(bad)  
   14005e814:	(bad)  
   14005e815:	(bad)  
   14005e816:	(bad)  
   14005e817:	(bad)  
   14005e818:	(bad)  
   14005e819:	(bad)  
   14005e81a:	(bad)  
   14005e81b:	(bad)  
   14005e81c:	(bad)  
   14005e81d:	(bad)  
   14005e81e:	(bad)  
   14005e81f:	(bad)  
   14005e820:	(bad)  
   14005e821:	(bad)  
   14005e822:	(bad)  
   14005e823:	(bad)  
   14005e824:	(bad)  
   14005e825:	(bad)  
   14005e826:	(bad)  
   14005e827:	(bad)  
   14005e828:	(bad)  
   14005e829:	(bad)  
   14005e82a:	(bad)  
   14005e82b:	(bad)  
   14005e82c:	(bad)  
   14005e82d:	(bad)  
   14005e82e:	(bad)  
   14005e82f:	(bad)  
   14005e830:	(bad)  
   14005e831:	(bad)  
   14005e832:	(bad)  
   14005e833:	(bad)  
   14005e834:	(bad)  
   14005e835:	(bad)  
   14005e836:	(bad)  
   14005e837:	(bad)  
   14005e838:	(bad)  
   14005e839:	(bad)  
   14005e83a:	(bad)  
   14005e83b:	(bad)  
   14005e83c:	(bad)  
   14005e83d:	(bad)  
   14005e83e:	(bad)  
   14005e83f:	(bad)  
   14005e840:	(bad)  
   14005e841:	(bad)  
   14005e842:	(bad)  
   14005e843:	(bad)  
   14005e844:	(bad)  
   14005e845:	(bad)  
   14005e846:	(bad)  
   14005e847:	inc    DWORD PTR [rax]
   14005e849:	add    BYTE PTR [rax],al
   14005e84b:	add    BYTE PTR [rax],0x0
   14005e84e:	add    BYTE PTR [rax],al
   14005e850:	add    BYTE PTR [rax],al
   14005e852:	add    BYTE PTR [rax+0x0],dl
   14005e855:	add    BYTE PTR [rax],al
   14005e857:	add    BYTE PTR [rax],0x0
   14005e85a:	add    BYTE PTR [rax-0x80000000],al
   14005e860:	add    BYTE PTR [rax],al
   14005e862:	add    BYTE PTR [rax-0x80000000],al
   14005e868:	add    BYTE PTR [rax],al
   14005e86a:	add    BYTE PTR [rax-0x80000000],al
   14005e870:	add    BYTE PTR [rax],al
   14005e872:	add    BYTE PTR [rax-0x80000000],al
   14005e878:	add    BYTE PTR [rax],al
   14005e87a:	add    BYTE PTR [rax-0x80000000],al
   14005e880:	add    BYTE PTR [rax],al
   14005e882:	add    BYTE PTR [rax-0x80000000],al
   14005e888:	add    BYTE PTR [rax],al
   14005e88a:	add    BYTE PTR [rax-0x80000000],al
   14005e890:	add    BYTE PTR [rax],al
   14005e892:	add    BYTE PTR [rax-0x80000000],al
   14005e898:	add    BYTE PTR [rax],al
   14005e89a:	add    BYTE PTR [rax+0x0],dl
	...
   14005ea2d:	add    BYTE PTR [rax],al
   14005ea2f:	add    bh,bh
   14005ea31:	push   rax
   14005ea33:	add    bh,bh
   14005ea35:	push   rax
   14005ea37:	add    bh,bh
   14005ea39:	push   rax
   14005ea3b:	add    bh,bh
   14005ea3d:	push   rax
   14005ea3f:	add    BYTE PTR [rax],al
   14005ea41:	add    BYTE PTR [rax],dl
   14005ea43:	add    BYTE PTR [rax],al
   14005ea45:	add    BYTE PTR [rax],dl
   14005ea47:	add    BYTE PTR [rax],al
   14005ea49:	add    BYTE PTR [rax],dl
   14005ea4b:	add    BYTE PTR [rax],al
   14005ea4d:	add    BYTE PTR [rax],dl
   14005ea4f:	add    BYTE PTR [rax],al
   14005ea51:	add    BYTE PTR [rax],dl
   14005ea53:	add    BYTE PTR [rax],al
   14005ea55:	add    BYTE PTR [rax],dl
   14005ea57:	add    BYTE PTR [rax],al
   14005ea59:	add    BYTE PTR [rax],dl
   14005ea5b:	add    BYTE PTR [rax],al
   14005ea5d:	add    BYTE PTR [rax],dl
   14005ea5f:	add    BYTE PTR [rax],al
   14005ea61:	add    BYTE PTR [rax],dl
   14005ea63:	add    BYTE PTR [rax],al
   14005ea65:	add    BYTE PTR [rax],dl
   14005ea67:	add    BYTE PTR [rax],al
   14005ea69:	add    BYTE PTR [rax],dl
   14005ea6b:	add    bh,bh
   14005ea6d:	push   rax
   14005ea6f:	add    bh,bh
   14005ea71:	push   rax
   14005ea73:	add    bh,bh
   14005ea75:	push   rax
   14005ea77:	add    bh,bh
   14005ea79:	push   rax
   14005ea7b:	add    bh,bh
   14005ea7d:	push   rax
   14005ea7f:	add    BYTE PTR [rax],ch
   14005ea81:	add    BYTE PTR [rax],al
   14005ea83:	add    BYTE PTR [rax],dl
   14005ea85:	add    BYTE PTR [rax],al
   14005ea87:	add    BYTE PTR [rax],ah
   14005ea89:	add    BYTE PTR [rax],al
   14005ea8b:	add    BYTE PTR [rcx],al
   14005ea8d:	add    BYTE PTR [rax],ah
   14005ea8f:	add    BYTE PTR [rax],al
   14005ea91:	add    BYTE PTR [rax],al
   14005ea93:	add    BYTE PTR [rax+0x4],al
	...
   14005eb2a:	add    BYTE PTR [rax+0x0],dl
   14005eb2d:	add    BYTE PTR [rax],al
   14005eb2f:	add    BYTE PTR [rax],0x0
   14005eb32:	add    BYTE PTR [rax-0x80000000],al
   14005eb38:	add    BYTE PTR [rax],al
   14005eb3a:	add    BYTE PTR [rax-0x80000000],al
   14005eb40:	add    BYTE PTR [rax],al
   14005eb42:	add    BYTE PTR [rax-0x80000000],al
   14005eb48:	add    BYTE PTR [rax],al
   14005eb4a:	add    BYTE PTR [rax-0x80000000],al
   14005eb50:	add    BYTE PTR [rax],al
   14005eb52:	add    BYTE PTR [rax-0x80000000],al
   14005eb58:	add    BYTE PTR [rax],al
   14005eb5a:	add    BYTE PTR [rax-0x80000000],al
   14005eb60:	add    BYTE PTR [rax],al
   14005eb62:	add    BYTE PTR [rax+0x0],dl
   14005eb65:	add    BYTE PTR [rax],al
   14005eb67:	add    BYTE PTR [rax],al
   14005eb69:	add    BYTE PTR [rax],al
   14005eb6b:	cmp    bh,0xff
   14005eb6e:	(bad)  
   14005eb6f:	(bad)  
   14005eb70:	(bad)  
   14005eb71:	(bad)  
   14005eb72:	(bad)  
   14005eb73:	(bad)  
   14005eb74:	(bad)  
   14005eb75:	(bad)  
   14005eb76:	(bad)  
   14005eb77:	(bad)  
   14005eb78:	(bad)  
   14005eb79:	(bad)  
   14005eb7a:	(bad)  
   14005eb7b:	(bad)  
   14005eb7c:	(bad)  
   14005eb7d:	(bad)  
   14005eb7e:	(bad)  
   14005eb7f:	(bad)  
   14005eb80:	(bad)  
   14005eb81:	(bad)  
   14005eb82:	(bad)  
   14005eb83:	(bad)  
   14005eb84:	(bad)  
   14005eb85:	(bad)  
   14005eb86:	(bad)  
   14005eb87:	(bad)  
   14005eb88:	(bad)  
   14005eb89:	(bad)  
   14005eb8a:	(bad)  
   14005eb8b:	(bad)  
   14005eb8c:	(bad)  
   14005eb8d:	(bad)  
   14005eb8e:	(bad)  
   14005eb8f:	(bad)  
   14005eb90:	(bad)  
   14005eb91:	(bad)  
   14005eb92:	(bad)  
   14005eb93:	(bad)  
   14005eb94:	(bad)  
   14005eb95:	(bad)  
   14005eb96:	(bad)  
   14005eb97:	(bad)  
   14005eb98:	(bad)  
   14005eb99:	(bad)  
   14005eb9a:	(bad)  
   14005eb9b:	(bad)  
   14005eb9c:	(bad)  
   14005eb9d:	(bad)  
   14005eb9e:	(bad)  
   14005eb9f:	inc    DWORD PTR [rax]
   14005eba1:	add    BYTE PTR [rax],al
   14005eba3:	add    BYTE PTR [rax],0x0
   14005eba6:	add    BYTE PTR [rax],al
   14005eba8:	add    BYTE PTR [rax],al
   14005ebaa:	add    BYTE PTR [rax-0x1],al
   14005ebb0:	add    BYTE PTR [rax],al
   14005ebb2:	add    BYTE PTR [rax-0x80000000],al
   14005ebb8:	add    BYTE PTR [rax],al
   14005ebba:	add    BYTE PTR [rax-0x80000000],al
   14005ebc0:	add    BYTE PTR [rax],al
   14005ebc2:	add    BYTE PTR [rax-0x80000000],al
   14005ebc8:	add    BYTE PTR [rax],al
   14005ebca:	add    BYTE PTR [rax-0x80000000],al
   14005ebd0:	add    BYTE PTR [rax],al
   14005ebd2:	add    BYTE PTR [rax-0x80000000],al
   14005ebd8:	add    BYTE PTR [rax],al
   14005ebda:	add    BYTE PTR [rax-0x1],al
   14005ebe0:	add    BYTE PTR [rax],al
   14005ebe2:	add    BYTE PTR [rax+0x0],al
   14005ebe8:	add    BYTE PTR [rax],al
   14005ebea:	add    BYTE PTR [rax-0x1],al
   14005ebf0:	add    BYTE PTR [rax],al
   14005ebf2:	add    BYTE PTR [rax-0x1],al
   14005ebf8:	(bad)  
   14005ebf9:	(bad)  
   14005ebfa:	(bad)  
   14005ebfb:	inc    DWORD PTR [rax]
   14005ebfd:	add    BYTE PTR [rax],al
   14005ebff:	cmp    bh,0xff
   14005ec02:	(bad)  
   14005ec03:	(bad)  
   14005ec04:	(bad)  
   14005ec05:	(bad)  
   14005ec06:	(bad)  
   14005ec07:	(bad)  
   14005ec08:	(bad)  
   14005ec09:	(bad)  
   14005ec0a:	(bad)  
   14005ec0b:	inc    DWORD PTR [rax]
   14005ec0d:	add    BYTE PTR [rax],al
   14005ec0f:	cmp    bh,0xff
   14005ec12:	(bad)  
   14005ec13:	(bad)  
   14005ec14:	(bad)  
   14005ec15:	(bad)  
   14005ec16:	(bad)  
   14005ec17:	inc    DWORD PTR [rax]
   14005ec19:	add    BYTE PTR [rax],al
   14005ec1b:	cmp    bh,0xff
   14005ec1e:	(bad)  
   14005ec1f:	inc    DWORD PTR [rax]
   14005ec21:	add    BYTE PTR [rax],al
   14005ec23:	add    BYTE PTR [rax],0x0
   14005ec26:	add    BYTE PTR [rax],al
   14005ec28:	add    BYTE PTR [rax],al
   14005ec2a:	add    BYTE PTR [rax-0x1],al
   14005ec30:	add    BYTE PTR [rax],al
   14005ec32:	add    BYTE PTR [rax-0x80000000],al
   14005ec38:	add    BYTE PTR [rax],al
   14005ec3a:	add    BYTE PTR [rax-0x80000000],al
   14005ec40:	add    BYTE PTR [rax],al
   14005ec42:	add    BYTE PTR [rax-0x80000000],al
   14005ec48:	add    BYTE PTR [rax],al
   14005ec4a:	add    BYTE PTR [rax-0x80000000],al
   14005ec50:	add    BYTE PTR [rax],al
   14005ec52:	add    BYTE PTR [rax-0x80000000],al
   14005ec58:	add    BYTE PTR [rax],al
   14005ec5a:	add    BYTE PTR [rax-0x1],al
   14005ec60:	add    BYTE PTR [rax],al
   14005ec62:	add    BYTE PTR [rax+0x0],al
   14005ec68:	add    BYTE PTR [rax],al
   14005ec6a:	add    BYTE PTR [rax-0x1],al
   14005ec70:	add    BYTE PTR [rax],al
   14005ec72:	add    BYTE PTR [rax-0x1],al
   14005ec78:	add    BYTE PTR [rax],al
   14005ec7a:	add    BYTE PTR [rax-0x1],al
   14005ec80:	add    BYTE PTR [rax],al
   14005ec82:	add    BYTE PTR [rax-0x1],al
   14005ec88:	add    BYTE PTR [rax],al
   14005ec8a:	add    BYTE PTR [rax-0x1],al
   14005ec90:	add    BYTE PTR [rax],al
   14005ec92:	add    BYTE PTR [rax-0x1],al
   14005ec98:	add    BYTE PTR [rax],al
   14005ec9a:	add    BYTE PTR [rax-0x1],al
   14005eca0:	add    BYTE PTR [rax],al
   14005eca2:	add    BYTE PTR [rax+0x0],al
   14005eca8:	add    BYTE PTR [rax],al
   14005ecaa:	add    BYTE PTR [rax-0x1],al
   14005ecb0:	add    BYTE PTR [rax],al
   14005ecb2:	add    BYTE PTR [rax-0x80000000],al
   14005ecb8:	add    BYTE PTR [rax],al
   14005ecba:	add    BYTE PTR [rax-0x80000000],al
   14005ecc0:	add    BYTE PTR [rax],al
   14005ecc2:	add    BYTE PTR [rax-0x80000000],al
   14005ecc8:	add    BYTE PTR [rax],al
   14005ecca:	add    BYTE PTR [rax-0x80000000],al
   14005ecd0:	add    BYTE PTR [rax],al
   14005ecd2:	add    BYTE PTR [rax-0x80000000],al
   14005ecd8:	add    BYTE PTR [rax],al
   14005ecda:	add    BYTE PTR [rax-0x1],al
   14005ece0:	add    BYTE PTR [rax],al
   14005ece2:	add    BYTE PTR [rax+0x0],al
   14005ece8:	add    BYTE PTR [rax],al
   14005ecea:	add    BYTE PTR [rax-0x1],al
   14005ecf0:	add    BYTE PTR [rax],al
   14005ecf2:	add    BYTE PTR [rax-0x1],al
   14005ecf8:	add    BYTE PTR [rax],al
   14005ecfa:	add    BYTE PTR [rax-0x1],al
   14005ed00:	add    BYTE PTR [rax],al
   14005ed02:	add    BYTE PTR [rax-0x1],al
   14005ed08:	add    BYTE PTR [rax],al
   14005ed0a:	add    BYTE PTR [rax-0x1],al
   14005ed10:	add    BYTE PTR [rax],al
   14005ed12:	add    BYTE PTR [rax-0x1],al
   14005ed18:	add    BYTE PTR [rax],al
   14005ed1a:	add    BYTE PTR [rax-0x1],al
   14005ed20:	add    BYTE PTR [rax],al
   14005ed22:	add    BYTE PTR [rax+0x0],al
   14005ed28:	add    BYTE PTR [rax],al
   14005ed2a:	add    BYTE PTR [rax-0x1],al
   14005ed30:	add    BYTE PTR [rax],al
   14005ed32:	add    BYTE PTR [rax-0x80000000],al
   14005ed38:	add    BYTE PTR [rax],al
   14005ed3a:	add    BYTE PTR [rax-0x80000000],al
   14005ed40:	add    BYTE PTR [rax],al
   14005ed42:	add    BYTE PTR [rax-0x80000000],al
   14005ed48:	add    BYTE PTR [rax],al
   14005ed4a:	add    BYTE PTR [rax-0x80000000],al
   14005ed50:	add    BYTE PTR [rax],al
   14005ed52:	add    BYTE PTR [rax-0x80000000],al
   14005ed58:	add    BYTE PTR [rax],al
   14005ed5a:	add    BYTE PTR [rax-0x1],al
   14005ed60:	add    BYTE PTR [rax],al
   14005ed62:	add    BYTE PTR [rax+0x0],al
   14005ed68:	cmp    BYTE PTR [rax],bh
   14005ed6a:	cmp    BYTE PTR [rax-0x1],dl
   14005ed70:	(bad)  
   14005ed71:	(bad)  
   14005ed72:	(bad)  
   14005ed73:	(bad)  
   14005ed74:	(bad)  
   14005ed75:	(bad)  
   14005ed76:	(bad)  
   14005ed77:	(bad)  
   14005ed78:	(bad)  
   14005ed79:	(bad)  
   14005ed7a:	(bad)  
   14005ed7b:	(bad)  
   14005ed7c:	(bad)  
   14005ed7d:	(bad)  
   14005ed7e:	(bad)  
   14005ed7f:	(bad)  
   14005ed80:	(bad)  
   14005ed81:	(bad)  
   14005ed82:	(bad)  
   14005ed83:	(bad)  
   14005ed84:	(bad)  
   14005ed85:	(bad)  
   14005ed86:	(bad)  
   14005ed87:	(bad)  
   14005ed88:	(bad)  
   14005ed89:	(bad)  
   14005ed8a:	(bad)  
   14005ed8b:	(bad)  
   14005ed8c:	(bad)  
   14005ed8d:	(bad)  
   14005ed8e:	(bad)  
   14005ed8f:	(bad)  
   14005ed90:	(bad)  
   14005ed91:	(bad)  
   14005ed92:	(bad)  
   14005ed93:	(bad)  
   14005ed94:	(bad)  
   14005ed95:	(bad)  
   14005ed96:	(bad)  
   14005ed97:	(bad)  
   14005ed98:	(bad)  
   14005ed99:	(bad)  
   14005ed9a:	(bad)  
   14005ed9b:	(bad)  
   14005ed9c:	(bad)  
   14005ed9d:	(bad)  
   14005ed9e:	(bad)  
   14005ed9f:	inc    DWORD PTR [rax]
   14005eda1:	add    BYTE PTR [rax],al
   14005eda3:	add    BYTE PTR [rax],0x0
   14005eda6:	add    BYTE PTR [rax],al
   14005eda8:	add    BYTE PTR [rax],al
   14005edaa:	add    BYTE PTR [rax+0x0],dl
   14005edad:	add    BYTE PTR [rax],al
   14005edaf:	add    BYTE PTR [rax],0x0
   14005edb2:	add    BYTE PTR [rax-0x80000000],al
   14005edb8:	add    BYTE PTR [rax],al
   14005edba:	add    BYTE PTR [rax-0x80000000],al
   14005edc0:	add    BYTE PTR [rax],al
   14005edc2:	add    BYTE PTR [rax-0x80000000],al
   14005edc8:	add    BYTE PTR [rax],al
   14005edca:	add    BYTE PTR [rax-0x80000000],al
   14005edd0:	add    BYTE PTR [rax],al
   14005edd2:	add    BYTE PTR [rax-0x80000000],al
   14005edd8:	add    BYTE PTR [rax],al
   14005edda:	add    BYTE PTR [rax-0x80000000],al
   14005ede0:	add    BYTE PTR [rax],al
   14005ede2:	add    BYTE PTR [rax+0x0],dl
	...
   14005eea5:	add    BYTE PTR [rax],al
   14005eea7:	add    bh,bh
   14005eea9:	inc    DWORD PTR [rax]
   14005eeab:	add    bh,bh
   14005eead:	inc    DWORD PTR [rax]
   14005eeaf:	add    BYTE PTR [rax],al
   14005eeb1:	add    DWORD PTR [rax],eax
   14005eeb3:	add    BYTE PTR [rax],al
   14005eeb5:	add    DWORD PTR [rax],eax
   14005eeb7:	add    BYTE PTR [rax],al
   14005eeb9:	add    DWORD PTR [rax],eax
   14005eebb:	add    BYTE PTR [rax],al
   14005eebd:	add    DWORD PTR [rax],eax
   14005eebf:	add    BYTE PTR [rax],al
   14005eec1:	add    DWORD PTR [rax],eax
   14005eec3:	add    BYTE PTR [rax],al
   14005eec5:	add    DWORD PTR [rax],eax
   14005eec7:	add    BYTE PTR [rax],al
   14005eec9:	add    DWORD PTR [rax],eax
   14005eecb:	add    BYTE PTR [rax],al
   14005eecd:	add    DWORD PTR [rax],eax
   14005eecf:	add    BYTE PTR [rax],al
   14005eed1:	add    DWORD PTR [rax],eax
   14005eed3:	add    BYTE PTR [rax],al
   14005eed5:	add    DWORD PTR [rax],eax
   14005eed7:	add    BYTE PTR [rax],al
   14005eed9:	add    DWORD PTR [rax],eax
   14005eedb:	add    bh,bh
   14005eedd:	inc    DWORD PTR [rax]
   14005eedf:	add    bh,bh
   14005eee1:	inc    DWORD PTR [rax]
   14005eee3:	add    bh,bh
   14005eee5:	inc    DWORD PTR [rax]
   14005eee7:	add    BYTE PTR [rax],al
   14005eee9:	add    BYTE PTR [rcx],al
   14005eeeb:	add    BYTE PTR [rdi],al
   14005eeed:	add    BYTE PTR [rax+0x40],al
   14005eef0:	add    BYTE PTR [rax],al
   14005eef2:	add    DWORD PTR [rax],eax
   14005eef4:	and    BYTE PTR [rax],al
   14005eef6:	sub    BYTE PTR [rdx+0x0],al
   14005eef9:	add    BYTE PTR [rcx],al
   14005eefb:	add    BYTE PTR [rax],dh
   14005eefd:	xor    BYTE PTR [rax],al
   14005eeff:	add    BYTE PTR [rcx],al
   14005ef01:	add    BYTE PTR [rax],ah
   14005ef03:	add    BYTE PTR [rax+0x2000025],ch
   14005ef09:	add    BYTE PTR [rax],ch
   14005ef0b:	sub    BYTE PTR [rax],al
   14005ef0d:	add    BYTE PTR [rcx],al
   14005ef0f:	add    BYTE PTR [rax],ah
   14005ef11:	add    BYTE PTR [rax+0x1a],ch
   14005ef14:	add    BYTE PTR [rax],al
   14005ef16:	add    eax,DWORD PTR [rax]
   14005ef18:	and    BYTE PTR [rax],ah
   14005ef1a:	add    BYTE PTR [rax],al
   14005ef1c:	add    DWORD PTR [rax],eax
   14005ef1e:	and    BYTE PTR [rax],al
   14005ef20:	test   al,0x10
   14005ef22:	add    BYTE PTR [rax],al
   14005ef24:	add    al,0x0
   14005ef26:	sbb    BYTE PTR [rax],bl
   14005ef28:	add    BYTE PTR [rax],al
   14005ef2a:	add    DWORD PTR [rax],eax
   14005ef2c:	and    BYTE PTR [rax],al
   14005ef2e:	mov    BYTE PTR [rcx],cl
   14005ef30:	add    BYTE PTR [rax],al
   14005ef32:	add    eax,0x141400
   14005ef37:	add    BYTE PTR [rcx],al
   14005ef39:	add    BYTE PTR [rax],ah
   14005ef3b:	add    BYTE PTR [rax+0x6000006],bh
   14005ef41:	add    BYTE PTR [rax],dl
   14005ef43:	adc    BYTE PTR [rax],al
   14005ef45:	add    BYTE PTR [rcx],al
   14005ef47:	add    BYTE PTR [rax],ah
   14005ef49:	add    BYTE PTR [rax+0x4],ch
   14005ef4c:	add    BYTE PTR [rax],al
   14005ef4e:	(bad)  
   14005ef4f:	add    al,ah
   14005ef51:	add    esi,DWORD PTR [rax+rax*1]
   14005ef54:	add    BYTE PTR [rax],al
   14005ef56:	push   rsi
   14005ef57:	add    BYTE PTR [rbx+0x0],dl
   14005ef5a:	pop    rdi
   14005ef5b:	add    BYTE PTR [rsi+0x0],dl
   14005ef5e:	add    BYTE PTR [r10+0x0],r10b
   14005ef62:	push   rbx
   14005ef63:	add    BYTE PTR [rcx+0x0],cl
   14005ef66:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14005ef6a:	pop    rdi
   14005ef6b:	add    BYTE PTR [rcx+0x0],cl
   14005ef6e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14005ef72:	rex.WRXB add BYTE PTR [r8],r8b
   14005ef75:	add    BYTE PTR [rax],al
   14005ef77:	add    BYTE PTR [rbp+0xfeef04],bh
   14005ef7d:	add    BYTE PTR [rcx],al
   14005ef7f:	add    BYTE PTR [rax],al
   14005ef81:	add    BYTE PTR [rdx],cl
   14005ef83:	add    bl,bl
   14005ef85:	add    BYTE PTR [rax],bpl
   14005ef88:	add    BYTE PTR [rax],al
   14005ef8a:	or     al,BYTE PTR [rax]
   14005ef8c:	fild   DWORD PTR [rax+0x0]
   14005ef8f:	sub    BYTE PTR [rdi],bh
   14005ef91:	add    BYTE PTR [rax],al
   14005ef93:	add    BYTE PTR [rax],al
   14005ef95:	add    BYTE PTR [rax],al
   14005ef97:	add    BYTE PTR [rax+rax*1],al
   14005ef9a:	add    al,0x0
   14005ef9c:	add    DWORD PTR [rax],eax
	...
   14005efaa:	add    BYTE PTR [rax],al
   14005efac:	rex add eax,DWORD PTR [rax]
   14005efaf:	add    BYTE PTR [rcx],al
   14005efb1:	add    BYTE PTR [rbx+0x0],dl
   14005efb4:	je     0x14005efb6
   14005efb6:	jb     0x14005efb8
   14005efb8:	imul   eax,DWORD PTR [rax],0x67006e
   14005efbe:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14005efc2:	ins    BYTE PTR es:[rdi],dx
   14005efc3:	add    BYTE PTR [rbp+0x0],ah
   14005efc6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14005efca:	data16 add BYTE PTR [rdi+0x0],ch
   14005efce:	add    BYTE PTR [rax],al
   14005efd0:	sbb    al,0x3
   14005efd2:	add    BYTE PTR [rax],al
   14005efd4:	add    DWORD PTR [rax],eax
   14005efd6:	xor    BYTE PTR [rax],al
   14005efd8:	xor    al,0x0
   14005efda:	xor    BYTE PTR [rax],al
   14005efdc:	cmp    DWORD PTR [rax],eax
   14005efde:	xor    BYTE PTR [rax],al
   14005efe0:	xor    al,0x0
   14005efe2:	rex.X add BYTE PTR [rax],sil
   14005efe5:	add    BYTE PTR [rax],al
   14005efe7:	add    BYTE PTR [rax+rax*1+0x16],cl
   14005efeb:	add    BYTE PTR [rcx],al
   14005efed:	add    BYTE PTR [rbx+0x0],al
   14005eff0:	outs   dx,DWORD PTR ds:[rsi]
   14005eff1:	add    BYTE PTR [rbp+0x0],ch
   14005eff4:	jo     0x14005eff6
   14005eff6:	(bad)  
   14005eff7:	add    BYTE PTR [rsi+0x0],ch
   14005effa:	jns    0x14005effc
   14005effc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14005f000:	ins    DWORD PTR es:[rdi],dx
   14005f001:	add    BYTE PTR [rbp+0x0],ah
   14005f004:	add    BYTE PTR [rax],al
   14005f006:	add    BYTE PTR [rax],al
   14005f008:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14005f00c:	movsxd eax,DWORD PTR [rax]
   14005f00e:	jb     0x14005f010
   14005f010:	outs   dx,DWORD PTR ds:[rsi]
   14005f011:	add    BYTE PTR [rbx+0x0],dh
   14005f014:	outs   dx,DWORD PTR ds:[rsi]
   14005f015:	add    BYTE PTR [rsi+0x0],ah
   14005f018:	je     0x14005f01a
   14005f01a:	and    BYTE PTR [rax],al
   14005f01c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14005f020:	jb     0x14005f022
   14005f022:	jo     0x14005f024
   14005f024:	outs   dx,DWORD PTR ds:[rsi]
   14005f025:	add    BYTE PTR [rdx+0x0],dh
   14005f028:	(bad)  
   14005f029:	add    BYTE PTR [rax+rax*1+0x69],dh
   14005f02d:	add    BYTE PTR [rdi+0x0],ch
   14005f030:	outs   dx,BYTE PTR ds:[rsi]
   14005f031:	add    BYTE PTR [rax],al
   14005f033:	add    BYTE PTR [rdx+0x0],dh
   14005f036:	and    eax,0x46000100
   14005f03b:	add    BYTE PTR [rcx+0x0],ch
   14005f03e:	ins    BYTE PTR es:[rdi],dx
   14005f03f:	add    BYTE PTR [rbp+0x0],ah
   14005f042:	add    BYTE PTR [rbp+0x0],r12b
   14005f046:	jae    0x14005f048
   14005f048:	movsxd eax,DWORD PTR [rax]
   14005f04a:	jb     0x14005f04c
   14005f04c:	imul   eax,DWORD PTR [rax],0x740070
   14005f052:	imul   eax,DWORD PTR [rax],0x6e006f
   14005f058:	add    BYTE PTR [rax],al
   14005f05a:	add    BYTE PTR [rax],al
   14005f05c:	push   rsp
   14005f05d:	add    BYTE PTR [rdi+0x0],ch
   14005f060:	jne    0x14005f062
   14005f062:	movsxd eax,DWORD PTR [rax]
   14005f064:	push   0x4b002000
   14005f069:	add    BYTE PTR [rbp+0x0],ah
   14005f06c:	jns    0x14005f06e
   14005f06e:	(bad)  
   14005f06f:	add    BYTE PTR [rdi+0x0],ch
   14005f072:	(bad)  
   14005f073:	add    BYTE PTR [rdx+0x0],dh
   14005f076:	add    BYTE PTR fs:[rax],ah
   14005f079:	add    BYTE PTR [rcx+0x0],ah
   14005f07c:	outs   dx,BYTE PTR ds:[rsi]
   14005f07d:	add    BYTE PTR [rax+rax*1+0x20],ah
   14005f081:	add    BYTE PTR [rax+0x0],cl
   14005f084:	(bad)  
   14005f085:	add    BYTE PTR [rsi+0x0],ch
   14005f088:	add    BYTE PTR fs:[rdi+0x0],dh
   14005f08c:	jb     0x14005f08e
   14005f08e:	imul   eax,DWORD PTR [rax],0x690074
   14005f094:	outs   dx,BYTE PTR ds:[rsi]
   14005f095:	add    BYTE PTR [rdi+0x0],ah
   14005f098:	and    BYTE PTR [rax],al
   14005f09a:	push   rax
   14005f09b:	add    BYTE PTR [rcx+0x0],ah
   14005f09e:	outs   dx,BYTE PTR ds:[rsi]
   14005f09f:	add    BYTE PTR [rbp+0x0],ah
   14005f0a2:	ins    BYTE PTR es:[rdi],dx
   14005f0a3:	add    BYTE PTR [rax],al
   14005f0a5:	add    BYTE PTR [rax],al
   14005f0a7:	add    BYTE PTR [rsi+0x0],ch
   14005f0aa:	(bad)  
   14005f0ab:	add    BYTE PTR [rcx],al
   14005f0ad:	add    BYTE PTR [rsi+0x0],al
   14005f0b0:	imul   eax,DWORD PTR [rax],0x65006c
   14005f0b6:	push   rsi
   14005f0b7:	add    BYTE PTR [rbp+0x0],ah
   14005f0ba:	jb     0x14005f0bc
   14005f0bc:	jae    0x14005f0be
   14005f0be:	imul   eax,DWORD PTR [rax],0x6e006f
   14005f0c4:	add    BYTE PTR [rax],al
   14005f0c6:	add    BYTE PTR [rax],al
   14005f0c8:	xor    DWORD PTR [rax],eax
   14005f0ca:	xor    BYTE PTR [rax],al
   14005f0cc:	add    BYTE PTR cs:[rax],dh
   14005f0cf:	add    BYTE PTR [rsi],ch
   14005f0d1:	add    BYTE PTR [rcx],dh
   14005f0d3:	add    BYTE PTR [rax],dh
   14005f0d5:	add    BYTE PTR [rdx],dh
   14005f0d7:	add    BYTE PTR [rax+rax*1],dh
   14005f0da:	xor    BYTE PTR [rax],al
   14005f0dc:	add    BYTE PTR cs:[rcx],dh
   14005f0df:	add    BYTE PTR [rsi],dh
   14005f0e1:	add    BYTE PTR [rsi],dh
   14005f0e3:	add    BYTE PTR [rax],dh
   14005f0e5:	add    BYTE PTR [rbx],dh
   14005f0e7:	add    BYTE PTR [rax],ah
   14005f0e9:	add    BYTE PTR [rax],ch
   14005f0eb:	add    BYTE PTR [rax+rax*1+0x68],dh
   14005f0ef:	add    BYTE PTR [rcx],dh
   14005f0f1:	add    BYTE PTR [rdi+0x0],bl
   14005f0f4:	jae    0x14005f0f6
   14005f0f6:	je     0x14005f0f8
   14005f0f8:	xor    DWORD PTR [rax],eax
   14005f0fa:	add    BYTE PTR cs:[rcx],dh
   14005f0fd:	add    BYTE PTR [rip+0x31003100],dh        # 0x171062203
   14005f103:	add    BYTE PTR [rdx],dh
   14005f105:	add    BYTE PTR [rax+rax*1],dh
   14005f108:	sub    eax,0x37003100
   14005f10d:	add    BYTE PTR [rip+0x29003000],dh        # 0x169062113
   14005f113:	add    BYTE PTR [rax],al
   14005f115:	add    BYTE PTR [rax],al
   14005f117:	add    BYTE PTR [rsi],dh
   14005f119:	add    BYTE PTR [rbx],cl
   14005f11b:	add    BYTE PTR [rcx],al
   14005f11d:	add    BYTE PTR [rcx+0x0],cl
   14005f120:	outs   dx,BYTE PTR ds:[rsi]
   14005f121:	add    BYTE PTR [rax+rax*1+0x65],dh
   14005f125:	add    BYTE PTR [rdx+0x0],dh
   14005f128:	outs   dx,BYTE PTR ds:[rsi]
   14005f129:	add    BYTE PTR [rcx+0x0],ah
   14005f12c:	ins    BYTE PTR es:[rdi],dx
   14005f12d:	add    BYTE PTR [rsi+0x0],cl
   14005f130:	(bad)  
   14005f131:	add    BYTE PTR [rbp+0x0],ch
   14005f134:	add    BYTE PTR gs:[rax],al
   14005f137:	add    BYTE PTR [rax+rax*1+0x61],dl
   14005f13b:	add    BYTE PTR [rdx+0x0],ah
   14005f13e:	push   rsp
   14005f13f:	add    BYTE PTR [rcx+0x0],ch
   14005f142:	jo     0x14005f144
   14005f144:	add    BYTE PTR cs:[rbp+0x0],ah
   14005f148:	js     0x14005f14a
   14005f14a:	add    BYTE PTR gs:[rax],al
   14005f14d:	add    BYTE PTR [rax],al
   14005f14f:	add    BYTE PTR [rax+0x1002e00],al
   14005f155:	add    BYTE PTR [rax+rax*1+0x65],cl
   14005f159:	add    BYTE PTR [rdi+0x0],ah
   14005f15c:	(bad)  
   14005f15d:	add    BYTE PTR [rax+rax*1+0x43],ch
   14005f161:	add    BYTE PTR [rdi+0x0],ch
   14005f164:	jo     0x14005f166
   14005f166:	jns    0x14005f168
   14005f168:	jb     0x14005f16a
   14005f16a:	imul   eax,DWORD PTR [rax],0x680067
   14005f170:	je     0x14005f172
   14005f172:	add    BYTE PTR [rax],al
   14005f174:	test   eax,0x4d002000
   14005f179:	add    BYTE PTR [rcx+0x0],ch
   14005f17c:	movsxd eax,DWORD PTR [rax]
   14005f17e:	jb     0x14005f180
   14005f180:	outs   dx,DWORD PTR ds:[rsi]
   14005f181:	add    BYTE PTR [rbx+0x0],dh
   14005f184:	outs   dx,DWORD PTR ds:[rsi]
   14005f185:	add    BYTE PTR [rsi+0x0],ah
   14005f188:	je     0x14005f18a
   14005f18a:	and    BYTE PTR [rax],al
   14005f18c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14005f190:	jb     0x14005f192
   14005f192:	jo     0x14005f194
   14005f194:	outs   dx,DWORD PTR ds:[rsi]
   14005f195:	add    BYTE PTR [rdx+0x0],dh
   14005f198:	(bad)  
   14005f199:	add    BYTE PTR [rax+rax*1+0x69],dh
   14005f19d:	add    BYTE PTR [rdi+0x0],ch
   14005f1a0:	outs   dx,BYTE PTR ds:[rsi]
   14005f1a1:	add    BYTE PTR [rsi],ch
   14005f1a3:	add    BYTE PTR [rax],ah
   14005f1a5:	add    BYTE PTR [rcx+0x0],al
   14005f1a8:	ins    BYTE PTR es:[rdi],dx
   14005f1a9:	add    BYTE PTR [rax+rax*1+0x20],ch
   14005f1ad:	add    BYTE PTR [rdx+0x0],dh
   14005f1b0:	imul   eax,DWORD PTR [rax],0x680067
   14005f1b6:	je     0x14005f1b8
   14005f1b8:	jae    0x14005f1ba
   14005f1ba:	and    BYTE PTR [rax],al
   14005f1bc:	jb     0x14005f1be
   14005f1be:	add    BYTE PTR gs:[rbx+0x0],dh
   14005f1c2:	add    BYTE PTR gs:[rdx+0x0],dh
   14005f1c6:	jbe    0x14005f1c8
   14005f1c8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14005f1cd:	add    BYTE PTR [rax],al
   14005f1cf:	add    BYTE PTR [rsi],bh
   14005f1d1:	add    BYTE PTR [rbx],cl
   14005f1d3:	add    BYTE PTR [rcx],al
   14005f1d5:	add    BYTE PTR [rdi+0x0],cl
   14005f1d8:	jb     0x14005f1da
   14005f1da:	imul   eax,DWORD PTR [rax],0x690067
   14005f1e0:	outs   dx,BYTE PTR ds:[rsi]
   14005f1e1:	add    BYTE PTR [rcx+0x0],ah
   14005f1e4:	ins    BYTE PTR es:[rdi],dx
   14005f1e5:	add    BYTE PTR [rsi+0x0],al
   14005f1e8:	imul   eax,DWORD PTR [rax],0x65006c
   14005f1ee:	outs   dx,BYTE PTR ds:[rsi]
   14005f1ef:	add    BYTE PTR [rcx+0x0],ah
   14005f1f2:	ins    DWORD PTR es:[rdi],dx
   14005f1f3:	add    BYTE PTR [rbp+0x0],ah
   14005f1f6:	add    BYTE PTR [rax],al
   14005f1f8:	push   rsp
   14005f1f9:	add    BYTE PTR [rcx+0x0],ah
   14005f1fc:	(bad)  
   14005f1fd:	add    BYTE PTR [rax+rax*1+0x69],dl
   14005f201:	add    BYTE PTR [rax+0x0],dh
   14005f204:	add    BYTE PTR cs:[rbp+0x0],ah
   14005f208:	js     0x14005f20a
   14005f20a:	add    BYTE PTR gs:[rax],al
   14005f20d:	add    BYTE PTR [rax],al
   14005f20f:	add    BYTE PTR [rdx+0x0],ch
   14005f212:	and    eax,0x50000100
   14005f217:	add    BYTE PTR [rdx+0x0],dh
   14005f21a:	outs   dx,DWORD PTR ds:[rsi]
   14005f21b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14005f21f:	add    BYTE PTR [rbx+0x0],ah
   14005f222:	je     0x14005f224
   14005f224:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14005f228:	ins    DWORD PTR es:[rdi],dx
   14005f229:	add    BYTE PTR [rbp+0x0],ah
   14005f22c:	add    BYTE PTR [rax],al
   14005f22e:	add    BYTE PTR [rax],al
   14005f230:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14005f234:	movsxd eax,DWORD PTR [rax]
   14005f236:	jb     0x14005f238
   14005f238:	outs   dx,DWORD PTR ds:[rsi]
   14005f239:	add    BYTE PTR [rbx+0x0],dh
   14005f23c:	outs   dx,DWORD PTR ds:[rsi]
   14005f23d:	add    BYTE PTR [rsi+0x0],ah
   14005f240:	je     0x14005f242
   14005f242:	scas   al,BYTE PTR es:[rdi]
   14005f243:	add    BYTE PTR [rax],ah
   14005f245:	add    BYTE PTR [rdi+0x0],dl
   14005f248:	imul   eax,DWORD PTR [rax],0x64006e
   14005f24e:	outs   dx,DWORD PTR ds:[rsi]
   14005f24f:	add    BYTE PTR [rdi+0x0],dh
   14005f252:	jae    0x14005f254
   14005f254:	scas   al,BYTE PTR es:[rdi]
   14005f255:	add    BYTE PTR [rax],ah
   14005f257:	add    BYTE PTR [rdi+0x0],cl
   14005f25a:	jo     0x14005f25c
   14005f25c:	add    BYTE PTR gs:[rdx+0x0],dh
   14005f260:	(bad)  
   14005f261:	add    BYTE PTR [rax+rax*1+0x69],dh
   14005f265:	add    BYTE PTR [rsi+0x0],ch
   14005f268:	add    BYTE PTR [eax],ah
   14005f26b:	add    BYTE PTR [rbx+0x0],dl
   14005f26e:	jns    0x14005f270
   14005f270:	jae    0x14005f272
   14005f272:	je     0x14005f274
   14005f274:	add    BYTE PTR gs:[rbp+0x0],ch
   14005f278:	add    BYTE PTR [rax],al
   14005f27a:	add    BYTE PTR [rax],al
   14005f27c:	rex.RX add BYTE PTR [rcx],r10b
   14005f27f:	add    BYTE PTR [rcx],al
   14005f281:	add    BYTE PTR [rax+0x0],dl
   14005f284:	jb     0x14005f286
   14005f286:	outs   dx,DWORD PTR ds:[rsi]
   14005f287:	add    BYTE PTR [rax+rax*1+0x75],ah
   14005f28b:	add    BYTE PTR [rbx+0x0],ah
   14005f28e:	je     0x14005f290
   14005f290:	push   rsi
   14005f291:	add    BYTE PTR [rbp+0x0],ah
   14005f294:	jb     0x14005f296
   14005f296:	jae    0x14005f298
   14005f298:	imul   eax,DWORD PTR [rax],0x6e006f
   14005f29e:	add    BYTE PTR [rax],al
   14005f2a0:	xor    DWORD PTR [rax],eax
   14005f2a2:	xor    BYTE PTR [rax],al
   14005f2a4:	add    BYTE PTR cs:[rax],dh
   14005f2a7:	add    BYTE PTR [rsi],ch
   14005f2a9:	add    BYTE PTR [rcx],dh
   14005f2ab:	add    BYTE PTR [rax],dh
   14005f2ad:	add    BYTE PTR [rdx],dh
   14005f2af:	add    BYTE PTR [rax+rax*1],dh
   14005f2b2:	xor    BYTE PTR [rax],al
   14005f2b4:	add    BYTE PTR cs:[rcx],dh
   14005f2b7:	add    BYTE PTR [rsi],dh
   14005f2b9:	add    BYTE PTR [rsi],dh
   14005f2bb:	add    BYTE PTR [rax],dh
   14005f2bd:	add    BYTE PTR [rbx],dh
   14005f2bf:	add    BYTE PTR [rax],al
   14005f2c1:	add    BYTE PTR [rax],al
   14005f2c3:	add    BYTE PTR [rax],ch
   14005f2c5:	add    BYTE PTR [rax],al
   14005f2c7:	add    BYTE PTR [rcx],al
   14005f2c9:	add    BYTE PTR [rdi+0x0],cl
   14005f2cc:	ins    BYTE PTR es:[rdi],dx
   14005f2cd:	add    BYTE PTR [rbp+0x0],ah
   14005f2d0:	push   rbx
   14005f2d1:	add    BYTE PTR [rbp+0x0],ah
   14005f2d4:	ins    BYTE PTR es:[rdi],dx
   14005f2d5:	add    BYTE PTR [rsi+0x0],ah
   14005f2d8:	push   rdx
   14005f2d9:	add    BYTE PTR [rbp+0x0],ah
   14005f2dc:	add    BYTE PTR [ecx+0x0],ch
   14005f2e0:	jae    0x14005f2e2
   14005f2e2:	je     0x14005f2e4
   14005f2e4:	add    BYTE PTR gs:[rdx+0x0],dh
   14005f2e8:	add    BYTE PTR [rax],al
   14005f2ea:	add    BYTE PTR [rax],al
   14005f2ec:	add    BYTE PTR [rax],r8b
   14005f2ef:	add    BYTE PTR [rcx],al
   14005f2f1:	add    BYTE PTR [rsi+0x0],dl
   14005f2f4:	(bad)  
   14005f2f5:	add    BYTE PTR [rdx+0x0],dh
   14005f2f8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14005f2fc:	ins    BYTE PTR es:[rdi],dx
   14005f2fd:	add    BYTE PTR [rbp+0x0],ah
   14005f300:	rex.WB add BYTE PTR [r14+0x0],bpl
   14005f304:	data16 add BYTE PTR [rdi+0x0],ch
   14005f308:	add    BYTE PTR [rax],al
   14005f30a:	add    BYTE PTR [rax],al
   14005f30c:	and    al,0x0
   14005f30e:	add    al,0x0
   14005f310:	add    BYTE PTR [rax],al
   14005f312:	push   rsp
   14005f313:	add    BYTE PTR [rdx+0x0],dh
   14005f316:	(bad)  
   14005f317:	add    BYTE PTR [rsi+0x0],ch
   14005f31a:	jae    0x14005f31c
   14005f31c:	ins    BYTE PTR es:[rdi],dx
   14005f31d:	add    BYTE PTR [rcx+0x0],ah
   14005f320:	je     0x14005f322
   14005f322:	imul   eax,DWORD PTR [rax],0x6e006f
   14005f328:	add    BYTE PTR [rax],al
   14005f32a:	add    BYTE PTR [rax],al
   14005f32c:	or     DWORD PTR [rax+rsi*4],eax
   14005f32f:	add    al,0xcd
   14005f331:	dec    ch
   14005f333:	(bad)  
   14005f334:	rol    BYTE PTR [rax],1
   14005f336:	add    BYTE PTR [rax],al
   14005f338:	add    BYTE PTR [rax],al
   14005f33a:	add    DWORD PTR [rax],eax
   14005f33c:	add    BYTE PTR [rax],al
   14005f33e:	add    BYTE PTR [rax],al
   14005f340:	adc    DWORD PTR [rax],eax
   14005f342:	add    BYTE PTR [rax],al
   14005f344:	add    BYTE PTR [rax],al
   14005f346:	add    BYTE PTR [rax],al
   14005f348:	add    al,BYTE PTR [rax]
   14005f34a:	add    BYTE PTR [rax],al
   14005f34c:	pushw  0xad7a
   14005f350:	clc    
   14005f351:	(bad)  
   14005f352:	mov    ebp,0xc18f6c77
   14005f357:	mov    ecx,DWORD PTR [rsi-0x51df7161]
   14005f35d:	push   0xffffffffffffffdf
   14005f35f:	popf   
   14005f360:	test   BYTE PTR [rbx-0x3d678831],ch
   14005f366:	nop
   14005f367:	stos   BYTE PTR es:[rdi],al
   14005f368:	add    BYTE PTR [rbx+rax*8],bh
   14005f36b:	(bad)  
	...
   14005f384:	mov    BYTE PTR [rax],al
   14005f386:	add    BYTE PTR [rax],al
   14005f388:	(bad)  
   14005f389:	add    BYTE PTR [rax],al
   14005f38b:	add    BYTE PTR [rax+0x10000000],bl
   14005f391:	add    BYTE PTR [rax],al
   14005f393:	add    BYTE PTR [rax+0xe000000],ch
   14005f399:	add    BYTE PTR [rax],al
   14005f39b:	add    BYTE PTR [rax+0x8000000],bh
	...
   14005f3a9:	add    BYTE PTR [rax],al
   14005f3ab:	add    al,al
   14005f3ad:	add    BYTE PTR [rax],al
   14005f3af:	add    BYTE PTR [rax+rax*1],cl
   14005f3b2:	add    BYTE PTR [rax],al
   14005f3b4:	add    BYTE PTR [rax],al
   14005f3b6:	add    BYTE PTR [rax],al
   14005f3b8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14005f3bc:	rex.WB add BYTE PTR [r8],al
	...
   14005f3c7:	add    BYTE PTR [rbx],al
   14005f3c9:	add    BYTE PTR [rax],al
   14005f3cb:	add    BYTE PTR [rsi],cl
   14005f3cd:	add    BYTE PTR [rax],al
   14005f3cf:	add    BYTE PTR [rax],dl
   14005f3d1:	add    BYTE PTR [rax],al
   14005f3d3:	add    BYTE PTR [rax],bl
   14005f3d5:	add    BYTE PTR [rax],al
   14005f3d7:	add    BYTE PTR [rbp+0x0],cl
   14005f3da:	push   rbp
   14005f3db:	add    BYTE PTR [rcx+0x0],cl
	...
   14005f3e6:	add    BYTE PTR [rax],al
   14005f3e8:	(bad)  
   14005f3e9:	add    BYTE PTR [rax],al
   14005f3eb:	add    BYTE PTR [rax],dl
   14005f3ed:	add    BYTE PTR [rax],al
   14005f3ef:	add    BYTE PTR [rbp+0x0],ah
   14005f3f2:	outs   dx,BYTE PTR ds:[rsi]
   14005f3f3:	add    BYTE PTR [rip+0x53005500],ch        # 0x1930648f9
   14005f3f9:	add    BYTE PTR [rax],al
   14005f3fb:	add    BYTE PTR [rax],al
   14005f3fd:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140060000 <.reloc>:
   140060000:	add    al,dl
   140060002:	add    eax,DWORD PTR [rax]
   140060004:	xor    al,0x0
   140060006:	add    BYTE PTR [rax],al
   140060008:	sub    BYTE PTR [rdi-0x58bf58d0],ah
   14006000e:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140060010:	push   rax
   140060011:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060012:	pop    rax
   140060013:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060014:	(bad)  
   140060015:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060016:	push   0x78a770a7
   14006001b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006001c:	and    BYTE PTR [rdi-0x586f5878],0x98
   140060023:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060024:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14006002d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006002e:	enter  0xe0a7,0xa7
   140060032:	call   0x143e600de
   140060037:	add    BYTE PTR [rax],bh
   140060039:	add    DWORD PTR [rax],eax
   14006003b:	add    al,dh
   14006003d:	movabs ds:0xa310a308a300a2f8,al
   140060046:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   14006004c:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   140060052:	movabs ds:0xa380a378a358a350,rax
   14006005c:	mov    BYTE PTR [rbx-0x5c675c70],ah
   140060062:	movabs al,ds:0x30aa28aa20aa18a3
   14006006b:	stos   BYTE PTR es:[rdi],al
   14006006c:	cmp    BYTE PTR [rdx-0x55b755c0],ch
   140060072:	push   rax
   140060073:	stos   BYTE PTR es:[rdi],al
   140060074:	pop    rax
   140060075:	stos   BYTE PTR es:[rdi],al
   140060076:	(bad)  
   140060077:	stos   BYTE PTR es:[rdi],al
   140060078:	push   0x78aa70aa
   14006007d:	stos   BYTE PTR es:[rdi],al
   14006007e:	sub    BYTE PTR [rdx-0x54e75578],0x20
   140060085:	stos   DWORD PTR es:[rdi],eax
   140060086:	sub    BYTE PTR [rbx-0x54c754d0],ch
   14006008c:	loopne 0x140060039
   14006008e:	call   0x138b1f13e
   140060093:	stos   DWORD PTR es:[rdi],eax
   140060094:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14006009b:	lods   al,BYTE PTR ds:[rsi]
   14006009c:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   1400600a3:	lods   al,BYTE PTR ds:[rsi]
   1400600a4:	lods   al,BYTE PTR ds:[rsi]
   1400600a6:	rex.W lods al,BYTE PTR ds:[rsi]
   1400600a8:	push   rax
   1400600a9:	lods   al,BYTE PTR ds:[rsi]
   1400600aa:	pop    rax
   1400600ab:	lods   al,BYTE PTR ds:[rsi]
   1400600ac:	(bad)  
   1400600ad:	lods   al,BYTE PTR ds:[rsi]
   1400600ae:	push   0x78ac70ac
   1400600b3:	lods   al,BYTE PTR ds:[rsi]
   1400600b4:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400600bc:	movabs al,ds:0xc0acb8acb0aca8ac
   1400600c5:	lods   al,BYTE PTR ds:[rsi]
   1400600c6:	enter  0xd0ac,0xac
   1400600ca:	fsubr  DWORD PTR [rax+riz*8+0x10ad08ac]
   1400600d1:	lods   eax,DWORD PTR ds:[rsi]
   1400600d2:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   1400600d8:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   1400600de:	lods   rax,QWORD PTR ds:[rsi]
   1400600e0:	push   rax
   1400600e1:	lods   eax,DWORD PTR ds:[rsi]
   1400600e2:	pop    rax
   1400600e3:	lods   eax,DWORD PTR ds:[rsi]
   1400600e4:	(bad)  
   1400600e5:	lods   eax,DWORD PTR ds:[rsi]
   1400600e6:	push   0x78ad70ad
   1400600eb:	lods   eax,DWORD PTR ds:[rsi]
   1400600ec:	sub    BYTE PTR [rbp-0x526f5278],0x98
   1400600f3:	lods   eax,DWORD PTR ds:[rsi]
   1400600f4:	movabs al,ds:0xc0adb8adb0ada8ad
   1400600fd:	lods   eax,DWORD PTR ds:[rsi]
   1400600fe:	enter  0xd0ad,0xad
   140060102:	fsubr  DWORD PTR [rbp-0x52175220]
   140060108:	lock lods eax,DWORD PTR ds:[rsi]
   14006010a:	clc    
   14006010b:	lods   eax,DWORD PTR ds:[rsi]
   14006010c:	add    BYTE PTR [rsi-0x51df51f8],ch
   140060112:	sub    BYTE PTR [rsi-0x51c751d0],ch
   140060118:	scas   al,BYTE PTR es:[rdi]
   14006011a:	rex.W scas al,BYTE PTR es:[rdi]
   14006011c:	push   rax
   14006011d:	scas   al,BYTE PTR es:[rdi]
   14006011e:	pop    rax
   14006011f:	scas   al,BYTE PTR es:[rdi]
   140060120:	(bad)  
   140060121:	scas   al,BYTE PTR es:[rdi]
   140060122:	push   0xffffffff88ae80ae
   140060127:	scas   al,BYTE PTR es:[rdi]
   140060128:	nop
   140060129:	scas   al,BYTE PTR es:[rdi]
   14006012a:	cwde   
   14006012b:	scas   al,BYTE PTR es:[rdi]
   14006012c:	movabs al,ds:0x20af18af10af08ae
   140060135:	scas   eax,DWORD PTR es:[rdi]
   140060136:	sub    BYTE PTR [rdi-0x50c750d0],ch
   14006013c:	rex scas eax,DWORD PTR es:[rdi]
   14006013e:	scas   rax,QWORD PTR es:[rdi]
   140060140:	push   rax
   140060141:	scas   eax,DWORD PTR es:[rdi]
   140060142:	pop    rax
   140060143:	scas   eax,DWORD PTR es:[rdi]
   140060144:	(bad)  
   140060145:	scas   eax,DWORD PTR es:[rdi]
   140060146:	push   0x78af70af
   14006014b:	scas   eax,DWORD PTR es:[rdi]
   14006014c:	sub    BYTE PTR [rdi-0x506f5078],0x98
   140060153:	scas   eax,DWORD PTR es:[rdi]
   140060154:	movabs al,ds:0xc0afb8afb0afa8af
   14006015d:	scas   eax,DWORD PTR es:[rdi]
   14006015e:	enter  0xd0af,0xaf
   140060162:	fsubr  DWORD PTR [rdi-0x50175020]
   140060168:	lock scas eax,DWORD PTR es:[rdi]
   14006016a:	clc    
   14006016b:	scas   eax,DWORD PTR es:[rdi]
   14006016c:	add    al,dh
   14006016e:	add    eax,DWORD PTR [rax]
   140060170:	add    BYTE PTR [rcx],0x0
   140060173:	add    BYTE PTR [rax],al
   140060175:	movabs al,ds:0xa020a018a010a008
   14006017e:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   140060184:	movabs al,ds:0xa060a058a050a048
   14006018e:	push   0x78a070a0
   140060193:	movabs al,ds:0xa098a090a088a080
   14006019c:	movabs al,ds:0xc0a0b8a0b0a0a8a0
   1400601a5:	movabs al,ds:0xa0e0a0d8a0d0a0c8
   1400601ae:	call   0x138a6f253
   1400601b3:	movabs al,ds:0xa118a110a108a100
   1400601bc:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   1400601c2:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   1400601c8:	push   rax
   1400601c9:	movabs eax,ds:0xa170a168a160a158
   1400601d2:	mov    BYTE PTR [rcx-0x5e675e70],ah
   1400601d8:	movabs al,ds:0xc0a1b8a1b0a1a8a1
   1400601e1:	movabs eax,ds:0xa1e0a1d8a1d0a1c8
   1400601ea:	call   0x138a7f290
   1400601ef:	movabs eax,ds:0xa218a210a208a200
   1400601f8:	and    BYTE PTR [rdx-0x5dcf5dd8],ah
   1400601fe:	cmp    BYTE PTR [rdx-0x5db75dc0],ah
   140060204:	push   rax
   140060205:	movabs ds:0xa2c0a2b8a2b0a2a8,al
   14006020e:	enter  0xd0a2,0xa2
   140060212:	fsub   DWORD PTR [rdx-0x5d175d20]
   140060218:	lock movabs ds:0xa310a308a300a2f8,al
   140060222:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   140060228:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   14006022e:	movabs ds:0xa368a360a358a350,rax
   140060238:	jo     0x1400601dd
   14006023a:	js     0x1400601df
   14006023c:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   140060243:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   14006024c:	shl    BYTE PTR [rbx-0x5c2f5c38],0xd8
   140060253:	movabs ds:0xa428a420a418a410,eax
   14006025c:	xor    BYTE PTR [rax+rdi*1+0x48a440a4],ah
   140060263:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140060264:	push   rax
   140060265:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140060266:	pop    rax
   140060267:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140060268:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14006026a:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14006026c:	push   rax
   14006026d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14006026e:	pop    rax
   14006026f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140060270:	(bad)  
   140060271:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140060272:	push   0xffffffffa0a598a5
   140060277:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140060278:	test   al,0xa5
   14006027a:	mov    al,0xa5
   14006027c:	mov    eax,0xc8a5c0a5
   140060281:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140060282:	call   0x138abf32c
   140060287:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140060288:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14006028e:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   140060294:	shl    BYTE PTR [rdi-0x581f5828],1
   14006029a:	call   0x138adf346
   14006029f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400602a0:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400602a6:	sbb    BYTE PTR [rax-0x57d757e0],ch
   1400602ac:	xor    BYTE PTR [rax-0x57bf57c8],ch
   1400602b2:	rex.W test al,0x50
   1400602b5:	test   al,0x58
   1400602b7:	test   al,0x60
   1400602b9:	test   al,0x68
   1400602bb:	test   al,0x70
   1400602bd:	test   al,0x78
   1400602bf:	test   al,0x80
   1400602c1:	test   al,0x88
   1400602c3:	test   al,0x90
   1400602c5:	test   al,0x98
   1400602c7:	test   al,0xa0
   1400602c9:	test   al,0xa8
   1400602cb:	test   al,0xb0
   1400602cd:	test   al,0xb8
   1400602cf:	test   al,0xc0
   1400602d1:	test   al,0xc8
   1400602d3:	test   al,0xd0
   1400602d5:	test   al,0xd8
   1400602d7:	test   al,0xe0
   1400602d9:	test   al,0x18
   1400602db:	stos   BYTE PTR es:[rdi],al
   1400602dc:	and    BYTE PTR [rdx-0x54ef55d8],ch
   1400602e2:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   1400602e8:	xor    BYTE PTR [rbx+0x1000ab38],ch
   1400602ee:	add    al,0x0
   1400602f0:	ins    BYTE PTR es:[rdi],dx
   1400602f1:	add    BYTE PTR [rax],al
   1400602f3:	add    BYTE PTR [rax],ch
   1400602f5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400602f6:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400602f8:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400602fa:	push   rax
   1400602fb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400602fc:	jo     0x1400602a5
   1400602fe:	js     0x1400602a7
   140060300:	and    BYTE PTR [rdi-0x586f5878],0x98
   140060307:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060308:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140060311:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060312:	enter  0xd0a7,0xa7
   140060316:	fsub   DWORD PTR [rdi-0x58175820]
   14006031c:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14006031e:	clc    
   14006031f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140060320:	add    BYTE PTR [rax-0x57ef57f8],ch
   140060326:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14006032c:	xor    BYTE PTR [rax-0x57b757c8],ch
   140060332:	push   rax
   140060333:	test   al,0x58
   140060335:	test   al,0x60
   140060337:	test   al,0x68
   140060339:	test   al,0x70
   14006033b:	test   al,0x78
   14006033d:	test   al,0x80
   14006033f:	test   al,0x88
   140060341:	test   al,0x90
   140060343:	test   al,0x98
   140060345:	test   al,0xa0
   140060347:	test   al,0xa8
   140060349:	test   al,0xb0
   14006034b:	test   al,0xb8
   14006034d:	test   al,0xc0
   14006034f:	test   al,0xc8
   140060351:	test   al,0xd0
   140060353:	test   al,0xd8
   140060355:	test   al,0x0
   140060357:	add    BYTE PTR [rax],al
   140060359:	and    BYTE PTR [rax+rax*1],al
   14006035c:	loopne 0x14006035f
   14006035e:	add    BYTE PTR [rax],al
   140060360:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140060362:	and    BYTE PTR [rsi-0x59af59c8],ah
   140060368:	push   0xffffffff98a680a6
   14006036d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14006036e:	shl    BYTE PTR [rsi-0x58ff5918],1
   140060374:	sbb    BYTE PTR [rdi-0x589758b0],ah
   14006037a:	movabs al,ds:0x78a860a7d0a7b8a7
   140060383:	test   al,0x90
   140060385:	test   al,0xa8
   140060387:	test   al,0xc0
   140060389:	test   al,0x50
   14006038b:	test   eax,0xa960a958
   140060390:	push   0x78a970a9
   140060395:	test   eax,0xa988a980
   14006039a:	nop
   14006039b:	test   eax,0xa9a0a998
   1400603a0:	test   al,0xa9
   1400603a2:	mov    al,0xa9
   1400603a4:	mov    eax,0xc8a9c0a9
   1400603a9:	test   eax,0xa9d8a9d0
   1400603ae:	loopne 0x140060359
   1400603b0:	call   0x138aff45e
   1400603b5:	test   eax,0xaa08aa00
   1400603ba:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400603c0:	sub    BYTE PTR [rdx-0x55c755d0],ch
   1400603c6:	stos   BYTE PTR es:[rdi],al
   1400603c8:	rex.W stos BYTE PTR es:[rdi],al
   1400603ca:	push   rax
   1400603cb:	stos   BYTE PTR es:[rdi],al
   1400603cc:	pop    rax
   1400603cd:	stos   BYTE PTR es:[rdi],al
   1400603ce:	(bad)  
   1400603cf:	stos   BYTE PTR es:[rdi],al
   1400603d0:	push   0x78aa70aa
   1400603d5:	stos   BYTE PTR es:[rdi],al
   1400603d6:	sub    BYTE PTR [rdx-0x556f5578],0x98
   1400603dd:	stos   BYTE PTR es:[rdi],al
   1400603de:	movabs al,ds:0xc0aab8aab0aaa8aa
   1400603e7:	stos   BYTE PTR es:[rdi],al
   1400603e8:	enter  0xd0aa,0xaa
   1400603ec:	fsubr  DWORD PTR [rdx-0x55175520]
   1400603f2:	lock stos BYTE PTR es:[rdi],al
   1400603f4:	clc    
   1400603f5:	stos   BYTE PTR es:[rdi],al
   1400603f6:	add    BYTE PTR [rbx-0x54ef54f8],ch
   1400603fc:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   140060402:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   140060408:	stos   QWORD PTR es:[rdi],rax
   14006040a:	push   rax
   14006040b:	stos   DWORD PTR es:[rdi],eax
   14006040c:	pop    rax
   14006040d:	stos   DWORD PTR es:[rdi],eax
   14006040e:	(bad)  
   14006040f:	stos   DWORD PTR es:[rdi],eax
   140060410:	push   0x78ab70ab
   140060415:	stos   DWORD PTR es:[rdi],eax
   140060416:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14006041d:	stos   DWORD PTR es:[rdi],eax
   14006041e:	movabs al,ds:0xc0abb8abb0aba8ab
   140060427:	stos   DWORD PTR es:[rdi],eax
   140060428:	enter  0xd0ab,0xab
   14006042c:	fsubr  DWORD PTR [rbx-0x54175420]
   140060432:	lock stos DWORD PTR es:[rdi],eax
   140060434:	clc    
   140060435:	stos   DWORD PTR es:[rdi],eax
   140060436:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14006043d:	lods   al,BYTE PTR ds:[rsi]
   14006043e:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   140060445:	lods   al,BYTE PTR ds:[rsi]
   140060446:	lods   al,BYTE PTR ds:[rsi]
   140060448:	rex.W lods al,BYTE PTR ds:[rsi]
   14006044a:	push   rax
   14006044b:	lods   al,BYTE PTR ds:[rsi]
   14006044c:	pop    rax
   14006044d:	lods   al,BYTE PTR ds:[rsi]
   14006044e:	(bad)  
   14006044f:	lods   al,BYTE PTR ds:[rsi]
   140060450:	push   0x78ac70ac
   140060455:	lods   al,BYTE PTR ds:[rsi]
   140060456:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   14006045e:	movabs al,ds:0xc0acb8acb0aca8ac
   140060467:	lods   al,BYTE PTR ds:[rsi]
   140060468:	enter  0xd0ac,0xac
   14006046c:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   140060473:	lods   al,BYTE PTR ds:[rsi]
   140060474:	clc    
   140060475:	lods   al,BYTE PTR ds:[rsi]
   140060476:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14006047c:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   140060482:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   140060488:	lods   rax,QWORD PTR ds:[rsi]
   14006048a:	push   rax
   14006048b:	lods   eax,DWORD PTR ds:[rsi]
   14006048c:	pop    rax
   14006048d:	lods   eax,DWORD PTR ds:[rsi]
   14006048e:	(bad)  
   14006048f:	lods   eax,DWORD PTR ds:[rsi]
   140060490:	push   0x78ad70ad
   140060495:	lods   eax,DWORD PTR ds:[rsi]
   140060496:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14006049d:	lods   eax,DWORD PTR ds:[rsi]
   14006049e:	movabs al,ds:0xc0adb8adb0ada8ad
   1400604a7:	lods   eax,DWORD PTR ds:[rsi]
   1400604a8:	enter  0xd0ad,0xad
   1400604ac:	fsubr  DWORD PTR [rbp-0x52175220]
   1400604b2:	lock lods eax,DWORD PTR ds:[rsi]
   1400604b4:	clc    
   1400604b5:	lods   eax,DWORD PTR ds:[rsi]
   1400604b6:	add    BYTE PTR [rsi-0x51ef51f8],ch
   1400604bc:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   1400604c2:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   1400604c8:	rex.W scas al,BYTE PTR es:[rdi]
   1400604ca:	push   rax
   1400604cb:	scas   al,BYTE PTR es:[rdi]
   1400604cc:	pop    rax
   1400604cd:	scas   al,BYTE PTR es:[rdi]
   1400604ce:	(bad)  
   1400604cf:	scas   al,BYTE PTR es:[rdi]
   1400604d0:	push   0x78ae70ae
   1400604d5:	scas   al,BYTE PTR es:[rdi]
   1400604d6:	sub    BYTE PTR [rsi-0x516f5178],0x98
   1400604dd:	scas   al,BYTE PTR es:[rdi]
   1400604de:	movabs al,ds:0xc0aeb8aeb0aea8ae
   1400604e7:	scas   al,BYTE PTR es:[rdi]
   1400604e8:	enter  0xd0ae,0xae
   1400604ec:	fsubr  DWORD PTR [rsi-0x51175120]
   1400604f2:	lock scas al,BYTE PTR es:[rdi]
   1400604f4:	clc    
   1400604f5:	scas   al,BYTE PTR es:[rdi]
   1400604f6:	add    BYTE PTR [rdi-0x50ef50f8],ch
   1400604fc:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   140060502:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   140060508:	scas   rax,QWORD PTR es:[rdi]
   14006050a:	push   rax
   14006050b:	scas   eax,DWORD PTR es:[rdi]
   14006050c:	pop    rax
   14006050d:	scas   eax,DWORD PTR es:[rdi]
   14006050e:	(bad)  
   14006050f:	scas   eax,DWORD PTR es:[rdi]
   140060510:	push   0x78af70af
   140060515:	scas   eax,DWORD PTR es:[rdi]
   140060516:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14006051d:	scas   eax,DWORD PTR es:[rdi]
   14006051e:	movabs al,ds:0xc0afb8afb0afa8af
   140060527:	scas   eax,DWORD PTR es:[rdi]
   140060528:	enter  0xd0af,0xaf
   14006052c:	fsubr  DWORD PTR [rdi-0x50175020]
   140060532:	lock scas eax,DWORD PTR es:[rdi]
   140060534:	clc    
   140060535:	scas   eax,DWORD PTR es:[rdi]
   140060536:	add    BYTE PTR [rax],al
   140060538:	add    BYTE PTR [rax],dh
   14006053a:	add    al,0x0
   14006053c:	sbb    BYTE PTR [rax],al
   14006053e:	add    BYTE PTR [rax],al
   140060540:	add    BYTE PTR [rax-0x5fef5ff8],ah
   140060546:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   14006054c:	xor    BYTE PTR [rax+0x5000a038],ah
   140060552:	add    al,0x0
   140060554:	adc    al,0x0
   140060556:	add    BYTE PTR [rax],al
   140060558:	clc    
   140060559:	test   al,0x0
   14006055b:	test   eax,0xa910a908
   140060560:	sbb    BYTE PTR [rcx-0x4fff56e0],ch
   140060566:	add    al,0x0
   140060568:	adc    BYTE PTR [rax],al
   14006056a:	add    BYTE PTR [rax],al
   14006056c:	enter  0xd0a8,0xa8
   140060570:	fsubr  DWORD PTR [rax-0x20000000]
   140060576:	add    al,0x0
   140060578:	movabs al,ds:0x28a020a000000000
   140060581:	movabs al,ds:0xa048a040a038a030
   14006058a:	push   rax
   14006058b:	movabs al,ds:0xa070a068a060a058
   140060594:	js     0x140060536
   140060596:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14006059d:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   1400605a6:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   1400605ad:	movabs al,ds:0xa100a0f8a0e8a0e0
   1400605b6:	or     BYTE PTR [rcx-0x5ee75ef0],ah
   1400605bc:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   1400605c2:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   1400605c8:	push   rax
   1400605c9:	movabs eax,ds:0xa170a168a160a158
   1400605d2:	js     0x140060575
   1400605d4:	and    BYTE PTR [rcx-0x5e575e78],0xe0
   1400605db:	movabs eax,ds:0xa210a1f8a1f0a1e8
   1400605e4:	sbb    BYTE PTR [rdx-0x5dcf5de0],ah
   1400605ea:	cmp    BYTE PTR [rdx-0x5db75dc0],ah
   1400605f0:	(bad)  
   1400605f1:	movabs ds:0xa288a280a270a268,al
   1400605fa:	nop
   1400605fb:	movabs ds:0xa2c0a2b8a2b0a298,al
   140060604:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   14006060a:	js     0x1400605b0
   14006060c:	and    BYTE PTR [rax+rsi*4-0x175b1f5c],0xa4
   140060614:	add    BYTE PTR [rax],dh
   140060616:	add    eax,0x5c00
   14006061b:	add    BYTE PTR [rax],al
   14006061d:	movabs al,ds:0xa028a020a018a010
   140060626:	xor    BYTE PTR [rax-0x5fbf5fc8],ah
   14006062c:	rex.W movabs al,ds:0xa068a060a058a050
   140060636:	jo     0x1400605d8
   140060638:	js     0x1400605da
   14006063a:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   140060641:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   14006064a:	shl    BYTE PTR [rax-0x5f275f30],0xe0
   140060651:	movabs al,ds:0xa100a0f8a0f0a0e8
   14006065a:	or     BYTE PTR [rcx-0x5ee75ef0],ah
   140060660:	and    BYTE PTR [rcx-0x5ec75ed8],ah
   140060666:	rex movabs eax,ds:0xa160a150a148
