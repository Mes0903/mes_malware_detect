
077a5c96cfd8644425f870444b604bfe3aa62587073fd85a4dc75244775b99ab.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	push   rdi
   140001006:	sub    rsp,0x20
   14000100a:	xor    edx,edx
   14000100c:	lea    rcx,[rip+0xffe5]        # 0x140010ff8
   140001013:	lea    r8d,[rdx+0x28]
   140001017:	call   0x14000864c
   14000101c:	and    DWORD PTR [rip+0xffc5],0x0        # 0x140010fe8
   140001023:	lea    rax,[rip+0xffb6]        # 0x140010fe0
   14000102a:	and    QWORD PTR [rip+0xffbe],0x0        # 0x140010ff0
   140001032:	lea    rcx,[rip+0xffbf]        # 0x140010ff8
   140001039:	and    DWORD PTR [rip+0xffac],0x0        # 0x140010fec
   140001040:	and    QWORD PTR [rip+0xffd8],0x0        # 0x140011020
   140001048:	mov    QWORD PTR [rip+0xd6f9],rax        # 0x14000e748
   14000104f:	call   0x14000343c
   140001054:	test   eax,eax
   140001056:	jns    0x140001061
   140001058:	mov    BYTE PTR [rip+0xd6d5],0x1        # 0x14000e734
   14000105f:	jmp    0x14000106b
   140001061:	mov    DWORD PTR [rip+0xff7d],0x38        # 0x140010fe8
   14000106b:	movups xmm0,XMMWORD PTR [rip+0xacbe]        # 0x14000bd30
   140001072:	movdqu XMMWORD PTR [rip+0xd6be],xmm0        # 0x14000e738
   14000107a:	call   QWORD PTR [rip+0x90e8]        # 0x14000a168
   140001080:	and    QWORD PTR [rip+0xffa8],0x0        # 0x140011030
   140001088:	xor    edx,edx
   14000108a:	xor    ecx,ecx
   14000108c:	mov    DWORD PTR [rip+0xff96],eax        # 0x140011028
   140001092:	mov    DWORD PTR [rip+0xff9c],0x1388        # 0x140011038
   14000109c:	mov    DWORD PTR [rip+0xff96],0x3e8        # 0x14001103c
   1400010a6:	mov    BYTE PTR [rip+0xff93],0x1        # 0x140011040
   1400010ad:	mov    BYTE PTR [rip+0xff8e],0x0        # 0x140011042
   1400010b4:	call   QWORD PTR [rip+0x91a6]        # 0x14000a260
   1400010ba:	test   eax,eax
   1400010bc:	jns    0x1400010e0
   1400010be:	cmp    eax,0x80010106
   1400010c3:	jne    0x1400010d7
   1400010c5:	lea    rcx,[rip+0x99d4]        # 0x14000aaa0
   1400010cc:	call   QWORD PTR [rip+0x902e]        # 0x14000a100
   1400010d2:	test   rax,rax
   1400010d5:	jne    0x1400010e7
   1400010d7:	mov    BYTE PTR [rip+0xd656],0x1        # 0x14000e734
   1400010de:	jmp    0x140001120
   1400010e0:	mov    BYTE PTR [rip+0xff5b],0x1        # 0x140011042
   1400010e7:	mov    rdi,QWORD PTR [rip+0x10022]        # 0x140011110
   1400010ee:	mov    rax,QWORD PTR [rip+0x10023]        # 0x140011118
   1400010f5:	jmp    0x14000111b
   1400010f7:	mov    rbx,QWORD PTR [rdi]
   1400010fa:	test   rbx,rbx
   1400010fd:	je     0x140001117
   1400010ff:	mov    rbx,QWORD PTR [rbx+0x40]
   140001103:	mov    rcx,rbx
   140001106:	call   QWORD PTR [rip+0x93ac]        # 0x14000a4b8
   14000110c:	mov    cl,0x1
   14000110e:	call   rbx
   140001110:	mov    rax,QWORD PTR [rip+0x10001]        # 0x140011118
   140001117:	add    rdi,0x8
   14000111b:	cmp    rdi,rax
   14000111e:	jb     0x1400010f7
   140001120:	lea    rax,[rip+0x97d9]        # 0x14000a900
   140001127:	lea    rcx,[rip+0x7df2]        # 0x140008f20
   14000112e:	mov    QWORD PTR [rip+0xfeab],rax        # 0x140010fe0
   140001135:	mov    rbx,QWORD PTR [rsp+0x30]
   14000113a:	add    rsp,0x20
   14000113e:	pop    rdi
   14000113f:	jmp    0x14000861c
   140001144:	int3   
   140001145:	int3   
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	rex push rbx
   140001152:	sub    rsp,0x20
   140001156:	xor    edx,edx
   140001158:	lea    rcx,[rip+0xff19]        # 0x140011078
   14000115f:	lea    r8d,[rdx+0x28]
   140001163:	call   0x14000864c
   140001168:	and    QWORD PTR [rip+0xff30],0x0        # 0x1400110a0
   140001170:	lea    rax,[rip+0xffffffffffffee89]        # 0x140000000
   140001177:	and    DWORD PTR [rip+0xff2a],0x0        # 0x1400110a8
   14000117e:	lea    rcx,[rip+0xfef3]        # 0x140011078
   140001185:	and    DWORD PTR [rip+0xff20],0x0        # 0x1400110ac
   14000118c:	mov    ebx,0x1
   140001191:	mov    QWORD PTR [rip+0xfec8],rax        # 0x140011060
   140001198:	mov    QWORD PTR [rip+0xfeb9],rax        # 0x140011058
   14000119f:	lea    rax,[rip+0xa2d2]        # 0x14000b478
   1400011a6:	mov    QWORD PTR [rip+0xfec3],rax        # 0x140011070
   1400011ad:	mov    DWORD PTR [rip+0xfe99],0x60        # 0x140011050
   1400011b7:	mov    BYTE PTR [rip+0xfeab],bl        # 0x140011068
   1400011bd:	mov    DWORD PTR [rip+0xfea5],0x800        # 0x14001106c
   1400011c7:	call   0x14000343c
   1400011cc:	movzx  ecx,BYTE PTR [rip+0xd561]        # 0x14000e734
   1400011d3:	test   eax,eax
   1400011d5:	cmovs  ecx,ebx
   1400011d8:	mov    BYTE PTR [rip+0xd556],cl        # 0x14000e734
   1400011de:	lea    rcx,[rip+0x7dbb]        # 0x140008fa0
   1400011e5:	add    rsp,0x20
   1400011e9:	pop    rbx
   1400011ea:	jmp    0x14000861c
   1400011ef:	int3   
   1400011f0:	sub    rsp,0x28
   1400011f4:	xor    edx,edx
   1400011f6:	lea    rcx,[rip+0xfebb]        # 0x1400110b8
   1400011fd:	lea    r8d,[rdx+0x28]
   140001201:	call   0x14000864c
   140001206:	and    QWORD PTR [rip+0xfeda],0x0        # 0x1400110e8
   14000120e:	lea    rcx,[rip+0xfea3]        # 0x1400110b8
   140001215:	and    DWORD PTR [rip+0xfed4],0x0        # 0x1400110f0
   14000121c:	and    DWORD PTR [rip+0xfed1],0x0        # 0x1400110f4
   140001223:	and    QWORD PTR [rip+0xfeb5],0x0        # 0x1400110e0
   14000122b:	mov    DWORD PTR [rip+0xfe7b],0x48        # 0x1400110b0
   140001235:	call   0x14000343c
   14000123a:	test   eax,eax
   14000123c:	jns    0x14000124c
   14000123e:	and    DWORD PTR [rip+0xfe6b],0x0        # 0x1400110b0
   140001245:	mov    BYTE PTR [rip+0xd4e8],0x1        # 0x14000e734
   14000124c:	lea    rcx,[rip+0x7d9d]        # 0x140008ff0
   140001253:	add    rsp,0x28
   140001257:	jmp    0x14000861c
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	sub    rsp,0x28
   140001264:	xor    edx,edx
   140001266:	lea    rcx,[rip+0xfeb3]        # 0x140011120
   14000126d:	lea    r8d,[rdx+0x28]
   140001271:	call   0x14000864c
   140001276:	and    DWORD PTR [rip+0xfe83],0x0        # 0x140011100
   14000127d:	lea    rax,[rip+0xffffffffffffed7c]        # 0x140000000
   140001284:	mov    QWORD PTR [rip+0xfe7d],rax        # 0x140011108
   14000128b:	lea    rcx,[rip+0xfe8e]        # 0x140011120
   140001292:	lea    rax,[rip+0xbc5f]        # 0x14000cef8
   140001299:	mov    QWORD PTR [rip+0xfe70],rax        # 0x140011110
   1400012a0:	lea    rax,[rip+0xbc59]        # 0x14000cf00
   1400012a7:	mov    QWORD PTR [rip+0xfe6a],rax        # 0x140011118
   1400012ae:	call   0x14000343c
   1400012b3:	test   eax,eax
   1400012b5:	jns    0x1400012c0
   1400012b7:	mov    BYTE PTR [rip+0xd476],0x1        # 0x14000e734
   1400012be:	jmp    0x1400012ca
   1400012c0:	mov    DWORD PTR [rip+0xfe36],0x48        # 0x140011100
   1400012ca:	lea    rcx,[rip+0x7e0f]        # 0x1400090e0
   1400012d1:	add    rsp,0x28
   1400012d5:	jmp    0x14000861c
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	lea    rcx,[rip+0x7e09]        # 0x1400090f0
   1400012e7:	jmp    0x14000861c
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	int3   
   1400012f1:	int3   
   1400012f2:	int3   
   1400012f3:	int3   
   1400012f4:	int3   
   1400012f5:	int3   
   1400012f6:	int3   
   1400012f7:	int3   
   1400012f8:	int3   
   1400012f9:	int3   
   1400012fa:	int3   
   1400012fb:	int3   
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	mov    QWORD PTR [rsp+0x8],rbx
   140001305:	push   rdi
   140001306:	sub    rsp,0x20
   14000130a:	mov    r10,QWORD PTR [rsp+0x60]
   14000130f:	xor    edi,edi
   140001311:	test   r10,r10
   140001314:	je     0x14000140a
   14000131a:	test   edx,edx
   14000131c:	je     0x1400013c7
   140001322:	sub    edx,0x1
   140001325:	jne    0x14000140a
   14000132b:	mov    r11d,edi
   14000132e:	mov    rax,QWORD PTR [rsp+0x50]
   140001333:	mov    QWORD PTR [r10+0x10],r9
   140001337:	lea    r9d,[rdi+0x1]
   14000133b:	mov    DWORD PTR [r10+0x24],r9d
   14000133f:	mov    BYTE PTR [r10+0x28],r8b
   140001343:	mov    QWORD PTR [r10+0x18],rax
   140001347:	cmp    di,WORD PTR [r10+0x2a]
   14000134c:	jae    0x14000140a
   140001352:	mov    rax,QWORD PTR [r10+0x38]
   140001356:	mov    dl,BYTE PTR [r10+0x28]
   14000135a:	mov    ebx,r11d
   14000135d:	mov    rcx,QWORD PTR [rax+rbx*8]
   140001361:	mov    rax,QWORD PTR [r10+0x40]
   140001365:	cmp    BYTE PTR [rbx+rax*1],dl
   140001368:	jbe    0x14000136e
   14000136a:	test   dl,dl
   14000136c:	jne    0x140001386
   14000136e:	test   rcx,rcx
   140001371:	je     0x1400013a1
   140001373:	test   QWORD PTR [r10+0x10],rcx
   140001377:	je     0x140001386
   140001379:	mov    rax,QWORD PTR [r10+0x18]
   14000137d:	and    rax,rcx
   140001380:	cmp    rax,QWORD PTR [r10+0x18]
   140001384:	je     0x1400013a1
   140001386:	mov    r8,QWORD PTR [r10+0x30]
   14000138a:	mov    ecx,r11d
   14000138d:	and    ecx,0x1f
   140001390:	shr    rbx,0x5
   140001394:	mov    edx,r9d
   140001397:	shl    edx,cl
   140001399:	not    edx
   14000139b:	and    DWORD PTR [r8+rbx*4],edx
   14000139f:	jmp    0x1400013b8
   1400013a1:	mov    r8,QWORD PTR [r10+0x30]
   1400013a5:	mov    ecx,r11d
   1400013a8:	and    ecx,0x1f
   1400013ab:	shr    rbx,0x5
   1400013af:	mov    edx,r9d
   1400013b2:	shl    edx,cl
   1400013b4:	or     DWORD PTR [r8+rbx*4],edx
   1400013b8:	movzx  eax,WORD PTR [r10+0x2a]
   1400013bd:	add    r11d,r9d
   1400013c0:	cmp    r11d,eax
   1400013c3:	jb     0x140001352
   1400013c5:	jmp    0x14000140a
   1400013c7:	mov    DWORD PTR [r10+0x24],edi
   1400013cb:	mov    BYTE PTR [r10+0x28],dil
   1400013cf:	mov    QWORD PTR [r10+0x10],rdi
   1400013d3:	mov    QWORD PTR [r10+0x18],rdi
   1400013d7:	cmp    WORD PTR [r10+0x2a],di
   1400013dc:	jbe    0x14000140a
   1400013de:	movzx  eax,WORD PTR [r10+0x2a]
   1400013e3:	mov    r9d,0x1
   1400013e9:	mov    rcx,QWORD PTR [r10+0x30]
   1400013ed:	sub    eax,r9d
   1400013f0:	cdq    
   1400013f1:	and    edx,0x1f
   1400013f4:	add    eax,edx
   1400013f6:	xor    edx,edx
   1400013f8:	sar    eax,0x5
   1400013fb:	add    eax,r9d
   1400013fe:	movsxd r8,eax
   140001401:	shl    r8,0x2
   140001405:	call   0x14000864c
   14000140a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000140f:	add    rsp,0x20
   140001413:	pop    rdi
   140001414:	ret    
   140001415:	int3   
   140001416:	int3   
   140001417:	int3   
   140001418:	int3   
   140001419:	int3   
   14000141a:	int3   
   14000141b:	int3   
   14000141c:	cmp    QWORD PTR [rip+0xd38c],0x0        # 0x14000e7b0
   140001424:	je     0x140001429
   140001426:	xor    eax,eax
   140001428:	ret    
   140001429:	lea    r9,[rip+0xd380]        # 0x14000e7b0
   140001430:	lea    r8,[rip+0xcc39]        # 0x14000e070
   140001437:	lea    rdx,[rip+0xfffffffffffffec2]        # 0x140001300
   14000143e:	lea    rcx,[rip+0x9bab]        # 0x14000aff0
   140001445:	rex.W jmp QWORD PTR [rip+0x8bb4]        # 0x14000a000
   14000144c:	int3   
   14000144d:	int3   
   14000144e:	int3   
   14000144f:	int3   
   140001450:	int3   
   140001451:	int3   
   140001452:	int3   
   140001453:	int3   
   140001454:	sub    rsp,0x28
   140001458:	mov    rcx,QWORD PTR [rip+0xd351]        # 0x14000e7b0
   14000145f:	test   rcx,rcx
   140001462:	jne    0x140001468
   140001464:	xor    eax,eax
   140001466:	jmp    0x140001476
   140001468:	call   QWORD PTR [rip+0x8b9a]        # 0x14000a008
   14000146e:	and    QWORD PTR [rip+0xd33a],0x0        # 0x14000e7b0
   140001476:	add    rsp,0x28
   14000147a:	ret    
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	int3   
   140001481:	int3   
   140001482:	int3   
   140001483:	int3   
   140001484:	int3   
   140001485:	int3   
   140001486:	int3   
   140001487:	int3   
   140001488:	int3   
   140001489:	int3   
   14000148a:	int3   
   14000148b:	int3   
   14000148c:	int3   
   14000148d:	int3   
   14000148e:	int3   
   14000148f:	int3   
   140001490:	xor    r9d,r9d
   140001493:	mov    r8d,ecx
   140001496:	lea    edx,[r9+0x6a]
   14000149a:	jmp    0x1400052e0
   14000149f:	int3   
   1400014a0:	int3   
   1400014a1:	int3   
   1400014a2:	int3   
   1400014a3:	int3   
   1400014a4:	int3   
   1400014a5:	int3   
   1400014a6:	int3   
   1400014a7:	int3   
   1400014a8:	int3   
   1400014a9:	int3   
   1400014aa:	int3   
   1400014ab:	int3   
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	xor    eax,eax
   1400014b2:	ret    
   1400014b3:	int3   
   1400014b4:	int3   
   1400014b5:	int3   
   1400014b6:	int3   
   1400014b7:	int3   
   1400014b8:	int3   
   1400014b9:	int3   
   1400014ba:	int3   
   1400014bb:	int3   
   1400014bc:	int3   
   1400014bd:	int3   
   1400014be:	int3   
   1400014bf:	int3   
   1400014c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400014c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400014ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400014cf:	push   rdi
   1400014d0:	sub    rsp,0x20
   1400014d4:	mov    rsi,QWORD PTR [rip+0xfc35]        # 0x140011110
   1400014db:	mov    ebp,edx
   1400014dd:	mov    rax,QWORD PTR [rip+0xfc34]        # 0x140011118
   1400014e4:	mov    rdi,rcx
   1400014e7:	jmp    0x14000150d
   1400014e9:	mov    rbx,QWORD PTR [rsi]
   1400014ec:	test   rbx,rbx
   1400014ef:	je     0x140001509
   1400014f1:	mov    rbx,QWORD PTR [rbx+0x40]
   1400014f5:	mov    rcx,rbx
   1400014f8:	call   QWORD PTR [rip+0x8fba]        # 0x14000a4b8
   1400014fe:	xor    ecx,ecx
   140001500:	call   rbx
   140001502:	mov    rax,QWORD PTR [rip+0xfc0f]        # 0x140011118
   140001509:	add    rsi,0x8
   14000150d:	cmp    rsi,rax
   140001510:	jb     0x1400014e9
   140001512:	mov    rcx,rdi
   140001515:	call   0x140002f74
   14000151a:	call   0x140002ed8
   14000151f:	cmp    BYTE PTR [rdi+0x62],0x0
   140001523:	je     0x14000152b
   140001525:	call   QWORD PTR [rip+0x8d25]        # 0x14000a250
   14000152b:	mov    rcx,rdi
   14000152e:	call   0x140002f74
   140001533:	test   bpl,0x1
   140001537:	je     0x140001541
   140001539:	mov    rcx,rdi
   14000153c:	call   0x140007d08
   140001541:	mov    rbx,QWORD PTR [rsp+0x30]
   140001546:	mov    rax,rdi
   140001549:	mov    rbp,QWORD PTR [rsp+0x38]
   14000154e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001553:	add    rsp,0x20
   140001557:	pop    rdi
   140001558:	ret    
   140001559:	int3   
   14000155a:	int3   
   14000155b:	int3   
   14000155c:	int3   
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	mov    QWORD PTR [rsp+0x8],rbx
   140001565:	mov    QWORD PTR [rsp+0x10],rbp
   14000156a:	mov    QWORD PTR [rsp+0x18],rsi
   14000156f:	push   rdi
   140001570:	sub    rsp,0x50
   140001574:	xor    esi,esi
   140001576:	xor    ebp,ebp
   140001578:	call   0x14000141c
   14000157d:	call   0x1400072f0
   140001582:	mov    ebx,eax
   140001584:	test   eax,eax
   140001586:	jns    0x1400015a6
   140001588:	mov    r8d,eax
   14000158b:	lea    rdx,[rip+0x94be]        # 0x14000aa50
   140001592:	lea    ecx,[rsi+0x8]
   140001595:	lea    r9,[rip+0x94a4]        # 0x14000aa40
   14000159c:	call   0x140006f0c
   1400015a1:	jmp    0x14000167b
   1400015a6:	or     DWORD PTR [rsp+0x2c],0xffffffff
   1400015ab:	lea    rcx,[rsp+0x28]
   1400015b0:	and    QWORD PTR [rsp+0x30],rbp
   1400015b5:	mov    esi,0x1
   1400015ba:	and    DWORD PTR [rsp+0x38],ebp
   1400015be:	and    QWORD PTR [rsp+0x40],rbp
   1400015c3:	call   0x140006158
   1400015c8:	lea    edi,[rsi+0x7]
   1400015cb:	mov    ebx,eax
   1400015cd:	test   eax,eax
   1400015cf:	jns    0x1400015da
   1400015d1:	lea    rdx,[rip+0xa0e8]        # 0x14000b6c0
   1400015d8:	jmp    0x1400015ff
   1400015da:	mov    rdx,QWORD PTR [rsp+0x30]
   1400015df:	lea    rax,[rip+0xa10a]        # 0x14000b6f0
   1400015e6:	test   rdx,rdx
   1400015e9:	cmove  rdx,rax
   1400015ed:	call   0x140006354
   1400015f2:	mov    ebx,eax
   1400015f4:	test   eax,eax
   1400015f6:	jns    0x140001610
   1400015f8:	lea    rdx,[rip+0xa141]        # 0x14000b740
   1400015ff:	lea    r9,[rip+0x9fb2]        # 0x14000b5b8
   140001606:	mov    r8d,eax
   140001609:	mov    ecx,edi
   14000160b:	call   0x140006f0c
   140001610:	mov    rcx,QWORD PTR [rsp+0x30]
   140001615:	test   rcx,rcx
   140001618:	je     0x140001620
   14000161a:	call   QWORD PTR [rip+0x8ac0]        # 0x14000a0e0
   140001620:	test   ebx,ebx
   140001622:	jns    0x140001635
   140001624:	mov    r8d,ebx
   140001627:	lea    rdx,[rip+0x944a]        # 0x14000aa78
   14000162e:	mov    ecx,edi
   140001630:	jmp    0x140001595
   140001635:	cmp    BYTE PTR [rip+0xd0f8],0x0        # 0x14000e734
   14000163c:	mov    ebp,esi
   14000163e:	je     0x140001645
   140001640:	or     eax,0xffffffff
   140001643:	jmp    0x14000166d
   140001645:	and    DWORD PTR [rsp+0x20],0x0
   14000164a:	call   QWORD PTR [rip+0x8ad8]        # 0x14000a128
   140001650:	mov    rdx,rax
   140001653:	lea    r8,[rsp+0x20]
   140001658:	call   0x140001914
   14000165d:	cmp    al,sil
   140001660:	jne    0x140001669
   140001662:	call   0x140001b84
   140001667:	jmp    0x14000166d
   140001669:	mov    eax,DWORD PTR [rsp+0x20]
   14000166d:	movzx  ebx,ax
   140001670:	or     ebx,0x80070000
   140001676:	test   eax,eax
   140001678:	cmovle ebx,eax
   14000167b:	call   0x140001454
   140001680:	test   ebp,ebp
   140001682:	je     0x1400016cd
   140001684:	mov    rdi,QWORD PTR [rip+0xfacd]        # 0x140011158
   14000168b:	test   rdi,rdi
   14000168e:	je     0x14000169b
   140001690:	mov    rcx,rdi
   140001693:	call   QWORD PTR [rip+0x8e1f]        # 0x14000a4b8
   140001699:	call   rdi
   14000169b:	mov    rcx,QWORD PTR [rip+0xfaa6]        # 0x140011148
   1400016a2:	test   rcx,rcx
   1400016a5:	je     0x1400016b5
   1400016a7:	call   QWORD PTR [rip+0x8a43]        # 0x14000a0f0
   1400016ad:	and    QWORD PTR [rip+0xfa93],0x0        # 0x140011148
   1400016b5:	and    QWORD PTR [rip+0xfa93],0x0        # 0x140011150
   1400016bd:	and    QWORD PTR [rip+0xfa93],0x0        # 0x140011158
   1400016c5:	and    QWORD PTR [rip+0xfa93],0x0        # 0x140011160
   1400016cd:	test   esi,esi
   1400016cf:	je     0x1400016d6
   1400016d1:	call   0x14000785c
   1400016d6:	mov    rbp,QWORD PTR [rsp+0x68]
   1400016db:	mov    eax,ebx
   1400016dd:	mov    rbx,QWORD PTR [rsp+0x60]
   1400016e2:	mov    rsi,QWORD PTR [rsp+0x70]
   1400016e7:	add    rsp,0x50
   1400016eb:	pop    rdi
   1400016ec:	ret    
   1400016ed:	int3   
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	int3   
   1400016f1:	int3   
   1400016f2:	int3   
   1400016f3:	int3   
   1400016f4:	int3   
   1400016f5:	int3   
   1400016f6:	int3   
   1400016f7:	int3   
   1400016f8:	int3   
   1400016f9:	int3   
   1400016fa:	int3   
   1400016fb:	int3   
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	mov    rax,rsp
   140001703:	mov    QWORD PTR [rax+0x18],r8
   140001707:	mov    QWORD PTR [rax+0x10],rdx
   14000170b:	mov    QWORD PTR [rax+0x8],rcx
   14000170f:	push   rbx
   140001710:	push   rsi
   140001711:	push   rdi
   140001712:	push   r12
   140001714:	push   r13
   140001716:	push   r14
   140001718:	push   r15
   14000171a:	sub    rsp,0x30
   14000171e:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   140001726:	mov    r12,r8
   140001729:	mov    r13,rdx
   14000172c:	mov    r15,rcx
   14000172f:	xor    edi,edi
   140001731:	test   r8,r8
   140001734:	jne    0x140001740
   140001736:	mov    eax,0x80004003
   14000173b:	jmp    0x14000182c
   140001740:	mov    QWORD PTR [r8],rdi
   140001743:	mov    r14d,0x8007000e
   140001749:	mov    DWORD PTR [rsp+0x88],r14d
   140001751:	mov    QWORD PTR [rsp+0x20],rdi
   140001756:	mov    ecx,0x48
   14000175b:	call   0x140007c88
   140001760:	mov    rsi,rax
   140001763:	test   rax,rax
   140001766:	je     0x14000178a
   140001768:	mov    DWORD PTR [rax+0x8],edi
   14000176b:	xor    edx,edx
   14000176d:	lea    r8d,[rdx+0x28]
   140001771:	lea    rcx,[rax+0x10]
   140001775:	call   0x14000864c
   14000177a:	mov    BYTE PTR [rsi+0x38],dil
   14000177e:	lea    rax,[rip+0x912b]        # 0x14000a8b0
   140001785:	mov    QWORD PTR [rsi],rax
   140001788:	jmp    0x14000178d
   14000178a:	mov    rsi,rdi
   14000178d:	mov    QWORD PTR [rsp+0x20],rsi
   140001792:	jmp    0x1400017b5
   140001794:	xor    edi,edi
   140001796:	mov    r12,QWORD PTR [rsp+0x80]
   14000179e:	mov    r13,QWORD PTR [rsp+0x78]
   1400017a3:	mov    r15,QWORD PTR [rsp+0x70]
   1400017a8:	mov    r14d,DWORD PTR [rsp+0x88]
   1400017b0:	mov    rsi,QWORD PTR [rsp+0x20]
   1400017b5:	test   rsi,rsi
   1400017b8:	je     0x140001829
   1400017ba:	mov    QWORD PTR [rsi+0x40],r15
   1400017be:	lea    rcx,[rsi+0x10]
   1400017c2:	call   0x14000343c
   1400017c7:	mov    r14d,eax
   1400017ca:	test   eax,eax
   1400017cc:	js     0x1400017d2
   1400017ce:	mov    BYTE PTR [rsi+0x38],0x1
   1400017d2:	cmovns r14d,edi
   1400017d6:	test   r14d,r14d
   1400017d9:	jne    0x1400017fc
   1400017db:	mov    rax,QWORD PTR [rsi]
   1400017de:	mov    rbx,QWORD PTR [rax]
   1400017e1:	mov    rcx,rbx
   1400017e4:	call   QWORD PTR [rip+0x8cce]        # 0x14000a4b8
   1400017ea:	mov    r8,r12
   1400017ed:	mov    rdx,r13
   1400017f0:	mov    rcx,rsi
   1400017f3:	call   rbx
   1400017f5:	mov    r14d,eax
   1400017f8:	test   eax,eax
   1400017fa:	je     0x140001829
   1400017fc:	mov    DWORD PTR [rsi+0x8],0xc0000001
   140001803:	lea    rax,[rip+0x90ce]        # 0x14000a8d8
   14000180a:	mov    QWORD PTR [rsi],rax
   14000180d:	cmp    BYTE PTR [rsi+0x38],dil
   140001811:	je     0x140001821
   140001813:	mov    BYTE PTR [rsi+0x38],dil
   140001817:	lea    rcx,[rsi+0x10]
   14000181b:	call   QWORD PTR [rip+0x886f]        # 0x14000a090
   140001821:	mov    rcx,rsi
   140001824:	call   0x140007d08
   140001829:	mov    eax,r14d
   14000182c:	add    rsp,0x30
   140001830:	pop    r15
   140001832:	pop    r14
   140001834:	pop    r13
   140001836:	pop    r12
   140001838:	pop    rdi
   140001839:	pop    rsi
   14000183a:	pop    rbx
   14000183b:	ret    
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	int3   
   140001841:	int3   
   140001842:	int3   
   140001843:	int3   
   140001844:	int3   
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	test   rcx,rcx
   140001853:	je     0x140001e98
   140001859:	test   r8,r8
   14000185c:	jne    0x140001865
   14000185e:	mov    eax,0x80004003
   140001863:	jmp    0x14000186e
   140001865:	and    QWORD PTR [r8],0x0
   140001869:	mov    eax,0x80040110
   14000186e:	ret    
   14000186f:	int3   
   140001870:	int3   
   140001871:	int3   
   140001872:	int3   
   140001873:	int3   
   140001874:	int3   
   140001875:	int3   
   140001876:	int3   
   140001877:	int3   
   140001878:	int3   
   140001879:	int3   
   14000187a:	int3   
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	rex push rbx
   140001882:	sub    rsp,0x20
   140001886:	or     ebx,0xffffffff
   140001889:	lock xadd DWORD PTR [rcx+0xc],ebx
   14000188e:	sub    ebx,0x1
   140001891:	jne    0x1400018bb
   140001893:	cmp    BYTE PTR [rcx+0x60],bl
   140001896:	je     0x1400018a8
   140001898:	mov    BYTE PTR [rcx+0x61],0x1
   14000189c:	mov    rcx,QWORD PTR [rcx+0x50]
   1400018a0:	call   QWORD PTR [rip+0x88ba]        # 0x14000a160
   1400018a6:	jmp    0x1400018bb
   1400018a8:	mov    ecx,DWORD PTR [rcx+0x48]
   1400018ab:	xor    r9d,r9d
   1400018ae:	xor    r8d,r8d
   1400018b1:	lea    edx,[r9+0x12]
   1400018b5:	call   QWORD PTR [rip+0x8935]        # 0x14000a1f0
   1400018bb:	mov    eax,ebx
   1400018bd:	add    rsp,0x20
   1400018c1:	pop    rbx
   1400018c2:	ret    
   1400018c3:	int3   
   1400018c4:	int3   
   1400018c5:	int3   
   1400018c6:	int3   
   1400018c7:	int3   
   1400018c8:	int3   
   1400018c9:	int3   
   1400018ca:	int3   
   1400018cb:	int3   
   1400018cc:	int3   
   1400018cd:	int3   
   1400018ce:	int3   
   1400018cf:	int3   
   1400018d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400018d5:	push   rdi
   1400018d6:	sub    rsp,0x20
   1400018da:	mov    rax,QWORD PTR [rdx]
   1400018dd:	mov    rdi,rdx
   1400018e0:	mov    rbx,QWORD PTR [rax+0x18]
   1400018e4:	mov    rcx,rbx
   1400018e7:	call   QWORD PTR [rip+0x8bcb]        # 0x14000a4b8
   1400018ed:	lea    r8,[rip+0x90fc]        # 0x14000a9f0
   1400018f4:	mov    rcx,rdi
   1400018f7:	lea    rdx,[rip+0x92d2]        # 0x14000abd0
   1400018fe:	mov    rax,rbx
   140001901:	mov    rbx,QWORD PTR [rsp+0x30]
   140001906:	add    rsp,0x20
   14000190a:	pop    rdi
   14000190b:	rex.W jmp rax
   14000190e:	int3   
   14000190f:	int3   
   140001910:	int3   
   140001911:	int3   
   140001912:	int3   
   140001913:	int3   
   140001914:	mov    QWORD PTR [rsp+0x8],rbx
   140001919:	push   rbp
   14000191a:	push   rsi
   14000191b:	push   rdi
   14000191c:	push   r14
   14000191e:	push   r15
   140001920:	mov    rbp,rsp
   140001923:	sub    rsp,0x50
   140001927:	mov    rax,QWORD PTR [rip+0xc6e2]        # 0x14000e010
   14000192e:	xor    rax,rsp
   140001931:	mov    QWORD PTR [rbp-0x8],rax
   140001935:	xor    r15d,r15d
   140001938:	mov    r14,r8
   14000193b:	mov    DWORD PTR [r8],r15d
   14000193e:	mov    rbx,rdx
   140001941:	mov    eax,DWORD PTR [rip+0x9171]        # 0x14000aab8
   140001947:	test   rdx,rdx
   14000194a:	mov    DWORD PTR [rbp-0x10],eax
   14000194d:	movzx  eax,WORD PTR [rip+0x9168]        # 0x14000aabc
   140001954:	mov    WORD PTR [rbp-0xc],ax
   140001958:	je     0x140001a0f
   14000195e:	cmp    WORD PTR [rbx],r15w
   140001962:	je     0x140001a0f
   140001968:	lea    rax,[rbp-0x10]
   14000196c:	movzx  ecx,WORD PTR [rax]
   14000196f:	test   cx,cx
   140001972:	je     0x14000198b
   140001974:	cmp    WORD PTR [rbx],cx
   140001977:	je     0x140001a01
   14000197d:	mov    rcx,rax
   140001980:	call   QWORD PTR [rip+0x8862]        # 0x14000a1e8
   140001986:	test   rax,rax
   140001989:	jne    0x14000196c
   14000198b:	mov    rcx,rbx
   14000198e:	call   QWORD PTR [rip+0x8854]        # 0x14000a1e8
   140001994:	mov    rbx,rax
   140001997:	test   rax,rax
   14000199a:	jmp    0x140001958
   14000199c:	lea    rdx,[rip+0x911d]        # 0x14000aac0
   1400019a3:	mov    rcx,rbx
   1400019a6:	call   0x140002e04
   1400019ab:	test   eax,eax
   1400019ad:	je     0x140001b1e
   1400019b3:	lea    rdx,[rip+0x911e]        # 0x14000aad8
   1400019ba:	mov    rcx,rbx
   1400019bd:	call   0x140002e04
   1400019c2:	test   eax,eax
   1400019c4:	je     0x140001a39
   1400019c6:	test   rbx,rbx
   1400019c9:	je     0x140001a0f
   1400019cb:	cmp    WORD PTR [rbx],r15w
   1400019cf:	je     0x140001a0f
   1400019d1:	lea    rax,[rbp-0x10]
   1400019d5:	movzx  ecx,WORD PTR [rax]
   1400019d8:	test   cx,cx
   1400019db:	je     0x1400019f0
   1400019dd:	cmp    WORD PTR [rbx],cx
   1400019e0:	je     0x140001a01
   1400019e2:	mov    rcx,rax
   1400019e5:	call   QWORD PTR [rip+0x87fd]        # 0x14000a1e8
   1400019eb:	test   rax,rax
   1400019ee:	jne    0x1400019d5
   1400019f0:	mov    rcx,rbx
   1400019f3:	call   QWORD PTR [rip+0x87ef]        # 0x14000a1e8
   1400019f9:	mov    rbx,rax
   1400019fc:	test   rax,rax
   1400019ff:	jmp    0x1400019c9
   140001a01:	mov    rcx,rbx
   140001a04:	call   QWORD PTR [rip+0x87de]        # 0x14000a1e8
   140001a0a:	mov    rbx,rax
   140001a0d:	jmp    0x140001a12
   140001a0f:	mov    rbx,r15
   140001a12:	test   rbx,rbx
   140001a15:	jne    0x14000199c
   140001a17:	mov    al,0x1
   140001a19:	mov    rcx,QWORD PTR [rbp-0x8]
   140001a1d:	xor    rcx,rsp
   140001a20:	call   0x1400081f0
   140001a25:	mov    rbx,QWORD PTR [rsp+0x80]
   140001a2d:	add    rsp,0x50
   140001a31:	pop    r15
   140001a33:	pop    r14
   140001a35:	pop    rdi
   140001a36:	pop    rsi
   140001a37:	pop    rbp
   140001a38:	ret    
   140001a39:	mov    edx,0x65
   140001a3e:	lea    rax,[rip+0x918b]        # 0x14000abd0
   140001a45:	mov    QWORD PTR [rbp-0x30],rax
   140001a49:	lea    r9,[rbp-0x30]
   140001a4d:	lea    rax,[rip+0x8f9c]        # 0x14000a9f0
   140001a54:	xorps  xmm0,xmm0
   140001a57:	mov    QWORD PTR [rbp-0x28],rax
   140001a5b:	lea    r8d,[rdx-0x64]
   140001a5f:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140001a64:	call   0x1400052e0
   140001a69:	mov    DWORD PTR [r14],eax
   140001a6c:	test   eax,eax
   140001a6e:	js     0x140001b76
   140001a74:	mov    rdi,QWORD PTR [rip+0xf695]        # 0x140011110
   140001a7b:	mov    eax,r15d
   140001a7e:	mov    rcx,QWORD PTR [rip+0xf693]        # 0x140011118
   140001a85:	cmp    rdi,rcx
   140001a88:	jae    0x140001aee
   140001a8a:	mov    rsi,QWORD PTR [rdi]
   140001a8d:	test   rsi,rsi
   140001a90:	je     0x140001add
   140001a92:	mov    rbx,QWORD PTR [rsi+0x8]
   140001a96:	mov    rcx,rbx
   140001a99:	call   QWORD PTR [rip+0x8a19]        # 0x14000a4b8
   140001a9f:	mov    ecx,0x1
   140001aa4:	call   rbx
   140001aa6:	test   eax,eax
   140001aa8:	js     0x140001b73
   140001aae:	mov    rbx,QWORD PTR [rsi+0x38]
   140001ab2:	mov    rcx,rbx
   140001ab5:	call   QWORD PTR [rip+0x89fd]        # 0x14000a4b8
   140001abb:	call   rbx
   140001abd:	mov    rcx,QWORD PTR [rsi]
   140001ac0:	mov    rdx,rax
   140001ac3:	mov    r8d,0x1
   140001ac9:	call   0x1400023f8
   140001ace:	test   eax,eax
   140001ad0:	js     0x140001b73
   140001ad6:	mov    rcx,QWORD PTR [rip+0xf63b]        # 0x140011118
   140001add:	add    rdi,0x8
   140001ae1:	cmp    rdi,rcx
   140001ae4:	jb     0x140001a8a
   140001ae6:	test   eax,eax
   140001ae8:	js     0x140001b73
   140001aee:	mov    rcx,QWORD PTR [rip+0xf613]        # 0x140011108
   140001af5:	call   0x140002b1c
   140001afa:	test   eax,eax
   140001afc:	js     0x140001b73
   140001afe:	mov    rbx,QWORD PTR [rip+0xcc4b]        # 0x14000e750
   140001b05:	test   rbx,rbx
   140001b08:	je     0x140001b73
   140001b0a:	mov    rcx,rbx
   140001b0d:	call   QWORD PTR [rip+0x89a5]        # 0x14000a4b8
   140001b13:	mov    rcx,QWORD PTR [rip+0xf53e]        # 0x140011058
   140001b1a:	call   rbx
   140001b1c:	jmp    0x140001b73
   140001b1e:	mov    rbx,QWORD PTR [rip+0xcc33]        # 0x14000e758
   140001b25:	test   rbx,rbx
   140001b28:	je     0x140001b39
   140001b2a:	mov    rcx,rbx
   140001b2d:	call   QWORD PTR [rip+0x8985]        # 0x14000a4b8
   140001b33:	call   rbx
   140001b35:	test   eax,eax
   140001b37:	js     0x140001b3e
   140001b39:	call   0x14000229c
   140001b3e:	mov    DWORD PTR [r14],eax
   140001b41:	test   eax,eax
   140001b43:	js     0x140001b76
   140001b45:	xor    r8d,r8d
   140001b48:	lea    rax,[rip+0x9081]        # 0x14000abd0
   140001b4f:	mov    QWORD PTR [rbp-0x30],rax
   140001b53:	lea    r9,[rbp-0x30]
   140001b57:	lea    rax,[rip+0x8e92]        # 0x14000a9f0
   140001b5e:	xorps  xmm0,xmm0
   140001b61:	mov    QWORD PTR [rbp-0x28],rax
   140001b65:	lea    edx,[r8+0x65]
   140001b69:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140001b6e:	call   0x1400052e0
   140001b73:	mov    DWORD PTR [r14],eax
   140001b76:	xor    al,al
   140001b78:	jmp    0x140001a19
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	int3   
   140001b81:	int3   
   140001b82:	int3   
   140001b83:	int3   
   140001b84:	mov    QWORD PTR [rsp+0x18],rbx
   140001b89:	mov    DWORD PTR [rsp+0x10],edx
   140001b8d:	mov    QWORD PTR [rsp+0x8],rcx
   140001b92:	push   rsi
   140001b93:	push   rdi
   140001b94:	push   r14
   140001b96:	sub    rsp,0x60
   140001b9a:	mov    rsi,QWORD PTR [rip+0xf56f]        # 0x140011110
   140001ba1:	mov    edi,0x1
   140001ba6:	jmp    0x140001c3d
   140001bab:	test   edi,edi
   140001bad:	js     0x140001d49
   140001bb3:	mov    rbx,QWORD PTR [rsi]
   140001bb6:	test   rbx,rbx
   140001bb9:	je     0x140001c39
   140001bbb:	and    QWORD PTR [rsp+0x80],0x0
   140001bc4:	mov    rdi,QWORD PTR [rbx+0x10]
   140001bc8:	test   rdi,rdi
   140001bcb:	je     0x140001c39
   140001bcd:	mov    rcx,rdi
   140001bd0:	call   QWORD PTR [rip+0x88e2]        # 0x14000a4b8
   140001bd6:	mov    rcx,QWORD PTR [rbx+0x18]
   140001bda:	lea    r8,[rsp+0x80]
   140001be2:	lea    rdx,[rip+0x9047]        # 0x14000ac30
   140001be9:	call   rdi
   140001beb:	mov    edi,eax
   140001bed:	test   eax,eax
   140001bef:	js     0x140001c17
   140001bf1:	mov    rdx,QWORD PTR [rsp+0x80]
   140001bf9:	lea    rax,[rbx+0x28]
   140001bfd:	mov    rcx,QWORD PTR [rbx]
   140001c00:	mov    r9d,0x5
   140001c06:	mov    QWORD PTR [rsp+0x20],rax
   140001c0b:	lea    r8d,[r9-0x1]
   140001c0f:	call   QWORD PTR [rip+0x860b]        # 0x14000a220
   140001c15:	mov    edi,eax
   140001c17:	mov    r14,QWORD PTR [rsp+0x80]
   140001c1f:	test   r14,r14
   140001c22:	je     0x140001c39
   140001c24:	mov    rax,QWORD PTR [r14]
   140001c27:	mov    rbx,QWORD PTR [rax+0x10]
   140001c2b:	mov    rcx,rbx
   140001c2e:	call   QWORD PTR [rip+0x8884]        # 0x14000a4b8
   140001c34:	mov    rcx,r14
   140001c37:	call   rbx
   140001c39:	add    rsi,0x8
   140001c3d:	cmp    rsi,QWORD PTR [rip+0xf4d4]        # 0x140011118
   140001c44:	jb     0x140001bab
   140001c4a:	test   edi,edi
   140001c4c:	js     0x140001d49
   140001c52:	jne    0x140001d40
   140001c58:	cmp    BYTE PTR [rip+0xf3e1],0x0        # 0x140011040
   140001c5f:	je     0x140001d01
   140001c65:	xor    r9d,r9d
   140001c68:	xor    r8d,r8d
   140001c6b:	xor    edx,edx
   140001c6d:	xor    ecx,ecx
   140001c6f:	call   QWORD PTR [rip+0x84bb]        # 0x14000a130
   140001c75:	mov    QWORD PTR [rip+0xf3b4],rax        # 0x140011030
   140001c7c:	test   rax,rax
   140001c7f:	je     0x140001cfa
   140001c81:	lea    rax,[rsp+0x88]
   140001c89:	xor    edx,edx
   140001c8b:	mov    QWORD PTR [rsp+0x28],rax
   140001c90:	lea    r9,[rip+0xf349]        # 0x140010fe0
   140001c97:	and    DWORD PTR [rsp+0x20],0x0
   140001c9c:	lea    r8,[rip+0x4ed]        # 0x140002190
   140001ca3:	xor    ecx,ecx
   140001ca5:	call   QWORD PTR [rip+0x8495]        # 0x14000a140
   140001cab:	mov    rbx,rax
   140001cae:	test   rax,rax
   140001cb1:	jne    0x140001cc0
   140001cb3:	mov    rcx,QWORD PTR [rip+0xf376]        # 0x140011030
   140001cba:	call   QWORD PTR [rip+0x8408]        # 0x14000a0c8
   140001cc0:	test   rbx,rbx
   140001cc3:	je     0x140001cfa
   140001cc5:	call   QWORD PTR [rip+0x8575]        # 0x14000a240
   140001ccb:	mov    edi,eax
   140001ccd:	test   eax,eax
   140001ccf:	jns    0x140001cef
   140001cd1:	mov    rcx,QWORD PTR [rip+0xf358]        # 0x140011030
   140001cd8:	call   QWORD PTR [rip+0x8482]        # 0x14000a160
   140001cde:	mov    edx,DWORD PTR [rip+0xf354]        # 0x140011038
   140001ce4:	mov    rcx,rbx
   140001ce7:	add    edx,edx
   140001ce9:	call   QWORD PTR [rip+0x8499]        # 0x14000a188
   140001cef:	mov    rcx,rbx
   140001cf2:	call   QWORD PTR [rip+0x83d0]        # 0x14000a0c8
   140001cf8:	jmp    0x140001d09
   140001cfa:	mov    edi,0x80004005
   140001cff:	jmp    0x140001d0d
   140001d01:	call   QWORD PTR [rip+0x8539]        # 0x14000a240
   140001d07:	mov    edi,eax
   140001d09:	test   edi,edi
   140001d0b:	jns    0x140001d49
   140001d0d:	mov    rbx,QWORD PTR [rip+0xf3fc]        # 0x140011110
   140001d14:	xor    eax,eax
   140001d16:	jmp    0x140001d35
   140001d18:	test   eax,eax
   140001d1a:	jne    0x140001d47
   140001d1c:	mov    rcx,QWORD PTR [rbx]
   140001d1f:	test   rcx,rcx
   140001d22:	je     0x140001d31
   140001d24:	mov    ecx,DWORD PTR [rcx+0x28]
   140001d27:	test   ecx,ecx
   140001d29:	je     0x140001d31
   140001d2b:	call   QWORD PTR [rip+0x84e7]        # 0x14000a218
   140001d31:	add    rbx,0x8
   140001d35:	cmp    rbx,QWORD PTR [rip+0xf3dc]        # 0x140011118
   140001d3c:	jb     0x140001d18
   140001d3e:	jmp    0x140001d47
   140001d40:	mov    BYTE PTR [rip+0xf2f9],0x0        # 0x140011040
   140001d47:	test   edi,edi
   140001d49:	jne    0x140001d8f
   140001d4b:	xor    r9d,r9d
   140001d4e:	lea    rcx,[rsp+0x30]
   140001d53:	xor    r8d,r8d
   140001d56:	xor    edx,edx
   140001d58:	call   QWORD PTR [rip+0x84a2]        # 0x14000a200
   140001d5e:	test   eax,eax
   140001d60:	jle    0x140001d93
   140001d62:	lea    rcx,[rsp+0x30]
   140001d67:	call   QWORD PTR [rip+0x848b]        # 0x14000a1f8
   140001d6d:	lea    rcx,[rsp+0x30]
   140001d72:	call   QWORD PTR [rip+0x8460]        # 0x14000a1d8
   140001d78:	xor    r9d,r9d
   140001d7b:	lea    rcx,[rsp+0x30]
   140001d80:	xor    r8d,r8d
   140001d83:	xor    edx,edx
   140001d85:	call   QWORD PTR [rip+0x8475]        # 0x14000a200
   140001d8b:	test   eax,eax
   140001d8d:	jg     0x140001d62
   140001d8f:	test   edi,edi
   140001d91:	js     0x140001ddb
   140001d93:	mov    rbx,QWORD PTR [rip+0xf376]        # 0x140011110
   140001d9a:	xor    edi,edi
   140001d9c:	jmp    0x140001dbd
   140001d9e:	test   edi,edi
   140001da0:	jne    0x140001dc6
   140001da2:	mov    rax,QWORD PTR [rbx]
   140001da5:	test   rax,rax
   140001da8:	je     0x140001db9
   140001daa:	mov    ecx,DWORD PTR [rax+0x28]
   140001dad:	test   ecx,ecx
   140001daf:	je     0x140001db9
   140001db1:	call   QWORD PTR [rip+0x8461]        # 0x14000a218
   140001db7:	mov    edi,eax
   140001db9:	add    rbx,0x8
   140001dbd:	cmp    rbx,QWORD PTR [rip+0xf354]        # 0x140011118
   140001dc4:	jb     0x140001d9e
   140001dc6:	cmp    BYTE PTR [rip+0xf273],0x0        # 0x140011040
   140001dcd:	je     0x140001ddb
   140001dcf:	mov    ecx,DWORD PTR [rip+0xf267]        # 0x14001103c
   140001dd5:	call   QWORD PTR [rip+0x8345]        # 0x14000a120
   140001ddb:	mov    eax,edi
   140001ddd:	mov    rbx,QWORD PTR [rsp+0x90]
   140001de5:	add    rsp,0x60
   140001de9:	pop    r14
   140001deb:	pop    rdi
   140001dec:	pop    rsi
   140001ded:	ret    
   140001dee:	int3   
   140001def:	int3   
   140001df0:	int3   
   140001df1:	int3   
   140001df2:	int3   
   140001df3:	int3   
   140001df4:	int3   
   140001df5:	int3   
   140001df6:	int3   
   140001df7:	int3   
   140001df8:	int3   
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	mov    eax,0x1
   140001e05:	lock xadd DWORD PTR [rcx+0x8],eax
   140001e0a:	inc    eax
   140001e0c:	ret    
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	int3   
   140001e11:	int3   
   140001e12:	int3   
   140001e13:	int3   
   140001e14:	int3   
   140001e15:	int3   
   140001e16:	int3   
   140001e17:	int3   
   140001e18:	int3   
   140001e19:	int3   
   140001e1a:	int3   
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rsp+0x8],rbx
   140001e25:	push   rdi
   140001e26:	sub    rsp,0x20
   140001e2a:	mov    rbx,rcx
   140001e2d:	or     edi,0xffffffff
   140001e30:	lock xadd DWORD PTR [rcx+0x8],edi
   140001e35:	sub    edi,0x1
   140001e38:	jne    0x140001e6c
   140001e3a:	test   rcx,rcx
   140001e3d:	je     0x140001e6c
   140001e3f:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140001e46:	lea    rax,[rip+0x8a8b]        # 0x14000a8d8
   140001e4d:	mov    QWORD PTR [rcx],rax
   140001e50:	add    rcx,0x10
   140001e54:	cmp    BYTE PTR [rcx+0x28],dil
   140001e58:	je     0x140001e64
   140001e5a:	mov    BYTE PTR [rcx+0x28],dil
   140001e5e:	call   QWORD PTR [rip+0x822c]        # 0x14000a090
   140001e64:	mov    rcx,rbx
   140001e67:	call   0x140007d08
   140001e6c:	mov    eax,edi
   140001e6e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e73:	add    rsp,0x20
   140001e77:	pop    rdi
   140001e78:	ret    
   140001e79:	int3   
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	int3   
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	mov    r9,r8
   140001e83:	mov    r8,rdx
   140001e86:	lea    rdx,[rip+0x8d13]        # 0x14000aba0
   140001e8d:	jmp    0x14000305c
   140001e92:	int3   
   140001e93:	int3   
   140001e94:	int3   
   140001e95:	int3   
   140001e96:	int3   
   140001e97:	int3   
   140001e98:	mov    rax,rsp
   140001e9b:	mov    QWORD PTR [rax+0x18],r8
   140001e9f:	mov    QWORD PTR [rax+0x10],rdx
   140001ea3:	mov    QWORD PTR [rax+0x8],rcx
   140001ea7:	push   rbx
   140001ea8:	push   rsi
   140001ea9:	push   rdi
   140001eaa:	push   r12
   140001eac:	push   r13
   140001eae:	push   r14
   140001eb0:	push   r15
   140001eb2:	sub    rsp,0x30
   140001eb6:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140001ebe:	mov    r12,r8
   140001ec1:	mov    r13,rdx
   140001ec4:	xor    r14d,r14d
   140001ec7:	test   r8,r8
   140001eca:	jne    0x140001ed6
   140001ecc:	mov    eax,0x80004003
   140001ed1:	jmp    0x140001fd5
   140001ed6:	mov    QWORD PTR [r8],r14
   140001ed9:	mov    r15d,0x8007000e
   140001edf:	mov    DWORD PTR [rsp+0x70],r15d
   140001ee4:	mov    QWORD PTR [rsp+0x88],r14
   140001eec:	mov    ecx,0x40
   140001ef1:	call   0x140007c88
   140001ef6:	mov    rsi,rax
   140001ef9:	mov    QWORD PTR [rsp+0x28],rax
   140001efe:	test   rax,rax
   140001f01:	je     0x140001f43
   140001f03:	mov    DWORD PTR [rax+0x8],r14d
   140001f07:	xor    edx,edx
   140001f09:	lea    r8d,[rdx+0x28]
   140001f0d:	lea    rcx,[rax+0x10]
   140001f11:	call   0x14000864c
   140001f16:	mov    BYTE PTR [rsi+0x38],r14b
   140001f1a:	lea    rax,[rip+0x893f]        # 0x14000a860
   140001f21:	mov    QWORD PTR [rsi],rax
   140001f24:	mov    rdi,QWORD PTR [rip+0xc81d]        # 0x14000e748
   140001f2b:	mov    rax,QWORD PTR [rdi]
   140001f2e:	mov    rbx,QWORD PTR [rax+0x8]
   140001f32:	mov    rcx,rbx
   140001f35:	call   QWORD PTR [rip+0x857d]        # 0x14000a4b8
   140001f3b:	mov    rcx,rdi
   140001f3e:	call   rbx
   140001f40:	nop
   140001f41:	jmp    0x140001f46
   140001f43:	mov    rsi,r14
   140001f46:	mov    QWORD PTR [rsp+0x88],rsi
   140001f4e:	jmp    0x140001f6d
   140001f50:	xor    r14d,r14d
   140001f53:	mov    r12,QWORD PTR [rsp+0x80]
   140001f5b:	mov    r13,QWORD PTR [rsp+0x78]
   140001f60:	mov    r15d,DWORD PTR [rsp+0x70]
   140001f65:	mov    rsi,QWORD PTR [rsp+0x88]
   140001f6d:	test   rsi,rsi
   140001f70:	je     0x140001fd2
   140001f72:	lock inc DWORD PTR [rsi+0x8]
   140001f76:	lea    rcx,[rsi+0x10]
   140001f7a:	call   0x14000343c
   140001f7f:	mov    r15d,eax
   140001f82:	test   eax,eax
   140001f84:	js     0x140001f8a
   140001f86:	mov    BYTE PTR [rsi+0x38],0x1
   140001f8a:	cmovns r15d,r14d
   140001f8e:	lock dec DWORD PTR [rsi+0x8]
   140001f92:	test   r15d,r15d
   140001f95:	jne    0x140001fb8
   140001f97:	mov    rax,QWORD PTR [rsi]
   140001f9a:	mov    rbx,QWORD PTR [rax]
   140001f9d:	mov    rcx,rbx
   140001fa0:	call   QWORD PTR [rip+0x8512]        # 0x14000a4b8
   140001fa6:	mov    r8,r12
   140001fa9:	mov    rdx,r13
   140001fac:	mov    rcx,rsi
   140001faf:	call   rbx
   140001fb1:	mov    r15d,eax
   140001fb4:	test   eax,eax
   140001fb6:	je     0x140001fd2
   140001fb8:	mov    r8,QWORD PTR [rsi]
   140001fbb:	mov    rbx,QWORD PTR [r8+0x48]
   140001fbf:	mov    rcx,rbx
   140001fc2:	call   QWORD PTR [rip+0x84f0]        # 0x14000a4b8
   140001fc8:	mov    edx,0x1
   140001fcd:	mov    rcx,rsi
   140001fd0:	call   rbx
   140001fd2:	mov    eax,r15d
   140001fd5:	add    rsp,0x30
   140001fd9:	pop    r15
   140001fdb:	pop    r14
   140001fdd:	pop    r13
   140001fdf:	pop    r12
   140001fe1:	pop    rdi
   140001fe2:	pop    rsi
   140001fe3:	pop    rbx
   140001fe4:	ret    
   140001fe5:	int3   
   140001fe6:	int3   
   140001fe7:	int3   
   140001fe8:	int3   
   140001fe9:	int3   
   140001fea:	int3   
   140001feb:	int3   
   140001fec:	mov    rax,rsp
   140001fef:	mov    QWORD PTR [rax+0x8],rcx
   140001ff3:	push   rdi
   140001ff4:	sub    rsp,0x30
   140001ff8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140002000:	mov    QWORD PTR [rax+0x10],rbx
   140002004:	mov    QWORD PTR [rax+0x18],rsi
   140002008:	mov    rsi,rcx
   14000200b:	lea    rax,[rip+0x884e]        # 0x14000a860
   140002012:	mov    QWORD PTR [rcx],rax
   140002015:	mov    DWORD PTR [rcx+0x8],0xc0000001
   14000201c:	mov    rdi,QWORD PTR [rip+0xc725]        # 0x14000e748
   140002023:	mov    rax,QWORD PTR [rdi]
   140002026:	mov    rbx,QWORD PTR [rax+0x10]
   14000202a:	mov    rcx,rbx
   14000202d:	call   QWORD PTR [rip+0x8485]        # 0x14000a4b8
   140002033:	mov    rcx,rdi
   140002036:	call   rbx
   140002038:	nop
   140002039:	lea    rcx,[rsi+0x10]
   14000203d:	cmp    BYTE PTR [rcx+0x28],0x0
   140002041:	je     0x14000204d
   140002043:	mov    BYTE PTR [rcx+0x28],0x0
   140002047:	call   QWORD PTR [rip+0x8043]        # 0x14000a090
   14000204d:	mov    rbx,QWORD PTR [rsp+0x48]
   140002052:	mov    rsi,QWORD PTR [rsp+0x50]
   140002057:	add    rsp,0x30
   14000205b:	pop    rdi
   14000205c:	ret    
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	int3   
   140002061:	int3   
   140002062:	int3   
   140002063:	int3   
   140002064:	int3   
   140002065:	int3   
   140002066:	int3   
   140002067:	int3   
   140002068:	int3   
   140002069:	int3   
   14000206a:	int3   
   14000206b:	int3   
   14000206c:	int3   
   14000206d:	int3   
   14000206e:	int3   
   14000206f:	int3   
   140002070:	mov    QWORD PTR [rsp+0x8],rbx
   140002075:	mov    QWORD PTR [rsp+0x10],rsi
   14000207a:	mov    QWORD PTR [rsp+0x18],rdi
   14000207f:	push   r14
   140002081:	sub    rsp,0x20
   140002085:	mov    r14,rcx
   140002088:	or     esi,0xffffffff
   14000208b:	lock xadd DWORD PTR [rcx+0x8],esi
   140002090:	sub    esi,0x1
   140002093:	jne    0x1400020ea
   140002095:	mov    rdi,QWORD PTR [rip+0xc6ac]        # 0x14000e748
   14000209c:	mov    rax,QWORD PTR [rdi]
   14000209f:	mov    rbx,QWORD PTR [rax+0x8]
   1400020a3:	mov    rcx,rbx
   1400020a6:	call   QWORD PTR [rip+0x840c]        # 0x14000a4b8
   1400020ac:	mov    rcx,rdi
   1400020af:	call   rbx
   1400020b1:	test   r14,r14
   1400020b4:	je     0x1400020ce
   1400020b6:	mov    rax,QWORD PTR [r14]
   1400020b9:	mov    rbx,QWORD PTR [rax+0x48]
   1400020bd:	mov    rcx,rbx
   1400020c0:	call   QWORD PTR [rip+0x83f2]        # 0x14000a4b8
   1400020c6:	lea    edx,[rsi+0x1]
   1400020c9:	mov    rcx,r14
   1400020cc:	call   rbx
   1400020ce:	mov    rdi,QWORD PTR [rip+0xc673]        # 0x14000e748
   1400020d5:	mov    rdx,QWORD PTR [rdi]
   1400020d8:	mov    rbx,QWORD PTR [rdx+0x10]
   1400020dc:	mov    rcx,rbx
   1400020df:	call   QWORD PTR [rip+0x83d3]        # 0x14000a4b8
   1400020e5:	mov    rcx,rdi
   1400020e8:	call   rbx
   1400020ea:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020ef:	mov    eax,esi
   1400020f1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400020f6:	mov    rdi,QWORD PTR [rsp+0x40]
   1400020fb:	add    rsp,0x20
   1400020ff:	pop    r14
   140002101:	ret    
   140002102:	int3   
   140002103:	int3   
   140002104:	int3   
   140002105:	int3   
   140002106:	int3   
   140002107:	int3   
   140002108:	int3   
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	int3   
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	mov    r9,r8
   140002113:	mov    r8,rdx
   140002116:	lea    rdx,[rip+0x8ad3]        # 0x14000abf0
   14000211d:	jmp    0x14000305c
   140002122:	int3   
   140002123:	int3   
   140002124:	int3   
   140002125:	int3   
   140002126:	int3   
   140002127:	int3   
   140002128:	int3   
   140002129:	int3   
   14000212a:	int3   
   14000212b:	int3   
   14000212c:	int3   
   14000212d:	int3   
   14000212e:	int3   
   14000212f:	int3   
   140002130:	mov    QWORD PTR [rsp+0x8],rbx
   140002135:	push   rdi
   140002136:	sub    rsp,0x20
   14000213a:	mov    ebx,edx
   14000213c:	mov    rdi,rcx
   14000213f:	call   0x140001fec
   140002144:	test   bl,0x1
   140002147:	je     0x140002151
   140002149:	mov    rcx,rdi
   14000214c:	call   0x140007d08
   140002151:	mov    rax,rdi
   140002154:	mov    rbx,QWORD PTR [rsp+0x30]
   140002159:	add    rsp,0x20
   14000215d:	pop    rdi
   14000215e:	ret    
   14000215f:	int3   
   140002160:	int3   
   140002161:	int3   
   140002162:	int3   
   140002163:	int3   
   140002164:	int3   
   140002165:	int3   
   140002166:	int3   
   140002167:	int3   
   140002168:	sub    rsp,0x28
   14000216c:	add    rcx,0x10
   140002170:	cmp    BYTE PTR [rcx+0x28],0x0
   140002174:	je     0x140002180
   140002176:	mov    BYTE PTR [rcx+0x28],0x0
   14000217a:	call   QWORD PTR [rip+0x7f10]        # 0x14000a090
   140002180:	add    rsp,0x28
   140002184:	ret    
   140002185:	int3   
   140002186:	int3   
   140002187:	int3   
   140002188:	int3   
   140002189:	int3   
   14000218a:	int3   
   14000218b:	int3   
   14000218c:	int3   
   14000218d:	int3   
   14000218e:	int3   
   14000218f:	int3   
   140002190:	rex push rbx
   140002192:	sub    rsp,0x20
   140002196:	mov    rbx,rcx
   140002199:	mov    rcx,QWORD PTR [rbx+0x50]
   14000219d:	or     edx,0xffffffff
   1400021a0:	call   QWORD PTR [rip+0x7fe2]        # 0x14000a188
   1400021a6:	mov    edx,DWORD PTR [rbx+0x58]
   1400021a9:	mov    rcx,QWORD PTR [rbx+0x50]
   1400021ad:	mov    BYTE PTR [rbx+0x61],0x0
   1400021b1:	call   QWORD PTR [rip+0x7fd1]        # 0x14000a188
   1400021b7:	test   eax,eax
   1400021b9:	je     0x1400021a6
   1400021bb:	cmp    BYTE PTR [rbx+0x61],0x0
   1400021bf:	jne    0x140002199
   1400021c1:	cmp    DWORD PTR [rbx+0xc],0x0
   1400021c5:	jne    0x140002199
   1400021c7:	call   QWORD PTR [rip+0x805b]        # 0x14000a228
   1400021cd:	cmp    DWORD PTR [rbx+0xc],0x0
   1400021d1:	jne    0x140002199
   1400021d3:	mov    rcx,QWORD PTR [rbx+0x50]
   1400021d7:	call   QWORD PTR [rip+0x7eeb]        # 0x14000a0c8
   1400021dd:	mov    ecx,DWORD PTR [rbx+0x48]
   1400021e0:	xor    r9d,r9d
   1400021e3:	xor    r8d,r8d
   1400021e6:	lea    edx,[r9+0x12]
   1400021ea:	call   QWORD PTR [rip+0x8000]        # 0x14000a1f0
   1400021f0:	xor    eax,eax
   1400021f2:	add    rsp,0x20
   1400021f6:	pop    rbx
   1400021f7:	ret    
   1400021f8:	int3   
   1400021f9:	int3   
   1400021fa:	int3   
   1400021fb:	int3   
   1400021fc:	int3   
   1400021fd:	int3   
   1400021fe:	int3   
   1400021ff:	int3   
   140002200:	mov    QWORD PTR [rsp+0x8],rbx
   140002205:	mov    QWORD PTR [rsp+0x10],rsi
   14000220a:	push   rdi
   14000220b:	sub    rsp,0x30
   14000220f:	mov    rbx,rdx
   140002212:	test   rdx,rdx
   140002215:	jne    0x14000221e
   140002217:	mov    eax,0x80004003
   14000221c:	jmp    0x14000226e
   14000221e:	xor    esi,esi
   140002220:	lea    rdi,[rcx+0x40]
   140002224:	cmp    QWORD PTR [rdi],rsi
   140002227:	jne    0x14000224e
   140002229:	lea    r9,[rip+0x88c0]        # 0x14000aaf0
   140002230:	mov    QWORD PTR [rsp+0x20],rdi
   140002235:	xor    edx,edx
   140002237:	lea    r8d,[rsi+0x1]
   14000223b:	lea    rcx,[rip+0x85ae]        # 0x14000a7f0
   140002242:	call   QWORD PTR [rip+0x7fe8]        # 0x14000a230
   140002248:	mov    esi,eax
   14000224a:	test   eax,eax
   14000224c:	js     0x14000226c
   14000224e:	mov    rcx,QWORD PTR [rdi]
   140002251:	mov    QWORD PTR [rbx],rcx
   140002254:	mov    rdi,QWORD PTR [rdi]
   140002257:	mov    rdx,QWORD PTR [rdi]
   14000225a:	mov    rbx,QWORD PTR [rdx+0x8]
   14000225e:	mov    rcx,rbx
   140002261:	call   QWORD PTR [rip+0x8251]        # 0x14000a4b8
   140002267:	mov    rcx,rdi
   14000226a:	call   rbx
   14000226c:	mov    eax,esi
   14000226e:	mov    rbx,QWORD PTR [rsp+0x40]
   140002273:	mov    rsi,QWORD PTR [rsp+0x48]
   140002278:	add    rsp,0x30
   14000227c:	pop    rdi
   14000227d:	ret    
   14000227e:	int3   
   14000227f:	int3   
   140002280:	int3   
   140002281:	int3   
   140002282:	int3   
   140002283:	int3   
   140002284:	int3   
   140002285:	int3   
   140002286:	int3   
   140002287:	int3   
   140002288:	int3   
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	mov    eax,DWORD PTR [rcx+0xc]
   140002293:	ret    
   140002294:	int3   
   140002295:	int3   
   140002296:	int3   
   140002297:	int3   
   140002298:	int3   
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	mov    QWORD PTR [rsp+0x10],rbx
   1400022a1:	mov    QWORD PTR [rsp+0x18],r8
   1400022a6:	mov    QWORD PTR [rsp+0x8],rcx
   1400022ab:	push   rsi
   1400022ac:	push   rdi
   1400022ad:	push   r14
   1400022af:	sub    rsp,0x30
   1400022b3:	mov    rdi,QWORD PTR [rip+0xee56]        # 0x140011110
   1400022ba:	xor    esi,esi
   1400022bc:	mov    rax,QWORD PTR [rip+0xee55]        # 0x140011118
   1400022c3:	cmp    rdi,rax
   1400022c6:	jae    0x14000232a
   1400022c8:	mov    r14,QWORD PTR [rdi]
   1400022cb:	test   r14,r14
   1400022ce:	je     0x140002319
   1400022d0:	mov    rbx,QWORD PTR [r14+0x38]
   1400022d4:	mov    rcx,rbx
   1400022d7:	call   QWORD PTR [rip+0x81db]        # 0x14000a4b8
   1400022dd:	call   rbx
   1400022df:	mov    rcx,QWORD PTR [r14]
   1400022e2:	mov    rdx,rax
   1400022e5:	xor    r8d,r8d
   1400022e8:	call   0x1400023f8
   1400022ed:	mov    esi,eax
   1400022ef:	test   eax,eax
   1400022f1:	js     0x1400023e1
   1400022f7:	mov    rbx,QWORD PTR [r14+0x8]
   1400022fb:	mov    rcx,rbx
   1400022fe:	call   QWORD PTR [rip+0x81b4]        # 0x14000a4b8
   140002304:	xor    ecx,ecx
   140002306:	call   rbx
   140002308:	mov    esi,eax
   14000230a:	test   eax,eax
   14000230c:	js     0x1400023e1
   140002312:	mov    rax,QWORD PTR [rip+0xedff]        # 0x140011118
   140002319:	add    rdi,0x8
   14000231d:	cmp    rdi,rax
   140002320:	jb     0x1400022c8
   140002322:	test   esi,esi
   140002324:	js     0x1400023e1
   14000232a:	mov    rcx,QWORD PTR [rip+0xedd7]        # 0x140011108
   140002331:	lea    r9,[rsp+0x60]
   140002336:	and    QWORD PTR [rsp+0x68],0x0
   14000233c:	lea    r8,[rsp+0x68]
   140002341:	and    QWORD PTR [rsp+0x60],0x0
   140002347:	call   0x140002974
   14000234c:	mov    esi,eax
   14000234e:	test   eax,eax
   140002350:	js     0x1400023b7
   140002352:	mov    rbx,QWORD PTR [rsp+0x60]
   140002357:	mov    rax,QWORD PTR [rbx]
   14000235a:	mov    rdi,QWORD PTR [rax+0x38]
   14000235e:	mov    rcx,rdi
   140002361:	call   QWORD PTR [rip+0x8151]        # 0x14000a4b8
   140002367:	lea    rdx,[rsp+0x50]
   14000236c:	mov    rcx,rbx
   14000236f:	call   rdi
   140002371:	mov    esi,eax
   140002373:	test   eax,eax
   140002375:	js     0x1400023b7
   140002377:	mov    rcx,QWORD PTR [rsp+0x50]
   14000237c:	mov    eax,DWORD PTR [rcx+0x14]
   14000237f:	mov    r9d,DWORD PTR [rcx+0x10]
   140002383:	movzx  r8d,WORD PTR [rcx+0x1a]
   140002388:	movzx  edx,WORD PTR [rcx+0x18]
   14000238c:	mov    DWORD PTR [rsp+0x20],eax
   140002390:	call   QWORD PTR [rip+0x7e02]        # 0x14000a198
   140002396:	mov    rbx,QWORD PTR [rsp+0x60]
   14000239b:	mov    esi,eax
   14000239d:	mov    rax,QWORD PTR [rbx]
   1400023a0:	mov    rdi,QWORD PTR [rax+0x60]
   1400023a4:	mov    rcx,rdi
   1400023a7:	call   QWORD PTR [rip+0x810b]        # 0x14000a4b8
   1400023ad:	mov    rdx,QWORD PTR [rsp+0x50]
   1400023b2:	mov    rcx,rbx
   1400023b5:	call   rdi
   1400023b7:	mov    rbx,QWORD PTR [rsp+0x60]
   1400023bc:	test   rbx,rbx
   1400023bf:	je     0x1400023d6
   1400023c1:	mov    rax,QWORD PTR [rbx]
   1400023c4:	mov    rdi,QWORD PTR [rax+0x10]
   1400023c8:	mov    rcx,rdi
   1400023cb:	call   QWORD PTR [rip+0x80e7]        # 0x14000a4b8
   1400023d1:	mov    rcx,rbx
   1400023d4:	call   rdi
   1400023d6:	mov    rcx,QWORD PTR [rsp+0x68]
   1400023db:	call   QWORD PTR [rip+0x7de7]        # 0x14000a1c8
   1400023e1:	mov    eax,esi
   1400023e3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400023e8:	add    rsp,0x30
   1400023ec:	pop    r14
   1400023ee:	pop    rdi
   1400023ef:	pop    rsi
   1400023f0:	ret    
   1400023f1:	int3   
   1400023f2:	int3   
   1400023f3:	int3   
   1400023f4:	int3   
   1400023f5:	int3   
   1400023f6:	int3   
   1400023f7:	int3   
   1400023f8:	mov    QWORD PTR [rsp+0x18],rbx
   1400023fd:	push   rbp
   1400023fe:	push   rsi
   1400023ff:	push   rdi
   140002400:	push   r12
   140002402:	push   r13
   140002404:	push   r14
   140002406:	push   r15
   140002408:	lea    rbp,[rsp-0x140]
   140002410:	sub    rsp,0x240
   140002417:	mov    rax,QWORD PTR [rip+0xbbf2]        # 0x14000e010
   14000241e:	xor    rax,rsp
   140002421:	mov    QWORD PTR [rbp+0x130],rax
   140002428:	xor    r13d,r13d
   14000242b:	mov    r12d,r8d
   14000242e:	mov    ebx,r13d
   140002431:	mov    rsi,rdx
   140002434:	mov    QWORD PTR [rsp+0x68],rbx
   140002439:	mov    r14,rcx
   14000243c:	test   rdx,rdx
   14000243f:	je     0x14000285c
   140002445:	cmp    DWORD PTR [rcx],r13d
   140002448:	jne    0x14000246f
   14000244a:	mov    eax,DWORD PTR [rip+0x904c]        # 0x14000b49c
   140002450:	cmp    DWORD PTR [rcx+0x4],eax
   140002453:	jne    0x14000246f
   140002455:	mov    eax,DWORD PTR [rip+0x9045]        # 0x14000b4a0
   14000245b:	cmp    DWORD PTR [rcx+0x8],eax
   14000245e:	jne    0x14000246f
   140002460:	mov    eax,DWORD PTR [rip+0x903e]        # 0x14000b4a4
   140002466:	cmp    DWORD PTR [rcx+0xc],eax
   140002469:	je     0x14000285c
   14000246f:	lea    rax,[rsp+0x68]
   140002474:	mov    r15d,0x1
   14000247a:	mov    r8d,r15d
   14000247d:	mov    QWORD PTR [rsp+0x20],rax
   140002482:	lea    r9,[rip+0x8677]        # 0x14000ab00
   140002489:	xor    edx,edx
   14000248b:	lea    rcx,[rip+0x8ff6]        # 0x14000b488
   140002492:	call   QWORD PTR [rip+0x7d98]        # 0x14000a230
   140002498:	test   eax,eax
   14000249a:	js     0x140002857
   1400024a0:	cmp    DWORD PTR [rsi],r13d
   1400024a3:	je     0x140002532
   1400024a9:	mov    rax,QWORD PTR [rsi+0x8]
   1400024ad:	mov    rbx,QWORD PTR [rsp+0x68]
   1400024b2:	movups xmm0,XMMWORD PTR [rax]
   1400024b5:	movdqu XMMWORD PTR [rbp-0x68],xmm0
   1400024ba:	mov    rax,QWORD PTR [rbx]
   1400024bd:	test   r12d,r12d
   1400024c0:	je     0x1400024f8
   1400024c2:	cmp    DWORD PTR [rsi],r15d
   1400024c5:	jne    0x1400024cd
   1400024c7:	mov    rdi,QWORD PTR [rax+0x28]
   1400024cb:	jmp    0x1400024d1
   1400024cd:	mov    rdi,QWORD PTR [rax+0x38]
   1400024d1:	mov    rcx,rdi
   1400024d4:	call   QWORD PTR [rip+0x7fde]        # 0x14000a4b8
   1400024da:	lea    r9,[rbp-0x68]
   1400024de:	mov    r8d,r15d
   1400024e1:	mov    rdx,r14
   1400024e4:	mov    rcx,rbx
   1400024e7:	call   rdi
   1400024e9:	mov    r15d,eax
   1400024ec:	test   eax,eax
   1400024ee:	js     0x140002528
   1400024f0:	mov    r15d,0x1
   1400024f6:	jmp    0x14000251f
   1400024f8:	cmp    DWORD PTR [rsi],r15d
   1400024fb:	jne    0x140002503
   1400024fd:	mov    rdi,QWORD PTR [rax+0x30]
   140002501:	jmp    0x140002507
   140002503:	mov    rdi,QWORD PTR [rax+0x40]
   140002507:	mov    rcx,rdi
   14000250a:	call   QWORD PTR [rip+0x7fa8]        # 0x14000a4b8
   140002510:	lea    r9,[rbp-0x68]
   140002514:	mov    r8d,r15d
   140002517:	mov    rdx,r14
   14000251a:	mov    rcx,rbx
   14000251d:	call   rdi
   14000251f:	add    rsi,0x10
   140002523:	jmp    0x1400024a0
   140002528:	mov    rbx,QWORD PTR [rsp+0x68]
   14000252d:	jmp    0x14000285f
   140002532:	test   r12d,r12d
   140002535:	jne    0x140002857
   14000253b:	lea    r8d,[r12+0x40]
   140002540:	mov    rcx,r14
   140002543:	lea    rdx,[rbp+0xb0]
   14000254a:	call   QWORD PTR [rip+0x7ce8]        # 0x14000a238
   140002550:	mov    ebx,0x80
   140002555:	lea    r8,[rip+0x85e4]        # 0x14000ab40
   14000255c:	mov    edx,ebx
   14000255e:	lea    rcx,[rbp-0x50]
   140002562:	call   QWORD PTR [rip+0x7e80]        # 0x14000a3e8
   140002568:	lea    r14d,[r12+0xc]
   14000256d:	lea    r12d,[rbx-0x6a]
   140002571:	lea    r15d,[rbx-0x30]
   140002575:	test   eax,eax
   140002577:	je     0x14000259d
   140002579:	cmp    eax,r14d
   14000257c:	je     0x1400028bc
   140002582:	cmp    eax,r12d
   140002585:	je     0x1400028b1
   14000258b:	cmp    eax,0x22
   14000258e:	je     0x1400028b1
   140002594:	cmp    eax,r15d
   140002597:	jne    0x1400028a6
   14000259d:	lea    r8,[rbp+0xb0]
   1400025a4:	mov    rdx,rbx
   1400025a7:	lea    rcx,[rbp-0x50]
   1400025ab:	call   QWORD PTR [rip+0x7e4f]        # 0x14000a400
   1400025b1:	test   eax,eax
   1400025b3:	je     0x1400025d9
   1400025b5:	cmp    eax,r14d
   1400025b8:	je     0x1400028dd
   1400025be:	cmp    eax,r12d
   1400025c1:	je     0x1400028d2
   1400025c7:	cmp    eax,0x22
   1400025ca:	je     0x1400028d2
   1400025d0:	cmp    eax,r15d
   1400025d3:	jne    0x1400028c7
   1400025d9:	lea    r8,[rip+0x8530]        # 0x14000ab10
   1400025e0:	mov    rdx,rbx
   1400025e3:	lea    rcx,[rbp-0x50]
   1400025e7:	call   QWORD PTR [rip+0x7e13]        # 0x14000a400
   1400025ed:	test   eax,eax
   1400025ef:	je     0x140002615
   1400025f1:	cmp    eax,r14d
   1400025f4:	je     0x1400028fe
   1400025fa:	cmp    eax,r12d
   1400025fd:	je     0x1400028f3
   140002603:	cmp    eax,0x22
   140002606:	je     0x1400028f3
   14000260c:	cmp    eax,r15d
   14000260f:	jne    0x1400028e8
   140002615:	mov    rdi,0xffffffff80000000
   14000261c:	mov    QWORD PTR [rbp-0x78],r13
   140002620:	lea    rax,[rsp+0x78]
   140002625:	mov    QWORD PTR [rbp-0x80],rdi
   140002629:	mov    rcx,rdi
   14000262c:	mov    QWORD PTR [rbp-0x70],r13
   140002630:	mov    r9d,0x20019
   140002636:	mov    DWORD PTR [rsp+0x60],r13d
   14000263b:	xor    r8d,r8d
   14000263e:	mov    QWORD PTR [rsp+0x78],r13
   140002643:	lea    rdx,[rbp-0x50]
   140002647:	mov    QWORD PTR [rsp+0x20],rax
   14000264c:	mov    rbx,r13
   14000264f:	call   QWORD PTR [rip+0x79d3]        # 0x14000a028
   140002655:	test   eax,eax
   140002657:	jne    0x1400026cd
   140002659:	mov    rbx,QWORD PTR [rsp+0x78]
   14000265e:	lea    rax,[rsp+0x60]
   140002663:	mov    QWORD PTR [rsp+0x58],r13
   140002668:	xor    r9d,r9d
   14000266b:	mov    QWORD PTR [rsp+0x50],r13
   140002670:	xor    r8d,r8d
   140002673:	mov    QWORD PTR [rsp+0x48],r13
   140002678:	xor    edx,edx
   14000267a:	mov    QWORD PTR [rsp+0x40],r13
   14000267f:	mov    rcx,rbx
   140002682:	mov    QWORD PTR [rsp+0x38],r13
   140002687:	mov    QWORD PTR [rsp+0x30],r13
   14000268c:	mov    QWORD PTR [rsp+0x28],r13
   140002691:	mov    QWORD PTR [rsp+0x20],rax
   140002696:	call   QWORD PTR [rip+0x797c]        # 0x14000a018
   14000269c:	movsxd rsi,eax
   14000269f:	test   rbx,rbx
   1400026a2:	je     0x1400026b0
   1400026a4:	mov    rcx,rbx
   1400026a7:	call   QWORD PTR [rip+0x7963]        # 0x14000a010
   1400026ad:	mov    rbx,r13
   1400026b0:	test   rsi,rsi
   1400026b3:	jne    0x1400026cd
   1400026b5:	cmp    DWORD PTR [rsp+0x60],r13d
   1400026ba:	jne    0x1400026cd
   1400026bc:	lea    rdx,[rbp-0x50]
   1400026c0:	lea    rcx,[rbp-0x80]
   1400026c4:	call   0x1400044e4
   1400026c9:	mov    rdi,QWORD PTR [rbp-0x80]
   1400026cd:	mov    esi,0x80
   1400026d2:	lea    r8,[rip+0x8467]        # 0x14000ab40
   1400026d9:	mov    edx,esi
   1400026db:	lea    rcx,[rbp-0x50]
   1400026df:	call   QWORD PTR [rip+0x7d03]        # 0x14000a3e8
   1400026e5:	test   eax,eax
   1400026e7:	je     0x14000270d
   1400026e9:	cmp    eax,r14d
   1400026ec:	je     0x14000291f
   1400026f2:	cmp    eax,r12d
   1400026f5:	je     0x140002914
   1400026fb:	cmp    eax,0x22
   1400026fe:	je     0x140002914
   140002704:	cmp    eax,r15d
   140002707:	jne    0x140002909
   14000270d:	lea    r8,[rbp+0xb0]
   140002714:	mov    rdx,rsi
   140002717:	lea    rcx,[rbp-0x50]
   14000271b:	call   QWORD PTR [rip+0x7cdf]        # 0x14000a400
   140002721:	test   eax,eax
   140002723:	je     0x140002749
   140002725:	cmp    eax,r14d
   140002728:	je     0x140002940
   14000272e:	cmp    eax,r12d
   140002731:	je     0x140002935
   140002737:	cmp    eax,0x22
   14000273a:	je     0x140002935
   140002740:	cmp    eax,r15d
   140002743:	jne    0x14000292a
   140002749:	lea    r8,[rip+0x8400]        # 0x14000ab50
   140002750:	mov    rdx,rsi
   140002753:	lea    rcx,[rbp-0x50]
   140002757:	call   QWORD PTR [rip+0x7ca3]        # 0x14000a400
   14000275d:	test   eax,eax
   14000275f:	je     0x140002785
   140002761:	cmp    eax,r14d
   140002764:	je     0x140002961
   14000276a:	cmp    eax,r12d
   14000276d:	je     0x140002956
   140002773:	cmp    eax,0x22
   140002776:	je     0x140002956
   14000277c:	cmp    eax,r15d
   14000277f:	jne    0x14000294b
   140002785:	lea    rax,[rsp+0x70]
   14000278a:	mov    QWORD PTR [rsp+0x70],r13
   14000278f:	mov    r9d,0x20019
   140002795:	mov    QWORD PTR [rsp+0x20],rax
   14000279a:	xor    r8d,r8d
   14000279d:	lea    rdx,[rbp-0x50]
   1400027a1:	mov    rcx,rdi
   1400027a4:	call   QWORD PTR [rip+0x787e]        # 0x14000a028
   1400027aa:	test   eax,eax
   1400027ac:	jne    0x14000283b
   1400027b2:	mov    eax,r13d
   1400027b5:	test   rbx,rbx
   1400027b8:	je     0x1400027c3
   1400027ba:	mov    rcx,rbx
   1400027bd:	call   QWORD PTR [rip+0x784d]        # 0x14000a010
   1400027c3:	mov    rbx,QWORD PTR [rsp+0x70]
   1400027c8:	test   eax,eax
   1400027ca:	jne    0x14000283b
   1400027cc:	mov    QWORD PTR [rsp+0x58],r13
   1400027d1:	lea    rax,[rsp+0x60]
   1400027d6:	mov    QWORD PTR [rsp+0x50],r13
   1400027db:	xor    r9d,r9d
   1400027de:	mov    QWORD PTR [rsp+0x48],r13
   1400027e3:	xor    r8d,r8d
   1400027e6:	mov    QWORD PTR [rsp+0x40],r13
   1400027eb:	xor    edx,edx
   1400027ed:	mov    QWORD PTR [rsp+0x38],r13
   1400027f2:	mov    rcx,rbx
   1400027f5:	mov    QWORD PTR [rsp+0x30],r13
   1400027fa:	mov    QWORD PTR [rsp+0x28],r13
   1400027ff:	mov    QWORD PTR [rsp+0x20],rax
   140002804:	call   QWORD PTR [rip+0x780e]        # 0x14000a018
   14000280a:	movsxd rsi,eax
   14000280d:	test   rbx,rbx
   140002810:	je     0x14000281e
   140002812:	mov    rcx,rbx
   140002815:	call   QWORD PTR [rip+0x77f5]        # 0x14000a010
   14000281b:	mov    rbx,r13
   14000281e:	test   rsi,rsi
   140002821:	jne    0x14000283b
   140002823:	cmp    DWORD PTR [rsp+0x60],r13d
   140002828:	jne    0x14000283b
   14000282a:	lea    rdx,[rbp-0x50]
   14000282e:	lea    rcx,[rbp-0x80]
   140002832:	call   0x1400044e4
   140002837:	mov    rdi,QWORD PTR [rbp-0x80]
   14000283b:	test   rbx,rbx
   14000283e:	je     0x140002849
   140002840:	mov    rcx,rbx
   140002843:	call   QWORD PTR [rip+0x77c7]        # 0x14000a010
   140002849:	test   rdi,rdi
   14000284c:	je     0x140002857
   14000284e:	mov    rcx,rdi
   140002851:	call   QWORD PTR [rip+0x77b9]        # 0x14000a010
   140002857:	mov    rbx,QWORD PTR [rsp+0x68]
   14000285c:	mov    r15d,r13d
   14000285f:	test   rbx,rbx
   140002862:	je     0x140002879
   140002864:	mov    rcx,QWORD PTR [rbx]
   140002867:	mov    rdi,QWORD PTR [rcx+0x10]
   14000286b:	mov    rcx,rdi
   14000286e:	call   QWORD PTR [rip+0x7c44]        # 0x14000a4b8
   140002874:	mov    rcx,rbx
   140002877:	call   rdi
   140002879:	mov    eax,r15d
   14000287c:	mov    rcx,QWORD PTR [rbp+0x130]
   140002883:	xor    rcx,rsp
   140002886:	call   0x1400081f0
   14000288b:	mov    rbx,QWORD PTR [rsp+0x290]
   140002893:	add    rsp,0x240
   14000289a:	pop    r15
   14000289c:	pop    r14
   14000289e:	pop    r13
   1400028a0:	pop    r12
   1400028a2:	pop    rdi
   1400028a3:	pop    rsi
   1400028a4:	pop    rbp
   1400028a5:	ret    
   1400028a6:	mov    ecx,0x80004005
   1400028ab:	call   0x1400042a0
   1400028b0:	int3   
   1400028b1:	mov    ecx,0x80070057
   1400028b6:	call   0x1400042a0
   1400028bb:	int3   
   1400028bc:	mov    ecx,0x8007000e
   1400028c1:	call   0x1400042a0
   1400028c6:	int3   
   1400028c7:	mov    ecx,0x80004005
   1400028cc:	call   0x1400042a0
   1400028d1:	int3   
   1400028d2:	mov    ecx,0x80070057
   1400028d7:	call   0x1400042a0
   1400028dc:	int3   
   1400028dd:	mov    ecx,0x8007000e
   1400028e2:	call   0x1400042a0
   1400028e7:	int3   
   1400028e8:	mov    ecx,0x80004005
   1400028ed:	call   0x1400042a0
   1400028f2:	int3   
   1400028f3:	mov    ecx,0x80070057
   1400028f8:	call   0x1400042a0
   1400028fd:	int3   
   1400028fe:	mov    ecx,0x8007000e
   140002903:	call   0x1400042a0
   140002908:	int3   
   140002909:	mov    ecx,0x80004005
   14000290e:	call   0x1400042a0
   140002913:	int3   
   140002914:	mov    ecx,0x80070057
   140002919:	call   0x1400042a0
   14000291e:	int3   
   14000291f:	mov    ecx,0x8007000e
   140002924:	call   0x1400042a0
   140002929:	int3   
   14000292a:	mov    ecx,0x80004005
   14000292f:	call   0x1400042a0
   140002934:	int3   
   140002935:	mov    ecx,0x80070057
   14000293a:	call   0x1400042a0
   14000293f:	int3   
   140002940:	mov    ecx,0x8007000e
   140002945:	call   0x1400042a0
   14000294a:	int3   
   14000294b:	mov    ecx,0x80004005
   140002950:	call   0x1400042a0
   140002955:	int3   
   140002956:	mov    ecx,0x80070057
   14000295b:	call   0x1400042a0
   140002960:	int3   
   140002961:	mov    ecx,0x8007000e
   140002966:	call   0x1400042a0
   14000296b:	int3   
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	int3   
   140002971:	int3   
   140002972:	int3   
   140002973:	int3   
   140002974:	rex push rbx
   140002976:	push   rbp
   140002977:	push   rsi
   140002978:	push   rdi
   140002979:	push   r14
   14000297b:	sub    rsp,0x260
   140002982:	mov    rax,QWORD PTR [rip+0xb687]        # 0x14000e010
   140002989:	xor    rax,rsp
   14000298c:	mov    QWORD PTR [rsp+0x250],rax
   140002994:	xor    ebp,ebp
   140002996:	mov    rsi,r9
   140002999:	mov    r14,r8
   14000299c:	test   r8,r8
   14000299f:	je     0x140002ad0
   1400029a5:	test   r9,r9
   1400029a8:	je     0x140002ad0
   1400029ae:	mov    QWORD PTR [r8],rbp
   1400029b1:	lea    rdx,[rsp+0x30]
   1400029b6:	mov    r8d,0x104
   1400029bc:	mov    QWORD PTR [r9],rbp
   1400029bf:	call   QWORD PTR [rip+0x77b3]        # 0x14000a178
   1400029c5:	test   eax,eax
   1400029c7:	jne    0x1400029d5
   1400029c9:	call   0x14000380c
   1400029ce:	mov    ebx,eax
   1400029d0:	jmp    0x140002acc
   1400029d5:	cmp    eax,0x104
   1400029da:	jne    0x1400029e6
   1400029dc:	mov    ebx,0x8007007a
   1400029e1:	jmp    0x140002acc
   1400029e6:	movzx  eax,WORD PTR [rsp+0x30]
   1400029eb:	lea    rcx,[rsp+0x30]
   1400029f0:	mov    rdi,rbp
   1400029f3:	jmp    0x140002a16
   1400029f5:	movzx  edx,ax
   1400029f8:	cmp    edx,0x2e
   1400029fb:	je     0x140002a07
   1400029fd:	cmp    edx,0x5c
   140002a00:	jne    0x140002a0a
   140002a02:	mov    rdi,rbp
   140002a05:	jmp    0x140002a0a
   140002a07:	mov    rdi,rcx
   140002a0a:	call   QWORD PTR [rip+0x77d8]        # 0x14000a1e8
   140002a10:	mov    rcx,rax
   140002a13:	movzx  eax,WORD PTR [rax]
   140002a16:	test   ax,ax
   140002a19:	jne    0x1400029f5
   140002a1b:	test   rdi,rdi
   140002a1e:	mov    rdx,rsi
   140002a21:	cmove  rdi,rcx
   140002a25:	lea    rcx,[rsp+0x30]
   140002a2a:	call   QWORD PTR [rip+0x7770]        # 0x14000a1a0
   140002a30:	mov    ebx,eax
   140002a32:	test   eax,eax
   140002a34:	jns    0x140002ab3
   140002a36:	movzx  eax,WORD PTR [rip+0x814b]        # 0x14000ab88
   140002a3d:	mov    rcx,rdi
   140002a40:	movsd  xmm0,QWORD PTR [rip+0x8138]        # 0x14000ab80
   140002a48:	mov    WORD PTR [rsp+0x28],ax
   140002a4d:	lea    rax,[rsp+0x30]
   140002a52:	sub    rcx,rax
   140002a55:	movsd  QWORD PTR [rsp+0x20],xmm0
   140002a5b:	sar    rcx,1
   140002a5e:	lea    rax,[rcx+0x5]
   140002a62:	cmp    rax,0x104
   140002a68:	jbe    0x140002a71
   140002a6a:	mov    ebx,0x80004005
   140002a6f:	jmp    0x140002acc
   140002a71:	mov    edx,0x10e
   140002a76:	lea    r8,[rsp+0x20]
   140002a7b:	sub    rdx,rcx
   140002a7e:	mov    rcx,rdi
   140002a81:	call   QWORD PTR [rip+0x7961]        # 0x14000a3e8
   140002a87:	test   eax,eax
   140002a89:	je     0x140002a9f
   140002a8b:	cmp    eax,0xc
   140002a8e:	je     0x140002b09
   140002a90:	cmp    eax,0x16
   140002a93:	je     0x140002afe
   140002a95:	cmp    eax,0x22
   140002a98:	je     0x140002afe
   140002a9a:	cmp    eax,0x50
   140002a9d:	jne    0x140002af3
   140002a9f:	mov    rdx,rsi
   140002aa2:	lea    rcx,[rsp+0x30]
   140002aa7:	call   QWORD PTR [rip+0x76f3]        # 0x14000a1a0
   140002aad:	mov    ebx,eax
   140002aaf:	test   eax,eax
   140002ab1:	js     0x140002acc
   140002ab3:	lea    rcx,[rsp+0x30]
   140002ab8:	call   QWORD PTR [rip+0x7702]        # 0x14000a1c0
   140002abe:	test   rax,rax
   140002ac1:	mov    QWORD PTR [r14],rax
   140002ac4:	mov    ecx,0x8007000e
   140002ac9:	cmove  ebx,ecx
   140002acc:	mov    eax,ebx
   140002ace:	jmp    0x140002ad5
   140002ad0:	mov    eax,0x80004003
   140002ad5:	mov    rcx,QWORD PTR [rsp+0x250]
   140002add:	xor    rcx,rsp
   140002ae0:	call   0x1400081f0
   140002ae5:	add    rsp,0x260
   140002aec:	pop    r14
   140002aee:	pop    rdi
   140002aef:	pop    rsi
   140002af0:	pop    rbp
   140002af1:	pop    rbx
   140002af2:	ret    
   140002af3:	mov    ecx,0x80004005
   140002af8:	call   0x1400042a0
   140002afd:	int3   
   140002afe:	mov    ecx,0x80070057
   140002b03:	call   0x1400042a0
   140002b08:	int3   
   140002b09:	mov    ecx,0x8007000e
   140002b0e:	call   0x1400042a0
   140002b13:	int3   
   140002b14:	int3   
   140002b15:	int3   
   140002b16:	int3   
   140002b17:	int3   
   140002b18:	int3   
   140002b19:	int3   
   140002b1a:	int3   
   140002b1b:	int3   
   140002b1c:	mov    QWORD PTR [rsp+0x10],rbx
   140002b21:	mov    QWORD PTR [rsp+0x18],rsi
   140002b26:	push   rbp
   140002b27:	push   r14
   140002b29:	push   r15
   140002b2b:	lea    rbp,[rsp-0x170]
   140002b33:	sub    rsp,0x270
   140002b3a:	mov    rax,QWORD PTR [rip+0xb4cf]        # 0x14000e010
   140002b41:	xor    rax,rsp
   140002b44:	mov    QWORD PTR [rbp+0x160],rax
   140002b4b:	xor    r15d,r15d
   140002b4e:	lea    r9,[rsp+0x38]
   140002b53:	lea    r8,[rsp+0x30]
   140002b58:	mov    QWORD PTR [rsp+0x30],r15
   140002b5d:	mov    QWORD PTR [rsp+0x38],r15
   140002b62:	call   0x140002974
   140002b67:	mov    r14d,eax
   140002b6a:	test   eax,eax
   140002b6c:	js     0x140002ca6
   140002b72:	mov    rbx,QWORD PTR [rsp+0x38]
   140002b77:	mov    QWORD PTR [rsp+0x40],r15
   140002b7c:	mov    rax,QWORD PTR [rbx]
   140002b7f:	mov    rsi,QWORD PTR [rax+0x48]
   140002b83:	mov    rcx,rsi
   140002b86:	call   QWORD PTR [rip+0x792c]        # 0x14000a4b8
   140002b8c:	lea    rax,[rsp+0x40]
   140002b91:	xor    r9d,r9d
   140002b94:	mov    QWORD PTR [rsp+0x28],rax
   140002b99:	xor    r8d,r8d
   140002b9c:	or     edx,0xffffffff
   140002b9f:	mov    QWORD PTR [rsp+0x20],r15
   140002ba4:	mov    rcx,rbx
   140002ba7:	call   rsi
   140002ba9:	test   eax,eax
   140002bab:	js     0x140002c85
   140002bb1:	cmp    QWORD PTR [rsp+0x40],r15
   140002bb6:	je     0x140002c85
   140002bbc:	mov    rcx,QWORD PTR [rsp+0x30]
   140002bc1:	call   QWORD PTR [rip+0x75f1]        # 0x14000a1b8
   140002bc7:	mov    r8,QWORD PTR [rsp+0x30]
   140002bcc:	lea    rcx,[rsp+0x50]
   140002bd1:	mov    r14d,0x104
   140002bd7:	mov    r9d,eax
   140002bda:	mov    edx,r14d
   140002bdd:	call   QWORD PTR [rip+0x780d]        # 0x14000a3f0
   140002be3:	test   eax,eax
   140002be5:	je     0x140002c0b
   140002be7:	cmp    eax,0xc
   140002bea:	je     0x140002d11
   140002bf0:	cmp    eax,0x16
   140002bf3:	je     0x140002d06
   140002bf9:	cmp    eax,0x22
   140002bfc:	je     0x140002d06
   140002c02:	cmp    eax,0x50
   140002c05:	jne    0x140002cfb
   140002c0b:	lea    rbx,[rsp+0x50]
   140002c10:	mov    WORD PTR [rbp+0x156],r15w
   140002c18:	lea    rsi,[rsp+0x50]
   140002c1d:	cmp    WORD PTR [rsp+0x50],r15w
   140002c23:	je     0x140002c57
   140002c25:	mov    rcx,rsi
   140002c28:	call   QWORD PTR [rip+0x75ba]        # 0x14000a1e8
   140002c2e:	movzx  ecx,WORD PTR [rsi]
   140002c31:	sub    cx,0x2f
   140002c35:	cmp    cx,0x2d
   140002c39:	ja     0x140002c4e
   140002c3b:	movabs rdx,0x200000000801
   140002c45:	bt     rdx,rcx
   140002c49:	jae    0x140002c4e
   140002c4b:	mov    rbx,rax
   140002c4e:	mov    rsi,rax
   140002c51:	cmp    WORD PTR [rax],r15w
   140002c55:	jne    0x140002c25
   140002c57:	lea    rax,[rsp+0x50]
   140002c5c:	sub    rbx,rax
   140002c5f:	sar    rbx,1
   140002c62:	cmp    ebx,r14d
   140002c65:	jae    0x140002c7e
   140002c67:	mov    eax,ebx
   140002c69:	add    rax,rax
   140002c6c:	cmp    rax,0x208
   140002c72:	jae    0x140002d1c
   140002c78:	mov    WORD PTR [rsp+rax*1+0x50],r15w
   140002c7e:	lea    r8,[rsp+0x50]
   140002c83:	jmp    0x140002c88
   140002c85:	xor    r8d,r8d
   140002c88:	mov    rdx,QWORD PTR [rsp+0x30]
   140002c8d:	mov    rcx,QWORD PTR [rsp+0x38]
   140002c92:	call   QWORD PTR [rip+0x7510]        # 0x14000a1a8
   140002c98:	mov    rcx,QWORD PTR [rsp+0x40]
   140002c9d:	mov    r14d,eax
   140002ca0:	call   QWORD PTR [rip+0x7522]        # 0x14000a1c8
   140002ca6:	mov    rbx,QWORD PTR [rsp+0x38]
   140002cab:	test   rbx,rbx
   140002cae:	je     0x140002cc5
   140002cb0:	mov    rax,QWORD PTR [rbx]
   140002cb3:	mov    rsi,QWORD PTR [rax+0x10]
   140002cb7:	mov    rcx,rsi
   140002cba:	call   QWORD PTR [rip+0x77f8]        # 0x14000a4b8
   140002cc0:	mov    rcx,rbx
   140002cc3:	call   rsi
   140002cc5:	mov    rcx,QWORD PTR [rsp+0x30]
   140002cca:	call   QWORD PTR [rip+0x74f8]        # 0x14000a1c8
   140002cd0:	mov    eax,r14d
   140002cd3:	mov    rcx,QWORD PTR [rbp+0x160]
   140002cda:	xor    rcx,rsp
   140002cdd:	call   0x1400081f0
   140002ce2:	lea    r11,[rsp+0x270]
   140002cea:	mov    rbx,QWORD PTR [r11+0x28]
   140002cee:	mov    rsi,QWORD PTR [r11+0x30]
   140002cf2:	mov    rsp,r11
   140002cf5:	pop    r15
   140002cf7:	pop    r14
   140002cf9:	pop    rbp
   140002cfa:	ret    
   140002cfb:	mov    ecx,0x80004005
   140002d00:	call   0x1400042a0
   140002d05:	int3   
   140002d06:	mov    ecx,0x80070057
   140002d0b:	call   0x1400042a0
   140002d10:	int3   
   140002d11:	mov    ecx,0x8007000e
   140002d16:	call   0x1400042a0
   140002d1b:	int3   
   140002d1c:	call   0x140008478
   140002d21:	int3   
   140002d22:	int3   
   140002d23:	int3   
   140002d24:	int3   
   140002d25:	int3   
   140002d26:	int3   
   140002d27:	int3   
   140002d28:	int3   
   140002d29:	int3   
   140002d2a:	int3   
   140002d2b:	int3   
   140002d2c:	int3   
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	mov    QWORD PTR [rsp+0x8],rbx
   140002d35:	mov    QWORD PTR [rsp+0x10],rbp
   140002d3a:	mov    QWORD PTR [rsp+0x18],rsi
   140002d3f:	push   rdi
   140002d40:	sub    rsp,0x20
   140002d44:	mov    rbp,rdx
   140002d47:	mov    rsi,r9
   140002d4a:	xor    edx,edx
   140002d4c:	mov    rdi,r8
   140002d4f:	mov    eax,0x80004003
   140002d54:	test   r9,r9
   140002d57:	je     0x140002d9f
   140002d59:	mov    QWORD PTR [r9],rdx
   140002d5c:	test   rbp,rbp
   140002d5f:	je     0x140002d87
   140002d61:	cmp    DWORD PTR [r8],edx
   140002d64:	jne    0x140002d80
   140002d66:	cmp    DWORD PTR [r8+0x4],edx
   140002d6a:	jne    0x140002d80
   140002d6c:	cmp    DWORD PTR [r8+0x8],0xc0
   140002d74:	jne    0x140002d80
   140002d76:	cmp    DWORD PTR [r8+0xc],0x46000000
   140002d7e:	je     0x140002d87
   140002d80:	mov    eax,0x80040110
   140002d85:	jmp    0x140002d9f
   140002d87:	mov    rbx,QWORD PTR [rcx+0x40]
   140002d8b:	mov    rcx,rbx
   140002d8e:	call   QWORD PTR [rip+0x7724]        # 0x14000a4b8
   140002d94:	mov    r8,rsi
   140002d97:	mov    rdx,rdi
   140002d9a:	mov    rcx,rbp
   140002d9d:	call   rbx
   140002d9f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002da4:	mov    rbp,QWORD PTR [rsp+0x38]
   140002da9:	mov    rsi,QWORD PTR [rsp+0x40]
   140002dae:	add    rsp,0x20
   140002db2:	pop    rdi
   140002db3:	ret    
   140002db4:	int3   
   140002db5:	int3   
   140002db6:	int3   
   140002db7:	int3   
   140002db8:	int3   
   140002db9:	int3   
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	mov    QWORD PTR [rsp+0x8],rbx
   140002dc5:	push   rdi
   140002dc6:	sub    rsp,0x20
   140002dca:	mov    rdi,QWORD PTR [rip+0xb977]        # 0x14000e748
   140002dd1:	mov    rax,QWORD PTR [rdi]
   140002dd4:	test   edx,edx
   140002dd6:	je     0x140002dde
   140002dd8:	mov    rbx,QWORD PTR [rax+0x8]
   140002ddc:	jmp    0x140002de2
   140002dde:	mov    rbx,QWORD PTR [rax+0x10]
   140002de2:	mov    rcx,rbx
   140002de5:	call   QWORD PTR [rip+0x76cd]        # 0x14000a4b8
   140002deb:	mov    rcx,rdi
   140002dee:	call   rbx
   140002df0:	mov    rbx,QWORD PTR [rsp+0x30]
   140002df5:	xor    eax,eax
   140002df7:	add    rsp,0x20
   140002dfb:	pop    rdi
   140002dfc:	ret    
   140002dfd:	int3   
   140002dfe:	int3   
   140002dff:	int3   
   140002e00:	int3   
   140002e01:	int3   
   140002e02:	int3   
   140002e03:	int3   
   140002e04:	mov    QWORD PTR [rsp+0x8],rbx
   140002e09:	mov    QWORD PTR [rsp+0x10],rbp
   140002e0e:	mov    QWORD PTR [rsp+0x18],rsi
   140002e13:	push   rdi
   140002e14:	sub    rsp,0x20
   140002e18:	mov    rsi,rcx
   140002e1b:	mov    rdi,rdx
   140002e1e:	movzx  ecx,WORD PTR [rcx]
   140002e21:	call   QWORD PTR [rip+0x73e1]        # 0x14000a208
   140002e27:	movzx  ecx,WORD PTR [rdi]
   140002e2a:	mov    rbx,rax
   140002e2d:	call   QWORD PTR [rip+0x73d5]        # 0x14000a208
   140002e33:	movabs rbp,0x100000201
   140002e3d:	mov    r8,rax
   140002e40:	test   bx,bx
   140002e43:	je     0x140002e9c
   140002e45:	cmp    bx,r8w
   140002e49:	jne    0x140002e8d
   140002e4b:	cmp    bx,0x20
   140002e4f:	je     0x140002e93
   140002e51:	cmp    bx,0x9
   140002e55:	je     0x140002e8d
   140002e57:	mov    rcx,rsi
   140002e5a:	call   QWORD PTR [rip+0x7388]        # 0x14000a1e8
   140002e60:	mov    rcx,rdi
   140002e63:	mov    rsi,rax
   140002e66:	call   QWORD PTR [rip+0x737c]        # 0x14000a1e8
   140002e6c:	movzx  ecx,WORD PTR [rsi]
   140002e6f:	mov    rdi,rax
   140002e72:	call   QWORD PTR [rip+0x7390]        # 0x14000a208
   140002e78:	movzx  ecx,WORD PTR [rdi]
   140002e7b:	movzx  ebx,ax
   140002e7e:	call   QWORD PTR [rip+0x7384]        # 0x14000a208
   140002e84:	movzx  r8d,ax
   140002e88:	test   bx,bx
   140002e8b:	jne    0x140002e45
   140002e8d:	cmp    bx,0x20
   140002e91:	ja     0x140002eb1
   140002e93:	movzx  eax,bx
   140002e96:	bt     rbp,rax
   140002e9a:	jae    0x140002eb1
   140002e9c:	cmp    r8w,0x20
   140002ea1:	ja     0x140002eb1
   140002ea3:	movzx  eax,r8w
   140002ea7:	bt     rbp,rax
   140002eab:	jae    0x140002eb1
   140002ead:	xor    eax,eax
   140002eaf:	jmp    0x140002ebc
   140002eb1:	cmp    bx,r8w
   140002eb5:	sbb    eax,eax
   140002eb7:	and    eax,0xfffffffe
   140002eba:	inc    eax
   140002ebc:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ec1:	mov    rbp,QWORD PTR [rsp+0x38]
   140002ec6:	mov    rsi,QWORD PTR [rsp+0x40]
   140002ecb:	add    rsp,0x20
   140002ecf:	pop    rdi
   140002ed0:	ret    
   140002ed1:	int3   
   140002ed2:	int3   
   140002ed3:	int3   
   140002ed4:	int3   
   140002ed5:	int3   
   140002ed6:	int3   
   140002ed7:	int3   
   140002ed8:	mov    QWORD PTR [rsp+0x8],rbx
   140002edd:	mov    QWORD PTR [rsp+0x10],rsi
   140002ee2:	mov    QWORD PTR [rsp+0x18],rdi
   140002ee7:	push   r14
   140002ee9:	sub    rsp,0x20
   140002eed:	cmp    DWORD PTR [rip+0xe20c],0x0        # 0x140011100
   140002ef4:	je     0x140002f55
   140002ef6:	mov    rdi,QWORD PTR [rip+0xe213]        # 0x140011110
   140002efd:	mov    rax,QWORD PTR [rip+0xe214]        # 0x140011118
   140002f04:	jmp    0x140002f3c
   140002f06:	mov    rsi,QWORD PTR [rdi]
   140002f09:	test   rsi,rsi
   140002f0c:	je     0x140002f38
   140002f0e:	mov    r14,QWORD PTR [rsi+0x20]
   140002f12:	test   r14,r14
   140002f15:	je     0x140002f2c
   140002f17:	mov    rax,QWORD PTR [r14]
   140002f1a:	mov    rbx,QWORD PTR [rax+0x10]
   140002f1e:	mov    rcx,rbx
   140002f21:	call   QWORD PTR [rip+0x7591]        # 0x14000a4b8
   140002f27:	mov    rcx,r14
   140002f2a:	call   rbx
   140002f2c:	and    QWORD PTR [rsi+0x20],0x0
   140002f31:	mov    rax,QWORD PTR [rip+0xe1e0]        # 0x140011118
   140002f38:	add    rdi,0x8
   140002f3c:	cmp    rdi,rax
   140002f3f:	jb     0x140002f06
   140002f41:	lea    rcx,[rip+0xe1d8]        # 0x140011120
   140002f48:	call   QWORD PTR [rip+0x7142]        # 0x14000a090
   140002f4e:	and    DWORD PTR [rip+0xe1ab],0x0        # 0x140011100
   140002f55:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f5a:	mov    rsi,QWORD PTR [rsp+0x38]
   140002f5f:	mov    rdi,QWORD PTR [rsp+0x40]
   140002f64:	add    rsp,0x20
   140002f68:	pop    r14
   140002f6a:	ret    
   140002f6b:	int3   
   140002f6c:	int3   
   140002f6d:	int3   
   140002f6e:	int3   
   140002f6f:	int3   
   140002f70:	int3   
   140002f71:	int3   
   140002f72:	int3   
   140002f73:	int3   
   140002f74:	mov    QWORD PTR [rsp+0x8],rbx
   140002f79:	mov    QWORD PTR [rsp+0x10],rsi
   140002f7e:	mov    QWORD PTR [rsp+0x18],rdi
   140002f83:	push   r14
   140002f85:	sub    rsp,0x20
   140002f89:	lea    rsi,[rcx+0x8]
   140002f8d:	mov    rdi,rcx
   140002f90:	cmp    DWORD PTR [rsi],0x0
   140002f93:	je     0x140003005
   140002f95:	cmp    QWORD PTR [rcx+0x10],0x0
   140002f9a:	je     0x140002fda
   140002f9c:	test   rsi,rsi
   140002f9f:	je     0x14000301b
   140002fa1:	mov    r14,QWORD PTR [rsi+0x8]
   140002fa5:	test   r14,r14
   140002fa8:	je     0x140002fd0
   140002faa:	mov    rbx,QWORD PTR [r14]
   140002fad:	mov    rcx,rbx
   140002fb0:	call   QWORD PTR [rip+0x7502]        # 0x14000a4b8
   140002fb6:	mov    rcx,QWORD PTR [r14+0x8]
   140002fba:	call   rbx
   140002fbc:	mov    rbx,QWORD PTR [r14+0x10]
   140002fc0:	mov    rcx,r14
   140002fc3:	call   0x140007d08
   140002fc8:	mov    r14,rbx
   140002fcb:	test   rbx,rbx
   140002fce:	jne    0x140002faa
   140002fd0:	and    QWORD PTR [rsi+0x8],0x0
   140002fd5:	and    QWORD PTR [rdi+0x10],0x0
   140002fda:	mov    r14,QWORD PTR [rdi+0x40]
   140002fde:	test   r14,r14
   140002fe1:	je     0x140002ff8
   140002fe3:	mov    rax,QWORD PTR [r14]
   140002fe6:	mov    rbx,QWORD PTR [rax+0x10]
   140002fea:	mov    rcx,rbx
   140002fed:	call   QWORD PTR [rip+0x74c5]        # 0x14000a4b8
   140002ff3:	mov    rcx,r14
   140002ff6:	call   rbx
   140002ff8:	lea    rcx,[rdi+0x18]
   140002ffc:	call   QWORD PTR [rip+0x708e]        # 0x14000a090
   140003002:	and    DWORD PTR [rsi],0x0
   140003005:	mov    rbx,QWORD PTR [rsp+0x30]
   14000300a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000300f:	mov    rdi,QWORD PTR [rsp+0x40]
   140003014:	add    rsp,0x20
   140003018:	pop    r14
   14000301a:	ret    
   14000301b:	mov    ecx,0xc0000005
   140003020:	call   0x140003844
   140003025:	int3   
   140003026:	int3   
   140003027:	int3   
   140003028:	int3   
   140003029:	int3   
   14000302a:	int3   
   14000302b:	int3   
   14000302c:	int3   
   14000302d:	int3   
   14000302e:	int3   
   14000302f:	int3   
   140003030:	mov    eax,0x1
   140003035:	lock xadd DWORD PTR [rcx+0xc],eax
   14000303a:	inc    eax
   14000303c:	ret    
   14000303d:	int3   
   14000303e:	int3   
   14000303f:	int3   
   140003040:	int3   
   140003041:	int3   
   140003042:	int3   
   140003043:	int3   
   140003044:	int3   
   140003045:	int3   
   140003046:	int3   
   140003047:	int3   
   140003048:	int3   
   140003049:	int3   
   14000304a:	int3   
   14000304b:	int3   
   14000304c:	int3   
   14000304d:	int3   
   14000304e:	int3   
   14000304f:	int3   
   140003050:	ret    0x0
   140003053:	int3   
   140003054:	int3   
   140003055:	int3   
   140003056:	int3   
   140003057:	int3   
   140003058:	int3   
   140003059:	int3   
   14000305a:	int3   
   14000305b:	int3   
   14000305c:	mov    rax,rsp
   14000305f:	mov    QWORD PTR [rax+0x8],rbx
   140003063:	mov    QWORD PTR [rax+0x10],rbp
   140003067:	mov    QWORD PTR [rax+0x18],rsi
   14000306b:	mov    QWORD PTR [rax+0x20],rdi
   14000306f:	push   r12
   140003071:	push   r14
   140003073:	push   r15
   140003075:	sub    rsp,0x20
   140003079:	xor    esi,esi
   14000307b:	mov    r14,r9
   14000307e:	mov    rdi,r8
   140003081:	mov    rbx,rdx
   140003084:	mov    r12,rcx
   140003087:	test   rcx,rcx
   14000308a:	je     0x140003172
   140003090:	test   rdx,rdx
   140003093:	je     0x140003172
   140003099:	test   r9,r9
   14000309c:	jne    0x1400030a8
   14000309e:	mov    esi,0x80004003
   1400030a3:	jmp    0x140003177
   1400030a8:	mov    QWORD PTR [r9],rsi
   1400030ab:	cmp    DWORD PTR [r8],esi
   1400030ae:	jne    0x1400030ee
   1400030b0:	cmp    DWORD PTR [r8+0x4],esi
   1400030b4:	jne    0x1400030ee
   1400030b6:	cmp    DWORD PTR [r8+0x8],0xc0
   1400030be:	jne    0x1400030ee
   1400030c0:	cmp    DWORD PTR [r8+0xc],0x46000000
   1400030c8:	jne    0x1400030ee
   1400030ca:	mov    rdi,QWORD PTR [rdx+0x8]
   1400030ce:	add    rdi,rcx
   1400030d1:	mov    rax,QWORD PTR [rdi]
   1400030d4:	mov    rbx,QWORD PTR [rax+0x8]
   1400030d8:	mov    rcx,rbx
   1400030db:	call   QWORD PTR [rip+0x73d7]        # 0x14000a4b8
   1400030e1:	mov    rcx,rdi
   1400030e4:	call   rbx
   1400030e6:	mov    QWORD PTR [r14],rdi
   1400030e9:	jmp    0x140003177
   1400030ee:	cmp    QWORD PTR [rdx+0x10],rsi
   1400030f2:	je     0x14000315b
   1400030f4:	mov    rcx,QWORD PTR [rbx]
   1400030f7:	mov    ebp,esi
   1400030f9:	test   rcx,rcx
   1400030fc:	sete   bpl
   140003100:	test   ebp,ebp
   140003102:	jne    0x140003122
   140003104:	mov    eax,DWORD PTR [rdi]
   140003106:	cmp    DWORD PTR [rcx],eax
   140003108:	jne    0x140003151
   14000310a:	mov    eax,DWORD PTR [rdi+0x4]
   14000310d:	cmp    DWORD PTR [rcx+0x4],eax
   140003110:	jne    0x140003151
   140003112:	mov    eax,DWORD PTR [rdi+0x8]
   140003115:	cmp    DWORD PTR [rcx+0x8],eax
   140003118:	jne    0x140003151
   14000311a:	mov    eax,DWORD PTR [rdi+0xc]
   14000311d:	cmp    DWORD PTR [rcx+0xc],eax
   140003120:	jne    0x140003151
   140003122:	mov    r15,QWORD PTR [rbx+0x10]
   140003126:	cmp    r15,0x1
   14000312a:	je     0x140003166
   14000312c:	mov    rcx,r15
   14000312f:	call   QWORD PTR [rip+0x7383]        # 0x14000a4b8
   140003135:	mov    r9,QWORD PTR [rbx+0x8]
   140003139:	mov    r8,r14
   14000313c:	mov    rdx,rdi
   14000313f:	mov    rcx,r12
   140003142:	call   r15
   140003145:	test   eax,eax
   140003147:	je     0x140003162
   140003149:	test   ebp,ebp
   14000314b:	jne    0x140003151
   14000314d:	test   eax,eax
   14000314f:	js     0x140003162
   140003151:	add    rbx,0x18
   140003155:	cmp    QWORD PTR [rbx+0x10],rsi
   140003159:	jne    0x1400030f4
   14000315b:	mov    esi,0x80004002
   140003160:	jmp    0x140003177
   140003162:	mov    esi,eax
   140003164:	jmp    0x140003177
   140003166:	mov    rdi,QWORD PTR [rbx+0x8]
   14000316a:	add    rdi,r12
   14000316d:	jmp    0x1400030d1
   140003172:	mov    esi,0x80070057
   140003177:	mov    rbx,QWORD PTR [rsp+0x40]
   14000317c:	mov    eax,esi
   14000317e:	mov    rsi,QWORD PTR [rsp+0x50]
   140003183:	mov    rbp,QWORD PTR [rsp+0x48]
   140003188:	mov    rdi,QWORD PTR [rsp+0x58]
   14000318d:	add    rsp,0x20
   140003191:	pop    r15
   140003193:	pop    r14
   140003195:	pop    r12
   140003197:	ret    
   140003198:	int3   
   140003199:	int3   
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	test   r8,r8
   1400031a3:	je     0x1400031a9
   1400031a5:	and    QWORD PTR [r8],0x0
   1400031a9:	mov    eax,0x80004001
   1400031ae:	ret    
   1400031af:	int3   
   1400031b0:	int3   
   1400031b1:	int3   
   1400031b2:	int3   
   1400031b3:	int3   
   1400031b4:	int3   
   1400031b5:	int3   
   1400031b6:	int3   
   1400031b7:	int3   
   1400031b8:	int3   
   1400031b9:	int3   
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	mov    eax,0x1
   1400031c5:	ret    
   1400031c6:	int3   
   1400031c7:	int3   
   1400031c8:	int3   
   1400031c9:	int3   
   1400031ca:	int3   
   1400031cb:	int3   
   1400031cc:	int3   
   1400031cd:	int3   
   1400031ce:	int3   
   1400031cf:	int3   
   1400031d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400031d5:	push   rdi
   1400031d6:	sub    rsp,0x20
   1400031da:	mov    ebx,edx
   1400031dc:	mov    rdi,rcx
   1400031df:	call   0x140003394
   1400031e4:	test   bl,0x1
   1400031e7:	je     0x1400031f1
   1400031e9:	mov    rcx,rdi
   1400031ec:	call   0x140007d08
   1400031f1:	mov    rax,rdi
   1400031f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400031f9:	add    rsp,0x20
   1400031fd:	pop    rdi
   1400031fe:	ret    
   1400031ff:	int3   
   140003200:	int3   
   140003201:	int3   
   140003202:	int3   
   140003203:	int3   
   140003204:	int3   
   140003205:	int3   
   140003206:	int3   
   140003207:	int3   
   140003208:	rex push rbx
   14000320a:	sub    rsp,0x20
   14000320e:	mov    rbx,rcx
   140003211:	mov    rcx,QWORD PTR [rcx]
   140003214:	test   rcx,rcx
   140003217:	je     0x140003223
   140003219:	call   QWORD PTR [rip+0x70d1]        # 0x14000a2f0
   14000321f:	and    QWORD PTR [rbx],0x0
   140003223:	mov    rcx,QWORD PTR [rbx+0x8]
   140003227:	test   rcx,rcx
   14000322a:	je     0x140003237
   14000322c:	call   QWORD PTR [rip+0x70be]        # 0x14000a2f0
   140003232:	and    QWORD PTR [rbx+0x8],0x0
   140003237:	and    DWORD PTR [rbx+0x10],0x0
   14000323b:	add    rsp,0x20
   14000323f:	pop    rbx
   140003240:	ret    
   140003241:	int3   
   140003242:	int3   
   140003243:	int3   
   140003244:	int3   
   140003245:	int3   
   140003246:	int3   
   140003247:	int3   
   140003248:	mov    QWORD PTR [rsp+0x8],rcx
   14000324d:	push   rbx
   14000324e:	sub    rsp,0x30
   140003252:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000325b:	mov    rbx,rcx
   14000325e:	call   0x14000329c
   140003263:	nop
   140003264:	mov    rcx,QWORD PTR [rbx]
   140003267:	test   rcx,rcx
   14000326a:	je     0x140003276
   14000326c:	call   QWORD PTR [rip+0x707e]        # 0x14000a2f0
   140003272:	and    QWORD PTR [rbx],0x0
   140003276:	mov    rcx,QWORD PTR [rbx+0x8]
   14000327a:	test   rcx,rcx
   14000327d:	je     0x14000328a
   14000327f:	call   QWORD PTR [rip+0x706b]        # 0x14000a2f0
   140003285:	and    QWORD PTR [rbx+0x8],0x0
   14000328a:	and    DWORD PTR [rbx+0x10],0x0
   14000328e:	add    rsp,0x30
   140003292:	pop    rbx
   140003293:	ret    
   140003294:	int3   
   140003295:	int3   
   140003296:	int3   
   140003297:	int3   
   140003298:	int3   
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	mov    QWORD PTR [rsp+0x8],rbx
   1400032a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400032a6:	push   rdi
   1400032a7:	sub    rsp,0x20
   1400032ab:	xor    esi,esi
   1400032ad:	mov    rbx,rcx
   1400032b0:	cmp    DWORD PTR [rcx+0x10],esi
   1400032b3:	jle    0x1400032ea
   1400032b5:	xor    edi,edi
   1400032b7:	test   rdi,rdi
   1400032ba:	js     0x140003331
   1400032bc:	cmp    esi,DWORD PTR [rbx+0x10]
   1400032bf:	jge    0x140003331
   1400032c1:	mov    rcx,QWORD PTR [rbx]
   1400032c4:	mov    rcx,QWORD PTR [rdi+rcx*1]
   1400032c8:	call   0x140007d08
   1400032cd:	cmp    esi,DWORD PTR [rbx+0x10]
   1400032d0:	jge    0x140003326
   1400032d2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400032d6:	mov    rcx,QWORD PTR [rcx+rdi*1]
   1400032da:	call   0x140007d08
   1400032df:	inc    esi
   1400032e1:	add    rdi,0x8
   1400032e5:	cmp    esi,DWORD PTR [rbx+0x10]
   1400032e8:	jl     0x1400032b7
   1400032ea:	mov    rcx,QWORD PTR [rbx]
   1400032ed:	test   rcx,rcx
   1400032f0:	je     0x1400032fc
   1400032f2:	call   QWORD PTR [rip+0x6ff8]        # 0x14000a2f0
   1400032f8:	and    QWORD PTR [rbx],0x0
   1400032fc:	mov    rcx,QWORD PTR [rbx+0x8]
   140003300:	test   rcx,rcx
   140003303:	je     0x140003310
   140003305:	call   QWORD PTR [rip+0x6fe5]        # 0x14000a2f0
   14000330b:	and    QWORD PTR [rbx+0x8],0x0
   140003310:	and    DWORD PTR [rbx+0x10],0x0
   140003314:	mov    rbx,QWORD PTR [rsp+0x30]
   140003319:	xor    eax,eax
   14000331b:	mov    rsi,QWORD PTR [rsp+0x38]
   140003320:	add    rsp,0x20
   140003324:	pop    rdi
   140003325:	ret    
   140003326:	mov    ecx,0xc000008c
   14000332b:	call   0x140003844
   140003330:	int3   
   140003331:	mov    ecx,0xc000008c
   140003336:	call   0x140003844
   14000333b:	int3   
   14000333c:	int3   
   14000333d:	int3   
   14000333e:	int3   
   14000333f:	int3   
   140003340:	int3   
   140003341:	int3   
   140003342:	int3   
   140003343:	int3   
   140003344:	int3   
   140003345:	int3   
   140003346:	int3   
   140003347:	int3   
   140003348:	int3   
   140003349:	int3   
   14000334a:	int3   
   14000334b:	int3   
   14000334c:	int3   
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	mov    QWORD PTR [rsp+0x8],rbx
   140003355:	push   rdi
   140003356:	sub    rsp,0x20
   14000335a:	lea    rdi,[rcx+0x20]
   14000335e:	mov    rbx,rcx
   140003361:	mov    rcx,rdi
   140003364:	call   QWORD PTR [rip+0x6d2e]        # 0x14000a098
   14000336a:	lea    rcx,[rbx+0x8]
   14000336e:	call   0x14000329c
   140003373:	mov    rcx,rdi
   140003376:	mov    ebx,eax
   140003378:	call   QWORD PTR [rip+0x6d22]        # 0x14000a0a0
   14000337e:	mov    eax,ebx
   140003380:	mov    rbx,QWORD PTR [rsp+0x30]
   140003385:	add    rsp,0x20
   140003389:	pop    rdi
   14000338a:	ret    
   14000338b:	int3   
   14000338c:	int3   
   14000338d:	int3   
   14000338e:	int3   
   14000338f:	int3   
   140003390:	int3   
   140003391:	int3   
   140003392:	int3   
   140003393:	int3   
   140003394:	mov    QWORD PTR [rsp+0x8],rcx
   140003399:	push   rdi
   14000339a:	sub    rsp,0x30
   14000339e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400033a7:	mov    QWORD PTR [rsp+0x48],rbx
   1400033ac:	mov    rbx,rcx
   1400033af:	lea    rax,[rip+0x757a]        # 0x14000a930
   1400033b6:	mov    QWORD PTR [rcx],rax
   1400033b9:	lea    rdi,[rcx+0x20]
   1400033bd:	mov    rcx,rdi
   1400033c0:	call   QWORD PTR [rip+0x6cd2]        # 0x14000a098
   1400033c6:	add    rbx,0x8
   1400033ca:	mov    rcx,rbx
   1400033cd:	call   0x14000329c
   1400033d2:	mov    rcx,rdi
   1400033d5:	call   QWORD PTR [rip+0x6cc5]        # 0x14000a0a0
   1400033db:	nop
   1400033dc:	cmp    BYTE PTR [rdi+0x28],0x0
   1400033e0:	je     0x1400033f0
   1400033e2:	mov    BYTE PTR [rdi+0x28],0x0
   1400033e6:	mov    rcx,rdi
   1400033e9:	call   QWORD PTR [rip+0x6ca1]        # 0x14000a090
   1400033ef:	nop
   1400033f0:	mov    QWORD PTR [rsp+0x40],rbx
   1400033f5:	mov    rcx,rbx
   1400033f8:	call   0x14000329c
   1400033fd:	nop
   1400033fe:	mov    rcx,QWORD PTR [rbx]
   140003401:	test   rcx,rcx
   140003404:	je     0x140003410
   140003406:	call   QWORD PTR [rip+0x6ee4]        # 0x14000a2f0
   14000340c:	and    QWORD PTR [rbx],0x0
   140003410:	mov    rcx,QWORD PTR [rbx+0x8]
   140003414:	test   rcx,rcx
   140003417:	je     0x140003424
   140003419:	call   QWORD PTR [rip+0x6ed1]        # 0x14000a2f0
   14000341f:	and    QWORD PTR [rbx+0x8],0x0
   140003424:	and    DWORD PTR [rbx+0x10],0x0
   140003428:	mov    rbx,QWORD PTR [rsp+0x48]
   14000342d:	add    rsp,0x30
   140003431:	pop    rdi
   140003432:	ret    
   140003433:	int3   
   140003434:	int3   
   140003435:	int3   
   140003436:	int3   
   140003437:	int3   
   140003438:	int3   
   140003439:	int3   
   14000343a:	int3   
   14000343b:	int3   
   14000343c:	sub    rsp,0x38
   140003440:	call   QWORD PTR [rip+0x6d3a]        # 0x14000a180
   140003446:	xor    eax,eax
   140003448:	mov    DWORD PTR [rsp+0x20],eax
   14000344c:	jmp    0x140003457
   14000344e:	mov    eax,0x8007000e
   140003453:	mov    DWORD PTR [rsp+0x20],eax
   140003457:	add    rsp,0x38
   14000345b:	ret    
   14000345c:	int3   
   14000345d:	int3   
   14000345e:	int3   
   14000345f:	int3   
   140003460:	int3   
   140003461:	int3   
   140003462:	int3   
   140003463:	int3   
   140003464:	rex push rbx
   140003466:	sub    rsp,0x20
   14000346a:	mov    rbx,rcx
   14000346d:	mov    rcx,QWORD PTR [rcx]
   140003470:	call   0x140007d08
   140003475:	and    QWORD PTR [rbx],0x0
   140003479:	add    rsp,0x20
   14000347d:	pop    rbx
   14000347e:	ret    
   14000347f:	int3   
   140003480:	int3   
   140003481:	int3   
   140003482:	int3   
   140003483:	int3   
   140003484:	int3   
   140003485:	int3   
   140003486:	int3   
   140003487:	int3   
   140003488:	mov    rax,rsp
   14000348b:	mov    QWORD PTR [rax+0x18],r8
   14000348f:	mov    QWORD PTR [rax+0x10],rdx
   140003493:	mov    QWORD PTR [rax+0x8],rcx
   140003497:	push   rbx
   140003498:	push   rsi
   140003499:	push   rdi
   14000349a:	push   r12
   14000349c:	push   r13
   14000349e:	push   r14
   1400034a0:	push   r15
   1400034a2:	sub    rsp,0x60
   1400034a6:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   1400034ae:	mov    r13,r8
   1400034b1:	mov    r12,rdx
   1400034b4:	mov    r15,rcx
   1400034b7:	xor    esi,esi
   1400034b9:	test   rdx,rdx
   1400034bc:	je     0x140003708
   1400034c2:	test   r8,r8
   1400034c5:	je     0x140003708
   1400034cb:	mov    r14d,esi
   1400034ce:	or     rbx,0xffffffffffffffff
   1400034d2:	mov    rax,rbx
   1400034d5:	inc    rax
   1400034d8:	cmp    WORD PTR [rdx+rax*2],si
   1400034dc:	jne    0x1400034d5
   1400034de:	lea    rcx,[rax*2+0x2]
   1400034e6:	mov    QWORD PTR [rsp+0x48],rcx
   1400034eb:	mov    QWORD PTR [rsp+0x28],rsi
   1400034f0:	mov    eax,0x2
   1400034f5:	mul    rcx
   1400034f8:	cmovo  rax,rbx
   1400034fc:	mov    rcx,rax
   1400034ff:	call   0x140007d8c
   140003504:	mov    QWORD PTR [rsp+0x20],rax
   140003509:	mov    QWORD PTR [rsp+0x28],rax
   14000350e:	jmp    0x14000353b
   140003510:	xor    esi,esi
   140003512:	or     rbx,0xffffffffffffffff
   140003516:	mov    r15,QWORD PTR [rsp+0xa0]
   14000351e:	mov    r13,QWORD PTR [rsp+0xb0]
   140003526:	mov    r12,QWORD PTR [rsp+0xa8]
   14000352e:	mov    r14d,esi
   140003531:	mov    rax,QWORD PTR [rsp+0x28]
   140003536:	mov    QWORD PTR [rsp+0x20],rax
   14000353b:	mov    rdi,rax
   14000353e:	mov    QWORD PTR [rsp+0x40],rax
   140003543:	mov    rax,rbx
   140003546:	inc    rax
   140003549:	cmp    WORD PTR [r13+rax*2+0x0],si
   14000354f:	jne    0x140003546
   140003551:	inc    eax
   140003553:	movsxd rcx,eax
   140003556:	add    rcx,rcx
   140003559:	mov    QWORD PTR [rsp+0x38],rcx
   14000355e:	mov    QWORD PTR [rsp+0x30],rsi
   140003563:	mov    eax,0x2
   140003568:	mul    rcx
   14000356b:	cmovo  rax,rbx
   14000356f:	mov    rcx,rax
   140003572:	call   0x140007d8c
   140003577:	mov    rbx,rax
   14000357a:	mov    QWORD PTR [rsp+0x30],rax
   14000357f:	mov    rax,QWORD PTR [rsp+0x20]
   140003584:	jmp    0x1400035b7
   140003586:	xor    esi,esi
   140003588:	mov    r15,QWORD PTR [rsp+0xa0]
   140003590:	mov    r13,QWORD PTR [rsp+0xb0]
   140003598:	mov    r12,QWORD PTR [rsp+0xa8]
   1400035a0:	mov    r14d,esi
   1400035a3:	mov    rax,QWORD PTR [rsp+0x28]
   1400035a8:	mov    QWORD PTR [rsp+0x20],rax
   1400035ad:	mov    rdi,QWORD PTR [rsp+0x40]
   1400035b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035b7:	mov    QWORD PTR [rsp+0xa8],rbx
   1400035bf:	test   rax,rax
   1400035c2:	je     0x1400036e6
   1400035c8:	test   rbx,rbx
   1400035cb:	je     0x1400036e6
   1400035d1:	mov    rdx,QWORD PTR [rsp+0x48]
   1400035d6:	mov    r9,rdx
   1400035d9:	mov    r8,r12
   1400035dc:	mov    rcx,rax
   1400035df:	call   QWORD PTR [rip+0x6d13]        # 0x14000a2f8
   1400035e5:	test   eax,eax
   1400035e7:	je     0x14000361e
   1400035e9:	cmp    eax,0xc
   1400035ec:	je     0x140003613
   1400035ee:	cmp    eax,0x16
   1400035f1:	je     0x140003608
   1400035f3:	cmp    eax,0x22
   1400035f6:	je     0x140003608
   1400035f8:	cmp    eax,0x50
   1400035fb:	je     0x14000361e
   1400035fd:	mov    ecx,0x80004005
   140003602:	call   0x1400042a0
   140003607:	int3   
   140003608:	mov    ecx,0x80070057
   14000360d:	call   0x1400042a0
   140003612:	int3   
   140003613:	mov    ecx,0x8007000e
   140003618:	call   0x1400042a0
   14000361d:	int3   
   14000361e:	mov    r9,QWORD PTR [rsp+0x38]
   140003623:	mov    r8,r13
   140003626:	mov    rdx,r9
   140003629:	mov    rcx,rbx
   14000362c:	call   QWORD PTR [rip+0x6cc6]        # 0x14000a2f8
   140003632:	test   eax,eax
   140003634:	je     0x14000366b
   140003636:	cmp    eax,0xc
   140003639:	je     0x140003660
   14000363b:	cmp    eax,0x16
   14000363e:	je     0x140003655
   140003640:	cmp    eax,0x22
   140003643:	je     0x140003655
   140003645:	cmp    eax,0x50
   140003648:	je     0x14000366b
   14000364a:	mov    ecx,0x80004005
   14000364f:	call   0x1400042a0
   140003654:	int3   
   140003655:	mov    ecx,0x80070057
   14000365a:	call   0x1400042a0
   14000365f:	int3   
   140003660:	mov    ecx,0x8007000e
   140003665:	call   0x1400042a0
   14000366a:	int3   
   14000366b:	mov    eax,DWORD PTR [r15+0x10]
   14000366f:	inc    eax
   140003671:	movsxd rdx,eax
   140003674:	mov    r12d,0x8
   14000367a:	mov    r8d,r12d
   14000367d:	mov    rcx,QWORD PTR [r15]
   140003680:	call   QWORD PTR [rip+0xa97a]        # 0x14000e000
   140003686:	test   rax,rax
   140003689:	je     0x1400036e6
   14000368b:	mov    QWORD PTR [r15],rax
   14000368e:	mov    eax,DWORD PTR [r15+0x10]
   140003692:	inc    eax
   140003694:	movsxd rdx,eax
   140003697:	mov    r8d,r12d
   14000369a:	mov    rcx,QWORD PTR [r15+0x8]
   14000369e:	call   QWORD PTR [rip+0xa95c]        # 0x14000e000
   1400036a4:	test   rax,rax
   1400036a7:	je     0x1400036e6
   1400036a9:	mov    QWORD PTR [r15+0x8],rax
   1400036ad:	movsxd rdx,DWORD PTR [r15+0x10]
   1400036b1:	mov    rax,QWORD PTR [r15]
   1400036b4:	lea    rcx,[rax+rdx*8]
   1400036b8:	test   rcx,rcx
   1400036bb:	je     0x1400036c5
   1400036bd:	mov    rax,QWORD PTR [rsp+0x20]
   1400036c2:	mov    QWORD PTR [rcx],rax
   1400036c5:	mov    rax,QWORD PTR [r15+0x8]
   1400036c9:	lea    rcx,[rax+rdx*8]
   1400036cd:	test   rcx,rcx
   1400036d0:	je     0x1400036d5
   1400036d2:	mov    QWORD PTR [rcx],rbx
   1400036d5:	inc    DWORD PTR [r15+0x10]
   1400036d9:	mov    rdi,rsi
   1400036dc:	mov    QWORD PTR [rsp+0x40],rsi
   1400036e1:	mov    rbx,rsi
   1400036e4:	jmp    0x1400036ec
   1400036e6:	mov    r14d,0x8007000e
   1400036ec:	test   r14d,r14d
   1400036ef:	setns  sil
   1400036f3:	mov    rcx,rbx
   1400036f6:	call   0x140007d08
   1400036fb:	nop
   1400036fc:	mov    rcx,rdi
   1400036ff:	call   0x140007d08
   140003704:	mov    eax,esi
   140003706:	jmp    0x14000370a
   140003708:	xor    eax,eax
   14000370a:	add    rsp,0x60
   14000370e:	pop    r15
   140003710:	pop    r14
   140003712:	pop    r13
   140003714:	pop    r12
   140003716:	pop    rdi
   140003717:	pop    rsi
   140003718:	pop    rbx
   140003719:	ret    
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	mov    rax,rsp
   140003723:	push   rdi
   140003724:	sub    rsp,0x30
   140003728:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140003730:	mov    QWORD PTR [rax+0x8],rbx
   140003734:	mov    QWORD PTR [rax+0x18],rbp
   140003738:	mov    QWORD PTR [rax+0x20],rsi
   14000373c:	mov    rbx,r8
   14000373f:	mov    rsi,rdx
   140003742:	mov    rbp,rcx
   140003745:	test   rdx,rdx
   140003748:	je     0x140003787
   14000374a:	test   rbx,rbx
   14000374d:	je     0x140003787
   14000374f:	add    rcx,0x20
   140003753:	call   QWORD PTR [rip+0x693f]        # 0x14000a098
   140003759:	and    QWORD PTR [rsp+0x48],0x0
   14000375f:	lea    rcx,[rbp+0x8]
   140003763:	mov    r8,rbx
   140003766:	mov    rdx,rsi
   140003769:	call   0x140003488
   14000376e:	mov    ebx,eax
   140003770:	lea    rcx,[rbp+0x20]
   140003774:	call   QWORD PTR [rip+0x6926]        # 0x14000a0a0
   14000377a:	neg    ebx
   14000377c:	sbb    eax,eax
   14000377e:	not    eax
   140003780:	and    eax,0x8007000e
   140003785:	jmp    0x14000378c
   140003787:	mov    eax,0x80070057
   14000378c:	mov    rbx,QWORD PTR [rsp+0x40]
   140003791:	mov    rbp,QWORD PTR [rsp+0x50]
   140003796:	mov    rsi,QWORD PTR [rsp+0x58]
   14000379b:	add    rsp,0x30
   14000379f:	pop    rdi
   1400037a0:	ret    
   1400037a1:	int3   
   1400037a2:	int3   
   1400037a3:	int3   
   1400037a4:	int3   
   1400037a5:	int3   
   1400037a6:	int3   
   1400037a7:	int3   
   1400037a8:	mov    rcx,QWORD PTR [rcx]
   1400037ab:	rex.W jmp QWORD PTR [rip+0x6b3e]        # 0x14000a2f0
   1400037b2:	int3   
   1400037b3:	int3   
   1400037b4:	int3   
   1400037b5:	int3   
   1400037b6:	int3   
   1400037b7:	int3   
   1400037b8:	sub    rsp,0x28
   1400037bc:	lea    rax,[rcx+0x8]
   1400037c0:	cmp    QWORD PTR [rcx],rax
   1400037c3:	je     0x1400037ca
   1400037c5:	call   0x1400037a8
   1400037ca:	add    rsp,0x28
   1400037ce:	ret    
   1400037cf:	int3   
   1400037d0:	int3   
   1400037d1:	int3   
   1400037d2:	int3   
   1400037d3:	int3   
   1400037d4:	int3   
   1400037d5:	int3   
   1400037d6:	int3   
   1400037d7:	int3   
   1400037d8:	rex push rbx
   1400037da:	sub    rsp,0x20
   1400037de:	mov    rbx,rcx
   1400037e1:	mov    rcx,rdx
   1400037e4:	call   QWORD PTR [rip+0x6b5e]        # 0x14000a348
   1400037ea:	test   rax,rax
   1400037ed:	je     0x1400037f8
   1400037ef:	mov    QWORD PTR [rbx],rax
   1400037f2:	add    rsp,0x20
   1400037f6:	pop    rbx
   1400037f7:	ret    
   1400037f8:	mov    ecx,0x8007000e
   1400037fd:	call   0x1400042a0
   140003802:	int3   
   140003803:	int3   
   140003804:	int3   
   140003805:	int3   
   140003806:	int3   
   140003807:	int3   
   140003808:	int3   
   140003809:	int3   
   14000380a:	int3   
   14000380b:	int3   
   14000380c:	sub    rsp,0x28
   140003810:	call   QWORD PTR [rip+0x6872]        # 0x14000a088
   140003816:	mov    ecx,eax
   140003818:	movzx  eax,ax
   14000381b:	or     eax,0x80070000
   140003820:	test   ecx,ecx
   140003822:	cmovle eax,ecx
   140003825:	add    rsp,0x28
   140003829:	ret    
   14000382a:	int3   
   14000382b:	int3   
   14000382c:	int3   
   14000382d:	int3   
   14000382e:	int3   
   14000382f:	int3   
   140003830:	mov    rcx,QWORD PTR [rcx+0x8]
   140003834:	rex.W jmp QWORD PTR [rip+0x6a0d]        # 0x14000a248
   14000383b:	int3   
   14000383c:	int3   
   14000383d:	int3   
   14000383e:	int3   
   14000383f:	int3   
   140003840:	int3   
   140003841:	int3   
   140003842:	int3   
   140003843:	int3   
   140003844:	xor    r9d,r9d
   140003847:	xor    r8d,r8d
   14000384a:	lea    edx,[r9+0x1]
   14000384e:	rex.W jmp QWORD PTR [rip+0x68e3]        # 0x14000a138
   140003855:	int3   
   140003856:	int3   
   140003857:	int3   
   140003858:	int3   
   140003859:	int3   
   14000385a:	int3   
   14000385b:	int3   
   14000385c:	mov    rax,rsp
   14000385f:	mov    QWORD PTR [rax+0x8],rbx
   140003863:	mov    QWORD PTR [rax+0x10],rbp
   140003867:	mov    QWORD PTR [rax+0x18],rsi
   14000386b:	mov    QWORD PTR [rax+0x20],rdi
   14000386f:	push   r14
   140003871:	sub    rsp,0x20
   140003875:	mov    rbx,rcx
   140003878:	mov    esi,r8d
   14000387b:	lea    ecx,[r8+0x1]
   14000387f:	mov    rbp,rdx
   140003882:	add    ecx,DWORD PTR [rbx]
   140003884:	cmp    ecx,DWORD PTR [rbx]
   140003886:	jle    0x140003939
   14000388c:	cmp    ecx,r8d
   14000388f:	jle    0x140003939
   140003895:	mov    edi,DWORD PTR [rbx+0x4]
   140003898:	xor    r14d,r14d
   14000389b:	cmp    ecx,edi
   14000389d:	jl     0x1400038d8
   14000389f:	cmp    edi,0x3fffffff
   1400038a5:	jg     0x140003939
   1400038ab:	add    edi,edi
   1400038ad:	cmp    ecx,edi
   1400038af:	jge    0x14000389f
   1400038b1:	mov    eax,edi
   1400038b3:	mov    ecx,0xffffffff
   1400038b8:	add    rax,rax
   1400038bb:	cmp    rax,rcx
   1400038be:	ja     0x140003939
   1400038c0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400038c4:	mov    edx,eax
   1400038c6:	call   QWORD PTR [rip+0x698c]        # 0x14000a258
   1400038cc:	test   rax,rax
   1400038cf:	je     0x140003939
   1400038d1:	mov    QWORD PTR [rbx+0x8],rax
   1400038d5:	mov    DWORD PTR [rbx+0x4],edi
   1400038d8:	cmp    DWORD PTR [rbx],r14d
   1400038db:	jl     0x140003939
   1400038dd:	mov    ecx,DWORD PTR [rbx+0x4]
   1400038e0:	cmp    DWORD PTR [rbx],ecx
   1400038e2:	jge    0x140003939
   1400038e4:	mov    eax,ecx
   1400038e6:	sub    eax,DWORD PTR [rbx]
   1400038e8:	cmp    eax,ecx
   1400038ea:	jg     0x140003939
   1400038ec:	movsxd rcx,DWORD PTR [rbx]
   1400038ef:	mov    r8,rbp
   1400038f2:	movsxd rdx,eax
   1400038f5:	mov    rax,QWORD PTR [rbx+0x8]
   1400038f9:	add    rdx,rdx
   1400038fc:	lea    rcx,[rax+rcx*2]
   140003900:	lea    eax,[rsi+rsi*1]
   140003903:	movsxd r9,eax
   140003906:	call   QWORD PTR [rip+0x69ec]        # 0x14000a2f8
   14000390c:	test   eax,eax
   14000390e:	je     0x140003924
   140003910:	cmp    eax,0xc
   140003913:	je     0x14000396c
   140003915:	cmp    eax,0x16
   140003918:	je     0x140003961
   14000391a:	cmp    eax,0x22
   14000391d:	je     0x140003961
   14000391f:	cmp    eax,0x50
   140003922:	jne    0x140003956
   140003924:	add    DWORD PTR [rbx],esi
   140003926:	mov    rax,QWORD PTR [rbx+0x8]
   14000392a:	movsxd rcx,DWORD PTR [rbx]
   14000392d:	mov    WORD PTR [rax+rcx*2],r14w
   140003932:	mov    eax,0x1
   140003937:	jmp    0x14000393b
   140003939:	xor    eax,eax
   14000393b:	mov    rbx,QWORD PTR [rsp+0x30]
   140003940:	mov    rbp,QWORD PTR [rsp+0x38]
   140003945:	mov    rsi,QWORD PTR [rsp+0x40]
   14000394a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000394f:	add    rsp,0x20
   140003953:	pop    r14
   140003955:	ret    
   140003956:	mov    ecx,0x80004005
   14000395b:	call   0x1400042a0
   140003960:	int3   
   140003961:	mov    ecx,0x80070057
   140003966:	call   0x1400042a0
   14000396b:	int3   
   14000396c:	mov    ecx,0x8007000e
   140003971:	call   0x1400042a0
   140003976:	int3   
   140003977:	int3   
   140003978:	int3   
   140003979:	int3   
   14000397a:	int3   
   14000397b:	int3   
   14000397c:	int3   
   14000397d:	int3   
   14000397e:	int3   
   14000397f:	int3   
   140003980:	mov    rax,rsp
   140003983:	push   rbp
   140003984:	push   rsi
   140003985:	push   rdi
   140003986:	push   r12
   140003988:	push   r13
   14000398a:	push   r14
   14000398c:	push   r15
   14000398e:	lea    rbp,[rax-0x5f]
   140003992:	sub    rsp,0xa0
   140003999:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   1400039a1:	mov    QWORD PTR [rax+0x10],rbx
   1400039a5:	mov    rax,QWORD PTR [rip+0xa664]        # 0x14000e010
   1400039ac:	xor    rax,rsp
   1400039af:	mov    QWORD PTR [rbp+0x17],rax
   1400039b3:	mov    QWORD PTR [rbp-0x49],r8
   1400039b7:	mov    rdi,rdx
   1400039ba:	mov    rsi,rcx
   1400039bd:	xor    ebx,ebx
   1400039bf:	test   r8,r8
   1400039c2:	jne    0x1400039ce
   1400039c4:	mov    eax,0x80004003
   1400039c9:	jmp    0x140003c20
   1400039ce:	mov    QWORD PTR [r8],rbx
   1400039d1:	or     rax,0xffffffffffffffff
   1400039d5:	inc    rax
   1400039d8:	cmp    WORD PTR [rdx+rax*2],bx
   1400039dc:	jne    0x1400039d5
   1400039de:	add    eax,eax
   1400039e0:	mov    ecx,0x3e8
   1400039e5:	cmp    eax,0x64
   1400039e8:	cmovl  eax,ecx
   1400039eb:	mov    DWORD PTR [rbp-0x59],ebx
   1400039ee:	mov    DWORD PTR [rbp-0x55],eax
   1400039f1:	mov    ecx,eax
   1400039f3:	add    rcx,rcx
   1400039f6:	mov    eax,0xffffffff
   1400039fb:	cmp    rcx,rax
   1400039fe:	jbe    0x140003a09
   140003a00:	mov    rax,rbx
   140003a03:	mov    QWORD PTR [rbp-0x51],rbx
   140003a07:	jmp    0x140003a1d
   140003a09:	mov    ecx,ecx
   140003a0b:	call   QWORD PTR [rip+0x6857]        # 0x14000a268
   140003a11:	mov    QWORD PTR [rbp-0x51],rax
   140003a15:	test   rax,rax
   140003a18:	je     0x140003a1d
   140003a1a:	mov    WORD PTR [rax],bx
   140003a1d:	test   rax,rax
   140003a20:	jne    0x140003a2c
   140003a22:	mov    ebx,0x8007000e
   140003a27:	jmp    0x140003c14
   140003a2c:	mov    QWORD PTR [rsi],rdi
   140003a2f:	cmp    WORD PTR [rdi],bx
   140003a32:	je     0x140003c05
   140003a38:	mov    rdx,QWORD PTR [rsi]
   140003a3b:	cmp    WORD PTR [rdx],0x25
   140003a3f:	jne    0x140003ba0
   140003a45:	mov    rcx,rdx
   140003a48:	call   QWORD PTR [rip+0x679a]        # 0x14000a1e8
   140003a4e:	mov    rdi,rax
   140003a51:	mov    QWORD PTR [rsi],rax
   140003a54:	cmp    WORD PTR [rax],0x25
   140003a58:	jne    0x140003a62
   140003a5a:	mov    rdx,rax
   140003a5d:	jmp    0x140003ba0
   140003a62:	test   rax,rax
   140003a65:	je     0x140003bfe
   140003a6b:	movzx  eax,WORD PTR [rax]
   140003a6e:	test   ax,ax
   140003a71:	je     0x140003bfe
   140003a77:	cmp    ax,0x25
   140003a7b:	je     0x140003a8b
   140003a7d:	mov    rcx,rdi
   140003a80:	call   QWORD PTR [rip+0x6762]        # 0x14000a1e8
   140003a86:	mov    rdi,rax
   140003a89:	jmp    0x140003a6b
   140003a8b:	test   rdi,rdi
   140003a8e:	je     0x140003bfe
   140003a94:	mov    rax,rdi
   140003a97:	sub    rax,QWORD PTR [rsi]
   140003a9a:	sar    rax,1
   140003a9d:	cmp    rax,0x1f
   140003aa1:	jg     0x140003bf7
   140003aa7:	movsxd r9,eax
   140003aaa:	mov    r8,QWORD PTR [rsi]
   140003aad:	mov    edx,0x20
   140003ab2:	lea    rcx,[rbp-0x29]
   140003ab6:	call   QWORD PTR [rip+0x6934]        # 0x14000a3f0
   140003abc:	test   eax,eax
   140003abe:	je     0x140003ae4
   140003ac0:	cmp    eax,0xc
   140003ac3:	je     0x140003be1
   140003ac9:	cmp    eax,0x16
   140003acc:	je     0x140003bd6
   140003ad2:	cmp    eax,0x22
   140003ad5:	je     0x140003bd6
   140003adb:	cmp    eax,0x50
   140003ade:	jne    0x140003bcb
   140003ae4:	mov    r13,QWORD PTR [rsi+0x8]
   140003ae8:	lea    rcx,[r13+0x20]
   140003aec:	call   QWORD PTR [rip+0x65a6]        # 0x14000a098
   140003af2:	mov    r15d,ebx
   140003af5:	mov    r14,rbx
   140003af8:	cmp    DWORD PTR [r13+0x18],ebx
   140003afc:	jle    0x140003b20
   140003afe:	mov    rax,QWORD PTR [r13+0x8]
   140003b02:	lea    rdx,[rbp-0x29]
   140003b06:	mov    rcx,QWORD PTR [rax+r14*8]
   140003b0a:	call   QWORD PTR [rip+0x65f8]        # 0x14000a108
   140003b10:	test   eax,eax
   140003b12:	je     0x140003b28
   140003b14:	inc    r15d
   140003b17:	inc    r14
   140003b1a:	cmp    r15d,DWORD PTR [r13+0x18]
   140003b1e:	jl     0x140003afe
   140003b20:	or     r15d,0xffffffff
   140003b24:	or     r14,0xffffffffffffffff
   140003b28:	cmp    r14,0xffffffffffffffff
   140003b2c:	jne    0x140003b33
   140003b2e:	mov    r14,rbx
   140003b31:	jmp    0x140003b4e
   140003b33:	test   r14,r14
   140003b36:	js     0x140003bec
   140003b3c:	cmp    r15d,DWORD PTR [r13+0x18]
   140003b40:	jge    0x140003bec
   140003b46:	mov    rax,QWORD PTR [r13+0x10]
   140003b4a:	mov    r14,QWORD PTR [rax+r14*8]
   140003b4e:	lea    rcx,[r13+0x20]
   140003b52:	call   QWORD PTR [rip+0x6548]        # 0x14000a0a0
   140003b58:	test   r14,r14
   140003b5b:	je     0x140003bfe
   140003b61:	mov    QWORD PTR [rbp-0x41],rbx
   140003b65:	or     r8,0xffffffffffffffff
   140003b69:	inc    r8
   140003b6c:	cmp    WORD PTR [r14+r8*2],bx
   140003b71:	jne    0x140003b69
   140003b73:	mov    rdx,r14
   140003b76:	lea    rcx,[rbp-0x59]
   140003b7a:	call   0x14000385c
   140003b7f:	nop
   140003b80:	test   eax,eax
   140003b82:	je     0x140003a22
   140003b88:	cmp    QWORD PTR [rsi],rdi
   140003b8b:	je     0x140003bb7
   140003b8d:	mov    rcx,QWORD PTR [rsi]
   140003b90:	call   QWORD PTR [rip+0x6652]        # 0x14000a1e8
   140003b96:	mov    QWORD PTR [rsi],rax
   140003b99:	cmp    rax,rdi
   140003b9c:	jne    0x140003b8d
   140003b9e:	jmp    0x140003bb7
   140003ba0:	mov    r8d,0x1
   140003ba6:	lea    rcx,[rbp-0x59]
   140003baa:	call   0x14000385c
   140003baf:	test   eax,eax
   140003bb1:	je     0x140003a22
   140003bb7:	mov    rcx,QWORD PTR [rsi]
   140003bba:	call   QWORD PTR [rip+0x6628]        # 0x14000a1e8
   140003bc0:	mov    QWORD PTR [rsi],rax
   140003bc3:	cmp    WORD PTR [rax],bx
   140003bc6:	jmp    0x140003a32
   140003bcb:	mov    ecx,0x80004005
   140003bd0:	call   0x1400042a0
   140003bd5:	int3   
   140003bd6:	mov    ecx,0x80070057
   140003bdb:	call   0x1400042a0
   140003be0:	int3   
   140003be1:	mov    ecx,0x8007000e
   140003be6:	call   0x1400042a0
   140003beb:	int3   
   140003bec:	mov    ecx,0xc000008c
   140003bf1:	call   0x140003844
   140003bf6:	int3   
   140003bf7:	mov    ebx,0x80004005
   140003bfc:	jmp    0x140003c14
   140003bfe:	mov    ebx,0x80020009
   140003c03:	jmp    0x140003c14
   140003c05:	mov    rcx,QWORD PTR [rbp-0x51]
   140003c09:	mov    QWORD PTR [rbp-0x51],rbx
   140003c0d:	mov    rax,QWORD PTR [rbp-0x49]
   140003c11:	mov    QWORD PTR [rax],rcx
   140003c14:	mov    rcx,QWORD PTR [rbp-0x51]
   140003c18:	call   QWORD PTR [rip+0x662a]        # 0x14000a248
   140003c1e:	mov    eax,ebx
   140003c20:	mov    rcx,QWORD PTR [rbp+0x17]
   140003c24:	xor    rcx,rsp
   140003c27:	call   0x1400081f0
   140003c2c:	mov    rbx,QWORD PTR [rsp+0xe8]
   140003c34:	add    rsp,0xa0
   140003c3b:	pop    r15
   140003c3d:	pop    r14
   140003c3f:	pop    r13
   140003c41:	pop    r12
   140003c43:	pop    rdi
   140003c44:	pop    rsi
   140003c45:	pop    rbp
   140003c46:	ret    
   140003c47:	int3   
   140003c48:	int3   
   140003c49:	int3   
   140003c4a:	int3   
   140003c4b:	int3   
   140003c4c:	int3   
   140003c4d:	int3   
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	mov    rax,rsp
   140003c53:	mov    QWORD PTR [rax+0x8],rbx
   140003c57:	mov    QWORD PTR [rax+0x10],rbp
   140003c5b:	mov    QWORD PTR [rax+0x18],rsi
   140003c5f:	mov    QWORD PTR [rax+0x20],rdi
   140003c63:	push   r15
   140003c65:	sub    rsp,0x20
   140003c69:	mov    eax,DWORD PTR [rip+0xaaf1]        # 0x14000e760
   140003c6f:	mov    rsi,rdx
   140003c72:	mov    rbp,rcx
   140003c75:	test   al,0x1
   140003c77:	jne    0x140003cea
   140003c79:	or     eax,0x1
   140003c7c:	mov    DWORD PTR [rip+0xaade],eax        # 0x14000e760
   140003c82:	lea    rax,[rip+0x6a2b]        # 0x14000a6b4
   140003c89:	mov    QWORD PTR [rip+0xaae0],rax        # 0x14000e770
   140003c90:	mov    eax,0x8
   140003c95:	mov    WORD PTR [rip+0xaadc],ax        # 0x14000e778
   140003c9c:	lea    rax,[rip+0x6a15]        # 0x14000a6b8
   140003ca3:	mov    QWORD PTR [rip+0xaad6],rax        # 0x14000e780
   140003caa:	mov    eax,0x4008
   140003caf:	mov    WORD PTR [rip+0xaad2],ax        # 0x14000e788
   140003cb6:	lea    rax,[rip+0x69ff]        # 0x14000a6bc
   140003cbd:	mov    QWORD PTR [rip+0xaacc],rax        # 0x14000e790
   140003cc4:	mov    eax,0x13
   140003cc9:	mov    WORD PTR [rip+0xaac8],ax        # 0x14000e798
   140003cd0:	lea    rax,[rip+0x69e9]        # 0x14000a6c0
   140003cd7:	mov    QWORD PTR [rip+0xaac2],rax        # 0x14000e7a0
   140003cde:	mov    eax,0x11
   140003ce3:	mov    WORD PTR [rip+0xaabe],ax        # 0x14000e7a8
   140003cea:	lea    r15,[rip+0xaa7f]        # 0x14000e770
   140003cf1:	xor    ebx,ebx
   140003cf3:	mov    rdi,r15
   140003cf6:	mov    rdx,QWORD PTR [rdi]
   140003cf9:	mov    rcx,rbp
   140003cfc:	call   QWORD PTR [rip+0x6406]        # 0x14000a108
   140003d02:	test   eax,eax
   140003d04:	je     0x140003d19
   140003d06:	inc    ebx
   140003d08:	add    rdi,0x10
   140003d0c:	movsxd rax,ebx
   140003d0f:	cmp    rax,0x4
   140003d13:	jb     0x140003cf6
   140003d15:	xor    eax,eax
   140003d17:	jmp    0x140003d2d
   140003d19:	movsxd rcx,ebx
   140003d1c:	mov    eax,0x1
   140003d21:	add    rcx,rcx
   140003d24:	movzx  ecx,WORD PTR [r15+rcx*8+0x8]
   140003d2a:	mov    WORD PTR [rsi],cx
   140003d2d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d32:	mov    rbp,QWORD PTR [rsp+0x38]
   140003d37:	mov    rsi,QWORD PTR [rsp+0x40]
   140003d3c:	mov    rdi,QWORD PTR [rsp+0x48]
   140003d41:	add    rsp,0x20
   140003d45:	pop    r15
   140003d47:	ret    
   140003d48:	int3   
   140003d49:	int3   
   140003d4a:	int3   
   140003d4b:	int3   
   140003d4c:	int3   
   140003d4d:	int3   
   140003d4e:	int3   
   140003d4f:	int3   
   140003d50:	rex push rbx
   140003d52:	sub    rsp,0x20
   140003d56:	cmp    QWORD PTR [rcx],0x0
   140003d5a:	mov    rbx,rcx
   140003d5d:	je     0x140003d74
   140003d5f:	mov    rcx,QWORD PTR [rbx]
   140003d62:	mov    rax,QWORD PTR [rcx]
   140003d65:	mov    QWORD PTR [rbx],rax
   140003d68:	call   QWORD PTR [rip+0x6582]        # 0x14000a2f0
   140003d6e:	cmp    QWORD PTR [rbx],0x0
   140003d72:	jne    0x140003d5f
   140003d74:	add    rsp,0x20
   140003d78:	pop    rbx
   140003d79:	ret    
   140003d7a:	int3   
   140003d7b:	int3   
   140003d7c:	int3   
   140003d7d:	int3   
   140003d7e:	int3   
   140003d7f:	int3   
   140003d80:	rex push rbx
   140003d82:	push   rsi
   140003d83:	push   rdi
   140003d84:	push   r12
   140003d86:	push   r13
   140003d88:	push   r14
   140003d8a:	push   r15
   140003d8c:	mov    eax,0x21a0
   140003d91:	call   0x140008c20
   140003d96:	sub    rsp,rax
   140003d99:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   140003da2:	mov    rax,QWORD PTR [rip+0xa267]        # 0x14000e010
   140003da9:	xor    rax,rsp
   140003dac:	mov    QWORD PTR [rsp+0x2190],rax
   140003db4:	mov    r15,r8
   140003db7:	mov    QWORD PTR [rsp+0x40],r8
   140003dbc:	mov    r13,rdx
   140003dbf:	mov    r12,rcx
   140003dc2:	mov    QWORD PTR [rsp+0x50],rcx
   140003dc7:	mov    QWORD PTR [rsp+0x48],rdx
   140003dcc:	mov    QWORD PTR [rsp+0x60],r8
   140003dd1:	mov    QWORD PTR [rsp+0x70],r9
   140003dd6:	xor    ebx,ebx
   140003dd8:	mov    WORD PTR [rsp+0x30],bx
   140003ddd:	lea    rdx,[rsp+0x190]
   140003de5:	call   0x1400045c8
   140003dea:	test   eax,eax
   140003dec:	js     0x14000426b
   140003df2:	lea    rdx,[rsp+0x30]
   140003df7:	lea    rcx,[rsp+0x190]
   140003dff:	call   0x140003c50
   140003e04:	test   eax,eax
   140003e06:	jne    0x140003e12
   140003e08:	mov    eax,0x80020009
   140003e0d:	jmp    0x14000426b
   140003e12:	mov    rcx,QWORD PTR [r12]
   140003e16:	movzx  eax,WORD PTR [rcx]
   140003e19:	cmp    eax,0x20
   140003e1c:	ja     0x140003e3a
   140003e1e:	movabs rdx,0x100002600
   140003e28:	bt     rdx,rax
   140003e2c:	jae    0x140003e3a
   140003e2e:	call   QWORD PTR [rip+0x63b4]        # 0x14000a1e8
   140003e34:	mov    QWORD PTR [r12],rax
   140003e38:	jmp    0x140003e12
   140003e3a:	lea    rdx,[rsp+0x190]
   140003e42:	mov    rcx,r12
   140003e45:	call   0x1400045c8
   140003e4a:	test   eax,eax
   140003e4c:	js     0x14000426b
   140003e52:	movzx  eax,WORD PTR [rsp+0x30]
   140003e57:	cmp    eax,0x8
   140003e5a:	je     0x140004205
   140003e60:	cmp    eax,0x11
   140003e63:	je     0x14000404a
   140003e69:	cmp    eax,0x13
   140003e6c:	je     0x140004012
   140003e72:	cmp    eax,0x4008
   140003e77:	jne    0x140004257
   140003e7d:	lea    rcx,[rsp+0x190]
   140003e85:	or     rsi,0xffffffffffffffff
   140003e89:	mov    rax,rsi
   140003e8c:	inc    rax
   140003e8f:	cmp    WORD PTR [rcx+rax*2],bx
   140003e93:	jne    0x140003e8c
   140003e95:	add    eax,0x2
   140003e98:	mov    QWORD PTR [rsp+0x80],rbx
   140003ea0:	movsxd rcx,eax
   140003ea3:	test   eax,eax
   140003ea5:	je     0x140003ee3
   140003ea7:	xor    edx,edx
   140003ea9:	mov    rax,rsi
   140003eac:	div    rcx
   140003eaf:	cmp    rax,0x2
   140003eb3:	jb     0x140003ed9
   140003eb5:	lea    rdx,[rcx+rcx*1]
   140003eb9:	cmp    rdx,0x100
   140003ec0:	jbe    0x140003ee3
   140003ec2:	lea    rcx,[rsp+0x80]
   140003eca:	call   0x1400037d8
   140003ecf:	mov    rdi,QWORD PTR [rsp+0x80]
   140003ed7:	jmp    0x140003ef3
   140003ed9:	mov    ecx,0x80070057
   140003ede:	call   0x1400042a0
   140003ee3:	lea    rdi,[rsp+0x88]
   140003eeb:	mov    QWORD PTR [rsp+0x80],rdi
   140003ef3:	jmp    0x140003f17
   140003ef5:	xor    ebx,ebx
   140003ef7:	or     rsi,0xffffffffffffffff
   140003efb:	mov    rdi,QWORD PTR [rsp+0x80]
   140003f03:	mov    r12,QWORD PTR [rsp+0x50]
   140003f08:	mov    r13,QWORD PTR [rsp+0x48]
   140003f0d:	mov    rax,QWORD PTR [rsp+0x60]
   140003f12:	mov    QWORD PTR [rsp+0x40],rax
   140003f17:	test   rdi,rdi
   140003f1a:	je     0x140003fea
   140003f20:	lea    r14,[rsp+0x190]
   140003f28:	cmp    WORD PTR [rsp+0x190],bx
   140003f30:	je     0x140003f77
   140003f32:	mov    r15d,0x30
   140003f38:	mov    rcx,r14
   140003f3b:	call   QWORD PTR [rip+0x62a7]        # 0x14000a1e8
   140003f41:	movzx  ecx,WORD PTR [r14]
   140003f45:	cmp    cx,0x5c
   140003f49:	jne    0x140003f66
   140003f4b:	cmp    WORD PTR [rax],r15w
   140003f4f:	jne    0x140003f66
   140003f51:	mov    WORD PTR [rdi],bx
   140003f54:	add    rdi,0x2
   140003f58:	mov    rcx,rax
   140003f5b:	call   QWORD PTR [rip+0x6287]        # 0x14000a1e8
   140003f61:	mov    r14,rax
   140003f64:	jmp    0x140003f71
   140003f66:	mov    WORD PTR [rdi],cx
   140003f69:	add    rdi,0x2
   140003f6d:	add    r14,0x2
   140003f71:	cmp    WORD PTR [r14],bx
   140003f75:	jne    0x140003f38
   140003f77:	mov    DWORD PTR [rdi],0x0
   140003f7d:	mov    eax,ebx
   140003f7f:	mov    rdx,QWORD PTR [rsp+0x80]
   140003f87:	test   rdx,rdx
   140003f8a:	setne  al
   140003f8d:	test   eax,eax
   140003f8f:	jne    0x140003f9c
   140003f91:	mov    ecx,0x80004005
   140003f96:	call   0x1400042a0
   140003f9b:	int3   
   140003f9c:	mov    r9d,ebx
   140003f9f:	mov    r8,rdx
   140003fa2:	mov    rcx,rsi
   140003fa5:	inc    rcx
   140003fa8:	cmp    WORD PTR [r8+rcx*2],bx
   140003fad:	jne    0x140003fa5
   140003faf:	inc    ecx
   140003fb1:	lea    r8,[r8+rcx*2]
   140003fb5:	lea    r9d,[r9+rcx*2]
   140003fb9:	cmp    ecx,0x1
   140003fbc:	jne    0x140003fa2
   140003fbe:	mov    DWORD PTR [rsp+0x28],r9d
   140003fc3:	mov    QWORD PTR [rsp+0x20],rdx
   140003fc8:	lea    r9d,[rcx+0x6]
   140003fcc:	xor    r8d,r8d
   140003fcf:	mov    rdx,QWORD PTR [rsp+0x40]
   140003fd4:	mov    rcx,QWORD PTR [r13+0x0]
   140003fd8:	call   QWORD PTR [rip+0x6052]        # 0x14000a030
   140003fde:	mov    esi,eax
   140003fe0:	mov    rdi,QWORD PTR [rsp+0x80]
   140003fe8:	jmp    0x140003fef
   140003fea:	mov    esi,0xe
   140003fef:	lea    rax,[rsp+0x88]
   140003ff7:	cmp    rdi,rax
   140003ffa:	je     0x14000424a
   140004000:	lea    rcx,[rsp+0x80]
   140004008:	call   0x1400037a8
   14000400d:	jmp    0x14000424a
   140004012:	lea    r9,[rsp+0x30]
   140004017:	xor    r8d,r8d
   14000401a:	xor    edx,edx
   14000401c:	lea    rcx,[rsp+0x190]
   140004024:	call   QWORD PTR [rip+0x6186]        # 0x14000a1b0
   14000402a:	mov    eax,DWORD PTR [rsp+0x30]
   14000402e:	mov    DWORD PTR [rsp+0x38],eax
   140004032:	mov    DWORD PTR [rsp+0x28],0x4
   14000403a:	lea    rax,[rsp+0x38]
   14000403f:	mov    r9d,0x4
   140004045:	jmp    0x140004233
   14000404a:	lea    rax,[rsp+0x190]
   140004052:	or     rsi,0xffffffffffffffff
   140004056:	mov    rdi,rsi
   140004059:	inc    rdi
   14000405c:	cmp    WORD PTR [rax+rdi*2],bx
   140004060:	jne    0x140004059
   140004062:	mov    DWORD PTR [rsp+0x38],edi
   140004066:	test   dil,0x1
   14000406a:	je     0x140004076
   14000406c:	mov    eax,0x80004005
   140004071:	jmp    0x14000426b
   140004076:	mov    eax,edi
   140004078:	cdq    
   140004079:	sub    eax,edx
   14000407b:	sar    eax,1
   14000407d:	movsxd r14,eax
   140004080:	mov    DWORD PTR [rsp+0x30],r14d
   140004085:	mov    QWORD PTR [rsp+0x80],rbx
   14000408d:	mov    rcx,r14
   140004090:	test   eax,eax
   140004092:	je     0x1400040cf
   140004094:	xor    edx,edx
   140004096:	mov    rax,rsi
   140004099:	div    rcx
   14000409c:	cmp    rax,0x1
   1400040a0:	jae    0x1400040ac
   1400040a2:	mov    ecx,0x80070057
   1400040a7:	call   0x1400042a0
   1400040ac:	cmp    rcx,0x100
   1400040b3:	jbe    0x1400040cf
   1400040b5:	mov    rdx,rcx
   1400040b8:	lea    rcx,[rsp+0x80]
   1400040c0:	call   0x1400037d8
   1400040c5:	mov    rcx,QWORD PTR [rsp+0x80]
   1400040cd:	jmp    0x1400040df
   1400040cf:	lea    rcx,[rsp+0x88]
   1400040d7:	mov    QWORD PTR [rsp+0x80],rcx
   1400040df:	mov    rsi,QWORD PTR [rsp+0x40]
   1400040e4:	jmp    0x140004108
   1400040e6:	xor    ebx,ebx
   1400040e8:	mov    edi,DWORD PTR [rsp+0x38]
   1400040ec:	mov    r14d,DWORD PTR [rsp+0x30]
   1400040f1:	mov    rcx,QWORD PTR [rsp+0x80]
   1400040f9:	mov    r12,QWORD PTR [rsp+0x50]
   1400040fe:	mov    r13,QWORD PTR [rsp+0x48]
   140004103:	mov    rsi,QWORD PTR [rsp+0x60]
   140004108:	test   rcx,rcx
   14000410b:	jne    0x140004130
   14000410d:	lea    rax,[rsp+0x88]
   140004115:	test   rax,rax
   140004118:	je     0x14000406c
   14000411e:	lea    rcx,[rsp+0x80]
   140004126:	call   0x1400037a8
   14000412b:	jmp    0x14000406c
   140004130:	movsxd r8,r14d
   140004133:	xor    edx,edx
   140004135:	call   0x14000864c
   14000413a:	mov    r8d,ebx
   14000413d:	mov    r9,rbx
   140004140:	movsxd r11,edi
   140004143:	test   edi,edi
   140004145:	jle    0x1400041ba
   140004147:	mov    r15d,0x30
   14000414d:	mov    eax,r8d
   140004150:	cdq    
   140004151:	sub    eax,edx
   140004153:	sar    eax,1
   140004155:	movsxd r10,eax
   140004158:	add    r10,QWORD PTR [rsp+0x80]
   140004160:	movzx  edx,WORD PTR [rsp+r9*2+0x190]
   140004169:	mov    eax,edx
   14000416b:	cmp    edx,r15d
   14000416e:	jl     0x140004196
   140004170:	cmp    eax,0x39
   140004173:	jle    0x140004191
   140004175:	cmp    eax,0x40
   140004178:	jle    0x140004196
   14000417a:	cmp    eax,0x46
   14000417d:	jle    0x14000418c
   14000417f:	add    eax,0xffffff9f
   140004182:	cmp    eax,0x5
   140004185:	ja     0x140004196
   140004187:	sub    dl,0x57
   14000418a:	jmp    0x140004198
   14000418c:	sub    dl,0x37
   14000418f:	jmp    0x140004198
   140004191:	sub    dl,r15b
   140004194:	jmp    0x140004198
   140004196:	mov    dl,bl
   140004198:	mov    ecx,r8d
   14000419b:	and    ecx,0x1
   14000419e:	shl    ecx,0x2
   1400041a1:	mov    eax,0x4
   1400041a6:	sub    eax,ecx
   1400041a8:	mov    cl,al
   1400041aa:	shl    dl,cl
   1400041ac:	or     BYTE PTR [r10],dl
   1400041af:	inc    r8d
   1400041b2:	inc    r9
   1400041b5:	cmp    r9,r11
   1400041b8:	jl     0x14000414d
   1400041ba:	mov    DWORD PTR [rsp+0x28],r14d
   1400041bf:	mov    rax,QWORD PTR [rsp+0x80]
   1400041c7:	mov    QWORD PTR [rsp+0x20],rax
   1400041cc:	mov    r9d,0x3
   1400041d2:	xor    r8d,r8d
   1400041d5:	mov    rdx,rsi
   1400041d8:	mov    rcx,QWORD PTR [r13+0x0]
   1400041dc:	call   QWORD PTR [rip+0x5e4e]        # 0x14000a030
   1400041e2:	mov    esi,eax
   1400041e4:	lea    rax,[rsp+0x88]
   1400041ec:	cmp    QWORD PTR [rsp+0x80],rax
   1400041f4:	je     0x14000424a
   1400041f6:	lea    rcx,[rsp+0x80]
   1400041fe:	call   0x1400037a8
   140004203:	jmp    0x14000424a
   140004205:	lea    rax,[rsp+0x190]
   14000420d:	or     rsi,0xffffffffffffffff
   140004211:	inc    rsi
   140004214:	cmp    WORD PTR [rax+rsi*2],bx
   140004218:	jne    0x140004211
   14000421a:	lea    eax,[rsi*2+0x2]
   140004221:	mov    DWORD PTR [rsp+0x28],eax
   140004225:	lea    rax,[rsp+0x190]
   14000422d:	mov    r9d,0x1
   140004233:	mov    QWORD PTR [rsp+0x20],rax
   140004238:	xor    r8d,r8d
   14000423b:	mov    rdx,r15
   14000423e:	mov    rcx,QWORD PTR [r13+0x0]
   140004242:	call   QWORD PTR [rip+0x5de8]        # 0x14000a030
   140004248:	mov    esi,eax
   14000424a:	test   esi,esi
   14000424c:	je     0x140004257
   14000424e:	mov    ecx,esi
   140004250:	call   0x1400045b4
   140004255:	jmp    0x14000426b
   140004257:	mov    rdx,QWORD PTR [rsp+0x70]
   14000425c:	mov    rcx,r12
   14000425f:	call   0x1400045c8
   140004264:	test   eax,eax
   140004266:	cmovs  ebx,eax
   140004269:	mov    eax,ebx
   14000426b:	mov    rcx,QWORD PTR [rsp+0x2190]
   140004273:	xor    rcx,rsp
   140004276:	call   0x1400081f0
   14000427b:	add    rsp,0x21a0
   140004282:	pop    r15
   140004284:	pop    r14
   140004286:	pop    r13
   140004288:	pop    r12
   14000428a:	pop    rdi
   14000428b:	pop    rsi
   14000428c:	pop    rbx
   14000428d:	ret    
   14000428e:	int3   
   14000428f:	int3   
   140004290:	int3   
   140004291:	int3   
   140004292:	int3   
   140004293:	int3   
   140004294:	mov    DWORD PTR [rcx],edx
   140004296:	mov    rax,rcx
   140004299:	ret    
   14000429a:	int3   
   14000429b:	int3   
   14000429c:	int3   
   14000429d:	int3   
   14000429e:	int3   
   14000429f:	int3   
   1400042a0:	sub    rsp,0x28
   1400042a4:	mov    edx,ecx
   1400042a6:	lea    rcx,[rsp+0x40]
   1400042ab:	call   0x140004294
   1400042b0:	lea    rdx,[rip+0x8c19]        # 0x14000ced0
   1400042b7:	mov    ecx,DWORD PTR [rax]
   1400042b9:	mov    DWORD PTR [rsp+0x38],ecx
   1400042bd:	lea    rcx,[rsp+0x38]
   1400042c2:	call   0x140008698
   1400042c7:	int3   
   1400042c8:	int3   
   1400042c9:	int3   
   1400042ca:	int3   
   1400042cb:	int3   
   1400042cc:	int3   
   1400042cd:	int3   
   1400042ce:	int3   
   1400042cf:	int3   
   1400042d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400042d5:	push   rdi
   1400042d6:	mov    eax,0x2030
   1400042db:	call   0x140008c20
   1400042e0:	sub    rsp,rax
   1400042e3:	mov    rax,QWORD PTR [rip+0x9d26]        # 0x14000e010
   1400042ea:	xor    rax,rsp
   1400042ed:	mov    QWORD PTR [rsp+0x2020],rax
   1400042f5:	cmp    WORD PTR [rdx],0x3d
   1400042f9:	mov    rdi,rdx
   1400042fc:	mov    rbx,rcx
   1400042ff:	jne    0x140004350
   140004301:	call   0x1400045c8
   140004306:	test   eax,eax
   140004308:	js     0x140004352
   14000430a:	mov    rcx,QWORD PTR [rbx]
   14000430d:	movzx  eax,WORD PTR [rcx]
   140004310:	cmp    eax,0x20
   140004313:	ja     0x140004330
   140004315:	movabs rdx,0x100002600
   14000431f:	bt     rdx,rax
   140004323:	jae    0x140004330
   140004325:	call   QWORD PTR [rip+0x5ebd]        # 0x14000a1e8
   14000432b:	mov    QWORD PTR [rbx],rax
   14000432e:	jmp    0x14000430a
   140004330:	lea    rdx,[rsp+0x20]
   140004335:	mov    rcx,rbx
   140004338:	call   0x1400045c8
   14000433d:	test   eax,eax
   14000433f:	js     0x140004352
   140004341:	mov    rdx,rdi
   140004344:	mov    rcx,rbx
   140004347:	call   0x1400045c8
   14000434c:	test   eax,eax
   14000434e:	js     0x140004352
   140004350:	xor    eax,eax
   140004352:	mov    rcx,QWORD PTR [rsp+0x2020]
   14000435a:	xor    rcx,rsp
   14000435d:	call   0x1400081f0
   140004362:	mov    rbx,QWORD PTR [rsp+0x2050]
   14000436a:	add    rsp,0x2030
   140004371:	pop    rdi
   140004372:	ret    
   140004373:	int3   
   140004374:	int3   
   140004375:	int3   
   140004376:	int3   
   140004377:	int3   
   140004378:	int3   
   140004379:	int3   
   14000437a:	int3   
   14000437b:	int3   
   14000437c:	mov    QWORD PTR [rsp+0x18],rbx
   140004381:	push   rbp
   140004382:	push   rsi
   140004383:	push   rdi
   140004384:	lea    rbp,[rsp-0x180]
   14000438c:	sub    rsp,0x280
   140004393:	mov    rax,QWORD PTR [rip+0x9c76]        # 0x14000e010
   14000439a:	xor    rax,rsp
   14000439d:	mov    QWORD PTR [rbp+0x170],rax
   1400043a4:	xor    eax,eax
   1400043a6:	mov    rdi,rcx
   1400043a9:	mov    rcx,QWORD PTR [rcx]
   1400043ac:	mov    r9d,0x2001f
   1400043b2:	mov    QWORD PTR [rsp+0x48],rax
   1400043b7:	xor    r8d,r8d
   1400043ba:	mov    QWORD PTR [rsp+0x50],rax
   1400043bf:	mov    rsi,rdx
   1400043c2:	mov    QWORD PTR [rsp+0x58],rax
   1400043c7:	mov    QWORD PTR [rsp+0x60],rax
   1400043cc:	lea    rax,[rsp+0x60]
   1400043d1:	mov    QWORD PTR [rsp+0x20],rax
   1400043d6:	call   QWORD PTR [rip+0x5c4c]        # 0x14000a028
   1400043dc:	mov    ebx,eax
   1400043de:	test   eax,eax
   1400043e0:	jne    0x14000447f
   1400043e6:	mov    rcx,QWORD PTR [rsp+0x48]
   1400043eb:	test   rcx,rcx
   1400043ee:	je     0x1400043f8
   1400043f0:	call   QWORD PTR [rip+0x5c1a]        # 0x14000a010
   1400043f6:	mov    ebx,eax
   1400043f8:	mov    rcx,QWORD PTR [rsp+0x60]
   1400043fd:	mov    QWORD PTR [rsp+0x48],rcx
   140004402:	test   ebx,ebx
   140004404:	jne    0x14000447f
   140004406:	jmp    0x140004422
   140004408:	lea    rdx,[rsp+0x70]
   14000440d:	lea    rcx,[rsp+0x48]
   140004412:	call   0x14000437c
   140004417:	mov    ebx,eax
   140004419:	test   eax,eax
   14000441b:	jne    0x14000447f
   14000441d:	mov    rcx,QWORD PTR [rsp+0x48]
   140004422:	lea    rax,[rsp+0x68]
   140004427:	mov    DWORD PTR [rsp+0x40],0x100
   14000442f:	mov    QWORD PTR [rsp+0x38],rax
   140004434:	lea    r9,[rsp+0x40]
   140004439:	and    QWORD PTR [rsp+0x30],0x0
   14000443f:	lea    r8,[rsp+0x70]
   140004444:	and    QWORD PTR [rsp+0x28],0x0
   14000444a:	xor    edx,edx
   14000444c:	and    QWORD PTR [rsp+0x20],0x0
   140004452:	call   QWORD PTR [rip+0x5bc8]        # 0x14000a020
   140004458:	test   eax,eax
   14000445a:	je     0x140004408
   14000445c:	mov    rcx,QWORD PTR [rsp+0x48]
   140004461:	test   rcx,rcx
   140004464:	je     0x140004472
   140004466:	call   QWORD PTR [rip+0x5ba4]        # 0x14000a010
   14000446c:	and    QWORD PTR [rsp+0x48],0x0
   140004472:	mov    rdx,rsi
   140004475:	mov    rcx,rdi
   140004478:	call   0x1400044e4
   14000447d:	mov    ebx,eax
   14000447f:	mov    rcx,QWORD PTR [rsp+0x48]
   140004484:	test   rcx,rcx
   140004487:	je     0x14000448f
   140004489:	call   QWORD PTR [rip+0x5b81]        # 0x14000a010
   14000448f:	mov    eax,ebx
   140004491:	mov    rcx,QWORD PTR [rbp+0x170]
   140004498:	xor    rcx,rsp
   14000449b:	call   0x1400081f0
   1400044a0:	mov    rbx,QWORD PTR [rsp+0x2b0]
   1400044a8:	add    rsp,0x280
   1400044af:	pop    rdi
   1400044b0:	pop    rsi
   1400044b1:	pop    rbp
   1400044b2:	ret    
   1400044b3:	int3   
   1400044b4:	int3   
   1400044b5:	int3   
   1400044b6:	int3   
   1400044b7:	int3   
   1400044b8:	int3   
   1400044b9:	int3   
   1400044ba:	int3   
   1400044bb:	int3   
   1400044bc:	rex push rbx
   1400044be:	sub    rsp,0x20
   1400044c2:	mov    rbx,rcx
   1400044c5:	mov    rcx,QWORD PTR [rcx]
   1400044c8:	test   rcx,rcx
   1400044cb:	je     0x1400044d7
   1400044cd:	call   QWORD PTR [rip+0x5b3d]        # 0x14000a010
   1400044d3:	and    QWORD PTR [rbx],0x0
   1400044d7:	add    rsp,0x20
   1400044db:	pop    rbx
   1400044dc:	ret    
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	int3   
   1400044e1:	int3   
   1400044e2:	int3   
   1400044e3:	int3   
   1400044e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400044e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400044ee:	push   rdi
   1400044ef:	sub    rsp,0x20
   1400044f3:	cmp    QWORD PTR [rcx+0x8],0x0
   1400044f8:	mov    rsi,rdx
   1400044fb:	mov    rbx,rcx
   1400044fe:	jne    0x14000455a
   140004500:	cmp    QWORD PTR [rcx+0x10],0x0
   140004505:	jne    0x14000455a
   140004507:	lea    rcx,[rip+0x69c2]        # 0x14000aed0
   14000450e:	call   QWORD PTR [rip+0x5bec]        # 0x14000a100
   140004514:	test   rax,rax
   140004517:	je     0x14000452f
   140004519:	lea    rdx,[rip+0x6a08]        # 0x14000af28
   140004520:	mov    rcx,rax
   140004523:	call   QWORD PTR [rip+0x5baf]        # 0x14000a0d8
   140004529:	mov    QWORD PTR [rbx+0x8],rax
   14000452d:	jmp    0x14000455a
   14000452f:	xor    r8d,r8d
   140004532:	lea    rcx,[rip+0x69ff]        # 0x14000af38
   140004539:	xor    edx,edx
   14000453b:	call   QWORD PTR [rip+0x5bb7]        # 0x14000a0f8
   140004541:	test   rax,rax
   140004544:	je     0x14000455a
   140004546:	lea    rdx,[rip+0x6a0b]        # 0x14000af58
   14000454d:	mov    rcx,rax
   140004550:	call   QWORD PTR [rip+0x5b82]        # 0x14000a0d8
   140004556:	mov    QWORD PTR [rbx+0x10],rax
   14000455a:	mov    rdi,QWORD PTR [rbx+0x8]
   14000455e:	test   rdi,rdi
   140004561:	je     0x14000457c
   140004563:	mov    rcx,rdi
   140004566:	call   QWORD PTR [rip+0x5f4c]        # 0x14000a4b8
   14000456c:	mov    rcx,QWORD PTR [rbx]
   14000456f:	xor    r9d,r9d
   140004572:	xor    r8d,r8d
   140004575:	mov    rdx,rsi
   140004578:	call   rdi
   14000457a:	jmp    0x14000459e
   14000457c:	mov    rdi,QWORD PTR [rbx+0x10]
   140004580:	test   rdi,rdi
   140004583:	je     0x140004598
   140004585:	mov    rcx,rdi
   140004588:	call   QWORD PTR [rip+0x5f2a]        # 0x14000a4b8
   14000458e:	mov    rcx,QWORD PTR [rbx]
   140004591:	mov    rdx,rsi
   140004594:	call   rdi
   140004596:	jmp    0x14000459e
   140004598:	call   QWORD PTR [rip+0x5aea]        # 0x14000a088
   14000459e:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045a3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400045a8:	add    rsp,0x20
   1400045ac:	pop    rdi
   1400045ad:	ret    
   1400045ae:	int3   
   1400045af:	int3   
   1400045b0:	int3   
   1400045b1:	int3   
   1400045b2:	int3   
   1400045b3:	int3   
   1400045b4:	movzx  eax,cx
   1400045b7:	or     eax,0x80070000
   1400045bc:	test   ecx,ecx
   1400045be:	cmovle eax,ecx
   1400045c1:	ret    
   1400045c2:	int3   
   1400045c3:	int3   
   1400045c4:	int3   
   1400045c5:	int3   
   1400045c6:	int3   
   1400045c7:	int3   
   1400045c8:	mov    rax,rsp
   1400045cb:	mov    QWORD PTR [rax+0x8],rbx
   1400045cf:	mov    QWORD PTR [rax+0x10],rbp
   1400045d3:	mov    QWORD PTR [rax+0x18],rsi
   1400045d7:	mov    QWORD PTR [rax+0x20],rdi
   1400045db:	push   r12
   1400045dd:	push   r14
   1400045df:	push   r15
   1400045e1:	sub    rsp,0x20
   1400045e5:	mov    rbx,rdx
   1400045e8:	mov    rdi,rcx
   1400045eb:	movabs r12,0x100002600
   1400045f5:	mov    rcx,QWORD PTR [rdi]
   1400045f8:	movzx  eax,WORD PTR [rcx]
   1400045fb:	cmp    eax,0x20
   1400045fe:	ja     0x140004611
   140004600:	bt     r12,rax
   140004604:	jae    0x140004611
   140004606:	call   QWORD PTR [rip+0x5bdc]        # 0x14000a1e8
   14000460c:	mov    QWORD PTR [rdi],rax
   14000460f:	jmp    0x1400045f5
   140004611:	xor    r14d,r14d
   140004614:	cmp    r14w,WORD PTR [rcx]
   140004618:	je     0x14000472e
   14000461e:	lea    r15d,[r14+0x27]
   140004622:	lea    rbp,[rbx+0x2000]
   140004629:	cmp    r15w,WORD PTR [rcx]
   14000462d:	jne    0x1400046ce
   140004633:	call   QWORD PTR [rip+0x5baf]        # 0x14000a1e8
   140004639:	mov    QWORD PTR [rdi],rax
   14000463c:	cmp    r14w,WORD PTR [rax]
   140004640:	je     0x1400046ae
   140004642:	mov    rcx,QWORD PTR [rdi]
   140004645:	cmp    r15w,WORD PTR [rcx]
   140004649:	jne    0x140004657
   14000464b:	call   QWORD PTR [rip+0x5b97]        # 0x14000a1e8
   140004651:	cmp    r15w,WORD PTR [rax]
   140004655:	jne    0x1400046ae
   140004657:	mov    rcx,QWORD PTR [rdi]
   14000465a:	cmp    r15w,WORD PTR [rcx]
   14000465e:	jne    0x140004669
   140004660:	call   QWORD PTR [rip+0x5b82]        # 0x14000a1e8
   140004666:	mov    QWORD PTR [rdi],rax
   140004669:	mov    rsi,QWORD PTR [rdi]
   14000466c:	mov    rcx,rsi
   14000466f:	call   QWORD PTR [rip+0x5b73]        # 0x14000a1e8
   140004675:	mov    QWORD PTR [rdi],rax
   140004678:	sub    rax,rsi
   14000467b:	sar    rax,1
   14000467e:	lea    rcx,[rax+0x1]
   140004682:	lea    rcx,[rbx+rcx*2]
   140004686:	cmp    rcx,rbp
   140004689:	jae    0x14000472e
   14000468f:	test   eax,eax
   140004691:	jle    0x1400046a9
   140004693:	sub    rsi,rbx
   140004696:	mov    ecx,eax
   140004698:	movzx  eax,WORD PTR [rsi+rbx*1]
   14000469c:	mov    WORD PTR [rbx],ax
   14000469f:	add    rbx,0x2
   1400046a3:	sub    rcx,0x1
   1400046a7:	jne    0x140004698
   1400046a9:	mov    rax,QWORD PTR [rdi]
   1400046ac:	jmp    0x14000463c
   1400046ae:	mov    rax,QWORD PTR [rdi]
   1400046b1:	cmp    r14w,WORD PTR [rax]
   1400046b5:	je     0x14000472e
   1400046b7:	cmp    rbx,rbp
   1400046ba:	jae    0x14000472e
   1400046bc:	mov    WORD PTR [rbx],r14w
   1400046c0:	mov    rcx,QWORD PTR [rdi]
   1400046c3:	call   QWORD PTR [rip+0x5b1f]        # 0x14000a1e8
   1400046c9:	mov    QWORD PTR [rdi],rax
   1400046cc:	jmp    0x14000472a
   1400046ce:	mov    rsi,QWORD PTR [rdi]
   1400046d1:	movzx  eax,WORD PTR [rsi]
   1400046d4:	cmp    eax,0x20
   1400046d7:	ja     0x1400046df
   1400046d9:	bt     r12,rax
   1400046dd:	jb     0x140004721
   1400046df:	mov    rcx,rsi
   1400046e2:	call   QWORD PTR [rip+0x5b00]        # 0x14000a1e8
   1400046e8:	mov    QWORD PTR [rdi],rax
   1400046eb:	sub    rax,rsi
   1400046ee:	sar    rax,1
   1400046f1:	lea    rcx,[rax+0x1]
   1400046f5:	lea    rcx,[rbx+rcx*2]
   1400046f9:	cmp    rcx,rbp
   1400046fc:	jae    0x14000472e
   1400046fe:	test   eax,eax
   140004700:	jle    0x140004718
   140004702:	sub    rsi,rbx
   140004705:	mov    ecx,eax
   140004707:	movzx  eax,WORD PTR [rsi+rbx*1]
   14000470b:	mov    WORD PTR [rbx],ax
   14000470e:	add    rbx,0x2
   140004712:	sub    rcx,0x1
   140004716:	jne    0x140004707
   140004718:	mov    rax,QWORD PTR [rdi]
   14000471b:	cmp    r14w,WORD PTR [rax]
   14000471f:	jne    0x1400046ce
   140004721:	cmp    rbx,rbp
   140004724:	jae    0x14000472e
   140004726:	mov    WORD PTR [rbx],r14w
   14000472a:	xor    eax,eax
   14000472c:	jmp    0x140004733
   14000472e:	mov    eax,0x80020009
   140004733:	mov    rbx,QWORD PTR [rsp+0x40]
   140004738:	mov    rbp,QWORD PTR [rsp+0x48]
   14000473d:	mov    rsi,QWORD PTR [rsp+0x50]
   140004742:	mov    rdi,QWORD PTR [rsp+0x58]
   140004747:	add    rsp,0x20
   14000474b:	pop    r15
   14000474d:	pop    r14
   14000474f:	pop    r12
   140004751:	ret    
   140004752:	int3   
   140004753:	int3   
   140004754:	int3   
   140004755:	int3   
   140004756:	int3   
   140004757:	int3   
   140004758:	rex push rbp
   14000475a:	push   rbx
   14000475b:	push   rsi
   14000475c:	push   rdi
   14000475d:	lea    rbp,[rsp-0x21f8]
   140004765:	mov    eax,0x22f8
   14000476a:	call   0x140008c20
   14000476f:	sub    rsp,rax
   140004772:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   14000477a:	mov    rax,QWORD PTR [rip+0x988f]        # 0x14000e010
   140004781:	xor    rax,rsp
   140004784:	mov    QWORD PTR [rbp+0x21e0],rax
   14000478b:	mov    DWORD PTR [rsp+0x78],r9d
   140004790:	mov    QWORD PTR [rbp-0x78],r8
   140004794:	mov    rdi,rdx
   140004797:	mov    rax,rcx
   14000479a:	mov    QWORD PTR [rsp+0x70],rcx
   14000479f:	xor    ecx,ecx
   1400047a1:	mov    esi,ecx
   1400047a3:	mov    QWORD PTR [rbp-0x70],rcx
   1400047a7:	mov    QWORD PTR [rbp-0x68],rcx
   1400047ab:	mov    QWORD PTR [rbp-0x60],rcx
   1400047af:	mov    ecx,DWORD PTR [rbp+0x2240]
   1400047b5:	mov    DWORD PTR [rbp-0x40],ecx
   1400047b8:	mov    rcx,rax
   1400047bb:	call   0x1400045c8
   1400047c0:	test   eax,eax
   1400047c2:	mov    ebx,eax
   1400047c4:	js     0x140004f04
   1400047ca:	cmp    WORD PTR [rdi],0x7d
   1400047ce:	je     0x140004f04
   1400047d4:	mov    eax,0x1
   1400047d9:	mov    DWORD PTR [rsp+0x68],eax
   1400047dd:	lea    rdx,[rip+0x5f1c]        # 0x14000a700
   1400047e4:	mov    rcx,rdi
   1400047e7:	call   QWORD PTR [rip+0x591b]        # 0x14000a108
   1400047ed:	xor    ecx,ecx
   1400047ef:	mov    ebx,ecx
   1400047f1:	test   eax,eax
   1400047f3:	sete   bl
   1400047f6:	mov    DWORD PTR [rsp+0x60],ebx
   1400047fa:	lea    rdx,[rip+0x5ecf]        # 0x14000a6d0
   140004801:	mov    rcx,rdi
   140004804:	call   QWORD PTR [rip+0x58fe]        # 0x14000a108
   14000480a:	test   eax,eax
   14000480c:	je     0x140004816
   14000480e:	test   ebx,ebx
   140004810:	je     0x1400048db
   140004816:	mov    rdx,rdi
   140004819:	mov    rcx,QWORD PTR [rsp+0x70]
   14000481e:	call   0x1400045c8
   140004823:	mov    ebx,eax
   140004825:	xor    edx,edx
   140004827:	test   eax,eax
   140004829:	js     0x140004f04
   14000482f:	cmp    DWORD PTR [rsp+0x78],edx
   140004833:	je     0x1400048db
   140004839:	mov    QWORD PTR [rbp-0x58],rdx
   14000483d:	mov    QWORD PTR [rbp-0x50],rdx
   140004841:	mov    QWORD PTR [rbp-0x48],rdx
   140004845:	mov    rcx,rdi
   140004848:	movzx  eax,WORD PTR [rdi]
   14000484b:	jmp    0x14000485f
   14000484d:	cmp    ax,0x5c
   140004851:	je     0x140004866
   140004853:	call   QWORD PTR [rip+0x598f]        # 0x14000a1e8
   140004859:	mov    rcx,rax
   14000485c:	movzx  eax,WORD PTR [rax]
   14000485f:	test   ax,ax
   140004862:	jne    0x14000484d
   140004864:	jmp    0x14000486f
   140004866:	test   rcx,rcx
   140004869:	jne    0x140004ed3
   14000486f:	lea    rbx,[rip+0x5f8a]        # 0x14000a800
   140004876:	mov    rdx,QWORD PTR [rbx]
   140004879:	mov    rcx,rdi
   14000487c:	call   QWORD PTR [rip+0x5886]        # 0x14000a108
   140004882:	test   eax,eax
   140004884:	je     0x1400048aa
   140004886:	add    rbx,0x8
   14000488a:	lea    rax,[rip+0x5fcf]        # 0x14000a860
   140004891:	cmp    rbx,rax
   140004894:	jl     0x140004876
   140004896:	mov    rax,QWORD PTR [rbp-0x78]
   14000489a:	mov    QWORD PTR [rbp-0x58],rax
   14000489e:	mov    rdx,rdi
   1400048a1:	lea    rcx,[rbp-0x58]
   1400048a5:	call   0x14000437c
   1400048aa:	xor    eax,eax
   1400048ac:	cmp    DWORD PTR [rsp+0x60],eax
   1400048b0:	je     0x1400048db
   1400048b2:	mov    rdx,rdi
   1400048b5:	mov    rcx,QWORD PTR [rsp+0x70]
   1400048ba:	call   0x1400045c8
   1400048bf:	mov    ebx,eax
   1400048c1:	test   eax,eax
   1400048c3:	js     0x140004f04
   1400048c9:	mov    rdx,rdi
   1400048cc:	mov    rcx,QWORD PTR [rsp+0x70]
   1400048d1:	call   0x1400042d0
   1400048d6:	jmp    0x140004b84
   1400048db:	lea    rdx,[rip+0x5e06]        # 0x14000a6e8
   1400048e2:	mov    rcx,rdi
   1400048e5:	call   QWORD PTR [rip+0x581d]        # 0x14000a108
   1400048eb:	xor    ecx,ecx
   1400048ed:	test   eax,eax
   1400048ef:	jne    0x14000490c
   1400048f1:	mov    DWORD PTR [rsp+0x68],ecx
   1400048f5:	mov    rdx,rdi
   1400048f8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400048fd:	call   0x1400045c8
   140004902:	mov    ebx,eax
   140004904:	test   eax,eax
   140004906:	js     0x140004f04
   14000490c:	lea    rdx,[rip+0x5db5]        # 0x14000a6c8
   140004913:	mov    rcx,rdi
   140004916:	call   QWORD PTR [rip+0x57ec]        # 0x14000a108
   14000491c:	xor    edx,edx
   14000491e:	test   eax,eax
   140004920:	jne    0x140004a17
   140004926:	lea    rdx,[rbp+0x1e0]
   14000492d:	mov    rcx,QWORD PTR [rsp+0x70]
   140004932:	call   0x1400045c8
   140004937:	mov    ebx,eax
   140004939:	test   eax,eax
   14000493b:	js     0x140004f04
   140004941:	mov    rdx,rdi
   140004944:	mov    rcx,QWORD PTR [rsp+0x70]
   140004949:	call   0x1400045c8
   14000494e:	mov    ebx,eax
   140004950:	xor    edx,edx
   140004952:	test   eax,eax
   140004954:	js     0x140004f04
   14000495a:	cmp    WORD PTR [rdi],0x3d
   14000495e:	jne    0x140004ed3
   140004964:	cmp    DWORD PTR [rsp+0x78],edx
   140004968:	je     0x14000499b
   14000496a:	mov    QWORD PTR [rbp-0x50],rdx
   14000496e:	mov    QWORD PTR [rbp-0x48],rdx
   140004972:	mov    rax,QWORD PTR [rbp-0x78]
   140004976:	mov    QWORD PTR [rbp-0x58],rax
   14000497a:	mov    r9,rdi
   14000497d:	lea    r8,[rbp+0x1e0]
   140004984:	lea    rdx,[rbp-0x58]
   140004988:	mov    rcx,QWORD PTR [rsp+0x70]
   14000498d:	call   0x140003d80
   140004992:	mov    ebx,eax
   140004994:	xor    edx,edx
   140004996:	jmp    0x140004b88
   14000499b:	cmp    DWORD PTR [rbp+0x2240],edx
   1400049a1:	jne    0x140004a05
   1400049a3:	cmp    DWORD PTR [rsp+0x68],edx
   1400049a7:	je     0x140004a05
   1400049a9:	mov    QWORD PTR [rsp+0x68],rdx
   1400049ae:	lea    rax,[rsp+0x68]
   1400049b3:	mov    QWORD PTR [rsp+0x20],rax
   1400049b8:	mov    r9d,0x20006
   1400049be:	xor    r8d,r8d
   1400049c1:	mov    rcx,QWORD PTR [rbp-0x78]
   1400049c5:	call   QWORD PTR [rip+0x565d]        # 0x14000a028
   1400049cb:	test   eax,eax
   1400049cd:	jne    0x140004efb
   1400049d3:	mov    rbx,QWORD PTR [rsp+0x68]
   1400049d8:	mov    QWORD PTR [rbp-0x80],rbx
   1400049dc:	lea    rdx,[rbp+0x1e0]
   1400049e3:	mov    rcx,rbx
   1400049e6:	call   QWORD PTR [rip+0x5654]        # 0x14000a040
   1400049ec:	test   eax,0xfffffffd
   1400049f1:	jne    0x140004eb9
   1400049f7:	test   rbx,rbx
   1400049fa:	je     0x140004a05
   1400049fc:	mov    rcx,rbx
   1400049ff:	call   QWORD PTR [rip+0x560b]        # 0x14000a010
   140004a05:	mov    rdx,rdi
   140004a08:	mov    rcx,QWORD PTR [rsp+0x70]
   140004a0d:	call   0x1400042d0
   140004a12:	jmp    0x1400047c0
   140004a17:	mov    rcx,rdi
   140004a1a:	movzx  eax,WORD PTR [rdi]
   140004a1d:	jmp    0x140004a33
   140004a1f:	cmp    ax,0x5c
   140004a23:	je     0x140004a3a
   140004a25:	call   QWORD PTR [rip+0x57bd]        # 0x14000a1e8
   140004a2b:	mov    rcx,rax
   140004a2e:	movzx  eax,WORD PTR [rax]
   140004a31:	xor    edx,edx
   140004a33:	test   ax,ax
   140004a36:	jne    0x140004a1f
   140004a38:	jmp    0x140004a43
   140004a3a:	test   rcx,rcx
   140004a3d:	jne    0x140004ed3
   140004a43:	cmp    DWORD PTR [rsp+0x78],edx
   140004a47:	je     0x140004be5
   140004a4d:	mov    QWORD PTR [rsp+0x68],rdx
   140004a52:	lea    rax,[rsp+0x68]
   140004a57:	mov    QWORD PTR [rsp+0x20],rax
   140004a5c:	mov    r9d,0x2001f
   140004a62:	xor    r8d,r8d
   140004a65:	mov    rdx,rdi
   140004a68:	mov    rbx,QWORD PTR [rbp-0x78]
   140004a6c:	mov    rcx,rbx
   140004a6f:	call   QWORD PTR [rip+0x55b3]        # 0x14000a028
   140004a75:	xor    ecx,ecx
   140004a77:	test   eax,eax
   140004a79:	jne    0x140004a9e
   140004a7b:	mov    eax,ecx
   140004a7d:	test   rsi,rsi
   140004a80:	je     0x140004a8d
   140004a82:	mov    rcx,rsi
   140004a85:	call   QWORD PTR [rip+0x5585]        # 0x14000a010
   140004a8b:	xor    ecx,ecx
   140004a8d:	mov    rsi,QWORD PTR [rsp+0x68]
   140004a92:	mov    QWORD PTR [rbp-0x70],rsi
   140004a96:	test   eax,eax
   140004a98:	je     0x140004b4d
   140004a9e:	mov    QWORD PTR [rsp+0x68],rcx
   140004aa3:	lea    rax,[rsp+0x68]
   140004aa8:	mov    QWORD PTR [rsp+0x20],rax
   140004aad:	mov    r9d,0x20019
   140004ab3:	xor    r8d,r8d
   140004ab6:	mov    rdx,rdi
   140004ab9:	mov    rcx,rbx
   140004abc:	call   QWORD PTR [rip+0x5566]        # 0x14000a028
   140004ac2:	xor    ecx,ecx
   140004ac4:	test   eax,eax
   140004ac6:	jne    0x140004ae7
   140004ac8:	mov    eax,ecx
   140004aca:	test   rsi,rsi
   140004acd:	je     0x140004ada
   140004acf:	mov    rcx,rsi
   140004ad2:	call   QWORD PTR [rip+0x5538]        # 0x14000a010
   140004ad8:	xor    ecx,ecx
   140004ada:	mov    rsi,QWORD PTR [rsp+0x68]
   140004adf:	mov    QWORD PTR [rbp-0x70],rsi
   140004ae3:	test   eax,eax
   140004ae5:	je     0x140004b4d
   140004ae7:	mov    QWORD PTR [rsp+0x68],rcx
   140004aec:	lea    rax,[rbp-0x3c]
   140004af0:	mov    QWORD PTR [rsp+0x40],rax
   140004af5:	lea    rax,[rsp+0x68]
   140004afa:	mov    QWORD PTR [rsp+0x38],rax
   140004aff:	mov    QWORD PTR [rsp+0x30],rcx
   140004b04:	mov    DWORD PTR [rsp+0x28],0x2001f
   140004b0c:	mov    DWORD PTR [rsp+0x20],ecx
   140004b10:	xor    r9d,r9d
   140004b13:	xor    r8d,r8d
   140004b16:	mov    rdx,rdi
   140004b19:	mov    rcx,rbx
   140004b1c:	call   QWORD PTR [rip+0x5516]        # 0x14000a038
   140004b22:	xor    edx,edx
   140004b24:	test   eax,eax
   140004b26:	jne    0x140004efb
   140004b2c:	mov    eax,edx
   140004b2e:	test   rsi,rsi
   140004b31:	je     0x140004b3c
   140004b33:	mov    rcx,rsi
   140004b36:	call   QWORD PTR [rip+0x54d4]        # 0x14000a010
   140004b3c:	mov    rsi,QWORD PTR [rsp+0x68]
   140004b41:	mov    QWORD PTR [rbp-0x70],rsi
   140004b45:	test   eax,eax
   140004b47:	jne    0x140004efb
   140004b4d:	mov    rdx,rdi
   140004b50:	mov    rcx,QWORD PTR [rsp+0x70]
   140004b55:	call   0x1400045c8
   140004b5a:	mov    ebx,eax
   140004b5c:	xor    edx,edx
   140004b5e:	test   eax,eax
   140004b60:	js     0x140004f04
   140004b66:	cmp    WORD PTR [rdi],0x3d
   140004b6a:	jne    0x140004b90
   140004b6c:	mov    r9,rdi
   140004b6f:	xor    r8d,r8d
   140004b72:	lea    rdx,[rbp-0x70]
   140004b76:	mov    rcx,QWORD PTR [rsp+0x70]
   140004b7b:	call   0x140003d80
   140004b80:	mov    rsi,QWORD PTR [rbp-0x70]
   140004b84:	xor    edx,edx
   140004b86:	mov    ebx,eax
   140004b88:	test   eax,eax
   140004b8a:	js     0x140004f04
   140004b90:	cmp    WORD PTR [rdi],0x7b
   140004b94:	jne    0x1400047ca
   140004b9a:	or     rax,0xffffffffffffffff
   140004b9e:	inc    rax
   140004ba1:	cmp    WORD PTR [rdi+rax*2],dx
   140004ba5:	jne    0x140004b9e
   140004ba7:	mov    ecx,0x1
   140004bac:	cmp    rax,rcx
   140004baf:	jne    0x1400047ca
   140004bb5:	mov    DWORD PTR [rsp+0x20],edx
   140004bb9:	mov    r9d,DWORD PTR [rsp+0x78]
   140004bbe:	mov    r8,rsi
   140004bc1:	mov    rdx,rdi
   140004bc4:	mov    rcx,QWORD PTR [rsp+0x70]
   140004bc9:	call   0x140004758
   140004bce:	mov    ebx,eax
   140004bd0:	test   eax,eax
   140004bd2:	js     0x140004f04
   140004bd8:	mov    rdx,rdi
   140004bdb:	mov    rcx,QWORD PTR [rsp+0x70]
   140004be0:	jmp    0x1400047bb
   140004be5:	mov    ebx,DWORD PTR [rbp+0x2240]
   140004beb:	test   ebx,ebx
   140004bed:	jne    0x140004c3e
   140004bef:	mov    QWORD PTR [rbp-0x80],rdx
   140004bf3:	lea    rax,[rbp-0x80]
   140004bf7:	mov    QWORD PTR [rsp+0x20],rax
   140004bfc:	mov    r9d,0x20019
   140004c02:	xor    r8d,r8d
   140004c05:	mov    rdx,rdi
   140004c08:	mov    rcx,QWORD PTR [rbp-0x78]
   140004c0c:	call   QWORD PTR [rip+0x5416]        # 0x14000a028
   140004c12:	mov    DWORD PTR [rsp+0x60],eax
   140004c16:	xor    edx,edx
   140004c18:	test   eax,eax
   140004c1a:	jne    0x140004c49
   140004c1c:	mov    eax,edx
   140004c1e:	mov    DWORD PTR [rsp+0x60],edx
   140004c22:	test   rsi,rsi
   140004c25:	je     0x140004c34
   140004c27:	mov    rcx,rsi
   140004c2a:	call   QWORD PTR [rip+0x53e0]        # 0x14000a010
   140004c30:	mov    DWORD PTR [rsp+0x60],eax
   140004c34:	mov    rsi,QWORD PTR [rbp-0x80]
   140004c38:	mov    QWORD PTR [rbp-0x70],rsi
   140004c3c:	jmp    0x140004c47
   140004c3e:	mov    eax,0x2
   140004c43:	mov    DWORD PTR [rsp+0x60],eax
   140004c47:	test   eax,eax
   140004c49:	mov    eax,0x1
   140004c4e:	cmovne ebx,eax
   140004c51:	mov    DWORD PTR [rbp+0x2240],ebx
   140004c57:	or     r9,0xffffffffffffffff
   140004c5b:	mov    r8,rdi
   140004c5e:	mov    edx,0x104
   140004c63:	lea    rcx,[rbp-0x30]
   140004c67:	call   QWORD PTR [rip+0x5783]        # 0x14000a3f0
   140004c6d:	test   eax,eax
   140004c6f:	je     0x140004c95
   140004c71:	cmp    eax,0xc
   140004c74:	je     0x140004ef0
   140004c7a:	cmp    eax,0x16
   140004c7d:	je     0x140004ee5
   140004c83:	cmp    eax,0x22
   140004c86:	je     0x140004ee5
   140004c8c:	cmp    eax,0x50
   140004c8f:	jne    0x140004eda
   140004c95:	mov    rdx,rdi
   140004c98:	mov    rcx,QWORD PTR [rsp+0x70]
   140004c9d:	call   0x1400045c8
   140004ca2:	mov    ebx,eax
   140004ca4:	test   eax,eax
   140004ca6:	js     0x140004f04
   140004cac:	mov    rdx,rdi
   140004caf:	mov    rcx,QWORD PTR [rsp+0x70]
   140004cb4:	call   0x1400042d0
   140004cb9:	mov    ebx,eax
   140004cbb:	xor    edx,edx
   140004cbd:	test   eax,eax
   140004cbf:	js     0x140004f04
   140004cc5:	cmp    WORD PTR [rdi],0x7b
   140004cc9:	jne    0x140004d2c
   140004ccb:	or     rax,0xffffffffffffffff
   140004ccf:	inc    rax
   140004cd2:	cmp    WORD PTR [rdi+rax*2],dx
   140004cd6:	jne    0x140004ccf
   140004cd8:	mov    ecx,0x1
   140004cdd:	cmp    rax,rcx
   140004ce0:	jne    0x140004d2c
   140004ce2:	mov    eax,DWORD PTR [rbp+0x2240]
   140004ce8:	mov    DWORD PTR [rsp+0x20],eax
   140004cec:	xor    r9d,r9d
   140004cef:	mov    r8,rsi
   140004cf2:	mov    rdx,rdi
   140004cf5:	mov    rcx,QWORD PTR [rsp+0x70]
   140004cfa:	call   0x140004758
   140004cff:	mov    ebx,eax
   140004d01:	xor    edx,edx
   140004d03:	test   eax,eax
   140004d05:	jns    0x140004d13
   140004d07:	cmp    DWORD PTR [rbp+0x2240],edx
   140004d0d:	je     0x140004f04
   140004d13:	mov    rdx,rdi
   140004d16:	mov    rcx,QWORD PTR [rsp+0x70]
   140004d1b:	call   0x1400045c8
   140004d20:	mov    ebx,eax
   140004d22:	xor    edx,edx
   140004d24:	test   eax,eax
   140004d26:	js     0x140004f04
   140004d2c:	mov    eax,DWORD PTR [rbp-0x40]
   140004d2f:	mov    DWORD PTR [rbp+0x2240],eax
   140004d35:	mov    ecx,DWORD PTR [rsp+0x60]
   140004d39:	cmp    ecx,0x2
   140004d3c:	je     0x1400047ca
   140004d42:	test   ecx,ecx
   140004d44:	je     0x140004d53
   140004d46:	test   eax,eax
   140004d48:	je     0x140004efd
   140004d4e:	jmp    0x1400047ca
   140004d53:	test   eax,eax
   140004d55:	je     0x140004e0a
   140004d5b:	mov    DWORD PTR [rsp+0x60],edx
   140004d5f:	mov    QWORD PTR [rsp+0x58],rdx
   140004d64:	mov    QWORD PTR [rsp+0x50],rdx
   140004d69:	mov    QWORD PTR [rsp+0x48],rdx
   140004d6e:	mov    QWORD PTR [rsp+0x40],rdx
   140004d73:	mov    QWORD PTR [rsp+0x38],rdx
   140004d78:	mov    QWORD PTR [rsp+0x30],rdx
   140004d7d:	mov    QWORD PTR [rsp+0x28],rdx
   140004d82:	lea    rax,[rsp+0x60]
   140004d87:	mov    QWORD PTR [rsp+0x20],rax
   140004d8c:	xor    r9d,r9d
   140004d8f:	xor    r8d,r8d
   140004d92:	xor    edx,edx
   140004d94:	mov    rcx,rsi
   140004d97:	call   QWORD PTR [rip+0x527b]        # 0x14000a018
   140004d9d:	xor    edx,edx
   140004d9f:	test   eax,eax
   140004da1:	jne    0x140004e0a
   140004da3:	mov    eax,edx
   140004da5:	cmp    DWORD PTR [rsp+0x60],edx
   140004da9:	seta   al
   140004dac:	test   eax,eax
   140004dae:	je     0x140004e0a
   140004db0:	lea    rax,[rip+0x5a49]        # 0x14000a800
   140004db7:	mov    QWORD PTR [rbp-0x80],rax
   140004dbb:	mov    rdx,QWORD PTR [rax]
   140004dbe:	lea    rcx,[rbp-0x30]
   140004dc2:	call   QWORD PTR [rip+0x5340]        # 0x14000a108
   140004dc8:	xor    edx,edx
   140004dca:	test   eax,eax
   140004dcc:	je     0x1400047ca
   140004dd2:	mov    rax,QWORD PTR [rbp-0x80]
   140004dd6:	add    rax,0x8
   140004dda:	mov    QWORD PTR [rbp-0x80],rax
   140004dde:	lea    rcx,[rip+0x5a7b]        # 0x14000a860
   140004de5:	cmp    rax,rcx
   140004de8:	jl     0x140004dbb
   140004dea:	cmp    DWORD PTR [rsp+0x68],edx
   140004dee:	je     0x1400047ca
   140004df4:	lea    rdx,[rbp-0x30]
   140004df8:	lea    rcx,[rbp-0x70]
   140004dfc:	call   0x14000437c
   140004e01:	mov    rsi,QWORD PTR [rbp-0x70]
   140004e05:	jmp    0x1400047ca
   140004e0a:	mov    DWORD PTR [rsp+0x60],edx
   140004e0e:	mov    QWORD PTR [rsp+0x58],rdx
   140004e13:	mov    QWORD PTR [rsp+0x50],rdx
   140004e18:	mov    QWORD PTR [rsp+0x48],rdx
   140004e1d:	mov    QWORD PTR [rsp+0x40],rdx
   140004e22:	mov    QWORD PTR [rsp+0x38],rdx
   140004e27:	mov    QWORD PTR [rsp+0x30],rdx
   140004e2c:	mov    QWORD PTR [rsp+0x28],rdx
   140004e31:	lea    rax,[rsp+0x60]
   140004e36:	mov    QWORD PTR [rsp+0x20],rax
   140004e3b:	xor    r9d,r9d
   140004e3e:	xor    r8d,r8d
   140004e41:	xor    edx,edx
   140004e43:	mov    rcx,rsi
   140004e46:	call   QWORD PTR [rip+0x51cc]        # 0x14000a018
   140004e4c:	xor    edx,edx
   140004e4e:	test   eax,eax
   140004e50:	je     0x140004e58
   140004e52:	mov    DWORD PTR [rsp+0x60],edx
   140004e56:	jmp    0x140004e65
   140004e58:	mov    eax,edx
   140004e5a:	cmp    DWORD PTR [rsp+0x60],edx
   140004e5e:	seta   al
   140004e61:	mov    DWORD PTR [rsp+0x60],eax
   140004e65:	test   rsi,rsi
   140004e68:	je     0x140004e7f
   140004e6a:	mov    rcx,rsi
   140004e6d:	call   QWORD PTR [rip+0x519d]        # 0x14000a010
   140004e73:	xor    edx,edx
   140004e75:	mov    esi,edx
   140004e77:	mov    QWORD PTR [rbp-0x70],rdx
   140004e7b:	test   eax,eax
   140004e7d:	jne    0x140004efb
   140004e7f:	cmp    DWORD PTR [rsp+0x68],edx
   140004e83:	je     0x1400047ca
   140004e89:	cmp    DWORD PTR [rsp+0x60],edx
   140004e8d:	jne    0x1400047ca
   140004e93:	mov    QWORD PTR [rbp-0x50],rdx
   140004e97:	mov    QWORD PTR [rbp-0x48],rdx
   140004e9b:	mov    rax,QWORD PTR [rbp-0x78]
   140004e9f:	mov    QWORD PTR [rbp-0x58],rax
   140004ea3:	lea    rdx,[rbp-0x30]
   140004ea7:	lea    rcx,[rbp-0x58]
   140004eab:	call   0x1400044e4
   140004eb0:	test   eax,eax
   140004eb2:	jne    0x140004efb
   140004eb4:	jmp    0x1400047ca
   140004eb9:	mov    ecx,eax
   140004ebb:	call   0x1400045b4
   140004ec0:	mov    ebx,eax
   140004ec2:	mov    rcx,QWORD PTR [rbp-0x80]
   140004ec6:	test   rcx,rcx
   140004ec9:	je     0x140004f04
   140004ecb:	call   QWORD PTR [rip+0x513f]        # 0x14000a010
   140004ed1:	jmp    0x140004f04
   140004ed3:	mov    ebx,0x80020009
   140004ed8:	jmp    0x140004f04
   140004eda:	mov    ecx,0x80004005
   140004edf:	call   0x1400042a0
   140004ee4:	int3   
   140004ee5:	mov    ecx,0x80070057
   140004eea:	call   0x1400042a0
   140004eef:	int3   
   140004ef0:	mov    ecx,0x8007000e
   140004ef5:	call   0x1400042a0
   140004efa:	int3   
   140004efb:	mov    ecx,eax
   140004efd:	call   0x1400045b4
   140004f02:	mov    ebx,eax
   140004f04:	test   rsi,rsi
   140004f07:	je     0x140004f12
   140004f09:	mov    rcx,rsi
   140004f0c:	call   QWORD PTR [rip+0x50fe]        # 0x14000a010
   140004f12:	mov    eax,ebx
   140004f14:	mov    rcx,QWORD PTR [rbp+0x21e0]
   140004f1b:	xor    rcx,rsp
   140004f1e:	call   0x1400081f0
   140004f23:	add    rsp,0x22f8
   140004f2a:	pop    rdi
   140004f2b:	pop    rsi
   140004f2c:	pop    rbx
   140004f2d:	pop    rbp
   140004f2e:	ret    
   140004f2f:	int3   
   140004f30:	int3   
   140004f31:	int3   
   140004f32:	int3   
   140004f33:	int3   
   140004f34:	int3   
   140004f35:	int3   
   140004f36:	int3   
   140004f37:	int3   
   140004f38:	mov    QWORD PTR [rsp+0x20],rbx
   140004f3d:	push   rbp
   140004f3e:	push   rsi
   140004f3f:	push   rdi
   140004f40:	push   r12
   140004f42:	push   r13
   140004f44:	push   r14
   140004f46:	push   r15
   140004f48:	mov    eax,0x2050
   140004f4d:	call   0x140008c20
   140004f52:	sub    rsp,rax
   140004f55:	mov    rax,QWORD PTR [rip+0x90b4]        # 0x14000e010
   140004f5c:	xor    rax,rsp
   140004f5f:	mov    QWORD PTR [rsp+0x2040],rax
   140004f67:	xor    r12d,r12d
   140004f6a:	mov    r15d,r8d
   140004f6d:	mov    QWORD PTR [rsp+0x30],r12
   140004f72:	mov    rdi,rcx
   140004f75:	mov    ebp,r12d
   140004f78:	test   rdx,rdx
   140004f7b:	je     0x140004f90
   140004f7d:	lea    r8,[rsp+0x30]
   140004f82:	call   0x140003980
   140004f87:	mov    rbp,QWORD PTR [rsp+0x30]
   140004f8c:	mov    ebx,eax
   140004f8e:	jmp    0x140004f95
   140004f90:	mov    ebx,0x80004003
   140004f95:	test   ebx,ebx
   140004f97:	js     0x1400050c3
   140004f9d:	mov    QWORD PTR [rdi],rbp
   140004fa0:	cmp    r12w,WORD PTR [rbp+0x0]
   140004fa5:	je     0x1400050ba
   140004fab:	lea    r13,[rip+0x5e3e]        # 0x14000adf0
   140004fb2:	lea    rdx,[rsp+0x40]
   140004fb7:	mov    rcx,rdi
   140004fba:	call   0x1400045c8
   140004fbf:	mov    ebx,eax
   140004fc1:	test   eax,eax
   140004fc3:	js     0x1400050ba
   140004fc9:	mov    esi,r12d
   140004fcc:	mov    rbx,r12
   140004fcf:	mov    r14,r13
   140004fd2:	mov    rdx,QWORD PTR [r14]
   140004fd5:	lea    rcx,[rsp+0x40]
   140004fda:	call   QWORD PTR [rip+0x5128]        # 0x14000a108
   140004fe0:	test   eax,eax
   140004fe2:	je     0x140004ffb
   140004fe4:	inc    esi
   140004fe6:	inc    rbx
   140004fe9:	movsxd rax,esi
   140004fec:	add    r14,0x10
   140004ff0:	cmp    rax,0xe
   140004ff4:	jb     0x140004fd2
   140004ff6:	mov    rsi,r12
   140004ff9:	jmp    0x140005003
   140004ffb:	add    rbx,rbx
   140004ffe:	mov    rsi,QWORD PTR [r13+rbx*8+0x8]
   140005003:	test   rsi,rsi
   140005006:	je     0x1400050b5
   14000500c:	lea    rdx,[rsp+0x40]
   140005011:	mov    rcx,rdi
   140005014:	call   0x1400045c8
   140005019:	mov    ebx,eax
   14000501b:	test   eax,eax
   14000501d:	js     0x1400050ba
   140005023:	mov    eax,0x7b
   140005028:	cmp    ax,WORD PTR [rsp+0x40]
   14000502d:	jne    0x1400050b5
   140005033:	mov    DWORD PTR [rsp+0x20],r12d
   140005038:	mov    r8,rsi
   14000503b:	lea    rdx,[rsp+0x40]
   140005040:	mov    rcx,rdi
   140005043:	test   r15d,r15d
   140005046:	je     0x140005076
   140005048:	mov    r14,QWORD PTR [rdi]
   14000504b:	mov    r9d,r15d
   14000504e:	call   0x140004758
   140005053:	mov    ebx,eax
   140005055:	test   eax,eax
   140005057:	jns    0x140005084
   140005059:	xor    r9d,r9d
   14000505c:	mov    QWORD PTR [rdi],r14
   14000505f:	mov    r8,rsi
   140005062:	mov    DWORD PTR [rsp+0x20],r12d
   140005067:	lea    rdx,[rsp+0x40]
   14000506c:	mov    rcx,rdi
   14000506f:	call   0x140004758
   140005074:	jmp    0x1400050ba
   140005076:	xor    r9d,r9d
   140005079:	call   0x140004758
   14000507e:	mov    ebx,eax
   140005080:	test   eax,eax
   140005082:	js     0x1400050ba
   140005084:	mov    rcx,QWORD PTR [rdi]
   140005087:	movzx  eax,WORD PTR [rcx]
   14000508a:	cmp    eax,0x20
   14000508d:	ja     0x1400050aa
   14000508f:	movabs rdx,0x100002600
   140005099:	bt     rdx,rax
   14000509d:	jae    0x1400050aa
   14000509f:	call   QWORD PTR [rip+0x5143]        # 0x14000a1e8
   1400050a5:	mov    QWORD PTR [rdi],rax
   1400050a8:	jmp    0x140005084
   1400050aa:	cmp    r12w,WORD PTR [rcx]
   1400050ae:	je     0x1400050ba
   1400050b0:	jmp    0x140004fb2
   1400050b5:	mov    ebx,0x80020009
   1400050ba:	mov    rcx,rbp
   1400050bd:	call   QWORD PTR [rip+0x5185]        # 0x14000a248
   1400050c3:	mov    eax,ebx
   1400050c5:	mov    rcx,QWORD PTR [rsp+0x2040]
   1400050cd:	xor    rcx,rsp
   1400050d0:	call   0x1400081f0
   1400050d5:	mov    rbx,QWORD PTR [rsp+0x20a8]
   1400050dd:	add    rsp,0x2050
   1400050e4:	pop    r15
   1400050e6:	pop    r14
   1400050e8:	pop    r13
   1400050ea:	pop    r12
   1400050ec:	pop    rdi
   1400050ed:	pop    rsi
   1400050ee:	pop    rbp
   1400050ef:	ret    
   1400050f0:	int3   
   1400050f1:	int3   
   1400050f2:	int3   
   1400050f3:	int3   
   1400050f4:	int3   
   1400050f5:	int3   
   1400050f6:	int3   
   1400050f7:	int3   
   1400050f8:	mov    rax,rsp
   1400050fb:	push   rsi
   1400050fc:	push   rdi
   1400050fd:	push   r14
   1400050ff:	sub    rsp,0x490
   140005106:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14000510f:	mov    QWORD PTR [rax+0x8],rbx
   140005113:	mov    rax,QWORD PTR [rip+0x8ef6]        # 0x14000e010
   14000511a:	xor    rax,rsp
   14000511d:	mov    QWORD PTR [rsp+0x480],rax
   140005125:	mov    r14,r9
   140005128:	mov    rdi,r8
   14000512b:	mov    rax,rdx
   14000512e:	xor    ebx,ebx
   140005130:	mov    QWORD PTR [rsp+0x60],rbx
   140005135:	mov    QWORD PTR [rsp+0x50],rcx
   14000513a:	mov    QWORD PTR [rsp+0x48],rbx
   14000513f:	mov    QWORD PTR [rsp+0x70],rbx
   140005144:	xor    edx,edx
   140005146:	lea    r8d,[rbx+0x2]
   14000514a:	mov    rcx,rax
   14000514d:	call   QWORD PTR [rip+0x4fa5]        # 0x14000a0f8
   140005153:	mov    rsi,rax
   140005156:	mov    QWORD PTR [rsp+0x38],rax
   14000515b:	test   rax,rax
   14000515e:	jne    0x14000516c
   140005160:	call   0x14000380c
   140005165:	mov    ebx,eax
   140005167:	jmp    0x14000529c
   14000516c:	xor    r9d,r9d
   14000516f:	mov    r8,rdi
   140005172:	mov    rdx,r14
   140005175:	mov    rcx,rax
   140005178:	call   QWORD PTR [rip+0x4ff2]        # 0x14000a170
   14000517e:	mov    rdi,rax
   140005181:	test   rax,rax
   140005184:	jne    0x140005190
   140005186:	call   0x14000380c
   14000518b:	jmp    0x140005290
   140005190:	mov    rdx,rax
   140005193:	mov    rcx,rsi
   140005196:	call   QWORD PTR [rip+0x4fbc]        # 0x14000a158
   14000519c:	mov    r14,rax
   14000519f:	mov    QWORD PTR [rsp+0x40],rax
   1400051a4:	test   rax,rax
   1400051a7:	je     0x140005186
   1400051a9:	mov    rdx,rdi
   1400051ac:	mov    rcx,rsi
   1400051af:	call   QWORD PTR [rip+0x4f9b]        # 0x14000a150
   1400051b5:	mov    edi,eax
   1400051b7:	mov    DWORD PTR [rsp+0x30],eax
   1400051bb:	inc    eax
   1400051bd:	cmp    eax,edi
   1400051bf:	jae    0x1400051e2
   1400051c1:	lea    rax,[rsp+0x78]
   1400051c6:	cmp    QWORD PTR [rsp+0x70],rax
   1400051cb:	je     0x1400051d8
   1400051cd:	lea    rcx,[rsp+0x70]
   1400051d2:	call   0x1400037a8
   1400051d7:	nop
   1400051d8:	mov    eax,0x8007000e
   1400051dd:	jmp    0x1400052b5
   1400051e2:	mov    ecx,eax
   1400051e4:	test   eax,eax
   1400051e6:	je     0x14000521f
   1400051e8:	xor    edx,edx
   1400051ea:	or     rax,0xffffffffffffffff
   1400051ee:	div    rcx
   1400051f1:	cmp    rax,0x2
   1400051f5:	jb     0x140005215
   1400051f7:	lea    rdx,[rcx+rcx*1]
   1400051fb:	cmp    rdx,0x400
   140005202:	jbe    0x14000521f
   140005204:	lea    rcx,[rsp+0x70]
   140005209:	call   0x1400037d8
   14000520e:	mov    rax,QWORD PTR [rsp+0x70]
   140005213:	jmp    0x140005229
   140005215:	mov    ecx,0x80070057
   14000521a:	call   0x1400042a0
   14000521f:	lea    rax,[rsp+0x78]
   140005224:	mov    QWORD PTR [rsp+0x70],rax
   140005229:	jmp    0x140005240
   14000522b:	xor    ebx,ebx
   14000522d:	mov    rax,QWORD PTR [rsp+0x70]
   140005232:	mov    rsi,QWORD PTR [rsp+0x38]
   140005237:	mov    r14,QWORD PTR [rsp+0x40]
   14000523c:	mov    edi,DWORD PTR [rsp+0x30]
   140005240:	test   rax,rax
   140005243:	jne    0x14000524c
   140005245:	mov    ebx,0x8007000e
   14000524a:	jmp    0x140005292
   14000524c:	mov    DWORD PTR [rsp+0x28],edi
   140005250:	mov    QWORD PTR [rsp+0x20],rax
   140005255:	mov    r9d,edi
   140005258:	mov    r8,r14
   14000525b:	xor    edx,edx
   14000525d:	lea    ecx,[rdx+0x3]
   140005260:	call   QWORD PTR [rip+0x4ee2]        # 0x14000a148
   140005266:	test   eax,eax
   140005268:	je     0x140005186
   14000526e:	mov    ecx,eax
   140005270:	mov    rax,QWORD PTR [rsp+0x70]
   140005275:	mov    WORD PTR [rax+rcx*2],bx
   140005279:	mov    r8d,DWORD PTR [rsp+0x4d0]
   140005281:	mov    rdx,QWORD PTR [rsp+0x70]
   140005286:	lea    rcx,[rsp+0x48]
   14000528b:	call   0x140004f38
   140005290:	mov    ebx,eax
   140005292:	mov    rcx,rsi
   140005295:	call   QWORD PTR [rip+0x4e55]        # 0x14000a0f0
   14000529b:	nop
   14000529c:	lea    rax,[rsp+0x78]
   1400052a1:	cmp    QWORD PTR [rsp+0x70],rax
   1400052a6:	je     0x1400052b3
   1400052a8:	lea    rcx,[rsp+0x70]
   1400052ad:	call   0x1400037a8
   1400052b2:	nop
   1400052b3:	mov    eax,ebx
   1400052b5:	mov    rcx,QWORD PTR [rsp+0x480]
   1400052bd:	xor    rcx,rsp
   1400052c0:	call   0x1400081f0
   1400052c5:	mov    rbx,QWORD PTR [rsp+0x4b0]
   1400052cd:	add    rsp,0x490
   1400052d4:	pop    r14
   1400052d6:	pop    rdi
   1400052d7:	pop    rsi
   1400052d8:	ret    
   1400052d9:	int3   
   1400052da:	int3   
   1400052db:	int3   
   1400052dc:	int3   
   1400052dd:	int3   
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400052e5:	push   rbp
   1400052e6:	push   rsi
   1400052e7:	push   rdi
   1400052e8:	push   r14
   1400052ea:	push   r15
   1400052ec:	lea    rbp,[rsp-0x9d0]
   1400052f4:	sub    rsp,0xad0
   1400052fb:	mov    rax,QWORD PTR [rip+0x8d0e]        # 0x14000e010
   140005302:	xor    rax,rsp
   140005305:	mov    QWORD PTR [rbp+0x9c0],rax
   14000530c:	mov    rdi,QWORD PTR [rip+0x9435]        # 0x14000e748
   140005313:	lea    rax,[rip+0x5616]        # 0x14000a930
   14000531a:	xor    r15d,r15d
   14000531d:	mov    esi,edx
   14000531f:	mov    r14d,r8d
   140005322:	mov    QWORD PTR [rsp+0x30],rax
   140005327:	xor    edx,edx
   140005329:	mov    QWORD PTR [rsp+0x38],r15
   14000532e:	lea    rcx,[rsp+0x50]
   140005333:	mov    QWORD PTR [rsp+0x40],r15
   140005338:	lea    r8d,[r15+0x28]
   14000533c:	mov    DWORD PTR [rsp+0x48],r15d
   140005341:	mov    rbx,r9
   140005344:	call   0x14000864c
   140005349:	lea    rcx,[rsp+0x50]
   14000534e:	mov    BYTE PTR [rsp+0x78],r15b
   140005353:	call   0x14000343c
   140005358:	test   eax,eax
   14000535a:	js     0x1400053ca
   14000535c:	mov    BYTE PTR [rsp+0x78],0x1
   140005361:	test   rbx,rbx
   140005364:	je     0x140005385
   140005366:	jmp    0x14000537d
   140005368:	mov    r8,QWORD PTR [rbx+0x8]
   14000536c:	lea    rcx,[rsp+0x30]
   140005371:	mov    rdx,rax
   140005374:	call   0x140003720
   140005379:	lea    rbx,[rbx+0x10]
   14000537d:	mov    rax,QWORD PTR [rbx]
   140005380:	test   rax,rax
   140005383:	jne    0x140005368
   140005385:	mov    rax,QWORD PTR [rdi]
   140005388:	mov    rbx,QWORD PTR [rax+0x28]
   14000538c:	mov    rcx,rbx
   14000538f:	call   QWORD PTR [rip+0x5123]        # 0x14000a4b8
   140005395:	lea    rdx,[rsp+0x30]
   14000539a:	mov    rcx,rdi
   14000539d:	call   rbx
   14000539f:	mov    ebx,eax
   1400053a1:	test   eax,eax
   1400053a3:	js     0x1400053cc
   1400053a5:	mov    rbx,QWORD PTR [rip+0xbcac]        # 0x140011058
   1400053ac:	lea    rdx,[rbp-0x80]
   1400053b0:	mov    edi,0x104
   1400053b5:	mov    rcx,rbx
   1400053b8:	mov    r8d,edi
   1400053bb:	call   QWORD PTR [rip+0x4db7]        # 0x14000a178
   1400053c1:	test   eax,eax
   1400053c3:	jne    0x1400053fe
   1400053c5:	call   0x14000380c
   1400053ca:	mov    ebx,eax
   1400053cc:	lea    rcx,[rsp+0x30]
   1400053d1:	call   0x140003394
   1400053d6:	mov    eax,ebx
   1400053d8:	mov    rcx,QWORD PTR [rbp+0x9c0]
   1400053df:	xor    rcx,rsp
   1400053e2:	call   0x1400081f0
   1400053e7:	mov    rbx,QWORD PTR [rsp+0xb00]
   1400053ef:	add    rsp,0xad0
   1400053f6:	pop    r15
   1400053f8:	pop    r14
   1400053fa:	pop    rdi
   1400053fb:	pop    rsi
   1400053fc:	pop    rbp
   1400053fd:	ret    
   1400053fe:	cmp    eax,edi
   140005400:	jne    0x140005409
   140005402:	mov    ebx,0x8007007a
   140005407:	jmp    0x1400053cc
   140005409:	lea    rdx,[rbp-0x80]
   14000540d:	mov    ecx,r15d
   140005410:	mov    r9d,0x27
   140005416:	movzx  r8d,WORD PTR [rdx]
   14000541a:	test   r8w,r8w
   14000541e:	je     0x140005452
   140005420:	mov    eax,ecx
   140005422:	mov    WORD PTR [rbp+rax*2+0x190],r8w
   14000542b:	cmp    r8w,r9w
   14000542f:	jne    0x140005444
   140005431:	cmp    ecx,0x206
   140005437:	jae    0x140005444
   140005439:	inc    ecx
   14000543b:	mov    WORD PTR [rbp+rcx*2+0x190],r9w
   140005444:	add    rdx,0x2
   140005448:	inc    ecx
   14000544a:	cmp    ecx,0x207
   140005450:	jb     0x140005416
   140005452:	mov    eax,ecx
   140005454:	mov    WORD PTR [rbp+rax*2+0x190],r15w
   14000545d:	test   rbx,rbx
   140005460:	je     0x14000547b
   140005462:	xor    ecx,ecx
   140005464:	call   QWORD PTR [rip+0x4c96]        # 0x14000a100
   14000546a:	cmp    rbx,rax
   14000546d:	je     0x14000547b
   14000546f:	lea    r8,[rbp+0x190]
   140005476:	jmp    0x14000550a
   14000547b:	mov    edi,0x22
   140005480:	lea    rcx,[rbp+0x190]
   140005487:	or     rbx,0xffffffffffffffff
   14000548b:	mov    WORD PTR [rbp+0x5a0],di
   140005492:	mov    rax,rbx
   140005495:	inc    rax
   140005498:	cmp    WORD PTR [rcx+rax*2],r15w
   14000549d:	jne    0x140005495
   14000549f:	inc    eax
   1400054a1:	lea    r8,[rbp+0x190]
   1400054a8:	movsxd r9,eax
   1400054ab:	lea    rcx,[rbp+0x5a2]
   1400054b2:	add    r9,r9
   1400054b5:	mov    edx,0x416
   1400054ba:	call   QWORD PTR [rip+0x4e38]        # 0x14000a2f8
   1400054c0:	test   eax,eax
   1400054c2:	je     0x1400054ce
   1400054c4:	mov    ebx,0x80004005
   1400054c9:	jmp    0x1400053cc
   1400054ce:	lea    rax,[rbp+0x5a0]
   1400054d5:	inc    rbx
   1400054d8:	cmp    WORD PTR [rax+rbx*2],r15w
   1400054dd:	jne    0x1400054d5
   1400054df:	movsxd rax,ebx
   1400054e2:	mov    WORD PTR [rbp+rax*2+0x5a0],di
   1400054ea:	lea    rax,[rax*2+0x2]
   1400054f2:	cmp    rax,0x418
   1400054f8:	jae    0x140005575
   1400054fa:	mov    WORD PTR [rbp+rax*1+0x5a0],r15w
   140005503:	lea    r8,[rbp+0x5a0]
   14000550a:	lea    rdx,[rip+0x572f]        # 0x14000ac40
   140005511:	lea    rcx,[rsp+0x30]
   140005516:	call   0x140003720
   14000551b:	test   eax,eax
   14000551d:	js     0x1400053ca
   140005523:	lea    r8,[rbp+0x190]
   14000552a:	lea    rdx,[rip+0x571f]        # 0x14000ac50
   140005531:	lea    rcx,[rsp+0x30]
   140005536:	call   0x140003720
   14000553b:	test   eax,eax
   14000553d:	js     0x1400053ca
   140005543:	movzx  r8d,si
   140005547:	lea    r9,[rip+0x571a]        # 0x14000ac68
   14000554e:	lea    rdx,[rbp-0x80]
   140005552:	lea    rcx,[rsp+0x30]
   140005557:	test   r14d,r14d
   14000555a:	je     0x140005566
   14000555c:	mov    DWORD PTR [rsp+0x20],0x1
   140005564:	jmp    0x14000556b
   140005566:	mov    DWORD PTR [rsp+0x20],r15d
   14000556b:	call   0x1400050f8
   140005570:	jmp    0x1400053ca
   140005575:	call   0x140008478
   14000557a:	int3   
   14000557b:	int3   
   14000557c:	int3   
   14000557d:	int3   
   14000557e:	int3   
   14000557f:	int3   
   140005580:	int3   
   140005581:	int3   
   140005582:	int3   
   140005583:	int3   
   140005584:	sub    rsp,0x28
   140005588:	cmp    BYTE PTR [rcx+0x28],0x0
   14000558c:	je     0x140005598
   14000558e:	mov    BYTE PTR [rcx+0x28],0x0
   140005592:	call   QWORD PTR [rip+0x4af8]        # 0x14000a090
   140005598:	add    rsp,0x28
   14000559c:	ret    
   14000559d:	int3   
   14000559e:	int3   
   14000559f:	int3   
   1400055a0:	int3   
   1400055a1:	int3   
   1400055a2:	int3   
   1400055a3:	int3   
   1400055a4:	sub    rsp,0x48
   1400055a8:	mov    rax,QWORD PTR [rip+0x8a61]        # 0x14000e010
   1400055af:	xor    rax,rsp
   1400055b2:	mov    QWORD PTR [rsp+0x30],rax
   1400055b7:	xor    r9d,r9d
   1400055ba:	test   r8,r8
   1400055bd:	je     0x1400055d6
   1400055bf:	or     rax,0xffffffffffffffff
   1400055c3:	inc    rax
   1400055c6:	cmp    WORD PTR [r8+rax*2],r9w
   1400055cb:	jne    0x1400055c3
   1400055cd:	lea    ecx,[rax*2+0x2]
   1400055d4:	jmp    0x1400055db
   1400055d6:	mov    ecx,0xa
   1400055db:	test   r8,r8
   1400055de:	mov    DWORD PTR [rsp+0x28],ecx
   1400055e2:	mov    rcx,QWORD PTR [rip+0x91c7]        # 0x14000e7b0
   1400055e9:	lea    rax,[rip+0x5a10]        # 0x14000b000
   1400055f0:	cmovne rax,r8
   1400055f4:	mov    DWORD PTR [rsp+0x2c],r9d
   1400055f9:	mov    r8d,0x1
   1400055ff:	mov    QWORD PTR [rsp+0x20],rax
   140005604:	lea    r9,[rsp+0x20]
   140005609:	call   QWORD PTR [rip+0x4a39]        # 0x14000a048
   14000560f:	mov    rcx,QWORD PTR [rsp+0x30]
   140005614:	xor    rcx,rsp
   140005617:	call   0x1400081f0
   14000561c:	add    rsp,0x48
   140005620:	ret    
   140005621:	int3   
   140005622:	int3   
   140005623:	int3   
   140005624:	int3   
   140005625:	int3   
   140005626:	int3   
   140005627:	int3   
   140005628:	rex push rbx
   14000562a:	sub    rsp,0x60
   14000562e:	mov    rax,QWORD PTR [rip+0x89db]        # 0x14000e010
   140005635:	xor    rax,rsp
   140005638:	mov    QWORD PTR [rsp+0x50],rax
   14000563d:	or     rcx,0xffffffffffffffff
   140005641:	xor    ebx,ebx
   140005643:	mov    r10d,0xa
   140005649:	test   r8,r8
   14000564c:	je     0x140005664
   14000564e:	mov    rax,rcx
   140005651:	inc    rax
   140005654:	cmp    WORD PTR [r8+rax*2],bx
   140005659:	jne    0x140005651
   14000565b:	lea    edx,[rax*2+0x2]
   140005662:	jmp    0x140005667
   140005664:	mov    edx,r10d
   140005667:	test   r8,r8
   14000566a:	mov    DWORD PTR [rsp+0x28],edx
   14000566e:	lea    r11,[rip+0x598b]        # 0x14000b000
   140005675:	mov    DWORD PTR [rsp+0x2c],ebx
   140005679:	mov    rax,r11
   14000567c:	cmovne rax,r8
   140005680:	mov    QWORD PTR [rsp+0x20],rax
   140005685:	test   r9,r9
   140005688:	je     0x14000569f
   14000568a:	inc    rcx
   14000568d:	cmp    WORD PTR [r9+rcx*2],bx
   140005692:	jne    0x14000568a
   140005694:	lea    r10d,[rcx*2+0x2]
   14000569c:	test   r9,r9
   14000569f:	mov    rcx,QWORD PTR [rip+0x910a]        # 0x14000e7b0
   1400056a6:	lea    rax,[rsp+0x90]
   1400056ae:	cmovne r11,r9
   1400056b2:	mov    QWORD PTR [rsp+0x40],rax
   1400056b7:	lea    r9,[rsp+0x20]
   1400056bc:	mov    QWORD PTR [rsp+0x30],r11
   1400056c1:	mov    r8d,0x3
   1400056c7:	mov    DWORD PTR [rsp+0x38],r10d
   1400056cc:	lea    rdx,[rip+0x58fd]        # 0x14000afd0
   1400056d3:	mov    DWORD PTR [rsp+0x3c],ebx
   1400056d7:	mov    QWORD PTR [rsp+0x48],0x4
   1400056e0:	call   QWORD PTR [rip+0x4962]        # 0x14000a048
   1400056e6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400056eb:	xor    rcx,rsp
   1400056ee:	call   0x1400081f0
   1400056f3:	add    rsp,0x60
   1400056f7:	pop    rbx
   1400056f8:	ret    
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	mov    DWORD PTR [rsp+0x20],r9d
   140005705:	push   rbp
   140005706:	mov    rbp,rsp
   140005709:	sub    rsp,0x60
   14000570d:	mov    rax,QWORD PTR [rip+0x88fc]        # 0x14000e010
   140005714:	xor    rax,rsp
   140005717:	mov    QWORD PTR [rbp-0x10],rax
   14000571b:	xor    edx,edx
   14000571d:	test   r8,r8
   140005720:	je     0x140005739
   140005722:	or     rax,0xffffffffffffffff
   140005726:	inc    rax
   140005729:	cmp    WORD PTR [r8+rax*2],dx
   14000572e:	jne    0x140005726
   140005730:	lea    ecx,[rax*2+0x2]
   140005737:	jmp    0x14000573e
   140005739:	mov    ecx,0xa
   14000573e:	test   r8,r8
   140005741:	mov    DWORD PTR [rbp-0x38],ecx
   140005744:	mov    rcx,QWORD PTR [rip+0x9065]        # 0x14000e7b0
   14000574b:	lea    rax,[rip+0x58ae]        # 0x14000b000
   140005752:	cmovne rax,r8
   140005756:	mov    DWORD PTR [rbp-0x34],edx
   140005759:	mov    QWORD PTR [rbp-0x40],rax
   14000575d:	lea    r9,[rbp-0x40]
   140005761:	lea    rax,[rbp+0x28]
   140005765:	mov    QWORD PTR [rbp-0x28],0x4
   14000576d:	mov    QWORD PTR [rbp-0x30],rax
   140005771:	lea    rdx,[rip+0x5848]        # 0x14000afc0
   140005778:	lea    rax,[rbp+0x30]
   14000577c:	mov    QWORD PTR [rbp-0x18],0x4
   140005784:	mov    r8d,0x3
   14000578a:	mov    QWORD PTR [rbp-0x20],rax
   14000578e:	call   QWORD PTR [rip+0x48b4]        # 0x14000a048
   140005794:	mov    rcx,QWORD PTR [rbp-0x10]
   140005798:	xor    rcx,rsp
   14000579b:	call   0x1400081f0
   1400057a0:	add    rsp,0x60
   1400057a4:	pop    rbp
   1400057a5:	ret    
   1400057a6:	int3   
   1400057a7:	int3   
   1400057a8:	int3   
   1400057a9:	int3   
   1400057aa:	int3   
   1400057ab:	int3   
   1400057ac:	mov    r11,rsp
   1400057af:	mov    DWORD PTR [r11+0x18],r8d
   1400057b3:	sub    rsp,0x58
   1400057b7:	mov    rax,QWORD PTR [rip+0x8852]        # 0x14000e010
   1400057be:	xor    rax,rsp
   1400057c1:	mov    QWORD PTR [rsp+0x40],rax
   1400057c6:	xor    edx,edx
   1400057c8:	mov    QWORD PTR [r11-0x30],0x4
   1400057d0:	lea    rax,[r11+0x18]
   1400057d4:	mov    QWORD PTR [r11-0x38],rax
   1400057d8:	test   r9,r9
   1400057db:	je     0x1400057f4
   1400057dd:	or     rax,0xffffffffffffffff
   1400057e1:	inc    rax
   1400057e4:	cmp    WORD PTR [r9+rax*2],dx
   1400057e9:	jne    0x1400057e1
   1400057eb:	lea    ecx,[rax*2+0x2]
   1400057f2:	jmp    0x1400057f9
   1400057f4:	mov    ecx,0xa
   1400057f9:	test   r9,r9
   1400057fc:	mov    DWORD PTR [rsp+0x38],ecx
   140005800:	mov    rcx,QWORD PTR [rip+0x8fa9]        # 0x14000e7b0
   140005807:	lea    rax,[rip+0x57f2]        # 0x14000b000
   14000580e:	cmovne rax,r9
   140005812:	mov    DWORD PTR [rsp+0x3c],edx
   140005816:	lea    r9,[rsp+0x20]
   14000581b:	mov    QWORD PTR [rsp+0x30],rax
   140005820:	mov    r8d,0x2
   140005826:	lea    rdx,[rip+0x5773]        # 0x14000afa0
   14000582d:	call   QWORD PTR [rip+0x4815]        # 0x14000a048
   140005833:	mov    rcx,QWORD PTR [rsp+0x40]
   140005838:	xor    rcx,rsp
   14000583b:	call   0x1400081f0
   140005840:	add    rsp,0x58
   140005844:	ret    
   140005845:	int3   
   140005846:	int3   
   140005847:	int3   
   140005848:	int3   
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	mov    DWORD PTR [rsp+0x20],r9d
   140005851:	sub    rsp,0x58
   140005855:	mov    rax,QWORD PTR [rip+0x87b4]        # 0x14000e010
   14000585c:	xor    rax,rsp
   14000585f:	mov    QWORD PTR [rsp+0x40],rax
   140005864:	xor    edx,edx
   140005866:	test   r8,r8
   140005869:	je     0x140005882
   14000586b:	or     rax,0xffffffffffffffff
   14000586f:	inc    rax
   140005872:	cmp    WORD PTR [r8+rax*2],dx
   140005877:	jne    0x14000586f
   140005879:	lea    ecx,[rax*2+0x2]
   140005880:	jmp    0x140005887
   140005882:	mov    ecx,0xa
   140005887:	test   r8,r8
   14000588a:	mov    DWORD PTR [rsp+0x28],ecx
   14000588e:	mov    rcx,QWORD PTR [rip+0x8f1b]        # 0x14000e7b0
   140005895:	lea    rax,[rip+0x5764]        # 0x14000b000
   14000589c:	cmovne rax,r8
   1400058a0:	mov    DWORD PTR [rsp+0x2c],edx
   1400058a4:	mov    QWORD PTR [rsp+0x20],rax
   1400058a9:	lea    r9,[rsp+0x20]
   1400058ae:	lea    rax,[rsp+0x78]
   1400058b3:	mov    QWORD PTR [rsp+0x38],0x4
   1400058bc:	mov    r8d,0x2
   1400058c2:	mov    QWORD PTR [rsp+0x30],rax
   1400058c7:	lea    rdx,[rip+0x56c2]        # 0x14000af90
   1400058ce:	call   QWORD PTR [rip+0x4774]        # 0x14000a048
   1400058d4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400058d9:	xor    rcx,rsp
   1400058dc:	call   0x1400081f0
   1400058e1:	add    rsp,0x58
   1400058e5:	ret    
   1400058e6:	int3   
   1400058e7:	int3   
   1400058e8:	int3   
   1400058e9:	int3   
   1400058ea:	int3   
   1400058eb:	int3   
   1400058ec:	rex push rbx
   1400058ee:	sub    rsp,0x50
   1400058f2:	mov    rax,QWORD PTR [rip+0x8717]        # 0x14000e010
   1400058f9:	xor    rax,rsp
   1400058fc:	mov    QWORD PTR [rsp+0x40],rax
   140005901:	or     rcx,0xffffffffffffffff
   140005905:	xor    ebx,ebx
   140005907:	mov    r10d,0xa
   14000590d:	test   r8,r8
   140005910:	je     0x140005928
   140005912:	mov    rax,rcx
   140005915:	inc    rax
   140005918:	cmp    WORD PTR [r8+rax*2],bx
   14000591d:	jne    0x140005915
   14000591f:	lea    edx,[rax*2+0x2]
   140005926:	jmp    0x14000592b
   140005928:	mov    edx,r10d
   14000592b:	test   r8,r8
   14000592e:	mov    DWORD PTR [rsp+0x28],edx
   140005932:	lea    r11,[rip+0x56c7]        # 0x14000b000
   140005939:	mov    DWORD PTR [rsp+0x2c],ebx
   14000593d:	mov    rax,r11
   140005940:	cmovne rax,r8
   140005944:	mov    QWORD PTR [rsp+0x20],rax
   140005949:	test   r9,r9
   14000594c:	je     0x140005963
   14000594e:	inc    rcx
   140005951:	cmp    WORD PTR [r9+rcx*2],bx
   140005956:	jne    0x14000594e
   140005958:	lea    r10d,[rcx*2+0x2]
   140005960:	test   r9,r9
   140005963:	mov    rcx,QWORD PTR [rip+0x8e46]        # 0x14000e7b0
   14000596a:	lea    rdx,[rip+0x560f]        # 0x14000af80
   140005971:	cmovne r11,r9
   140005975:	mov    DWORD PTR [rsp+0x38],r10d
   14000597a:	lea    r9,[rsp+0x20]
   14000597f:	mov    QWORD PTR [rsp+0x30],r11
   140005984:	mov    r8d,0x2
   14000598a:	mov    DWORD PTR [rsp+0x3c],ebx
   14000598e:	call   QWORD PTR [rip+0x46b4]        # 0x14000a048
   140005994:	mov    rcx,QWORD PTR [rsp+0x40]
   140005999:	xor    rcx,rsp
   14000599c:	call   0x1400081f0
   1400059a1:	add    rsp,0x50
   1400059a5:	pop    rbx
   1400059a6:	ret    
   1400059a7:	int3   
   1400059a8:	int3   
   1400059a9:	int3   
   1400059aa:	int3   
   1400059ab:	int3   
   1400059ac:	int3   
   1400059ad:	int3   
   1400059ae:	int3   
   1400059af:	int3   
   1400059b0:	mov    rax,rsp
   1400059b3:	push   rbp
   1400059b4:	push   rdi
   1400059b5:	push   r12
   1400059b7:	push   r13
   1400059b9:	push   r14
   1400059bb:	lea    rbp,[rax-0x1b8]
   1400059c2:	sub    rsp,0x290
   1400059c9:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   1400059d2:	mov    QWORD PTR [rax+0x8],rbx
   1400059d6:	mov    QWORD PTR [rax+0x18],rsi
   1400059da:	mov    rax,QWORD PTR [rip+0x862f]        # 0x14000e010
   1400059e1:	xor    rax,rsp
   1400059e4:	mov    QWORD PTR [rbp+0x180],rax
   1400059eb:	mov    ebx,r8d
   1400059ee:	mov    r14,rdx
   1400059f1:	and    QWORD PTR [rsp+0x40],0x0
   1400059f7:	and    QWORD PTR [rsp+0x38],0x0
   1400059fd:	xor    r13d,r13d
   140005a00:	and    QWORD PTR [rsp+0x48],r13
   140005a05:	and    QWORD PTR [rsp+0x50],r13
   140005a0a:	test   r8d,r8d
   140005a0d:	je     0x140005a24
   140005a0f:	test   BYTE PTR [rip+0x8daa],0x1        # 0x14000e7c0
   140005a16:	je     0x140005a3c
   140005a18:	mov    r8,rdx
   140005a1b:	lea    rdx,[rip+0x558e]        # 0x14000afb0
   140005a22:	jmp    0x140005a37
   140005a24:	test   BYTE PTR [rip+0x8d95],0x1        # 0x14000e7c0
   140005a2b:	je     0x140005a3c
   140005a2d:	mov    r8,rdx
   140005a30:	lea    rdx,[rip+0x55a9]        # 0x14000afe0
   140005a37:	call   0x1400055a4
   140005a3c:	lock inc DWORD PTR [rip+0xb5a9]        # 0x140010fec
   140005a43:	lea    rax,[rsp+0x48]
   140005a48:	mov    QWORD PTR [rsp+0x20],rax
   140005a4d:	mov    edi,0x2001f
   140005a52:	mov    r9d,edi
   140005a55:	xor    r8d,r8d
   140005a58:	lea    rdx,[rip+0x55c1]        # 0x14000b020
   140005a5f:	mov    r12,0xffffffff80000002
   140005a66:	mov    rcx,r12
   140005a69:	call   QWORD PTR [rip+0x45b9]        # 0x14000a028
   140005a6f:	mov    esi,0x4
   140005a74:	test   eax,eax
   140005a76:	jne    0x140005a93
   140005a78:	mov    rdx,r14
   140005a7b:	mov    rcx,QWORD PTR [rsp+0x48]
   140005a80:	call   QWORD PTR [rip+0x45ca]        # 0x14000a050
   140005a86:	test   eax,eax
   140005a88:	je     0x140005aa4
   140005a8a:	lea    rdx,[rip+0x55df]        # 0x14000b070
   140005a91:	jmp    0x140005a9a
   140005a93:	lea    rdx,[rip+0x55fe]        # 0x14000b098
   140005a9a:	mov    r8d,eax
   140005a9d:	mov    ecx,esi
   140005a9f:	call   0x140006f0c
   140005aa4:	lea    rax,[rsp+0x50]
   140005aa9:	mov    QWORD PTR [rsp+0x20],rax
   140005aae:	mov    r9d,edi
   140005ab1:	xor    r8d,r8d
   140005ab4:	lea    rdx,[rip+0x5605]        # 0x14000b0c0
   140005abb:	mov    rcx,r12
   140005abe:	call   QWORD PTR [rip+0x4564]        # 0x14000a028
   140005ac4:	test   eax,eax
   140005ac6:	jne    0x140005ae3
   140005ac8:	mov    rdx,r14
   140005acb:	mov    rcx,QWORD PTR [rsp+0x50]
   140005ad0:	call   QWORD PTR [rip+0x457a]        # 0x14000a050
   140005ad6:	test   eax,eax
   140005ad8:	je     0x140005af4
   140005ada:	lea    rdx,[rip+0x564f]        # 0x14000b130
   140005ae1:	jmp    0x140005aea
   140005ae3:	lea    rdx,[rip+0x566e]        # 0x14000b158
   140005aea:	mov    r8d,eax
   140005aed:	mov    ecx,esi
   140005aef:	call   0x140006f0c
   140005af4:	test   ebx,ebx
   140005af6:	jne    0x140005f74
   140005afc:	xor    edx,edx
   140005afe:	mov    r8d,0x20a
   140005b04:	lea    rcx,[rsp+0x70]
   140005b09:	call   0x14000864c
   140005b0e:	mov    ebx,0x105
   140005b13:	mov    r8d,ebx
   140005b16:	lea    rdx,[rsp+0x70]
   140005b1b:	lea    rcx,[rip+0x565e]        # 0x14000b180
   140005b22:	call   QWORD PTR [rip+0x45f0]        # 0x14000a118
   140005b28:	mov    r12d,0x80070000
   140005b2e:	mov    dil,0x2
   140005b31:	test   eax,eax
   140005b33:	je     0x140005b40
   140005b35:	cmp    eax,ebx
   140005b37:	jbe    0x140005b91
   140005b39:	mov    eax,0x54f
   140005b3e:	jmp    0x140005b46
   140005b40:	call   QWORD PTR [rip+0x4542]        # 0x14000a088
   140005b46:	movzx  ebx,ax
   140005b49:	or     ebx,r12d
   140005b4c:	test   eax,eax
   140005b4e:	cmovle ebx,eax
   140005b51:	test   BYTE PTR [rip+0x8c68],dil        # 0x14000e7c0
   140005b58:	je     0x140005b6d
   140005b5a:	mov    DWORD PTR [rsp+0x20],0x93
   140005b62:	mov    r9d,ebx
   140005b65:	mov    r8,r14
   140005b68:	call   0x140005700
   140005b6d:	test   ebx,ebx
   140005b6f:	jns    0x140005b91
   140005b71:	lea    rdx,[rip+0x5690]        # 0x14000b208
   140005b78:	mov    r8d,ebx
   140005b7b:	lea    r9,[rip+0x565e]        # 0x14000b1e0
   140005b82:	mov    ecx,0x8
   140005b87:	call   0x140006f0c
   140005b8c:	jmp    0x140005f74
   140005b91:	lea    rcx,[rsp+0x70]
   140005b96:	call   QWORD PTR [rip+0x4574]        # 0x14000a110
   140005b9c:	mov    r13,rax
   140005b9f:	test   rax,rax
   140005ba2:	jne    0x140005bde
   140005ba4:	call   QWORD PTR [rip+0x44de]        # 0x14000a088
   140005baa:	movzx  ebx,ax
   140005bad:	or     ebx,r12d
   140005bb0:	test   eax,eax
   140005bb2:	cmovle ebx,eax
   140005bb5:	test   BYTE PTR [rip+0x8c04],dil        # 0x14000e7c0
   140005bbc:	je     0x140005bd1
   140005bbe:	mov    DWORD PTR [rsp+0x20],0x9d
   140005bc6:	mov    r9d,ebx
   140005bc9:	mov    r8,r14
   140005bcc:	call   0x140005700
   140005bd1:	test   ebx,ebx
   140005bd3:	jns    0x140005bde
   140005bd5:	lea    rdx,[rip+0x565c]        # 0x14000b238
   140005bdc:	jmp    0x140005b78
   140005bde:	lea    rdx,[rip+0x5673]        # 0x14000b258
   140005be5:	mov    rcx,r13
   140005be8:	call   QWORD PTR [rip+0x44ea]        # 0x14000a0d8
   140005bee:	mov    r12,rax
   140005bf1:	mov    QWORD PTR [rsp+0x58],rax
   140005bf6:	test   rax,rax
   140005bf9:	jne    0x140005c3b
   140005bfb:	call   QWORD PTR [rip+0x4487]        # 0x14000a088
   140005c01:	movzx  ebx,ax
   140005c04:	or     ebx,0x80070000
   140005c0a:	test   eax,eax
   140005c0c:	cmovle ebx,eax
   140005c0f:	test   BYTE PTR [rip+0x8baa],dil        # 0x14000e7c0
   140005c16:	je     0x140005c2b
   140005c18:	mov    DWORD PTR [rsp+0x20],0xa7
   140005c20:	mov    r9d,ebx
   140005c23:	mov    r8,r14
   140005c26:	call   0x140005700
   140005c2b:	test   ebx,ebx
   140005c2d:	jns    0x140005c3b
   140005c2f:	lea    rdx,[rip+0x5642]        # 0x14000b278
   140005c36:	jmp    0x140005b78
   140005c3b:	mov    rcx,r14
   140005c3e:	call   QWORD PTR [rip+0x4434]        # 0x14000a078
   140005c44:	mov    ebx,eax
   140005c46:	test   eax,eax
   140005c48:	jns    0x140005c77
   140005c4a:	test   BYTE PTR [rip+0x8b6f],dil        # 0x14000e7c0
   140005c51:	je     0x140005c66
   140005c53:	mov    DWORD PTR [rsp+0x20],0xaf
   140005c5b:	mov    r9d,eax
   140005c5e:	mov    r8,r14
   140005c61:	call   0x140005700
   140005c66:	mov    r8d,ebx
   140005c69:	lea    rdx,[rip+0x5630]        # 0x14000b2a0
   140005c70:	mov    ecx,esi
   140005c72:	call   0x140006f0c
   140005c77:	mov    rbx,QWORD PTR [rip+0xb4e2]        # 0x140011160
   140005c7e:	test   rbx,rbx
   140005c81:	jne    0x140005c8a
   140005c83:	mov    ebx,0x8007054f
   140005c88:	jmp    0x140005ca0
   140005c8a:	mov    rcx,rbx
   140005c8d:	call   QWORD PTR [rip+0x4825]        # 0x14000a4b8
   140005c93:	lea    rcx,[rsp+0x40]
   140005c98:	call   rbx
   140005c9a:	mov    ebx,eax
   140005c9c:	test   eax,eax
   140005c9e:	jns    0x140005cc8
   140005ca0:	test   BYTE PTR [rip+0x8b19],dil        # 0x14000e7c0
   140005ca7:	je     0x140005cbc
   140005ca9:	mov    DWORD PTR [rsp+0x20],0xba
   140005cb1:	mov    r9d,ebx
   140005cb4:	mov    r8,r14
   140005cb7:	call   0x140005700
   140005cbc:	lea    rdx,[rip+0x561d]        # 0x14000b2e0
   140005cc3:	jmp    0x140005b78
   140005cc8:	lea    rcx,[rsp+0x38]
   140005ccd:	call   0x140006578
   140005cd2:	mov    ebx,eax
   140005cd4:	test   eax,eax
   140005cd6:	jns    0x140005d00
   140005cd8:	test   BYTE PTR [rip+0x8ae1],dil        # 0x14000e7c0
   140005cdf:	je     0x140005cf4
   140005ce1:	mov    DWORD PTR [rsp+0x20],0xc2
   140005ce9:	mov    r9d,eax
   140005cec:	mov    r8,r14
   140005cef:	call   0x140005700
   140005cf4:	lea    rdx,[rip+0x561d]        # 0x14000b318
   140005cfb:	jmp    0x140005b78
   140005d00:	mov    rbx,QWORD PTR [rsp+0x40]
   140005d05:	mov    rax,QWORD PTR [rbx]
   140005d08:	mov    rsi,QWORD PTR [rax+0x28]
   140005d0c:	mov    rcx,rsi
   140005d0f:	call   QWORD PTR [rip+0x47a3]        # 0x14000a4b8
   140005d15:	mov    rdi,QWORD PTR [rsp+0x38]
   140005d1a:	mov    r8,rdi
   140005d1d:	mov    rdx,r14
   140005d20:	mov    rcx,rbx
   140005d23:	call   rsi
   140005d25:	mov    ebx,eax
   140005d27:	test   eax,eax
   140005d29:	jns    0x140005d4b
   140005d2b:	test   BYTE PTR [rip+0x8a8e],0x2        # 0x14000e7c0
   140005d32:	je     0x140005d3f
   140005d34:	mov    r9d,eax
   140005d37:	mov    r8,r14
   140005d3a:	call   0x14000584c
   140005d3f:	lea    rdx,[rip+0x5602]        # 0x14000b348
   140005d46:	jmp    0x140005b78
   140005d4b:	test   BYTE PTR [rip+0x8a6e],0x1        # 0x14000e7c0
   140005d52:	je     0x140005d74
   140005d54:	mov    rax,QWORD PTR [rdi]
   140005d57:	mov    rbx,QWORD PTR [rax+0x30]
   140005d5b:	mov    rcx,rbx
   140005d5e:	call   QWORD PTR [rip+0x4754]        # 0x14000a4b8
   140005d64:	mov    rcx,rdi
   140005d67:	call   rbx
   140005d69:	mov    r8d,eax
   140005d6c:	mov    r9,r14
   140005d6f:	call   0x1400057ac
   140005d74:	mov    rax,QWORD PTR [rdi]
   140005d77:	mov    rbx,QWORD PTR [rax+0x30]
   140005d7b:	mov    rcx,rbx
   140005d7e:	call   QWORD PTR [rip+0x4734]        # 0x14000a4b8
   140005d84:	mov    rcx,rdi
   140005d87:	call   rbx
   140005d89:	mov    r8d,eax
   140005d8c:	lea    rdx,[rip+0x55e5]        # 0x14000b378
   140005d93:	mov    ecx,0x1
   140005d98:	call   0x140006f0c
   140005d9d:	mov    rax,QWORD PTR [rdi]
   140005da0:	mov    rbx,QWORD PTR [rax+0x30]
   140005da4:	mov    rcx,rbx
   140005da7:	call   QWORD PTR [rip+0x470b]        # 0x14000a4b8
   140005dad:	mov    rcx,rdi
   140005db0:	call   rbx
   140005db2:	test   eax,eax
   140005db4:	je     0x140005f74
   140005dba:	and    QWORD PTR [rsp+0x30],0x0
   140005dc0:	mov    rax,QWORD PTR [rdi]
   140005dc3:	mov    rbx,QWORD PTR [rax+0x18]
   140005dc7:	mov    rcx,rbx
   140005dca:	call   QWORD PTR [rip+0x46e8]        # 0x14000a4b8
   140005dd0:	lea    r8,[rsp+0x30]
   140005dd5:	mov    edx,0x1
   140005dda:	mov    rcx,rdi
   140005ddd:	call   rbx
   140005ddf:	test   eax,eax
   140005de1:	js     0x140005f39
   140005de7:	test   BYTE PTR [rip+0x89d2],0x1        # 0x14000e7c0
   140005dee:	je     0x140005e15
   140005df0:	mov    rbx,QWORD PTR [rsp+0x30]
   140005df5:	mov    rax,QWORD PTR [rbx]
   140005df8:	mov    rsi,QWORD PTR [rax+0x20]
   140005dfc:	mov    rcx,rsi
   140005dff:	call   QWORD PTR [rip+0x46b3]        # 0x14000a4b8
   140005e05:	mov    rcx,rbx
   140005e08:	call   rsi
   140005e0a:	mov    r8,rax
   140005e0d:	mov    r9,r14
   140005e10:	call   0x1400058ec
   140005e15:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e1a:	mov    rax,QWORD PTR [rbx]
   140005e1d:	mov    rsi,QWORD PTR [rax+0x20]
   140005e21:	mov    rcx,rsi
   140005e24:	call   QWORD PTR [rip+0x468e]        # 0x14000a4b8
   140005e2a:	mov    rcx,rbx
   140005e2d:	call   rsi
   140005e2f:	mov    rbx,rax
   140005e32:	mov    rcx,r12
   140005e35:	call   QWORD PTR [rip+0x467d]        # 0x14000a4b8
   140005e3b:	mov    rdx,r14
   140005e3e:	mov    rcx,rbx
   140005e41:	call   r12
   140005e44:	mov    r12d,eax
   140005e47:	test   eax,eax
   140005e49:	jns    0x140005eaf
   140005e4b:	test   BYTE PTR [rip+0x896e],0x2        # 0x14000e7c0
   140005e52:	je     0x140005e7e
   140005e54:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e59:	mov    rcx,QWORD PTR [rbx]
   140005e5c:	mov    rsi,QWORD PTR [rcx+0x20]
   140005e60:	mov    rcx,rsi
   140005e63:	call   QWORD PTR [rip+0x464f]        # 0x14000a4b8
   140005e69:	mov    rcx,rbx
   140005e6c:	call   rsi
   140005e6e:	mov    r8,rax
   140005e71:	mov    DWORD PTR [rsp+0x20],r12d
   140005e76:	mov    r9,r14
   140005e79:	call   0x140005628
   140005e7e:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e83:	mov    rax,QWORD PTR [rbx]
   140005e86:	mov    rsi,QWORD PTR [rax+0x20]
   140005e8a:	mov    rcx,rsi
   140005e8d:	call   QWORD PTR [rip+0x4625]        # 0x14000a4b8
   140005e93:	mov    rcx,rbx
   140005e96:	call   rsi
   140005e98:	mov    r9,rax
   140005e9b:	mov    r8d,r12d
   140005e9e:	lea    rdx,[rip+0x552b]        # 0x14000b3d0
   140005ea5:	mov    ecx,0x8
   140005eaa:	call   0x140006f0c
   140005eaf:	mov    rax,QWORD PTR [rdi]
   140005eb2:	mov    rbx,QWORD PTR [rax+0x20]
   140005eb6:	mov    rcx,rbx
   140005eb9:	call   QWORD PTR [rip+0x45f9]        # 0x14000a4b8
   140005ebf:	mov    rdx,QWORD PTR [rsp+0x30]
   140005ec4:	mov    rcx,rdi
   140005ec7:	call   rbx
   140005ec9:	mov    ebx,eax
   140005ecb:	test   eax,eax
   140005ecd:	js     0x140005f11
   140005ecf:	mov    rbx,QWORD PTR [rsp+0x30]
   140005ed4:	test   rbx,rbx
   140005ed7:	je     0x140005eee
   140005ed9:	mov    rax,QWORD PTR [rbx]
   140005edc:	mov    rsi,QWORD PTR [rax+0x10]
   140005ee0:	mov    rcx,rsi
   140005ee3:	call   QWORD PTR [rip+0x45cf]        # 0x14000a4b8
   140005ee9:	mov    rcx,rbx
   140005eec:	call   rsi
   140005eee:	mov    rax,QWORD PTR [rdi]
   140005ef1:	mov    rbx,QWORD PTR [rax+0x30]
   140005ef5:	mov    rcx,rbx
   140005ef8:	call   QWORD PTR [rip+0x45ba]        # 0x14000a4b8
   140005efe:	mov    rcx,rdi
   140005f01:	call   rbx
   140005f03:	test   eax,eax
   140005f05:	je     0x140005f74
   140005f07:	mov    r12,QWORD PTR [rsp+0x58]
   140005f0c:	jmp    0x140005dba
   140005f11:	test   BYTE PTR [rip+0x88a8],0x2        # 0x14000e7c0
   140005f18:	je     0x140005f2d
   140005f1a:	mov    DWORD PTR [rsp+0x20],0xe6
   140005f22:	mov    r9d,eax
   140005f25:	mov    r8,r14
   140005f28:	call   0x140005700
   140005f2d:	mov    r8d,ebx
   140005f30:	lea    rdx,[rip+0x54c9]        # 0x14000b400
   140005f37:	jmp    0x140005f43
   140005f39:	mov    r8d,eax
   140005f3c:	lea    rdx,[rip+0x5465]        # 0x14000b3a8
   140005f43:	lea    r9,[rip+0x5296]        # 0x14000b1e0
   140005f4a:	mov    ecx,0x8
   140005f4f:	call   0x140006f0c
   140005f54:	nop
   140005f55:	mov    rbx,QWORD PTR [rsp+0x30]
   140005f5a:	test   rbx,rbx
   140005f5d:	je     0x140005f74
   140005f5f:	mov    rax,QWORD PTR [rbx]
   140005f62:	mov    rdi,QWORD PTR [rax+0x10]
   140005f66:	mov    rcx,rdi
   140005f69:	call   QWORD PTR [rip+0x4549]        # 0x14000a4b8
   140005f6f:	mov    rcx,rbx
   140005f72:	call   rdi
   140005f74:	mov    rcx,QWORD PTR [rsp+0x48]
   140005f79:	test   rcx,rcx
   140005f7c:	je     0x140005f84
   140005f7e:	call   QWORD PTR [rip+0x408c]        # 0x14000a010
   140005f84:	mov    rcx,QWORD PTR [rsp+0x50]
   140005f89:	test   rcx,rcx
   140005f8c:	je     0x140005f94
   140005f8e:	call   QWORD PTR [rip+0x407c]        # 0x14000a010
   140005f94:	test   r13,r13
   140005f97:	je     0x140005fa2
   140005f99:	mov    rcx,r13
   140005f9c:	call   QWORD PTR [rip+0x414e]        # 0x14000a0f0
   140005fa2:	or     eax,0xffffffff
   140005fa5:	lock xadd DWORD PTR [rip+0xb03f],eax        # 0x140010fec
   140005fad:	cmp    eax,0x1
   140005fb0:	jne    0x140005fe7
   140005fb2:	cmp    BYTE PTR [rip+0xb087],0x0        # 0x140011040
   140005fb9:	je     0x140005fd0
   140005fbb:	mov    BYTE PTR [rip+0xb080],al        # 0x140011041
   140005fc1:	mov    rcx,QWORD PTR [rip+0xb068]        # 0x140011030
   140005fc8:	call   QWORD PTR [rip+0x4192]        # 0x14000a160
   140005fce:	jmp    0x140005fe7
   140005fd0:	xor    r9d,r9d
   140005fd3:	xor    r8d,r8d
   140005fd6:	lea    edx,[r9+0x12]
   140005fda:	mov    ecx,DWORD PTR [rip+0xb048]        # 0x140011028
   140005fe0:	call   QWORD PTR [rip+0x420a]        # 0x14000a1f0
   140005fe6:	nop
   140005fe7:	mov    rbx,QWORD PTR [rsp+0x38]
   140005fec:	test   rbx,rbx
   140005fef:	je     0x140006007
   140005ff1:	mov    rax,QWORD PTR [rbx]
   140005ff4:	mov    rdi,QWORD PTR [rax+0x10]
   140005ff8:	mov    rcx,rdi
   140005ffb:	call   QWORD PTR [rip+0x44b7]        # 0x14000a4b8
   140006001:	mov    rcx,rbx
   140006004:	call   rdi
   140006006:	nop
   140006007:	mov    rbx,QWORD PTR [rsp+0x40]
   14000600c:	test   rbx,rbx
   14000600f:	je     0x140006026
   140006011:	mov    rax,QWORD PTR [rbx]
   140006014:	mov    rdi,QWORD PTR [rax+0x10]
   140006018:	mov    rcx,rdi
   14000601b:	call   QWORD PTR [rip+0x4497]        # 0x14000a4b8
   140006021:	mov    rcx,rbx
   140006024:	call   rdi
   140006026:	xor    eax,eax
   140006028:	mov    rcx,QWORD PTR [rbp+0x180]
   14000602f:	xor    rcx,rsp
   140006032:	call   0x1400081f0
   140006037:	lea    r11,[rsp+0x290]
   14000603f:	mov    rbx,QWORD PTR [r11+0x30]
   140006043:	mov    rsi,QWORD PTR [r11+0x40]
   140006047:	mov    rsp,r11
   14000604a:	pop    r14
   14000604c:	pop    r13
   14000604e:	pop    r12
   140006050:	pop    rdi
   140006051:	pop    rbp
   140006052:	ret    
   140006053:	int3   
   140006054:	int3   
   140006055:	int3   
   140006056:	int3   
   140006057:	int3   
   140006058:	int3   
   140006059:	int3   
   14000605a:	int3   
   14000605b:	int3   
   14000605c:	int3   
   14000605d:	int3   
   14000605e:	int3   
   14000605f:	int3   
   140006060:	mov    QWORD PTR [rsp+0x8],rbx
   140006065:	mov    QWORD PTR [rsp+0x10],rsi
   14000606a:	push   rdi
   14000606b:	sub    rsp,0x20
   14000606f:	mov    rdi,rdx
   140006072:	xor    ecx,ecx
   140006074:	xor    edx,edx
   140006076:	mov    ebx,r9d
   140006079:	call   QWORD PTR [rip+0x41e1]        # 0x14000a260
   14000607f:	xor    esi,esi
   140006081:	mov    rdx,rdi
   140006084:	test   eax,eax
   140006086:	lea    ecx,[rsi+0x1]
   140006089:	cmovns esi,ecx
   14000608c:	lea    r8d,[rcx-0x1]
   140006090:	test   bl,0x5
   140006093:	setne  r8b
   140006097:	call   0x1400059b0
   14000609c:	mov    ebx,eax
   14000609e:	test   eax,eax
   1400060a0:	jns    0x1400060bd
   1400060a2:	lea    r9,[rip+0x5387]        # 0x14000b430
   1400060a9:	mov    r8d,eax
   1400060ac:	lea    rdx,[rip+0x539d]        # 0x14000b450
   1400060b3:	mov    ecx,0x8
   1400060b8:	call   0x140006f0c
   1400060bd:	test   esi,esi
   1400060bf:	je     0x1400060c7
   1400060c1:	call   QWORD PTR [rip+0x4189]        # 0x14000a250
   1400060c7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400060cc:	mov    eax,ebx
   1400060ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400060d3:	add    rsp,0x20
   1400060d7:	pop    rdi
   1400060d8:	ret    
   1400060d9:	int3   
   1400060da:	int3   
   1400060db:	int3   
   1400060dc:	int3   
   1400060dd:	int3   
   1400060de:	int3   
   1400060df:	int3   
   1400060e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400060e5:	push   rdi
   1400060e6:	sub    rsp,0x20
   1400060ea:	mov    rdi,QWORD PTR [rcx]
   1400060ed:	test   rdi,rdi
   1400060f0:	je     0x140006107
   1400060f2:	mov    rax,QWORD PTR [rdi]
   1400060f5:	mov    rbx,QWORD PTR [rax+0x10]
   1400060f9:	mov    rcx,rbx
   1400060fc:	call   QWORD PTR [rip+0x43b6]        # 0x14000a4b8
   140006102:	mov    rcx,rdi
   140006105:	call   rbx
   140006107:	mov    rbx,QWORD PTR [rsp+0x30]
   14000610c:	add    rsp,0x20
   140006110:	pop    rdi
   140006111:	ret    
   140006112:	int3   
   140006113:	int3   
   140006114:	int3   
   140006115:	int3   
   140006116:	int3   
   140006117:	int3   
   140006118:	mov    QWORD PTR [rsp+0x8],rcx
   14000611d:	push   rbx
   14000611e:	sub    rsp,0x30
   140006122:	mov    rbx,rcx
   140006125:	call   QWORD PTR [rip+0x436d]        # 0x14000a498
   14000612b:	xor    edx,edx
   14000612d:	mov    eax,edx
   14000612f:	mov    DWORD PTR [rsp+0x20],edx
   140006133:	jmp    0x140006144
   140006135:	bts    eax,0x1c
   140006139:	mov    DWORD PTR [rsp+0x20],eax
   14000613d:	xor    edx,edx
   14000613f:	mov    rbx,QWORD PTR [rsp+0x40]
   140006144:	test   eax,eax
   140006146:	setns  dl
   140006149:	mov    DWORD PTR [rbx+0x60],edx
   14000614c:	add    rsp,0x30
   140006150:	pop    rbx
   140006151:	ret    
   140006152:	int3   
   140006153:	int3   
   140006154:	int3   
   140006155:	int3   
   140006156:	int3   
   140006157:	int3   
   140006158:	mov    QWORD PTR [rsp+0x18],rbx
   14000615d:	mov    QWORD PTR [rsp+0x20],rsi
   140006162:	mov    DWORD PTR [rsp+0x10],edx
   140006166:	push   rbp
   140006167:	push   rdi
   140006168:	push   r14
   14000616a:	mov    rbp,rsp
   14000616d:	sub    rsp,0x80
   140006174:	xor    r14d,r14d
   140006177:	lea    r8,[rip+0x5332]        # 0x14000b4b0
   14000617e:	mov    rdi,rcx
   140006181:	mov    QWORD PTR [rbp-0x20],r14
   140006185:	or     eax,0xffffffff
   140006188:	mov    DWORD PTR [rbp-0x18],r14d
   14000618c:	lea    rcx,[rip+0x484d]        # 0x14000a9e0
   140006193:	mov    QWORD PTR [rbp-0x10],r14
   140006197:	mov    QWORD PTR [rbp-0x28],rcx
   14000619b:	mov    esi,r14d
   14000619e:	or     DWORD PTR [rdi+0x4],0xffffffff
   1400061a2:	mov    QWORD PTR [rbp-0x50],rcx
   1400061a6:	lea    rcx,[rbp-0x50]
   1400061aa:	mov    DWORD PTR [rdi],r14d
   1400061ad:	mov    QWORD PTR [rdi+0x18],r14
   1400061b1:	mov    QWORD PTR [rdi+0x10],0x3c
   1400061b9:	mov    DWORD PTR [rbp-0x8],eax
   1400061bc:	mov    DWORD PTR [rbp-0x4],eax
   1400061bf:	mov    QWORD PTR [rbp-0x48],r14
   1400061c3:	mov    DWORD PTR [rbp-0x40],r14d
   1400061c7:	mov    QWORD PTR [rbp-0x38],r14
   1400061cb:	mov    DWORD PTR [rbp-0x30],eax
   1400061ce:	mov    DWORD PTR [rbp-0x2c],eax
   1400061d1:	mov    DWORD PTR [rbp+0x28],r14d
   1400061d5:	mov    QWORD PTR [rbp+0x20],r14
   1400061d9:	call   0x140007a80
   1400061de:	test   eax,eax
   1400061e0:	sete   cl
   1400061e3:	cmp    eax,0x2
   1400061e6:	jne    0x14000623a
   1400061e8:	mov    ebx,r14d
   1400061eb:	test   cl,cl
   1400061ed:	je     0x14000626c
   1400061ef:	lea    r9,[rbp+0x28]
   1400061f3:	mov    DWORD PTR [rsp+0x20],0x1
   1400061fb:	lea    r8,[rbp+0x20]
   1400061ff:	lea    rdx,[rip+0x535a]        # 0x14000b560
   140006206:	lea    rcx,[rbp-0x50]
   14000620a:	call   0x140007ae8
   14000620f:	cmp    eax,0xd
   140006212:	jne    0x140006234
   140006214:	lea    r9,[rbp+0x28]
   140006218:	mov    DWORD PTR [rsp+0x20],0x2
   140006220:	lea    r8,[rbp+0x20]
   140006224:	lea    rdx,[rip+0x5335]        # 0x14000b560
   14000622b:	lea    rcx,[rbp-0x50]
   14000622f:	call   0x140007ae8
   140006234:	mov    rsi,QWORD PTR [rbp+0x20]
   140006238:	jmp    0x140006271
   14000623a:	movzx  ebx,ax
   14000623d:	or     ebx,0x80070000
   140006243:	test   eax,eax
   140006245:	cmovle ebx,eax
   140006248:	test   ebx,ebx
   14000624a:	jns    0x1400061eb
   14000624c:	lea    rdx,[rip+0x52ed]        # 0x14000b540
   140006253:	mov    r8d,ebx
   140006256:	lea    r9,[rip+0x52c3]        # 0x14000b520
   14000625d:	mov    ecx,0x8
   140006262:	call   0x140006f0c
   140006267:	jmp    0x140006321
   14000626c:	mov    eax,0x2
   140006271:	test   eax,eax
   140006273:	jne    0x140006321
   140006279:	mov    edx,DWORD PTR [rbp+0x28]
   14000627c:	lea    ecx,[rax+0x40]
   14000627f:	add    edx,0x2
   140006282:	add    rdx,rdx
   140006285:	call   QWORD PTR [rip+0x3e5d]        # 0x14000a0e8
   14000628b:	mov    QWORD PTR [rdi+0x8],rax
   14000628f:	mov    rcx,rax
   140006292:	test   rax,rax
   140006295:	jne    0x1400062a5
   140006297:	mov    ebx,0x8007000e
   14000629c:	lea    rdx,[rip+0x52dd]        # 0x14000b580
   1400062a3:	jmp    0x140006253
   1400062a5:	mov    eax,DWORD PTR [rbp+0x28]
   1400062a8:	mov    r8d,0x7ffffffe
   1400062ae:	inc    eax
   1400062b0:	mov    ebx,r14d
   1400062b3:	mov    edx,eax
   1400062b5:	mov    r9d,0x80070057
   1400062bb:	dec    rax
   1400062be:	cmp    rax,r8
   1400062c1:	cmova  ebx,r9d
   1400062c5:	test   ebx,ebx
   1400062c7:	js     0x140006306
   1400062c9:	mov    ebx,r14d
   1400062cc:	test   rdx,rdx
   1400062cf:	je     0x1400062fb
   1400062d1:	sub    r8,rdx
   1400062d4:	sub    rsi,rcx
   1400062d7:	lea    rax,[r8+rdx*1]
   1400062db:	test   rax,rax
   1400062de:	je     0x1400062f6
   1400062e0:	movzx  eax,WORD PTR [rsi+rcx*1]
   1400062e4:	test   ax,ax
   1400062e7:	je     0x1400062f6
   1400062e9:	mov    WORD PTR [rcx],ax
   1400062ec:	add    rcx,0x2
   1400062f0:	sub    rdx,0x1
   1400062f4:	jne    0x1400062d7
   1400062f6:	test   rdx,rdx
   1400062f9:	jne    0x14000630b
   1400062fb:	sub    rcx,0x2
   1400062ff:	mov    ebx,0x8007007a
   140006304:	jmp    0x14000630b
   140006306:	test   rdx,rdx
   140006309:	je     0x14000630f
   14000630b:	mov    WORD PTR [rcx],r14w
   14000630f:	test   ebx,ebx
   140006311:	jns    0x140006321
   140006313:	mov    rcx,QWORD PTR [rdi+0x8]
   140006317:	call   QWORD PTR [rip+0x3dc3]        # 0x14000a0e0
   14000631d:	mov    QWORD PTR [rdi+0x8],r14
   140006321:	lea    rcx,[rbp-0x50]
   140006325:	call   0x1400079d8
   14000632a:	lea    rcx,[rbp-0x28]
   14000632e:	call   0x1400079d8
   140006333:	lea    r11,[rsp+0x80]
   14000633b:	mov    eax,ebx
   14000633d:	mov    rbx,QWORD PTR [r11+0x30]
   140006341:	mov    rsi,QWORD PTR [r11+0x38]
   140006345:	mov    rsp,r11
   140006348:	pop    r14
   14000634a:	pop    rdi
   14000634b:	pop    rbp
   14000634c:	ret    
   14000634d:	int3   
   14000634e:	int3   
   14000634f:	int3   
   140006350:	int3   
   140006351:	int3   
   140006352:	int3   
   140006353:	int3   
   140006354:	mov    QWORD PTR [rsp+0x8],rbx
   140006359:	push   rdi
   14000635a:	sub    rsp,0x240
   140006361:	mov    rax,QWORD PTR [rip+0x7ca8]        # 0x14000e010
   140006368:	xor    rax,rsp
   14000636b:	mov    QWORD PTR [rsp+0x230],rax
   140006373:	mov    rcx,rdx
   140006376:	mov    ebx,0x105
   14000637b:	mov    r8d,ebx
   14000637e:	lea    rdx,[rsp+0x20]
   140006383:	call   QWORD PTR [rip+0x3d8f]        # 0x14000a118
   140006389:	test   eax,eax
   14000638b:	je     0x140006489
   140006391:	cmp    eax,ebx
   140006393:	ja     0x140006482
   140006399:	lea    rcx,[rsp+0x20]
   14000639e:	call   QWORD PTR [rip+0x3d6c]        # 0x14000a110
   1400063a4:	mov    QWORD PTR [rip+0xad9d],rax        # 0x140011148
   1400063ab:	test   rax,rax
   1400063ae:	je     0x140006489
   1400063b4:	lea    rdx,[rip+0x51fd]        # 0x14000b5b8
   1400063bb:	mov    rcx,rax
   1400063be:	call   QWORD PTR [rip+0x3d14]        # 0x14000a0d8
   1400063c4:	mov    QWORD PTR [rip+0xad85],rax        # 0x140011150
   1400063cb:	test   rax,rax
   1400063ce:	jne    0x1400063df
   1400063d0:	call   QWORD PTR [rip+0x3cb2]        # 0x14000a088
   1400063d6:	lea    rdx,[rip+0x51f3]        # 0x14000b5d0
   1400063dd:	jmp    0x14000643b
   1400063df:	mov    rcx,QWORD PTR [rip+0xad62]        # 0x140011148
   1400063e6:	lea    rdx,[rip+0x5203]        # 0x14000b5f0
   1400063ed:	call   QWORD PTR [rip+0x3ce5]        # 0x14000a0d8
   1400063f3:	mov    QWORD PTR [rip+0xad5e],rax        # 0x140011158
   1400063fa:	test   rax,rax
   1400063fd:	jne    0x14000640e
   1400063ff:	call   QWORD PTR [rip+0x3c83]        # 0x14000a088
   140006405:	lea    rdx,[rip+0x51fc]        # 0x14000b608
   14000640c:	jmp    0x14000643b
   14000640e:	mov    rcx,QWORD PTR [rip+0xad33]        # 0x140011148
   140006415:	lea    rdx,[rip+0x5214]        # 0x14000b630
   14000641c:	call   QWORD PTR [rip+0x3cb6]        # 0x14000a0d8
   140006422:	mov    QWORD PTR [rip+0xad37],rax        # 0x140011160
   140006429:	test   rax,rax
   14000642c:	jne    0x14000644c
   14000642e:	call   QWORD PTR [rip+0x3c54]        # 0x14000a088
   140006434:	lea    rdx,[rip+0x5215]        # 0x14000b650
   14000643b:	mov    r8d,eax
   14000643e:	mov    ecx,0x4
   140006443:	mov    ebx,eax
   140006445:	call   0x140006f0c
   14000644a:	jmp    0x140006491
   14000644c:	mov    rbx,QWORD PTR [rip+0xacfd]        # 0x140011150
   140006453:	mov    rcx,rbx
   140006456:	call   QWORD PTR [rip+0x405c]        # 0x14000a4b8
   14000645c:	call   rbx
   14000645e:	movzx  ebx,ax
   140006461:	test   eax,eax
   140006463:	jns    0x140006491
   140006465:	lea    r9,[rip+0x520c]        # 0x14000b678
   14000646c:	mov    r8d,eax
   14000646f:	lea    rdx,[rip+0x5222]        # 0x14000b698
   140006476:	mov    ecx,0x8
   14000647b:	call   0x140006f0c
   140006480:	jmp    0x140006491
   140006482:	mov    ebx,0x54f
   140006487:	jmp    0x140006491
   140006489:	call   QWORD PTR [rip+0x3bf9]        # 0x14000a088
   14000648f:	mov    ebx,eax
   140006491:	test   ebx,ebx
   140006493:	je     0x1400064de
   140006495:	mov    rdi,QWORD PTR [rip+0xacbc]        # 0x140011158
   14000649c:	test   rdi,rdi
   14000649f:	je     0x1400064ac
   1400064a1:	mov    rcx,rdi
   1400064a4:	call   QWORD PTR [rip+0x400e]        # 0x14000a4b8
   1400064aa:	call   rdi
   1400064ac:	mov    rcx,QWORD PTR [rip+0xac95]        # 0x140011148
   1400064b3:	test   rcx,rcx
   1400064b6:	je     0x1400064c6
   1400064b8:	call   QWORD PTR [rip+0x3c32]        # 0x14000a0f0
   1400064be:	and    QWORD PTR [rip+0xac82],0x0        # 0x140011148
   1400064c6:	and    QWORD PTR [rip+0xac82],0x0        # 0x140011150
   1400064ce:	and    QWORD PTR [rip+0xac82],0x0        # 0x140011158
   1400064d6:	and    QWORD PTR [rip+0xac82],0x0        # 0x140011160
   1400064de:	movzx  eax,bx
   1400064e1:	or     eax,0x80070000
   1400064e6:	test   ebx,ebx
   1400064e8:	cmovle eax,ebx
   1400064eb:	mov    rcx,QWORD PTR [rsp+0x230]
   1400064f3:	xor    rcx,rsp
   1400064f6:	call   0x1400081f0
   1400064fb:	mov    rbx,QWORD PTR [rsp+0x250]
   140006503:	add    rsp,0x240
   14000650a:	pop    rdi
   14000650b:	ret    
   14000650c:	int3   
   14000650d:	int3   
   14000650e:	int3   
   14000650f:	int3   
   140006510:	int3   
   140006511:	int3   
   140006512:	int3   
   140006513:	int3   
   140006514:	int3   
   140006515:	int3   
   140006516:	int3   
   140006517:	int3   
   140006518:	int3   
   140006519:	int3   
   14000651a:	int3   
   14000651b:	int3   
   14000651c:	int3   
   14000651d:	int3   
   14000651e:	int3   
   14000651f:	int3   
   140006520:	mov    QWORD PTR [rsp+0x8],rbx
   140006525:	push   rdi
   140006526:	sub    rsp,0x20
   14000652a:	lea    rbx,[rcx+0x638]
   140006531:	mov    rdi,rcx
   140006534:	cmp    DWORD PTR [rbx+0x60],0x0
   140006538:	je     0x140006545
   14000653a:	mov    dl,0x1
   14000653c:	mov    rcx,rbx
   14000653f:	call   QWORD PTR [rip+0x3efb]        # 0x14000a440
   140006545:	lea    rcx,[rdi+0x6a0]
   14000654c:	call   QWORD PTR [rip+0x3f3e]        # 0x14000a490
   140006552:	cmp    DWORD PTR [rbx+0x60],0x0
   140006556:	mov    edi,eax
   140006558:	je     0x140006563
   14000655a:	mov    rcx,rbx
   14000655d:	call   QWORD PTR [rip+0x3ed5]        # 0x14000a438
   140006563:	mov    eax,edi
   140006565:	mov    rbx,QWORD PTR [rsp+0x30]
   14000656a:	add    rsp,0x20
   14000656e:	pop    rdi
   14000656f:	ret    
   140006570:	int3   
   140006571:	int3   
   140006572:	int3   
   140006573:	int3   
   140006574:	int3   
   140006575:	int3   
   140006576:	int3   
   140006577:	int3   
   140006578:	mov    rax,rsp
   14000657b:	mov    QWORD PTR [rax+0x8],rbx
   14000657f:	mov    QWORD PTR [rax+0x18],rsi
   140006583:	mov    QWORD PTR [rax+0x20],rdi
   140006587:	push   r14
   140006589:	sub    rsp,0x20
   14000658d:	mov    r14,rcx
   140006590:	xor    esi,esi
   140006592:	mov    ecx,0x6e8
   140006597:	mov    DWORD PTR [rax+0x10],esi
   14000659a:	call   0x140007c88
   14000659f:	test   rax,rax
   1400065a2:	je     0x1400065ba
   1400065a4:	lea    rdx,[rsp+0x38]
   1400065a9:	mov    rcx,rax
   1400065ac:	call   0x140006650
   1400065b1:	mov    esi,DWORD PTR [rsp+0x38]
   1400065b5:	mov    rdi,rax
   1400065b8:	jmp    0x1400065bc
   1400065ba:	xor    edi,edi
   1400065bc:	test   rdi,rdi
   1400065bf:	je     0x1400065d8
   1400065c1:	mov    rax,QWORD PTR [rdi]
   1400065c4:	mov    rbx,QWORD PTR [rax+0x8]
   1400065c8:	mov    rcx,rbx
   1400065cb:	call   QWORD PTR [rip+0x3ee7]        # 0x14000a4b8
   1400065d1:	mov    rcx,rdi
   1400065d4:	call   rbx
   1400065d6:	jmp    0x1400065dd
   1400065d8:	mov    esi,0x8007000e
   1400065dd:	test   esi,esi
   1400065df:	jns    0x1400065fe
   1400065e1:	lea    r9,[rip+0x5188]        # 0x14000b770
   1400065e8:	mov    r8d,esi
   1400065eb:	lea    rdx,[rip+0x51a6]        # 0x14000b798
   1400065f2:	mov    ecx,0x8
   1400065f7:	call   0x140006f0c
   1400065fc:	jmp    0x140006616
   1400065fe:	mov    QWORD PTR [r14],rdi
   140006601:	mov    rax,QWORD PTR [rdi]
   140006604:	mov    rbx,QWORD PTR [rax+0x8]
   140006608:	mov    rcx,rbx
   14000660b:	call   QWORD PTR [rip+0x3ea7]        # 0x14000a4b8
   140006611:	mov    rcx,rdi
   140006614:	call   rbx
   140006616:	test   rdi,rdi
   140006619:	je     0x140006630
   14000661b:	mov    rcx,QWORD PTR [rdi]
   14000661e:	mov    rbx,QWORD PTR [rcx+0x10]
   140006622:	mov    rcx,rbx
   140006625:	call   QWORD PTR [rip+0x3e8d]        # 0x14000a4b8
   14000662b:	mov    rcx,rdi
   14000662e:	call   rbx
   140006630:	mov    rbx,QWORD PTR [rsp+0x30]
   140006635:	mov    eax,esi
   140006637:	mov    rsi,QWORD PTR [rsp+0x40]
   14000663c:	mov    rdi,QWORD PTR [rsp+0x48]
   140006641:	add    rsp,0x20
   140006645:	pop    r14
   140006647:	ret    
   140006648:	int3   
   140006649:	int3   
   14000664a:	int3   
   14000664b:	int3   
   14000664c:	int3   
   14000664d:	int3   
   14000664e:	int3   
   14000664f:	int3   
   140006650:	mov    QWORD PTR [rsp+0x10],rbx
   140006655:	mov    QWORD PTR [rsp+0x18],rbp
   14000665a:	push   rsi
   14000665b:	push   rdi
   14000665c:	push   r14
   14000665e:	sub    rsp,0x30
   140006662:	and    DWORD PTR [rcx+0x8],0x0
   140006666:	lea    rax,[rip+0x4333]        # 0x14000a9a0
   14000666d:	mov    rbp,QWORD PTR [rip+0xaafc]        # 0x140011170
   140006674:	lea    rdi,[rcx+0x628]
   14000667b:	mov    QWORD PTR [rcx],rax
   14000667e:	lea    rax,[rip+0x513b]        # 0x14000b7c0
   140006685:	mov    QWORD PTR [rcx+0x10],rax
   140006689:	mov    r14,rdx
   14000668c:	mov    DWORD PTR [rcx+0xc],0x1
   140006693:	mov    rbx,rcx
   140006696:	mov    QWORD PTR [rdi+0x8],rdi
   14000669a:	mov    QWORD PTR [rdi],rdi
   14000669d:	test   rbp,rbp
   1400066a0:	je     0x1400066e6
   1400066a2:	cmp    DWORD PTR [rbp+0x78],0x0
   1400066a6:	je     0x1400066b4
   1400066a8:	mov    dl,0x1
   1400066aa:	lea    rcx,[rbp+0x18]
   1400066ae:	call   QWORD PTR [rip+0x3d7c]        # 0x14000a430
   1400066b4:	lea    rax,[rbp+0x8]
   1400066b8:	mov    rcx,QWORD PTR [rax+0x8]
   1400066bc:	mov    QWORD PTR [rdi],rax
   1400066bf:	mov    QWORD PTR [rdi+0x8],rcx
   1400066c3:	cmp    QWORD PTR [rcx],rax
   1400066c6:	je     0x1400066cf
   1400066c8:	mov    ecx,0x3
   1400066cd:	int    0x29
   1400066cf:	mov    QWORD PTR [rcx],rdi
   1400066d2:	mov    QWORD PTR [rax+0x8],rdi
   1400066d6:	cmp    DWORD PTR [rbp+0x78],0x0
   1400066da:	je     0x1400066e6
   1400066dc:	lea    rcx,[rbp+0x18]
   1400066e0:	call   QWORD PTR [rip+0x3d52]        # 0x14000a438
   1400066e6:	mov    QWORD PTR [rbx+0x18],0x0
   1400066ee:	mov    eax,0x1
   1400066f3:	mov    DWORD PTR [rbx+0x20],0x0
   1400066fa:	lock xadd DWORD PTR [rbx+0x20],eax
   1400066ff:	inc    eax
   140006701:	and    eax,0x1f
   140006704:	cmp    DWORD PTR [rip+0xaa75],0x1        # 0x140011180
   14000670b:	jne    0x140006731
   14000670d:	cdqe   
   14000670f:	lea    r8,[rbx+0x28]
   140006713:	lea    r9,[rsp+0x50]
   140006718:	lea    rdx,[rax+rax*2]
   14000671c:	shl    rdx,0x4
   140006720:	add    r8,rdx
   140006723:	mov    edx,0x6
   140006728:	lea    ecx,[rdx-0x5]
   14000672b:	call   QWORD PTR [rip+0x3977]        # 0x14000a0a8
   140006731:	lea    rax,[rip+0x4228]        # 0x14000a960
   140006738:	lea    rcx,[rbx+0x6a0]
   14000673f:	mov    QWORD PTR [rbx],rax
   140006742:	and    DWORD PTR [rbx+0x698],0x0
   140006749:	lea    r9,[rip+0x730]        # 0x140006e80
   140006750:	lea    r8,[rip+0x719]        # 0x140006e70
   140006757:	mov    QWORD PTR [rsp+0x20],rcx
   14000675c:	lea    rdx,[rip+0x67d]        # 0x140006de0
   140006763:	call   QWORD PTR [rip+0x3cef]        # 0x14000a458
   140006769:	lea    rcx,[rbx+0x638]
   140006770:	call   0x140006118
   140006775:	mov    rbp,QWORD PTR [rsp+0x60]
   14000677a:	mov    DWORD PTR [r14],eax
   14000677d:	mov    rax,rbx
   140006780:	mov    rbx,QWORD PTR [rsp+0x58]
   140006785:	add    rsp,0x30
   140006789:	pop    r14
   14000678b:	pop    rdi
   14000678c:	pop    rsi
   14000678d:	ret    
   14000678e:	int3   
   14000678f:	int3   
   140006790:	int3   
   140006791:	int3   
   140006792:	int3   
   140006793:	int3   
   140006794:	int3   
   140006795:	int3   
   140006796:	int3   
   140006797:	int3   
   140006798:	int3   
   140006799:	int3   
   14000679a:	int3   
   14000679b:	int3   
   14000679c:	int3   
   14000679d:	int3   
   14000679e:	int3   
   14000679f:	int3   
   1400067a0:	mov    rax,rsp
   1400067a3:	mov    QWORD PTR [rax+0x8],rbx
   1400067a7:	mov    QWORD PTR [rax+0x10],rbp
   1400067ab:	mov    QWORD PTR [rax+0x18],rsi
   1400067af:	mov    QWORD PTR [rax+0x20],rdi
   1400067b3:	push   r14
   1400067b5:	sub    rsp,0x20
   1400067b9:	lea    rax,[rip+0x41a0]        # 0x14000a960
   1400067c0:	mov    r14d,edx
   1400067c3:	mov    QWORD PTR [rcx],rax
   1400067c6:	lea    rbp,[rcx+0x6a0]
   1400067cd:	mov    rsi,rcx
   1400067d0:	mov    dl,0x1
   1400067d2:	mov    rcx,rbp
   1400067d5:	call   QWORD PTR [rip+0x3c85]        # 0x14000a460
   1400067db:	test   rax,rax
   1400067de:	je     0x140006806
   1400067e0:	mov    rdi,QWORD PTR [rax]
   1400067e3:	mov    rdx,rax
   1400067e6:	mov    rcx,rbp
   1400067e9:	call   QWORD PTR [rip+0x3c89]        # 0x14000a478
   1400067ef:	mov    rax,QWORD PTR [rdi]
   1400067f2:	mov    rbx,QWORD PTR [rax+0x10]
   1400067f6:	mov    rcx,rbx
   1400067f9:	call   QWORD PTR [rip+0x3cb9]        # 0x14000a4b8
   1400067ff:	mov    rcx,rdi
   140006802:	call   rbx
   140006804:	jmp    0x1400067d0
   140006806:	mov    dl,0x1
   140006808:	mov    rcx,rbp
   14000680b:	call   QWORD PTR [rip+0x3c4f]        # 0x14000a460
   140006811:	test   rax,rax
   140006814:	je     0x14000683c
   140006816:	mov    rdi,QWORD PTR [rax]
   140006819:	mov    rdx,rax
   14000681c:	mov    rcx,rbp
   14000681f:	call   QWORD PTR [rip+0x3c53]        # 0x14000a478
   140006825:	mov    rax,QWORD PTR [rdi]
   140006828:	mov    rbx,QWORD PTR [rax+0x10]
   14000682c:	mov    rcx,rbx
   14000682f:	call   QWORD PTR [rip+0x3c83]        # 0x14000a4b8
   140006835:	mov    rcx,rdi
   140006838:	call   rbx
   14000683a:	jmp    0x140006806
   14000683c:	lea    rbx,[rsi+0x638]
   140006843:	cmp    DWORD PTR [rbx+0x60],0x0
   140006847:	je     0x140006852
   140006849:	mov    rcx,rbx
   14000684c:	call   QWORD PTR [rip+0x3c1e]        # 0x14000a470
   140006852:	and    DWORD PTR [rbx+0x60],0x0
   140006856:	mov    rcx,rsi
   140006859:	call   0x140006bec
   14000685e:	test   r14b,0x1
   140006862:	je     0x14000686c
   140006864:	mov    rcx,rsi
   140006867:	call   0x140007d08
   14000686c:	mov    rbx,QWORD PTR [rsp+0x30]
   140006871:	mov    rax,rsi
   140006874:	mov    rsi,QWORD PTR [rsp+0x40]
   140006879:	mov    rbp,QWORD PTR [rsp+0x38]
   14000687e:	mov    rdi,QWORD PTR [rsp+0x48]
   140006883:	add    rsp,0x20
   140006887:	pop    r14
   140006889:	ret    
   14000688a:	int3   
   14000688b:	int3   
   14000688c:	int3   
   14000688d:	int3   
   14000688e:	int3   
   14000688f:	int3   
   140006890:	mov    QWORD PTR [rsp+0x18],rbx
   140006895:	push   rbp
   140006896:	push   rsi
   140006897:	push   rdi
   140006898:	push   r14
   14000689a:	push   r15
   14000689c:	sub    rsp,0x20
   1400068a0:	xor    ebx,ebx
   1400068a2:	lea    rbp,[rcx+0x638]
   1400068a9:	mov    r14,rdx
   1400068ac:	mov    rdi,rcx
   1400068af:	cmp    DWORD PTR [rbp+0x60],ebx
   1400068b2:	je     0x1400068bf
   1400068b4:	mov    dl,0x1
   1400068b6:	mov    rcx,rbp
   1400068b9:	call   QWORD PTR [rip+0x3b71]        # 0x14000a430
   1400068bf:	lea    r15,[rdi+0x6a0]
   1400068c6:	mov    QWORD PTR [rsp+0x50],r14
   1400068cb:	mov    rcx,r15
   1400068ce:	lea    rdx,[rsp+0x50]
   1400068d3:	xor    esi,esi
   1400068d5:	call   QWORD PTR [rip+0x3b8d]        # 0x14000a468
   1400068db:	test   rax,rax
   1400068de:	je     0x1400068fd
   1400068e0:	mov    rbx,QWORD PTR [rax]
   1400068e3:	mov    rax,QWORD PTR [rbx]
   1400068e6:	mov    rdi,QWORD PTR [rax+0x8]
   1400068ea:	mov    rcx,rdi
   1400068ed:	call   QWORD PTR [rip+0x3bc5]        # 0x14000a4b8
   1400068f3:	mov    rcx,rbx
   1400068f6:	call   rdi
   1400068f8:	mov    esi,0x1
   1400068fd:	cmp    DWORD PTR [rbp+0x60],0x0
   140006901:	je     0x14000690c
   140006903:	mov    rcx,rbp
   140006906:	call   QWORD PTR [rip+0x3b2c]        # 0x14000a438
   14000690c:	test   rbx,rbx
   14000690f:	je     0x140006926
   140006911:	mov    rax,QWORD PTR [rbx]
   140006914:	mov    rdi,QWORD PTR [rax+0x10]
   140006918:	mov    rcx,rdi
   14000691b:	call   QWORD PTR [rip+0x3b97]        # 0x14000a4b8
   140006921:	mov    rcx,rbx
   140006924:	call   rdi
   140006926:	cmp    esi,0x1
   140006929:	jne    0x140006939
   14000692b:	mov    esi,0x800700b7
   140006930:	lea    rdx,[rip+0x4ec9]        # 0x14000b800
   140006937:	jmp    0x1400069b6
   140006939:	cmp    DWORD PTR [rbp+0x60],0x0
   14000693d:	je     0x14000694a
   14000693f:	mov    dl,0x1
   140006941:	mov    rcx,rbp
   140006944:	call   QWORD PTR [rip+0x3ae6]        # 0x14000a430
   14000694a:	xor    esi,esi
   14000694c:	mov    QWORD PTR [rsp+0x58],r14
   140006951:	lea    r9,[rsp+0x50]
   140006956:	mov    rcx,r15
   140006959:	lea    rdx,[rsp+0x58]
   14000695e:	lea    r8d,[rsi+0x8]
   140006962:	call   QWORD PTR [rip+0x3ae8]        # 0x14000a450
   140006968:	test   rax,rax
   14000696b:	jne    0x140006974
   14000696d:	mov    esi,0x8007000e
   140006972:	jmp    0x14000699c
   140006974:	cmp    BYTE PTR [rsp+0x50],sil
   140006979:	jne    0x140006982
   14000697b:	mov    esi,0x80070050
   140006980:	jmp    0x14000699c
   140006982:	mov    rdi,QWORD PTR [rsp+0x58]
   140006987:	mov    rax,QWORD PTR [rdi]
   14000698a:	mov    rbx,QWORD PTR [rax+0x8]
   14000698e:	mov    rcx,rbx
   140006991:	call   QWORD PTR [rip+0x3b21]        # 0x14000a4b8
   140006997:	mov    rcx,rdi
   14000699a:	call   rbx
   14000699c:	cmp    DWORD PTR [rbp+0x60],0x0
   1400069a0:	je     0x1400069ab
   1400069a2:	mov    rcx,rbp
   1400069a5:	call   QWORD PTR [rip+0x3a8d]        # 0x14000a438
   1400069ab:	test   esi,esi
   1400069ad:	jns    0x1400069ca
   1400069af:	lea    rdx,[rip+0x4e72]        # 0x14000b828
   1400069b6:	lea    r9,[rip+0x4e1b]        # 0x14000b7d8
   1400069bd:	mov    r8d,esi
   1400069c0:	mov    ecx,0x8
   1400069c5:	call   0x140006f0c
   1400069ca:	mov    eax,esi
   1400069cc:	mov    rbx,QWORD PTR [rsp+0x60]
   1400069d1:	add    rsp,0x20
   1400069d5:	pop    r15
   1400069d7:	pop    r14
   1400069d9:	pop    rdi
   1400069da:	pop    rsi
   1400069db:	pop    rbp
   1400069dc:	ret    
   1400069dd:	int3   
   1400069de:	int3   
   1400069df:	int3   
   1400069e0:	int3   
   1400069e1:	int3   
   1400069e2:	int3   
   1400069e3:	int3   
   1400069e4:	int3   
   1400069e5:	int3   
   1400069e6:	int3   
   1400069e7:	int3   
   1400069e8:	int3   
   1400069e9:	int3   
   1400069ea:	int3   
   1400069eb:	int3   
   1400069ec:	int3   
   1400069ed:	int3   
   1400069ee:	int3   
   1400069ef:	int3   
   1400069f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400069f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400069fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400069ff:	push   rdi
   140006a00:	push   r14
   140006a02:	push   r15
   140006a04:	sub    rsp,0x20
   140006a08:	xor    esi,esi
   140006a0a:	lea    rbp,[rcx+0x638]
   140006a11:	mov    r15,r8
   140006a14:	mov    edi,edx
   140006a16:	mov    rbx,rcx
   140006a19:	lea    r14d,[rsi+0x1]
   140006a1d:	cmp    DWORD PTR [rbp+0x60],esi
   140006a20:	je     0x140006a2e
   140006a22:	mov    dl,r14b
   140006a25:	mov    rcx,rbp
   140006a28:	call   QWORD PTR [rip+0x3a02]        # 0x14000a430
   140006a2e:	cmp    edi,r14d
   140006a31:	lea    rcx,[rbx+0x6a0]
   140006a38:	sete   dl
   140006a3b:	call   QWORD PTR [rip+0x3a1f]        # 0x14000a460
   140006a41:	test   rax,rax
   140006a44:	jne    0x140006a4b
   140006a46:	mov    r14d,esi
   140006a49:	jmp    0x140006a66
   140006a4b:	mov    rdi,QWORD PTR [rax]
   140006a4e:	mov    QWORD PTR [r15],rdi
   140006a51:	mov    rax,QWORD PTR [rdi]
   140006a54:	mov    rbx,QWORD PTR [rax+0x8]
   140006a58:	mov    rcx,rbx
   140006a5b:	call   QWORD PTR [rip+0x3a57]        # 0x14000a4b8
   140006a61:	mov    rcx,rdi
   140006a64:	call   rbx
   140006a66:	cmp    DWORD PTR [rbp+0x60],esi
   140006a69:	je     0x140006a74
   140006a6b:	mov    rcx,rbp
   140006a6e:	call   QWORD PTR [rip+0x39c4]        # 0x14000a438
   140006a74:	test   r14d,r14d
   140006a77:	mov    eax,0x80070103
   140006a7c:	cmove  esi,eax
   140006a7f:	mov    rbx,QWORD PTR [rsp+0x40]
   140006a84:	mov    eax,esi
   140006a86:	mov    rsi,QWORD PTR [rsp+0x50]
   140006a8b:	mov    rbp,QWORD PTR [rsp+0x48]
   140006a90:	add    rsp,0x20
   140006a94:	pop    r15
   140006a96:	pop    r14
   140006a98:	pop    rdi
   140006a99:	ret    
   140006a9a:	int3   
   140006a9b:	int3   
   140006a9c:	int3   
   140006a9d:	int3   
   140006a9e:	int3   
   140006a9f:	int3   
   140006aa0:	mov    QWORD PTR [rsp+0x10],rbx
   140006aa5:	mov    QWORD PTR [rsp+0x18],rbp
   140006aaa:	push   rsi
   140006aab:	push   rdi
   140006aac:	push   r14
   140006aae:	sub    rsp,0x20
   140006ab2:	xor    esi,esi
   140006ab4:	lea    rbp,[rcx+0x638]
   140006abb:	mov    rdi,rdx
   140006abe:	mov    rbx,rcx
   140006ac1:	cmp    DWORD PTR [rbp+0x60],esi
   140006ac4:	je     0x140006ad1
   140006ac6:	mov    dl,0x1
   140006ac8:	mov    rcx,rbp
   140006acb:	call   QWORD PTR [rip+0x395f]        # 0x14000a430
   140006ad1:	lea    rdx,[rsp+0x40]
   140006ad6:	mov    QWORD PTR [rsp+0x40],rdi
   140006adb:	lea    rcx,[rbx+0x6a0]
   140006ae2:	call   QWORD PTR [rip+0x3980]        # 0x14000a468
   140006ae8:	mov    r14d,esi
   140006aeb:	test   rax,rax
   140006aee:	je     0x140006b1c
   140006af0:	mov    rdi,QWORD PTR [rax]
   140006af3:	lea    rcx,[rbx+0x6a0]
   140006afa:	mov    rdx,rax
   140006afd:	call   QWORD PTR [rip+0x3975]        # 0x14000a478
   140006b03:	movzx  r14d,al
   140006b07:	mov    rax,QWORD PTR [rdi]
   140006b0a:	mov    rbx,QWORD PTR [rax+0x10]
   140006b0e:	mov    rcx,rbx
   140006b11:	call   QWORD PTR [rip+0x39a1]        # 0x14000a4b8
   140006b17:	mov    rcx,rdi
   140006b1a:	call   rbx
   140006b1c:	cmp    DWORD PTR [rbp+0x60],esi
   140006b1f:	je     0x140006b2a
   140006b21:	mov    rcx,rbp
   140006b24:	call   QWORD PTR [rip+0x390e]        # 0x14000a438
   140006b2a:	test   r14d,r14d
   140006b2d:	jne    0x140006b4f
   140006b2f:	mov    r8d,0x80070002
   140006b35:	lea    r9,[rip+0x4d14]        # 0x14000b850
   140006b3c:	lea    rdx,[rip+0x4d35]        # 0x14000b878
   140006b43:	mov    esi,r8d
   140006b46:	lea    ecx,[r14+0x8]
   140006b4a:	call   0x140006f0c
   140006b4f:	mov    rbx,QWORD PTR [rsp+0x48]
   140006b54:	mov    eax,esi
   140006b56:	mov    rbp,QWORD PTR [rsp+0x50]
   140006b5b:	add    rsp,0x20
   140006b5f:	pop    r14
   140006b61:	pop    rdi
   140006b62:	pop    rsi
   140006b63:	ret    
   140006b64:	int3   
   140006b65:	int3   
   140006b66:	int3   
   140006b67:	int3   
   140006b68:	int3   
   140006b69:	int3   
   140006b6a:	int3   
   140006b6b:	int3   
   140006b6c:	int3   
   140006b6d:	int3   
   140006b6e:	int3   
   140006b6f:	int3   
   140006b70:	mov    QWORD PTR [rsp+0x8],rbx
   140006b75:	push   rdi
   140006b76:	sub    rsp,0x20
   140006b7a:	mov    rax,QWORD PTR [rip+0x51bf]        # 0x14000bd40
   140006b81:	mov    rdi,rcx
   140006b84:	cmp    rax,QWORD PTR [rdx]
   140006b87:	jne    0x140006b96
   140006b89:	mov    rax,QWORD PTR [rip+0x51b8]        # 0x14000bd48
   140006b90:	cmp    rax,QWORD PTR [rdx+0x8]
   140006b94:	je     0x140006baf
   140006b96:	mov    rax,QWORD PTR [rip+0x4d03]        # 0x14000b8a0
   140006b9d:	cmp    rax,QWORD PTR [rdx]
   140006ba0:	jne    0x140006bcb
   140006ba2:	mov    rax,QWORD PTR [rip+0x4cff]        # 0x14000b8a8
   140006ba9:	cmp    rax,QWORD PTR [rdx+0x8]
   140006bad:	jne    0x140006bcb
   140006baf:	mov    QWORD PTR [r8],rcx
   140006bb2:	mov    rax,QWORD PTR [rcx]
   140006bb5:	mov    rbx,QWORD PTR [rax+0x8]
   140006bb9:	mov    rcx,rbx
   140006bbc:	call   QWORD PTR [rip+0x38f6]        # 0x14000a4b8
   140006bc2:	mov    rcx,rdi
   140006bc5:	call   rbx
   140006bc7:	xor    eax,eax
   140006bc9:	jmp    0x140006bd9
   140006bcb:	test   r8,r8
   140006bce:	je     0x140006bd4
   140006bd0:	and    QWORD PTR [r8],0x0
   140006bd4:	mov    eax,0x80004002
   140006bd9:	mov    rbx,QWORD PTR [rsp+0x30]
   140006bde:	add    rsp,0x20
   140006be2:	pop    rdi
   140006be3:	ret    
   140006be4:	int3   
   140006be5:	int3   
   140006be6:	int3   
   140006be7:	int3   
   140006be8:	int3   
   140006be9:	int3   
   140006bea:	int3   
   140006beb:	int3   
   140006bec:	mov    QWORD PTR [rsp+0x8],rbx
   140006bf1:	push   rdi
   140006bf2:	sub    rsp,0x20
   140006bf6:	mov    rbx,QWORD PTR [rip+0xa573]        # 0x140011170
   140006bfd:	lea    rax,[rip+0x3d9c]        # 0x14000a9a0
   140006c04:	mov    QWORD PTR [rcx],rax
   140006c07:	lea    rdi,[rcx+0x628]
   140006c0e:	test   rbx,rbx
   140006c11:	je     0x140006c4e
   140006c13:	cmp    DWORD PTR [rbx+0x78],0x0
   140006c17:	je     0x140006c25
   140006c19:	mov    dl,0x1
   140006c1b:	lea    rcx,[rbx+0x18]
   140006c1f:	call   QWORD PTR [rip+0x380b]        # 0x14000a430
   140006c25:	mov    rcx,QWORD PTR [rdi]
   140006c28:	mov    rax,QWORD PTR [rdi+0x8]
   140006c2c:	cmp    QWORD PTR [rcx+0x8],rdi
   140006c30:	jne    0x140006c59
   140006c32:	cmp    QWORD PTR [rax],rdi
   140006c35:	jne    0x140006c59
   140006c37:	mov    QWORD PTR [rax],rcx
   140006c3a:	mov    QWORD PTR [rcx+0x8],rax
   140006c3e:	cmp    DWORD PTR [rbx+0x78],0x0
   140006c42:	je     0x140006c4e
   140006c44:	lea    rcx,[rbx+0x18]
   140006c48:	call   QWORD PTR [rip+0x37ea]        # 0x14000a438
   140006c4e:	mov    rbx,QWORD PTR [rsp+0x30]
   140006c53:	add    rsp,0x20
   140006c57:	pop    rdi
   140006c58:	ret    
   140006c59:	mov    ecx,0x3
   140006c5e:	int    0x29
   140006c60:	int3   
   140006c61:	int3   
   140006c62:	int3   
   140006c63:	int3   
   140006c64:	int3   
   140006c65:	int3   
   140006c66:	int3   
   140006c67:	int3   
   140006c68:	int3   
   140006c69:	int3   
   140006c6a:	int3   
   140006c6b:	int3   
   140006c6c:	int3   
   140006c6d:	int3   
   140006c6e:	int3   
   140006c6f:	int3   
   140006c70:	rex push rbx
   140006c72:	sub    rsp,0x20
   140006c76:	cmp    DWORD PTR [rcx+0xc],0x1
   140006c7a:	mov    rbx,rcx
   140006c7d:	jne    0x140006cbb
   140006c7f:	mov    eax,0x1
   140006c84:	lock xadd DWORD PTR [rcx+0x20],eax
   140006c89:	inc    eax
   140006c8b:	and    eax,0x1f
   140006c8e:	cmp    DWORD PTR [rip+0xa4eb],0x1        # 0x140011180
   140006c95:	jne    0x140006cbb
   140006c97:	cdqe   
   140006c99:	lea    r8,[rbx+0x28]
   140006c9d:	mov    edx,0x6
   140006ca2:	lea    r9,[rsp+0x30]
   140006ca7:	lea    rcx,[rax+rax*2]
   140006cab:	shl    rcx,0x4
   140006caf:	add    r8,rcx
   140006cb2:	lea    ecx,[rdx-0x5]
   140006cb5:	call   QWORD PTR [rip+0x33ed]        # 0x14000a0a8
   140006cbb:	mov    ecx,0x1
   140006cc0:	lock xadd QWORD PTR [rbx+0x18],rcx
   140006cc6:	inc    rcx
   140006cc9:	mov    rax,rcx
   140006ccc:	sar    rax,0x20
   140006cd0:	or     rax,rcx
   140006cd3:	add    rsp,0x20
   140006cd7:	pop    rbx
   140006cd8:	ret    
   140006cd9:	int3   
   140006cda:	int3   
   140006cdb:	int3   
   140006cdc:	int3   
   140006cdd:	int3   
   140006cde:	int3   
   140006cdf:	int3   
   140006ce0:	mov    QWORD PTR [rsp+0x10],rbx
   140006ce5:	mov    QWORD PTR [rsp+0x18],rsi
   140006cea:	push   rdi
   140006ceb:	sub    rsp,0x20
   140006cef:	cmp    DWORD PTR [rcx+0xc],0x1
   140006cf3:	mov    rdi,rcx
   140006cf6:	jne    0x140006d34
   140006cf8:	mov    eax,0x1
   140006cfd:	lock xadd DWORD PTR [rcx+0x20],eax
   140006d02:	inc    eax
   140006d04:	and    eax,0x1f
   140006d07:	cmp    DWORD PTR [rip+0xa472],0x1        # 0x140011180
   140006d0e:	jne    0x140006d34
   140006d10:	cdqe   
   140006d12:	lea    r8,[rdi+0x28]
   140006d16:	mov    edx,0x6
   140006d1b:	lea    r9,[rsp+0x30]
   140006d20:	lea    rcx,[rax+rax*2]
   140006d24:	shl    rcx,0x4
   140006d28:	add    r8,rcx
   140006d2b:	lea    ecx,[rdx-0x5]
   140006d2e:	call   QWORD PTR [rip+0x3374]        # 0x14000a0a8
   140006d34:	or     rsi,0xffffffffffffffff
   140006d38:	lock xadd QWORD PTR [rdi+0x18],rsi
   140006d3e:	sub    rsi,0x1
   140006d42:	jne    0x140006d5c
   140006d44:	mov    rax,QWORD PTR [rdi]
   140006d47:	mov    rbx,QWORD PTR [rax+0x38]
   140006d4b:	mov    rcx,rbx
   140006d4e:	call   QWORD PTR [rip+0x3764]        # 0x14000a4b8
   140006d54:	lea    edx,[rsi+0x1]
   140006d57:	mov    rcx,rdi
   140006d5a:	call   rbx
   140006d5c:	mov    rbx,QWORD PTR [rsp+0x38]
   140006d61:	mov    rax,rsi
   140006d64:	sar    rax,0x20
   140006d68:	or     rax,rsi
   140006d6b:	mov    rsi,QWORD PTR [rsp+0x40]
   140006d70:	add    rsp,0x20
   140006d74:	pop    rdi
   140006d75:	ret    
   140006d76:	int3   
   140006d77:	int3   
   140006d78:	int3   
   140006d79:	int3   
   140006d7a:	int3   
   140006d7b:	int3   
   140006d7c:	int3   
   140006d7d:	int3   
   140006d7e:	int3   
   140006d7f:	int3   
   140006d80:	test   r8,r8
   140006d83:	je     0x140006d89
   140006d85:	and    QWORD PTR [r8],0x0
   140006d89:	mov    eax,0x80004002
   140006d8e:	ret    
   140006d8f:	int3   
   140006d90:	int3   
   140006d91:	int3   
   140006d92:	int3   
   140006d93:	int3   
   140006d94:	int3   
   140006d95:	int3   
   140006d96:	int3   
   140006d97:	int3   
   140006d98:	int3   
   140006d99:	int3   
   140006d9a:	int3   
   140006d9b:	int3   
   140006d9c:	int3   
   140006d9d:	int3   
   140006d9e:	int3   
   140006d9f:	int3   
   140006da0:	mov    QWORD PTR [rsp+0x8],rbx
   140006da5:	push   rdi
   140006da6:	sub    rsp,0x20
   140006daa:	mov    ebx,edx
   140006dac:	mov    rdi,rcx
   140006daf:	call   0x140006bec
   140006db4:	test   bl,0x1
   140006db7:	je     0x140006dc1
   140006db9:	mov    rcx,rdi
   140006dbc:	call   0x140007d08
   140006dc1:	mov    rax,rdi
   140006dc4:	mov    rbx,QWORD PTR [rsp+0x30]
   140006dc9:	add    rsp,0x20
   140006dcd:	pop    rdi
   140006dce:	ret    
   140006dcf:	int3   
   140006dd0:	int3   
   140006dd1:	int3   
   140006dd2:	int3   
   140006dd3:	int3   
   140006dd4:	int3   
   140006dd5:	int3   
   140006dd6:	int3   
   140006dd7:	int3   
   140006dd8:	int3   
   140006dd9:	int3   
   140006dda:	int3   
   140006ddb:	int3   
   140006ddc:	int3   
   140006ddd:	int3   
   140006dde:	int3   
   140006ddf:	int3   
   140006de0:	mov    rax,rsp
   140006de3:	mov    QWORD PTR [rax+0x8],rbx
   140006de7:	mov    QWORD PTR [rax+0x10],rsi
   140006deb:	mov    QWORD PTR [rax+0x18],rdi
   140006def:	mov    QWORD PTR [rax+0x20],r14
   140006df3:	push   r15
   140006df5:	sub    rsp,0x20
   140006df9:	mov    rsi,QWORD PTR [rdx]
   140006dfc:	mov    r14,r8
   140006dff:	mov    rdi,QWORD PTR [r8]
   140006e02:	mov    r15,rdx
   140006e05:	mov    rax,QWORD PTR [rsi]
   140006e08:	mov    rbx,QWORD PTR [rax+0x40]
   140006e0c:	mov    rcx,rbx
   140006e0f:	call   QWORD PTR [rip+0x36a3]        # 0x14000a4b8
   140006e15:	mov    rdx,rdi
   140006e18:	mov    rcx,rsi
   140006e1b:	call   rbx
   140006e1d:	test   eax,eax
   140006e1f:	je     0x140006e25
   140006e21:	xor    eax,eax
   140006e23:	jmp    0x140006e4a
   140006e25:	mov    rsi,QWORD PTR [r15]
   140006e28:	mov    rdi,QWORD PTR [r14]
   140006e2b:	mov    rax,QWORD PTR [rsi]
   140006e2e:	mov    rbx,QWORD PTR [rax+0x38]
   140006e32:	mov    rcx,rbx
   140006e35:	call   QWORD PTR [rip+0x367d]        # 0x14000a4b8
   140006e3b:	mov    rdx,rdi
   140006e3e:	mov    rcx,rsi
   140006e41:	call   rbx
   140006e43:	neg    eax
   140006e45:	sbb    eax,eax
   140006e47:	add    eax,0x2
   140006e4a:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e4f:	mov    rsi,QWORD PTR [rsp+0x38]
   140006e54:	mov    rdi,QWORD PTR [rsp+0x40]
   140006e59:	mov    r14,QWORD PTR [rsp+0x48]
   140006e5e:	add    rsp,0x20
   140006e62:	pop    r15
   140006e64:	ret    
   140006e65:	int3   
   140006e66:	int3   
   140006e67:	int3   
   140006e68:	int3   
   140006e69:	int3   
   140006e6a:	int3   
   140006e6b:	int3   
   140006e6c:	int3   
   140006e6d:	int3   
   140006e6e:	int3   
   140006e6f:	int3   
   140006e70:	mov    ecx,edx
   140006e72:	jmp    0x140007c88
   140006e77:	int3   
   140006e78:	int3   
   140006e79:	int3   
   140006e7a:	int3   
   140006e7b:	int3   
   140006e7c:	int3   
   140006e7d:	int3   
   140006e7e:	int3   
   140006e7f:	int3   
   140006e80:	mov    rcx,rdx
   140006e83:	jmp    0x140007d08
   140006e88:	int3   
   140006e89:	int3   
   140006e8a:	int3   
   140006e8b:	int3   
   140006e8c:	int3   
   140006e8d:	int3   
   140006e8e:	int3   
   140006e8f:	int3   
   140006e90:	mov    QWORD PTR [rsp+0x18],r8
   140006e95:	mov    QWORD PTR [rsp+0x20],r9
   140006e9a:	push   rbx
   140006e9b:	push   rsi
   140006e9c:	push   rdi
   140006e9d:	sub    rsp,0x20
   140006ea1:	xor    edi,edi
   140006ea3:	lea    rax,[rdx-0x1]
   140006ea7:	cmp    rax,0x7ffffffe
   140006ead:	mov    rsi,rcx
   140006eb0:	mov    ecx,0x80070057
   140006eb5:	cmova  edi,ecx
   140006eb8:	test   edi,edi
   140006eba:	js     0x140006ef1
   140006ebc:	lea    rbx,[rdx-0x1]
   140006ec0:	mov    rcx,rsi
   140006ec3:	mov    rdx,rbx
   140006ec6:	lea    r9,[rsp+0x58]
   140006ecb:	xor    edi,edi
   140006ecd:	call   QWORD PTR [rip+0x3505]        # 0x14000a3d8
   140006ed3:	test   eax,eax
   140006ed5:	js     0x140006ee6
   140006ed7:	cdqe   
   140006ed9:	cmp    rax,rbx
   140006edc:	ja     0x140006ee6
   140006ede:	jne    0x140006ef9
   140006ee0:	mov    BYTE PTR [rbx+rsi*1],dil
   140006ee4:	jmp    0x140006ef9
   140006ee6:	mov    BYTE PTR [rbx+rsi*1],dil
   140006eea:	mov    edi,0x8007007a
   140006eef:	jmp    0x140006ef9
   140006ef1:	test   rdx,rdx
   140006ef4:	je     0x140006ef9
   140006ef6:	mov    BYTE PTR [rsi],0x0
   140006ef9:	mov    eax,edi
   140006efb:	add    rsp,0x20
   140006eff:	pop    rdi
   140006f00:	pop    rsi
   140006f01:	pop    rbx
   140006f02:	ret    
   140006f03:	int3   
   140006f04:	int3   
   140006f05:	int3   
   140006f06:	int3   
   140006f07:	int3   
   140006f08:	int3   
   140006f09:	int3   
   140006f0a:	int3   
   140006f0b:	int3   
   140006f0c:	mov    rax,rsp
   140006f0f:	mov    QWORD PTR [rax+0x10],rdx
   140006f13:	mov    QWORD PTR [rax+0x18],r8
   140006f17:	mov    QWORD PTR [rax+0x20],r9
   140006f1b:	push   rbp
   140006f1c:	push   rbx
   140006f1d:	push   rsi
   140006f1e:	push   rdi
   140006f1f:	push   r12
   140006f21:	push   r13
   140006f23:	push   r14
   140006f25:	lea    rbp,[rax-0x188]
   140006f2c:	sub    rsp,0x250
   140006f33:	mov    rax,QWORD PTR [rip+0x70d6]        # 0x14000e010
   140006f3a:	xor    rax,rsp
   140006f3d:	mov    QWORD PTR [rbp+0x140],rax
   140006f44:	mov    r13d,0x80
   140006f4a:	mov    edi,ecx
   140006f4c:	cmp    ecx,r13d
   140006f4f:	je     0x140006f5a
   140006f51:	test   cl,0xba
   140006f54:	je     0x1400071ed
   140006f5a:	call   QWORD PTR [rip+0x3128]        # 0x14000a088
   140006f60:	mov    esi,0x100
   140006f65:	mov    r14d,eax
   140006f68:	cmp    edi,r13d
   140006f6b:	jg     0x140006ff3
   140006f71:	je     0x140006fea
   140006f73:	mov    edx,edi
   140006f75:	sub    edx,0x1
   140006f78:	je     0x140006fe1
   140006f7a:	sub    edx,0x1
   140006f7d:	je     0x140006fd8
   140006f7f:	sub    edx,0x2
   140006f82:	je     0x140006fcc
   140006f84:	sub    edx,0x4
   140006f87:	je     0x140006fc0
   140006f89:	sub    edx,0x8
   140006f8c:	je     0x140006fb4
   140006f8e:	sub    edx,0x10
   140006f91:	je     0x140006fa8
   140006f93:	cmp    edx,0x20
   140006f96:	jne    0x14000701f
   140006f9c:	lea    rbx,[rip+0x4949]        # 0x14000b8ec
   140006fa3:	jmp    0x14000705c
   140006fa8:	lea    rbx,[rip+0x498d]        # 0x14000b93c
   140006faf:	jmp    0x14000705c
   140006fb4:	lea    rbx,[rip+0x4979]        # 0x14000b934
   140006fbb:	jmp    0x14000705c
   140006fc0:	lea    rbx,[rip+0x490d]        # 0x14000b8d4
   140006fc7:	jmp    0x14000705c
   140006fcc:	lea    rbx,[rip+0x48f9]        # 0x14000b8cc
   140006fd3:	jmp    0x14000705c
   140006fd8:	lea    rbx,[rip+0x48d1]        # 0x14000b8b0
   140006fdf:	jmp    0x14000705c
   140006fe1:	lea    rbx,[rip+0x48dc]        # 0x14000b8c4
   140006fe8:	jmp    0x14000705c
   140006fea:	lea    rbx,[rip+0x48ef]        # 0x14000b8e0
   140006ff1:	jmp    0x14000705c
   140006ff3:	cmp    edi,esi
   140006ff5:	je     0x140007055
   140006ff7:	cmp    edi,0x200
   140006ffd:	je     0x14000704c
   140006fff:	cmp    edi,0x400
   140007005:	je     0x140007043
   140007007:	cmp    edi,0x800
   14000700d:	je     0x14000703a
   14000700f:	cmp    edi,0x1000
   140007015:	je     0x140007031
   140007017:	cmp    edi,0x2000
   14000701d:	je     0x140007028
   14000701f:	lea    rbx,[rip+0x491e]        # 0x14000b944
   140007026:	jmp    0x14000705c
   140007028:	lea    rbx,[rip+0x488d]        # 0x14000b8bc
   14000702f:	jmp    0x14000705c
   140007031:	lea    rbx,[rip+0x487c]        # 0x14000b8b4
   140007038:	jmp    0x14000705c
   14000703a:	lea    rbx,[rip+0x48e7]        # 0x14000b928
   140007041:	jmp    0x14000705c
   140007043:	lea    rbx,[rip+0x48ce]        # 0x14000b918
   14000704a:	jmp    0x14000705c
   14000704c:	lea    rbx,[rip+0x48b5]        # 0x14000b908
   140007053:	jmp    0x14000705c
   140007055:	lea    rbx,[rip+0x489c]        # 0x14000b8f8
   14000705c:	mov    r8,QWORD PTR [rbp+0x198]
   140007063:	lea    r9,[rbp+0x1a0]
   14000706a:	mov    r12d,0xff
   140007070:	mov    QWORD PTR [rsp+0x38],r9
   140007075:	mov    edx,r12d
   140007078:	lea    rcx,[rbp+0x40]
   14000707c:	call   QWORD PTR [rip+0x3356]        # 0x14000a3d8
   140007082:	test   eax,eax
   140007084:	js     0x14000708f
   140007086:	cdqe   
   140007088:	cmp    rax,r12
   14000708b:	ja     0x14000708f
   14000708d:	jne    0x140007096
   14000708f:	mov    BYTE PTR [rbp+0x13f],0x0
   140007096:	lea    r9,[rip+0x3f73]        # 0x14000b010
   14000709d:	mov    rdx,rsi
   1400070a0:	lea    rax,[rbp+0x40]
   1400070a4:	lea    rcx,[rsp+0x40]
   1400070a9:	test   r9,r9
   1400070ac:	je     0x1400070c6
   1400070ae:	mov    QWORD PTR [rsp+0x28],rax
   1400070b3:	lea    r8,[rip+0x4896]        # 0x14000b950
   1400070ba:	mov    QWORD PTR [rsp+0x20],rbx
   1400070bf:	call   0x140006e90
   1400070c4:	jmp    0x1400070da
   1400070c6:	mov    r9,rbx
   1400070c9:	mov    QWORD PTR [rsp+0x20],rax
   1400070ce:	lea    r8,[rip+0x4883]        # 0x14000b958
   1400070d5:	call   0x140006e90
   1400070da:	mov    rbx,QWORD PTR [rip+0x76e7]        # 0x14000e7c8
   1400070e1:	mov    BYTE PTR [rbp+0x3f],0x0
   1400070e5:	test   rbx,rbx
   1400070e8:	je     0x1400070fc
   1400070ea:	mov    rcx,rbx
   1400070ed:	call   QWORD PTR [rip+0x33c5]        # 0x14000a4b8
   1400070f3:	lea    rdx,[rsp+0x40]
   1400070f8:	mov    ecx,edi
   1400070fa:	call   rbx
   1400070fc:	mov    rax,rsi
   1400070ff:	lea    rcx,[rsp+0x40]
   140007104:	mov    r9d,0x1
   14000710a:	cmp    BYTE PTR [rcx],0x0
   14000710d:	je     0x140007117
   14000710f:	add    rcx,r9
   140007112:	sub    rax,r9
   140007115:	jne    0x14000710a
   140007117:	test   rax,rax
   14000711a:	je     0x140007170
   14000711c:	mov    rcx,rsi
   14000711f:	sub    rcx,rax
   140007122:	lea    rax,[rsp+0x40]
   140007127:	mov    QWORD PTR [rsp+0x30],rcx
   14000712c:	lea    rax,[rax+rcx*1]
   140007130:	sub    rsi,rcx
   140007133:	je     0x14000716a
   140007135:	lea    rdx,[rcx+0x7ffffefe]
   14000713c:	add    rdx,rsi
   14000713f:	lea    rcx,[rip+0x481a]        # 0x14000b960
   140007146:	sub    rcx,rax
   140007149:	test   rdx,rdx
   14000714c:	je     0x140007165
   14000714e:	mov    r8b,BYTE PTR [rcx+rax*1]
   140007152:	test   r8b,r8b
   140007155:	je     0x140007165
   140007157:	mov    BYTE PTR [rax],r8b
   14000715a:	sub    rdx,r9
   14000715d:	add    rax,r9
   140007160:	sub    rsi,r9
   140007163:	jne    0x140007149
   140007165:	test   rsi,rsi
   140007168:	jne    0x14000716d
   14000716a:	sub    rax,r9
   14000716d:	mov    BYTE PTR [rax],0x0
   140007170:	mov    eax,r9d
   140007173:	lock xadd DWORD PTR [rip+0x7655],eax        # 0x14000e7d0
   14000717b:	dec    eax
   14000717d:	lea    r8,[rsp+0x40]
   140007182:	add    eax,r9d
   140007185:	mov    edx,0x50
   14000718a:	and    eax,0x7f
   14000718d:	lea    rcx,[rax+rax*4]
   140007191:	shl    rcx,0x4
   140007195:	lea    rax,[rip+0x7644]        # 0x14000e7e0
   14000719c:	add    rcx,rax
   14000719f:	sub    r8,rcx
   1400071a2:	lea    rax,[rdx+0x7fffffae]
   1400071a9:	test   rax,rax
   1400071ac:	je     0x1400071c0
   1400071ae:	mov    al,BYTE PTR [r8+rcx*1]
   1400071b2:	test   al,al
   1400071b4:	je     0x1400071c0
   1400071b6:	mov    BYTE PTR [rcx],al
   1400071b8:	add    rcx,r9
   1400071bb:	sub    rdx,r9
   1400071be:	jne    0x1400071a2
   1400071c0:	test   rdx,rdx
   1400071c3:	jne    0x1400071c8
   1400071c5:	sub    rcx,r9
   1400071c8:	cmp    DWORD PTR [rip+0x9f99],0x0        # 0x140011168
   1400071cf:	mov    BYTE PTR [rcx],0x0
   1400071d2:	jne    0x1400071d9
   1400071d4:	cmp    edi,r13d
   1400071d7:	jne    0x1400071e4
   1400071d9:	lea    rcx,[rsp+0x40]
   1400071de:	call   QWORD PTR [rip+0x3094]        # 0x14000a278
   1400071e4:	mov    ecx,r14d
   1400071e7:	call   QWORD PTR [rip+0x2ee3]        # 0x14000a0d0
   1400071ed:	mov    rcx,QWORD PTR [rbp+0x140]
   1400071f4:	xor    rcx,rsp
   1400071f7:	call   0x1400081f0
   1400071fc:	add    rsp,0x250
   140007203:	pop    r14
   140007205:	pop    r13
   140007207:	pop    r12
   140007209:	pop    rdi
   14000720a:	pop    rsi
   14000720b:	pop    rbx
   14000720c:	pop    rbp
   14000720d:	ret    
   14000720e:	int3   
   14000720f:	int3   
   140007210:	int3   
   140007211:	int3   
   140007212:	int3   
   140007213:	int3   
   140007214:	rex push rbx
   140007216:	sub    rsp,0x70
   14000721a:	mov    rax,QWORD PTR [rip+0x6def]        # 0x14000e010
   140007221:	xor    rax,rsp
   140007224:	mov    QWORD PTR [rsp+0x68],rax
   140007229:	xor    ebx,ebx
   14000722b:	mov    WORD PTR [rsp+0x64],0xf00
   140007232:	lea    rax,[rip+0x9f4f]        # 0x140011188
   140007239:	mov    DWORD PTR [rsp+0x60],ebx
   14000723d:	test   rax,rax
   140007240:	jne    0x140007266
   140007242:	lea    r9,[rip+0x47ef]        # 0x14000ba38
   140007249:	lea    r8,[rip+0x4808]        # 0x14000ba58
   140007250:	lea    rdx,[rip+0x4819]        # 0x14000ba70
   140007257:	lea    ecx,[rbx+0x8]
   14000725a:	call   0x140006f0c
   14000725f:	mov    ebx,0x80070057
   140007264:	jmp    0x1400072d2
   140007266:	mov    QWORD PTR [rsp+0x50],rax
   14000726b:	lea    rcx,[rsp+0x60]
   140007270:	and    DWORD PTR [rsp+0x48],ebx
   140007274:	mov    r9d,0x1
   14000727a:	and    DWORD PTR [rsp+0x40],ebx
   14000727e:	and    DWORD PTR [rsp+0x38],ebx
   140007282:	and    DWORD PTR [rsp+0x30],ebx
   140007286:	and    DWORD PTR [rsp+0x28],ebx
   14000728a:	lea    r8d,[r9+0x1]
   14000728e:	and    DWORD PTR [rsp+0x20],ebx
   140007292:	mov    dl,r8b
   140007295:	call   QWORD PTR [rip+0x2dc5]        # 0x14000a060
   14000729b:	test   eax,eax
   14000729d:	jne    0x1400072d2
   14000729f:	call   QWORD PTR [rip+0x2de3]        # 0x14000a088
   1400072a5:	movzx  ebx,ax
   1400072a8:	or     ebx,0x80070000
   1400072ae:	test   eax,eax
   1400072b0:	cmovle ebx,eax
   1400072b3:	test   ebx,ebx
   1400072b5:	jns    0x1400072d2
   1400072b7:	lea    r9,[rip+0x477a]        # 0x14000ba38
   1400072be:	mov    r8d,ebx
   1400072c1:	lea    rdx,[rip+0x47c8]        # 0x14000ba90
   1400072c8:	mov    ecx,0x8
   1400072cd:	call   0x140006f0c
   1400072d2:	mov    eax,ebx
   1400072d4:	mov    rcx,QWORD PTR [rsp+0x68]
   1400072d9:	xor    rcx,rsp
   1400072dc:	call   0x1400081f0
   1400072e1:	add    rsp,0x70
   1400072e5:	pop    rbx
   1400072e6:	ret    
   1400072e7:	int3   
   1400072e8:	int3   
   1400072e9:	int3   
   1400072ea:	int3   
   1400072eb:	int3   
   1400072ec:	int3   
   1400072ed:	int3   
   1400072ee:	int3   
   1400072ef:	int3   
   1400072f0:	mov    rax,rsp
   1400072f3:	mov    QWORD PTR [rax+0x8],rbx
   1400072f7:	mov    QWORD PTR [rax+0x10],rsi
   1400072fb:	mov    QWORD PTR [rax+0x18],rdi
   1400072ff:	push   rbp
   140007300:	push   r12
   140007302:	push   r14
   140007304:	lea    rbp,[rax-0x1e8]
   14000730b:	sub    rsp,0x2d0
   140007312:	mov    rax,QWORD PTR [rip+0x6cf7]        # 0x14000e010
   140007319:	xor    rax,rsp
   14000731c:	mov    QWORD PTR [rbp+0x1c0],rax
   140007323:	xor    esi,esi
   140007325:	lea    rcx,[rbp+0xa4]
   14000732c:	xor    edx,edx
   14000732e:	mov    DWORD PTR [rbp+0xa0],esi
   140007334:	mov    r8d,0x118
   14000733a:	call   0x14000864c
   14000733f:	lea    rax,[rsp+0x60]
   140007344:	mov    DWORD PTR [rip+0x9e1e],esi        # 0x140011168
   14000734a:	mov    r9d,0x20019
   140007350:	mov    QWORD PTR [rsp+0x20],rax
   140007355:	xor    r8d,r8d
   140007358:	mov    QWORD PTR [rsp+0x60],rsi
   14000735d:	lea    rdx,[rip+0x461c]        # 0x14000b980
   140007364:	mov    rcx,0xffffffff80000002
   14000736b:	mov    ebx,esi
   14000736d:	call   QWORD PTR [rip+0x2cb5]        # 0x14000a028
   140007373:	lea    r14d,[rsi+0x8]
   140007377:	test   eax,eax
   140007379:	je     0x140007387
   14000737b:	lea    rdx,[rip+0x473e]        # 0x14000bac0
   140007382:	mov    ecx,r14d
   140007385:	jmp    0x1400073e1
   140007387:	mov    rcx,QWORD PTR [rsp+0x60]
   14000738c:	lea    rax,[rsp+0x68]
   140007391:	mov    QWORD PTR [rsp+0x28],rax
   140007396:	lea    r9,[rsp+0x6c]
   14000739b:	lea    rax,[rsp+0x70]
   1400073a0:	mov    DWORD PTR [rsp+0x68],0x4
   1400073a8:	xor    r8d,r8d
   1400073ab:	mov    QWORD PTR [rsp+0x20],rax
   1400073b0:	lea    rdx,[rip+0x4739]        # 0x14000baf0
   1400073b7:	call   QWORD PTR [rip+0x2c9b]        # 0x14000a058
   1400073bd:	test   eax,eax
   1400073bf:	jne    0x1400073d5
   1400073c1:	cmp    DWORD PTR [rsp+0x68],0x4
   1400073c6:	jne    0x1400073d5
   1400073c8:	cmp    DWORD PTR [rsp+0x6c],0x4
   1400073cd:	jne    0x1400073d5
   1400073cf:	mov    ebx,DWORD PTR [rsp+0x70]
   1400073d3:	jmp    0x1400073e9
   1400073d5:	lea    rdx,[rip+0x472c]        # 0x14000bb08
   1400073dc:	mov    ecx,0x1
   1400073e1:	mov    r8d,eax
   1400073e4:	call   0x140006f0c
   1400073e9:	mov    rcx,QWORD PTR [rsp+0x60]
   1400073ee:	test   rcx,rcx
   1400073f1:	je     0x1400073f9
   1400073f3:	call   QWORD PTR [rip+0x2c17]        # 0x14000a010
   1400073f9:	lea    rax,[rsp+0x60]
   1400073fe:	mov    DWORD PTR [rip+0x9da0],ebx        # 0x1400111a4
   140007404:	mov    QWORD PTR [rsp+0x50],rax
   140007409:	lea    rcx,[rsp+0x70]
   14000740e:	mov    DWORD PTR [rsp+0x48],esi
   140007412:	xor    r9d,r9d
   140007415:	mov    DWORD PTR [rsp+0x40],esi
   140007419:	mov    dl,0x1
   14000741b:	mov    DWORD PTR [rsp+0x38],esi
   14000741f:	mov    DWORD PTR [rsp+0x30],esi
   140007423:	mov    DWORD PTR [rsp+0x28],esi
   140007427:	lea    r8d,[r9+0x12]
   14000742b:	mov    DWORD PTR [rsp+0x20],esi
   14000742f:	mov    DWORD PTR [rsp+0x70],esi
   140007433:	mov    WORD PTR [rsp+0x74],0x500
   14000743a:	call   QWORD PTR [rip+0x3008]        # 0x14000a448
   140007440:	mov    r12d,0x80070000
   140007446:	test   eax,eax
   140007448:	js     0x14000745a
   14000744a:	mov    rax,QWORD PTR [rsp+0x60]
   14000744f:	mov    ebx,esi
   140007451:	mov    QWORD PTR [rip+0x9d50],rax        # 0x1400111a8
   140007458:	jmp    0x14000747b
   14000745a:	mov    ecx,eax
   14000745c:	call   QWORD PTR [rip+0x3046]        # 0x14000a4a8
   140007462:	mov    ecx,eax
   140007464:	call   QWORD PTR [rip+0x2c66]        # 0x14000a0d0
   14000746a:	call   QWORD PTR [rip+0x2c18]        # 0x14000a088
   140007470:	movzx  ebx,ax
   140007473:	or     ebx,r12d
   140007476:	test   eax,eax
   140007478:	cmovle ebx,eax
   14000747b:	test   ebx,ebx
   14000747d:	jns    0x14000749d
   14000747f:	lea    rdx,[rip+0x46c2]        # 0x14000bb48
   140007486:	mov    r8d,ebx
   140007489:	lea    r9,[rip+0x46a0]        # 0x14000bb30
   140007490:	mov    ecx,r14d
   140007493:	call   0x140006f0c
   140007498:	jmp    0x14000781c
   14000749d:	lea    rax,[rsp+0x60]
   1400074a2:	mov    DWORD PTR [rsp+0x70],esi
   1400074a6:	mov    QWORD PTR [rsp+0x50],rax
   1400074ab:	lea    rcx,[rsp+0x70]
   1400074b0:	mov    DWORD PTR [rsp+0x48],esi
   1400074b4:	mov    r9d,0x220
   1400074ba:	mov    DWORD PTR [rsp+0x40],esi
   1400074be:	mov    r8d,0x20
   1400074c4:	mov    DWORD PTR [rsp+0x38],esi
   1400074c8:	mov    dl,0x2
   1400074ca:	mov    DWORD PTR [rsp+0x30],esi
   1400074ce:	mov    DWORD PTR [rsp+0x28],esi
   1400074d2:	mov    DWORD PTR [rsp+0x20],esi
   1400074d6:	mov    WORD PTR [rsp+0x74],0x500
   1400074dd:	call   QWORD PTR [rip+0x2f65]        # 0x14000a448
   1400074e3:	test   eax,eax
   1400074e5:	js     0x1400074f7
   1400074e7:	mov    rax,QWORD PTR [rsp+0x60]
   1400074ec:	mov    ebx,esi
   1400074ee:	mov    QWORD PTR [rip+0x9c83],rax        # 0x140011178
   1400074f5:	jmp    0x140007518
   1400074f7:	mov    ecx,eax
   1400074f9:	call   QWORD PTR [rip+0x2fa9]        # 0x14000a4a8
   1400074ff:	mov    ecx,eax
   140007501:	call   QWORD PTR [rip+0x2bc9]        # 0x14000a0d0
   140007507:	call   QWORD PTR [rip+0x2b7b]        # 0x14000a088
   14000750d:	movzx  ebx,ax
   140007510:	or     ebx,r12d
   140007513:	test   eax,eax
   140007515:	cmovle ebx,eax
   140007518:	test   ebx,ebx
   14000751a:	jns    0x140007528
   14000751c:	lea    rdx,[rip+0x4655]        # 0x14000bb78
   140007523:	jmp    0x140007486
   140007528:	lea    rax,[rsp+0x60]
   14000752d:	mov    DWORD PTR [rsp+0x70],esi
   140007531:	mov    QWORD PTR [rsp+0x50],rax
   140007536:	lea    rcx,[rsp+0x70]
   14000753b:	mov    DWORD PTR [rsp+0x48],esi
   14000753f:	xor    r9d,r9d
   140007542:	mov    DWORD PTR [rsp+0x40],esi
   140007546:	mov    dl,0x1
   140007548:	mov    DWORD PTR [rsp+0x38],esi
   14000754c:	mov    DWORD PTR [rsp+0x30],esi
   140007550:	mov    DWORD PTR [rsp+0x28],esi
   140007554:	lea    r8d,[r9+0x7]
   140007558:	mov    DWORD PTR [rsp+0x20],esi
   14000755c:	mov    WORD PTR [rsp+0x74],0x500
   140007563:	call   QWORD PTR [rip+0x2edf]        # 0x14000a448
   140007569:	mov    ebx,eax
   14000756b:	mov    rax,QWORD PTR [rip+0x9c26]        # 0x140011198
   140007572:	test   ebx,ebx
   140007574:	cmovns rax,QWORD PTR [rsp+0x60]
   14000757a:	or     ebx,0x10000000
   140007580:	mov    QWORD PTR [rip+0x9c11],rax        # 0x140011198
   140007587:	jge    0x140007595
   140007589:	lea    rdx,[rip+0x4618]        # 0x14000bba8
   140007590:	jmp    0x140007486
   140007595:	mov    edx,0x44
   14000759a:	mov    edi,esi
   14000759c:	mov    DWORD PTR [rsp+0x70],edx
   1400075a0:	lea    ecx,[rdx-0x4]
   1400075a3:	call   QWORD PTR [rip+0x2b3f]        # 0x14000a0e8
   1400075a9:	mov    rbx,rax
   1400075ac:	test   rax,rax
   1400075af:	jne    0x1400075d3
   1400075b1:	mov    ebx,0x8007000e
   1400075b6:	lea    r9,[rip+0x442b]        # 0x14000b9e8
   1400075bd:	mov    r8d,ebx
   1400075c0:	lea    rdx,[rip+0x4441]        # 0x14000ba08
   1400075c7:	mov    ecx,r14d
   1400075ca:	mov    edi,ebx
   1400075cc:	call   0x140006f0c
   1400075d1:	jmp    0x140007617
   1400075d3:	xor    edx,edx
   1400075d5:	lea    r9,[rsp+0x70]
   1400075da:	mov    r8,rax
   1400075dd:	lea    ecx,[rdx+0x18]
   1400075e0:	call   QWORD PTR [rip+0x2a82]        # 0x14000a068
   1400075e6:	test   eax,eax
   1400075e8:	jne    0x1400075fd
   1400075ea:	call   QWORD PTR [rip+0x2a98]        # 0x14000a088
   1400075f0:	movzx  edi,ax
   1400075f3:	or     edi,r12d
   1400075f6:	test   eax,eax
   1400075f8:	cmovle edi,eax
   1400075fb:	jmp    0x140007604
   1400075fd:	mov    QWORD PTR [rip+0x9b8c],rbx        # 0x140011190
   140007604:	test   edi,edi
   140007606:	jns    0x140007611
   140007608:	mov    rcx,rbx
   14000760b:	call   QWORD PTR [rip+0x2acf]        # 0x14000a0e0
   140007611:	mov    ebx,edi
   140007613:	test   edi,edi
   140007615:	jns    0x140007626
   140007617:	mov    r8d,edi
   14000761a:	lea    rdx,[rip+0x45af]        # 0x14000bbd0
   140007621:	jmp    0x140007489
   140007626:	lea    rax,[rsp+0x60]
   14000762b:	mov    DWORD PTR [rsp+0x70],esi
   14000762f:	mov    QWORD PTR [rsp+0x50],rax
   140007634:	lea    rcx,[rsp+0x70]
   140007639:	mov    DWORD PTR [rsp+0x48],esi
   14000763d:	mov    r9d,0x241
   140007643:	mov    DWORD PTR [rsp+0x40],esi
   140007647:	mov    r8d,0x20
   14000764d:	mov    DWORD PTR [rsp+0x38],esi
   140007651:	mov    dl,0x2
   140007653:	mov    DWORD PTR [rsp+0x30],esi
   140007657:	mov    DWORD PTR [rsp+0x28],esi
   14000765b:	mov    DWORD PTR [rsp+0x20],esi
   14000765f:	mov    WORD PTR [rsp+0x74],0x500
   140007666:	call   QWORD PTR [rip+0x2ddc]        # 0x14000a448
   14000766c:	test   eax,eax
   14000766e:	js     0x140007680
   140007670:	mov    rax,QWORD PTR [rsp+0x60]
   140007675:	mov    ebx,esi
   140007677:	mov    QWORD PTR [rip+0x9b32],rax        # 0x1400111b0
   14000767e:	jmp    0x1400076a1
   140007680:	mov    ecx,eax
   140007682:	call   QWORD PTR [rip+0x2e20]        # 0x14000a4a8
   140007688:	mov    ecx,eax
   14000768a:	call   QWORD PTR [rip+0x2a40]        # 0x14000a0d0
   140007690:	call   QWORD PTR [rip+0x29f2]        # 0x14000a088
   140007696:	movzx  ebx,ax
   140007699:	or     ebx,r12d
   14000769c:	test   eax,eax
   14000769e:	cmovle ebx,eax
   1400076a1:	test   ebx,ebx
   1400076a3:	jns    0x1400076b1
   1400076a5:	lea    rdx,[rip+0x455c]        # 0x14000bc08
   1400076ac:	jmp    0x140007486
   1400076b1:	call   0x140007214
   1400076b6:	mov    ebx,eax
   1400076b8:	test   eax,eax
   1400076ba:	jns    0x1400076cb
   1400076bc:	mov    r8d,eax
   1400076bf:	lea    rdx,[rip+0x4572]        # 0x14000bc38
   1400076c6:	jmp    0x140007489
   1400076cb:	mov    ebx,0x11c
   1400076d0:	lea    rcx,[rbp-0x80]
   1400076d4:	mov    r8d,ebx
   1400076d7:	xor    edx,edx
   1400076d9:	call   0x14000864c
   1400076de:	lea    eax,[rbx-0x1c]
   1400076e1:	mov    DWORD PTR [rbp-0x80],ebx
   1400076e4:	mov    r8b,0x1
   1400076e7:	mov    BYTE PTR [rbp+0x9a],0x1
   1400076ee:	xor    ecx,ecx
   1400076f0:	mov    WORD PTR [rbp+0x98],ax
   1400076f7:	lea    edi,[rax-0x80]
   1400076fa:	mov    edx,edi
   1400076fc:	call   QWORD PTR [rip+0x29ae]        # 0x14000a0b0
   140007702:	mov    r8b,0x7
   140007705:	lea    edx,[rdi-0x40]
   140007708:	mov    rcx,rax
   14000770b:	call   QWORD PTR [rip+0x299f]        # 0x14000a0b0
   140007711:	mov    r8,rax
   140007714:	lea    edx,[rbx-0x5c]
   140007717:	lea    rcx,[rbp-0x80]
   14000771b:	call   QWORD PTR [rip+0x2d07]        # 0x14000a428
   140007721:	mov    ecx,esi
   140007723:	mov    DWORD PTR [rbp+0xa0],ebx
   140007729:	test   eax,eax
   14000772b:	mov    BYTE PTR [rbp+0x1ba],0x1
   140007732:	mov    r8b,0x1
   140007735:	mov    edx,edi
   140007737:	setns  cl
   14000773a:	mov    DWORD PTR [rip+0x9a44],ecx        # 0x140011184
   140007740:	xor    ecx,ecx
   140007742:	call   QWORD PTR [rip+0x2968]        # 0x14000a0b0
   140007748:	mov    edx,edi
   14000774a:	lea    rcx,[rbp+0xa0]
   140007751:	mov    r8,rax
   140007754:	call   QWORD PTR [rip+0x2cce]        # 0x14000a428
   14000775a:	mov    edx,esi
   14000775c:	mov    ecx,edi
   14000775e:	test   eax,eax
   140007760:	setns  dl
   140007763:	mov    DWORD PTR [rip+0x9a37],edx        # 0x1400111a0
   140007769:	call   0x140007c88
   14000776e:	mov    rdi,rax
   140007771:	test   rax,rax
   140007774:	je     0x14000778f
   140007776:	mov    DWORD PTR [rax],esi
   140007778:	lea    rcx,[rax+0x8]
   14000777c:	mov    DWORD PTR [rax+0x78],esi
   14000777f:	mov    QWORD PTR [rcx+0x8],rcx
   140007783:	mov    QWORD PTR [rcx],rcx
   140007786:	mov    QWORD PTR [rip+0x99e3],rax        # 0x140011170
   14000778d:	jmp    0x140007799
   14000778f:	mov    rdi,rsi
   140007792:	mov    QWORD PTR [rip+0x99d7],rsi        # 0x140011170
   140007799:	test   rdi,rdi
   14000779c:	jne    0x1400077a5
   14000779e:	mov    ebx,0x8007000e
   1400077a3:	jmp    0x140007820
   1400077a5:	lea    rcx,[rdi+0x18]
   1400077a9:	call   0x140006118
   1400077ae:	mov    ebx,eax
   1400077b0:	mov    eax,esi
   1400077b2:	test   ebx,ebx
   1400077b4:	setns  al
   1400077b7:	mov    DWORD PTR [rdi],eax
   1400077b9:	test   ebx,ebx
   1400077bb:	jns    0x1400077c9
   1400077bd:	lea    rdx,[rip+0x44ac]        # 0x14000bc70
   1400077c4:	jmp    0x140007486
   1400077c9:	mov    ebx,esi
   1400077cb:	call   QWORD PTR [rip+0x28ef]        # 0x14000a0c0
   1400077d1:	mov    QWORD PTR [rip+0x99e0],rax        # 0x1400111b8
   1400077d8:	test   rax,rax
   1400077db:	jne    0x140007802
   1400077dd:	call   QWORD PTR [rip+0x28a5]        # 0x14000a088
   1400077e3:	movzx  ebx,ax
   1400077e6:	lea    rdx,[rip+0x44db]        # 0x14000bcc8
   1400077ed:	or     ebx,r12d
   1400077f0:	mov    ecx,0x2
   1400077f5:	test   eax,eax
   1400077f7:	cmovle ebx,eax
   1400077fa:	mov    r8d,ebx
   1400077fd:	call   0x140006f0c
   140007802:	test   ebx,ebx
   140007804:	jns    0x140007812
   140007806:	lea    rdx,[rip+0x448b]        # 0x14000bc98
   14000780d:	jmp    0x140007486
   140007812:	mov    DWORD PTR [rip+0x9950],0x1        # 0x14001116c
   14000781c:	test   ebx,ebx
   14000781e:	jns    0x140007825
   140007820:	call   0x14000785c
   140007825:	mov    eax,ebx
   140007827:	mov    rcx,QWORD PTR [rbp+0x1c0]
   14000782e:	xor    rcx,rsp
   140007831:	call   0x1400081f0
   140007836:	lea    r11,[rsp+0x2d0]
   14000783e:	mov    rbx,QWORD PTR [r11+0x20]
   140007842:	mov    rsi,QWORD PTR [r11+0x28]
   140007846:	mov    rdi,QWORD PTR [r11+0x30]
   14000784a:	mov    rsp,r11
   14000784d:	pop    r14
   14000784f:	pop    r12
   140007851:	pop    rbp
   140007852:	ret    
   140007853:	int3   
   140007854:	int3   
   140007855:	int3   
   140007856:	int3   
   140007857:	int3   
   140007858:	int3   
   140007859:	int3   
   14000785a:	int3   
   14000785b:	int3   
   14000785c:	mov    QWORD PTR [rsp+0x8],rbx
   140007861:	push   rdi
   140007862:	sub    rsp,0x20
   140007866:	mov    rcx,QWORD PTR [rip+0x993b]        # 0x1400111a8
   14000786d:	test   rcx,rcx
   140007870:	je     0x140007880
   140007872:	call   QWORD PTR [rip+0x2ba8]        # 0x14000a420
   140007878:	and    QWORD PTR [rip+0x9928],0x0        # 0x1400111a8
   140007880:	mov    rcx,QWORD PTR [rip+0x98f1]        # 0x140011178
   140007887:	test   rcx,rcx
   14000788a:	je     0x14000789a
   14000788c:	call   QWORD PTR [rip+0x2b8e]        # 0x14000a420
   140007892:	and    QWORD PTR [rip+0x98de],0x0        # 0x140011178
   14000789a:	mov    rcx,QWORD PTR [rip+0x98f7]        # 0x140011198
   1400078a1:	test   rcx,rcx
   1400078a4:	je     0x1400078b4
   1400078a6:	call   QWORD PTR [rip+0x2b74]        # 0x14000a420
   1400078ac:	and    QWORD PTR [rip+0x98e4],0x0        # 0x140011198
   1400078b4:	mov    rcx,QWORD PTR [rip+0x98d5]        # 0x140011190
   1400078bb:	test   rcx,rcx
   1400078be:	je     0x1400078ce
   1400078c0:	call   QWORD PTR [rip+0x281a]        # 0x14000a0e0
   1400078c6:	and    QWORD PTR [rip+0x98c2],0x0        # 0x140011190
   1400078ce:	mov    rcx,QWORD PTR [rip+0x98db]        # 0x1400111b0
   1400078d5:	test   rcx,rcx
   1400078d8:	je     0x1400078e8
   1400078da:	call   QWORD PTR [rip+0x2800]        # 0x14000a0e0
   1400078e0:	and    QWORD PTR [rip+0x98c8],0x0        # 0x1400111b0
   1400078e8:	mov    rcx,QWORD PTR [rip+0x9899]        # 0x140011188
   1400078ef:	test   rcx,rcx
   1400078f2:	je     0x140007902
   1400078f4:	call   QWORD PTR [rip+0x27e6]        # 0x14000a0e0
   1400078fa:	and    QWORD PTR [rip+0x9886],0x0        # 0x140011188
   140007902:	mov    rbx,QWORD PTR [rip+0x9867]        # 0x140011170
   140007909:	test   rbx,rbx
   14000790c:	je     0x140007932
   14000790e:	cmp    DWORD PTR [rbx+0x78],0x0
   140007912:	je     0x14000791e
   140007914:	lea    rcx,[rbx+0x18]
   140007918:	call   QWORD PTR [rip+0x2b52]        # 0x14000a470
   14000791e:	and    DWORD PTR [rbx+0x78],0x0
   140007922:	mov    rcx,rbx
   140007925:	call   0x140007d08
   14000792a:	and    QWORD PTR [rip+0x983e],0x0        # 0x140011170
   140007932:	mov    rcx,QWORD PTR [rip+0x987f]        # 0x1400111b8
   140007939:	test   rcx,rcx
   14000793c:	je     0x14000797c
   14000793e:	or     rdx,0xffffffffffffffff
   140007942:	call   QWORD PTR [rip+0x2770]        # 0x14000a0b8
   140007948:	test   eax,eax
   14000794a:	jne    0x140007974
   14000794c:	call   QWORD PTR [rip+0x2736]        # 0x14000a088
   140007952:	movzx  r8d,ax
   140007956:	lea    rdx,[rip+0x43a3]        # 0x14000bd00
   14000795d:	or     r8d,0x80070000
   140007964:	mov    ecx,0x2
   140007969:	test   eax,eax
   14000796b:	cmovle r8d,eax
   14000796f:	call   0x140006f0c
   140007974:	and    QWORD PTR [rip+0x983c],0x0        # 0x1400111b8
   14000797c:	and    DWORD PTR [rip+0x97e9],0x0        # 0x14001116c
   140007983:	mov    rbx,QWORD PTR [rsp+0x30]
   140007988:	add    rsp,0x20
   14000798c:	pop    rdi
   14000798d:	ret    
   14000798e:	int3   
   14000798f:	int3   
   140007990:	int3   
   140007991:	int3   
   140007992:	int3   
   140007993:	int3   
   140007994:	int3   
   140007995:	int3   
   140007996:	int3   
   140007997:	int3   
   140007998:	int3   
   140007999:	int3   
   14000799a:	int3   
   14000799b:	int3   
   14000799c:	int3   
   14000799d:	int3   
   14000799e:	int3   
   14000799f:	int3   
   1400079a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400079a5:	push   rdi
   1400079a6:	sub    rsp,0x20
   1400079aa:	mov    ebx,edx
   1400079ac:	mov    rdi,rcx
   1400079af:	call   0x1400079d8
   1400079b4:	test   bl,0x1
   1400079b7:	je     0x1400079c1
   1400079b9:	mov    rcx,rdi
   1400079bc:	call   0x140007d08
   1400079c1:	mov    rax,rdi
   1400079c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400079c9:	add    rsp,0x20
   1400079cd:	pop    rdi
   1400079ce:	ret    
   1400079cf:	int3   
   1400079d0:	int3   
   1400079d1:	int3   
   1400079d2:	int3   
   1400079d3:	int3   
   1400079d4:	int3   
   1400079d5:	int3   
   1400079d6:	int3   
   1400079d7:	int3   
   1400079d8:	rex push rbx
   1400079da:	sub    rsp,0x20
   1400079de:	lea    rax,[rip+0x2ffb]        # 0x14000a9e0
   1400079e5:	mov    rbx,rcx
   1400079e8:	mov    QWORD PTR [rcx],rax
   1400079eb:	mov    rcx,QWORD PTR [rcx+0x18]
   1400079ef:	test   rcx,rcx
   1400079f2:	je     0x1400079ff
   1400079f4:	call   QWORD PTR [rip+0x2616]        # 0x14000a010
   1400079fa:	and    QWORD PTR [rbx+0x18],0x0
   1400079ff:	mov    rcx,QWORD PTR [rbx+0x8]
   140007a03:	test   rcx,rcx
   140007a06:	je     0x140007a0d
   140007a08:	call   0x140007d08
   140007a0d:	and    DWORD PTR [rbx+0x10],0x0
   140007a11:	and    QWORD PTR [rbx+0x8],0x0
   140007a16:	add    rsp,0x20
   140007a1a:	pop    rbx
   140007a1b:	ret    
   140007a1c:	int3   
   140007a1d:	int3   
   140007a1e:	int3   
   140007a1f:	int3   
   140007a20:	int3   
   140007a21:	int3   
   140007a22:	int3   
   140007a23:	int3   
   140007a24:	mov    QWORD PTR [rsp+0x8],rbx
   140007a29:	push   rdi
   140007a2a:	sub    rsp,0x20
   140007a2e:	mov    rbx,rcx
   140007a31:	mov    edi,edx
   140007a33:	cmp    edx,DWORD PTR [rcx+0x10]
   140007a36:	ja     0x140007a3f
   140007a38:	cmp    QWORD PTR [rcx+0x8],0x0
   140007a3d:	jne    0x140007a6a
   140007a3f:	mov    rcx,QWORD PTR [rcx+0x8]
   140007a43:	test   rcx,rcx
   140007a46:	je     0x140007a56
   140007a48:	call   0x140007d08
   140007a4d:	and    DWORD PTR [rbx+0x10],0x0
   140007a51:	and    QWORD PTR [rbx+0x8],0x0
   140007a56:	mov    rcx,rdi
   140007a59:	call   0x140007c88
   140007a5e:	mov    QWORD PTR [rbx+0x8],rax
   140007a62:	test   rax,rax
   140007a65:	je     0x140007a6a
   140007a67:	mov    DWORD PTR [rbx+0x10],edi
   140007a6a:	mov    rax,QWORD PTR [rbx+0x8]
   140007a6e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a73:	add    rsp,0x20
   140007a77:	pop    rdi
   140007a78:	ret    
   140007a79:	int3   
   140007a7a:	int3   
   140007a7b:	int3   
   140007a7c:	int3   
   140007a7d:	int3   
   140007a7e:	int3   
   140007a7f:	int3   
   140007a80:	mov    QWORD PTR [rsp+0x8],rbx
   140007a85:	push   rdi
   140007a86:	sub    rsp,0x40
   140007a8a:	lea    rbx,[rcx+0x18]
   140007a8e:	mov    rax,0xffffffff80000002
   140007a95:	mov    rcx,QWORD PTR [rbx]
   140007a98:	mov    rdi,r8
   140007a9b:	mov    QWORD PTR [rsp+0x30],rax
   140007aa0:	test   rcx,rcx
   140007aa3:	je     0x140007ab4
   140007aa5:	call   QWORD PTR [rip+0x2565]        # 0x14000a010
   140007aab:	and    QWORD PTR [rbx],0x0
   140007aaf:	mov    rax,QWORD PTR [rsp+0x30]
   140007ab4:	mov    r9d,0x20019
   140007aba:	mov    QWORD PTR [rsp+0x20],rbx
   140007abf:	xor    r8d,r8d
   140007ac2:	mov    rdx,rdi
   140007ac5:	mov    rcx,rax
   140007ac8:	call   QWORD PTR [rip+0x255a]        # 0x14000a028
   140007ace:	test   eax,eax
   140007ad0:	je     0x140007ad6
   140007ad2:	and    QWORD PTR [rbx],0x0
   140007ad6:	mov    rbx,QWORD PTR [rsp+0x50]
   140007adb:	add    rsp,0x40
   140007adf:	pop    rdi
   140007ae0:	ret    
   140007ae1:	int3   
   140007ae2:	int3   
   140007ae3:	int3   
   140007ae4:	int3   
   140007ae5:	int3   
   140007ae6:	int3   
   140007ae7:	int3   
   140007ae8:	mov    QWORD PTR [rsp+0x10],rbx
   140007aed:	push   rbp
   140007aee:	push   rsi
   140007aef:	push   rdi
   140007af0:	push   r14
   140007af2:	push   r15
   140007af4:	mov    rbp,rsp
   140007af7:	sub    rsp,0x30
   140007afb:	xor    r15d,r15d
   140007afe:	lea    rax,[rbp+0x30]
   140007b02:	mov    DWORD PTR [r9],r15d
   140007b05:	mov    rdi,r9
   140007b08:	mov    r14,r8
   140007b0b:	mov    QWORD PTR [rsp+0x28],rax
   140007b10:	mov    rbx,rcx
   140007b13:	mov    DWORD PTR [rbp+0x30],r15d
   140007b17:	mov    rcx,QWORD PTR [rcx+0x18]
   140007b1b:	lea    r9,[rbp+0x48]
   140007b1f:	xor    r8d,r8d
   140007b22:	mov    QWORD PTR [rsp+0x20],r15
   140007b27:	mov    rsi,rdx
   140007b2a:	call   QWORD PTR [rip+0x2528]        # 0x14000a058
   140007b30:	mov    edx,eax
   140007b32:	test   eax,eax
   140007b34:	jne    0x140007bf8
   140007b3a:	mov    eax,DWORD PTR [rbp+0x48]
   140007b3d:	cmp    eax,DWORD PTR [rbp+0x50]
   140007b40:	jne    0x140007b9a
   140007b42:	mov    edx,DWORD PTR [rbp+0x30]
   140007b45:	dec    eax
   140007b47:	cmp    eax,0x1
   140007b4a:	ja     0x140007b4f
   140007b4c:	add    edx,0x2
   140007b4f:	mov    rcx,rbx
   140007b52:	call   0x140007a24
   140007b57:	test   rax,rax
   140007b5a:	jne    0x140007b66
   140007b5c:	mov    eax,0xe
   140007b61:	jmp    0x140007bfa
   140007b66:	mov    rcx,QWORD PTR [rbx+0x18]
   140007b6a:	lea    rax,[rbp+0x30]
   140007b6e:	mov    QWORD PTR [rsp+0x28],rax
   140007b73:	lea    r9,[rbp+0x48]
   140007b77:	mov    rax,QWORD PTR [rbx+0x8]
   140007b7b:	xor    r8d,r8d
   140007b7e:	mov    rdx,rsi
   140007b81:	mov    QWORD PTR [rsp+0x20],rax
   140007b86:	call   QWORD PTR [rip+0x24cc]        # 0x14000a058
   140007b8c:	mov    edx,eax
   140007b8e:	test   eax,eax
   140007b90:	jne    0x140007bf8
   140007b92:	mov    eax,DWORD PTR [rbp+0x48]
   140007b95:	cmp    eax,DWORD PTR [rbp+0x50]
   140007b98:	je     0x140007ba1
   140007b9a:	mov    edx,0xd
   140007b9f:	jmp    0x140007bf8
   140007ba1:	dec    eax
   140007ba3:	cmp    eax,0x1
   140007ba6:	jbe    0x140007bad
   140007ba8:	mov    eax,DWORD PTR [rbp+0x30]
   140007bab:	jmp    0x140007bea
   140007bad:	mov    r8d,DWORD PTR [rbp+0x30]
   140007bb1:	cmp    r8d,0x2
   140007bb5:	jae    0x140007bc7
   140007bb7:	mov    rax,QWORD PTR [rbx+0x8]
   140007bbb:	mov    WORD PTR [rax],r15w
   140007bbf:	mov    DWORD PTR [rdi],0x2
   140007bc5:	jmp    0x140007bf1
   140007bc7:	mov    r9,QWORD PTR [rbx+0x8]
   140007bcb:	lea    ecx,[r8-0x1]
   140007bcf:	shr    rcx,1
   140007bd2:	cmp    WORD PTR [r9+rcx*2],r15w
   140007bd7:	je     0x140007bee
   140007bd9:	mov    rax,r8
   140007bdc:	shr    rax,1
   140007bdf:	mov    WORD PTR [r9+rax*2],r15w
   140007be4:	mov    eax,DWORD PTR [rbp+0x30]
   140007be7:	add    eax,0x2
   140007bea:	mov    DWORD PTR [rdi],eax
   140007bec:	jmp    0x140007bf1
   140007bee:	mov    DWORD PTR [rdi],r8d
   140007bf1:	mov    rax,QWORD PTR [rbx+0x8]
   140007bf5:	mov    QWORD PTR [r14],rax
   140007bf8:	mov    eax,edx
   140007bfa:	mov    rbx,QWORD PTR [rsp+0x68]
   140007bff:	add    rsp,0x30
   140007c03:	pop    r15
   140007c05:	pop    r14
   140007c07:	pop    rdi
   140007c08:	pop    rsi
   140007c09:	pop    rbp
   140007c0a:	ret    
   140007c0b:	int3   
   140007c0c:	int3   
   140007c0d:	int3   
   140007c0e:	int3   
   140007c0f:	int3   
   140007c10:	int3   
   140007c11:	int3   
   140007c12:	int3   
   140007c13:	int3   
   140007c14:	rex push rbx
   140007c16:	sub    rsp,0x20
   140007c1a:	mov    rbx,rcx
   140007c1d:	call   0x140008664
   140007c22:	lea    rax,[rip+0x2a07]        # 0x14000a630
   140007c29:	mov    QWORD PTR [rbx],rax
   140007c2c:	mov    rax,rbx
   140007c2f:	add    rsp,0x20
   140007c33:	pop    rbx
   140007c34:	ret    
   140007c35:	int3   
   140007c36:	int3   
   140007c37:	int3   
   140007c38:	int3   
   140007c39:	int3   
   140007c3a:	int3   
   140007c3b:	int3   
   140007c3c:	rex push rbx
   140007c3e:	sub    rsp,0x20
   140007c42:	mov    r8d,0x1
   140007c48:	lea    rdx,[rip+0x6469]        # 0x14000e0b8
   140007c4f:	mov    rbx,rcx
   140007c52:	call   0x140008658
   140007c57:	lea    rax,[rip+0x29d2]        # 0x14000a630
   140007c5e:	mov    QWORD PTR [rbx],rax
   140007c61:	mov    rax,rbx
   140007c64:	add    rsp,0x20
   140007c68:	pop    rbx
   140007c69:	ret    
   140007c6a:	int3   
   140007c6b:	int3   
   140007c6c:	int3   
   140007c6d:	int3   
   140007c6e:	int3   
   140007c6f:	int3   
   140007c70:	lea    rax,[rip+0x29b9]        # 0x14000a630
   140007c77:	mov    QWORD PTR [rcx],rax
   140007c7a:	jmp    0x140008670
   140007c7f:	int3   
   140007c80:	int3   
   140007c81:	int3   
   140007c82:	int3   
   140007c83:	int3   
   140007c84:	int3   
   140007c85:	int3   
   140007c86:	int3   
   140007c87:	int3   
   140007c88:	rex push rbx
   140007c8a:	sub    rsp,0x40
   140007c8e:	mov    rbx,rcx
   140007c91:	jmp    0x140007ca2
   140007c93:	mov    rcx,rbx
   140007c96:	call   0x14000868c
   140007c9b:	test   eax,eax
   140007c9d:	je     0x140007cb3
   140007c9f:	mov    rcx,rbx
   140007ca2:	call   QWORD PTR [rip+0x26a0]        # 0x14000a348
   140007ca8:	test   rax,rax
   140007cab:	je     0x140007c93
   140007cad:	add    rsp,0x40
   140007cb1:	pop    rbx
   140007cb2:	ret    
   140007cb3:	mov    eax,DWORD PTR [rip+0x649f]        # 0x14000e158
   140007cb9:	test   al,0x1
   140007cbb:	jne    0x140007cde
   140007cbd:	or     eax,0x1
   140007cc0:	lea    rcx,[rip+0x6479]        # 0x14000e140
   140007cc7:	mov    DWORD PTR [rip+0x648b],eax        # 0x14000e158
   140007ccd:	call   0x140007c3c
   140007cd2:	lea    rcx,[rip+0x1477]        # 0x140009150
   140007cd9:	call   0x14000861c
   140007cde:	lea    rdx,[rip+0x645b]        # 0x14000e140
   140007ce5:	lea    rcx,[rsp+0x20]
   140007cea:	call   0x140007c14
   140007cef:	lea    rdx,[rip+0x5142]        # 0x14000ce38
   140007cf6:	lea    rcx,[rsp+0x20]
   140007cfb:	call   0x140008698
   140007d00:	int3   
   140007d01:	int3   
   140007d02:	int3   
   140007d03:	int3   
   140007d04:	int3   
   140007d05:	int3   
   140007d06:	int3   
   140007d07:	int3   
   140007d08:	rex.W jmp QWORD PTR [rip+0x25e1]        # 0x14000a2f0
   140007d0f:	int3   
   140007d10:	int3   
   140007d11:	int3   
   140007d12:	int3   
   140007d13:	int3   
   140007d14:	int3   
   140007d15:	int3   
   140007d16:	int3   
   140007d17:	int3   
   140007d18:	int3   
   140007d19:	int3   
   140007d1a:	int3   
   140007d1b:	int3   
   140007d1c:	int3   
   140007d1d:	int3   
   140007d1e:	int3   
   140007d1f:	int3   
   140007d20:	mov    QWORD PTR [rsp+0x8],rbx
   140007d25:	push   rdi
   140007d26:	sub    rsp,0x20
   140007d2a:	lea    rax,[rip+0x28ff]        # 0x14000a630
   140007d31:	mov    ebx,edx
   140007d33:	mov    QWORD PTR [rcx],rax
   140007d36:	mov    rdi,rcx
   140007d39:	call   0x140008670
   140007d3e:	test   bl,0x1
   140007d41:	je     0x140007d4c
   140007d43:	mov    rcx,rdi
   140007d46:	call   QWORD PTR [rip+0x25a4]        # 0x14000a2f0
   140007d4c:	mov    rax,rdi
   140007d4f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007d54:	add    rsp,0x20
   140007d58:	pop    rdi
   140007d59:	ret    
   140007d5a:	int3   
   140007d5b:	int3   
   140007d5c:	int3   
   140007d5d:	int3   
   140007d5e:	int3   
   140007d5f:	int3   
   140007d60:	sub    rsp,0x48
   140007d64:	mov    rdx,rcx
   140007d67:	lea    rcx,[rsp+0x20]
   140007d6c:	call   0x140007c14
   140007d71:	lea    rdx,[rip+0x50c0]        # 0x14000ce38
   140007d78:	lea    rcx,[rsp+0x20]
   140007d7d:	call   0x140008698
   140007d82:	int3   
   140007d83:	int3   
   140007d84:	int3   
   140007d85:	int3   
   140007d86:	int3   
   140007d87:	int3   
   140007d88:	int3   
   140007d89:	int3   
   140007d8a:	int3   
   140007d8b:	int3   
   140007d8c:	rex push rbx
   140007d8e:	sub    rsp,0x40
   140007d92:	mov    rbx,rcx
   140007d95:	jmp    0x140007da6
   140007d97:	mov    rcx,rbx
   140007d9a:	call   0x14000868c
   140007d9f:	test   eax,eax
   140007da1:	je     0x140007db7
   140007da3:	mov    rcx,rbx
   140007da6:	call   QWORD PTR [rip+0x259c]        # 0x14000a348
   140007dac:	test   rax,rax
   140007daf:	je     0x140007d97
   140007db1:	add    rsp,0x40
   140007db5:	pop    rbx
   140007db6:	ret    
   140007db7:	mov    eax,DWORD PTR [rip+0x63bb]        # 0x14000e178
   140007dbd:	test   al,0x1
   140007dbf:	jne    0x140007de2
   140007dc1:	or     eax,0x1
   140007dc4:	lea    rcx,[rip+0x6395]        # 0x14000e160
   140007dcb:	mov    DWORD PTR [rip+0x63a7],eax        # 0x14000e178
   140007dd1:	call   0x140007c3c
   140007dd6:	lea    rcx,[rip+0x1393]        # 0x140009170
   140007ddd:	call   0x14000861c
   140007de2:	lea    rdx,[rip+0x6377]        # 0x14000e160
   140007de9:	lea    rcx,[rsp+0x20]
   140007dee:	call   0x140007c14
   140007df3:	lea    rdx,[rip+0x503e]        # 0x14000ce38
   140007dfa:	lea    rcx,[rsp+0x20]
   140007dff:	call   0x140008698
   140007e04:	int3   
   140007e05:	int3   
   140007e06:	int3   
   140007e07:	int3   
   140007e08:	int3   
   140007e09:	int3   
   140007e0a:	int3   
   140007e0b:	int3   
   140007e0c:	int3   
   140007e0d:	int3   
   140007e0e:	int3   
   140007e0f:	int3   
   140007e10:	sub    rsp,0x28
   140007e14:	mov    eax,0x5a4d
   140007e19:	cmp    WORD PTR [rip+0xffffffffffff81e0],ax        # 0x140000000
   140007e20:	je     0x140007e26
   140007e22:	xor    eax,eax
   140007e24:	jmp    0x140007e75
   140007e26:	movsxd rcx,DWORD PTR [rip+0xffffffffffff820f]        # 0x14000003c
   140007e2d:	lea    rax,[rip+0xffffffffffff81cc]        # 0x140000000
   140007e34:	add    rcx,rax
   140007e37:	cmp    DWORD PTR [rcx],0x4550
   140007e3d:	jne    0x140007e22
   140007e3f:	movzx  eax,WORD PTR [rcx+0x18]
   140007e43:	cmp    eax,0x10b
   140007e48:	je     0x140007e64
   140007e4a:	cmp    eax,0x20b
   140007e4f:	jne    0x140007e22
   140007e51:	xor    eax,eax
   140007e53:	cmp    DWORD PTR [rcx+0x84],0xe
   140007e5a:	jbe    0x140007e75
   140007e5c:	cmp    DWORD PTR [rcx+0xf8],eax
   140007e62:	jmp    0x140007e72
   140007e64:	xor    eax,eax
   140007e66:	cmp    DWORD PTR [rcx+0x74],0xe
   140007e6a:	jbe    0x140007e75
   140007e6c:	cmp    DWORD PTR [rcx+0xe8],eax
   140007e72:	setne  al
   140007e75:	mov    ecx,0x2
   140007e7a:	mov    DWORD PTR [rip+0x6320],eax        # 0x14000e1a0
   140007e80:	call   0x140008778
   140007e85:	mov    ecx,eax
   140007e87:	call   QWORD PTR [rip+0x24fb]        # 0x14000a388
   140007e8d:	mov    rcx,QWORD PTR [rip+0x2564]        # 0x14000a3f8
   140007e94:	or     rax,0xffffffffffffffff
   140007e98:	mov    QWORD PTR [rip+0x9331],rax        # 0x1400111d0
   140007e9f:	mov    QWORD PTR [rip+0x9332],rax        # 0x1400111d8
   140007ea6:	mov    eax,DWORD PTR [rip+0x6880]        # 0x14000e72c
   140007eac:	mov    DWORD PTR [rcx],eax
   140007eae:	mov    rcx,QWORD PTR [rip+0x248b]        # 0x14000a340
   140007eb5:	mov    eax,DWORD PTR [rip+0x6865]        # 0x14000e720
   140007ebb:	mov    DWORD PTR [rcx],eax
   140007ebd:	call   0x1400014b0
   140007ec2:	cmp    DWORD PTR [rip+0x613f],0x0        # 0x14000e008
   140007ec9:	jne    0x140007ed8
   140007ecb:	lea    rcx,[rip+0xffffffffffff95de]        # 0x1400014b0
   140007ed2:	call   QWORD PTR [rip+0x2490]        # 0x14000a368
   140007ed8:	xor    eax,eax
   140007eda:	add    rsp,0x28
   140007ede:	ret    
   140007edf:	int3   
   140007ee0:	int3   
   140007ee1:	int3   
   140007ee2:	int3   
   140007ee3:	int3   
   140007ee4:	int3   
   140007ee5:	int3   
   140007ee6:	int3   
   140007ee7:	int3   
   140007ee8:	int3   
   140007ee9:	int3   
   140007eea:	int3   
   140007eeb:	int3   
   140007eec:	int3   
   140007eed:	int3   
   140007eee:	int3   
   140007eef:	int3   
   140007ef0:	sub    rsp,0x38
   140007ef4:	mov    eax,DWORD PTR [rip+0x682e]        # 0x14000e728
   140007efa:	lea    r8,[rip+0x6297]        # 0x14000e198
   140007f01:	mov    r9d,DWORD PTR [rip+0x681c]        # 0x14000e724
   140007f08:	lea    rdx,[rip+0x6281]        # 0x14000e190
   140007f0f:	mov    DWORD PTR [rip+0x628f],eax        # 0x14000e1a4
   140007f15:	lea    rcx,[rip+0x626c]        # 0x14000e188
   140007f1c:	lea    rax,[rip+0x6281]        # 0x14000e1a4
   140007f23:	mov    QWORD PTR [rsp+0x20],rax
   140007f28:	call   QWORD PTR [rip+0x2462]        # 0x14000a390
   140007f2e:	mov    DWORD PTR [rip+0x6258],eax        # 0x14000e18c
   140007f34:	add    rsp,0x38
   140007f38:	ret    
   140007f39:	int3   
   140007f3a:	int3   
   140007f3b:	int3   
   140007f3c:	int3   
   140007f3d:	int3   
   140007f3e:	int3   
   140007f3f:	int3   
   140007f40:	mov    QWORD PTR [rsp+0x8],rbx
   140007f45:	mov    QWORD PTR [rsp+0x10],rsi
   140007f4a:	mov    QWORD PTR [rsp+0x18],rdi
   140007f4f:	push   r12
   140007f51:	push   r14
   140007f53:	push   r15
   140007f55:	sub    rsp,0xb0
   140007f5c:	xor    r15d,r15d
   140007f5f:	mov    DWORD PTR [rsp+0x20],r15d
   140007f64:	lea    rcx,[rsp+0x40]
   140007f69:	call   QWORD PTR [rip+0x2339]        # 0x14000a2a8
   140007f6f:	nop
   140007f70:	mov    rax,QWORD PTR gs:0x30
   140007f79:	mov    rbx,QWORD PTR [rax+0x8]
   140007f7d:	mov    r14d,r15d
   140007f80:	xor    eax,eax
   140007f82:	lock cmpxchg QWORD PTR [rip+0x9235],rbx        # 0x1400111c0
   140007f8b:	je     0x140007fa9
   140007f8d:	cmp    rax,rbx
   140007f90:	jne    0x140007f9c
   140007f92:	mov    edi,0x1
   140007f97:	mov    r14d,edi
   140007f9a:	jmp    0x140007fae
   140007f9c:	mov    ecx,0x3e8
   140007fa1:	call   QWORD PTR [rip+0x2179]        # 0x14000a120
   140007fa7:	jmp    0x140007f80
   140007fa9:	mov    edi,0x1
   140007fae:	mov    eax,DWORD PTR [rip+0x9214]        # 0x1400111c8
   140007fb4:	cmp    eax,edi
   140007fb6:	jne    0x140007fc6
   140007fb8:	mov    esi,0x1f
   140007fbd:	mov    ecx,esi
   140007fbf:	call   0x1400087c4
   140007fc4:	jmp    0x140008037
   140007fc6:	mov    eax,DWORD PTR [rip+0x91fc]        # 0x1400111c8
   140007fcc:	test   eax,eax
   140007fce:	jne    0x14000802c
   140007fd0:	mov    DWORD PTR [rip+0x91f2],edi        # 0x1400111c8
   140007fd6:	lea    r12,[rip+0x2543]        # 0x14000a520
   140007fdd:	lea    rbx,[rip+0x2524]        # 0x14000a508
   140007fe4:	mov    QWORD PTR [rsp+0x30],rbx
   140007fe9:	mov    eax,r15d
   140007fec:	mov    DWORD PTR [rsp+0x24],eax
   140007ff0:	cmp    rbx,r12
   140007ff3:	jae    0x14000801e
   140007ff5:	test   eax,eax
   140007ff7:	jne    0x140008022
   140007ff9:	mov    rsi,QWORD PTR [rbx]
   140007ffc:	test   rsi,rsi
   140007fff:	je     0x140008013
   140008001:	mov    rcx,rsi
   140008004:	mov    rax,QWORD PTR [rip+0x24ad]        # 0x14000a4b8
   14000800b:	call   rax
   14000800d:	call   rsi
   14000800f:	mov    DWORD PTR [rsp+0x24],eax
   140008013:	add    rbx,0x8
   140008017:	mov    QWORD PTR [rsp+0x30],rbx
   14000801c:	jmp    0x140007ff0
   14000801e:	test   eax,eax
   140008020:	je     0x140008032
   140008022:	mov    eax,0xff
   140008027:	jmp    0x140008193
   14000802c:	mov    DWORD PTR [rip+0x614e],edi        # 0x14000e180
   140008032:	mov    esi,0x1f
   140008037:	mov    eax,DWORD PTR [rip+0x918b]        # 0x1400111c8
   14000803d:	cmp    eax,edi
   14000803f:	jne    0x14000805e
   140008041:	lea    rdx,[rip+0x24b8]        # 0x14000a500
   140008048:	lea    rcx,[rip+0x2479]        # 0x14000a4c8
   14000804f:	call   0x14000898a
   140008054:	mov    DWORD PTR [rip+0x916a],0x2        # 0x1400111c8
   14000805e:	test   r14d,r14d
   140008061:	jne    0x14000806d
   140008063:	mov    rax,r15
   140008066:	xchg   QWORD PTR [rip+0x9153],rax        # 0x1400111c0
   14000806d:	cmp    QWORD PTR [rip+0x916c],r15        # 0x1400111e0
   140008074:	je     0x1400080a4
   140008076:	lea    rcx,[rip+0x9163]        # 0x1400111e0
   14000807d:	call   0x140008820
   140008082:	test   eax,eax
   140008084:	je     0x1400080a4
   140008086:	mov    rbx,QWORD PTR [rip+0x9153]        # 0x1400111e0
   14000808d:	mov    rcx,rbx
   140008090:	mov    rax,QWORD PTR [rip+0x2421]        # 0x14000a4b8
   140008097:	call   rax
   140008099:	xor    r8d,r8d
   14000809c:	lea    edx,[r8+0x2]
   1400080a0:	xor    ecx,ecx
   1400080a2:	call   rbx
   1400080a4:	mov    rax,QWORD PTR [rip+0x22a5]        # 0x14000a350
   1400080ab:	mov    rdx,QWORD PTR [rax]
   1400080ae:	test   rdx,rdx
   1400080b1:	jne    0x1400080bd
   1400080b3:	mov    eax,0xff
   1400080b8:	jmp    0x140008193
   1400080bd:	mov    QWORD PTR [rsp+0x28],rdx
   1400080c2:	mov    ecx,DWORD PTR [rsp+0x20]
   1400080c6:	cmp    WORD PTR [rdx],0x20
   1400080ca:	ja     0x140008144
   1400080cc:	cmp    WORD PTR [rdx],r15w
   1400080d0:	je     0x1400080d6
   1400080d2:	test   ecx,ecx
   1400080d4:	jne    0x140008144
   1400080d6:	movzx  eax,WORD PTR [rdx]
   1400080d9:	sub    ax,di
   1400080dc:	cmp    ax,si
   1400080df:	ja     0x1400080ec
   1400080e1:	add    rdx,0x2
   1400080e5:	mov    QWORD PTR [rsp+0x28],rdx
   1400080ea:	jmp    0x1400080d6
   1400080ec:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400080f0:	movzx  eax,WORD PTR [rsp+0x80]
   1400080f8:	mov    r9d,0xa
   1400080fe:	and    cl,dil
   140008101:	cmovne r9d,eax
   140008105:	mov    r8,rdx
   140008108:	xor    edx,edx
   14000810a:	lea    rcx,[rip+0xffffffffffff7eef]        # 0x140000000
   140008111:	call   0x140001560
   140008116:	mov    DWORD PTR [rip+0x6060],eax        # 0x14000e17c
   14000811c:	cmp    DWORD PTR [rip+0x607d],r15d        # 0x14000e1a0
   140008123:	jne    0x14000812d
   140008125:	mov    ecx,eax
   140008127:	call   QWORD PTR [rip+0x2253]        # 0x14000a380
   14000812d:	cmp    DWORD PTR [rip+0x604c],r15d        # 0x14000e180
   140008134:	jne    0x140008142
   140008136:	call   QWORD PTR [rip+0x2234]        # 0x14000a370
   14000813c:	mov    eax,DWORD PTR [rip+0x603a]        # 0x14000e17c
   140008142:	jmp    0x140008193
   140008144:	cmp    WORD PTR [rdx],0x22
   140008148:	jne    0x140008158
   14000814a:	mov    eax,r15d
   14000814d:	test   ecx,ecx
   14000814f:	sete   al
   140008152:	mov    ecx,eax
   140008154:	mov    DWORD PTR [rsp+0x20],eax
   140008158:	add    rdx,0x2
   14000815c:	mov    QWORD PTR [rsp+0x28],rdx
   140008161:	jmp    0x1400080c6
   140008166:	mov    DWORD PTR [rip+0x6010],eax        # 0x14000e17c
   14000816c:	cmp    DWORD PTR [rip+0x602d],0x0        # 0x14000e1a0
   140008173:	jne    0x14000817e
   140008175:	mov    ecx,eax
   140008177:	call   QWORD PTR [rip+0x21fb]        # 0x14000a378
   14000817d:	int3   
   14000817e:	cmp    DWORD PTR [rip+0x5ffb],0x0        # 0x14000e180
   140008185:	jne    0x140008193
   140008187:	call   QWORD PTR [rip+0x21e3]        # 0x14000a370
   14000818d:	mov    eax,DWORD PTR [rip+0x5fe9]        # 0x14000e17c
   140008193:	lea    r11,[rsp+0xb0]
   14000819b:	mov    rbx,QWORD PTR [r11+0x20]
   14000819f:	mov    rsi,QWORD PTR [r11+0x28]
   1400081a3:	mov    rdi,QWORD PTR [r11+0x30]
   1400081a7:	mov    rsp,r11
   1400081aa:	pop    r15
   1400081ac:	pop    r14
   1400081ae:	pop    r12
   1400081b0:	ret    
   1400081b1:	int3   
   1400081b2:	int3   
   1400081b3:	int3   
   1400081b4:	int3   
   1400081b5:	int3   
   1400081b6:	int3   
   1400081b7:	int3   
   1400081b8:	int3   
   1400081b9:	int3   
   1400081ba:	int3   
   1400081bb:	int3   
   1400081bc:	int3   
   1400081bd:	int3   
   1400081be:	int3   
   1400081bf:	int3   
   1400081c0:	sub    rsp,0x28
   1400081c4:	call   0x1400088b4
   1400081c9:	add    rsp,0x28
   1400081cd:	jmp    0x140007f40
   1400081d2:	int3   
   1400081d3:	int3   
   1400081d4:	int3   
   1400081d5:	int3   
   1400081d6:	int3   
   1400081d7:	int3   
   1400081d8:	int3   
   1400081d9:	int3   
   1400081da:	int3   
   1400081db:	int3   
   1400081dc:	int3   
   1400081dd:	int3   
   1400081de:	int3   
   1400081df:	int3   
   1400081e0:	int3   
   1400081e1:	int3   
   1400081e2:	int3   
   1400081e3:	int3   
   1400081e4:	int3   
   1400081e5:	int3   
   1400081e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400081f0:	cmp    rcx,QWORD PTR [rip+0x5e19]        # 0x14000e010
   1400081f7:	jne    0x140008209
   1400081f9:	rol    rcx,0x10
   1400081fd:	test   cx,0xffff
   140008202:	jne    0x140008205
   140008204:	ret    
   140008205:	ror    rcx,0x10
   140008209:	jmp    0x140008300
   14000820e:	int3   
   14000820f:	int3   
   140008210:	int3   
   140008211:	int3   
   140008212:	int3   
   140008213:	int3   
   140008214:	int3   
   140008215:	int3   
   140008216:	int3   
   140008217:	int3   
   140008218:	int3   
   140008219:	int3   
   14000821a:	int3   
   14000821b:	int3   
   14000821c:	int3   
   14000821d:	int3   
   14000821e:	int3   
   14000821f:	int3   
   140008220:	mov    QWORD PTR [rsp+0x8],rbx
   140008225:	push   rdi
   140008226:	sub    rsp,0x20
   14000822a:	mov    ebx,edx
   14000822c:	mov    rdi,rcx
   14000822f:	call   QWORD PTR [rip+0x20fb]        # 0x14000a330
   140008235:	test   bl,0x1
   140008238:	je     0x140008242
   14000823a:	mov    rcx,rdi
   14000823d:	call   0x140007d08
   140008242:	mov    rax,rdi
   140008245:	mov    rbx,QWORD PTR [rsp+0x30]
   14000824a:	add    rsp,0x20
   14000824e:	pop    rdi
   14000824f:	ret    
   140008250:	int3   
   140008251:	int3   
   140008252:	int3   
   140008253:	int3   
   140008254:	int3   
   140008255:	int3   
   140008256:	int3   
   140008257:	int3   
   140008258:	int3   
   140008259:	int3   
   14000825a:	int3   
   14000825b:	int3   
   14000825c:	int3   
   14000825d:	int3   
   14000825e:	int3   
   14000825f:	int3   
   140008260:	sub    rsp,0x38
   140008264:	mov    r9,rdx
   140008267:	test   rdx,rdx
   14000826a:	je     0x1400082a1
   14000826c:	xor    edx,edx
   14000826e:	lea    rax,[rdx-0x20]
   140008272:	div    r9
   140008275:	cmp    rax,r8
   140008278:	jae    0x1400082a1
   14000827a:	call   0x1400089a2
   14000827f:	and    QWORD PTR [rsp+0x20],0x0
   140008285:	xor    r9d,r9d
   140008288:	xor    r8d,r8d
   14000828b:	xor    edx,edx
   14000828d:	xor    ecx,ecx
   14000828f:	mov    DWORD PTR [rax],0xc
   140008295:	call   0x1400089b0
   14000829a:	xor    eax,eax
   14000829c:	add    rsp,0x38
   1400082a0:	ret    
   1400082a1:	imul   r9,r8
   1400082a5:	mov    rdx,r9
   1400082a8:	add    rsp,0x38
   1400082ac:	jmp    0x140008a86
   1400082b1:	int3   
   1400082b2:	int3   
   1400082b3:	int3   
   1400082b4:	int3   
   1400082b5:	int3   
   1400082b6:	int3   
   1400082b7:	int3   
   1400082b8:	rex push rbx
   1400082ba:	sub    rsp,0x20
   1400082be:	mov    rbx,rcx
   1400082c1:	xor    ecx,ecx
   1400082c3:	call   QWORD PTR [rip+0x1fbf]        # 0x14000a288
   1400082c9:	mov    rcx,rbx
   1400082cc:	call   QWORD PTR [rip+0x1fbe]        # 0x14000a290
   1400082d2:	call   QWORD PTR [rip+0x1fd8]        # 0x14000a2b0
   1400082d8:	mov    rcx,rax
   1400082db:	mov    edx,0xc0000409
   1400082e0:	add    rsp,0x20
   1400082e4:	pop    rbx
   1400082e5:	rex.W jmp QWORD PTR [rip+0x1fcc]        # 0x14000a2b8
   1400082ec:	int3   
   1400082ed:	int3   
   1400082ee:	int3   
   1400082ef:	int3   
   1400082f0:	int3   
   1400082f1:	int3   
   1400082f2:	int3   
   1400082f3:	int3   
   1400082f4:	int3   
   1400082f5:	int3   
   1400082f6:	int3   
   1400082f7:	int3   
   1400082f8:	int3   
   1400082f9:	int3   
   1400082fa:	int3   
   1400082fb:	int3   
   1400082fc:	int3   
   1400082fd:	int3   
   1400082fe:	int3   
   1400082ff:	int3   
   140008300:	mov    QWORD PTR [rsp+0x8],rcx
   140008305:	sub    rsp,0x88
   14000830c:	lea    rcx,[rip+0x5f3d]        # 0x14000e250
   140008313:	call   QWORD PTR [rip+0x2187]        # 0x14000a4a0
   140008319:	mov    rax,QWORD PTR [rip+0x6028]        # 0x14000e348
   140008320:	mov    QWORD PTR [rsp+0x48],rax
   140008325:	xor    r8d,r8d
   140008328:	lea    rdx,[rsp+0x50]
   14000832d:	mov    rcx,QWORD PTR [rsp+0x48]
   140008332:	call   QWORD PTR [rip+0x2150]        # 0x14000a488
   140008338:	mov    QWORD PTR [rsp+0x40],rax
   14000833d:	cmp    QWORD PTR [rsp+0x40],0x0
   140008343:	je     0x140008387
   140008345:	mov    QWORD PTR [rsp+0x38],0x0
   14000834e:	lea    rax,[rsp+0x58]
   140008353:	mov    QWORD PTR [rsp+0x30],rax
   140008358:	lea    rax,[rsp+0x60]
   14000835d:	mov    QWORD PTR [rsp+0x28],rax
   140008362:	lea    rax,[rip+0x5ee7]        # 0x14000e250
   140008369:	mov    QWORD PTR [rsp+0x20],rax
   14000836e:	mov    r9,QWORD PTR [rsp+0x40]
   140008373:	mov    r8,QWORD PTR [rsp+0x48]
   140008378:	mov    rdx,QWORD PTR [rsp+0x50]
   14000837d:	xor    ecx,ecx
   14000837f:	call   QWORD PTR [rip+0x20fb]        # 0x14000a480
   140008385:	jmp    0x1400083aa
   140008387:	mov    rax,QWORD PTR [rip+0x5f5a]        # 0x14000e2e8
   14000838e:	mov    rax,QWORD PTR [rax]
   140008391:	mov    QWORD PTR [rip+0x5fb0],rax        # 0x14000e348
   140008398:	mov    rax,QWORD PTR [rip+0x5f49]        # 0x14000e2e8
   14000839f:	add    rax,0x8
   1400083a3:	mov    QWORD PTR [rip+0x5f3e],rax        # 0x14000e2e8
   1400083aa:	mov    rax,QWORD PTR [rip+0x5f97]        # 0x14000e348
   1400083b1:	mov    QWORD PTR [rip+0x5e08],rax        # 0x14000e1c0
   1400083b8:	mov    rax,QWORD PTR [rsp+0x90]
   1400083c0:	mov    QWORD PTR [rip+0x5f09],rax        # 0x14000e2d0
   1400083c7:	mov    DWORD PTR [rip+0x5ddf],0xc0000409        # 0x14000e1b0
   1400083d1:	mov    DWORD PTR [rip+0x5dd9],0x1        # 0x14000e1b4
   1400083db:	mov    DWORD PTR [rip+0x5de3],0x3        # 0x14000e1c8
   1400083e5:	mov    eax,0x8
   1400083ea:	imul   rax,rax,0x0
   1400083ee:	lea    rcx,[rip+0x5ddb]        # 0x14000e1d0
   1400083f5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400083fd:	mov    eax,0x8
   140008402:	imul   rax,rax,0x1
   140008406:	lea    rcx,[rip+0x5dc3]        # 0x14000e1d0
   14000840d:	mov    rdx,QWORD PTR [rip+0x5bfc]        # 0x14000e010
   140008414:	mov    QWORD PTR [rcx+rax*1],rdx
   140008418:	mov    eax,0x8
   14000841d:	imul   rax,rax,0x2
   140008421:	lea    rcx,[rip+0x5da8]        # 0x14000e1d0
   140008428:	mov    rdx,QWORD PTR [rip+0x5be9]        # 0x14000e018
   14000842f:	mov    QWORD PTR [rcx+rax*1],rdx
   140008433:	mov    eax,0x8
   140008438:	imul   rax,rax,0x0
   14000843c:	mov    rcx,QWORD PTR [rip+0x5bcd]        # 0x14000e010
   140008443:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140008448:	mov    eax,0x8
   14000844d:	imul   rax,rax,0x1
   140008451:	mov    rcx,QWORD PTR [rip+0x5bc0]        # 0x14000e018
   140008458:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000845d:	lea    rcx,[rip+0x21ec]        # 0x14000a650
   140008464:	call   0x1400082b8
   140008469:	add    rsp,0x88
   140008470:	ret    
   140008471:	int3   
   140008472:	int3   
   140008473:	int3   
   140008474:	int3   
   140008475:	int3   
   140008476:	int3   
   140008477:	int3   
   140008478:	sub    rsp,0x78
   14000847c:	lea    rcx,[rip+0x5dcd]        # 0x14000e250
   140008483:	call   QWORD PTR [rip+0x2017]        # 0x14000a4a0
   140008489:	mov    rax,QWORD PTR [rip+0x5eb8]        # 0x14000e348
   140008490:	mov    QWORD PTR [rsp+0x48],rax
   140008495:	xor    r8d,r8d
   140008498:	lea    rdx,[rsp+0x50]
   14000849d:	mov    rcx,QWORD PTR [rsp+0x48]
   1400084a2:	call   QWORD PTR [rip+0x1fe0]        # 0x14000a488
   1400084a8:	mov    QWORD PTR [rsp+0x40],rax
   1400084ad:	cmp    QWORD PTR [rsp+0x40],0x0
   1400084b3:	je     0x1400084f7
   1400084b5:	mov    QWORD PTR [rsp+0x38],0x0
   1400084be:	lea    rax,[rsp+0x58]
   1400084c3:	mov    QWORD PTR [rsp+0x30],rax
   1400084c8:	lea    rax,[rsp+0x60]
   1400084cd:	mov    QWORD PTR [rsp+0x28],rax
   1400084d2:	lea    rax,[rip+0x5d77]        # 0x14000e250
   1400084d9:	mov    QWORD PTR [rsp+0x20],rax
   1400084de:	mov    r9,QWORD PTR [rsp+0x40]
   1400084e3:	mov    r8,QWORD PTR [rsp+0x48]
   1400084e8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400084ed:	xor    ecx,ecx
   1400084ef:	call   QWORD PTR [rip+0x1f8b]        # 0x14000a480
   1400084f5:	jmp    0x14000851a
   1400084f7:	mov    rax,QWORD PTR [rip+0x5dea]        # 0x14000e2e8
   1400084fe:	mov    rax,QWORD PTR [rax]
   140008501:	mov    QWORD PTR [rip+0x5e40],rax        # 0x14000e348
   140008508:	mov    rax,QWORD PTR [rip+0x5dd9]        # 0x14000e2e8
   14000850f:	add    rax,0x8
   140008513:	mov    QWORD PTR [rip+0x5dce],rax        # 0x14000e2e8
   14000851a:	mov    rax,QWORD PTR [rip+0x5e27]        # 0x14000e348
   140008521:	mov    QWORD PTR [rip+0x5c98],rax        # 0x14000e1c0
   140008528:	mov    DWORD PTR [rip+0x5c7e],0xc0000409        # 0x14000e1b0
   140008532:	mov    DWORD PTR [rip+0x5c78],0x1        # 0x14000e1b4
   14000853c:	mov    DWORD PTR [rip+0x5c82],0x1        # 0x14000e1c8
   140008546:	mov    eax,0x8
   14000854b:	imul   rax,rax,0x0
   14000854f:	lea    rcx,[rip+0x5c7a]        # 0x14000e1d0
   140008556:	mov    QWORD PTR [rcx+rax*1],0x8
   14000855e:	lea    rcx,[rip+0x20eb]        # 0x14000a650
   140008565:	call   0x1400082b8
   14000856a:	add    rsp,0x78
   14000856e:	ret    
   14000856f:	int3   
   140008570:	int3   
   140008571:	int3   
   140008572:	int3   
   140008573:	int3   
   140008574:	int3   
   140008575:	int3   
   140008576:	int3   
   140008577:	int3   
   140008578:	mov    QWORD PTR [rsp+0x8],rbx
   14000857d:	push   rdi
   14000857e:	sub    rsp,0x20
   140008582:	mov    rdi,rcx
   140008585:	mov    rax,QWORD PTR [rip+0x8c4c]        # 0x1400111d8
   14000858c:	mov    QWORD PTR [rsp+0x38],rax
   140008591:	cmp    rax,0xffffffffffffffff
   140008595:	jne    0x1400085ae
   140008597:	mov    rbx,QWORD PTR [rip+0x1d62]        # 0x14000a300
   14000859e:	mov    rcx,rbx
   1400085a1:	call   QWORD PTR [rip+0x1f11]        # 0x14000a4b8
   1400085a7:	mov    rcx,rdi
   1400085aa:	call   rbx
   1400085ac:	jmp    0x14000860b
   1400085ae:	mov    ecx,0x8
   1400085b3:	call   0x140008a92
   1400085b8:	nop
   1400085b9:	mov    rax,QWORD PTR [rip+0x8c18]        # 0x1400111d8
   1400085c0:	mov    QWORD PTR [rsp+0x38],rax
   1400085c5:	mov    rax,QWORD PTR [rip+0x8c04]        # 0x1400111d0
   1400085cc:	mov    QWORD PTR [rsp+0x40],rax
   1400085d1:	lea    r8,[rsp+0x40]
   1400085d6:	lea    rdx,[rsp+0x38]
   1400085db:	mov    rcx,rdi
   1400085de:	call   0x140008aaa
   1400085e3:	mov    rbx,rax
   1400085e6:	mov    rdx,QWORD PTR [rsp+0x38]
   1400085eb:	mov    QWORD PTR [rip+0x8be6],rdx        # 0x1400111d8
   1400085f2:	mov    rdx,QWORD PTR [rsp+0x40]
   1400085f7:	mov    QWORD PTR [rip+0x8bd2],rdx        # 0x1400111d0
   1400085fe:	mov    ecx,0x8
   140008603:	call   0x140008a9e
   140008608:	mov    rax,rbx
   14000860b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008610:	add    rsp,0x20
   140008614:	pop    rdi
   140008615:	ret    
   140008616:	int3   
   140008617:	int3   
   140008618:	int3   
   140008619:	int3   
   14000861a:	int3   
   14000861b:	int3   
   14000861c:	sub    rsp,0x28
   140008620:	call   0x140008578
   140008625:	neg    rax
   140008628:	sbb    eax,eax
   14000862a:	neg    eax
   14000862c:	dec    eax
   14000862e:	add    rsp,0x28
   140008632:	ret    
   140008633:	int3   
   140008634:	int3   
   140008635:	int3   
   140008636:	int3   
   140008637:	int3   
   140008638:	int3   
   140008639:	int3   
   14000863a:	int3   
   14000863b:	int3   
   14000863c:	int3   
   14000863d:	int3   
   14000863e:	int3   
   14000863f:	int3   
   140008640:	jmp    QWORD PTR [rip+0x1d9a]        # 0x14000a3e0
   140008646:	int3   
   140008647:	int3   
   140008648:	int3   
   140008649:	int3   
   14000864a:	int3   
   14000864b:	int3   
   14000864c:	jmp    QWORD PTR [rip+0x1db6]        # 0x14000a408
   140008652:	int3   
   140008653:	int3   
   140008654:	int3   
   140008655:	int3   
   140008656:	int3   
   140008657:	int3   
   140008658:	jmp    QWORD PTR [rip+0x1d72]        # 0x14000a3d0
   14000865e:	int3   
   14000865f:	int3   
   140008660:	int3   
   140008661:	int3   
   140008662:	int3   
   140008663:	int3   
   140008664:	jmp    QWORD PTR [rip+0x1d5e]        # 0x14000a3c8
   14000866a:	int3   
   14000866b:	int3   
   14000866c:	int3   
   14000866d:	int3   
   14000866e:	int3   
   14000866f:	int3   
   140008670:	jmp    QWORD PTR [rip+0x1d4a]        # 0x14000a3c0
   140008676:	int3   
   140008677:	int3   
   140008678:	int3   
   140008679:	int3   
   14000867a:	int3   
   14000867b:	int3   
   14000867c:	int3   
   14000867d:	int3   
   14000867e:	int3   
   14000867f:	int3   
   140008680:	jmp    QWORD PTR [rip+0x1d32]        # 0x14000a3b8
   140008686:	int3   
   140008687:	int3   
   140008688:	int3   
   140008689:	int3   
   14000868a:	int3   
   14000868b:	int3   
   14000868c:	jmp    QWORD PTR [rip+0x1d1e]        # 0x14000a3b0
   140008692:	int3   
   140008693:	int3   
   140008694:	int3   
   140008695:	int3   
   140008696:	int3   
   140008697:	int3   
   140008698:	jmp    QWORD PTR [rip+0x1d0a]        # 0x14000a3a8
   14000869e:	int3   
   14000869f:	int3   
   1400086a0:	int3   
   1400086a1:	int3   
   1400086a2:	int3   
   1400086a3:	int3   
   1400086a4:	int3   
   1400086a5:	int3   
   1400086a6:	int3   
   1400086a7:	int3   
   1400086a8:	int3   
   1400086a9:	int3   
   1400086aa:	int3   
   1400086ab:	int3   
   1400086ac:	int3   
   1400086ad:	int3   
   1400086ae:	int3   
   1400086af:	int3   
   1400086b0:	sub    rsp,0x28
   1400086b4:	mov    rax,QWORD PTR [rcx]
   1400086b7:	cmp    DWORD PTR [rax],0xe06d7363
   1400086bd:	jne    0x1400086e2
   1400086bf:	cmp    DWORD PTR [rax+0x18],0x4
   1400086c3:	jne    0x1400086e2
   1400086c5:	mov    ecx,DWORD PTR [rax+0x20]
   1400086c8:	lea    eax,[rcx-0x19930520]
   1400086ce:	cmp    eax,0x2
   1400086d1:	jbe    0x1400086db
   1400086d3:	cmp    ecx,0x1994000
   1400086d9:	jne    0x1400086e2
   1400086db:	call   QWORD PTR [rip+0x1c57]        # 0x14000a338
   1400086e1:	int3   
   1400086e2:	xor    eax,eax
   1400086e4:	add    rsp,0x28
   1400086e8:	ret    
   1400086e9:	int3   
   1400086ea:	int3   
   1400086eb:	int3   
   1400086ec:	int3   
   1400086ed:	int3   
   1400086ee:	int3   
   1400086ef:	int3   
   1400086f0:	sub    rsp,0x28
   1400086f4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400086b0
   1400086fb:	call   QWORD PTR [rip+0x1b87]        # 0x14000a288
   140008701:	xor    eax,eax
   140008703:	add    rsp,0x28
   140008707:	ret    
   140008708:	int3   
   140008709:	int3   
   14000870a:	int3   
   14000870b:	int3   
   14000870c:	int3   
   14000870d:	int3   
   14000870e:	jmp    QWORD PTR [rip+0x1c8c]        # 0x14000a3a0
   140008714:	int3   
   140008715:	int3   
   140008716:	int3   
   140008717:	int3   
   140008718:	int3   
   140008719:	int3   
   14000871a:	int3   
   14000871b:	int3   
   14000871c:	sub    rsp,0x18
   140008720:	xor    edx,edx
   140008722:	lea    rax,[rcx-0x1]
   140008726:	cmp    rax,0xfffffffffffffffd
   14000872a:	ja     0x140008768
   14000872c:	mov    eax,0x5a4d
   140008731:	cmp    WORD PTR [rcx],ax
   140008734:	jne    0x140008760
   140008736:	cmp    DWORD PTR [rcx+0x3c],edx
   140008739:	jl     0x140008760
   14000873b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140008742:	jae    0x140008760
   140008744:	movsxd rax,DWORD PTR [rcx+0x3c]
   140008748:	add    rax,rcx
   14000874b:	mov    QWORD PTR [rsp],rax
   14000874f:	cmp    DWORD PTR [rax],0x4550
   140008755:	cmovne rax,rdx
   140008759:	mov    rdx,rax
   14000875c:	mov    QWORD PTR [rsp],rax
   140008760:	jmp    0x140008768
   140008762:	xor    edx,edx
   140008764:	mov    QWORD PTR [rsp],rdx
   140008768:	mov    rax,rdx
   14000876b:	add    rsp,0x18
   14000876f:	ret    
   140008770:	int3   
   140008771:	int3   
   140008772:	int3   
   140008773:	int3   
   140008774:	int3   
   140008775:	int3   
   140008776:	int3   
   140008777:	int3   
   140008778:	rex push rbx
   14000877a:	sub    rsp,0x20
   14000877e:	mov    ebx,ecx
   140008780:	xor    ecx,ecx
   140008782:	call   QWORD PTR [rip+0x1978]        # 0x14000a100
   140008788:	test   rax,rax
   14000878b:	je     0x1400087b5
   14000878d:	mov    rcx,rax
   140008790:	call   0x14000871c
   140008795:	test   rax,rax
   140008798:	je     0x1400087b5
   14000879a:	mov    ecx,0x2
   14000879f:	cmp    WORD PTR [rax+0x5c],cx
   1400087a3:	jne    0x1400087a9
   1400087a5:	mov    eax,ecx
   1400087a7:	jmp    0x1400087b7
   1400087a9:	cmp    WORD PTR [rax+0x5c],0x3
   1400087ae:	mov    eax,0x1
   1400087b3:	je     0x1400087b7
   1400087b5:	mov    eax,ebx
   1400087b7:	add    rsp,0x20
   1400087bb:	pop    rbx
   1400087bc:	ret    
   1400087bd:	int3   
   1400087be:	int3   
   1400087bf:	int3   
   1400087c0:	int3   
   1400087c1:	int3   
   1400087c2:	int3   
   1400087c3:	int3   
   1400087c4:	jmp    QWORD PTR [rip+0x1bce]        # 0x14000a398
   1400087ca:	int3   
   1400087cb:	int3   
   1400087cc:	int3   
   1400087cd:	int3   
   1400087ce:	int3   
   1400087cf:	int3   
   1400087d0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400087d4:	xor    r9d,r9d
   1400087d7:	add    r8,rcx
   1400087da:	mov    r10,rdx
   1400087dd:	movzx  eax,WORD PTR [r8+0x14]
   1400087e2:	movzx  r11d,WORD PTR [r8+0x6]
   1400087e7:	add    rax,0x18
   1400087eb:	add    rax,r8
   1400087ee:	test   r11d,r11d
   1400087f1:	je     0x140008811
   1400087f3:	mov    edx,DWORD PTR [rax+0xc]
   1400087f6:	cmp    r10,rdx
   1400087f9:	jb     0x140008805
   1400087fb:	mov    ecx,DWORD PTR [rax+0x8]
   1400087fe:	add    ecx,edx
   140008800:	cmp    r10,rcx
   140008803:	jb     0x140008813
   140008805:	inc    r9d
   140008808:	add    rax,0x28
   14000880c:	cmp    r9d,r11d
   14000880f:	jb     0x1400087f3
   140008811:	xor    eax,eax
   140008813:	ret    
   140008814:	int3   
   140008815:	int3   
   140008816:	int3   
   140008817:	int3   
   140008818:	int3   
   140008819:	int3   
   14000881a:	int3   
   14000881b:	int3   
   14000881c:	int3   
   14000881d:	int3   
   14000881e:	int3   
   14000881f:	int3   
   140008820:	mov    QWORD PTR [rsp+0x8],rbx
   140008825:	push   rdi
   140008826:	sub    rsp,0x20
   14000882a:	mov    rbx,rcx
   14000882d:	lea    rdi,[rip+0xffffffffffff77cc]        # 0x140000000
   140008834:	mov    rcx,rdi
   140008837:	call   0x140008880
   14000883c:	test   eax,eax
   14000883e:	je     0x140008862
   140008840:	sub    rbx,rdi
   140008843:	mov    rdx,rbx
   140008846:	mov    rcx,rdi
   140008849:	call   0x1400087d0
   14000884e:	test   rax,rax
   140008851:	je     0x140008862
   140008853:	mov    eax,DWORD PTR [rax+0x24]
   140008856:	shr    eax,0x1f
   140008859:	not    eax
   14000885b:	and    eax,0x1
   14000885e:	jmp    0x140008862
   140008860:	xor    eax,eax
   140008862:	mov    rbx,QWORD PTR [rsp+0x30]
   140008867:	add    rsp,0x20
   14000886b:	pop    rdi
   14000886c:	ret    
   14000886d:	int3   
   14000886e:	int3   
   14000886f:	int3   
   140008870:	int3   
   140008871:	int3   
   140008872:	int3   
   140008873:	int3   
   140008874:	int3   
   140008875:	int3   
   140008876:	int3   
   140008877:	int3   
   140008878:	int3   
   140008879:	int3   
   14000887a:	int3   
   14000887b:	int3   
   14000887c:	int3   
   14000887d:	int3   
   14000887e:	int3   
   14000887f:	int3   
   140008880:	mov    rax,rcx
   140008883:	mov    ecx,0x5a4d
   140008888:	cmp    WORD PTR [rax],cx
   14000888b:	je     0x140008890
   14000888d:	xor    eax,eax
   14000888f:	ret    
   140008890:	movsxd rcx,DWORD PTR [rax+0x3c]
   140008894:	add    rcx,rax
   140008897:	xor    eax,eax
   140008899:	cmp    DWORD PTR [rcx],0x4550
   14000889f:	jne    0x1400088ad
   1400088a1:	mov    edx,0x20b
   1400088a6:	cmp    WORD PTR [rcx+0x18],dx
   1400088aa:	sete   al
   1400088ad:	ret    
   1400088ae:	int3   
   1400088af:	int3   
   1400088b0:	int3   
   1400088b1:	int3   
   1400088b2:	int3   
   1400088b3:	int3   
   1400088b4:	mov    QWORD PTR [rsp+0x20],rbx
   1400088b9:	push   rbp
   1400088ba:	mov    rbp,rsp
   1400088bd:	sub    rsp,0x20
   1400088c1:	and    QWORD PTR [rbp+0x18],0x0
   1400088c6:	movabs rbx,0x2b992ddfa232
   1400088d0:	mov    rax,QWORD PTR [rip+0x5739]        # 0x14000e010
   1400088d7:	cmp    rax,rbx
   1400088da:	jne    0x14000896f
   1400088e0:	lea    rcx,[rbp+0x18]
   1400088e4:	call   QWORD PTR [rip+0x19ee]        # 0x14000a2d8
   1400088ea:	mov    rax,QWORD PTR [rbp+0x18]
   1400088ee:	mov    QWORD PTR [rbp+0x10],rax
   1400088f2:	call   QWORD PTR [rip+0x19a8]        # 0x14000a2a0
   1400088f8:	mov    eax,eax
   1400088fa:	xor    QWORD PTR [rbp+0x10],rax
   1400088fe:	call   QWORD PTR [rip+0x1864]        # 0x14000a168
   140008904:	mov    eax,eax
   140008906:	xor    QWORD PTR [rbp+0x10],rax
   14000890a:	call   QWORD PTR [rip+0x19d0]        # 0x14000a2e0
   140008910:	mov    eax,eax
   140008912:	shl    rax,0x18
   140008916:	xor    QWORD PTR [rbp+0x10],rax
   14000891a:	call   QWORD PTR [rip+0x19c0]        # 0x14000a2e0
   140008920:	mov    eax,eax
   140008922:	lea    rcx,[rbp+0x10]
   140008926:	xor    rax,QWORD PTR [rbp+0x10]
   14000892a:	xor    rax,rcx
   14000892d:	lea    rcx,[rbp+0x20]
   140008931:	mov    QWORD PTR [rbp+0x10],rax
   140008935:	call   QWORD PTR [rip+0x198d]        # 0x14000a2c8
   14000893b:	mov    eax,DWORD PTR [rbp+0x20]
   14000893e:	movabs rcx,0xffffffffffff
   140008948:	shl    rax,0x20
   14000894c:	xor    rax,QWORD PTR [rbp+0x20]
   140008950:	xor    rax,QWORD PTR [rbp+0x10]
   140008954:	and    rax,rcx
   140008957:	movabs rcx,0x2b992ddfa233
   140008961:	cmp    rax,rbx
   140008964:	cmove  rax,rcx
   140008968:	mov    QWORD PTR [rip+0x56a1],rax        # 0x14000e010
   14000896f:	mov    rbx,QWORD PTR [rsp+0x48]
   140008974:	not    rax
   140008977:	mov    QWORD PTR [rip+0x569a],rax        # 0x14000e018
   14000897e:	add    rsp,0x20
   140008982:	pop    rbp
   140008983:	ret    
   140008984:	int3   
   140008985:	int3   
   140008986:	int3   
   140008987:	int3   
   140008988:	int3   
   140008989:	int3   
   14000898a:	jmp    QWORD PTR [rip+0x19d0]        # 0x14000a360
   140008990:	int3   
   140008991:	int3   
   140008992:	int3   
   140008993:	int3   
   140008994:	int3   
   140008995:	int3   
   140008996:	jmp    QWORD PTR [rip+0x19bc]        # 0x14000a358
   14000899c:	int3   
   14000899d:	int3   
   14000899e:	int3   
   14000899f:	int3   
   1400089a0:	int3   
   1400089a1:	int3   
   1400089a2:	jmp    QWORD PTR [rip+0x1980]        # 0x14000a328
   1400089a8:	int3   
   1400089a9:	int3   
   1400089aa:	int3   
   1400089ab:	int3   
   1400089ac:	int3   
   1400089ad:	int3   
   1400089ae:	int3   
   1400089af:	int3   
   1400089b0:	jmp    0x1400089bc
   1400089b5:	int3   
   1400089b6:	int3   
   1400089b7:	int3   
   1400089b8:	int3   
   1400089b9:	int3   
   1400089ba:	int3   
   1400089bb:	int3   
   1400089bc:	rex push rbx
   1400089be:	sub    rsp,0x540
   1400089c5:	mov    rax,QWORD PTR [rip+0x5644]        # 0x14000e010
   1400089cc:	xor    rax,rsp
   1400089cf:	mov    QWORD PTR [rsp+0x530],rax
   1400089d7:	lea    rcx,[rsp+0x60]
   1400089dc:	call   QWORD PTR [rip+0x1abe]        # 0x14000a4a0
   1400089e2:	mov    rbx,QWORD PTR [rsp+0x158]
   1400089ea:	lea    rdx,[rsp+0x40]
   1400089ef:	mov    rcx,rbx
   1400089f2:	xor    r8d,r8d
   1400089f5:	call   QWORD PTR [rip+0x1a8d]        # 0x14000a488
   1400089fb:	test   rax,rax
   1400089fe:	je     0x140008a39
   140008a00:	and    QWORD PTR [rsp+0x38],0x0
   140008a06:	lea    rcx,[rsp+0x48]
   140008a0b:	mov    rdx,QWORD PTR [rsp+0x40]
   140008a10:	mov    r9,rax
   140008a13:	mov    QWORD PTR [rsp+0x30],rcx
   140008a18:	mov    r8,rbx
   140008a1b:	lea    rcx,[rsp+0x50]
   140008a20:	mov    QWORD PTR [rsp+0x28],rcx
   140008a25:	lea    rcx,[rsp+0x60]
   140008a2a:	mov    QWORD PTR [rsp+0x20],rcx
   140008a2f:	xor    ecx,ecx
   140008a31:	call   QWORD PTR [rip+0x1a49]        # 0x14000a480
   140008a37:	jmp    0x140008a59
   140008a39:	mov    rax,QWORD PTR [rsp+0x548]
   140008a41:	mov    QWORD PTR [rsp+0x158],rax
   140008a49:	lea    rax,[rsp+0x548]
   140008a51:	mov    QWORD PTR [rsp+0xf8],rax
   140008a59:	lea    rcx,[rip+0x1c00]        # 0x14000a660
   140008a60:	call   QWORD PTR [rip+0x1812]        # 0x14000a278
   140008a66:	mov    rcx,QWORD PTR [rsp+0x530]
   140008a6e:	xor    rcx,rsp
   140008a71:	call   0x1400081f0
   140008a76:	add    rsp,0x540
   140008a7d:	pop    rbx
   140008a7e:	ret    
   140008a7f:	int3   
   140008a80:	int3   
   140008a81:	int3   
   140008a82:	int3   
   140008a83:	int3   
   140008a84:	int3   
   140008a85:	int3   
   140008a86:	jmp    QWORD PTR [rip+0x1894]        # 0x14000a320
   140008a8c:	int3   
   140008a8d:	int3   
   140008a8e:	int3   
   140008a8f:	int3   
   140008a90:	int3   
   140008a91:	int3   
   140008a92:	jmp    QWORD PTR [rip+0x1880]        # 0x14000a318
   140008a98:	int3   
   140008a99:	int3   
   140008a9a:	int3   
   140008a9b:	int3   
   140008a9c:	int3   
   140008a9d:	int3   
   140008a9e:	jmp    QWORD PTR [rip+0x186c]        # 0x14000a310
   140008aa4:	int3   
   140008aa5:	int3   
   140008aa6:	int3   
   140008aa7:	int3   
   140008aa8:	int3   
   140008aa9:	int3   
   140008aaa:	jmp    QWORD PTR [rip+0x1858]        # 0x14000a308
   140008ab0:	int3   
   140008ab1:	int3   
   140008ab2:	int3   
   140008ab3:	int3   
   140008ab4:	int3   
   140008ab5:	int3   
   140008ab6:	int3   
   140008ab7:	int3   
   140008ab8:	sub    rsp,0x28
   140008abc:	mov    r8,QWORD PTR [r9+0x38]
   140008ac0:	mov    rcx,rdx
   140008ac3:	mov    rdx,r9
   140008ac6:	call   0x140008adc
   140008acb:	mov    eax,0x1
   140008ad0:	add    rsp,0x28
   140008ad4:	ret    
   140008ad5:	int3   
   140008ad6:	int3   
   140008ad7:	int3   
   140008ad8:	int3   
   140008ad9:	int3   
   140008ada:	int3   
   140008adb:	int3   
   140008adc:	rex push rbx
   140008ade:	sub    rsp,0x20
   140008ae2:	mov    r11d,DWORD PTR [r8]
   140008ae5:	mov    rbx,rdx
   140008ae8:	and    r11d,0xfffffff8
   140008aec:	mov    r9,rcx
   140008aef:	test   BYTE PTR [r8],0x4
   140008af3:	mov    r10,rcx
   140008af6:	je     0x140008b0b
   140008af8:	mov    eax,DWORD PTR [r8+0x8]
   140008afc:	movsxd r10,DWORD PTR [r8+0x4]
   140008b00:	neg    eax
   140008b02:	add    r10,rcx
   140008b05:	movsxd rcx,eax
   140008b08:	and    r10,rcx
   140008b0b:	movsxd rax,r11d
   140008b0e:	mov    rdx,QWORD PTR [rax+r10*1]
   140008b12:	mov    rax,QWORD PTR [rbx+0x10]
   140008b16:	mov    ecx,DWORD PTR [rax+0x8]
   140008b19:	add    rcx,QWORD PTR [rbx+0x8]
   140008b1d:	test   BYTE PTR [rcx+0x3],0xf
   140008b21:	je     0x140008b2f
   140008b23:	movzx  eax,BYTE PTR [rcx+0x3]
   140008b27:	and    eax,0xfffffff0
   140008b2a:	cdqe   
   140008b2c:	add    r9,rax
   140008b2f:	xor    r9,rdx
   140008b32:	mov    rcx,r9
   140008b35:	add    rsp,0x20
   140008b39:	pop    rbx
   140008b3a:	jmp    0x1400081f0
   140008b3f:	int3   
   140008b40:	int3   
   140008b41:	int3   
   140008b42:	int3   
   140008b43:	int3   
   140008b44:	int3   
   140008b45:	int3   
   140008b46:	jmp    QWORD PTR [rip+0x18c4]        # 0x14000a410
   140008b4c:	int3   
   140008b4d:	int3   
   140008b4e:	int3   
   140008b4f:	int3   
   140008b50:	int3   
   140008b51:	int3   
   140008b52:	int3   
   140008b53:	int3   
   140008b54:	mov    rax,rsp
   140008b57:	mov    QWORD PTR [rax+0x8],rbx
   140008b5b:	mov    QWORD PTR [rax+0x10],rbp
   140008b5f:	mov    QWORD PTR [rax+0x18],rsi
   140008b63:	mov    QWORD PTR [rax+0x20],rdi
   140008b67:	push   r14
   140008b69:	sub    rsp,0x20
   140008b6d:	mov    rbx,QWORD PTR [r9+0x38]
   140008b71:	mov    rsi,rdx
   140008b74:	mov    r14,r8
   140008b77:	mov    rbp,rcx
   140008b7a:	mov    rdx,r9
   140008b7d:	mov    rcx,rsi
   140008b80:	mov    rdi,r9
   140008b83:	lea    r8,[rbx+0x4]
   140008b87:	call   0x140008adc
   140008b8c:	mov    r11d,DWORD PTR [rbx+0x4]
   140008b90:	mov    r8d,0x1
   140008b96:	mov    r10d,DWORD PTR [rbp+0x4]
   140008b9a:	mov    eax,r11d
   140008b9d:	and    eax,r8d
   140008ba0:	and    r11d,0x2
   140008ba4:	and    r10b,0x66
   140008ba8:	cmove  r11d,eax
   140008bac:	test   r11d,r11d
   140008baf:	je     0x140008bc5
   140008bb1:	mov    r9,rdi
   140008bb4:	mov    r8,r14
   140008bb7:	mov    rdx,rsi
   140008bba:	mov    rcx,rbp
   140008bbd:	call   0x140008b46
   140008bc2:	mov    r8d,eax
   140008bc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140008bca:	mov    eax,r8d
   140008bcd:	mov    rbp,QWORD PTR [rsp+0x38]
   140008bd2:	mov    rsi,QWORD PTR [rsp+0x40]
   140008bd7:	mov    rdi,QWORD PTR [rsp+0x48]
   140008bdc:	add    rsp,0x20
   140008be0:	pop    r14
   140008be2:	ret    
   140008be3:	int3   
   140008be4:	int3   
   140008be5:	int3   
   140008be6:	int3   
   140008be7:	int3   
   140008be8:	int3   
   140008be9:	int3   
   140008bea:	int3   
   140008beb:	int3   
   140008bec:	int3   
   140008bed:	int3   
   140008bee:	int3   
   140008bef:	int3   
   140008bf0:	int3   
   140008bf1:	int3   
   140008bf2:	int3   
   140008bf3:	int3   
   140008bf4:	int3   
   140008bf5:	int3   
   140008bf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008c00:	jmp    rax
   140008c02:	int3   
   140008c03:	int3   
   140008c04:	int3   
   140008c05:	int3   
   140008c06:	int3   
   140008c07:	int3   
   140008c08:	int3   
   140008c09:	int3   
   140008c0a:	int3   
   140008c0b:	int3   
   140008c0c:	int3   
   140008c0d:	int3   
   140008c0e:	int3   
   140008c0f:	int3   
   140008c10:	int3   
   140008c11:	int3   
   140008c12:	int3   
   140008c13:	int3   
   140008c14:	int3   
   140008c15:	int3   
   140008c16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008c20:	sub    rsp,0x10
   140008c24:	mov    QWORD PTR [rsp],r10
   140008c28:	mov    QWORD PTR [rsp+0x8],r11
   140008c2d:	xor    r11,r11
   140008c30:	lea    r10,[rsp+0x18]
   140008c35:	sub    r10,rax
   140008c38:	cmovb  r10,r11
   140008c3c:	mov    r11,QWORD PTR gs:0x10
   140008c45:	cmp    r10,r11
   140008c48:	jae    0x140008c5f
   140008c4a:	and    r10w,0xf000
   140008c50:	lea    r11,[r11-0x1000]
   140008c57:	test   BYTE PTR [r11],r11b
   140008c5a:	cmp    r10,r11
   140008c5d:	jne    0x140008c50
   140008c5f:	mov    r10,QWORD PTR [rsp]
   140008c63:	mov    r11,QWORD PTR [rsp+0x8]
   140008c68:	add    rsp,0x10
   140008c6c:	ret    
   140008c6d:	int3   
   140008c6e:	int3   
   140008c6f:	int3   
   140008c70:	int3   
   140008c71:	int3   
   140008c72:	int3   
   140008c73:	int3   
   140008c74:	int3   
   140008c75:	int3   
   140008c76:	mov    QWORD PTR [rsp+0x10],rdx
   140008c7b:	push   rbp
   140008c7c:	sub    rsp,0x20
   140008c80:	mov    rbp,rdx
   140008c83:	lea    rax,[rip+0xffffffffffff8b0a]        # 0x140001794
   140008c8a:	add    rsp,0x20
   140008c8e:	pop    rbp
   140008c8f:	ret    
   140008c90:	int3   
   140008c91:	int3   
   140008c92:	int3   
   140008c93:	int3   
   140008c94:	int3   
   140008c95:	int3   
   140008c96:	int3   
   140008c97:	mov    rcx,QWORD PTR [rdx+0x28]
   140008c9e:	jmp    0x140007d08
   140008ca3:	mov    rcx,QWORD PTR [rdx+0x28]
   140008caa:	jmp    0x140002168
   140008caf:	mov    QWORD PTR [rsp+0x10],rdx
   140008cb4:	push   rbp
   140008cb5:	sub    rsp,0x20
   140008cb9:	mov    rbp,rdx
   140008cbc:	lea    rax,[rip+0xffffffffffff928d]        # 0x140001f50
   140008cc3:	add    rsp,0x20
   140008cc7:	pop    rbp
   140008cc8:	ret    
   140008cc9:	int3   
   140008cca:	int3   
   140008ccb:	int3   
   140008ccc:	int3   
   140008ccd:	int3   
   140008cce:	int3   
   140008ccf:	int3   
   140008cd0:	mov    rcx,QWORD PTR [rdx+0x40]
   140008cd7:	jmp    0x140002168
   140008cdc:	int3   
   140008cdd:	int3   
   140008cde:	int3   
   140008cdf:	int3   
   140008ce0:	int3   
   140008ce1:	int3   
   140008ce2:	mov    rcx,QWORD PTR [rdx+0x40]
   140008ce9:	jmp    0x140003208
   140008cee:	int3   
   140008cef:	int3   
   140008cf0:	int3   
   140008cf1:	int3   
   140008cf2:	int3   
   140008cf3:	int3   
   140008cf4:	mov    rcx,QWORD PTR [rdx+0x40]
   140008cfb:	add    rcx,0x8
   140008cff:	jmp    0x140003248
   140008d04:	mov    rcx,QWORD PTR [rdx+0x40]
   140008d0b:	add    rcx,0x20
   140008d0f:	jmp    0x140005584
   140008d14:	mov    rcx,QWORD PTR [rdx+0x40]
   140008d1b:	jmp    0x140003208
   140008d20:	int3   
   140008d21:	int3   
   140008d22:	int3   
   140008d23:	int3   
   140008d24:	int3   
   140008d25:	int3   
   140008d26:	rex push rbp
   140008d28:	sub    rsp,0x20
   140008d2c:	mov    rbp,rdx
   140008d2f:	mov    rax,QWORD PTR [rcx]
   140008d32:	xor    ecx,ecx
   140008d34:	cmp    DWORD PTR [rax],0xc0000017
   140008d3a:	sete   cl
   140008d3d:	mov    eax,ecx
   140008d3f:	add    rsp,0x20
   140008d43:	pop    rbp
   140008d44:	ret    
   140008d45:	int3   
   140008d46:	int3   
   140008d47:	int3   
   140008d48:	int3   
   140008d49:	int3   
   140008d4a:	int3   
   140008d4b:	int3   
   140008d4c:	mov    QWORD PTR [rsp+0x10],rdx
   140008d51:	push   rbp
   140008d52:	sub    rsp,0x20
   140008d56:	mov    rbp,rdx
   140008d59:	lea    rax,[rip+0xffffffffffffa7b0]        # 0x140003510
   140008d60:	add    rsp,0x20
   140008d64:	pop    rbp
   140008d65:	ret    
   140008d66:	int3   
   140008d67:	lea    rcx,[rdx+0x40]
   140008d6e:	jmp    0x140003464
   140008d73:	mov    QWORD PTR [rsp+0x10],rdx
   140008d78:	push   rbp
   140008d79:	sub    rsp,0x20
   140008d7d:	mov    rbp,rdx
   140008d80:	lea    rax,[rip+0xffffffffffffa7ff]        # 0x140003586
   140008d87:	add    rsp,0x20
   140008d8b:	pop    rbp
   140008d8c:	ret    
   140008d8d:	int3   
   140008d8e:	lea    rcx,[rdx+0xa8]
   140008d95:	jmp    0x140003464
   140008d9a:	int3   
   140008d9b:	int3   
   140008d9c:	int3   
   140008d9d:	int3   
   140008d9e:	int3   
   140008d9f:	int3   
   140008da0:	lea    rcx,[rdx+0x48]
   140008da7:	jmp    0x140003d50
   140008dac:	int3   
   140008dad:	int3   
   140008dae:	int3   
   140008daf:	int3   
   140008db0:	int3   
   140008db1:	int3   
   140008db2:	lea    rcx,[rdx+0x20]
   140008db9:	jmp    0x140003830
   140008dbe:	lea    rcx,[rdx+0x38]
   140008dc5:	jmp    0x140003d50
   140008dca:	int3   
   140008dcb:	int3   
   140008dcc:	int3   
   140008dcd:	int3   
   140008dce:	int3   
   140008dcf:	int3   
   140008dd0:	lea    rcx,[rdx+0x80]
   140008dd7:	jmp    0x1400037b8
   140008ddc:	mov    QWORD PTR [rsp+0x10],rdx
   140008de1:	push   rbp
   140008de2:	sub    rsp,0x30
   140008de6:	mov    rbp,rdx
   140008de9:	lea    rax,[rip+0xffffffffffffb105]        # 0x140003ef5
   140008df0:	add    rsp,0x30
   140008df4:	pop    rbp
   140008df5:	ret    
   140008df6:	int3   
   140008df7:	lea    rcx,[rdx+0x80]
   140008dfe:	jmp    0x1400037b8
   140008e03:	mov    QWORD PTR [rsp+0x10],rdx
   140008e08:	push   rbp
   140008e09:	sub    rsp,0x30
   140008e0d:	mov    rbp,rdx
   140008e10:	lea    rax,[rip+0xffffffffffffb2cf]        # 0x1400040e6
   140008e17:	add    rsp,0x30
   140008e1b:	pop    rbp
   140008e1c:	ret    
   140008e1d:	int3   
   140008e1e:	int3   
   140008e1f:	int3   
   140008e20:	int3   
   140008e21:	int3   
   140008e22:	int3   
   140008e23:	int3   
   140008e24:	lea    rcx,[rdx+0x90]
   140008e2b:	jmp    0x1400044bc
   140008e30:	lea    rcx,[rdx+0xa8]
   140008e37:	jmp    0x1400044bc
   140008e3c:	int3   
   140008e3d:	int3   
   140008e3e:	int3   
   140008e3f:	int3   
   140008e40:	int3   
   140008e41:	int3   
   140008e42:	lea    rcx,[rdx+0x60]
   140008e49:	jmp    0x140003d50
   140008e4e:	lea    rcx,[rdx+0x70]
   140008e55:	jmp    0x1400037b8
   140008e5a:	mov    QWORD PTR [rsp+0x10],rdx
   140008e5f:	push   rbp
   140008e60:	sub    rsp,0x30
   140008e64:	mov    rbp,rdx
   140008e67:	lea    rax,[rip+0xffffffffffffc3bd]        # 0x14000522b
   140008e6e:	add    rsp,0x30
   140008e72:	pop    rbp
   140008e73:	ret    
   140008e74:	int3   
   140008e75:	int3   
   140008e76:	int3   
   140008e77:	int3   
   140008e78:	int3   
   140008e79:	int3   
   140008e7a:	int3   
   140008e7b:	lea    rcx,[rdx+0x40]
   140008e82:	jmp    0x1400060e0
   140008e87:	lea    rcx,[rdx+0x38]
   140008e8e:	jmp    0x1400060e0
   140008e93:	lea    rcx,[rdx+0x30]
   140008e9a:	jmp    0x1400060e0
   140008e9f:	int3   
   140008ea0:	int3   
   140008ea1:	int3   
   140008ea2:	int3   
   140008ea3:	int3   
   140008ea4:	int3   
   140008ea5:	rex push rbp
   140008ea7:	sub    rsp,0x20
   140008eab:	mov    rbp,rdx
   140008eae:	mov    rax,QWORD PTR [rcx]
   140008eb1:	mov    rdx,rcx
   140008eb4:	mov    ecx,DWORD PTR [rax]
   140008eb6:	call   0x14000870e
   140008ebb:	nop
   140008ebc:	add    rsp,0x20
   140008ec0:	pop    rbp
   140008ec1:	ret    
   140008ec2:	int3   
   140008ec3:	int3   
   140008ec4:	int3   
   140008ec5:	int3   
   140008ec6:	int3   
   140008ec7:	int3   
   140008ec8:	int3   
   140008ec9:	rex push rbp
   140008ecb:	sub    rsp,0x20
   140008ecf:	mov    rbp,rdx
   140008ed2:	mov    ecx,0x8
   140008ed7:	call   0x140008a9e
   140008edc:	nop
   140008edd:	add    rsp,0x20
   140008ee1:	pop    rbp
   140008ee2:	ret    
   140008ee3:	int3   
   140008ee4:	int3   
   140008ee5:	int3   
   140008ee6:	int3   
   140008ee7:	int3   
   140008ee8:	int3   
   140008ee9:	int3   
   140008eea:	int3   
   140008eeb:	int3   
   140008eec:	int3   
   140008eed:	int3   
   140008eee:	int3   
   140008eef:	int3   
   140008ef0:	rex push rbp
   140008ef2:	sub    rsp,0x20
   140008ef6:	mov    rbp,rdx
   140008ef9:	mov    rax,QWORD PTR [rcx]
   140008efc:	xor    ecx,ecx
   140008efe:	cmp    DWORD PTR [rax],0xc0000005
   140008f04:	sete   cl
   140008f07:	mov    eax,ecx
   140008f09:	add    rsp,0x20
   140008f0d:	pop    rbp
   140008f0e:	ret    
   140008f0f:	int3   
   140008f10:	int3   
   140008f11:	int3   
   140008f12:	int3   
   140008f13:	int3   
   140008f14:	int3   
   140008f15:	int3   
   140008f16:	int3   
   140008f17:	int3   
   140008f18:	int3   
   140008f19:	int3   
   140008f1a:	int3   
   140008f1b:	int3   
   140008f1c:	int3   
   140008f1d:	int3   
   140008f1e:	int3   
   140008f1f:	int3   
   140008f20:	mov    QWORD PTR [rsp+0x8],rbx
   140008f25:	push   rdi
   140008f26:	sub    rsp,0x20
   140008f2a:	mov    rdi,QWORD PTR [rip+0x81df]        # 0x140011110
   140008f31:	mov    rax,QWORD PTR [rip+0x81e0]        # 0x140011118
   140008f38:	jmp    0x140008f5e
   140008f3a:	mov    rbx,QWORD PTR [rdi]
   140008f3d:	test   rbx,rbx
   140008f40:	je     0x140008f5a
   140008f42:	mov    rbx,QWORD PTR [rbx+0x40]
   140008f46:	mov    rcx,rbx
   140008f49:	call   QWORD PTR [rip+0x1569]        # 0x14000a4b8
   140008f4f:	xor    ecx,ecx
   140008f51:	call   rbx
   140008f53:	mov    rax,QWORD PTR [rip+0x81be]        # 0x140011118
   140008f5a:	add    rdi,0x8
   140008f5e:	cmp    rdi,rax
   140008f61:	jb     0x140008f3a
   140008f63:	lea    rcx,[rip+0x8076]        # 0x140010fe0
   140008f6a:	call   0x140002f74
   140008f6f:	call   0x140002ed8
   140008f74:	cmp    BYTE PTR [rip+0x80c7],0x0        # 0x140011042
   140008f7b:	je     0x140008f83
   140008f7d:	call   QWORD PTR [rip+0x12cd]        # 0x14000a250
   140008f83:	lea    rcx,[rip+0x8056]        # 0x140010fe0
   140008f8a:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f8f:	add    rsp,0x20
   140008f93:	pop    rdi
   140008f94:	jmp    0x140002f74
   140008f99:	int3   
   140008f9a:	int3   
   140008f9b:	int3   
   140008f9c:	int3   
   140008f9d:	int3   
   140008f9e:	int3   
   140008f9f:	int3   
   140008fa0:	sub    rsp,0x28
   140008fa4:	lea    rcx,[rip+0x80cd]        # 0x140011078
   140008fab:	call   QWORD PTR [rip+0x10df]        # 0x14000a090
   140008fb1:	mov    rcx,QWORD PTR [rip+0x80e8]        # 0x1400110a0
   140008fb8:	test   rcx,rcx
   140008fbb:	je     0x140008fcb
   140008fbd:	call   QWORD PTR [rip+0x132d]        # 0x14000a2f0
   140008fc3:	and    QWORD PTR [rip+0x80d5],0x0        # 0x1400110a0
   140008fcb:	and    DWORD PTR [rip+0x80d6],0x0        # 0x1400110a8
   140008fd2:	and    DWORD PTR [rip+0x80d3],0x0        # 0x1400110ac
   140008fd9:	add    rsp,0x28
   140008fdd:	ret    
   140008fde:	int3   
   140008fdf:	int3   
   140008fe0:	int3   
   140008fe1:	int3   
   140008fe2:	int3   
   140008fe3:	int3   
   140008fe4:	int3   
   140008fe5:	int3   
   140008fe6:	int3   
   140008fe7:	int3   
   140008fe8:	int3   
   140008fe9:	int3   
   140008fea:	int3   
   140008feb:	int3   
   140008fec:	int3   
   140008fed:	int3   
   140008fee:	int3   
   140008fef:	int3   
   140008ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ff5:	mov    QWORD PTR [rsp+0x10],rsi
   140008ffa:	push   rdi
   140008ffb:	sub    rsp,0x20
   140008fff:	cmp    DWORD PTR [rip+0x80aa],0x48        # 0x1400110b0
   140009006:	mov    rsi,QWORD PTR [rip+0x804b]        # 0x140011058
   14000900d:	jne    0x14000908e
   14000900f:	mov    eax,DWORD PTR [rip+0x80db]        # 0x1400110f0
   140009015:	xor    ebx,ebx
   140009017:	test   eax,eax
   140009019:	jle    0x140009052
   14000901b:	xor    edi,edi
   14000901d:	test   rdi,rdi
   140009020:	js     0x1400090c6
   140009026:	cmp    ebx,eax
   140009028:	jge    0x1400090c6
   14000902e:	mov    rax,QWORD PTR [rip+0x80b3]        # 0x1400110e8
   140009035:	mov    rdx,rsi
   140009038:	movzx  ecx,WORD PTR [rdi+rax*1]
   14000903c:	call   QWORD PTR [rip+0x119e]        # 0x14000a1e0
   140009042:	mov    eax,DWORD PTR [rip+0x80a8]        # 0x1400110f0
   140009048:	inc    ebx
   14000904a:	add    rdi,0x2
   14000904e:	cmp    ebx,eax
   140009050:	jl     0x14000901d
   140009052:	mov    rcx,QWORD PTR [rip+0x808f]        # 0x1400110e8
   140009059:	test   rcx,rcx
   14000905c:	je     0x14000906c
   14000905e:	call   QWORD PTR [rip+0x128c]        # 0x14000a2f0
   140009064:	and    QWORD PTR [rip+0x807c],0x0        # 0x1400110e8
   14000906c:	and    DWORD PTR [rip+0x807d],0x0        # 0x1400110f0
   140009073:	lea    rcx,[rip+0x803e]        # 0x1400110b8
   14000907a:	and    DWORD PTR [rip+0x8073],0x0        # 0x1400110f4
   140009081:	call   QWORD PTR [rip+0x1009]        # 0x14000a090
   140009087:	and    DWORD PTR [rip+0x8022],0x0        # 0x1400110b0
   14000908e:	mov    rcx,QWORD PTR [rip+0x8053]        # 0x1400110e8
   140009095:	test   rcx,rcx
   140009098:	je     0x1400090a8
   14000909a:	call   QWORD PTR [rip+0x1250]        # 0x14000a2f0
   1400090a0:	and    QWORD PTR [rip+0x8040],0x0        # 0x1400110e8
   1400090a8:	and    DWORD PTR [rip+0x8041],0x0        # 0x1400110f0
   1400090af:	and    DWORD PTR [rip+0x803e],0x0        # 0x1400110f4
   1400090b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400090bb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400090c0:	add    rsp,0x20
   1400090c4:	pop    rdi
   1400090c5:	ret    
   1400090c6:	mov    ecx,0xc000008c
   1400090cb:	call   0x140003844
   1400090d0:	int3   
   1400090d1:	int3   
   1400090d2:	int3   
   1400090d3:	int3   
   1400090d4:	int3   
   1400090d5:	int3   
   1400090d6:	int3   
   1400090d7:	int3   
   1400090d8:	int3   
   1400090d9:	int3   
   1400090da:	int3   
   1400090db:	int3   
   1400090dc:	int3   
   1400090dd:	int3   
   1400090de:	int3   
   1400090df:	int3   
   1400090e0:	jmp    0x140002ed8
   1400090e5:	int3   
   1400090e6:	int3   
   1400090e7:	int3   
   1400090e8:	int3   
   1400090e9:	int3   
   1400090ea:	int3   
   1400090eb:	int3   
   1400090ec:	int3   
   1400090ed:	int3   
   1400090ee:	int3   
   1400090ef:	int3   
   1400090f0:	rex push rbx
   1400090f2:	sub    rsp,0x20
   1400090f6:	mov    rbx,QWORD PTR [rip+0x805b]        # 0x140011158
   1400090fd:	test   rbx,rbx
   140009100:	je     0x14000910d
   140009102:	mov    rcx,rbx
   140009105:	call   QWORD PTR [rip+0x13ad]        # 0x14000a4b8
   14000910b:	call   rbx
   14000910d:	mov    rcx,QWORD PTR [rip+0x8034]        # 0x140011148
   140009114:	test   rcx,rcx
   140009117:	je     0x140009127
   140009119:	call   QWORD PTR [rip+0xfd1]        # 0x14000a0f0
   14000911f:	and    QWORD PTR [rip+0x8021],0x0        # 0x140011148
   140009127:	and    QWORD PTR [rip+0x8021],0x0        # 0x140011150
   14000912f:	and    QWORD PTR [rip+0x8021],0x0        # 0x140011158
   140009137:	and    QWORD PTR [rip+0x8021],0x0        # 0x140011160
   14000913f:	add    rsp,0x20
   140009143:	pop    rbx
   140009144:	ret    
   140009145:	int3   
   140009146:	int3   
   140009147:	int3   
   140009148:	int3   
   140009149:	int3   
   14000914a:	int3   
   14000914b:	int3   
   14000914c:	int3   
   14000914d:	int3   
   14000914e:	int3   
   14000914f:	int3   
   140009150:	lea    rax,[rip+0x14d9]        # 0x14000a630
   140009157:	lea    rcx,[rip+0x4fe2]        # 0x14000e140
   14000915e:	mov    QWORD PTR [rip+0x4fdb],rax        # 0x14000e140
   140009165:	jmp    0x140008670
   14000916a:	int3   
   14000916b:	int3   
   14000916c:	int3   
   14000916d:	int3   
   14000916e:	int3   
   14000916f:	int3   
   140009170:	lea    rax,[rip+0x14b9]        # 0x14000a630
   140009177:	lea    rcx,[rip+0x4fe2]        # 0x14000e160
   14000917e:	mov    QWORD PTR [rip+0x4fdb],rax        # 0x14000e160
   140009185:	jmp    0x140008670

Disassembly of section .rdata:

000000014000a000 <.rdata>:
   14000a000:	fcom   st(4)
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	call   0x14000a0e1
   14000a00d:	add    BYTE PTR [rax],al
   14000a00f:	add    dl,bh
   14000a011:	(bad)  
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	add    BYTE PTR [rax],al
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	or     ch,dl
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	add    BYTE PTR [rax],al
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	sbb    al,0xd5
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	add    BYTE PTR [rax],al
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	sub    al,0xd5
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	add    BYTE PTR [rax],al
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	cmp    al,0xd5
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	add    BYTE PTR [rax],al
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	rex.WRX (bad) 
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	(bad)  
   14000a041:	(bad)  
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	add    BYTE PTR [rax],al
   14000a046:	add    BYTE PTR [rax],al
   14000a048:	jb     0x14000a01f
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	add    BYTE PTR [rax],al
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	adc    ch,0x0
   14000a053:	add    BYTE PTR [rax],al
   14000a055:	add    BYTE PTR [rax],al
   14000a057:	add    BYTE PTR [rsi-0x23],ah
   14000a05a:	add    BYTE PTR [rax],al
   14000a05c:	add    BYTE PTR [rax],al
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	jp     0x14000a03f
   14000a062:	add    BYTE PTR [rax],al
   14000a064:	add    BYTE PTR [rax],al
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	xchg   esi,eax
   14000a069:	fld    QWORD PTR [rax]
	...
   14000a077:	add    BYTE PTR [rax],ch
   14000a079:	fld    QWORD PTR [rax]
	...
   14000a087:	add    BYTE PTR [rsi+0xd5],ch
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    BYTE PTR [rsi+0xd5],bh
   14000a095:	add    BYTE PTR [rax],al
   14000a097:	add    dh,dl
   14000a099:	(bad)  
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	add    BYTE PTR [rax],al
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	out    dx,al
   14000a0a1:	(bad)  
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	add    BYTE PTR [rax],al
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	(bad)  
   14000a0a9:	fiadd  WORD PTR [rax]
   14000a0ab:	add    BYTE PTR [rax],al
   14000a0ad:	add    BYTE PTR [rax],al
   14000a0af:	add    BYTE PTR [rax],al
   14000a0b1:	fiadd  WORD PTR [rax]
   14000a0b3:	add    BYTE PTR [rax],al
   14000a0b5:	add    BYTE PTR [rax],al
   14000a0b7:	add    dl,ch
   14000a0b9:	fld    QWORD PTR [rax]
   14000a0bb:	add    BYTE PTR [rax],al
   14000a0bd:	add    BYTE PTR [rax],al
   14000a0bf:	add    dh,dl
   14000a0c1:	fld    QWORD PTR [rax]
   14000a0c3:	add    BYTE PTR [rax],al
   14000a0c5:	add    BYTE PTR [rax],al
   14000a0c7:	add    BYTE PTR [rax+0xd5],ah
   14000a0cd:	add    BYTE PTR [rax],al
   14000a0cf:	add    dh,al
   14000a0d1:	fld    QWORD PTR [rax]
   14000a0d3:	add    BYTE PTR [rax],al
   14000a0d5:	add    BYTE PTR [rax],al
   14000a0d7:	add    BYTE PTR [rsi],al
   14000a0d9:	(bad)  
   14000a0da:	add    BYTE PTR [rax],al
   14000a0dc:	add    BYTE PTR [rax],al
   14000a0de:	add    BYTE PTR [rax],al
   14000a0e0:	mov    edx,0xdd
   14000a0e5:	add    BYTE PTR [rax],al
   14000a0e7:	add    BYTE PTR [rbp+rbx*8+0x0],ch
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	sbb    dh,dl
   14000a0f2:	add    BYTE PTR [rax],al
   14000a0f4:	add    BYTE PTR [rax],al
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	es (bad) 
   14000a0fa:	add    BYTE PTR [rax],al
   14000a0fc:	add    BYTE PTR [rax],al
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	cmp    dh,dl
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	add    BYTE PTR [rax],al
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	rex.WR (bad) 
   14000a10a:	add    BYTE PTR [rax],al
   14000a10c:	add    BYTE PTR [rax],al
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	je     0x14000a0e9
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	add    BYTE PTR [rax],al
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	pop    rax
   14000a119:	xlat   BYTE PTR ds:[rbx]
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	add    BYTE PTR [rax],al
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	xor    bh,dl
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	add    BYTE PTR [rax],al
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	or     bh,dl
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	add    BYTE PTR [rax],al
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	cmp    bh,dl
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	add    BYTE PTR [rax],al
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	pop    rax
   14000a139:	(bad)  
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    BYTE PTR [rax],al
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	rex.W xlat BYTE PTR ds:[rbx]
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	add    BYTE PTR [rax],al
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	push   0xffffffffffffffd6
   14000a14a:	add    BYTE PTR [rax],al
   14000a14c:	add    BYTE PTR [rax],al
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	adc    dh,0x0
   14000a153:	add    BYTE PTR [rax],al
   14000a155:	add    BYTE PTR [rax],al
   14000a157:	add    BYTE PTR [rdx+0xd6],dl
   14000a15d:	add    BYTE PTR [rax],al
   14000a15f:	add    ah,bh
   14000a161:	(bad)  
   14000a162:	add    BYTE PTR [rax],al
   14000a164:	add    BYTE PTR [rax],al
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	out    0xd6,al
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	add    BYTE PTR [rax],al
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	movabs ds:0xb4000000000000d6,al
   14000a179:	(bad)  
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	add    BYTE PTR [rax],al
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	retf   0xd6
   14000a183:	add    BYTE PTR [rax],al
   14000a185:	add    BYTE PTR [rax],al
   14000a187:	add    BYTE PTR [rdx],bl
   14000a189:	xlat   BYTE PTR ds:[rbx]
	...
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	mov    edx,0x0
   14000a19d:	add    BYTE PTR [rax],al
   14000a19f:	and    BYTE PTR [rcx+0x0],0x0
   14000a1a6:	add    BYTE PTR [rax+0xa3],al
   14000a1ac:	add    BYTE PTR [rax],al
   14000a1ae:	add    BYTE PTR [rax+0x115],al
   14000a1b4:	add    BYTE PTR [rax],al
   14000a1b6:	add    BYTE PTR [rax+0x7],al
   14000a1bc:	add    BYTE PTR [rax],al
   14000a1be:	add    BYTE PTR [rax+0x2],al
   14000a1c4:	add    BYTE PTR [rax],al
   14000a1c6:	add    BYTE PTR [rax+0x6],al
   14000a1cc:	add    BYTE PTR [rax],al
   14000a1ce:	add    BYTE PTR [rax+0x0],al
   14000a1d4:	add    BYTE PTR [rax],al
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	in     al,0xd7
   14000a1da:	add    BYTE PTR [rax],al
   14000a1dc:	add    BYTE PTR [rax],al
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	adc    al,0xdd
   14000a1e2:	add    BYTE PTR [rax],al
   14000a1e4:	add    BYTE PTR [rax],al
   14000a1e6:	add    BYTE PTR [rax],al
   14000a1e8:	xchg   edx,eax
   14000a1e9:	xlat   BYTE PTR ds:[rbx]
   14000a1ea:	add    BYTE PTR [rax],al
   14000a1ec:	add    BYTE PTR [rax],al
   14000a1ee:	add    BYTE PTR [rax],al
   14000a1f0:	sahf   
   14000a1f1:	xlat   BYTE PTR ds:[rbx]
   14000a1f2:	add    BYTE PTR [rax],al
   14000a1f4:	add    BYTE PTR [rax],al
   14000a1f6:	add    BYTE PTR [rax],al
   14000a1f8:	rcl    bh,1
   14000a1fa:	add    BYTE PTR [rax],al
   14000a1fc:	add    BYTE PTR [rax],al
   14000a1fe:	add    BYTE PTR [rax],al
   14000a200:	ret    0xd7
   14000a203:	add    BYTE PTR [rax],al
   14000a205:	add    BYTE PTR [rax],al
   14000a207:	add    BYTE PTR [rdi+rdx*8+0x0],dh
	...
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	(bad)  
   14000a219:	fild   DWORD PTR [rax]
   14000a21b:	add    BYTE PTR [rax],al
   14000a21d:	add    BYTE PTR [rax],al
   14000a21f:	add    dh,bh
   14000a221:	fiadd  DWORD PTR [rax]
   14000a223:	add    BYTE PTR [rax],al
   14000a225:	add    BYTE PTR [rax],al
   14000a227:	add    BYTE PTR [rbx+rbx*8],ch
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	add    BYTE PTR [rax],al
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	(bad)  
   14000a231:	fiadd  DWORD PTR [rax]
   14000a233:	add    BYTE PTR [rax],al
   14000a235:	add    BYTE PTR [rax],al
   14000a237:	add    al,bl
   14000a239:	fiadd  DWORD PTR [rax]
   14000a23b:	add    BYTE PTR [rax],al
   14000a23d:	add    BYTE PTR [rax],al
   14000a23f:	add    al,al
   14000a241:	fiadd  DWORD PTR [rax]
   14000a243:	add    BYTE PTR [rax],al
   14000a245:	add    BYTE PTR [rax],al
   14000a247:	add    BYTE PTR [rsi-0x26],ah
   14000a24a:	add    BYTE PTR [rax],al
   14000a24c:	add    BYTE PTR [rax],al
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	scas   al,BYTE PTR es:[rdi]
   14000a251:	fiadd  DWORD PTR [rax]
   14000a253:	add    BYTE PTR [rax],al
   14000a255:	add    BYTE PTR [rax],al
   14000a257:	add    BYTE PTR [rsi-0x26],dh
   14000a25a:	add    BYTE PTR [rax],al
   14000a25c:	add    BYTE PTR [rax],al
   14000a25e:	add    BYTE PTR [rax],al
   14000a260:	pushf  
   14000a261:	fiadd  DWORD PTR [rax]
   14000a263:	add    BYTE PTR [rax],al
   14000a265:	add    BYTE PTR [rax],al
   14000a267:	add    BYTE PTR [rdx+0xda],cl
	...
   14000a275:	add    BYTE PTR [rax],al
   14000a277:	add    BYTE PTR [rdx],dl
   14000a279:	fadd   QWORD PTR [rax]
	...
   14000a287:	add    BYTE PTR [rdx-0x25],dh
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	add    BYTE PTR [rax],al
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	push   rsi
   14000a291:	fild   DWORD PTR [rax]
	...
   14000a29f:	add    dl,dl
   14000a2a1:	fild   DWORD PTR [rax]
   14000a2a3:	add    BYTE PTR [rax],al
   14000a2a5:	add    BYTE PTR [rax],al
   14000a2a7:	add    BYTE PTR [rbx+rbx*8+0x0],al
   14000a2ab:	add    BYTE PTR [rax],al
   14000a2ad:	add    BYTE PTR [rax],al
   14000a2af:	add    BYTE PTR [rax+0xdb],dl
   14000a2b5:	add    BYTE PTR [rax],al
   14000a2b7:	add    BYTE PTR [rbx+rbx*8+0x0],ah
	...
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	mov    eax,0xdb
	...
   14000a2d5:	add    BYTE PTR [rax],al
   14000a2d7:	add    al,ch
   14000a2d9:	fild   DWORD PTR [rax]
   14000a2db:	add    BYTE PTR [rax],al
   14000a2dd:	add    BYTE PTR [rax],al
   14000a2df:	add    BYTE PTR [rdx],al
   14000a2e1:	fadd   QWORD PTR [rax]
	...
   14000a2ef:	add    BYTE PTR [rdx],bl
   14000a2f1:	fadd   DWORD PTR [rax]
   14000a2f3:	add    BYTE PTR [rax],al
   14000a2f5:	add    BYTE PTR [rax],al
   14000a2f7:	add    BYTE PTR [rdx],ah
   14000a2f9:	fadd   DWORD PTR [rax]
   14000a2fb:	add    BYTE PTR [rax],al
   14000a2fd:	add    BYTE PTR [rax],al
   14000a2ff:	add    BYTE PTR [rax],dl
   14000a301:	fiadd  DWORD PTR [rax]
   14000a303:	add    BYTE PTR [rax],al
   14000a305:	add    BYTE PTR [rax],al
   14000a307:	add    BYTE PTR [rdx],al
   14000a309:	fiadd  DWORD PTR [rax]
   14000a30b:	add    BYTE PTR [rax],al
   14000a30d:	add    BYTE PTR [rax],al
   14000a30f:	add    al,bh
   14000a311:	fld    DWORD PTR [rax]
   14000a313:	add    BYTE PTR [rax],al
   14000a315:	add    BYTE PTR [rax],al
   14000a317:	add    al,dh
   14000a319:	fld    DWORD PTR [rax]
   14000a31b:	add    BYTE PTR [rax],al
   14000a31d:	add    BYTE PTR [rax],al
   14000a31f:	add    dh,ah
   14000a321:	fld    DWORD PTR [rax]
   14000a323:	add    BYTE PTR [rax],al
   14000a325:	add    BYTE PTR [rax],al
   14000a327:	add    ah,bl
   14000a329:	fld    DWORD PTR [rax]
   14000a32b:	add    BYTE PTR [rax],al
   14000a32d:	add    BYTE PTR [rax],al
   14000a32f:	add    BYTE PTR [rax+0xd9],bh
   14000a335:	add    BYTE PTR [rax],al
   14000a337:	add    BYTE PTR [rcx+rbx*8+0x0],ah
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	cwde   
   14000a341:	fld    DWORD PTR [rax]
   14000a343:	add    BYTE PTR [rax],al
   14000a345:	add    BYTE PTR [rax],al
   14000a347:	add    BYTE PTR [rax],dl
   14000a349:	fadd   DWORD PTR [rax]
   14000a34b:	add    BYTE PTR [rax],al
   14000a34d:	add    BYTE PTR [rax],al
   14000a34f:	add    BYTE PTR [rcx+rbx*8+0x0],al
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	ins    BYTE PTR es:[rdi],dx
   14000a359:	fld    DWORD PTR [rax]
   14000a35b:	add    BYTE PTR [rax],al
   14000a35d:	add    BYTE PTR [rax],al
   14000a35f:	add    BYTE PTR [rax-0x27],ah
   14000a362:	add    BYTE PTR [rax],al
   14000a364:	add    BYTE PTR [rax],al
   14000a366:	add    BYTE PTR [rax],al
   14000a368:	rex.WR fld DWORD PTR [rax]
   14000a36b:	add    BYTE PTR [rax],al
   14000a36d:	add    BYTE PTR [rax],al
   14000a36f:	add    BYTE PTR [rdx-0x27],al
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	add    BYTE PTR [rax],al
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	cmp    bl,cl
   14000a37a:	add    BYTE PTR [rax],al
   14000a37c:	add    BYTE PTR [rax],al
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	xor    bl,cl
   14000a382:	add    BYTE PTR [rax],al
   14000a384:	add    BYTE PTR [rax],al
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	and    cl,bl
   14000a38a:	add    BYTE PTR [rax],al
   14000a38c:	add    BYTE PTR [rax],al
   14000a38e:	add    BYTE PTR [rax],al
   14000a390:	(bad)  
   14000a391:	fld    DWORD PTR [rax]
   14000a393:	add    BYTE PTR [rax],al
   14000a395:	add    BYTE PTR [rax],al
   14000a397:	add    BYTE PTR [rax],al
   14000a399:	fld    DWORD PTR [rax]
   14000a39b:	add    BYTE PTR [rax],al
   14000a39d:	add    BYTE PTR [rax],al
   14000a39f:	add    dl,dh
   14000a3a1:	fadd   DWORD PTR [rax]
   14000a3a3:	add    BYTE PTR [rax],al
   14000a3a5:	add    BYTE PTR [rax],al
   14000a3a7:	add    ah,bl
   14000a3a9:	fadd   DWORD PTR [rax]
   14000a3ab:	add    BYTE PTR [rax],al
   14000a3ad:	add    BYTE PTR [rax],al
   14000a3af:	add    al,dl
   14000a3b1:	fadd   DWORD PTR [rax]
   14000a3b3:	add    BYTE PTR [rax],al
   14000a3b5:	add    BYTE PTR [rax],al
   14000a3b7:	add    BYTE PTR [rdx+0xd8],dh
   14000a3bd:	add    BYTE PTR [rax],al
   14000a3bf:	add    BYTE PTR [rdx+0xd8],bl
   14000a3c5:	add    BYTE PTR [rax],al
   14000a3c7:	add    BYTE PTR [rax+rbx*8+0x0],bh
   14000a3cb:	add    BYTE PTR [rax],al
   14000a3cd:	add    BYTE PTR [rax],al
   14000a3cf:	add    BYTE PTR [rax+rbx*8+0x0],bl
   14000a3d3:	add    BYTE PTR [rax],al
   14000a3d5:	add    BYTE PTR [rax],al
   14000a3d7:	add    BYTE PTR [rdx],dh
   14000a3d9:	fiadd  WORD PTR [rax]
   14000a3db:	add    BYTE PTR [rax],al
   14000a3dd:	add    BYTE PTR [rax],al
   14000a3df:	add    BYTE PTR [rsi],ch
   14000a3e1:	fadd   DWORD PTR [rax]
   14000a3e3:	add    BYTE PTR [rax],al
   14000a3e5:	add    BYTE PTR [rax],al
   14000a3e7:	add    BYTE PTR [rdx],bh
   14000a3e9:	fadd   DWORD PTR [rax]
   14000a3eb:	add    BYTE PTR [rax],al
   14000a3ed:	add    BYTE PTR [rax],al
   14000a3ef:	add    BYTE PTR [rax+rbx*8],al
   14000a3f2:	add    BYTE PTR [rax],al
   14000a3f4:	add    BYTE PTR [rax],al
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	mov    ds,ecx
   14000a3fa:	add    BYTE PTR [rax],al
   14000a3fc:	add    BYTE PTR [rax],al
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	rex.RX fadd DWORD PTR [rax]
   14000a403:	add    BYTE PTR [rax],al
   14000a405:	add    BYTE PTR [rax],al
   14000a407:	add    BYTE PTR [rdx-0x28],dl
   14000a40a:	add    BYTE PTR [rax],al
   14000a40c:	add    BYTE PTR [rax],al
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	rcr    bh,1
	...
   14000a41e:	add    BYTE PTR [rax],al
   14000a420:	cmp    al,0xdf
   14000a422:	add    BYTE PTR [rax],al
   14000a424:	add    BYTE PTR [rax],al
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	rex.WX fild WORD PTR [rax]
   14000a42b:	add    BYTE PTR [rax],al
   14000a42d:	add    BYTE PTR [rax],al
   14000a42f:	add    BYTE PTR [rdx-0x21],ah
   14000a432:	add    BYTE PTR [rax],al
   14000a434:	add    BYTE PTR [rax],al
   14000a436:	add    BYTE PTR [rax],al
   14000a438:	sbb    bh,0x0
   14000a43b:	add    BYTE PTR [rax],al
   14000a43d:	add    BYTE PTR [rax],al
   14000a43f:	add    BYTE PTR [rsi+0xdf],dl
   14000a445:	add    BYTE PTR [rax],al
   14000a447:	add    BYTE PTR [rdx+0xdf],dh
   14000a44d:	add    BYTE PTR [rax],al
   14000a44f:	add    BYTE PTR [rdi+rbx*8],al
   14000a452:	add    BYTE PTR [rax],al
   14000a454:	add    BYTE PTR [rax],al
   14000a456:	add    BYTE PTR [rax],al
   14000a458:	call   0x14000a53b
   14000a45d:	add    BYTE PTR [rax],al
   14000a45f:	add    ah,cl
   14000a461:	fiadd  WORD PTR [rax]
   14000a463:	add    BYTE PTR [rax],al
   14000a465:	add    BYTE PTR [rax],al
   14000a467:	add    BYTE PTR [rsi+rbx*8+0x0],ch
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	cwde   
   14000a471:	fiadd  WORD PTR [rax]
   14000a473:	add    BYTE PTR [rax],al
   14000a475:	add    BYTE PTR [rax],al
   14000a477:	add    BYTE PTR [rax-0x22],bh
   14000a47a:	add    BYTE PTR [rax],al
   14000a47c:	add    BYTE PTR [rax],al
   14000a47e:	add    BYTE PTR [rax],al
   14000a480:	rex.W fiadd DWORD PTR [rax]
   14000a483:	add    BYTE PTR [rax],al
   14000a485:	add    BYTE PTR [rax],al
   14000a487:	add    BYTE PTR [rsi],ch
   14000a489:	fiadd  DWORD PTR [rax]
   14000a48b:	add    BYTE PTR [rax],al
   14000a48d:	add    BYTE PTR [rax],al
   14000a48f:	add    BYTE PTR [rax-0x22],bl
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	add    BYTE PTR [rax],al
   14000a496:	add    BYTE PTR [rax],al
   14000a498:	rex fiadd WORD PTR [rax]
   14000a49b:	add    BYTE PTR [rax],al
   14000a49d:	add    BYTE PTR [rax],al
   14000a49f:	add    BYTE PTR [rdx],bl
   14000a4a1:	fiadd  DWORD PTR [rax]
   14000a4a3:	add    BYTE PTR [rax],al
   14000a4a5:	add    BYTE PTR [rax],al
   14000a4a7:	add    BYTE PTR [rdi+rbx*8],ah
	...
   14000a4b6:	add    BYTE PTR [rax],al
   14000a4b8:	push   rax
   14000a4b9:	xor    BYTE PTR [rax],al
   14000a4bb:	rex add DWORD PTR [rax],eax
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	add    BYTE PTR [rax+rax*1+0x140],cl
	...
   14000a4cf:	add    al,dh
   14000a4d1:	jle    0x14000a4d3
   14000a4d3:	rex add DWORD PTR [rax],eax
   14000a4d6:	add    BYTE PTR [rax],al
   14000a4d8:	push   rax
   14000a4d9:	adc    DWORD PTR [rax],eax
   14000a4db:	rex add DWORD PTR [rax],eax
   14000a4de:	add    BYTE PTR [rax],al
   14000a4e0:	lock adc DWORD PTR [rax],eax
   14000a4e3:	rex add DWORD PTR [rax],eax
   14000a4e6:	add    BYTE PTR [rax],al
   14000a4e8:	(bad)  
   14000a4e9:	adc    al,BYTE PTR [rax]
   14000a4eb:	rex add DWORD PTR [rax],eax
   14000a4ee:	add    BYTE PTR [rax],al
   14000a4f0:	add    BYTE PTR [rax],dl
   14000a4f2:	add    BYTE PTR [rax+0x1],al
   14000a4f5:	add    BYTE PTR [rax],al
   14000a4f7:	add    al,ah
   14000a4f9:	adc    al,BYTE PTR [rax]
   14000a4fb:	rex add DWORD PTR [rax],eax
	...
   14000a50e:	add    BYTE PTR [rax],al
   14000a510:	adc    BYTE PTR [rsi+0x0],bh
   14000a513:	rex add DWORD PTR [rax],eax
   14000a516:	add    BYTE PTR [rax],al
   14000a518:	lock xchg BYTE PTR [rax],al
   14000a51b:	rex add DWORD PTR [rax],eax
	...
   14000a526:	add    BYTE PTR [rax],al
   14000a528:	add    BYTE PTR [rax],dl
   14000a52a:	add    BYTE PTR [rax],al
   14000a52c:	push   rax
   14000a52d:	adc    DWORD PTR [rax],eax
   14000a52f:	add    al,dh
   14000a531:	adc    DWORD PTR [rax],eax
   14000a533:	add    BYTE PTR [rax+0x12],ah
   14000a536:	add    BYTE PTR [rax],al
   14000a538:	loopne 0x14000a54c
   14000a53a:	add    BYTE PTR [rax],al
   14000a53c:	add    BYTE PTR [rbx],dl
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	nop
   14000a541:	adc    al,0x0
   14000a543:	add    BYTE PTR [rax-0x3fffffec],dh
   14000a549:	adc    al,0x0
   14000a54b:	add    BYTE PTR [rax],al
   14000a54d:	(bad)  
   14000a54e:	add    BYTE PTR [rax],al
   14000a550:	push   rax
   14000a551:	sbb    BYTE PTR [rax],al
   14000a553:	add    BYTE PTR [rax-0x2fffffe8],al
   14000a559:	sbb    BYTE PTR [rax],al
   14000a55b:	add    BYTE PTR [rax],al
   14000a55d:	(bad)  
   14000a55e:	add    BYTE PTR [rax],al
   14000a560:	and    BYTE PTR [rsi],bl
   14000a562:	add    BYTE PTR [rax],al
   14000a564:	sbb    BYTE PTR [rsi],0x0
   14000a567:	add    BYTE PTR [rax+0x20],dh
   14000a56a:	add    BYTE PTR [rax],al
   14000a56c:	adc    BYTE PTR [rcx],ah
   14000a56e:	add    BYTE PTR [rax],al
   14000a570:	xor    BYTE PTR [rcx],ah
   14000a572:	add    BYTE PTR [rax],al
   14000a574:	nop
   14000a575:	and    DWORD PTR [rax],eax
   14000a577:	add    BYTE PTR [rax],al
   14000a579:	and    al,BYTE PTR [rax]
   14000a57b:	add    BYTE PTR [rax+0x30000022],dl
   14000a581:	sub    eax,0x2dc00000
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	xor    BYTE PTR [rax],dh
   14000a58a:	add    BYTE PTR [rax],al
   14000a58c:	push   rax
   14000a58d:	xor    BYTE PTR [rax],al
   14000a58f:	add    BYTE PTR [rax-0x3fffffcf],ah
   14000a595:	xor    DWORD PTR [rax],eax
   14000a597:	add    al,dl
   14000a599:	xor    DWORD PTR [rax],eax
   14000a59b:	add    BYTE PTR [rax+0x33],dl
   14000a59e:	add    BYTE PTR [rax],al
   14000a5a0:	and    BYTE PTR [rdi],dh
   14000a5a2:	add    BYTE PTR [rax],al
   14000a5a4:	(bad)  
   14000a5a5:	(bad)  
   14000a5a6:	add    BYTE PTR [rax],al
   14000a5a8:	and    BYTE PTR [rbp+0x0],ah
   14000a5ab:	add    BYTE PTR [rax-0x6fffff99],ah
   14000a5b1:	push   0x69f00000
   14000a5b6:	add    BYTE PTR [rax],al
   14000a5b8:	movabs al,ds:0x7000006b7000006a
   14000a5c1:	ins    BYTE PTR es:[rdi],dx
   14000a5c2:	add    BYTE PTR [rax],al
   14000a5c4:	loopne 0x14000a632
   14000a5c6:	add    BYTE PTR [rax],al
   14000a5c8:	sub    BYTE PTR [rbp+0x0],0x0
   14000a5cc:	movabs al,ds:0x7000006de000006d
   14000a5d5:	outs   dx,BYTE PTR ds:[rsi]
   14000a5d6:	add    BYTE PTR [rax],al
   14000a5d8:	sub    BYTE PTR [rsi+0x0],0x0
   14000a5dc:	movabs al,ds:0x6000007d20000079
   14000a5e5:	jge    0x14000a5e7
   14000a5e7:	add    BYTE PTR [rax],dl
   14000a5e9:	jle    0x14000a5eb
   14000a5eb:	add    al,dh
   14000a5ed:	jle    0x14000a5ef
   14000a5ef:	add    al,al
   14000a5f1:	add    DWORD PTR [rax],0x822000
   14000a5f7:	add    BYTE PTR [rax-0x7e],ah
   14000a5fa:	add    BYTE PTR [rax],al
   14000a5fc:	add    BYTE PTR [rbx-0x79c00000],al
   14000a602:	add    BYTE PTR [rax],al
   14000a604:	add    BYTE PTR [rsi-0x79500000],0x0
   14000a60b:	add    al,dh
   14000a60d:	xchg   BYTE PTR [rax],al
   14000a60f:	add    BYTE PTR [rax],ah
   14000a611:	pop    QWORD PTR [rax]
   14000a613:	add    BYTE PTR [rax-0xfffff71],ah
   14000a619:	pop    QWORD PTR [rax]
   14000a61b:	add    al,ah
   14000a61d:	nop
   14000a61e:	add    BYTE PTR [rax],al
   14000a620:	lock nop
   14000a622:	add    BYTE PTR [rax],al
   14000a624:	push   rax
   14000a625:	xchg   ecx,eax
   14000a626:	add    BYTE PTR [rax],al
   14000a628:	jo     0x14000a5bb
   14000a62a:	add    BYTE PTR [rax],al
   14000a62c:	add    BYTE PTR [rax],al
   14000a62e:	add    BYTE PTR [rax],al
   14000a630:	and    BYTE PTR [rbp+0x0],bh
   14000a633:	rex add DWORD PTR [rax],eax
   14000a636:	add    BYTE PTR [rax],al
   14000a638:	add    BYTE PTR [rsi+0x14000],0x0
   14000a63f:	add    BYTE PTR [rax+0x7d],ah
   14000a642:	add    BYTE PTR [rax+0x1],al
   14000a645:	add    BYTE PTR [rax],al
   14000a647:	add    BYTE PTR [rax],ah
   14000a649:	(bad)  
   14000a64a:	add    BYTE PTR [rax+0x1],al
   14000a64d:	add    BYTE PTR [rax],al
   14000a64f:	add    BYTE PTR [rax+0x14000e1],dh
   14000a655:	add    BYTE PTR [rax],al
   14000a657:	add    BYTE PTR [rax-0x1e],dl
   14000a65a:	add    BYTE PTR [rax+0x1],al
   14000a65d:	add    BYTE PTR [rax],al
   14000a65f:	add    BYTE PTR [rcx+0x6e],cl
   14000a662:	jbe    0x14000a6c5
   14000a664:	ins    BYTE PTR es:[rdi],dx
   14000a665:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x6d617261
   14000a66d:	gs je  0x14000a6d5
   14000a670:	jb     0x14000a692
   14000a672:	jo     0x14000a6d5
   14000a674:	jae    0x14000a6e9
   14000a676:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14000a67c:	rex.XB and BYTE PTR [r10+0x75],sil
   14000a680:	outs   dx,BYTE PTR ds:[rsi]
   14000a681:	je     0x14000a6ec
   14000a683:	ins    DWORD PTR es:[rdi],dx
   14000a684:	and    BYTE PTR gs:[rsi+0x75],ah
   14000a688:	outs   dx,BYTE PTR ds:[rsi]
   14000a689:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000a68d:	outs   dx,BYTE PTR ds:[rsi]
   14000a68e:	or     al,BYTE PTR cs:[rax]
   14000a691:	add    BYTE PTR [rax],al
   14000a693:	add    BYTE PTR [rax],al
   14000a695:	add    BYTE PTR [rax],al
   14000a697:	add    BYTE PTR [rbx+0x0],al
   14000a69a:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000a69e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000a6a3:	add    BYTE PTR [rax],al
   14000a6a5:	add    BYTE PTR [rax],al
   14000a6a7:	add    BYTE PTR [rcx+0x0],al
   14000a6aa:	jo     0x14000a6ac
   14000a6ac:	jo     0x14000a6ae
   14000a6ae:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000a6b3:	add    BYTE PTR [rbx+0x0],dl
   14000a6b6:	add    BYTE PTR [rax],al
   14000a6b8:	rex.WRB add BYTE PTR [r8],r8b
   14000a6bb:	add    BYTE PTR [rax+rax*1+0x0],al
   14000a6bf:	add    BYTE PTR [rdx+0x0],al
   14000a6c2:	add    BYTE PTR [rax],al
   14000a6c4:	add    BYTE PTR [rax],al
   14000a6c6:	add    BYTE PTR [rax],al
   14000a6c8:	push   rsi
   14000a6c9:	add    BYTE PTR [rcx+0x0],ah
   14000a6cc:	ins    BYTE PTR es:[rdi],dx
   14000a6cd:	add    BYTE PTR [rax],al
   14000a6cf:	add    BYTE PTR [rsi+0x0],al
   14000a6d2:	outs   dx,DWORD PTR ds:[rsi]
   14000a6d3:	add    BYTE PTR [rdx+0x0],dh
   14000a6d6:	movsxd eax,DWORD PTR [rax]
   14000a6d8:	add    BYTE PTR gs:[rdx+0x0],dl
   14000a6dc:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a6e0:	outs   dx,DWORD PTR ds:[rsi]
   14000a6e1:	add    BYTE PTR [rsi+0x0],dh
   14000a6e4:	add    BYTE PTR gs:[rax],al
   14000a6e7:	add    BYTE PTR [rsi+0x0],cl
   14000a6ea:	outs   dx,DWORD PTR ds:[rsi]
   14000a6eb:	add    BYTE PTR [rdx+0x0],dl
   14000a6ee:	add    BYTE PTR gs:[rbp+0x0],ch
   14000a6f2:	outs   dx,DWORD PTR ds:[rsi]
   14000a6f3:	add    BYTE PTR [rsi+0x0],dh
   14000a6f6:	add    BYTE PTR gs:[rax],al
   14000a6f9:	add    BYTE PTR [rax],al
   14000a6fb:	add    BYTE PTR [rax],al
   14000a6fd:	add    BYTE PTR [rax],al
   14000a6ff:	add    BYTE PTR [rax+rax*1+0x65],al
   14000a703:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000a707:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a70b:	add    BYTE PTR [rax],al
   14000a70d:	add    BYTE PTR [rax],al
   14000a70f:	add    BYTE PTR [rbx+0x0],al
   14000a712:	outs   dx,DWORD PTR ds:[rsi]
   14000a713:	add    BYTE PTR [rbp+0x0],ch
   14000a716:	jo     0x14000a718
   14000a718:	outs   dx,DWORD PTR ds:[rsi]
   14000a719:	add    BYTE PTR [rsi+0x0],ch
   14000a71c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000a720:	je     0x14000a722
   14000a722:	and    BYTE PTR [rax],al
   14000a724:	rex.XB add BYTE PTR [r9+0x0],spl
   14000a728:	je     0x14000a72a
   14000a72a:	add    BYTE PTR gs:[rdi+0x0],ah
   14000a72e:	outs   dx,DWORD PTR ds:[rsi]
   14000a72f:	add    BYTE PTR [rdx+0x0],dh
   14000a732:	imul   eax,DWORD PTR [rax],0x730065
	...
   14000a740:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000a744:	ins    BYTE PTR es:[rdi],dx
   14000a745:	add    BYTE PTR [rbp+0x0],ah
   14000a748:	push   rsp
   14000a749:	add    BYTE PTR [rcx+0x0],bh
   14000a74c:	jo     0x14000a74e
   14000a74e:	add    BYTE PTR gs:[rax],al
   14000a751:	add    BYTE PTR [rax],al
   14000a753:	add    BYTE PTR [rax],al
   14000a755:	add    BYTE PTR [rax],al
   14000a757:	add    BYTE PTR [rcx+0x0],cl
   14000a75a:	outs   dx,BYTE PTR ds:[rsi]
   14000a75b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a75f:	add    BYTE PTR [rdx+0x0],dh
   14000a762:	data16 add BYTE PTR [rcx+0x0],ah
   14000a766:	movsxd eax,DWORD PTR [rax]
   14000a768:	add    BYTE PTR gs:[rax],al
   14000a76b:	add    BYTE PTR [rax],al
   14000a76d:	add    BYTE PTR [rax],al
   14000a76f:	add    BYTE PTR [rax+0x0],cl
   14000a772:	(bad)  
   14000a773:	add    BYTE PTR [rdx+0x0],dh
   14000a776:	add    BYTE PTR fs:[rdi+0x0],dh
   14000a77a:	(bad)  
   14000a77b:	add    BYTE PTR [rdx+0x0],dh
   14000a77e:	add    BYTE PTR gs:[rax],al
   14000a781:	add    BYTE PTR [rax],al
   14000a783:	add    BYTE PTR [rax],al
   14000a785:	add    BYTE PTR [rax],al
   14000a787:	add    BYTE PTR [rbp+0x0],cl
   14000a78a:	imul   eax,DWORD PTR [rax],0x65006d
	...
   14000a798:	push   rbx
   14000a799:	add    BYTE PTR [rcx+0x0],al
   14000a79c:	rex.WRB add BYTE PTR [r8],r8b
   14000a79f:	add    BYTE PTR [rbx+0x0],dl
   14000a7a2:	add    BYTE PTR [r11+0x0],r8b
   14000a7a6:	push   rbp
   14000a7a7:	add    BYTE PTR [rdx+0x0],dl
   14000a7aa:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   14000a7b7:	add    BYTE PTR [rbx+0x0],dl
   14000a7ba:	pop    rcx
   14000a7bb:	add    BYTE PTR [rbx+0x0],dl
   14000a7be:	push   rsp
   14000a7bf:	add    BYTE PTR [rbp+0x0],al
   14000a7c2:	rex.WRB add BYTE PTR [r8],r8b
   14000a7c5:	add    BYTE PTR [rax],al
   14000a7c7:	add    BYTE PTR [rbx+0x0],dl
   14000a7ca:	outs   dx,DWORD PTR ds:[rsi]
   14000a7cb:	add    BYTE PTR [rsi+0x0],ah
   14000a7ce:	je     0x14000a7d0
   14000a7d0:	ja     0x14000a7d2
   14000a7d2:	(bad)  
   14000a7d3:	add    BYTE PTR [rdx+0x0],dh
   14000a7d6:	add    BYTE PTR gs:[rax],al
   14000a7d9:	add    BYTE PTR [rax],al
   14000a7db:	add    BYTE PTR [rax],al
   14000a7dd:	add    BYTE PTR [rax],al
   14000a7df:	add    BYTE PTR [rax+rax*1+0x79],dl
   14000a7e3:	add    BYTE PTR [rax+0x0],dh
   14000a7e6:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   14000a7eb:	add    BYTE PTR [rdx+0x0],ah
   14000a7ee:	add    BYTE PTR [rax],al
   14000a7f0:	and    eax,DWORD PTR [rbx]
   14000a7f2:	add    BYTE PTR [rax],al
   14000a7f4:	add    BYTE PTR [rax],al
   14000a7f6:	add    BYTE PTR [rax],al
   14000a7f8:	rol    BYTE PTR [rax],0x0
   14000a7fb:	add    BYTE PTR [rax],al
   14000a7fd:	add    BYTE PTR [rax],al
   14000a7ff:	rex.RX test al,0xa6
   14000a802:	add    BYTE PTR [rax+0x1],al
   14000a805:	add    BYTE PTR [rax],al
   14000a807:	add    BYTE PTR [rax+0x14000a6],bl
   14000a80d:	add    BYTE PTR [rax],al
   14000a80f:	add    BYTE PTR [rax],dl
   14000a811:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a812:	add    BYTE PTR [rax+0x1],al
   14000a815:	add    BYTE PTR [rax],al
   14000a817:	add    BYTE PTR [rax-0x59],al
   14000a81a:	add    BYTE PTR [rax+0x1],al
   14000a81d:	add    BYTE PTR [rax],al
   14000a81f:	add    BYTE PTR [rax-0x59],bl
   14000a822:	add    BYTE PTR [rax+0x1],al
   14000a825:	add    BYTE PTR [rax],al
   14000a827:	add    BYTE PTR [rax-0x59],dh
   14000a82a:	add    BYTE PTR [rax+0x1],al
   14000a82d:	add    BYTE PTR [rax],al
   14000a82f:	add    BYTE PTR [rax+0x14000a7],cl
   14000a835:	add    BYTE PTR [rax],al
   14000a837:	add    BYTE PTR [rax+0x14000a7],bl
   14000a83d:	add    BYTE PTR [rax],al
   14000a83f:	add    BYTE PTR [rax+0x14000a7],ah
   14000a845:	add    BYTE PTR [rax],al
   14000a847:	add    BYTE PTR [rax+0x14000a7],bh
   14000a84d:	add    BYTE PTR [rax],al
   14000a84f:	add    al,cl
   14000a851:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a852:	add    BYTE PTR [rax+0x1],al
   14000a855:	add    BYTE PTR [rax],al
   14000a857:	add    al,ah
   14000a859:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a85a:	add    BYTE PTR [rax+0x1],al
   14000a85d:	add    BYTE PTR [rax],al
   14000a85f:	add    BYTE PTR [rax],dl
   14000a861:	and    DWORD PTR [rax],eax
   14000a863:	rex add DWORD PTR [rax],eax
   14000a866:	add    BYTE PTR [rax],al
   14000a868:	add    BYTE PTR [rsi],bl
   14000a86a:	add    BYTE PTR [rax+0x1],al
   14000a86d:	add    BYTE PTR [rax],al
   14000a86f:	add    BYTE PTR [rax+0x20],dh
   14000a872:	add    BYTE PTR [rax+0x1],al
   14000a875:	add    BYTE PTR [rax],al
   14000a877:	add    BYTE PTR [rax+0x1400014],dh
   14000a87d:	add    BYTE PTR [rax],al
   14000a87f:	add    BYTE PTR [rax+0x60],ah
   14000a882:	add    BYTE PTR [rax+0x1],al
   14000a885:	add    BYTE PTR [rax],al
   14000a887:	add    BYTE PTR [rax+0x1400014],dh
   14000a88d:	add    BYTE PTR [rax],al
   14000a88f:	add    BYTE PTR [rax+0x1400014],dh
   14000a895:	add    BYTE PTR [rax],al
   14000a897:	add    BYTE PTR [rax+0x1400014],dh
   14000a89d:	add    BYTE PTR [rax],al
   14000a89f:	add    BYTE PTR [rax+0x1400014],dh
   14000a8a5:	add    BYTE PTR [rax],al
   14000a8a7:	add    BYTE PTR [rax],dh
   14000a8a9:	and    DWORD PTR [rax],eax
   14000a8ab:	rex add DWORD PTR [rax],eax
   14000a8ae:	add    BYTE PTR [rax],al
   14000a8b0:	sbb    BYTE PTR [rsi],0x0
   14000a8b3:	rex add DWORD PTR [rax],eax
   14000a8b6:	add    BYTE PTR [rax],al
   14000a8b8:	add    BYTE PTR [rsi],bl
   14000a8ba:	add    BYTE PTR [rax+0x1],al
   14000a8bd:	add    BYTE PTR [rax],al
   14000a8bf:	add    BYTE PTR [rax],ah
   14000a8c1:	(bad)  
   14000a8c2:	add    BYTE PTR [rax+0x1],al
   14000a8c5:	add    BYTE PTR [rax],al
   14000a8c7:	add    BYTE PTR [rax],dh
   14000a8c9:	sub    eax,0x14000
   14000a8ce:	add    BYTE PTR [rax],al
   14000a8d0:	shr    BYTE PTR [rip+0x14000],0x0        # 0x14001e8d7
   14000a8d7:	add    BYTE PTR [rax-0x7a],al
   14000a8da:	add    BYTE PTR [rax+0x1],al
   14000a8dd:	add    BYTE PTR [rax],al
   14000a8df:	add    BYTE PTR [rax-0x7a],al
   14000a8e2:	add    BYTE PTR [rax+0x1],al
   14000a8e5:	add    BYTE PTR [rax],al
   14000a8e7:	add    BYTE PTR [rax-0x7a],al
   14000a8ea:	add    BYTE PTR [rax+0x1],al
   14000a8ed:	add    BYTE PTR [rax],al
   14000a8ef:	add    BYTE PTR [rax],dh
   14000a8f1:	sub    eax,0x14000
   14000a8f6:	add    BYTE PTR [rax],al
   14000a8f8:	shr    BYTE PTR [rip+0x14000],0x0        # 0x14001e8ff
   14000a8ff:	add    al,al
   14000a901:	adc    al,0x0
   14000a903:	rex add DWORD PTR [rax],eax
   14000a906:	add    BYTE PTR [rax],al
   14000a908:	xor    BYTE PTR [rax],dh
   14000a90a:	add    BYTE PTR [rax+0x1],al
   14000a90d:	add    BYTE PTR [rax],al
   14000a90f:	add    BYTE PTR [rax+0x1400018],al
   14000a915:	add    BYTE PTR [rax],al
   14000a917:	add    BYTE PTR [rax+0x1400022],dl
   14000a91d:	add    BYTE PTR [rax],al
   14000a91f:	add    BYTE PTR [rax],al
   14000a921:	and    al,BYTE PTR [rax]
   14000a923:	rex add DWORD PTR [rax],eax
   14000a926:	add    BYTE PTR [rax],al
   14000a928:	rcr    BYTE PTR [rax],1
   14000a92a:	add    BYTE PTR [rax+0x1],al
   14000a92d:	add    BYTE PTR [rax],al
   14000a92f:	add    BYTE PTR [rax+0x1400031],ah
   14000a935:	add    BYTE PTR [rax],al
   14000a937:	add    al,al
   14000a939:	xor    DWORD PTR [rax],eax
   14000a93b:	rex add DWORD PTR [rax],eax
   14000a93e:	add    BYTE PTR [rax],al
   14000a940:	mov    al,0x14
   14000a942:	add    BYTE PTR [rax+0x1],al
   14000a945:	add    BYTE PTR [rax],al
   14000a947:	add    BYTE PTR [rax],ah
   14000a949:	(bad)  
   14000a94a:	add    BYTE PTR [rax+0x1],al
   14000a94d:	add    BYTE PTR [rax],al
   14000a94f:	add    BYTE PTR [rax+0x33],dl
   14000a952:	add    BYTE PTR [rax+0x1],al
   14000a955:	add    BYTE PTR [rax],al
   14000a957:	add    al,dl
   14000a959:	xor    DWORD PTR [rax],eax
   14000a95b:	rex add DWORD PTR [rax],eax
   14000a95e:	add    BYTE PTR [rax],al
   14000a960:	jo     0x14000a9cd
   14000a962:	add    BYTE PTR [rax+0x1],al
   14000a965:	add    BYTE PTR [rax],al
   14000a967:	add    BYTE PTR [rax+0x6c],dh
   14000a96a:	add    BYTE PTR [rax+0x1],al
   14000a96d:	add    BYTE PTR [rax],al
   14000a96f:	add    al,ah
   14000a971:	ins    BYTE PTR es:[rdi],dx
   14000a972:	add    BYTE PTR [rax+0x1],al
   14000a975:	add    BYTE PTR [rax],al
   14000a977:	add    al,dh
   14000a979:	imul   eax,DWORD PTR [rax],0x140
   14000a97f:	add    BYTE PTR [rax+0x140006a],ah
   14000a985:	add    BYTE PTR [rax],al
   14000a987:	add    BYTE PTR [rax+0x1400068],dl
   14000a98d:	add    BYTE PTR [rax],al
   14000a98f:	add    BYTE PTR [rax],ah
   14000a991:	add    BYTE PTR gs:[rax+0x1],al
   14000a995:	add    BYTE PTR [rax],al
   14000a997:	add    BYTE PTR [rax+0x1400067],ah
   14000a99d:	add    BYTE PTR [rax],al
   14000a99f:	add    BYTE PTR [rax+0x140006d],al
   14000a9a5:	add    BYTE PTR [rax],al
   14000a9a7:	add    BYTE PTR [rax+0x6c],dh
   14000a9aa:	add    BYTE PTR [rax+0x1],al
   14000a9ad:	add    BYTE PTR [rax],al
   14000a9af:	add    al,ah
   14000a9b1:	ins    BYTE PTR es:[rdi],dx
   14000a9b2:	add    BYTE PTR [rax+0x1],al
   14000a9b5:	add    BYTE PTR [rax],al
   14000a9b7:	add    BYTE PTR [rax-0x7a],al
   14000a9ba:	add    BYTE PTR [rax+0x1],al
   14000a9bd:	add    BYTE PTR [rax],al
   14000a9bf:	add    BYTE PTR [rax-0x7a],al
   14000a9c2:	add    BYTE PTR [rax+0x1],al
   14000a9c5:	add    BYTE PTR [rax],al
   14000a9c7:	add    BYTE PTR [rax-0x7a],al
   14000a9ca:	add    BYTE PTR [rax+0x1],al
   14000a9cd:	add    BYTE PTR [rax],al
   14000a9cf:	add    BYTE PTR [rax-0x7a],al
   14000a9d2:	add    BYTE PTR [rax+0x1],al
   14000a9d5:	add    BYTE PTR [rax],al
   14000a9d7:	add    BYTE PTR [rax+0x140006d],ah
   14000a9dd:	add    BYTE PTR [rax],al
   14000a9df:	add    BYTE PTR [rax+0x1400079],ah
	...
   14000a9ed:	add    BYTE PTR [rax],al
   14000a9ef:	add    BYTE PTR [rbx+0x0],bh
   14000a9f2:	cmp    BYTE PTR [rax],al
   14000a9f4:	cmp    DWORD PTR [rax],eax
   14000a9f6:	add    BYTE PTR [r10+0x0],al
   14000a9fa:	rex.XB add BYTE PTR [r15],sil
   14000a9fd:	add    BYTE PTR [rax],bh
   14000a9ff:	add    BYTE PTR [rbp+0x0],al
   14000aa02:	sub    eax,0x34003900
   14000aa07:	add    BYTE PTR [rax+rax*1],dh
   14000aa0a:	xor    DWORD PTR [rax],eax
   14000aa0c:	sub    eax,0x41003400
   14000aa11:	add    BYTE PTR [rip+0x2d004600],dh        # 0x16d00f017
   14000aa17:	add    BYTE PTR [rax],bh
   14000aa19:	add    BYTE PTR [rip+0x36003100],dh        # 0x17600db1f
   14000aa1f:	add    BYTE PTR [rip+0x44004400],ch        # 0x18400ee25
   14000aa25:	add    BYTE PTR [rdi],dh
   14000aa27:	add    BYTE PTR [rcx],dh
   14000aa29:	add    BYTE PTR [rdx],dh
   14000aa2b:	add    BYTE PTR [rcx],bh
   14000aa2d:	add    BYTE PTR [rbp+0x0],al
   14000aa30:	rex.RX add BYTE PTR [rcx],r14b
   14000aa33:	add    BYTE PTR [rsi],dh
   14000aa35:	add    BYTE PTR [rax],dh
   14000aa37:	add    BYTE PTR [rbx+0x0],al
   14000aa3a:	jge    0x14000aa3c
   14000aa3c:	add    BYTE PTR [rax],al
   14000aa3e:	add    BYTE PTR [rax],al
   14000aa40:	ja     0x14000aa99
   14000aa42:	imul   ebp,DWORD PTR [rsi+0x4d],0x6e6961
   14000aa49:	add    BYTE PTR [rax],al
   14000aa4b:	add    BYTE PTR [rax],al
   14000aa4d:	add    BYTE PTR [rax],al
   14000aa4f:	add    BYTE PTR [rbx+0x55],al
   14000aa52:	je     0x14000aabd
   14000aa54:	ins    BYTE PTR es:[rdi],dx
   14000aa55:	jae    0x14000aa91
   14000aa57:	cmp    cl,BYTE PTR [rcx+0x6e]
   14000aa5a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000aa62:	and    BYTE PTR [rsi+0x61],ah
   14000aa65:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000aa6d:	and    eax,0x6e692078
   14000aa72:	and    BYTE PTR [rip+0x73],ah        # 0x14000aaeb
   14000aa78:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000aa7a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000aa82:	rex.B jo 0x14000aaf5
   14000aa85:	pop    rax
   14000aa86:	rex.W
   14000aa87:	gs ins BYTE PTR es:[rdi],dx
   14000aa89:	jo     0x14000aaf0
   14000aa8b:	jb     0x14000aaad
   14000aa8d:	data16 (bad) 
   14000aa8f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000aa97:	and    eax,0x6e692078
   14000aa9c:	and    BYTE PTR [rip+0x4d0073],ah        # 0x1404dab15
   14000aaa2:	jae    0x14000aaa4
   14000aaa4:	movsxd eax,DWORD PTR [rax]
   14000aaa6:	outs   dx,DWORD PTR ds:[rsi]
   14000aaa7:	add    BYTE PTR [rdx+0x0],dh
   14000aaaa:	add    BYTE PTR gs:[rbp+0x0],ah
   14000aaae:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000aab3:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000aab7:	add    BYTE PTR [rip+0x2f00],ch        # 0x14000d9bd
   14000aabd:	add    BYTE PTR [rax],al
   14000aabf:	add    BYTE PTR [rbp+0x0],dl
   14000aac2:	outs   dx,BYTE PTR ds:[rsi]
   14000aac3:	add    BYTE PTR [rdx+0x0],dh
   14000aac6:	add    BYTE PTR gs:[rdi+0x0],ah
   14000aaca:	push   rbx
   14000aacb:	add    BYTE PTR [rbp+0x0],ah
   14000aace:	jb     0x14000aad0
   14000aad0:	jbe    0x14000aad2
   14000aad2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aad6:	add    BYTE PTR [rax],al
   14000aad8:	push   rdx
   14000aad9:	add    BYTE PTR [rbp+0x0],ah
   14000aadc:	add    BYTE PTR [ebx+0x0],dl
   14000aae0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aae4:	jbe    0x14000aae6
   14000aae6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aaea:	add    BYTE PTR [rax],al
   14000aaec:	add    BYTE PTR [rax],al
   14000aaee:	add    BYTE PTR [rax],al
   14000aaf0:	rex.RX add DWORD PTR [rax],r8d
   14000aaf3:	add    BYTE PTR [rax],al
   14000aaf5:	add    BYTE PTR [rax],al
   14000aaf7:	add    al,al
   14000aaf9:	add    BYTE PTR [rax],al
   14000aafb:	add    BYTE PTR [rax],al
   14000aafd:	add    BYTE PTR [rax],al
   14000aaff:	rex.RX adc r12b,al
   14000ab02:	add    al,BYTE PTR [rax]
   14000ab04:	add    BYTE PTR [rax],al
   14000ab06:	add    BYTE PTR [rax],al
   14000ab08:	rol    BYTE PTR [rax],0x0
   14000ab0b:	add    BYTE PTR [rax],al
   14000ab0d:	add    BYTE PTR [rax],al
   14000ab0f:	rex.RX pop rsp
   14000ab11:	add    BYTE PTR [rdx+0x0],dl
   14000ab14:	add    BYTE PTR gs:[rcx+0x0],dh
   14000ab18:	jne    0x14000ab1a
   14000ab1a:	imul   eax,DWORD PTR [rax],0x650072
   14000ab20:	add    BYTE PTR fs:[rax],ah
   14000ab23:	add    BYTE PTR [rbx+0x0],al
   14000ab26:	(bad)  
   14000ab27:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000ab2b:	add    BYTE PTR [rdi+0x0],ah
   14000ab2e:	outs   dx,DWORD PTR ds:[rsi]
   14000ab2f:	add    BYTE PTR [rdx+0x0],dh
   14000ab32:	imul   eax,DWORD PTR [rax],0x730065
	...
   14000ab40:	add    BYTE PTR [r8+r8*1+0x53],cl
   14000ab45:	add    BYTE PTR [rcx+0x0],cl
   14000ab48:	add    BYTE PTR [rax+rax*1+0x0],r11b
   14000ab4d:	add    BYTE PTR [rax],al
   14000ab4f:	add    BYTE PTR [rax+rax*1+0x49],bl
   14000ab53:	add    BYTE PTR [rbp+0x0],ch
   14000ab56:	jo     0x14000ab58
   14000ab58:	ins    BYTE PTR es:[rdi],dx
   14000ab59:	add    BYTE PTR [rbp+0x0],ah
   14000ab5c:	ins    DWORD PTR es:[rdi],dx
   14000ab5d:	add    BYTE PTR [rbp+0x0],ah
   14000ab60:	outs   dx,BYTE PTR ds:[rsi]
   14000ab61:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000ab65:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000ab69:	add    BYTE PTR [rbx+0x0],al
   14000ab6c:	(bad)  
   14000ab6d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000ab71:	add    BYTE PTR [rdi+0x0],ah
   14000ab74:	outs   dx,DWORD PTR ds:[rsi]
   14000ab75:	add    BYTE PTR [rdx+0x0],dh
   14000ab78:	imul   eax,DWORD PTR [rax],0x730065
   14000ab7e:	add    BYTE PTR [rax],al
   14000ab80:	add    BYTE PTR cs:[rax+rax*1+0x6c],dh
   14000ab85:	add    BYTE PTR [rdx+0x0],ah
	...
   14000ab90:	add    DWORD PTR [rax],eax
   14000ab92:	add    BYTE PTR [rax],al
   14000ab94:	add    BYTE PTR [rax],al
   14000ab96:	add    BYTE PTR [rax],al
   14000ab98:	rol    BYTE PTR [rax],0x0
   14000ab9b:	add    BYTE PTR [rax],al
   14000ab9d:	add    BYTE PTR [rax],al
   14000ab9f:	rex.RX xchg eax,eax
   14000aba1:	stos   DWORD PTR es:[rdi],eax
   14000aba2:	add    BYTE PTR [rax+0x1],al
	...
   14000abad:	add    BYTE PTR [rax],al
   14000abaf:	add    BYTE PTR [rcx],al
	...
   14000abcd:	add    BYTE PTR [rax],al
   14000abcf:	add    BYTE PTR [rcx+0x0],al
   14000abd2:	push   rax
   14000abd3:	add    BYTE PTR [rax+0x0],dl
   14000abd6:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000abdb:	add    BYTE PTR [rax],al
   14000abdd:	add    BYTE PTR [rax],al
   14000abdf:	add    dl,dl
   14000abe1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000abe2:	rex.R (bad) 
   14000abe4:	pop    rsi
   14000abe5:	mov    es,WORD PTR [rip+0x1566aa44]        # 0x15567562f
   14000abeb:	push   rsp
   14000abec:	jmp    0x160119999
   14000abf1:	lods   al,BYTE PTR ds:[rsi]
   14000abf2:	add    BYTE PTR [rax+0x1],al
	...
   14000abfd:	add    BYTE PTR [rax],al
   14000abff:	add    BYTE PTR [rcx],al
	...
   14000ac1d:	add    BYTE PTR [rax],al
   14000ac1f:	add    BYTE PTR [rdx],bh
   14000ac21:	ins    BYTE PTR es:[rdi],dx
   14000ac22:	psraw  mm5,QWORD PTR [rsi-0x55b5230f]
   14000ac29:	popf   
   14000ac2a:	(bad)  
   14000ac2b:	out    0x55,al
   14000ac2d:	and    eax,0x6e66
   14000ac32:	add    BYTE PTR [rax],al
   14000ac34:	add    BYTE PTR [rax],al
   14000ac36:	add    BYTE PTR [rax],al
   14000ac38:	rol    BYTE PTR [rax],0x0
   14000ac3b:	add    BYTE PTR [rax],al
   14000ac3d:	add    BYTE PTR [rax],al
   14000ac3f:	rex.RX
   14000ac40:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000ac44:	add    BYTE PTR fs:[rbp+0x0],dh
   14000ac48:	ins    BYTE PTR es:[rdi],dx
   14000ac49:	add    BYTE PTR [rbp+0x0],ah
   14000ac4c:	add    BYTE PTR [rax],al
   14000ac4e:	add    BYTE PTR [rax],al
   14000ac50:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000ac54:	add    BYTE PTR fs:[rbp+0x0],dh
   14000ac58:	ins    BYTE PTR es:[rdi],dx
   14000ac59:	add    BYTE PTR [rbp+0x0],ah
   14000ac5c:	pop    rdi
   14000ac5d:	add    BYTE PTR [rdx+0x0],dl
   14000ac60:	(bad)  
   14000ac61:	add    BYTE PTR [rdi+0x0],dh
   14000ac64:	add    BYTE PTR [rax],al
   14000ac66:	add    BYTE PTR [rax],al
   14000ac68:	push   rdx
   14000ac69:	add    BYTE PTR [rbp+0x0],al
   14000ac6c:	rex.RXB add BYTE PTR [r9+0x0],r9b
   14000ac70:	push   rbx
   14000ac71:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000ac75:	add    BYTE PTR [rcx+0x0],bl
	...
   14000ac80:	rex.W add BYTE PTR [rbx+0x0],cl
   14000ac84:	rex.XB add BYTE PTR [r10+0x0],dl
	...
   14000ac90:	rex.W add BYTE PTR [rbx+0x0],cl
   14000ac94:	rex.XB add BYTE PTR [r13+0x0],dl
	...
   14000aca0:	rex.W add BYTE PTR [rbx+0x0],cl
   14000aca4:	rex.WR add BYTE PTR [rbp+0x0],r9b
	...
   14000acb0:	rex.W add BYTE PTR [rbx+0x0],cl
   14000acb4:	push   rbp
   14000acb5:	add    BYTE PTR [rax],al
   14000acb7:	add    BYTE PTR [rax+0x0],cl
   14000acba:	rex.WXB add BYTE PTR [r8+0x0],dl
   14000acbe:	add    BYTE PTR [rax],r8b
   14000acc1:	add    BYTE PTR [rax],al
   14000acc3:	add    BYTE PTR [rax],al
   14000acc5:	add    BYTE PTR [rax],al
   14000acc7:	add    BYTE PTR [rax+0x0],cl
   14000acca:	rex.WXB add BYTE PTR [r8+r8*1+0x44],al
	...
   14000acd7:	add    BYTE PTR [rax+0x0],cl
   14000acda:	rex.WXB add BYTE PTR [r11+0x0],al
   14000acde:	rex.XB add BYTE PTR [r8],al
   14000ace1:	add    BYTE PTR [rax],al
   14000ace3:	add    BYTE PTR [rax],al
   14000ace5:	add    BYTE PTR [rax],al
   14000ace7:	add    BYTE PTR [rax+0x0],cl
   14000acea:	rex.WXB add BYTE PTR [r13+0x0],al
   14000acee:	pop    rcx
   14000acef:	add    BYTE PTR [rdi+0x0],bl
   14000acf2:	add    BYTE PTR [r8+r8*1+0x41],cl
   14000acf7:	add    BYTE PTR [rbx+0x0],dl
   14000acfa:	push   rbx
   14000acfb:	add    BYTE PTR [rbp+0x0],al
   14000acfe:	push   rbx
   14000acff:	add    BYTE PTR [rdi+0x0],bl
   14000ad02:	push   rdx
   14000ad03:	add    BYTE PTR [rdi+0x0],cl
   14000ad06:	rex.WRXB add BYTE PTR [r8+r8*1+0x0],r10b
   14000ad0b:	add    BYTE PTR [rax],al
   14000ad0d:	add    BYTE PTR [rax],al
   14000ad0f:	add    BYTE PTR [rax+0x0],cl
   14000ad12:	rex.WXB add BYTE PTR [r13+0x0],al
   14000ad16:	pop    rcx
   14000ad17:	add    BYTE PTR [rdi+0x0],bl
   14000ad1a:	rex.XB add BYTE PTR [r13+0x0],dl
   14000ad1e:	push   rdx
   14000ad1f:	add    BYTE PTR [rdx+0x0],dl
   14000ad22:	add    BYTE PTR [r14+0x0],r9b
   14000ad26:	push   rsp
   14000ad27:	add    BYTE PTR [rdi+0x0],bl
   14000ad2a:	push   rbp
   14000ad2b:	add    BYTE PTR [rbx+0x0],dl
   14000ad2e:	add    BYTE PTR [r10+0x0],r10b
   14000ad32:	add    BYTE PTR [rax],al
   14000ad34:	add    BYTE PTR [rax],al
   14000ad36:	add    BYTE PTR [rax],al
   14000ad38:	rex.W add BYTE PTR [rbx+0x0],cl
   14000ad3c:	add    BYTE PTR [r9+0x0],r11b
   14000ad40:	pop    rdi
   14000ad41:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000ad45:	add    BYTE PTR [rbx+0x0],al
   14000ad48:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14000ad4d:	add    BYTE PTR [rbp+0x0],cl
   14000ad50:	add    BYTE PTR [r11+0x0],al
   14000ad54:	rex.W add BYTE PTR [rcx+0x0],cl
   14000ad58:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000ad5c:	add    BYTE PTR [rax],al
   14000ad5e:	add    BYTE PTR [rax],al
   14000ad60:	rex.W add BYTE PTR [rbx+0x0],cl
   14000ad64:	add    BYTE PTR [r9+0x0],r11b
   14000ad68:	pop    rdi
   14000ad69:	add    BYTE PTR [rbp+0x0],dl
   14000ad6c:	push   rbx
   14000ad6d:	add    BYTE PTR [rbp+0x0],al
   14000ad70:	push   rdx
   14000ad71:	add    BYTE PTR [rbx+0x0],dl
   14000ad74:	add    BYTE PTR [rax],al
   14000ad76:	add    BYTE PTR [rax],al
   14000ad78:	rex.W add BYTE PTR [rbx+0x0],cl
   14000ad7c:	add    BYTE PTR [r9+0x0],r11b
   14000ad80:	pop    rdi
   14000ad81:	add    BYTE PTR [rax+0x0],dl
   14000ad84:	add    BYTE PTR [r10+0x0],r10b
   14000ad88:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000ad8c:	push   rdx
   14000ad8d:	add    BYTE PTR [rbp+0x0],cl
   14000ad90:	add    BYTE PTR [r14+0x0],cl
   14000ad94:	rex.XB add BYTE PTR [r13+0x0],al
   14000ad98:	pop    rdi
   14000ad99:	add    BYTE PTR [rax+rax*1+0x41],al
   14000ad9d:	add    BYTE PTR [rax+rax*1+0x41],dl
   14000ada1:	add    BYTE PTR [rax],al
   14000ada3:	add    BYTE PTR [rax],al
   14000ada5:	add    BYTE PTR [rax],al
   14000ada7:	add    BYTE PTR [rax+0x0],cl
   14000adaa:	rex.WXB add BYTE PTR [r13+0x0],al
   14000adae:	pop    rcx
   14000adaf:	add    BYTE PTR [rdi+0x0],bl
   14000adb2:	add    BYTE PTR [rcx+0x0],r11b
   14000adb6:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000adba:	add    BYTE PTR [rcx+0x0],r8b
   14000adbe:	push   rsp
   14000adbf:	add    BYTE PTR [rcx+0x0],al
   14000adc2:	add    BYTE PTR [rax],al
   14000adc4:	add    BYTE PTR [rax],al
   14000adc6:	add    BYTE PTR [rax],al
   14000adc8:	rex.W add BYTE PTR [rbx+0x0],cl
   14000adcc:	add    BYTE PTR [r9+0x0],r11b
   14000add0:	pop    rdi
   14000add1:	add    BYTE PTR [rbx+0x0],al
   14000add4:	push   rbp
   14000add5:	add    BYTE PTR [rdx+0x0],dl
   14000add8:	push   rdx
   14000add9:	add    BYTE PTR [rbp+0x0],al
   14000addc:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   14000ade1:	add    BYTE PTR [rbx+0x0],al
   14000ade4:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000ade8:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14000adec:	rex.RXB add BYTE PTR [r8],r8b
   14000adef:	add    BYTE PTR [rax+0x14000ac],al
   14000adf5:	add    BYTE PTR [rax],al
   14000adf7:	add    BYTE PTR [rax],al
   14000adf9:	add    BYTE PTR [rax],al
   14000adfb:	cmp    bh,0xff
   14000adfe:	(bad)  
   14000adff:	call   QWORD PTR [rax+0x14000ac]
   14000ae05:	add    BYTE PTR [rax],al
   14000ae07:	add    BYTE PTR [rcx],al
   14000ae09:	add    BYTE PTR [rax],al
   14000ae0b:	cmp    bh,0xff
   14000ae0e:	(bad)  
   14000ae0f:	jmp    QWORD PTR [rax+0x14000ac]
   14000ae15:	add    BYTE PTR [rax],al
   14000ae17:	add    BYTE PTR [rdx],al
   14000ae19:	add    BYTE PTR [rax],al
   14000ae1b:	cmp    bh,0xff
   14000ae1e:	(bad)  
   14000ae1f:	push   QWORD PTR [rax+0x14000ac]
   14000ae25:	add    BYTE PTR [rax],al
   14000ae27:	add    BYTE PTR [rbx],al
   14000ae29:	add    BYTE PTR [rax],al
   14000ae2b:	cmp    bh,0xff
   14000ae2e:	(bad)  
   14000ae2f:	(bad)  
   14000ae30:	mov    eax,0x14000ac
   14000ae35:	add    BYTE PTR [rax],al
   14000ae37:	add    BYTE PTR [rax+rax*1],al
   14000ae3a:	add    BYTE PTR [rax-0x1],al
   14000ae40:	enter  0xac,0x40
   14000ae44:	add    DWORD PTR [rax],eax
   14000ae46:	add    BYTE PTR [rax],al
   14000ae48:	(bad)  
   14000ae49:	add    BYTE PTR [rax],al
   14000ae4b:	cmp    bh,0xff
   14000ae4e:	(bad)  
   14000ae4f:	(bad)  
   14000ae50:	fsubr  DWORD PTR [rax+rax*1+0x140]
   14000ae57:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f80ae5d
   14000ae5d:	(bad)  
   14000ae5e:	(bad)  
   14000ae5f:	(bad)  
   14000ae60:	call   0x14140af11
   14000ae65:	add    BYTE PTR [rax],al
   14000ae67:	add    BYTE PTR [rax],al
   14000ae69:	add    BYTE PTR [rax],al
   14000ae6b:	cmp    bh,0xff
   14000ae6e:	(bad)  
   14000ae6f:	call   QWORD PTR [rax]
   14000ae71:	lods   eax,DWORD PTR ds:[rsi]
   14000ae72:	add    BYTE PTR [rax+0x1],al
   14000ae75:	add    BYTE PTR [rax],al
   14000ae77:	add    BYTE PTR [rcx],al
   14000ae79:	add    BYTE PTR [rax],al
   14000ae7b:	cmp    bh,0xff
   14000ae7e:	(bad)  
   14000ae7f:	(bad)  
   14000ae80:	cmp    BYTE PTR [rbp+0x14000],ch
   14000ae86:	add    BYTE PTR [rax],al
   14000ae88:	add    al,BYTE PTR [rax]
   14000ae8a:	add    BYTE PTR [rax-0x1],al
   14000ae90:	(bad)  
   14000ae91:	lods   eax,DWORD PTR ds:[rsi]
   14000ae92:	add    BYTE PTR [rax+0x1],al
   14000ae95:	add    BYTE PTR [rax],al
   14000ae97:	add    BYTE PTR [rbx],al
   14000ae99:	add    BYTE PTR [rax],al
   14000ae9b:	cmp    bh,0xff
   14000ae9e:	(bad)  
   14000ae9f:	(bad)  
   14000aea0:	js     0x14000ae4f
   14000aea2:	add    BYTE PTR [rax+0x1],al
   14000aea5:	add    BYTE PTR [rax],al
   14000aea7:	add    BYTE PTR [rax+rax*1],al
   14000aeaa:	add    BYTE PTR [rax-0x1],al
   14000aeb0:	test   al,0xad
   14000aeb2:	add    BYTE PTR [rax+0x1],al
   14000aeb5:	add    BYTE PTR [rax],al
   14000aeb7:	add    BYTE PTR [rsi],al
   14000aeb9:	add    BYTE PTR [rax],al
   14000aebb:	cmp    bh,0xff
   14000aebe:	(bad)  
   14000aebf:	dec    eax
   14000aec1:	lods   eax,DWORD PTR ds:[rsi]
   14000aec2:	add    BYTE PTR [rax+0x1],al
   14000aec5:	add    BYTE PTR [rax],al
   14000aec7:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f80aecd
   14000aecd:	(bad)  
   14000aece:	(bad)  
   14000aecf:	inc    DWORD PTR [rcx+0x0]
   14000aed2:	push   rax
   14000aed3:	add    BYTE PTR [rcx+0x0],cl
   14000aed6:	sub    eax,0x53004d00
   14000aedb:	add    BYTE PTR [rip+0x69005700],ch        # 0x1a90105e1
   14000aee1:	add    BYTE PTR [rsi+0x0],ch
   14000aee4:	sub    eax,0x6f004300
   14000aee9:	add    BYTE PTR [rdx+0x0],dh
   14000aeec:	add    BYTE PTR gs:[rip+0x6f004c00],ch        # 0x1af00faf3
   14000aef3:	add    BYTE PTR [rbx+0x0],ah
   14000aef6:	(bad)  
   14000aef7:	add    BYTE PTR [rax+rax*1+0x52],ch
   14000aefb:	add    BYTE PTR [rbp+0x0],ah
   14000aefe:	add    BYTE PTR [ecx+0x0],ch
   14000af02:	jae    0x14000af04
   14000af04:	je     0x14000af06
   14000af06:	jb     0x14000af08
   14000af08:	jns    0x14000af0a
   14000af0a:	sub    eax,0x31004c00
   14000af0f:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00e015
   14000af15:	add    BYTE PTR [rax],dh
   14000af17:	add    BYTE PTR [rsi],ch
   14000af19:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000af1d:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000af21:	add    BYTE PTR [rax],al
   14000af23:	add    BYTE PTR [rax],al
   14000af25:	add    BYTE PTR [rax],al
   14000af27:	add    BYTE PTR [rdx+0x65],dl
   14000af2a:	addr32 rex.R
   14000af2c:	gs ins BYTE PTR es:[rdi],dx
   14000af2e:	gs je  0x14000af96
   14000af31:	rex.WXB
   14000af32:	gs jns 0x14000af7a
   14000af35:	js     0x14000af8e
   14000af37:	add    BYTE PTR [rcx+0x0],ah
   14000af3a:	add    BYTE PTR fs:[rsi+0x0],dh
   14000af3e:	(bad)  
   14000af3f:	add    BYTE PTR [rax+0x0],dh
   14000af42:	imul   eax,DWORD PTR [rax],0x320033
   14000af48:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000af4d:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000af51:	add    BYTE PTR [rax],al
   14000af53:	add    BYTE PTR [rax],al
   14000af55:	add    BYTE PTR [rax],al
   14000af57:	add    BYTE PTR [rdx+0x65],dl
   14000af5a:	addr32 rex.R
   14000af5c:	gs ins BYTE PTR es:[rdi],dx
   14000af5e:	gs je  0x14000afc6
   14000af61:	rex.WXB
   14000af62:	gs jns 0x14000afbc
   14000af65:	add    BYTE PTR [rax],al
   14000af67:	add    BYTE PTR [rdx+rax*1],al
	...
   14000af76:	add    BYTE PTR [rax+0x0],al
   14000af7c:	add    BYTE PTR [rax],al
   14000af7e:	add    BYTE PTR [rax+0x10000518],al
   14000af84:	add    al,0x0
	...
   14000af8e:	add    BYTE PTR [rax+0x10000517],al
   14000af94:	add    al,BYTE PTR [rax]
	...
   14000af9e:	add    BYTE PTR [rax+0x10000516],al
   14000afa4:	add    al,0x0
	...
   14000afae:	add    BYTE PTR [rax+0x10000515],al
   14000afb4:	add    al,0x0
	...
   14000afbe:	add    BYTE PTR [rax+0x10000514],al
   14000afc4:	add    al,BYTE PTR [rax]
	...
   14000afce:	add    BYTE PTR [rax+0x10000508],al
   14000afd4:	add    al,BYTE PTR [rax]
	...
   14000afde:	add    BYTE PTR [rax+0x10000507],al
   14000afe4:	add    al,0x0
	...
   14000afee:	add    BYTE PTR [rax-0x2d166f26],al
   14000aff4:	add    al,0x85
   14000aff6:	add    al,BYTE PTR [rdi-0x5b]
   14000aff9:	in     eax,0x36
   14000affb:	jg     0x14000afbf
   14000affd:	clc    
   14000affe:	and    edi,DWORD PTR [rdi+0x55004e]
   14000b004:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   14000b009:	add    BYTE PTR [rax],al
   14000b00b:	add    BYTE PTR [rax],al
   14000b00d:	add    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rdx+0x44],dl
   14000b012:	push   rbx
   14000b013:	push   rax
   14000b014:	outs   dx,BYTE PTR ds:[rsi]
   14000b015:	data16 cmp al,BYTE PTR [rax]
	...
   14000b020:	push   rbx
   14000b021:	add    BYTE PTR [rdi+0x0],ch
   14000b024:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b029:	add    BYTE PTR [rcx+0x0],ah
   14000b02c:	jb     0x14000b02e
   14000b02e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b033:	add    BYTE PTR [rcx+0x0],ch
   14000b036:	movsxd eax,DWORD PTR [rax]
   14000b038:	jb     0x14000b03a
   14000b03a:	outs   dx,DWORD PTR ds:[rsi]
   14000b03b:	add    BYTE PTR [rbx+0x0],dh
   14000b03e:	outs   dx,DWORD PTR ds:[rsi]
   14000b03f:	add    BYTE PTR [rsi+0x0],ah
   14000b042:	je     0x14000b044
   14000b044:	pop    rsp
   14000b045:	add    BYTE PTR [rcx+0x0],al
   14000b048:	ins    BYTE PTR es:[rdi],dx
   14000b049:	add    BYTE PTR [rax+rax*1+0x55],ch
   14000b04d:	add    BYTE PTR [rbx+0x0],dh
   14000b050:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b054:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b058:	jae    0x14000b05a
   14000b05a:	je     0x14000b05c
   14000b05c:	(bad)  
   14000b05d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000b061:	add    BYTE PTR [rcx+0x0],al
   14000b064:	add    BYTE PTR [ebp+0x0],ah
   14000b068:	outs   dx,BYTE PTR ds:[rsi]
   14000b069:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000b06d:	add    BYTE PTR [rax],al
   14000b06f:	add    BYTE PTR [rdx+0x65],dl
   14000b072:	addr32 rex.R
   14000b074:	gs ins BYTE PTR es:[rdi],dx
   14000b076:	gs je  0x14000b0de
   14000b079:	push   rsp
   14000b07a:	jb     0x14000b0e1
   14000b07c:	and    BYTE PTR gs:[rax],ch
   14000b07f:	push   rdx
   14000b080:	rex.R push rbx
   14000b082:	sub    DWORD PTR [rax],esp
   14000b084:	data16 (bad) 
   14000b086:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   14000b08e:	push   0x25783020
   14000b093:	xor    BYTE PTR [rax],bh
   14000b095:	js     0x14000b097
   14000b097:	add    BYTE PTR [rdx+0x65],dl
   14000b09a:	addr32 rex.WRXB jo 0x14000b103
   14000b09e:	outs   dx,BYTE PTR ds:[rsi]
   14000b09f:	rex.WXB
   14000b0a0:	gs jns 0x14000b0e8
   14000b0a3:	js     0x14000b0c5
   14000b0a5:	sub    BYTE PTR [rdx+0x44],dl
   14000b0a8:	push   rbx
   14000b0a9:	sub    DWORD PTR [rax],esp
   14000b0ab:	data16 (bad) 
   14000b0ad:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   14000b0b5:	push   0x25783020
   14000b0ba:	xor    BYTE PTR [rax],bh
   14000b0bc:	js     0x14000b0be
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	push   rbx
   14000b0c1:	add    BYTE PTR [rdi+0x0],ch
   14000b0c4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000b0c9:	add    BYTE PTR [rcx+0x0],ah
   14000b0cc:	jb     0x14000b0ce
   14000b0ce:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000b0d3:	add    BYTE PTR [rcx+0x0],ch
   14000b0d6:	movsxd eax,DWORD PTR [rax]
   14000b0d8:	jb     0x14000b0da
   14000b0da:	outs   dx,DWORD PTR ds:[rsi]
   14000b0db:	add    BYTE PTR [rbx+0x0],dh
   14000b0de:	outs   dx,DWORD PTR ds:[rsi]
   14000b0df:	add    BYTE PTR [rsi+0x0],ah
   14000b0e2:	je     0x14000b0e4
   14000b0e4:	pop    rsp
   14000b0e5:	add    BYTE PTR [rdi+0x0],dl
   14000b0e8:	imul   eax,DWORD PTR [rax],0x64006e
   14000b0ee:	outs   dx,DWORD PTR ds:[rsi]
   14000b0ef:	add    BYTE PTR [rdi+0x0],dh
   14000b0f2:	jae    0x14000b0f4
   14000b0f4:	pop    rsp
   14000b0f5:	add    BYTE PTR [rbx+0x0],al
   14000b0f8:	jne    0x14000b0fa
   14000b0fa:	jb     0x14000b0fc
   14000b0fc:	jb     0x14000b0fe
   14000b0fe:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b102:	je     0x14000b104
   14000b104:	push   rsi
   14000b105:	add    BYTE PTR [rbp+0x0],ah
   14000b108:	jb     0x14000b10a
   14000b10a:	jae    0x14000b10c
   14000b10c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b112:	pop    rsp
   14000b113:	add    BYTE PTR [rcx+0x0],al
   14000b116:	jo     0x14000b118
   14000b118:	jo     0x14000b11a
   14000b11a:	push   rdx
   14000b11b:	add    BYTE PTR [rbp+0x0],ah
   14000b11e:	(bad)  
   14000b11f:	add    BYTE PTR [rax+rax*1+0x69],ah
   14000b123:	add    BYTE PTR [rsi+0x0],ch
   14000b126:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b12a:	jae    0x14000b12c
   14000b12c:	add    BYTE PTR [rax],al
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	push   rdx
   14000b131:	gs addr32 rex.R
   14000b134:	gs ins BYTE PTR es:[rdi],dx
   14000b136:	gs je  0x14000b19e
   14000b139:	push   rsp
   14000b13a:	jb     0x14000b1a1
   14000b13c:	and    BYTE PTR gs:[rax],ch
   14000b13f:	push   r10
   14000b141:	push   rbx
   14000b142:	sub    DWORD PTR [rax],esp
   14000b144:	data16 (bad) 
   14000b146:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   14000b14e:	push   0x25783020
   14000b153:	xor    BYTE PTR [rax],bh
   14000b155:	js     0x14000b157
   14000b157:	add    BYTE PTR [rdx+0x65],dl
   14000b15a:	addr32 rex.WRXB jo 0x14000b1c3
   14000b15e:	outs   dx,BYTE PTR ds:[rsi]
   14000b15f:	rex.WXB
   14000b160:	gs jns 0x14000b1a8
   14000b163:	js     0x14000b185
   14000b165:	sub    BYTE PTR [rcx+0x52],al
   14000b168:	push   rbx
   14000b169:	sub    DWORD PTR [rax],esp
   14000b16b:	data16 (bad) 
   14000b16d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   14000b175:	push   0x25783020
   14000b17a:	xor    BYTE PTR [rax],bh
   14000b17c:	js     0x14000b17e
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	and    eax,0x79007300
   14000b185:	add    BYTE PTR [rbx+0x0],dh
   14000b188:	je     0x14000b18a
   14000b18a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b18e:	jb     0x14000b190
   14000b190:	outs   dx,DWORD PTR ds:[rsi]
   14000b191:	add    BYTE PTR [rdi+0x0],ch
   14000b194:	je     0x14000b196
   14000b196:	and    eax,0x73005c00
   14000b19b:	add    BYTE PTR [rcx+0x0],bh
   14000b19e:	jae    0x14000b1a0
   14000b1a0:	je     0x14000b1a2
   14000b1a2:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b1a6:	xor    eax,DWORD PTR [rax]
   14000b1a8:	xor    al,BYTE PTR [rax]
   14000b1aa:	pop    rsp
   14000b1ab:	add    BYTE PTR [rcx+0x0],al
   14000b1ae:	jo     0x14000b1b0
   14000b1b0:	jo     0x14000b1b2
   14000b1b2:	pop    rax
   14000b1b3:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b1b7:	add    BYTE PTR [rax+0x0],dh
   14000b1ba:	ins    BYTE PTR es:[rdi],dx
   14000b1bb:	add    BYTE PTR [rdi+0x0],ch
   14000b1be:	jns    0x14000b1c0
   14000b1c0:	ins    DWORD PTR es:[rdi],dx
   14000b1c1:	add    BYTE PTR [rbp+0x0],ah
   14000b1c4:	outs   dx,BYTE PTR ds:[rsi]
   14000b1c5:	add    BYTE PTR [rax+rax*1+0x43],dh
   14000b1c9:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000b1cd:	add    BYTE PTR [rbp+0x0],ah
   14000b1d0:	outs   dx,BYTE PTR ds:[rsi]
   14000b1d1:	add    BYTE PTR [rax+rax*1+0x2e],dh
   14000b1d5:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000b1d9:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000b1dd:	add    BYTE PTR [rax],al
   14000b1df:	add    BYTE PTR [rbx+0x52],al
   14000b1e2:	rex.R push rbx
   14000b1e4:	push   rax
   14000b1e5:	jb     0x14000b256
   14000b1e7:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x6e61
   14000b1ee:	fs ins BYTE PTR es:[rdi],dx
   14000b1f0:	gs jb  0x14000b22d
   14000b1f3:	cmp    al,BYTE PTR [rbp+riz*2+0x6c]
   14000b1f7:	gs je  0x14000b25f
   14000b1fa:	push   rbp
   14000b1fb:	jae    0x14000b262
   14000b1fd:	jb     0x14000b24f
   14000b1ff:	(bad)  
   14000b200:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b203:	addr32 gs jae 0x14000b207
   14000b207:	add    BYTE PTR [rbp+0x78],al
   14000b20a:	jo     0x14000b26d
   14000b20c:	outs   dx,BYTE PTR ds:[rsi]
   14000b20d:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000b210:	jbe    0x14000b27b
   14000b212:	jb     0x14000b283
   14000b214:	outs   dx,BYTE PTR ds:[rsi]
   14000b215:	ins    DWORD PTR es:[rdi],dx
   14000b216:	outs   dx,BYTE PTR gs:[rsi]
   14000b218:	je     0x14000b26d
   14000b21a:	je     0x14000b28e
   14000b21c:	imul   ebp,DWORD PTR [rsi+0x67],0x61662073
   14000b223:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b22b:	and    eax,0x6e692078
   14000b230:	and    BYTE PTR [rip+0x73],ah        # 0x14000b2a9
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b23a:	(bad)  
   14000b23b:	imul   r12,QWORD PTR fs:[rdx+0x72],0x20797261
   14000b244:	data16 (bad) 
   14000b246:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b24e:	and    eax,0x6e692078
   14000b253:	and    BYTE PTR [rip+0x41000073],ah        # 0x18100b2cc
   14000b259:	jo     0x14000b2cb
   14000b25b:	js     0x14000b2af
   14000b25d:	gs jno 0x14000b2d5
   14000b260:	gs jae 0x14000b2d7
   14000b263:	push   rdx
   14000b264:	gs ins DWORD PTR es:[rdi],dx
   14000b266:	outs   dx,DWORD PTR ds:[rsi]
   14000b267:	jbe    0x14000b2ce
   14000b269:	push   rax
   14000b26a:	(bad)  
   14000b26b:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b26e:	rex.RX outs dx,DWORD PTR gs:[esi]
   14000b272:	jb     0x14000b2c9
   14000b274:	jae    0x14000b2db
   14000b276:	jb     0x14000b278
   14000b278:	rex.RXB
   14000b279:	gs je  0x14000b2cc
   14000b27c:	jb     0x14000b2ed
   14000b27e:	movsxd eax,DWORD PTR [rcx+0x64]
   14000b281:	fs jb  0x14000b2e9
   14000b284:	jae    0x14000b2f9
   14000b286:	and    BYTE PTR [rsi+0x61],ah
   14000b289:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b291:	and    eax,0x6e692078
   14000b296:	and    BYTE PTR [rip+0x73],ah        # 0x14000b30f
   14000b29c:	add    BYTE PTR [rax],al
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	rex.R
   14000b2a1:	gs ins BYTE PTR es:[rdi],dx
   14000b2a3:	gs je  0x14000b30b
   14000b2a6:	push   rbp
   14000b2a7:	jae    0x14000b30e
   14000b2a9:	jb     0x14000b2fd
   14000b2ab:	imul   esi,DWORD PTR gs:[ebx+0x74],0x654b7972
   14000b2b4:	jns    0x14000b2fc
   14000b2b6:	jb     0x14000b327
   14000b2b8:	ins    DWORD PTR es:[rdi],dx
   14000b2b9:	rex.B ins BYTE PTR es:[rdi],dx
   14000b2bb:	ins    BYTE PTR es:[rdi],dx
   14000b2bc:	push   rbp
   14000b2bd:	jae    0x14000b324
   14000b2bf:	jb     0x14000b314
   14000b2c1:	je     0x14000b332
   14000b2c3:	jb     0x14000b32a
   14000b2c5:	and    BYTE PTR [rsi+0x61],ah
   14000b2c8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   14000b2d0:	push   0x25783020
   14000b2d5:	xor    BYTE PTR [rax],bh
   14000b2d7:	js     0x14000b2d9
   14000b2d9:	add    BYTE PTR [rax],al
   14000b2db:	add    BYTE PTR [rax],al
   14000b2dd:	add    BYTE PTR [rax],al
   14000b2df:	add    BYTE PTR [rdi+0x65],al
   14000b2e2:	je     0x14000b32d
   14000b2e4:	outs   dx,BYTE PTR ds:[rsi]
   14000b2e5:	jae    0x14000b35b
   14000b2e7:	(bad)  
   14000b2e8:	outs   dx,BYTE PTR ds:[rsi]
   14000b2e9:	movsxd esp,DWORD PTR [rbp+0x4f]
   14000b2ec:	data16 rex.B jo 0x14000b360
   14000b2f0:	pop    rax
   14000b2f1:	push   rax
   14000b2f2:	(bad)  
   14000b2f3:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b2f6:	addr32 gs rex.WRB (bad) 
   14000b2fa:	outs   dx,BYTE PTR ds:[rsi]
   14000b2fb:	(bad)  
   14000b2fc:	addr32 gs jb 0x14000b320
   14000b300:	data16 (bad) 
   14000b302:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b30a:	and    eax,0x6e692078
   14000b30f:	and    BYTE PTR [rip+0x73],ah        # 0x14000b388
   14000b315:	add    BYTE PTR [rax],al
   14000b317:	add    BYTE PTR [rdi+0x65],al
   14000b31a:	je     0x14000b365
   14000b31c:	outs   dx,BYTE PTR ds:[rsi]
   14000b31d:	jae    0x14000b393
   14000b31f:	(bad)  
   14000b320:	outs   dx,BYTE PTR ds:[rsi]
   14000b321:	movsxd esp,DWORD PTR [rbp+0x4f]
   14000b324:	data16 rex.B jo 0x14000b398
   14000b328:	pop    rax
   14000b329:	push   rax
   14000b32a:	(bad)  
   14000b32b:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b32e:	imul   r14,QWORD PTR gs:[ebx+0x74],0x69616620
   14000b338:	ins    BYTE PTR es:[rdi],dx
   14000b339:	gs cmp ah,BYTE PTR fs:[rax]
   14000b33d:	xor    BYTE PTR [rax+0x25],bh
   14000b340:	js     0x14000b362
   14000b342:	imul   ebp,DWORD PTR [rsi+0x20],0x46007325
   14000b349:	imul   ebp,DWORD PTR [rsi+0x64],0x6b636150
   14000b350:	(bad)  
   14000b351:	addr32 gs jae 0x14000b397
   14000b355:	jns    0x14000b3ac
   14000b357:	jae    0x14000b3be
   14000b359:	jb     0x14000b3ae
   14000b35b:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x656c6961
   14000b363:	cmp    ah,BYTE PTR fs:[rax]
   14000b366:	xor    BYTE PTR [rax+0x25],bh
   14000b369:	js     0x14000b38b
   14000b36b:	imul   ebp,DWORD PTR [rsi+0x20],0x7325
   14000b372:	add    BYTE PTR [rax],al
   14000b374:	add    BYTE PTR [rax],al
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x6b636150
   14000b380:	(bad)  
   14000b381:	addr32 gs jae 0x14000b3c7
   14000b385:	jns    0x14000b3dc
   14000b387:	jae    0x14000b3ee
   14000b389:	jb     0x14000b3de
   14000b38b:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x72757465
   14000b393:	outs   dx,BYTE PTR ds:[rsi]
   14000b394:	jae    0x14000b3b6
   14000b396:	and    eax,0x61702064
   14000b39b:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b39e:	addr32 gs jae 0x14000b3a2
   14000b3a2:	add    BYTE PTR [rax],al
   14000b3a4:	add    BYTE PTR [rax],al
   14000b3a6:	add    BYTE PTR [rax],al
   14000b3a8:	jo     0x14000b41e
   14000b3aa:	jb     0x14000b3fc
   14000b3ac:	imul   esp,DWORD PTR [rdi+0x4c],0x69
   14000b3b0:	jae    0x14000b426
   14000b3b2:	sub    eax,0x7465473e
   14000b3b7:	rex.WRX
   14000b3b8:	gs js  0x14000b42f
   14000b3bb:	and    BYTE PTR [rsi+0x61],ah
   14000b3be:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b3c6:	and    eax,0x6e692078
   14000b3cb:	and    BYTE PTR [rip+0x46000073],ah        # 0x18600b444
   14000b3d1:	(bad)  
   14000b3d2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x25783020
   14000b3da:	xor    BYTE PTR [rax],bh
   14000b3dc:	js     0x14000b3fe
   14000b3de:	rex.B jo 0x14000b451
   14000b3e1:	pop    rax
   14000b3e2:	push   rdx
   14000b3e3:	gs ins DWORD PTR es:[rdi],dx
   14000b3e5:	outs   dx,DWORD PTR ds:[rsi]
   14000b3e6:	jbe    0x14000b44d
   14000b3e8:	push   rax
   14000b3e9:	(bad)  
   14000b3ea:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b3ed:	rex.RX outs dx,DWORD PTR gs:[esi]
   14000b3f1:	jb     0x14000b448
   14000b3f3:	jae    0x14000b45a
   14000b3f5:	jb     0x14000b41f
   14000b3f7:	and    eax,0x297377
   14000b3fc:	add    BYTE PTR [rax],al
   14000b3fe:	add    BYTE PTR [rax],al
   14000b400:	rex.R
   14000b401:	gs ins BYTE PTR es:[rdi],dx
   14000b403:	gs je  0x14000b46b
   14000b406:	push   rax
   14000b407:	(bad)  
   14000b408:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b40b:	addr32 gs rex.RX jb 0x14000b47f
   14000b410:	ins    DWORD PTR es:[rdi],dx
   14000b411:	imul   r14,QWORD PTR [rbx+0x74],0x69616620
   14000b419:	ins    BYTE PTR es:[rdi],dx
   14000b41a:	gs cmp ah,BYTE PTR fs:[rax]
   14000b41e:	xor    BYTE PTR [rax+0x25],bh
   14000b421:	js     0x14000b443
   14000b423:	imul   ebp,DWORD PTR [rsi+0x20],0x7325
   14000b42a:	add    BYTE PTR [rax],al
   14000b42c:	add    BYTE PTR [rax],al
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	rex.XB push r10
   14000b432:	rex.R push rbx
   14000b434:	push   rax
   14000b435:	jb     0x14000b4a6
   14000b437:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x6e61
   14000b43e:	fs ins BYTE PTR es:[rdi],dx
   14000b440:	gs jb  0x14000b47d
   14000b443:	cmp    cl,BYTE PTR [rdi+0x6e]
   14000b446:	rex.R
   14000b447:	gs ins BYTE PTR es:[rdi],dx
   14000b449:	gs je  0x14000b4b1
   14000b44c:	add    BYTE PTR [rax],al
   14000b44e:	add    BYTE PTR [rax],al
   14000b450:	rex.R
   14000b451:	gs ins BYTE PTR es:[rdi],dx
   14000b453:	gs je  0x14000b4bb
   14000b456:	push   rbp
   14000b457:	jae    0x14000b4be
   14000b459:	jb     0x14000b4ab
   14000b45b:	(bad)  
   14000b45c:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b45f:	addr32 gs jae 0x14000b483
   14000b463:	data16 (bad) 
   14000b465:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b46d:	and    eax,0x6e692078
   14000b472:	and    BYTE PTR [rip+0x73],ah        # 0x14000b4eb
   14000b478:	loopne 0x14000b4b7
   14000b47a:	cmp    QWORD PTR [rdi+0x3c],r13
   14000b47e:	rcl    BYTE PTR [rcx],cl
   14000b480:	cmp    DWORD PTR [rbx+0x0],0x7a794fc0
   14000b487:	mov    bh,0x5
   14000b489:	loopne 0x14000b48d
   14000b48b:	add    BYTE PTR [rax],al
   14000b48d:	add    BYTE PTR [rax],al
   14000b48f:	add    al,al
   14000b491:	add    BYTE PTR [rax],al
   14000b493:	add    BYTE PTR [rax],al
   14000b495:	add    BYTE PTR [rax],al
   14000b497:	rex.RX add BYTE PTR [rax],r8b
	...
   14000b4ae:	add    BYTE PTR [rax],al
   14000b4b0:	push   rbx
   14000b4b1:	add    BYTE PTR [rcx+0x0],bh
   14000b4b4:	jae    0x14000b4b6
   14000b4b6:	je     0x14000b4b8
   14000b4b8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b4bc:	pop    rsp
   14000b4bd:	add    BYTE PTR [rbx+0x0],al
   14000b4c0:	jne    0x14000b4c2
   14000b4c2:	jb     0x14000b4c4
   14000b4c4:	jb     0x14000b4c6
   14000b4c6:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b4ca:	je     0x14000b4cc
   14000b4cc:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b4d0:	outs   dx,BYTE PTR ds:[rsi]
   14000b4d1:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b4d5:	add    BYTE PTR [rdi+0x0],ch
   14000b4d8:	ins    BYTE PTR es:[rdi],dx
   14000b4d9:	add    BYTE PTR [rbx+0x0],dl
   14000b4dc:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14000b4e1:	add    BYTE PTR [rbx+0x0],al
   14000b4e4:	outs   dx,DWORD PTR ds:[rsi]
   14000b4e5:	add    BYTE PTR [rsi+0x0],ch
   14000b4e8:	je     0x14000b4ea
   14000b4ea:	jb     0x14000b4ec
   14000b4ec:	outs   dx,DWORD PTR ds:[rsi]
   14000b4ed:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000b4f1:	add    BYTE PTR [rcx+0x0],al
   14000b4f4:	ins    BYTE PTR es:[rdi],dx
   14000b4f5:	add    BYTE PTR [rax+rax*1+0x55],ch
   14000b4f9:	add    BYTE PTR [rbx+0x0],dh
   14000b4fc:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b500:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b504:	jae    0x14000b506
   14000b506:	je     0x14000b508
   14000b508:	(bad)  
   14000b509:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000b50d:	add    BYTE PTR [rcx+0x0],al
   14000b510:	add    BYTE PTR [ebp+0x0],ah
   14000b514:	outs   dx,BYTE PTR ds:[rsi]
   14000b515:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000b519:	add    BYTE PTR [rax],al
   14000b51b:	add    BYTE PTR [rax],al
   14000b51d:	add    BYTE PTR [rax],al
   14000b51f:	add    BYTE PTR [rdi+0x5f],bl
   14000b522:	push   rdx
   14000b523:	rex.R push rbx
   14000b525:	rex.B jo 0x14000b598
   14000b528:	pop    rax
   14000b529:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b52b:	outs   dx,BYTE PTR ds:[rsi]
   14000b52c:	imul   sp,WORD PTR [rdi+0x3a],0x4c3a
   14000b532:	outs   dx,DWORD PTR ds:[rsi]
   14000b533:	(bad)  
   14000b534:	rex.XB outs dx,DWORD PTR fs:[rsi]
   14000b537:	outs   dx,BYTE PTR ds:[rsi]
   14000b538:	imul   sp,WORD PTR [rdi+0x0],0x0
   14000b53e:	add    BYTE PTR [rax],al
   14000b540:	rex.WRXB jo 0x14000b5a8
   14000b543:	outs   dx,BYTE PTR ds:[rsi]
   14000b544:	rex.WXB
   14000b545:	gs jns 0x14000b568
   14000b548:	data16 (bad) 
   14000b54a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b552:	and    eax,0x6e692078
   14000b557:	and    BYTE PTR [rip+0x73],ah        # 0x14000b5d0
   14000b55d:	add    BYTE PTR [rax],al
   14000b55f:	add    BYTE PTR [rax+0x0],dl
   14000b562:	(bad)  
   14000b563:	add    BYTE PTR [rbx+0x0],ah
   14000b566:	imul   eax,DWORD PTR [rax],0x61
   14000b569:	add    BYTE PTR [rdi+0x0],ah
   14000b56c:	add    BYTE PTR gs:[rbp+0x0],cl
   14000b570:	add    BYTE PTR [edx+0x0],dh
   14000b574:	add    BYTE PTR [rax+rax*1+0x4c],r9b
   14000b579:	add    BYTE PTR [rax],al
   14000b57b:	add    BYTE PTR [rax],al
   14000b57d:	add    BYTE PTR [rax],al
   14000b57f:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   14000b583:	(bad)  
   14000b584:	ins    BYTE PTR es:[rdi],dx
   14000b585:	rex.B ins BYTE PTR es:[rdi],dx
   14000b587:	ins    BYTE PTR es:[rdi],dx
   14000b588:	outs   dx,DWORD PTR ds:[rsi]
   14000b589:	movsxd esp,DWORD PTR [rax]
   14000b58b:	outs   dx,DWORD PTR ds:[rsi]
   14000b58c:	outs   dx,BYTE PTR ds:[rsi]
   14000b58d:	and    BYTE PTR [rbp+0x5f],ch
   14000b590:	jo     0x14000b605
   14000b592:	jp     0x14000b5e4
   14000b594:	imul   esp,DWORD PTR [rdi+0x4d],0x67
   14000b598:	jb     0x14000b5dd
   14000b59a:	rex.WR push rbx
   14000b59c:	rex.WB
   14000b59d:	and    BYTE PTR [rsi+0x61],r12b
   14000b5a1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b5a9:	and    eax,0x6e692078
   14000b5ae:	and    BYTE PTR [rip+0x73],ah        # 0x14000b627
   14000b5b4:	add    BYTE PTR [rax],al
   14000b5b6:	add    BYTE PTR [rax],al
   14000b5b8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b5ba:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b5c2:	rex.B jo 0x14000b635
   14000b5c5:	pop    rax
   14000b5c6:	rex.W
   14000b5c7:	gs ins BYTE PTR es:[rdi],dx
   14000b5c9:	jo     0x14000b630
   14000b5cb:	jb     0x14000b5cd
   14000b5cd:	add    BYTE PTR [rax],al
   14000b5cf:	add    BYTE PTR [rcx+0x50],al
   14000b5d2:	push   rax
   14000b5d3:	pop    rax
   14000b5d4:	push   rax
   14000b5d5:	rex.WXB
   14000b5d6:	rex.RXB
   14000b5d7:	rex.W
   14000b5d8:	rex.RB
   14000b5d9:	rex.WR push rax
   14000b5db:	rex.RB push r10
   14000b5dd:	pop    rdi
   14000b5de:	rex.WB
   14000b5df:	rex.WRX
   14000b5e0:	rex.WB push r12
   14000b5e2:	and    BYTE PTR [rsi+0x61],ah
   14000b5e5:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x25783020
   14000b5ed:	js     0x14000b5ef
   14000b5ef:	add    BYTE PTR [rbp+riz*2+0x73],al
   14000b5f3:	je     0x14000b667
   14000b5f5:	outs   dx,DWORD PTR ds:[rsi]
   14000b5f6:	jns    0x14000b639
   14000b5f8:	jo     0x14000b66a
   14000b5fa:	pop    rax
   14000b5fb:	rex.W
   14000b5fc:	gs ins BYTE PTR es:[rdi],dx
   14000b5fe:	jo     0x14000b665
   14000b600:	jb     0x14000b602
   14000b602:	add    BYTE PTR [rax],al
   14000b604:	add    BYTE PTR [rax],al
   14000b606:	add    BYTE PTR [rax],al
   14000b608:	push   r8
   14000b60a:	push   rax
   14000b60b:	pop    rax
   14000b60c:	push   rax
   14000b60d:	rex.WXB
   14000b60e:	rex.RXB
   14000b60f:	rex.W
   14000b610:	rex.RB
   14000b611:	rex.WR push rax
   14000b613:	rex.RB push r10
   14000b615:	pop    rdi
   14000b616:	rex.R
   14000b617:	rex.RB push r11
   14000b619:	push   rsp
   14000b61a:	push   rdx
   14000b61b:	rex.WRXB pop r9
   14000b61d:	and    BYTE PTR [rsi+0x61],ah
   14000b620:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x25783020
   14000b628:	js     0x14000b62a
   14000b62a:	add    BYTE PTR [rax],al
   14000b62c:	add    BYTE PTR [rax],al
   14000b62e:	add    BYTE PTR [rax],al
   14000b630:	rex.RXB
   14000b631:	gs je  0x14000b67d
   14000b634:	outs   dx,BYTE PTR ds:[rsi]
   14000b635:	jae    0x14000b6ab
   14000b637:	(bad)  
   14000b638:	outs   dx,BYTE PTR ds:[rsi]
   14000b639:	movsxd esp,DWORD PTR [rbp+0x4f]
   14000b63c:	data16 rex.B jo 0x14000b6b0
   14000b640:	pop    rax
   14000b641:	push   rax
   14000b642:	(bad)  
   14000b643:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b646:	addr32 gs rex.WRB (bad) 
   14000b64a:	outs   dx,BYTE PTR ds:[rsi]
   14000b64b:	(bad)  
   14000b64c:	addr32 gs jb 0x14000b650
   14000b650:	push   r8
   14000b652:	push   rax
   14000b653:	pop    rax
   14000b654:	push   rax
   14000b655:	rex.WXB
   14000b656:	rex.RXB
   14000b657:	rex.W
   14000b658:	rex.RB
   14000b659:	rex.WR push rax
   14000b65b:	rex.RB push r10
   14000b65d:	pop    rdi
   14000b65e:	rex.RXB
   14000b65f:	rex.RB push r12
   14000b661:	push   rax
   14000b662:	rex.WXB
   14000b663:	rex.RXB
   14000b664:	rex.WRB
   14000b665:	rex.RXB push r10
   14000b667:	and    BYTE PTR [rsi+0x61],ah
   14000b66a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x25783020
   14000b672:	js     0x14000b674
   14000b674:	add    BYTE PTR [rax],al
   14000b676:	add    BYTE PTR [rax],al
   14000b678:	pop    rdi
   14000b679:	pop    rdi
   14000b67a:	rex.B jo 0x14000b6ed
   14000b67d:	pop    rax
   14000b67e:	rex.W
   14000b67f:	gs ins BYTE PTR es:[rdi],dx
   14000b681:	jo     0x14000b6e8
   14000b683:	jb     0x14000b6c9
   14000b685:	rex.WR
   14000b686:	rex.WR cmp r15b,BYTE PTR [rdx]
   14000b689:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b68b:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b693:	add    BYTE PTR [rax],al
   14000b695:	add    BYTE PTR [rax],al
   14000b697:	add    BYTE PTR [rax+rbp*2+0x69],dh
   14000b69b:	jae    0x14000b6ca
   14000b69d:	ds ins DWORD PTR es:[rdi],dx
   14000b69f:	pop    rdi
   14000b6a0:	jo     0x14000b708
   14000b6a2:	outs   dx,BYTE PTR ds:[rsi]
   14000b6a3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b6a5:	imul   esi,DWORD PTR [rax+riz*1+0x66],0x656c6961
   14000b6ad:	cmp    ah,BYTE PTR fs:[rax]
   14000b6b0:	xor    BYTE PTR [rax+0x25],bh
   14000b6b3:	js     0x14000b6d5
   14000b6b5:	imul   ebp,DWORD PTR [rsi+0x20],0x7325
   14000b6bc:	add    BYTE PTR [rax],al
   14000b6be:	add    BYTE PTR [rax],al
   14000b6c0:	rex.XB push r10
   14000b6c2:	rex.R push rbx
   14000b6c4:	rex.B jo 0x14000b737
   14000b6c7:	pop    rax
   14000b6c8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b6ca:	outs   dx,BYTE PTR ds:[rsi]
   14000b6cb:	imul   sp,WORD PTR [rdi+0x3a],0x4c3a
   14000b6d1:	outs   dx,DWORD PTR ds:[rsi]
   14000b6d2:	(bad)  
   14000b6d3:	rex.XB outs dx,DWORD PTR fs:[rsi]
   14000b6d6:	outs   dx,BYTE PTR ds:[rsi]
   14000b6d7:	imul   sp,WORD PTR [rdi+0x20],0x6166
   14000b6dd:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b6e5:	and    eax,0x6e692078
   14000b6ea:	and    BYTE PTR [rip+0x73],ah        # 0x14000b763
   14000b6f0:	and    eax,0x79005300
   14000b6f5:	add    BYTE PTR [rbx+0x0],dh
   14000b6f8:	je     0x14000b6fa
   14000b6fa:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b6fe:	push   rdx
   14000b6ff:	add    BYTE PTR [rdi+0x0],ch
   14000b702:	outs   dx,DWORD PTR ds:[rsi]
   14000b703:	add    BYTE PTR [rax+rax*1+0x25],dh
   14000b707:	add    BYTE PTR [rax+rax*1+0x73],bl
   14000b70b:	add    BYTE PTR [rcx+0x0],bh
   14000b70e:	jae    0x14000b710
   14000b710:	je     0x14000b712
   14000b712:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b716:	xor    eax,DWORD PTR [rax]
   14000b718:	xor    al,BYTE PTR [rax]
   14000b71a:	pop    rsp
   14000b71b:	add    BYTE PTR [rdx+0x0],dh
   14000b71e:	add    BYTE PTR fs:[rbx+0x0],dh
   14000b722:	(bad)  
   14000b723:	add    BYTE PTR [rax+0x0],dh
   14000b726:	jo     0x14000b728
   14000b728:	js     0x14000b72a
   14000b72a:	push   0x6c006500
   14000b72f:	add    BYTE PTR [rax+0x0],dh
   14000b732:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b736:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000b73b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000b73f:	add    BYTE PTR [rdi+0x5f],ah
   14000b742:	rex.B jo 0x14000b7b5
   14000b745:	pop    rax
   14000b746:	rex.W
   14000b747:	gs ins BYTE PTR es:[rdi],dx
   14000b749:	jo     0x14000b7b0
   14000b74b:	jb     0x14000b791
   14000b74d:	rex.WR
   14000b74e:	rex.WR
   14000b74f:	rex.WB outs dx,BYTE PTR cs:[rsi]
   14000b752:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b75a:	and    BYTE PTR [rsi+0x61],ah
   14000b75d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b765:	and    eax,0x6e692078
   14000b76a:	and    BYTE PTR [rip+0x73],ah        # 0x14000b7e3
   14000b770:	rex.XB
   14000b771:	rex.B jo 0x14000b7e4
   14000b774:	pop    rax
   14000b775:	push   rax
   14000b776:	(bad)  
   14000b777:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b77a:	imul   r14,QWORD PTR gs:[ebx+0x74],0x65473a3a
   14000b784:	je     0x14000b7cf
   14000b786:	outs   dx,BYTE PTR ds:[rsi]
   14000b787:	jae    0x14000b7fd
   14000b789:	(bad)  
   14000b78a:	outs   dx,BYTE PTR ds:[rsi]
   14000b78b:	movsxd esp,DWORD PTR [rbp+0x4f]
   14000b78e:	data16 rex.WRXB (bad) 
   14000b791:	push   0x65
   14000b793:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000b797:	add    BYTE PTR [rsi+0x65],ch
   14000b79a:	ja     0x14000b7bc
   14000b79c:	rex.XB
   14000b79d:	rex.B jo 0x14000b810
   14000b7a0:	pop    rax
   14000b7a1:	push   rax
   14000b7a2:	(bad)  
   14000b7a3:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b7a6:	imul   r14,QWORD PTR gs:[ebx+0x74],0x69616620
   14000b7b0:	ins    BYTE PTR es:[rdi],dx
   14000b7b1:	gs cmp ah,BYTE PTR fs:[rax]
   14000b7b5:	xor    BYTE PTR [rax+0x25],bh
   14000b7b8:	js     0x14000b7da
   14000b7ba:	imul   ebp,DWORD PTR [rsi+0x20],0x43007325
   14000b7c1:	rex.B jo 0x14000b834
   14000b7c4:	pop    rax
   14000b7c5:	push   rax
   14000b7c6:	(bad)  
   14000b7c7:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b7ca:	imul   r14,QWORD PTR gs:[ebx+0x74],0x0
   14000b7d4:	add    BYTE PTR [rax],al
   14000b7d6:	add    BYTE PTR [rax],al
   14000b7d8:	rex.XB
   14000b7d9:	rex.B jo 0x14000b84c
   14000b7dc:	pop    rax
   14000b7dd:	push   rax
   14000b7de:	(bad)  
   14000b7df:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b7e2:	imul   r14,QWORD PTR gs:[ebx+0x74],0x64413a3a
   14000b7ec:	fs push rax
   14000b7ee:	(bad)  
   14000b7ef:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b7f2:	addr32 gs push rsp
   14000b7f5:	outs   dx,DWORD PTR ds:[rsi]
   14000b7f6:	imul   r14,QWORD PTR [rbx+0x74],0x0
   14000b7fe:	add    BYTE PTR [rax],al
   14000b800:	push   rsp
   14000b801:	push   rdx
   14000b802:	push   rbp
   14000b803:	and    BYTE PTR [rip+0x4962203d],r15b        # 0x18962d847
   14000b80a:	outs   dx,BYTE PTR ds:[rsi]
   14000b80b:	imul   r14,QWORD PTR [rbx+0x74],0x69616620
   14000b813:	ins    BYTE PTR es:[rdi],dx
   14000b814:	gs cmp ah,BYTE PTR fs:[rax]
   14000b818:	xor    BYTE PTR [rax+0x25],bh
   14000b81b:	js     0x14000b83d
   14000b81d:	imul   ebp,DWORD PTR [rsi+0x20],0x7325
   14000b824:	add    BYTE PTR [rax],al
   14000b826:	add    BYTE PTR [rax],al
   14000b828:	ins    DWORD PTR es:[rdi],dx
   14000b829:	pop    rdi
   14000b82a:	push   rax
   14000b82b:	(bad)  
   14000b82c:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b82f:	imul   r14,QWORD PTR gs:[ebx+0x74],0x6464412e
   14000b839:	and    BYTE PTR [rsi+0x61],ah
   14000b83c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b844:	and    eax,0x6e692078
   14000b849:	and    BYTE PTR [rip+0x73],ah        # 0x14000b8c2
   14000b84f:	add    BYTE PTR [rbx+0x41],al
   14000b852:	jo     0x14000b8c4
   14000b854:	pop    rax
   14000b855:	push   rax
   14000b856:	(bad)  
   14000b857:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b85a:	imul   r14,QWORD PTR gs:[ebx+0x74],0x65443a3a
   14000b864:	ins    BYTE PTR es:[rdi],dx
   14000b865:	gs je  0x14000b8cd
   14000b868:	push   rax
   14000b869:	(bad)  
   14000b86a:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b86d:	addr32 gs rex.RX jb 0x14000b8e1
   14000b872:	ins    DWORD PTR es:[rdi],dx
   14000b873:	imul   r14,QWORD PTR [rbx+0x74],0x4c414600
   14000b87b:	push   rbx
   14000b87c:	and    BYTE PTR [rip+0x5362203d],r15b        # 0x19362d8c0
   14000b883:	jne    0x14000b8e8
   14000b885:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b888:	jae    0x14000b8aa
   14000b88a:	data16 (bad) 
   14000b88c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000b894:	and    eax,0x6e692078
   14000b899:	and    BYTE PTR [rip+0x73],ah        # 0x14000b912
   14000b89f:	add    BYTE PTR [rdi+0x3d],al
   14000b8a2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b8a3:	mov    ah,0xc
   14000b8a5:	jns    0x14000b8f2
   14000b8a7:	rex.WX xchg rax,rax
   14000b8a9:	mov    esp,DWORD PTR [rbx-0x11]
   14000b8ac:	xlat   BYTE PTR ds:[rbx]
   14000b8ad:	xor    DWORD PTR [rbx+0x6b],edx
   14000b8b0:	add    BYTE PTR [rax],al
   14000b8b2:	add    BYTE PTR [rax],al
   14000b8b4:	ds ds cmp al,BYTE PTR ds:[rax]
   14000b8b9:	add    BYTE PTR [rax],al
   14000b8bb:	add    BYTE PTR [rsp+rdi*1],bh
   14000b8be:	cmp    al,0x3a
   14000b8c0:	add    BYTE PTR [rax],al
   14000b8c2:	add    BYTE PTR [rax],al
   14000b8c4:	rex.WB
   14000b8c5:	rex.WRX
   14000b8c6:	rex.RX cmp r8b,BYTE PTR [rax]
   14000b8c9:	add    BYTE PTR [rax],al
   14000b8cb:	add    BYTE PTR [rdi+0x52],dl
   14000b8ce:	rex.WRX cmp r8b,BYTE PTR [rax]
   14000b8d1:	add    BYTE PTR [rax],al
   14000b8d3:	add    BYTE PTR [rbp+0x52],al
   14000b8d6:	push   rdx
   14000b8d7:	cmp    al,BYTE PTR [rax]
   14000b8d9:	add    BYTE PTR [rax],al
   14000b8db:	add    BYTE PTR [rax],al
   14000b8dd:	add    BYTE PTR [rax],al
   14000b8df:	add    BYTE PTR [rcx],ah
   14000b8e1:	rex.RX
   14000b8e2:	push   r12
   14000b8e4:	rex.B
   14000b8e5:	and    QWORD PTR [rdx],r15
   14000b8e8:	add    BYTE PTR [rax],al
   14000b8ea:	add    BYTE PTR [rax],al
   14000b8ec:	rex.R push rbp
   14000b8ee:	rex.WRB push r8
   14000b8f0:	cmp    al,BYTE PTR [rax]
   14000b8f2:	add    BYTE PTR [rax],al
   14000b8f4:	add    BYTE PTR [rax],al
   14000b8f6:	add    BYTE PTR [rax],al
   14000b8f8:	push   rsp
   14000b8f9:	push   rbx
   14000b8fa:	push   r8
   14000b8fc:	rex.WB
   14000b8fd:	ds ds cmp al,BYTE PTR ds:[rax]
   14000b902:	add    BYTE PTR [rax],al
   14000b904:	add    BYTE PTR [rax],al
   14000b906:	add    BYTE PTR [rax],al
   14000b908:	push   rsp
   14000b909:	push   rbx
   14000b90a:	push   r8
   14000b90c:	rex.WB cmp al,0x3c
   14000b90f:	cmp    al,0x3a
   14000b911:	add    BYTE PTR [rax],al
   14000b913:	add    BYTE PTR [rax],al
   14000b915:	add    BYTE PTR [rax],al
   14000b917:	add    BYTE PTR [rbx+rdx*2+0x52],dl
   14000b91b:	push   rax
   14000b91c:	rex.XB
   14000b91d:	ds ds cmp al,BYTE PTR ds:[rax]
   14000b922:	add    BYTE PTR [rax],al
   14000b924:	add    BYTE PTR [rax],al
   14000b926:	add    BYTE PTR [rax],al
   14000b928:	push   rsp
   14000b929:	push   rbx
   14000b92a:	push   rdx
   14000b92b:	push   rax
   14000b92c:	rex.XB cmp al,0x3c
   14000b92f:	cmp    al,0x3a
   14000b931:	add    BYTE PTR [rax],al
   14000b933:	add    BYTE PTR [rdx+0x56],al
   14000b936:	push   rsp
   14000b937:	cmp    al,BYTE PTR [rax]
   14000b939:	add    BYTE PTR [rax],al
   14000b93b:	add    BYTE PTR [rax+0x45],dl
   14000b93e:	push   rdx
   14000b93f:	rex.RX cmp r8b,BYTE PTR [rax]
   14000b942:	add    BYTE PTR [rax],al
   14000b944:	push   rbp
   14000b945:	rex.WRX
   14000b946:	rex.WXB cmp al,BYTE PTR [r8]
   14000b949:	add    BYTE PTR [rax],al
   14000b94b:	add    BYTE PTR [rax],al
   14000b94d:	add    BYTE PTR [rax],al
   14000b94f:	add    BYTE PTR [rip+0x3a732573],ah        # 0x17a73dec8
   14000b955:	and    eax,0x73250073
   14000b95a:	cmp    ah,BYTE PTR [rip+0x73]        # 0x14000b9d3
   14000b960:	or     al,BYTE PTR [rax]
   14000b962:	add    BYTE PTR [rax],al
   14000b964:	add    BYTE PTR [rax],al
   14000b966:	add    BYTE PTR [rax],al
   14000b968:	(bad)
   14000b96d:	ins    BYTE PTR es:[rdi],dx
   14000b96e:	ins    BYTE PTR es:[rdi],dx
   14000b96f:	outs   dx,DWORD PTR ds:[rsi]
   14000b970:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b973:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000b97a:	add    BYTE PTR [rax],al
   14000b97c:	add    BYTE PTR [rax],al
   14000b97e:	add    BYTE PTR [rax],al
   14000b980:	push   rbx
   14000b981:	add    BYTE PTR [rcx+0x0],bh
   14000b984:	jae    0x14000b986
   14000b986:	je     0x14000b988
   14000b988:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b98c:	pop    rsp
   14000b98d:	add    BYTE PTR [rbx+0x0],al
   14000b990:	jne    0x14000b992
   14000b992:	jb     0x14000b994
   14000b994:	jb     0x14000b996
   14000b996:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b99a:	je     0x14000b99c
   14000b99c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b9a0:	outs   dx,BYTE PTR ds:[rsi]
   14000b9a1:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b9a5:	add    BYTE PTR [rdi+0x0],ch
   14000b9a8:	ins    BYTE PTR es:[rdi],dx
   14000b9a9:	add    BYTE PTR [rbx+0x0],dl
   14000b9ac:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14000b9b1:	add    BYTE PTR [rbx+0x0],al
   14000b9b4:	outs   dx,DWORD PTR ds:[rsi]
   14000b9b5:	add    BYTE PTR [rsi+0x0],ch
   14000b9b8:	je     0x14000b9ba
   14000b9ba:	jb     0x14000b9bc
   14000b9bc:	outs   dx,DWORD PTR ds:[rsi]
   14000b9bd:	add    BYTE PTR [rax+rax*1+0x5c],ch
   14000b9c1:	add    BYTE PTR [rax+rax*1+0x65],dl
   14000b9c5:	add    BYTE PTR [rdx+0x0],dh
   14000b9c8:	ins    DWORD PTR es:[rdi],dx
   14000b9c9:	add    BYTE PTR [rcx+0x0],ch
   14000b9cc:	outs   dx,BYTE PTR ds:[rsi]
   14000b9cd:	add    BYTE PTR [rcx+0x0],ah
   14000b9d0:	ins    BYTE PTR es:[rdi],dx
   14000b9d1:	add    BYTE PTR [rax],ah
   14000b9d3:	add    BYTE PTR [rbx+0x0],dl
   14000b9d6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b9da:	jbe    0x14000b9dc
   14000b9dc:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   14000b9e8:	rex.XB push r13
   14000b9ea:	je     0x14000ba55
   14000b9ec:	ins    BYTE PTR es:[rdi],dx
   14000b9ed:	jae    0x14000ba29
   14000b9ef:	cmp    al,BYTE PTR [rbx+0x72]
   14000b9f2:	gs (bad) 
   14000b9f4:	je     0x14000ba5b
   14000b9f6:	rex.WRX
   14000b9f7:	gs je  0x14000ba71
   14000b9fa:	outs   dx,DWORD PTR ds:[rsi]
   14000b9fb:	jb     0x14000ba68
   14000b9fd:	push   rbx
   14000b9fe:	gs jb  0x14000ba77
   14000ba01:	imul   esp,DWORD PTR [rbx+0x65],0x646953
   14000ba08:	outs   dx,BYTE PTR ds:[rsi]
   14000ba09:	gs ja  0x14000ba2c
   14000ba0c:	jo     0x14000ba5c
   14000ba0e:	gs je  0x14000ba88
   14000ba11:	outs   dx,DWORD PTR ds:[rsi]
   14000ba12:	jb     0x14000ba7f
   14000ba14:	push   rbx
   14000ba15:	gs jb  0x14000ba8e
   14000ba18:	imul   esp,DWORD PTR [rbx+0x65],0x20646953
   14000ba1f:	data16 (bad) 
   14000ba21:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000ba29:	and    eax,0x6e692078
   14000ba2e:	and    BYTE PTR [rip+0x73],ah        # 0x14000baa7
   14000ba34:	add    BYTE PTR [rax],al
   14000ba36:	add    BYTE PTR [rax],al
   14000ba38:	rex.XB push r13
   14000ba3a:	je     0x14000baa5
   14000ba3c:	ins    BYTE PTR es:[rdi],dx
   14000ba3d:	jae    0x14000ba79
   14000ba3f:	cmp    al,BYTE PTR [rbx+0x72]
   14000ba42:	gs (bad) 
   14000ba44:	je     0x14000baab
   14000ba46:	rex.B jo 0x14000bab9
   14000ba49:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ba4b:	outs   dx,BYTE PTR ds:[rsi]
   14000ba4c:	je     0x14000baaf
   14000ba4e:	imul   ebp,DWORD PTR [rsi+0x65],0x64695372
   14000ba55:	add    BYTE PTR [rax],al
   14000ba57:	add    BYTE PTR [rax+0x70],dh
   14000ba5a:	rex.B jo 0x14000bacd
   14000ba5d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ba5f:	outs   dx,BYTE PTR ds:[rsi]
   14000ba60:	je     0x14000bac3
   14000ba62:	imul   ebp,DWORD PTR [rsi+0x65],0x64695372
   14000ba69:	add    BYTE PTR [rax],al
   14000ba6b:	add    BYTE PTR [rax],al
   14000ba6d:	add    BYTE PTR [rax],al
   14000ba6f:	add    BYTE PTR [rbp+0x69],cl
   14000ba72:	jae    0x14000bae7
   14000ba74:	imul   ebp,DWORD PTR [rsi+0x67],0x72617020
   14000ba7b:	(bad)  
   14000ba7c:	ins    DWORD PTR es:[rdi],dx
   14000ba7d:	je     0x14000bae4
   14000ba7f:	jb     0x14000baa1
   14000ba81:	and    eax,0x6e692073
   14000ba86:	and    BYTE PTR [rip+0x73],ah        # 0x14000baff
   14000ba8c:	add    BYTE PTR [rax],al
   14000ba8e:	add    BYTE PTR [rax],al
   14000ba90:	rex.B ins BYTE PTR es:[rdi],dx
   14000ba92:	ins    BYTE PTR es:[rdi],dx
   14000ba93:	outs   dx,DWORD PTR ds:[rsi]
   14000ba94:	movsxd esp,DWORD PTR [rcx+0x74]
   14000ba97:	rex.B outs dx,BYTE PTR gs:[rsi]
   14000ba9a:	rex.WB outs dx,BYTE PTR fs:[rsi]
   14000ba9d:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000baa5:	push   rbx
   14000baa6:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x656c6961
   14000baae:	cmp    ah,BYTE PTR fs:[rax]
   14000bab1:	xor    BYTE PTR [rax+0x25],bh
   14000bab4:	js     0x14000bad6
   14000bab6:	imul   ebp,DWORD PTR [rsi+0x20],0x7325
   14000babd:	add    BYTE PTR [rax],al
   14000babf:	add    BYTE PTR [rbp+0x6e],dl
   14000bac2:	(bad)  
   14000bac3:	(bad)  
   14000bac4:	ins    BYTE PTR es:[rdi],dx
   14000bac5:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000baca:	outs   dx,DWORD PTR ds:[rsi]
   14000bacb:	jo     0x14000bb32
   14000bacd:	outs   dx,BYTE PTR ds:[rsi]
   14000bace:	and    BYTE PTR [rbx+rdx*2+0x20],dl
   14000bad2:	imul   esp,DWORD PTR [rbp+0x79],0x20
   14000bad6:	imul   ebp,DWORD PTR [rsi+0x20],0x4d4c4b48
   14000badd:	sub    al,0x20
   14000badf:	ins    BYTE PTR es:[rdi],dx
   14000bae0:	(bad)  
   14000bae1:	jae    0x14000bb57
   14000bae3:	gs jb  0x14000bb58
   14000bae6:	cmp    eax,0x58257830
   14000baeb:	add    BYTE PTR [rax],al
   14000baed:	add    BYTE PTR [rax],al
   14000baef:	add    BYTE PTR [rax+rax*1+0x53],dl
   14000baf3:	add    BYTE PTR [rcx+0x0],al
   14000baf6:	jo     0x14000baf8
   14000baf8:	jo     0x14000bafa
   14000bafa:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000bafe:	ins    DWORD PTR es:[rdi],dx
   14000baff:	add    BYTE PTR [rax+0x0],dh
   14000bb02:	(bad)  
   14000bb03:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000bb07:	add    BYTE PTR [rbp+0x6e],dl
   14000bb0a:	(bad)  
   14000bb0b:	(bad)  
   14000bb0c:	ins    BYTE PTR es:[rdi],dx
   14000bb0d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000bb12:	jb     0x14000bb79
   14000bb14:	(bad)  
   14000bb15:	and    BYTE PTR fs:[rcx+0x50],al
   14000bb19:	push   rax
   14000bb1a:	rex.XB
   14000bb1b:	rex.WRXB
   14000bb1c:	rex.WRB push r8
   14000bb1e:	push   r12
   14000bb20:	and    BYTE PTR [rbx+0x65],ch
   14000bb23:	jns    0x14000bb5f
   14000bb25:	and    BYTE PTR [rax],dh
   14000bb27:	js     0x14000bb4e
   14000bb29:	js     0x14000bb2b
   14000bb2b:	add    BYTE PTR [rax],al
   14000bb2d:	add    BYTE PTR [rax],al
   14000bb2f:	add    BYTE PTR [rbx+0x55],al
   14000bb32:	je     0x14000bb9d
   14000bb34:	ins    BYTE PTR es:[rdi],dx
   14000bb35:	jae    0x14000bb71
   14000bb37:	cmp    cl,BYTE PTR [rcx+0x6e]
   14000bb3a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000bb42:	add    BYTE PTR [rax],al
   14000bb44:	add    BYTE PTR [rax],al
   14000bb46:	add    BYTE PTR [rax],al
   14000bb48:	rex.XB push r13
   14000bb4a:	je     0x14000bbb5
   14000bb4c:	ins    BYTE PTR es:[rdi],dx
   14000bb4d:	cmp    bh,BYTE PTR [rdx]
   14000bb4f:	rex.XB jb 0x14000bbb7
   14000bb52:	(bad)  
   14000bb53:	je     0x14000bbba
   14000bb55:	push   rbx
   14000bb56:	jns    0x14000bbcb
   14000bb58:	je     0x14000bbbf
   14000bb5a:	ins    DWORD PTR es:[rdi],dx
   14000bb5b:	push   rbx
   14000bb5c:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x656c6961
   14000bb64:	cmp    ah,BYTE PTR fs:[rax]
   14000bb67:	xor    BYTE PTR [rax+0x25],bh
   14000bb6a:	js     0x14000bb8c
   14000bb6c:	imul   ebp,DWORD PTR [rsi+0x20],0x7325
   14000bb73:	add    BYTE PTR [rax],al
   14000bb75:	add    BYTE PTR [rax],al
   14000bb77:	add    BYTE PTR [rbx+0x55],al
   14000bb7a:	je     0x14000bbe5
   14000bb7c:	ins    BYTE PTR es:[rdi],dx
   14000bb7d:	jae    0x14000bbb9
   14000bb7f:	cmp    al,BYTE PTR [rbx+0x72]
   14000bb82:	gs (bad) 
   14000bb84:	je     0x14000bbeb
   14000bb86:	rex.B
   14000bb87:	fs ins DWORD PTR es:[rdi],dx
   14000bb89:	imul   ebp,DWORD PTR [rsi+0x53],0x66206469
   14000bb90:	(bad)  
   14000bb91:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000bb99:	and    eax,0x6e692078
   14000bb9e:	and    BYTE PTR [rip+0x73],ah        # 0x14000bc17
   14000bba4:	add    BYTE PTR [rax],al
   14000bba6:	add    BYTE PTR [rax],al
   14000bba8:	rex.WRX je 0x14000bbee
   14000bbab:	jb     0x14000bc12
   14000bbad:	(bad)  
   14000bbae:	je     0x14000bc15
   14000bbb0:	rex.B outs dx,BYTE PTR ds:[rsi]
   14000bbb2:	outs   dx,DWORD PTR ds:[rsi]
   14000bbb3:	outs   dx,BYTE PTR ds:[rsi]
   14000bbb4:	jns    0x14000bc23
   14000bbb6:	outs   dx,DWORD PTR ds:[rsi]
   14000bbb7:	jne    0x14000bc2c
   14000bbb9:	push   rbx
   14000bbba:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x656c6961
   14000bbc2:	cmp    ah,BYTE PTR fs:[rax]
   14000bbc5:	xor    BYTE PTR [rax+0x25],bh
   14000bbc8:	js     0x14000bbea
   14000bbca:	imul   ebp,DWORD PTR [rsi+0x20],0x43007325
   14000bbd1:	push   rbp
   14000bbd2:	je     0x14000bc3d
   14000bbd4:	ins    BYTE PTR es:[rdi],dx
   14000bbd5:	jae    0x14000bc11
   14000bbd7:	cmp    al,BYTE PTR [rbx+0x72]
   14000bbda:	gs (bad) 
   14000bbdc:	je     0x14000bc43
   14000bbde:	rex.WRX
   14000bbdf:	gs je  0x14000bc59
   14000bbe2:	outs   dx,DWORD PTR ds:[rsi]
   14000bbe3:	jb     0x14000bc50
   14000bbe5:	push   rbx
   14000bbe6:	gs jb  0x14000bc5f
   14000bbe9:	imul   esp,DWORD PTR [rbx+0x65],0x20646953
   14000bbf0:	data16 (bad) 
   14000bbf2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000bbfa:	and    eax,0x6e692078
   14000bbff:	and    BYTE PTR [rip+0x73],ah        # 0x14000bc78
   14000bc05:	add    BYTE PTR [rax],al
   14000bc07:	add    BYTE PTR [rbx+0x55],al
   14000bc0a:	je     0x14000bc75
   14000bc0c:	ins    BYTE PTR es:[rdi],dx
   14000bc0d:	jae    0x14000bc49
   14000bc0f:	cmp    al,BYTE PTR [rbx+0x72]
   14000bc12:	gs (bad) 
   14000bc14:	je     0x14000bc7b
   14000bc16:	push   rdx
   14000bc17:	fs jae 0x14000bc67
   14000bc1a:	jae    0x14000bc6f
   14000bc1c:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x656c6961
   14000bc24:	cmp    ah,BYTE PTR fs:[rax]
   14000bc27:	xor    BYTE PTR [rax+0x25],bh
   14000bc2a:	js     0x14000bc4c
   14000bc2c:	imul   ebp,DWORD PTR [rsi+0x20],0x7325
   14000bc33:	add    BYTE PTR [rax],al
   14000bc35:	add    BYTE PTR [rax],al
   14000bc37:	add    BYTE PTR [rbx+0x55],al
   14000bc3a:	je     0x14000bca5
   14000bc3c:	ins    BYTE PTR es:[rdi],dx
   14000bc3d:	jae    0x14000bc79
   14000bc3f:	cmp    al,BYTE PTR [rbx+0x72]
   14000bc42:	gs (bad) 
   14000bc44:	je     0x14000bcab
   14000bc46:	rex.B jo 0x14000bcb9
   14000bc49:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000bc4b:	outs   dx,BYTE PTR ds:[rsi]
   14000bc4c:	je     0x14000bcaf
   14000bc4e:	imul   ebp,DWORD PTR [rsi+0x65],0x64695372
   14000bc55:	and    BYTE PTR [rsi+0x61],ah
   14000bc58:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000bc60:	and    eax,0x6e692078
   14000bc65:	and    BYTE PTR [rip+0x73],ah        # 0x14000bcde
   14000bc6b:	add    BYTE PTR [rax],al
   14000bc6d:	add    BYTE PTR [rax],al
   14000bc6f:	add    BYTE PTR [rdx+rsi*2+0x61],dl
   14000bc73:	movsxd ebp,DWORD PTR [rbx+0x65]
   14000bc76:	jb     0x14000bca6
   14000bc78:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bc7a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000bc82:	and    BYTE PTR [rsi+0x61],ah
   14000bc85:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000bc8d:	and    eax,0x6e692078
   14000bc92:	and    BYTE PTR [rip+0x73],ah        # 0x14000bd0b
   14000bc98:	rex.XB
   14000bc99:	rex.WRXB jo 0x14000bd0f
   14000bc9c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000bc9e:	outs   dx,BYTE PTR ds:[rsi]
   14000bc9f:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x65736142
   14000bca7:	cmp    bh,BYTE PTR [rdx]
   14000bca9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bcab:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000bcb3:	and    BYTE PTR [rsi+0x61],ah
   14000bcb6:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7830203a
   14000bcbe:	and    eax,0x6e692078
   14000bcc3:	and    BYTE PTR [rip+0x43000073],ah        # 0x18300bd3c
   14000bcc9:	rex.WRXB jo 0x14000bd3f
   14000bccc:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000bcce:	outs   dx,BYTE PTR ds:[rsi]
   14000bccf:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x65736142
   14000bcd7:	cmp    bh,BYTE PTR [rdx]
   14000bcd9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bcdb:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000bce3:	sub    BYTE PTR [rcx],ch
   14000bce5:	and    BYTE PTR [rsi+0x61],ah
   14000bce8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   14000bcf0:	push   0x25783020
   14000bcf5:	xor    BYTE PTR [rax],bh
   14000bcf7:	js     0x14000bcf9
   14000bcf9:	add    BYTE PTR [rax],al
   14000bcfb:	add    BYTE PTR [rax],al
   14000bcfd:	add    BYTE PTR [rax],al
   14000bcff:	add    BYTE PTR [rbx+0x4f],al
   14000bd02:	jo     0x14000bd77
   14000bd04:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000bd06:	outs   dx,BYTE PTR ds:[rsi]
   14000bd07:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x65736142
   14000bd0f:	cmp    bh,BYTE PTR [rdx]
   14000bd11:	rex.R
   14000bd12:	gs jae 0x14000bd89
   14000bd15:	jb     0x14000bd86
   14000bd17:	jns    0x14000bd41
   14000bd19:	sub    DWORD PTR [rax],esp
   14000bd1b:	data16 (bad) 
   14000bd1d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   14000bd25:	push   0x25783020
   14000bd2a:	xor    BYTE PTR [rax],bh
   14000bd2c:	js     0x14000bd2e
   14000bd2e:	add    BYTE PTR [rax],al
   14000bd30:	scas   al,BYTE PTR es:[rdi]
   14000bd31:	add    eax,0x217d9917
   14000bd36:	retf   0xa04a
   14000bd39:	inc    DWORD PTR [rdi]
   14000bd3b:	iret   
   14000bd3c:	rex.WRXB fsubr QWORD PTR [r9]
   14000bd3f:	sub    eax,0x0
   14000bd44:	add    BYTE PTR [rax],al
   14000bd46:	add    BYTE PTR [rax],al
   14000bd48:	rol    BYTE PTR [rax],0x0
   14000bd4b:	add    BYTE PTR [rax],al
   14000bd4d:	add    BYTE PTR [rax],al
   14000bd4f:	rex.RX and r8b,BYTE PTR [rip+0x41993]        # 0x14004d6e9
   14000bd56:	add    BYTE PTR [rax],al
   14000bd58:	cld    
   14000bd59:	leave  
   14000bd5a:	add    BYTE PTR [rax],al
   14000bd5c:	add    DWORD PTR [rax],eax
   14000bd5e:	add    BYTE PTR [rax],al
   14000bd60:	sbb    al,0xca
   14000bd62:	add    BYTE PTR [rax],al
   14000bd64:	or     al,BYTE PTR [rax]
   14000bd66:	add    BYTE PTR [rax],al
   14000bd68:	push   rax
   14000bd69:	retf   0x0
   14000bd6c:	pop    rax
   14000bd6d:	add    BYTE PTR [rax],al
   14000bd6f:	add    BYTE PTR [rax],al
   14000bd71:	add    BYTE PTR [rax],al
   14000bd73:	add    BYTE PTR [rcx],al
   14000bd75:	add    BYTE PTR [rax],al
   14000bd77:	add    BYTE PTR [rdx],ah
   14000bd79:	add    eax,0x21993
   14000bd7e:	add    BYTE PTR [rax],al
   14000bd80:	or     cl,0x0
	...
   14000bd8b:	add    BYTE PTR [rip+0xffffffff90000000],al        # 0xd000bd91
   14000bd91:	leave  
   14000bd92:	add    BYTE PTR [rax],al
   14000bd94:	enter  0x0,0x0
   14000bd98:	add    BYTE PTR [rax],al
   14000bd9a:	add    BYTE PTR [rax],al
   14000bd9c:	add    DWORD PTR [rax],eax
   14000bd9e:	add    BYTE PTR [rax],al
   14000bda0:	and    al,BYTE PTR [rip+0x61993]        # 0x14006d739
   14000bda6:	add    BYTE PTR [rax],al
   14000bda8:	rex.R enter 0x0,0x2
   14000bdad:	add    BYTE PTR [rax],al
   14000bdaf:	add    BYTE PTR [rax+rcx*8+0x0],dh
   14000bdb3:	add    BYTE PTR [rdx],cl
   14000bdb5:	add    BYTE PTR [rax],al
   14000bdb7:	add    al,dl
   14000bdb9:	enter  0x0,0x78
   14000bdbd:	add    BYTE PTR [rax],al
   14000bdbf:	add    BYTE PTR [rax],al
   14000bdc1:	add    BYTE PTR [rax],al
   14000bdc3:	add    BYTE PTR [rcx],al
   14000bdc5:	add    BYTE PTR [rax],al
   14000bdc7:	add    BYTE PTR [rdx],ah
   14000bdc9:	add    eax,0x21993
   14000bdce:	add    BYTE PTR [rax],al
   14000bdd0:	rol    bh,1
	...
   14000bdda:	add    BYTE PTR [rax],al
   14000bddc:	add    eax,0xe0000000
   14000bde1:	mov    DWORD PTR [rax],0x4000
   14000bde7:	add    BYTE PTR [rax],al
   14000bde9:	add    BYTE PTR [rax],al
   14000bdeb:	add    BYTE PTR [rcx],al
   14000bded:	add    BYTE PTR [rax],al
   14000bdef:	add    BYTE PTR [rdx],ah
   14000bdf1:	add    eax,0x11993
   14000bdf6:	add    BYTE PTR [rax],al
   14000bdf8:	ins    BYTE PTR es:[rdi],dx
   14000bdf9:	mov    DWORD PTR [rax],0x0
   14000bdff:	add    BYTE PTR [rax],al
   14000be01:	add    BYTE PTR [rax],al
   14000be03:	add    BYTE PTR [rbx],al
   14000be05:	add    BYTE PTR [rax],al
   14000be07:	add    BYTE PTR [rax-0x39],bh
   14000be0a:	add    BYTE PTR [rax],al
   14000be0c:	and    BYTE PTR [rax],al
   14000be0e:	add    BYTE PTR [rax],al
   14000be10:	add    BYTE PTR [rax],al
   14000be12:	add    BYTE PTR [rax],al
   14000be14:	add    DWORD PTR [rax],eax
   14000be16:	add    BYTE PTR [rax],al
   14000be18:	and    al,BYTE PTR [rip+0x61993]        # 0x14006d7b1
   14000be1e:	add    BYTE PTR [rax],al
   14000be20:	ins    BYTE PTR es:[rdi],dx
   14000be21:	mov    BYTE PTR [rax],0x0
   14000be24:	add    al,BYTE PTR [rax]
   14000be26:	add    BYTE PTR [rax],al
   14000be28:	pushf  
   14000be29:	mov    BYTE PTR [rax],0x0
   14000be2c:	or     al,BYTE PTR [rax]
   14000be2e:	add    BYTE PTR [rax],al
   14000be30:	lock mov BYTE PTR [rax],0x0
   14000be34:	push   rax
   14000be35:	add    BYTE PTR [rax],al
   14000be37:	add    BYTE PTR [rax],al
   14000be39:	add    BYTE PTR [rax],al
   14000be3b:	add    BYTE PTR [rcx],al
   14000be3d:	add    BYTE PTR [rax],al
   14000be3f:	add    BYTE PTR [rdx],ah
   14000be41:	add    eax,0x31993
   14000be46:	add    BYTE PTR [rax],al
   14000be48:	fadd   st(5),st
	...
   14000be52:	add    BYTE PTR [rax],al
   14000be54:	(bad)  
   14000be55:	add    BYTE PTR [rax],al
   14000be57:	add    al,bh
   14000be59:	(bad)
   14000be5c:	and    BYTE PTR [rax],al
   14000be5e:	add    BYTE PTR [rax],al
   14000be60:	add    BYTE PTR [rax],al
   14000be62:	add    BYTE PTR [rax],al
   14000be64:	add    DWORD PTR [rax],eax
   14000be66:	add    BYTE PTR [rax],al
   14000be68:	and    al,BYTE PTR [rip+0x11993]        # 0x14001d801
   14000be6e:	add    BYTE PTR [rax],al
   14000be70:	cwde   
   14000be71:	(bad)
	...
   14000be7c:	add    eax,DWORD PTR [rax]
   14000be7e:	add    BYTE PTR [rax],al
   14000be80:	movabs al,ds:0x200000c5
   14000be89:	add    BYTE PTR [rax],al
   14000be8b:	add    BYTE PTR [rcx],al
   14000be8d:	add    BYTE PTR [rax],al
   14000be8f:	add    BYTE PTR [rdx],ah
   14000be91:	add    eax,0x11993
   14000be96:	add    BYTE PTR [rax],al
   14000be98:	mov    eax,0xc4
   14000be9d:	add    BYTE PTR [rax],al
   14000be9f:	add    BYTE PTR [rax],al
   14000bea1:	add    BYTE PTR [rax],al
   14000bea3:	add    BYTE PTR [rbx],al
   14000bea5:	add    BYTE PTR [rax],al
   14000bea7:	add    al,al
   14000bea9:	(bad)  
   14000beaa:	add    BYTE PTR [rax],al
   14000beac:	and    BYTE PTR [rax],al
   14000beae:	add    BYTE PTR [rax],al
   14000beb0:	add    BYTE PTR [rax],al
   14000beb2:	add    BYTE PTR [rax],al
   14000beb4:	add    DWORD PTR [rax],eax
   14000beb6:	add    BYTE PTR [rax],al
   14000beb8:	and    al,BYTE PTR [rip+0x41993]        # 0x14004d851
   14000bebe:	add    BYTE PTR [rax],al
   14000bec0:	add    ah,al
   14000bec2:	add    BYTE PTR [rax],al
   14000bec4:	add    DWORD PTR [rax],eax
   14000bec6:	add    BYTE PTR [rax],al
   14000bec8:	and    ah,al
   14000beca:	add    BYTE PTR [rax],al
   14000becc:	or     BYTE PTR [rax],al
   14000bece:	add    BYTE PTR [rax],al
   14000bed0:	push   rax
   14000bed1:	(bad)  
   14000bed2:	add    BYTE PTR [rax],al
   14000bed4:	and    BYTE PTR [rax],al
   14000bed6:	add    BYTE PTR [rax],al
   14000bed8:	add    BYTE PTR [rax],al
   14000beda:	add    BYTE PTR [rax],al
   14000bedc:	add    DWORD PTR [rax],eax
   14000bede:	add    BYTE PTR [rax],al
   14000bee0:	and    al,BYTE PTR [rip+0x21993]        # 0x14002d879
   14000bee6:	add    BYTE PTR [rax],al
   14000bee8:	rex.W ret 
   14000beea:	add    BYTE PTR [rax],al
   14000beec:	add    DWORD PTR [rax],eax
   14000beee:	add    BYTE PTR [rax],al
   14000bef0:	pop    rax
   14000bef1:	ret    
   14000bef2:	add    BYTE PTR [rax],al
   14000bef4:	add    al,0x0
   14000bef6:	add    BYTE PTR [rax],al
   14000bef8:	add    bl,0x0
   14000befb:	add    BYTE PTR [rax],ch
   14000befd:	add    BYTE PTR [rax],al
   14000beff:	add    BYTE PTR [rax],al
   14000bf01:	add    BYTE PTR [rax],al
   14000bf03:	add    BYTE PTR [rcx],al
   14000bf05:	add    BYTE PTR [rax],al
   14000bf07:	add    BYTE PTR [rdx],ah
   14000bf09:	add    eax,0x31993
   14000bf0e:	add    BYTE PTR [rax],al
   14000bf10:	pop    rax
   14000bf11:	retf   
	...
   14000bf1a:	add    BYTE PTR [rax],al
   14000bf1c:	or     DWORD PTR [rax],eax
   14000bf1e:	add    BYTE PTR [rax],al
   14000bf20:	jo     0x14000beed
   14000bf22:	add    BYTE PTR [rax],al
   14000bf24:	(bad)  
	...
   14000bf31:	add    BYTE PTR [rax],al
   14000bf33:	add    BYTE PTR [rcx],cl
   14000bf35:	cmp    ebx,DWORD PTR [rdi+0x55]
   14000bf3b:	add    BYTE PTR [rdx],al
   14000bf3d:	add    BYTE PTR [rax],al
   14000bf3f:	add    BYTE PTR [rbx],ah
   14000bf41:	add    BYTE PTR [rax],al
   14000bf43:	add    BYTE PTR [rax],dh
   14000bf45:	rol    BYTE PTR [rax],0x0
   14000bf48:	xor    BYTE PTR [rsi+0x0],ah
   14000bf4e:	add    BYTE PTR [rax],al
   14000bf50:	or     DWORD PTR [rbx],edi
   14000bf52:	lahf   
   14000bf53:	push   rbp
   14000bf54:	add    BYTE PTR [rax],al
   14000bf56:	add    BYTE PTR [rax],al
   14000bf58:	or     eax,0x84000000
   14000bf5d:	add    al,BYTE PTR [rax]
   14000bf5f:	add    BYTE PTR [rax-0x40],ch
   14000bf62:	add    BYTE PTR [rax],al
   14000bf64:	push   0xa6
	...
   14000bf8d:	add    BYTE PTR [rax],al
   14000bf8f:	add    BYTE PTR [rax+0x0],ah
	...
   14000bfe5:	add    BYTE PTR [rax],al
   14000bfe7:	add    BYTE PTR [rax],dl
   14000bfe9:	loopne 0x14000bfeb
   14000bfeb:	rex add DWORD PTR [rax],eax
	...
   14000bffe:	add    BYTE PTR [rax],al
   14000c000:	mov    eax,0x14000a4
   14000c005:	add    BYTE PTR [rax],al
   14000c007:	add    al,al
   14000c009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c00a:	add    BYTE PTR [rax+0x1],al
   14000c00d:	add    BYTE PTR [rax],al
   14000c00f:	add    BYTE PTR [rax],ch
   14000c011:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c012:	add    BYTE PTR [rax+0x1],al
   14000c015:	add    BYTE PTR [rax],al
   14000c017:	add    BYTE PTR [rcx+0x0],al
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	add    BYTE PTR [rax],al
   14000c01e:	add    BYTE PTR [rax],al
   14000c020:	add    BYTE PTR [rip+0x0],dh        # 0x14000c026
	...
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	push   rdx
   14000c031:	push   rbx
   14000c032:	rex.R push rbx
   14000c034:	push   rdx
   14000c035:	shr    ah,0x85
   14000c038:	hlt    
   14000c039:	or     BYTE PTR [rcx+0x1849854d],ch
   14000c03f:	push   rax
   14000c040:	xchg   ebx,eax
   14000c041:	push   rcx
   14000c042:	(bad)  
   14000c043:	and    eax,0x1
   14000c048:	push   rdx
   14000c049:	rex.R push rbx
   14000c04b:	push   rax
   14000c04c:	outs   dx,BYTE PTR ds:[rsi]
   14000c04d:	data16 cs jo 0x14000c0b5
   14000c051:	(bad)  
	...
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	rex.RXB
   14000c069:	rex.XB push r12
   14000c06b:	rex.WR add BYTE PTR [rax],r10b
   14000c06e:	add    BYTE PTR [rax],al
   14000c070:	in     al,dx
   14000c071:	add    al,BYTE PTR [rax]
   14000c073:	add    BYTE PTR [rsi],ch
   14000c075:	je     0x14000c0dc
   14000c077:	js     0x14000c0ed
   14000c079:	and    al,0x64
   14000c07b:	imul   eax,DWORD PTR [rax],0xf0000000
   14000c081:	adc    al,BYTE PTR [rax]
   14000c083:	add    BYTE PTR [rax],al
   14000c085:	jns    0x14000c087
   14000c087:	add    BYTE PTR [rsi],ch
   14000c089:	je     0x14000c0f0
   14000c08b:	js     0x14000c101
   14000c08d:	and    al,0x6d
   14000c08f:	outs   dx,BYTE PTR ds:[rsi]
   14000c090:	add    BYTE PTR [rax],al
   14000c092:	add    BYTE PTR [rax],al
   14000c094:	lock mov eax,DWORD PTR [rax]
   14000c097:	add    BYTE PTR [rbp+0x0],bh
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	cs je  0x14000c104
   14000c09f:	js     0x14000c115
   14000c0a1:	and    al,0x6d
   14000c0a3:	outs   dx,BYTE PTR ds:[rsi]
   14000c0a4:	and    al,0x30
   14000c0a6:	xor    BYTE PTR [rax],al
   14000c0a8:	jo     0x14000c036
   14000c0aa:	add    BYTE PTR [rax],al
   14000c0ac:	movabs al,ds:0x747865742e000002
   14000c0b5:	and    al,0x78
   14000c0b7:	add    BYTE PTR [rax],dl
   14000c0b9:	pop    QWORD PTR [rax]
   14000c0bb:	add    BYTE PTR [rdx+0x2],bh
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	cs je  0x14000c128
   14000c0c3:	js     0x14000c139
   14000c0c5:	and    al,0x79
   14000c0c7:	add    BYTE PTR fs:[rax],al
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	add    BYTE PTR [rax+0x4b80000],ah
   14000c0d2:	add    BYTE PTR [rax],al
   14000c0d4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000c0dd:	add    BYTE PTR [rax],al
   14000c0df:	add    BYTE PTR [rax+0x100000a4],bh
   14000c0e5:	add    BYTE PTR [rax],al
   14000c0e7:	add    BYTE PTR [rsi],ch
   14000c0e9:	xor    BYTE PTR [rax],dh
   14000c0eb:	movsxd esp,DWORD PTR [rsi+0x67]
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	enter  0xa4,0x0
   14000c0f4:	or     BYTE PTR [rax],al
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	cs rex.XB push r10
   14000c0fb:	push   rsp
   14000c0fc:	and    al,0x58
   14000c0fe:	rex.XB
   14000c0ff:	add    BYTE PTR [r8],al
   14000c102:	add    BYTE PTR [rax],al
   14000c104:	shl    BYTE PTR [rax+rax*1+0x800],1
   14000c10b:	add    BYTE PTR [rsi],ch
   14000c10d:	rex.XB push r10
   14000c10f:	push   rsp
   14000c110:	and    al,0x58
   14000c112:	rex.XB
   14000c113:	rex.B
   14000c114:	add    BYTE PTR [r8],al
   14000c117:	add    al,bl
   14000c119:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c11a:	add    BYTE PTR [rax],al
   14000c11c:	sbb    BYTE PTR [rax],al
   14000c11e:	add    BYTE PTR [rax],al
   14000c120:	cs rex.XB push r10
   14000c123:	push   rsp
   14000c124:	and    al,0x58
   14000c126:	rex.XB
   14000c127:	rex.WR add BYTE PTR [rax],r8b
   14000c12a:	add    BYTE PTR [rax],al
   14000c12c:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	adc    BYTE PTR [rax],al
   14000c132:	add    BYTE PTR [rax],al
   14000c134:	cs rex.XB push r10
   14000c137:	push   rsp
   14000c138:	and    al,0x58
   14000c13a:	rex.XB push r13
   14000c13c:	add    BYTE PTR [rax],al
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	add    BYTE PTR [rbp+0x80000],ah
   14000c146:	add    BYTE PTR [rax],al
   14000c148:	cs rex.XB push r10
   14000c14b:	push   rsp
   14000c14c:	and    al,0x58
   14000c14e:	rex.XB pop r10
   14000c150:	add    BYTE PTR [rax],al
   14000c152:	add    BYTE PTR [rax],al
   14000c154:	or     BYTE PTR [rbp+0x80000],ah
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	cs rex.XB push r10
   14000c15f:	push   rsp
   14000c160:	and    al,0x58
   14000c162:	rex.WB
   14000c163:	add    BYTE PTR [r8],al
   14000c166:	add    BYTE PTR [rax],al
   14000c168:	adc    BYTE PTR [rbp+0x80000],ah
   14000c16e:	add    BYTE PTR [rax],al
   14000c170:	cs rex.XB push r10
   14000c173:	push   rsp
   14000c174:	and    al,0x58
   14000c176:	rex.WB
   14000c177:	rex.B
   14000c178:	add    BYTE PTR [r8],al
   14000c17b:	add    BYTE PTR [rax],bl
   14000c17d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	or     BYTE PTR [rax],al
   14000c182:	add    BYTE PTR [rax],al
   14000c184:	cs rex.XB push r10
   14000c187:	push   rsp
   14000c188:	and    al,0x58
   14000c18a:	rex.WB pop r9
   14000c18c:	add    BYTE PTR [rax],al
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	and    BYTE PTR [rbp+0x80000],ah
   14000c196:	add    BYTE PTR [rax],al
   14000c198:	cs rex.XB push r10
   14000c19b:	push   rsp
   14000c19c:	and    al,0x58
   14000c19e:	rex.WB pop r10
   14000c1a0:	add    BYTE PTR [rax],al
   14000c1a2:	add    BYTE PTR [rax],al
   14000c1a4:	sub    BYTE PTR [rbp+0x1040000],ah
   14000c1aa:	add    BYTE PTR [rax],al
   14000c1ac:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000c1b5:	add    BYTE PTR [rax],al
   14000c1b7:	add    BYTE PTR [rax],dh
   14000c1b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	add    BYTE PTR [rdx],bl
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	cs jb  0x14000c227
   14000c1c3:	(bad)  
   14000c1c4:	je     0x14000c227
   14000c1c6:	add    BYTE PTR [rax],al
   14000c1c8:	xor    al,al
   14000c1ca:	add    BYTE PTR [rax],al
   14000c1cc:	mov    esp,0x2e000002
   14000c1d1:	jb     0x14000c237
   14000c1d3:	(bad)  
   14000c1d4:	je     0x14000c237
   14000c1d6:	and    al,0x7a
   14000c1d8:	jp     0x14000c254
   14000c1da:	fs (bad) 
   14000c1dc:	add    BYTE PTR [eax],al
   14000c1df:	add    al,dh
   14000c1e1:	ret    0x0
   14000c1e4:	and    BYTE PTR [rbx],cl
   14000c1e6:	add    BYTE PTR [rax],al
   14000c1e8:	cs js  0x14000c24f
   14000c1eb:	(bad)  
   14000c1ec:	je     0x14000c24f
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	adc    dh,cl
   14000c1f2:	add    BYTE PTR [rax],al
   14000c1f4:	fadd   QWORD PTR [rax]
   14000c1f6:	add    BYTE PTR [rax],al
   14000c1f8:	cs js  0x14000c25f
   14000c1fb:	(bad)  
   14000c1fc:	je     0x14000c25f
   14000c1fe:	and    al,0x78
   14000c200:	add    BYTE PTR [rax],al
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	lock (bad) 
   14000c206:	add    BYTE PTR [rax],al
   14000c208:	or     BYTE PTR [rax],al
   14000c20a:	add    BYTE PTR [rax],al
   14000c20c:	push   r12
   14000c20e:	rex.WR and al,0x5f
   14000c211:	pop    rdi
   14000c212:	(bad)  
   14000c213:	add    al,bh
   14000c215:	(bad)  
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	or     BYTE PTR [rax],al
   14000c21a:	add    BYTE PTR [rax],al
   14000c21c:	push   r12
   14000c21e:	rex.WR and al,0x5f
   14000c221:	pop    rdi
   14000c222:	ins    DWORD PTR es:[rdi],dx
   14000c223:	add    BYTE PTR [rax],al
   14000c225:	iret   
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	or     BYTE PTR [rax],al
   14000c22a:	add    BYTE PTR [rax],al
   14000c22c:	push   r12
   14000c22e:	rex.WR and al,0x5f
   14000c231:	pop    rdi
   14000c232:	jp     0x14000c234
   14000c234:	or     bh,cl
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	add    al,0x1
   14000c23a:	add    BYTE PTR [rax],al
   14000c23c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   14000c245:	add    BYTE PTR [rax],al
   14000c247:	add    BYTE PTR [rax+rdx*8],cl
   14000c24a:	add    BYTE PTR [rax],al
   14000c24c:	adc    al,0x0
   14000c24e:	add    BYTE PTR [rax],al
   14000c250:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000c259:	add    BYTE PTR [rax],al
   14000c25b:	add    BYTE PTR [rax],ah
   14000c25d:	rol    BYTE PTR [rax],1
   14000c25f:	add    BYTE PTR [rax+0x2e000004],bh
   14000c265:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000c26d:	add    BYTE PTR [rax],al
   14000c26f:	add    al,bl
   14000c271:	(bad)  
   14000c272:	add    BYTE PTR [rax],al
   14000c274:	(bad)  
   14000c275:	or     eax,DWORD PTR [rax]
   14000c277:	add    BYTE PTR [rsi],ch
   14000c279:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000c281:	add    BYTE PTR [rax],al
   14000c283:	add    BYTE PTR [rax],al
   14000c285:	loopne 0x14000c287
   14000c287:	add    al,al
   14000c289:	add    BYTE PTR [rax],al
   14000c28b:	add    BYTE PTR [rsi],ch
   14000c28d:	fs (bad) 
   14000c28f:	je     0x14000c2f2
   14000c291:	add    BYTE PTR [rax],al
   14000c293:	add    al,al
   14000c295:	loopne 0x14000c297
   14000c297:	add    BYTE PTR [rax+0x0],dh
   14000c29a:	add    BYTE PTR [rax],al
   14000c29c:	cs fs (bad) 
   14000c29f:	je     0x14000c302
   14000c2a1:	and    al,0x72
   14000c2a3:	add    BYTE PTR [rax-0x1f],al
   14000c2a6:	add    BYTE PTR [rax],al
   14000c2a8:	lods   al,BYTE PTR ds:[rsi]
   14000c2a9:	xor    BYTE PTR [rax],al
   14000c2ab:	add    BYTE PTR [rsi],ch
   14000c2ad:	(bad)  
   14000c2af:	jae    0x14000c2b1
   14000c2b1:	add    BYTE PTR [rax],al
   14000c2b3:	add    BYTE PTR [rax],al
   14000c2b5:	and    BYTE PTR [rcx],al
   14000c2b7:	add    BYTE PTR [rax+0x2e000006],dl
   14000c2bd:	jo     0x14000c323
   14000c2bf:	(bad)  
   14000c2c0:	je     0x14000c323
   14000c2c2:	add    BYTE PTR [rax],al
   14000c2c4:	add    BYTE PTR [rax],dh
   14000c2c6:	add    DWORD PTR [rax],eax
   14000c2c8:	(bad)  
   14000c2c9:	add    DWORD PTR [rax],eax
   14000c2cb:	add    BYTE PTR [rsi],ch
   14000c2cd:	jb     0x14000c342
   14000c2cf:	jb     0x14000c334
   14000c2d1:	and    al,0x30
   14000c2d3:	xor    DWORD PTR [rax],eax
   14000c2d5:	add    BYTE PTR [rax],al
   14000c2d7:	add    al,ah
   14000c2d9:	xor    DWORD PTR [rcx],eax
   14000c2db:	add    BYTE PTR [rax+0x12],bh
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	cs jb  0x14000c356
   14000c2e3:	jb     0x14000c348
   14000c2e5:	and    al,0x30
   14000c2e7:	xor    al,BYTE PTR [rax]
   14000c2e9:	add    BYTE PTR [rax],al
   14000c2eb:	add    BYTE PTR [rax],al
   14000c2ed:	add    BYTE PTR [rax],al
   14000c2ef:	add    BYTE PTR [rcx],al
   14000c2f1:	or     al,BYTE PTR [rax+rax*1]
   14000c2f4:	or     dh,BYTE PTR [rsi+rax*1]
   14000c2f7:	add    BYTE PTR [rdx],cl
   14000c2f9:	xor    al,BYTE PTR [rsi]
   14000c2fb:	jo     0x14000c2fe
   14000c2fd:	add    al,0x1
   14000c2ff:	add    BYTE PTR [rdx+rax*2],al
   14000c302:	add    BYTE PTR [rax],al
   14000c304:	add    DWORD PTR [rax+rcx*1],edx
   14000c307:	add    BYTE PTR [rsp+riz*2],dl
   14000c30a:	or     BYTE PTR [rax],al
   14000c30c:	adc    al,0x54
   14000c30e:	(bad)  
   14000c30f:	add    BYTE PTR [rsp+rsi*1],dl
   14000c312:	(bad)  
   14000c313:	add    BYTE PTR [rdx+rsi*1],dl
   14000c316:	adc    BYTE PTR [rax+0x1],dh
   14000c319:	adc    al,0x8
   14000c31b:	add    BYTE PTR [rsp+riz*2],dl
   14000c31e:	(bad)  
   14000c31f:	add    BYTE PTR [rsp+rdx*2],dl
   14000c322:	or     eax,0xc341400
   14000c327:	add    BYTE PTR [rdx+rdx*4],dl
   14000c32a:	adc    BYTE PTR [rax+0x19],dh
   14000c32d:	or     BYTE PTR es:[rax],al
   14000c330:	(bad)  
   14000c331:	push   rdx
   14000c332:	sbb    dh,al
   14000c334:	sbb    al,ah
   14000c336:	(bad)  
   14000c337:	rcl    BYTE PTR [rax+rax*8],1
   14000c33a:	adc    dh,BYTE PTR [rax+0x11]
   14000c33d:	(bad)  
   14000c33e:	adc    BYTE PTR [rax],dh
   14000c340:	rex.RX mov r8d,DWORD PTR [rax]
   14000c343:	add    al,ah
   14000c345:	mov    esi,0xffff0000
   14000c34a:	(bad)  
   14000c34b:	inc    DWORD PTR [rax]
   14000c34d:	add    BYTE PTR [rax],al
   14000c34f:	add    bh,bh
   14000c351:	(bad)  
   14000c352:	(bad)  
   14000c353:	inc    DWORD PTR [rax]
	...
   14000c35d:	add    BYTE PTR [rax],al
   14000c35f:	add    BYTE PTR [rcx],al
   14000c361:	add    BYTE PTR [rax],al
   14000c363:	add    BYTE PTR [rcx],al
   14000c365:	add    BYTE PTR [rax],al
   14000c367:	add    BYTE PTR [rbx+rax*8+0x0],ch
   14000c36b:	add    BYTE PTR [rax+0x0],al
	...
   14000c376:	add    BYTE PTR [rax],al
   14000c378:	jbe    0x14000c306
   14000c37a:	add    BYTE PTR [rax],al
   14000c37c:	cmp    BYTE PTR [rax],al
   14000c37e:	add    BYTE PTR [rax],al
   14000c380:	add    BYTE PTR [rdi],dl
   14000c382:	add    BYTE PTR [rax],al
   14000c384:	(bad)  
   14000c385:	(bad)  
   14000c386:	(bad)  
   14000c387:	call   QWORD PTR [rsi+0x17]
   14000c38a:	add    BYTE PTR [rax],al
   14000c38c:	add    BYTE PTR [rax],al
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	xchg   edx,eax
   14000c391:	(bad)  
   14000c392:	add    BYTE PTR [rax],al
   14000c394:	(bad)  
   14000c395:	(bad)  
   14000c396:	(bad)  
   14000c397:	push   QWORD PTR [rsi-0x74]
   14000c39a:	add    BYTE PTR [rax],al
   14000c39c:	add    BYTE PTR [rax],al
   14000c39e:	add    BYTE PTR [rax],al
   14000c3a0:	sbb    DWORD PTR [rdx],ecx
   14000c3a2:	add    al,BYTE PTR [rax]
   14000c3a4:	or     dh,BYTE PTR [rdx]
   14000c3a6:	(bad)  
   14000c3a7:	push   rax
   14000c3a8:	rex.RX mov r8d,DWORD PTR [rax]
   14000c3ab:	add    al,ah
   14000c3ad:	mov    esi,0x6010000
   14000c3b2:	add    al,BYTE PTR [rax]
   14000c3b4:	(bad)  
   14000c3b5:	xor    al,BYTE PTR [rdx]
   14000c3b7:	xor    BYTE PTR [rcx],bl
   14000c3b9:	and    DWORD PTR [rax],ecx
   14000c3bb:	add    BYTE PTR [rbx],dl
   14000c3bd:	xor    al,0x10
   14000c3bf:	add    BYTE PTR [rbx],dl
   14000c3c1:	xchg   edx,eax
   14000c3c2:	or     al,0xf0
   14000c3c4:	or     ah,al
   14000c3c6:	or     BYTE PTR [rax+0x7],dh
   14000c3c9:	(bad)  
   14000c3ca:	(bad)  
   14000c3cb:	push   rax
   14000c3cc:	mov    eax,0x4800008a
   14000c3d1:	add    BYTE PTR [rax],al
   14000c3d3:	add    BYTE PTR [rcx],al
   14000c3d5:	(bad)  
   14000c3d6:	(bad)  
   14000c3d7:	add    BYTE PTR [rsi],dl
   14000c3d9:	xor    al,0x12
   14000c3db:	add    BYTE PTR [rsi],dl
   14000c3dd:	mov    dl,0x12
   14000c3df:	loopne 0x14000c3f1
   14000c3e1:	jo     0x14000c3f2
   14000c3e3:	(bad)  
   14000c3e4:	sbb    DWORD PTR [rsi],esp
   14000c3e6:	or     BYTE PTR [rax],al
   14000c3e8:	(bad)  
   14000c3e9:	push   rdx
   14000c3ea:	sbb    dh,al
   14000c3ec:	sbb    al,ah
   14000c3ee:	(bad)  
   14000c3ef:	rcl    BYTE PTR [rax+rax*8],1
   14000c3f2:	adc    dh,BYTE PTR [rax+0x11]
   14000c3f5:	(bad)  
   14000c3f6:	adc    BYTE PTR [rax],dh
   14000c3f8:	rex.RX mov r8d,DWORD PTR [rax]
   14000c3fb:	add    BYTE PTR [rax-0xffff42],bh
   14000c401:	(bad)  
   14000c402:	(bad)  
   14000c403:	inc    DWORD PTR [rax]
   14000c405:	add    BYTE PTR [rax],al
   14000c407:	add    BYTE PTR [rax],al
   14000c409:	add    BYTE PTR [rax],al
   14000c40b:	add    BYTE PTR [rdi+0x100008c],dl
   14000c411:	add    BYTE PTR [rax],al
   14000c413:	add    BYTE PTR [rbx-0xffff74],ah
   14000c419:	(bad)  
   14000c41a:	(bad)  
   14000c41b:	inc    DWORD PTR [rax]
   14000c41d:	add    BYTE PTR [rax],al
   14000c41f:	add    BYTE PTR [rax],al
   14000c421:	add    BYTE PTR [rax],al
   14000c423:	add    BYTE PTR [rdx],al
   14000c425:	add    BYTE PTR [rax],al
   14000c427:	add    BYTE PTR [rbx],al
   14000c429:	add    BYTE PTR [rax],al
   14000c42b:	add    BYTE PTR [rcx],al
   14000c42d:	add    BYTE PTR [rax],al
   14000c42f:	add    BYTE PTR [rsp+rax*8],dh
   14000c432:	add    BYTE PTR [rax],al
   14000c434:	add    BYTE PTR [rax],al
	...
   14000c43f:	add    BYTE PTR [rdi+0x3800008c],ch
	...
   14000c44d:	add    BYTE PTR [rax],al
   14000c44f:	add    BYTE PTR [rax-0xffffe2],bl
   14000c455:	(bad)  
   14000c456:	(bad)  
   14000c457:	(bad)  
   14000c458:	in     al,dx
   14000c459:	(bad)  
   14000c45a:	add    BYTE PTR [rax],al
   14000c45c:	add    BYTE PTR [rax],al
   14000c45e:	add    BYTE PTR [rax],al
   14000c460:	(bad)  
   14000c461:	(bad)  
   14000c462:	add    BYTE PTR [rax],al
   14000c464:	add    DWORD PTR [rax],eax
   14000c466:	add    BYTE PTR [rax],al
   14000c468:	sbb    bl,BYTE PTR [rdi]
   14000c46a:	add    BYTE PTR [rax],al
   14000c46c:	add    al,BYTE PTR [rax]
   14000c46e:	add    BYTE PTR [rax],al
   14000c470:	rex.B (bad) 
   14000c472:	add    BYTE PTR [rax],al
   14000c474:	add    DWORD PTR [rax],eax
   14000c476:	add    BYTE PTR [rax],al
   14000c478:	rex.RX (bad) 
   14000c47a:	add    BYTE PTR [rax],al
   14000c47c:	add    BYTE PTR [rax],al
   14000c47e:	add    BYTE PTR [rax],al
   14000c480:	rex.WRX (bad) 
   14000c482:	add    BYTE PTR [rax],al
   14000c484:	(bad)  
   14000c485:	(bad)  
   14000c486:	(bad)  
   14000c487:	jmp    FWORD PTR [rdi+0x8c]
   14000c48d:	add    BYTE PTR [rax],al
   14000c48f:	add    BYTE PTR [rcx],bl
   14000c491:	or     al,BYTE PTR [rdx]
   14000c493:	add    BYTE PTR [rdx],cl
   14000c495:	xor    al,BYTE PTR [rsi]
   14000c497:	push   rax
   14000c498:	rex.RX mov r8d,DWORD PTR [rax]
   14000c49b:	add    BYTE PTR [rax+0x110000be],bh
   14000c4a1:	sbb    al,0x6
   14000c4a3:	add    BYTE PTR [rsp+riz*2],bl
   14000c4a6:	or     al,BYTE PTR [rax]
   14000c4a8:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000c4ab:	add    BYTE PTR [rdx+rdx*2],cl
   14000c4ae:	or     BYTE PTR [rax+0x46],dh
   14000c4b1:	mov    eax,DWORD PTR [rax]
   14000c4b3:	add    BYTE PTR [rax-0xffff42],dl
   14000c4b9:	(bad)  
   14000c4ba:	(bad)  
   14000c4bb:	call   rax
   14000c4bd:	mov    WORD PTR [rax],es
   14000c4bf:	add    ah,ch
   14000c4c1:	(bad)  
   14000c4c2:	add    BYTE PTR [rax],al
   14000c4c4:	(bad)  
   14000c4c5:	(bad)  
   14000c4c6:	(bad)  
   14000c4c7:	call   QWORD PTR [rip+0x20]        # 0x14000c4ed
   14000c4cd:	add    BYTE PTR [rax],al
   14000c4cf:	add    BYTE PTR [rcx],bh
   14000c4d1:	and    BYTE PTR [rax],al
   14000c4d3:	add    bh,bh
   14000c4d5:	(bad)  
   14000c4d6:	(bad)  
   14000c4d7:	inc    DWORD PTR [rcx]
   14000c4d9:	adc    eax,0x74150008
   14000c4de:	or     BYTE PTR [rax],al
   14000c4e0:	adc    eax,0x15000764
   14000c4e5:	xor    al,0x6
   14000c4e7:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0d61f
   14000c4ed:	clts   
   14000c4ef:	add    BYTE PTR [rdi],cl
   14000c4f1:	or     DWORD PTR fs:[rax],eax
   14000c4f4:	sysenter 
   14000c4f6:	or     BYTE PTR [rax],al
   14000c4f8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000c4fb:	jo     0x14000c4fe
   14000c4fd:	(bad)  
   14000c4fe:	(bad)  
   14000c4ff:	add    BYTE PTR [rdi],dl
   14000c501:	xor    al,0xb
   14000c503:	add    BYTE PTR [rdi],dl
   14000c505:	push   rdx
   14000c506:	adc    esp,eax
   14000c508:	adc    DWORD PTR [rax+0x10],esi
   14000c50b:	(bad)  
   14000c50c:	sbb    DWORD PTR [rax],esi
   14000c50e:	or     eax,DWORD PTR [rax]
   14000c510:	(bad)  
   14000c511:	xor    al,0x52
   14000c513:	add    BYTE PTR [rdi],bl
   14000c515:	add    DWORD PTR [rax+0x0],ecx
   14000c518:	adc    al,dh
   14000c51a:	(bad)  
   14000c51b:	loopne 0x14000c529
   14000c51d:	ror    BYTE PTR [rdx],1
   14000c51f:	ror    BYTE PTR [rax],0x70
   14000c522:	(bad)  
   14000c523:	(bad)  
   14000c524:	(bad)  
   14000c525:	push   rax
   14000c526:	add    BYTE PTR [rax],al
   14000c528:	mov    eax,0x3000008a
   14000c52d:	add    al,BYTE PTR [rax]
   14000c52f:	add    BYTE PTR [rcx],bl
   14000c531:	and    BYTE PTR [rdi],al
   14000c533:	add    BYTE PTR [rsi],cl
   14000c535:	add    DWORD PTR [rax+rax*1+0x7],ecx
   14000c539:	loopne 0x14000c540
   14000c53b:	jo     0x14000c541
   14000c53d:	(bad)  
   14000c53e:	add    edx,DWORD PTR [rax+0x2]
   14000c541:	xor    BYTE PTR [rax],al
   14000c543:	add    BYTE PTR [rax+0x5000008a],bh
   14000c549:	add    al,BYTE PTR [rax]
   14000c54b:	add    BYTE PTR [rcx],bl
   14000c54d:	(bad)  
   14000c54e:	or     DWORD PTR [rax],eax
   14000c550:	(bad)  
   14000c551:	fs push rsp
   14000c553:	add    BYTE PTR [rsi],bl
   14000c555:	xor    al,0x53
   14000c557:	add    BYTE PTR [rsi],bl
   14000c559:	add    DWORD PTR [rsi+0x0],ecx
   14000c55c:	(bad)  
   14000c55e:	or     eax,0x500be0
   14000c563:	add    BYTE PTR [rax+0x6000008a],bh
   14000c569:	add    al,BYTE PTR [rax]
   14000c56b:	add    BYTE PTR [rcx],al
   14000c56d:	sbb    eax,0x741d000c
   14000c572:	or     eax,DWORD PTR [rax]
   14000c574:	sbb    eax,0x1d000a64
   14000c579:	push   rsp
   14000c57a:	or     DWORD PTR [rax],eax
   14000c57c:	sbb    eax,0x1d000834
   14000c581:	xor    bl,BYTE PTR [rcx]
   14000c583:	lock (bad) 
   14000c585:	loopne 0x14000c59c
   14000c587:	rcl    BYTE PTR [rcx],0x13
   14000c58a:	add    al,BYTE PTR [rax]
   14000c58c:	or     dl,BYTE PTR [rdx+0x6]
   14000c58f:	xor    BYTE PTR [rsi-0x75],al
   14000c592:	add    BYTE PTR [rax],al
   14000c594:	push   0xffffffffff0000be
   14000c599:	(bad)  
   14000c59a:	(bad)  
   14000c59b:	jmp    rdx
   14000c59d:	mov    WORD PTR [rax],es
   14000c59f:	add    BYTE PTR [rax+0x32],cl
   14000c5a2:	add    BYTE PTR [rax],al
   14000c5a4:	(bad)  
   14000c5a5:	(bad)  
   14000c5a6:	(bad)  
   14000c5a7:	call   FWORD PTR [rsi+0x32]
   14000c5aa:	add    BYTE PTR [rax],al
   14000c5ac:	add    BYTE PTR [rax],al
   14000c5ae:	add    BYTE PTR [rax],al
   14000c5b0:	xor    al,BYTE PTR fs:[rax]
   14000c5b3:	add    bh,bh
   14000c5b5:	(bad)  
   14000c5b6:	(bad)  
   14000c5b7:	inc    DWORD PTR [rcx]
   14000c5b9:	clts   
   14000c5bb:	add    BYTE PTR [rdi],cl
   14000c5bd:	fs (bad) 
   14000c5bf:	add    BYTE PTR [rdi],cl
   14000c5c1:	xor    al,0x6
   14000c5c3:	add    BYTE PTR [rdi],cl
   14000c5c5:	xor    cl,BYTE PTR [rbx]
   14000c5c7:	jo     0x14000c5da
   14000c5c9:	sbb    BYTE PTR [rax+rax*1],al
   14000c5cc:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000c5cf:	add    BYTE PTR [rdx],cl
   14000c5d1:	push   rdx
   14000c5d2:	(bad)  
   14000c5d3:	jo     0x14000c61b
   14000c5d5:	mov    eax,DWORD PTR [rax]
   14000c5d7:	add    BYTE PTR [rax-0x42],al
   14000c5da:	add    BYTE PTR [rax],al
   14000c5dc:	(bad)  
   14000c5dd:	(bad)  
   14000c5de:	(bad)  
   14000c5df:	push   rsp
   14000c5e1:	mov    WORD PTR [rax],es
   14000c5e3:	add    BYTE PTR [rax],al
   14000c5e5:	add    BYTE PTR [rax],al
   14000c5e7:	add    BYTE PTR [rcx*4-0x10000],al
   14000c5ee:	(bad)  
   14000c5ef:	call   QWORD PTR [rcx*4+0x0]
   14000c5f6:	add    BYTE PTR [rax],al
   14000c5f8:	xchg   esp,eax
   14000c5f9:	xor    eax,DWORD PTR [rax]
   14000c5fb:	add    bh,bh
   14000c5fd:	(bad)  
   14000c5fe:	(bad)  
   14000c5ff:	(bad)  
   14000c600:	mov    ecx,0x1000033
   14000c605:	add    BYTE PTR [rax],al
   14000c607:	add    ah,bl
   14000c609:	xor    eax,DWORD PTR [rax]
   14000c60b:	add    BYTE PTR [rax],al
   14000c60d:	add    BYTE PTR [rax],al
   14000c60f:	add    al,dh
   14000c611:	xor    eax,DWORD PTR [rax]
   14000c613:	add    bh,bh
   14000c615:	(bad)  
   14000c616:	(bad)  
   14000c617:	push   rbp
   14000c619:	xor    eax,DWORD PTR [rax]
   14000c61b:	add    BYTE PTR [rdx],al
   14000c61d:	add    BYTE PTR [rax],al
   14000c61f:	add    dh,bh
   14000c621:	xor    eax,DWORD PTR [rax]
   14000c623:	add    bh,bh
   14000c625:	(bad)  
   14000c626:	(bad)  
   14000c627:	dec    DWORD PTR [rcx]
   14000c629:	add    al,0x1
   14000c62b:	add    BYTE PTR [rdx+riz*2],al
   14000c62e:	add    BYTE PTR [rax],al
   14000c630:	xchg   esi,eax
   14000c631:	mov    DWORD PTR [rax],eax
   14000c633:	add    BYTE PTR [rcx],al
   14000c635:	add    BYTE PTR [rax],al
   14000c637:	add    BYTE PTR [rax+0x34],al
   14000c63a:	add    BYTE PTR [rax],al
   14000c63c:	rex.WRX xor al,0x0
   14000c63f:	add    BYTE PTR [rsi],ah
   14000c641:	lea    eax,[rax]
   14000c643:	add    BYTE PTR [rsi+0x34],cl
   14000c646:	add    BYTE PTR [rax],al
   14000c648:	add    DWORD PTR [rsi],eax
   14000c64a:	add    al,BYTE PTR [rax]
   14000c64c:	(bad)  
   14000c64d:	xor    al,BYTE PTR [rdx]
   14000c64f:	push   rax
   14000c650:	sbb    DWORD PTR [rsi],esp
   14000c652:	or     BYTE PTR [rax],al
   14000c654:	(bad)  
   14000c655:	mov    dl,0x1a
   14000c657:	lock sbb al,ah
   14000c65a:	(bad)  
   14000c65b:	rcl    BYTE PTR [rax+rax*8],1
   14000c65e:	adc    dh,BYTE PTR [rax+0x11]
   14000c661:	(bad)  
   14000c662:	adc    BYTE PTR [rax],dh
   14000c664:	rex.RX mov r8d,DWORD PTR [rax]
   14000c667:	add    BYTE PTR [rax],bl
   14000c669:	mov    esi,0xffff0000
   14000c66e:	(bad)  
   14000c66f:	inc    DWORD PTR [rax]
   14000c671:	add    BYTE PTR [rax],al
   14000c673:	add    bh,bh
   14000c675:	(bad)  
   14000c676:	(bad)  
   14000c677:	inc    DWORD PTR [rax]
   14000c679:	add    BYTE PTR [rax],al
   14000c67b:	add    bh,bh
   14000c67d:	(bad)  
   14000c67e:	(bad)  
   14000c67f:	jmp    QWORD PTR [rdi-0x73]
   14000c682:	add    BYTE PTR [rax],al
   14000c684:	add    al,BYTE PTR [rax]
   14000c686:	add    BYTE PTR [rax],al
   14000c688:	add    BYTE PTR [rax],al
   14000c68a:	add    BYTE PTR [rax],al
   14000c68c:	add    al,BYTE PTR [rax]
   14000c68e:	add    BYTE PTR [rax],al
   14000c690:	add    BYTE PTR [rax],al
   14000c692:	add    BYTE PTR [rax],al
   14000c694:	add    al,BYTE PTR [rax]
   14000c696:	add    BYTE PTR [rax],al
   14000c698:	mov    cs,WORD PTR [rbp+0x0]
   14000c69e:	add    BYTE PTR [rax],al
   14000c6a0:	add    BYTE PTR [rax],al
   14000c6a2:	add    BYTE PTR [rax],al
   14000c6a4:	add    DWORD PTR [rax],eax
   14000c6a6:	add    BYTE PTR [rax],al
   14000c6a8:	add    DWORD PTR [rax],eax
   14000c6aa:	add    BYTE PTR [rax],al
   14000c6ac:	(bad)  
   14000c6ad:	mov    BYTE PTR [rax],0x0
   14000c6b0:	add    eax,DWORD PTR [rax]
   14000c6b2:	add    BYTE PTR [rax],al
   14000c6b4:	add    eax,DWORD PTR [rax]
   14000c6b6:	add    BYTE PTR [rax],al
   14000c6b8:	add    al,0x0
   14000c6ba:	add    BYTE PTR [rax],al
   14000c6bc:	add    DWORD PTR [rax],eax
   14000c6be:	add    BYTE PTR [rax],al
   14000c6c0:	fadd   st,st(6)
   14000c6c2:	add    BYTE PTR [rax],al
   14000c6c4:	add    BYTE PTR [rax],al
	...
   14000c6cf:	add    BYTE PTR [rbp+rcx*4+0x0],cl
   14000c6d3:	add    BYTE PTR [rax],bh
   14000c6d5:	add    BYTE PTR [rax],al
   14000c6d7:	add    BYTE PTR [rax+0x0],al
	...
   14000c6e2:	add    BYTE PTR [rax],al
   14000c6e4:	jae    0x14000c673
   14000c6e6:	add    BYTE PTR [rax],al
   14000c6e8:	cmp    BYTE PTR [rax],al
   14000c6ea:	add    BYTE PTR [rax],al
   14000c6ec:	add    BYTE PTR [rax],al
   14000c6ee:	add    BYTE PTR [rax],al
   14000c6f0:	mov    BYTE PTR [rax+rax*1],dh
   14000c6f3:	add    bh,bh
   14000c6f5:	(bad)  
   14000c6f6:	(bad)  
   14000c6f7:	push   rax
   14000c6f9:	xor    al,0x0
   14000c6fb:	add    BYTE PTR [rax],al
   14000c6fd:	add    BYTE PTR [rax],al
   14000c6ff:	add    BYTE PTR [rsi],cl
   14000c701:	xor    eax,0xffff0000
   14000c706:	(bad)  
   14000c707:	(bad)  
   14000c708:	cmp    esi,DWORD PTR [rip+0x20000]        # 0x14002c70e
   14000c70e:	add    BYTE PTR [rax],al
   14000c710:	movsxd esi,DWORD PTR [rip+0x30000]        # 0x14003c716
   14000c716:	add    BYTE PTR [rax],al
   14000c718:	jg     0x14000c74f
   14000c71a:	add    BYTE PTR [rax],al
   14000c71c:	add    al,BYTE PTR [rax]
   14000c71e:	add    BYTE PTR [rax],al
   14000c720:	mov    bh,0x35
   14000c722:	add    BYTE PTR [rax],al
   14000c724:	add    eax,0xf3000000
   14000c729:	add    BYTE PTR ss:[rax],al
   14000c72c:	add    al,BYTE PTR [rax]
   14000c72e:	add    BYTE PTR [rax],al
   14000c730:	cld    
   14000c731:	add    BYTE PTR ss:[rax],al
   14000c734:	(bad)  
   14000c735:	(bad)  
   14000c736:	(bad)  
   14000c737:	dec    DWORD PTR [rbp+rcx*4+0x0]
   14000c73b:	add    BYTE PTR [rax],al
   14000c73d:	add    BYTE PTR [rax],al
   14000c73f:	add    BYTE PTR [rcx],bl
   14000c741:	or     al,BYTE PTR [rdx]
   14000c743:	add    BYTE PTR [rdx],cl
   14000c745:	xor    al,BYTE PTR [rsi]
   14000c747:	push   rax
   14000c748:	rex.RX mov r8d,DWORD PTR [rax]
   14000c74b:	add    BYTE PTR [rax],bl
   14000c74d:	mov    esi,0x1c110000
   14000c752:	or     BYTE PTR [rax],al
   14000c754:	sbb    al,0x64
   14000c756:	or     eax,DWORD PTR [rax]
   14000c758:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000c75c:	adc    al,0x34
   14000c75e:	or     BYTE PTR [rax],al
   14000c760:	or     BYTE PTR [rdx+0x4],dl
   14000c763:	jo     0x14000c7ab
   14000c765:	mov    eax,DWORD PTR [rax]
   14000c767:	add    al,dh
   14000c769:	mov    ebp,0xffff0000
   14000c76e:	(bad)  
   14000c76f:	jmp    QWORD PTR [rax+0x8d]
   14000c775:	add    BYTE PTR [rax],al
   14000c777:	add    BYTE PTR [rax],ah
   14000c779:	(bad)  
   14000c77a:	add    BYTE PTR [rax],al
   14000c77c:	(bad)  
   14000c77d:	(bad)  
   14000c77e:	(bad)  
   14000c77f:	call   FWORD PTR [rdi+0x37]
   14000c782:	add    BYTE PTR [rax],al
   14000c784:	add    BYTE PTR [rax],al
   14000c786:	add    BYTE PTR [rax],al
   14000c788:	test   DWORD PTR [rdi],esi
   14000c78a:	add    BYTE PTR [rax],al
   14000c78c:	(bad)  
   14000c78d:	(bad)  
   14000c78e:	(bad)  
   14000c78f:	inc    DWORD PTR [rcx]
   14000c791:	sbb    DWORD PTR [rdx],ecx
   14000c793:	add    BYTE PTR [rcx],bl
   14000c795:	je     0x14000c7a0
   14000c797:	add    BYTE PTR [rcx],bl
   14000c799:	or     BYTE PTR fs:[rax],al
   14000c79c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000c7a0:	sbb    DWORD PTR [rsi+rax*1],esi
   14000c7a3:	add    BYTE PTR [rcx],bl
   14000c7a5:	xor    dl,BYTE PTR [rip+0xb3319e0]        # 0x14b33e18b
   14000c7ab:	add    BYTE PTR [rip+0x19001d34],ah        # 0x15900e4e5
   14000c7b1:	add    DWORD PTR [rax+rax*1],edx
   14000c7b4:	(bad)  
   14000c7b5:	lock or al,0xe0
   14000c7b8:	or     dl,al
   14000c7ba:	or     al,al
   14000c7bc:	(bad)  
   14000c7bd:	jo     0x14000c7c4
   14000c7bf:	(bad)  
   14000c7c0:	add    al,0x50
   14000c7c2:	add    BYTE PTR [rax],al
   14000c7c4:	push   rsp
   14000c7c5:	mov    eax,DWORD PTR [rax]
   14000c7c7:	add    al,cl
   14000c7c9:	mov    ebp,0x920000
   14000c7ce:	add    BYTE PTR [rax],al
   14000c7d0:	(bad)  
   14000c7d1:	(bad)  
   14000c7d2:	(bad)  
   14000c7d3:	push   QWORD PTR [rdx+0x8d]
   14000c7d9:	add    BYTE PTR [rax],al
   14000c7db:	add    BYTE PTR [rsi-0x7fffff73],bh
   14000c7e1:	cmp    DWORD PTR [rax],eax
   14000c7e3:	add    bh,bh
   14000c7e5:	(bad)  
   14000c7e6:	(bad)  
   14000c7e7:	call   FWORD PTR [rip+0x3a]        # 0x14000c827
   14000c7ed:	add    BYTE PTR [rax],al
   14000c7ef:	add    BYTE PTR [rbp+0x3b],ah
   14000c7f2:	add    BYTE PTR [rax],al
   14000c7f4:	add    DWORD PTR [rax],eax
   14000c7f6:	add    BYTE PTR [rax],al
   14000c7f8:	cmp    BYTE PTR [rbx],0x0
   14000c7fb:	add    BYTE PTR [rax],al
   14000c7fd:	add    BYTE PTR [rax],al
   14000c7ff:	add    BYTE PTR [rsp+rdi*1],dl
   14000c802:	add    BYTE PTR [rax],al
   14000c804:	(bad)  
   14000c805:	(bad)  
   14000c806:	(bad)  
   14000c807:	inc    DWORD PTR [rcx]
   14000c809:	sbb    DWORD PTR [rdx],ecx
   14000c80b:	add    BYTE PTR [rcx],bl
   14000c80d:	je     0x14000c818
   14000c80f:	add    BYTE PTR [rcx],bl
   14000c811:	or     BYTE PTR fs:[rax],al
   14000c814:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000c818:	sbb    DWORD PTR [rsi+rax*1],esi
   14000c81b:	add    BYTE PTR [rcx],bl
   14000c81d:	xor    dl,BYTE PTR [rip+0x93419f0]        # 0x14934e213
   14000c823:	add    BYTE PTR [rcx],bl
   14000c825:	add    DWORD PTR [rsp+rax*1],esi
   14000c828:	or     al,0xf0
   14000c82a:	or     ah,al
   14000c82c:	or     al,dl
   14000c82e:	(bad)  
   14000c82f:	rol    BYTE PTR [rax+rsi*2],0x3
   14000c833:	(bad)  
   14000c834:	add    dh,BYTE PTR [rax]
   14000c836:	add    BYTE PTR [rax],al
   14000c838:	push   rsp
   14000c839:	mov    eax,DWORD PTR [rax]
   14000c83b:	add    BYTE PTR [rax-0x6cffff43],ah
   14000c841:	and    DWORD PTR [rax],eax
   14000c843:	add    bh,bh
   14000c845:	(bad)  
   14000c846:	(bad)  
   14000c847:	call   rax
   14000c849:	lea    eax,[rax]
	...
   14000c85b:	add    bh,bh
   14000c85d:	(bad)  
   14000c85e:	(bad)  
   14000c85f:	push   rdi
   14000c861:	lea    eax,[rax]
   14000c863:	add    BYTE PTR [rbx],al
   14000c865:	add    BYTE PTR [rax],al
   14000c867:	add    BYTE PTR [rax],al
   14000c869:	add    BYTE PTR [rax],al
   14000c86b:	add    BYTE PTR [rbx],al
   14000c86d:	add    BYTE PTR [rax],al
   14000c86f:	add    BYTE PTR [rax],al
   14000c871:	add    BYTE PTR [rax],al
   14000c873:	add    BYTE PTR [rcx],al
   14000c875:	add    BYTE PTR [rax],al
   14000c877:	add    BYTE PTR [rcx],al
   14000c879:	add    BYTE PTR [rax],al
   14000c87b:	add    BYTE PTR [rdx],al
   14000c87d:	add    BYTE PTR [rax],al
   14000c87f:	add    BYTE PTR [rcx],al
   14000c881:	add    BYTE PTR [rax],al
   14000c883:	add    BYTE PTR [rax+rcx*8+0x40000],bl
   14000c88a:	add    BYTE PTR [rax],al
   14000c88c:	add    al,0x0
   14000c88e:	add    BYTE PTR [rax],al
   14000c890:	add    eax,0x1000000
   14000c895:	add    BYTE PTR [rax],al
   14000c897:	add    BYTE PTR [rax+0x400000c8],dh
	...
   14000c8a5:	add    BYTE PTR [rax],al
   14000c8a7:	add    ah,bl
   14000c8a9:	lea    eax,[rax]
   14000c8ab:	add    BYTE PTR [rax+0x0],cl
   14000c8ae:	add    BYTE PTR [rax],al
   14000c8b0:	add    BYTE PTR [rax],al
	...
   14000c8bb:	add    BYTE PTR [rbx],al
   14000c8bd:	mov    es,WORD PTR [rax]
   14000c8bf:	add    BYTE PTR [rax+0x0],cl
	...
   14000c8ce:	add    BYTE PTR [rax],al
   14000c8d0:	cmp    BYTE PTR [rip+0xffffffffffff0000],0xff        # 0x13fffc8d7
   14000c8d7:	jmp    QWORD PTR [rax+0x100003e]
   14000c8dd:	add    BYTE PTR [rax],al
   14000c8df:	add    bl,dh
   14000c8e1:	add    BYTE PTR ds:[rax],al
   14000c8e4:	add    BYTE PTR [rax],al
   14000c8e6:	add    BYTE PTR [rax],al
   14000c8e8:	out    dx,eax
   14000c8e9:	(bad)  
   14000c8ea:	add    BYTE PTR [rax],al
   14000c8ec:	(bad)  
   14000c8ed:	(bad)  
   14000c8ee:	(bad)  
   14000c8ef:	dec    DWORD PTR [rbp+0x4000040]
   14000c8f5:	add    BYTE PTR [rax],al
   14000c8f7:	add    bh,bl
   14000c8f9:	add    BYTE PTR [rax],al
   14000c8fc:	add    eax,DWORD PTR [rax]
   14000c8fe:	add    BYTE PTR [rax],al
   14000c900:	or     eax,0xff000041
   14000c905:	(bad)  
   14000c906:	(bad)  
   14000c907:	push   QWORD PTR [rax]
   14000c909:	add    BYTE PTR [r8],al
   14000c90c:	add    eax,DWORD PTR [rax]
   14000c90e:	add    BYTE PTR [rax],al
   14000c910:	in     al,0x41
   14000c912:	add    BYTE PTR [rax],al
   14000c914:	(bad)  
   14000c915:	(bad)  
   14000c916:	(bad)  
   14000c917:	(bad)  
   14000c918:	fmul   QWORD PTR [rbp+0x0]
   14000c91e:	add    BYTE PTR [rax],al
   14000c920:	sbb    DWORD PTR [rdx],ecx
   14000c922:	add    al,BYTE PTR [rax]
   14000c924:	or     dl,BYTE PTR [rdx+0x6]
   14000c927:	push   rax
   14000c928:	rex.RX mov r8d,DWORD PTR [rax]
   14000c92b:	add    BYTE PTR [rax+0x190000bd],ah
   14000c931:	and    eax,0x34130005
   14000c936:	or     al,BYTE PTR [rbx+rdx*1]
   14000c939:	add    DWORD PTR [rsi],eax
   14000c93b:	add    al,0x6
   14000c93d:	jo     0x14000c93f
   14000c93f:	add    BYTE PTR [rax+0x2000008a],bh
   14000c945:	and    BYTE PTR [rax],al
   14000c947:	add    BYTE PTR [rcx],bl
   14000c949:	sub    BYTE PTR [rdi],al
   14000c94b:	add    BYTE PTR [rdi],dl
   14000c94d:	xor    al,0x56
   14000c94f:	add    BYTE PTR [rdi],dl
   14000c951:	add    DWORD PTR [rax+0x0],edx
   14000c954:	or     BYTE PTR [rax+0x7],dh
   14000c957:	(bad)  
   14000c958:	(bad)  
   14000c959:	push   rax
   14000c95a:	add    BYTE PTR [rax],al
   14000c95c:	mov    eax,0x7000008a
   14000c961:	add    al,BYTE PTR [rax]
   14000c963:	add    BYTE PTR [rcx],bl
   14000c965:	xor    eax,DWORD PTR [rsi]
   14000c967:	add    BYTE PTR [rdx],bl
   14000c969:	add    DWORD PTR [rdi+0x4],ebx
   14000c96c:	add    eax,0x3600470
   14000c971:	xor    BYTE PTR [rdx],al
   14000c973:	push   rax
   14000c974:	push   rsp
   14000c975:	mov    eax,DWORD PTR [rax]
   14000c977:	add    BYTE PTR [rax-0x43],bh
   14000c97a:	add    BYTE PTR [rax],al
   14000c97c:	loop   0x14000c9a0
   14000c97e:	add    BYTE PTR [rax],al
   14000c980:	(bad)  
   14000c981:	(bad)  
   14000c982:	(bad)  
   14000c983:	jmp    QWORD PTR [rsi+rcx*4]
   14000c986:	add    BYTE PTR [rax],al
   14000c988:	add    BYTE PTR [rax],al
   14000c98a:	add    BYTE PTR [rax],al
   14000c98c:	xor    BYTE PTR [rsi+0x47580000],cl
   14000c992:	add    BYTE PTR [rax],al
   14000c994:	(bad)  
   14000c995:	(bad)  
   14000c996:	(bad)  
   14000c997:	jmp    FWORD PTR [rdi+0x47]
   14000c99d:	add    BYTE PTR [rax],al
   14000c99f:	add    BYTE PTR [rdx+0x49],dh
   14000c9a2:	add    BYTE PTR [rax],al
   14000c9a4:	add    DWORD PTR [rax],eax
   14000c9a6:	add    BYTE PTR [rax],al
   14000c9a8:	xchg   esi,eax
   14000c9a9:	rex.WB add BYTE PTR [r8],al
   14000c9ac:	add    BYTE PTR [rax],al
   14000c9ae:	add    BYTE PTR [rax],al
   14000c9b0:	add    al,0x4f
   14000c9b2:	add    BYTE PTR [rax],al
   14000c9b4:	(bad)  
   14000c9b5:	(bad)  
   14000c9b6:	(bad)  
   14000c9b7:	call   FWORD PTR [rcx]
   14000c9b9:	(bad)  
   14000c9ba:	or     eax,DWORD PTR [rax]
   14000c9bc:	sbb    eax,0x1d041534
   14000c9c1:	add    DWORD PTR [rdx],ecx
   14000c9c3:	add    al,0x10
   14000c9c5:	lock (bad) 
   14000c9c7:	loopne 0x14000c9d5
   14000c9c9:	ror    BYTE PTR [rdx],1
   14000c9cb:	ror    BYTE PTR [rax],0x70
   14000c9ce:	(bad)  
   14000c9cf:	(bad)  
   14000c9d0:	(bad)  
   14000c9d1:	push   rax
   14000c9d2:	add    BYTE PTR [rax],al
   14000c9d4:	mov    eax,0x4000008a
   14000c9d9:	and    BYTE PTR [rax],al
   14000c9db:	add    BYTE PTR [rcx],bl
   14000c9dd:	sub    eax,0x341b0007
   14000c9e2:	xchg   esi,eax
   14000c9e3:	add    BYTE PTR [rsi],cl
   14000c9e5:	add    DWORD PTR [rdx+0x5e00700],edx
   14000c9eb:	jo     0x14000c9f1
   14000c9ed:	(bad)  
   14000c9ee:	add    BYTE PTR [rax],al
   14000c9f0:	push   rsp
   14000c9f1:	mov    eax,DWORD PTR [rax]
   14000c9f3:	add    BYTE PTR [rax-0x43],dl
   14000c9f6:	add    BYTE PTR [rax],al
   14000c9f8:	add    DWORD PTR [rax+rax*1],0x0
   14000c9fc:	(bad)  
   14000c9fd:	(bad)  
   14000c9fe:	(bad)  
   14000c9ff:	inc    DWORD PTR [rdx-0x72]
   14000ca02:	add    BYTE PTR [rax],al
   14000ca04:	add    BYTE PTR [rax],al
   14000ca06:	add    BYTE PTR [rax],al
   14000ca08:	rex.WRX mov es,WORD PTR [rax]
   14000ca0b:	add    BYTE PTR [rcx],al
   14000ca0d:	add    BYTE PTR [rax],al
   14000ca0f:	add    BYTE PTR [rax],al
   14000ca11:	add    BYTE PTR [rax],al
   14000ca13:	add    BYTE PTR [rcx],al
   14000ca15:	add    BYTE PTR [rax],al
   14000ca17:	add    BYTE PTR [rax],al
   14000ca19:	add    BYTE PTR [rax],al
   14000ca1b:	add    BYTE PTR [rdx],al
   14000ca1d:	add    BYTE PTR [rax],al
   14000ca1f:	add    BYTE PTR [rdx],al
   14000ca21:	add    BYTE PTR [rax],al
   14000ca23:	add    BYTE PTR [rbx],al
   14000ca25:	add    BYTE PTR [rax],al
   14000ca27:	add    BYTE PTR [rcx],al
   14000ca29:	add    BYTE PTR [rax],al
   14000ca2b:	add    BYTE PTR [rax],dh
   14000ca2d:	retf   0x0
   14000ca30:	add    BYTE PTR [rax],al
	...
   14000ca3b:	add    BYTE PTR [rdx-0x72],bl
   14000ca3e:	add    BYTE PTR [rax],al
   14000ca40:	rex.W add BYTE PTR [rax],al
	...
   14000ca4f:	add    al,bh
   14000ca51:	push   rax
   14000ca52:	add    BYTE PTR [rax],al
   14000ca54:	(bad)  
   14000ca55:	(bad)  
   14000ca56:	(bad)  
   14000ca57:	push   QWORD PTR [rip+0x51]        # 0x14000caae
   14000ca5d:	add    BYTE PTR [rax],al
   14000ca5f:	add    BYTE PTR [rcx+rdx*2+0x0],al
   14000ca63:	add    BYTE PTR [rcx],al
   14000ca65:	add    BYTE PTR [rax],al
   14000ca67:	add    cl,al
   14000ca69:	push   rcx
   14000ca6a:	add    BYTE PTR [rax],al
   14000ca6c:	add    BYTE PTR [rax],al
   14000ca6e:	add    BYTE PTR [rax],al
   14000ca70:	fcom   DWORD PTR [rcx+0x0]
   14000ca73:	add    bh,bh
   14000ca75:	(bad)  
   14000ca76:	(bad)  
   14000ca77:	jmp    rdx
   14000ca79:	push   rcx
   14000ca7a:	add    BYTE PTR [rax],al
   14000ca7c:	add    al,BYTE PTR [rax]
   14000ca7e:	add    BYTE PTR [rax],al
   14000ca80:	sub    DWORD PTR [rdx+0x0],edx
   14000ca83:	add    BYTE PTR [rcx],al
   14000ca85:	add    BYTE PTR [rax],al
   14000ca87:	add    BYTE PTR [rdx+rdx*2+0x0],bl
   14000ca8e:	add    BYTE PTR [rax],al
   14000ca90:	mov    bl,0x52
   14000ca92:	add    BYTE PTR [rax],al
   14000ca94:	(bad)  
   14000ca95:	(bad)  
   14000ca96:	(bad)  
   14000ca97:	call   FWORD PTR [rdx-0x72]
   14000ca9a:	add    BYTE PTR [rax],al
   14000ca9c:	add    BYTE PTR [rax],al
   14000ca9e:	add    BYTE PTR [rax],al
   14000caa0:	sbb    DWORD PTR [rdx],ecx
   14000caa2:	add    al,BYTE PTR [rax]
   14000caa4:	or     dl,BYTE PTR [rdx+0x6]
   14000caa7:	push   rax
   14000caa8:	rex.RX mov r8d,DWORD PTR [rax]
   14000caab:	add    BYTE PTR [rax-0x43],dl
   14000caae:	add    BYTE PTR [rax],al
   14000cab0:	sbb    DWORD PTR [rcx+rcx*1],ebp
   14000cab3:	add    BYTE PTR [rbx],bl
   14000cab5:	xor    al,0x60
   14000cab7:	add    DWORD PTR [rbx],ebx
   14000cab9:	add    DWORD PTR [rdx+0x1],ebx
   14000cabc:	or     al,0xf0
   14000cabe:	or     ah,al
   14000cac0:	or     BYTE PTR [rax+0x7],dh
   14000cac3:	(bad)  
   14000cac4:	(bad)  
   14000cac5:	push   rax
   14000cac6:	add    BYTE PTR [rax],al
   14000cac8:	mov    eax,0xc000008a
   14000cacd:	or     al,BYTE PTR [rax]
   14000cacf:	add    BYTE PTR [rcx],bl
   14000cad1:	adc    eax,DWORD PTR [rcx]
   14000cad3:	add    BYTE PTR [rdx+rax*4],al
   14000cad6:	add    BYTE PTR [rax],al
   14000cad8:	mov    eax,0x3000008a
   14000cadd:	add    BYTE PTR [rax],al
   14000cadf:	add    BYTE PTR [rcx],bl
   14000cae1:	adc    eax,0xb2060002
   14000cae6:	add    dh,BYTE PTR [rax]
   14000cae8:	mov    eax,0x5000008a
   14000caed:	add    BYTE PTR [rax],al
   14000caef:	add    BYTE PTR [rcx],bl
   14000caf1:	sbb    eax,DWORD PTR [rdx]
   14000caf3:	add    BYTE PTR [rip+0xffffffffb85006b2],cl        # 0xf850d1ab
   14000caf9:	mov    al,BYTE PTR [rax]
   14000cafb:	add    BYTE PTR [rax+0x0],dl
   14000cafe:	add    BYTE PTR [rax],al
   14000cb00:	sbb    DWORD PTR [rdx],ebx
   14000cb02:	add    DWORD PTR [rax],eax
   14000cb04:	or     esp,DWORD PTR [rdx-0x75480000]
   14000cb0a:	add    BYTE PTR [rax],al
   14000cb0c:	add    BYTE PTR [rax],al
   14000cb0f:	add    BYTE PTR [rcx],bl
   14000cb11:	sbb    BYTE PTR [rcx],al
   14000cb13:	add    BYTE PTR [rcx],cl
   14000cb15:	movabs ds:0x4000008ab80000,al
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	sbb    DWORD PTR [rip+0xffffffff92060002],edx        # 0xd206cb28
   14000cb26:	add    dh,BYTE PTR [rax]
   14000cb28:	mov    eax,0x4000008a
   14000cb2d:	add    BYTE PTR [rax],al
   14000cb2f:	add    BYTE PTR [rcx],bl
   14000cb31:	cmp    ecx,DWORD PTR [rbx]
   14000cb33:	add    BYTE PTR [rdx],ch
   14000cb35:	fs pop rdx
   14000cb37:	add    BYTE PTR [rsi],ah
   14000cb39:	xor    al,0x58
   14000cb3b:	add    BYTE PTR [rcx],bl
   14000cb3d:	add    DWORD PTR [rdx+0x0],edx
   14000cb40:	or     esp,eax
   14000cb42:	or     eax,edx
   14000cb44:	(bad)  
   14000cb45:	rol    BYTE PTR [rip+0x500470],0x0        # 0x14050cfbc
   14000cb4c:	push   rsp
   14000cb4d:	mov    eax,DWORD PTR [rax]
   14000cb4f:	add    BYTE PTR [rax],cl
   14000cb51:	mov    edi,0x2820000
   14000cb56:	add    BYTE PTR [rax],al
   14000cb58:	(bad)  
   14000cb59:	(bad)  
   14000cb5a:	(bad)  
   14000cb5b:	(bad)  
   14000cb5c:	jnp    0x14000caec
   14000cb5e:	add    BYTE PTR [rax],al
   14000cb60:	add    BYTE PTR [rax],al
   14000cb62:	add    BYTE PTR [rax],al
   14000cb64:	xchg   DWORD PTR [rsi+0x10000],ecx
   14000cb6a:	add    BYTE PTR [rax],al
   14000cb6c:	xchg   ebx,eax
   14000cb6d:	mov    es,WORD PTR [rax]
   14000cb6f:	add    BYTE PTR [rax-0xffffa7],dh
   14000cb75:	(bad)  
   14000cb76:	(bad)  
   14000cb77:	push   rdi
   14000cb79:	pop    rcx
   14000cb7a:	add    BYTE PTR [rax],al
   14000cb7c:	add    BYTE PTR [rax],al
   14000cb7e:	add    BYTE PTR [rax],al
   14000cb80:	std    
   14000cb81:	pop    rcx
   14000cb82:	add    BYTE PTR [rax],al
   14000cb84:	add    DWORD PTR [rax],eax
   14000cb86:	add    BYTE PTR [rax],al
   14000cb88:	rcr    BYTE PTR [rbp+0x0],0x0
   14000cb8c:	add    al,BYTE PTR [rax]
   14000cb8e:	add    BYTE PTR [rax],al
   14000cb90:	iret   
   14000cb91:	pop    rsi
   14000cb92:	add    BYTE PTR [rax],al
   14000cb94:	add    DWORD PTR [rax],eax
   14000cb96:	add    BYTE PTR [rax],al
   14000cb98:	adc    DWORD PTR [rdi+0x0],ebx
   14000cb9b:	add    BYTE PTR [rdx],al
   14000cb9d:	add    BYTE PTR [rax],al
   14000cb9f:	add    BYTE PTR [rbp+0x5f],dl
   14000cba2:	add    BYTE PTR [rax],al
   14000cba4:	add    DWORD PTR [rax],eax
   14000cba6:	add    BYTE PTR [rax],al
   14000cba8:	out    0x5f,eax
   14000cbaa:	add    BYTE PTR [rax],al
   14000cbac:	add    BYTE PTR [rax],al
   14000cbae:	add    BYTE PTR [rax],al
   14000cbb0:	(bad)  
   14000cbb1:	(bad)  
   14000cbb2:	add    BYTE PTR [rax],al
   14000cbb4:	(bad)  
   14000cbb5:	(bad)  
   14000cbb6:	(bad)  
   14000cbb7:	dec    DWORD PTR [rcx]
   14000cbb9:	or     al,BYTE PTR [rdx]
   14000cbbb:	add    BYTE PTR [rdx],cl
   14000cbbd:	push   rdx
   14000cbbe:	(bad)  
   14000cbbf:	xor    BYTE PTR [rsi+0x1000089],dl
   14000cbc5:	add    BYTE PTR [rax],al
   14000cbc7:	add    BYTE PTR [rip+0x35000061],ah        # 0x17500cc2e
   14000cbcd:	(bad)  
   14000cbce:	add    BYTE PTR [rax],al
   14000cbd0:	add    DWORD PTR [rax],eax
   14000cbd2:	add    BYTE PTR [rax],al
   14000cbd4:	xor    eax,0x1000061
   14000cbd9:	sbb    al,0x8
   14000cbdb:	add    BYTE PTR [rsp+riz*2],bl
   14000cbde:	(bad)  
   14000cbdf:	add    BYTE PTR [rsp+rsi*1],bl
   14000cbe2:	(bad)  
   14000cbe3:	add    BYTE PTR [rdx+rsi*8],bl
   14000cbe6:	adc    ah,al
   14000cbe8:	adc    BYTE PTR [rax+0xf],dh
   14000cbeb:	push   rax
   14000cbec:	sbb    DWORD PTR [rdi],ebx
   14000cbee:	add    eax,0x4a340d00
   14000cbf3:	add    BYTE PTR [rip+0x6004801],cl        # 0x1460113fa
   14000cbf9:	jo     0x14000cbfb
   14000cbfb:	add    BYTE PTR [rax+0x3000008a],bh
   14000cc01:	add    al,BYTE PTR [rax]
   14000cc03:	add    BYTE PTR [rcx],al
   14000cc05:	adc    eax,0x74150008
   14000cc0a:	or     DWORD PTR [rax],eax
   14000cc0c:	adc    eax,0x15000864
   14000cc11:	xor    al,0x6
   14000cc13:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0dd4b
   14000cc19:	adc    cl,BYTE PTR [rax]
   14000cc1b:	add    BYTE PTR [rdx],dl
   14000cc1d:	push   rsp
   14000cc1e:	or     al,0x0
   14000cc20:	adc    dh,BYTE PTR [rbx+rcx*1]
   14000cc23:	add    BYTE PTR [rdx],dl
   14000cc25:	push   rdx
   14000cc26:	(bad)  
   14000cc27:	loopne 0x14000cc35
   14000cc29:	jo     0x14000cc36
   14000cc2b:	(bad)  
   14000cc2c:	add    DWORD PTR [rax],edx
   14000cc2e:	or     BYTE PTR [rax],al
   14000cc30:	adc    BYTE PTR [rsp+rcx*1],dh
   14000cc33:	add    BYTE PTR [rax],dl
   14000cc35:	xor    cl,BYTE PTR [rax+rsi*8]
   14000cc38:	or     ah,al
   14000cc3a:	or     BYTE PTR [rax+0x7],dh
   14000cc3d:	(bad)  
   14000cc3e:	(bad)  
   14000cc3f:	push   rax
   14000cc40:	add    DWORD PTR [rax],ebx
   14000cc42:	or     al,BYTE PTR [rax]
   14000cc44:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   14000cc48:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000cc4c:	sbb    BYTE PTR [rax+rcx*1],dh
   14000cc4f:	add    BYTE PTR [rax],bl
   14000cc51:	xor    dl,BYTE PTR [rax+rsi*8]
   14000cc54:	adc    ah,al
   14000cc56:	adc    BYTE PTR [rax+0x1],dh
   14000cc59:	adc    cl,BYTE PTR [rax]
   14000cc5b:	add    BYTE PTR [rdx],dl
   14000cc5d:	push   rsp
   14000cc5e:	or     al,BYTE PTR [rax]
   14000cc60:	adc    dh,BYTE PTR [rcx+rcx*1]
   14000cc63:	add    BYTE PTR [rdx],dl
   14000cc65:	xor    cl,BYTE PTR [rsi]
   14000cc67:	loopne 0x14000cc75
   14000cc69:	jo     0x14000cc76
   14000cc6b:	(bad)  
   14000cc6c:	add    DWORD PTR [rdi],ecx
   14000cc6e:	(bad)  
   14000cc6f:	add    BYTE PTR [rdi],cl
   14000cc71:	or     BYTE PTR fs:[rax],al
   14000cc74:	sysenter 
   14000cc76:	(bad)  
   14000cc77:	add    BYTE PTR [rdi],cl
   14000cc79:	xor    cl,BYTE PTR [rbx]
   14000cc7b:	jo     0x14000cc7e
   14000cc7d:	sbb    DWORD PTR [rdx],ecx
   14000cc7f:	add    BYTE PTR [rcx],bl
   14000cc81:	in     al,0x9
   14000cc83:	add    BYTE PTR [rcx],bl
   14000cc85:	je     0x14000cc8f
   14000cc87:	add    BYTE PTR [rcx],bl
   14000cc89:	fs (bad) 
   14000cc8b:	add    BYTE PTR [rcx],bl
   14000cc8d:	xor    al,0x6
   14000cc8f:	add    BYTE PTR [rcx],bl
   14000cc91:	xor    dl,BYTE PTR [rip+0x41101f0]        # 0x14411ce87
   14000cc97:	add    BYTE PTR [rcx],dl
   14000cc99:	xor    cl,BYTE PTR [rip+0xb600c70]        # 0x14b60d90f
   14000cc9f:	xor    BYTE PTR [rcx],bl
   14000cca1:	cmp    BYTE PTR [rcx],cl
   14000cca3:	add    BYTE PTR [rdi],ah
   14000cca5:	add    DWORD PTR [rdx+0x0],ecx
   14000cca8:	sbb    eax,esp
   14000ccaa:	(bad)  
   14000ccab:	rcl    BYTE PTR [rip+0x127013c0],1        # 0x15270e071
   14000ccb1:	(bad)  
   14000ccb2:	adc    DWORD PTR [rax],esi
   14000ccb4:	adc    BYTE PTR [rax+0x0],dl
   14000ccb7:	add    BYTE PTR [rax+0x4000008a],bh
   14000ccbd:	add    al,BYTE PTR [rax]
   14000ccbf:	add    BYTE PTR [rcx],bl
   14000ccc1:	adc    eax,0xd2060002
   14000ccc6:	add    dh,BYTE PTR [rax]
   14000ccc8:	mov    eax,0x6800008a
   14000cccd:	add    BYTE PTR [rax],al
   14000cccf:	add    BYTE PTR [rcx],bl
   14000ccd1:	xor    ecx,DWORD PTR [rbx]
   14000ccd3:	add    BYTE PTR [rdx],ah
   14000ccd5:	je     0x14000cd37
   14000ccd7:	add    BYTE PTR [rdx],ah
   14000ccd9:	fs pop rdi
   14000ccdb:	add    BYTE PTR [rdx],ah
   14000ccdd:	xor    al,0x5e
   14000ccdf:	add    BYTE PTR [rdx],ah
   14000cce1:	add    DWORD PTR [rdx+0x0],ebx
   14000cce4:	adc    al,0xe0
   14000cce6:	adc    al,al
   14000cce8:	adc    BYTE PTR [rax+0x0],dl
   14000cceb:	add    BYTE PTR [rax-0x3fffff76],bh
   14000ccf1:	add    al,BYTE PTR [rax]
   14000ccf3:	add    BYTE PTR [rcx],al
   14000ccf5:	or     al,BYTE PTR [rax+rax*1]
   14000ccf8:	or     dh,BYTE PTR [rdx+rcx*1]
   14000ccfb:	add    BYTE PTR [rdx],cl
   14000ccfd:	jb     0x14000cd05
   14000ccff:	jo     0x14000cd02
   14000cd01:	adc    ecx,DWORD PTR [rax]
   14000cd03:	add    BYTE PTR [rbx],dl
   14000cd05:	xor    al,0xd
   14000cd07:	add    BYTE PTR [rbx],dl
   14000cd09:	push   rdx
   14000cd0a:	or     al,0xf0
   14000cd0c:	or     ah,al
   14000cd0e:	or     BYTE PTR [rax+0x7],dh
   14000cd11:	(bad)  
   14000cd12:	(bad)  
   14000cd13:	push   rax
   14000cd14:	add    DWORD PTR [rcx+rax*1],eax
   14000cd17:	add    BYTE PTR [rdx+rax*4],al
   14000cd1a:	add    BYTE PTR [rax],al
   14000cd1c:	add    DWORD PTR [rsi],eax
   14000cd1e:	add    al,BYTE PTR [rax]
   14000cd20:	(bad)  
   14000cd21:	jb     0x14000cd25
   14000cd23:	xor    BYTE PTR [rcx],cl
   14000cd25:	sbb    al,0xb
   14000cd27:	add    BYTE PTR [rsp+rsi*2],bl
   14000cd2a:	sbb    al,0x0
   14000cd2c:	sbb    al,0x64
   14000cd2e:	sbb    eax,DWORD PTR [rax]
   14000cd30:	sbb    al,0x34
   14000cd32:	sbb    al,BYTE PTR [rax]
   14000cd34:	sbb    al,0x1
   14000cd36:	(bad)  
   14000cd37:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0e12d
   14000cd3d:	rol    BYTE PTR [rax],0x0
   14000cd40:	xchg   esi,eax
   14000cd41:	mov    DWORD PTR [rax],eax
   14000cd43:	add    BYTE PTR [rcx],al
   14000cd45:	add    BYTE PTR [rax],al
   14000cd47:	add    BYTE PTR [rax+0x7f],dh
   14000cd4a:	add    BYTE PTR [rax],al
   14000cd4c:	add    WORD PTR [rax],0xa500
   14000cd51:	mov    es,WORD PTR [rax]
   14000cd53:	add    BYTE PTR [rsi-0x7f],ah
   14000cd56:	add    BYTE PTR [rax],al
   14000cd58:	add    DWORD PTR [rax],eax
   14000cd5a:	add    BYTE PTR [rax],al
   14000cd5c:	add    DWORD PTR [rcx+rax*1],eax
   14000cd5f:	add    BYTE PTR [rdx+riz*2],al
   14000cd62:	add    BYTE PTR [rax],al
   14000cd64:	add    DWORD PTR [rcx+rax*1],eax
   14000cd67:	add    BYTE PTR [rdx+riz*8],al
   14000cd6a:	add    BYTE PTR [rax],al
   14000cd6c:	add    DWORD PTR [rdx+rax*1],ecx
   14000cd6f:	add    BYTE PTR [rcx+rax*1],cl
   14000cd72:	adc    DWORD PTR [rax],eax
   14000cd74:	adc    DWORD PTR [rdx],ecx
   14000cd76:	add    al,0x0
   14000cd78:	or     dh,BYTE PTR [rsi+rax*1]
   14000cd7b:	add    BYTE PTR [rdx],cl
   14000cd7d:	xor    al,BYTE PTR [rsi]
   14000cd7f:	jo     0x14000cd17
   14000cd81:	mov    DWORD PTR [rax],eax
   14000cd83:	add    BYTE PTR [rcx],al
   14000cd85:	add    BYTE PTR [rax],al
   14000cd87:	add    BYTE PTR [rcx-0x1ffff7b],bh
   14000cd8d:	test   DWORD PTR [rax],eax
   14000cd8f:	add    cl,cl
   14000cd91:	mov    es,WORD PTR [rax]
   14000cd93:	add    BYTE PTR [rax],al
   14000cd95:	add    BYTE PTR [rax],al
   14000cd97:	add    BYTE PTR [rcx],cl
   14000cd99:	add    al,0x1
   14000cd9b:	add    BYTE PTR [rdx+riz*1],al
   14000cd9e:	add    BYTE PTR [rax],al
   14000cda0:	xchg   esi,eax
   14000cda1:	mov    DWORD PTR [rax],eax
   14000cda3:	add    BYTE PTR [rcx],al
   14000cda5:	add    BYTE PTR [rax],al
   14000cda7:	add    BYTE PTR [rdi+rax*4],ch
   14000cdaa:	add    BYTE PTR [rax],al
   14000cdac:	(bad)  
   14000cdad:	xchg   DWORD PTR [rax],eax
   14000cdaf:	add    BYTE PTR [rcx],al
   14000cdb1:	add    BYTE PTR [rax],al
   14000cdb3:	add    BYTE PTR [rdx-0x79],ah
   14000cdb6:	add    BYTE PTR [rax],al
   14000cdb8:	or     DWORD PTR [rdx],ecx
   14000cdba:	add    al,0x0
   14000cdbc:	or     dh,BYTE PTR [rsi+rax*1]
   14000cdbf:	add    BYTE PTR [rdx],cl
   14000cdc1:	xor    al,BYTE PTR [rsi]
   14000cdc3:	jo     0x14000cd5b
   14000cdc5:	mov    DWORD PTR [rax],eax
   14000cdc7:	add    BYTE PTR [rcx],al
   14000cdc9:	add    BYTE PTR [rax],al
   14000cdcb:	add    BYTE PTR [rip+0x60000088],ch        # 0x1a000ce59
   14000cdd1:	mov    BYTE PTR [rax],al
   14000cdd3:	add    al,dh
   14000cdd5:	mov    es,WORD PTR [rax]
   14000cdd7:	add    BYTE PTR [rax-0x78],ah
   14000cdda:	add    BYTE PTR [rax],al
   14000cddc:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740dcde6
   14000cde2:	or     DWORD PTR [rax],eax
   14000cde4:	or     eax,0x19500632
   14000cde9:	sbb    eax,DWORD PTR [rbx]
   14000cdeb:	add    BYTE PTR [rcx],cl
   14000cded:	add    DWORD PTR [rax+0x300200],ebp
   14000cdf3:	add    BYTE PTR [rax+0x3000008a],bh
   14000cdf9:	add    eax,0x0
   14000cdfe:	add    BYTE PTR [rax],al
   14000ce00:	add    DWORD PTR [rax],eax
   14000ce02:	add    BYTE PTR [rax],al
   14000ce04:	add    BYTE PTR [rax],al
   14000ce06:	add    BYTE PTR [rax],al
   14000ce08:	add    DWORD PTR [rcx+rax*1],eax
   14000ce0b:	add    BYTE PTR [rdx+rdx*1],al
   14000ce0e:	add    BYTE PTR [rax],al
   14000ce10:	add    BYTE PTR [rax],al
   14000ce12:	add    BYTE PTR [rax],al
   14000ce14:	shl    al,0x0
   14000ce17:	add    BYTE PTR [rax],al
   14000ce19:	add    BYTE PTR [rax],al
   14000ce1b:	add    bh,bh
   14000ce1d:	(bad)  
   14000ce1e:	(bad)  
   14000ce1f:	inc    DWORD PTR [rax]
   14000ce21:	add    BYTE PTR [rax],al
   14000ce23:	add    BYTE PTR [rax],bl
   14000ce25:	add    BYTE PTR [rax],al
   14000ce27:	add    BYTE PTR [rsi+rax*4+0x0],ah
	...
   14000ce3b:	add    BYTE PTR [rax+0x7c],dh
   14000ce3e:	add    BYTE PTR [rax],al
   14000ce40:	add    BYTE PTR [rax],al
   14000ce42:	add    BYTE PTR [rax],al
   14000ce44:	pop    rax
   14000ce45:	(bad)  
	...
   14000ce56:	add    BYTE PTR [rax],al
   14000ce58:	add    al,BYTE PTR [rax]
   14000ce5a:	add    BYTE PTR [rax],al
   14000ce5c:	jo     0x14000ce2c
   14000ce5e:	add    BYTE PTR [rax],al
   14000ce60:	adc    dh,cl
	...
   14000ce6e:	add    BYTE PTR [rax],al
   14000ce70:	adc    BYTE PTR [rax],al
   14000ce72:	add    BYTE PTR [rax],al
   14000ce74:	loopne 0x14000ce56
   14000ce76:	add    BYTE PTR [rax],al
   14000ce78:	add    BYTE PTR [rax],al
   14000ce7a:	add    BYTE PTR [rax],al
   14000ce7c:	(bad)  
   14000ce7d:	(bad)  
   14000ce7e:	(bad)  
   14000ce7f:	inc    DWORD PTR [rax]
   14000ce81:	add    BYTE PTR [rax],al
   14000ce83:	add    BYTE PTR [rax],bl
   14000ce85:	add    BYTE PTR [rax],al
   14000ce87:	add    BYTE PTR [rsp+rdi*2],dl
	...
   14000ce9a:	add    BYTE PTR [rax],al
   14000ce9c:	or     cl,ah
   14000ce9e:	add    BYTE PTR [rax],al
   14000cea0:	add    BYTE PTR [rax],al
   14000cea2:	add    BYTE PTR [rax],al
   14000cea4:	(bad)  
   14000cea5:	(bad)  
   14000cea6:	(bad)  
   14000cea7:	inc    DWORD PTR [rax]
   14000cea9:	add    BYTE PTR [rax],al
   14000ceab:	add    BYTE PTR [rax+rax*1],al
	...
   14000cebe:	add    BYTE PTR [rax],al
   14000cec0:	add    DWORD PTR [rax],eax
   14000cec2:	add    BYTE PTR [rax],al
   14000cec4:	cwde   
   14000cec5:	(bad)  
	...
   14000ceda:	add    BYTE PTR [rax],al
   14000cedc:	ror    dh,0x0
	...
   14000cef7:	add    BYTE PTR [rax],ah
   14000cef9:	loopne 0x14000cefb
   14000cefb:	rex add DWORD PTR [rax],eax
	...
   14000cf06:	add    BYTE PTR [rax],al
   14000cf08:	and    al,dl
	...
   14000cf12:	add    BYTE PTR [rax],al
   14000cf14:	xchg   edx,eax
   14000cf15:	(bad)  
   14000cf16:	add    BYTE PTR [rax],al
   14000cf18:	add    BYTE PTR [rax-0x2f580000],ah
	...
   14000cf26:	add    BYTE PTR [rax],al
   14000cf28:	test   bh,dl
   14000cf2a:	add    BYTE PTR [rax],al
   14000cf2c:	mov    BYTE PTR [rax-0x2e080000],ah
	...
   14000cf3a:	add    BYTE PTR [rax],al
   14000cf3c:	clc    
   14000cf3d:	xlat   BYTE PTR ds:[rbx]
   14000cf3e:	add    BYTE PTR [rax],al
   14000cf40:	fsub   DWORD PTR [rcx-0x2cf00000]
	...
   14000cf4e:	add    BYTE PTR [rax],al
   14000cf50:	rcr    cl,1
   14000cf52:	add    BYTE PTR [rax],al
   14000cf54:	lock movabs ds:0xd4400000,al
   14000cf5e:	add    BYTE PTR [rax],al
   14000cf60:	add    BYTE PTR [rax],al
   14000cf62:	add    BYTE PTR [rax],al
   14000cf64:	pop    rsp
   14000cf65:	fiadd  DWORD PTR [rax]
   14000cf67:	add    BYTE PTR [rax],ah
   14000cf69:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cf6a:	add    BYTE PTR [rax],al
   14000cf6c:	mov    eax,0xd1
   14000cf71:	add    BYTE PTR [rax],al
   14000cf73:	add    BYTE PTR [rax],al
   14000cf75:	add    BYTE PTR [rax],al
   14000cf77:	add    BYTE PTR [rax],ch
   14000cf79:	fadd   QWORD PTR [rax]
   14000cf7b:	add    BYTE PTR [rax+0x380000a1],bl
   14000cf81:	rol    BYTE PTR [rax],cl
	...
   14000cf8b:	add    BYTE PTR [rsi],dh
   14000cf8d:	fadd   QWORD PTR [rax]
   14000cf8f:	add    BYTE PTR [rax],bl
   14000cf91:	movabs ds:0xd2f80000,al
   14000cf9a:	add    BYTE PTR [rax],al
   14000cf9c:	add    BYTE PTR [rax],al
   14000cf9e:	add    BYTE PTR [rax],al
   14000cfa0:	push   rsi
   14000cfa1:	fadd   QWORD PTR [rax]
   14000cfa3:	add    al,bl
   14000cfa5:	movabs ds:0xd2c00000,al
   14000cfae:	add    BYTE PTR [rax],al
   14000cfb0:	add    BYTE PTR [rax],al
   14000cfb2:	add    BYTE PTR [rax],al
   14000cfb4:	jp     0x14000cf92
   14000cfb6:	add    BYTE PTR [rax],al
   14000cfb8:	movabs al,ds:0xd2a80000a2
   14000cfc1:	add    BYTE PTR [rax],al
   14000cfc3:	add    BYTE PTR [rax],al
   14000cfc5:	add    BYTE PTR [rax],al
   14000cfc7:	add    BYTE PTR [rsp+rbx*8-0x5d780000],ah
   14000cfce:	add    BYTE PTR [rax],al
   14000cfd0:	call   0x14000d0a7
   14000cfd5:	add    BYTE PTR [rax],al
   14000cfd7:	add    BYTE PTR [rax],al
   14000cfd9:	add    BYTE PTR [rax],al
   14000cfdb:	add    dh,cl
   14000cfdd:	fadd   QWORD PTR [rax]
   14000cfdf:	add    al,cl
   14000cfe1:	movabs ds:0xd2980000,al
   14000cfea:	add    BYTE PTR [rax],al
   14000cfec:	add    BYTE PTR [rax],al
   14000cfee:	add    BYTE PTR [rax],al
   14000cff0:	repnz fadd QWORD PTR [rax]
   14000cff3:	add    BYTE PTR [rax-0x5e],bh
   14000cff6:	add    BYTE PTR [rax],al
   14000cff8:	cwde   
   14000cff9:	rol    BYTE PTR [rax],1
	...
   14000d003:	add    BYTE PTR [rax-0x23],dl
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	js     0x14000cfaa
	...
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	fcom   st(4)
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	add    BYTE PTR [rax],al
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	call   0x14000d101
   14000d02d:	add    BYTE PTR [rax],al
   14000d02f:	add    dl,bh
   14000d031:	(bad)  
   14000d032:	add    BYTE PTR [rax],al
   14000d034:	add    BYTE PTR [rax],al
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	or     ch,dl
   14000d03a:	add    BYTE PTR [rax],al
   14000d03c:	add    BYTE PTR [rax],al
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	sbb    al,0xd5
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	add    BYTE PTR [rax],al
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	sub    al,0xd5
   14000d04a:	add    BYTE PTR [rax],al
   14000d04c:	add    BYTE PTR [rax],al
   14000d04e:	add    BYTE PTR [rax],al
   14000d050:	cmp    al,0xd5
   14000d052:	add    BYTE PTR [rax],al
   14000d054:	add    BYTE PTR [rax],al
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	rex.WRX (bad) 
   14000d05a:	add    BYTE PTR [rax],al
   14000d05c:	add    BYTE PTR [rax],al
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	(bad)  
   14000d061:	(bad)  
   14000d062:	add    BYTE PTR [rax],al
   14000d064:	add    BYTE PTR [rax],al
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	jb     0x14000d03f
   14000d06a:	add    BYTE PTR [rax],al
   14000d06c:	add    BYTE PTR [rax],al
   14000d06e:	add    BYTE PTR [rax],al
   14000d070:	adc    ch,0x0
   14000d073:	add    BYTE PTR [rax],al
   14000d075:	add    BYTE PTR [rax],al
   14000d077:	add    BYTE PTR [rsi-0x23],ah
   14000d07a:	add    BYTE PTR [rax],al
   14000d07c:	add    BYTE PTR [rax],al
   14000d07e:	add    BYTE PTR [rax],al
   14000d080:	jp     0x14000d05f
   14000d082:	add    BYTE PTR [rax],al
   14000d084:	add    BYTE PTR [rax],al
   14000d086:	add    BYTE PTR [rax],al
   14000d088:	xchg   esi,eax
   14000d089:	fld    QWORD PTR [rax]
	...
   14000d097:	add    BYTE PTR [rax],ch
   14000d099:	fld    QWORD PTR [rax]
	...
   14000d0a7:	add    BYTE PTR [rsi+0xd5],ch
   14000d0ad:	add    BYTE PTR [rax],al
   14000d0af:	add    BYTE PTR [rsi+0xd5],bh
   14000d0b5:	add    BYTE PTR [rax],al
   14000d0b7:	add    dh,dl
   14000d0b9:	(bad)  
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	add    BYTE PTR [rax],al
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	out    dx,al
   14000d0c1:	(bad)  
   14000d0c2:	add    BYTE PTR [rax],al
   14000d0c4:	add    BYTE PTR [rax],al
   14000d0c6:	add    BYTE PTR [rax],al
   14000d0c8:	(bad)  
   14000d0c9:	fiadd  WORD PTR [rax]
   14000d0cb:	add    BYTE PTR [rax],al
   14000d0cd:	add    BYTE PTR [rax],al
   14000d0cf:	add    BYTE PTR [rax],al
   14000d0d1:	fiadd  WORD PTR [rax]
   14000d0d3:	add    BYTE PTR [rax],al
   14000d0d5:	add    BYTE PTR [rax],al
   14000d0d7:	add    dl,ch
   14000d0d9:	fld    QWORD PTR [rax]
   14000d0db:	add    BYTE PTR [rax],al
   14000d0dd:	add    BYTE PTR [rax],al
   14000d0df:	add    dh,dl
   14000d0e1:	fld    QWORD PTR [rax]
   14000d0e3:	add    BYTE PTR [rax],al
   14000d0e5:	add    BYTE PTR [rax],al
   14000d0e7:	add    BYTE PTR [rax+0xd5],ah
   14000d0ed:	add    BYTE PTR [rax],al
   14000d0ef:	add    dh,al
   14000d0f1:	fld    QWORD PTR [rax]
   14000d0f3:	add    BYTE PTR [rax],al
   14000d0f5:	add    BYTE PTR [rax],al
   14000d0f7:	add    BYTE PTR [rsi],al
   14000d0f9:	(bad)  
   14000d0fa:	add    BYTE PTR [rax],al
   14000d0fc:	add    BYTE PTR [rax],al
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	mov    edx,0xdd
   14000d105:	add    BYTE PTR [rax],al
   14000d107:	add    BYTE PTR [rbp+rbx*8+0x0],ch
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	sbb    dh,dl
   14000d112:	add    BYTE PTR [rax],al
   14000d114:	add    BYTE PTR [rax],al
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	es (bad) 
   14000d11a:	add    BYTE PTR [rax],al
   14000d11c:	add    BYTE PTR [rax],al
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	cmp    dh,dl
   14000d122:	add    BYTE PTR [rax],al
   14000d124:	add    BYTE PTR [rax],al
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	rex.WR (bad) 
   14000d12a:	add    BYTE PTR [rax],al
   14000d12c:	add    BYTE PTR [rax],al
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	je     0x14000d109
   14000d132:	add    BYTE PTR [rax],al
   14000d134:	add    BYTE PTR [rax],al
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	pop    rax
   14000d139:	xlat   BYTE PTR ds:[rbx]
   14000d13a:	add    BYTE PTR [rax],al
   14000d13c:	add    BYTE PTR [rax],al
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	xor    bh,dl
   14000d142:	add    BYTE PTR [rax],al
   14000d144:	add    BYTE PTR [rax],al
   14000d146:	add    BYTE PTR [rax],al
   14000d148:	or     bh,dl
   14000d14a:	add    BYTE PTR [rax],al
   14000d14c:	add    BYTE PTR [rax],al
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	cmp    bh,dl
   14000d152:	add    BYTE PTR [rax],al
   14000d154:	add    BYTE PTR [rax],al
   14000d156:	add    BYTE PTR [rax],al
   14000d158:	pop    rax
   14000d159:	(bad)  
   14000d15a:	add    BYTE PTR [rax],al
   14000d15c:	add    BYTE PTR [rax],al
   14000d15e:	add    BYTE PTR [rax],al
   14000d160:	rex.W xlat BYTE PTR ds:[rbx]
   14000d162:	add    BYTE PTR [rax],al
   14000d164:	add    BYTE PTR [rax],al
   14000d166:	add    BYTE PTR [rax],al
   14000d168:	push   0xffffffffffffffd6
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	add    BYTE PTR [rax],al
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	adc    dh,0x0
   14000d173:	add    BYTE PTR [rax],al
   14000d175:	add    BYTE PTR [rax],al
   14000d177:	add    BYTE PTR [rdx+0xd6],dl
   14000d17d:	add    BYTE PTR [rax],al
   14000d17f:	add    ah,bh
   14000d181:	(bad)  
   14000d182:	add    BYTE PTR [rax],al
   14000d184:	add    BYTE PTR [rax],al
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	out    0xd6,al
   14000d18a:	add    BYTE PTR [rax],al
   14000d18c:	add    BYTE PTR [rax],al
   14000d18e:	add    BYTE PTR [rax],al
   14000d190:	movabs ds:0xb4000000000000d6,al
   14000d199:	(bad)  
   14000d19a:	add    BYTE PTR [rax],al
   14000d19c:	add    BYTE PTR [rax],al
   14000d19e:	add    BYTE PTR [rax],al
   14000d1a0:	retf   0xd6
   14000d1a3:	add    BYTE PTR [rax],al
   14000d1a5:	add    BYTE PTR [rax],al
   14000d1a7:	add    BYTE PTR [rdx],bl
   14000d1a9:	xlat   BYTE PTR ds:[rbx]
	...
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	mov    edx,0x0
   14000d1bd:	add    BYTE PTR [rax],al
   14000d1bf:	and    BYTE PTR [rcx+0x0],0x0
   14000d1c6:	add    BYTE PTR [rax+0xa3],al
   14000d1cc:	add    BYTE PTR [rax],al
   14000d1ce:	add    BYTE PTR [rax+0x115],al
   14000d1d4:	add    BYTE PTR [rax],al
   14000d1d6:	add    BYTE PTR [rax+0x7],al
   14000d1dc:	add    BYTE PTR [rax],al
   14000d1de:	add    BYTE PTR [rax+0x2],al
   14000d1e4:	add    BYTE PTR [rax],al
   14000d1e6:	add    BYTE PTR [rax+0x6],al
   14000d1ec:	add    BYTE PTR [rax],al
   14000d1ee:	add    BYTE PTR [rax+0x0],al
   14000d1f4:	add    BYTE PTR [rax],al
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	in     al,0xd7
   14000d1fa:	add    BYTE PTR [rax],al
   14000d1fc:	add    BYTE PTR [rax],al
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	adc    al,0xdd
   14000d202:	add    BYTE PTR [rax],al
   14000d204:	add    BYTE PTR [rax],al
   14000d206:	add    BYTE PTR [rax],al
   14000d208:	xchg   edx,eax
   14000d209:	xlat   BYTE PTR ds:[rbx]
   14000d20a:	add    BYTE PTR [rax],al
   14000d20c:	add    BYTE PTR [rax],al
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	sahf   
   14000d211:	xlat   BYTE PTR ds:[rbx]
   14000d212:	add    BYTE PTR [rax],al
   14000d214:	add    BYTE PTR [rax],al
   14000d216:	add    BYTE PTR [rax],al
   14000d218:	rcl    bh,1
   14000d21a:	add    BYTE PTR [rax],al
   14000d21c:	add    BYTE PTR [rax],al
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	ret    0xd7
   14000d223:	add    BYTE PTR [rax],al
   14000d225:	add    BYTE PTR [rax],al
   14000d227:	add    BYTE PTR [rdi+rdx*8+0x0],dh
	...
   14000d236:	add    BYTE PTR [rax],al
   14000d238:	(bad)  
   14000d239:	fild   DWORD PTR [rax]
   14000d23b:	add    BYTE PTR [rax],al
   14000d23d:	add    BYTE PTR [rax],al
   14000d23f:	add    dh,bh
   14000d241:	fiadd  DWORD PTR [rax]
   14000d243:	add    BYTE PTR [rax],al
   14000d245:	add    BYTE PTR [rax],al
   14000d247:	add    BYTE PTR [rbx+rbx*8],ch
   14000d24a:	add    BYTE PTR [rax],al
   14000d24c:	add    BYTE PTR [rax],al
   14000d24e:	add    BYTE PTR [rax],al
   14000d250:	(bad)  
   14000d251:	fiadd  DWORD PTR [rax]
   14000d253:	add    BYTE PTR [rax],al
   14000d255:	add    BYTE PTR [rax],al
   14000d257:	add    al,bl
   14000d259:	fiadd  DWORD PTR [rax]
   14000d25b:	add    BYTE PTR [rax],al
   14000d25d:	add    BYTE PTR [rax],al
   14000d25f:	add    al,al
   14000d261:	fiadd  DWORD PTR [rax]
   14000d263:	add    BYTE PTR [rax],al
   14000d265:	add    BYTE PTR [rax],al
   14000d267:	add    BYTE PTR [rsi-0x26],ah
   14000d26a:	add    BYTE PTR [rax],al
   14000d26c:	add    BYTE PTR [rax],al
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	scas   al,BYTE PTR es:[rdi]
   14000d271:	fiadd  DWORD PTR [rax]
   14000d273:	add    BYTE PTR [rax],al
   14000d275:	add    BYTE PTR [rax],al
   14000d277:	add    BYTE PTR [rsi-0x26],dh
   14000d27a:	add    BYTE PTR [rax],al
   14000d27c:	add    BYTE PTR [rax],al
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	pushf  
   14000d281:	fiadd  DWORD PTR [rax]
   14000d283:	add    BYTE PTR [rax],al
   14000d285:	add    BYTE PTR [rax],al
   14000d287:	add    BYTE PTR [rdx+0xda],cl
	...
   14000d295:	add    BYTE PTR [rax],al
   14000d297:	add    BYTE PTR [rdx],dl
   14000d299:	fadd   QWORD PTR [rax]
	...
   14000d2a7:	add    BYTE PTR [rdx-0x25],dh
   14000d2aa:	add    BYTE PTR [rax],al
   14000d2ac:	add    BYTE PTR [rax],al
   14000d2ae:	add    BYTE PTR [rax],al
   14000d2b0:	push   rsi
   14000d2b1:	fild   DWORD PTR [rax]
	...
   14000d2bf:	add    dl,dl
   14000d2c1:	fild   DWORD PTR [rax]
   14000d2c3:	add    BYTE PTR [rax],al
   14000d2c5:	add    BYTE PTR [rax],al
   14000d2c7:	add    BYTE PTR [rbx+rbx*8+0x0],al
   14000d2cb:	add    BYTE PTR [rax],al
   14000d2cd:	add    BYTE PTR [rax],al
   14000d2cf:	add    BYTE PTR [rax+0xdb],dl
   14000d2d5:	add    BYTE PTR [rax],al
   14000d2d7:	add    BYTE PTR [rbx+rbx*8+0x0],ah
	...
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	mov    eax,0xdb
	...
   14000d2f5:	add    BYTE PTR [rax],al
   14000d2f7:	add    al,ch
   14000d2f9:	fild   DWORD PTR [rax]
   14000d2fb:	add    BYTE PTR [rax],al
   14000d2fd:	add    BYTE PTR [rax],al
   14000d2ff:	add    BYTE PTR [rdx],al
   14000d301:	fadd   QWORD PTR [rax]
	...
   14000d30f:	add    BYTE PTR [rdx],bl
   14000d311:	fadd   DWORD PTR [rax]
   14000d313:	add    BYTE PTR [rax],al
   14000d315:	add    BYTE PTR [rax],al
   14000d317:	add    BYTE PTR [rdx],ah
   14000d319:	fadd   DWORD PTR [rax]
   14000d31b:	add    BYTE PTR [rax],al
   14000d31d:	add    BYTE PTR [rax],al
   14000d31f:	add    BYTE PTR [rax],dl
   14000d321:	fiadd  DWORD PTR [rax]
   14000d323:	add    BYTE PTR [rax],al
   14000d325:	add    BYTE PTR [rax],al
   14000d327:	add    BYTE PTR [rdx],al
   14000d329:	fiadd  DWORD PTR [rax]
   14000d32b:	add    BYTE PTR [rax],al
   14000d32d:	add    BYTE PTR [rax],al
   14000d32f:	add    al,bh
   14000d331:	fld    DWORD PTR [rax]
   14000d333:	add    BYTE PTR [rax],al
   14000d335:	add    BYTE PTR [rax],al
   14000d337:	add    al,dh
   14000d339:	fld    DWORD PTR [rax]
   14000d33b:	add    BYTE PTR [rax],al
   14000d33d:	add    BYTE PTR [rax],al
   14000d33f:	add    dh,ah
   14000d341:	fld    DWORD PTR [rax]
   14000d343:	add    BYTE PTR [rax],al
   14000d345:	add    BYTE PTR [rax],al
   14000d347:	add    ah,bl
   14000d349:	fld    DWORD PTR [rax]
   14000d34b:	add    BYTE PTR [rax],al
   14000d34d:	add    BYTE PTR [rax],al
   14000d34f:	add    BYTE PTR [rax+0xd9],bh
   14000d355:	add    BYTE PTR [rax],al
   14000d357:	add    BYTE PTR [rcx+rbx*8+0x0],ah
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	cwde   
   14000d361:	fld    DWORD PTR [rax]
   14000d363:	add    BYTE PTR [rax],al
   14000d365:	add    BYTE PTR [rax],al
   14000d367:	add    BYTE PTR [rax],dl
   14000d369:	fadd   DWORD PTR [rax]
   14000d36b:	add    BYTE PTR [rax],al
   14000d36d:	add    BYTE PTR [rax],al
   14000d36f:	add    BYTE PTR [rcx+rbx*8+0x0],al
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	ins    BYTE PTR es:[rdi],dx
   14000d379:	fld    DWORD PTR [rax]
   14000d37b:	add    BYTE PTR [rax],al
   14000d37d:	add    BYTE PTR [rax],al
   14000d37f:	add    BYTE PTR [rax-0x27],ah
   14000d382:	add    BYTE PTR [rax],al
   14000d384:	add    BYTE PTR [rax],al
   14000d386:	add    BYTE PTR [rax],al
   14000d388:	rex.WR fld DWORD PTR [rax]
   14000d38b:	add    BYTE PTR [rax],al
   14000d38d:	add    BYTE PTR [rax],al
   14000d38f:	add    BYTE PTR [rdx-0x27],al
   14000d392:	add    BYTE PTR [rax],al
   14000d394:	add    BYTE PTR [rax],al
   14000d396:	add    BYTE PTR [rax],al
   14000d398:	cmp    bl,cl
   14000d39a:	add    BYTE PTR [rax],al
   14000d39c:	add    BYTE PTR [rax],al
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	xor    bl,cl
   14000d3a2:	add    BYTE PTR [rax],al
   14000d3a4:	add    BYTE PTR [rax],al
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	and    cl,bl
   14000d3aa:	add    BYTE PTR [rax],al
   14000d3ac:	add    BYTE PTR [rax],al
   14000d3ae:	add    BYTE PTR [rax],al
   14000d3b0:	(bad)  
   14000d3b1:	fld    DWORD PTR [rax]
   14000d3b3:	add    BYTE PTR [rax],al
   14000d3b5:	add    BYTE PTR [rax],al
   14000d3b7:	add    BYTE PTR [rax],al
   14000d3b9:	fld    DWORD PTR [rax]
   14000d3bb:	add    BYTE PTR [rax],al
   14000d3bd:	add    BYTE PTR [rax],al
   14000d3bf:	add    dl,dh
   14000d3c1:	fadd   DWORD PTR [rax]
   14000d3c3:	add    BYTE PTR [rax],al
   14000d3c5:	add    BYTE PTR [rax],al
   14000d3c7:	add    ah,bl
   14000d3c9:	fadd   DWORD PTR [rax]
   14000d3cb:	add    BYTE PTR [rax],al
   14000d3cd:	add    BYTE PTR [rax],al
   14000d3cf:	add    al,dl
   14000d3d1:	fadd   DWORD PTR [rax]
   14000d3d3:	add    BYTE PTR [rax],al
   14000d3d5:	add    BYTE PTR [rax],al
   14000d3d7:	add    BYTE PTR [rdx+0xd8],dh
   14000d3dd:	add    BYTE PTR [rax],al
   14000d3df:	add    BYTE PTR [rdx+0xd8],bl
   14000d3e5:	add    BYTE PTR [rax],al
   14000d3e7:	add    BYTE PTR [rax+rbx*8+0x0],bh
   14000d3eb:	add    BYTE PTR [rax],al
   14000d3ed:	add    BYTE PTR [rax],al
   14000d3ef:	add    BYTE PTR [rax+rbx*8+0x0],bl
   14000d3f3:	add    BYTE PTR [rax],al
   14000d3f5:	add    BYTE PTR [rax],al
   14000d3f7:	add    BYTE PTR [rdx],dh
   14000d3f9:	fiadd  WORD PTR [rax]
   14000d3fb:	add    BYTE PTR [rax],al
   14000d3fd:	add    BYTE PTR [rax],al
   14000d3ff:	add    BYTE PTR [rsi],ch
   14000d401:	fadd   DWORD PTR [rax]
   14000d403:	add    BYTE PTR [rax],al
   14000d405:	add    BYTE PTR [rax],al
   14000d407:	add    BYTE PTR [rdx],bh
   14000d409:	fadd   DWORD PTR [rax]
   14000d40b:	add    BYTE PTR [rax],al
   14000d40d:	add    BYTE PTR [rax],al
   14000d40f:	add    BYTE PTR [rax+rbx*8],al
   14000d412:	add    BYTE PTR [rax],al
   14000d414:	add    BYTE PTR [rax],al
   14000d416:	add    BYTE PTR [rax],al
   14000d418:	mov    ds,ecx
   14000d41a:	add    BYTE PTR [rax],al
   14000d41c:	add    BYTE PTR [rax],al
   14000d41e:	add    BYTE PTR [rax],al
   14000d420:	rex.RX fadd DWORD PTR [rax]
   14000d423:	add    BYTE PTR [rax],al
   14000d425:	add    BYTE PTR [rax],al
   14000d427:	add    BYTE PTR [rdx-0x28],dl
   14000d42a:	add    BYTE PTR [rax],al
   14000d42c:	add    BYTE PTR [rax],al
   14000d42e:	add    BYTE PTR [rax],al
   14000d430:	rcr    bh,1
	...
   14000d43e:	add    BYTE PTR [rax],al
   14000d440:	cmp    al,0xdf
   14000d442:	add    BYTE PTR [rax],al
   14000d444:	add    BYTE PTR [rax],al
   14000d446:	add    BYTE PTR [rax],al
   14000d448:	rex.WX fild WORD PTR [rax]
   14000d44b:	add    BYTE PTR [rax],al
   14000d44d:	add    BYTE PTR [rax],al
   14000d44f:	add    BYTE PTR [rdx-0x21],ah
   14000d452:	add    BYTE PTR [rax],al
   14000d454:	add    BYTE PTR [rax],al
   14000d456:	add    BYTE PTR [rax],al
   14000d458:	sbb    bh,0x0
   14000d45b:	add    BYTE PTR [rax],al
   14000d45d:	add    BYTE PTR [rax],al
   14000d45f:	add    BYTE PTR [rsi+0xdf],dl
   14000d465:	add    BYTE PTR [rax],al
   14000d467:	add    BYTE PTR [rdx+0xdf],dh
   14000d46d:	add    BYTE PTR [rax],al
   14000d46f:	add    BYTE PTR [rdi+rbx*8],al
   14000d472:	add    BYTE PTR [rax],al
   14000d474:	add    BYTE PTR [rax],al
   14000d476:	add    BYTE PTR [rax],al
   14000d478:	call   0x14000d55b
   14000d47d:	add    BYTE PTR [rax],al
   14000d47f:	add    ah,cl
   14000d481:	fiadd  WORD PTR [rax]
   14000d483:	add    BYTE PTR [rax],al
   14000d485:	add    BYTE PTR [rax],al
   14000d487:	add    BYTE PTR [rsi+rbx*8+0x0],ch
   14000d48e:	add    BYTE PTR [rax],al
   14000d490:	cwde   
   14000d491:	fiadd  WORD PTR [rax]
   14000d493:	add    BYTE PTR [rax],al
   14000d495:	add    BYTE PTR [rax],al
   14000d497:	add    BYTE PTR [rax-0x22],bh
   14000d49a:	add    BYTE PTR [rax],al
   14000d49c:	add    BYTE PTR [rax],al
   14000d49e:	add    BYTE PTR [rax],al
   14000d4a0:	rex.W fiadd DWORD PTR [rax]
   14000d4a3:	add    BYTE PTR [rax],al
   14000d4a5:	add    BYTE PTR [rax],al
   14000d4a7:	add    BYTE PTR [rsi],ch
   14000d4a9:	fiadd  DWORD PTR [rax]
   14000d4ab:	add    BYTE PTR [rax],al
   14000d4ad:	add    BYTE PTR [rax],al
   14000d4af:	add    BYTE PTR [rax-0x22],bl
   14000d4b2:	add    BYTE PTR [rax],al
   14000d4b4:	add    BYTE PTR [rax],al
   14000d4b6:	add    BYTE PTR [rax],al
   14000d4b8:	rex fiadd WORD PTR [rax]
   14000d4bb:	add    BYTE PTR [rax],al
   14000d4bd:	add    BYTE PTR [rax],al
   14000d4bf:	add    BYTE PTR [rdx],bl
   14000d4c1:	fiadd  DWORD PTR [rax]
   14000d4c3:	add    BYTE PTR [rax],al
   14000d4c5:	add    BYTE PTR [rax],al
   14000d4c7:	add    BYTE PTR [rdi+rbx*8],ah
	...
   14000d4d6:	add    BYTE PTR [rax],al
   14000d4d8:	and    BYTE PTR [rcx],al
   14000d4da:	rex.RB jbe 0x14000d542
   14000d4dd:	outs   dx,BYTE PTR ds:[rsi]
   14000d4de:	je     0x14000d532
   14000d4e0:	imul   esi,DWORD PTR gs:[ebx+0x74],0x22007265
   14000d4e9:	add    DWORD PTR [rbp+0x76],eax
   14000d4ec:	outs   dx,BYTE PTR gs:[rsi]
   14000d4ee:	je     0x14000d545
   14000d4f0:	outs   dx,BYTE PTR ds:[rsi]
   14000d4f1:	jb     0x14000d558
   14000d4f3:	imul   esi,DWORD PTR [ebx+0x74],0x55007265
   14000d4fb:	add    dl,BYTE PTR [rdx+0x65]
   14000d4fe:	rex.XB ins BYTE PTR es:[edi],dx
   14000d501:	outs   dx,DWORD PTR ds:[rsi]
   14000d502:	jae    0x14000d569
   14000d504:	rex.WXB
   14000d505:	gs jns 0x14000d508
   14000d508:	lea    eax,[rdx]
   14000d50a:	push   rdx
   14000d50b:	gs addr32 push rcx
   14000d50e:	jne    0x14000d575
   14000d510:	jb     0x14000d58b
   14000d512:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d514:	outs   dx,WORD PTR ds:[rsi]
   14000d516:	rex.WXB
   14000d517:	gs jns 0x14000d571
   14000d51a:	add    BYTE PTR [rax],al
   14000d51c:	je     0x14000d520
   14000d51e:	push   rdx
   14000d51f:	rex.RB outs dx,BYTE PTR gs:[esi]
   14000d523:	jne    0x14000d592
   14000d525:	rex.WXB
   14000d526:	gs jns 0x14000d56e
   14000d529:	js     0x14000d582
   14000d52b:	add    BYTE PTR [rsi+0x67655202],al
   14000d531:	rex.WRXB jo 0x14000d599
   14000d534:	outs   dx,BYTE PTR ds:[rsi]
   14000d535:	rex.WXB
   14000d536:	gs jns 0x14000d57e
   14000d539:	js     0x14000d592
   14000d53b:	add    BYTE PTR [rbx+0x67655202],ah
   14000d541:	push   rbx
   14000d542:	gs je  0x14000d59b
   14000d545:	(bad)  
   14000d546:	ins    BYTE PTR es:[rdi],dx
   14000d547:	jne    0x14000d5ae
   14000d549:	rex.RB js 0x14000d5a3
   14000d54c:	add    BYTE PTR [rax],al
   14000d54e:	pop    rsi
   14000d54f:	add    dl,BYTE PTR [rdx+0x65]
   14000d552:	addr32 rex.XB jb 0x14000d5bb
   14000d556:	(bad)  
   14000d557:	je     0x14000d5be
   14000d559:	rex.WXB
   14000d55a:	gs jns 0x14000d5a2
   14000d55d:	js     0x14000d5b6
   14000d55f:	add    BYTE PTR [rbp+0x2],ch
   14000d562:	push   rdx
   14000d563:	gs addr32 rex.R
   14000d566:	gs ins BYTE PTR es:[rdi],dx
   14000d568:	gs je  0x14000d5d0
   14000d56b:	push   rsi
   14000d56c:	(bad)  
   14000d56d:	ins    BYTE PTR es:[rdi],dx
   14000d56e:	jne    0x14000d5d5
   14000d570:	push   rdi
   14000d571:	add    BYTE PTR [rbx],ah
   14000d573:	add    DWORD PTR [rbp+0x76],eax
   14000d576:	outs   dx,BYTE PTR gs:[rsi]
   14000d578:	je     0x14000d5d1
   14000d57a:	jb     0x14000d5e5
   14000d57c:	je     0x14000d5e3
   14000d57e:	add    BYTE PTR [rax],al
   14000d580:	imul   eax,DWORD PTR [rdx],0x52
   14000d583:	gs addr32 rex.R
   14000d586:	gs ins BYTE PTR es:[rdi],dx
   14000d588:	gs je  0x14000d5f0
   14000d58b:	push   rsp
   14000d58c:	jb     0x14000d5f3
   14000d58e:	gs push rdi
   14000d590:	add    BYTE PTR [rax],al
   14000d592:	rex.B
   14000d593:	rex.R push rsi
   14000d595:	push   r8
   14000d597:	xor    rsi,QWORD PTR [r10]
   14000d59a:	cs fs ins BYTE PTR es:[rdi],dx
   14000d59d:	ins    BYTE PTR es:[rdi],dx
   14000d59e:	add    BYTE PTR [rax],al
   14000d5a0:	jge    0x14000d5a2
   14000d5a2:	rex.XB ins BYTE PTR es:[rdi],dx
   14000d5a4:	outs   dx,DWORD PTR ds:[rsi]
   14000d5a5:	jae    0x14000d60c
   14000d5a7:	rex.W (bad) 
   14000d5a9:	outs   dx,BYTE PTR ds:[rsi]
   14000d5aa:	fs ins BYTE PTR es:[rdi],dx
   14000d5ac:	add    BYTE PTR gs:[rdi+0x2],dl
   14000d5b0:	rex.RXB
   14000d5b1:	gs je  0x14000d600
   14000d5b4:	(bad)  
   14000d5b5:	jae    0x14000d62b
   14000d5b7:	rex.RB jb 0x14000d62c
   14000d5ba:	outs   dx,DWORD PTR ds:[rsi]
   14000d5bb:	jb     0x14000d5bd
   14000d5bd:	add    BYTE PTR [rip+0x6c654401],al        # 0x1ac6619c4
   14000d5c3:	gs je  0x14000d62b
   14000d5c6:	rex.XB jb 0x14000d632
   14000d5c9:	je     0x14000d634
   14000d5cb:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d5ce:	push   rbx
   14000d5cf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000d5d4:	outs   dx,BYTE PTR ds:[rsi]
   14000d5d5:	add    BYTE PTR [rcx],ch
   14000d5d7:	add    DWORD PTR [rbp+0x6e],eax
   14000d5da:	je     0x14000d641
   14000d5dc:	jb     0x14000d621
   14000d5de:	jb     0x14000d649
   14000d5e0:	je     0x14000d64b
   14000d5e2:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d5e5:	push   rbx
   14000d5e6:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000d5eb:	outs   dx,BYTE PTR ds:[rsi]
   14000d5ec:	add    BYTE PTR [rax],al
   14000d5ee:	test   eax,0x61654c03
   14000d5f3:	jbe    0x14000d65a
   14000d5f5:	rex.XB jb 0x14000d661
   14000d5f8:	je     0x14000d663
   14000d5fa:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d5fd:	push   rbx
   14000d5fe:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000d603:	outs   dx,BYTE PTR ds:[rsi]
   14000d604:	add    BYTE PTR [rax],al
   14000d606:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d607:	add    al,BYTE PTR [rdi+0x65]
   14000d60a:	je     0x14000d65c
   14000d60c:	jb     0x14000d67d
   14000d60e:	movsxd eax,DWORD PTR [rcx+0x64]
   14000d611:	fs jb  0x14000d679
   14000d614:	jae    0x14000d689
   14000d616:	add    BYTE PTR [rax],al
   14000d618:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d619:	add    DWORD PTR [rsi+0x72],eax
   14000d61c:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000d626:	scas   al,BYTE PTR es:[rdi]
   14000d627:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000d62b:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000d634:	js     0x14000d68d
   14000d636:	add    BYTE PTR [rax],al
   14000d638:	outs   dx,BYTE PTR ds:[rsi]
   14000d639:	add    al,BYTE PTR [rdi+0x65]
   14000d63c:	je     0x14000d68b
   14000d63e:	outs   dx,DWORD PTR ds:[rsi]
   14000d63f:	fs jne 0x14000d6ae
   14000d642:	gs rex.W (bad) 
   14000d645:	outs   dx,BYTE PTR ds:[rsi]
   14000d646:	fs ins BYTE PTR es:[rdi],dx
   14000d648:	gs push rdi
   14000d64a:	add    BYTE PTR [rax],al
   14000d64c:	and    eax,0x74736c06
   14000d651:	jb     0x14000d6b6
   14000d653:	ins    DWORD PTR es:[rdi],dx
   14000d654:	jo     0x14000d6bf
   14000d656:	push   rdi
   14000d657:	add    BYTE PTR [rsp+rax*1+0x52],cl
   14000d65b:	(bad)  
   14000d65c:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14000d663:	jo     0x14000d6d9
   14000d665:	imul   ebp,DWORD PTR [rdi+0x6e],0x3d80000
   14000d66c:	rex.WRB jne 0x14000d6db
   14000d66f:	je     0x14000d6da
   14000d671:	rex.X jns 0x14000d6e8
   14000d674:	gs push rsp
   14000d676:	outs   dx,DWORD PTR ds:[rsi]
   14000d677:	push   rdi
   14000d678:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14000d680:	ins    BYTE PTR es:[rdi],dx
   14000d681:	add    eax,0x657a6953
   14000d686:	outs   dx,DWORD PTR ds:[rsi]
   14000d687:	push   dx
   14000d689:	gs jae 0x14000d6fb
   14000d68c:	jne    0x14000d700
   14000d68e:	movsxd esp,DWORD PTR [rbp+0x0]
   14000d691:	add    BYTE PTR [rdx+0x616f4c03],dh
   14000d697:	fs push rdx
   14000d699:	gs jae 0x14000d70b
   14000d69c:	jne    0x14000d710
   14000d69e:	movsxd esp,DWORD PTR [rbp+0x0]
   14000d6a1:	add    BYTE PTR [rsi+0x6e694601],cl
   14000d6a7:	fs push rdx
   14000d6a9:	gs jae 0x14000d71b
   14000d6ac:	jne    0x14000d720
   14000d6ae:	movsxd esp,DWORD PTR [rbp+0x45]
   14000d6b1:	js     0x14000d70a
   14000d6b3:	add    BYTE PTR [rdx+0x2],ch
   14000d6b6:	rex.RXB
   14000d6b7:	gs je  0x14000d707
   14000d6ba:	outs   dx,DWORD PTR ds:[rsi]
   14000d6bb:	fs jne 0x14000d72a
   14000d6be:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000d6c8:	add    BYTE PTR [rax],al
   14000d6ca:	push   rsp
   14000d6cb:	add    ecx,DWORD PTR [rcx+0x6e]
   14000d6ce:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000d6d6:	rex.XB jb 0x14000d742
   14000d6d9:	je     0x14000d744
   14000d6db:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d6de:	push   rbx
   14000d6df:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000d6e4:	outs   dx,BYTE PTR ds:[rsi]
   14000d6e5:	add    BYTE PTR [rip+0x74654702],dl        # 0x1b4661ded
   14000d6eb:	rex.XB jne 0x14000d760
   14000d6ee:	jb     0x14000d755
   14000d6f0:	outs   dx,BYTE PTR ds:[rsi]
   14000d6f1:	je     0x14000d747
   14000d6f3:	push   0x64616572
   14000d6f8:	rex.WB
   14000d6f9:	add    BYTE PTR fs:[rax],al
   14000d6fc:	or     BYTE PTR [rip+0x45746553],al        # 0x185753c55
   14000d702:	jbe    0x14000d769
   14000d704:	outs   dx,BYTE PTR ds:[rsi]
   14000d705:	je     0x14000d707
   14000d707:	add    al,dl
   14000d709:	add    DWORD PTR [rdi+0x65],eax
   14000d70c:	je     0x14000d751
   14000d70e:	outs   dx,DWORD PTR ds:[rsi]
   14000d70f:	ins    DWORD PTR es:[rdi],dx
   14000d710:	ins    DWORD PTR es:[rdi],dx
   14000d711:	(bad)  
   14000d712:	outs   dx,BYTE PTR ds:[rsi]
   14000d713:	imul   r13,QWORD PTR fs:[rsi+0x65],0x5c80057
   14000d71c:	push   rdi
   14000d71d:	(bad)  
   14000d71e:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000d726:	ins    BYTE PTR es:[edi],dx
   14000d728:	gs rex.WRXB (bad) 
   14000d72b:	push   0x65
   14000d72d:	movsxd esi,DWORD PTR [rax+rax*1+0x6d]
   14000d731:	add    eax,0x65656c53
   14000d736:	jo     0x14000d738
   14000d738:	mov    ah,0x0
   14000d73a:	rex.XB jb 0x14000d7a2
   14000d73d:	(bad)  
   14000d73e:	je     0x14000d7a5
   14000d740:	rex.RB jbe 0x14000d7a8
   14000d743:	outs   dx,BYTE PTR ds:[rsi]
   14000d744:	je     0x14000d79d
   14000d746:	add    BYTE PTR [rax],al
   14000d748:	out    0x0,al
   14000d74a:	rex.XB jb 0x14000d7b2
   14000d74d:	(bad)  
   14000d74e:	je     0x14000d7b5
   14000d750:	push   rsp
   14000d751:	push   0x64616572
   14000d756:	add    BYTE PTR [rax],al
   14000d758:	pop    rbx
   14000d759:	add    DWORD PTR [rbp+0x78],eax
   14000d75c:	jo     0x14000d7bf
   14000d75e:	outs   dx,BYTE PTR ds:[rsi]
   14000d75f:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000d762:	jbe    0x14000d7cd
   14000d764:	jb     0x14000d7d5
   14000d766:	outs   dx,BYTE PTR ds:[rsi]
   14000d767:	ins    DWORD PTR es:[rdi],dx
   14000d768:	outs   dx,BYTE PTR gs:[rsi]
   14000d76a:	je     0x14000d7bf
   14000d76c:	je     0x14000d7e0
   14000d76e:	imul   ebp,DWORD PTR [rsi+0x67],0xaf005773
   14000d775:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000d779:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14000d782:	add    BYTE PTR [rax],al
   14000d784:	rex.WXB
   14000d785:	rex.RB push r10
   14000d787:	rex.WRX
   14000d788:	rex.RB
   14000d789:	xor    r14,QWORD PTR [rdx]
   14000d78c:	cs fs ins BYTE PTR es:[rdi],dx
   14000d78f:	ins    BYTE PTR es:[rdi],dx
   14000d790:	add    BYTE PTR [rax],al
   14000d792:	xor    DWORD PTR [rax],eax
   14000d794:	rex.XB push 0x654e7261
   14000d79a:	js     0x14000d810
   14000d79c:	push   rdi
   14000d79d:	add    BYTE PTR [rsi+0x736f5002],al
   14000d7a3:	je     0x14000d7f9
   14000d7a5:	push   0x64616572
   14000d7aa:	rex.WRB
   14000d7ab:	gs jae 0x14000d821
   14000d7ae:	(bad)  
   14000d7af:	addr32 gs push rdi
   14000d7b2:	add    BYTE PTR [rax],al
   14000d7b4:	cmp    al,0x0
   14000d7b6:	rex.XB push 0x70557261
   14000d7bc:	jo     0x14000d823
   14000d7be:	jb     0x14000d817
   14000d7c0:	add    BYTE PTR [rax],al
   14000d7c2:	js     0x14000d7c5
   14000d7c4:	rex.RXB
   14000d7c5:	gs je  0x14000d815
   14000d7c8:	gs jae 0x14000d83e
   14000d7cb:	(bad)  
   14000d7cc:	addr32 gs push rdi
   14000d7cf:	add    BYTE PTR [rbx+0x3],ch
   14000d7d2:	push   rsp
   14000d7d3:	jb     0x14000d836
   14000d7d5:	outs   dx,BYTE PTR ds:[rsi]
   14000d7d6:	jae    0x14000d844
   14000d7d8:	(bad)  
   14000d7d9:	je     0x14000d840
   14000d7db:	rex.WRB
   14000d7dc:	gs jae 0x14000d852
   14000d7df:	(bad)  
   14000d7e0:	add    BYTE PTR gs:[eax],al
   14000d7e4:	mov    dh,0x0
   14000d7e6:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14000d7ee:	rex.WRB
   14000d7ef:	gs jae 0x14000d865
   14000d7f2:	(bad)  
   14000d7f3:	addr32 gs push rdi
   14000d7f6:	add    BYTE PTR [rax],al
   14000d7f8:	push   rbp
   14000d7f9:	push   rbx
   14000d7fa:	rex.RB push r10
   14000d7fc:	xor    esi,DWORD PTR [rdx]
   14000d7fe:	cs fs ins BYTE PTR es:[rdi],dx
   14000d801:	ins    BYTE PTR es:[rdi],dx
   14000d802:	add    BYTE PTR [rax],al
   14000d804:	or     eax,0x73637705
   14000d809:	outs   dx,BYTE PTR ds:[rsi]
   14000d80a:	movsxd esi,DWORD PTR [rax+0x79]
   14000d80d:	pop    rdi
   14000d80e:	jae    0x14000d810
   14000d810:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000d817:	movsxd eax,DWORD PTR [rax]
   14000d819:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000d81d:	jb     0x14000d884
   14000d81f:	add    BYTE PTR gs:[rax],al
   14000d822:	xchg   ebx,eax
   14000d823:	add    al,0x6d
   14000d825:	gs ins DWORD PTR es:[rdi],dx
   14000d827:	movsxd esi,DWORD PTR [rax+0x79]
   14000d82a:	pop    rdi
   14000d82b:	jae    0x14000d82d
   14000d82d:	add    BYTE PTR [rsi+0x75705f02],bl
   14000d833:	jb     0x14000d89a
   14000d835:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d838:	ins    BYTE PTR es:[rdi],dx
   14000d839:	add    BYTE PTR [rip+0x73637705],al        # 0x1b3644f44
   14000d83f:	movsxd esi,DWORD PTR [rax+0x79]
   14000d842:	pop    rdi
   14000d843:	jae    0x14000d845
   14000d845:	add    BYTE PTR [rax],al
   14000d847:	add    eax,0x63736377
   14000d84c:	(bad)  
   14000d84d:	je     0x14000d8ae
   14000d84f:	jae    0x14000d851
   14000d851:	add    BYTE PTR [rsi+0x6d656d04],dl
   14000d857:	jae    0x14000d8be
   14000d859:	je     0x14000d85b
   14000d85b:	add    BYTE PTR [rbx],cl
   14000d85d:	add    BYTE PTR [rdi],bh
   14000d85f:	(bad)  
   14000d860:	xor    BYTE PTR [rbp+0x78],ah
   14000d863:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d866:	je     0x14000d8d1
   14000d868:	outs   dx,DWORD PTR ds:[rsi]
   14000d869:	outs   dx,BYTE PTR ds:[rsi]
   14000d86a:	rex
   14000d86b:	rex push rcx
   14000d86d:	rex.RB
   14000d86e:	rex.B
   14000d86f:	rex.B
   14000d870:	rex
   14000d871:	rex.B
   14000d872:	rex.RB
   14000d873:	rex.X push rcx
   14000d875:	rex.RB
   14000d876:	rex.X
   14000d877:	rex.R
   14000d878:	rex.W
   14000d879:	rex pop rdx
   14000d87b:	add    BYTE PTR [rax+rax*1],cl
   14000d87e:	(bad)  
   14000d87f:	(bad)  
   14000d880:	xor    BYTE PTR [rbp+0x78],ah
   14000d883:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d886:	je     0x14000d8f1
   14000d888:	outs   dx,DWORD PTR ds:[rsi]
   14000d889:	outs   dx,BYTE PTR ds:[rsi]
   14000d88a:	rex
   14000d88b:	rex push rcx
   14000d88d:	rex.RB
   14000d88e:	rex.B
   14000d88f:	rex.B
   14000d890:	rex
   14000d891:	rex.B
   14000d892:	rex.RB
   14000d893:	rex.X push rsi
   14000d895:	xor    BYTE PTR [rax+0x40],al
   14000d898:	pop    rdx
   14000d899:	add    BYTE PTR [rcx],dl
   14000d89b:	add    BYTE PTR [rdi],bh
   14000d89d:	(bad)  
   14000d89e:	xor    DWORD PTR [rbp+0x78],esp
   14000d8a1:	movsxd esp,DWORD PTR [rbp+0x70]
   14000d8a4:	je     0x14000d90f
   14000d8a6:	outs   dx,DWORD PTR ds:[rsi]
   14000d8a7:	outs   dx,BYTE PTR ds:[rsi]
   14000d8a8:	rex
   14000d8a9:	rex push rbp
   14000d8ab:	rex.RB
   14000d8ac:	rex.B
   14000d8ad:	rex.B
   14000d8ae:	rex pop rax
   14000d8b0:	pop    rdx
   14000d8b1:	add    BYTE PTR [rcx],dh
   14000d8b3:	add    BYTE PTR [rdi],bh
   14000d8b5:	ja     0x14000d91f
   14000d8b7:	(bad)  
   14000d8b8:	je     0x14000d8fa
   14000d8ba:	gs js  0x14000d920
   14000d8bd:	gs jo  0x14000d934
   14000d8c0:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000d8c7:	rex.X
   14000d8c8:	push   r8
   14000d8ca:	rex.RB
   14000d8cb:	rex.X
   14000d8cc:	rex.R pop rax
   14000d8ce:	pop    rdx
   14000d8cf:	add    BYTE PTR [rdi+0x61635f00],bh
   14000d8d5:	ins    BYTE PTR es:[rdi],dx
   14000d8d6:	ins    BYTE PTR es:[rdi],dx
   14000d8d7:	outs   dx,BYTE PTR ds:[rsi]
   14000d8d8:	gs ja  0x14000d943
   14000d8db:	add    BYTE PTR [rbx+0x0],cl
   14000d8de:	pop    rdi
   14000d8df:	rex.XB js 0x14000d95a
   14000d8e2:	push   rsp
   14000d8e3:	push   0x45776f72
   14000d8e8:	js     0x14000d94d
   14000d8ea:	gs jo  0x14000d961
   14000d8ed:	imul   ebp,DWORD PTR [rdi+0x6e],0x550000
   14000d8f4:	pop    rdi
   14000d8f5:	pop    rax
   14000d8f6:	movsxd esi,DWORD PTR [rax+0x74]
   14000d8f9:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000d902:	pop    rdi
   14000d903:	(bad)  
   14000d904:	ins    DWORD PTR es:[rdi],dx
   14000d905:	jae    0x14000d96e
   14000d907:	pop    rdi
   14000d908:	gs js  0x14000d974
   14000d90b:	je     0x14000d90d
   14000d90d:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000d913:	addr32 gs je 0x14000d984
   14000d917:	(bad)  
   14000d918:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000d91f:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000d925:	gs je  0x14000d987
   14000d928:	(bad)  
   14000d929:	jo     0x14000d99b
   14000d92b:	pop    rdi
   14000d92c:	je     0x14000d9a7
   14000d92e:	jo     0x14000d995
   14000d930:	add    BYTE PTR [rax],al
   14000d932:	xor    al,BYTE PTR [riz*2+0x746978]
   14000d939:	add    BYTE PTR [rsi],cl
   14000d93b:	add    DWORD PTR [rdi+0x65],ebx
   14000d93e:	js     0x14000d9a9
   14000d940:	je     0x14000d942
   14000d942:	rol    DWORD PTR [rax],0x5f
   14000d945:	movsxd esp,DWORD PTR [rbp+0x78]
   14000d948:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000d950:	jae    0x14000d9b7
   14000d952:	je     0x14000d9c9
   14000d954:	jae    0x14000d9bb
   14000d956:	jb     0x14000d9c5
   14000d958:	(bad)  
   14000d959:	je     0x14000d9c3
   14000d95b:	gs jb  0x14000d9d0
   14000d95e:	add    BYTE PTR [rax],al
   14000d960:	jge    0x14000d963
   14000d962:	pop    rdi
   14000d963:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000d96a:	ins    DWORD PTR es:[rdi],dx
   14000d96b:	add    BYTE PTR [rdi+0x0],dl
   14000d96e:	pop    rdi
   14000d96f:	pop    rdi
   14000d970:	rex.XB pop r15
   14000d972:	jae    0x14000d9e4
   14000d974:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000d978:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000d97f:	ins    BYTE PTR es:[rdi],dx
   14000d980:	gs jb  0x14000d983
   14000d983:	add    BYTE PTR [rdx+0x63775f03],al
   14000d989:	ins    DWORD PTR es:[rdi],dx
   14000d98a:	fs ins BYTE PTR es:[rdi],dx
   14000d98c:	outs   dx,BYTE PTR ds:[rsi]
   14000d98d:	add    BYTE PTR [rdi],ah
   14000d98f:	add    DWORD PTR [rdi+0x66],ebx
   14000d992:	ins    DWORD PTR es:[rdi],dx
   14000d993:	outs   dx,DWORD PTR ds:[rsi]
   14000d994:	fs add BYTE PTR gs:[rax],al
   14000d998:	rol    BYTE PTR [rax],cl
   14000d99a:	pop    rdi
   14000d99b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d99e:	ins    DWORD PTR es:[rdi],dx
   14000d99f:	outs   dx,DWORD PTR ds:[rsi]
   14000d9a0:	fs add BYTE PTR gs:[rax],al
   14000d9a4:	(bad)  
   14000d9a5:	add    BYTE PTR [rdi],bh
   14000d9a7:	je     0x14000da0e
   14000d9a9:	jb     0x14000da18
   14000d9ab:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000d9b2:	pop    rcx
   14000d9b3:	pop    r8
   14000d9b5:	pop    rax
   14000d9b6:	pop    rdx
   14000d9b7:	add    BYTE PTR [rdx],dl
   14000d9b9:	add    BYTE PTR [rdi],bh
   14000d9bb:	(bad)  
   14000d9bc:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000d9c0:	gs pop rdi
   14000d9c2:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000d9c9:	rex.RB
   14000d9ca:	rex.B
   14000d9cb:	rex.B
   14000d9cc:	rex pop rax
   14000d9ce:	pop    rdx
   14000d9cf:	add    BYTE PTR [rbp+0x73],ch
   14000d9d2:	jbe    0x14000da37
   14000d9d4:	jb     0x14000da4a
   14000d9d6:	cs fs ins BYTE PTR es:[rdi],dx
   14000d9d9:	ins    BYTE PTR es:[rdi],dx
   14000d9da:	add    BYTE PTR [rax],al
   14000d9dc:	add    eax,0x72655f01
   14000d9e1:	jb     0x14000da51
   14000d9e3:	outs   dx,DWORD PTR ds:[rsi]
   14000d9e4:	add    BYTE PTR [rax],al
   14000d9e6:	test   eax,0x61657204
   14000d9eb:	ins    BYTE PTR es:[rdi],dx
   14000d9ec:	ins    BYTE PTR es:[rdi],dx
   14000d9ed:	outs   dx,DWORD PTR ds:[rsi]
   14000d9ee:	movsxd eax,DWORD PTR [rax]
   14000d9f0:	out    0x1,al
   14000d9f2:	pop    rdi
   14000d9f3:	ins    BYTE PTR es:[rdi],dx
   14000d9f4:	outs   dx,DWORD PTR ds:[rsi]
   14000d9f5:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000d9f8:	add    ebx,DWORD PTR [r15+0x75]
   14000d9fc:	outs   dx,BYTE PTR ds:[rsi]
   14000d9fd:	ins    BYTE PTR es:[rdi],dx
   14000d9fe:	outs   dx,DWORD PTR ds:[rsi]
   14000d9ff:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000da02:	jnp    0x14000da04
   14000da04:	pop    rdi
   14000da05:	pop    rdi
   14000da06:	fs ins BYTE PTR es:[rdi],dx
   14000da08:	ins    BYTE PTR es:[rdi],dx
   14000da09:	outs   dx,DWORD PTR ds:[rsi]
   14000da0a:	outs   dx,BYTE PTR ds:[rsi]
   14000da0b:	gs js  0x14000da77
   14000da0e:	je     0x14000da10
   14000da10:	nop
   14000da11:	add    bl,BYTE PTR [rdi+0x6f]
   14000da14:	outs   dx,BYTE PTR ds:[rsi]
   14000da15:	gs js  0x14000da81
   14000da18:	je     0x14000da1a
   14000da1a:	mov    BYTE PTR [rdx],0x52
   14000da1d:	je     0x14000da8b
   14000da1f:	rex.XB (bad) 
   14000da21:	jo     0x14000da97
   14000da23:	jne    0x14000da97
   14000da25:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000da28:	outs   dx,BYTE PTR ds:[rsi]
   14000da29:	je     0x14000da90
   14000da2b:	js     0x14000daa1
   14000da2d:	add    BYTE PTR [rdi+0x4],dh
   14000da30:	push   rdx
   14000da31:	je     0x14000da9f
   14000da33:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000da35:	outs   dx,DWORD PTR ds:[rsi]
   14000da36:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000da3a:	jne    0x14000daaa
   14000da3c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000da40:	outs   dx,BYTE PTR ds:[rsi]
   14000da41:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000da43:	je     0x14000dab7
   14000da45:	jns    0x14000da47
   14000da47:	add    BYTE PTR [rbx+0x6c745205],cl
   14000da4d:	push   rsi
   14000da4e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000da55:	outs   dx,BYTE PTR ds:[rsi]
   14000da56:	ja     0x14000dac1
   14000da58:	outs   dx,BYTE PTR ds:[rsi]
   14000da59:	add    BYTE PTR fs:[rax],al
   14000da5c:	outs   dx,BYTE PTR ds:[rsi]
   14000da5d:	je     0x14000dac3
   14000da5f:	ins    BYTE PTR es:[rdi],dx
   14000da60:	ins    BYTE PTR es:[rdi],dx
   14000da61:	cs fs ins BYTE PTR es:[rdi],dx
   14000da64:	ins    BYTE PTR es:[rdi],dx
   14000da65:	add    BYTE PTR [rdi],bh
   14000da67:	add    BYTE PTR [rbx+0x6f],al
   14000da6a:	push   rsp
   14000da6b:	(bad)  
   14000da6c:	jae    0x14000dad9
   14000da6e:	rex.WRB
   14000da6f:	gs ins DWORD PTR es:[rdi],dx
   14000da71:	rex.RX jb 0x14000dad9
   14000da74:	add    BYTE PTR gs:[rax+0x0],al
   14000da78:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000da7a:	push   rsp
   14000da7b:	(bad)  
   14000da7c:	jae    0x14000dae9
   14000da7e:	rex.WRB
   14000da7f:	gs ins DWORD PTR es:[rdi],dx
   14000da81:	push   rdx
   14000da82:	gs (bad) 
   14000da84:	ins    BYTE PTR es:[rdi],dx
   14000da85:	ins    BYTE PTR es:[rdi],dx
   14000da86:	outs   dx,DWORD PTR ds:[rsi]
   14000da87:	movsxd eax,DWORD PTR [rax]
   14000da89:	add    BYTE PTR [rsi],bh
   14000da8b:	add    BYTE PTR [rbx+0x6f],al
   14000da8e:	push   rsp
   14000da8f:	(bad)  
   14000da90:	jae    0x14000dafd
   14000da92:	rex.WRB
   14000da93:	gs ins DWORD PTR es:[rdi],dx
   14000da95:	rex.B ins BYTE PTR es:[rdi],dx
   14000da97:	ins    BYTE PTR es:[rdi],dx
   14000da98:	outs   dx,DWORD PTR ds:[rsi]
   14000da99:	movsxd eax,DWORD PTR [rax]
   14000da9b:	add    BYTE PTR [rsi],ah
   14000da9d:	add    BYTE PTR [rbx+0x6f],al
   14000daa0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000daa2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000daaa:	rex.RB js 0x14000daad
   14000daad:	add    BYTE PTR [rdx+0x0],al
   14000dab0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000dab2:	push   rbp
   14000dab3:	outs   dx,BYTE PTR ds:[rsi]
   14000dab4:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000dabb:	imul   edi,DWORD PTR [rdx+0x65],0x370000
   14000dac2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000dac4:	push   rdx
   14000dac5:	gs jae 0x14000db3d
   14000dac8:	ins    DWORD PTR es:[rdi],dx
   14000dac9:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000dacc:	(bad)  
   14000dacd:	jae    0x14000db42
   14000dacf:	rex.WRXB (bad) 
   14000dad1:	push   0x65
   14000dad3:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000dad7:	add    BYTE PTR [rax+0x0],dl
   14000dada:	push   rbx
   14000dadb:	je     0x14000db4f
   14000dadd:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f7246
   14000dae4:	rex.RXB push r13
   14000dae6:	rex.WB
   14000dae7:	xor    r8b,BYTE PTR [rax]
   14000daea:	or     BYTE PTR [rax],al
   14000daec:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000daee:	rex.XB jb 0x14000db56
   14000daf1:	(bad)  
   14000daf2:	je     0x14000db59
   14000daf4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000daf6:	jae    0x14000db6c
   14000daf8:	(bad)  
   14000daf9:	outs   dx,BYTE PTR ds:[rsi]
   14000dafa:	movsxd esp,DWORD PTR [rbp+0x0]
   14000dafd:	add    BYTE PTR [rdx],dh
   14000daff:	add    BYTE PTR [rbx+0x6f],al
   14000db02:	push   rdx
   14000db03:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   14000db0c:	(bad)  
   14000db0d:	jae    0x14000db82
   14000db0f:	rex.WRXB (bad) 
   14000db11:	push   0x65
   14000db13:	movsxd esi,DWORD PTR [rax+rax*1+0x39]
   14000db17:	add    BYTE PTR [rbx+0x6f],al
   14000db1a:	push   rdx
   14000db1b:	gs jbe 0x14000db8d
   14000db1e:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14000db22:	(bad)  
   14000db23:	jae    0x14000db98
   14000db25:	rex.WRXB (bad) 
   14000db27:	push   0x65
   14000db29:	movsxd esi,DWORD PTR [rax+rax*1+0x3c]
   14000db2d:	add    BYTE PTR [rbx+0x6f],al
   14000db30:	push   rbx
   14000db31:	jne    0x14000dba6
   14000db33:	jo     0x14000db9a
   14000db35:	outs   dx,BYTE PTR ds:[rsi]
   14000db36:	fs rex.XB ins BYTE PTR es:[rdi],dx
   14000db39:	(bad)  
   14000db3a:	jae    0x14000dbaf
   14000db3c:	rex.WRXB (bad) 
   14000db3e:	push   0x65
   14000db40:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000db44:	and    BYTE PTR [rax],al
   14000db46:	rex.RXB
   14000db47:	gs je  0x14000db9d
   14000db4a:	je     0x14000dbad
   14000db4c:	jb     0x14000dbc2
   14000db4e:	jne    0x14000dbc0
   14000db50:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000db52:	outs   dx,WORD PTR ds:[rsi]
   14000db54:	push   rdi
   14000db55:	add    BYTE PTR [rcx],dl
   14000db57:	add    BYTE PTR [rbp+0x6e],dl
   14000db5a:	push   0x6c646e61
   14000db5f:	gs fs rex.RB js 0x14000dbc7
   14000db64:	gs jo  0x14000dbdb
   14000db67:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000db6e:	gs jb  0x14000db71
   14000db71:	add    BYTE PTR [rdi],cl
   14000db73:	add    BYTE PTR [rbx+0x65],dl
   14000db76:	je     0x14000dbcd
   14000db78:	outs   dx,BYTE PTR ds:[rsi]
   14000db79:	push   0x6c646e61
   14000db7e:	gs fs rex.RB js 0x14000dbe6
   14000db83:	gs jo  0x14000dbfa
   14000db86:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000db8d:	gs jb  0x14000db90
   14000db90:	or     al,0x0
   14000db92:	rex.RXB
   14000db93:	gs je  0x14000dbd9
   14000db96:	jne    0x14000dc0a
   14000db98:	jb     0x14000dbff
   14000db9a:	outs   dx,BYTE PTR ds:[rsi]
   14000db9b:	je     0x14000dbed
   14000db9d:	jb     0x14000dc0e
   14000db9f:	movsxd esp,DWORD PTR [rbp+0x73]
   14000dba2:	jae    0x14000dba4
   14000dba4:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000dba9:	ins    DWORD PTR es:[rdi],dx
   14000dbaa:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000dbb1:	outs   dx,DWORD PTR ds:[rsi]
   14000dbb2:	movsxd esp,DWORD PTR [rbp+0x73]
   14000dbb5:	jae    0x14000dbb7
   14000dbb7:	add    BYTE PTR [rax],al
   14000dbb9:	add    BYTE PTR [rcx+0x75],dl
   14000dbbc:	gs jb  0x14000dc38
   14000dbbf:	push   rax
   14000dbc0:	gs jb  0x14000dc29
   14000dbc3:	outs   dx,DWORD PTR ds:[rsi]
   14000dbc4:	jb     0x14000dc33
   14000dbc6:	(bad)  
   14000dbc7:	outs   dx,BYTE PTR ds:[rsi]
   14000dbc8:	movsxd esp,DWORD PTR [rbp+0x43]
   14000dbcb:	outs   dx,DWORD PTR ds:[rsi]
   14000dbcc:	jne    0x14000dc3c
   14000dbce:	je     0x14000dc35
   14000dbd0:	jb     0x14000dbd2
   14000dbd2:	or     eax,0x74654700
   14000dbd7:	rex.XB jne 0x14000dc4c
   14000dbda:	jb     0x14000dc41
   14000dbdc:	outs   dx,BYTE PTR ds:[rsi]
   14000dbdd:	je     0x14000dc2f
   14000dbdf:	jb     0x14000dc50
   14000dbe1:	movsxd esp,DWORD PTR [rbp+0x73]
   14000dbe4:	jae    0x14000dc2f
   14000dbe6:	add    BYTE PTR fs:[rax+rax*1],dl
   14000dbea:	rex.RXB
   14000dbeb:	gs je  0x14000dc41
   14000dbee:	jns    0x14000dc63
   14000dbf0:	je     0x14000dc57
   14000dbf2:	ins    DWORD PTR es:[rdi],dx
   14000dbf3:	push   rsp
   14000dbf4:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000dbfb:	ins    BYTE PTR es:[rdi],dx
   14000dbfc:	gs push rsp
   14000dbfe:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000dc05:	gs je  0x14000dc5c
   14000dc08:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000dc0f:	je     0x14000dc11
   14000dc11:	add    BYTE PTR [rsi],al
   14000dc13:	add    BYTE PTR [rdi+0x75],cl
   14000dc16:	je     0x14000dc88
   14000dc18:	jne    0x14000dc8e
   14000dc1a:	rex.R
   14000dc1b:	gs (bad) 
   14000dc1d:	jne    0x14000dc86
   14000dc1f:	push   rbx
   14000dc20:	je     0x14000dc94
   14000dc22:	imul   ebp,DWORD PTR [rsi+0x67],0x4f000041
   14000dc29:	rex.WR
   14000dc2a:	rex.RB
   14000dc2b:	push   r13
   14000dc2d:	push   rsp
   14000dc2e:	xor    esi,DWORD PTR [rdx]
   14000dc30:	cs fs ins BYTE PTR es:[rdi],dx
   14000dc33:	ins    BYTE PTR es:[rdi],dx
   14000dc34:	add    BYTE PTR [rax],al
   14000dc36:	(bad)  
   14000dc37:	jo     0x14000dca2
   14000dc39:	sub    eax,0x772d736d
   14000dc3e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000dc45:	sub    eax,0x2d6d6f63
   14000dc4a:	ins    BYTE PTR es:[rdi],dx
   14000dc4b:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e320982
   14000dc51:	fs ins BYTE PTR es:[rdi],dx
   14000dc53:	ins    BYTE PTR es:[rdi],dx
   14000dc54:	add    BYTE PTR [rax],al
   14000dc56:	(bad)  
   14000dc57:	jo     0x14000dcc2
   14000dc59:	sub    eax,0x772d736d
   14000dc5e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000dc65:	sub    eax,0x69737973
   14000dc6a:	outs   dx,BYTE PTR ds:[rsi]
   14000dc6b:	outs   dx,WORD PTR ds:[rsi]
   14000dc6d:	sub    eax,0x322d316c
   14000dc72:	sub    eax,0x6c642e31
   14000dc77:	ins    BYTE PTR es:[rdi],dx
   14000dc78:	add    BYTE PTR [rax],al
   14000dc7a:	(bad)  
   14000dc7b:	jo     0x14000dce6
   14000dc7d:	sub    eax,0x772d736d
   14000dc82:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000dc89:	sub    eax,0x636f7270
   14000dc8e:	gs jae 0x14000dd04
   14000dc91:	je     0x14000dcfb
   14000dc93:	jb     0x14000dcfa
   14000dc95:	(bad)  
   14000dc96:	fs jae 0x14000dcc6
   14000dc99:	ins    BYTE PTR es:[rdi],dx
   14000dc9a:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e3309d1
   14000dca0:	fs ins BYTE PTR es:[rdi],dx
   14000dca2:	ins    BYTE PTR es:[rdi],dx
   14000dca3:	add    BYTE PTR [rcx+0x70],ah
   14000dca6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e501d
   14000dcb0:	outs   dx,DWORD PTR ds:[rsi]
   14000dcb1:	jb     0x14000dd18
   14000dcb3:	sub    eax,0x6f727265
   14000dcb8:	jb     0x14000dd22
   14000dcba:	(bad)  
   14000dcbb:	outs   dx,BYTE PTR ds:[rsi]
   14000dcbc:	fs ins BYTE PTR es:[rdi],dx
   14000dcbe:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000dcc5:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac650afc
   14000dccb:	ins    BYTE PTR es:[rdi],dx
   14000dccc:	add    BYTE PTR [rax],al
   14000dcce:	(bad)  
   14000dccf:	jo     0x14000dd3a
   14000dcd1:	sub    eax,0x772d736d
   14000dcd6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000dcdd:	sub    eax,0x666f7270
   14000dce2:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000dcea:	sub    eax,0x6c642e30
   14000dcef:	ins    BYTE PTR es:[rdi],dx
   14000dcf0:	add    BYTE PTR [rax],al
   14000dcf2:	(bad)  
   14000dcf3:	jo     0x14000dd5e
   14000dcf5:	sub    eax,0x772d736d
   14000dcfa:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000dd01:	sub    eax,0x75626564
   14000dd06:	addr32 sub eax,0x312d316c
   14000dd0c:	sub    eax,0x6c642e31
   14000dd11:	ins    BYTE PTR es:[rdi],dx
   14000dd12:	add    BYTE PTR [rax],al
   14000dd14:	je     0x14000dd19
   14000dd16:	push   rbp
   14000dd17:	outs   dx,BYTE PTR ds:[rsi]
   14000dd18:	jb     0x14000dd7f
   14000dd1a:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   14000dd22:	(bad)  
   14000dd23:	jae    0x14000dd98
   14000dd25:	add    BYTE PTR [r8],al
   14000dd28:	or     DWORD PTR [rax],eax
   14000dd2a:	rex.R
   14000dd2b:	gs ins BYTE PTR es:[rdi],dx
   14000dd2d:	gs je  0x14000dd95
   14000dd30:	push   rbp
   14000dd31:	jae    0x14000dd98
   14000dd33:	jb     0x14000dd87
   14000dd35:	imul   esi,DWORD PTR gs:[ebx+0x74],0x654b7972
   14000dd3e:	jns    0x14000dd86
   14000dd40:	jb     0x14000ddb1
   14000dd42:	ins    DWORD PTR es:[rdi],dx
   14000dd43:	rex.B ins BYTE PTR es:[rdi],dx
   14000dd45:	ins    BYTE PTR es:[rdi],dx
   14000dd46:	push   rbp
   14000dd47:	jae    0x14000ddae
   14000dd49:	jb     0x14000dd9e
   14000dd4b:	je     0x14000ddbc
   14000dd4d:	jb     0x14000ddb4
   14000dd4f:	add    BYTE PTR [rcx+0x70],al
   14000dd52:	jo     0x14000ddac
   14000dd54:	rex.B ins BYTE PTR es:[rdi],dx
   14000dd56:	ins    BYTE PTR es:[rdi],dx
   14000dd57:	push   rbp
   14000dd58:	jae    0x14000ddbf
   14000dd5a:	jb     0x14000ddaf
   14000dd5c:	je     0x14000ddcd
   14000dd5e:	jb     0x14000ddc5
   14000dd60:	cs fs ins BYTE PTR es:[rdi],dx
   14000dd63:	ins    BYTE PTR es:[rdi],dx
   14000dd64:	add    BYTE PTR [rax],al
   14000dd66:	xchg   ebx,eax
   14000dd67:	add    dl,BYTE PTR [rdx+0x65]
   14000dd6a:	addr32 push rcx
   14000dd6c:	jne    0x14000ddd3
   14000dd6e:	jb     0x14000dde9
   14000dd70:	push   rsi
   14000dd71:	(bad)  
   14000dd72:	ins    BYTE PTR es:[rdi],dx
   14000dd73:	jne    0x14000ddda
   14000dd75:	rex.RB js 0x14000ddcf
   14000dd78:	add    BYTE PTR [rax],al
   14000dd7a:	and    BYTE PTR [rax],al
   14000dd7c:	rex.B ins BYTE PTR es:[rdi],dx
   14000dd7e:	ins    BYTE PTR es:[rdi],dx
   14000dd7f:	outs   dx,DWORD PTR ds:[rsi]
   14000dd80:	movsxd esp,DWORD PTR [rcx+0x74]
   14000dd83:	rex.B outs dx,BYTE PTR gs:[rsi]
   14000dd86:	rex.WB outs dx,BYTE PTR fs:[rsi]
   14000dd89:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000dd91:	push   rbx
   14000dd92:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x72430092
   14000dd9a:	gs (bad) 
   14000dd9c:	je     0x14000de03
   14000dd9e:	push   rdi
   14000dd9f:	gs ins BYTE PTR es:[rdi],dx
   14000dda1:	ins    BYTE PTR es:[rdi],dx
   14000dda2:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   14000dda4:	outs   dx,DWORD PTR ds:[rsi]
   14000dda5:	ja     0x14000de15
   14000dda7:	push   rbx
   14000dda8:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6f4c03b5
   14000ddb0:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ddb3:	rex.B ins BYTE PTR es:[rdi],dx
   14000ddb5:	ins    BYTE PTR es:[rdi],dx
   14000ddb6:	outs   dx,DWORD PTR ds:[rsi]
   14000ddb7:	movsxd eax,DWORD PTR [rax]
   14000ddb9:	add    BYTE PTR [rcx+0x636f4c03],bh
   14000ddbf:	(bad)  
   14000ddc0:	ins    BYTE PTR es:[rdi],dx
   14000ddc1:	rex.RX jb 0x14000de29
   14000ddc4:	add    BYTE PTR gs:[rbx],ah
   14000ddc7:	add    eax,0x4c746553
   14000ddcc:	(bad)  
   14000ddcd:	jae    0x14000de43
   14000ddcf:	rex.RB jb 0x14000de44
   14000ddd2:	outs   dx,DWORD PTR ds:[rsi]
   14000ddd3:	jb     0x14000ddd5
   14000ddd5:	add    ch,ch
   14000ddd7:	add    BYTE PTR [rbx+0x72],al
   14000ddda:	gs (bad) 
   14000dddc:	je     0x14000de43
   14000ddde:	push   rsp
   14000dddf:	imul   ebp,DWORD PTR [rbp+0x65],0x65755172
   14000dde6:	jne    0x14000de4d
   14000dde8:	add    BYTE PTR [rax],al
   14000ddea:	(bad)  
   14000ddeb:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14000ddef:	gs je  0x14000de57
   14000ddf2:	push   rsp
   14000ddf3:	imul   ebp,DWORD PTR [rbp+0x65],0x65755172
   14000ddfa:	jne    0x14000de61
   14000ddfc:	rex.RB js 0x14000ddff
   14000ddff:	add    BYTE PTR [rdx+0x72655605],dh
   14000de05:	push   rbx
   14000de06:	gs je  0x14000de4c
   14000de09:	outs   dx,DWORD PTR ds:[rsi]
   14000de0a:	outs   dx,BYTE PTR ds:[rsi]
   14000de0b:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x73614d6e
   14000de14:	imul   eax,DWORD PTR [rax],0xffffffb8
   14000de17:	add    al,0x52
   14000de19:	je     0x14000de87
   14000de1b:	rex.XB (bad) 
   14000de1d:	jo     0x14000de93
   14000de1f:	jne    0x14000de93
   14000de21:	gs push rbx
   14000de23:	je     0x14000de86
   14000de25:	movsxd ebp,DWORD PTR [rbx+0x42]
   14000de28:	(bad)  
   14000de29:	movsxd ebp,DWORD PTR [rbx+0x54]
   14000de2c:	jb     0x14000de8f
   14000de2e:	movsxd esp,DWORD PTR [rbp+0x0]
   14000de31:	add    BYTE PTR [rbx+0x3],ah
   14000de34:	pop    rdi
   14000de35:	jbe    0x14000deaa
   14000de37:	outs   dx,BYTE PTR ds:[rsi]
   14000de38:	jo     0x14000deac
   14000de3a:	imul   ebp,DWORD PTR [rsi+0x74],0x1e000066
   14000de41:	add    al,0x52
   14000de43:	je     0x14000deb1
   14000de45:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000de47:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000de4f:	push   rdx
   14000de50:	gs jae 0x14000dec2
   14000de53:	jne    0x14000dec7
   14000de55:	movsxd esp,DWORD PTR [rbp+0x0]
   14000de58:	lea    eax,[rdx+rdx*2]
   14000de5b:	je     0x14000dec9
   14000de5d:	rex.WRX jne 0x14000decd
   14000de60:	(bad)  
   14000de61:	gs jb  0x14000deab
   14000de64:	outs   dx,BYTE PTR gs:[rsi]
   14000de66:	gs jb  0x14000ded2
   14000de69:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   14000de6d:	ins    BYTE PTR es:[rdi],dx
   14000de6e:	gs rex.RB ins BYTE PTR es:[rdi],dx
   14000de71:	gs ins DWORD PTR es:[rdi],dx
   14000de73:	outs   dx,BYTE PTR gs:[rsi]
   14000de75:	je     0x14000deea
   14000de77:	add    BYTE PTR [rdi],dh
   14000de79:	add    edx,DWORD PTR [rdx+0x74]
   14000de7c:	ins    BYTE PTR es:[rdi],dx
   14000de7d:	rex.R
   14000de7e:	gs ins BYTE PTR es:[rdi],dx
   14000de80:	gs je  0x14000dee8
   14000de83:	rex.RB ins BYTE PTR es:[rdi],dx
   14000de85:	gs ins DWORD PTR es:[rdi],dx
   14000de87:	outs   dx,BYTE PTR gs:[rsi]
   14000de89:	je     0x14000ded2
   14000de8b:	outs   dx,BYTE PTR gs:[rsi]
   14000de8d:	gs jb  0x14000def9
   14000de90:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   14000de94:	ins    BYTE PTR es:[rdi],dx
   14000de95:	add    BYTE PTR gs:[rax],al
   14000de98:	(bad)  
   14000de99:	add    edx,DWORD PTR [rdx+0x74]
   14000de9c:	ins    BYTE PTR es:[rdi],dx
   14000de9d:	rex.R
   14000de9e:	gs ins BYTE PTR es:[rdi],dx
   14000dea0:	gs je  0x14000df08
   14000dea3:	push   rdx
   14000dea4:	gs jae 0x14000df16
   14000dea7:	jne    0x14000df1b
   14000dea9:	movsxd esp,DWORD PTR [rbp+0x0]
   14000deac:	jb     0x14000deb2
   14000deae:	push   rdx
   14000deaf:	je     0x14000df1d
   14000deb1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000deb3:	outs   dx,DWORD PTR ds:[rsi]
   14000deb4:	imul   esi,DWORD PTR [rbp+0x70],0x45
   14000deb8:	ins    BYTE PTR es:[rdi],dx
   14000deb9:	gs ins DWORD PTR es:[rdi],dx
   14000debb:	outs   dx,BYTE PTR gs:[rsi]
   14000debd:	je     0x14000df06
   14000debf:	outs   dx,BYTE PTR gs:[rsi]
   14000dec1:	gs jb  0x14000df2d
   14000dec4:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   14000dec8:	ins    BYTE PTR es:[rdi],dx
   14000dec9:	add    BYTE PTR gs:[rax],al
   14000decc:	jno    0x14000ded1
   14000dece:	push   rdx
   14000decf:	je     0x14000df3d
   14000ded1:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000ded3:	jne    0x14000df42
   14000ded5:	gs jb  0x14000df39
   14000ded8:	je     0x14000df3f
   14000deda:	rex.RXB
   14000dedb:	outs   dx,BYTE PTR gs:[rsi]
   14000dedd:	gs jb  0x14000df49
   14000dee0:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   14000dee4:	ins    BYTE PTR es:[rdi],dx
   14000dee5:	add    BYTE PTR gs:[rax],al
   14000dee8:	sbb    DWORD PTR [rdx+rdx*2],eax
   14000deeb:	je     0x14000df59
   14000deed:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000deef:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000def7:	rex.RXB
   14000def8:	outs   dx,BYTE PTR gs:[rsi]
   14000defa:	gs jb  0x14000df66
   14000defd:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   14000df01:	ins    BYTE PTR es:[rdi],dx
   14000df02:	add    BYTE PTR gs:[rbx],ah
   14000df05:	add    al,0x52
   14000df07:	je     0x14000df75
   14000df09:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000df0b:	jae    0x14000df72
   14000df0d:	jb     0x14000df83
   14000df0f:	rex.RB ins BYTE PTR es:[rdi],dx
   14000df11:	gs ins DWORD PTR es:[rdi],dx
   14000df13:	outs   dx,BYTE PTR gs:[rsi]
   14000df15:	je     0x14000df5e
   14000df17:	outs   dx,BYTE PTR gs:[rsi]
   14000df19:	gs jb  0x14000df85
   14000df1c:	movsxd edx,DWORD PTR [rcx+riz*2+0x62]
   14000df20:	ins    BYTE PTR es:[rdi],dx
   14000df21:	add    BYTE PTR gs:[rax],al
   14000df24:	mov    al,BYTE PTR [rdx+rdx*2]
   14000df27:	je     0x14000df95
   14000df29:	rex.WRX je 0x14000df7f
   14000df2c:	je     0x14000df8f
   14000df2e:	je     0x14000dfa5
   14000df30:	jae    0x14000df86
   14000df32:	outs   dx,DWORD PTR ds:[rsi]
   14000df33:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000df35:	jae    0x14000df7c
   14000df37:	jb     0x14000dfab
   14000df39:	outs   dx,DWORD PTR ds:[rsi]
   14000df3a:	jb     0x14000df3c
   14000df3c:	scas   al,BYTE PTR es:[rdi]
   14000df3d:	add    edx,DWORD PTR [rdx+0x74]
   14000df40:	ins    BYTE PTR es:[rdi],dx
   14000df41:	rex.RX jb 0x14000dfa9
   14000df44:	gs push rbx
   14000df46:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x7452058a
   14000df4e:	ins    BYTE PTR es:[rdi],dx
   14000df4f:	push   rsi
   14000df50:	gs jb  0x14000dfbc
   14000df53:	data16 jns 0x14000dfac
   14000df56:	gs jb  0x14000dfcc
   14000df59:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
   14000df60:	add    BYTE PTR [rax],al
   14000df62:	add    DWORD PTR [rdx],0x52
   14000df65:	je     0x14000dfd3
   14000df67:	movsxd esi,DWORD PTR [r9+0x75]
   14000df6b:	imul   esi,DWORD PTR [rdx+0x65],0x6f736552
   14000df72:	jne    0x14000dfe6
   14000df74:	movsxd esp,DWORD PTR [rbp+0x45]
   14000df77:	js     0x14000dfdc
   14000df79:	ins    BYTE PTR es:[rdi],dx
   14000df7a:	jne    0x14000dfef
   14000df7c:	imul   esi,DWORD PTR [rsi+0x65],0x5204e100
   14000df83:	je     0x14000dff1
   14000df85:	push   rdx
   14000df86:	gs ins BYTE PTR es:[rdi],dx
   14000df88:	gs (bad) 
   14000df8a:	jae    0x14000dff1
   14000df8c:	push   rdx
   14000df8d:	gs jae 0x14000dfff
   14000df90:	jne    0x14000e004
   14000df92:	movsxd esp,DWORD PTR [rbp+0x0]
   14000df95:	add    BYTE PTR [rdx+rax*1+0x416c7452],al
   14000df9c:	movsxd esi,DWORD PTR [rcx+0x75]
   14000df9f:	imul   esi,DWORD PTR [rdx+0x65],0x6f736552
   14000dfa6:	jne    0x14000e01a
   14000dfa8:	movsxd esp,DWORD PTR [rbp+0x53]
   14000dfab:	push   0x64657261
   14000dfb0:	add    BYTE PTR [rax],al
   14000dfb2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dfb3:	add    dl,BYTE PTR [rdx+0x74]
   14000dfb6:	ins    BYTE PTR es:[rdi],dx
   14000dfb7:	rex.B ins BYTE PTR es:[rdi],dx
   14000dfb9:	ins    BYTE PTR es:[rdi],dx
   14000dfba:	outs   dx,DWORD PTR ds:[rsi]
   14000dfbb:	movsxd esp,DWORD PTR [rcx+0x74]
   14000dfbe:	rex.B outs dx,BYTE PTR gs:[rsi]
   14000dfc1:	rex.WB outs dx,BYTE PTR fs:[rsi]
   14000dfc4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000dfcc:	push   rbx
   14000dfcd:	imul   esp,DWORD PTR [rax+rax*1+0x5b],0x435f5f00
   14000dfd5:	js     0x14000e04f
   14000dfd7:	rex.RX jb 0x14000e03b
   14000dfda:	ins    DWORD PTR es:[rdi],dx
   14000dfdb:	gs rex.W (bad) 
   14000dfde:	outs   dx,BYTE PTR ds:[rsi]
   14000dfdf:	fs ins BYTE PTR es:[rdi],dx
   14000dfe1:	gs jb  0x14000e017
	...

Disassembly of section .data:

000000014000e000 <.data>:
   14000e000:	(bad)  
   14000e001:	(bad)  
   14000e002:	add    BYTE PTR [rax+0x1],al
   14000e005:	add    BYTE PTR [rax],al
   14000e007:	add    BYTE PTR [rcx],al
   14000e009:	add    BYTE PTR [rax],al
   14000e00b:	add    BYTE PTR [rax],al
   14000e00d:	add    BYTE PTR [rax],al
   14000e00f:	add    BYTE PTR [rdx],dh
   14000e011:	movabs ds:0x5dcd00002b992ddf,al
   14000e01a:	and    dl,dl
   14000e01c:	data16 (bad) 
   14000e01e:	(bad)  
   14000e01f:	jmp    rax
   14000e021:	stos   DWORD PTR es:[rdi],eax
   14000e022:	add    BYTE PTR [rax+0x1],al
   14000e025:	add    BYTE PTR [rax],al
   14000e027:	add    BYTE PTR [rax+0x1400014],dl
   14000e02d:	add    BYTE PTR [rax],al
   14000e02f:	add    BYTE PTR [rax],al
   14000e031:	(bad)  
   14000e032:	add    BYTE PTR [rax+0x1],al
   14000e035:	add    BYTE PTR [rax],al
   14000e037:	add    BYTE PTR [rax+0x18],dl
   14000e03a:	add    BYTE PTR [rax+0x1],al
	...
   14000e04d:	add    BYTE PTR [rax],al
   14000e04f:	add    BYTE PTR [rax+0x1400014],dh
   14000e055:	add    BYTE PTR [rax],al
   14000e057:	add    BYTE PTR [rax+0x1400014],dh
   14000e05d:	add    BYTE PTR [rax],al
   14000e05f:	add    BYTE PTR [rax+0x30],dl
   14000e062:	add    BYTE PTR [rax+0x1],al
	...
   14000e099:	add    BYTE PTR [rdx],al
   14000e09b:	add    BYTE PTR [rax],al
   14000e09d:	add    BYTE PTR [rax],al
   14000e09f:	add    al,al
   14000e0a1:	out    0x0,eax
   14000e0a3:	rex add DWORD PTR [rax],eax
   14000e0a6:	add    BYTE PTR [rax],al
   14000e0a8:	jo     0x14000e059
   14000e0aa:	add    BYTE PTR [rax+0x1],al
   14000e0ad:	add    BYTE PTR [rax],al
   14000e0af:	add    BYTE PTR [rax-0x51],ch
   14000e0b2:	add    BYTE PTR [rax+0x1],al
   14000e0b5:	add    BYTE PTR [rax],al
   14000e0b7:	add    BYTE PTR [rax-0x47],ch
   14000e0ba:	add    BYTE PTR [rax+0x1],al
   14000e0bd:	add    BYTE PTR [rax],al
   14000e0bf:	add    BYTE PTR [rax-0x5a],cl
   14000e0c2:	add    BYTE PTR [rax+0x1],al
	...
   14000e0cd:	add    BYTE PTR [rax],al
   14000e0cf:	add    BYTE PTR [rsi],ch
   14000e0d1:	(bad)  
   14000e0d2:	push   r14
   14000e0d4:	gs js  0x14000e13a
   14000e0d7:	gs jo  0x14000e14e
   14000e0da:	imul   ebp,DWORD PTR [rdi+0x6e],0x48004040
   14000e0e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e0e2:	add    BYTE PTR [rax+0x1],al
	...
   14000e0ed:	add    BYTE PTR [rax],al
   14000e0ef:	add    BYTE PTR [rsi],ch
   14000e0f1:	(bad)  
   14000e0f2:	push   r14
   14000e0f4:	(bad)
   14000e0f9:	ins    BYTE PTR es:[rdi],dx
   14000e0fa:	ins    BYTE PTR es:[rdi],dx
   14000e0fb:	outs   dx,DWORD PTR ds:[rsi]
   14000e0fc:	movsxd eax,DWORD PTR [rax+0x73]
   14000e0ff:	je     0x14000e165
   14000e101:	rex
   14000e102:	add    BYTE PTR [rax],al
   14000e105:	add    BYTE PTR [rax],al
   14000e107:	add    BYTE PTR [rax-0x5a],cl
   14000e10a:	add    BYTE PTR [rax+0x1],al
	...
   14000e115:	add    BYTE PTR [rax],al
   14000e117:	add    BYTE PTR [rsi],ch
   14000e119:	(bad)  
   14000e11a:	push   r14
   14000e11c:	rex.XB
   14000e11d:	rex.B je 0x14000e18c
   14000e120:	rex.RB js 0x14000e186
   14000e123:	gs jo  0x14000e19a
   14000e126:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14000e12d:	rex
   14000e12e:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140012000 <.pdata>:
   140012000:	add    BYTE PTR [rax],dl
   140012002:	add    BYTE PTR [rax],al
   140012004:	adc    DWORD PTR [rax],r8d
   140012007:	add    al,dh
   140012009:	ret    0x0
   14001200c:	push   rax
   14001200d:	adc    DWORD PTR [rax],eax
   14001200f:	add    bh,ch
   140012011:	adc    DWORD PTR [rax],eax
   140012013:	add    BYTE PTR [rax-0xfffff3d],dh
   140012019:	adc    DWORD PTR [rax],eax
   14001201b:	add    BYTE PTR [rdx+rdx*1+0x0],bl
   14001201f:	add    ah,bh
   140012021:	ret    0x0
   140012024:	(bad)  
   140012025:	adc    al,BYTE PTR [rax]
   140012027:	add    dl,bl
   140012029:	adc    al,BYTE PTR [rax]
   14001202b:	add    ah,bh
   14001202d:	ret    0x0
   140012030:	add    BYTE PTR [rbx],dl
   140012032:	add    BYTE PTR [rax],al
   140012034:	adc    eax,0xf0000014
   140012039:	ret    0x0
   14001203c:	push   rsp
   14001203d:	adc    al,0x0
   14001203f:	add    BYTE PTR [rbx+0x14],bh
   140012042:	add    BYTE PTR [rax],al
   140012044:	cld    
   140012045:	ret    0x0
   140012048:	rcl    BYTE PTR [rax+rax*1],0x0
   14001204c:	pop    rcx
   14001204d:	adc    eax,0xc3040000
   140012052:	add    BYTE PTR [rax],al
   140012054:	(bad)  
   140012055:	adc    eax,0x16ed0000
   14001205a:	add    BYTE PTR [rax],al
   14001205c:	sbb    bl,al
   14001205e:	add    BYTE PTR [rax],al
   140012060:	add    BYTE PTR [rdi],dl
   140012062:	add    BYTE PTR [rax],al
   140012064:	cmp    al,0x18
   140012066:	add    BYTE PTR [rax],al
   140012068:	sub    al,0xc3
   14001206a:	add    BYTE PTR [rax],al
   14001206c:	sbb    BYTE PTR [rax],0x0
   14001206f:	add    bl,al
   140012071:	sbb    BYTE PTR [rax],al
   140012073:	add    BYTE PTR [rax-0x2fffff3d],dh
   140012079:	sbb    BYTE PTR [rax],al
   14001207b:	add    BYTE PTR [rsi],cl
   14001207d:	sbb    DWORD PTR [rax],eax
   14001207f:	add    al,dh
   140012081:	ret    0x0
   140012084:	adc    al,0x19
   140012086:	add    BYTE PTR [rax],al
   140012088:	jge    0x1400120a5
   14001208a:	add    BYTE PTR [rax],al
   14001208c:	mov    eax,0x840000c3
   140012091:	sbb    eax,DWORD PTR [rax]
   140012093:	add    dh,ch
   140012095:	sbb    eax,0xc3d40000
   14001209a:	add    BYTE PTR [rax],al
   14001209c:	and    BYTE PTR [rsi],bl
   14001209e:	add    BYTE PTR [rax],al
   1400120a0:	jns    0x1400120c0
   1400120a2:	add    BYTE PTR [rax],al
   1400120a4:	lock ret 0x0
   1400120a8:	cwde   
   1400120a9:	(bad)  
   1400120aa:	add    BYTE PTR [rax],al
   1400120ac:	in     eax,0x1f
   1400120ae:	add    BYTE PTR [rax],al
   1400120b0:	in     al,0xc3
   1400120b2:	add    BYTE PTR [rax],al
   1400120b4:	in     al,dx
   1400120b5:	(bad)  
   1400120b6:	add    BYTE PTR [rax],al
   1400120b8:	pop    rbp
   1400120b9:	and    BYTE PTR [rax],al
   1400120bb:	add    BYTE PTR [rax+0x700000c4],ah
   1400120c1:	and    BYTE PTR [rax],al
   1400120c3:	add    BYTE PTR [rdx],al
   1400120c5:	and    DWORD PTR [rax],eax
   1400120c7:	add    al,bl
   1400120c9:	(bad)  
   1400120ca:	add    BYTE PTR [rax],al
   1400120cc:	xor    BYTE PTR [rcx],ah
   1400120ce:	add    BYTE PTR [rax],al
   1400120d0:	pop    rdi
   1400120d1:	and    DWORD PTR [rax],eax
   1400120d3:	add    al,dh
   1400120d5:	ret    0x0
   1400120d8:	push   0xffffffff85000021
   1400120dd:	and    DWORD PTR [rax],eax
   1400120df:	add    ah,bh
   1400120e1:	ret    0x0
   1400120e4:	nop
   1400120e5:	and    DWORD PTR [rax],eax
   1400120e7:	add    al,bh
   1400120e9:	and    DWORD PTR [rax],eax
   1400120eb:	add    BYTE PTR [rax+0xc3],dh
   1400120f1:	and    al,BYTE PTR [rax]
   1400120f3:	add    BYTE PTR [rsi+0x22],bh
   1400120f6:	add    BYTE PTR [rax],al
   1400120f8:	in     al,dx
   1400120f9:	(bad)  
   1400120fa:	add    BYTE PTR [rax],al
   1400120fc:	pushf  
   1400120fd:	and    al,BYTE PTR [rax]
   1400120ff:	add    cl,dh
   140012101:	and    eax,DWORD PTR [rax]
   140012103:	add    ah,bh
   140012105:	(bad)  
   140012106:	add    BYTE PTR [rax],al
   140012108:	clc    
   140012109:	and    eax,DWORD PTR [rax]
   14001210b:	add    BYTE PTR [rcx+rbp*1+0x0],ch
   14001210f:	add    BYTE PTR [rax*8+0x29740000],cl
   140012116:	add    BYTE PTR [rax],al
   140012118:	adc    al,0x2b
   14001211a:	add    BYTE PTR [rax],al
   14001211c:	xor    ch,al
   14001211e:	add    BYTE PTR [rax],al
   140012120:	sbb    al,0x2b
   140012122:	add    BYTE PTR [rax],al
   140012124:	and    ch,BYTE PTR [rip+0xffffffffc54c0000]        # 0x1054d212a
   14001212a:	add    BYTE PTR [rax],al
   14001212c:	xor    BYTE PTR [rip+0x2db40000],ch        # 0x16db52132
   140012132:	add    BYTE PTR [rax],al
   140012134:	add    al,0xc3
   140012136:	add    BYTE PTR [rax],al
   140012138:	shr    BYTE PTR [rip+0x2dfd0000],0x0        # 0x16dfe213f
   14001213f:	add    al,dh
   140012141:	ret    0x0
   140012144:	add    al,0x2e
   140012146:	add    BYTE PTR [rax],al
   140012148:	shr    DWORD PTR [rsi],1
   14001214a:	add    BYTE PTR [rax],al
   14001214c:	add    al,0xc3
   14001214e:	add    BYTE PTR [rax],al
   140012150:	fsubr  DWORD PTR [rsi]
   140012152:	add    BYTE PTR [rax],al
   140012154:	imul   ebp,DWORD PTR [rdi],0x0
   140012157:	add    al,bl
   140012159:	(bad)  
   14001215a:	add    BYTE PTR [rax],al
   14001215c:	je     0x14001218d
   14001215e:	add    BYTE PTR [rax],al
   140012160:	xor    BYTE PTR es:[rax],al
   140012163:	add    al,bl
   140012165:	(bad)  
   140012166:	add    BYTE PTR [rax],al
   140012168:	pop    rsp
   140012169:	xor    BYTE PTR [rax],al
   14001216b:	add    BYTE PTR [rax+0x6c000031],bl
   140012171:	(bad)
   140012174:	shl    BYTE PTR [rcx],1
   140012176:	add    BYTE PTR [rax],al
   140012178:	push   QWORD PTR [rcx]
   14001217a:	add    BYTE PTR [rax],al
   14001217c:	lock ret 0x0
   140012180:	or     BYTE PTR [rdx],dh
   140012182:	add    BYTE PTR [rax],al
   140012184:	xor    al,BYTE PTR [r8]
   140012187:	add    BYTE PTR [rax+0x480000c3],dh
   14001218d:	xor    al,BYTE PTR [rax]
   14001218f:	add    BYTE PTR [rdx+rsi*1-0x3a780000],dl
   140012196:	add    BYTE PTR [rax],al
   140012198:	pushf  
   140012199:	xor    al,BYTE PTR [rax]
   14001219b:	add    BYTE PTR [rbx+rsi*1],bh
   14001219e:	add    BYTE PTR [rax],al
   1400121a0:	mov    eax,0x500000c5
   1400121a5:	xor    eax,DWORD PTR [rax]
   1400121a7:	add    BYTE PTR [rbx-0xfffffcd],cl
   1400121ad:	ret    0x0
   1400121b0:	xchg   esp,eax
   1400121b1:	xor    eax,DWORD PTR [rax]
   1400121b3:	add    BYTE PTR [rbx],dh
   1400121b5:	xor    al,0x0
   1400121b7:	add    al,cl
   1400121b9:	(bad)
   1400121bc:	cmp    al,0x34
   1400121be:	add    BYTE PTR [rax],al
   1400121c0:	pop    rsp
   1400121c1:	xor    al,0x0
   1400121c3:	add    BYTE PTR [rax],ch
   1400121c5:	mov    BYTE PTR [rax],0x0
   1400121c8:	fs xor al,0x0
   1400121cb:	add    BYTE PTR [rdi+0x34],bh
   1400121ce:	add    BYTE PTR [rax],al
   1400121d0:	mov    al,0xc3
   1400121d2:	add    BYTE PTR [rax],al
   1400121d4:	mov    BYTE PTR [rax+rax*1],dh
   1400121d7:	add    BYTE PTR [rdx],bl
   1400121d9:	(bad)  
   1400121da:	add    BYTE PTR [rax],al
   1400121dc:	push   rax
   1400121dd:	mov    BYTE PTR [rax],0x0
   1400121e0:	and    BYTE PTR [rdi],dh
   1400121e2:	add    BYTE PTR [rax],al
   1400121e4:	movabs eax,ds:0xb80000c750000037
   1400121ed:	(bad)  
   1400121ee:	add    BYTE PTR [rax],al
   1400121f0:	iret   
   1400121f1:	(bad)  
   1400121f2:	add    BYTE PTR [rax],al
   1400121f4:	cld    
   1400121f5:	ret    0x0
   1400121f8:	fdiv   DWORD PTR [rdi]
   1400121fa:	add    BYTE PTR [rax],al
   1400121fc:	add    edi,DWORD PTR [rax]
   1400121fe:	add    BYTE PTR [rax],al
   140012200:	mov    al,0xc3
   140012202:	add    BYTE PTR [rax],al
   140012204:	or     al,0x38
   140012206:	add    BYTE PTR [rax],al
   140012208:	sub    bh,BYTE PTR [rax]
   14001220a:	add    BYTE PTR [rax],al
   14001220c:	cld    
   14001220d:	ret    0x0
   140012210:	pop    rsp
   140012211:	cmp    BYTE PTR [rax],al
   140012213:	add    BYTE PTR [rdi+0x39],dh
   140012216:	add    BYTE PTR [rax],al
   140012218:	nop
   140012219:	mov    DWORD PTR [rax],0x398000
   14001221f:	add    BYTE PTR [rdi+0x3c],al
   140012222:	add    BYTE PTR [rax],al
   140012224:	test   al,0xc7
   140012226:	add    BYTE PTR [rax],al
   140012228:	push   rax
   140012229:	cmp    al,0x0
   14001222b:	add    BYTE PTR [rax+0x3d],cl
   14001222e:	add    BYTE PTR [rax],al
   140012230:	or     al,cl
   140012232:	add    BYTE PTR [rax],al
   140012234:	push   rax
   140012235:	cmp    eax,0x3d7a0000
   14001223a:	add    BYTE PTR [rax],al
   14001223c:	mov    al,0xc3
   14001223e:	add    BYTE PTR [rax],al
   140012240:	cmp    BYTE PTR [rip+0x428e0000],0x0        # 0x1828f2247
   140012247:	add    BYTE PTR [rax],ah
   140012249:	enter  0x0,0xa0
   14001224d:	rex.X add BYTE PTR [rax],al
   140012250:	enter  0x42,0x0
   140012254:	cld    
   140012255:	ret    0x0
   140012258:	rol    BYTE PTR [rdx+0x0],1
   14001225b:	add    BYTE PTR [rbx+0x43],dh
   14001225e:	add    BYTE PTR [rax],al
   140012260:	xor    cl,cl
   140012262:	add    BYTE PTR [rax],al
   140012264:	jl     0x1400122a9
   140012266:	add    BYTE PTR [rax],al
   140012268:	mov    bl,0x44
   14001226a:	add    BYTE PTR [rax],al
   14001226c:	rex.W leave 
   14001226e:	add    BYTE PTR [rax],al
   140012270:	mov    esp,0xdd000044
   140012275:	add    BYTE PTR [rax],r8b
   140012278:	mov    al,0xc3
   14001227a:	add    BYTE PTR [rax],al
   14001227c:	in     al,0x44
   14001227e:	add    BYTE PTR [rax],al
   140012280:	scas   al,BYTE PTR es:[rdi]
   140012281:	add    BYTE PTR [r8],r8b
   140012284:	mov    eax,0xc80000c5
   140012289:	add    BYTE PTR [r8],r8b
   14001228c:	push   rdx
   14001228d:	rex.RXB add BYTE PTR [r8],r8b
   140012290:	ins    BYTE PTR es:[rdi],dx
   140012291:	(bad)
   140012294:	pop    rax
   140012295:	rex.RXB add BYTE PTR [r8],r8b
   140012298:	(bad)  
   140012299:	rex.WRXB add BYTE PTR [r8],r8b
   14001229c:	fs leave 
   14001229e:	add    BYTE PTR [rax],al
   1400122a0:	cmp    BYTE PTR [rdi+0x0],cl
   1400122a3:	add    al,dh
   1400122a5:	push   rax
   1400122a6:	add    BYTE PTR [rax],al
   1400122a8:	mov    eax,0xf80000c9
   1400122ad:	push   rax
   1400122ae:	add    BYTE PTR [rax],al
   1400122b0:	fst    DWORD PTR [rdx+0x0]
   1400122b3:	add    ah,bl
   1400122b5:	leave  
   1400122b6:	add    BYTE PTR [rax],al
   1400122b8:	loopne 0x14001230c
   1400122ba:	add    BYTE PTR [rax],al
   1400122bc:	jnp    0x140012313
   1400122be:	add    BYTE PTR [rax],al
   1400122c0:	mov    al,0xca
   1400122c2:	add    BYTE PTR [rax],al
   1400122c4:	test   BYTE PTR [rbp+0x0],dl
   1400122c7:	add    BYTE PTR [rbp-0x3ffffab],bl
   1400122cd:	ret    0x0
   1400122d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400122d1:	push   rbp
   1400122d2:	add    BYTE PTR [rax],al
   1400122d4:	and    DWORD PTR [rsi+0x0],edx
   1400122d7:	add    al,dl
   1400122d9:	retf   0x0
   1400122dc:	sub    BYTE PTR [rsi+0x0],dl
   1400122df:	add    cl,bh
   1400122e1:	push   rsi
   1400122e2:	add    BYTE PTR [rax],al
   1400122e4:	loopne 0x1400122b0
   1400122e6:	add    BYTE PTR [rax],al
   1400122e8:	add    BYTE PTR [rdi+0x0],dl
   1400122eb:	add    BYTE PTR [rsi-0xfffffa9],ah
   1400122f1:	retf   0x0
   1400122f4:	lods   al,BYTE PTR ds:[rsi]
   1400122f5:	push   rdi
   1400122f6:	add    BYTE PTR [rax],al
   1400122f8:	rex.RB pop r8
   1400122fa:	add    BYTE PTR [rax],al
   1400122fc:	add    bl,cl
   1400122fe:	add    BYTE PTR [rax],al
   140012300:	rex.WR pop rax
   140012302:	add    BYTE PTR [rax],al
   140012304:	out    0x58,al
   140012306:	add    BYTE PTR [rax],al
   140012308:	adc    bl,cl
   14001230a:	add    BYTE PTR [rax],al
   14001230c:	in     al,dx
   14001230d:	pop    rax
   14001230e:	add    BYTE PTR [rax],al
   140012310:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012311:	pop    rcx
   140012312:	add    BYTE PTR [rax],al
   140012314:	and    bl,cl
   140012316:	add    BYTE PTR [rax],al
   140012318:	mov    al,0x59
   14001231a:	add    BYTE PTR [rax],al
   14001231c:	push   rbx
   14001231d:	(bad)  
   14001231e:	add    BYTE PTR [rax],al
   140012320:	xor    bl,cl
   140012322:	add    BYTE PTR [rax],al
   140012324:	(bad)  
   140012325:	(bad)  
   140012326:	add    BYTE PTR [rax],al
   140012328:	fldenv [rax+0x0]
   14001232b:	add    BYTE PTR [rax-0x1fffff3b],bh
   140012331:	(bad)  
   140012332:	add    BYTE PTR [rax],al
   140012334:	adc    ah,BYTE PTR [rcx+0x0]
   140012337:	add    al,dh
   140012339:	ret    0x0
   14001233c:	sbb    BYTE PTR [rcx+0x0],ah
   14001233f:	add    BYTE PTR [rdx+0x61],dl
   140012342:	add    BYTE PTR [rax],al
   140012344:	mov    eax,0x580000cb
   140012349:	(bad)  
   14001234a:	add    BYTE PTR [rax],al
   14001234c:	movsxd r8,DWORD PTR [r8]
   14001234f:	add    al,bl
   140012351:	retf   
   140012352:	add    BYTE PTR [rax],al
   140012354:	push   rsp
   140012355:	movsxd eax,DWORD PTR [rax]
   140012357:	add    BYTE PTR [riz*2-0x34140000],cl
   14001235e:	add    BYTE PTR [rax],al
   140012360:	and    BYTE PTR [rbp+0x0],ah
   140012363:	add    BYTE PTR [rax+0x65],dh
   140012366:	add    BYTE PTR [rax],al
   140012368:	lock ret 0x0
   14001236c:	js     0x1400123d3
   14001236e:	add    BYTE PTR [rax],al
   140012370:	rex.W
   140012371:	data16 add BYTE PTR [rax],al
   140012374:	add    al,0xcc
   140012376:	add    BYTE PTR [rax],al
   140012378:	push   rax
   140012379:	data16 add BYTE PTR [rax],al
   14001237c:	mov    fs,WORD PTR [rdi+0x0]
   14001237f:	add    BYTE PTR [rax],bl
   140012381:	int3   
   140012382:	add    BYTE PTR [rax],al
   140012384:	movabs al,ds:0x900000688a000067
   14001238d:	mov    DWORD PTR [rax],0x689000
   140012393:	add    ch,bl
   140012395:	imul   eax,DWORD PTR [rax],0xcc2c00
   14001239b:	add    al,dh
   14001239d:	imul   eax,DWORD PTR [rax],0x6a9a00
   1400123a3:	add    BYTE PTR [rax-0x34],al
   1400123a6:	add    BYTE PTR [rax],al
   1400123a8:	movabs al,ds:0x5800006b6400006a
   1400123b1:	int3   
   1400123b2:	add    BYTE PTR [rax],al
   1400123b4:	jo     0x140012421
   1400123b6:	add    BYTE PTR [rax],al
   1400123b8:	in     al,0x6b
   1400123ba:	add    BYTE PTR [rax],al
   1400123bc:	lock ret 0x0
   1400123c0:	in     al,dx
   1400123c1:	imul   eax,DWORD PTR [rax],0x0
   1400123c4:	(bad)  
   1400123c5:	ins    BYTE PTR es:[rdi],dx
   1400123c6:	add    BYTE PTR [rax],al
   1400123c8:	lock ret 0x0
   1400123cc:	jo     0x14001243a
   1400123ce:	add    BYTE PTR [rax],al
   1400123d0:	fldcw  WORD PTR [rax+rax*1+0x0]
   1400123d4:	mov    al,0xc3
   1400123d6:	add    BYTE PTR [rax],al
   1400123d8:	loopne 0x140012446
   1400123da:	add    BYTE PTR [rax],al
   1400123dc:	jbe    0x14001244b
   1400123de:	add    BYTE PTR [rax],al
   1400123e0:	ins    BYTE PTR es:[rdi],dx
   1400123e1:	int3   
   1400123e2:	add    BYTE PTR [rax],al
   1400123e4:	movabs al,ds:0xf000006dcf00006d
   1400123ed:	ret    0x0
   1400123f0:	loopne 0x14001245f
   1400123f2:	add    BYTE PTR [rax],al
   1400123f4:	outs   dx,BYTE PTR gs:[rsi]
   1400123f6:	add    BYTE PTR [rax],al
   1400123f8:	jl     0x1400123c6
   1400123fa:	add    BYTE PTR [rax],al
   1400123fc:	nop
   1400123fd:	outs   dx,BYTE PTR ds:[rsi]
   1400123fe:	add    BYTE PTR [rax],al
   140012400:	add    ebp,DWORD PTR [rdi+0x0]
   140012403:	add    BYTE PTR [rsp+rcx*8+0x6f0c0000],dl
   14001240a:	add    BYTE PTR [rax],al
   14001240c:	(bad)  
   14001240d:	jb     0x14001240f
   14001240f:	add    BYTE PTR [rax+0x140000cc],ah
   140012415:	jb     0x140012417
   140012417:	add    bh,ah
   140012419:	jb     0x14001241b
   14001241b:	add    al,al
   14001241d:	int3   
   14001241e:	add    BYTE PTR [rax],al
   140012420:	lock jb 0x140012423
   140012423:	add    BYTE PTR [rbx+0x78],dl
   140012426:	add    BYTE PTR [rax],al
   140012428:	ror    ah,1
   14001242a:	add    BYTE PTR [rax],al
   14001242c:	pop    rsp
   14001242d:	js     0x14001242f
   14001242f:	add    BYTE PTR [rsi-0xfffff87],cl
   140012435:	ret    0x0
   140012438:	movabs al,ds:0xf0000079cf000079
   140012441:	ret    0x0
   140012444:	fdivr  DWORD PTR [rcx+0x0]
   140012447:	add    BYTE PTR [rdx+rdi*2],bl
   14001244a:	add    BYTE PTR [rax],al
   14001244c:	mov    al,0xc3
   14001244e:	add    BYTE PTR [rax],al
   140012450:	and    al,0x7a
   140012452:	add    BYTE PTR [rax],al
   140012454:	jns    0x1400124d0
   140012456:	add    BYTE PTR [rax],al
   140012458:	lock ret 0x0
   14001245c:	cmp    BYTE PTR [rdx+0x0],0x0
   140012460:	loope  0x1400124dc
   140012462:	add    BYTE PTR [rax],al
   140012464:	hlt    
   140012465:	int3   
   140012466:	add    BYTE PTR [rax],al
   140012468:	call   0x14b0124e7
   14001246d:	jl     0x14001246f
   14001246f:	add    BYTE PTR [rax],al
   140012471:	int    0x0
   140012473:	add    BYTE PTR [rsp+rdi*2],dl
   140012476:	add    BYTE PTR [rax],al
   140012478:	xor    eax,0xb000007c
   14001247d:	ret    
   14001247e:	add    BYTE PTR [rax],al
   140012480:	cmp    al,0x7c
   140012482:	add    BYTE PTR [rax],al
   140012484:	push   0x7c
   140012486:	add    BYTE PTR [rax],al
   140012488:	mov    al,0xc3
   14001248a:	add    BYTE PTR [rax],al
   14001248c:	mov    BYTE PTR [rax+rax*1+0x0],bh
   140012490:	add    DWORD PTR [rbp+0x0],edi
   140012493:	add    BYTE PTR [rcx*8+0x7d200000],bl
   14001249a:	add    BYTE PTR [rax],al
   14001249c:	pop    rdx
   14001249d:	jge    0x14001249f
   14001249f:	add    al,dh
   1400124a1:	ret    0x0
   1400124a4:	(bad)  
   1400124a5:	jge    0x1400124a7
   1400124a7:	add    BYTE PTR [rbx+0x1400007d],al
   1400124ad:	int    0x0
   1400124af:	add    BYTE PTR [rbp+rdi*2+0x7e050000],cl
   1400124b6:	add    BYTE PTR [rax],al
   1400124b8:	sbb    al,0xcd
   1400124ba:	add    BYTE PTR [rax],al
   1400124bc:	adc    BYTE PTR [rsi+0x0],bh
   1400124bf:	add    bh,bl
   1400124c1:	jle    0x1400124c3
   1400124c3:	add    ah,bh
   1400124c5:	ret    0x0
   1400124c8:	lock jle 0x1400124cb
   1400124cb:	add    BYTE PTR [rcx],bh
   1400124cd:	jg     0x1400124cf
   1400124cf:	add    BYTE PTR [rbp+rcx*8+0x0],bl
   1400124d3:	add    BYTE PTR [rax+0x7f],al
   1400124d6:	add    BYTE PTR [rax],al
   1400124d8:	mov    cl,0x81
   1400124da:	add    BYTE PTR [rax],al
   1400124dc:	and    al,0xcd
   1400124de:	add    BYTE PTR [rax],al
   1400124e0:	rol    BYTE PTR [rcx-0x7e2e0000],0x0
   1400124e7:	add    ah,bh
   1400124e9:	ret    0x0
   1400124ec:	lock add DWORD PTR [rax],0x820e00
   1400124f3:	add    BYTE PTR [rax-0x33],bl
   1400124f6:	add    BYTE PTR [rax],al
   1400124f8:	and    BYTE PTR [rdx-0x7db00000],al
   1400124fe:	add    BYTE PTR [rax],al
   140012500:	lock ret 0x0
   140012504:	(bad)  
   140012505:	(bad)  
   140012506:	add    BYTE PTR [rax],al
   140012508:	mov    cl,0x82
   14001250a:	add    BYTE PTR [rax],al
   14001250c:	pop    rsp
   14001250d:	int    0x0
   14001250f:	add    BYTE PTR [rax-0x13ffff7e],bh
   140012515:	(bad)  
   140012516:	add    BYTE PTR [rax],al
   140012518:	mov    al,0xc3
   14001251a:	add    BYTE PTR [rax],al
   14001251c:	add    BYTE PTR [rbx-0x7b8f0000],al
   140012522:	add    BYTE PTR [rax],al
   140012524:	ins    BYTE PTR es:[rdi],dx
   140012525:	int    0x0
   140012527:	add    BYTE PTR [rax-0x7c],bh
   14001252a:	add    BYTE PTR [rax],al
   14001252c:	outs   dx,DWORD PTR ds:[rsi]
   14001252d:	test   DWORD PTR [rax],eax
   14001252f:	add    BYTE PTR [rbp+rcx*8+0x0],ah
   140012533:	add    BYTE PTR [rax-0x7b],bh
   140012536:	add    BYTE PTR [rax],al
   140012538:	(bad)  
   140012539:	xchg   BYTE PTR [rax],al
   14001253b:	add    BYTE PTR [rbp+rcx*8+0x0],dh
   14001253f:	add    BYTE PTR [rsi+rax*4],bl
   140012542:	add    BYTE PTR [rax],al
   140012544:	xor    eax,DWORD PTR [rsi-0x3d040000]
   14001254a:	add    BYTE PTR [rax],al
   14001254c:	mov    al,0x86
   14001254e:	add    BYTE PTR [rax],al
   140012550:	jmp    0x13c0125db
   140012555:	ret    0x0
   140012558:	lock xchg BYTE PTR [rax],al
   14001255b:	add    BYTE PTR [rax],cl
   14001255d:	xchg   DWORD PTR [rax],eax
   14001255f:	add    ah,bh
   140012561:	ret    0x0
   140012564:	sbb    al,0x87
   140012566:	add    BYTE PTR [rax],al
   140012568:	jo     0x1400124f1
   14001256a:	add    BYTE PTR [rax],al
   14001256c:	cwde   
   14001256d:	int    0x0
   14001256f:	add    BYTE PTR [rax-0x79],bh
   140012572:	add    BYTE PTR [rax],al
   140012574:	mov    ebp,0xb0000087
   140012579:	ret    
   14001257a:	add    BYTE PTR [rax],al
   14001257c:	and    BYTE PTR [rax-0x77930000],cl
   140012582:	add    BYTE PTR [rax],al
   140012584:	mov    eax,0xb40000cd
   140012589:	mov    BYTE PTR [rax],al
   14001258b:	add    BYTE PTR [rcx+rcx*4-0x32240000],al
   140012592:	add    BYTE PTR [rax],al
   140012594:	mov    esp,0x7f000089
   140012599:	mov    al,BYTE PTR [rax]
   14001259b:	add    al,ch
   14001259d:	int    0x0
   14001259f:	add    BYTE PTR [rax-0x2affff76],bh
   1400125a5:	mov    al,BYTE PTR [rax]
   1400125a7:	add    ah,bh
   1400125a9:	ret    0x0
   1400125ac:	fmul   QWORD PTR [rdx-0x74c10000]
   1400125b2:	add    BYTE PTR [rax],al
   1400125b4:	mov    al,0xc3
   1400125b6:	add    BYTE PTR [rax],al
   1400125b8:	push   rsp
   1400125b9:	mov    eax,DWORD PTR [rax]
   1400125bb:	add    bl,ah
   1400125bd:	mov    eax,DWORD PTR [rax]
   1400125bf:	add    BYTE PTR [rax+0xc7],dl
   1400125c5:	mov    WORD PTR [rax],es
   1400125c7:	add    BYTE PTR [rdx],al
   1400125c9:	mov    WORD PTR [rax],es
   1400125cb:	add    BYTE PTR [rax],al
   1400125cd:	(bad)  
   1400125ce:	add    BYTE PTR [rax],al
   1400125d0:	and    BYTE PTR [rax+rax*1+0x8c6d00],cl
   1400125d7:	add    BYTE PTR [rax],cl
   1400125d9:	(bad)  
   1400125da:	add    BYTE PTR [rax],al
   1400125dc:	jbe    0x14001256a
   1400125de:	add    BYTE PTR [rax],al
   1400125e0:	xchg   ecx,eax
   1400125e1:	mov    WORD PTR [rax],es
   1400125e3:	add    BYTE PTR [rax-0x50ffff3d],ah
   1400125e9:	mov    WORD PTR [rax],es
   1400125eb:	add    dl,cl
   1400125ed:	mov    WORD PTR [rax],es
   1400125ef:	add    BYTE PTR [rax+0x260000c4],dl
   1400125f5:	lea    eax,[rax]
   1400125f7:	add    BYTE PTR [rsi-0x73],al
   1400125fa:	add    BYTE PTR [rax],al
   1400125fc:	rex.W mov BYTE PTR [rax],0x0
   140012600:	lea    r8,[rax]
   140012603:	add    BYTE PTR [rdi-0x73],ah
   140012606:	add    BYTE PTR [rax],al
   140012608:	rex mov DWORD PTR [rax],0x8d7300
   14001260f:	add    BYTE PTR [rsi+0x4000008d],cl
   140012615:	mov    DWORD PTR [rax],0x8ddc00
   14001261b:	add    bh,dh
   14001261d:	lea    eax,[rax]
   14001261f:	add    BYTE PTR [rax],ah
   140012621:	leave  
   140012622:	add    BYTE PTR [rax],al
   140012624:	add    ecx,DWORD PTR [rsi-0x71e20000]
   14001262a:	add    BYTE PTR [rax],al
   14001262c:	and    cl,cl
   14001262e:	add    BYTE PTR [rax],al
   140012630:	pop    rdx
   140012631:	mov    es,WORD PTR [rax]
   140012633:	add    BYTE PTR [rbp-0x72],dh
   140012636:	add    BYTE PTR [rax],al
   140012638:	movabs al,ds:0xc300008ea50000ca
   140012641:	mov    es,WORD PTR [rax]
   140012643:	add    BYTE PTR [rax-0x3a],cl
   140012646:	add    BYTE PTR [rax],al
   140012648:	leave  
   140012649:	mov    es,WORD PTR [rax]
   14001264b:	add    ah,ah
   14001264d:	mov    es,WORD PTR [rax]
   14001264f:	add    BYTE PTR [rax-0x3a],cl
   140012652:	add    BYTE PTR [rax],al
   140012654:	lock mov es,WORD PTR [rax]
   140012657:	add    BYTE PTR [rax],dl
   140012659:	pop    QWORD PTR [rax]
   14001265b:	add    BYTE PTR [rax-0x3a],cl
   14001265e:	add    BYTE PTR [rax],al
   140012660:	and    BYTE PTR [rdi-0x70670000],cl
   140012666:	add    BYTE PTR [rax],al
   140012668:	lock ret 0x0
   14001266c:	movabs al,ds:0xfc00008fde00008f
   140012675:	ret    0x0
   140012678:	lock pop QWORD PTR [rax]
   14001267b:	add    cl,dl
   14001267d:	nop
   14001267e:	add    BYTE PTR [rax],al
   140012680:	mov    eax,0xf00000c5
   140012685:	nop
   140012686:	add    BYTE PTR [rax],al
   140012688:	rex.RB xchg r9d,eax
   14001268a:	add    BYTE PTR [rax],al
   14001268c:	mov    al,0xc3
	...

Disassembly of section .rsrc:

0000000140013000 <.rsrc>:
	...
   14001300c:	add    eax,DWORD PTR [rax]
   14001300e:	add    al,BYTE PTR [rax]
   140013010:	retf   0x1
   140013013:	cmp    BYTE PTR [rax],0x0
   140013016:	add    BYTE PTR [rax-0x7ffffe58],al
   14001301c:	push   rax
   14001301d:	add    BYTE PTR [rax],al
   14001301f:	cmp    BYTE PTR [rdx+0x70800001],0x0
   140013026:	add    BYTE PTR [rax+0x10],al
   14001302c:	mov    BYTE PTR [rax],al
   14001302e:	add    BYTE PTR [rax+0x18],al
   140013034:	movabs al,ds:0x800000
	...
   140013045:	add    BYTE PTR [rcx],al
   140013047:	add    BYTE PTR [rcx],al
   140013049:	add    BYTE PTR [rax],al
   14001304b:	add    BYTE PTR [rax+0x800000],bh
	...
   14001305d:	add    BYTE PTR [rdx],al
   14001305f:	add    BYTE PTR [rbp+0x0],ah
   140013062:	add    BYTE PTR [rax],al
   140013064:	rol    BYTE PTR [rax],1
   140013066:	add    BYTE PTR [rax+0x6a],al
   14001306c:	call   0x140813071
	...
   14001307d:	add    BYTE PTR [rcx],al
   14001307f:	add    BYTE PTR [rcx],al
   140013081:	add    BYTE PTR [rax],al
   140013083:	add    BYTE PTR [rax],al
   140013085:	add    DWORD PTR [rax],eax
   140013087:	add    BYTE PTR [rax],0x0
	...
   140013096:	add    DWORD PTR [rax],eax
   140013098:	add    DWORD PTR [rax],eax
   14001309a:	add    BYTE PTR [rax],al
   14001309c:	sbb    BYTE PTR [rcx],al
   14001309e:	add    BYTE PTR [rax+0x0],al
	...
   1400130ac:	add    BYTE PTR [rax],al
   1400130ae:	add    DWORD PTR [rax],eax
   1400130b0:	add    DWORD PTR [rax],eax
   1400130b2:	add    BYTE PTR [rax],al
   1400130b4:	xor    BYTE PTR [rcx],al
   1400130b6:	add    BYTE PTR [rax+0x0],al
	...
   1400130c4:	add    BYTE PTR [rax],al
   1400130c6:	add    DWORD PTR [rax],eax
   1400130c8:	or     DWORD PTR [rax+rax*1],eax
   1400130cb:	add    BYTE PTR [rax+0x1],cl
	...
   1400130de:	add    DWORD PTR [rax],eax
   1400130e0:	or     DWORD PTR [rax+rax*1],eax
   1400130e3:	add    BYTE PTR [rax+0x1],bl
	...
   1400130f6:	add    DWORD PTR [rax],eax
   1400130f8:	or     DWORD PTR [rax+rax*1],eax
   1400130fb:	add    BYTE PTR [rax+0x1],ch
	...
   14001310e:	add    DWORD PTR [rax],eax
   140013110:	or     DWORD PTR [rax+rax*1],eax
   140013113:	add    BYTE PTR [rax+0x1],bh
	...
   140013126:	add    DWORD PTR [rax],eax
   140013128:	or     DWORD PTR [rax+rax*1],eax
   14001312b:	add    BYTE PTR [rax+0x1],cl
	...
   14001313d:	add    BYTE PTR [rcx],al
   14001313f:	add    BYTE PTR [rcx],cl
   140013141:	add    al,0x0
   140013143:	add    BYTE PTR [rax+0x70000001],bl
   140013149:	rex.XB add DWORD PTR [r8],eax
   14001314c:	call   0x140013151
   140013151:	add    BYTE PTR [rax],al
   140013153:	add    BYTE PTR [rax],al
   140013155:	add    BYTE PTR [rax],al
   140013157:	add    BYTE PTR [rax+0x38],cl
   14001315a:	add    DWORD PTR [rax],eax
   14001315c:	or     al,0x0
	...
   140013166:	add    BYTE PTR [rax],al
   140013168:	pop    rax
   140013169:	cmp    BYTE PTR [rcx],al
   14001316b:	add    BYTE PTR [rax+0x2],bl
	...
   140013176:	add    BYTE PTR [rax],al
   140013178:	mov    al,0x3a
   14001317a:	add    DWORD PTR [rax],eax
   14001317c:	ror    BYTE PTR [rax],0x0
	...
   140013187:	add    BYTE PTR [rax-0x37fffecc],al
   14001318d:	add    eax,DWORD PTR [rax]
	...
   140013197:	add    al,ah
   140013199:	xor    DWORD PTR [rcx],eax
   14001319b:	add    BYTE PTR [rdx+rax*1+0x0],bl
   1400131a2:	add    BYTE PTR [rax],al
   1400131a4:	add    BYTE PTR [rax],al
   1400131a6:	add    BYTE PTR [rax],al
   1400131a8:	or     BYTE PTR [rax],al
   1400131aa:	push   rdx
   1400131ab:	add    BYTE PTR [rbp+0x0],al
   1400131ae:	rex.RXB add BYTE PTR [r9+0x0],r9b
   1400131b2:	push   rbx
   1400131b3:	add    BYTE PTR [rax+rax*1+0x52],dl
   1400131b7:	add    BYTE PTR [rcx+0x0],bl
   1400131ba:	(bad)  
   1400131bb:	add    BYTE PTR [rax+rax*1+0x59],dl
   1400131bf:	add    BYTE PTR [rax+0x0],dl
   1400131c2:	add    BYTE PTR [r8+rax*1+0x49],r9b
   1400131c7:	add    BYTE PTR [rdx+0x0],al
   1400131ca:	add    eax,DWORD PTR [rax]
   1400131cc:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400131d0:	rex.WB add BYTE PTR [r8],al
	...
   1400131df:	add    BYTE PTR [rdi+rdi*1],bh
   1400131e2:	js     0x140013251
   1400131e4:	ins    BYTE PTR es:[rdi],dx
   1400131e5:	and    BYTE PTR [rsi+0x65],dh
   1400131e8:	jb     0x14001325d
   1400131ea:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400131f1:	xor    BYTE PTR [rdx],ah
   1400131f3:	and    BYTE PTR [rbp+0x6e],ah
   1400131f6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400131f9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140013200:	rex.RX sub eax,0x73202238
   140013206:	je     0x140013269
   140013208:	outs   dx,BYTE PTR ds:[rsi]
   140013209:	fs (bad) 
   14001320b:	ins    BYTE PTR es:[rdi],dx
   14001320c:	outs   dx,DWORD PTR ds:[rsi]
   14001320d:	outs   dx,BYTE PTR ds:[rsi]
   14001320e:	gs cmp eax,0x73657922
   140013214:	and    bh,BYTE PTR [rdi]
   140013216:	ds or  eax,0x2d213c0a
   14001321c:	sub    eax,0x706f4320
   140013221:	jns    0x140013295
   140013223:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14001322a:	sub    DWORD PTR [rax],esp
   14001322c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140013234:	je     0x140013256
   140013236:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140013238:	jb     0x1400132aa
   14001323a:	outs   dx,DWORD PTR ds:[rsi]
   14001323b:	jb     0x14001329e
   14001323d:	je     0x1400132a8
   14001323f:	outs   dx,DWORD PTR ds:[rsi]
   140013240:	outs   dx,BYTE PTR ds:[rsi]
   140013241:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e7074
   140013247:	cmp    al,0x61
   140013249:	jae    0x1400132be
   14001324b:	gs ins DWORD PTR es:[rdi],dx
   14001324d:	(bad)  
   14001324e:	ins    BYTE PTR es:[rdi],dx
   14001324f:	jns    0x140013271
   140013251:	js     0x1400132c0
   140013253:	ins    BYTE PTR es:[rdi],dx
   140013254:	outs   dx,BYTE PTR ds:[rsi]
   140013255:	jae    0x140013294
   140013257:	and    dh,BYTE PTR [rbp+0x72]
   14001325a:	outs   dx,BYTE PTR ds:[rsi]
   14001325b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001325e:	push   0x73616d65
   140013263:	sub    eax,0x7263696d
   140013268:	outs   dx,DWORD PTR ds:[rsi]
   140013269:	jae    0x1400132da
   14001326b:	data16 je 0x14001329b
   14001326e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140013271:	cmp    ah,BYTE PTR [rcx+0x73]
   140013274:	ins    DWORD PTR es:[rdi],dx
   140013275:	cs jbe 0x1400132a9
   140013278:	and    ah,BYTE PTR [rax]
   14001327a:	ins    DWORD PTR es:[rdi],dx
   14001327b:	(bad)  
   14001327c:	outs   dx,BYTE PTR ds:[rsi]
   14001327d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140013284:	jb     0x1400132f9
   140013286:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001328d:	xor    BYTE PTR [rdx],ah
   14001328f:	ds or  eax,0x73613c0a
   140013295:	jae    0x1400132fc
   140013297:	ins    DWORD PTR es:[rdi],dx
   140013298:	(bad)  
   140013299:	ins    BYTE PTR es:[rdi],dx
   14001329a:	jns    0x1400132e5
   14001329c:	fs outs dx,BYTE PTR gs:[rsi]
   14001329f:	je     0x14001330a
   1400132a1:	je     0x14001331c
   1400132a3:	or     eax,0x2020200a
   1400132a8:	and    BYTE PTR [rsi+0x65],dh
   1400132ab:	jb     0x140013320
   1400132ad:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400132b4:	xor    DWORD PTR [rsi],ebp
   1400132b6:	xor    BYTE PTR [rsi],ch
   1400132b8:	xor    BYTE PTR [rdx],ah
   1400132ba:	or     eax,0x2020200a
   1400132bf:	and    BYTE PTR [rax+0x72],dh
   1400132c2:	outs   dx,DWORD PTR ds:[rsi]
   1400132c3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400132c6:	jae    0x140013337
   1400132c8:	jb     0x14001330b
   1400132ca:	jb     0x14001332f
   1400132cc:	push   0x63657469
   1400132d1:	je     0x140013348
   1400132d3:	jb     0x14001333a
   1400132d5:	cmp    eax,0x646d6122
   1400132da:	ss xor al,0x22
   1400132dd:	or     eax,0x2020200a
   1400132e2:	and    BYTE PTR [rsi+0x61],ch
   1400132e5:	ins    DWORD PTR es:[rdi],dx
   1400132e6:	gs cmp eax,0x63694d22
   1400132ec:	jb     0x14001335d
   1400132ee:	jae    0x14001335f
   1400132f0:	data16 je 0x140013321
   1400132f3:	push   rdi
   1400132f4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400132fb:	push   rsp
   1400132fc:	gs jb  0x14001336c
   1400132ff:	imul   ebp,DWORD PTR [rsi+0x61],0x7265536c
   140013306:	jbe    0x140013371
   140013308:	movsxd esp,DWORD PTR [rbp+0x73]
   14001330b:	cs push rdx
   14001330d:	rex.R push rbx
   14001330f:	push   rax
   140013310:	outs   dx,BYTE PTR ds:[rsi]
   140013311:	data16 and cl,BYTE PTR [rip+0x2020200a]        # 0x160215322
   140013318:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001331c:	gs cmp eax,0x6e697722
   140013322:	xor    esi,DWORD PTR [rdx]
   140013324:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f6234
   14001332a:	or     bh,BYTE PTR [rsp+riz*2]
   14001332d:	gs jae 0x140013393
   140013330:	jb     0x14001339b
   140013332:	jo     0x1400133a8
   140013334:	imul   ebp,DWORD PTR [rdi+0x6e],0x5344523e
   14001333b:	push   rax
   14001333c:	outs   dx,BYTE PTR ds:[rsi]
   14001333d:	data16 cmp al,0x2f
   140013340:	fs gs jae 0x1400133a7
   140013344:	jb     0x1400133af
   140013346:	jo     0x1400133bc
   140013348:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14001334f:	je     0x1400133c3
   140013351:	jne    0x1400133c6
   140013353:	je     0x14001339e
   140013355:	outs   dx,BYTE PTR ds:[rsi]
   140013356:	outs   dx,WORD PTR ds:[rsi]
   140013358:	and    BYTE PTR [rax+0x6d],bh
   14001335b:	ins    BYTE PTR es:[rdi],dx
   14001335c:	outs   dx,BYTE PTR ds:[rsi]
   14001335d:	jae    0x14001339c
   14001335f:	and    dh,BYTE PTR [rbp+0x72]
   140013362:	outs   dx,BYTE PTR ds:[rsi]
   140013363:	cmp    dh,BYTE PTR [rbx+0x63]
   140013366:	push   0x73616d65
   14001336b:	sub    eax,0x7263696d
   140013370:	outs   dx,DWORD PTR ds:[rsi]
   140013371:	jae    0x1400133e2
   140013373:	data16 je 0x1400133a3
   140013376:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140013379:	cmp    ah,BYTE PTR [rcx+0x73]
   14001337c:	ins    DWORD PTR es:[rdi],dx
   14001337d:	cs jbe 0x1400133b3
   140013380:	and    bh,BYTE PTR [rsi]
   140013382:	or     eax,0x2020200a
   140013387:	and    BYTE PTR [rbx+rsi*2],bh
   14001338a:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001338e:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140013396:	and    BYTE PTR [rax],ah
   140013398:	and    BYTE PTR [rax],ah
   14001339a:	and    BYTE PTR [rax],ah
   14001339c:	cmp    al,0x72
   14001339e:	gs jno 0x140013416
   1400133a1:	gs jae 0x140013418
   1400133a4:	gs fs push rax
   1400133a7:	jb     0x140013412
   1400133a9:	jbe    0x140013414
   1400133ab:	ins    BYTE PTR es:[rdi],dx
   1400133ac:	gs addr32 gs jae 0x1400133ef
   1400133b1:	or     eax,0x2020200a
   1400133b6:	and    BYTE PTR [rax],ah
   1400133b8:	and    BYTE PTR [rax],ah
   1400133ba:	and    BYTE PTR [rax],ah
   1400133bc:	and    BYTE PTR [rax],ah
   1400133be:	and    BYTE PTR [rdx+rsi*2],bh
   1400133c1:	gs jno 0x140013439
   1400133c4:	gs jae 0x14001343b
   1400133c7:	gs fs rex.RB js 0x140013431
   1400133cc:	movsxd esi,DWORD PTR [rbp+0x74]
   1400133cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400133d6:	ins    BYTE PTR es:[rdi],dx
   1400133d7:	or     eax,0x2020200a
   1400133dc:	and    BYTE PTR [rax],ah
   1400133de:	and    BYTE PTR [rax],ah
   1400133e0:	and    BYTE PTR [rax],ah
   1400133e2:	and    BYTE PTR [rax],ah
   1400133e4:	and    BYTE PTR [rax],ah
   1400133e6:	and    BYTE PTR [rax],ah
   1400133e8:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400133ec:	gs ins BYTE PTR es:[rdi],dx
   1400133ee:	cmp    eax,0x49736122
   1400133f3:	outs   dx,BYTE PTR ds:[rsi]
   1400133f4:	jbe    0x140013465
   1400133f6:	imul   esp,DWORD PTR [rbp+0x72],0x22
   1400133fa:	or     eax,0x2020200a
   1400133ff:	and    BYTE PTR [rax],ah
   140013401:	and    BYTE PTR [rax],ah
   140013403:	and    BYTE PTR [rax],ah
   140013405:	and    BYTE PTR [rax],ah
   140013407:	and    BYTE PTR [rax],ah
   140013409:	and    BYTE PTR [rax],ah
   14001340b:	and    BYTE PTR [rbp+0x69],dh
   14001340e:	movsxd esp,DWORD PTR [r11+0x65]
   140013412:	jae    0x140013487
   140013414:	cmp    eax,0x6c616622
   140013419:	jae    0x140013480
   14001341b:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021542b
   140013421:	and    BYTE PTR [rax],ah
   140013423:	and    BYTE PTR [rax],ah
   140013425:	and    BYTE PTR [rax],ah
   140013427:	and    BYTE PTR [rax],ah
   140013429:	and    BYTE PTR [rdi],ch
   14001342b:	ds or  eax,0x2020200a
   140013431:	and    BYTE PTR [rax],ah
   140013433:	and    BYTE PTR [rax],ah
   140013435:	and    BYTE PTR [rdi+rbp*1],bh
   140013438:	jb     0x14001349f
   14001343a:	jno    0x1400134b1
   14001343c:	gs jae 0x1400134b3
   14001343f:	gs fs push rax
   140013442:	jb     0x1400134ad
   140013444:	jbe    0x1400134af
   140013446:	ins    BYTE PTR es:[rdi],dx
   140013447:	gs addr32 gs jae 0x14001348a
   14001344c:	or     eax,0x2020200a
   140013451:	and    BYTE PTR [rdi+rbp*1],bh
   140013454:	jae    0x1400134bb
   140013456:	movsxd esi,DWORD PTR [rbp+0x72]
   140013459:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   140013461:	je     0x1400134d5
   140013463:	jne    0x1400134d8
   140013465:	je     0x1400134b0
   140013467:	outs   dx,BYTE PTR ds:[rsi]
   140013468:	outs   dx,WORD PTR ds:[rsi]
   14001346a:	ds or  eax,0x612f3c0a
   140013470:	jae    0x1400134e5
   140013472:	gs ins DWORD PTR es:[rdi],dx
   140013474:	(bad)  
   140013475:	ins    BYTE PTR es:[rdi],dx
   140013476:	jns    0x1400134b6
   140013478:	or     eax,0xa0d0a
   14001347d:	add    BYTE PTR [rax],al
   14001347f:	add    al,cl
   140013481:	add    esi,DWORD PTR [rax+rax*1]
   140013484:	add    BYTE PTR [rax],al
   140013486:	push   rsi
   140013487:	add    BYTE PTR [rbx+0x0],dl
   14001348a:	pop    rdi
   14001348b:	add    BYTE PTR [rsi+0x0],dl
   14001348e:	add    BYTE PTR [r10+0x0],r10b
   140013492:	push   rbx
   140013493:	add    BYTE PTR [rcx+0x0],cl
   140013496:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14001349a:	pop    rdi
   14001349b:	add    BYTE PTR [rcx+0x0],cl
   14001349e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400134a2:	rex.WRXB add BYTE PTR [r8],r8b
   1400134a5:	add    BYTE PTR [rax],al
   1400134a7:	add    BYTE PTR [rbp+0xfeef04],bh
   1400134ad:	add    BYTE PTR [rcx],al
   1400134af:	add    BYTE PTR [rax],al
   1400134b1:	add    BYTE PTR [rdx],cl
   1400134b3:	add    BYTE PTR [rax],al
   1400134b5:	add    BYTE PTR [rax],bpl
   1400134b8:	add    BYTE PTR [rax],al
   1400134ba:	or     al,BYTE PTR [rax]
   1400134bc:	add    BYTE PTR [rax+0x0],al
   1400134bf:	sub    BYTE PTR [rdi],bh
   1400134c1:	add    BYTE PTR [rax],al
   1400134c3:	add    BYTE PTR [rax],al
   1400134c5:	add    BYTE PTR [rax],al
   1400134c7:	add    BYTE PTR [rax+rax*1],al
   1400134ca:	add    al,0x0
   1400134cc:	add    DWORD PTR [rax],eax
	...
   1400134da:	add    BYTE PTR [rax],al
   1400134dc:	add    eax,DWORD PTR es:[rax]
   1400134df:	add    BYTE PTR [rcx],al
   1400134e1:	add    BYTE PTR [rbx+0x0],dl
   1400134e4:	je     0x1400134e6
   1400134e6:	jb     0x1400134e8
   1400134e8:	imul   eax,DWORD PTR [rax],0x67006e
   1400134ee:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400134f2:	ins    BYTE PTR es:[rdi],dx
   1400134f3:	add    BYTE PTR [rbp+0x0],ah
   1400134f6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400134fa:	data16 add BYTE PTR [rdi+0x0],ch
   1400134fe:	add    BYTE PTR [rax],al
   140013500:	add    al,BYTE PTR [rbx]
   140013502:	add    BYTE PTR [rax],al
   140013504:	add    DWORD PTR [rax],eax
   140013506:	xor    BYTE PTR [rax],al
   140013508:	xor    al,0x0
   14001350a:	xor    BYTE PTR [rax],al
   14001350c:	cmp    DWORD PTR [rax],eax
   14001350e:	xor    BYTE PTR [rax],al
   140013510:	xor    al,0x0
   140013512:	rex.X add BYTE PTR [rax],sil
   140013515:	add    BYTE PTR [rax],al
   140013517:	add    BYTE PTR [rax+rax*1+0x16],cl
   14001351b:	add    BYTE PTR [rcx],al
   14001351d:	add    BYTE PTR [rbx+0x0],al
   140013520:	outs   dx,DWORD PTR ds:[rsi]
   140013521:	add    BYTE PTR [rbp+0x0],ch
   140013524:	jo     0x140013526
   140013526:	(bad)  
   140013527:	add    BYTE PTR [rsi+0x0],ch
   14001352a:	jns    0x14001352c
   14001352c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140013530:	ins    DWORD PTR es:[rdi],dx
   140013531:	add    BYTE PTR [rbp+0x0],ah
   140013534:	add    BYTE PTR [rax],al
   140013536:	add    BYTE PTR [rax],al
   140013538:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001353c:	movsxd eax,DWORD PTR [rax]
   14001353e:	jb     0x140013540
   140013540:	outs   dx,DWORD PTR ds:[rsi]
   140013541:	add    BYTE PTR [rbx+0x0],dh
   140013544:	outs   dx,DWORD PTR ds:[rsi]
   140013545:	add    BYTE PTR [rsi+0x0],ah
   140013548:	je     0x14001354a
   14001354a:	and    BYTE PTR [rax],al
   14001354c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140013550:	jb     0x140013552
   140013552:	jo     0x140013554
   140013554:	outs   dx,DWORD PTR ds:[rsi]
   140013555:	add    BYTE PTR [rdx+0x0],dh
   140013558:	(bad)  
   140013559:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001355d:	add    BYTE PTR [rdi+0x0],ch
   140013560:	outs   dx,BYTE PTR ds:[rsi]
   140013561:	add    BYTE PTR [rax],al
   140013563:	add    BYTE PTR [rdx+0x1003500],dl
   140013569:	add    BYTE PTR [rsi+0x0],al
   14001356c:	imul   eax,DWORD PTR [rax],0x65006c
   140013572:	add    BYTE PTR [rbp+0x0],r12b
   140013576:	jae    0x140013578
   140013578:	movsxd eax,DWORD PTR [rax]
   14001357a:	jb     0x14001357c
   14001357c:	imul   eax,DWORD PTR [rax],0x740070
   140013582:	imul   eax,DWORD PTR [rax],0x6e006f
   140013588:	add    BYTE PTR [rax],al
   14001358a:	add    BYTE PTR [rax],al
   14001358c:	push   rdi
   14001358d:	add    BYTE PTR [rcx+0x0],ch
   140013590:	outs   dx,BYTE PTR ds:[rsi]
   140013591:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140013595:	add    BYTE PTR [rdi+0x0],dh
   140013598:	jae    0x14001359a
   14001359a:	and    BYTE PTR [rax],al
   14001359c:	add    BYTE PTR [r8+rax*1+0x6c],bpl
   1400135a1:	add    BYTE PTR [rip+0x73005500],ch        # 0x1b3018aa7
   1400135a7:	add    BYTE PTR [rbp+0x0],ah
   1400135aa:	jb     0x1400135ac
   1400135ac:	and    BYTE PTR [rax],al
   1400135ae:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400135b2:	jae    0x1400135b4
   1400135b4:	je     0x1400135b6
   1400135b6:	(bad)  
   1400135b7:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400135bb:	add    BYTE PTR [rbp+0x0],ah
   1400135be:	jb     0x1400135c0
   1400135c0:	and    BYTE PTR [rax],al
   1400135c2:	push   rax
   1400135c3:	add    BYTE PTR [rdx+0x0],dh
   1400135c6:	outs   dx,DWORD PTR ds:[rsi]
   1400135c7:	add    BYTE PTR [rsi+0x0],ah
   1400135ca:	imul   eax,DWORD PTR [rax],0x65006c
   1400135d0:	and    BYTE PTR [rax],al
   1400135d2:	push   rax
   1400135d3:	add    BYTE PTR [rdx+0x0],dh
   1400135d6:	outs   dx,DWORD PTR ds:[rsi]
   1400135d7:	add    BYTE PTR [rbx+0x0],ah
   1400135da:	add    BYTE PTR gs:[rbx+0x0],dh
   1400135de:	jae    0x1400135e0
   1400135e0:	imul   eax,DWORD PTR [rax],0x67006e
   1400135e6:	and    BYTE PTR [rax],al
   1400135e8:	rex.WRB add BYTE PTR [r15+0x0],r13b
   1400135ec:	add    BYTE PTR fs:[rbp+0x0],dh
   1400135f0:	ins    BYTE PTR es:[rdi],dx
   1400135f1:	add    BYTE PTR [rbp+0x0],ah
   1400135f4:	add    BYTE PTR [rax],al
   1400135f6:	add    BYTE PTR [rax],al
   1400135f8:	data16 add BYTE PTR [rbx],ah
   1400135fb:	add    BYTE PTR [rcx],al
   1400135fd:	add    BYTE PTR [rsi+0x0],al
   140013600:	imul   eax,DWORD PTR [rax],0x65006c
   140013606:	push   rsi
   140013607:	add    BYTE PTR [rbp+0x0],ah
   14001360a:	jb     0x14001360c
   14001360c:	jae    0x14001360e
   14001360e:	imul   eax,DWORD PTR [rax],0x6e006f
   140013614:	add    BYTE PTR [rax],al
   140013616:	add    BYTE PTR [rax],al
   140013618:	xor    DWORD PTR [rax],eax
   14001361a:	xor    BYTE PTR [rax],al
   14001361c:	add    BYTE PTR cs:[rax],dh
   14001361f:	add    BYTE PTR [rsi],ch
   140013621:	add    BYTE PTR [rcx],dh
   140013623:	add    BYTE PTR [rax],dh
   140013625:	add    BYTE PTR [rdx],dh
   140013627:	add    BYTE PTR [rax+rax*1],dh
   14001362a:	xor    BYTE PTR [rax],al
   14001362c:	add    BYTE PTR cs:[rcx],dh
   14001362f:	add    BYTE PTR [rsi],dh
   140013631:	add    BYTE PTR [rbx],dh
   140013633:	add    BYTE PTR [rax],bh
   140013635:	add    BYTE PTR [rax+rax*1],dh
   140013638:	and    BYTE PTR [rax],al
   14001363a:	sub    BYTE PTR [rax],al
   14001363c:	je     0x14001363e
   14001363e:	push   0x2e003100
   140013643:	add    BYTE PTR [rcx],dh
   140013645:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701664b
   14001364b:	add    BYTE PTR [rax],dh
   14001364d:	add    BYTE PTR [rcx],bh
   14001364f:	add    BYTE PTR [rip+0x37003100],ch        # 0x177016755
   140013655:	add    BYTE PTR [rax],dh
   140013657:	add    BYTE PTR [rax],dh
   140013659:	add    BYTE PTR [rcx],ch
   14001365b:	add    BYTE PTR [rax],al
   14001365d:	add    BYTE PTR [rax],al
   14001365f:	add    BYTE PTR [rsi],ch
   140013661:	add    BYTE PTR [rdi],al
   140013663:	add    BYTE PTR [rcx],al
   140013665:	add    BYTE PTR [rcx+0x0],cl
   140013668:	outs   dx,BYTE PTR ds:[rsi]
   140013669:	add    BYTE PTR [rax+rax*1+0x65],dh
   14001366d:	add    BYTE PTR [rdx+0x0],dh
   140013670:	outs   dx,BYTE PTR ds:[rsi]
   140013671:	add    BYTE PTR [rcx+0x0],ah
   140013674:	ins    BYTE PTR es:[rdi],dx
   140013675:	add    BYTE PTR [rsi+0x0],cl
   140013678:	(bad)  
   140013679:	add    BYTE PTR [rbp+0x0],ch
   14001367c:	add    BYTE PTR gs:[rax],al
   14001367f:	add    BYTE PTR [rdx+0x0],dl
   140013682:	add    BYTE PTR [rbx+0x0],r10b
   140013686:	push   rax
   140013687:	add    BYTE PTR [rsi+0x0],ch
   14001368a:	data16 add BYTE PTR [rax],al
   14001368d:	add    BYTE PTR [rax],al
   14001368f:	add    BYTE PTR [rax+0x1002e00],al
   140013695:	add    BYTE PTR [rax+rax*1+0x65],cl
   140013699:	add    BYTE PTR [rdi+0x0],ah
   14001369c:	(bad)  
   14001369d:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400136a1:	add    BYTE PTR [rdi+0x0],ch
   1400136a4:	jo     0x1400136a6
   1400136a6:	jns    0x1400136a8
   1400136a8:	jb     0x1400136aa
   1400136aa:	imul   eax,DWORD PTR [rax],0x680067
   1400136b0:	je     0x1400136b2
   1400136b2:	add    BYTE PTR [rax],al
   1400136b4:	test   eax,0x4d002000
   1400136b9:	add    BYTE PTR [rcx+0x0],ch
   1400136bc:	movsxd eax,DWORD PTR [rax]
   1400136be:	jb     0x1400136c0
   1400136c0:	outs   dx,DWORD PTR ds:[rsi]
   1400136c1:	add    BYTE PTR [rbx+0x0],dh
   1400136c4:	outs   dx,DWORD PTR ds:[rsi]
   1400136c5:	add    BYTE PTR [rsi+0x0],ah
   1400136c8:	je     0x1400136ca
   1400136ca:	and    BYTE PTR [rax],al
   1400136cc:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400136d0:	jb     0x1400136d2
   1400136d2:	jo     0x1400136d4
   1400136d4:	outs   dx,DWORD PTR ds:[rsi]
   1400136d5:	add    BYTE PTR [rdx+0x0],dh
   1400136d8:	(bad)  
   1400136d9:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400136dd:	add    BYTE PTR [rdi+0x0],ch
   1400136e0:	outs   dx,BYTE PTR ds:[rsi]
   1400136e1:	add    BYTE PTR [rsi],ch
   1400136e3:	add    BYTE PTR [rax],ah
   1400136e5:	add    BYTE PTR [rcx+0x0],al
   1400136e8:	ins    BYTE PTR es:[rdi],dx
   1400136e9:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400136ed:	add    BYTE PTR [rdx+0x0],dh
   1400136f0:	imul   eax,DWORD PTR [rax],0x680067
   1400136f6:	je     0x1400136f8
   1400136f8:	jae    0x1400136fa
   1400136fa:	and    BYTE PTR [rax],al
   1400136fc:	jb     0x1400136fe
   1400136fe:	add    BYTE PTR gs:[rbx+0x0],dh
   140013702:	add    BYTE PTR gs:[rdx+0x0],dh
   140013706:	jbe    0x140013708
   140013708:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14001370d:	add    BYTE PTR [rax],al
   14001370f:	add    BYTE PTR [rsi],bh
   140013711:	add    BYTE PTR [rbx],cl
   140013713:	add    BYTE PTR [rcx],al
   140013715:	add    BYTE PTR [rdi+0x0],cl
   140013718:	jb     0x14001371a
   14001371a:	imul   eax,DWORD PTR [rax],0x690067
   140013720:	outs   dx,BYTE PTR ds:[rsi]
   140013721:	add    BYTE PTR [rcx+0x0],ah
   140013724:	ins    BYTE PTR es:[rdi],dx
   140013725:	add    BYTE PTR [rsi+0x0],al
   140013728:	imul   eax,DWORD PTR [rax],0x65006c
   14001372e:	outs   dx,BYTE PTR ds:[rsi]
   14001372f:	add    BYTE PTR [rcx+0x0],ah
   140013732:	ins    DWORD PTR es:[rdi],dx
   140013733:	add    BYTE PTR [rbp+0x0],ah
   140013736:	add    BYTE PTR [rax],al
   140013738:	push   rdx
   140013739:	add    BYTE PTR [rax+rax*1+0x53],al
   14001373d:	add    BYTE PTR [rax+0x0],dl
   140013740:	outs   dx,BYTE PTR ds:[rsi]
   140013741:	add    BYTE PTR [rsi+0x0],ah
   140013744:	add    BYTE PTR cs:[rbp+0x0],ah
   140013748:	js     0x14001374a
   14001374a:	add    BYTE PTR gs:[rax],al
   14001374d:	add    BYTE PTR [rax],al
   14001374f:	add    BYTE PTR [rdx+0x0],ch
   140013752:	and    eax,0x50000100
   140013757:	add    BYTE PTR [rdx+0x0],dh
   14001375a:	outs   dx,DWORD PTR ds:[rsi]
   14001375b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001375f:	add    BYTE PTR [rbx+0x0],ah
   140013762:	je     0x140013764
   140013764:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140013768:	ins    DWORD PTR es:[rdi],dx
   140013769:	add    BYTE PTR [rbp+0x0],ah
   14001376c:	add    BYTE PTR [rax],al
   14001376e:	add    BYTE PTR [rax],al
   140013770:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140013774:	movsxd eax,DWORD PTR [rax]
   140013776:	jb     0x140013778
   140013778:	outs   dx,DWORD PTR ds:[rsi]
   140013779:	add    BYTE PTR [rbx+0x0],dh
   14001377c:	outs   dx,DWORD PTR ds:[rsi]
   14001377d:	add    BYTE PTR [rsi+0x0],ah
   140013780:	je     0x140013782
   140013782:	scas   al,BYTE PTR es:[rdi]
   140013783:	add    BYTE PTR [rax],ah
   140013785:	add    BYTE PTR [rdi+0x0],dl
   140013788:	imul   eax,DWORD PTR [rax],0x64006e
   14001378e:	outs   dx,DWORD PTR ds:[rsi]
   14001378f:	add    BYTE PTR [rdi+0x0],dh
   140013792:	jae    0x140013794
   140013794:	scas   al,BYTE PTR es:[rdi]
   140013795:	add    BYTE PTR [rax],ah
   140013797:	add    BYTE PTR [rdi+0x0],cl
   14001379a:	jo     0x14001379c
   14001379c:	add    BYTE PTR gs:[rdx+0x0],dh
   1400137a0:	(bad)  
   1400137a1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400137a5:	add    BYTE PTR [rsi+0x0],ch
   1400137a8:	add    BYTE PTR [eax],ah
   1400137ab:	add    BYTE PTR [rbx+0x0],dl
   1400137ae:	jns    0x1400137b0
   1400137b0:	jae    0x1400137b2
   1400137b2:	je     0x1400137b4
   1400137b4:	add    BYTE PTR gs:[rbp+0x0],ch
   1400137b8:	add    BYTE PTR [rax],al
   1400137ba:	add    BYTE PTR [rax],al
   1400137bc:	rex.RX add BYTE PTR [rcx],r10b
   1400137bf:	add    BYTE PTR [rcx],al
   1400137c1:	add    BYTE PTR [rax+0x0],dl
   1400137c4:	jb     0x1400137c6
   1400137c6:	outs   dx,DWORD PTR ds:[rsi]
   1400137c7:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400137cb:	add    BYTE PTR [rbx+0x0],ah
   1400137ce:	je     0x1400137d0
   1400137d0:	push   rsi
   1400137d1:	add    BYTE PTR [rbp+0x0],ah
   1400137d4:	jb     0x1400137d6
   1400137d6:	jae    0x1400137d8
   1400137d8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400137de:	add    BYTE PTR [rax],al
   1400137e0:	xor    DWORD PTR [rax],eax
   1400137e2:	xor    BYTE PTR [rax],al
   1400137e4:	add    BYTE PTR cs:[rax],dh
   1400137e7:	add    BYTE PTR [rsi],ch
   1400137e9:	add    BYTE PTR [rcx],dh
   1400137eb:	add    BYTE PTR [rax],dh
   1400137ed:	add    BYTE PTR [rdx],dh
   1400137ef:	add    BYTE PTR [rax+rax*1],dh
   1400137f2:	xor    BYTE PTR [rax],al
   1400137f4:	add    BYTE PTR cs:[rcx],dh
   1400137f7:	add    BYTE PTR [rsi],dh
   1400137f9:	add    BYTE PTR [rbx],dh
   1400137fb:	add    BYTE PTR [rax],bh
   1400137fd:	add    BYTE PTR [rax+rax*1],dh
   140013800:	add    BYTE PTR [rax],al
   140013802:	add    BYTE PTR [rax],al
   140013804:	add    BYTE PTR [rax],r8b
   140013807:	add    BYTE PTR [rcx],al
   140013809:	add    BYTE PTR [rsi+0x0],dl
   14001380c:	(bad)  
   14001380d:	add    BYTE PTR [rdx+0x0],dh
   140013810:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140013814:	ins    BYTE PTR es:[rdi],dx
   140013815:	add    BYTE PTR [rbp+0x0],ah
   140013818:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001381c:	data16 add BYTE PTR [rdi+0x0],ch
   140013820:	add    BYTE PTR [rax],al
   140013822:	add    BYTE PTR [rax],al
   140013824:	and    al,0x0
   140013826:	add    al,0x0
   140013828:	add    BYTE PTR [rax],al
   14001382a:	push   rsp
   14001382b:	add    BYTE PTR [rdx+0x0],dh
   14001382e:	(bad)  
   14001382f:	add    BYTE PTR [rsi+0x0],ch
   140013832:	jae    0x140013834
   140013834:	ins    BYTE PTR es:[rdi],dx
   140013835:	add    BYTE PTR [rcx+0x0],ah
   140013838:	je     0x14001383a
   14001383a:	imul   eax,DWORD PTR [rax],0x6e006f
   140013840:	add    BYTE PTR [rax],al
   140013842:	add    BYTE PTR [rax],al
   140013844:	or     DWORD PTR [rax+rsi*4],eax
   140013847:	add    al,0x48
   140013849:	rex.WXB
   14001384a:	rex.XB push r10
   14001384c:	or     eax,0xa0d7b0a
   140013851:	jge    0x140013860
   140013853:	or     al,BYTE PTR [rax]
   140013855:	add    BYTE PTR [rax],al
   140013857:	add    BYTE PTR [rax+0x4b],cl
   14001385a:	rex.XB push r10
   14001385c:	or     eax,0xa0d7b0a
   140013861:	or     DWORD PTR [rdx+0x44],edx
   140013864:	push   rbx
   140013865:	push   rax
   140013866:	jb     0x1400138d7
   140013868:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x6e61
   14001386f:	fs ins BYTE PTR es:[rdi],dx
   140013871:	gs jb  0x1400138a2
   140013874:	xor    DWORD PTR [rax],esp
   140013876:	cmp    eax,0x27207320
   14001387b:	push   rdx
   14001387c:	rex.R push rbx
   14001387e:	push   rax
   14001387f:	jb     0x1400138f0
   140013881:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x6e61
   140013888:	fs ins BYTE PTR es:[rdi],dx
   14001388a:	gs jb  0x1400138ad
   14001388d:	rex.XB ins BYTE PTR es:[rdi],dx
   14001388f:	(bad)  
   140013890:	jae    0x140013905
   140013892:	(bad)  
   140013893:	or     eax,0xd7b090a
   140013898:	or     cl,BYTE PTR [rcx]
   14001389a:	or     DWORD PTR [rbx+0x4c],eax
   14001389d:	push   rbx
   14001389e:	rex.WB
   14001389f:	and    BYTE PTR [rip+0x27207320],r15b        # 0x16721abc6
   1400138a6:	jnp    0x1400138ec
   1400138a8:	ss xor al,0x34
   1400138ab:	rex.B
   1400138ac:	xor    r13b,BYTE PTR ss:[rip+0x45354538]        # 0x185367dec
   1400138b4:	sub    eax,0x35303434
   1400138b9:	sub    eax,0x36364141
   1400138be:	sub    eax,0x34353531
   1400138c3:	cmp    DWORD PTR [r9+0x38],r8d
   1400138c7:	rex.RB
   1400138c8:	xor    DWORD PTR [rax],r14d
   1400138cb:	jge    0x1400138f4
   1400138cd:	or     eax,0xd7d090a
   1400138d2:	or     cl,BYTE PTR [rcx]
   1400138d4:	push   rdx
   1400138d5:	rex.R push rbx
   1400138d7:	push   rax
   1400138d8:	jb     0x140013949
   1400138da:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x6e61
   1400138e1:	fs ins BYTE PTR es:[rdi],dx
   1400138e3:	gs jb  0x140013906
   1400138e6:	cmp    eax,0x27207320
   1400138eb:	push   rdx
   1400138ec:	rex.R push rbx
   1400138ee:	push   rax
   1400138ef:	jb     0x140013960
   1400138f1:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x6e61
   1400138f8:	fs ins BYTE PTR es:[rdi],dx
   1400138fa:	gs jb  0x14001391d
   1400138fd:	rex.XB ins BYTE PTR es:[rdi],dx
   1400138ff:	(bad)  
   140013900:	jae    0x140013975
   140013902:	(bad)  
   140013903:	or     eax,0x97b090a
   140013908:	or     DWORD PTR [rip+0x4309090a],ecx        # 0x1830a4218
   14001390e:	jne    0x140013982
   140013910:	push   rsi
   140013911:	gs jb  0x140013934
   140013914:	cmp    eax,0x27207320
   140013919:	push   rdx
   14001391a:	rex.R push rbx
   14001391c:	push   rax
   14001391d:	jb     0x14001398e
   14001391f:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x6e61
   140013926:	fs ins BYTE PTR es:[rdi],dx
   140013928:	gs jb  0x140013959
   14001392b:	xor    DWORD PTR [rdi],esp
   14001392d:	or     eax,0xd7d090a
   140013932:	or     cl,BYTE PTR [rcx]
   140013934:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140013936:	push   rdx
   140013937:	gs ins DWORD PTR es:[rdi],dx
   140013939:	outs   dx,DWORD PTR ds:[rsi]
   14001393a:	jbe    0x1400139a1
   14001393c:	and    BYTE PTR [rbx+0x4c],al
   14001393f:	push   rbx
   140013940:	rex.WB
   140013941:	rex.R or eax,0xd7b090a
   140013947:	or     cl,BYTE PTR [rcx]
   140013949:	or     DWORD PTR [rsi+0x6f],eax
   14001394c:	jb     0x1400139b1
   14001394e:	gs push rdx
   140013950:	gs ins DWORD PTR es:[rdi],dx
   140013952:	outs   dx,DWORD PTR ds:[rsi]
   140013953:	jbe    0x1400139ba
   140013955:	and    BYTE PTR [rbx+0x44],bh
   140013958:	ss xor al,0x34
   14001395b:	rex.B
   14001395c:	xor    r13b,BYTE PTR ss:[rip+0x45354538]        # 0x185367e9c
   140013964:	sub    eax,0x35303434
   140013969:	sub    eax,0x36364141
   14001396e:	sub    eax,0x34353531
   140013973:	cmp    DWORD PTR [r9+0x38],r8d
   140013977:	rex.RB
   140013978:	xor    DWORD PTR [rax],r14d
   14001397b:	jge    0x14001399d
   14001397d:	cmp    eax,0x27207320
   140013982:	push   rdx
   140013983:	rex.R push rbx
   140013985:	push   rax
   140013986:	jb     0x1400139f7
   140013988:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x6e61
   14001398f:	fs ins BYTE PTR es:[rdi],dx
   140013991:	gs jb  0x1400139b4
   140013994:	rex.XB ins BYTE PTR es:[rdi],dx
   140013996:	(bad)  
   140013997:	jae    0x140013a0c
   140013999:	(bad)  
   14001399a:	or     eax,0x7b09090a
   14001399f:	or     eax,0x909090a
   1400139a4:	push   rax
   1400139a5:	jb     0x140013a16
   1400139a7:	addr32 rex.WB
   1400139a9:	and    BYTE PTR [rip+0x27207320],r15b        # 0x16721acd0
   1400139b0:	push   rdx
   1400139b1:	rex.R push rbx
   1400139b3:	push   rax
   1400139b4:	jb     0x140013a25
   1400139b6:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x6e61
   1400139bd:	fs ins BYTE PTR es:[rdi],dx
   1400139bf:	gs jb  0x1400139f0
   1400139c2:	xor    DWORD PTR [rdi],esp
   1400139c4:	or     eax,0x909090a
   1400139c9:	push   rsi
   1400139ca:	gs jb  0x140013a40
   1400139cd:	imul   ebp,DWORD PTR [rdi+0x6e],0x65646e49
   1400139d4:	jo     0x140013a3b
   1400139d6:	outs   dx,BYTE PTR ds:[rsi]
   1400139d7:	fs outs dx,BYTE PTR gs:[rsi]
   1400139da:	je     0x140013a2c
   1400139dc:	jb     0x140013a4d
   1400139de:	addr32 rex.WB
   1400139e0:	and    BYTE PTR [rip+0x27207320],r15b        # 0x16721ad07
   1400139e7:	push   rdx
   1400139e8:	rex.R push rbx
   1400139ea:	push   rax
   1400139eb:	jb     0x140013a5c
   1400139ed:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x6e61
   1400139f4:	fs ins BYTE PTR es:[rdi],dx
   1400139f6:	gs jb  0x140013a20
   1400139f9:	or     eax,0x909090a
   1400139fe:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140013a00:	movsxd esp,DWORD PTR [rcx+0x6c]
   140013a03:	push   rbx
   140013a04:	gs jb  0x140013a7d
   140013a07:	gs jb  0x140013a3d
   140013a0a:	xor    ah,BYTE PTR [rax]
   140013a0c:	cmp    eax,0x27207320
   140013a11:	and    eax,0x55444f4d
   140013a16:	rex.WR
   140013a17:	rex.RB and eax,0x90a0d27
   140013a1d:	or     DWORD PTR [rcx],ecx
   140013a1f:	jnp    0x140013a2e
   140013a21:	or     cl,BYTE PTR [rcx]
   140013a23:	or     DWORD PTR [rcx],ecx
   140013a25:	or     DWORD PTR [rsi+0x61],esi
   140013a28:	ins    BYTE PTR es:[rdi],dx
   140013a29:	and    BYTE PTR [rbx+0x65],dl
   140013a2c:	jb     0x140013aa4
   140013a2e:	gs jb  0x140013a76
   140013a31:	js     0x140013a98
   140013a33:	movsxd esi,DWORD PTR [rbp+0x74]
   140013a36:	(bad)  
   140013a37:	(bad)  
   140013a38:	ins    BYTE PTR es:[rdi],dx
   140013a39:	and    BYTE PTR gs:[rip+0x27207320],bh        # 0x16721ad60
   140013a40:	and    eax,0x55444f4d
   140013a45:	rex.WR
   140013a46:	rex.RB pop r15
   140013a48:	push   rdx
   140013a49:	push   r15
   140013a4b:	and    eax,0x90a0d27
   140013a50:	or     DWORD PTR [rcx],ecx
   140013a52:	jge    0x140013a61
   140013a54:	or     cl,BYTE PTR [rcx]
   140013a56:	or     DWORD PTR [rcx],ecx
   140013a58:	push   rsp
   140013a59:	jns    0x140013acb
   140013a5b:	imul   r12,QWORD PTR gs:[rdx+0x20],0x2073203d
   140013a64:	(bad)  
   140013a65:	jnp    0x140013aa0
   140013a67:	cmp    DWORD PTR [rcx],esi
   140013a69:	(bad)  
   140013a6a:	xor    BYTE PTR [rip+0x322d4541],dh        # 0x1722e7fb1
   140013a70:	xor    DWORD PTR [rdi],esi
   140013a72:	rex.R sub eax,0x41434134
   140013a78:	sub    eax,0x46463041
   140013a7d:	sub    eax,0x46433730
   140013a82:	xor    al,0x46
   140013a84:	rex.R
   140013a85:	rex.XB xor dil,BYTE PTR [r9]
   140013a88:	xor    al,BYTE PTR [rbp+rdi*2+0x27]
   140013a8c:	or     eax,0x909090a
   140013a91:	push   rsi
   140013a92:	gs jb  0x140013b08
   140013a95:	imul   ebp,DWORD PTR [rdi+0x6e],0x73203d20
   140013a9c:	and    BYTE PTR [rdi],ah
   140013a9e:	xor    DWORD PTR [rsi],ebp
   140013aa0:	xor    BYTE PTR [rdi],ah
   140013aa2:	or     eax,0x7d09090a
   140013aa7:	or     eax,0xd7d090a
   140013aac:	or     bh,BYTE PTR [rbp+0xd]
   140013aaf:	or     cl,BYTE PTR [rbp+0x53]
   140013ab2:	rex.RX push rsp
   140013ab4:	add    al,BYTE PTR [rax]
   140013ab6:	add    DWORD PTR [rax],eax
   140013ab8:	add    BYTE PTR [rax],al
   140013aba:	add    BYTE PTR [rax],al
   140013abc:	or     DWORD PTR [rax+rax*1],eax
   140013abf:	add    BYTE PTR [rax],al
   140013ac1:	add    BYTE PTR [rax],al
   140013ac3:	add    BYTE PTR [rbx+0x0],al
   140013ac6:	add    BYTE PTR [rax],al
   140013ac8:	add    DWORD PTR [rax],eax
   140013aca:	add    BYTE PTR [rax],al
   140013acc:	add    BYTE PTR [rax],al
   140013ace:	add    BYTE PTR [rax],al
   140013ad0:	add    al,BYTE PTR [rax]
   140013ad2:	add    BYTE PTR [rax],al
   140013ad4:	(bad)  
   140013ad5:	(bad)  
   140013ad6:	(bad)  
   140013ad7:	inc    DWORD PTR [rax]
   140013ad9:	add    BYTE PTR [rax],al
   140013adb:	add    BYTE PTR [rax],al
   140013add:	add    BYTE PTR [rax],al
   140013adf:	add    BYTE PTR [rax],dl
   140013ae1:	add    BYTE PTR [rax],al
   140013ae3:	add    BYTE PTR [rbp+0x0],ah
   140013ae9:	add    BYTE PTR [rax],al
   140013aeb:	add    bh,bh
   140013aed:	(bad)  
   140013aee:	(bad)  
   140013aef:	(bad)  
   140013af0:	(bad)  
   140013af1:	(bad)  
   140013af2:	(bad)  
   140013af3:	jmp    QWORD PTR [rax]
   140013af5:	add    BYTE PTR [rax],al
   140013af7:	add    BYTE PTR [rax-0x1000000],al
   140013afd:	(bad)  
   140013afe:	(bad)  
   140013aff:	inc    DWORD PTR [rcx]
   140013b01:	add    BYTE PTR [rax],al
   140013b03:	add    BYTE PTR [rax],al
   140013b05:	add    BYTE PTR [rax],al
   140013b07:	add    BYTE PTR [rax+rax*1+0x0],ah
   140013b0b:	add    BYTE PTR [rcx+rax*1+0x0],cl
   140013b0f:	add    al,cl
   140013b11:	add    BYTE PTR [rax],al
   140013b13:	add    bh,bh
   140013b15:	(bad)  
   140013b16:	(bad)  
   140013b17:	dec    DWORD PTR [rdi]
   140013b19:	add    BYTE PTR [rax],al
   140013b1b:	add    BYTE PTR [rbx+rax*1],bl
   140013b1e:	add    BYTE PTR [rax],al
   140013b20:	or     al,0x0
   140013b22:	add    BYTE PTR [rax],al
   140013b24:	(bad)  
   140013b25:	(bad)  
   140013b26:	(bad)  
   140013b27:	dec    DWORD PTR [rdi]
   140013b29:	add    BYTE PTR [rax],al
   140013b2b:	add    BYTE PTR [rax],ch
   140013b2d:	add    eax,DWORD PTR [rax]
   140013b2f:	add    BYTE PTR [rax+rax*1],bl
   140013b32:	add    BYTE PTR [rax],al
   140013b34:	(bad)  
   140013b35:	(bad)  
   140013b36:	(bad)  
   140013b37:	dec    DWORD PTR [rdi]
   140013b39:	add    BYTE PTR [rax],al
   140013b3b:	add    BYTE PTR [rbx+rax*1],cl
   140013b3e:	add    BYTE PTR [rax],al
   140013b40:	adc    BYTE PTR [rax],al
   140013b42:	add    BYTE PTR [rax],al
   140013b44:	(bad)  
   140013b45:	(bad)  
   140013b46:	(bad)  
   140013b47:	dec    DWORD PTR [rdi]
   140013b49:	add    BYTE PTR [rax],al
   140013b4b:	add    BYTE PTR [rdx+rax*1],dl
   140013b4e:	add    BYTE PTR [rax],al
   140013b50:	add    BYTE PTR [rax],0x0
   140013b53:	add    bh,bh
   140013b55:	(bad)  
   140013b56:	(bad)  
   140013b57:	dec    DWORD PTR [rdi]
   140013b59:	add    BYTE PTR [rax],al
   140013b5b:	add    BYTE PTR [rdx+rax*1+0x780000],dl
   140013b62:	add    BYTE PTR [rax],al
   140013b64:	(bad)  
   140013b65:	(bad)  
   140013b66:	(bad)  
   140013b67:	dec    DWORD PTR [rdi]
   140013b69:	add    BYTE PTR [rax],al
   140013b6b:	add    BYTE PTR [rbx+rax*1+0x0],al
   140013b6f:	add    BYTE PTR [rax],al
   140013b71:	add    al,BYTE PTR [rax]
   140013b73:	add    bh,bh
   140013b75:	(bad)  
   140013b76:	(bad)  
   140013b77:	dec    DWORD PTR [rdi]
   140013b79:	add    BYTE PTR [rax],al
   140013b7b:	add    BYTE PTR [rbp+rax*1+0x0],al
   140013b7f:	add    BYTE PTR [rax-0xffffff],cl
   140013b85:	(bad)  
   140013b86:	(bad)  
   140013b87:	dec    DWORD PTR [rdi]
   140013b89:	add    BYTE PTR [rax],al
   140013b8b:	add    ah,cl
   140013b8d:	(bad)  
   140013b8e:	add    BYTE PTR [rax],al
   140013b90:	sbb    al,0x0
   140013b92:	add    BYTE PTR [rax],al
   140013b94:	(bad)  
   140013b95:	(bad)  
   140013b96:	(bad)  
   140013b97:	dec    DWORD PTR [rdi]
   140013b99:	add    BYTE PTR [rax],al
   140013b9b:	add    bh,bh
   140013b9d:	(bad)  
   140013b9e:	(bad)  
   140013b9f:	inc    DWORD PTR [rax]
   140013ba1:	add    BYTE PTR [rax],al
   140013ba3:	add    bh,bh
   140013ba5:	(bad)  
   140013ba6:	(bad)  
   140013ba7:	dec    DWORD PTR [rdi]
   140013ba9:	add    BYTE PTR [rax],al
   140013bab:	add    bh,bh
   140013bad:	(bad)  
   140013bae:	(bad)  
   140013baf:	inc    DWORD PTR [rax]
   140013bb1:	add    BYTE PTR [rax],al
   140013bb3:	add    bh,bh
   140013bb5:	(bad)  
   140013bb6:	(bad)  
   140013bb7:	dec    DWORD PTR [rdi]
   140013bb9:	add    BYTE PTR [rax],al
   140013bbb:	add    bh,bh
   140013bbd:	(bad)  
   140013bbe:	(bad)  
   140013bbf:	inc    DWORD PTR [rax]
   140013bc1:	add    BYTE PTR [rax],al
   140013bc3:	add    bh,bh
   140013bc5:	(bad)  
   140013bc6:	(bad)  
   140013bc7:	dec    DWORD PTR [rdi]
   140013bc9:	add    BYTE PTR [rax],al
   140013bcb:	add    bh,bh
   140013bcd:	(bad)  
   140013bce:	(bad)  
   140013bcf:	inc    DWORD PTR [rax]
   140013bd1:	add    BYTE PTR [rax],al
   140013bd3:	add    bh,bh
   140013bd5:	(bad)  
   140013bd6:	(bad)  
   140013bd7:	dec    DWORD PTR [rdi]
   140013bd9:	add    BYTE PTR [rax],al
   140013bdb:	add    bh,bh
   140013bdd:	(bad)  
   140013bde:	(bad)  
   140013bdf:	inc    DWORD PTR [rax]
   140013be1:	add    BYTE PTR [rax],al
   140013be3:	add    bh,bh
   140013be5:	(bad)  
   140013be6:	(bad)  
   140013be7:	dec    DWORD PTR [rdi]
   140013be9:	add    BYTE PTR [rax],al
   140013beb:	add    bh,bh
   140013bed:	(bad)  
   140013bee:	(bad)  
   140013bef:	inc    DWORD PTR [rax]
   140013bf1:	add    BYTE PTR [rax],al
   140013bf3:	add    bh,bh
   140013bf5:	(bad)  
   140013bf6:	(bad)  
   140013bf7:	dec    DWORD PTR [rdi]
   140013bf9:	add    BYTE PTR [rax],al
   140013bfb:	add    BYTE PTR [rip+0xffffffffe8000042],ah        # 0x128013c43
   140013c01:	(bad)  
	...
   140013c0a:	add    BYTE PTR [rax],al
   140013c0c:	add    eax,DWORD PTR [rax]
	...
   140013c26:	add    BYTE PTR [rax],al
   140013c28:	sbb    BYTE PTR [rax],al
   140013c2a:	add    BYTE PTR [rax],al
   140013c2c:	add    al,BYTE PTR [rax]
   140013c2e:	add    BYTE PTR [rax],al
   140013c30:	sbb    BYTE PTR [rax],al
   140013c32:	add    BYTE PTR [rax],al
   140013c34:	add    BYTE PTR [rax],al
   140013c36:	add    BYTE PTR [rax],al
   140013c38:	(bad)  
   140013c39:	(bad)  
   140013c3a:	(bad)  
   140013c3b:	inc    DWORD PTR [rax]
   140013c3d:	add    BYTE PTR [rax],al
   140013c3f:	add    BYTE PTR [rax],al
   140013c41:	add    BYTE PTR [rax],al
   140013c43:	add    bh,bh
   140013c45:	(bad)  
   140013c46:	(bad)  
   140013c47:	inc    DWORD PTR [rcx]
   140013c49:	add    BYTE PTR [rax],al
   140013c4b:	add    BYTE PTR [rax],cl
	...
   140013c59:	add    BYTE PTR [rax],al
   140013c5b:	add    bh,bh
   140013c5d:	(bad)  
   140013c5e:	(bad)  
   140013c5f:	jmp    QWORD PTR [rbx]
   140013c61:	rex.X add DWORD PTR [rax],eax
   140013c64:	call   0x140013c6f
   140013c69:	add    BYTE PTR [rax],al
   140013c6b:	add    BYTE PTR [rax],al
   140013c6d:	add    BYTE PTR [rax],al
   140013c6f:	add    BYTE PTR [rbx],al
   140013c71:	add    BYTE PTR [rax],al
   140013c73:	add    BYTE PTR [rax],al
   140013c75:	add    BYTE PTR [rax],al
   140013c77:	add    BYTE PTR [rsi],al
	...
   140013c89:	add    BYTE PTR [rax],al
   140013c8b:	add    BYTE PTR [rax],dh
   140013c8d:	add    BYTE PTR [rax],al
   140013c8f:	add    BYTE PTR [rax],al
   140013c91:	add    BYTE PTR [rax],al
   140013c93:	add    BYTE PTR [rax],bh
	...
   140013ca5:	add    BYTE PTR [rax],al
   140013ca7:	add    bh,bh
   140013ca9:	(bad)  
   140013caa:	(bad)  
   140013cab:	inc    DWORD PTR [rcx]
   140013cad:	add    BYTE PTR [rax+0x0],cl
   140013cb0:	or     BYTE PTR [rax],al
   140013cb2:	add    BYTE PTR [rax],al
   140013cb4:	add    DWORD PTR [rax],eax
   140013cb6:	add    BYTE PTR [rax],al
   140013cb8:	add    DWORD PTR [rax],eax
   140013cba:	add    eax,DWORD PTR [rax]
   140013cbc:	add    BYTE PTR [rax],al
   140013cbe:	add    BYTE PTR [rax],al
   140013cc0:	(bad)  
   140013cc1:	(bad)  
   140013cc2:	(bad)  
   140013cc3:	jmp    QWORD PTR [rax+0x0]
   140013cc6:	add    BYTE PTR [rax],al
   140013cc8:	(bad)  
   140013cc9:	(bad)  
   140013cca:	(bad)  
   140013ccb:	(bad)  
   140013ccc:	(bad)  
   140013ccd:	(bad)  
   140013cce:	(bad)  
   140013ccf:	(bad)  
   140013cd0:	(bad)  
   140013cd1:	(bad)  
   140013cd2:	(bad)  
   140013cd3:	(bad)  
   140013cd4:	(bad)  
   140013cd5:	(bad)  
   140013cd6:	(bad)  
   140013cd7:	(bad)  
   140013cd8:	(bad)  
   140013cd9:	(bad)  
   140013cda:	(bad)  
   140013cdb:	(bad)  
   140013cdc:	(bad)  
   140013cdd:	(bad)  
   140013cde:	(bad)  
   140013cdf:	(bad)  
   140013ce0:	(bad)  
   140013ce1:	(bad)  
   140013ce2:	(bad)  
   140013ce3:	(bad)  
   140013ce4:	(bad)  
   140013ce5:	(bad)  
   140013ce6:	(bad)  
   140013ce7:	(bad)  
   140013ce8:	(bad)  
   140013ce9:	(bad)  
   140013cea:	(bad)  
   140013ceb:	(bad)  
   140013cec:	(bad)  
   140013ced:	(bad)  
   140013cee:	(bad)  
   140013cef:	(bad)  
   140013cf0:	(bad)  
   140013cf1:	(bad)  
   140013cf2:	(bad)  
   140013cf3:	(bad)  
   140013cf4:	(bad)  
   140013cf5:	(bad)  
   140013cf6:	(bad)  
   140013cf7:	(bad)  
   140013cf8:	(bad)  
   140013cf9:	(bad)  
   140013cfa:	(bad)  
   140013cfb:	(bad)  
   140013cfc:	(bad)  
   140013cfd:	(bad)  
   140013cfe:	(bad)  
   140013cff:	inc    DWORD PTR [rax]
   140013d01:	add    BYTE PTR [rax],al
   140013d03:	add    bh,bh
   140013d05:	(bad)  
   140013d06:	(bad)  
   140013d07:	push   QWORD PTR [rax]
   140013d09:	add    BYTE PTR [rax],al
   140013d0b:	add    BYTE PTR [rax+0x0],cl
   140013d0e:	add    BYTE PTR [rax],al
   140013d10:	(bad)  
   140013d11:	(bad)  
   140013d12:	(bad)  
   140013d13:	(bad)  
   140013d14:	(bad)  
   140013d15:	(bad)  
   140013d16:	(bad)  
   140013d17:	(bad)  
   140013d18:	(bad)  
   140013d19:	(bad)  
   140013d1a:	(bad)  
   140013d1b:	call   FWORD PTR [rax]
   140013d1d:	add    BYTE PTR [rax],al
   140013d1f:	add    bh,bh
   140013d21:	(bad)  
   140013d22:	(bad)  
   140013d23:	(bad)  
   140013d24:	(bad)  
   140013d25:	(bad)  
   140013d26:	(bad)  
   140013d27:	(bad)  
   140013d28:	(bad)  
   140013d29:	(bad)  
   140013d2a:	(bad)  
   140013d2b:	(bad)  
   140013d2c:	(bad)  
   140013d2d:	(bad)  
   140013d2e:	(bad)  
   140013d2f:	(bad)  
   140013d30:	(bad)  
   140013d31:	(bad)  
   140013d32:	(bad)  
   140013d33:	(bad)  
   140013d34:	(bad)  
   140013d35:	(bad)  
   140013d36:	(bad)  
   140013d37:	(bad)  
   140013d38:	(bad)  
   140013d39:	(bad)  
   140013d3a:	(bad)  
   140013d3b:	(bad)  
   140013d3c:	(bad)  
   140013d3d:	(bad)  
   140013d3e:	(bad)  
   140013d3f:	(bad)  
   140013d40:	(bad)  
   140013d41:	(bad)  
   140013d42:	(bad)  
   140013d43:	jmp    FWORD PTR [rsi+0x7d991705]
   140013d49:	and    edx,ecx
   140013d4b:	rex.WX movabs al,ds:0xfe2d29dc4fcf07ff
   140013d55:	(bad)  
   140013d56:	(bad)  
   140013d57:	(bad)  
   140013d58:	(bad)  
   140013d59:	(bad)  
   140013d5a:	(bad)  
   140013d5b:	call   rdx
   140013d5d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013d5e:	rex.R (bad) 
   140013d60:	pop    rsi
   140013d61:	mov    es,WORD PTR [rip+0x1566aa44]        # 0x15567e7ab
   140013d67:	push   rsp
   140013d68:	jmp    0x140122b15
   140013d6d:	add    BYTE PTR [rax],al
   140013d6f:	add    bh,bh
   140013d71:	(bad)  
   140013d72:	(bad)  
   140013d73:	(bad)  
   140013d74:	cmp    ch,BYTE PTR [rdi+rcx*1-0x1f]
   140013d78:	scas   al,BYTE PTR es:[rdi]
   140013d79:	icebp  
   140013d7a:	fmul   QWORD PTR [rdx-0x56]
   140013d7d:	popf   
   140013d7e:	(bad)  
   140013d7f:	out    0x55,al
   140013d81:	and    eax,0x646e66
   140013d86:	add    BYTE PTR [rax],al
   140013d88:	(bad)  
   140013d89:	(bad)  
   140013d8a:	(bad)  
   140013d8b:	push   QWORD PTR [rax]
   140013d8d:	add    al,0x2
   140013d8f:	add    BYTE PTR [rax],al
   140013d91:	add    BYTE PTR [rax],al
   140013d93:	add    al,al
   140013d95:	add    BYTE PTR [rax],al
   140013d97:	add    BYTE PTR [rax],al
   140013d99:	add    BYTE PTR [rax],al
   140013d9b:	rex.RX add r8b,BYTE PTR [rax]
   140013d9e:	add    BYTE PTR [rax],al
   140013da0:	(bad)  
   140013da1:	(bad)  
   140013da2:	(bad)  
   140013da3:	inc    DWORD PTR [rax]
   140013da5:	add    BYTE PTR [rax],al
   140013da7:	add    BYTE PTR [rax],al
   140013da9:	add    BYTE PTR [rax],al
   140013dab:	add    al,al
   140013dad:	add    BYTE PTR [rax],al
   140013daf:	add    BYTE PTR [rax],al
   140013db1:	add    BYTE PTR [rax],al
   140013db3:	rex.RX add DWORD PTR [rax],r8d
   140013db6:	add    BYTE PTR [rax],al
   140013db8:	(bad)  
   140013db9:	(bad)  
   140013dba:	(bad)  
   140013dbb:	jmp    QWORD PTR [rax+rax*1+0x0]
   140013dbf:	add    BYTE PTR [rcx],al
   140013dc1:	add    BYTE PTR [rax],al
   140013dc3:	add    bh,bh
   140013dc5:	(bad)  
   140013dc6:	(bad)  
   140013dc7:	(bad)  
   140013dc8:	(bad)  
   140013dc9:	(bad)  
   140013dca:	(bad)  
   140013dcb:	inc    DWORD PTR [rax]
   140013dcd:	add    BYTE PTR [rcx],al
   140013dcf:	add    eax,DWORD PTR [rax]
   140013dd1:	add    BYTE PTR [rax],al
   140013dd3:	add    BYTE PTR [rax+0x0],ah
   140013dd6:	add    BYTE PTR [rax],al
   140013dd8:	rex.W add BYTE PTR [rax],al
   140013ddb:	add    BYTE PTR [rax],al
   140013ddd:	add    BYTE PTR [rax],al
   140013ddf:	add    BYTE PTR [rdx],al
   140013de1:	add    BYTE PTR [rax],al
   140013de3:	add    BYTE PTR [rdi],ch
   140013de5:	add    BYTE PTR [rbx+0x74],dh
   140013de8:	outs   dx,DWORD PTR fs:[rsi]
   140013dea:	ins    BYTE PTR es:[rdi],dx
   140013deb:	xor    ch,BYTE PTR gs:[rsi]
   140013dee:	je     0x140013e5c
   140013df0:	(bad)  
   140013df1:	push   rdi
   140013df2:	push   rdi
   140013df3:	push   rdi
   140013df4:	(bad)  
   140013df5:	(bad)  
   140013df6:	(bad)  
   140013df7:	(bad)  
   140013df8:	(bad)  
   140013df9:	(bad)  
   140013dfa:	(bad)  
   140013dfb:	(bad)  
   140013dfc:	(bad)  
   140013dfd:	(bad)  
   140013dfe:	(bad)  
   140013dff:	(bad)  
   140013e00:	(bad)  
   140013e01:	(bad)  
   140013e02:	(bad)  
   140013e03:	(bad)  
   140013e04:	(bad)  
   140013e05:	(bad)  
   140013e06:	(bad)  
   140013e07:	(bad)  
   140013e08:	(bad)  
   140013e09:	(bad)  
   140013e0a:	(bad)  
   140013e0b:	(bad)  
   140013e0c:	(bad)  
   140013e0d:	(bad)  
   140013e0e:	(bad)  
   140013e0f:	(bad)  
   140013e10:	(bad)  
   140013e11:	(bad)  
   140013e12:	(bad)  
   140013e13:	(bad)  
   140013e14:	(bad)  
   140013e15:	(bad)  
   140013e16:	(bad)  
   140013e17:	(bad)  
   140013e18:	(bad)  
   140013e19:	(bad)  
   140013e1a:	(bad)  
   140013e1b:	(bad)  
   140013e1c:	(bad)  
   140013e1d:	(bad)  
   140013e1e:	(bad)  
   140013e1f:	(bad)  
   140013e20:	(bad)  
   140013e21:	(bad)  
   140013e22:	(bad)  
   140013e23:	(bad)  
   140013e24:	(bad)  
   140013e25:	(bad)  
   140013e26:	(bad)  
   140013e27:	(bad)  
   140013e28:	(bad)  
   140013e29:	(bad)  
   140013e2a:	(bad)  
   140013e2b:	(bad)  
   140013e2c:	(bad)  
   140013e2d:	(bad)  
   140013e2e:	(bad)  
   140013e2f:	(bad)  
   140013e30:	(bad)  
   140013e31:	(bad)  
   140013e32:	(bad)  
   140013e33:	(bad)  
   140013e34:	jl     0x140013e36
   140013e36:	add    BYTE PTR [rax],al
   140013e38:	(bad)  
   140013e39:	(bad)  
   140013e3a:	(bad)  
   140013e3b:	(bad)  
   140013e3c:	(bad)  
   140013e3d:	(bad)  
   140013e3e:	(bad)  
   140013e3f:	(bad)  
   140013e40:	(bad)  
   140013e41:	(bad)  
   140013e42:	(bad)  
   140013e43:	(bad)  
   140013e44:	(bad)  
   140013e45:	(bad)  
   140013e46:	(bad)  
   140013e47:	(bad)  
   140013e48:	(bad)  
   140013e49:	(bad)  
   140013e4a:	(bad)  
   140013e4b:	(bad)  
   140013e4c:	(bad)  
   140013e4d:	(bad)  
   140013e4e:	(bad)  
   140013e4f:	(bad)  
   140013e50:	(bad)  
   140013e51:	(bad)  
   140013e52:	(bad)  
   140013e53:	(bad)  
   140013e54:	(bad)  
   140013e55:	(bad)  
   140013e56:	(bad)  
   140013e57:	(bad)  
   140013e58:	(bad)  
   140013e59:	(bad)  
   140013e5a:	(bad)  
   140013e5b:	(bad)  
   140013e5c:	(bad)  
   140013e5d:	(bad)  
   140013e5e:	(bad)  
   140013e5f:	(bad)  
   140013e60:	(bad)  
   140013e61:	(bad)  
   140013e62:	(bad)  
   140013e63:	(bad)  
   140013e64:	(bad)  
   140013e65:	(bad)  
   140013e66:	(bad)  
   140013e67:	(bad)  
   140013e68:	(bad)  
   140013e69:	(bad)  
   140013e6a:	(bad)  
   140013e6b:	(bad)  
   140013e6c:	(bad)  
   140013e6d:	(bad)  
   140013e6e:	(bad)  
   140013e6f:	(bad)  
   140013e70:	(bad)  
   140013e71:	(bad)  
   140013e72:	(bad)  
   140013e73:	(bad)  
   140013e74:	(bad)  
   140013e75:	(bad)  
   140013e76:	(bad)  
   140013e77:	(bad)  
   140013e78:	(bad)  
   140013e79:	(bad)  
   140013e7a:	(bad)  
   140013e7b:	(bad)  
   140013e7c:	(bad)  
   140013e7d:	(bad)  
   140013e7e:	(bad)  
   140013e7f:	(bad)  
   140013e80:	(bad)  
   140013e81:	(bad)  
   140013e82:	(bad)  
   140013e83:	(bad)  
   140013e84:	(bad)  
   140013e85:	(bad)  
   140013e86:	(bad)  
   140013e87:	(bad)  
   140013e88:	(bad)  
   140013e89:	(bad)  
   140013e8a:	(bad)  
   140013e8b:	(bad)  
   140013e8c:	cmp    al,0x1
   140013e8e:	add    BYTE PTR [rax],al
   140013e90:	(bad)  
   140013e91:	(bad)  
   140013e92:	(bad)  
   140013e93:	(bad)  
   140013e94:	(bad)  
   140013e95:	(bad)  
   140013e96:	(bad)  
   140013e97:	(bad)  
   140013e98:	(bad)  
   140013e99:	(bad)  
   140013e9a:	(bad)  
   140013e9b:	(bad)  
   140013e9c:	(bad)  
   140013e9d:	(bad)  
   140013e9e:	(bad)  
   140013e9f:	(bad)  
   140013ea0:	(bad)  
   140013ea1:	(bad)  
   140013ea2:	(bad)  
   140013ea3:	call   QWORD PTR [rax]
   140013ea5:	add    DWORD PTR [rax],eax
   140013ea7:	add    bh,bh
   140013ea9:	(bad)  
   140013eaa:	(bad)  
   140013eab:	(bad)  
   140013eac:	(bad)  
   140013ead:	(bad)  
   140013eae:	(bad)  
   140013eaf:	(bad)  
   140013eb0:	(bad)  
   140013eb1:	(bad)  
   140013eb2:	(bad)  
   140013eb3:	(bad)  
   140013eb4:	(bad)  
   140013eb5:	(bad)  
   140013eb6:	(bad)  
   140013eb7:	(bad)  
   140013eb8:	(bad)  
   140013eb9:	(bad)  
   140013eba:	(bad)  
   140013ebb:	(bad)  
   140013ebc:	(bad)  
   140013ebd:	(bad)  
   140013ebe:	(bad)  
   140013ebf:	(bad)  
   140013ec0:	(bad)  
   140013ec1:	(bad)  
   140013ec2:	(bad)  
   140013ec3:	(bad)  
   140013ec4:	(bad)  
   140013ec5:	(bad)  
   140013ec6:	(bad)  
   140013ec7:	(bad)  
   140013ec8:	(bad)  
   140013ec9:	(bad)  
   140013eca:	(bad)  
   140013ecb:	(bad)  
   140013ecc:	(bad)  
   140013ecd:	(bad)  
   140013ece:	(bad)  
   140013ecf:	(bad)  
   140013ed0:	(bad)  
   140013ed1:	(bad)  
   140013ed2:	(bad)  
   140013ed3:	(bad)  
   140013ed4:	(bad)  
   140013ed5:	(bad)  
   140013ed6:	(bad)  
   140013ed7:	(bad)  
   140013ed8:	(bad)  
   140013ed9:	(bad)  
   140013eda:	(bad)  
   140013edb:	(bad)  
   140013edc:	(bad)  
   140013edd:	(bad)  
   140013ede:	(bad)  
   140013edf:	(bad)  
   140013ee0:	(bad)  
   140013ee1:	(bad)  
   140013ee2:	(bad)  
   140013ee3:	(bad)  
   140013ee4:	(bad)  
   140013ee5:	(bad)  
   140013ee6:	(bad)  
   140013ee7:	(bad)  
   140013ee8:	(bad)  
   140013ee9:	(bad)  
   140013eea:	(bad)  
   140013eeb:	(bad)  
   140013eec:	(bad)  
   140013eed:	(bad)  
   140013eee:	(bad)  
   140013eef:	jmp    FWORD PTR [rax]
   140013ef1:	add    DWORD PTR [rax],eax
   140013ef3:	add    bh,bh
   140013ef5:	(bad)  
   140013ef6:	(bad)  
   140013ef7:	(bad)  
   140013ef8:	(bad)  
   140013ef9:	(bad)  
   140013efa:	(bad)  
   140013efb:	(bad)  
   140013efc:	(bad)  
   140013efd:	(bad)  
   140013efe:	(bad)  
   140013eff:	(bad)  
   140013f00:	(bad)  
   140013f01:	(bad)  
   140013f02:	(bad)  
   140013f03:	(bad)  
   140013f04:	(bad)  
   140013f05:	(bad)  
   140013f06:	(bad)  
   140013f07:	(bad)  
   140013f08:	(bad)  
   140013f09:	(bad)  
   140013f0a:	(bad)  
   140013f0b:	(bad)  
   140013f0c:	(bad)  
   140013f0d:	(bad)  
   140013f0e:	(bad)  
   140013f0f:	(bad)  
   140013f10:	(bad)  
   140013f11:	(bad)  
   140013f12:	(bad)  
   140013f13:	(bad)  
   140013f14:	(bad)  
   140013f15:	(bad)  
   140013f16:	(bad)  
   140013f17:	(bad)  
   140013f18:	(bad)  
   140013f19:	(bad)  
   140013f1a:	(bad)  
   140013f1b:	inc    DWORD PTR [rax]
   140013f1d:	add    BYTE PTR [rax],al
   140013f1f:	add    bh,bh
   140013f21:	(bad)  
   140013f22:	(bad)  
   140013f23:	(bad)  
   140013f24:	(bad)  
   140013f25:	(bad)  
   140013f26:	(bad)  
   140013f27:	(bad)  
   140013f28:	(bad)  
   140013f29:	(bad)  
   140013f2a:	(bad)  
   140013f2b:	(bad)  
   140013f2c:	(bad)  
   140013f2d:	(bad)  
   140013f2e:	(bad)  
   140013f2f:	(bad)  
   140013f30:	(bad)  
   140013f31:	(bad)  
   140013f32:	(bad)  
   140013f33:	(bad)  
   140013f34:	(bad)  
   140013f35:	(bad)  
   140013f36:	(bad)  
   140013f37:	(bad)  
   140013f38:	(bad)  
   140013f39:	(bad)  
   140013f3a:	(bad)  
   140013f3b:	(bad)  
   140013f3c:	(bad)  
   140013f3d:	(bad)  
   140013f3e:	(bad)  
   140013f3f:	(bad)  
   140013f40:	(bad)  
   140013f41:	(bad)  
   140013f42:	(bad)  
   140013f43:	(bad)  
   140013f44:	(bad)  
   140013f45:	(bad)  
   140013f46:	(bad)  
   140013f47:	(bad)  
   140013f48:	(bad)  
   140013f49:	(bad)  
   140013f4a:	(bad)  
   140013f4b:	(bad)  
   140013f4c:	(bad)  
   140013f4d:	(bad)  
   140013f4e:	(bad)  
   140013f4f:	(bad)  
   140013f50:	(bad)  
   140013f51:	(bad)  
   140013f52:	(bad)  
   140013f53:	(bad)  
   140013f54:	(bad)  
   140013f55:	(bad)  
   140013f56:	(bad)  
   140013f57:	(bad)  
   140013f58:	(bad)  
   140013f59:	(bad)  
   140013f5a:	(bad)  
   140013f5b:	jmp    FWORD PTR [rcx+rax*1+0x0]
   140013f5f:	add    bh,bh
   140013f61:	(bad)  
   140013f62:	(bad)  
   140013f63:	(bad)  
   140013f64:	cmp    BYTE PTR [rax],al
   140013f66:	add    BYTE PTR [rax],al
   140013f68:	(bad)  
   140013f69:	(bad)  
   140013f6a:	(bad)  
   140013f6b:	(bad)  
   140013f6c:	(bad)  
   140013f6d:	(bad)  
   140013f6e:	(bad)  
   140013f6f:	push   QWORD PTR [rax+rax*1-0x10000]
   140013f76:	(bad)  
   140013f77:	(bad)  
   140013f78:	(bad)  
   140013f79:	(bad)  
   140013f7a:	(bad)  
   140013f7b:	(bad)  
   140013f7c:	(bad)  
   140013f7d:	(bad)  
   140013f7e:	(bad)  
   140013f7f:	(bad)  
   140013f80:	(bad)  
   140013f81:	(bad)  
   140013f82:	(bad)  
   140013f83:	(bad)  
   140013f84:	(bad)  
   140013f85:	(bad)  
   140013f86:	(bad)  
   140013f87:	call   QWORD PTR [rax+rax*1+0x0]
   140013f8b:	add    BYTE PTR [rax+0x0],ch
   140013f8e:	add    BYTE PTR [rax],al
   140013f90:	(bad)  
   140013f91:	(bad)  
   140013f92:	(bad)  
   140013f93:	call   FWORD PTR [rax-0x1000000]
   140013f99:	(bad)  
   140013f9a:	(bad)  
   140013f9b:	call   FWORD PTR [rax+0x1]
   140013f9e:	add    BYTE PTR [rax],al
   140013fa0:	(bad)  
   140013fa1:	(bad)  
   140013fa2:	(bad)  
   140013fa3:	(bad)  
   140013fa4:	(bad)  
   140013fa5:	(bad)  
   140013fa6:	(bad)  
   140013fa7:	(bad)  
   140013fa8:	(bad)  
   140013fa9:	(bad)  
   140013faa:	(bad)  
   140013fab:	(bad)  
   140013fac:	(bad)  
   140013fad:	(bad)  
   140013fae:	(bad)  
   140013faf:	(bad)  
   140013fb0:	(bad)  
   140013fb1:	(bad)  
   140013fb2:	(bad)  
   140013fb3:	(bad)  
   140013fb4:	(bad)  
   140013fb5:	(bad)  
   140013fb6:	(bad)  
   140013fb7:	(bad)  
   140013fb8:	(bad)  
   140013fb9:	(bad)  
   140013fba:	(bad)  
   140013fbb:	jmp    rax
   140013fbd:	add    BYTE PTR [rax],al
   140013fbf:	add    bh,bh
   140013fc1:	(bad)  
   140013fc2:	(bad)  
   140013fc3:	(bad)  
   140013fc4:	(bad)  
   140013fc5:	(bad)  
   140013fc6:	(bad)  
   140013fc7:	(bad)  
   140013fc8:	clc    
   140013fc9:	add    BYTE PTR [rax],al
   140013fcb:	add    bh,bh
   140013fcd:	(bad)  
   140013fce:	(bad)  
   140013fcf:	(bad)  
   140013fd0:	(bad)  
   140013fd1:	(bad)  
   140013fd2:	(bad)  
   140013fd3:	(bad)  
   140013fd4:	(bad)  
   140013fd5:	(bad)  
   140013fd6:	(bad)  
   140013fd7:	(bad)  
   140013fd8:	(bad)  
   140013fd9:	(bad)  
   140013fda:	(bad)  
   140013fdb:	(bad)  
   140013fdc:	(bad)  
   140013fdd:	(bad)  
   140013fde:	(bad)  
   140013fdf:	(bad)  
   140013fe0:	(bad)  
   140013fe1:	(bad)  
   140013fe2:	(bad)  
   140013fe3:	dec    eax
   140013fe5:	add    BYTE PTR [rax],al
   140013fe7:	add    bh,bh
   140013fe9:	(bad)  
   140013fea:	(bad)  
   140013feb:	(bad)  
   140013fec:	(bad)  
   140013fed:	(bad)  
   140013fee:	(bad)  
   140013fef:	(bad)  
   140013ff0:	(bad)  
   140013ff1:	(bad)  
   140013ff2:	(bad)  
   140013ff3:	(bad)  
   140013ff4:	(bad)  
   140013ff5:	(bad)  
   140013ff6:	(bad)  
   140013ff7:	(bad)  
   140013ff8:	(bad)  
   140013ff9:	(bad)  
   140013ffa:	(bad)  
   140013ffb:	dec    DWORD PTR [rcx]
   140013ffd:	add    dl,cl
   140013fff:	clc    
   140014000:	push   rdx
   140014001:	rex.R push rbx
   140014003:	push   rax
   140014004:	outs   dx,BYTE PTR ds:[rsi]
   140014005:	data16 imul r12,QWORD PTR [rdx+0x57],0x5757
   14001400e:	add    BYTE PTR [rax],al
   140014010:	(bad)  
   140014011:	(bad)  
   140014012:	(bad)  
   140014013:	call   QWORD PTR [rcx]
   140014015:	cmp    BYTE PTR [rdi+rbp*4+0x50534452],ch
   14001401c:	jb     0x14001408d
   14001401e:	imul   bp,WORD PTR [rbp+riz*2+0x48],0x6e61
   140014025:	fs ins BYTE PTR es:[rdi],dx
   140014027:	gs jb  0x140014081
   14001402a:	push   rdi
   14001402b:	push   rdi
   14001402c:	add    BYTE PTR fs:[rax],al
   14001402f:	add    bh,bh
   140014031:	(bad)  
   140014032:	(bad)  
   140014033:	dec    DWORD PTR [rsi]
   140014035:	cmp    BYTE PTR [rcx+rsi*1+0x49],bl
   140014039:	push   rax
   14001403a:	jb     0x1400140ab
   14001403c:	imul   bp,WORD PTR [rbp+riz*2+0x4e],0x746f
   140014043:	imul   esp,DWORD PTR [rsi+0x79],0x645757
   14001404a:	add    BYTE PTR [rax],al
   14001404c:	(bad)  
   14001404d:	(bad)  
   14001404e:	(bad)  
   14001404f:	dec    DWORD PTR [rax]
   140014051:	add    BYTE PTR [rbp-0x65],ah
   140014054:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140014056:	rex.XB jb 0x1400140be
   140014059:	(bad)  
   14001405a:	je     0x1400140c1
   14001405c:	(bad)  
   14001405d:	(bad)  
   14001405e:	(bad)  
   14001405f:	(bad)  
   140014060:	(bad)  
   140014061:	(bad)  
   140014062:	(bad)  
   140014063:	inc    DWORD PTR [rsi]
   140014065:	add    BYTE PTR [rsi-0x64],ah
   140014068:	jo     0x1400140dd
   14001406a:	jp     0x1400140bf
   14001406c:	imul   esp,DWORD PTR [rdi+rdx*2+0x57],0xffffffff
   140014074:	(bad)  
   140014075:	(bad)  
   140014076:	(bad)  
   140014077:	dec    DWORD PTR [rsi]
   140014079:	add    BYTE PTR [rax+0x7a73703d],dl
   14001407f:	push   rax
   140014080:	jb     0x1400140f1
   140014082:	imul   bp,WORD PTR [rbp+riz*2+0x50],0x7461
   140014089:	push   0xffffffffffff5757
   14001408e:	(bad)  
   14001408f:	(bad)  
   140014090:	(bad)  
   140014091:	(bad)  
   140014092:	(bad)  
   140014093:	dec    DWORD PTR [rip+0x64a7e800]        # 0x1a4a92899
   140014099:	ja     0x1400140eb
   14001409b:	jb     0x14001410c
   14001409d:	imul   bp,WORD PTR [rbp+riz*2+0x54],0x7079
   1400140a4:	gs push rdi
   1400140a6:	push   rdi
   1400140a7:	push   rdi
   1400140a8:	add    BYTE PTR fs:[rax],al
   1400140ab:	add    bh,bh
   1400140ad:	(bad)  
   1400140ae:	(bad)  
   1400140af:	dec    DWORD PTR [rax]
   1400140b1:	add    BYTE PTR [rdi-0x3a],bl
   1400140b4:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   1400140b6:	rex.R
   1400140b7:	gs ins BYTE PTR es:[rdi],dx
   1400140b9:	gs je  0x140014121
   1400140bc:	add    BYTE PTR fs:[rax],al
   1400140bf:	add    bh,bh
   1400140c1:	(bad)  
   1400140c2:	(bad)  
   1400140c3:	dec    DWORD PTR [rcx]
   1400140c5:	add    ah,bh
   1400140c7:	push   rax
   1400140c8:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   1400140ca:	imul   r12,QWORD PTR [r15+0x72],0x57657461
   1400140d2:	push   rdi
   1400140d3:	push   rdi
   1400140d4:	(bad)  
   1400140d5:	(bad)  
   1400140d6:	(bad)  
   1400140d7:	(bad)  
   1400140d8:	(bad)  
   1400140d9:	(bad)  
   1400140da:	(bad)  
   1400140db:	dec    DWORD PTR [rcx]
   1400140dd:	add    dl,dh
   1400140df:	rex.R jo 0x140014155
   1400140e2:	jp     0x140014133
   1400140e4:	ins    BYTE PTR es:[rdi],dx
   1400140e5:	fs push rbx
   1400140e7:	imul   esp,DWORD PTR [rdi+rdx*2+0x57],0xffffff57
   1400140ef:	(bad)  
   1400140f0:	(bad)  
   1400140f1:	(bad)  
   1400140f2:	(bad)  
   1400140f3:	dec    DWORD PTR [rcx]
   1400140f5:	add    ch,dh
   1400140f7:	(bad)  
   1400140f8:	jo     0x14001416d
   1400140fa:	jp     0x14001414a
   1400140fc:	gs ja  0x140014152
   1400140ff:	imul   esp,DWORD PTR [rdi+rdx*2+0x57],0x6457
   140014107:	add    BYTE PTR [rax],bl
   140014109:	add    BYTE PTR [rax],al
   14001410b:	add    BYTE PTR [rcx],cl
   14001410d:	add    BYTE PTR [rbx+rbp*8+0x70556e4f],ch
   140014114:	addr32 jb 0x140014178
   140014117:	fs gs push rdi
   14001411a:	push   rdi
   14001411b:	push   rdi
   14001411c:	add    BYTE PTR fs:[rax],al
   14001411f:	add    bh,bh
   140014121:	(bad)  
   140014122:	(bad)  
   140014123:	inc    DWORD PTR [rsi]
   140014125:	add    BYTE PTR [rdi],bh
   140014127:	(bad)  
   140014128:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14001412a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001412c:	(bad)  
   14001412d:	fs push rdi
   14001412f:	push   rdi
   140014130:	(bad)  
   140014131:	(bad)  
   140014132:	(bad)  
   140014133:	(bad)  
   140014134:	(bad)  
   140014135:	(bad)  
   140014136:	(bad)  
   140014137:	dec    DWORD PTR [rip+0x6633a600]        # 0x1a634e73d
   14001413d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14001413f:	(bad)  
   140014140:	fs rex.RX jb 0x1400141b3
   140014144:	ins    DWORD PTR es:[rdi],dx
   140014145:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x645757
   14001414e:	add    BYTE PTR [rax],al
   140014150:	(bad)  
   140014151:	(bad)  
   140014152:	(bad)  
   140014153:	dec    DWORD PTR [rax]
   140014155:	add    BYTE PTR [rdx-0x74],ch
   140014158:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14001415a:	push   rbp
   14001415b:	outs   dx,BYTE PTR ds:[rsi]
   14001415c:	ins    BYTE PTR es:[rdi],dx
   14001415d:	outs   dx,DWORD PTR ds:[rsi]
   14001415e:	(bad)  
   14001415f:	fs (bad) 
   140014161:	(bad)  
   140014162:	(bad)  
   140014163:	(bad)  
   140014164:	(bad)  
   140014165:	(bad)  
   140014166:	(bad)  
   140014167:	dec    DWORD PTR [rip+0x66015a00]        # 0x1a6029b6d
   14001416d:	push   rbp
   14001416e:	outs   dx,BYTE PTR ds:[rsi]
   14001416f:	ins    BYTE PTR es:[rdi],dx
   140014170:	outs   dx,DWORD PTR ds:[rsi]
   140014171:	(bad)  
   140014172:	fs push rsp
   140014174:	outs   dx,DWORD PTR ds:[rsi]
   140014175:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x185757
   14001417e:	rex.WB push r8
   140014180:	jb     0x1400141f1
   140014182:	imul   bp,WORD PTR [rbp+riz*2+0x4e],0x746f
   140014189:	imul   esp,DWORD PTR [rsi+0x79],0x746e4920
   140014190:	gs jb  0x1400141f9
   140014193:	(bad)  
   140014194:	movsxd esp,DWORD PTR [rbp+0x57]
   140014197:	push   rdi
   140014198:	mov    WORD PTR [rcx],es
   14001419a:	add    BYTE PTR [rax],al
   14001419c:	cmp    al,0x0
   14001419e:	add    BYTE PTR [rax],al
   1400141a0:	sbb    DWORD PTR [rax],eax
   1400141a2:	sbb    DWORD PTR [rax+0x0],eax
   1400141a8:	sbb    BYTE PTR [rax],al
   1400141aa:	add    BYTE PTR fs:[rcx],cl
   1400141ad:	add    al,0x0
   1400141af:	add    BYTE PTR [rbx],al
   1400141b1:	add    BYTE PTR [rax],al
   1400141b3:	add    BYTE PTR [rdi],bl
   1400141b5:	add    dh,bh
   1400141b7:	jmp    FWORD PTR [rax+0x0]
   1400141ba:	add    BYTE PTR [rax],al
   1400141bc:	add    DWORD PTR [rax],eax
   1400141be:	add    BYTE PTR [rax],al
   1400141c0:	(bad)  
   1400141c1:	add    dh,bh
   1400141c3:	(bad)  
   1400141c4:	jl     0x1400141c6
   1400141c6:	add    BYTE PTR [rax],al
   1400141c8:	add    DWORD PTR [rax],eax
   1400141ca:	add    BYTE PTR [rax],al
   1400141cc:	adc    eax,DWORD PTR [rax]
   1400141ce:	adc    eax,DWORD PTR [rax+0x98]
   1400141d4:	add    DWORD PTR [rax],eax
   1400141d6:	add    BYTE PTR [rax],al
   1400141d8:	cmp    al,0x0
   1400141da:	add    DWORD PTR [rax],eax
   1400141dc:	sbb    DWORD PTR [rax],eax
   1400141de:	sbb    DWORD PTR [rax+0x0],eax
   1400141e4:	and    BYTE PTR [rax],al
   1400141e6:	add    BYTE PTR fs:[rcx],cl
   1400141e9:	add    al,0x1
   1400141eb:	add    BYTE PTR [rbx],al
   1400141ed:	add    BYTE PTR [rax],al
   1400141ef:	add    BYTE PTR [rdi],bl
   1400141f1:	add    dh,bh
   1400141f3:	jmp    FWORD PTR [rax+0x0]
   1400141f6:	add    BYTE PTR [rax],al
   1400141f8:	add    DWORD PTR [rax],eax
   1400141fa:	add    BYTE PTR [rax],al
   1400141fc:	(bad)  
   1400141fd:	add    dh,bh
   1400141ff:	(bad)  
   140014200:	jl     0x140014202
   140014202:	add    BYTE PTR [rax],al
   140014204:	add    DWORD PTR [rax],eax
   140014206:	add    BYTE PTR [rax],al
   140014208:	adc    eax,DWORD PTR [rax]
   14001420a:	adc    eax,DWORD PTR [rax+0x98]
   140014210:	add    DWORD PTR [rax],eax
   140014212:	add    BYTE PTR [rax],al
   140014214:	rex.W add BYTE PTR [rdx],al
   140014217:	add    BYTE PTR [rcx],bl
   140014219:	add    BYTE PTR [rcx],bl
   14001421b:	add    BYTE PTR [rax],0x0
   14001421e:	add    BYTE PTR [rax],al
   140014220:	sub    BYTE PTR [rax],al
   140014222:	je     0x140014224
   140014224:	or     DWORD PTR [rdx+rax*1],eax
   140014227:	add    BYTE PTR [rax+rax*1],al
   14001422a:	add    BYTE PTR [rax],al
   14001422c:	(bad)  
   14001422d:	add    dh,bh
   14001422f:	jmp    rax
   140014231:	add    BYTE PTR [rax],al
   140014233:	add    BYTE PTR [rcx],al
   140014235:	add    BYTE PTR [rax],al
   140014237:	add    BYTE PTR [rdi],bl
   140014239:	add    dh,bh
   14001423b:	(bad)  
   14001423c:	clc    
   14001423d:	add    BYTE PTR [rax],al
   14001423f:	add    BYTE PTR [rcx],al
   140014241:	add    BYTE PTR [rax],al
   140014243:	add    BYTE PTR [rdi],bl
   140014245:	add    dh,bh
   140014247:	(bad)  
   140014248:	jl     0x14001424a
   14001424a:	add    BYTE PTR [rax],al
   14001424c:	add    DWORD PTR [rax],eax
   14001424e:	add    BYTE PTR [rax],al
   140014250:	adc    eax,DWORD PTR [rax]
   140014252:	adc    eax,DWORD PTR [rax+0x98]
   140014258:	add    DWORD PTR [rax],eax
   14001425a:	add    BYTE PTR [rax],al
   14001425c:	cmp    al,0x0
   14001425e:	add    eax,DWORD PTR [rax]
   140014260:	sbb    DWORD PTR [rax],eax
   140014262:	sbb    DWORD PTR [rax+0x0],eax
   140014268:	xor    BYTE PTR [rax],al
   14001426a:	add    BYTE PTR fs:[rcx],cl
   14001426d:	add    al,0x3
   14001426f:	add    BYTE PTR [rbx],al
   140014271:	add    BYTE PTR [rax],al
   140014273:	add    BYTE PTR [rdi],bl
   140014275:	add    dh,bh
   140014277:	jmp    FWORD PTR [rax+0x0]
   14001427a:	add    BYTE PTR [rax],al
   14001427c:	add    DWORD PTR [rax],eax
   14001427e:	add    BYTE PTR [rax],al
   140014280:	(bad)  
   140014281:	add    dh,bh
   140014283:	(bad)  
   140014284:	jl     0x140014286
   140014286:	add    BYTE PTR [rax],al
   140014288:	add    DWORD PTR [rax],eax
   14001428a:	add    BYTE PTR [rax],al
   14001428c:	adc    eax,DWORD PTR [rax]
   14001428e:	adc    eax,DWORD PTR [rax+0x98]
   140014294:	add    DWORD PTR [rax],eax
   140014296:	add    BYTE PTR [rax],al
   140014298:	rex.W add BYTE PTR [rax+rax*1],al
   14001429c:	sbb    DWORD PTR [rax],eax
   14001429e:	sbb    DWORD PTR [rax+0x0],eax
   1400142a4:	cmp    BYTE PTR [rax],al
   1400142a6:	je     0x1400142a8
   1400142a8:	or     DWORD PTR [rsp+rax*1],eax
   1400142ab:	add    BYTE PTR [rax+rax*1],al
   1400142ae:	add    BYTE PTR [rax],al
   1400142b0:	(bad)  
   1400142b1:	add    dh,bh
   1400142b3:	jmp    FWORD PTR [rax+0x0]
   1400142b6:	add    BYTE PTR [rax],al
   1400142b8:	add    DWORD PTR [rax],eax
   1400142ba:	add    BYTE PTR [rax],al
   1400142bc:	(bad)  
   1400142bd:	add    dh,bh
   1400142bf:	(bad)  
   1400142c0:	jl     0x1400142c2
   1400142c2:	add    BYTE PTR [rax],al
   1400142c4:	add    DWORD PTR [rax],eax
   1400142c6:	add    BYTE PTR [rax],al
   1400142c8:	adc    eax,DWORD PTR [rax]
   1400142ca:	adc    eax,DWORD PTR [rax+0x98]
   1400142d0:	add    DWORD PTR [rax],eax
   1400142d2:	add    BYTE PTR [rax],al
   1400142d4:	add    eax,DWORD PTR [rax]
   1400142d6:	add    eax,DWORD PTR [rax+0x13c]
   1400142dc:	add    DWORD PTR [rax],eax
   1400142de:	add    BYTE PTR [rax],al
   1400142e0:	rex.W add BYTE PTR [rip+0x19001900],al        # 0x159015be7
   1400142e7:	add    BYTE PTR [rax],0x0
   1400142ea:	add    BYTE PTR [rax],al
   1400142ec:	add    BYTE PTR [rax+rax*1+0x9],sil
   1400142f1:	add    al,0x5
   1400142f3:	add    BYTE PTR [rax+rax*1],al
   1400142f6:	add    BYTE PTR [rax],al
   1400142f8:	(bad)  
   1400142f9:	add    dh,bh
   1400142fb:	jmp    FWORD PTR [rax+0x0]
   1400142fe:	add    BYTE PTR [rax],al
   140014300:	add    DWORD PTR [rax],eax
   140014302:	add    BYTE PTR [rax],al
   140014304:	(bad)  
   140014305:	add    dh,bh
   140014307:	(bad)  
   140014308:	jl     0x14001430a
   14001430a:	add    BYTE PTR [rax],al
   14001430c:	add    DWORD PTR [rax],eax
   14001430e:	add    BYTE PTR [rax],al
   140014310:	adc    eax,DWORD PTR [rax]
   140014312:	adc    eax,DWORD PTR [rax+0x98]
   140014318:	add    DWORD PTR [rax],eax
   14001431a:	add    BYTE PTR [rax],al
   14001431c:	add    eax,DWORD PTR [rax]
   14001431e:	add    eax,DWORD PTR [rax+0x16c]
   140014324:	add    DWORD PTR [rax],eax
   140014326:	add    BYTE PTR [rax],al
   140014328:	add    BYTE PTR [rax],al
   14001432a:	add    DWORD PTR [rax+0x1],esp
   14001432d:	add    BYTE PTR [rcx],al
   14001432f:	(bad)  
   140014330:	add    al,BYTE PTR [rax]
   140014332:	add    DWORD PTR [rax+0x3],esp
   140014335:	add    BYTE PTR [rcx],al
   140014337:	(bad)  
   140014338:	add    al,0x0
   14001433a:	add    DWORD PTR [rax+0x5],esp
   14001433d:	add    BYTE PTR [rcx],al
   14001433f:	(bad)  
   140014340:	push   rsp
   140014341:	add    BYTE PTR [rax],al
   140014343:	add    BYTE PTR [rax+rax*1+0xc80000],dh
   14001434a:	add    BYTE PTR [rax],al
   14001434c:	adc    BYTE PTR [rcx],al
   14001434e:	add    BYTE PTR [rax],al
   140014350:	sub    BYTE PTR [rcx],al
   140014352:	add    BYTE PTR [rax],al
   140014354:	pop    rax
   140014355:	add    DWORD PTR [rax],eax
   140014357:	add    BYTE PTR [rax],al
   140014359:	add    BYTE PTR [rax],al
   14001435b:	add    BYTE PTR [rax+rax*1],bh
   14001435e:	add    BYTE PTR [rax],al
   140014360:	js     0x140014362
   140014362:	add    BYTE PTR [rax],al
   140014364:	rol    BYTE PTR [rax],0x0
   140014367:	add    ah,bh
   140014369:	add    BYTE PTR [rax],al
   14001436b:	add    BYTE PTR [rcx+rax*1+0x0],al
   14001436f:	add    ch,cl
   140014371:	dec    ch
   140014373:	(bad)  
   140014374:	call   0x140014379
   140014379:	add    BYTE PTR [rcx],al
   14001437b:	add    BYTE PTR [rax],al
   14001437d:	add    BYTE PTR [rax],al
   14001437f:	add    BYTE PTR [rcx],dl
   140014381:	add    BYTE PTR [rax],al
   140014383:	add    BYTE PTR [rax],al
   140014385:	add    BYTE PTR [rax],al
   140014387:	add    BYTE PTR [rdx],al
   140014389:	add    BYTE PTR [rax],al
   14001438b:	add    BYTE PTR [rcx+rsi*1-0x61],al
   14001438f:	cmp    ch,BYTE PTR [rax]
   140014391:	jg     0x140014354
   140014393:	push   rbp
   140014394:	(bad)  
   140014395:	lods   eax,DWORD PTR ds:[rsi]
   140014396:	sbb    esp,DWORD PTR [rdi+0x601b8214]
   14001439c:	and    dh,BYTE PTR [rdx]
   14001439e:	and    esi,DWORD PTR fs:[rbp+0x13]
   1400143a2:	ins    BYTE PTR es:[rdi],dx
   1400143a3:	sbb    ecx,DWORD PTR [rcx+rsi*8-0x67]
   1400143a7:	out    dx,al
   1400143a8:	(bad)  
   1400143a9:	fstp   DWORD PTR [rdx]
   1400143ab:	imul   eax,DWORD PTR [rax],0x0
	...
   1400143c2:	add    BYTE PTR [rax],al
   1400143c4:	mov    BYTE PTR [rax],al
   1400143c6:	add    BYTE PTR [rax],al
   1400143c8:	xor    BYTE PTR [rax],al
   1400143ca:	add    BYTE PTR [rax],al
   1400143cc:	mov    eax,0x8000000
   1400143d1:	add    BYTE PTR [rax],al
   1400143d3:	add    al,al
   1400143d5:	add    BYTE PTR [rax],al
   1400143d7:	add    BYTE PTR [rsi],cl
   1400143d9:	add    BYTE PTR [rax],al
   1400143db:	add    al,dl
   1400143dd:	add    BYTE PTR [rax],al
   1400143df:	add    BYTE PTR [rax],cl
	...
   1400143e9:	add    BYTE PTR [rax],al
   1400143eb:	add    al,bl
   1400143ed:	add    BYTE PTR [rax],al
   1400143ef:	add    BYTE PTR [rax+rax*1],cl
   1400143f2:	add    BYTE PTR [rax],al
   1400143f4:	add    BYTE PTR [rax],al
   1400143f6:	add    BYTE PTR [rax],al
   1400143f8:	push   rdx
   1400143f9:	add    BYTE PTR [rbp+0x0],al
   1400143fc:	rex.RXB add BYTE PTR [r9+0x0],r9b
   140014400:	push   rbx
   140014401:	add    BYTE PTR [rax+rax*1+0x52],dl
   140014405:	add    BYTE PTR [rcx+0x0],bl
   140014408:	add    BYTE PTR [rax],al
   14001440a:	push   rsp
   14001440b:	add    BYTE PTR [rcx+0x0],bl
   14001440e:	push   rax
   14001440f:	add    BYTE PTR [rbp+0x0],al
   140014412:	rex.WR add BYTE PTR [rcx+0x0],r9b
   140014416:	rex.X add BYTE PTR [rax],al
   140014419:	add    BYTE PTR [rbp+0x0],cl
   14001441c:	push   rbp
   14001441d:	add    BYTE PTR [rcx+0x0],cl
	...
   140014428:	adc    BYTE PTR [rax],al
   14001442a:	add    BYTE PTR [rax],al
   14001442c:	sbb    BYTE PTR [rax],al
   14001442e:	add    BYTE PTR [rax],al
   140014430:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140014434:	rex.WB add BYTE PTR [r8],al
	...
   14001443f:	add    BYTE PTR [rsi],al
   140014441:	add    BYTE PTR [rax],al
   140014443:	add    BYTE PTR [rax],dl
   140014445:	add    BYTE PTR [rax],al
   140014447:	add    BYTE PTR [rbp+0x0],ah
   14001444a:	outs   dx,BYTE PTR ds:[rsi]
   14001444b:	add    BYTE PTR [rip+0x53005500],ch        # 0x193019951
   140014451:	add    BYTE PTR [rax],al
   140014453:	add    BYTE PTR [rax],al
   140014455:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140015000 <.reloc>:
   140015000:	add    BYTE PTR [rax+0xc40000],ah
   140015006:	add    BYTE PTR [rax],al
   140015008:	mov    eax,0xd0a4c0a4
   14001500d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001500e:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   140015015:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015016:	clc    
   140015017:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015018:	adc    BYTE PTR [rbp-0x59cf5ae8],ah
   14001501e:	cmp    BYTE PTR [rsi-0x59b759c0],ah
   140015024:	push   rax
   140015025:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015026:	pop    rax
   140015027:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015028:	add    BYTE PTR [rax-0x57ef57f8],ch
   14001502e:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140015034:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14001503a:	rex.W test al,0x50
   14001503d:	test   al,0x58
   14001503f:	test   al,0x60
   140015041:	test   al,0x68
   140015043:	test   al,0x70
   140015045:	test   al,0x78
   140015047:	test   al,0x80
   140015049:	test   al,0x88
   14001504b:	test   al,0x90
   14001504d:	test   al,0x98
   14001504f:	test   al,0xa0
   140015051:	test   al,0xa8
   140015053:	test   al,0xb0
   140015055:	test   al,0xb8
   140015057:	test   al,0xc0
   140015059:	test   al,0xc8
   14001505b:	test   al,0xd0
   14001505d:	test   al,0xd8
   14001505f:	test   al,0xe0
   140015061:	test   al,0xe8
   140015063:	test   al,0xf0
   140015065:	test   al,0xf8
   140015067:	test   al,0x0
   140015069:	test   eax,0xa910a908
   14001506e:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140015074:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14001507a:	test   rax,0xffffffffa958a950
   140015080:	(bad)  
   140015081:	test   eax,0xa970a968
   140015086:	js     0x140015031
   140015088:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14001508f:	test   eax,0xa9a8a9a0
   140015094:	mov    al,0xa9
   140015096:	mov    eax,0xc8a9c0a9
   14001509b:	test   eax,0xa9d8a9d0
   1400150a0:	loopne 0x14001504b
   1400150a2:	movabs al,ds:0x10ae00adf0abf0ab
   1400150ab:	scas   al,BYTE PTR es:[rdi]
   1400150ac:	and    BYTE PTR [rsi-0x51bf51d0],ch
   1400150b2:	push   rax
   1400150b3:	scas   al,BYTE PTR es:[rdi]
   1400150b4:	(bad)  
   1400150b5:	scas   al,BYTE PTR es:[rdi]
   1400150b6:	jo     0x140015066
   1400150b8:	sub    BYTE PTR [rsi-0x515f5170],0xb0
   1400150bf:	scas   al,BYTE PTR es:[rdi]
   1400150c0:	shr    BYTE PTR [rsi-0x50000000],0x0
   1400150c7:	add    BYTE PTR [rax+rax*1],cl
   1400150ca:	add    BYTE PTR [rax],al
   1400150cc:	call   0x140015180
   1400150d1:	rol    BYTE PTR [rax],0x0
   1400150d4:	adc    BYTE PTR [rax],al
   1400150d6:	add    BYTE PTR [rax],al
   1400150d8:	add    BYTE PTR [rax-0x5fef5ff8],ah
   1400150de:	clc    
   1400150df:	scas   al,BYTE PTR es:[rdi]
   1400150e0:	add    al,ah
   1400150e2:	add    BYTE PTR [rax],al
   1400150e4:	sub    BYTE PTR [rax],al
   1400150e6:	add    BYTE PTR [rax],al
   1400150e8:	add    BYTE PTR [rax-0x5fd75fe0],ah
   1400150ee:	xor    BYTE PTR [rax-0x5faf5fc8],ah
   1400150f4:	pop    rax
   1400150f5:	movabs al,ds:0xa0b0a0a8a0a0a060
   1400150fe:	mov    eax,0xe0a0c0a0
   140015103:	.byte 0xa0
   140015104:	.byte 0x8
   140015105:	.byte 0xa1
	...
