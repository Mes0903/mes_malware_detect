
fbfdedb850f535b635f17053f33bad5e5f72785a576ba5a8b1c6adff4488b430.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    rax,rsp
   140001013:	mov    QWORD PTR [rax+0x8],rbx
   140001017:	mov    QWORD PTR [rax+0x10],rbp
   14000101b:	mov    QWORD PTR [rax+0x18],rsi
   14000101f:	mov    QWORD PTR [rax+0x20],rdi
   140001023:	push   r12
   140001025:	push   r14
   140001027:	push   r15
   140001029:	sub    rsp,0x40
   14000102d:	mov    rbx,QWORD PTR [rsp+0x90]
   140001035:	mov    r15,r9
   140001038:	mov    sil,r8b
   14000103b:	mov    r14d,edx
   14000103e:	mov    r12,rcx
   140001041:	test   rbx,rbx
   140001044:	je     0x1400010b4
   140001046:	mov    rbp,QWORD PTR [rsp+0x80]
   14000104e:	mov    eax,edx
   140001050:	test   edx,edx
   140001052:	je     0x140001076
   140001054:	cmp    eax,0x1
   140001057:	jne    0x140001079
   140001059:	movzx  ecx,r8b
   14000105d:	mov    eax,0x100
   140001062:	inc    ecx
   140001064:	mov    QWORD PTR [rbx+0x10],r9
   140001068:	test   r8b,r8b
   14000106b:	mov    QWORD PTR [rbx+0x18],rbp
   14000106f:	cmovne eax,ecx
   140001072:	mov    DWORD PTR [rbx],eax
   140001074:	jmp    0x140001079
   140001076:	and    DWORD PTR [rbx],0x0
   140001079:	mov    rdi,QWORD PTR [rbx+0x28]
   14000107d:	test   rdi,rdi
   140001080:	je     0x1400010b4
   140001082:	mov    rcx,rdi
   140001085:	call   QWORD PTR [rip+0xb465]        # 0x14000c4f0
   14000108b:	mov    rax,QWORD PTR [rbx+0x30]
   14000108f:	mov    r9,r15
   140001092:	mov    QWORD PTR [rsp+0x30],rax
   140001097:	mov    r8b,sil
   14000109a:	mov    rax,QWORD PTR [rsp+0x88]
   1400010a2:	mov    edx,r14d
   1400010a5:	mov    QWORD PTR [rsp+0x28],rax
   1400010aa:	mov    rcx,r12
   1400010ad:	mov    QWORD PTR [rsp+0x20],rbp
   1400010b2:	call   rdi
   1400010b4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400010b9:	mov    rbp,QWORD PTR [rsp+0x68]
   1400010be:	mov    rsi,QWORD PTR [rsp+0x70]
   1400010c3:	mov    rdi,QWORD PTR [rsp+0x78]
   1400010c8:	add    rsp,0x40
   1400010cc:	pop    r15
   1400010ce:	pop    r14
   1400010d0:	pop    r12
   1400010d2:	ret    
   1400010d3:	int3   
   1400010d4:	int3   
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	rex push rbx
   1400010de:	sub    rsp,0x40
   1400010e2:	lea    rax,[rip+0xbe7f]        # 0x14000cf68
   1400010e9:	mov    r10d,edx
   1400010ec:	sub    r10d,eax
   1400010ef:	mov    r11,r8
   1400010f2:	mov    al,BYTE PTR [rip+0xceb5]        # 0x14000dfad
   1400010f8:	lea    r8,[rdx+0x1]
   1400010fc:	movzx  eax,BYTE PTR [rdx]
   1400010ff:	mov    rbx,rcx
   140001102:	mov    rdx,QWORD PTR [rsp+0x78]
   140001107:	shl    eax,0x18
   14000110a:	or     eax,r10d
   14000110d:	mov    QWORD PTR [rsp+0x28],rdx
   140001112:	mov    DWORD PTR [rsp+0x30],eax
   140001116:	movzx  eax,WORD PTR [r8]
   14000111a:	mov    DWORD PTR [rsp+0x34],eax
   14000111e:	mov    eax,DWORD PTR [r8+0x2]
   140001122:	mov    DWORD PTR [rsp+0x38],eax
   140001126:	mov    eax,DWORD PTR [r8+0x6]
   14000112a:	add    r8,0xa
   14000112e:	mov    DWORD PTR [rsp+0x3c],eax
   140001132:	mov    rax,QWORD PTR [rcx+0x8]
   140001136:	mov    QWORD PTR [rdx],rax
   140001139:	mov    rax,QWORD PTR [rcx+0x8]
   14000113d:	movzx  ecx,WORD PTR [rax]
   140001140:	mov    QWORD PTR [rdx+0x10],r8
   140001144:	mov    DWORD PTR [rdx+0x8],ecx
   140001147:	mov    DWORD PTR [rdx+0xc],0x2
   14000114e:	movzx  eax,WORD PTR [r8]
   140001152:	mov    r8,r11
   140001155:	mov    DWORD PTR [rdx+0x18],eax
   140001158:	mov    eax,DWORD PTR [rsp+0x70]
   14000115c:	mov    DWORD PTR [rdx+0x1c],0x1
   140001163:	lea    rdx,[rsp+0x30]
   140001168:	mov    rcx,QWORD PTR [rbx+0x20]
   14000116c:	mov    DWORD PTR [rsp+0x20],eax
   140001170:	call   QWORD PTR [rip+0xae8a]        # 0x14000c000
   140001176:	add    rsp,0x40
   14000117a:	pop    rbx
   14000117b:	ret    
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	lea    rax,[rip+0xa89]        # 0x140001c10
   140001187:	mov    QWORD PTR [rip+0xf532],rax        # 0x1400106c0
   14000118e:	lea    rax,[rip+0xb8b]        # 0x140001d20
   140001195:	mov    QWORD PTR [rip+0xf514],rax        # 0x1400106b0
   14000119c:	lea    rax,[rip+0xbcd]        # 0x140001d70
   1400011a3:	mov    QWORD PTR [rip+0xf50e],rax        # 0x1400106b8
   1400011aa:	ret    
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	sub    rsp,0x28
   1400011b4:	xor    edx,edx
   1400011b6:	lea    rcx,[rip+0xf643]        # 0x140010800
   1400011bd:	mov    r8d,0xa0
   1400011c3:	call   0x14000a622
   1400011c8:	lea    rcx,[rip+0x9591]        # 0x14000a760
   1400011cf:	add    rsp,0x28
   1400011d3:	jmp    0x140009f0c
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	rex push rbx
   1400011e2:	sub    rsp,0x20
   1400011e6:	mov    eax,DWORD PTR [rip+0xf56c]        # 0x140010758
   1400011ec:	lea    rbx,[rip+0xf56d]        # 0x140010760
   1400011f3:	test   al,0x1
   1400011f5:	jne    0x140001229
   1400011f7:	and    QWORD PTR [rip+0xf569],0x0        # 0x140010768
   1400011ff:	lea    rcx,[rip+0x966a]        # 0x14000a870
   140001206:	or     eax,0x1
   140001209:	mov    QWORD PTR [rip+0xf528],rbx        # 0x140010738
   140001210:	mov    DWORD PTR [rip+0xf542],eax        # 0x140010758
   140001216:	lea    rax,[rip+0xb9ab]        # 0x14000cbc8
   14000121d:	mov    QWORD PTR [rip+0xf53c],rax        # 0x140010760
   140001224:	call   0x140009f0c
   140001229:	test   rbx,rbx
   14000122c:	setne  BYTE PTR [rip+0xf545]        # 0x140010778
   140001233:	add    rsp,0x20
   140001237:	pop    rbx
   140001238:	ret    
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	int3   
   140001241:	int3   
   140001242:	int3   
   140001243:	int3   
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    eax,DWORD PTR [rip+0xf4ea]        # 0x140010740
   140001256:	ret    
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	lea    rax,[rip+0xd7c1]        # 0x14000ea28
   140001267:	ret    
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	lea    rax,[rip+0xd7d9]        # 0x14000ea50
   140001277:	ret    
   140001278:	int3   
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	lea    rax,[rip+0xd7d1]        # 0x14000ea58
   140001287:	ret    
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	lea    rax,[rip+0xf499]        # 0x140010730
   140001297:	ret    
   140001298:	int3   
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	mov    rax,rsp
   1400012a3:	mov    QWORD PTR [rax+0x8],rbx
   1400012a7:	mov    QWORD PTR [rax+0x10],rbp
   1400012ab:	mov    QWORD PTR [rax+0x18],rsi
   1400012af:	mov    QWORD PTR [rax+0x20],rdi
   1400012b3:	push   r12
   1400012b5:	push   r13
   1400012b7:	push   r14
   1400012b9:	sub    rsp,0x20
   1400012bd:	mov    bpl,r8b
   1400012c0:	lea    rsi,[rip+0xd769]        # 0x14000ea30
   1400012c7:	mov    r14,rcx
   1400012ca:	lea    r13,[rip+0xd787]        # 0x14000ea58
   1400012d1:	lea    r12,[rip+0xffffffffffffff78]        # 0x140001250
   1400012d8:	cmp    rsi,r13
   1400012db:	jae    0x140001380
   1400012e1:	cmp    QWORD PTR [rsi],0x0
   1400012e5:	je     0x140001373
   1400012eb:	mov    rax,QWORD PTR [r14]
   1400012ee:	cmp    QWORD PTR [rax+0x18],r12
   1400012f2:	jne    0x1400012fc
   1400012f4:	mov    eax,DWORD PTR [rip+0xf446]        # 0x140010740
   1400012fa:	jmp    0x1400012fe
   1400012fc:	xor    eax,eax
   1400012fe:	test   eax,eax
   140001300:	je     0x140001307
   140001302:	test   bpl,bpl
   140001305:	je     0x14000137c
   140001307:	mov    rax,QWORD PTR [rsi]
   14000130a:	mov    rcx,QWORD PTR [rax+0x18]
   14000130e:	mov    rax,QWORD PTR [rcx]
   140001311:	test   rax,rax
   140001314:	je     0x140001373
   140001316:	lea    rcx,[rip+0xf413]        # 0x140010730
   14000131d:	call   QWORD PTR [rip+0xad75]        # 0x14000c098
   140001323:	mov    rax,QWORD PTR [rsi]
   140001326:	mov    rcx,QWORD PTR [rax+0x18]
   14000132a:	mov    rbx,QWORD PTR [rcx]
   14000132d:	test   rbx,rbx
   140001330:	jne    0x140001341
   140001332:	lea    rcx,[rip+0xf3f7]        # 0x140010730
   140001339:	call   QWORD PTR [rip+0xad41]        # 0x14000c080
   14000133f:	jmp    0x140001373
   140001341:	and    QWORD PTR [rcx],0x0
   140001345:	lea    rcx,[rip+0xf3e4]        # 0x140010730
   14000134c:	call   QWORD PTR [rip+0xad2e]        # 0x14000c080
   140001352:	mov    rcx,rbx
   140001355:	call   QWORD PTR [rip+0xad85]        # 0x14000c0e0
   14000135b:	mov    rdi,rax
   14000135e:	mov    rcx,QWORD PTR [rax]
   140001361:	mov    rbx,QWORD PTR [rcx+0x10]
   140001365:	mov    rcx,rbx
   140001368:	call   QWORD PTR [rip+0xb182]        # 0x14000c4f0
   14000136e:	mov    rcx,rdi
   140001371:	call   rbx
   140001373:	add    rsi,0x8
   140001377:	jmp    0x1400012d8
   14000137c:	xor    al,al
   14000137e:	jmp    0x140001398
   140001380:	mov    rax,QWORD PTR [r14]
   140001383:	cmp    QWORD PTR [rax+0x18],r12
   140001387:	jne    0x140001391
   140001389:	mov    eax,DWORD PTR [rip+0xf3b1]        # 0x140010740
   14000138f:	jmp    0x140001393
   140001391:	xor    eax,eax
   140001393:	test   eax,eax
   140001395:	sete   al
   140001398:	mov    rbx,QWORD PTR [rsp+0x40]
   14000139d:	mov    rbp,QWORD PTR [rsp+0x48]
   1400013a2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400013a7:	mov    rdi,QWORD PTR [rsp+0x58]
   1400013ac:	add    rsp,0x20
   1400013b0:	pop    r14
   1400013b2:	pop    r13
   1400013b4:	pop    r12
   1400013b6:	ret    
   1400013b7:	int3   
   1400013b8:	int3   
   1400013b9:	int3   
   1400013ba:	int3   
   1400013bb:	int3   
   1400013bc:	int3   
   1400013bd:	int3   
   1400013be:	int3   
   1400013bf:	int3   
   1400013c0:	mov    rax,rsp
   1400013c3:	mov    QWORD PTR [rax+0x8],rbx
   1400013c7:	mov    QWORD PTR [rax+0x10],rbp
   1400013cb:	mov    QWORD PTR [rax+0x18],r8
   1400013cf:	push   rsi
   1400013d0:	push   rdi
   1400013d1:	push   r14
   1400013d3:	sub    rsp,0x20
   1400013d7:	and    QWORD PTR [rax+0x18],0x0
   1400013dc:	lea    rbp,[rip+0xf34d]        # 0x140010730
   1400013e3:	mov    r14,QWORD PTR [rsp+0x60]
   1400013e8:	mov    rdi,r9
   1400013eb:	mov    rsi,rdx
   1400013ee:	and    QWORD PTR [r14],0x0
   1400013f2:	mov    rax,QWORD PTR [r9+0x18]
   1400013f6:	mov    rcx,QWORD PTR [rax]
   1400013f9:	test   rcx,rcx
   1400013fc:	je     0x14000145a
   1400013fe:	mov    rcx,rbp
   140001401:	call   QWORD PTR [rip+0xace9]        # 0x14000c0f0
   140001407:	mov    rax,QWORD PTR [rdi+0x18]
   14000140b:	mov    rcx,QWORD PTR [rax]
   14000140e:	test   rcx,rcx
   140001411:	je     0x140001451
   140001413:	call   QWORD PTR [rip+0xacc7]        # 0x14000c0e0
   140001419:	mov    QWORD PTR [rsp+0x50],rax
   14000141e:	mov    rdi,rax
   140001421:	mov    rdx,QWORD PTR [rax]
   140001424:	mov    rbx,QWORD PTR [rdx]
   140001427:	mov    rcx,rbx
   14000142a:	call   QWORD PTR [rip+0xb0c0]        # 0x14000c4f0
   140001430:	mov    r8,r14
   140001433:	lea    rdx,[rip+0xb8be]        # 0x14000ccf8
   14000143a:	mov    rcx,rdi
   14000143d:	call   rbx
   14000143f:	mov    rcx,rbp
   140001442:	mov    ebx,eax
   140001444:	call   QWORD PTR [rip+0xac66]        # 0x14000c0b0
   14000144a:	mov    eax,ebx
   14000144c:	jmp    0x140001522
   140001451:	mov    rcx,rbp
   140001454:	call   QWORD PTR [rip+0xac56]        # 0x14000c0b0
   14000145a:	mov    rbx,QWORD PTR [rdi]
   14000145d:	mov    rcx,rbx
   140001460:	call   QWORD PTR [rip+0xb08a]        # 0x14000c4f0
   140001466:	lea    r9,[rsp+0x50]
   14000146b:	mov    rdx,rdi
   14000146e:	lea    r8,[rip+0xb883]        # 0x14000ccf8
   140001475:	mov    rcx,rsi
   140001478:	call   rbx
   14000147a:	test   eax,eax
   14000147c:	js     0x140001522
   140001482:	test   BYTE PTR [rsi],0x4
   140001485:	jne    0x140001518
   14000148b:	mov    rcx,rbp
   14000148e:	xor    esi,esi
   140001490:	call   QWORD PTR [rip+0xac02]        # 0x14000c098
   140001496:	mov    rax,QWORD PTR [rdi+0x18]
   14000149a:	mov    rcx,QWORD PTR [rax]
   14000149d:	test   rcx,rcx
   1400014a0:	jne    0x1400014b6
   1400014a2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400014a7:	call   QWORD PTR [rip+0xab93]        # 0x14000c040
   1400014ad:	mov    rcx,QWORD PTR [rdi+0x18]
   1400014b1:	mov    QWORD PTR [rcx],rax
   1400014b4:	jmp    0x1400014d4
   1400014b6:	call   QWORD PTR [rip+0xac24]        # 0x14000c0e0
   1400014bc:	mov    rsi,rax
   1400014bf:	mov    rcx,QWORD PTR [rax]
   1400014c2:	mov    rbx,QWORD PTR [rcx+0x8]
   1400014c6:	mov    rcx,rbx
   1400014c9:	call   QWORD PTR [rip+0xb021]        # 0x14000c4f0
   1400014cf:	mov    rcx,rsi
   1400014d2:	call   rbx
   1400014d4:	mov    rcx,rbp
   1400014d7:	call   QWORD PTR [rip+0xaba3]        # 0x14000c080
   1400014dd:	test   rsi,rsi
   1400014e0:	je     0x140001518
   1400014e2:	mov    rdi,QWORD PTR [rsp+0x50]
   1400014e7:	mov    rax,QWORD PTR [rdi]
   1400014ea:	mov    rbx,QWORD PTR [rax+0x10]
   1400014ee:	mov    rcx,rbx
   1400014f1:	call   QWORD PTR [rip+0xaff9]        # 0x14000c4f0
   1400014f7:	mov    rcx,rdi
   1400014fa:	call   rbx
   1400014fc:	mov    rdi,QWORD PTR [rsp+0x50]
   140001501:	mov    rax,QWORD PTR [rdi]
   140001504:	mov    rbx,QWORD PTR [rax+0x10]
   140001508:	mov    rcx,rbx
   14000150b:	call   QWORD PTR [rip+0xafdf]        # 0x14000c4f0
   140001511:	mov    rcx,rdi
   140001514:	call   rbx
   140001516:	jmp    0x14000151d
   140001518:	mov    rsi,QWORD PTR [rsp+0x50]
   14000151d:	mov    QWORD PTR [r14],rsi
   140001520:	xor    eax,eax
   140001522:	mov    rbx,QWORD PTR [rsp+0x40]
   140001527:	mov    rbp,QWORD PTR [rsp+0x48]
   14000152c:	add    rsp,0x20
   140001530:	pop    r14
   140001532:	pop    rdi
   140001533:	pop    rsi
   140001534:	ret    
   140001535:	int3   
   140001536:	int3   
   140001537:	int3   
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	mov    QWORD PTR [rsp+0x8],rbx
   140001541:	mov    QWORD PTR [rsp+0x10],rbp
   140001546:	mov    QWORD PTR [rsp+0x18],rsi
   14000154b:	push   rdi
   14000154c:	push   r12
   14000154e:	push   r13
   140001550:	push   r14
   140001552:	push   r15
   140001554:	sub    rsp,0x20
   140001558:	xor    r13d,r13d
   14000155b:	lea    r14,[rip+0xd4ce]        # 0x14000ea30
   140001562:	lea    rax,[rip+0xd4e7]        # 0x14000ea50
   140001569:	mov    r12,rcx
   14000156c:	lea    rsi,[rip+0xd4e4]        # 0x14000ea57
   140001573:	mov    edi,r13d
   140001576:	sub    rsi,r14
   140001579:	mov    ebp,r13d
   14000157c:	shr    rsi,0x3
   140001580:	mov    edx,r13d
   140001583:	cmp    r14,rax
   140001586:	mov    rax,r14
   140001589:	cmova  rsi,r13
   14000158d:	test   rsi,rsi
   140001590:	je     0x14000167a
   140001596:	cmp    QWORD PTR [rax],r13
   140001599:	je     0x14000159d
   14000159b:	inc    ebp
   14000159d:	add    rax,0x8
   1400015a1:	inc    rdx
   1400015a4:	cmp    rdx,rsi
   1400015a7:	jb     0x140001596
   1400015a9:	test   ebp,ebp
   1400015ab:	je     0x14000167a
   1400015b1:	mov    ecx,ebp
   1400015b3:	mov    eax,0x4
   1400015b8:	mul    rcx
   1400015bb:	mov    rcx,0xffffffffffffffff
   1400015c2:	lea    rdx,[rip+0xb73f]        # 0x14000cd08
   1400015c9:	cmovo  rax,rcx
   1400015cd:	mov    rcx,rax
   1400015d0:	call   0x140009e44
   1400015d5:	mov    r15,rax
   1400015d8:	test   rax,rax
   1400015db:	jne    0x1400015e7
   1400015dd:	mov    edi,0x8007000e
   1400015e2:	jmp    0x14000166a
   1400015e7:	mov    r9d,r13d
   1400015ea:	mov    r8,r13
   1400015ed:	mov    rdx,r14
   1400015f0:	test   rsi,rsi
   1400015f3:	je     0x14000161a
   1400015f5:	mov    rax,QWORD PTR [rdx]
   1400015f8:	test   rax,rax
   1400015fb:	je     0x14000160e
   1400015fd:	mov    rax,QWORD PTR [rax+0x18]
   140001601:	mov    ecx,r9d
   140001604:	inc    r9d
   140001607:	mov    eax,DWORD PTR [rax+0x8]
   14000160a:	mov    DWORD PTR [r15+rcx*4],eax
   14000160e:	add    rdx,0x8
   140001612:	inc    r8
   140001615:	cmp    r8,rsi
   140001618:	jb     0x1400015f5
   14000161a:	mov    rax,QWORD PTR [r12]
   14000161e:	mov    rbx,QWORD PTR [rax+0x58]
   140001622:	mov    rcx,rbx
   140001625:	call   QWORD PTR [rip+0xaec5]        # 0x14000c4f0
   14000162b:	mov    r9d,ebp
   14000162e:	mov    r8,r15
   140001631:	xor    edx,edx
   140001633:	mov    rcx,r12
   140001636:	call   rbx
   140001638:	mov    edi,eax
   14000163a:	mov    r9d,r13d
   14000163d:	mov    r8,r13
   140001640:	test   rsi,rsi
   140001643:	je     0x14000166a
   140001645:	mov    rdx,QWORD PTR [r14]
   140001648:	test   rdx,rdx
   14000164b:	je     0x14000165e
   14000164d:	mov    rdx,QWORD PTR [rdx+0x18]
   140001651:	mov    ecx,r9d
   140001654:	inc    r9d
   140001657:	mov    eax,DWORD PTR [r15+rcx*4]
   14000165b:	mov    DWORD PTR [rdx+0x8],eax
   14000165e:	add    r14,0x8
   140001662:	inc    r8
   140001665:	cmp    r8,rsi
   140001668:	jb     0x140001645
   14000166a:	mov    rcx,r15
   14000166d:	call   0x140009a28
   140001672:	test   edi,edi
   140001674:	js     0x140001706
   14000167a:	lea    rbx,[rip+0xd3d7]        # 0x14000ea58
   140001681:	lea    rcx,[rip+0xd3d0]        # 0x14000ea58
   140001688:	mov    rax,rbx
   14000168b:	cmp    rbx,rcx
   14000168e:	jae    0x140001706
   140001690:	cmp    QWORD PTR [rax],r13
   140001693:	jne    0x14000169e
   140001695:	add    rax,0x8
   140001699:	cmp    rax,rcx
   14000169c:	jmp    0x14000168e
   14000169e:	mov    rax,QWORD PTR [rax]
   1400016a1:	lea    rdx,[rip+0x5778]        # 0x140006e20
   1400016a8:	mov    rcx,QWORD PTR [rax+0x18]
   1400016ac:	mov    rax,QWORD PTR [r12]
   1400016b0:	cmp    QWORD PTR [rax+0x48],rdx
   1400016b4:	jne    0x1400016f7
   1400016b6:	mov    rcx,QWORD PTR [rcx+0x8]
   1400016ba:	call   QWORD PTR [rip+0xac98]        # 0x14000c358
   1400016c0:	lea    rcx,[rip+0xd398]        # 0x14000ea5f
   1400016c7:	mov    edi,r13d
   1400016ca:	sub    rcx,rbx
   1400016cd:	mov    rdx,r13
   1400016d0:	shr    rcx,0x3
   1400016d4:	test   rcx,rcx
   1400016d7:	je     0x140001706
   1400016d9:	mov    rax,QWORD PTR [rbx]
   1400016dc:	test   rax,rax
   1400016df:	je     0x1400016e9
   1400016e1:	mov    rax,QWORD PTR [rax+0x18]
   1400016e5:	mov    QWORD PTR [rax+0x8],r13
   1400016e9:	add    rbx,0x8
   1400016ed:	inc    rdx
   1400016f0:	cmp    rdx,rcx
   1400016f3:	jb     0x1400016d9
   1400016f5:	jmp    0x140001706
   1400016f7:	mov    edi,0x80004001
   1400016fc:	xor    edx,edx
   1400016fe:	mov    ecx,edi
   140001700:	call   QWORD PTR [rip+0xac3a]        # 0x14000c340
   140001706:	xor    r8d,r8d
   140001709:	mov    rcx,r12
   14000170c:	call   0x1400012a0
   140001711:	mov    rbx,QWORD PTR [rsp+0x50]
   140001716:	mov    eax,edi
   140001718:	mov    rbp,QWORD PTR [rsp+0x58]
   14000171d:	mov    rsi,QWORD PTR [rsp+0x60]
   140001722:	add    rsp,0x20
   140001726:	pop    r15
   140001728:	pop    r14
   14000172a:	pop    r13
   14000172c:	pop    r12
   14000172e:	pop    rdi
   14000172f:	ret    
   140001730:	int3   
   140001731:	int3   
   140001732:	int3   
   140001733:	int3   
   140001734:	int3   
   140001735:	int3   
   140001736:	int3   
   140001737:	int3   
   140001738:	mov    QWORD PTR [rsp+0x8],rbx
   14000173d:	mov    QWORD PTR [rsp+0x10],rsi
   140001742:	push   rdi
   140001743:	sub    rsp,0x20
   140001747:	xor    esi,esi
   140001749:	mov    r10,r8
   14000174c:	mov    r11,r9
   14000174f:	mov    ebx,esi
   140001751:	mov    eax,0x80070057
   140001756:	mov    r8d,0x7fffffff
   14000175c:	test   rcx,rcx
   14000175f:	jne    0x140001766
   140001761:	test   rdx,rdx
   140001764:	jne    0x14000176b
   140001766:	cmp    rdx,r8
   140001769:	jbe    0x14000176d
   14000176b:	mov    ebx,eax
   14000176d:	test   ebx,ebx
   14000176f:	js     0x140001778
   140001771:	cmp    r9,r8
   140001774:	jb     0x140001792
   140001776:	mov    ebx,eax
   140001778:	test   rdx,rdx
   14000177b:	je     0x140001780
   14000177d:	mov    WORD PTR [rcx],si
   140001780:	mov    rsi,QWORD PTR [rsp+0x38]
   140001785:	mov    eax,ebx
   140001787:	mov    rbx,QWORD PTR [rsp+0x30]
   14000178c:	add    rsp,0x20
   140001790:	pop    rdi
   140001791:	ret    
   140001792:	test   r10,r10
   140001795:	jne    0x1400017a1
   140001797:	lea    r10,[rip+0xafd6]        # 0x14000c774
   14000179e:	mov    r11,rsi
   1400017a1:	mov    ebx,esi
   1400017a3:	test   rdx,rdx
   1400017a6:	jne    0x1400017bf
   1400017a8:	test   r11,r11
   1400017ab:	je     0x140001780
   1400017ad:	cmp    WORD PTR [r10],si
   1400017b1:	je     0x140001780
   1400017b3:	neg    rcx
   1400017b6:	sbb    ebx,ebx
   1400017b8:	and    ebx,0x23
   1400017bb:	add    ebx,eax
   1400017bd:	jmp    0x140001780
   1400017bf:	sub    r11,rdx
   1400017c2:	mov    rdi,rdx
   1400017c5:	sub    r10,rcx
   1400017c8:	mov    r8,rcx
   1400017cb:	mov    r9,rsi
   1400017ce:	lea    rax,[r11+rdi*1]
   1400017d2:	test   rax,rax
   1400017d5:	je     0x1400017f2
   1400017d7:	movzx  eax,WORD PTR [r10+r8*1]
   1400017dc:	test   ax,ax
   1400017df:	je     0x1400017f2
   1400017e1:	mov    WORD PTR [r8],ax
   1400017e5:	inc    r9
   1400017e8:	add    r8,0x2
   1400017ec:	sub    rdi,0x1
   1400017f0:	jne    0x1400017ce
   1400017f2:	test   rdi,rdi
   1400017f5:	jne    0x140001803
   1400017f7:	sub    r8,0x2
   1400017fb:	mov    ebx,0x8007007a
   140001800:	dec    r9
   140001803:	sub    rdx,r9
   140001806:	mov    WORD PTR [r8],si
   14000180a:	test   ebx,ebx
   14000180c:	js     0x140001780
   140001812:	cmp    rdx,0x1
   140001816:	jbe    0x140001780
   14000181c:	lea    r8,[rdx+rdx*1]
   140001820:	cmp    r8,0x2
   140001824:	jbe    0x140001780
   14000182a:	lea    rcx,[rcx+r9*2]
   14000182e:	add    r8,0xfffffffffffffffe
   140001832:	add    rcx,0x2
   140001836:	xor    edx,edx
   140001838:	call   0x14000a622
   14000183d:	jmp    0x140001780
   140001842:	int3   
   140001843:	int3   
   140001844:	int3   
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	mov    QWORD PTR [rsp+0x18],r8
   14000184d:	mov    QWORD PTR [rsp+0x20],r9
   140001852:	push   rbx
   140001853:	push   rbp
   140001854:	push   rsi
   140001855:	push   rdi
   140001856:	sub    rsp,0x28
   14000185a:	xor    ebp,ebp
   14000185c:	lea    rax,[rdx-0x1]
   140001860:	cmp    rax,0x7ffffffe
   140001866:	mov    rsi,rcx
   140001869:	mov    edi,ebp
   14000186b:	mov    ecx,0x80070057
   140001870:	cmova  edi,ecx
   140001873:	test   edi,edi
   140001875:	js     0x1400018ac
   140001877:	lea    rbx,[rdx-0x1]
   14000187b:	mov    rcx,rsi
   14000187e:	mov    rdx,rbx
   140001881:	lea    r9,[rsp+0x68]
   140001886:	mov    edi,ebp
   140001888:	call   QWORD PTR [rip+0xab62]        # 0x14000c3f0
   14000188e:	test   eax,eax
   140001890:	js     0x1400018a1
   140001892:	cdqe   
   140001894:	cmp    rax,rbx
   140001897:	ja     0x1400018a1
   140001899:	jne    0x1400018b4
   14000189b:	mov    WORD PTR [rsi+rbx*2],bp
   14000189f:	jmp    0x1400018b4
   1400018a1:	mov    WORD PTR [rsi+rbx*2],bp
   1400018a5:	mov    edi,0x8007007a
   1400018aa:	jmp    0x1400018b4
   1400018ac:	test   rdx,rdx
   1400018af:	je     0x1400018b4
   1400018b1:	mov    WORD PTR [rsi],bp
   1400018b4:	mov    eax,edi
   1400018b6:	add    rsp,0x28
   1400018ba:	pop    rdi
   1400018bb:	pop    rsi
   1400018bc:	pop    rbp
   1400018bd:	pop    rbx
   1400018be:	ret    
   1400018bf:	int3   
   1400018c0:	int3   
   1400018c1:	int3   
   1400018c2:	int3   
   1400018c3:	int3   
   1400018c4:	int3   
   1400018c5:	int3   
   1400018c6:	int3   
   1400018c7:	int3   
   1400018c8:	mov    QWORD PTR [rsp+0x18],r8
   1400018cd:	mov    QWORD PTR [rsp+0x20],r9
   1400018d2:	push   rbx
   1400018d3:	push   rsi
   1400018d4:	push   rdi
   1400018d5:	sub    rsp,0x20
   1400018d9:	mov    r10,rdx
   1400018dc:	lea    r9,[rsp+0x58]
   1400018e1:	sub    r10,rcx
   1400018e4:	mov    rsi,rdx
   1400018e7:	sar    r10,1
   1400018ea:	mov    rbx,rcx
   1400018ed:	lea    rax,[r10-0x1]
   1400018f1:	cmp    rax,0x7ffffffe
   1400018f7:	ja     0x14000191b
   1400018f9:	lea    rdi,[r10-0x1]
   1400018fd:	mov    rdx,rdi
   140001900:	call   QWORD PTR [rip+0xaaea]        # 0x14000c3f0
   140001906:	xor    ecx,ecx
   140001908:	test   eax,eax
   14000190a:	js     0x140001915
   14000190c:	cdqe   
   14000190e:	cmp    rax,rdi
   140001911:	ja     0x140001915
   140001913:	jne    0x140001925
   140001915:	mov    WORD PTR [rbx+rdi*2],cx
   140001919:	jmp    0x140001925
   14000191b:	xor    ecx,ecx
   14000191d:	test   r10,r10
   140001920:	je     0x140001925
   140001922:	mov    WORD PTR [rbx],cx
   140001925:	cmp    rsi,rbx
   140001928:	je     0x14000193b
   14000192a:	or     rax,0xffffffffffffffff
   14000192e:	inc    rax
   140001931:	cmp    WORD PTR [rbx+rax*2],cx
   140001935:	jne    0x14000192e
   140001937:	lea    rbx,[rbx+rax*2]
   14000193b:	mov    rax,rbx
   14000193e:	add    rsp,0x20
   140001942:	pop    rdi
   140001943:	pop    rsi
   140001944:	pop    rbx
   140001945:	ret    
   140001946:	int3   
   140001947:	int3   
   140001948:	int3   
   140001949:	int3   
   14000194a:	int3   
   14000194b:	int3   
   14000194c:	mov    QWORD PTR [rsp+0x20],rbx
   140001951:	push   rbp
   140001952:	push   rsi
   140001953:	push   rdi
   140001954:	push   r14
   140001956:	push   r15
   140001958:	sub    rsp,0x250
   14000195f:	mov    rax,QWORD PTR [rip+0xe6a2]        # 0x140010008
   140001966:	xor    rax,rsp
   140001969:	mov    QWORD PTR [rsp+0x240],rax
   140001971:	mov    r14,rcx
   140001974:	lea    rsi,[rip+0xadf5]        # 0x14000c770
   14000197b:	mov    ecx,DWORD PTR [r8]
   14000197e:	xor    r15d,r15d
   140001981:	mov    rbx,r8
   140001984:	mov    rdi,rdx
   140001987:	test   ecx,ecx
   140001989:	je     0x1400019c3
   14000198b:	sub    ecx,0x1
   14000198e:	je     0x1400019ba
   140001990:	sub    ecx,0x1
   140001993:	je     0x1400019b1
   140001995:	sub    ecx,0x1
   140001998:	je     0x1400019a8
   14000199a:	cmp    ecx,0x1
   14000199d:	jne    0x1400019ca
   14000199f:	lea    rsi,[rip+0xae12]        # 0x14000c7b8
   1400019a6:	jmp    0x1400019ca
   1400019a8:	lea    rsi,[rip+0xae01]        # 0x14000c7b0
   1400019af:	jmp    0x1400019ca
   1400019b1:	lea    rsi,[rip+0xade0]        # 0x14000c798
   1400019b8:	jmp    0x1400019ca
   1400019ba:	lea    rsi,[rip+0xadc7]        # 0x14000c788
   1400019c1:	jmp    0x1400019ca
   1400019c3:	lea    rsi,[rip+0xadae]        # 0x14000c778
   1400019ca:	mov    r8d,DWORD PTR [r8+0x4]
   1400019ce:	lea    rax,[rsp+0x40]
   1400019d3:	mov    QWORD PTR [rsp+0x30],r15
   1400019d8:	mov    r9d,0x400
   1400019de:	mov    DWORD PTR [rsp+0x28],0x100
   1400019e6:	xor    edx,edx
   1400019e8:	mov    ecx,0x1200
   1400019ed:	mov    QWORD PTR [rsp+0x20],rax
   1400019f2:	mov    WORD PTR [rsp+0x40],r15w
   1400019f8:	call   QWORD PTR [rip+0xa6aa]        # 0x14000c0a8
   1400019fe:	mov    r9,QWORD PTR [rbx+0x30]
   140001a02:	lea    rdi,[r14+rdi*2]
   140001a06:	mov    rax,QWORD PTR [rbx+0x80]
   140001a0d:	mov    rdx,rdi
   140001a10:	mov    rcx,r14
   140001a13:	test   r9,r9
   140001a16:	je     0x140001a3b
   140001a18:	mov    QWORD PTR [rsp+0x30],rax
   140001a1d:	lea    r8,[rip+0xada4]        # 0x14000c7c8
   140001a24:	mov    rax,QWORD PTR [rbx+0x78]
   140001a28:	mov    QWORD PTR [rsp+0x28],rax
   140001a2d:	mov    eax,DWORD PTR [rbx+0x38]
   140001a30:	mov    DWORD PTR [rsp+0x20],eax
   140001a34:	call   0x1400018c8
   140001a39:	jmp    0x140001a50
   140001a3b:	mov    r9,QWORD PTR [rbx+0x78]
   140001a3f:	lea    r8,[rip+0xadaa]        # 0x14000c7f0
   140001a46:	mov    QWORD PTR [rsp+0x20],rax
   140001a4b:	call   0x1400018c8
   140001a50:	mov    r9,QWORD PTR [rbx+0x88]
   140001a57:	mov    rbp,rax
   140001a5a:	test   r9,r9
   140001a5d:	je     0x140001a74
   140001a5f:	lea    r8,[rip+0xada2]        # 0x14000c808
   140001a66:	mov    rdx,rdi
   140001a69:	mov    rcx,rax
   140001a6c:	call   0x1400018c8
   140001a71:	mov    rbp,rax
   140001a74:	call   QWORD PTR [rip+0xa686]        # 0x14000c100
   140001a7a:	lea    rcx,[rsp+0x40]
   140001a7f:	mov    r9,rsi
   140001a82:	mov    QWORD PTR [rsp+0x38],rcx
   140001a87:	lea    r8,[rip+0xad9a]        # 0x14000c828
   140001a8e:	mov    ecx,DWORD PTR [rbx+0x4]
   140001a91:	mov    rdx,rdi
   140001a94:	mov    DWORD PTR [rsp+0x30],ecx
   140001a98:	mov    rcx,rbp
   140001a9b:	mov    DWORD PTR [rsp+0x28],eax
   140001a9f:	mov    eax,DWORD PTR [rbx+0x3c]
   140001aa2:	mov    DWORD PTR [rsp+0x20],eax
   140001aa6:	call   0x1400018c8
   140001aab:	cmp    QWORD PTR [rbx+0x10],r15
   140001aaf:	jne    0x140001ac1
   140001ab1:	cmp    QWORD PTR [rbx+0x40],r15
   140001ab5:	jne    0x140001ac1
   140001ab7:	cmp    QWORD PTR [rbx+0x28],r15
   140001abb:	je     0x140001b51
   140001ac1:	lea    r8,[rip+0xad98]        # 0x14000c860
   140001ac8:	mov    rdx,rdi
   140001acb:	mov    rcx,rax
   140001ace:	call   0x1400018c8
   140001ad3:	mov    r9,QWORD PTR [rbx+0x10]
   140001ad7:	test   r9,r9
   140001ada:	je     0x140001aee
   140001adc:	lea    r8,[rip+0xad8d]        # 0x14000c870
   140001ae3:	mov    rdx,rdi
   140001ae6:	mov    rcx,rax
   140001ae9:	call   0x1400018c8
   140001aee:	mov    r9,QWORD PTR [rbx+0x40]
   140001af2:	test   r9,r9
   140001af5:	je     0x140001b09
   140001af7:	lea    r8,[rip+0xad8a]        # 0x14000c888
   140001afe:	mov    rdx,rdi
   140001b01:	mov    rcx,rax
   140001b04:	call   0x1400018c8
   140001b09:	mov    rcx,QWORD PTR [rbx+0x20]
   140001b0d:	mov    rdx,rdi
   140001b10:	mov    r9,QWORD PTR [rbx+0x28]
   140001b14:	test   rcx,rcx
   140001b17:	je     0x140001b2f
   140001b19:	mov    QWORD PTR [rsp+0x20],rcx
   140001b1e:	lea    r8,[rip+0xad8b]        # 0x14000c8b0
   140001b25:	mov    rcx,rax
   140001b28:	call   0x1400018c8
   140001b2d:	jmp    0x140001b51
   140001b2f:	mov    rcx,rax
   140001b32:	test   r9,r9
   140001b35:	je     0x140001b45
   140001b37:	lea    r8,[rip+0xad8a]        # 0x14000c8c8
   140001b3e:	call   0x1400018c8
   140001b43:	jmp    0x140001b51
   140001b45:	lea    r8,[rip+0xad8c]        # 0x14000c8d8
   140001b4c:	call   0x1400018c8
   140001b51:	xor    eax,eax
   140001b53:	mov    rcx,QWORD PTR [rsp+0x240]
   140001b5b:	xor    rcx,rsp
   140001b5e:	call   0x140009e20
   140001b63:	mov    rbx,QWORD PTR [rsp+0x298]
   140001b6b:	add    rsp,0x250
   140001b72:	pop    r15
   140001b74:	pop    r14
   140001b76:	pop    rdi
   140001b77:	pop    rsi
   140001b78:	pop    rbp
   140001b79:	ret    
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	mov    DWORD PTR [rip+0xeba2],ecx        # 0x140010728
   140001b86:	mov    eax,0x1
   140001b8b:	lock xadd DWORD PTR [rip+0xeb55],eax        # 0x1400106e8
   140001b93:	inc    eax
   140001b95:	ret    
   140001b96:	int3   
   140001b97:	int3   
   140001b98:	int3   
   140001b99:	int3   
   140001b9a:	int3   
   140001b9b:	int3   
   140001b9c:	mov    DWORD PTR [rip+0xead6],ecx        # 0x140010678
   140001ba2:	mov    eax,0x1
   140001ba7:	lock xadd DWORD PTR [rip+0xeb49],eax        # 0x1400106f8
   140001baf:	inc    eax
   140001bb1:	ret    
   140001bb2:	int3   
   140001bb3:	int3   
   140001bb4:	int3   
   140001bb5:	int3   
   140001bb6:	int3   
   140001bb7:	int3   
   140001bb8:	mov    DWORD PTR [rip+0xeb52],ecx        # 0x140010710
   140001bbe:	mov    eax,0x1
   140001bc3:	lock xadd DWORD PTR [rip+0xeac5],eax        # 0x140010690
   140001bcb:	inc    eax
   140001bcd:	ret    
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	int3   
   140001bd1:	int3   
   140001bd2:	int3   
   140001bd3:	int3   
   140001bd4:	mov    DWORD PTR [rip+0xeaa2],ecx        # 0x14001067c
   140001bda:	mov    eax,0x1
   140001bdf:	lock xadd DWORD PTR [rip+0xeaad],eax        # 0x140010694
   140001be7:	inc    eax
   140001be9:	ret    
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	mov    DWORD PTR [rip+0xeae2],ecx        # 0x1400106d8
   140001bf6:	mov    eax,0x1
   140001bfb:	ret    
   140001bfc:	int3   
   140001bfd:	int3   
   140001bfe:	int3   
   140001bff:	int3   
   140001c00:	int3   
   140001c01:	int3   
   140001c02:	int3   
   140001c03:	int3   
   140001c04:	int3   
   140001c05:	int3   
   140001c06:	int3   
   140001c07:	int3   
   140001c08:	int3   
   140001c09:	int3   
   140001c0a:	int3   
   140001c0b:	int3   
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	mov    QWORD PTR [rsp+0x8],rbx
   140001c15:	push   rsi
   140001c16:	sub    rsp,0x150
   140001c1d:	mov    rax,QWORD PTR [rip+0xe3e4]        # 0x140010008
   140001c24:	xor    rax,rsp
   140001c27:	mov    QWORD PTR [rsp+0x140],rax
   140001c2f:	mov    al,BYTE PTR [rip+0xeadf]        # 0x140010714
   140001c35:	lea    rsi,[rip+0xeb84]        # 0x1400107c0
   140001c3c:	test   al,al
   140001c3e:	jne    0x140001cf4
   140001c44:	mov    ebx,0x40
   140001c49:	xor    edx,edx
   140001c4b:	mov    r8d,ebx
   140001c4e:	mov    rcx,rsi
   140001c51:	call   0x14000a622
   140001c56:	and    QWORD PTR [rsp+0x20],0x0
   140001c5c:	lea    r8,[rsp+0x20]
   140001c61:	lea    rdx,[rip+0xffffffffffffff88]        # 0x140001bf0
   140001c68:	lea    ecx,[rbx-0x3a]
   140001c6b:	call   QWORD PTR [rip+0xa3f7]        # 0x14000c068
   140001c71:	test   eax,eax
   140001c73:	je     0x140001ced
   140001c75:	mov    rcx,QWORD PTR [rsp+0x20]
   140001c7a:	lea    rdx,[rsp+0x30]
   140001c7f:	mov    r8d,0x104
   140001c85:	call   QWORD PTR [rip+0xa45d]        # 0x14000c0e8
   140001c8b:	test   eax,eax
   140001c8d:	je     0x140001ced
   140001c8f:	lea    rcx,[rsp+0x30]
   140001c94:	or     rax,0xffffffffffffffff
   140001c98:	inc    rax
   140001c9b:	cmp    BYTE PTR [rcx+rax*1],0x0
   140001c9f:	jne    0x140001c98
   140001ca1:	lea    rdx,[rsp+0x30]
   140001ca6:	add    rdx,rax
   140001ca9:	jmp    0x140001cb4
   140001cab:	cmp    BYTE PTR [rdx-0x1],0x5c
   140001caf:	je     0x140001cbe
   140001cb1:	dec    rdx
   140001cb4:	lea    rax,[rsp+0x30]
   140001cb9:	cmp    rdx,rax
   140001cbc:	ja     0x140001cab
   140001cbe:	mov    rcx,rsi
   140001cc1:	sub    rdx,rsi
   140001cc4:	lea    rax,[rbx+0x7fffffbe]
   140001ccb:	test   rax,rax
   140001cce:	je     0x140001ce2
   140001cd0:	mov    al,BYTE PTR [rdx+rcx*1]
   140001cd3:	test   al,al
   140001cd5:	je     0x140001ce2
   140001cd7:	mov    BYTE PTR [rcx],al
   140001cd9:	inc    rcx
   140001cdc:	sub    rbx,0x1
   140001ce0:	jne    0x140001cc4
   140001ce2:	test   rbx,rbx
   140001ce5:	jne    0x140001cea
   140001ce7:	dec    rcx
   140001cea:	mov    BYTE PTR [rcx],0x0
   140001ced:	mov    BYTE PTR [rip+0xea20],0x1        # 0x140010714
   140001cf4:	mov    rax,rsi
   140001cf7:	mov    rcx,QWORD PTR [rsp+0x140]
   140001cff:	xor    rcx,rsp
   140001d02:	call   0x140009e20
   140001d07:	mov    rbx,QWORD PTR [rsp+0x160]
   140001d0f:	add    rsp,0x150
   140001d16:	pop    rsi
   140001d17:	ret    
   140001d18:	int3   
   140001d19:	int3   
   140001d1a:	int3   
   140001d1b:	int3   
   140001d1c:	int3   
   140001d1d:	int3   
   140001d1e:	int3   
   140001d1f:	int3   
   140001d20:	rex push rbx
   140001d22:	sub    rsp,0x20
   140001d26:	lea    rcx,[rip+0xabb3]        # 0x14000c8e0
   140001d2d:	call   QWORD PTR [rip+0xa35d]        # 0x14000c090
   140001d33:	test   rax,rax
   140001d36:	je     0x140001d5b
   140001d38:	lea    rdx,[rip+0xabb9]        # 0x14000c8f8
   140001d3f:	mov    rcx,rax
   140001d42:	call   QWORD PTR [rip+0xa378]        # 0x14000c0c0
   140001d48:	mov    rbx,rax
   140001d4b:	test   rax,rax
   140001d4e:	je     0x140001d5b
   140001d50:	mov    rcx,rax
   140001d53:	call   QWORD PTR [rip+0xa797]        # 0x14000c4f0
   140001d59:	call   rbx
   140001d5b:	add    rsp,0x20
   140001d5f:	pop    rbx
   140001d60:	ret    
   140001d61:	int3   
   140001d62:	int3   
   140001d63:	int3   
   140001d64:	int3   
   140001d65:	int3   
   140001d66:	int3   
   140001d67:	int3   
   140001d68:	int3   
   140001d69:	int3   
   140001d6a:	int3   
   140001d6b:	int3   
   140001d6c:	int3   
   140001d6d:	int3   
   140001d6e:	int3   
   140001d6f:	int3   
   140001d70:	mov    QWORD PTR [rsp+0x8],rbx
   140001d75:	mov    QWORD PTR [rsp+0x10],rsi
   140001d7a:	push   rdi
   140001d7b:	sub    rsp,0x20
   140001d7f:	mov    rdi,QWORD PTR [rip+0xe96a]        # 0x1400106f0
   140001d86:	xor    ebx,ebx
   140001d88:	mov    esi,ecx
   140001d8a:	test   rdi,rdi
   140001d8d:	jne    0x140001dd6
   140001d8f:	mov    rax,QWORD PTR [rip+0xe94a]        # 0x1400106e0
   140001d96:	test   rax,rax
   140001d99:	jne    0x140001db7
   140001d9b:	xor    edx,edx
   140001d9d:	lea    rcx,[rip+0xab3c]        # 0x14000c8e0
   140001da4:	mov    r8d,0x800
   140001daa:	call   QWORD PTR [rip+0xa2a8]        # 0x14000c058
   140001db0:	mov    QWORD PTR [rip+0xe929],rax        # 0x1400106e0
   140001db7:	lea    rdx,[rip+0xab5a]        # 0x14000c918
   140001dbe:	mov    rcx,rax
   140001dc1:	call   QWORD PTR [rip+0xa2f9]        # 0x14000c0c0
   140001dc7:	mov    QWORD PTR [rip+0xe922],rax        # 0x1400106f0
   140001dce:	mov    rdi,rax
   140001dd1:	test   rax,rax
   140001dd4:	je     0x140001de5
   140001dd6:	mov    rcx,rdi
   140001dd9:	call   QWORD PTR [rip+0xa711]        # 0x14000c4f0
   140001ddf:	mov    ecx,esi
   140001de1:	call   rdi
   140001de3:	mov    ebx,eax
   140001de5:	mov    rsi,QWORD PTR [rsp+0x38]
   140001dea:	mov    eax,ebx
   140001dec:	mov    rbx,QWORD PTR [rsp+0x30]
   140001df1:	add    rsp,0x20
   140001df5:	pop    rdi
   140001df6:	ret    
   140001df7:	int3   
   140001df8:	int3   
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	mov    QWORD PTR [rsp+0x8],rbx
   140001e05:	mov    QWORD PTR [rsp+0x10],rbp
   140001e0a:	mov    QWORD PTR [rsp+0x18],rsi
   140001e0f:	push   rdi
   140001e10:	sub    rsp,0x20
   140001e14:	xor    al,al
   140001e16:	mov    BYTE PTR [r8],0x0
   140001e1a:	mov    rbp,r9
   140001e1d:	mov    rbx,r8
   140001e20:	mov    rsi,rdx
   140001e23:	mov    rdi,rcx
   140001e26:	test   rdx,rdx
   140001e29:	je     0x140001ed6
   140001e2f:	mov    rdx,QWORD PTR [rdx+0x10]
   140001e33:	call   0x140001e00
   140001e38:	mov    rdx,QWORD PTR [rsi+0x20]
   140001e3c:	xor    esi,esi
   140001e3e:	test   rdx,rdx
   140001e41:	je     0x140001ed6
   140001e47:	cmp    DWORD PTR [rdx],esi
   140001e49:	jne    0x140001e5a
   140001e4b:	lea    eax,[rsi+0x1]
   140001e4e:	lock xadd DWORD PTR [rip+0xe1ca],eax        # 0x140010020
   140001e56:	inc    eax
   140001e58:	mov    DWORD PTR [rdx],eax
   140001e5a:	cmp    DWORD PTR [rdi+0x48],esi
   140001e5d:	jne    0x140001e70
   140001e5f:	movups xmm0,XMMWORD PTR [rdx]
   140001e62:	movups XMMWORD PTR [rdi+0x48],xmm0
   140001e66:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140001e6b:	movsd  QWORD PTR [rdi+0x58],xmm1
   140001e70:	movups xmm0,XMMWORD PTR [rdx]
   140001e73:	or     rcx,0xffffffffffffffff
   140001e77:	mov    rax,rcx
   140001e7a:	movups XMMWORD PTR [rdi+0x60],xmm0
   140001e7e:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140001e83:	movsd  QWORD PTR [rdi+0x70],xmm1
   140001e88:	lea    rdi,[rbx+rbp*1]
   140001e8c:	inc    rax
   140001e8f:	cmp    BYTE PTR [rbx+rax*1],sil
   140001e93:	jne    0x140001e8c
   140001e95:	add    rbx,rax
   140001e98:	mov    rax,rdi
   140001e9b:	sub    rax,rbx
   140001e9e:	cmp    rax,0x2
   140001ea2:	jle    0x140001ed4
   140001ea4:	mov    BYTE PTR [rbx],0x5c
   140001ea7:	inc    rbx
   140001eaa:	mov    rdx,QWORD PTR [rdx+0x8]
   140001eae:	inc    rcx
   140001eb1:	cmp    BYTE PTR [rdx+rcx*1],sil
   140001eb5:	jne    0x140001eae
   140001eb7:	inc    rcx
   140001eba:	sub    rdi,rbx
   140001ebd:	cmp    rcx,rdi
   140001ec0:	cmovb  rdi,rcx
   140001ec4:	mov    rcx,rbx
   140001ec7:	mov    r8,rdi
   140001eca:	call   0x14000a616
   140001ecf:	mov    BYTE PTR [rdi+rbx*1-0x1],sil
   140001ed4:	mov    al,0x1
   140001ed6:	mov    rbx,QWORD PTR [rsp+0x30]
   140001edb:	mov    rbp,QWORD PTR [rsp+0x38]
   140001ee0:	mov    rsi,QWORD PTR [rsp+0x40]
   140001ee5:	add    rsp,0x20
   140001ee9:	pop    rdi
   140001eea:	ret    
   140001eeb:	int3   
   140001eec:	int3   
   140001eed:	int3   
   140001eee:	int3   
   140001eef:	int3   
   140001ef0:	int3   
   140001ef1:	int3   
   140001ef2:	int3   
   140001ef3:	int3   
   140001ef4:	mov    QWORD PTR [rsp+0x10],rbx
   140001ef9:	mov    QWORD PTR [rsp+0x18],rbp
   140001efe:	mov    QWORD PTR [rsp+0x20],rsi
   140001f03:	push   rdi
   140001f04:	push   r12
   140001f06:	push   r13
   140001f08:	push   r14
   140001f0a:	push   r15
   140001f0c:	sub    rsp,0x20
   140001f10:	movups xmm0,XMMWORD PTR [rdx]
   140001f13:	mov    rsi,rcx
   140001f16:	or     r15,0xffffffffffffffff
   140001f1a:	xor    edi,edi
   140001f1c:	mov    r14,rdx
   140001f1f:	movups XMMWORD PTR [rcx],xmm0
   140001f22:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140001f26:	lea    r12d,[r15+0x3]
   140001f2a:	movups XMMWORD PTR [rcx+0x10],xmm1
   140001f2e:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140001f32:	movups XMMWORD PTR [rcx+0x20],xmm0
   140001f36:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140001f3a:	movups XMMWORD PTR [rcx+0x30],xmm1
   140001f3e:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140001f42:	movups XMMWORD PTR [rcx+0x40],xmm0
   140001f46:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140001f4a:	movups XMMWORD PTR [rcx+0x50],xmm1
   140001f4e:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140001f52:	movups XMMWORD PTR [rcx+0x60],xmm0
   140001f56:	mov    ecx,0x80
   140001f5b:	movups xmm0,XMMWORD PTR [rdx+0x70]
   140001f5f:	movups XMMWORD PTR [rsi+rcx*1-0x10],xmm0
   140001f64:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140001f68:	movups XMMWORD PTR [rsi+rcx*1],xmm1
   140001f6c:	mov    rcx,QWORD PTR [rdx+0x10]
   140001f70:	test   rcx,rcx
   140001f73:	jne    0x140001f7c
   140001f75:	mov    QWORD PTR [rsp+0x50],r12
   140001f7a:	jmp    0x140001f95
   140001f7c:	mov    rax,r15
   140001f7f:	inc    rax
   140001f82:	cmp    WORD PTR [rcx+rax*2],di
   140001f86:	jne    0x140001f7f
   140001f88:	lea    rax,[rax*2+0x2]
   140001f90:	mov    QWORD PTR [rsp+0x50],rax
   140001f95:	mov    rax,QWORD PTR [rdx+0x20]
   140001f99:	test   rax,rax
   140001f9c:	jne    0x140001fa5
   140001f9e:	lea    ebx,[rax+0x1]
   140001fa1:	mov    ecx,ebx
   140001fa3:	jmp    0x140001fb9
   140001fa5:	mov    rcx,r15
   140001fa8:	inc    rcx
   140001fab:	cmp    BYTE PTR [rax+rcx*1],dil
   140001faf:	jne    0x140001fa8
   140001fb1:	mov    ebx,0x1
   140001fb6:	add    rcx,rbx
   140001fb9:	mov    rax,QWORD PTR [rdx+0x28]
   140001fbd:	test   rax,rax
   140001fc0:	jne    0x140001fc7
   140001fc2:	mov    r9,rbx
   140001fc5:	jmp    0x140001fd6
   140001fc7:	mov    r9,r15
   140001fca:	inc    r9
   140001fcd:	cmp    BYTE PTR [rax+r9*1],dil
   140001fd1:	jne    0x140001fca
   140001fd3:	add    r9,rbx
   140001fd6:	mov    rax,QWORD PTR [rdx+0x30]
   140001fda:	test   rax,rax
   140001fdd:	jne    0x140001fe4
   140001fdf:	mov    r11,rbx
   140001fe2:	jmp    0x140001ff3
   140001fe4:	mov    r11,r15
   140001fe7:	inc    r11
   140001fea:	cmp    BYTE PTR [rax+r11*1],dil
   140001fee:	jne    0x140001fe7
   140001ff0:	add    r11,rbx
   140001ff3:	mov    rax,QWORD PTR [rdx+0x40]
   140001ff7:	test   rax,rax
   140001ffa:	jne    0x140002001
   140001ffc:	mov    r10,rbx
   140001fff:	jmp    0x140002010
   140002001:	mov    r10,r15
   140002004:	inc    r10
   140002007:	cmp    BYTE PTR [rax+r10*1],dil
   14000200b:	jne    0x140002004
   14000200d:	add    r10,rbx
   140002010:	mov    rax,QWORD PTR [rdx+0x78]
   140002014:	test   rax,rax
   140002017:	jne    0x14000201e
   140002019:	mov    r8,rbx
   14000201c:	jmp    0x14000202d
   14000201e:	mov    r8,r15
   140002021:	inc    r8
   140002024:	cmp    BYTE PTR [rax+r8*1],dil
   140002028:	jne    0x140002021
   14000202a:	add    r8,rbx
   14000202d:	mov    rax,QWORD PTR [rdx+0x68]
   140002031:	test   rax,rax
   140002034:	jne    0x14000203b
   140002036:	mov    rdx,rbx
   140002039:	jmp    0x14000204a
   14000203b:	mov    rdx,r15
   14000203e:	inc    rdx
   140002041:	cmp    BYTE PTR [rax+rdx*1],dil
   140002045:	jne    0x14000203e
   140002047:	add    rdx,rbx
   14000204a:	mov    rbp,QWORD PTR [r14+0x70]
   14000204e:	test   rbp,rbp
   140002051:	jne    0x140002058
   140002053:	mov    r13,r12
   140002056:	jmp    0x14000206d
   140002058:	mov    rax,r15
   14000205b:	inc    rax
   14000205e:	cmp    WORD PTR [rbp+rax*2+0x0],di
   140002063:	jne    0x14000205b
   140002065:	lea    r13,[rax*2+0x2]
   14000206d:	mov    rbp,QWORD PTR [r14+0x50]
   140002071:	test   rbp,rbp
   140002074:	jne    0x14000207b
   140002076:	mov    rax,rbx
   140002079:	jmp    0x14000208a
   14000207b:	mov    rax,r15
   14000207e:	inc    rax
   140002081:	cmp    BYTE PTR [rax+rbp*1],dil
   140002085:	jne    0x14000207e
   140002087:	add    rax,rbx
   14000208a:	mov    r15,QWORD PTR [r14+0x58]
   14000208e:	test   r15,r15
   140002091:	je     0x1400020a9
   140002093:	or     rbp,0xffffffffffffffff
   140002097:	inc    rbp
   14000209a:	cmp    WORD PTR [r15+rbp*2],di
   14000209f:	jne    0x140002097
   1400020a1:	lea    r12,[rbp*2+0x2]
   1400020a9:	lea    rbp,[r12+rax*1]
   1400020ad:	mov    rax,QWORD PTR [rsi+0x90]
   1400020b4:	add    rbp,r13
   1400020b7:	add    rbp,rdx
   1400020ba:	add    rbp,r8
   1400020bd:	add    rbp,r10
   1400020c0:	add    rbp,r11
   1400020c3:	add    rbp,r9
   1400020c6:	add    rbp,rcx
   1400020c9:	add    rbp,QWORD PTR [rsp+0x50]
   1400020ce:	test   rax,rax
   1400020d1:	je     0x1400020e4
   1400020d3:	cmp    DWORD PTR [rax],ebx
   1400020d5:	jne    0x1400020e4
   1400020d7:	cmp    QWORD PTR [rsi+0x98],rbp
   1400020de:	jae    0x1400021aa
   1400020e4:	mov    rcx,rax
   1400020e7:	test   rax,rax
   1400020ea:	je     0x140002113
   1400020ec:	or     eax,0xffffffff
   1400020ef:	lock xadd DWORD PTR [rcx],eax
   1400020f3:	cmp    eax,0x1
   1400020f6:	jne    0x140002105
   1400020f8:	mov    rcx,QWORD PTR [rsi+0x90]
   1400020ff:	call   QWORD PTR [rip+0xa2db]        # 0x14000c3e0
   140002105:	mov    QWORD PTR [rsi+0x90],rdi
   14000210c:	mov    QWORD PTR [rsi+0x98],rdi
   140002113:	test   rbp,rbp
   140002116:	jne    0x140002151
   140002118:	mov    rcx,QWORD PTR [rsi+0x90]
   14000211f:	test   rcx,rcx
   140002122:	je     0x1400021aa
   140002128:	or     eax,0xffffffff
   14000212b:	lock xadd DWORD PTR [rcx],eax
   14000212f:	cmp    eax,0x1
   140002132:	jne    0x140002141
   140002134:	mov    rcx,QWORD PTR [rsi+0x90]
   14000213b:	call   QWORD PTR [rip+0xa29f]        # 0x14000c3e0
   140002141:	mov    QWORD PTR [rsi+0x90],rdi
   140002148:	mov    QWORD PTR [rsi+0x98],rdi
   14000214f:	jmp    0x1400021aa
   140002151:	lea    rcx,[rbp+0x4]
   140002155:	call   QWORD PTR [rip+0xa28d]        # 0x14000c3e8
   14000215b:	mov    r15,rax
   14000215e:	test   rax,rax
   140002161:	je     0x1400021aa
   140002163:	mov    DWORD PTR [rax],edi
   140002165:	mov    rax,QWORD PTR [rsi+0x90]
   14000216c:	test   rax,rax
   14000216f:	je     0x140002198
   140002171:	or     ecx,0xffffffff
   140002174:	lock xadd DWORD PTR [rax],ecx
   140002178:	cmp    ecx,0x1
   14000217b:	jne    0x14000218a
   14000217d:	mov    rcx,QWORD PTR [rsi+0x90]
   140002184:	call   QWORD PTR [rip+0xa256]        # 0x14000c3e0
   14000218a:	mov    QWORD PTR [rsi+0x90],rdi
   140002191:	mov    QWORD PTR [rsi+0x98],rdi
   140002198:	mov    QWORD PTR [rsi+0x90],r15
   14000219f:	mov    QWORD PTR [rsi+0x98],rbp
   1400021a6:	lock add DWORD PTR [r15],ebx
   1400021aa:	mov    rax,QWORD PTR [rsi+0x90]
   1400021b1:	mov    rcx,QWORD PTR [rsi+0x98]
   1400021b8:	test   rax,rax
   1400021bb:	je     0x1400021c1
   1400021bd:	lea    rdi,[rax+0x4]
   1400021c1:	mov    r8,QWORD PTR [r14+0x10]
   1400021c5:	lea    rdx,[rcx+rdi*1]
   1400021c9:	mov    rax,rdi
   1400021cc:	lea    r9,[rsi+0x10]
   1400021d0:	neg    rax
   1400021d3:	mov    rcx,rdi
   1400021d6:	sbb    rbx,rbx
   1400021d9:	and    rbx,rdx
   1400021dc:	mov    rdx,rbx
   1400021df:	call   0x14000711c
   1400021e4:	mov    r8,QWORD PTR [r14+0x20]
   1400021e8:	lea    r9,[rsi+0x20]
   1400021ec:	mov    rdx,rbx
   1400021ef:	mov    rcx,rax
   1400021f2:	call   0x1400071d4
   1400021f7:	mov    r8,QWORD PTR [r14+0x28]
   1400021fb:	lea    r9,[rsi+0x28]
   1400021ff:	mov    rdx,rbx
   140002202:	mov    rcx,rax
   140002205:	call   0x1400071d4
   14000220a:	mov    r8,QWORD PTR [r14+0x30]
   14000220e:	lea    r9,[rsi+0x30]
   140002212:	mov    rdx,rbx
   140002215:	mov    rcx,rax
   140002218:	call   0x1400071d4
   14000221d:	mov    r8,QWORD PTR [r14+0x40]
   140002221:	lea    r9,[rsi+0x40]
   140002225:	mov    rdx,rbx
   140002228:	mov    rcx,rax
   14000222b:	call   0x1400071d4
   140002230:	mov    r8,QWORD PTR [r14+0x78]
   140002234:	lea    r9,[rsi+0x78]
   140002238:	mov    rdx,rbx
   14000223b:	mov    rcx,rax
   14000223e:	call   0x1400071d4
   140002243:	mov    r8,QWORD PTR [r14+0x68]
   140002247:	lea    r9,[rsi+0x68]
   14000224b:	mov    rdx,rbx
   14000224e:	mov    rcx,rax
   140002251:	call   0x1400071d4
   140002256:	mov    r8,QWORD PTR [r14+0x70]
   14000225a:	lea    r9,[rsi+0x70]
   14000225e:	mov    rdx,rbx
   140002261:	mov    rcx,rax
   140002264:	call   0x14000711c
   140002269:	mov    r8,QWORD PTR [r14+0x50]
   14000226d:	lea    r9,[rsi+0x50]
   140002271:	mov    rdx,rbx
   140002274:	mov    rcx,rax
   140002277:	call   0x1400071d4
   14000227c:	mov    r8,QWORD PTR [r14+0x58]
   140002280:	lea    r9,[rsi+0x58]
   140002284:	mov    rdx,rbx
   140002287:	mov    rcx,rax
   14000228a:	mov    rbx,QWORD PTR [rsp+0x58]
   14000228f:	mov    rbp,QWORD PTR [rsp+0x60]
   140002294:	mov    rsi,QWORD PTR [rsp+0x68]
   140002299:	add    rsp,0x20
   14000229d:	pop    r15
   14000229f:	pop    r14
   1400022a1:	pop    r13
   1400022a3:	pop    r12
   1400022a5:	pop    rdi
   1400022a6:	jmp    0x14000711c
   1400022ab:	int3   
   1400022ac:	int3   
   1400022ad:	int3   
   1400022ae:	int3   
   1400022af:	int3   
   1400022b0:	int3   
   1400022b1:	int3   
   1400022b2:	int3   
   1400022b3:	int3   
   1400022b4:	rex push rbx
   1400022b6:	sub    rsp,0x20
   1400022ba:	and    QWORD PTR [rcx+0x90],0x0
   1400022c2:	mov    rbx,rcx
   1400022c5:	and    QWORD PTR [rcx+0x98],0x0
   1400022cd:	call   0x140001ef4
   1400022d2:	mov    rax,rbx
   1400022d5:	add    rsp,0x20
   1400022d9:	pop    rbx
   1400022da:	ret    
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	int3   
   1400022e1:	int3   
   1400022e2:	int3   
   1400022e3:	int3   
   1400022e4:	mov    QWORD PTR [rsp+0x18],rbx
   1400022e9:	mov    DWORD PTR [rsp+0x10],edx
   1400022ed:	mov    QWORD PTR [rsp+0x8],rcx
   1400022f2:	push   rbp
   1400022f3:	push   rsi
   1400022f4:	push   rdi
   1400022f5:	push   r12
   1400022f7:	push   r13
   1400022f9:	push   r14
   1400022fb:	push   r15
   1400022fd:	sub    rsp,0x40
   140002301:	mov    r14d,DWORD PTR [rsp+0xb0]
   140002309:	mov    r13,r8
   14000230c:	mov    r15,QWORD PTR [rsp+0xd0]
   140002314:	xor    r8d,r8d
   140002317:	mov    rbp,QWORD PTR [rsp+0xe0]
   14000231f:	mov    r12,r9
   140002322:	mov    ebx,DWORD PTR [rsp+0xb8]
   140002329:	mov    edi,r8d
   14000232c:	mov    r10d,r14d
   14000232f:	mov    WORD PTR [r15],r8w
   140002333:	mov    BYTE PTR [rbp+0x0],r8b
   140002337:	test   r14d,r14d
   14000233a:	je     0x1400023af
   14000233c:	sub    r10d,0x1
   140002340:	je     0x1400023a6
   140002342:	sub    r10d,0x1
   140002346:	je     0x14000239d
   140002348:	sub    r10d,0x1
   14000234c:	je     0x14000235d
   14000234e:	cmp    r10d,0x1
   140002352:	jne    0x1400023b8
   140002354:	mov    ecx,ebx
   140002356:	call   0x140001bf0
   14000235b:	jmp    0x1400023b6
   14000235d:	test   ebx,ebx
   14000235f:	js     0x140002394
   140002361:	mov    rax,QWORD PTR [rsp+0xa8]
   140002369:	mov    ebx,0x8007029c
   14000236e:	mov    DWORD PTR [rsp+0x38],ebx
   140002372:	mov    r8,r13
   140002375:	mov    DWORD PTR [rsp+0x30],0x3
   14000237d:	mov    QWORD PTR [rsp+0x28],rax
   140002382:	mov    rax,QWORD PTR [rsp+0xa0]
   14000238a:	mov    QWORD PTR [rsp+0x20],rax
   14000238f:	call   0x140002838
   140002394:	mov    ecx,ebx
   140002396:	call   0x140001bd4
   14000239b:	jmp    0x1400023b6
   14000239d:	mov    ecx,ebx
   14000239f:	call   0x140001bb8
   1400023a4:	jmp    0x1400023b6
   1400023a6:	mov    ecx,ebx
   1400023a8:	call   0x140001b9c
   1400023ad:	jmp    0x1400023b6
   1400023af:	mov    ecx,ebx
   1400023b1:	call   0x140001b80
   1400023b6:	mov    edi,eax
   1400023b8:	mov    rsi,QWORD PTR [rsp+0xf0]
   1400023c0:	mov    DWORD PTR [rsi],r14d
   1400023c3:	mov    r14d,0x1
   1400023c9:	mov    eax,r14d
   1400023cc:	mov    DWORD PTR [rsi+0x4],ebx
   1400023cf:	lock xadd DWORD PTR [rip+0xe325],eax        # 0x1400106fc
   1400023d7:	add    eax,r14d
   1400023da:	xor    ecx,ecx
   1400023dc:	mov    DWORD PTR [rsi+0x8],eax
   1400023df:	mov    rax,QWORD PTR [rsp+0xc0]
   1400023e7:	test   rax,rax
   1400023ea:	je     0x1400023f1
   1400023ec:	cmp    WORD PTR [rax],cx
   1400023ef:	jne    0x1400023f4
   1400023f1:	mov    rax,rcx
   1400023f4:	mov    QWORD PTR [rsi+0x10],rax
   1400023f8:	call   QWORD PTR [rip+0x9d02]        # 0x14000c100
   1400023fe:	mov    rbx,QWORD PTR [rip+0xe2bb]        # 0x1400106c0
   140002405:	mov    DWORD PTR [rsi+0x18],eax
   140002408:	mov    eax,DWORD PTR [rsp+0x88]
   14000240f:	mov    DWORD PTR [rsi+0x38],eax
   140002412:	mov    rax,QWORD PTR [rsp+0xa0]
   14000241a:	mov    QWORD PTR [rsi+0x20],rax
   14000241e:	mov    rax,QWORD PTR [rsp+0xa8]
   140002426:	mov    QWORD PTR [rsi+0x80],rax
   14000242d:	mov    rax,QWORD PTR [rsp+0x80]
   140002435:	mov    QWORD PTR [rsi+0x30],r13
   140002439:	xor    r13d,r13d
   14000243c:	mov    QWORD PTR [rsi+0x88],rax
   140002443:	mov    DWORD PTR [rsi+0x3c],edi
   140002446:	mov    QWORD PTR [rsi+0x28],r12
   14000244a:	mov    QWORD PTR [rsi+0x40],r13
   14000244e:	mov    DWORD PTR [rsi+0x60],r13d
   140002452:	mov    QWORD PTR [rsi+0x68],r13
   140002456:	mov    QWORD PTR [rsi+0x70],r13
   14000245a:	mov    DWORD PTR [rsi+0x48],r13d
   14000245e:	mov    QWORD PTR [rsi+0x50],r13
   140002462:	mov    QWORD PTR [rsi+0x58],r13
   140002466:	test   rbx,rbx
   140002469:	je     0x140002478
   14000246b:	mov    rcx,rbx
   14000246e:	call   QWORD PTR [rip+0xa07c]        # 0x14000c4f0
   140002474:	call   rbx
   140002476:	jmp    0x14000247b
   140002478:	mov    rax,r13
   14000247b:	mov    QWORD PTR [rsi+0x78],rax
   14000247f:	mov    r12b,r13b
   140002482:	mov    BYTE PTR [rbp+0x0],r13b
   140002486:	call   QWORD PTR [rip+0x9c74]        # 0x14000c100
   14000248c:	mov    r8d,eax
   14000248f:	lea    rbx,[rip+0xe36a]        # 0x140010800
   140002496:	mov    r9d,eax
   140002499:	movabs rax,0xcccccccccccccccd
   1400024a3:	mul    r9
   1400024a6:	shr    rdx,0x4
   1400024aa:	lea    rcx,[rdx+rdx*4]
   1400024ae:	shl    rcx,0x2
   1400024b2:	sub    r8,rcx
   1400024b5:	mov    rbx,QWORD PTR [rbx+r8*8]
   1400024b9:	jmp    0x1400024c5
   1400024bb:	cmp    DWORD PTR [rbx+0x8],r9d
   1400024bf:	je     0x1400024cd
   1400024c1:	mov    rbx,QWORD PTR [rbx+0x10]
   1400024c5:	test   rbx,rbx
   1400024c8:	jne    0x1400024bb
   1400024ca:	mov    rbx,r13
   1400024cd:	test   rbx,rbx
   1400024d0:	je     0x140002521
   1400024d2:	cmp    QWORD PTR [rbx],r13
   1400024d5:	je     0x140002521
   1400024d7:	mov    BYTE PTR [rbp+0x0],r13b
   1400024db:	mov    r9d,0x400
   1400024e1:	mov    rdx,QWORD PTR [rbx]
   1400024e4:	mov    r8,rbp
   1400024e7:	mov    rcx,rsi
   1400024ea:	call   0x140001e00
   1400024ef:	test   al,al
   1400024f1:	je     0x1400024f7
   1400024f3:	mov    QWORD PTR [rsi+0x40],rbp
   1400024f7:	mov    rbp,QWORD PTR [rbx]
   1400024fa:	mov    rdi,QWORD PTR [rbp+0x8]
   1400024fe:	mov    rax,QWORD PTR [rdi]
   140002501:	mov    rbx,QWORD PTR [rax]
   140002504:	mov    rcx,rbx
   140002507:	call   QWORD PTR [rip+0x9fe3]        # 0x14000c4f0
   14000250d:	mov    rdx,rsi
   140002510:	mov    rcx,rdi
   140002513:	call   rbx
   140002515:	mov    rbp,QWORD PTR [rbp+0x10]
   140002519:	or     r12b,al
   14000251c:	test   rbp,rbp
   14000251f:	jne    0x1400024fa
   140002521:	mov    rdi,QWORD PTR [rip+0xe178]        # 0x1400106a0
   140002528:	test   rdi,rdi
   14000252b:	je     0x140002545
   14000252d:	mov    rcx,rdi
   140002530:	call   QWORD PTR [rip+0x9fba]        # 0x14000c4f0
   140002536:	mov    rdx,rsi
   140002539:	mov    cl,r12b
   14000253c:	call   rdi
   14000253e:	mov    rdi,QWORD PTR [rip+0xe15b]        # 0x1400106a0
   140002545:	mov    rbx,QWORD PTR [rip+0xe14c]        # 0x140010698
   14000254c:	test   rbx,rbx
   14000254f:	je     0x140002566
   140002551:	mov    rcx,rbx
   140002554:	call   QWORD PTR [rip+0x9f96]        # 0x14000c4f0
   14000255a:	mov    rcx,rsi
   14000255d:	call   rbx
   14000255f:	mov    rdi,QWORD PTR [rip+0xe13a]        # 0x1400106a0
   140002566:	cmp    DWORD PTR [rsi+0x4],r13d
   14000256a:	jl     0x14000257a
   14000256c:	cmp    DWORD PTR [rsp+0xb0],0x4
   140002574:	jne    0x140002621
   14000257a:	cmp    BYTE PTR [rip+0xe148],r13b        # 0x1400106c9
   140002581:	mov    rbx,QWORD PTR [rip+0xe148]        # 0x1400106d0
   140002588:	jne    0x140002597
   14000258a:	test   rdi,rdi
   14000258d:	jne    0x140002594
   14000258f:	test   rbx,rbx
   140002592:	je     0x140002597
   140002594:	mov    r14b,r13b
   140002597:	cmp    BYTE PTR [rsp+0xc8],r13b
   14000259f:	jne    0x1400025c9
   1400025a1:	test   r14b,r14b
   1400025a4:	jne    0x1400025c9
   1400025a6:	test   rbx,rbx
   1400025a9:	je     0x140002609
   1400025ab:	cmp    BYTE PTR [rip+0xe116],r13b        # 0x1400106c8
   1400025b2:	jne    0x140002609
   1400025b4:	mov    rcx,rbx
   1400025b7:	call   QWORD PTR [rip+0x9f33]        # 0x14000c4f0
   1400025bd:	xor    r8d,r8d
   1400025c0:	xor    edx,edx
   1400025c2:	mov    rcx,rsi
   1400025c5:	call   rbx
   1400025c7:	jmp    0x140002609
   1400025c9:	mov    edi,0x800
   1400025ce:	test   rbx,rbx
   1400025d1:	je     0x1400025e7
   1400025d3:	mov    rcx,rbx
   1400025d6:	call   QWORD PTR [rip+0x9f14]        # 0x14000c4f0
   1400025dc:	mov    r8d,edi
   1400025df:	mov    rdx,r15
   1400025e2:	mov    rcx,rsi
   1400025e5:	call   rbx
   1400025e7:	cmp    WORD PTR [r15],r13w
   1400025eb:	jne    0x1400025fb
   1400025ed:	mov    r8,rsi
   1400025f0:	mov    rdx,rdi
   1400025f3:	mov    rcx,r15
   1400025f6:	call   0x14000194c
   1400025fb:	test   r14b,r14b
   1400025fe:	je     0x140002609
   140002600:	mov    rcx,r15
   140002603:	call   QWORD PTR [rip+0x9a7f]        # 0x14000c088
   140002609:	mov    rbx,QWORD PTR [rsp+0x90]
   140002611:	add    rsp,0x40
   140002615:	pop    r15
   140002617:	pop    r14
   140002619:	pop    r13
   14000261b:	pop    r12
   14000261d:	pop    rdi
   14000261e:	pop    rsi
   14000261f:	pop    rbp
   140002620:	ret    
   140002621:	mov    rcx,QWORD PTR [rsp+0x78]
   140002626:	lea    r8,[rip+0xa30b]        # 0x14000c938
   14000262d:	mov    edx,0xb46
   140002632:	call   0x140002908
   140002637:	int3   
   140002638:	int3   
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	rex push rbx
   140002642:	push   rdi
   140002643:	mov    eax,0x15c8
   140002648:	call   0x14000a660
   14000264d:	sub    rsp,rax
   140002650:	mov    rax,QWORD PTR [rip+0xd9b1]        # 0x140010008
   140002657:	xor    rax,rsp
   14000265a:	mov    QWORD PTR [rsp+0x15b0],rax
   140002662:	mov    edi,DWORD PTR [rsp+0x1610]
   140002669:	mov    r10,QWORD PTR [rsp+0x1600]
   140002671:	mov    r11,QWORD PTR [rsp+0x1608]
   140002679:	test   edi,edi
   14000267b:	jne    0x14000268b
   14000267d:	cmp    QWORD PTR [rip+0xe023],0x0        # 0x1400106a8
   140002685:	je     0x14000268b
   140002687:	mov    bl,0x1
   140002689:	jmp    0x14000268d
   14000268b:	xor    bl,bl
   14000268d:	lea    rax,[rsp+0x80]
   140002695:	mov    QWORD PTR [rsp+0x70],rax
   14000269a:	lea    rax,[rsp+0x1b0]
   1400026a2:	mov    QWORD PTR [rsp+0x60],rax
   1400026a7:	lea    rax,[rsp+0x5b0]
   1400026af:	mov    QWORD PTR [rsp+0x50],rax
   1400026b4:	mov    eax,DWORD PTR [rsp+0x1618]
   1400026bb:	mov    BYTE PTR [rsp+0x48],bl
   1400026bf:	and    QWORD PTR [rsp+0x40],0x0
   1400026c5:	mov    DWORD PTR [rsp+0x38],eax
   1400026c9:	mov    DWORD PTR [rsp+0x30],edi
   1400026cd:	mov    QWORD PTR [rsp+0x28],r11
   1400026d2:	mov    QWORD PTR [rsp+0x20],r10
   1400026d7:	call   0x1400022e4
   1400026dc:	cmp    edi,0x4
   1400026df:	jne    0x140002700
   1400026e1:	lea    ecx,[rdi+0x3]
   1400026e4:	int    0x29
   1400026e6:	mov    rcx,QWORD PTR [rsp+0x15b0]
   1400026ee:	xor    rcx,rsp
   1400026f1:	call   0x140009e20
   1400026f6:	add    rsp,0x15c8
   1400026fd:	pop    rdi
   1400026fe:	pop    rbx
   1400026ff:	ret    
   140002700:	test   edi,edi
   140002702:	jne    0x1400026e6
   140002704:	test   bl,bl
   140002706:	je     0x14000272a
   140002708:	mov    rbx,QWORD PTR [rip+0xdf99]        # 0x1400106a8
   14000270f:	mov    rcx,rbx
   140002712:	call   QWORD PTR [rip+0x9dd8]        # 0x14000c4f0
   140002718:	lea    rdx,[rsp+0x5b0]
   140002720:	lea    rcx,[rsp+0x80]
   140002728:	call   rbx
   14000272a:	lea    rdx,[rsp+0x80]
   140002732:	lea    rcx,[rsp+0x110]
   14000273a:	call   0x1400022b4
   14000273f:	lea    rdx,[rip+0xc2c2]        # 0x14000ea08
   140002746:	lea    rcx,[rsp+0x110]
   14000274e:	call   0x14000a57c
   140002753:	int3   
   140002754:	int3   
   140002755:	int3   
   140002756:	int3   
   140002757:	int3   
   140002758:	int3   
   140002759:	int3   
   14000275a:	int3   
   14000275b:	int3   
   14000275c:	rex push rbx
   14000275e:	sub    rsp,0x20
   140002762:	mov    rbx,rcx
   140002765:	mov    rcx,QWORD PTR [rcx+0x90]
   14000276c:	test   rcx,rcx
   14000276f:	je     0x14000279a
   140002771:	or     eax,0xffffffff
   140002774:	lock xadd DWORD PTR [rcx],eax
   140002778:	cmp    eax,0x1
   14000277b:	jne    0x14000278a
   14000277d:	mov    rcx,QWORD PTR [rbx+0x90]
   140002784:	call   QWORD PTR [rip+0x9c56]        # 0x14000c3e0
   14000278a:	and    QWORD PTR [rbx+0x90],0x0
   140002792:	and    QWORD PTR [rbx+0x98],0x0
   14000279a:	add    rsp,0x20
   14000279e:	pop    rbx
   14000279f:	ret    
   1400027a0:	int3   
   1400027a1:	int3   
   1400027a2:	int3   
   1400027a3:	int3   
   1400027a4:	int3   
   1400027a5:	int3   
   1400027a6:	int3   
   1400027a7:	int3   
   1400027a8:	movups xmm0,XMMWORD PTR [rdx]
   1400027ab:	mov    r9d,0x80
   1400027b1:	movups XMMWORD PTR [rcx],xmm0
   1400027b4:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400027b8:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400027bc:	movups xmm0,XMMWORD PTR [rdx+0x20]
   1400027c0:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400027c4:	movups xmm1,XMMWORD PTR [rdx+0x30]
   1400027c8:	movups XMMWORD PTR [rcx+0x30],xmm1
   1400027cc:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400027d0:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400027d4:	movups xmm1,XMMWORD PTR [rdx+0x50]
   1400027d8:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400027dc:	movups xmm0,XMMWORD PTR [rdx+0x60]
   1400027e0:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400027e4:	movups xmm0,XMMWORD PTR [rdx+0x70]
   1400027e8:	movups XMMWORD PTR [rcx+r9*1-0x10],xmm0
   1400027ee:	movups xmm1,XMMWORD PTR [rdx+r9*1]
   1400027f3:	movups XMMWORD PTR [rcx+r9*1],xmm1
   1400027f8:	and    QWORD PTR [rcx+0x90],0x0
   140002800:	and    QWORD PTR [rcx+0x98],0x0
   140002808:	mov    rax,QWORD PTR [rdx+0x90]
   14000280f:	mov    r8,QWORD PTR [rdx+0x98]
   140002816:	test   rax,rax
   140002819:	je     0x14000282c
   14000281b:	mov    QWORD PTR [rcx+0x90],rax
   140002822:	mov    QWORD PTR [rcx+0x98],r8
   140002829:	lock inc DWORD PTR [rax]
   14000282c:	mov    rax,rcx
   14000282f:	ret    
   140002830:	int3   
   140002831:	int3   
   140002832:	int3   
   140002833:	int3   
   140002834:	int3   
   140002835:	int3   
   140002836:	int3   
   140002837:	int3   
   140002838:	sub    rsp,0x58
   14000283c:	mov    eax,DWORD PTR [rsp+0x98]
   140002843:	mov    DWORD PTR [rsp+0x38],eax
   140002847:	mov    eax,DWORD PTR [rsp+0x90]
   14000284e:	mov    DWORD PTR [rsp+0x30],eax
   140002852:	mov    rax,QWORD PTR [rsp+0x88]
   14000285a:	mov    QWORD PTR [rsp+0x28],rax
   14000285f:	mov    rax,QWORD PTR [rsp+0x80]
   140002867:	mov    QWORD PTR [rsp+0x20],rax
   14000286c:	call   0x140002640
   140002871:	add    rsp,0x58
   140002875:	ret    
   140002876:	int3   
   140002877:	int3   
   140002878:	int3   
   140002879:	int3   
   14000287a:	int3   
   14000287b:	int3   
   14000287c:	rex push rbx
   14000287e:	sub    rsp,0x40
   140002882:	mov    rax,QWORD PTR [rsp+0x48]
   140002887:	lea    r8,[rip+0xa0aa]        # 0x14000c938
   14000288e:	mov    ebx,r9d
   140002891:	mov    edx,0x76d
   140002896:	mov    DWORD PTR [rsp+0x38],ebx
   14000289a:	xor    r9d,r9d
   14000289d:	mov    DWORD PTR [rsp+0x30],0x3
   1400028a5:	mov    QWORD PTR [rsp+0x28],rax
   1400028aa:	and    QWORD PTR [rsp+0x20],0x0
   1400028b0:	call   0x140002838
   1400028b5:	mov    eax,ebx
   1400028b7:	add    rsp,0x40
   1400028bb:	pop    rbx
   1400028bc:	ret    
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	int3   
   1400028c1:	int3   
   1400028c2:	int3   
   1400028c3:	int3   
   1400028c4:	sub    rsp,0x48
   1400028c8:	mov    rax,QWORD PTR [rsp+0x48]
   1400028cd:	lea    r8,[rip+0xa064]        # 0x14000c938
   1400028d4:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   1400028dc:	xor    r9d,r9d
   1400028df:	mov    DWORD PTR [rsp+0x30],0x4
   1400028e7:	mov    edx,0x759
   1400028ec:	mov    QWORD PTR [rsp+0x28],rax
   1400028f1:	and    QWORD PTR [rsp+0x20],0x0
   1400028f7:	call   0x140002838
   1400028fc:	add    rsp,0x48
   140002900:	ret    
   140002901:	int3   
   140002902:	int3   
   140002903:	int3   
   140002904:	int3   
   140002905:	int3   
   140002906:	int3   
   140002907:	int3   
   140002908:	sub    rsp,0x48
   14000290c:	mov    rax,QWORD PTR [rsp+0x48]
   140002911:	xor    r9d,r9d
   140002914:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   14000291c:	mov    DWORD PTR [rsp+0x30],0x4
   140002924:	mov    QWORD PTR [rsp+0x28],rax
   140002929:	and    QWORD PTR [rsp+0x20],0x0
   14000292f:	call   0x140002838
   140002934:	add    rsp,0x48
   140002938:	ret    
   140002939:	int3   
   14000293a:	int3   
   14000293b:	int3   
   14000293c:	int3   
   14000293d:	int3   
   14000293e:	int3   
   14000293f:	int3   
   140002940:	ret    0x0
   140002943:	int3   
   140002944:	int3   
   140002945:	int3   
   140002946:	int3   
   140002947:	int3   
   140002948:	int3   
   140002949:	int3   
   14000294a:	int3   
   14000294b:	int3   
   14000294c:	int3   
   14000294d:	int3   
   14000294e:	int3   
   14000294f:	int3   
   140002950:	sub    rsp,0x28
   140002954:	test   dl,dl
   140002956:	jne    0x140002978
   140002958:	cmp    DWORD PTR [rcx+0x14],0x1
   14000295c:	jne    0x14000296a
   14000295e:	mov    rdx,r8
   140002961:	add    rsp,0x28
   140002965:	jmp    0x140002984
   14000296a:	cmp    DWORD PTR [rcx+0x14],0x2
   14000296e:	jne    0x140002978
   140002970:	mov    rdx,r8
   140002973:	call   0x140002c24
   140002978:	add    rsp,0x28
   14000297c:	ret    
   14000297d:	int3   
   14000297e:	int3   
   14000297f:	int3   
   140002980:	int3   
   140002981:	int3   
   140002982:	int3   
   140002983:	int3   
   140002984:	mov    rax,rsp
   140002987:	mov    QWORD PTR [rax+0x10],rbx
   14000298b:	mov    QWORD PTR [rax+0x18],rsi
   14000298f:	mov    QWORD PTR [rax+0x20],rdi
   140002993:	push   rbp
   140002994:	lea    rbp,[rax-0x68]
   140002998:	sub    rsp,0x160
   14000299f:	mov    rax,QWORD PTR [rip+0xd662]        # 0x140010008
   1400029a6:	xor    rax,rsp
   1400029a9:	mov    QWORD PTR [rbp+0x50],rax
   1400029ad:	mov    r10,QWORD PTR [rcx+0x8]
   1400029b1:	cmp    DWORD PTR [r10],0x5
   1400029b5:	jbe    0x140002bf7
   1400029bb:	movabs rcx,0x200000000000
   1400029c5:	test   QWORD PTR [r10+0x10],rcx
   1400029c9:	je     0x140002bf7
   1400029cf:	mov    rax,QWORD PTR [r10+0x18]
   1400029d3:	and    rax,rcx
   1400029d6:	cmp    rax,QWORD PTR [r10+0x18]
   1400029da:	jne    0x140002bf7
   1400029e0:	mov    eax,DWORD PTR [rdx+0x4]
   1400029e3:	lea    r9,[rip+0x9d86]        # 0x14000c770
   1400029ea:	mov    rcx,QWORD PTR [rdx+0x30]
   1400029ee:	xor    ebx,ebx
   1400029f0:	mov    DWORD PTR [rsp+0x40],eax
   1400029f4:	or     rdi,0xffffffffffffffff
   1400029f8:	mov    QWORD PTR [rsp+0x78],0x4
   140002a01:	lea    rax,[rsp+0x40]
   140002a06:	mov    QWORD PTR [rsp+0x70],rax
   140002a0b:	mov    eax,ebx
   140002a0d:	mov    r8,r9
   140002a10:	test   rcx,rcx
   140002a13:	je     0x140002a23
   140002a15:	mov    r8,rcx
   140002a18:	mov    rax,rdi
   140002a1b:	inc    rax
   140002a1e:	cmp    BYTE PTR [rcx+rax*1],bl
   140002a21:	jne    0x140002a1b
   140002a23:	mov    rcx,QWORD PTR [rdx+0x78]
   140002a27:	inc    eax
   140002a29:	mov    DWORD PTR [rbp-0x78],eax
   140002a2c:	lea    rax,[rdx+0x38]
   140002a30:	mov    QWORD PTR [rbp-0x70],rax
   140002a34:	mov    rax,rbx
   140002a37:	mov    QWORD PTR [rbp-0x80],r8
   140002a3b:	mov    r8,r9
   140002a3e:	mov    DWORD PTR [rbp-0x74],ebx
   140002a41:	mov    QWORD PTR [rbp-0x68],0x4
   140002a49:	test   rcx,rcx
   140002a4c:	je     0x140002a5c
   140002a4e:	mov    r8,rcx
   140002a51:	mov    rax,rdi
   140002a54:	inc    rax
   140002a57:	cmp    BYTE PTR [rcx+rax*1],bl
   140002a5a:	jne    0x140002a54
   140002a5c:	mov    rcx,QWORD PTR [rdx+0x10]
   140002a60:	lea    r11,[rip+0x9d0d]        # 0x14000c774
   140002a67:	inc    eax
   140002a69:	mov    QWORD PTR [rbp-0x60],r8
   140002a6d:	mov    DWORD PTR [rbp-0x58],eax
   140002a70:	mov    r8,r11
   140002a73:	mov    eax,DWORD PTR [rdx]
   140002a75:	mov    DWORD PTR [rsp+0x38],eax
   140002a79:	lea    rax,[rsp+0x38]
   140002a7e:	mov    QWORD PTR [rbp-0x50],rax
   140002a82:	mov    rax,rbx
   140002a85:	mov    DWORD PTR [rbp-0x54],ebx
   140002a88:	mov    QWORD PTR [rbp-0x48],0x4
   140002a90:	test   rcx,rcx
   140002a93:	je     0x140002aa4
   140002a95:	mov    r8,rcx
   140002a98:	mov    rax,rdi
   140002a9b:	inc    rax
   140002a9e:	cmp    WORD PTR [rcx+rax*2],bx
   140002aa2:	jne    0x140002a9b
   140002aa4:	mov    rcx,QWORD PTR [rdx+0x40]
   140002aa8:	lea    eax,[rax*2+0x2]
   140002aaf:	mov    DWORD PTR [rbp-0x38],eax
   140002ab2:	mov    eax,DWORD PTR [rdx+0x18]
   140002ab5:	mov    DWORD PTR [rsp+0x30],eax
   140002ab9:	lea    rax,[rsp+0x30]
   140002abe:	mov    QWORD PTR [rbp-0x30],rax
   140002ac2:	mov    rax,rbx
   140002ac5:	mov    QWORD PTR [rbp-0x40],r8
   140002ac9:	mov    r8,r9
   140002acc:	mov    DWORD PTR [rbp-0x34],ebx
   140002acf:	mov    QWORD PTR [rbp-0x28],0x4
   140002ad7:	test   rcx,rcx
   140002ada:	je     0x140002aea
   140002adc:	mov    r8,rcx
   140002adf:	mov    rax,rdi
   140002ae2:	inc    rax
   140002ae5:	cmp    BYTE PTR [rcx+rax*1],bl
   140002ae8:	jne    0x140002ae2
   140002aea:	mov    rcx,QWORD PTR [rdx+0x50]
   140002aee:	inc    eax
   140002af0:	mov    DWORD PTR [rbp-0x18],eax
   140002af3:	mov    eax,DWORD PTR [rdx+0x48]
   140002af6:	mov    DWORD PTR [rsp+0x34],eax
   140002afa:	lea    rax,[rsp+0x34]
   140002aff:	mov    QWORD PTR [rbp-0x10],rax
   140002b03:	mov    rax,rbx
   140002b06:	mov    QWORD PTR [rbp-0x20],r8
   140002b0a:	mov    r8,r9
   140002b0d:	mov    DWORD PTR [rbp-0x14],ebx
   140002b10:	mov    QWORD PTR [rbp-0x8],0x4
   140002b18:	test   rcx,rcx
   140002b1b:	je     0x140002b2b
   140002b1d:	mov    r8,rcx
   140002b20:	mov    rax,rdi
   140002b23:	inc    rax
   140002b26:	cmp    BYTE PTR [rcx+rax*1],bl
   140002b29:	jne    0x140002b23
   140002b2b:	mov    rcx,QWORD PTR [rdx+0x58]
   140002b2f:	inc    eax
   140002b31:	mov    DWORD PTR [rbp+0x8],eax
   140002b34:	mov    rax,rbx
   140002b37:	mov    QWORD PTR [rbp+0x0],r8
   140002b3b:	mov    r8,r11
   140002b3e:	mov    DWORD PTR [rbp+0xc],ebx
   140002b41:	test   rcx,rcx
   140002b44:	je     0x140002b55
   140002b46:	mov    r8,rcx
   140002b49:	mov    rax,rdi
   140002b4c:	inc    rax
   140002b4f:	cmp    WORD PTR [rcx+rax*2],bx
   140002b53:	jne    0x140002b4c
   140002b55:	mov    rcx,QWORD PTR [rdx+0x68]
   140002b59:	lea    eax,[rax*2+0x2]
   140002b60:	mov    DWORD PTR [rbp+0x18],eax
   140002b63:	mov    eax,DWORD PTR [rdx+0x60]
   140002b66:	mov    DWORD PTR [rsp+0x3c],eax
   140002b6a:	lea    rax,[rsp+0x3c]
   140002b6f:	mov    QWORD PTR [rbp+0x20],rax
   140002b73:	mov    rax,rbx
   140002b76:	mov    QWORD PTR [rbp+0x10],r8
   140002b7a:	mov    DWORD PTR [rbp+0x1c],ebx
   140002b7d:	mov    QWORD PTR [rbp+0x28],0x4
   140002b85:	test   rcx,rcx
   140002b88:	je     0x140002b98
   140002b8a:	mov    r9,rcx
   140002b8d:	mov    rax,rdi
   140002b90:	inc    rax
   140002b93:	cmp    BYTE PTR [rcx+rax*1],bl
   140002b96:	jne    0x140002b90
   140002b98:	mov    rcx,QWORD PTR [rdx+0x70]
   140002b9c:	inc    eax
   140002b9e:	mov    DWORD PTR [rbp+0x38],eax
   140002ba1:	mov    rax,rbx
   140002ba4:	mov    QWORD PTR [rbp+0x30],r9
   140002ba8:	mov    DWORD PTR [rbp+0x3c],ebx
   140002bab:	test   rcx,rcx
   140002bae:	je     0x140002bbf
   140002bb0:	mov    r11,rcx
   140002bb3:	mov    rax,rdi
   140002bb6:	inc    rax
   140002bb9:	cmp    WORD PTR [rcx+rax*2],bx
   140002bbd:	jne    0x140002bb6
   140002bbf:	lea    eax,[rax*2+0x2]
   140002bc6:	mov    QWORD PTR [rbp+0x40],r11
   140002bca:	mov    DWORD PTR [rbp+0x48],eax
   140002bcd:	mov    DWORD PTR [rbp+0x4c],ebx
   140002bd0:	lea    rax,[rsp+0x50]
   140002bd5:	xor    r9d,r9d
   140002bd8:	mov    QWORD PTR [rsp+0x28],rax
   140002bdd:	lea    rdx,[rip+0xa702]        # 0x14000d2e6
   140002be4:	xor    r8d,r8d
   140002be7:	mov    DWORD PTR [rsp+0x20],0x10
   140002bef:	mov    rcx,r10
   140002bf2:	call   0x1400010dc
   140002bf7:	mov    rcx,QWORD PTR [rbp+0x50]
   140002bfb:	xor    rcx,rsp
   140002bfe:	call   0x140009e20
   140002c03:	lea    r11,[rsp+0x160]
   140002c0b:	mov    rbx,QWORD PTR [r11+0x18]
   140002c0f:	mov    rsi,QWORD PTR [r11+0x20]
   140002c13:	mov    rdi,QWORD PTR [r11+0x28]
   140002c17:	mov    rsp,r11
   140002c1a:	pop    rbp
   140002c1b:	ret    
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	int3   
   140002c21:	int3   
   140002c22:	int3   
   140002c23:	int3   
   140002c24:	mov    rax,rsp
   140002c27:	mov    QWORD PTR [rax+0x10],rbx
   140002c2b:	mov    QWORD PTR [rax+0x18],rsi
   140002c2f:	mov    QWORD PTR [rax+0x20],rdi
   140002c33:	push   rbp
   140002c34:	lea    rbp,[rax-0x98]
   140002c3b:	sub    rsp,0x190
   140002c42:	mov    rax,QWORD PTR [rip+0xd3bf]        # 0x140010008
   140002c49:	xor    rax,rsp
   140002c4c:	mov    QWORD PTR [rbp+0x80],rax
   140002c53:	mov    r11,QWORD PTR [rcx+0x8]
   140002c57:	cmp    DWORD PTR [r11],0x5
   140002c5b:	jbe    0x140002ed1
   140002c61:	mov    eax,DWORD PTR [rdx+0x4]
   140002c64:	lea    r9,[rip+0x9b05]        # 0x14000c770
   140002c6b:	mov    rcx,QWORD PTR [rdx+0x30]
   140002c6f:	xor    ebx,ebx
   140002c71:	mov    DWORD PTR [rsp+0x40],eax
   140002c75:	or     rdi,0xffffffffffffffff
   140002c79:	mov    QWORD PTR [rsp+0x78],0x4
   140002c82:	lea    rax,[rsp+0x40]
   140002c87:	mov    QWORD PTR [rsp+0x70],rax
   140002c8c:	mov    eax,ebx
   140002c8e:	mov    r8,r9
   140002c91:	test   rcx,rcx
   140002c94:	je     0x140002ca4
   140002c96:	mov    r8,rcx
   140002c99:	mov    rax,rdi
   140002c9c:	inc    rax
   140002c9f:	cmp    BYTE PTR [rcx+rax*1],bl
   140002ca2:	jne    0x140002c9c
   140002ca4:	mov    rcx,QWORD PTR [rdx+0x78]
   140002ca8:	inc    eax
   140002caa:	mov    DWORD PTR [rbp-0x78],eax
   140002cad:	lea    rax,[rdx+0x38]
   140002cb1:	mov    QWORD PTR [rbp-0x70],rax
   140002cb5:	mov    rax,rbx
   140002cb8:	mov    QWORD PTR [rbp-0x80],r8
   140002cbc:	mov    r8,r9
   140002cbf:	mov    DWORD PTR [rbp-0x74],ebx
   140002cc2:	mov    QWORD PTR [rbp-0x68],0x4
   140002cca:	test   rcx,rcx
   140002ccd:	je     0x140002cdd
   140002ccf:	mov    r8,rcx
   140002cd2:	mov    rax,rdi
   140002cd5:	inc    rax
   140002cd8:	cmp    BYTE PTR [rcx+rax*1],bl
   140002cdb:	jne    0x140002cd5
   140002cdd:	mov    rcx,QWORD PTR [rdx+0x10]
   140002ce1:	lea    r10,[rip+0x9a8c]        # 0x14000c774
   140002ce8:	inc    eax
   140002cea:	mov    QWORD PTR [rbp-0x60],r8
   140002cee:	mov    DWORD PTR [rbp-0x58],eax
   140002cf1:	mov    r8,r10
   140002cf4:	mov    eax,DWORD PTR [rdx]
   140002cf6:	mov    DWORD PTR [rsp+0x38],eax
   140002cfa:	lea    rax,[rsp+0x38]
   140002cff:	mov    QWORD PTR [rbp-0x50],rax
   140002d03:	mov    rax,rbx
   140002d06:	mov    DWORD PTR [rbp-0x54],ebx
   140002d09:	mov    QWORD PTR [rbp-0x48],0x4
   140002d11:	test   rcx,rcx
   140002d14:	je     0x140002d25
   140002d16:	mov    r8,rcx
   140002d19:	mov    rax,rdi
   140002d1c:	inc    rax
   140002d1f:	cmp    WORD PTR [rcx+rax*2],bx
   140002d23:	jne    0x140002d1c
   140002d25:	mov    rcx,QWORD PTR [rdx+0x40]
   140002d29:	lea    eax,[rax*2+0x2]
   140002d30:	mov    DWORD PTR [rbp-0x38],eax
   140002d33:	mov    eax,DWORD PTR [rdx+0x18]
   140002d36:	mov    DWORD PTR [rsp+0x48],eax
   140002d3a:	lea    rax,[rsp+0x48]
   140002d3f:	mov    QWORD PTR [rbp-0x30],rax
   140002d43:	mov    rax,rbx
   140002d46:	mov    QWORD PTR [rbp-0x40],r8
   140002d4a:	mov    r8,r9
   140002d4d:	mov    DWORD PTR [rbp-0x34],ebx
   140002d50:	mov    QWORD PTR [rbp-0x28],0x4
   140002d58:	test   rcx,rcx
   140002d5b:	je     0x140002d6b
   140002d5d:	mov    r8,rcx
   140002d60:	mov    rax,rdi
   140002d63:	inc    rax
   140002d66:	cmp    BYTE PTR [rcx+rax*1],bl
   140002d69:	jne    0x140002d63
   140002d6b:	mov    rcx,QWORD PTR [rdx+0x50]
   140002d6f:	inc    eax
   140002d71:	mov    DWORD PTR [rbp-0x18],eax
   140002d74:	mov    eax,DWORD PTR [rdx+0x48]
   140002d77:	mov    DWORD PTR [rsp+0x30],eax
   140002d7b:	lea    rax,[rsp+0x30]
   140002d80:	mov    QWORD PTR [rbp-0x10],rax
   140002d84:	mov    rax,rbx
   140002d87:	mov    QWORD PTR [rbp-0x20],r8
   140002d8b:	mov    r8,r9
   140002d8e:	mov    DWORD PTR [rbp-0x14],ebx
   140002d91:	mov    QWORD PTR [rbp-0x8],0x4
   140002d99:	test   rcx,rcx
   140002d9c:	je     0x140002dac
   140002d9e:	mov    r8,rcx
   140002da1:	mov    rax,rdi
   140002da4:	inc    rax
   140002da7:	cmp    BYTE PTR [rcx+rax*1],bl
   140002daa:	jne    0x140002da4
   140002dac:	mov    rcx,QWORD PTR [rdx+0x58]
   140002db0:	inc    eax
   140002db2:	mov    DWORD PTR [rbp+0x8],eax
   140002db5:	mov    rax,rbx
   140002db8:	mov    QWORD PTR [rbp+0x0],r8
   140002dbc:	mov    r8,r10
   140002dbf:	mov    DWORD PTR [rbp+0xc],ebx
   140002dc2:	test   rcx,rcx
   140002dc5:	je     0x140002dd6
   140002dc7:	mov    r8,rcx
   140002dca:	mov    rax,rdi
   140002dcd:	inc    rax
   140002dd0:	cmp    WORD PTR [rcx+rax*2],bx
   140002dd4:	jne    0x140002dcd
   140002dd6:	mov    rcx,QWORD PTR [rdx+0x68]
   140002dda:	lea    eax,[rax*2+0x2]
   140002de1:	mov    DWORD PTR [rbp+0x18],eax
   140002de4:	mov    eax,DWORD PTR [rdx+0x60]
   140002de7:	mov    DWORD PTR [rsp+0x34],eax
   140002deb:	lea    rax,[rsp+0x34]
   140002df0:	mov    QWORD PTR [rbp+0x20],rax
   140002df4:	mov    rax,rbx
   140002df7:	mov    QWORD PTR [rbp+0x10],r8
   140002dfb:	mov    r8,r9
   140002dfe:	mov    DWORD PTR [rbp+0x1c],ebx
   140002e01:	mov    QWORD PTR [rbp+0x28],0x4
   140002e09:	test   rcx,rcx
   140002e0c:	je     0x140002e1c
   140002e0e:	mov    r8,rcx
   140002e11:	mov    rax,rdi
   140002e14:	inc    rax
   140002e17:	cmp    BYTE PTR [rcx+rax*1],bl
   140002e1a:	jne    0x140002e14
   140002e1c:	mov    rcx,QWORD PTR [rdx+0x70]
   140002e20:	inc    eax
   140002e22:	mov    DWORD PTR [rbp+0x38],eax
   140002e25:	mov    rax,rbx
   140002e28:	mov    QWORD PTR [rbp+0x30],r8
   140002e2c:	mov    DWORD PTR [rbp+0x3c],ebx
   140002e2f:	test   rcx,rcx
   140002e32:	je     0x140002e43
   140002e34:	mov    r10,rcx
   140002e37:	mov    rax,rdi
   140002e3a:	inc    rax
   140002e3d:	cmp    WORD PTR [rcx+rax*2],bx
   140002e41:	jne    0x140002e3a
   140002e43:	mov    rcx,QWORD PTR [rdx+0x28]
   140002e47:	lea    eax,[rax*2+0x2]
   140002e4e:	mov    DWORD PTR [rbp+0x48],eax
   140002e51:	mov    eax,DWORD PTR [rdx+0x8]
   140002e54:	mov    DWORD PTR [rsp+0x3c],eax
   140002e58:	lea    rax,[rsp+0x3c]
   140002e5d:	mov    QWORD PTR [rbp+0x50],rax
   140002e61:	mov    eax,DWORD PTR [rdx+0x3c]
   140002e64:	mov    DWORD PTR [rsp+0x44],eax
   140002e68:	lea    rax,[rsp+0x44]
   140002e6d:	mov    QWORD PTR [rbp+0x60],rax
   140002e71:	mov    rax,rbx
   140002e74:	mov    QWORD PTR [rbp+0x40],r10
   140002e78:	mov    DWORD PTR [rbp+0x4c],ebx
   140002e7b:	mov    QWORD PTR [rbp+0x58],0x4
   140002e83:	mov    QWORD PTR [rbp+0x68],0x4
   140002e8b:	test   rcx,rcx
   140002e8e:	je     0x140002e9e
   140002e90:	mov    r9,rcx
   140002e93:	mov    rax,rdi
   140002e96:	inc    rax
   140002e99:	cmp    BYTE PTR [rcx+rax*1],bl
   140002e9c:	jne    0x140002e96
   140002e9e:	inc    eax
   140002ea0:	mov    QWORD PTR [rbp+0x70],r9
   140002ea4:	mov    DWORD PTR [rbp+0x78],eax
   140002ea7:	mov    DWORD PTR [rbp+0x7c],ebx
   140002eaa:	lea    rax,[rsp+0x50]
   140002eaf:	xor    r9d,r9d
   140002eb2:	mov    QWORD PTR [rsp+0x28],rax
   140002eb7:	lea    rdx,[rip+0xa6e2]        # 0x14000d5a0
   140002ebe:	xor    r8d,r8d
   140002ec1:	mov    DWORD PTR [rsp+0x20],0x13
   140002ec9:	mov    rcx,r11
   140002ecc:	call   0x1400010dc
   140002ed1:	mov    rcx,QWORD PTR [rbp+0x80]
   140002ed8:	xor    rcx,rsp
   140002edb:	call   0x140009e20
   140002ee0:	lea    r11,[rsp+0x190]
   140002ee8:	mov    rbx,QWORD PTR [r11+0x18]
   140002eec:	mov    rsi,QWORD PTR [r11+0x20]
   140002ef0:	mov    rdi,QWORD PTR [r11+0x28]
   140002ef4:	mov    rsp,r11
   140002ef7:	pop    rbp
   140002ef8:	ret    
   140002ef9:	int3   
   140002efa:	int3   
   140002efb:	int3   
   140002efc:	int3   
   140002efd:	int3   
   140002efe:	int3   
   140002eff:	int3   
   140002f00:	mov    QWORD PTR [rsp+0x8],rbx
   140002f05:	mov    QWORD PTR [rsp+0x10],rsi
   140002f0a:	push   rdi
   140002f0b:	sub    rsp,0x20
   140002f0f:	mov    eax,DWORD PTR [rip+0xd15b]        # 0x140010070
   140002f15:	mov    rdi,rdx
   140002f18:	mov    r8d,DWORD PTR [rdx+0x8]
   140002f1c:	mov    rsi,rcx
   140002f1f:	cmp    eax,r8d
   140002f22:	mov    DWORD PTR [rip+0xd147],r8d        # 0x140010070
   140002f29:	sete   al
   140002f2c:	test   al,al
   140002f2e:	jne    0x140002f4a
   140002f30:	mov    rax,QWORD PTR [rcx]
   140002f33:	mov    rbx,QWORD PTR [rax+0x10]
   140002f37:	mov    rcx,rbx
   140002f3a:	call   QWORD PTR [rip+0x95b0]        # 0x14000c4f0
   140002f40:	mov    r8,rdi
   140002f43:	xor    edx,edx
   140002f45:	mov    rcx,rsi
   140002f48:	call   rbx
   140002f4a:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f4f:	mov    al,0x1
   140002f51:	mov    rsi,QWORD PTR [rsp+0x38]
   140002f56:	add    rsp,0x20
   140002f5a:	pop    rdi
   140002f5b:	ret    
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	int3   
   140002f61:	int3   
   140002f62:	int3   
   140002f63:	int3   
   140002f64:	int3   
   140002f65:	int3   
   140002f66:	int3   
   140002f67:	int3   
   140002f68:	int3   
   140002f69:	int3   
   140002f6a:	int3   
   140002f6b:	int3   
   140002f6c:	int3   
   140002f6d:	int3   
   140002f6e:	int3   
   140002f6f:	int3   
   140002f70:	mov    QWORD PTR [rsp+0x8],rbx
   140002f75:	mov    QWORD PTR [rsp+0x10],rsi
   140002f7a:	push   rdi
   140002f7b:	sub    rsp,0x20
   140002f7f:	cmp    BYTE PTR [rcx+0x10],0x0
   140002f83:	lea    rax,[rip+0x9c06]        # 0x14000cb90
   140002f8a:	mov    QWORD PTR [rcx],rax
   140002f8d:	mov    esi,edx
   140002f8f:	mov    rdi,rcx
   140002f92:	je     0x140002faa
   140002f94:	mov    rbx,QWORD PTR [rcx+0x8]
   140002f98:	mov    rcx,QWORD PTR [rbx+0x20]
   140002f9c:	call   QWORD PTR [rip+0x906e]        # 0x14000c010
   140002fa2:	and    QWORD PTR [rbx+0x20],0x0
   140002fa7:	and    DWORD PTR [rbx],0x0
   140002faa:	test   sil,0x1
   140002fae:	je     0x140002fb8
   140002fb0:	mov    rcx,rdi
   140002fb3:	call   0x140009a28
   140002fb8:	mov    rbx,QWORD PTR [rsp+0x30]
   140002fbd:	mov    rax,rdi
   140002fc0:	mov    rsi,QWORD PTR [rsp+0x38]
   140002fc5:	add    rsp,0x20
   140002fc9:	pop    rdi
   140002fca:	ret    
   140002fcb:	int3   
   140002fcc:	int3   
   140002fcd:	int3   
   140002fce:	int3   
   140002fcf:	int3   
   140002fd0:	int3   
   140002fd1:	int3   
   140002fd2:	int3   
   140002fd3:	int3   
   140002fd4:	rex push rbx
   140002fd6:	sub    rsp,0x20
   140002fda:	mov    eax,DWORD PTR [rip+0xd8ec]        # 0x1400108cc
   140002fe0:	test   al,0x1
   140002fe2:	jne    0x140002ff9
   140002fe4:	or     eax,0x1
   140002fe7:	lea    rcx,[rip+0x7822]        # 0x14000a810
   140002fee:	mov    DWORD PTR [rip+0xd8d8],eax        # 0x1400108cc
   140002ff4:	call   0x140009f0c
   140002ff9:	lea    r9,[rsp+0x38]
   140002ffe:	xor    edx,edx
   140003000:	lea    r8,[rsp+0x30]
   140003005:	lea    rcx,[rip+0xd78c]        # 0x140010798
   14000300c:	call   QWORD PTR [rip+0x904e]        # 0x14000c060
   140003012:	cmp    DWORD PTR [rsp+0x30],0x0
   140003017:	je     0x14000304d
   140003019:	lea    rbx,[rip+0xd780]        # 0x1400107a0
   140003020:	lea    rax,[rip+0x9b69]        # 0x14000cb90
   140003027:	mov    QWORD PTR [rsp+0x38],rbx
   14000302c:	mov    rcx,rbx
   14000302f:	mov    QWORD PTR [rip+0xd76a],rax        # 0x1400107a0
   140003036:	call   0x140003064
   14000303b:	mov    r8,rbx
   14000303e:	lea    rcx,[rip+0xd753]        # 0x140010798
   140003045:	xor    edx,edx
   140003047:	call   QWORD PTR [rip+0x8ffb]        # 0x14000c048
   14000304d:	mov    rax,QWORD PTR [rsp+0x38]
   140003052:	mov    rax,QWORD PTR [rax+0x8]
   140003056:	add    rsp,0x20
   14000305a:	pop    rbx
   14000305b:	ret    
   14000305c:	int3   
   14000305d:	int3   
   14000305e:	int3   
   14000305f:	int3   
   140003060:	int3   
   140003061:	int3   
   140003062:	int3   
   140003063:	int3   
   140003064:	mov    QWORD PTR [rsp+0x10],rbx
   140003069:	mov    QWORD PTR [rsp+0x18],rdi
   14000306e:	push   r14
   140003070:	sub    rsp,0x50
   140003074:	mov    rax,QWORD PTR [rip+0xcf8d]        # 0x140010008
   14000307b:	xor    rax,rsp
   14000307e:	mov    QWORD PTR [rsp+0x40],rax
   140003083:	mov    eax,DWORD PTR [rip+0xd83f]        # 0x1400108c8
   140003089:	mov    rdi,rcx
   14000308c:	test   al,0x1
   14000308e:	jne    0x1400030a5
   140003090:	or     eax,0x1
   140003093:	lea    rcx,[rip+0x7716]        # 0x14000a7b0
   14000309a:	mov    DWORD PTR [rip+0xd828],eax        # 0x1400108c8
   1400030a0:	call   0x140009f0c
   1400030a5:	lea    r9,[rsp+0x28]
   1400030aa:	xor    edx,edx
   1400030ac:	lea    r8,[rsp+0x20]
   1400030b1:	lea    rcx,[rip+0xd7e8]        # 0x1400108a0
   1400030b8:	call   QWORD PTR [rip+0x8fa2]        # 0x14000c060
   1400030be:	cmp    DWORD PTR [rsp+0x20],0x0
   1400030c3:	je     0x14000318d
   1400030c9:	lea    r14,[rip+0xd7d8]        # 0x1400108a8
   1400030d0:	lea    rax,[rip+0x9ab9]        # 0x14000cb90
   1400030d7:	mov    QWORD PTR [rsp+0x28],r14
   1400030dc:	mov    QWORD PTR [rip+0xd7c5],rax        # 0x1400108a8
   1400030e3:	mov    rax,QWORD PTR [rip+0xcf4e]        # 0x140010038
   1400030ea:	lea    r8,[rip+0xcf3f]        # 0x140010030
   1400030f1:	mov    QWORD PTR [rip+0xd7c8],r8        # 0x1400108c0
   1400030f8:	lea    r9,[rip+0xcf51]        # 0x140010050
   1400030ff:	mov    QWORD PTR [rip+0xd7aa],r8        # 0x1400108b0
   140003106:	lea    rdx,[rip+0xffffffffffffdf03]        # 0x140001010
   14000310d:	mov    BYTE PTR [rip+0xd7a4],0x1        # 0x1400108b8
   140003114:	lea    rcx,[rsp+0x30]
   140003119:	movups xmm0,XMMWORD PTR [rax-0x10]
   14000311d:	and    QWORD PTR [rip+0xcf33],0x0        # 0x140010058
   140003125:	and    QWORD PTR [rip+0xcf33],0x0        # 0x140010060
   14000312d:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140003133:	call   QWORD PTR [rip+0x8ee7]        # 0x14000c020
   140003139:	test   eax,eax
   14000313b:	jne    0x140003158
   14000313d:	mov    r8,QWORD PTR [rip+0xcef4]        # 0x140010038
   140003144:	lea    edx,[rax+0x2]
   140003147:	mov    rcx,QWORD PTR [rip+0xcf02]        # 0x140010050
   14000314e:	movzx  r9d,WORD PTR [r8]
   140003152:	call   QWORD PTR [rip+0x8ec0]        # 0x14000c018
   140003158:	mov    rax,QWORD PTR [rip+0xd749]        # 0x1400108a8
   14000315f:	mov    DWORD PTR [rip+0xd753],0x1        # 0x1400108bc
   140003169:	mov    rbx,QWORD PTR [rax+0x8]
   14000316d:	mov    rcx,rbx
   140003170:	call   QWORD PTR [rip+0x937a]        # 0x14000c4f0
   140003176:	mov    rcx,r14
   140003179:	call   rbx
   14000317b:	mov    r8,r14
   14000317e:	lea    rcx,[rip+0xd71b]        # 0x1400108a0
   140003185:	xor    edx,edx
   140003187:	call   QWORD PTR [rip+0x8ebb]        # 0x14000c048
   14000318d:	mov    rax,QWORD PTR [rsp+0x28]
   140003192:	mov    rdx,QWORD PTR [rax+0x8]
   140003196:	mov    rax,QWORD PTR [rdi]
   140003199:	mov    QWORD PTR [rdi+0x8],rdx
   14000319d:	mov    BYTE PTR [rdi+0x10],0x0
   1400031a1:	mov    DWORD PTR [rdi+0x14],0x1
   1400031a8:	mov    rbx,QWORD PTR [rax+0x8]
   1400031ac:	mov    rcx,rbx
   1400031af:	call   QWORD PTR [rip+0x933b]        # 0x14000c4f0
   1400031b5:	mov    rcx,rdi
   1400031b8:	call   rbx
   1400031ba:	mov    rcx,QWORD PTR [rsp+0x40]
   1400031bf:	xor    rcx,rsp
   1400031c2:	call   0x140009e20
   1400031c7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400031cc:	mov    rdi,QWORD PTR [rsp+0x70]
   1400031d1:	add    rsp,0x50
   1400031d5:	pop    r14
   1400031d7:	ret    
   1400031d8:	int3   
   1400031d9:	int3   
   1400031da:	int3   
   1400031db:	int3   
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	mov    rax,rsp
   1400031e3:	mov    QWORD PTR [rax+0x10],rbx
   1400031e7:	mov    QWORD PTR [rax+0x18],rsi
   1400031eb:	mov    QWORD PTR [rax+0x20],rdi
   1400031ef:	push   rbp
   1400031f0:	push   r14
   1400031f2:	push   r15
   1400031f4:	lea    rbp,[rax-0xb8]
   1400031fb:	sub    rsp,0x1a0
   140003202:	mov    rax,QWORD PTR [rip+0xcdff]        # 0x140010008
   140003209:	xor    rax,rsp
   14000320c:	mov    QWORD PTR [rbp+0x90],rax
   140003213:	mov    rbx,QWORD PTR [rcx+0x30]
   140003217:	xor    r14d,r14d
   14000321a:	mov    rdi,rcx
   14000321d:	mov    eax,DWORD PTR [rbx+0x54]
   140003220:	test   eax,eax
   140003222:	jns    0x14000322f
   140003224:	cmp    eax,DWORD PTR [rbx+0x5c]
   140003227:	jne    0x14000322f
   140003229:	add    rbx,0x58
   14000322d:	jmp    0x140003232
   14000322f:	mov    rbx,r14
   140003232:	lea    rdx,[rsp+0x38]
   140003237:	call   0x140007034
   14000323c:	mov    rax,QWORD PTR [rdi+0x30]
   140003240:	mov    rcx,QWORD PTR [rsp+0x38]
   140003245:	mov    DWORD PTR [rax],0x2
   14000324b:	test   rbx,rbx
   14000324e:	je     0x1400034ba
   140003254:	test   rcx,rcx
   140003257:	je     0x14000325f
   140003259:	call   QWORD PTR [rip+0x8e21]        # 0x14000c080
   14000325f:	mov    r11,QWORD PTR [rdi+0x30]
   140003263:	mov    r10,QWORD PTR [r11+0x28]
   140003267:	cmp    DWORD PTR [r10],0x5
   14000326b:	jbe    0x14000354c
   140003271:	movabs rcx,0x200000000000
   14000327b:	test   QWORD PTR [r10+0x10],rcx
   14000327f:	je     0x14000354c
   140003285:	mov    rax,QWORD PTR [r10+0x18]
   140003289:	and    rax,rcx
   14000328c:	cmp    rax,QWORD PTR [r10+0x18]
   140003290:	jne    0x14000354c
   140003296:	mov    eax,DWORD PTR [rbx+0x4]
   140003299:	lea    r8,[rip+0x94d0]        # 0x14000c770
   1400032a0:	mov    rcx,QWORD PTR [rbx+0x30]
   1400032a4:	or     r15,0xffffffffffffffff
   1400032a8:	mov    DWORD PTR [rsp+0x40],eax
   1400032ac:	lea    rax,[rsp+0x40]
   1400032b1:	mov    QWORD PTR [rsp+0x70],rax
   1400032b6:	mov    rax,r14
   1400032b9:	mov    QWORD PTR [rsp+0x78],0x4
   1400032c2:	mov    rdx,r8
   1400032c5:	test   rcx,rcx
   1400032c8:	je     0x1400032d9
   1400032ca:	mov    rdx,rcx
   1400032cd:	mov    rax,r15
   1400032d0:	inc    rax
   1400032d3:	cmp    BYTE PTR [rcx+rax*1],r14b
   1400032d7:	jne    0x1400032d0
   1400032d9:	mov    rcx,QWORD PTR [rbx+0x78]
   1400032dd:	inc    eax
   1400032df:	mov    DWORD PTR [rbp-0x78],eax
   1400032e2:	lea    rax,[rbx+0x38]
   1400032e6:	mov    QWORD PTR [rbp-0x70],rax
   1400032ea:	mov    rax,r14
   1400032ed:	mov    QWORD PTR [rbp-0x80],rdx
   1400032f1:	mov    rdx,r8
   1400032f4:	mov    DWORD PTR [rbp-0x74],r14d
   1400032f8:	mov    QWORD PTR [rbp-0x68],0x4
   140003300:	test   rcx,rcx
   140003303:	je     0x140003314
   140003305:	mov    rdx,rcx
   140003308:	mov    rax,r15
   14000330b:	inc    rax
   14000330e:	cmp    BYTE PTR [rcx+rax*1],r14b
   140003312:	jne    0x14000330b
   140003314:	mov    rcx,QWORD PTR [rbx+0x10]
   140003318:	lea    r9,[rip+0x9455]        # 0x14000c774
   14000331f:	inc    eax
   140003321:	mov    QWORD PTR [rbp-0x60],rdx
   140003325:	mov    DWORD PTR [rbp-0x58],eax
   140003328:	mov    rdx,r9
   14000332b:	mov    eax,DWORD PTR [rbx]
   14000332d:	mov    DWORD PTR [rsp+0x48],eax
   140003331:	lea    rax,[rsp+0x48]
   140003336:	mov    QWORD PTR [rbp-0x50],rax
   14000333a:	mov    rax,r14
   14000333d:	mov    DWORD PTR [rbp-0x54],r14d
   140003341:	mov    QWORD PTR [rbp-0x48],0x4
   140003349:	test   rcx,rcx
   14000334c:	je     0x14000335e
   14000334e:	mov    rdx,rcx
   140003351:	mov    rax,r15
   140003354:	inc    rax
   140003357:	cmp    WORD PTR [rcx+rax*2],r14w
   14000335c:	jne    0x140003354
   14000335e:	mov    rcx,QWORD PTR [rbx+0x40]
   140003362:	lea    eax,[rax*2+0x2]
   140003369:	mov    DWORD PTR [rbp-0x38],eax
   14000336c:	mov    eax,DWORD PTR [rbx+0x18]
   14000336f:	mov    DWORD PTR [rsp+0x44],eax
   140003373:	lea    rax,[rsp+0x44]
   140003378:	mov    QWORD PTR [rbp-0x30],rax
   14000337c:	mov    rax,r14
   14000337f:	mov    QWORD PTR [rbp-0x40],rdx
   140003383:	mov    rdx,r8
   140003386:	mov    DWORD PTR [rbp-0x34],r14d
   14000338a:	mov    QWORD PTR [rbp-0x28],0x4
   140003392:	test   rcx,rcx
   140003395:	je     0x1400033a6
   140003397:	mov    rdx,rcx
   14000339a:	mov    rax,r15
   14000339d:	inc    rax
   1400033a0:	cmp    BYTE PTR [rcx+rax*1],r14b
   1400033a4:	jne    0x14000339d
   1400033a6:	mov    rcx,QWORD PTR [rbx+0x50]
   1400033aa:	inc    eax
   1400033ac:	mov    DWORD PTR [rbp-0x18],eax
   1400033af:	mov    eax,DWORD PTR [rbx+0x48]
   1400033b2:	mov    DWORD PTR [rsp+0x30],eax
   1400033b6:	lea    rax,[rsp+0x30]
   1400033bb:	mov    QWORD PTR [rbp-0x10],rax
   1400033bf:	mov    rax,r14
   1400033c2:	mov    QWORD PTR [rbp-0x20],rdx
   1400033c6:	mov    rdx,r8
   1400033c9:	mov    DWORD PTR [rbp-0x14],r14d
   1400033cd:	mov    QWORD PTR [rbp-0x8],0x4
   1400033d5:	test   rcx,rcx
   1400033d8:	je     0x1400033e9
   1400033da:	mov    rdx,rcx
   1400033dd:	mov    rax,r15
   1400033e0:	inc    rax
   1400033e3:	cmp    BYTE PTR [rcx+rax*1],r14b
   1400033e7:	jne    0x1400033e0
   1400033e9:	mov    rcx,QWORD PTR [rbx+0x58]
   1400033ed:	inc    eax
   1400033ef:	mov    DWORD PTR [rbp+0x8],eax
   1400033f2:	mov    rax,r14
   1400033f5:	mov    QWORD PTR [rbp+0x0],rdx
   1400033f9:	mov    rdx,r9
   1400033fc:	mov    DWORD PTR [rbp+0xc],r14d
   140003400:	test   rcx,rcx
   140003403:	je     0x140003415
   140003405:	mov    rdx,rcx
   140003408:	mov    rax,r15
   14000340b:	inc    rax
   14000340e:	cmp    WORD PTR [rcx+rax*2],r14w
   140003413:	jne    0x14000340b
   140003415:	mov    rcx,QWORD PTR [rbx+0x68]
   140003419:	lea    eax,[rax*2+0x2]
   140003420:	mov    DWORD PTR [rbp+0x18],eax
   140003423:	mov    eax,DWORD PTR [rbx+0x60]
   140003426:	mov    DWORD PTR [rsp+0x38],eax
   14000342a:	lea    rax,[rsp+0x38]
   14000342f:	mov    QWORD PTR [rbp+0x20],rax
   140003433:	mov    rax,r14
   140003436:	mov    QWORD PTR [rbp+0x10],rdx
   14000343a:	mov    DWORD PTR [rbp+0x1c],r14d
   14000343e:	mov    QWORD PTR [rbp+0x28],0x4
   140003446:	test   rcx,rcx
   140003449:	je     0x14000345a
   14000344b:	mov    r8,rcx
   14000344e:	mov    rax,r15
   140003451:	inc    rax
   140003454:	cmp    BYTE PTR [rcx+rax*1],r14b
   140003458:	jne    0x140003451
   14000345a:	mov    rcx,QWORD PTR [rbx+0x70]
   14000345e:	inc    eax
   140003460:	mov    DWORD PTR [rbp+0x38],eax
   140003463:	mov    rax,r14
   140003466:	mov    QWORD PTR [rbp+0x30],r8
   14000346a:	mov    DWORD PTR [rbp+0x3c],r14d
   14000346e:	test   rcx,rcx
   140003471:	je     0x140003483
   140003473:	mov    r9,rcx
   140003476:	mov    rax,r15
   140003479:	inc    rax
   14000347c:	cmp    WORD PTR [rcx+rax*2],r14w
   140003481:	jne    0x140003479
   140003483:	lea    eax,[rax*2+0x2]
   14000348a:	mov    QWORD PTR [rbp+0x40],r9
   14000348e:	mov    DWORD PTR [rbp+0x48],eax
   140003491:	mov    DWORD PTR [rbp+0x4c],r14d
   140003495:	lea    rax,[rsp+0x50]
   14000349a:	mov    rcx,r10
   14000349d:	mov    QWORD PTR [rsp+0x28],rax
   1400034a2:	lea    r8,[r11+0x8]
   1400034a6:	mov    DWORD PTR [rsp+0x20],0x10
   1400034ae:	lea    rdx,[rip+0x9f34]        # 0x14000d3e9
   1400034b5:	jmp    0x140003544
   1400034ba:	test   rcx,rcx
   1400034bd:	je     0x1400034c5
   1400034bf:	call   QWORD PTR [rip+0x8bbb]        # 0x14000c080
   1400034c5:	mov    rdx,QWORD PTR [rdi+0x30]
   1400034c9:	mov    rbx,QWORD PTR [rdx+0x28]
   1400034cd:	cmp    DWORD PTR [rbx],0x5
   1400034d0:	jbe    0x14000354c
   1400034d2:	movabs rcx,0x200000000000
   1400034dc:	test   QWORD PTR [rbx+0x10],rcx
   1400034e0:	je     0x14000354c
   1400034e2:	mov    rax,QWORD PTR [rbx+0x18]
   1400034e6:	and    rax,rcx
   1400034e9:	cmp    rax,QWORD PTR [rbx+0x18]
   1400034ed:	jne    0x14000354c
   1400034ef:	mov    eax,DWORD PTR [rdx+0x54]
   1400034f2:	mov    esi,0x4
   1400034f7:	mov    DWORD PTR [rsp+0x38],eax
   1400034fb:	lea    rax,[rsp+0x38]
   140003500:	mov    QWORD PTR [rbp+0x70],rax
   140003504:	mov    QWORD PTR [rbp+0x78],rsi
   140003508:	call   QWORD PTR [rip+0x8bf2]        # 0x14000c100
   14000350e:	mov    DWORD PTR [rsp+0x30],eax
   140003512:	lea    rax,[rsp+0x30]
   140003517:	mov    QWORD PTR [rbp+0x80],rax
   14000351e:	mov    QWORD PTR [rbp+0x88],rsi
   140003525:	mov    r8,QWORD PTR [rdi+0x30]
   140003529:	lea    rax,[rbp+0x50]
   14000352d:	mov    QWORD PTR [rsp+0x28],rax
   140003532:	lea    rdx,[rip+0x9a92]        # 0x14000cfcb
   140003539:	mov    DWORD PTR [rsp+0x20],esi
   14000353d:	add    r8,0x8
   140003541:	mov    rcx,rbx
   140003544:	xor    r9d,r9d
   140003547:	call   0x1400010dc
   14000354c:	cmp    DWORD PTR [rdi+0x20],r14d
   140003550:	je     0x1400035a2
   140003552:	lea    rbx,[rdi+0x8]
   140003556:	call   QWORD PTR [rip+0x8ba4]        # 0x14000c100
   14000355c:	cmp    DWORD PTR [rbx+0x18],eax
   14000355f:	je     0x140003573
   140003561:	mov    rcx,QWORD PTR [rbp+0xb8]
   140003568:	mov    r9d,0x8007029c
   14000356e:	call   0x14000287c
   140003573:	mov    rax,QWORD PTR [rbx]
   140003576:	mov    DWORD PTR [rbx+0x18],r14d
   14000357a:	jmp    0x14000358e
   14000357c:	mov    rax,QWORD PTR [rbx]
   14000357f:	mov    rax,QWORD PTR [rax]
   140003582:	cmp    rax,rbx
   140003585:	je     0x140003595
   140003587:	add    rax,0x10
   14000358b:	mov    QWORD PTR [rbx],rax
   14000358e:	cmp    QWORD PTR [rax],r14
   140003591:	jne    0x14000357c
   140003593:	jmp    0x14000359f
   140003595:	mov    rcx,QWORD PTR [rbx]
   140003598:	mov    rax,QWORD PTR [rbx+0x10]
   14000359c:	mov    QWORD PTR [rcx],rax
   14000359f:	mov    QWORD PTR [rbx],r14
   1400035a2:	mov    rcx,QWORD PTR [rbp+0x90]
   1400035a9:	xor    rcx,rsp
   1400035ac:	call   0x140009e20
   1400035b1:	lea    r11,[rsp+0x1a0]
   1400035b9:	mov    rbx,QWORD PTR [r11+0x28]
   1400035bd:	mov    rsi,QWORD PTR [r11+0x30]
   1400035c1:	mov    rdi,QWORD PTR [r11+0x38]
   1400035c5:	mov    rsp,r11
   1400035c8:	pop    r15
   1400035ca:	pop    r14
   1400035cc:	pop    rbp
   1400035cd:	ret    
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	int3   
   1400035d1:	int3   
   1400035d2:	int3   
   1400035d3:	int3   
   1400035d4:	int3   
   1400035d5:	int3   
   1400035d6:	int3   
   1400035d7:	int3   
   1400035d8:	int3   
   1400035d9:	int3   
   1400035da:	int3   
   1400035db:	int3   
   1400035dc:	int3   
   1400035dd:	int3   
   1400035de:	int3   
   1400035df:	int3   
   1400035e0:	mov    eax,DWORD PTR [rip+0xca8a]        # 0x140010070
   1400035e6:	cmp    eax,edx
   1400035e8:	mov    DWORD PTR [rip+0xca82],edx        # 0x140010070
   1400035ee:	sete   al
   1400035f1:	ret    
   1400035f2:	int3   
   1400035f3:	int3   
   1400035f4:	int3   
   1400035f5:	int3   
   1400035f6:	int3   
   1400035f7:	int3   
   1400035f8:	mov    QWORD PTR [rsp+0x10],rbx
   1400035fd:	mov    QWORD PTR [rsp+0x18],rbp
   140003602:	push   rdi
   140003603:	sub    rsp,0x70
   140003607:	mov    rax,QWORD PTR [rip+0xc9fa]        # 0x140010008
   14000360e:	xor    rax,rsp
   140003611:	mov    QWORD PTR [rsp+0x68],rax
   140003616:	lea    rdx,[rsp+0x30]
   14000361b:	mov    rbx,rcx
   14000361e:	call   0x140007034
   140003623:	mov    rdi,QWORD PTR [rbx+0x30]
   140003627:	movabs rbp,0x200000000000
   140003631:	mov    rcx,QWORD PTR [rdi+0x28]
   140003635:	cmp    DWORD PTR [rcx],0x5
   140003638:	jbe    0x14000365e
   14000363a:	test   QWORD PTR [rcx+0x10],rbp
   14000363e:	je     0x14000365e
   140003640:	mov    rax,QWORD PTR [rcx+0x18]
   140003644:	and    rax,rbp
   140003647:	cmp    rax,QWORD PTR [rcx+0x18]
   14000364b:	jne    0x14000365e
   14000364d:	lea    rdx,[rdi+0x8]
   140003651:	mov    ecx,0x3
   140003656:	call   QWORD PTR [rip+0x89cc]        # 0x14000c028
   14000365c:	jmp    0x140003664
   14000365e:	xor    eax,eax
   140003660:	mov    QWORD PTR [rdi+0x8],rax
   140003664:	mov    rcx,QWORD PTR [rsp+0x30]
   140003669:	mov    DWORD PTR [rdi],0x1
   14000366f:	test   rcx,rcx
   140003672:	je     0x14000367a
   140003674:	call   QWORD PTR [rip+0x8a06]        # 0x14000c080
   14000367a:	mov    rax,QWORD PTR [rbx+0x30]
   14000367e:	mov    rdi,QWORD PTR [rax+0x28]
   140003682:	cmp    DWORD PTR [rdi],0x5
   140003685:	jbe    0x140003715
   14000368b:	test   QWORD PTR [rdi+0x10],rbp
   14000368f:	je     0x140003715
   140003695:	mov    rax,QWORD PTR [rdi+0x18]
   140003699:	and    rax,rbp
   14000369c:	cmp    rax,QWORD PTR [rdi+0x18]
   1400036a0:	jne    0x140003715
   1400036a2:	call   QWORD PTR [rip+0x8a58]        # 0x14000c100
   1400036a8:	and    DWORD PTR [rsp+0x64],0x0
   1400036ad:	mov    DWORD PTR [rsp+0x30],eax
   1400036b1:	lea    rax,[rsp+0x30]
   1400036b6:	mov    QWORD PTR [rsp+0x58],rax
   1400036bb:	mov    DWORD PTR [rsp+0x60],0x4
   1400036c3:	mov    r8,QWORD PTR [rbx+0x30]
   1400036c7:	cmp    BYTE PTR [r8+0x4],0x0
   1400036cc:	je     0x1400036ed
   1400036ce:	lea    r9,[r8+0x18]
   1400036d2:	cmp    DWORD PTR [r9],0x0
   1400036d6:	jne    0x1400036f0
   1400036d8:	cmp    DWORD PTR [r9+0x4],0x0
   1400036dd:	jne    0x1400036f0
   1400036df:	cmp    DWORD PTR [r9+0x8],0x0
   1400036e4:	jne    0x1400036f0
   1400036e6:	cmp    DWORD PTR [r9+0xc],0x0
   1400036eb:	jne    0x1400036f0
   1400036ed:	xor    r9d,r9d
   1400036f0:	lea    rax,[rsp+0x38]
   1400036f5:	add    r8,0x8
   1400036f9:	mov    QWORD PTR [rsp+0x28],rax
   1400036fe:	lea    rdx,[rip+0xa43f]        # 0x14000db44
   140003705:	mov    rcx,rdi
   140003708:	mov    DWORD PTR [rsp+0x20],0x3
   140003710:	call   0x1400010dc
   140003715:	cmp    DWORD PTR [rbx+0x20],0x0
   140003719:	jne    0x140003747
   14000371b:	add    rbx,0x8
   14000371f:	cmp    DWORD PTR [rbx+0x18],0x0
   140003723:	jne    0x140003766
   140003725:	mov    dl,0x1
   140003727:	call   0x1400063c4
   14000372c:	mov    QWORD PTR [rbx],rax
   14000372f:	test   rax,rax
   140003732:	je     0x140003747
   140003734:	mov    rcx,QWORD PTR [rax]
   140003737:	mov    QWORD PTR [rbx+0x10],rcx
   14000373b:	mov    QWORD PTR [rax],rbx
   14000373e:	call   QWORD PTR [rip+0x89bc]        # 0x14000c100
   140003744:	mov    DWORD PTR [rbx+0x18],eax
   140003747:	mov    rcx,QWORD PTR [rsp+0x68]
   14000374c:	xor    rcx,rsp
   14000374f:	call   0x140009e20
   140003754:	lea    r11,[rsp+0x70]
   140003759:	mov    rbx,QWORD PTR [r11+0x18]
   14000375d:	mov    rbp,QWORD PTR [r11+0x20]
   140003761:	mov    rsp,r11
   140003764:	pop    rdi
   140003765:	ret    
   140003766:	mov    rcx,QWORD PTR [rsp+0x78]
   14000376b:	call   0x1400028c4
   140003770:	int3   
   140003771:	int3   
   140003772:	int3   
   140003773:	int3   
   140003774:	int3   
   140003775:	int3   
   140003776:	int3   
   140003777:	int3   
   140003778:	mov    rax,rsp
   14000377b:	mov    DWORD PTR [rax+0x20],r9d
   14000377f:	mov    DWORD PTR [rax+0x18],r8d
   140003783:	mov    DWORD PTR [rax+0x10],edx
   140003786:	push   rbp
   140003787:	push   rbx
   140003788:	push   rsi
   140003789:	push   rdi
   14000378a:	push   r14
   14000378c:	push   r15
   14000378e:	lea    rbp,[rax-0x198]
   140003795:	sub    rsp,0x268
   14000379c:	mov    rax,QWORD PTR [rip+0xc865]        # 0x140010008
   1400037a3:	xor    rax,rsp
   1400037a6:	mov    QWORD PTR [rbp+0x150],rax
   1400037ad:	mov    rbx,QWORD PTR [rcx+0x30]
   1400037b1:	xor    r14d,r14d
   1400037b4:	mov    rdi,rcx
   1400037b7:	mov    eax,DWORD PTR [rbx+0x54]
   1400037ba:	test   eax,eax
   1400037bc:	jns    0x1400037c9
   1400037be:	cmp    eax,DWORD PTR [rbx+0x5c]
   1400037c1:	jne    0x1400037c9
   1400037c3:	add    rbx,0x58
   1400037c7:	jmp    0x1400037cc
   1400037c9:	mov    rbx,r14
   1400037cc:	lea    rdx,[rsp+0x38]
   1400037d1:	call   0x140007034
   1400037d6:	mov    rax,QWORD PTR [rdi+0x30]
   1400037da:	mov    rcx,QWORD PTR [rsp+0x38]
   1400037df:	mov    DWORD PTR [rax],0x2
   1400037e5:	test   rbx,rbx
   1400037e8:	je     0x140003ad8
   1400037ee:	test   rcx,rcx
   1400037f1:	je     0x1400037f9
   1400037f3:	call   QWORD PTR [rip+0x8887]        # 0x14000c080
   1400037f9:	mov    r11,QWORD PTR [rdi+0x30]
   1400037fd:	mov    r10,QWORD PTR [r11+0x28]
   140003801:	cmp    DWORD PTR [r10],0x5
   140003805:	jbe    0x140003c1c
   14000380b:	movabs rcx,0x200000000000
   140003815:	test   QWORD PTR [r10+0x10],rcx
   140003819:	je     0x140003c1c
   14000381f:	mov    rax,QWORD PTR [r10+0x18]
   140003823:	and    rax,rcx
   140003826:	cmp    rax,QWORD PTR [r10+0x18]
   14000382a:	jne    0x140003c1c
   140003830:	mov    eax,DWORD PTR [rbx+0x4]
   140003833:	lea    r8,[rip+0x8f36]        # 0x14000c770
   14000383a:	mov    rcx,QWORD PTR [rbx+0x30]
   14000383e:	or     r15,0xffffffffffffffff
   140003842:	mov    DWORD PTR [rsp+0x40],eax
   140003846:	lea    rax,[rsp+0x40]
   14000384b:	mov    QWORD PTR [rsp+0x70],rax
   140003850:	mov    rax,r14
   140003853:	mov    QWORD PTR [rsp+0x78],0x4
   14000385c:	mov    rdx,r8
   14000385f:	test   rcx,rcx
   140003862:	je     0x140003873
   140003864:	mov    rdx,rcx
   140003867:	mov    rax,r15
   14000386a:	inc    rax
   14000386d:	cmp    BYTE PTR [rcx+rax*1],r14b
   140003871:	jne    0x14000386a
   140003873:	mov    rcx,QWORD PTR [rbx+0x78]
   140003877:	inc    eax
   140003879:	mov    DWORD PTR [rbp-0x78],eax
   14000387c:	lea    rax,[rbx+0x38]
   140003880:	mov    QWORD PTR [rbp-0x70],rax
   140003884:	mov    rax,r14
   140003887:	mov    QWORD PTR [rbp-0x80],rdx
   14000388b:	mov    rdx,r8
   14000388e:	mov    DWORD PTR [rbp-0x74],r14d
   140003892:	mov    QWORD PTR [rbp-0x68],0x4
   14000389a:	test   rcx,rcx
   14000389d:	je     0x1400038ae
   14000389f:	mov    rdx,rcx
   1400038a2:	mov    rax,r15
   1400038a5:	inc    rax
   1400038a8:	cmp    BYTE PTR [rcx+rax*1],r14b
   1400038ac:	jne    0x1400038a5
   1400038ae:	mov    rcx,QWORD PTR [rbx+0x10]
   1400038b2:	lea    r9,[rip+0x8ebb]        # 0x14000c774
   1400038b9:	inc    eax
   1400038bb:	mov    QWORD PTR [rbp-0x60],rdx
   1400038bf:	mov    DWORD PTR [rbp-0x58],eax
   1400038c2:	mov    rdx,r9
   1400038c5:	mov    eax,DWORD PTR [rbx]
   1400038c7:	mov    DWORD PTR [rsp+0x48],eax
   1400038cb:	lea    rax,[rsp+0x48]
   1400038d0:	mov    QWORD PTR [rbp-0x50],rax
   1400038d4:	mov    rax,r14
   1400038d7:	mov    DWORD PTR [rbp-0x54],r14d
   1400038db:	mov    QWORD PTR [rbp-0x48],0x4
   1400038e3:	test   rcx,rcx
   1400038e6:	je     0x1400038f8
   1400038e8:	mov    rdx,rcx
   1400038eb:	mov    rax,r15
   1400038ee:	inc    rax
   1400038f1:	cmp    WORD PTR [rcx+rax*2],r14w
   1400038f6:	jne    0x1400038ee
   1400038f8:	mov    rcx,QWORD PTR [rbx+0x40]
   1400038fc:	lea    eax,[rax*2+0x2]
   140003903:	mov    DWORD PTR [rbp-0x38],eax
   140003906:	mov    eax,DWORD PTR [rbx+0x18]
   140003909:	mov    DWORD PTR [rsp+0x44],eax
   14000390d:	lea    rax,[rsp+0x44]
   140003912:	mov    QWORD PTR [rbp-0x30],rax
   140003916:	mov    rax,r14
   140003919:	mov    QWORD PTR [rbp-0x40],rdx
   14000391d:	mov    rdx,r8
   140003920:	mov    DWORD PTR [rbp-0x34],r14d
   140003924:	mov    QWORD PTR [rbp-0x28],0x4
   14000392c:	test   rcx,rcx
   14000392f:	je     0x140003940
   140003931:	mov    rdx,rcx
   140003934:	mov    rax,r15
   140003937:	inc    rax
   14000393a:	cmp    BYTE PTR [rcx+rax*1],r14b
   14000393e:	jne    0x140003937
   140003940:	mov    rcx,QWORD PTR [rbx+0x50]
   140003944:	inc    eax
   140003946:	mov    DWORD PTR [rbp-0x18],eax
   140003949:	mov    eax,DWORD PTR [rbx+0x48]
   14000394c:	mov    DWORD PTR [rsp+0x30],eax
   140003950:	lea    rax,[rsp+0x30]
   140003955:	mov    QWORD PTR [rbp-0x10],rax
   140003959:	mov    rax,r14
   14000395c:	mov    QWORD PTR [rbp-0x20],rdx
   140003960:	mov    rdx,r8
   140003963:	mov    DWORD PTR [rbp-0x14],r14d
   140003967:	mov    QWORD PTR [rbp-0x8],0x4
   14000396f:	test   rcx,rcx
   140003972:	je     0x140003983
   140003974:	mov    rdx,rcx
   140003977:	mov    rax,r15
   14000397a:	inc    rax
   14000397d:	cmp    BYTE PTR [rcx+rax*1],r14b
   140003981:	jne    0x14000397a
   140003983:	mov    rcx,QWORD PTR [rbx+0x58]
   140003987:	inc    eax
   140003989:	mov    DWORD PTR [rbp+0x8],eax
   14000398c:	mov    rax,r14
   14000398f:	mov    QWORD PTR [rbp+0x0],rdx
   140003993:	mov    rdx,r9
   140003996:	mov    DWORD PTR [rbp+0xc],r14d
   14000399a:	test   rcx,rcx
   14000399d:	je     0x1400039af
   14000399f:	mov    rdx,rcx
   1400039a2:	mov    rax,r15
   1400039a5:	inc    rax
   1400039a8:	cmp    WORD PTR [rcx+rax*2],r14w
   1400039ad:	jne    0x1400039a5
   1400039af:	mov    rcx,QWORD PTR [rbx+0x68]
   1400039b3:	lea    eax,[rax*2+0x2]
   1400039ba:	mov    DWORD PTR [rbp+0x18],eax
   1400039bd:	mov    eax,DWORD PTR [rbx+0x60]
   1400039c0:	mov    DWORD PTR [rsp+0x38],eax
   1400039c4:	lea    rax,[rsp+0x38]
   1400039c9:	mov    QWORD PTR [rbp+0x20],rax
   1400039cd:	mov    rax,r14
   1400039d0:	mov    QWORD PTR [rbp+0x10],rdx
   1400039d4:	mov    DWORD PTR [rbp+0x1c],r14d
   1400039d8:	mov    QWORD PTR [rbp+0x28],0x4
   1400039e0:	test   rcx,rcx
   1400039e3:	je     0x1400039f4
   1400039e5:	mov    r8,rcx
   1400039e8:	mov    rax,r15
   1400039eb:	inc    rax
   1400039ee:	cmp    BYTE PTR [rcx+rax*1],r14b
   1400039f2:	jne    0x1400039eb
   1400039f4:	mov    rcx,QWORD PTR [rbx+0x70]
   1400039f8:	inc    eax
   1400039fa:	mov    DWORD PTR [rbp+0x38],eax
   1400039fd:	mov    rax,r14
   140003a00:	mov    QWORD PTR [rbp+0x30],r8
   140003a04:	mov    DWORD PTR [rbp+0x3c],r14d
   140003a08:	test   rcx,rcx
   140003a0b:	je     0x140003a1d
   140003a0d:	mov    r9,rcx
   140003a10:	mov    rax,r15
   140003a13:	inc    rax
   140003a16:	cmp    WORD PTR [rcx+rax*2],r14w
   140003a1b:	jne    0x140003a13
   140003a1d:	lea    eax,[rax*2+0x2]
   140003a24:	mov    QWORD PTR [rbp+0x40],r9
   140003a28:	mov    DWORD PTR [rbp+0x48],eax
   140003a2b:	lea    rax,[rbp+0x1a8]
   140003a32:	mov    QWORD PTR [rbp+0x50],rax
   140003a36:	lea    rax,[rbp+0x1b0]
   140003a3d:	mov    QWORD PTR [rbp+0x60],rax
   140003a41:	lea    rax,[rbp+0x1b8]
   140003a48:	mov    QWORD PTR [rbp+0x70],rax
   140003a4c:	lea    rax,[rbp+0x1c0]
   140003a53:	mov    QWORD PTR [rbp+0x80],rax
   140003a5a:	lea    rax,[rbp+0x1c8]
   140003a61:	mov    QWORD PTR [rbp+0x90],rax
   140003a68:	lea    rax,[rbp+0x1d0]
   140003a6f:	mov    QWORD PTR [rbp+0xa0],rax
   140003a76:	mov    DWORD PTR [rbp+0x4c],r14d
   140003a7a:	mov    QWORD PTR [rbp+0x58],0x4
   140003a82:	mov    QWORD PTR [rbp+0x68],0x4
   140003a8a:	mov    QWORD PTR [rbp+0x78],0x4
   140003a92:	mov    QWORD PTR [rbp+0x88],0x4
   140003a9d:	mov    QWORD PTR [rbp+0x98],0x4
   140003aa8:	mov    QWORD PTR [rbp+0xa8],0x4
   140003ab3:	lea    rax,[rsp+0x50]
   140003ab8:	mov    rcx,r10
   140003abb:	mov    QWORD PTR [rsp+0x28],rax
   140003ac0:	lea    r8,[r11+0x8]
   140003ac4:	mov    DWORD PTR [rsp+0x20],0x16
   140003acc:	lea    rdx,[rip+0x9bf3]        # 0x14000d6c6
   140003ad3:	jmp    0x140003c14
   140003ad8:	test   rcx,rcx
   140003adb:	je     0x140003ae3
   140003add:	call   QWORD PTR [rip+0x859d]        # 0x14000c080
   140003ae3:	mov    rdx,QWORD PTR [rdi+0x30]
   140003ae7:	mov    rbx,QWORD PTR [rdx+0x28]
   140003aeb:	cmp    DWORD PTR [rbx],0x5
   140003aee:	jbe    0x140003c1c
   140003af4:	movabs rcx,0x200000000000
   140003afe:	test   QWORD PTR [rbx+0x10],rcx
   140003b02:	je     0x140003c1c
   140003b08:	mov    rax,QWORD PTR [rbx+0x18]
   140003b0c:	and    rax,rcx
   140003b0f:	cmp    rax,QWORD PTR [rbx+0x18]
   140003b13:	jne    0x140003c1c
   140003b19:	mov    eax,DWORD PTR [rdx+0x54]
   140003b1c:	mov    DWORD PTR [rsp+0x38],eax
   140003b20:	lea    rax,[rsp+0x38]
   140003b25:	mov    QWORD PTR [rbp+0xd0],rax
   140003b2c:	mov    QWORD PTR [rbp+0xd8],0x4
   140003b37:	call   QWORD PTR [rip+0x85c3]        # 0x14000c100
   140003b3d:	mov    DWORD PTR [rsp+0x30],eax
   140003b41:	lea    rax,[rsp+0x30]
   140003b46:	mov    QWORD PTR [rbp+0xe0],rax
   140003b4d:	lea    rax,[rbp+0x1a8]
   140003b54:	mov    QWORD PTR [rbp+0xf0],rax
   140003b5b:	lea    rax,[rbp+0x1b0]
   140003b62:	mov    QWORD PTR [rbp+0x100],rax
   140003b69:	lea    rax,[rbp+0x1b8]
   140003b70:	mov    QWORD PTR [rbp+0x110],rax
   140003b77:	lea    rax,[rbp+0x1c0]
   140003b7e:	mov    QWORD PTR [rbp+0x120],rax
   140003b85:	lea    rax,[rbp+0x1c8]
   140003b8c:	mov    QWORD PTR [rbp+0x130],rax
   140003b93:	lea    rax,[rbp+0x1d0]
   140003b9a:	mov    QWORD PTR [rbp+0x140],rax
   140003ba1:	mov    QWORD PTR [rbp+0xe8],0x4
   140003bac:	mov    QWORD PTR [rbp+0xf8],0x4
   140003bb7:	mov    QWORD PTR [rbp+0x108],0x4
   140003bc2:	mov    QWORD PTR [rbp+0x118],0x4
   140003bcd:	mov    QWORD PTR [rbp+0x128],0x4
   140003bd8:	mov    QWORD PTR [rbp+0x138],0x4
   140003be3:	mov    QWORD PTR [rbp+0x148],0x4
   140003bee:	mov    r8,QWORD PTR [rdi+0x30]
   140003bf2:	lea    rax,[rbp+0xb0]
   140003bf9:	mov    QWORD PTR [rsp+0x28],rax
   140003bfe:	lea    rdx,[rip+0x9e9e]        # 0x14000daa3
   140003c05:	mov    DWORD PTR [rsp+0x20],0xa
   140003c0d:	add    r8,0x8
   140003c11:	mov    rcx,rbx
   140003c14:	xor    r9d,r9d
   140003c17:	call   0x1400010dc
   140003c1c:	cmp    DWORD PTR [rdi+0x20],r14d
   140003c20:	je     0x140003c72
   140003c22:	lea    rbx,[rdi+0x8]
   140003c26:	call   QWORD PTR [rip+0x84d4]        # 0x14000c100
   140003c2c:	cmp    DWORD PTR [rbx+0x18],eax
   140003c2f:	je     0x140003c43
   140003c31:	mov    rcx,QWORD PTR [rbp+0x198]
   140003c38:	mov    r9d,0x8007029c
   140003c3e:	call   0x14000287c
   140003c43:	mov    rax,QWORD PTR [rbx]
   140003c46:	mov    DWORD PTR [rbx+0x18],r14d
   140003c4a:	jmp    0x140003c5e
   140003c4c:	mov    rax,QWORD PTR [rbx]
   140003c4f:	mov    rax,QWORD PTR [rax]
   140003c52:	cmp    rax,rbx
   140003c55:	je     0x140003c65
   140003c57:	add    rax,0x10
   140003c5b:	mov    QWORD PTR [rbx],rax
   140003c5e:	cmp    QWORD PTR [rax],r14
   140003c61:	jne    0x140003c4c
   140003c63:	jmp    0x140003c6f
   140003c65:	mov    rcx,QWORD PTR [rbx]
   140003c68:	mov    rax,QWORD PTR [rbx+0x10]
   140003c6c:	mov    QWORD PTR [rcx],rax
   140003c6f:	mov    QWORD PTR [rbx],r14
   140003c72:	mov    rcx,QWORD PTR [rbp+0x150]
   140003c79:	xor    rcx,rsp
   140003c7c:	call   0x140009e20
   140003c81:	add    rsp,0x268
   140003c88:	pop    r15
   140003c8a:	pop    r14
   140003c8c:	pop    rdi
   140003c8d:	pop    rsi
   140003c8e:	pop    rbx
   140003c8f:	pop    rbp
   140003c90:	ret    
   140003c91:	int3   
   140003c92:	int3   
   140003c93:	int3   
   140003c94:	int3   
   140003c95:	int3   
   140003c96:	int3   
   140003c97:	int3   
   140003c98:	int3   
   140003c99:	int3   
   140003c9a:	int3   
   140003c9b:	int3   
   140003c9c:	int3   
   140003c9d:	int3   
   140003c9e:	int3   
   140003c9f:	int3   
   140003ca0:	mov    rax,rsp
   140003ca3:	mov    QWORD PTR [rax+0x10],rbx
   140003ca7:	mov    QWORD PTR [rax+0x18],rsi
   140003cab:	mov    QWORD PTR [rax+0x20],rdi
   140003caf:	push   rbp
   140003cb0:	push   r14
   140003cb2:	push   r15
   140003cb4:	lea    rbp,[rax-0xb8]
   140003cbb:	sub    rsp,0x1a0
   140003cc2:	mov    rax,QWORD PTR [rip+0xc33f]        # 0x140010008
   140003cc9:	xor    rax,rsp
   140003ccc:	mov    QWORD PTR [rbp+0x90],rax
   140003cd3:	mov    rbx,QWORD PTR [rcx+0x30]
   140003cd7:	xor    r14d,r14d
   140003cda:	mov    rdi,rcx
   140003cdd:	mov    eax,DWORD PTR [rbx+0x54]
   140003ce0:	test   eax,eax
   140003ce2:	jns    0x140003cef
   140003ce4:	cmp    eax,DWORD PTR [rbx+0x5c]
   140003ce7:	jne    0x140003cef
   140003ce9:	add    rbx,0x58
   140003ced:	jmp    0x140003cf2
   140003cef:	mov    rbx,r14
   140003cf2:	lea    rdx,[rsp+0x38]
   140003cf7:	call   0x140007034
   140003cfc:	mov    rax,QWORD PTR [rdi+0x30]
   140003d00:	mov    rcx,QWORD PTR [rsp+0x38]
   140003d05:	mov    DWORD PTR [rax],0x2
   140003d0b:	test   rbx,rbx
   140003d0e:	je     0x140003f7a
   140003d14:	test   rcx,rcx
   140003d17:	je     0x140003d1f
   140003d19:	call   QWORD PTR [rip+0x8361]        # 0x14000c080
   140003d1f:	mov    r11,QWORD PTR [rdi+0x30]
   140003d23:	mov    r10,QWORD PTR [r11+0x28]
   140003d27:	cmp    DWORD PTR [r10],0x5
   140003d2b:	jbe    0x14000400c
   140003d31:	movabs rcx,0x200000000000
   140003d3b:	test   QWORD PTR [r10+0x10],rcx
   140003d3f:	je     0x14000400c
   140003d45:	mov    rax,QWORD PTR [r10+0x18]
   140003d49:	and    rax,rcx
   140003d4c:	cmp    rax,QWORD PTR [r10+0x18]
   140003d50:	jne    0x14000400c
   140003d56:	mov    eax,DWORD PTR [rbx+0x4]
   140003d59:	lea    r8,[rip+0x8a10]        # 0x14000c770
   140003d60:	mov    rcx,QWORD PTR [rbx+0x30]
   140003d64:	or     r15,0xffffffffffffffff
   140003d68:	mov    DWORD PTR [rsp+0x40],eax
   140003d6c:	lea    rax,[rsp+0x40]
   140003d71:	mov    QWORD PTR [rsp+0x70],rax
   140003d76:	mov    rax,r14
   140003d79:	mov    QWORD PTR [rsp+0x78],0x4
   140003d82:	mov    rdx,r8
   140003d85:	test   rcx,rcx
   140003d88:	je     0x140003d99
   140003d8a:	mov    rdx,rcx
   140003d8d:	mov    rax,r15
   140003d90:	inc    rax
   140003d93:	cmp    BYTE PTR [rcx+rax*1],r14b
   140003d97:	jne    0x140003d90
   140003d99:	mov    rcx,QWORD PTR [rbx+0x78]
   140003d9d:	inc    eax
   140003d9f:	mov    DWORD PTR [rbp-0x78],eax
   140003da2:	lea    rax,[rbx+0x38]
   140003da6:	mov    QWORD PTR [rbp-0x70],rax
   140003daa:	mov    rax,r14
   140003dad:	mov    QWORD PTR [rbp-0x80],rdx
   140003db1:	mov    rdx,r8
   140003db4:	mov    DWORD PTR [rbp-0x74],r14d
   140003db8:	mov    QWORD PTR [rbp-0x68],0x4
   140003dc0:	test   rcx,rcx
   140003dc3:	je     0x140003dd4
   140003dc5:	mov    rdx,rcx
   140003dc8:	mov    rax,r15
   140003dcb:	inc    rax
   140003dce:	cmp    BYTE PTR [rcx+rax*1],r14b
   140003dd2:	jne    0x140003dcb
   140003dd4:	mov    rcx,QWORD PTR [rbx+0x10]
   140003dd8:	lea    r9,[rip+0x8995]        # 0x14000c774
   140003ddf:	inc    eax
   140003de1:	mov    QWORD PTR [rbp-0x60],rdx
   140003de5:	mov    DWORD PTR [rbp-0x58],eax
   140003de8:	mov    rdx,r9
   140003deb:	mov    eax,DWORD PTR [rbx]
   140003ded:	mov    DWORD PTR [rsp+0x48],eax
   140003df1:	lea    rax,[rsp+0x48]
   140003df6:	mov    QWORD PTR [rbp-0x50],rax
   140003dfa:	mov    rax,r14
   140003dfd:	mov    DWORD PTR [rbp-0x54],r14d
   140003e01:	mov    QWORD PTR [rbp-0x48],0x4
   140003e09:	test   rcx,rcx
   140003e0c:	je     0x140003e1e
   140003e0e:	mov    rdx,rcx
   140003e11:	mov    rax,r15
   140003e14:	inc    rax
   140003e17:	cmp    WORD PTR [rcx+rax*2],r14w
   140003e1c:	jne    0x140003e14
   140003e1e:	mov    rcx,QWORD PTR [rbx+0x40]
   140003e22:	lea    eax,[rax*2+0x2]
   140003e29:	mov    DWORD PTR [rbp-0x38],eax
   140003e2c:	mov    eax,DWORD PTR [rbx+0x18]
   140003e2f:	mov    DWORD PTR [rsp+0x44],eax
   140003e33:	lea    rax,[rsp+0x44]
   140003e38:	mov    QWORD PTR [rbp-0x30],rax
   140003e3c:	mov    rax,r14
   140003e3f:	mov    QWORD PTR [rbp-0x40],rdx
   140003e43:	mov    rdx,r8
   140003e46:	mov    DWORD PTR [rbp-0x34],r14d
   140003e4a:	mov    QWORD PTR [rbp-0x28],0x4
   140003e52:	test   rcx,rcx
   140003e55:	je     0x140003e66
   140003e57:	mov    rdx,rcx
   140003e5a:	mov    rax,r15
   140003e5d:	inc    rax
   140003e60:	cmp    BYTE PTR [rcx+rax*1],r14b
   140003e64:	jne    0x140003e5d
   140003e66:	mov    rcx,QWORD PTR [rbx+0x50]
   140003e6a:	inc    eax
   140003e6c:	mov    DWORD PTR [rbp-0x18],eax
   140003e6f:	mov    eax,DWORD PTR [rbx+0x48]
   140003e72:	mov    DWORD PTR [rsp+0x30],eax
   140003e76:	lea    rax,[rsp+0x30]
   140003e7b:	mov    QWORD PTR [rbp-0x10],rax
   140003e7f:	mov    rax,r14
   140003e82:	mov    QWORD PTR [rbp-0x20],rdx
   140003e86:	mov    rdx,r8
   140003e89:	mov    DWORD PTR [rbp-0x14],r14d
   140003e8d:	mov    QWORD PTR [rbp-0x8],0x4
   140003e95:	test   rcx,rcx
   140003e98:	je     0x140003ea9
   140003e9a:	mov    rdx,rcx
   140003e9d:	mov    rax,r15
   140003ea0:	inc    rax
   140003ea3:	cmp    BYTE PTR [rcx+rax*1],r14b
   140003ea7:	jne    0x140003ea0
   140003ea9:	mov    rcx,QWORD PTR [rbx+0x58]
   140003ead:	inc    eax
   140003eaf:	mov    DWORD PTR [rbp+0x8],eax
   140003eb2:	mov    rax,r14
   140003eb5:	mov    QWORD PTR [rbp+0x0],rdx
   140003eb9:	mov    rdx,r9
   140003ebc:	mov    DWORD PTR [rbp+0xc],r14d
   140003ec0:	test   rcx,rcx
   140003ec3:	je     0x140003ed5
   140003ec5:	mov    rdx,rcx
   140003ec8:	mov    rax,r15
   140003ecb:	inc    rax
   140003ece:	cmp    WORD PTR [rcx+rax*2],r14w
   140003ed3:	jne    0x140003ecb
   140003ed5:	mov    rcx,QWORD PTR [rbx+0x68]
   140003ed9:	lea    eax,[rax*2+0x2]
   140003ee0:	mov    DWORD PTR [rbp+0x18],eax
   140003ee3:	mov    eax,DWORD PTR [rbx+0x60]
   140003ee6:	mov    DWORD PTR [rsp+0x38],eax
   140003eea:	lea    rax,[rsp+0x38]
   140003eef:	mov    QWORD PTR [rbp+0x20],rax
   140003ef3:	mov    rax,r14
   140003ef6:	mov    QWORD PTR [rbp+0x10],rdx
   140003efa:	mov    DWORD PTR [rbp+0x1c],r14d
   140003efe:	mov    QWORD PTR [rbp+0x28],0x4
   140003f06:	test   rcx,rcx
   140003f09:	je     0x140003f1a
   140003f0b:	mov    r8,rcx
   140003f0e:	mov    rax,r15
   140003f11:	inc    rax
   140003f14:	cmp    BYTE PTR [rcx+rax*1],r14b
   140003f18:	jne    0x140003f11
   140003f1a:	mov    rcx,QWORD PTR [rbx+0x70]
   140003f1e:	inc    eax
   140003f20:	mov    DWORD PTR [rbp+0x38],eax
   140003f23:	mov    rax,r14
   140003f26:	mov    QWORD PTR [rbp+0x30],r8
   140003f2a:	mov    DWORD PTR [rbp+0x3c],r14d
   140003f2e:	test   rcx,rcx
   140003f31:	je     0x140003f43
   140003f33:	mov    r9,rcx
   140003f36:	mov    rax,r15
   140003f39:	inc    rax
   140003f3c:	cmp    WORD PTR [rcx+rax*2],r14w
   140003f41:	jne    0x140003f39
   140003f43:	lea    eax,[rax*2+0x2]
   140003f4a:	mov    QWORD PTR [rbp+0x40],r9
   140003f4e:	mov    DWORD PTR [rbp+0x48],eax
   140003f51:	mov    DWORD PTR [rbp+0x4c],r14d
   140003f55:	lea    rax,[rsp+0x50]
   140003f5a:	mov    rcx,r10
   140003f5d:	mov    QWORD PTR [rsp+0x28],rax
   140003f62:	lea    r8,[r11+0x8]
   140003f66:	mov    DWORD PTR [rsp+0x20],0x10
   140003f6e:	lea    rdx,[rip+0x9a18]        # 0x14000d98d
   140003f75:	jmp    0x140004004
   140003f7a:	test   rcx,rcx
   140003f7d:	je     0x140003f85
   140003f7f:	call   QWORD PTR [rip+0x80fb]        # 0x14000c080
   140003f85:	mov    rdx,QWORD PTR [rdi+0x30]
   140003f89:	mov    rbx,QWORD PTR [rdx+0x28]
   140003f8d:	cmp    DWORD PTR [rbx],0x5
   140003f90:	jbe    0x14000400c
   140003f92:	movabs rcx,0x200000000000
   140003f9c:	test   QWORD PTR [rbx+0x10],rcx
   140003fa0:	je     0x14000400c
   140003fa2:	mov    rax,QWORD PTR [rbx+0x18]
   140003fa6:	and    rax,rcx
   140003fa9:	cmp    rax,QWORD PTR [rbx+0x18]
   140003fad:	jne    0x14000400c
   140003faf:	mov    eax,DWORD PTR [rdx+0x54]
   140003fb2:	mov    esi,0x4
   140003fb7:	mov    DWORD PTR [rsp+0x38],eax
   140003fbb:	lea    rax,[rsp+0x38]
   140003fc0:	mov    QWORD PTR [rbp+0x70],rax
   140003fc4:	mov    QWORD PTR [rbp+0x78],rsi
   140003fc8:	call   QWORD PTR [rip+0x8132]        # 0x14000c100
   140003fce:	mov    DWORD PTR [rsp+0x30],eax
   140003fd2:	lea    rax,[rsp+0x30]
   140003fd7:	mov    QWORD PTR [rbp+0x80],rax
   140003fde:	mov    QWORD PTR [rbp+0x88],rsi
   140003fe5:	mov    r8,QWORD PTR [rdi+0x30]
   140003fe9:	lea    rax,[rbp+0x50]
   140003fed:	mov    QWORD PTR [rsp+0x28],rax
   140003ff2:	lea    rdx,[rip+0x9025]        # 0x14000d01e
   140003ff9:	mov    DWORD PTR [rsp+0x20],esi
   140003ffd:	add    r8,0x8
   140004001:	mov    rcx,rbx
   140004004:	xor    r9d,r9d
   140004007:	call   0x1400010dc
   14000400c:	cmp    DWORD PTR [rdi+0x20],r14d
   140004010:	je     0x140004062
   140004012:	lea    rbx,[rdi+0x8]
   140004016:	call   QWORD PTR [rip+0x80e4]        # 0x14000c100
   14000401c:	cmp    DWORD PTR [rbx+0x18],eax
   14000401f:	je     0x140004033
   140004021:	mov    rcx,QWORD PTR [rbp+0xb8]
   140004028:	mov    r9d,0x8007029c
   14000402e:	call   0x14000287c
   140004033:	mov    rax,QWORD PTR [rbx]
   140004036:	mov    DWORD PTR [rbx+0x18],r14d
   14000403a:	jmp    0x14000404e
   14000403c:	mov    rax,QWORD PTR [rbx]
   14000403f:	mov    rax,QWORD PTR [rax]
   140004042:	cmp    rax,rbx
   140004045:	je     0x140004055
   140004047:	add    rax,0x10
   14000404b:	mov    QWORD PTR [rbx],rax
   14000404e:	cmp    QWORD PTR [rax],r14
   140004051:	jne    0x14000403c
   140004053:	jmp    0x14000405f
   140004055:	mov    rcx,QWORD PTR [rbx]
   140004058:	mov    rax,QWORD PTR [rbx+0x10]
   14000405c:	mov    QWORD PTR [rcx],rax
   14000405f:	mov    QWORD PTR [rbx],r14
   140004062:	mov    rcx,QWORD PTR [rbp+0x90]
   140004069:	xor    rcx,rsp
   14000406c:	call   0x140009e20
   140004071:	lea    r11,[rsp+0x1a0]
   140004079:	mov    rbx,QWORD PTR [r11+0x28]
   14000407d:	mov    rsi,QWORD PTR [r11+0x30]
   140004081:	mov    rdi,QWORD PTR [r11+0x38]
   140004085:	mov    rsp,r11
   140004088:	pop    r15
   14000408a:	pop    r14
   14000408c:	pop    rbp
   14000408d:	ret    
   14000408e:	int3   
   14000408f:	int3   
   140004090:	int3   
   140004091:	int3   
   140004092:	int3   
   140004093:	int3   
   140004094:	mov    QWORD PTR [rsp+0x10],rbx
   140004099:	mov    QWORD PTR [rsp+0x18],rbp
   14000409e:	push   rdi
   14000409f:	sub    rsp,0x70
   1400040a3:	mov    rax,QWORD PTR [rip+0xbf5e]        # 0x140010008
   1400040aa:	xor    rax,rsp
   1400040ad:	mov    QWORD PTR [rsp+0x68],rax
   1400040b2:	lea    rdx,[rsp+0x30]
   1400040b7:	mov    rbx,rcx
   1400040ba:	call   0x140007034
   1400040bf:	mov    rdi,QWORD PTR [rbx+0x30]
   1400040c3:	movabs rbp,0x200000000000
   1400040cd:	mov    rcx,QWORD PTR [rdi+0x28]
   1400040d1:	cmp    DWORD PTR [rcx],0x5
   1400040d4:	jbe    0x1400040fa
   1400040d6:	test   QWORD PTR [rcx+0x10],rbp
   1400040da:	je     0x1400040fa
   1400040dc:	mov    rax,QWORD PTR [rcx+0x18]
   1400040e0:	and    rax,rbp
   1400040e3:	cmp    rax,QWORD PTR [rcx+0x18]
   1400040e7:	jne    0x1400040fa
   1400040e9:	lea    rdx,[rdi+0x8]
   1400040ed:	mov    ecx,0x3
   1400040f2:	call   QWORD PTR [rip+0x7f30]        # 0x14000c028
   1400040f8:	jmp    0x140004100
   1400040fa:	xor    eax,eax
   1400040fc:	mov    QWORD PTR [rdi+0x8],rax
   140004100:	mov    rcx,QWORD PTR [rsp+0x30]
   140004105:	mov    DWORD PTR [rdi],0x1
   14000410b:	test   rcx,rcx
   14000410e:	je     0x140004116
   140004110:	call   QWORD PTR [rip+0x7f6a]        # 0x14000c080
   140004116:	mov    rax,QWORD PTR [rbx+0x30]
   14000411a:	mov    rdi,QWORD PTR [rax+0x28]
   14000411e:	cmp    DWORD PTR [rdi],0x5
   140004121:	jbe    0x1400041b1
   140004127:	test   QWORD PTR [rdi+0x10],rbp
   14000412b:	je     0x1400041b1
   140004131:	mov    rax,QWORD PTR [rdi+0x18]
   140004135:	and    rax,rbp
   140004138:	cmp    rax,QWORD PTR [rdi+0x18]
   14000413c:	jne    0x1400041b1
   14000413e:	call   QWORD PTR [rip+0x7fbc]        # 0x14000c100
   140004144:	and    DWORD PTR [rsp+0x64],0x0
   140004149:	mov    DWORD PTR [rsp+0x30],eax
   14000414d:	lea    rax,[rsp+0x30]
   140004152:	mov    QWORD PTR [rsp+0x58],rax
   140004157:	mov    DWORD PTR [rsp+0x60],0x4
   14000415f:	mov    r8,QWORD PTR [rbx+0x30]
   140004163:	cmp    BYTE PTR [r8+0x4],0x0
   140004168:	je     0x140004189
   14000416a:	lea    r9,[r8+0x18]
   14000416e:	cmp    DWORD PTR [r9],0x0
   140004172:	jne    0x14000418c
   140004174:	cmp    DWORD PTR [r9+0x4],0x0
   140004179:	jne    0x14000418c
   14000417b:	cmp    DWORD PTR [r9+0x8],0x0
   140004180:	jne    0x14000418c
   140004182:	cmp    DWORD PTR [r9+0xc],0x0
   140004187:	jne    0x14000418c
   140004189:	xor    r9d,r9d
   14000418c:	lea    rax,[rsp+0x38]
   140004191:	add    r8,0x8
   140004195:	mov    QWORD PTR [rsp+0x28],rax
   14000419a:	lea    rdx,[rip+0x97a6]        # 0x14000d947
   1400041a1:	mov    rcx,rdi
   1400041a4:	mov    DWORD PTR [rsp+0x20],0x3
   1400041ac:	call   0x1400010dc
   1400041b1:	cmp    DWORD PTR [rbx+0x20],0x0
   1400041b5:	jne    0x1400041e3
   1400041b7:	add    rbx,0x8
   1400041bb:	cmp    DWORD PTR [rbx+0x18],0x0
   1400041bf:	jne    0x140004202
   1400041c1:	mov    dl,0x1
   1400041c3:	call   0x1400063c4
   1400041c8:	mov    QWORD PTR [rbx],rax
   1400041cb:	test   rax,rax
   1400041ce:	je     0x1400041e3
   1400041d0:	mov    rcx,QWORD PTR [rax]
   1400041d3:	mov    QWORD PTR [rbx+0x10],rcx
   1400041d7:	mov    QWORD PTR [rax],rbx
   1400041da:	call   QWORD PTR [rip+0x7f20]        # 0x14000c100
   1400041e0:	mov    DWORD PTR [rbx+0x18],eax
   1400041e3:	mov    rcx,QWORD PTR [rsp+0x68]
   1400041e8:	xor    rcx,rsp
   1400041eb:	call   0x140009e20
   1400041f0:	lea    r11,[rsp+0x70]
   1400041f5:	mov    rbx,QWORD PTR [r11+0x18]
   1400041f9:	mov    rbp,QWORD PTR [r11+0x20]
   1400041fd:	mov    rsp,r11
   140004200:	pop    rdi
   140004201:	ret    
   140004202:	mov    rcx,QWORD PTR [rsp+0x78]
   140004207:	call   0x1400028c4
   14000420c:	int3   
   14000420d:	int3   
   14000420e:	int3   
   14000420f:	int3   
   140004210:	int3   
   140004211:	int3   
   140004212:	int3   
   140004213:	int3   
   140004214:	mov    rax,rsp
   140004217:	mov    DWORD PTR [rax+0x20],r9d
   14000421b:	mov    DWORD PTR [rax+0x18],r8d
   14000421f:	mov    DWORD PTR [rax+0x10],edx
   140004222:	push   rbp
   140004223:	push   rbx
   140004224:	push   rsi
   140004225:	push   rdi
   140004226:	push   r14
   140004228:	push   r15
   14000422a:	lea    rbp,[rax-0x198]
   140004231:	sub    rsp,0x268
   140004238:	mov    rax,QWORD PTR [rip+0xbdc9]        # 0x140010008
   14000423f:	xor    rax,rsp
   140004242:	mov    QWORD PTR [rbp+0x150],rax
   140004249:	mov    rbx,QWORD PTR [rcx+0x30]
   14000424d:	xor    r14d,r14d
   140004250:	mov    rdi,rcx
   140004253:	mov    eax,DWORD PTR [rbx+0x54]
   140004256:	test   eax,eax
   140004258:	jns    0x140004265
   14000425a:	cmp    eax,DWORD PTR [rbx+0x5c]
   14000425d:	jne    0x140004265
   14000425f:	add    rbx,0x58
   140004263:	jmp    0x140004268
   140004265:	mov    rbx,r14
   140004268:	lea    rdx,[rsp+0x38]
   14000426d:	call   0x140007034
   140004272:	mov    rax,QWORD PTR [rdi+0x30]
   140004276:	mov    rcx,QWORD PTR [rsp+0x38]
   14000427b:	mov    DWORD PTR [rax],0x2
   140004281:	test   rbx,rbx
   140004284:	je     0x140004574
   14000428a:	test   rcx,rcx
   14000428d:	je     0x140004295
   14000428f:	call   QWORD PTR [rip+0x7deb]        # 0x14000c080
   140004295:	mov    r11,QWORD PTR [rdi+0x30]
   140004299:	mov    r10,QWORD PTR [r11+0x28]
   14000429d:	cmp    DWORD PTR [r10],0x5
   1400042a1:	jbe    0x1400046b8
   1400042a7:	movabs rcx,0x200000000000
   1400042b1:	test   QWORD PTR [r10+0x10],rcx
   1400042b5:	je     0x1400046b8
   1400042bb:	mov    rax,QWORD PTR [r10+0x18]
   1400042bf:	and    rax,rcx
   1400042c2:	cmp    rax,QWORD PTR [r10+0x18]
   1400042c6:	jne    0x1400046b8
   1400042cc:	mov    eax,DWORD PTR [rbx+0x4]
   1400042cf:	lea    r8,[rip+0x849a]        # 0x14000c770
   1400042d6:	mov    rcx,QWORD PTR [rbx+0x30]
   1400042da:	or     r15,0xffffffffffffffff
   1400042de:	mov    DWORD PTR [rsp+0x40],eax
   1400042e2:	lea    rax,[rsp+0x40]
   1400042e7:	mov    QWORD PTR [rsp+0x70],rax
   1400042ec:	mov    rax,r14
   1400042ef:	mov    QWORD PTR [rsp+0x78],0x4
   1400042f8:	mov    rdx,r8
   1400042fb:	test   rcx,rcx
   1400042fe:	je     0x14000430f
   140004300:	mov    rdx,rcx
   140004303:	mov    rax,r15
   140004306:	inc    rax
   140004309:	cmp    BYTE PTR [rcx+rax*1],r14b
   14000430d:	jne    0x140004306
   14000430f:	mov    rcx,QWORD PTR [rbx+0x78]
   140004313:	inc    eax
   140004315:	mov    DWORD PTR [rbp-0x78],eax
   140004318:	lea    rax,[rbx+0x38]
   14000431c:	mov    QWORD PTR [rbp-0x70],rax
   140004320:	mov    rax,r14
   140004323:	mov    QWORD PTR [rbp-0x80],rdx
   140004327:	mov    rdx,r8
   14000432a:	mov    DWORD PTR [rbp-0x74],r14d
   14000432e:	mov    QWORD PTR [rbp-0x68],0x4
   140004336:	test   rcx,rcx
   140004339:	je     0x14000434a
   14000433b:	mov    rdx,rcx
   14000433e:	mov    rax,r15
   140004341:	inc    rax
   140004344:	cmp    BYTE PTR [rcx+rax*1],r14b
   140004348:	jne    0x140004341
   14000434a:	mov    rcx,QWORD PTR [rbx+0x10]
   14000434e:	lea    r9,[rip+0x841f]        # 0x14000c774
   140004355:	inc    eax
   140004357:	mov    QWORD PTR [rbp-0x60],rdx
   14000435b:	mov    DWORD PTR [rbp-0x58],eax
   14000435e:	mov    rdx,r9
   140004361:	mov    eax,DWORD PTR [rbx]
   140004363:	mov    DWORD PTR [rsp+0x48],eax
   140004367:	lea    rax,[rsp+0x48]
   14000436c:	mov    QWORD PTR [rbp-0x50],rax
   140004370:	mov    rax,r14
   140004373:	mov    DWORD PTR [rbp-0x54],r14d
   140004377:	mov    QWORD PTR [rbp-0x48],0x4
   14000437f:	test   rcx,rcx
   140004382:	je     0x140004394
   140004384:	mov    rdx,rcx
   140004387:	mov    rax,r15
   14000438a:	inc    rax
   14000438d:	cmp    WORD PTR [rcx+rax*2],r14w
   140004392:	jne    0x14000438a
   140004394:	mov    rcx,QWORD PTR [rbx+0x40]
   140004398:	lea    eax,[rax*2+0x2]
   14000439f:	mov    DWORD PTR [rbp-0x38],eax
   1400043a2:	mov    eax,DWORD PTR [rbx+0x18]
   1400043a5:	mov    DWORD PTR [rsp+0x44],eax
   1400043a9:	lea    rax,[rsp+0x44]
   1400043ae:	mov    QWORD PTR [rbp-0x30],rax
   1400043b2:	mov    rax,r14
   1400043b5:	mov    QWORD PTR [rbp-0x40],rdx
   1400043b9:	mov    rdx,r8
   1400043bc:	mov    DWORD PTR [rbp-0x34],r14d
   1400043c0:	mov    QWORD PTR [rbp-0x28],0x4
   1400043c8:	test   rcx,rcx
   1400043cb:	je     0x1400043dc
   1400043cd:	mov    rdx,rcx
   1400043d0:	mov    rax,r15
   1400043d3:	inc    rax
   1400043d6:	cmp    BYTE PTR [rcx+rax*1],r14b
   1400043da:	jne    0x1400043d3
   1400043dc:	mov    rcx,QWORD PTR [rbx+0x50]
   1400043e0:	inc    eax
   1400043e2:	mov    DWORD PTR [rbp-0x18],eax
   1400043e5:	mov    eax,DWORD PTR [rbx+0x48]
   1400043e8:	mov    DWORD PTR [rsp+0x30],eax
   1400043ec:	lea    rax,[rsp+0x30]
   1400043f1:	mov    QWORD PTR [rbp-0x10],rax
   1400043f5:	mov    rax,r14
   1400043f8:	mov    QWORD PTR [rbp-0x20],rdx
   1400043fc:	mov    rdx,r8
   1400043ff:	mov    DWORD PTR [rbp-0x14],r14d
   140004403:	mov    QWORD PTR [rbp-0x8],0x4
   14000440b:	test   rcx,rcx
   14000440e:	je     0x14000441f
   140004410:	mov    rdx,rcx
   140004413:	mov    rax,r15
   140004416:	inc    rax
   140004419:	cmp    BYTE PTR [rcx+rax*1],r14b
   14000441d:	jne    0x140004416
   14000441f:	mov    rcx,QWORD PTR [rbx+0x58]
   140004423:	inc    eax
   140004425:	mov    DWORD PTR [rbp+0x8],eax
   140004428:	mov    rax,r14
   14000442b:	mov    QWORD PTR [rbp+0x0],rdx
   14000442f:	mov    rdx,r9
   140004432:	mov    DWORD PTR [rbp+0xc],r14d
   140004436:	test   rcx,rcx
   140004439:	je     0x14000444b
   14000443b:	mov    rdx,rcx
   14000443e:	mov    rax,r15
   140004441:	inc    rax
   140004444:	cmp    WORD PTR [rcx+rax*2],r14w
   140004449:	jne    0x140004441
   14000444b:	mov    rcx,QWORD PTR [rbx+0x68]
   14000444f:	lea    eax,[rax*2+0x2]
   140004456:	mov    DWORD PTR [rbp+0x18],eax
   140004459:	mov    eax,DWORD PTR [rbx+0x60]
   14000445c:	mov    DWORD PTR [rsp+0x38],eax
   140004460:	lea    rax,[rsp+0x38]
   140004465:	mov    QWORD PTR [rbp+0x20],rax
   140004469:	mov    rax,r14
   14000446c:	mov    QWORD PTR [rbp+0x10],rdx
   140004470:	mov    DWORD PTR [rbp+0x1c],r14d
   140004474:	mov    QWORD PTR [rbp+0x28],0x4
   14000447c:	test   rcx,rcx
   14000447f:	je     0x140004490
   140004481:	mov    r8,rcx
   140004484:	mov    rax,r15
   140004487:	inc    rax
   14000448a:	cmp    BYTE PTR [rcx+rax*1],r14b
   14000448e:	jne    0x140004487
   140004490:	mov    rcx,QWORD PTR [rbx+0x70]
   140004494:	inc    eax
   140004496:	mov    DWORD PTR [rbp+0x38],eax
   140004499:	mov    rax,r14
   14000449c:	mov    QWORD PTR [rbp+0x30],r8
   1400044a0:	mov    DWORD PTR [rbp+0x3c],r14d
   1400044a4:	test   rcx,rcx
   1400044a7:	je     0x1400044b9
   1400044a9:	mov    r9,rcx
   1400044ac:	mov    rax,r15
   1400044af:	inc    rax
   1400044b2:	cmp    WORD PTR [rcx+rax*2],r14w
   1400044b7:	jne    0x1400044af
   1400044b9:	lea    eax,[rax*2+0x2]
   1400044c0:	mov    QWORD PTR [rbp+0x40],r9
   1400044c4:	mov    DWORD PTR [rbp+0x48],eax
   1400044c7:	lea    rax,[rbp+0x1a8]
   1400044ce:	mov    QWORD PTR [rbp+0x50],rax
   1400044d2:	lea    rax,[rbp+0x1b0]
   1400044d9:	mov    QWORD PTR [rbp+0x60],rax
   1400044dd:	lea    rax,[rbp+0x1b8]
   1400044e4:	mov    QWORD PTR [rbp+0x70],rax
   1400044e8:	lea    rax,[rbp+0x1c0]
   1400044ef:	mov    QWORD PTR [rbp+0x80],rax
   1400044f6:	lea    rax,[rbp+0x1c8]
   1400044fd:	mov    QWORD PTR [rbp+0x90],rax
   140004504:	lea    rax,[rbp+0x1d0]
   14000450b:	mov    QWORD PTR [rbp+0xa0],rax
   140004512:	mov    DWORD PTR [rbp+0x4c],r14d
   140004516:	mov    QWORD PTR [rbp+0x58],0x4
   14000451e:	mov    QWORD PTR [rbp+0x68],0x4
   140004526:	mov    QWORD PTR [rbp+0x78],0x4
   14000452e:	mov    QWORD PTR [rbp+0x88],0x4
   140004539:	mov    QWORD PTR [rbp+0x98],0x4
   140004544:	mov    QWORD PTR [rbp+0xa8],0x4
   14000454f:	lea    rax,[rsp+0x50]
   140004554:	mov    rcx,r10
   140004557:	mov    QWORD PTR [rsp+0x28],rax
   14000455c:	lea    r8,[r11+0x8]
   140004560:	mov    DWORD PTR [rsp+0x20],0x16
   140004568:	lea    rdx,[rip+0x9724]        # 0x14000dc93
   14000456f:	jmp    0x1400046b0
   140004574:	test   rcx,rcx
   140004577:	je     0x14000457f
   140004579:	call   QWORD PTR [rip+0x7b01]        # 0x14000c080
   14000457f:	mov    rdx,QWORD PTR [rdi+0x30]
   140004583:	mov    rbx,QWORD PTR [rdx+0x28]
   140004587:	cmp    DWORD PTR [rbx],0x5
   14000458a:	jbe    0x1400046b8
   140004590:	movabs rcx,0x200000000000
   14000459a:	test   QWORD PTR [rbx+0x10],rcx
   14000459e:	je     0x1400046b8
   1400045a4:	mov    rax,QWORD PTR [rbx+0x18]
   1400045a8:	and    rax,rcx
   1400045ab:	cmp    rax,QWORD PTR [rbx+0x18]
   1400045af:	jne    0x1400046b8
   1400045b5:	mov    eax,DWORD PTR [rdx+0x54]
   1400045b8:	mov    DWORD PTR [rsp+0x38],eax
   1400045bc:	lea    rax,[rsp+0x38]
   1400045c1:	mov    QWORD PTR [rbp+0xd0],rax
   1400045c8:	mov    QWORD PTR [rbp+0xd8],0x4
   1400045d3:	call   QWORD PTR [rip+0x7b27]        # 0x14000c100
   1400045d9:	mov    DWORD PTR [rsp+0x30],eax
   1400045dd:	lea    rax,[rsp+0x30]
   1400045e2:	mov    QWORD PTR [rbp+0xe0],rax
   1400045e9:	lea    rax,[rbp+0x1a8]
   1400045f0:	mov    QWORD PTR [rbp+0xf0],rax
   1400045f7:	lea    rax,[rbp+0x1b0]
   1400045fe:	mov    QWORD PTR [rbp+0x100],rax
   140004605:	lea    rax,[rbp+0x1b8]
   14000460c:	mov    QWORD PTR [rbp+0x110],rax
   140004613:	lea    rax,[rbp+0x1c0]
   14000461a:	mov    QWORD PTR [rbp+0x120],rax
   140004621:	lea    rax,[rbp+0x1c8]
   140004628:	mov    QWORD PTR [rbp+0x130],rax
   14000462f:	lea    rax,[rbp+0x1d0]
   140004636:	mov    QWORD PTR [rbp+0x140],rax
   14000463d:	mov    QWORD PTR [rbp+0xe8],0x4
   140004648:	mov    QWORD PTR [rbp+0xf8],0x4
   140004653:	mov    QWORD PTR [rbp+0x108],0x4
   14000465e:	mov    QWORD PTR [rbp+0x118],0x4
   140004669:	mov    QWORD PTR [rbp+0x128],0x4
   140004674:	mov    QWORD PTR [rbp+0x138],0x4
   14000467f:	mov    QWORD PTR [rbp+0x148],0x4
   14000468a:	mov    r8,QWORD PTR [rdi+0x30]
   14000468e:	lea    rax,[rbp+0xb0]
   140004695:	mov    QWORD PTR [rsp+0x28],rax
   14000469a:	lea    rdx,[rip+0x8e62]        # 0x14000d503
   1400046a1:	mov    DWORD PTR [rsp+0x20],0xa
   1400046a9:	add    r8,0x8
   1400046ad:	mov    rcx,rbx
   1400046b0:	xor    r9d,r9d
   1400046b3:	call   0x1400010dc
   1400046b8:	cmp    DWORD PTR [rdi+0x20],r14d
   1400046bc:	je     0x14000470e
   1400046be:	lea    rbx,[rdi+0x8]
   1400046c2:	call   QWORD PTR [rip+0x7a38]        # 0x14000c100
   1400046c8:	cmp    DWORD PTR [rbx+0x18],eax
   1400046cb:	je     0x1400046df
   1400046cd:	mov    rcx,QWORD PTR [rbp+0x198]
   1400046d4:	mov    r9d,0x8007029c
   1400046da:	call   0x14000287c
   1400046df:	mov    rax,QWORD PTR [rbx]
   1400046e2:	mov    DWORD PTR [rbx+0x18],r14d
   1400046e6:	jmp    0x1400046fa
   1400046e8:	mov    rax,QWORD PTR [rbx]
   1400046eb:	mov    rax,QWORD PTR [rax]
   1400046ee:	cmp    rax,rbx
   1400046f1:	je     0x140004701
   1400046f3:	add    rax,0x10
   1400046f7:	mov    QWORD PTR [rbx],rax
   1400046fa:	cmp    QWORD PTR [rax],r14
   1400046fd:	jne    0x1400046e8
   1400046ff:	jmp    0x14000470b
   140004701:	mov    rcx,QWORD PTR [rbx]
   140004704:	mov    rax,QWORD PTR [rbx+0x10]
   140004708:	mov    QWORD PTR [rcx],rax
   14000470b:	mov    QWORD PTR [rbx],r14
   14000470e:	mov    rcx,QWORD PTR [rbp+0x150]
   140004715:	xor    rcx,rsp
   140004718:	call   0x140009e20
   14000471d:	add    rsp,0x268
   140004724:	pop    r15
   140004726:	pop    r14
   140004728:	pop    rdi
   140004729:	pop    rsi
   14000472a:	pop    rbx
   14000472b:	pop    rbp
   14000472c:	ret    
   14000472d:	int3   
   14000472e:	int3   
   14000472f:	int3   
   140004730:	int3   
   140004731:	int3   
   140004732:	int3   
   140004733:	int3   
   140004734:	int3   
   140004735:	int3   
   140004736:	int3   
   140004737:	int3   
   140004738:	int3   
   140004739:	int3   
   14000473a:	int3   
   14000473b:	int3   
   14000473c:	int3   
   14000473d:	int3   
   14000473e:	int3   
   14000473f:	int3   
   140004740:	mov    rax,rsp
   140004743:	mov    QWORD PTR [rax+0x10],rbx
   140004747:	mov    QWORD PTR [rax+0x18],rsi
   14000474b:	mov    QWORD PTR [rax+0x20],rdi
   14000474f:	push   rbp
   140004750:	push   r14
   140004752:	push   r15
   140004754:	lea    rbp,[rax-0xb8]
   14000475b:	sub    rsp,0x1a0
   140004762:	mov    rax,QWORD PTR [rip+0xb89f]        # 0x140010008
   140004769:	xor    rax,rsp
   14000476c:	mov    QWORD PTR [rbp+0x90],rax
   140004773:	mov    rbx,QWORD PTR [rcx+0x30]
   140004777:	xor    r14d,r14d
   14000477a:	mov    rdi,rcx
   14000477d:	mov    eax,DWORD PTR [rbx+0x54]
   140004780:	test   eax,eax
   140004782:	jns    0x14000478f
   140004784:	cmp    eax,DWORD PTR [rbx+0x5c]
   140004787:	jne    0x14000478f
   140004789:	add    rbx,0x58
   14000478d:	jmp    0x140004792
   14000478f:	mov    rbx,r14
   140004792:	lea    rdx,[rsp+0x38]
   140004797:	call   0x140007034
   14000479c:	mov    rax,QWORD PTR [rdi+0x30]
   1400047a0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400047a5:	mov    DWORD PTR [rax],0x2
   1400047ab:	test   rbx,rbx
   1400047ae:	je     0x140004a1a
   1400047b4:	test   rcx,rcx
   1400047b7:	je     0x1400047bf
   1400047b9:	call   QWORD PTR [rip+0x78c1]        # 0x14000c080
   1400047bf:	mov    r11,QWORD PTR [rdi+0x30]
   1400047c3:	mov    r10,QWORD PTR [r11+0x28]
   1400047c7:	cmp    DWORD PTR [r10],0x5
   1400047cb:	jbe    0x140004aac
   1400047d1:	movabs rcx,0x200000000000
   1400047db:	test   QWORD PTR [r10+0x10],rcx
   1400047df:	je     0x140004aac
   1400047e5:	mov    rax,QWORD PTR [r10+0x18]
   1400047e9:	and    rax,rcx
   1400047ec:	cmp    rax,QWORD PTR [r10+0x18]
   1400047f0:	jne    0x140004aac
   1400047f6:	mov    eax,DWORD PTR [rbx+0x4]
   1400047f9:	lea    r8,[rip+0x7f70]        # 0x14000c770
   140004800:	mov    rcx,QWORD PTR [rbx+0x30]
   140004804:	or     r15,0xffffffffffffffff
   140004808:	mov    DWORD PTR [rsp+0x40],eax
   14000480c:	lea    rax,[rsp+0x40]
   140004811:	mov    QWORD PTR [rsp+0x70],rax
   140004816:	mov    rax,r14
   140004819:	mov    QWORD PTR [rsp+0x78],0x4
   140004822:	mov    rdx,r8
   140004825:	test   rcx,rcx
   140004828:	je     0x140004839
   14000482a:	mov    rdx,rcx
   14000482d:	mov    rax,r15
   140004830:	inc    rax
   140004833:	cmp    BYTE PTR [rcx+rax*1],r14b
   140004837:	jne    0x140004830
   140004839:	mov    rcx,QWORD PTR [rbx+0x78]
   14000483d:	inc    eax
   14000483f:	mov    DWORD PTR [rbp-0x78],eax
   140004842:	lea    rax,[rbx+0x38]
   140004846:	mov    QWORD PTR [rbp-0x70],rax
   14000484a:	mov    rax,r14
   14000484d:	mov    QWORD PTR [rbp-0x80],rdx
   140004851:	mov    rdx,r8
   140004854:	mov    DWORD PTR [rbp-0x74],r14d
   140004858:	mov    QWORD PTR [rbp-0x68],0x4
   140004860:	test   rcx,rcx
   140004863:	je     0x140004874
   140004865:	mov    rdx,rcx
   140004868:	mov    rax,r15
   14000486b:	inc    rax
   14000486e:	cmp    BYTE PTR [rcx+rax*1],r14b
   140004872:	jne    0x14000486b
   140004874:	mov    rcx,QWORD PTR [rbx+0x10]
   140004878:	lea    r9,[rip+0x7ef5]        # 0x14000c774
   14000487f:	inc    eax
   140004881:	mov    QWORD PTR [rbp-0x60],rdx
   140004885:	mov    DWORD PTR [rbp-0x58],eax
   140004888:	mov    rdx,r9
   14000488b:	mov    eax,DWORD PTR [rbx]
   14000488d:	mov    DWORD PTR [rsp+0x48],eax
   140004891:	lea    rax,[rsp+0x48]
   140004896:	mov    QWORD PTR [rbp-0x50],rax
   14000489a:	mov    rax,r14
   14000489d:	mov    DWORD PTR [rbp-0x54],r14d
   1400048a1:	mov    QWORD PTR [rbp-0x48],0x4
   1400048a9:	test   rcx,rcx
   1400048ac:	je     0x1400048be
   1400048ae:	mov    rdx,rcx
   1400048b1:	mov    rax,r15
   1400048b4:	inc    rax
   1400048b7:	cmp    WORD PTR [rcx+rax*2],r14w
   1400048bc:	jne    0x1400048b4
   1400048be:	mov    rcx,QWORD PTR [rbx+0x40]
   1400048c2:	lea    eax,[rax*2+0x2]
   1400048c9:	mov    DWORD PTR [rbp-0x38],eax
   1400048cc:	mov    eax,DWORD PTR [rbx+0x18]
   1400048cf:	mov    DWORD PTR [rsp+0x44],eax
   1400048d3:	lea    rax,[rsp+0x44]
   1400048d8:	mov    QWORD PTR [rbp-0x30],rax
   1400048dc:	mov    rax,r14
   1400048df:	mov    QWORD PTR [rbp-0x40],rdx
   1400048e3:	mov    rdx,r8
   1400048e6:	mov    DWORD PTR [rbp-0x34],r14d
   1400048ea:	mov    QWORD PTR [rbp-0x28],0x4
   1400048f2:	test   rcx,rcx
   1400048f5:	je     0x140004906
   1400048f7:	mov    rdx,rcx
   1400048fa:	mov    rax,r15
   1400048fd:	inc    rax
   140004900:	cmp    BYTE PTR [rcx+rax*1],r14b
   140004904:	jne    0x1400048fd
   140004906:	mov    rcx,QWORD PTR [rbx+0x50]
   14000490a:	inc    eax
   14000490c:	mov    DWORD PTR [rbp-0x18],eax
   14000490f:	mov    eax,DWORD PTR [rbx+0x48]
   140004912:	mov    DWORD PTR [rsp+0x30],eax
   140004916:	lea    rax,[rsp+0x30]
   14000491b:	mov    QWORD PTR [rbp-0x10],rax
   14000491f:	mov    rax,r14
   140004922:	mov    QWORD PTR [rbp-0x20],rdx
   140004926:	mov    rdx,r8
   140004929:	mov    DWORD PTR [rbp-0x14],r14d
   14000492d:	mov    QWORD PTR [rbp-0x8],0x4
   140004935:	test   rcx,rcx
   140004938:	je     0x140004949
   14000493a:	mov    rdx,rcx
   14000493d:	mov    rax,r15
   140004940:	inc    rax
   140004943:	cmp    BYTE PTR [rcx+rax*1],r14b
   140004947:	jne    0x140004940
   140004949:	mov    rcx,QWORD PTR [rbx+0x58]
   14000494d:	inc    eax
   14000494f:	mov    DWORD PTR [rbp+0x8],eax
   140004952:	mov    rax,r14
   140004955:	mov    QWORD PTR [rbp+0x0],rdx
   140004959:	mov    rdx,r9
   14000495c:	mov    DWORD PTR [rbp+0xc],r14d
   140004960:	test   rcx,rcx
   140004963:	je     0x140004975
   140004965:	mov    rdx,rcx
   140004968:	mov    rax,r15
   14000496b:	inc    rax
   14000496e:	cmp    WORD PTR [rcx+rax*2],r14w
   140004973:	jne    0x14000496b
   140004975:	mov    rcx,QWORD PTR [rbx+0x68]
   140004979:	lea    eax,[rax*2+0x2]
   140004980:	mov    DWORD PTR [rbp+0x18],eax
   140004983:	mov    eax,DWORD PTR [rbx+0x60]
   140004986:	mov    DWORD PTR [rsp+0x38],eax
   14000498a:	lea    rax,[rsp+0x38]
   14000498f:	mov    QWORD PTR [rbp+0x20],rax
   140004993:	mov    rax,r14
   140004996:	mov    QWORD PTR [rbp+0x10],rdx
   14000499a:	mov    DWORD PTR [rbp+0x1c],r14d
   14000499e:	mov    QWORD PTR [rbp+0x28],0x4
   1400049a6:	test   rcx,rcx
   1400049a9:	je     0x1400049ba
   1400049ab:	mov    r8,rcx
   1400049ae:	mov    rax,r15
   1400049b1:	inc    rax
   1400049b4:	cmp    BYTE PTR [rcx+rax*1],r14b
   1400049b8:	jne    0x1400049b1
   1400049ba:	mov    rcx,QWORD PTR [rbx+0x70]
   1400049be:	inc    eax
   1400049c0:	mov    DWORD PTR [rbp+0x38],eax
   1400049c3:	mov    rax,r14
   1400049c6:	mov    QWORD PTR [rbp+0x30],r8
   1400049ca:	mov    DWORD PTR [rbp+0x3c],r14d
   1400049ce:	test   rcx,rcx
   1400049d1:	je     0x1400049e3
   1400049d3:	mov    r9,rcx
   1400049d6:	mov    rax,r15
   1400049d9:	inc    rax
   1400049dc:	cmp    WORD PTR [rcx+rax*2],r14w
   1400049e1:	jne    0x1400049d9
   1400049e3:	lea    eax,[rax*2+0x2]
   1400049ea:	mov    QWORD PTR [rbp+0x40],r9
   1400049ee:	mov    DWORD PTR [rbp+0x48],eax
   1400049f1:	mov    DWORD PTR [rbp+0x4c],r14d
   1400049f5:	lea    rax,[rsp+0x50]
   1400049fa:	mov    rcx,r10
   1400049fd:	mov    QWORD PTR [rsp+0x28],rax
   140004a02:	lea    r8,[r11+0x8]
   140004a06:	mov    DWORD PTR [rsp+0x20],0x10
   140004a0e:	lea    rdx,[rip+0x8e19]        # 0x14000d82e
   140004a15:	jmp    0x140004aa4
   140004a1a:	test   rcx,rcx
   140004a1d:	je     0x140004a25
   140004a1f:	call   QWORD PTR [rip+0x765b]        # 0x14000c080
   140004a25:	mov    rdx,QWORD PTR [rdi+0x30]
   140004a29:	mov    rbx,QWORD PTR [rdx+0x28]
   140004a2d:	cmp    DWORD PTR [rbx],0x5
   140004a30:	jbe    0x140004aac
   140004a32:	movabs rcx,0x200000000000
   140004a3c:	test   QWORD PTR [rbx+0x10],rcx
   140004a40:	je     0x140004aac
   140004a42:	mov    rax,QWORD PTR [rbx+0x18]
   140004a46:	and    rax,rcx
   140004a49:	cmp    rax,QWORD PTR [rbx+0x18]
   140004a4d:	jne    0x140004aac
   140004a4f:	mov    eax,DWORD PTR [rdx+0x54]
   140004a52:	mov    esi,0x4
   140004a57:	mov    DWORD PTR [rsp+0x38],eax
   140004a5b:	lea    rax,[rsp+0x38]
   140004a60:	mov    QWORD PTR [rbp+0x70],rax
   140004a64:	mov    QWORD PTR [rbp+0x78],rsi
   140004a68:	call   QWORD PTR [rip+0x7692]        # 0x14000c100
   140004a6e:	mov    DWORD PTR [rsp+0x30],eax
   140004a72:	lea    rax,[rsp+0x30]
   140004a77:	mov    QWORD PTR [rbp+0x80],rax
   140004a7e:	mov    QWORD PTR [rbp+0x88],rsi
   140004a85:	mov    r8,QWORD PTR [rdi+0x30]
   140004a89:	lea    rax,[rbp+0x50]
   140004a8d:	mov    QWORD PTR [rsp+0x28],rax
   140004a92:	lea    rdx,[rip+0x84e0]        # 0x14000cf79
   140004a99:	mov    DWORD PTR [rsp+0x20],esi
   140004a9d:	add    r8,0x8
   140004aa1:	mov    rcx,rbx
   140004aa4:	xor    r9d,r9d
   140004aa7:	call   0x1400010dc
   140004aac:	cmp    DWORD PTR [rdi+0x20],r14d
   140004ab0:	je     0x140004b02
   140004ab2:	lea    rbx,[rdi+0x8]
   140004ab6:	call   QWORD PTR [rip+0x7644]        # 0x14000c100
   140004abc:	cmp    DWORD PTR [rbx+0x18],eax
   140004abf:	je     0x140004ad3
   140004ac1:	mov    rcx,QWORD PTR [rbp+0xb8]
   140004ac8:	mov    r9d,0x8007029c
   140004ace:	call   0x14000287c
   140004ad3:	mov    rax,QWORD PTR [rbx]
   140004ad6:	mov    DWORD PTR [rbx+0x18],r14d
   140004ada:	jmp    0x140004aee
   140004adc:	mov    rax,QWORD PTR [rbx]
   140004adf:	mov    rax,QWORD PTR [rax]
   140004ae2:	cmp    rax,rbx
   140004ae5:	je     0x140004af5
   140004ae7:	add    rax,0x10
   140004aeb:	mov    QWORD PTR [rbx],rax
   140004aee:	cmp    QWORD PTR [rax],r14
   140004af1:	jne    0x140004adc
   140004af3:	jmp    0x140004aff
   140004af5:	mov    rcx,QWORD PTR [rbx]
   140004af8:	mov    rax,QWORD PTR [rbx+0x10]
   140004afc:	mov    QWORD PTR [rcx],rax
   140004aff:	mov    QWORD PTR [rbx],r14
   140004b02:	mov    rcx,QWORD PTR [rbp+0x90]
   140004b09:	xor    rcx,rsp
   140004b0c:	call   0x140009e20
   140004b11:	lea    r11,[rsp+0x1a0]
   140004b19:	mov    rbx,QWORD PTR [r11+0x28]
   140004b1d:	mov    rsi,QWORD PTR [r11+0x30]
   140004b21:	mov    rdi,QWORD PTR [r11+0x38]
   140004b25:	mov    rsp,r11
   140004b28:	pop    r15
   140004b2a:	pop    r14
   140004b2c:	pop    rbp
   140004b2d:	ret    
   140004b2e:	int3   
   140004b2f:	int3   
   140004b30:	int3   
   140004b31:	int3   
   140004b32:	int3   
   140004b33:	int3   
   140004b34:	mov    QWORD PTR [rsp+0x10],rbx
   140004b39:	mov    QWORD PTR [rsp+0x18],rbp
   140004b3e:	push   rdi
   140004b3f:	sub    rsp,0x70
   140004b43:	mov    rax,QWORD PTR [rip+0xb4be]        # 0x140010008
   140004b4a:	xor    rax,rsp
   140004b4d:	mov    QWORD PTR [rsp+0x68],rax
   140004b52:	lea    rdx,[rsp+0x30]
   140004b57:	mov    rbx,rcx
   140004b5a:	call   0x140007034
   140004b5f:	mov    rdi,QWORD PTR [rbx+0x30]
   140004b63:	movabs rbp,0x200000000000
   140004b6d:	mov    rcx,QWORD PTR [rdi+0x28]
   140004b71:	cmp    DWORD PTR [rcx],0x5
   140004b74:	jbe    0x140004b9a
   140004b76:	test   QWORD PTR [rcx+0x10],rbp
   140004b7a:	je     0x140004b9a
   140004b7c:	mov    rax,QWORD PTR [rcx+0x18]
   140004b80:	and    rax,rbp
   140004b83:	cmp    rax,QWORD PTR [rcx+0x18]
   140004b87:	jne    0x140004b9a
   140004b89:	lea    rdx,[rdi+0x8]
   140004b8d:	mov    ecx,0x3
   140004b92:	call   QWORD PTR [rip+0x7490]        # 0x14000c028
   140004b98:	jmp    0x140004ba0
   140004b9a:	xor    eax,eax
   140004b9c:	mov    QWORD PTR [rdi+0x8],rax
   140004ba0:	mov    rcx,QWORD PTR [rsp+0x30]
   140004ba5:	mov    DWORD PTR [rdi],0x1
   140004bab:	test   rcx,rcx
   140004bae:	je     0x140004bb6
   140004bb0:	call   QWORD PTR [rip+0x74ca]        # 0x14000c080
   140004bb6:	mov    rax,QWORD PTR [rbx+0x30]
   140004bba:	mov    rdi,QWORD PTR [rax+0x28]
   140004bbe:	cmp    DWORD PTR [rdi],0x5
   140004bc1:	jbe    0x140004c51
   140004bc7:	test   QWORD PTR [rdi+0x10],rbp
   140004bcb:	je     0x140004c51
   140004bd1:	mov    rax,QWORD PTR [rdi+0x18]
   140004bd5:	and    rax,rbp
   140004bd8:	cmp    rax,QWORD PTR [rdi+0x18]
   140004bdc:	jne    0x140004c51
   140004bde:	call   QWORD PTR [rip+0x751c]        # 0x14000c100
   140004be4:	and    DWORD PTR [rsp+0x64],0x0
   140004be9:	mov    DWORD PTR [rsp+0x30],eax
   140004bed:	lea    rax,[rsp+0x30]
   140004bf2:	mov    QWORD PTR [rsp+0x58],rax
   140004bf7:	mov    DWORD PTR [rsp+0x60],0x4
   140004bff:	mov    r8,QWORD PTR [rbx+0x30]
   140004c03:	cmp    BYTE PTR [r8+0x4],0x0
   140004c08:	je     0x140004c29
   140004c0a:	lea    r9,[r8+0x18]
   140004c0e:	cmp    DWORD PTR [r9],0x0
   140004c12:	jne    0x140004c2c
   140004c14:	cmp    DWORD PTR [r9+0x4],0x0
   140004c19:	jne    0x140004c2c
   140004c1b:	cmp    DWORD PTR [r9+0x8],0x0
   140004c20:	jne    0x140004c2c
   140004c22:	cmp    DWORD PTR [r9+0xc],0x0
   140004c27:	jne    0x140004c2c
   140004c29:	xor    r9d,r9d
   140004c2c:	lea    rax,[rsp+0x38]
   140004c31:	add    r8,0x8
   140004c35:	mov    QWORD PTR [rsp+0x28],rax
   140004c3a:	lea    rdx,[rip+0x8494]        # 0x14000d0d5
   140004c41:	mov    rcx,rdi
   140004c44:	mov    DWORD PTR [rsp+0x20],0x3
   140004c4c:	call   0x1400010dc
   140004c51:	cmp    DWORD PTR [rbx+0x20],0x0
   140004c55:	jne    0x140004c83
   140004c57:	add    rbx,0x8
   140004c5b:	cmp    DWORD PTR [rbx+0x18],0x0
   140004c5f:	jne    0x140004ca2
   140004c61:	mov    dl,0x1
   140004c63:	call   0x1400063c4
   140004c68:	mov    QWORD PTR [rbx],rax
   140004c6b:	test   rax,rax
   140004c6e:	je     0x140004c83
   140004c70:	mov    rcx,QWORD PTR [rax]
   140004c73:	mov    QWORD PTR [rbx+0x10],rcx
   140004c77:	mov    QWORD PTR [rax],rbx
   140004c7a:	call   QWORD PTR [rip+0x7480]        # 0x14000c100
   140004c80:	mov    DWORD PTR [rbx+0x18],eax
   140004c83:	mov    rcx,QWORD PTR [rsp+0x68]
   140004c88:	xor    rcx,rsp
   140004c8b:	call   0x140009e20
   140004c90:	lea    r11,[rsp+0x70]
   140004c95:	mov    rbx,QWORD PTR [r11+0x18]
   140004c99:	mov    rbp,QWORD PTR [r11+0x20]
   140004c9d:	mov    rsp,r11
   140004ca0:	pop    rdi
   140004ca1:	ret    
   140004ca2:	mov    rcx,QWORD PTR [rsp+0x78]
   140004ca7:	call   0x1400028c4
   140004cac:	int3   
   140004cad:	int3   
   140004cae:	int3   
   140004caf:	int3   
   140004cb0:	int3   
   140004cb1:	int3   
   140004cb2:	int3   
   140004cb3:	int3   
   140004cb4:	mov    rax,rsp
   140004cb7:	mov    DWORD PTR [rax+0x20],r9d
   140004cbb:	mov    DWORD PTR [rax+0x18],r8d
   140004cbf:	mov    DWORD PTR [rax+0x10],edx
   140004cc2:	push   rbp
   140004cc3:	push   rbx
   140004cc4:	push   rsi
   140004cc5:	push   rdi
   140004cc6:	push   r14
   140004cc8:	push   r15
   140004cca:	lea    rbp,[rax-0x198]
   140004cd1:	sub    rsp,0x268
   140004cd8:	mov    rax,QWORD PTR [rip+0xb329]        # 0x140010008
   140004cdf:	xor    rax,rsp
   140004ce2:	mov    QWORD PTR [rbp+0x150],rax
   140004ce9:	mov    rbx,QWORD PTR [rcx+0x30]
   140004ced:	xor    r14d,r14d
   140004cf0:	mov    rdi,rcx
   140004cf3:	mov    eax,DWORD PTR [rbx+0x54]
   140004cf6:	test   eax,eax
   140004cf8:	jns    0x140004d05
   140004cfa:	cmp    eax,DWORD PTR [rbx+0x5c]
   140004cfd:	jne    0x140004d05
   140004cff:	add    rbx,0x58
   140004d03:	jmp    0x140004d08
   140004d05:	mov    rbx,r14
   140004d08:	lea    rdx,[rsp+0x38]
   140004d0d:	call   0x140007034
   140004d12:	mov    rax,QWORD PTR [rdi+0x30]
   140004d16:	mov    rcx,QWORD PTR [rsp+0x38]
   140004d1b:	mov    DWORD PTR [rax],0x2
   140004d21:	test   rbx,rbx
   140004d24:	je     0x140005014
   140004d2a:	test   rcx,rcx
   140004d2d:	je     0x140004d35
   140004d2f:	call   QWORD PTR [rip+0x734b]        # 0x14000c080
   140004d35:	mov    r11,QWORD PTR [rdi+0x30]
   140004d39:	mov    r10,QWORD PTR [r11+0x28]
   140004d3d:	cmp    DWORD PTR [r10],0x5
   140004d41:	jbe    0x140005158
   140004d47:	movabs rcx,0x200000000000
   140004d51:	test   QWORD PTR [r10+0x10],rcx
   140004d55:	je     0x140005158
   140004d5b:	mov    rax,QWORD PTR [r10+0x18]
   140004d5f:	and    rax,rcx
   140004d62:	cmp    rax,QWORD PTR [r10+0x18]
   140004d66:	jne    0x140005158
   140004d6c:	mov    eax,DWORD PTR [rbx+0x4]
   140004d6f:	lea    r8,[rip+0x79fa]        # 0x14000c770
   140004d76:	mov    rcx,QWORD PTR [rbx+0x30]
   140004d7a:	or     r15,0xffffffffffffffff
   140004d7e:	mov    DWORD PTR [rsp+0x40],eax
   140004d82:	lea    rax,[rsp+0x40]
   140004d87:	mov    QWORD PTR [rsp+0x70],rax
   140004d8c:	mov    rax,r14
   140004d8f:	mov    QWORD PTR [rsp+0x78],0x4
   140004d98:	mov    rdx,r8
   140004d9b:	test   rcx,rcx
   140004d9e:	je     0x140004daf
   140004da0:	mov    rdx,rcx
   140004da3:	mov    rax,r15
   140004da6:	inc    rax
   140004da9:	cmp    BYTE PTR [rcx+rax*1],r14b
   140004dad:	jne    0x140004da6
   140004daf:	mov    rcx,QWORD PTR [rbx+0x78]
   140004db3:	inc    eax
   140004db5:	mov    DWORD PTR [rbp-0x78],eax
   140004db8:	lea    rax,[rbx+0x38]
   140004dbc:	mov    QWORD PTR [rbp-0x70],rax
   140004dc0:	mov    rax,r14
   140004dc3:	mov    QWORD PTR [rbp-0x80],rdx
   140004dc7:	mov    rdx,r8
   140004dca:	mov    DWORD PTR [rbp-0x74],r14d
   140004dce:	mov    QWORD PTR [rbp-0x68],0x4
   140004dd6:	test   rcx,rcx
   140004dd9:	je     0x140004dea
   140004ddb:	mov    rdx,rcx
   140004dde:	mov    rax,r15
   140004de1:	inc    rax
   140004de4:	cmp    BYTE PTR [rcx+rax*1],r14b
   140004de8:	jne    0x140004de1
   140004dea:	mov    rcx,QWORD PTR [rbx+0x10]
   140004dee:	lea    r9,[rip+0x797f]        # 0x14000c774
   140004df5:	inc    eax
   140004df7:	mov    QWORD PTR [rbp-0x60],rdx
   140004dfb:	mov    DWORD PTR [rbp-0x58],eax
   140004dfe:	mov    rdx,r9
   140004e01:	mov    eax,DWORD PTR [rbx]
   140004e03:	mov    DWORD PTR [rsp+0x48],eax
   140004e07:	lea    rax,[rsp+0x48]
   140004e0c:	mov    QWORD PTR [rbp-0x50],rax
   140004e10:	mov    rax,r14
   140004e13:	mov    DWORD PTR [rbp-0x54],r14d
   140004e17:	mov    QWORD PTR [rbp-0x48],0x4
   140004e1f:	test   rcx,rcx
   140004e22:	je     0x140004e34
   140004e24:	mov    rdx,rcx
   140004e27:	mov    rax,r15
   140004e2a:	inc    rax
   140004e2d:	cmp    WORD PTR [rcx+rax*2],r14w
   140004e32:	jne    0x140004e2a
   140004e34:	mov    rcx,QWORD PTR [rbx+0x40]
   140004e38:	lea    eax,[rax*2+0x2]
   140004e3f:	mov    DWORD PTR [rbp-0x38],eax
   140004e42:	mov    eax,DWORD PTR [rbx+0x18]
   140004e45:	mov    DWORD PTR [rsp+0x44],eax
   140004e49:	lea    rax,[rsp+0x44]
   140004e4e:	mov    QWORD PTR [rbp-0x30],rax
   140004e52:	mov    rax,r14
   140004e55:	mov    QWORD PTR [rbp-0x40],rdx
   140004e59:	mov    rdx,r8
   140004e5c:	mov    DWORD PTR [rbp-0x34],r14d
   140004e60:	mov    QWORD PTR [rbp-0x28],0x4
   140004e68:	test   rcx,rcx
   140004e6b:	je     0x140004e7c
   140004e6d:	mov    rdx,rcx
   140004e70:	mov    rax,r15
   140004e73:	inc    rax
   140004e76:	cmp    BYTE PTR [rcx+rax*1],r14b
   140004e7a:	jne    0x140004e73
   140004e7c:	mov    rcx,QWORD PTR [rbx+0x50]
   140004e80:	inc    eax
   140004e82:	mov    DWORD PTR [rbp-0x18],eax
   140004e85:	mov    eax,DWORD PTR [rbx+0x48]
   140004e88:	mov    DWORD PTR [rsp+0x30],eax
   140004e8c:	lea    rax,[rsp+0x30]
   140004e91:	mov    QWORD PTR [rbp-0x10],rax
   140004e95:	mov    rax,r14
   140004e98:	mov    QWORD PTR [rbp-0x20],rdx
   140004e9c:	mov    rdx,r8
   140004e9f:	mov    DWORD PTR [rbp-0x14],r14d
   140004ea3:	mov    QWORD PTR [rbp-0x8],0x4
   140004eab:	test   rcx,rcx
   140004eae:	je     0x140004ebf
   140004eb0:	mov    rdx,rcx
   140004eb3:	mov    rax,r15
   140004eb6:	inc    rax
   140004eb9:	cmp    BYTE PTR [rcx+rax*1],r14b
   140004ebd:	jne    0x140004eb6
   140004ebf:	mov    rcx,QWORD PTR [rbx+0x58]
   140004ec3:	inc    eax
   140004ec5:	mov    DWORD PTR [rbp+0x8],eax
   140004ec8:	mov    rax,r14
   140004ecb:	mov    QWORD PTR [rbp+0x0],rdx
   140004ecf:	mov    rdx,r9
   140004ed2:	mov    DWORD PTR [rbp+0xc],r14d
   140004ed6:	test   rcx,rcx
   140004ed9:	je     0x140004eeb
   140004edb:	mov    rdx,rcx
   140004ede:	mov    rax,r15
   140004ee1:	inc    rax
   140004ee4:	cmp    WORD PTR [rcx+rax*2],r14w
   140004ee9:	jne    0x140004ee1
   140004eeb:	mov    rcx,QWORD PTR [rbx+0x68]
   140004eef:	lea    eax,[rax*2+0x2]
   140004ef6:	mov    DWORD PTR [rbp+0x18],eax
   140004ef9:	mov    eax,DWORD PTR [rbx+0x60]
   140004efc:	mov    DWORD PTR [rsp+0x38],eax
   140004f00:	lea    rax,[rsp+0x38]
   140004f05:	mov    QWORD PTR [rbp+0x20],rax
   140004f09:	mov    rax,r14
   140004f0c:	mov    QWORD PTR [rbp+0x10],rdx
   140004f10:	mov    DWORD PTR [rbp+0x1c],r14d
   140004f14:	mov    QWORD PTR [rbp+0x28],0x4
   140004f1c:	test   rcx,rcx
   140004f1f:	je     0x140004f30
   140004f21:	mov    r8,rcx
   140004f24:	mov    rax,r15
   140004f27:	inc    rax
   140004f2a:	cmp    BYTE PTR [rcx+rax*1],r14b
   140004f2e:	jne    0x140004f27
   140004f30:	mov    rcx,QWORD PTR [rbx+0x70]
   140004f34:	inc    eax
   140004f36:	mov    DWORD PTR [rbp+0x38],eax
   140004f39:	mov    rax,r14
   140004f3c:	mov    QWORD PTR [rbp+0x30],r8
   140004f40:	mov    DWORD PTR [rbp+0x3c],r14d
   140004f44:	test   rcx,rcx
   140004f47:	je     0x140004f59
   140004f49:	mov    r9,rcx
   140004f4c:	mov    rax,r15
   140004f4f:	inc    rax
   140004f52:	cmp    WORD PTR [rcx+rax*2],r14w
   140004f57:	jne    0x140004f4f
   140004f59:	lea    eax,[rax*2+0x2]
   140004f60:	mov    QWORD PTR [rbp+0x40],r9
   140004f64:	mov    DWORD PTR [rbp+0x48],eax
   140004f67:	lea    rax,[rbp+0x1a8]
   140004f6e:	mov    QWORD PTR [rbp+0x50],rax
   140004f72:	lea    rax,[rbp+0x1b0]
   140004f79:	mov    QWORD PTR [rbp+0x60],rax
   140004f7d:	lea    rax,[rbp+0x1b8]
   140004f84:	mov    QWORD PTR [rbp+0x70],rax
   140004f88:	lea    rax,[rbp+0x1c0]
   140004f8f:	mov    QWORD PTR [rbp+0x80],rax
   140004f96:	lea    rax,[rbp+0x1c8]
   140004f9d:	mov    QWORD PTR [rbp+0x90],rax
   140004fa4:	lea    rax,[rbp+0x1d0]
   140004fab:	mov    QWORD PTR [rbp+0xa0],rax
   140004fb2:	mov    DWORD PTR [rbp+0x4c],r14d
   140004fb6:	mov    QWORD PTR [rbp+0x58],0x4
   140004fbe:	mov    QWORD PTR [rbp+0x68],0x4
   140004fc6:	mov    QWORD PTR [rbp+0x78],0x4
   140004fce:	mov    QWORD PTR [rbp+0x88],0x4
   140004fd9:	mov    QWORD PTR [rbp+0x98],0x4
   140004fe4:	mov    QWORD PTR [rbp+0xa8],0x4
   140004fef:	lea    rax,[rsp+0x50]
   140004ff4:	mov    rcx,r10
   140004ff7:	mov    QWORD PTR [rsp+0x28],rax
   140004ffc:	lea    r8,[r11+0x8]
   140005000:	mov    DWORD PTR [rsp+0x20],0x16
   140005008:	lea    rdx,[rip+0x8de8]        # 0x14000ddf7
   14000500f:	jmp    0x140005150
   140005014:	test   rcx,rcx
   140005017:	je     0x14000501f
   140005019:	call   QWORD PTR [rip+0x7061]        # 0x14000c080
   14000501f:	mov    rdx,QWORD PTR [rdi+0x30]
   140005023:	mov    rbx,QWORD PTR [rdx+0x28]
   140005027:	cmp    DWORD PTR [rbx],0x5
   14000502a:	jbe    0x140005158
   140005030:	movabs rcx,0x200000000000
   14000503a:	test   QWORD PTR [rbx+0x10],rcx
   14000503e:	je     0x140005158
   140005044:	mov    rax,QWORD PTR [rbx+0x18]
   140005048:	and    rax,rcx
   14000504b:	cmp    rax,QWORD PTR [rbx+0x18]
   14000504f:	jne    0x140005158
   140005055:	mov    eax,DWORD PTR [rdx+0x54]
   140005058:	mov    DWORD PTR [rsp+0x38],eax
   14000505c:	lea    rax,[rsp+0x38]
   140005061:	mov    QWORD PTR [rbp+0xd0],rax
   140005068:	mov    QWORD PTR [rbp+0xd8],0x4
   140005073:	call   QWORD PTR [rip+0x7087]        # 0x14000c100
   140005079:	mov    DWORD PTR [rsp+0x30],eax
   14000507d:	lea    rax,[rsp+0x30]
   140005082:	mov    QWORD PTR [rbp+0xe0],rax
   140005089:	lea    rax,[rbp+0x1a8]
   140005090:	mov    QWORD PTR [rbp+0xf0],rax
   140005097:	lea    rax,[rbp+0x1b0]
   14000509e:	mov    QWORD PTR [rbp+0x100],rax
   1400050a5:	lea    rax,[rbp+0x1b8]
   1400050ac:	mov    QWORD PTR [rbp+0x110],rax
   1400050b3:	lea    rax,[rbp+0x1c0]
   1400050ba:	mov    QWORD PTR [rbp+0x120],rax
   1400050c1:	lea    rax,[rbp+0x1c8]
   1400050c8:	mov    QWORD PTR [rbp+0x130],rax
   1400050cf:	lea    rax,[rbp+0x1d0]
   1400050d6:	mov    QWORD PTR [rbp+0x140],rax
   1400050dd:	mov    QWORD PTR [rbp+0xe8],0x4
   1400050e8:	mov    QWORD PTR [rbp+0xf8],0x4
   1400050f3:	mov    QWORD PTR [rbp+0x108],0x4
   1400050fe:	mov    QWORD PTR [rbp+0x118],0x4
   140005109:	mov    QWORD PTR [rbp+0x128],0x4
   140005114:	mov    QWORD PTR [rbp+0x138],0x4
   14000511f:	mov    QWORD PTR [rbp+0x148],0x4
   14000512a:	mov    r8,QWORD PTR [rdi+0x30]
   14000512e:	lea    rax,[rbp+0xb0]
   140005135:	mov    QWORD PTR [rsp+0x28],rax
   14000513a:	lea    rdx,[rip+0x7fdd]        # 0x14000d11e
   140005141:	mov    DWORD PTR [rsp+0x20],0xa
   140005149:	add    r8,0x8
   14000514d:	mov    rcx,rbx
   140005150:	xor    r9d,r9d
   140005153:	call   0x1400010dc
   140005158:	cmp    DWORD PTR [rdi+0x20],r14d
   14000515c:	je     0x1400051ae
   14000515e:	lea    rbx,[rdi+0x8]
   140005162:	call   QWORD PTR [rip+0x6f98]        # 0x14000c100
   140005168:	cmp    DWORD PTR [rbx+0x18],eax
   14000516b:	je     0x14000517f
   14000516d:	mov    rcx,QWORD PTR [rbp+0x198]
   140005174:	mov    r9d,0x8007029c
   14000517a:	call   0x14000287c
   14000517f:	mov    rax,QWORD PTR [rbx]
   140005182:	mov    DWORD PTR [rbx+0x18],r14d
   140005186:	jmp    0x14000519a
   140005188:	mov    rax,QWORD PTR [rbx]
   14000518b:	mov    rax,QWORD PTR [rax]
   14000518e:	cmp    rax,rbx
   140005191:	je     0x1400051a1
   140005193:	add    rax,0x10
   140005197:	mov    QWORD PTR [rbx],rax
   14000519a:	cmp    QWORD PTR [rax],r14
   14000519d:	jne    0x140005188
   14000519f:	jmp    0x1400051ab
   1400051a1:	mov    rcx,QWORD PTR [rbx]
   1400051a4:	mov    rax,QWORD PTR [rbx+0x10]
   1400051a8:	mov    QWORD PTR [rcx],rax
   1400051ab:	mov    QWORD PTR [rbx],r14
   1400051ae:	mov    rcx,QWORD PTR [rbp+0x150]
   1400051b5:	xor    rcx,rsp
   1400051b8:	call   0x140009e20
   1400051bd:	add    rsp,0x268
   1400051c4:	pop    r15
   1400051c6:	pop    r14
   1400051c8:	pop    rdi
   1400051c9:	pop    rsi
   1400051ca:	pop    rbx
   1400051cb:	pop    rbp
   1400051cc:	ret    
   1400051cd:	int3   
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	int3   
   1400051d1:	int3   
   1400051d2:	int3   
   1400051d3:	int3   
   1400051d4:	sub    rsp,0x68
   1400051d8:	mov    rax,QWORD PTR [rip+0xae29]        # 0x140010008
   1400051df:	xor    rax,rsp
   1400051e2:	mov    QWORD PTR [rsp+0x50],rax
   1400051e7:	call   0x140002fd4
   1400051ec:	cmp    DWORD PTR [rax],0x5
   1400051ef:	jbe    0x140005235
   1400051f1:	movabs rdx,0x400000000000
   1400051fb:	test   QWORD PTR [rax+0x10],rdx
   1400051ff:	je     0x140005235
   140005201:	mov    rcx,QWORD PTR [rax+0x18]
   140005205:	and    rcx,rdx
   140005208:	cmp    rcx,QWORD PTR [rax+0x18]
   14000520c:	jne    0x140005235
   14000520e:	lea    rcx,[rsp+0x30]
   140005213:	xor    r9d,r9d
   140005216:	mov    QWORD PTR [rsp+0x28],rcx
   14000521b:	lea    rdx,[rip+0x7e4b]        # 0x14000d06d
   140005222:	mov    rcx,rax
   140005225:	mov    DWORD PTR [rsp+0x20],0x2
   14000522d:	xor    r8d,r8d
   140005230:	call   0x1400010dc
   140005235:	mov    rcx,QWORD PTR [rsp+0x50]
   14000523a:	xor    rcx,rsp
   14000523d:	call   0x140009e20
   140005242:	add    rsp,0x68
   140005246:	ret    
   140005247:	int3   
   140005248:	int3   
   140005249:	int3   
   14000524a:	int3   
   14000524b:	int3   
   14000524c:	int3   
   14000524d:	int3   
   14000524e:	int3   
   14000524f:	int3   
   140005250:	mov    QWORD PTR [rsp+0x8],rbx
   140005255:	push   rdi
   140005256:	sub    rsp,0x20
   14000525a:	mov    rbx,rcx
   14000525d:	mov    rcx,QWORD PTR [rcx+0x138]
   140005264:	test   rcx,rcx
   140005267:	je     0x14000529a
   140005269:	or     eax,0xffffffff
   14000526c:	lock xadd DWORD PTR [rcx],eax
   140005270:	cmp    eax,0x1
   140005273:	jne    0x140005292
   140005275:	mov    rdi,QWORD PTR [rbx+0x138]
   14000527c:	test   rdi,rdi
   14000527f:	je     0x140005292
   140005281:	lea    rcx,[rdi+0x8]
   140005285:	call   0x14000530c
   14000528a:	mov    rcx,rdi
   14000528d:	call   0x140009a28
   140005292:	and    QWORD PTR [rbx+0x138],0x0
   14000529a:	lea    rcx,[rbx+0x38]
   14000529e:	call   0x14000530c
   1400052a3:	add    rbx,0x8
   1400052a7:	cmp    DWORD PTR [rbx+0x18],0x0
   1400052ab:	je     0x1400052f9
   1400052ad:	call   QWORD PTR [rip+0x6e4d]        # 0x14000c100
   1400052b3:	cmp    DWORD PTR [rbx+0x18],eax
   1400052b6:	je     0x1400052c8
   1400052b8:	mov    rcx,QWORD PTR [rsp+0x28]
   1400052bd:	mov    r9d,0x8007029c
   1400052c3:	call   0x14000287c
   1400052c8:	and    DWORD PTR [rbx+0x18],0x0
   1400052cc:	mov    rax,QWORD PTR [rbx]
   1400052cf:	jmp    0x1400052e3
   1400052d1:	mov    rax,QWORD PTR [rbx]
   1400052d4:	mov    rax,QWORD PTR [rax]
   1400052d7:	cmp    rax,rbx
   1400052da:	je     0x1400052eb
   1400052dc:	add    rax,0x10
   1400052e0:	mov    QWORD PTR [rbx],rax
   1400052e3:	cmp    QWORD PTR [rax],0x0
   1400052e7:	jne    0x1400052d1
   1400052e9:	jmp    0x1400052f5
   1400052eb:	mov    rcx,QWORD PTR [rbx]
   1400052ee:	mov    rax,QWORD PTR [rbx+0x10]
   1400052f2:	mov    QWORD PTR [rcx],rax
   1400052f5:	and    QWORD PTR [rbx],0x0
   1400052f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400052fe:	add    rsp,0x20
   140005302:	pop    rdi
   140005303:	ret    
   140005304:	int3   
   140005305:	int3   
   140005306:	int3   
   140005307:	int3   
   140005308:	int3   
   140005309:	int3   
   14000530a:	int3   
   14000530b:	int3   
   14000530c:	rex push rbx
   14000530e:	sub    rsp,0x20
   140005312:	mov    rbx,rcx
   140005315:	mov    rcx,QWORD PTR [rcx+0xe8]
   14000531c:	test   rcx,rcx
   14000531f:	je     0x14000534a
   140005321:	or     eax,0xffffffff
   140005324:	lock xadd DWORD PTR [rcx],eax
   140005328:	cmp    eax,0x1
   14000532b:	jne    0x14000533a
   14000532d:	mov    rcx,QWORD PTR [rbx+0xe8]
   140005334:	call   QWORD PTR [rip+0x70a6]        # 0x14000c3e0
   14000533a:	and    QWORD PTR [rbx+0xe8],0x0
   140005342:	and    QWORD PTR [rbx+0xf0],0x0
   14000534a:	cmp    BYTE PTR [rbx+0x48],0x0
   14000534e:	je     0x14000535e
   140005350:	mov    rcx,QWORD PTR [rbx+0x40]
   140005354:	call   QWORD PTR [rip+0x7086]        # 0x14000c3e0
   14000535a:	mov    BYTE PTR [rbx+0x48],0x0
   14000535e:	and    QWORD PTR [rbx+0x40],0x0
   140005363:	cmp    DWORD PTR [rbx],0x1
   140005366:	jne    0x14000537b
   140005368:	mov    rcx,QWORD PTR [rbx+0x28]
   14000536c:	lea    rdx,[rbx+0x8]
   140005370:	mov    DWORD PTR [rbx],0x2
   140005376:	call   0x1400076d4
   14000537b:	mov    DWORD PTR [rbx],0x3
   140005381:	add    rsp,0x20
   140005385:	pop    rbx
   140005386:	ret    
   140005387:	int3   
   140005388:	int3   
   140005389:	int3   
   14000538a:	int3   
   14000538b:	int3   
   14000538c:	int3   
   14000538d:	int3   
   14000538e:	int3   
   14000538f:	int3   
   140005390:	mov    QWORD PTR [rsp+0x8],rbx
   140005395:	push   rdi
   140005396:	sub    rsp,0x20
   14000539a:	mov    rdi,rcx
   14000539d:	xor    ebx,ebx
   14000539f:	call   QWORD PTR [rip+0x6dcb]        # 0x14000c170
   1400053a5:	cmp    eax,0x1
   1400053a8:	jne    0x14000540c
   1400053aa:	mov    rcx,rdi
   1400053ad:	call   QWORD PTR [rip+0x6ddd]        # 0x14000c190
   1400053b3:	cmp    eax,0x1
   1400053b6:	jne    0x14000540c
   1400053b8:	lea    r8,[rsp+0x40]
   1400053bd:	mov    edx,eax
   1400053bf:	mov    rcx,rdi
   1400053c2:	call   QWORD PTR [rip+0x6dd0]        # 0x14000c198
   1400053c8:	test   eax,eax
   1400053ca:	js     0x14000540c
   1400053cc:	cmp    DWORD PTR [rsp+0x40],ebx
   1400053d0:	jne    0x14000540c
   1400053d2:	lea    rdx,[rsp+0x38]
   1400053d7:	mov    rcx,rdi
   1400053da:	call   QWORD PTR [rip+0x6da0]        # 0x14000c180
   1400053e0:	test   eax,eax
   1400053e2:	js     0x14000540c
   1400053e4:	cmp    WORD PTR [rsp+0x38],0x11
   1400053ea:	jne    0x14000540c
   1400053ec:	lea    r8,[rsp+0x48]
   1400053f1:	mov    rcx,rdi
   1400053f4:	lea    edx,[rbx+0x1]
   1400053f7:	call   QWORD PTR [rip+0x6d63]        # 0x14000c160
   1400053fd:	test   eax,eax
   1400053ff:	js     0x14000540c
   140005401:	mov    eax,DWORD PTR [rsp+0x48]
   140005405:	test   eax,eax
   140005407:	jle    0x14000540c
   140005409:	lea    ebx,[rax+0x1]
   14000540c:	mov    eax,ebx
   14000540e:	mov    rbx,QWORD PTR [rsp+0x30]
   140005413:	add    rsp,0x20
   140005417:	pop    rdi
   140005418:	ret    
   140005419:	int3   
   14000541a:	int3   
   14000541b:	int3   
   14000541c:	int3   
   14000541d:	int3   
   14000541e:	int3   
   14000541f:	int3   
   140005420:	mov    rax,rsp
   140005423:	mov    QWORD PTR [rax+0x8],rbx
   140005427:	mov    QWORD PTR [rax+0x18],rsi
   14000542b:	mov    QWORD PTR [rax+0x10],rdx
   14000542f:	push   rbp
   140005430:	push   rdi
   140005431:	push   r12
   140005433:	push   r14
   140005435:	push   r15
   140005437:	lea    rbp,[rax-0x2f]
   14000543b:	sub    rsp,0x100
   140005442:	mov    r14,QWORD PTR [rbp+0x6f]
   140005446:	xor    eax,eax
   140005448:	mov    rdi,r9
   14000544b:	mov    ebx,r8d
   14000544e:	mov    r12,rcx
   140005451:	mov    esi,0x80070057
   140005456:	mov    QWORD PTR [r14],rax
   140005459:	test   r9,r9
   14000545c:	je     0x140005468
   14000545e:	cmp    DWORD PTR [r9],0x68
   140005462:	jne    0x1400056b5
   140005468:	mov    rcx,QWORD PTR [rbp+0x67]
   14000546c:	xor    esi,esi
   14000546e:	mov    QWORD PTR [rsp+0x70],rsi
   140005473:	call   0x140005390
   140005478:	mov    r15d,eax
   14000547b:	test   eax,eax
   14000547d:	je     0x140005494
   14000547f:	mov    rcx,QWORD PTR [rbp+0x67]
   140005483:	lea    rdx,[rsp+0x70]
   140005488:	call   QWORD PTR [rip+0x6cda]        # 0x14000c168
   14000548e:	test   eax,eax
   140005490:	cmovs  r15d,esi
   140005494:	xor    edx,edx
   140005496:	mov    QWORD PTR [rbp+0x4f],rsi
   14000549a:	lea    rax,[rsp+0x78]
   14000549f:	mov    DWORD PTR [rbp+0x6f],esi
   1400054a2:	lea    r9,[rip+0x780f]        # 0x14000ccb8
   1400054a9:	mov    QWORD PTR [rsp+0x20],rax
   1400054ae:	lea    rcx,[rip+0x7a33]        # 0x14000cee8
   1400054b5:	lea    r8d,[rdx+0x1]
   1400054b9:	call   QWORD PTR [rip+0x6d91]        # 0x14000c250
   1400054bf:	mov    esi,eax
   1400054c1:	test   eax,eax
   1400054c3:	js     0x1400055d7
   1400054c9:	lea    r8,[rbp-0x69]
   1400054cd:	mov    rdx,rdi
   1400054d0:	mov    rcx,r12
   1400054d3:	call   0x140005850
   1400054d8:	mov    rcx,QWORD PTR [rbp+0x3f]
   1400054dc:	call   QWORD PTR [rip+0x6cce]        # 0x14000c1b0
   1400054e2:	test   ebx,ebx
   1400054e4:	je     0x140005541
   1400054e6:	mov    rax,QWORD PTR [rbp+0x87]
   1400054ed:	lea    r8,[rbp-0x69]
   1400054f1:	mov    r9d,DWORD PTR [rbp+0x57]
   1400054f5:	xor    edx,edx
   1400054f7:	mov    QWORD PTR [rsp+0x58],rax
   1400054fc:	mov    eax,DWORD PTR [rbp+0x7f]
   1400054ff:	mov    DWORD PTR [rsp+0x50],eax
   140005503:	mov    rax,QWORD PTR [rbp+0x77]
   140005507:	lea    ecx,[rdx+0x8]
   14000550a:	mov    QWORD PTR [rsp+0x48],rax
   14000550f:	lea    rax,[rbp+0x6f]
   140005513:	mov    QWORD PTR [rsp+0x40],rax
   140005518:	lea    rax,[rbp+0x4f]
   14000551c:	mov    QWORD PTR [rsp+0x38],rax
   140005521:	mov    rax,QWORD PTR [rsp+0x70]
   140005526:	mov    DWORD PTR [rsp+0x30],r15d
   14000552b:	mov    QWORD PTR [rsp+0x28],rax
   140005530:	mov    rax,QWORD PTR [rbp+0x5f]
   140005534:	mov    QWORD PTR [rsp+0x20],rax
   140005539:	call   QWORD PTR [rip+0xcac1]        # 0x140012000
   14000553f:	jmp    0x1400055b3
   140005541:	mov    rbx,QWORD PTR [rsp+0x78]
   140005546:	mov    rax,QWORD PTR [rbx]
   140005549:	mov    rdi,QWORD PTR [rax+0x18]
   14000554d:	mov    rcx,rdi
   140005550:	call   QWORD PTR [rip+0x6f9a]        # 0x14000c4f0
   140005556:	mov    rax,QWORD PTR [rbp+0x87]
   14000555d:	lea    r9,[rbp-0x69]
   140005561:	mov    QWORD PTR [rsp+0x60],rax
   140005566:	xor    r8d,r8d
   140005569:	mov    eax,DWORD PTR [rbp+0x7f]
   14000556c:	mov    rcx,rbx
   14000556f:	mov    DWORD PTR [rsp+0x58],eax
   140005573:	mov    rax,QWORD PTR [rbp+0x77]
   140005577:	mov    QWORD PTR [rsp+0x50],rax
   14000557c:	lea    edx,[r8+0x8]
   140005580:	lea    rax,[rbp+0x6f]
   140005584:	mov    QWORD PTR [rsp+0x48],rax
   140005589:	lea    rax,[rbp+0x4f]
   14000558d:	mov    QWORD PTR [rsp+0x40],rax
   140005592:	mov    rax,QWORD PTR [rsp+0x70]
   140005597:	mov    DWORD PTR [rsp+0x38],r15d
   14000559c:	mov    QWORD PTR [rsp+0x30],rax
   1400055a1:	mov    rax,QWORD PTR [rbp+0x5f]
   1400055a5:	mov    QWORD PTR [rsp+0x28],rax
   1400055aa:	mov    eax,DWORD PTR [rbp+0x57]
   1400055ad:	mov    DWORD PTR [rsp+0x20],eax
   1400055b1:	call   rdi
   1400055b3:	xor    ecx,ecx
   1400055b5:	mov    esi,eax
   1400055b7:	call   QWORD PTR [rip+0x6bf3]        # 0x14000c1b0
   1400055bd:	mov    rbx,QWORD PTR [rsp+0x78]
   1400055c2:	mov    rax,QWORD PTR [rbx]
   1400055c5:	mov    rdi,QWORD PTR [rax+0x10]
   1400055c9:	mov    rcx,rdi
   1400055cc:	call   QWORD PTR [rip+0x6f1e]        # 0x14000c4f0
   1400055d2:	mov    rcx,rbx
   1400055d5:	call   rdi
   1400055d7:	xor    ebx,ebx
   1400055d9:	test   r15d,r15d
   1400055dc:	je     0x1400055e8
   1400055de:	mov    rcx,QWORD PTR [rbp+0x67]
   1400055e2:	call   QWORD PTR [rip+0x6ba0]        # 0x14000c188
   1400055e8:	mov    r8d,DWORD PTR [rbp+0x6f]
   1400055ec:	mov    ecx,0x11
   1400055f1:	xor    edx,edx
   1400055f3:	call   QWORD PTR [rip+0x6b7f]        # 0x14000c178
   1400055f9:	mov    QWORD PTR [r14],rax
   1400055fc:	test   rax,rax
   1400055ff:	je     0x14000563f
   140005601:	cmp    DWORD PTR [rbp+0x6f],ebx
   140005604:	jbe    0x140005650
   140005606:	lea    rdx,[rbp-0x79]
   14000560a:	mov    rcx,rax
   14000560d:	call   QWORD PTR [rip+0x6b55]        # 0x14000c168
   140005613:	test   eax,eax
   140005615:	js     0x140005633
   140005617:	mov    r8d,DWORD PTR [rbp+0x6f]
   14000561b:	mov    rdx,QWORD PTR [rbp+0x4f]
   14000561f:	mov    rcx,QWORD PTR [rbp-0x79]
   140005623:	call   0x14000a616
   140005628:	mov    rcx,QWORD PTR [r14]
   14000562b:	call   QWORD PTR [rip+0x6b57]        # 0x14000c188
   140005631:	jmp    0x14000563f
   140005633:	mov    rcx,QWORD PTR [r14]
   140005636:	call   QWORD PTR [rip+0x6b64]        # 0x14000c1a0
   14000563c:	mov    QWORD PTR [r14],rbx
   14000563f:	mov    eax,DWORD PTR [rbp+0x6f]
   140005642:	test   eax,eax
   140005644:	je     0x140005650
   140005646:	mov    rdi,QWORD PTR [rbp+0x4f]
   14000564a:	mov    ecx,eax
   14000564c:	xor    eax,eax
   14000564e:	rep stos BYTE PTR es:[rdi],al
   140005650:	mov    rcx,QWORD PTR [rbp+0x4f]
   140005654:	call   QWORD PTR [rip+0x6be6]        # 0x14000c240
   14000565a:	test   esi,esi
   14000565c:	js     0x140005669
   14000565e:	cmp    QWORD PTR [r14],rbx
   140005661:	mov    eax,0x8007000e
   140005666:	cmove  esi,eax
   140005669:	mov    rcx,QWORD PTR [r12]
   14000566d:	mov    dil,bl
   140005670:	test   rcx,rcx
   140005673:	je     0x140005688
   140005675:	xor    edx,edx
   140005677:	call   QWORD PTR [rip+0x69f3]        # 0x14000c070
   14000567d:	test   eax,eax
   14000567f:	sete   dil
   140005683:	test   dil,dil
   140005686:	jne    0x1400056a0
   140005688:	mov    rcx,QWORD PTR [r12+0x28]
   14000568d:	test   rcx,rcx
   140005690:	je     0x1400056a0
   140005692:	xor    edx,edx
   140005694:	call   QWORD PTR [rip+0x69d6]        # 0x14000c070
   14000569a:	test   eax,eax
   14000569c:	sete   dil
   1400056a0:	mov    rcx,r12
   1400056a3:	call   0x140005b04
   1400056a8:	test   dil,dil
   1400056ab:	je     0x1400056b5
   1400056ad:	xor    ecx,ecx
   1400056af:	call   QWORD PTR [rip+0x6b3b]        # 0x14000c1f0
   1400056b5:	lea    r11,[rsp+0x100]
   1400056bd:	mov    eax,esi
   1400056bf:	mov    rbx,QWORD PTR [r11+0x30]
   1400056c3:	mov    rsi,QWORD PTR [r11+0x40]
   1400056c7:	mov    rsp,r11
   1400056ca:	pop    r15
   1400056cc:	pop    r14
   1400056ce:	pop    r12
   1400056d0:	pop    rdi
   1400056d1:	pop    rbp
   1400056d2:	ret    
   1400056d3:	int3   
   1400056d4:	int3   
   1400056d5:	int3   
   1400056d6:	int3   
   1400056d7:	int3   
   1400056d8:	int3   
   1400056d9:	int3   
   1400056da:	int3   
   1400056db:	int3   
   1400056dc:	mov    rax,rsp
   1400056df:	mov    QWORD PTR [rax+0x8],rcx
   1400056e3:	push   rbx
   1400056e4:	push   rsi
   1400056e5:	push   rdi
   1400056e6:	push   r14
   1400056e8:	push   r15
   1400056ea:	sub    rsp,0x40
   1400056ee:	mov    rcx,rdx
   1400056f1:	mov    BYTE PTR [r8],0x0
   1400056f5:	lea    rdx,[rax+0x18]
   1400056f9:	mov    rsi,r8
   1400056fc:	call   QWORD PTR [rip+0x6ace]        # 0x14000c1d0
   140005702:	mov    r14d,0x80070000
   140005708:	mov    r15d,0x80004005
   14000570e:	test   eax,eax
   140005710:	jne    0x140005731
   140005712:	call   QWORD PTR [rip+0x69a0]        # 0x14000c0b8
   140005718:	movzx  ebx,ax
   14000571b:	or     ebx,r14d
   14000571e:	test   eax,eax
   140005720:	cmovle ebx,eax
   140005723:	test   ebx,ebx
   140005725:	cmovns ebx,r15d
   140005729:	test   ebx,ebx
   14000572b:	js     0x140005810
   140005731:	mov    r8d,DWORD PTR [rsp+0x80]
   140005739:	xor    edx,edx
   14000573b:	mov    ecx,0x1000
   140005740:	call   QWORD PTR [rip+0x695a]        # 0x14000c0a0
   140005746:	mov    rdi,rax
   140005749:	test   rax,rax
   14000574c:	jne    0x140005767
   14000574e:	call   QWORD PTR [rip+0x6964]        # 0x14000c0b8
   140005754:	movzx  ebx,ax
   140005757:	or     ebx,r14d
   14000575a:	test   eax,eax
   14000575c:	cmovle ebx,eax
   14000575f:	test   ebx,ebx
   140005761:	cmovns ebx,r15d
   140005765:	jmp    0x140005769
   140005767:	xor    ebx,ebx
   140005769:	test   ebx,ebx
   14000576b:	js     0x140005810
   140005771:	lea    r8,[rsp+0x30]
   140005776:	mov    edx,0x8
   14000577b:	mov    rcx,rdi
   14000577e:	call   QWORD PTR [rip+0x68ac]        # 0x14000c030
   140005784:	test   eax,eax
   140005786:	jne    0x1400057a3
   140005788:	call   QWORD PTR [rip+0x692a]        # 0x14000c0b8
   14000578e:	movzx  ebx,ax
   140005791:	or     ebx,r14d
   140005794:	test   eax,eax
   140005796:	cmovle ebx,eax
   140005799:	test   ebx,ebx
   14000579b:	cmovns ebx,r15d
   14000579f:	test   ebx,ebx
   1400057a1:	js     0x140005807
   1400057a3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400057a8:	lea    rax,[rsp+0x88]
   1400057b0:	and    DWORD PTR [rsp+0x70],0x0
   1400057b5:	lea    r8,[rsp+0x70]
   1400057ba:	mov    r9d,0x4
   1400057c0:	mov    QWORD PTR [rsp+0x20],rax
   1400057c5:	lea    edx,[r9+0x10]
   1400057c9:	call   QWORD PTR [rip+0x6839]        # 0x14000c008
   1400057cf:	test   eax,eax
   1400057d1:	je     0x1400057d7
   1400057d3:	xor    ebx,ebx
   1400057d5:	jmp    0x1400057f2
   1400057d7:	call   QWORD PTR [rip+0x68db]        # 0x14000c0b8
   1400057dd:	movzx  ebx,ax
   1400057e0:	or     ebx,r14d
   1400057e3:	test   eax,eax
   1400057e5:	cmovle ebx,eax
   1400057e8:	test   ebx,ebx
   1400057ea:	cmovns ebx,r15d
   1400057ee:	test   ebx,ebx
   1400057f0:	js     0x1400057fc
   1400057f2:	cmp    DWORD PTR [rsp+0x70],0x0
   1400057f7:	setne  cl
   1400057fa:	mov    BYTE PTR [rsi],cl
   1400057fc:	mov    rcx,QWORD PTR [rsp+0x30]
   140005801:	call   QWORD PTR [rip+0x6901]        # 0x14000c108
   140005807:	mov    rcx,rdi
   14000580a:	call   QWORD PTR [rip+0x68f8]        # 0x14000c108
   140005810:	mov    eax,ebx
   140005812:	add    rsp,0x40
   140005816:	pop    r15
   140005818:	pop    r14
   14000581a:	pop    rdi
   14000581b:	pop    rsi
   14000581c:	pop    rbx
   14000581d:	ret    
   14000581e:	int3   
   14000581f:	int3   
   140005820:	int3   
   140005821:	int3   
   140005822:	int3   
   140005823:	int3   
   140005824:	int3   
   140005825:	int3   
   140005826:	int3   
   140005827:	int3   
   140005828:	int3   
   140005829:	int3   
   14000582a:	int3   
   14000582b:	int3   
   14000582c:	int3   
   14000582d:	int3   
   14000582e:	int3   
   14000582f:	int3   
   140005830:	sub    rsp,0x28
   140005834:	mov    rcx,QWORD PTR [rcx+0x10]
   140005838:	test   rcx,rcx
   14000583b:	je     0x140005843
   14000583d:	call   QWORD PTR [rip+0x6835]        # 0x14000c078
   140005843:	add    rsp,0x28
   140005847:	ret    
   140005848:	int3   
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	rex push rbx
   140005852:	push   rbp
   140005853:	push   rsi
   140005854:	push   rdi
   140005855:	push   r14
   140005857:	sub    rsp,0x1e0
   14000585e:	mov    rax,QWORD PTR [rip+0xa7a3]        # 0x140010008
   140005865:	xor    rax,rsp
   140005868:	mov    QWORD PTR [rsp+0x1d0],rax
   140005870:	movups xmm0,XMMWORD PTR [rdx]
   140005873:	mov    rbx,rcx
   140005876:	mov    rbp,r8
   140005879:	lea    rcx,[rsp+0x38]
   14000587e:	mov    rdi,rdx
   140005881:	movaps XMMWORD PTR [r8],xmm0
   140005885:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140005889:	movaps XMMWORD PTR [r8+0x10],xmm1
   14000588e:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140005892:	movaps XMMWORD PTR [r8+0x20],xmm0
   140005897:	movups xmm1,XMMWORD PTR [rdx+0x30]
   14000589b:	movaps XMMWORD PTR [r8+0x30],xmm1
   1400058a0:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400058a4:	movaps XMMWORD PTR [r8+0x40],xmm0
   1400058a9:	movups xmm1,XMMWORD PTR [rdx+0x50]
   1400058ad:	movaps XMMWORD PTR [r8+0x50],xmm1
   1400058b2:	movsd  xmm0,QWORD PTR [rdx+0x60]
   1400058b7:	movsd  QWORD PTR [r8+0x60],xmm0
   1400058bd:	call   QWORD PTR [rip+0x695d]        # 0x14000c220
   1400058c3:	xor    r14d,r14d
   1400058c6:	test   eax,eax
   1400058c8:	js     0x140005add
   1400058ce:	lea    r8d,[r14+0x40]
   1400058d2:	lea    rdx,[rsp+0x50]
   1400058d7:	lea    rcx,[rsp+0x38]
   1400058dc:	call   QWORD PTR [rip+0x692e]        # 0x14000c210
   1400058e2:	test   eax,eax
   1400058e4:	js     0x140005add
   1400058ea:	lea    r9,[rsp+0x50]
   1400058ef:	mov    edx,0x80
   1400058f4:	lea    r8,[rip+0x70cd]        # 0x14000c9c8
   1400058fb:	lea    rcx,[rsp+0xd0]
   140005903:	call   0x140001848
   140005908:	test   eax,eax
   14000590a:	js     0x140005add
   140005910:	lea    rsi,[rbx+0x38]
   140005914:	or     r9,0xffffffffffffffff
   140005918:	lea    rax,[rsp+0xd0]
   140005920:	inc    r9
   140005923:	cmp    WORD PTR [rax+r9*2],r14w
   140005928:	jne    0x140005920
   14000592a:	lea    r8,[rsp+0xd0]
   140005932:	mov    QWORD PTR [rsp+0x28],rsi
   140005937:	call   0x140007bac
   14000593c:	test   eax,eax
   14000593e:	js     0x140005add
   140005944:	mov    r8,rbx
   140005947:	mov    ecx,0x100000
   14000594c:	call   0x140008780
   140005951:	test   eax,eax
   140005953:	js     0x140005add
   140005959:	mov    r9,QWORD PTR [rsi]
   14000595c:	xor    r8d,r8d
   14000595f:	xor    ecx,ecx
   140005961:	lea    edx,[r8+0x1]
   140005965:	call   QWORD PTR [rip+0x676d]        # 0x14000c0d8
   14000596b:	mov    QWORD PTR [rbx+0x10],rax
   14000596f:	cmp    rax,0xffffffffffffffff
   140005973:	jne    0x14000598b
   140005975:	call   QWORD PTR [rip+0x673d]        # 0x14000c0b8
   14000597b:	movzx  ecx,ax
   14000597e:	or     ecx,0x80070000
   140005984:	test   eax,eax
   140005986:	cmovle ecx,eax
   140005989:	jmp    0x14000598e
   14000598b:	mov    ecx,r14d
   14000598e:	test   ecx,ecx
   140005990:	js     0x140005add
   140005996:	mov    r8,QWORD PTR [rdi+0x58]
   14000599a:	test   r8,r8
   14000599d:	je     0x1400059fe
   14000599f:	cmp    WORD PTR [r8],r14w
   1400059a3:	je     0x1400059fe
   1400059a5:	xor    edx,edx
   1400059a7:	mov    ecx,0x100000
   1400059ac:	call   QWORD PTR [rip+0x6746]        # 0x14000c0f8
   1400059b2:	mov    QWORD PTR [rbx+0x20],rax
   1400059b6:	cmp    rax,0xffffffffffffffff
   1400059ba:	jne    0x1400059d2
   1400059bc:	call   QWORD PTR [rip+0x66f6]        # 0x14000c0b8
   1400059c2:	movzx  ecx,ax
   1400059c5:	or     ecx,0x80070000
   1400059cb:	test   eax,eax
   1400059cd:	cmovle ecx,eax
   1400059d0:	jmp    0x1400059d5
   1400059d2:	mov    ecx,r14d
   1400059d5:	test   ecx,ecx
   1400059d7:	js     0x1400059fe
   1400059d9:	mov    rdx,QWORD PTR [rbx+0x20]
   1400059dd:	lea    rcx,[rbx+0x18]
   1400059e1:	mov    DWORD PTR [rsp+0x28],0x8
   1400059e9:	lea    r8,[rip+0xfffffffffffffe40]        # 0x140005830
   1400059f0:	or     DWORD PTR [rsp+0x20],0xffffffff
   1400059f5:	mov    r9,rbx
   1400059f8:	call   QWORD PTR [rip+0x66d2]        # 0x14000c0d0
   1400059fe:	mov    rcx,QWORD PTR [rdi+0x8]
   140005a02:	test   rcx,rcx
   140005a05:	je     0x140005aa8
   140005a0b:	lea    rdx,[rsp+0x30]
   140005a10:	call   QWORD PTR [rip+0x67ba]        # 0x14000c1d0
   140005a16:	test   eax,eax
   140005a18:	jne    0x140005a3c
   140005a1a:	call   QWORD PTR [rip+0x6698]        # 0x14000c0b8
   140005a20:	movzx  edx,ax
   140005a23:	or     edx,0x80070000
   140005a29:	test   eax,eax
   140005a2b:	cmovle edx,eax
   140005a2e:	mov    eax,0x80004005
   140005a33:	test   edx,edx
   140005a35:	cmovns edx,eax
   140005a38:	test   edx,edx
   140005a3a:	js     0x140005aa8
   140005a3c:	mov    rcx,QWORD PTR [rbx]
   140005a3f:	call   QWORD PTR [rip+0x6683]        # 0x14000c0c8
   140005a45:	mov    r8d,DWORD PTR [rsp+0x30]
   140005a4a:	cmp    r8d,eax
   140005a4d:	je     0x140005aa8
   140005a4f:	xor    edx,edx
   140005a51:	mov    ecx,0x100000
   140005a56:	call   QWORD PTR [rip+0x6644]        # 0x14000c0a0
   140005a5c:	mov    QWORD PTR [rbx+0x28],rax
   140005a60:	cmp    rax,0xffffffffffffffff
   140005a64:	jne    0x140005a7c
   140005a66:	call   QWORD PTR [rip+0x664c]        # 0x14000c0b8
   140005a6c:	movzx  ecx,ax
   140005a6f:	or     ecx,0x80070000
   140005a75:	test   eax,eax
   140005a77:	cmovle ecx,eax
   140005a7a:	jmp    0x140005a7f
   140005a7c:	mov    ecx,r14d
   140005a7f:	test   ecx,ecx
   140005a81:	js     0x140005aa8
   140005a83:	mov    rdx,QWORD PTR [rbx+0x28]
   140005a87:	lea    rcx,[rbx+0x30]
   140005a8b:	mov    DWORD PTR [rsp+0x28],0x8
   140005a93:	lea    r8,[rip+0xfffffffffffffd96]        # 0x140005830
   140005a9a:	or     DWORD PTR [rsp+0x20],0xffffffff
   140005a9f:	mov    r9,rbx
   140005aa2:	call   QWORD PTR [rip+0x6628]        # 0x14000c0d0
   140005aa8:	mov    rax,QWORD PTR [rsi]
   140005aab:	lea    rcx,[rbx+0x8]
   140005aaf:	mov    QWORD PTR [rbp+0x58],rax
   140005ab3:	lea    r8,[rip+0xfffffffffffffd76]        # 0x140005830
   140005aba:	mov    rdx,QWORD PTR [rbx]
   140005abd:	mov    r9,rbx
   140005ac0:	mov    DWORD PTR [rsp+0x28],0x8
   140005ac8:	or     DWORD PTR [rsp+0x20],0xffffffff
   140005acd:	call   QWORD PTR [rip+0x65fd]        # 0x14000c0d0
   140005ad3:	test   eax,eax
   140005ad5:	jne    0x140005add
   140005ad7:	call   QWORD PTR [rip+0x65db]        # 0x14000c0b8
   140005add:	mov    rcx,QWORD PTR [rsp+0x1d0]
   140005ae5:	xor    rcx,rsp
   140005ae8:	call   0x140009e20
   140005aed:	add    rsp,0x1e0
   140005af4:	pop    r14
   140005af6:	pop    rdi
   140005af7:	pop    rsi
   140005af8:	pop    rbp
   140005af9:	pop    rbx
   140005afa:	ret    
   140005afb:	int3   
   140005afc:	int3   
   140005afd:	int3   
   140005afe:	int3   
   140005aff:	int3   
   140005b00:	int3   
   140005b01:	int3   
   140005b02:	int3   
   140005b03:	int3   
   140005b04:	rex push rbx
   140005b06:	sub    rsp,0x20
   140005b0a:	mov    rbx,rcx
   140005b0d:	mov    rcx,QWORD PTR [rcx+0x8]
   140005b11:	test   rcx,rcx
   140005b14:	je     0x140005b21
   140005b16:	call   QWORD PTR [rip+0x6534]        # 0x14000c050
   140005b1c:	and    QWORD PTR [rbx+0x8],0x0
   140005b21:	mov    rcx,QWORD PTR [rbx+0x18]
   140005b25:	test   rcx,rcx
   140005b28:	je     0x140005b35
   140005b2a:	call   QWORD PTR [rip+0x6520]        # 0x14000c050
   140005b30:	and    QWORD PTR [rbx+0x18],0x0
   140005b35:	mov    rcx,QWORD PTR [rbx+0x30]
   140005b39:	test   rcx,rcx
   140005b3c:	je     0x140005b49
   140005b3e:	call   QWORD PTR [rip+0x650c]        # 0x14000c050
   140005b44:	and    QWORD PTR [rbx+0x30],0x0
   140005b49:	mov    rcx,QWORD PTR [rbx]
   140005b4c:	test   rcx,rcx
   140005b4f:	je     0x140005b5b
   140005b51:	call   QWORD PTR [rip+0x65b1]        # 0x14000c108
   140005b57:	and    QWORD PTR [rbx],0x0
   140005b5b:	mov    rcx,QWORD PTR [rbx+0x10]
   140005b5f:	test   rcx,rcx
   140005b62:	je     0x140005b6f
   140005b64:	call   QWORD PTR [rip+0x659e]        # 0x14000c108
   140005b6a:	and    QWORD PTR [rbx+0x10],0x0
   140005b6f:	mov    rcx,QWORD PTR [rbx+0x20]
   140005b73:	test   rcx,rcx
   140005b76:	je     0x140005b83
   140005b78:	call   QWORD PTR [rip+0x658a]        # 0x14000c108
   140005b7e:	and    QWORD PTR [rbx+0x20],0x0
   140005b83:	mov    rcx,QWORD PTR [rbx+0x28]
   140005b87:	test   rcx,rcx
   140005b8a:	je     0x140005b97
   140005b8c:	call   QWORD PTR [rip+0x6576]        # 0x14000c108
   140005b92:	and    QWORD PTR [rbx+0x28],0x0
   140005b97:	mov    rcx,QWORD PTR [rbx+0x38]
   140005b9b:	call   QWORD PTR [rip+0x669f]        # 0x14000c240
   140005ba1:	and    QWORD PTR [rbx+0x38],0x0
   140005ba6:	add    rsp,0x20
   140005baa:	pop    rbx
   140005bab:	ret    
   140005bac:	int3   
   140005bad:	int3   
   140005bae:	int3   
   140005baf:	int3   
   140005bb0:	int3   
   140005bb1:	int3   
   140005bb2:	int3   
   140005bb3:	int3   
   140005bb4:	int3   
   140005bb5:	int3   
   140005bb6:	int3   
   140005bb7:	int3   
   140005bb8:	int3   
   140005bb9:	int3   
   140005bba:	int3   
   140005bbb:	int3   
   140005bbc:	int3   
   140005bbd:	int3   
   140005bbe:	int3   
   140005bbf:	int3   
   140005bc0:	rex push rbp
   140005bc2:	push   rbx
   140005bc3:	push   rsi
   140005bc4:	push   rdi
   140005bc5:	push   r12
   140005bc7:	push   r13
   140005bc9:	push   r14
   140005bcb:	push   r15
   140005bcd:	lea    rbp,[rsp-0xc8]
   140005bd5:	sub    rsp,0x1c8
   140005bdc:	mov    rax,QWORD PTR [rip+0xa425]        # 0x140010008
   140005be3:	xor    rax,rsp
   140005be6:	mov    QWORD PTR [rbp+0xb0],rax
   140005bed:	mov    rax,QWORD PTR [rbp+0x140]
   140005bf4:	mov    r15,r9
   140005bf7:	mov    r12,QWORD PTR [rbp+0x130]
   140005bfe:	mov    rbx,rdx
   140005c01:	mov    r14,QWORD PTR [rbp+0x138]
   140005c08:	mov    rsi,rcx
   140005c0b:	mov    r13,QWORD PTR [rbp+0x150]
   140005c12:	mov    QWORD PTR [rsp+0x68],rax
   140005c17:	mov    DWORD PTR [rsp+0x60],r8d
   140005c1c:	call   0x140002fd4
   140005c21:	xor    edi,edi
   140005c23:	mov    QWORD PTR [rbp-0x30],rax
   140005c27:	lea    rcx,[rsp+0x70]
   140005c2c:	mov    QWORD PTR [rsp+0x78],rdi
   140005c31:	mov    QWORD PTR [rbp-0x80],rcx
   140005c35:	lea    rax,[rip+0x6d44]        # 0x14000c980
   140005c3c:	lea    rcx,[rbp-0x28]
   140005c40:	mov    QWORD PTR [rbp-0x78],rdi
   140005c44:	mov    QWORD PTR [rbp-0x68],rcx
   140005c48:	xor    edx,edx
   140005c4a:	lea    rcx,[rbp-0x58]
   140005c4e:	mov    DWORD PTR [rbp-0x70],edi
   140005c51:	mov    QWORD PTR [rbp-0x60],rcx
   140005c55:	mov    r8d,0x90
   140005c5b:	lea    rcx,[rbp+0x0]
   140005c5f:	mov    DWORD PTR [rbp-0x58],edi
   140005c62:	mov    BYTE PTR [rbp-0x54],dil
   140005c66:	mov    BYTE PTR [rbp-0x10],dil
   140005c6a:	mov    DWORD PTR [rbp-0x28],edi
   140005c6d:	mov    QWORD PTR [rbp-0x20],rax
   140005c71:	mov    QWORD PTR [rbp-0x18],rdi
   140005c75:	mov    QWORD PTR [rbp-0x8],0x1
   140005c7d:	mov    QWORD PTR [rbp+0x90],rdi
   140005c84:	mov    QWORD PTR [rbp+0x98],rdi
   140005c8b:	call   0x14000a622
   140005c90:	lea    rax,[rip+0x70d9]        # 0x14000cd70
   140005c97:	mov    QWORD PTR [rbp+0xa0],rdi
   140005c9e:	lea    rcx,[rsp+0x70]
   140005ca3:	mov    QWORD PTR [rsp+0x70],rax
   140005ca8:	mov    QWORD PTR [rbp+0xa8],rdi
   140005caf:	call   0x140004094
   140005cb4:	mov    QWORD PTR [r14],rdi
   140005cb7:	mov    edi,0x80070057
   140005cbc:	test   rbx,rbx
   140005cbf:	je     0x140005cdf
   140005cc1:	cmp    DWORD PTR [rbx],0x68
   140005cc4:	jne    0x140005d23
   140005cc6:	cmp    QWORD PTR [rbx+0x60],0x0
   140005ccb:	jne    0x140005d23
   140005ccd:	mov    rcx,QWORD PTR [rbx+0x8]
   140005cd1:	test   rcx,rcx
   140005cd4:	je     0x140005cdf
   140005cd6:	call   0x140008c40
   140005cdb:	test   eax,eax
   140005cdd:	js     0x140005d23
   140005cdf:	mov    eax,DWORD PTR [rbp+0x148]
   140005ce5:	lea    rcx,[rsi+0x10]
   140005ce9:	mov    QWORD PTR [rsp+0x50],r13
   140005cee:	mov    r9,rbx
   140005cf1:	mov    DWORD PTR [rsp+0x48],eax
   140005cf5:	xor    r8d,r8d
   140005cf8:	mov    rax,QWORD PTR [rsp+0x68]
   140005cfd:	mov    rdx,rsi
   140005d00:	mov    QWORD PTR [rsp+0x40],rax
   140005d05:	mov    eax,DWORD PTR [rsp+0x60]
   140005d09:	mov    QWORD PTR [rsp+0x38],r14
   140005d0e:	mov    QWORD PTR [rsp+0x30],r12
   140005d13:	mov    QWORD PTR [rsp+0x28],r15
   140005d18:	mov    DWORD PTR [rsp+0x20],eax
   140005d1c:	call   0x140005420
   140005d21:	mov    edi,eax
   140005d23:	mov    rcx,r12
   140005d26:	call   0x140005390
   140005d2b:	mov    rcx,QWORD PTR [r14]
   140005d2e:	mov    ebx,eax
   140005d30:	call   0x140005390
   140005d35:	mov    ecx,DWORD PTR [r13+0x0]
   140005d39:	mov    edx,edi
   140005d3b:	mov    r9d,DWORD PTR [r15]
   140005d3e:	mov    r8d,DWORD PTR [rbp+0x148]
   140005d45:	mov    DWORD PTR [rsp+0x30],eax
   140005d49:	mov    DWORD PTR [rsp+0x28],ebx
   140005d4d:	mov    DWORD PTR [rsp+0x20],ecx
   140005d51:	lea    rcx,[rsp+0x70]
   140005d56:	call   0x140004214
   140005d5b:	lea    rax,[rip+0x700e]        # 0x14000cd70
   140005d62:	lea    rcx,[rsp+0x70]
   140005d67:	mov    QWORD PTR [rsp+0x70],rax
   140005d6c:	call   0x140006a48
   140005d71:	lea    rcx,[rsp+0x70]
   140005d76:	call   0x140005250
   140005d7b:	mov    eax,edi
   140005d7d:	mov    rcx,QWORD PTR [rbp+0xb0]
   140005d84:	xor    rcx,rsp
   140005d87:	call   0x140009e20
   140005d8c:	add    rsp,0x1c8
   140005d93:	pop    r15
   140005d95:	pop    r14
   140005d97:	pop    r13
   140005d99:	pop    r12
   140005d9b:	pop    rdi
   140005d9c:	pop    rsi
   140005d9d:	pop    rbx
   140005d9e:	pop    rbp
   140005d9f:	ret    
   140005da0:	int3   
   140005da1:	int3   
   140005da2:	int3   
   140005da3:	int3   
   140005da4:	int3   
   140005da5:	int3   
   140005da6:	int3   
   140005da7:	int3   
   140005da8:	int3   
   140005da9:	int3   
   140005daa:	int3   
   140005dab:	int3   
   140005dac:	int3   
   140005dad:	int3   
   140005dae:	int3   
   140005daf:	int3   
   140005db0:	rex push rbp
   140005db2:	push   rbx
   140005db3:	push   rsi
   140005db4:	push   rdi
   140005db5:	push   r12
   140005db7:	push   r13
   140005db9:	push   r14
   140005dbb:	push   r15
   140005dbd:	lea    rbp,[rsp-0x138]
   140005dc5:	sub    rsp,0x238
   140005dcc:	mov    rax,QWORD PTR [rip+0xa235]        # 0x140010008
   140005dd3:	xor    rax,rsp
   140005dd6:	mov    QWORD PTR [rbp+0x120],rax
   140005ddd:	mov    rax,QWORD PTR [rbp+0x1b0]
   140005de4:	mov    r14,r9
   140005de7:	mov    r15,QWORD PTR [rbp+0x1a0]
   140005dee:	mov    rbx,rdx
   140005df1:	mov    r12,QWORD PTR [rbp+0x1a8]
   140005df8:	mov    rsi,rcx
   140005dfb:	mov    r13,QWORD PTR [rbp+0x1c0]
   140005e02:	mov    QWORD PTR [rsp+0x68],rax
   140005e07:	mov    DWORD PTR [rsp+0x64],r8d
   140005e0c:	call   0x140002fd4
   140005e11:	xor    edi,edi
   140005e13:	mov    QWORD PTR [rbp+0x40],rax
   140005e17:	lea    rcx,[rbp-0x20]
   140005e1b:	mov    QWORD PTR [rbp-0x18],rdi
   140005e1f:	mov    QWORD PTR [rbp-0x10],rcx
   140005e23:	lea    rax,[rip+0x6b76]        # 0x14000c9a0
   140005e2a:	lea    rcx,[rbp+0x48]
   140005e2e:	mov    QWORD PTR [rbp-0x8],rdi
   140005e32:	mov    QWORD PTR [rbp+0x8],rcx
   140005e36:	xor    edx,edx
   140005e38:	lea    rcx,[rbp+0x18]
   140005e3c:	mov    DWORD PTR [rbp+0x0],edi
   140005e3f:	mov    QWORD PTR [rbp+0x10],rcx
   140005e43:	mov    r8d,0x90
   140005e49:	lea    rcx,[rbp+0x70]
   140005e4d:	mov    DWORD PTR [rbp+0x18],edi
   140005e50:	mov    BYTE PTR [rbp+0x1c],dil
   140005e54:	mov    BYTE PTR [rbp+0x60],dil
   140005e58:	mov    DWORD PTR [rbp+0x48],edi
   140005e5b:	mov    QWORD PTR [rbp+0x50],rax
   140005e5f:	mov    QWORD PTR [rbp+0x58],rdi
   140005e63:	mov    QWORD PTR [rbp+0x68],0x1
   140005e6b:	mov    QWORD PTR [rbp+0x100],rdi
   140005e72:	mov    QWORD PTR [rbp+0x108],rdi
   140005e79:	call   0x14000a622
   140005e7e:	lea    rax,[rip+0x6e1b]        # 0x14000cca0
   140005e85:	mov    QWORD PTR [rbp+0x110],rdi
   140005e8c:	lea    rcx,[rbp-0x20]
   140005e90:	mov    QWORD PTR [rbp-0x20],rax
   140005e94:	mov    QWORD PTR [rbp+0x118],rdi
   140005e9b:	call   0x140004b34
   140005ea0:	test   rbx,rbx
   140005ea3:	je     0x140005f2a
   140005ea9:	mov    rax,QWORD PTR [rbx+0x8]
   140005ead:	test   rax,rax
   140005eb0:	je     0x140005f2a
   140005eb2:	mov    rdx,QWORD PTR [rbx+0x60]
   140005eb6:	test   rdx,rdx
   140005eb9:	je     0x140005eca
   140005ebb:	xor    r8d,r8d
   140005ebe:	mov    rcx,rax
   140005ec1:	call   0x140008a98
   140005ec6:	mov    edi,eax
   140005ec8:	jmp    0x140005f26
   140005eca:	lea    r8,[rsp+0x60]
   140005ecf:	mov    rdx,rax
   140005ed2:	call   0x1400056dc
   140005ed7:	test   eax,eax
   140005ed9:	js     0x140005ee2
   140005edb:	cmp    BYTE PTR [rsp+0x60],dil
   140005ee0:	je     0x140005f2a
   140005ee2:	movups xmm0,XMMWORD PTR [rbx]
   140005ee5:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140005ee9:	movaps XMMWORD PTR [rsp+0x70],xmm0
   140005eee:	movups xmm0,XMMWORD PTR [rbx+0x20]
   140005ef2:	and    QWORD PTR [rsp+0x78],rdi
   140005ef7:	movaps XMMWORD PTR [rbp-0x80],xmm1
   140005efb:	movups xmm1,XMMWORD PTR [rbx+0x30]
   140005eff:	movaps XMMWORD PTR [rbp-0x70],xmm0
   140005f03:	movups xmm0,XMMWORD PTR [rbx+0x40]
   140005f07:	movaps XMMWORD PTR [rbp-0x60],xmm1
   140005f0b:	movups xmm1,XMMWORD PTR [rbx+0x50]
   140005f0f:	movaps XMMWORD PTR [rbp-0x50],xmm0
   140005f13:	movsd  xmm0,QWORD PTR [rbx+0x60]
   140005f18:	lea    rbx,[rsp+0x70]
   140005f1d:	movsd  QWORD PTR [rbp-0x30],xmm0
   140005f22:	movaps XMMWORD PTR [rbp-0x40],xmm1
   140005f26:	test   edi,edi
   140005f28:	js     0x140005f6e
   140005f2a:	mov    eax,DWORD PTR [rbp+0x1b8]
   140005f30:	lea    rcx,[rsi+0x10]
   140005f34:	mov    QWORD PTR [rsp+0x50],r13
   140005f39:	mov    r9,rbx
   140005f3c:	mov    DWORD PTR [rsp+0x48],eax
   140005f40:	xor    r8d,r8d
   140005f43:	mov    rax,QWORD PTR [rsp+0x68]
   140005f48:	mov    rdx,rsi
   140005f4b:	mov    QWORD PTR [rsp+0x40],rax
   140005f50:	mov    eax,DWORD PTR [rsp+0x64]
   140005f54:	mov    QWORD PTR [rsp+0x38],r12
   140005f59:	mov    QWORD PTR [rsp+0x30],r15
   140005f5e:	mov    QWORD PTR [rsp+0x28],r14
   140005f63:	mov    DWORD PTR [rsp+0x20],eax
   140005f67:	call   0x140005420
   140005f6c:	mov    edi,eax
   140005f6e:	mov    rcx,r15
   140005f71:	call   0x140005390
   140005f76:	mov    rcx,QWORD PTR [r12]
   140005f7a:	mov    ebx,eax
   140005f7c:	call   0x140005390
   140005f81:	mov    r9d,DWORD PTR [r14]
   140005f84:	lea    rcx,[rbp-0x20]
   140005f88:	mov    r8d,DWORD PTR [rbp+0x1b8]
   140005f8f:	mov    edx,edi
   140005f91:	mov    DWORD PTR [rsp+0x30],eax
   140005f95:	mov    eax,DWORD PTR [r13+0x0]
   140005f99:	mov    DWORD PTR [rsp+0x28],ebx
   140005f9d:	mov    DWORD PTR [rsp+0x20],eax
   140005fa1:	call   0x140004cb4
   140005fa6:	lea    rax,[rip+0x6cf3]        # 0x14000cca0
   140005fad:	lea    rcx,[rbp-0x20]
   140005fb1:	mov    QWORD PTR [rbp-0x20],rax
   140005fb5:	call   0x140006a48
   140005fba:	lea    rcx,[rbp-0x20]
   140005fbe:	call   0x140005250
   140005fc3:	mov    eax,edi
   140005fc5:	mov    rcx,QWORD PTR [rbp+0x120]
   140005fcc:	xor    rcx,rsp
   140005fcf:	call   0x140009e20
   140005fd4:	add    rsp,0x238
   140005fdb:	pop    r15
   140005fdd:	pop    r14
   140005fdf:	pop    r13
   140005fe1:	pop    r12
   140005fe3:	pop    rdi
   140005fe4:	pop    rsi
   140005fe5:	pop    rbx
   140005fe6:	pop    rbp
   140005fe7:	ret    
   140005fe8:	int3   
   140005fe9:	int3   
   140005fea:	int3   
   140005feb:	int3   
   140005fec:	int3   
   140005fed:	int3   
   140005fee:	int3   
   140005fef:	int3   
   140005ff0:	rex push rbp
   140005ff2:	push   rbx
   140005ff3:	push   rsi
   140005ff4:	push   rdi
   140005ff5:	push   r12
   140005ff7:	push   r13
   140005ff9:	push   r14
   140005ffb:	push   r15
   140005ffd:	lea    rbp,[rsp-0xc8]
   140006005:	sub    rsp,0x1c8
   14000600c:	mov    rax,QWORD PTR [rip+0x9ff5]        # 0x140010008
   140006013:	xor    rax,rsp
   140006016:	mov    QWORD PTR [rbp+0xb0],rax
   14000601d:	mov    rax,QWORD PTR [rbp+0x140]
   140006024:	mov    r15,r9
   140006027:	mov    r12,QWORD PTR [rbp+0x130]
   14000602e:	mov    rbx,rdx
   140006031:	mov    r14,QWORD PTR [rbp+0x138]
   140006038:	mov    rdi,rcx
   14000603b:	mov    r13,QWORD PTR [rbp+0x150]
   140006042:	mov    QWORD PTR [rsp+0x68],rax
   140006047:	mov    DWORD PTR [rsp+0x64],r8d
   14000604c:	call   0x140002fd4
   140006051:	xor    esi,esi
   140006053:	mov    QWORD PTR [rbp-0x30],rax
   140006057:	lea    rcx,[rsp+0x70]
   14000605c:	mov    QWORD PTR [rsp+0x78],rsi
   140006061:	mov    QWORD PTR [rbp-0x80],rcx
   140006065:	lea    rax,[rip+0x68ec]        # 0x14000c958
   14000606c:	lea    rcx,[rbp-0x28]
   140006070:	mov    QWORD PTR [rbp-0x78],rsi
   140006074:	mov    QWORD PTR [rbp-0x68],rcx
   140006078:	xor    edx,edx
   14000607a:	lea    rcx,[rbp-0x58]
   14000607e:	mov    DWORD PTR [rbp-0x70],esi
   140006081:	mov    QWORD PTR [rbp-0x60],rcx
   140006085:	mov    r8d,0x90
   14000608b:	lea    rcx,[rbp+0x0]
   14000608f:	mov    DWORD PTR [rbp-0x58],esi
   140006092:	mov    BYTE PTR [rbp-0x54],sil
   140006096:	mov    BYTE PTR [rbp-0x10],sil
   14000609a:	mov    DWORD PTR [rbp-0x28],esi
   14000609d:	mov    QWORD PTR [rbp-0x20],rax
   1400060a1:	mov    QWORD PTR [rbp-0x18],rsi
   1400060a5:	mov    QWORD PTR [rbp-0x8],0x1
   1400060ad:	mov    QWORD PTR [rbp+0x90],rsi
   1400060b4:	mov    QWORD PTR [rbp+0x98],rsi
   1400060bb:	call   0x14000a622
   1400060c0:	lea    rax,[rip+0x6ae9]        # 0x14000cbb0
   1400060c7:	mov    QWORD PTR [rbp+0xa0],rsi
   1400060ce:	lea    rcx,[rsp+0x70]
   1400060d3:	mov    QWORD PTR [rsp+0x70],rax
   1400060d8:	mov    QWORD PTR [rbp+0xa8],rsi
   1400060df:	call   0x1400035f8
   1400060e4:	mov    QWORD PTR [r14],rsi
   1400060e7:	mov    esi,0x80070057
   1400060ec:	test   rbx,rbx
   1400060ef:	je     0x14000610f
   1400060f1:	cmp    DWORD PTR [rbx],0x68
   1400060f4:	jne    0x140006174
   1400060f6:	cmp    QWORD PTR [rbx+0x60],0x0
   1400060fb:	jne    0x140006174
   1400060fd:	mov    rcx,QWORD PTR [rbx+0x8]
   140006101:	test   rcx,rcx
   140006104:	je     0x14000610f
   140006106:	call   0x140008c40
   14000610b:	test   eax,eax
   14000610d:	js     0x140006174
   14000610f:	mov    rdx,QWORD PTR [rbx+0x8]
   140006113:	lea    r8,[rsp+0x60]
   140006118:	call   0x1400056dc
   14000611d:	test   eax,eax
   14000611f:	js     0x140006128
   140006121:	cmp    BYTE PTR [rsp+0x60],0x0
   140006126:	je     0x14000612d
   140006128:	and    QWORD PTR [rbx+0x8],0x0
   14000612d:	mov    eax,DWORD PTR [rbp+0x148]
   140006133:	lea    rcx,[rdi+0x10]
   140006137:	mov    QWORD PTR [rsp+0x50],r13
   14000613c:	mov    r9,rbx
   14000613f:	mov    DWORD PTR [rsp+0x48],eax
   140006143:	mov    r8d,0x1
   140006149:	mov    rax,QWORD PTR [rsp+0x68]
   14000614e:	mov    rdx,rdi
   140006151:	mov    QWORD PTR [rsp+0x40],rax
   140006156:	mov    eax,DWORD PTR [rsp+0x64]
   14000615a:	mov    QWORD PTR [rsp+0x38],r14
   14000615f:	mov    QWORD PTR [rsp+0x30],r12
   140006164:	mov    QWORD PTR [rsp+0x28],r15
   140006169:	mov    DWORD PTR [rsp+0x20],eax
   14000616d:	call   0x140005420
   140006172:	mov    esi,eax
   140006174:	mov    rcx,r12
   140006177:	call   0x140005390
   14000617c:	mov    rcx,QWORD PTR [r14]
   14000617f:	mov    edi,eax
   140006181:	call   0x140005390
   140006186:	mov    ebx,eax
   140006188:	call   0x1400051d4
   14000618d:	mov    ecx,DWORD PTR [r13+0x0]
   140006191:	mov    edx,esi
   140006193:	mov    r9d,DWORD PTR [r15]
   140006196:	mov    r8d,DWORD PTR [rbp+0x148]
   14000619d:	mov    DWORD PTR [rsp+0x30],ebx
   1400061a1:	mov    DWORD PTR [rsp+0x28],edi
   1400061a5:	mov    DWORD PTR [rsp+0x20],ecx
   1400061a9:	lea    rcx,[rsp+0x70]
   1400061ae:	call   0x140003778
   1400061b3:	lea    rax,[rip+0x69f6]        # 0x14000cbb0
   1400061ba:	lea    rcx,[rsp+0x70]
   1400061bf:	mov    QWORD PTR [rsp+0x70],rax
   1400061c4:	call   0x140006a48
   1400061c9:	lea    rcx,[rsp+0x70]
   1400061ce:	call   0x140005250
   1400061d3:	mov    eax,esi
   1400061d5:	mov    rcx,QWORD PTR [rbp+0xb0]
   1400061dc:	xor    rcx,rsp
   1400061df:	call   0x140009e20
   1400061e4:	add    rsp,0x1c8
   1400061eb:	pop    r15
   1400061ed:	pop    r14
   1400061ef:	pop    r13
   1400061f1:	pop    r12
   1400061f3:	pop    rdi
   1400061f4:	pop    rsi
   1400061f5:	pop    rbx
   1400061f6:	pop    rbp
   1400061f7:	ret    
   1400061f8:	int3   
   1400061f9:	int3   
   1400061fa:	int3   
   1400061fb:	int3   
   1400061fc:	int3   
   1400061fd:	int3   
   1400061fe:	int3   
   1400061ff:	int3   
   140006200:	sub    rsp,0x38
   140006204:	xor    eax,eax
   140006206:	mov    r11,r9
   140006209:	mov    r10,r8
   14000620c:	cmp    BYTE PTR [rcx+0x10],al
   14000620f:	je     0x140006266
   140006211:	cmp    DWORD PTR [rsp+0x68],eax
   140006215:	jbe    0x14000623f
   140006217:	mov    rdx,QWORD PTR [rip+0x688a]        # 0x14000caa8
   14000621e:	mov    r8,QWORD PTR [rip+0x687b]        # 0x14000caa0
   140006225:	mov    ecx,eax
   140006227:	add    rcx,rcx
   14000622a:	cmp    QWORD PTR [r10+rcx*8],r8
   14000622e:	jne    0x140006237
   140006230:	cmp    QWORD PTR [r10+rcx*8+0x8],rdx
   140006235:	je     0x140006246
   140006237:	inc    eax
   140006239:	cmp    eax,DWORD PTR [rsp+0x68]
   14000623d:	jb     0x140006225
   14000623f:	mov    eax,0x8000ffff
   140006244:	jmp    0x14000627e
   140006246:	mov    edx,eax
   140006248:	mov    rax,QWORD PTR [rsp+0x60]
   14000624d:	mov    DWORD PTR [rsp+0x20],0x1
   140006255:	lea    r8,[r11+rdx*8]
   140006259:	lea    r9,[rax+rdx*4]
   14000625d:	shl    rdx,0x4
   140006261:	add    rdx,r10
   140006264:	jmp    0x140006279
   140006266:	mov    eax,DWORD PTR [rsp+0x68]
   14000626a:	mov    r8,r11
   14000626d:	mov    r9,QWORD PTR [rsp+0x60]
   140006272:	mov    rdx,r10
   140006275:	mov    DWORD PTR [rsp+0x20],eax
   140006279:	call   0x140007624
   14000627e:	add    rsp,0x38
   140006282:	ret    
   140006283:	int3   
   140006284:	int3   
   140006285:	int3   
   140006286:	int3   
   140006287:	int3   
   140006288:	int3   
   140006289:	int3   
   14000628a:	int3   
   14000628b:	int3   
   14000628c:	mov    QWORD PTR [rsp+0x8],rbx
   140006291:	mov    QWORD PTR [rsp+0x10],rbp
   140006296:	mov    QWORD PTR [rsp+0x18],rsi
   14000629b:	push   rdi
   14000629c:	sub    rsp,0x50
   1400062a0:	mov    edx,0x2
   1400062a5:	xor    ecx,ecx
   1400062a7:	mov    rbx,r8
   1400062aa:	call   QWORD PTR [rip+0x5fb0]        # 0x14000c260
   1400062b0:	xor    esi,esi
   1400062b2:	test   eax,eax
   1400062b4:	js     0x1400063a4
   1400062ba:	call   QWORD PTR [rip+0x5e40]        # 0x14000c100
   1400062c0:	lea    r8d,[rsi+0xc]
   1400062c4:	mov    rcx,rbx
   1400062c7:	lea    rdx,[rip+0x6722]        # 0x14000c9f0
   1400062ce:	mov    edi,eax
   1400062d0:	call   QWORD PTR [rip+0x61ca]        # 0x14000c4a0
   1400062d6:	mov    ecx,DWORD PTR [rip+0xa47c]        # 0x140010758
   1400062dc:	lea    edx,[rsi+0x1]
   1400062df:	test   eax,eax
   1400062e1:	movzx  ebx,sil
   1400062e5:	lea    rbp,[rip+0xa474]        # 0x140010760
   1400062ec:	cmove  ebx,edx
   1400062ef:	test   dl,cl
   1400062f1:	jne    0x140006323
   1400062f3:	or     ecx,edx
   1400062f5:	mov    QWORD PTR [rip+0xa43c],rbp        # 0x140010738
   1400062fc:	mov    DWORD PTR [rip+0xa456],ecx        # 0x140010758
   140006302:	lea    rax,[rip+0x68bf]        # 0x14000cbc8
   140006309:	lea    rcx,[rip+0x4560]        # 0x14000a870
   140006310:	mov    QWORD PTR [rip+0xa451],rsi        # 0x140010768
   140006317:	mov    QWORD PTR [rip+0xa442],rax        # 0x140010760
   14000631e:	call   0x140009f0c
   140006323:	cmp    QWORD PTR [rip+0xa43e],rsi        # 0x140010768
   14000632a:	jne    0x140006355
   14000632c:	lea    rax,[rip+0x6a55]        # 0x14000cd88
   140006333:	mov    BYTE PTR [rip+0xa44e],sil        # 0x140010788
   14000633a:	mov    QWORD PTR [rip+0xa43f],rax        # 0x140010780
   140006341:	lea    rax,[rip+0xa438]        # 0x140010780
   140006348:	mov    QWORD PTR [rip+0xa419],rax        # 0x140010768
   14000634f:	mov    DWORD PTR [rip+0xa43b],edi        # 0x140010790
   140006355:	mov    rcx,rbp
   140006358:	mov    BYTE PTR [rip+0xa412],bl        # 0x140010770
   14000635e:	call   0x140007d90
   140006363:	test   eax,eax
   140006365:	js     0x14000639e
   140006367:	jmp    0x14000637f
   140006369:	lea    rcx,[rsp+0x20]
   14000636e:	call   QWORD PTR [rip+0x5e74]        # 0x14000c1e8
   140006374:	lea    rcx,[rsp+0x20]
   140006379:	call   QWORD PTR [rip+0x5e49]        # 0x14000c1c8
   14000637f:	xor    r9d,r9d
   140006382:	lea    rcx,[rsp+0x20]
   140006387:	xor    r8d,r8d
   14000638a:	xor    edx,edx
   14000638c:	call   QWORD PTR [rip+0x5e66]        # 0x14000c1f8
   140006392:	test   eax,eax
   140006394:	jg     0x140006369
   140006396:	mov    rcx,rbp
   140006399:	call   0x14000153c
   14000639e:	call   QWORD PTR [rip+0x5e94]        # 0x14000c238
   1400063a4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400063a9:	xor    eax,eax
   1400063ab:	mov    rbp,QWORD PTR [rsp+0x68]
   1400063b0:	mov    rsi,QWORD PTR [rsp+0x70]
   1400063b5:	add    rsp,0x50
   1400063b9:	pop    rdi
   1400063ba:	ret    
   1400063bb:	int3   
   1400063bc:	int3   
   1400063bd:	int3   
   1400063be:	int3   
   1400063bf:	int3   
   1400063c0:	int3   
   1400063c1:	int3   
   1400063c2:	int3   
   1400063c3:	int3   
   1400063c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400063c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400063ce:	mov    QWORD PTR [rsp+0x18],rdi
   1400063d3:	push   r14
   1400063d5:	sub    rsp,0x20
   1400063d9:	mov    sil,dl
   1400063dc:	call   QWORD PTR [rip+0x5d1e]        # 0x14000c100
   1400063e2:	mov    ebx,eax
   1400063e4:	lea    r14,[rip+0xa415]        # 0x140010800
   1400063eb:	mov    edi,eax
   1400063ed:	movabs rax,0xcccccccccccccccd
   1400063f7:	mul    rdi
   1400063fa:	shr    rdx,0x4
   1400063fe:	lea    rcx,[rdx+rdx*4]
   140006402:	shl    rcx,0x2
   140006406:	sub    rbx,rcx
   140006409:	mov    rax,QWORD PTR [r14+rbx*8]
   14000640d:	jmp    0x140006418
   14000640f:	cmp    DWORD PTR [rax+0x8],edi
   140006412:	je     0x14000645b
   140006414:	mov    rax,QWORD PTR [rax+0x10]
   140006418:	test   rax,rax
   14000641b:	jne    0x14000640f
   14000641d:	test   sil,sil
   140006420:	je     0x140006459
   140006422:	lea    ecx,[rax+0x18]
   140006425:	call   QWORD PTR [rip+0x5fbd]        # 0x14000c3e8
   14000642b:	mov    rcx,rax
   14000642e:	test   rax,rax
   140006431:	je     0x140006459
   140006433:	xor    eax,eax
   140006435:	mov    QWORD PTR [rcx],rax
   140006438:	and    QWORD PTR [rcx+0x10],rax
   14000643c:	mov    DWORD PTR [rcx+0x8],edi
   14000643f:	prefetchw BYTE PTR [r14+rbx*8]
   140006444:	mov    rax,QWORD PTR [r14+rbx*8]
   140006448:	mov    QWORD PTR [rcx+0x10],rax
   14000644c:	lock cmpxchg QWORD PTR [r14+rbx*8],rcx
   140006452:	jne    0x140006444
   140006454:	mov    rax,rcx
   140006457:	jmp    0x14000645b
   140006459:	xor    eax,eax
   14000645b:	mov    rbx,QWORD PTR [rsp+0x30]
   140006460:	mov    rsi,QWORD PTR [rsp+0x38]
   140006465:	mov    rdi,QWORD PTR [rsp+0x40]
   14000646a:	add    rsp,0x20
   14000646e:	pop    r14
   140006470:	ret    
   140006471:	int3   
   140006472:	int3   
   140006473:	int3   
   140006474:	int3   
   140006475:	int3   
   140006476:	int3   
   140006477:	int3   
   140006478:	int3   
   140006479:	int3   
   14000647a:	int3   
   14000647b:	int3   
   14000647c:	int3   
   14000647d:	int3   
   14000647e:	int3   
   14000647f:	int3   
   140006480:	mov    QWORD PTR [rsp+0x18],rbx
   140006485:	push   rbp
   140006486:	push   rsi
   140006487:	push   rdi
   140006488:	push   r14
   14000648a:	push   r15
   14000648c:	lea    rbp,[rsp-0x90]
   140006494:	sub    rsp,0x190
   14000649b:	mov    rax,QWORD PTR [rip+0x9b66]        # 0x140010008
   1400064a2:	xor    rax,rsp
   1400064a5:	mov    QWORD PTR [rbp+0x80],rax
   1400064ac:	mov    rax,QWORD PTR [rcx]
   1400064af:	mov    r14,rcx
   1400064b2:	mov    rdi,rdx
   1400064b5:	mov    rbx,QWORD PTR [rax+0x10]
   1400064b9:	mov    rcx,rbx
   1400064bc:	call   QWORD PTR [rip+0x602e]        # 0x14000c4f0
   1400064c2:	mov    edx,DWORD PTR [rdi+0x8]
   1400064c5:	mov    rcx,r14
   1400064c8:	call   rbx
   1400064ca:	mov    rbx,QWORD PTR [r14+0x30]
   1400064ce:	xor    r15d,r15d
   1400064d1:	mov    r10,QWORD PTR [rbx+0x28]
   1400064d5:	test   al,al
   1400064d7:	jne    0x140006729
   1400064dd:	cmp    DWORD PTR [r10],0x5
   1400064e1:	jbe    0x1400069da
   1400064e7:	movabs rcx,0x200000000000
   1400064f1:	test   QWORD PTR [r10+0x10],rcx
   1400064f5:	je     0x1400069da
   1400064fb:	mov    rax,QWORD PTR [r10+0x18]
   1400064ff:	and    rax,rcx
   140006502:	cmp    rax,QWORD PTR [r10+0x18]
   140006506:	jne    0x1400069da
   14000650c:	mov    eax,DWORD PTR [rdi+0x4]
   14000650f:	lea    r11,[rip+0x625a]        # 0x14000c770
   140006516:	mov    rcx,QWORD PTR [rdi+0x30]
   14000651a:	or     rdx,0xffffffffffffffff
   14000651e:	mov    DWORD PTR [rsp+0x3c],eax
   140006522:	lea    rax,[rsp+0x3c]
   140006527:	mov    QWORD PTR [rsp+0x70],rax
   14000652c:	mov    eax,r15d
   14000652f:	mov    QWORD PTR [rsp+0x78],0x4
   140006538:	mov    r8,r11
   14000653b:	test   rcx,rcx
   14000653e:	je     0x14000654f
   140006540:	mov    r8,rcx
   140006543:	mov    rax,rdx
   140006546:	inc    rax
   140006549:	cmp    BYTE PTR [rcx+rax*1],r15b
   14000654d:	jne    0x140006546
   14000654f:	mov    rcx,QWORD PTR [rdi+0x78]
   140006553:	inc    eax
   140006555:	mov    DWORD PTR [rbp-0x78],eax
   140006558:	lea    rax,[rdi+0x38]
   14000655c:	mov    QWORD PTR [rbp-0x70],rax
   140006560:	mov    rax,r15
   140006563:	mov    QWORD PTR [rbp-0x80],r8
   140006567:	mov    r8,r11
   14000656a:	mov    DWORD PTR [rbp-0x74],r15d
   14000656e:	mov    QWORD PTR [rbp-0x68],0x4
   140006576:	test   rcx,rcx
   140006579:	je     0x14000658a
   14000657b:	mov    r8,rcx
   14000657e:	mov    rax,rdx
   140006581:	inc    rax
   140006584:	cmp    BYTE PTR [rcx+rax*1],r15b
   140006588:	jne    0x140006581
   14000658a:	mov    rcx,QWORD PTR [rdi+0x10]
   14000658e:	lea    rsi,[rip+0x61df]        # 0x14000c774
   140006595:	inc    eax
   140006597:	mov    QWORD PTR [rbp-0x60],r8
   14000659b:	mov    DWORD PTR [rbp-0x58],eax
   14000659e:	mov    r8,rsi
   1400065a1:	mov    eax,DWORD PTR [rdi]
   1400065a3:	mov    DWORD PTR [rsp+0x38],eax
   1400065a7:	lea    rax,[rsp+0x38]
   1400065ac:	mov    QWORD PTR [rbp-0x50],rax
   1400065b0:	mov    rax,r15
   1400065b3:	mov    DWORD PTR [rbp-0x54],r15d
   1400065b7:	mov    QWORD PTR [rbp-0x48],0x4
   1400065bf:	test   rcx,rcx
   1400065c2:	je     0x1400065d4
   1400065c4:	mov    r8,rcx
   1400065c7:	mov    rax,rdx
   1400065ca:	inc    rax
   1400065cd:	cmp    WORD PTR [rcx+rax*2],r15w
   1400065d2:	jne    0x1400065ca
   1400065d4:	mov    rcx,QWORD PTR [rdi+0x40]
   1400065d8:	lea    eax,[rax*2+0x2]
   1400065df:	mov    DWORD PTR [rbp-0x38],eax
   1400065e2:	mov    eax,DWORD PTR [rdi+0x18]
   1400065e5:	mov    DWORD PTR [rsp+0x40],eax
   1400065e9:	lea    rax,[rsp+0x40]
   1400065ee:	mov    QWORD PTR [rbp-0x30],rax
   1400065f2:	mov    rax,r15
   1400065f5:	mov    QWORD PTR [rbp-0x40],r8
   1400065f9:	mov    r8,r11
   1400065fc:	mov    DWORD PTR [rbp-0x34],r15d
   140006600:	mov    QWORD PTR [rbp-0x28],0x4
   140006608:	test   rcx,rcx
   14000660b:	je     0x14000661c
   14000660d:	mov    r8,rcx
   140006610:	mov    rax,rdx
   140006613:	inc    rax
   140006616:	cmp    BYTE PTR [rcx+rax*1],r15b
   14000661a:	jne    0x140006613
   14000661c:	mov    rcx,QWORD PTR [rdi+0x50]
   140006620:	inc    eax
   140006622:	mov    DWORD PTR [rbp-0x18],eax
   140006625:	mov    eax,DWORD PTR [rdi+0x48]
   140006628:	mov    DWORD PTR [rsp+0x30],eax
   14000662c:	lea    rax,[rsp+0x30]
   140006631:	mov    QWORD PTR [rbp-0x10],rax
   140006635:	mov    rax,r15
   140006638:	mov    QWORD PTR [rbp-0x20],r8
   14000663c:	mov    r8,r11
   14000663f:	mov    DWORD PTR [rbp-0x14],r15d
   140006643:	mov    QWORD PTR [rbp-0x8],0x4
   14000664b:	test   rcx,rcx
   14000664e:	je     0x14000665f
   140006650:	mov    r8,rcx
   140006653:	mov    rax,rdx
   140006656:	inc    rax
   140006659:	cmp    BYTE PTR [rcx+rax*1],r15b
   14000665d:	jne    0x140006656
   14000665f:	mov    rcx,QWORD PTR [rdi+0x58]
   140006663:	inc    eax
   140006665:	mov    DWORD PTR [rbp+0x8],eax
   140006668:	mov    rax,r15
   14000666b:	mov    QWORD PTR [rbp+0x0],r8
   14000666f:	mov    r8,rsi
   140006672:	mov    DWORD PTR [rbp+0xc],r15d
   140006676:	test   rcx,rcx
   140006679:	je     0x14000668b
   14000667b:	mov    r8,rcx
   14000667e:	mov    rax,rdx
   140006681:	inc    rax
   140006684:	cmp    WORD PTR [rcx+rax*2],r15w
   140006689:	jne    0x140006681
   14000668b:	mov    rcx,QWORD PTR [rdi+0x68]
   14000668f:	lea    eax,[rax*2+0x2]
   140006696:	mov    DWORD PTR [rbp+0x18],eax
   140006699:	mov    eax,DWORD PTR [rdi+0x60]
   14000669c:	mov    DWORD PTR [rsp+0x34],eax
   1400066a0:	lea    rax,[rsp+0x34]
   1400066a5:	mov    QWORD PTR [rbp+0x20],rax
   1400066a9:	mov    rax,r15
   1400066ac:	mov    QWORD PTR [rbp+0x10],r8
   1400066b0:	mov    DWORD PTR [rbp+0x1c],r15d
   1400066b4:	mov    QWORD PTR [rbp+0x28],0x4
   1400066bc:	test   rcx,rcx
   1400066bf:	je     0x1400066d0
   1400066c1:	mov    r11,rcx
   1400066c4:	mov    rax,rdx
   1400066c7:	inc    rax
   1400066ca:	cmp    BYTE PTR [rcx+rax*1],r15b
   1400066ce:	jne    0x1400066c7
   1400066d0:	mov    rcx,QWORD PTR [rdi+0x70]
   1400066d4:	inc    eax
   1400066d6:	mov    DWORD PTR [rbp+0x38],eax
   1400066d9:	mov    rax,r15
   1400066dc:	mov    QWORD PTR [rbp+0x30],r11
   1400066e0:	mov    DWORD PTR [rbp+0x3c],r15d
   1400066e4:	test   rcx,rcx
   1400066e7:	je     0x1400066f9
   1400066e9:	mov    rsi,rcx
   1400066ec:	mov    rax,rdx
   1400066ef:	inc    rax
   1400066f2:	cmp    WORD PTR [rcx+rax*2],r15w
   1400066f7:	jne    0x1400066ef
   1400066f9:	lea    eax,[rax*2+0x2]
   140006700:	mov    QWORD PTR [rbp+0x40],rsi
   140006704:	mov    DWORD PTR [rbp+0x48],eax
   140006707:	lea    rdx,[rip+0x7480]        # 0x14000db8e
   14000670e:	lea    rax,[rsp+0x50]
   140006713:	mov    DWORD PTR [rbp+0x4c],r15d
   140006717:	mov    QWORD PTR [rsp+0x28],rax
   14000671c:	mov    DWORD PTR [rsp+0x20],0x10
   140006724:	jmp    0x1400069cb
   140006729:	cmp    DWORD PTR [r10],0x5
   14000672d:	jbe    0x1400069da
   140006733:	movabs rcx,0x200000000000
   14000673d:	test   QWORD PTR [r10+0x10],rcx
   140006741:	je     0x1400069da
   140006747:	mov    rax,QWORD PTR [r10+0x18]
   14000674b:	and    rax,rcx
   14000674e:	cmp    rax,QWORD PTR [r10+0x18]
   140006752:	jne    0x1400069da
   140006758:	mov    eax,DWORD PTR [rdi+0x4]
   14000675b:	lea    r11,[rip+0x600e]        # 0x14000c770
   140006762:	mov    rcx,QWORD PTR [rdi+0x30]
   140006766:	or     rdx,0xffffffffffffffff
   14000676a:	mov    DWORD PTR [rsp+0x34],eax
   14000676e:	lea    rax,[rsp+0x34]
   140006773:	mov    QWORD PTR [rsp+0x70],rax
   140006778:	mov    rax,r15
   14000677b:	mov    QWORD PTR [rsp+0x78],0x4
   140006784:	mov    r8,r11
   140006787:	test   rcx,rcx
   14000678a:	je     0x14000679b
   14000678c:	mov    r8,rcx
   14000678f:	mov    rax,rdx
   140006792:	inc    rax
   140006795:	cmp    BYTE PTR [rcx+rax*1],r15b
   140006799:	jne    0x140006792
   14000679b:	mov    rcx,QWORD PTR [rdi+0x78]
   14000679f:	inc    eax
   1400067a1:	mov    DWORD PTR [rbp-0x78],eax
   1400067a4:	lea    rax,[rdi+0x38]
   1400067a8:	mov    QWORD PTR [rbp-0x70],rax
   1400067ac:	mov    rax,r15
   1400067af:	mov    QWORD PTR [rbp-0x80],r8
   1400067b3:	mov    r8,r11
   1400067b6:	mov    DWORD PTR [rbp-0x74],r15d
   1400067ba:	mov    QWORD PTR [rbp-0x68],0x4
   1400067c2:	test   rcx,rcx
   1400067c5:	je     0x1400067d6
   1400067c7:	mov    r8,rcx
   1400067ca:	mov    rax,rdx
   1400067cd:	inc    rax
   1400067d0:	cmp    BYTE PTR [rcx+rax*1],r15b
   1400067d4:	jne    0x1400067cd
   1400067d6:	mov    rcx,QWORD PTR [rdi+0x10]
   1400067da:	lea    rsi,[rip+0x5f93]        # 0x14000c774
   1400067e1:	inc    eax
   1400067e3:	mov    QWORD PTR [rbp-0x60],r8
   1400067e7:	mov    DWORD PTR [rbp-0x58],eax
   1400067ea:	mov    r8,rsi
   1400067ed:	mov    eax,DWORD PTR [rdi]
   1400067ef:	mov    DWORD PTR [rsp+0x30],eax
   1400067f3:	lea    rax,[rsp+0x30]
   1400067f8:	mov    QWORD PTR [rbp-0x50],rax
   1400067fc:	mov    rax,r15
   1400067ff:	mov    DWORD PTR [rbp-0x54],r15d
   140006803:	mov    QWORD PTR [rbp-0x48],0x4
   14000680b:	test   rcx,rcx
   14000680e:	je     0x140006820
   140006810:	mov    r8,rcx
   140006813:	mov    rax,rdx
   140006816:	inc    rax
   140006819:	cmp    WORD PTR [rcx+rax*2],r15w
   14000681e:	jne    0x140006816
   140006820:	mov    rcx,QWORD PTR [rdi+0x40]
   140006824:	lea    eax,[rax*2+0x2]
   14000682b:	mov    DWORD PTR [rbp-0x38],eax
   14000682e:	mov    eax,DWORD PTR [rdi+0x18]
   140006831:	mov    DWORD PTR [rsp+0x40],eax
   140006835:	lea    rax,[rsp+0x40]
   14000683a:	mov    QWORD PTR [rbp-0x30],rax
   14000683e:	mov    rax,r15
   140006841:	mov    QWORD PTR [rbp-0x40],r8
   140006845:	mov    r8,r11
   140006848:	mov    DWORD PTR [rbp-0x34],r15d
   14000684c:	mov    QWORD PTR [rbp-0x28],0x4
   140006854:	test   rcx,rcx
   140006857:	je     0x140006868
   140006859:	mov    r8,rcx
   14000685c:	mov    rax,rdx
   14000685f:	inc    rax
   140006862:	cmp    BYTE PTR [rcx+rax*1],r15b
   140006866:	jne    0x14000685f
   140006868:	mov    rcx,QWORD PTR [rdi+0x50]
   14000686c:	inc    eax
   14000686e:	mov    DWORD PTR [rbp-0x18],eax
   140006871:	mov    eax,DWORD PTR [rdi+0x48]
   140006874:	mov    DWORD PTR [rsp+0x38],eax
   140006878:	lea    rax,[rsp+0x38]
   14000687d:	mov    QWORD PTR [rbp-0x10],rax
   140006881:	mov    rax,r15
   140006884:	mov    QWORD PTR [rbp-0x20],r8
   140006888:	mov    r8,r11
   14000688b:	mov    DWORD PTR [rbp-0x14],r15d
   14000688f:	mov    QWORD PTR [rbp-0x8],0x4
   140006897:	test   rcx,rcx
   14000689a:	je     0x1400068ab
   14000689c:	mov    r8,rcx
   14000689f:	mov    rax,rdx
   1400068a2:	inc    rax
   1400068a5:	cmp    BYTE PTR [rcx+rax*1],r15b
   1400068a9:	jne    0x1400068a2
   1400068ab:	mov    rcx,QWORD PTR [rdi+0x58]
   1400068af:	inc    eax
   1400068b1:	mov    DWORD PTR [rbp+0x8],eax
   1400068b4:	mov    rax,r15
   1400068b7:	mov    QWORD PTR [rbp+0x0],r8
   1400068bb:	mov    r8,rsi
   1400068be:	mov    DWORD PTR [rbp+0xc],r15d
   1400068c2:	test   rcx,rcx
   1400068c5:	je     0x1400068d7
   1400068c7:	mov    r8,rcx
   1400068ca:	mov    rax,rdx
   1400068cd:	inc    rax
   1400068d0:	cmp    WORD PTR [rcx+rax*2],r15w
   1400068d5:	jne    0x1400068cd
   1400068d7:	mov    rcx,QWORD PTR [rdi+0x68]
   1400068db:	lea    eax,[rax*2+0x2]
   1400068e2:	mov    DWORD PTR [rbp+0x18],eax
   1400068e5:	mov    eax,DWORD PTR [rdi+0x60]
   1400068e8:	mov    DWORD PTR [rsp+0x3c],eax
   1400068ec:	lea    rax,[rsp+0x3c]
   1400068f1:	mov    QWORD PTR [rbp+0x20],rax
   1400068f5:	mov    rax,r15
   1400068f8:	mov    QWORD PTR [rbp+0x10],r8
   1400068fc:	mov    r8,r11
   1400068ff:	mov    DWORD PTR [rbp+0x1c],r15d
   140006903:	mov    QWORD PTR [rbp+0x28],0x4
   14000690b:	test   rcx,rcx
   14000690e:	je     0x14000691f
   140006910:	mov    r8,rcx
   140006913:	mov    rax,rdx
   140006916:	inc    rax
   140006919:	cmp    BYTE PTR [rcx+rax*1],r15b
   14000691d:	jne    0x140006916
   14000691f:	mov    rcx,QWORD PTR [rdi+0x70]
   140006923:	inc    eax
   140006925:	mov    DWORD PTR [rbp+0x38],eax
   140006928:	mov    rax,r15
   14000692b:	mov    QWORD PTR [rbp+0x30],r8
   14000692f:	mov    DWORD PTR [rbp+0x3c],r15d
   140006933:	test   rcx,rcx
   140006936:	je     0x140006948
   140006938:	mov    rsi,rcx
   14000693b:	mov    rax,rdx
   14000693e:	inc    rax
   140006941:	cmp    WORD PTR [rcx+rax*2],r15w
   140006946:	jne    0x14000693e
   140006948:	mov    rcx,QWORD PTR [rdi+0x28]
   14000694c:	lea    eax,[rax*2+0x2]
   140006953:	mov    DWORD PTR [rbp+0x48],eax
   140006956:	mov    eax,DWORD PTR [rdi+0x8]
   140006959:	mov    DWORD PTR [rsp+0x44],eax
   14000695d:	lea    rax,[rsp+0x44]
   140006962:	mov    QWORD PTR [rbp+0x50],rax
   140006966:	mov    eax,DWORD PTR [rdi+0x3c]
   140006969:	mov    DWORD PTR [rsp+0x48],eax
   14000696d:	lea    rax,[rsp+0x48]
   140006972:	mov    QWORD PTR [rbp+0x60],rax
   140006976:	mov    rax,r15
   140006979:	mov    QWORD PTR [rbp+0x40],rsi
   14000697d:	mov    DWORD PTR [rbp+0x4c],r15d
   140006981:	mov    QWORD PTR [rbp+0x58],0x4
   140006989:	mov    QWORD PTR [rbp+0x68],0x4
   140006991:	test   rcx,rcx
   140006994:	je     0x1400069a5
   140006996:	mov    r11,rcx
   140006999:	mov    rax,rdx
   14000699c:	inc    rax
   14000699f:	cmp    BYTE PTR [rcx+rax*1],r15b
   1400069a3:	jne    0x14000699c
   1400069a5:	inc    eax
   1400069a7:	mov    QWORD PTR [rbp+0x70],r11
   1400069ab:	mov    DWORD PTR [rbp+0x78],eax
   1400069ae:	lea    rdx,[rip+0x6809]        # 0x14000d1be
   1400069b5:	lea    rax,[rsp+0x50]
   1400069ba:	mov    DWORD PTR [rbp+0x7c],r15d
   1400069be:	mov    QWORD PTR [rsp+0x28],rax
   1400069c3:	mov    DWORD PTR [rsp+0x20],0x13
   1400069cb:	xor    r9d,r9d
   1400069ce:	lea    r8,[rbx+0x8]
   1400069d2:	mov    rcx,r10
   1400069d5:	call   0x1400010dc
   1400069da:	lea    rdx,[rsp+0x48]
   1400069df:	mov    rcx,r14
   1400069e2:	call   0x140007034
   1400069e7:	mov    rcx,QWORD PTR [r14+0x30]
   1400069eb:	mov    eax,DWORD PTR [rdi+0x4]
   1400069ee:	cmp    eax,DWORD PTR [rcx+0x5c]
   1400069f1:	je     0x140006a0a
   1400069f3:	cmp    eax,DWORD PTR [rcx+0x54]
   1400069f6:	jne    0x1400069fe
   1400069f8:	cmp    DWORD PTR [rcx+0x54],r15d
   1400069fc:	jl     0x140006a0a
   1400069fe:	add    rcx,0x58
   140006a02:	mov    rdx,rdi
   140006a05:	call   0x140001ef4
   140006a0a:	mov    rcx,QWORD PTR [rsp+0x48]
   140006a0f:	test   rcx,rcx
   140006a12:	je     0x140006a1a
   140006a14:	call   QWORD PTR [rip+0x5666]        # 0x14000c080
   140006a1a:	mov    al,0x1
   140006a1c:	mov    rcx,QWORD PTR [rbp+0x80]
   140006a23:	xor    rcx,rsp
   140006a26:	call   0x140009e20
   140006a2b:	mov    rbx,QWORD PTR [rsp+0x1d0]
   140006a33:	add    rsp,0x190
   140006a3a:	pop    r15
   140006a3c:	pop    r14
   140006a3e:	pop    rdi
   140006a3f:	pop    rsi
   140006a40:	pop    rbp
   140006a41:	ret    
   140006a42:	int3   
   140006a43:	int3   
   140006a44:	int3   
   140006a45:	int3   
   140006a46:	int3   
   140006a47:	int3   
   140006a48:	mov    QWORD PTR [rsp+0x10],rbx
   140006a4d:	mov    QWORD PTR [rsp+0x18],rsi
   140006a52:	push   rdi
   140006a53:	sub    rsp,0x30
   140006a57:	cmp    QWORD PTR [rcx+0x138],0x0
   140006a5f:	mov    rdi,rcx
   140006a62:	mov    sil,0x1
   140006a65:	je     0x140006ad3
   140006a67:	lea    rdx,[rsp+0x20]
   140006a6c:	call   0x140007034
   140006a71:	mov    rax,QWORD PTR [rdi+0x138]
   140006a78:	test   rax,rax
   140006a7b:	je     0x140006a82
   140006a7d:	cmp    DWORD PTR [rax],0x1
   140006a80:	je     0x140006abe
   140006a82:	xor    sil,sil
   140006a85:	mov    rcx,rax
   140006a88:	test   rax,rax
   140006a8b:	je     0x140006abe
   140006a8d:	or     eax,0xffffffff
   140006a90:	lock xadd DWORD PTR [rcx],eax
   140006a94:	cmp    eax,0x1
   140006a97:	jne    0x140006ab6
   140006a99:	mov    rbx,QWORD PTR [rdi+0x138]
   140006aa0:	test   rbx,rbx
   140006aa3:	je     0x140006ab6
   140006aa5:	lea    rcx,[rbx+0x8]
   140006aa9:	call   0x14000530c
   140006aae:	mov    rcx,rbx
   140006ab1:	call   0x140009a28
   140006ab6:	and    QWORD PTR [rdi+0x138],0x0
   140006abe:	mov    rcx,QWORD PTR [rsp+0x20]
   140006ac3:	test   rcx,rcx
   140006ac6:	je     0x140006ace
   140006ac8:	call   QWORD PTR [rip+0x55b2]        # 0x14000c080
   140006ace:	test   sil,sil
   140006ad1:	je     0x140006b1f
   140006ad3:	mov    rdx,QWORD PTR [rdi+0x30]
   140006ad7:	cmp    DWORD PTR [rdx],0x1
   140006ada:	jne    0x140006b1f
   140006adc:	cmp    DWORD PTR [rdx+0x5c],0x0
   140006ae0:	mov    eax,0x8007023e
   140006ae5:	mov    r8d,DWORD PTR [rdx+0x50]
   140006ae9:	cmovl  eax,DWORD PTR [rdx+0x5c]
   140006aed:	cmp    r8d,0x1
   140006af1:	jge    0x140006afa
   140006af3:	mov    ecx,0x7
   140006af8:	int    0x29
   140006afa:	cmp    DWORD PTR [rdx+0x54],0x0
   140006afe:	jl     0x140006b03
   140006b00:	mov    DWORD PTR [rdx+0x54],eax
   140006b03:	lea    eax,[r8-0x1]
   140006b07:	mov    DWORD PTR [rdx+0x50],eax
   140006b0a:	mov    rax,QWORD PTR [rdi]
   140006b0d:	mov    rbx,QWORD PTR [rax+0x8]
   140006b11:	mov    rcx,rbx
   140006b14:	call   QWORD PTR [rip+0x59d6]        # 0x14000c4f0
   140006b1a:	mov    rcx,rdi
   140006b1d:	call   rbx
   140006b1f:	mov    rbx,QWORD PTR [rsp+0x48]
   140006b24:	mov    rsi,QWORD PTR [rsp+0x50]
   140006b29:	add    rsp,0x30
   140006b2d:	pop    rdi
   140006b2e:	ret    
   140006b2f:	int3   
   140006b30:	int3   
   140006b31:	int3   
   140006b32:	int3   
   140006b33:	int3   
   140006b34:	int3   
   140006b35:	int3   
   140006b36:	int3   
   140006b37:	int3   
   140006b38:	int3   
   140006b39:	int3   
   140006b3a:	int3   
   140006b3b:	int3   
   140006b3c:	int3   
   140006b3d:	int3   
   140006b3e:	int3   
   140006b3f:	int3   
   140006b40:	mov    QWORD PTR [rsp+0x8],rbx
   140006b45:	mov    QWORD PTR [rsp+0x10],rsi
   140006b4a:	push   rdi
   140006b4b:	sub    rsp,0x20
   140006b4f:	xor    edi,edi
   140006b51:	mov    rsi,rcx
   140006b54:	mov    QWORD PTR [r8],rdi
   140006b57:	cmp    DWORD PTR [rdx],edi
   140006b59:	jne    0x140006b7c
   140006b5b:	mov    eax,DWORD PTR [rip+0x5efb]        # 0x14000ca5c
   140006b61:	cmp    DWORD PTR [rdx+0x4],eax
   140006b64:	jne    0x140006b7c
   140006b66:	mov    eax,DWORD PTR [rip+0x5ef4]        # 0x14000ca60
   140006b6c:	cmp    DWORD PTR [rdx+0x8],eax
   140006b6f:	jne    0x140006b7c
   140006b71:	mov    eax,DWORD PTR [rip+0x5eed]        # 0x14000ca64
   140006b77:	cmp    DWORD PTR [rdx+0xc],eax
   140006b7a:	je     0x140006ba5
   140006b7c:	cmp    DWORD PTR [rdx],0x129ca94
   140006b82:	jne    0x140006bbf
   140006b84:	mov    eax,DWORD PTR [rip+0x60a2]        # 0x14000cc2c
   140006b8a:	cmp    DWORD PTR [rdx+0x4],eax
   140006b8d:	jne    0x140006bbf
   140006b8f:	mov    eax,DWORD PTR [rip+0x609b]        # 0x14000cc30
   140006b95:	cmp    DWORD PTR [rdx+0x8],eax
   140006b98:	jne    0x140006bbf
   140006b9a:	mov    eax,DWORD PTR [rip+0x6094]        # 0x14000cc34
   140006ba0:	cmp    DWORD PTR [rdx+0xc],eax
   140006ba3:	jne    0x140006bbf
   140006ba5:	mov    QWORD PTR [r8],rcx
   140006ba8:	mov    rax,QWORD PTR [rcx]
   140006bab:	mov    rbx,QWORD PTR [rax+0x8]
   140006baf:	mov    rcx,rbx
   140006bb2:	call   QWORD PTR [rip+0x5938]        # 0x14000c4f0
   140006bb8:	mov    rcx,rsi
   140006bbb:	call   rbx
   140006bbd:	jmp    0x140006bc4
   140006bbf:	mov    edi,0x80004002
   140006bc4:	mov    rbx,QWORD PTR [rsp+0x30]
   140006bc9:	mov    eax,edi
   140006bcb:	mov    rsi,QWORD PTR [rsp+0x38]
   140006bd0:	add    rsp,0x20
   140006bd4:	pop    rdi
   140006bd5:	ret    
   140006bd6:	int3   
   140006bd7:	int3   
   140006bd8:	int3   
   140006bd9:	int3   
   140006bda:	int3   
   140006bdb:	int3   
   140006bdc:	int3   
   140006bdd:	int3   
   140006bde:	int3   
   140006bdf:	int3   
   140006be0:	mov    eax,0x1
   140006be5:	lock xadd DWORD PTR [rcx+0xc],eax
   140006bea:	inc    eax
   140006bec:	ret    
   140006bed:	int3   
   140006bee:	int3   
   140006bef:	int3   
   140006bf0:	int3   
   140006bf1:	int3   
   140006bf2:	int3   
   140006bf3:	int3   
   140006bf4:	int3   
   140006bf5:	int3   
   140006bf6:	int3   
   140006bf7:	int3   
   140006bf8:	int3   
   140006bf9:	int3   
   140006bfa:	int3   
   140006bfb:	int3   
   140006bfc:	int3   
   140006bfd:	int3   
   140006bfe:	int3   
   140006bff:	int3   
   140006c00:	mov    QWORD PTR [rsp+0x8],rbx
   140006c05:	mov    QWORD PTR [rsp+0x10],rsi
   140006c0a:	push   rdi
   140006c0b:	sub    rsp,0x20
   140006c0f:	mov    rsi,rcx
   140006c12:	or     edi,0xffffffff
   140006c15:	lock xadd DWORD PTR [rcx+0xc],edi
   140006c1a:	sub    edi,0x1
   140006c1d:	jne    0x140006c5d
   140006c1f:	test   rcx,rcx
   140006c22:	je     0x140006c3c
   140006c24:	mov    rax,QWORD PTR [rcx]
   140006c27:	mov    rbx,QWORD PTR [rax+0x20]
   140006c2b:	mov    rcx,rbx
   140006c2e:	call   QWORD PTR [rip+0x58bc]        # 0x14000c4f0
   140006c34:	lea    edx,[rdi+0x1]
   140006c37:	mov    rcx,rsi
   140006c3a:	call   rbx
   140006c3c:	mov    rsi,QWORD PTR [rip+0x9af5]        # 0x140010738
   140006c43:	test   rsi,rsi
   140006c46:	je     0x140006c5d
   140006c48:	mov    rdx,QWORD PTR [rsi]
   140006c4b:	mov    rbx,QWORD PTR [rdx+0x10]
   140006c4f:	mov    rcx,rbx
   140006c52:	call   QWORD PTR [rip+0x5898]        # 0x14000c4f0
   140006c58:	mov    rcx,rsi
   140006c5b:	call   rbx
   140006c5d:	mov    rbx,QWORD PTR [rsp+0x30]
   140006c62:	mov    eax,edi
   140006c64:	mov    rsi,QWORD PTR [rsp+0x38]
   140006c69:	add    rsp,0x20
   140006c6d:	pop    rdi
   140006c6e:	ret    
   140006c6f:	int3   
   140006c70:	int3   
   140006c71:	int3   
   140006c72:	int3   
   140006c73:	int3   
   140006c74:	int3   
   140006c75:	int3   
   140006c76:	int3   
   140006c77:	int3   
   140006c78:	int3   
   140006c79:	int3   
   140006c7a:	int3   
   140006c7b:	int3   
   140006c7c:	int3   
   140006c7d:	int3   
   140006c7e:	int3   
   140006c7f:	int3   
   140006c80:	mov    QWORD PTR [rsp+0x8],rbx
   140006c85:	mov    QWORD PTR [rsp+0x10],rsi
   140006c8a:	push   rdi
   140006c8b:	sub    rsp,0x20
   140006c8f:	xor    eax,eax
   140006c91:	xor    edi,edi
   140006c93:	mov    esi,r9d
   140006c96:	mov    rbx,r8
   140006c99:	test   r9d,r9d
   140006c9c:	je     0x140006cbf
   140006c9e:	test   eax,eax
   140006ca0:	js     0x140006cbf
   140006ca2:	mov    ecx,DWORD PTR [rbx]
   140006ca4:	test   ecx,ecx
   140006ca6:	je     0x140006cb5
   140006ca8:	call   QWORD PTR [rip+0x55c2]        # 0x14000c270
   140006cae:	test   eax,eax
   140006cb0:	js     0x140006cb5
   140006cb2:	and    DWORD PTR [rbx],0x0
   140006cb5:	inc    edi
   140006cb7:	add    rbx,0x4
   140006cbb:	cmp    edi,esi
   140006cbd:	jb     0x140006c9e
   140006cbf:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cc4:	mov    rsi,QWORD PTR [rsp+0x38]
   140006cc9:	add    rsp,0x20
   140006ccd:	pop    rdi
   140006cce:	ret    
   140006ccf:	int3   
   140006cd0:	int3   
   140006cd1:	int3   
   140006cd2:	int3   
   140006cd3:	int3   
   140006cd4:	int3   
   140006cd5:	int3   
   140006cd6:	int3   
   140006cd7:	int3   
   140006cd8:	int3   
   140006cd9:	int3   
   140006cda:	int3   
   140006cdb:	int3   
   140006cdc:	int3   
   140006cdd:	int3   
   140006cde:	int3   
   140006cdf:	int3   
   140006ce0:	mov    rax,rsp
   140006ce3:	mov    QWORD PTR [rax+0x8],rbx
   140006ce7:	mov    QWORD PTR [rax+0x10],rbp
   140006ceb:	mov    QWORD PTR [rax+0x18],rsi
   140006cef:	mov    QWORD PTR [rax+0x20],rdi
   140006cf3:	push   r13
   140006cf5:	push   r14
   140006cf7:	push   r15
   140006cf9:	sub    rsp,0x20
   140006cfd:	mov    ebx,DWORD PTR [rsp+0x60]
   140006d01:	mov    edi,0x8
   140006d06:	mov    eax,edi
   140006d08:	mov    r13,r9
   140006d0b:	mul    rbx
   140006d0e:	lea    rdx,[rip+0x5ff3]        # 0x14000cd08
   140006d15:	mov    rsi,r8
   140006d18:	lea    r14,[rdi-0x9]
   140006d1c:	cmovo  rax,r14
   140006d20:	mov    rcx,rax
   140006d23:	call   0x140009e44
   140006d28:	mov    rbp,rax
   140006d2b:	mov    eax,edi
   140006d2d:	mul    rbx
   140006d30:	lea    rdx,[rip+0x5fd1]        # 0x14000cd08
   140006d37:	cmovo  rax,r14
   140006d3b:	mov    rcx,rax
   140006d3e:	call   0x140009e44
   140006d43:	xor    r9d,r9d
   140006d46:	mov    r14,rax
   140006d49:	mov    ebx,r9d
   140006d4c:	test   rbp,rbp
   140006d4f:	je     0x140006de2
   140006d55:	test   rax,rax
   140006d58:	je     0x140006de2
   140006d5e:	mov    edi,r9d
   140006d61:	cmp    DWORD PTR [rsp+0x60],r9d
   140006d66:	jbe    0x140006db0
   140006d68:	mov    r15,rbp
   140006d6b:	sub    r15,rsi
   140006d6e:	test   ebx,ebx
   140006d70:	js     0x140006dc6
   140006d72:	lea    rax,[rip+0xec7]        # 0x140007c40
   140006d79:	or     rdx,0xffffffffffffffff
   140006d7d:	mov    QWORD PTR [r15+rsi*1],rax
   140006d81:	lea    r8,[r14+rdi*8]
   140006d85:	mov    rcx,QWORD PTR [rsi]
   140006d88:	inc    rdx
   140006d8b:	cmp    WORD PTR [rcx+rdx*2],r9w
   140006d90:	jne    0x140006d88
   140006d92:	call   QWORD PTR [rip+0x55f0]        # 0x14000c388
   140006d98:	inc    edi
   140006d9a:	add    rsi,0x8
   140006d9e:	mov    ebx,eax
   140006da0:	mov    r9d,0x0
   140006da6:	cmp    edi,DWORD PTR [rsp+0x60]
   140006daa:	jb     0x140006d6e
   140006dac:	test   eax,eax
   140006dae:	js     0x140006dc6
   140006db0:	mov    r8d,DWORD PTR [rsp+0x60]
   140006db5:	mov    r9,r13
   140006db8:	mov    rdx,rbp
   140006dbb:	mov    rcx,r14
   140006dbe:	call   QWORD PTR [rip+0x559c]        # 0x14000c360
   140006dc4:	mov    ebx,eax
   140006dc6:	test   edi,edi
   140006dc8:	je     0x140006de7
   140006dca:	mov    rsi,r14
   140006dcd:	mov    rcx,QWORD PTR [rsi]
   140006dd0:	call   QWORD PTR [rip+0x559a]        # 0x14000c370
   140006dd6:	lea    rsi,[rsi+0x8]
   140006dda:	sub    rdi,0x1
   140006dde:	jne    0x140006dcd
   140006de0:	jmp    0x140006de7
   140006de2:	mov    ebx,0x8007000e
   140006de7:	mov    rcx,rbp
   140006dea:	call   0x140009a28
   140006def:	mov    rcx,r14
   140006df2:	call   0x140009a28
   140006df7:	mov    rbp,QWORD PTR [rsp+0x48]
   140006dfc:	mov    eax,ebx
   140006dfe:	mov    rbx,QWORD PTR [rsp+0x40]
   140006e03:	mov    rsi,QWORD PTR [rsp+0x50]
   140006e08:	mov    rdi,QWORD PTR [rsp+0x58]
   140006e0d:	add    rsp,0x20
   140006e11:	pop    r15
   140006e13:	pop    r14
   140006e15:	pop    r13
   140006e17:	ret    
   140006e18:	int3   
   140006e19:	int3   
   140006e1a:	int3   
   140006e1b:	int3   
   140006e1c:	int3   
   140006e1d:	int3   
   140006e1e:	int3   
   140006e1f:	int3   
   140006e20:	sub    rsp,0x28
   140006e24:	mov    rcx,r8
   140006e27:	call   QWORD PTR [rip+0x552b]        # 0x14000c358
   140006e2d:	xor    eax,eax
   140006e2f:	add    rsp,0x28
   140006e33:	ret    
   140006e34:	int3   
   140006e35:	int3   
   140006e36:	int3   
   140006e37:	int3   
   140006e38:	int3   
   140006e39:	int3   
   140006e3a:	int3   
   140006e3b:	int3   
   140006e3c:	int3   
   140006e3d:	int3   
   140006e3e:	int3   
   140006e3f:	int3   
   140006e40:	rex.W jmp QWORD PTR [rip+0x5421]        # 0x14000c268
   140006e47:	int3   
   140006e48:	int3   
   140006e49:	int3   
   140006e4a:	int3   
   140006e4b:	int3   
   140006e4c:	int3   
   140006e4d:	int3   
   140006e4e:	int3   
   140006e4f:	int3   
   140006e50:	mov    QWORD PTR [rsp+0x8],rbx
   140006e55:	mov    QWORD PTR [rsp+0x10],rsi
   140006e5a:	push   rdi
   140006e5b:	sub    rsp,0x20
   140006e5f:	mov    rdi,rcx
   140006e62:	call   QWORD PTR [rip+0x53c0]        # 0x14000c228
   140006e68:	mov    esi,eax
   140006e6a:	test   eax,eax
   140006e6c:	jne    0x140006e87
   140006e6e:	mov    rdi,QWORD PTR [rdi+0x8]
   140006e72:	mov    rdx,QWORD PTR [rdi]
   140006e75:	mov    rbx,QWORD PTR [rdx+0x8]
   140006e79:	mov    rcx,rbx
   140006e7c:	call   QWORD PTR [rip+0x566e]        # 0x14000c4f0
   140006e82:	mov    rcx,rdi
   140006e85:	call   rbx
   140006e87:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e8c:	mov    eax,esi
   140006e8e:	mov    rsi,QWORD PTR [rsp+0x38]
   140006e93:	add    rsp,0x20
   140006e97:	pop    rdi
   140006e98:	ret    
   140006e99:	int3   
   140006e9a:	int3   
   140006e9b:	int3   
   140006e9c:	int3   
   140006e9d:	int3   
   140006e9e:	int3   
   140006e9f:	int3   
   140006ea0:	xor    eax,eax
   140006ea2:	ret    
   140006ea3:	int3   
   140006ea4:	int3   
   140006ea5:	int3   
   140006ea6:	int3   
   140006ea7:	int3   
   140006ea8:	int3   
   140006ea9:	int3   
   140006eaa:	int3   
   140006eab:	int3   
   140006eac:	mov    QWORD PTR [rsp+0x8],rbx
   140006eb1:	mov    QWORD PTR [rsp+0x10],rsi
   140006eb6:	push   rdi
   140006eb7:	sub    rsp,0x20
   140006ebb:	mov    rsi,QWORD PTR [rcx+0x8]
   140006ebf:	lea    rax,[rip+0x5efa]        # 0x14000cdc0
   140006ec6:	mov    QWORD PTR [rcx],rax
   140006ec9:	mov    rdi,rcx
   140006ecc:	test   rsi,rsi
   140006ecf:	je     0x140006ef5
   140006ed1:	cmp    BYTE PTR [rsi+0x8],0x0
   140006ed5:	je     0x140006ef0
   140006ed7:	mov    rax,QWORD PTR [rsi]
   140006eda:	mov    rbx,QWORD PTR [rax]
   140006edd:	mov    rcx,rbx
   140006ee0:	call   QWORD PTR [rip+0x560a]        # 0x14000c4f0
   140006ee6:	mov    edx,0x1
   140006eeb:	mov    rcx,rsi
   140006eee:	call   rbx
   140006ef0:	and    QWORD PTR [rdi+0x8],0x0
   140006ef5:	lea    rax,[rip+0x5e14]        # 0x14000cd10
   140006efc:	mov    r8b,0x1
   140006eff:	mov    rcx,rdi
   140006f02:	mov    QWORD PTR [rdi],rax
   140006f05:	call   0x1400012a0
   140006f0a:	and    QWORD PTR [rip+0x9826],0x0        # 0x140010738
   140006f12:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f17:	mov    rsi,QWORD PTR [rsp+0x38]
   140006f1c:	mov    BYTE PTR [rip+0x9855],0x0        # 0x140010778
   140006f23:	add    rsp,0x20
   140006f27:	pop    rdi
   140006f28:	ret    
   140006f29:	int3   
   140006f2a:	int3   
   140006f2b:	int3   
   140006f2c:	int3   
   140006f2d:	int3   
   140006f2e:	int3   
   140006f2f:	int3   
   140006f30:	mov    eax,0x1
   140006f35:	lock xadd DWORD PTR [rip+0x9803],eax        # 0x140010740
   140006f3d:	inc    eax
   140006f3f:	ret    
   140006f40:	int3   
   140006f41:	int3   
   140006f42:	int3   
   140006f43:	int3   
   140006f44:	int3   
   140006f45:	int3   
   140006f46:	int3   
   140006f47:	int3   
   140006f48:	int3   
   140006f49:	int3   
   140006f4a:	int3   
   140006f4b:	int3   
   140006f4c:	int3   
   140006f4d:	int3   
   140006f4e:	int3   
   140006f4f:	int3   
   140006f50:	or     eax,0xffffffff
   140006f53:	lock xadd DWORD PTR [rip+0x97e5],eax        # 0x140010740
   140006f5b:	dec    eax
   140006f5d:	ret    
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	int3   
   140006f61:	int3   
   140006f62:	int3   
   140006f63:	int3   
   140006f64:	int3   
   140006f65:	int3   
   140006f66:	int3   
   140006f67:	int3   
   140006f68:	int3   
   140006f69:	int3   
   140006f6a:	int3   
   140006f6b:	int3   
   140006f6c:	int3   
   140006f6d:	int3   
   140006f6e:	int3   
   140006f6f:	int3   
   140006f70:	sub    rsp,0x28
   140006f74:	xor    edx,edx
   140006f76:	mov    ecx,0x80004001
   140006f7b:	call   QWORD PTR [rip+0x53bf]        # 0x14000c340
   140006f81:	mov    eax,0x80004001
   140006f86:	add    rsp,0x28
   140006f8a:	ret    
   140006f8b:	int3   
   140006f8c:	int3   
   140006f8d:	int3   
   140006f8e:	int3   
   140006f8f:	int3   
   140006f90:	int3   
   140006f91:	int3   
   140006f92:	int3   
   140006f93:	int3   
   140006f94:	int3   
   140006f95:	int3   
   140006f96:	int3   
   140006f97:	int3   
   140006f98:	int3   
   140006f99:	int3   
   140006f9a:	int3   
   140006f9b:	int3   
   140006f9c:	int3   
   140006f9d:	int3   
   140006f9e:	int3   
   140006f9f:	int3   
   140006fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140006fa5:	push   rdi
   140006fa6:	sub    rsp,0x20
   140006faa:	mov    ebx,edx
   140006fac:	mov    rdi,rcx
   140006faf:	call   0x140006eac
   140006fb4:	test   bl,0x1
   140006fb7:	je     0x140006fc1
   140006fb9:	mov    rcx,rdi
   140006fbc:	call   0x140009a28
   140006fc1:	mov    rax,rdi
   140006fc4:	mov    rbx,QWORD PTR [rsp+0x30]
   140006fc9:	add    rsp,0x20
   140006fcd:	pop    rdi
   140006fce:	ret    
   140006fcf:	int3   
   140006fd0:	int3   
   140006fd1:	int3   
   140006fd2:	int3   
   140006fd3:	int3   
   140006fd4:	int3   
   140006fd5:	int3   
   140006fd6:	int3   
   140006fd7:	int3   
   140006fd8:	int3   
   140006fd9:	int3   
   140006fda:	int3   
   140006fdb:	int3   
   140006fdc:	int3   
   140006fdd:	int3   
   140006fde:	int3   
   140006fdf:	int3   
   140006fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140006fe5:	push   rdi
   140006fe6:	sub    rsp,0x20
   140006fea:	lea    rax,[rip+0x5d1f]        # 0x14000cd10
   140006ff1:	mov    r8b,0x1
   140006ff4:	mov    QWORD PTR [rcx],rax
   140006ff7:	mov    ebx,edx
   140006ff9:	mov    rdi,rcx
   140006ffc:	call   0x1400012a0
   140007001:	and    QWORD PTR [rip+0x972f],0x0        # 0x140010738
   140007009:	mov    BYTE PTR [rip+0x9768],0x0        # 0x140010778
   140007010:	test   bl,0x1
   140007013:	je     0x14000701d
   140007015:	mov    rcx,rdi
   140007018:	call   0x140009a28
   14000701d:	mov    rax,rdi
   140007020:	mov    rbx,QWORD PTR [rsp+0x30]
   140007025:	add    rsp,0x20
   140007029:	pop    rdi
   14000702a:	ret    
   14000702b:	int3   
   14000702c:	int3   
   14000702d:	int3   
   14000702e:	int3   
   14000702f:	int3   
   140007030:	int3   
   140007031:	int3   
   140007032:	int3   
   140007033:	int3   
   140007034:	mov    QWORD PTR [rsp+0x18],rbx
   140007039:	mov    QWORD PTR [rsp+0x20],rsi
   14000703e:	push   rdi
   14000703f:	sub    rsp,0x20
   140007043:	and    DWORD PTR [rsp+0x30],0x0
   140007048:	mov    rsi,rdx
   14000704b:	cmp    QWORD PTR [rcx+0x138],0x0
   140007053:	je     0x140007086
   140007055:	mov    rbx,QWORD PTR [rcx+0x138]
   14000705c:	mov    edi,0x1
   140007061:	test   rbx,rbx
   140007064:	je     0x14000706a
   140007066:	add    rbx,0x8
   14000706a:	add    rbx,0xf8
   140007071:	mov    rcx,rbx
   140007074:	call   QWORD PTR [rip+0x501e]        # 0x14000c098
   14000707a:	lea    rcx,[rsp+0x38]
   14000707f:	mov    QWORD PTR [rsp+0x38],rbx
   140007084:	jmp    0x140007096
   140007086:	and    QWORD PTR [rsp+0x30],0x0
   14000708c:	lea    rcx,[rsp+0x30]
   140007091:	mov    edi,0x2
   140007096:	mov    rax,QWORD PTR [rcx]
   140007099:	and    QWORD PTR [rcx],0x0
   14000709d:	mov    QWORD PTR [rsi],rax
   1400070a0:	test   dil,0x2
   1400070a4:	je     0x1400070b9
   1400070a6:	mov    rcx,QWORD PTR [rsp+0x30]
   1400070ab:	and    edi,0xfffffffd
   1400070ae:	test   rcx,rcx
   1400070b1:	je     0x1400070b9
   1400070b3:	call   QWORD PTR [rip+0x4fc7]        # 0x14000c080
   1400070b9:	test   dil,0x1
   1400070bd:	je     0x1400070cf
   1400070bf:	mov    rcx,QWORD PTR [rsp+0x38]
   1400070c4:	test   rcx,rcx
   1400070c7:	je     0x1400070cf
   1400070c9:	call   QWORD PTR [rip+0x4fb1]        # 0x14000c080
   1400070cf:	mov    rbx,QWORD PTR [rsp+0x40]
   1400070d4:	mov    rax,rsi
   1400070d7:	mov    rsi,QWORD PTR [rsp+0x48]
   1400070dc:	add    rsp,0x20
   1400070e0:	pop    rdi
   1400070e1:	ret    
   1400070e2:	int3   
   1400070e3:	int3   
   1400070e4:	int3   
   1400070e5:	int3   
   1400070e6:	int3   
   1400070e7:	int3   
   1400070e8:	int3   
   1400070e9:	int3   
   1400070ea:	int3   
   1400070eb:	int3   
   1400070ec:	int3   
   1400070ed:	int3   
   1400070ee:	int3   
   1400070ef:	int3   
   1400070f0:	rex push rbx
   1400070f2:	sub    rsp,0x20
   1400070f6:	lea    rax,[rip+0x5b93]        # 0x14000cc90
   1400070fd:	mov    rbx,rcx
   140007100:	mov    QWORD PTR [rcx],rax
   140007103:	test   dl,0x1
   140007106:	je     0x14000710d
   140007108:	call   0x140009a28
   14000710d:	mov    rax,rbx
   140007110:	add    rsp,0x20
   140007114:	pop    rbx
   140007115:	ret    
   140007116:	int3   
   140007117:	int3   
   140007118:	int3   
   140007119:	int3   
   14000711a:	int3   
   14000711b:	int3   
   14000711c:	mov    rax,rsp
   14000711f:	mov    QWORD PTR [rax+0x10],rbx
   140007123:	mov    QWORD PTR [rax+0x18],rbp
   140007127:	mov    QWORD PTR [rax+0x20],rsi
   14000712b:	push   rdi
   14000712c:	push   r14
   14000712e:	push   r15
   140007130:	sub    rsp,0x20
   140007134:	xor    ebp,ebp
   140007136:	mov    rbx,rdx
   140007139:	test   r8,r8
   14000713c:	mov    WORD PTR [rax+0x8],bp
   140007140:	lea    rdx,[rax+0x8]
   140007144:	mov    r15,r9
   140007147:	cmovne rdx,r8
   14000714b:	mov    rdi,rcx
   14000714e:	test   rdx,rdx
   140007151:	jne    0x140007158
   140007153:	lea    esi,[rbp+0x2]
   140007156:	jmp    0x14000716d
   140007158:	or     rax,0xffffffffffffffff
   14000715c:	inc    rax
   14000715f:	cmp    WORD PTR [rdx+rax*2],bp
   140007163:	jne    0x14000715c
   140007165:	lea    rsi,[rax*2+0x2]
   14000716d:	sub    rbx,rcx
   140007170:	shr    rsi,1
   140007173:	shr    rbx,1
   140007176:	cmp    rsi,rbx
   140007179:	cmovb  rbx,rsi
   14000717d:	lea    r14,[rbx+rbx*1]
   140007181:	mov    r8,r14
   140007184:	call   0x14000a616
   140007189:	test   r15,r15
   14000718c:	je     0x14000719c
   14000718e:	cmp    rbx,0x1
   140007192:	mov    rax,rbp
   140007195:	cmova  rax,rdi
   140007199:	mov    QWORD PTR [r15],rax
   14000719c:	cmp    rbx,rsi
   14000719f:	jae    0x1400071ae
   1400071a1:	test   rbx,rbx
   1400071a4:	je     0x1400071ae
   1400071a6:	xor    eax,eax
   1400071a8:	mov    WORD PTR [r14+rdi*1-0x2],ax
   1400071ae:	mov    rbx,QWORD PTR [rsp+0x48]
   1400071b3:	lea    rax,[r14+rdi*1]
   1400071b7:	mov    rbp,QWORD PTR [rsp+0x50]
   1400071bc:	mov    rsi,QWORD PTR [rsp+0x58]
   1400071c1:	add    rsp,0x20
   1400071c5:	pop    r15
   1400071c7:	pop    r14
   1400071c9:	pop    rdi
   1400071ca:	ret    
   1400071cb:	int3   
   1400071cc:	int3   
   1400071cd:	int3   
   1400071ce:	int3   
   1400071cf:	int3   
   1400071d0:	int3   
   1400071d1:	int3   
   1400071d2:	int3   
   1400071d3:	int3   
   1400071d4:	mov    rax,rsp
   1400071d7:	mov    QWORD PTR [rax+0x10],rbx
   1400071db:	mov    QWORD PTR [rax+0x18],rsi
   1400071df:	mov    QWORD PTR [rax+0x20],rdi
   1400071e3:	push   r14
   1400071e5:	sub    rsp,0x20
   1400071e9:	mov    rbx,rdx
   1400071ec:	mov    BYTE PTR [rax+0x8],0x0
   1400071f0:	test   r8,r8
   1400071f3:	lea    rdx,[rax+0x8]
   1400071f7:	mov    r14,r9
   1400071fa:	mov    rsi,rcx
   1400071fd:	cmovne rdx,r8
   140007201:	test   rdx,rdx
   140007204:	jne    0x14000720b
   140007206:	lea    edi,[rdx+0x1]
   140007209:	jmp    0x14000721b
   14000720b:	or     rdi,0xffffffffffffffff
   14000720f:	inc    rdi
   140007212:	cmp    BYTE PTR [rdx+rdi*1],0x0
   140007216:	jne    0x14000720f
   140007218:	inc    rdi
   14000721b:	sub    rbx,rcx
   14000721e:	cmp    rdi,rbx
   140007221:	cmovb  rbx,rdi
   140007225:	mov    r8,rbx
   140007228:	call   0x14000a616
   14000722d:	test   r14,r14
   140007230:	je     0x14000723f
   140007232:	xor    eax,eax
   140007234:	cmp    rbx,0x1
   140007238:	cmova  rax,rsi
   14000723c:	mov    QWORD PTR [r14],rax
   14000723f:	cmp    rbx,rdi
   140007242:	jae    0x14000724f
   140007244:	test   rbx,rbx
   140007247:	je     0x14000724f
   140007249:	xor    eax,eax
   14000724b:	mov    BYTE PTR [rbx+rsi*1-0x1],al
   14000724f:	mov    rdi,QWORD PTR [rsp+0x48]
   140007254:	lea    rax,[rbx+rsi*1]
   140007258:	mov    rbx,QWORD PTR [rsp+0x38]
   14000725d:	mov    rsi,QWORD PTR [rsp+0x40]
   140007262:	add    rsp,0x20
   140007266:	pop    r14
   140007268:	ret    
   140007269:	int3   
   14000726a:	int3   
   14000726b:	int3   
   14000726c:	int3   
   14000726d:	int3   
   14000726e:	int3   
   14000726f:	int3   
   140007270:	mov    rax,rsp
   140007273:	mov    QWORD PTR [rax+0x8],rbx
   140007277:	mov    QWORD PTR [rax+0x10],rbp
   14000727b:	mov    QWORD PTR [rax+0x18],rsi
   14000727f:	mov    QWORD PTR [rax+0x20],rdi
   140007283:	push   r14
   140007285:	sub    rsp,0x30
   140007289:	and    QWORD PTR [rax-0x18],0x0
   14000728e:	lea    rdx,[rip+0x5a73]        # 0x14000cd08
   140007295:	mov    r14,rcx
   140007298:	mov    rsi,r9
   14000729b:	mov    ecx,0x18
   1400072a0:	mov    rbp,r8
   1400072a3:	call   0x14000a138
   1400072a8:	mov    rbx,rax
   1400072ab:	test   rax,rax
   1400072ae:	je     0x140007379
   1400072b4:	lea    rdi,[rip+0x597d]        # 0x14000cc38
   1400072bb:	mov    DWORD PTR [rax+0xc],0x1
   1400072c2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400072c6:	mov    DWORD PTR [rax+0x14],0x4
   1400072cd:	mov    QWORD PTR [rax],rdi
   1400072d0:	call   QWORD PTR [rip+0x521a]        # 0x14000c4f0
   1400072d6:	mov    rcx,rbx
   1400072d9:	call   QWORD PTR [rdi+0x8]
   1400072dc:	mov    rax,QWORD PTR [rbx]
   1400072df:	mov    QWORD PTR [rsp+0x20],rbx
   1400072e4:	mov    rdi,QWORD PTR [rax+0x10]
   1400072e8:	mov    rcx,rdi
   1400072eb:	call   QWORD PTR [rip+0x51ff]        # 0x14000c4f0
   1400072f1:	mov    rcx,rbx
   1400072f4:	call   rdi
   1400072f6:	mov    eax,DWORD PTR [r14]
   1400072f9:	mov    DWORD PTR [rbx+0x14],eax
   1400072fc:	mov    rax,QWORD PTR [rbx]
   1400072ff:	mov    rdi,QWORD PTR [rax]
   140007302:	mov    rcx,rdi
   140007305:	call   QWORD PTR [rip+0x51e5]        # 0x14000c4f0
   14000730b:	mov    r8,rsi
   14000730e:	mov    rdx,rbp
   140007311:	mov    rcx,rbx
   140007314:	call   rdi
   140007316:	test   BYTE PTR [r14],0x1
   14000731a:	mov    esi,eax
   14000731c:	je     0x14000735d
   14000731e:	test   eax,eax
   140007320:	js     0x140007359
   140007322:	test   BYTE PTR [r14],0x4
   140007326:	je     0x140007355
   140007328:	mov    rax,QWORD PTR [rip+0x9409]        # 0x140010738
   14000732f:	mov    rcx,QWORD PTR [rax]
   140007332:	lea    rax,[rip+0xfffffffffffffb07]        # 0x140006e40
   140007339:	cmp    QWORD PTR [rcx+0x8],rax
   14000733d:	jne    0x140007347
   14000733f:	call   QWORD PTR [rip+0x4f23]        # 0x14000c268
   140007345:	jmp    0x14000735d
   140007347:	lock inc DWORD PTR [rip+0x93f2]        # 0x140010740
   14000734e:	mov    rbx,QWORD PTR [rsp+0x20]
   140007353:	jmp    0x14000735d
   140007355:	xor    ebx,ebx
   140007357:	jmp    0x14000735d
   140007359:	and    DWORD PTR [rbx+0x14],0xfffffffa
   14000735d:	test   rbx,rbx
   140007360:	je     0x14000737e
   140007362:	mov    rax,QWORD PTR [rbx]
   140007365:	mov    rdi,QWORD PTR [rax+0x10]
   140007369:	mov    rcx,rdi
   14000736c:	call   QWORD PTR [rip+0x517e]        # 0x14000c4f0
   140007372:	mov    rcx,rbx
   140007375:	call   rdi
   140007377:	jmp    0x14000737e
   140007379:	mov    esi,0x8007000e
   14000737e:	mov    rbx,QWORD PTR [rsp+0x40]
   140007383:	mov    eax,esi
   140007385:	mov    rsi,QWORD PTR [rsp+0x50]
   14000738a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000738f:	mov    rdi,QWORD PTR [rsp+0x58]
   140007394:	add    rsp,0x30
   140007398:	pop    r14
   14000739a:	ret    
   14000739b:	int3   
   14000739c:	int3   
   14000739d:	int3   
   14000739e:	int3   
   14000739f:	int3   
   1400073a0:	int3   
   1400073a1:	int3   
   1400073a2:	int3   
   1400073a3:	int3   
   1400073a4:	int3   
   1400073a5:	int3   
   1400073a6:	int3   
   1400073a7:	int3   
   1400073a8:	int3   
   1400073a9:	int3   
   1400073aa:	int3   
   1400073ab:	int3   
   1400073ac:	int3   
   1400073ad:	int3   
   1400073ae:	int3   
   1400073af:	int3   
   1400073b0:	mov    rax,rsp
   1400073b3:	mov    QWORD PTR [rax+0x8],rbx
   1400073b7:	mov    QWORD PTR [rax+0x10],rbp
   1400073bb:	mov    QWORD PTR [rax+0x18],rsi
   1400073bf:	mov    QWORD PTR [rax+0x20],rdi
   1400073c3:	push   r14
   1400073c5:	sub    rsp,0x30
   1400073c9:	and    QWORD PTR [rax-0x18],0x0
   1400073ce:	lea    rdx,[rip+0x5933]        # 0x14000cd08
   1400073d5:	mov    r14,rcx
   1400073d8:	mov    rsi,r9
   1400073db:	mov    ecx,0x18
   1400073e0:	mov    rbp,r8
   1400073e3:	call   0x14000a138
   1400073e8:	mov    rbx,rax
   1400073eb:	test   rax,rax
   1400073ee:	je     0x1400074b9
   1400073f4:	lea    rdi,[rip+0x5705]        # 0x14000cb00
   1400073fb:	mov    DWORD PTR [rax+0xc],0x1
   140007402:	mov    rcx,QWORD PTR [rdi+0x8]
   140007406:	mov    DWORD PTR [rax+0x14],0x4
   14000740d:	mov    QWORD PTR [rax],rdi
   140007410:	call   QWORD PTR [rip+0x50da]        # 0x14000c4f0
   140007416:	mov    rcx,rbx
   140007419:	call   QWORD PTR [rdi+0x8]
   14000741c:	mov    rax,QWORD PTR [rbx]
   14000741f:	mov    QWORD PTR [rsp+0x20],rbx
   140007424:	mov    rdi,QWORD PTR [rax+0x10]
   140007428:	mov    rcx,rdi
   14000742b:	call   QWORD PTR [rip+0x50bf]        # 0x14000c4f0
   140007431:	mov    rcx,rbx
   140007434:	call   rdi
   140007436:	mov    eax,DWORD PTR [r14]
   140007439:	mov    DWORD PTR [rbx+0x14],eax
   14000743c:	mov    rax,QWORD PTR [rbx]
   14000743f:	mov    rdi,QWORD PTR [rax]
   140007442:	mov    rcx,rdi
   140007445:	call   QWORD PTR [rip+0x50a5]        # 0x14000c4f0
   14000744b:	mov    r8,rsi
   14000744e:	mov    rdx,rbp
   140007451:	mov    rcx,rbx
   140007454:	call   rdi
   140007456:	test   BYTE PTR [r14],0x1
   14000745a:	mov    esi,eax
   14000745c:	je     0x14000749d
   14000745e:	test   eax,eax
   140007460:	js     0x140007499
   140007462:	test   BYTE PTR [r14],0x4
   140007466:	je     0x140007495
   140007468:	mov    rax,QWORD PTR [rip+0x92c9]        # 0x140010738
   14000746f:	mov    rcx,QWORD PTR [rax]
   140007472:	lea    rax,[rip+0xfffffffffffff9c7]        # 0x140006e40
   140007479:	cmp    QWORD PTR [rcx+0x8],rax
   14000747d:	jne    0x140007487
   14000747f:	call   QWORD PTR [rip+0x4de3]        # 0x14000c268
   140007485:	jmp    0x14000749d
   140007487:	lock inc DWORD PTR [rip+0x92b2]        # 0x140010740
   14000748e:	mov    rbx,QWORD PTR [rsp+0x20]
   140007493:	jmp    0x14000749d
   140007495:	xor    ebx,ebx
   140007497:	jmp    0x14000749d
   140007499:	and    DWORD PTR [rbx+0x14],0xfffffffa
   14000749d:	test   rbx,rbx
   1400074a0:	je     0x1400074be
   1400074a2:	mov    rax,QWORD PTR [rbx]
   1400074a5:	mov    rdi,QWORD PTR [rax+0x10]
   1400074a9:	mov    rcx,rdi
   1400074ac:	call   QWORD PTR [rip+0x503e]        # 0x14000c4f0
   1400074b2:	mov    rcx,rbx
   1400074b5:	call   rdi
   1400074b7:	jmp    0x1400074be
   1400074b9:	mov    esi,0x8007000e
   1400074be:	mov    rbx,QWORD PTR [rsp+0x40]
   1400074c3:	mov    eax,esi
   1400074c5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400074ca:	mov    rbp,QWORD PTR [rsp+0x48]
   1400074cf:	mov    rdi,QWORD PTR [rsp+0x58]
   1400074d4:	add    rsp,0x30
   1400074d8:	pop    r14
   1400074da:	ret    
   1400074db:	int3   
   1400074dc:	int3   
   1400074dd:	int3   
   1400074de:	int3   
   1400074df:	int3   
   1400074e0:	int3   
   1400074e1:	int3   
   1400074e2:	int3   
   1400074e3:	int3   
   1400074e4:	int3   
   1400074e5:	int3   
   1400074e6:	int3   
   1400074e7:	int3   
   1400074e8:	int3   
   1400074e9:	int3   
   1400074ea:	int3   
   1400074eb:	int3   
   1400074ec:	int3   
   1400074ed:	int3   
   1400074ee:	int3   
   1400074ef:	int3   
   1400074f0:	mov    rax,rsp
   1400074f3:	mov    QWORD PTR [rax+0x8],rbx
   1400074f7:	mov    QWORD PTR [rax+0x10],rbp
   1400074fb:	mov    QWORD PTR [rax+0x18],rsi
   1400074ff:	mov    QWORD PTR [rax+0x20],rdi
   140007503:	push   r14
   140007505:	sub    rsp,0x30
   140007509:	and    QWORD PTR [rax-0x18],0x0
   14000750e:	lea    rdx,[rip+0x57f3]        # 0x14000cd08
   140007515:	mov    r14,rcx
   140007518:	mov    rsi,r9
   14000751b:	mov    ecx,0x18
   140007520:	mov    rbp,r8
   140007523:	call   0x14000a138
   140007528:	mov    rbx,rax
   14000752b:	test   rax,rax
   14000752e:	je     0x1400075f9
   140007534:	lea    rdi,[rip+0x578d]        # 0x14000ccc8
   14000753b:	mov    DWORD PTR [rax+0xc],0x1
   140007542:	mov    rcx,QWORD PTR [rdi+0x8]
   140007546:	mov    DWORD PTR [rax+0x14],0x4
   14000754d:	mov    QWORD PTR [rax],rdi
   140007550:	call   QWORD PTR [rip+0x4f9a]        # 0x14000c4f0
   140007556:	mov    rcx,rbx
   140007559:	call   QWORD PTR [rdi+0x8]
   14000755c:	mov    rax,QWORD PTR [rbx]
   14000755f:	mov    QWORD PTR [rsp+0x20],rbx
   140007564:	mov    rdi,QWORD PTR [rax+0x10]
   140007568:	mov    rcx,rdi
   14000756b:	call   QWORD PTR [rip+0x4f7f]        # 0x14000c4f0
   140007571:	mov    rcx,rbx
   140007574:	call   rdi
   140007576:	mov    eax,DWORD PTR [r14]
   140007579:	mov    DWORD PTR [rbx+0x14],eax
   14000757c:	mov    rax,QWORD PTR [rbx]
   14000757f:	mov    rdi,QWORD PTR [rax]
   140007582:	mov    rcx,rdi
   140007585:	call   QWORD PTR [rip+0x4f65]        # 0x14000c4f0
   14000758b:	mov    r8,rsi
   14000758e:	mov    rdx,rbp
   140007591:	mov    rcx,rbx
   140007594:	call   rdi
   140007596:	test   BYTE PTR [r14],0x1
   14000759a:	mov    esi,eax
   14000759c:	je     0x1400075dd
   14000759e:	test   eax,eax
   1400075a0:	js     0x1400075d9
   1400075a2:	test   BYTE PTR [r14],0x4
   1400075a6:	je     0x1400075d5
   1400075a8:	mov    rax,QWORD PTR [rip+0x9189]        # 0x140010738
   1400075af:	mov    rcx,QWORD PTR [rax]
   1400075b2:	lea    rax,[rip+0xfffffffffffff887]        # 0x140006e40
   1400075b9:	cmp    QWORD PTR [rcx+0x8],rax
   1400075bd:	jne    0x1400075c7
   1400075bf:	call   QWORD PTR [rip+0x4ca3]        # 0x14000c268
   1400075c5:	jmp    0x1400075dd
   1400075c7:	lock inc DWORD PTR [rip+0x9172]        # 0x140010740
   1400075ce:	mov    rbx,QWORD PTR [rsp+0x20]
   1400075d3:	jmp    0x1400075dd
   1400075d5:	xor    ebx,ebx
   1400075d7:	jmp    0x1400075dd
   1400075d9:	and    DWORD PTR [rbx+0x14],0xfffffffa
   1400075dd:	test   rbx,rbx
   1400075e0:	je     0x1400075fe
   1400075e2:	mov    rax,QWORD PTR [rbx]
   1400075e5:	mov    rdi,QWORD PTR [rax+0x10]
   1400075e9:	mov    rcx,rdi
   1400075ec:	call   QWORD PTR [rip+0x4efe]        # 0x14000c4f0
   1400075f2:	mov    rcx,rbx
   1400075f5:	call   rdi
   1400075f7:	jmp    0x1400075fe
   1400075f9:	mov    esi,0x8007000e
   1400075fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140007603:	mov    eax,esi
   140007605:	mov    rsi,QWORD PTR [rsp+0x50]
   14000760a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000760f:	mov    rdi,QWORD PTR [rsp+0x58]
   140007614:	add    rsp,0x30
   140007618:	pop    r14
   14000761a:	ret    
   14000761b:	int3   
   14000761c:	int3   
   14000761d:	int3   
   14000761e:	int3   
   14000761f:	int3   
   140007620:	int3   
   140007621:	int3   
   140007622:	int3   
   140007623:	int3   
   140007624:	mov    rax,rsp
   140007627:	mov    QWORD PTR [rax+0x8],rbx
   14000762b:	mov    QWORD PTR [rax+0x10],rsi
   14000762f:	mov    QWORD PTR [rax+0x18],rdi
   140007633:	mov    QWORD PTR [rax+0x20],r14
   140007637:	push   r15
   140007639:	sub    rsp,0x30
   14000763d:	xor    ebx,ebx
   14000763f:	xor    esi,esi
   140007641:	mov    rdi,r9
   140007644:	mov    r14,r8
   140007647:	mov    r15,rdx
   14000764a:	cmp    DWORD PTR [rsp+0x60],ebx
   14000764e:	jbe    0x14000768a
   140007650:	test   ebx,ebx
   140007652:	js     0x140007696
   140007654:	mov    rdx,QWORD PTR [r14]
   140007657:	lea    rax,[rdi+rsi*4]
   14000765b:	mov    r9d,0x4
   140007661:	mov    ecx,esi
   140007663:	shl    rcx,0x4
   140007667:	mov    r8d,r9d
   14000766a:	add    rcx,r15
   14000766d:	mov    QWORD PTR [rsp+0x20],rax
   140007672:	call   QWORD PTR [rip+0x4be0]        # 0x14000c258
   140007678:	inc    esi
   14000767a:	add    r14,0x8
   14000767e:	mov    ebx,eax
   140007680:	cmp    esi,DWORD PTR [rsp+0x60]
   140007684:	jb     0x140007650
   140007686:	test   eax,eax
   140007688:	js     0x140007696
   14000768a:	call   QWORD PTR [rip+0x4ba0]        # 0x14000c230
   140007690:	mov    ebx,eax
   140007692:	test   eax,eax
   140007694:	jns    0x1400076af
   140007696:	test   esi,esi
   140007698:	je     0x1400076af
   14000769a:	mov    ecx,DWORD PTR [rdi]
   14000769c:	call   QWORD PTR [rip+0x4bce]        # 0x14000c270
   1400076a2:	and    DWORD PTR [rdi],0x0
   1400076a5:	lea    rdi,[rdi+0x4]
   1400076a9:	sub    rsi,0x1
   1400076ad:	jne    0x14000769a
   1400076af:	mov    rsi,QWORD PTR [rsp+0x48]
   1400076b4:	mov    eax,ebx
   1400076b6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400076bb:	mov    rdi,QWORD PTR [rsp+0x50]
   1400076c0:	mov    r14,QWORD PTR [rsp+0x58]
   1400076c5:	add    rsp,0x30
   1400076c9:	pop    r15
   1400076cb:	ret    
   1400076cc:	int3   
   1400076cd:	int3   
   1400076ce:	int3   
   1400076cf:	int3   
   1400076d0:	int3   
   1400076d1:	int3   
   1400076d2:	int3   
   1400076d3:	int3   
   1400076d4:	sub    rsp,0x68
   1400076d8:	mov    rax,QWORD PTR [rip+0x8929]        # 0x140010008
   1400076df:	xor    rax,rsp
   1400076e2:	mov    QWORD PTR [rsp+0x50],rax
   1400076e7:	cmp    DWORD PTR [rcx],0x5
   1400076ea:	jbe    0x14000772d
   1400076ec:	movabs r8,0x200000000000
   1400076f6:	test   QWORD PTR [rcx+0x10],r8
   1400076fa:	je     0x14000772d
   1400076fc:	mov    rax,QWORD PTR [rcx+0x18]
   140007700:	and    rax,r8
   140007703:	cmp    rax,QWORD PTR [rcx+0x18]
   140007707:	jne    0x14000772d
   140007709:	lea    rax,[rsp+0x30]
   14000770e:	mov    r8,rdx
   140007711:	mov    QWORD PTR [rsp+0x28],rax
   140007716:	lea    rdx,[rip+0x598c]        # 0x14000d0a9
   14000771d:	xor    r9d,r9d
   140007720:	mov    DWORD PTR [rsp+0x20],0x2
   140007728:	call   0x1400010dc
   14000772d:	mov    rcx,QWORD PTR [rsp+0x50]
   140007732:	xor    rcx,rsp
   140007735:	call   0x140009e20
   14000773a:	add    rsp,0x68
   14000773e:	ret    
   14000773f:	int3   
   140007740:	int3   
   140007741:	int3   
   140007742:	int3   
   140007743:	int3   
   140007744:	int3   
   140007745:	int3   
   140007746:	int3   
   140007747:	int3   
   140007748:	int3   
   140007749:	int3   
   14000774a:	int3   
   14000774b:	int3   
   14000774c:	int3   
   14000774d:	int3   
   14000774e:	int3   
   14000774f:	int3   
   140007750:	mov    QWORD PTR [rsp+0x8],rbx
   140007755:	mov    QWORD PTR [rsp+0x18],rbp
   14000775a:	push   rsi
   14000775b:	push   rdi
   14000775c:	push   r14
   14000775e:	sub    rsp,0x20
   140007762:	and    QWORD PTR [r9],0x0
   140007766:	mov    r14,r9
   140007769:	mov    rbp,r8
   14000776c:	test   rdx,rdx
   14000776f:	je     0x140007784
   140007771:	mov    ebx,0x80040110
   140007776:	xor    edx,edx
   140007778:	mov    ecx,ebx
   14000777a:	call   QWORD PTR [rip+0x4bc0]        # 0x14000c340
   140007780:	mov    eax,ebx
   140007782:	jmp    0x1400077e2
   140007784:	and    QWORD PTR [rsp+0x48],0x0
   14000778a:	lea    rcx,[rsp+0x48]
   14000778f:	call   0x140008170
   140007794:	mov    esi,eax
   140007796:	test   eax,eax
   140007798:	js     0x1400077bb
   14000779a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000779f:	mov    rax,QWORD PTR [rbx]
   1400077a2:	mov    rdi,QWORD PTR [rax]
   1400077a5:	mov    rcx,rdi
   1400077a8:	call   QWORD PTR [rip+0x4d42]        # 0x14000c4f0
   1400077ae:	mov    r8,r14
   1400077b1:	mov    rdx,rbp
   1400077b4:	mov    rcx,rbx
   1400077b7:	call   rdi
   1400077b9:	mov    esi,eax
   1400077bb:	mov    rdi,QWORD PTR [rsp+0x48]
   1400077c0:	test   rdi,rdi
   1400077c3:	je     0x1400077e0
   1400077c5:	and    QWORD PTR [rsp+0x48],0x0
   1400077cb:	mov    rdx,QWORD PTR [rdi]
   1400077ce:	mov    rbx,QWORD PTR [rdx+0x10]
   1400077d2:	mov    rcx,rbx
   1400077d5:	call   QWORD PTR [rip+0x4d15]        # 0x14000c4f0
   1400077db:	mov    rcx,rdi
   1400077de:	call   rbx
   1400077e0:	mov    eax,esi
   1400077e2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400077e7:	mov    rbp,QWORD PTR [rsp+0x50]
   1400077ec:	add    rsp,0x20
   1400077f0:	pop    r14
   1400077f2:	pop    rdi
   1400077f3:	pop    rsi
   1400077f4:	ret    
   1400077f5:	int3   
   1400077f6:	int3   
   1400077f7:	int3   
   1400077f8:	int3   
   1400077f9:	int3   
   1400077fa:	int3   
   1400077fb:	int3   
   1400077fc:	int3   
   1400077fd:	int3   
   1400077fe:	int3   
   1400077ff:	int3   
   140007800:	rex push rbx
   140007802:	sub    rsp,0x20
   140007806:	mov    ebx,0x1
   14000780b:	lock xadd DWORD PTR [rcx+0xc],ebx
   140007810:	inc    ebx
   140007812:	test   BYTE PTR [rcx+0x14],0x6
   140007816:	jne    0x140007843
   140007818:	cmp    ebx,0x2
   14000781b:	jne    0x140007843
   14000781d:	mov    rax,QWORD PTR [rip+0x8f14]        # 0x140010738
   140007824:	mov    rcx,QWORD PTR [rax]
   140007827:	lea    rax,[rip+0xfffffffffffff612]        # 0x140006e40
   14000782e:	cmp    QWORD PTR [rcx+0x8],rax
   140007832:	jne    0x14000783c
   140007834:	call   QWORD PTR [rip+0x4a2e]        # 0x14000c268
   14000783a:	jmp    0x140007843
   14000783c:	lock inc DWORD PTR [rip+0x8efd]        # 0x140010740
   140007843:	mov    eax,ebx
   140007845:	add    rsp,0x20
   140007849:	pop    rbx
   14000784a:	ret    
   14000784b:	int3   
   14000784c:	int3   
   14000784d:	int3   
   14000784e:	int3   
   14000784f:	int3   
   140007850:	int3   
   140007851:	int3   
   140007852:	int3   
   140007853:	int3   
   140007854:	int3   
   140007855:	int3   
   140007856:	int3   
   140007857:	int3   
   140007858:	int3   
   140007859:	int3   
   14000785a:	int3   
   14000785b:	int3   
   14000785c:	int3   
   14000785d:	int3   
   14000785e:	int3   
   14000785f:	int3   
   140007860:	mov    QWORD PTR [rsp+0x8],rbx
   140007865:	mov    QWORD PTR [rsp+0x10],rsi
   14000786a:	mov    QWORD PTR [rsp+0x18],rdi
   14000786f:	push   r14
   140007871:	sub    rsp,0x20
   140007875:	mov    r14,rcx
   140007878:	or     esi,0xffffffff
   14000787b:	lock xadd DWORD PTR [rcx+0xc],esi
   140007880:	sub    esi,0x1
   140007883:	jne    0x1400078be
   140007885:	mov    eax,DWORD PTR [rcx+0x14]
   140007888:	and    eax,0x5
   14000788b:	cmp    al,0x5
   14000788d:	mov    rax,QWORD PTR [rcx]
   140007890:	sete   dil
   140007894:	mov    rbx,QWORD PTR [rax+0x28]
   140007898:	mov    rcx,rbx
   14000789b:	call   QWORD PTR [rip+0x4c4f]        # 0x14000c4f0
   1400078a1:	lea    edx,[rsi+0x1]
   1400078a4:	mov    rcx,r14
   1400078a7:	call   rbx
   1400078a9:	test   dil,dil
   1400078ac:	je     0x1400078e5
   1400078ae:	mov    rdi,QWORD PTR [rip+0x8e83]        # 0x140010738
   1400078b5:	mov    rax,QWORD PTR [rdi]
   1400078b8:	mov    rbx,QWORD PTR [rax+0x10]
   1400078bc:	jmp    0x1400078d7
   1400078be:	test   BYTE PTR [rcx+0x14],0x6
   1400078c2:	jne    0x1400078e5
   1400078c4:	cmp    esi,0x1
   1400078c7:	jne    0x1400078e5
   1400078c9:	mov    rdi,QWORD PTR [rip+0x8e68]        # 0x140010738
   1400078d0:	mov    rdx,QWORD PTR [rdi]
   1400078d3:	mov    rbx,QWORD PTR [rdx+0x10]
   1400078d7:	mov    rcx,rbx
   1400078da:	call   QWORD PTR [rip+0x4c10]        # 0x14000c4f0
   1400078e0:	mov    rcx,rdi
   1400078e3:	call   rbx
   1400078e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400078ea:	mov    eax,esi
   1400078ec:	mov    rsi,QWORD PTR [rsp+0x38]
   1400078f1:	mov    rdi,QWORD PTR [rsp+0x40]
   1400078f6:	add    rsp,0x20
   1400078fa:	pop    r14
   1400078fc:	ret    
   1400078fd:	int3   
   1400078fe:	int3   
   1400078ff:	int3   
   140007900:	int3   
   140007901:	int3   
   140007902:	int3   
   140007903:	int3   
   140007904:	int3   
   140007905:	int3   
   140007906:	int3   
   140007907:	int3   
   140007908:	int3   
   140007909:	int3   
   14000790a:	int3   
   14000790b:	int3   
   14000790c:	int3   
   14000790d:	int3   
   14000790e:	int3   
   14000790f:	int3   
   140007910:	mov    QWORD PTR [rsp+0x8],rbx
   140007915:	mov    QWORD PTR [rsp+0x10],rsi
   14000791a:	push   rdi
   14000791b:	sub    rsp,0x20
   14000791f:	xor    edi,edi
   140007921:	mov    rsi,rcx
   140007924:	mov    QWORD PTR [r8],rdi
   140007927:	cmp    DWORD PTR [rdx],edi
   140007929:	jne    0x14000794c
   14000792b:	mov    eax,DWORD PTR [rip+0x512b]        # 0x14000ca5c
   140007931:	cmp    DWORD PTR [rdx+0x4],eax
   140007934:	jne    0x14000794c
   140007936:	mov    eax,DWORD PTR [rip+0x5124]        # 0x14000ca60
   14000793c:	cmp    DWORD PTR [rdx+0x8],eax
   14000793f:	jne    0x14000794c
   140007941:	mov    eax,DWORD PTR [rip+0x511d]        # 0x14000ca64
   140007947:	cmp    DWORD PTR [rdx+0xc],eax
   14000794a:	je     0x140007972
   14000794c:	cmp    DWORD PTR [rdx],0x1
   14000794f:	jne    0x14000798c
   140007951:	mov    eax,DWORD PTR [rip+0x522d]        # 0x14000cb84
   140007957:	cmp    DWORD PTR [rdx+0x4],eax
   14000795a:	jne    0x14000798c
   14000795c:	mov    eax,DWORD PTR [rip+0x5226]        # 0x14000cb88
   140007962:	cmp    DWORD PTR [rdx+0x8],eax
   140007965:	jne    0x14000798c
   140007967:	mov    eax,DWORD PTR [rip+0x521f]        # 0x14000cb8c
   14000796d:	cmp    DWORD PTR [rdx+0xc],eax
   140007970:	jne    0x14000798c
   140007972:	mov    QWORD PTR [r8],rcx
   140007975:	mov    rax,QWORD PTR [rcx]
   140007978:	mov    rbx,QWORD PTR [rax+0x8]
   14000797c:	mov    rcx,rbx
   14000797f:	call   QWORD PTR [rip+0x4b6b]        # 0x14000c4f0
   140007985:	mov    rcx,rsi
   140007988:	call   rbx
   14000798a:	jmp    0x140007991
   14000798c:	mov    edi,0x80004002
   140007991:	mov    rbx,QWORD PTR [rsp+0x30]
   140007996:	mov    eax,edi
   140007998:	mov    rsi,QWORD PTR [rsp+0x38]
   14000799d:	add    rsp,0x20
   1400079a1:	pop    rdi
   1400079a2:	ret    
   1400079a3:	int3   
   1400079a4:	int3   
   1400079a5:	int3   
   1400079a6:	int3   
   1400079a7:	int3   
   1400079a8:	int3   
   1400079a9:	int3   
   1400079aa:	int3   
   1400079ab:	int3   
   1400079ac:	int3   
   1400079ad:	int3   
   1400079ae:	int3   
   1400079af:	int3   
   1400079b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400079b5:	push   rdi
   1400079b6:	sub    rsp,0x20
   1400079ba:	mov    rdi,QWORD PTR [rip+0x8d77]        # 0x140010738
   1400079c1:	test   rdi,rdi
   1400079c4:	jne    0x1400079d9
   1400079c6:	mov    ebx,0x80004005
   1400079cb:	xor    edx,edx
   1400079cd:	mov    ecx,ebx
   1400079cf:	call   QWORD PTR [rip+0x496b]        # 0x14000c340
   1400079d5:	mov    eax,ebx
   1400079d7:	jmp    0x140007a12
   1400079d9:	mov    rax,QWORD PTR [rdi]
   1400079dc:	test   edx,edx
   1400079de:	je     0x1400079fe
   1400079e0:	lea    rcx,[rip+0xfffffffffffff459]        # 0x140006e40
   1400079e7:	cmp    QWORD PTR [rax+0x8],rcx
   1400079eb:	jne    0x1400079f5
   1400079ed:	call   QWORD PTR [rip+0x4875]        # 0x14000c268
   1400079f3:	jmp    0x140007a10
   1400079f5:	lock inc DWORD PTR [rip+0x8d44]        # 0x140010740
   1400079fc:	jmp    0x140007a10
   1400079fe:	mov    rbx,QWORD PTR [rax+0x10]
   140007a02:	mov    rcx,rbx
   140007a05:	call   QWORD PTR [rip+0x4ae5]        # 0x14000c4f0
   140007a0b:	mov    rcx,rdi
   140007a0e:	call   rbx
   140007a10:	xor    eax,eax
   140007a12:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a17:	add    rsp,0x20
   140007a1b:	pop    rdi
   140007a1c:	ret    
   140007a1d:	int3   
   140007a1e:	int3   
   140007a1f:	int3   
   140007a20:	int3   
   140007a21:	int3   
   140007a22:	int3   
   140007a23:	int3   
   140007a24:	int3   
   140007a25:	int3   
   140007a26:	int3   
   140007a27:	int3   
   140007a28:	int3   
   140007a29:	int3   
   140007a2a:	int3   
   140007a2b:	int3   
   140007a2c:	int3   
   140007a2d:	int3   
   140007a2e:	int3   
   140007a2f:	int3   
   140007a30:	mov    QWORD PTR [rsp+0x8],rbx
   140007a35:	mov    QWORD PTR [rsp+0x18],rbp
   140007a3a:	push   rsi
   140007a3b:	push   rdi
   140007a3c:	push   r14
   140007a3e:	sub    rsp,0x20
   140007a42:	and    QWORD PTR [r9],0x0
   140007a46:	mov    r14,r9
   140007a49:	mov    rbp,r8
   140007a4c:	test   rdx,rdx
   140007a4f:	je     0x140007a64
   140007a51:	mov    ebx,0x80040110
   140007a56:	xor    edx,edx
   140007a58:	mov    ecx,ebx
   140007a5a:	call   QWORD PTR [rip+0x48e0]        # 0x14000c340
   140007a60:	mov    eax,ebx
   140007a62:	jmp    0x140007ac2
   140007a64:	and    QWORD PTR [rsp+0x48],0x0
   140007a6a:	lea    rcx,[rsp+0x48]
   140007a6f:	call   0x14000825c
   140007a74:	mov    esi,eax
   140007a76:	test   eax,eax
   140007a78:	js     0x140007a9b
   140007a7a:	mov    rbx,QWORD PTR [rsp+0x48]
   140007a7f:	mov    rax,QWORD PTR [rbx]
   140007a82:	mov    rdi,QWORD PTR [rax]
   140007a85:	mov    rcx,rdi
   140007a88:	call   QWORD PTR [rip+0x4a62]        # 0x14000c4f0
   140007a8e:	mov    r8,r14
   140007a91:	mov    rdx,rbp
   140007a94:	mov    rcx,rbx
   140007a97:	call   rdi
   140007a99:	mov    esi,eax
   140007a9b:	mov    rdi,QWORD PTR [rsp+0x48]
   140007aa0:	test   rdi,rdi
   140007aa3:	je     0x140007ac0
   140007aa5:	and    QWORD PTR [rsp+0x48],0x0
   140007aab:	mov    rdx,QWORD PTR [rdi]
   140007aae:	mov    rbx,QWORD PTR [rdx+0x10]
   140007ab2:	mov    rcx,rbx
   140007ab5:	call   QWORD PTR [rip+0x4a35]        # 0x14000c4f0
   140007abb:	mov    rcx,rdi
   140007abe:	call   rbx
   140007ac0:	mov    eax,esi
   140007ac2:	mov    rbx,QWORD PTR [rsp+0x40]
   140007ac7:	mov    rbp,QWORD PTR [rsp+0x50]
   140007acc:	add    rsp,0x20
   140007ad0:	pop    r14
   140007ad2:	pop    rdi
   140007ad3:	pop    rsi
   140007ad4:	ret    
   140007ad5:	int3   
   140007ad6:	int3   
   140007ad7:	int3   
   140007ad8:	int3   
   140007ad9:	int3   
   140007ada:	int3   
   140007adb:	int3   
   140007adc:	int3   
   140007add:	int3   
   140007ade:	int3   
   140007adf:	int3   
   140007ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140007ae5:	mov    QWORD PTR [rsp+0x18],rbp
   140007aea:	push   rsi
   140007aeb:	push   rdi
   140007aec:	push   r14
   140007aee:	sub    rsp,0x20
   140007af2:	and    QWORD PTR [r9],0x0
   140007af6:	mov    r14,r9
   140007af9:	mov    rbp,r8
   140007afc:	test   rdx,rdx
   140007aff:	je     0x140007b14
   140007b01:	mov    ebx,0x80040110
   140007b06:	xor    edx,edx
   140007b08:	mov    ecx,ebx
   140007b0a:	call   QWORD PTR [rip+0x4830]        # 0x14000c340
   140007b10:	mov    eax,ebx
   140007b12:	jmp    0x140007b72
   140007b14:	and    QWORD PTR [rsp+0x48],0x0
   140007b1a:	lea    rcx,[rsp+0x48]
   140007b1f:	call   0x140008348
   140007b24:	mov    esi,eax
   140007b26:	test   eax,eax
   140007b28:	js     0x140007b4b
   140007b2a:	mov    rbx,QWORD PTR [rsp+0x48]
   140007b2f:	mov    rax,QWORD PTR [rbx]
   140007b32:	mov    rdi,QWORD PTR [rax]
   140007b35:	mov    rcx,rdi
   140007b38:	call   QWORD PTR [rip+0x49b2]        # 0x14000c4f0
   140007b3e:	mov    r8,r14
   140007b41:	mov    rdx,rbp
   140007b44:	mov    rcx,rbx
   140007b47:	call   rdi
   140007b49:	mov    esi,eax
   140007b4b:	mov    rdi,QWORD PTR [rsp+0x48]
   140007b50:	test   rdi,rdi
   140007b53:	je     0x140007b70
   140007b55:	and    QWORD PTR [rsp+0x48],0x0
   140007b5b:	mov    rdx,QWORD PTR [rdi]
   140007b5e:	mov    rbx,QWORD PTR [rdx+0x10]
   140007b62:	mov    rcx,rbx
   140007b65:	call   QWORD PTR [rip+0x4985]        # 0x14000c4f0
   140007b6b:	mov    rcx,rdi
   140007b6e:	call   rbx
   140007b70:	mov    eax,esi
   140007b72:	mov    rbx,QWORD PTR [rsp+0x40]
   140007b77:	mov    rbp,QWORD PTR [rsp+0x50]
   140007b7c:	add    rsp,0x20
   140007b80:	pop    r14
   140007b82:	pop    rdi
   140007b83:	pop    rsi
   140007b84:	ret    
   140007b85:	int3   
   140007b86:	int3   
   140007b87:	int3   
   140007b88:	int3   
   140007b89:	int3   
   140007b8a:	int3   
   140007b8b:	int3   
   140007b8c:	int3   
   140007b8d:	int3   
   140007b8e:	int3   
   140007b8f:	int3   
   140007b90:	mov    ecx,DWORD PTR [rcx+0x10]
   140007b93:	xor    r9d,r9d
   140007b96:	xor    r8d,r8d
   140007b99:	lea    edx,[r9+0x12]
   140007b9d:	rex.W jmp QWORD PTR [rip+0x4634]        # 0x14000c1d8
   140007ba4:	int3   
   140007ba5:	int3   
   140007ba6:	int3   
   140007ba7:	int3   
   140007ba8:	int3   
   140007ba9:	int3   
   140007baa:	int3   
   140007bab:	int3   
   140007bac:	mov    rax,rsp
   140007baf:	mov    QWORD PTR [rax+0x8],rbx
   140007bb3:	mov    QWORD PTR [rax+0x10],rbp
   140007bb7:	mov    QWORD PTR [rax+0x18],rsi
   140007bbb:	mov    QWORD PTR [rax+0x20],rdi
   140007bbf:	push   r14
   140007bc1:	sub    rsp,0x40
   140007bc5:	mov    rdi,QWORD PTR [rsp+0x78]
   140007bca:	lea    rbp,[r9+0x1]
   140007bce:	xor    ebx,ebx
   140007bd0:	mov    rsi,r9
   140007bd3:	mov    r14,r8
   140007bd6:	mov    QWORD PTR [rdi],rbx
   140007bd9:	cmp    rbp,r9
   140007bdc:	jb     0x140007c17
   140007bde:	lea    eax,[rbx+0x2]
   140007be1:	mov    QWORD PTR [rdi],rbx
   140007be4:	mul    rbp
   140007be7:	test   rdx,rdx
   140007bea:	jne    0x140007c17
   140007bec:	mov    rcx,rax
   140007bef:	call   QWORD PTR [rip+0x4653]        # 0x14000c248
   140007bf5:	mov    QWORD PTR [rdi],rax
   140007bf8:	test   rax,rax
   140007bfb:	je     0x140007c10
   140007bfd:	mov    r9,rsi
   140007c00:	mov    r8,r14
   140007c03:	mov    rdx,rbp
   140007c06:	mov    rcx,rax
   140007c09:	call   0x140001738
   140007c0e:	jmp    0x140007c1c
   140007c10:	mov    ebx,0x8007000e
   140007c15:	jmp    0x140007c1c
   140007c17:	mov    ebx,0x80070216
   140007c1c:	mov    rbp,QWORD PTR [rsp+0x58]
   140007c21:	mov    eax,ebx
   140007c23:	mov    rbx,QWORD PTR [rsp+0x50]
   140007c28:	mov    rsi,QWORD PTR [rsp+0x60]
   140007c2d:	mov    rdi,QWORD PTR [rsp+0x68]
   140007c32:	add    rsp,0x40
   140007c36:	pop    r14
   140007c38:	ret    
   140007c39:	int3   
   140007c3a:	int3   
   140007c3b:	int3   
   140007c3c:	int3   
   140007c3d:	int3   
   140007c3e:	int3   
   140007c3f:	int3   
   140007c40:	mov    QWORD PTR [rsp+0x18],rbx
   140007c45:	mov    QWORD PTR [rsp+0x20],rbp
   140007c4a:	push   rsi
   140007c4b:	push   rdi
   140007c4c:	push   r14
   140007c4e:	sub    rsp,0x70
   140007c52:	mov    rax,QWORD PTR [rip+0x83af]        # 0x140010008
   140007c59:	xor    rax,rsp
   140007c5c:	mov    QWORD PTR [rsp+0x60],rax
   140007c61:	and    QWORD PTR [rdx],0x0
   140007c65:	mov    rsi,rdx
   140007c68:	mov    rbx,rcx
   140007c6b:	call   QWORD PTR [rip+0x471f]        # 0x14000c390
   140007c71:	test   eax,eax
   140007c73:	jne    0x140007d27
   140007c79:	lea    rdx,[rsp+0x34]
   140007c7e:	mov    rcx,rbx
   140007c81:	call   QWORD PTR [rip+0x46f1]        # 0x14000c378
   140007c87:	test   eax,eax
   140007c89:	js     0x140007d27
   140007c8f:	cmp    DWORD PTR [rsp+0x34],0x1
   140007c94:	je     0x140007d27
   140007c9a:	xor    edx,edx
   140007c9c:	mov    rcx,rbx
   140007c9f:	call   QWORD PTR [rip+0x46db]        # 0x14000c380
   140007ca5:	mov    rbp,rax
   140007ca8:	lea    rdi,[rip+0x6da9]        # 0x14000ea58
   140007caf:	lea    r14,[rip+0x6da2]        # 0x14000ea58
   140007cb6:	cmp    rdi,r14
   140007cb9:	jae    0x140007d16
   140007cbb:	mov    rbx,QWORD PTR [rdi]
   140007cbe:	test   rbx,rbx
   140007cc1:	je     0x140007cf2
   140007cc3:	mov    rbx,QWORD PTR [rbx+0x8]
   140007cc7:	mov    rcx,rbx
   140007cca:	call   QWORD PTR [rip+0x4820]        # 0x14000c4f0
   140007cd0:	call   rbx
   140007cd2:	mov    rcx,rbp
   140007cd5:	sub    rax,rbp
   140007cd8:	movzx  edx,WORD PTR [rcx]
   140007cdb:	movzx  r8d,WORD PTR [rcx+rax*1]
   140007ce0:	sub    edx,r8d
   140007ce3:	jne    0x140007cee
   140007ce5:	add    rcx,0x2
   140007ce9:	test   r8d,r8d
   140007cec:	jne    0x140007cd8
   140007cee:	test   edx,edx
   140007cf0:	je     0x140007cf8
   140007cf2:	add    rdi,0x8
   140007cf6:	jmp    0x140007cb6
   140007cf8:	mov    r9,QWORD PTR [rdi]
   140007cfb:	lea    rdx,[rsp+0x30]
   140007d00:	mov    DWORD PTR [rsp+0x30],0x2
   140007d08:	mov    QWORD PTR [rsp+0x20],rsi
   140007d0d:	call   0x1400013c0
   140007d12:	mov    ebx,eax
   140007d14:	jmp    0x140007d64
   140007d16:	mov    ebx,0x80040111
   140007d1b:	xor    edx,edx
   140007d1d:	mov    ecx,ebx
   140007d1f:	call   QWORD PTR [rip+0x461b]        # 0x14000c340
   140007d25:	jmp    0x140007d64
   140007d27:	movups xmm0,XMMWORD PTR [rip+0x4ce2]        # 0x14000ca10
   140007d2e:	mov    ebx,0x80070057
   140007d33:	lea    r8,[rsp+0x38]
   140007d38:	movups xmm1,XMMWORD PTR [rip+0x4ce1]        # 0x14000ca20
   140007d3f:	mov    edx,0x13
   140007d44:	mov    ecx,ebx
   140007d46:	movups XMMWORD PTR [rsp+0x38],xmm0
   140007d4b:	movsd  xmm0,QWORD PTR [rip+0x4cdd]        # 0x14000ca30
   140007d53:	movsd  QWORD PTR [rsp+0x58],xmm0
   140007d59:	movups XMMWORD PTR [rsp+0x48],xmm1
   140007d5e:	call   QWORD PTR [rip+0x45e4]        # 0x14000c348
   140007d64:	mov    eax,ebx
   140007d66:	mov    rcx,QWORD PTR [rsp+0x60]
   140007d6b:	xor    rcx,rsp
   140007d6e:	call   0x140009e20
   140007d73:	lea    r11,[rsp+0x70]
   140007d78:	mov    rbx,QWORD PTR [r11+0x30]
   140007d7c:	mov    rbp,QWORD PTR [r11+0x38]
   140007d80:	mov    rsp,r11
   140007d83:	pop    r14
   140007d85:	pop    rdi
   140007d86:	pop    rsi
   140007d87:	ret    
   140007d88:	int3   
   140007d89:	int3   
   140007d8a:	int3   
   140007d8b:	int3   
   140007d8c:	int3   
   140007d8d:	int3   
   140007d8e:	int3   
   140007d8f:	int3   
   140007d90:	mov    QWORD PTR [rsp+0x10],rdx
   140007d95:	mov    QWORD PTR [rsp+0x8],rcx
   140007d9a:	push   rbx
   140007d9b:	push   rbp
   140007d9c:	push   rsi
   140007d9d:	push   rdi
   140007d9e:	push   r12
   140007da0:	push   r13
   140007da2:	push   r14
   140007da4:	push   r15
   140007da6:	sub    rsp,0x48
   140007daa:	xor    ebx,ebx
   140007dac:	lea    r14,[rip+0x6c7d]        # 0x14000ea30
   140007db3:	lea    rax,[rip+0x6c96]        # 0x14000ea50
   140007dba:	mov    r13,rcx
   140007dbd:	lea    rbp,[rip+0x6c93]        # 0x14000ea57
   140007dc4:	mov    esi,ebx
   140007dc6:	sub    rbp,r14
   140007dc9:	mov    r12d,ebx
   140007dcc:	shr    rbp,0x3
   140007dd0:	mov    edx,ebx
   140007dd2:	cmp    r14,rax
   140007dd5:	mov    edi,0x8007000e
   140007dda:	mov    rax,r14
   140007ddd:	cmova  rbp,rbx
   140007de1:	or     r9,0xffffffffffffffff
   140007de5:	test   rbp,rbp
   140007de8:	je     0x140008020
   140007dee:	cmp    QWORD PTR [rax],rbx
   140007df1:	je     0x140007df6
   140007df3:	inc    r12d
   140007df6:	add    rax,0x8
   140007dfa:	inc    rdx
   140007dfd:	cmp    rdx,rbp
   140007e00:	jb     0x140007dee
   140007e02:	test   r12d,r12d
   140007e05:	je     0x140008020
   140007e0b:	mov    ebx,r12d
   140007e0e:	mov    eax,0x4
   140007e13:	mul    rbx
   140007e16:	lea    rdx,[rip+0x4eeb]        # 0x14000cd08
   140007e1d:	cmovo  rax,r9
   140007e21:	mov    rcx,rax
   140007e24:	call   0x140009e44
   140007e29:	mov    r15,rax
   140007e2c:	mov    QWORD PTR [rsp+0xa0],rax
   140007e34:	mov    rcx,0xffffffffffffffff
   140007e3b:	mov    eax,0x8
   140007e40:	mul    rbx
   140007e43:	lea    rdx,[rip+0x4ebe]        # 0x14000cd08
   140007e4a:	cmovo  rax,rcx
   140007e4e:	mov    rcx,rax
   140007e51:	call   0x140009e44
   140007e56:	mov    r13,rax
   140007e59:	mov    rcx,0xffffffffffffffff
   140007e60:	mov    eax,0x10
   140007e65:	mul    rbx
   140007e68:	lea    rdx,[rip+0x4e99]        # 0x14000cd08
   140007e6f:	cmovo  rax,rcx
   140007e73:	mov    rcx,rax
   140007e76:	call   0x140009e44
   140007e7b:	xor    ebx,ebx
   140007e7d:	mov    QWORD PTR [rsp+0xa8],rax
   140007e85:	test   r15,r15
   140007e88:	je     0x140007fed
   140007e8e:	test   r13,r13
   140007e91:	je     0x140007fed
   140007e97:	test   rax,rax
   140007e9a:	je     0x140007fed
   140007ea0:	lea    rax,[rip+0x6ba9]        # 0x14000ea50
   140007ea7:	mov    edi,ebx
   140007ea9:	mov    r15,r14
   140007eac:	cmp    r14,rax
   140007eaf:	jae    0x140007f44
   140007eb5:	test   esi,esi
   140007eb7:	js     0x140007fb6
   140007ebd:	mov    rax,QWORD PTR [r15]
   140007ec0:	test   rax,rax
   140007ec3:	je     0x140007f2c
   140007ec5:	mov    DWORD PTR [rsp+0x98],0x2
   140007ed0:	mov    QWORD PTR [rsp+0x30],rbx
   140007ed5:	mov    rbx,QWORD PTR [rax]
   140007ed8:	mov    rcx,rbx
   140007edb:	call   QWORD PTR [rip+0x460f]        # 0x14000c4f0
   140007ee1:	mov    rdx,QWORD PTR [r15]
   140007ee4:	lea    r9,[rsp+0x30]
   140007ee9:	lea    r8,[rip+0x4c90]        # 0x14000cb80
   140007ef0:	lea    rcx,[rsp+0x98]
   140007ef8:	call   rbx
   140007efa:	xor    ebx,ebx
   140007efc:	mov    esi,eax
   140007efe:	test   eax,eax
   140007f00:	js     0x140007f2c
   140007f02:	mov    rcx,QWORD PTR [rsp+0x30]
   140007f07:	mov    rax,QWORD PTR [rsp+0xa8]
   140007f0f:	mov    r8d,edi
   140007f12:	mov    QWORD PTR [r13+r8*8+0x0],rcx
   140007f17:	add    r8,r8
   140007f1a:	mov    rcx,QWORD PTR [r15]
   140007f1d:	inc    edi
   140007f1f:	mov    rdx,QWORD PTR [rcx+0x8]
   140007f23:	movups xmm0,XMMWORD PTR [rdx]
   140007f26:	movdqu XMMWORD PTR [rax+r8*8],xmm0
   140007f2c:	add    r15,0x8
   140007f30:	lea    rax,[rip+0x6b19]        # 0x14000ea50
   140007f37:	cmp    r15,rax
   140007f3a:	jb     0x140007eb5
   140007f40:	test   esi,esi
   140007f42:	js     0x140007fb6
   140007f44:	mov    rsi,QWORD PTR [rsp+0x90]
   140007f4c:	mov    rax,QWORD PTR [rsi]
   140007f4f:	mov    rbx,QWORD PTR [rax+0x50]
   140007f53:	mov    rcx,rbx
   140007f56:	call   QWORD PTR [rip+0x4594]        # 0x14000c4f0
   140007f5c:	mov    r15,QWORD PTR [rsp+0xa0]
   140007f64:	mov    r9,r13
   140007f67:	mov    r8,QWORD PTR [rsp+0xa8]
   140007f6f:	xor    edx,edx
   140007f71:	mov    rcx,rsi
   140007f74:	mov    DWORD PTR [rsp+0x28],r12d
   140007f79:	mov    QWORD PTR [rsp+0x20],r15
   140007f7e:	call   rbx
   140007f80:	xor    ebx,ebx
   140007f82:	mov    esi,eax
   140007f84:	test   eax,eax
   140007f86:	js     0x140007fbe
   140007f88:	mov    edi,ebx
   140007f8a:	mov    edx,ebx
   140007f8c:	test   rbp,rbp
   140007f8f:	je     0x140007fbe
   140007f91:	mov    rcx,QWORD PTR [r14]
   140007f94:	test   rcx,rcx
   140007f97:	je     0x140007fa8
   140007f99:	mov    rcx,QWORD PTR [rcx+0x18]
   140007f9d:	mov    eax,edi
   140007f9f:	inc    edi
   140007fa1:	mov    eax,DWORD PTR [r15+rax*4]
   140007fa5:	mov    DWORD PTR [rcx+0x8],eax
   140007fa8:	add    r14,0x8
   140007fac:	inc    rdx
   140007faf:	cmp    rdx,rbp
   140007fb2:	jb     0x140007f91
   140007fb4:	jmp    0x140007fbe
   140007fb6:	mov    r15,QWORD PTR [rsp+0xa0]
   140007fbe:	test   edi,edi
   140007fc0:	je     0x140007fef
   140007fc2:	mov    r14,r13
   140007fc5:	mov    ebp,edi
   140007fc7:	mov    rdi,QWORD PTR [r14]
   140007fca:	mov    rax,QWORD PTR [rdi]
   140007fcd:	mov    rbx,QWORD PTR [rax+0x10]
   140007fd1:	mov    rcx,rbx
   140007fd4:	call   QWORD PTR [rip+0x4516]        # 0x14000c4f0
   140007fda:	mov    rcx,rdi
   140007fdd:	call   rbx
   140007fdf:	lea    r14,[r14+0x8]
   140007fe3:	sub    rbp,0x1
   140007fe7:	jne    0x140007fc7
   140007fe9:	xor    ebx,ebx
   140007feb:	jmp    0x140007fef
   140007fed:	mov    esi,edi
   140007fef:	mov    rcx,r15
   140007ff2:	call   0x140009a28
   140007ff7:	mov    rcx,QWORD PTR [rsp+0xa8]
   140007fff:	call   0x140009a28
   140008004:	mov    rcx,r13
   140008007:	call   0x140009a28
   14000800c:	test   esi,esi
   14000800e:	js     0x140008157
   140008014:	mov    r13,QWORD PTR [rsp+0x90]
   14000801c:	or     r9,0xffffffffffffffff
   140008020:	lea    r14,[rip+0x6a31]        # 0x14000ea58
   140008027:	mov    eax,ebx
   140008029:	lea    rcx,[rip+0x6a28]        # 0x14000ea58
   140008030:	mov    r8,rbx
   140008033:	lea    rdi,[rip+0x6a25]        # 0x14000ea5f
   14000803a:	sub    rdi,r14
   14000803d:	shr    rdi,0x3
   140008041:	cmp    r14,rcx
   140008044:	mov    rcx,r14
   140008047:	cmova  rdi,rbx
   14000804b:	test   rdi,rdi
   14000804e:	je     0x140008157
   140008054:	cmp    QWORD PTR [rcx],rbx
   140008057:	je     0x14000805b
   140008059:	inc    eax
   14000805b:	add    rcx,0x8
   14000805f:	inc    r8
   140008062:	cmp    r8,rdi
   140008065:	jb     0x140008054
   140008067:	test   eax,eax
   140008069:	je     0x140008157
   14000806f:	mov    ecx,eax
   140008071:	mov    eax,0x8
   140008076:	mul    rcx
   140008079:	lea    rdx,[rip+0x4c88]        # 0x14000cd08
   140008080:	cmovo  rax,r9
   140008084:	mov    rcx,rax
   140008087:	call   0x140009e44
   14000808c:	test   rax,rax
   14000808f:	mov    r12,rax
   140008092:	mov    eax,0x8007000e
   140008097:	cmove  esi,eax
   14000809a:	test   esi,esi
   14000809c:	js     0x14000814f
   1400080a2:	mov    QWORD PTR [rsp+0x98],rbx
   1400080aa:	mov    esi,ebx
   1400080ac:	mov    rbp,rbx
   1400080af:	mov    r15,r14
   1400080b2:	test   rdi,rdi
   1400080b5:	je     0x1400080e4
   1400080b7:	mov    rbx,QWORD PTR [r15]
   1400080ba:	test   rbx,rbx
   1400080bd:	je     0x1400080d6
   1400080bf:	mov    rbx,QWORD PTR [rbx+0x8]
   1400080c3:	mov    rcx,rbx
   1400080c6:	call   QWORD PTR [rip+0x4424]        # 0x14000c4f0
   1400080cc:	call   rbx
   1400080ce:	mov    ecx,esi
   1400080d0:	inc    esi
   1400080d2:	mov    QWORD PTR [r12+rcx*8],rax
   1400080d6:	add    r15,0x8
   1400080da:	inc    rbp
   1400080dd:	cmp    rbp,rdi
   1400080e0:	jb     0x1400080b7
   1400080e2:	xor    ebx,ebx
   1400080e4:	mov    rax,QWORD PTR [r13+0x0]
   1400080e8:	lea    rcx,[rip+0xffffffffffffebf1]        # 0x140006ce0
   1400080ef:	xor    edx,edx
   1400080f1:	cmp    QWORD PTR [rax+0x40],rcx
   1400080f5:	jne    0x140008112
   1400080f7:	lea    r9,[rsp+0x98]
   1400080ff:	mov    DWORD PTR [rsp+0x20],esi
   140008103:	mov    r8,r12
   140008106:	mov    rcx,r13
   140008109:	call   0x140006ce0
   14000810e:	mov    esi,eax
   140008110:	jmp    0x14000811f
   140008112:	mov    esi,0x80004001
   140008117:	mov    ecx,esi
   140008119:	call   QWORD PTR [rip+0x4221]        # 0x14000c340
   14000811f:	test   esi,esi
   140008121:	js     0x14000814f
   140008123:	mov    rdx,rbx
   140008126:	test   rdi,rdi
   140008129:	je     0x14000814f
   14000812b:	mov    rcx,QWORD PTR [r14]
   14000812e:	test   rcx,rcx
   140008131:	je     0x140008143
   140008133:	mov    rcx,QWORD PTR [rcx+0x18]
   140008137:	mov    rax,QWORD PTR [rsp+0x98]
   14000813f:	mov    QWORD PTR [rcx+0x8],rax
   140008143:	add    r14,0x8
   140008147:	inc    rdx
   14000814a:	cmp    rdx,rdi
   14000814d:	jb     0x14000812b
   14000814f:	mov    rcx,r12
   140008152:	call   0x140009a28
   140008157:	mov    eax,esi
   140008159:	add    rsp,0x48
   14000815d:	pop    r15
   14000815f:	pop    r14
   140008161:	pop    r13
   140008163:	pop    r12
   140008165:	pop    rdi
   140008166:	pop    rsi
   140008167:	pop    rbp
   140008168:	pop    rbx
   140008169:	ret    
   14000816a:	int3   
   14000816b:	int3   
   14000816c:	int3   
   14000816d:	int3   
   14000816e:	int3   
   14000816f:	int3   
   140008170:	mov    QWORD PTR [rsp+0x8],rbx
   140008175:	mov    QWORD PTR [rsp+0x10],rsi
   14000817a:	push   rdi
   14000817b:	sub    rsp,0x20
   14000817f:	xor    edi,edi
   140008181:	lea    rdx,[rip+0x4b80]        # 0x14000cd08
   140008188:	mov    rsi,rcx
   14000818b:	mov    QWORD PTR [rcx],rdi
   14000818e:	lea    ecx,[rdi+0x50]
   140008191:	call   0x14000a138
   140008196:	mov    rbx,rax
   140008199:	test   rax,rax
   14000819c:	je     0x14000823c
   1400081a2:	mov    DWORD PTR [rax+0xc],0x1
   1400081a9:	lea    rax,[rip+0x49a8]        # 0x14000cb58
   1400081b0:	mov    QWORD PTR [rbx],rax
   1400081b3:	mov    rax,QWORD PTR [rip+0x857e]        # 0x140010738
   1400081ba:	test   rax,rax
   1400081bd:	je     0x1400081de
   1400081bf:	mov    rax,QWORD PTR [rax]
   1400081c2:	lea    rcx,[rip+0xffffffffffffec77]        # 0x140006e40
   1400081c9:	cmp    QWORD PTR [rax+0x8],rcx
   1400081cd:	jne    0x1400081d7
   1400081cf:	call   QWORD PTR [rip+0x4093]        # 0x14000c268
   1400081d5:	jmp    0x1400081de
   1400081d7:	lock inc DWORD PTR [rip+0x8562]        # 0x140010740
   1400081de:	lea    rax,[rip+0x48cb]        # 0x14000cab0
   1400081e5:	mov    QWORD PTR [rbx+0x10],rdi
   1400081e9:	mov    QWORD PTR [rbx+0x18],rdi
   1400081ed:	mov    QWORD PTR [rbx+0x20],rdi
   1400081f1:	mov    QWORD PTR [rbx+0x28],rdi
   1400081f5:	mov    QWORD PTR [rbx+0x30],rdi
   1400081f9:	mov    QWORD PTR [rbx+0x38],rdi
   1400081fd:	mov    QWORD PTR [rbx+0x40],rdi
   140008201:	mov    QWORD PTR [rbx+0x48],rdi
   140008205:	mov    rdi,QWORD PTR [rax]
   140008208:	mov    rcx,rdi
   14000820b:	mov    QWORD PTR [rbx],rax
   14000820e:	call   QWORD PTR [rip+0x42dc]        # 0x14000c4f0
   140008214:	mov    r8,rsi
   140008217:	lea    rdx,[rip+0x483a]        # 0x14000ca58
   14000821e:	mov    rcx,rbx
   140008221:	call   rdi
   140008223:	mov    rcx,QWORD PTR [rbx]
   140008226:	mov    esi,eax
   140008228:	mov    rdi,QWORD PTR [rcx+0x10]
   14000822c:	mov    rcx,rdi
   14000822f:	call   QWORD PTR [rip+0x42bb]        # 0x14000c4f0
   140008235:	mov    rcx,rbx
   140008238:	call   rdi
   14000823a:	jmp    0x140008241
   14000823c:	mov    esi,0x8007000e
   140008241:	mov    rbx,QWORD PTR [rsp+0x30]
   140008246:	mov    eax,esi
   140008248:	mov    rsi,QWORD PTR [rsp+0x38]
   14000824d:	add    rsp,0x20
   140008251:	pop    rdi
   140008252:	ret    
   140008253:	int3   
   140008254:	int3   
   140008255:	int3   
   140008256:	int3   
   140008257:	int3   
   140008258:	int3   
   140008259:	int3   
   14000825a:	int3   
   14000825b:	int3   
   14000825c:	mov    QWORD PTR [rsp+0x8],rbx
   140008261:	mov    QWORD PTR [rsp+0x10],rsi
   140008266:	push   rdi
   140008267:	sub    rsp,0x20
   14000826b:	xor    edi,edi
   14000826d:	lea    rdx,[rip+0x4a94]        # 0x14000cd08
   140008274:	mov    rsi,rcx
   140008277:	mov    QWORD PTR [rcx],rdi
   14000827a:	lea    ecx,[rdi+0x50]
   14000827d:	call   0x14000a138
   140008282:	mov    rbx,rax
   140008285:	test   rax,rax
   140008288:	je     0x140008328
   14000828e:	mov    DWORD PTR [rax+0xc],0x1
   140008295:	lea    rax,[rip+0x48bc]        # 0x14000cb58
   14000829c:	mov    QWORD PTR [rbx],rax
   14000829f:	mov    rax,QWORD PTR [rip+0x8492]        # 0x140010738
   1400082a6:	test   rax,rax
   1400082a9:	je     0x1400082ca
   1400082ab:	mov    rax,QWORD PTR [rax]
   1400082ae:	lea    rcx,[rip+0xffffffffffffeb8b]        # 0x140006e40
   1400082b5:	cmp    QWORD PTR [rax+0x8],rcx
   1400082b9:	jne    0x1400082c3
   1400082bb:	call   QWORD PTR [rip+0x3fa7]        # 0x14000c268
   1400082c1:	jmp    0x1400082ca
   1400082c3:	lock inc DWORD PTR [rip+0x8476]        # 0x140010740
   1400082ca:	lea    rax,[rip+0x4b4f]        # 0x14000ce20
   1400082d1:	mov    QWORD PTR [rbx+0x10],rdi
   1400082d5:	mov    QWORD PTR [rbx+0x18],rdi
   1400082d9:	mov    QWORD PTR [rbx+0x20],rdi
   1400082dd:	mov    QWORD PTR [rbx+0x28],rdi
   1400082e1:	mov    QWORD PTR [rbx+0x30],rdi
   1400082e5:	mov    QWORD PTR [rbx+0x38],rdi
   1400082e9:	mov    QWORD PTR [rbx+0x40],rdi
   1400082ed:	mov    QWORD PTR [rbx+0x48],rdi
   1400082f1:	mov    rdi,QWORD PTR [rax]
   1400082f4:	mov    rcx,rdi
   1400082f7:	mov    QWORD PTR [rbx],rax
   1400082fa:	call   QWORD PTR [rip+0x41f0]        # 0x14000c4f0
   140008300:	mov    r8,rsi
   140008303:	lea    rdx,[rip+0x474e]        # 0x14000ca58
   14000830a:	mov    rcx,rbx
   14000830d:	call   rdi
   14000830f:	mov    rcx,QWORD PTR [rbx]
   140008312:	mov    esi,eax
   140008314:	mov    rdi,QWORD PTR [rcx+0x10]
   140008318:	mov    rcx,rdi
   14000831b:	call   QWORD PTR [rip+0x41cf]        # 0x14000c4f0
   140008321:	mov    rcx,rbx
   140008324:	call   rdi
   140008326:	jmp    0x14000832d
   140008328:	mov    esi,0x8007000e
   14000832d:	mov    rbx,QWORD PTR [rsp+0x30]
   140008332:	mov    eax,esi
   140008334:	mov    rsi,QWORD PTR [rsp+0x38]
   140008339:	add    rsp,0x20
   14000833d:	pop    rdi
   14000833e:	ret    
   14000833f:	int3   
   140008340:	int3   
   140008341:	int3   
   140008342:	int3   
   140008343:	int3   
   140008344:	int3   
   140008345:	int3   
   140008346:	int3   
   140008347:	int3   
   140008348:	mov    QWORD PTR [rsp+0x8],rbx
   14000834d:	mov    QWORD PTR [rsp+0x10],rsi
   140008352:	push   rdi
   140008353:	sub    rsp,0x20
   140008357:	xor    edi,edi
   140008359:	lea    rdx,[rip+0x49a8]        # 0x14000cd08
   140008360:	mov    rsi,rcx
   140008363:	mov    QWORD PTR [rcx],rdi
   140008366:	lea    ecx,[rdi+0x50]
   140008369:	call   0x14000a138
   14000836e:	mov    rbx,rax
   140008371:	test   rax,rax
   140008374:	je     0x140008414
   14000837a:	mov    DWORD PTR [rax+0xc],0x1
   140008381:	lea    rax,[rip+0x47d0]        # 0x14000cb58
   140008388:	mov    QWORD PTR [rbx],rax
   14000838b:	mov    rax,QWORD PTR [rip+0x83a6]        # 0x140010738
   140008392:	test   rax,rax
   140008395:	je     0x1400083b6
   140008397:	mov    rax,QWORD PTR [rax]
   14000839a:	lea    rcx,[rip+0xffffffffffffea9f]        # 0x140006e40
   1400083a1:	cmp    QWORD PTR [rax+0x8],rcx
   1400083a5:	jne    0x1400083af
   1400083a7:	call   QWORD PTR [rip+0x3ebb]        # 0x14000c268
   1400083ad:	jmp    0x1400083b6
   1400083af:	lock inc DWORD PTR [rip+0x838a]        # 0x140010740
   1400083b6:	lea    rax,[rip+0x4773]        # 0x14000cb30
   1400083bd:	mov    QWORD PTR [rbx+0x10],rdi
   1400083c1:	mov    QWORD PTR [rbx+0x18],rdi
   1400083c5:	mov    QWORD PTR [rbx+0x20],rdi
   1400083c9:	mov    QWORD PTR [rbx+0x28],rdi
   1400083cd:	mov    QWORD PTR [rbx+0x30],rdi
   1400083d1:	mov    QWORD PTR [rbx+0x38],rdi
   1400083d5:	mov    QWORD PTR [rbx+0x40],rdi
   1400083d9:	mov    QWORD PTR [rbx+0x48],rdi
   1400083dd:	mov    rdi,QWORD PTR [rax]
   1400083e0:	mov    rcx,rdi
   1400083e3:	mov    QWORD PTR [rbx],rax
   1400083e6:	call   QWORD PTR [rip+0x4104]        # 0x14000c4f0
   1400083ec:	mov    r8,rsi
   1400083ef:	lea    rdx,[rip+0x4662]        # 0x14000ca58
   1400083f6:	mov    rcx,rbx
   1400083f9:	call   rdi
   1400083fb:	mov    rcx,QWORD PTR [rbx]
   1400083fe:	mov    esi,eax
   140008400:	mov    rdi,QWORD PTR [rcx+0x10]
   140008404:	mov    rcx,rdi
   140008407:	call   QWORD PTR [rip+0x40e3]        # 0x14000c4f0
   14000840d:	mov    rcx,rbx
   140008410:	call   rdi
   140008412:	jmp    0x140008419
   140008414:	mov    esi,0x8007000e
   140008419:	mov    rbx,QWORD PTR [rsp+0x30]
   14000841e:	mov    eax,esi
   140008420:	mov    rsi,QWORD PTR [rsp+0x38]
   140008425:	add    rsp,0x20
   140008429:	pop    rdi
   14000842a:	ret    
   14000842b:	int3   
   14000842c:	int3   
   14000842d:	int3   
   14000842e:	int3   
   14000842f:	int3   
   140008430:	int3   
   140008431:	int3   
   140008432:	int3   
   140008433:	int3   
   140008434:	int3   
   140008435:	int3   
   140008436:	int3   
   140008437:	int3   
   140008438:	int3   
   140008439:	int3   
   14000843a:	int3   
   14000843b:	int3   
   14000843c:	int3   
   14000843d:	int3   
   14000843e:	int3   
   14000843f:	int3   
   140008440:	rex push rbx
   140008442:	sub    rsp,0x20
   140008446:	mov    DWORD PTR [rcx+0xc],0xc0000001
   14000844d:	mov    rbx,rcx
   140008450:	test   dl,0x1
   140008453:	je     0x14000845a
   140008455:	call   0x140009a28
   14000845a:	mov    rax,rbx
   14000845d:	add    rsp,0x20
   140008461:	pop    rbx
   140008462:	ret    
   140008463:	int3   
   140008464:	int3   
   140008465:	int3   
   140008466:	int3   
   140008467:	int3   
   140008468:	int3   
   140008469:	int3   
   14000846a:	int3   
   14000846b:	int3   
   14000846c:	int3   
   14000846d:	int3   
   14000846e:	int3   
   14000846f:	int3   
   140008470:	mov    QWORD PTR [rsp+0x8],rbx
   140008475:	push   rdi
   140008476:	sub    rsp,0x20
   14000847a:	mov    rdi,rcx
   14000847d:	mov    ebx,edx
   14000847f:	add    rcx,0x10
   140008483:	call   0x140005b04
   140008488:	mov    DWORD PTR [rdi+0xc],0xc0000001
   14000848f:	test   bl,0x1
   140008492:	je     0x14000849c
   140008494:	mov    rcx,rdi
   140008497:	call   0x140009a28
   14000849c:	mov    rax,rdi
   14000849f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400084a4:	add    rsp,0x20
   1400084a8:	pop    rdi
   1400084a9:	ret    
   1400084aa:	int3   
   1400084ab:	int3   
   1400084ac:	int3   
   1400084ad:	int3   
   1400084ae:	int3   
   1400084af:	int3   
   1400084b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400084b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400084ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400084bf:	push   rdi
   1400084c0:	push   r12
   1400084c2:	push   r13
   1400084c4:	push   r14
   1400084c6:	push   r15
   1400084c8:	sub    rsp,0x30
   1400084cc:	mov    r13,QWORD PTR [rcx+0x8]
   1400084d0:	xor    edi,edi
   1400084d2:	mov    r14,r9
   1400084d5:	mov    r12,r8
   1400084d8:	mov    ebp,edx
   1400084da:	mov    rsi,QWORD PTR [r13+0x20]
   1400084de:	movzx  eax,WORD PTR [rsi+0x10]
   1400084e2:	shr    eax,1
   1400084e4:	lea    r15d,[rax+0x1]
   1400084e8:	test   r15d,r15d
   1400084eb:	je     0x1400085d5
   1400084f1:	movzx  ebx,WORD PTR [rsi]
   1400084f4:	lea    edx,[rdi+0x5f]
   1400084f7:	mov    rcx,QWORD PTR [rsi+0x8]
   1400084fb:	shr    ebx,1
   1400084fd:	call   QWORD PTR [rip+0x3ed5]        # 0x14000c3d8
   140008503:	mov    rdx,QWORD PTR [rsi+0x8]
   140008507:	lea    r8d,[rbx-0xd]
   14000850b:	add    rax,0x2
   14000850f:	mov    QWORD PTR [rsp+0x20],rdx
   140008514:	sub    rax,rdx
   140008517:	mov    QWORD PTR [rsp+0x28],r8
   14000851c:	sar    rax,1
   14000851f:	lea    ecx,[rax+0xd]
   140008522:	lea    esi,[rcx+0x1]
   140008525:	mov    DWORD PTR [rsp+0x60],ecx
   140008529:	cmp    ebp,esi
   14000852b:	jb     0x1400085c6
   140008531:	mov    eax,eax
   140008533:	mov    rcx,r14
   140008536:	lea    rbx,[rax+rax*1]
   14000853a:	mov    r8,rbx
   14000853d:	call   0x14000a616
   140008542:	mov    rax,QWORD PTR [rsp+0x20]
   140008547:	mov    rcx,QWORD PTR [rsp+0x28]
   14000854c:	movups xmm0,XMMWORD PTR [rax+rcx*2]
   140008550:	movups XMMWORD PTR [rbx+r14*1],xmm0
   140008555:	movsd  xmm1,QWORD PTR [rax+rcx*2+0x10]
   14000855b:	movsd  QWORD PTR [rbx+r14*1+0x10],xmm1
   140008562:	movzx  eax,WORD PTR [rax+rcx*2+0x18]
   140008567:	mov    WORD PTR [rbx+r14*1+0x18],ax
   14000856d:	mov    eax,DWORD PTR [rsp+0x60]
   140008571:	mov    WORD PTR [r14+rax*2],di
   140008576:	lea    eax,[rsi+r15*1]
   14000857a:	cmp    ebp,eax
   14000857c:	jb     0x1400085c6
   14000857e:	dec    esi
   140008580:	lea    eax,[rdi+0x21]
   140008583:	sub    ebp,esi
   140008585:	dec    ebp
   140008587:	lea    r14,[r14+rsi*2]
   14000858b:	mov    WORD PTR [r14],ax
   14000858f:	mov    rdx,QWORD PTR [r13+0x20]
   140008593:	movzx  ecx,WORD PTR [rdx+0x10]
   140008597:	shr    ecx,1
   140008599:	lea    eax,[rcx+0x1]
   14000859c:	cmp    ebp,eax
   14000859e:	jb     0x1400085ba
   1400085a0:	mov    rdx,QWORD PTR [rdx+0x18]
   1400085a4:	lea    rbx,[rcx+rcx*1]
   1400085a8:	mov    r8,rbx
   1400085ab:	lea    rcx,[r14+0x2]
   1400085af:	call   0x14000a616
   1400085b4:	mov    WORD PTR [rbx+r14*1+0x2],di
   1400085ba:	lea    eax,[r15+0x1]
   1400085be:	add    eax,esi
   1400085c0:	mov    DWORD PTR [r12],eax
   1400085c4:	jmp    0x1400085ea
   1400085c6:	lea    eax,[rsi+r15*1]
   1400085ca:	mov    edi,0x7a
   1400085cf:	mov    DWORD PTR [r12],eax
   1400085d3:	jmp    0x1400085ea
   1400085d5:	mov    rdx,QWORD PTR [rsi+0x18]
   1400085d9:	lea    rbx,[rax+rax*1]
   1400085dd:	mov    r8,rbx
   1400085e0:	xor    ecx,ecx
   1400085e2:	call   0x14000a616
   1400085e7:	mov    WORD PTR [rbx],di
   1400085ea:	mov    rbx,QWORD PTR [rsp+0x68]
   1400085ef:	mov    eax,edi
   1400085f1:	mov    rbp,QWORD PTR [rsp+0x70]
   1400085f6:	mov    rsi,QWORD PTR [rsp+0x78]
   1400085fb:	add    rsp,0x30
   1400085ff:	pop    r15
   140008601:	pop    r14
   140008603:	pop    r13
   140008605:	pop    r12
   140008607:	pop    rdi
   140008608:	ret    
   140008609:	int3   
   14000860a:	int3   
   14000860b:	int3   
   14000860c:	int3   
   14000860d:	int3   
   14000860e:	int3   
   14000860f:	int3   
   140008610:	mov    r11,rsp
   140008613:	mov    QWORD PTR [r11+0x8],rbx
   140008617:	mov    QWORD PTR [r11+0x10],rbp
   14000861b:	mov    QWORD PTR [r11+0x20],r9
   14000861f:	push   rsi
   140008620:	push   rdi
   140008621:	push   r12
   140008623:	push   r14
   140008625:	push   r15
   140008627:	sub    rsp,0x40
   14000862b:	xor    r9d,r9d
   14000862e:	lea    rax,[r11+0x20]
   140008632:	mov    r15,r8
   140008635:	mov    QWORD PTR [r11-0x48],rax
   140008639:	mov    r12,rdx
   14000863c:	xor    r8d,r8d
   14000863f:	mov    rbp,rcx
   140008642:	lea    r14d,[r9+0x27]
   140008646:	mov    edx,r14d
   140008649:	call   QWORD PTR [rip+0x3e79]        # 0x14000c4c8
   14000864f:	cmp    eax,0xc0000023
   140008654:	je     0x140008671
   140008656:	test   eax,eax
   140008658:	jne    0x140008664
   14000865a:	mov    eax,0x54f
   14000865f:	jmp    0x140008755
   140008664:	mov    ecx,eax
   140008666:	call   QWORD PTR [rip+0x3e6c]        # 0x14000c4d8
   14000866c:	jmp    0x140008755
   140008671:	mov    ecx,DWORD PTR [rsp+0x88]
   140008678:	mov    eax,0x10
   14000867d:	mul    rcx
   140008680:	xor    edi,edi
   140008682:	test   rdx,rdx
   140008685:	je     0x14000868b
   140008687:	mov    ebx,edi
   140008689:	jmp    0x1400086ae
   14000868b:	mov    rcx,QWORD PTR gs:0x60
   140008694:	mov    r8,rax
   140008697:	xor    edx,edx
   140008699:	mov    rcx,QWORD PTR [rcx+0x30]
   14000869d:	call   QWORD PTR [rip+0x3e3d]        # 0x14000c4e0
   1400086a3:	mov    rsi,rax
   1400086a6:	mov    rbx,rax
   1400086a9:	test   rax,rax
   1400086ac:	jne    0x1400086b8
   1400086ae:	mov    edi,0x8
   1400086b3:	jmp    0x14000874b
   1400086b8:	mov    r8d,DWORD PTR [rsp+0x88]
   1400086c0:	xor    edx,edx
   1400086c2:	mov    rcx,rax
   1400086c5:	call   0x14000a622
   1400086ca:	mov    r9d,DWORD PTR [rsp+0x88]
   1400086d2:	lea    rax,[rsp+0x88]
   1400086da:	mov    r8,rsi
   1400086dd:	mov    QWORD PTR [rsp+0x20],rax
   1400086e2:	mov    edx,r14d
   1400086e5:	mov    rcx,rbp
   1400086e8:	call   QWORD PTR [rip+0x3dda]        # 0x14000c4c8
   1400086ee:	test   eax,eax
   1400086f0:	jns    0x1400086fe
   1400086f2:	mov    ecx,eax
   1400086f4:	call   QWORD PTR [rip+0x3dde]        # 0x14000c4d8
   1400086fa:	mov    edi,eax
   1400086fc:	jmp    0x14000874b
   1400086fe:	cmp    DWORD PTR [rsi+0x4],edi
   140008701:	jbe    0x140008746
   140008703:	lea    rdx,[rip+0x473e]        # 0x14000ce48
   14000870a:	lea    rcx,[rsp+0x30]
   14000870f:	call   QWORD PTR [rip+0x3da3]        # 0x14000c4b8
   140008715:	mov    ebp,edi
   140008717:	cmp    DWORD PTR [rsi+0x4],edi
   14000871a:	jbe    0x140008746
   14000871c:	mov    eax,ebp
   14000871e:	mov    r8b,0x1
   140008721:	lea    rcx,[rax+rax*4]
   140008725:	mov    rax,QWORD PTR [rsi+0x8]
   140008729:	lea    r14,[rax+rcx*8]
   14000872d:	mov    rdx,r14
   140008730:	lea    rcx,[rsp+0x30]
   140008735:	call   QWORD PTR [rip+0x3d95]        # 0x14000c4d0
   14000873b:	test   eax,eax
   14000873d:	je     0x14000876c
   14000873f:	inc    ebp
   140008741:	cmp    ebp,DWORD PTR [rsi+0x4]
   140008744:	jb     0x14000871c
   140008746:	mov    edi,0x490
   14000874b:	mov    rcx,rbx
   14000874e:	call   0x140008a6c
   140008753:	mov    eax,edi
   140008755:	mov    rbx,QWORD PTR [rsp+0x70]
   14000875a:	mov    rbp,QWORD PTR [rsp+0x78]
   14000875f:	add    rsp,0x40
   140008763:	pop    r15
   140008765:	pop    r14
   140008767:	pop    r12
   140008769:	pop    rdi
   14000876a:	pop    rsi
   14000876b:	ret    
   14000876c:	mov    QWORD PTR [r15],r14
   14000876f:	mov    rbx,rdi
   140008772:	mov    QWORD PTR [r12],rsi
   140008776:	jmp    0x14000874b
   140008778:	int3   
   140008779:	int3   
   14000877a:	int3   
   14000877b:	int3   
   14000877c:	int3   
   14000877d:	int3   
   14000877e:	int3   
   14000877f:	int3   
   140008780:	mov    rax,rsp
   140008783:	mov    QWORD PTR [rax+0x8],rbx
   140008787:	mov    QWORD PTR [rax+0x10],rbp
   14000878b:	mov    QWORD PTR [rax+0x20],rsi
   14000878f:	push   rdi
   140008790:	sub    rsp,0x20
   140008794:	and    QWORD PTR [r8],0x0
   140008798:	lea    rdx,[rax+0x18]
   14000879c:	and    QWORD PTR [rax+0x18],0x0
   1400087a1:	mov    ebp,ecx
   1400087a3:	lea    rcx,[rip+0x46be]        # 0x14000ce68
   1400087aa:	mov    rsi,r8
   1400087ad:	call   QWORD PTR [rip+0x3a65]        # 0x14000c218
   1400087b3:	mov    edi,eax
   1400087b5:	test   eax,eax
   1400087b7:	js     0x1400087dc
   1400087b9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400087be:	mov    rax,QWORD PTR [rbx]
   1400087c1:	mov    rdi,QWORD PTR [rax+0x18]
   1400087c5:	mov    rcx,rdi
   1400087c8:	call   QWORD PTR [rip+0x3d22]        # 0x14000c4f0
   1400087ce:	mov    r8,rsi
   1400087d1:	mov    edx,ebp
   1400087d3:	mov    rcx,rbx
   1400087d6:	call   rdi
   1400087d8:	mov    edi,eax
   1400087da:	jmp    0x1400087ee
   1400087dc:	cmp    eax,0x80010117
   1400087e1:	jne    0x1400087ee
   1400087e3:	call   QWORD PTR [rip+0x3adf]        # 0x14000c2c8
   1400087e9:	mov    QWORD PTR [rsi],rax
   1400087ec:	xor    edi,edi
   1400087ee:	mov    rsi,QWORD PTR [rsp+0x40]
   1400087f3:	test   rsi,rsi
   1400087f6:	je     0x140008813
   1400087f8:	and    QWORD PTR [rsp+0x40],0x0
   1400087fe:	mov    rax,QWORD PTR [rsi]
   140008801:	mov    rbx,QWORD PTR [rax+0x10]
   140008805:	mov    rcx,rbx
   140008808:	call   QWORD PTR [rip+0x3ce2]        # 0x14000c4f0
   14000880e:	mov    rcx,rsi
   140008811:	call   rbx
   140008813:	mov    rbx,QWORD PTR [rsp+0x30]
   140008818:	mov    eax,edi
   14000881a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000881f:	mov    rsi,QWORD PTR [rsp+0x48]
   140008824:	add    rsp,0x20
   140008828:	pop    rdi
   140008829:	ret    
   14000882a:	int3   
   14000882b:	int3   
   14000882c:	int3   
   14000882d:	int3   
   14000882e:	int3   
   14000882f:	int3   
   140008830:	mov    QWORD PTR [rsp+0x20],rbx
   140008835:	push   rbp
   140008836:	push   rsi
   140008837:	push   rdi
   140008838:	mov    rbp,rsp
   14000883b:	sub    rsp,0x40
   14000883f:	and    QWORD PTR [rdx],0x0
   140008843:	xorps  xmm0,xmm0
   140008846:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   14000884b:	mov    rsi,rdx
   14000884e:	mov    rbx,rcx
   140008851:	call   QWORD PTR [rip+0x3a71]        # 0x14000c2c8
   140008857:	cmp    rbx,rax
   14000885a:	je     0x14000887c
   14000885c:	lea    r8,[rbp+0x28]
   140008860:	mov    edx,0x8
   140008865:	mov    rcx,rbx
   140008868:	call   QWORD PTR [rip+0x37c2]        # 0x14000c030
   14000886e:	test   eax,eax
   140008870:	jne    0x140008884
   140008872:	call   QWORD PTR [rip+0x3840]        # 0x14000c0b8
   140008878:	mov    ebx,eax
   14000887a:	jmp    0x140008886
   14000887c:	mov    QWORD PTR [rbp+0x28],0xfffffffffffffffc
   140008884:	xor    ebx,ebx
   140008886:	test   ebx,ebx
   140008888:	jne    0x1400088ad
   14000888a:	mov    rcx,QWORD PTR [rbp+0x28]
   14000888e:	lea    r8,[rbp-0x8]
   140008892:	lea    rdx,[rbp-0x10]
   140008896:	call   0x140008610
   14000889b:	mov    rcx,QWORD PTR [rbp+0x28]
   14000889f:	mov    ebx,eax
   1400088a1:	cmp    rcx,0xfffffffffffffffc
   1400088a5:	je     0x1400088ad
   1400088a7:	call   QWORD PTR [rip+0x385b]        # 0x14000c108
   1400088ad:	movzx  edi,bx
   1400088b0:	or     edi,0x80070000
   1400088b6:	test   ebx,ebx
   1400088b8:	cmovle edi,ebx
   1400088bb:	test   edi,edi
   1400088bd:	js     0x14000894a
   1400088c3:	xor    r9d,r9d
   1400088c6:	lea    r8,[rbp+0x20]
   1400088ca:	xor    edx,edx
   1400088cc:	lea    rcx,[rbp-0x10]
   1400088d0:	call   0x1400084b0
   1400088d5:	mov    ecx,0x7a
   1400088da:	sub    ecx,eax
   1400088dc:	neg    ecx
   1400088de:	sbb    edi,edi
   1400088e0:	and    edi,0x8000ffff
   1400088e6:	jl     0x14000894a
   1400088e8:	and    QWORD PTR [rbp+0x30],0x0
   1400088ed:	xor    ecx,ecx
   1400088ef:	call   QWORD PTR [rip+0x394b]        # 0x14000c240
   1400088f5:	mov    r9d,DWORD PTR [rbp+0x20]
   1400088f9:	lea    rax,[rbp+0x30]
   1400088fd:	xor    r8d,r8d
   140008900:	mov    QWORD PTR [rsp+0x28],rax
   140008905:	call   0x140007bac
   14000890a:	mov    rbx,QWORD PTR [rbp+0x30]
   14000890e:	mov    edi,eax
   140008910:	test   eax,eax
   140008912:	js     0x140008941
   140008914:	mov    edx,DWORD PTR [rbp+0x20]
   140008917:	lea    r8,[rbp+0x20]
   14000891b:	mov    r9,rbx
   14000891e:	lea    rcx,[rbp-0x10]
   140008922:	call   0x1400084b0
   140008927:	movzx  edi,ax
   14000892a:	or     edi,0x80070000
   140008930:	test   eax,eax
   140008932:	cmovle edi,eax
   140008935:	test   edi,edi
   140008937:	js     0x140008941
   140008939:	mov    rax,rbx
   14000893c:	xor    ebx,ebx
   14000893e:	mov    QWORD PTR [rsi],rax
   140008941:	mov    rcx,rbx
   140008944:	call   QWORD PTR [rip+0x38f6]        # 0x14000c240
   14000894a:	cmp    QWORD PTR [rbp-0x10],0x0
   14000894f:	je     0x14000896a
   140008951:	mov    rcx,QWORD PTR gs:0x60
   14000895a:	xor    edx,edx
   14000895c:	mov    r8,QWORD PTR [rbp-0x10]
   140008960:	mov    rcx,QWORD PTR [rcx+0x30]
   140008964:	call   QWORD PTR [rip+0x3b46]        # 0x14000c4b0
   14000896a:	mov    eax,edi
   14000896c:	mov    rbx,QWORD PTR [rsp+0x78]
   140008971:	add    rsp,0x40
   140008975:	pop    rdi
   140008976:	pop    rsi
   140008977:	pop    rbp
   140008978:	ret    
   140008979:	int3   
   14000897a:	int3   
   14000897b:	int3   
   14000897c:	int3   
   14000897d:	int3   
   14000897e:	int3   
   14000897f:	int3   
   140008980:	mov    QWORD PTR [rsp+0x20],rbx
   140008985:	push   rdi
   140008986:	sub    rsp,0x30
   14000898a:	and    QWORD PTR [rsp+0x50],0x0
   140008990:	mov    rdi,rdx
   140008993:	mov    rbx,rcx
   140008996:	mov    BYTE PTR [rdx],0x0
   140008999:	call   QWORD PTR [rip+0x3929]        # 0x14000c2c8
   14000899f:	cmp    rbx,rax
   1400089a2:	je     0x1400089c3
   1400089a4:	lea    r8,[rsp+0x50]
   1400089a9:	mov    edx,0x8
   1400089ae:	mov    rcx,rbx
   1400089b1:	call   QWORD PTR [rip+0x3679]        # 0x14000c030
   1400089b7:	test   eax,eax
   1400089b9:	jne    0x1400089cc
   1400089bb:	call   QWORD PTR [rip+0x36f7]        # 0x14000c0b8
   1400089c1:	jmp    0x1400089ce
   1400089c3:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffc
   1400089cc:	xor    eax,eax
   1400089ce:	movzx  ebx,ax
   1400089d1:	or     ebx,0x80070000
   1400089d7:	test   eax,eax
   1400089d9:	cmovle ebx,eax
   1400089dc:	test   ebx,ebx
   1400089de:	js     0x140008a3d
   1400089e0:	mov    rcx,QWORD PTR [rsp+0x50]
   1400089e5:	lea    rax,[rsp+0x48]
   1400089ea:	and    DWORD PTR [rsp+0x40],0x0
   1400089ef:	lea    r8,[rsp+0x40]
   1400089f4:	mov    r9d,0x4
   1400089fa:	mov    QWORD PTR [rsp+0x20],rax
   1400089ff:	lea    edx,[r9+0x19]
   140008a03:	call   QWORD PTR [rip+0x35ff]        # 0x14000c008
   140008a09:	test   eax,eax
   140008a0b:	je     0x140008a11
   140008a0d:	xor    ebx,ebx
   140008a0f:	jmp    0x140008a33
   140008a11:	call   QWORD PTR [rip+0x36a1]        # 0x14000c0b8
   140008a17:	movzx  ebx,ax
   140008a1a:	or     ebx,0x80070000
   140008a20:	test   eax,eax
   140008a22:	cmovle ebx,eax
   140008a25:	mov    eax,0x80004005
   140008a2a:	test   ebx,ebx
   140008a2c:	cmovns ebx,eax
   140008a2f:	test   ebx,ebx
   140008a31:	js     0x140008a3d
   140008a33:	cmp    DWORD PTR [rsp+0x40],0x0
   140008a38:	setne  cl
   140008a3b:	mov    BYTE PTR [rdi],cl
   140008a3d:	mov    rcx,QWORD PTR [rsp+0x50]
   140008a42:	and    QWORD PTR [rsp+0x50],0x0
   140008a48:	lea    rdx,[rcx-0x1]
   140008a4c:	cmp    rdx,0xfffffffffffffffd
   140008a50:	ja     0x140008a58
   140008a52:	call   QWORD PTR [rip+0x36b0]        # 0x14000c108
   140008a58:	mov    eax,ebx
   140008a5a:	mov    rbx,QWORD PTR [rsp+0x58]
   140008a5f:	add    rsp,0x30
   140008a63:	pop    rdi
   140008a64:	ret    
   140008a65:	int3   
   140008a66:	int3   
   140008a67:	int3   
   140008a68:	int3   
   140008a69:	int3   
   140008a6a:	int3   
   140008a6b:	int3   
   140008a6c:	sub    rsp,0x28
   140008a70:	mov    r8,rcx
   140008a73:	test   rcx,rcx
   140008a76:	je     0x140008a8d
   140008a78:	mov    rcx,QWORD PTR gs:0x60
   140008a81:	xor    edx,edx
   140008a83:	mov    rcx,QWORD PTR [rcx+0x30]
   140008a87:	call   QWORD PTR [rip+0x3a23]        # 0x14000c4b0
   140008a8d:	add    rsp,0x28
   140008a91:	ret    
   140008a92:	int3   
   140008a93:	int3   
   140008a94:	int3   
   140008a95:	int3   
   140008a96:	int3   
   140008a97:	int3   
   140008a98:	mov    QWORD PTR [rsp+0x8],rbx
   140008a9d:	mov    QWORD PTR [rsp+0x10],rsi
   140008aa2:	mov    QWORD PTR [rsp+0x18],rdi
   140008aa7:	push   rbp
   140008aa8:	push   r14
   140008aaa:	push   r15
   140008aac:	mov    rbp,rsp
   140008aaf:	sub    rsp,0x40
   140008ab3:	and    QWORD PTR [rbp-0x8],0x0
   140008ab8:	mov    r14,rcx
   140008abb:	xor    ecx,ecx
   140008abd:	mov    rsi,r8
   140008ac0:	mov    r15,rdx
   140008ac3:	call   QWORD PTR [rip+0x3777]        # 0x14000c240
   140008ac9:	lea    rdx,[rbp-0x8]
   140008acd:	mov    rcx,r14
   140008ad0:	call   0x14000916c
   140008ad5:	test   eax,eax
   140008ad7:	jns    0x140008beb
   140008add:	lea    rdx,[rbp+0x38]
   140008ae1:	mov    rcx,r14
   140008ae4:	call   QWORD PTR [rip+0x36f6]        # 0x14000c1e0
   140008aea:	test   eax,eax
   140008aec:	je     0x140008af2
   140008aee:	xor    edi,edi
   140008af0:	jmp    0x140008b18
   140008af2:	call   QWORD PTR [rip+0x35c0]        # 0x14000c0b8
   140008af8:	movzx  edi,ax
   140008afb:	or     edi,0x80070000
   140008b01:	test   eax,eax
   140008b03:	cmovle edi,eax
   140008b06:	mov    eax,0x80004005
   140008b0b:	test   edi,edi
   140008b0d:	cmovns edi,eax
   140008b10:	test   edi,edi
   140008b12:	js     0x140008c13
   140008b18:	cmp    DWORD PTR [rbp+0x38],0x1
   140008b1c:	mov    eax,0x80070057
   140008b21:	cmovne edi,eax
   140008b24:	test   edi,edi
   140008b26:	js     0x140008c13
   140008b2c:	and    QWORD PTR [rbp-0x10],0x0
   140008b31:	lea    rcx,[rbp-0x10]
   140008b35:	test   rsi,rsi
   140008b38:	je     0x140008b5f
   140008b3a:	mov    rbx,QWORD PTR [rsi]
   140008b3d:	call   0x140008e7c
   140008b42:	mov    rcx,QWORD PTR [rbx]
   140008b45:	mov    rdi,rax
   140008b48:	call   QWORD PTR [rip+0x39a2]        # 0x14000c4f0
   140008b4e:	mov    r8,rdi
   140008b51:	lea    rdx,[rip+0x4320]        # 0x14000ce78
   140008b58:	mov    rcx,rsi
   140008b5b:	call   QWORD PTR [rbx]
   140008b5d:	jmp    0x140008b83
   140008b5f:	call   0x140008e7c
   140008b64:	xor    edx,edx
   140008b66:	mov    QWORD PTR [rsp+0x20],rax
   140008b6b:	lea    r9,[rip+0x4306]        # 0x14000ce78
   140008b72:	lea    rcx,[rip+0x437f]        # 0x14000cef8
   140008b79:	lea    r8d,[rdx+0x3]
   140008b7d:	call   QWORD PTR [rip+0x36cd]        # 0x14000c250
   140008b83:	mov    edi,eax
   140008b85:	test   eax,eax
   140008b87:	js     0x140008bc4
   140008b89:	mov    rcx,QWORD PTR [rbp-0x8]
   140008b8d:	mov    rdi,QWORD PTR [rbp-0x10]
   140008b91:	call   QWORD PTR [rip+0x36a9]        # 0x14000c240
   140008b97:	mov    rax,QWORD PTR [rdi]
   140008b9a:	mov    rbx,QWORD PTR [rax+0x28]
   140008b9e:	mov    rcx,rbx
   140008ba1:	call   QWORD PTR [rip+0x3949]        # 0x14000c4f0
   140008ba7:	and    QWORD PTR [rsp+0x28],0x0
   140008bad:	lea    r8,[rbp-0x8]
   140008bb1:	and    QWORD PTR [rsp+0x20],0x0
   140008bb7:	xor    r9d,r9d
   140008bba:	mov    rdx,r14
   140008bbd:	mov    rcx,rdi
   140008bc0:	call   rbx
   140008bc2:	mov    edi,eax
   140008bc4:	mov    rsi,QWORD PTR [rbp-0x10]
   140008bc8:	test   rsi,rsi
   140008bcb:	je     0x140008be7
   140008bcd:	and    QWORD PTR [rbp-0x10],0x0
   140008bd2:	mov    rax,QWORD PTR [rsi]
   140008bd5:	mov    rbx,QWORD PTR [rax+0x10]
   140008bd9:	mov    rcx,rbx
   140008bdc:	call   QWORD PTR [rip+0x390e]        # 0x14000c4f0
   140008be2:	mov    rcx,rsi
   140008be5:	call   rbx
   140008be7:	test   edi,edi
   140008be9:	js     0x140008c13
   140008beb:	mov    r8,QWORD PTR [rbp-0x8]
   140008bef:	or     edx,0xffffffff
   140008bf2:	mov    r9d,edx
   140008bf5:	mov    DWORD PTR [rsp+0x20],0x1
   140008bfd:	mov    rcx,r15
   140008c00:	call   QWORD PTR [rip+0x3702]        # 0x14000c308
   140008c06:	sub    eax,0x2
   140008c09:	neg    eax
   140008c0b:	sbb    edi,edi
   140008c0d:	and    edi,0x80070005
   140008c13:	mov    rcx,QWORD PTR [rbp-0x8]
   140008c17:	call   QWORD PTR [rip+0x3623]        # 0x14000c240
   140008c1d:	mov    rbx,QWORD PTR [rsp+0x60]
   140008c22:	mov    eax,edi
   140008c24:	mov    rdi,QWORD PTR [rsp+0x70]
   140008c29:	mov    rsi,QWORD PTR [rsp+0x68]
   140008c2e:	add    rsp,0x40
   140008c32:	pop    r15
   140008c34:	pop    r14
   140008c36:	pop    rbp
   140008c37:	ret    
   140008c38:	int3   
   140008c39:	int3   
   140008c3a:	int3   
   140008c3b:	int3   
   140008c3c:	int3   
   140008c3d:	int3   
   140008c3e:	int3   
   140008c3f:	int3   
   140008c40:	mov    QWORD PTR [rsp+0x8],rbx
   140008c45:	push   rbp
   140008c46:	push   rsi
   140008c47:	push   rdi
   140008c48:	push   r14
   140008c4a:	push   r15
   140008c4c:	mov    rbp,rsp
   140008c4f:	sub    rsp,0x40
   140008c53:	mov    r14,rcx
   140008c56:	lea    r8,[rbp+0x40]
   140008c5a:	xor    r15d,r15d
   140008c5d:	mov    ecx,0x1000
   140008c62:	mov    QWORD PTR [rbp+0x40],r15
   140008c66:	call   0x140008780
   140008c6b:	mov    edi,eax
   140008c6d:	test   eax,eax
   140008c6f:	js     0x140008e4a
   140008c75:	mov    rcx,QWORD PTR [rbp+0x40]
   140008c79:	lea    rdx,[rbp+0x38]
   140008c7d:	call   0x140008980
   140008c82:	mov    edi,eax
   140008c84:	test   eax,eax
   140008c86:	js     0x140008e4a
   140008c8c:	cmp    BYTE PTR [rbp+0x38],r15b
   140008c90:	jne    0x140008c9b
   140008c92:	lea    edi,[r15+0x1]
   140008c96:	jmp    0x140008e4a
   140008c9b:	mov    rcx,QWORD PTR [rbp+0x40]
   140008c9f:	lea    rdx,[rbp+0x48]
   140008ca3:	mov    QWORD PTR [rbp+0x48],r15
   140008ca7:	call   0x140008f54
   140008cac:	mov    edi,eax
   140008cae:	test   eax,eax
   140008cb0:	js     0x140008cea
   140008cb2:	lea    rdx,[rbp+0x38]
   140008cb6:	mov    QWORD PTR [rbp+0x38],r15
   140008cba:	mov    rcx,r14
   140008cbd:	call   0x140009344
   140008cc2:	mov    edi,eax
   140008cc4:	test   eax,eax
   140008cc6:	js     0x140008ce0
   140008cc8:	mov    rdx,QWORD PTR [rbp+0x38]
   140008ccc:	mov    rcx,QWORD PTR [rbp+0x48]
   140008cd0:	call   QWORD PTR [rip+0x37ea]        # 0x14000c4c0
   140008cd6:	test   al,al
   140008cd8:	mov    ecx,0x80070005
   140008cdd:	cmove  edi,ecx
   140008ce0:	mov    rcx,QWORD PTR [rbp+0x38]
   140008ce4:	call   QWORD PTR [rip+0x35b6]        # 0x14000c2a0
   140008cea:	mov    rcx,QWORD PTR [rbp+0x48]
   140008cee:	call   QWORD PTR [rip+0x35ac]        # 0x14000c2a0
   140008cf4:	test   edi,edi
   140008cf6:	jns    0x140008e4a
   140008cfc:	xor    ecx,ecx
   140008cfe:	mov    QWORD PTR [rbp-0x10],r15
   140008d02:	mov    QWORD PTR [rbp+0x38],r15
   140008d06:	call   QWORD PTR [rip+0x3534]        # 0x14000c240
   140008d0c:	mov    rcx,QWORD PTR [rbp+0x40]
   140008d10:	lea    rdx,[rbp-0x10]
   140008d14:	call   0x140008830
   140008d19:	test   eax,eax
   140008d1b:	jns    0x140008e0c
   140008d21:	lea    rcx,[rbp+0x48]
   140008d25:	mov    QWORD PTR [rbp+0x48],r15
   140008d29:	call   0x140008e7c
   140008d2e:	xor    edx,edx
   140008d30:	mov    QWORD PTR [rsp+0x20],rax
   140008d35:	lea    r9,[rip+0x413c]        # 0x14000ce78
   140008d3c:	lea    rcx,[rip+0x41b5]        # 0x14000cef8
   140008d43:	lea    r8d,[rdx+0x3]
   140008d47:	call   QWORD PTR [rip+0x3503]        # 0x14000c250
   140008d4d:	mov    edi,eax
   140008d4f:	test   eax,eax
   140008d51:	js     0x140008de6
   140008d57:	mov    rcx,QWORD PTR [rbp+0x40]
   140008d5b:	call   QWORD PTR [rip+0x3367]        # 0x14000c0c8
   140008d61:	mov    rcx,QWORD PTR [rbp-0x10]
   140008d65:	mov    edi,eax
   140008d67:	mov    rsi,QWORD PTR [rbp+0x48]
   140008d6b:	call   QWORD PTR [rip+0x34cf]        # 0x14000c240
   140008d71:	mov    rdx,QWORD PTR [rsi]
   140008d74:	mov    rbx,QWORD PTR [rdx+0x30]
   140008d78:	mov    rcx,rbx
   140008d7b:	call   QWORD PTR [rip+0x376f]        # 0x14000c4f0
   140008d81:	xor    r9d,r9d
   140008d84:	mov    QWORD PTR [rsp+0x28],r15
   140008d89:	lea    r8,[rbp-0x10]
   140008d8d:	mov    QWORD PTR [rsp+0x20],r15
   140008d92:	mov    edx,edi
   140008d94:	mov    rcx,rsi
   140008d97:	call   rbx
   140008d99:	mov    edi,eax
   140008d9b:	test   eax,eax
   140008d9d:	js     0x140008de6
   140008d9f:	mov    rdi,QWORD PTR [rbp+0x38]
   140008da3:	test   rdi,rdi
   140008da6:	je     0x140008dc1
   140008da8:	mov    QWORD PTR [rbp+0x38],r15
   140008dac:	mov    rax,QWORD PTR [rdi]
   140008daf:	mov    rbx,QWORD PTR [rax+0x10]
   140008db3:	mov    rcx,rbx
   140008db6:	call   QWORD PTR [rip+0x3734]        # 0x14000c4f0
   140008dbc:	mov    rcx,rdi
   140008dbf:	call   rbx
   140008dc1:	mov    rbx,QWORD PTR [rbp+0x48]
   140008dc5:	mov    rax,QWORD PTR [rbx]
   140008dc8:	mov    rdi,QWORD PTR [rax]
   140008dcb:	mov    rcx,rdi
   140008dce:	call   QWORD PTR [rip+0x371c]        # 0x14000c4f0
   140008dd4:	lea    r8,[rbp+0x38]
   140008dd8:	mov    rcx,rbx
   140008ddb:	lea    rdx,[rip+0x3c76]        # 0x14000ca58
   140008de2:	call   rdi
   140008de4:	mov    edi,eax
   140008de6:	mov    rsi,QWORD PTR [rbp+0x48]
   140008dea:	test   rsi,rsi
   140008ded:	je     0x140008e08
   140008def:	mov    QWORD PTR [rbp+0x48],r15
   140008df3:	mov    rax,QWORD PTR [rsi]
   140008df6:	mov    rbx,QWORD PTR [rax+0x10]
   140008dfa:	mov    rcx,rbx
   140008dfd:	call   QWORD PTR [rip+0x36ed]        # 0x14000c4f0
   140008e03:	mov    rcx,rsi
   140008e06:	call   rbx
   140008e08:	test   edi,edi
   140008e0a:	js     0x140008e1e
   140008e0c:	mov    r8,QWORD PTR [rbp+0x38]
   140008e10:	mov    rcx,r14
   140008e13:	mov    rdx,QWORD PTR [rbp-0x10]
   140008e17:	call   0x140008a98
   140008e1c:	mov    edi,eax
   140008e1e:	mov    rsi,QWORD PTR [rbp+0x38]
   140008e22:	test   rsi,rsi
   140008e25:	je     0x140008e40
   140008e27:	mov    QWORD PTR [rbp+0x38],r15
   140008e2b:	mov    rax,QWORD PTR [rsi]
   140008e2e:	mov    rbx,QWORD PTR [rax+0x10]
   140008e32:	mov    rcx,rbx
   140008e35:	call   QWORD PTR [rip+0x36b5]        # 0x14000c4f0
   140008e3b:	mov    rcx,rsi
   140008e3e:	call   rbx
   140008e40:	mov    rcx,QWORD PTR [rbp-0x10]
   140008e44:	call   QWORD PTR [rip+0x33f6]        # 0x14000c240
   140008e4a:	mov    rcx,QWORD PTR [rbp+0x40]
   140008e4e:	mov    QWORD PTR [rbp+0x40],r15
   140008e52:	lea    rax,[rcx-0x1]
   140008e56:	cmp    rax,0xfffffffffffffffd
   140008e5a:	ja     0x140008e62
   140008e5c:	call   QWORD PTR [rip+0x32a6]        # 0x14000c108
   140008e62:	mov    eax,edi
   140008e64:	mov    rbx,QWORD PTR [rsp+0x70]
   140008e69:	add    rsp,0x40
   140008e6d:	pop    r15
   140008e6f:	pop    r14
   140008e71:	pop    rdi
   140008e72:	pop    rsi
   140008e73:	pop    rbp
   140008e74:	ret    
   140008e75:	int3   
   140008e76:	int3   
   140008e77:	int3   
   140008e78:	int3   
   140008e79:	int3   
   140008e7a:	int3   
   140008e7b:	int3   
   140008e7c:	mov    QWORD PTR [rsp+0x8],rbx
   140008e81:	mov    QWORD PTR [rsp+0x10],rsi
   140008e86:	push   rdi
   140008e87:	sub    rsp,0x20
   140008e8b:	mov    rsi,QWORD PTR [rcx]
   140008e8e:	mov    rdi,rcx
   140008e91:	test   rsi,rsi
   140008e94:	je     0x140008eaf
   140008e96:	and    QWORD PTR [rcx],0x0
   140008e9a:	mov    rdx,QWORD PTR [rsi]
   140008e9d:	mov    rbx,QWORD PTR [rdx+0x10]
   140008ea1:	mov    rcx,rbx
   140008ea4:	call   QWORD PTR [rip+0x3646]        # 0x14000c4f0
   140008eaa:	mov    rcx,rsi
   140008ead:	call   rbx
   140008eaf:	mov    rbx,QWORD PTR [rsp+0x30]
   140008eb4:	mov    rax,rdi
   140008eb7:	mov    rsi,QWORD PTR [rsp+0x38]
   140008ebc:	add    rsp,0x20
   140008ec0:	pop    rdi
   140008ec1:	ret    
   140008ec2:	int3   
   140008ec3:	int3   
   140008ec4:	int3   
   140008ec5:	int3   
   140008ec6:	int3   
   140008ec7:	int3   
   140008ec8:	mov    QWORD PTR [rsp+0x8],rbx
   140008ecd:	mov    QWORD PTR [rsp+0x10],rsi
   140008ed2:	push   rdi
   140008ed3:	sub    rsp,0x20
   140008ed7:	and    QWORD PTR [rdx],0x0
   140008edb:	mov    rsi,rdx
   140008ede:	mov    r8d,ecx
   140008ee1:	xor    edx,edx
   140008ee3:	mov    ecx,0x1000
   140008ee8:	call   QWORD PTR [rip+0x31b2]        # 0x14000c0a0
   140008eee:	mov    rbx,rax
   140008ef1:	test   rax,rax
   140008ef4:	jne    0x140008f18
   140008ef6:	call   QWORD PTR [rip+0x31bc]        # 0x14000c0b8
   140008efc:	movzx  edi,ax
   140008eff:	or     edi,0x80070000
   140008f05:	test   eax,eax
   140008f07:	cmovle edi,eax
   140008f0a:	mov    eax,0x80004005
   140008f0f:	test   edi,edi
   140008f11:	cmovns edi,eax
   140008f14:	test   edi,edi
   140008f16:	js     0x140008f3b
   140008f18:	mov    rdx,rsi
   140008f1b:	mov    rcx,rbx
   140008f1e:	call   0x140008f54
   140008f23:	lea    rcx,[rbx+0x1]
   140008f27:	mov    edi,eax
   140008f29:	test   rcx,0xfffffffffffffffe
   140008f30:	je     0x140008f3b
   140008f32:	mov    rcx,rbx
   140008f35:	call   QWORD PTR [rip+0x31cd]        # 0x14000c108
   140008f3b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f40:	mov    eax,edi
   140008f42:	mov    rsi,QWORD PTR [rsp+0x38]
   140008f47:	add    rsp,0x20
   140008f4b:	pop    rdi
   140008f4c:	ret    
   140008f4d:	int3   
   140008f4e:	int3   
   140008f4f:	int3   
   140008f50:	int3   
   140008f51:	int3   
   140008f52:	int3   
   140008f53:	int3   
   140008f54:	mov    QWORD PTR [rsp+0x10],rbx
   140008f59:	push   rdi
   140008f5a:	sub    rsp,0x20
   140008f5e:	and    QWORD PTR [rdx],0x0
   140008f62:	mov    rdi,rdx
   140008f65:	and    QWORD PTR [rsp+0x30],0x0
   140008f6b:	mov    rbx,rcx
   140008f6e:	call   QWORD PTR [rip+0x3354]        # 0x14000c2c8
   140008f74:	cmp    rbx,rax
   140008f77:	je     0x140008f98
   140008f79:	lea    r8,[rsp+0x30]
   140008f7e:	mov    edx,0x8
   140008f83:	mov    rcx,rbx
   140008f86:	call   QWORD PTR [rip+0x30a4]        # 0x14000c030
   140008f8c:	test   eax,eax
   140008f8e:	jne    0x140008fa1
   140008f90:	call   QWORD PTR [rip+0x3122]        # 0x14000c0b8
   140008f96:	jmp    0x140008fa3
   140008f98:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffc
   140008fa1:	xor    eax,eax
   140008fa3:	movzx  ebx,ax
   140008fa6:	or     ebx,0x80070000
   140008fac:	test   eax,eax
   140008fae:	cmovle ebx,eax
   140008fb1:	test   ebx,ebx
   140008fb3:	js     0x140008fc4
   140008fb5:	mov    rcx,QWORD PTR [rsp+0x30]
   140008fba:	mov    rdx,rdi
   140008fbd:	call   0x140008ff4
   140008fc2:	mov    ebx,eax
   140008fc4:	mov    rcx,QWORD PTR [rsp+0x30]
   140008fc9:	and    QWORD PTR [rsp+0x30],0x0
   140008fcf:	lea    rdx,[rcx-0x1]
   140008fd3:	cmp    rdx,0xfffffffffffffffd
   140008fd7:	ja     0x140008fdf
   140008fd9:	call   QWORD PTR [rip+0x3129]        # 0x14000c108
   140008fdf:	mov    eax,ebx
   140008fe1:	mov    rbx,QWORD PTR [rsp+0x38]
   140008fe6:	add    rsp,0x20
   140008fea:	pop    rdi
   140008feb:	ret    
   140008fec:	int3   
   140008fed:	int3   
   140008fee:	int3   
   140008fef:	int3   
   140008ff0:	int3   
   140008ff1:	int3   
   140008ff2:	int3   
   140008ff3:	int3   
   140008ff4:	mov    r11,rsp
   140008ff7:	mov    QWORD PTR [r11+0x8],rbx
   140008ffb:	mov    QWORD PTR [r11+0x10],rbp
   140008fff:	push   rsi
   140009000:	push   rdi
   140009001:	push   r14
   140009003:	sub    rsp,0x30
   140009007:	xor    r9d,r9d
   14000900a:	lea    rax,[r11+0x18]
   14000900e:	mov    r14,rdx
   140009011:	mov    QWORD PTR [r11-0x28],rax
   140009015:	xor    r8d,r8d
   140009018:	mov    rsi,rcx
   14000901b:	lea    ebp,[r9+0x1f]
   14000901f:	mov    edx,ebp
   140009021:	call   QWORD PTR [rip+0x2fe1]        # 0x14000c008
   140009027:	neg    eax
   140009029:	sbb    ebx,ebx
   14000902b:	and    ebx,0x8000ffff
   140009031:	jl     0x14000914f
   140009037:	call   QWORD PTR [rip+0x307b]        # 0x14000c0b8
   14000903d:	cmp    eax,0x7a
   140009040:	je     0x140009058
   140009042:	movzx  ebx,ax
   140009045:	or     ebx,0x80070000
   14000904b:	test   eax,eax
   14000904d:	cmovle ebx,eax
   140009050:	test   ebx,ebx
   140009052:	js     0x14000914f
   140009058:	mov    edx,DWORD PTR [rsp+0x60]
   14000905c:	mov    ecx,0x40
   140009061:	call   QWORD PTR [rip+0x3231]        # 0x14000c298
   140009067:	mov    rcx,rax
   14000906a:	mov    rdi,rax
   14000906d:	neg    rcx
   140009070:	sbb    ebx,ebx
   140009072:	not    ebx
   140009074:	and    ebx,0x8007000e
   14000907a:	jl     0x14000914f
   140009080:	mov    r9d,DWORD PTR [rsp+0x60]
   140009085:	lea    rax,[rsp+0x60]
   14000908a:	mov    r8,rdi
   14000908d:	mov    QWORD PTR [rsp+0x20],rax
   140009092:	mov    edx,ebp
   140009094:	mov    rcx,rsi
   140009097:	call   QWORD PTR [rip+0x2f6b]        # 0x14000c008
   14000909d:	mov    esi,0x80004005
   1400090a2:	test   eax,eax
   1400090a4:	jne    0x1400090c7
   1400090a6:	call   QWORD PTR [rip+0x300c]        # 0x14000c0b8
   1400090ac:	movzx  ebx,ax
   1400090af:	or     ebx,0x80070000
   1400090b5:	test   eax,eax
   1400090b7:	cmovle ebx,eax
   1400090ba:	test   ebx,ebx
   1400090bc:	cmovns ebx,esi
   1400090bf:	test   ebx,ebx
   1400090c1:	js     0x14000914f
   1400090c7:	mov    rcx,QWORD PTR [rdi]
   1400090ca:	test   rcx,rcx
   1400090cd:	jne    0x1400090d6
   1400090cf:	mov    ebx,0x80070490
   1400090d4:	jmp    0x140009146
   1400090d6:	call   QWORD PTR [rip+0x32cc]        # 0x14000c3a8
   1400090dc:	mov    edx,eax
   1400090de:	mov    ecx,0x40
   1400090e3:	mov    ebp,eax
   1400090e5:	call   QWORD PTR [rip+0x31ad]        # 0x14000c298
   1400090eb:	mov    rcx,rax
   1400090ee:	mov    rsi,rax
   1400090f1:	neg    rcx
   1400090f4:	sbb    ebx,ebx
   1400090f6:	not    ebx
   1400090f8:	and    ebx,0x8007000e
   1400090fe:	jl     0x140009146
   140009100:	mov    r8,QWORD PTR [rdi]
   140009103:	mov    rdx,rax
   140009106:	mov    ecx,ebp
   140009108:	call   QWORD PTR [rip+0x3292]        # 0x14000c3a0
   14000910e:	test   eax,eax
   140009110:	je     0x140009116
   140009112:	xor    ebx,ebx
   140009114:	jmp    0x140009138
   140009116:	call   QWORD PTR [rip+0x2f9c]        # 0x14000c0b8
   14000911c:	movzx  ebx,ax
   14000911f:	or     ebx,0x80070000
   140009125:	test   eax,eax
   140009127:	cmovle ebx,eax
   14000912a:	mov    eax,0x80004005
   14000912f:	test   ebx,ebx
   140009131:	cmovns ebx,eax
   140009134:	test   ebx,ebx
   140009136:	js     0x14000913d
   140009138:	mov    QWORD PTR [r14],rsi
   14000913b:	jmp    0x140009146
   14000913d:	mov    rcx,rsi
   140009140:	call   QWORD PTR [rip+0x315a]        # 0x14000c2a0
   140009146:	mov    rcx,rdi
   140009149:	call   QWORD PTR [rip+0x3151]        # 0x14000c2a0
   14000914f:	mov    rbp,QWORD PTR [rsp+0x58]
   140009154:	mov    eax,ebx
   140009156:	mov    rbx,QWORD PTR [rsp+0x50]
   14000915b:	add    rsp,0x30
   14000915f:	pop    r14
   140009161:	pop    rdi
   140009162:	pop    rsi
   140009163:	ret    
   140009164:	int3   
   140009165:	int3   
   140009166:	int3   
   140009167:	int3   
   140009168:	int3   
   140009169:	int3   
   14000916a:	int3   
   14000916b:	int3   
   14000916c:	mov    QWORD PTR [rsp+0x8],rbx
   140009171:	push   rbp
   140009172:	push   rsi
   140009173:	push   rdi
   140009174:	push   r14
   140009176:	push   r15
   140009178:	sub    rsp,0x40
   14000917c:	mov    r14,rdx
   14000917f:	xor    r15d,r15d
   140009182:	mov    QWORD PTR [rdx],r15
   140009185:	mov    rbx,rcx
   140009188:	lea    rdx,[rsp+0x78]
   14000918d:	call   QWORD PTR [rip+0x304d]        # 0x14000c1e0
   140009193:	test   eax,eax
   140009195:	jne    0x1400091a1
   140009197:	mov    edi,0x80070006
   14000919c:	jmp    0x140009329
   1400091a1:	mov    eax,DWORD PTR [rsp+0x78]
   1400091a5:	cmp    eax,0x12
   1400091a8:	ja     0x140009324
   1400091ae:	mov    ecx,0x6af52
   1400091b3:	bt     ecx,eax
   1400091b6:	jae    0x140009324
   1400091bc:	lea    rdx,[rsp+0x80]
   1400091c4:	mov    rcx,rbx
   1400091c7:	call   QWORD PTR [rip+0x3003]        # 0x14000c1d0
   1400091cd:	mov    ebp,0x80004005
   1400091d2:	test   eax,eax
   1400091d4:	jne    0x1400091f7
   1400091d6:	call   QWORD PTR [rip+0x2edc]        # 0x14000c0b8
   1400091dc:	movzx  edi,ax
   1400091df:	or     edi,0x80070000
   1400091e5:	test   eax,eax
   1400091e7:	cmovle edi,eax
   1400091ea:	test   edi,edi
   1400091ec:	cmovns edi,ebp
   1400091ef:	test   edi,edi
   1400091f1:	js     0x140009329
   1400091f7:	mov    r8d,DWORD PTR [rsp+0x80]
   1400091ff:	xor    edx,edx
   140009201:	mov    ecx,0x1000
   140009206:	call   QWORD PTR [rip+0x2e94]        # 0x14000c0a0
   14000920c:	mov    rsi,rax
   14000920f:	test   rax,rax
   140009212:	jne    0x140009235
   140009214:	call   QWORD PTR [rip+0x2e9e]        # 0x14000c0b8
   14000921a:	movzx  edi,ax
   14000921d:	or     edi,0x80070000
   140009223:	test   eax,eax
   140009225:	cmovle edi,eax
   140009228:	test   edi,edi
   14000922a:	cmovns edi,ebp
   14000922d:	test   edi,edi
   14000922f:	js     0x140009329
   140009235:	lea    rdx,[rsp+0x30]
   14000923a:	mov    rcx,rsi
   14000923d:	call   QWORD PTR [rip+0x2f7d]        # 0x14000c1c0
   140009243:	test   eax,eax
   140009245:	je     0x140009314
   14000924b:	cmp    DWORD PTR [rsp+0x30],0x2
   140009250:	mov    edi,r15d
   140009253:	jne    0x140009300
   140009259:	lea    rdx,[rip+0x3c30]        # 0x14000ce90
   140009260:	mov    rcx,rbx
   140009263:	call   QWORD PTR [rip+0x2f97]        # 0x14000c200
   140009269:	mov    rbp,rax
   14000926c:	test   ax,ax
   14000926f:	je     0x140009300
   140009275:	xor    ecx,ecx
   140009277:	mov    QWORD PTR [rsp+0x88],r15
   14000927f:	call   QWORD PTR [rip+0x2fbb]        # 0x14000c240
   140009285:	lea    rax,[rsp+0x88]
   14000928d:	mov    ebx,0x104
   140009292:	mov    r9d,ebx
   140009295:	mov    QWORD PTR [rsp+0x28],rax
   14000929a:	xor    r8d,r8d
   14000929d:	call   0x140007bac
   1400092a2:	mov    edi,eax
   1400092a4:	test   eax,eax
   1400092a6:	js     0x1400092eb
   1400092a8:	mov    r8d,ebx
   1400092ab:	movzx  ecx,bp
   1400092ae:	mov    rbx,QWORD PTR [rsp+0x88]
   1400092b6:	mov    rdx,rbx
   1400092b9:	call   QWORD PTR [rip+0x2e91]        # 0x14000c150
   1400092bf:	test   eax,eax
   1400092c1:	je     0x1400092c8
   1400092c3:	mov    edi,r15d
   1400092c6:	jmp    0x1400092e0
   1400092c8:	call   QWORD PTR [rip+0x2dea]        # 0x14000c0b8
   1400092ce:	movzx  edi,ax
   1400092d1:	or     edi,0x80070000
   1400092d7:	test   eax,eax
   1400092d9:	cmovle edi,eax
   1400092dc:	test   edi,edi
   1400092de:	js     0x1400092f3
   1400092e0:	mov    rax,rbx
   1400092e3:	mov    rbx,r15
   1400092e6:	mov    QWORD PTR [r14],rax
   1400092e9:	jmp    0x1400092f3
   1400092eb:	mov    rbx,QWORD PTR [rsp+0x88]
   1400092f3:	mov    rcx,rbx
   1400092f6:	call   QWORD PTR [rip+0x2f44]        # 0x14000c240
   1400092fc:	test   edi,edi
   1400092fe:	js     0x140009319
   140009300:	cmp    QWORD PTR [r14],r15
   140009303:	jne    0x140009319
   140009305:	mov    rdx,r14
   140009308:	mov    rcx,rsi
   14000930b:	call   0x140008830
   140009310:	mov    edi,eax
   140009312:	jmp    0x140009319
   140009314:	mov    edi,0x80070006
   140009319:	mov    rcx,rsi
   14000931c:	call   QWORD PTR [rip+0x2de6]        # 0x14000c108
   140009322:	jmp    0x140009329
   140009324:	mov    edi,0x80070057
   140009329:	mov    eax,edi
   14000932b:	mov    rbx,QWORD PTR [rsp+0x70]
   140009330:	add    rsp,0x40
   140009334:	pop    r15
   140009336:	pop    r14
   140009338:	pop    rdi
   140009339:	pop    rsi
   14000933a:	pop    rbp
   14000933b:	ret    
   14000933c:	int3   
   14000933d:	int3   
   14000933e:	int3   
   14000933f:	int3   
   140009340:	int3   
   140009341:	int3   
   140009342:	int3   
   140009343:	int3   
   140009344:	rex push rbx
   140009346:	sub    rsp,0x20
   14000934a:	and    QWORD PTR [rdx],0x0
   14000934e:	mov    rbx,rdx
   140009351:	lea    rdx,[rsp+0x38]
   140009356:	call   QWORD PTR [rip+0x2e74]        # 0x14000c1d0
   14000935c:	test   eax,eax
   14000935e:	jne    0x140009382
   140009360:	call   QWORD PTR [rip+0x2d52]        # 0x14000c0b8
   140009366:	movzx  ecx,ax
   140009369:	or     ecx,0x80070000
   14000936f:	test   eax,eax
   140009371:	cmovle ecx,eax
   140009374:	mov    eax,0x80004005
   140009379:	test   ecx,ecx
   14000937b:	cmovns ecx,eax
   14000937e:	test   ecx,ecx
   140009380:	js     0x140009390
   140009382:	mov    ecx,DWORD PTR [rsp+0x38]
   140009386:	mov    rdx,rbx
   140009389:	call   0x140008ec8
   14000938e:	mov    ecx,eax
   140009390:	mov    eax,ecx
   140009392:	add    rsp,0x20
   140009396:	pop    rbx
   140009397:	ret    
   140009398:	int3   
   140009399:	int3   
   14000939a:	int3   
   14000939b:	int3   
   14000939c:	int3   
   14000939d:	int3   
   14000939e:	int3   
   14000939f:	int3   
   1400093a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400093a5:	push   rdi
   1400093a6:	sub    rsp,0x80
   1400093ad:	mov    rdi,rdx
   1400093b0:	mov    r8d,0x30
   1400093b6:	lea    rdx,[rsp+0x20]
   1400093bb:	mov    rbx,rcx
   1400093be:	call   QWORD PTR [rip+0x2d84]        # 0x14000c148
   1400093c4:	test   rax,rax
   1400093c7:	jne    0x1400093ce
   1400093c9:	lea    ecx,[rax+0x19]
   1400093cc:	int    0x29
   1400093ce:	test   BYTE PTR [rsp+0x44],0x44
   1400093d3:	je     0x140009426
   1400093d5:	lea    rcx,[rsp+0x50]
   1400093da:	call   QWORD PTR [rip+0x2d40]        # 0x14000c120
   1400093e0:	mov    r8d,DWORD PTR [rsp+0x54]
   1400093e5:	xor    edx,edx
   1400093e7:	lea    eax,[r8-0x1]
   1400093eb:	mov    ecx,eax
   1400093ed:	and    eax,ebx
   1400093ef:	and    ecx,edi
   1400093f1:	add    eax,ecx
   1400093f3:	dec    rax
   1400093f6:	add    rax,r8
   1400093f9:	div    r8
   1400093fc:	xor    edx,edx
   1400093fe:	mov    rcx,rax
   140009401:	mov    rax,rdi
   140009404:	div    r8
   140009407:	add    ecx,eax
   140009409:	lea    rax,[r8-0x1]
   14000940d:	not    rax
   140009410:	mov    edx,ecx
   140009412:	and    rax,rbx
   140009415:	test   ecx,ecx
   140009417:	je     0x140009426
   140009419:	lock or DWORD PTR [rax],0x0
   14000941d:	add    rax,r8
   140009420:	sub    rdx,0x1
   140009424:	jne    0x140009419
   140009426:	mov    rbx,QWORD PTR [rsp+0x90]
   14000942e:	add    rsp,0x80
   140009435:	pop    rdi
   140009436:	ret    
   140009437:	int3   
   140009438:	int3   
   140009439:	int3   
   14000943a:	int3   
   14000943b:	int3   
   14000943c:	int3   
   14000943d:	int3   
   14000943e:	int3   
   14000943f:	int3   
   140009440:	mov    QWORD PTR [rsp+0x8],rbx
   140009445:	mov    QWORD PTR [rsp+0x10],rbp
   14000944a:	push   rsi
   14000944b:	push   rdi
   14000944c:	push   r14
   14000944e:	sub    rsp,0x20
   140009452:	movsxd r8,DWORD PTR [rip+0xffffffffffff6be3]        # 0x14000003c
   140009459:	lea    r14,[rip+0xffffffffffff6ba0]        # 0x140000000
   140009460:	add    r8,r14
   140009463:	mov    rsi,rdx
   140009466:	mov    ebp,ecx
   140009468:	cmp    DWORD PTR [r8+0x84],0xd
   140009470:	jbe    0x140009526
   140009476:	mov    r9d,DWORD PTR [r8+0xf0]
   14000947d:	test   r9d,r9d
   140009480:	je     0x140009526
   140009486:	movzx  eax,WORD PTR [r8+0x14]
   14000948b:	lea    rdx,[r8+0x18]
   14000948f:	mov    r10d,DWORD PTR [r9+r14*1+0xc]
   140009494:	add    rdx,rax
   140009497:	movzx  r11d,WORD PTR [r8+0x6]
   14000949c:	xor    r9d,r9d
   14000949f:	test   r11d,r11d
   1400094a2:	je     0x1400094c2
   1400094a4:	mov    ecx,DWORD PTR [rdx+0xc]
   1400094a7:	cmp    r10d,ecx
   1400094aa:	jb     0x1400094b6
   1400094ac:	mov    eax,DWORD PTR [rdx+0x8]
   1400094af:	add    ecx,eax
   1400094b1:	cmp    r10d,ecx
   1400094b4:	jb     0x140009519
   1400094b6:	inc    r9d
   1400094b9:	add    rdx,0x28
   1400094bd:	cmp    r9d,r11d
   1400094c0:	jb     0x1400094a4
   1400094c2:	mov    eax,DWORD PTR [rsp+0x50]
   1400094c6:	xor    ebx,ebx
   1400094c8:	mov    edi,DWORD PTR [rsp+0x50]
   1400094cc:	test   rbx,rbx
   1400094cf:	je     0x140009526
   1400094d1:	cmp    DWORD PTR [rip+0x7420],0x0        # 0x1400108f8
   1400094d8:	mov    r14d,0x19
   1400094de:	jne    0x1400094fd
   1400094e0:	mov    DWORD PTR [rip+0x740e],0x1        # 0x1400108f8
   1400094ea:	test   eax,eax
   1400094ec:	js     0x1400094f3
   1400094ee:	mov    ecx,r14d
   1400094f1:	int    0x29
   1400094f3:	mov    edx,edi
   1400094f5:	mov    rcx,rbx
   1400094f8:	call   0x1400093a0
   1400094fd:	mov    edx,edi
   1400094ff:	mov    r9,rsi
   140009502:	mov    r8d,ebp
   140009505:	mov    rcx,rbx
   140009508:	call   QWORD PTR [rip+0x2c02]        # 0x14000c110
   14000950e:	test   eax,eax
   140009510:	jne    0x14000952c
   140009512:	mov    rcx,r14
   140009515:	int    0x29
   140009517:	jmp    0x14000952c
   140009519:	mov    ebx,DWORD PTR [rdx+0xc]
   14000951c:	mov    edi,eax
   14000951e:	mov    eax,DWORD PTR [rdx+0x24]
   140009521:	add    rbx,r14
   140009524:	jmp    0x1400094cc
   140009526:	mov    DWORD PTR [rsi],0x4
   14000952c:	mov    rbx,QWORD PTR [rsp+0x40]
   140009531:	mov    rbp,QWORD PTR [rsp+0x48]
   140009536:	add    rsp,0x20
   14000953a:	pop    r14
   14000953c:	pop    rdi
   14000953d:	pop    rsi
   14000953e:	ret    
   14000953f:	int3   
   140009540:	int3   
   140009541:	int3   
   140009542:	int3   
   140009543:	int3   
   140009544:	int3   
   140009545:	int3   
   140009546:	int3   
   140009547:	int3   
   140009548:	int3   
   140009549:	int3   
   14000954a:	int3   
   14000954b:	int3   
   14000954c:	int3   
   14000954d:	int3   
   14000954e:	int3   
   14000954f:	int3   
   140009550:	mov    QWORD PTR [rsp+0x10],rdx
   140009555:	push   rbp
   140009556:	push   rbx
   140009557:	push   rsi
   140009558:	push   rdi
   140009559:	push   r12
   14000955b:	push   r13
   14000955d:	push   r15
   14000955f:	lea    rbp,[rsp-0x27]
   140009564:	sub    rsp,0xa0
   14000956b:	test   DWORD PTR [rip+0x31eb],0x1000        # 0x14000c760
   140009575:	lea    rbx,[rip+0x71cc]        # 0x140010748
   14000957c:	mov    rdi,rdx
   14000957f:	mov    r15,rcx
   140009582:	mov    esi,0x1
   140009587:	je     0x1400095bc
   140009589:	mov    rcx,rbx
   14000958c:	call   QWORD PTR [rip+0x2b06]        # 0x14000c098
   140009592:	mov    eax,DWORD PTR [rip+0x7364]        # 0x1400108fc
   140009598:	add    eax,esi
   14000959a:	mov    DWORD PTR [rip+0x735c],eax        # 0x1400108fc
   1400095a0:	cmp    eax,esi
   1400095a2:	jne    0x1400095b3
   1400095a4:	lea    rdx,[rip+0x7355]        # 0x140010900
   1400095ab:	lea    ecx,[rsi+0x3]
   1400095ae:	call   0x140009440
   1400095b3:	mov    rcx,rbx
   1400095b6:	call   QWORD PTR [rip+0x2ac4]        # 0x14000c080
   1400095bc:	and    QWORD PTR [rbp-0x31],0x0
   1400095c1:	lea    r10,[rip+0xffffffffffff6a38]        # 0x140000000
   1400095c8:	mov    r9d,DWORD PTR [r15+0x14]
   1400095cc:	mov    ecx,DWORD PTR [r15]
   1400095cf:	add    r9,r10
   1400095d2:	mov    eax,DWORD PTR [r15+0x4]
   1400095d6:	and    ecx,esi
   1400095d8:	mov    r12d,DWORD PTR [r15+0x8]
   1400095dc:	add    rax,r10
   1400095df:	mov    r8d,DWORD PTR [r15+0xc]
   1400095e3:	add    r12,r10
   1400095e6:	mov    edx,DWORD PTR [r15+0x10]
   1400095ea:	add    r8,r10
   1400095ed:	and    DWORD PTR [rbp-0x39],0x0
   1400095f1:	add    rdx,r10
   1400095f4:	and    DWORD PTR [rbp-0x31],0x0
   1400095f8:	and    QWORD PTR [rbp-0x29],0x0
   1400095fd:	and    QWORD PTR [rbp-0x21],0x0
   140009602:	and    DWORD PTR [rbp-0x19],0x0
   140009606:	mov    QWORD PTR [rbp-0x1],r9
   14000960a:	mov    r9d,DWORD PTR [r15+0x1c]
   14000960e:	mov    DWORD PTR [rbp+0x67],r9d
   140009612:	mov    DWORD PTR [rbp-0x59],0x48
   140009619:	mov    QWORD PTR [rbp-0x51],r15
   14000961d:	mov    QWORD PTR [rbp-0x49],rdi
   140009621:	mov    QWORD PTR [rbp-0x41],rax
   140009625:	test   cl,cl
   140009627:	jne    0x140009682
   140009629:	test   DWORD PTR [rip+0x312d],0x1000        # 0x14000c760
   140009633:	lea    rax,[rbp-0x59]
   140009637:	mov    QWORD PTR [rbp+0x7],rax
   14000963b:	je     0x140009667
   14000963d:	mov    rcx,rbx
   140009640:	call   QWORD PTR [rip+0x2a52]        # 0x14000c098
   140009646:	add    DWORD PTR [rip+0x72af],0xffffffff        # 0x1400108fc
   14000964d:	jne    0x14000965e
   14000964f:	mov    ecx,DWORD PTR [rip+0x72ab]        # 0x140010900
   140009655:	lea    rdx,[rbp+0x77]
   140009659:	call   0x140009440
   14000965e:	mov    rcx,rbx
   140009661:	call   QWORD PTR [rip+0x2a19]        # 0x14000c080
   140009667:	lea    r9,[rbp+0x7]
   14000966b:	mov    r8d,esi
   14000966e:	xor    edx,edx
   140009670:	mov    ecx,0xc06d0057
   140009675:	call   QWORD PTR [rip+0x2aad]        # 0x14000c128
   14000967b:	xor    eax,eax
   14000967d:	jmp    0x140009a0f
   140009682:	mov    rbx,QWORD PTR [r12]
   140009686:	movabs rax,0x8000000000000000
   140009690:	mov    r13,rdi
   140009693:	sub    r13,r8
   140009696:	sar    r13,0x3
   14000969a:	mov    r13d,r13d
   14000969d:	test   QWORD PTR [rdx+r13*8],rax
   1400096a1:	mov    eax,0x0
   1400096a6:	sete   al
   1400096a9:	mov    DWORD PTR [rbp-0x39],eax
   1400096ac:	test   eax,eax
   1400096ae:	je     0x1400096c4
   1400096b0:	mov    eax,DWORD PTR [rdx+r13*8]
   1400096b4:	lea    rcx,[rip+0xffffffffffff6947]        # 0x140000002
   1400096bb:	add    rax,rcx
   1400096be:	mov    QWORD PTR [rbp-0x31],rax
   1400096c2:	jmp    0x1400096cc
   1400096c4:	movzx  eax,WORD PTR [rdx+r13*8]
   1400096c9:	mov    DWORD PTR [rbp-0x31],eax
   1400096cc:	mov    rdi,QWORD PTR [rip+0x3835]        # 0x14000cf08
   1400096d3:	xor    esi,esi
   1400096d5:	test   rdi,rdi
   1400096d8:	je     0x1400096f7
   1400096da:	mov    rcx,rdi
   1400096dd:	call   QWORD PTR [rip+0x2e0d]        # 0x14000c4f0
   1400096e3:	lea    rdx,[rbp-0x59]
   1400096e7:	xor    ecx,ecx
   1400096e9:	call   rdi
   1400096eb:	mov    rsi,rax
   1400096ee:	test   rax,rax
   1400096f1:	jne    0x1400099a2
   1400096f7:	test   rbx,rbx
   1400096fa:	jne    0x14000983e
   140009700:	mov    rdi,QWORD PTR [rip+0x3801]        # 0x14000cf08
   140009707:	test   rdi,rdi
   14000970a:	je     0x14000972a
   14000970c:	mov    rcx,rdi
   14000970f:	call   QWORD PTR [rip+0x2ddb]        # 0x14000c4f0
   140009715:	lea    rdx,[rbp-0x59]
   140009719:	lea    ecx,[rbx+0x1]
   14000971c:	call   rdi
   14000971e:	mov    rbx,rax
   140009721:	test   rax,rax
   140009724:	jne    0x1400097da
   14000972a:	mov    rcx,QWORD PTR [rbp-0x41]
   14000972e:	xor    r8d,r8d
   140009731:	xor    edx,edx
   140009733:	call   QWORD PTR [rip+0x29df]        # 0x14000c118
   140009739:	mov    rbx,rax
   14000973c:	test   rax,rax
   14000973f:	jne    0x1400097da
   140009745:	call   QWORD PTR [rip+0x296d]        # 0x14000c0b8
   14000974b:	mov    rbx,QWORD PTR [rip+0x37b6]        # 0x14000cf08
   140009752:	mov    DWORD PTR [rbp-0x19],eax
   140009755:	test   rbx,rbx
   140009758:	je     0x140009776
   14000975a:	mov    rcx,rbx
   14000975d:	call   QWORD PTR [rip+0x2d8d]        # 0x14000c4f0
   140009763:	lea    rdx,[rbp-0x59]
   140009767:	mov    ecx,0x3
   14000976c:	call   rbx
   14000976e:	mov    rbx,rax
   140009771:	test   rax,rax
   140009774:	jne    0x1400097da
   140009776:	test   DWORD PTR [rip+0x2fe0],0x1000        # 0x14000c760
   140009780:	lea    rax,[rbp-0x59]
   140009784:	mov    QWORD PTR [rbp-0x9],rax
   140009788:	je     0x1400097bc
   14000978a:	lea    rcx,[rip+0x6fb7]        # 0x140010748
   140009791:	call   QWORD PTR [rip+0x2901]        # 0x14000c098
   140009797:	add    DWORD PTR [rip+0x715e],0xffffffff        # 0x1400108fc
   14000979e:	jne    0x1400097af
   1400097a0:	mov    ecx,DWORD PTR [rip+0x715a]        # 0x140010900
   1400097a6:	lea    rdx,[rbp+0x7f]
   1400097aa:	call   0x140009440
   1400097af:	lea    rcx,[rip+0x6f92]        # 0x140010748
   1400097b6:	call   QWORD PTR [rip+0x28c4]        # 0x14000c080
   1400097bc:	xor    edx,edx
   1400097be:	lea    r9,[rbp-0x9]
   1400097c2:	mov    ecx,0xc06d007e
   1400097c7:	lea    r8d,[rdx+0x1]
   1400097cb:	call   QWORD PTR [rip+0x2957]        # 0x14000c128
   1400097d1:	mov    rax,QWORD PTR [rbp-0x21]
   1400097d5:	jmp    0x140009a0f
   1400097da:	xor    eax,eax
   1400097dc:	lock cmpxchg QWORD PTR [r12],rbx
   1400097e2:	mov    rdi,rax
   1400097e5:	jne    0x140009828
   1400097e7:	cmp    rbx,0xffffffffffffffff
   1400097eb:	je     0x14000983e
   1400097ed:	cmp    DWORD PTR [r15+0x18],0x0
   1400097f2:	je     0x14000983e
   1400097f4:	call   QWORD PTR [rip+0x2936]        # 0x14000c130
   1400097fa:	mov    edx,0x8
   1400097ff:	mov    rcx,rax
   140009802:	lea    r8d,[rdx+0x8]
   140009806:	call   QWORD PTR [rip+0x292c]        # 0x14000c138
   14000980c:	test   rax,rax
   14000980f:	je     0x14000983e
   140009811:	mov    QWORD PTR [rax+0x8],r15
   140009815:	mov    rcx,QWORD PTR [rip+0x6f34]        # 0x140010750
   14000981c:	mov    QWORD PTR [rax],rcx
   14000981f:	mov    QWORD PTR [rip+0x6f2a],rax        # 0x140010750
   140009826:	jmp    0x14000983e
   140009828:	cmp    rbx,0xffffffffffffffff
   14000982c:	je     0x140009837
   14000982e:	mov    rcx,rbx
   140009831:	call   QWORD PTR [rip+0x2909]        # 0x14000c140
   140009837:	cmp    rbx,rdi
   14000983a:	cmovne rbx,rdi
   14000983e:	mov    rdi,QWORD PTR [rip+0x36c3]        # 0x14000cf08
   140009845:	mov    QWORD PTR [rbp-0x29],rbx
   140009849:	test   rdi,rdi
   14000984c:	je     0x140009865
   14000984e:	mov    rcx,rdi
   140009851:	call   QWORD PTR [rip+0x2c99]        # 0x14000c4f0
   140009857:	lea    rdx,[rbp-0x59]
   14000985b:	mov    ecx,0x2
   140009860:	call   rdi
   140009862:	mov    rsi,rax
   140009865:	test   rsi,rsi
   140009868:	jne    0x14000999b
   14000986e:	cmp    DWORD PTR [r15+0x14],esi
   140009872:	je     0x1400098a8
   140009874:	cmp    DWORD PTR [r15+0x1c],esi
   140009878:	je     0x1400098a8
   14000987a:	movsxd rax,DWORD PTR [rbx+0x3c]
   14000987e:	cmp    DWORD PTR [rax+rbx*1],0x4550
   140009885:	jne    0x1400098a8
   140009887:	mov    ecx,DWORD PTR [rbp+0x67]
   14000988a:	cmp    DWORD PTR [rax+rbx*1+0x8],ecx
   14000988e:	jne    0x1400098a8
   140009890:	cmp    rbx,QWORD PTR [rax+rbx*1+0x30]
   140009895:	jne    0x1400098a8
   140009897:	mov    rsi,QWORD PTR [rbp-0x1]
   14000989b:	mov    rsi,QWORD PTR [rsi+r13*8]
   14000989f:	test   rsi,rsi
   1400098a2:	jne    0x14000999b
   1400098a8:	mov    rdx,QWORD PTR [rbp-0x31]
   1400098ac:	mov    rcx,rbx
   1400098af:	call   QWORD PTR [rip+0x280b]        # 0x14000c0c0
   1400098b5:	mov    rsi,rax
   1400098b8:	test   rax,rax
   1400098bb:	jne    0x14000999b
   1400098c1:	call   QWORD PTR [rip+0x27f1]        # 0x14000c0b8
   1400098c7:	mov    rdi,QWORD PTR [rip+0x363a]        # 0x14000cf08
   1400098ce:	mov    DWORD PTR [rbp-0x19],eax
   1400098d1:	test   rdi,rdi
   1400098d4:	je     0x1400098f4
   1400098d6:	mov    rcx,rdi
   1400098d9:	call   QWORD PTR [rip+0x2c11]        # 0x14000c4f0
   1400098df:	lea    rdx,[rbp-0x59]
   1400098e3:	lea    ecx,[rsi+0x4]
   1400098e6:	call   rdi
   1400098e8:	mov    rsi,rax
   1400098eb:	test   rax,rax
   1400098ee:	jne    0x14000999b
   1400098f4:	test   DWORD PTR [rip+0x2e62],0x1000        # 0x14000c760
   1400098fe:	lea    rax,[rbp-0x59]
   140009902:	mov    QWORD PTR [rbp+0xf],rax
   140009906:	je     0x14000993a
   140009908:	lea    rcx,[rip+0x6e39]        # 0x140010748
   14000990f:	call   QWORD PTR [rip+0x2783]        # 0x14000c098
   140009915:	add    DWORD PTR [rip+0x6fe0],0xffffffff        # 0x1400108fc
   14000991c:	jne    0x14000992d
   14000991e:	mov    ecx,DWORD PTR [rip+0x6fdc]        # 0x140010900
   140009924:	lea    rdx,[rbp+0x17]
   140009928:	call   0x140009440
   14000992d:	lea    rcx,[rip+0x6e14]        # 0x140010748
   140009934:	call   QWORD PTR [rip+0x2746]        # 0x14000c080
   14000993a:	xor    edx,edx
   14000993c:	lea    r9,[rbp+0xf]
   140009940:	mov    ecx,0xc06d007f
   140009945:	lea    r8d,[rdx+0x1]
   140009949:	call   QWORD PTR [rip+0x27d9]        # 0x14000c128
   14000994f:	test   DWORD PTR [rip+0x2e07],0x1000        # 0x14000c760
   140009959:	je     0x140009997
   14000995b:	lea    rcx,[rip+0x6de6]        # 0x140010748
   140009962:	call   QWORD PTR [rip+0x2730]        # 0x14000c098
   140009968:	mov    eax,DWORD PTR [rip+0x6f8e]        # 0x1400108fc
   14000996e:	inc    eax
   140009970:	mov    DWORD PTR [rip+0x6f86],eax        # 0x1400108fc
   140009976:	cmp    eax,0x1
   140009979:	jne    0x14000998a
   14000997b:	lea    rdx,[rip+0x6f7e]        # 0x140010900
   140009982:	lea    ecx,[rax+0x3]
   140009985:	call   0x140009440
   14000998a:	lea    rcx,[rip+0x6db7]        # 0x140010748
   140009991:	call   QWORD PTR [rip+0x26e9]        # 0x14000c080
   140009997:	mov    rsi,QWORD PTR [rbp-0x21]
   14000999b:	mov    rax,QWORD PTR [rbp+0x6f]
   14000999f:	mov    QWORD PTR [rax],rsi
   1400099a2:	mov    rdi,QWORD PTR [rip+0x355f]        # 0x14000cf08
   1400099a9:	test   rdi,rdi
   1400099ac:	je     0x1400099ce
   1400099ae:	and    DWORD PTR [rbp-0x19],0x0
   1400099b2:	mov    rcx,rdi
   1400099b5:	mov    QWORD PTR [rbp-0x29],rbx
   1400099b9:	mov    QWORD PTR [rbp-0x21],rsi
   1400099bd:	call   QWORD PTR [rip+0x2b2d]        # 0x14000c4f0
   1400099c3:	lea    rdx,[rbp-0x59]
   1400099c7:	mov    ecx,0x5
   1400099cc:	call   rdi
   1400099ce:	test   DWORD PTR [rip+0x2d88],0x1000        # 0x14000c760
   1400099d8:	je     0x140009a0c
   1400099da:	lea    rcx,[rip+0x6d67]        # 0x140010748
   1400099e1:	call   QWORD PTR [rip+0x26b1]        # 0x14000c098
   1400099e7:	add    DWORD PTR [rip+0x6f0e],0xffffffff        # 0x1400108fc
   1400099ee:	jne    0x1400099ff
   1400099f0:	mov    ecx,DWORD PTR [rip+0x6f0a]        # 0x140010900
   1400099f6:	lea    rdx,[rbp+0x1b]
   1400099fa:	call   0x140009440
   1400099ff:	lea    rcx,[rip+0x6d42]        # 0x140010748
   140009a06:	call   QWORD PTR [rip+0x2674]        # 0x14000c080
   140009a0c:	mov    rax,rsi
   140009a0f:	add    rsp,0xa0
   140009a16:	pop    r15
   140009a18:	pop    r13
   140009a1a:	pop    r12
   140009a1c:	pop    rdi
   140009a1d:	pop    rsi
   140009a1e:	pop    rbx
   140009a1f:	pop    rbp
   140009a20:	ret    
   140009a21:	int3   
   140009a22:	int3   
   140009a23:	int3   
   140009a24:	int3   
   140009a25:	int3   
   140009a26:	int3   
   140009a27:	int3   
   140009a28:	jmp    0x140009e50
   140009a2d:	int3   
   140009a2e:	int3   
   140009a2f:	int3   
   140009a30:	int3   
   140009a31:	int3   
   140009a32:	int3   
   140009a33:	int3   
   140009a34:	int3   
   140009a35:	int3   
   140009a36:	int3   
   140009a37:	int3   
   140009a38:	int3   
   140009a39:	int3   
   140009a3a:	int3   
   140009a3b:	int3   
   140009a3c:	int3   
   140009a3d:	int3   
   140009a3e:	int3   
   140009a3f:	int3   
   140009a40:	sub    rsp,0x28
   140009a44:	mov    eax,0x5a4d
   140009a49:	cmp    WORD PTR [rip+0xffffffffffff65b0],ax        # 0x140000000
   140009a50:	je     0x140009a56
   140009a52:	xor    eax,eax
   140009a54:	jmp    0x140009aa5
   140009a56:	movsxd rcx,DWORD PTR [rip+0xffffffffffff65df]        # 0x14000003c
   140009a5d:	lea    rax,[rip+0xffffffffffff659c]        # 0x140000000
   140009a64:	add    rcx,rax
   140009a67:	cmp    DWORD PTR [rcx],0x4550
   140009a6d:	jne    0x140009a52
   140009a6f:	movzx  eax,WORD PTR [rcx+0x18]
   140009a73:	cmp    eax,0x10b
   140009a78:	je     0x140009a94
   140009a7a:	cmp    eax,0x20b
   140009a7f:	jne    0x140009a52
   140009a81:	xor    eax,eax
   140009a83:	cmp    DWORD PTR [rcx+0x84],0xe
   140009a8a:	jbe    0x140009aa5
   140009a8c:	cmp    DWORD PTR [rcx+0xf8],eax
   140009a92:	jmp    0x140009aa2
   140009a94:	xor    eax,eax
   140009a96:	cmp    DWORD PTR [rcx+0x74],0xe
   140009a9a:	jbe    0x140009aa5
   140009a9c:	cmp    DWORD PTR [rcx+0xe8],eax
   140009aa2:	setne  al
   140009aa5:	mov    ecx,0x2
   140009aaa:	mov    DWORD PTR [rip+0x6620],eax        # 0x1400100d0
   140009ab0:	call   0x14000a228
   140009ab5:	mov    ecx,eax
   140009ab7:	call   QWORD PTR [rip+0x29c3]        # 0x14000c480
   140009abd:	mov    rcx,QWORD PTR [rip+0x297c]        # 0x14000c440
   140009ac4:	or     rax,0xffffffffffffffff
   140009ac8:	mov    QWORD PTR [rip+0x6e11],rax        # 0x1400108e0
   140009acf:	mov    QWORD PTR [rip+0x6e12],rax        # 0x1400108e8
   140009ad6:	mov    eax,DWORD PTR [rip+0x6b80]        # 0x14001065c
   140009adc:	mov    DWORD PTR [rcx],eax
   140009ade:	mov    rcx,QWORD PTR [rip+0x2953]        # 0x14000c438
   140009ae5:	mov    eax,DWORD PTR [rip+0x6b65]        # 0x140010650
   140009aeb:	mov    DWORD PTR [rcx],eax
   140009aed:	call   0x140006ea0
   140009af2:	cmp    DWORD PTR [rip+0x6507],0x0        # 0x140010000
   140009af9:	jne    0x140009b08
   140009afb:	lea    rcx,[rip+0xffffffffffffd39e]        # 0x140006ea0
   140009b02:	call   QWORD PTR [rip+0x2958]        # 0x14000c460
   140009b08:	xor    eax,eax
   140009b0a:	add    rsp,0x28
   140009b0e:	ret    
   140009b0f:	int3   
   140009b10:	int3   
   140009b11:	int3   
   140009b12:	int3   
   140009b13:	int3   
   140009b14:	int3   
   140009b15:	int3   
   140009b16:	int3   
   140009b17:	int3   
   140009b18:	int3   
   140009b19:	int3   
   140009b1a:	int3   
   140009b1b:	int3   
   140009b1c:	int3   
   140009b1d:	int3   
   140009b1e:	int3   
   140009b1f:	int3   
   140009b20:	sub    rsp,0x38
   140009b24:	mov    eax,DWORD PTR [rip+0x6b2e]        # 0x140010658
   140009b2a:	lea    r8,[rip+0x6597]        # 0x1400100c8
   140009b31:	mov    r9d,DWORD PTR [rip+0x6b1c]        # 0x140010654
   140009b38:	lea    rdx,[rip+0x6581]        # 0x1400100c0
   140009b3f:	mov    DWORD PTR [rip+0x658f],eax        # 0x1400100d4
   140009b45:	lea    rcx,[rip+0x656c]        # 0x1400100b8
   140009b4c:	lea    rax,[rip+0x6581]        # 0x1400100d4
   140009b53:	mov    QWORD PTR [rsp+0x20],rax
   140009b58:	call   QWORD PTR [rip+0x292a]        # 0x14000c488
   140009b5e:	mov    DWORD PTR [rip+0x6558],eax        # 0x1400100bc
   140009b64:	add    rsp,0x38
   140009b68:	ret    
   140009b69:	int3   
   140009b6a:	int3   
   140009b6b:	int3   
   140009b6c:	int3   
   140009b6d:	int3   
   140009b6e:	int3   
   140009b6f:	int3   
   140009b70:	mov    QWORD PTR [rsp+0x8],rbx
   140009b75:	mov    QWORD PTR [rsp+0x10],rsi
   140009b7a:	mov    QWORD PTR [rsp+0x18],rdi
   140009b7f:	push   r12
   140009b81:	push   r14
   140009b83:	push   r15
   140009b85:	sub    rsp,0xb0
   140009b8c:	xor    r15d,r15d
   140009b8f:	mov    DWORD PTR [rsp+0x20],r15d
   140009b94:	lea    rcx,[rsp+0x40]
   140009b99:	call   QWORD PTR [rip+0x2719]        # 0x14000c2b8
   140009b9f:	nop
   140009ba0:	mov    rax,QWORD PTR gs:0x30
   140009ba9:	mov    rbx,QWORD PTR [rax+0x8]
   140009bad:	mov    r14d,r15d
   140009bb0:	xor    eax,eax
   140009bb2:	lock cmpxchg QWORD PTR [rip+0x6d15],rbx        # 0x1400108d0
   140009bbb:	je     0x140009bd9
   140009bbd:	cmp    rax,rbx
   140009bc0:	jne    0x140009bcc
   140009bc2:	mov    edi,0x1
   140009bc7:	mov    r14d,edi
   140009bca:	jmp    0x140009bde
   140009bcc:	mov    ecx,0x3e8
   140009bd1:	call   QWORD PTR [rip+0x2741]        # 0x14000c318
   140009bd7:	jmp    0x140009bb0
   140009bd9:	mov    edi,0x1
   140009bde:	mov    eax,DWORD PTR [rip+0x6cf4]        # 0x1400108d8
   140009be4:	cmp    eax,edi
   140009be6:	jne    0x140009bf6
   140009be8:	mov    esi,0x1f
   140009bed:	mov    ecx,esi
   140009bef:	call   0x14000a274
   140009bf4:	jmp    0x140009c67
   140009bf6:	mov    eax,DWORD PTR [rip+0x6cdc]        # 0x1400108d8
   140009bfc:	test   eax,eax
   140009bfe:	jne    0x140009c5c
   140009c00:	mov    DWORD PTR [rip+0x6cd2],edi        # 0x1400108d8
   140009c06:	lea    r12,[rip+0x293b]        # 0x14000c548
   140009c0d:	lea    rbx,[rip+0x291c]        # 0x14000c530
   140009c14:	mov    QWORD PTR [rsp+0x30],rbx
   140009c19:	mov    eax,r15d
   140009c1c:	mov    DWORD PTR [rsp+0x24],eax
   140009c20:	cmp    rbx,r12
   140009c23:	jae    0x140009c4e
   140009c25:	test   eax,eax
   140009c27:	jne    0x140009c52
   140009c29:	mov    rsi,QWORD PTR [rbx]
   140009c2c:	test   rsi,rsi
   140009c2f:	je     0x140009c43
   140009c31:	mov    rcx,rsi
   140009c34:	mov    rax,QWORD PTR [rip+0x28b5]        # 0x14000c4f0
   140009c3b:	call   rax
   140009c3d:	call   rsi
   140009c3f:	mov    DWORD PTR [rsp+0x24],eax
   140009c43:	add    rbx,0x8
   140009c47:	mov    QWORD PTR [rsp+0x30],rbx
   140009c4c:	jmp    0x140009c20
   140009c4e:	test   eax,eax
   140009c50:	je     0x140009c62
   140009c52:	mov    eax,0xff
   140009c57:	jmp    0x140009dc3
   140009c5c:	mov    DWORD PTR [rip+0x6452],edi        # 0x1400100b4
   140009c62:	mov    esi,0x1f
   140009c67:	mov    eax,DWORD PTR [rip+0x6c6b]        # 0x1400108d8
   140009c6d:	cmp    eax,edi
   140009c6f:	jne    0x140009c8e
   140009c71:	lea    rdx,[rip+0x28b0]        # 0x14000c528
   140009c78:	lea    rcx,[rip+0x2881]        # 0x14000c500
   140009c7f:	call   0x14000a43a
   140009c84:	mov    DWORD PTR [rip+0x6c4a],0x2        # 0x1400108d8
   140009c8e:	test   r14d,r14d
   140009c91:	jne    0x140009c9d
   140009c93:	mov    rax,r15
   140009c96:	xchg   QWORD PTR [rip+0x6c33],rax        # 0x1400108d0
   140009c9d:	cmp    QWORD PTR [rip+0x6c4c],r15        # 0x1400108f0
   140009ca4:	je     0x140009cd4
   140009ca6:	lea    rcx,[rip+0x6c43]        # 0x1400108f0
   140009cad:	call   0x14000a2d0
   140009cb2:	test   eax,eax
   140009cb4:	je     0x140009cd4
   140009cb6:	mov    rbx,QWORD PTR [rip+0x6c33]        # 0x1400108f0
   140009cbd:	mov    rcx,rbx
   140009cc0:	mov    rax,QWORD PTR [rip+0x2829]        # 0x14000c4f0
   140009cc7:	call   rax
   140009cc9:	xor    r8d,r8d
   140009ccc:	lea    edx,[r8+0x2]
   140009cd0:	xor    ecx,ecx
   140009cd2:	call   rbx
   140009cd4:	mov    rax,QWORD PTR [rip+0x276d]        # 0x14000c448
   140009cdb:	mov    rdx,QWORD PTR [rax]
   140009cde:	test   rdx,rdx
   140009ce1:	jne    0x140009ced
   140009ce3:	mov    eax,0xff
   140009ce8:	jmp    0x140009dc3
   140009ced:	mov    QWORD PTR [rsp+0x28],rdx
   140009cf2:	mov    ecx,DWORD PTR [rsp+0x20]
   140009cf6:	cmp    WORD PTR [rdx],0x20
   140009cfa:	ja     0x140009d74
   140009cfc:	cmp    WORD PTR [rdx],r15w
   140009d00:	je     0x140009d06
   140009d02:	test   ecx,ecx
   140009d04:	jne    0x140009d74
   140009d06:	movzx  eax,WORD PTR [rdx]
   140009d09:	sub    ax,di
   140009d0c:	cmp    ax,si
   140009d0f:	ja     0x140009d1c
   140009d11:	add    rdx,0x2
   140009d15:	mov    QWORD PTR [rsp+0x28],rdx
   140009d1a:	jmp    0x140009d06
   140009d1c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140009d20:	movzx  eax,WORD PTR [rsp+0x80]
   140009d28:	mov    r9d,0xa
   140009d2e:	and    cl,dil
   140009d31:	cmovne r9d,eax
   140009d35:	mov    r8,rdx
   140009d38:	xor    edx,edx
   140009d3a:	lea    rcx,[rip+0xffffffffffff62bf]        # 0x140000000
   140009d41:	call   0x14000628c
   140009d46:	mov    DWORD PTR [rip+0x6364],eax        # 0x1400100b0
   140009d4c:	cmp    DWORD PTR [rip+0x637d],r15d        # 0x1400100d0
   140009d53:	jne    0x140009d5d
   140009d55:	mov    ecx,eax
   140009d57:	call   QWORD PTR [rip+0x271b]        # 0x14000c478
   140009d5d:	cmp    DWORD PTR [rip+0x6350],r15d        # 0x1400100b4
   140009d64:	jne    0x140009d72
   140009d66:	call   QWORD PTR [rip+0x26fc]        # 0x14000c468
   140009d6c:	mov    eax,DWORD PTR [rip+0x633e]        # 0x1400100b0
   140009d72:	jmp    0x140009dc3
   140009d74:	cmp    WORD PTR [rdx],0x22
   140009d78:	jne    0x140009d88
   140009d7a:	mov    eax,r15d
   140009d7d:	test   ecx,ecx
   140009d7f:	sete   al
   140009d82:	mov    ecx,eax
   140009d84:	mov    DWORD PTR [rsp+0x20],eax
   140009d88:	add    rdx,0x2
   140009d8c:	mov    QWORD PTR [rsp+0x28],rdx
   140009d91:	jmp    0x140009cf6
   140009d96:	mov    DWORD PTR [rip+0x6314],eax        # 0x1400100b0
   140009d9c:	cmp    DWORD PTR [rip+0x632d],0x0        # 0x1400100d0
   140009da3:	jne    0x140009dae
   140009da5:	mov    ecx,eax
   140009da7:	call   QWORD PTR [rip+0x26c3]        # 0x14000c470
   140009dad:	int3   
   140009dae:	cmp    DWORD PTR [rip+0x62ff],0x0        # 0x1400100b4
   140009db5:	jne    0x140009dc3
   140009db7:	call   QWORD PTR [rip+0x26ab]        # 0x14000c468
   140009dbd:	mov    eax,DWORD PTR [rip+0x62ed]        # 0x1400100b0
   140009dc3:	lea    r11,[rsp+0xb0]
   140009dcb:	mov    rbx,QWORD PTR [r11+0x20]
   140009dcf:	mov    rsi,QWORD PTR [r11+0x28]
   140009dd3:	mov    rdi,QWORD PTR [r11+0x30]
   140009dd7:	mov    rsp,r11
   140009dda:	pop    r15
   140009ddc:	pop    r14
   140009dde:	pop    r12
   140009de0:	ret    
   140009de1:	int3   
   140009de2:	int3   
   140009de3:	int3   
   140009de4:	int3   
   140009de5:	int3   
   140009de6:	int3   
   140009de7:	int3   
   140009de8:	int3   
   140009de9:	int3   
   140009dea:	int3   
   140009deb:	int3   
   140009dec:	int3   
   140009ded:	int3   
   140009dee:	int3   
   140009def:	int3   
   140009df0:	sub    rsp,0x28
   140009df4:	call   0x14000a364
   140009df9:	add    rsp,0x28
   140009dfd:	jmp    0x140009b70
   140009e02:	int3   
   140009e03:	int3   
   140009e04:	int3   
   140009e05:	int3   
   140009e06:	int3   
   140009e07:	int3   
   140009e08:	int3   
   140009e09:	int3   
   140009e0a:	int3   
   140009e0b:	int3   
   140009e0c:	int3   
   140009e0d:	int3   
   140009e0e:	int3   
   140009e0f:	int3   
   140009e10:	int3   
   140009e11:	int3   
   140009e12:	int3   
   140009e13:	int3   
   140009e14:	int3   
   140009e15:	int3   
   140009e16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009e20:	cmp    rcx,QWORD PTR [rip+0x61e1]        # 0x140010008
   140009e27:	jne    0x140009e39
   140009e29:	rol    rcx,0x10
   140009e2d:	test   cx,0xffff
   140009e32:	jne    0x140009e35
   140009e34:	ret    
   140009e35:	ror    rcx,0x10
   140009e39:	jmp    0x140009f80
   140009e3e:	int3   
   140009e3f:	int3   
   140009e40:	int3   
   140009e41:	int3   
   140009e42:	int3   
   140009e43:	int3   
   140009e44:	jmp    0x14000a138
   140009e49:	int3   
   140009e4a:	int3   
   140009e4b:	int3   
   140009e4c:	int3   
   140009e4d:	int3   
   140009e4e:	int3   
   140009e4f:	int3   
   140009e50:	jmp    QWORD PTR [rip+0x258a]        # 0x14000c3e0
   140009e56:	int3   
   140009e57:	int3   
   140009e58:	int3   
   140009e59:	int3   
   140009e5a:	int3   
   140009e5b:	int3   
   140009e5c:	jmp    QWORD PTR [rip+0x2586]        # 0x14000c3e8
   140009e62:	int3   
   140009e63:	int3   
   140009e64:	int3   
   140009e65:	int3   
   140009e66:	int3   
   140009e67:	int3   
   140009e68:	mov    QWORD PTR [rsp+0x8],rbx
   140009e6d:	push   rdi
   140009e6e:	sub    rsp,0x20
   140009e72:	mov    rdi,rcx
   140009e75:	mov    rax,QWORD PTR [rip+0x6a6c]        # 0x1400108e8
   140009e7c:	mov    QWORD PTR [rsp+0x38],rax
   140009e81:	cmp    rax,0xffffffffffffffff
   140009e85:	jne    0x140009e9e
   140009e87:	mov    rbx,QWORD PTR [rip+0x258a]        # 0x14000c418
   140009e8e:	mov    rcx,rbx
   140009e91:	call   QWORD PTR [rip+0x2659]        # 0x14000c4f0
   140009e97:	mov    rcx,rdi
   140009e9a:	call   rbx
   140009e9c:	jmp    0x140009efb
   140009e9e:	mov    ecx,0x8
   140009ea3:	call   0x14000a452
   140009ea8:	nop
   140009ea9:	mov    rax,QWORD PTR [rip+0x6a38]        # 0x1400108e8
   140009eb0:	mov    QWORD PTR [rsp+0x38],rax
   140009eb5:	mov    rax,QWORD PTR [rip+0x6a24]        # 0x1400108e0
   140009ebc:	mov    QWORD PTR [rsp+0x40],rax
   140009ec1:	lea    r8,[rsp+0x40]
   140009ec6:	lea    rdx,[rsp+0x38]
   140009ecb:	mov    rcx,rdi
   140009ece:	call   0x14000a46a
   140009ed3:	mov    rbx,rax
   140009ed6:	mov    rdx,QWORD PTR [rsp+0x38]
   140009edb:	mov    QWORD PTR [rip+0x6a06],rdx        # 0x1400108e8
   140009ee2:	mov    rdx,QWORD PTR [rsp+0x40]
   140009ee7:	mov    QWORD PTR [rip+0x69f2],rdx        # 0x1400108e0
   140009eee:	mov    ecx,0x8
   140009ef3:	call   0x14000a45e
   140009ef8:	mov    rax,rbx
   140009efb:	mov    rbx,QWORD PTR [rsp+0x30]
   140009f00:	add    rsp,0x20
   140009f04:	pop    rdi
   140009f05:	ret    
   140009f06:	int3   
   140009f07:	int3   
   140009f08:	int3   
   140009f09:	int3   
   140009f0a:	int3   
   140009f0b:	int3   
   140009f0c:	sub    rsp,0x28
   140009f10:	call   0x140009e68
   140009f15:	neg    rax
   140009f18:	sbb    eax,eax
   140009f1a:	neg    eax
   140009f1c:	dec    eax
   140009f1e:	add    rsp,0x28
   140009f22:	ret    
   140009f23:	int3   
   140009f24:	int3   
   140009f25:	int3   
   140009f26:	int3   
   140009f27:	int3   
   140009f28:	int3   
   140009f29:	int3   
   140009f2a:	int3   
   140009f2b:	int3   
   140009f2c:	int3   
   140009f2d:	int3   
   140009f2e:	int3   
   140009f2f:	int3   
   140009f30:	jmp    QWORD PTR [rip+0x24c2]        # 0x14000c3f8
   140009f36:	int3   
   140009f37:	int3   
   140009f38:	int3   
   140009f39:	int3   
   140009f3a:	int3   
   140009f3b:	int3   
   140009f3c:	rex push rbx
   140009f3e:	sub    rsp,0x20
   140009f42:	mov    rbx,rcx
   140009f45:	xor    ecx,ecx
   140009f47:	call   QWORD PTR [rip+0x233b]        # 0x14000c288
   140009f4d:	mov    rcx,rbx
   140009f50:	call   QWORD PTR [rip+0x232a]        # 0x14000c280
   140009f56:	call   QWORD PTR [rip+0x236c]        # 0x14000c2c8
   140009f5c:	mov    rcx,rax
   140009f5f:	mov    edx,0xc0000409
   140009f64:	add    rsp,0x20
   140009f68:	pop    rbx
   140009f69:	rex.W jmp QWORD PTR [rip+0x2340]        # 0x14000c2b0
   140009f70:	int3   
   140009f71:	int3   
   140009f72:	int3   
   140009f73:	int3   
   140009f74:	int3   
   140009f75:	int3   
   140009f76:	int3   
   140009f77:	int3   
   140009f78:	int3   
   140009f79:	int3   
   140009f7a:	int3   
   140009f7b:	int3   
   140009f7c:	int3   
   140009f7d:	int3   
   140009f7e:	int3   
   140009f7f:	int3   
   140009f80:	mov    QWORD PTR [rsp+0x8],rcx
   140009f85:	sub    rsp,0x88
   140009f8c:	lea    rcx,[rip+0x61ed]        # 0x140010180
   140009f93:	call   QWORD PTR [rip+0x2357]        # 0x14000c2f0
   140009f99:	mov    rax,QWORD PTR [rip+0x62d8]        # 0x140010278
   140009fa0:	mov    QWORD PTR [rsp+0x48],rax
   140009fa5:	xor    r8d,r8d
   140009fa8:	lea    rdx,[rsp+0x50]
   140009fad:	mov    rcx,QWORD PTR [rsp+0x48]
   140009fb2:	call   QWORD PTR [rip+0x2340]        # 0x14000c2f8
   140009fb8:	mov    QWORD PTR [rsp+0x40],rax
   140009fbd:	cmp    QWORD PTR [rsp+0x40],0x0
   140009fc3:	je     0x14000a007
   140009fc5:	mov    QWORD PTR [rsp+0x38],0x0
   140009fce:	lea    rax,[rsp+0x58]
   140009fd3:	mov    QWORD PTR [rsp+0x30],rax
   140009fd8:	lea    rax,[rsp+0x60]
   140009fdd:	mov    QWORD PTR [rsp+0x28],rax
   140009fe2:	lea    rax,[rip+0x6197]        # 0x140010180
   140009fe9:	mov    QWORD PTR [rsp+0x20],rax
   140009fee:	mov    r9,QWORD PTR [rsp+0x40]
   140009ff3:	mov    r8,QWORD PTR [rsp+0x48]
   140009ff8:	mov    rdx,QWORD PTR [rsp+0x50]
   140009ffd:	xor    ecx,ecx
   140009fff:	call   QWORD PTR [rip+0x22e3]        # 0x14000c2e8
   14000a005:	jmp    0x14000a02a
   14000a007:	mov    rax,QWORD PTR [rip+0x620a]        # 0x140010218
   14000a00e:	mov    rax,QWORD PTR [rax]
   14000a011:	mov    QWORD PTR [rip+0x6260],rax        # 0x140010278
   14000a018:	mov    rax,QWORD PTR [rip+0x61f9]        # 0x140010218
   14000a01f:	add    rax,0x8
   14000a023:	mov    QWORD PTR [rip+0x61ee],rax        # 0x140010218
   14000a02a:	mov    rax,QWORD PTR [rip+0x6247]        # 0x140010278
   14000a031:	mov    QWORD PTR [rip+0x60b8],rax        # 0x1400100f0
   14000a038:	mov    rax,QWORD PTR [rsp+0x90]
   14000a040:	mov    QWORD PTR [rip+0x61b9],rax        # 0x140010200
   14000a047:	mov    DWORD PTR [rip+0x608f],0xc0000409        # 0x1400100e0
   14000a051:	mov    DWORD PTR [rip+0x6089],0x1        # 0x1400100e4
   14000a05b:	mov    DWORD PTR [rip+0x6093],0x3        # 0x1400100f8
   14000a065:	mov    eax,0x8
   14000a06a:	imul   rax,rax,0x0
   14000a06e:	lea    rcx,[rip+0x608b]        # 0x140010100
   14000a075:	mov    QWORD PTR [rcx+rax*1],0x2
   14000a07d:	mov    eax,0x8
   14000a082:	imul   rax,rax,0x1
   14000a086:	lea    rcx,[rip+0x6073]        # 0x140010100
   14000a08d:	mov    rdx,QWORD PTR [rip+0x5f74]        # 0x140010008
   14000a094:	mov    QWORD PTR [rcx+rax*1],rdx
   14000a098:	mov    eax,0x8
   14000a09d:	imul   rax,rax,0x2
   14000a0a1:	lea    rcx,[rip+0x6058]        # 0x140010100
   14000a0a8:	mov    rdx,QWORD PTR [rip+0x5f61]        # 0x140010010
   14000a0af:	mov    QWORD PTR [rcx+rax*1],rdx
   14000a0b3:	mov    eax,0x8
   14000a0b8:	imul   rax,rax,0x0
   14000a0bc:	mov    rcx,QWORD PTR [rip+0x5f45]        # 0x140010008
   14000a0c3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000a0c8:	mov    eax,0x8
   14000a0cd:	imul   rax,rax,0x1
   14000a0d1:	mov    rcx,QWORD PTR [rip+0x5f38]        # 0x140010010
   14000a0d8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000a0dd:	lea    rcx,[rip+0x258c]        # 0x14000c670
   14000a0e4:	call   0x140009f3c
   14000a0e9:	add    rsp,0x88
   14000a0f0:	ret    
   14000a0f1:	int3   
   14000a0f2:	int3   
   14000a0f3:	int3   
   14000a0f4:	int3   
   14000a0f5:	int3   
   14000a0f6:	int3   
   14000a0f7:	int3   
   14000a0f8:	int3   
   14000a0f9:	int3   
   14000a0fa:	int3   
   14000a0fb:	int3   
   14000a0fc:	int3   
   14000a0fd:	int3   
   14000a0fe:	int3   
   14000a0ff:	int3   
   14000a100:	mov    QWORD PTR [rsp+0x8],rbx
   14000a105:	push   rdi
   14000a106:	sub    rsp,0x20
   14000a10a:	mov    ebx,edx
   14000a10c:	mov    rdi,rcx
   14000a10f:	call   QWORD PTR [rip+0x22fb]        # 0x14000c410
   14000a115:	test   bl,0x1
   14000a118:	je     0x14000a122
   14000a11a:	mov    rcx,rdi
   14000a11d:	call   0x140009a28
   14000a122:	mov    rax,rdi
   14000a125:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a12a:	add    rsp,0x20
   14000a12e:	pop    rdi
   14000a12f:	ret    
   14000a130:	int3   
   14000a131:	int3   
   14000a132:	int3   
   14000a133:	int3   
   14000a134:	int3   
   14000a135:	int3   
   14000a136:	int3   
   14000a137:	int3   
   14000a138:	sub    rsp,0x38
   14000a13c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a145:	call   0x14000a530
   14000a14a:	nop
   14000a14b:	jmp    0x14000a152
   14000a14d:	mov    rax,QWORD PTR [rsp+0x50]
   14000a152:	add    rsp,0x38
   14000a156:	ret    
   14000a157:	int3   
   14000a158:	int3   
   14000a159:	int3   
   14000a15a:	int3   
   14000a15b:	int3   
   14000a15c:	int3   
   14000a15d:	int3   
   14000a15e:	int3   
   14000a15f:	int3   
   14000a160:	sub    rsp,0x28
   14000a164:	mov    rax,QWORD PTR [rcx]
   14000a167:	cmp    DWORD PTR [rax],0xe06d7363
   14000a16d:	jne    0x14000a192
   14000a16f:	cmp    DWORD PTR [rax+0x18],0x4
   14000a173:	jne    0x14000a192
   14000a175:	mov    ecx,DWORD PTR [rax+0x20]
   14000a178:	lea    eax,[rcx-0x19930520]
   14000a17e:	cmp    eax,0x2
   14000a181:	jbe    0x14000a18b
   14000a183:	cmp    ecx,0x1994000
   14000a189:	jne    0x14000a192
   14000a18b:	call   QWORD PTR [rip+0x226f]        # 0x14000c400
   14000a191:	int3   
   14000a192:	xor    eax,eax
   14000a194:	add    rsp,0x28
   14000a198:	ret    
   14000a199:	int3   
   14000a19a:	int3   
   14000a19b:	int3   
   14000a19c:	int3   
   14000a19d:	int3   
   14000a19e:	int3   
   14000a19f:	int3   
   14000a1a0:	sub    rsp,0x28
   14000a1a4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000a160
   14000a1ab:	call   QWORD PTR [rip+0x20d7]        # 0x14000c288
   14000a1b1:	xor    eax,eax
   14000a1b3:	add    rsp,0x28
   14000a1b7:	ret    
   14000a1b8:	int3   
   14000a1b9:	int3   
   14000a1ba:	int3   
   14000a1bb:	int3   
   14000a1bc:	int3   
   14000a1bd:	int3   
   14000a1be:	jmp    QWORD PTR [rip+0x22d4]        # 0x14000c498
   14000a1c4:	int3   
   14000a1c5:	int3   
   14000a1c6:	int3   
   14000a1c7:	int3   
   14000a1c8:	int3   
   14000a1c9:	int3   
   14000a1ca:	int3   
   14000a1cb:	int3   
   14000a1cc:	sub    rsp,0x18
   14000a1d0:	xor    edx,edx
   14000a1d2:	lea    rax,[rcx-0x1]
   14000a1d6:	cmp    rax,0xfffffffffffffffd
   14000a1da:	ja     0x14000a218
   14000a1dc:	mov    eax,0x5a4d
   14000a1e1:	cmp    WORD PTR [rcx],ax
   14000a1e4:	jne    0x14000a210
   14000a1e6:	cmp    DWORD PTR [rcx+0x3c],edx
   14000a1e9:	jl     0x14000a210
   14000a1eb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   14000a1f2:	jae    0x14000a210
   14000a1f4:	movsxd rax,DWORD PTR [rcx+0x3c]
   14000a1f8:	add    rax,rcx
   14000a1fb:	mov    QWORD PTR [rsp],rax
   14000a1ff:	cmp    DWORD PTR [rax],0x4550
   14000a205:	cmovne rax,rdx
   14000a209:	mov    rdx,rax
   14000a20c:	mov    QWORD PTR [rsp],rax
   14000a210:	jmp    0x14000a218
   14000a212:	xor    edx,edx
   14000a214:	mov    QWORD PTR [rsp],rdx
   14000a218:	mov    rax,rdx
   14000a21b:	add    rsp,0x18
   14000a21f:	ret    
   14000a220:	int3   
   14000a221:	int3   
   14000a222:	int3   
   14000a223:	int3   
   14000a224:	int3   
   14000a225:	int3   
   14000a226:	int3   
   14000a227:	int3   
   14000a228:	rex push rbx
   14000a22a:	sub    rsp,0x20
   14000a22e:	mov    ebx,ecx
   14000a230:	xor    ecx,ecx
   14000a232:	call   QWORD PTR [rip+0x1e58]        # 0x14000c090
   14000a238:	test   rax,rax
   14000a23b:	je     0x14000a265
   14000a23d:	mov    rcx,rax
   14000a240:	call   0x14000a1cc
   14000a245:	test   rax,rax
   14000a248:	je     0x14000a265
   14000a24a:	mov    ecx,0x2
   14000a24f:	cmp    WORD PTR [rax+0x5c],cx
   14000a253:	jne    0x14000a259
   14000a255:	mov    eax,ecx
   14000a257:	jmp    0x14000a267
   14000a259:	cmp    WORD PTR [rax+0x5c],0x3
   14000a25e:	mov    eax,0x1
   14000a263:	je     0x14000a267
   14000a265:	mov    eax,ebx
   14000a267:	add    rsp,0x20
   14000a26b:	pop    rbx
   14000a26c:	ret    
   14000a26d:	int3   
   14000a26e:	int3   
   14000a26f:	int3   
   14000a270:	int3   
   14000a271:	int3   
   14000a272:	int3   
   14000a273:	int3   
   14000a274:	jmp    QWORD PTR [rip+0x2216]        # 0x14000c490
   14000a27a:	int3   
   14000a27b:	int3   
   14000a27c:	int3   
   14000a27d:	int3   
   14000a27e:	int3   
   14000a27f:	int3   
   14000a280:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000a284:	xor    r9d,r9d
   14000a287:	add    r8,rcx
   14000a28a:	mov    r10,rdx
   14000a28d:	movzx  eax,WORD PTR [r8+0x14]
   14000a292:	movzx  r11d,WORD PTR [r8+0x6]
   14000a297:	add    rax,0x18
   14000a29b:	add    rax,r8
   14000a29e:	test   r11d,r11d
   14000a2a1:	je     0x14000a2c1
   14000a2a3:	mov    edx,DWORD PTR [rax+0xc]
   14000a2a6:	cmp    r10,rdx
   14000a2a9:	jb     0x14000a2b5
   14000a2ab:	mov    ecx,DWORD PTR [rax+0x8]
   14000a2ae:	add    ecx,edx
   14000a2b0:	cmp    r10,rcx
   14000a2b3:	jb     0x14000a2c3
   14000a2b5:	inc    r9d
   14000a2b8:	add    rax,0x28
   14000a2bc:	cmp    r9d,r11d
   14000a2bf:	jb     0x14000a2a3
   14000a2c1:	xor    eax,eax
   14000a2c3:	ret    
   14000a2c4:	int3   
   14000a2c5:	int3   
   14000a2c6:	int3   
   14000a2c7:	int3   
   14000a2c8:	int3   
   14000a2c9:	int3   
   14000a2ca:	int3   
   14000a2cb:	int3   
   14000a2cc:	int3   
   14000a2cd:	int3   
   14000a2ce:	int3   
   14000a2cf:	int3   
   14000a2d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a2d5:	push   rdi
   14000a2d6:	sub    rsp,0x20
   14000a2da:	mov    rbx,rcx
   14000a2dd:	lea    rdi,[rip+0xffffffffffff5d1c]        # 0x140000000
   14000a2e4:	mov    rcx,rdi
   14000a2e7:	call   0x14000a330
   14000a2ec:	test   eax,eax
   14000a2ee:	je     0x14000a312
   14000a2f0:	sub    rbx,rdi
   14000a2f3:	mov    rdx,rbx
   14000a2f6:	mov    rcx,rdi
   14000a2f9:	call   0x14000a280
   14000a2fe:	test   rax,rax
   14000a301:	je     0x14000a312
   14000a303:	mov    eax,DWORD PTR [rax+0x24]
   14000a306:	shr    eax,0x1f
   14000a309:	not    eax
   14000a30b:	and    eax,0x1
   14000a30e:	jmp    0x14000a312
   14000a310:	xor    eax,eax
   14000a312:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a317:	add    rsp,0x20
   14000a31b:	pop    rdi
   14000a31c:	ret    
   14000a31d:	int3   
   14000a31e:	int3   
   14000a31f:	int3   
   14000a320:	int3   
   14000a321:	int3   
   14000a322:	int3   
   14000a323:	int3   
   14000a324:	int3   
   14000a325:	int3   
   14000a326:	int3   
   14000a327:	int3   
   14000a328:	int3   
   14000a329:	int3   
   14000a32a:	int3   
   14000a32b:	int3   
   14000a32c:	int3   
   14000a32d:	int3   
   14000a32e:	int3   
   14000a32f:	int3   
   14000a330:	mov    rax,rcx
   14000a333:	mov    ecx,0x5a4d
   14000a338:	cmp    WORD PTR [rax],cx
   14000a33b:	je     0x14000a340
   14000a33d:	xor    eax,eax
   14000a33f:	ret    
   14000a340:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000a344:	add    rcx,rax
   14000a347:	xor    eax,eax
   14000a349:	cmp    DWORD PTR [rcx],0x4550
   14000a34f:	jne    0x14000a35d
   14000a351:	mov    edx,0x20b
   14000a356:	cmp    WORD PTR [rcx+0x18],dx
   14000a35a:	sete   al
   14000a35d:	ret    
   14000a35e:	int3   
   14000a35f:	int3   
   14000a360:	int3   
   14000a361:	int3   
   14000a362:	int3   
   14000a363:	int3   
   14000a364:	mov    QWORD PTR [rsp+0x20],rbx
   14000a369:	push   rbp
   14000a36a:	mov    rbp,rsp
   14000a36d:	sub    rsp,0x20
   14000a371:	and    QWORD PTR [rbp+0x18],0x0
   14000a376:	movabs rbx,0x2b992ddfa232
   14000a380:	mov    rax,QWORD PTR [rip+0x5c81]        # 0x140010008
   14000a387:	cmp    rax,rbx
   14000a38a:	jne    0x14000a41f
   14000a390:	lea    rcx,[rbp+0x18]
   14000a394:	call   QWORD PTR [rip+0x1f8e]        # 0x14000c328
   14000a39a:	mov    rax,QWORD PTR [rbp+0x18]
   14000a39e:	mov    QWORD PTR [rbp+0x10],rax
   14000a3a2:	call   QWORD PTR [rip+0x1f18]        # 0x14000c2c0
   14000a3a8:	mov    eax,eax
   14000a3aa:	xor    QWORD PTR [rbp+0x10],rax
   14000a3ae:	call   QWORD PTR [rip+0x1d4c]        # 0x14000c100
   14000a3b4:	mov    eax,eax
   14000a3b6:	xor    QWORD PTR [rbp+0x10],rax
   14000a3ba:	call   QWORD PTR [rip+0x1f70]        # 0x14000c330
   14000a3c0:	mov    eax,eax
   14000a3c2:	shl    rax,0x18
   14000a3c6:	xor    QWORD PTR [rbp+0x10],rax
   14000a3ca:	call   QWORD PTR [rip+0x1f60]        # 0x14000c330
   14000a3d0:	mov    eax,eax
   14000a3d2:	lea    rcx,[rbp+0x10]
   14000a3d6:	xor    rax,QWORD PTR [rbp+0x10]
   14000a3da:	xor    rax,rcx
   14000a3dd:	lea    rcx,[rbp+0x20]
   14000a3e1:	mov    QWORD PTR [rbp+0x10],rax
   14000a3e5:	call   QWORD PTR [rip+0x1eed]        # 0x14000c2d8
   14000a3eb:	mov    eax,DWORD PTR [rbp+0x20]
   14000a3ee:	movabs rcx,0xffffffffffff
   14000a3f8:	shl    rax,0x20
   14000a3fc:	xor    rax,QWORD PTR [rbp+0x20]
   14000a400:	xor    rax,QWORD PTR [rbp+0x10]
   14000a404:	and    rax,rcx
   14000a407:	movabs rcx,0x2b992ddfa233
   14000a411:	cmp    rax,rbx
   14000a414:	cmove  rax,rcx
   14000a418:	mov    QWORD PTR [rip+0x5be9],rax        # 0x140010008
   14000a41f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a424:	not    rax
   14000a427:	mov    QWORD PTR [rip+0x5be2],rax        # 0x140010010
   14000a42e:	add    rsp,0x20
   14000a432:	pop    rbp
   14000a433:	ret    
   14000a434:	int3   
   14000a435:	int3   
   14000a436:	int3   
   14000a437:	int3   
   14000a438:	int3   
   14000a439:	int3   
   14000a43a:	jmp    QWORD PTR [rip+0x2018]        # 0x14000c458
   14000a440:	int3   
   14000a441:	int3   
   14000a442:	int3   
   14000a443:	int3   
   14000a444:	int3   
   14000a445:	int3   
   14000a446:	jmp    QWORD PTR [rip+0x1f6c]        # 0x14000c3b8
   14000a44c:	int3   
   14000a44d:	int3   
   14000a44e:	int3   
   14000a44f:	int3   
   14000a450:	int3   
   14000a451:	int3   
   14000a452:	jmp    QWORD PTR [rip+0x1fd8]        # 0x14000c430
   14000a458:	int3   
   14000a459:	int3   
   14000a45a:	int3   
   14000a45b:	int3   
   14000a45c:	int3   
   14000a45d:	int3   
   14000a45e:	jmp    QWORD PTR [rip+0x1fc4]        # 0x14000c428
   14000a464:	int3   
   14000a465:	int3   
   14000a466:	int3   
   14000a467:	int3   
   14000a468:	int3   
   14000a469:	int3   
   14000a46a:	jmp    QWORD PTR [rip+0x1fb0]        # 0x14000c420
   14000a470:	int3   
   14000a471:	int3   
   14000a472:	int3   
   14000a473:	int3   
   14000a474:	int3   
   14000a475:	int3   
   14000a476:	jmp    QWORD PTR [rip+0x1f8c]        # 0x14000c408
   14000a47c:	int3   
   14000a47d:	int3   
   14000a47e:	int3   
   14000a47f:	int3   
   14000a480:	int3   
   14000a481:	int3   
   14000a482:	int3   
   14000a483:	int3   
   14000a484:	int3   
   14000a485:	int3   
   14000a486:	int3   
   14000a487:	int3   
   14000a488:	int3   
   14000a489:	int3   
   14000a48a:	int3   
   14000a48b:	int3   
   14000a48c:	int3   
   14000a48d:	int3   
   14000a48e:	int3   
   14000a48f:	int3   
   14000a490:	lea    rax,[rip+0x7b69]        # 0x140012000
   14000a497:	jmp    0x14000a4b0
   14000a49c:	int3   
   14000a49d:	int3   
   14000a49e:	int3   
   14000a49f:	int3   
   14000a4a0:	int3   
   14000a4a1:	int3   
   14000a4a2:	int3   
   14000a4a3:	int3   
   14000a4a4:	int3   
   14000a4a5:	int3   
   14000a4a6:	int3   
   14000a4a7:	int3   
   14000a4a8:	int3   
   14000a4a9:	int3   
   14000a4aa:	int3   
   14000a4ab:	int3   
   14000a4ac:	int3   
   14000a4ad:	int3   
   14000a4ae:	int3   
   14000a4af:	int3   
   14000a4b0:	mov    QWORD PTR [rsp+0x8],rcx
   14000a4b5:	mov    QWORD PTR [rsp+0x10],rdx
   14000a4ba:	mov    QWORD PTR [rsp+0x18],r8
   14000a4bf:	mov    QWORD PTR [rsp+0x20],r9
   14000a4c4:	sub    rsp,0x68
   14000a4c8:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000a4ce:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   14000a4d4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000a4da:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   14000a4e0:	mov    rdx,rax
   14000a4e3:	lea    rcx,[rip+0x4576]        # 0x14000ea60
   14000a4ea:	call   0x140009550
   14000a4ef:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   14000a4f5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000a4fb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   14000a501:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   14000a507:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a50c:	mov    rdx,QWORD PTR [rsp+0x78]
   14000a511:	mov    r8,QWORD PTR [rsp+0x80]
   14000a519:	mov    r9,QWORD PTR [rsp+0x88]
   14000a521:	add    rsp,0x68
   14000a525:	jmp    0x14000a527
   14000a527:	jmp    rax
   14000a529:	int3   
   14000a52a:	int3   
   14000a52b:	int3   
   14000a52c:	int3   
   14000a52d:	int3   
   14000a52e:	int3   
   14000a52f:	int3   
   14000a530:	mov    QWORD PTR [rsp+0x8],rbx
   14000a535:	push   rdi
   14000a536:	sub    rsp,0x20
   14000a53a:	mov    rdi,rcx
   14000a53d:	jmp    0x14000a54e
   14000a53f:	mov    rcx,rdi
   14000a542:	call   0x14000a570
   14000a547:	test   eax,eax
   14000a549:	je     0x14000a55b
   14000a54b:	mov    rcx,rdi
   14000a54e:	call   0x140009e5c
   14000a553:	mov    rbx,rax
   14000a556:	test   rax,rax
   14000a559:	je     0x14000a53f
   14000a55b:	mov    rax,rbx
   14000a55e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a563:	add    rsp,0x20
   14000a567:	pop    rdi
   14000a568:	ret    
   14000a569:	int3   
   14000a56a:	int3   
   14000a56b:	int3   
   14000a56c:	int3   
   14000a56d:	int3   
   14000a56e:	int3   
   14000a56f:	int3   
   14000a570:	jmp    QWORD PTR [rip+0x1e5a]        # 0x14000c3d0
   14000a576:	int3   
   14000a577:	int3   
   14000a578:	int3   
   14000a579:	int3   
   14000a57a:	int3   
   14000a57b:	int3   
   14000a57c:	jmp    QWORD PTR [rip+0x1e46]        # 0x14000c3c8
   14000a582:	int3   
   14000a583:	int3   
   14000a584:	int3   
   14000a585:	int3   
   14000a586:	int3   
   14000a587:	int3   
   14000a588:	sub    rsp,0x28
   14000a58c:	mov    r8,QWORD PTR [r9+0x38]
   14000a590:	mov    rcx,rdx
   14000a593:	mov    rdx,r9
   14000a596:	call   0x14000a5ac
   14000a59b:	mov    eax,0x1
   14000a5a0:	add    rsp,0x28
   14000a5a4:	ret    
   14000a5a5:	int3   
   14000a5a6:	int3   
   14000a5a7:	int3   
   14000a5a8:	int3   
   14000a5a9:	int3   
   14000a5aa:	int3   
   14000a5ab:	int3   
   14000a5ac:	rex push rbx
   14000a5ae:	sub    rsp,0x20
   14000a5b2:	mov    r11d,DWORD PTR [r8]
   14000a5b5:	mov    rbx,rdx
   14000a5b8:	and    r11d,0xfffffff8
   14000a5bc:	mov    r9,rcx
   14000a5bf:	test   BYTE PTR [r8],0x4
   14000a5c3:	mov    r10,rcx
   14000a5c6:	je     0x14000a5db
   14000a5c8:	mov    eax,DWORD PTR [r8+0x8]
   14000a5cc:	movsxd r10,DWORD PTR [r8+0x4]
   14000a5d0:	neg    eax
   14000a5d2:	add    r10,rcx
   14000a5d5:	movsxd rcx,eax
   14000a5d8:	and    r10,rcx
   14000a5db:	movsxd rax,r11d
   14000a5de:	mov    rdx,QWORD PTR [rax+r10*1]
   14000a5e2:	mov    rax,QWORD PTR [rbx+0x10]
   14000a5e6:	mov    ecx,DWORD PTR [rax+0x8]
   14000a5e9:	add    rcx,QWORD PTR [rbx+0x8]
   14000a5ed:	test   BYTE PTR [rcx+0x3],0xf
   14000a5f1:	je     0x14000a5ff
   14000a5f3:	movzx  eax,BYTE PTR [rcx+0x3]
   14000a5f7:	and    eax,0xfffffff0
   14000a5fa:	cdqe   
   14000a5fc:	add    r9,rax
   14000a5ff:	xor    r9,rdx
   14000a602:	mov    rcx,r9
   14000a605:	add    rsp,0x20
   14000a609:	pop    rbx
   14000a60a:	jmp    0x140009e20
   14000a60f:	int3   
   14000a610:	int3   
   14000a611:	int3   
   14000a612:	int3   
   14000a613:	int3   
   14000a614:	int3   
   14000a615:	int3   
   14000a616:	jmp    QWORD PTR [rip+0x1da4]        # 0x14000c3c0
   14000a61c:	int3   
   14000a61d:	int3   
   14000a61e:	int3   
   14000a61f:	int3   
   14000a620:	int3   
   14000a621:	int3   
   14000a622:	jmp    QWORD PTR [rip+0x1e28]        # 0x14000c450
   14000a628:	int3   
   14000a629:	int3   
   14000a62a:	int3   
   14000a62b:	int3   
   14000a62c:	int3   
   14000a62d:	int3   
   14000a62e:	int3   
   14000a62f:	int3   
   14000a630:	int3   
   14000a631:	int3   
   14000a632:	int3   
   14000a633:	int3   
   14000a634:	int3   
   14000a635:	int3   
   14000a636:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a640:	jmp    rax
   14000a642:	int3   
   14000a643:	int3   
   14000a644:	int3   
   14000a645:	int3   
   14000a646:	int3   
   14000a647:	int3   
   14000a648:	int3   
   14000a649:	int3   
   14000a64a:	int3   
   14000a64b:	int3   
   14000a64c:	int3   
   14000a64d:	int3   
   14000a64e:	int3   
   14000a64f:	int3   
   14000a650:	int3   
   14000a651:	int3   
   14000a652:	int3   
   14000a653:	int3   
   14000a654:	int3   
   14000a655:	int3   
   14000a656:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a660:	sub    rsp,0x10
   14000a664:	mov    QWORD PTR [rsp],r10
   14000a668:	mov    QWORD PTR [rsp+0x8],r11
   14000a66d:	xor    r11,r11
   14000a670:	lea    r10,[rsp+0x18]
   14000a675:	sub    r10,rax
   14000a678:	cmovb  r10,r11
   14000a67c:	mov    r11,QWORD PTR gs:0x10
   14000a685:	cmp    r10,r11
   14000a688:	jae    0x14000a69f
   14000a68a:	and    r10w,0xf000
   14000a690:	lea    r11,[r11-0x1000]
   14000a697:	test   BYTE PTR [r11],r11b
   14000a69a:	cmp    r10,r11
   14000a69d:	jne    0x14000a690
   14000a69f:	mov    r10,QWORD PTR [rsp]
   14000a6a3:	mov    r11,QWORD PTR [rsp+0x8]
   14000a6a8:	add    rsp,0x10
   14000a6ac:	ret    
   14000a6ad:	int3   
   14000a6ae:	int3   
   14000a6af:	int3   
   14000a6b0:	int3   
   14000a6b1:	int3   
   14000a6b2:	int3   
   14000a6b3:	int3   
   14000a6b4:	int3   
   14000a6b5:	int3   
   14000a6b6:	rex push rbp
   14000a6b8:	sub    rsp,0x20
   14000a6bc:	mov    rbp,rdx
   14000a6bf:	mov    rax,QWORD PTR [rcx]
   14000a6c2:	mov    rdx,rcx
   14000a6c5:	mov    ecx,DWORD PTR [rax]
   14000a6c7:	call   0x14000a1be
   14000a6cc:	nop
   14000a6cd:	add    rsp,0x20
   14000a6d1:	pop    rbp
   14000a6d2:	ret    
   14000a6d3:	int3   
   14000a6d4:	int3   
   14000a6d5:	int3   
   14000a6d6:	int3   
   14000a6d7:	int3   
   14000a6d8:	int3   
   14000a6d9:	int3   
   14000a6da:	rex push rbp
   14000a6dc:	sub    rsp,0x20
   14000a6e0:	mov    rbp,rdx
   14000a6e3:	mov    ecx,0x8
   14000a6e8:	call   0x14000a45e
   14000a6ed:	nop
   14000a6ee:	add    rsp,0x20
   14000a6f2:	pop    rbp
   14000a6f3:	ret    
   14000a6f4:	int3   
   14000a6f5:	int3   
   14000a6f6:	int3   
   14000a6f7:	int3   
   14000a6f8:	int3   
   14000a6f9:	int3   
   14000a6fa:	int3   
   14000a6fb:	mov    QWORD PTR [rsp+0x10],rdx
   14000a700:	push   rbp
   14000a701:	sub    rsp,0x20
   14000a705:	mov    rbp,rdx
   14000a708:	and    QWORD PTR [rbp+0x50],0x0
   14000a70d:	lea    rax,[rip+0xfffffffffffffa39]        # 0x14000a14d
   14000a714:	add    rsp,0x20
   14000a718:	pop    rbp
   14000a719:	ret    
   14000a71a:	int3   
   14000a71b:	int3   
   14000a71c:	int3   
   14000a71d:	int3   
   14000a71e:	int3   
   14000a71f:	int3   
   14000a720:	int3   
   14000a721:	int3   
   14000a722:	int3   
   14000a723:	int3   
   14000a724:	int3   
   14000a725:	int3   
   14000a726:	int3   
   14000a727:	int3   
   14000a728:	int3   
   14000a729:	int3   
   14000a72a:	int3   
   14000a72b:	int3   
   14000a72c:	int3   
   14000a72d:	int3   
   14000a72e:	int3   
   14000a72f:	int3   
   14000a730:	rex push rbp
   14000a732:	sub    rsp,0x20
   14000a736:	mov    rbp,rdx
   14000a739:	mov    rax,QWORD PTR [rcx]
   14000a73c:	xor    ecx,ecx
   14000a73e:	cmp    DWORD PTR [rax],0xc0000005
   14000a744:	sete   cl
   14000a747:	mov    eax,ecx
   14000a749:	add    rsp,0x20
   14000a74d:	pop    rbp
   14000a74e:	ret    
   14000a74f:	int3   
   14000a750:	int3   
   14000a751:	int3   
   14000a752:	int3   
   14000a753:	int3   
   14000a754:	int3   
   14000a755:	int3   
   14000a756:	int3   
   14000a757:	int3   
   14000a758:	int3   
   14000a759:	int3   
   14000a75a:	int3   
   14000a75b:	int3   
   14000a75c:	int3   
   14000a75d:	int3   
   14000a75e:	int3   
   14000a75f:	int3   
   14000a760:	mov    QWORD PTR [rsp+0x8],rbx
   14000a765:	push   rdi
   14000a766:	sub    rsp,0x20
   14000a76a:	lea    rbx,[rip+0x608f]        # 0x140010800
   14000a771:	mov    rdi,QWORD PTR [rbx]
   14000a774:	jmp    0x14000a783
   14000a776:	mov    rcx,rdi
   14000a779:	mov    rdi,QWORD PTR [rdi+0x10]
   14000a77d:	call   QWORD PTR [rip+0x1c5d]        # 0x14000c3e0
   14000a783:	test   rdi,rdi
   14000a786:	jne    0x14000a776
   14000a788:	mov    QWORD PTR [rbx],rdi
   14000a78b:	lea    rax,[rip+0x610e]        # 0x1400108a0
   14000a792:	add    rbx,0x8
   14000a796:	cmp    rbx,rax
   14000a799:	jne    0x14000a771
   14000a79b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a7a0:	add    rsp,0x20
   14000a7a4:	pop    rdi
   14000a7a5:	ret    
   14000a7a6:	int3   
   14000a7a7:	int3   
   14000a7a8:	int3   
   14000a7a9:	int3   
   14000a7aa:	int3   
   14000a7ab:	int3   
   14000a7ac:	int3   
   14000a7ad:	int3   
   14000a7ae:	int3   
   14000a7af:	int3   
   14000a7b0:	mov    QWORD PTR [rsp+0x18],rbx
   14000a7b5:	push   rdi
   14000a7b6:	sub    rsp,0x20
   14000a7ba:	lea    r9,[rsp+0x38]
   14000a7bf:	xor    edx,edx
   14000a7c1:	lea    r8,[rsp+0x30]
   14000a7c6:	lea    rcx,[rip+0x60d3]        # 0x1400108a0
   14000a7cd:	call   QWORD PTR [rip+0x188d]        # 0x14000c060
   14000a7d3:	test   eax,eax
   14000a7d5:	je     0x14000a7fa
   14000a7d7:	cmp    DWORD PTR [rsp+0x30],0x0
   14000a7dc:	jne    0x14000a7fa
   14000a7de:	mov    rdi,QWORD PTR [rsp+0x38]
   14000a7e3:	mov    rax,QWORD PTR [rdi]
   14000a7e6:	mov    rbx,QWORD PTR [rax+0x18]
   14000a7ea:	mov    rcx,rbx
   14000a7ed:	call   QWORD PTR [rip+0x1cfd]        # 0x14000c4f0
   14000a7f3:	xor    edx,edx
   14000a7f5:	mov    rcx,rdi
   14000a7f8:	call   rbx
   14000a7fa:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a7ff:	add    rsp,0x20
   14000a803:	pop    rdi
   14000a804:	ret    
   14000a805:	int3   
   14000a806:	int3   
   14000a807:	int3   
   14000a808:	int3   
   14000a809:	int3   
   14000a80a:	int3   
   14000a80b:	int3   
   14000a80c:	int3   
   14000a80d:	int3   
   14000a80e:	int3   
   14000a80f:	int3   
   14000a810:	mov    QWORD PTR [rsp+0x18],rbx
   14000a815:	push   rdi
   14000a816:	sub    rsp,0x20
   14000a81a:	lea    r9,[rsp+0x38]
   14000a81f:	xor    edx,edx
   14000a821:	lea    r8,[rsp+0x30]
   14000a826:	lea    rcx,[rip+0x5f6b]        # 0x140010798
   14000a82d:	call   QWORD PTR [rip+0x182d]        # 0x14000c060
   14000a833:	test   eax,eax
   14000a835:	je     0x14000a85a
   14000a837:	cmp    DWORD PTR [rsp+0x30],0x0
   14000a83c:	jne    0x14000a85a
   14000a83e:	mov    rdi,QWORD PTR [rsp+0x38]
   14000a843:	mov    rax,QWORD PTR [rdi]
   14000a846:	mov    rbx,QWORD PTR [rax+0x18]
   14000a84a:	mov    rcx,rbx
   14000a84d:	call   QWORD PTR [rip+0x1c9d]        # 0x14000c4f0
   14000a853:	xor    edx,edx
   14000a855:	mov    rcx,rdi
   14000a858:	call   rbx
   14000a85a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a85f:	add    rsp,0x20
   14000a863:	pop    rdi
   14000a864:	ret    
   14000a865:	int3   
   14000a866:	int3   
   14000a867:	int3   
   14000a868:	int3   
   14000a869:	int3   
   14000a86a:	int3   
   14000a86b:	int3   
   14000a86c:	int3   
   14000a86d:	int3   
   14000a86e:	int3   
   14000a86f:	int3   
   14000a870:	lea    rcx,[rip+0x5ee9]        # 0x140010760
   14000a877:	jmp    0x140006eac
