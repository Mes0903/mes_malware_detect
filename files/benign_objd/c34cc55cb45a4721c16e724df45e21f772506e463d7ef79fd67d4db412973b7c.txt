
c34cc55cb45a4721c16e724df45e21f772506e463d7ef79fd67d4db412973b7c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000402000 <.text>:
  402000:	rex.W add BYTE PTR [rax],al
  402003:	add    BYTE PTR [rdx],al
  402005:	add    BYTE PTR [rip+0x2c6000],al        # 0x6c800b
  40200b:	add    BYTE PTR [rbx+rsi*1+0x90000],dh
  402012:	add    BYTE PTR [rax],al
  402014:	adc    al,0x0
  402016:	add    BYTE PTR [rsi],al
  402018:	rex sub DWORD PTR [rax],eax
  40201b:	add    BYTE PTR [rip+0x50000003],bl        # 0x50402024
  402021:	and    BYTE PTR [rax],al
  402023:	add    BYTE PTR [rax+0x0],al
	...
  40204d:	add    BYTE PTR [rax],al
  40204f:	add    bh,dh
  402051:	xchg   ebp,eax
  402052:	mov    esi,0x3d78b5c3
  402057:	retf   0x6849
  40205a:	sub    eax,0xdc47b5b3
  40205f:	push   rsi
  402060:	(bad)  
  402061:	int3   
  402062:	mov    WORD PTR [rip+0xd526bf5],?        # 0xd928c5d
  402068:	stos   BYTE PTR es:[rdi],al
  402069:	fwait
  40206a:	xchg   ecx,eax
  40206b:	lods   eax,DWORD PTR ds:[rsi]
  40206c:	mov    al,0x2f
  40206e:	(bad)  
  40206f:	jae    0x4020b8
  402071:	icebp  
  402072:	sub    al,0x57
  402074:	(bad)  
  402076:	xchg   esp,eax
  402077:	fstp   DWORD PTR [rbp+0x29d6ac38]
  40207e:	push   0xffffffffffffff9b
  402080:	fimul  WORD PTR [rcx+riz*8+0x7d23658e]
  402087:	out    dx,al
  402088:	mov    edi,0x8f7894aa
  40208d:	push   rdx
  40208e:	push   0xffffffffe995763b
  402093:	leave  
  402094:	cmp    DWORD PTR [rip+0x45c4535a],eax        # 0x460473f4
  40209a:	push   rbx
  40209b:	pop    rdx
  40209c:	sbb    DWORD PTR [rbx+0x36],ecx
  40209f:	pop    rbx
  4020a0:	pop    rsp
  4020a1:	adc    eax,0x112e153
  4020a6:	mov    BYTE PTR [rax+0x10],bl
  4020a9:	add    DWORD PTR [rdi+0x3],edi
  4020ac:	neg    DWORD PTR [rbx+rcx*1+0x2b]
  4020b0:	and    al,0x49
  4020b2:	and    eax,0x29edc7f1
  4020b7:	cs mov ch,0x4d
  4020ba:	xor    al,0xd6
  4020bc:	jo     0x4020a4
  4020be:	ins    DWORD PTR es:[rdi],dx
  4020bf:	pop    r10
  4020c1:	cmp    dh,dh
  4020c3:	(bad)  
  4020c4:	rex.WXB
  4020c5:	cs mov ecx,0x8ad99fcb
  4020cb:	movabs ds:0x1721ac4ddeac9,eax
  4020d4:	add    BYTE PTR [rax+0x2a],dh
  4020d7:	(bad)  
  4020d8:	add    ch,BYTE PTR [rax]
  4020da:	adc    BYTE PTR [rax],al
  4020dc:	add    BYTE PTR [rdx],cl
  4020de:	sub    bl,BYTE PTR [rdx]
  4020e0:	sub    BYTE PTR [rsi],cl
  4020e2:	add    BYTE PTR [rax],al
  4020e4:	(bad)  
  4020e5:	sub    bl,BYTE PTR [rsi]
  4020e7:	add    ch,BYTE PTR [rax]
  4020e9:	sldt   WORD PTR [rax]
  4020ec:	(bad)  
  4020ed:	sub    ch,BYTE PTR [rsi]
  4020ef:	jb     0x402120
  4020f1:	add    BYTE PTR [rax],al
  4020f3:	jo     0x40211d
  4020f5:	adc    BYTE PTR [rax],al
  4020f7:	add    BYTE PTR [rsi],al
  4020f9:	sub    dh,BYTE PTR [rdx]
  4020fb:	jb     0x40215e
  4020fd:	add    BYTE PTR [rax],al
  4020ff:	jo     0x402103
  402101:	sub    BYTE PTR [rcx],dl
  402103:	add    BYTE PTR [rax],al
  402105:	(bad)  
  402106:	sub    dh,BYTE PTR [rsi]
  402108:	jb     0x402189
  40210a:	add    BYTE PTR [rax],al
  40210c:	jo     0x402110
  40210e:	add    ebp,DWORD PTR [rax]
  402110:	adc    al,BYTE PTR [rax]
  402112:	add    BYTE PTR [rsi],al
  402114:	sub    dh,BYTE PTR [rdx]
  402116:	jb     0x4020bd
  402118:	add    BYTE PTR [rax],al
  40211a:	jo     0x40211e
  40211c:	sub    BYTE PTR [rcx],dl
  40211e:	add    BYTE PTR [rax],al
  402120:	(bad)  
  402121:	sub    dh,BYTE PTR [rdx]
  402123:	jb     0x4020e0
  402125:	add    BYTE PTR [rax],al
  402127:	jo     0x40212b
  402129:	sub    BYTE PTR [rcx],dl
  40212b:	add    BYTE PTR [rax],al
  40212d:	(bad)  
  40212e:	sub    dh,BYTE PTR [rdx]
  402130:	jb     0x40210f
  402132:	add    BYTE PTR [rax],al
  402134:	jo     0x402138
  402136:	sub    BYTE PTR [rcx],dl
  402138:	add    BYTE PTR [rax],al
  40213a:	(bad)  
  40213b:	sub    dh,BYTE PTR [rdx]
  40213d:	jb     0x402128
  40213f:	add    BYTE PTR [rax],al
  402141:	jo     0x402145
  402143:	sub    BYTE PTR [rcx],dl
  402145:	add    BYTE PTR [rax],al
  402147:	(bad)  
  402148:	sub    al,BYTE PTR [rsi+0x72]
  40214b:	(bad)  
  40214c:	add    DWORD PTR [rax],eax
  40214e:	jo     0x402152
  402150:	mov    WORD PTR [rdx],ds
  402152:	add    BYTE PTR [rax],al
  402154:	add    DWORD PTR [rax],ebp
  402156:	adc    DWORD PTR [rax],eax
  402158:	add    BYTE PTR [rsi],al
  40215a:	sub    bl,BYTE PTR [rsi]
  40215c:	add    ch,BYTE PTR [rax]
  40215e:	adc    BYTE PTR [rax],al
  402160:	add    BYTE PTR [rdx],cl
  402162:	sub    bl,BYTE PTR [rdx]
  402164:	jle    0x40217d
  402166:	add    BYTE PTR [rax],al
  402168:	add    al,0x2a
  40216a:	(bad)  
  40216b:	add    al,BYTE PTR [rax+0x4000017]
  402171:	sub    al,BYTE PTR [rsi+0x7e]
  402174:	(bad)  
  402175:	add    BYTE PTR [rax],al
  402177:	add    al,0x2
  402179:	jle    0x402192
  40217b:	add    BYTE PTR [rax],al
  40217d:	add    al,0x6f
  40217f:	adc    DWORD PTR [rax],eax
  402181:	add    BYTE PTR [rdx],cl
  402183:	sub    dl,BYTE PTR [rbx]
  402185:	xor    BYTE PTR [rip+0x2700],al        # 0x40488b
  40218b:	add    BYTE PTR [rcx],al
  40218d:	add    BYTE PTR [rax],al
  40218f:	adc    DWORD PTR [rax],ebp
  402191:	adc    al,BYTE PTR [rax]
  402193:	add    BYTE PTR [rdx],cl
  402195:	jle    0x4021ad
  402197:	add    BYTE PTR [rax],al
  402199:	add    al,0x2
  40219b:	jle    0x4021b4
  40219d:	add    BYTE PTR [rax],al
  40219f:	add    al,0x6f
  4021a1:	adc    DWORD PTR [rax],eax
  4021a3:	add    BYTE PTR [rdx],cl
  4021a5:	(bad)  
  4021a6:	lea    eax,[rcx]
  4021a8:	add    BYTE PTR [rax],al
  4021aa:	add    DWORD PTR [rdx],ecx
  4021ac:	(bad)  
  4021ad:	(bad)  
  4021ae:	add    esp,DWORD PTR [rdx+0x132806]
  4021b4:	add    BYTE PTR [rdx],cl
  4021b6:	sub    al,BYTE PTR [rax]
  4021b8:	adc    esi,DWORD PTR [rax]
  4021ba:	add    eax,0x2b00
  4021bf:	add    BYTE PTR [rcx],al
  4021c1:	add    BYTE PTR [rax],al
  4021c3:	adc    DWORD PTR [rax],ebp
  4021c5:	adc    al,BYTE PTR [rax]
  4021c7:	add    BYTE PTR [rdx],cl
  4021c9:	jle    0x4021e1
  4021cb:	add    BYTE PTR [rax],al
  4021cd:	add    al,0x2
  4021cf:	jle    0x4021e8
  4021d1:	add    BYTE PTR [rax],al
  4021d3:	add    al,0x6f
  4021d5:	adc    DWORD PTR [rax],eax
  4021d7:	add    BYTE PTR [rdx],cl
  4021d9:	sbb    BYTE PTR [rbp+0x1000001],cl
  4021df:	or     al,BYTE PTR [rsi]
  4021e1:	(bad)  
  4021e2:	add    esp,DWORD PTR [rdx-0x5dfbe8fa]
  4021e8:	(bad)  
  4021e9:	sub    BYTE PTR [rbx],dl
  4021eb:	add    BYTE PTR [rax],al
  4021ed:	or     ch,BYTE PTR [rdx]
  4021ef:	rcl    al,cl
  4021f1:	add    eax,DWORD PTR [rax]
  4021f3:	add    BYTE PTR [rdx],al
  4021f5:	sub    BYTE PTR [rax+rax*1],dl
  4021f8:	add    BYTE PTR [rdx],cl
  4021fa:	outs   dx,DWORD PTR ds:[rsi]
  4021fb:	adc    eax,0xd00a0000
  402200:	add    eax,DWORD PTR [rax]
  402202:	add    BYTE PTR [rdx],al
  402204:	sub    BYTE PTR [rax+rax*1],dl
  402207:	add    BYTE PTR [rdx],cl
  402209:	outs   dx,DWORD PTR ds:[rsi]
  40220a:	(bad)  
  40220b:	add    BYTE PTR [rax],al
  40220d:	or     ch,BYTE PTR [rdi+0x17]
  402210:	add    BYTE PTR [rax],al
  402212:	or     dh,BYTE PTR [rbx+0x18]
  402215:	add    BYTE PTR [rax],al
  402217:	or     al,BYTE PTR [rax+0x4000016]
  40221d:	adc    al,0x80
  40221f:	(bad)  
  402220:	add    BYTE PTR [rax],al
  402222:	add    al,0x2a
  402224:	sbb    esi,DWORD PTR [rax]
  402226:	add    eax,DWORD PTR [rax]
  402228:	jne    0x40222a
  40222a:	add    BYTE PTR [rax],al
  40222c:	add    al,BYTE PTR [rax]
  40222e:	add    BYTE PTR [rcx],dl
  402230:	add    ch,BYTE PTR [rsi+rdx*1]
  402233:	add    cl,BYTE PTR [rsi+0x10331769]
  402239:	add    dl,BYTE PTR [rsi]
  40223b:	(bad)  
  40223c:	jb     0x402273
  40223e:	add    DWORD PTR [rax],eax
  402240:	jo     0x40225d
  402242:	sub    BYTE PTR [rcx],bl
  402244:	add    BYTE PTR [rax],al
  402246:	or     ch,BYTE PTR [rsp+rcx*1]
  402249:	sub    BYTE PTR [rip+0x28060000],al        # 0x2846224f
  40224f:	sbb    al,BYTE PTR [rax]
  402251:	add    BYTE PTR [rdx],cl
  402253:	sbb    BYTE PTR [rdx],ch
  402255:	jle    0x402272
  402257:	add    BYTE PTR [rax],al
  402259:	or     dh,BYTE PTR [rdx+0x3f]
  40225c:	add    DWORD PTR [rax],eax
  40225e:	jo     0x4022cf
  402260:	sbb    al,0x0
  402262:	add    BYTE PTR [rdx],cl
  402264:	or     bh,BYTE PTR [rsi+0x1b]
  402267:	add    BYTE PTR [rax],al
  402269:	or     dh,BYTE PTR [rdx+0x7d]
  40226c:	add    DWORD PTR [rax],eax
  40226e:	jo     0x4022df
  402270:	sbb    al,0x0
  402272:	add    BYTE PTR [rdx],cl
  402274:	or     eax,DWORD PTR [rsi]
  402276:	sub    BYTE PTR [rip+0x2c060000],dl        # 0x2c46227c
  40227c:	or     BYTE PTR [rdi],al
  40227e:	sub    BYTE PTR [rip+0x2d060000],dl        # 0x2d462284
  402284:	add    al,0x17
  402286:	or     al,0xde
  402288:	sbb    bl,dh
  40228a:	or     al,BYTE PTR [rdi]
  40228c:	sub    al,0x6
  40228e:	(bad)  
  40228f:	outs   dx,DWORD PTR ds:[rsi]
  402290:	sbb    eax,0xdc0a0000
  402295:	fimul  WORD PTR [rdx]
  402297:	(bad)  
  402298:	sub    al,0x6
  40229a:	(bad)  
  40229b:	outs   dx,DWORD PTR ds:[rsi]
  40229c:	sbb    eax,0xdc0a0000
  4022a1:	(bad)  
  4022a2:	sub    cl,BYTE PTR [rax]
  4022a4:	sub    al,BYTE PTR [rax]
  4022a6:	add    BYTE PTR [rax],al
  4022a8:	add    DWORD PTR [rax+rax*1],ebx
  4022ab:	add    BYTE PTR [rdx],al
  4022ad:	add    BYTE PTR [rbp+0x0],al
  4022b0:	(bad)  
  4022b1:	pop    rbx
  4022b2:	add    BYTE PTR [rdx],cl
  4022b4:	add    BYTE PTR [rax],al
  4022b6:	add    BYTE PTR [rax],al
  4022b8:	add    al,BYTE PTR [rax]
  4022ba:	xor    eax,0x673200
  4022bf:	or     al,BYTE PTR [rax]
  4022c1:	add    BYTE PTR [rax],al
  4022c3:	add    BYTE PTR [rbx],bl
  4022c5:	xor    BYTE PTR [rdx],al
  4022c7:	add    BYTE PTR [rax+0x3000000],bl
  4022cd:	add    BYTE PTR [rax],al
  4022cf:	adc    DWORD PTR [rdx],eax
  4022d1:	sub    eax,0x22a1702
  4022d6:	outs   dx,DWORD PTR ds:[rsi]
  4022d7:	(bad)  
  4022d8:	add    BYTE PTR [rax],al
  4022da:	or     ch,BYTE PTR [rax]
  4022dc:	(bad)  
  4022dd:	add    BYTE PTR [rax],al
  4022df:	(bad)  
  4022e0:	fisub  WORD PTR [rcx]
  4022e2:	or     al,BYTE PTR [rdx]
  4022e4:	outs   dx,DWORD PTR ds:[rsi]
  4022e5:	(bad)  
  4022e6:	add    BYTE PTR [rax],al
  4022e8:	or     ch,BYTE PTR [rax]
  4022ea:	(bad)  
  4022eb:	add    BYTE PTR [rax],al
  4022ed:	(bad)  
  4022ee:	sub    BYTE PTR [rdx],bl
  4022f0:	add    BYTE PTR [rax],al
  4022f2:	or     al,BYTE PTR [rsi]
  4022f4:	outs   dx,DWORD PTR ds:[rsi]
  4022f5:	(bad)  
  4022f6:	add    BYTE PTR [rax],al
  4022f8:	or     ch,BYTE PTR [rax]
  4022fa:	sbb    al,BYTE PTR [rax]
  4022fc:	add    BYTE PTR [rdx],cl
  4022fe:	(bad)  
  4022ff:	adc    eax,DWORD PTR [rsi+rbx*8]
  402302:	(bad)  
  402303:	(bad)  
  402304:	or     eax,DWORD PTR [rdx]
  402306:	outs   dx,DWORD PTR ds:[rsi]
  402307:	and    BYTE PTR [rax],al
  402309:	add    BYTE PTR [rdx],cl
  40230b:	adc    eax,DWORD PTR [rip+0x2b061316]        # 0x2b463627
  402311:	rex.RX adc DWORD PTR [rip+0xc9a0611],r8d        # 0xcda2929
  402318:	add    cl,BYTE PTR [rax]
  40231a:	outs   dx,DWORD PTR ds:[rsi]
  40231b:	sbb    al,0x0
  40231d:	add    BYTE PTR [rdx],cl
  40231f:	or     eax,0x152809
  402324:	add    BYTE PTR [rsi],al
  402326:	sub    eax,0x58170704
  40232b:	or     ebx,esi
  40232d:	or     cl,BYTE PTR [rcx]
  40232f:	sub    al,0x6
  402331:	or     DWORD PTR [rdi+0x1d],ebp
  402334:	add    BYTE PTR [rax],al
  402336:	or     bl,ah
  402338:	ficomp WORD PTR [rax]
  40233a:	add    ch,BYTE PTR es:[rdi+0x1e]
  40233e:	add    BYTE PTR [rax],al
  402340:	or     cl,BYTE PTR [rax]
  402342:	sub    BYTE PTR [rdi],al
  402344:	add    BYTE PTR [rax],al
  402346:	(bad)  
  402347:	sub    BYTE PTR [rdx],bl
  402349:	add    BYTE PTR [rax],al
  40234b:	or     al,BYTE PTR [rdi]
  40234d:	(bad)  
  40234e:	pop    rax
  40234f:	or     ebx,esi
  402351:	add    BYTE PTR [rcx],dl
  402353:	(bad)  
  402354:	(bad)  
  402355:	pop    rax
  402356:	adc    eax,DWORD PTR [rsi]
  402358:	adc    DWORD PTR [rsi],eax
  40235a:	adc    DWORD PTR [rip+0xffffffffb232698e],eax        # 0xffffffffb2728cee
  402360:	(bad)  
  402361:	(bad)  
  402362:	inc    BYTE PTR [rcx]
  402364:	sub    dl,BYTE PTR [rcx]
  402366:	add    al,0x2a
  402368:	add    DWORD PTR [rax],ebp
  40236a:	add    BYTE PTR [rax],al
  40236c:	add    BYTE PTR [rax],al
  40236e:	add    eax,0x120d00
  402373:	and    DWORD PTR [rcx],ecx
  402375:	add    BYTE PTR [rax],al
  402377:	add    DWORD PTR [rdx],eax
  402379:	add    BYTE PTR [rax+0x0],dl
  40237c:	(bad)  
  40237d:	pop    rsi
  40237e:	add    BYTE PTR [rdx],cl
  402380:	add    BYTE PTR [rax],al
  402382:	add    BYTE PTR [rax],al
  402384:	add    BYTE PTR [rax],al
  402386:	rex.W add BYTE PTR [rdx],spl
  402389:	push   0x0
  40238b:	sbb    BYTE PTR [rip+0x1b010000],ah        # 0x1b412391
  402391:	xor    BYTE PTR [rax],cl
  402393:	add    BYTE PTR [rdx+0x4000000],cl
  402399:	add    BYTE PTR [rax],al
  40239b:	adc    DWORD PTR [rdx],eax
  40239d:	sub    BYTE PTR [rsi],bl
  40239f:	add    BYTE PTR [rax],al
  4023a1:	(bad)  
  4023a2:	or     al,BYTE PTR [rsi]
  4023a4:	sbb    bl,BYTE PTR [rdx]
  4023a6:	jle    0x4023c9
  4023a8:	add    BYTE PTR [rax],al
  4023aa:	or     bh,BYTE PTR [rsi+0x21]
  4023ad:	add    BYTE PTR [rax],al
  4023af:	or     dl,BYTE PTR [rdx]
  4023b1:	add    DWORD PTR [rsi+0x21],edi
  4023b4:	add    BYTE PTR [rax],al
  4023b6:	or     dl,BYTE PTR [rdx]
  4023b8:	add    ch,BYTE PTR [rax]
  4023ba:	sub    eax,DWORD PTR [rax]
  4023bc:	add    BYTE PTR [rsi],al
  4023be:	sub    BYTE PTR [rcx],ah
  4023c0:	add    BYTE PTR [rax],al
  4023c2:	(bad)  
  4023c3:	or     BYTE PTR [rax],ch
  4023c5:	(bad)  
  4023c6:	add    BYTE PTR [rax],al
  4023c8:	(bad)  
  4023c9:	or     eax,0x1d2809
  4023ce:	add    BYTE PTR [rsi],al
  4023d0:	sub    eax,0x8280214
  4023d5:	add    BYTE PTR [rax],al
  4023d7:	(bad)  
  4023d8:	sub    BYTE PTR [rdx],bl
  4023da:	add    BYTE PTR [rax],al
  4023dc:	or     al,BYTE PTR [rsi]
  4023de:	or     DWORD PTR [rax],ebp
  4023e0:	sbb    al,BYTE PTR [rax]
  4023e2:	add    BYTE PTR [rsi],al
  4023e4:	sub    ebp,DWORD PTR [rdi]
  4023e6:	or     DWORD PTR [rax],ebp
  4023e8:	sbb    al,0x0
  4023ea:	add    BYTE PTR [rsi],al
  4023ec:	sub    al,0x1c
  4023ee:	or     BYTE PTR [rax],ch
  4023f0:	sbb    BYTE PTR [rax],al
  4023f2:	add    BYTE PTR [rsi],al
  4023f4:	sub    eax,0x9280214
  4023f9:	add    BYTE PTR [rax],al
  4023fb:	(bad)  
  4023fc:	sub    BYTE PTR [rdx],bl
  4023fe:	add    BYTE PTR [rax],al
  402400:	or     al,BYTE PTR [rsi]
  402402:	or     BYTE PTR [rax],ch
  402404:	sbb    DWORD PTR [rax],eax
  402406:	add    BYTE PTR [rsi],al
  402408:	sub    ecx,DWORD PTR [rbx]
  40240a:	add    ch,BYTE PTR [rax]
  40240c:	or     al,BYTE PTR [rax]
  40240e:	add    BYTE PTR [rsi],al
  402410:	sub    BYTE PTR [rdx],bl
  402412:	add    BYTE PTR [rax],al
  402414:	or     bl,dh
  402416:	(bad)  
  402417:	or     BYTE PTR [rax],ch
  402419:	sub    eax,0x26060000
  40241e:	jle    0x402441
  402420:	add    BYTE PTR [rax],al
  402422:	or     cl,BYTE PTR [rsp+rbx*8]
  402425:	sub    al,BYTE PTR [rax]
  402427:	add    BYTE PTR [rcx],al
  402429:	adc    BYTE PTR [rax],al
  40242b:	add    BYTE PTR [rdx],al
  40242d:	add    BYTE PTR [rdi],ah
  40242f:	add    BYTE PTR [rbx+rdi*2+0x0],dl
  402433:	(bad)  
  402434:	add    BYTE PTR [rax],al
  402436:	add    BYTE PTR [rax],al
  402438:	adc    esi,DWORD PTR [rax]
  40243a:	add    al,0x0
  40243c:	sbb    DWORD PTR [rax],eax
  40243e:	add    BYTE PTR [rax],al
  402440:	add    eax,0x2110000
  402445:	sub    BYTE PTR [rax+rax*1],ch
  402448:	add    BYTE PTR [rsi],al
  40244a:	or     al,BYTE PTR [rsi]
  40244c:	lea    esp,[rdi]
  40244e:	add    BYTE PTR [rax],al
  402450:	add    DWORD PTR [rbx],ecx
  402452:	add    al,BYTE PTR [rdi]
  402454:	(bad)  
  402455:	(bad)  
  402456:	sub    BYTE PTR [rdx],ah
  402458:	add    BYTE PTR [rax],al
  40245a:	or     al,BYTE PTR [rdi]
  40245c:	sub    al,BYTE PTR [rax]
  40245e:	add    BYTE PTR [rax],al
  402460:	adc    esi,DWORD PTR [rax]
  402462:	add    al,BYTE PTR [rax]
  402464:	adc    al,BYTE PTR [rax]
  402466:	add    BYTE PTR [rax],al
  402468:	(bad)  
  402469:	add    BYTE PTR [rax],al
  40246b:	adc    DWORD PTR [rdx],eax
  40246d:	sub    BYTE PTR [rbx],bl
  40246f:	add    BYTE PTR [rax],al
  402471:	(bad)  
  402472:	or     al,BYTE PTR [rsi]
  402474:	and    BYTE PTR [rax],al
  402476:	add    al,0x0
  402478:	add    BYTE PTR [rdi+0x16],bl
  40247b:	inc    BYTE PTR [rdx]
  40247d:	sub    cl,BYTE PTR [rsi+0x5002003]
  402483:	add    BYTE PTR [rax],al
  402485:	and    BYTE PTR [rax],al
  402487:	add    eax,0x2f280000
  40248c:	add    BYTE PTR [rax],al
  40248e:	(bad)  
  40248f:	sub    BYTE PTR [rdx],ah
  402491:	add    BYTE PTR [rax],al
  402493:	(bad)  
  402494:	add    bl,BYTE PTR [rdx]
  402496:	add    ebp,DWORD PTR [rax]
  402498:	sub    DWORD PTR [rax],eax
  40249a:	add    BYTE PTR [rsi],al
  40249c:	sub    BYTE PTR [rcx],ah
  40249e:	add    BYTE PTR [rax],al
  4024a0:	(bad)  
  4024a1:	sub    al,BYTE PTR [rax]
  4024a3:	add    BYTE PTR [rbx],bl
  4024a5:	xor    BYTE PTR [rdi],al
  4024a7:	add    dh,dh
  4024a9:	add    DWORD PTR [rax],eax
  4024ab:	add    BYTE PTR [rdi],al
  4024ad:	add    BYTE PTR [rax],al
  4024af:	adc    DWORD PTR [rdi],edx
  4024b1:	(bad)  
  4024b2:	add    edx,DWORD PTR [rsi]
  4024b4:	jae    0x4024d9
  4024b6:	add    BYTE PTR [rax],al
  4024b8:	or     cl,BYTE PTR [rdx]
  4024ba:	(bad)  
  4024bb:	outs   dx,DWORD PTR ds:[rsi]
  4024bc:	and    al,0x0
  4024be:	add    BYTE PTR [rdx],cl
  4024c0:	or     edx,DWORD PTR [rdi]
  4024c2:	(bad)  
  4024c3:	(bad)  
  4024c4:	outs   dx,DWORD PTR ds:[rsi]
  4024c5:	and    eax,0x730a0000
  4024ca:	add    BYTE PTR es:[rax],al
  4024cd:	or     cl,BYTE PTR [rdi+rdx*1]
  4024d0:	(bad)  
  4024d1:	(bad)  
  4024d2:	outs   dx,DWORD PTR ds:[rsi]
  4024d3:	and    eax,0x730a0000
  4024d8:	add    BYTE PTR es:[rax],al
  4024db:	or     cl,BYTE PTR [rip+0x6f071617]        # 0x6f473af8
  4024e1:	and    eax,0x730a0000
  4024e6:	add    BYTE PTR es:[rax],al
  4024e9:	or     dl,BYTE PTR [rbx]
  4024eb:	add    al,0x16
  4024ed:	adc    eax,DWORD PTR [rip+0xc538]        # 0x40ea2b
  4024f3:	add    BYTE PTR [rdi],al
  4024f5:	adc    DWORD PTR [rip+0x276f],eax        # 0x404c6a
  4024fb:	or     dh,BYTE PTR [rbp+rbp*1+0x0]
  4024ff:	add    BYTE PTR [rcx],al
  402501:	adc    eax,DWORD PTR [rsi]
  402503:	adc    DWORD PTR [rsi],eax
  402505:	outs   dx,DWORD PTR ds:[rsi]
  402506:	sub    BYTE PTR [rax],al
  402508:	add    BYTE PTR [rdx],cl
  40250a:	sub    al,0xa
  40250c:	adc    DWORD PTR [rsi],eax
  40250e:	outs   dx,DWORD PTR ds:[rsi]
  40250f:	sub    BYTE PTR [rax],al
  402511:	add    BYTE PTR [rdx],cl
  402513:	sbb    esi,DWORD PTR [rbx]
  402515:	adc    DWORD PTR ss:[rsi],eax
  402518:	outs   dx,DWORD PTR ds:[rsi]
  402519:	sub    DWORD PTR [rax],eax
  40251b:	add    BYTE PTR [rdx],cl
  40251d:	(bad)  
  40251e:	adc    BYTE PTR [rdi-0x2e],bl
  402521:	cmp    cl,BYTE PTR [rbp+0x11000000]
  402527:	add    al,0x16
  402529:	adc    DWORD PTR [rsi],eax
  40252b:	outs   dx,DWORD PTR ds:[rsi]
  40252c:	sub    al,BYTE PTR [rax]
  40252e:	add    BYTE PTR [rdx],cl
  402530:	adc    DWORD PTR [rsi],eax
  402532:	outs   dx,DWORD PTR ds:[rsi]
  402533:	sub    eax,DWORD PTR [rax]
  402535:	add    BYTE PTR [rdx],cl
  402537:	adc    DWORD PTR [rsi],eax
  402539:	outs   dx,DWORD PTR ds:[rsi]
  40253a:	sub    al,0x0
  40253c:	add    BYTE PTR [rdx],cl
  40253e:	adc    DWORD PTR [rsi],eax
  402540:	outs   dx,DWORD PTR ds:[rsi]
  402541:	sub    eax,0x6f0a0000
  402546:	add    BYTE PTR cs:[rax],al
  402549:	or     ch,BYTE PTR [rbx]
  40254b:	adc    DWORD PTR [esi],eax
  40254e:	outs   dx,DWORD PTR ds:[rsi]
  40254f:	sub    BYTE PTR [rax],al
  402551:	add    BYTE PTR [rdx],cl
  402553:	(bad)  
  402554:	or     dl,BYTE PTR cs:[rcx]
  402557:	(bad)  
  402558:	outs   dx,DWORD PTR ds:[rsi]
  402559:	sub    BYTE PTR [rax],al
  40255b:	add    BYTE PTR [rdx],cl
  40255d:	sbb    al,0x33
  40255f:	xor    dl,BYTE PTR [rcx]
  402561:	(bad)  
  402562:	outs   dx,DWORD PTR ds:[rsi]
  402563:	sub    DWORD PTR [rax],eax
  402565:	add    BYTE PTR [rdx],cl
  402567:	(bad)  
  402568:	adc    BYTE PTR [rdi-0x2e],bl
  40256b:	sub    eax,0x11170946
  402570:	(bad)  
  402571:	outs   dx,DWORD PTR ds:[rsi]
  402572:	sub    al,BYTE PTR [rax]
  402574:	add    BYTE PTR [rdx],cl
  402576:	adc    DWORD PTR [rsi],eax
  402578:	outs   dx,DWORD PTR ds:[rsi]
  402579:	sub    eax,DWORD PTR [rax]
  40257b:	add    BYTE PTR [rdx],cl
  40257d:	adc    DWORD PTR [rsi],eax
  40257f:	outs   dx,DWORD PTR ds:[rsi]
  402580:	sub    al,0x0
  402582:	add    BYTE PTR [rdx],cl
  402584:	adc    DWORD PTR [rsi],eax
  402586:	outs   dx,DWORD PTR ds:[rsi]
  402587:	sub    eax,0x6f0a0000
  40258c:	add    BYTE PTR cs:[rax],al
  40258f:	or     ch,BYTE PTR [rbx]
  402591:	and    DWORD PTR [rdx-0x33],esi
  402594:	add    DWORD PTR [rax],eax
  402596:	jo     0x4025a9
  402598:	(bad)  
  402599:	outs   dx,DWORD PTR ds:[rsi]
  40259a:	sub    BYTE PTR [rax],al
  40259c:	add    BYTE PTR [rdx],cl
  40259e:	mov    WORD PTR [rsi],gs
  4025a0:	add    BYTE PTR [rax],al
  4025a2:	add    DWORD PTR [rdi+0x1f],ebp
  4025a5:	add    BYTE PTR [rax],al
  4025a7:	or     ch,BYTE PTR [rax]
  4025a9:	(bad)  
  4025aa:	add    BYTE PTR [rax],al
  4025ac:	or     dh,BYTE PTR [rbx+0x30]
  4025af:	add    BYTE PTR [rax],al
  4025b1:	or     bh,BYTE PTR [rdx+0x11]
  4025b4:	add    eax,0x5135817
  4025b9:	adc    DWORD PTR [rip+0x256f07],eax        # 0x6594c6
  4025bf:	add    BYTE PTR [rdx],cl
  4025c1:	(bad)  
  4025c2:	cs (bad) 
  4025c4:	(bad)  
  4025c5:	call   QWORD PTR [rsi]
  4025c7:	adc    eax,DWORD PTR [rdi]
  4025c9:	sub    edi,DWORD PTR [rax]
  4025cb:	or     DWORD PTR [rcx],edx
  4025cd:	(bad)  
  4025ce:	outs   dx,DWORD PTR ds:[rsi]
  4025cf:	(bad)  
  4025d0:	add    BYTE PTR [rax],al
  4025d2:	or     dh,BYTE PTR [rbp+rbp*1+0x0]
  4025d6:	add    BYTE PTR [rcx],al
  4025d8:	adc    ecx,DWORD PTR [rax]
  4025da:	or     BYTE PTR [rdi],dl
  4025dc:	adc    DWORD PTR [rax],ecx
  4025de:	outs   dx,DWORD PTR ds:[rsi]
  4025df:	sub    al,BYTE PTR [rax]
  4025e1:	add    BYTE PTR [rdx],cl
  4025e3:	adc    DWORD PTR [rax],ecx
  4025e5:	outs   dx,DWORD PTR ds:[rsi]
  4025e6:	sub    eax,DWORD PTR [rax]
  4025e8:	add    BYTE PTR [rdx],cl
  4025ea:	adc    DWORD PTR [rax],ecx
  4025ec:	outs   dx,DWORD PTR ds:[rsi]
  4025ed:	sub    al,0x0
  4025ef:	add    BYTE PTR [rdx],cl
  4025f1:	adc    DWORD PTR [rax],ecx
  4025f3:	outs   dx,DWORD PTR ds:[rsi]
  4025f4:	sub    eax,0x6f0a0000
  4025f9:	add    BYTE PTR cs:[rax],al
  4025fc:	or     dl,BYTE PTR [rcx]
  4025fe:	(bad)  
  4025ff:	(bad)  
  402600:	pop    rax
  402601:	adc    eax,DWORD PTR [rdi]
  402603:	adc    DWORD PTR [rdi],eax
  402605:	or     DWORD PTR [rdi+0x25],ebp
  402608:	add    BYTE PTR [rax],al
  40260a:	or     dh,BYTE PTR [rdx]
  40260c:	mov    esi,0x2b091316
  402611:	cmp    DWORD PTR [rcx],edx
  402613:	add    al,0x11
  402615:	or     DWORD PTR [rdi+0x27],ebp
  402618:	add    BYTE PTR [rax],al
  40261a:	or     dh,BYTE PTR [rbp+rbp*1+0x0]
  40261e:	add    BYTE PTR [rcx],al
  402620:	adc    ecx,DWORD PTR [rdx]
  402622:	or     BYTE PTR [rsi],dl
  402624:	adc    DWORD PTR [rdx],ecx
  402626:	outs   dx,DWORD PTR ds:[rsi]
  402627:	sub    al,BYTE PTR [rax]
  402629:	add    BYTE PTR [rdx],cl
  40262b:	adc    DWORD PTR [rdx],ecx
  40262d:	outs   dx,DWORD PTR ds:[rsi]
  40262e:	sub    eax,DWORD PTR [rax]
  402630:	add    BYTE PTR [rdx],cl
  402632:	adc    DWORD PTR [rdx],ecx
  402634:	outs   dx,DWORD PTR ds:[rsi]
  402635:	sub    al,0x0
  402637:	add    BYTE PTR [rdx],cl
  402639:	adc    DWORD PTR [rdx],ecx
  40263b:	outs   dx,DWORD PTR ds:[rsi]
  40263c:	sub    eax,0x6f0a0000
  402641:	add    BYTE PTR cs:[rax],al
  402644:	or     dl,BYTE PTR [rcx]
  402646:	or     DWORD PTR [rdi],edx
  402648:	pop    rax
  402649:	adc    ecx,DWORD PTR [rcx]
  40264b:	adc    DWORD PTR [rcx],ecx
  40264d:	adc    DWORD PTR [rdi+rbp*2],eax
  402650:	and    eax,0x320a0000
  402655:	mov    esp,0x316f08
  40265a:	add    BYTE PTR [rdx],cl
  40265c:	lea    esp,[rdi]
  40265e:	add    BYTE PTR [rax],al
  402660:	add    DWORD PTR [rbx],edx
  402662:	or     ecx,DWORD PTR [rax]
  402664:	adc    DWORD PTR [rbx],ecx
  402666:	(bad)  
  402667:	outs   dx,DWORD PTR ds:[rsi]
  402668:	xor    al,BYTE PTR [rax]
  40266a:	add    BYTE PTR [rdx],cl
  40266c:	or     BYTE PTR [rdi+0x31],ch
  40266f:	add    BYTE PTR [rax],al
  402671:	or     ch,BYTE PTR [rax]
  402673:	xor    eax,DWORD PTR [rax]
  402675:	add    BYTE PTR [rdx],cl
  402677:	adc    ecx,DWORD PTR [rcx+rdx*1]
  40267a:	or     edx,DWORD PTR [rsi]
  40267c:	adc    DWORD PTR [rax+rcx*1],ecx
  40267f:	outs   dx,DWORD PTR ds:[rsi]
  402680:	xor    DWORD PTR [rax],eax
  402682:	add    BYTE PTR [rdx],cl
  402684:	sub    BYTE PTR [rax+rax*1],dh
  402687:	add    BYTE PTR [rdx],cl
  402689:	add    bl,BYTE PTR [rdx]
  40268b:	sbb    dl,BYTE PTR [rsp+rdx*1]
  40268e:	adc    DWORD PTR [rsp+rdx*1],ecx
  402691:	sub    BYTE PTR [rsi],ch
  402693:	add    BYTE PTR [rax],al
  402695:	(bad)  
  402696:	sub    BYTE PTR [rcx],ah
  402698:	add    BYTE PTR [rax],al
  40269a:	(bad)  
  40269b:	fimul  WORD PTR [rax]
  40269d:	adc    DWORD PTR [rax+rbp*1],ecx
  4026a0:	xor    eax,0xdc0a0000
  4026a5:	sub    al,BYTE PTR [rax]
  4026a7:	add    BYTE PTR [rcx],al
  4026a9:	adc    BYTE PTR [rax],al
  4026ab:	add    BYTE PTR [rdx],al
  4026ad:	add    cl,cl
  4026af:	add    DWORD PTR [rbp*8+0x801],esp
  4026b6:	add    BYTE PTR [rax],al
  4026b8:	adc    esi,DWORD PTR [rax]
  4026ba:	add    eax,DWORD PTR [rax]
  4026bc:	adc    DWORD PTR [rax],eax
  4026be:	add    BYTE PTR [rax],al
  4026c0:	or     BYTE PTR [rax],al
  4026c2:	add    BYTE PTR [rcx],dl
  4026c4:	add    dl,BYTE PTR [rdx]
  4026c6:	add    BYTE PTR [rdx],dl
  4026c8:	add    DWORD PTR [rax],ebp
  4026ca:	xor    BYTE PTR [rax],al
  4026cc:	add    BYTE PTR [rsi],al
  4026ce:	sub    BYTE PTR [rdx],ah
  4026d0:	add    BYTE PTR [rax],al
  4026d2:	(bad)  
  4026d3:	(bad)  
  4026d4:	sub    al,BYTE PTR [rax]
  4026d6:	add    BYTE PTR [rax],al
  4026d8:	adc    esi,DWORD PTR [rax]
  4026da:	add    eax,DWORD PTR [rax]
  4026dc:	xor    eax,0x9000000
  4026e1:	add    BYTE PTR [rax],al
  4026e3:	adc    DWORD PTR [rdx],eax
  4026e5:	(bad)  
  4026e6:	jae    0x40271e
  4026e8:	add    BYTE PTR [rax],al
  4026ea:	or     ch,BYTE PTR [rax]
  4026ec:	(bad)  
  4026ed:	add    BYTE PTR [rax],al
  4026ef:	or     cl,BYTE PTR [rdx]
  4026f1:	(bad)  
  4026f2:	or     ebp,DWORD PTR [rbx]
  4026f4:	sbb    DWORD PTR [rsi],eax
  4026f6:	(bad)  
  4026f7:	outs   dx,DWORD PTR ds:[rsi]
  4026f8:	(bad)  
  4026f9:	add    BYTE PTR [rax],al
  4026fb:	or     ch,BYTE PTR [rdi+0x29]
  4026fe:	add    BYTE PTR [rax],al
  402700:	or     bl,BYTE PTR [rdi]
  402702:	adc    BYTE PTR [rdi-0x2e],bl
  402705:	(bad)  
  402706:	xor    DWORD PTR [rdx],eax
  402708:	(bad)  
  402709:	sub    al,BYTE PTR [rdi]
  40270b:	(bad)  
  40270c:	pop    rax
  40270d:	or     eax,DWORD PTR [rdi]
  40270f:	(bad)  
  402710:	outs   dx,DWORD PTR ds:[rsi]
  402711:	and    eax,0x320a0000
  402716:	ficom  WORD PTR [rsi]
  402718:	sub    bh,BYTE PTR [rsi]
  40271a:	(bad)  
  40271b:	(bad)  
  40271c:	add    dl,BYTE PTR [rsi]
  40271e:	jae    0x402743
  402720:	add    BYTE PTR [rax],al
  402722:	or     ch,BYTE PTR [rax]
  402724:	cmp    BYTE PTR [rax],al
  402726:	add    BYTE PTR [rdx],cl
  402728:	sub    al,BYTE PTR [rax]
  40272a:	add    BYTE PTR [rax],al
  40272c:	adc    esi,DWORD PTR [rax]
  40272e:	add    eax,0x2000
  402733:	add    BYTE PTR [rdx],cl
  402735:	add    BYTE PTR [rax],al
  402737:	adc    DWORD PTR [rdx],eax
  402739:	sub    BYTE PTR [rdi],bl
  40273b:	add    BYTE PTR [rax],al
  40273d:	(bad)  
  40273e:	add    ch,BYTE PTR [rax]
  402740:	and    BYTE PTR [rax],al
  402742:	add    BYTE PTR [rsi],al
  402744:	(bad)  
  402745:	and    BYTE PTR [rdi],bh
  402747:	add    BYTE PTR [rdi],cl
  402749:	add    BYTE PTR [rdx],dl
  40274b:	add    BYTE PTR [rax],ch
  40274d:	(bad)  
  40274e:	add    BYTE PTR [rax],al
  402750:	(bad)  
  402751:	sub    BYTE PTR [rcx],ah
  402753:	add    BYTE PTR [rax],al
  402755:	(bad)  
  402756:	(bad)  
  402757:	sub    dl,BYTE PTR [rbx]
  402759:	xor    BYTE PTR [rbx],al
  40275b:	add    BYTE PTR [rbx+0x0],ch
  40275e:	add    BYTE PTR [rax],al
  402760:	or     eax,DWORD PTR [rax]
  402762:	add    BYTE PTR [rcx],dl
  402764:	add    ch,BYTE PTR [rax]
  402766:	cmp    DWORD PTR [rax],eax
  402768:	add    BYTE PTR [rdx],cl
  40276a:	sub    al,0xb
  40276c:	jb     0x40276d
  40276e:	add    DWORD PTR [rax],eax
  402770:	jo     0x4027e5
  402772:	cmp    al,BYTE PTR [rax]
  402774:	add    BYTE PTR [rdx],cl
  402776:	jp     0x40277a
  402778:	(bad)  
  402779:	pop    rsp
  40277a:	outs   dx,DWORD PTR ds:[rsi]
  40277b:	cmp    eax,DWORD PTR [rax]
  40277d:	add    BYTE PTR [rdx],cl
  40277f:	or     al,BYTE PTR [rsi]
  402781:	adc    eax,0xb020433
  402786:	sub    ecx,DWORD PTR [rcx]
  402788:	add    dl,BYTE PTR [rsi]
  40278a:	(bad)  
  40278b:	outs   dx,DWORD PTR ds:[rsi]
  40278c:	cmp    al,0x0
  40278e:	add    BYTE PTR [rdx],cl
  402790:	or     eax,DWORD PTR [rdi]
  402792:	outs   dx,DWORD PTR ds:[rsi]
  402793:	cmp    eax,0x250a0000
  402798:	or     al,0x2c
  40279a:	sub    BYTE PTR [rax],cl
  40279c:	jb     0x4027ad
  40279e:	add    al,BYTE PTR [rax]
  4027a0:	jo     0x4027ca
  4027a2:	add    BYTE PTR ds:[rax],al
  4027a5:	or     ch,BYTE PTR [rip+0x3572080f]        # 0x35b22fba
  4027ab:	add    al,BYTE PTR [rax]
  4027ad:	jo     0x4027d7
  4027af:	add    BYTE PTR ds:[rax],al
  4027b2:	or     ch,BYTE PTR [rip+0x7e0c2b08]        # 0x7e4c52c0
  4027b8:	sbb    al,0x0
  4027ba:	add    BYTE PTR [rdx+rbp*1],al
  4027bd:	jle    0x4027dc
  4027bf:	add    BYTE PTR [rax],al
  4027c1:	add    al,0x2a
  4027c3:	(bad)  
  4027c4:	sub    BYTE PTR [rbx],cl
  4027c6:	add    BYTE PTR [rax],al
  4027c8:	(bad)  
  4027c9:	jae    0x40280a
  4027cb:	add    BYTE PTR [rax],al
  4027cd:	or     bh,BYTE PTR [rdx+0x0]
  4027d0:	adc    esi,DWORD PTR [rax]
  4027d2:	add    al,0x0
  4027d4:	cmp    al,BYTE PTR [rax]
  4027d6:	add    BYTE PTR [rax],al
  4027d8:	or     al,0x0
  4027da:	add    BYTE PTR [rcx],dl
  4027dc:	add    ch,BYTE PTR [rax]
  4027de:	cmp    DWORD PTR [rax],eax
  4027e0:	add    BYTE PTR [rdx],cl
  4027e2:	sub    al,0xb
  4027e4:	jb     0x4027e5
  4027e6:	add    DWORD PTR [rax],eax
  4027e8:	jo     0x40285d
  4027ea:	cmp    al,BYTE PTR [rax]
  4027ec:	add    BYTE PTR [rdx],cl
  4027ee:	jp     0x4027f2
  4027f0:	(bad)  
  4027f1:	pop    rsp
  4027f2:	outs   dx,DWORD PTR ds:[rsi]
  4027f3:	cmp    eax,DWORD PTR [rax]
  4027f5:	add    BYTE PTR [rdx],cl
  4027f7:	or     al,BYTE PTR [rsi]
  4027f9:	adc    eax,0x407e0633
  4027fe:	add    BYTE PTR [rax],al
  402800:	or     ch,BYTE PTR [rdx]
  402802:	add    al,BYTE PTR [rsi]
  402804:	(bad)  
  402805:	pop    rax
  402806:	add    ch,BYTE PTR [rdi+0x41]
  402809:	add    BYTE PTR [rax],al
  40280b:	or     al,BYTE PTR [rsi]
  40280d:	pop    rcx
  40280e:	(bad)  
  40280f:	pop    rcx
  402810:	outs   dx,DWORD PTR ds:[rsi]
  402811:	cmp    al,0x0
  402813:	add    BYTE PTR [rdx],cl
  402815:	sub    ch,BYTE PTR [rsi]
  402817:	add    ch,BYTE PTR [rdi+rax*1]
  40281a:	add    ch,BYTE PTR [rax]
  40281c:	cmp    DWORD PTR [rax],eax
  40281e:	add    BYTE PTR [rsi],al
  402820:	jp     0x40284c
  402822:	sub    al,BYTE PTR [rdx]
  402824:	sub    eax,0x382806
  402829:	add    BYTE PTR [rsi],al
  40282b:	jp     0x402857
  40282d:	xchg   BYTE PTR [rsi+0x6d],bh
  402830:	add    BYTE PTR [rax],al
  402832:	add    al,0x16
  402834:	jae    0x40286c
  402836:	add    BYTE PTR [rax],al
  402838:	(bad)  
  402839:	sbb    BYTE PTR [rax+rax*1],0x0
  40283d:	add    al,0x7e
  40283f:	ins    BYTE PTR es:[rdi],dx
  402840:	add    BYTE PTR [rax],al
  402842:	add    al,0x16
  402844:	jae    0x40287c
  402846:	add    BYTE PTR [rax],al
  402848:	(bad)  
  402849:	sbb    BYTE PTR [rip+0x2a040000],0x1e        # 0x2a442850
  402850:	add    ch,BYTE PTR [rax]
  402852:	adc    BYTE PTR [rax],al
  402854:	add    BYTE PTR [rdx],cl
  402856:	sub    bh,BYTE PTR [rsi+0x20]
  402859:	add    DWORD PTR [rax],eax
  40285b:	add    BYTE PTR [rax+0x4273],al
  402861:	or     al,BYTE PTR [rax+0x400006c]
  402867:	and    BYTE PTR [rdx],al
  402869:	add    BYTE PTR [rax],al
  40286b:	xor    BYTE PTR [rbx+0x42],0x0
  40286f:	add    BYTE PTR [rdx],cl
  402871:	sub    BYTE PTR [rbp+0x0],0x0
  402875:	add    al,0x2a
  402877:	(bad)  
  402878:	add    ch,BYTE PTR [rax]
  40287a:	adc    BYTE PTR [rax],al
  40287c:	add    BYTE PTR [rdx],cl
  40287e:	sub    bl,BYTE PTR [rsi]
  402880:	add    ch,BYTE PTR [rax]
  402882:	adc    BYTE PTR [rax],al
  402884:	add    BYTE PTR [rdx],cl
  402886:	sub    ah,BYTE PTR [rdx]
  402888:	add    dl,BYTE PTR [rdi]
  40288a:	sub    BYTE PTR [rax+0x0],cl
  40288d:	add    BYTE PTR [rdx],cl
  40288f:	sub    bh,BYTE PTR [rsi]
  402891:	add    al,BYTE PTR [rax+rbp*1]
  402894:	rex.W add BYTE PTR [rax],al
  402897:	or     al,BYTE PTR [rdx]
  402899:	add    ebp,DWORD PTR [rax]
  40289b:	rex.WB add BYTE PTR [r8],al
  40289e:	or     ch,BYTE PTR [rdx]
  4028a0:	add    bh,BYTE PTR ds:[rbx+0x4a]
  4028a4:	add    BYTE PTR [rax],al
  4028a6:	or     ch,BYTE PTR [rax]
  4028a8:	sub    al,BYTE PTR [rax]
  4028aa:	add    BYTE PTR [rsi],al
  4028ac:	(bad)  
  4028ad:	inc    BYTE PTR [rcx]
  4028af:	sub    ch,BYTE PTR [rsi]
  4028b1:	sub    BYTE PTR [rbx+0x0],cl
  4028b4:	add    BYTE PTR [rdx],cl
  4028b6:	sub    BYTE PTR [rcx],bh
  4028b8:	add    BYTE PTR [rax],al
  4028ba:	(bad)  
  4028bb:	sub    dl,BYTE PTR [rbx]
  4028bd:	xor    BYTE PTR [rbx],al
  4028bf:	add    BYTE PTR [rcx],bl
  4028c1:	add    BYTE PTR [rax],al
  4028c3:	add    BYTE PTR [rip+0x2110000],cl        # 0x25128c9
  4028c9:	sbb    esi,DWORD PTR [rbx]
  4028cb:	(bad)  
  4028cc:	jae    0x40291a
  4028ce:	add    BYTE PTR [rax],al
  4028d0:	or     ch,BYTE PTR [rdx]
  4028d2:	add    ch,BYTE PTR [rax]
  4028d4:	cmp    al,BYTE PTR [rax]
  4028d6:	add    BYTE PTR [rsi],al
  4028d8:	or     al,BYTE PTR [rdx]
  4028da:	(bad)  
  4028db:	jae    0x40292a
  4028dd:	add    BYTE PTR [rax],al
  4028df:	or     ch,BYTE PTR [rdx]
  4028e1:	add    BYTE PTR [rax],al
  4028e3:	add    BYTE PTR [rbx],bl
  4028e5:	xor    BYTE PTR [rdi],al
  4028e7:	add    BYTE PTR [rip+0xe000000],bh        # 0xe4028ed
  4028ed:	add    BYTE PTR [rax],al
  4028ef:	adc    DWORD PTR [rsi+0x21],edi
  4028f2:	add    BYTE PTR [rax],al
  4028f4:	or     cl,BYTE PTR [rdx]
  4028f6:	and    BYTE PTR [rax],al
  4028f8:	adc    eax,DWORD PTR [rax]
  4028fa:	add    BYTE PTR [rsi+0x21],bh
  4028fd:	add    BYTE PTR [rax],al
  4028ff:	or     al,BYTE PTR [rdx]
  402901:	(bad)  
  402902:	adc    al,BYTE PTR [rax]
  402904:	(bad)  
  402905:	jle    0x402928
  402907:	add    BYTE PTR [rax],al
  402909:	or     ch,BYTE PTR [rax]
  40290b:	xor    eax,DWORD PTR [rax]
  40290d:	add    BYTE PTR [rsi],al
  40290f:	or     eax,DWORD PTR [rdi]
  402911:	sub    eax,0xc280207
  402916:	add    BYTE PTR [rax],al
  402918:	(bad)  
  402919:	sub    al,BYTE PTR [rsi]
  40291b:	sub    BYTE PTR [rsi+0x0],cl
  40291e:	add    BYTE PTR [rdx],cl
  402920:	or     al,0xde
  402922:	or     BYTE PTR [rsi],al
  402924:	sub    BYTE PTR [rip+0x26060000],ch        # 0x2646292a
  40292a:	fmul   QWORD PTR [rax]
  40292c:	sub    al,BYTE PTR [rax]
  40292e:	add    BYTE PTR [rax],al
  402930:	add    DWORD PTR [rax],edx
  402932:	add    BYTE PTR [rax],al
  402934:	add    al,BYTE PTR [rax]
  402936:	sub    al,BYTE PTR [rax]
  402938:	or     DWORD PTR [rbx],esi
  40293a:	add    BYTE PTR [rax],cl
  40293c:	add    BYTE PTR [rax],al
  40293e:	add    BYTE PTR [rax],al
  402940:	sbb    DWORD PTR [rbx],eax
  402942:	add    BYTE PTR [rax],al
  402944:	(bad)  
  402945:	retf   0xbeef
  402948:	add    DWORD PTR [rax],eax
  40294a:	add    BYTE PTR [rax],al
  40294c:	xchg   ecx,eax
  40294d:	add    BYTE PTR [rax],al
  40294f:	add    BYTE PTR [rbx+rdx*2+0x79],ch
  402953:	jae    0x4029c9
  402955:	gs ins DWORD PTR es:[rdi],dx
  402957:	cs push rdx
  402959:	gs jae 0x4029cb
  40295c:	jne    0x4029d0
  40295e:	movsxd esp,DWORD PTR [rbp+0x73]
  402961:	cs push rdx
  402963:	gs jae 0x4029d5
  402966:	jne    0x4029da
  402968:	movsxd esp,DWORD PTR [rbp+0x52]
  40296b:	gs (bad) 
  40296d:	fs gs jb 0x40299d
  402971:	and    BYTE PTR [rbp+0x73],ch
  402974:	movsxd ebp,DWORD PTR [rdi+0x72]
  402977:	ins    BYTE PTR es:[rdi],dx
  402978:	imul   esp,DWORD PTR [rdx+0x2c],0x72655620
  40297f:	jae    0x4029ea
  402981:	outs   dx,DWORD PTR ds:[rsi]
  402982:	outs   dx,BYTE PTR ds:[rsi]
  402983:	cmp    eax,0x2e302e32
  402988:	xor    BYTE PTR [rsi],ch
  40298a:	xor    BYTE PTR [rax+riz*1],ch
  40298d:	rex.XB jne 0x4029fc
  402990:	je     0x402a07
  402992:	jb     0x4029f9
  402994:	cmp    eax,0x7475656e
  402999:	jb     0x4029fc
  40299b:	ins    BYTE PTR es:[rdi],dx
  40299c:	sub    al,0x20
  40299e:	push   rax
  40299f:	jne    0x402a03
  4029a1:	ins    BYTE PTR es:[rdi],dx
  4029a2:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
  4029a9:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4029ad:	(bad)  
  4029ae:	(bad)  
  4029af:	(bad)  
  4029b0:	(bad)  
  4029b1:	xor    eax,0x31363563
  4029b6:	cmp    DWORD PTR [rbx],esi
  4029b8:	xor    al,0x65
  4029ba:	xor    BYTE PTR [rax],bh
  4029bc:	cmp    DWORD PTR [rbx],esp
  4029be:	push   rbx
  4029bf:	jns    0x402a34
  4029c1:	je     0x402a28
  4029c3:	ins    DWORD PTR es:[rdi],dx
  4029c4:	cs push rdx
  4029c6:	gs jae 0x402a38
  4029c9:	jne    0x402a3d
  4029cb:	movsxd esp,DWORD PTR [rbp+0x73]
  4029ce:	cs push rdx
  4029d0:	jne    0x402a40
  4029d2:	je     0x402a3d
  4029d4:	ins    DWORD PTR es:[rdi],dx
  4029d5:	gs push rdx
  4029d7:	gs jae 0x402a49
  4029da:	jne    0x402a4e
  4029dc:	movsxd esp,DWORD PTR [rbp+0x53]
  4029df:	gs je  0x4029e4
  4029e2:	add    BYTE PTR [rax],al
  4029e4:	add    BYTE PTR [rax],cl
  4029e6:	add    BYTE PTR [rax],al
  4029e8:	add    BYTE PTR [rax],al
  4029ea:	add    BYTE PTR [rax],al
  4029ec:	add    BYTE PTR [rax+0x41],dl
  4029ef:	rex.R push rax
  4029f1:	rex.B
  4029f2:	rex.R push rax
  4029f4:	in     al,dx
  4029f5:	xchg   ebp,eax
  4029f6:	sbb    al,0xd0
  4029f8:	adc    edi,0xeceedd1b
  4029fe:	pop    rbx
  4029ff:	loope  0x402a13
  402a01:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402a02:	(bad)  
  402a03:	out    0x36,al
  402a05:	xchg   ebx,eax
  402a06:	cmp    BYTE PTR [rip+0x3897cac6],cl        # 0x38d7f4d2
  402a0c:	iret   
  402a0d:	add    eax,0x643960ce
  402a12:	adc    edi,DWORD PTR [rsp+rcx*8+0x0]
  402a16:	add    BYTE PTR [rax],al
  402a18:	add    BYTE PTR [rax],al
  402a1a:	add    BYTE PTR [rax],al
  402a1c:	rex.WX add BYTE PTR [rax],al
  402a1f:	add    BYTE PTR [rsi+0x7f000000],cl
  402a25:	add    BYTE PTR [rax],al
  402a27:	add    BYTE PTR [rcx],ah
  402a29:	add    BYTE PTR [rax],al
  402a2b:	add    BYTE PTR [rdi-0x13000000],ah
  402a31:	add    BYTE PTR [rax],al
  402a33:	add    BYTE PTR [rdx],dl
  402a35:	add    al,BYTE PTR [rax]
  402a37:	add    BYTE PTR [rbx+rax*2],bl
  402a3a:	add    BYTE PTR [rdi+0x0],ch
  402a3d:	jne    0x402a3f
  402a3f:	ins    BYTE PTR es:[rdi],dx
  402a40:	add    BYTE PTR [rax+rax*1+0x4e],ah
  402a44:	add    BYTE PTR [rdi+0x0],ch
  402a47:	je     0x402a49
  402a49:	rex.RX add BYTE PTR [rcx+0x0],r13b
  402a4d:	js     0x402a4f
  402a4f:	rex.WXB add BYTE PTR [r13+0x0],spl
  402a53:	jns    0x402a55
  402a55:	add    BYTE PTR [rax],al
  402a57:	add    BYTE PTR [rax],al
  402a59:	and    al,0x43
  402a5b:	add    BYTE PTR [rdi+0x0],ch
  402a5e:	jne    0x402a60
  402a60:	ins    BYTE PTR es:[rdi],dx
  402a61:	add    BYTE PTR [rax+rax*1+0x4e],ah
  402a65:	add    BYTE PTR [rdi+0x0],ch
  402a68:	je     0x402a6a
  402a6a:	rex.WRXB add BYTE PTR [r8+0x0],r14b
  402a6e:	add    BYTE PTR gs:[rsi+0x0],ch
  402a72:	push   rbx
  402a73:	add    BYTE PTR [rbp+0x0],dh
  402a76:	(bad)  
  402a77:	add    BYTE PTR [rbx+0x0],cl
  402a7a:	add    BYTE PTR gs:[rcx+0x0],bh
  402a7e:	and    DWORD PTR [rax],eax
  402a80:	add    BYTE PTR [rax],al
  402a82:	xor    BYTE PTR [rax+rax*1+0x69],al
  402a86:	add    BYTE PTR [rdx+0x0],dh
  402a89:	add    BYTE PTR gs:[rbx+0x0],ah
  402a8d:	je     0x402a8f
  402a8f:	rex.WR add BYTE PTR [rcx+0x0],r12b
  402a93:	jne    0x402a95
  402a95:	outs   dx,BYTE PTR ds:[rsi]
  402a96:	add    BYTE PTR [rbx+0x0],ah
  402a99:	push   0x6f004e00
  402a9e:	add    BYTE PTR [rax+rax*1+0x53],dh
  402aa2:	add    BYTE PTR [rbp+0x0],dh
  402aa5:	jo     0x402aa7
  402aa7:	jo     0x402aa9
  402aa9:	outs   dx,DWORD PTR ds:[rsi]
  402aaa:	add    BYTE PTR [rdx+0x0],dh
  402aad:	je     0x402aaf
  402aaf:	add    BYTE PTR gs:[rax+rax*1+0x46],ah
  402ab4:	add    BYTE PTR [rax],al
  402ab6:	add    BYTE PTR [rdx],cl
  402ab8:	rex.WXB add BYTE PTR [r13+0x0],spl
  402abc:	jns    0x402abe
  402abe:	rex.WRXB add BYTE PTR [r11+0x0],r9b
  402ac2:	jnp    0x402ac4
  402ac4:	add    BYTE PTR [rax],al
  402ac6:	adc    al,0x52
  402ac8:	add    BYTE PTR [rbp+0x0],ah
  402acb:	outs   dx,DWORD PTR ds:[rsi]
  402acc:	add    BYTE PTR [rdx+0x0],dh
  402acf:	add    BYTE PTR fs:[rbp+0x0],ah
  402ad3:	jb     0x402ad5
  402ad5:	add    BYTE PTR [r11+0x0],al
  402ad9:	rex.WR add BYTE PTR [rsi+0x20000000],r8b
  402ae0:	push   rbx
  402ae1:	add    BYTE PTR [rbp+0x0],ah
  402ae4:	je     0x402ae6
  402ae6:	rex.WB add BYTE PTR [r14+0x0],bpl
  402aea:	push   0x72006500
  402aef:	add    BYTE PTR [rcx+0x0],ch
  402af2:	je     0x402af4
  402af4:	add    BYTE PTR gs:[rax+rax*1+0x46],ah
  402af9:	add    BYTE PTR [rax+rax*1+0x61],ch
  402afd:	add    BYTE PTR [rdi+0x0],ah
  402b00:	test   eax,0x1c000000
  402b05:	push   rbp
  402b06:	add    BYTE PTR [rsi+0x0],ch
  402b09:	imul   eax,DWORD PTR [rax],0x6e
  402b0c:	add    BYTE PTR [rdi+0x0],ch
  402b0f:	ja     0x402b11
  402b11:	outs   dx,BYTE PTR ds:[rsi]
  402b12:	add    BYTE PTR [rax+0x0],cl
  402b15:	push   rdx
  402b16:	add    BYTE PTR [rbp+0x0],ah
  402b19:	jae    0x402b1b
  402b1b:	jne    0x402b1d
  402b1d:	ins    BYTE PTR es:[rdi],dx
  402b1e:	add    BYTE PTR [rax+rax*1-0x34],dh
  402b22:	add    BYTE PTR [rax],al
  402b24:	add    BYTE PTR [rdx*2+0x73006e00],ch
  402b2b:	add    BYTE PTR [rbp+0x0],dh
  402b2e:	jo     0x402b30
  402b30:	jo     0x402b32
  402b32:	outs   dx,DWORD PTR ds:[rsi]
  402b33:	add    BYTE PTR [rdx+0x0],dh
  402b36:	je     0x402b38
  402b38:	add    BYTE PTR gs:[rax+rax*1+0x52],ah
  402b3d:	add    BYTE PTR [rdi+0x0],ch
  402b40:	outs   dx,DWORD PTR ds:[rsi]
  402b41:	add    BYTE PTR [rax+rax*1+0x4b],dh
  402b45:	add    BYTE PTR [rbp+0x0],ah
  402b48:	jns    0x402b4a
  402b4a:	push   rsp
  402b4b:	add    BYTE PTR [rcx+0x0],bh
  402b4e:	jo     0x402b50
  402b50:	gs add dl,ah
  402b53:	add    BYTE PTR [rax],al
  402b55:	add    BYTE PTR [rcx],al
  402b57:	(bad)  
  402b58:	rex.XB outs dx,DWORD PTR ds:[rsi]
  402b5a:	jne    0x402bc8
  402b5c:	and    BYTE PTR fs:[rsi+0x6f],ch
  402b60:	je     0x402b82
  402b62:	imul   di,WORD PTR [rax+0x20],0x6572
  402b68:	imul   esi,DWORD PTR [ebx+0x74],0x6b207972
  402b70:	gs jns 0x402b93
  402b73:	jnp    0x402ba5
  402b75:	jge    0x402ba5
  402b77:	add    DWORD PTR [rbx],esp
  402b79:	rex.XB outs dx,DWORD PTR ds:[rsi]
  402b7b:	jne    0x402be9
  402b7d:	and    BYTE PTR fs:[rsi+0x6f],ch
  402b81:	je     0x402ba3
  402b83:	outs   dx,DWORD PTR ds:[rsi]
  402b84:	jo     0x402beb
  402b86:	outs   dx,BYTE PTR ds:[rsi]
  402b87:	and    BYTE PTR [rbx+0x75],dh
  402b8a:	(bad)  
  402b8b:	and    BYTE PTR [rbx+0x65],ch
  402b8e:	jns    0x402bb0
  402b90:	imul   esp,DWORD PTR [rbp+0x79],0x20
  402b94:	jnp    0x402bc6
  402b96:	jge    0x402bf4
  402b98:	jnp    0x402bcb
  402b9a:	jge    0x402bca
  402b9c:	add    DWORD PTR [rbx],esi
  402b9e:	rex.RB jb 0x402c13
  402ba1:	outs   dx,DWORD PTR ds:[rsi]
  402ba2:	jb     0x402bde
  402ba4:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  402ba8:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x6c]
  402bad:	(bad)  
  402bae:	jne    0x402c1e
  402bb0:	movsxd ebp,DWORD PTR [rax+0x69]
  402bb3:	outs   dx,BYTE PTR ds:[rsi]
  402bb4:	and    BYTE PTR [eax+ebp*2+0x69],dh
  402bb9:	jae    0x402bdb
  402bbb:	je     0x402c2c
  402bbd:	outs   dx,DWORD PTR ds:[rsi]
  402bbe:	ins    BYTE PTR es:[rdi],dx
  402bbf:	and    BYTE PTR [rcx+0x73],ch
  402bc2:	and    BYTE PTR [rsi+0x6f],ch
  402bc5:	je     0x402be7
  402bc7:	jae    0x402c3e
  402bc9:	jo     0x402c3b
  402bcb:	outs   dx,DWORD PTR ds:[rsi]
  402bcc:	jb     0x402c42
  402bce:	gs fs add DWORD PTR cs:[rcx],ecx
  402bd3:	jnp    0x402c05
  402bd5:	jge    0x402bf7
  402bd7:	sub    eax,0x2e4b4f20
  402bdc:	add    DWORD PTR [rcx],esp
  402bde:	jnp    0x402c10
  402be0:	jge    0x402c02
  402be2:	sub    eax,0x6f655220
  402be7:	jb     0x402c4d
  402be9:	gs jb  0x402c0c
  402bec:	outs   dx,BYTE PTR ds:[rsi]
  402bed:	outs   dx,DWORD PTR ds:[rsi]
  402bee:	outs   dx,BYTE PTR ds:[rsi]
  402bef:	sub    eax,0x6f6e6163
  402bf4:	outs   dx,BYTE PTR ds:[rsi]
  402bf5:	imul   esp,DWORD PTR [rbx+0x61],0x4341206c
  402bfc:	rex.RB jae 0x402c2d
  402bff:	add    DWORD PTR [rcx],esp
  402c01:	jnp    0x402c33
  402c03:	jge    0x402c25
  402c05:	sub    eax,0x74655320
  402c0a:	and    BYTE PTR [rbx+0x45],dl
  402c0d:	pop    rdi
  402c0e:	rex.R
  402c0f:	rex.B
  402c10:	rex.XB
  402c11:	rex.WR pop rdi
  402c13:	push   r13
  402c15:	push   rsp
  402c16:	rex.WRXB pop r15
  402c18:	rex.WB
  402c19:	rex.WRX
  402c1a:	rex.W
  402c1b:	rex.RB push r10
  402c1d:	rex.WB push r12
  402c1f:	rex.RB
  402c20:	rex.R
  402c21:	add    DWORD PTR cs:[rdx*2+0x6f6e6b6e],edx
  402c29:	ja     0x402c99
  402c2b:	and    BYTE PTR [rbp+0x72],ah
  402c2e:	jb     0x402c9f
  402c30:	jb     0x402c52
  402c32:	(bad)  
  402c33:	jnp    0x402c65
  402c35:	jge    0x402c5e
  402c37:	add    DWORD PTR cs:[rbx],esp
  402c3a:	jnp    0x402c6c
  402c3c:	jge    0x402c5e
  402c3e:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
  402c45:	jae    0x402cbc
  402c47:	jo     0x402cb9
  402c49:	outs   dx,DWORD PTR ds:[rsi]
  402c4a:	jb     0x402cc0
  402c4c:	gs and BYTE PTR fs:[rcx+0x73],ah
  402c51:	and    BYTE PTR [rcx+0x20],ah
  402c54:	(bad)  
  402c56:	jae    0x402cbd
  402c58:	and    BYTE PTR [rbx+0x65],ch
  402c5b:	jns    0x402c8b
  402c5d:	add    BYTE PTR [rax],al
  402c5f:	add    BYTE PTR [rdx+0x53],al
  402c62:	rex.WX
  402c63:	rex.X add DWORD PTR [rax],eax
  402c66:	add    DWORD PTR [rax],eax
  402c68:	add    BYTE PTR [rax],al
  402c6a:	add    BYTE PTR [rax],al
  402c6c:	or     al,0x0
  402c6e:	add    BYTE PTR [rax],al
  402c70:	jbe    0x402ca4
  402c72:	xor    BYTE PTR cs:[rsi],ch
  402c75:	xor    eax,0x37323730
  402c7a:	add    BYTE PTR [rax],al
  402c7c:	add    BYTE PTR [rax],al
  402c7e:	add    eax,0x6c00
  402c83:	add    BYTE PTR [rax+0x11],ch
  402c86:	add    BYTE PTR [rax],al
  402c88:	and    edi,DWORD PTR [rsi+0x0]
  402c8b:	add    ah,dl
  402c8d:	adc    DWORD PTR [rax],eax
  402c8f:	add    BYTE PTR [rax],cl
  402c91:	sbb    BYTE PTR [rax],al
  402c93:	add    BYTE PTR [rbx],ah
  402c95:	push   rbx
  402c96:	je     0x402d0a
  402c98:	imul   ebp,DWORD PTR [rsi+0x67],0x73
  402c9f:	add    ah,bl
  402ca1:	sub    DWORD PTR [rax],eax
  402ca3:	add    BYTE PTR [rdx+rax*1+0x0],bl
  402ca7:	add    BYTE PTR [rbx],ah
  402ca9:	push   rbp
  402caa:	push   rbx
  402cab:	add    BYTE PTR [rax],bh
  402cad:	sub    al,0x0
  402caf:	add    BYTE PTR [rax],dl
  402cb1:	add    BYTE PTR [rax],al
  402cb3:	add    BYTE PTR [rbx],ah
  402cb5:	rex.RXB push r13
  402cb7:	rex.WB
  402cb8:	add    BYTE PTR [rax],r8b
  402cbb:	add    BYTE PTR [rax+0x2c],cl
  402cbe:	add    BYTE PTR [rax],al
  402cc0:	ins    BYTE PTR es:[rdi],dx
  402cc1:	(bad)  
  402cc2:	add    BYTE PTR [rax],al
  402cc4:	and    eax,DWORD PTR [rdx+0x6c]
  402cc7:	outs   dx,DWORD PTR ds:[rsi]
  402cc8:	(bad)  
  402cc9:	add    BYTE PTR [rax],al
  402ccb:	add    BYTE PTR [rax],al
  402ccd:	add    BYTE PTR [rax],al
  402ccf:	add    BYTE PTR [rdx],al
  402cd1:	add    BYTE PTR [rax],al
  402cd3:	add    DWORD PTR [rdi+0x3d],edx
  402cd6:	movabs ds:0x1fa000000030915,al
  402cdf:	xor    eax,DWORD PTR [rax]
  402ce1:	(bad)  
  402ce2:	add    BYTE PTR [rax],al
  402ce4:	add    DWORD PTR [rax],eax
  402ce6:	add    BYTE PTR [rax],al
  402ce8:	rex.X add BYTE PTR [rax],al
  402ceb:	add    BYTE PTR [rip+0xffffffff86000000],cl        # 0xffffffff86402cf1
  402cf1:	add    BYTE PTR [rax],al
  402cf3:	add    BYTE PTR [rdx],bh
  402cf5:	add    BYTE PTR [rax],al
  402cf7:	add    BYTE PTR [rsi+0x0],bl
  402cfa:	add    BYTE PTR [rax],al
  402cfc:	rex.WRX add BYTE PTR [rax],r8b
  402cff:	add    BYTE PTR [rsi+0x0],dh
  402d02:	add    BYTE PTR [rax],al
  402d04:	sldt   WORD PTR [rax]
  402d07:	add    BYTE PTR [rsi],al
  402d09:	add    BYTE PTR [rax],al
  402d0b:	add    BYTE PTR [rsi],cl
  402d0d:	add    BYTE PTR [rax],al
  402d0f:	add    BYTE PTR [rbx],al
  402d11:	add    BYTE PTR [rax],al
  402d13:	add    BYTE PTR [rax+rax*1],al
  402d16:	add    BYTE PTR [rax],al
  402d18:	(bad)  
  402d19:	add    BYTE PTR [rax],al
  402d1b:	add    BYTE PTR [rdx],al
  402d1d:	add    BYTE PTR [rax],al
  402d1f:	add    BYTE PTR [rip+0x1000000],cl        # 0x1402d25
  402d25:	add    BYTE PTR [rax],al
  402d27:	add    BYTE PTR [rdx],al
  402d29:	add    BYTE PTR [rax],al
  402d2b:	add    BYTE PTR [rcx],al
  402d2d:	add    BYTE PTR [rax],al
  402d2f:	add    BYTE PTR [rdx],al
  402d31:	add    BYTE PTR [rax],al
  402d33:	add    BYTE PTR [rax],al
  402d35:	add    BYTE PTR [rdx],cl
  402d37:	add    BYTE PTR [rcx],al
  402d39:	add    BYTE PTR [rax],al
  402d3b:	add    BYTE PTR [rax],al
  402d3d:	add    BYTE PTR [rsi],al
  402d3f:	add    BYTE PTR [rdx],al
  402d41:	add    ebx,edi
  402d43:	add    BYTE PTR [rsi],al
  402d45:	add    BYTE PTR [rcx],cl
  402d47:	add    ebx,edi
  402d49:	add    BYTE PTR [rsi],al
  402d4b:	add    BYTE PTR [rsi],cl
  402d4d:	add    ebx,edi
  402d4f:	add    BYTE PTR [rsi],al
  402d51:	add    BYTE PTR [rcx+rax*1],dh
  402d54:	sbb    BYTE PTR [rcx],al
  402d56:	(bad)  
  402d57:	add    BYTE PTR [rdx+0x6029502],ch
  402d5d:	add    BYTE PTR [rdi+0x6037603],al
  402d63:	add    BYTE PTR [rip+0x6041504],ah        # 0x644426d
  402d69:	add    ch,cl
  402d6b:	or     eax,0x60dae
  402d70:	jae    0x402d80
  402d72:	sti    
  402d73:	add    BYTE PTR [rsi],al
  402d75:	add    BYTE PTR [rdi+0x60dae0e],dh
  402d7b:	add    ch,bl
  402d7d:	(bad)  
  402d7e:	retf   
  402d7f:	(bad)  
  402d80:	(bad)  
  402d81:	add    ah,bh
  402d83:	(bad)  
  402d84:	retf   
  402d85:	(bad)  
  402d86:	(bad)  
  402d87:	add    BYTE PTR [rcx],bl
  402d89:	bswap  ebx
  402d8b:	(bad)  
  402d8c:	(bad)  
  402d8d:	add    BYTE PTR [rax],dh
  402d8f:	bswap  ebx
  402d91:	(bad)  
  402d92:	(bad)  
  402d93:	add    BYTE PTR [rsi+0xf],dl
  402d96:	retf   
  402d97:	(bad)  
  402d98:	(bad)  
  402d99:	add    BYTE PTR [rbx+0xf],dh
  402d9c:	retf   
  402d9d:	(bad)  
  402d9e:	(bad)  
  402d9f:	add    BYTE PTR [rdi+rcx*1+0x60ecb],cl
  402da6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  402da7:	bswap  ebx
  402da9:	(bad)  
  402daa:	(bad)  
  402dab:	add    dl,al
  402dad:	bswap  ebx
  402daf:	(bad)  
  402db0:	(bad)  
  402db1:	add    bl,bl
  402db3:	bswap  ebx
  402db5:	(bad)  
  402db6:	(bad)  
  402db7:	add    BYTE PTR [rdi],al
  402db9:	adc    ah,dh
  402dbb:	xorps  xmm0,XMMWORD PTR [rax]
  402dbe:	sbb    edx,DWORD PTR [rax]
  402dc0:	add    BYTE PTR [rax],al
  402dc2:	(bad)  
  402dc3:	add    BYTE PTR [rdx+0x10],cl
  402dc6:	sub    dl,BYTE PTR [rax]
  402dc8:	(bad)  
  402dc9:	add    BYTE PTR [rdx+0x10],ch
  402dcc:	sub    dl,BYTE PTR [rax]
  402dce:	(bad)  
  402dcf:	add    BYTE PTR [rdx+0x6102a10],bl
  402dd5:	add    ah,dl
  402dd7:	adc    bl,bh
  402dd9:	add    BYTE PTR [rsi],al
  402ddb:	add    dh,dh
  402ddd:	adc    bl,bh
  402ddf:	add    BYTE PTR [rsi],al
  402de1:	add    ch,bh
  402de3:	adc    bl,bh
  402de5:	add    BYTE PTR [rsi],al
  402de7:	add    BYTE PTR [rax],ah
  402de9:	adc    ebx,edi
  402deb:	add    BYTE PTR [rsi],al
  402ded:	add    BYTE PTR [rip+0x600fb11],ah        # 0x6412904
  402df3:	add    BYTE PTR [rsi+0x11],dl
  402df6:	retf   
  402df7:	(bad)  
  402df8:	(bad)  
  402df9:	add    BYTE PTR [rax+0x11],ch
  402dfc:	retf   
  402dfd:	(bad)  
  402dfe:	(bad)  
  402dff:	add    BYTE PTR [rbx+0x600fb11],al
  402e05:	add    BYTE PTR [rcx+rdx*1+0x600fb],bl
  402e0c:	scas   al,BYTE PTR es:[rdi]
  402e0d:	adc    DWORD PTR [rip+0xffffffffcf000604],edx        # 0xffffffffcf403417
  402e13:	adc    ebx,edi
  402e15:	add    BYTE PTR [rsi],al
  402e17:	add    BYTE PTR [rdx+rdx*1],dl
  402e1a:	add    al,0x12
  402e1c:	(bad)  
  402e1d:	add    BYTE PTR [rsi],ah
  402e1f:	adc    bh,bl
  402e21:	add    BYTE PTR [rsi],al
  402e23:	add    BYTE PTR [rsi+0x12],al
  402e26:	sti    
  402e27:	add    BYTE PTR [rsi],al
  402e29:	add    BYTE PTR [rbx+0x12],cl
  402e2c:	scas   al,BYTE PTR es:[rdi]
  402e2d:	or     eax,0x12900006
  402e32:	jb     0x402e46
  402e34:	(bad)  
  402e35:	add    BYTE PTR [rcx+0x6127212],ch
  402e3b:	add    bh,cl
  402e3d:	adc    dh,BYTE PTR [rdx+0x12]
  402e40:	(bad)  
  402e41:	add    ah,ah
  402e43:	adc    dh,BYTE PTR [rdx+0x12]
  402e46:	(bad)  
  402e47:	add    al,bh
  402e49:	adc    dh,BYTE PTR [rdx+0x12]
  402e4c:	(bad)  
  402e4d:	add    BYTE PTR [rdx],al
  402e4f:	adc    esi,DWORD PTR [rdx+0x12]
  402e52:	(bad)  
  402e53:	add    BYTE PTR [rsi],dl
  402e55:	adc    esi,DWORD PTR [rdx+0x12]
  402e58:	(bad)  
  402e59:	add    BYTE PTR [rbx+rdx*1],ch
  402e5c:	jb     0x402e70
  402e5e:	(bad)  
  402e5f:	add    BYTE PTR [rdi+0x13],cl
  402e62:	xor    eax,0x88000613
  402e67:	adc    esi,DWORD PTR [rdx+0x12]
  402e6a:	(bad)  
  402e6b:	add    BYTE PTR [rsi+0x6127213],ch
  402e71:	add    ah,dl
  402e73:	adc    esi,DWORD PTR [rdx+0x12]
  402e76:	(bad)  
  402e77:	add    al,dh
  402e79:	adc    edi,ebx
  402e7b:	add    BYTE PTR [rsi],al
  402e7d:	add    BYTE PTR [rip+0x6127214],bh        # 0x652a097
  402e83:	add    BYTE PTR [rbx+0x14],dl
  402e86:	jb     0x402e9a
  402e88:	(bad)  
  402e89:	add    BYTE PTR [rax+0x600fb14],cl
  402e8f:	add    ch,cl
  402e91:	adc    al,0xfb
  402e93:	add    BYTE PTR [rsi],al
  402e95:	add    bh,dh
  402e97:	adc    al,0xae
  402e99:	or     eax,0x150d0006
  402e9e:	scas   al,BYTE PTR es:[rdi]
  402e9f:	or     eax,0x15180006
  402ea4:	scas   al,BYTE PTR es:[rdi]
  402ea5:	or     eax,0x15540006
  402eaa:	scas   al,BYTE PTR es:[rdi]
  402eab:	or     eax,0x15600006
  402eb0:	scas   al,BYTE PTR es:[rdi]
  402eb1:	or     eax,0x15730006
  402eb6:	scas   al,BYTE PTR es:[rdi]
  402eb7:	or     eax,0x15a00006
  402ebc:	scas   al,BYTE PTR es:[rdi]
  402ebd:	or     eax,0x17750006
  402ec2:	sti    
  402ec3:	add    BYTE PTR [rdx],cl
  402ec5:	add    BYTE PTR [rdi+0x179117],ah
  402ecb:	add    BYTE PTR [rax],al
  402ecd:	add    BYTE PTR [rcx],al
  402ecf:	add    BYTE PTR [rax],al
  402ed1:	add    BYTE PTR [rax],al
  402ed3:	add    BYTE PTR [rcx],al
  402ed5:	add    BYTE PTR [rcx],al
  402ed7:	add    BYTE PTR [rax+0x20001001],al
  402edd:	add    BYTE PTR [rax],al
  402edf:	add    BYTE PTR [rip+0x1000100],al        # 0x1402fe5
  402ee5:	add    BYTE PTR [rax],al
  402ee7:	add    BYTE PTR [rax],dl
  402ee9:	add    BYTE PTR [rax+rax*1],dh
  402eec:	(bad)  
  402eed:	add    BYTE PTR [rip+0x2000e00],al        # 0x2403cf3
  402ef3:	add    BYTE PTR [rdx],al
  402ef5:	add    BYTE PTR [rax],dl
  402ef7:	add    BYTE PTR [rbx+0x0],ch
  402efa:	add    BYTE PTR [rax],al
  402efc:	add    eax,0xd000e00
  402f01:	add    BYTE PTR [rax],al
  402f03:	add    BYTE PTR [rax],dl
  402f05:	add    BYTE PTR [rax+0x0],dh
  402f08:	(bad)  
  402f09:	add    BYTE PTR [rip+0x14001800],al        # 0x1440470f
  402f0f:	add    BYTE PTR [rax],al
  402f11:	add    BYTE PTR [rax],dl
  402f13:	add    BYTE PTR [rax+0x0],bh
  402f16:	(bad)  
  402f17:	add    BYTE PTR [rip+0x25001e00],al        # 0x25404d1d
  402f1d:	add    BYTE PTR [rdx],al
  402f1f:	add    DWORD PTR [rax],eax
  402f21:	add    BYTE PTR [rax+0x9000000],cl
  402f27:	add    BYTE PTR [rsi+0x0],ch
  402f2a:	(bad)  
  402f2b:	add    BYTE PTR [rcx],cl
  402f2d:	add    DWORD PTR [rax],edx
  402f2f:	add    BYTE PTR [rdi+0xd003700],dl
  402f35:	add    BYTE PTR [rax+rax*1+0x27],bh
  402f39:	add    BYTE PTR [rcx],cl
  402f3b:	add    DWORD PTR [rax],edx
  402f3d:	add    BYTE PTR [rbx+0xd003700],bl
  402f43:	add    BYTE PTR [rcx+0x1002700],al
  402f49:	add    DWORD PTR [rax],eax
  402f4b:	add    BYTE PTR [rax+0x9003700],dh
  402f51:	add    BYTE PTR [rax+rax*1+0x27],al
  402f58:	adc    BYTE PTR [rax],al
  402f5a:	mov    BYTE PTR [rax],0x37
  402f5d:	add    BYTE PTR [rip+0x27008700],al        # 0x2740b663
  402f63:	add    BYTE PTR [rax],al
  402f65:	add    DWORD PTR [rax],edx
  402f67:	add    ah,dl
  402f69:	add    BYTE PTR [rdi],dh
  402f6b:	add    BYTE PTR [rcx],dl
  402f6d:	add    BYTE PTR [rdi-0x7effcb00],al
  402f73:	add    DWORD PTR [rax],edx
  402f75:	add    bh,ah
  402f77:	add    BYTE PTR [rdi],dh
  402f79:	add    BYTE PTR [rip+0x38008700],al        # 0x3840b67f
  402f7f:	add    BYTE PTR [rsi-0x80],dl
  402f82:	push   rsi
  402f83:	add    DWORD PTR [rdx],ecx
  402f85:	add    BYTE PTR [rsi-0x80],dl
  402f88:	add    DWORD PTR fs:[rsi],ebx
  402f8b:	add    BYTE PTR [rsi-0x80],dl
  402f8e:	jno    0x402f91
  402f90:	(bad)  
  402f91:	add    BYTE PTR [rsi-0x80],dl
  402f94:	jle    0x402f97
  402f96:	or     al,BYTE PTR [rax]
  402f98:	push   rsi
  402f99:	adc    BYTE PTR [rbx+0x56000a01],0x80
  402fa0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  402fa1:	add    DWORD PTR [rdx],ecx
  402fa3:	add    BYTE PTR [rsi-0x80],dl
  402fa6:	mov    edi,0x56000a01
  402fab:	adc    ch,0x1
  402fae:	or     al,BYTE PTR [rax]
  402fb0:	push   rsi
  402fb1:	sub    dh,0x1
  402fb4:	or     al,BYTE PTR [rax]
  402fb6:	push   rsi
  402fb7:	add    BYTE PTR [rdi],0x2
  402fba:	or     al,BYTE PTR [rax]
  402fbc:	push   rsi
  402fbd:	sbb    BYTE PTR [rdx],0x2
  402fc0:	in     al,0x0
  402fc2:	push   rsi
  402fc3:	sub    BYTE PTR [rdx+rax*1],0xe4
  402fc7:	add    BYTE PTR [rsi-0x80],dl
  402fca:	rex.W add cl,BYTE PTR [rdx]
  402fcd:	add    BYTE PTR [rsi-0x80],dl
  402fd0:	jmp    0x402fd4
  402fd2:	or     al,BYTE PTR [rax]
  402fd4:	push   rsi
  402fd5:	cmp    dl,0x2
  402fd8:	or     al,BYTE PTR [rax]
  402fda:	push   rsi
  402fdb:	or     BYTE PTR [rip+0x56000a03],0x80        # 0x564039e5
  402fe2:	sbb    BYTE PTR [rbx],al
  402fe4:	or     al,BYTE PTR [rax]
  402fe6:	push   rsi
  402fe7:	sub    BYTE PTR [rcx],0x3
  402fea:	or     al,BYTE PTR [rax]
  402fec:	push   rsi
  402fed:	sub    BYTE PTR [rdi],0x3
  402ff0:	or     al,BYTE PTR [rax]
  402ff2:	push   rsi
  402ff3:	add    BYTE PTR [rsi+0x3],0xa
  402ff7:	add    BYTE PTR [rsi-0x80],dl
  402ffa:	pop    rbp
  402ffb:	add    ecx,DWORD PTR [rdx]
  402ffd:	add    BYTE PTR [rcx],dl
  402fff:	add    BYTE PTR [rdi+0x11024603],dl
  403005:	add    BYTE PTR [rdi+0x51024a03],ah
  40300b:	cmp    BYTE PTR [rdx+0x51001e03],0x80
  403012:	ret    0x1e03
  403015:	add    BYTE PTR [rcx-0x80],dl
  403018:	fild   DWORD PTR [rbx]
  40301a:	(bad)  
  40301b:	add    BYTE PTR [rcx-0x80],dl
  40301e:	test   DWORD PTR [rbx],0x31000a
  403024:	(bad)  
  403025:	add    al,0x6e
  403027:	add    dh,BYTE PTR [rcx]
  403029:	add    BYTE PTR [rbx],cl
  40302b:	add    al,0x6e
  40302d:	add    dl,BYTE PTR [rsi-0x80]
  403030:	(bad)  
  403031:	add    eax,0x8056001e
  403036:	xor    eax,0x56001e05
  40303b:	or     BYTE PTR [rcx+0x5],0x1e
  40303f:	add    BYTE PTR [rsi-0x80],dl
  403042:	push   0x56001e05
  403047:	add    BYTE PTR [rsi+0x56001e05],0x80
  40304e:	movabs eax,ds:0x1e05bf8056001e05
  403057:	add    BYTE PTR [rsi-0x80],dl
  40305a:	rol    BYTE PTR [rip+0xffffffff8056001e],1        # 0xffffffff8096307e
  403060:	fiadd  WORD PTR [rip+0xffffffff8056001e]        # 0xffffffff80963084
  403066:	cmc    
  403067:	add    eax,0x8056001e
  40306c:	or     eax,0x56001e06
  403071:	and    BYTE PTR [rsi+rax*1],0x1e
  403075:	add    BYTE PTR [rsi-0x80],dl
  403078:	cmp    al,BYTE PTR [rsi]
  40307a:	(bad)  
  40307b:	add    BYTE PTR [rsi-0x80],dl
  40307e:	push   rax
  40307f:	(bad)  
  403080:	(bad)  
  403081:	add    BYTE PTR [rsi-0x80],dl
  403084:	push   0x6
  403086:	(bad)  
  403087:	add    BYTE PTR [rsi-0x80],dl
  40308a:	mov    eax,DWORD PTR [rsi]
  40308c:	(bad)  
  40308d:	add    BYTE PTR [rsi-0x80],dl
  403090:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  403091:	(bad)  
  403092:	(bad)  
  403093:	add    BYTE PTR [rsi-0x80],dl
  403096:	ret    
  403097:	(bad)  
  403098:	(bad)  
  403099:	add    BYTE PTR [rsi-0x80],dl
  40309c:	loop   0x4030a4
  40309e:	(bad)  
  40309f:	add    BYTE PTR [rsi-0x80],dl
  4030a2:	add    BYTE PTR [rdi],al
  4030a4:	(bad)  
  4030a5:	add    BYTE PTR [rsi-0x80],dl
  4030a8:	sbb    eax,0x56001e07
  4030ad:	cmp    BYTE PTR [rdx],0x7
  4030b0:	(bad)  
  4030b1:	add    BYTE PTR [rsi-0x80],dl
  4030b4:	pop    rax
  4030b5:	(bad)  
  4030b6:	(bad)  
  4030b7:	add    BYTE PTR [rsi-0x80],dl
  4030ba:	jb     0x4030c3
  4030bc:	(bad)  
  4030bd:	add    BYTE PTR [rsi-0x80],dl
  4030c0:	mov    DWORD PTR [rdi],eax
  4030c2:	(bad)  
  4030c3:	add    BYTE PTR [rsi-0x80],dl
  4030c6:	stos   BYTE PTR es:[rdi],al
  4030c7:	(bad)  
  4030c8:	(bad)  
  4030c9:	add    BYTE PTR [rsi-0x80],dl
  4030cc:	retf   0x1e07
  4030cf:	add    BYTE PTR [rsi-0x80],dl
  4030d2:	repnz (bad) 
  4030d4:	(bad)  
  4030d5:	add    BYTE PTR [rsi-0x80],dl
  4030d8:	sbb    DWORD PTR [rax],ecx
  4030da:	(bad)  
  4030db:	add    BYTE PTR [rsi-0x80],dl
  4030de:	cmp    BYTE PTR [rax],cl
  4030e0:	(bad)  
  4030e1:	add    BYTE PTR [rsi-0x80],dl
  4030e4:	push   rdi
  4030e5:	or     BYTE PTR [rsi],bl
  4030e7:	add    BYTE PTR [rsi-0x80],dl
  4030ea:	jge    0x4030f4
  4030ec:	(bad)  
  4030ed:	add    BYTE PTR [rsi-0x80],dl
  4030f0:	movabs ds:0xe408bd8056001e08,eax
  4030f9:	add    BYTE PTR [rsi-0x80],dl
  4030fc:	fmul   DWORD PTR [rax]
  4030fe:	in     al,0x0
  403100:	push   rsi
  403101:	xor    bl,0x8
  403104:	in     al,0x0
  403106:	push   rsi
  403107:	or     BYTE PTR [rip+0x5600e409],0x80        # 0x56411517
  40310e:	(bad)  
  40310f:	or     DWORD PTR [rsi],ebx
  403111:	add    BYTE PTR [rsi-0x80],dl
  403114:	(bad)  
  403115:	or     DWORD PTR [rsi],ebx
  403117:	add    BYTE PTR [rsi-0x80],dl
  40311a:	or     DWORD PTR [r14],r11d
  40311d:	add    BYTE PTR [rsi-0x80],dl
  403120:	pop    rax
  403121:	or     DWORD PTR [rsi],ebx
  403123:	add    BYTE PTR [rsi-0x80],dl
  403126:	outs   dx,DWORD PTR ds:[rsi]
  403127:	or     DWORD PTR [rsi],ebx
  403129:	add    BYTE PTR [rsi-0x80],dl
  40312c:	jp     0x403137
  40312e:	(bad)  
  40312f:	add    BYTE PTR [rsi-0x80],dl
  403132:	mov    cl,BYTE PTR [rcx]
  403134:	(bad)  
  403135:	add    BYTE PTR [rsi-0x80],dl
  403138:	(bad)  
  403139:	or     DWORD PTR [rsi],ebx
  40313b:	add    BYTE PTR [rsi-0x80],dl
  40313e:	stos   BYTE PTR es:[rdi],al
  40313f:	or     DWORD PTR [rsi],ebx
  403141:	add    BYTE PTR [rsi-0x80],dl
  403144:	mov    eax,0x56001e09
  403149:	add    cl,0x9
  40314c:	(bad)  
  40314d:	add    BYTE PTR [rsi-0x80],dl
  403150:	retf   
  403151:	or     DWORD PTR [rsi],ebx
  403153:	add    BYTE PTR [rsi-0x80],dl
  403156:	fimul  DWORD PTR [rcx]
  403158:	(bad)  
  403159:	add    BYTE PTR [rsi-0x80],dl
  40315c:	loope  0x403167
  40315e:	(bad)  
  40315f:	add    BYTE PTR [rsi-0x80],dl
  403162:	out    dx,al
  403163:	or     DWORD PTR [rsi],ebx
  403165:	add    BYTE PTR [rsi-0x80],dl
  403168:	clc    
  403169:	or     DWORD PTR [rsi],ebx
  40316b:	add    BYTE PTR [rsi-0x80],dl
  40316e:	add    al,0xa
  403170:	(bad)  
  403171:	add    BYTE PTR [rsi-0x80],dl
  403174:	adc    BYTE PTR [rdx],cl
  403176:	(bad)  
  403177:	add    BYTE PTR [rsi-0x80],dl
  40317a:	and    eax,0x56001e0a
  40317f:	cmp    BYTE PTR [rbx],0xa
  403182:	(bad)  
  403183:	add    BYTE PTR [rsi-0x80],dl
  403186:	push   rbx
  403187:	or     bl,BYTE PTR [rsi]
  403189:	add    BYTE PTR [rsi-0x80],dl
  40318c:	or     bl,BYTE PTR [esi]
  40318f:	add    BYTE PTR [rsi-0x80],dl
  403192:	jnp    0x40319e
  403194:	(bad)  
  403195:	add    BYTE PTR [rsi-0x80],dl
  403198:	xchg   ebp,eax
  403199:	or     bl,BYTE PTR [rsi]
  40319b:	add    BYTE PTR [rsi-0x80],dl
  40319e:	lods   eax,DWORD PTR ds:[rsi]
  40319f:	or     bl,BYTE PTR [rsi]
  4031a1:	add    BYTE PTR [rsi-0x80],dl
  4031a4:	(bad)  
  4031a5:	or     bl,BYTE PTR [rsi]
  4031a7:	add    BYTE PTR [rsi-0x80],dl
  4031aa:	fmul   DWORD PTR [rdx]
  4031ac:	(bad)  
  4031ad:	add    BYTE PTR [rsi-0x80],dl
  4031b0:	in     al,dx
  4031b1:	or     bl,BYTE PTR [rsi]
  4031b3:	add    BYTE PTR [rsi-0x80],dl
  4031b6:	dec    DWORD PTR [rdx]
  4031b8:	(bad)  
  4031b9:	add    BYTE PTR [rsi-0x80],dl
  4031bc:	adc    cl,BYTE PTR [rbx]
  4031be:	(bad)  
  4031bf:	add    BYTE PTR [rsi-0x80],dl
  4031c2:	and    cl,BYTE PTR [rbx]
  4031c4:	(bad)  
  4031c5:	add    BYTE PTR [rsi-0x80],dl
  4031c8:	xor    al,0xb
  4031ca:	(bad)  
  4031cb:	add    BYTE PTR [rsi-0x80],dl
  4031ce:	or     r11d,DWORD PTR [rsi]
  4031d1:	add    BYTE PTR [rsi-0x80],dl
  4031d4:	push   rsi
  4031d5:	or     ebx,DWORD PTR [rsi]
  4031d7:	add    BYTE PTR [rsi-0x80],dl
  4031da:	outs   dx,DWORD PTR ds:[rsi]
  4031db:	or     ebx,DWORD PTR [rsi]
  4031dd:	add    BYTE PTR [rsi-0x80],dl
  4031e0:	mov    BYTE PTR [rbx],cl
  4031e2:	(bad)  
  4031e3:	add    BYTE PTR [rsi-0x80],dl
  4031e6:	lahf   
  4031e7:	or     ebx,DWORD PTR [rsi]
  4031e9:	add    BYTE PTR [rsi-0x80],dl
  4031ec:	mov    dh,0xb
  4031ee:	(bad)  
  4031ef:	add    BYTE PTR [rsi-0x80],dl
  4031f2:	enter  0x1e0b,0x0
  4031f6:	push   rsi
  4031f7:	sbb    dl,0xb
  4031fa:	(bad)  
  4031fb:	add    BYTE PTR [rsi-0x80],dl
  4031fe:	out    dx,al
  4031ff:	or     ebx,DWORD PTR [rsi]
  403201:	add    BYTE PTR [rsi],dh
  403203:	add    bh,bh
  403205:	or     ebx,DWORD PTR [rbp+0x3]
  403208:	add    BYTE PTR ss:[rcx],dl
  40320b:	or     al,0x5d
  40320d:	add    eax,DWORD PTR [rsi]
  40320f:	(bad)  
  403210:	and    al,0xc
  403212:	in     al,0x0
  403214:	push   rsi
  403215:	sub    BYTE PTR [rsp+rcx*1],0x60
  403219:	add    edx,DWORD PTR [rsi-0x80]
  40321c:	rex.XB or al,0x60
  40321f:	add    edx,DWORD PTR [rsi-0x80]
  403222:	push   rdx
  403223:	or     al,0x60
  403225:	add    edx,DWORD PTR [rsi-0x80]
  403228:	pop    rbp
  403229:	or     al,0x60
  40322b:	add    edx,DWORD PTR [rsi-0x80]
  40322e:	push   0x5603600c
  403233:	cmp    BYTE PTR [rax+0xc],0x60
  403237:	add    edx,DWORD PTR [rsi-0x80]
  40323a:	or     DWORD PTR [rax+riz*2],0x3
  40323e:	push   rsi
  40323f:	adc    BYTE PTR [rsp+rcx*1-0x7fa9fca0],0xa5
  403247:	or     al,0x60
  403249:	add    edx,DWORD PTR [rsi-0x80]
  40324c:	mov    dl,0xc
  40324e:	(bad)  
  40324f:	add    edx,DWORD PTR [rsi-0x80]
  403252:	ret    
  403253:	or     al,0x60
  403255:	add    edx,DWORD PTR [rsi-0x80]
  403258:	fimul  WORD PTR [rax+riz*2]
  40325b:	add    edx,DWORD PTR [rsi-0x80]
  40325e:	lock or al,0x60
  403261:	add    eax,DWORD PTR [rsi]
  403263:	add    BYTE PTR [rax],cl
  403265:	or     eax,0x60364
  40326a:	adc    al,0xd
  40326c:	add    eax,DWORD PTR fs:[rsi]
  40326f:	add    BYTE PTR [rcx],bl
  403271:	or     eax,0x60367
  403276:	and    DWORD PTR [rip+0x60367],ecx        # 0x4635e3
  40327c:	sub    cl,BYTE PTR [rip+0x60367]        # 0x4635e9
  403282:	and    DWORD PTR [rip+0x600e4],ecx        # 0x46336c
  403288:	(bad)  
  403289:	or     eax,0x600e4
  40328e:	cmp    eax,0x600e40d
  403293:	(bad)  
  403294:	and    al,0xc
  403296:	(bad)  
  403297:	add    BYTE PTR [rsi-0x80],dl
  40329a:	rex.WX or rax,0xffffffff8056036a
  4032a0:	(bad)  
  4032a1:	or     eax,0x20d0036a
  4032a6:	add    BYTE PTR [rax],al
  4032a8:	add    BYTE PTR [rax],al
  4032aa:	xchg   esi,eax
  4032ab:	or     BYTE PTR [rcx+0x2],ah
  4032ae:	sbb    al,0x1
  4032b0:	add    DWORD PTR [rax],eax
  4032b2:	xlat   BYTE PTR ds:[rbx]
  4032b3:	and    BYTE PTR [rax],al
  4032b5:	add    BYTE PTR [rax],al
  4032b7:	add    BYTE PTR [rax+rbx*1+0x124028f],al
  4032be:	add    DWORD PTR [rax],eax
  4032c0:	fbld   TBYTE PTR [rax]
  4032c2:	add    BYTE PTR [rax],al
  4032c4:	add    BYTE PTR [rax],al
  4032c6:	xchg   esi,eax
  4032c7:	or     BYTE PTR [rsi+0x1012802],dh
  4032cd:	add    dh,ah
  4032cf:	and    BYTE PTR [rax],al
  4032d1:	add    BYTE PTR [rax],al
  4032d3:	add    BYTE PTR [rsi+0x2d02c208],dl
  4032d9:	add    DWORD PTR [rcx],eax
  4032db:	add    dh,ch
  4032dd:	and    BYTE PTR [rax],al
  4032df:	add    BYTE PTR [rax],al
  4032e1:	add    BYTE PTR [rsi+0x1c02ce08],dl
  4032e7:	add    DWORD PTR [rdx],eax
  4032e9:	add    dl,bh
  4032eb:	and    BYTE PTR [rax],al
  4032ed:	add    BYTE PTR [rax],al
  4032ef:	add    BYTE PTR [rsi+0x3302eb00],dl
  4032f5:	add    DWORD PTR [rdx],eax
  4032f7:	add    BYTE PTR [rdi],al
  4032f9:	and    DWORD PTR [rax],eax
  4032fb:	add    BYTE PTR [rax],al
  4032fd:	add    BYTE PTR [rsi+0x3802fa00],dl
  403303:	add    DWORD PTR [rbx],eax
  403305:	add    BYTE PTR [rip+0x21],dl        # 0x40332c
  40330b:	add    BYTE PTR [rsi+0x33030d00],dl
  403311:	add    DWORD PTR [rip+0x212200],eax        # 0x615517
  403317:	add    BYTE PTR [rax],al
  403319:	add    BYTE PTR [rsi+0x33031800],dl
  40331f:	add    DWORD PTR [rsi],eax
  403321:	add    BYTE PTR [rdi],ch
  403323:	and    DWORD PTR [rax],eax
  403325:	add    BYTE PTR [rax],al
  403327:	add    BYTE PTR [rsi+0x33032900],dl
  40332d:	add    DWORD PTR [rdi],eax
  40332f:	add    BYTE PTR [rcx+riz*1],bh
  403332:	add    BYTE PTR [rax],al
  403334:	add    BYTE PTR [rax],al
  403336:	xchg   esi,eax
  403337:	add    BYTE PTR [rdi],ch
  403339:	add    esi,DWORD PTR [rbx]
  40333b:	add    DWORD PTR [rax],ecx
  40333d:	add    BYTE PTR [rcx+0x21],cl
  403340:	add    BYTE PTR [rax],al
  403342:	add    BYTE PTR [rax],al
  403344:	xchg   esi,eax
  403345:	add    BYTE PTR [rsi+0x3],al
  403348:	add    DWORD PTR ds:[rcx],ecx
  40334b:	add    BYTE PTR [rbx+0x21],bl
  40334e:	add    BYTE PTR [rax],al
  403350:	add    BYTE PTR [rax],al
  403352:	sbb    DWORD PTR [rax],0x124028f
  403358:	or     al,BYTE PTR [rax]
  40335a:	movsxd esp,DWORD PTR [rcx]
  40335c:	add    BYTE PTR [rax],al
  40335e:	add    BYTE PTR [rax],al
  403360:	xchg   esi,eax
  403361:	or     BYTE PTR [rsi+0xa012802],dh
  403367:	add    BYTE PTR [rdx+0x21],ch
  40336a:	add    BYTE PTR [rax],al
  40336c:	add    BYTE PTR [rax],al
  40336e:	xchg   esi,eax
  40336f:	or     dl,al
  403371:	add    ch,BYTE PTR [rip+0x72000a01]        # 0x72403d78
  403377:	and    DWORD PTR [rax],eax
  403379:	add    BYTE PTR [rax],al
  40337b:	add    BYTE PTR [rsi+0x3303b000],dl
  403381:	add    DWORD PTR [rbx],ecx
  403383:	add    BYTE PTR [rcx+riz*1+0x0],al
  40338a:	xchg   esi,eax
  40338b:	add    BYTE PTR [rax+0xc024e03],dh
  403391:	add    BYTE PTR [rax+0x21],bh
  403397:	add    BYTE PTR [rsi+0x5403b000],dl
  40339d:	add    cl,BYTE PTR [rsi]
  40339f:	add    bh,ch
  4033a1:	and    DWORD PTR [rax],eax
  4033a3:	add    BYTE PTR [rax],al
  4033a5:	add    BYTE PTR [rcx-0x31eee6e8],dl
  4033ab:	add    al,0x11
  4033ad:	add    BYTE PTR [rdx+riz*1],ah
  4033b0:	add    BYTE PTR [rax],al
  4033b2:	add    BYTE PTR [rax],al
  4033b4:	xchg   ecx,eax
  4033b5:	add    BYTE PTR [rax],dl
  4033b7:	add    al,0x72
  4033b9:	add    dl,BYTE PTR [rcx]
  4033bb:	add    ah,al
  4033bd:	and    al,BYTE PTR [rax]
  4033bf:	add    BYTE PTR [rax],al
  4033c1:	add    BYTE PTR [rcx+0x78043100],dl
  4033c7:	add    dl,BYTE PTR [rdx]
  4033c9:	add    BYTE PTR [rax+0x23],dl
  4033cf:	add    BYTE PTR [rcx+0x7e044a00],dl
  4033d5:	add    dl,BYTE PTR [rbx]
  4033d7:	add    BYTE PTR [rax],bh
  4033d9:	and    al,0x0
  4033db:	add    BYTE PTR [rax],al
  4033dd:	add    BYTE PTR [rcx-0x7cfba700],dl
  4033e3:	add    dl,BYTE PTR [rax+rax*1]
  4033e6:	(bad)  
  4033e7:	and    al,0x0
  4033e9:	add    BYTE PTR [rax],al
  4033eb:	add    BYTE PTR [rcx-0x76fb8900],dl
  4033f1:	add    dl,BYTE PTR [rip+0x247e00]        # 0x64b1f7
  4033f7:	add    BYTE PTR [rax],al
  4033f9:	add    BYTE PTR [rcx-0x71fb7300],dl
  4033ff:	add    dl,BYTE PTR [rsi]
  403401:	add    BYTE PTR [rsp+0x0],ah
  403408:	xchg   ecx,eax
  403409:	add    BYTE PTR [rax+0x18029504],ah
  40340f:	add    BYTE PTR [rax+0x26],bh
  403415:	add    BYTE PTR [rcx-0x62fb4200],dl
  40341b:	add    bl,BYTE PTR [rdx]
  40341d:	add    al,bl
  40341f:	add    BYTE PTR es:[rax],al
  403422:	add    BYTE PTR [rax],al
  403424:	xchg   ecx,eax
  403425:	add    bl,bl
  403427:	add    al,0xa2
  403429:	add    bl,BYTE PTR [rbx]
  40342b:	add    BYTE PTR [rcx],bl
  40342d:	(bad)  
  40342e:	add    BYTE PTR [rax],al
  403430:	add    BYTE PTR [rax],al
  403432:	xchg   ecx,eax
  403433:	add    al,dh
  403435:	add    al,0xa2
  403437:	add    bl,BYTE PTR [rax+rax*1]
  40343a:	sub    al,0x27
  40343c:	add    BYTE PTR [rax],al
  40343e:	add    BYTE PTR [rax],al
  403440:	xchg   ecx,eax
  403441:	add    ah,bh
  403443:	add    al,0xa8
  403445:	add    bl,BYTE PTR [rip+0x275800]        # 0x678c4b
  40344b:	add    BYTE PTR [rax],al
  40344d:	add    BYTE PTR [rcx-0x57fafc00],dl
  403453:	add    bl,BYTE PTR [rsi]
  403455:	add    al,dl
  403457:	(bad)  
  403458:	add    BYTE PTR [rax],al
  40345a:	add    BYTE PTR [rax],al
  40345c:	xchg   ecx,eax
  40345d:	add    BYTE PTR [rdi],cl
  40345f:	add    eax,0x1f0133
  403464:	(bad)  
  403465:	sub    BYTE PTR [rax],al
  403467:	add    BYTE PTR [rax],al
  403469:	add    BYTE PTR [rcx-0x51fae700],dl
  40346f:	add    ah,BYTE PTR [rax]
  403471:	add    BYTE PTR [rdx],ah
  403473:	sub    BYTE PTR [rax],al
  403475:	add    BYTE PTR [rax],al
  403477:	add    BYTE PTR [rcx-0x4cfae700],dl
  40347d:	add    ah,BYTE PTR [rcx]
  40347f:	add    BYTE PTR [rdi+0x28],cl
  403482:	add    BYTE PTR [rax],al
  403484:	add    BYTE PTR [rax],al
  403486:	xchg   BYTE PTR [rax],bl
  403488:	pop    QWORD PTR [rdx]
  40348a:	and    al,0x1
  40348c:	and    al,BYTE PTR [rax]
  40348e:	sub    eax,0x28
  403493:	add    BYTE PTR [rcx-0x31eee6e8],dl
  403499:	add    al,0x22
  40349b:	add    BYTE PTR [rdi+0x28],dh
  40349e:	add    BYTE PTR [rax],al
  4034a0:	add    BYTE PTR [rax],al
  4034a2:	xchg   BYTE PTR [rax],bl
  4034a4:	pop    QWORD PTR [rdx]
  4034a6:	and    al,0x1
  4034a8:	and    al,BYTE PTR [rax]
  4034aa:	push   rdi
  4034ab:	sub    BYTE PTR [rax],al
  4034ad:	add    BYTE PTR [rax],al
  4034af:	add    BYTE PTR [rcx-0x31eee6e8],dl
  4034b5:	add    al,0x22
  4034b7:	add    BYTE PTR [rax],al
  4034b9:	add    BYTE PTR [rax],al
  4034bb:	add    BYTE PTR [rax+0x74209600],al
  4034c1:	or     eax,0x22036e
  4034c6:	add    BYTE PTR [rax],al
  4034c8:	add    BYTE PTR [rax],al
  4034ca:	add    BYTE PTR [rax],0x96
  4034cd:	and    BYTE PTR [rcx+0x27037a0d],al
  4034d3:	add    BYTE PTR [rax],al
  4034d5:	add    BYTE PTR [rax],al
  4034d7:	add    BYTE PTR [rax-0x6fdf6a00],al
  4034dd:	or     eax,0x30038b
  4034e2:	add    BYTE PTR [rax],al
  4034e4:	add    BYTE PTR [rax],al
  4034e6:	add    BYTE PTR [rax],0x96
  4034e9:	and    BYTE PTR [rdx+0x3303930d],ah
  4034ef:	add    BYTE PTR [rax],al
  4034f1:	add    BYTE PTR [rax],al
  4034f3:	add    BYTE PTR [rax-0x27df6d00],al
  4034f9:	or     eax,0x340398
  4034fe:	add    BYTE PTR [rax],al
  403500:	add    BYTE PTR [rax],al
  403502:	add    BYTE PTR [rax],0x96
  403505:	and    al,ch
  403507:	or     eax,0x3c03a7
  40350c:	add    BYTE PTR [rax],al
  40350e:	add    BYTE PTR [rax],al
  403510:	add    BYTE PTR [rax],0x96
  403513:	and    BYTE PTR [rsi+rcx*1],al
  403516:	lods   al,BYTE PTR ds:[rsi]
  403517:	add    edi,DWORD PTR [rip+0x0]        # 0x40351d
  40351d:	add    BYTE PTR [rax+0xe209300],al
  403523:	(bad)  
  403524:	mov    cl,0x3
  403526:	add    BYTE PTR ds:[rax],al
  403529:	add    BYTE PTR [rax],al
  40352b:	add    BYTE PTR [rax+0x1e209600],al
  403531:	(bad)  
  403532:	rol    BYTE PTR [rbx],0x45
  403535:	add    BYTE PTR [rax],al
  403537:	add    BYTE PTR [rax],al
  403539:	add    BYTE PTR [rax-0x41df6a00],al
  40353f:	add    al,0xc7
  403541:	add    ecx,DWORD PTR [rcx+0x0]
  403544:	add    BYTE PTR [rax],al
  403546:	add    BYTE PTR [rax],al
  403548:	add    BYTE PTR [rax],0x96
  40354b:	and    BYTE PTR [rbx],bh
  40354d:	(bad)  
  40354e:	rol    BYTE PTR [rbx],1
  403550:	rex.WRB add BYTE PTR [r8],r8b
  403553:	add    BYTE PTR [rax],al
  403555:	add    BYTE PTR [rax+0x45209600],al
  40355b:	(bad)  
  40355c:	(bad)  
  40355d:	add    edx,DWORD PTR [rax+0x0]
  403560:	add    BYTE PTR [rax],al
  403562:	add    BYTE PTR [rax],al
  403564:	add    BYTE PTR [rax],0x96
  403567:	and    BYTE PTR [rdi+0xe],dl
  40356a:	loope  0x40356f
  40356c:	push   rsp
  40356d:	add    BYTE PTR [rdi+0x28],bh
  403570:	add    BYTE PTR [rax],al
  403572:	add    BYTE PTR [rax],al
  403574:	xchg   BYTE PTR [rax],bl
  403576:	pop    QWORD PTR [rdx]
  403578:	and    al,0x1
  40357a:	pop    rbx
  40357b:	add    BYTE PTR [rdi+0x28],al
  403581:	add    BYTE PTR [rsi+0x24028f18],al
  403587:	add    DWORD PTR [rbx+0x0],ebx
  40358a:	nop
  40358b:	sub    BYTE PTR [rax],al
  40358d:	add    BYTE PTR [rax],al
  40358f:	add    BYTE PTR [rsi-0x12fd70e8],al
  403595:	add    ebx,DWORD PTR [rbx+0x0]
  403598:	movabs al,ds:0x6500c40000000028
  4035a1:	(bad)  
  4035a2:	repz add ebx,DWORD PTR [rbp+0x0]
  4035a6:	mov    al,0x28
  4035a8:	add    BYTE PTR [rax],al
  4035aa:	add    BYTE PTR [rax],al
  4035ac:	xchg   esi,eax
  4035ad:	add    BYTE PTR [rbp+0xe],bh
  4035b0:	test   DWORD PTR [rbx],0x28bc005d
  4035b6:	add    BYTE PTR [rax],al
  4035b8:	add    BYTE PTR [rax],al
  4035ba:	xchg   esi,eax
  4035bb:	add    BYTE PTR [rsi+rcx*1+0x5d03fc],dl
  4035c2:	in     al,0x28
  4035c4:	add    BYTE PTR [rax],al
  4035c6:	add    BYTE PTR [rax],al
  4035c8:	xchg   esi,eax
  4035c9:	add    BYTE PTR [rsi+rcx*1+0x5e013e],ch
  4035d0:	add    BYTE PTR [rax],al
  4035d2:	add    DWORD PTR [rax],eax
  4035d4:	mov    ch,0x10
  4035d6:	add    BYTE PTR [rax],al
  4035d8:	add    DWORD PTR [rax],eax
  4035da:	mov    ebx,0x1000010
  4035df:	add    BYTE PTR [rbx+0x2000010],bh
  4035e5:	add    bl,al
  4035e7:	adc    BYTE PTR [rax],al
  4035e9:	add    BYTE PTR [rcx],al
  4035eb:	add    BYTE PTR [rbx+0x1000010],bh
  4035f1:	add    BYTE PTR [rbx+0x1000010],bh
  4035f7:	add    BYTE PTR [rbx+0x1000010],bh
  4035fd:	add    BYTE PTR [rbx+0x1000010],bh
  403603:	add    dh,cl
  403605:	adc    BYTE PTR [rax],al
  403607:	add    BYTE PTR [rcx],al
  403609:	add    BYTE PTR [rbp+0x1000010],dh
  40360f:	add    dl,bl
  403611:	adc    BYTE PTR [rax],al
  403613:	add    BYTE PTR [rcx],al
  403615:	add    dl,bl
  403617:	adc    BYTE PTR [rax],al
  403619:	add    BYTE PTR [rdx],al
  40361b:	add    dh,bl
  40361d:	adc    BYTE PTR [rax],al
  40361f:	add    BYTE PTR [rcx],al
  403621:	add    dl,bl
  403623:	adc    BYTE PTR [rax],al
  403625:	add    BYTE PTR [rdx],al
  403627:	add    dh,bl
  403629:	adc    BYTE PTR [rax],al
  40362b:	add    BYTE PTR [rbx],al
  40362d:	add    BYTE PTR [rcx+rdx*1],dl
  403630:	add    BYTE PTR [rax],al
  403632:	add    DWORD PTR [rax],eax
  403634:	jle    0x403647
  403636:	add    BYTE PTR [rax],al
  403638:	add    DWORD PTR [rax],eax
  40363a:	ficom  DWORD PTR [rax]
  40363c:	add    BYTE PTR [rax],al
  40363e:	add    DWORD PTR [rax],eax
  403640:	mov    ebx,0x1000010
  403645:	add    BYTE PTR [rdx],dh
  403647:	adc    al,BYTE PTR [rax]
  403649:	add    BYTE PTR [rcx],al
  40364b:	add    BYTE PTR [rdx],dh
  40364d:	adc    al,BYTE PTR [rax]
  40364f:	add    BYTE PTR [rcx],al
  403651:	add    BYTE PTR [rax+0x12],bl
  403654:	add    BYTE PTR [rax],al
  403656:	add    al,BYTE PTR [rax]
  403658:	xor    dl,BYTE PTR [rdx]
  40365a:	add    BYTE PTR [rax],al
  40365c:	add    DWORD PTR [rax],eax
  40365e:	pop    rax
  40365f:	adc    al,BYTE PTR [rax]
  403661:	add    BYTE PTR [rdx],al
  403663:	add    BYTE PTR [rdi+0x12],bl
  403666:	add    BYTE PTR [rax],al
  403668:	add    DWORD PTR [rax],eax
  40366a:	xor    dl,BYTE PTR [rdx]
  40366c:	add    BYTE PTR [rax],al
  40366e:	add    DWORD PTR [rax],eax
  403670:	pop    rdi
  403671:	adc    al,BYTE PTR [rax]
  403673:	add    BYTE PTR [rcx],al
  403675:	add    BYTE PTR [rdi+0x12],bl
  403678:	add    BYTE PTR [rax],al
  40367a:	add    DWORD PTR [rax],eax
  40367c:	mov    ebx,0x1000010
  403681:	add    BYTE PTR [rbx+0x1000010],bh
  403687:	add    BYTE PTR [rbx+0x1000010],bh
  40368d:	add    al,dh
  40368f:	adc    al,0x0
  403691:	add    BYTE PTR [rcx],al
  403693:	add    al,dh
  403695:	adc    al,0x0
  403697:	add    BYTE PTR [rcx],al
  403699:	add    BYTE PTR [rsi+0x15],al
  40369c:	add    DWORD PTR [rax],esp
  40369e:	add    al,BYTE PTR [rax]
  4036a0:	rex.WXB adc rax,0x30000
  4036a6:	adc    DWORD PTR [rip+0x40000],0x2158b        # 0x4436b0
  4036b0:	add    eax,0x159600
  4036b5:	add    BYTE PTR [rcx],al
  4036b7:	add    BYTE PTR [rsi+0x15],al
  4036ba:	add    DWORD PTR [rax],esp
  4036bc:	add    al,BYTE PTR [rax]
  4036be:	rex.WXB adc rax,0x30000
  4036c4:	mov    ebp,0x4200115
  4036c9:	add    dh,al
  4036cb:	adc    eax,0x50000
  4036d0:	(bad)  
  4036d1:	adc    eax,0x60000
  4036d6:	mov    edx,DWORD PTR [rip+0x70000]        # 0x4736dc
  4036dc:	fcom   DWORD PTR [rip+0x80002]        # 0x4836e4
  4036e2:	xchg   esi,eax
  4036e3:	adc    eax,0x90000
  4036e8:	in     eax,dx
  4036e9:	adc    eax,0x10000
  4036ee:	rex.RX adc eax,0x20000
  4036f4:	std    
  4036f5:	adc    eax,0x30000
  4036fa:	xor    dl,BYTE PTR [rdx]
  4036fc:	add    BYTE PTR [rax],al
  4036fe:	add    DWORD PTR [rax],eax
  403700:	rex.RX adc eax,0x10000
  403706:	pop    rax
  403707:	adc    al,BYTE PTR [rax]
  403709:	add    BYTE PTR [rdx],al
  40370b:	add    BYTE PTR [rcx],dl
  40370d:	(bad)  
  40370e:	add    BYTE PTR [rax],al
  403710:	add    eax,DWORD PTR [rax]
  403712:	sbb    al,0x16
  403714:	add    BYTE PTR [rax],al
  403716:	add    al,0x0
  403718:	xor    BYTE PTR [rsi],dl
  40371a:	add    BYTE PTR [rax],al
  40371c:	add    eax,0x2163900
  403721:	add    BYTE PTR [rsi],al
  403723:	add    BYTE PTR [rdx+0x16],al
  403726:	add    BYTE PTR [rax],al
  403728:	(bad)  
  403729:	add    BYTE PTR [rax+0x16],cl
  40372c:	add    al,BYTE PTR [rax]
  40372e:	or     BYTE PTR [rax],al
  403730:	pop    rdi
  403731:	adc    al,BYTE PTR [rcx]
  403733:	add    BYTE PTR [rcx],al
  403735:	add    BYTE PTR [rdx],dh
  403737:	adc    al,BYTE PTR [rax]
  403739:	add    BYTE PTR [rcx],al
  40373b:	add    BYTE PTR [rdx+0x16],bl
  40373e:	add    BYTE PTR [rax],al
  403740:	add    DWORD PTR [rax],eax
  403742:	pop    rax
  403743:	adc    al,BYTE PTR [rax]
  403745:	add    BYTE PTR [rdx],al
  403747:	add    BYTE PTR [rcx],dl
  403749:	(bad)  
  40374a:	add    BYTE PTR [rax],al
  40374c:	add    eax,DWORD PTR [rax]
  40374e:	sbb    al,0x16
  403750:	add    BYTE PTR [rax],al
  403752:	add    al,0x0
  403754:	pop    rdi
  403755:	(bad)  
  403756:	add    BYTE PTR [rax],al
  403758:	add    eax,0x166500
  40375d:	add    BYTE PTR [rsi],al
  40375f:	add    BYTE PTR [rbx+0x16],ch
  403762:	add    BYTE PTR [rax],al
  403764:	(bad)  
  403765:	add    BYTE PTR [rax+0x16],cl
  403768:	add    BYTE PTR [rax],ah
  40376a:	add    BYTE PTR [rax],al
  40376c:	add    BYTE PTR [rax],al
  40376e:	add    BYTE PTR [rax],al
  403770:	add    DWORD PTR [rax],eax
  403772:	xor    dl,BYTE PTR [rdx]
  403774:	add    BYTE PTR [rax],al
  403776:	add    al,BYTE PTR [rax]
  403778:	jo     0x403790
  40377a:	add    BYTE PTR [rax],al
  40377c:	add    eax,DWORD PTR [rax]
  40377e:	xchg   BYTE PTR [rsi],dl
  403780:	add    BYTE PTR [rax],ah
  403782:	add    BYTE PTR [rax],al
  403784:	add    BYTE PTR [rax],al
  403786:	add    BYTE PTR [rax],al
  403788:	add    DWORD PTR [rax],eax
  40378a:	xor    dl,BYTE PTR [rdx]
  40378c:	add    al,BYTE PTR [rax]
  40378e:	add    al,BYTE PTR [rax]
  403790:	xchg   edi,eax
  403791:	(bad)  
  403792:	add    al,BYTE PTR [rax]
  403794:	add    eax,DWORD PTR [rax]
  403796:	movabs al,ds:0x200016
  40379f:	add    BYTE PTR [rcx],al
  4037a1:	add    BYTE PTR [rbp+0x2000016],ch
  4037a7:	add    BYTE PTR [rdx+0x1000016],dh
  4037ad:	add    BYTE PTR [rbp+0x2000016],ch
  4037b3:	add    BYTE PTR [rbp+0x3000016],bh
  4037b9:	add    ch,cl
  4037bb:	(bad)  
  4037bc:	add    BYTE PTR [rax],al
  4037be:	add    al,0x0
  4037c0:	jrcxz  0x4037d8
  4037c2:	add    BYTE PTR [rax],al
  4037c4:	add    DWORD PTR [rax],eax
  4037c6:	stc    
  4037c7:	(bad)  
  4037c8:	add    BYTE PTR [rax],al
  4037ca:	add    al,BYTE PTR [rax]
  4037cc:	add    DWORD PTR [rdi],edx
  4037ce:	add    BYTE PTR [rax],al
  4037d0:	add    eax,DWORD PTR [rax]
  4037d2:	or     dl,BYTE PTR [rdi]
  4037d4:	add    BYTE PTR [rax],al
  4037d6:	add    al,0x0
  4037d8:	(bad)  
  4037d9:	(bad)  
  4037da:	add    BYTE PTR [rax],al
  4037dc:	add    eax,0x172300
  4037e1:	add    BYTE PTR [rsi],al
  4037e3:	add    BYTE PTR [rdi+rdx*1],ch
  4037e6:	add    BYTE PTR [rax],al
  4037e8:	(bad)  
  4037e9:	add    BYTE PTR [rdx],dh
  4037eb:	(bad)  
  4037ec:	add    BYTE PTR [rax],al
  4037ee:	add    DWORD PTR [rax],eax
  4037f0:	pop    rax
  4037f1:	adc    al,BYTE PTR [rax]
  4037f3:	add    BYTE PTR [rdx],al
  4037f5:	add    BYTE PTR [rdi+rdx*1+0x0],al
  4037f9:	add    BYTE PTR [rcx],al
  4037fb:	add    BYTE PTR [rbx+0x17],ch
  4037fe:	add    BYTE PTR [rax],al
  403800:	add    DWORD PTR [rax],eax
  403802:	imul   edx,DWORD PTR [rdi],0x51
  403805:	add    BYTE PTR [rdi+0x59040202],cl
  40380b:	add    BYTE PTR [rdi+0x61040702],cl
  403811:	add    BYTE PTR [rdi+0x69040702],cl
  403817:	add    BYTE PTR [rdi+0x71040702],cl
  40381d:	add    BYTE PTR [rdi+0x79040702],cl
  403823:	add    BYTE PTR [rdi-0x7efbf8fe],cl
  403829:	add    BYTE PTR [rdi-0x76fbf8fe],cl
  40382f:	add    BYTE PTR [rdi-0x6efbf8fe],cl
  403835:	add    BYTE PTR [rdi-0x66fbf8fe],cl
  40383b:	add    BYTE PTR [rdi-0x5efbf8fe],cl
  403841:	add    BYTE PTR [rdi-0x56fbf8fe],cl
  403847:	add    BYTE PTR [rdi-0x46fbf3fe],cl
  40384d:	add    BYTE PTR [rdi-0x3efbedfe],cl
  403853:	add    BYTE PTR [rdi-0x36fedbfe],cl
  403859:	add    BYTE PTR [rdi+0x9012402],cl
  40385f:	add    BYTE PTR [rdi+0x31012402],cl
  403865:	add    BYTE PTR [rax+0x2904b903],dh
  40386b:	add    bl,ah
  40386d:	adc    BYTE PTR [rax],ch
  40386f:	add    ecx,ebx
  403871:	add    BYTE PTR [rip+0xffffffffe904c011],cl        # 0xffffffffe944f888
  403877:	add    BYTE PTR [rdi],dh
  403879:	adc    edx,edx
  40387b:	add    al,0xe9
  40387d:	add    BYTE PTR [rcx+0x11],cl
  403880:	fld    DWORD PTR [rcx+rbp*8]
  403883:	add    BYTE PTR [rbp+0x11],bl
  403886:	fld    QWORD PTR [rcx+rdi*8]
  403889:	add    BYTE PTR [rcx+0x11],dh
  40388c:	loop   0x403892
  40388e:	xor    DWORD PTR [rax],eax
  403890:	pop    QWORD PTR [rdx]
  403892:	call   0xffffffff9441119b
  403897:	adc    eax,esi
  403899:	add    al,0x11
  40389b:	add    DWORD PTR [rcx+rdx*1+0x119027e],esp
  4038a2:	mov    bh,0x11
  4038a4:	stc    
  4038a5:	add    al,0x39
  4038a7:	add    ah,al
  4038a9:	adc    ebp,edi
  4038ab:	add    al,0x21
  4038ad:	add    ebx,ebx
  4038af:	adc    DWORD PTR [rcx+rax*1],esp
  4038b2:	cmp    DWORD PTR [rax],eax
  4038b4:	jrcxz  0x4038c7
  4038b6:	fld    DWORD PTR [rcx+rcx*1]
  4038b9:	add    ah,ch
  4038bb:	adc    ecx,ebx
  4038bd:	add    al,0x39
  4038bf:	add    ch,dh
  4038c1:	adc    DWORD PTR [rbx],ecx
  4038c3:	add    eax,0x122d0131
  4038c8:	pop    rbp
  4038c9:	add    eax,DWORD PTR [rcx+0x1]
  4038cc:	push   rbx
  4038cd:	adc    ah,BYTE PTR [rsi]
  4038cf:	add    eax,0x28f0149
  4038d4:	cmp    DWORD PTR [rip+0x12ba0149],eax        # 0x12fa3a23
  4038da:	rex.X add eax,0x12da0159
  4038e0:	add    rax,0x28f0151
  4038e6:	rex.WR add rax,0x12ef0159
  4038ec:	push   rbx
  4038ed:	add    eax,0x130a0161
  4038f2:	pop    rdx
  4038f3:	add    eax,0x131f0161
  4038f8:	(bad)  
  4038f9:	add    eax,0x13620181
  4038fe:	add    ax,0x181
  403902:	jns    0x403917
  403904:	add    rax,0x13990161
  40390a:	ins    BYTE PTR es:[rdi],dx
  40390b:	add    eax,0x13bf0161
  403910:	jb     0x403917
  403912:	push   rcx
  403913:	add    esi,esp
  403915:	adc    edi,DWORD PTR [rax+0x5]
  403918:	fld    DWORD PTR [rax]
  40391a:	or     eax,0xa9024e11
  40391f:	add    DWORD PTR [rdi+0x59040702],ecx
  403925:	add    DWORD PTR [rip+0x59054814],eax        # 0x5945813f
  40392b:	add    DWORD PTR [rsi],edx
  40392d:	adc    al,0x89
  40392f:	add    eax,0x14240141
  403934:	nop
  403935:	add    eax,0x12530141
  40393a:	xchg   ebp,eax
  40393b:	add    eax,0x14310141
  403940:	sahf   
  403941:	add    eax,0x28f01b1
  403946:	mov    DWORD PTR [rip+0x12ba01b1],eax        # 0x12fa3afd
  40394c:	leave  
  40394d:	add    eax,0x145a0149
  403952:	repz add ebx,ecx
  403955:	add    BYTE PTR [rdx+0x14],bh
  403958:	fild   DWORD PTR [rip+0x28f01c1]        # 0x2cf3b1f
  40395e:	(bad)  
  40395f:	add    al,0xd9
  403961:	add    BYTE PTR [rsi-0x26fa1fec],bl
  403967:	add    BYTE PTR [rsi-0x26fa1aec],ah
  40396d:	add    BYTE PTR [rax-0x26fb26ec],dh
  403973:	add    cl,al
  403975:	adc    al,0xeb
  403977:	add    eax,0x28f01c9
  40397c:	(bad)  
  40397d:	add    al,0xd9
  40397f:	add    bh,bl
  403981:	adc    al,0xa
  403983:	add    cl,bl
  403985:	add    ch,ah
  403987:	adc    al,0x48
  403989:	add    eax,0x28f0131
  40398e:	adc    al,BYTE PTR [rcx+rdx*8]
  403991:	add    DWORD PTR [rdi-0x1efa04fe],ecx
  403997:	add    DWORD PTR [rdi-0x16fbf8fe],ecx
  40399d:	add    DWORD PTR [rdi-0xefedbfe],ecx
  4039a3:	add    DWORD PTR [rdi+0x1060202],ecx
  4039a9:	add    cl,BYTE PTR [rdi+0x21012402]
  4039af:	add    BYTE PTR [rdi+0x41040202],cl
  4039b5:	add    BYTE PTR [rdi+0x17],cl
  4039b8:	or     eax,0x58004106
  4039bd:	adc    bl,BYTE PTR [rbp+0x3]
  4039c0:	add    DWORD PTR [r9+0x17],ebx
  4039c4:	adc    al,BYTE PTR [rsi]
  4039c6:	or     DWORD PTR [rdx],eax
  4039c8:	pop    QWORD PTR [rdx]
  4039ca:	and    al,0x1
  4039cc:	adc    DWORD PTR [rdx],eax
  4039ce:	pop    QWORD PTR [rdx]
  4039d0:	(bad)  
  4039d1:	(bad)  
  4039d2:	add    DWORD PTR [r14+0xe062017],esi
  4039d9:	add    BYTE PTR [rax+rax*1],al
  4039dc:	or     eax,0x8000800
  4039e1:	add    BYTE PTR [rcx],ah
  4039e3:	add    BYTE PTR [rax],cl
  4039e5:	add    BYTE PTR [rax+rax*1],cl
  4039e8:	add    BYTE PTR es:[rsi],cl
  4039eb:	add    BYTE PTR [rax],dl
  4039ed:	add    BYTE PTR [rbx],ch
  4039ef:	add    BYTE PTR [rsi],cl
  4039f1:	add    BYTE PTR [rax+rax*1],dl
  4039f4:	xor    al,0x0
  4039f6:	(bad)  
  4039f7:	add    BYTE PTR [rax],bl
  4039f9:	add    BYTE PTR [rbp+0x0],bl
  4039fc:	(bad)  
  4039fd:	add    BYTE PTR [rax+rax*1],bl
  403a00:	nop
  403a01:	add    BYTE PTR [rsi],cl
  403a03:	add    BYTE PTR [rax],ah
  403a05:	add    BYTE PTR [rdi+0x24000e00],dl
  403a0b:	add    BYTE PTR [rdx+0x28000e00],ah
  403a11:	add    ch,dl
  403a13:	add    BYTE PTR [rcx],cl
  403a15:	add    BYTE PTR [rax+rax*1],ch
  403a18:	out    0x0,eax
  403a1a:	or     DWORD PTR [rax],eax
  403a1c:	xor    BYTE PTR [rax],al
  403a1e:	in     al,dx
  403a1f:	add    BYTE PTR [rsi],cl
  403a21:	add    BYTE PTR [rax+rax*1],dh
  403a24:	icebp  
  403a25:	add    BYTE PTR [rsi],cl
  403a27:	add    BYTE PTR [rax],bh
  403a29:	add    BYTE PTR [rax+0x1],cl
  403a2c:	(bad)  
  403a2d:	add    BYTE PTR [rax+rax*1],bh
  403a30:	add    DWORD PTR gs:[rsi],ecx
  403a33:	add    BYTE PTR [rax+0x0],al
  403a36:	mov    al,BYTE PTR [rcx]
  403a38:	(bad)  
  403a39:	add    BYTE PTR [rax+rax*1-0x61],al
  403a3d:	add    DWORD PTR [rsi],ecx
  403a3f:	add    BYTE PTR [rax+0x0],cl
  403a42:	rol    BYTE PTR [rcx],0xe
  403a45:	add    BYTE PTR [rax+rax*1-0x35],cl
  403a49:	add    DWORD PTR [rsi],ecx
  403a4b:	add    BYTE PTR [rax+0x0],dl
  403a4e:	clc    
  403a4f:	add    DWORD PTR [rsi],ecx
  403a51:	add    BYTE PTR [rax+rax*1+0x15],dl
  403a55:	add    cl,BYTE PTR [rax]
  403a57:	add    BYTE PTR [rax+0x0],ah
  403a5a:	in     al,dx
  403a5b:	add    BYTE PTR [rax],cl
  403a5d:	add    BYTE PTR [rax+rax*1+0x5b],ah
  403a61:	add    cl,BYTE PTR [rax]
  403a63:	add    BYTE PTR [rax+0x0],ch
  403a66:	(bad)  
  403a67:	add    cl,BYTE PTR [rsi]
  403a69:	add    BYTE PTR [rax+rax*1+0x65],ch
  403a6d:	add    cl,BYTE PTR [rax]
  403a6f:	add    BYTE PTR [rax+0x0],bh
  403a72:	in     al,dx
  403a73:	add    BYTE PTR [rax],cl
  403a75:	add    BYTE PTR [rax+rax*1-0x48],bh
  403a79:	add    cl,BYTE PTR [rax]
  403a7b:	add    BYTE PTR [rax+0x802bd00],al
  403a81:	add    BYTE PTR [rax+rax*1+0x802c2],al
  403a88:	mov    BYTE PTR [rax],al
  403a8a:	mov    DWORD PTR [rdx],0x8c0008
  403a90:	int3   
  403a91:	add    cl,BYTE PTR [rax]
  403a93:	add    BYTE PTR [rax+0x802d100],dl
  403a99:	add    BYTE PTR [rax+rax*1+0x802d6],dl
  403aa0:	cwde   
  403aa1:	add    ah,ch
  403aa3:	add    BYTE PTR [rax],cl
  403aa5:	add    BYTE PTR [rax+rax*1+0x800ec],bl
  403aac:	movabs al,ds:0x6000a40008025b00
  403ab5:	add    cl,BYTE PTR [rax]
  403ab7:	add    BYTE PTR [rax+0x802db00],ch
  403abd:	add    BYTE PTR [rax+rax*1+0x802db],ch
  403ac4:	mov    al,0x0
  403ac6:	loopne 0x403aca
  403ac8:	or     BYTE PTR [rax],al
  403aca:	mov    ah,0x0
  403acc:	loopne 0x403ad0
  403ace:	or     BYTE PTR [rax],al
  403ad0:	mov    eax,0x802b800
  403ad5:	add    BYTE PTR [rax+rax*1+0x802b8],bh
  403adc:	rol    BYTE PTR [rax],0xe5
  403adf:	add    cl,BYTE PTR [rax]
  403ae1:	add    ah,al
  403ae3:	add    dl,ch
  403ae5:	add    cl,BYTE PTR [rax]
  403ae7:	add    al,cl
  403ae9:	add    cl,dl
  403aeb:	add    cl,BYTE PTR [rax]
  403aed:	add    ah,cl
  403aef:	add    cl,dl
  403af1:	add    cl,BYTE PTR [rax]
  403af3:	add    al,dl
  403af5:	add    cl,dl
  403af7:	add    cl,BYTE PTR [rax]
  403af9:	add    ah,dl
  403afb:	add    cl,dl
  403afd:	add    cl,BYTE PTR [rax]
  403aff:	add    al,bl
  403b01:	add    bh,ch
  403b03:	add    cl,BYTE PTR [rax]
  403b05:	add    ah,bl
  403b07:	add    BYTE PTR [rcx],ah
  403b09:	add    BYTE PTR [rax],cl
  403b0b:	add    al,ah
  403b0d:	add    ah,dh
  403b0f:	add    cl,BYTE PTR [rax]
  403b11:	add    ah,ah
  403b13:	add    cl,bh
  403b15:	add    cl,BYTE PTR [rax]
  403b17:	add    al,ch
  403b19:	add    dh,bh
  403b1b:	add    cl,BYTE PTR [rax]
  403b1d:	add    ah,ch
  403b1f:	add    BYTE PTR [rbx],al
  403b21:	add    ecx,DWORD PTR [rax]
  403b23:	add    al,dh
  403b25:	add    BYTE PTR [rax],cl
  403b27:	add    ecx,DWORD PTR [rax]
  403b29:	add    ah,dh
  403b2b:	add    dh,dl
  403b2d:	add    cl,BYTE PTR [rax]
  403b2f:	add    al,bh
  403b31:	add    dh,dl
  403b33:	add    cl,BYTE PTR [rcx]
  403b35:	add    ah,bh
  403b37:	add    BYTE PTR [rbx+0x2],bl
  403b3a:	or     DWORD PTR [rax],eax
  403b3c:	add    BYTE PTR [rcx],al
  403b3e:	(bad)  
  403b3f:	add    cl,BYTE PTR [rcx]
  403b41:	add    BYTE PTR [rcx+rax*1],al
  403b44:	loopne 0x403b48
  403b46:	or     DWORD PTR [rax],eax
  403b48:	or     BYTE PTR [rcx],al
  403b4a:	rol    DWORD PTR [rdx],1
  403b4c:	or     BYTE PTR [rax],al
  403b4e:	or     al,0x1
  403b50:	pop    rbx
  403b51:	add    cl,BYTE PTR [rax]
  403b53:	add    BYTE PTR [rax],dl
  403b55:	add    DWORD PTR [rax+0x2],esp
  403b58:	or     BYTE PTR [rax],al
  403b5a:	adc    al,0x1
  403b5c:	loopne 0x403b60
  403b5e:	or     BYTE PTR [rax],al
  403b60:	sbb    BYTE PTR [rcx],al
  403b62:	rol    DWORD PTR [rdx],1
  403b64:	or     BYTE PTR [rax],al
  403b66:	sbb    al,0x1
  403b68:	(bad)  
  403b69:	add    cl,BYTE PTR [rax]
  403b6b:	add    BYTE PTR [rax],ah
  403b6d:	add    DWORD PTR [rip+0x24000803],ecx        # 0x24404376
  403b73:	add    edx,eax
  403b75:	add    cl,BYTE PTR [rax]
  403b77:	add    BYTE PTR [rax],ch
  403b79:	add    DWORD PTR [rbp+0x2c000802],edi
  403b7f:	add    DWORD PTR [rdx],edx
  403b81:	add    ecx,DWORD PTR [rax]
  403b83:	add    BYTE PTR [rax],dh
  403b85:	add    DWORD PTR [rdi],edx
  403b87:	add    ecx,DWORD PTR [rax]
  403b89:	add    BYTE PTR [rcx+rax*1],dh
  403b8c:	sbb    al,0x3
  403b8e:	or     BYTE PTR [rax],al
  403b90:	cmp    BYTE PTR [rcx],al
  403b92:	and    DWORD PTR [rbx],eax
  403b94:	or     BYTE PTR [rax],al
  403b96:	cmp    al,0x1
  403b98:	add    ecx,DWORD PTR es:[rax]
  403b9b:	add    BYTE PTR [rax+0x1],al
  403b9e:	sub    eax,DWORD PTR [rbx]
  403ba0:	or     BYTE PTR [rax],al
  403ba2:	add    DWORD PTR [rax],r14d
  403ba5:	add    ecx,DWORD PTR [rax]
  403ba7:	add    BYTE PTR [rax+0x1],cl
  403baa:	xor    eax,0x4c000803
  403baf:	add    DWORD PTR [rdx],edi
  403bb1:	add    ecx,DWORD PTR [rax]
  403bb3:	add    BYTE PTR [rax+0x1],dl
  403bb6:	sub    eax,DWORD PTR [rbx]
  403bb8:	or     BYTE PTR [rax],al
  403bba:	push   rsp
  403bbb:	add    DWORD PTR [rbx],ebp
  403bbd:	add    ecx,DWORD PTR [rax]
  403bbf:	add    BYTE PTR [rax+0x1],bl
  403bc2:	sub    eax,DWORD PTR [rbx]
  403bc4:	or     BYTE PTR [rax],al
  403bc6:	pop    rsp
  403bc7:	add    DWORD PTR [rdi],edi
  403bc9:	add    ecx,DWORD PTR [rax]
  403bcb:	add    BYTE PTR [rax+0x1],ah
  403bce:	add    r9d,DWORD PTR [rax]
  403bd1:	add    BYTE PTR [rcx+rax*1-0x20],ah
  403bd5:	add    cl,BYTE PTR [rax]
  403bd7:	add    BYTE PTR [rax+0x1],ch
  403bda:	in     al,dx
  403bdb:	add    BYTE PTR [rax],cl
  403bdd:	add    BYTE PTR [rcx+rax*1+0x60],ch
  403be1:	add    cl,BYTE PTR [rax]
  403be3:	add    BYTE PTR [rax+0x1],dh
  403be6:	pop    rbx
  403be7:	add    cl,BYTE PTR [rax]
  403be9:	add    BYTE PTR [rcx+rax*1-0x14],dh
  403bed:	add    BYTE PTR [rax],cl
  403bef:	add    BYTE PTR [rax+0x1],bh
  403bf2:	pop    rbx
  403bf3:	add    cl,BYTE PTR [rax]
  403bf5:	add    BYTE PTR [rcx+rax*1+0x60],bh
  403bf9:	add    cl,BYTE PTR [rax]
  403bfb:	add    BYTE PTR [rax+0x802e001],al
  403c01:	add    BYTE PTR [rcx+rax*1+0x802d1],al
  403c08:	mov    BYTE PTR [rcx],al
  403c0a:	(bad)  
  403c0b:	add    cl,BYTE PTR [rax]
  403c0d:	add    BYTE PTR [rcx+rax*1+0x8030d],cl
  403c14:	nop
  403c15:	add    DWORD PTR [rbp-0x6bfff7fe],edi
  403c1b:	add    edx,eax
  403c1d:	add    cl,BYTE PTR [rax]
  403c1f:	add    BYTE PTR [rax+0x8034901],bl
  403c25:	add    BYTE PTR [rcx+rax*1+0x8034e],bl
  403c2c:	movabs al,ds:0xcc01a4000802c701
  403c35:	add    cl,BYTE PTR [rax]
  403c37:	add    BYTE PTR [rax+0x8035301],ch
  403c3d:	add    BYTE PTR [rcx+rax*1+0x90358],ch
  403c44:	mov    esp,0x900ec01
  403c49:	add    al,al
  403c4b:	add    DWORD PTR [rbx+0x2],ebx
  403c4e:	or     DWORD PTR [rax],eax
  403c50:	(bad)
  403c54:	or     DWORD PTR [rax],eax
  403c56:	enter  0xdb01,0x2
  403c5a:	or     DWORD PTR [rax],eax
  403c5c:	int3   
  403c5d:	add    eax,esp
  403c5f:	add    cl,BYTE PTR [rcx]
  403c61:	add    al,dl
  403c63:	add    DWORD PTR [rax-0x2bfff6fe],edi
  403c69:	add    ebp,esp
  403c6b:	add    cl,BYTE PTR [rcx]
  403c6d:	add    al,bl
  403c6f:	add    edx,ebp
  403c71:	add    cl,BYTE PTR [rcx]
  403c73:	add    ah,bl
  403c75:	add    ecx,edx
  403c77:	add    cl,BYTE PTR [rcx]
  403c79:	add    al,ah
  403c7b:	add    edi,ebp
  403c7d:	add    cl,BYTE PTR [rcx]
  403c7f:	add    ah,ah
  403c81:	add    DWORD PTR [rcx],esp
  403c83:	add    BYTE PTR [rcx],cl
  403c85:	add    al,ch
  403c87:	add    esp,esi
  403c89:	add    cl,BYTE PTR [rcx]
  403c8b:	add    ah,ch
  403c8d:	add    ecx,edi
  403c8f:	add    cl,BYTE PTR [rax]
  403c91:	add    BYTE PTR [rdx+rax*1],dl
  403c94:	pop    rbx
  403c95:	add    cl,BYTE PTR [rax]
  403c97:	add    BYTE PTR [rax],bl
  403c99:	add    ah,BYTE PTR [rax+0x2]
  403c9c:	add    BYTE PTR cs:[rbx],dh
  403c9f:	add    BYTE PTR [rcx+0x6],bl
  403ca2:	add    BYTE PTR cs:[rbx+0x0],dh
  403ca6:	rex.WX (bad) 
  403ca8:	add    BYTE PTR cs:[rbx],cl
  403cab:	add    BYTE PTR [rbx],ch
  403cad:	(bad)  
  403cae:	add    BYTE PTR cs:[rbx],dl
  403cb1:	add    BYTE PTR [rbx],ch
  403cb3:	(bad)  
  403cb4:	add    BYTE PTR cs:[rbx],bl
  403cb7:	add    BYTE PTR [rbx],ch
  403cb9:	(bad)  
  403cba:	add    BYTE PTR cs:[rbx],ah
  403cbd:	add    BYTE PTR [rcx],dh
  403cbf:	(bad)  
  403cc0:	add    BYTE PTR cs:[rbx],ch
  403cc3:	add    BYTE PTR [rax+0x6],cl
  403cc6:	add    BYTE PTR cs:[rbx+0x0],al
  403cca:	mov    eax,DWORD PTR [rsi]
  403ccc:	add    BYTE PTR cs:[rbx+0x0],cl
  403cd0:	fld    DWORD PTR [rsi]
  403cd2:	add    BYTE PTR cs:[rbx+0x0],dl
  403cd6:	add    eax,DWORD PTR [rdi]
  403cd8:	add    BYTE PTR cs:[rbx+0x0],bl
  403cdc:	sbb    eax,0x63002e07
  403ce1:	add    BYTE PTR [rax],bh
  403ce3:	(bad)  
  403ce4:	add    BYTE PTR cs:[rbx+0x0],ch
  403ce8:	rex.B (bad) 
  403cea:	movsxd eax,DWORD PTR [rax]
  403cec:	jnp    0x403cee
  403cee:	pop    rbx
  403cef:	add    al,BYTE PTR [rbx+0x5b007b00]
  403cf5:	add    al,BYTE PTR [rdi+0x0]
  403cf8:	or     DWORD PTR [rsi],eax
  403cfa:	push   rcx
  403cfb:	add    BYTE PTR [rcx],cl
  403cfd:	(bad)  
  403cfe:	push   rbp
  403cff:	add    BYTE PTR [rcx],cl
  403d01:	(bad)  
  403d02:	mov    eax,DWORD PTR [rax]
  403d04:	or     eax,DWORD PTR [rsi]
  403d06:	xchg   ebx,eax
  403d07:	add    BYTE PTR [rbx],cl
  403d09:	(bad)  
  403d0a:	fwait
  403d0b:	add    BYTE PTR [rbx],cl
  403d0d:	(bad)  
  403d0e:	leave  
  403d0f:	add    al,0x3
  403d11:	add    eax,0x51d0510
  403d16:	(bad)  
  403d17:	add    eax,0x5a30535
  403d1c:	(bad)  
  403d1d:	add    eax,0x5d605cf
  403d22:	icebp  
  403d23:	add    eax,0x61c05f7
  403d28:	and    eax,0x1000206
  403d2d:	add    BYTE PTR [rbx],al
  403d2f:	add    BYTE PTR [rdx],al
  403d31:	add    BYTE PTR [rax+rax*1],al
  403d34:	add    al,0x0
  403d36:	add    BYTE PTR [rax],al
  403d38:	jp     0x403d3c
  403d3a:	and    BYTE PTR [rcx],al
  403d3c:	add    BYTE PTR [rax],al
  403d3e:	push   rbp
  403d3f:	add    eax,DWORD PTR [rbx+0x1]
  403d42:	add    BYTE PTR [rax],al
  403d44:	pop    rbp
  403d45:	add    esp,DWORD PTR [rax]
  403d47:	add    DWORD PTR [rax],eax
  403d49:	add    BYTE PTR [rbp+0x3],dl
  403d4c:	rex.XB add DWORD PTR [r10],eax
  403d4f:	add    BYTE PTR [rcx],al
  403d51:	add    BYTE PTR [rbx],al
  403d53:	add    BYTE PTR [rcx],al
  403d55:	add    BYTE PTR [rax+rax*1],al
  403d58:	add    eax,0x3000200
  403d5d:	add    BYTE PTR [rip+0x5000200],al        # 0x5403f63
  403d63:	add    BYTE PTR [rdi],al
  403d65:	add    BYTE PTR [rdx],al
  403d67:	add    BYTE PTR [rsi],cl
  403d69:	add    BYTE PTR [rcx],cl
  403d6b:	add    BYTE PTR [rcx],al
  403d6d:	add    BYTE PTR [rdi],cl
  403d6f:	add    BYTE PTR [rcx],cl
  403d71:	add    BYTE PTR [rbx],ch
  403d73:	adc    eax,0x100164d
  403d78:	rex.WRXB add BYTE PTR [r8],r15b
  403d7b:	adc    eax,0x1000001
  403d80:	push   rcx
  403d81:	add    BYTE PTR [rbp+0x115],ch
  403d87:	add    DWORD PTR [rbx+0x0],edx
  403d8a:	nop
  403d8b:	or     eax,0x1000001
  403d90:	push   rbp
  403d91:	add    BYTE PTR [rdx+0x4000010d],ah
  403d97:	add    DWORD PTR [rdi+0x0],edx
  403d9a:	fmul   DWORD PTR [rip+0x1000001]        # 0x1403da1
  403da0:	pop    rcx
  403da1:	add    al,ch
  403da3:	or     eax,0x1000001
  403da8:	pop    rbx
  403da9:	add    BYTE PTR [rsi+rcx*1],al
  403dac:	add    al,BYTE PTR [rax]
  403dae:	add    DWORD PTR [rbp+0x0],r11d
  403db2:	(bad)  
  403db3:	(bad)  
  403db4:	add    DWORD PTR [rax],eax
  403db6:	rex add DWORD PTR [rdi+0x0],ebx
  403dba:	(bad)  
  403dbb:	(bad)  
  403dbc:	add    DWORD PTR [rax],eax
  403dbe:	rex add DWORD PTR [rcx+0x0],esp
  403dc2:	mov    esi,0x40000104
  403dc7:	add    DWORD PTR [rbx+0x0],esp
  403dca:	cmp    ecx,DWORD PTR [rsi]
  403dcc:	add    DWORD PTR [rax],eax
  403dce:	rex add DWORD PTR [rbp+0x0],esp
  403dd2:	rex.RB (bad) 
  403dd4:	add    DWORD PTR [rax],eax
  403dd6:	(bad)  
  403dd7:	add    DWORD PTR [rdi+0x0],esp
  403dda:	push   rdi
  403ddb:	(bad)  
  403ddc:	add    al,BYTE PTR [rax]
  403dde:	add    al,0x80
  403de0:	add    BYTE PTR [rax],al
  403de2:	or     al,BYTE PTR [rax]
  403de4:	add    BYTE PTR [rax],al
  403de6:	add    BYTE PTR [rax],al
  403de8:	add    BYTE PTR [rax],al
  403dea:	add    DWORD PTR [rax],eax
  403dec:	add    BYTE PTR [rax],al
  403dee:	(bad)  
  403def:	add    al,0x88
  403df1:	adc    BYTE PTR [rax],al
  403df3:	add    BYTE PTR [rdx],al
	...
  403dfd:	add    BYTE PTR [rax],al
  403dff:	add    BYTE PTR [rcx],al
  403e01:	add    dl,dh
  403e03:	add    BYTE PTR [rax],al
  403e05:	add    BYTE PTR [rax],al
  403e07:	add    BYTE PTR [rdx],al
	...
  403e11:	add    BYTE PTR [rax],al
  403e13:	add    BYTE PTR [rcx],al
  403e15:	add    bl,bh
	...
  403e1f:	add    BYTE PTR [rcx],al
  403e21:	add    BYTE PTR [rax],al
  403e23:	add    dh,al
  403e25:	(bad)  
  403e26:	add    BYTE PTR [rax],al
  403e28:	add    al,0x0
  403e2a:	add    eax,DWORD PTR [rax]
  403e2c:	(bad)  
  403e2d:	add    BYTE PTR [rsi],al
  403e2f:	add    BYTE PTR [rax],al
  403e31:	add    BYTE PTR [rax],al
  403e33:	add    BYTE PTR [rax],al
  403e35:	cmp    al,0x4d
  403e37:	outs   dx,DWORD PTR ds:[rsi]
  403e38:	fs jne 0x403ea7
  403e3b:	gs add BYTE PTR ds:[rsi+0x69],al
  403e40:	js     0x403e95
  403e42:	jno    0x403eb0
  403e44:	push   rdx
  403e45:	imul   esi,DWORD PTR gs:[ebx+0x74],0x654b7972
  403e4e:	jns    0x403e7e
  403e50:	gs js  0x403eb8
  403e53:	add    BYTE PTR [rcx+0x73],al
  403e56:	jae    0x403ebd
  403e58:	ins    DWORD PTR es:[rdi],dx
  403e59:	(bad)  
  403e5a:	ins    BYTE PTR es:[rdi],dx
  403e5b:	jns    0x403eb3
  403e5d:	gs jb  0x403ed3
  403e60:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
  403e67:	add    BYTE PTR [rbx+0x52],dl
  403e6a:	add    BYTE PTR [rbp+0x69],cl
  403e6d:	movsxd esi,DWORD PTR [rdx+0x6f]
  403e70:	jae    0x403ee1
  403e72:	data16 je 0x403ea3
  403e75:	push   rbx
  403e76:	jno    0x403ee4
  403e78:	push   rbx
  403e79:	gs jb  0x403ef2
  403e7c:	gs jb  0x403ead
  403e7f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  403e81:	outs   dx,BYTE PTR ds:[rsi]
  403e82:	imul   sp,WORD PTR [rdi+0x75],0x6172
  403e88:	je     0x403ef3
  403e8a:	outs   dx,DWORD PTR ds:[rsi]
  403e8b:	outs   dx,BYTE PTR ds:[rsi]
  403e8c:	rex.RX imul r15d,DWORD PTR cs:[rax+0x53],0x65526c71
  403e95:	imul   esi,DWORD PTR [ebx+0x74],0x654b7972
  403e9d:	jns    0x403e9f
  403e9f:	rex.WXB
  403ea0:	gs jns 0x403f16
  403ea3:	add    BYTE PTR [rax+0x72],dl
  403ea6:	outs   dx,DWORD PTR ds:[rsi]
  403ea7:	addr32 jb 0x403f0b
  403eaa:	ins    DWORD PTR es:[rdi],dx
  403eab:	add    BYTE PTR [rsi+0x61],cl
  403eae:	je     0x403f19
  403eb0:	jbe    0x403f17
  403eb2:	rex.XB outs dx,DWORD PTR ds:[rsi]
  403eb4:	outs   dx,BYTE PTR ds:[rsi]
  403eb5:	jae    0x403f2b
  403eb7:	(bad)  
  403eb8:	outs   dx,BYTE PTR ds:[rsi]
  403eb9:	je     0x403f2e
  403ebb:	add    BYTE PTR [rbx+0x45],dl
  403ebe:	pop    rdi
  403ebf:	rex.WRXB
  403ec0:	rex.X
  403ec1:	rex.WX
  403ec2:	rex.RB
  403ec3:	rex.XB push r12
  403ec5:	pop    rdi
  403ec6:	push   rsp
  403ec7:	pop    rcx
  403ec8:	push   rax
  403ec9:	add    BYTE PTR [r9+0x43],r8b
  403ecd:	rex.WR add BYTE PTR [rcx+0x43],r8b
  403ed1:	rex.WR pop rdi
  403ed3:	push   rbx
  403ed4:	rex.WB pop r10
  403ed6:	rex.RB pop r15
  403ed8:	rex.WB
  403ed9:	rex.WRX
  403eda:	rex.RX
  403edb:	rex.WRXB push r10
  403edd:	rex.WRB
  403ede:	push   r12
  403ee0:	rex.WB
  403ee1:	rex.WRXB
  403ee2:	rex.WRX add BYTE PTR [rcx+0x43],r8b
  403ee6:	rex.WR pop rdi
  403ee8:	rex.WB
  403ee9:	rex.WRX
  403eea:	rex.RX
  403eeb:	rex.WRXB push r10
  403eed:	rex.WRB
  403eee:	push   r12
  403ef0:	rex.WB
  403ef1:	rex.WRXB
  403ef2:	rex.WRX pop rdi
  403ef4:	rex.XB
  403ef5:	rex.WR
  403ef6:	push   r11
  403ef8:	push   rbx
  403ef9:	add    BYTE PTR [rsi+0x61],cl
  403efc:	je     0x403f67
  403efe:	jbe    0x403f65
  403f00:	rex.WRB
  403f01:	gs je  0x403f6c
  403f04:	outs   dx,DWORD PTR ds:[rsi]
  403f05:	fs jae 0x403f08
  403f08:	push   rbx
  403f09:	(bad)  
  403f0a:	gs push dx
  403f0d:	imul   esi,DWORD PTR gs:[ebx+0x74],0x61487972
  403f16:	outs   dx,BYTE PTR ds:[rsi]
  403f17:	fs ins BYTE PTR es:[rdi],dx
  403f19:	add    BYTE PTR gs:[rdi+0x69],dl
  403f1d:	outs   dx,BYTE PTR ds:[rsi]
  403f1e:	xor    esi,DWORD PTR [rdx]
  403f20:	rex.RB jb 0x403f95
  403f23:	outs   dx,DWORD PTR ds:[rsi]
  403f24:	jb     0x403f26
  403f26:	ins    DWORD PTR es:[rdi],dx
  403f27:	jae    0x403f8c
  403f29:	outs   dx,DWORD PTR ds:[rsi]
  403f2a:	jb     0x403f98
  403f2c:	imul   esp,DWORD PTR [rdx+0x0],0x74737953
  403f33:	gs ins DWORD PTR es:[rdi],dx
  403f35:	add    BYTE PTR [rdi+0x62],cl
  403f38:	push   0x65
  403f3a:	movsxd esi,DWORD PTR [rax+rax*1+0x45]
  403f3e:	outs   dx,BYTE PTR ds:[rsi]
  403f3f:	jne    0x403fae
  403f41:	add    BYTE PTR [rsi+0x61],dl
  403f44:	ins    BYTE PTR es:[rdi],dx
  403f45:	jne    0x403fac
  403f47:	push   rsp
  403f48:	jns    0x403fba
  403f4a:	add    BYTE PTR gs:[rbp+0x69],cl
  403f4e:	movsxd esi,DWORD PTR [rdx+0x6f]
  403f51:	jae    0x403fc2
  403f53:	data16 je 0x403f84
  403f56:	push   rdi
  403f57:	imul   ebp,DWORD PTR [rsi+0x33],0x61532e32
  403f5e:	data16 gs rex.W (bad) 
  403f62:	outs   dx,BYTE PTR ds:[rsi]
  403f63:	fs ins BYTE PTR es:[rdi],dx
  403f65:	gs jae 0x403f68
  403f68:	push   rbx
  403f69:	(bad)  
  403f6a:	data16 gs rex.W (bad) 
  403f6e:	outs   dx,BYTE PTR ds:[rsi]
  403f6f:	fs ins BYTE PTR es:[rdi],dx
  403f71:	gs pop rdx
  403f73:	gs jb  0x403fe5
  403f76:	rex.WRXB jb 0x403fc6
  403f79:	imul   ebp,DWORD PTR [rsi+0x75],0x656e4f73
  403f80:	rex.WB jae 0x403fcc
  403f83:	outs   dx,BYTE PTR ds:[rsi]
  403f84:	jbe    0x403fe7
  403f86:	ins    BYTE PTR es:[rdi],dx
  403f87:	imul   esp,DWORD PTR [rax+rax*1+0x56],0x69737265
  403f8f:	outs   dx,DWORD PTR ds:[rsi]
  403f90:	outs   dx,BYTE PTR ds:[rsi]
  403f91:	push   rbx
  403f92:	je     0x404006
  403f94:	imul   ebp,DWORD PTR [rsi+0x67],0x6a614d00
  403f9b:	outs   dx,DWORD PTR ds:[rsi]
  403f9c:	jb     0x403ff4
  403f9e:	gs jb  0x404014
  403fa1:	imul   ebp,DWORD PTR [rdi+0x6e],0x69754200
  403fa8:	ins    BYTE PTR es:[rdi],dx
  403fa9:	fs push rsi
  403fab:	gs jb  0x404021
  403fae:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f725000
  403fb5:	fs jne 0x40401b
  403fb8:	je     0x404010
  403fba:	gs jb  0x404030
  403fbd:	imul   ebp,DWORD PTR [rdi+0x6e],0x69727453
  403fc4:	outs   dx,BYTE PTR ds:[rsi]
  403fc5:	add    BYTE PTR [eax+0x72],dl
  403fc9:	outs   dx,DWORD PTR ds:[rsi]
  403fca:	fs jne 0x404030
  403fcd:	je     0x40401d
  403fcf:	(bad)  
  403fd0:	ins    DWORD PTR es:[rdi],dx
  403fd1:	gs push rbx
  403fd3:	je     0x404047
  403fd5:	imul   ebp,DWORD PTR [rsi+0x67],0x6f725000
  403fdc:	fs jne 0x404042
  403fdf:	je     0x40402f
  403fe1:	(bad)  
  403fe2:	ins    DWORD PTR es:[rdi],dx
  403fe3:	gs rex.X jb 0x404048
  403fe7:	outs   dx,BYTE PTR ds:[rsi]
  403fe8:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x69727453
  403ff0:	outs   dx,BYTE PTR ds:[rsi]
  403ff1:	add    BYTE PTR [esi+0x65],dl
  403ff5:	jb     0x40406a
  403ff7:	imul   ebp,DWORD PTR [rdi+0x6e],0x61636f4c
  403ffe:	je     0x404069
  404000:	outs   dx,DWORD PTR ds:[rsi]
  404001:	outs   dx,BYTE PTR ds:[rsi]
  404002:	push   rbx
  404003:	je     0x404077
  404005:	imul   ebp,DWORD PTR [rsi+0x67],0x72655600
  40400c:	jae    0x404077
  40400e:	outs   dx,DWORD PTR ds:[rsi]
  40400f:	outs   dx,BYTE PTR ds:[rsi]
  404010:	rex.W
  404011:	gs ins BYTE PTR es:[rdi],dx
  404013:	jo     0x404060
  404015:	gs jns 0x40408f
  404018:	outs   dx,DWORD PTR ds:[rsi]
  404019:	jb     0x40407f
  40401b:	push   rax
  40401c:	jb     0x404083
  40401e:	imul   di,WORD PTR [rax+0x0],0x6556
  404024:	jb     0x404099
  404026:	imul   ebp,DWORD PTR [rdi+0x6e],0x706c6548
  40402d:	push   rbx
  40402e:	gs je  0x4040a5
  404031:	imul   ebp,DWORD PTR [rsi+0x67],0x6b6f5473
  404038:	outs   dx,BYTE PTR gs:[rsi]
  40403a:	add    BYTE PTR [rbx+0x65],dl
  40403d:	je     0x4040b4
  40403f:	jo     0x404094
  404041:	jne    0x4040b3
  404043:	jo     0x4040b4
  404045:	jb     0x4040bb
  404047:	rex.RX outs dx,DWORD PTR ds:[rsi]
  404049:	ins    BYTE PTR es:[rdi],dx
  40404a:	fs gs jb 0x40404e
  40404e:	gs jbe 0x4040b2
  404051:	ins    BYTE PTR es:[rdi],dx
  404052:	push   rsp
  404053:	imul   ebp,DWORD PTR [rbp+0x65],0x626d6f42
  40405a:	push   rsi
  40405b:	(bad)  
  40405c:	ins    BYTE PTR es:[rdi],dx
  40405d:	jne    0x4040c4
  40405f:	add    BYTE PTR [rbx+0x75],ah
  404062:	jb     0x4040d6
  404064:	outs   dx,BYTE PTR gs:[rsi]
  404066:	je     0x4040ba
  404068:	gs ins BYTE PTR es:[rdi],dx
  40406a:	gs (bad) 
  40406c:	jae    0x4040d3
  40406e:	push   rsp
  40406f:	imul   ebp,DWORD PTR [rbp+0x65],0x626d6f42
  404076:	push   rsi
  404077:	(bad)  
  404078:	ins    BYTE PTR es:[rdi],dx
  404079:	jne    0x4040e0
  40407b:	add    BYTE PTR [rsi+0x65],dl
  40407e:	jb     0x4040f3
  404080:	imul   ebp,DWORD PTR [rdi+0x6e],0x53444942
  404087:	rex.W
  404088:	gs ins BYTE PTR es:[rdi],dx
  40408a:	jo     0x4040da
  40408c:	(bad)  
  40408d:	ins    DWORD PTR es:[rdi],dx
  40408e:	gs jae 0x404101
  404091:	(bad)  
  404092:	movsxd esp,DWORD PTR [rbp+0x0]
  404095:	addr32 gs je 0x4040f8
  404099:	push   rsi
  40409a:	gs jb  0x404110
  40409d:	imul   ebp,DWORD PTR [rdi+0x6e],0x706c6548
  4040a4:	rex.WRX (bad) 
  4040a6:	ins    DWORD PTR es:[rdi],dx
  4040a7:	gs jae 0x40411a
  4040aa:	(bad)  
  4040ab:	movsxd esp,DWORD PTR [rbp+0x0]
  4040ae:	push   rsi
  4040af:	gs jb  0x404125
  4040b2:	imul   ebp,DWORD PTR [rdi+0x6e],0x706c6548
  4040b9:	rex.WRX (bad) 
  4040bb:	ins    DWORD PTR es:[rdi],dx
  4040bc:	gs jae 0x40412f
  4040bf:	(bad)  
  4040c0:	movsxd esp,DWORD PTR [rbp+0x0]
  4040c3:	movsxd esi,DWORD PTR cs:[rdi+rbp*2+0x72]
  4040c8:	add    BYTE PTR [rbx+0x79],dl
  4040cb:	jae    0x404141
  4040cd:	gs ins DWORD PTR es:[rdi],dx
  4040cf:	cs rex.RXB ins BYTE PTR es:[rdi],dx
  4040d2:	outs   dx,DWORD PTR ds:[rsi]
  4040d3:	(bad)
  4040d8:	(bad)  
  4040d9:	je     0x404144
  4040db:	outs   dx,DWORD PTR ds:[rsi]
  4040dc:	outs   dx,BYTE PTR ds:[rsi]
  4040dd:	add    BYTE PTR [rbx+0x75],al
  4040e0:	ins    BYTE PTR es:[rdi],dx
  4040e1:	je     0x404158
  4040e3:	jb     0x40414a
  4040e5:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4040e7:	outs   dx,WORD PTR ds:[rsi]
  4040e9:	add    BYTE PTR [rdi+0x65],ah
  4040ec:	je     0x40414d
  4040ee:	rex.XB jne 0x40415d
  4040f1:	je     0x404168
  4040f3:	jb     0x40415a
  4040f5:	add    BYTE PTR [rbx+0x65],dh
  4040f8:	je     0x404159
  4040fa:	rex.XB jne 0x404169
  4040fd:	je     0x404174
  4040ff:	jb     0x404166
  404101:	add    BYTE PTR [rdi+0x65],ah
  404104:	je     0x404165
  404106:	imul   r14d,DWORD PTR [rdx+0x65],0x614c7463
  40410e:	jne    0x40417e
  404110:	movsxd ebp,DWORD PTR [rax+0x4e]
  404113:	outs   dx,DWORD PTR ds:[rsi]
  404114:	je     0x404169
  404116:	jne    0x404188
  404118:	jo     0x404189
  40411a:	jb     0x404190
  40411c:	gs add BYTE PTR fs:[rbx+0x6f],al
  404121:	jne    0x40418f
  404123:	rex.WRX outs dx,DWORD PTR fs:[rsi]
  404126:	je     0x40416e
  404128:	imul   edi,DWORD PTR [rax+0x4b],0x43007965
  40412f:	outs   dx,DWORD PTR ds:[rsi]
  404130:	jne    0x40419e
  404132:	rex.WRX outs dx,DWORD PTR fs:[rsi]
  404135:	je     0x404186
  404137:	jo     0x40419e
  404139:	outs   dx,BYTE PTR ds:[rsi]
  40413a:	push   rbx
  40413b:	jne    0x40419f
  40413d:	rex.WXB
  40413e:	gs jns 0x404141
  404141:	push   rdx
  404142:	outs   dx,DWORD PTR gs:[rsi]
  404144:	jb     0x4041aa
  404146:	gs jb  0x40418a
  404149:	rex.XB
  40414a:	rex.WR add BYTE PTR [rbx+0x65],r10b
  40414e:	je     0x404199
  404150:	outs   dx,BYTE PTR ds:[rsi]
  404151:	push   0x74697265
  404156:	gs fs rex.RX ins BYTE PTR es:[rdi],dx
  40415a:	(bad)  
  40415b:	add    BYTE PTR [ebx+0x65],cl
  40415f:	jns    0x4041b0
  404161:	rex.WXB add BYTE PTR [r13+0x6e],dl
  404165:	jae    0x4041dc
  404167:	jo     0x4041d9
  404169:	outs   dx,DWORD PTR ds:[rsi]
  40416a:	jb     0x4041e0
  40416c:	gs fs push rdx
  40416f:	outs   dx,DWORD PTR ds:[rsi]
  404170:	outs   dx,DWORD PTR ds:[rsi]
  404171:	je     0x4041be
  404173:	gs jns 0x4041ca
  404176:	jns    0x4041e8
  404178:	add    BYTE PTR gs:[rbp+0x6e],dl
  40417c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  404180:	outs   dx,BYTE PTR ds:[rsi]
  404181:	rex.W push rdx
  404183:	gs jae 0x4041fb
  404186:	ins    BYTE PTR es:[rdi],dx
  404187:	je     0x404189
  404189:	rex.XB jne 0x4041f8
  40418c:	je     0x404203
  40418e:	jb     0x4041f5
  404190:	add    BYTE PTR [rcx+rbp*2+0x72],al
  404194:	movsxd esi,DWORD PTR gs:[rsp+rcx*2+0x61]
  404199:	jne    0x404209
  40419b:	movsxd ebp,DWORD PTR [rax+0x4e]
  40419e:	outs   dx,DWORD PTR ds:[rsi]
  40419f:	je     0x4041f4
  4041a1:	jne    0x404213
  4041a3:	jo     0x404214
  4041a5:	jb     0x40421b
  4041a7:	gs add BYTE PTR fs:[rbx+0x79],dl
  4041ac:	jae    0x404222
  4041ae:	gs ins DWORD PTR es:[rdi],dx
  4041b0:	cs push rdx
  4041b2:	gs jae 0x404224
  4041b5:	jne    0x404229
  4041b7:	movsxd esp,DWORD PTR [rbp+0x73]
  4041ba:	add    BYTE PTR [rdx+0x65],dl
  4041bd:	jae    0x40422e
  4041bf:	jne    0x404233
  4041c1:	movsxd esp,DWORD PTR [rbp+0x4d]
  4041c4:	(bad)  
  4041c5:	outs   dx,BYTE PTR ds:[rsi]
  4041c6:	(bad)  
  4041c7:	addr32 gs jb 0x4041cb
  4041cb:	jb     0x404232
  4041cd:	jae    0x40423e
  4041cf:	jne    0x404243
  4041d1:	movsxd esp,DWORD PTR [rbp+0x4d]
  4041d4:	(bad)  
  4041d5:	outs   dx,BYTE PTR ds:[rsi]
  4041d6:	(bad)  
  4041d7:	addr32 gs jb 0x4041db
  4041db:	pop    rdi
  4041dc:	movsxd esi,DWORD PTR [rbp+0x6c]
  4041df:	je     0x404256
  4041e1:	jb     0x404248
  4041e3:	add    BYTE PTR [rdi+0x65],al
  4041e6:	je     0x40423b
  4041e8:	je     0x40425c
  4041ea:	imul   ebp,DWORD PTR [rsi+0x67],0x43555300
  4041f1:	rex.XB
  4041f2:	rex.RB push r11
  4041f4:	push   rbx
  4041f5:	add    BYTE PTR [rbx+0x45],cl
  4041f8:	pop    rcx
  4041f9:	pop    rdi
  4041fa:	rex.XB
  4041fb:	rex.W
  4041fc:	rex.RB
  4041fd:	rex.XB
  4041fe:	rex.WXB pop r15
  404200:	rex.WRXB push r10
  404202:	pop    rdi
  404203:	rex.RX
  404204:	rex.WB pop r8
  404206:	pop    rdi
  404207:	rex.RX
  404208:	rex.B
  404209:	rex.WB
  40420a:	rex.WR push rbp
  40420c:	push   rdx
  40420d:	add    BYTE PTR [r9+rcx*2+0x52],r8b
  404212:	rex.RB
  404213:	rex.XB push r12
  404215:	pop    rdi
  404216:	rex.WR
  404217:	push   r13
  404219:	rex.WRX
  40421a:	rex.XB
  40421b:	rex.W pop rdi
  40421d:	rex.WRX
  40421e:	rex.WRXB push r12
  404220:	pop    rdi
  404221:	push   rbx
  404222:	push   rbp
  404223:	push   rax
  404224:	push   rax
  404225:	rex.WRXB push r10
  404227:	push   rsp
  404228:	rex.RB
  404229:	add    BYTE PTR [rcx+riz*2+0x75],r9b
  40422e:	outs   dx,BYTE PTR ds:[rsi]
  40422f:	movsxd ebp,DWORD PTR [rax+0x41]
  404232:	jb     0x40429b
  404234:	jne    0x4042a3
  404236:	outs   dx,BYTE PTR gs:[rsi]
  404238:	je     0x40423a
  40423a:	rex.W
  40423b:	rex.WXB
  40423c:	rex.WR
  40423d:	rex.WRB add BYTE PTR [r8+0x4b],r9b
  404241:	rex.XB push r13
  404243:	add    BYTE PTR [rbp+0x61],cl
  404246:	imul   ebp,DWORD PTR [rsi+0x0],0x7263694d
  40424d:	outs   dx,DWORD PTR ds:[rsi]
  40424e:	jae    0x4042bf
  404250:	data16 je 0x404281
  404253:	push   rdi
  404254:	imul   ebp,DWORD PTR [rsi+0x33],0x65520032
  40425b:	imul   esi,DWORD PTR [ebx+0x74],0x654b7972
  404263:	jns    0x404265
  404265:	rex.RX imul r15d,DWORD PTR [rax+0x52],0x73696765
  40426d:	je     0x4042e1
  40426f:	jns    0x4042bc
  404271:	gs jns 0x4042b5
  404274:	outs   dx,BYTE PTR ds:[rsi]
  404275:	fs push rbx
  404277:	jne    0x4042db
  404279:	rex.WXB
  40427a:	gs jns 0x4042f0
  40427d:	add    BYTE PTR [rsi+0x69],al
  404280:	js     0x4042d4
  404282:	imul   esi,DWORD PTR gs:[ebx+0x74],0x654b7972
  40428b:	jns    0x40428d
  40428d:	push   rbx
  40428e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  404292:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
  40429a:	imul   esi,DWORD PTR [rax+0x74],0x6f54726f
  4042a1:	rex.X jns 0x404318
  4042a4:	gs rex.B jb 0x40431a
  4042a8:	(bad)  
  4042a9:	jns    0x4042ab
  4042ab:	rex.W (bad) 
  4042ad:	jae    0x4042f0
  4042af:	jne    0x404325
  4042b1:	outs   dx,DWORD PTR ds:[rsi]
  4042b2:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4042b4:	push   0x74697265
  4042b9:	rex.RX ins BYTE PTR es:[rdi],dx
  4042bb:	(bad)  
  4042bc:	addr32 push rbx
  4042be:	gs je  0x4042c1
  4042c1:	push   rbx
  4042c2:	gs je  0x404306
  4042c5:	jne    0x40433b
  4042c7:	outs   dx,DWORD PTR ds:[rsi]
  4042c8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4042ca:	push   0x74697265
  4042cf:	rex.RX ins BYTE PTR es:[rdi],dx
  4042d1:	(bad)  
  4042d2:	add    BYTE PTR [edx+0x65],dl
  4042d6:	outs   dx,DWORD PTR ds:[rsi]
  4042d7:	jb     0x40433d
  4042d9:	gs jb  0x40432a
  4042dc:	outs   dx,DWORD PTR ds:[rsi]
  4042dd:	outs   dx,BYTE PTR ds:[rsi]
  4042de:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4042e0:	push   0x74697265
  4042e5:	gs movsxd esp,DWORD PTR fs:[r13+0x73]
  4042eb:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4042ed:	rex.R (bad) 
  4042ef:	movsxd ebp,DWORD PTR [rax+rax*1+0x47]
  4042f3:	gs je  0x404349
  4042f6:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  4042fa:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
  404302:	imul   esi,DWORD PTR [rax+0x74],0x6f43726f
  404309:	outs   dx,BYTE PTR ds:[rsi]
  40430a:	je     0x40437e
  40430c:	outs   dx,DWORD PTR ds:[rsi]
  40430d:	ins    BYTE PTR es:[rdi],dx
  40430e:	add    BYTE PTR [rbx+0x6f],al
  404311:	outs   dx,BYTE PTR ds:[rsi]
  404312:	je     0x404375
  404314:	imul   ebp,DWORD PTR [rsi+0x73],0x65686e49
  40431b:	jb     0x404386
  40431d:	je     0x404384
  40431f:	movsxd esp,DWORD PTR fs:[r13+0x0]
  404324:	rex.WB jae 0x40436a
  404327:	(bad)  
  404328:	outs   dx,BYTE PTR ds:[rsi]
  404329:	outs   dx,DWORD PTR ds:[rsi]
  40432a:	outs   dx,BYTE PTR ds:[rsi]
  40432b:	imul   esp,DWORD PTR [rbx+0x61],0x704f006c
  404332:	outs   dx,BYTE PTR gs:[rsi]
  404334:	rex.WXB
  404335:	gs jns 0x404338
  404338:	rex.RXB
  404339:	gs je  0x40437e
  40433c:	(bad)  
  40433d:	jae    0x4043a4
  40433f:	rex.WXB
  404340:	gs jns 0x404343
  404343:	rex.RXB
  404344:	gs je  0x40439a
  404347:	jne    0x4043ab
  404349:	rex.WXB
  40434a:	gs jns 0x40434d
  40434d:	rex.RB js 0x4043b5
  404350:	movsxd esi,DWORD PTR [rbp+0x74]
  404353:	gs rex.WRX (bad) 
  404356:	je     0x4043c1
  404358:	jbe    0x4043bf
  40435a:	add    BYTE PTR [rbp+0x52],al
  40435d:	push   rdx
  40435e:	rex.WRXB push r10
  404360:	pop    rdi
  404361:	push   rbx
  404362:	push   rbp
  404363:	rex.XB
  404364:	rex.XB
  404365:	rex.RB push r11
  404367:	push   rbx
  404368:	add    BYTE PTR [rbp+0x52],al
  40436b:	push   rdx
  40436c:	rex.WRXB push r10
  40436e:	pop    rdi
  40436f:	rex.B
  404370:	rex.XB
  404371:	rex.XB
  404372:	rex.RB push r11
  404374:	push   rbx
  404375:	pop    rdi
  404376:	rex.R
  404377:	rex.RB
  404378:	rex.WRX
  404379:	rex.WB
  40437a:	rex.RB
  40437b:	add    BYTE PTR [rsi+0x4f],r8b
  40437f:	push   rdx
  404380:	rex.WRB
  404381:	push   r12
  404383:	pop    rdi
  404384:	rex.WRB
  404385:	rex.RB push r11
  404387:	push   rbx
  404388:	rex.B
  404389:	rex.RXB
  40438a:	rex.RB pop r15
  40438c:	rex.B
  40438d:	rex.WR
  40438e:	rex.WR
  40438f:	rex.WRXB
  404390:	rex.XB
  404391:	push   r12
  404393:	rex.RB pop r15
  404395:	rex.X push rbp
  404397:	rex.RX
  404398:	rex.RX
  404399:	rex.RB push r10
  40439b:	add    BYTE PTR [rsi+0x4f],al
  40439e:	push   rdx
  40439f:	rex.WRB
  4043a0:	push   r12
  4043a2:	pop    rdi
  4043a3:	rex.WRB
  4043a4:	rex.RB push r11
  4043a6:	push   rbx
  4043a7:	rex.B
  4043a8:	rex.RXB
  4043a9:	rex.RB pop r15
  4043ab:	rex.WB
  4043ac:	rex.RXB
  4043ad:	rex.WRX
  4043ae:	rex.WRXB push r10
  4043b0:	rex.RB pop r15
  4043b2:	rex.WB
  4043b3:	rex.WRX push rbx
  4043b5:	rex.RB push r10
  4043b7:	push   rsp
  4043b8:	push   rbx
  4043b9:	add    BYTE PTR [rsi+0x4f],al
  4043bc:	push   rdx
  4043bd:	rex.WRB
  4043be:	push   r12
  4043c0:	pop    rdi
  4043c1:	rex.WRB
  4043c2:	rex.RB push r11
  4043c4:	push   rbx
  4043c5:	rex.B
  4043c6:	rex.RXB
  4043c7:	rex.RB pop r15
  4043c9:	rex.RX push rdx
  4043cb:	rex.WRXB
  4043cc:	rex.WRB pop r15
  4043ce:	push   rbx
  4043cf:	pop    rcx
  4043d0:	push   rbx
  4043d1:	push   rsp
  4043d2:	rex.RB
  4043d3:	rex.WRB add BYTE PTR [r14+0x4f],r8b
  4043d7:	push   rdx
  4043d8:	rex.WRB
  4043d9:	push   r12
  4043db:	pop    rdi
  4043dc:	rex.WRB
  4043dd:	rex.RB push r11
  4043df:	push   rbx
  4043e0:	rex.B
  4043e1:	rex.RXB
  4043e2:	rex.RB pop r15
  4043e4:	push   r10
  4043e6:	rex.RXB push r13
  4043e8:	rex.WRB
  4043e9:	rex.RB
  4043ea:	rex.WRX push rsp
  4043ec:	pop    rdi
  4043ed:	push   r10
  4043ef:	push   rdx
  4043f0:	pop    r9
  4043f2:	add    BYTE PTR [rcx+0x4e],cl
  4043f5:	rex.W
  4043f6:	rex.RB push r10
  4043f8:	rex.WB push r12
  4043fa:	pop    rdi
  4043fb:	rex.WRXB
  4043fc:	rex.WRX
  4043fd:	rex.WR pop rcx
  4043ff:	pop    rdi
  404400:	rex.B
  404401:	rex.XB
  404402:	add    BYTE PTR [r9+0x4e],r9b
  404406:	rex.W
  404407:	rex.RB push r10
  404409:	rex.WB push r12
  40440b:	rex.RB
  40440c:	rex.R pop rdi
  40440e:	rex.B
  40440f:	rex.XB
  404410:	add    BYTE PTR [r9+0x43],r8b
  404414:	rex.XB
  404415:	rex.RB push r11
  404417:	push   rbx
  404418:	pop    rdi
  404419:	rex.WRB
  40441a:	rex.WB
  40441b:	rex.WRX pop rdi
  40441d:	rex.WRB push r11
  40441f:	pop    rdi
  404420:	rex.B
  404421:	rex.XB
  404422:	rex.RB pop r15
  404424:	push   rsp
  404425:	pop    rcx
  404426:	push   rax
  404427:	add    BYTE PTR [r9+0x43],r8b
  40442b:	rex.XB
  40442c:	rex.RB push r11
  40442e:	push   rbx
  40442f:	pop    rdi
  404430:	rex.B
  404431:	rex.WR
  404432:	rex.WR
  404433:	rex.WRXB push r15
  404435:	rex.RB
  404436:	rex.R pop rdi
  404438:	rex.B
  404439:	rex.XB
  40443a:	rex.RB pop r15
  40443c:	push   rsp
  40443d:	pop    rcx
  40443e:	push   rax
  40443f:	add    BYTE PTR [r9+0x43],r8b
  404443:	rex.XB
  404444:	rex.RB push r11
  404446:	push   rbx
  404447:	pop    rdi
  404448:	rex.R
  404449:	rex.RB
  40444a:	rex.WRX
  40444b:	rex.WB
  40444c:	rex.RB
  40444d:	rex.R pop rdi
  40444f:	rex.B
  404450:	rex.XB
  404451:	rex.RB pop r15
  404453:	push   rsp
  404454:	pop    rcx
  404455:	push   rax
  404456:	add    BYTE PTR [r11+0x59],r10b
  40445a:	push   rbx
  40445b:	push   rsp
  40445c:	rex.RB
  40445d:	rex.WRB pop r15
  40445f:	push   r13
  404461:	rex.R
  404462:	rex.WB push r12
  404464:	pop    rdi
  404465:	rex.B
  404466:	rex.XB
  404467:	rex.RB pop r15
  404469:	push   rsp
  40446a:	pop    rcx
  40446b:	push   rax
  40446c:	add    BYTE PTR [r11+0x59],r10b
  404470:	push   rbx
  404471:	push   rsp
  404472:	rex.RB
  404473:	rex.WRB pop r15
  404475:	rex.B
  404476:	rex.WR
  404477:	push   r10
  404479:	rex.WRB pop r15
  40447b:	rex.B
  40447c:	rex.XB
  40447d:	rex.RB pop r15
  40447f:	push   rsp
  404480:	pop    rcx
  404481:	push   rax
  404482:	add    BYTE PTR [r9+0x43],r8b
  404486:	rex.XB
  404487:	rex.RB push r11
  404489:	push   rbx
  40448a:	pop    rdi
  40448b:	rex.WRB
  40448c:	pop    r8
  40448e:	pop    rdi
  40448f:	rex.WRB push r11
  404491:	pop    rdi
  404492:	push   rsi
  404493:	xor    bl,BYTE PTR [rdi+0x41]
  404496:	rex.XB
  404497:	rex.RB pop r15
  404499:	push   rsp
  40449a:	pop    rcx
  40449b:	push   rax
  40449c:	add    BYTE PTR [r9+0x43],r8b
  4044a0:	rex.XB
  4044a1:	rex.RB push r11
  4044a3:	push   rbx
  4044a4:	pop    rdi
  4044a5:	rex.B
  4044a6:	rex.WR
  4044a7:	rex.WR
  4044a8:	rex.WRXB push r15
  4044aa:	rex.RB
  4044ab:	rex.R pop rdi
  4044ad:	rex.XB
  4044ae:	rex.WRXB
  4044af:	rex.WRB push r8
  4044b1:	rex.WRXB push r13
  4044b3:	rex.WRX
  4044b4:	rex.R pop rdi
  4044b6:	rex.B
  4044b7:	rex.XB
  4044b8:	rex.RB pop r15
  4044ba:	push   rsp
  4044bb:	pop    rcx
  4044bc:	push   rax
  4044bd:	add    BYTE PTR [r9+0x43],r8b
  4044c1:	rex.XB
  4044c2:	rex.RB push r11
  4044c4:	push   rbx
  4044c5:	pop    rdi
  4044c6:	rex.WRB
  4044c7:	pop    r8
  4044c9:	pop    rdi
  4044ca:	rex.WRB push r11
  4044cc:	pop    rdi
  4044cd:	push   rsi
  4044ce:	xor    ebx,DWORD PTR [rdi+0x41]
  4044d1:	rex.XB
  4044d2:	rex.RB pop r15
  4044d4:	push   rsp
  4044d5:	pop    rcx
  4044d6:	push   rax
  4044d7:	add    BYTE PTR [r9+0x43],r8b
  4044db:	rex.XB
  4044dc:	rex.RB push r11
  4044de:	push   rbx
  4044df:	pop    rdi
  4044e0:	rex.WRB
  4044e1:	rex.WB
  4044e2:	rex.WRX pop rdi
  4044e4:	rex.WRB push r11
  4044e6:	pop    rdi
  4044e7:	rex.WRXB
  4044e8:	rex.X
  4044e9:	rex.WX
  4044ea:	rex.RB
  4044eb:	rex.XB push r12
  4044ed:	pop    rdi
  4044ee:	rex.B
  4044ef:	rex.XB
  4044f0:	rex.RB pop r15
  4044f2:	push   rsp
  4044f3:	pop    rcx
  4044f4:	push   rax
  4044f5:	add    BYTE PTR [r9+0x43],r8b
  4044f9:	rex.XB
  4044fa:	rex.RB push r11
  4044fc:	push   rbx
  4044fd:	pop    rdi
  4044fe:	rex.B
  4044ff:	rex.WR
  404500:	rex.WR
  404501:	rex.WRXB push r15
  404503:	rex.RB
  404504:	rex.R pop rdi
  404506:	rex.WRXB
  404507:	rex.X
  404508:	rex.WX
  404509:	rex.RB
  40450a:	rex.XB push r12
  40450c:	pop    rdi
  40450d:	rex.B
  40450e:	rex.XB
  40450f:	rex.RB pop r15
  404511:	push   rsp
  404512:	pop    rcx
  404513:	push   rax
  404514:	add    BYTE PTR [r9+0x43],r8b
  404518:	rex.XB
  404519:	rex.RB push r11
  40451b:	push   rbx
  40451c:	pop    rdi
  40451d:	rex.R
  40451e:	rex.RB
  40451f:	rex.WRX
  404520:	rex.WB
  404521:	rex.RB
  404522:	rex.R pop rdi
  404524:	rex.WRXB
  404525:	rex.X
  404526:	rex.WX
  404527:	rex.RB
  404528:	rex.XB push r12
  40452a:	pop    rdi
  40452b:	rex.B
  40452c:	rex.XB
  40452d:	rex.RB pop r15
  40452f:	push   rsp
  404530:	pop    rcx
  404531:	push   rax
  404532:	add    BYTE PTR [r11+0x59],r10b
  404536:	push   rbx
  404537:	push   rsp
  404538:	rex.RB
  404539:	rex.WRB pop r15
  40453b:	push   r13
  40453d:	rex.R
  40453e:	rex.WB push r12
  404540:	pop    rdi
  404541:	rex.WRXB
  404542:	rex.X
  404543:	rex.WX
  404544:	rex.RB
  404545:	rex.XB push r12
  404547:	pop    rdi
  404548:	rex.B
  404549:	rex.XB
  40454a:	rex.RB pop r15
  40454c:	push   rsp
  40454d:	pop    rcx
  40454e:	push   rax
  40454f:	add    BYTE PTR [r11+0x59],r10b
  404553:	push   rbx
  404554:	push   rsp
  404555:	rex.RB
  404556:	rex.WRB pop r15
  404558:	rex.B
  404559:	rex.WR
  40455a:	push   r10
  40455c:	rex.WRB pop r15
  40455e:	rex.WRXB
  40455f:	rex.X
  404560:	rex.WX
  404561:	rex.RB
  404562:	rex.XB push r12
  404564:	pop    rdi
  404565:	rex.B
  404566:	rex.XB
  404567:	rex.RB pop r15
  404569:	push   rsp
  40456a:	pop    rcx
  40456b:	push   rax
  40456c:	add    BYTE PTR [r9+0x43],r8b
  404570:	rex.XB
  404571:	rex.RB push r11
  404573:	push   rbx
  404574:	pop    rdi
  404575:	rex.WRB
  404576:	pop    r8
  404578:	pop    rdi
  404579:	rex.WRB push r11
  40457b:	pop    rdi
  40457c:	rex.WRXB
  40457d:	rex.X
  40457e:	rex.WX
  40457f:	rex.RB
  404580:	rex.XB push r12
  404582:	pop    rdi
  404583:	rex.B
  404584:	rex.XB
  404585:	rex.RB pop r15
  404587:	push   rsp
  404588:	pop    rcx
  404589:	push   rax
  40458a:	add    BYTE PTR [r9+0x43],r8b
  40458e:	rex.XB
  40458f:	rex.RB push r11
  404591:	push   rbx
  404592:	pop    rdi
  404593:	rex.WRB
  404594:	pop    r8
  404596:	pop    rdi
  404597:	rex.WRB push r11
  404599:	pop    rdi
  40459a:	push   rsi
  40459b:	xor    al,0x5f
  40459d:	rex.B
  40459e:	rex.XB
  40459f:	rex.RB pop r15
  4045a1:	push   rsp
  4045a2:	pop    rcx
  4045a3:	push   rax
  4045a4:	add    BYTE PTR [r9+0x43],r8b
  4045a8:	rex.XB
  4045a9:	rex.RB push r11
  4045ab:	push   rbx
  4045ac:	pop    rdi
  4045ad:	rex.WRB
  4045ae:	pop    r8
  4045b0:	pop    rdi
  4045b1:	rex.WRB push r11
  4045b3:	pop    rdi
  4045b4:	rex.B
  4045b5:	rex.XB
  4045b6:	rex.RB pop r15
  4045b8:	push   rsp
  4045b9:	pop    rcx
  4045ba:	push   rax
  4045bb:	add    BYTE PTR [r9+0x43],r8b
  4045bf:	rex.XB
  4045c0:	rex.RB push r11
  4045c2:	push   rbx
  4045c3:	pop    rdi
  4045c4:	rex.B
  4045c5:	rex.WR
  4045c6:	rex.WR
  4045c7:	rex.WRXB push r15
  4045c9:	rex.RB
  4045ca:	rex.R pop rdi
  4045cc:	rex.XB
  4045cd:	rex.B
  4045ce:	rex.WR
  4045cf:	rex.WR
  4045d0:	rex.X
  4045d1:	rex.B
  4045d2:	rex.XB
  4045d3:	rex.WXB pop r15
  4045d5:	rex.B
  4045d6:	rex.XB
  4045d7:	rex.RB pop r15
  4045d9:	push   rsp
  4045da:	pop    rcx
  4045db:	push   rax
  4045dc:	add    BYTE PTR [r9+0x43],r8b
  4045e0:	rex.XB
  4045e1:	rex.RB push r11
  4045e3:	push   rbx
  4045e4:	pop    rdi
  4045e5:	rex.R
  4045e6:	rex.RB
  4045e7:	rex.WRX
  4045e8:	rex.WB
  4045e9:	rex.RB
  4045ea:	rex.R pop rdi
  4045ec:	rex.XB
  4045ed:	rex.B
  4045ee:	rex.WR
  4045ef:	rex.WR
  4045f0:	rex.X
  4045f1:	rex.B
  4045f2:	rex.XB
  4045f3:	rex.WXB pop r15
  4045f5:	rex.B
  4045f6:	rex.XB
  4045f7:	rex.RB pop r15
  4045f9:	push   rsp
  4045fa:	pop    rcx
  4045fb:	push   rax
  4045fc:	add    BYTE PTR [r9+0x43],r8b
  404600:	rex.XB
  404601:	rex.RB push r11
  404603:	push   rbx
  404604:	pop    rdi
  404605:	rex.B
  404606:	rex.WR
  404607:	rex.WR
  404608:	rex.WRXB push r15
  40460a:	rex.RB
  40460b:	rex.R pop rdi
  40460d:	rex.XB
  40460e:	rex.B
  40460f:	rex.WR
  404610:	rex.WR
  404611:	rex.X
  404612:	rex.B
  404613:	rex.XB
  404614:	rex.WXB pop r15
  404616:	rex.WRXB
  404617:	rex.X
  404618:	rex.WX
  404619:	rex.RB
  40461a:	rex.XB push r12
  40461c:	pop    rdi
  40461d:	rex.B
  40461e:	rex.XB
  40461f:	rex.RB pop r15
  404621:	push   rsp
  404622:	pop    rcx
  404623:	push   rax
  404624:	add    BYTE PTR [r9+0x43],r8b
  404628:	rex.XB
  404629:	rex.RB push r11
  40462b:	push   rbx
  40462c:	pop    rdi
  40462d:	rex.R
  40462e:	rex.RB
  40462f:	rex.WRX
  404630:	rex.WB
  404631:	rex.RB
  404632:	rex.R pop rdi
  404634:	rex.XB
  404635:	rex.B
  404636:	rex.WR
  404637:	rex.WR
  404638:	rex.X
  404639:	rex.B
  40463a:	rex.XB
  40463b:	rex.WXB pop r15
  40463d:	rex.WRXB
  40463e:	rex.X
  40463f:	rex.WX
  404640:	rex.RB
  404641:	rex.XB push r12
  404643:	pop    rdi
  404644:	rex.B
  404645:	rex.XB
  404646:	rex.RB pop r15
  404648:	push   rsp
  404649:	pop    rcx
  40464a:	push   rax
  40464b:	add    BYTE PTR [r11+0x59],r10b
  40464f:	push   rbx
  404650:	push   rsp
  404651:	rex.RB
  404652:	rex.WRB pop r15
  404654:	push   r13
  404656:	rex.R
  404657:	rex.WB push r12
  404659:	pop    rdi
  40465a:	rex.XB
  40465b:	rex.B
  40465c:	rex.WR
  40465d:	rex.WR
  40465e:	rex.X
  40465f:	rex.B
  404660:	rex.XB
  404661:	rex.WXB pop r15
  404663:	rex.B
  404664:	rex.XB
  404665:	rex.RB pop r15
  404667:	push   rsp
  404668:	pop    rcx
  404669:	push   rax
  40466a:	add    BYTE PTR [r11+0x59],r10b
  40466e:	push   rbx
  40466f:	push   rsp
  404670:	rex.RB
  404671:	rex.WRB pop r15
  404673:	rex.B
  404674:	rex.WR
  404675:	push   r10
  404677:	rex.WRB pop r15
  404679:	rex.XB
  40467a:	rex.B
  40467b:	rex.WR
  40467c:	rex.WR
  40467d:	rex.X
  40467e:	rex.B
  40467f:	rex.XB
  404680:	rex.WXB pop r15
  404682:	rex.B
  404683:	rex.XB
  404684:	rex.RB pop r15
  404686:	push   rsp
  404687:	pop    rcx
  404688:	push   rax
  404689:	add    BYTE PTR [r11+0x59],r10b
  40468d:	push   rbx
  40468e:	push   rsp
  40468f:	rex.RB
  404690:	rex.WRB pop r15
  404692:	push   r13
  404694:	rex.R
  404695:	rex.WB push r12
  404697:	pop    rdi
  404698:	rex.XB
  404699:	rex.B
  40469a:	rex.WR
  40469b:	rex.WR
  40469c:	rex.X
  40469d:	rex.B
  40469e:	rex.XB
  40469f:	rex.WXB pop r15
  4046a1:	rex.WRXB
  4046a2:	rex.X
  4046a3:	rex.WX
  4046a4:	rex.RB
  4046a5:	rex.XB push r12
  4046a7:	pop    rdi
  4046a8:	rex.B
  4046a9:	rex.XB
  4046aa:	rex.RB pop r15
  4046ac:	push   rsp
  4046ad:	pop    rcx
  4046ae:	push   rax
  4046af:	add    BYTE PTR [r11+0x59],r10b
  4046b3:	push   rbx
  4046b4:	push   rsp
  4046b5:	rex.RB
  4046b6:	rex.WRB pop r15
  4046b8:	rex.B
  4046b9:	rex.WR
  4046ba:	push   r10
  4046bc:	rex.WRB pop r15
  4046be:	rex.XB
  4046bf:	rex.B
  4046c0:	rex.WR
  4046c1:	rex.WR
  4046c2:	rex.X
  4046c3:	rex.B
  4046c4:	rex.XB
  4046c5:	rex.WXB pop r15
  4046c7:	rex.WRXB
  4046c8:	rex.X
  4046c9:	rex.WX
  4046ca:	rex.RB
  4046cb:	rex.XB push r12
  4046cd:	pop    rdi
  4046ce:	rex.B
  4046cf:	rex.XB
  4046d0:	rex.RB pop r15
  4046d2:	push   rsp
  4046d3:	pop    rcx
  4046d4:	push   rax
  4046d5:	add    BYTE PTR [r9+0x43],r8b
  4046d9:	rex.XB
  4046da:	rex.RB push r11
  4046dc:	push   rbx
  4046dd:	pop    rdi
  4046de:	rex.WRB
  4046df:	pop    r8
  4046e1:	pop    rdi
  4046e2:	rex.WRB push r11
  4046e4:	pop    rdi
  4046e5:	push   rsi
  4046e6:	xor    eax,0x4543415f
  4046eb:	pop    rdi
  4046ec:	push   rsp
  4046ed:	pop    rcx
  4046ee:	push   rax
  4046ef:	add    BYTE PTR [r15+0x57],r9b
  4046f3:	rex.WRX
  4046f4:	rex.RB push r10
  4046f6:	pop    rdi
  4046f7:	push   rbx
  4046f8:	rex.RB
  4046f9:	rex.XB push r13
  4046fb:	push   rdx
  4046fc:	rex.WB push r12
  4046fe:	pop    rcx
  4046ff:	pop    rdi
  404700:	rex.WB
  404701:	rex.WRX
  404702:	rex.RX
  404703:	rex.WRXB push r10
  404705:	rex.WRB
  404706:	push   r12
  404708:	rex.WB
  404709:	rex.WRXB
  40470a:	rex.WRX add BYTE PTR [rdi+0x52],r8b
  40470e:	rex.WRXB push r13
  404710:	push   rax
  404711:	pop    rdi
  404712:	push   rbx
  404713:	rex.RB
  404714:	rex.XB push r13
  404716:	push   rdx
  404717:	rex.WB push r12
  404719:	pop    rcx
  40471a:	pop    rdi
  40471b:	rex.WB
  40471c:	rex.WRX
  40471d:	rex.RX
  40471e:	rex.WRXB push r10
  404720:	rex.WRB
  404721:	push   r12
  404723:	rex.WB
  404724:	rex.WRXB
  404725:	rex.WRX add BYTE PTR [rcx+r8*2+0x43],r8b
  40472a:	rex.WR pop rdi
  40472c:	push   rbx
  40472d:	rex.RB
  40472e:	rex.XB push r13
  404730:	push   rdx
  404731:	rex.WB push r12
  404733:	pop    rcx
  404734:	pop    rdi
  404735:	rex.WB
  404736:	rex.WRX
  404737:	rex.RX
  404738:	rex.WRXB push r10
  40473a:	rex.WRB
  40473b:	push   r12
  40473d:	rex.WB
  40473e:	rex.WRXB
  40473f:	rex.WRX add BYTE PTR [rbx+0x41],r10b
  404743:	rex.XB
  404744:	rex.WR pop rdi
  404746:	push   rbx
  404747:	rex.RB
  404748:	rex.XB push r13
  40474a:	push   rdx
  40474b:	rex.WB push r12
  40474d:	pop    rcx
  40474e:	pop    rdi
  40474f:	rex.WB
  404750:	rex.WRX
  404751:	rex.RX
  404752:	rex.WRXB push r10
  404754:	rex.WRB
  404755:	push   r12
  404757:	rex.WB
  404758:	rex.WRXB
  404759:	rex.WRX add BYTE PTR [rbx+0x45],r9b
  40475d:	pop    rcx
  40475e:	pop    rdi
  40475f:	push   rcx
  404760:	push   rbp
  404761:	rex.RB push r10
  404763:	pop    rcx
  404764:	pop    rdi
  404765:	push   rsi
  404766:	rex.B
  404767:	rex.WR push rbp
  404769:	add    BYTE PTR [r11+0x45],r9b
  40476d:	pop    rcx
  40476e:	pop    rdi
  40476f:	push   rbx
  404770:	rex.RB push r12
  404772:	pop    rdi
  404773:	push   rsi
  404774:	rex.B
  404775:	rex.WR push rbp
  404777:	add    BYTE PTR [r11+0x45],r9b
  40477b:	pop    rcx
  40477c:	pop    rdi
  40477d:	rex.XB push r10
  40477f:	rex.RB
  404780:	push   r12
  404782:	rex.RB pop r15
  404784:	push   rbx
  404785:	push   rbp
  404786:	rex.X pop rdi
  404788:	rex.WXB
  404789:	rex.RB pop r9
  40478b:	add    BYTE PTR [rbx+0x45],cl
  40478e:	pop    rcx
  40478f:	pop    rdi
  404790:	rex.RB
  404791:	rex.WRX push rbp
  404793:	rex.WRB
  404794:	rex.RB push r10
  404796:	push   r12
  404798:	rex.RB pop r15
  40479a:	push   rbx
  40479b:	push   rbp
  40479c:	rex.X pop rdi
  40479e:	rex.WXB
  40479f:	rex.RB pop r9
  4047a1:	push   rbx
  4047a2:	add    BYTE PTR [rbx+0x45],cl
  4047a5:	pop    rcx
  4047a6:	pop    rdi
  4047a7:	rex.WRX
  4047a8:	rex.WRXB push r12
  4047aa:	rex.WB
  4047ab:	rex.RX pop rcx
  4047ad:	add    BYTE PTR [rbx+0x45],cl
  4047b0:	pop    rcx
  4047b1:	pop    rdi
  4047b2:	rex.XB push r10
  4047b4:	rex.RB
  4047b5:	push   r12
  4047b7:	rex.RB pop r15
  4047b9:	rex.WR
  4047ba:	rex.WB
  4047bb:	rex.WRX
  4047bc:	rex.WXB add BYTE PTR [r11+0x45],cl
  4047c0:	pop    rcx
  4047c1:	pop    rdi
  4047c2:	push   rdi
  4047c3:	rex.WRXB push r15
  4047c5:	ss xor al,0x5f
  4047c8:	xor    esi,DWORD PTR [rdx]
  4047ca:	rex.WXB
  4047cb:	rex.RB pop r9
  4047cd:	add    BYTE PTR [rbx+0x45],cl
  4047d0:	pop    rcx
  4047d1:	pop    rdi
  4047d2:	push   rdi
  4047d3:	rex.WRXB push r15
  4047d5:	ss xor al,0x5f
  4047d8:	ss xor al,0x4b
  4047db:	rex.RB pop r9
  4047dd:	add    BYTE PTR [rbx+0x45],cl
  4047e0:	pop    rcx
  4047e1:	pop    rdi
  4047e2:	push   rdi
  4047e3:	rex.WRXB push r15
  4047e5:	ss xor al,0x5f
  4047e8:	push   rdx
  4047e9:	rex.RB push r11
  4047eb:	add    BYTE PTR [rbx+0x45],cl
  4047ee:	pop    rcx
  4047ef:	pop    rdi
  4047f0:	push   rdx
  4047f1:	rex.RB
  4047f2:	rex.B
  4047f3:	add    BYTE PTR [rbx+0x45],r9b
  4047f7:	pop    rcx
  4047f8:	pop    rdi
  4047f9:	push   rdi
  4047fa:	push   rdx
  4047fb:	rex.WB push r12
  4047fd:	add    BYTE PTR [r11+0x45],r9b
  404801:	pop    rcx
  404802:	pop    rdi
  404803:	rex.B
  404804:	rex.WR
  404805:	rex.WR pop rdi
  404807:	rex.B
  404808:	rex.XB
  404809:	rex.XB
  40480a:	rex.RB push r11
  40480c:	push   rbx
  40480d:	add    BYTE PTR [rbp+rax*2+0x4c],al
  404811:	rex.RB push r12
  404813:	add    BYTE PTR [r10+0x45],r10b
  404817:	rex.B
  404818:	rex.R pop rdi
  40481a:	rex.XB
  40481b:	rex.WRXB
  40481c:	rex.WRX push rsp
  40481e:	push   rdx
  40481f:	rex.WRXB
  404820:	rex.WR add BYTE PTR [rdi+0x52],r10b
  404824:	rex.WB push r12
  404826:	rex.RB pop r15
  404828:	rex.R
  404829:	rex.B
  40482a:	rex.XB add BYTE PTR [r15+0x52],dl
  40482e:	rex.WB push r12
  404830:	rex.RB pop r15
  404832:	rex.WRXB push r15
  404834:	rex.WRX
  404835:	rex.RB push r10
  404837:	add    BYTE PTR [rbx+0x59],dl
  40483a:	rex.WRX
  40483b:	rex.XB
  40483c:	rex.W push rdx
  40483e:	rex.WRXB
  40483f:	rex.WRX
  404840:	rex.WB pop r10
  404842:	add    BYTE PTR [r11+0x54],r10b
  404846:	rex.B
  404847:	rex.WRX
  404848:	rex.R
  404849:	push   r10
  40484b:	rex.R pop rdi
  40484d:	push   rdx
  40484e:	rex.WB
  40484f:	rex.RXB
  404850:	rex.W push rsp
  404852:	push   rbx
  404853:	pop    rdi
  404854:	push   rdx
  404855:	rex.RB
  404856:	rex.B
  404857:	add    BYTE PTR [rbx+0x54],r10b
  40485b:	rex.B
  40485c:	rex.WRX
  40485d:	rex.R
  40485e:	push   r10
  404860:	rex.R pop rdi
  404862:	push   rdx
  404863:	rex.WB
  404864:	rex.RXB
  404865:	rex.W push rsp
  404867:	push   rbx
  404868:	pop    rdi
  404869:	push   rdi
  40486a:	push   rdx
  40486b:	rex.WB push r12
  40486d:	add    BYTE PTR [r11+0x54],r10b
  404871:	rex.B
  404872:	rex.WRX
  404873:	rex.R
  404874:	push   r10
  404876:	rex.R pop rdi
  404878:	push   rdx
  404879:	rex.WB
  40487a:	rex.RXB
  40487b:	rex.W push rsp
  40487d:	push   rbx
  40487e:	pop    rdi
  40487f:	rex.RB pop r8
  404881:	rex.RB
  404882:	rex.XB push r13
  404884:	push   rsp
  404885:	add    BYTE PTR [r11+0x54],r10b
  404889:	rex.B
  40488a:	rex.WRX
  40488b:	rex.R
  40488c:	push   r10
  40488e:	rex.R pop rdi
  404890:	push   rdx
  404891:	rex.WB
  404892:	rex.RXB
  404893:	rex.W push rsp
  404895:	push   rbx
  404896:	pop    rdi
  404897:	rex.B
  404898:	rex.WR
  404899:	rex.WR add BYTE PTR [rbx+0x50],r10b
  40489d:	rex.RB
  40489e:	rex.XB
  40489f:	rex.WB
  4048a0:	rex.RX
  4048a1:	rex.WB
  4048a2:	rex.XB pop r15
  4048a4:	push   rdx
  4048a5:	rex.WB
  4048a6:	rex.RXB
  4048a7:	rex.W push rsp
  4048a9:	push   rbx
  4048aa:	pop    rdi
  4048ab:	rex.B
  4048ac:	rex.WR
  4048ad:	rex.WR add BYTE PTR [rdx+0x45],r10b
  4048b1:	rex.RXB pop r15
  4048b3:	rex.WRXB push r8
  4048b5:	push   rsp
  4048b6:	rex.WB
  4048b7:	rex.WRXB
  4048b8:	rex.WRX pop rdi
  4048ba:	rex.X
  4048bb:	rex.B
  4048bc:	rex.XB
  4048bd:	rex.WXB push r13
  4048bf:	push   rax
  4048c0:	pop    rdi
  4048c1:	push   rdx
  4048c2:	rex.RB push r11
  4048c4:	push   rsp
  4048c5:	rex.WRXB push r10
  4048c7:	add    BYTE PTR [r10+0x45],r10b
  4048cb:	rex.RXB pop r15
  4048cd:	rex.WRXB push r8
  4048cf:	push   rsp
  4048d0:	rex.WB
  4048d1:	rex.WRXB
  4048d2:	rex.WRX pop rdi
  4048d4:	rex.WRX
  4048d5:	rex.WRXB
  4048d6:	rex.WRX pop rdi
  4048d8:	push   rsi
  4048d9:	rex.WRXB
  4048da:	rex.WR
  4048db:	push   r12
  4048dd:	rex.WB
  4048de:	rex.WR
  4048df:	add    BYTE PTR [r10+0x45],r10b
  4048e3:	rex.RXB pop r15
  4048e5:	rex.WRXB push r8
  4048e7:	push   rsp
  4048e8:	rex.WB
  4048e9:	rex.WRXB
  4048ea:	rex.WRX pop rdi
  4048ec:	rex.XB push r10
  4048ee:	rex.RB
  4048ef:	push   r12
  4048f1:	rex.RB pop r15
  4048f3:	rex.WR
  4048f4:	rex.WB
  4048f5:	rex.WRX
  4048f6:	rex.WXB add BYTE PTR [r10+0x45],dl
  4048fa:	rex.RXB pop r15
  4048fc:	rex.WRXB push r8
  4048fe:	push   rsp
  4048ff:	rex.WB
  404900:	rex.WRXB
  404901:	rex.WRX pop rdi
  404903:	push   rsi
  404904:	rex.WRXB
  404905:	rex.WR
  404906:	push   r12
  404908:	rex.WB
  404909:	rex.WR
  40490a:	add    BYTE PTR [r10+0x45],r10b
  40490e:	rex.RXB pop r15
  404910:	rex.WRXB push r8
  404912:	push   rsp
  404913:	rex.WB
  404914:	rex.WRXB
  404915:	rex.WRX pop rdi
  404917:	push   rdx
  404918:	rex.RB push r11
  40491a:	rex.RB push r10
  40491c:	push   rsi
  40491d:	rex.RB
  40491e:	add    BYTE PTR [rbx+0x45],r10b
  404922:	pop    rdi
  404923:	rex.WRXB push r15
  404925:	rex.WRX
  404926:	rex.RB push r10
  404928:	pop    rdi
  404929:	rex.R
  40492a:	rex.RB
  40492b:	rex.RX
  40492c:	push   r13
  40492e:	rex.WR push rsp
  404930:	rex.RB
  404931:	add    BYTE PTR [rbx+0x45],r10b
  404935:	pop    rdi
  404936:	rex.RXB push r10
  404938:	rex.WRXB push r13
  40493a:	push   rax
  40493b:	pop    rdi
  40493c:	rex.R
  40493d:	rex.RB
  40493e:	rex.RX
  40493f:	push   r13
  404941:	rex.WR push rsp
  404943:	rex.RB
  404944:	add    BYTE PTR [rbx+0x45],r10b
  404948:	pop    rdi
  404949:	rex.R
  40494a:	rex.B
  40494b:	rex.XB
  40494c:	rex.WR pop rdi
  40494e:	push   rax
  40494f:	push   rdx
  404950:	rex.RB push r11
  404952:	rex.RB
  404953:	rex.WRX push rsp
  404955:	add    BYTE PTR [rbx+0x45],dl
  404958:	pop    rdi
  404959:	rex.R
  40495a:	rex.B
  40495b:	rex.XB
  40495c:	rex.WR pop rdi
  40495e:	rex.R
  40495f:	rex.RB
  404960:	rex.RX
  404961:	push   r13
  404963:	rex.WR push rsp
  404965:	rex.RB
  404966:	add    BYTE PTR [rbx+0x45],r10b
  40496a:	pop    rdi
  40496b:	push   rbx
  40496c:	rex.B
  40496d:	rex.XB
  40496e:	rex.WR pop rdi
  404970:	push   rax
  404971:	push   rdx
  404972:	rex.RB push r11
  404974:	rex.RB
  404975:	rex.WRX push rsp
  404977:	add    BYTE PTR [rbx+0x45],dl
  40497a:	pop    rdi
  40497b:	push   rbx
  40497c:	rex.B
  40497d:	rex.XB
  40497e:	rex.WR pop rdi
  404980:	rex.R
  404981:	rex.RB
  404982:	rex.RX
  404983:	push   r13
  404985:	rex.WR push rsp
  404987:	rex.RB
  404988:	add    BYTE PTR [rbx+0x45],r10b
  40498c:	pop    rdi
  40498d:	rex.R
  40498e:	rex.B
  40498f:	rex.XB
  404990:	rex.WR pop rdi
  404992:	push   r13
  404994:	push   rsp
  404995:	rex.WRXB pop r15
  404997:	rex.WB
  404998:	rex.WRX
  404999:	rex.W
  40499a:	rex.RB push r10
  40499c:	rex.WB push r12
  40499e:	pop    rdi
  40499f:	push   rdx
  4049a0:	rex.RB push r9
  4049a2:	add    BYTE PTR [rbx+0x45],dl
  4049a5:	pop    rdi
  4049a6:	push   rbx
  4049a7:	rex.B
  4049a8:	rex.XB
  4049a9:	rex.WR pop rdi
  4049ab:	push   r13
  4049ad:	push   rsp
  4049ae:	rex.WRXB pop r15
  4049b0:	rex.WB
  4049b1:	rex.WRX
  4049b2:	rex.W
  4049b3:	rex.RB push r10
  4049b5:	rex.WB push r12
  4049b7:	pop    rdi
  4049b8:	push   rdx
  4049b9:	rex.RB push r9
  4049bb:	add    BYTE PTR [rbx+0x45],dl
  4049be:	pop    rdi
  4049bf:	rex.R
  4049c0:	rex.B
  4049c1:	rex.XB
  4049c2:	rex.WR pop rdi
  4049c4:	push   r13
  4049c6:	push   rsp
  4049c7:	rex.WRXB pop r15
  4049c9:	rex.WB
  4049ca:	rex.WRX
  4049cb:	rex.W
  4049cc:	rex.RB push r10
  4049ce:	rex.WB push r12
  4049d0:	rex.RB
  4049d1:	add    BYTE PTR [rbx+0x45],r10b
  4049d5:	pop    rdi
  4049d6:	push   rbx
  4049d7:	rex.B
  4049d8:	rex.XB
  4049d9:	rex.WR pop rdi
  4049db:	push   r13
  4049dd:	push   rsp
  4049de:	rex.WRXB pop r15
  4049e0:	rex.WB
  4049e1:	rex.WRX
  4049e2:	rex.W
  4049e3:	rex.RB push r10
  4049e5:	rex.WB push r12
  4049e7:	rex.RB
  4049e8:	add    BYTE PTR [rbx+0x45],r10b
  4049ec:	pop    rdi
  4049ed:	rex.R
  4049ee:	rex.B
  4049ef:	rex.XB
  4049f0:	rex.WR pop rdi
  4049f2:	push   rax
  4049f3:	push   rdx
  4049f4:	rex.WRXB push r12
  4049f6:	rex.RB
  4049f7:	rex.XB push r12
  4049f9:	rex.RB
  4049fa:	add    BYTE PTR [rbx+0x45],r10b
  4049fe:	pop    rdi
  4049ff:	push   rbx
  404a00:	rex.B
  404a01:	rex.XB
  404a02:	rex.WR pop rdi
  404a04:	push   rax
  404a05:	push   rdx
  404a06:	rex.WRXB push r12
  404a08:	rex.RB
  404a09:	rex.XB push r12
  404a0b:	rex.RB
  404a0c:	add    BYTE PTR [rbx+0x45],r10b
  404a10:	pop    rdi
  404a11:	push   rdx
  404a12:	rex.WRB pop r15
  404a14:	rex.XB
  404a15:	rex.WRXB
  404a16:	rex.WRX push rsp
  404a18:	push   rdx
  404a19:	rex.WRXB
  404a1a:	rex.WR pop rdi
  404a1c:	push   rsi
  404a1d:	rex.B
  404a1e:	rex.WR
  404a1f:	rex.WB
  404a20:	add    BYTE PTR [rbx+0x45],r10b
  404a24:	pop    rdi
  404a25:	push   rbx
  404a26:	rex.RB
  404a27:	rex.WR
  404a28:	rex.RX pop rdi
  404a2a:	push   rdx
  404a2b:	rex.RB
  404a2c:	rex.WR
  404a2d:	push   r12
  404a2f:	rex.WB push r14
  404a31:	add    BYTE PTR [r8+0x4b],r9b
  404a35:	rex.RB pop r9
  404a37:	pop    rdi
  404a38:	rex.XB push r13
  404a3a:	push   rdx
  404a3b:	push   rdx
  404a3c:	rex.RB
  404a3d:	rex.WRX push rsp
  404a3f:	pop    rdi
  404a40:	push   rbp
  404a41:	push   rbx
  404a42:	rex.RB push r10
  404a44:	add    BYTE PTR [rax+0x4b],cl
  404a47:	rex.RB pop r9
  404a49:	pop    rdi
  404a4a:	rex.WR
  404a4b:	rex.WRXB
  404a4c:	rex.XB
  404a4d:	rex.B
  404a4e:	rex.WR pop rdi
  404a50:	rex.WRB
  404a51:	rex.B
  404a52:	rex.XB
  404a53:	rex.W
  404a54:	rex.WB
  404a55:	rex.WRX
  404a56:	add    BYTE PTR [r14+0x61],r14b
  404a5a:	ins    BYTE PTR es:[rdi],dx
  404a5b:	jne    0x404ac2
  404a5d:	pop    rdi
  404a5e:	pop    rdi
  404a5f:	add    BYTE PTR [rbx+0x45],dl
  404a62:	pop    rdi
  404a63:	push   rbp
  404a64:	rex.WRX
  404a65:	rex.WXB
  404a66:	rex.WRX
  404a67:	rex.WRXB push r15
  404a69:	rex.WRX pop rdi
  404a6b:	rex.WRXB
  404a6c:	rex.X
  404a6d:	rex.WX
  404a6e:	rex.RB
  404a6f:	rex.XB push r12
  404a71:	pop    rdi
  404a72:	push   rsp
  404a73:	pop    rcx
  404a74:	push   rax
  404a75:	add    BYTE PTR [r11+0x45],r10b
  404a79:	pop    rdi
  404a7a:	rex.RX
  404a7b:	rex.WB
  404a7c:	rex.WR
  404a7d:	rex.RB pop r15
  404a7f:	rex.WRXB
  404a80:	rex.X
  404a81:	rex.WX
  404a82:	rex.RB
  404a83:	rex.XB push r12
  404a85:	add    BYTE PTR [rbx+0x45],dl
  404a88:	pop    rdi
  404a89:	push   rbx
  404a8a:	rex.RB push r10
  404a8c:	push   rsi
  404a8d:	rex.WB
  404a8e:	rex.XB
  404a8f:	add    BYTE PTR [r11+0x45],r10b
  404a93:	pop    rdi
  404a94:	push   rax
  404a95:	push   rdx
  404a96:	rex.WB
  404a97:	rex.WRX push rsp
  404a99:	rex.RB push r10
  404a9b:	add    BYTE PTR [rbx+0x45],dl
  404a9e:	pop    rdi
  404a9f:	push   rdx
  404aa0:	rex.RB
  404aa1:	rex.RXB
  404aa2:	rex.WB push r11
  404aa4:	push   rsp
  404aa5:	push   rdx
  404aa6:	pop    rcx
  404aa7:	pop    rdi
  404aa8:	rex.WXB
  404aa9:	rex.RB pop r9
  404aab:	add    BYTE PTR [rbx+0x45],dl
  404aae:	pop    rdi
  404aaf:	rex.WR
  404ab0:	rex.WRB push r11
  404ab2:	rex.W
  404ab3:	push   r10
  404ab5:	add    BYTE PTR [r11+0x45],r10b
  404ab9:	pop    rdi
  404aba:	rex.WXB
  404abb:	rex.RB push r10
  404abd:	rex.WRX
  404abe:	rex.RB
  404abf:	rex.WR pop rdi
  404ac1:	rex.WRXB
  404ac2:	rex.X
  404ac3:	rex.WX
  404ac4:	rex.RB
  404ac5:	rex.XB push r12
  404ac7:	add    BYTE PTR [rbx+0x45],dl
  404aca:	pop    rdi
  404acb:	push   rdi
  404acc:	rex.WB
  404acd:	rex.WRX
  404ace:	rex.R
  404acf:	rex.WRXB push r15
  404ad1:	pop    rdi
  404ad2:	rex.WRXB
  404ad3:	rex.X
  404ad4:	rex.WX
  404ad5:	rex.RB
  404ad6:	rex.XB push r12
  404ad8:	add    BYTE PTR [rbx+0x45],dl
  404adb:	pop    rdi
  404adc:	rex.R push rbx
  404ade:	pop    rdi
  404adf:	rex.WRXB
  404ae0:	rex.X
  404ae1:	rex.WX
  404ae2:	rex.RB
  404ae3:	rex.XB push r12
  404ae5:	add    BYTE PTR [rbx+0x45],dl
  404ae8:	pop    rdi
  404ae9:	rex.R push rbx
  404aeb:	pop    rdi
  404aec:	rex.WRXB
  404aed:	rex.X
  404aee:	rex.WX
  404aef:	rex.RB
  404af0:	rex.XB push r12
  404af2:	pop    rdi
  404af3:	rex.B
  404af4:	rex.WR
  404af5:	rex.WR add BYTE PTR [rbx+0x45],r10b
  404af9:	pop    rdi
  404afa:	push   rax
  404afb:	push   rdx
  404afc:	rex.WRXB push r14
  404afe:	rex.WB
  404aff:	rex.R
  404b00:	rex.RB push r10
  404b02:	pop    rdi
  404b03:	rex.R
  404b04:	rex.RB
  404b05:	rex.RX
  404b06:	rex.WB
  404b07:	rex.WRX
  404b08:	rex.RB
  404b09:	rex.R pop rdi
  404b0b:	rex.WRXB
  404b0c:	rex.X
  404b0d:	rex.WX
  404b0e:	rex.RB
  404b0f:	rex.XB push r12
  404b11:	add    BYTE PTR [rbx+0x45],dl
  404b14:	pop    rdi
  404b15:	push   rdi
  404b16:	rex.WRB
  404b17:	rex.WB
  404b18:	rex.RXB push r13
  404b1a:	rex.WB
  404b1b:	rex.R pop rdi
  404b1d:	rex.WRXB
  404b1e:	rex.X
  404b1f:	rex.WX
  404b20:	rex.RB
  404b21:	rex.XB push r12
  404b23:	add    BYTE PTR [rbx+0x45],dl
  404b26:	pop    rdi
  404b27:	push   rdx
  404b28:	rex.RB
  404b29:	rex.RXB
  404b2a:	rex.WB push r11
  404b2c:	push   rsp
  404b2d:	push   rdx
  404b2e:	pop    rcx
  404b2f:	pop    rdi
  404b30:	push   rdi
  404b31:	rex.WRXB push r15
  404b33:	ss xor al,0x5f
  404b36:	xor    esi,DWORD PTR [rdx]
  404b38:	rex.WXB
  404b39:	rex.RB pop r9
  404b3b:	add    BYTE PTR [rcx+0x63],al
  404b3e:	ins    BYTE PTR es:[rdi],dx
  404b3f:	push   rdx
  404b40:	gs jbe 0x404bac
  404b43:	jae    0x404bae
  404b45:	outs   dx,DWORD PTR ds:[rsi]
  404b46:	outs   dx,BYTE PTR ds:[rsi]
  404b47:	add    BYTE PTR [rbx+0x62],dl
  404b4a:	jp     0x404b7d
  404b4c:	add    BYTE PTR [rcx+0x63],al
  404b4f:	ins    BYTE PTR es:[rdi],dx
  404b50:	push   rbx
  404b51:	imul   edi,DWORD PTR [rdx+0x65],0x65634100
  404b58:	rex.XB outs dx,DWORD PTR ds:[rsi]
  404b5a:	jne    0x404bca
  404b5c:	je     0x404b5e
  404b5e:	push   rbx
  404b5f:	(bad)  
  404b60:	jp     0x404b94
  404b62:	add    BYTE PTR [rcx+0x63],al
  404b65:	ins    BYTE PTR es:[rdi],dx
  404b66:	rex.X jns 0x404bdd
  404b69:	gs jae 0x404bb5
  404b6c:	outs   dx,BYTE PTR ds:[rsi]
  404b6d:	push   rbp
  404b6e:	jae    0x404bd5
  404b70:	add    BYTE PTR [rcx+0x63],al
  404b73:	ins    BYTE PTR es:[rdi],dx
  404b74:	rex.X jns 0x404beb
  404b77:	gs jae 0x404bc0
  404b7a:	jb     0x404be1
  404b7c:	add    BYTE PTR gs:[rcx+0x63],al
  404b80:	ins    BYTE PTR es:[rdi],dx
  404b81:	push   rdx
  404b82:	gs jbe 0x404bee
  404b85:	jae    0x404bf0
  404b87:	outs   dx,DWORD PTR ds:[rsi]
  404b88:	outs   dx,BYTE PTR ds:[rsi]
  404b89:	rex.WB outs dx,BYTE PTR ds:[rsi]
  404b8b:	outs   dx,WORD PTR ds:[rsi]
  404b8d:	jb     0x404bfc
  404b8f:	(bad)  
  404b90:	je     0x404bfb
  404b92:	outs   dx,DWORD PTR ds:[rsi]
  404b93:	outs   dx,BYTE PTR ds:[rsi]
  404b94:	add    BYTE PTR [rcx+0x63],al
  404b97:	ins    BYTE PTR es:[rdi],dx
  404b98:	push   rbx
  404b99:	imul   edi,DWORD PTR [rdx+0x65],0x6f666e49
  404ba0:	jb     0x404c0f
  404ba2:	(bad)  
  404ba3:	je     0x404c0e
  404ba5:	outs   dx,DWORD PTR ds:[rsi]
  404ba6:	outs   dx,BYTE PTR ds:[rsi]
  404ba7:	add    BYTE PTR [rdx+0x65],dl
  404baa:	addr32 rex.WRXB jo 0x404c13
  404bae:	outs   dx,BYTE PTR ds:[rsi]
  404baf:	rex.WXB
  404bb0:	gs jns 0x404bf8
  404bb3:	js     0x404bb5
  404bb5:	push   rdx
  404bb6:	gs addr32 rex.XB jb 0x404c20
  404bbb:	(bad)  
  404bbc:	je     0x404c23
  404bbe:	rex.WXB
  404bbf:	gs jns 0x404c07
  404bc2:	js     0x404bc4
  404bc4:	push   rdx
  404bc5:	gs addr32 push rbx
  404bc8:	gs je  0x404c16
  404bcb:	gs jns 0x404c21
  404bce:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  404bd2:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43676552
  404bda:	ins    BYTE PTR es:[rdi],dx
  404bdb:	outs   dx,DWORD PTR ds:[rsi]
  404bdc:	jae    0x404c43
  404bde:	rex.WXB
  404bdf:	gs jns 0x404be2
  404be2:	push   rbx
  404be3:	jns    0x404c58
  404be5:	je     0x404c4c
  404be7:	ins    DWORD PTR es:[rdi],dx
  404be8:	cs push rdx
  404bea:	jne    0x404c5a
  404bec:	je     0x404c57
  404bee:	ins    DWORD PTR es:[rdi],dx
  404bef:	gs rex.WB outs dx,BYTE PTR cs:[rsi]
  404bf3:	je     0x404c5a
  404bf5:	jb     0x404c66
  404bf7:	jo     0x404c4c
  404bf9:	gs jb  0x404c72
  404bfc:	imul   esp,DWORD PTR [rbx+0x65],0x61530073
  404c03:	data16 gs rex.W (bad) 
  404c07:	outs   dx,BYTE PTR ds:[rsi]
  404c08:	fs ins BYTE PTR es:[rdi],dx
  404c0a:	add    BYTE PTR gs:[rdi+0x65],al
  404c0e:	je     0x404c63
  404c10:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  404c14:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
  404c1c:	rex.RXB
  404c1d:	gs je  0x404c73
  404c20:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  404c24:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
  404c2c:	imul   esi,DWORD PTR [rax+0x74],0x654c726f
  404c33:	outs   dx,BYTE PTR ds:[rsi]
  404c34:	addr32 je 0x404c9f
  404c37:	add    BYTE PTR [rdi+rbp*2+0x63],cl
  404c3b:	(bad)  
  404c3c:	ins    BYTE PTR es:[rdi],dx
  404c3d:	rex.RX jb 0x404ca5
  404c40:	add    BYTE PTR gs:[rbx+0x65],dl
  404c44:	je     0x404c99
  404c46:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  404c4a:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
  404c52:	push   rbx
  404c53:	gs je  0x404ca9
  404c56:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  404c5a:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
  404c62:	imul   esi,DWORD PTR [rax+0x74],0x6f43726f
  404c69:	outs   dx,BYTE PTR ds:[rsi]
  404c6a:	je     0x404cde
  404c6c:	outs   dx,DWORD PTR ds:[rsi]
  404c6d:	ins    BYTE PTR es:[rdi],dx
  404c6e:	add    BYTE PTR [rbp+riz*2+0x6c],al
  404c72:	gs je  0x404cda
  404c75:	movsxd esp,DWORD PTR [r13+0x0]
  404c79:	rex.RXB
  404c7a:	gs je  0x404cbe
  404c7d:	movsxd ebp,DWORD PTR [rcx+rcx*2+0x6e]
  404c81:	outs   dx,WORD PTR ds:[rsi]
  404c83:	jb     0x404cf2
  404c85:	(bad)  
  404c86:	je     0x404cf1
  404c88:	outs   dx,DWORD PTR ds:[rsi]
  404c89:	outs   dx,BYTE PTR ds:[rsi]
  404c8a:	add    BYTE PTR [rsi+0x6f],al
  404c8d:	jb     0x404cfc
  404c8f:	(bad)  
  404c90:	je     0x404cdf
  404c92:	gs jae 0x404d08
  404c95:	(bad)  
  404c96:	add    BYTE PTR gs:[edx+0x65],dl
  404c9b:	ins    BYTE PTR es:[rdi],dx
  404c9c:	gs (bad) 
  404c9e:	jae    0x404d05
  404ca0:	rex.W (bad) 
  404ca2:	outs   dx,BYTE PTR ds:[rsi]
  404ca3:	fs ins BYTE PTR es:[rdi],dx
  404ca5:	add    BYTE PTR gs:[rbp+0x78],al
  404ca9:	movsxd esp,DWORD PTR [rbp+0x70]
  404cac:	je     0x404d17
  404cae:	outs   dx,DWORD PTR ds:[rsi]
  404caf:	outs   dx,BYTE PTR ds:[rsi]
  404cb0:	add    BYTE PTR [rbp+0x78],al
  404cb3:	movsxd esp,DWORD PTR [rbp+0x70]
  404cb6:	je     0x404d21
  404cb8:	outs   dx,DWORD PTR ds:[rsi]
  404cb9:	outs   dx,BYTE PTR ds:[rsi]
  404cba:	rex.RX jb 0x404d2c
  404cbd:	ins    DWORD PTR es:[rdi],dx
  404cbe:	rex.WR (bad) 
  404cc0:	jae    0x404d36
  404cc2:	rex.RB jb 0x404d37
  404cc5:	outs   dx,DWORD PTR ds:[rsi]
  404cc6:	jb     0x404cc8
  404cc8:	rex.RB js 0x404d2e
  404ccb:	gs jo  0x404d42
  404cce:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d6f7246
  404cd5:	push   rdi
  404cd6:	imul   ebp,DWORD PTR [rsi+0x33],0x72724532
  404cdd:	outs   dx,DWORD PTR ds:[rsi]
  404cde:	jb     0x404ce0
  404ce0:	rex.RXB
  404ce1:	gs je  0x404d31
  404ce4:	gs jae 0x404d5a
  404ce7:	(bad)  
  404ce8:	add    BYTE PTR gs:[ebx+0x6f],al
  404ced:	ins    DWORD PTR es:[rdi],dx
  404cee:	push   rsi
  404cef:	imul   esi,DWORD PTR [rbx+0x69],0x41656c62
  404cf6:	je     0x404d6c
  404cf8:	jb     0x404d63
  404cfa:	(bad)  
  404cfb:	jne    0x404d71
  404cfd:	add    BYTE PTR gs:[rbx+0x79],dl
  404d01:	jae    0x404d77
  404d03:	gs ins DWORD PTR es:[rdi],dx
  404d05:	cs push rdx
  404d07:	gs data16 ins BYTE PTR es:[rdi],dx
  404d0a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  404d0f:	outs   dx,BYTE PTR ds:[rsi]
  404d10:	add    BYTE PTR [rcx+0x73],al
  404d13:	jae    0x404d7a
  404d15:	ins    DWORD PTR es:[rdi],dx
  404d16:	(bad)  
  404d17:	ins    BYTE PTR es:[rdi],dx
  404d18:	jns    0x404d5d
  404d1a:	outs   dx,DWORD PTR ds:[rsi]
  404d1b:	outs   dx,BYTE PTR ds:[rsi]
  404d1c:	imul   sp,WORD PTR [rdi+0x75],0x6172
  404d22:	je     0x404d8d
  404d24:	outs   dx,DWORD PTR ds:[rsi]
  404d25:	outs   dx,BYTE PTR ds:[rsi]
  404d26:	rex.B je 0x404d9d
  404d29:	jb     0x404d94
  404d2b:	(bad)  
  404d2c:	jne    0x404da2
  404d2e:	add    BYTE PTR gs:[rcx+0x73],al
  404d32:	jae    0x404d99
  404d34:	ins    DWORD PTR es:[rdi],dx
  404d35:	(bad)  
  404d36:	ins    BYTE PTR es:[rdi],dx
  404d37:	jns    0x404d7d
  404d39:	gs jae 0x404d9f
  404d3c:	jb     0x404da7
  404d3e:	jo     0x404db4
  404d40:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747441
  404d47:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  404d4e:	jae    0x404dc3
  404d50:	gs ins DWORD PTR es:[rdi],dx
  404d52:	(bad)  
  404d53:	ins    BYTE PTR es:[rdi],dx
  404d54:	jns    0x404daa
  404d56:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x72747441
  404d5e:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  404d65:	jae    0x404dda
  404d67:	gs ins DWORD PTR es:[rdi],dx
  404d69:	(bad)  
  404d6a:	ins    BYTE PTR es:[rdi],dx
  404d6b:	jns    0x404db6
  404d6d:	outs   dx,BYTE PTR ds:[rsi]
  404d6e:	outs   dx,WORD PTR ds:[rsi]
  404d70:	jb     0x404ddf
  404d72:	(bad)  
  404d73:	je     0x404dde
  404d75:	outs   dx,DWORD PTR ds:[rsi]
  404d76:	outs   dx,BYTE PTR ds:[rsi]
  404d77:	(bad)  
  404d78:	ins    BYTE PTR es:[rdi],dx
  404d79:	push   rsi
  404d7a:	gs jb  0x404df0
  404d7d:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747441
  404d84:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  404d8b:	jae    0x404e00
  404d8d:	gs ins DWORD PTR es:[rdi],dx
  404d8f:	(bad)  
  404d90:	ins    BYTE PTR es:[rdi],dx
  404d91:	jns    0x404dd9
  404d93:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
  404d9b:	outs   dx,DWORD PTR ds:[rsi]
  404d9c:	outs   dx,BYTE PTR ds:[rsi]
  404d9d:	rex.B je 0x404e14
  404da0:	jb     0x404e0b
  404da2:	(bad)  
  404da3:	jne    0x404e19
  404da5:	add    BYTE PTR gs:[rcx+0x73],al
  404da9:	jae    0x404e10
  404dab:	ins    DWORD PTR es:[rdi],dx
  404dac:	(bad)  
  404dad:	ins    BYTE PTR es:[rdi],dx
  404dae:	jns    0x404e06
  404db0:	gs jb  0x404e26
  404db3:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747441
  404dba:	imul   esp,DWORD PTR [rdx+0x75],0x41006574
  404dc1:	jae    0x404e36
  404dc3:	gs ins DWORD PTR es:[rdi],dx
  404dc5:	(bad)  
  404dc6:	ins    BYTE PTR es:[rdi],dx
  404dc7:	jns    0x404e1d
  404dc9:	jb     0x404e2c
  404dcb:	fs gs ins DWORD PTR es:[rdi],dx
  404dce:	(bad)  
  404dcf:	jb     0x404e3c
  404dd1:	rex.B je 0x404e48
  404dd4:	jb     0x404e3f
  404dd6:	(bad)  
  404dd7:	jne    0x404e4d
  404dd9:	add    BYTE PTR gs:[rcx+0x73],al
  404ddd:	jae    0x404e44
  404ddf:	ins    DWORD PTR es:[rdi],dx
  404de0:	(bad)  
  404de1:	ins    BYTE PTR es:[rdi],dx
  404de2:	jns    0x404e27
  404de4:	outs   dx,DWORD PTR ds:[rsi]
  404de5:	jo     0x404e60
  404de7:	jb     0x404e52
  404de9:	addr32 push 0x74744174
  404def:	jb     0x404e5a
  404df1:	(bad)  
  404df2:	jne    0x404e68
  404df4:	add    BYTE PTR gs:[rcx+0x73],al
  404df8:	jae    0x404e5f
  404dfa:	ins    DWORD PTR es:[rdi],dx
  404dfb:	(bad)  
  404dfc:	ins    BYTE PTR es:[rdi],dx
  404dfd:	jns    0x404e4f
  404dff:	jb     0x404e70
  404e01:	fs jne 0x404e67
  404e04:	je     0x404e47
  404e06:	je     0x404e7c
  404e08:	jb     0x404e73
  404e0a:	(bad)  
  404e0b:	jne    0x404e81
  404e0d:	add    BYTE PTR gs:[rcx+0x73],al
  404e11:	jae    0x404e78
  404e13:	ins    DWORD PTR es:[rdi],dx
  404e14:	(bad)  
  404e15:	ins    BYTE PTR es:[rdi],dx
  404e16:	jns    0x404e5b
  404e18:	outs   dx,DWORD PTR ds:[rsi]
  404e19:	ins    DWORD PTR es:[rdi],dx
  404e1a:	jo     0x404e7d
  404e1c:	outs   dx,BYTE PTR ds:[rsi]
  404e1d:	jns    0x404e60
  404e1f:	je     0x404e95
  404e21:	jb     0x404e8c
  404e23:	(bad)  
  404e24:	jne    0x404e9a
  404e26:	add    BYTE PTR gs:[rbx+0x79],dl
  404e2a:	jae    0x404ea0
  404e2c:	gs ins DWORD PTR es:[rdi],dx
  404e2e:	imul   r12d,DWORD PTR cs:[rcx+0x67],0x74736f6e
  404e37:	imul   esp,DWORD PTR [rbx+0x73],0x62654400
  404e3e:	jne    0x404ea7
  404e40:	addr32 (bad) 
  404e42:	(bad)  
  404e43:	ins    BYTE PTR es:[rdi],dx
  404e44:	gs rex.B je 0x404ebc
  404e48:	jb     0x404eb3
  404e4a:	(bad)  
  404e4b:	jne    0x404ec1
  404e4d:	add    BYTE PTR gs:[rbp+riz*2+0x62],al
  404e52:	jne    0x404ebb
  404e54:	imul   ebp,DWORD PTR [esi+0x67],0x65646f4d
  404e5c:	jae    0x404e5e
  404e5e:	push   rbx
  404e5f:	jns    0x404ed4
  404e61:	je     0x404ec8
  404e63:	ins    DWORD PTR es:[rdi],dx
  404e64:	cs push rdx
  404e66:	jne    0x404ed6
  404e68:	je     0x404ed3
  404e6a:	ins    DWORD PTR es:[rdi],dx
  404e6b:	gs rex.XB outs dx,DWORD PTR cs:[rsi]
  404e6f:	ins    DWORD PTR es:[rdi],dx
  404e70:	jo     0x404edb
  404e72:	ins    BYTE PTR es:[rdi],dx
  404e73:	gs jb  0x404ec9
  404e76:	gs jb  0x404eef
  404e79:	imul   esp,DWORD PTR [rbx+0x65],0x6f430073
  404e80:	ins    DWORD PTR es:[rdi],dx
  404e81:	jo     0x404eec
  404e83:	ins    BYTE PTR es:[rdi],dx
  404e84:	(bad)  
  404e85:	je     0x404ef0
  404e87:	outs   dx,DWORD PTR ds:[rsi]
  404e88:	outs   dx,BYTE PTR ds:[rsi]
  404e89:	push   rdx
  404e8a:	gs ins BYTE PTR es:[rdi],dx
  404e8c:	(bad)  
  404e8d:	js     0x404ef0
  404e8f:	je     0x404efa
  404e91:	outs   dx,DWORD PTR ds:[rsi]
  404e92:	outs   dx,BYTE PTR ds:[rsi]
  404e93:	jae    0x404ed6
  404e95:	je     0x404f0b
  404e97:	jb     0x404f02
  404e99:	(bad)  
  404e9a:	jne    0x404f10
  404e9c:	add    BYTE PTR gs:[rdx+0x75],dl
  404ea0:	outs   dx,BYTE PTR ds:[rsi]
  404ea1:	je     0x404f0c
  404ea3:	ins    DWORD PTR es:[rdi],dx
  404ea4:	rex.XB outs dx,DWORD PTR gs:[rsi]
  404ea7:	ins    DWORD PTR es:[rdi],dx
  404ea8:	jo     0x404f0b
  404eaa:	je     0x404f15
  404eac:	(bad)  
  404ead:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x74744179
  404eb5:	jb     0x404f20
  404eb7:	(bad)  
  404eb8:	jne    0x404f2e
  404eba:	add    BYTE PTR gs:[rsi+0x69],al
  404ebe:	js     0x404f13
  404ec0:	jno    0x404f2e
  404ec2:	push   rdx
  404ec3:	imul   esi,DWORD PTR gs:[ebx+0x74],0x654b7972
  404ecc:	jns    0x404ece
  404ece:	rex.XB outs dx,DWORD PTR ds:[rsi]
  404ed0:	ins    DWORD PTR es:[rdi],dx
  404ed1:	jo     0x404f3c
  404ed3:	ins    BYTE PTR es:[rdi],dx
  404ed4:	gs jb  0x404f1e
  404ed7:	outs   dx,BYTE PTR gs:[rsi]
  404ed9:	gs jb  0x404f3d
  404edc:	je     0x404f43
  404ede:	fs rex.B je 0x404f56
  404ee2:	jb     0x404f4d
  404ee4:	(bad)  
  404ee5:	jne    0x404f5b
  404ee7:	add    BYTE PTR gs:[rsi+0x61],dh
  404eeb:	ins    BYTE PTR es:[rdi],dx
  404eec:	jne    0x404f53
  404eee:	add    BYTE PTR [rbx+0x65],ch
  404ef1:	jns    0x404f41
  404ef3:	(bad)  
  404ef4:	ins    DWORD PTR es:[rdi],dx
  404ef5:	add    BYTE PTR gs:[rbx+0x75],dh
  404ef9:	(bad)  
  404efa:	rex.WXB
  404efb:	gs jns 0x404f4c
  404efe:	(bad)  
  404eff:	ins    DWORD PTR es:[rdi],dx
  404f00:	add    BYTE PTR gs:[rbp+0x72],ah
  404f04:	jb     0x404f75
  404f06:	jb     0x404f08
  404f08:	rex.WB outs dx,BYTE PTR ds:[rsi]
  404f0a:	je     0x404f3f
  404f0c:	xor    al,BYTE PTR [rax]
  404f0e:	imul   esp,DWORD PTR [rbp+0x79],0x0
  404f12:	(bad)  
  404f13:	jb     0x404f7c
  404f15:	xor    BYTE PTR [rax],al
  404f17:	addr32 gs je 0x404f7a
  404f1b:	rex.XB jne 0x404f90
  404f1e:	jb     0x404f85
  404f20:	outs   dx,BYTE PTR ds:[rsi]
  404f21:	je     0x404f66
  404f23:	jne    0x404f91
  404f25:	je     0x404f9c
  404f27:	jb     0x404f8e
  404f29:	add    BYTE PTR [rbx+0x74],dl
  404f2c:	jb     0x404f97
  404f2e:	outs   dx,BYTE PTR ds:[rsi]
  404f2f:	add    BYTE PTR [ecx+0x46],cl
  404f33:	outs   dx,DWORD PTR ds:[rsi]
  404f34:	jb     0x404fa3
  404f36:	(bad)  
  404f37:	je     0x404f89
  404f39:	jb     0x404faa
  404f3b:	jbe    0x404fa6
  404f3d:	fs gs jb 0x404f41
  404f41:	rex.RX outs dx,DWORD PTR ds:[rsi]
  404f43:	jb     0x404fb2
  404f45:	(bad)  
  404f46:	je     0x404f48
  404f48:	(bad)  
  404f49:	jb     0x404fb2
  404f4b:	xor    DWORD PTR [rax],eax
  404f4d:	movsxd esp,DWORD PTR cs:[rbx+0x74]
  404f51:	outs   dx,DWORD PTR ds:[rsi]
  404f52:	jb     0x404f54
  404f54:	push   rsp
  404f55:	jns    0x404fc7
  404f57:	add    BYTE PTR gs:[rdx+0x75],dl
  404f5b:	outs   dx,BYTE PTR ds:[rsi]
  404f5c:	je     0x404fc7
  404f5e:	ins    DWORD PTR es:[rdi],dx
  404f5f:	gs push rsp
  404f61:	jns    0x404fd3
  404f63:	gs rex.W (bad) 
  404f66:	outs   dx,BYTE PTR ds:[rsi]
  404f67:	fs ins BYTE PTR es:[rdi],dx
  404f69:	add    BYTE PTR gs:[rdi+0x65],al
  404f6d:	je     0x404fc3
  404f6f:	jns    0x404fe1
  404f71:	gs rex.RX jb 0x404fe4
  404f75:	ins    DWORD PTR es:[rdi],dx
  404f76:	rex.W (bad) 
  404f78:	outs   dx,BYTE PTR ds:[rsi]
  404f79:	fs ins BYTE PTR es:[rdi],dx
  404f7b:	add    BYTE PTR gs:[rdi+0x65],ah
  404f7f:	je     0x404fe0
  404f81:	rex.RX jne 0x404ff0
  404f84:	ins    BYTE PTR es:[rdi],dx
  404f85:	rex.WRX (bad) 
  404f87:	ins    DWORD PTR es:[rdi],dx
  404f88:	add    BYTE PTR gs:[rbp+0x6f],cl
  404f8c:	fs jne 0x404ffb
  404f8f:	add    BYTE PTR gs:[rdi+0x65],ah
  404f93:	je     0x404ff4
  404f95:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  404f97:	fs jne 0x405006
  404f9a:	add    BYTE PTR gs:[rcx+0x73],al
  404f9e:	jae    0x405005
  404fa0:	ins    DWORD PTR es:[rdi],dx
  404fa1:	(bad)  
  404fa2:	ins    BYTE PTR es:[rdi],dx
  404fa3:	jns    0x404fa5
  404fa5:	addr32 gs je 0x405008
  404fa9:	rex.B jae 0x40501f
  404fac:	gs ins DWORD PTR es:[rdi],dx
  404fae:	(bad)  
  404faf:	ins    BYTE PTR es:[rdi],dx
  404fb0:	jns    0x404fb2
  404fb2:	(bad)  
  404fb3:	jb     0x40501c
  404fb5:	jae    0x404fb7
  404fb7:	push   rbx
  404fb8:	je     0x40502c
  404fba:	imul   ebp,DWORD PTR [rsi+0x67],0x706d6f43
  404fc1:	(bad)  
  404fc2:	jb     0x40502d
  404fc4:	jae    0x405035
  404fc6:	outs   dx,BYTE PTR ds:[rsi]
  404fc7:	add    BYTE PTR [rbx+0x6f],al
  404fca:	ins    DWORD PTR es:[rdi],dx
  404fcb:	jo     0x40502e
  404fcd:	jb     0x405034
  404fcf:	add    BYTE PTR [rbx+0x6f],al
  404fd2:	outs   dx,BYTE PTR ds:[rsi]
  404fd3:	jae    0x405044
  404fd5:	ins    BYTE PTR es:[rdi],dx
  404fd6:	add    BYTE PTR gs:[rdi+0x72],dl
  404fda:	imul   esi,DWORD PTR [rbp+riz*2+0x4c],0x656e69
  404fe2:	push   rdx
  404fe3:	imul   esi,DWORD PTR gs:[ebx+0x74],0x4c007972
  404fec:	outs   dx,DWORD PTR ds:[rsi]
  404fed:	movsxd esp,DWORD PTR [rcx+0x6c]
  404ff0:	rex.WRB (bad) 
  404ff2:	movsxd ebp,DWORD PTR [rax+0x69]
  404ff5:	outs   dx,BYTE PTR ds:[rsi]
  404ff6:	add    BYTE PTR gs:[rdi+0x70],cl
  404ffa:	outs   dx,BYTE PTR gs:[rsi]
  404ffc:	push   rbx
  404ffd:	jne    0x405061
  404fff:	rex.WXB
  405000:	gs jns 0x405003
  405003:	rex.WB
  405004:	imul   r14d,DWORD PTR [rbx+0x70],0x6261736f
  40500c:	ins    BYTE PTR es:[rdi],dx
  40500d:	add    BYTE PTR gs:[rcx+rbp*2+0x73],al
  405012:	jo     0x405083
  405014:	jae    0x40507b
  405016:	add    BYTE PTR [rdi+0x65],ah
  405019:	je     0x40507a
  40501b:	rex.WRX (bad) 
  40501d:	ins    DWORD PTR es:[rdi],dx
  40501e:	add    BYTE PTR gs:[rdi+rbp*2+0x53],dl
  405023:	je     0x405097
  405025:	imul   ebp,DWORD PTR [rsi+0x67],0x74654700
  40502c:	push   rbx
  40502d:	jne    0x405091
  40502f:	rex.WXB
  405030:	gs jns 0x405081
  405033:	(bad)  
  405034:	ins    DWORD PTR es:[rdi],dx
  405035:	gs jae 0x405038
  405038:	push   rbx
  405039:	jns    0x4050ae
  40503b:	je     0x4050a2
  40503d:	ins    DWORD PTR es:[rdi],dx
  40503e:	cs push rbx
  405040:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  405044:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x75636553
  40504c:	jb     0x4050b7
  40504e:	je     0x4050c9
  405050:	rex.RB js 0x4050b6
  405053:	gs jo  0x4050ca
  405056:	imul   ebp,DWORD PTR [rdi+0x6e],0x746e4900
  40505d:	push   rax
  40505e:	je     0x4050d2
  405060:	add    BYTE PTR [rdx+0x65],bl
  405063:	jb     0x4050d4
  405065:	add    BYTE PTR [rax+0x53],dh
  405068:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  40506c:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
  405074:	imul   esi,DWORD PTR [rax+0x74],0x4200726f
  40507b:	jns    0x4050f1
  40507d:	add    BYTE PTR gs:[rbp+0x61],cl
  405081:	jb     0x4050f6
  405083:	push   0x43006c61
  405088:	outs   dx,DWORD PTR ds:[rsi]
  405089:	jo     0x405104
  40508b:	add    BYTE PTR [rax+0x61],ch
  40508e:	outs   dx,BYTE PTR ds:[rsi]
  40508f:	fs ins BYTE PTR es:[rdi],dx
  405091:	add    BYTE PTR gs:[rbx+0x65],dh
  405095:	movsxd esi,DWORD PTR [rbp+0x72]
  405098:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
  4050a0:	imul   esi,DWORD PTR [rax+0x74],0x5300726f
  4050a7:	jns    0x40511c
  4050a9:	je     0x405110
  4050ab:	ins    DWORD PTR es:[rdi],dx
  4050ac:	cs push rbx
  4050ae:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  4050b2:	imul   esi,DWORD PTR [rcx+rdi*2+0x2e],0x65636341
  4050ba:	jae    0x40512f
  4050bc:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4050be:	outs   dx,BYTE PTR ds:[rsi]
  4050bf:	je     0x405133
  4050c1:	outs   dx,DWORD PTR ds:[rsi]
  4050c2:	ins    BYTE PTR es:[rdi],dx
  4050c3:	add    BYTE PTR [rbx+0x6f],al
  4050c6:	ins    DWORD PTR es:[rdi],dx
  4050c7:	ins    DWORD PTR es:[rdi],dx
  4050c8:	outs   dx,DWORD PTR ds:[rsi]
  4050c9:	outs   dx,BYTE PTR ds:[rsi]
  4050ca:	push   rbx
  4050cb:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  4050cf:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
  4050d7:	imul   esi,DWORD PTR [rax+0x74],0x4400726f
  4050de:	imul   esi,DWORD PTR [rbx+0x63],0x69746572
  4050e5:	outs   dx,DWORD PTR ds:[rsi]
  4050e6:	outs   dx,BYTE PTR ds:[rsi]
  4050e7:	(bad)  
  4050e8:	jb     0x405163
  4050ea:	movsxd ebp,DWORD PTR [r8+rax*1+0x67]
  4050ef:	gs je  0x405151
  4050f2:	imul   r14d,DWORD PTR [rbx+0x63],0x69746572
  4050fa:	outs   dx,DWORD PTR ds:[rsi]
  4050fb:	outs   dx,BYTE PTR ds:[rsi]
  4050fc:	(bad)  
  4050fd:	jb     0x405178
  4050ff:	movsxd ebp,DWORD PTR [r8+rax*1+0x47]
  405104:	outs   dx,BYTE PTR gs:[rsi]
  405106:	gs jb  0x405172
  405109:	movsxd eax,DWORD PTR [rcx+0x63]
  40510c:	ins    BYTE PTR es:[rdi],dx
  40510d:	add    BYTE PTR [rdi+0x65],ah
  405110:	je     0x405171
  405112:	rex.XB outs dx,DWORD PTR ds:[rsi]
  405114:	jne    0x405184
  405116:	je     0x405118
  405118:	rex.RXB
  405119:	outs   dx,BYTE PTR gs:[rsi]
  40511b:	gs jb  0x405187
  40511e:	movsxd eax,DWORD PTR [rcx+0x63]
  405121:	add    BYTE PTR gs:[rdi+0x65],ah
  405125:	je     0x405186
  405127:	rex.WB je 0x40518f
  40512a:	ins    DWORD PTR es:[rdi],dx
  40512b:	add    BYTE PTR [rbx+0x6f],al
  40512e:	ins    DWORD PTR es:[rdi],dx
  40512f:	ins    DWORD PTR es:[rdi],dx
  405130:	outs   dx,DWORD PTR ds:[rsi]
  405131:	outs   dx,BYTE PTR ds:[rsi]
  405132:	movsxd esp,DWORD PTR [r13+0x0]
  405136:	movsxd esp,DWORD PTR [r13+0x54]
  40513a:	jns    0x4051ac
  40513c:	add    BYTE PTR gs:[rdi+0x65],ah
  405140:	je     0x4051a1
  405142:	movsxd esp,DWORD PTR [r13+0x54]
  405146:	jns    0x4051b8
  405148:	add    BYTE PTR gs:[rcx+0x63],al
  40514c:	gs rex.RX ins BYTE PTR es:[rdi],dx
  40514f:	(bad)  
  405150:	addr32 jae 0x405153
  405153:	addr32 gs je 0x4051b6
  405157:	movsxd esp,DWORD PTR [r13+0x46]
  40515b:	ins    BYTE PTR es:[rdi],dx
  40515c:	(bad)  
  40515d:	addr32 jae 0x405160
  405160:	rex.WXB outs dx,BYTE PTR ds:[rsi]
  405162:	outs   dx,DWORD PTR ds:[rsi]
  405163:	ja     0x4051d3
  405165:	movsxd esp,DWORD PTR [r13+0x0]
  405169:	push   rbx
  40516a:	jns    0x4051df
  40516c:	je     0x4051d3
  40516e:	ins    DWORD PTR es:[rdi],dx
  40516f:	cs push rbx
  405171:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  405175:	imul   esi,DWORD PTR [rcx+rdi*2+0x2e],0x6e697250
  40517d:	movsxd ebp,DWORD PTR [rcx+0x70]
  405180:	(bad)  
  405181:	ins    BYTE PTR es:[rdi],dx
  405182:	add    BYTE PTR [rbx+0x65],dl
  405185:	movsxd esi,DWORD PTR [rbp+0x72]
  405188:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x746e6564
  405190:	imul   esp,DWORD PTR [rsi+0x69],0x67007265
  405197:	gs je  0x4051f9
  40519a:	push   rbx
  40519b:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  40519f:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x746e6564
  4051a7:	imul   esp,DWORD PTR [rsi+0x69],0x67007265
  4051ae:	gs je  0x405210
  4051b1:	movsxd esp,DWORD PTR [r11+0x65]
  4051b5:	jae    0x40522a
  4051b7:	rex.WRB (bad) 
  4051b9:	jae    0x405226
  4051bb:	add    BYTE PTR [rcx+0x6e],cl
  4051be:	push   0x74697265
  4051c3:	(bad)  
  4051c4:	outs   dx,BYTE PTR ds:[rsi]
  4051c5:	movsxd esp,DWORD PTR [rbp+0x46]
  4051c8:	ins    BYTE PTR es:[rdi],dx
  4051c9:	(bad)  
  4051ca:	addr32 jae 0x4051cd
  4051cd:	addr32 gs je 0x405230
  4051d1:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4051d3:	push   0x74697265
  4051d8:	(bad)  
  4051d9:	outs   dx,BYTE PTR ds:[rsi]
  4051da:	movsxd esp,DWORD PTR [rbp+0x46]
  4051dd:	ins    BYTE PTR es:[rdi],dx
  4051de:	(bad)  
  4051df:	addr32 jae 0x4051e2
  4051e2:	push   rax
  4051e3:	jb     0x405254
  4051e5:	jo     0x405248
  4051e7:	addr32 (bad) 
  4051e9:	je     0x405254
  4051eb:	outs   dx,DWORD PTR ds:[rsi]
  4051ec:	outs   dx,BYTE PTR ds:[rsi]
  4051ed:	rex.RX ins BYTE PTR es:[rdi],dx
  4051ef:	(bad)  
  4051f0:	addr32 jae 0x4051f3
  4051f3:	addr32 gs je 0x405256
  4051f7:	push   rax
  4051f8:	jb     0x405269
  4051fa:	jo     0x40525d
  4051fc:	addr32 (bad) 
  4051fe:	je     0x405269
  405200:	outs   dx,DWORD PTR ds:[rsi]
  405201:	outs   dx,BYTE PTR ds:[rsi]
  405202:	rex.RX ins BYTE PTR es:[rdi],dx
  405204:	(bad)  
  405205:	addr32 jae 0x405208
  405208:	movsxd esp,DWORD PTR [r11+0x65]
  40520c:	jae    0x405281
  40520e:	rex.XB outs dx,DWORD PTR ds:[rsi]
  405210:	outs   dx,BYTE PTR ds:[rsi]
  405211:	je     0x405285
  405213:	outs   dx,DWORD PTR ds:[rsi]
  405214:	ins    BYTE PTR es:[rdi],dx
  405215:	push   rsp
  405216:	jns    0x405288
  405218:	add    BYTE PTR gs:[rcx+0x64],al
  40521c:	movsxd esp,DWORD PTR fs:[r11+0x65]
  405221:	jae    0x405296
  405223:	add    BYTE PTR [rcx+0x70],al
  405226:	jo     0x405294
  405228:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40522f:	rex.RB js 0x405295
  405232:	gs jo  0x4052a9
  405235:	imul   ebp,DWORD PTR [rdi+0x6e],0x74656700
  40523c:	pop    rdi
  40523d:	rex.X imul ebp,DWORD PTR [rsi+0x61],0x654c7972
  405245:	outs   dx,BYTE PTR ds:[rsi]
  405246:	addr32 je 0x4052b1
  405249:	add    BYTE PTR [rdi+0x65],al
  40524c:	je     0x405290
  40524e:	imul   ebp,DWORD PTR [rsi+0x61],0x6f467972
  405255:	jb     0x4052c4
  405257:	add    BYTE PTR [rcx+0x6c],al
  40525a:	ins    BYTE PTR es:[rdi],dx
  40525b:	outs   dx,DWORD PTR ds:[rsi]
  40525c:	movsxd ecx,DWORD PTR [rax+0x47]
  40525f:	ins    BYTE PTR es:[rdi],dx
  405260:	outs   dx,DWORD PTR ds:[rsi]
  405261:	(bad)
  405266:	jb     0x4052cd
  405268:	gs rex.W
  40526a:	rex.RXB ins BYTE PTR es:[rdi],dx
  40526c:	outs   dx,DWORD PTR ds:[rsi]
  40526d:	(bad)
  405272:	(bad)  
  405273:	ja     0x4052c8
  405275:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  405279:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
  405281:	imul   esi,DWORD PTR [rax+0x74],0x5200726f
  405288:	(bad)  
  405289:	ja     0x4052cc
  40528b:	movsxd ebp,DWORD PTR [rax+rax*1+0x67]
  40528f:	gs je  0x4052f1
  405292:	rex.WB jae 0x4052d9
  405295:	imul   esi,DWORD PTR [rbx+0x63],0x69746572
  40529c:	outs   dx,DWORD PTR ds:[rsi]
  40529d:	outs   dx,BYTE PTR ds:[rsi]
  40529e:	(bad)  
  40529f:	jb     0x40531a
  4052a1:	movsxd ebp,DWORD PTR [r11+rax*2+0x61]
  4052a6:	outs   dx,BYTE PTR ds:[rsi]
  4052a7:	outs   dx,DWORD PTR ds:[rsi]
  4052a8:	outs   dx,BYTE PTR ds:[rsi]
  4052a9:	imul   esp,DWORD PTR [rbx+0x61],0x7349006c
  4052b0:	rex.WRX jne 0x40531f
  4052b3:	ins    BYTE PTR es:[rdi],dx
  4052b4:	rex.WRXB jb 0x4052fc
  4052b7:	ins    DWORD PTR es:[rdi],dx
  4052b8:	jo     0x40532e
  4052ba:	jns    0x4052bc
  4052bc:	rex.B jb 0x405326
  4052bf:	jne    0x40532e
  4052c1:	outs   dx,BYTE PTR gs:[rsi]
  4052c3:	je     0x405313
  4052c5:	jne    0x405333
  4052c7:	ins    BYTE PTR es:[rdi],dx
  4052c8:	rex.RB js 0x40532e
  4052cb:	gs jo  0x405342
  4052ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x646e4900
  4052d5:	gs js  0x405327
  4052d8:	data16 add BYTE PTR [rbx+0x75],dl
  4052dc:	(bad)
  4052e1:	outs   dx,BYTE PTR ds:[rsi]
  4052e2:	add    BYTE PTR [edi+ebp*2+0x55],dl
  4052e7:	jo     0x405359
  4052e9:	gs jb  0x405335
  4052ec:	outs   dx,BYTE PTR ds:[rsi]
  4052ed:	jbe    0x405350
  4052ef:	jb     0x40535a
  4052f1:	(bad)  
  4052f2:	outs   dx,BYTE PTR ds:[rsi]
  4052f3:	je     0x4052f5
  4052f5:	outs   dx,DWORD PTR ds:[rsi]
  4052f6:	jo     0x405357
  4052f8:	rex.RB jno 0x405370
  4052fb:	(bad)  
  4052fc:	ins    BYTE PTR es:[rdi],dx
  4052fd:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x75677241
  405305:	ins    DWORD PTR es:[rdi],dx
  405306:	outs   dx,BYTE PTR gs:[rsi]
  405308:	je     0x40534f
  40530a:	js     0x40536f
  40530c:	gs jo  0x405383
  40530f:	imul   ebp,DWORD PTR [rdi+0x6e],0x706d4500
  405316:	je     0x405391
  405318:	add    BYTE PTR [rdi+0x65],ah
  40531b:	je     0x40537c
  40531d:	rex.WR
  40531e:	outs   dx,BYTE PTR gs:[rsi]
  405320:	addr32 je 0x40538b
  405323:	add    BYTE PTR [rdx+0x65],dh
  405326:	jae    0x40539d
  405328:	ins    BYTE PTR es:[rdi],dx
  405329:	je     0x40532b
  40532b:	push   rbx
  40532c:	je     0x4053a0
  40532e:	jne    0x405393
  405330:	je     0x40537e
  405332:	(bad)  
  405333:	jns    0x4053a4
  405335:	jne    0x4053ab
  405337:	rex.B je 0x4053ae
  40533a:	jb     0x4053a5
  40533c:	(bad)  
  40533d:	jne    0x4053b3
  40533f:	add    BYTE PTR gs:[rcx+riz*2+0x79],cl
  405344:	outs   dx,DWORD PTR ds:[rsi]
  405345:	jne    0x4053bb
  405347:	rex.WXB imul rbp,QWORD PTR [r14+0x64],0x6c6c4400
  40534f:	rex.WB ins DWORD PTR es:[rdi],dx
  405351:	jo     0x4053c2
  405353:	jb     0x4053c9
  405355:	rex.B je 0x4053cc
  405358:	jb     0x4053c3
  40535a:	(bad)  
  40535b:	jne    0x4053d1
  40535d:	add    BYTE PTR gs:[rcx+0x64],ah
  405361:	jbe    0x4053c4
  405363:	jo     0x4053ce
  405365:	xor    esi,DWORD PTR [rdx]
  405367:	cs fs ins BYTE PTR es:[rdi],dx
  40536a:	ins    BYTE PTR es:[rdi],dx
  40536b:	add    BYTE PTR [rdx+0x65],dl
  40536e:	addr32 rex.WRXB jo 0x4053d7
  405372:	outs   dx,BYTE PTR ds:[rsi]
  405373:	rex.WXB
  405374:	gs jns 0x4053bc
  405377:	js     0x4053d0
  405379:	add    BYTE PTR [rax+0x4b],ch
  40537c:	gs jns 0x40537f
  40537f:	ins    BYTE PTR es:[rdi],dx
  405380:	jo     0x4053d5
  405382:	jne    0x4053e6
  405384:	rex.WXB
  405385:	gs jns 0x405388
  405388:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40538a:	rex.B je 0x405401
  40538d:	jb     0x4053f8
  40538f:	(bad)  
  405390:	jne    0x405406
  405392:	add    BYTE PTR gs:[rbp+0x61],cl
  405396:	jb     0x40540b
  405398:	push   0x73416c61
  40539d:	rex.B je 0x405414
  4053a0:	jb     0x40540b
  4053a2:	(bad)  
  4053a3:	jne    0x405419
  4053a5:	add    BYTE PTR gs:[rbp+0x6e],dl
  4053a9:	ins    DWORD PTR es:[rdi],dx
  4053aa:	(bad)  
  4053ab:	outs   dx,BYTE PTR ds:[rsi]
  4053ac:	(bad)  
  4053ad:	addr32 gs fs push rsp
  4053b1:	jns    0x405423
  4053b3:	add    BYTE PTR gs:[rbp+0x6c],dh
  4053b7:	rex.WRXB jo 0x40542e
  4053ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x61730073
  4053c1:	ins    DWORD PTR es:[rdi],dx
  4053c2:	rex.R
  4053c3:	gs jae 0x40542f
  4053c6:	jb     0x40542d
  4053c8:	add    BYTE PTR fs:[rax+0x68],dh
  4053cc:	imul   edx,DWORD PTR [rdx+0x65],0x73
  4053d0:	jne    0x40543e
  4053d2:	je     0x4053d4
  4053d4:	rex.WRXB jne 0x40544b
  4053d7:	rex.B je 0x40544e
  4053da:	jb     0x405445
  4053dc:	(bad)  
  4053dd:	jne    0x405453
  4053df:	add    BYTE PTR gs:[rdx+0x65],dl
  4053e3:	addr32 rex.XB jb 0x40544c
  4053e7:	(bad)  
  4053e8:	je     0x40544f
  4053ea:	rex.WXB
  4053eb:	gs jns 0x405433
  4053ee:	js     0x405447
  4053f0:	add    BYTE PTR [rdx+0x65],dl
  4053f3:	jae    0x40545a
  4053f5:	jb     0x40546d
  4053f7:	gs add BYTE PTR fs:[rax+rsi*2+0x43],ch
  4053fd:	ins    BYTE PTR es:[rdi],dx
  4053fe:	(bad)  
  4053ff:	jae    0x405474
  405401:	add    BYTE PTR [rdi+rsi*2+0x4f],ah
  405405:	jo     0x40547b
  405407:	imul   ebp,DWORD PTR [rdi+0x6e],0x706c0073
  40540e:	push   rbx
  40540f:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  405413:	imul   esi,DWORD PTR [rcx+rdi*2+0x41],0x69727474
  40541b:	(bad)  
  40541c:	jne    0x405492
  40541e:	gs jae 0x405421
  405421:	ins    BYTE PTR es:[rdi],dx
  405422:	jo     0x405488
  405424:	ja     0x40546a
  405426:	imul   esi,DWORD PTR [rbx+0x70],0x7469736f
  40542d:	imul   ebp,DWORD PTR [rdi+0x6e],0x63655300
  405434:	jne    0x4054a8
  405436:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x726f666e
  40543e:	ins    DWORD PTR es:[rdi],dx
  40543f:	(bad)  
  405440:	je     0x4054ab
  405442:	outs   dx,DWORD PTR ds:[rsi]
  405443:	outs   dx,BYTE PTR ds:[rsi]
  405444:	add    BYTE PTR [rdi+0x62],ch
  405447:	push   0x65
  405449:	movsxd esi,DWORD PTR [rsp+rdx*2+0x79]
  40544d:	jo     0x4054b4
  40544f:	add    BYTE PTR [rbx+0x65],dh
  405452:	movsxd esi,DWORD PTR [rbp+0x72]
  405455:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x726f666e
  40545d:	ins    DWORD PTR es:[rdi],dx
  40545e:	(bad)  
  40545f:	je     0x4054ca
  405461:	outs   dx,DWORD PTR ds:[rsi]
  405462:	outs   dx,BYTE PTR ds:[rsi]
  405463:	add    BYTE PTR [rbx+0x69],dh
  405466:	fs rex.WRXB ja 0x4054d8
  40546a:	gs jb  0x40546d
  40546d:	jae    0x4054d8
  40546f:	fs rex.RXB jb 0x4054e2
  405473:	jne    0x4054e5
  405475:	add    BYTE PTR [rax+0x44],dh
  405478:	(bad)  
  405479:	movsxd ebp,DWORD PTR [rax+rax*1+0x73]
  40547d:	(bad)  
  40547e:	movsxd ebp,DWORD PTR [rax+rax*1+0x6b]
  405482:	gs jb  0x4054f3
  405485:	gs ins BYTE PTR es:[rdi],dx
  405487:	xor    esi,DWORD PTR [rdx]
  405489:	cs fs ins BYTE PTR es:[rdi],dx
  40548c:	ins    BYTE PTR es:[rdi],dx
  40548d:	add    BYTE PTR [rax+0x4d],ch
  405490:	gs ins DWORD PTR es:[rdi],dx
  405492:	add    BYTE PTR [rdi+0x77],ch
  405495:	outs   dx,BYTE PTR ds:[rsi]
  405496:	gs jb  0x405499
  405499:	addr32 jb 0x40550b
  40549c:	jne    0x40550e
  40549e:	add    BYTE PTR [rcx+riz*2+0x63],ah
  4054a2:	ins    BYTE PTR es:[rdi],dx
  4054a3:	add    BYTE PTR [rbx+0x6f],al
  4054a6:	outs   dx,BYTE PTR ds:[rsi]
  4054a7:	je     0x40551b
  4054a9:	outs   dx,DWORD PTR ds:[rsi]
  4054aa:	ins    BYTE PTR es:[rdi],dx
  4054ab:	imul   esi,DWORD PTR [rbx+r14*2+0x4f],0x746e4966
  4054b4:	gs jb  0x40551c
  4054b7:	jae    0x40552d
  4054b9:	add    BYTE PTR [rbx+0x6f],al
  4054bc:	outs   dx,BYTE PTR ds:[rsi]
  4054bd:	je     0x405531
  4054bf:	outs   dx,DWORD PTR ds:[rsi]
  4054c0:	ins    BYTE PTR es:[rdi],dx
  4054c1:	imul   esi,DWORD PTR [rbx+r14*2+0x54],0x7465536f
  4054ca:	add    BYTE PTR [rax+0x43],dh
  4054cd:	outs   dx,DWORD PTR ds:[rsi]
  4054ce:	outs   dx,BYTE PTR ds:[rsi]
  4054cf:	je     0x405543
  4054d1:	outs   dx,DWORD PTR ds:[rsi]
  4054d2:	ins    BYTE PTR es:[rdi],dx
  4054d3:	add    BYTE PTR [rax+rsi*2+0x64],ch
  4054d7:	ja     0x40552b
  4054d9:	gs jbe 0x405545
  4054dc:	jae    0x405547
  4054de:	outs   dx,DWORD PTR ds:[rsi]
  4054df:	outs   dx,BYTE PTR ds:[rsi]
  4054e0:	add    BYTE PTR [rax+0x41],dh
  4054e3:	movsxd ebp,DWORD PTR [rax+rax*1+0x64]
  4054e7:	ja     0x40552a
  4054e9:	movsxd esp,DWORD PTR [rbp+0x49]
  4054ec:	outs   dx,BYTE PTR ds:[rsi]
  4054ed:	fs gs js 0x4054f1
  4054f1:	jo     0x405534
  4054f3:	movsxd ebp,DWORD PTR [rcx+rcx*2+0x6e]
  4054f7:	outs   dx,WORD PTR ds:[rsi]
  4054f9:	jb     0x405568
  4054fb:	(bad)  
  4054fc:	je     0x405567
  4054fe:	outs   dx,DWORD PTR ds:[rsi]
  4054ff:	outs   dx,BYTE PTR ds:[rsi]
  405500:	add    BYTE PTR [rsi+0x41],ch
  405503:	movsxd ebp,DWORD PTR [rcx+rcx*2+0x6e]
  405507:	outs   dx,WORD PTR ds:[rsi]
  405509:	jb     0x405578
  40550b:	(bad)  
  40550c:	je     0x405577
  40550e:	outs   dx,DWORD PTR ds:[rsi]
  40550f:	outs   dx,BYTE PTR ds:[rsi]
  405510:	rex.WR
  405511:	outs   dx,BYTE PTR gs:[rsi]
  405513:	addr32 je 0x40557e
  405516:	add    BYTE PTR [rdi+rsi*2+0x41],ah
  40551a:	movsxd ebp,DWORD PTR [rcx+rcx*2+0x6e]
  40551e:	outs   dx,WORD PTR ds:[rsi]
  405520:	jb     0x40558f
  405522:	(bad)  
  405523:	je     0x40558e
  405525:	outs   dx,DWORD PTR ds:[rsi]
  405526:	outs   dx,BYTE PTR ds:[rsi]
  405527:	rex.XB ins BYTE PTR es:[rdi],dx
  405529:	(bad)  
  40552a:	jae    0x40559f
  40552c:	add    BYTE PTR [rdi+rsi*2+0x46],ah
  405530:	ins    BYTE PTR es:[rdi],dx
  405531:	(bad)  
  405532:	addr32 jae 0x405535
  405535:	ins    BYTE PTR es:[rdi],dx
  405536:	jo     0x40558b
  405538:	outs   dx,DWORD PTR ds:[rsi]
  405539:	jne    0x4055ad
  40553b:	movsxd esp,DWORD PTR [rbp+0x0]
  40553e:	fs ja  0x40558e
  405541:	gs jae 0x4055b7
  405544:	(bad)  
  405545:	addr32 gs rex.WB
  405548:	add    BYTE PTR fs:[rdi+rsi*2+0x4c],ah
  40554d:	(bad)  
  40554e:	outs   dx,BYTE PTR ds:[rsi]
  40554f:	addr32 jne 0x4055b3
  405552:	addr32 gs rex.WB
  405555:	add    BYTE PTR fs:[rax+rsi*2+0x42],ch
  40555a:	jne    0x4055c2
  40555c:	data16 gs jb 0x405560
  405560:	outs   dx,BYTE PTR ds:[rsi]
  405561:	push   rbx
  405562:	imul   edi,DWORD PTR [rdx+0x65],0x5f617600
  405569:	ins    BYTE PTR es:[rdi],dx
  40556a:	imul   esi,DWORD PTR [rbx+0x74],0x6772615f
  405571:	jne    0x4055e0
  405573:	outs   dx,BYTE PTR gs:[rsi]
  405575:	je     0x4055ea
  405577:	add    BYTE PTR [rdi+0x77],ch
  40557a:	outs   dx,BYTE PTR ds:[rsi]
  40557b:	jae    0x4055c5
  40557d:	(bad)  
  40557e:	outs   dx,BYTE PTR ds:[rsi]
  40557f:	fs ins BYTE PTR es:[rdi],dx
  405581:	add    BYTE PTR gs:[rbx+0x65],dl
  405585:	je     0x4055cf
  405587:	(bad)  
  405588:	outs   dx,BYTE PTR ds:[rsi]
  405589:	fs ins BYTE PTR es:[rdi],dx
  40558b:	add    BYTE PTR gs:[rdi+0x65],al
  40558f:	je     0x4055dd
  405591:	(bad)  
  405592:	jae    0x405608
  405594:	push   rdi
  405595:	imul   ebp,DWORD PTR [rsi+0x33],0x72724532
  40559c:	outs   dx,DWORD PTR ds:[rsi]
  40559d:	jb     0x40559f
  40559f:	gs jb  0x405614
  4055a2:	outs   dx,DWORD PTR ds:[rsi]
  4055a3:	jb     0x4055e8
  4055a5:	outs   dx,DWORD PTR ds:[rsi]
  4055a6:	fs add BYTE PTR gs:[rbp+0x6e],dl
  4055ab:	(bad)  
  4055ac:	jne    0x405622
  4055ae:	push   0x7a69726f
  4055b3:	gs movsxd esp,DWORD PTR fs:[r11+0x65]
  4055b9:	jae    0x40562e
  4055bb:	rex.RB js 0x405621
  4055be:	gs jo  0x405635
  4055c1:	imul   ebp,DWORD PTR [rdi+0x6e],0x73795300
  4055c8:	je     0x40562f
  4055ca:	ins    DWORD PTR es:[rdi],dx
  4055cb:	rex.XB outs dx,DWORD PTR cs:[rsi]
  4055ce:	ins    DWORD PTR es:[rdi],dx
  4055cf:	jo     0x405640
  4055d1:	outs   dx,BYTE PTR ds:[rsi]
  4055d2:	outs   dx,BYTE PTR gs:[rsi]
  4055d4:	je     0x405623
  4055d6:	outs   dx,DWORD PTR ds:[rsi]
  4055d7:	fs gs ins BYTE PTR es:[rdi],dx
  4055da:	add    BYTE PTR [rdi+0x69],dl
  4055dd:	outs   dx,BYTE PTR ds:[rsi]
  4055de:	xor    esi,DWORD PTR [rdx]
  4055e0:	rex.RB js 0x405646
  4055e3:	gs jo  0x40565a
  4055e6:	imul   ebp,DWORD PTR [rdi+0x6e],0x72745000
  4055ed:	push   rsp
  4055ee:	outs   dx,DWORD PTR ds:[rsi]
  4055ef:	push   rbx
  4055f0:	je     0x405664
  4055f2:	imul   ebp,DWORD PTR [rsi+0x67],0x6f747541
  4055f9:	add    BYTE PTR [rbp+0x69],cl
  4055fc:	movsxd esi,DWORD PTR [rdx+0x6f]
  4055ff:	jae    0x405670
  405601:	data16 je 0x405632
  405604:	push   rbx
  405605:	jno    0x405673
  405607:	push   rbx
  405608:	gs jb  0x405681
  40560b:	gs jb  0x40563c
  40560e:	rex.XB outs dx,DWORD PTR ds:[rsi]
  405610:	outs   dx,BYTE PTR ds:[rsi]
  405611:	imul   sp,WORD PTR [rdi+0x75],0x6172
  405617:	je     0x405682
  405619:	outs   dx,DWORD PTR ds:[rsi]
  40561a:	outs   dx,BYTE PTR ds:[rsi]
  40561b:	rex.RX imul r15d,DWORD PTR cs:[rax+0x53],0x65526c71
  405624:	imul   esi,DWORD PTR [ebx+0x74],0x654b7972
  40562c:	jns    0x40565c
  40562e:	push   rbx
  40562f:	push   rdx
  405630:	cs jb  0x405698
  405633:	jae    0x4056a4
  405635:	jne    0x4056a9
  405637:	movsxd esp,DWORD PTR [rbp+0x73]
  40563a:	add    BYTE PTR [rax],al
  40563c:	add    BYTE PTR [rip+0x73006d],ch        # 0xb356af
  405642:	sub    eax,0x65006800
  405647:	add    BYTE PTR [rax+rax*1+0x70],ch
  40564b:	add    BYTE PTR [rdx],bh
  40564d:	add    BYTE PTR [rdi],ch
  40564f:	add    BYTE PTR [rdi],ch
  405651:	add    BYTE PTR [rbp+0x0],cl
  405654:	push   rbx
  405655:	add    BYTE PTR [rsi],ch
  405657:	add    BYTE PTR [rbx+0x0],dl
  40565a:	push   rcx
  40565b:	add    BYTE PTR [rax+rax*1+0x43],cl
  40565f:	add    BYTE PTR [rbx+0x0],al
  405662:	add    BYTE PTR cs:[rsi+0x0],dh
  405666:	xor    DWORD PTR [rax],eax
  405668:	xor    BYTE PTR [rax],al
  40566a:	add    DWORD PTR [rcx],esi
  40566c:	add    BYTE PTR [rcx+0x0],r13b
  405670:	jb     0x405672
  405672:	add    BYTE PTR gs:[rbx+0x0],ah
  405676:	je     0x405678
  405678:	rex.WR add BYTE PTR [rcx+0x0],r12b
  40567c:	jne    0x40567e
  40567e:	outs   dx,BYTE PTR ds:[rsi]
  40567f:	add    BYTE PTR [rbx+0x0],ah
  405682:	push   0x6f004e00
  405687:	add    BYTE PTR [rax+rax*1+0x53],dh
  40568b:	add    BYTE PTR [rbp+0x0],dh
  40568e:	jo     0x405690
  405690:	jo     0x405692
  405692:	outs   dx,DWORD PTR ds:[rsi]
  405693:	add    BYTE PTR [rdx+0x0],dh
  405696:	je     0x405698
  405698:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
  40569d:	sbb    eax,0x6f0043
  4056a2:	jne    0x4056a4
  4056a4:	ins    BYTE PTR es:[rdi],dx
  4056a5:	add    BYTE PTR [rax+rax*1+0x4e],ah
  4056a9:	add    BYTE PTR [rdi+0x0],ch
  4056ac:	je     0x4056ae
  4056ae:	rex.RX add BYTE PTR [rcx+0x0],r13b
  4056b2:	js     0x4056b4
  4056b4:	rex.WXB add BYTE PTR [r13+0x0],spl
  4056b8:	jns    0x4056ba
  4056ba:	add    BYTE PTR [rip+0x6f0043],ah        # 0xaf5703
  4056c0:	jne    0x4056c2
  4056c2:	ins    BYTE PTR es:[rdi],dx
  4056c3:	add    BYTE PTR [rax+rax*1+0x4e],ah
  4056c7:	add    BYTE PTR [rdi+0x0],ch
  4056ca:	je     0x4056cc
  4056cc:	rex.WRXB add BYTE PTR [r8+0x0],r14b
  4056d0:	add    BYTE PTR gs:[rsi+0x0],ch
  4056d4:	push   rbx
  4056d5:	add    BYTE PTR [rbp+0x0],dh
  4056d8:	(bad)  
  4056d9:	add    BYTE PTR [rbx+0x0],cl
  4056dc:	add    BYTE PTR gs:[rcx+0x0],bh
  4056e0:	add    BYTE PTR [rip+0x650052],dl        # 0xa55738
  4056e6:	outs   dx,DWORD PTR ds:[rsi]
  4056e7:	add    BYTE PTR [rdx+0x0],dh
  4056ea:	add    BYTE PTR fs:[rbp+0x0],ah
  4056ee:	jb     0x4056f0
  4056f0:	add    BYTE PTR [r11+0x0],al
  4056f4:	rex.WR add BYTE PTR [rax],r8b
  4056f7:	and    DWORD PTR [rbx+0x0],edx
  4056fa:	add    BYTE PTR gs:[rax+rax*1+0x49],dh
  4056ff:	add    BYTE PTR [rsi+0x0],ch
  405702:	push   0x72006500
  405707:	add    BYTE PTR [rcx+0x0],ch
  40570a:	je     0x40570c
  40570c:	add    BYTE PTR gs:[rax+rax*1+0x46],ah
  405711:	add    BYTE PTR [rax+rax*1+0x61],ch
  405715:	add    BYTE PTR [rdi+0x0],ah
  405718:	add    BYTE PTR [rbx],cl
  40571a:	rex.WXB add BYTE PTR [r13+0x0],spl
  40571e:	jns    0x405720
  405720:	rex.WRXB add BYTE PTR [r11+0x0],r9b
  405724:	add    BYTE PTR [rip+0x6e0055],ch        # 0xae577f
  40572a:	jae    0x40572c
  40572c:	jne    0x40572e
  40572e:	jo     0x405730
  405730:	jo     0x405732
  405732:	outs   dx,DWORD PTR ds:[rsi]
  405733:	add    BYTE PTR [rdx+0x0],dh
  405736:	je     0x405738
  405738:	add    BYTE PTR gs:[rax+rax*1+0x52],ah
  40573d:	add    BYTE PTR [rdi+0x0],ch
  405740:	outs   dx,DWORD PTR ds:[rsi]
  405741:	add    BYTE PTR [rax+rax*1+0x4b],dh
  405745:	add    BYTE PTR [rbp+0x0],ah
  405748:	jns    0x40574a
  40574a:	push   rsp
  40574b:	add    BYTE PTR [rcx+0x0],bh
  40574e:	jo     0x405750
  405750:	add    BYTE PTR gs:[rax],al
  405753:	sbb    eax,0x6e0055
  405758:	imul   eax,DWORD PTR [rax],0x6e
  40575b:	add    BYTE PTR [rdi+0x0],ch
  40575e:	ja     0x405760
  405760:	outs   dx,BYTE PTR ds:[rsi]
  405761:	add    BYTE PTR [rax+0x0],cl
  405764:	push   rdx
  405765:	add    BYTE PTR [rbp+0x0],ah
  405768:	jae    0x40576a
  40576a:	jne    0x40576c
  40576c:	ins    BYTE PTR es:[rdi],dx
  40576d:	add    BYTE PTR [rax+rax*1+0x0],dh
  405771:	or     DWORD PTR [rdi],ebp
  405773:	add    BYTE PTR [rsi+0x0],ah
  405776:	imul   eax,DWORD PTR [rax],0x3d000078
  40577c:	push   rbx
  40577d:	add    BYTE PTR [rdi+0x0],ch
  405780:	data16 add BYTE PTR [rax+rax*1+0x77],dh
  405785:	add    BYTE PTR [rcx+0x0],ah
  405788:	jb     0x40578a
  40578a:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
  40578f:	add    BYTE PTR [rcx+0x0],ch
  405792:	movsxd eax,DWORD PTR [rax]
  405794:	jb     0x405796
  405796:	outs   dx,DWORD PTR ds:[rsi]
  405797:	add    BYTE PTR [rbx+0x0],dh
  40579a:	outs   dx,DWORD PTR ds:[rsi]
  40579b:	add    BYTE PTR [rsi+0x0],ah
  40579e:	je     0x4057a0
  4057a0:	pop    rsp
  4057a1:	add    BYTE PTR [rbp+0x0],cl
  4057a4:	push   rbx
  4057a5:	add    BYTE PTR [rbx+0x0],dl
  4057a8:	push   rcx
  4057a9:	add    BYTE PTR [rax+rax*1+0x53],cl
  4057ad:	add    BYTE PTR [rbp+0x0],ah
  4057b0:	jb     0x4057b2
  4057b2:	jbe    0x4057b4
  4057b4:	add    BYTE PTR gs:[rdx+0x0],dh
  4057b8:	add    BYTE PTR [rdi+0x53],cl
  4057bb:	add    BYTE PTR [rdi+0x0],ch
  4057be:	data16 add BYTE PTR [rax+rax*1+0x77],dh
  4057c3:	add    BYTE PTR [rcx+0x0],ah
  4057c6:	jb     0x4057c8
  4057c8:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
  4057cd:	add    BYTE PTR [rcx+0x0],ch
  4057d0:	movsxd eax,DWORD PTR [rax]
  4057d2:	jb     0x4057d4
  4057d4:	outs   dx,DWORD PTR ds:[rsi]
  4057d5:	add    BYTE PTR [rbx+0x0],dh
  4057d8:	outs   dx,DWORD PTR ds:[rsi]
  4057d9:	add    BYTE PTR [rsi+0x0],ah
  4057dc:	je     0x4057de
  4057de:	pop    rsp
  4057df:	add    BYTE PTR [rbp+0x0],cl
  4057e2:	imul   eax,DWORD PTR [rax],0x720063
  4057e8:	outs   dx,DWORD PTR ds:[rsi]
  4057e9:	add    BYTE PTR [rbx+0x0],dh
  4057ec:	outs   dx,DWORD PTR ds:[rsi]
  4057ed:	add    BYTE PTR [rsi+0x0],ah
  4057f0:	je     0x4057f2
  4057f2:	and    BYTE PTR [rax],al
  4057f4:	push   rbx
  4057f5:	add    BYTE PTR [rcx+0x0],dl
  4057f8:	rex.WR add BYTE PTR [rax],r12b
  4057fb:	add    BYTE PTR [rbx+0x0],dl
  4057fe:	add    BYTE PTR gs:[rdx+0x0],dh
  405802:	jbe    0x405804
  405804:	add    BYTE PTR gs:[rdx+0x0],dh
  405808:	add    BYTE PTR [rcx],dh
  40580a:	push   rbp
  40580b:	add    BYTE PTR [rsi+0x0],ch
  40580e:	add    BYTE PTR gs:[rax+0x0],bh
  405812:	jo     0x405814
  405814:	add    BYTE PTR gs:[rbx+0x0],ah
  405818:	je     0x40581a
  40581a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
  40581f:	add    BYTE PTR [rcx+0x0],al
  405822:	rex.XB add BYTE PTR [r13+0x0],al
  405826:	and    BYTE PTR [rax],al
  405828:	je     0x40582a
  40582a:	jns    0x40582c
  40582c:	jo     0x40582e
  40582e:	add    BYTE PTR gs:[rdx],bh
  405831:	add    BYTE PTR [rax],ah
  405833:	add    BYTE PTR [rbx+0x0],bh
  405836:	xor    BYTE PTR [rax],al
  405838:	jge    0x40583a
  40583a:	add    BYTE PTR [rdi],cl
  40583c:	imul   eax,DWORD PTR [rax],0x65
  40583f:	add    BYTE PTR [rcx+0x0],bh
  405842:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  405846:	ins    DWORD PTR es:[rdi],dx
  405847:	add    BYTE PTR [rbp+0x0],ah
  40584a:	add    BYTE PTR [rip+0x4b0048],ah        # 0x8b5898
  405850:	add    BYTE PTR [r9+0x0],r11b
  405854:	pop    rdi
  405855:	add    BYTE PTR [rax+rax*1+0x4f],cl
  405859:	add    BYTE PTR [rbx+0x0],al
  40585c:	add    BYTE PTR [r8+rax*1+0x5f],cl
  405861:	add    BYTE PTR [rbp+0x0],cl
  405864:	add    BYTE PTR [r11+0x0],al
  405868:	rex.W add BYTE PTR [rcx+0x0],cl
  40586c:	rex.WRX add BYTE PTR [rbp+0x0],r8b
  405870:	add    BYTE PTR [rbx],ah
  405872:	rex.W add BYTE PTR [rbx+0x0],cl
  405876:	add    BYTE PTR [r9+0x0],r11b
  40587a:	pop    rdi
  40587b:	add    BYTE PTR [rbx+0x0],al
  40587e:	push   rbp
  40587f:	add    BYTE PTR [rdx+0x0],dl
  405882:	push   rdx
  405883:	add    BYTE PTR [rbp+0x0],al
  405886:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
  40588b:	add    BYTE PTR [rbp+0x0],dl
  40588e:	push   rbx
  40588f:	add    BYTE PTR [rbp+0x0],al
  405892:	push   rdx
  405893:	add    BYTE PTR [rax],al
  405895:	add    BYTE PTR [rax],al
  405897:	add    BYTE PTR [rcx+0x73],bl
  40589a:	lods   al,BYTE PTR ds:[rsi]
  40589b:	(bad)  
  40589c:	rex.X movabs eax,ds:0xb51d532eb490441a
  4058a6:	loopne 0x405853
  4058a8:	add    BYTE PTR [rax],cl
  4058aa:	mov    bh,0x7a
  4058ac:	pop    rsp
  4058ad:	push   rsi
  4058ae:	sbb    DWORD PTR [rax+riz*8],esi
  4058b1:	mov    DWORD PTR [rdx],eax
  4058b3:	(bad)  
  4058b4:	(bad)  
  4058b5:	adc    BYTE PTR [rcx],dh
  4058b7:	add    BYTE PTR [rax],dh
  4058b9:	add    BYTE PTR [rsi],ch
  4058bb:	add    BYTE PTR [rax],dh
  4058bd:	add    BYTE PTR [rsi],ch
  4058bf:	add    BYTE PTR [rax],dh
  4058c1:	add    BYTE PTR [rsi],ch
  4058c3:	add    BYTE PTR [rax],dh
  4058c5:	add    BYTE PTR [rdx],al
  4058c7:	(bad)  
  4058c8:	or     BYTE PTR [rdx+rcx*1],al
  4058cb:	add    BYTE PTR [rax],al
  4058cd:	add    BYTE PTR [rbx+riz*8],al
  4058d0:	or     DWORD PTR [rax],eax
  4058d2:	add    BYTE PTR [rax],cl
  4058d4:	xor    DWORD PTR [rax],eax
  4058d6:	xor    BYTE PTR [rax],al
  4058d8:	add    BYTE PTR cs:[rax],dh
  4058db:	add    BYTE PTR [rax],ch
  4058dd:	rex.WRB add BYTE PTR [r9+0x0],r13b
  4058e1:	movsxd eax,DWORD PTR [rax]
  4058e3:	jb     0x4058e5
  4058e5:	outs   dx,DWORD PTR ds:[rsi]
  4058e6:	add    BYTE PTR [rbx+0x0],dh
  4058e9:	outs   dx,DWORD PTR ds:[rsi]
  4058ea:	add    BYTE PTR [rsi+0x0],ah
  4058ed:	je     0x4058ef
  4058ef:	and    BYTE PTR [rax],al
  4058f1:	push   rbx
  4058f2:	add    BYTE PTR [rcx+0x0],dl
  4058f5:	rex.WR add BYTE PTR [rax],r12b
  4058f8:	add    BYTE PTR [rbx+0x0],dl
  4058fb:	add    BYTE PTR gs:[rdx+0x0],dh
  4058ff:	jbe    0x405901
  405901:	add    BYTE PTR gs:[rdx+0x0],dh
  405905:	xor    cl,BYTE PTR [rbp+0x0]
  405908:	imul   eax,DWORD PTR [rax],0x720063
  40590e:	outs   dx,DWORD PTR ds:[rsi]
  40590f:	add    BYTE PTR [rbx+0x0],dh
  405912:	outs   dx,DWORD PTR ds:[rsi]
  405913:	add    BYTE PTR [rsi+0x0],ah
  405916:	je     0x405918
  405918:	and    BYTE PTR [rax],al
  40591a:	push   rbx
  40591b:	add    BYTE PTR [rcx+0x0],dl
  40591e:	rex.WR add BYTE PTR [rax],r12b
  405921:	add    BYTE PTR [rbx+0x0],dl
  405924:	add    BYTE PTR gs:[rdx+0x0],dh
  405928:	jbe    0x40592a
  40592a:	add    BYTE PTR gs:[rdx+0x0],dh
  40592e:	and    BYTE PTR [rax],al
  405930:	xor    al,BYTE PTR [rax]
  405932:	xor    BYTE PTR [rax],al
  405934:	xor    BYTE PTR [rax],al
  405936:	cmp    BYTE PTR [rax],al
  405938:	(bad)  
  405939:	xor    DWORD PTR [rax],eax
  40593b:	xor    BYTE PTR [rax],al
  40593d:	xor    BYTE PTR [rax],al
  40593f:	or     dh,BYTE PTR [rbx+0x0]
  405942:	jno    0x405944
  405944:	ins    BYTE PTR es:[rdi],dx
  405945:	add    BYTE PTR [rcx],dh
  405947:	add    BYTE PTR [rax],dh
  405949:	add    BYTE PTR [rdx],dh
  40594b:	push   rbx
  40594c:	add    BYTE PTR [rcx+0x0],dl
  40594f:	rex.WR add BYTE PTR [rbx+0x0],r10b
  405953:	add    BYTE PTR gs:[rdx+0x0],dh
  405957:	jbe    0x405959
  405959:	add    BYTE PTR gs:[rdx+0x0],dh
  40595d:	rex.X add BYTE PTR [rdi+0x0],bpl
  405961:	outs   dx,DWORD PTR ds:[rsi]
  405962:	add    BYTE PTR [rbx+0x0],ch
  405965:	jae    0x405967
  405967:	rex.WRXB add BYTE PTR [r14+0x0],r13b
  40596b:	ins    BYTE PTR es:[rdi],dx
  40596c:	add    BYTE PTR [rcx+0x0],ch
  40596f:	outs   dx,BYTE PTR ds:[rsi]
  405970:	add    BYTE PTR [rbp+0x0],ah
  405973:	add    BYTE PTR cs:[rcx],dh
  405976:	add    BYTE PTR [rax],dh
  405978:	add    BYTE PTR [rsi],ch
  40597a:	add    BYTE PTR [rax],dh
  40597c:	add    BYTE PTR [rsi],cl
  40597e:	push   rdx
  40597f:	add    BYTE PTR [rbp+0x0],ah
  405982:	ins    BYTE PTR es:[rdi],dx
  405983:	add    BYTE PTR [rbp+0x0],ah
  405986:	(bad)  
  405987:	add    BYTE PTR [rbx+0x0],dh
  40598a:	add    BYTE PTR gs:[rdx],al
  40598d:	(bad)  
  40598e:	or     DWORD PTR [rsp+rsi*4],eax
  405991:	add    BYTE PTR [rax],al
  405993:	add    BYTE PTR [rax+rax*1],al
  405996:	add    BYTE PTR [rax],al
  405998:	add    BYTE PTR [rdx],ch
  40599a:	ins    DWORD PTR es:[rdi],dx
  40599b:	add    BYTE PTR [rbx+0x0],dh
  40599e:	sub    eax,0x65006800
  4059a3:	add    BYTE PTR [rax+rax*1+0x70],ch
  4059a7:	add    BYTE PTR [rdx],bh
  4059a9:	add    BYTE PTR [rdi],ch
  4059ab:	add    BYTE PTR [rdi],ch
  4059ad:	add    BYTE PTR [rbp+0x0],cl
  4059b0:	push   rbx
  4059b1:	add    BYTE PTR [rsi],ch
  4059b3:	add    BYTE PTR [rsi+0x0],dl
  4059b6:	push   rbx
  4059b7:	add    BYTE PTR [rbx+0x0],al
  4059ba:	rex.XB add BYTE PTR [r14],bpl
  4059bd:	add    BYTE PTR [rsi+0x0],dh
  4059c0:	cmp    DWORD PTR [rax],eax
  4059c2:	xor    BYTE PTR [rax],al
  4059c4:	add    eax,DWORD PTR [rax]
  4059c6:	add    BYTE PTR [rsi],cl
  4059c8:	add    ecx,DWORD PTR [rax]
  4059ca:	add    BYTE PTR [rsi],cl
  4059cc:	add    esp,DWORD PTR [rax]
  4059ce:	add    BYTE PTR [rcx],al
  4059d0:	add    al,0x0
  4059d2:	add    BYTE PTR [rdx],dl
  4059d4:	adc    eax,0x1010005
  4059d9:	adc    dl,BYTE PTR [rip+0xe010004]        # 0xe4159e3
  4059df:	(bad)  
  4059e0:	add    eax,0xe0e0200
  4059e5:	(bad)  
  4059e6:	add    al,0x0
  4059e8:	add    DWORD PTR [rsi],ecx
  4059ea:	or     BYTE PTR [rax+rcx*1],al
  4059ed:	add    BYTE PTR [rdx],dl
  4059ef:	adc    eax,0x6f00431c
  4059f4:	add    BYTE PTR [rbp+0x0],dh
  4059f7:	ins    BYTE PTR es:[rdi],dx
  4059f8:	add    BYTE PTR [rax+rax*1+0x4e],ah
  4059fc:	add    BYTE PTR [rdi+0x0],ch
  4059ff:	je     0x405a01
  405a01:	rex.RX add BYTE PTR [rcx+0x0],r13b
  405a05:	js     0x405a07
  405a07:	rex.WXB add BYTE PTR [r13+0x0],spl
  405a0b:	jns    0x405a0d
  405a0d:	and    al,0x43
  405a0f:	add    BYTE PTR [rdi+0x0],ch
  405a12:	jne    0x405a14
  405a14:	ins    BYTE PTR es:[rdi],dx
  405a15:	add    BYTE PTR [rax+rax*1+0x4e],ah
  405a19:	add    BYTE PTR [rdi+0x0],ch
  405a1c:	je     0x405a1e
  405a1e:	rex.WRXB add BYTE PTR [r8+0x0],r14b
  405a22:	add    BYTE PTR gs:[rsi+0x0],ch
  405a26:	push   rbx
  405a27:	add    BYTE PTR [rbp+0x0],dh
  405a2a:	(bad)  
  405a2b:	add    BYTE PTR [rbx+0x0],cl
  405a2e:	add    BYTE PTR gs:[rcx+0x0],bh
  405a32:	adc    al,0x52
  405a34:	add    BYTE PTR [rbp+0x0],ah
  405a37:	outs   dx,DWORD PTR ds:[rsi]
  405a38:	add    BYTE PTR [rdx+0x0],dh
  405a3b:	add    BYTE PTR fs:[rbp+0x0],ah
  405a3f:	jb     0x405a41
  405a41:	add    BYTE PTR [r11+0x0],al
  405a45:	rex.WR add BYTE PTR [rax],r12b
  405a48:	push   rbx
  405a49:	add    BYTE PTR [rbp+0x0],ah
  405a4c:	je     0x405a4e
  405a4e:	rex.WB add BYTE PTR [r14+0x0],bpl
  405a52:	push   0x72006500
  405a57:	add    BYTE PTR [rcx+0x0],ch
  405a5a:	je     0x405a5c
  405a5c:	add    BYTE PTR gs:[rax+rax*1+0x46],ah
  405a61:	add    BYTE PTR [rax+rax*1+0x61],ch
  405a65:	add    BYTE PTR [rdi+0x0],ah
  405a68:	or     cl,BYTE PTR [rbx+0x0]
  405a6b:	add    BYTE PTR gs:[rcx+0x0],bh
  405a6f:	rex.WRXB add BYTE PTR [r11+0x0],r9b
  405a73:	sub    al,0x55
  405a75:	add    BYTE PTR [rsi+0x0],ch
  405a78:	jae    0x405a7a
  405a7a:	jne    0x405a7c
  405a7c:	jo     0x405a7e
  405a7e:	jo     0x405a80
  405a80:	outs   dx,DWORD PTR ds:[rsi]
  405a81:	add    BYTE PTR [rdx+0x0],dh
  405a84:	je     0x405a86
  405a86:	add    BYTE PTR gs:[rax+rax*1+0x52],ah
  405a8b:	add    BYTE PTR [rdi+0x0],ch
  405a8e:	outs   dx,DWORD PTR ds:[rsi]
  405a8f:	add    BYTE PTR [rax+rax*1+0x4b],dh
  405a93:	add    BYTE PTR [rbp+0x0],ah
  405a96:	jns    0x405a98
  405a98:	push   rsp
  405a99:	add    BYTE PTR [rcx+0x0],bh
  405a9c:	jo     0x405a9e
  405a9e:	add    BYTE PTR gs:[rdx*2+0x6b006e00],bl
  405aa6:	add    BYTE PTR [rsi+0x0],ch
  405aa9:	outs   dx,DWORD PTR ds:[rsi]
  405aaa:	add    BYTE PTR [rdi+0x0],dh
  405aad:	outs   dx,BYTE PTR ds:[rsi]
  405aae:	add    BYTE PTR [rax+0x0],cl
  405ab1:	push   rdx
  405ab2:	add    BYTE PTR [rbp+0x0],ah
  405ab5:	jae    0x405ab7
  405ab7:	jne    0x405ab9
  405ab9:	ins    BYTE PTR es:[rdi],dx
  405aba:	add    BYTE PTR [rax+rax*1+0x30],dh
  405abe:	add    BYTE PTR [rcx+0x0],r13b
  405ac2:	jb     0x405ac4
  405ac4:	add    BYTE PTR gs:[rbx+0x0],ah
  405ac8:	je     0x405aca
  405aca:	rex.WR add BYTE PTR [rcx+0x0],r12b
  405ace:	jne    0x405ad0
  405ad0:	outs   dx,BYTE PTR ds:[rsi]
  405ad1:	add    BYTE PTR [rbx+0x0],ah
  405ad4:	push   0x6f004e00
  405ad9:	add    BYTE PTR [rax+rax*1+0x53],dh
  405add:	add    BYTE PTR [rbp+0x0],dh
  405ae0:	jo     0x405ae2
  405ae2:	jo     0x405ae4
  405ae4:	outs   dx,DWORD PTR ds:[rsi]
  405ae5:	add    BYTE PTR [rdx+0x0],dh
  405ae8:	je     0x405aea
  405aea:	add    BYTE PTR gs:[rax+rax*1+0x3],ah
  405aef:	(bad)  
  405af0:	adc    bl,BYTE PTR [rcx]
  405af2:	add    eax,DWORD PTR [rsi]
  405af4:	adc    dl,BYTE PTR [rip+0xe020005]        # 0xe425aff
  405afa:	(bad)  
  405afb:	sbb    al,0x6
  405afd:	add    BYTE PTR [rbx],al
  405aff:	(bad)  
  405b00:	(bad)  
  405b01:	sbb    al,0x1c
  405b03:	add    al,0x1
  405b05:	add    BYTE PTR [rax],al
  405b07:	add    BYTE PTR [rdx+rax*1],al
  405b0a:	add    BYTE PTR [rax],al
  405b0c:	add    BYTE PTR [rax],cl
  405b0e:	(bad)  
  405b0f:	add    BYTE PTR [rsi+0x0],ah
  405b12:	imul   eax,DWORD PTR [rax],0x6030078
  405b18:	adc    dh,BYTE PTR [rax]
  405b1a:	add    eax,0x1d080100
  405b1f:	(bad)  
  405b20:	add    eax,0x12020100
  405b25:	sbb    eax,0x1010004
  405b2a:	(bad)  
  405b2b:	add    eax,0x51d0100
  405b30:	sbb    BYTE PTR [rax+rax*1],al
  405b33:	add    DWORD PTR [rdx],eax
  405b35:	sbb    BYTE PTR [rsi],al
  405b37:	add    BYTE PTR [rdx],al
  405b39:	add    DWORD PTR [rdx],edx
  405b3b:	xor    BYTE PTR [rax],bl
  405b3d:	(bad)  
  405b3e:	add    BYTE PTR [rdx],al
  405b40:	add    DWORD PTR [rdx],edx
  405b42:	xor    BYTE PTR [rip+0x1000405],bl        # 0x1405f4d
  405b48:	(bad)  
  405b49:	sbb    BYTE PTR [rip+0x1d020100],al        # 0x1d425c4f
  405b4f:	add    eax,0x12010005
  405b54:	xor    BYTE PTR [rsi],cl
  405b56:	add    al,0x0
  405b58:	add    DWORD PTR [rcx],eax
  405b5a:	or     BYTE PTR [rax+rax*1],al
  405b5d:	add    DWORD PTR [rcx],eax
  405b5f:	add    al,BYTE PTR [rax*1+0x4000000]
  405b66:	add    BYTE PTR [rcx],al
  405b68:	add    BYTE PTR [rax],al
  405b6a:	add    al,0x0
  405b6c:	add    al,BYTE PTR [rax]
  405b6e:	add    BYTE PTR [rax+rax*1],al
  405b71:	adc    BYTE PTR [rax],al
  405b73:	add    BYTE PTR [rax+rax*1],al
  405b76:	and    BYTE PTR [rax],al
  405b78:	add    BYTE PTR [rax+rcx*1],al
  405b7b:	add    BYTE PTR [rax],al
  405b7d:	add    BYTE PTR [rax+rdx*1],al
  405b80:	add    BYTE PTR [rax],al
  405b82:	add    BYTE PTR [rbx+rax*1],al
  405b85:	add    BYTE PTR [rax],al
  405b87:	add    BYTE PTR [rsp+rax*1],al
  405b8a:	add    BYTE PTR [rax],al
  405b8c:	add    BYTE PTR [rsi+rax*1],al
  405b8f:	add    BYTE PTR [rax],al
  405b91:	add    BYTE PTR [rdi+rax*1],al
  405b94:	add    BYTE PTR [rax],al
  405b96:	add    BYTE PTR [rcx+rcx*1],al
  405b99:	add    BYTE PTR [rax],al
  405b9b:	add    BYTE PTR [rbx+rcx*1],al
  405b9e:	add    BYTE PTR [rax],al
  405ba0:	add    BYTE PTR [rsp+rcx*1],al
  405ba3:	add    BYTE PTR [rax],al
  405ba5:	add    BYTE PTR [rcx*1+0x4000000],al
  405bac:	(bad)  
  405bad:	add    BYTE PTR [rax],al
  405baf:	add    BYTE PTR [rdi+rcx*1],al
  405bb2:	add    BYTE PTR [rax],al
  405bb4:	add    BYTE PTR [rax+riz*1],al
  405bb7:	add    BYTE PTR [rax],al
  405bb9:	add    BYTE PTR [rax+rax*1],al
  405bbc:	add    eax,DWORD PTR [rax]
  405bbe:	add    BYTE PTR [rcx+rbx*1],al
  405bc1:	add    BYTE PTR [rdx],al
  405bc3:	add    BYTE PTR [rsi+rax*1],al
  405bc6:	add    BYTE PTR [rdx],al
  405bc8:	add    BYTE PTR [rdi+rdi*1],al
  405bcb:	add    BYTE PTR [rdi],cl
  405bcd:	add    BYTE PTR [rax+rax*1],al
  405bd0:	add    BYTE PTR [rcx],al
  405bd2:	add    BYTE PTR [rax+rax*1],al
  405bd5:	add    BYTE PTR [rdx],al
  405bd7:	add    BYTE PTR [rax+rax*1],al
  405bda:	add    BYTE PTR [rax+rax*1],al
  405bdd:	add    al,0x0
  405bdf:	add    BYTE PTR [rax],cl
  405be1:	add    BYTE PTR [rax+rax*1],al
  405be4:	add    BYTE PTR [rax],dl
  405be6:	add    BYTE PTR [rax+rax*1],al
  405be9:	add    BYTE PTR [rdi],bl
  405beb:	add    BYTE PTR [rdi+rdi*8],al
  405bee:	inc    DWORD PTR [rax]
  405bf0:	add    BYTE PTR [rax+rax*1],al
  405bf3:	add    al,0x0
  405bf5:	add    BYTE PTR [rax+rax*1],al
  405bf8:	or     BYTE PTR [rax],al
  405bfa:	add    BYTE PTR [rax+rax*1],al
  405bfd:	add    BYTE PTR [rax],al
  405c00:	add    al,0x0
  405c02:	add    BYTE PTR [rax],0x0
  405c05:	add    al,BYTE PTR [rsi]
  405c07:	sbb    BYTE PTR [rbx],al
  405c09:	(bad)  
  405c0a:	adc    DWORD PTR [rdx+rax*1],ebx
  405c0d:	(bad)  
  405c0e:	add    eax,0x3070602
  405c13:	(bad)  
  405c14:	adc    DWORD PTR [rax],ebp
  405c16:	or     eax,DWORD PTR [rax]
  405c18:	add    eax,0xe301208
  405c1d:	or     DWORD PTR [rcx],ecx
  405c1f:	adc    BYTE PTR [rdx],dl
  405c21:	xor    BYTE PTR [rax],dl
  405c23:	add    BYTE PTR [rcx],cl
  405c25:	or     BYTE PTR [rdx],dl
  405c27:	xor    BYTE PTR [rsi],cl
  405c29:	or     DWORD PTR [rsi],ecx
  405c2b:	or     DWORD PTR [rcx],ecx
  405c2d:	sbb    BYTE PTR [rax],dl
  405c2f:	adc    dh,BYTE PTR [rax]
  405c31:	adc    BYTE PTR [rcx],cl
  405c33:	(bad)  
  405c34:	add    BYTE PTR [rbx],al
  405c36:	or     BYTE PTR [rdx],dl
  405c38:	xor    BYTE PTR [rcx],cl
  405c3a:	sbb    BYTE PTR [rax+rax*1],al
  405c3d:	add    DWORD PTR [rax],ecx
  405c3f:	sbb    BYTE PTR [rsi],cl
  405c41:	add    BYTE PTR [rax],cl
  405c43:	or     BYTE PTR [rdx],dl
  405c45:	and    DWORD PTR [rcx],ecx
  405c47:	or     DWORD PTR [rax],ebx
  405c49:	sbb    BYTE PTR [rax],dl
  405c4b:	sbb    BYTE PTR [rax],bl
  405c4d:	adc    BYTE PTR [rax],bl
  405c4f:	add    al,0x0
  405c51:	add    DWORD PTR [rcx],ecx
  405c53:	sbb    BYTE PTR [rax+rax*1],al
  405c56:	add    DWORD PTR [rax],ebx
  405c58:	sbb    BYTE PTR [rsi],cl
  405c5a:	add    BYTE PTR [rdi],al
  405c5c:	or     BYTE PTR [rdx],dl
  405c5e:	and    DWORD PTR [rcx],ecx
  405c60:	(bad)  
  405c61:	sbb    eax,0x18051d05
  405c66:	sbb    eax,0x3000605
  405c6b:	add    bl,BYTE PTR [rax]
  405c6d:	(bad)  
  405c6e:	(bad)  
  405c6f:	or     BYTE PTR [rax],al
  405c71:	add    eax,DWORD PTR [rdx]
  405c73:	sbb    BYTE PTR [rax],dl
  405c75:	(bad)  
  405c76:	adc    BYTE PTR [rcx],cl
  405c78:	add    eax,0x18020200
  405c7d:	or     DWORD PTR [rdx],ecx
  405c7f:	add    BYTE PTR [rdx+rax*1],al
  405c82:	sbb    BYTE PTR [rax],dl
  405c84:	adc    DWORD PTR [rcx+rcx*1],esp
  405c87:	adc    DWORD PTR [rax],ebp
  405c89:	or     eax,DWORD PTR [rax]
  405c8b:	(bad)  
  405c8c:	or     BYTE PTR [rax],cl
  405c8e:	sbb    BYTE PTR [rax],cl
  405c90:	or     BYTE PTR [rax],dl
  405c92:	sbb    BYTE PTR [rax],cl
  405c94:	sbb    BYTE PTR [rip+0x18010220],al        # 0x18415eba
  405c9a:	add    al,BYTE PTR [rbx]
  405c9c:	and    BYTE PTR [rax],al
  405c9e:	add    al,BYTE PTR [rax+rax*1]
  405ca1:	add    BYTE PTR [rdx],dl
  405ca3:	and    eax,0x12010005
  405ca8:	and    eax,0x1200408
  405cad:	add    DWORD PTR [rdx],eax
  405caf:	add    al,0x20
  405cb1:	add    DWORD PTR [rcx],eax
  405cb3:	(bad)  
  405cb4:	add    eax,0x11010120
  405cb9:	pop    rcx
  405cba:	add    al,0x20
  405cbc:	add    DWORD PTR [rcx],eax
  405cbe:	or     BYTE PTR [rax+0x2400a0],al
  405cc4:	add    BYTE PTR [rax+rax*4],al
  405cc7:	add    BYTE PTR [rax],al
  405cc9:	xchg   esp,eax
  405cca:	add    BYTE PTR [rax],al
  405ccc:	add    BYTE PTR [rsi],al
  405cce:	add    al,BYTE PTR [rax]
  405cd0:	add    BYTE PTR [rax],al
  405cd2:	and    al,0x0
  405cd4:	add    BYTE PTR [rdx+0x53],dl
  405cd7:	xor    DWORD PTR [r8],eax
  405cda:	add    al,0x0
  405cdc:	add    BYTE PTR [rcx],al
  405cde:	add    BYTE PTR [rcx],al
  405ce0:	add    BYTE PTR [rdi],ah
  405ce2:	(bad)  
  405ce3:	lods   eax,DWORD PTR ss:[rsi]
  405ce5:	outs   dx,BYTE PTR ds:[rsi]
  405ce6:	pop    rdi
  405ce7:	xchg   ebp,eax
  405ce8:	xchg   BYTE PTR [rdx-0x15ce2a3e],bh
  405cee:	mov    esp,0x6c66cc3a
  405cf3:	(bad)  
  405cf4:	mov    cs,eax
  405cf6:	jns    0x405cf2
  405cf8:	xchg   esp,eax
  405cf9:	clc    
  405cfa:	div    DWORD PTR [rax-0xdd082ce]
  405d00:	in     eax,dx
  405d01:	push   rdx
  405d02:	xor    al,0x48
  405d04:	clc    
  405d05:	cmp    al,0x3d
  405d07:	pop    rsp
  405d08:	pop    rbp
  405d09:	rcr    bh,cl
  405d0b:	(bad)  
  405d0c:	mov    esp,0x6b28c599
  405d11:	sub    al,0x12
  405d13:	push   rcx
  405d14:	(bad)  
  405d15:	mov    edi,0x2b24be5c
  405d1a:	popf   
  405d1b:	rex.B jne 0x405d25
  405d1e:	xor    dh,BYTE PTR [rdx+0x49e6ffbd]
  405d24:	(bad)  
  405d25:	out    dx,eax
  405d26:	mov    eax,0x526d52e5
  405d2b:	outs   dx,DWORD PTR ds:[rsi]
  405d2c:	fst    QWORD PTR [rbx]
  405d2e:	add    BYTE PTR [rbp-0xd842414],dl
  405d34:	adc    BYTE PTR [rax-0x27259364],al
  405d3a:	(bad)  
  405d3b:	rex.WRXB stos BYTE PTR es:[rdi],al
  405d3d:	(bad)  
  405d3e:	shl    BYTE PTR [rcx],0xa
  405d41:	ret    
  405d42:	retf   
  405d43:	movabs ds:0x7ffa2d7b562305aa,al
  405d4c:	loop   0x405d9e
  405d4e:	mov    bl,0xf
  405d50:	lods   al,BYTE PTR ds:[rsi]
  405d51:	mov    ebp,0x99ecd462
  405d56:	mov    ecx,0x7d7cc44a
  405d5b:	cmp    ebp,DWORD PTR [rax]
  405d5d:	icebp  
  405d5e:	mul    ah
  405d60:	enter  0x2006,0x2
  405d64:	(bad)  
  405d65:	(bad)  
  405d66:	adc    dl,BYTE PTR [rip+0xe030008]        # 0xe435d74
  405d6c:	adc    dh,BYTE PTR [rcx+0xe]
  405d6f:	sbb    eax,0x107041c
  405d74:	sbb    eax,0x31c
  405d79:	add    DWORD PTR [rsi],eax
  405d7b:	add    BYTE PTR [rcx],al
  405d7d:	adc    dh,BYTE PTR [rbp+0x11]
  405d80:	jns    0x405d85
  405d82:	and    BYTE PTR [rax],al
  405d84:	(bad)  
  405d85:	add    al,0x20
  405d87:	add    BYTE PTR [rdx],dl
  405d89:	jge    0x405d90
  405d8b:	and    BYTE PTR [rax],al
  405d8d:	adc    al,BYTE PTR [rax+0x2200781]
  405d93:	add    DWORD PTR [rsi],ecx
  405d95:	adc    al,BYTE PTR [rax+0x3000881]
  405d9b:	or     BYTE PTR [rsi],cl
  405d9d:	(bad)  
  405d9e:	adc    DWORD PTR [rax+0x12060385],eax
  405da4:	sbb    eax,0x12012005
  405da9:	sbb    eax,0x307070e
  405dae:	adc    bl,BYTE PTR [rip+0x4081d12]        # 0x4487ac6
  405db4:	and    BYTE PTR [rax],al
  405db6:	sbb    eax,0x7070c0e
  405dbb:	adc    ah,BYTE PTR [rip+0x1d120e09]        # 0x1d526bca
  405dc1:	add    bl,BYTE PTR [rip+0x708080e]        # 0x74865d5
  405dc7:	add    al,0x12
  405dc9:	xor    BYTE PTR [rax],bl
  405dcb:	sbb    BYTE PTR [rip+0x4000805],bl        # 0x44065d6
  405dd1:	add    DWORD PTR [rax],ebx
  405dd3:	sbb    eax,0x5080805
  405dd8:	(bad)  
  405dd9:	add    cl,BYTE PTR [rax]
  405ddb:	sbb    eax,0x1070305
  405de0:	(bad)  
  405de1:	or     BYTE PTR [rax],ah
  405de3:	add    al,0x1
  405de5:	add    al,BYTE PTR [rdx]
  405de7:	sbb    eax,0x20050805
  405dec:	add    BYTE PTR [rdx],dl
  405dee:	sub    BYTE PTR [rcx+0x8002003],0x6
  405df5:	and    BYTE PTR [rbx],al
  405df7:	add    DWORD PTR [rdx],eax
  405df9:	add    cl,BYTE PTR [rax]
  405dfb:	(bad)  
  405dfc:	and    BYTE PTR [rcx],al
  405dfe:	adc    al,BYTE PTR [rax+0x200508b1]
  405e04:	add    BYTE PTR [rcx],dl
  405e06:	cmp    BYTE PTR [rcx+0x11002005],0x80
  405e0d:	mov    ebp,0x12002005
  405e12:	add    ch,0x5
  405e15:	and    BYTE PTR [rax],al
  405e17:	adc    DWORD PTR [rax+0x2005c9],eax
  405e1d:	adc    DWORD PTR [rax+0x52010cd],eax
  405e23:	add    DWORD PTR [rcx],edx
  405e25:	adc    cl,0x12
  405e28:	add    ch,0x8
  405e2b:	adc    DWORD PTR [rax-0x327fee37],eax
  405e31:	(bad)  
  405e32:	and    BYTE PTR [rdx],al
  405e34:	add    DWORD PTR [rip+0x40805],ebx        # 0x44663f
  405e3a:	add    DWORD PTR [rax],ebx
  405e3c:	or     BYTE PTR [rax],cl
  405e3e:	add    BYTE PTR [rcx+rax*1],al
  405e41:	sbb    eax,0x8180805
  405e46:	add    al,0x0
  405e48:	add    DWORD PTR [rcx],eax
  405e4a:	sbb    BYTE PTR [rax],ah
  405e4c:	(bad)  
  405e4d:	or     eax,0x12a58012
  405e52:	sub    BYTE PTR [rcx+0x12a98012],0x80
  405e59:	test   eax,0x8a98012
  405e5e:	adc    al,BYTE PTR [rax-0x7fedf74b]
  405e64:	mov    ch,0x8
  405e66:	adc    al,BYTE PTR [rax+0x18051db5]
  405e6c:	add    al,0x7
  405e6e:	add    al,BYTE PTR [rdi]
  405e70:	or     DWORD PTR [rip+0xffffffff80120020],eax        # 0xffffffff80525e96
  405e76:	fld    QWORD PTR [rsi]
  405e78:	(bad)  
  405e79:	add    dl,BYTE PTR [rdx]
  405e7b:	sbb    ch,0x8
  405e7e:	add    al,0x7
  405e80:	add    DWORD PTR [rdx],edx
  405e82:	xor    BYTE PTR [rax+rax*1],al
  405e85:	add    DWORD PTR [rdx],eax
  405e87:	(bad)  
  405e88:	add    al,0x20
  405e8a:	add    DWORD PTR [rax],ecx
  405e8c:	add    eax,DWORD PTR [rip+0x80e0220]        # 0x84e60b2
  405e92:	or     BYTE PTR [rip+0xe020200],al        # 0xe426098
  405e98:	(bad)  
  405e99:	add    eax,0xe080307
  405e9e:	(bad)  
  405e9f:	add    eax,DWORD PTR [rdi]
  405ea1:	add    DWORD PTR [rax],ecx
  405ea3:	(bad)  
  405ea4:	and    BYTE PTR [rcx],al
  405ea6:	add    DWORD PTR [rcx],edx
  405ea8:	sub    ch,0x6
  405eab:	and    BYTE PTR [rcx],al
  405ead:	add    DWORD PTR [rcx],edx
  405eaf:	cmp    ch,0x1
  405eb2:	adc    eax,0x20040201
  405eb7:	add    DWORD PTR [rcx],eax
  405eb9:	sbb    BYTE PTR [rbx],al
  405ebb:	add    BYTE PTR [rax],al
  405ebd:	or     BYTE PTR [rip+0x8010220],al        # 0x84160e3
  405ec3:	(bad)  
  405ec4:	add    eax,DWORD PTR [rdi]
  405ec6:	add    DWORD PTR [rsi],ecx
  405ec8:	add    al,0x0
  405eca:	add    DWORD PTR [rsi],ecx
  405ecc:	sbb    BYTE PTR [rip+0x8180307],al        # 0x85861d9
  405ed2:	(bad)  
  405ed3:	add    eax,0x1
  405ed8:	add    BYTE PTR [rsi],dl
  405eda:	add    DWORD PTR [rax],eax
  405edc:	adc    DWORD PTR [rsi+0x69],eax
  405edf:	js     0x405f34
  405ee1:	jno    0x405f4f
  405ee3:	push   rdx
  405ee4:	imul   esi,DWORD PTR gs:[ebx+0x74],0x654b7972
  405eed:	jns    0x405eef
  405eef:	add    BYTE PTR [rax],dl
  405ef1:	add    DWORD PTR [rax],eax
  405ef3:	or     esi,DWORD PTR [rcx]
  405ef5:	xor    BYTE PTR [rsi],ch
  405ef7:	xor    BYTE PTR [rsi],ch
  405ef9:	xor    dh,BYTE PTR [rip+0x302e3133]        # 0x306e9032
  405eff:	add    BYTE PTR [rax],al
  405f01:	xor    DWORD PTR [rcx],eax
  405f03:	add    BYTE PTR [rcx+rsi*1],ch
  405f06:	xor    BYTE PTR [rsi],ch
  405f08:	xor    BYTE PTR [rsi],ch
  405f0a:	xor    dh,BYTE PTR [rip+0x302e3133]        # 0x306e9043
  405f10:	and    BYTE PTR [rax],ch
  405f12:	sub    BYTE PTR [rbx+0x61],cl
  405f15:	je     0x405f84
  405f17:	(bad)  
  405f18:	imul   ebx,DWORD PTR [rdi+0x50],0x4d5f5543
  405f1f:	(bad)  
  405f20:	imul   ebp,DWORD PTR [rsi+0x29],0x3039302e
  405f27:	xor    esi,DWORD PTR [rdx]
  405f29:	cmp    DWORD PTR [rip+0x35343031],ebp        # 0x35748f60
  405f2f:	and    BYTE PTR [rcx],ch
  405f31:	add    BYTE PTR [rax],al
  405f33:	add    QWORD PTR [r8],r8
  405f36:	rex.W
  405f37:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  405f3f:	je     0x405f61
  405f41:	push   rbx
  405f42:	push   rcx
  405f43:	rex.WR and BYTE PTR [rbx+0x65],r10b
  405f47:	jb     0x405fbf
  405f49:	gs jb  0x405f6c
  405f4c:	imul   esi,DWORD PTR [rbx+0x20],0x65722061
  405f53:	imul   esi,DWORD PTR [ebx+0x74],0x64657265
  405f5b:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  405f5f:	fs gs ins DWORD PTR es:[rdi],dx
  405f62:	(bad)  
  405f63:	jb     0x405fd0
  405f65:	and    BYTE PTR [rdi+0x66],ch
  405f68:	and    BYTE PTR [rbp+0x69],cl
  405f6b:	movsxd esi,DWORD PTR [rdx+0x6f]
  405f6e:	jae    0x405fdf
  405f70:	data16 je 0x405f93
  405f73:	rex.XB outs dx,DWORD PTR ds:[rsi]
  405f75:	jb     0x405fe7
  405f77:	outs   dx,DWORD PTR ds:[rsi]
  405f78:	jb     0x405fdb
  405f7a:	je     0x405fe5
  405f7c:	outs   dx,DWORD PTR ds:[rsi]
  405f7d:	outs   dx,BYTE PTR ds:[rsi]
  405f7e:	add    BYTE PTR cs:[rax],al
  405f81:	sub    DWORD PTR [rcx],eax
  405f83:	add    BYTE PTR [rcx*2+0x6f726369],ah
  405f8a:	jae    0x405ffb
  405f8c:	data16 je 0x405faf
  405f8f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  405f91:	jb     0x406003
  405f93:	and    BYTE PTR cs:[rcx+0x6c],al
  405f97:	ins    BYTE PTR es:[rdi],dx
  405f98:	and    BYTE PTR [rdx+0x69],dh
  405f9b:	addr32 push 0x72207374
  405fa1:	gs jae 0x406009
  405fa4:	jb     0x40601c
  405fa6:	gs fs add BYTE PTR cs:[rax],al
  405fab:	sbb    DWORD PTR [rcx],eax
  405fad:	add    BYTE PTR [rcx*2+0x6f726369],dl
  405fb4:	jae    0x406025
  405fb6:	data16 je 0x405fd9
  405fb9:	push   rbx
  405fba:	push   rcx
  405fbb:	rex.WR and BYTE PTR [rbx+0x65],r10b
  405fbf:	jb     0x406037
  405fc1:	gs jb  0x405fc4
  405fc4:	add    BYTE PTR [rdx],bl
  405fc6:	add    DWORD PTR [rax],eax
  405fc8:	adc    eax,0x7263694d
  405fcd:	outs   dx,DWORD PTR ds:[rsi]
  405fce:	jae    0x40603f
  405fd0:	data16 je 0x405ff3
  405fd3:	rex.XB outs dx,DWORD PTR ds:[rsi]
  405fd5:	jb     0x406047
  405fd7:	outs   dx,DWORD PTR ds:[rsi]
  405fd8:	jb     0x40603b
  405fda:	je     0x406045
  405fdc:	outs   dx,DWORD PTR ds:[rsi]
  405fdd:	outs   dx,BYTE PTR ds:[rsi]
  405fde:	add    BYTE PTR [rax],al
  405fe0:	or     BYTE PTR [rcx],al
  405fe2:	add    BYTE PTR [rdx],al
  405fe4:	add    BYTE PTR [rax],al
  405fe6:	add    BYTE PTR [rax],al
  405fe8:	add    BYTE PTR [rax],cl
  405fea:	add    DWORD PTR [rax],eax
  405fec:	or     BYTE PTR [rax],al
  405fee:	add    BYTE PTR [rax],al
  405ff0:	add    BYTE PTR [rax],al
  405ff2:	(bad)  
  405ff3:	add    DWORD PTR [rax],eax
  405ff5:	add    DWORD PTR [rax],eax
  405ff7:	push   rsp
  405ff8:	add    dl,BYTE PTR [rsi]
  405ffa:	push   rdi
  405ffb:	jb     0x40605e
  405ffd:	jo     0x40604d
  405fff:	outs   dx,DWORD PTR ds:[rsi]
  406000:	outs   dx,BYTE PTR ds:[rsi]
  406001:	rex.RB js 0x406067
  406004:	gs jo  0x40607b
  406007:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f726854
  40600e:	ja     0x406083
  406010:	add    DWORD PTR [rax],eax
  406012:	add    BYTE PTR [rax],al
  406014:	add    BYTE PTR [rax],al
  406016:	add    BYTE PTR [rax],al
  406018:	scas   al,BYTE PTR es:[rdi]
  406019:	mov    bh,0xcf
  40601b:	rex.WB add BYTE PTR [r8],al
  40601e:	add    BYTE PTR [rax],al
  406020:	add    al,BYTE PTR [rax]
  406022:	add    BYTE PTR [rax],al
  406024:	add    BYTE PTR cs:[rax],al
  406027:	add    BYTE PTR [rax],dh
  406029:	(bad)  
  40602a:	add    BYTE PTR [rax],al
  40602c:	xor    BYTE PTR [rax+0x0],dl
  40602f:	add    BYTE PTR [rdx+0x53],dl
  406032:	rex.R push rbx
  406034:	sub    r12b,BYTE PTR [rax+rbp*4+0xf]
  406039:	sub    DWORD PTR [rsi+0x42],esp
  40603c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40603d:	add    al,0x2d
  40603f:	rex.RXB jns 0x406049
  406042:	icebp  
  406043:	rex.WRXB add QWORD PTR [r8],r8
  406046:	add    BYTE PTR [rax],al
  406048:	rex.RX imul r15d,DWORD PTR [rax+0x53],0x65526c71
  406050:	imul   esi,DWORD PTR [ebx+0x74],0x654b7972
  406058:	jns    0x406088
  40605a:	jo     0x4060c0
  40605c:	(bad)  
	...

Disassembly of section .rsrc:

0000000000408000 <.rsrc>:
	...
  40800c:	add    BYTE PTR [rax],al
  40800e:	add    al,0x0
  408010:	add    eax,DWORD PTR [rax]
  408012:	add    BYTE PTR [rax],al
  408014:	xor    BYTE PTR [rax],al
  408016:	add    BYTE PTR [rax+0xe],al
  40801c:	jo     0x40801e
  40801e:	add    BYTE PTR [rax+0x10],al
  408024:	mov    BYTE PTR [rax],al
  408026:	add    BYTE PTR [rax+0x18],al
  40802c:	movabs al,ds:0x800000
	...
  40803d:	add    BYTE PTR [rsi],al
  40803f:	add    BYTE PTR [rcx],al
  408041:	add    BYTE PTR [rax],al
  408043:	add    BYTE PTR [rax+0x2800000],bh
  408049:	add    BYTE PTR [rax],al
  40804b:	add    al,dl
  40804d:	add    BYTE PTR [rax],al
  40804f:	add    BYTE PTR [rbx],0x0
  408052:	add    BYTE PTR [rax],al
  408054:	call   0x4c08059
  408059:	add    BYTE PTR [rax],al
  40805b:	add    BYTE PTR [rax],al
  40805d:	add    DWORD PTR [rax],eax
  40805f:	add    BYTE PTR [rip+0x18000000],0x1        # 0x18408066
  408066:	add    BYTE PTR [rax+0x6],al
  40806c:	xor    BYTE PTR [rcx],al
  40806e:	add    BYTE PTR [rax+0x0],al
	...
  40807c:	add    BYTE PTR [rax],al
  40807e:	add    DWORD PTR [rax],eax
  408080:	add    BYTE PTR gs:[rax],al
  408083:	add    BYTE PTR [rax+0x1],cl
  408086:	add    BYTE PTR [rax+0x0],al
	...
  408094:	add    BYTE PTR [rax],al
  408096:	add    DWORD PTR [rax],eax
  408098:	add    DWORD PTR [rax],eax
  40809a:	add    BYTE PTR [rax],al
  40809c:	(bad)  
  40809d:	add    DWORD PTR [rax],eax
  40809f:	add    BYTE PTR [rax],0x0
	...
  4080ae:	add    DWORD PTR [rax],eax
  4080b0:	add    DWORD PTR [rax],eax
  4080b2:	add    BYTE PTR [rax],al
  4080b4:	js     0x4080b7
  4080b6:	add    BYTE PTR [rax+0x0],al
	...
  4080c4:	add    BYTE PTR [rax],al
  4080c6:	add    DWORD PTR [rax],eax
  4080c8:	or     DWORD PTR [rax+rax*1],eax
  4080cb:	add    BYTE PTR [rax+0x1],dl
	...
  4080dd:	add    BYTE PTR [rcx],al
  4080df:	add    BYTE PTR [rcx],cl
  4080e1:	add    al,0x0
  4080e3:	add    BYTE PTR [rax+0x1],ah
	...
  4080f5:	add    BYTE PTR [rcx],al
  4080f7:	add    BYTE PTR [rcx],cl
  4080f9:	add    al,0x0
  4080fb:	add    BYTE PTR [rax+0x1],dh
	...
  40810d:	add    BYTE PTR [rcx],al
  40810f:	add    BYTE PTR [rcx],cl
  408111:	add    al,0x0
  408113:	add    al,al
  408115:	add    DWORD PTR [rax],eax
	...
  408123:	add    BYTE PTR [rax],al
  408125:	add    BYTE PTR [rcx],al
  408127:	add    BYTE PTR [rcx],cl
  408129:	add    al,0x0
  40812b:	add    al,dl
  40812d:	add    DWORD PTR [rax],eax
	...
  40813b:	add    BYTE PTR [rax],al
  40813d:	add    BYTE PTR [rcx],al
  40813f:	add    BYTE PTR [rcx],cl
  408141:	add    al,0x0
  408143:	add    al,ah
  408145:	add    DWORD PTR [rax],eax
	...
  408153:	add    BYTE PTR [rax],al
  408155:	add    BYTE PTR [rcx],al
  408157:	add    BYTE PTR [rcx],cl
  408159:	add    al,0x0
  40815b:	add    al,dh
  40815d:	add    DWORD PTR [rax],eax
	...
  40816b:	add    BYTE PTR [rax],al
  40816d:	add    BYTE PTR [rcx],al
  40816f:	add    BYTE PTR [rcx],cl
  408171:	add    al,0x0
  408173:	add    BYTE PTR [rax],al
  408175:	add    al,BYTE PTR [rax]
	...
  408183:	add    BYTE PTR [rax],al
  408185:	add    BYTE PTR [rcx],al
  408187:	add    BYTE PTR [rcx],cl
  408189:	add    al,0x0
  40818b:	add    BYTE PTR [rax],dl
  40818d:	add    al,BYTE PTR [rax]
  40818f:	add    al,ah
  408191:	test   BYTE PTR [rax],al
  408193:	add    al,ch
  408195:	add    al,BYTE PTR [rax]
	...
  40819f:	add    al,cl
  4081a1:	xchg   DWORD PTR [rax],eax
  4081a3:	add    BYTE PTR [rax],ch
  4081a5:	add    DWORD PTR [rax],eax
	...
  4081af:	add    al,dh
  4081b1:	mov    BYTE PTR [rax],al
  4081b3:	add    BYTE PTR [rax+0x8],ch
  4081b9:	add    BYTE PTR [rax],al
  4081bb:	add    BYTE PTR [rax],al
  4081bd:	add    BYTE PTR [rax],al
  4081bf:	add    BYTE PTR [rax+0x68000091],bl
  4081c5:	add    eax,0x0
  4081ca:	add    BYTE PTR [rax],al
  4081cc:	add    BYTE PTR [rax],al
  4081ce:	add    BYTE PTR [rax],al
  4081d0:	add    BYTE PTR [rdi+0x10a80000],dl
	...
  4081de:	add    BYTE PTR [rax],al
  4081e0:	test   al,0xa7
  4081e2:	add    BYTE PTR [rax],al
  4081e4:	push   0x4
  4081e9:	add    BYTE PTR [rax],al
  4081eb:	add    BYTE PTR [rax],al
  4081ed:	add    BYTE PTR [rax],al
  4081ef:	add    BYTE PTR [rax],dl
  4081f1:	lods   al,BYTE PTR ds:[rsi]
  4081f2:	add    BYTE PTR [rax],al
  4081f4:	pop    rdx
	...
  4081fd:	add    BYTE PTR [rax],al
  4081ff:	add    BYTE PTR [rax-0x54],dh
  408202:	add    BYTE PTR [rax],al
  408204:	(bad)  
  408205:	add    al,0x0
	...
  40820f:	add    BYTE PTR [rax],ah
  408211:	(bad)  
  408212:	add    BYTE PTR [rax],al
  408214:	mov    esi,0x2
  408219:	add    BYTE PTR [rax],al
  40821b:	add    BYTE PTR [rax],al
  40821d:	add    BYTE PTR [rax],al
  40821f:	add    BYTE PTR [rdi+rdi*1],bh
  408222:	js     0x408291
  408224:	ins    BYTE PTR es:[rdi],dx
  408225:	and    BYTE PTR [rsi+0x65],dh
  408228:	jb     0x40829d
  40822a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  408231:	xor    BYTE PTR [rdx],ah
  408233:	and    BYTE PTR [rbp+0x6e],ah
  408236:	movsxd ebp,DWORD PTR [rdi+0x64]
  408239:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
  408240:	rex.RX sub eax,0x73202238
  408246:	je     0x4082a9
  408248:	outs   dx,BYTE PTR ds:[rsi]
  408249:	fs (bad) 
  40824b:	ins    BYTE PTR es:[rdi],dx
  40824c:	outs   dx,DWORD PTR ds:[rsi]
  40824d:	outs   dx,BYTE PTR ds:[rsi]
  40824e:	gs cmp eax,0x73657922
  408254:	and    bh,BYTE PTR [rdi]
  408256:	ds or  eax,0x2d213c0a
  40825c:	sub    eax,0x706f4320
  408261:	jns    0x4082d5
  408263:	imul   esp,DWORD PTR [rdi+0x68],0xa9c22074
  40826a:	and    BYTE PTR [rcx],dh
  40826c:	cmp    DWORD PTR [rax],edi
  40826e:	xor    DWORD PTR [rip+0x31303032],ebp        # 0x3170b2a6
  408274:	and    BYTE PTR [rbp+0x69],cl
  408277:	movsxd esi,DWORD PTR [rdx+0x6f]
  40827a:	jae    0x4082eb
  40827c:	data16 je 0x40829f
  40827f:	rex.XB outs dx,DWORD PTR ds:[rsi]
  408281:	jb     0x4082f3
  408283:	outs   dx,DWORD PTR ds:[rsi]
  408284:	jb     0x4082e7
  408286:	je     0x4082f1
  408288:	outs   dx,DWORD PTR ds:[rsi]
  408289:	outs   dx,BYTE PTR ds:[rsi]
  40828a:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0xa4dc0bd
  408290:	cmp    al,0x61
  408292:	jae    0x408307
  408294:	gs ins DWORD PTR es:[rdi],dx
  408296:	(bad)  
  408297:	ins    BYTE PTR es:[rdi],dx
  408298:	jns    0x4082ba
  40829a:	js     0x408309
  40829c:	ins    BYTE PTR es:[rdi],dx
  40829d:	outs   dx,BYTE PTR ds:[rsi]
  40829e:	jae    0x4082dd
  4082a0:	and    dh,BYTE PTR [rbp+0x72]
  4082a3:	outs   dx,BYTE PTR ds:[rsi]
  4082a4:	cmp    dh,BYTE PTR [rbx+0x63]
  4082a7:	push   0x73616d65
  4082ac:	sub    eax,0x7263696d
  4082b1:	outs   dx,DWORD PTR ds:[rsi]
  4082b2:	jae    0x408323
  4082b4:	data16 je 0x4082e4
  4082b7:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4082ba:	cmp    ah,BYTE PTR [rcx+0x73]
  4082bd:	ins    DWORD PTR es:[rdi],dx
  4082be:	cs jbe 0x4082f2
  4082c1:	and    cl,BYTE PTR [rip+0x616d200a]        # 0x61ada2d1
  4082c7:	outs   dx,BYTE PTR ds:[rsi]
  4082c8:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
  4082cf:	jb     0x408344
  4082d1:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  4082d8:	xor    BYTE PTR [rdx],ah
  4082da:	and    BYTE PTR ds:[rip+0x200a0d0a],cl        # 0x204a8feb
  4082e1:	and    BYTE PTR [rcx+riz*2],bh
  4082e4:	jae    0x408359
  4082e6:	gs ins DWORD PTR es:[rdi],dx
  4082e8:	(bad)  
  4082e9:	ins    BYTE PTR es:[rdi],dx
  4082ea:	jns    0x408335
  4082ec:	fs outs dx,BYTE PTR gs:[rsi]
  4082ef:	je     0x40835a
  4082f1:	je     0x40836c
  4082f3:	and    BYTE PTR [rsi+0x65],dh
  4082f6:	jb     0x40836b
  4082f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  4082ff:	xor    BYTE PTR [rsi],ch
  408301:	xor    BYTE PTR [rsi],ch
  408303:	xor    BYTE PTR [rdx],ah
  408305:	or     eax,0x2020200a
  40830a:	and    BYTE PTR [rax],ah
  40830c:	jo     0x408380
  40830e:	outs   dx,DWORD PTR ds:[rsi]
  40830f:	movsxd esp,DWORD PTR [rbp+0x73]
  408312:	jae    0x408383
  408314:	jb     0x408357
  408316:	jb     0x40837b
  408318:	push   0x63657469
  40831d:	je     0x408394
  40831f:	jb     0x408386
  408321:	cmp    eax,0x646d6122
  408326:	ss xor al,0x22
  408329:	or     eax,0x2020200a
  40832e:	and    BYTE PTR [rax],ah
  408330:	outs   dx,BYTE PTR ds:[rsi]
  408331:	(bad)  
  408332:	ins    DWORD PTR es:[rdi],dx
  408333:	gs cmp eax,0x78694622
  408339:	push   rbx
  40833a:	jno    0x4083a8
  40833c:	push   rdx
  40833d:	imul   esi,DWORD PTR gs:[ebx+0x74],0x654b7972
  408346:	jns    0x40836a
  408348:	or     eax,0x2020200a
  40834d:	and    BYTE PTR [rax],ah
  40834f:	je     0x4083ca
  408351:	jo     0x4083b8
  408353:	cmp    eax,0x6e697722
  408358:	xor    esi,DWORD PTR [rdx]
  40835a:	and    ch,BYTE PTR [rdi]
  40835c:	and    BYTE PTR ds:[rip+0x200a0d0a],cl        # 0x204a906d
  408363:	and    BYTE PTR [rsp+riz*2],bh
  408366:	gs jae 0x4083cc
  408369:	jb     0x4083d4
  40836b:	jo     0x4083e1
  40836d:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c51533e
  408374:	and    BYTE PTR [rbx+0x65],dl
  408377:	je     0x4083ee
  408379:	jo     0x4083b7
  40837b:	(bad)  
  40837c:	fs gs jae 0x4083e3
  408380:	jb     0x4083eb
  408382:	jo     0x4083f8
  408384:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0d203e
  40838b:	or     eax,0x3c20200a
  408390:	and    DWORD PTR [rip+0x6449202d],ebp        # 0x6489a3c3
  408396:	outs   dx,BYTE PTR gs:[rsi]
  408398:	je     0x408403
  40839a:	data16 jns 0x4083bd
  40839d:	je     0x408407
  40839f:	and    BYTE PTR gs:[rcx+0x70],ah
  4083a3:	jo     0x408411
  4083a5:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  4083ac:	and    BYTE PTR [rbx+0x65],dh
  4083af:	movsxd esi,DWORD PTR [rbp+0x72]
  4083b2:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
  4083ba:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
  4083c1:	jae    0x4083f1
  4083c3:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0xa4dc1f6
  4083c9:	or     eax,0x3c20200a
  4083ce:	je     0x408442
  4083d0:	jne    0x408445
  4083d2:	je     0x40841d
  4083d4:	outs   dx,BYTE PTR ds:[rsi]
  4083d5:	outs   dx,WORD PTR ds:[rsi]
  4083d7:	and    BYTE PTR [rax+0x6d],bh
  4083da:	ins    BYTE PTR es:[rdi],dx
  4083db:	outs   dx,BYTE PTR ds:[rsi]
  4083dc:	jae    0x40841b
  4083de:	and    dh,BYTE PTR [rbp+0x72]
  4083e1:	outs   dx,BYTE PTR ds:[rsi]
  4083e2:	cmp    dh,BYTE PTR [rbx+0x63]
  4083e5:	push   0x73616d65
  4083ea:	sub    eax,0x7263696d
  4083ef:	outs   dx,DWORD PTR ds:[rsi]
  4083f0:	jae    0x408461
  4083f2:	data16 je 0x408422
  4083f5:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4083f8:	cmp    ah,BYTE PTR [rcx+0x73]
  4083fb:	ins    DWORD PTR es:[rdi],dx
  4083fc:	cs jbe 0x408431
  4083ff:	and    bh,BYTE PTR [rsi]
  408401:	or     eax,0x2020200a
  408406:	and    BYTE PTR [rbx+rsi*2],bh
  408409:	movsxd esi,DWORD PTR gs:[rbp+0x72]
  40840d:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
  408415:	and    BYTE PTR [rax],ah
  408417:	and    BYTE PTR [rax],ah
  408419:	cmp    al,0x72
  40841b:	gs jno 0x408493
  40841e:	gs jae 0x408495
  408421:	gs fs push rax
  408424:	jb     0x40848f
  408426:	jbe    0x408491
  408428:	ins    BYTE PTR es:[rdi],dx
  408429:	gs addr32 gs jae 0x40846c
  40842e:	or     eax,0x2020200a
  408433:	and    BYTE PTR [rax],ah
  408435:	and    BYTE PTR [rax],ah
  408437:	and    BYTE PTR [rdx+rsi*2],bh
  40843a:	gs jno 0x4084b2
  40843d:	gs jae 0x4084b4
  408440:	gs fs rex.RB js 0x4084aa
  408445:	movsxd esi,DWORD PTR [rbp+0x74]
  408448:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
  40844f:	ins    BYTE PTR es:[rdi],dx
  408450:	or     eax,0x2020200a
  408455:	and    BYTE PTR [rax],ah
  408457:	and    BYTE PTR [rax],ah
  408459:	and    BYTE PTR [rax],ah
  40845b:	and    BYTE PTR [rbp+riz*2+0x76],ch
  40845f:	gs ins BYTE PTR es:[rdi],dx
  408461:	cmp    eax,0x49736122
  408466:	outs   dx,BYTE PTR ds:[rsi]
  408467:	jbe    0x4084d8
  408469:	imul   esp,DWORD PTR [rbp+0x72],0x22
  40846d:	or     eax,0x2020200a
  408472:	and    BYTE PTR [rax],ah
  408474:	and    BYTE PTR [rax],ah
  408476:	and    BYTE PTR [rax],ah
  408478:	and    BYTE PTR [rbp+0x69],dh
  40847b:	movsxd esp,DWORD PTR [r11+0x65]
  40847f:	jae    0x4084f4
  408481:	cmp    eax,0x6c616622
  408486:	jae    0x4084ed
  408488:	and    ch,BYTE PTR [rdi]
  40848a:	ds or  eax,0x2020200a
  408490:	and    BYTE PTR [rax],ah
  408492:	and    BYTE PTR [rax],ah
  408494:	and    BYTE PTR [rdi+rbp*1],bh
  408497:	jb     0x4084fe
  408499:	jno    0x408510
  40849b:	gs jae 0x408512
  40849e:	gs fs push rax
  4084a1:	jb     0x40850c
  4084a3:	jbe    0x40850e
  4084a5:	ins    BYTE PTR es:[rdi],dx
  4084a6:	gs addr32 gs jae 0x4084e9
  4084ab:	or     eax,0x2020200a
  4084b0:	and    BYTE PTR [rax],ah
  4084b2:	and    BYTE PTR [rax],ah
  4084b4:	cmp    al,0x2f
  4084b6:	jae    0x40851d
  4084b8:	movsxd esi,DWORD PTR [rbp+0x72]
  4084bb:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
  4084c3:	cmp    al,0x2f
  4084c5:	je     0x408539
  4084c7:	jne    0x40853c
  4084c9:	je     0x408514
  4084cb:	outs   dx,BYTE PTR ds:[rsi]
  4084cc:	outs   dx,WORD PTR ds:[rsi]
  4084ce:	ds or  eax,0x3c0a0d0a
  4084d4:	(bad)  
  4084d5:	(bad)  
  4084d6:	jae    0x40854b
  4084d8:	gs ins DWORD PTR es:[rdi],dx
  4084da:	(bad)  
  4084db:	ins    BYTE PTR es:[rdi],dx
  4084dc:	jns    0x40851c
  4084de:	add    BYTE PTR [rax],al
  4084e0:	sub    BYTE PTR [rax],al
  4084e2:	add    BYTE PTR [rax],al
  4084e4:	and    BYTE PTR [rax],al
  4084e6:	add    BYTE PTR [rax],al
  4084e8:	add    BYTE PTR [rax],al
  4084eb:	add    BYTE PTR [rcx],al
  4084ed:	add    BYTE PTR [rax+rax*1],al
  4084f0:	add    BYTE PTR [rax],al
  4084f2:	add    BYTE PTR [rax],al
  4084f4:	add    BYTE PTR [rdx],al
	...
  40850e:	add    BYTE PTR [rax],0x0
  408511:	add    BYTE PTR [rax],0x0
  408514:	add    BYTE PTR [rax+0x800080],al
  40851a:	add    BYTE PTR [rax],al
  40851c:	add    BYTE PTR [rax],0x80
  40851f:	add    BYTE PTR [rax-0x7fffff80],al
  408525:	add    BYTE PTR [rax-0x3f3f4000],0x0
  40852c:	add    BYTE PTR [rax],al
  40852e:	inc    DWORD PTR [rax]
  408530:	add    bh,bh
  408532:	add    BYTE PTR [rax],al
  408534:	add    bh,bh
  408536:	inc    DWORD PTR [rax]
  408538:	inc    DWORD PTR [rax]
  40853a:	add    BYTE PTR [rax],al
  40853c:	inc    DWORD PTR [rax]
  40853e:	inc    DWORD PTR [rax]
  408540:	(bad)  
  408541:	inc    DWORD PTR [rax]
  408543:	add    bh,bh
  408545:	(bad)  
  408546:	inc    DWORD PTR [rax]
  408548:	add    BYTE PTR [rax],al
  40854a:	add    BYTE PTR [rax],al
  40854c:	add    BYTE PTR [rax],al
  40854e:	add    BYTE PTR [rdi],ah
  408550:	and    dh,BYTE PTR [rdx+0x36]
  408553:	and    esp,DWORD PTR [rbx+0x62]
  408556:	add    BYTE PTR ss:[rax],al
  408559:	add    BYTE PTR [rax],al
  40855b:	add    BYTE PTR [rax],al
  40855d:	add    BYTE PTR [rax],al
  40855f:	(bad)  
  408560:	jae    0x4085d5
  408562:	movsxd esp,DWORD PTR [rdx+0x72]
  408565:	and    eax,DWORD PTR ss:[rax]
  408568:	add    BYTE PTR [rax],al
  40856a:	add    BYTE PTR [rax],al
  40856c:	add    BYTE PTR [rax],al
  40856e:	add    BYTE PTR [rax+0x77],bh
  408571:	es ja  0x4085a7
  408574:	(bad)  
  408575:	(bad)  
  408576:	add    BYTE PTR ss:[rax],al
  408579:	add    BYTE PTR [rax],al
  40857b:	add    BYTE PTR [rax],al
  40857d:	add    BYTE PTR [rax],al
  40857f:	sub    BYTE PTR [rdx+0x78],bh
  408582:	and    esi,DWORD PTR [rsi+0x3a]
  408585:	jb     0x4085ea
	...
  40858f:	(bad)  
  408590:	(bad)  
  408591:	clc    
  408592:	(bad)  
  408593:	jp     0x40860c
  408595:	xor    esp,DWORD PTR [rsi+0x0]
  40859b:	add    BYTE PTR [rax],al
  40859d:	add    BYTE PTR [rax],al
  40859f:	js     0x408530
  4085a1:	dec    DWORD PTR [rax+0x72638870]
  4085a7:	add    BYTE PTR [rax],al
  4085a9:	add    BYTE PTR [rax],al
  4085ab:	add    BYTE PTR [rax],al
  4085ad:	add    BYTE PTR [rdi],dl
  4085af:	js     0x40862c
  4085b1:	(bad)  
  4085b2:	clc    
  4085b3:	vpperm ymm0,ymm11,YMMWORD PTR [r8],ymm0
  4085b9:	add    BYTE PTR [rax],al
  4085bb:	add    BYTE PTR [rax],al
  4085bd:	(bad)  
  4085be:	jae    0x4085f8
  4085c0:	mov    bh,BYTE PTR [rdi-0x1]
  4085c3:	(bad)  
  4085c4:	clc    
  4085c5:	(bad)  
  4085c6:	add    BYTE PTR es:[rax],al
  4085c9:	add    BYTE PTR [rax],al
  4085cb:	add    BYTE PTR [rbx-0x8],dh
  4085ce:	mov    BYTE PTR [rax-0x78],bh
  4085d1:	ja     0x4085d2
  4085d3:	(bad)  
  4085d4:	clc    
  4085d5:	jae    0x40863a
  4085d7:	add    BYTE PTR [rax],al
  4085d9:	add    BYTE PTR [rax],al
  4085db:	ja     0x408565
  4085dd:	clc    
  4085de:	mov    bh,0x38
  4085e0:	xchg   DWORD PTR [rdi+0x77f8fff8],esp
  4085e6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4085e7:	add    BYTE PTR [rax],al
  4085e9:	add    BYTE PTR [rdi],al
  4085eb:	mov    eax,0x78878f8f
  4085f0:	mov    BYTE PTR [rdi-0x1],bh
  4085f3:	(bad)  
  4085f4:	(bad)  
  4085f5:	jp     0x408669
  4085f7:	add    BYTE PTR [rax],al
  4085f9:	add    BYTE PTR [rdi],al
  4085fb:	mov    edi,DWORD PTR [rdi-0x78]
  4085fe:	mov    eax,0xff8f8a38
  408603:	(bad)  
  408604:	push   QWORD PTR [rdi+0x37]
  408607:	add    BYTE PTR [rax],al
  408609:	add    BYTE PTR [rdi],al
  40860b:	mov    BYTE PTR [rdi-0x77877871],cl
  408611:	xchg   DWORD PTR [rdi+0x728a8787],eax
  408617:	add    BYTE PTR [rax],al
  408619:	add    BYTE PTR [rdi],al
  40861b:	mov    bh,0xbf
  40861d:	sti    
  40861e:	js     0x408658
  408620:	mov    BYTE PTR [rax-0x77777778],cl
  408626:	jb     0x408628
  408628:	add    BYTE PTR [rax],al
  40862a:	(bad)  
  40862b:	mov    BYTE PTR [rax-0x58887408],cl
  408631:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  408632:	(bad)  
  408633:	movabs ds:0x8b070000007a7a6a,eax
  40863c:	mov    BYTE PTR [rbx+0x73318788],cl
  408642:	jae    0x4086b7
  408644:	jae    0x40867b
  408646:	add    BYTE PTR [rax],al
  408648:	add    BYTE PTR [rax],al
  40864a:	(bad)  
  40864b:	mov    BYTE PTR [rax+0x33888bff],cl
  408651:	(bad)  
  408652:	xor    esi,DWORD PTR [rbx+0x39]
  408655:	jae    0x408657
  408657:	add    BYTE PTR [rax],al
  408659:	add    BYTE PTR [rdi],al
  40865b:	mov    eax,0x8b88ff88
  408660:	jno    0x408673
  408662:	(bad)  
  408663:	(bad)  
  408664:	(bad)  
  408665:	xor    eax,0x0
  40866a:	(bad)  
  40866b:	mov    BYTE PTR [rdi+0x3788b8f8],bh
  408671:	ja     0x4086a4
  408673:	xor    DWORD PTR [rdi],esi
  408675:	adc    eax,DWORD PTR [rax]
  408677:	add    BYTE PTR [rax],al
  408679:	add    BYTE PTR [rdi],al
  40867b:	mov    edi,0x3b778b88
  408680:	push   rdi
  408681:	mov    BYTE PTR [rdi+0x73],dh
  408684:	adc    DWORD PTR [rip+0x0],esi        # 0x40868a
  40868a:	(bad)  
  40868b:	xchg   DWORD PTR [rdi+0x33988888],esi
  408691:	mov    eax,0x3177888b
  408696:	add    BYTE PTR [rax],al
  408698:	add    BYTE PTR [rax],al
  40869a:	mov    edi,DWORD PTR [rax-0x78]
  40869d:	mov    BYTE PTR [rdi+0x787b9883],dh
  4086a3:	mov    eax,DWORD PTR [rdi+0x7077]
  4086a9:	jnp    0x40863a
  4086ab:	mov    BYTE PTR [rbx+0x7b337979],cl
  4086b1:	js     0x40864b
  4086b3:	cmp    BYTE PTR [rbx-0x75],bh
  4086b6:	xchg   DWORD PTR [rax],eax
  4086b8:	(bad)  
  4086b9:	xchg   DWORD PTR [rdi-0x49],esi
  4086bc:	jns    0x408731
  4086be:	(bad)  
  4086bf:	(bad)  
  4086c0:	cwde   
  4086c1:	cwde   
  4086c2:	mov    bh,0x89
  4086c4:	xchg   DWORD PTR [rdi+0x8073],eax
  4086ca:	or     BYTE PTR [rdi-0x4d],dh
  4086cd:	jae    0x408748
  4086cf:	jae    0x408709
  4086d1:	mov    bh,0x8b
  4086d3:	mov    edi,DWORD PTR [rbx+0x7b]
  4086d6:	add    BYTE PTR [rax],al
  4086d8:	add    BYTE PTR [rax],al
  4086da:	jnp    0x408664
  4086dc:	ja     0x408757
  4086de:	(bad)  
  4086df:	cmp    DWORD PTR [rdi-0x77],esi
  4086e2:	xor    DWORD PTR [rdi+0x78],0xffffff98
  4086e6:	jo     0x4086e8
  4086e8:	add    BYTE PTR [rdi],al
  4086ea:	mov    BYTE PTR [rax+0x733bb7b8],cl
  4086f0:	(bad)  
  4086f1:	mov    eax,0x88b7b738
  4086f6:	mov    bh,0x0
  4086f8:	add    BYTE PTR [rax-0x74777701],cl
  4086fe:	xchg   DWORD PTR [rdi],esi
  408700:	cmp    BYTE PTR [rdi-0x48],dh
  408703:	mov    BYTE PTR [rax+0x7088b8],cl
  408709:	cmp    BYTE PTR [rax-0x74777771],cl
  40870f:	mov    DWORD PTR [rbx-0x77477748],eax
  408715:	mov    BYTE PTR [rbx-0x48ffff90],cl
  40871b:	mov    eax,0x8b8888f8
  408720:	js     0x40879a
  408722:	mov    BYTE PTR [rax+0x70b888],cl
  408728:	add    BYTE PTR [rax],al
  40872a:	add    BYTE PTR [rax],cl
  40872c:	cmp    ecx,DWORD PTR [rax+0x7b0070b8]
  408732:	mov    BYTE PTR [rax+0xb7],cl
  408738:	add    BYTE PTR [rax],al
  40873a:	add    BYTE PTR [rax],al
  40873c:	add    BYTE PTR [rdi+0x89],al
  408742:	jnp    0x4087bb
  408744:	add    BYTE PTR [rax],al
  408746:	add    BYTE PTR [rax],al
  408748:	(bad)  
  408749:	cld    
  40874a:	add    BYTE PTR [rbx],al
  40874c:	(bad)  
  40874d:	cld    
  40874e:	add    BYTE PTR [rbx],al
  408750:	(bad)  
  408751:	cld    
  408752:	add    BYTE PTR [rbx],al
  408754:	(bad)  
  408755:	cld    
  408756:	add    BYTE PTR [rbx],al
  408758:	(bad)  
  408759:	cld    
  40875a:	add    BYTE PTR [rbx],al
  40875c:	(bad)  
  40875d:	cld    
  40875e:	add    BYTE PTR [rbx],al
  408760:	push   rax
  408762:	add    BYTE PTR [rbx],al
  408764:	inc    eax
  408766:	add    BYTE PTR [rbx],al
  408768:	inc    DWORD PTR [rax]
  40876a:	add    BYTE PTR [rbx],al
  40876c:	cld    
  40876d:	add    BYTE PTR [rax],al
  40876f:	add    edi,eax
  408771:	add    BYTE PTR [rax],al
  408773:	add    edi,eax
  408775:	add    BYTE PTR [rax],al
  408777:	add    edi,eax
  408779:	add    BYTE PTR [rax],al
  40877b:	add    edi,eax
  40877d:	add    BYTE PTR [rax],al
  40877f:	add    edi,eax
  408781:	add    BYTE PTR [rax],al
  408783:	add    edi,eax
  408785:	add    BYTE PTR [rax],al
  408787:	psubb  mm0,QWORD PTR [rax]
  40878a:	add    BYTE PTR [rdi],cl
  40878c:	clc    
  40878d:	add    BYTE PTR [rax],al
  40878f:	psubb  mm0,QWORD PTR [rax]
  408792:	add    BYTE PTR [rdi],cl
  408794:	clc    
  408795:	add    BYTE PTR [rax],al
  408797:	psubb  mm0,QWORD PTR [rax]
  40879a:	add    BYTE PTR [rdi],cl
  40879c:	lock add BYTE PTR [rax],al
  40879f:	(bad)  
  4087a0:	rol    BYTE PTR [rax],0x0
  4087a3:	add    eax,DWORD PTR [rax-0x7ff0000]
  4087a9:	add    BYTE PTR [rax],al
  4087ab:	(bad)  
  4087ad:	add    BYTE PTR [rax],al
  4087af:	(bad)  
  4087b0:	loopne 0x4087b2
  4087b2:	add    BYTE PTR [rbx],al
  4087b4:	rol    BYTE PTR [rax],0x0
  4087b7:	add    eax,eax
  4087b9:	add    BYTE PTR [rax],al
  4087bb:	add    eax,esi
  4087bd:	add    BYTE PTR [rax],al
  4087bf:	(bad)  
  4087c0:	inc    BYTE PTR [rcx]
  4087c2:	sar    BYTE PTR [rdi],0xff
  4087c5:	ret    
  4087c6:	lock jmp FWORD PTR [rax]
  4087c9:	add    BYTE PTR [rax],al
  4087cb:	add    BYTE PTR [rax],dl
  4087cd:	add    BYTE PTR [rax],al
  4087cf:	add    BYTE PTR [rax],ah
  4087d1:	add    BYTE PTR [rax],al
  4087d3:	add    BYTE PTR [rcx],al
  4087d5:	add    BYTE PTR [rax+rax*1],al
  4087d8:	add    BYTE PTR [rax],al
  4087da:	add    BYTE PTR [rax],al
  4087dc:	add    BYTE PTR [rax],0x0
	...
  4087f3:	add    BYTE PTR [rax],al
  4087f5:	add    BYTE PTR [rax+0x800000],al
  4087fb:	add    BYTE PTR [rax],al
  4087fd:	add    BYTE PTR [rax+0x8000],0x0
  408804:	add    BYTE PTR [rax],0x80
  408807:	add    BYTE PTR [rax-0x7fffff80],al
  40880d:	add    BYTE PTR [rax-0x3f3f4000],0x0
  408814:	add    BYTE PTR [rax],al
  408816:	inc    DWORD PTR [rax]
  408818:	add    bh,bh
  40881a:	add    BYTE PTR [rax],al
  40881c:	add    bh,bh
  40881e:	inc    DWORD PTR [rax]
  408820:	inc    DWORD PTR [rax]
  408822:	add    BYTE PTR [rax],al
  408824:	inc    DWORD PTR [rax]
  408826:	inc    DWORD PTR [rax]
  408828:	(bad)  
  408829:	inc    DWORD PTR [rax]
  40882b:	add    bh,bh
  40882d:	(bad)  
  40882e:	inc    DWORD PTR [rax]
  408830:	add    BYTE PTR [rax],al
  408832:	add    BYTE PTR [rdi],al
  408834:	(bad)  
  408835:	and    esp,DWORD PTR [rdx]
  408837:	add    BYTE PTR [rax],al
  408839:	add    BYTE PTR [rax],al
  40883b:	jae    0x4088b0
  40883d:	(bad)  
  40883e:	xor    BYTE PTR ss:[rax],al
  408841:	add    BYTE PTR [rbx-0x49],dh
  408844:	jg     0x40887c
  408846:	(bad)  
  408847:	and    BYTE PTR [rax],al
  408849:	(bad)  
  40884a:	(bad)  
  40884b:	jae    0x4087d7
  40884d:	icebp  
  40884e:	mul    DWORD PTR [rax]
  408850:	add    BYTE PTR [rbx],al
  408852:	mov    BYTE PTR [rdi+0x20f77f87],dh
  408858:	add    BYTE PTR [rbx],cl
  40885a:	mov    esi,DWORD PTR [rbx-0x76]
  40885d:	(bad)  
  40885e:	clc    
  40885f:	xor    BYTE PTR [rax],al
  408861:	(bad)  
  408862:	mov    BYTE PTR [rbx-0x5f777771],al
  408868:	add    BYTE PTR [rbx],cl
  40886a:	mov    BYTE PTR [rdi+0x707a7a7a],dh
  408870:	add    BYTE PTR [rdi],al
  408872:	mov    esi,DWORD PTR [rbx+0x33]
  408875:	xchg   DWORD PTR [rcx],esi
  408877:	add    BYTE PTR [rax],al
  408879:	jnp    0x4088f4
  40887b:	jno    0x4088b4
  40887d:	fwait
  40887e:	js     0x4088b0
  408880:	(bad)  
  408881:	jns    0x4088b4
  408883:	add    DWORD PTR [rbx],esi
  408885:	cmp    DWORD PTR [rcx],0x77
  408888:	add    BYTE PTR [rbx-0x64c8ce8d],cl
  40888e:	jnp    0x4088c0
  408890:	or     BYTE PTR [rdi+0x739b3388],cl
  408896:	mov    BYTE PTR [rdi-0x47777500],al
  40889c:	(bad)  
  40889d:	mov    BYTE PTR [rdi-0x74ffff50],dh
  4088a3:	jo     0x4088a5
  4088a5:	mov    eax,0x80
  4088aa:	add    BYTE PTR [rax],al
  4088ac:	add    BYTE PTR [rax],al
  4088ae:	add    BYTE PTR [rax],al
  4088b0:	inc    BYTE PTR [rcx]
  4088b2:	add    BYTE PTR [rax],al
  4088b4:	cld    
  4088b5:	add    DWORD PTR [rax],eax
  4088b7:	add    al,dh
  4088b9:	add    DWORD PTR [rax],eax
  4088bb:	add    al,ah
  4088bd:	add    DWORD PTR [rax],eax
  4088bf:	add    al,ah
  4088c1:	add    DWORD PTR [rax],eax
  4088c3:	add    al,ah
  4088c5:	add    DWORD PTR [rax],eax
  4088c7:	add    al,ah
  4088c9:	add    DWORD PTR [rax],eax
  4088cb:	add    al,ah
  4088cd:	add    DWORD PTR [rax],eax
  4088cf:	add    al,ah
  4088d1:	add    eax,DWORD PTR [rax]
  4088d3:	add    al,al
  4088d5:	add    DWORD PTR [rax],eax
  4088d7:	add    BYTE PTR [rax-0x40000000],al
  4088dd:	add    DWORD PTR [rax],eax
  4088df:	add    BYTE PTR [rax-0x40000000],al
  4088e5:	add    DWORD PTR [rax],0xc7f100
  4088eb:	add    bh,bh
  4088ed:	inc    DWORD PTR [rax]
  4088ef:	add    BYTE PTR [rax],ch
  4088f1:	add    BYTE PTR [rax],al
  4088f3:	add    BYTE PTR [rax],ah
  4088f5:	add    BYTE PTR [rax],al
  4088f7:	add    BYTE PTR [rax+0x0],al
  4088fa:	add    BYTE PTR [rax],al
  4088fc:	add    DWORD PTR [rax],eax
  4088fe:	or     BYTE PTR [rax],al
  408900:	add    BYTE PTR [rax],al
  408902:	add    BYTE PTR [rax],al
  408904:	add    BYTE PTR [rax+rax*1],al
	...
  40890f:	add    BYTE PTR [rax],al
  408911:	add    DWORD PTR [rax],eax
  408913:	add    BYTE PTR [rax],al
  408915:	add    DWORD PTR [rax],eax
  408917:	add    BYTE PTR [rax],al
  408919:	add    BYTE PTR [rax],al
  40891b:	add    BYTE PTR [rbx],dh
  40891d:	xor    esi,DWORD PTR [rbx]
  40891f:	add    BYTE PTR [rbx],dh
  408921:	xor    ax,WORD PTR [rax]
  408924:	add    BYTE PTR [rbx],dh
  408926:	data16 add BYTE PTR [rbx],dh
  408929:	xor    esp,DWORD PTR [rsi+0x0]
  40892c:	add    BYTE PTR [rsi+0x66],ah
  40892f:	add    BYTE PTR [rbx],dh
  408931:	data16 data16 add BYTE PTR [rsi+0x66],ah
  408936:	data16 add BYTE PTR [rbx],dh
  408939:	cdq    
  40893a:	xor    eax,DWORD PTR [rax]
  40893c:	xor    ebx,DWORD PTR [rcx-0x6699ff9a]
  408942:	data16 add BYTE PTR [rsi-0x34],ah
  408946:	data16 add BYTE PTR [rax],al
  408949:	cwd    
  40894b:	add    BYTE PTR [rbx],dh
  40894d:	cwd    
  40894f:	add    BYTE PTR [rbx],dh
  408951:	cdq    
  408952:	cdq    
  408953:	add    BYTE PTR [rsi-0x67],ah
  408956:	cdq    
  408957:	add    BYTE PTR [rsi-0x34],ah
  40895a:	cdq    
  40895b:	add    BYTE PTR [rbx],dh
  40895d:	cdq    
  40895e:	int3   
  40895f:	add    BYTE PTR [rsi-0x67],ah
  408962:	int3   
  408963:	add    BYTE PTR [rsi-0x34],ah
  408966:	int3   
  408967:	add    BYTE PTR [rax-0x66ff5257],dl
  40896d:	int3   
  40896e:	cdq    
  40896f:	add    BYTE PTR [rcx-0x66ff3367],bl
  408975:	int3   
  408976:	int3   
  408977:	add    BYTE PTR [rcx-0x3fff0034],bl
  40897d:	rol    al,0x0
  408980:	int3   
  408981:	int3   
  408982:	int3   
  408983:	add    al,al
  408985:	fadd   st(0),st
  408987:	add    bh,dl
  408989:	xlat   BYTE PTR ds:[rbx]
  40898a:	xlat   BYTE PTR ds:[rbx]
  40898b:	add    ch,bl
  40898d:	fstp   st(5)
  40898f:	add    dh,al
  408991:	(bad)  
  408992:	out    dx,eax
  408993:	add    dh,dl
  408995:	out    0xe7,eax
  408997:	add    ah,cl
  408999:	(bad)  
  40899a:	inc    DWORD PTR [rax]
  40899c:	jrcxz  0x408981
  40899e:	jrcxz  0x4089a0
  4089a0:	icebp  
  4089a1:	icebp  
  4089a2:	icebp  
  4089a3:	add    al,dh
  4089a5:	sti    
  4089a6:	inc    DWORD PTR [rax]
	...
  408d14:	(bad)  
  408d15:	(bad)  
  408d16:	inc    DWORD PTR [rax]
	...
  408d24:	add    BYTE PTR [rax],al
  408d26:	or     BYTE PTR [rdx],al
  408d28:	add    al,BYTE PTR [rdx]
  408d2a:	add    al,BYTE PTR [rdx]
  408d2c:	add    al,BYTE PTR [rdx]
  408d2e:	add    al,BYTE PTR [rdx]
  408d30:	add    al,BYTE PTR [rdx]
  408d32:	add    al,BYTE PTR [rdx]
  408d34:	add    al,BYTE PTR [rdx]
	...
  408d46:	or     BYTE PTR [rdx],cl
  408d48:	or     cl,BYTE PTR [rcx]
  408d4a:	or     DWORD PTR [rcx],ecx
  408d4c:	or     BYTE PTR [rax],cl
  408d4e:	or     BYTE PTR [rax],cl
  408d50:	or     BYTE PTR [rax],cl
  408d52:	or     BYTE PTR [rax],cl
  408d54:	or     BYTE PTR [rdx],al
	...
  408d66:	or     BYTE PTR [rbx],bl
  408d68:	or     ecx,DWORD PTR [rdx]
  408d6a:	or     DWORD PTR [rdx],eax
  408d6c:	or     cl,BYTE PTR [rdx]
  408d6e:	or     DWORD PTR [rcx],ecx
  408d70:	or     BYTE PTR [rcx],cl
  408d72:	or     BYTE PTR [rcx],cl
  408d74:	or     BYTE PTR [rdx],al
	...
  408d86:	or     BYTE PTR [rbx],bl
  408d88:	adc    BYTE PTR [rdx],cl
  408d8a:	add    bl,BYTE PTR [rcx]
  408d8c:	add    cl,BYTE PTR [rcx]
  408d8e:	or     cl,BYTE PTR [rax]
  408d90:	or     DWORD PTR [rax],ecx
  408d92:	or     DWORD PTR [rax],ecx
  408d94:	or     BYTE PTR [rdx],al
	...
  408da6:	or     BYTE PTR [rbx],bl
  408da8:	adc    BYTE PTR [rdx],al
  408daa:	sbb    eax,0xa021919
  408daf:	or     DWORD PTR [rdi],eax
  408db1:	add    cl,BYTE PTR [rcx]
  408db3:	or     DWORD PTR [rax],ecx
  408db5:	add    al,BYTE PTR [rax]
	...
  408dc3:	add    BYTE PTR [rax],al
  408dc5:	add    BYTE PTR [rdx],cl
  408dc7:	sbb    edx,DWORD PTR [rip+0x1a22ffff]        # 0x1a638dcc
  408dcd:	sbb    DWORD PTR [rdx],eax
  408dcf:	add    DWORD PTR [rdx],ebx
  408dd1:	sbb    DWORD PTR [rax],ecx
  408dd3:	or     DWORD PTR [rax],ecx
  408dd5:	add    al,BYTE PTR [rax]
	...
  408de3:	add    BYTE PTR [rsp+rax*1],al
  408de6:	or     bl,BYTE PTR [rbx]
  408de8:	adc    eax,0xffffff10
  408ded:	sbb    al,0x19
  408def:	sbb    al,0x1c
  408df1:	sbb    DWORD PTR [rax],ecx
  408df3:	or     DWORD PTR [rax],ecx
  408df5:	add    al,BYTE PTR [rax]
	...
  408dff:	add    BYTE PTR [rax],al
  408e01:	add    BYTE PTR [rip+0x90f120d],cl        # 0x94fa014
  408e07:	sbb    edx,DWORD PTR [rip+0xffffffffffff0b10]        # 0x3f991d
  408e0d:	jmp    QWORD PTR [rdx]
  408e0f:	and    ah,BYTE PTR [rdx]
  408e11:	sbb    cl,BYTE PTR [rcx]
  408e13:	or     cl,BYTE PTR [rax]
  408e15:	add    al,BYTE PTR [rax]
	...
  408e1f:	add    BYTE PTR [rdi],cl
  408e21:	or     eax,0x120f1f1f
  408e26:	or     bl,BYTE PTR [rbx]
  408e28:	adc    eax,0xff0a1015
  408e2d:	and    bh,bh
  408e2f:	jmp    QWORD PTR [rdx]
  408e31:	sbb    cl,BYTE PTR [rdx]
  408e33:	or     DWORD PTR [rax],ecx
  408e35:	add    al,BYTE PTR [rax]
  408e37:	add    BYTE PTR [rax],al
  408e39:	add    BYTE PTR [rax],al
  408e3b:	add    BYTE PTR [rax],al
  408e3d:	add    BYTE PTR [rdi],cl
  408e3f:	movlps xmm3,QWORD PTR [rdi]
  408e42:	(bad)  
  408e43:	(bad)  
  408e44:	adc    dl,BYTE PTR [rdx]
  408e46:	or     bl,BYTE PTR [rbx]
  408e48:	adc    eax,0xff060a15
  408e4d:	and    bh,bh
  408e4f:	and    esp,DWORD PTR [rdx]
  408e51:	sbb    al,0xa
  408e53:	or     cl,BYTE PTR [rcx]
  408e55:	add    al,BYTE PTR [rax]
  408e57:	add    BYTE PTR [rax],al
  408e59:	add    BYTE PTR [rax],al
  408e5b:	add    BYTE PTR [rax],al
  408e5d:	movlps xmm2,QWORD PTR [rdi]
  408e60:	(bad)  
  408e61:	and    ebx,DWORD PTR [rdi]
  408e63:	(bad)  
  408e64:	(bad)  
  408e65:	adc    cl,BYTE PTR [rdx]
  408e67:	sbb    edx,DWORD PTR [rip+0xffffffffffff1015]        # 0x3f9e82
  408e6d:	(bad)  
  408e6e:	(bad)  
  408e6f:	(bad)  
  408e70:	jmp    QWORD PTR [rcx]
  408e72:	or     cl,BYTE PTR [rbx]
  408e74:	or     DWORD PTR [rdx],eax
  408e76:	add    BYTE PTR [rax],al
  408e78:	add    BYTE PTR [rax],al
  408e7a:	add    BYTE PTR [rax],al
  408e7c:	add    BYTE PTR [rdi],cl
  408e7e:	sbb    BYTE PTR [rdx],dl
  408e80:	adc    ah,BYTE PTR [rbx]
  408e82:	(bad)  
  408e83:	(bad)  
  408e84:	adc    dl,BYTE PTR [rdi]
  408e86:	or     bl,BYTE PTR [rbx]
  408e88:	adc    eax,0xffff1015
  408e8d:	(bad)  
  408e8e:	(bad)  
  408e8f:	(bad)  
  408e90:	(bad)  
  408e91:	dec    DWORD PTR [rbx]
  408e93:	or     cl,BYTE PTR [rcx]
  408e95:	add    al,BYTE PTR [rax]
  408e97:	add    BYTE PTR [rax],al
  408e99:	add    BYTE PTR [rax],al
  408e9b:	add    BYTE PTR [rax],al
  408e9d:	movhps QWORD PTR [rdi],xmm2
  408ea0:	(bad)  
  408ea1:	and    ebx,DWORD PTR [rdi]
  408ea3:	(bad)  
  408ea4:	(bad)  
  408ea5:	adc    cl,BYTE PTR [rdx]
  408ea7:	sbb    edx,DWORD PTR [rip+0x15151515]        # 0x1555a3c2
  408ead:	adc    eax,0x15151515
  408eb2:	adc    eax,0x20a0b
  408eb7:	add    BYTE PTR [rax],al
  408eb9:	add    BYTE PTR [rax],al
  408ebb:	add    BYTE PTR [rax],al
  408ebd:	prefetcht1 BYTE PTR [rdx]
  408ec0:	(bad)  
  408ec1:	and    ebx,DWORD PTR [rdi]
  408ec3:	sbb    BYTE PTR [rdx],dl
  408ec5:	(bad)  
  408ec6:	or     bl,BYTE PTR [rbx]
  408ec8:	sbb    ebx,DWORD PTR [rbx]
  408eca:	sbb    ebx,DWORD PTR [rbx]
  408ecc:	sbb    ebx,DWORD PTR [rbx]
  408ece:	sbb    ebx,DWORD PTR [rbx]
  408ed0:	sbb    ebx,DWORD PTR [rbx]
  408ed2:	sbb    ebx,DWORD PTR [rbx]
  408ed4:	or     eax,DWORD PTR [rdx]
  408ed6:	add    BYTE PTR [rax],al
  408ed8:	add    BYTE PTR [rax],al
  408eda:	add    BYTE PTR [rax],al
  408edc:	add    BYTE PTR [rdi],cl
  408ede:	sbb    BYTE PTR [rdi],dl
  408ee0:	sbb    BYTE PTR [rdi],bl
  408ee2:	(bad)  
  408ee3:	(bad)  
  408ee4:	(bad)  
  408ee5:	adc    cl,BYTE PTR [rdx]
  408ee7:	or     cl,BYTE PTR [rdx]
  408ee9:	or     cl,BYTE PTR [rdx]
  408eeb:	or     cl,BYTE PTR [rdx]
  408eed:	or     cl,BYTE PTR [rdx]
  408eef:	or     BYTE PTR [rdx],cl
  408ef1:	or     BYTE PTR [rdx],cl
  408ef3:	or     BYTE PTR [rax],cl
  408ef5:	or     BYTE PTR [rax],al
  408ef7:	add    BYTE PTR [rax],al
  408ef9:	add    BYTE PTR [rax],al
  408efb:	add    BYTE PTR [rax],al
  408efd:	movhps QWORD PTR [rax],xmm3
  408f00:	(bad)  
  408f01:	(bad)  
  408f02:	sbb    BYTE PTR [rdi],dl
  408f04:	sbb    BYTE PTR [rbx],dl
  408f06:	(bad)  
  408f07:	adc    al,BYTE PTR [rsi]
  408f09:	add    ecx,DWORD PTR [rip+0xd060d06]        # 0xd469c15
  408f0f:	or     eax,0x40d0d0d
	...
  408f1c:	add    BYTE PTR [rdi],cl
  408f1e:	sbb    BYTE PTR [rdi],dl
  408f20:	sbb    BYTE PTR [rsi],bl
  408f22:	and    esp,DWORD PTR [rbx]
  408f24:	(bad)  
  408f25:	sbb    BYTE PTR [rdi],dl
  408f27:	(bad)  
  408f28:	(bad)  
  408f29:	add    eax,DWORD PTR [rsi]
  408f2b:	or     eax,0x60d0d06
  408f30:	or     eax,0x40d0d
	...
  408f3d:	prefetcht1 BYTE PTR [rdi]
  408f40:	sbb    BYTE PTR [rdi],bl
  408f42:	and    esp,DWORD PTR [rbx]
  408f44:	(bad)  
  408f45:	(bad)  
  408f46:	sbb    BYTE PTR [rdi],dl
  408f48:	(bad)  
  408f49:	add    eax,DWORD PTR [rbx]
  408f4b:	add    ecx,DWORD PTR [rip+0xc060d0d]        # 0xc469c5e
  408f51:	or     eax,0x40d
  408f56:	add    BYTE PTR [rax],al
  408f58:	add    BYTE PTR [rax],al
  408f5a:	add    BYTE PTR [rax],al
  408f5c:	add    BYTE PTR [rdi],cl
  408f5e:	(bad)  
  408f5f:	sbb    BYTE PTR [rdi],dl
  408f61:	and    esp,DWORD PTR [rbx]
  408f63:	(bad)  
  408f64:	sbb    BYTE PTR [rax],bl
  408f66:	(bad)  
  408f67:	(bad)  
  408f68:	(bad)  
  408f69:	(bad)  
  408f6a:	(bad)  
  408f6b:	clts   
  408f6d:	add    eax,DWORD PTR [rbx]
  408f6f:	or     al,0x6
  408f71:	or     eax,0x405
  408f76:	add    BYTE PTR [rax],al
  408f78:	add    BYTE PTR [rax],al
  408f7a:	add    BYTE PTR [rax],al
  408f7c:	add    BYTE PTR [rdi],cl
  408f7e:	sbb    BYTE PTR [rax],bl
  408f80:	(bad)  
  408f81:	(bad)  
  408f82:	adc    dl,BYTE PTR [rdx]
  408f84:	(bad)  
  408f85:	prefetchwt1 BYTE PTR [rcx]
  408f88:	or     eax,0xf171712
  408f8d:	(bad)  
  408f8e:	lsl    eax,WORD PTR [rbx]
  408f91:	add    eax,DWORD PTR [rip+0x4]        # 0x408f9b
  408f97:	add    BYTE PTR [rax],al
  408f99:	add    BYTE PTR [rax],al
  408f9b:	add    BYTE PTR [rax],al
  408f9d:	movhps QWORD PTR [rdx],xmm2
  408fa0:	adc    cl,BYTE PTR [rdi]
  408fa2:	(bad)  
  408fa3:	(bad)  
  408fa4:	(bad)  
  408fa5:	sbb    BYTE PTR [rdx],dl
  408fa7:	adc    cl,BYTE PTR [rip+0x1717120e]        # 0x1757a1bb
  408fad:	sbb    BYTE PTR [rdi],dl
  408faf:	adc    al,0xf
  408fb1:	lsl    eax,WORD PTR [rax+rax*1]
  408fb5:	add    BYTE PTR [rax],al
  408fb7:	add    BYTE PTR [rax],al
  408fb9:	add    BYTE PTR [rax],al
  408fbb:	add    BYTE PTR [rdx],dl
  408fbd:	adc    dl,BYTE PTR [rdx]
  408fbf:	adc    bl,BYTE PTR [rsi]
  408fc1:	(bad)  
  408fc2:	(bad)  
  408fc3:	adc    al,0x12
  408fc5:	adc    dl,BYTE PTR [rdx]
  408fc7:	or     eax,0x1212120d
  408fcc:	movlps xmm2,QWORD PTR [rdi]
  408fcf:	sbb    BYTE PTR [rdi],dl
  408fd1:	adc    cl,BYTE PTR [rdi]
  408fd3:	(bad)  
  408fd4:	sldt   WORD PTR [rax]
  408fd7:	add    BYTE PTR [rax],al
  408fd9:	add    BYTE PTR [rdx],dl
  408fdb:	adc    ah,BYTE PTR [rax]
  408fdd:	(bad)  
  408fde:	(bad)  
  408fdf:	(bad)  
  408fe0:	(bad)  
  408fe1:	adc    dl,BYTE PTR [rdx]
  408fe3:	adc    cl,BYTE PTR [rip+0xd0d0d0d]        # 0xd4d9cf6
  408fe9:	adc    dl,BYTE PTR [rdx]
  408feb:	adc    dl,BYTE PTR [rdx]
  408fed:	adc    dl,BYTE PTR [rdx]
  408fef:	movlps xmm3,QWORD PTR [rax]
  408ff2:	(bad)  
  408ff3:	adc    dl,BYTE PTR [rdi+rcx*1]
  408ff6:	add    BYTE PTR [rax],al
  408ff8:	add    BYTE PTR [rdx],dl
  408ffa:	adc    dl,BYTE PTR [rdx]
  408ffc:	adc    dl,BYTE PTR [rdx]
  408ffe:	adc    dl,BYTE PTR [rdx]
  409000:	adc    cl,BYTE PTR [rip+0xd0d0d0d]        # 0xd4d9d13
  409006:	or     eax,0x12120d0d
  40900b:	adc    dl,BYTE PTR [rdx]
  40900d:	adc    dl,BYTE PTR [rdx]
  40900f:	adc    dl,BYTE PTR [rdx]
  409011:	movlps xmm1,QWORD PTR [rdi]
  409014:	(bad)  
  409015:	(bad)  
  409016:	sldt   WORD PTR [rax]
  409019:	add    BYTE PTR [rax],al
  40901b:	add    BYTE PTR [rax],al
  40901d:	(bad)  
  40901e:	movlps xmm1,QWORD PTR [rsi]
  409021:	or     eax,0xd0d0d0d
  409026:	or     eax,0x13120d0d
  40902b:	adc    dl,BYTE PTR [rbx]
  40902d:	adc    dl,BYTE PTR [rbx]
  40902f:	adc    cl,BYTE PTR [rdi]
  409031:	adc    cl,BYTE PTR [rdi]
  409033:	adc    al,BYTE PTR [rax]
  409035:	add    BYTE PTR [rax],al
  409037:	add    BYTE PTR [rax],al
  409039:	add    BYTE PTR [rax],al
  40903b:	add    BYTE PTR [rdx],dl
  40903d:	adc    ebx,DWORD PTR [rax]
  40903f:	(bad)  
  409040:	adc    dl,BYTE PTR [rdx]
  409042:	prefetchw BYTE PTR [rip+0xd0d0d0d]        # 0xd4d9d56
  409049:	adc    dl,BYTE PTR [rdx]
  40904b:	adc    dl,BYTE PTR [rdx]
  40904d:	adc    dl,BYTE PTR [rdx]
  40904f:	adc    dl,BYTE PTR [rdx]
  409051:	adc    edx,DWORD PTR [rdx]
  409053:	adc    dl,BYTE PTR [rdx]
  409055:	add    BYTE PTR [rax],al
  409057:	add    BYTE PTR [rax],al
  409059:	add    BYTE PTR [rax],al
  40905b:	adc    bl,BYTE PTR [rsi]
  40905d:	(bad)  
  40905e:	(bad)  
  40905f:	sbb    BYTE PTR [rdi],dl
  409061:	sbb    BYTE PTR [rdx],dl
  409063:	(bad)  
  409064:	(bad)  
  409065:	(bad)  
  409066:	or     eax,0x13120d0d
  40906b:	adc    dl,BYTE PTR [rdx]
  40906d:	adc    edx,DWORD PTR [rdx]
  40906f:	adc    dl,BYTE PTR [rbx]
  409071:	adc    dl,BYTE PTR [rdi]
  409073:	(bad)  
  409074:	adc    dl,BYTE PTR [rdx]
  409076:	add    BYTE PTR [rax],al
  409078:	add    BYTE PTR [rax],al
  40907a:	adc    bl,BYTE PTR [rsi]
  40907c:	and    BYTE PTR [rax],ah
  40907e:	(bad)  
  40907f:	(bad)  
  409080:	sbb    BYTE PTR [rdi],dl
  409082:	(bad)  
  409083:	adc    edx,DWORD PTR [rdx]
  409085:	adc    cl,BYTE PTR [rsi]
  409087:	(bad)  
  409088:	(bad)  
  409089:	adc    dl,BYTE PTR [rdx]
  40908b:	adc    dl,BYTE PTR [rbx]
  40908d:	adc    dl,BYTE PTR [rbx]
  40908f:	sbb    BYTE PTR [rdi],dl
  409091:	(bad)  
  409092:	sbb    BYTE PTR [rdi],dl
  409094:	sbb    BYTE PTR [rdi],dl
  409096:	adc    al,BYTE PTR [rax]
  409098:	add    BYTE PTR [rax],al
  40909a:	adc    dl,BYTE PTR [rdx]
  40909c:	(bad)  
  40909d:	(bad)  
  40909e:	and    BYTE PTR [rdi],bl
  4090a0:	and    BYTE PTR [rsi],bl
  4090a2:	sbb    BYTE PTR [rax],bl
  4090a4:	(bad)  
  4090a5:	adc    edx,DWORD PTR [rdx]
  4090a7:	adc    dl,BYTE PTR [rdx]
  4090a9:	movlps QWORD PTR [rdx],xmm2
  4090ac:	(bad)  
  4090ad:	(bad)  
  4090ae:	(bad)  
  4090af:	(bad)  
  4090b0:	sbb    BYTE PTR [rax],bl
  4090b2:	(bad)  
  4090b3:	(bad)  
  4090b4:	(bad)  
  4090b5:	adc    dl,BYTE PTR [rdx]
  4090b7:	add    BYTE PTR [rax],al
  4090b9:	add    BYTE PTR [rax],al
  4090bb:	add    BYTE PTR [rdx],dl
  4090bd:	adc    dl,BYTE PTR [rdx]
  4090bf:	(bad)  
  4090c0:	(bad)  
  4090c1:	(bad)  
  4090c2:	(bad)  
  4090c3:	sbb    BYTE PTR [rdi],dl
  4090c5:	sbb    BYTE PTR [rdi],dl
  4090c7:	adc    cl,BYTE PTR [rdi]
  4090c9:	adc    dl,BYTE PTR [rax+rbx*1]
  4090cc:	(bad)  
  4090cd:	sbb    BYTE PTR [rax],bl
  4090cf:	(bad)  
  4090d0:	(bad)  
  4090d1:	(bad)  
  4090d2:	adc    dl,BYTE PTR [rdx]
  4090d4:	adc    al,BYTE PTR [rax]
	...
  4090de:	add    BYTE PTR [rdx],dl
  4090e0:	adc    dl,BYTE PTR [rdx]
  4090e2:	(bad)  
  4090e3:	(bad)  
  4090e4:	sbb    BYTE PTR [rdi],dl
  4090e6:	adc    al,BYTE PTR [rax]
  4090e8:	add    BYTE PTR [rax],al
  4090ea:	adc    dl,BYTE PTR [rdx]
  4090ec:	(bad)  
  4090ed:	(bad)  
  4090ee:	(bad)  
  4090ef:	(bad)  
  4090f0:	adc    dl,BYTE PTR [rdx]
	...
  409102:	adc    dl,BYTE PTR [rdx]
  409104:	(bad)  
  409105:	adc    al,BYTE PTR [rax]
  409107:	add    BYTE PTR [rax],al
  409109:	add    BYTE PTR [rax],al
  40910b:	add    BYTE PTR [rdx],dl
  40910d:	adc    dl,BYTE PTR [rdx]
  40910f:	adc    al,BYTE PTR [rax]
  409111:	add    BYTE PTR [rax],al
  409113:	add    BYTE PTR [rax],al
  409115:	add    BYTE PTR [rax],al
  409117:	add    bh,bh
  409119:	cld    
  40911a:	add    BYTE PTR [rbx],al
  40911c:	(bad)  
  40911d:	cld    
  40911e:	add    BYTE PTR [rbx],al
  409120:	(bad)  
  409121:	cld    
  409122:	add    BYTE PTR [rbx],al
  409124:	(bad)  
  409125:	cld    
  409126:	add    BYTE PTR [rbx],al
  409128:	(bad)  
  409129:	cld    
  40912a:	add    BYTE PTR [rbx],al
  40912c:	(bad)  
  40912d:	cld    
  40912e:	add    BYTE PTR [rbx],al
  409130:	push   rax
  409132:	add    BYTE PTR [rbx],al
  409134:	inc    eax
  409136:	add    BYTE PTR [rbx],al
  409138:	inc    DWORD PTR [rax]
  40913a:	add    BYTE PTR [rbx],al
  40913c:	cld    
  40913d:	add    BYTE PTR [rax],al
  40913f:	add    edi,eax
  409141:	add    BYTE PTR [rax],al
  409143:	add    edi,eax
  409145:	add    BYTE PTR [rax],al
  409147:	add    edi,eax
  409149:	add    BYTE PTR [rax],al
  40914b:	add    edi,eax
  40914d:	add    BYTE PTR [rax],al
  40914f:	add    edi,eax
  409151:	add    BYTE PTR [rax],al
  409153:	add    edi,eax
  409155:	add    BYTE PTR [rax],al
  409157:	psubb  mm0,QWORD PTR [rax]
  40915a:	add    BYTE PTR [rdi],cl
  40915c:	clc    
  40915d:	add    BYTE PTR [rax],al
  40915f:	psubb  mm0,QWORD PTR [rax]
  409162:	add    BYTE PTR [rdi],cl
  409164:	clc    
  409165:	add    BYTE PTR [rax],al
  409167:	psubb  mm0,QWORD PTR [rax]
  40916a:	add    BYTE PTR [rdi],cl
  40916c:	lock add BYTE PTR [rax],al
  40916f:	(bad)  
  409170:	rol    BYTE PTR [rax],0x0
  409173:	add    eax,DWORD PTR [rax-0x7ff0000]
  409179:	add    BYTE PTR [rax],al
  40917b:	(bad)  
  40917d:	add    BYTE PTR [rax],al
  40917f:	(bad)  
  409180:	loopne 0x409182
  409182:	add    BYTE PTR [rbx],al
  409184:	rol    BYTE PTR [rax],0x0
  409187:	add    eax,eax
  409189:	add    BYTE PTR [rax],al
  40918b:	add    eax,esi
  40918d:	add    BYTE PTR [rax],al
  40918f:	(bad)  
  409190:	inc    BYTE PTR [rcx]
  409192:	sar    BYTE PTR [rdi],0xff
  409195:	ret    
  409196:	lock jmp FWORD PTR [rax]
  409199:	add    BYTE PTR [rax],al
  40919b:	add    BYTE PTR [rax],dl
  40919d:	add    BYTE PTR [rax],al
  40919f:	add    BYTE PTR [rax],ah
  4091a1:	add    BYTE PTR [rax],al
  4091a3:	add    BYTE PTR [rcx],al
  4091a5:	add    BYTE PTR [rax],cl
  4091a7:	add    BYTE PTR [rax],al
  4091a9:	add    BYTE PTR [rax],al
  4091ab:	add    BYTE PTR [rax],al
  4091ad:	add    DWORD PTR [rax],eax
	...
  4091b7:	add    BYTE PTR [rax],al
  4091b9:	add    DWORD PTR [rax],eax
  4091bb:	add    BYTE PTR [rax],al
  4091bd:	add    DWORD PTR [rax],eax
  4091bf:	add    BYTE PTR [rax],al
  4091c1:	add    BYTE PTR [rax],al
  4091c3:	add    BYTE PTR [rax+rdx*2],cl
  4091c6:	sbb    al,BYTE PTR [rax]
  4091c8:	sbb    ah,BYTE PTR [rbx+0x2a]
  4091cb:	add    BYTE PTR [rdx+rsi*2],al
  4091ce:	and    eax,0x2a7d0c00
  4091d3:	add    BYTE PTR [rdx],dl
  4091d5:	jg     0x409208
  4091d7:	add    BYTE PTR [rcx],ah
  4091d9:	ins    BYTE PTR es:[rdi],dx
  4091da:	xor    BYTE PTR [rax],al
  4091dc:	(bad)  
  4091dd:	gs cmp al,0x0
  4091e0:	xor    esp,DWORD PTR [rdx+0x3f]
  4091e3:	add    BYTE PTR [rax],ch
  4091e5:	je     0x40921d
  4091e7:	add    BYTE PTR [rdx],ch
  4091e9:	je     0x409223
  4091eb:	add    BYTE PTR [rax],al
  4091ed:	sbb    al,0x4b
  4091ef:	add    BYTE PTR [rax],al
  4091f1:	and    DWORD PTR [rax+rax*1+0x7],edx
  4091f5:	es push rsp
  4091f7:	add    BYTE PTR [rax],al
  4091f9:	(bad)  
  4091fa:	pop    rdx
  4091fb:	add    BYTE PTR [rax],al
  4091fd:	sub    DWORD PTR [rdx+0x0],ebx
  409200:	add    edi,DWORD PTR [rax+rsi*2]
  409203:	add    BYTE PTR [rip+0x35004076],ch        # 0x3540d27f
  409209:	jbe    0x409250
  40920b:	add    BYTE PTR [rax],al
  40920d:	rex.B outs dx,DWORD PTR ds:[rsi]
  40920f:	add    BYTE PTR [rbx],al
  409211:	rex.X jne 0x409214
  409214:	or     eax,0x14002d82
  409219:	xchg   BYTE PTR [rip+0x35801a00],dh        # 0x35c0ac1f
  40921f:	add    BYTE PTR [rdx],bl
  409221:	mov    DWORD PTR [rdi],esi
  409223:	add    BYTE PTR [rip+0x34003f8e],ah        # 0x3440d1b7
  409229:	add    DWORD PTR [rax+0x0],0x38
  40922d:	mov    WORD PTR [rbp+0x0],es
  409230:	(bad)  
  409231:	or     DWORD PTR [rax+0x0],0x45
  409235:	mov    dl,BYTE PTR [rdi+0x0]
  409238:	push   rdx
  409239:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40923a:	push   0x0
  40923c:	pop    rdx
  40923d:	mov    dh,0x6b
  40923f:	add    BYTE PTR [rcx-0x4a],bl
  409242:	outs   dx,BYTE PTR ds:[rsi]
  409243:	add    BYTE PTR [rcx+rbp*4+0x68],ah
  409247:	add    BYTE PTR [rcx-0x40],ah
  40924a:	js     0x40924c
  40924c:	or     al,0x52
  40924e:	mov    BYTE PTR [rax],al
  409250:	or     BYTE PTR [rdi-0x77],dl
  409253:	add    BYTE PTR [rip+0xe008a5c],cl        # 0xe411cb5
  409259:	pop    rsi
  40925a:	mov    es,WORD PTR [rax]
  40925c:	sbb    edx,DWORD PTR [rbp-0x7c]
  40925f:	add    BYTE PTR [rdi],dl
  409261:	(bad)  
  409262:	pop    QWORD PTR [rax]
  409264:	adc    BYTE PTR [rcx-0x70],ah
  409267:	add    BYTE PTR [rsp+riz*2],dl
  40926a:	xchg   edi,eax
  40926b:	add    BYTE PTR [rbx],dl
  40926d:	imul   ebx,DWORD PTR [rsi-0x7098d100],0x9d722200
  409277:	add    BYTE PTR [rdx],ah
  409279:	ja     0x409222
  40927b:	add    BYTE PTR [rdx],ch
  40927d:	js     0x409223
  40927f:	add    BYTE PTR [rdi],dh
  409281:	jnp    0x40922a
  409283:	add    BYTE PTR [rax+0x75],al
  409286:	cdq    
  409287:	add    BYTE PTR [rcx+rax*4],ch
  40928a:	scas   eax,DWORD PTR es:[rdi]
  40928b:	add    BYTE PTR [rip+0x2a00b181],ch        # 0x2a414412
  409291:	xor    DWORD PTR [rbp-0x457bde00],0xb9882d00
  40929b:	add    BYTE PTR [rip+0x3400bf8d],ch        # 0x3441522e
  4092a1:	mov    bh,BYTE PTR [rcx-0x4372c500]
  4092a7:	add    BYTE PTR [rbp+rsi*4-0x75],bh
  4092ab:	add    BYTE PTR [rax-0x80],cl
  4092ae:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4092af:	add    BYTE PTR [rbp-0x7d],al
  4092b2:	stos   DWORD PTR es:[rdi],eax
  4092b3:	add    BYTE PTR [rbx-0x78],cl
  4092b6:	lods   al,BYTE PTR ds:[rsi]
  4092b7:	add    BYTE PTR [rcx-0x78],al
  4092ba:	mov    cl,0x0
  4092bc:	rex.RB mov ?,WORD PTR [r14-0x446cba00]
  4092c3:	add    BYTE PTR [rdi-0x6b],al
  4092c6:	mov    ebp,0xb9934b00
  4092cb:	add    BYTE PTR [rbp-0x66],dl
  4092ce:	mov    edi,0xb2986800
  4092d3:	add    BYTE PTR [rdx-0x65],ah
  4092d6:	mov    ebx,0x8ccf7a00
  4092db:	add    BYTE PTR [rdi+rcx*4],dh
  4092de:	rol    DWORD PTR [rax],0x33
  4092e1:	xchg   edx,eax
  4092e2:	(bad)
  4092e5:	xchg   ebp,eax
  4092e6:	(bad)  
  4092e7:	add    BYTE PTR [rbx-0x67],al
  4092ea:	mov    DWORD PTR [rax],0xc1984b
  4092f0:	rex.B (bad) 
  4092f2:	enter  0x5200,0x9a
  4092f6:	ret    
  4092f7:	add    BYTE PTR [rbp-0x63],dl
  4092fa:	(bad)  
  4092fb:	add    BYTE PTR [rdi-0x67],bl
  4092fe:	rol    DWORD PTR [rax],0x5b
  409301:	pushf  
  409302:	rol    DWORD PTR [rax],0x59
  409305:	lahf   
  409306:	mov    BYTE PTR [rax],0x56
  409309:	pushf  
  40930a:	retf   
  40930b:	add    BYTE PTR [rsi-0x61],ah
  40930e:	ret    0x5100
  409311:	movabs ds:0xa75d00caa35b00cd,al
  40931a:	int    0x0
  40931c:	rex.WXB movabs ds:0xa45900d0a05b00d2,al
  409326:	rol    BYTE PTR [rax],cl
  409328:	(bad)  
  409329:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40932a:	retf   0x6100
  40932d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40932e:	int    0x0
  409330:	outs   dx,DWORD PTR ds:[rsi]
  409331:	test   al,0xc8
  409333:	add    BYTE PTR [rbx+rbp*4-0x34],ch
  409337:	add    BYTE PTR [rax-0x58],bh
  40933a:	leave  
  40933b:	add    BYTE PTR [rbp-0x52],ah
  40933e:	(bad)  
  40933f:	add    BYTE PTR [rdi-0x53],ch
  409342:	rol    BYTE PTR [rax],1
  409344:	jae    0x4092fa
  409346:	fiadd  DWORD PTR [rax]
  409348:	js     0x409304
  40934a:	fild   WORD PTR [rax]
  40934c:	gs mov bh,0xe1
  40934f:	add    BYTE PTR [rdx-0x47],ch
  409352:	jrcxz  0x409354
  409354:	jns    0x409313
  409356:	loop   0x409358
  409358:	jne    0x40931b
  40935a:	call   0xffffffffeb040b5f
  40935f:	add    BYTE PTR [rsp+rsi*4-0x227aff6b],cl
  409366:	nop
  409367:	add    BYTE PTR [rdx-0x68ff631d],dl
  40936d:	out    0x9e,eax
  40936f:	add    BYTE PTR [rsi-0x64ff5329],bl
  409375:	in     eax,0xa3
  409377:	add    BYTE PTR [rcx-0x5fff5819],ah
  40937d:	jmp    0xffffffffeeea9429
  409382:	mov    al,0x0
  409384:	mov    ebx,0x8500b4f6
  409389:	mov    edi,0xc38d00e0
  40938e:	fiadd  WORD PTR [rax]
  409390:	mov    esp,0x8000c1fa
  409395:	ret    
  409396:	out    0x0,eax
  409398:	pop    rbp
  40939a:	in     al,0x0
  40939c:	add    edi,0xcd8f00ec
  4093a2:	in     al,dx
  4093a3:	add    BYTE PTR [rbx-0x6eff1536],dl
  4093a9:	(bad)  
  4093aa:	out    dx,eax
  4093ab:	add    BYTE PTR [rcx-0x60ff0c2e],bl
  4093b1:	(bad)  
  4093b3:	add    BYTE PTR [rdi-0x45ff192d],ch
  4093b9:	fldl2t 
  4093bb:	add    BYTE PTR [rax-0x5cff0f2d],ah
  4093c1:	fdiv   st,st(3)
  4093c3:	add    BYTE PTR [rdi-0x42ff0e22],dh
  4093c9:	in     eax,0xfc
  4093cb:	add    al,cl
  4093cd:	out    dx,eax
  4093ce:	inc    DWORD PTR [rax]
  4093d0:	shr    eax,1
  4093d2:	repz add cl,dh
  4093d5:	push   rdi
  4093d7:	add    ch,dh
  4093d9:	(bad)  
  4093da:	stc    
	...
  4095bb:	add    bh,bh
  4095bd:	(bad)  
  4095be:	inc    DWORD PTR [rax]
  4095c0:	add    BYTE PTR [rax],al
  4095c2:	add    BYTE PTR [rax],al
  4095c4:	add    BYTE PTR [rax],al
  4095c6:	add    BYTE PTR [rsi],bl
  4095c8:	sbb    ebx,DWORD PTR [rdx]
  4095ca:	or     DWORD PTR [rdx],ecx
  4095cc:	(bad)  
  4095cd:	add    al,BYTE PTR [rcx]
  4095cf:	add    BYTE PTR [rax],al
  4095d1:	add    BYTE PTR [rax],al
  4095d3:	add    BYTE PTR [rax],al
  4095d5:	add    BYTE PTR [rip+0x812221e],bh        # 0x852b7f9
  4095db:	sbb    BYTE PTR [rsi],dl
  4095dd:	add    eax,0x3
  4095e2:	add    BYTE PTR [rax],al
  4095e4:	cmp    eax,0x201e3f3d
  4095e9:	test   DWORD PTR [rax],ecx
  4095eb:	(bad)  
  4095ec:	adc    DWORD PTR [rip+0x15],ebx        # 0x409607
  4095f2:	add    BYTE PTR [rip+0x1e528473],bh        # 0x1e931a6b
  4095f8:	imul   esp,DWORD PTR [rax],0x3a850885
  4095fe:	add    al,0x0
  409600:	add    BYTE PTR [rax],al
  409602:	add    BYTE PTR [rax+0x76],al
  409605:	jge    0x40965f
  409607:	(bad)  
  409608:	push   0x20
  40960a:	and    bh,bh
  40960c:	jmp    FWORD PTR [rax+0x17]
  40960f:	add    BYTE PTR [rax],al
  409611:	add    BYTE PTR [rax],al
  409613:	rex.WRX
  409614:	gs pop rdi
  409616:	pop    rax
  409617:	(bad)  
  409618:	imul   eax,DWORD PTR [rsi-0x7b],0xffffff85
  40961c:	xchg   BYTE PTR [rcx+rbx*1+0x0],ch
  409620:	add    BYTE PTR [rax],al
  409622:	add    BYTE PTR [rbp+0x78],dl
  409625:	and    DWORD PTR [rdx+0x1e],0x6e707471
  40962c:	ins    DWORD PTR es:[rdi],dx
  40962d:	outs   dx,DWORD PTR ds:[rsi]
  40962e:	and    BYTE PTR [rax],al
  409630:	add    BYTE PTR [rax],al
  409632:	add    BYTE PTR [rbp-0x80],dl
  409635:	jle    0x409692
  409637:	and    DWORD PTR [rcx],esp
  409639:	and    DWORD PTR [rcx],esp
  40963b:	and    DWORD PTR [rcx],esp
  40963d:	and    DWORD PTR [rax+rax*1],ebx
  409640:	add    BYTE PTR [rax],al
  409642:	add    BYTE PTR [rdx+0x5d],al
  409645:	(bad)  
  409646:	rex.WXB and rax,0x43512d13
  40964c:	sub    al,0xd
  40964e:	add    BYTE PTR [rax],al
  409650:	add    BYTE PTR [rax],al
  409652:	rex.RB pop r13
  409654:	push   rbx
  409655:	cmp    al,0x27
  409657:	adc    BYTE PTR [rsi+rsi*1],ah
  40965a:	xor    al,BYTE PTR [rax+0x5b]
  40965d:	push   rcx
  40965e:	cmp    eax,DWORD PTR [rax]
  409660:	add    BYTE PTR [rbp+rdi*1+0x30],al
  409664:	and    ecx,DWORD PTR [rip+0x4c250e0b]        # 0x4c65a475
  40966a:	rex.WB cmp BYTE PTR [r14],bpl
  40966d:	(bad)  
  40966e:	xor    DWORD PTR [rbx],edi
  409670:	add    BYTE PTR [rax],al
  409672:	pop    rsi
  409673:	(bad)  
  409674:	cmp    DWORD PTR [rdx],ebp
  409676:	adc    al,0xf
  409678:	sub    cl,BYTE PTR [rdx+0x33]
  40967b:	xor    esi,DWORD PTR [rip+0x3e36]        # 0x40d4b7
  409681:	pop    rsi
  409682:	(bad)  
  409683:	cmp    DWORD PTR [rbx+riz*2+0x48],0x2b
  409688:	sub    BYTE PTR [rdx],dh
  40968a:	rex.RXB push r15
  40968c:	fs ja  0x409704
  40968f:	push   rcx
  409690:	add    BYTE PTR [rax],al
  409692:	pop    rsi
  409693:	pop    rsi
  409694:	jg     0x409711
  409696:	addr32 push rsp
  409698:	add    BYTE PTR [rsi+0x66],cl
  40969b:	jp     0x409717
  40969d:	pop    rsi
  40969e:	pop    rsi
  40969f:	add    BYTE PTR [rax],al
  4096a1:	add    BYTE PTR [rax],al
  4096a3:	add    BYTE PTR [rsi+0x5e],bl
  4096a6:	pop    rsi
  4096a7:	add    BYTE PTR [rax],al
  4096a9:	add    BYTE PTR [rsi+0x72],bl
  4096ac:	pop    rsi
	...
  4096bd:	add    BYTE PTR [rax],al
  4096bf:	add    dh,bh
  4096c1:	add    DWORD PTR [rax],eax
  4096c3:	add    ah,bh
  4096c5:	add    DWORD PTR [rax],eax
  4096c7:	add    al,dh
  4096c9:	add    DWORD PTR [rax],eax
  4096cb:	add    al,ah
  4096cd:	add    DWORD PTR [rax],eax
  4096cf:	add    al,ah
  4096d1:	add    DWORD PTR [rax],eax
  4096d3:	add    al,ah
  4096d5:	add    DWORD PTR [rax],eax
  4096d7:	add    al,ah
  4096d9:	add    DWORD PTR [rax],eax
  4096db:	add    al,ah
  4096dd:	add    DWORD PTR [rax],eax
  4096df:	add    al,ah
  4096e1:	add    eax,DWORD PTR [rax]
  4096e3:	add    al,al
  4096e5:	add    DWORD PTR [rax],eax
  4096e7:	add    BYTE PTR [rax-0x40000000],al
  4096ed:	add    DWORD PTR [rax],eax
  4096ef:	add    BYTE PTR [rax-0x40000000],al
  4096f5:	add    DWORD PTR [rax],0xc7f100
  4096fb:	add    bh,bh
  4096fd:	inc    DWORD PTR [rax]
  4096ff:	add    BYTE PTR [rax],ch
  409701:	add    BYTE PTR [rax],al
  409703:	add    BYTE PTR [rax],ah
  409705:	add    BYTE PTR [rax],al
  409707:	add    BYTE PTR [rax+0x0],al
  40970a:	add    BYTE PTR [rax],al
  40970c:	add    DWORD PTR [rax],eax
  40970e:	and    BYTE PTR [rax],al
  409710:	add    BYTE PTR [rax],al
  409712:	add    BYTE PTR [rax],al
  409714:	adc    BYTE PTR [rax],0x0
	...
  40975f:	add    BYTE PTR [rbx],dh
  409761:	cdq    
  409762:	xor    edi,edi
  409764:	xor    esp,DWORD PTR [rsi+0x33]
  409767:	push   QWORD PTR [rbx]
  409769:	xor    di,di
  40976c:	xor    esp,DWORD PTR [rsi+0x33]
  40976f:	push   QWORD PTR [rbx]
  409771:	xor    di,di
  409774:	xor    esp,DWORD PTR [rsi+0x33]
  409777:	push   QWORD PTR [rbx]
  409779:	xor    di,di
  40977c:	xor    esp,DWORD PTR [rsi+0x33]
  40977f:	push   QWORD PTR [rbx]
  409781:	xor    di,di
  409784:	xor    esp,DWORD PTR [rsi+0x33]
  409787:	push   QWORD PTR [rbx]
  409789:	xor    di,di
  40978c:	xor    esp,DWORD PTR [rsi+0x33]
  40978f:	push   QWORD PTR [rbx]
  409791:	xor    di,di
  409794:	xor    esp,DWORD PTR [rsi+0x33]
  409797:	push   QWORD PTR [rbx]
  409799:	xor    di,di
  40979c:	xor    esp,DWORD PTR [rsi+0x33]
  40979f:	inc    DWORD PTR [rax]
	...
  4097dd:	add    BYTE PTR [rax],al
  4097df:	add    BYTE PTR [rbx],dh
  4097e1:	cdq    
  4097e2:	xor    edi,edi
  4097e4:	cwd    
  4097e6:	jmp    WORD PTR [rsi-0x67]
  4097ea:	push   WORD PTR [rbx]
  4097ed:	cdq    
  4097ee:	push   WORD PTR [rbx]
  4097f1:	cdq    
  4097f2:	push   WORD PTR [rbx]
  4097f5:	cdq    
  4097f6:	push   WORD PTR [rbx]
  4097f9:	cdq    
  4097fa:	xor    edi,edi
  4097fc:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  409802:	xor    edi,edi
  409804:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  40980a:	xor    edi,edi
  40980c:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  409812:	xor    edi,edi
  409814:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  40981a:	xor    edi,edi
  40981c:	xor    esp,DWORD PTR [rsi+0x33]
  40981f:	inc    DWORD PTR [rax]
	...
  40985d:	add    BYTE PTR [rax],al
  40985f:	add    BYTE PTR [rbx],dh
  409861:	cdq    
  409862:	xor    edi,edi
  409864:	rcr    ah,0xc0
  409867:	jmp    QWORD PTR [rsi-0x34]
  40986a:	jmp    WORD PTR [rsi-0x67]
  40986e:	push   WORD PTR [rbx]
  409871:	cdq    
  409872:	push   WORD PTR [rbx]
  409875:	xor    di,di
  409878:	cwd    
  40987a:	jmp    WORD PTR [rsi-0x67]
  40987e:	push   WORD PTR [rbx]
  409881:	cdq    
  409882:	push   WORD PTR [rbx]
  409885:	cdq    
  409886:	push   WORD PTR [rbx]
  409889:	cdq    
  40988a:	xor    edi,edi
  40988c:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  409892:	xor    edi,edi
  409894:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  40989a:	xor    edi,edi
  40989c:	xor    esp,DWORD PTR [rsi+0x33]
  40989f:	inc    DWORD PTR [rax]
	...
  4098dd:	add    BYTE PTR [rax],al
  4098df:	add    BYTE PTR [rbx],dh
  4098e1:	cdq    
  4098e2:	xor    edi,edi
  4098e4:	rcr    ah,0xc0
  4098e7:	jmp    QWORD PTR [rsi-0x34]
  4098ea:	cdq    
  4098eb:	jmp    QWORD PTR [rsi-0x67]
  4098ee:	push   WORD PTR [rbx]
  4098f1:	xor    di,di
  4098f4:	rol    al,0xc0
  4098f7:	push   QWORD PTR [rbx]
  4098f9:	xor    di,di
  4098fc:	xor    ebx,DWORD PTR [rcx-0x6699009a]
  409902:	push   WORD PTR [rbx]
  409905:	cdq    
  409906:	xor    edi,edi
  409908:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  40990e:	xor    edi,edi
  409910:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  409916:	xor    edi,edi
  409918:	xor    ebx,DWORD PTR [rcx+0x6633ff33]
  40991e:	xor    edi,edi
	...
  409960:	xor    ebx,DWORD PTR [rcx-0x233f00cd]
  409966:	sar    bh,0x66
  409969:	int3   
  40996a:	cdq    
  40996b:	push   QWORD PTR [rbx]
  40996d:	xor    di,di
  409970:	fstp   st(5)
  409972:	(bad)  
  409974:	rol    al,0xc0
  409977:	inc    eax
  409979:	rol    al,0xff
  40997c:	xor    esp,DWORD PTR [rsi+0x33]
  40997f:	jmp    QWORD PTR [rsi-0x67]
  409982:	push   WORD PTR [rbx]
  409985:	cdq    
  409986:	jmp    WORD PTR [rsi+0x66]
  40998a:	push   WORD PTR [rbx]
  40998d:	xor    di,di
  409990:	xor    ebx,DWORD PTR [rcx-0x66cc009a]
  409996:	push   WORD PTR [rbx]
  409999:	cdq    
  40999a:	xor    edi,edi
  40999c:	xor    esp,DWORD PTR [rsi+0x33]
  40999f:	inc    DWORD PTR [rax]
	...
  4099dd:	add    BYTE PTR [rax],al
  4099df:	add    BYTE PTR [rsi-0x67],ah
  4099e2:	inc    ax
  4099e5:	fadd   st(0),st
  4099e7:	call   FWORD PTR [rcx-0x6634]
  4099ed:	(bad)  
  4099ee:	(bad)  
  4099ef:	(bad)  
  4099f0:	(bad)  
  4099f1:	(bad)  
  4099f2:	(bad)  
  4099f3:	push   rcx
  4099f5:	icebp  
  4099f6:	icebp  
  4099f7:	dec    esp
  4099f9:	int3   
  4099fa:	int3   
  4099fb:	inc    eax
  4099fd:	rol    al,0xff
  409a00:	xor    esp,DWORD PTR [rsi+0x33]
  409a03:	push   QWORD PTR [rbx]
  409a05:	xor    esi,DWORD PTR [rbx]
  409a07:	dec    esp
  409a09:	int3   
  409a0a:	int3   
  409a0b:	inc    eax
  409a0d:	rol    al,0xff
  409a10:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  409a16:	push   WORD PTR [rbx]
  409a19:	cdq    
  409a1a:	xor    edi,edi
  409a1c:	xor    esp,DWORD PTR [rsi+0x33]
  409a1f:	inc    DWORD PTR [rax]
	...
  409a55:	add    BYTE PTR [rax],al
  409a57:	add    BYTE PTR [rbx],dh
  409a59:	xor    esp,DWORD PTR [rsi-0x1]
  409a5c:	xor    esi,DWORD PTR [rbx]
  409a5e:	jmp    WORD PTR [rsi-0x67]
  409a62:	inc    ax
  409a65:	fadd   st(0),st
  409a67:	call   FWORD PTR [rcx+0x66ff99cc]
  409a6d:	int3   
  409a6e:	cdq    
  409a6f:	(bad)  
  409a70:	(bad)  
  409a71:	(bad)  
  409a72:	(bad)  
  409a73:	(bad)  
  409a74:	(bad)  
  409a75:	(bad)  
  409a76:	(bad)  
  409a77:	(bad)  
  409a78:	(bad)  
  409a79:	(bad)  
  409a7a:	(bad)  
  409a7b:	call   rdi
  409a7d:	xlat   BYTE PTR ds:[rbx]
  409a7e:	xlat   BYTE PTR ds:[rbx]
  409a7f:	inc    eax
  409a81:	rol    al,0xff
  409a84:	xlat   BYTE PTR ds:[rbx]
  409a85:	xlat   BYTE PTR ds:[rbx]
  409a86:	xlat   BYTE PTR ds:[rbx]
  409a87:	call   rdi
  409a89:	xlat   BYTE PTR ds:[rbx]
  409a8a:	xlat   BYTE PTR ds:[rbx]
  409a8b:	inc    eax
  409a8d:	rol    al,0xff
  409a90:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  409a96:	push   WORD PTR [rbx]
  409a99:	cdq    
  409a9a:	xor    edi,edi
  409a9c:	xor    esp,DWORD PTR [rsi+0x33]
  409a9f:	inc    DWORD PTR [rax]
	...
  409acd:	add    BYTE PTR [rax],al
  409acf:	add    BYTE PTR [rbx],dh
  409ad1:	cwd    
  409ad3:	push   QWORD PTR [rbx]
  409ad5:	cwd    
  409ad7:	jmp    QWORD PTR [rsi-0x67]
  409ada:	int3   
  409adb:	jmp    QWORD PTR [rsi-0x67]
  409ade:	cdq    
  409adf:	push   QWORD PTR [rbx]
  409ae1:	cdq    
  409ae2:	inc    ax
  409ae5:	fadd   st(0),st
  409ae7:	call   FWORD PTR [rcx+0x66ff99cc]
  409aed:	int3   
  409aee:	cdq    
  409aef:	jmp    QWORD PTR [rsi-0x34]
  409af2:	data16 (bad) 
  409af4:	(bad)  
  409af5:	(bad)  
  409af6:	(bad)  
  409af7:	(bad)  
  409af8:	(bad)  
  409af9:	(bad)  
  409afa:	(bad)  
  409afb:	(bad)  
  409afc:	(bad)  
  409afd:	(bad)  
  409afe:	(bad)  
  409aff:	push   rcx
  409b01:	icebp  
  409b02:	icebp  
  409b03:	push   rcx
  409b05:	icebp  
  409b06:	icebp  
  409b07:	push   rcx
  409b09:	icebp  
  409b0a:	icebp  
  409b0b:	dec    esp
  409b0d:	int3   
  409b0e:	int3   
  409b0f:	push   QWORD PTR [rbx]
  409b11:	cdq    
  409b12:	jmp    WORD PTR [rsi-0x67]
  409b16:	push   WORD PTR [rbx]
  409b19:	cdq    
  409b1a:	xor    edi,edi
  409b1c:	xor    esp,DWORD PTR [rsi+0x33]
  409b1f:	inc    DWORD PTR [rax]
	...
  409b45:	add    BYTE PTR [rax],al
  409b47:	add    BYTE PTR [rsi-0x67],ah
  409b4a:	cdq    
  409b4b:	push   QWORD PTR [rbx]
  409b4d:	cwd    
  409b4f:	call   rsi
  409b51:	out    0xe7,eax
  409b53:	call   rsi
  409b55:	out    0xe7,eax
  409b57:	jmp    QWORD PTR [rsi-0x67]
  409b5a:	cdq    
  409b5b:	jmp    QWORD PTR [rsi-0x67]
  409b5e:	int3   
  409b5f:	jmp    QWORD PTR [rsi-0x67]
  409b62:	inc    ax
  409b65:	fadd   st(0),st
  409b67:	call   FWORD PTR [rcx-0x66006634]
  409b6d:	int3   
  409b6e:	cdq    
  409b6f:	jmp    QWORD PTR [rsi-0x34]
  409b72:	cdq    
  409b73:	jmp    QWORD PTR [rsi-0x67]
  409b76:	data16 (bad) 
  409b78:	(bad)  
  409b79:	(bad)  
  409b7a:	(bad)  
  409b7b:	push   rcx
  409b7d:	icebp  
  409b7e:	icebp  
  409b7f:	(bad)  
  409b80:	(bad)  
  409b81:	(bad)  
  409b82:	(bad)  
  409b83:	(bad)  
  409b84:	(bad)  
  409b85:	(bad)  
  409b86:	(bad)  
  409b87:	push   rcx
  409b89:	icebp  
  409b8a:	icebp  
  409b8b:	dec    esp
  409b8d:	int3   
  409b8e:	int3   
  409b8f:	jmp    QWORD PTR [rsi-0x67]
  409b92:	push   WORD PTR [rbx]
  409b95:	cdq    
  409b96:	push   WORD PTR [rbx]
  409b99:	cdq    
  409b9a:	xor    edi,edi
  409b9c:	xor    esp,DWORD PTR [rsi+0x33]
  409b9f:	inc    DWORD PTR [rax]
	...
  409bbd:	add    BYTE PTR [rax],al
  409bbf:	add    BYTE PTR [rsi-0x67],ah
  409bc2:	cdq    
  409bc3:	jmp    QWORD PTR [rsi-0x67]
  409bc6:	cdq    
  409bc7:	jmp    QWORD PTR [rsi-0x67]
  409bca:	int3   
  409bcb:	call   rsi
  409bcd:	out    0xe7,eax
  409bcf:	call   rsi
  409bd1:	out    0xe7,eax
  409bd3:	call   rsi
  409bd5:	out    0xe7,eax
  409bd7:	jmp    QWORD PTR [rsi-0x67]
  409bda:	int3   
  409bdb:	jmp    QWORD PTR [rsi-0x67]
  409bde:	int3   
  409bdf:	jmp    QWORD PTR [rsi-0x67]
  409be2:	inc    ax
  409be5:	fadd   st(0),st
  409be7:	call   FWORD PTR [rcx-0x66006634]
  409bed:	int3   
  409bee:	cdq    
  409bef:	jmp    QWORD PTR [rsi-0x67]
  409bf2:	push   WORD PTR [rbx]
  409bf5:	data16 data16 (bad) 
  409bf8:	(bad)  
  409bf9:	(bad)  
  409bfa:	(bad)  
  409bfb:	push   rcx
  409bfd:	icebp  
  409bfe:	icebp  
  409bff:	(bad)  
  409c00:	(bad)  
  409c01:	(bad)  
  409c02:	(bad)  
  409c03:	push   rax
  409c05:	sti    
  409c06:	(bad)  
  409c07:	push   rcx
  409c09:	icebp  
  409c0a:	icebp  
  409c0b:	call   rdi
  409c0d:	xlat   BYTE PTR ds:[rbx]
  409c0e:	xlat   BYTE PTR ds:[rbx]
  409c0f:	jmp    QWORD PTR [rsi-0x67]
  409c12:	jmp    WORD PTR [rsi-0x67]
  409c16:	push   WORD PTR [rbx]
  409c19:	cdq    
  409c1a:	push   WORD PTR [rbx]
  409c1d:	xor    di,di
	...
  409c3c:	cwd    
  409c3e:	cdq    
  409c3f:	jmp    QWORD PTR [rsi-0x67]
  409c42:	int3   
  409c43:	call   FWORD PTR [rcx-0x66003334]
  409c49:	int3   
  409c4a:	int3   
  409c4b:	push   rax
  409c4d:	sti    
  409c4e:	(bad)  
  409c4f:	call   rsi
  409c51:	out    0xe7,eax
  409c53:	call   rsi
  409c55:	out    0xe7,eax
  409c57:	call   FWORD PTR [rcx+0x66ffcccc]
  409c5d:	cdq    
  409c5e:	int3   
  409c5f:	jmp    QWORD PTR [rsi-0x67]
  409c62:	inc    ax
  409c65:	fadd   st(0),st
  409c67:	call   FWORD PTR [rcx-0x66006634]
  409c6d:	int3   
  409c6e:	cdq    
  409c6f:	jmp    QWORD PTR [rsi-0x34]
  409c72:	cdq    
  409c73:	(bad)  
  409c74:	(bad)  
  409c75:	(bad)  
  409c76:	(bad)  
  409c77:	(bad)  
  409c78:	(bad)  
  409c79:	(bad)  
  409c7a:	(bad)  
  409c7b:	(bad)  
  409c7c:	(bad)  
  409c7d:	(bad)  
  409c7e:	(bad)  
  409c7f:	(bad)  
  409c80:	(bad)  
  409c81:	(bad)  
  409c82:	(bad)  
  409c83:	(bad)  
  409c84:	(bad)  
  409c85:	(bad)  
  409c86:	(bad)  
  409c87:	(bad)  
  409c88:	(bad)  
  409c89:	(bad)  
  409c8a:	(bad)  
  409c8b:	jmp    rbx
  409c8d:	jrcxz  0x409c72
  409c8f:	jmp    QWORD PTR [rsi-0x67]
  409c92:	jmp    WORD PTR [rsi-0x34]
  409c96:	push   WORD PTR [rbx]
  409c99:	cdq    
  409c9a:	push   WORD PTR [rbx]
  409c9d:	xor    di,di
	...
  409cbc:	cwd    
  409cbe:	cdq    
  409cbf:	call   FWORD PTR [rcx+0x66ffffcc]
  409cc5:	cdq    
  409cc6:	int3   
  409cc7:	jmp    QWORD PTR [rsi-0x67]
  409cca:	int3   
  409ccb:	push   rax
  409ccd:	sti    
  409cce:	(bad)  
  409ccf:	call   rsi
  409cd1:	out    0xe7,eax
  409cd3:	call   rsi
  409cd5:	out    0xe7,eax
  409cd7:	jmp    QWORD PTR [rsi-0x67]
  409cda:	int3   
  409cdb:	call   FWORD PTR [rcx+0x66ffcccc]
  409ce1:	cdq    
  409ce2:	inc    ax
  409ce5:	fadd   st(0),st
  409ce7:	call   FWORD PTR [rcx-0x66006634]
  409ced:	int3   
  409cee:	cdq    
  409cef:	jmp    QWORD PTR [rsi-0x34]
  409cf2:	cdq    
  409cf3:	(bad)  
  409cf4:	(bad)  
  409cf5:	(bad)  
  409cf6:	(bad)  
  409cf7:	(bad)  
  409cf8:	(bad)  
  409cf9:	(bad)  
  409cfa:	(bad)  
  409cfb:	(bad)  
  409cfc:	(bad)  
  409cfd:	(bad)  
  409cfe:	(bad)  
  409cff:	(bad)  
  409d00:	(bad)  
  409d01:	(bad)  
  409d02:	(bad)  
  409d03:	(bad)  
  409d04:	(bad)  
  409d05:	(bad)  
  409d06:	(bad)  
  409d07:	(bad)  
  409d08:	(bad)  
  409d09:	(bad)  
  409d0a:	(bad)  
  409d0b:	(bad)  
  409d0c:	(bad)  
  409d0d:	(bad)  
  409d0e:	(bad)  
  409d0f:	jmp    QWORD PTR [rsi-0x34]
  409d12:	jmp    WORD PTR [rsi-0x67]
  409d16:	push   WORD PTR [rbx]
  409d19:	cdq    
  409d1a:	push   WORD PTR [rbx]
  409d1d:	xor    di,di
	...
  409d3c:	cwd    
  409d3e:	cdq    
  409d3f:	call   FWORD PTR [rcx-0x66003334]
  409d45:	int3   
  409d46:	int3   
  409d47:	call   FWORD PTR [rcx-0xf003334]
  409d4d:	sti    
  409d4e:	(bad)  
  409d4f:	call   rsi
  409d51:	out    0xe7,eax
  409d53:	call   rsi
  409d55:	out    0xe7,eax
  409d57:	call   FWORD PTR [rcx+0x66ffcccc]
  409d5d:	cdq    
  409d5e:	int3   
  409d5f:	jmp    QWORD PTR [rsi-0x67]
  409d62:	inc    ax
  409d65:	fadd   st(0),st
  409d67:	call   FWORD PTR [rcx-0x66006634]
  409d6d:	int3   
  409d6e:	cdq    
  409d6f:	call   FWORD PTR [rcx-0x66006634]
  409d75:	int3   
  409d76:	cdq    
  409d77:	call   FWORD PTR [rcx-0x66006634]
  409d7d:	int3   
  409d7e:	cdq    
  409d7f:	call   FWORD PTR [rcx-0x66006634]
  409d85:	int3   
  409d86:	cdq    
  409d87:	call   FWORD PTR [rcx-0x66006634]
  409d8d:	int3   
  409d8e:	cdq    
  409d8f:	call   FWORD PTR [rcx+0x66ff99cc]
  409d95:	int3   
  409d96:	jmp    WORD PTR [rsi-0x67]
  409d9a:	push   WORD PTR [rbx]
  409d9d:	xor    di,di
	...
  409dbc:	cwd    
  409dbe:	cdq    
  409dbf:	call   FWORD PTR [rcx+0x66ffffcc]
  409dc5:	cdq    
  409dc6:	int3   
  409dc7:	call   FWORD PTR [rcx-0xf003334]
  409dcd:	sti    
  409dce:	(bad)  
  409dcf:	call   rsi
  409dd1:	out    0xe7,eax
  409dd3:	call   FWORD PTR [rcx+0x66ffffcc]
  409dd9:	cdq    
  409dda:	int3   
  409ddb:	call   FWORD PTR [rcx+0x66ffcccc]
  409de1:	cdq    
  409de2:	inc    ax
  409de5:	fadd   st(0),st
  409de7:	inc    eax
  409de9:	fadd   st(0),st
  409deb:	inc    eax
  409ded:	fadd   st(0),st
  409def:	inc    eax
  409df1:	fadd   st(0),st
  409df3:	inc    eax
  409df5:	fadd   st(0),st
  409df7:	inc    eax
  409df9:	fadd   st(0),st
  409dfb:	inc    eax
  409dfd:	fadd   st(0),st
  409dff:	inc    eax
  409e01:	fadd   st(0),st
  409e03:	inc    eax
  409e05:	fadd   st(0),st
  409e07:	inc    eax
  409e09:	fadd   st(0),st
  409e0b:	inc    eax
  409e0d:	fadd   st(0),st
  409e0f:	inc    eax
  409e11:	fadd   st(0),st
  409e13:	inc    eax
  409e15:	fadd   st(0),st
  409e17:	jmp    QWORD PTR [rsi-0x34]
  409e1a:	push   WORD PTR [rbx]
  409e1d:	xor    di,di
	...
  409e3c:	cwd    
  409e3e:	cdq    
  409e3f:	call   FWORD PTR [rcx-0x66000034]
  409e45:	int3   
  409e46:	int3   
  409e47:	call   FWORD PTR [rcx-0x29000034]
  409e4d:	out    0xe7,eax
  409e4f:	call   rsi
  409e51:	out    0xe7,eax
  409e53:	call   FWORD PTR [rcx-0x66003334]
  409e59:	int3   
  409e5a:	int3   
  409e5b:	jmp    QWORD PTR [rsi-0x67]
  409e5e:	int3   
  409e5f:	jmp    QWORD PTR [rsi-0x67]
  409e62:	jmp    WORD PTR [rsi-0x67]
  409e66:	jmp    WORD PTR [rsi-0x67]
  409e6a:	jmp    WORD PTR [rsi-0x67]
  409e6e:	jmp    WORD PTR [rsi-0x67]
  409e72:	jmp    WORD PTR [rsi-0x67]
  409e76:	jmp    WORD PTR [rsi-0x67]
  409e7a:	jmp    WORD PTR [rsi-0x67]
  409e7e:	jmp    WORD PTR [rsi-0x67]
  409e82:	push   WORD PTR [rbx]
  409e85:	cdq    
  409e86:	xor    edi,edi
  409e88:	cwd    
  409e8a:	push   WORD PTR [rbx]
  409e8d:	cdq    
  409e8e:	xor    edi,edi
  409e90:	cwd    
  409e92:	push   WORD PTR [rbx]
  409e95:	cdq    
  409e96:	xor    edi,edi
  409e98:	xor    ebx,DWORD PTR [rcx-0x66cc00cd]
  409e9e:	xor    edi,edi
	...
  409ebc:	cwd    
  409ebe:	cdq    
  409ebf:	call   FWORD PTR [rcx-0x66003334]
  409ec5:	int3   
  409ec6:	(bad)  
  409ec7:	call   FWORD PTR [rcx-0x66003334]
  409ecd:	int3   
  409ece:	int3   
  409ecf:	call   FWORD PTR [rcx-0x66000034]
  409ed5:	int3   
  409ed6:	int3   
  409ed7:	call   FWORD PTR [rcx+0x66ffffcc]
  409edd:	int3   
  409ede:	int3   
  409edf:	call   FWORD PTR [rcx+0x66ffcccc]
  409ee5:	cdq    
  409ee6:	int3   
  409ee7:	push   QWORD PTR [rbx]
  409ee9:	data16 inc WORD PTR [rax]
  409eed:	xor    esp,DWORD PTR [rsi-0x1]
  409ef0:	xor    esp,DWORD PTR [rsi-0x67]
  409ef3:	push   QWORD PTR [rbx]
  409ef5:	data16 push WORD PTR [rbx]
  409ef9:	cwd    
  409efb:	push   QWORD PTR [rbx]
  409efd:	data16 push WORD PTR [rbx]
  409f01:	cwd    
  409f03:	push   QWORD PTR [rbx]
  409f05:	cwd    
  409f07:	push   QWORD PTR [rbx]
  409f09:	cwd    
  409f0b:	push   QWORD PTR [rbx]
  409f0d:	cwd    
  409f0f:	push   QWORD PTR [rbx]
  409f11:	cwd    
  409f13:	push   QWORD PTR [rbx]
  409f15:	xor    esp,DWORD PTR [rsi-0x1]
	...
  409f3c:	cwd    
  409f3e:	cdq    
  409f3f:	call   FWORD PTR [rcx-0x66000034]
  409f45:	int3   
  409f46:	int3   
  409f47:	call   FWORD PTR [rcx-0x39000034]
  409f4d:	(bad)  
  409f4e:	out    dx,eax
  409f4f:	push   rax
  409f51:	sti    
  409f52:	(bad)  
  409f53:	push   rax
  409f55:	sti    
  409f56:	(bad)  
  409f57:	call   FWORD PTR [rcx-0x66003334]
  409f5d:	int3   
  409f5e:	(bad)  
  409f5f:	call   FWORD PTR [rcx-0x66003334]
  409f65:	int3   
  409f66:	int3   
  409f67:	push   QWORD PTR [rbx]
  409f69:	data16 inc WORD PTR [rax]
  409f6d:	xor    esp,DWORD PTR [rsi-0x1]
  409f70:	xor    esp,DWORD PTR [rsi+0x66]
  409f73:	push   QWORD PTR [rbx]
  409f75:	cwd    
  409f77:	push   QWORD PTR [rbx]
  409f79:	data16 push WORD PTR [rbx]
  409f7d:	cwd    
  409f7f:	push   QWORD PTR [rbx]
  409f81:	cwd    
  409f83:	push   QWORD PTR [rbx]
  409f85:	data16 push WORD PTR [rbx]
  409f89:	cwd    
  409f8b:	push   QWORD PTR [rbx]
  409f8d:	cwd    
  409f8f:	push   QWORD PTR [rbx]
  409f91:	cwd    
  409f93:	push   QWORD PTR [rbx]
  409f95:	xor    esp,DWORD PTR [rsi-0x1]
	...
  409fbc:	cwd    
  409fbe:	cdq    
  409fbf:	call   FWORD PTR [rcx-0x66000034]
  409fc5:	int3   
  409fc6:	int3   
  409fc7:	call   FWORD PTR [rcx-0x29000034]
  409fcd:	out    0xe7,eax
  409fcf:	push   rax
  409fd1:	sti    
  409fd2:	(bad)  
  409fd3:	push   rax
  409fd5:	sti    
  409fd6:	(bad)  
  409fd7:	call   FWORD PTR [rcx-0x66003334]
  409fdd:	int3   
  409fde:	int3   
  409fdf:	call   FWORD PTR [rcx-0x66000034]
  409fe5:	int3   
  409fe6:	int3   
  409fe7:	push   QWORD PTR [rbx]
  409fe9:	data16 inc WORD PTR [rax]
  409fed:	xor    esp,DWORD PTR [rsi-0x1]
  409ff0:	add    BYTE PTR [rbx],dh
  409ff2:	inc    WORD PTR [rax]
  409ff5:	xor    esp,DWORD PTR [rsi-0x1]
  409ff8:	xor    esp,DWORD PTR [rsi-0x67]
  409ffb:	push   QWORD PTR [rbx]
  409ffd:	cwd    
  409fff:	push   QWORD PTR [rbx]
  40a001:	cwd    
  40a003:	push   QWORD PTR [rbx]
  40a005:	data16 inc WORD PTR [rax]
  40a009:	cwd    
  40a00b:	push   QWORD PTR [rbx]
  40a00d:	cwd    
  40a00f:	push   QWORD PTR [rbx]
  40a011:	cwd    
  40a013:	push   QWORD PTR [rbx]
  40a015:	xor    esp,DWORD PTR [rsi-0x1]
	...
  40a03c:	cwd    
  40a03e:	cdq    
  40a03f:	call   FWORD PTR [rcx-0x66003334]
  40a045:	int3   
  40a046:	(bad)  
  40a047:	call   FWORD PTR [rcx-0xf003334]
  40a04d:	sti    
  40a04e:	(bad)  
  40a04f:	push   rax
  40a051:	sti    
  40a052:	(bad)  
  40a053:	call   rsi
  40a055:	out    0xe7,eax
  40a057:	call   FWORD PTR [rcx-0x66000034]
  40a05d:	int3   
  40a05e:	(bad)  
  40a05f:	call   FWORD PTR [rcx-0x66003334]
  40a065:	int3   
  40a066:	int3   
  40a067:	push   QWORD PTR [rbx]
  40a069:	data16 jmp WORD PTR [rsi-0x67]
  40a06e:	cdq    
  40a06f:	jmp    QWORD PTR [rsi-0x67]
  40a072:	cdq    
  40a073:	jmp    QWORD PTR [rsi-0x67]
  40a076:	cdq    
  40a077:	push   QWORD PTR [rbx]
  40a079:	data16 inc WORD PTR [rax]
  40a07d:	xor    esp,DWORD PTR [rsi-0x1]
  40a080:	add    BYTE PTR [rbx],dh
  40a082:	inc    WORD PTR [rax]
  40a085:	cwd    
  40a087:	push   QWORD PTR [rbx]
  40a089:	data16 push WORD PTR [rbx]
  40a08d:	cwd    
  40a08f:	inc    DWORD PTR [rax]
  40a091:	data16 push WORD PTR [rbx]
  40a095:	xor    esp,DWORD PTR [rsi-0x1]
	...
  40a0bc:	cwd    
  40a0be:	cdq    
  40a0bf:	call   FWORD PTR [rcx-0x66000034]
  40a0c5:	int3   
  40a0c6:	(bad)  
  40a0c7:	call   FWORD PTR [rcx-0x29003334]
  40a0cd:	out    0xe7,eax
  40a0cf:	jmp    QWORD PTR [rsi-0x67]
  40a0d2:	int3   
  40a0d3:	jmp    QWORD PTR [rsi-0x67]
  40a0d6:	int3   
  40a0d7:	push   QWORD PTR [rbx]
  40a0d9:	cdq    
  40a0da:	cdq    
  40a0db:	jmp    QWORD PTR [rsi-0x67]
  40a0de:	cdq    
  40a0df:	push   QWORD PTR [rbx]
  40a0e1:	cwd    
  40a0e3:	push   QWORD PTR [rbx]
  40a0e5:	cdq    
  40a0e6:	int3   
  40a0e7:	push   QWORD PTR [rbx]
  40a0e9:	cwd    
  40a0eb:	jmp    QWORD PTR [rsi-0x67]
  40a0ee:	int3   
  40a0ef:	call   FWORD PTR [rcx-0x66003334]
  40a0f5:	int3   
  40a0f6:	int3   
  40a0f7:	jmp    QWORD PTR [rsi-0x67]
  40a0fa:	cdq    
  40a0fb:	jmp    QWORD PTR [rsi-0x67]
  40a0fe:	cdq    
  40a0ff:	jmp    QWORD PTR [rsi-0x67]
  40a102:	cdq    
  40a103:	inc    DWORD PTR [rax]
  40a105:	xor    esp,DWORD PTR [rsi-0x1]
  40a108:	add    BYTE PTR [rbx],dh
  40a10a:	inc    WORD PTR [rax]
  40a10d:	xor    esp,DWORD PTR [rsi-0x1]
  40a110:	add    BYTE PTR [rsi+0x66],ah
  40a113:	push   QWORD PTR [rbx]
  40a115:	xor    esp,DWORD PTR [rsi-0x1]
	...
  40a13c:	cwd    
  40a13e:	cdq    
  40a13f:	call   FWORD PTR [rcx+0x66ffcccc]
  40a145:	cdq    
  40a146:	int3   
  40a147:	jmp    QWORD PTR [rsi-0x67]
  40a14a:	int3   
  40a14b:	jmp    QWORD PTR [rsi-0x67]
  40a14e:	cdq    
  40a14f:	call   FWORD PTR [rcx-0x39003334]
  40a155:	(bad)  
  40a156:	out    dx,eax
  40a157:	call   FWORD PTR [rcx-0x66003334]
  40a15d:	int3   
  40a15e:	(bad)  
  40a15f:	jmp    QWORD PTR [rsi-0x67]
  40a162:	int3   
  40a163:	jmp    QWORD PTR [rsi-0x67]
  40a166:	int3   
  40a167:	push   QWORD PTR [rbx]
  40a169:	cwd    
  40a16b:	push   QWORD PTR [rbx]
  40a16d:	cdq    
  40a16e:	cdq    
  40a16f:	jmp    QWORD PTR [rsi-0x67]
  40a172:	int3   
  40a173:	call   FWORD PTR [rcx-0x66003334]
  40a179:	int3   
  40a17a:	int3   
  40a17b:	call   FWORD PTR [rcx-0x66000034]
  40a181:	int3   
  40a182:	int3   
  40a183:	call   QWORD PTR [rax+0x66ffada9]
  40a189:	cdq    
  40a18a:	cdq    
  40a18b:	jmp    QWORD PTR [rsi-0x67]
  40a18e:	cdq    
  40a18f:	inc    DWORD PTR [rax]
  40a191:	xor    esp,DWORD PTR [rsi-0x1]
  40a194:	xor    esi,DWORD PTR [rbx]
  40a196:	inc    WORD PTR [rax]
	...
  40a1b5:	add    BYTE PTR [rax],al
  40a1b7:	add    BYTE PTR [rsi-0x67],ah
  40a1ba:	int3   
  40a1bb:	jmp    QWORD PTR [rsi-0x67]
  40a1be:	int3   
  40a1bf:	jmp    QWORD PTR [rsi-0x67]
  40a1c2:	int3   
  40a1c3:	jmp    QWORD PTR [rsi-0x67]
  40a1c6:	int3   
  40a1c7:	inc    esi
  40a1c9:	(bad)  
  40a1ca:	out    dx,eax
  40a1cb:	inc    esi
  40a1cd:	(bad)  
  40a1ce:	out    dx,eax
  40a1cf:	inc    esi
  40a1d1:	(bad)  
  40a1d2:	out    dx,eax
  40a1d3:	call   QWORD PTR [rax+0x66ffada9]
  40a1d9:	cdq    
  40a1da:	int3   
  40a1db:	jmp    QWORD PTR [rsi-0x67]
  40a1de:	int3   
  40a1df:	jmp    QWORD PTR [rsi-0x67]
  40a1e2:	int3   
  40a1e3:	push   QWORD PTR [rbx]
  40a1e5:	cwd    
  40a1e7:	push   QWORD PTR [rbx]
  40a1e9:	cwd    
  40a1eb:	jmp    QWORD PTR [rsi-0x67]
  40a1ee:	int3   
  40a1ef:	jmp    QWORD PTR [rsi-0x67]
  40a1f2:	int3   
  40a1f3:	jmp    QWORD PTR [rsi-0x67]
  40a1f6:	int3   
  40a1f7:	jmp    QWORD PTR [rsi-0x67]
  40a1fa:	cdq    
  40a1fb:	jmp    QWORD PTR [rsi-0x67]
  40a1fe:	int3   
  40a1ff:	call   FWORD PTR [rcx-0x66003334]
  40a205:	int3   
  40a206:	(bad)  
  40a207:	call   FWORD PTR [rcx+0x66ffcccc]
  40a20d:	cdq    
  40a20e:	int3   
  40a20f:	jmp    QWORD PTR [rsi-0x67]
  40a212:	cdq    
  40a213:	jmp    QWORD PTR [rsi-0x67]
  40a216:	cdq    
  40a217:	jmp    QWORD PTR [rsi-0x67]
  40a21a:	cdq    
  40a21b:	inc    DWORD PTR [rax]
	...
  40a22d:	add    BYTE PTR [rax],al
  40a22f:	add    BYTE PTR [rsi-0x67],ah
  40a232:	int3   
  40a233:	jmp    QWORD PTR [rsi-0x67]
  40a236:	int3   
  40a237:	dec    esp
  40a239:	(bad)  
  40a23a:	(bad)  
  40a23b:	call   rsi
  40a23d:	out    0xe7,eax
  40a23f:	inc    esi
  40a241:	(bad)  
  40a242:	out    dx,eax
  40a243:	call   rsi
  40a245:	out    0xe7,eax
  40a247:	call   FWORD PTR [rcx+0x66ffcccc]
  40a24d:	cdq    
  40a24e:	int3   
  40a24f:	jmp    QWORD PTR [rsi-0x67]
  40a252:	int3   
  40a253:	jmp    QWORD PTR [rsi-0x67]
  40a256:	int3   
  40a257:	push   QWORD PTR [rbx]
  40a259:	cwd    
  40a25b:	push   QWORD PTR [rbx]
  40a25d:	cwd    
  40a25f:	push   QWORD PTR [rbx]
  40a261:	cwd    
  40a263:	push   QWORD PTR [rbx]
  40a265:	cwd    
  40a267:	push   QWORD PTR [rbx]
  40a269:	cwd    
  40a26b:	jmp    QWORD PTR [rsi-0x67]
  40a26e:	int3   
  40a26f:	jmp    QWORD PTR [rsi-0x67]
  40a272:	int3   
  40a273:	jmp    QWORD PTR [rsi-0x67]
  40a276:	int3   
  40a277:	jmp    QWORD PTR [rsi-0x67]
  40a27a:	int3   
  40a27b:	jmp    QWORD PTR [rsi-0x67]
  40a27e:	int3   
  40a27f:	jmp    QWORD PTR [rsi-0x67]
  40a282:	int3   
  40a283:	jmp    QWORD PTR [rsi-0x67]
  40a286:	cdq    
  40a287:	jmp    QWORD PTR [rsi-0x67]
  40a28a:	int3   
  40a28b:	call   FWORD PTR [rcx-0x66000034]
  40a291:	int3   
  40a292:	int3   
  40a293:	jmp    QWORD PTR [rsi-0x67]
  40a296:	int3   
  40a297:	call   QWORD PTR [rax+0x66ffada9]
  40a29d:	cdq    
  40a29e:	cdq    
  40a29f:	inc    DWORD PTR [rax]
	...
  40a2a9:	add    BYTE PTR [rax],al
  40a2ab:	add    BYTE PTR [rsi-0x67],ah
  40a2ae:	int3   
  40a2af:	jmp    QWORD PTR [rsi-0x67]
  40a2b2:	int3   
  40a2b3:	jmp    QWORD PTR [rsi-0x67]
  40a2b6:	int3   
  40a2b7:	jmp    QWORD PTR [rsi-0x67]
  40a2ba:	int3   
  40a2bb:	jmp    QWORD PTR [rsi-0x67]
  40a2be:	int3   
  40a2bf:	jmp    QWORD PTR [rsi-0x67]
  40a2c2:	int3   
  40a2c3:	jmp    QWORD PTR [rsi-0x67]
  40a2c6:	int3   
  40a2c7:	jmp    QWORD PTR [rsi-0x67]
  40a2ca:	int3   
  40a2cb:	push   QWORD PTR [rbx]
  40a2cd:	cwd    
  40a2cf:	push   QWORD PTR [rbx]
  40a2d1:	cwd    
  40a2d3:	push   QWORD PTR [rbx]
  40a2d5:	cwd    
  40a2d7:	push   QWORD PTR [rbx]
  40a2d9:	cwd    
  40a2db:	push   QWORD PTR [rbx]
  40a2dd:	cwd    
  40a2df:	push   QWORD PTR [rbx]
  40a2e1:	cwd    
  40a2e3:	push   QWORD PTR [rbx]
  40a2e5:	cwd    
  40a2e7:	push   QWORD PTR [rbx]
  40a2e9:	cwd    
  40a2eb:	jmp    QWORD PTR [rsi-0x67]
  40a2ee:	int3   
  40a2ef:	jmp    QWORD PTR [rsi-0x67]
  40a2f2:	int3   
  40a2f3:	jmp    QWORD PTR [rsi-0x67]
  40a2f6:	int3   
  40a2f7:	jmp    QWORD PTR [rsi-0x67]
  40a2fa:	int3   
  40a2fb:	jmp    QWORD PTR [rsi-0x67]
  40a2fe:	int3   
  40a2ff:	jmp    QWORD PTR [rsi-0x67]
  40a302:	int3   
  40a303:	jmp    QWORD PTR [rsi-0x67]
  40a306:	int3   
  40a307:	jmp    QWORD PTR [rsi-0x67]
  40a30a:	int3   
  40a30b:	jmp    QWORD PTR [rsi-0x67]
  40a30e:	cdq    
  40a30f:	jmp    QWORD PTR [rsi-0x67]
  40a312:	int3   
  40a313:	jmp    QWORD PTR [rsi-0x67]
  40a316:	cdq    
  40a317:	jmp    QWORD PTR [rsi-0x67]
  40a31a:	cdq    
  40a31b:	jmp    QWORD PTR [rsi-0x67]
  40a31e:	cdq    
  40a31f:	jmp    QWORD PTR [rsi-0x67]
  40a322:	cdq    
  40a323:	inc    DWORD PTR [rax]
	...
  40a339:	add    BYTE PTR [rax],al
  40a33b:	add    BYTE PTR [rcx+0x66ffcc99],bl
  40a341:	cdq    
  40a342:	cdq    
  40a343:	jmp    QWORD PTR [rsi-0x67]
  40a346:	int3   
  40a347:	push   QWORD PTR [rbx]
  40a349:	cdq    
  40a34a:	cdq    
  40a34b:	push   QWORD PTR [rbx]
  40a34d:	cwd    
  40a34f:	push   QWORD PTR [rbx]
  40a351:	cwd    
  40a353:	push   QWORD PTR [rbx]
  40a355:	cwd    
  40a357:	push   QWORD PTR [rbx]
  40a359:	cwd    
  40a35b:	push   QWORD PTR [rbx]
  40a35d:	cwd    
  40a35f:	push   QWORD PTR [rbx]
  40a361:	cwd    
  40a363:	push   QWORD PTR [rbx]
  40a365:	cwd    
  40a367:	push   QWORD PTR [rbx]
  40a369:	cwd    
  40a36b:	jmp    QWORD PTR [rsi-0x67]
  40a36e:	int3   
  40a36f:	jmp    QWORD PTR [rsi-0x34]
  40a372:	int3   
  40a373:	jmp    QWORD PTR [rsi-0x67]
  40a376:	int3   
  40a377:	jmp    QWORD PTR [rsi-0x34]
  40a37a:	int3   
  40a37b:	jmp    QWORD PTR [rsi-0x67]
  40a37e:	int3   
  40a37f:	jmp    QWORD PTR [rsi-0x34]
  40a382:	int3   
  40a383:	jmp    QWORD PTR [rsi-0x67]
  40a386:	int3   
  40a387:	jmp    QWORD PTR [rsi-0x67]
  40a38a:	cdq    
  40a38b:	jmp    QWORD PTR [rsi-0x67]
  40a38e:	int3   
  40a38f:	jmp    QWORD PTR [rsi-0x67]
  40a392:	cdq    
  40a393:	jmp    QWORD PTR [rsi-0x67]
  40a396:	int3   
  40a397:	inc    DWORD PTR [rax]
	...
  40a3b5:	add    BYTE PTR [rax],al
  40a3b7:	add    BYTE PTR [rsi-0x67],ah
  40a3ba:	int3   
  40a3bb:	jmp    QWORD PTR [rsi-0x34]
  40a3be:	int3   
  40a3bf:	call   FWORD PTR [rcx-0x66000034]
  40a3c5:	int3   
  40a3c6:	int3   
  40a3c7:	jmp    QWORD PTR [rsi-0x67]
  40a3ca:	int3   
  40a3cb:	jmp    QWORD PTR [rsi-0x67]
  40a3ce:	int3   
  40a3cf:	jmp    QWORD PTR [rsi-0x67]
  40a3d2:	cdq    
  40a3d3:	push   QWORD PTR [rbx]
  40a3d5:	cwd    
  40a3d7:	push   QWORD PTR [rbx]
  40a3d9:	cwd    
  40a3db:	push   QWORD PTR [rbx]
  40a3dd:	cwd    
  40a3df:	push   QWORD PTR [rbx]
  40a3e1:	cwd    
  40a3e3:	push   QWORD PTR [rbx]
  40a3e5:	cwd    
  40a3e7:	push   QWORD PTR [rbx]
  40a3e9:	cwd    
  40a3eb:	jmp    QWORD PTR [rsi-0x67]
  40a3ee:	int3   
  40a3ef:	jmp    QWORD PTR [rsi-0x67]
  40a3f2:	int3   
  40a3f3:	jmp    QWORD PTR [rsi-0x67]
  40a3f6:	int3   
  40a3f7:	jmp    QWORD PTR [rsi-0x67]
  40a3fa:	int3   
  40a3fb:	jmp    QWORD PTR [rsi-0x67]
  40a3fe:	int3   
  40a3ff:	jmp    QWORD PTR [rsi-0x67]
  40a402:	int3   
  40a403:	jmp    QWORD PTR [rsi-0x67]
  40a406:	int3   
  40a407:	jmp    QWORD PTR [rsi-0x67]
  40a40a:	int3   
  40a40b:	jmp    QWORD PTR [rsi-0x34]
  40a40e:	int3   
  40a40f:	jmp    QWORD PTR [rsi-0x67]
  40a412:	int3   
  40a413:	jmp    QWORD PTR [rsi-0x67]
  40a416:	int3   
  40a417:	jmp    QWORD PTR [rsi-0x67]
  40a41a:	int3   
  40a41b:	inc    DWORD PTR [rax]
	...
  40a431:	add    BYTE PTR [rax],al
  40a433:	add    BYTE PTR [rsi-0x67],ah
  40a436:	int3   
  40a437:	inc    esi
  40a439:	(bad)  
  40a43a:	out    dx,eax
  40a43b:	inc    esi
  40a43d:	(bad)  
  40a43e:	out    dx,eax
  40a43f:	inc    esi
  40a441:	(bad)  
  40a442:	out    dx,eax
  40a443:	call   FWORD PTR [rcx-0x66000034]
  40a449:	int3   
  40a44a:	int3   
  40a44b:	call   FWORD PTR [rcx+0x66ffffcc]
  40a451:	cdq    
  40a452:	int3   
  40a453:	push   QWORD PTR [rbx]
  40a455:	cdq    
  40a456:	cdq    
  40a457:	push   QWORD PTR [rbx]
  40a459:	cdq    
  40a45a:	cdq    
  40a45b:	push   QWORD PTR [rbx]
  40a45d:	cdq    
  40a45e:	cdq    
  40a45f:	push   QWORD PTR [rbx]
  40a461:	cwd    
  40a463:	push   QWORD PTR [rbx]
  40a465:	cwd    
  40a467:	push   QWORD PTR [rbx]
  40a469:	cwd    
  40a46b:	jmp    QWORD PTR [rsi-0x67]
  40a46e:	int3   
  40a46f:	jmp    QWORD PTR [rsi-0x34]
  40a472:	int3   
  40a473:	jmp    QWORD PTR [rsi-0x67]
  40a476:	int3   
  40a477:	jmp    QWORD PTR [rsi-0x67]
  40a47a:	int3   
  40a47b:	jmp    QWORD PTR [rsi-0x34]
  40a47e:	int3   
  40a47f:	jmp    QWORD PTR [rsi-0x67]
  40a482:	int3   
  40a483:	jmp    QWORD PTR [rsi-0x67]
  40a486:	int3   
  40a487:	jmp    QWORD PTR [rsi-0x34]
  40a48a:	int3   
  40a48b:	jmp    QWORD PTR [rsi-0x67]
  40a48e:	int3   
  40a48f:	call   FWORD PTR [rcx-0x66003334]
  40a495:	int3   
  40a496:	int3   
  40a497:	jmp    QWORD PTR [rsi-0x67]
  40a49a:	int3   
  40a49b:	jmp    QWORD PTR [rsi-0x67]
  40a49e:	int3   
  40a49f:	inc    DWORD PTR [rax]
	...
  40a4ad:	add    BYTE PTR [rax],al
  40a4af:	add    BYTE PTR [rsi-0x67],ah
  40a4b2:	int3   
  40a4b3:	inc    esi
  40a4b5:	(bad)  
  40a4b6:	out    dx,eax
  40a4b7:	dec    esp
  40a4b9:	(bad)  
  40a4ba:	(bad)  
  40a4bb:	dec    esp
  40a4bd:	(bad)  
  40a4be:	(bad)  
  40a4bf:	inc    esi
  40a4c1:	(bad)  
  40a4c2:	out    dx,eax
  40a4c3:	inc    esi
  40a4c5:	(bad)  
  40a4c6:	out    dx,eax
  40a4c7:	call   FWORD PTR [rcx-0x66000034]
  40a4cd:	int3   
  40a4ce:	int3   
  40a4cf:	call   FWORD PTR [rcx+0x66ffcccc]
  40a4d5:	int3   
  40a4d6:	int3   
  40a4d7:	jmp    QWORD PTR [rsi-0x67]
  40a4da:	int3   
  40a4db:	jmp    QWORD PTR [rsi-0x67]
  40a4de:	int3   
  40a4df:	push   QWORD PTR [rbx]
  40a4e1:	cdq    
  40a4e2:	cdq    
  40a4e3:	push   QWORD PTR [rbx]
  40a4e5:	cdq    
  40a4e6:	cdq    
  40a4e7:	push   QWORD PTR [rbx]
  40a4e9:	cdq    
  40a4ea:	cdq    
  40a4eb:	jmp    QWORD PTR [rsi-0x67]
  40a4ee:	int3   
  40a4ef:	jmp    QWORD PTR [rsi-0x67]
  40a4f2:	int3   
  40a4f3:	jmp    QWORD PTR [rsi-0x67]
  40a4f6:	int3   
  40a4f7:	jmp    QWORD PTR [rsi-0x34]
  40a4fa:	int3   
  40a4fb:	jmp    QWORD PTR [rsi-0x67]
  40a4fe:	int3   
  40a4ff:	jmp    QWORD PTR [rsi-0x34]
  40a502:	int3   
  40a503:	call   FWORD PTR [rcx-0x66000034]
  40a509:	int3   
  40a50a:	int3   
  40a50b:	call   FWORD PTR [rcx-0x66003334]
  40a511:	int3   
  40a512:	(bad)  
  40a513:	call   FWORD PTR [rcx-0x66003334]
  40a519:	int3   
  40a51a:	(bad)  
  40a51b:	call   FWORD PTR [rcx+0x66ffcccc]
  40a521:	cdq    
  40a522:	int3   
  40a523:	inc    DWORD PTR [rax]
	...
  40a52d:	add    BYTE PTR [rax],al
  40a52f:	add    BYTE PTR [rsi-0x67],ah
  40a532:	int3   
  40a533:	jmp    QWORD PTR [rsi-0x67]
  40a536:	int3   
  40a537:	inc    esi
  40a539:	(bad)  
  40a53a:	out    dx,eax
  40a53b:	inc    esi
  40a53d:	(bad)  
  40a53e:	out    dx,eax
  40a53f:	dec    esp
  40a541:	(bad)  
  40a542:	(bad)  
  40a543:	call   rsi
  40a545:	out    0xe7,eax
  40a547:	dec    esp
  40a549:	(bad)  
  40a54a:	(bad)  
  40a54b:	inc    esi
  40a54d:	(bad)  
  40a54e:	out    dx,eax
  40a54f:	call   FWORD PTR [rcx-0x66000034]
  40a555:	int3   
  40a556:	(bad)  
  40a557:	call   FWORD PTR [rcx+0x66ffcccc]
  40a55d:	int3   
  40a55e:	int3   
  40a55f:	jmp    QWORD PTR [rsi-0x67]
  40a562:	int3   
  40a563:	jmp    QWORD PTR [rsi-0x67]
  40a566:	int3   
  40a567:	jmp    QWORD PTR [rsi-0x67]
  40a56a:	int3   
  40a56b:	jmp    QWORD PTR [rsi-0x67]
  40a56e:	cdq    
  40a56f:	jmp    QWORD PTR [rsi-0x34]
  40a572:	int3   
  40a573:	jmp    QWORD PTR [rsi-0x67]
  40a576:	int3   
  40a577:	call   FWORD PTR [rcx-0x66003334]
  40a57d:	int3   
  40a57e:	int3   
  40a57f:	call   FWORD PTR [rcx-0x66003334]
  40a585:	int3   
  40a586:	int3   
  40a587:	call   FWORD PTR [rcx-0x66000034]
  40a58d:	int3   
  40a58e:	(bad)  
  40a58f:	inc    esi
  40a591:	(bad)  
  40a592:	out    dx,eax
  40a593:	inc    esi
  40a595:	(bad)  
  40a596:	out    dx,eax
  40a597:	inc    esi
  40a599:	(bad)  
  40a59a:	out    dx,eax
  40a59b:	jmp    QWORD PTR [rsi-0x67]
  40a59e:	int3   
  40a59f:	jmp    QWORD PTR [rsi-0x67]
  40a5a2:	int3   
  40a5a3:	inc    DWORD PTR [rax]
	...
  40a5b5:	add    BYTE PTR [rax],al
  40a5b7:	add    BYTE PTR [rsi-0x67],ah
  40a5ba:	int3   
  40a5bb:	jmp    QWORD PTR [rsi-0x67]
  40a5be:	int3   
  40a5bf:	jmp    QWORD PTR [rsi-0x67]
  40a5c2:	int3   
  40a5c3:	inc    esi
  40a5c5:	(bad)  
  40a5c6:	out    dx,eax
  40a5c7:	inc    esi
  40a5c9:	(bad)  
  40a5ca:	out    dx,eax
  40a5cb:	inc    esi
  40a5cd:	(bad)  
  40a5ce:	out    dx,eax
  40a5cf:	inc    esi
  40a5d1:	(bad)  
  40a5d2:	out    dx,eax
  40a5d3:	call   FWORD PTR [rcx-0x66000034]
  40a5d9:	int3   
  40a5da:	int3   
  40a5db:	call   FWORD PTR [rcx-0x66000034]
  40a5e1:	int3   
  40a5e2:	int3   
  40a5e3:	jmp    QWORD PTR [rsi-0x67]
  40a5e6:	int3   
  40a5e7:	jmp    QWORD PTR [rsi-0x67]
  40a5ea:	cdq    
  40a5eb:	jmp    QWORD PTR [rsi-0x67]
  40a5ee:	int3   
  40a5ef:	call   QWORD PTR [rax-0x66005257]
  40a5f5:	int3   
  40a5f6:	(bad)  
  40a5f7:	call   FWORD PTR [rcx-0x66003334]
  40a5fd:	int3   
  40a5fe:	(bad)  
  40a5ff:	call   FWORD PTR [rcx-0x39000034]
  40a605:	(bad)  
  40a606:	out    dx,eax
  40a607:	inc    esi
  40a609:	(bad)  
  40a60a:	out    dx,eax
  40a60b:	inc    esi
  40a60d:	(bad)  
  40a60e:	out    dx,eax
  40a60f:	jmp    QWORD PTR [rsi-0x67]
  40a612:	int3   
  40a613:	jmp    QWORD PTR [rsi-0x67]
  40a616:	int3   
  40a617:	jmp    QWORD PTR [rsi-0x67]
  40a61a:	int3   
  40a61b:	inc    DWORD PTR [rax]
	...
  40a641:	add    BYTE PTR [rax],al
  40a643:	add    BYTE PTR [rsi-0x67],ah
  40a646:	int3   
  40a647:	jmp    QWORD PTR [rsi-0x67]
  40a64a:	int3   
  40a64b:	jmp    QWORD PTR [rsi-0x67]
  40a64e:	int3   
  40a64f:	inc    esi
  40a651:	(bad)  
  40a652:	out    dx,eax
  40a653:	inc    esi
  40a655:	(bad)  
  40a656:	out    dx,eax
  40a657:	call   FWORD PTR [rcx-0x66000034]
  40a65d:	int3   
  40a65e:	int3   
  40a65f:	jmp    QWORD PTR [rsi-0x67]
  40a662:	int3   
  40a663:	inc    DWORD PTR [rax]
	...
  40a66d:	add    BYTE PTR [rax],al
  40a66f:	add    BYTE PTR [rsi-0x67],ah
  40a672:	int3   
  40a673:	jmp    QWORD PTR [rsi-0x67]
  40a676:	int3   
  40a677:	inc    esi
  40a679:	(bad)  
  40a67a:	out    dx,eax
  40a67b:	inc    esi
  40a67d:	(bad)  
  40a67e:	out    dx,eax
  40a67f:	inc    esi
  40a681:	(bad)  
  40a682:	out    dx,eax
  40a683:	inc    esi
  40a685:	(bad)  
  40a686:	out    dx,eax
  40a687:	jmp    QWORD PTR [rsi-0x67]
  40a68a:	int3   
  40a68b:	jmp    QWORD PTR [rsi-0x67]
  40a68e:	int3   
  40a68f:	inc    DWORD PTR [rax]
	...
  40a6cd:	add    BYTE PTR [rax],al
  40a6cf:	add    BYTE PTR [rsi-0x67],ah
  40a6d2:	int3   
  40a6d3:	jmp    QWORD PTR [rsi-0x67]
  40a6d6:	int3   
  40a6d7:	call   FWORD PTR [rcx+0x66ffcc99]
  40a6dd:	cdq    
  40a6de:	int3   
  40a6df:	inc    DWORD PTR [rax]
	...
  40a6f5:	add    BYTE PTR [rax],al
  40a6f7:	add    BYTE PTR [rsi-0x67],ah
  40a6fa:	int3   
  40a6fb:	jmp    QWORD PTR [rsi-0x67]
  40a6fe:	int3   
  40a6ff:	jmp    QWORD PTR [rsi-0x67]
  40a702:	int3   
  40a703:	jmp    QWORD PTR [rsi-0x67]
  40a706:	int3   
  40a707:	inc    DWORD PTR [rax]
	...
  40a725:	add    BYTE PTR [rax],al
  40a727:	add    bh,bh
  40a729:	cld    
  40a72a:	add    BYTE PTR [rbx],al
  40a72c:	(bad)  
  40a72d:	cld    
  40a72e:	add    BYTE PTR [rbx],al
  40a730:	(bad)  
  40a731:	cld    
  40a732:	add    BYTE PTR [rbx],al
  40a734:	(bad)  
  40a735:	cld    
  40a736:	add    BYTE PTR [rbx],al
  40a738:	(bad)  
  40a739:	cld    
  40a73a:	add    BYTE PTR [rbx],al
  40a73c:	(bad)  
  40a73d:	cld    
  40a73e:	add    BYTE PTR [rbx],al
  40a740:	push   rax
  40a742:	add    BYTE PTR [rbx],al
  40a744:	inc    eax
  40a746:	add    BYTE PTR [rbx],al
  40a748:	inc    DWORD PTR [rax]
  40a74a:	add    BYTE PTR [rbx],al
  40a74c:	cld    
  40a74d:	add    BYTE PTR [rax],al
  40a74f:	add    edi,eax
  40a751:	add    BYTE PTR [rax],al
  40a753:	add    edi,eax
  40a755:	add    BYTE PTR [rax],al
  40a757:	add    edi,eax
  40a759:	add    BYTE PTR [rax],al
  40a75b:	add    edi,eax
  40a75d:	add    BYTE PTR [rax],al
  40a75f:	add    edi,eax
  40a761:	add    BYTE PTR [rax],al
  40a763:	add    edi,eax
  40a765:	add    BYTE PTR [rax],al
  40a767:	psubb  mm0,QWORD PTR [rax]
  40a76a:	add    BYTE PTR [rdi],cl
  40a76c:	clc    
  40a76d:	add    BYTE PTR [rax],al
  40a76f:	psubb  mm0,QWORD PTR [rax]
  40a772:	add    BYTE PTR [rdi],cl
  40a774:	clc    
  40a775:	add    BYTE PTR [rax],al
  40a777:	psubb  mm0,QWORD PTR [rax]
  40a77a:	add    BYTE PTR [rdi],cl
  40a77c:	lock add BYTE PTR [rax],al
  40a77f:	(bad)  
  40a780:	rol    BYTE PTR [rax],0x0
  40a783:	add    eax,DWORD PTR [rax-0x7ff0000]
  40a789:	add    BYTE PTR [rax],al
  40a78b:	(bad)  
  40a78d:	add    BYTE PTR [rax],al
  40a78f:	(bad)  
  40a790:	loopne 0x40a792
  40a792:	add    BYTE PTR [rbx],al
  40a794:	rol    BYTE PTR [rax],0x0
  40a797:	add    eax,eax
  40a799:	add    BYTE PTR [rax],al
  40a79b:	add    eax,esi
  40a79d:	add    BYTE PTR [rax],al
  40a79f:	(bad)  
  40a7a0:	inc    BYTE PTR [rcx]
  40a7a2:	sar    BYTE PTR [rdi],0xff
  40a7a5:	ret    
  40a7a6:	lock jmp FWORD PTR [rax]
  40a7a9:	add    BYTE PTR [rax],al
  40a7ab:	add    BYTE PTR [rax],dl
  40a7ad:	add    BYTE PTR [rax],al
  40a7af:	add    BYTE PTR [rax],ah
  40a7b1:	add    BYTE PTR [rax],al
  40a7b3:	add    BYTE PTR [rcx],al
  40a7b5:	add    BYTE PTR [rax],ah
  40a7b7:	add    BYTE PTR [rax],al
  40a7b9:	add    BYTE PTR [rax],al
  40a7bb:	add    BYTE PTR [rax+0x4],al
	...
  40a7ea:	add    BYTE PTR [rax],al
  40a7ec:	push   rdx
  40a7ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a7ee:	push   0xffffffffffffffff
  40a7f0:	cmp    BYTE PTR [rbp+rax*2+0x387e2bff],cl
  40a7f7:	hlt    
  40a7f8:	(bad)  
  40a7f9:	outs   dx,BYTE PTR ds:[rsi]
  40a7fa:	sub    eax,0x306e21f4
  40a7ff:	hlt    
  40a800:	sbb    BYTE PTR [rsi+0x27],ah
  40a803:	hlt    
  40a804:	adc    BYTE PTR [rbp+0x21],bl
  40a807:	hlt    
  40a808:	or     al,0x50
  40a80a:	sbb    bh,bh
	...
  40a828:	xor    eax,0x52e3a37a
  40a82d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a82e:	push   0xffffffffffffffff
  40a830:	(bad)  
  40a831:	sar    BYTE PTR [rax-0x1],0x35
  40a835:	jbe    0x40a87c
  40a837:	push   QWORD PTR [rbx]
  40a839:	(bad)  
  40a83a:	(bad)  
  40a83b:	call   FWORD PTR [rdx]
  40a83d:	mov    DWORD PTR [rdi],esi
  40a83f:	call   QWORD PTR [rsi+rax*4]
  40a842:	xor    eax,0x317f12ff
  40a847:	inc    DWORD PTR [rdx+rsi*2]
  40a84a:	and    eax,0xff
	...
  40a85f:	add    BYTE PTR [rbx-0x77],cl
  40a862:	lods   eax,DWORD PTR ds:[rsi]
  40a863:	dec    DWORD PTR [rbx-0x77]
  40a866:	lods   eax,DWORD PTR ds:[rsi]
  40a867:	inc    DWORD PTR [rax-0x75]
  40a86a:	mov    ebp,0x6aa452f8
  40a86f:	call   FWORD PTR [rcx-0x4a]
  40a872:	outs   dx,BYTE PTR ds:[rsi]
  40a873:	push   rcx
  40a875:	push   rdi
  40a877:	push   QWORD PTR [rbx]
  40a879:	(bad)  
  40a87a:	(bad)  
  40a87b:	jmp    FWORD PTR [rdi]
  40a87d:	gs cmp al,0xff
  40a880:	sub    eax,0x45ff4076
  40a885:	mov    dl,BYTE PTR [rdi-0x1]
  40a888:	or     eax,0xff2d82
	...
  40a899:	add    BYTE PTR [rax],al
  40a89b:	add    BYTE PTR [rbx-0x77],cl
  40a89e:	lods   eax,DWORD PTR ds:[rsi]
  40a89f:	dec    DWORD PTR [rbp-0x2e00213d]
  40a8a5:	call   0xffffffff978ea89d
  40a8aa:	enter  0x52f1,0xa4
  40a8ae:	push   0xffffffffffffffff
  40a8b0:	test   ebp,ebx
  40a8b2:	nop
  40a8b3:	call   FWORD PTR [rcx-0x4a]
  40a8b6:	outs   dx,BYTE PTR ds:[rsi]
  40a8b7:	push   rcx
  40a8b9:	push   rdi
  40a8bb:	push   QWORD PTR [rbx]
  40a8bd:	(bad)  
  40a8be:	(bad)  
  40a8bf:	push   rcx
  40a8c1:	push   rdi
  40a8c3:	(bad)  
  40a8c4:	jl     0x40a87b
  40a8c6:	mov    edi,edi
  40a8c8:	or     al,0x7d
  40a8ca:	sub    bh,bh
	...
  40a8dc:	rex.RX xchg ebx,eax
  40a8de:	mov    ebx,0xe4c58fff
  40a8e3:	jmp    FWORD PTR [rdi+0x51ffe6d3]
  40a8e9:	fwait
  40a8ea:	(bad)  
  40a8eb:	lock push rdx
  40a8ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a8ee:	push   0xffffffffffffffff
  40a8f0:	xchg   edx,eax
  40a8f1:	jrcxz  0x40a88f
  40a8f3:	call   FWORD PTR [rcx-0x4a]
  40a8f6:	outs   dx,BYTE PTR ds:[rsi]
  40a8f7:	call   FWORD PTR [rcx-0x4a]
  40a8fa:	outs   dx,BYTE PTR ds:[rsi]
  40a8fb:	(bad)  
  40a8fc:	(bad)  
  40a8fd:	(bad)  
  40a8fe:	(bad)  
  40a8ff:	(bad)  
  40a900:	(bad)  
  40a901:	(bad)  
  40a902:	(bad)  
  40a903:	dec    DWORD PTR [rsp+rsi*4-0x7fe5006b]
  40a90a:	xor    eax,0xff
	...
  40a91b:	add    BYTE PTR [rbp-0x63],dl
  40a91e:	(bad)  
  40a91f:	(bad)  
  40a920:	jns    0x40a8df
  40a922:	loop   0x40a923
  40a924:	gs scas al,BYTE PTR es:[rdi]
  40a926:	(bad)  
  40a927:	call   QWORD PTR [rsi-0x5e]
  40a92a:	sar    ecx,1
  40a92c:	push   rdx
  40a92d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40a92e:	push   0xffffffffffffffff
  40a930:	xchg   edi,eax
  40a931:	out    0x9e,eax
  40a933:	(bad)  
  40a934:	jp     0x40a905
  40a936:	mov    edi,?
  40a938:	icebp  
  40a939:	push   rdi
  40a93b:	push   rcx
  40a93d:	push   rdi
  40a93f:	push   rbp
  40a941:	(bad)  
  40a942:	stc    
  40a943:	call   FWORD PTR [rsi+0x25ffacd7]
  40a949:	mov    ?,WORD PTR [rdi]
  40a94b:	inc    DWORD PTR [rax]
	...
  40a959:	add    BYTE PTR [rax],al
  40a95b:	add    BYTE PTR [rbx-0x5d],bl
  40a95e:	retf   0x8fff
  40a961:	int    0xec
  40a963:	push   QWORD PTR [rdi+0x78fff1de]
  40a969:	mov    edx,0xa452ffdf
  40a96e:	push   0xffffffffffffffff
  40a970:	mov    ebx,0xbcffb4f6
  40a975:	cli    
  40a976:	sar    edi,0xaa
  40a979:	out    dx,al
  40a97a:	mov    al,0xff
  40a97c:	movabs eax,ds:0xa0ffa3e59bffa7e7
  40a985:	jmp    0xffffffffb69ba931
  40a98a:	imul   edi,edi,0x0
	...
  40a999:	add    BYTE PTR [rax],al
  40a99b:	add    BYTE PTR [rbp-0x59],bl
  40a99e:	int    0xff
  40a9a0:	movabs ds:0x61ffe9d9bafff3d8,eax
  40a9a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a9aa:	int    0xff
  40a9ac:	fs test eax,0xa964ff68
  40a9b2:	push   0x68a964ff
  40a9b7:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  40a9bb:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  40a9bf:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  40a9c3:	jmp    QWORD PTR [rcx+rbp*4+0x68]
  40a9c7:	(bad)  
  40a9c8:	(bad)  
  40a9c9:	or     DWORD PTR [rax-0x1],0x0
	...
  40a9d9:	add    BYTE PTR [rax],al
  40a9db:	add    BYTE PTR [rbx-0x6d],cl
  40a9de:	mov    ecx,0xccab6cff
  40a9e3:	jmp    FWORD PTR [rdi-0x53]
  40a9e6:	sar    bh,1
  40a9e8:	rex.WXB cdqe 
  40a9ea:	sar    edi,0xd
  40a9ed:	pop    rsp
  40a9ee:	mov    bh,bh
  40a9f0:	add    BYTE PTR [rcx+0x6f],al
  40a9f3:	jmp    QWORD PTR [rdx]
  40a9f5:	jb     0x40a994
  40a9f7:	call   FWORD PTR [rcx-0x61]
  40a9fa:	(bad)  
  40a9fb:	call   QWORD PTR [rbp-0x66]
  40a9fe:	mov    edi,0x8f672fff
  40aa03:	inc    DWORD PTR [rdi]
  40aa05:	es push rsp
  40aa07:	inc    DWORD PTR [rax]
	...
  40aa15:	add    BYTE PTR [rax],al
  40aa17:	add    BYTE PTR [rcx-0x65],ah
  40aa1a:	mov    ebx,0xc8a86ffd
  40aa1f:	jmp    QWORD PTR [rsi-0x61]
  40aa22:	ret    0x45ff
  40aa25:	sub    DWORD PTR [rbx-0x7baae401],0xffffffff
  40aa2c:	add    edi,DWORD PTR [rax+rsi*2]
  40aa2f:	dec    DWORD PTR [rax]
  40aa31:	push   rdi
  40aa32:	mov    edi,edi
  40aa34:	sub    eax,0x2cffb988
  40aa39:	sub    DWORD PTR [rdi-0x426ab801],0xcaa661ff
  40aa43:	call   FWORD PTR [rbx-0x64]
  40aa46:	sar    edi,0x47
  40aa49:	jg     0x40a9ef
  40aa4b:	std    
	...
  40aa54:	push   0x3bffb298
  40aa59:	jge    0x40aa00
  40aa5b:	jmp    0xffffffffffe82597
  40aa60:	or     al,0x52
  40aa62:	mov    bh,bh
  40aa64:	add    BYTE PTR [rcx],ah
  40aa66:	push   rsp
  40aa67:	inc    DWORD PTR [rax]
  40aa69:	sbb    al,0x4b
  40aa6b:	inc    DWORD PTR [rax]
  40aa6d:	(bad)  
  40aa6e:	pop    rdx
  40aa6f:	dec    DWORD PTR [rsi]
  40aa71:	pop    rsi
  40aa72:	mov    ?,edi
  40aa74:	rex.B (bad) 
  40aa76:	enter  0x3dff,0x95
  40aa7a:	(bad)  
  40aa7b:	push   QWORD PTR [rdx+rcx*4]
  40aa7e:	mov    ecx,0xa77722ff
  40aa83:	jmp    FWORD PTR [rdx]
  40aa85:	js     0x40aa2b
  40aa87:	jmp    FWORD PTR [rsi]
  40aa89:	imul   edx,DWORD PTR [rax-0x5a7fb717],0xff
  40aa93:	add    BYTE PTR [rax],al
  40aa95:	add    BYTE PTR [rax],al
  40aa97:	add    BYTE PTR [rax-0x58],bh
  40aa9a:	leave  
  40aa9b:	push   QWORD PTR [rbx-0x4c]
  40aa9e:	(bad)  
  40aaa0:	cmp    ecx,DWORD PTR [rbp+0x6414ffbc]
  40aaa6:	xchg   edi,eax
  40aaa7:	inc    DWORD PTR [rbx]
  40aaa9:	rex.X jne 0x40aaab
  40aaac:	add    BYTE PTR [rcx],ch
  40aaae:	pop    rdx
  40aaaf:	call   QWORD PTR [rax]
  40aab1:	(bad)  
  40aab2:	nop
  40aab3:	inc    DWORD PTR [rbx-0x67]
  40aab6:	(bad)  
  40aab7:	jmp    FWORD PTR [rip+0x2affb281]        # 0x2b405d3e
  40aabd:	xor    DWORD PTR [rbp-0x457bdd01],0xbf8d2dff
  40aac7:	push   QWORD PTR [rdi]
  40aac9:	(bad)  
  40aaca:	lods   eax,DWORD PTR ds:[rsi]
  40aacb:	repnz add BYTE PTR [rax],al
  40aace:	add    BYTE PTR [rax],al
  40aad0:	add    BYTE PTR [rax],al
  40aad2:	add    BYTE PTR [rax],al
  40aad4:	js     0x40aa7e
  40aad6:	leave  
  40aad7:	(bad)  
  40aad8:	mov    ebp,0xc8fffce5
  40aadd:	out    dx,eax
  40aade:	(bad)  
  40aadf:	call   FWORD PTR [rdi+0x65fffada]
  40aae5:	mov    bh,0xe1
  40aae7:	push   QWORD PTR [rbx]
  40aae9:	xchg   edx,eax
  40aaea:	(bad)  
  40aaed:	imul   ebx,DWORD PTR [rsi-0x709ee801],0xb0822dff
  40aaf7:	push   QWORD PTR [rdi+rcx*4]
  40aafa:	sar    edi,0x4b
  40aafd:	movabs ds:0xc781ffe3b96affd2,al
  40ab06:	in     al,dx
  40ab07:	inc    DWORD PTR [rax+0x58ffe7c3]
  40ab0d:	xchg   ebp,eax
  40ab0e:	mov    esi,0xf3
  40ab13:	add    BYTE PTR [rax],al
  40ab15:	add    BYTE PTR [rax],al
  40ab17:	add    BYTE PTR [rax-0x58],bh
  40ab1a:	leave  
  40ab1b:	(bad)  
  40ab1c:	js     0x40aac6
  40ab1e:	leave  
  40ab1f:	jmp    QWORD PTR [rax-0x66000f2d]
  40ab25:	shl    bl,cl
  40ab27:	(bad)  
  40ab28:	js     0x40aaed
  40ab2a:	(bad)  
  40ab2b:	(bad)  
  40ab2c:	ds cwde 
  40ab2e:	enter  0xe5,0x0
  40ab32:	add    BYTE PTR [rax],al
  40ab34:	rex.X xchg ecx,eax
  40ab36:	mov    esi,0xe8c175e9
  40ab3b:	call   QWORD PTR [rcx-0x6c001032]
  40ab41:	retf   0xffea
  40ab44:	js     0x40aaee
  40ab46:	leave  
  40ab47:	(bad)  
  40ab48:	js     0x40aaf2
  40ab4a:	leave  
  40ab4b:	inc    DWORD PTR [rax]
	...
  40ab5d:	add    BYTE PTR [rax],al
  40ab5f:	add    BYTE PTR [rax-0x58],bh
  40ab62:	leave  
  40ab63:	(bad)  
  40ab64:	js     0x40ab0e
  40ab66:	leave  
  40ab67:	(bad)  
  40ab68:	js     0x40ab12
  40ab6a:	leave  
  40ab6b:	inc    DWORD PTR [rax]
	...
  40ab75:	add    BYTE PTR [rax],al
  40ab77:	add    BYTE PTR [rax-0x58],bh
  40ab7a:	leave  
  40ab7b:	(bad)  
  40ab7c:	jnp    0x40ab38
  40ab7e:	fsubp  st(2),st
  40ab80:	js     0x40ab2a
  40ab82:	leave  
  40ab83:	inc    DWORD PTR [rax]
	...
  40abcd:	add    BYTE PTR [rax],al
  40abcf:	add    dh,bh
  40abd1:	add    DWORD PTR [rax],eax
  40abd3:	add    ah,bh
  40abd5:	add    DWORD PTR [rax],eax
  40abd7:	add    al,dh
  40abd9:	add    DWORD PTR [rax],eax
  40abdb:	add    al,ah
  40abdd:	add    DWORD PTR [rax],eax
  40abdf:	add    al,ah
  40abe1:	add    DWORD PTR [rax],eax
  40abe3:	add    al,ah
  40abe5:	add    DWORD PTR [rax],eax
  40abe7:	add    al,ah
  40abe9:	add    DWORD PTR [rax],eax
  40abeb:	add    al,ah
  40abed:	add    DWORD PTR [rax],eax
  40abef:	add    al,ah
  40abf1:	add    eax,DWORD PTR [rax]
  40abf3:	add    al,al
  40abf5:	add    DWORD PTR [rax],eax
  40abf7:	add    BYTE PTR [rax-0x40000000],al
  40abfd:	add    DWORD PTR [rax],eax
  40abff:	add    BYTE PTR [rax-0x40000000],al
  40ac05:	add    DWORD PTR [rax],0xc7f100
  40ac0b:	add    bh,bh
  40ac0d:	inc    DWORD PTR [rax]
  40ac0f:	add    BYTE PTR [rax],al
  40ac11:	add    BYTE PTR [rcx],al
  40ac13:	add    BYTE PTR [rsi],al
  40ac15:	add    BYTE PTR [rax],ah
  40ac17:	and    BYTE PTR [rax],dl
  40ac19:	add    BYTE PTR [rcx],al
  40ac1b:	add    BYTE PTR [rax+rax*1],al
  40ac1e:	call   0x140ac25
  40ac23:	add    BYTE PTR [rax],dl
  40ac25:	adc    BYTE PTR [rax],dl
  40ac27:	add    BYTE PTR [rcx],al
  40ac29:	add    BYTE PTR [rax+rax*1],al
  40ac2c:	sub    BYTE PTR [rcx],al
  40ac2e:	add    BYTE PTR [rax],al
  40ac30:	add    al,BYTE PTR [rax]
  40ac32:	and    BYTE PTR [rax],ah
  40ac34:	add    BYTE PTR [rax],al
  40ac36:	add    DWORD PTR [rax],eax
  40ac38:	or     BYTE PTR [rax],al
  40ac3a:	test   al,0x8
  40ac3c:	add    BYTE PTR [rax],al
  40ac3e:	add    eax,DWORD PTR [rax]
  40ac40:	adc    BYTE PTR [rax],dl
  40ac42:	add    BYTE PTR [rax],al
  40ac44:	add    DWORD PTR [rax],eax
  40ac46:	or     BYTE PTR [rax],al
  40ac48:	push   0x4000005
  40ac4d:	add    BYTE PTR [rax],ah
  40ac4f:	and    BYTE PTR [rax],al
  40ac51:	add    BYTE PTR [rcx],al
  40ac53:	add    BYTE PTR [rax],ah
  40ac55:	add    BYTE PTR [rax+0x5000010],ch
  40ac5b:	add    BYTE PTR [rax],dl
  40ac5d:	adc    BYTE PTR [rax],al
  40ac5f:	add    BYTE PTR [rcx],al
  40ac61:	add    BYTE PTR [rax],ah
  40ac63:	add    BYTE PTR [rax+0x4],ch
  40ac66:	add    BYTE PTR [rax],al
  40ac68:	(bad)  
  40ac69:	add    BYTE PTR [rax],al
  40ac6b:	add    BYTE PTR [rax],al
  40ac6d:	add    BYTE PTR [rax],al
  40ac6f:	add    ah,dl
  40ac71:	add    al,0x34
  40ac73:	add    BYTE PTR [rax],al
  40ac75:	add    BYTE PTR [rsi+0x0],dl
  40ac78:	push   rbx
  40ac79:	add    BYTE PTR [rdi+0x0],bl
  40ac7c:	push   rsi
  40ac7d:	add    BYTE PTR [rbp+0x0],al
  40ac80:	push   rdx
  40ac81:	add    BYTE PTR [rbx+0x0],dl
  40ac84:	rex.WB add BYTE PTR [r15+0x0],cl
  40ac88:	rex.WRX add BYTE PTR [rdi+0x0],r11b
  40ac8c:	rex.WB add BYTE PTR [r14+0x0],cl
  40ac90:	rex.RX add BYTE PTR [rdi+0x0],r9b
  40ac94:	add    BYTE PTR [rax],al
  40ac96:	add    BYTE PTR [rax],al
  40ac98:	mov    ebp,0xfeef04
  40ac9d:	add    BYTE PTR [rcx],al
  40ac9f:	add    BYTE PTR [rax],al
  40aca1:	add    BYTE PTR [rdx],cl
  40aca3:	add    BYTE PTR [rax],al
  40aca5:	add    bl,ah
  40aca7:	or     DWORD PTR [rax],eax
  40aca9:	add    BYTE PTR [rdx],cl
  40acab:	add    BYTE PTR [rax],al
  40acad:	add    bl,ah
  40acaf:	or     DWORD PTR [rdi],edi
  40acb1:	add    BYTE PTR [rax],al
  40acb3:	add    BYTE PTR [rax],cl
  40acb5:	add    BYTE PTR [rax],al
  40acb7:	add    BYTE PTR [rax],al
  40acb9:	add    BYTE PTR [rax+rax*1],al
  40acbc:	add    DWORD PTR [rax],eax
	...
  40acca:	add    BYTE PTR [rax],al
  40accc:	xor    al,0x4
  40acce:	add    BYTE PTR [rax],al
  40acd0:	add    DWORD PTR [rax],eax
  40acd2:	push   rbx
  40acd3:	add    BYTE PTR [rax+rax*1+0x72],dh
  40acd7:	add    BYTE PTR [rcx+0x0],ch
  40acda:	outs   dx,BYTE PTR ds:[rsi]
  40acdb:	add    BYTE PTR [rdi+0x0],ah
  40acde:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40ace2:	ins    BYTE PTR es:[rdi],dx
  40ace3:	add    BYTE PTR [rbp+0x0],ah
  40ace6:	rex.WB add BYTE PTR [r14+0x0],bpl
  40acea:	data16 add BYTE PTR [rdi+0x0],ch
  40acee:	add    BYTE PTR [rax],al
  40acf0:	adc    BYTE PTR [rax+rax*1],al
  40acf3:	add    BYTE PTR [rcx],al
  40acf5:	add    BYTE PTR [rax],dh
  40acf7:	add    BYTE PTR [rax+rax*1],dh
  40acfa:	xor    BYTE PTR [rax],al
  40acfc:	cmp    DWORD PTR [rax],eax
  40acfe:	xor    BYTE PTR [rax],al
  40ad00:	xor    al,0x0
  40ad02:	rex.X add BYTE PTR [rax],sil
  40ad05:	add    BYTE PTR [rax],al
  40ad07:	add    BYTE PTR [rsi],ah
  40ad09:	add    BYTE PTR [rdi],al
  40ad0b:	add    BYTE PTR [rcx],al
  40ad0d:	add    BYTE PTR [rax+0x0],dl
  40ad10:	ins    BYTE PTR es:[rdi],dx
  40ad11:	add    BYTE PTR [rcx+0x0],ah
  40ad14:	je     0x40ad16
  40ad16:	data16 add BYTE PTR [rdi+0x0],ch
  40ad1a:	jb     0x40ad1c
  40ad1c:	ins    DWORD PTR es:[rdi],dx
  40ad1d:	add    BYTE PTR [rax],al
  40ad1f:	add    BYTE PTR [rsi+0x0],cl
  40ad22:	push   rsp
  40ad23:	add    BYTE PTR [rax],ah
  40ad25:	add    BYTE PTR [rax+0x0],bh
  40ad28:	add    BYTE PTR ss:[rax+rax*1],dh
  40ad2c:	add    BYTE PTR [rax],al
  40ad2e:	add    BYTE PTR [rax],al
  40ad30:	mov    edx,0x1004900
  40ad35:	add    BYTE PTR [rax+rax*1+0x65],cl
  40ad39:	add    BYTE PTR [rdi+0x0],ah
  40ad3c:	(bad)  
  40ad3d:	add    BYTE PTR [rax+rax*1+0x54],ch
  40ad41:	add    BYTE PTR [rdx+0x0],dh
  40ad44:	(bad)  
  40ad45:	add    BYTE PTR [rax+rax*1+0x65],ah
  40ad49:	add    BYTE PTR [rbp+0x0],ch
  40ad4c:	(bad)  
  40ad4d:	add    BYTE PTR [rdx+0x0],dh
  40ad50:	imul   eax,DWORD PTR [rax],0x73
  40ad53:	add    BYTE PTR [rax],al
  40ad55:	add    BYTE PTR [rax],al
  40ad57:	add    BYTE PTR [rbp+0x0],cl
  40ad5a:	imul   eax,DWORD PTR [rax],0x720063
  40ad60:	outs   dx,DWORD PTR ds:[rsi]
  40ad61:	add    BYTE PTR [rbx+0x0],dh
  40ad64:	outs   dx,DWORD PTR ds:[rsi]
  40ad65:	add    BYTE PTR [rsi+0x0],ah
  40ad68:	je     0x40ad6a
  40ad6a:	and    BYTE PTR [rax],al
  40ad6c:	push   rbx
  40ad6d:	add    BYTE PTR [rcx+0x0],dl
  40ad70:	rex.WR add BYTE PTR [rax],r12b
  40ad73:	add    BYTE PTR [rbx+0x0],dl
  40ad76:	add    BYTE PTR gs:[rdx+0x0],dh
  40ad7a:	jbe    0x40ad7c
  40ad7c:	add    BYTE PTR gs:[rdx+0x0],dh
  40ad80:	and    BYTE PTR [rax],al
  40ad82:	imul   eax,DWORD PTR [rax],0x200073
  40ad88:	(bad)  
  40ad89:	add    BYTE PTR [rax],ah
  40ad8b:	add    BYTE PTR [rdx+0x0],dh
  40ad8e:	add    BYTE PTR gs:[rdi+0x0],ah
  40ad92:	imul   eax,DWORD PTR [rax],0x740073
  40ad98:	add    BYTE PTR gs:[rdx+0x0],dh
  40ad9c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
  40ada1:	add    BYTE PTR [rax+rax*1+0x72],dh
  40ada5:	add    BYTE PTR [rcx+0x0],ah
  40ada8:	add    BYTE PTR fs:[rbp+0x0],ah
  40adac:	ins    DWORD PTR es:[rdi],dx
  40adad:	add    BYTE PTR [rcx+0x0],ah
  40adb0:	jb     0x40adb2
  40adb2:	imul   eax,DWORD PTR [rax],0x20
  40adb5:	add    BYTE PTR [rdi+0x0],ch
  40adb8:	data16 add BYTE PTR [rax],ah
  40adbb:	add    BYTE PTR [rbp+0x0],cl
  40adbe:	imul   eax,DWORD PTR [rax],0x720063
  40adc4:	outs   dx,DWORD PTR ds:[rsi]
  40adc5:	add    BYTE PTR [rbx+0x0],dh
  40adc8:	outs   dx,DWORD PTR ds:[rsi]
  40adc9:	add    BYTE PTR [rsi+0x0],ah
  40adcc:	je     0x40adce
  40adce:	and    BYTE PTR [rax],al
  40add0:	rex.XB add BYTE PTR [r15+0x0],bpl
  40add4:	jb     0x40add6
  40add6:	jo     0x40add8
  40add8:	outs   dx,DWORD PTR ds:[rsi]
  40add9:	add    BYTE PTR [rdx+0x0],dh
  40addc:	(bad)  
  40addd:	add    BYTE PTR [rax+rax*1+0x69],dh
  40ade1:	add    BYTE PTR [rdi+0x0],ch
  40ade4:	outs   dx,BYTE PTR ds:[rsi]
  40ade5:	add    BYTE PTR [rsi],ch
  40ade7:	add    BYTE PTR [rax],al
  40ade9:	add    BYTE PTR [rax],al
  40adeb:	add    BYTE PTR [rax],ah
  40aded:	add    BYTE PTR [rax+rax*1],al
  40adf0:	add    DWORD PTR [rax],eax
  40adf2:	rex.XB add BYTE PTR [r15+0x0],bpl
  40adf6:	ins    DWORD PTR es:[rdi],dx
  40adf7:	add    BYTE PTR [rbp+0x0],ch
  40adfa:	add    BYTE PTR gs:[rsi+0x0],ch
  40adfe:	je     0x40ae00
  40ae00:	jae    0x40ae02
  40ae02:	add    BYTE PTR [rax],al
  40ae04:	push   rbx
  40ae05:	add    BYTE PTR [rcx+0x0],dl
  40ae08:	rex.WR add BYTE PTR [rax],r8b
  40ae0b:	add    BYTE PTR [rsi],ah
  40ae0d:	add    BYTE PTR [rip+0x47000100],al        # 0x4740af13
  40ae13:	add    BYTE PTR [rdi+0x0],ch
  40ae16:	ins    BYTE PTR es:[rdi],dx
  40ae17:	add    BYTE PTR [rax+rax*1+0x65],ah
  40ae1b:	add    BYTE PTR [rsi+0x0],ch
  40ae1e:	rex.X add BYTE PTR [rcx+0x0],bpl
  40ae22:	je     0x40ae24
  40ae24:	jae    0x40ae26
  40ae26:	add    BYTE PTR [rax],al
  40ae28:	push   rsp
  40ae29:	add    BYTE PTR [rdx+0x0],dh
  40ae2c:	jne    0x40ae2e
  40ae2e:	add    BYTE PTR gs:[rax],al
  40ae31:	add    BYTE PTR [rax],al
  40ae33:	add    BYTE PTR [rax+rax*1+0x16],cl
  40ae37:	add    BYTE PTR [rcx],al
  40ae39:	add    BYTE PTR [rbx+0x0],al
  40ae3c:	outs   dx,DWORD PTR ds:[rsi]
  40ae3d:	add    BYTE PTR [rbp+0x0],ch
  40ae40:	jo     0x40ae42
  40ae42:	(bad)  
  40ae43:	add    BYTE PTR [rsi+0x0],ch
  40ae46:	jns    0x40ae48
  40ae48:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40ae4c:	ins    DWORD PTR es:[rdi],dx
  40ae4d:	add    BYTE PTR [rbp+0x0],ah
  40ae50:	add    BYTE PTR [rax],al
  40ae52:	add    BYTE PTR [rax],al
  40ae54:	rex.WRB add BYTE PTR [r9+0x0],r13b
  40ae58:	movsxd eax,DWORD PTR [rax]
  40ae5a:	jb     0x40ae5c
  40ae5c:	outs   dx,DWORD PTR ds:[rsi]
  40ae5d:	add    BYTE PTR [rbx+0x0],dh
  40ae60:	outs   dx,DWORD PTR ds:[rsi]
  40ae61:	add    BYTE PTR [rsi+0x0],ah
  40ae64:	je     0x40ae66
  40ae66:	and    BYTE PTR [rax],al
  40ae68:	rex.XB add BYTE PTR [r15+0x0],bpl
  40ae6c:	jb     0x40ae6e
  40ae6e:	jo     0x40ae70
  40ae70:	outs   dx,DWORD PTR ds:[rsi]
  40ae71:	add    BYTE PTR [rdx+0x0],dh
  40ae74:	(bad)  
  40ae75:	add    BYTE PTR [rax+rax*1+0x69],dh
  40ae79:	add    BYTE PTR [rdi+0x0],ch
  40ae7c:	outs   dx,BYTE PTR ds:[rsi]
  40ae7d:	add    BYTE PTR [rax],al
  40ae7f:	add    BYTE PTR [rdx+0x0],dh
  40ae82:	and    eax,0x46000100
  40ae87:	add    BYTE PTR [rcx+0x0],ch
  40ae8a:	ins    BYTE PTR es:[rdi],dx
  40ae8b:	add    BYTE PTR [rbp+0x0],ah
  40ae8e:	add    BYTE PTR [rbp+0x0],r12b
  40ae92:	jae    0x40ae94
  40ae94:	movsxd eax,DWORD PTR [rax]
  40ae96:	jb     0x40ae98
  40ae98:	imul   eax,DWORD PTR [rax],0x740070
  40ae9e:	imul   eax,DWORD PTR [rax],0x6e006f
  40aea4:	add    BYTE PTR [rax],al
  40aea6:	add    BYTE PTR [rax],al
  40aea8:	rex.WRB add BYTE PTR [r9+0x0],r12b
  40aeac:	outs   dx,BYTE PTR ds:[rsi]
  40aead:	add    BYTE PTR [rcx+0x0],ah
  40aeb0:	add    BYTE PTR [ebp+0x0],ah
  40aeb4:	add    BYTE PTR fs:[rax],ah
  40aeb7:	add    BYTE PTR [rbx+0x0],dl
  40aeba:	push   rcx
  40aebb:	add    BYTE PTR [rax+rax*1+0x20],cl
  40aebf:	add    BYTE PTR [rbx+0x0],dl
  40aec2:	add    BYTE PTR gs:[rdx+0x0],dh
  40aec6:	jbe    0x40aec8
  40aec8:	add    BYTE PTR gs:[rdx+0x0],dh
  40aecc:	and    BYTE PTR [rax],al
  40aece:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40aed2:	js     0x40aed4
  40aed4:	push   rbx
  40aed5:	add    BYTE PTR [rcx+0x0],dh
  40aed8:	ins    BYTE PTR es:[rdi],dx
  40aed9:	add    BYTE PTR [rdx+0x0],dl
  40aedc:	add    BYTE PTR gs:[rdi+0x0],ah
  40aee0:	imul   eax,DWORD PTR [rax],0x740073
  40aee6:	jb     0x40aee8
  40aee8:	jns    0x40aeea
  40aeea:	rex.WXB add BYTE PTR [r13+0x0],spl
  40aeee:	jns    0x40aef0
  40aef0:	add    BYTE PTR [rax],al
  40aef2:	add    BYTE PTR [rax],al
  40aef4:	jp     0x40aef6
  40aef6:	sub    eax,0x46000100
  40aefb:	add    BYTE PTR [rcx+0x0],ch
  40aefe:	ins    BYTE PTR es:[rdi],dx
  40aeff:	add    BYTE PTR [rbp+0x0],ah
  40af02:	push   rsi
  40af03:	add    BYTE PTR [rbp+0x0],ah
  40af06:	jb     0x40af08
  40af08:	jae    0x40af0a
  40af0a:	imul   eax,DWORD PTR [rax],0x6e006f
  40af10:	add    BYTE PTR [rax],al
  40af12:	add    BYTE PTR [rax],al
  40af14:	xor    DWORD PTR [rax],eax
  40af16:	xor    BYTE PTR [rax],al
  40af18:	add    BYTE PTR cs:[rax],dh
  40af1b:	add    BYTE PTR [rsi],ch
  40af1d:	add    BYTE PTR [rdx],dh
  40af1f:	add    BYTE PTR [rip+0x31003300],dh        # 0x3140e225
  40af25:	add    BYTE PTR [rsi],ch
  40af27:	add    BYTE PTR [rax],dh
  40af29:	add    BYTE PTR [rax],ah
  40af2b:	add    BYTE PTR [rax],ch
  40af2d:	add    BYTE PTR [rax],ch
  40af2f:	add    BYTE PTR [rbx+0x0],cl
  40af32:	(bad)  
  40af33:	add    BYTE PTR [rax+rax*1+0x6d],dh
  40af37:	add    BYTE PTR [rcx+0x0],ah
  40af3a:	imul   eax,DWORD PTR [rax],0x50005f
  40af40:	rex.XB add BYTE PTR [r13+0x0],dl
  40af44:	pop    rdi
  40af45:	add    BYTE PTR [rbp+0x0],cl
  40af48:	(bad)  
  40af49:	add    BYTE PTR [rcx+0x0],ch
  40af4c:	outs   dx,BYTE PTR ds:[rsi]
  40af4d:	add    BYTE PTR [rcx],ch
  40af4f:	add    BYTE PTR [rsi],ch
  40af51:	add    BYTE PTR [rax],dh
  40af53:	add    BYTE PTR [rcx],bh
  40af55:	add    BYTE PTR [rax],dh
  40af57:	add    BYTE PTR [rbx],dh
  40af59:	add    BYTE PTR [rdx],dh
  40af5b:	add    BYTE PTR [rcx],bh
  40af5d:	add    BYTE PTR [rip+0x30003100],ch        # 0x3040e063
  40af63:	add    BYTE PTR [rax+rax*1],dh
  40af66:	xor    eax,0x29002000
  40af6b:	add    BYTE PTR [rax],al
  40af6d:	add    BYTE PTR [rax],al
  40af6f:	add    BYTE PTR [rax+rax*1+0x12],al
  40af73:	add    BYTE PTR [rcx],al
  40af75:	add    BYTE PTR [rcx+0x0],cl
  40af78:	outs   dx,BYTE PTR ds:[rsi]
  40af79:	add    BYTE PTR [rax+rax*1+0x65],dh
  40af7d:	add    BYTE PTR [rdx+0x0],dh
  40af80:	outs   dx,BYTE PTR ds:[rsi]
  40af81:	add    BYTE PTR [rcx+0x0],ah
  40af84:	ins    BYTE PTR es:[rdi],dx
  40af85:	add    BYTE PTR [rsi+0x0],cl
  40af88:	(bad)  
  40af89:	add    BYTE PTR [rbp+0x0],ch
  40af8c:	add    BYTE PTR gs:[rax],al
  40af8f:	add    BYTE PTR [rsi+0x0],al
  40af92:	imul   eax,DWORD PTR [rax],0x530078
  40af98:	jno    0x40af9a
  40af9a:	ins    BYTE PTR es:[rdi],dx
  40af9b:	add    BYTE PTR [rdx+0x0],dl
  40af9e:	add    BYTE PTR gs:[rdi+0x0],ah
  40afa2:	imul   eax,DWORD PTR [rax],0x740073
  40afa8:	jb     0x40afaa
  40afaa:	jns    0x40afac
  40afac:	rex.WXB add BYTE PTR [r13+0x0],spl
  40afb0:	jns    0x40afb2
  40afb2:	add    BYTE PTR [rax],al
  40afb4:	outs   dx,BYTE PTR ds:[rsi]
  40afb5:	add    BYTE PTR [rip+0x4c000100],ah        # 0x4c40b0bb
  40afbb:	add    BYTE PTR [rbp+0x0],ah
  40afbe:	add    BYTE PTR [ecx+0x0],ah
  40afc2:	ins    BYTE PTR es:[rdi],dx
  40afc3:	add    BYTE PTR [rbx+0x0],al
  40afc6:	outs   dx,DWORD PTR ds:[rsi]
  40afc7:	add    BYTE PTR [rax+0x0],dh
  40afca:	jns    0x40afcc
  40afcc:	jb     0x40afce
  40afce:	imul   eax,DWORD PTR [rax],0x680067
  40afd4:	je     0x40afd6
  40afd6:	add    BYTE PTR [rax],al
  40afd8:	rex.WRB add BYTE PTR [r9+0x0],r13b
  40afdc:	movsxd eax,DWORD PTR [rax]
  40afde:	jb     0x40afe0
  40afe0:	outs   dx,DWORD PTR ds:[rsi]
  40afe1:	add    BYTE PTR [rbx+0x0],dh
  40afe4:	outs   dx,DWORD PTR ds:[rsi]
  40afe5:	add    BYTE PTR [rsi+0x0],ah
  40afe8:	je     0x40afea
  40afea:	and    BYTE PTR [rax],al
  40afec:	rex.XB add BYTE PTR [r15+0x0],bpl
  40aff0:	jb     0x40aff2
  40aff2:	jo     0x40aff4
  40aff4:	add    BYTE PTR cs:[rax],ah
  40aff7:	add    BYTE PTR [rcx+0x0],al
  40affa:	ins    BYTE PTR es:[rdi],dx
  40affb:	add    BYTE PTR [rax+rax*1+0x20],ch
  40afff:	add    BYTE PTR [rdx+0x0],dh
  40b002:	imul   eax,DWORD PTR [rax],0x680067
  40b008:	je     0x40b00a
  40b00a:	jae    0x40b00c
  40b00c:	and    BYTE PTR [rax],al
  40b00e:	jb     0x40b010
  40b010:	add    BYTE PTR gs:[rbx+0x0],dh
  40b014:	add    BYTE PTR gs:[rdx+0x0],dh
  40b018:	jbe    0x40b01a
  40b01a:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
  40b01f:	add    BYTE PTR [rax],al
  40b021:	add    BYTE PTR [rax],al
  40b023:	add    BYTE PTR [rax+rax*1+0x16],dl
  40b027:	add    BYTE PTR [rcx],al
  40b029:	add    BYTE PTR [rdi+0x0],cl
  40b02c:	jb     0x40b02e
  40b02e:	imul   eax,DWORD PTR [rax],0x690067
  40b034:	outs   dx,BYTE PTR ds:[rsi]
  40b035:	add    BYTE PTR [rcx+0x0],ah
  40b038:	ins    BYTE PTR es:[rdi],dx
  40b039:	add    BYTE PTR [rsi+0x0],al
  40b03c:	imul   eax,DWORD PTR [rax],0x65006c
  40b042:	outs   dx,BYTE PTR ds:[rsi]
  40b043:	add    BYTE PTR [rcx+0x0],ah
  40b046:	ins    DWORD PTR es:[rdi],dx
  40b047:	add    BYTE PTR [rbp+0x0],ah
  40b04a:	add    BYTE PTR [rax],al
  40b04c:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40b050:	js     0x40b052
  40b052:	push   rbx
  40b053:	add    BYTE PTR [rcx+0x0],dh
  40b056:	ins    BYTE PTR es:[rdi],dx
  40b057:	add    BYTE PTR [rdx+0x0],dl
  40b05a:	add    BYTE PTR gs:[rdi+0x0],ah
  40b05e:	imul   eax,DWORD PTR [rax],0x740073
  40b064:	jb     0x40b066
  40b066:	jns    0x40b068
  40b068:	rex.WXB add BYTE PTR [r13+0x0],spl
  40b06c:	jns    0x40b06e
  40b06e:	add    BYTE PTR cs:[rbp+0x0],ah
  40b072:	js     0x40b074
  40b074:	add    BYTE PTR gs:[rax],al
  40b077:	add    BYTE PTR [rdx+0x0],cl
  40b07a:	adc    eax,0x50000100
  40b07f:	add    BYTE PTR [rdx+0x0],dh
  40b082:	outs   dx,DWORD PTR ds:[rsi]
  40b083:	add    BYTE PTR [rax+rax*1+0x75],ah
  40b087:	add    BYTE PTR [rbx+0x0],ah
  40b08a:	je     0x40b08c
  40b08c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  40b090:	ins    DWORD PTR es:[rdi],dx
  40b091:	add    BYTE PTR [rbp+0x0],ah
  40b094:	add    BYTE PTR [rax],al
  40b096:	add    BYTE PTR [rax],al
  40b098:	rex.WRB add BYTE PTR [r9+0x0],r13b
  40b09c:	movsxd eax,DWORD PTR [rax]
  40b09e:	jb     0x40b0a0
  40b0a0:	outs   dx,DWORD PTR ds:[rsi]
  40b0a1:	add    BYTE PTR [rbx+0x0],dh
  40b0a4:	outs   dx,DWORD PTR ds:[rsi]
  40b0a5:	add    BYTE PTR [rsi+0x0],ah
  40b0a8:	je     0x40b0aa
  40b0aa:	and    BYTE PTR [rax],al
  40b0ac:	push   rbx
  40b0ad:	add    BYTE PTR [rcx+0x0],dl
  40b0b0:	rex.WR add BYTE PTR [rax],r12b
  40b0b3:	add    BYTE PTR [rbx+0x0],dl
  40b0b6:	add    BYTE PTR gs:[rdx+0x0],dh
  40b0ba:	jbe    0x40b0bc
  40b0bc:	add    BYTE PTR gs:[rdx+0x0],dh
  40b0c0:	add    BYTE PTR [rax],al
  40b0c2:	add    BYTE PTR [rax],al
  40b0c4:	cmp    al,0x0
  40b0c6:	or     al,0x0
  40b0c8:	add    DWORD PTR [rax],eax
  40b0ca:	push   rax
  40b0cb:	add    BYTE PTR [rdx+0x0],dh
  40b0ce:	outs   dx,DWORD PTR ds:[rsi]
  40b0cf:	add    BYTE PTR [rax+rax*1+0x75],ah
  40b0d3:	add    BYTE PTR [rbx+0x0],ah
  40b0d6:	je     0x40b0d8
  40b0d8:	push   rsi
  40b0d9:	add    BYTE PTR [rbp+0x0],ah
  40b0dc:	jb     0x40b0de
  40b0de:	jae    0x40b0e0
  40b0e0:	imul   eax,DWORD PTR [rax],0x6e006f
  40b0e6:	add    BYTE PTR [rax],al
  40b0e8:	xor    DWORD PTR [rax],eax
  40b0ea:	xor    BYTE PTR [rax],al
  40b0ec:	add    BYTE PTR cs:[rax],dh
  40b0ef:	add    BYTE PTR [rsi],ch
  40b0f1:	add    BYTE PTR [rdx],dh
  40b0f3:	add    BYTE PTR [rip+0x31003300],dh        # 0x3140e3f9
  40b0f9:	add    BYTE PTR [rsi],ch
  40b0fb:	add    BYTE PTR [rax],dh
  40b0fd:	add    BYTE PTR [rax],al
  40b0ff:	add    BYTE PTR [rax+rax*1+0x0],al
  40b103:	add    BYTE PTR [rcx],al
  40b105:	add    BYTE PTR [rsi+0x0],dl
  40b108:	(bad)  
  40b109:	add    BYTE PTR [rdx+0x0],dh
  40b10c:	rex.RX add BYTE PTR [rcx+0x0],r13b
  40b110:	ins    BYTE PTR es:[rdi],dx
  40b111:	add    BYTE PTR [rbp+0x0],ah
  40b114:	rex.WB add BYTE PTR [r14+0x0],bpl
  40b118:	data16 add BYTE PTR [rdi+0x0],ch
  40b11c:	add    BYTE PTR [rax],al
  40b11e:	add    BYTE PTR [rax],al
  40b120:	and    al,0x0
  40b122:	add    al,0x0
  40b124:	add    BYTE PTR [rax],al
  40b126:	push   rsp
  40b127:	add    BYTE PTR [rdx+0x0],dh
  40b12a:	(bad)  
  40b12b:	add    BYTE PTR [rsi+0x0],ch
  40b12e:	jae    0x40b130
  40b130:	ins    BYTE PTR es:[rdi],dx
  40b131:	add    BYTE PTR [rcx+0x0],ah
  40b134:	je     0x40b136
  40b136:	imul   eax,DWORD PTR [rax],0x6e006f
  40b13c:	add    BYTE PTR [rax],al
  40b13e:	add    BYTE PTR [rax],al
  40b140:	or     DWORD PTR [rax+rsi*4],eax
  40b143:	add    al,0x0
  40b145:	add    BYTE PTR [rax],al
	...
