
69828c857d4824b9f850b1e0597d2c134c91114b7a0774c41dffe33b0eb23721.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	mov    QWORD PTR [rsp+0x10],rbp
   14000100a:	mov    QWORD PTR [rsp+0x18],rsi
   14000100f:	mov    QWORD PTR [rsp+0x20],rdi
   140001014:	push   r12
   140001016:	push   r13
   140001018:	push   r14
   14000101a:	sub    rsp,0x20
   14000101e:	mov    r12,rcx
   140001021:	or     rcx,0xffffffffffffffff
   140001025:	xor    eax,eax
   140001027:	mov    rdi,r12
   14000102a:	mov    edx,0x1
   14000102f:	repnz scas al,BYTE PTR es:[rdi]
   140001031:	not    rcx
   140001034:	lea    eax,[rcx+rcx*1+0x1]
   140001038:	lea    rdi,[rcx-0x1]
   14000103c:	movsxd rcx,eax
   14000103f:	call   0x140001c94
   140001044:	xor    esi,esi
   140001046:	xor    ebp,ebp
   140001048:	movsxd r13,edi
   14000104b:	mov    BYTE PTR [rax],0x22
   14000104e:	lea    rbx,[rax+0x1]
   140001052:	mov    r14,rax
   140001055:	test   edi,edi
   140001057:	jle    0x1400010be
   140001059:	nop    DWORD PTR [rax+0x0]
   140001060:	movzx  ecx,BYTE PTR [r12+rbp*1]
   140001065:	cmp    cl,0x5c
   140001068:	jne    0x14000106e
   14000106a:	inc    esi
   14000106c:	jmp    0x140001095
   14000106e:	cmp    cl,0x22
   140001071:	jne    0x140001093
   140001073:	test   esi,esi
   140001075:	jle    0x14000108b
   140001077:	mov    r8d,esi
   14000107a:	mov    dl,0x5c
   14000107c:	mov    rcx,rbx
   14000107f:	mov    edi,esi
   140001081:	call   0x140001cf0
   140001086:	add    rbx,rdi
   140001089:	sub    esi,esi
   14000108b:	mov    BYTE PTR [rbx],0x5c
   14000108e:	inc    rbx
   140001091:	jmp    0x140001095
   140001093:	xor    esi,esi
   140001095:	movzx  eax,BYTE PTR [r12+rbp*1]
   14000109a:	inc    rbp
   14000109d:	inc    rbx
   1400010a0:	cmp    rbp,r13
   1400010a3:	mov    BYTE PTR [rbx-0x1],al
   1400010a6:	jl     0x140001060
   1400010a8:	test   esi,esi
   1400010aa:	jle    0x1400010be
   1400010ac:	mov    r8d,esi
   1400010af:	mov    dl,0x5c
   1400010b1:	mov    rcx,rbx
   1400010b4:	mov    edi,esi
   1400010b6:	call   0x140001cf0
   1400010bb:	add    rbx,rdi
   1400010be:	mov    rbp,QWORD PTR [rsp+0x48]
   1400010c3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400010c8:	mov    rdi,QWORD PTR [rsp+0x58]
   1400010cd:	mov    BYTE PTR [rbx],0x22
   1400010d0:	mov    BYTE PTR [rbx+0x1],0x0
   1400010d4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400010d9:	mov    rax,r14
   1400010dc:	add    rsp,0x20
   1400010e0:	pop    r14
   1400010e2:	pop    r13
   1400010e4:	pop    r12
   1400010e6:	ret    
   1400010e7:	int3   
   1400010e8:	int3   
   1400010e9:	int3   
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400010f5:	push   rdi
   1400010f6:	sub    rsp,0x460
   1400010fd:	mov    rax,QWORD PTR [rip+0x112bc]        # 0x1400123c0
   140001104:	xor    rax,rsp
   140001107:	mov    QWORD PTR [rsp+0x450],rax
   14000110f:	mov    rbx,rcx
   140001112:	mov    rax,rcx
   140001115:	movzx  ecx,BYTE PTR [rcx]
   140001118:	mov    rdi,rdx
   14000111b:	test   cl,cl
   14000111d:	je     0x140001132
   14000111f:	nop
   140001120:	inc    rax
   140001123:	cmp    cl,0x2f
   140001126:	jne    0x14000112c
   140001128:	mov    BYTE PTR [rax-0x1],0x5c
   14000112c:	mov    cl,BYTE PTR [rax]
   14000112e:	test   cl,cl
   140001130:	jne    0x140001120
   140001132:	lea    rax,[rsp+0x140]
   14000113a:	lea    r9,[rsp+0x240]
   140001142:	lea    r8,[rsp+0x40]
   140001147:	lea    rdx,[rsp+0x30]
   14000114c:	mov    rcx,rbx
   14000114f:	mov    QWORD PTR [rsp+0x20],rax
   140001154:	call   0x1400022a8
   140001159:	cmp    BYTE PTR [rsp+0x30],0x0
   14000115e:	jne    0x140001212
   140001164:	cmp    BYTE PTR [rsp+0x40],0x5c
   140001169:	je     0x140001212
   14000116f:	lea    rax,[rsp+0x140]
   140001177:	lea    r9,[rsp+0x240]
   14000117f:	lea    r8,[rsp+0x40]
   140001184:	lea    rdx,[rsp+0x30]
   140001189:	mov    rcx,rdi
   14000118c:	mov    QWORD PTR [rsp+0x20],rax
   140001191:	call   0x1400022a8
   140001196:	or     rcx,0xffffffffffffffff
   14000119a:	xor    eax,eax
   14000119c:	lea    rdi,[rsp+0x40]
   1400011a1:	repnz scas al,BYTE PTR es:[rdi]
   1400011a3:	lea    rax,[rsp+0x40]
   1400011a8:	not    rcx
   1400011ab:	dec    rax
   1400011ae:	dec    rcx
   1400011b1:	add    rcx,rax
   1400011b4:	cmp    BYTE PTR [rcx],0x5c
   1400011b7:	jne    0x1400011c1
   1400011b9:	dec    rcx
   1400011bc:	cmp    BYTE PTR [rcx],0x5c
   1400011bf:	je     0x1400011d6
   1400011c1:	lea    rax,[rsp+0x40]
   1400011c6:	cmp    rcx,rax
   1400011c9:	jb     0x1400011d6
   1400011cb:	mov    BYTE PTR [rcx],0x0
   1400011ce:	dec    rcx
   1400011d1:	cmp    BYTE PTR [rcx],0x5c
   1400011d4:	jne    0x1400011c1
   1400011d6:	lea    r8,[rsp+0x40]
   1400011db:	lea    rdx,[rsp+0x30]
   1400011e0:	lea    rcx,[rsp+0x340]
   1400011e8:	mov    r9,rbx
   1400011eb:	mov    QWORD PTR [rsp+0x20],0x0
   1400011f4:	call   0x140001fd8
   1400011f9:	mov    edx,0x1
   1400011fe:	mov    ecx,0x104
   140001203:	call   0x140001c94
   140001208:	lea    rdx,[rsp+0x340]
   140001210:	jmp    0x140001224
   140001212:	mov    edx,0x1
   140001217:	mov    ecx,0x104
   14000121c:	call   0x140001c94
   140001221:	mov    rdx,rbx
   140001224:	mov    r8d,0x104
   14000122a:	mov    rcx,rax
   14000122d:	mov    rdi,rax
   140001230:	call   0x140001df0
   140001235:	mov    rax,rdi
   140001238:	mov    rcx,QWORD PTR [rsp+0x450]
   140001240:	xor    rcx,rsp
   140001243:	call   0x140002350
   140001248:	mov    rbx,QWORD PTR [rsp+0x480]
   140001250:	add    rsp,0x460
   140001257:	pop    rdi
   140001258:	ret    
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	mov    QWORD PTR [rsp+0x8],rbx
   140001265:	mov    QWORD PTR [rsp+0x10],rbp
   14000126a:	mov    QWORD PTR [rsp+0x18],rsi
   14000126f:	mov    QWORD PTR [rsp+0x20],rdi
   140001274:	push   r12
   140001276:	push   r13
   140001278:	push   r14
   14000127a:	sub    rsp,0x20
   14000127e:	mov    rbx,rcx
   140001281:	or     rcx,0xffffffffffffffff
   140001285:	xor    eax,eax
   140001287:	mov    r13,rdx
   14000128a:	mov    rdi,rbx
   14000128d:	lea    edx,[rax+0x8]
   140001290:	repnz scas al,BYTE PTR es:[rdi]
   140001292:	not    rcx
   140001295:	dec    rcx
   140001298:	call   0x140001c94
   14000129d:	xor    edi,edi
   14000129f:	mov    rsi,rbx
   1400012a2:	mov    DWORD PTR [r13+0x0],edi
   1400012a6:	movsx  ecx,BYTE PTR [rbx]
   1400012a9:	mov    r14,rax
   1400012ac:	xor    r12d,r12d
   1400012af:	mov    QWORD PTR [rax],rbx
   1400012b2:	call   0x14000241c
   1400012b7:	test   eax,eax
   1400012b9:	je     0x1400012d0
   1400012bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400012c0:	movsx  ecx,BYTE PTR [rbx+0x1]
   1400012c4:	inc    rbx
   1400012c7:	call   0x14000241c
   1400012cc:	test   eax,eax
   1400012ce:	jne    0x1400012c0
   1400012d0:	movzx  ebp,BYTE PTR [rbx]
   1400012d3:	inc    rbx
   1400012d6:	test   bpl,bpl
   1400012d9:	je     0x140001336
   1400012db:	movsx  ecx,bpl
   1400012df:	call   0x14000241c
   1400012e4:	test   eax,eax
   1400012e6:	je     0x1400012ed
   1400012e8:	test   r12d,r12d
   1400012eb:	je     0x140001336
   1400012ed:	cmp    bpl,0x5c
   1400012f1:	jne    0x1400012f7
   1400012f3:	inc    edi
   1400012f5:	jmp    0x1400012d0
   1400012f7:	cmp    bpl,0x22
   1400012fb:	jne    0x140001313
   1400012fd:	test   dil,0x1
   140001301:	jne    0x140001311
   140001303:	xor    eax,eax
   140001305:	test   r12d,r12d
   140001308:	sete   al
   14000130b:	xor    bpl,bpl
   14000130e:	mov    r12d,eax
   140001311:	sar    edi,1
   140001313:	test   edi,edi
   140001315:	je     0x140001329
   140001317:	mov    r8,rdi
   14000131a:	mov    dl,0x5c
   14000131c:	mov    rcx,rsi
   14000131f:	call   0x140001cf0
   140001324:	add    rsi,rdi
   140001327:	xor    edi,edi
   140001329:	test   bpl,bpl
   14000132c:	je     0x1400012d0
   14000132e:	mov    BYTE PTR [rsi],bpl
   140001331:	inc    rsi
   140001334:	jmp    0x1400012d0
   140001336:	test   edi,edi
   140001338:	je     0x14000134c
   14000133a:	mov    r8,rdi
   14000133d:	mov    dl,0x5c
   14000133f:	mov    rcx,rsi
   140001342:	call   0x140001cf0
   140001347:	add    rsi,rdi
   14000134a:	xor    edi,edi
   14000134c:	mov    BYTE PTR [rsi],0x0
   14000134f:	inc    DWORD PTR [r13+0x0]
   140001353:	movsxd rax,DWORD PTR [r13+0x0]
   140001357:	inc    rsi
   14000135a:	mov    QWORD PTR [r14+rax*8],rsi
   14000135e:	test   bpl,bpl
   140001361:	je     0x140001389
   140001363:	movsx  ecx,BYTE PTR [rbx]
   140001366:	call   0x14000241c
   14000136b:	test   eax,eax
   14000136d:	je     0x140001380
   14000136f:	nop
   140001370:	movsx  ecx,BYTE PTR [rbx+0x1]
   140001374:	inc    rbx
   140001377:	call   0x14000241c
   14000137c:	test   eax,eax
   14000137e:	jne    0x140001370
   140001380:	cmp    BYTE PTR [rbx],0x0
   140001383:	jne    0x1400012d0
   140001389:	mov    rbx,QWORD PTR [rsp+0x40]
   14000138e:	mov    rbp,QWORD PTR [rsp+0x48]
   140001393:	mov    rsi,QWORD PTR [rsp+0x50]
   140001398:	mov    rdi,QWORD PTR [rsp+0x58]
   14000139d:	mov    rax,r14
   1400013a0:	add    rsp,0x20
   1400013a4:	pop    r14
   1400013a6:	pop    r13
   1400013a8:	pop    r12
   1400013aa:	ret    
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	sub    rsp,0x28
   1400013b4:	test   ecx,ecx
   1400013b6:	jne    0x1400013ca
   1400013b8:	mov    ecx,DWORD PTR [rip+0x12182]        # 0x140013540
   1400013be:	test   ecx,ecx
   1400013c0:	je     0x1400013ca
   1400013c2:	xor    edx,edx
   1400013c4:	call   QWORD PTR [rip+0xdc36]        # 0x14000f000
   1400013ca:	mov    eax,0x1
   1400013cf:	add    rsp,0x28
   1400013d3:	ret    
   1400013d4:	int3   
   1400013d5:	int3   
   1400013d6:	int3   
   1400013d7:	int3   
   1400013d8:	int3   
   1400013d9:	int3   
   1400013da:	int3   
   1400013db:	int3   
   1400013dc:	int3   
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400013e5:	push   rdi
   1400013e6:	sub    rsp,0xe0
   1400013ed:	xor    eax,eax
   1400013ef:	xor    edi,edi
   1400013f1:	mov    rbx,rcx
   1400013f4:	lea    rcx,[rsp+0x70]
   1400013f9:	lea    r8d,[rdi+0x68]
   1400013fd:	xor    edx,edx
   1400013ff:	mov    DWORD PTR [rsp+0xf0],edi
   140001406:	mov    QWORD PTR [rsp+0x50],rax
   14000140b:	mov    QWORD PTR [rsp+0x58],rax
   140001410:	mov    QWORD PTR [rsp+0x60],rax
   140001415:	call   0x140001cf0
   14000141a:	lea    edx,[rdi+0x1]
   14000141d:	lea    rcx,[rip+0xffffffffffffff8c]        # 0x1400013b0
   140001424:	mov    DWORD PTR [rsp+0x70],0x68
   14000142c:	call   QWORD PTR [rip+0xdbee]        # 0x14000f020
   140001432:	lea    r11,[rsp+0x50]
   140001437:	lea    rax,[rsp+0x70]
   14000143c:	mov    QWORD PTR [rsp+0x48],r11
   140001441:	mov    QWORD PTR [rsp+0x40],rax
   140001446:	mov    QWORD PTR [rsp+0x38],rdi
   14000144b:	mov    QWORD PTR [rsp+0x30],rdi
   140001450:	xor    r9d,r9d
   140001453:	xor    r8d,r8d
   140001456:	mov    rdx,rbx
   140001459:	xor    ecx,ecx
   14000145b:	mov    DWORD PTR [rsp+0x28],edi
   14000145f:	mov    DWORD PTR [rsp+0x20],0x1
   140001467:	call   QWORD PTR [rip+0xdbab]        # 0x14000f018
   14000146d:	test   eax,eax
   14000146f:	jne    0x140001499
   140001471:	call   0x140001a70
   140001476:	lea    rdx,[rip+0xdeab]        # 0x14000f328
   14000147d:	lea    rcx,[rax+0x60]
   140001481:	call   0x1400018f8
   140001486:	xor    eax,eax
   140001488:	mov    rbx,QWORD PTR [rsp+0xf8]
   140001490:	add    rsp,0xe0
   140001497:	pop    rdi
   140001498:	ret    
   140001499:	mov    eax,DWORD PTR [rsp+0x60]
   14000149d:	mov    rcx,QWORD PTR [rsp+0x50]
   1400014a2:	or     edx,0xffffffff
   1400014a5:	mov    DWORD PTR [rip+0x12095],eax        # 0x140013540
   1400014ab:	call   QWORD PTR [rip+0xdb5f]        # 0x14000f010
   1400014b1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400014b6:	lea    rdx,[rsp+0xf0]
   1400014be:	call   QWORD PTR [rip+0xdb44]        # 0x14000f008
   1400014c4:	test   eax,eax
   1400014c6:	jne    0x1400014f0
   1400014c8:	call   0x140001a70
   1400014cd:	lea    rdx,[rip+0xde2c]        # 0x14000f300
   1400014d4:	lea    rcx,[rax+0x60]
   1400014d8:	call   0x1400018f8
   1400014dd:	xor    eax,eax
   1400014df:	mov    rbx,QWORD PTR [rsp+0xf8]
   1400014e7:	add    rsp,0xe0
   1400014ee:	pop    rdi
   1400014ef:	ret    
   1400014f0:	mov    eax,DWORD PTR [rsp+0xf0]
   1400014f7:	mov    rbx,QWORD PTR [rsp+0xf8]
   1400014ff:	add    rsp,0xe0
   140001506:	pop    rdi
   140001507:	ret    
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	mov    QWORD PTR [rsp+0x8],rbx
   140001515:	mov    QWORD PTR [rsp+0x10],rbp
   14000151a:	mov    QWORD PTR [rsp+0x18],rsi
   14000151f:	push   rdi
   140001520:	push   r12
   140001522:	push   r13
   140001524:	sub    rsp,0x20
   140001528:	mov    r13,rcx
   14000152b:	or     rcx,0xffffffffffffffff
   14000152f:	xor    eax,eax
   140001531:	mov    ebx,0x1
   140001536:	mov    rdi,r13
   140001539:	movsxd rbp,r8d
   14000153c:	repnz scas al,BYTE PTR es:[rdi]
   14000153e:	cmp    rbx,rbp
   140001541:	mov    rsi,rdx
   140001544:	not    rcx
   140001547:	mov    r9,rbx
   14000154a:	lea    r10,[rcx+0x1]
   14000154e:	jge    0x14000156a
   140001550:	mov    rdi,QWORD PTR [rdx+r9*8]
   140001554:	or     rcx,0xffffffffffffffff
   140001558:	xor    eax,eax
   14000155a:	repnz scas al,BYTE PTR es:[rdi]
   14000155c:	inc    r9
   14000155f:	not    rcx
   140001562:	add    r10d,ecx
   140001565:	cmp    r9,rbp
   140001568:	jl     0x140001550
   14000156a:	movsxd rcx,r10d
   14000156d:	mov    rdx,rbx
   140001570:	call   0x140001c94
   140001575:	lea    rdx,[rip+0xddcc]        # 0x14000f348
   14000157c:	mov    r8,r13
   14000157f:	mov    rcx,rax
   140001582:	mov    r12,rax
   140001585:	call   0x14000249c
   14000158a:	or     rcx,0xffffffffffffffff
   14000158e:	xor    eax,eax
   140001590:	mov    rdi,r13
   140001593:	repnz scas al,BYTE PTR es:[rdi]
   140001595:	cmp    rbx,rbp
   140001598:	not    rcx
   14000159b:	lea    r13,[rcx-0x1]
   14000159f:	jge    0x1400015d1
   1400015a1:	mov    r8,QWORD PTR [rsi+rbx*8]
   1400015a5:	movsxd rcx,r13d
   1400015a8:	lea    rdx,[rip+0xdd95]        # 0x14000f344
   1400015af:	add    rcx,r12
   1400015b2:	call   0x14000249c
   1400015b7:	mov    rdi,QWORD PTR [rsi+rbx*8]
   1400015bb:	or     rcx,0xffffffffffffffff
   1400015bf:	xor    eax,eax
   1400015c1:	inc    rbx
   1400015c4:	repnz scas al,BYTE PTR es:[rdi]
   1400015c6:	not    rcx
   1400015c9:	add    r13d,ecx
   1400015cc:	cmp    rbx,rbp
   1400015cf:	jl     0x1400015a1
   1400015d1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400015d6:	mov    rbp,QWORD PTR [rsp+0x48]
   1400015db:	mov    rsi,QWORD PTR [rsp+0x50]
   1400015e0:	mov    rax,r12
   1400015e3:	add    rsp,0x20
   1400015e7:	pop    r13
   1400015e9:	pop    r12
   1400015eb:	pop    rdi
   1400015ec:	ret    
   1400015ed:	int3   
   1400015ee:	int3   
   1400015ef:	int3   
   1400015f0:	rex push rbx
   1400015f2:	push   rdi
   1400015f3:	push   r14
   1400015f5:	push   r15
   1400015f7:	sub    rsp,0x258
   1400015fe:	mov    rax,QWORD PTR [rip+0x10dbb]        # 0x1400123c0
   140001605:	xor    rax,rsp
   140001608:	mov    QWORD PTR [rsp+0x230],rax
   140001610:	mov    r14,rdx
   140001613:	mov    DWORD PTR [rsp+0x20],r8d
   140001618:	movsxd r15,ecx
   14000161b:	lea    rdx,[rsp+0x30]
   140001620:	mov    r8d,0x100
   140001626:	xor    ecx,ecx
   140001628:	call   QWORD PTR [rip+0xd9fa]        # 0x14000f028
   14000162e:	or     rcx,0xffffffffffffffff
   140001632:	xor    eax,eax
   140001634:	lea    rdi,[rsp+0x30]
   140001639:	repnz scas al,BYTE PTR es:[rdi]
   14000163b:	not    rcx
   14000163e:	lea    rax,[rsp+rcx*1+0x2f]
   140001643:	lea    rcx,[rsp+0x30]
   140001648:	cmp    rax,rcx
   14000164b:	jbe    0x140001665
   14000164d:	nop    DWORD PTR [rax]
   140001650:	cmp    BYTE PTR [rax],0x2e
   140001653:	je     0x140001665
   140001655:	lea    rdx,[rsp+0x30]
   14000165a:	mov    BYTE PTR [rax],0x0
   14000165d:	dec    rax
   140001660:	cmp    rax,rdx
   140001663:	ja     0x140001650
   140001665:	mov    BYTE PTR [rax],0x0
   140001668:	xor    eax,eax
   14000166a:	or     rcx,0xffffffffffffffff
   14000166e:	lea    rdi,[rsp+0x30]
   140001673:	xor    edx,edx
   140001675:	repnz scas al,BYTE PTR es:[rdi]
   140001677:	mov    rax,QWORD PTR [rip+0xdd3a]        # 0x14000f3b8
   14000167e:	lea    rcx,[rsp+0x30]
   140001683:	mov    QWORD PTR [rdi-0x1],rax
   140001687:	mov    eax,DWORD PTR [rip+0xdd33]        # 0x14000f3c0
   14000168d:	mov    DWORD PTR [rdi+0x7],eax
   140001690:	call   0x14000cf6c
   140001695:	mov    ebx,eax
   140001697:	cmp    eax,0xffffffff
   14000169a:	jne    0x1400016be
   14000169c:	call   0x140001a70
   1400016a1:	lea    r8,[rsp+0x30]
   1400016a6:	lea    rdx,[rip+0xdcfb]        # 0x14000f3a8
   1400016ad:	lea    rcx,[rax+0x60]
   1400016b1:	call   0x1400018f8
   1400016b6:	lea    eax,[rbx+0x3]
   1400016b9:	jmp    0x1400018b7
   1400016be:	lea    rdx,[rsp+0x130]
   1400016c6:	mov    r8d,0x100
   1400016cc:	mov    ecx,eax
   1400016ce:	mov    QWORD PTR [rsp+0x290],rbp
   1400016d6:	call   0x14000c5f8
   1400016db:	movsxd rcx,eax
   1400016de:	lea    rdi,[rsp+rcx*1+0x130]
   1400016e6:	mov    ecx,ebx
   1400016e8:	call   0x140009f38
   1400016ed:	lea    rdx,[rsp+0x130]
   1400016f5:	dec    rdx
   1400016f8:	inc    rdx
   1400016fb:	cmp    rdx,rdi
   1400016fe:	jae    0x14000170f
   140001700:	movzx  eax,BYTE PTR [rdx]
   140001703:	test   al,al
   140001705:	je     0x14000170f
   140001707:	cmp    al,0xa
   140001709:	je     0x14000170f
   14000170b:	cmp    al,0xd
   14000170d:	jne    0x1400016f8
   14000170f:	mov    BYTE PTR [rdx],0x0
   140001712:	lea    rcx,[rsp+0x130]
   14000171a:	lea    rdx,[rip+0xdc7f]        # 0x14000f3a0
   140001721:	mov    r8d,0x2
   140001727:	call   0x140002550
   14000172c:	test   eax,eax
   14000172e:	je     0x140001755
   140001730:	mov    rax,QWORD PTR [rip+0xdc59]        # 0x14000f390
   140001737:	lea    rcx,[rsp+0x130]
   14000173f:	mov    QWORD PTR [rcx],rax
   140001742:	mov    eax,DWORD PTR [rip+0xdc50]        # 0x14000f398
   140001748:	mov    DWORD PTR [rcx+0x8],eax
   14000174b:	movzx  eax,BYTE PTR [rip+0xdc4a]        # 0x14000f39c
   140001752:	mov    BYTE PTR [rcx+0xc],al
   140001755:	lea    rdx,[rsp+0x24]
   14000175a:	lea    rcx,[rsp+0x132]
   140001762:	call   0x140001260
   140001767:	lea    rdx,[rsp+0x30]
   14000176c:	mov    rdi,QWORD PTR [rax]
   14000176f:	mov    rbx,rax
   140001772:	mov    rcx,rdi
   140001775:	call   0x1400010f0
   14000177a:	mov    rbp,rax
   14000177d:	test   rax,rax
   140001780:	jne    0x1400017a2
   140001782:	call   0x140001a70
   140001787:	lea    rdx,[rip+0xdbda]        # 0x14000f368
   14000178e:	mov    r8,rdi
   140001791:	lea    rcx,[rax+0x60]
   140001795:	call   0x1400018f8
   14000179a:	lea    eax,[rbp+0x2]
   14000179d:	jmp    0x1400018af
   1400017a2:	mov    QWORD PTR [rsp+0x250],rsi
   1400017aa:	mov    esi,DWORD PTR [rsp+0x24]
   1400017ae:	mov    QWORD PTR [rsp+0x248],r12
   1400017b6:	mov    QWORD PTR [rsp+0x240],r13
   1400017be:	lea    r13d,[r15+rsi*1]
   1400017c2:	mov    edx,0x8
   1400017c7:	lea    eax,[r13+0x1]
   1400017cb:	movsxd rcx,eax
   1400017ce:	call   0x140001c94
   1400017d3:	mov    rcx,rbp
   1400017d6:	mov    r12,rax
   1400017d9:	call   0x140001000
   1400017de:	cmp    esi,0x1
   1400017e1:	mov    QWORD PTR [r12],rax
   1400017e5:	lea    rdi,[r12+0x8]
   1400017ea:	jle    0x14000180c
   1400017ec:	add    rbx,0x8
   1400017f0:	dec    esi
   1400017f2:	mov    rcx,QWORD PTR [rbx]
   1400017f5:	call   0x140001000
   1400017fa:	add    rdi,0x8
   1400017fe:	add    rbx,0x8
   140001802:	sub    rsi,0x1
   140001806:	mov    QWORD PTR [rdi-0x8],rax
   14000180a:	jne    0x1400017f2
   14000180c:	lea    rcx,[rsp+0x30]
   140001811:	call   0x140001000
   140001816:	mov    ebx,0x1
   14000181b:	add    rdi,0x8
   14000181f:	cmp    rbx,r15
   140001822:	mov    QWORD PTR [rdi-0x8],rax
   140001826:	jge    0x140001849
   140001828:	nop    DWORD PTR [rax+rax*1+0x0]
   140001830:	mov    rcx,QWORD PTR [r14+rbx*8]
   140001834:	call   0x140001000
   140001839:	inc    rbx
   14000183c:	add    rdi,0x8
   140001840:	cmp    rbx,r15
   140001843:	mov    QWORD PTR [rdi-0x8],rax
   140001847:	jl     0x140001830
   140001849:	cmp    DWORD PTR [rsp+0x20],0x0
   14000184e:	mov    rsi,QWORD PTR [rsp+0x250]
   140001856:	mov    QWORD PTR [rdi],0x0
   14000185d:	je     0x140001889
   14000185f:	mov    rdx,r12
   140001862:	mov    rcx,rbp
   140001865:	call   0x14000be24
   14000186a:	call   0x140001a70
   14000186f:	lea    rdx,[rip+0xdada]        # 0x14000f350
   140001876:	lea    rcx,[rax+0x60]
   14000187a:	mov    r8,rbp
   14000187d:	call   0x1400018f8
   140001882:	mov    eax,0x2
   140001887:	jmp    0x14000189f
   140001889:	mov    r8d,r13d
   14000188c:	mov    rdx,r12
   14000188f:	mov    rcx,rbp
   140001892:	call   0x140001510
   140001897:	mov    rcx,rax
   14000189a:	call   0x1400013e0
   14000189f:	mov    r12,QWORD PTR [rsp+0x248]
   1400018a7:	mov    r13,QWORD PTR [rsp+0x240]
   1400018af:	mov    rbp,QWORD PTR [rsp+0x290]
   1400018b7:	mov    rcx,QWORD PTR [rsp+0x230]
   1400018bf:	xor    rcx,rsp
   1400018c2:	call   0x140002350
   1400018c7:	add    rsp,0x258
   1400018ce:	pop    r15
   1400018d0:	pop    r14
   1400018d2:	pop    rdi
   1400018d3:	pop    rbx
   1400018d4:	ret    
   1400018d5:	int3   
   1400018d6:	int3   
   1400018d7:	int3   
   1400018d8:	int3   
   1400018d9:	int3   
   1400018da:	int3   
   1400018db:	int3   
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	mov    rdx,QWORD PTR [rip+0x11c69]        # 0x140013550
   1400018e7:	mov    ecx,DWORD PTR [rip+0x11c5f]        # 0x14001354c
   1400018ed:	mov    r8d,0x1
   1400018f3:	jmp    0x1400015f0
   1400018f8:	mov    rax,rsp
   1400018fb:	mov    QWORD PTR [rax+0x10],rdx
   1400018ff:	mov    QWORD PTR [rax+0x8],rcx
   140001903:	mov    QWORD PTR [rax+0x18],r8
   140001907:	mov    QWORD PTR [rax+0x20],r9
   14000190b:	push   rbx
   14000190c:	push   rsi
   14000190d:	push   rdi
   14000190e:	push   r12
   140001910:	sub    rsp,0x38
   140001914:	mov    rdi,rcx
   140001917:	xor    ebx,ebx
   140001919:	mov    esi,ebx
   14000191b:	mov    eax,ebx
   14000191d:	cmp    rcx,rbx
   140001920:	setne  al
   140001923:	cmp    eax,ebx
   140001925:	jne    0x14000194e
   140001927:	call   0x140003fbc
   14000192c:	mov    DWORD PTR [rax],0x16
   140001932:	mov    QWORD PTR [rsp+0x20],rbx
   140001937:	xor    r9d,r9d
   14000193a:	xor    r8d,r8d
   14000193d:	xor    edx,edx
   14000193f:	xor    ecx,ecx
   140001941:	call   0x140003eec
   140001946:	or     eax,0xffffffff
   140001949:	jmp    0x140001a63
   14000194e:	mov    eax,ebx
   140001950:	cmp    rdx,rbx
   140001953:	setne  al
   140001956:	cmp    eax,ebx
   140001958:	jne    0x140001981
   14000195a:	call   0x140003fbc
   14000195f:	mov    DWORD PTR [rax],0x16
   140001965:	mov    QWORD PTR [rsp+0x20],rbx
   14000196a:	xor    r9d,r9d
   14000196d:	xor    r8d,r8d
   140001970:	xor    edx,edx
   140001972:	xor    ecx,ecx
   140001974:	call   0x140003eec
   140001979:	or     eax,0xffffffff
   14000197c:	jmp    0x140001a63
   140001981:	lea    r12,[rsp+0x70]
   140001986:	call   0x140001b84
   14000198b:	nop
   14000198c:	test   BYTE PTR [rdi+0x18],0x40
   140001990:	jne    0x140001a2b
   140001996:	mov    rcx,rdi
   140001999:	call   0x140003d84
   14000199e:	cmp    eax,0xffffffff
   1400019a1:	je     0x1400019cd
   1400019a3:	cmp    eax,0xfffffffe
   1400019a6:	je     0x1400019cd
   1400019a8:	movsxd rdx,eax
   1400019ab:	mov    rcx,rdx
   1400019ae:	sar    rcx,0x5
   1400019b2:	lea    r8,[rip+0x129c7]        # 0x140014380
   1400019b9:	and    edx,0x1f
   1400019bc:	imul   rdx,rdx,0x58
   1400019c0:	add    rdx,QWORD PTR [r8+rcx*8]
   1400019c4:	lea    rcx,[rip+0x10a25]        # 0x1400123f0
   1400019cb:	jmp    0x1400019de
   1400019cd:	lea    rcx,[rip+0x10a1c]        # 0x1400123f0
   1400019d4:	mov    rdx,rcx
   1400019d7:	lea    r8,[rip+0x129a2]        # 0x140014380
   1400019de:	test   BYTE PTR [rdx+0x38],0x7f
   1400019e2:	jne    0x140001a09
   1400019e4:	cmp    eax,0xffffffff
   1400019e7:	je     0x140001a03
   1400019e9:	cmp    eax,0xfffffffe
   1400019ec:	je     0x140001a03
   1400019ee:	movsxd rcx,eax
   1400019f1:	mov    rax,rcx
   1400019f4:	sar    rax,0x5
   1400019f8:	and    ecx,0x1f
   1400019fb:	imul   rcx,rcx,0x58
   1400019ff:	add    rcx,QWORD PTR [r8+rax*8]
   140001a03:	test   BYTE PTR [rcx+0x38],0x80
   140001a07:	je     0x140001a2b
   140001a09:	call   0x140003fbc
   140001a0e:	mov    DWORD PTR [rax],0x16
   140001a14:	mov    QWORD PTR [rsp+0x20],rbx
   140001a19:	xor    r9d,r9d
   140001a1c:	xor    r8d,r8d
   140001a1f:	xor    edx,edx
   140001a21:	xor    ecx,ecx
   140001a23:	call   0x140003eec
   140001a28:	or     esi,0xffffffff
   140001a2b:	cmp    esi,ebx
   140001a2d:	jne    0x140001a59
   140001a2f:	mov    rcx,rdi
   140001a32:	call   0x140002d84
   140001a37:	mov    ebx,eax
   140001a39:	mov    r9,r12
   140001a3c:	xor    r8d,r8d
   140001a3f:	mov    rdx,QWORD PTR [rsp+0x68]
   140001a44:	mov    rcx,rdi
   140001a47:	call   0x140002fac
   140001a4c:	mov    esi,eax
   140001a4e:	mov    rdx,rdi
   140001a51:	mov    ecx,ebx
   140001a53:	call   0x140002e58
   140001a58:	nop
   140001a59:	mov    rcx,rdi
   140001a5c:	call   0x140001c14
   140001a61:	mov    eax,esi
   140001a63:	add    rsp,0x38
   140001a67:	pop    r12
   140001a69:	pop    rdi
   140001a6a:	pop    rsi
   140001a6b:	pop    rbx
   140001a6c:	ret    
   140001a6d:	int3   
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	lea    rax,[rip+0x10589]        # 0x140012000
   140001a77:	ret    
   140001a78:	rex push rbx
   140001a7a:	sub    rsp,0x20
   140001a7e:	mov    eax,DWORD PTR [rip+0x13b5c]        # 0x1400155e0
   140001a84:	mov    ebx,0x14
   140001a89:	test   eax,eax
   140001a8b:	jne    0x140001a94
   140001a8d:	mov    eax,0x200
   140001a92:	jmp    0x140001a99
   140001a94:	cmp    eax,ebx
   140001a96:	cmovl  eax,ebx
   140001a99:	movsxd rcx,eax
   140001a9c:	mov    edx,0x8
   140001aa1:	mov    DWORD PTR [rip+0x13b39],eax        # 0x1400155e0
   140001aa7:	call   0x1400040b0
   140001aac:	mov    QWORD PTR [rip+0x12b0d],rax        # 0x1400145c0
   140001ab3:	test   rax,rax
   140001ab6:	jne    0x140001adc
   140001ab8:	lea    edx,[rax+0x8]
   140001abb:	mov    rcx,rbx
   140001abe:	mov    DWORD PTR [rip+0x13b1c],ebx        # 0x1400155e0
   140001ac4:	call   0x1400040b0
   140001ac9:	mov    QWORD PTR [rip+0x12af0],rax        # 0x1400145c0
   140001ad0:	test   rax,rax
   140001ad3:	jne    0x140001adc
   140001ad5:	mov    eax,0x1a
   140001ada:	jmp    0x140001b54
   140001adc:	xor    ecx,ecx
   140001ade:	lea    rdx,[rip+0x1051b]        # 0x140012000
   140001ae5:	mov    QWORD PTR [rcx+rax*1],rdx
   140001ae9:	add    rdx,0x30
   140001aed:	add    rcx,0x8
   140001af1:	sub    rbx,0x1
   140001af5:	je     0x140001b00
   140001af7:	mov    rax,QWORD PTR [rip+0x12ac2]        # 0x1400145c0
   140001afe:	jmp    0x140001ae5
   140001b00:	xor    r8d,r8d
   140001b03:	lea    rdx,[rip+0x10512]        # 0x14001201c
   140001b0a:	lea    r9d,[r8+0x3]
   140001b0e:	mov    rcx,r8
   140001b11:	lea    r10,[rip+0x12868]        # 0x140014380
   140001b18:	mov    rax,r8
   140001b1b:	sar    rax,0x5
   140001b1f:	and    ecx,0x1f
   140001b22:	mov    rax,QWORD PTR [r10+rax*8]
   140001b26:	imul   rcx,rcx,0x58
   140001b2a:	mov    r10,QWORD PTR [rcx+rax*1]
   140001b2e:	cmp    r10,0xffffffffffffffff
   140001b32:	je     0x140001b3f
   140001b34:	cmp    r10,0xfffffffffffffffe
   140001b38:	je     0x140001b3f
   140001b3a:	test   r10,r10
   140001b3d:	jne    0x140001b45
   140001b3f:	mov    DWORD PTR [rdx],0xfffffffe
   140001b45:	inc    r8
   140001b48:	add    rdx,0x30
   140001b4c:	sub    r9,0x1
   140001b50:	jne    0x140001b0e
   140001b52:	xor    eax,eax
   140001b54:	add    rsp,0x20
   140001b58:	pop    rbx
   140001b59:	ret    
   140001b5a:	int3   
   140001b5b:	int3   
   140001b5c:	sub    rsp,0x28
   140001b60:	call   0x1400044ec
   140001b65:	cmp    BYTE PTR [rip+0x11a24],0x0        # 0x140013590
   140001b6c:	je     0x140001b73
   140001b6e:	call   0x140004284
   140001b73:	mov    rcx,QWORD PTR [rip+0x12a46]        # 0x1400145c0
   140001b7a:	add    rsp,0x28
   140001b7e:	jmp    0x140004244
   140001b83:	int3   
   140001b84:	rex push rbx
   140001b86:	sub    rsp,0x20
   140001b8a:	mov    rbx,rcx
   140001b8d:	lea    rcx,[rip+0x1046c]        # 0x140012000
   140001b94:	cmp    rbx,rcx
   140001b97:	jb     0x140001bd3
   140001b99:	lea    rax,[rip+0x107f0]        # 0x140012390
   140001ba0:	cmp    rbx,rax
   140001ba3:	ja     0x140001bd3
   140001ba5:	mov    rdx,rbx
   140001ba8:	movabs rax,0x2aaaaaaaaaaaaaab
   140001bb2:	sub    rdx,rcx
   140001bb5:	imul   rdx
   140001bb8:	sar    rdx,0x3
   140001bbc:	mov    rcx,rdx
   140001bbf:	shr    rcx,0x3f
   140001bc3:	lea    ecx,[rcx+rdx*1+0x10]
   140001bc7:	call   0x140004708
   140001bcc:	bts    DWORD PTR [rbx+0x18],0xf
   140001bd1:	jmp    0x140001bdd
   140001bd3:	lea    rcx,[rbx+0x30]
   140001bd7:	call   QWORD PTR [rip+0xd453]        # 0x14000f030
   140001bdd:	add    rsp,0x20
   140001be1:	pop    rbx
   140001be2:	ret    
   140001be3:	int3   
   140001be4:	rex push rbx
   140001be6:	sub    rsp,0x20
   140001bea:	cmp    ecx,0x14
   140001bed:	mov    rbx,rdx
   140001bf0:	jge    0x140001c01
   140001bf2:	add    ecx,0x10
   140001bf5:	call   0x140004708
   140001bfa:	bts    DWORD PTR [rbx+0x18],0xf
   140001bff:	jmp    0x140001c0b
   140001c01:	lea    rcx,[rdx+0x30]
   140001c05:	call   QWORD PTR [rip+0xd425]        # 0x14000f030
   140001c0b:	add    rsp,0x20
   140001c0f:	pop    rbx
   140001c10:	ret    
   140001c11:	int3   
   140001c12:	int3   
   140001c13:	int3   
   140001c14:	sub    rsp,0x28
   140001c18:	lea    rdx,[rip+0x103e1]        # 0x140012000
   140001c1f:	cmp    rcx,rdx
   140001c22:	jb     0x140001c5b
   140001c24:	lea    rax,[rip+0x10765]        # 0x140012390
   140001c2b:	cmp    rcx,rax
   140001c2e:	ja     0x140001c5b
   140001c30:	btr    DWORD PTR [rcx+0x18],0xf
   140001c35:	sub    rcx,rdx
   140001c38:	movabs rax,0x2aaaaaaaaaaaaaab
   140001c42:	imul   rcx
   140001c45:	sar    rdx,0x3
   140001c49:	mov    rcx,rdx
   140001c4c:	shr    rcx,0x3f
   140001c50:	lea    ecx,[rcx+rdx*1+0x10]
   140001c54:	call   0x140004608
   140001c59:	jmp    0x140001c65
   140001c5b:	add    rcx,0x30
   140001c5f:	call   QWORD PTR [rip+0xd3d3]        # 0x14000f038
   140001c65:	add    rsp,0x28
   140001c69:	ret    
   140001c6a:	int3   
   140001c6b:	int3   
   140001c6c:	sub    rsp,0x28
   140001c70:	cmp    ecx,0x14
   140001c73:	jge    0x140001c84
   140001c75:	btr    DWORD PTR [rdx+0x18],0xf
   140001c7a:	add    ecx,0x10
   140001c7d:	call   0x140004608
   140001c82:	jmp    0x140001c8e
   140001c84:	lea    rcx,[rdx+0x30]
   140001c88:	call   QWORD PTR [rip+0xd3aa]        # 0x14000f038
   140001c8e:	add    rsp,0x28
   140001c92:	ret    
   140001c93:	int3   
   140001c94:	rex push rbx
   140001c96:	sub    rsp,0x20
   140001c9a:	and    DWORD PTR [rsp+0x40],0x0
   140001c9f:	lea    r8,[rsp+0x40]
   140001ca4:	call   0x14000474c
   140001ca9:	mov    rbx,rax
   140001cac:	test   rax,rax
   140001caf:	jne    0x140001ccc
   140001cb1:	cmp    DWORD PTR [rsp+0x40],eax
   140001cb5:	je     0x140001ccc
   140001cb7:	call   0x140003fbc
   140001cbc:	test   rax,rax
   140001cbf:	je     0x140001ccc
   140001cc1:	call   0x140003fbc
   140001cc6:	mov    ecx,DWORD PTR [rsp+0x40]
   140001cca:	mov    DWORD PTR [rax],ecx
   140001ccc:	mov    rax,rbx
   140001ccf:	add    rsp,0x20
   140001cd3:	pop    rbx
   140001cd4:	ret    
   140001cd5:	int3   
   140001cd6:	int3   
   140001cd7:	int3   
   140001cd8:	int3   
   140001cd9:	int3   
   140001cda:	int3   
   140001cdb:	int3   
   140001cdc:	int3   
   140001cdd:	int3   
   140001cde:	int3   
   140001cdf:	int3   
   140001ce0:	int3   
   140001ce1:	int3   
   140001ce2:	int3   
   140001ce3:	int3   
   140001ce4:	int3   
   140001ce5:	int3   
   140001ce6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001cf0:	mov    rax,rcx
   140001cf3:	cmp    r8,0x8
   140001cf7:	jb     0x140001d4c
   140001cf9:	movzx  edx,dl
   140001cfc:	movabs r9,0x101010101010101
   140001d06:	imul   rdx,r9
   140001d0a:	cmp    r8,0x40
   140001d0e:	jb     0x140001d2e
   140001d10:	neg    rcx
   140001d13:	and    ecx,0x7
   140001d16:	je     0x140001d1e
   140001d18:	sub    r8,rcx
   140001d1b:	mov    QWORD PTR [rax],rdx
   140001d1e:	add    rcx,rax
   140001d21:	mov    r9,r8
   140001d24:	and    r8,0x3f
   140001d28:	shr    r9,0x6
   140001d2c:	jne    0x140001d67
   140001d2e:	mov    r9,r8
   140001d31:	and    r8,0x7
   140001d35:	shr    r9,0x3
   140001d39:	je     0x140001d4c
   140001d3b:	data16 data16 xchg ax,ax
   140001d3f:	nop
   140001d40:	mov    QWORD PTR [rcx],rdx
   140001d43:	add    rcx,0x8
   140001d47:	dec    r9
   140001d4a:	jne    0x140001d40
   140001d4c:	test   r8,r8
   140001d4f:	je     0x140001d5b
   140001d51:	mov    BYTE PTR [rcx],dl
   140001d53:	inc    rcx
   140001d56:	dec    r8
   140001d59:	jne    0x140001d51
   140001d5b:	ret    
   140001d5c:	nop    DWORD PTR [rax+0x0]
   140001d60:	data16 data16 xchg ax,ax
   140001d64:	data16 xchg ax,ax
   140001d67:	cmp    r9,0x1c00
   140001d6e:	jae    0x140001da0
   140001d70:	mov    QWORD PTR [rcx],rdx
   140001d73:	mov    QWORD PTR [rcx+0x8],rdx
   140001d77:	mov    QWORD PTR [rcx+0x10],rdx
   140001d7b:	add    rcx,0x40
   140001d7f:	mov    QWORD PTR [rcx-0x28],rdx
   140001d83:	mov    QWORD PTR [rcx-0x20],rdx
   140001d87:	dec    r9
   140001d8a:	mov    QWORD PTR [rcx-0x18],rdx
   140001d8e:	mov    QWORD PTR [rcx-0x10],rdx
   140001d92:	mov    QWORD PTR [rcx-0x8],rdx
   140001d96:	jne    0x140001d70
   140001d98:	jmp    0x140001d2e
   140001d9a:	nop    WORD PTR [rax+rax*1+0x0]
   140001da0:	movnti QWORD PTR [rcx],rdx
   140001da4:	movnti QWORD PTR [rcx+0x8],rdx
   140001da9:	movnti QWORD PTR [rcx+0x10],rdx
   140001dae:	add    rcx,0x40
   140001db2:	movnti QWORD PTR [rcx-0x28],rdx
   140001db7:	movnti QWORD PTR [rcx-0x20],rdx
   140001dbc:	dec    r9
   140001dbf:	movnti QWORD PTR [rcx-0x18],rdx
   140001dc4:	movnti QWORD PTR [rcx-0x10],rdx
   140001dc9:	movnti QWORD PTR [rcx-0x8],rdx
   140001dce:	jne    0x140001da0
   140001dd0:	lock or BYTE PTR [rsp],0x0
   140001dd5:	jmp    0x140001d2e
   140001dda:	int3   
   140001ddb:	int3   
   140001ddc:	int3   
   140001ddd:	int3   
   140001dde:	int3   
   140001ddf:	int3   
   140001de0:	int3   
   140001de1:	int3   
   140001de2:	int3   
   140001de3:	int3   
   140001de4:	int3   
   140001de5:	int3   
   140001de6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001df0:	mov    r11,rcx
   140001df3:	or     r8,r8
   140001df6:	je     0x140001e1c
   140001df8:	sub    rcx,rdx
   140001dfb:	test   dl,0x7
   140001dfe:	je     0x140001e28
   140001e00:	mov    al,BYTE PTR [rdx]
   140001e02:	test   al,al
   140001e04:	mov    BYTE PTR [rcx+rdx*1],al
   140001e07:	je     0x140001ef0
   140001e0d:	inc    rdx
   140001e10:	dec    r8
   140001e13:	je     0x140001e1c
   140001e15:	test   dl,0x7
   140001e18:	jne    0x140001e00
   140001e1a:	jmp    0x140001e28
   140001e1c:	mov    rax,r11
   140001e1f:	ret    
   140001e20:	mov    QWORD PTR [rcx+rdx*1],rax
   140001e24:	add    rdx,0x8
   140001e28:	mov    rax,QWORD PTR [rdx]
   140001e2b:	sub    r8,0x8
   140001e2f:	jb     0x140001e57
   140001e31:	movabs r9,0x7efefefefefefeff
   140001e3b:	add    r9,rax
   140001e3e:	mov    r10,rax
   140001e41:	xor    r10,0xffffffffffffffff
   140001e45:	xor    r10,r9
   140001e48:	movabs r9,0x8101010101010100
   140001e52:	test   r9,r10
   140001e55:	je     0x140001e20
   140001e57:	add    r8,0x8
   140001e5b:	je     0x140001eec
   140001e61:	test   al,al
   140001e63:	mov    BYTE PTR [rcx+rdx*1],al
   140001e66:	je     0x140001ef0
   140001e6c:	inc    rdx
   140001e6f:	dec    r8
   140001e72:	je     0x140001eec
   140001e74:	test   ah,ah
   140001e76:	mov    BYTE PTR [rcx+rdx*1],ah
   140001e79:	je     0x140001ef0
   140001e7b:	inc    rdx
   140001e7e:	dec    r8
   140001e81:	je     0x140001eec
   140001e83:	shr    rax,0x10
   140001e87:	test   al,al
   140001e89:	mov    BYTE PTR [rcx+rdx*1],al
   140001e8c:	je     0x140001ef0
   140001e8e:	inc    rdx
   140001e91:	dec    r8
   140001e94:	je     0x140001eec
   140001e96:	test   ah,ah
   140001e98:	mov    BYTE PTR [rcx+rdx*1],ah
   140001e9b:	je     0x140001ef0
   140001e9d:	inc    rdx
   140001ea0:	dec    r8
   140001ea3:	je     0x140001eec
   140001ea5:	shr    rax,0x10
   140001ea9:	test   al,al
   140001eab:	mov    BYTE PTR [rcx+rdx*1],al
   140001eae:	je     0x140001ef0
   140001eb0:	inc    rdx
   140001eb3:	dec    r8
   140001eb6:	je     0x140001eec
   140001eb8:	test   ah,ah
   140001eba:	mov    BYTE PTR [rcx+rdx*1],ah
   140001ebd:	je     0x140001ef0
   140001ebf:	inc    rdx
   140001ec2:	dec    r8
   140001ec5:	je     0x140001eec
   140001ec7:	shr    eax,0x10
   140001eca:	test   al,al
   140001ecc:	mov    BYTE PTR [rcx+rdx*1],al
   140001ecf:	je     0x140001ef0
   140001ed1:	inc    rdx
   140001ed4:	dec    r8
   140001ed7:	je     0x140001eec
   140001ed9:	test   ah,ah
   140001edb:	mov    BYTE PTR [rcx+rdx*1],ah
   140001ede:	je     0x140001ef0
   140001ee0:	inc    rdx
   140001ee3:	dec    r8
   140001ee6:	jne    0x140001e28
   140001eec:	mov    rax,r11
   140001eef:	ret    
   140001ef0:	add    rcx,rdx
   140001ef3:	xor    rdx,rdx
   140001ef6:	cmp    r8,0x10
   140001efa:	jb     0x140001f41
   140001efc:	test   cl,0x7
   140001eff:	je     0x140001f0b
   140001f01:	inc    rcx
   140001f04:	mov    BYTE PTR [rcx],dl
   140001f06:	dec    r8
   140001f09:	jmp    0x140001efc
   140001f0b:	sub    r8,0x20
   140001f0f:	jb     0x140001f2a
   140001f11:	mov    QWORD PTR [rcx],rdx
   140001f14:	mov    QWORD PTR [rcx+0x8],rdx
   140001f18:	mov    QWORD PTR [rcx+0x10],rdx
   140001f1c:	mov    QWORD PTR [rcx+0x18],rdx
   140001f20:	add    rcx,0x20
   140001f24:	sub    r8,0x20
   140001f28:	jae    0x140001f11
   140001f2a:	add    r8,0x20
   140001f2e:	sub    r8,0x8
   140001f32:	jb     0x140001f3d
   140001f34:	mov    QWORD PTR [rcx],rdx
   140001f37:	add    rcx,0x8
   140001f3b:	jmp    0x140001f2e
   140001f3d:	add    r8,0x8
   140001f41:	sub    r8,0x1
   140001f45:	jb     0x140001f4e
   140001f47:	mov    BYTE PTR [rcx],dl
   140001f49:	inc    rcx
   140001f4c:	jmp    0x140001f41
   140001f4e:	mov    rax,r11
   140001f51:	ret    
   140001f52:	int3   
   140001f53:	int3   
   140001f54:	rex push rbx
   140001f56:	sub    rsp,0x20
   140001f5a:	mov    r11d,DWORD PTR [r8]
   140001f5d:	mov    rbx,rdx
   140001f60:	mov    r9,rcx
   140001f63:	and    r11d,0xfffffff8
   140001f67:	test   BYTE PTR [r8],0x4
   140001f6b:	mov    r10,rcx
   140001f6e:	je     0x140001f83
   140001f70:	mov    eax,DWORD PTR [r8+0x8]
   140001f74:	movsxd r10,DWORD PTR [r8+0x4]
   140001f78:	neg    eax
   140001f7a:	add    r10,rcx
   140001f7d:	movsxd rcx,eax
   140001f80:	and    r10,rcx
   140001f83:	movsxd rax,r11d
   140001f86:	mov    rdx,QWORD PTR [rax+r10*1]
   140001f8a:	mov    rax,QWORD PTR [rbx+0x10]
   140001f8e:	mov    ecx,DWORD PTR [rax+0x8]
   140001f91:	add    rcx,QWORD PTR [rbx+0x8]
   140001f95:	test   BYTE PTR [rcx+0x3],0xf
   140001f99:	je     0x140001fa7
   140001f9b:	movzx  eax,BYTE PTR [rcx+0x3]
   140001f9f:	and    eax,0xfffffff0
   140001fa2:	cdqe   
   140001fa4:	add    r9,rax
   140001fa7:	xor    r9,rdx
   140001faa:	mov    rcx,r9
   140001fad:	add    rsp,0x20
   140001fb1:	pop    rbx
   140001fb2:	jmp    0x140002350
   140001fb7:	int3   
   140001fb8:	sub    rsp,0x28
   140001fbc:	mov    r8,QWORD PTR [r9+0x38]
   140001fc0:	mov    rcx,rdx
   140001fc3:	mov    rdx,r9
   140001fc6:	call   0x140001f54
   140001fcb:	mov    eax,0x1
   140001fd0:	add    rsp,0x28
   140001fd4:	ret    
   140001fd5:	int3   
   140001fd6:	int3   
   140001fd7:	int3   
   140001fd8:	sub    rsp,0x38
   140001fdc:	mov    rax,QWORD PTR [rsp+0x60]
   140001fe1:	mov    QWORD PTR [rsp+0x28],rax
   140001fe6:	mov    QWORD PTR [rsp+0x20],r9
   140001feb:	mov    r9,r8
   140001fee:	mov    r8,rdx
   140001ff1:	or     rdx,0xffffffffffffffff
   140001ff5:	call   0x1400047fc
   140001ffa:	add    rsp,0x38
   140001ffe:	ret    
   140001fff:	int3   
   140002000:	mov    QWORD PTR [rsp+0x10],rbx
   140002005:	mov    QWORD PTR [rsp+0x18],r8
   14000200a:	push   rbp
   14000200b:	push   rsi
   14000200c:	push   rdi
   14000200d:	push   r12
   14000200f:	push   r13
   140002011:	push   r14
   140002013:	push   r15
   140002015:	sub    rsp,0x30
   140002019:	mov    r12,QWORD PTR [rsp+0xa8]
   140002021:	mov    r13,QWORD PTR [rsp+0x98]
   140002029:	mov    rdi,rcx
   14000202c:	mov    r14,rdx
   14000202f:	xor    edx,edx
   140002031:	mov    r15,r9
   140002034:	mov    ecx,edx
   140002036:	mov    DWORD PTR [rsp+0x70],edx
   14000203a:	cmp    rdi,rdx
   14000203d:	je     0x140002049
   14000203f:	cmp    r14,rdx
   140002042:	jne    0x140002053
   140002044:	cmp    r8,rdx
   140002047:	je     0x140002058
   140002049:	mov    ecx,0x1
   14000204e:	jmp    0x14000220f
   140002053:	cmp    r8,rdx
   140002056:	je     0x140002049
   140002058:	cmp    r9,rdx
   14000205b:	jne    0x140002069
   14000205d:	cmp    QWORD PTR [rsp+0x90],rdx
   140002065:	jne    0x140002049
   140002067:	jmp    0x140002073
   140002069:	cmp    QWORD PTR [rsp+0x90],rdx
   140002071:	je     0x140002049
   140002073:	cmp    r13,rdx
   140002076:	jne    0x140002084
   140002078:	cmp    QWORD PTR [rsp+0xa0],rdx
   140002080:	jne    0x140002049
   140002082:	jmp    0x14000208e
   140002084:	cmp    QWORD PTR [rsp+0xa0],rdx
   14000208c:	je     0x140002049
   14000208e:	cmp    r12,rdx
   140002091:	jne    0x14000209f
   140002093:	cmp    QWORD PTR [rsp+0xb0],rdx
   14000209b:	jne    0x140002049
   14000209d:	jmp    0x1400020a9
   14000209f:	cmp    QWORD PTR [rsp+0xb0],rdx
   1400020a7:	je     0x140002049
   1400020a9:	mov    eax,0x1
   1400020ae:	mov    rbx,rdi
   1400020b1:	cmp    BYTE PTR [rbx],dl
   1400020b3:	je     0x1400020c0
   1400020b5:	dec    rax
   1400020b8:	inc    rbx
   1400020bb:	cmp    rax,rdx
   1400020be:	ja     0x1400020b1
   1400020c0:	cmp    BYTE PTR [rbx],0x3a
   1400020c3:	jne    0x1400020f1
   1400020c5:	cmp    r14,rdx
   1400020c8:	je     0x1400020eb
   1400020ca:	cmp    r8,0x3
   1400020ce:	jb     0x14000220f
   1400020d4:	mov    r9d,0x2
   1400020da:	mov    r8,rdi
   1400020dd:	or     rdx,0xffffffffffffffff
   1400020e1:	mov    rcx,r14
   1400020e4:	call   0x1400049fc
   1400020e9:	xor    edx,edx
   1400020eb:	lea    rdi,[rbx+0x1]
   1400020ef:	jmp    0x1400020f9
   1400020f1:	cmp    r14,rdx
   1400020f4:	je     0x1400020f9
   1400020f6:	mov    BYTE PTR [r14],dl
   1400020f9:	mov    rbp,rdx
   1400020fc:	mov    rsi,rdx
   1400020ff:	mov    rbx,rdi
   140002102:	cmp    BYTE PTR [rdi],dl
   140002104:	je     0x14000216b
   140002106:	movsx  ecx,BYTE PTR [rbx]
   140002109:	call   0x1400049e8
   14000210e:	xor    edx,edx
   140002110:	cmp    eax,edx
   140002112:	je     0x140002119
   140002114:	inc    rbx
   140002117:	jmp    0x140002130
   140002119:	mov    al,BYTE PTR [rbx]
   14000211b:	cmp    al,0x2f
   14000211d:	je     0x14000212c
   14000211f:	cmp    al,0x5c
   140002121:	je     0x14000212c
   140002123:	cmp    al,0x2e
   140002125:	jne    0x140002130
   140002127:	mov    rsi,rbx
   14000212a:	jmp    0x140002130
   14000212c:	lea    rbp,[rbx+0x1]
   140002130:	inc    rbx
   140002133:	cmp    BYTE PTR [rbx],dl
   140002135:	jne    0x140002106
   140002137:	cmp    rbp,rdx
   14000213a:	je     0x14000216b
   14000213c:	cmp    r15,rdx
   14000213f:	je     0x140002166
   140002141:	mov    r9,rbp
   140002144:	sub    r9,rdi
   140002147:	cmp    QWORD PTR [rsp+0x90],r9
   14000214f:	jbe    0x1400021ff
   140002155:	mov    r8,rdi
   140002158:	or     rdx,0xffffffffffffffff
   14000215c:	mov    rcx,r15
   14000215f:	call   0x1400049fc
   140002164:	xor    edx,edx
   140002166:	mov    rdi,rbp
   140002169:	jmp    0x140002173
   14000216b:	cmp    r15,rdx
   14000216e:	je     0x140002173
   140002170:	mov    BYTE PTR [r15],dl
   140002173:	cmp    rsi,rdx
   140002176:	je     0x1400021c9
   140002178:	cmp    rsi,rdi
   14000217b:	jb     0x1400021c9
   14000217d:	cmp    r13,rdx
   140002180:	je     0x1400021a3
   140002182:	mov    r9,rsi
   140002185:	sub    r9,rdi
   140002188:	cmp    QWORD PTR [rsp+0xa0],r9
   140002190:	jbe    0x140002203
   140002192:	mov    r8,rdi
   140002195:	or     rdx,0xffffffffffffffff
   140002199:	mov    rcx,r13
   14000219c:	call   0x1400049fc
   1400021a1:	xor    edx,edx
   1400021a3:	cmp    r12,rdx
   1400021a6:	je     0x1400021f8
   1400021a8:	sub    rbx,rsi
   1400021ab:	cmp    QWORD PTR [rsp+0xb0],rbx
   1400021b3:	jbe    0x140002203
   1400021b5:	mov    r9,rbx
   1400021b8:	mov    r8,rsi
   1400021bb:	or     rdx,0xffffffffffffffff
   1400021bf:	mov    rcx,r12
   1400021c2:	call   0x1400049fc
   1400021c7:	jmp    0x1400021f8
   1400021c9:	cmp    r13,rdx
   1400021cc:	je     0x1400021ef
   1400021ce:	sub    rbx,rdi
   1400021d1:	cmp    QWORD PTR [rsp+0xa0],rbx
   1400021d9:	jbe    0x140002203
   1400021db:	mov    r9,rbx
   1400021de:	mov    r8,rdi
   1400021e1:	or     rdx,0xffffffffffffffff
   1400021e5:	mov    rcx,r13
   1400021e8:	call   0x1400049fc
   1400021ed:	xor    edx,edx
   1400021ef:	cmp    r12,rdx
   1400021f2:	je     0x1400021f8
   1400021f4:	mov    BYTE PTR [r12],dl
   1400021f8:	xor    eax,eax
   1400021fa:	jmp    0x140002290
   1400021ff:	mov    ecx,edx
   140002201:	jmp    0x140002207
   140002203:	mov    ecx,DWORD PTR [rsp+0x70]
   140002207:	mov    r8,QWORD PTR [rsp+0x80]
   14000220f:	cmp    r14,rdx
   140002212:	je     0x14000221c
   140002214:	cmp    r8,rdx
   140002217:	jbe    0x14000221c
   140002219:	mov    BYTE PTR [r14],dl
   14000221c:	cmp    r15,rdx
   14000221f:	je     0x14000222e
   140002221:	cmp    QWORD PTR [rsp+0x90],rdx
   140002229:	jbe    0x14000222e
   14000222b:	mov    BYTE PTR [r15],dl
   14000222e:	cmp    r13,rdx
   140002231:	je     0x140002241
   140002233:	cmp    QWORD PTR [rsp+0xa0],rdx
   14000223b:	jbe    0x140002241
   14000223d:	mov    BYTE PTR [r13+0x0],dl
   140002241:	cmp    r12,rdx
   140002244:	je     0x140002254
   140002246:	cmp    QWORD PTR [rsp+0xb0],rdx
   14000224e:	jbe    0x140002254
   140002250:	mov    BYTE PTR [r12],dl
   140002254:	cmp    rdi,rdx
   140002257:	jne    0x14000227e
   140002259:	call   0x140003fbc
   14000225e:	and    QWORD PTR [rsp+0x20],0x0
   140002264:	mov    ebx,0x16
   140002269:	xor    r9d,r9d
   14000226c:	xor    r8d,r8d
   14000226f:	xor    edx,edx
   140002271:	xor    ecx,ecx
   140002273:	mov    DWORD PTR [rax],ebx
   140002275:	call   0x140003eec
   14000227a:	mov    eax,ebx
   14000227c:	jmp    0x140002290
   14000227e:	cmp    ecx,edx
   140002280:	jne    0x140002259
   140002282:	call   0x140003fbc
   140002287:	mov    ecx,0x22
   14000228c:	mov    DWORD PTR [rax],ecx
   14000228e:	mov    eax,ecx
   140002290:	mov    rbx,QWORD PTR [rsp+0x78]
   140002295:	add    rsp,0x30
   140002299:	pop    r15
   14000229b:	pop    r14
   14000229d:	pop    r13
   14000229f:	pop    r12
   1400022a1:	pop    rdi
   1400022a2:	pop    rsi
   1400022a3:	pop    rbp
   1400022a4:	ret    
   1400022a5:	int3   
   1400022a6:	int3   
   1400022a7:	int3   
   1400022a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400022ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400022b2:	push   rdi
   1400022b3:	sub    rsp,0x50
   1400022b7:	mov    rbx,r8
   1400022ba:	mov    rdi,rdx
   1400022bd:	mov    r8d,0x100
   1400022c3:	mov    rsi,rcx
   1400022c6:	mov    rcx,QWORD PTR [rsp+0x80]
   1400022ce:	mov    rax,rcx
   1400022d1:	neg    rax
   1400022d4:	mov    rax,r9
   1400022d7:	sbb    r11,r11
   1400022da:	and    r11,r8
   1400022dd:	neg    rax
   1400022e0:	mov    rax,rbx
   1400022e3:	sbb    r10,r10
   1400022e6:	mov    QWORD PTR [rsp+0x40],r11
   1400022eb:	mov    QWORD PTR [rsp+0x38],rcx
   1400022f0:	and    r10,r8
   1400022f3:	neg    rax
   1400022f6:	mov    rax,rdi
   1400022f9:	sbb    rdx,rdx
   1400022fc:	mov    QWORD PTR [rsp+0x30],r10
   140002301:	mov    QWORD PTR [rsp+0x28],r9
   140002306:	and    rdx,r8
   140002309:	neg    rax
   14000230c:	mov    r9,rbx
   14000230f:	sbb    r8,r8
   140002312:	mov    QWORD PTR [rsp+0x20],rdx
   140002317:	mov    rdx,rdi
   14000231a:	and    r8d,0x3
   14000231e:	mov    rcx,rsi
   140002321:	call   0x140002000
   140002326:	mov    rbx,QWORD PTR [rsp+0x60]
   14000232b:	mov    rsi,QWORD PTR [rsp+0x68]
   140002330:	add    rsp,0x50
   140002334:	pop    rdi
   140002335:	ret    
   140002336:	int3   
   140002337:	int3   
   140002338:	int3   
   140002339:	int3   
   14000233a:	int3   
   14000233b:	int3   
   14000233c:	int3   
   14000233d:	int3   
   14000233e:	int3   
   14000233f:	int3   
   140002340:	int3   
   140002341:	int3   
   140002342:	int3   
   140002343:	int3   
   140002344:	int3   
   140002345:	int3   
   140002346:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002350:	cmp    rcx,QWORD PTR [rip+0x10069]        # 0x1400123c0
   140002357:	jne    0x14000236a
   140002359:	rol    rcx,0x10
   14000235d:	test   cx,0xffff
   140002362:	jne    0x140002366
   140002364:	repz ret 
   140002366:	ror    rcx,0x10
   14000236a:	jmp    0x140004a10
   14000236f:	int3   
   140002370:	rex push rbx
   140002372:	sub    rsp,0x20
   140002376:	mov    rbx,rcx
   140002379:	mov    BYTE PTR [rcx+0x18],0x0
   14000237d:	test   rdx,rdx
   140002380:	jne    0x140002408
   140002386:	call   0x1400058c0
   14000238b:	mov    QWORD PTR [rbx+0x10],rax
   14000238f:	mov    rdx,QWORD PTR [rax+0xc0]
   140002396:	mov    QWORD PTR [rbx],rdx
   140002399:	mov    rcx,QWORD PTR [rax+0xb8]
   1400023a0:	mov    QWORD PTR [rbx+0x8],rcx
   1400023a4:	mov    rcx,QWORD PTR [rip+0x10b05]        # 0x140012eb0
   1400023ab:	cmp    rdx,rcx
   1400023ae:	je     0x1400023c6
   1400023b0:	mov    eax,DWORD PTR [rax+0xc8]
   1400023b6:	test   DWORD PTR [rip+0x1097c],eax        # 0x140012d38
   1400023bc:	jne    0x1400023c6
   1400023be:	call   0x1400056cc
   1400023c3:	mov    QWORD PTR [rbx],rax
   1400023c6:	mov    rax,QWORD PTR [rip+0x10863]        # 0x140012c30
   1400023cd:	cmp    QWORD PTR [rbx+0x8],rax
   1400023d1:	je     0x1400023ee
   1400023d3:	mov    rax,QWORD PTR [rbx+0x10]
   1400023d7:	mov    ecx,DWORD PTR [rax+0xc8]
   1400023dd:	test   DWORD PTR [rip+0x10955],ecx        # 0x140012d38
   1400023e3:	jne    0x1400023ee
   1400023e5:	call   0x140004dd4
   1400023ea:	mov    QWORD PTR [rbx+0x8],rax
   1400023ee:	mov    rax,QWORD PTR [rbx+0x10]
   1400023f2:	test   BYTE PTR [rax+0xc8],0x2
   1400023f9:	jne    0x140002410
   1400023fb:	or     DWORD PTR [rax+0xc8],0x2
   140002402:	mov    BYTE PTR [rbx+0x18],0x1
   140002406:	jmp    0x140002410
   140002408:	movdqu xmm0,XMMWORD PTR [rdx]
   14000240c:	movdqu XMMWORD PTR [rcx],xmm0
   140002410:	mov    rax,rbx
   140002413:	add    rsp,0x20
   140002417:	pop    rbx
   140002418:	ret    
   140002419:	int3   
   14000241a:	int3   
   14000241b:	int3   
   14000241c:	rex push rbx
   14000241e:	sub    rsp,0x40
   140002422:	cmp    DWORD PTR [rip+0x11977],0x0        # 0x140013da0
   140002429:	movsxd rbx,ecx
   14000242c:	jne    0x14000243e
   14000242e:	mov    rax,QWORD PTR [rip+0x10a5b]        # 0x140012e90
   140002435:	movzx  eax,WORD PTR [rax+rbx*2]
   140002439:	and    eax,0x8
   14000243c:	jmp    0x140002494
   14000243e:	lea    rcx,[rsp+0x20]
   140002443:	xor    edx,edx
   140002445:	call   0x140002370
   14000244a:	mov    rax,QWORD PTR [rsp+0x20]
   14000244f:	cmp    DWORD PTR [rax+0x10c],0x1
   140002456:	jle    0x14000246e
   140002458:	lea    r8,[rsp+0x20]
   14000245d:	mov    edx,0x8
   140002462:	mov    ecx,ebx
   140002464:	call   0x140005aa0
   140002469:	mov    r11d,eax
   14000246c:	jmp    0x14000247e
   14000246e:	mov    rax,QWORD PTR [rax+0x140]
   140002475:	movzx  r11d,WORD PTR [rax+rbx*2]
   14000247a:	and    r11d,0x8
   14000247e:	cmp    BYTE PTR [rsp+0x38],0x0
   140002483:	je     0x140002491
   140002485:	mov    rax,QWORD PTR [rsp+0x30]
   14000248a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140002491:	mov    eax,r11d
   140002494:	add    rsp,0x40
   140002498:	pop    rbx
   140002499:	ret    
   14000249a:	int3   
   14000249b:	int3   
   14000249c:	mov    QWORD PTR [rsp+0x10],rdx
   1400024a1:	mov    QWORD PTR [rsp+0x18],r8
   1400024a6:	mov    QWORD PTR [rsp+0x20],r9
   1400024ab:	push   rbx
   1400024ac:	sub    rsp,0x60
   1400024b0:	test   rdx,rdx
   1400024b3:	jne    0x1400024da
   1400024b5:	call   0x140003fbc
   1400024ba:	and    QWORD PTR [rsp+0x20],0x0
   1400024c0:	xor    r9d,r9d
   1400024c3:	xor    r8d,r8d
   1400024c6:	xor    edx,edx
   1400024c8:	xor    ecx,ecx
   1400024ca:	mov    DWORD PTR [rax],0x16
   1400024d0:	call   0x140003eec
   1400024d5:	or     eax,0xffffffff
   1400024d8:	jmp    0x14000252f
   1400024da:	test   rcx,rcx
   1400024dd:	je     0x1400024b5
   1400024df:	mov    QWORD PTR [rsp+0x40],rcx
   1400024e4:	mov    QWORD PTR [rsp+0x30],rcx
   1400024e9:	lea    r9,[rsp+0x80]
   1400024f1:	lea    rcx,[rsp+0x30]
   1400024f6:	xor    r8d,r8d
   1400024f9:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   140002501:	mov    DWORD PTR [rsp+0x48],0x42
   140002509:	call   0x140002fac
   14000250e:	sub    DWORD PTR [rsp+0x38],0x1
   140002513:	mov    ebx,eax
   140002515:	js     0x140002521
   140002517:	mov    rcx,QWORD PTR [rsp+0x30]
   14000251c:	mov    BYTE PTR [rcx],0x0
   14000251f:	jmp    0x14000252d
   140002521:	lea    rdx,[rsp+0x30]
   140002526:	xor    ecx,ecx
   140002528:	call   0x140005bac
   14000252d:	mov    eax,ebx
   14000252f:	add    rsp,0x60
   140002533:	pop    rbx
   140002534:	ret    
   140002535:	int3   
   140002536:	int3   
   140002537:	int3   
   140002538:	int3   
   140002539:	int3   
   14000253a:	int3   
   14000253b:	int3   
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	int3   
   140002541:	int3   
   140002542:	int3   
   140002543:	int3   
   140002544:	int3   
   140002545:	int3   
   140002546:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002550:	test   r8,r8
   140002553:	je     0x1400025ca
   140002555:	sub    rdx,rcx
   140002558:	mov    r9,rdx
   14000255b:	movabs r11,0x8101010101010100
   140002565:	test   cl,0x7
   140002568:	je     0x140002589
   14000256a:	mov    al,BYTE PTR [rcx]
   14000256c:	mov    dl,BYTE PTR [rcx+r9*1]
   140002570:	inc    rcx
   140002573:	cmp    al,dl
   140002575:	jne    0x1400025ce
   140002577:	dec    r8
   14000257a:	je     0x1400025ca
   14000257c:	test   al,al
   14000257e:	je     0x1400025ca
   140002580:	test   rcx,0x7
   140002587:	jne    0x14000256a
   140002589:	lea    rdx,[rcx+r9*1]
   14000258d:	and    dx,0xfff
   140002592:	cmp    dx,0xff8
   140002597:	ja     0x14000256a
   140002599:	mov    rax,QWORD PTR [rcx]
   14000259c:	mov    rdx,QWORD PTR [rcx+r9*1]
   1400025a0:	cmp    rax,rdx
   1400025a3:	jne    0x14000256a
   1400025a5:	add    rcx,0x8
   1400025a9:	sub    r8,0x8
   1400025ad:	movabs r10,0x7efefefefefefeff
   1400025b7:	jbe    0x1400025ca
   1400025b9:	xor    rax,0xffffffffffffffff
   1400025bd:	add    r10,rdx
   1400025c0:	xor    rax,r10
   1400025c3:	test   r11,rax
   1400025c6:	je     0x140002589
   1400025c8:	jmp    0x1400025d6
   1400025ca:	xor    rax,rax
   1400025cd:	ret    
   1400025ce:	sbb    rax,rax
   1400025d1:	sbb    rax,0xffffffffffffffff
   1400025d5:	ret    
   1400025d6:	test   dl,dl
   1400025d8:	je     0x140002601
   1400025da:	test   dh,dh
   1400025dc:	je     0x140002601
   1400025de:	shr    rdx,0x10
   1400025e2:	test   dl,dl
   1400025e4:	je     0x140002601
   1400025e6:	test   dh,dh
   1400025e8:	je     0x140002601
   1400025ea:	shr    rdx,0x10
   1400025ee:	test   dl,dl
   1400025f0:	je     0x140002601
   1400025f2:	test   dh,dh
   1400025f4:	je     0x140002601
   1400025f6:	shr    edx,0x10
   1400025f9:	test   dl,dl
   1400025fb:	je     0x140002601
   1400025fd:	test   dh,dh
   1400025ff:	jne    0x140002589
   140002601:	xor    rax,rax
   140002604:	ret    
   140002605:	int3   
   140002606:	int3   
   140002607:	int3   
   140002608:	rex push rbx
   14000260a:	sub    rsp,0x20
   14000260e:	mov    ebx,ecx
   140002610:	call   0x140005f64
   140002615:	mov    ecx,ebx
   140002617:	call   0x140005d3c
   14000261c:	mov    rcx,QWORD PTR [rip+0xfdad]        # 0x1400123d0
   140002623:	call   0x140005758
   140002628:	mov    ecx,0xff
   14000262d:	add    rsp,0x20
   140002631:	pop    rbx
   140002632:	rex.W jmp rax
   140002635:	int3   
   140002636:	int3   
   140002637:	int3   
   140002638:	rex push rbx
   14000263a:	sub    rsp,0x20
   14000263e:	mov    ebx,ecx
   140002640:	lea    rcx,[rip+0xcd91]        # 0x14000f3d8
   140002647:	call   QWORD PTR [rip+0xc9f3]        # 0x14000f040
   14000264d:	test   rax,rax
   140002650:	je     0x14000266b
   140002652:	lea    rdx,[rip+0xcd6f]        # 0x14000f3c8
   140002659:	mov    rcx,rax
   14000265c:	call   QWORD PTR [rip+0xc9ee]        # 0x14000f050
   140002662:	test   rax,rax
   140002665:	je     0x14000266b
   140002667:	mov    ecx,ebx
   140002669:	call   rax
   14000266b:	add    rsp,0x20
   14000266f:	pop    rbx
   140002670:	ret    
   140002671:	int3   
   140002672:	int3   
   140002673:	int3   
   140002674:	rex push rbx
   140002676:	sub    rsp,0x20
   14000267a:	mov    ebx,ecx
   14000267c:	call   0x140002638
   140002681:	mov    ecx,ebx
   140002683:	call   QWORD PTR [rip+0xc9cf]        # 0x14000f058
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	mov    ecx,0x8
   140002691:	jmp    0x140004708
   140002696:	int3   
   140002697:	int3   
   140002698:	mov    ecx,0x8
   14000269d:	jmp    0x140004608
   1400026a2:	int3   
   1400026a3:	int3   
   1400026a4:	cmp    rcx,rdx
   1400026a7:	jae    0x1400026d6
   1400026a9:	mov    QWORD PTR [rsp+0x8],rbx
   1400026ae:	push   rdi
   1400026af:	sub    rsp,0x20
   1400026b3:	mov    rdi,rdx
   1400026b6:	mov    rbx,rcx
   1400026b9:	mov    rax,QWORD PTR [rbx]
   1400026bc:	test   rax,rax
   1400026bf:	je     0x1400026c3
   1400026c1:	call   rax
   1400026c3:	add    rbx,0x8
   1400026c7:	cmp    rbx,rdi
   1400026ca:	jb     0x1400026b9
   1400026cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026d1:	add    rsp,0x20
   1400026d5:	pop    rdi
   1400026d6:	ret    
   1400026d7:	int3   
   1400026d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400026dd:	push   rdi
   1400026de:	sub    rsp,0x20
   1400026e2:	xor    eax,eax
   1400026e4:	mov    rdi,rdx
   1400026e7:	mov    rbx,rcx
   1400026ea:	cmp    rcx,rdx
   1400026ed:	jae    0x140002706
   1400026ef:	test   eax,eax
   1400026f1:	jne    0x140002706
   1400026f3:	mov    rcx,QWORD PTR [rbx]
   1400026f6:	test   rcx,rcx
   1400026f9:	je     0x1400026fd
   1400026fb:	call   rcx
   1400026fd:	add    rbx,0x8
   140002701:	cmp    rbx,rdi
   140002704:	jb     0x1400026ef
   140002706:	mov    rbx,QWORD PTR [rsp+0x30]
   14000270b:	add    rsp,0x20
   14000270f:	pop    rdi
   140002710:	ret    
   140002711:	int3   
   140002712:	int3   
   140002713:	int3   
   140002714:	mov    QWORD PTR [rsp+0x8],rbx
   140002719:	push   rdi
   14000271a:	sub    rsp,0x20
   14000271e:	cmp    QWORD PTR [rip+0x11e8a],0x0        # 0x1400145b0
   140002726:	mov    ebx,ecx
   140002728:	je     0x140002742
   14000272a:	lea    rcx,[rip+0x11e7f]        # 0x1400145b0
   140002731:	call   0x140006240
   140002736:	test   eax,eax
   140002738:	je     0x140002742
   14000273a:	mov    ecx,ebx
   14000273c:	call   QWORD PTR [rip+0x11e6e]        # 0x1400145b0
   140002742:	call   0x14000617c
   140002747:	lea    rdx,[rip+0xcb7a]        # 0x14000f2c8
   14000274e:	lea    rcx,[rip+0xcb4b]        # 0x14000f2a0
   140002755:	call   0x1400026d8
   14000275a:	test   eax,eax
   14000275c:	jne    0x1400027b8
   14000275e:	lea    rcx,[rip+0x39df]        # 0x140006144
   140002765:	call   0x1400060f4
   14000276a:	lea    rbx,[rip+0xcb1f]        # 0x14000f290
   140002771:	lea    rdi,[rip+0xcb20]        # 0x14000f298
   140002778:	jmp    0x140002788
   14000277a:	mov    rax,QWORD PTR [rbx]
   14000277d:	test   rax,rax
   140002780:	je     0x140002784
   140002782:	call   rax
   140002784:	add    rbx,0x8
   140002788:	cmp    rbx,rdi
   14000278b:	jb     0x14000277a
   14000278d:	cmp    QWORD PTR [rip+0x11e23],0x0        # 0x1400145b8
   140002795:	je     0x1400027b6
   140002797:	lea    rcx,[rip+0x11e1a]        # 0x1400145b8
   14000279e:	call   0x140006240
   1400027a3:	test   eax,eax
   1400027a5:	je     0x1400027b6
   1400027a7:	xor    r8d,r8d
   1400027aa:	xor    ecx,ecx
   1400027ac:	lea    edx,[r8+0x2]
   1400027b0:	call   QWORD PTR [rip+0x11e02]        # 0x1400145b8
   1400027b6:	xor    eax,eax
   1400027b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027bd:	add    rsp,0x20
   1400027c1:	pop    rdi
   1400027c2:	ret    
   1400027c3:	int3   
   1400027c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400027c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400027ce:	mov    DWORD PTR [rsp+0x18],r8d
   1400027d3:	push   rdi
   1400027d4:	push   r12
   1400027d6:	push   r13
   1400027d8:	push   r14
   1400027da:	push   r15
   1400027dc:	sub    rsp,0x40
   1400027e0:	mov    r12d,r8d
   1400027e3:	mov    ebx,edx
   1400027e5:	mov    r15d,ecx
   1400027e8:	mov    ecx,0x8
   1400027ed:	call   0x140004708
   1400027f2:	nop
   1400027f3:	cmp    DWORD PTR [rip+0x10d9e],0x1        # 0x140013598
   1400027fa:	je     0x1400028fc
   140002800:	mov    DWORD PTR [rip+0x10d8a],0x1        # 0x140013594
   14000280a:	mov    BYTE PTR [rip+0x10d7f],r12b        # 0x140013590
   140002811:	test   ebx,ebx
   140002813:	jne    0x1400028e8
   140002819:	mov    rcx,QWORD PTR [rip+0x11d80]        # 0x1400145a0
   140002820:	call   0x140005758
   140002825:	mov    rsi,rax
   140002828:	mov    QWORD PTR [rsp+0x30],rax
   14000282d:	test   rax,rax
   140002830:	je     0x1400028d5
   140002836:	mov    rcx,QWORD PTR [rip+0x11d5b]        # 0x140014598
   14000283d:	call   0x140005758
   140002842:	mov    rdi,rax
   140002845:	mov    QWORD PTR [rsp+0x20],rax
   14000284a:	mov    r14,rsi
   14000284d:	mov    QWORD PTR [rsp+0x28],rsi
   140002852:	mov    r13,rax
   140002855:	mov    QWORD PTR [rsp+0x38],rax
   14000285a:	sub    rdi,0x8
   14000285e:	mov    QWORD PTR [rsp+0x20],rdi
   140002863:	cmp    rdi,rsi
   140002866:	jb     0x140002874
   140002868:	call   0x14000574c
   14000286d:	cmp    QWORD PTR [rdi],rax
   140002870:	jne    0x140002874
   140002872:	jmp    0x14000285a
   140002874:	cmp    rdi,rsi
   140002877:	jb     0x1400028d5
   140002879:	mov    rcx,QWORD PTR [rdi]
   14000287c:	call   0x140005758
   140002881:	mov    rbx,rax
   140002884:	call   0x14000574c
   140002889:	mov    QWORD PTR [rdi],rax
   14000288c:	call   rbx
   14000288e:	mov    rcx,QWORD PTR [rip+0x11d0b]        # 0x1400145a0
   140002895:	call   0x140005758
   14000289a:	mov    rbx,rax
   14000289d:	mov    rcx,QWORD PTR [rip+0x11cf4]        # 0x140014598
   1400028a4:	call   0x140005758
   1400028a9:	cmp    r14,rbx
   1400028ac:	jne    0x1400028b3
   1400028ae:	cmp    r13,rax
   1400028b1:	je     0x1400028d3
   1400028b3:	mov    r14,rbx
   1400028b6:	mov    QWORD PTR [rsp+0x28],rbx
   1400028bb:	mov    rsi,rbx
   1400028be:	mov    QWORD PTR [rsp+0x30],rbx
   1400028c3:	mov    r13,rax
   1400028c6:	mov    QWORD PTR [rsp+0x38],rax
   1400028cb:	mov    rdi,rax
   1400028ce:	mov    QWORD PTR [rsp+0x20],rax
   1400028d3:	jmp    0x14000285a
   1400028d5:	lea    rdx,[rip+0xca0c]        # 0x14000f2e8
   1400028dc:	lea    rcx,[rip+0xc9ed]        # 0x14000f2d0
   1400028e3:	call   0x1400026a4
   1400028e8:	lea    rdx,[rip+0xca09]        # 0x14000f2f8
   1400028ef:	lea    rcx,[rip+0xc9fa]        # 0x14000f2f0
   1400028f6:	call   0x1400026a4
   1400028fb:	nop
   1400028fc:	test   r12d,r12d
   1400028ff:	je     0x14000290b
   140002901:	mov    ecx,0x8
   140002906:	call   0x140004608
   14000290b:	test   r12d,r12d
   14000290e:	jne    0x140002936
   140002910:	mov    DWORD PTR [rip+0x10c7e],0x1        # 0x140013598
   14000291a:	lea    ecx,[r12+0x8]
   14000291f:	call   0x140004608
   140002924:	mov    ecx,r15d
   140002927:	call   0x140002638
   14000292c:	mov    ecx,r15d
   14000292f:	call   QWORD PTR [rip+0xc723]        # 0x14000f058
   140002935:	int3   
   140002936:	mov    rbx,QWORD PTR [rsp+0x70]
   14000293b:	mov    rsi,QWORD PTR [rsp+0x78]
   140002940:	add    rsp,0x40
   140002944:	pop    r15
   140002946:	pop    r14
   140002948:	pop    r13
   14000294a:	pop    r12
   14000294c:	pop    rdi
   14000294d:	ret    
   14000294e:	int3   
   14000294f:	int3   
   140002950:	xor    r8d,r8d
   140002953:	xor    edx,edx
   140002955:	jmp    0x1400027c4
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	xor    r8d,r8d
   14000295f:	lea    edx,[r8+0x1]
   140002963:	jmp    0x1400027c4
   140002968:	xor    edx,edx
   14000296a:	xor    ecx,ecx
   14000296c:	lea    r8d,[rdx+0x1]
   140002970:	jmp    0x1400027c4
   140002975:	int3   
   140002976:	int3   
   140002977:	int3   
   140002978:	mov    edx,0x1
   14000297d:	xor    ecx,ecx
   14000297f:	mov    r8d,edx
   140002982:	jmp    0x1400027c4
   140002987:	int3   
   140002988:	rex push rbx
   14000298a:	sub    rsp,0x20
   14000298e:	call   0x14000574c
   140002993:	mov    rcx,rax
   140002996:	mov    rbx,rax
   140002999:	call   0x140006788
   14000299e:	mov    rcx,rbx
   1400029a1:	call   0x140006748
   1400029a6:	mov    rcx,rbx
   1400029a9:	call   0x140003dbc
   1400029ae:	mov    rcx,rbx
   1400029b1:	call   0x140006740
   1400029b6:	mov    rcx,rbx
   1400029b9:	call   0x140006738
   1400029be:	mov    rcx,rbx
   1400029c1:	call   0x140006498
   1400029c6:	mov    rcx,rbx
   1400029c9:	call   0x1400062c4
   1400029ce:	mov    rcx,rbx
   1400029d1:	call   0x1400062a8
   1400029d6:	lea    rcx,[rip+0xffffffffffffff7f]        # 0x14000295c
   1400029dd:	call   0x140005744
   1400029e2:	mov    QWORD PTR [rip+0xf9e7],rax        # 0x1400123d0
   1400029e9:	add    rsp,0x20
   1400029ed:	pop    rbx
   1400029ee:	ret    
   1400029ef:	int3   
   1400029f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400029f5:	mov    QWORD PTR [rsp+0x18],rsi
   1400029fa:	push   rdi
   1400029fb:	sub    rsp,0xa0
   140002a02:	lea    rcx,[rsp+0x30]
   140002a07:	call   QWORD PTR [rip+0xc65b]        # 0x14000f068
   140002a0d:	nop
   140002a0e:	mov    eax,0x5a4d
   140002a13:	cmp    WORD PTR [rip+0xffffffffffffd5e6],ax        # 0x140000000
   140002a1a:	jne    0x140002a7e
   140002a1c:	movsxd rax,DWORD PTR [rip+0xffffffffffffd619]        # 0x14000003c
   140002a23:	lea    rsi,[rip+0xffffffffffffd5d6]        # 0x140000000
   140002a2a:	add    rax,rsi
   140002a2d:	cmp    DWORD PTR [rax],0x4550
   140002a33:	je     0x140002a40
   140002a35:	xor    ebx,ebx
   140002a37:	mov    DWORD PTR [rsp+0xb0],ebx
   140002a3e:	jmp    0x140002a8e
   140002a40:	mov    ecx,0x20b
   140002a45:	cmp    WORD PTR [rax+0x18],cx
   140002a49:	je     0x140002a56
   140002a4b:	xor    ebx,ebx
   140002a4d:	mov    DWORD PTR [rsp+0xb0],ebx
   140002a54:	jmp    0x140002a8e
   140002a56:	cmp    DWORD PTR [rax+0x84],0xe
   140002a5d:	ja     0x140002a6a
   140002a5f:	xor    ebx,ebx
   140002a61:	mov    DWORD PTR [rsp+0xb0],ebx
   140002a68:	jmp    0x140002a8e
   140002a6a:	xor    ebx,ebx
   140002a6c:	cmp    DWORD PTR [rax+0xf8],ebx
   140002a72:	setne  bl
   140002a75:	mov    DWORD PTR [rsp+0xb0],ebx
   140002a7c:	jmp    0x140002a8e
   140002a7e:	xor    ebx,ebx
   140002a80:	mov    DWORD PTR [rsp+0xb0],ebx
   140002a87:	lea    rsi,[rip+0xffffffffffffd572]        # 0x140000000
   140002a8e:	mov    edi,0x1
   140002a93:	mov    ecx,edi
   140002a95:	call   0x140006e48
   140002a9a:	test   eax,eax
   140002a9c:	jne    0x140002abf
   140002a9e:	cmp    DWORD PTR [rip+0x10b0c],edi        # 0x1400135b0
   140002aa4:	jne    0x140002aab
   140002aa6:	call   0x140005f64
   140002aab:	mov    ecx,0x1c
   140002ab0:	call   0x140005d3c
   140002ab5:	mov    ecx,0xff
   140002aba:	call   0x140002674
   140002abf:	call   0x140005a1c
   140002ac4:	test   eax,eax
   140002ac6:	jne    0x140002ae9
   140002ac8:	cmp    DWORD PTR [rip+0x10ae2],edi        # 0x1400135b0
   140002ace:	jne    0x140002ad5
   140002ad0:	call   0x140005f64
   140002ad5:	mov    ecx,0x10
   140002ada:	call   0x140005d3c
   140002adf:	mov    ecx,0xff
   140002ae4:	call   0x140002674
   140002ae9:	call   0x14000610c
   140002aee:	nop
   140002aef:	call   0x140003a94
   140002af4:	test   eax,eax
   140002af6:	jns    0x140002b02
   140002af8:	mov    ecx,0x1b
   140002afd:	call   0x140002608
   140002b02:	call   QWORD PTR [rip+0xc558]        # 0x14000f060
   140002b08:	mov    QWORD PTR [rip+0x11a79],rax        # 0x140014588
   140002b0f:	call   0x140006c94
   140002b14:	mov    QWORD PTR [rip+0x10a85],rax        # 0x1400135a0
   140002b1b:	call   0x140006b9c
   140002b20:	test   eax,eax
   140002b22:	jns    0x140002b2e
   140002b24:	mov    ecx,0x8
   140002b29:	call   0x140002608
   140002b2e:	call   0x14000689c
   140002b33:	test   eax,eax
   140002b35:	jns    0x140002b41
   140002b37:	mov    ecx,0x9
   140002b3c:	call   0x140002608
   140002b41:	mov    ecx,edi
   140002b43:	call   0x140002714
   140002b48:	test   eax,eax
   140002b4a:	je     0x140002b53
   140002b4c:	mov    ecx,eax
   140002b4e:	call   0x140002608
   140002b53:	call   0x140006820
   140002b58:	test   BYTE PTR [rsp+0x6c],dil
   140002b5d:	movzx  edx,WORD PTR [rsp+0x70]
   140002b62:	mov    r9d,0xa
   140002b68:	cmovne r9d,edx
   140002b6c:	mov    r8,rax
   140002b6f:	xor    edx,edx
   140002b71:	mov    rcx,rsi
   140002b74:	call   0x1400018e0
   140002b79:	mov    edi,eax
   140002b7b:	mov    DWORD PTR [rsp+0x20],eax
   140002b7f:	test   ebx,ebx
   140002b81:	jne    0x140002b8a
   140002b83:	mov    ecx,eax
   140002b85:	call   0x140002950
   140002b8a:	call   0x140002968
   140002b8f:	jmp    0x140002bab
   140002b91:	mov    edi,eax
   140002b93:	cmp    DWORD PTR [rsp+0xb0],0x0
   140002b9b:	jne    0x140002ba5
   140002b9d:	mov    ecx,eax
   140002b9f:	call   0x14000295c
   140002ba4:	int3   
   140002ba5:	call   0x140002978
   140002baa:	nop
   140002bab:	mov    eax,edi
   140002bad:	jmp    0x140002bb4
   140002baf:	mov    eax,0xff
   140002bb4:	lea    r11,[rsp+0xa0]
   140002bbc:	mov    rbx,QWORD PTR [r11+0x18]
   140002bc0:	mov    rsi,QWORD PTR [r11+0x20]
   140002bc4:	mov    rsp,r11
   140002bc7:	pop    rdi
   140002bc8:	ret    
   140002bc9:	int3   
   140002bca:	int3   
   140002bcb:	int3   
   140002bcc:	sub    rsp,0x28
   140002bd0:	call   0x140006e94
   140002bd5:	add    rsp,0x28
   140002bd9:	jmp    0x1400029f0
   140002bde:	int3   
   140002bdf:	int3   
   140002be0:	mov    rax,rsp
   140002be3:	mov    QWORD PTR [rax+0x8],rbx
   140002be7:	mov    QWORD PTR [rax+0x18],rbp
   140002beb:	mov    QWORD PTR [rax+0x20],rsi
   140002bef:	mov    QWORD PTR [rax+0x10],rdx
   140002bf3:	push   rdi
   140002bf4:	push   r12
   140002bf6:	push   r13
   140002bf8:	push   r14
   140002bfa:	push   r15
   140002bfc:	sub    rsp,0x40
   140002c00:	mov    r15,QWORD PTR [r9+0x8]
   140002c04:	mov    r12,QWORD PTR [r9]
   140002c07:	mov    rsi,QWORD PTR [r9+0x38]
   140002c0b:	sub    r12,r15
   140002c0e:	test   BYTE PTR [rcx+0x4],0x66
   140002c12:	mov    r14,r9
   140002c15:	mov    rbp,rdx
   140002c18:	mov    r13,rcx
   140002c1b:	jne    0x140002cfd
   140002c21:	xor    edi,edi
   140002c23:	mov    QWORD PTR [rax-0x38],rcx
   140002c27:	mov    QWORD PTR [rax-0x30],r8
   140002c2b:	cmp    DWORD PTR [rsi],edi
   140002c2d:	jbe    0x140002d5e
   140002c33:	lea    rbx,[rsi+0xc]
   140002c37:	mov    eax,DWORD PTR [rbx-0x8]
   140002c3a:	cmp    r12,rax
   140002c3d:	jb     0x140002cea
   140002c43:	mov    eax,DWORD PTR [rbx-0x4]
   140002c46:	cmp    r12,rax
   140002c49:	jae    0x140002cea
   140002c4f:	cmp    DWORD PTR [rbx+0x4],0x0
   140002c53:	je     0x140002cea
   140002c59:	cmp    DWORD PTR [rbx],0x1
   140002c5c:	je     0x140002c77
   140002c5e:	mov    eax,DWORD PTR [rbx]
   140002c60:	lea    rcx,[rsp+0x30]
   140002c65:	mov    rdx,rbp
   140002c68:	add    rax,r15
   140002c6b:	call   rax
   140002c6d:	test   eax,eax
   140002c6f:	js     0x140002cf9
   140002c75:	jle    0x140002cea
   140002c77:	cmp    DWORD PTR [r13+0x0],0xe06d7363
   140002c7f:	jne    0x140002ca9
   140002c81:	cmp    QWORD PTR [rip+0x118f7],0x0        # 0x140014580
   140002c89:	je     0x140002ca9
   140002c8b:	lea    rcx,[rip+0x118ee]        # 0x140014580
   140002c92:	call   0x140006240
   140002c97:	test   eax,eax
   140002c99:	je     0x140002ca9
   140002c9b:	mov    edx,0x1
   140002ca0:	mov    rcx,r13
   140002ca3:	call   QWORD PTR [rip+0x118d7]        # 0x140014580
   140002ca9:	mov    ecx,DWORD PTR [rbx+0x4]
   140002cac:	mov    r8d,0x1
   140002cb2:	mov    rdx,rbp
   140002cb5:	add    rcx,r15
   140002cb8:	call   0x140006f90
   140002cbd:	mov    rax,QWORD PTR [r14+0x40]
   140002cc1:	mov    edx,DWORD PTR [rbx+0x4]
   140002cc4:	movsxd r9,DWORD PTR [r13+0x0]
   140002cc8:	mov    QWORD PTR [rsp+0x28],rax
   140002ccd:	mov    rax,QWORD PTR [r14+0x28]
   140002cd1:	add    rdx,r15
   140002cd4:	mov    r8,r13
   140002cd7:	mov    rcx,rbp
   140002cda:	mov    QWORD PTR [rsp+0x20],rax
   140002cdf:	call   QWORD PTR [rip+0xc38b]        # 0x14000f070
   140002ce5:	call   0x140006fc0
   140002cea:	inc    edi
   140002cec:	add    rbx,0x10
   140002cf0:	cmp    edi,DWORD PTR [rsi]
   140002cf2:	jae    0x140002d5e
   140002cf4:	jmp    0x140002c37
   140002cf9:	xor    eax,eax
   140002cfb:	jmp    0x140002d63
   140002cfd:	mov    rdi,QWORD PTR [r9+0x20]
   140002d01:	xor    ebp,ebp
   140002d03:	sub    rdi,r15
   140002d06:	cmp    DWORD PTR [rsi],ebp
   140002d08:	jbe    0x140002d5e
   140002d0a:	lea    rbx,[rsi+0x10]
   140002d0e:	mov    ecx,DWORD PTR [rbx-0xc]
   140002d11:	cmp    r12,rcx
   140002d14:	jb     0x140002d54
   140002d16:	mov    eax,DWORD PTR [rbx-0x8]
   140002d19:	cmp    r12,rax
   140002d1c:	jae    0x140002d54
   140002d1e:	cmp    rdi,rcx
   140002d21:	jb     0x140002d2f
   140002d23:	cmp    rdi,rax
   140002d26:	jae    0x140002d2f
   140002d28:	test   BYTE PTR [r13+0x4],0x20
   140002d2d:	jne    0x140002d5e
   140002d2f:	cmp    DWORD PTR [rbx],0x0
   140002d32:	je     0x140002d3d
   140002d34:	mov    eax,DWORD PTR [rbx]
   140002d36:	cmp    rdi,rax
   140002d39:	je     0x140002d5e
   140002d3b:	jmp    0x140002d54
   140002d3d:	mov    rdx,QWORD PTR [rsp+0x78]
   140002d42:	add    rax,r15
   140002d45:	mov    cl,0x1
   140002d47:	mov    QWORD PTR [r14],rax
   140002d4a:	mov    r8d,DWORD PTR [rbx-0x4]
   140002d4e:	add    r8,r15
   140002d51:	call   r8
   140002d54:	inc    ebp
   140002d56:	add    rbx,0x10
   140002d5a:	cmp    ebp,DWORD PTR [rsi]
   140002d5c:	jb     0x140002d0e
   140002d5e:	mov    eax,0x1
   140002d63:	lea    r11,[rsp+0x40]
   140002d68:	mov    rbx,QWORD PTR [r11+0x30]
   140002d6c:	mov    rbp,QWORD PTR [r11+0x40]
   140002d70:	mov    rsi,QWORD PTR [r11+0x48]
   140002d74:	mov    rsp,r11
   140002d77:	pop    r15
   140002d79:	pop    r14
   140002d7b:	pop    r13
   140002d7d:	pop    r12
   140002d7f:	pop    rdi
   140002d80:	ret    
   140002d81:	int3   
   140002d82:	int3   
   140002d83:	int3   
   140002d84:	mov    QWORD PTR [rsp+0x8],rbx
   140002d89:	mov    QWORD PTR [rsp+0x10],rdi
   140002d8e:	push   r12
   140002d90:	sub    rsp,0x20
   140002d94:	mov    rbx,rcx
   140002d97:	call   0x140003d84
   140002d9c:	mov    ecx,eax
   140002d9e:	call   0x140006fc4
   140002da3:	test   eax,eax
   140002da5:	je     0x140002e42
   140002dab:	call   0x140001a70
   140002db0:	add    rax,0x30
   140002db4:	cmp    rbx,rax
   140002db7:	jne    0x140002dbd
   140002db9:	xor    eax,eax
   140002dbb:	jmp    0x140002dd0
   140002dbd:	call   0x140001a70
   140002dc2:	add    rax,0x60
   140002dc6:	cmp    rbx,rax
   140002dc9:	jne    0x140002e42
   140002dcb:	mov    eax,0x1
   140002dd0:	inc    DWORD PTR [rip+0x1076e]        # 0x140013544
   140002dd6:	test   DWORD PTR [rbx+0x18],0x10c
   140002ddd:	jne    0x140002e42
   140002ddf:	lea    r12,[rip+0x107d2]        # 0x1400135b8
   140002de6:	movsxd rdi,eax
   140002de9:	cmp    QWORD PTR [r12+rdi*8],0x0
   140002dee:	jne    0x140002e1b
   140002df0:	mov    ecx,0x1000
   140002df5:	call   0x140004044
   140002dfa:	mov    QWORD PTR [r12+rdi*8],rax
   140002dfe:	test   rax,rax
   140002e01:	jne    0x140002e1b
   140002e03:	lea    rax,[rbx+0x20]
   140002e07:	mov    QWORD PTR [rbx+0x10],rax
   140002e0b:	mov    QWORD PTR [rbx],rax
   140002e0e:	mov    eax,0x2
   140002e13:	mov    DWORD PTR [rbx+0x24],eax
   140002e16:	mov    DWORD PTR [rbx+0x8],eax
   140002e19:	jmp    0x140002e34
   140002e1b:	mov    rcx,QWORD PTR [r12+rdi*8]
   140002e1f:	mov    DWORD PTR [rbx+0x24],0x1000
   140002e26:	mov    DWORD PTR [rbx+0x8],0x1000
   140002e2d:	mov    QWORD PTR [rbx+0x10],rcx
   140002e31:	mov    QWORD PTR [rbx],rcx
   140002e34:	or     DWORD PTR [rbx+0x18],0x1102
   140002e3b:	mov    eax,0x1
   140002e40:	jmp    0x140002e44
   140002e42:	xor    eax,eax
   140002e44:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e49:	mov    rdi,QWORD PTR [rsp+0x38]
   140002e4e:	add    rsp,0x20
   140002e52:	pop    r12
   140002e54:	ret    
   140002e55:	int3   
   140002e56:	int3   
   140002e57:	int3   
   140002e58:	test   ecx,ecx
   140002e5a:	je     0x140002e8c
   140002e5c:	push   rbx
   140002e5d:	sub    rsp,0x20
   140002e61:	bt     DWORD PTR [rdx+0x18],0xc
   140002e66:	mov    rbx,rdx
   140002e69:	jae    0x140002e87
   140002e6b:	mov    rcx,rdx
   140002e6e:	call   0x140004334
   140002e73:	and    DWORD PTR [rbx+0x18],0xffffeeff
   140002e7a:	and    DWORD PTR [rbx+0x24],0x0
   140002e7e:	and    QWORD PTR [rbx],0x0
   140002e82:	and    QWORD PTR [rbx+0x10],0x0
   140002e87:	add    rsp,0x20
   140002e8b:	pop    rbx
   140002e8c:	ret    
   140002e8d:	int3   
   140002e8e:	int3   
   140002e8f:	int3   
   140002e90:	rex push rbx
   140002e92:	sub    rsp,0x20
   140002e96:	test   BYTE PTR [rdx+0x18],0x40
   140002e9a:	mov    rbx,r8
   140002e9d:	je     0x140002eab
   140002e9f:	cmp    QWORD PTR [rdx+0x10],0x0
   140002ea4:	jne    0x140002eab
   140002ea6:	inc    DWORD PTR [r8]
   140002ea9:	jmp    0x140002ed1
   140002eab:	add    DWORD PTR [rdx+0x8],0xffffffff
   140002eaf:	js     0x140002ebe
   140002eb1:	mov    rax,QWORD PTR [rdx]
   140002eb4:	mov    BYTE PTR [rax],cl
   140002eb6:	inc    QWORD PTR [rdx]
   140002eb9:	movzx  eax,cl
   140002ebc:	jmp    0x140002ec6
   140002ebe:	movsx  ecx,cl
   140002ec1:	call   0x140005bac
   140002ec6:	cmp    eax,0xffffffff
   140002ec9:	jne    0x140002ecf
   140002ecb:	or     DWORD PTR [rbx],eax
   140002ecd:	jmp    0x140002ed1
   140002ecf:	inc    DWORD PTR [rbx]
   140002ed1:	add    rsp,0x20
   140002ed5:	pop    rbx
   140002ed6:	ret    
   140002ed7:	int3   
   140002ed8:	test   edx,edx
   140002eda:	jle    0x140002f28
   140002edc:	mov    QWORD PTR [rsp+0x8],rbx
   140002ee1:	mov    QWORD PTR [rsp+0x10],rbp
   140002ee6:	mov    QWORD PTR [rsp+0x18],rsi
   140002eeb:	push   rdi
   140002eec:	sub    rsp,0x20
   140002ef0:	mov    rdi,r9
   140002ef3:	mov    rsi,r8
   140002ef6:	mov    ebx,edx
   140002ef8:	mov    bpl,cl
   140002efb:	mov    r8,rdi
   140002efe:	mov    rdx,rsi
   140002f01:	mov    cl,bpl
   140002f04:	dec    ebx
   140002f06:	call   0x140002e90
   140002f0b:	cmp    DWORD PTR [rdi],0xffffffff
   140002f0e:	je     0x140002f14
   140002f10:	test   ebx,ebx
   140002f12:	jg     0x140002efb
   140002f14:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f19:	mov    rbp,QWORD PTR [rsp+0x38]
   140002f1e:	mov    rsi,QWORD PTR [rsp+0x40]
   140002f23:	add    rsp,0x20
   140002f27:	pop    rdi
   140002f28:	ret    
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	mov    QWORD PTR [rsp+0x8],rbx
   140002f31:	mov    QWORD PTR [rsp+0x10],rbp
   140002f36:	mov    QWORD PTR [rsp+0x18],rsi
   140002f3b:	push   rdi
   140002f3c:	sub    rsp,0x20
   140002f40:	test   BYTE PTR [r8+0x18],0x40
   140002f45:	mov    rdi,r9
   140002f48:	mov    rsi,r8
   140002f4b:	mov    ebx,edx
   140002f4d:	mov    rbp,rcx
   140002f50:	je     0x140002f5e
   140002f52:	cmp    QWORD PTR [r8+0x10],0x0
   140002f57:	jne    0x140002f5e
   140002f59:	add    DWORD PTR [r9],edx
   140002f5c:	jmp    0x140002f95
   140002f5e:	test   edx,edx
   140002f60:	jle    0x140002f95
   140002f62:	mov    cl,BYTE PTR [rbp+0x0]
   140002f65:	mov    r8,rdi
   140002f68:	mov    rdx,rsi
   140002f6b:	dec    ebx
   140002f6d:	call   0x140002e90
   140002f72:	inc    rbp
   140002f75:	cmp    DWORD PTR [rdi],0xffffffff
   140002f78:	jne    0x140002f91
   140002f7a:	call   0x140003fbc
   140002f7f:	cmp    DWORD PTR [rax],0x2a
   140002f82:	jne    0x140002f95
   140002f84:	mov    r8,rdi
   140002f87:	mov    rdx,rsi
   140002f8a:	mov    cl,0x3f
   140002f8c:	call   0x140002e90
   140002f91:	test   ebx,ebx
   140002f93:	jg     0x140002f62
   140002f95:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f9a:	mov    rbp,QWORD PTR [rsp+0x38]
   140002f9f:	mov    rsi,QWORD PTR [rsp+0x40]
   140002fa4:	add    rsp,0x20
   140002fa8:	pop    rdi
   140002fa9:	ret    
   140002faa:	int3   
   140002fab:	int3   
   140002fac:	mov    QWORD PTR [rsp+0x18],rbx
   140002fb1:	push   rbp
   140002fb2:	push   rsi
   140002fb3:	push   rdi
   140002fb4:	push   r12
   140002fb6:	push   r13
   140002fb8:	push   r14
   140002fba:	push   r15
   140002fbc:	sub    rsp,0x2d0
   140002fc3:	mov    rax,QWORD PTR [rip+0xf3f6]        # 0x1400123c0
   140002fca:	xor    rax,rsp
   140002fcd:	mov    QWORD PTR [rsp+0x2c8],rax
   140002fd5:	xor    eax,eax
   140002fd7:	mov    rbx,rcx
   140002fda:	mov    QWORD PTR [rsp+0x68],rcx
   140002fdf:	mov    rdi,rdx
   140002fe2:	lea    rcx,[rsp+0x78]
   140002fe7:	mov    rdx,r8
   140002fea:	mov    r13,r9
   140002fed:	mov    DWORD PTR [rsp+0x60],eax
   140002ff1:	mov    r12d,eax
   140002ff4:	mov    DWORD PTR [rsp+0x54],eax
   140002ff8:	mov    r14d,eax
   140002ffb:	mov    DWORD PTR [rsp+0x48],eax
   140002fff:	mov    DWORD PTR [rsp+0x58],eax
   140003003:	mov    DWORD PTR [rsp+0x50],eax
   140003007:	call   0x140002370
   14000300c:	xor    r10d,r10d
   14000300f:	cmp    rbx,r10
   140003012:	jne    0x140003055
   140003014:	call   0x140003fbc
   140003019:	xor    ebx,ebx
   14000301b:	xor    r9d,r9d
   14000301e:	xor    r8d,r8d
   140003021:	xor    edx,edx
   140003023:	xor    ecx,ecx
   140003025:	mov    DWORD PTR [rax],0x16
   14000302b:	mov    QWORD PTR [rsp+0x20],rbx
   140003030:	call   0x140003eec
   140003035:	cmp    BYTE PTR [rsp+0x90],bl
   14000303c:	je     0x14000304d
   14000303e:	mov    rax,QWORD PTR [rsp+0x88]
   140003046:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000304d:	or     eax,0xffffffff
   140003050:	jmp    0x140003852
   140003055:	or     r15d,0xffffffff
   140003059:	test   BYTE PTR [rbx+0x18],0x40
   14000305d:	lea    r9,[rip+0xffffffffffffcf9c]        # 0x140000000
   140003064:	jne    0x140003124
   14000306a:	mov    rcx,rbx
   14000306d:	call   0x140003d84
   140003072:	lea    rdx,[rip+0xf377]        # 0x1400123f0
   140003079:	cmp    eax,r15d
   14000307c:	je     0x1400030a6
   14000307e:	cmp    eax,0xfffffffe
   140003081:	je     0x1400030a6
   140003083:	movsxd r8,eax
   140003086:	lea    r9,[rip+0xffffffffffffcf73]        # 0x140000000
   14000308d:	mov    rcx,r8
   140003090:	and    r8d,0x1f
   140003094:	sar    rcx,0x5
   140003098:	imul   r8,r8,0x58
   14000309c:	add    r8,QWORD PTR [r9+rcx*8+0x14380]
   1400030a4:	jmp    0x1400030b0
   1400030a6:	mov    r8,rdx
   1400030a9:	lea    r9,[rip+0xffffffffffffcf50]        # 0x140000000
   1400030b0:	test   BYTE PTR [r8+0x38],0x7f
   1400030b5:	jne    0x1400030e0
   1400030b7:	cmp    eax,r15d
   1400030ba:	je     0x1400030da
   1400030bc:	cmp    eax,0xfffffffe
   1400030bf:	je     0x1400030da
   1400030c1:	movsxd rdx,eax
   1400030c4:	mov    rax,rdx
   1400030c7:	and    edx,0x1f
   1400030ca:	sar    rax,0x5
   1400030ce:	imul   rdx,rdx,0x58
   1400030d2:	add    rdx,QWORD PTR [r9+rax*8+0x14380]
   1400030da:	test   BYTE PTR [rdx+0x38],0x80
   1400030de:	je     0x140003121
   1400030e0:	call   0x140003fbc
   1400030e5:	xor    ebx,ebx
   1400030e7:	xor    r9d,r9d
   1400030ea:	xor    r8d,r8d
   1400030ed:	xor    edx,edx
   1400030ef:	xor    ecx,ecx
   1400030f1:	mov    DWORD PTR [rax],0x16
   1400030f7:	mov    QWORD PTR [rsp+0x20],rbx
   1400030fc:	call   0x140003eec
   140003101:	cmp    BYTE PTR [rsp+0x90],bl
   140003108:	je     0x140003119
   14000310a:	mov    rax,QWORD PTR [rsp+0x88]
   140003112:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140003119:	mov    eax,r15d
   14000311c:	jmp    0x140003852
   140003121:	xor    r10d,r10d
   140003124:	cmp    rdi,r10
   140003127:	je     0x1400030e0
   140003129:	mov    bpl,BYTE PTR [rdi]
   14000312c:	mov    esi,r10d
   14000312f:	mov    DWORD PTR [rsp+0x40],r10d
   140003134:	mov    DWORD PTR [rsp+0x44],r10d
   140003139:	mov    edx,r10d
   14000313c:	mov    QWORD PTR [rsp+0x98],r10
   140003144:	cmp    bpl,r10b
   140003147:	je     0x140003837
   14000314d:	mov    rbx,QWORD PTR [rsp+0xa8]
   140003155:	mov    r11d,0x200
   14000315b:	inc    rdi
   14000315e:	cmp    esi,r10d
   140003161:	mov    QWORD PTR [rsp+0xb0],rdi
   140003169:	jl     0x140003837
   14000316f:	lea    eax,[rbp-0x20]
   140003172:	cmp    al,0x58
   140003174:	ja     0x140003188
   140003176:	movsx  rax,bpl
   14000317a:	movsx  ecx,BYTE PTR [rax+r9*1+0xf3f0]
   140003183:	and    ecx,0xf
   140003186:	jmp    0x14000318b
   140003188:	mov    ecx,r10d
   14000318b:	movsxd rax,edx
   14000318e:	movsxd rcx,ecx
   140003191:	lea    rdx,[rax+rcx*8]
   140003195:	movsx  edx,BYTE PTR [rdx+r9*1+0xf410]
   14000319e:	sar    edx,0x4
   1400031a1:	mov    DWORD PTR [rsp+0x5c],edx
   1400031a5:	mov    ecx,edx
   1400031a7:	cmp    edx,r10d
   1400031aa:	je     0x140003929
   1400031b0:	sub    ecx,0x1
   1400031b3:	je     0x140003a41
   1400031b9:	sub    ecx,0x1
   1400031bc:	je     0x1400039f1
   1400031c2:	sub    ecx,0x1
   1400031c5:	je     0x1400039b6
   1400031cb:	sub    ecx,0x1
   1400031ce:	je     0x1400039ae
   1400031d4:	sub    ecx,0x1
   1400031d7:	je     0x14000397d
   1400031dd:	sub    ecx,0x1
   1400031e0:	je     0x14000387d
   1400031e6:	cmp    ecx,0x1
   1400031e9:	jne    0x14000382b
   1400031ef:	movsx  eax,bpl
   1400031f3:	cmp    eax,0x64
   1400031f6:	jg     0x14000337a
   1400031fc:	je     0x140003482
   140003202:	cmp    eax,0x41
   140003205:	je     0x14000334b
   14000320b:	cmp    eax,0x43
   14000320e:	je     0x1400032e4
   140003214:	cmp    eax,0x45
   140003217:	je     0x14000334b
   14000321d:	cmp    eax,0x47
   140003220:	je     0x14000334b
   140003226:	cmp    eax,0x53
   140003229:	je     0x140003298
   14000322b:	cmp    eax,0x58
   14000322e:	je     0x140003418
   140003234:	cmp    eax,0x5a
   140003237:	je     0x140003250
   140003239:	cmp    eax,0x61
   14000323c:	je     0x140003357
   140003242:	cmp    eax,0x63
   140003245:	je     0x1400032f2
   14000324b:	jmp    0x140003698
   140003250:	mov    rax,QWORD PTR [r13+0x0]
   140003254:	add    r13,0x8
   140003258:	cmp    rax,r10
   14000325b:	je     0x14000328c
   14000325d:	mov    rbx,QWORD PTR [rax+0x8]
   140003261:	cmp    rbx,r10
   140003264:	je     0x14000328c
   140003266:	bt     r12d,0xb
   14000326b:	movsx  eax,WORD PTR [rax]
   14000326e:	jae    0x140003282
   140003270:	cdq    
   140003271:	mov    DWORD PTR [rsp+0x50],0x1
   140003279:	sub    eax,edx
   14000327b:	sar    eax,1
   14000327d:	jmp    0x140003694
   140003282:	mov    DWORD PTR [rsp+0x50],r10d
   140003287:	jmp    0x140003694
   14000328c:	mov    rbx,QWORD PTR [rip+0xf14d]        # 0x1400123e0
   140003293:	jmp    0x140003689
   140003298:	test   r12d,0x830
   14000329f:	jne    0x1400032a6
   1400032a1:	bts    r12d,0xb
   1400032a6:	mov    rbx,QWORD PTR [r13+0x0]
   1400032aa:	cmp    r14d,r15d
   1400032ad:	mov    eax,r14d
   1400032b0:	mov    ecx,0x7fffffff
   1400032b5:	cmove  eax,ecx
   1400032b8:	add    r13,0x8
   1400032bc:	test   r12d,0x810
   1400032c3:	je     0x1400033e3
   1400032c9:	cmp    rbx,r10
   1400032cc:	mov    DWORD PTR [rsp+0x50],0x1
   1400032d4:	cmove  rbx,QWORD PTR [rip+0xf10c]        # 0x1400123e8
   1400032dc:	mov    rcx,rbx
   1400032df:	jmp    0x1400033d6
   1400032e4:	test   r12d,0x830
   1400032eb:	jne    0x1400032f2
   1400032ed:	bts    r12d,0xb
   1400032f2:	add    r13,0x8
   1400032f6:	test   r12d,0x810
   1400032fd:	je     0x14000332b
   1400032ff:	movzx  r9d,WORD PTR [r13-0x8]
   140003304:	lea    rdx,[rsp+0xc0]
   14000330c:	lea    rcx,[rsp+0x44]
   140003311:	mov    r8,r11
   140003314:	call   0x1400073b0
   140003319:	xor    r10d,r10d
   14000331c:	cmp    eax,r10d
   14000331f:	je     0x14000333e
   140003321:	mov    DWORD PTR [rsp+0x58],0x1
   140003329:	jmp    0x14000333e
   14000332b:	mov    al,BYTE PTR [r13-0x8]
   14000332f:	mov    DWORD PTR [rsp+0x44],0x1
   140003337:	mov    BYTE PTR [rsp+0xc0],al
   14000333e:	lea    rbx,[rsp+0xc0]
   140003346:	jmp    0x140003698
   14000334b:	mov    DWORD PTR [rsp+0x70],0x1
   140003353:	add    bpl,0x20
   140003357:	or     r12d,0x40
   14000335b:	cmp    r14d,r10d
   14000335e:	lea    rbx,[rsp+0xc0]
   140003366:	mov    esi,r11d
   140003369:	jge    0x14000359c
   14000336f:	mov    r14d,0x6
   140003375:	jmp    0x1400035e5
   14000337a:	cmp    eax,0x65
   14000337d:	jl     0x140003698
   140003383:	cmp    eax,0x67
   140003386:	jle    0x140003357
   140003388:	cmp    eax,0x69
   14000338b:	je     0x140003482
   140003391:	cmp    eax,0x6e
   140003394:	je     0x14000344f
   14000339a:	cmp    eax,0x6f
   14000339d:	je     0x14000343d
   1400033a3:	cmp    eax,0x70
   1400033a6:	je     0x14000340d
   1400033a8:	cmp    eax,0x73
   1400033ab:	je     0x1400032a6
   1400033b1:	cmp    eax,0x75
   1400033b4:	je     0x140003486
   1400033ba:	cmp    eax,0x78
   1400033bd:	jne    0x140003698
   1400033c3:	mov    eax,0x27
   1400033c8:	jmp    0x14000341d
   1400033ca:	dec    eax
   1400033cc:	cmp    WORD PTR [rcx],r10w
   1400033d0:	je     0x1400033db
   1400033d2:	add    rcx,0x2
   1400033d6:	cmp    eax,r10d
   1400033d9:	jne    0x1400033ca
   1400033db:	sub    rcx,rbx
   1400033de:	sar    rcx,1
   1400033e1:	jmp    0x140003404
   1400033e3:	cmp    rbx,r10
   1400033e6:	cmove  rbx,QWORD PTR [rip+0xeff2]        # 0x1400123e0
   1400033ee:	mov    rcx,rbx
   1400033f1:	jmp    0x1400033fd
   1400033f3:	dec    eax
   1400033f5:	cmp    BYTE PTR [rcx],r10b
   1400033f8:	je     0x140003402
   1400033fa:	inc    rcx
   1400033fd:	cmp    eax,r10d
   140003400:	jne    0x1400033f3
   140003402:	sub    ecx,ebx
   140003404:	mov    DWORD PTR [rsp+0x44],ecx
   140003408:	jmp    0x140003698
   14000340d:	mov    r14d,0x10
   140003413:	bts    r12d,0xf
   140003418:	mov    eax,0x7
   14000341d:	mov    DWORD PTR [rsp+0x60],eax
   140003421:	mov    r9d,0x10
   140003427:	test   r12b,r12b
   14000342a:	jns    0x14000348c
   14000342c:	add    al,0x51
   14000342e:	mov    BYTE PTR [rsp+0x4c],0x30
   140003433:	lea    edx,[r9-0xe]
   140003437:	mov    BYTE PTR [rsp+0x4d],al
   14000343b:	jmp    0x140003490
   14000343d:	mov    r9d,0x8
   140003443:	test   r12b,r12b
   140003446:	jns    0x14000348c
   140003448:	bts    r12d,0x9
   14000344d:	jmp    0x14000348c
   14000344f:	mov    rdi,QWORD PTR [r13+0x0]
   140003453:	add    r13,0x8
   140003457:	call   0x140007188
   14000345c:	xor    r10d,r10d
   14000345f:	cmp    eax,r10d
   140003462:	je     0x1400030e0
   140003468:	test   r12b,0x20
   14000346c:	je     0x140003473
   14000346e:	mov    WORD PTR [rdi],si
   140003471:	jmp    0x140003475
   140003473:	mov    DWORD PTR [rdi],esi
   140003475:	mov    DWORD PTR [rsp+0x58],0x1
   14000347d:	jmp    0x1400037ee
   140003482:	or     r12d,0x40
   140003486:	mov    r9d,0xa
   14000348c:	mov    edx,DWORD PTR [rsp+0x48]
   140003490:	bt     r12d,0xf
   140003495:	jb     0x14000349e
   140003497:	bt     r12d,0xc
   14000349c:	jae    0x1400034a8
   14000349e:	mov    r8,QWORD PTR [r13+0x0]
   1400034a2:	add    r13,0x8
   1400034a6:	jmp    0x1400034d6
   1400034a8:	add    r13,0x8
   1400034ac:	test   r12b,0x20
   1400034b0:	je     0x1400034c6
   1400034b2:	test   r12b,0x40
   1400034b6:	je     0x1400034bf
   1400034b8:	movsx  r8,WORD PTR [r13-0x8]
   1400034bd:	jmp    0x1400034d6
   1400034bf:	movzx  r8d,WORD PTR [r13-0x8]
   1400034c4:	jmp    0x1400034d6
   1400034c6:	test   r12b,0x40
   1400034ca:	je     0x1400034d2
   1400034cc:	movsxd r8,DWORD PTR [r13-0x8]
   1400034d0:	jmp    0x1400034d6
   1400034d2:	mov    r8d,DWORD PTR [r13-0x8]
   1400034d6:	test   r12b,0x40
   1400034da:	je     0x1400034e9
   1400034dc:	cmp    r8,r10
   1400034df:	jge    0x1400034e9
   1400034e1:	neg    r8
   1400034e4:	bts    r12d,0x8
   1400034e9:	bt     r12d,0xf
   1400034ee:	jb     0x1400034fa
   1400034f0:	bt     r12d,0xc
   1400034f5:	jb     0x1400034fa
   1400034f7:	mov    r8d,r8d
   1400034fa:	cmp    r14d,r10d
   1400034fd:	jge    0x140003507
   1400034ff:	mov    r14d,0x1
   140003505:	jmp    0x140003512
   140003507:	and    r12d,0xfffffff7
   14000350b:	cmp    r14d,r11d
   14000350e:	cmovg  r14d,r11d
   140003512:	mov    r15d,DWORD PTR [rsp+0x60]
   140003517:	mov    rax,r8
   14000351a:	lea    rbx,[rsp+0x2bf]
   140003522:	neg    rax
   140003525:	sbb    ecx,ecx
   140003527:	and    ecx,edx
   140003529:	mov    DWORD PTR [rsp+0x48],ecx
   14000352d:	mov    ecx,r14d
   140003530:	dec    r14d
   140003533:	cmp    ecx,r10d
   140003536:	jg     0x14000353d
   140003538:	cmp    r8,r10
   14000353b:	je     0x14000355d
   14000353d:	xor    edx,edx
   14000353f:	mov    rax,r8
   140003542:	movsxd rcx,r9d
   140003545:	div    rcx
   140003548:	mov    r8,rax
   14000354b:	lea    eax,[rdx+0x30]
   14000354e:	cmp    eax,0x39
   140003551:	jle    0x140003556
   140003553:	add    eax,r15d
   140003556:	mov    BYTE PTR [rbx],al
   140003558:	dec    rbx
   14000355b:	jmp    0x14000352d
   14000355d:	lea    rax,[rsp+0x2bf]
   140003565:	mov    r15d,0xffffffff
   14000356b:	sub    eax,ebx
   14000356d:	inc    rbx
   140003570:	bt     r12d,0x9
   140003575:	mov    DWORD PTR [rsp+0x44],eax
   140003579:	jae    0x140003698
   14000357f:	cmp    eax,r10d
   140003582:	je     0x14000358d
   140003584:	cmp    BYTE PTR [rbx],0x30
   140003587:	je     0x140003698
   14000358d:	dec    rbx
   140003590:	inc    DWORD PTR [rsp+0x44]
   140003594:	mov    BYTE PTR [rbx],0x30
   140003597:	jmp    0x140003698
   14000359c:	jne    0x1400035ac
   14000359e:	cmp    bpl,0x67
   1400035a2:	jne    0x1400035e5
   1400035a4:	mov    r14d,0x1
   1400035aa:	jmp    0x1400035e5
   1400035ac:	cmp    r14d,r11d
   1400035af:	cmovg  r14d,r11d
   1400035b3:	cmp    r14d,0xa3
   1400035ba:	jle    0x1400035e5
   1400035bc:	lea    edi,[r14+0x15d]
   1400035c3:	movsxd rcx,edi
   1400035c6:	call   0x140004044
   1400035cb:	mov    QWORD PTR [rsp+0x98],rax
   1400035d3:	test   rax,rax
   1400035d6:	je     0x1400035df
   1400035d8:	mov    rbx,rax
   1400035db:	mov    esi,edi
   1400035dd:	jmp    0x1400035e5
   1400035df:	mov    r14d,0xa3
   1400035e5:	mov    rax,QWORD PTR [r13+0x0]
   1400035e9:	mov    rcx,QWORD PTR [rip+0xfa90]        # 0x140013080
   1400035f0:	add    r13,0x8
   1400035f4:	movsx  edi,bpl
   1400035f8:	movsxd rsi,esi
   1400035fb:	mov    QWORD PTR [rsp+0xa8],rax
   140003603:	call   0x140005758
   140003608:	lea    rcx,[rsp+0x78]
   14000360d:	mov    r9d,edi
   140003610:	mov    QWORD PTR [rsp+0x30],rcx
   140003615:	mov    ecx,DWORD PTR [rsp+0x70]
   140003619:	mov    r8,rsi
   14000361c:	mov    DWORD PTR [rsp+0x28],ecx
   140003620:	lea    rcx,[rsp+0xa8]
   140003628:	mov    rdx,rbx
   14000362b:	mov    DWORD PTR [rsp+0x20],r14d
   140003630:	call   rax
   140003632:	mov    edi,r12d
   140003635:	xor    eax,eax
   140003637:	and    edi,0x80
   14000363d:	je     0x14000365c
   14000363f:	cmp    r14d,eax
   140003642:	jne    0x14000365c
   140003644:	mov    rcx,QWORD PTR [rip+0xfa4d]        # 0x140013098
   14000364b:	call   0x140005758
   140003650:	lea    rdx,[rsp+0x78]
   140003655:	mov    rcx,rbx
   140003658:	call   rax
   14000365a:	xor    eax,eax
   14000365c:	cmp    bpl,0x67
   140003660:	jne    0x14000367c
   140003662:	cmp    edi,eax
   140003664:	jne    0x14000367c
   140003666:	mov    rcx,QWORD PTR [rip+0xfa23]        # 0x140013090
   14000366d:	call   0x140005758
   140003672:	lea    rdx,[rsp+0x78]
   140003677:	mov    rcx,rbx
   14000367a:	call   rax
   14000367c:	cmp    BYTE PTR [rbx],0x2d
   14000367f:	jne    0x140003689
   140003681:	bts    r12d,0x8
   140003686:	inc    rbx
   140003689:	mov    rcx,rbx
   14000368c:	call   0x1400070e0
   140003691:	xor    r10d,r10d
   140003694:	mov    DWORD PTR [rsp+0x44],eax
   140003698:	cmp    DWORD PTR [rsp+0x58],r10d
   14000369d:	jne    0x1400037ee
   1400036a3:	test   r12b,0x40
   1400036a7:	je     0x1400036da
   1400036a9:	bt     r12d,0x8
   1400036ae:	jae    0x1400036b7
   1400036b0:	mov    BYTE PTR [rsp+0x4c],0x2d
   1400036b5:	jmp    0x1400036c2
   1400036b7:	test   r12b,0x1
   1400036bb:	je     0x1400036cd
   1400036bd:	mov    BYTE PTR [rsp+0x4c],0x2b
   1400036c2:	mov    edi,0x1
   1400036c7:	mov    DWORD PTR [rsp+0x48],edi
   1400036cb:	jmp    0x1400036de
   1400036cd:	test   r12b,0x2
   1400036d1:	je     0x1400036da
   1400036d3:	mov    BYTE PTR [rsp+0x4c],0x20
   1400036d8:	jmp    0x1400036c2
   1400036da:	mov    edi,DWORD PTR [rsp+0x48]
   1400036de:	mov    esi,DWORD PTR [rsp+0x54]
   1400036e2:	mov    rbp,QWORD PTR [rsp+0x68]
   1400036e7:	sub    esi,DWORD PTR [rsp+0x44]
   1400036eb:	sub    esi,edi
   1400036ed:	test   r12b,0xc
   1400036f1:	jne    0x140003704
   1400036f3:	lea    r9,[rsp+0x40]
   1400036f8:	mov    r8,rbp
   1400036fb:	mov    edx,esi
   1400036fd:	mov    cl,0x20
   1400036ff:	call   0x140002ed8
   140003704:	lea    r9,[rsp+0x40]
   140003709:	lea    rcx,[rsp+0x4c]
   14000370e:	mov    r8,rbp
   140003711:	mov    edx,edi
   140003713:	call   0x140002f2c
   140003718:	test   r12b,0x8
   14000371c:	je     0x140003735
   14000371e:	test   r12b,0x4
   140003722:	jne    0x140003735
   140003724:	lea    r9,[rsp+0x40]
   140003729:	mov    r8,rbp
   14000372c:	mov    edx,esi
   14000372e:	mov    cl,0x30
   140003730:	call   0x140002ed8
   140003735:	mov    edi,DWORD PTR [rsp+0x44]
   140003739:	xor    eax,eax
   14000373b:	cmp    DWORD PTR [rsp+0x50],eax
   14000373f:	je     0x1400037b6
   140003741:	cmp    edi,eax
   140003743:	jle    0x1400037b6
   140003745:	mov    rbp,rbx
   140003748:	movzx  r9d,WORD PTR [rbp+0x0]
   14000374d:	lea    rdx,[rsp+0x2c0]
   140003755:	lea    rcx,[rsp+0xa0]
   14000375d:	mov    r8d,0x6
   140003763:	dec    edi
   140003765:	add    rbp,0x2
   140003769:	call   0x1400073b0
   14000376e:	xor    r10d,r10d
   140003771:	cmp    eax,r10d
   140003774:	jne    0x1400037a8
   140003776:	mov    edx,DWORD PTR [rsp+0xa0]
   14000377d:	cmp    edx,r10d
   140003780:	je     0x1400037a8
   140003782:	mov    r8,QWORD PTR [rsp+0x68]
   140003787:	lea    r9,[rsp+0x40]
   14000378c:	lea    rcx,[rsp+0x2c0]
   140003794:	call   0x140002f2c
   140003799:	xor    r10d,r10d
   14000379c:	cmp    edi,r10d
   14000379f:	jne    0x140003748
   1400037a1:	mov    rbp,QWORD PTR [rsp+0x68]
   1400037a6:	jmp    0x1400037cb
   1400037a8:	mov    rbp,QWORD PTR [rsp+0x68]
   1400037ad:	mov    eax,r15d
   1400037b0:	mov    DWORD PTR [rsp+0x40],eax
   1400037b4:	jmp    0x1400037cf
   1400037b6:	lea    r9,[rsp+0x40]
   1400037bb:	mov    r8,rbp
   1400037be:	mov    edx,edi
   1400037c0:	mov    rcx,rbx
   1400037c3:	call   0x140002f2c
   1400037c8:	xor    r10d,r10d
   1400037cb:	mov    eax,DWORD PTR [rsp+0x40]
   1400037cf:	cmp    eax,r10d
   1400037d2:	jl     0x1400037ee
   1400037d4:	test   r12b,0x4
   1400037d8:	je     0x1400037ee
   1400037da:	lea    r9,[rsp+0x40]
   1400037df:	mov    r8,rbp
   1400037e2:	mov    edx,esi
   1400037e4:	mov    cl,0x20
   1400037e6:	call   0x140002ed8
   1400037eb:	xor    r10d,r10d
   1400037ee:	mov    rax,QWORD PTR [rsp+0x98]
   1400037f6:	cmp    rax,r10
   1400037f9:	je     0x14000380e
   1400037fb:	mov    rcx,rax
   1400037fe:	call   0x140004244
   140003803:	xor    r10d,r10d
   140003806:	mov    QWORD PTR [rsp+0x98],r10
   14000380e:	mov    rdi,QWORD PTR [rsp+0xb0]
   140003816:	mov    esi,DWORD PTR [rsp+0x40]
   14000381a:	mov    edx,DWORD PTR [rsp+0x5c]
   14000381e:	lea    r9,[rip+0xffffffffffffc7db]        # 0x140000000
   140003825:	mov    r11d,0x200
   14000382b:	mov    bpl,BYTE PTR [rdi]
   14000382e:	cmp    bpl,r10b
   140003831:	jne    0x14000315b
   140003837:	cmp    BYTE PTR [rsp+0x90],r10b
   14000383f:	je     0x140003850
   140003841:	mov    rcx,QWORD PTR [rsp+0x88]
   140003849:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140003850:	mov    eax,esi
   140003852:	mov    rcx,QWORD PTR [rsp+0x2c8]
   14000385a:	xor    rcx,rsp
   14000385d:	call   0x140002350
   140003862:	mov    rbx,QWORD PTR [rsp+0x320]
   14000386a:	add    rsp,0x2d0
   140003871:	pop    r15
   140003873:	pop    r14
   140003875:	pop    r13
   140003877:	pop    r12
   140003879:	pop    rdi
   14000387a:	pop    rsi
   14000387b:	pop    rbp
   14000387c:	ret    
   14000387d:	cmp    bpl,0x49
   140003881:	je     0x1400038bd
   140003883:	cmp    bpl,0x68
   140003887:	je     0x1400038b4
   140003889:	cmp    bpl,0x6c
   14000388d:	je     0x14000389c
   14000388f:	cmp    bpl,0x77
   140003893:	jne    0x14000382b
   140003895:	bts    r12d,0xb
   14000389a:	jmp    0x14000382b
   14000389c:	cmp    BYTE PTR [rdi],0x6c
   14000389f:	jne    0x1400038ab
   1400038a1:	inc    rdi
   1400038a4:	bts    r12d,0xc
   1400038a9:	jmp    0x14000382b
   1400038ab:	or     r12d,0x10
   1400038af:	jmp    0x14000382b
   1400038b4:	or     r12d,0x20
   1400038b8:	jmp    0x14000382b
   1400038bd:	mov    al,BYTE PTR [rdi]
   1400038bf:	bts    r12d,0xf
   1400038c4:	cmp    al,0x36
   1400038c6:	jne    0x1400038dc
   1400038c8:	cmp    BYTE PTR [rdi+0x1],0x34
   1400038cc:	jne    0x1400038dc
   1400038ce:	add    rdi,0x2
   1400038d2:	bts    r12d,0xf
   1400038d7:	jmp    0x14000382b
   1400038dc:	cmp    al,0x33
   1400038de:	jne    0x1400038f4
   1400038e0:	cmp    BYTE PTR [rdi+0x1],0x32
   1400038e4:	jne    0x1400038f4
   1400038e6:	add    rdi,0x2
   1400038ea:	btr    r12d,0xf
   1400038ef:	jmp    0x14000382b
   1400038f4:	cmp    al,0x64
   1400038f6:	je     0x14000382b
   1400038fc:	cmp    al,0x69
   1400038fe:	je     0x14000382b
   140003904:	cmp    al,0x6f
   140003906:	je     0x14000382b
   14000390c:	cmp    al,0x75
   14000390e:	je     0x14000382b
   140003914:	cmp    al,0x78
   140003916:	je     0x14000382b
   14000391c:	cmp    al,0x58
   14000391e:	je     0x14000382b
   140003924:	mov    DWORD PTR [rsp+0x5c],r10d
   140003929:	lea    rdx,[rsp+0x78]
   14000392e:	movzx  ecx,bpl
   140003932:	mov    DWORD PTR [rsp+0x50],r10d
   140003937:	call   0x140007034
   14000393c:	xor    esi,esi
   14000393e:	cmp    eax,esi
   140003940:	je     0x140003963
   140003942:	mov    rdx,QWORD PTR [rsp+0x68]
   140003947:	lea    r8,[rsp+0x40]
   14000394c:	mov    cl,bpl
   14000394f:	call   0x140002e90
   140003954:	mov    bpl,BYTE PTR [rdi]
   140003957:	inc    rdi
   14000395a:	cmp    bpl,sil
   14000395d:	je     0x140003a65
   140003963:	mov    rdx,QWORD PTR [rsp+0x68]
   140003968:	lea    r8,[rsp+0x40]
   14000396d:	mov    cl,bpl
   140003970:	call   0x140002e90
   140003975:	xor    r10d,r10d
   140003978:	jmp    0x140003816
   14000397d:	cmp    bpl,0x2a
   140003981:	jne    0x14000399c
   140003983:	mov    r14d,DWORD PTR [r13+0x0]
   140003987:	add    r13,0x8
   14000398b:	cmp    r14d,r10d
   14000398e:	jge    0x14000382b
   140003994:	mov    r14d,r15d
   140003997:	jmp    0x14000382b
   14000399c:	lea    ecx,[r14+r14*4]
   1400039a0:	movsx  eax,bpl
   1400039a4:	lea    r14d,[rax+rcx*2-0x30]
   1400039a9:	jmp    0x14000382b
   1400039ae:	mov    r14d,r10d
   1400039b1:	jmp    0x14000382b
   1400039b6:	cmp    bpl,0x2a
   1400039ba:	jne    0x1400039d9
   1400039bc:	mov    eax,DWORD PTR [r13+0x0]
   1400039c0:	add    r13,0x8
   1400039c4:	cmp    eax,r10d
   1400039c7:	mov    DWORD PTR [rsp+0x54],eax
   1400039cb:	jge    0x14000382b
   1400039d1:	or     r12d,0x4
   1400039d5:	neg    eax
   1400039d7:	jmp    0x1400039e8
   1400039d9:	mov    eax,DWORD PTR [rsp+0x54]
   1400039dd:	lea    ecx,[rax+rax*4]
   1400039e0:	movsx  eax,bpl
   1400039e4:	lea    eax,[rax+rcx*2-0x30]
   1400039e8:	mov    DWORD PTR [rsp+0x54],eax
   1400039ec:	jmp    0x14000382b
   1400039f1:	cmp    bpl,0x20
   1400039f5:	je     0x140003a38
   1400039f7:	cmp    bpl,0x23
   1400039fb:	je     0x140003a2e
   1400039fd:	cmp    bpl,0x2b
   140003a01:	je     0x140003a25
   140003a03:	cmp    bpl,0x2d
   140003a07:	je     0x140003a1c
   140003a09:	cmp    bpl,0x30
   140003a0d:	jne    0x14000382b
   140003a13:	or     r12d,0x8
   140003a17:	jmp    0x14000382b
   140003a1c:	or     r12d,0x4
   140003a20:	jmp    0x14000382b
   140003a25:	or     r12d,0x1
   140003a29:	jmp    0x14000382b
   140003a2e:	bts    r12d,0x7
   140003a33:	jmp    0x14000382b
   140003a38:	or     r12d,0x2
   140003a3c:	jmp    0x14000382b
   140003a41:	mov    DWORD PTR [rsp+0x70],r10d
   140003a46:	mov    DWORD PTR [rsp+0x58],r10d
   140003a4b:	mov    DWORD PTR [rsp+0x54],r10d
   140003a50:	mov    DWORD PTR [rsp+0x48],r10d
   140003a55:	mov    r12d,r10d
   140003a58:	mov    r14d,r15d
   140003a5b:	mov    DWORD PTR [rsp+0x50],r10d
   140003a60:	jmp    0x14000382b
   140003a65:	call   0x140003fbc
   140003a6a:	xor    r9d,r9d
   140003a6d:	xor    r8d,r8d
   140003a70:	xor    edx,edx
   140003a72:	xor    ecx,ecx
   140003a74:	mov    QWORD PTR [rsp+0x20],rsi
   140003a79:	mov    DWORD PTR [rax],0x16
   140003a7f:	call   0x140003eec
   140003a84:	cmp    BYTE PTR [rsp+0x90],sil
   140003a8c:	jmp    0x140003108
   140003a91:	int3   
   140003a92:	int3   
   140003a93:	int3   
   140003a94:	mov    rax,rsp
   140003a97:	mov    QWORD PTR [rax+0x8],rbx
   140003a9b:	mov    QWORD PTR [rax+0x10],rsi
   140003a9f:	mov    QWORD PTR [rax+0x18],rdi
   140003aa3:	mov    QWORD PTR [rax+0x20],r12
   140003aa7:	push   r13
   140003aa9:	push   r14
   140003aab:	push   r15
   140003aad:	sub    rsp,0x90
   140003ab4:	lea    rcx,[rsp+0x20]
   140003ab9:	call   QWORD PTR [rip+0xb5a9]        # 0x14000f068
   140003abf:	nop
   140003ac0:	mov    edx,0x58
   140003ac5:	lea    r12d,[rdx-0x38]
   140003ac9:	mov    rcx,r12
   140003acc:	call   0x1400040b0
   140003ad1:	mov    r11,rax
   140003ad4:	xor    r15d,r15d
   140003ad7:	cmp    rax,r15
   140003ada:	jne    0x140003ae4
   140003adc:	or     eax,0xffffffff
   140003adf:	jmp    0x140003d5f
   140003ae4:	mov    QWORD PTR [rip+0x10895],rax        # 0x140014380
   140003aeb:	mov    ecx,r12d
   140003aee:	mov    DWORD PTR [rip+0x10874],ecx        # 0x140014368
   140003af4:	add    rax,0xb00
   140003afa:	cmp    r11,rax
   140003afd:	jae    0x140003b42
   140003aff:	mov    BYTE PTR [r11+0x8],r15b
   140003b03:	or     QWORD PTR [r11],0xffffffffffffffff
   140003b07:	mov    BYTE PTR [r11+0x9],0xa
   140003b0c:	mov    DWORD PTR [r11+0xc],r15d
   140003b10:	mov    BYTE PTR [r11+0x38],r15b
   140003b14:	mov    BYTE PTR [r11+0x39],0xa
   140003b19:	mov    BYTE PTR [r11+0x3a],0xa
   140003b1e:	mov    DWORD PTR [r11+0x50],r15d
   140003b22:	mov    BYTE PTR [r11+0x4c],r15b
   140003b26:	add    r11,0x58
   140003b2a:	mov    rax,QWORD PTR [rip+0x1084f]        # 0x140014380
   140003b31:	add    rax,0xb00
   140003b37:	cmp    r11,rax
   140003b3a:	jb     0x140003aff
   140003b3c:	mov    ecx,DWORD PTR [rip+0x10826]        # 0x140014368
   140003b42:	cmp    WORD PTR [rsp+0x62],r15w
   140003b48:	je     0x140003c97
   140003b4e:	mov    rax,QWORD PTR [rsp+0x68]
   140003b53:	cmp    rax,r15
   140003b56:	je     0x140003c97
   140003b5c:	lea    r13,[rax+0x4]
   140003b60:	movsxd rsi,DWORD PTR [rax]
   140003b63:	add    rsi,r13
   140003b66:	mov    ebx,0x800
   140003b6b:	cmp    DWORD PTR [rax],ebx
   140003b6d:	cmovl  ebx,DWORD PTR [rax]
   140003b70:	mov    edi,0x1
   140003b75:	cmp    ecx,ebx
   140003b77:	jge    0x140003c0a
   140003b7d:	lea    r14,[rip+0x107fc]        # 0x140014380
   140003b84:	mov    edx,0x58
   140003b89:	mov    rcx,r12
   140003b8c:	call   0x1400040b0
   140003b91:	mov    r11,rax
   140003b94:	cmp    rax,r15
   140003b97:	je     0x140003c02
   140003b99:	mov    QWORD PTR [r14+rdi*8],rax
   140003b9d:	mov    eax,DWORD PTR [rip+0x107c5]        # 0x140014368
   140003ba3:	add    eax,r12d
   140003ba6:	mov    DWORD PTR [rip+0x107bc],eax        # 0x140014368
   140003bac:	lea    rcx,[r11+0xb00]
   140003bb3:	cmp    r11,rcx
   140003bb6:	jae    0x140003bf9
   140003bb8:	mov    BYTE PTR [r11+0x8],r15b
   140003bbc:	or     QWORD PTR [r11],0xffffffffffffffff
   140003bc0:	mov    BYTE PTR [r11+0x9],0xa
   140003bc5:	mov    DWORD PTR [r11+0xc],r15d
   140003bc9:	and    BYTE PTR [r11+0x38],0x80
   140003bce:	mov    BYTE PTR [r11+0x39],0xa
   140003bd3:	mov    BYTE PTR [r11+0x3a],0xa
   140003bd8:	mov    DWORD PTR [r11+0x50],r15d
   140003bdc:	mov    BYTE PTR [r11+0x4c],r15b
   140003be0:	add    r11,0x58
   140003be4:	mov    rax,QWORD PTR [r14+rdi*8]
   140003be8:	add    rax,0xb00
   140003bee:	cmp    r11,rax
   140003bf1:	jb     0x140003bb8
   140003bf3:	mov    eax,DWORD PTR [rip+0x1076f]        # 0x140014368
   140003bf9:	inc    rdi
   140003bfc:	cmp    eax,ebx
   140003bfe:	jl     0x140003b84
   140003c00:	jmp    0x140003c11
   140003c02:	mov    ebx,DWORD PTR [rip+0x10760]        # 0x140014368
   140003c08:	jmp    0x140003c11
   140003c0a:	lea    r14,[rip+0x1076f]        # 0x140014380
   140003c11:	mov    edi,r15d
   140003c14:	cmp    ebx,r15d
   140003c17:	jle    0x140003c97
   140003c19:	cmp    QWORD PTR [rsi],0xffffffffffffffff
   140003c1d:	je     0x140003c8a
   140003c1f:	cmp    QWORD PTR [rsi],0xfffffffffffffffe
   140003c23:	je     0x140003c8a
   140003c25:	test   BYTE PTR [r13+0x0],0x1
   140003c2a:	je     0x140003c8a
   140003c2c:	test   BYTE PTR [r13+0x0],0x8
   140003c31:	jne    0x140003c41
   140003c33:	mov    rcx,QWORD PTR [rsi]
   140003c36:	call   QWORD PTR [rip+0xb44c]        # 0x14000f088
   140003c3c:	cmp    eax,r15d
   140003c3f:	je     0x140003c8a
   140003c41:	movsxd r12,edi
   140003c44:	mov    rax,r12
   140003c47:	sar    rax,0x5
   140003c4b:	and    r12d,0x1f
   140003c4f:	imul   r12,r12,0x58
   140003c53:	add    r12,QWORD PTR [r14+rax*8]
   140003c57:	mov    rax,QWORD PTR [rsi]
   140003c5a:	mov    QWORD PTR [r12],rax
   140003c5e:	mov    al,BYTE PTR [r13+0x0]
   140003c62:	mov    BYTE PTR [r12+0x8],al
   140003c67:	lea    rcx,[r12+0x10]
   140003c6c:	mov    edx,0xfa0
   140003c71:	call   0x140006750
   140003c76:	cmp    eax,r15d
   140003c79:	je     0x140003c82
   140003c7b:	inc    DWORD PTR [r12+0xc]
   140003c80:	jmp    0x140003c8a
   140003c82:	or     eax,0xffffffff
   140003c85:	jmp    0x140003d5f
   140003c8a:	inc    edi
   140003c8c:	inc    r13
   140003c8f:	add    rsi,0x8
   140003c93:	cmp    edi,ebx
   140003c95:	jl     0x140003c19
   140003c97:	mov    r12d,r15d
   140003c9a:	mov    rdi,r15
   140003c9d:	mov    rbx,rdi
   140003ca0:	imul   rbx,rbx,0x58
   140003ca4:	add    rbx,QWORD PTR [rip+0x106d5]        # 0x140014380
   140003cab:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   140003caf:	je     0x140003cbd
   140003cb1:	cmp    QWORD PTR [rbx],0xfffffffffffffffe
   140003cb5:	je     0x140003cbd
   140003cb7:	or     BYTE PTR [rbx+0x8],0x80
   140003cbb:	jmp    0x140003d3c
   140003cbd:	mov    BYTE PTR [rbx+0x8],0x81
   140003cc1:	lea    eax,[r12-0x1]
   140003cc6:	neg    eax
   140003cc8:	sbb    ecx,ecx
   140003cca:	add    ecx,0xfffffff5
   140003ccd:	mov    eax,0xfffffff6
   140003cd2:	cmp    r12d,r15d
   140003cd5:	cmove  ecx,eax
   140003cd8:	call   QWORD PTR [rip+0xb3a2]        # 0x14000f080
   140003cde:	mov    rsi,rax
   140003ce1:	cmp    rax,0xffffffffffffffff
   140003ce5:	je     0x140003d31
   140003ce7:	cmp    rax,r15
   140003cea:	je     0x140003d31
   140003cec:	mov    rcx,rax
   140003cef:	call   QWORD PTR [rip+0xb393]        # 0x14000f088
   140003cf5:	cmp    eax,r15d
   140003cf8:	je     0x140003d31
   140003cfa:	mov    QWORD PTR [rbx],rsi
   140003cfd:	movzx  eax,al
   140003d00:	cmp    eax,0x2
   140003d03:	jne    0x140003d0b
   140003d05:	or     BYTE PTR [rbx+0x8],0x40
   140003d09:	jmp    0x140003d14
   140003d0b:	cmp    eax,0x3
   140003d0e:	jne    0x140003d14
   140003d10:	or     BYTE PTR [rbx+0x8],0x8
   140003d14:	lea    rcx,[rbx+0x10]
   140003d18:	mov    edx,0xfa0
   140003d1d:	call   0x140006750
   140003d22:	cmp    eax,r15d
   140003d25:	je     0x140003d2c
   140003d27:	inc    DWORD PTR [rbx+0xc]
   140003d2a:	jmp    0x140003d3c
   140003d2c:	or     eax,0xffffffff
   140003d2f:	jmp    0x140003d5f
   140003d31:	or     BYTE PTR [rbx+0x8],0x40
   140003d35:	mov    QWORD PTR [rbx],0xfffffffffffffffe
   140003d3c:	inc    r12d
   140003d3f:	inc    rdi
   140003d42:	cmp    rdi,0x3
   140003d46:	jl     0x140003c9d
   140003d4c:	mov    ecx,DWORD PTR [rip+0x10616]        # 0x140014368
   140003d52:	call   QWORD PTR [rip+0xb320]        # 0x14000f078
   140003d58:	xor    eax,eax
   140003d5a:	jmp    0x140003d5f
   140003d5c:	or     eax,0xffffffff
   140003d5f:	lea    r11,[rsp+0x90]
   140003d67:	mov    rbx,QWORD PTR [r11+0x20]
   140003d6b:	mov    rsi,QWORD PTR [r11+0x28]
   140003d6f:	mov    rdi,QWORD PTR [r11+0x30]
   140003d73:	mov    r12,QWORD PTR [r11+0x38]
   140003d77:	mov    rsp,r11
   140003d7a:	pop    r15
   140003d7c:	pop    r14
   140003d7e:	pop    r13
   140003d80:	ret    
   140003d81:	int3   
   140003d82:	int3   
   140003d83:	int3   
   140003d84:	sub    rsp,0x38
   140003d88:	test   rcx,rcx
   140003d8b:	jne    0x140003db2
   140003d8d:	call   0x140003fbc
   140003d92:	and    QWORD PTR [rsp+0x20],0x0
   140003d98:	xor    r9d,r9d
   140003d9b:	xor    r8d,r8d
   140003d9e:	xor    edx,edx
   140003da0:	xor    ecx,ecx
   140003da2:	mov    DWORD PTR [rax],0x16
   140003da8:	call   0x140003eec
   140003dad:	or     eax,0xffffffff
   140003db0:	jmp    0x140003db5
   140003db2:	mov    eax,DWORD PTR [rcx+0x1c]
   140003db5:	add    rsp,0x38
   140003db9:	ret    
   140003dba:	int3   
   140003dbb:	int3   
   140003dbc:	mov    QWORD PTR [rip+0xf805],rcx        # 0x1400135c8
   140003dc3:	ret    
   140003dc4:	rex push rbx
   140003dc6:	sub    rsp,0x5e0
   140003dcd:	and    DWORD PTR [rsp+0x70],0x0
   140003dd2:	lea    rcx,[rsp+0x74]
   140003dd7:	xor    edx,edx
   140003dd9:	mov    r8d,0x94
   140003ddf:	call   0x140001cf0
   140003de4:	lea    r11,[rsp+0x70]
   140003de9:	lea    rax,[rsp+0x110]
   140003df1:	lea    rcx,[rsp+0x110]
   140003df9:	mov    QWORD PTR [rsp+0x48],r11
   140003dfe:	mov    QWORD PTR [rsp+0x50],rax
   140003e03:	call   QWORD PTR [rip+0xb2c7]        # 0x14000f0d0
   140003e09:	mov    rbx,QWORD PTR [rsp+0x208]
   140003e11:	lea    rdx,[rsp+0x40]
   140003e16:	mov    rcx,rbx
   140003e19:	xor    r8d,r8d
   140003e1c:	call   0x14000be1e
   140003e21:	test   rax,rax
   140003e24:	je     0x140003e61
   140003e26:	and    QWORD PTR [rsp+0x38],0x0
   140003e2c:	mov    rdx,QWORD PTR [rsp+0x40]
   140003e31:	lea    rcx,[rsp+0x60]
   140003e36:	mov    QWORD PTR [rsp+0x30],rcx
   140003e3b:	lea    rcx,[rsp+0x58]
   140003e40:	mov    r9,rax
   140003e43:	mov    QWORD PTR [rsp+0x28],rcx
   140003e48:	lea    rcx,[rsp+0x110]
   140003e50:	mov    r8,rbx
   140003e53:	mov    QWORD PTR [rsp+0x20],rcx
   140003e58:	xor    ecx,ecx
   140003e5a:	call   0x14000be18
   140003e5f:	jmp    0x140003e81
   140003e61:	mov    rax,QWORD PTR [rsp+0x5e8]
   140003e69:	mov    QWORD PTR [rsp+0x208],rax
   140003e71:	lea    rax,[rsp+0x5e8]
   140003e79:	mov    QWORD PTR [rsp+0x1a8],rax
   140003e81:	mov    rax,QWORD PTR [rsp+0x5e8]
   140003e89:	mov    DWORD PTR [rsp+0x70],0xc0000417
   140003e91:	mov    DWORD PTR [rsp+0x74],0x1
   140003e99:	mov    QWORD PTR [rsp+0x80],rax
   140003ea1:	call   QWORD PTR [rip+0xb211]        # 0x14000f0b8
   140003ea7:	xor    ecx,ecx
   140003ea9:	mov    ebx,eax
   140003eab:	call   QWORD PTR [rip+0xb1ff]        # 0x14000f0b0
   140003eb1:	lea    rcx,[rsp+0x48]
   140003eb6:	call   QWORD PTR [rip+0xb1ec]        # 0x14000f0a8
   140003ebc:	test   eax,eax
   140003ebe:	jne    0x140003ecc
   140003ec0:	test   ebx,ebx
   140003ec2:	jne    0x140003ecc
   140003ec4:	lea    ecx,[rax+0x2]
   140003ec7:	call   0x1400073c4
   140003ecc:	call   QWORD PTR [rip+0xb1ce]        # 0x14000f0a0
   140003ed2:	mov    edx,0xc0000417
   140003ed7:	mov    rcx,rax
   140003eda:	call   QWORD PTR [rip+0xb1b8]        # 0x14000f098
   140003ee0:	add    rsp,0x5e0
   140003ee7:	pop    rbx
   140003ee8:	ret    
   140003ee9:	int3   
   140003eea:	int3   
   140003eeb:	int3   
   140003eec:	mov    QWORD PTR [rsp+0x8],rbx
   140003ef1:	mov    QWORD PTR [rsp+0x10],rbp
   140003ef6:	mov    QWORD PTR [rsp+0x18],rsi
   140003efb:	push   rdi
   140003efc:	sub    rsp,0x30
   140003f00:	mov    rbp,rcx
   140003f03:	mov    rcx,QWORD PTR [rip+0xf6be]        # 0x1400135c8
   140003f0a:	mov    ebx,r9d
   140003f0d:	mov    rdi,r8
   140003f10:	mov    rsi,rdx
   140003f13:	call   0x140005758
   140003f18:	test   rax,rax
   140003f1b:	je     0x140003f37
   140003f1d:	mov    r10,QWORD PTR [rsp+0x60]
   140003f22:	mov    r9d,ebx
   140003f25:	mov    r8,rdi
   140003f28:	mov    rdx,rsi
   140003f2b:	mov    rcx,rbp
   140003f2e:	mov    QWORD PTR [rsp+0x20],r10
   140003f33:	call   rax
   140003f35:	jmp    0x140003f5c
   140003f37:	mov    ecx,0x2
   140003f3c:	call   0x1400073c4
   140003f41:	mov    r11,QWORD PTR [rsp+0x60]
   140003f46:	mov    r9d,ebx
   140003f49:	mov    r8,rdi
   140003f4c:	mov    rdx,rsi
   140003f4f:	mov    rcx,rbp
   140003f52:	mov    QWORD PTR [rsp+0x20],r11
   140003f57:	call   0x140003dc4
   140003f5c:	mov    rbx,QWORD PTR [rsp+0x40]
   140003f61:	mov    rbp,QWORD PTR [rsp+0x48]
   140003f66:	mov    rsi,QWORD PTR [rsp+0x50]
   140003f6b:	add    rsp,0x30
   140003f6f:	pop    rdi
   140003f70:	ret    
   140003f71:	int3   
   140003f72:	int3   
   140003f73:	int3   
   140003f74:	lea    r9,[rip+0xe4d5]        # 0x140012450
   140003f7b:	xor    eax,eax
   140003f7d:	mov    rdx,r9
   140003f80:	lea    r8d,[rax+0x8]
   140003f84:	cmp    ecx,DWORD PTR [rdx]
   140003f86:	je     0x140003fb3
   140003f88:	inc    eax
   140003f8a:	add    rdx,r8
   140003f8d:	cmp    eax,0x2d
   140003f90:	jb     0x140003f84
   140003f92:	lea    eax,[rcx-0x13]
   140003f95:	cmp    eax,0x11
   140003f98:	ja     0x140003fa0
   140003f9a:	mov    eax,0xd
   140003f9f:	ret    
   140003fa0:	add    ecx,0xffffff44
   140003fa6:	mov    eax,0x16
   140003fab:	cmp    ecx,0xe
   140003fae:	cmovbe eax,r8d
   140003fb2:	ret    
   140003fb3:	cdqe   
   140003fb5:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140003fba:	ret    
   140003fbb:	int3   
   140003fbc:	sub    rsp,0x28
   140003fc0:	call   0x14000583c
   140003fc5:	test   rax,rax
   140003fc8:	jne    0x140003fd3
   140003fca:	lea    rax,[rip+0xe5e7]        # 0x1400125b8
   140003fd1:	jmp    0x140003fd7
   140003fd3:	add    rax,0x10
   140003fd7:	add    rsp,0x28
   140003fdb:	ret    
   140003fdc:	sub    rsp,0x28
   140003fe0:	call   0x14000583c
   140003fe5:	test   rax,rax
   140003fe8:	jne    0x140003ff3
   140003fea:	lea    rax,[rip+0xe5cb]        # 0x1400125bc
   140003ff1:	jmp    0x140003ff7
   140003ff3:	add    rax,0x14
   140003ff7:	add    rsp,0x28
   140003ffb:	ret    
   140003ffc:	rex push rbx
   140003ffe:	sub    rsp,0x20
   140004002:	mov    ebx,ecx
   140004004:	call   0x14000583c
   140004009:	test   rax,rax
   14000400c:	jne    0x140004017
   14000400e:	lea    rax,[rip+0xe5a7]        # 0x1400125bc
   140004015:	jmp    0x14000401b
   140004017:	add    rax,0x14
   14000401b:	mov    DWORD PTR [rax],ebx
   14000401d:	call   0x14000583c
   140004022:	lea    r10,[rip+0xe58f]        # 0x1400125b8
   140004029:	test   rax,rax
   14000402c:	je     0x140004032
   14000402e:	lea    r10,[rax+0x10]
   140004032:	mov    ecx,ebx
   140004034:	call   0x140003f74
   140004039:	mov    DWORD PTR [r10],eax
   14000403c:	add    rsp,0x20
   140004040:	pop    rbx
   140004041:	ret    
   140004042:	int3   
   140004043:	int3   
   140004044:	mov    QWORD PTR [rsp+0x8],rbx
   140004049:	mov    QWORD PTR [rsp+0x10],rbp
   14000404e:	mov    QWORD PTR [rsp+0x18],rsi
   140004053:	push   rdi
   140004054:	sub    rsp,0x20
   140004058:	xor    edi,edi
   14000405a:	mov    rsi,rcx
   14000405d:	or     ebp,0xffffffff
   140004060:	mov    rcx,rsi
   140004063:	call   0x1400073cc
   140004068:	mov    rbx,rax
   14000406b:	test   rax,rax
   14000406e:	jne    0x140004098
   140004070:	cmp    DWORD PTR [rip+0xf55a],eax        # 0x1400135d0
   140004076:	jbe    0x140004098
   140004078:	mov    ecx,edi
   14000407a:	call   QWORD PTR [rip+0xafc8]        # 0x14000f048
   140004080:	lea    r11d,[rdi+0x3e8]
   140004087:	cmp    r11d,DWORD PTR [rip+0xf542]        # 0x1400135d0
   14000408e:	mov    edi,r11d
   140004091:	cmova  edi,ebp
   140004094:	cmp    edi,ebp
   140004096:	jne    0x140004060
   140004098:	mov    rbp,QWORD PTR [rsp+0x38]
   14000409d:	mov    rsi,QWORD PTR [rsp+0x40]
   1400040a2:	mov    rax,rbx
   1400040a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040aa:	add    rsp,0x20
   1400040ae:	pop    rdi
   1400040af:	ret    
   1400040b0:	mov    rax,rsp
   1400040b3:	mov    QWORD PTR [rax+0x8],rbx
   1400040b7:	mov    QWORD PTR [rax+0x10],rbp
   1400040bb:	mov    QWORD PTR [rax+0x18],rsi
   1400040bf:	mov    QWORD PTR [rax+0x20],rdi
   1400040c3:	push   r12
   1400040c5:	sub    rsp,0x20
   1400040c9:	xor    edi,edi
   1400040cb:	mov    rsi,rdx
   1400040ce:	mov    rbp,rcx
   1400040d1:	or     r12d,0xffffffff
   1400040d5:	xor    r8d,r8d
   1400040d8:	mov    rdx,rsi
   1400040db:	mov    rcx,rbp
   1400040de:	call   0x14000474c
   1400040e3:	mov    rbx,rax
   1400040e6:	test   rax,rax
   1400040e9:	jne    0x140004115
   1400040eb:	cmp    DWORD PTR [rip+0xf4df],eax        # 0x1400135d0
   1400040f1:	jbe    0x140004115
   1400040f3:	mov    ecx,edi
   1400040f5:	call   QWORD PTR [rip+0xaf4d]        # 0x14000f048
   1400040fb:	lea    r11d,[rdi+0x3e8]
   140004102:	cmp    r11d,DWORD PTR [rip+0xf4c7]        # 0x1400135d0
   140004109:	mov    edi,r11d
   14000410c:	cmova  edi,r12d
   140004110:	cmp    edi,r12d
   140004113:	jne    0x1400040d5
   140004115:	mov    rbp,QWORD PTR [rsp+0x38]
   14000411a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000411f:	mov    rdi,QWORD PTR [rsp+0x48]
   140004124:	mov    rax,rbx
   140004127:	mov    rbx,QWORD PTR [rsp+0x30]
   14000412c:	add    rsp,0x20
   140004130:	pop    r12
   140004132:	ret    
   140004133:	int3   
   140004134:	mov    rax,rsp
   140004137:	mov    QWORD PTR [rax+0x8],rbx
   14000413b:	mov    QWORD PTR [rax+0x10],rbp
   14000413f:	mov    QWORD PTR [rax+0x18],rsi
   140004143:	mov    QWORD PTR [rax+0x20],rdi
   140004147:	push   r12
   140004149:	sub    rsp,0x20
   14000414d:	xor    esi,esi
   14000414f:	mov    rdi,rdx
   140004152:	mov    rbp,rcx
   140004155:	or     r12d,0xffffffff
   140004159:	mov    rdx,rdi
   14000415c:	mov    rcx,rbp
   14000415f:	call   0x140007484
   140004164:	mov    rbx,rax
   140004167:	test   rax,rax
   14000416a:	jne    0x14000419b
   14000416c:	test   rdi,rdi
   14000416f:	je     0x14000419b
   140004171:	cmp    DWORD PTR [rip+0xf459],eax        # 0x1400135d0
   140004177:	jbe    0x14000419b
   140004179:	mov    ecx,esi
   14000417b:	call   QWORD PTR [rip+0xaec7]        # 0x14000f048
   140004181:	lea    r11d,[rsi+0x3e8]
   140004188:	cmp    r11d,DWORD PTR [rip+0xf441]        # 0x1400135d0
   14000418f:	mov    esi,r11d
   140004192:	cmova  esi,r12d
   140004196:	cmp    esi,r12d
   140004199:	jne    0x140004159
   14000419b:	mov    rbp,QWORD PTR [rsp+0x38]
   1400041a0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400041a5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400041aa:	mov    rax,rbx
   1400041ad:	mov    rbx,QWORD PTR [rsp+0x30]
   1400041b2:	add    rsp,0x20
   1400041b6:	pop    r12
   1400041b8:	ret    
   1400041b9:	int3   
   1400041ba:	int3   
   1400041bb:	int3   
   1400041bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400041c1:	mov    QWORD PTR [rsp+0x10],rbp
   1400041c6:	mov    QWORD PTR [rsp+0x18],rsi
   1400041cb:	push   rdi
   1400041cc:	push   r12
   1400041ce:	push   r13
   1400041d0:	sub    rsp,0x20
   1400041d4:	xor    esi,esi
   1400041d6:	mov    rdi,r8
   1400041d9:	mov    rbp,rdx
   1400041dc:	or     r13d,0xffffffff
   1400041e0:	mov    r12,rcx
   1400041e3:	mov    r8,rdi
   1400041e6:	mov    rdx,rbp
   1400041e9:	mov    rcx,r12
   1400041ec:	call   0x140007558
   1400041f1:	mov    rbx,rax
   1400041f4:	test   rax,rax
   1400041f7:	jne    0x140004228
   1400041f9:	test   rdi,rdi
   1400041fc:	je     0x140004228
   1400041fe:	cmp    DWORD PTR [rip+0xf3cc],eax        # 0x1400135d0
   140004204:	jbe    0x140004228
   140004206:	mov    ecx,esi
   140004208:	call   QWORD PTR [rip+0xae3a]        # 0x14000f048
   14000420e:	lea    r11d,[rsi+0x3e8]
   140004215:	cmp    r11d,DWORD PTR [rip+0xf3b4]        # 0x1400135d0
   14000421c:	mov    esi,r11d
   14000421f:	cmova  esi,r13d
   140004223:	cmp    esi,r13d
   140004226:	jne    0x1400041e3
   140004228:	mov    rbp,QWORD PTR [rsp+0x48]
   14000422d:	mov    rsi,QWORD PTR [rsp+0x50]
   140004232:	mov    rax,rbx
   140004235:	mov    rbx,QWORD PTR [rsp+0x40]
   14000423a:	add    rsp,0x20
   14000423e:	pop    r13
   140004240:	pop    r12
   140004242:	pop    rdi
   140004243:	ret    
   140004244:	test   rcx,rcx
   140004247:	je     0x140004280
   140004249:	push   rbx
   14000424a:	sub    rsp,0x20
   14000424e:	mov    r8,rcx
   140004251:	mov    rcx,QWORD PTR [rip+0xfff8]        # 0x140014250
   140004258:	xor    edx,edx
   14000425a:	call   QWORD PTR [rip+0xae80]        # 0x14000f0e0
   140004260:	test   eax,eax
   140004262:	jne    0x14000427b
   140004264:	call   0x140003fbc
   140004269:	mov    rbx,rax
   14000426c:	call   QWORD PTR [rip+0xae66]        # 0x14000f0d8
   140004272:	mov    ecx,eax
   140004274:	call   0x140003f74
   140004279:	mov    DWORD PTR [rbx],eax
   14000427b:	add    rsp,0x20
   14000427f:	pop    rbx
   140004280:	ret    
   140004281:	int3   
   140004282:	int3   
   140004283:	int3   
   140004284:	mov    QWORD PTR [rsp+0x8],rbx
   140004289:	mov    QWORD PTR [rsp+0x10],rsi
   14000428e:	push   r12
   140004290:	sub    rsp,0x30
   140004294:	xor    esi,esi
   140004296:	lea    ecx,[rsi+0x1]
   140004299:	call   0x140004708
   14000429e:	nop
   14000429f:	lea    ebx,[rsi+0x3]
   1400042a2:	mov    DWORD PTR [rsp+0x20],ebx
   1400042a6:	cmp    ebx,DWORD PTR [rip+0x11334]        # 0x1400155e0
   1400042ac:	jge    0x140004317
   1400042ae:	movsxd r12,ebx
   1400042b1:	mov    rax,QWORD PTR [rip+0x10308]        # 0x1400145c0
   1400042b8:	cmp    QWORD PTR [rax+r12*8],0x0
   1400042bd:	je     0x14000430f
   1400042bf:	mov    rcx,QWORD PTR [rax+r12*8]
   1400042c3:	test   BYTE PTR [rcx+0x18],0x83
   1400042c7:	je     0x1400042d9
   1400042c9:	call   0x140007680
   1400042ce:	cmp    eax,0xffffffff
   1400042d1:	je     0x1400042d9
   1400042d3:	inc    esi
   1400042d5:	mov    DWORD PTR [rsp+0x24],esi
   1400042d9:	cmp    ebx,0x14
   1400042dc:	jl     0x14000430f
   1400042de:	mov    rax,QWORD PTR [rip+0x102db]        # 0x1400145c0
   1400042e5:	mov    rcx,QWORD PTR [rax+r12*8]
   1400042e9:	add    rcx,0x30
   1400042ed:	call   QWORD PTR [rip+0xad9d]        # 0x14000f090
   1400042f3:	mov    rcx,QWORD PTR [rip+0x102c6]        # 0x1400145c0
   1400042fa:	mov    rcx,QWORD PTR [rcx+r12*8]
   1400042fe:	call   0x140004244
   140004303:	mov    r11,QWORD PTR [rip+0x102b6]        # 0x1400145c0
   14000430a:	and    QWORD PTR [r11+r12*8],0x0
   14000430f:	inc    ebx
   140004311:	mov    DWORD PTR [rsp+0x20],ebx
   140004315:	jmp    0x1400042a6
   140004317:	mov    ecx,0x1
   14000431c:	call   0x140004608
   140004321:	mov    eax,esi
   140004323:	mov    rbx,QWORD PTR [rsp+0x40]
   140004328:	mov    rsi,QWORD PTR [rsp+0x48]
   14000432d:	add    rsp,0x30
   140004331:	pop    r12
   140004333:	ret    
   140004334:	mov    QWORD PTR [rsp+0x8],rbx
   140004339:	mov    QWORD PTR [rsp+0x10],rsi
   14000433e:	push   rdi
   14000433f:	sub    rsp,0x20
   140004343:	mov    eax,DWORD PTR [rcx+0x18]
   140004346:	xor    esi,esi
   140004348:	mov    rbx,rcx
   14000434b:	and    al,0x3
   14000434d:	cmp    al,0x2
   14000434f:	jne    0x140004390
   140004351:	test   DWORD PTR [rcx+0x18],0x108
   140004358:	je     0x140004390
   14000435a:	mov    edi,DWORD PTR [rcx]
   14000435c:	sub    edi,DWORD PTR [rcx+0x10]
   14000435f:	test   edi,edi
   140004361:	jle    0x140004390
   140004363:	call   0x140003d84
   140004368:	mov    rdx,QWORD PTR [rbx+0x10]
   14000436c:	mov    r8d,edi
   14000436f:	mov    ecx,eax
   140004371:	call   0x140007e58
   140004376:	cmp    eax,edi
   140004378:	jne    0x140004389
   14000437a:	mov    eax,DWORD PTR [rbx+0x18]
   14000437d:	test   al,al
   14000437f:	jns    0x140004390
   140004381:	and    eax,0xfffffffd
   140004384:	mov    DWORD PTR [rbx+0x18],eax
   140004387:	jmp    0x140004390
   140004389:	or     DWORD PTR [rbx+0x18],0x20
   14000438d:	or     esi,0xffffffff
   140004390:	mov    rcx,QWORD PTR [rbx+0x10]
   140004394:	and    DWORD PTR [rbx+0x8],0x0
   140004398:	mov    eax,esi
   14000439a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000439f:	mov    QWORD PTR [rbx],rcx
   1400043a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043a7:	add    rsp,0x20
   1400043ab:	pop    rdi
   1400043ac:	ret    
   1400043ad:	int3   
   1400043ae:	int3   
   1400043af:	int3   
   1400043b0:	rex push rbx
   1400043b2:	sub    rsp,0x20
   1400043b6:	mov    rbx,rcx
   1400043b9:	test   rcx,rcx
   1400043bc:	jne    0x1400043c5
   1400043be:	call   0x1400043f8
   1400043c3:	jmp    0x1400043f1
   1400043c5:	call   0x140004334
   1400043ca:	test   eax,eax
   1400043cc:	je     0x1400043d3
   1400043ce:	or     eax,0xffffffff
   1400043d1:	jmp    0x1400043f1
   1400043d3:	bt     DWORD PTR [rbx+0x18],0xe
   1400043d8:	jae    0x1400043ef
   1400043da:	mov    rcx,rbx
   1400043dd:	call   0x140003d84
   1400043e2:	mov    ecx,eax
   1400043e4:	call   0x140007f8c
   1400043e9:	neg    eax
   1400043eb:	sbb    eax,eax
   1400043ed:	jmp    0x1400043f1
   1400043ef:	xor    eax,eax
   1400043f1:	add    rsp,0x20
   1400043f5:	pop    rbx
   1400043f6:	ret    
   1400043f7:	int3   
   1400043f8:	mov    QWORD PTR [rsp+0x8],rsi
   1400043fd:	mov    QWORD PTR [rsp+0x10],rdi
   140004402:	mov    QWORD PTR [rsp+0x18],r12
   140004407:	push   r13
   140004409:	push   r14
   14000440b:	push   r15
   14000440d:	sub    rsp,0x30
   140004411:	mov    r14d,ecx
   140004414:	xor    r12d,r12d
   140004417:	xor    esi,esi
   140004419:	lea    ecx,[rsi+0x1]
   14000441c:	call   0x140004708
   140004421:	nop
   140004422:	xor    edi,edi
   140004424:	mov    DWORD PTR [rsp+0x20],edi
   140004428:	or     r15d,0xffffffff
   14000442c:	cmp    edi,DWORD PTR [rip+0x111ae]        # 0x1400155e0
   140004432:	jge    0x1400044be
   140004438:	movsxd r13,edi
   14000443b:	mov    rax,QWORD PTR [rip+0x1017e]        # 0x1400145c0
   140004442:	cmp    QWORD PTR [rax+r13*8],0x0
   140004447:	je     0x1400044b3
   140004449:	mov    rdx,QWORD PTR [rax+r13*8]
   14000444d:	test   BYTE PTR [rdx+0x18],0x83
   140004451:	je     0x1400044b3
   140004453:	mov    ecx,edi
   140004455:	call   0x140001be4
   14000445a:	nop
   14000445b:	mov    rax,QWORD PTR [rip+0x1015e]        # 0x1400145c0
   140004462:	mov    rcx,QWORD PTR [rax+r13*8]
   140004466:	test   BYTE PTR [rcx+0x18],0x83
   14000446a:	je     0x1400044a1
   14000446c:	cmp    r14d,0x1
   140004470:	jne    0x140004486
   140004472:	call   0x1400043b0
   140004477:	cmp    eax,r15d
   14000447a:	je     0x1400044a1
   14000447c:	inc    r12d
   14000447f:	mov    DWORD PTR [rsp+0x24],r12d
   140004484:	jmp    0x1400044a1
   140004486:	test   r14d,r14d
   140004489:	jne    0x1400044a1
   14000448b:	test   BYTE PTR [rcx+0x18],0x2
   14000448f:	je     0x1400044a1
   140004491:	call   0x1400043b0
   140004496:	cmp    eax,r15d
   140004499:	cmove  esi,r15d
   14000449d:	mov    DWORD PTR [rsp+0x28],esi
   1400044a1:	mov    rdx,QWORD PTR [rip+0x10118]        # 0x1400145c0
   1400044a8:	mov    rdx,QWORD PTR [rdx+r13*8]
   1400044ac:	mov    ecx,edi
   1400044ae:	call   0x140001c6c
   1400044b3:	inc    edi
   1400044b5:	mov    DWORD PTR [rsp+0x20],edi
   1400044b9:	jmp    0x14000442c
   1400044be:	mov    ecx,0x1
   1400044c3:	call   0x140004608
   1400044c8:	cmp    r14d,0x1
   1400044cc:	cmove  esi,r12d
   1400044d0:	mov    eax,esi
   1400044d2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400044d7:	mov    rdi,QWORD PTR [rsp+0x58]
   1400044dc:	mov    r12,QWORD PTR [rsp+0x60]
   1400044e1:	add    rsp,0x30
   1400044e5:	pop    r15
   1400044e7:	pop    r14
   1400044e9:	pop    r13
   1400044eb:	ret    
   1400044ec:	mov    ecx,0x1
   1400044f1:	jmp    0x1400043f8
   1400044f6:	int3   
   1400044f7:	int3   
   1400044f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400044fd:	mov    QWORD PTR [rsp+0x10],rsi
   140004502:	mov    QWORD PTR [rsp+0x18],rdi
   140004507:	push   r12
   140004509:	sub    rsp,0x20
   14000450d:	lea    r12,[rip+0xe0ac]        # 0x1400125c0
   140004514:	xor    esi,esi
   140004516:	xor    edi,edi
   140004518:	mov    rbx,r12
   14000451b:	cmp    DWORD PTR [rbx+0x8],0x1
   14000451f:	jne    0x140004546
   140004521:	movsxd rax,esi
   140004524:	mov    edx,0xfa0
   140004529:	inc    esi
   14000452b:	lea    rcx,[rax+rax*4]
   14000452f:	lea    rax,[rip+0xf0aa]        # 0x1400135e0
   140004536:	lea    rcx,[rax+rcx*8]
   14000453a:	mov    QWORD PTR [rbx],rcx
   14000453d:	call   0x140006750
   140004542:	test   eax,eax
   140004544:	je     0x140004573
   140004546:	lea    rax,[rip+0xe2b3]        # 0x140012800
   14000454d:	add    rbx,0x10
   140004551:	inc    edi
   140004553:	cmp    rbx,rax
   140004556:	jl     0x14000451b
   140004558:	mov    eax,0x1
   14000455d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004562:	mov    rsi,QWORD PTR [rsp+0x38]
   140004567:	mov    rdi,QWORD PTR [rsp+0x40]
   14000456c:	add    rsp,0x20
   140004570:	pop    r12
   140004572:	ret    
   140004573:	movsxd rax,edi
   140004576:	add    rax,rax
   140004579:	and    QWORD PTR [r12+rax*8],0x0
   14000457e:	xor    eax,eax
   140004580:	jmp    0x14000455d
   140004582:	int3   
   140004583:	int3   
   140004584:	mov    QWORD PTR [rsp+0x8],rbx
   140004589:	mov    QWORD PTR [rsp+0x10],rbp
   14000458e:	mov    QWORD PTR [rsp+0x18],rsi
   140004593:	push   rdi
   140004594:	sub    rsp,0x20
   140004598:	lea    rbx,[rip+0xe021]        # 0x1400125c0
   14000459f:	lea    rbp,[rip+0xe25a]        # 0x140012800
   1400045a6:	mov    rdi,rbx
   1400045a9:	mov    rsi,QWORD PTR [rdi]
   1400045ac:	test   rsi,rsi
   1400045af:	je     0x1400045cc
   1400045b1:	cmp    DWORD PTR [rdi+0x8],0x1
   1400045b5:	je     0x1400045cc
   1400045b7:	mov    rcx,rsi
   1400045ba:	call   QWORD PTR [rip+0xaad0]        # 0x14000f090
   1400045c0:	mov    rcx,rsi
   1400045c3:	call   0x140004244
   1400045c8:	and    QWORD PTR [rdi],0x0
   1400045cc:	add    rdi,0x10
   1400045d0:	cmp    rdi,rbp
   1400045d3:	jl     0x1400045a9
   1400045d5:	mov    rcx,QWORD PTR [rbx]
   1400045d8:	test   rcx,rcx
   1400045db:	je     0x1400045e9
   1400045dd:	cmp    DWORD PTR [rbx+0x8],0x1
   1400045e1:	jne    0x1400045e9
   1400045e3:	call   QWORD PTR [rip+0xaaa7]        # 0x14000f090
   1400045e9:	add    rbx,0x10
   1400045ed:	cmp    rbx,rbp
   1400045f0:	jl     0x1400045d5
   1400045f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045f7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400045fc:	mov    rsi,QWORD PTR [rsp+0x40]
   140004601:	add    rsp,0x20
   140004605:	pop    rdi
   140004606:	ret    
   140004607:	int3   
   140004608:	movsxd rcx,ecx
   14000460b:	lea    rax,[rip+0xdfae]        # 0x1400125c0
   140004612:	add    rcx,rcx
   140004615:	mov    rcx,QWORD PTR [rax+rcx*8]
   140004619:	rex.W jmp QWORD PTR [rip+0xaa18]        # 0x14000f038
   140004620:	mov    QWORD PTR [rsp+0x8],rbx
   140004625:	mov    QWORD PTR [rsp+0x10],rsi
   14000462a:	mov    QWORD PTR [rsp+0x18],rdi
   14000462f:	push   r13
   140004631:	sub    rsp,0x20
   140004635:	movsxd rbx,ecx
   140004638:	mov    esi,0x1
   14000463d:	cmp    QWORD PTR [rip+0xfc0b],0x0        # 0x140014250
   140004645:	jne    0x14000465e
   140004647:	call   0x140005f64
   14000464c:	lea    ecx,[rsi+0x1d]
   14000464f:	call   0x140005d3c
   140004654:	mov    ecx,0xff
   140004659:	call   0x140002674
   14000465e:	mov    rdi,rbx
   140004661:	add    rdi,rdi
   140004664:	lea    r13,[rip+0xdf55]        # 0x1400125c0
   14000466b:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   140004671:	je     0x140004677
   140004673:	mov    eax,esi
   140004675:	jmp    0x1400046f2
   140004677:	mov    ecx,0x28
   14000467c:	call   0x140004044
   140004681:	mov    rbx,rax
   140004684:	test   rax,rax
   140004687:	jne    0x140004698
   140004689:	call   0x140003fbc
   14000468e:	mov    DWORD PTR [rax],0xc
   140004694:	xor    eax,eax
   140004696:	jmp    0x1400046f2
   140004698:	mov    ecx,0xa
   14000469d:	call   0x140004708
   1400046a2:	nop
   1400046a3:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   1400046a9:	jne    0x1400046da
   1400046ab:	mov    edx,0xfa0
   1400046b0:	mov    rcx,rbx
   1400046b3:	call   0x140006750
   1400046b8:	test   eax,eax
   1400046ba:	jne    0x1400046d3
   1400046bc:	mov    rcx,rbx
   1400046bf:	call   0x140004244
   1400046c4:	call   0x140003fbc
   1400046c9:	mov    DWORD PTR [rax],0xc
   1400046cf:	xor    esi,esi
   1400046d1:	jmp    0x1400046e3
   1400046d3:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   1400046d8:	jmp    0x1400046e3
   1400046da:	mov    rcx,rbx
   1400046dd:	call   0x140004244
   1400046e2:	nop
   1400046e3:	mov    rcx,QWORD PTR [rip+0xdf76]        # 0x140012660
   1400046ea:	call   QWORD PTR [rip+0xa948]        # 0x14000f038
   1400046f0:	mov    eax,esi
   1400046f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046f7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400046fc:	mov    rdi,QWORD PTR [rsp+0x40]
   140004701:	add    rsp,0x20
   140004705:	pop    r13
   140004707:	ret    
   140004708:	mov    QWORD PTR [rsp+0x8],rbx
   14000470d:	push   rdi
   14000470e:	sub    rsp,0x20
   140004712:	movsxd rbx,ecx
   140004715:	lea    rdi,[rip+0xdea4]        # 0x1400125c0
   14000471c:	add    rbx,rbx
   14000471f:	cmp    QWORD PTR [rdi+rbx*8],0x0
   140004724:	jne    0x140004737
   140004726:	call   0x140004620
   14000472b:	test   eax,eax
   14000472d:	jne    0x140004737
   14000472f:	lea    ecx,[rax+0x11]
   140004732:	call   0x140002608
   140004737:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000473b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004740:	add    rsp,0x20
   140004744:	pop    rdi
   140004745:	rex.W jmp QWORD PTR [rip+0xa8e4]        # 0x14000f030
   14000474c:	mov    QWORD PTR [rsp+0x8],rbx
   140004751:	push   rdi
   140004752:	sub    rsp,0x30
   140004756:	mov    rbx,r8
   140004759:	mov    rdi,rdx
   14000475c:	test   rcx,rcx
   14000475f:	je     0x140004793
   140004761:	xor    edx,edx
   140004763:	lea    rax,[rdx-0x20]
   140004767:	div    rcx
   14000476a:	cmp    rax,rdi
   14000476d:	jae    0x140004793
   14000476f:	call   0x140003fbc
   140004774:	and    QWORD PTR [rsp+0x20],0x0
   14000477a:	xor    r9d,r9d
   14000477d:	xor    r8d,r8d
   140004780:	xor    edx,edx
   140004782:	xor    ecx,ecx
   140004784:	mov    DWORD PTR [rax],0xc
   14000478a:	call   0x140003eec
   14000478f:	xor    eax,eax
   140004791:	jmp    0x1400047f0
   140004793:	imul   rdi,rcx
   140004797:	mov    eax,0x1
   14000479c:	test   rdi,rdi
   14000479f:	cmove  rdi,rax
   1400047a3:	xor    eax,eax
   1400047a5:	cmp    rdi,0xffffffffffffffe0
   1400047a9:	ja     0x1400047c3
   1400047ab:	mov    rcx,QWORD PTR [rip+0xfa9e]        # 0x140014250
   1400047b2:	lea    edx,[rax+0x8]
   1400047b5:	mov    r8,rdi
   1400047b8:	call   QWORD PTR [rip+0xa92a]        # 0x14000f0e8
   1400047be:	test   rax,rax
   1400047c1:	jne    0x1400047f0
   1400047c3:	cmp    DWORD PTR [rip+0xfa96],0x0        # 0x140014260
   1400047ca:	je     0x1400047e5
   1400047cc:	mov    rcx,rdi
   1400047cf:	call   0x140006790
   1400047d4:	test   eax,eax
   1400047d6:	jne    0x1400047a3
   1400047d8:	test   rbx,rbx
   1400047db:	je     0x14000478f
   1400047dd:	mov    DWORD PTR [rbx],0xc
   1400047e3:	jmp    0x14000478f
   1400047e5:	test   rbx,rbx
   1400047e8:	je     0x1400047f0
   1400047ea:	mov    DWORD PTR [rbx],0xc
   1400047f0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400047f5:	add    rsp,0x30
   1400047f9:	pop    rdi
   1400047fa:	ret    
   1400047fb:	int3   
   1400047fc:	mov    QWORD PTR [rsp+0x8],rbx
   140004801:	mov    QWORD PTR [rsp+0x10],rbp
   140004806:	mov    QWORD PTR [rsp+0x18],rsi
   14000480b:	push   rdi
   14000480c:	sub    rsp,0x30
   140004810:	mov    rsi,rdx
   140004813:	mov    rbp,rcx
   140004816:	test   rcx,rcx
   140004819:	je     0x14000491a
   14000481f:	test   rdx,rdx
   140004822:	je     0x14000491a
   140004828:	xor    edi,edi
   14000482a:	mov    rbx,rcx
   14000482d:	test   r8,r8
   140004830:	je     0x140004853
   140004832:	mov    al,BYTE PTR [r8]
   140004835:	test   al,al
   140004837:	je     0x140004853
   140004839:	mov    edi,0x2
   14000483e:	cmp    rdx,rdi
   140004841:	jbe    0x140004903
   140004847:	lea    rbx,[rcx+0x1]
   14000484b:	mov    BYTE PTR [rcx],al
   14000484d:	mov    BYTE PTR [rbx],0x3a
   140004850:	inc    rbx
   140004853:	mov    rdx,r9
   140004856:	test   r9,r9
   140004859:	je     0x14000489c
   14000485b:	cmp    BYTE PTR [r9],0x0
   14000485f:	je     0x14000489c
   140004861:	inc    rdi
   140004864:	cmp    rdi,rsi
   140004867:	jae    0x140004903
   14000486d:	mov    al,BYTE PTR [rdx]
   14000486f:	inc    rdx
   140004872:	mov    BYTE PTR [rbx],al
   140004874:	inc    rbx
   140004877:	cmp    BYTE PTR [rdx],0x0
   14000487a:	jne    0x140004861
   14000487c:	mov    rcx,r9
   14000487f:	call   0x14000815c
   140004884:	cmp    BYTE PTR [rax],0x2f
   140004887:	je     0x14000489c
   140004889:	cmp    BYTE PTR [rax],0x5c
   14000488c:	je     0x14000489c
   14000488e:	inc    rdi
   140004891:	cmp    rdi,rsi
   140004894:	jae    0x140004903
   140004896:	mov    BYTE PTR [rbx],0x5c
   140004899:	inc    rbx
   14000489c:	mov    rcx,QWORD PTR [rsp+0x60]
   1400048a1:	test   rcx,rcx
   1400048a4:	je     0x1400048bf
   1400048a6:	jmp    0x1400048ba
   1400048a8:	inc    rdi
   1400048ab:	cmp    rdi,rsi
   1400048ae:	jae    0x140004903
   1400048b0:	mov    al,BYTE PTR [rcx]
   1400048b2:	mov    BYTE PTR [rbx],al
   1400048b4:	inc    rbx
   1400048b7:	inc    rcx
   1400048ba:	cmp    BYTE PTR [rcx],0x0
   1400048bd:	jne    0x1400048a8
   1400048bf:	mov    rcx,QWORD PTR [rsp+0x68]
   1400048c4:	test   rcx,rcx
   1400048c7:	je     0x1400048fa
   1400048c9:	mov    al,BYTE PTR [rcx]
   1400048cb:	test   al,al
   1400048cd:	je     0x1400048fa
   1400048cf:	cmp    al,0x2e
   1400048d1:	je     0x1400048f5
   1400048d3:	inc    rdi
   1400048d6:	cmp    rdi,rsi
   1400048d9:	jae    0x140004903
   1400048db:	mov    BYTE PTR [rbx],0x2e
   1400048de:	inc    rbx
   1400048e1:	jmp    0x1400048f5
   1400048e3:	inc    rdi
   1400048e6:	cmp    rdi,rsi
   1400048e9:	jae    0x140004903
   1400048eb:	mov    al,BYTE PTR [rcx]
   1400048ed:	mov    BYTE PTR [rbx],al
   1400048ef:	inc    rbx
   1400048f2:	inc    rcx
   1400048f5:	cmp    BYTE PTR [rcx],0x0
   1400048f8:	jne    0x1400048e3
   1400048fa:	lea    rax,[rdi+0x1]
   1400048fe:	cmp    rax,rsi
   140004901:	jbe    0x140004913
   140004903:	mov    BYTE PTR [rbp+0x0],0x0
   140004907:	call   0x140003fbc
   14000490c:	mov    ebx,0x22
   140004911:	jmp    0x140004924
   140004913:	mov    BYTE PTR [rbx],0x0
   140004916:	xor    eax,eax
   140004918:	jmp    0x14000493d
   14000491a:	call   0x140003fbc
   14000491f:	mov    ebx,0x16
   140004924:	and    QWORD PTR [rsp+0x20],0x0
   14000492a:	xor    r9d,r9d
   14000492d:	xor    r8d,r8d
   140004930:	xor    edx,edx
   140004932:	xor    ecx,ecx
   140004934:	mov    DWORD PTR [rax],ebx
   140004936:	call   0x140003eec
   14000493b:	mov    eax,ebx
   14000493d:	mov    rbx,QWORD PTR [rsp+0x40]
   140004942:	mov    rbp,QWORD PTR [rsp+0x48]
   140004947:	mov    rsi,QWORD PTR [rsp+0x50]
   14000494c:	add    rsp,0x30
   140004950:	pop    rdi
   140004951:	ret    
   140004952:	int3   
   140004953:	int3   
   140004954:	mov    QWORD PTR [rsp+0x8],rbx
   140004959:	mov    QWORD PTR [rsp+0x10],rsi
   14000495e:	push   rdi
   14000495f:	sub    rsp,0x40
   140004963:	mov    ebx,edx
   140004965:	mov    rdx,rcx
   140004968:	lea    rcx,[rsp+0x20]
   14000496d:	mov    edi,r9d
   140004970:	mov    esi,r8d
   140004973:	call   0x140002370
   140004978:	mov    rax,QWORD PTR [rsp+0x28]
   14000497d:	movzx  r11d,bl
   140004981:	test   BYTE PTR [r11+rax*1+0x1d],dil
   140004986:	jne    0x1400049a7
   140004988:	test   esi,esi
   14000498a:	je     0x1400049a1
   14000498c:	mov    rax,QWORD PTR [rsp+0x20]
   140004991:	mov    rcx,QWORD PTR [rax+0x140]
   140004998:	movzx  eax,WORD PTR [rcx+r11*2]
   14000499d:	and    eax,esi
   14000499f:	jmp    0x1400049a3
   1400049a1:	xor    eax,eax
   1400049a3:	test   eax,eax
   1400049a5:	je     0x1400049ac
   1400049a7:	mov    eax,0x1
   1400049ac:	cmp    BYTE PTR [rsp+0x38],0x0
   1400049b1:	je     0x1400049bf
   1400049b3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400049b8:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400049bf:	mov    rbx,QWORD PTR [rsp+0x50]
   1400049c4:	mov    rsi,QWORD PTR [rsp+0x58]
   1400049c9:	add    rsp,0x40
   1400049cd:	pop    rdi
   1400049ce:	ret    
   1400049cf:	int3   
   1400049d0:	mov    rax,rdx
   1400049d3:	mov    edx,ecx
   1400049d5:	mov    r9d,0x4
   1400049db:	mov    rcx,rax
   1400049de:	xor    r8d,r8d
   1400049e1:	jmp    0x140004954
   1400049e6:	int3   
   1400049e7:	int3   
   1400049e8:	mov    edx,ecx
   1400049ea:	mov    r9d,0x4
   1400049f0:	xor    r8d,r8d
   1400049f3:	xor    ecx,ecx
   1400049f5:	jmp    0x140004954
   1400049fa:	int3   
   1400049fb:	int3   
   1400049fc:	sub    rsp,0x38
   140004a00:	and    QWORD PTR [rsp+0x20],0x0
   140004a06:	call   0x140008164
   140004a0b:	add    rsp,0x38
   140004a0f:	ret    
   140004a10:	mov    QWORD PTR [rsp+0x8],rcx
   140004a15:	sub    rsp,0x88
   140004a1c:	lea    rcx,[rip+0xee8d]        # 0x1400138b0
   140004a23:	call   QWORD PTR [rip+0xa6a7]        # 0x14000f0d0
   140004a29:	mov    r11,QWORD PTR [rip+0xef78]        # 0x1400139a8
   140004a30:	mov    QWORD PTR [rsp+0x58],r11
   140004a35:	xor    r8d,r8d
   140004a38:	lea    rdx,[rsp+0x60]
   140004a3d:	mov    rcx,QWORD PTR [rsp+0x58]
   140004a42:	call   0x14000be1e
   140004a47:	mov    QWORD PTR [rsp+0x50],rax
   140004a4c:	cmp    QWORD PTR [rsp+0x50],0x0
   140004a52:	je     0x140004a95
   140004a54:	mov    QWORD PTR [rsp+0x38],0x0
   140004a5d:	lea    rax,[rsp+0x48]
   140004a62:	mov    QWORD PTR [rsp+0x30],rax
   140004a67:	lea    rax,[rsp+0x40]
   140004a6c:	mov    QWORD PTR [rsp+0x28],rax
   140004a71:	lea    rax,[rip+0xee38]        # 0x1400138b0
   140004a78:	mov    QWORD PTR [rsp+0x20],rax
   140004a7d:	mov    r9,QWORD PTR [rsp+0x50]
   140004a82:	mov    r8,QWORD PTR [rsp+0x58]
   140004a87:	mov    rdx,QWORD PTR [rsp+0x60]
   140004a8c:	xor    ecx,ecx
   140004a8e:	call   0x14000be18
   140004a93:	jmp    0x140004ab7
   140004a95:	mov    rax,QWORD PTR [rsp+0x88]
   140004a9d:	mov    QWORD PTR [rip+0xef04],rax        # 0x1400139a8
   140004aa4:	lea    rax,[rsp+0x88]
   140004aac:	add    rax,0x8
   140004ab0:	mov    QWORD PTR [rip+0xee91],rax        # 0x140013948
   140004ab7:	mov    rax,QWORD PTR [rip+0xeeea]        # 0x1400139a8
   140004abe:	mov    QWORD PTR [rip+0xed5b],rax        # 0x140013820
   140004ac5:	mov    rax,QWORD PTR [rsp+0x90]
   140004acd:	mov    QWORD PTR [rip+0xee5c],rax        # 0x140013930
   140004ad4:	mov    DWORD PTR [rip+0xed32],0xc0000409        # 0x140013810
   140004ade:	mov    DWORD PTR [rip+0xed2c],0x1        # 0x140013814
   140004ae8:	mov    rax,QWORD PTR [rip+0xd8d1]        # 0x1400123c0
   140004aef:	mov    QWORD PTR [rsp+0x68],rax
   140004af4:	mov    rax,QWORD PTR [rip+0xd8cd]        # 0x1400123c8
   140004afb:	mov    QWORD PTR [rsp+0x70],rax
   140004b00:	call   QWORD PTR [rip+0xa5b2]        # 0x14000f0b8
   140004b06:	mov    DWORD PTR [rip+0xed9c],eax        # 0x1400138a8
   140004b0c:	mov    ecx,0x1
   140004b11:	call   0x1400073c4
   140004b16:	xor    ecx,ecx
   140004b18:	call   QWORD PTR [rip+0xa592]        # 0x14000f0b0
   140004b1e:	lea    rcx,[rip+0xa94b]        # 0x14000f470
   140004b25:	call   QWORD PTR [rip+0xa57d]        # 0x14000f0a8
   140004b2b:	cmp    DWORD PTR [rip+0xed76],0x0        # 0x1400138a8
   140004b32:	jne    0x140004b3e
   140004b34:	mov    ecx,0x1
   140004b39:	call   0x1400073c4
   140004b3e:	call   QWORD PTR [rip+0xa55c]        # 0x14000f0a0
   140004b44:	mov    edx,0xc0000409
   140004b49:	mov    rcx,rax
   140004b4c:	call   QWORD PTR [rip+0xa546]        # 0x14000f098
   140004b52:	add    rsp,0x88
   140004b59:	ret    
   140004b5a:	int3   
   140004b5b:	int3   
   140004b5c:	mov    QWORD PTR [rsp+0x8],rbx
   140004b61:	mov    QWORD PTR [rsp+0x10],rbp
   140004b66:	mov    QWORD PTR [rsp+0x18],rsi
   140004b6b:	push   rdi
   140004b6c:	sub    rsp,0x20
   140004b70:	lea    rbx,[rcx+0x1c]
   140004b74:	mov    rbp,rcx
   140004b77:	mov    esi,0x101
   140004b7c:	mov    rcx,rbx
   140004b7f:	mov    r8,rsi
   140004b82:	xor    edx,edx
   140004b84:	call   0x140001cf0
   140004b89:	xor    r11d,r11d
   140004b8c:	lea    rdi,[rbp+0x10]
   140004b90:	lea    ecx,[r11+0x6]
   140004b94:	movzx  eax,r11w
   140004b98:	mov    DWORD PTR [rbp+0x4],r11d
   140004b9c:	mov    DWORD PTR [rbp+0x8],r11d
   140004ba0:	mov    DWORD PTR [rbp+0xc],r11d
   140004ba4:	rep stos WORD PTR es:[rdi],ax
   140004ba7:	lea    rdi,[rip+0xdc52]        # 0x140012800
   140004bae:	sub    rdi,rbp
   140004bb1:	mov    al,BYTE PTR [rdi+rbx*1]
   140004bb4:	mov    BYTE PTR [rbx],al
   140004bb6:	inc    rbx
   140004bb9:	sub    rsi,0x1
   140004bbd:	jne    0x140004bb1
   140004bbf:	lea    rcx,[rbp+0x11d]
   140004bc6:	mov    edx,0x100
   140004bcb:	mov    al,BYTE PTR [rcx+rdi*1]
   140004bce:	mov    BYTE PTR [rcx],al
   140004bd0:	inc    rcx
   140004bd3:	sub    rdx,0x1
   140004bd7:	jne    0x140004bcb
   140004bd9:	mov    rbx,QWORD PTR [rsp+0x30]
   140004bde:	mov    rbp,QWORD PTR [rsp+0x38]
   140004be3:	mov    rsi,QWORD PTR [rsp+0x40]
   140004be8:	add    rsp,0x20
   140004bec:	pop    rdi
   140004bed:	ret    
   140004bee:	int3   
   140004bef:	int3   
   140004bf0:	mov    QWORD PTR [rsp+0x10],rbx
   140004bf5:	mov    QWORD PTR [rsp+0x18],rsi
   140004bfa:	push   rdi
   140004bfb:	sub    rsp,0x580
   140004c02:	mov    rax,QWORD PTR [rip+0xd7b7]        # 0x1400123c0
   140004c09:	xor    rax,rsp
   140004c0c:	mov    QWORD PTR [rsp+0x570],rax
   140004c14:	mov    rsi,rcx
   140004c17:	mov    ecx,DWORD PTR [rcx+0x4]
   140004c1a:	lea    rdx,[rsp+0x50]
   140004c1f:	call   QWORD PTR [rip+0xa4cb]        # 0x14000f0f0
   140004c25:	mov    ebx,0x100
   140004c2a:	test   eax,eax
   140004c2c:	je     0x140004d6f
   140004c32:	xor    eax,eax
   140004c34:	lea    rdx,[rsp+0x70]
   140004c39:	mov    BYTE PTR [rdx],al
   140004c3b:	inc    eax
   140004c3d:	inc    rdx
   140004c40:	cmp    eax,ebx
   140004c42:	jb     0x140004c39
   140004c44:	mov    al,BYTE PTR [rsp+0x56]
   140004c48:	mov    BYTE PTR [rsp+0x70],0x20
   140004c4d:	lea    rdi,[rsp+0x56]
   140004c52:	jmp    0x140004c7d
   140004c54:	movzx  edx,BYTE PTR [rdi+0x1]
   140004c58:	movzx  r8d,al
   140004c5c:	cmp    r8d,edx
   140004c5f:	ja     0x140004c77
   140004c61:	sub    edx,r8d
   140004c64:	mov    rax,r8
   140004c67:	lea    rcx,[rsp+r8*1+0x70]
   140004c6c:	lea    r8d,[rdx+0x1]
   140004c70:	mov    dl,0x20
   140004c72:	call   0x140001cf0
   140004c77:	add    rdi,0x2
   140004c7b:	mov    al,BYTE PTR [rdi]
   140004c7d:	test   al,al
   140004c7f:	jne    0x140004c54
   140004c81:	mov    eax,DWORD PTR [rsi+0xc]
   140004c84:	and    DWORD PTR [rsp+0x38],0x0
   140004c89:	lea    r8,[rsp+0x70]
   140004c8e:	mov    DWORD PTR [rsp+0x30],eax
   140004c92:	mov    eax,DWORD PTR [rsi+0x4]
   140004c95:	mov    r9d,ebx
   140004c98:	mov    DWORD PTR [rsp+0x28],eax
   140004c9c:	lea    rax,[rsp+0x370]
   140004ca4:	mov    edx,0x1
   140004ca9:	xor    ecx,ecx
   140004cab:	mov    QWORD PTR [rsp+0x20],rax
   140004cb0:	call   0x140008c50
   140004cb5:	and    DWORD PTR [rsp+0x40],0x0
   140004cba:	mov    eax,DWORD PTR [rsi+0x4]
   140004cbd:	mov    edx,DWORD PTR [rsi+0xc]
   140004cc0:	mov    DWORD PTR [rsp+0x38],eax
   140004cc4:	lea    rax,[rsp+0x170]
   140004ccc:	mov    DWORD PTR [rsp+0x30],ebx
   140004cd0:	mov    QWORD PTR [rsp+0x28],rax
   140004cd5:	lea    r9,[rsp+0x70]
   140004cda:	mov    r8d,ebx
   140004cdd:	xor    ecx,ecx
   140004cdf:	mov    DWORD PTR [rsp+0x20],ebx
   140004ce3:	call   0x14000894c
   140004ce8:	and    DWORD PTR [rsp+0x40],0x0
   140004ced:	mov    eax,DWORD PTR [rsi+0x4]
   140004cf0:	mov    edx,DWORD PTR [rsi+0xc]
   140004cf3:	mov    DWORD PTR [rsp+0x38],eax
   140004cf7:	lea    rax,[rsp+0x270]
   140004cff:	mov    DWORD PTR [rsp+0x30],ebx
   140004d03:	mov    QWORD PTR [rsp+0x28],rax
   140004d08:	lea    r9,[rsp+0x70]
   140004d0d:	mov    r8d,0x200
   140004d13:	xor    ecx,ecx
   140004d15:	mov    DWORD PTR [rsp+0x20],ebx
   140004d19:	call   0x14000894c
   140004d1e:	lea    r11,[rsp+0x370]
   140004d26:	lea    rcx,[rsi+0x1d]
   140004d2a:	xor    edx,edx
   140004d2c:	test   BYTE PTR [r11],0x1
   140004d30:	je     0x140004d3e
   140004d32:	or     BYTE PTR [rcx],0x10
   140004d35:	mov    al,BYTE PTR [rsp+rdx*1+0x170]
   140004d3c:	jmp    0x140004d4e
   140004d3e:	test   BYTE PTR [r11],0x2
   140004d42:	je     0x140004d56
   140004d44:	or     BYTE PTR [rcx],0x20
   140004d47:	mov    al,BYTE PTR [rsp+rdx*1+0x270]
   140004d4e:	mov    BYTE PTR [rcx+0x100],al
   140004d54:	jmp    0x140004d5d
   140004d56:	mov    BYTE PTR [rcx+0x100],0x0
   140004d5d:	inc    rcx
   140004d60:	inc    rdx
   140004d63:	add    r11,0x2
   140004d67:	sub    rbx,0x1
   140004d6b:	jne    0x140004d2c
   140004d6d:	jmp    0x140004dae
   140004d6f:	xor    edx,edx
   140004d71:	lea    rcx,[rsi+0x1d]
   140004d75:	lea    r8d,[rdx-0x61]
   140004d79:	lea    eax,[r8+0x20]
   140004d7d:	cmp    eax,0x19
   140004d80:	ja     0x140004d8a
   140004d82:	or     BYTE PTR [rcx],0x10
   140004d85:	lea    eax,[rdx+0x20]
   140004d88:	jmp    0x140004d96
   140004d8a:	cmp    r8d,0x19
   140004d8e:	ja     0x140004d9e
   140004d90:	or     BYTE PTR [rcx],0x20
   140004d93:	lea    eax,[rdx-0x20]
   140004d96:	mov    BYTE PTR [rcx+0x100],al
   140004d9c:	jmp    0x140004da5
   140004d9e:	mov    BYTE PTR [rcx+0x100],0x0
   140004da5:	inc    edx
   140004da7:	inc    rcx
   140004daa:	cmp    edx,ebx
   140004dac:	jb     0x140004d75
   140004dae:	mov    rcx,QWORD PTR [rsp+0x570]
   140004db6:	xor    rcx,rsp
   140004db9:	call   0x140002350
   140004dbe:	lea    r11,[rsp+0x580]
   140004dc6:	mov    rbx,QWORD PTR [r11+0x18]
   140004dca:	mov    rsi,QWORD PTR [r11+0x20]
   140004dce:	mov    rsp,r11
   140004dd1:	pop    rdi
   140004dd2:	ret    
   140004dd3:	int3   
   140004dd4:	mov    QWORD PTR [rsp+0x10],rbx
   140004dd9:	push   rdi
   140004dda:	sub    rsp,0x20
   140004dde:	call   0x1400058c0
   140004de3:	mov    rdi,rax
   140004de6:	mov    ecx,DWORD PTR [rax+0xc8]
   140004dec:	test   DWORD PTR [rip+0xdf46],ecx        # 0x140012d38
   140004df2:	je     0x140004e07
   140004df4:	cmp    QWORD PTR [rax+0xc0],0x0
   140004dfc:	je     0x140004e07
   140004dfe:	mov    rbx,QWORD PTR [rax+0xb8]
   140004e05:	jmp    0x140004e75
   140004e07:	mov    ecx,0xd
   140004e0c:	call   0x140004708
   140004e11:	nop
   140004e12:	mov    rbx,QWORD PTR [rdi+0xb8]
   140004e19:	mov    QWORD PTR [rsp+0x30],rbx
   140004e1e:	cmp    rbx,QWORD PTR [rip+0xde0b]        # 0x140012c30
   140004e25:	je     0x140004e6b
   140004e27:	test   rbx,rbx
   140004e2a:	je     0x140004e48
   140004e2c:	lock add DWORD PTR [rbx],0xffffffff
   140004e30:	jne    0x140004e48
   140004e32:	lea    rax,[rip+0xd9c7]        # 0x140012800
   140004e39:	mov    rcx,QWORD PTR [rsp+0x30]
   140004e3e:	cmp    rcx,rax
   140004e41:	je     0x140004e48
   140004e43:	call   0x140004244
   140004e48:	mov    rax,QWORD PTR [rip+0xdde1]        # 0x140012c30
   140004e4f:	mov    QWORD PTR [rdi+0xb8],rax
   140004e56:	mov    rax,QWORD PTR [rip+0xddd3]        # 0x140012c30
   140004e5d:	mov    QWORD PTR [rsp+0x30],rax
   140004e62:	lock add DWORD PTR [rax],0x1
   140004e66:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e6b:	mov    ecx,0xd
   140004e70:	call   0x140004608
   140004e75:	test   rbx,rbx
   140004e78:	jne    0x140004e82
   140004e7a:	lea    ecx,[rbx+0x20]
   140004e7d:	call   0x140002608
   140004e82:	mov    rax,rbx
   140004e85:	mov    rbx,QWORD PTR [rsp+0x38]
   140004e8a:	add    rsp,0x20
   140004e8e:	pop    rdi
   140004e8f:	ret    
   140004e90:	rex push rbx
   140004e92:	sub    rsp,0x40
   140004e96:	mov    ebx,ecx
   140004e98:	lea    rcx,[rsp+0x20]
   140004e9d:	xor    edx,edx
   140004e9f:	call   0x140002370
   140004ea4:	and    DWORD PTR [rip+0xeed5],0x0        # 0x140013d80
   140004eab:	cmp    ebx,0xfffffffe
   140004eae:	jne    0x140004ed5
   140004eb0:	mov    DWORD PTR [rip+0xeec6],0x1        # 0x140013d80
   140004eba:	call   QWORD PTR [rip+0xa240]        # 0x14000f100
   140004ec0:	cmp    BYTE PTR [rsp+0x38],0x0
   140004ec5:	je     0x140004f1a
   140004ec7:	mov    rcx,QWORD PTR [rsp+0x30]
   140004ecc:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140004ed3:	jmp    0x140004f1a
   140004ed5:	cmp    ebx,0xfffffffd
   140004ed8:	jne    0x140004eec
   140004eda:	mov    DWORD PTR [rip+0xee9c],0x1        # 0x140013d80
   140004ee4:	call   QWORD PTR [rip+0xa20e]        # 0x14000f0f8
   140004eea:	jmp    0x140004ec0
   140004eec:	cmp    ebx,0xfffffffc
   140004eef:	jne    0x140004f05
   140004ef1:	mov    rax,QWORD PTR [rsp+0x20]
   140004ef6:	mov    DWORD PTR [rip+0xee80],0x1        # 0x140013d80
   140004f00:	mov    eax,DWORD PTR [rax+0x4]
   140004f03:	jmp    0x140004ec0
   140004f05:	cmp    BYTE PTR [rsp+0x38],0x0
   140004f0a:	je     0x140004f18
   140004f0c:	mov    rax,QWORD PTR [rsp+0x30]
   140004f11:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140004f18:	mov    eax,ebx
   140004f1a:	add    rsp,0x40
   140004f1e:	pop    rbx
   140004f1f:	ret    
   140004f20:	mov    QWORD PTR [rsp+0x18],rbx
   140004f25:	push   rbp
   140004f26:	push   rsi
   140004f27:	push   rdi
   140004f28:	push   r12
   140004f2a:	push   r13
   140004f2c:	sub    rsp,0x40
   140004f30:	mov    rax,QWORD PTR [rip+0xd489]        # 0x1400123c0
   140004f37:	xor    rax,rsp
   140004f3a:	mov    QWORD PTR [rsp+0x38],rax
   140004f3f:	mov    rsi,rdx
   140004f42:	call   0x140004e90
   140004f47:	xor    ebx,ebx
   140004f49:	mov    edi,eax
   140004f4b:	cmp    eax,ebx
   140004f4d:	jne    0x140004f5c
   140004f4f:	mov    rcx,rsi
   140004f52:	call   0x140004b5c
   140004f57:	jmp    0x140005174
   140004f5c:	lea    r13,[rip+0xdcdd]        # 0x140012c40
   140004f63:	mov    ecx,ebx
   140004f65:	mov    rbp,rbx
   140004f68:	mov    rax,r13
   140004f6b:	mov    r12d,0x1
   140004f71:	cmp    DWORD PTR [rax],edi
   140004f73:	je     0x1400050a0
   140004f79:	add    ecx,r12d
   140004f7c:	add    rbp,r12
   140004f7f:	add    rax,0x30
   140004f83:	cmp    ecx,0x5
   140004f86:	jb     0x140004f71
   140004f88:	cmp    edi,0xfde8
   140004f8e:	je     0x140005098
   140004f94:	cmp    edi,0xfde9
   140004f9a:	je     0x140005098
   140004fa0:	movzx  ecx,di
   140004fa3:	call   QWORD PTR [rip+0xa15f]        # 0x14000f108
   140004fa9:	cmp    eax,ebx
   140004fab:	je     0x140005098
   140004fb1:	lea    rdx,[rsp+0x20]
   140004fb6:	mov    ecx,edi
   140004fb8:	call   QWORD PTR [rip+0xa132]        # 0x14000f0f0
   140004fbe:	cmp    eax,ebx
   140004fc0:	je     0x14000508c
   140004fc6:	lea    rcx,[rsi+0x1c]
   140004fca:	xor    edx,edx
   140004fcc:	mov    r8d,0x101
   140004fd2:	call   0x140001cf0
   140004fd7:	mov    DWORD PTR [rsi+0x4],edi
   140004fda:	mov    DWORD PTR [rsi+0xc],ebx
   140004fdd:	cmp    DWORD PTR [rsp+0x20],r12d
   140004fe2:	jbe    0x140005075
   140004fe8:	lea    rax,[rsp+0x26]
   140004fed:	cmp    BYTE PTR [rsp+0x26],bl
   140004ff1:	je     0x140005020
   140004ff3:	cmp    BYTE PTR [rax+0x1],bl
   140004ff6:	je     0x140005020
   140004ff8:	movzx  edi,BYTE PTR [rax]
   140004ffb:	movzx  ecx,BYTE PTR [rax+0x1]
   140004fff:	cmp    edi,ecx
   140005001:	ja     0x140005018
   140005003:	sub    ecx,edi
   140005005:	lea    rdx,[rdi+rsi*1+0x1d]
   14000500a:	add    ecx,r12d
   14000500d:	or     BYTE PTR [rdx],0x4
   140005010:	add    rdx,r12
   140005013:	sub    rcx,r12
   140005016:	jne    0x14000500d
   140005018:	add    rax,0x2
   14000501c:	cmp    BYTE PTR [rax],bl
   14000501e:	jne    0x140004ff3
   140005020:	lea    rax,[rsi+0x1e]
   140005024:	mov    ecx,0xfe
   140005029:	or     BYTE PTR [rax],0x8
   14000502c:	add    rax,r12
   14000502f:	sub    rcx,r12
   140005032:	jne    0x140005029
   140005034:	mov    ecx,DWORD PTR [rsi+0x4]
   140005037:	sub    ecx,0x3a4
   14000503d:	je     0x140005067
   14000503f:	sub    ecx,0x4
   140005042:	je     0x140005060
   140005044:	sub    ecx,0xd
   140005047:	je     0x140005059
   140005049:	cmp    ecx,r12d
   14000504c:	je     0x140005052
   14000504e:	mov    eax,ebx
   140005050:	jmp    0x14000506c
   140005052:	mov    eax,0x404
   140005057:	jmp    0x14000506c
   140005059:	mov    eax,0x412
   14000505e:	jmp    0x14000506c
   140005060:	mov    eax,0x804
   140005065:	jmp    0x14000506c
   140005067:	mov    eax,0x411
   14000506c:	mov    DWORD PTR [rsi+0xc],eax
   14000506f:	mov    DWORD PTR [rsi+0x8],r12d
   140005073:	jmp    0x140005078
   140005075:	mov    DWORD PTR [rsi+0x8],ebx
   140005078:	lea    rdi,[rsi+0x10]
   14000507c:	movzx  eax,bx
   14000507f:	mov    ecx,0x6
   140005084:	rep stos WORD PTR es:[rdi],ax
   140005087:	jmp    0x14000516c
   14000508c:	cmp    DWORD PTR [rip+0xecee],ebx        # 0x140013d80
   140005092:	jne    0x140004f4f
   140005098:	or     eax,0xffffffff
   14000509b:	jmp    0x140005176
   1400050a0:	lea    rcx,[rsi+0x1c]
   1400050a4:	xor    edx,edx
   1400050a6:	mov    r8d,0x101
   1400050ac:	call   0x140001cf0
   1400050b1:	lea    rbp,[rbp+rbp*2+0x0]
   1400050b6:	lea    r11,[rip+0xdb7b]        # 0x140012c38
   1400050bd:	add    rbp,rbp
   1400050c0:	mov    r10d,0x4
   1400050c6:	lea    r8,[r13+rbp*8+0x10]
   1400050cb:	mov    rcx,r8
   1400050ce:	cmp    BYTE PTR [r8],bl
   1400050d1:	je     0x140005104
   1400050d3:	cmp    BYTE PTR [rcx+0x1],bl
   1400050d6:	je     0x140005104
   1400050d8:	movzx  edx,BYTE PTR [rcx]
   1400050db:	movzx  eax,BYTE PTR [rcx+0x1]
   1400050df:	cmp    edx,eax
   1400050e1:	ja     0x1400050fc
   1400050e3:	lea    r9,[rdx+rsi*1+0x1d]
   1400050e8:	mov    al,BYTE PTR [r11]
   1400050eb:	add    edx,r12d
   1400050ee:	or     BYTE PTR [r9],al
   1400050f1:	movzx  eax,BYTE PTR [rcx+0x1]
   1400050f5:	add    r9,r12
   1400050f8:	cmp    edx,eax
   1400050fa:	jbe    0x1400050e8
   1400050fc:	add    rcx,0x2
   140005100:	cmp    BYTE PTR [rcx],bl
   140005102:	jne    0x1400050d3
   140005104:	add    r8,0x8
   140005108:	add    r11,r12
   14000510b:	sub    r10,r12
   14000510e:	jne    0x1400050cb
   140005110:	mov    DWORD PTR [rsi+0x4],edi
   140005113:	sub    edi,0x3a4
   140005119:	mov    DWORD PTR [rsi+0x8],r12d
   14000511d:	je     0x140005143
   14000511f:	sub    edi,0x4
   140005122:	je     0x14000513c
   140005124:	sub    edi,0xd
   140005127:	je     0x140005135
   140005129:	cmp    edi,r12d
   14000512c:	jne    0x140005148
   14000512e:	mov    ebx,0x404
   140005133:	jmp    0x140005148
   140005135:	mov    ebx,0x412
   14000513a:	jmp    0x140005148
   14000513c:	mov    ebx,0x804
   140005141:	jmp    0x140005148
   140005143:	mov    ebx,0x411
   140005148:	mov    DWORD PTR [rsi+0xc],ebx
   14000514b:	lea    rdx,[rsi+0x10]
   14000514f:	lea    rdi,[r13+rbp*8+0x4]
   140005154:	mov    ecx,0x6
   140005159:	movzx  eax,WORD PTR [rdi]
   14000515c:	add    rdi,0x2
   140005160:	mov    WORD PTR [rdx],ax
   140005163:	add    rdx,0x2
   140005167:	sub    rcx,r12
   14000516a:	jne    0x140005159
   14000516c:	mov    rcx,rsi
   14000516f:	call   0x140004bf0
   140005174:	xor    eax,eax
   140005176:	mov    rcx,QWORD PTR [rsp+0x38]
   14000517b:	xor    rcx,rsp
   14000517e:	call   0x140002350
   140005183:	mov    rbx,QWORD PTR [rsp+0x80]
   14000518b:	add    rsp,0x40
   14000518f:	pop    r13
   140005191:	pop    r12
   140005193:	pop    rdi
   140005194:	pop    rsi
   140005195:	pop    rbp
   140005196:	ret    
   140005197:	int3   
   140005198:	mov    rax,rsp
   14000519b:	mov    QWORD PTR [rax+0x8],rbx
   14000519f:	mov    QWORD PTR [rax+0x10],rsi
   1400051a3:	mov    QWORD PTR [rax+0x18],rdi
   1400051a7:	mov    QWORD PTR [rax+0x20],r12
   1400051ab:	push   r13
   1400051ad:	sub    rsp,0x30
   1400051b1:	mov    edi,ecx
   1400051b3:	or     r13d,0xffffffff
   1400051b7:	call   0x1400058c0
   1400051bc:	mov    rsi,rax
   1400051bf:	call   0x140004dd4
   1400051c4:	mov    rbx,QWORD PTR [rsi+0xb8]
   1400051cb:	mov    ecx,edi
   1400051cd:	call   0x140004e90
   1400051d2:	mov    r12d,eax
   1400051d5:	cmp    eax,DWORD PTR [rbx+0x4]
   1400051d8:	je     0x14000536d
   1400051de:	mov    ecx,0x220
   1400051e3:	call   0x140004044
   1400051e8:	mov    rbx,rax
   1400051eb:	xor    edi,edi
   1400051ed:	cmp    rax,rdi
   1400051f0:	je     0x140005372
   1400051f6:	mov    rdx,QWORD PTR [rsi+0xb8]
   1400051fd:	mov    rcx,rax
   140005200:	mov    r8d,0x220
   140005206:	call   0x140008cf0
   14000520b:	mov    DWORD PTR [rbx],edi
   14000520d:	mov    rdx,rbx
   140005210:	mov    ecx,r12d
   140005213:	call   0x140004f20
   140005218:	mov    r13d,eax
   14000521b:	cmp    eax,edi
   14000521d:	jne    0x140005347
   140005223:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000522a:	lock add DWORD PTR [rcx],0xffffffff
   14000522e:	jne    0x14000524a
   140005230:	mov    rcx,QWORD PTR [rsi+0xb8]
   140005237:	lea    r12,[rip+0xd5c2]        # 0x140012800
   14000523e:	cmp    rcx,r12
   140005241:	je     0x140005251
   140005243:	call   0x140004244
   140005248:	jmp    0x140005251
   14000524a:	lea    r12,[rip+0xd5af]        # 0x140012800
   140005251:	mov    QWORD PTR [rsi+0xb8],rbx
   140005258:	lock add DWORD PTR [rbx],0x1
   14000525c:	test   BYTE PTR [rsi+0xc8],0x2
   140005263:	jne    0x140005372
   140005269:	test   BYTE PTR [rip+0xdac8],0x1        # 0x140012d38
   140005270:	jne    0x140005372
   140005276:	mov    ecx,0xd
   14000527b:	call   0x140004708
   140005280:	nop
   140005281:	mov    eax,DWORD PTR [rbx+0x4]
   140005284:	mov    DWORD PTR [rip+0xeb0a],eax        # 0x140013d94
   14000528a:	mov    eax,DWORD PTR [rbx+0x8]
   14000528d:	mov    DWORD PTR [rip+0xeb05],eax        # 0x140013d98
   140005293:	mov    eax,DWORD PTR [rbx+0xc]
   140005296:	mov    DWORD PTR [rip+0xeb00],eax        # 0x140013d9c
   14000529c:	mov    edx,edi
   14000529e:	mov    DWORD PTR [rsp+0x20],edx
   1400052a2:	lea    r8,[rip+0xffffffffffffad57]        # 0x140000000
   1400052a9:	cmp    edx,0x5
   1400052ac:	jge    0x1400052c7
   1400052ae:	movsxd rcx,edx
   1400052b1:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   1400052b6:	mov    WORD PTR [r8+rcx*2+0x13d88],ax
   1400052bf:	inc    edx
   1400052c1:	mov    DWORD PTR [rsp+0x20],edx
   1400052c5:	jmp    0x1400052a9
   1400052c7:	mov    edx,edi
   1400052c9:	mov    DWORD PTR [rsp+0x20],edx
   1400052cd:	cmp    edx,0x101
   1400052d3:	jge    0x1400052ec
   1400052d5:	movsxd rcx,edx
   1400052d8:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   1400052dc:	mov    BYTE PTR [rcx+r8*1+0x12a20],al
   1400052e4:	inc    edx
   1400052e6:	mov    DWORD PTR [rsp+0x20],edx
   1400052ea:	jmp    0x1400052cd
   1400052ec:	mov    DWORD PTR [rsp+0x20],edi
   1400052f0:	cmp    edi,0x100
   1400052f6:	jge    0x140005312
   1400052f8:	movsxd rcx,edi
   1400052fb:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   140005302:	mov    BYTE PTR [rcx+r8*1+0x12b30],al
   14000530a:	inc    edi
   14000530c:	mov    DWORD PTR [rsp+0x20],edi
   140005310:	jmp    0x1400052f0
   140005312:	mov    rax,QWORD PTR [rip+0xd917]        # 0x140012c30
   140005319:	lock add DWORD PTR [rax],0xffffffff
   14000531d:	jne    0x140005330
   14000531f:	mov    rcx,QWORD PTR [rip+0xd90a]        # 0x140012c30
   140005326:	cmp    rcx,r12
   140005329:	je     0x140005330
   14000532b:	call   0x140004244
   140005330:	mov    QWORD PTR [rip+0xd8f9],rbx        # 0x140012c30
   140005337:	lock add DWORD PTR [rbx],0x1
   14000533b:	mov    ecx,0xd
   140005340:	call   0x140004608
   140005345:	jmp    0x140005372
   140005347:	cmp    eax,0xffffffff
   14000534a:	jne    0x140005372
   14000534c:	lea    r12,[rip+0xd4ad]        # 0x140012800
   140005353:	cmp    rbx,r12
   140005356:	je     0x140005360
   140005358:	mov    rcx,rbx
   14000535b:	call   0x140004244
   140005360:	call   0x140003fbc
   140005365:	mov    DWORD PTR [rax],0x16
   14000536b:	jmp    0x140005372
   14000536d:	xor    edi,edi
   14000536f:	mov    r13d,edi
   140005372:	mov    eax,r13d
   140005375:	mov    rbx,QWORD PTR [rsp+0x40]
   14000537a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000537f:	mov    rdi,QWORD PTR [rsp+0x50]
   140005384:	mov    r12,QWORD PTR [rsp+0x58]
   140005389:	add    rsp,0x30
   14000538d:	pop    r13
   14000538f:	ret    
   140005390:	sub    rsp,0x28
   140005394:	cmp    DWORD PTR [rip+0xf20d],0x0        # 0x1400145a8
   14000539b:	jne    0x1400053b1
   14000539d:	mov    ecx,0xfffffffd
   1400053a2:	call   0x140005198
   1400053a7:	mov    DWORD PTR [rip+0xf1f7],0x1        # 0x1400145a8
   1400053b1:	xor    eax,eax
   1400053b3:	add    rsp,0x28
   1400053b7:	ret    
   1400053b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400053bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400053c2:	push   rdi
   1400053c3:	sub    rsp,0x20
   1400053c7:	mov    rax,QWORD PTR [rcx+0x128]
   1400053ce:	mov    rbx,rcx
   1400053d1:	test   rax,rax
   1400053d4:	je     0x14000544f
   1400053d6:	lea    rcx,[rip+0xde73]        # 0x140013250
   1400053dd:	cmp    rax,rcx
   1400053e0:	je     0x14000544f
   1400053e2:	mov    rax,QWORD PTR [rbx+0x110]
   1400053e9:	test   rax,rax
   1400053ec:	je     0x14000544f
   1400053ee:	cmp    DWORD PTR [rax],0x0
   1400053f1:	jne    0x14000544f
   1400053f3:	mov    rcx,QWORD PTR [rbx+0x120]
   1400053fa:	test   rcx,rcx
   1400053fd:	je     0x140005415
   1400053ff:	cmp    DWORD PTR [rcx],0x0
   140005402:	jne    0x140005415
   140005404:	call   0x140004244
   140005409:	mov    rcx,QWORD PTR [rbx+0x128]
   140005410:	call   0x140009258
   140005415:	mov    rcx,QWORD PTR [rbx+0x118]
   14000541c:	test   rcx,rcx
   14000541f:	je     0x140005437
   140005421:	cmp    DWORD PTR [rcx],0x0
   140005424:	jne    0x140005437
   140005426:	call   0x140004244
   14000542b:	mov    rcx,QWORD PTR [rbx+0x128]
   140005432:	call   0x140009210
   140005437:	mov    rcx,QWORD PTR [rbx+0x110]
   14000543e:	call   0x140004244
   140005443:	mov    rcx,QWORD PTR [rbx+0x128]
   14000544a:	call   0x140004244
   14000544f:	mov    rax,QWORD PTR [rbx+0x130]
   140005456:	test   rax,rax
   140005459:	je     0x1400054a2
   14000545b:	cmp    DWORD PTR [rax],0x0
   14000545e:	jne    0x1400054a2
   140005460:	mov    rcx,QWORD PTR [rbx+0x138]
   140005467:	sub    rcx,0xfe
   14000546e:	call   0x140004244
   140005473:	mov    rcx,QWORD PTR [rbx+0x148]
   14000547a:	mov    edi,0x80
   14000547f:	sub    rcx,rdi
   140005482:	call   0x140004244
   140005487:	mov    rcx,QWORD PTR [rbx+0x150]
   14000548e:	sub    rcx,rdi
   140005491:	call   0x140004244
   140005496:	mov    rcx,QWORD PTR [rbx+0x130]
   14000549d:	call   0x140004244
   1400054a2:	mov    rcx,QWORD PTR [rbx+0x158]
   1400054a9:	lea    rax,[rip+0xdc20]        # 0x1400130d0
   1400054b0:	cmp    rcx,rax
   1400054b3:	je     0x1400054cf
   1400054b5:	cmp    DWORD PTR [rcx+0x160],0x0
   1400054bc:	jne    0x1400054cf
   1400054be:	call   0x140009024
   1400054c3:	mov    rcx,QWORD PTR [rbx+0x158]
   1400054ca:	call   0x140004244
   1400054cf:	lea    rdi,[rbx+0x58]
   1400054d3:	mov    esi,0x6
   1400054d8:	lea    rax,[rip+0xd861]        # 0x140012d40
   1400054df:	cmp    QWORD PTR [rdi-0x10],rax
   1400054e3:	je     0x1400054f7
   1400054e5:	mov    rcx,QWORD PTR [rdi]
   1400054e8:	test   rcx,rcx
   1400054eb:	je     0x1400054f7
   1400054ed:	cmp    DWORD PTR [rcx],0x0
   1400054f0:	jne    0x1400054f7
   1400054f2:	call   0x140004244
   1400054f7:	cmp    QWORD PTR [rdi-0x8],0x0
   1400054fc:	je     0x140005511
   1400054fe:	mov    rcx,QWORD PTR [rdi+0x8]
   140005502:	test   rcx,rcx
   140005505:	je     0x140005511
   140005507:	cmp    DWORD PTR [rcx],0x0
   14000550a:	jne    0x140005511
   14000550c:	call   0x140004244
   140005511:	add    rdi,0x20
   140005515:	sub    rsi,0x1
   140005519:	jne    0x1400054d8
   14000551b:	mov    rcx,rbx
   14000551e:	mov    rbx,QWORD PTR [rsp+0x30]
   140005523:	mov    rsi,QWORD PTR [rsp+0x38]
   140005528:	add    rsp,0x20
   14000552c:	pop    rdi
   14000552d:	jmp    0x140004244
   140005532:	int3   
   140005533:	int3   
   140005534:	lock add DWORD PTR [rcx],0x1
   140005538:	mov    rax,QWORD PTR [rcx+0x110]
   14000553f:	test   rax,rax
   140005542:	je     0x140005548
   140005544:	lock add DWORD PTR [rax],0x1
   140005548:	mov    rax,QWORD PTR [rcx+0x120]
   14000554f:	test   rax,rax
   140005552:	je     0x140005558
   140005554:	lock add DWORD PTR [rax],0x1
   140005558:	mov    rax,QWORD PTR [rcx+0x118]
   14000555f:	test   rax,rax
   140005562:	je     0x140005568
   140005564:	lock add DWORD PTR [rax],0x1
   140005568:	mov    rax,QWORD PTR [rcx+0x130]
   14000556f:	test   rax,rax
   140005572:	je     0x140005578
   140005574:	lock add DWORD PTR [rax],0x1
   140005578:	lea    rax,[rcx+0x58]
   14000557c:	mov    r8d,0x6
   140005582:	lea    rdx,[rip+0xd7b7]        # 0x140012d40
   140005589:	cmp    QWORD PTR [rax-0x10],rdx
   14000558d:	je     0x14000559b
   14000558f:	mov    rdx,QWORD PTR [rax]
   140005592:	test   rdx,rdx
   140005595:	je     0x14000559b
   140005597:	lock add DWORD PTR [rdx],0x1
   14000559b:	cmp    QWORD PTR [rax-0x8],0x0
   1400055a0:	je     0x1400055af
   1400055a2:	mov    rdx,QWORD PTR [rax+0x8]
   1400055a6:	test   rdx,rdx
   1400055a9:	je     0x1400055af
   1400055ab:	lock add DWORD PTR [rdx],0x1
   1400055af:	add    rax,0x20
   1400055b3:	sub    r8,0x1
   1400055b7:	jne    0x140005582
   1400055b9:	mov    rax,QWORD PTR [rcx+0x158]
   1400055c0:	lock add DWORD PTR [rax+0x160],0x1
   1400055c8:	ret    
   1400055c9:	int3   
   1400055ca:	int3   
   1400055cb:	int3   
   1400055cc:	test   rcx,rcx
   1400055cf:	je     0x14000566d
   1400055d5:	or     r9d,0xffffffff
   1400055d9:	lock add DWORD PTR [rcx],r9d
   1400055dd:	mov    rax,QWORD PTR [rcx+0x110]
   1400055e4:	test   rax,rax
   1400055e7:	je     0x1400055ed
   1400055e9:	lock add DWORD PTR [rax],r9d
   1400055ed:	mov    rax,QWORD PTR [rcx+0x120]
   1400055f4:	test   rax,rax
   1400055f7:	je     0x1400055fd
   1400055f9:	lock add DWORD PTR [rax],r9d
   1400055fd:	mov    rax,QWORD PTR [rcx+0x118]
   140005604:	test   rax,rax
   140005607:	je     0x14000560d
   140005609:	lock add DWORD PTR [rax],r9d
   14000560d:	mov    rax,QWORD PTR [rcx+0x130]
   140005614:	test   rax,rax
   140005617:	je     0x14000561d
   140005619:	lock add DWORD PTR [rax],r9d
   14000561d:	lea    rax,[rcx+0x58]
   140005621:	mov    r8d,0x6
   140005627:	lea    rdx,[rip+0xd712]        # 0x140012d40
   14000562e:	cmp    QWORD PTR [rax-0x10],rdx
   140005632:	je     0x140005640
   140005634:	mov    rdx,QWORD PTR [rax]
   140005637:	test   rdx,rdx
   14000563a:	je     0x140005640
   14000563c:	lock add DWORD PTR [rdx],r9d
   140005640:	cmp    QWORD PTR [rax-0x8],0x0
   140005645:	je     0x140005654
   140005647:	mov    rdx,QWORD PTR [rax+0x8]
   14000564b:	test   rdx,rdx
   14000564e:	je     0x140005654
   140005650:	lock add DWORD PTR [rdx],r9d
   140005654:	add    rax,0x20
   140005658:	sub    r8,0x1
   14000565c:	jne    0x140005627
   14000565e:	mov    rax,QWORD PTR [rcx+0x158]
   140005665:	lock add DWORD PTR [rax+0x160],r9d
   14000566d:	mov    rax,rcx
   140005670:	ret    
   140005671:	int3   
   140005672:	int3   
   140005673:	int3   
   140005674:	rex push rbx
   140005676:	sub    rsp,0x20
   14000567a:	mov    rbx,rdx
   14000567d:	test   rdx,rdx
   140005680:	je     0x1400056c3
   140005682:	test   rcx,rcx
   140005685:	je     0x1400056c3
   140005687:	mov    r10,QWORD PTR [rcx]
   14000568a:	cmp    r10,rdx
   14000568d:	je     0x1400056be
   14000568f:	mov    QWORD PTR [rcx],rdx
   140005692:	mov    rcx,rdx
   140005695:	call   0x140005534
   14000569a:	test   r10,r10
   14000569d:	je     0x1400056be
   14000569f:	mov    rcx,r10
   1400056a2:	call   0x1400055cc
   1400056a7:	cmp    DWORD PTR [r10],0x0
   1400056ab:	jne    0x1400056be
   1400056ad:	lea    rax,[rip+0xd69c]        # 0x140012d50
   1400056b4:	cmp    r10,rax
   1400056b7:	je     0x1400056be
   1400056b9:	call   0x1400053b8
   1400056be:	mov    rax,rbx
   1400056c1:	jmp    0x1400056c5
   1400056c3:	xor    eax,eax
   1400056c5:	add    rsp,0x20
   1400056c9:	pop    rbx
   1400056ca:	ret    
   1400056cb:	int3   
   1400056cc:	rex push rbx
   1400056ce:	sub    rsp,0x20
   1400056d2:	call   0x1400058c0
   1400056d7:	mov    rbx,rax
   1400056da:	mov    ecx,DWORD PTR [rax+0xc8]
   1400056e0:	test   DWORD PTR [rip+0xd652],ecx        # 0x140012d38
   1400056e6:	je     0x140005700
   1400056e8:	cmp    QWORD PTR [rax+0xc0],0x0
   1400056f0:	je     0x140005700
   1400056f2:	call   0x1400058c0
   1400056f7:	mov    rbx,QWORD PTR [rax+0xc0]
   1400056fe:	jmp    0x14000572b
   140005700:	mov    ecx,0xc
   140005705:	call   0x140004708
   14000570a:	nop
   14000570b:	lea    rcx,[rbx+0xc0]
   140005712:	mov    rdx,QWORD PTR [rip+0xd797]        # 0x140012eb0
   140005719:	call   0x140005674
   14000571e:	mov    rbx,rax
   140005721:	mov    ecx,0xc
   140005726:	call   0x140004608
   14000572b:	test   rbx,rbx
   14000572e:	jne    0x140005738
   140005730:	lea    ecx,[rbx+0x20]
   140005733:	call   0x140002608
   140005738:	mov    rax,rbx
   14000573b:	add    rsp,0x20
   14000573f:	pop    rbx
   140005740:	ret    
   140005741:	int3   
   140005742:	int3   
   140005743:	int3   
   140005744:	rex.W jmp QWORD PTR [rip+0x99c5]        # 0x14000f110
   14000574b:	int3   
   14000574c:	xor    ecx,ecx
   14000574e:	rex.W jmp QWORD PTR [rip+0x99bb]        # 0x14000f110
   140005755:	int3   
   140005756:	int3   
   140005757:	int3   
   140005758:	rex.W jmp QWORD PTR [rip+0x99b9]        # 0x14000f118
   14000575f:	int3   
   140005760:	sub    rsp,0x28
   140005764:	mov    ecx,DWORD PTR [rip+0xd766]        # 0x140012ed0
   14000576a:	cmp    ecx,0xffffffff
   14000576d:	je     0x14000577c
   14000576f:	call   QWORD PTR [rip+0x99bb]        # 0x14000f130
   140005775:	or     DWORD PTR [rip+0xd754],0xffffffff        # 0x140012ed0
   14000577c:	add    rsp,0x28
   140005780:	jmp    0x140004584
   140005785:	int3   
   140005786:	int3   
   140005787:	int3   
   140005788:	mov    QWORD PTR [rsp+0x8],rbx
   14000578d:	push   rdi
   14000578e:	sub    rsp,0x20
   140005792:	mov    rdi,rdx
   140005795:	mov    rbx,rcx
   140005798:	lea    rax,[rip+0xa351]        # 0x14000faf0
   14000579f:	mov    QWORD PTR [rcx+0xa0],rax
   1400057a6:	mov    DWORD PTR [rcx+0x1c],0x1
   1400057ad:	mov    DWORD PTR [rcx+0xc8],0x1
   1400057b7:	mov    BYTE PTR [rcx+0x174],0x43
   1400057be:	mov    BYTE PTR [rcx+0x1f7],0x43
   1400057c5:	lea    rax,[rip+0xd034]        # 0x140012800
   1400057cc:	mov    QWORD PTR [rcx+0xb8],rax
   1400057d3:	mov    ecx,0xd
   1400057d8:	call   0x140004708
   1400057dd:	nop
   1400057de:	mov    rax,QWORD PTR [rbx+0xb8]
   1400057e5:	lock add DWORD PTR [rax],0x1
   1400057e9:	mov    ecx,0xd
   1400057ee:	call   0x140004608
   1400057f3:	mov    ecx,0xc
   1400057f8:	call   0x140004708
   1400057fd:	nop
   1400057fe:	mov    QWORD PTR [rbx+0xc0],rdi
   140005805:	test   rdi,rdi
   140005808:	jne    0x140005818
   14000580a:	mov    rax,QWORD PTR [rip+0xd69f]        # 0x140012eb0
   140005811:	mov    QWORD PTR [rbx+0xc0],rax
   140005818:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000581f:	call   0x140005534
   140005824:	nop
   140005825:	mov    ecx,0xc
   14000582a:	call   0x140004608
   14000582f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005834:	add    rsp,0x20
   140005838:	pop    rdi
   140005839:	ret    
   14000583a:	int3   
   14000583b:	int3   
   14000583c:	mov    QWORD PTR [rsp+0x8],rbx
   140005841:	push   rdi
   140005842:	sub    rsp,0x20
   140005846:	call   QWORD PTR [rip+0x988c]        # 0x14000f0d8
   14000584c:	mov    ecx,DWORD PTR [rip+0xd67e]        # 0x140012ed0
   140005852:	mov    edi,eax
   140005854:	call   QWORD PTR [rip+0x98c6]        # 0x14000f120
   14000585a:	mov    rbx,rax
   14000585d:	test   rax,rax
   140005860:	jne    0x1400058aa
   140005862:	lea    ecx,[rax+0x1]
   140005865:	mov    edx,0x2c8
   14000586a:	call   0x1400040b0
   14000586f:	mov    rbx,rax
   140005872:	test   rax,rax
   140005875:	je     0x1400058aa
   140005877:	mov    ecx,DWORD PTR [rip+0xd653]        # 0x140012ed0
   14000587d:	mov    rdx,rax
   140005880:	call   QWORD PTR [rip+0x98a2]        # 0x14000f128
   140005886:	mov    rcx,rbx
   140005889:	test   eax,eax
   14000588b:	je     0x1400058a3
   14000588d:	xor    edx,edx
   14000588f:	call   0x140005788
   140005894:	call   QWORD PTR [rip+0x98a6]        # 0x14000f140
   14000589a:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000589f:	mov    DWORD PTR [rbx],eax
   1400058a1:	jmp    0x1400058aa
   1400058a3:	call   0x140004244
   1400058a8:	xor    ebx,ebx
   1400058aa:	mov    ecx,edi
   1400058ac:	call   QWORD PTR [rip+0x9886]        # 0x14000f138
   1400058b2:	mov    rax,rbx
   1400058b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400058ba:	add    rsp,0x20
   1400058be:	pop    rdi
   1400058bf:	ret    
   1400058c0:	rex push rbx
   1400058c2:	sub    rsp,0x20
   1400058c6:	call   0x14000583c
   1400058cb:	mov    rbx,rax
   1400058ce:	test   rax,rax
   1400058d1:	jne    0x1400058db
   1400058d3:	lea    ecx,[rax+0x10]
   1400058d6:	call   0x140002608
   1400058db:	mov    rax,rbx
   1400058de:	add    rsp,0x20
   1400058e2:	pop    rbx
   1400058e3:	ret    
   1400058e4:	test   rcx,rcx
   1400058e7:	je     0x140005a18
   1400058ed:	mov    QWORD PTR [rsp+0x10],rbx
   1400058f2:	push   rdi
   1400058f3:	sub    rsp,0x20
   1400058f7:	mov    rbx,rcx
   1400058fa:	mov    rcx,QWORD PTR [rcx+0x38]
   1400058fe:	test   rcx,rcx
   140005901:	je     0x140005908
   140005903:	call   0x140004244
   140005908:	mov    rcx,QWORD PTR [rbx+0x48]
   14000590c:	test   rcx,rcx
   14000590f:	je     0x140005916
   140005911:	call   0x140004244
   140005916:	mov    rcx,QWORD PTR [rbx+0x58]
   14000591a:	test   rcx,rcx
   14000591d:	je     0x140005924
   14000591f:	call   0x140004244
   140005924:	mov    rcx,QWORD PTR [rbx+0x68]
   140005928:	test   rcx,rcx
   14000592b:	je     0x140005932
   14000592d:	call   0x140004244
   140005932:	mov    rcx,QWORD PTR [rbx+0x70]
   140005936:	test   rcx,rcx
   140005939:	je     0x140005940
   14000593b:	call   0x140004244
   140005940:	mov    rcx,QWORD PTR [rbx+0x78]
   140005944:	test   rcx,rcx
   140005947:	je     0x14000594e
   140005949:	call   0x140004244
   14000594e:	mov    rcx,QWORD PTR [rbx+0x80]
   140005955:	test   rcx,rcx
   140005958:	je     0x14000595f
   14000595a:	call   0x140004244
   14000595f:	mov    rcx,QWORD PTR [rbx+0xa0]
   140005966:	lea    rax,[rip+0xa183]        # 0x14000faf0
   14000596d:	cmp    rcx,rax
   140005970:	je     0x140005977
   140005972:	call   0x140004244
   140005977:	mov    ecx,0xd
   14000597c:	call   0x140004708
   140005981:	nop
   140005982:	mov    rcx,QWORD PTR [rbx+0xb8]
   140005989:	mov    QWORD PTR [rsp+0x30],rcx
   14000598e:	test   rcx,rcx
   140005991:	je     0x1400059b0
   140005993:	lock add DWORD PTR [rcx],0xffffffff
   140005997:	jne    0x1400059b0
   140005999:	lea    rax,[rip+0xce60]        # 0x140012800
   1400059a0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400059a5:	cmp    rcx,rax
   1400059a8:	je     0x1400059b0
   1400059aa:	call   0x140004244
   1400059af:	nop
   1400059b0:	mov    ecx,0xd
   1400059b5:	call   0x140004608
   1400059ba:	mov    ecx,0xc
   1400059bf:	call   0x140004708
   1400059c4:	nop
   1400059c5:	mov    rdi,QWORD PTR [rbx+0xc0]
   1400059cc:	test   rdi,rdi
   1400059cf:	je     0x1400059fc
   1400059d1:	mov    rcx,rdi
   1400059d4:	call   0x1400055cc
   1400059d9:	cmp    rdi,QWORD PTR [rip+0xd4d0]        # 0x140012eb0
   1400059e0:	je     0x1400059fc
   1400059e2:	lea    rax,[rip+0xd367]        # 0x140012d50
   1400059e9:	cmp    rdi,rax
   1400059ec:	je     0x1400059fc
   1400059ee:	cmp    DWORD PTR [rdi],0x0
   1400059f1:	jne    0x1400059fc
   1400059f3:	mov    rcx,rdi
   1400059f6:	call   0x1400053b8
   1400059fb:	nop
   1400059fc:	mov    ecx,0xc
   140005a01:	call   0x140004608
   140005a06:	mov    rcx,rbx
   140005a09:	call   0x140004244
   140005a0e:	mov    rbx,QWORD PTR [rsp+0x38]
   140005a13:	add    rsp,0x20
   140005a17:	pop    rdi
   140005a18:	ret    
   140005a19:	int3   
   140005a1a:	int3   
   140005a1b:	int3   
   140005a1c:	rex push rbx
   140005a1e:	sub    rsp,0x20
   140005a22:	call   0x140002988
   140005a27:	call   0x1400044f8
   140005a2c:	test   eax,eax
   140005a2e:	je     0x140005a90
   140005a30:	lea    rcx,[rip+0xfffffffffffffead]        # 0x1400058e4
   140005a37:	call   QWORD PTR [rip+0x970b]        # 0x14000f148
   140005a3d:	mov    DWORD PTR [rip+0xd48d],eax        # 0x140012ed0
   140005a43:	cmp    eax,0xffffffff
   140005a46:	je     0x140005a90
   140005a48:	mov    edx,0x2c8
   140005a4d:	mov    ecx,0x1
   140005a52:	call   0x1400040b0
   140005a57:	mov    rbx,rax
   140005a5a:	test   rax,rax
   140005a5d:	je     0x140005a90
   140005a5f:	mov    ecx,DWORD PTR [rip+0xd46b]        # 0x140012ed0
   140005a65:	mov    rdx,rax
   140005a68:	call   QWORD PTR [rip+0x96ba]        # 0x14000f128
   140005a6e:	test   eax,eax
   140005a70:	je     0x140005a90
   140005a72:	xor    edx,edx
   140005a74:	mov    rcx,rbx
   140005a77:	call   0x140005788
   140005a7c:	call   QWORD PTR [rip+0x96be]        # 0x14000f140
   140005a82:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140005a87:	mov    DWORD PTR [rbx],eax
   140005a89:	mov    eax,0x1
   140005a8e:	jmp    0x140005a97
   140005a90:	call   0x140005760
   140005a95:	xor    eax,eax
   140005a97:	add    rsp,0x20
   140005a9b:	pop    rbx
   140005a9c:	ret    
   140005a9d:	int3   
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	mov    QWORD PTR [rsp+0x10],rbp
   140005aa5:	mov    QWORD PTR [rsp+0x18],rsi
   140005aaa:	push   rdi
   140005aab:	sub    rsp,0x60
   140005aaf:	movsxd rdi,ecx
   140005ab2:	mov    ebp,edx
   140005ab4:	lea    rcx,[rsp+0x40]
   140005ab9:	mov    rdx,r8
   140005abc:	call   0x140002370
   140005ac1:	lea    r11d,[rdi+0x1]
   140005ac5:	cmp    r11d,0x100
   140005acc:	ja     0x140005ae3
   140005ace:	mov    rax,QWORD PTR [rsp+0x40]
   140005ad3:	mov    rcx,QWORD PTR [rax+0x140]
   140005ada:	movzx  eax,WORD PTR [rcx+rdi*2]
   140005ade:	jmp    0x140005b82
   140005ae3:	mov    esi,edi
   140005ae5:	lea    rdx,[rsp+0x40]
   140005aea:	sar    esi,0x8
   140005aed:	movzx  ecx,sil
   140005af1:	call   0x140007034
   140005af6:	mov    edx,0x1
   140005afb:	test   eax,eax
   140005afd:	je     0x140005b1d
   140005aff:	mov    BYTE PTR [rsp+0x88],sil
   140005b07:	mov    BYTE PTR [rsp+0x89],dil
   140005b0f:	mov    BYTE PTR [rsp+0x8a],0x0
   140005b17:	lea    r9d,[rdx+0x1]
   140005b1b:	jmp    0x140005b30
   140005b1d:	mov    BYTE PTR [rsp+0x88],dil
   140005b25:	mov    BYTE PTR [rsp+0x89],0x0
   140005b2d:	mov    r9d,edx
   140005b30:	mov    rcx,QWORD PTR [rsp+0x40]
   140005b35:	mov    DWORD PTR [rsp+0x38],edx
   140005b39:	lea    r8,[rsp+0x88]
   140005b41:	mov    eax,DWORD PTR [rcx+0x14]
   140005b44:	mov    DWORD PTR [rsp+0x30],eax
   140005b48:	mov    eax,DWORD PTR [rcx+0x4]
   140005b4b:	lea    rcx,[rsp+0x40]
   140005b50:	mov    DWORD PTR [rsp+0x28],eax
   140005b54:	lea    rax,[rsp+0x70]
   140005b59:	mov    QWORD PTR [rsp+0x20],rax
   140005b5e:	call   0x140008c50
   140005b63:	test   eax,eax
   140005b65:	jne    0x140005b7d
   140005b67:	cmp    BYTE PTR [rsp+0x58],al
   140005b6b:	je     0x140005b79
   140005b6d:	mov    rax,QWORD PTR [rsp+0x50]
   140005b72:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140005b79:	xor    eax,eax
   140005b7b:	jmp    0x140005b97
   140005b7d:	movzx  eax,WORD PTR [rsp+0x70]
   140005b82:	and    eax,ebp
   140005b84:	cmp    BYTE PTR [rsp+0x58],0x0
   140005b89:	je     0x140005b97
   140005b8b:	mov    rcx,QWORD PTR [rsp+0x50]
   140005b90:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140005b97:	lea    r11,[rsp+0x60]
   140005b9c:	mov    rbp,QWORD PTR [r11+0x18]
   140005ba0:	mov    rsi,QWORD PTR [r11+0x20]
   140005ba4:	mov    rsp,r11
   140005ba7:	pop    rdi
   140005ba8:	ret    
   140005ba9:	int3   
   140005baa:	int3   
   140005bab:	int3   
   140005bac:	mov    rax,rsp
   140005baf:	mov    QWORD PTR [rax+0x10],rbx
   140005bb3:	mov    QWORD PTR [rax+0x18],rbp
   140005bb7:	mov    QWORD PTR [rax+0x20],rsi
   140005bbb:	mov    DWORD PTR [rax+0x8],ecx
   140005bbe:	push   rdi
   140005bbf:	sub    rsp,0x20
   140005bc3:	mov    rcx,rdx
   140005bc6:	mov    rbx,rdx
   140005bc9:	call   0x140003d84
   140005bce:	mov    ecx,DWORD PTR [rbx+0x18]
   140005bd1:	movsxd rsi,eax
   140005bd4:	test   cl,0x82
   140005bd7:	jne    0x140005bf0
   140005bd9:	call   0x140003fbc
   140005bde:	mov    DWORD PTR [rax],0x9
   140005be4:	or     DWORD PTR [rbx+0x18],0x20
   140005be8:	or     eax,0xffffffff
   140005beb:	jmp    0x140005d24
   140005bf0:	test   cl,0x40
   140005bf3:	je     0x140005c02
   140005bf5:	call   0x140003fbc
   140005bfa:	mov    DWORD PTR [rax],0x22
   140005c00:	jmp    0x140005be4
   140005c02:	xor    edi,edi
   140005c04:	test   cl,0x1
   140005c07:	je     0x140005c22
   140005c09:	mov    DWORD PTR [rbx+0x8],edi
   140005c0c:	test   cl,0x10
   140005c0f:	je     0x140005c9e
   140005c15:	mov    rax,QWORD PTR [rbx+0x10]
   140005c19:	and    ecx,0xfffffffe
   140005c1c:	mov    QWORD PTR [rbx],rax
   140005c1f:	mov    DWORD PTR [rbx+0x18],ecx
   140005c22:	mov    eax,DWORD PTR [rbx+0x18]
   140005c25:	mov    DWORD PTR [rbx+0x8],edi
   140005c28:	and    eax,0xffffffef
   140005c2b:	or     eax,0x2
   140005c2e:	mov    DWORD PTR [rbx+0x18],eax
   140005c31:	test   eax,0x10c
   140005c36:	jne    0x140005c67
   140005c38:	call   0x140001a70
   140005c3d:	add    rax,0x30
   140005c41:	cmp    rbx,rax
   140005c44:	je     0x140005c54
   140005c46:	call   0x140001a70
   140005c4b:	add    rax,0x60
   140005c4f:	cmp    rbx,rax
   140005c52:	jne    0x140005c5f
   140005c54:	mov    ecx,esi
   140005c56:	call   0x140006fc4
   140005c5b:	cmp    eax,edi
   140005c5d:	jne    0x140005c67
   140005c5f:	mov    rcx,rbx
   140005c62:	call   0x140009838
   140005c67:	test   DWORD PTR [rbx+0x18],0x108
   140005c6e:	je     0x140005d01
   140005c74:	mov    ebp,DWORD PTR [rbx]
   140005c76:	mov    rdx,QWORD PTR [rbx+0x10]
   140005c7a:	sub    ebp,DWORD PTR [rbx+0x10]
   140005c7d:	lea    rax,[rdx+0x1]
   140005c81:	mov    QWORD PTR [rbx],rax
   140005c84:	mov    eax,DWORD PTR [rbx+0x24]
   140005c87:	dec    eax
   140005c89:	cmp    ebp,edi
   140005c8b:	mov    DWORD PTR [rbx+0x8],eax
   140005c8e:	jle    0x140005ca9
   140005c90:	mov    r8d,ebp
   140005c93:	mov    ecx,esi
   140005c95:	call   0x140007e58
   140005c9a:	mov    edi,eax
   140005c9c:	jmp    0x140005cf5
   140005c9e:	or     ecx,0x20
   140005ca1:	mov    DWORD PTR [rbx+0x18],ecx
   140005ca4:	jmp    0x140005be8
   140005ca9:	cmp    esi,0xffffffff
   140005cac:	je     0x140005cd1
   140005cae:	cmp    esi,0xfffffffe
   140005cb1:	je     0x140005cd1
   140005cb3:	mov    rcx,rsi
   140005cb6:	mov    rax,rsi
   140005cb9:	lea    rdx,[rip+0xe6c0]        # 0x140014380
   140005cc0:	and    ecx,0x1f
   140005cc3:	sar    rax,0x5
   140005cc7:	imul   rcx,rcx,0x58
   140005ccb:	add    rcx,QWORD PTR [rdx+rax*8]
   140005ccf:	jmp    0x140005cd8
   140005cd1:	lea    rcx,[rip+0xc718]        # 0x1400123f0
   140005cd8:	test   BYTE PTR [rcx+0x8],0x20
   140005cdc:	je     0x140005cf5
   140005cde:	xor    edx,edx
   140005ce0:	mov    ecx,esi
   140005ce2:	lea    r8d,[rdx+0x2]
   140005ce6:	call   0x140009700
   140005ceb:	cmp    rax,0xffffffffffffffff
   140005cef:	je     0x140005be4
   140005cf5:	mov    rcx,QWORD PTR [rbx+0x10]
   140005cf9:	mov    al,BYTE PTR [rsp+0x30]
   140005cfd:	mov    BYTE PTR [rcx],al
   140005cff:	jmp    0x140005d17
   140005d01:	mov    ebp,0x1
   140005d06:	lea    rdx,[rsp+0x30]
   140005d0b:	mov    ecx,esi
   140005d0d:	mov    r8d,ebp
   140005d10:	call   0x140007e58
   140005d15:	mov    edi,eax
   140005d17:	cmp    edi,ebp
   140005d19:	jne    0x140005be4
   140005d1f:	movzx  eax,BYTE PTR [rsp+0x30]
   140005d24:	mov    rbx,QWORD PTR [rsp+0x38]
   140005d29:	mov    rbp,QWORD PTR [rsp+0x40]
   140005d2e:	mov    rsi,QWORD PTR [rsp+0x48]
   140005d33:	add    rsp,0x20
   140005d37:	pop    rdi
   140005d38:	ret    
   140005d39:	int3   
   140005d3a:	int3   
   140005d3b:	int3   
   140005d3c:	mov    QWORD PTR [rsp+0x8],rbx
   140005d41:	mov    QWORD PTR [rsp+0x18],rdi
   140005d46:	mov    QWORD PTR [rsp+0x20],r13
   140005d4b:	push   r14
   140005d4d:	sub    rsp,0x30
   140005d51:	lea    r14,[rip+0xd188]        # 0x140012ee0
   140005d58:	mov    edi,ecx
   140005d5a:	xor    ebx,ebx
   140005d5c:	mov    rax,r14
   140005d5f:	cmp    ecx,DWORD PTR [rax]
   140005d61:	je     0x140005d6e
   140005d63:	inc    ebx
   140005d65:	add    rax,0x10
   140005d69:	cmp    ebx,0x17
   140005d6c:	jb     0x140005d5f
   140005d6e:	cmp    ebx,0x17
   140005d71:	jae    0x140005f4b
   140005d77:	mov    ecx,0x3
   140005d7c:	call   0x140009a80
   140005d81:	cmp    eax,0x1
   140005d84:	je     0x140005f06
   140005d8a:	mov    ecx,0x3
   140005d8f:	call   0x140009a80
   140005d94:	test   eax,eax
   140005d96:	jne    0x140005da5
   140005d98:	cmp    DWORD PTR [rip+0xc639],0x1        # 0x1400123d8
   140005d9f:	je     0x140005f06
   140005da5:	cmp    edi,0xfc
   140005dab:	je     0x140005f4b
   140005db1:	lea    rdi,[rip+0xe018]        # 0x140013dd0
   140005db8:	mov    r13d,0x314
   140005dbe:	lea    r8,[rip+0x9d0b]        # 0x14000fad0
   140005dc5:	mov    rcx,rdi
   140005dc8:	mov    rdx,r13
   140005dcb:	call   0x140009454
   140005dd0:	test   eax,eax
   140005dd2:	je     0x140005de9
   140005dd4:	and    QWORD PTR [rsp+0x20],0x0
   140005dda:	xor    r9d,r9d
   140005ddd:	xor    r8d,r8d
   140005de0:	xor    edx,edx
   140005de2:	xor    ecx,ecx
   140005de4:	call   0x140003dc4
   140005de9:	lea    rdx,[rip+0xdff9]        # 0x140013de9
   140005df0:	mov    r8d,0x104
   140005df6:	xor    ecx,ecx
   140005df8:	mov    BYTE PTR [rip+0xe0ee],0x0        # 0x140013eed
   140005dff:	call   QWORD PTR [rip+0x9223]        # 0x14000f028
   140005e05:	test   eax,eax
   140005e07:	jne    0x140005e3a
   140005e09:	lea    r8,[rip+0x9ca8]        # 0x14000fab8
   140005e10:	lea    rcx,[rip+0xdfd2]        # 0x140013de9
   140005e17:	mov    edx,0x2fb
   140005e1c:	call   0x140009454
   140005e21:	test   eax,eax
   140005e23:	je     0x140005e3a
   140005e25:	and    QWORD PTR [rsp+0x20],0x0
   140005e2b:	xor    r9d,r9d
   140005e2e:	xor    r8d,r8d
   140005e31:	xor    edx,edx
   140005e33:	xor    ecx,ecx
   140005e35:	call   0x140003dc4
   140005e3a:	lea    rcx,[rip+0xdfa8]        # 0x140013de9
   140005e41:	call   0x1400070e0
   140005e46:	inc    rax
   140005e49:	cmp    rax,0x3c
   140005e4d:	jbe    0x140005e95
   140005e4f:	lea    rcx,[rip+0xdf93]        # 0x140013de9
   140005e56:	call   0x1400070e0
   140005e5b:	lea    rdx,[rip+0xe282]        # 0x1400140e4
   140005e62:	lea    r8,[rip+0x9c4b]        # 0x14000fab4
   140005e69:	lea    rcx,[rax+rdi*1-0x22]
   140005e6e:	mov    r9d,0x3
   140005e74:	sub    rdx,rcx
   140005e77:	call   0x14000937c
   140005e7c:	test   eax,eax
   140005e7e:	je     0x140005e95
   140005e80:	and    QWORD PTR [rsp+0x20],0x0
   140005e86:	xor    r9d,r9d
   140005e89:	xor    r8d,r8d
   140005e8c:	xor    edx,edx
   140005e8e:	xor    ecx,ecx
   140005e90:	call   0x140003dc4
   140005e95:	lea    r8,[rip+0x9c14]        # 0x14000fab0
   140005e9c:	mov    rdx,r13
   140005e9f:	mov    rcx,rdi
   140005ea2:	call   0x1400092f0
   140005ea7:	test   eax,eax
   140005ea9:	je     0x140005ec0
   140005eab:	and    QWORD PTR [rsp+0x20],0x0
   140005eb1:	xor    r9d,r9d
   140005eb4:	xor    r8d,r8d
   140005eb7:	xor    edx,edx
   140005eb9:	xor    ecx,ecx
   140005ebb:	call   0x140003dc4
   140005ec0:	movsxd r8,ebx
   140005ec3:	mov    rdx,r13
   140005ec6:	mov    rcx,rdi
   140005ec9:	add    r8,r8
   140005ecc:	mov    r8,QWORD PTR [r14+r8*8+0x8]
   140005ed1:	call   0x1400092f0
   140005ed6:	test   eax,eax
   140005ed8:	je     0x140005eef
   140005eda:	and    QWORD PTR [rsp+0x20],0x0
   140005ee0:	xor    r9d,r9d
   140005ee3:	xor    r8d,r8d
   140005ee6:	xor    edx,edx
   140005ee8:	xor    ecx,ecx
   140005eea:	call   0x140003dc4
   140005eef:	lea    rdx,[rip+0x9b92]        # 0x14000fa88
   140005ef6:	mov    r8d,0x12010
   140005efc:	mov    rcx,rdi
   140005eff:	call   0x14000988c
   140005f04:	jmp    0x140005f4b
   140005f06:	mov    ecx,0xfffffff4
   140005f0b:	call   QWORD PTR [rip+0x916f]        # 0x14000f080
   140005f11:	mov    rdi,rax
   140005f14:	test   rax,rax
   140005f17:	je     0x140005f4b
   140005f19:	cmp    rax,0xffffffffffffffff
   140005f1d:	je     0x140005f4b
   140005f1f:	movsxd rbx,ebx
   140005f22:	add    rbx,rbx
   140005f25:	mov    rcx,QWORD PTR [r14+rbx*8+0x8]
   140005f2a:	call   0x1400070e0
   140005f2f:	mov    rdx,QWORD PTR [r14+rbx*8+0x8]
   140005f34:	and    QWORD PTR [rsp+0x20],0x0
   140005f3a:	lea    r9,[rsp+0x48]
   140005f3f:	mov    r8,rax
   140005f42:	mov    rcx,rdi
   140005f45:	call   QWORD PTR [rip+0x9205]        # 0x14000f150
   140005f4b:	mov    rbx,QWORD PTR [rsp+0x40]
   140005f50:	mov    rdi,QWORD PTR [rsp+0x50]
   140005f55:	mov    r13,QWORD PTR [rsp+0x58]
   140005f5a:	add    rsp,0x30
   140005f5e:	pop    r14
   140005f60:	ret    
   140005f61:	int3   
   140005f62:	int3   
   140005f63:	int3   
   140005f64:	sub    rsp,0x28
   140005f68:	mov    ecx,0x3
   140005f6d:	call   0x140009a80
   140005f72:	cmp    eax,0x1
   140005f75:	je     0x140005f8e
   140005f77:	mov    ecx,0x3
   140005f7c:	call   0x140009a80
   140005f81:	test   eax,eax
   140005f83:	jne    0x140005fa2
   140005f85:	cmp    DWORD PTR [rip+0xc44c],0x1        # 0x1400123d8
   140005f8c:	jne    0x140005fa2
   140005f8e:	mov    ecx,0xfc
   140005f93:	call   0x140005d3c
   140005f98:	mov    ecx,0xff
   140005f9d:	call   0x140005d3c
   140005fa2:	add    rsp,0x28
   140005fa6:	ret    
   140005fa7:	int3   
   140005fa8:	rex push rbx
   140005faa:	sub    rsp,0x20
   140005fae:	mov    edx,0x8
   140005fb3:	lea    ecx,[rdx+0x18]
   140005fb6:	call   0x1400040b0
   140005fbb:	mov    rcx,rax
   140005fbe:	mov    rbx,rax
   140005fc1:	call   0x140005744
   140005fc6:	mov    QWORD PTR [rip+0xe5d3],rax        # 0x1400145a0
   140005fcd:	mov    QWORD PTR [rip+0xe5c4],rax        # 0x140014598
   140005fd4:	test   rbx,rbx
   140005fd7:	jne    0x140005fde
   140005fd9:	lea    eax,[rbx+0x18]
   140005fdc:	jmp    0x140005fe4
   140005fde:	and    QWORD PTR [rbx],0x0
   140005fe2:	xor    eax,eax
   140005fe4:	add    rsp,0x20
   140005fe8:	pop    rbx
   140005fe9:	ret    
   140005fea:	int3   
   140005feb:	int3   
   140005fec:	mov    QWORD PTR [rsp+0x8],rbx
   140005ff1:	mov    QWORD PTR [rsp+0x10],rsi
   140005ff6:	mov    QWORD PTR [rsp+0x18],rdi
   140005ffb:	push   r12
   140005ffd:	push   r13
   140005fff:	push   r14
   140006001:	sub    rsp,0x20
   140006005:	mov    r14,rcx
   140006008:	call   0x14000268c
   14000600d:	nop
   14000600e:	mov    rcx,QWORD PTR [rip+0xe58b]        # 0x1400145a0
   140006015:	call   0x140005758
   14000601a:	mov    r12,rax
   14000601d:	mov    rcx,QWORD PTR [rip+0xe574]        # 0x140014598
   140006024:	call   0x140005758
   140006029:	mov    rbx,rax
   14000602c:	cmp    rax,r12
   14000602f:	jb     0x1400060cd
   140006035:	mov    rdi,rax
   140006038:	sub    rdi,r12
   14000603b:	lea    r13,[rdi+0x8]
   14000603f:	cmp    r13,0x8
   140006043:	jb     0x1400060cd
   140006049:	mov    rcx,r12
   14000604c:	call   0x140009ad0
   140006051:	mov    rsi,rax
   140006054:	cmp    rax,r13
   140006057:	jae    0x1400060ad
   140006059:	mov    edx,0x1000
   14000605e:	cmp    rax,rdx
   140006061:	cmovb  rdx,rax
   140006065:	add    rdx,rax
   140006068:	cmp    rdx,rax
   14000606b:	jb     0x14000607e
   14000606d:	mov    rcx,r12
   140006070:	call   0x140004134
   140006075:	xor    ebx,ebx
   140006077:	cmp    rax,rbx
   14000607a:	jne    0x140006096
   14000607c:	jmp    0x140006080
   14000607e:	xor    ebx,ebx
   140006080:	lea    rdx,[rsi+0x20]
   140006084:	cmp    rdx,rsi
   140006087:	jb     0x1400060cf
   140006089:	mov    rcx,r12
   14000608c:	call   0x140004134
   140006091:	cmp    rax,rbx
   140006094:	je     0x1400060cf
   140006096:	sar    rdi,0x3
   14000609a:	lea    rbx,[rax+rdi*8]
   14000609e:	mov    rcx,rax
   1400060a1:	call   0x140005744
   1400060a6:	mov    QWORD PTR [rip+0xe4f3],rax        # 0x1400145a0
   1400060ad:	mov    rcx,r14
   1400060b0:	call   0x140005744
   1400060b5:	mov    QWORD PTR [rbx],rax
   1400060b8:	lea    rcx,[rbx+0x8]
   1400060bc:	call   0x140005744
   1400060c1:	mov    QWORD PTR [rip+0xe4d0],rax        # 0x140014598
   1400060c8:	mov    rbx,r14
   1400060cb:	jmp    0x1400060cf
   1400060cd:	xor    ebx,ebx
   1400060cf:	call   0x140002698
   1400060d4:	mov    rax,rbx
   1400060d7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400060dc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400060e1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400060e6:	add    rsp,0x20
   1400060ea:	pop    r14
   1400060ec:	pop    r13
   1400060ee:	pop    r12
   1400060f0:	ret    
   1400060f1:	int3   
   1400060f2:	int3   
   1400060f3:	int3   
   1400060f4:	sub    rsp,0x28
   1400060f8:	call   0x140005fec
   1400060fd:	neg    rax
   140006100:	sbb    eax,eax
   140006102:	neg    eax
   140006104:	dec    eax
   140006106:	add    rsp,0x28
   14000610a:	ret    
   14000610b:	int3   
   14000610c:	mov    QWORD PTR [rsp+0x8],rbx
   140006111:	push   rdi
   140006112:	sub    rsp,0x20
   140006116:	lea    rbx,[rip+0xa543]        # 0x140010660
   14000611d:	lea    rdi,[rip+0xa53c]        # 0x140010660
   140006124:	jmp    0x140006134
   140006126:	mov    rax,QWORD PTR [rbx]
   140006129:	test   rax,rax
   14000612c:	je     0x140006130
   14000612e:	call   rax
   140006130:	add    rbx,0x8
   140006134:	cmp    rbx,rdi
   140006137:	jb     0x140006126
   140006139:	mov    rbx,QWORD PTR [rsp+0x30]
   14000613e:	add    rsp,0x20
   140006142:	pop    rdi
   140006143:	ret    
   140006144:	mov    QWORD PTR [rsp+0x8],rbx
   140006149:	push   rdi
   14000614a:	sub    rsp,0x20
   14000614e:	lea    rbx,[rip+0xa51b]        # 0x140010670
   140006155:	lea    rdi,[rip+0xa514]        # 0x140010670
   14000615c:	jmp    0x14000616c
   14000615e:	mov    rax,QWORD PTR [rbx]
   140006161:	test   rax,rax
   140006164:	je     0x140006168
   140006166:	call   rax
   140006168:	add    rbx,0x8
   14000616c:	cmp    rbx,rdi
   14000616f:	jb     0x14000615e
   140006171:	mov    rbx,QWORD PTR [rsp+0x30]
   140006176:	add    rsp,0x20
   14000617a:	pop    rdi
   14000617b:	ret    
   14000617c:	mov    QWORD PTR [rsp+0x8],rbx
   140006181:	push   rdi
   140006182:	sub    rsp,0x20
   140006186:	lea    rbx,[rip+0xcec3]        # 0x140013050
   14000618d:	mov    edi,0xa
   140006192:	mov    rcx,QWORD PTR [rbx]
   140006195:	call   0x140005744
   14000619a:	mov    QWORD PTR [rbx],rax
   14000619d:	add    rbx,0x8
   1400061a1:	sub    rdi,0x1
   1400061a5:	jne    0x140006192
   1400061a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061ac:	add    rsp,0x20
   1400061b0:	pop    rdi
   1400061b1:	ret    
   1400061b2:	int3   
   1400061b3:	int3   
   1400061b4:	int3   
   1400061b5:	int3   
   1400061b6:	int3   
   1400061b7:	int3   
   1400061b8:	int3   
   1400061b9:	int3   
   1400061ba:	int3   
   1400061bb:	int3   
   1400061bc:	int3   
   1400061bd:	int3   
   1400061be:	int3   
   1400061bf:	int3   
   1400061c0:	mov    rax,rcx
   1400061c3:	mov    ecx,0x5a4d
   1400061c8:	cmp    WORD PTR [rax],cx
   1400061cb:	je     0x1400061d0
   1400061cd:	xor    eax,eax
   1400061cf:	ret    
   1400061d0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400061d4:	add    rcx,rax
   1400061d7:	xor    eax,eax
   1400061d9:	cmp    DWORD PTR [rcx],0x4550
   1400061df:	jne    0x1400061ed
   1400061e1:	mov    edx,0x20b
   1400061e6:	cmp    WORD PTR [rcx+0x18],dx
   1400061ea:	sete   al
   1400061ed:	repz ret 
   1400061ef:	int3   
   1400061f0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400061f4:	xor    r9d,r9d
   1400061f7:	mov    r10,rdx
   1400061fa:	add    r8,rcx
   1400061fd:	movzx  eax,WORD PTR [r8+0x14]
   140006202:	movzx  r11d,WORD PTR [r8+0x6]
   140006207:	lea    rcx,[rax+r8*1+0x18]
   14000620c:	test   r11d,r11d
   14000620f:	je     0x14000622f
   140006211:	mov    edx,DWORD PTR [rcx+0xc]
   140006214:	cmp    r10,rdx
   140006217:	jb     0x140006223
   140006219:	mov    eax,DWORD PTR [rcx+0x8]
   14000621c:	add    eax,edx
   14000621e:	cmp    r10,rax
   140006221:	jb     0x140006232
   140006223:	inc    r9d
   140006226:	add    rcx,0x28
   14000622a:	cmp    r9d,r11d
   14000622d:	jb     0x140006211
   14000622f:	xor    eax,eax
   140006231:	ret    
   140006232:	mov    rax,rcx
   140006235:	ret    
   140006236:	int3   
   140006237:	int3   
   140006238:	int3   
   140006239:	int3   
   14000623a:	int3   
   14000623b:	int3   
   14000623c:	int3   
   14000623d:	int3   
   14000623e:	int3   
   14000623f:	int3   
   140006240:	sub    rsp,0x28
   140006244:	mov    r8,rcx
   140006247:	lea    r9,[rip+0xffffffffffff9db2]        # 0x140000000
   14000624e:	mov    rcx,r9
   140006251:	call   0x1400061c0
   140006256:	test   eax,eax
   140006258:	je     0x14000627c
   14000625a:	sub    r8,r9
   14000625d:	mov    rdx,r8
   140006260:	mov    rcx,r9
   140006263:	call   0x1400061f0
   140006268:	test   rax,rax
   14000626b:	je     0x14000627c
   14000626d:	mov    eax,DWORD PTR [rax+0x24]
   140006270:	shr    eax,0x1f
   140006273:	not    eax
   140006275:	and    eax,0x1
   140006278:	jmp    0x14000627c
   14000627a:	xor    eax,eax
   14000627c:	add    rsp,0x28
   140006280:	ret    
   140006281:	int3   
   140006282:	int3   
   140006283:	int3   
   140006284:	sub    rsp,0x28
   140006288:	call   0x1400058c0
   14000628d:	mov    rcx,QWORD PTR [rax+0xd0]
   140006294:	test   rcx,rcx
   140006297:	je     0x14000629d
   140006299:	call   rcx
   14000629b:	jmp    0x14000629d
   14000629d:	call   0x140009b24
   1400062a2:	add    rsp,0x28
   1400062a6:	ret    
   1400062a7:	int3   
   1400062a8:	sub    rsp,0x28
   1400062ac:	lea    rcx,[rip+0xffffffffffffffd1]        # 0x140006284
   1400062b3:	call   0x140005744
   1400062b8:	mov    QWORD PTR [rip+0xde29],rax        # 0x1400140e8
   1400062bf:	add    rsp,0x28
   1400062c3:	ret    
   1400062c4:	ret    0x0
   1400062c7:	int3   
   1400062c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400062cd:	mov    QWORD PTR [rsp+0x10],rbp
   1400062d2:	mov    QWORD PTR [rsp+0x18],rsi
   1400062d7:	push   rdi
   1400062d8:	sub    rsp,0x20
   1400062dc:	mov    rsi,rdx
   1400062df:	mov    edi,ecx
   1400062e1:	call   0x14000583c
   1400062e6:	xor    r11d,r11d
   1400062e9:	mov    rbx,rax
   1400062ec:	cmp    rax,r11
   1400062ef:	je     0x14000647f
   1400062f5:	mov    rcx,QWORD PTR [rax+0xa0]
   1400062fc:	movsxd r8,DWORD PTR [rip+0xcda9]        # 0x1400130ac
   140006303:	mov    rdx,rcx
   140006306:	cmp    DWORD PTR [rdx],edi
   140006308:	je     0x14000631d
   14000630a:	mov    rax,r8
   14000630d:	add    rdx,0x10
   140006311:	shl    rax,0x4
   140006315:	add    rax,rcx
   140006318:	cmp    rdx,rax
   14000631b:	jb     0x140006306
   14000631d:	mov    rax,r8
   140006320:	shl    rax,0x4
   140006324:	add    rax,rcx
   140006327:	cmp    rdx,rax
   14000632a:	jae    0x140006330
   14000632c:	cmp    DWORD PTR [rdx],edi
   14000632e:	je     0x140006333
   140006330:	mov    rdx,r11
   140006333:	cmp    rdx,r11
   140006336:	je     0x14000647f
   14000633c:	mov    r8,QWORD PTR [rdx+0x8]
   140006340:	cmp    r8,r11
   140006343:	je     0x14000647f
   140006349:	cmp    r8,0x5
   14000634d:	jne    0x14000635c
   14000634f:	mov    QWORD PTR [rdx+0x8],r11
   140006353:	lea    eax,[r8-0x4]
   140006357:	jmp    0x140006481
   14000635c:	cmp    r8,0x1
   140006360:	jne    0x14000636a
   140006362:	or     eax,0xffffffff
   140006365:	jmp    0x140006481
   14000636a:	mov    rbp,QWORD PTR [rbx+0xa8]
   140006371:	mov    QWORD PTR [rbx+0xa8],rsi
   140006378:	mov    ecx,DWORD PTR [rdx+0x4]
   14000637b:	cmp    ecx,0x8
   14000637e:	jne    0x14000646c
   140006384:	movsxd r10,DWORD PTR [rip+0xcd15]        # 0x1400130a0
   14000638b:	mov    ecx,DWORD PTR [rip+0xcd13]        # 0x1400130a4
   140006391:	add    ecx,r10d
   140006394:	mov    r9,r10
   140006397:	cmp    r10d,ecx
   14000639a:	jge    0x1400063c6
   14000639c:	shl    r9,0x4
   1400063a0:	mov    rax,QWORD PTR [rbx+0xa0]
   1400063a7:	inc    r10d
   1400063aa:	add    r9,0x10
   1400063ae:	mov    QWORD PTR [r9+rax*1-0x8],r11
   1400063b3:	mov    ecx,DWORD PTR [rip+0xcce7]        # 0x1400130a0
   1400063b9:	mov    eax,DWORD PTR [rip+0xcce5]        # 0x1400130a4
   1400063bf:	add    ecx,eax
   1400063c1:	cmp    r10d,ecx
   1400063c4:	jl     0x1400063a0
   1400063c6:	cmp    DWORD PTR [rdx],0xc000008e
   1400063cc:	mov    edi,DWORD PTR [rbx+0xb0]
   1400063d2:	jne    0x1400063e0
   1400063d4:	mov    DWORD PTR [rbx+0xb0],0x83
   1400063de:	jmp    0x140006456
   1400063e0:	cmp    DWORD PTR [rdx],0xc0000090
   1400063e6:	jne    0x1400063f4
   1400063e8:	mov    DWORD PTR [rbx+0xb0],0x81
   1400063f2:	jmp    0x140006456
   1400063f4:	cmp    DWORD PTR [rdx],0xc0000091
   1400063fa:	jne    0x140006408
   1400063fc:	mov    DWORD PTR [rbx+0xb0],0x84
   140006406:	jmp    0x140006456
   140006408:	cmp    DWORD PTR [rdx],0xc0000093
   14000640e:	jne    0x14000641c
   140006410:	mov    DWORD PTR [rbx+0xb0],0x85
   14000641a:	jmp    0x140006456
   14000641c:	cmp    DWORD PTR [rdx],0xc000008d
   140006422:	jne    0x140006430
   140006424:	mov    DWORD PTR [rbx+0xb0],0x82
   14000642e:	jmp    0x140006456
   140006430:	cmp    DWORD PTR [rdx],0xc000008f
   140006436:	jne    0x140006444
   140006438:	mov    DWORD PTR [rbx+0xb0],0x86
   140006442:	jmp    0x140006456
   140006444:	cmp    DWORD PTR [rdx],0xc0000092
   14000644a:	jne    0x140006456
   14000644c:	mov    DWORD PTR [rbx+0xb0],0x8a
   140006456:	mov    edx,DWORD PTR [rbx+0xb0]
   14000645c:	mov    ecx,0x8
   140006461:	call   r8
   140006464:	mov    DWORD PTR [rbx+0xb0],edi
   14000646a:	jmp    0x140006473
   14000646c:	mov    QWORD PTR [rdx+0x8],r11
   140006470:	call   r8
   140006473:	mov    QWORD PTR [rbx+0xa8],rbp
   14000647a:	jmp    0x140006362
   14000647f:	xor    eax,eax
   140006481:	mov    rbx,QWORD PTR [rsp+0x30]
   140006486:	mov    rbp,QWORD PTR [rsp+0x38]
   14000648b:	mov    rsi,QWORD PTR [rsp+0x40]
   140006490:	add    rsp,0x20
   140006494:	pop    rdi
   140006495:	ret    
   140006496:	int3   
   140006497:	int3   
   140006498:	mov    QWORD PTR [rip+0xdc51],rcx        # 0x1400140f0
   14000649f:	mov    QWORD PTR [rip+0xdc52],rcx        # 0x1400140f8
   1400064a6:	mov    QWORD PTR [rip+0xdc53],rcx        # 0x140014100
   1400064ad:	mov    QWORD PTR [rip+0xdc54],rcx        # 0x140014108
   1400064b4:	ret    
   1400064b5:	int3   
   1400064b6:	int3   
   1400064b7:	int3   
   1400064b8:	mov    rcx,QWORD PTR [rip+0xdc41]        # 0x140014100
   1400064bf:	jmp    0x140005758
   1400064c4:	mov    QWORD PTR [rsp+0x10],rbx
   1400064c9:	mov    QWORD PTR [rsp+0x18],rsi
   1400064ce:	push   rdi
   1400064cf:	push   r12
   1400064d1:	push   r13
   1400064d3:	push   r14
   1400064d5:	push   r15
   1400064d7:	sub    rsp,0x40
   1400064db:	mov    ebx,ecx
   1400064dd:	xor    edi,edi
   1400064df:	mov    DWORD PTR [rsp+0x70],edi
   1400064e3:	xor    esi,esi
   1400064e5:	mov    edx,ecx
   1400064e7:	sub    edx,0x2
   1400064ea:	je     0x1400065f9
   1400064f0:	sub    edx,0x2
   1400064f3:	je     0x14000659b
   1400064f9:	sub    edx,0x2
   1400064fc:	je     0x140006582
   140006502:	sub    edx,0x2
   140006505:	je     0x14000659b
   14000650b:	sub    edx,0x3
   14000650e:	je     0x14000659b
   140006514:	sub    edx,0x4
   140006517:	je     0x140006566
   140006519:	sub    edx,0x6
   14000651c:	je     0x14000654a
   14000651e:	cmp    edx,0x1
   140006521:	je     0x140006582
   140006523:	call   0x140003fbc
   140006528:	mov    DWORD PTR [rax],0x16
   14000652e:	and    QWORD PTR [rsp+0x20],rsi
   140006533:	xor    r9d,r9d
   140006536:	xor    r8d,r8d
   140006539:	xor    edx,edx
   14000653b:	xor    ecx,ecx
   14000653d:	call   0x140003eec
   140006542:	or     eax,0xffffffff
   140006545:	jmp    0x14000671b
   14000654a:	lea    r12,[rip+0xdba7]        # 0x1400140f8
   140006551:	mov    rcx,QWORD PTR [rip+0xdba0]        # 0x1400140f8
   140006558:	mov    edi,0x1
   14000655d:	mov    DWORD PTR [rsp+0x70],edi
   140006561:	jmp    0x140006610
   140006566:	lea    r12,[rip+0xdb9b]        # 0x140014108
   14000656d:	mov    rcx,QWORD PTR [rip+0xdb94]        # 0x140014108
   140006574:	mov    edi,0x1
   140006579:	mov    DWORD PTR [rsp+0x70],edi
   14000657d:	jmp    0x140006610
   140006582:	lea    r12,[rip+0xdb77]        # 0x140014100
   140006589:	mov    rcx,QWORD PTR [rip+0xdb70]        # 0x140014100
   140006590:	mov    edi,0x1
   140006595:	mov    DWORD PTR [rsp+0x70],edi
   140006599:	jmp    0x140006610
   14000659b:	call   0x14000583c
   1400065a0:	mov    rsi,rax
   1400065a3:	test   rax,rax
   1400065a6:	jne    0x1400065b0
   1400065a8:	or     eax,0xffffffff
   1400065ab:	jmp    0x14000671b
   1400065b0:	mov    rdx,QWORD PTR [rax+0xa0]
   1400065b7:	mov    rcx,rdx
   1400065ba:	movsxd r8,DWORD PTR [rip+0xcaeb]        # 0x1400130ac
   1400065c1:	cmp    DWORD PTR [rcx+0x4],ebx
   1400065c4:	je     0x1400065d9
   1400065c6:	add    rcx,0x10
   1400065ca:	mov    rax,r8
   1400065cd:	shl    rax,0x4
   1400065d1:	add    rax,rdx
   1400065d4:	cmp    rcx,rax
   1400065d7:	jb     0x1400065c1
   1400065d9:	mov    rax,r8
   1400065dc:	shl    rax,0x4
   1400065e0:	add    rax,rdx
   1400065e3:	cmp    rcx,rax
   1400065e6:	jae    0x1400065ed
   1400065e8:	cmp    DWORD PTR [rcx+0x4],ebx
   1400065eb:	je     0x1400065ef
   1400065ed:	xor    ecx,ecx
   1400065ef:	lea    r12,[rcx+0x8]
   1400065f3:	mov    r13,QWORD PTR [r12]
   1400065f7:	jmp    0x140006618
   1400065f9:	lea    r12,[rip+0xdaf0]        # 0x1400140f0
   140006600:	mov    rcx,QWORD PTR [rip+0xdae9]        # 0x1400140f0
   140006607:	mov    edi,0x1
   14000660c:	mov    DWORD PTR [rsp+0x70],edi
   140006610:	call   0x140005758
   140006615:	mov    r13,rax
   140006618:	cmp    r13,0x1
   14000661c:	jne    0x140006625
   14000661e:	xor    eax,eax
   140006620:	jmp    0x14000671b
   140006625:	test   r13,r13
   140006628:	jne    0x140006634
   14000662a:	lea    ecx,[r13+0x3]
   14000662e:	call   0x14000295c
   140006633:	int3   
   140006634:	test   edi,edi
   140006636:	je     0x140006640
   140006638:	xor    ecx,ecx
   14000663a:	call   0x140004708
   14000663f:	nop
   140006640:	cmp    ebx,0x8
   140006643:	je     0x14000665b
   140006645:	cmp    ebx,0xb
   140006648:	je     0x14000665b
   14000664a:	cmp    ebx,0x4
   14000664d:	je     0x14000665b
   14000664f:	mov    r15,QWORD PTR [rsp+0x38]
   140006654:	mov    r14d,DWORD PTR [rsp+0x70]
   140006659:	jmp    0x14000668c
   14000665b:	mov    r15,QWORD PTR [rsi+0xa8]
   140006662:	mov    QWORD PTR [rsp+0x38],r15
   140006667:	and    QWORD PTR [rsi+0xa8],0x0
   14000666f:	cmp    ebx,0x8
   140006672:	jne    0x140006687
   140006674:	mov    r14d,DWORD PTR [rsi+0xb0]
   14000667b:	mov    DWORD PTR [rsi+0xb0],0x8c
   140006685:	jmp    0x14000668c
   140006687:	mov    r14d,DWORD PTR [rsp+0x70]
   14000668c:	cmp    ebx,0x8
   14000668f:	jne    0x1400066ca
   140006691:	mov    ecx,DWORD PTR [rip+0xca09]        # 0x1400130a0
   140006697:	mov    edx,ecx
   140006699:	mov    DWORD PTR [rsp+0x30],ecx
   14000669d:	mov    eax,DWORD PTR [rip+0xca01]        # 0x1400130a4
   1400066a3:	add    ecx,eax
   1400066a5:	cmp    edx,ecx
   1400066a7:	jge    0x1400066d3
   1400066a9:	movsxd rcx,edx
   1400066ac:	add    rcx,rcx
   1400066af:	mov    rax,QWORD PTR [rsi+0xa0]
   1400066b6:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   1400066bc:	inc    edx
   1400066be:	mov    DWORD PTR [rsp+0x30],edx
   1400066c2:	mov    ecx,DWORD PTR [rip+0xc9d8]        # 0x1400130a0
   1400066c8:	jmp    0x14000669d
   1400066ca:	call   0x14000574c
   1400066cf:	mov    QWORD PTR [r12],rax
   1400066d3:	test   edi,edi
   1400066d5:	je     0x1400066de
   1400066d7:	xor    ecx,ecx
   1400066d9:	call   0x140004608
   1400066de:	mov    edi,0x8
   1400066e3:	cmp    ebx,edi
   1400066e5:	jne    0x1400066f4
   1400066e7:	mov    edx,DWORD PTR [rsi+0xb0]
   1400066ed:	mov    ecx,edi
   1400066ef:	call   r13
   1400066f2:	jmp    0x1400066f9
   1400066f4:	mov    ecx,ebx
   1400066f6:	call   r13
   1400066f9:	cmp    ebx,edi
   1400066fb:	je     0x140006707
   1400066fd:	cmp    ebx,0xb
   140006700:	je     0x140006707
   140006702:	cmp    ebx,0x4
   140006705:	jne    0x140006719
   140006707:	mov    QWORD PTR [rsi+0xa8],r15
   14000670e:	cmp    ebx,edi
   140006710:	jne    0x140006719
   140006712:	mov    DWORD PTR [rsi+0xb0],r14d
   140006719:	xor    eax,eax
   14000671b:	lea    r11,[rsp+0x40]
   140006720:	mov    rbx,QWORD PTR [r11+0x38]
   140006724:	mov    rsi,QWORD PTR [r11+0x40]
   140006728:	mov    rsp,r11
   14000672b:	pop    r15
   14000672d:	pop    r14
   14000672f:	pop    r13
   140006731:	pop    r12
   140006733:	pop    rdi
   140006734:	ret    
   140006735:	int3   
   140006736:	int3   
   140006737:	int3   
   140006738:	mov    QWORD PTR [rip+0xd9d9],rcx        # 0x140014118
   14000673f:	ret    
   140006740:	mov    QWORD PTR [rip+0xd9e1],rcx        # 0x140014128
   140006747:	ret    
   140006748:	mov    QWORD PTR [rip+0xd9e1],rcx        # 0x140014130
   14000674f:	ret    
   140006750:	sub    rsp,0x38
   140006754:	call   QWORD PTR [rip+0x8a06]        # 0x14000f160
   14000675a:	mov    r11d,eax
   14000675d:	mov    DWORD PTR [rsp+0x20],eax
   140006761:	jmp    0x14000677d
   140006763:	cmp    eax,0xc0000017
   140006768:	jne    0x140006775
   14000676a:	mov    ecx,0x8
   14000676f:	call   QWORD PTR [rip+0x89c3]        # 0x14000f138
   140006775:	xor    r11d,r11d
   140006778:	mov    DWORD PTR [rsp+0x20],r11d
   14000677d:	mov    eax,r11d
   140006780:	add    rsp,0x38
   140006784:	ret    
   140006785:	int3   
   140006786:	int3   
   140006787:	int3   
   140006788:	mov    QWORD PTR [rip+0xd9a9],rcx        # 0x140014138
   14000678f:	ret    
   140006790:	rex push rbx
   140006792:	sub    rsp,0x20
   140006796:	mov    rbx,rcx
   140006799:	mov    rcx,QWORD PTR [rip+0xd998]        # 0x140014138
   1400067a0:	call   0x140005758
   1400067a5:	test   rax,rax
   1400067a8:	je     0x1400067ba
   1400067aa:	mov    rcx,rbx
   1400067ad:	call   rax
   1400067af:	test   eax,eax
   1400067b1:	je     0x1400067ba
   1400067b3:	mov    eax,0x1
   1400067b8:	jmp    0x1400067bc
   1400067ba:	xor    eax,eax
   1400067bc:	add    rsp,0x20
   1400067c0:	pop    rbx
   1400067c1:	ret    
   1400067c2:	int3   
   1400067c3:	int3   
   1400067c4:	sub    rsp,0x28
   1400067c8:	mov    rax,QWORD PTR [rcx]
   1400067cb:	cmp    DWORD PTR [rax],0xe06d7363
   1400067d1:	jne    0x1400067fe
   1400067d3:	cmp    DWORD PTR [rax+0x18],0x4
   1400067d7:	jne    0x1400067fe
   1400067d9:	mov    eax,DWORD PTR [rax+0x20]
   1400067dc:	cmp    eax,0x19930520
   1400067e1:	je     0x1400067f8
   1400067e3:	cmp    eax,0x19930521
   1400067e8:	je     0x1400067f8
   1400067ea:	cmp    eax,0x19930522
   1400067ef:	je     0x1400067f8
   1400067f1:	cmp    eax,0x1994000
   1400067f6:	jne    0x1400067fe
   1400067f8:	call   0x140006284
   1400067fd:	int3   
   1400067fe:	xor    eax,eax
   140006800:	add    rsp,0x28
   140006804:	ret    
   140006805:	int3   
   140006806:	int3   
   140006807:	int3   
   140006808:	sub    rsp,0x28
   14000680c:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x1400067c4
   140006813:	call   QWORD PTR [rip+0x8897]        # 0x14000f0b0
   140006819:	xor    eax,eax
   14000681b:	add    rsp,0x28
   14000681f:	ret    
   140006820:	mov    QWORD PTR [rsp+0x8],rbx
   140006825:	push   rdi
   140006826:	sub    rsp,0x20
   14000682a:	xor    edi,edi
   14000682c:	cmp    DWORD PTR [rip+0xdd76],edi        # 0x1400145a8
   140006832:	jne    0x140006839
   140006834:	call   0x140005390
   140006839:	mov    rbx,QWORD PTR [rip+0xdd48]        # 0x140014588
   140006840:	lea    rax,[rip+0x8cbb]        # 0x14000f502
   140006847:	test   rbx,rbx
   14000684a:	cmove  rbx,rax
   14000684e:	cmp    BYTE PTR [rbx],0x20
   140006851:	ja     0x14000685c
   140006853:	cmp    BYTE PTR [rbx],0x0
   140006856:	je     0x14000688b
   140006858:	test   edi,edi
   14000685a:	je     0x140006885
   14000685c:	cmp    BYTE PTR [rbx],0x22
   14000685f:	jne    0x14000686a
   140006861:	xor    eax,eax
   140006863:	test   edi,edi
   140006865:	sete   al
   140006868:	mov    edi,eax
   14000686a:	movzx  ecx,BYTE PTR [rbx]
   14000686d:	call   0x1400049e8
   140006872:	test   eax,eax
   140006874:	je     0x140006879
   140006876:	inc    rbx
   140006879:	inc    rbx
   14000687c:	jmp    0x14000684e
   14000687e:	cmp    al,0x20
   140006880:	ja     0x14000688b
   140006882:	inc    rbx
   140006885:	mov    al,BYTE PTR [rbx]
   140006887:	test   al,al
   140006889:	jne    0x14000687e
   14000688b:	mov    rax,rbx
   14000688e:	mov    rbx,QWORD PTR [rsp+0x30]
   140006893:	add    rsp,0x20
   140006897:	pop    rdi
   140006898:	ret    
   140006899:	int3   
   14000689a:	int3   
   14000689b:	int3   
   14000689c:	mov    QWORD PTR [rsp+0x8],rbx
   1400068a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400068a6:	mov    QWORD PTR [rsp+0x18],rsi
   1400068ab:	push   rdi
   1400068ac:	sub    rsp,0x30
   1400068b0:	cmp    DWORD PTR [rip+0xdcf1],0x0        # 0x1400145a8
   1400068b7:	jne    0x1400068be
   1400068b9:	call   0x140005390
   1400068be:	mov    rbx,QWORD PTR [rip+0xccdb]        # 0x1400135a0
   1400068c5:	xor    edi,edi
   1400068c7:	test   rbx,rbx
   1400068ca:	jne    0x1400068e7
   1400068cc:	or     eax,0xffffffff
   1400068cf:	jmp    0x14000699d
   1400068d4:	cmp    al,0x3d
   1400068d6:	je     0x1400068da
   1400068d8:	inc    edi
   1400068da:	mov    rcx,rbx
   1400068dd:	call   0x1400070e0
   1400068e2:	lea    rbx,[rbx+rax*1+0x1]
   1400068e7:	mov    al,BYTE PTR [rbx]
   1400068e9:	test   al,al
   1400068eb:	jne    0x1400068d4
   1400068ed:	lea    eax,[rdi+0x1]
   1400068f0:	mov    edx,0x8
   1400068f5:	movsxd rcx,eax
   1400068f8:	call   0x1400040b0
   1400068fd:	mov    rdi,rax
   140006900:	mov    QWORD PTR [rip+0xcc59],rax        # 0x140013560
   140006907:	test   rax,rax
   14000690a:	je     0x1400068cc
   14000690c:	mov    rbx,QWORD PTR [rip+0xcc8d]        # 0x1400135a0
   140006913:	cmp    BYTE PTR [rbx],0x0
   140006916:	je     0x14000697d
   140006918:	mov    rcx,rbx
   14000691b:	call   0x1400070e0
   140006920:	cmp    BYTE PTR [rbx],0x3d
   140006923:	lea    esi,[rax+0x1]
   140006926:	je     0x14000696b
   140006928:	movsxd rbp,esi
   14000692b:	mov    edx,0x1
   140006930:	mov    rcx,rbp
   140006933:	call   0x1400040b0
   140006938:	mov    QWORD PTR [rdi],rax
   14000693b:	test   rax,rax
   14000693e:	je     0x1400069b2
   140006940:	mov    r8,rbx
   140006943:	mov    rdx,rbp
   140006946:	mov    rcx,rax
   140006949:	call   0x140009454
   14000694e:	test   eax,eax
   140006950:	je     0x140006967
   140006952:	and    QWORD PTR [rsp+0x20],0x0
   140006958:	xor    r9d,r9d
   14000695b:	xor    r8d,r8d
   14000695e:	xor    edx,edx
   140006960:	xor    ecx,ecx
   140006962:	call   0x140003dc4
   140006967:	add    rdi,0x8
   14000696b:	movsxd rax,esi
   14000696e:	add    rbx,rax
   140006971:	cmp    BYTE PTR [rbx],0x0
   140006974:	jne    0x140006918
   140006976:	mov    rbx,QWORD PTR [rip+0xcc23]        # 0x1400135a0
   14000697d:	mov    rcx,rbx
   140006980:	call   0x140004244
   140006985:	and    QWORD PTR [rip+0xcc13],0x0        # 0x1400135a0
   14000698d:	and    QWORD PTR [rdi],0x0
   140006991:	mov    DWORD PTR [rip+0xdbf5],0x1        # 0x140014590
   14000699b:	xor    eax,eax
   14000699d:	mov    rbx,QWORD PTR [rsp+0x40]
   1400069a2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400069a7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400069ac:	add    rsp,0x30
   1400069b0:	pop    rdi
   1400069b1:	ret    
   1400069b2:	mov    rcx,QWORD PTR [rip+0xcba7]        # 0x140013560
   1400069b9:	call   0x140004244
   1400069be:	and    QWORD PTR [rip+0xcb9a],0x0        # 0x140013560
   1400069c6:	jmp    0x1400068cc
   1400069cb:	int3   
   1400069cc:	mov    rax,rsp
   1400069cf:	mov    QWORD PTR [rax+0x8],rbx
   1400069d3:	mov    QWORD PTR [rax+0x10],rbp
   1400069d7:	mov    QWORD PTR [rax+0x18],rsi
   1400069db:	mov    QWORD PTR [rax+0x20],rdi
   1400069df:	push   r12
   1400069e1:	push   r13
   1400069e3:	push   r14
   1400069e5:	sub    rsp,0x20
   1400069e9:	mov    r13,QWORD PTR [rsp+0x60]
   1400069ee:	mov    r14,r9
   1400069f1:	mov    rdi,r8
   1400069f4:	and    DWORD PTR [r13+0x0],0x0
   1400069f9:	mov    r12,rdx
   1400069fc:	mov    rbx,rcx
   1400069ff:	mov    DWORD PTR [r9],0x1
   140006a06:	test   rdx,rdx
   140006a09:	je     0x140006a12
   140006a0b:	mov    QWORD PTR [rdx],r8
   140006a0e:	add    r12,0x8
   140006a12:	xor    ebp,ebp
   140006a14:	cmp    BYTE PTR [rbx],0x22
   140006a17:	jne    0x140006a2a
   140006a19:	xor    eax,eax
   140006a1b:	test   ebp,ebp
   140006a1d:	mov    sil,0x22
   140006a20:	sete   al
   140006a23:	inc    rbx
   140006a26:	mov    ebp,eax
   140006a28:	jmp    0x140006a63
   140006a2a:	inc    DWORD PTR [r13+0x0]
   140006a2e:	test   rdi,rdi
   140006a31:	je     0x140006a3a
   140006a33:	mov    al,BYTE PTR [rbx]
   140006a35:	mov    BYTE PTR [rdi],al
   140006a37:	inc    rdi
   140006a3a:	movzx  esi,BYTE PTR [rbx]
   140006a3d:	inc    rbx
   140006a40:	mov    ecx,esi
   140006a42:	call   0x1400049e8
   140006a47:	test   eax,eax
   140006a49:	je     0x140006a5e
   140006a4b:	inc    DWORD PTR [r13+0x0]
   140006a4f:	test   rdi,rdi
   140006a52:	je     0x140006a5b
   140006a54:	mov    al,BYTE PTR [rbx]
   140006a56:	mov    BYTE PTR [rdi],al
   140006a58:	inc    rdi
   140006a5b:	inc    rbx
   140006a5e:	test   sil,sil
   140006a61:	je     0x140006a7e
   140006a63:	test   ebp,ebp
   140006a65:	jne    0x140006a14
   140006a67:	cmp    sil,0x20
   140006a6b:	je     0x140006a73
   140006a6d:	cmp    sil,0x9
   140006a71:	jne    0x140006a14
   140006a73:	test   rdi,rdi
   140006a76:	je     0x140006a81
   140006a78:	mov    BYTE PTR [rdi-0x1],0x0
   140006a7c:	jmp    0x140006a81
   140006a7e:	dec    rbx
   140006a81:	xor    esi,esi
   140006a83:	cmp    BYTE PTR [rbx],0x0
   140006a86:	je     0x140006b6f
   140006a8c:	cmp    BYTE PTR [rbx],0x20
   140006a8f:	je     0x140006a96
   140006a91:	cmp    BYTE PTR [rbx],0x9
   140006a94:	jne    0x140006a9b
   140006a96:	inc    rbx
   140006a99:	jmp    0x140006a8c
   140006a9b:	cmp    BYTE PTR [rbx],0x0
   140006a9e:	je     0x140006b6f
   140006aa4:	test   r12,r12
   140006aa7:	je     0x140006ab1
   140006aa9:	mov    QWORD PTR [r12],rdi
   140006aad:	add    r12,0x8
   140006ab1:	inc    DWORD PTR [r14]
   140006ab4:	mov    edx,0x1
   140006ab9:	xor    ecx,ecx
   140006abb:	jmp    0x140006ac2
   140006abd:	inc    rbx
   140006ac0:	inc    ecx
   140006ac2:	cmp    BYTE PTR [rbx],0x5c
   140006ac5:	je     0x140006abd
   140006ac7:	cmp    BYTE PTR [rbx],0x22
   140006aca:	jne    0x140006b02
   140006acc:	test   dl,cl
   140006ace:	jne    0x140006aed
   140006ad0:	test   esi,esi
   140006ad2:	je     0x140006ae2
   140006ad4:	lea    rax,[rbx+0x1]
   140006ad8:	cmp    BYTE PTR [rax],0x22
   140006adb:	jne    0x140006ae2
   140006add:	mov    rbx,rax
   140006ae0:	jmp    0x140006aed
   140006ae2:	xor    eax,eax
   140006ae4:	xor    edx,edx
   140006ae6:	test   esi,esi
   140006ae8:	sete   al
   140006aeb:	mov    esi,eax
   140006aed:	shr    ecx,1
   140006aef:	jmp    0x140006b02
   140006af1:	dec    ecx
   140006af3:	test   rdi,rdi
   140006af6:	je     0x140006afe
   140006af8:	mov    BYTE PTR [rdi],0x5c
   140006afb:	inc    rdi
   140006afe:	inc    DWORD PTR [r13+0x0]
   140006b02:	test   ecx,ecx
   140006b04:	jne    0x140006af1
   140006b06:	mov    al,BYTE PTR [rbx]
   140006b08:	test   al,al
   140006b0a:	je     0x140006b5b
   140006b0c:	test   esi,esi
   140006b0e:	jne    0x140006b18
   140006b10:	cmp    al,0x20
   140006b12:	je     0x140006b5b
   140006b14:	cmp    al,0x9
   140006b16:	je     0x140006b5b
   140006b18:	test   edx,edx
   140006b1a:	je     0x140006b53
   140006b1c:	movsx  ecx,al
   140006b1f:	call   0x1400049e8
   140006b24:	test   rdi,rdi
   140006b27:	je     0x140006b44
   140006b29:	test   eax,eax
   140006b2b:	je     0x140006b3b
   140006b2d:	mov    al,BYTE PTR [rbx]
   140006b2f:	inc    rbx
   140006b32:	mov    BYTE PTR [rdi],al
   140006b34:	inc    rdi
   140006b37:	inc    DWORD PTR [r13+0x0]
   140006b3b:	mov    al,BYTE PTR [rbx]
   140006b3d:	mov    BYTE PTR [rdi],al
   140006b3f:	inc    rdi
   140006b42:	jmp    0x140006b4f
   140006b44:	test   eax,eax
   140006b46:	je     0x140006b4f
   140006b48:	inc    rbx
   140006b4b:	inc    DWORD PTR [r13+0x0]
   140006b4f:	inc    DWORD PTR [r13+0x0]
   140006b53:	inc    rbx
   140006b56:	jmp    0x140006ab4
   140006b5b:	test   rdi,rdi
   140006b5e:	je     0x140006b66
   140006b60:	mov    BYTE PTR [rdi],0x0
   140006b63:	inc    rdi
   140006b66:	inc    DWORD PTR [r13+0x0]
   140006b6a:	jmp    0x140006a83
   140006b6f:	test   r12,r12
   140006b72:	je     0x140006b79
   140006b74:	and    QWORD PTR [r12],0x0
   140006b79:	inc    DWORD PTR [r14]
   140006b7c:	mov    rbx,QWORD PTR [rsp+0x40]
   140006b81:	mov    rbp,QWORD PTR [rsp+0x48]
   140006b86:	mov    rsi,QWORD PTR [rsp+0x50]
   140006b8b:	mov    rdi,QWORD PTR [rsp+0x58]
   140006b90:	add    rsp,0x20
   140006b94:	pop    r14
   140006b96:	pop    r13
   140006b98:	pop    r12
   140006b9a:	ret    
   140006b9b:	int3   
   140006b9c:	mov    QWORD PTR [rsp+0x18],rbx
   140006ba1:	mov    QWORD PTR [rsp+0x20],rsi
   140006ba6:	push   rdi
   140006ba7:	sub    rsp,0x30
   140006bab:	cmp    DWORD PTR [rip+0xd9f6],0x0        # 0x1400145a8
   140006bb2:	jne    0x140006bb9
   140006bb4:	call   0x140005390
   140006bb9:	lea    rdi,[rip+0xd580]        # 0x140014140
   140006bc0:	mov    r8d,0x104
   140006bc6:	xor    ecx,ecx
   140006bc8:	mov    rdx,rdi
   140006bcb:	mov    BYTE PTR [rip+0xd672],0x0        # 0x140014244
   140006bd2:	call   QWORD PTR [rip+0x8450]        # 0x14000f028
   140006bd8:	mov    rbx,QWORD PTR [rip+0xd9a9]        # 0x140014588
   140006bdf:	mov    QWORD PTR [rip+0xc99a],rdi        # 0x140013580
   140006be6:	test   rbx,rbx
   140006be9:	je     0x140006bf0
   140006beb:	cmp    BYTE PTR [rbx],0x0
   140006bee:	jne    0x140006bf3
   140006bf0:	mov    rbx,rdi
   140006bf3:	lea    rax,[rsp+0x48]
   140006bf8:	lea    r9,[rsp+0x40]
   140006bfd:	xor    r8d,r8d
   140006c00:	xor    edx,edx
   140006c02:	mov    rcx,rbx
   140006c05:	mov    QWORD PTR [rsp+0x20],rax
   140006c0a:	call   0x1400069cc
   140006c0f:	movsxd rsi,DWORD PTR [rsp+0x40]
   140006c14:	movabs rcx,0x1fffffffffffffff
   140006c1e:	cmp    rsi,rcx
   140006c21:	jae    0x140006c7f
   140006c23:	movsxd rcx,DWORD PTR [rsp+0x48]
   140006c28:	cmp    rcx,0xffffffffffffffff
   140006c2c:	jae    0x140006c7f
   140006c2e:	lea    rdx,[rcx+rsi*8]
   140006c32:	cmp    rdx,rcx
   140006c35:	jb     0x140006c7f
   140006c37:	mov    rcx,rdx
   140006c3a:	call   0x140004044
   140006c3f:	mov    rdi,rax
   140006c42:	test   rax,rax
   140006c45:	je     0x140006c7f
   140006c47:	lea    r8,[rax+rsi*8]
   140006c4b:	lea    rax,[rsp+0x48]
   140006c50:	lea    r9,[rsp+0x40]
   140006c55:	mov    rdx,rdi
   140006c58:	mov    rcx,rbx
   140006c5b:	mov    QWORD PTR [rsp+0x20],rax
   140006c60:	call   0x1400069cc
   140006c65:	mov    r11d,DWORD PTR [rsp+0x40]
   140006c6a:	mov    QWORD PTR [rip+0xc8df],rdi        # 0x140013550
   140006c71:	dec    r11d
   140006c74:	xor    eax,eax
   140006c76:	mov    DWORD PTR [rip+0xc8cf],r11d        # 0x14001354c
   140006c7d:	jmp    0x140006c82
   140006c7f:	or     eax,0xffffffff
   140006c82:	mov    rbx,QWORD PTR [rsp+0x50]
   140006c87:	mov    rsi,QWORD PTR [rsp+0x58]
   140006c8c:	add    rsp,0x30
   140006c90:	pop    rdi
   140006c91:	ret    
   140006c92:	int3   
   140006c93:	int3   
   140006c94:	mov    rax,rsp
   140006c97:	mov    QWORD PTR [rax+0x8],rbx
   140006c9b:	mov    QWORD PTR [rax+0x10],rbp
   140006c9f:	mov    QWORD PTR [rax+0x18],rsi
   140006ca3:	mov    QWORD PTR [rax+0x20],rdi
   140006ca7:	push   r12
   140006ca9:	sub    rsp,0x40
   140006cad:	mov    ecx,DWORD PTR [rip+0xd595]        # 0x140014248
   140006cb3:	xor    r12d,r12d
   140006cb6:	mov    rbx,r12
   140006cb9:	lea    esi,[r12+0x2]
   140006cbe:	cmp    ecx,r12d
   140006cc1:	jne    0x140006cf5
   140006cc3:	call   QWORD PTR [rip+0x84bf]        # 0x14000f188
   140006cc9:	mov    rbx,rax
   140006ccc:	cmp    rax,r12
   140006ccf:	je     0x140006cdd
   140006cd1:	mov    DWORD PTR [rip+0xd56d],0x1        # 0x140014248
   140006cdb:	jmp    0x140006cfe
   140006cdd:	call   QWORD PTR [rip+0x83f5]        # 0x14000f0d8
   140006ce3:	mov    ecx,DWORD PTR [rip+0xd55f]        # 0x140014248
   140006ce9:	cmp    eax,0x78
   140006cec:	cmove  ecx,esi
   140006cef:	mov    DWORD PTR [rip+0xd553],ecx        # 0x140014248
   140006cf5:	cmp    ecx,0x1
   140006cf8:	jne    0x140006db8
   140006cfe:	cmp    rbx,r12
   140006d01:	jne    0x140006d18
   140006d03:	call   QWORD PTR [rip+0x847f]        # 0x14000f188
   140006d09:	mov    rbx,rax
   140006d0c:	cmp    rax,r12
   140006d0f:	jne    0x140006d18
   140006d11:	xor    eax,eax
   140006d13:	jmp    0x140006e2b
   140006d18:	mov    rdi,rbx
   140006d1b:	cmp    WORD PTR [rbx],r12w
   140006d1f:	je     0x140006d33
   140006d21:	add    rdi,rsi
   140006d24:	cmp    WORD PTR [rdi],r12w
   140006d28:	jne    0x140006d21
   140006d2a:	add    rdi,rsi
   140006d2d:	cmp    WORD PTR [rdi],r12w
   140006d31:	jne    0x140006d21
   140006d33:	mov    QWORD PTR [rsp+0x38],r12
   140006d38:	mov    QWORD PTR [rsp+0x30],r12
   140006d3d:	sub    rdi,rbx
   140006d40:	sar    rdi,1
   140006d43:	mov    r8,rbx
   140006d46:	xor    edx,edx
   140006d48:	lea    r9d,[rdi+0x1]
   140006d4c:	xor    ecx,ecx
   140006d4e:	mov    DWORD PTR [rsp+0x28],r12d
   140006d53:	mov    QWORD PTR [rsp+0x20],r12
   140006d58:	call   QWORD PTR [rip+0x8422]        # 0x14000f180
   140006d5e:	movsxd rbp,eax
   140006d61:	cmp    ebp,r12d
   140006d64:	je     0x140006da7
   140006d66:	mov    rcx,rbp
   140006d69:	call   0x140004044
   140006d6e:	mov    rsi,rax
   140006d71:	cmp    rax,r12
   140006d74:	je     0x140006da7
   140006d76:	mov    QWORD PTR [rsp+0x38],r12
   140006d7b:	mov    QWORD PTR [rsp+0x30],r12
   140006d80:	lea    r9d,[rdi+0x1]
   140006d84:	mov    r8,rbx
   140006d87:	xor    edx,edx
   140006d89:	xor    ecx,ecx
   140006d8b:	mov    DWORD PTR [rsp+0x28],ebp
   140006d8f:	mov    QWORD PTR [rsp+0x20],rax
   140006d94:	call   QWORD PTR [rip+0x83e6]        # 0x14000f180
   140006d9a:	cmp    eax,r12d
   140006d9d:	jne    0x140006daa
   140006d9f:	mov    rcx,rsi
   140006da2:	call   0x140004244
   140006da7:	mov    rsi,r12
   140006daa:	mov    rcx,rbx
   140006dad:	call   QWORD PTR [rip+0x83c5]        # 0x14000f178
   140006db3:	mov    rax,rsi
   140006db6:	jmp    0x140006e2b
   140006db8:	cmp    ecx,esi
   140006dba:	je     0x140006dc5
   140006dbc:	cmp    ecx,r12d
   140006dbf:	jne    0x140006d11
   140006dc5:	call   QWORD PTR [rip+0x83a5]        # 0x14000f170
   140006dcb:	mov    rbx,rax
   140006dce:	cmp    rax,r12
   140006dd1:	je     0x140006d11
   140006dd7:	cmp    BYTE PTR [rax],r12b
   140006dda:	je     0x140006dec
   140006ddc:	inc    rax
   140006ddf:	cmp    BYTE PTR [rax],r12b
   140006de2:	jne    0x140006ddc
   140006de4:	inc    rax
   140006de7:	cmp    BYTE PTR [rax],r12b
   140006dea:	jne    0x140006ddc
   140006dec:	sub    eax,ebx
   140006dee:	inc    eax
   140006df0:	movsxd rsi,eax
   140006df3:	mov    rcx,rsi
   140006df6:	call   0x140004044
   140006dfb:	mov    rdi,rax
   140006dfe:	cmp    rax,r12
   140006e01:	jne    0x140006e11
   140006e03:	mov    rcx,rbx
   140006e06:	call   QWORD PTR [rip+0x835c]        # 0x14000f168
   140006e0c:	jmp    0x140006d11
   140006e11:	mov    r8,rsi
   140006e14:	mov    rdx,rbx
   140006e17:	mov    rcx,rax
   140006e1a:	call   0x140008cf0
   140006e1f:	mov    rcx,rbx
   140006e22:	call   QWORD PTR [rip+0x8340]        # 0x14000f168
   140006e28:	mov    rax,rdi
   140006e2b:	mov    rbx,QWORD PTR [rsp+0x50]
   140006e30:	mov    rbp,QWORD PTR [rsp+0x58]
   140006e35:	mov    rsi,QWORD PTR [rsp+0x60]
   140006e3a:	mov    rdi,QWORD PTR [rsp+0x68]
   140006e3f:	add    rsp,0x40
   140006e43:	pop    r12
   140006e45:	ret    
   140006e46:	int3   
   140006e47:	int3   
   140006e48:	mov    DWORD PTR [rsp+0x8],ecx
   140006e4c:	sub    rsp,0x28
   140006e50:	xor    r8d,r8d
   140006e53:	mov    edx,0x1000
   140006e58:	xor    ecx,ecx
   140006e5a:	call   QWORD PTR [rip+0x8338]        # 0x14000f198
   140006e60:	mov    QWORD PTR [rip+0xd3e9],rax        # 0x140014250
   140006e67:	test   rax,rax
   140006e6a:	je     0x140006e8f
   140006e6c:	lea    r8,[rsp+0x30]
   140006e71:	mov    r9d,0x4
   140006e77:	xor    edx,edx
   140006e79:	mov    rcx,rax
   140006e7c:	mov    DWORD PTR [rsp+0x30],0x2
   140006e84:	call   QWORD PTR [rip+0x8306]        # 0x14000f190
   140006e8a:	mov    eax,0x1
   140006e8f:	add    rsp,0x28
   140006e93:	ret    
   140006e94:	mov    QWORD PTR [rsp+0x18],rbx
   140006e99:	push   rdi
   140006e9a:	sub    rsp,0x20
   140006e9e:	mov    rax,QWORD PTR [rip+0xb51b]        # 0x1400123c0
   140006ea5:	and    QWORD PTR [rsp+0x30],0x0
   140006eab:	movabs rdi,0x2b992ddfa232
   140006eb5:	cmp    rax,rdi
   140006eb8:	je     0x140006ec6
   140006eba:	not    rax
   140006ebd:	mov    QWORD PTR [rip+0xb504],rax        # 0x1400123c8
   140006ec4:	jmp    0x140006f3c
   140006ec6:	lea    rcx,[rsp+0x30]
   140006ecb:	call   QWORD PTR [rip+0x82e7]        # 0x14000f1b8
   140006ed1:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ed6:	call   QWORD PTR [rip+0x82d4]        # 0x14000f1b0
   140006edc:	mov    r11d,eax
   140006edf:	xor    rbx,r11
   140006ee2:	call   QWORD PTR [rip+0x8258]        # 0x14000f140
   140006ee8:	mov    r11d,eax
   140006eeb:	xor    rbx,r11
   140006eee:	call   QWORD PTR [rip+0x82b4]        # 0x14000f1a8
   140006ef4:	lea    rcx,[rsp+0x38]
   140006ef9:	mov    r11d,eax
   140006efc:	xor    rbx,r11
   140006eff:	call   QWORD PTR [rip+0x829b]        # 0x14000f1a0
   140006f05:	mov    r11,QWORD PTR [rsp+0x38]
   140006f0a:	xor    r11,rbx
   140006f0d:	movabs rax,0xffffffffffff
   140006f17:	and    r11,rax
   140006f1a:	movabs rax,0x2b992ddfa233
   140006f24:	cmp    r11,rdi
   140006f27:	cmove  r11,rax
   140006f2b:	mov    QWORD PTR [rip+0xb48e],r11        # 0x1400123c0
   140006f32:	not    r11
   140006f35:	mov    QWORD PTR [rip+0xb48c],r11        # 0x1400123c8
   140006f3c:	mov    rbx,QWORD PTR [rsp+0x40]
   140006f41:	add    rsp,0x20
   140006f45:	pop    rdi
   140006f46:	ret    
   140006f47:	int3   
   140006f48:	int3   
   140006f49:	int3   
   140006f4a:	int3   
   140006f4b:	int3   
   140006f4c:	int3   
   140006f4d:	int3   
   140006f4e:	int3   
   140006f4f:	int3   
   140006f50:	int3   
   140006f51:	int3   
   140006f52:	int3   
   140006f53:	int3   
   140006f54:	int3   
   140006f55:	int3   
   140006f56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006f60:	sub    rsp,0x4d8
   140006f67:	xor    r8,r8
   140006f6a:	xor    r9,r9
   140006f6d:	mov    QWORD PTR [rsp+0x20],rsp
   140006f72:	mov    QWORD PTR [rsp+0x28],r8
   140006f77:	call   0x14000be12
   140006f7c:	add    rsp,0x4d8
   140006f83:	ret    
   140006f84:	int3   
   140006f85:	int3   
   140006f86:	int3   
   140006f87:	int3   
   140006f88:	int3   
   140006f89:	int3   
   140006f8a:	nop    WORD PTR [rax+rax*1+0x0]
   140006f90:	mov    QWORD PTR [rsp+0x8],rcx
   140006f95:	mov    QWORD PTR [rsp+0x18],rdx
   140006f9a:	mov    DWORD PTR [rsp+0x10],r8d
   140006f9f:	mov    r9,0x19930520
   140006fa6:	jmp    0x140006fb0
   140006fa8:	int3   
   140006fa9:	int3   
   140006faa:	int3   
   140006fab:	int3   
   140006fac:	int3   
   140006fad:	int3   
   140006fae:	xchg   ax,ax
   140006fb0:	ret    
   140006fb1:	int3   
   140006fb2:	int3   
   140006fb3:	int3   
   140006fb4:	int3   
   140006fb5:	int3   
   140006fb6:	int3   
   140006fb7:	nop    WORD PTR [rax+rax*1+0x0]
   140006fc0:	ret    
   140006fc1:	int3   
   140006fc2:	int3   
   140006fc3:	int3   
   140006fc4:	sub    rsp,0x38
   140006fc8:	cmp    ecx,0xfffffffe
   140006fcb:	jne    0x140006fda
   140006fcd:	call   0x140003fbc
   140006fd2:	mov    DWORD PTR [rax],0x9
   140006fd8:	jmp    0x14000702c
   140006fda:	test   ecx,ecx
   140006fdc:	js     0x14000700c
   140006fde:	cmp    ecx,DWORD PTR [rip+0xd384]        # 0x140014368
   140006fe4:	jae    0x14000700c
   140006fe6:	movsxd rcx,ecx
   140006fe9:	lea    rdx,[rip+0xd390]        # 0x140014380
   140006ff0:	mov    rax,rcx
   140006ff3:	and    ecx,0x1f
   140006ff6:	sar    rax,0x5
   140006ffa:	imul   rcx,rcx,0x58
   140006ffe:	mov    rax,QWORD PTR [rdx+rax*8]
   140007002:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   140007007:	and    eax,0x40
   14000700a:	jmp    0x14000702e
   14000700c:	call   0x140003fbc
   140007011:	and    QWORD PTR [rsp+0x20],0x0
   140007017:	xor    r9d,r9d
   14000701a:	xor    r8d,r8d
   14000701d:	xor    edx,edx
   14000701f:	xor    ecx,ecx
   140007021:	mov    DWORD PTR [rax],0x9
   140007027:	call   0x140003eec
   14000702c:	xor    eax,eax
   14000702e:	add    rsp,0x38
   140007032:	ret    
   140007033:	int3   
   140007034:	rex push rbx
   140007036:	sub    rsp,0x40
   14000703a:	mov    ebx,ecx
   14000703c:	lea    rcx,[rsp+0x20]
   140007041:	call   0x140002370
   140007046:	mov    rax,QWORD PTR [rsp+0x20]
   14000704b:	movzx  r11d,bl
   14000704f:	mov    rcx,QWORD PTR [rax+0x140]
   140007056:	movzx  eax,WORD PTR [rcx+r11*2]
   14000705b:	and    eax,0x8000
   140007060:	cmp    BYTE PTR [rsp+0x38],0x0
   140007065:	je     0x140007073
   140007067:	mov    rcx,QWORD PTR [rsp+0x30]
   14000706c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140007073:	add    rsp,0x40
   140007077:	pop    rbx
   140007078:	ret    
   140007079:	int3   
   14000707a:	int3   
   14000707b:	int3   
   14000707c:	rex push rbx
   14000707e:	sub    rsp,0x40
   140007082:	mov    ebx,ecx
   140007084:	lea    rcx,[rsp+0x20]
   140007089:	xor    edx,edx
   14000708b:	call   0x140002370
   140007090:	mov    rax,QWORD PTR [rsp+0x20]
   140007095:	movzx  r11d,bl
   140007099:	mov    rcx,QWORD PTR [rax+0x140]
   1400070a0:	movzx  eax,WORD PTR [rcx+r11*2]
   1400070a5:	and    eax,0x8000
   1400070aa:	cmp    BYTE PTR [rsp+0x38],0x0
   1400070af:	je     0x1400070bd
   1400070b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400070b6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400070bd:	add    rsp,0x40
   1400070c1:	pop    rbx
   1400070c2:	ret    
   1400070c3:	int3   
   1400070c4:	int3   
   1400070c5:	int3   
   1400070c6:	int3   
   1400070c7:	int3   
   1400070c8:	int3   
   1400070c9:	int3   
   1400070ca:	int3   
   1400070cb:	int3   
   1400070cc:	int3   
   1400070cd:	int3   
   1400070ce:	int3   
   1400070cf:	int3   
   1400070d0:	int3   
   1400070d1:	int3   
   1400070d2:	int3   
   1400070d3:	int3   
   1400070d4:	int3   
   1400070d5:	int3   
   1400070d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400070e0:	mov    rax,rcx
   1400070e3:	neg    rcx
   1400070e6:	test   rax,0x7
   1400070ec:	je     0x1400070fd
   1400070ee:	xchg   ax,ax
   1400070f0:	mov    dl,BYTE PTR [rax]
   1400070f2:	inc    rax
   1400070f5:	test   dl,dl
   1400070f7:	je     0x140007158
   1400070f9:	test   al,0x7
   1400070fb:	jne    0x1400070f0
   1400070fd:	movabs r8,0x7efefefefefefeff
   140007107:	movabs r11,0x8101010101010100
   140007111:	mov    rdx,QWORD PTR [rax]
   140007114:	mov    r9,r8
   140007117:	add    rax,0x8
   14000711b:	add    r9,rdx
   14000711e:	not    rdx
   140007121:	xor    rdx,r9
   140007124:	and    rdx,r11
   140007127:	je     0x140007111
   140007129:	mov    rdx,QWORD PTR [rax-0x8]
   14000712d:	test   dl,dl
   14000712f:	je     0x140007182
   140007131:	test   dh,dh
   140007133:	je     0x14000717c
   140007135:	shr    rdx,0x10
   140007139:	test   dl,dl
   14000713b:	je     0x140007176
   14000713d:	test   dh,dh
   14000713f:	je     0x140007170
   140007141:	shr    rdx,0x10
   140007145:	test   dl,dl
   140007147:	je     0x14000716a
   140007149:	test   dh,dh
   14000714b:	je     0x140007164
   14000714d:	shr    edx,0x10
   140007150:	test   dl,dl
   140007152:	je     0x14000715e
   140007154:	test   dh,dh
   140007156:	jne    0x140007111
   140007158:	lea    rax,[rcx+rax*1-0x1]
   14000715d:	ret    
   14000715e:	lea    rax,[rcx+rax*1-0x2]
   140007163:	ret    
   140007164:	lea    rax,[rcx+rax*1-0x3]
   140007169:	ret    
   14000716a:	lea    rax,[rcx+rax*1-0x4]
   14000716f:	ret    
   140007170:	lea    rax,[rcx+rax*1-0x5]
   140007175:	ret    
   140007176:	lea    rax,[rcx+rax*1-0x6]
   14000717b:	ret    
   14000717c:	lea    rax,[rcx+rax*1-0x7]
   140007181:	ret    
   140007182:	lea    rax,[rcx+rax*1-0x8]
   140007187:	ret    
   140007188:	mov    rcx,QWORD PTR [rip+0xb231]        # 0x1400123c0
   14000718f:	xor    eax,eax
   140007191:	or     rcx,0x1
   140007195:	cmp    QWORD PTR [rip+0xd0bc],rcx        # 0x140014258
   14000719c:	sete   al
   14000719f:	ret    
   1400071a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400071a5:	mov    WORD PTR [rsp+0x20],r9w
   1400071ab:	push   rbp
   1400071ac:	push   rsi
   1400071ad:	push   rdi
   1400071ae:	sub    rsp,0x60
   1400071b2:	xor    ebp,ebp
   1400071b4:	mov    rdi,r8
   1400071b7:	mov    rsi,rdx
   1400071ba:	mov    rbx,rcx
   1400071bd:	cmp    rdx,rbp
   1400071c0:	jne    0x1400071d5
   1400071c2:	cmp    r8,rbp
   1400071c5:	jbe    0x1400071d5
   1400071c7:	cmp    rcx,rbp
   1400071ca:	je     0x1400071ce
   1400071cc:	mov    DWORD PTR [rcx],ebp
   1400071ce:	xor    eax,eax
   1400071d0:	jmp    0x140007279
   1400071d5:	cmp    rcx,rbp
   1400071d8:	je     0x1400071dd
   1400071da:	or     DWORD PTR [rcx],0xffffffff
   1400071dd:	cmp    r8,0x7fffffff
   1400071e4:	jbe    0x14000720a
   1400071e6:	call   0x140003fbc
   1400071eb:	mov    ebx,0x16
   1400071f0:	xor    r9d,r9d
   1400071f3:	xor    r8d,r8d
   1400071f6:	xor    edx,edx
   1400071f8:	xor    ecx,ecx
   1400071fa:	mov    DWORD PTR [rax],ebx
   1400071fc:	mov    QWORD PTR [rsp+0x20],rbp
   140007201:	call   0x140003eec
   140007206:	mov    eax,ebx
   140007208:	jmp    0x140007279
   14000720a:	mov    rdx,QWORD PTR [rsp+0xa0]
   140007212:	lea    rcx,[rsp+0x40]
   140007217:	call   0x140002370
   14000721c:	mov    r11,QWORD PTR [rsp+0x40]
   140007221:	cmp    DWORD PTR [r11+0x14],ebp
   140007225:	jne    0x1400072f8
   14000722b:	movzx  eax,WORD PTR [rsp+0x98]
   140007233:	mov    ecx,0xff
   140007238:	cmp    ax,cx
   14000723b:	jbe    0x140007289
   14000723d:	cmp    rsi,rbp
   140007240:	je     0x140007254
   140007242:	cmp    rdi,rbp
   140007245:	jbe    0x140007254
   140007247:	mov    r8,rdi
   14000724a:	xor    edx,edx
   14000724c:	mov    rcx,rsi
   14000724f:	call   0x140001cf0
   140007254:	call   0x140003fbc
   140007259:	mov    DWORD PTR [rax],0x2a
   14000725f:	call   0x140003fbc
   140007264:	mov    eax,DWORD PTR [rax]
   140007266:	cmp    BYTE PTR [rsp+0x58],bpl
   14000726b:	je     0x140007279
   14000726d:	mov    rcx,QWORD PTR [rsp+0x50]
   140007272:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140007279:	mov    rbx,QWORD PTR [rsp+0x80]
   140007281:	add    rsp,0x60
   140007285:	pop    rdi
   140007286:	pop    rsi
   140007287:	pop    rbp
   140007288:	ret    
   140007289:	cmp    rsi,rbp
   14000728c:	je     0x1400072d1
   14000728e:	cmp    rdi,rbp
   140007291:	ja     0x1400072cf
   140007293:	call   0x140003fbc
   140007298:	mov    ebx,0x22
   14000729d:	xor    r9d,r9d
   1400072a0:	xor    r8d,r8d
   1400072a3:	xor    edx,edx
   1400072a5:	xor    ecx,ecx
   1400072a7:	mov    DWORD PTR [rax],ebx
   1400072a9:	mov    QWORD PTR [rsp+0x20],rbp
   1400072ae:	call   0x140003eec
   1400072b3:	cmp    BYTE PTR [rsp+0x58],bpl
   1400072b8:	je     0x140007206
   1400072be:	mov    rcx,QWORD PTR [rsp+0x50]
   1400072c3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400072ca:	jmp    0x140007206
   1400072cf:	mov    BYTE PTR [rsi],al
   1400072d1:	cmp    rbx,rbp
   1400072d4:	je     0x1400072dc
   1400072d6:	mov    DWORD PTR [rbx],0x1
   1400072dc:	cmp    BYTE PTR [rsp+0x58],bpl
   1400072e1:	je     0x1400071ce
   1400072e7:	mov    rax,QWORD PTR [rsp+0x50]
   1400072ec:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400072f3:	jmp    0x1400071ce
   1400072f8:	lea    rax,[rsp+0x88]
   140007300:	mov    DWORD PTR [rsp+0x88],ebp
   140007307:	mov    ecx,DWORD PTR [r11+0x4]
   14000730b:	mov    QWORD PTR [rsp+0x38],rax
   140007310:	mov    QWORD PTR [rsp+0x30],rbp
   140007315:	lea    r8,[rsp+0x98]
   14000731d:	mov    r9d,0x1
   140007323:	xor    edx,edx
   140007325:	mov    DWORD PTR [rsp+0x28],edi
   140007329:	mov    QWORD PTR [rsp+0x20],rsi
   14000732e:	call   QWORD PTR [rip+0x7e4c]        # 0x14000f180
   140007334:	cmp    eax,ebp
   140007336:	je     0x14000734e
   140007338:	cmp    DWORD PTR [rsp+0x88],ebp
   14000733f:	jne    0x140007254
   140007345:	cmp    rbx,rbp
   140007348:	je     0x1400072dc
   14000734a:	mov    DWORD PTR [rbx],eax
   14000734c:	jmp    0x1400072dc
   14000734e:	call   QWORD PTR [rip+0x7d84]        # 0x14000f0d8
   140007354:	cmp    eax,0x7a
   140007357:	jne    0x140007254
   14000735d:	cmp    rsi,rbp
   140007360:	je     0x140007374
   140007362:	cmp    rdi,rbp
   140007365:	jbe    0x140007374
   140007367:	mov    r8,rdi
   14000736a:	xor    edx,edx
   14000736c:	mov    rcx,rsi
   14000736f:	call   0x140001cf0
   140007374:	call   0x140003fbc
   140007379:	mov    ebx,0x22
   14000737e:	xor    r9d,r9d
   140007381:	xor    r8d,r8d
   140007384:	xor    edx,edx
   140007386:	xor    ecx,ecx
   140007388:	mov    DWORD PTR [rax],ebx
   14000738a:	mov    QWORD PTR [rsp+0x20],rbp
   14000738f:	call   0x140003eec
   140007394:	cmp    BYTE PTR [rsp+0x58],bpl
   140007399:	je     0x140007206
   14000739f:	mov    rax,QWORD PTR [rsp+0x50]
   1400073a4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400073ab:	jmp    0x140007206
   1400073b0:	sub    rsp,0x38
   1400073b4:	and    QWORD PTR [rsp+0x20],0x0
   1400073ba:	call   0x1400071a0
   1400073bf:	add    rsp,0x38
   1400073c3:	ret    
   1400073c4:	and    DWORD PTR [rip+0xcf99],0x0        # 0x140014364
   1400073cb:	ret    
   1400073cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400073d1:	mov    QWORD PTR [rsp+0x10],rsi
   1400073d6:	push   rdi
   1400073d7:	sub    rsp,0x20
   1400073db:	mov    rbx,rcx
   1400073de:	cmp    rcx,0xffffffffffffffe0
   1400073e2:	ja     0x140007460
   1400073e4:	mov    edi,0x1
   1400073e9:	test   rcx,rcx
   1400073ec:	cmovne rdi,rcx
   1400073f0:	mov    rcx,QWORD PTR [rip+0xce59]        # 0x140014250
   1400073f7:	test   rcx,rcx
   1400073fa:	jne    0x14000741c
   1400073fc:	call   0x140005f64
   140007401:	mov    ecx,0x1e
   140007406:	call   0x140005d3c
   14000740b:	mov    ecx,0xff
   140007410:	call   0x140002674
   140007415:	mov    rcx,QWORD PTR [rip+0xce34]        # 0x140014250
   14000741c:	mov    r8,rdi
   14000741f:	xor    edx,edx
   140007421:	call   QWORD PTR [rip+0x7cc1]        # 0x14000f0e8
   140007427:	mov    rsi,rax
   14000742a:	test   rax,rax
   14000742d:	jne    0x14000745b
   14000742f:	cmp    DWORD PTR [rip+0xce2b],eax        # 0x140014260
   140007435:	je     0x140007445
   140007437:	mov    rcx,rbx
   14000743a:	call   0x140006790
   14000743f:	test   eax,eax
   140007441:	je     0x140007450
   140007443:	jmp    0x1400073f0
   140007445:	call   0x140003fbc
   14000744a:	mov    DWORD PTR [rax],0xc
   140007450:	call   0x140003fbc
   140007455:	mov    DWORD PTR [rax],0xc
   14000745b:	mov    rax,rsi
   14000745e:	jmp    0x140007472
   140007460:	call   0x140006790
   140007465:	call   0x140003fbc
   14000746a:	mov    DWORD PTR [rax],0xc
   140007470:	xor    eax,eax
   140007472:	mov    rbx,QWORD PTR [rsp+0x30]
   140007477:	mov    rsi,QWORD PTR [rsp+0x38]
   14000747c:	add    rsp,0x20
   140007480:	pop    rdi
   140007481:	ret    
   140007482:	int3   
   140007483:	int3   
   140007484:	mov    QWORD PTR [rsp+0x8],rbx
   140007489:	mov    QWORD PTR [rsp+0x10],rsi
   14000748e:	push   rdi
   14000748f:	sub    rsp,0x20
   140007493:	mov    rbx,rdx
   140007496:	mov    rdi,rcx
   140007499:	test   rcx,rcx
   14000749c:	jne    0x1400074a8
   14000749e:	mov    rcx,rdx
   1400074a1:	call   0x1400073cc
   1400074a6:	jmp    0x140007512
   1400074a8:	test   rdx,rdx
   1400074ab:	jne    0x1400074b4
   1400074ad:	call   0x140004244
   1400074b2:	jmp    0x140007510
   1400074b4:	cmp    rdx,0xffffffffffffffe0
   1400074b8:	ja     0x1400074fd
   1400074ba:	mov    rcx,QWORD PTR [rip+0xcd8f]        # 0x140014250
   1400074c1:	mov    eax,0x1
   1400074c6:	test   rbx,rbx
   1400074c9:	cmove  rbx,rax
   1400074cd:	mov    r8,rdi
   1400074d0:	xor    edx,edx
   1400074d2:	mov    r9,rbx
   1400074d5:	call   QWORD PTR [rip+0x7ce5]        # 0x14000f1c0
   1400074db:	mov    rsi,rax
   1400074de:	test   rax,rax
   1400074e1:	jne    0x140007552
   1400074e3:	cmp    DWORD PTR [rip+0xcd77],eax        # 0x140014260
   1400074e9:	je     0x14000753b
   1400074eb:	mov    rcx,rbx
   1400074ee:	call   0x140006790
   1400074f3:	test   eax,eax
   1400074f5:	je     0x140007522
   1400074f7:	cmp    rbx,0xffffffffffffffe0
   1400074fb:	jbe    0x1400074ba
   1400074fd:	mov    rcx,rbx
   140007500:	call   0x140006790
   140007505:	call   0x140003fbc
   14000750a:	mov    DWORD PTR [rax],0xc
   140007510:	xor    eax,eax
   140007512:	mov    rbx,QWORD PTR [rsp+0x30]
   140007517:	mov    rsi,QWORD PTR [rsp+0x38]
   14000751c:	add    rsp,0x20
   140007520:	pop    rdi
   140007521:	ret    
   140007522:	call   0x140003fbc
   140007527:	mov    rbx,rax
   14000752a:	call   QWORD PTR [rip+0x7ba8]        # 0x14000f0d8
   140007530:	mov    ecx,eax
   140007532:	call   0x140003f74
   140007537:	mov    DWORD PTR [rbx],eax
   140007539:	jmp    0x140007510
   14000753b:	call   0x140003fbc
   140007540:	mov    rbx,rax
   140007543:	call   QWORD PTR [rip+0x7b8f]        # 0x14000f0d8
   140007549:	mov    ecx,eax
   14000754b:	call   0x140003f74
   140007550:	mov    DWORD PTR [rbx],eax
   140007552:	mov    rax,rsi
   140007555:	jmp    0x140007512
   140007557:	int3   
   140007558:	mov    QWORD PTR [rsp+0x8],rbx
   14000755d:	mov    QWORD PTR [rsp+0x10],rsi
   140007562:	push   rdi
   140007563:	sub    rsp,0x30
   140007567:	xor    edi,edi
   140007569:	mov    rbx,rdx
   14000756c:	mov    rsi,rcx
   14000756f:	test   rdx,rdx
   140007572:	je     0x1400075a5
   140007574:	xor    edx,edx
   140007576:	lea    rax,[rdi-0x20]
   14000757a:	div    rbx
   14000757d:	cmp    rax,r8
   140007580:	jae    0x1400075a5
   140007582:	call   0x140003fbc
   140007587:	and    QWORD PTR [rsp+0x20],rdi
   14000758c:	xor    r9d,r9d
   14000758f:	xor    r8d,r8d
   140007592:	xor    edx,edx
   140007594:	xor    ecx,ecx
   140007596:	mov    DWORD PTR [rax],0xc
   14000759c:	call   0x140003eec
   1400075a1:	xor    eax,eax
   1400075a3:	jmp    0x1400075e2
   1400075a5:	imul   rbx,r8
   1400075a9:	test   rcx,rcx
   1400075ac:	je     0x1400075b6
   1400075ae:	call   0x140009ad0
   1400075b3:	mov    rdi,rax
   1400075b6:	mov    rdx,rbx
   1400075b9:	mov    rcx,rsi
   1400075bc:	call   0x140007484
   1400075c1:	mov    rsi,rax
   1400075c4:	test   rax,rax
   1400075c7:	je     0x1400075df
   1400075c9:	cmp    rdi,rbx
   1400075cc:	jae    0x1400075df
   1400075ce:	sub    rbx,rdi
   1400075d1:	lea    rcx,[rdi+rax*1]
   1400075d5:	xor    edx,edx
   1400075d7:	mov    r8,rbx
   1400075da:	call   0x140001cf0
   1400075df:	mov    rax,rsi
   1400075e2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400075e7:	mov    rsi,QWORD PTR [rsp+0x48]
   1400075ec:	add    rsp,0x30
   1400075f0:	pop    rdi
   1400075f1:	ret    
   1400075f2:	int3   
   1400075f3:	int3   
   1400075f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400075f9:	push   rdi
   1400075fa:	sub    rsp,0x30
   1400075fe:	or     edi,0xffffffff
   140007601:	mov    rbx,rcx
   140007604:	test   rcx,rcx
   140007607:	jne    0x14000762c
   140007609:	call   0x140003fbc
   14000760e:	and    QWORD PTR [rsp+0x20],rbx
   140007613:	xor    r9d,r9d
   140007616:	xor    r8d,r8d
   140007619:	xor    edx,edx
   14000761b:	xor    ecx,ecx
   14000761d:	mov    DWORD PTR [rax],0x16
   140007623:	call   0x140003eec
   140007628:	or     eax,edi
   14000762a:	jmp    0x140007672
   14000762c:	test   BYTE PTR [rcx+0x18],0x83
   140007630:	je     0x14000766c
   140007632:	call   0x140004334
   140007637:	mov    rcx,rbx
   14000763a:	mov    edi,eax
   14000763c:	call   0x14000a050
   140007641:	mov    rcx,rbx
   140007644:	call   0x140003d84
   140007649:	mov    ecx,eax
   14000764b:	call   0x140009f38
   140007650:	test   eax,eax
   140007652:	jns    0x140007659
   140007654:	or     edi,0xffffffff
   140007657:	jmp    0x14000766c
   140007659:	mov    rcx,QWORD PTR [rbx+0x28]
   14000765d:	test   rcx,rcx
   140007660:	je     0x14000766c
   140007662:	call   0x140004244
   140007667:	and    QWORD PTR [rbx+0x28],0x0
   14000766c:	and    DWORD PTR [rbx+0x18],0x0
   140007670:	mov    eax,edi
   140007672:	mov    rbx,QWORD PTR [rsp+0x40]
   140007677:	add    rsp,0x30
   14000767b:	pop    rdi
   14000767c:	ret    
   14000767d:	int3   
   14000767e:	int3   
   14000767f:	int3   
   140007680:	mov    QWORD PTR [rsp+0x10],rbx
   140007685:	mov    QWORD PTR [rsp+0x8],rcx
   14000768a:	push   rdi
   14000768b:	sub    rsp,0x30
   14000768f:	mov    rbx,rcx
   140007692:	or     edi,0xffffffff
   140007695:	xor    eax,eax
   140007697:	test   rcx,rcx
   14000769a:	setne  al
   14000769d:	test   eax,eax
   14000769f:	jne    0x1400076c5
   1400076a1:	call   0x140003fbc
   1400076a6:	mov    DWORD PTR [rax],0x16
   1400076ac:	and    QWORD PTR [rsp+0x20],0x0
   1400076b2:	xor    r9d,r9d
   1400076b5:	xor    r8d,r8d
   1400076b8:	xor    edx,edx
   1400076ba:	xor    ecx,ecx
   1400076bc:	call   0x140003eec
   1400076c1:	mov    eax,edi
   1400076c3:	jmp    0x1400076eb
   1400076c5:	test   BYTE PTR [rcx+0x18],0x40
   1400076c9:	je     0x1400076d1
   1400076cb:	and    DWORD PTR [rcx+0x18],0x0
   1400076cf:	jmp    0x1400076e9
   1400076d1:	call   0x140001b84
   1400076d6:	nop
   1400076d7:	mov    rcx,rbx
   1400076da:	call   0x1400075f4
   1400076df:	mov    edi,eax
   1400076e1:	mov    rcx,rbx
   1400076e4:	call   0x140001c14
   1400076e9:	mov    eax,edi
   1400076eb:	mov    rbx,QWORD PTR [rsp+0x48]
   1400076f0:	add    rsp,0x30
   1400076f4:	pop    rdi
   1400076f5:	ret    
   1400076f6:	int3   
   1400076f7:	int3   
   1400076f8:	mov    QWORD PTR [rsp+0x20],rbx
   1400076fd:	push   rbp
   1400076fe:	push   rsi
   1400076ff:	push   rdi
   140007700:	push   r12
   140007702:	push   r13
   140007704:	push   r14
   140007706:	push   r15
   140007708:	mov    eax,0x1b30
   14000770d:	call   0x14000e1f0
   140007712:	sub    rsp,rax
   140007715:	mov    rax,QWORD PTR [rip+0xaca4]        # 0x1400123c0
   14000771c:	xor    rax,rsp
   14000771f:	mov    QWORD PTR [rsp+0x1b20],rax
   140007727:	xor    ebp,ebp
   140007729:	xor    edi,edi
   14000772b:	mov    r13d,r8d
   14000772e:	mov    r12,rdx
   140007731:	movsxd rbx,ecx
   140007734:	mov    DWORD PTR [rsp+0x40],ebp
   140007738:	test   r8d,r8d
   14000773b:	jne    0x140007744
   14000773d:	xor    eax,eax
   14000773f:	jmp    0x140007e2b
   140007744:	test   rdx,rdx
   140007747:	jne    0x140007777
   140007749:	call   0x140003fdc
   14000774e:	and    DWORD PTR [rax],edi
   140007750:	call   0x140003fbc
   140007755:	and    QWORD PTR [rsp+0x20],rdi
   14000775a:	xor    r9d,r9d
   14000775d:	xor    r8d,r8d
   140007760:	xor    edx,edx
   140007762:	xor    ecx,ecx
   140007764:	mov    DWORD PTR [rax],0x16
   14000776a:	call   0x140003eec
   14000776f:	or     eax,0xffffffff
   140007772:	jmp    0x140007e2b
   140007777:	mov    r15,rbx
   14000777a:	mov    r14,rbx
   14000777d:	lea    rax,[rip+0xcbfc]        # 0x140014380
   140007784:	sar    r14,0x5
   140007788:	and    r15d,0x1f
   14000778c:	mov    rcx,QWORD PTR [rax+r14*8]
   140007790:	mov    QWORD PTR [rsp+0x50],r14
   140007795:	imul   r15,r15,0x58
   140007799:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   14000779e:	add    sil,sil
   1400077a1:	sar    sil,1
   1400077a4:	cmp    sil,0x2
   1400077a8:	je     0x1400077b0
   1400077aa:	cmp    sil,0x1
   1400077ae:	jne    0x1400077b9
   1400077b0:	mov    eax,r13d
   1400077b3:	not    eax
   1400077b5:	test   al,0x1
   1400077b7:	je     0x140007749
   1400077b9:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   1400077bf:	je     0x1400077ce
   1400077c1:	xor    edx,edx
   1400077c3:	mov    ecx,ebx
   1400077c5:	lea    r8d,[rdx+0x2]
   1400077c9:	call   0x140009668
   1400077ce:	mov    ecx,ebx
   1400077d0:	call   0x140006fc4
   1400077d5:	test   eax,eax
   1400077d7:	je     0x140007ace
   1400077dd:	lea    rax,[rip+0xcb9c]        # 0x140014380
   1400077e4:	mov    rax,QWORD PTR [rax+r14*8]
   1400077e8:	test   BYTE PTR [r15+rax*1+0x8],0x80
   1400077ee:	je     0x140007ace
   1400077f4:	call   0x1400058c0
   1400077f9:	xor    ebx,ebx
   1400077fb:	lea    rdx,[rsp+0x58]
   140007800:	mov    rcx,QWORD PTR [rax+0xc0]
   140007807:	lea    rax,[rip+0xcb72]        # 0x140014380
   14000780e:	cmp    DWORD PTR [rcx+0x14],ebx
   140007811:	mov    rcx,QWORD PTR [rax+r14*8]
   140007815:	mov    rcx,QWORD PTR [r15+rcx*1]
   140007819:	sete   bl
   14000781c:	call   QWORD PTR [rip+0x79ae]        # 0x14000f1d0
   140007822:	test   eax,eax
   140007824:	je     0x140007ace
   14000782a:	test   ebx,ebx
   14000782c:	je     0x140007837
   14000782e:	test   sil,sil
   140007831:	je     0x140007ace
   140007837:	call   QWORD PTR [rip+0x798b]        # 0x14000f1c8
   14000783d:	and    DWORD PTR [rsp+0x4c],edi
   140007841:	mov    rbx,r12
   140007844:	mov    DWORD PTR [rsp+0x58],eax
   140007848:	test   r13d,r13d
   14000784b:	je     0x140007ac8
   140007851:	mov    r14d,DWORD PTR [rsp+0x58]
   140007856:	mov    ebp,0xd
   14000785b:	test   sil,sil
   14000785e:	jne    0x1400079e7
   140007864:	mov    rdx,QWORD PTR [rsp+0x50]
   140007869:	mov    cl,BYTE PTR [rbx]
   14000786b:	xor    r14d,r14d
   14000786e:	cmp    cl,0xa
   140007871:	lea    rbp,[rip+0xcb08]        # 0x140014380
   140007878:	mov    rdx,QWORD PTR [rbp+rdx*8+0x0]
   14000787d:	sete   r14b
   140007881:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   140007887:	je     0x1400078a9
   140007889:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   14000788e:	mov    BYTE PTR [rsp+0x5d],cl
   140007892:	mov    r8d,0x2
   140007898:	mov    BYTE PTR [rsp+0x5c],al
   14000789c:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   1400078a2:	lea    rdx,[rsp+0x5c]
   1400078a7:	jmp    0x1400078f2
   1400078a9:	movsx  ecx,cl
   1400078ac:	call   0x14000707c
   1400078b1:	test   eax,eax
   1400078b3:	je     0x1400078e9
   1400078b5:	mov    rax,r13
   1400078b8:	sub    rax,rbx
   1400078bb:	add    rax,r12
   1400078be:	cmp    rax,0x1
   1400078c2:	jle    0x140007a97
   1400078c8:	lea    rcx,[rsp+0x44]
   1400078cd:	mov    r8d,0x2
   1400078d3:	mov    rdx,rbx
   1400078d6:	call   0x14000a310
   1400078db:	cmp    eax,0xffffffff
   1400078de:	je     0x140007a5a
   1400078e4:	inc    rbx
   1400078e7:	jmp    0x140007905
   1400078e9:	mov    r8d,0x1
   1400078ef:	mov    rdx,rbx
   1400078f2:	lea    rcx,[rsp+0x44]
   1400078f7:	call   0x14000a310
   1400078fc:	cmp    eax,0xffffffff
   1400078ff:	je     0x140007a5a
   140007905:	and    QWORD PTR [rsp+0x38],0x0
   14000790b:	and    QWORD PTR [rsp+0x30],0x0
   140007911:	mov    ecx,DWORD PTR [rsp+0x58]
   140007915:	lea    rax,[rsp+0x5c]
   14000791a:	lea    r8,[rsp+0x44]
   14000791f:	mov    r9d,0x1
   140007925:	xor    edx,edx
   140007927:	mov    DWORD PTR [rsp+0x28],0x5
   14000792f:	inc    rbx
   140007932:	mov    QWORD PTR [rsp+0x20],rax
   140007937:	call   QWORD PTR [rip+0x7843]        # 0x14000f180
   14000793d:	mov    ebp,eax
   14000793f:	test   eax,eax
   140007941:	je     0x140007a5a
   140007947:	mov    rax,QWORD PTR [rsp+0x50]
   14000794c:	and    QWORD PTR [rsp+0x20],0x0
   140007952:	lea    rcx,[rip+0xca27]        # 0x140014380
   140007959:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000795d:	lea    r9,[rsp+0x4c]
   140007962:	lea    rdx,[rsp+0x5c]
   140007967:	mov    rcx,QWORD PTR [r15+rcx*1]
   14000796b:	mov    r8d,ebp
   14000796e:	call   QWORD PTR [rip+0x77dc]        # 0x14000f150
   140007974:	test   eax,eax
   140007976:	je     0x140007abe
   14000797c:	mov    edi,ebx
   14000797e:	sub    edi,r12d
   140007981:	add    edi,DWORD PTR [rsp+0x40]
   140007985:	cmp    DWORD PTR [rsp+0x4c],ebp
   140007989:	jl     0x140007a5a
   14000798f:	mov    ebp,0xd
   140007994:	test   r14d,r14d
   140007997:	je     0x140007a4c
   14000799d:	mov    rax,QWORD PTR [rsp+0x50]
   1400079a2:	and    QWORD PTR [rsp+0x20],0x0
   1400079a8:	mov    BYTE PTR [rsp+0x5c],bpl
   1400079ad:	lea    rcx,[rip+0xc9cc]        # 0x140014380
   1400079b4:	lea    r9,[rsp+0x4c]
   1400079b9:	lea    r8d,[rbp-0xc]
   1400079bd:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400079c1:	lea    rdx,[rsp+0x5c]
   1400079c6:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400079ca:	call   QWORD PTR [rip+0x7780]        # 0x14000f150
   1400079d0:	test   eax,eax
   1400079d2:	je     0x140007abe
   1400079d8:	cmp    DWORD PTR [rsp+0x4c],0x1
   1400079dd:	jl     0x140007a5a
   1400079df:	inc    DWORD PTR [rsp+0x40]
   1400079e3:	inc    edi
   1400079e5:	jmp    0x140007a4c
   1400079e7:	cmp    sil,0x1
   1400079eb:	je     0x1400079f3
   1400079ed:	cmp    sil,0x2
   1400079f1:	jne    0x140007a0a
   1400079f3:	movzx  eax,WORD PTR [rbx]
   1400079f6:	xor    r14d,r14d
   1400079f9:	cmp    ax,0xa
   1400079fd:	mov    WORD PTR [rsp+0x44],ax
   140007a02:	sete   r14b
   140007a06:	add    rbx,0x2
   140007a0a:	cmp    sil,0x1
   140007a0e:	je     0x140007a16
   140007a10:	cmp    sil,0x2
   140007a14:	jne    0x140007a4c
   140007a16:	movzx  ecx,WORD PTR [rsp+0x44]
   140007a1b:	call   0x14000a088
   140007a20:	cmp    ax,WORD PTR [rsp+0x44]
   140007a25:	jne    0x140007abe
   140007a2b:	add    edi,0x2
   140007a2e:	test   r14d,r14d
   140007a31:	je     0x140007a4c
   140007a33:	mov    ecx,ebp
   140007a35:	mov    WORD PTR [rsp+0x44],bp
   140007a3a:	call   0x14000a088
   140007a3f:	cmp    ax,WORD PTR [rsp+0x44]
   140007a44:	jne    0x140007abe
   140007a46:	inc    edi
   140007a48:	inc    DWORD PTR [rsp+0x40]
   140007a4c:	mov    eax,ebx
   140007a4e:	sub    eax,r12d
   140007a51:	cmp    eax,r13d
   140007a54:	jb     0x14000785b
   140007a5a:	mov    ebx,DWORD PTR [rsp+0x4c]
   140007a5e:	mov    r14,QWORD PTR [rsp+0x50]
   140007a63:	mov    ebp,DWORD PTR [rsp+0x40]
   140007a67:	test   edi,edi
   140007a69:	jne    0x140007e27
   140007a6f:	test   ebx,ebx
   140007a71:	je     0x140007df1
   140007a77:	cmp    ebx,0x5
   140007a7a:	jne    0x140007de5
   140007a80:	call   0x140003fbc
   140007a85:	mov    DWORD PTR [rax],0x9
   140007a8b:	call   0x140003fdc
   140007a90:	mov    DWORD PTR [rax],ebx
   140007a92:	jmp    0x14000776f
   140007a97:	mov    al,BYTE PTR [rbx]
   140007a99:	mov    r14,QWORD PTR [rsp+0x50]
   140007a9e:	inc    edi
   140007aa0:	mov    rcx,QWORD PTR [rbp+r14*8+0x0]
   140007aa5:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   140007aaa:	mov    rax,QWORD PTR [rbp+r14*8+0x0]
   140007aaf:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140007ab8:	mov    ebx,DWORD PTR [rsp+0x4c]
   140007abc:	jmp    0x140007a63
   140007abe:	call   QWORD PTR [rip+0x7614]        # 0x14000f0d8
   140007ac4:	mov    ebx,eax
   140007ac6:	jmp    0x140007a5e
   140007ac8:	mov    ebx,DWORD PTR [rsp+0x4c]
   140007acc:	jmp    0x140007a6f
   140007ace:	lea    rax,[rip+0xc8ab]        # 0x140014380
   140007ad5:	mov    rcx,QWORD PTR [rax+r14*8]
   140007ad9:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140007adf:	je     0x140007daf
   140007ae5:	xor    ebx,ebx
   140007ae7:	mov    rbp,r12
   140007aea:	test   sil,sil
   140007aed:	jne    0x140007bc3
   140007af3:	test   r13d,r13d
   140007af6:	je     0x140007df8
   140007afc:	lea    edx,[rbx+0xd]
   140007aff:	mov    r14d,DWORD PTR [rsp+0x40]
   140007b04:	lea    rsi,[rsp+0x720]
   140007b0c:	xor    ecx,ecx
   140007b0e:	mov    eax,ebp
   140007b10:	sub    eax,r12d
   140007b13:	cmp    eax,r13d
   140007b16:	jae    0x140007b3e
   140007b18:	mov    al,BYTE PTR [rbp+0x0]
   140007b1b:	inc    rbp
   140007b1e:	cmp    al,0xa
   140007b20:	jne    0x140007b2d
   140007b22:	mov    BYTE PTR [rsi],dl
   140007b24:	inc    r14d
   140007b27:	inc    rsi
   140007b2a:	inc    rcx
   140007b2d:	inc    rcx
   140007b30:	mov    BYTE PTR [rsi],al
   140007b32:	inc    rsi
   140007b35:	cmp    rcx,0x13ff
   140007b3c:	jb     0x140007b0e
   140007b3e:	and    QWORD PTR [rsp+0x20],rbx
   140007b43:	lea    rax,[rsp+0x720]
   140007b4b:	mov    r8d,esi
   140007b4e:	sub    r8d,eax
   140007b51:	lea    rax,[rip+0xc828]        # 0x140014380
   140007b58:	mov    DWORD PTR [rsp+0x40],r14d
   140007b5d:	mov    r14,QWORD PTR [rsp+0x50]
   140007b62:	lea    r9,[rsp+0x48]
   140007b67:	lea    rdx,[rsp+0x720]
   140007b6f:	mov    rcx,QWORD PTR [rax+r14*8]
   140007b73:	mov    rcx,QWORD PTR [r15+rcx*1]
   140007b77:	call   QWORD PTR [rip+0x75d3]        # 0x14000f150
   140007b7d:	test   eax,eax
   140007b7f:	je     0x140007bb6
   140007b81:	add    edi,DWORD PTR [rsp+0x48]
   140007b85:	lea    rax,[rsp+0x720]
   140007b8d:	sub    rsi,rax
   140007b90:	movsxd rax,DWORD PTR [rsp+0x48]
   140007b95:	cmp    rax,rsi
   140007b98:	jl     0x140007a63
   140007b9e:	mov    eax,ebp
   140007ba0:	mov    edx,0xd
   140007ba5:	sub    eax,r12d
   140007ba8:	cmp    eax,r13d
   140007bab:	jb     0x140007aff
   140007bb1:	jmp    0x140007a63
   140007bb6:	call   QWORD PTR [rip+0x751c]        # 0x14000f0d8
   140007bbc:	mov    ebx,eax
   140007bbe:	jmp    0x140007a63
   140007bc3:	cmp    sil,0x2
   140007bc7:	jne    0x140007ca1
   140007bcd:	test   r13d,r13d
   140007bd0:	je     0x140007df8
   140007bd6:	mov    edx,0xd
   140007bdb:	mov    r14d,DWORD PTR [rsp+0x40]
   140007be0:	lea    rsi,[rsp+0x720]
   140007be8:	xor    ecx,ecx
   140007bea:	mov    eax,ebp
   140007bec:	sub    eax,r12d
   140007bef:	cmp    eax,r13d
   140007bf2:	jae    0x140007c25
   140007bf4:	movzx  eax,WORD PTR [rbp+0x0]
   140007bf8:	add    rbp,0x2
   140007bfc:	cmp    ax,0xa
   140007c00:	jne    0x140007c11
   140007c02:	mov    WORD PTR [rsi],dx
   140007c05:	add    r14d,0x2
   140007c09:	add    rsi,0x2
   140007c0d:	add    rcx,0x2
   140007c11:	add    rcx,0x2
   140007c15:	mov    WORD PTR [rsi],ax
   140007c18:	add    rsi,0x2
   140007c1c:	cmp    rcx,0x13fe
   140007c23:	jb     0x140007bea
   140007c25:	and    QWORD PTR [rsp+0x20],rbx
   140007c2a:	lea    rax,[rsp+0x720]
   140007c32:	mov    r8d,esi
   140007c35:	sub    r8d,eax
   140007c38:	lea    rax,[rip+0xc741]        # 0x140014380
   140007c3f:	mov    DWORD PTR [rsp+0x40],r14d
   140007c44:	mov    r14,QWORD PTR [rsp+0x50]
   140007c49:	lea    r9,[rsp+0x48]
   140007c4e:	lea    rdx,[rsp+0x720]
   140007c56:	mov    rcx,QWORD PTR [rax+r14*8]
   140007c5a:	mov    rcx,QWORD PTR [r15+rcx*1]
   140007c5e:	call   QWORD PTR [rip+0x74ec]        # 0x14000f150
   140007c64:	test   eax,eax
   140007c66:	je     0x140007bb6
   140007c6c:	add    edi,DWORD PTR [rsp+0x48]
   140007c70:	lea    rax,[rsp+0x720]
   140007c78:	sub    rsi,rax
   140007c7b:	movsxd rax,DWORD PTR [rsp+0x48]
   140007c80:	cmp    rax,rsi
   140007c83:	jl     0x140007a63
   140007c89:	mov    eax,ebp
   140007c8b:	mov    edx,0xd
   140007c90:	sub    eax,r12d
   140007c93:	cmp    eax,r13d
   140007c96:	jb     0x140007bdb
   140007c9c:	jmp    0x140007a63
   140007ca1:	test   r13d,r13d
   140007ca4:	je     0x140007df8
   140007caa:	mov    r8d,0xd
   140007cb0:	lea    rcx,[rsp+0x70]
   140007cb5:	xor    edx,edx
   140007cb7:	mov    eax,ebp
   140007cb9:	sub    eax,r12d
   140007cbc:	cmp    eax,r13d
   140007cbf:	jae    0x140007cef
   140007cc1:	movzx  eax,WORD PTR [rbp+0x0]
   140007cc5:	add    rbp,0x2
   140007cc9:	cmp    ax,0xa
   140007ccd:	jne    0x140007cdb
   140007ccf:	mov    WORD PTR [rcx],r8w
   140007cd3:	add    rcx,0x2
   140007cd7:	add    rdx,0x2
   140007cdb:	add    rdx,0x2
   140007cdf:	mov    WORD PTR [rcx],ax
   140007ce2:	add    rcx,0x2
   140007ce6:	cmp    rdx,0x6a8
   140007ced:	jb     0x140007cb7
   140007cef:	and    QWORD PTR [rsp+0x38],0x0
   140007cf5:	and    QWORD PTR [rsp+0x30],0x0
   140007cfb:	lea    rax,[rsp+0x70]
   140007d00:	sub    ecx,eax
   140007d02:	lea    r8,[rsp+0x70]
   140007d07:	mov    DWORD PTR [rsp+0x28],0xd55
   140007d0f:	mov    eax,ecx
   140007d11:	mov    ecx,0xfde9
   140007d16:	cdq    
   140007d17:	sub    eax,edx
   140007d19:	xor    edx,edx
   140007d1b:	sar    eax,1
   140007d1d:	mov    r9d,eax
   140007d20:	lea    rax,[rsp+0x720]
   140007d28:	mov    QWORD PTR [rsp+0x20],rax
   140007d2d:	call   QWORD PTR [rip+0x744d]        # 0x14000f180
   140007d33:	mov    r14d,eax
   140007d36:	test   eax,eax
   140007d38:	je     0x140007abe
   140007d3e:	xor    esi,esi
   140007d40:	mov    rax,QWORD PTR [rsp+0x50]
   140007d45:	and    QWORD PTR [rsp+0x20],0x0
   140007d4b:	movsxd rcx,esi
   140007d4e:	lea    rdx,[rsp+rcx*1+0x720]
   140007d56:	mov    r8d,r14d
   140007d59:	lea    rcx,[rip+0xc620]        # 0x140014380
   140007d60:	mov    rcx,QWORD PTR [rcx+rax*8]
   140007d64:	lea    r9,[rsp+0x48]
   140007d69:	sub    r8d,esi
   140007d6c:	mov    rcx,QWORD PTR [r15+rcx*1]
   140007d70:	call   QWORD PTR [rip+0x73da]        # 0x14000f150
   140007d76:	test   eax,eax
   140007d78:	je     0x140007d85
   140007d7a:	add    esi,DWORD PTR [rsp+0x48]
   140007d7e:	cmp    r14d,esi
   140007d81:	jg     0x140007d40
   140007d83:	jmp    0x140007d8d
   140007d85:	call   QWORD PTR [rip+0x734d]        # 0x14000f0d8
   140007d8b:	mov    ebx,eax
   140007d8d:	cmp    r14d,esi
   140007d90:	jg     0x140007a5e
   140007d96:	mov    edi,ebp
   140007d98:	mov    r8d,0xd
   140007d9e:	sub    edi,r12d
   140007da1:	cmp    edi,r13d
   140007da4:	jb     0x140007cb0
   140007daa:	jmp    0x140007a5e
   140007daf:	mov    rcx,QWORD PTR [r15+rcx*1]
   140007db3:	and    QWORD PTR [rsp+0x20],rdi
   140007db8:	lea    r9,[rsp+0x48]
   140007dbd:	mov    r8d,r13d
   140007dc0:	mov    rdx,r12
   140007dc3:	call   QWORD PTR [rip+0x7387]        # 0x14000f150
   140007dc9:	test   eax,eax
   140007dcb:	je     0x140007dd8
   140007dcd:	mov    edi,DWORD PTR [rsp+0x48]
   140007dd1:	xor    ebx,ebx
   140007dd3:	jmp    0x140007a67
   140007dd8:	call   QWORD PTR [rip+0x72fa]        # 0x14000f0d8
   140007dde:	mov    ebx,eax
   140007de0:	jmp    0x140007a67
   140007de5:	mov    ecx,ebx
   140007de7:	call   0x140003ffc
   140007dec:	jmp    0x14000776f
   140007df1:	lea    rax,[rip+0xc588]        # 0x140014380
   140007df8:	mov    rax,QWORD PTR [rax+r14*8]
   140007dfc:	test   BYTE PTR [r15+rax*1+0x8],0x40
   140007e02:	je     0x140007e0f
   140007e04:	cmp    BYTE PTR [r12],0x1a
   140007e09:	je     0x14000773d
   140007e0f:	call   0x140003fbc
   140007e14:	mov    DWORD PTR [rax],0x1c
   140007e1a:	call   0x140003fdc
   140007e1f:	and    DWORD PTR [rax],0x0
   140007e22:	jmp    0x14000776f
   140007e27:	sub    edi,ebp
   140007e29:	mov    eax,edi
   140007e2b:	mov    rcx,QWORD PTR [rsp+0x1b20]
   140007e33:	xor    rcx,rsp
   140007e36:	call   0x140002350
   140007e3b:	mov    rbx,QWORD PTR [rsp+0x1b88]
   140007e43:	add    rsp,0x1b30
   140007e4a:	pop    r15
   140007e4c:	pop    r14
   140007e4e:	pop    r13
   140007e50:	pop    r12
   140007e52:	pop    rdi
   140007e53:	pop    rsi
   140007e54:	pop    rbp
   140007e55:	ret    
   140007e56:	int3   
   140007e57:	int3   
   140007e58:	mov    QWORD PTR [rsp+0x10],rbx
   140007e5d:	mov    QWORD PTR [rsp+0x18],rsi
   140007e62:	mov    DWORD PTR [rsp+0x8],ecx
   140007e66:	push   rdi
   140007e67:	push   r12
   140007e69:	push   r13
   140007e6b:	push   r14
   140007e6d:	push   r15
   140007e6f:	sub    rsp,0x30
   140007e73:	mov    r12d,r8d
   140007e76:	mov    r13,rdx
   140007e79:	movsxd rbx,ecx
   140007e7c:	cmp    ebx,0xfffffffe
   140007e7f:	jne    0x140007e9d
   140007e81:	call   0x140003fdc
   140007e86:	xor    edi,edi
   140007e88:	mov    DWORD PTR [rax],edi
   140007e8a:	call   0x140003fbc
   140007e8f:	mov    DWORD PTR [rax],0x9
   140007e95:	or     eax,0xffffffff
   140007e98:	jmp    0x140007f71
   140007e9d:	xor    edi,edi
   140007e9f:	cmp    ebx,edi
   140007ea1:	jl     0x140007f48
   140007ea7:	cmp    ebx,DWORD PTR [rip+0xc4bb]        # 0x140014368
   140007ead:	jae    0x140007f48
   140007eb3:	mov    rsi,rbx
   140007eb6:	mov    r14,rbx
   140007eb9:	sar    r14,0x5
   140007ebd:	lea    r15,[rip+0xc4bc]        # 0x140014380
   140007ec4:	and    esi,0x1f
   140007ec7:	imul   rsi,rsi,0x58
   140007ecb:	mov    rax,QWORD PTR [r15+r14*8]
   140007ecf:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   140007ed4:	and    ecx,0x1
   140007ed7:	jne    0x140007f04
   140007ed9:	call   0x140003fdc
   140007ede:	mov    DWORD PTR [rax],edi
   140007ee0:	call   0x140003fbc
   140007ee5:	mov    DWORD PTR [rax],0x9
   140007eeb:	mov    QWORD PTR [rsp+0x20],rdi
   140007ef0:	xor    r9d,r9d
   140007ef3:	xor    r8d,r8d
   140007ef6:	xor    edx,edx
   140007ef8:	xor    ecx,ecx
   140007efa:	call   0x140003eec
   140007eff:	or     eax,0xffffffff
   140007f02:	jmp    0x140007f71
   140007f04:	mov    ecx,ebx
   140007f06:	call   0x14000a500
   140007f0b:	nop
   140007f0c:	mov    rax,QWORD PTR [r15+r14*8]
   140007f10:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140007f15:	je     0x140007f28
   140007f17:	mov    r8d,r12d
   140007f1a:	mov    rdx,r13
   140007f1d:	mov    ecx,ebx
   140007f1f:	call   0x1400076f8
   140007f24:	mov    edi,eax
   140007f26:	jmp    0x140007f3d
   140007f28:	call   0x140003fbc
   140007f2d:	mov    DWORD PTR [rax],0x9
   140007f33:	call   0x140003fdc
   140007f38:	mov    DWORD PTR [rax],edi
   140007f3a:	or     edi,0xffffffff
   140007f3d:	mov    ecx,ebx
   140007f3f:	call   0x14000a5a8
   140007f44:	mov    eax,edi
   140007f46:	jmp    0x140007f71
   140007f48:	call   0x140003fdc
   140007f4d:	mov    DWORD PTR [rax],edi
   140007f4f:	call   0x140003fbc
   140007f54:	mov    DWORD PTR [rax],0x9
   140007f5a:	mov    QWORD PTR [rsp+0x20],rdi
   140007f5f:	xor    r9d,r9d
   140007f62:	xor    r8d,r8d
   140007f65:	xor    edx,edx
   140007f67:	xor    ecx,ecx
   140007f69:	call   0x140003eec
   140007f6e:	or     eax,0xffffffff
   140007f71:	mov    rbx,QWORD PTR [rsp+0x68]
   140007f76:	mov    rsi,QWORD PTR [rsp+0x70]
   140007f7b:	add    rsp,0x30
   140007f7f:	pop    r15
   140007f81:	pop    r14
   140007f83:	pop    r13
   140007f85:	pop    r12
   140007f87:	pop    rdi
   140007f88:	ret    
   140007f89:	int3   
   140007f8a:	int3   
   140007f8b:	int3   
   140007f8c:	mov    QWORD PTR [rsp+0x18],rbx
   140007f91:	mov    DWORD PTR [rsp+0x8],ecx
   140007f95:	push   rsi
   140007f96:	push   rdi
   140007f97:	push   r12
   140007f99:	sub    rsp,0x30
   140007f9d:	movsxd rdi,ecx
   140007fa0:	cmp    edi,0xfffffffe
   140007fa3:	jne    0x140007fb8
   140007fa5:	call   0x140003fbc
   140007faa:	mov    DWORD PTR [rax],0x9
   140007fb0:	or     eax,0xffffffff
   140007fb3:	jmp    0x140008091
   140007fb8:	test   ecx,ecx
   140007fba:	js     0x14000806e
   140007fc0:	cmp    edi,DWORD PTR [rip+0xc3a2]        # 0x140014368
   140007fc6:	jae    0x14000806e
   140007fcc:	mov    rbx,rdi
   140007fcf:	mov    rsi,rdi
   140007fd2:	sar    rsi,0x5
   140007fd6:	lea    r12,[rip+0xc3a3]        # 0x140014380
   140007fdd:	and    ebx,0x1f
   140007fe0:	imul   rbx,rbx,0x58
   140007fe4:	mov    rax,QWORD PTR [r12+rsi*8]
   140007fe8:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140007fed:	and    ecx,0x1
   140007ff0:	jne    0x140008017
   140007ff2:	call   0x140003fbc
   140007ff7:	mov    DWORD PTR [rax],0x9
   140007ffd:	and    QWORD PTR [rsp+0x20],0x0
   140008003:	xor    r9d,r9d
   140008006:	xor    r8d,r8d
   140008009:	xor    edx,edx
   14000800b:	xor    ecx,ecx
   14000800d:	call   0x140003eec
   140008012:	or     eax,0xffffffff
   140008015:	jmp    0x140008091
   140008017:	mov    ecx,edi
   140008019:	call   0x14000a500
   14000801e:	nop
   14000801f:	mov    rax,QWORD PTR [r12+rsi*8]
   140008023:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140008028:	je     0x140008055
   14000802a:	mov    ecx,edi
   14000802c:	call   0x14000a47c
   140008031:	mov    rcx,rax
   140008034:	call   QWORD PTR [rip+0x719e]        # 0x14000f1d8
   14000803a:	test   eax,eax
   14000803c:	jne    0x140008048
   14000803e:	call   QWORD PTR [rip+0x7094]        # 0x14000f0d8
   140008044:	mov    ebx,eax
   140008046:	jmp    0x14000804a
   140008048:	xor    ebx,ebx
   14000804a:	test   ebx,ebx
   14000804c:	je     0x140008063
   14000804e:	call   0x140003fdc
   140008053:	mov    DWORD PTR [rax],ebx
   140008055:	call   0x140003fbc
   14000805a:	mov    DWORD PTR [rax],0x9
   140008060:	or     ebx,0xffffffff
   140008063:	mov    ecx,edi
   140008065:	call   0x14000a5a8
   14000806a:	mov    eax,ebx
   14000806c:	jmp    0x140008091
   14000806e:	call   0x140003fbc
   140008073:	mov    DWORD PTR [rax],0x9
   140008079:	and    QWORD PTR [rsp+0x20],0x0
   14000807f:	xor    r9d,r9d
   140008082:	xor    r8d,r8d
   140008085:	xor    edx,edx
   140008087:	xor    ecx,ecx
   140008089:	call   0x140003eec
   14000808e:	or     eax,0xffffffff
   140008091:	mov    rbx,QWORD PTR [rsp+0x60]
   140008096:	add    rsp,0x30
   14000809a:	pop    r12
   14000809c:	pop    rdi
   14000809d:	pop    rsi
   14000809e:	ret    
   14000809f:	int3   
   1400080a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400080a5:	push   rdi
   1400080a6:	sub    rsp,0x50
   1400080aa:	mov    rbx,rdx
   1400080ad:	mov    rdi,rcx
   1400080b0:	test   rcx,rcx
   1400080b3:	jne    0x1400080d9
   1400080b5:	call   0x140003fbc
   1400080ba:	and    QWORD PTR [rsp+0x20],0x0
   1400080c0:	xor    r9d,r9d
   1400080c3:	xor    r8d,r8d
   1400080c6:	xor    edx,edx
   1400080c8:	xor    ecx,ecx
   1400080ca:	mov    DWORD PTR [rax],0x16
   1400080d0:	call   0x140003eec
   1400080d5:	xor    eax,eax
   1400080d7:	jmp    0x14000814f
   1400080d9:	test   rdx,rdx
   1400080dc:	je     0x1400080b5
   1400080de:	cmp    rcx,rdx
   1400080e1:	jae    0x1400080d5
   1400080e3:	lea    rcx,[rsp+0x30]
   1400080e8:	mov    rdx,r8
   1400080eb:	call   0x140002370
   1400080f0:	mov    r11,QWORD PTR [rsp+0x38]
   1400080f5:	cmp    DWORD PTR [r11+0x8],0x0
   1400080fa:	jne    0x140008115
   1400080fc:	cmp    BYTE PTR [rsp+0x48],0x0
   140008101:	lea    rax,[rbx-0x1]
   140008105:	je     0x14000814f
   140008107:	mov    rcx,QWORD PTR [rsp+0x40]
   14000810c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140008113:	jmp    0x14000814f
   140008115:	lea    rdx,[rbx-0x1]
   140008119:	dec    rdx
   14000811c:	cmp    rdi,rdx
   14000811f:	ja     0x14000812c
   140008121:	movzx  eax,BYTE PTR [rdx]
   140008124:	test   BYTE PTR [rax+r11*1+0x1d],0x4
   14000812a:	jne    0x140008119
   14000812c:	mov    rcx,rbx
   14000812f:	sub    rcx,rdx
   140008132:	and    ecx,0x1
   140008135:	sub    rbx,rcx
   140008138:	cmp    BYTE PTR [rsp+0x48],0x0
   14000813d:	je     0x14000814b
   14000813f:	mov    rcx,QWORD PTR [rsp+0x40]
   140008144:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000814b:	lea    rax,[rbx-0x1]
   14000814f:	mov    rbx,QWORD PTR [rsp+0x60]
   140008154:	add    rsp,0x50
   140008158:	pop    rdi
   140008159:	ret    
   14000815a:	int3   
   14000815b:	int3   
   14000815c:	xor    r8d,r8d
   14000815f:	jmp    0x1400080a0
   140008164:	mov    QWORD PTR [rsp+0x8],rbx
   140008169:	mov    QWORD PTR [rsp+0x10],rbp
   14000816e:	mov    QWORD PTR [rsp+0x18],rsi
   140008173:	push   rdi
   140008174:	push   r12
   140008176:	push   r13
   140008178:	sub    rsp,0x50
   14000817c:	xor    r13d,r13d
   14000817f:	mov    rdi,r9
   140008182:	mov    rsi,r8
   140008185:	mov    rbp,rdx
   140008188:	mov    rbx,rcx
   14000818b:	cmp    r9,r13
   14000818e:	jne    0x14000819e
   140008190:	cmp    rcx,r13
   140008193:	jne    0x1400081a3
   140008195:	cmp    rdx,r13
   140008198:	jne    0x1400081ba
   14000819a:	xor    eax,eax
   14000819c:	jmp    0x1400081dc
   14000819e:	cmp    rcx,r13
   1400081a1:	je     0x1400081ba
   1400081a3:	cmp    rdx,r13
   1400081a6:	jbe    0x1400081ba
   1400081a8:	cmp    r9,r13
   1400081ab:	jne    0x1400081b2
   1400081ad:	mov    BYTE PTR [rcx],r13b
   1400081b0:	jmp    0x14000819a
   1400081b2:	cmp    r8,r13
   1400081b5:	jne    0x1400081f6
   1400081b7:	mov    BYTE PTR [rcx],r13b
   1400081ba:	call   0x140003fbc
   1400081bf:	mov    ebx,0x16
   1400081c4:	xor    r9d,r9d
   1400081c7:	xor    r8d,r8d
   1400081ca:	xor    edx,edx
   1400081cc:	xor    ecx,ecx
   1400081ce:	mov    DWORD PTR [rax],ebx
   1400081d0:	mov    QWORD PTR [rsp+0x20],r13
   1400081d5:	call   0x140003eec
   1400081da:	mov    eax,ebx
   1400081dc:	lea    r11,[rsp+0x50]
   1400081e1:	mov    rbx,QWORD PTR [r11+0x20]
   1400081e5:	mov    rbp,QWORD PTR [r11+0x28]
   1400081e9:	mov    rsi,QWORD PTR [r11+0x30]
   1400081ed:	mov    rsp,r11
   1400081f0:	pop    r13
   1400081f2:	pop    r12
   1400081f4:	pop    rdi
   1400081f5:	ret    
   1400081f6:	mov    rdx,QWORD PTR [rsp+0x90]
   1400081fe:	lea    rcx,[rsp+0x30]
   140008203:	call   0x140002370
   140008208:	mov    r11,QWORD PTR [rsp+0x38]
   14000820d:	mov    rdx,rbp
   140008210:	mov    rcx,rbx
   140008213:	cmp    DWORD PTR [r11+0x8],r13d
   140008217:	jne    0x140008239
   140008219:	mov    r9,rdi
   14000821c:	mov    r8,rsi
   14000821f:	call   0x14000937c
   140008224:	cmp    BYTE PTR [rsp+0x48],r13b
   140008229:	je     0x1400081dc
   14000822b:	mov    rcx,QWORD PTR [rsp+0x40]
   140008230:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140008237:	jmp    0x1400081dc
   140008239:	cmp    rdi,0xffffffffffffffff
   14000823d:	jne    0x140008256
   14000823f:	mov    al,BYTE PTR [rsi]
   140008241:	inc    rsi
   140008244:	mov    BYTE PTR [rcx],al
   140008246:	inc    rcx
   140008249:	cmp    al,r13b
   14000824c:	je     0x14000827c
   14000824e:	sub    rdx,0x1
   140008252:	jne    0x14000823f
   140008254:	jmp    0x14000827c
   140008256:	mov    al,BYTE PTR [rsi]
   140008258:	inc    rsi
   14000825b:	mov    BYTE PTR [rcx],al
   14000825d:	inc    rcx
   140008260:	cmp    al,r13b
   140008263:	je     0x140008271
   140008265:	sub    rdx,0x1
   140008269:	je     0x140008271
   14000826b:	sub    rdi,0x1
   14000826f:	jne    0x140008256
   140008271:	cmp    rdi,r13
   140008274:	jne    0x14000827c
   140008276:	mov    BYTE PTR [rcx],r13b
   140008279:	inc    rcx
   14000827c:	cmp    rdx,r13
   14000827f:	jne    0x14000838a
   140008285:	cmp    BYTE PTR [rsi],r13b
   140008288:	je     0x140008290
   14000828a:	cmp    rdi,0x1
   14000828e:	jne    0x1400082e9
   140008290:	lea    r12,[rcx-0x1]
   140008294:	mov    rsi,r12
   140008297:	cmp    r12,rbx
   14000829a:	jb     0x1400082b6
   14000829c:	movzx  ecx,BYTE PTR [rsi]
   14000829f:	lea    rdx,[rsp+0x30]
   1400082a4:	call   0x1400049d0
   1400082a9:	cmp    eax,r13d
   1400082ac:	je     0x1400082b6
   1400082ae:	dec    rsi
   1400082b1:	cmp    rsi,rbx
   1400082b4:	jae    0x14000829c
   1400082b6:	mov    eax,r12d
   1400082b9:	sub    eax,esi
   1400082bb:	test   al,0x1
   1400082bd:	je     0x1400082e9
   1400082bf:	mov    BYTE PTR [r12],r13b
   1400082c3:	call   0x140003fbc
   1400082c8:	mov    edx,0x2a
   1400082cd:	mov    DWORD PTR [rax],edx
   1400082cf:	cmp    BYTE PTR [rsp+0x48],r13b
   1400082d4:	je     0x1400082e2
   1400082d6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400082db:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400082e2:	mov    eax,edx
   1400082e4:	jmp    0x1400081dc
   1400082e9:	cmp    rdi,0xffffffffffffffff
   1400082ed:	jne    0x14000834b
   1400082ef:	cmp    rbp,0x1
   1400082f3:	jbe    0x140008344
   1400082f5:	lea    rsi,[rbx+rbp*1-0x2]
   1400082fa:	mov    rdi,rsi
   1400082fd:	cmp    rsi,rbx
   140008300:	jb     0x14000831c
   140008302:	movzx  ecx,BYTE PTR [rdi]
   140008305:	lea    rdx,[rsp+0x30]
   14000830a:	call   0x1400049d0
   14000830f:	cmp    eax,r13d
   140008312:	je     0x14000831c
   140008314:	dec    rdi
   140008317:	cmp    rdi,rbx
   14000831a:	jae    0x140008302
   14000831c:	mov    eax,esi
   14000831e:	sub    eax,edi
   140008320:	test   al,0x1
   140008322:	je     0x140008344
   140008324:	mov    BYTE PTR [rsi],r13b
   140008327:	cmp    BYTE PTR [rsp+0x48],r13b
   14000832c:	je     0x14000833a
   14000832e:	mov    rax,QWORD PTR [rsp+0x40]
   140008333:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000833a:	mov    eax,0x50
   14000833f:	jmp    0x1400081dc
   140008344:	mov    BYTE PTR [rbx+rbp*1-0x1],r13b
   140008349:	jmp    0x140008327
   14000834b:	mov    BYTE PTR [rbx],r13b
   14000834e:	call   0x140003fbc
   140008353:	mov    ebx,0x22
   140008358:	xor    r9d,r9d
   14000835b:	xor    r8d,r8d
   14000835e:	xor    edx,edx
   140008360:	xor    ecx,ecx
   140008362:	mov    DWORD PTR [rax],ebx
   140008364:	mov    QWORD PTR [rsp+0x20],r13
   140008369:	call   0x140003eec
   14000836e:	cmp    BYTE PTR [rsp+0x48],r13b
   140008373:	je     0x1400081da
   140008379:	mov    rcx,QWORD PTR [rsp+0x40]
   14000837e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140008385:	jmp    0x1400081da
   14000838a:	mov    rax,rcx
   14000838d:	sub    rax,rbx
   140008390:	cmp    rax,0x2
   140008394:	jl     0x1400083ef
   140008396:	lea    rsi,[rcx-0x2]
   14000839a:	mov    rdi,rsi
   14000839d:	cmp    rsi,rbx
   1400083a0:	jb     0x1400083bc
   1400083a2:	movzx  ecx,BYTE PTR [rdi]
   1400083a5:	lea    rdx,[rsp+0x30]
   1400083aa:	call   0x1400049d0
   1400083af:	cmp    eax,r13d
   1400083b2:	je     0x1400083bc
   1400083b4:	dec    rdi
   1400083b7:	cmp    rdi,rbx
   1400083ba:	jae    0x1400083a2
   1400083bc:	mov    eax,esi
   1400083be:	sub    eax,edi
   1400083c0:	test   al,0x1
   1400083c2:	je     0x1400083ef
   1400083c4:	mov    BYTE PTR [rsi],r13b
   1400083c7:	call   0x140003fbc
   1400083cc:	mov    edx,0x2a
   1400083d1:	mov    DWORD PTR [rax],edx
   1400083d3:	cmp    BYTE PTR [rsp+0x48],r13b
   1400083d8:	je     0x1400082e2
   1400083de:	mov    rax,QWORD PTR [rsp+0x40]
   1400083e3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400083ea:	jmp    0x1400082e2
   1400083ef:	cmp    BYTE PTR [rsp+0x48],r13b
   1400083f4:	je     0x14000819a
   1400083fa:	mov    rax,QWORD PTR [rsp+0x40]
   1400083ff:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140008406:	jmp    0x14000819a
   14000840b:	int3   
   14000840c:	rex push rbp
   14000840e:	push   r12
   140008410:	push   r13
   140008412:	push   r14
   140008414:	push   r15
   140008416:	sub    rsp,0x60
   14000841a:	lea    rbp,[rsp+0x40]
   14000841f:	mov    QWORD PTR [rbp+0x50],rbx
   140008423:	mov    QWORD PTR [rbp+0x58],rsi
   140008427:	mov    QWORD PTR [rbp+0x60],rdi
   14000842b:	mov    rax,QWORD PTR [rip+0x9f8e]        # 0x1400123c0
   140008432:	xor    rax,rbp
   140008435:	mov    QWORD PTR [rbp+0x18],rax
   140008439:	mov    r10d,DWORD PTR [rip+0xbe24]        # 0x140014264
   140008440:	mov    esi,0x2
   140008445:	xor    edi,edi
   140008447:	mov    r11,r9
   14000844a:	mov    QWORD PTR [rbp+0x10],r9
   14000844e:	mov    DWORD PTR [rbp+0x0],r8d
   140008452:	mov    r14d,edx
   140008455:	mov    DWORD PTR [rbp+0x8],edx
   140008458:	mov    rbx,rcx
   14000845b:	lea    r13d,[rsi-0x1]
   14000845f:	cmp    r10d,edi
   140008462:	jne    0x1400084b3
   140008464:	lea    r8,[rip+0x7781]        # 0x14000fbec
   14000846b:	mov    r9d,r13d
   14000846e:	mov    edx,0x100
   140008473:	xor    ecx,ecx
   140008475:	mov    DWORD PTR [rsp+0x28],edi
   140008479:	mov    QWORD PTR [rsp+0x20],rdi
   14000847e:	call   QWORD PTR [rip+0x6d6c]        # 0x14000f1f0
   140008484:	cmp    eax,edi
   140008486:	je     0x140008494
   140008488:	mov    r10d,r13d
   14000848b:	mov    DWORD PTR [rip+0xbdd2],r13d        # 0x140014264
   140008492:	jmp    0x1400084af
   140008494:	call   QWORD PTR [rip+0x6c3e]        # 0x14000f0d8
   14000849a:	mov    r10d,DWORD PTR [rip+0xbdc3]        # 0x140014264
   1400084a1:	cmp    eax,0x78
   1400084a4:	cmove  r10d,esi
   1400084a8:	mov    DWORD PTR [rip+0xbdb5],r10d        # 0x140014264
   1400084af:	mov    r11,QWORD PTR [rbp+0x10]
   1400084b3:	mov    r9d,DWORD PTR [rbp+0x70]
   1400084b7:	cmp    r9d,edi
   1400084ba:	jle    0x1400084f1
   1400084bc:	mov    ecx,r9d
   1400084bf:	mov    rax,r11
   1400084c2:	sub    ecx,r13d
   1400084c5:	cmp    BYTE PTR [rax],dil
   1400084c8:	je     0x1400084d4
   1400084ca:	add    rax,r13
   1400084cd:	cmp    ecx,edi
   1400084cf:	jne    0x1400084c2
   1400084d1:	or     ecx,0xffffffff
   1400084d4:	mov    eax,r9d
   1400084d7:	sub    eax,ecx
   1400084d9:	sub    eax,r13d
   1400084dc:	cmp    eax,r9d
   1400084df:	jge    0x1400084eb
   1400084e1:	lea    r9d,[rax+0x1]
   1400084e5:	mov    DWORD PTR [rbp+0x70],r9d
   1400084e9:	jmp    0x1400084f1
   1400084eb:	mov    r9d,eax
   1400084ee:	mov    DWORD PTR [rbp+0x70],eax
   1400084f1:	cmp    r10d,esi
   1400084f4:	je     0x140008756
   1400084fa:	cmp    r10d,edi
   1400084fd:	je     0x140008756
   140008503:	cmp    r10d,r13d
   140008506:	jne    0x14000878c
   14000850c:	mov    r12d,DWORD PTR [rbp+0x88]
   140008513:	mov    esi,edi
   140008515:	cmp    r12d,edi
   140008518:	jne    0x140008521
   14000851a:	mov    rax,QWORD PTR [rbx]
   14000851d:	mov    r12d,DWORD PTR [rax+0x4]
   140008521:	neg    DWORD PTR [rbp+0x90]
   140008527:	mov    r8,r11
   14000852a:	mov    ecx,r12d
   14000852d:	sbb    edx,edx
   14000852f:	mov    DWORD PTR [rsp+0x28],edi
   140008533:	mov    QWORD PTR [rsp+0x20],rdi
   140008538:	and    edx,0x8
   14000853b:	add    edx,r13d
   14000853e:	call   QWORD PTR [rip+0x6ca4]        # 0x14000f1e8
   140008544:	movsxd r15,eax
   140008547:	cmp    r15d,edi
   14000854a:	je     0x14000878c
   140008550:	movabs rbx,0xffffffffffffff0
   14000855a:	mov    r14d,0xdddd
   140008560:	mov    r13d,0x400
   140008566:	jle    0x1400085c3
   140008568:	xor    edx,edx
   14000856a:	lea    rax,[rdx-0x20]
   14000856e:	div    r15
   140008571:	cmp    rax,0x2
   140008575:	jb     0x1400085c3
   140008577:	lea    rcx,[r15+r15*1+0x10]
   14000857c:	cmp    rcx,r13
   14000857f:	ja     0x1400085af
   140008581:	lea    rax,[rcx+0xf]
   140008585:	cmp    rax,rcx
   140008588:	ja     0x14000858d
   14000858a:	mov    rax,rbx
   14000858d:	and    rax,0xfffffffffffffff0
   140008591:	call   0x14000e1f0
   140008596:	sub    rsp,rax
   140008599:	lea    rdi,[rsp+0x40]
   14000859e:	test   rdi,rdi
   1400085a1:	je     0x14000878c
   1400085a7:	mov    DWORD PTR [rdi],0xcccc
   1400085ad:	jmp    0x1400085bf
   1400085af:	call   0x1400073cc
   1400085b4:	mov    rdi,rax
   1400085b7:	test   rax,rax
   1400085ba:	je     0x1400085c3
   1400085bc:	mov    DWORD PTR [rax],r14d
   1400085bf:	add    rdi,0x10
   1400085c3:	test   rdi,rdi
   1400085c6:	je     0x14000878c
   1400085cc:	mov    r9d,DWORD PTR [rbp+0x70]
   1400085d0:	mov    r8,QWORD PTR [rbp+0x10]
   1400085d4:	mov    edx,0x1
   1400085d9:	mov    ecx,r12d
   1400085dc:	mov    DWORD PTR [rsp+0x28],r15d
   1400085e1:	mov    QWORD PTR [rsp+0x20],rdi
   1400085e6:	call   QWORD PTR [rip+0x6bfc]        # 0x14000f1e8
   1400085ec:	xor    ecx,ecx
   1400085ee:	cmp    eax,ecx
   1400085f0:	je     0x140008741
   1400085f6:	mov    edx,DWORD PTR [rbp+0x0]
   1400085f9:	mov    DWORD PTR [rsp+0x28],ecx
   1400085fd:	mov    QWORD PTR [rsp+0x20],rcx
   140008602:	mov    ecx,DWORD PTR [rbp+0x8]
   140008605:	mov    r9d,r15d
   140008608:	mov    r8,rdi
   14000860b:	call   QWORD PTR [rip+0x6bdf]        # 0x14000f1f0
   140008611:	xor    r8d,r8d
   140008614:	movsxd rsi,eax
   140008617:	cmp    esi,r8d
   14000861a:	je     0x140008741
   140008620:	mov    r10d,DWORD PTR [rbp+0x0]
   140008624:	bt     r10d,0xa
   140008629:	jae    0x140008666
   14000862b:	mov    eax,DWORD PTR [rbp+0x80]
   140008631:	cmp    eax,r8d
   140008634:	je     0x140008741
   14000863a:	cmp    esi,eax
   14000863c:	jg     0x140008741
   140008642:	mov    ecx,DWORD PTR [rbp+0x8]
   140008645:	mov    DWORD PTR [rsp+0x28],eax
   140008649:	mov    rax,QWORD PTR [rbp+0x78]
   14000864d:	mov    r9d,r15d
   140008650:	mov    r8,rdi
   140008653:	mov    edx,r10d
   140008656:	mov    QWORD PTR [rsp+0x20],rax
   14000865b:	call   QWORD PTR [rip+0x6b8f]        # 0x14000f1f0
   140008661:	jmp    0x140008741
   140008666:	cmp    esi,r8d
   140008669:	jle    0x1400086cb
   14000866b:	xor    edx,edx
   14000866d:	lea    rax,[rdx-0x20]
   140008671:	div    rsi
   140008674:	cmp    rax,0x2
   140008678:	jb     0x1400086cb
   14000867a:	lea    rcx,[rsi+rsi*1+0x10]
   14000867f:	cmp    rcx,r13
   140008682:	ja     0x1400086ae
   140008684:	lea    rax,[rcx+0xf]
   140008688:	cmp    rax,rcx
   14000868b:	ja     0x140008690
   14000868d:	mov    rax,rbx
   140008690:	and    rax,0xfffffffffffffff0
   140008694:	call   0x14000e1f0
   140008699:	sub    rsp,rax
   14000869c:	lea    rbx,[rsp+0x40]
   1400086a1:	cmp    rbx,r8
   1400086a4:	je     0x1400086c5
   1400086a6:	mov    DWORD PTR [rbx],0xcccc
   1400086ac:	jmp    0x1400086c1
   1400086ae:	call   0x1400073cc
   1400086b3:	xor    r8d,r8d
   1400086b6:	mov    rbx,rax
   1400086b9:	cmp    rax,r8
   1400086bc:	je     0x1400086c5
   1400086be:	mov    DWORD PTR [rax],r14d
   1400086c1:	add    rbx,0x10
   1400086c5:	mov    r10d,DWORD PTR [rbp+0x0]
   1400086c9:	jmp    0x1400086ce
   1400086cb:	mov    rbx,r8
   1400086ce:	cmp    rbx,r8
   1400086d1:	je     0x140008741
   1400086d3:	mov    ecx,DWORD PTR [rbp+0x8]
   1400086d6:	mov    r9d,r15d
   1400086d9:	mov    r8,rdi
   1400086dc:	mov    edx,r10d
   1400086df:	mov    DWORD PTR [rsp+0x28],esi
   1400086e3:	mov    QWORD PTR [rsp+0x20],rbx
   1400086e8:	call   QWORD PTR [rip+0x6b02]        # 0x14000f1f0
   1400086ee:	xor    ecx,ecx
   1400086f0:	cmp    eax,ecx
   1400086f2:	je     0x140008733
   1400086f4:	mov    eax,DWORD PTR [rbp+0x80]
   1400086fa:	xor    edx,edx
   1400086fc:	mov    QWORD PTR [rsp+0x38],rcx
   140008701:	mov    r9d,esi
   140008704:	mov    r8,rbx
   140008707:	mov    QWORD PTR [rsp+0x30],rcx
   14000870c:	cmp    eax,ecx
   14000870e:	jne    0x14000871b
   140008710:	mov    DWORD PTR [rsp+0x28],ecx
   140008714:	mov    QWORD PTR [rsp+0x20],rcx
   140008719:	jmp    0x140008728
   14000871b:	mov    DWORD PTR [rsp+0x28],eax
   14000871f:	mov    rax,QWORD PTR [rbp+0x78]
   140008723:	mov    QWORD PTR [rsp+0x20],rax
   140008728:	mov    ecx,r12d
   14000872b:	call   QWORD PTR [rip+0x6a4f]        # 0x14000f180
   140008731:	mov    esi,eax
   140008733:	lea    rcx,[rbx-0x10]
   140008737:	cmp    DWORD PTR [rcx],r14d
   14000873a:	jne    0x140008741
   14000873c:	call   0x140004244
   140008741:	lea    rcx,[rdi-0x10]
   140008745:	cmp    DWORD PTR [rcx],r14d
   140008748:	jne    0x14000874f
   14000874a:	call   0x140004244
   14000874f:	mov    eax,esi
   140008751:	jmp    0x140008923
   140008756:	mov    rsi,rdi
   140008759:	mov    r12,rdi
   14000875c:	cmp    r14d,edi
   14000875f:	jne    0x14000876c
   140008761:	mov    rax,QWORD PTR [rbx]
   140008764:	mov    r14d,DWORD PTR [rax+0x14]
   140008768:	mov    DWORD PTR [rbp+0x8],r14d
   14000876c:	mov    edi,DWORD PTR [rbp+0x88]
   140008772:	test   edi,edi
   140008774:	jne    0x14000877c
   140008776:	mov    rax,QWORD PTR [rbx]
   140008779:	mov    edi,DWORD PTR [rax+0x4]
   14000877c:	mov    ecx,r14d
   14000877f:	call   0x14000a7ec
   140008784:	mov    r13d,eax
   140008787:	cmp    eax,0xffffffff
   14000878a:	jne    0x140008793
   14000878c:	xor    eax,eax
   14000878e:	jmp    0x140008923
   140008793:	mov    r15,QWORD PTR [rbp+0x78]
   140008797:	mov    r8,QWORD PTR [rbp+0x10]
   14000879b:	cmp    eax,edi
   14000879d:	je     0x1400088df
   1400087a3:	xor    ebx,ebx
   1400087a5:	lea    r9,[rbp+0x70]
   1400087a9:	mov    edx,eax
   1400087ab:	mov    ecx,edi
   1400087ad:	mov    DWORD PTR [rsp+0x28],ebx
   1400087b1:	mov    QWORD PTR [rsp+0x20],rbx
   1400087b6:	call   0x14000a840
   1400087bb:	mov    rsi,rax
   1400087be:	cmp    rax,rbx
   1400087c1:	je     0x14000878c
   1400087c3:	mov    r9d,DWORD PTR [rbp+0x70]
   1400087c7:	mov    edx,DWORD PTR [rbp+0x0]
   1400087ca:	mov    r8,rax
   1400087cd:	mov    ecx,r14d
   1400087d0:	mov    DWORD PTR [rsp+0x28],ebx
   1400087d4:	mov    QWORD PTR [rsp+0x20],rbx
   1400087d9:	call   QWORD PTR [rip+0x6a01]        # 0x14000f1e0
   1400087df:	movsxd r9,eax
   1400087e2:	mov    DWORD PTR [rbp+0x4],r9d
   1400087e6:	cmp    r9d,ebx
   1400087e9:	jne    0x1400087f2
   1400087eb:	mov    edi,ebx
   1400087ed:	jmp    0x140008902
   1400087f2:	cmp    r9d,ebx
   1400087f5:	mov    r14d,0xdddd
   1400087fb:	jle    0x14000885f
   1400087fd:	mov    rcx,r9
   140008800:	cmp    r9,0xffffffffffffffe0
   140008804:	ja     0x14000885f
   140008806:	add    rcx,0x10
   14000880a:	cmp    rcx,0x400
   140008811:	ja     0x140008847
   140008813:	lea    rbx,[rcx+0xf]
   140008817:	cmp    rbx,rcx
   14000881a:	ja     0x140008826
   14000881c:	movabs rbx,0xffffffffffffff0
   140008826:	and    rbx,0xfffffffffffffff0
   14000882a:	mov    rax,rbx
   14000882d:	call   0x14000e1f0
   140008832:	sub    rsp,rbx
   140008835:	lea    rbx,[rsp+0x40]
   14000883a:	test   rbx,rbx
   14000883d:	je     0x140008864
   14000883f:	mov    DWORD PTR [rbx],0xcccc
   140008845:	jmp    0x140008857
   140008847:	call   0x1400073cc
   14000884c:	mov    rbx,rax
   14000884f:	test   rax,rax
   140008852:	je     0x14000885b
   140008854:	mov    DWORD PTR [rax],r14d
   140008857:	add    rbx,0x10
   14000885b:	mov    r9d,DWORD PTR [rbp+0x4]
   14000885f:	test   rbx,rbx
   140008862:	jne    0x140008868
   140008864:	xor    ebx,ebx
   140008866:	jmp    0x1400087eb
   140008868:	movsxd r8,r9d
   14000886b:	xor    edx,edx
   14000886d:	mov    rcx,rbx
   140008870:	call   0x140001cf0
   140008875:	mov    r11d,DWORD PTR [rbp+0x4]
   140008879:	mov    r9d,DWORD PTR [rbp+0x70]
   14000887d:	mov    edx,DWORD PTR [rbp+0x0]
   140008880:	mov    ecx,DWORD PTR [rbp+0x8]
   140008883:	mov    DWORD PTR [rsp+0x28],r11d
   140008888:	mov    r8,rsi
   14000888b:	mov    QWORD PTR [rsp+0x20],rbx
   140008890:	call   QWORD PTR [rip+0x694a]        # 0x14000f1e0
   140008896:	mov    DWORD PTR [rbp+0x4],eax
   140008899:	test   eax,eax
   14000889b:	jne    0x1400088a1
   14000889d:	xor    edi,edi
   14000889f:	jmp    0x1400088cf
   1400088a1:	mov    eax,DWORD PTR [rbp+0x80]
   1400088a7:	lea    r9,[rbp+0x4]
   1400088ab:	mov    r8,rbx
   1400088ae:	mov    DWORD PTR [rsp+0x28],eax
   1400088b2:	mov    edx,edi
   1400088b4:	mov    ecx,r13d
   1400088b7:	mov    QWORD PTR [rsp+0x20],r15
   1400088bc:	call   0x14000a840
   1400088c1:	mov    edi,DWORD PTR [rbp+0x4]
   1400088c4:	mov    r12,rax
   1400088c7:	xor    eax,eax
   1400088c9:	cmp    r12,rax
   1400088cc:	cmove  edi,eax
   1400088cf:	lea    rcx,[rbx-0x10]
   1400088d3:	cmp    DWORD PTR [rcx],r14d
   1400088d6:	jne    0x140008900
   1400088d8:	call   0x140004244
   1400088dd:	jmp    0x140008900
   1400088df:	mov    eax,DWORD PTR [rbp+0x80]
   1400088e5:	mov    r9d,DWORD PTR [rbp+0x70]
   1400088e9:	mov    edx,DWORD PTR [rbp+0x0]
   1400088ec:	mov    DWORD PTR [rsp+0x28],eax
   1400088f0:	mov    ecx,r14d
   1400088f3:	mov    QWORD PTR [rsp+0x20],r15
   1400088f8:	call   QWORD PTR [rip+0x68e2]        # 0x14000f1e0
   1400088fe:	mov    edi,eax
   140008900:	xor    ebx,ebx
   140008902:	cmp    rsi,rbx
   140008905:	je     0x14000890f
   140008907:	mov    rcx,rsi
   14000890a:	call   0x140004244
   14000890f:	cmp    r12,rbx
   140008912:	je     0x140008921
   140008914:	cmp    r15,r12
   140008917:	je     0x140008921
   140008919:	mov    rcx,r12
   14000891c:	call   0x140004244
   140008921:	mov    eax,edi
   140008923:	mov    rcx,QWORD PTR [rbp+0x18]
   140008927:	xor    rcx,rbp
   14000892a:	call   0x140002350
   14000892f:	mov    rbx,QWORD PTR [rbp+0x50]
   140008933:	mov    rsi,QWORD PTR [rbp+0x58]
   140008937:	mov    rdi,QWORD PTR [rbp+0x60]
   14000893b:	lea    rsp,[rbp+0x20]
   14000893f:	pop    r15
   140008941:	pop    r14
   140008943:	pop    r13
   140008945:	pop    r12
   140008947:	pop    rbp
   140008948:	ret    
   140008949:	int3   
   14000894a:	int3   
   14000894b:	int3   
   14000894c:	mov    QWORD PTR [rsp+0x8],rbx
   140008951:	mov    QWORD PTR [rsp+0x10],rsi
   140008956:	push   rdi
   140008957:	sub    rsp,0x70
   14000895b:	mov    esi,edx
   14000895d:	mov    rdx,rcx
   140008960:	lea    rcx,[rsp+0x50]
   140008965:	mov    rbx,r9
   140008968:	mov    edi,r8d
   14000896b:	call   0x140002370
   140008970:	mov    eax,DWORD PTR [rsp+0xb8]
   140008977:	mov    r11d,DWORD PTR [rsp+0xc0]
   14000897f:	lea    rcx,[rsp+0x50]
   140008984:	mov    DWORD PTR [rsp+0x40],r11d
   140008989:	mov    DWORD PTR [rsp+0x38],eax
   14000898d:	mov    eax,DWORD PTR [rsp+0xb0]
   140008994:	mov    DWORD PTR [rsp+0x30],eax
   140008998:	mov    rax,QWORD PTR [rsp+0xa8]
   1400089a0:	mov    r9,rbx
   1400089a3:	mov    QWORD PTR [rsp+0x28],rax
   1400089a8:	mov    eax,DWORD PTR [rsp+0xa0]
   1400089af:	mov    r8d,edi
   1400089b2:	mov    edx,esi
   1400089b4:	mov    DWORD PTR [rsp+0x20],eax
   1400089b8:	call   0x14000840c
   1400089bd:	cmp    BYTE PTR [rsp+0x68],0x0
   1400089c2:	je     0x1400089d0
   1400089c4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400089c9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400089d0:	lea    r11,[rsp+0x70]
   1400089d5:	mov    rbx,QWORD PTR [r11+0x10]
   1400089d9:	mov    rsi,QWORD PTR [r11+0x18]
   1400089dd:	mov    rsp,r11
   1400089e0:	pop    rdi
   1400089e1:	ret    
   1400089e2:	int3   
   1400089e3:	int3   
   1400089e4:	mov    DWORD PTR [rsp+0x20],r9d
   1400089e9:	push   rbp
   1400089ea:	push   r12
   1400089ec:	push   r13
   1400089ee:	push   r14
   1400089f0:	push   r15
   1400089f2:	sub    rsp,0x40
   1400089f6:	lea    rbp,[rsp+0x30]
   1400089fb:	mov    QWORD PTR [rbp+0x40],rbx
   1400089ff:	mov    QWORD PTR [rbp+0x48],rsi
   140008a03:	mov    QWORD PTR [rbp+0x50],rdi
   140008a07:	mov    rax,QWORD PTR [rip+0x99b2]        # 0x1400123c0
   140008a0e:	xor    rax,rbp
   140008a11:	mov    QWORD PTR [rbp+0x8],rax
   140008a15:	mov    r9d,DWORD PTR [rip+0xb84c]        # 0x140014268
   140008a1c:	mov    edi,0x1
   140008a21:	xor    ebx,ebx
   140008a23:	mov    r14,r8
   140008a26:	mov    r15d,edx
   140008a29:	mov    r13,rcx
   140008a2c:	lea    esi,[rdi+0x1]
   140008a2f:	cmp    r9d,ebx
   140008a32:	jne    0x140008a71
   140008a34:	lea    r9,[rbp+0x0]
   140008a38:	lea    rdx,[rip+0x71ad]        # 0x14000fbec
   140008a3f:	mov    r8d,edi
   140008a42:	mov    ecx,edi
   140008a44:	call   QWORD PTR [rip+0x67b6]        # 0x14000f200
   140008a4a:	cmp    eax,ebx
   140008a4c:	je     0x140008a56
   140008a4e:	mov    DWORD PTR [rip+0xb814],edi        # 0x140014268
   140008a54:	jmp    0x140008a8c
   140008a56:	call   QWORD PTR [rip+0x667c]        # 0x14000f0d8
   140008a5c:	mov    r9d,DWORD PTR [rip+0xb805]        # 0x140014268
   140008a63:	cmp    eax,0x78
   140008a66:	cmove  r9d,esi
   140008a6a:	mov    DWORD PTR [rip+0xb7f7],r9d        # 0x140014268
   140008a71:	cmp    r9d,esi
   140008a74:	je     0x140008ba0
   140008a7a:	cmp    r9d,ebx
   140008a7d:	je     0x140008ba0
   140008a83:	cmp    r9d,edi
   140008a86:	jne    0x140008bcf
   140008a8c:	mov    esi,DWORD PTR [rbp+0x68]
   140008a8f:	cmp    esi,ebx
   140008a91:	jne    0x140008a9a
   140008a93:	mov    rax,QWORD PTR [r13+0x0]
   140008a97:	mov    esi,DWORD PTR [rax+0x4]
   140008a9a:	neg    DWORD PTR [rbp+0x78]
   140008a9d:	mov    r9d,DWORD PTR [rbp+0x58]
   140008aa1:	mov    r8,r14
   140008aa4:	sbb    edx,edx
   140008aa6:	mov    ecx,esi
   140008aa8:	mov    DWORD PTR [rsp+0x28],ebx
   140008aac:	and    edx,0x8
   140008aaf:	mov    QWORD PTR [rsp+0x20],rbx
   140008ab4:	add    edx,edi
   140008ab6:	call   QWORD PTR [rip+0x672c]        # 0x14000f1e8
   140008abc:	movsxd r12,eax
   140008abf:	cmp    r12d,ebx
   140008ac2:	je     0x140008bcf
   140008ac8:	mov    r13d,0xdddd
   140008ace:	jle    0x140008b38
   140008ad0:	movabs rax,0x7ffffffffffffff0
   140008ada:	cmp    r12,rax
   140008add:	ja     0x140008b38
   140008adf:	lea    rcx,[r12+r12*1+0x10]
   140008ae4:	cmp    rcx,0x400
   140008aeb:	ja     0x140008b22
   140008aed:	lea    rax,[rcx+0xf]
   140008af1:	cmp    rax,rcx
   140008af4:	ja     0x140008b00
   140008af6:	movabs rax,0xffffffffffffff0
   140008b00:	and    rax,0xfffffffffffffff0
   140008b04:	call   0x14000e1f0
   140008b09:	sub    rsp,rax
   140008b0c:	lea    rdi,[rsp+0x30]
   140008b11:	cmp    rdi,rbx
   140008b14:	je     0x140008bcf
   140008b1a:	mov    DWORD PTR [rdi],0xcccc
   140008b20:	jmp    0x140008b32
   140008b22:	call   0x1400073cc
   140008b27:	mov    rdi,rax
   140008b2a:	cmp    rax,rbx
   140008b2d:	je     0x140008b3b
   140008b2f:	mov    DWORD PTR [rax],r13d
   140008b32:	add    rdi,0x10
   140008b36:	jmp    0x140008b3b
   140008b38:	mov    rdi,rbx
   140008b3b:	cmp    rdi,rbx
   140008b3e:	je     0x140008bcf
   140008b44:	mov    r8,r12
   140008b47:	xor    edx,edx
   140008b49:	mov    rcx,rdi
   140008b4c:	add    r8,r8
   140008b4f:	call   0x140001cf0
   140008b54:	mov    r9d,DWORD PTR [rbp+0x58]
   140008b58:	mov    r8,r14
   140008b5b:	mov    edx,0x1
   140008b60:	mov    ecx,esi
   140008b62:	mov    DWORD PTR [rsp+0x28],r12d
   140008b67:	mov    QWORD PTR [rsp+0x20],rdi
   140008b6c:	call   QWORD PTR [rip+0x6676]        # 0x14000f1e8
   140008b72:	cmp    eax,ebx
   140008b74:	je     0x140008b8b
   140008b76:	mov    r9,QWORD PTR [rbp+0x60]
   140008b7a:	mov    r8d,eax
   140008b7d:	mov    rdx,rdi
   140008b80:	mov    ecx,r15d
   140008b83:	call   QWORD PTR [rip+0x6677]        # 0x14000f200
   140008b89:	mov    ebx,eax
   140008b8b:	lea    rcx,[rdi-0x10]
   140008b8f:	cmp    DWORD PTR [rcx],r13d
   140008b92:	jne    0x140008b99
   140008b94:	call   0x140004244
   140008b99:	mov    eax,ebx
   140008b9b:	jmp    0x140008c28
   140008ba0:	mov    r12d,DWORD PTR [rbp+0x70]
   140008ba4:	mov    rdi,rbx
   140008ba7:	cmp    r12d,ebx
   140008baa:	jne    0x140008bb4
   140008bac:	mov    rax,QWORD PTR [r13+0x0]
   140008bb0:	mov    r12d,DWORD PTR [rax+0x14]
   140008bb4:	mov    esi,DWORD PTR [rbp+0x68]
   140008bb7:	cmp    esi,ebx
   140008bb9:	jne    0x140008bc2
   140008bbb:	mov    rax,QWORD PTR [r13+0x0]
   140008bbf:	mov    esi,DWORD PTR [rax+0x4]
   140008bc2:	mov    ecx,r12d
   140008bc5:	call   0x14000a7ec
   140008bca:	cmp    eax,0xffffffff
   140008bcd:	jne    0x140008bd3
   140008bcf:	xor    eax,eax
   140008bd1:	jmp    0x140008c28
   140008bd3:	cmp    eax,esi
   140008bd5:	je     0x140008bfb
   140008bd7:	lea    r9,[rbp+0x58]
   140008bdb:	mov    r8,r14
   140008bde:	mov    edx,eax
   140008be0:	mov    ecx,esi
   140008be2:	mov    DWORD PTR [rsp+0x28],ebx
   140008be6:	mov    QWORD PTR [rsp+0x20],rbx
   140008beb:	call   0x14000a840
   140008bf0:	mov    rdi,rax
   140008bf3:	cmp    rax,rbx
   140008bf6:	je     0x140008bcf
   140008bf8:	mov    r14,rax
   140008bfb:	mov    rax,QWORD PTR [rbp+0x60]
   140008bff:	mov    r9d,DWORD PTR [rbp+0x58]
   140008c03:	mov    r8,r14
   140008c06:	mov    edx,r15d
   140008c09:	mov    ecx,r12d
   140008c0c:	mov    QWORD PTR [rsp+0x20],rax
   140008c11:	call   QWORD PTR [rip+0x65e1]        # 0x14000f1f8
   140008c17:	mov    esi,eax
   140008c19:	cmp    rdi,rbx
   140008c1c:	je     0x140008c26
   140008c1e:	mov    rcx,rdi
   140008c21:	call   0x140004244
   140008c26:	mov    eax,esi
   140008c28:	mov    rcx,QWORD PTR [rbp+0x8]
   140008c2c:	xor    rcx,rbp
   140008c2f:	call   0x140002350
   140008c34:	mov    rbx,QWORD PTR [rbp+0x40]
   140008c38:	mov    rsi,QWORD PTR [rbp+0x48]
   140008c3c:	mov    rdi,QWORD PTR [rbp+0x50]
   140008c40:	lea    rsp,[rbp+0x10]
   140008c44:	pop    r15
   140008c46:	pop    r14
   140008c48:	pop    r13
   140008c4a:	pop    r12
   140008c4c:	pop    rbp
   140008c4d:	ret    
   140008c4e:	int3   
   140008c4f:	int3   
   140008c50:	mov    QWORD PTR [rsp+0x8],rbx
   140008c55:	mov    QWORD PTR [rsp+0x10],rsi
   140008c5a:	push   rdi
   140008c5b:	sub    rsp,0x60
   140008c5f:	mov    esi,edx
   140008c61:	mov    rdx,rcx
   140008c64:	lea    rcx,[rsp+0x40]
   140008c69:	mov    ebx,r9d
   140008c6c:	mov    rdi,r8
   140008c6f:	call   0x140002370
   140008c74:	mov    eax,DWORD PTR [rsp+0xa0]
   140008c7b:	mov    r11d,DWORD PTR [rsp+0xa8]
   140008c83:	lea    rcx,[rsp+0x40]
   140008c88:	mov    DWORD PTR [rsp+0x38],r11d
   140008c8d:	mov    DWORD PTR [rsp+0x30],eax
   140008c91:	mov    eax,DWORD PTR [rsp+0x98]
   140008c98:	mov    DWORD PTR [rsp+0x28],eax
   140008c9c:	mov    rax,QWORD PTR [rsp+0x90]
   140008ca4:	mov    r9d,ebx
   140008ca7:	mov    r8,rdi
   140008caa:	mov    edx,esi
   140008cac:	mov    QWORD PTR [rsp+0x20],rax
   140008cb1:	call   0x1400089e4
   140008cb6:	cmp    BYTE PTR [rsp+0x58],0x0
   140008cbb:	je     0x140008cc9
   140008cbd:	mov    rcx,QWORD PTR [rsp+0x50]
   140008cc2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140008cc9:	mov    rbx,QWORD PTR [rsp+0x70]
   140008cce:	mov    rsi,QWORD PTR [rsp+0x78]
   140008cd3:	add    rsp,0x60
   140008cd7:	pop    rdi
   140008cd8:	ret    
   140008cd9:	int3   
   140008cda:	int3   
   140008cdb:	int3   
   140008cdc:	int3   
   140008cdd:	int3   
   140008cde:	int3   
   140008cdf:	int3   
   140008ce0:	int3   
   140008ce1:	int3   
   140008ce2:	int3   
   140008ce3:	int3   
   140008ce4:	int3   
   140008ce5:	int3   
   140008ce6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008cf0:	mov    r11,rcx
   140008cf3:	sub    rdx,rcx
   140008cf6:	jb     0x140008e9a
   140008cfc:	cmp    r8,0x8
   140008d00:	jb     0x140008d63
   140008d02:	test   cl,0x7
   140008d05:	je     0x140008d3d
   140008d07:	test   cl,0x1
   140008d0a:	je     0x140008d17
   140008d0c:	mov    al,BYTE PTR [rdx+rcx*1]
   140008d0f:	dec    r8
   140008d12:	mov    BYTE PTR [rcx],al
   140008d14:	inc    rcx
   140008d17:	test   cl,0x2
   140008d1a:	je     0x140008d2b
   140008d1c:	mov    ax,WORD PTR [rdx+rcx*1]
   140008d20:	sub    r8,0x2
   140008d24:	mov    WORD PTR [rcx],ax
   140008d27:	add    rcx,0x2
   140008d2b:	test   cl,0x4
   140008d2e:	je     0x140008d3d
   140008d30:	mov    eax,DWORD PTR [rdx+rcx*1]
   140008d33:	sub    r8,0x4
   140008d37:	mov    DWORD PTR [rcx],eax
   140008d39:	add    rcx,0x4
   140008d3d:	mov    r9,r8
   140008d40:	shr    r9,0x5
   140008d44:	jne    0x140008d97
   140008d46:	mov    r9,r8
   140008d49:	shr    r9,0x3
   140008d4d:	je     0x140008d63
   140008d4f:	mov    rax,QWORD PTR [rdx+rcx*1]
   140008d53:	mov    QWORD PTR [rcx],rax
   140008d56:	add    rcx,0x8
   140008d5a:	dec    r9
   140008d5d:	jne    0x140008d4f
   140008d5f:	and    r8,0x7
   140008d63:	test   r8,r8
   140008d66:	jne    0x140008d70
   140008d68:	mov    rax,r11
   140008d6b:	ret    
   140008d6c:	nop    DWORD PTR [rax+0x0]
   140008d70:	mov    al,BYTE PTR [rdx+rcx*1]
   140008d73:	mov    BYTE PTR [rcx],al
   140008d75:	inc    rcx
   140008d78:	dec    r8
   140008d7b:	jne    0x140008d70
   140008d7d:	mov    rax,r11
   140008d80:	ret    
   140008d81:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008d90:	data16 data16 xchg ax,ax
   140008d94:	data16 xchg ax,ax
   140008d97:	cmp    r9,0x2000
   140008d9e:	jae    0x140008de2
   140008da0:	mov    rax,QWORD PTR [rdx+rcx*1]
   140008da4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140008da9:	add    rcx,0x20
   140008dad:	mov    QWORD PTR [rcx-0x20],rax
   140008db1:	mov    QWORD PTR [rcx-0x18],r10
   140008db5:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   140008dba:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140008dbf:	dec    r9
   140008dc2:	mov    QWORD PTR [rcx-0x10],rax
   140008dc6:	mov    QWORD PTR [rcx-0x8],r10
   140008dca:	jne    0x140008da0
   140008dcc:	and    r8,0x1f
   140008dd0:	jmp    0x140008d46
   140008dd5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008de0:	xchg   ax,ax
   140008de2:	cmp    rdx,0x1000
   140008de9:	jb     0x140008da0
   140008deb:	mov    eax,0x20
   140008df0:	prefetchnta BYTE PTR [rdx+rcx*1]
   140008df4:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140008df9:	add    rcx,0x80
   140008e00:	dec    eax
   140008e02:	jne    0x140008df0
   140008e04:	sub    rcx,0x1000
   140008e0b:	mov    eax,0x40
   140008e10:	mov    r9,QWORD PTR [rdx+rcx*1]
   140008e14:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140008e19:	movnti QWORD PTR [rcx],r9
   140008e1d:	movnti QWORD PTR [rcx+0x8],r10
   140008e22:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   140008e27:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   140008e2c:	movnti QWORD PTR [rcx+0x10],r9
   140008e31:	movnti QWORD PTR [rcx+0x18],r10
   140008e36:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   140008e3b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   140008e40:	add    rcx,0x40
   140008e44:	movnti QWORD PTR [rcx-0x20],r9
   140008e49:	movnti QWORD PTR [rcx-0x18],r10
   140008e4e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   140008e53:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140008e58:	dec    eax
   140008e5a:	movnti QWORD PTR [rcx-0x10],r9
   140008e5f:	movnti QWORD PTR [rcx-0x8],r10
   140008e64:	jne    0x140008e10
   140008e66:	sub    r8,0x1000
   140008e6d:	cmp    r8,0x1000
   140008e74:	jae    0x140008deb
   140008e7a:	lock or BYTE PTR [rsp],0x0
   140008e7f:	jmp    0x140008d3d
   140008e84:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008e90:	data16 data16 xchg ax,ax
   140008e94:	data16 data16 xchg ax,ax
   140008e98:	xchg   ax,ax
   140008e9a:	add    rcx,r8
   140008e9d:	cmp    r8,0x8
   140008ea1:	jb     0x140008f04
   140008ea3:	test   cl,0x7
   140008ea6:	je     0x140008ede
   140008ea8:	test   cl,0x1
   140008eab:	je     0x140008eb8
   140008ead:	dec    rcx
   140008eb0:	mov    al,BYTE PTR [rdx+rcx*1]
   140008eb3:	dec    r8
   140008eb6:	mov    BYTE PTR [rcx],al
   140008eb8:	test   cl,0x2
   140008ebb:	je     0x140008ecc
   140008ebd:	sub    rcx,0x2
   140008ec1:	mov    ax,WORD PTR [rdx+rcx*1]
   140008ec5:	sub    r8,0x2
   140008ec9:	mov    WORD PTR [rcx],ax
   140008ecc:	test   cl,0x4
   140008ecf:	je     0x140008ede
   140008ed1:	sub    rcx,0x4
   140008ed5:	mov    eax,DWORD PTR [rdx+rcx*1]
   140008ed8:	sub    r8,0x4
   140008edc:	mov    DWORD PTR [rcx],eax
   140008ede:	mov    r9,r8
   140008ee1:	shr    r9,0x5
   140008ee5:	jne    0x140008f37
   140008ee7:	mov    r9,r8
   140008eea:	shr    r9,0x3
   140008eee:	je     0x140008f04
   140008ef0:	sub    rcx,0x8
   140008ef4:	mov    rax,QWORD PTR [rdx+rcx*1]
   140008ef8:	dec    r9
   140008efb:	mov    QWORD PTR [rcx],rax
   140008efe:	jne    0x140008ef0
   140008f00:	and    r8,0x7
   140008f04:	test   r8,r8
   140008f07:	jne    0x140008f10
   140008f09:	mov    rax,r11
   140008f0c:	ret    
   140008f0d:	nop    DWORD PTR [rax]
   140008f10:	dec    rcx
   140008f13:	mov    al,BYTE PTR [rdx+rcx*1]
   140008f16:	dec    r8
   140008f19:	mov    BYTE PTR [rcx],al
   140008f1b:	jne    0x140008f10
   140008f1d:	mov    rax,r11
   140008f20:	ret    
   140008f21:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008f30:	data16 data16 xchg ax,ax
   140008f34:	data16 xchg ax,ax
   140008f37:	cmp    r9,0x2000
   140008f3e:	jae    0x140008f82
   140008f40:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140008f45:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140008f4a:	sub    rcx,0x20
   140008f4e:	mov    QWORD PTR [rcx+0x18],rax
   140008f52:	mov    QWORD PTR [rcx+0x10],r10
   140008f56:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   140008f5b:	mov    r10,QWORD PTR [rdx+rcx*1]
   140008f5f:	dec    r9
   140008f62:	mov    QWORD PTR [rcx+0x8],rax
   140008f66:	mov    QWORD PTR [rcx],r10
   140008f69:	jne    0x140008f40
   140008f6b:	and    r8,0x1f
   140008f6f:	jmp    0x140008ee7
   140008f74:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140008f80:	xchg   ax,ax
   140008f82:	cmp    rdx,0xfffffffffffff000
   140008f89:	ja     0x140008f40
   140008f8b:	mov    eax,0x20
   140008f90:	sub    rcx,0x80
   140008f97:	prefetchnta BYTE PTR [rdx+rcx*1]
   140008f9b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140008fa0:	dec    eax
   140008fa2:	jne    0x140008f90
   140008fa4:	add    rcx,0x1000
   140008fab:	mov    eax,0x40
   140008fb0:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140008fb5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140008fba:	movnti QWORD PTR [rcx-0x8],r9
   140008fbf:	movnti QWORD PTR [rcx-0x10],r10
   140008fc4:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140008fc9:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   140008fce:	movnti QWORD PTR [rcx-0x18],r9
   140008fd3:	movnti QWORD PTR [rcx-0x20],r10
   140008fd8:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   140008fdd:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   140008fe2:	sub    rcx,0x40
   140008fe6:	movnti QWORD PTR [rcx+0x18],r9
   140008feb:	movnti QWORD PTR [rcx+0x10],r10
   140008ff0:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140008ff5:	mov    r10,QWORD PTR [rdx+rcx*1]
   140008ff9:	dec    eax
   140008ffb:	movnti QWORD PTR [rcx+0x8],r9
   140009000:	movnti QWORD PTR [rcx],r10
   140009004:	jne    0x140008fb0
   140009006:	sub    r8,0x1000
   14000900d:	cmp    r8,0x1000
   140009014:	jae    0x140008f8b
   14000901a:	lock or BYTE PTR [rsp],0x0
   14000901f:	jmp    0x140008ede
   140009024:	test   rcx,rcx
   140009027:	je     0x14000920d
   14000902d:	push   rbx
   14000902e:	sub    rsp,0x20
   140009032:	mov    rbx,rcx
   140009035:	mov    rcx,QWORD PTR [rcx+0x8]
   140009039:	call   0x140004244
   14000903e:	mov    rcx,QWORD PTR [rbx+0x10]
   140009042:	call   0x140004244
   140009047:	mov    rcx,QWORD PTR [rbx+0x18]
   14000904b:	call   0x140004244
   140009050:	mov    rcx,QWORD PTR [rbx+0x20]
   140009054:	call   0x140004244
   140009059:	mov    rcx,QWORD PTR [rbx+0x28]
   14000905d:	call   0x140004244
   140009062:	mov    rcx,QWORD PTR [rbx+0x30]
   140009066:	call   0x140004244
   14000906b:	mov    rcx,QWORD PTR [rbx]
   14000906e:	call   0x140004244
   140009073:	mov    rcx,QWORD PTR [rbx+0x40]
   140009077:	call   0x140004244
   14000907c:	mov    rcx,QWORD PTR [rbx+0x48]
   140009080:	call   0x140004244
   140009085:	mov    rcx,QWORD PTR [rbx+0x50]
   140009089:	call   0x140004244
   14000908e:	mov    rcx,QWORD PTR [rbx+0x58]
   140009092:	call   0x140004244
   140009097:	mov    rcx,QWORD PTR [rbx+0x60]
   14000909b:	call   0x140004244
   1400090a0:	mov    rcx,QWORD PTR [rbx+0x68]
   1400090a4:	call   0x140004244
   1400090a9:	mov    rcx,QWORD PTR [rbx+0x38]
   1400090ad:	call   0x140004244
   1400090b2:	mov    rcx,QWORD PTR [rbx+0x70]
   1400090b6:	call   0x140004244
   1400090bb:	mov    rcx,QWORD PTR [rbx+0x78]
   1400090bf:	call   0x140004244
   1400090c4:	mov    rcx,QWORD PTR [rbx+0x80]
   1400090cb:	call   0x140004244
   1400090d0:	mov    rcx,QWORD PTR [rbx+0x88]
   1400090d7:	call   0x140004244
   1400090dc:	mov    rcx,QWORD PTR [rbx+0x90]
   1400090e3:	call   0x140004244
   1400090e8:	mov    rcx,QWORD PTR [rbx+0x98]
   1400090ef:	call   0x140004244
   1400090f4:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400090fb:	call   0x140004244
   140009100:	mov    rcx,QWORD PTR [rbx+0xa8]
   140009107:	call   0x140004244
   14000910c:	mov    rcx,QWORD PTR [rbx+0xb0]
   140009113:	call   0x140004244
   140009118:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000911f:	call   0x140004244
   140009124:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000912b:	call   0x140004244
   140009130:	mov    rcx,QWORD PTR [rbx+0xc8]
   140009137:	call   0x140004244
   14000913c:	mov    rcx,QWORD PTR [rbx+0xd0]
   140009143:	call   0x140004244
   140009148:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000914f:	call   0x140004244
   140009154:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000915b:	call   0x140004244
   140009160:	mov    rcx,QWORD PTR [rbx+0xe8]
   140009167:	call   0x140004244
   14000916c:	mov    rcx,QWORD PTR [rbx+0xf0]
   140009173:	call   0x140004244
   140009178:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000917f:	call   0x140004244
   140009184:	mov    rcx,QWORD PTR [rbx+0x100]
   14000918b:	call   0x140004244
   140009190:	mov    rcx,QWORD PTR [rbx+0x108]
   140009197:	call   0x140004244
   14000919c:	mov    rcx,QWORD PTR [rbx+0x110]
   1400091a3:	call   0x140004244
   1400091a8:	mov    rcx,QWORD PTR [rbx+0x118]
   1400091af:	call   0x140004244
   1400091b4:	mov    rcx,QWORD PTR [rbx+0x120]
   1400091bb:	call   0x140004244
   1400091c0:	mov    rcx,QWORD PTR [rbx+0x128]
   1400091c7:	call   0x140004244
   1400091cc:	mov    rcx,QWORD PTR [rbx+0x130]
   1400091d3:	call   0x140004244
   1400091d8:	mov    rcx,QWORD PTR [rbx+0x138]
   1400091df:	call   0x140004244
   1400091e4:	mov    rcx,QWORD PTR [rbx+0x140]
   1400091eb:	call   0x140004244
   1400091f0:	mov    rcx,QWORD PTR [rbx+0x148]
   1400091f7:	call   0x140004244
   1400091fc:	mov    rcx,QWORD PTR [rbx+0x150]
   140009203:	call   0x140004244
   140009208:	add    rsp,0x20
   14000920c:	pop    rbx
   14000920d:	ret    
   14000920e:	int3   
   14000920f:	int3   
   140009210:	test   rcx,rcx
   140009213:	je     0x140009257
   140009215:	push   rbx
   140009216:	sub    rsp,0x20
   14000921a:	mov    rbx,rcx
   14000921d:	mov    rcx,QWORD PTR [rcx]
   140009220:	cmp    rcx,QWORD PTR [rip+0xa029]        # 0x140013250
   140009227:	je     0x14000922e
   140009229:	call   0x140004244
   14000922e:	mov    rcx,QWORD PTR [rbx+0x8]
   140009232:	cmp    rcx,QWORD PTR [rip+0xa01f]        # 0x140013258
   140009239:	je     0x140009240
   14000923b:	call   0x140004244
   140009240:	mov    rcx,QWORD PTR [rbx+0x10]
   140009244:	cmp    rcx,QWORD PTR [rip+0xa015]        # 0x140013260
   14000924b:	je     0x140009252
   14000924d:	call   0x140004244
   140009252:	add    rsp,0x20
   140009256:	pop    rbx
   140009257:	ret    
   140009258:	test   rcx,rcx
   14000925b:	je     0x1400092ec
   140009261:	push   rbx
   140009262:	sub    rsp,0x20
   140009266:	mov    rbx,rcx
   140009269:	mov    rcx,QWORD PTR [rcx+0x18]
   14000926d:	cmp    rcx,QWORD PTR [rip+0x9ff4]        # 0x140013268
   140009274:	je     0x14000927b
   140009276:	call   0x140004244
   14000927b:	mov    rcx,QWORD PTR [rbx+0x20]
   14000927f:	cmp    rcx,QWORD PTR [rip+0x9fea]        # 0x140013270
   140009286:	je     0x14000928d
   140009288:	call   0x140004244
   14000928d:	mov    rcx,QWORD PTR [rbx+0x28]
   140009291:	cmp    rcx,QWORD PTR [rip+0x9fe0]        # 0x140013278
   140009298:	je     0x14000929f
   14000929a:	call   0x140004244
   14000929f:	mov    rcx,QWORD PTR [rbx+0x30]
   1400092a3:	cmp    rcx,QWORD PTR [rip+0x9fd6]        # 0x140013280
   1400092aa:	je     0x1400092b1
   1400092ac:	call   0x140004244
   1400092b1:	mov    rcx,QWORD PTR [rbx+0x38]
   1400092b5:	cmp    rcx,QWORD PTR [rip+0x9fcc]        # 0x140013288
   1400092bc:	je     0x1400092c3
   1400092be:	call   0x140004244
   1400092c3:	mov    rcx,QWORD PTR [rbx+0x40]
   1400092c7:	cmp    rcx,QWORD PTR [rip+0x9fc2]        # 0x140013290
   1400092ce:	je     0x1400092d5
   1400092d0:	call   0x140004244
   1400092d5:	mov    rcx,QWORD PTR [rbx+0x48]
   1400092d9:	cmp    rcx,QWORD PTR [rip+0x9fb8]        # 0x140013298
   1400092e0:	je     0x1400092e7
   1400092e2:	call   0x140004244
   1400092e7:	add    rsp,0x20
   1400092eb:	pop    rbx
   1400092ec:	ret    
   1400092ed:	int3   
   1400092ee:	int3   
   1400092ef:	int3   
   1400092f0:	rex push rbx
   1400092f2:	sub    rsp,0x30
   1400092f6:	mov    r9,rcx
   1400092f9:	test   rcx,rcx
   1400092fc:	je     0x14000930b
   1400092fe:	test   rdx,rdx
   140009301:	je     0x14000930b
   140009303:	test   r8,r8
   140009306:	jne    0x140009334
   140009308:	mov    BYTE PTR [rcx],r8b
   14000930b:	call   0x140003fbc
   140009310:	mov    ebx,0x16
   140009315:	and    QWORD PTR [rsp+0x20],0x0
   14000931b:	xor    r9d,r9d
   14000931e:	xor    r8d,r8d
   140009321:	xor    edx,edx
   140009323:	xor    ecx,ecx
   140009325:	mov    DWORD PTR [rax],ebx
   140009327:	call   0x140003eec
   14000932c:	mov    eax,ebx
   14000932e:	add    rsp,0x30
   140009332:	pop    rbx
   140009333:	ret    
   140009334:	cmp    BYTE PTR [rcx],0x0
   140009337:	je     0x140009342
   140009339:	inc    rcx
   14000933c:	sub    rdx,0x1
   140009340:	jne    0x140009334
   140009342:	test   rdx,rdx
   140009345:	jne    0x14000934c
   140009347:	mov    BYTE PTR [r9],dl
   14000934a:	jmp    0x14000930b
   14000934c:	mov    al,BYTE PTR [r8]
   14000934f:	inc    r8
   140009352:	mov    BYTE PTR [rcx],al
   140009354:	inc    rcx
   140009357:	test   al,al
   140009359:	je     0x140009361
   14000935b:	sub    rdx,0x1
   14000935f:	jne    0x14000934c
   140009361:	test   rdx,rdx
   140009364:	jne    0x140009375
   140009366:	mov    BYTE PTR [r9],dl
   140009369:	call   0x140003fbc
   14000936e:	mov    ebx,0x22
   140009373:	jmp    0x140009315
   140009375:	xor    eax,eax
   140009377:	jmp    0x14000932e
   140009379:	int3   
   14000937a:	int3   
   14000937b:	int3   
   14000937c:	rex push rbx
   14000937e:	sub    rsp,0x30
   140009382:	mov    r11,r8
   140009385:	test   r9,r9
   140009388:	jne    0x140009398
   14000938a:	test   rcx,rcx
   14000938d:	jne    0x14000939d
   14000938f:	test   rdx,rdx
   140009392:	jne    0x1400093b4
   140009394:	xor    eax,eax
   140009396:	jmp    0x1400093d7
   140009398:	test   rcx,rcx
   14000939b:	je     0x1400093b4
   14000939d:	test   rdx,rdx
   1400093a0:	je     0x1400093b4
   1400093a2:	test   r9,r9
   1400093a5:	jne    0x1400093ac
   1400093a7:	mov    BYTE PTR [rcx],r9b
   1400093aa:	jmp    0x140009394
   1400093ac:	test   r8,r8
   1400093af:	jne    0x1400093dd
   1400093b1:	mov    BYTE PTR [rcx],r8b
   1400093b4:	call   0x140003fbc
   1400093b9:	mov    ebx,0x16
   1400093be:	and    QWORD PTR [rsp+0x20],0x0
   1400093c4:	xor    r9d,r9d
   1400093c7:	xor    r8d,r8d
   1400093ca:	xor    edx,edx
   1400093cc:	xor    ecx,ecx
   1400093ce:	mov    DWORD PTR [rax],ebx
   1400093d0:	call   0x140003eec
   1400093d5:	mov    eax,ebx
   1400093d7:	add    rsp,0x30
   1400093db:	pop    rbx
   1400093dc:	ret    
   1400093dd:	mov    r10,rcx
   1400093e0:	mov    r8,rdx
   1400093e3:	cmp    r9,0xffffffffffffffff
   1400093e7:	jne    0x140009401
   1400093e9:	mov    al,BYTE PTR [r11]
   1400093ec:	inc    r11
   1400093ef:	mov    BYTE PTR [r10],al
   1400093f2:	inc    r10
   1400093f5:	test   al,al
   1400093f7:	je     0x140009425
   1400093f9:	sub    r8,0x1
   1400093fd:	jne    0x1400093e9
   1400093ff:	jmp    0x140009425
   140009401:	mov    al,BYTE PTR [r11]
   140009404:	inc    r11
   140009407:	mov    BYTE PTR [r10],al
   14000940a:	inc    r10
   14000940d:	test   al,al
   14000940f:	je     0x14000941d
   140009411:	sub    r8,0x1
   140009415:	je     0x14000941d
   140009417:	sub    r9,0x1
   14000941b:	jne    0x140009401
   14000941d:	test   r9,r9
   140009420:	jne    0x140009425
   140009422:	mov    BYTE PTR [r10],r9b
   140009425:	test   r8,r8
   140009428:	jne    0x140009394
   14000942e:	cmp    r9,0xffffffffffffffff
   140009432:	jne    0x14000943f
   140009434:	mov    BYTE PTR [rcx+rdx*1-0x1],r8b
   140009439:	lea    eax,[r8+0x50]
   14000943d:	jmp    0x1400093d7
   14000943f:	mov    BYTE PTR [rcx],0x0
   140009442:	call   0x140003fbc
   140009447:	mov    ebx,0x22
   14000944c:	jmp    0x1400093be
   140009451:	int3   
   140009452:	int3   
   140009453:	int3   
   140009454:	rex push rbx
   140009456:	sub    rsp,0x30
   14000945a:	test   rcx,rcx
   14000945d:	je     0x14000946c
   14000945f:	test   rdx,rdx
   140009462:	je     0x14000946c
   140009464:	test   r8,r8
   140009467:	jne    0x140009495
   140009469:	mov    BYTE PTR [rcx],r8b
   14000946c:	call   0x140003fbc
   140009471:	mov    ebx,0x16
   140009476:	and    QWORD PTR [rsp+0x20],0x0
   14000947c:	xor    r9d,r9d
   14000947f:	xor    r8d,r8d
   140009482:	xor    edx,edx
   140009484:	xor    ecx,ecx
   140009486:	mov    DWORD PTR [rax],ebx
   140009488:	call   0x140003eec
   14000948d:	mov    eax,ebx
   14000948f:	add    rsp,0x30
   140009493:	pop    rbx
   140009494:	ret    
   140009495:	mov    r9,rcx
   140009498:	mov    al,BYTE PTR [r8]
   14000949b:	inc    r8
   14000949e:	mov    BYTE PTR [r9],al
   1400094a1:	inc    r9
   1400094a4:	test   al,al
   1400094a6:	je     0x1400094ae
   1400094a8:	sub    rdx,0x1
   1400094ac:	jne    0x140009498
   1400094ae:	test   rdx,rdx
   1400094b1:	jne    0x1400094c1
   1400094b3:	mov    BYTE PTR [rcx],dl
   1400094b5:	call   0x140003fbc
   1400094ba:	mov    ebx,0x22
   1400094bf:	jmp    0x140009476
   1400094c1:	xor    eax,eax
   1400094c3:	jmp    0x14000948f
   1400094c5:	int3   
   1400094c6:	int3   
   1400094c7:	int3   
   1400094c8:	int3   
   1400094c9:	int3   
   1400094ca:	int3   
   1400094cb:	int3   
   1400094cc:	int3   
   1400094cd:	int3   
   1400094ce:	int3   
   1400094cf:	int3   
   1400094d0:	int3   
   1400094d1:	int3   
   1400094d2:	int3   
   1400094d3:	int3   
   1400094d4:	int3   
   1400094d5:	int3   
   1400094d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400094e0:	sub    rdx,rcx
   1400094e3:	mov    r9,rdx
   1400094e6:	test   cl,0x7
   1400094e9:	je     0x140009506
   1400094eb:	mov    al,BYTE PTR [rcx]
   1400094ed:	mov    dl,BYTE PTR [rcx+r9*1]
   1400094f1:	cmp    al,dl
   1400094f3:	jne    0x14000954b
   1400094f5:	inc    rcx
   1400094f8:	test   al,al
   1400094fa:	je     0x140009553
   1400094fc:	test   rcx,0x7
   140009503:	jne    0x1400094eb
   140009505:	nop
   140009506:	movabs r11,0x8101010101010100
   140009510:	lea    rdx,[rcx+r9*1]
   140009514:	and    dx,0xfff
   140009519:	cmp    dx,0xff8
   14000951e:	ja     0x1400094eb
   140009520:	mov    rax,QWORD PTR [rcx]
   140009523:	mov    rdx,QWORD PTR [rcx+r9*1]
   140009527:	cmp    rax,rdx
   14000952a:	jne    0x1400094eb
   14000952c:	movabs r10,0x7efefefefefefeff
   140009536:	add    r10,rdx
   140009539:	xor    rax,0xffffffffffffffff
   14000953d:	add    rcx,0x8
   140009541:	xor    rax,r10
   140009544:	test   r11,rax
   140009547:	je     0x140009510
   140009549:	jmp    0x14000955a
   14000954b:	sbb    rax,rax
   14000954e:	sbb    rax,0xffffffffffffffff
   140009552:	ret    
   140009553:	xor    eax,eax
   140009555:	ret    
   140009556:	data16 data16 xchg ax,ax
   14000955a:	test   dl,dl
   14000955c:	je     0x140009585
   14000955e:	test   dh,dh
   140009560:	je     0x140009585
   140009562:	shr    rdx,0x10
   140009566:	test   dl,dl
   140009568:	je     0x140009585
   14000956a:	test   dh,dh
   14000956c:	je     0x140009585
   14000956e:	shr    rdx,0x10
   140009572:	test   dl,dl
   140009574:	je     0x140009585
   140009576:	test   dh,dh
   140009578:	je     0x140009585
   14000957a:	shr    edx,0x10
   14000957d:	test   dl,dl
   14000957f:	je     0x140009585
   140009581:	test   dh,dh
   140009583:	jne    0x140009510
   140009585:	xor    eax,eax
   140009587:	ret    
   140009588:	sbb    rax,rax
   14000958b:	sbb    rax,0xffffffffffffffff
   14000958f:	ret    
   140009590:	int3   
   140009591:	int3   
   140009592:	int3   
   140009593:	int3   
   140009594:	int3   
   140009595:	int3   
   140009596:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400095a0:	sub    rdx,rcx
   1400095a3:	cmp    r8,0x8
   1400095a7:	jb     0x1400095cb
   1400095a9:	test   cl,0x7
   1400095ac:	je     0x1400095c2
   1400095ae:	xchg   ax,ax
   1400095b0:	mov    al,BYTE PTR [rcx]
   1400095b2:	cmp    al,BYTE PTR [rdx+rcx*1]
   1400095b5:	jne    0x1400095e3
   1400095b7:	inc    rcx
   1400095ba:	dec    r8
   1400095bd:	test   cl,0x7
   1400095c0:	jne    0x1400095b0
   1400095c2:	mov    r9,r8
   1400095c5:	shr    r9,0x3
   1400095c9:	jne    0x1400095ea
   1400095cb:	test   r8,r8
   1400095ce:	je     0x1400095df
   1400095d0:	mov    al,BYTE PTR [rcx]
   1400095d2:	cmp    al,BYTE PTR [rdx+rcx*1]
   1400095d5:	jne    0x1400095e3
   1400095d7:	inc    rcx
   1400095da:	dec    r8
   1400095dd:	jne    0x1400095d0
   1400095df:	xor    rax,rax
   1400095e2:	ret    
   1400095e3:	sbb    eax,eax
   1400095e5:	sbb    eax,0xffffffff
   1400095e8:	ret    
   1400095e9:	nop
   1400095ea:	shr    r9,0x2
   1400095ee:	je     0x140009627
   1400095f0:	mov    rax,QWORD PTR [rcx]
   1400095f3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   1400095f7:	jne    0x140009654
   1400095f9:	mov    rax,QWORD PTR [rcx+0x8]
   1400095fd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140009602:	jne    0x140009650
   140009604:	mov    rax,QWORD PTR [rcx+0x10]
   140009608:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000960d:	jne    0x14000964c
   14000960f:	mov    rax,QWORD PTR [rcx+0x18]
   140009613:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140009618:	jne    0x140009648
   14000961a:	add    rcx,0x20
   14000961e:	dec    r9
   140009621:	jne    0x1400095f0
   140009623:	and    r8,0x1f
   140009627:	mov    r9,r8
   14000962a:	shr    r9,0x3
   14000962e:	je     0x1400095cb
   140009630:	mov    rax,QWORD PTR [rcx]
   140009633:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140009637:	jne    0x140009654
   140009639:	add    rcx,0x8
   14000963d:	dec    r9
   140009640:	jne    0x140009630
   140009642:	and    r8,0x7
   140009646:	jmp    0x1400095cb
   140009648:	add    rcx,0x8
   14000964c:	add    rcx,0x8
   140009650:	add    rcx,0x8
   140009654:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140009658:	bswap  rax
   14000965b:	bswap  rcx
   14000965e:	cmp    rax,rcx
   140009661:	sbb    eax,eax
   140009663:	sbb    eax,0xffffffff
   140009666:	ret    
   140009667:	int3   
   140009668:	mov    QWORD PTR [rsp+0x8],rbx
   14000966d:	push   rdi
   14000966e:	sub    rsp,0x20
   140009672:	movsxd rbx,ecx
   140009675:	mov    edi,r8d
   140009678:	mov    QWORD PTR [rsp+0x38],rdx
   14000967d:	mov    ecx,ebx
   14000967f:	call   0x14000a47c
   140009684:	cmp    rax,0xffffffffffffffff
   140009688:	jne    0x14000969b
   14000968a:	call   0x140003fbc
   14000968f:	mov    DWORD PTR [rax],0x9
   140009695:	or     rax,0xffffffffffffffff
   140009699:	jmp    0x1400096f2
   14000969b:	mov    edx,DWORD PTR [rsp+0x38]
   14000969f:	lea    r8,[rsp+0x3c]
   1400096a4:	mov    r9d,edi
   1400096a7:	mov    rcx,rax
   1400096aa:	call   QWORD PTR [rip+0x5b60]        # 0x14000f210
   1400096b0:	mov    DWORD PTR [rsp+0x38],eax
   1400096b4:	cmp    eax,0xffffffff
   1400096b7:	jne    0x1400096cc
   1400096b9:	call   QWORD PTR [rip+0x5a19]        # 0x14000f0d8
   1400096bf:	test   eax,eax
   1400096c1:	je     0x1400096cc
   1400096c3:	mov    ecx,eax
   1400096c5:	call   0x140003ffc
   1400096ca:	jmp    0x140009695
   1400096cc:	mov    rcx,rbx
   1400096cf:	mov    rax,rbx
   1400096d2:	lea    rdx,[rip+0xaca7]        # 0x140014380
   1400096d9:	sar    rax,0x5
   1400096dd:	and    ecx,0x1f
   1400096e0:	mov    rax,QWORD PTR [rdx+rax*8]
   1400096e4:	imul   rcx,rcx,0x58
   1400096e8:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   1400096ed:	mov    rax,QWORD PTR [rsp+0x38]
   1400096f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400096f7:	add    rsp,0x20
   1400096fb:	pop    rdi
   1400096fc:	ret    
   1400096fd:	int3   
   1400096fe:	int3   
   1400096ff:	int3   
   140009700:	mov    QWORD PTR [rsp+0x10],rbx
   140009705:	mov    QWORD PTR [rsp+0x18],rsi
   14000970a:	mov    DWORD PTR [rsp+0x8],ecx
   14000970e:	push   rdi
   14000970f:	push   r12
   140009711:	push   r13
   140009713:	push   r14
   140009715:	push   r15
   140009717:	sub    rsp,0x30
   14000971b:	mov    r12d,r8d
   14000971e:	mov    r13,rdx
   140009721:	movsxd rbx,ecx
   140009724:	cmp    ebx,0xfffffffe
   140009727:	jne    0x140009746
   140009729:	call   0x140003fdc
   14000972e:	xor    edi,edi
   140009730:	mov    DWORD PTR [rax],edi
   140009732:	call   0x140003fbc
   140009737:	mov    DWORD PTR [rax],0x9
   14000973d:	or     rax,0xffffffffffffffff
   140009741:	jmp    0x14000981f
   140009746:	xor    edi,edi
   140009748:	cmp    ebx,edi
   14000974a:	jl     0x1400097f5
   140009750:	cmp    ebx,DWORD PTR [rip+0xac12]        # 0x140014368
   140009756:	jae    0x1400097f5
   14000975c:	mov    rsi,rbx
   14000975f:	mov    r14,rbx
   140009762:	sar    r14,0x5
   140009766:	lea    r15,[rip+0xac13]        # 0x140014380
   14000976d:	and    esi,0x1f
   140009770:	imul   rsi,rsi,0x58
   140009774:	mov    rax,QWORD PTR [r15+r14*8]
   140009778:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14000977d:	and    ecx,0x1
   140009780:	jne    0x1400097ae
   140009782:	call   0x140003fdc
   140009787:	mov    DWORD PTR [rax],edi
   140009789:	call   0x140003fbc
   14000978e:	mov    DWORD PTR [rax],0x9
   140009794:	mov    QWORD PTR [rsp+0x20],rdi
   140009799:	xor    r9d,r9d
   14000979c:	xor    r8d,r8d
   14000979f:	xor    edx,edx
   1400097a1:	xor    ecx,ecx
   1400097a3:	call   0x140003eec
   1400097a8:	or     rax,0xffffffffffffffff
   1400097ac:	jmp    0x14000981f
   1400097ae:	mov    ecx,ebx
   1400097b0:	call   0x14000a500
   1400097b5:	nop
   1400097b6:	mov    rax,QWORD PTR [r15+r14*8]
   1400097ba:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   1400097bf:	je     0x1400097d3
   1400097c1:	mov    r8d,r12d
   1400097c4:	mov    rdx,r13
   1400097c7:	mov    ecx,ebx
   1400097c9:	call   0x140009668
   1400097ce:	mov    rdi,rax
   1400097d1:	jmp    0x1400097e9
   1400097d3:	call   0x140003fbc
   1400097d8:	mov    DWORD PTR [rax],0x9
   1400097de:	call   0x140003fdc
   1400097e3:	mov    DWORD PTR [rax],edi
   1400097e5:	or     rdi,0xffffffffffffffff
   1400097e9:	mov    ecx,ebx
   1400097eb:	call   0x14000a5a8
   1400097f0:	mov    rax,rdi
   1400097f3:	jmp    0x14000981f
   1400097f5:	call   0x140003fdc
   1400097fa:	mov    DWORD PTR [rax],edi
   1400097fc:	call   0x140003fbc
   140009801:	mov    DWORD PTR [rax],0x9
   140009807:	mov    QWORD PTR [rsp+0x20],rdi
   14000980c:	xor    r9d,r9d
   14000980f:	xor    r8d,r8d
   140009812:	xor    edx,edx
   140009814:	xor    ecx,ecx
   140009816:	call   0x140003eec
   14000981b:	or     rax,0xffffffffffffffff
   14000981f:	mov    rbx,QWORD PTR [rsp+0x68]
   140009824:	mov    rsi,QWORD PTR [rsp+0x70]
   140009829:	add    rsp,0x30
   14000982d:	pop    r15
   14000982f:	pop    r14
   140009831:	pop    r13
   140009833:	pop    r12
   140009835:	pop    rdi
   140009836:	ret    
   140009837:	int3   
   140009838:	rex push rbx
   14000983a:	sub    rsp,0x20
   14000983e:	inc    DWORD PTR [rip+0x9d00]        # 0x140013544
   140009844:	mov    rbx,rcx
   140009847:	mov    ecx,0x1000
   14000984c:	call   0x140004044
   140009851:	mov    QWORD PTR [rbx+0x10],rax
   140009855:	test   rax,rax
   140009858:	je     0x140009867
   14000985a:	or     DWORD PTR [rbx+0x18],0x8
   14000985e:	mov    DWORD PTR [rbx+0x24],0x1000
   140009865:	jmp    0x14000987a
   140009867:	or     DWORD PTR [rbx+0x18],0x4
   14000986b:	lea    rax,[rbx+0x20]
   14000986f:	mov    DWORD PTR [rbx+0x24],0x2
   140009876:	mov    QWORD PTR [rbx+0x10],rax
   14000987a:	mov    rax,QWORD PTR [rbx+0x10]
   14000987e:	and    DWORD PTR [rbx+0x8],0x0
   140009882:	mov    QWORD PTR [rbx],rax
   140009885:	add    rsp,0x20
   140009889:	pop    rbx
   14000988a:	ret    
   14000988b:	int3   
   14000988c:	mov    QWORD PTR [rsp+0x8],rbx
   140009891:	mov    QWORD PTR [rsp+0x10],rbp
   140009896:	push   rsi
   140009897:	push   rdi
   140009898:	push   r12
   14000989a:	push   r13
   14000989c:	push   r14
   14000989e:	sub    rsp,0x40
   1400098a2:	mov    ebp,r8d
   1400098a5:	mov    r13,rdx
   1400098a8:	mov    r14,rcx
   1400098ab:	call   0x14000574c
   1400098b0:	xor    ebx,ebx
   1400098b2:	mov    rdi,rax
   1400098b5:	cmp    QWORD PTR [rip+0xa9b4],rbx        # 0x140014270
   1400098bc:	jne    0x140009992
   1400098c2:	lea    rcx,[rip+0x6cff]        # 0x1400105c8
   1400098c9:	call   QWORD PTR [rip+0x5889]        # 0x14000f158
   1400098cf:	mov    rsi,rax
   1400098d2:	test   rax,rax
   1400098d5:	je     0x140009a67
   1400098db:	lea    rdx,[rip+0x6cd6]        # 0x1400105b8
   1400098e2:	mov    rcx,rax
   1400098e5:	call   QWORD PTR [rip+0x5765]        # 0x14000f050
   1400098eb:	test   rax,rax
   1400098ee:	je     0x140009a67
   1400098f4:	mov    rcx,rax
   1400098f7:	call   0x140005744
   1400098fc:	lea    rdx,[rip+0x6ca5]        # 0x1400105a8
   140009903:	mov    rcx,rsi
   140009906:	mov    QWORD PTR [rip+0xa963],rax        # 0x140014270
   14000990d:	call   QWORD PTR [rip+0x573d]        # 0x14000f050
   140009913:	mov    rcx,rax
   140009916:	call   0x140005744
   14000991b:	lea    rdx,[rip+0x6c6e]        # 0x140010590
   140009922:	mov    rcx,rsi
   140009925:	mov    QWORD PTR [rip+0xa94c],rax        # 0x140014278
   14000992c:	call   QWORD PTR [rip+0x571e]        # 0x14000f050
   140009932:	mov    rcx,rax
   140009935:	call   0x140005744
   14000993a:	lea    rdx,[rip+0x6c2f]        # 0x140010570
   140009941:	mov    rcx,rsi
   140009944:	mov    QWORD PTR [rip+0xa935],rax        # 0x140014280
   14000994b:	call   QWORD PTR [rip+0x56ff]        # 0x14000f050
   140009951:	mov    rcx,rax
   140009954:	call   0x140005744
   140009959:	mov    r11,rax
   14000995c:	mov    QWORD PTR [rip+0xa92d],rax        # 0x140014290
   140009963:	test   rax,rax
   140009966:	je     0x140009989
   140009968:	lea    rdx,[rip+0x6be9]        # 0x140010558
   14000996f:	mov    rcx,rsi
   140009972:	call   QWORD PTR [rip+0x56d8]        # 0x14000f050
   140009978:	mov    rcx,rax
   14000997b:	call   0x140005744
   140009980:	mov    QWORD PTR [rip+0xa901],rax        # 0x140014288
   140009987:	jmp    0x140009999
   140009989:	mov    rax,QWORD PTR [rip+0xa8f8]        # 0x140014288
   140009990:	jmp    0x1400099a0
   140009992:	mov    rax,QWORD PTR [rip+0xa8ef]        # 0x140014288
   140009999:	mov    r11,QWORD PTR [rip+0xa8f0]        # 0x140014290
   1400099a0:	cmp    rax,rdi
   1400099a3:	je     0x140009a08
   1400099a5:	cmp    r11,rdi
   1400099a8:	je     0x140009a08
   1400099aa:	mov    rcx,rax
   1400099ad:	call   0x140005758
   1400099b2:	mov    rcx,QWORD PTR [rip+0xa8d7]        # 0x140014290
   1400099b9:	mov    rsi,rax
   1400099bc:	call   0x140005758
   1400099c1:	mov    r12,rax
   1400099c4:	test   rsi,rsi
   1400099c7:	je     0x140009a08
   1400099c9:	test   rax,rax
   1400099cc:	je     0x140009a08
   1400099ce:	call   rsi
   1400099d0:	test   rax,rax
   1400099d3:	je     0x140009a02
   1400099d5:	lea    rcx,[rsp+0x88]
   1400099dd:	mov    r9d,0xc
   1400099e3:	lea    r8,[rsp+0x30]
   1400099e8:	mov    QWORD PTR [rsp+0x20],rcx
   1400099ed:	lea    edx,[r9-0xb]
   1400099f1:	mov    rcx,rax
   1400099f4:	call   r12
   1400099f7:	test   eax,eax
   1400099f9:	je     0x140009a02
   1400099fb:	test   BYTE PTR [rsp+0x38],0x1
   140009a00:	jne    0x140009a08
   140009a02:	bts    ebp,0x15
   140009a06:	jmp    0x140009a46
   140009a08:	mov    rcx,QWORD PTR [rip+0xa869]        # 0x140014278
   140009a0f:	cmp    rcx,rdi
   140009a12:	je     0x140009a46
   140009a14:	call   0x140005758
   140009a19:	test   rax,rax
   140009a1c:	je     0x140009a46
   140009a1e:	call   rax
   140009a20:	mov    rbx,rax
   140009a23:	test   rax,rax
   140009a26:	je     0x140009a46
   140009a28:	mov    rcx,QWORD PTR [rip+0xa851]        # 0x140014280
   140009a2f:	cmp    rcx,rdi
   140009a32:	je     0x140009a46
   140009a34:	call   0x140005758
   140009a39:	test   rax,rax
   140009a3c:	je     0x140009a46
   140009a3e:	mov    rcx,rbx
   140009a41:	call   rax
   140009a43:	mov    rbx,rax
   140009a46:	mov    rcx,QWORD PTR [rip+0xa823]        # 0x140014270
   140009a4d:	call   0x140005758
   140009a52:	test   rax,rax
   140009a55:	je     0x140009a67
   140009a57:	mov    r9d,ebp
   140009a5a:	mov    r8,r13
   140009a5d:	mov    rdx,r14
   140009a60:	mov    rcx,rbx
   140009a63:	call   rax
   140009a65:	jmp    0x140009a69
   140009a67:	xor    eax,eax
   140009a69:	mov    rbx,QWORD PTR [rsp+0x70]
   140009a6e:	mov    rbp,QWORD PTR [rsp+0x78]
   140009a73:	add    rsp,0x40
   140009a77:	pop    r14
   140009a79:	pop    r13
   140009a7b:	pop    r12
   140009a7d:	pop    rdi
   140009a7e:	pop    rsi
   140009a7f:	ret    
   140009a80:	sub    rsp,0x38
   140009a84:	test   ecx,ecx
   140009a86:	js     0x140009aa8
   140009a88:	cmp    ecx,0x2
   140009a8b:	jle    0x140009a9a
   140009a8d:	cmp    ecx,0x3
   140009a90:	jne    0x140009aa8
   140009a92:	mov    eax,DWORD PTR [rip+0x9b18]        # 0x1400135b0
   140009a98:	jmp    0x140009acb
   140009a9a:	mov    eax,DWORD PTR [rip+0x9b10]        # 0x1400135b0
   140009aa0:	mov    DWORD PTR [rip+0x9b0a],ecx        # 0x1400135b0
   140009aa6:	jmp    0x140009acb
   140009aa8:	call   0x140003fbc
   140009aad:	and    QWORD PTR [rsp+0x20],0x0
   140009ab3:	xor    r9d,r9d
   140009ab6:	xor    r8d,r8d
   140009ab9:	xor    edx,edx
   140009abb:	xor    ecx,ecx
   140009abd:	mov    DWORD PTR [rax],0x16
   140009ac3:	call   0x140003eec
   140009ac8:	or     eax,0xffffffff
   140009acb:	add    rsp,0x38
   140009acf:	ret    
   140009ad0:	sub    rsp,0x38
   140009ad4:	test   rcx,rcx
   140009ad7:	jne    0x140009aff
   140009ad9:	call   0x140003fbc
   140009ade:	and    QWORD PTR [rsp+0x20],0x0
   140009ae4:	xor    r9d,r9d
   140009ae7:	xor    r8d,r8d
   140009aea:	xor    edx,edx
   140009aec:	xor    ecx,ecx
   140009aee:	mov    DWORD PTR [rax],0x16
   140009af4:	call   0x140003eec
   140009af9:	or     rax,0xffffffffffffffff
   140009afd:	jmp    0x140009b11
   140009aff:	mov    r8,rcx
   140009b02:	mov    rcx,QWORD PTR [rip+0xa747]        # 0x140014250
   140009b09:	xor    edx,edx
   140009b0b:	call   QWORD PTR [rip+0x5707]        # 0x14000f218
   140009b11:	add    rsp,0x38
   140009b15:	ret    
   140009b16:	int3   
   140009b17:	int3   
   140009b18:	mov    ecx,0x2
   140009b1d:	jmp    0x140002608
   140009b22:	int3   
   140009b23:	int3   
   140009b24:	sub    rsp,0x5a8
   140009b2b:	test   BYTE PTR [rip+0x978e],0x1        # 0x1400132c0
   140009b32:	je     0x140009b3e
   140009b34:	mov    ecx,0xa
   140009b39:	call   0x140005d3c
   140009b3e:	call   0x1400064b8
   140009b43:	test   rax,rax
   140009b46:	je     0x140009b52
   140009b48:	mov    ecx,0x16
   140009b4d:	call   0x1400064c4
   140009b52:	test   BYTE PTR [rip+0x9767],0x2        # 0x1400132c0
   140009b59:	je     0x140009bba
   140009b5b:	lea    rcx,[rsp+0xd0]
   140009b63:	call   QWORD PTR [rip+0x5567]        # 0x14000f0d0
   140009b69:	lea    rcx,[rsp+0x30]
   140009b6e:	xor    edx,edx
   140009b70:	mov    r8d,0x98
   140009b76:	call   0x140001cf0
   140009b7b:	mov    rax,QWORD PTR [rsp+0x5a8]
   140009b83:	xor    ecx,ecx
   140009b85:	mov    QWORD PTR [rsp+0x40],rax
   140009b8a:	lea    rax,[rsp+0x30]
   140009b8f:	mov    DWORD PTR [rsp+0x30],0x40000015
   140009b97:	mov    QWORD PTR [rsp+0x20],rax
   140009b9c:	lea    rax,[rsp+0xd0]
   140009ba4:	mov    QWORD PTR [rsp+0x28],rax
   140009ba9:	call   QWORD PTR [rip+0x5501]        # 0x14000f0b0
   140009baf:	lea    rcx,[rsp+0x20]
   140009bb4:	call   QWORD PTR [rip+0x54ee]        # 0x14000f0a8
   140009bba:	mov    ecx,0x3
   140009bbf:	call   0x14000295c
   140009bc4:	int3   
   140009bc5:	int3   
   140009bc6:	int3   
   140009bc7:	int3   
   140009bc8:	mov    rax,rsp
   140009bcb:	mov    QWORD PTR [rax+0x8],rbx
   140009bcf:	mov    QWORD PTR [rax+0x10],rbp
   140009bd3:	mov    QWORD PTR [rax+0x18],rsi
   140009bd7:	mov    QWORD PTR [rax+0x20],rdi
   140009bdb:	push   r12
   140009bdd:	push   r13
   140009bdf:	push   r14
   140009be1:	sub    rsp,0x50
   140009be5:	mov    r14,rdx
   140009be8:	mov    rdx,rcx
   140009beb:	lea    rcx,[rax-0x38]
   140009bef:	mov    r12d,r9d
   140009bf2:	mov    r13,r8
   140009bf5:	call   0x140002370
   140009bfa:	test   r13,r13
   140009bfd:	je     0x140009c03
   140009bff:	mov    QWORD PTR [r13+0x0],r14
   140009c03:	test   r14,r14
   140009c06:	jne    0x140009c32
   140009c08:	call   0x140003fbc
   140009c0d:	and    QWORD PTR [rsp+0x20],0x0
   140009c13:	xor    r9d,r9d
   140009c16:	xor    r8d,r8d
   140009c19:	xor    edx,edx
   140009c1b:	xor    ecx,ecx
   140009c1d:	mov    DWORD PTR [rax],0x16
   140009c23:	call   0x140003eec
   140009c28:	cmp    BYTE PTR [rsp+0x48],0x0
   140009c2d:	jmp    0x140009e1b
   140009c32:	test   r12d,r12d
   140009c35:	je     0x140009c43
   140009c37:	cmp    r12d,0x2
   140009c3b:	jl     0x140009c08
   140009c3d:	cmp    r12d,0x24
   140009c41:	jg     0x140009c08
   140009c43:	mov    bpl,BYTE PTR [r14]
   140009c46:	mov    r8,QWORD PTR [rsp+0x30]
   140009c4b:	xor    edi,edi
   140009c4d:	lea    rbx,[r14+0x1]
   140009c51:	cmp    DWORD PTR [r8+0x10c],0x1
   140009c59:	jle    0x140009c75
   140009c5b:	lea    r8,[rsp+0x30]
   140009c60:	movzx  ecx,bpl
   140009c64:	mov    edx,0x8
   140009c69:	call   0x140005aa0
   140009c6e:	mov    r8,QWORD PTR [rsp+0x30]
   140009c73:	jmp    0x140009c87
   140009c75:	mov    rax,QWORD PTR [r8+0x140]
   140009c7c:	movzx  ecx,bpl
   140009c80:	movzx  eax,WORD PTR [rax+rcx*2]
   140009c84:	and    eax,0x8
   140009c87:	test   eax,eax
   140009c89:	je     0x140009c93
   140009c8b:	mov    bpl,BYTE PTR [rbx]
   140009c8e:	inc    rbx
   140009c91:	jmp    0x140009c51
   140009c93:	mov    esi,DWORD PTR [rsp+0x90]
   140009c9a:	cmp    bpl,0x2d
   140009c9e:	jne    0x140009ca5
   140009ca0:	or     esi,0x2
   140009ca3:	jmp    0x140009cab
   140009ca5:	cmp    bpl,0x2b
   140009ca9:	jne    0x140009cb1
   140009cab:	mov    bpl,BYTE PTR [rbx]
   140009cae:	inc    rbx
   140009cb1:	test   r12d,r12d
   140009cb4:	js     0x140009e0d
   140009cba:	cmp    r12d,0x1
   140009cbe:	je     0x140009e0d
   140009cc4:	cmp    r12d,0x24
   140009cc8:	jg     0x140009e0d
   140009cce:	test   r12d,r12d
   140009cd1:	jne    0x140009cfb
   140009cd3:	cmp    bpl,0x30
   140009cd7:	je     0x140009ce1
   140009cd9:	mov    r12d,0xa
   140009cdf:	jmp    0x140009d19
   140009ce1:	cmp    BYTE PTR [rbx],0x78
   140009ce4:	je     0x140009cf3
   140009ce6:	cmp    BYTE PTR [rbx],0x58
   140009ce9:	je     0x140009cf3
   140009ceb:	mov    r12d,0x8
   140009cf1:	jmp    0x140009d19
   140009cf3:	mov    r12d,0x10
   140009cf9:	jmp    0x140009d07
   140009cfb:	cmp    r12d,0x10
   140009cff:	jne    0x140009d19
   140009d01:	cmp    bpl,0x30
   140009d05:	jne    0x140009d19
   140009d07:	cmp    BYTE PTR [rbx],0x78
   140009d0a:	je     0x140009d11
   140009d0c:	cmp    BYTE PTR [rbx],0x58
   140009d0f:	jne    0x140009d19
   140009d11:	mov    bpl,BYTE PTR [rbx+0x1]
   140009d15:	add    rbx,0x2
   140009d19:	mov    r10,QWORD PTR [r8+0x140]
   140009d20:	xor    edx,edx
   140009d22:	or     eax,0xffffffff
   140009d25:	div    r12d
   140009d28:	mov    r9d,eax
   140009d2b:	movzx  ecx,bpl
   140009d2f:	movzx  r8d,WORD PTR [r10+rcx*2]
   140009d34:	test   r8b,0x4
   140009d38:	je     0x140009d43
   140009d3a:	movsx  ecx,bpl
   140009d3e:	sub    ecx,0x30
   140009d41:	jmp    0x140009d5d
   140009d43:	test   r8d,0x103
   140009d4a:	je     0x140009d78
   140009d4c:	lea    eax,[rbp-0x61]
   140009d4f:	movsx  ecx,bpl
   140009d53:	cmp    al,0x19
   140009d55:	ja     0x140009d5a
   140009d57:	sub    ecx,0x20
   140009d5a:	add    ecx,0xffffffc9
   140009d5d:	cmp    ecx,r12d
   140009d60:	jae    0x140009d78
   140009d62:	or     esi,0x8
   140009d65:	cmp    edi,r9d
   140009d68:	jb     0x140009d8c
   140009d6a:	jne    0x140009d70
   140009d6c:	cmp    ecx,edx
   140009d6e:	jbe    0x140009d8c
   140009d70:	or     esi,0x4
   140009d73:	test   r13,r13
   140009d76:	jne    0x140009d92
   140009d78:	dec    rbx
   140009d7b:	test   sil,0x8
   140009d7f:	jne    0x140009d9a
   140009d81:	test   r13,r13
   140009d84:	cmovne rbx,r14
   140009d88:	xor    edi,edi
   140009d8a:	jmp    0x140009de5
   140009d8c:	imul   edi,r12d
   140009d90:	add    edi,ecx
   140009d92:	mov    bpl,BYTE PTR [rbx]
   140009d95:	inc    rbx
   140009d98:	jmp    0x140009d2b
   140009d9a:	mov    ebp,0x7fffffff
   140009d9f:	test   sil,0x4
   140009da3:	jne    0x140009dc2
   140009da5:	test   sil,0x1
   140009da9:	jne    0x140009de5
   140009dab:	mov    eax,esi
   140009dad:	and    eax,0x2
   140009db0:	je     0x140009dba
   140009db2:	cmp    edi,0x80000000
   140009db8:	ja     0x140009dc2
   140009dba:	test   eax,eax
   140009dbc:	jne    0x140009de5
   140009dbe:	cmp    edi,ebp
   140009dc0:	jbe    0x140009de5
   140009dc2:	call   0x140003fbc
   140009dc7:	mov    DWORD PTR [rax],0x22
   140009dcd:	test   sil,0x1
   140009dd1:	je     0x140009dd8
   140009dd3:	or     edi,0xffffffff
   140009dd6:	jmp    0x140009de5
   140009dd8:	mov    al,sil
   140009ddb:	and    al,0x2
   140009ddd:	neg    al
   140009ddf:	sbb    edi,edi
   140009de1:	neg    edi
   140009de3:	add    edi,ebp
   140009de5:	test   r13,r13
   140009de8:	je     0x140009dee
   140009dea:	mov    QWORD PTR [r13+0x0],rbx
   140009dee:	test   sil,0x2
   140009df2:	je     0x140009df6
   140009df4:	neg    edi
   140009df6:	cmp    BYTE PTR [rsp+0x48],0x0
   140009dfb:	je     0x140009e09
   140009dfd:	mov    rcx,QWORD PTR [rsp+0x40]
   140009e02:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140009e09:	mov    eax,edi
   140009e0b:	jmp    0x140009e2b
   140009e0d:	test   r13,r13
   140009e10:	je     0x140009e16
   140009e12:	mov    QWORD PTR [r13+0x0],r14
   140009e16:	cmp    BYTE PTR [rsp+0x48],dil
   140009e1b:	je     0x140009e29
   140009e1d:	mov    rax,QWORD PTR [rsp+0x40]
   140009e22:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140009e29:	xor    eax,eax
   140009e2b:	lea    r11,[rsp+0x50]
   140009e30:	mov    rbx,QWORD PTR [r11+0x20]
   140009e34:	mov    rbp,QWORD PTR [r11+0x28]
   140009e38:	mov    rsi,QWORD PTR [r11+0x30]
   140009e3c:	mov    rdi,QWORD PTR [r11+0x38]
   140009e40:	mov    rsp,r11
   140009e43:	pop    r14
   140009e45:	pop    r13
   140009e47:	pop    r12
   140009e49:	ret    
   140009e4a:	int3   
   140009e4b:	int3   
   140009e4c:	sub    rsp,0x38
   140009e50:	xor    eax,eax
   140009e52:	mov    r9d,r8d
   140009e55:	mov    r8,rdx
   140009e58:	mov    DWORD PTR [rsp+0x20],eax
   140009e5c:	mov    rdx,rcx
   140009e5f:	cmp    DWORD PTR [rip+0x9f3b],eax        # 0x140013da0
   140009e65:	jne    0x140009e70
   140009e67:	lea    rcx,[rip+0x9052]        # 0x140012ec0
   140009e6e:	jmp    0x140009e72
   140009e70:	xor    ecx,ecx
   140009e72:	call   0x140009bc8
   140009e77:	add    rsp,0x38
   140009e7b:	ret    
   140009e7c:	mov    QWORD PTR [rsp+0x8],rbx
   140009e81:	push   rdi
   140009e82:	sub    rsp,0x20
   140009e86:	movsxd rdi,ecx
   140009e89:	mov    ecx,edi
   140009e8b:	call   0x14000a47c
   140009e90:	cmp    rax,0xffffffffffffffff
   140009e94:	je     0x140009eef
   140009e96:	mov    rax,QWORD PTR [rip+0xa4e3]        # 0x140014380
   140009e9d:	mov    ecx,0x2
   140009ea2:	cmp    edi,0x1
   140009ea5:	jne    0x140009eb0
   140009ea7:	test   BYTE PTR [rax+0xb8],dil
   140009eae:	jne    0x140009eba
   140009eb0:	cmp    edi,ecx
   140009eb2:	jne    0x140009ed1
   140009eb4:	test   BYTE PTR [rax+0x60],0x1
   140009eb8:	je     0x140009ed1
   140009eba:	call   0x14000a47c
   140009ebf:	mov    ecx,0x1
   140009ec4:	mov    rbx,rax
   140009ec7:	call   0x14000a47c
   140009ecc:	cmp    rax,rbx
   140009ecf:	je     0x140009eef
   140009ed1:	mov    ecx,edi
   140009ed3:	call   0x14000a47c
   140009ed8:	mov    rcx,rax
   140009edb:	call   QWORD PTR [rip+0x533f]        # 0x14000f220
   140009ee1:	test   eax,eax
   140009ee3:	jne    0x140009eef
   140009ee5:	call   QWORD PTR [rip+0x51ed]        # 0x14000f0d8
   140009eeb:	mov    ebx,eax
   140009eed:	jmp    0x140009ef1
   140009eef:	xor    ebx,ebx
   140009ef1:	mov    ecx,edi
   140009ef3:	call   0x14000a3d0
   140009ef8:	mov    r11,rdi
   140009efb:	mov    rcx,rdi
   140009efe:	sar    rcx,0x5
   140009f02:	and    r11d,0x1f
   140009f06:	lea    rdx,[rip+0xa473]        # 0x140014380
   140009f0d:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140009f11:	imul   r11,r11,0x58
   140009f15:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140009f1b:	test   ebx,ebx
   140009f1d:	je     0x140009f2b
   140009f1f:	mov    ecx,ebx
   140009f21:	call   0x140003ffc
   140009f26:	or     eax,0xffffffff
   140009f29:	jmp    0x140009f2d
   140009f2b:	xor    eax,eax
   140009f2d:	mov    rbx,QWORD PTR [rsp+0x30]
   140009f32:	add    rsp,0x20
   140009f36:	pop    rdi
   140009f37:	ret    
   140009f38:	mov    QWORD PTR [rsp+0x18],rbx
   140009f3d:	mov    QWORD PTR [rsp+0x20],rsi
   140009f42:	mov    DWORD PTR [rsp+0x8],ecx
   140009f46:	push   rdi
   140009f47:	push   r12
   140009f49:	push   r13
   140009f4b:	sub    rsp,0x30
   140009f4f:	movsxd rbx,ecx
   140009f52:	cmp    ebx,0xfffffffe
   140009f55:	jne    0x140009f73
   140009f57:	call   0x140003fdc
   140009f5c:	xor    edi,edi
   140009f5e:	mov    DWORD PTR [rax],edi
   140009f60:	call   0x140003fbc
   140009f65:	mov    DWORD PTR [rax],0x9
   140009f6b:	or     eax,0xffffffff
   140009f6e:	jmp    0x14000a03c
   140009f73:	xor    edi,edi
   140009f75:	cmp    ebx,edi
   140009f77:	jl     0x14000a013
   140009f7d:	cmp    ebx,DWORD PTR [rip+0xa3e5]        # 0x140014368
   140009f83:	jae    0x14000a013
   140009f89:	mov    rsi,rbx
   140009f8c:	mov    r12,rbx
   140009f8f:	sar    r12,0x5
   140009f93:	lea    r13,[rip+0xa3e6]        # 0x140014380
   140009f9a:	and    esi,0x1f
   140009f9d:	imul   rsi,rsi,0x58
   140009fa1:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   140009fa6:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   140009fab:	and    ecx,0x1
   140009fae:	jne    0x140009fdb
   140009fb0:	call   0x140003fdc
   140009fb5:	mov    DWORD PTR [rax],edi
   140009fb7:	call   0x140003fbc
   140009fbc:	mov    DWORD PTR [rax],0x9
   140009fc2:	mov    QWORD PTR [rsp+0x20],rdi
   140009fc7:	xor    r9d,r9d
   140009fca:	xor    r8d,r8d
   140009fcd:	xor    edx,edx
   140009fcf:	xor    ecx,ecx
   140009fd1:	call   0x140003eec
   140009fd6:	or     eax,0xffffffff
   140009fd9:	jmp    0x14000a03c
   140009fdb:	mov    ecx,ebx
   140009fdd:	call   0x14000a500
   140009fe2:	nop
   140009fe3:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   140009fe8:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140009fed:	je     0x140009ffa
   140009fef:	mov    ecx,ebx
   140009ff1:	call   0x140009e7c
   140009ff6:	mov    edi,eax
   140009ff8:	jmp    0x14000a008
   140009ffa:	call   0x140003fbc
   140009fff:	mov    DWORD PTR [rax],0x9
   14000a005:	or     edi,0xffffffff
   14000a008:	mov    ecx,ebx
   14000a00a:	call   0x14000a5a8
   14000a00f:	mov    eax,edi
   14000a011:	jmp    0x14000a03c
   14000a013:	call   0x140003fdc
   14000a018:	mov    DWORD PTR [rax],edi
   14000a01a:	call   0x140003fbc
   14000a01f:	mov    DWORD PTR [rax],0x9
   14000a025:	mov    QWORD PTR [rsp+0x20],rdi
   14000a02a:	xor    r9d,r9d
   14000a02d:	xor    r8d,r8d
   14000a030:	xor    edx,edx
   14000a032:	xor    ecx,ecx
   14000a034:	call   0x140003eec
   14000a039:	or     eax,0xffffffff
   14000a03c:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a041:	mov    rsi,QWORD PTR [rsp+0x68]
   14000a046:	add    rsp,0x30
   14000a04a:	pop    r13
   14000a04c:	pop    r12
   14000a04e:	pop    rdi
   14000a04f:	ret    
   14000a050:	rex push rbx
   14000a052:	sub    rsp,0x20
   14000a056:	test   BYTE PTR [rcx+0x18],0x83
   14000a05a:	mov    rbx,rcx
   14000a05d:	je     0x14000a081
   14000a05f:	test   BYTE PTR [rcx+0x18],0x8
   14000a063:	je     0x14000a081
   14000a065:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a069:	call   0x140004244
   14000a06e:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14000a075:	xor    eax,eax
   14000a077:	mov    QWORD PTR [rbx],rax
   14000a07a:	mov    QWORD PTR [rbx+0x10],rax
   14000a07e:	mov    DWORD PTR [rbx+0x8],eax
   14000a081:	add    rsp,0x20
   14000a085:	pop    rbx
   14000a086:	ret    
   14000a087:	int3   
   14000a088:	sub    rsp,0x68
   14000a08c:	mov    rax,QWORD PTR [rip+0x832d]        # 0x1400123c0
   14000a093:	xor    rax,rsp
   14000a096:	mov    QWORD PTR [rsp+0x50],rax
   14000a09b:	cmp    DWORD PTR [rip+0x9222],0x0        # 0x1400132c4
   14000a0a2:	mov    WORD PTR [rsp+0x40],cx
   14000a0a7:	je     0x14000a10f
   14000a0a9:	mov    rcx,QWORD PTR [rip+0x92e8]        # 0x140013398
   14000a0b0:	cmp    rcx,0xfffffffffffffffe
   14000a0b4:	jne    0x14000a0c2
   14000a0b6:	call   0x14000ac8c
   14000a0bb:	mov    rcx,QWORD PTR [rip+0x92d6]        # 0x140013398
   14000a0c2:	cmp    rcx,0xffffffffffffffff
   14000a0c6:	je     0x14000a185
   14000a0cc:	and    QWORD PTR [rsp+0x20],0x0
   14000a0d2:	lea    r9,[rsp+0x44]
   14000a0d7:	lea    rdx,[rsp+0x40]
   14000a0dc:	mov    r8d,0x1
   14000a0e2:	call   QWORD PTR [rip+0x5150]        # 0x14000f238
   14000a0e8:	test   eax,eax
   14000a0ea:	jne    0x14000a179
   14000a0f0:	cmp    DWORD PTR [rip+0x91cd],0x2        # 0x1400132c4
   14000a0f7:	jne    0x14000a185
   14000a0fd:	call   QWORD PTR [rip+0x4fd5]        # 0x14000f0d8
   14000a103:	cmp    eax,0x78
   14000a106:	jne    0x14000a185
   14000a108:	and    DWORD PTR [rip+0x91b5],0x0        # 0x1400132c4
   14000a10f:	call   QWORD PTR [rip+0x511b]        # 0x14000f230
   14000a115:	and    QWORD PTR [rsp+0x38],0x0
   14000a11b:	and    QWORD PTR [rsp+0x30],0x0
   14000a121:	mov    ecx,eax
   14000a123:	lea    rax,[rsp+0x48]
   14000a128:	lea    r8,[rsp+0x40]
   14000a12d:	mov    r9d,0x1
   14000a133:	xor    edx,edx
   14000a135:	mov    DWORD PTR [rsp+0x28],0x5
   14000a13d:	mov    QWORD PTR [rsp+0x20],rax
   14000a142:	call   QWORD PTR [rip+0x5038]        # 0x14000f180
   14000a148:	mov    rcx,QWORD PTR [rip+0x9249]        # 0x140013398
   14000a14f:	cmp    rcx,0xffffffffffffffff
   14000a153:	je     0x14000a185
   14000a155:	and    QWORD PTR [rsp+0x20],0x0
   14000a15b:	lea    r9,[rsp+0x44]
   14000a160:	lea    rdx,[rsp+0x48]
   14000a165:	mov    r8d,eax
   14000a168:	call   QWORD PTR [rip+0x50ba]        # 0x14000f228
   14000a16e:	test   eax,eax
   14000a170:	je     0x14000a185
   14000a172:	mov    ax,WORD PTR [rsp+0x40]
   14000a177:	jmp    0x14000a18a
   14000a179:	mov    DWORD PTR [rip+0x9141],0x1        # 0x1400132c4
   14000a183:	jmp    0x14000a172
   14000a185:	mov    eax,0xffff
   14000a18a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a18f:	xor    rcx,rsp
   14000a192:	call   0x140002350
   14000a197:	add    rsp,0x68
   14000a19b:	ret    
   14000a19c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a1a1:	mov    QWORD PTR [rsp+0x10],rbp
   14000a1a6:	mov    QWORD PTR [rsp+0x18],rsi
   14000a1ab:	push   rdi
   14000a1ac:	sub    rsp,0x50
   14000a1b0:	xor    ebp,ebp
   14000a1b2:	mov    rsi,r8
   14000a1b5:	mov    rdi,rdx
   14000a1b8:	mov    rbx,rcx
   14000a1bb:	cmp    rdx,rbp
   14000a1be:	je     0x14000a1d2
   14000a1c0:	cmp    r8,rbp
   14000a1c3:	je     0x14000a1d2
   14000a1c5:	cmp    BYTE PTR [rdx],bpl
   14000a1c8:	jne    0x14000a1e9
   14000a1ca:	cmp    rcx,rbp
   14000a1cd:	je     0x14000a1d2
   14000a1cf:	mov    WORD PTR [rcx],bp
   14000a1d2:	xor    eax,eax
   14000a1d4:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a1d9:	mov    rbp,QWORD PTR [rsp+0x68]
   14000a1de:	mov    rsi,QWORD PTR [rsp+0x70]
   14000a1e3:	add    rsp,0x50
   14000a1e7:	pop    rdi
   14000a1e8:	ret    
   14000a1e9:	lea    rcx,[rsp+0x30]
   14000a1ee:	mov    rdx,r9
   14000a1f1:	call   0x140002370
   14000a1f6:	mov    r11,QWORD PTR [rsp+0x30]
   14000a1fb:	cmp    DWORD PTR [r11+0x14],ebp
   14000a1ff:	jne    0x14000a226
   14000a201:	cmp    rbx,rbp
   14000a204:	je     0x14000a20c
   14000a206:	movzx  eax,BYTE PTR [rdi]
   14000a209:	mov    WORD PTR [rbx],ax
   14000a20c:	cmp    BYTE PTR [rsp+0x48],bpl
   14000a211:	je     0x14000a21f
   14000a213:	mov    rax,QWORD PTR [rsp+0x40]
   14000a218:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a21f:	mov    eax,0x1
   14000a224:	jmp    0x14000a1d4
   14000a226:	movzx  ecx,BYTE PTR [rdi]
   14000a229:	lea    rdx,[rsp+0x30]
   14000a22e:	call   0x140007034
   14000a233:	cmp    eax,ebp
   14000a235:	je     0x14000a2d7
   14000a23b:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a240:	mov    r9d,DWORD PTR [rcx+0x10c]
   14000a247:	cmp    r9d,0x1
   14000a24b:	jle    0x14000a27d
   14000a24d:	cmp    esi,r9d
   14000a250:	jl     0x14000a27d
   14000a252:	mov    ecx,DWORD PTR [rcx+0x4]
   14000a255:	mov    eax,ebp
   14000a257:	cmp    rbx,rbp
   14000a25a:	setne  al
   14000a25d:	mov    r8,rdi
   14000a260:	mov    edx,0x9
   14000a265:	mov    DWORD PTR [rsp+0x28],eax
   14000a269:	mov    QWORD PTR [rsp+0x20],rbx
   14000a26e:	call   QWORD PTR [rip+0x4f74]        # 0x14000f1e8
   14000a274:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a279:	cmp    eax,ebp
   14000a27b:	jne    0x14000a28f
   14000a27d:	movsxd rax,DWORD PTR [rcx+0x10c]
   14000a284:	cmp    rsi,rax
   14000a287:	jb     0x14000a2b1
   14000a289:	cmp    BYTE PTR [rdi+0x1],bpl
   14000a28d:	je     0x14000a2b1
   14000a28f:	mov    eax,DWORD PTR [rcx+0x10c]
   14000a295:	cmp    BYTE PTR [rsp+0x48],bpl
   14000a29a:	je     0x14000a1d4
   14000a2a0:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a2a5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a2ac:	jmp    0x14000a1d4
   14000a2b1:	call   0x140003fbc
   14000a2b6:	mov    DWORD PTR [rax],0x2a
   14000a2bc:	cmp    BYTE PTR [rsp+0x48],bpl
   14000a2c1:	je     0x14000a2cf
   14000a2c3:	mov    rax,QWORD PTR [rsp+0x40]
   14000a2c8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a2cf:	or     eax,0xffffffff
   14000a2d2:	jmp    0x14000a1d4
   14000a2d7:	mov    eax,ebp
   14000a2d9:	mov    r9d,0x1
   14000a2df:	cmp    rbx,rbp
   14000a2e2:	setne  al
   14000a2e5:	lea    edx,[r9+0x8]
   14000a2e9:	mov    r8,rdi
   14000a2ec:	mov    DWORD PTR [rsp+0x28],eax
   14000a2f0:	mov    rax,QWORD PTR [rsp+0x30]
   14000a2f5:	mov    QWORD PTR [rsp+0x20],rbx
   14000a2fa:	mov    ecx,DWORD PTR [rax+0x4]
   14000a2fd:	call   QWORD PTR [rip+0x4ee5]        # 0x14000f1e8
   14000a303:	cmp    eax,ebp
   14000a305:	jne    0x14000a20c
   14000a30b:	jmp    0x14000a2b1
   14000a30d:	int3   
   14000a30e:	int3   
   14000a30f:	int3   
   14000a310:	xor    r9d,r9d
   14000a313:	jmp    0x14000a19c
   14000a318:	int3   
   14000a319:	int3   
   14000a31a:	int3   
   14000a31b:	int3   
   14000a31c:	int3   
   14000a31d:	int3   
   14000a31e:	int3   
   14000a31f:	int3   
   14000a320:	mov    QWORD PTR [rsp+0x8],rbx
   14000a325:	mov    QWORD PTR [rsp+0x10],rbp
   14000a32a:	mov    QWORD PTR [rsp+0x18],rsi
   14000a32f:	push   rdi
   14000a330:	sub    rsp,0x20
   14000a334:	mov    rbx,rdx
   14000a337:	test   ecx,ecx
   14000a339:	js     0x14000a3a4
   14000a33b:	cmp    ecx,DWORD PTR [rip+0xa027]        # 0x140014368
   14000a341:	jae    0x14000a3a4
   14000a343:	movsxd rdi,ecx
   14000a346:	lea    rbp,[rip+0xa033]        # 0x140014380
   14000a34d:	mov    rsi,rdi
   14000a350:	and    edi,0x1f
   14000a353:	sar    rsi,0x5
   14000a357:	imul   rdi,rdi,0x58
   14000a35b:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14000a360:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   14000a365:	jne    0x14000a3a4
   14000a367:	cmp    DWORD PTR [rip+0x806a],0x1        # 0x1400123d8
   14000a36e:	jne    0x14000a397
   14000a370:	test   ecx,ecx
   14000a372:	je     0x14000a38c
   14000a374:	sub    ecx,0x1
   14000a377:	je     0x14000a385
   14000a379:	cmp    ecx,0x1
   14000a37c:	jne    0x14000a397
   14000a37e:	mov    ecx,0xfffffff4
   14000a383:	jmp    0x14000a391
   14000a385:	mov    ecx,0xfffffff5
   14000a38a:	jmp    0x14000a391
   14000a38c:	mov    ecx,0xfffffff6
   14000a391:	call   QWORD PTR [rip+0x4ea9]        # 0x14000f240
   14000a397:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14000a39c:	mov    QWORD PTR [rdi+rax*1],rbx
   14000a3a0:	xor    eax,eax
   14000a3a2:	jmp    0x14000a3ba
   14000a3a4:	call   0x140003fbc
   14000a3a9:	mov    DWORD PTR [rax],0x9
   14000a3af:	call   0x140003fdc
   14000a3b4:	and    DWORD PTR [rax],0x0
   14000a3b7:	or     eax,0xffffffff
   14000a3ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a3bf:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a3c4:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a3c9:	add    rsp,0x20
   14000a3cd:	pop    rdi
   14000a3ce:	ret    
   14000a3cf:	int3   
   14000a3d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a3d5:	mov    QWORD PTR [rsp+0x10],rbp
   14000a3da:	push   rdi
   14000a3db:	sub    rsp,0x20
   14000a3df:	test   ecx,ecx
   14000a3e1:	js     0x14000a456
   14000a3e3:	cmp    ecx,DWORD PTR [rip+0x9f7f]        # 0x140014368
   14000a3e9:	jae    0x14000a456
   14000a3eb:	movsxd rbx,ecx
   14000a3ee:	lea    rbp,[rip+0x9f8b]        # 0x140014380
   14000a3f5:	mov    rdi,rbx
   14000a3f8:	and    ebx,0x1f
   14000a3fb:	sar    rdi,0x5
   14000a3ff:	imul   rbx,rbx,0x58
   14000a403:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14000a408:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000a40d:	je     0x14000a456
   14000a40f:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14000a414:	je     0x14000a456
   14000a416:	cmp    DWORD PTR [rip+0x7fbb],0x1        # 0x1400123d8
   14000a41d:	jne    0x14000a448
   14000a41f:	test   ecx,ecx
   14000a421:	je     0x14000a43b
   14000a423:	sub    ecx,0x1
   14000a426:	je     0x14000a434
   14000a428:	cmp    ecx,0x1
   14000a42b:	jne    0x14000a448
   14000a42d:	mov    ecx,0xfffffff4
   14000a432:	jmp    0x14000a440
   14000a434:	mov    ecx,0xfffffff5
   14000a439:	jmp    0x14000a440
   14000a43b:	mov    ecx,0xfffffff6
   14000a440:	xor    edx,edx
   14000a442:	call   QWORD PTR [rip+0x4df8]        # 0x14000f240
   14000a448:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14000a44d:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14000a452:	xor    eax,eax
   14000a454:	jmp    0x14000a46c
   14000a456:	call   0x140003fbc
   14000a45b:	mov    DWORD PTR [rax],0x9
   14000a461:	call   0x140003fdc
   14000a466:	and    DWORD PTR [rax],0x0
   14000a469:	or     eax,0xffffffff
   14000a46c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a471:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a476:	add    rsp,0x20
   14000a47a:	pop    rdi
   14000a47b:	ret    
   14000a47c:	sub    rsp,0x38
   14000a480:	cmp    ecx,0xfffffffe
   14000a483:	jne    0x14000a49a
   14000a485:	call   0x140003fdc
   14000a48a:	and    DWORD PTR [rax],0x0
   14000a48d:	call   0x140003fbc
   14000a492:	mov    DWORD PTR [rax],0x9
   14000a498:	jmp    0x14000a4f7
   14000a49a:	test   ecx,ecx
   14000a49c:	js     0x14000a4cf
   14000a49e:	cmp    ecx,DWORD PTR [rip+0x9ec4]        # 0x140014368
   14000a4a4:	jae    0x14000a4cf
   14000a4a6:	movsxd rdx,ecx
   14000a4a9:	lea    rcx,[rip+0x9ed0]        # 0x140014380
   14000a4b0:	mov    rax,rdx
   14000a4b3:	and    edx,0x1f
   14000a4b6:	sar    rax,0x5
   14000a4ba:	imul   rdx,rdx,0x58
   14000a4be:	mov    rax,QWORD PTR [rcx+rax*8]
   14000a4c2:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14000a4c7:	je     0x14000a4cf
   14000a4c9:	mov    rax,QWORD PTR [rax+rdx*1]
   14000a4cd:	jmp    0x14000a4fb
   14000a4cf:	call   0x140003fdc
   14000a4d4:	and    DWORD PTR [rax],0x0
   14000a4d7:	call   0x140003fbc
   14000a4dc:	and    QWORD PTR [rsp+0x20],0x0
   14000a4e2:	xor    r9d,r9d
   14000a4e5:	xor    r8d,r8d
   14000a4e8:	xor    edx,edx
   14000a4ea:	xor    ecx,ecx
   14000a4ec:	mov    DWORD PTR [rax],0x9
   14000a4f2:	call   0x140003eec
   14000a4f7:	or     rax,0xffffffffffffffff
   14000a4fb:	add    rsp,0x38
   14000a4ff:	ret    
   14000a500:	mov    rax,rsp
   14000a503:	mov    QWORD PTR [rax+0x8],rbx
   14000a507:	mov    QWORD PTR [rax+0x10],rsi
   14000a50b:	mov    QWORD PTR [rax+0x18],rdi
   14000a50f:	mov    QWORD PTR [rax+0x20],r12
   14000a513:	push   r13
   14000a515:	sub    rsp,0x20
   14000a519:	movsxd rbx,ecx
   14000a51c:	mov    r12,rbx
   14000a51f:	sar    r12,0x5
   14000a523:	lea    r13,[rip+0x9e56]        # 0x140014380
   14000a52a:	and    ebx,0x1f
   14000a52d:	imul   rbx,rbx,0x58
   14000a531:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   14000a536:	mov    edi,0x1
   14000a53b:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14000a540:	jne    0x14000a575
   14000a542:	lea    ecx,[rdi+0x9]
   14000a545:	call   0x140004708
   14000a54a:	nop
   14000a54b:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14000a550:	jne    0x14000a56b
   14000a552:	lea    rcx,[rbx+rsi*1+0x10]
   14000a557:	mov    edx,0xfa0
   14000a55c:	call   0x140006750
   14000a561:	neg    eax
   14000a563:	sbb    edx,edx
   14000a565:	and    edi,edx
   14000a567:	inc    DWORD PTR [rbx+rsi*1+0xc]
   14000a56b:	mov    ecx,0xa
   14000a570:	call   0x140004608
   14000a575:	test   edi,edi
   14000a577:	je     0x14000a589
   14000a579:	mov    rcx,QWORD PTR [r13+r12*8+0x0]
   14000a57e:	lea    rcx,[rcx+rbx*1+0x10]
   14000a583:	call   QWORD PTR [rip+0x4aa7]        # 0x14000f030
   14000a589:	mov    eax,edi
   14000a58b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a590:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a595:	mov    rdi,QWORD PTR [rsp+0x40]
   14000a59a:	mov    r12,QWORD PTR [rsp+0x48]
   14000a59f:	add    rsp,0x20
   14000a5a3:	pop    r13
   14000a5a5:	ret    
   14000a5a6:	int3   
   14000a5a7:	int3   
   14000a5a8:	movsxd rdx,ecx
   14000a5ab:	lea    rcx,[rip+0x9dce]        # 0x140014380
   14000a5b2:	mov    rax,rdx
   14000a5b5:	and    edx,0x1f
   14000a5b8:	sar    rax,0x5
   14000a5bc:	imul   rdx,rdx,0x58
   14000a5c0:	mov    rax,QWORD PTR [rcx+rax*8]
   14000a5c4:	lea    rcx,[rax+rdx*1+0x10]
   14000a5c9:	rex.W jmp QWORD PTR [rip+0x4a68]        # 0x14000f038
   14000a5d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a5d5:	mov    QWORD PTR [rsp+0x10],rdi
   14000a5da:	mov    QWORD PTR [rsp+0x18],r12
   14000a5df:	push   r13
   14000a5e1:	push   r14
   14000a5e3:	push   r15
   14000a5e5:	sub    rsp,0x40
   14000a5e9:	or     r12,0xffffffffffffffff
   14000a5ed:	mov    r13d,r12d
   14000a5f0:	xor    r14d,r14d
   14000a5f3:	lea    ecx,[r12+0xc]
   14000a5f8:	call   0x140004620
   14000a5fd:	test   eax,eax
   14000a5ff:	jne    0x14000a609
   14000a601:	mov    eax,r12d
   14000a604:	jmp    0x14000a7d2
   14000a609:	mov    ecx,0xb
   14000a60e:	call   0x140004708
   14000a613:	nop
   14000a614:	xor    edi,edi
   14000a616:	mov    DWORD PTR [rsp+0x24],edi
   14000a61a:	lea    rax,[rip+0x9d5f]        # 0x140014380
   14000a621:	cmp    edi,0x40
   14000a624:	jge    0x14000a7c5
   14000a62a:	movsxd r15,edi
   14000a62d:	mov    rbx,QWORD PTR [rax+r15*8]
   14000a631:	test   rbx,rbx
   14000a634:	je     0x14000a73a
   14000a63a:	mov    QWORD PTR [rsp+0x30],rbx
   14000a63f:	mov    rax,QWORD PTR [rax+r15*8]
   14000a643:	add    rax,0xb00
   14000a649:	cmp    rbx,rax
   14000a64c:	jae    0x14000a71f
   14000a652:	test   BYTE PTR [rbx+0x8],0x1
   14000a656:	jne    0x14000a706
   14000a65c:	cmp    DWORD PTR [rbx+0xc],0x0
   14000a660:	jne    0x14000a69d
   14000a662:	mov    ecx,0xa
   14000a667:	call   0x140004708
   14000a66c:	nop
   14000a66d:	cmp    DWORD PTR [rbx+0xc],0x0
   14000a671:	jne    0x14000a693
   14000a673:	lea    rcx,[rbx+0x10]
   14000a677:	mov    edx,0xfa0
   14000a67c:	call   0x140006750
   14000a681:	test   eax,eax
   14000a683:	jne    0x14000a690
   14000a685:	lea    r14d,[rax+0x1]
   14000a689:	mov    DWORD PTR [rsp+0x28],r14d
   14000a68e:	jmp    0x14000a693
   14000a690:	inc    DWORD PTR [rbx+0xc]
   14000a693:	mov    ecx,0xa
   14000a698:	call   0x140004608
   14000a69d:	test   r14d,r14d
   14000a6a0:	jne    0x14000a6c2
   14000a6a2:	lea    rcx,[rbx+0x10]
   14000a6a6:	call   QWORD PTR [rip+0x4984]        # 0x14000f030
   14000a6ac:	test   BYTE PTR [rbx+0x8],0x1
   14000a6b0:	je     0x14000a6be
   14000a6b2:	lea    rcx,[rbx+0x10]
   14000a6b6:	call   QWORD PTR [rip+0x497c]        # 0x14000f038
   14000a6bc:	jmp    0x14000a706
   14000a6be:	or     r12,0xffffffffffffffff
   14000a6c2:	test   r14d,r14d
   14000a6c5:	jne    0x14000a706
   14000a6c7:	mov    BYTE PTR [rbx+0x8],0x1
   14000a6cb:	mov    QWORD PTR [rbx],r12
   14000a6ce:	lea    r8,[rip+0x9cab]        # 0x140014380
   14000a6d5:	sub    rbx,QWORD PTR [r8+r15*8]
   14000a6d9:	movabs rax,0x2e8ba2e8ba2e8ba3
   14000a6e3:	imul   rbx
   14000a6e6:	mov    r13,rdx
   14000a6e9:	sar    r13,0x4
   14000a6ed:	mov    rax,r13
   14000a6f0:	shr    rax,0x3f
   14000a6f4:	add    r13,rax
   14000a6f7:	mov    eax,edi
   14000a6f9:	shl    eax,0x5
   14000a6fc:	add    r13d,eax
   14000a6ff:	mov    DWORD PTR [rsp+0x20],r13d
   14000a704:	jmp    0x14000a71f
   14000a706:	add    rbx,0x58
   14000a70a:	mov    QWORD PTR [rsp+0x30],rbx
   14000a70f:	or     r12,0xffffffffffffffff
   14000a713:	lea    rax,[rip+0x9c66]        # 0x140014380
   14000a71a:	jmp    0x14000a63f
   14000a71f:	cmp    r13d,r12d
   14000a722:	jne    0x14000a7c5
   14000a728:	inc    edi
   14000a72a:	mov    DWORD PTR [rsp+0x24],edi
   14000a72e:	lea    rax,[rip+0x9c4b]        # 0x140014380
   14000a735:	jmp    0x14000a621
   14000a73a:	mov    edx,0x58
   14000a73f:	lea    ecx,[rdx-0x38]
   14000a742:	call   0x1400040b0
   14000a747:	mov    QWORD PTR [rsp+0x30],rax
   14000a74c:	test   rax,rax
   14000a74f:	je     0x14000a7c5
   14000a751:	movsxd rdx,edi
   14000a754:	lea    r8,[rip+0x9c25]        # 0x140014380
   14000a75b:	mov    QWORD PTR [r8+rdx*8],rax
   14000a75f:	add    DWORD PTR [rip+0x9c02],0x20        # 0x140014368
   14000a766:	mov    rcx,QWORD PTR [r8+rdx*8]
   14000a76a:	add    rcx,0xb00
   14000a771:	cmp    rax,rcx
   14000a774:	jae    0x14000a790
   14000a776:	mov    BYTE PTR [rax+0x8],0x0
   14000a77a:	mov    QWORD PTR [rax],r12
   14000a77d:	mov    BYTE PTR [rax+0x9],0xa
   14000a781:	and    DWORD PTR [rax+0xc],0x0
   14000a785:	add    rax,0x58
   14000a789:	mov    QWORD PTR [rsp+0x30],rax
   14000a78e:	jmp    0x14000a766
   14000a790:	shl    edi,0x5
   14000a793:	mov    DWORD PTR [rsp+0x20],edi
   14000a797:	movsxd rcx,edi
   14000a79a:	mov    rax,rcx
   14000a79d:	sar    rax,0x5
   14000a7a1:	and    ecx,0x1f
   14000a7a4:	imul   rcx,rcx,0x58
   14000a7a8:	mov    rax,QWORD PTR [r8+rax*8]
   14000a7ac:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   14000a7b1:	mov    ecx,edi
   14000a7b3:	call   0x14000a500
   14000a7b8:	test   eax,eax
   14000a7ba:	cmove  edi,r12d
   14000a7be:	mov    r13d,edi
   14000a7c1:	mov    DWORD PTR [rsp+0x20],edi
   14000a7c5:	mov    ecx,0xb
   14000a7ca:	call   0x140004608
   14000a7cf:	mov    eax,r13d
   14000a7d2:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a7d7:	mov    rdi,QWORD PTR [rsp+0x68]
   14000a7dc:	mov    r12,QWORD PTR [rsp+0x70]
   14000a7e1:	add    rsp,0x40
   14000a7e5:	pop    r15
   14000a7e7:	pop    r14
   14000a7e9:	pop    r13
   14000a7eb:	ret    
   14000a7ec:	sub    rsp,0x38
   14000a7f0:	mov    rax,QWORD PTR [rip+0x7bc9]        # 0x1400123c0
   14000a7f7:	xor    rax,rsp
   14000a7fa:	mov    QWORD PTR [rsp+0x28],rax
   14000a7ff:	lea    r8,[rsp+0x20]
   14000a804:	mov    r9d,0x6
   14000a80a:	mov    edx,0x1004
   14000a80f:	mov    BYTE PTR [rsp+0x26],0x0
   14000a814:	call   QWORD PTR [rip+0x49ee]        # 0x14000f208
   14000a81a:	test   eax,eax
   14000a81c:	jne    0x14000a823
   14000a81e:	or     eax,0xffffffff
   14000a821:	jmp    0x14000a82d
   14000a823:	lea    rcx,[rsp+0x20]
   14000a828:	call   0x14000aac8
   14000a82d:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a832:	xor    rcx,rsp
   14000a835:	call   0x140002350
   14000a83a:	add    rsp,0x38
   14000a83e:	ret    
   14000a83f:	int3   
   14000a840:	rex push rbp
   14000a842:	push   rbx
   14000a843:	push   rsi
   14000a844:	push   rdi
   14000a845:	push   r12
   14000a847:	push   r13
   14000a849:	push   r14
   14000a84b:	push   r15
   14000a84d:	sub    rsp,0x88
   14000a854:	lea    rbp,[rsp+0x40]
   14000a859:	mov    rax,QWORD PTR [rip+0x7b60]        # 0x1400123c0
   14000a860:	xor    rax,rbp
   14000a863:	mov    QWORD PTR [rbp+0x30],rax
   14000a867:	mov    r14,QWORD PTR [rbp+0xb0]
   14000a86e:	mov    r12d,DWORD PTR [r9]
   14000a871:	xor    edi,edi
   14000a873:	mov    rbx,r8
   14000a876:	mov    rsi,rdi
   14000a879:	mov    DWORD PTR [rbp+0x0],edi
   14000a87c:	mov    QWORD PTR [rbp+0x10],r9
   14000a880:	mov    r13d,edx
   14000a883:	mov    r15d,ecx
   14000a886:	mov    QWORD PTR [rbp+0x8],rbx
   14000a88a:	cmp    ecx,edx
   14000a88c:	je     0x14000aaa5
   14000a892:	lea    rdx,[rbp+0x18]
   14000a896:	call   QWORD PTR [rip+0x4854]        # 0x14000f0f0
   14000a89c:	cmp    eax,edi
   14000a89e:	je     0x14000a943
   14000a8a4:	cmp    DWORD PTR [rbp+0x18],0x1
   14000a8a8:	jne    0x14000a943
   14000a8ae:	lea    rdx,[rbp+0x18]
   14000a8b2:	mov    ecx,r13d
   14000a8b5:	call   QWORD PTR [rip+0x4835]        # 0x14000f0f0
   14000a8bb:	cmp    eax,edi
   14000a8bd:	je     0x14000a943
   14000a8c3:	cmp    DWORD PTR [rbp+0x18],0x1
   14000a8c7:	jne    0x14000a943
   14000a8c9:	mov    DWORD PTR [rbp+0x0],0x1
   14000a8d0:	cmp    r12d,0xffffffff
   14000a8d4:	je     0x14000a936
   14000a8d6:	mov    edi,r12d
   14000a8d9:	test   edi,edi
   14000a8db:	jle    0x14000a98a
   14000a8e1:	movsxd rcx,edi
   14000a8e4:	movabs rax,0x7ffffffffffffff0
   14000a8ee:	cmp    rcx,rax
   14000a8f1:	ja     0x14000a98a
   14000a8f7:	lea    rcx,[rcx+rcx*1+0x10]
   14000a8fc:	cmp    rcx,0x400
   14000a903:	ja     0x14000a971
   14000a905:	lea    rax,[rcx+0xf]
   14000a909:	cmp    rax,rcx
   14000a90c:	ja     0x14000a918
   14000a90e:	movabs rax,0xffffffffffffff0
   14000a918:	and    rax,0xfffffffffffffff0
   14000a91c:	call   0x14000e1f0
   14000a921:	sub    rsp,rax
   14000a924:	lea    rbx,[rsp+0x40]
   14000a929:	test   rbx,rbx
   14000a92c:	je     0x14000a96a
   14000a92e:	mov    DWORD PTR [rbx],0xcccc
   14000a934:	jmp    0x14000a984
   14000a936:	mov    rcx,rbx
   14000a939:	call   0x1400070e0
   14000a93e:	lea    edi,[rax+0x1]
   14000a941:	jmp    0x14000a8d9
   14000a943:	mov    r9d,r12d
   14000a946:	mov    r8,rbx
   14000a949:	mov    edx,0x1
   14000a94e:	mov    ecx,r15d
   14000a951:	mov    DWORD PTR [rsp+0x28],edi
   14000a955:	mov    QWORD PTR [rsp+0x20],rdi
   14000a95a:	call   QWORD PTR [rip+0x4888]        # 0x14000f1e8
   14000a960:	mov    edi,eax
   14000a962:	test   eax,eax
   14000a964:	jne    0x14000a8d9
   14000a96a:	xor    eax,eax
   14000a96c:	jmp    0x14000aaa8
   14000a971:	call   0x1400073cc
   14000a976:	mov    rbx,rax
   14000a979:	test   rax,rax
   14000a97c:	je     0x14000a98c
   14000a97e:	mov    DWORD PTR [rax],0xdddd
   14000a984:	add    rbx,0x10
   14000a988:	jmp    0x14000a98c
   14000a98a:	xor    ebx,ebx
   14000a98c:	test   rbx,rbx
   14000a98f:	je     0x14000a96a
   14000a991:	movsxd r8,edi
   14000a994:	xor    edx,edx
   14000a996:	mov    rcx,rbx
   14000a999:	add    r8,r8
   14000a99c:	call   0x140001cf0
   14000a9a1:	mov    r8,QWORD PTR [rbp+0x8]
   14000a9a5:	mov    r9d,r12d
   14000a9a8:	mov    edx,0x1
   14000a9ad:	mov    ecx,r15d
   14000a9b0:	mov    DWORD PTR [rsp+0x28],edi
   14000a9b4:	mov    QWORD PTR [rsp+0x20],rbx
   14000a9b9:	call   QWORD PTR [rip+0x4829]        # 0x14000f1e8
   14000a9bf:	xor    r15d,r15d
   14000a9c2:	cmp    eax,r15d
   14000a9c5:	je     0x14000aa94
   14000a9cb:	cmp    r14,r15
   14000a9ce:	je     0x14000aa0b
   14000a9d0:	mov    eax,DWORD PTR [rbp+0xb8]
   14000a9d6:	mov    QWORD PTR [rsp+0x38],r15
   14000a9db:	mov    QWORD PTR [rsp+0x30],r15
   14000a9e0:	mov    DWORD PTR [rsp+0x28],eax
   14000a9e4:	mov    r9d,edi
   14000a9e7:	mov    r8,rbx
   14000a9ea:	xor    edx,edx
   14000a9ec:	mov    ecx,r13d
   14000a9ef:	mov    QWORD PTR [rsp+0x20],r14
   14000a9f4:	call   QWORD PTR [rip+0x4786]        # 0x14000f180
   14000a9fa:	cmp    eax,r15d
   14000a9fd:	je     0x14000aa94
   14000aa03:	mov    rsi,r14
   14000aa06:	jmp    0x14000aa94
   14000aa0b:	cmp    DWORD PTR [rbp+0x0],r15d
   14000aa0f:	jne    0x14000aa3d
   14000aa11:	mov    QWORD PTR [rsp+0x38],r15
   14000aa16:	mov    QWORD PTR [rsp+0x30],r15
   14000aa1b:	mov    r9d,edi
   14000aa1e:	mov    r8,rbx
   14000aa21:	xor    edx,edx
   14000aa23:	mov    ecx,r13d
   14000aa26:	mov    DWORD PTR [rsp+0x28],r15d
   14000aa2b:	mov    QWORD PTR [rsp+0x20],r15
   14000aa30:	call   QWORD PTR [rip+0x474a]        # 0x14000f180
   14000aa36:	mov    edi,eax
   14000aa38:	cmp    eax,r15d
   14000aa3b:	je     0x14000aa94
   14000aa3d:	movsxd rdx,edi
   14000aa40:	mov    ecx,0x1
   14000aa45:	call   0x1400040b0
   14000aa4a:	mov    rsi,rax
   14000aa4d:	cmp    rax,r15
   14000aa50:	je     0x14000aa94
   14000aa52:	mov    QWORD PTR [rsp+0x38],r15
   14000aa57:	mov    QWORD PTR [rsp+0x30],r15
   14000aa5c:	mov    r9d,edi
   14000aa5f:	mov    r8,rbx
   14000aa62:	xor    edx,edx
   14000aa64:	mov    ecx,r13d
   14000aa67:	mov    DWORD PTR [rsp+0x28],edi
   14000aa6b:	mov    QWORD PTR [rsp+0x20],rax
   14000aa70:	call   QWORD PTR [rip+0x470a]        # 0x14000f180
   14000aa76:	cmp    eax,r15d
   14000aa79:	jne    0x14000aa88
   14000aa7b:	mov    rcx,rsi
   14000aa7e:	call   0x140004244
   14000aa83:	mov    rsi,r15
   14000aa86:	jmp    0x14000aa94
   14000aa88:	cmp    r12d,0xffffffff
   14000aa8c:	je     0x14000aa94
   14000aa8e:	mov    rcx,QWORD PTR [rbp+0x10]
   14000aa92:	mov    DWORD PTR [rcx],eax
   14000aa94:	lea    rcx,[rbx-0x10]
   14000aa98:	cmp    DWORD PTR [rcx],0xdddd
   14000aa9e:	jne    0x14000aaa5
   14000aaa0:	call   0x140004244
   14000aaa5:	mov    rax,rsi
   14000aaa8:	mov    rcx,QWORD PTR [rbp+0x30]
   14000aaac:	xor    rcx,rbp
   14000aaaf:	call   0x140002350
   14000aab4:	lea    rsp,[rbp+0x48]
   14000aab8:	pop    r15
   14000aaba:	pop    r14
   14000aabc:	pop    r13
   14000aabe:	pop    r12
   14000aac0:	pop    rdi
   14000aac1:	pop    rsi
   14000aac2:	pop    rbx
   14000aac3:	pop    rbp
   14000aac4:	ret    
   14000aac5:	int3   
   14000aac6:	int3   
   14000aac7:	int3   
   14000aac8:	xor    edx,edx
   14000aaca:	lea    r8d,[rdx+0xa]
   14000aace:	jmp    0x140009e4c
   14000aad3:	int3   
   14000aad4:	mov    r10,rcx
   14000aad7:	test   r8,r8
   14000aada:	je     0x14000ab18
   14000aadc:	movzx  r9d,BYTE PTR [r10]
   14000aae0:	inc    r10
   14000aae3:	lea    eax,[r9-0x41]
   14000aae7:	cmp    eax,0x19
   14000aaea:	ja     0x14000aaf0
   14000aaec:	add    r9d,0x20
   14000aaf0:	movzx  ecx,BYTE PTR [rdx]
   14000aaf3:	inc    rdx
   14000aaf6:	lea    eax,[rcx-0x41]
   14000aaf9:	cmp    eax,0x19
   14000aafc:	ja     0x14000ab01
   14000aafe:	add    ecx,0x20
   14000ab01:	sub    r8,0x1
   14000ab05:	je     0x14000ab11
   14000ab07:	test   r9d,r9d
   14000ab0a:	je     0x14000ab11
   14000ab0c:	cmp    r9d,ecx
   14000ab0f:	je     0x14000aadc
   14000ab11:	sub    r9d,ecx
   14000ab14:	mov    eax,r9d
   14000ab17:	ret    
   14000ab18:	xor    eax,eax
   14000ab1a:	ret    
   14000ab1b:	int3   
   14000ab1c:	mov    rax,rsp
   14000ab1f:	mov    QWORD PTR [rax+0x8],rbx
   14000ab23:	mov    QWORD PTR [rax+0x10],rbp
   14000ab27:	mov    QWORD PTR [rax+0x18],rsi
   14000ab2b:	push   rdi
   14000ab2c:	sub    rsp,0x50
   14000ab30:	mov    rdi,r8
   14000ab33:	mov    rsi,rdx
   14000ab36:	mov    rbp,rcx
   14000ab39:	test   r8,r8
   14000ab3c:	je     0x14000ac16
   14000ab42:	lea    rcx,[rax-0x28]
   14000ab46:	mov    rdx,r9
   14000ab49:	call   0x140002370
   14000ab4e:	test   rbp,rbp
   14000ab51:	jne    0x14000ab90
   14000ab53:	call   0x140003fbc
   14000ab58:	and    QWORD PTR [rsp+0x20],0x0
   14000ab5e:	xor    r9d,r9d
   14000ab61:	xor    r8d,r8d
   14000ab64:	xor    edx,edx
   14000ab66:	xor    ecx,ecx
   14000ab68:	mov    DWORD PTR [rax],0x16
   14000ab6e:	call   0x140003eec
   14000ab73:	cmp    BYTE PTR [rsp+0x48],0x0
   14000ab78:	je     0x14000ab86
   14000ab7a:	mov    rax,QWORD PTR [rsp+0x40]
   14000ab7f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ab86:	mov    eax,0x7fffffff
   14000ab8b:	jmp    0x14000ac18
   14000ab90:	test   rsi,rsi
   14000ab93:	je     0x14000ab53
   14000ab95:	cmp    rdi,0x7fffffff
   14000ab9c:	ja     0x14000ab53
   14000ab9e:	mov    rax,QWORD PTR [rsp+0x30]
   14000aba3:	cmp    DWORD PTR [rax+0x14],0x0
   14000aba7:	jne    0x14000abcc
   14000aba9:	mov    r8,rdi
   14000abac:	mov    rdx,rsi
   14000abaf:	mov    rcx,rbp
   14000abb2:	call   0x14000aad4
   14000abb7:	cmp    BYTE PTR [rsp+0x48],0x0
   14000abbc:	je     0x14000ac18
   14000abbe:	mov    rcx,QWORD PTR [rsp+0x40]
   14000abc3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000abca:	jmp    0x14000ac18
   14000abcc:	movzx  ecx,BYTE PTR [rbp+0x0]
   14000abd0:	lea    rdx,[rsp+0x30]
   14000abd5:	call   0x14000aedc
   14000abda:	movzx  ecx,BYTE PTR [rsi]
   14000abdd:	lea    rdx,[rsp+0x30]
   14000abe2:	mov    ebx,eax
   14000abe4:	inc    rbp
   14000abe7:	call   0x14000aedc
   14000abec:	inc    rsi
   14000abef:	sub    rdi,0x1
   14000abf3:	je     0x14000abfd
   14000abf5:	test   ebx,ebx
   14000abf7:	je     0x14000abfd
   14000abf9:	cmp    ebx,eax
   14000abfb:	je     0x14000abcc
   14000abfd:	sub    ebx,eax
   14000abff:	cmp    BYTE PTR [rsp+0x48],0x0
   14000ac04:	je     0x14000ac12
   14000ac06:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ac0b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ac12:	mov    eax,ebx
   14000ac14:	jmp    0x14000ac18
   14000ac16:	xor    eax,eax
   14000ac18:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ac1d:	mov    rbp,QWORD PTR [rsp+0x68]
   14000ac22:	mov    rsi,QWORD PTR [rsp+0x70]
   14000ac27:	add    rsp,0x50
   14000ac2b:	pop    rdi
   14000ac2c:	ret    
   14000ac2d:	int3   
   14000ac2e:	int3   
   14000ac2f:	int3   
   14000ac30:	sub    rsp,0x38
   14000ac34:	cmp    DWORD PTR [rip+0x9165],0x0        # 0x140013da0
   14000ac3b:	jne    0x14000ac7e
   14000ac3d:	test   rcx,rcx
   14000ac40:	jne    0x14000ac69
   14000ac42:	call   0x140003fbc
   14000ac47:	and    QWORD PTR [rsp+0x20],0x0
   14000ac4d:	xor    r9d,r9d
   14000ac50:	xor    r8d,r8d
   14000ac53:	xor    edx,edx
   14000ac55:	xor    ecx,ecx
   14000ac57:	mov    DWORD PTR [rax],0x16
   14000ac5d:	call   0x140003eec
   14000ac62:	mov    eax,0x7fffffff
   14000ac67:	jmp    0x14000ac86
   14000ac69:	test   rdx,rdx
   14000ac6c:	je     0x14000ac42
   14000ac6e:	cmp    r8,0x7fffffff
   14000ac75:	ja     0x14000ac42
   14000ac77:	call   0x14000aad4
   14000ac7c:	jmp    0x14000ac86
   14000ac7e:	xor    r9d,r9d
   14000ac81:	call   0x14000ab1c
   14000ac86:	add    rsp,0x38
   14000ac8a:	ret    
   14000ac8b:	int3   
   14000ac8c:	sub    rsp,0x48
   14000ac90:	and    QWORD PTR [rsp+0x30],0x0
   14000ac96:	and    DWORD PTR [rsp+0x28],0x0
   14000ac9b:	mov    r8d,0x3
   14000aca1:	lea    rcx,[rip+0x5970]        # 0x140010618
   14000aca8:	xor    r9d,r9d
   14000acab:	mov    edx,0x40000000
   14000acb0:	mov    DWORD PTR [rsp+0x20],r8d
   14000acb5:	call   QWORD PTR [rip+0x458d]        # 0x14000f248
   14000acbb:	mov    QWORD PTR [rip+0x86d6],rax        # 0x140013398
   14000acc2:	add    rsp,0x48
   14000acc6:	ret    
   14000acc7:	int3   
   14000acc8:	sub    rsp,0x28
   14000accc:	mov    rcx,QWORD PTR [rip+0x86c5]        # 0x140013398
   14000acd3:	cmp    rcx,0xffffffffffffffff
   14000acd7:	je     0x14000ace5
   14000acd9:	cmp    rcx,0xfffffffffffffffe
   14000acdd:	je     0x14000ace5
   14000acdf:	call   QWORD PTR [rip+0x453b]        # 0x14000f220
   14000ace5:	mov    rcx,QWORD PTR [rip+0x86a4]        # 0x140013390
   14000acec:	cmp    rcx,0xffffffffffffffff
   14000acf0:	je     0x14000acfe
   14000acf2:	cmp    rcx,0xfffffffffffffffe
   14000acf6:	je     0x14000acfe
   14000acf8:	call   QWORD PTR [rip+0x4522]        # 0x14000f220
   14000acfe:	add    rsp,0x28
   14000ad02:	ret    
   14000ad03:	int3   
   14000ad04:	mov    QWORD PTR [rsp+0x8],rbx
   14000ad09:	mov    QWORD PTR [rsp+0x10],rsi
   14000ad0e:	push   rdi
   14000ad0f:	sub    rsp,0x20
   14000ad13:	cmp    DWORD PTR [rip+0x9876],0x0        # 0x140014590
   14000ad1a:	mov    rbx,QWORD PTR [rip+0x883f]        # 0x140013560
   14000ad21:	mov    rsi,rcx
   14000ad24:	je     0x14000ad93
   14000ad26:	test   rbx,rbx
   14000ad29:	jne    0x14000ad49
   14000ad2b:	cmp    QWORD PTR [rip+0x883e],rbx        # 0x140013570
   14000ad32:	je     0x14000ad93
   14000ad34:	call   0x14000b164
   14000ad39:	test   eax,eax
   14000ad3b:	jne    0x14000ad93
   14000ad3d:	mov    rbx,QWORD PTR [rip+0x881c]        # 0x140013560
   14000ad44:	test   rbx,rbx
   14000ad47:	je     0x14000ad93
   14000ad49:	test   rsi,rsi
   14000ad4c:	je     0x14000ad93
   14000ad4e:	mov    rcx,rsi
   14000ad51:	call   0x1400070e0
   14000ad56:	mov    rdi,rax
   14000ad59:	mov    rcx,QWORD PTR [rbx]
   14000ad5c:	test   rcx,rcx
   14000ad5f:	je     0x14000ad93
   14000ad61:	call   0x1400070e0
   14000ad66:	cmp    rax,rdi
   14000ad69:	jbe    0x14000ad83
   14000ad6b:	mov    rcx,QWORD PTR [rbx]
   14000ad6e:	cmp    BYTE PTR [rcx+rdi*1],0x3d
   14000ad72:	jne    0x14000ad83
   14000ad74:	mov    r8,rdi
   14000ad77:	mov    rdx,rsi
   14000ad7a:	call   0x14000b15c
   14000ad7f:	test   eax,eax
   14000ad81:	je     0x14000ad89
   14000ad83:	add    rbx,0x8
   14000ad87:	jmp    0x14000ad59
   14000ad89:	mov    rax,QWORD PTR [rbx]
   14000ad8c:	lea    rax,[rax+rdi*1+0x1]
   14000ad91:	jmp    0x14000ad95
   14000ad93:	xor    eax,eax
   14000ad95:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ad9a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ad9f:	add    rsp,0x20
   14000ada3:	pop    rdi
   14000ada4:	ret    
   14000ada5:	int3   
   14000ada6:	int3   
   14000ada7:	int3   
   14000ada8:	mov    QWORD PTR [rsp+0x8],rbx
   14000adad:	mov    QWORD PTR [rsp+0x10],rsi
   14000adb2:	mov    QWORD PTR [rsp+0x18],rdi
   14000adb7:	push   r12
   14000adb9:	sub    rsp,0x30
   14000adbd:	mov    rsi,r8
   14000adc0:	mov    rbx,rdx
   14000adc3:	mov    rdi,rcx
   14000adc6:	mov    ecx,0x7
   14000adcb:	call   0x140004708
   14000add0:	nop
   14000add1:	xor    eax,eax
   14000add3:	test   rdi,rdi
   14000add6:	setne  al
   14000add9:	test   eax,eax
   14000addb:	jne    0x14000ae03
   14000addd:	call   0x140003fbc
   14000ade2:	mov    ebx,0x16
   14000ade7:	mov    DWORD PTR [rax],ebx
   14000ade9:	and    QWORD PTR [rsp+0x20],0x0
   14000adef:	xor    r9d,r9d
   14000adf2:	xor    r8d,r8d
   14000adf5:	xor    edx,edx
   14000adf7:	xor    ecx,ecx
   14000adf9:	call   0x140003eec
   14000adfe:	jmp    0x14000aeb9
   14000ae03:	and    QWORD PTR [rdi],0x0
   14000ae07:	test   rbx,rbx
   14000ae0a:	je     0x14000ae10
   14000ae0c:	and    QWORD PTR [rbx],0x0
   14000ae10:	xor    eax,eax
   14000ae12:	test   rsi,rsi
   14000ae15:	setne  al
   14000ae18:	test   eax,eax
   14000ae1a:	jne    0x14000ae3f
   14000ae1c:	call   0x140003fbc
   14000ae21:	mov    ebx,0x16
   14000ae26:	mov    DWORD PTR [rax],ebx
   14000ae28:	and    QWORD PTR [rsp+0x20],0x0
   14000ae2e:	xor    r9d,r9d
   14000ae31:	xor    r8d,r8d
   14000ae34:	xor    edx,edx
   14000ae36:	xor    ecx,ecx
   14000ae38:	call   0x140003eec
   14000ae3d:	jmp    0x14000aeb9
   14000ae3f:	mov    rcx,rsi
   14000ae42:	call   0x14000ad04
   14000ae47:	mov    rsi,rax
   14000ae4a:	test   rax,rax
   14000ae4d:	jne    0x14000ae53
   14000ae4f:	xor    ebx,ebx
   14000ae51:	jmp    0x14000aeb9
   14000ae53:	mov    rcx,rax
   14000ae56:	call   0x1400070e0
   14000ae5b:	mov    edx,0x1
   14000ae60:	lea    r12,[rdx+rax*1]
   14000ae64:	mov    rcx,r12
   14000ae67:	call   0x140001c94
   14000ae6c:	mov    QWORD PTR [rdi],rax
   14000ae6f:	test   rax,rax
   14000ae72:	jne    0x14000ae88
   14000ae74:	call   0x140003fbc
   14000ae79:	mov    DWORD PTR [rax],0xc
   14000ae7f:	call   0x140003fbc
   14000ae84:	mov    ebx,DWORD PTR [rax]
   14000ae86:	jmp    0x14000aeb9
   14000ae88:	mov    r8,rsi
   14000ae8b:	mov    rdx,r12
   14000ae8e:	mov    rcx,rax
   14000ae91:	call   0x140009454
   14000ae96:	test   eax,eax
   14000ae98:	je     0x14000aeaf
   14000ae9a:	and    QWORD PTR [rsp+0x20],0x0
   14000aea0:	xor    r9d,r9d
   14000aea3:	xor    r8d,r8d
   14000aea6:	xor    edx,edx
   14000aea8:	xor    ecx,ecx
   14000aeaa:	call   0x140003dc4
   14000aeaf:	test   rbx,rbx
   14000aeb2:	je     0x14000aeb7
   14000aeb4:	mov    QWORD PTR [rbx],r12
   14000aeb7:	xor    ebx,ebx
   14000aeb9:	mov    ecx,0x7
   14000aebe:	call   0x140004608
   14000aec3:	mov    eax,ebx
   14000aec5:	mov    rbx,QWORD PTR [rsp+0x40]
   14000aeca:	mov    rsi,QWORD PTR [rsp+0x48]
   14000aecf:	mov    rdi,QWORD PTR [rsp+0x50]
   14000aed4:	add    rsp,0x30
   14000aed8:	pop    r12
   14000aeda:	ret    
   14000aedb:	int3   
   14000aedc:	mov    QWORD PTR [rsp+0x10],rbp
   14000aee1:	push   rdi
   14000aee2:	sub    rsp,0x70
   14000aee6:	movsxd rdi,ecx
   14000aee9:	lea    rcx,[rsp+0x50]
   14000aeee:	call   0x140002370
   14000aef3:	cmp    edi,0x100
   14000aef9:	jae    0x14000af5d
   14000aefb:	mov    rdx,QWORD PTR [rsp+0x50]
   14000af00:	cmp    DWORD PTR [rdx+0x10c],0x1
   14000af07:	jle    0x14000af21
   14000af09:	lea    r8,[rsp+0x50]
   14000af0e:	mov    edx,0x1
   14000af13:	mov    ecx,edi
   14000af15:	call   0x140005aa0
   14000af1a:	mov    rdx,QWORD PTR [rsp+0x50]
   14000af1f:	jmp    0x14000af2f
   14000af21:	mov    rax,QWORD PTR [rdx+0x140]
   14000af28:	movzx  eax,WORD PTR [rax+rdi*2]
   14000af2c:	and    eax,0x1
   14000af2f:	test   eax,eax
   14000af31:	je     0x14000af43
   14000af33:	mov    rax,QWORD PTR [rdx+0x148]
   14000af3a:	movzx  eax,BYTE PTR [rax+rdi*1]
   14000af3e:	jmp    0x14000b02b
   14000af43:	cmp    BYTE PTR [rsp+0x68],0x0
   14000af48:	je     0x14000af56
   14000af4a:	mov    rax,QWORD PTR [rsp+0x60]
   14000af4f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000af56:	mov    eax,edi
   14000af58:	jmp    0x14000b03e
   14000af5d:	mov    rax,QWORD PTR [rsp+0x50]
   14000af62:	cmp    DWORD PTR [rax+0x10c],0x1
   14000af69:	jle    0x14000afa1
   14000af6b:	mov    ebp,edi
   14000af6d:	lea    rdx,[rsp+0x50]
   14000af72:	sar    ebp,0x8
   14000af75:	movzx  ecx,bpl
   14000af79:	call   0x140007034
   14000af7e:	test   eax,eax
   14000af80:	je     0x14000afa1
   14000af82:	mov    BYTE PTR [rsp+0x80],bpl
   14000af8a:	mov    BYTE PTR [rsp+0x81],dil
   14000af92:	mov    BYTE PTR [rsp+0x82],0x0
   14000af9a:	mov    edx,0x2
   14000af9f:	jmp    0x14000afc1
   14000afa1:	call   0x140003fbc
   14000afa6:	mov    edx,0x1
   14000afab:	mov    DWORD PTR [rax],0x2a
   14000afb1:	mov    BYTE PTR [rsp+0x80],dil
   14000afb9:	mov    BYTE PTR [rsp+0x81],0x0
   14000afc1:	mov    rcx,QWORD PTR [rsp+0x50]
   14000afc6:	mov    DWORD PTR [rsp+0x40],0x1
   14000afce:	lea    r9,[rsp+0x80]
   14000afd6:	mov    eax,DWORD PTR [rcx+0x4]
   14000afd9:	mov    r8d,0x100
   14000afdf:	mov    DWORD PTR [rsp+0x38],eax
   14000afe3:	lea    rax,[rsp+0x90]
   14000afeb:	mov    DWORD PTR [rsp+0x30],0x3
   14000aff3:	mov    QWORD PTR [rsp+0x28],rax
   14000aff8:	mov    DWORD PTR [rsp+0x20],edx
   14000affc:	mov    edx,DWORD PTR [rcx+0x14]
   14000afff:	lea    rcx,[rsp+0x50]
   14000b004:	call   0x14000894c
   14000b009:	test   eax,eax
   14000b00b:	je     0x14000af43
   14000b011:	cmp    eax,0x1
   14000b014:	movzx  eax,BYTE PTR [rsp+0x90]
   14000b01c:	je     0x14000b02b
   14000b01e:	movzx  ecx,BYTE PTR [rsp+0x91]
   14000b026:	shl    eax,0x8
   14000b029:	or     eax,ecx
   14000b02b:	cmp    BYTE PTR [rsp+0x68],0x0
   14000b030:	je     0x14000b03e
   14000b032:	mov    rcx,QWORD PTR [rsp+0x60]
   14000b037:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000b03e:	mov    rbp,QWORD PTR [rsp+0x88]
   14000b046:	add    rsp,0x70
   14000b04a:	pop    rdi
   14000b04b:	ret    
   14000b04c:	mov    rax,rsp
   14000b04f:	mov    QWORD PTR [rax+0x8],rbx
   14000b053:	mov    QWORD PTR [rax+0x10],rbp
   14000b057:	mov    QWORD PTR [rax+0x18],rsi
   14000b05b:	push   rdi
   14000b05c:	sub    rsp,0x60
   14000b060:	mov    rsi,rcx
   14000b063:	mov    rdi,rdx
   14000b066:	lea    rcx,[rax-0x28]
   14000b06a:	mov    rdx,r9
   14000b06d:	mov    rbp,r9
   14000b070:	mov    rbx,r8
   14000b073:	call   0x140002370
   14000b078:	test   rbx,rbx
   14000b07b:	jne    0x14000b096
   14000b07d:	cmp    BYTE PTR [rsp+0x58],bl
   14000b081:	je     0x14000b08f
   14000b083:	mov    rax,QWORD PTR [rsp+0x50]
   14000b088:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000b08f:	xor    eax,eax
   14000b091:	jmp    0x14000b145
   14000b096:	test   rsi,rsi
   14000b099:	jne    0x14000b0d5
   14000b09b:	call   0x140003fbc
   14000b0a0:	and    QWORD PTR [rsp+0x20],0x0
   14000b0a6:	xor    r9d,r9d
   14000b0a9:	xor    r8d,r8d
   14000b0ac:	xor    edx,edx
   14000b0ae:	xor    ecx,ecx
   14000b0b0:	mov    DWORD PTR [rax],0x16
   14000b0b6:	call   0x140003eec
   14000b0bb:	cmp    BYTE PTR [rsp+0x58],0x0
   14000b0c0:	je     0x14000b0ce
   14000b0c2:	mov    rax,QWORD PTR [rsp+0x50]
   14000b0c7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000b0ce:	mov    eax,0x7fffffff
   14000b0d3:	jmp    0x14000b145
   14000b0d5:	test   rdi,rdi
   14000b0d8:	je     0x14000b09b
   14000b0da:	cmp    rbx,0x7fffffff
   14000b0e1:	ja     0x14000b09b
   14000b0e3:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b0e8:	cmp    DWORD PTR [rcx+0x8],0x0
   14000b0ec:	jne    0x14000b101
   14000b0ee:	mov    r9,rbp
   14000b0f1:	mov    r8,rbx
   14000b0f4:	mov    rdx,rdi
   14000b0f7:	mov    rcx,rsi
   14000b0fa:	call   0x14000b7c0
   14000b0ff:	jmp    0x14000b132
   14000b101:	mov    eax,DWORD PTR [rcx+0x4]
   14000b104:	mov    edx,DWORD PTR [rcx+0xc]
   14000b107:	lea    rcx,[rsp+0x40]
   14000b10c:	mov    DWORD PTR [rsp+0x38],eax
   14000b110:	mov    DWORD PTR [rsp+0x30],ebx
   14000b114:	mov    r9,rsi
   14000b117:	mov    r8d,0x1001
   14000b11d:	mov    QWORD PTR [rsp+0x28],rdi
   14000b122:	mov    DWORD PTR [rsp+0x20],ebx
   14000b126:	call   0x14000b734
   14000b12b:	test   eax,eax
   14000b12d:	je     0x14000b0bb
   14000b12f:	add    eax,0xfffffffe
   14000b132:	cmp    BYTE PTR [rsp+0x58],0x0
   14000b137:	je     0x14000b145
   14000b139:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b13e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000b145:	lea    r11,[rsp+0x60]
   14000b14a:	mov    rbx,QWORD PTR [r11+0x10]
   14000b14e:	mov    rbp,QWORD PTR [r11+0x18]
   14000b152:	mov    rsi,QWORD PTR [r11+0x20]
   14000b156:	mov    rsp,r11
   14000b159:	pop    rdi
   14000b15a:	ret    
   14000b15b:	int3   
   14000b15c:	xor    r9d,r9d
   14000b15f:	jmp    0x14000b04c
   14000b164:	mov    QWORD PTR [rsp+0x10],rbx
   14000b169:	mov    QWORD PTR [rsp+0x18],rbp
   14000b16e:	push   rdi
   14000b16f:	sub    rsp,0x40
   14000b173:	and    QWORD PTR [rsp+0x50],0x0
   14000b179:	mov    rbx,QWORD PTR [rip+0x83f0]        # 0x140013570
   14000b180:	mov    rax,QWORD PTR [rbx]
   14000b183:	test   rax,rax
   14000b186:	je     0x14000b236
   14000b18c:	or     ebp,0xffffffff
   14000b18f:	and    QWORD PTR [rsp+0x38],0x0
   14000b195:	and    QWORD PTR [rsp+0x30],0x0
   14000b19b:	and    DWORD PTR [rsp+0x28],0x0
   14000b1a0:	and    QWORD PTR [rsp+0x20],0x0
   14000b1a6:	mov    r9d,ebp
   14000b1a9:	mov    r8,rax
   14000b1ac:	xor    edx,edx
   14000b1ae:	xor    ecx,ecx
   14000b1b0:	call   QWORD PTR [rip+0x3fca]        # 0x14000f180
   14000b1b6:	movsxd rdi,eax
   14000b1b9:	test   eax,eax
   14000b1bb:	je     0x14000b252
   14000b1c1:	mov    rcx,rdi
   14000b1c4:	mov    edx,0x1
   14000b1c9:	call   0x1400040b0
   14000b1ce:	mov    QWORD PTR [rsp+0x50],rax
   14000b1d3:	test   rax,rax
   14000b1d6:	je     0x14000b252
   14000b1d8:	and    QWORD PTR [rsp+0x38],0x0
   14000b1de:	and    QWORD PTR [rsp+0x30],0x0
   14000b1e4:	mov    r8,QWORD PTR [rbx]
   14000b1e7:	mov    r9d,ebp
   14000b1ea:	xor    edx,edx
   14000b1ec:	xor    ecx,ecx
   14000b1ee:	mov    DWORD PTR [rsp+0x28],edi
   14000b1f2:	mov    QWORD PTR [rsp+0x20],rax
   14000b1f7:	call   QWORD PTR [rip+0x3f83]        # 0x14000f180
   14000b1fd:	test   eax,eax
   14000b1ff:	je     0x14000b248
   14000b201:	lea    rcx,[rsp+0x50]
   14000b206:	xor    edx,edx
   14000b208:	call   0x14000b8d8
   14000b20d:	test   eax,eax
   14000b20f:	jns    0x14000b226
   14000b211:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b216:	test   rcx,rcx
   14000b219:	je     0x14000b226
   14000b21b:	call   0x140004244
   14000b220:	and    QWORD PTR [rsp+0x50],0x0
   14000b226:	add    rbx,0x8
   14000b22a:	mov    rax,QWORD PTR [rbx]
   14000b22d:	test   rax,rax
   14000b230:	jne    0x14000b18f
   14000b236:	xor    eax,eax
   14000b238:	mov    rbx,QWORD PTR [rsp+0x58]
   14000b23d:	mov    rbp,QWORD PTR [rsp+0x60]
   14000b242:	add    rsp,0x40
   14000b246:	pop    rdi
   14000b247:	ret    
   14000b248:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b24d:	call   0x140004244
   14000b252:	mov    eax,ebp
   14000b254:	jmp    0x14000b238
   14000b256:	int3   
   14000b257:	int3   
   14000b258:	rex push rbp
   14000b25a:	push   rbx
   14000b25b:	push   rsi
   14000b25c:	push   rdi
   14000b25d:	push   r12
   14000b25f:	push   r13
   14000b261:	push   r14
   14000b263:	push   r15
   14000b265:	sub    rsp,0x68
   14000b269:	lea    rbp,[rsp+0x30]
   14000b26e:	mov    rax,QWORD PTR [rip+0x714b]        # 0x1400123c0
   14000b275:	xor    rax,rbp
   14000b278:	mov    QWORD PTR [rbp+0x28],rax
   14000b27c:	mov    rdi,QWORD PTR [rbp+0xa8]
   14000b283:	mov    r10d,edx
   14000b286:	mov    DWORD PTR [rbp+0x0],edx
   14000b289:	mov    edx,DWORD PTR [rip+0x90cd]        # 0x14001435c
   14000b28f:	mov    r11d,0x2
   14000b295:	xor    ebx,ebx
   14000b297:	mov    r15,r9
   14000b29a:	mov    DWORD PTR [rbp+0x4],r8d
   14000b29e:	mov    r14,rcx
   14000b2a1:	mov    QWORD PTR [rbp+0x8],rdi
   14000b2a5:	lea    r12d,[r11-0x1]
   14000b2a9:	cmp    edx,ebx
   14000b2ab:	jne    0x14000b2fc
   14000b2ad:	lea    r8,[rip+0x4938]        # 0x14000fbec
   14000b2b4:	mov    r9d,r12d
   14000b2b7:	xor    edx,edx
   14000b2b9:	xor    ecx,ecx
   14000b2bb:	mov    DWORD PTR [rsp+0x28],r12d
   14000b2c0:	mov    QWORD PTR [rsp+0x20],r8
   14000b2c5:	call   QWORD PTR [rip+0x3f8d]        # 0x14000f258
   14000b2cb:	cmp    eax,ebx
   14000b2cd:	je     0x14000b2d9
   14000b2cf:	mov    edx,r12d
   14000b2d2:	lea    r11d,[r12+0x1]
   14000b2d7:	jmp    0x14000b2f2
   14000b2d9:	call   QWORD PTR [rip+0x3df9]        # 0x14000f0d8
   14000b2df:	mov    edx,DWORD PTR [rip+0x9077]        # 0x14001435c
   14000b2e5:	mov    r11d,0x2
   14000b2eb:	cmp    eax,0x78
   14000b2ee:	cmove  edx,r11d
   14000b2f2:	mov    r10d,DWORD PTR [rbp+0x0]
   14000b2f6:	mov    DWORD PTR [rip+0x9060],edx        # 0x14001435c
   14000b2fc:	mov    r9d,DWORD PTR [rbp+0xa0]
   14000b303:	cmp    r9d,ebx
   14000b306:	jle    0x14000b361
   14000b308:	mov    ecx,r9d
   14000b30b:	mov    rax,r15
   14000b30e:	sub    ecx,r12d
   14000b311:	or     esi,0xffffffff
   14000b314:	cmp    BYTE PTR [rax],bl
   14000b316:	je     0x14000b321
   14000b318:	add    rax,r12
   14000b31b:	cmp    ecx,ebx
   14000b31d:	jne    0x14000b30e
   14000b31f:	mov    ecx,esi
   14000b321:	mov    eax,esi
   14000b323:	sub    eax,ecx
   14000b325:	add    r9d,eax
   14000b328:	mov    DWORD PTR [rbp+0xa0],r9d
   14000b32f:	mov    r8d,DWORD PTR [rbp+0xb0]
   14000b336:	cmp    r8d,ebx
   14000b339:	jle    0x14000b370
   14000b33b:	mov    ecx,r8d
   14000b33e:	mov    rax,rdi
   14000b341:	sub    ecx,r12d
   14000b344:	cmp    BYTE PTR [rax],bl
   14000b346:	je     0x14000b351
   14000b348:	add    rax,r12
   14000b34b:	cmp    ecx,ebx
   14000b34d:	jne    0x14000b341
   14000b34f:	mov    ecx,esi
   14000b351:	mov    eax,esi
   14000b353:	sub    eax,ecx
   14000b355:	add    r8d,eax
   14000b358:	mov    DWORD PTR [rbp+0xb0],r8d
   14000b35f:	jmp    0x14000b375
   14000b361:	or     esi,0xffffffff
   14000b364:	cmp    r9d,esi
   14000b367:	jge    0x14000b32f
   14000b369:	xor    eax,eax
   14000b36b:	jmp    0x14000b715
   14000b370:	cmp    r8d,esi
   14000b373:	jl     0x14000b369
   14000b375:	cmp    edx,r11d
   14000b378:	je     0x14000b62d
   14000b37e:	cmp    edx,ebx
   14000b380:	je     0x14000b62d
   14000b386:	cmp    edx,r12d
   14000b389:	jne    0x14000b369
   14000b38b:	mov    r13d,DWORD PTR [rbp+0xb8]
   14000b392:	cmp    r13d,ebx
   14000b395:	jne    0x14000b39e
   14000b397:	mov    rcx,QWORD PTR [r14]
   14000b39a:	mov    r13d,DWORD PTR [rcx+0x4]
   14000b39e:	cmp    r9d,ebx
   14000b3a1:	je     0x14000b3ac
   14000b3a3:	cmp    r8d,ebx
   14000b3a6:	jne    0x14000b457
   14000b3ac:	cmp    r9d,r8d
   14000b3af:	jne    0x14000b3b9
   14000b3b1:	mov    eax,r11d
   14000b3b4:	jmp    0x14000b715
   14000b3b9:	cmp    r8d,r12d
   14000b3bc:	jle    0x14000b3c6
   14000b3be:	mov    eax,r12d
   14000b3c1:	jmp    0x14000b715
   14000b3c6:	cmp    r9d,r12d
   14000b3c9:	jle    0x14000b3d5
   14000b3cb:	mov    eax,0x3
   14000b3d0:	jmp    0x14000b715
   14000b3d5:	lea    rdx,[rbp+0x10]
   14000b3d9:	mov    ecx,r13d
   14000b3dc:	call   QWORD PTR [rip+0x3d0e]        # 0x14000f0f0
   14000b3e2:	cmp    eax,ebx
   14000b3e4:	je     0x14000b369
   14000b3e6:	mov    r9d,DWORD PTR [rbp+0xa0]
   14000b3ed:	cmp    r9d,ebx
   14000b3f0:	jle    0x14000b424
   14000b3f2:	cmp    DWORD PTR [rbp+0x10],0x2
   14000b3f6:	jb     0x14000b3cb
   14000b3f8:	cmp    BYTE PTR [rbp+0x16],bl
   14000b3fb:	lea    rax,[rbp+0x16]
   14000b3ff:	je     0x14000b3cb
   14000b401:	cmp    BYTE PTR [rax+0x1],bl
   14000b404:	je     0x14000b3cb
   14000b406:	mov    cl,BYTE PTR [r15]
   14000b409:	cmp    cl,BYTE PTR [rax]
   14000b40b:	jb     0x14000b412
   14000b40d:	cmp    cl,BYTE PTR [rax+0x1]
   14000b410:	jbe    0x14000b41a
   14000b412:	add    rax,0x2
   14000b416:	cmp    BYTE PTR [rax],bl
   14000b418:	jmp    0x14000b3ff
   14000b41a:	mov    eax,0x2
   14000b41f:	jmp    0x14000b715
   14000b424:	cmp    DWORD PTR [rbp+0xb0],ebx
   14000b42a:	jle    0x14000b457
   14000b42c:	cmp    DWORD PTR [rbp+0x10],0x2
   14000b430:	jb     0x14000b3be
   14000b432:	cmp    BYTE PTR [rbp+0x16],bl
   14000b435:	lea    rax,[rbp+0x16]
   14000b439:	je     0x14000b3be
   14000b43b:	cmp    BYTE PTR [rax+0x1],bl
   14000b43e:	je     0x14000b3be
   14000b444:	mov    cl,BYTE PTR [rdi]
   14000b446:	cmp    cl,BYTE PTR [rax]
   14000b448:	jb     0x14000b44f
   14000b44a:	cmp    cl,BYTE PTR [rax+0x1]
   14000b44d:	jbe    0x14000b41a
   14000b44f:	add    rax,0x2
   14000b453:	cmp    BYTE PTR [rax],bl
   14000b455:	jmp    0x14000b439
   14000b457:	mov    r8,r15
   14000b45a:	mov    edx,0x9
   14000b45f:	mov    ecx,r13d
   14000b462:	mov    DWORD PTR [rsp+0x28],ebx
   14000b466:	mov    QWORD PTR [rsp+0x20],rbx
   14000b46b:	call   QWORD PTR [rip+0x3d77]        # 0x14000f1e8
   14000b471:	movsxd r14,eax
   14000b474:	cmp    r14d,ebx
   14000b477:	je     0x14000b369
   14000b47d:	movabs r8,0xffffffffffffff0
   14000b487:	jle    0x14000b4ed
   14000b489:	xor    edx,edx
   14000b48b:	lea    rax,[rdx-0x20]
   14000b48f:	div    r14
   14000b492:	cmp    rax,0x2
   14000b496:	jb     0x14000b4ed
   14000b498:	lea    rcx,[r14+r14*1+0x10]
   14000b49d:	cmp    rcx,0x400
   14000b4a4:	ja     0x14000b4d4
   14000b4a6:	lea    rax,[rcx+0xf]
   14000b4aa:	cmp    rax,rcx
   14000b4ad:	ja     0x14000b4b2
   14000b4af:	mov    rax,r8
   14000b4b2:	and    rax,0xfffffffffffffff0
   14000b4b6:	call   0x14000e1f0
   14000b4bb:	sub    rsp,rax
   14000b4be:	lea    rsi,[rsp+0x30]
   14000b4c3:	cmp    rsi,rbx
   14000b4c6:	je     0x14000b369
   14000b4cc:	mov    DWORD PTR [rsi],0xcccc
   14000b4d2:	jmp    0x14000b4e7
   14000b4d4:	call   0x1400073cc
   14000b4d9:	mov    rsi,rax
   14000b4dc:	cmp    rax,rbx
   14000b4df:	je     0x14000b4f0
   14000b4e1:	mov    DWORD PTR [rax],0xdddd
   14000b4e7:	add    rsi,0x10
   14000b4eb:	jmp    0x14000b4f0
   14000b4ed:	mov    rsi,rbx
   14000b4f0:	cmp    rsi,rbx
   14000b4f3:	je     0x14000b369
   14000b4f9:	mov    r9d,DWORD PTR [rbp+0xa0]
   14000b500:	mov    r8,r15
   14000b503:	mov    edx,r12d
   14000b506:	mov    ecx,r13d
   14000b509:	mov    DWORD PTR [rsp+0x28],r14d
   14000b50e:	mov    QWORD PTR [rsp+0x20],rsi
   14000b513:	call   QWORD PTR [rip+0x3ccf]        # 0x14000f1e8
   14000b519:	cmp    eax,ebx
   14000b51b:	je     0x14000b615
   14000b521:	mov    r9d,DWORD PTR [rbp+0xb0]
   14000b528:	mov    r8,rdi
   14000b52b:	mov    edx,0x9
   14000b530:	mov    ecx,r13d
   14000b533:	mov    DWORD PTR [rsp+0x28],ebx
   14000b537:	mov    QWORD PTR [rsp+0x20],rbx
   14000b53c:	call   QWORD PTR [rip+0x3ca6]        # 0x14000f1e8
   14000b542:	movsxd r12,eax
   14000b545:	cmp    r12d,ebx
   14000b548:	je     0x14000b615
   14000b54e:	jle    0x14000b5b7
   14000b550:	xor    edx,edx
   14000b552:	lea    rax,[rdx-0x20]
   14000b556:	div    r12
   14000b559:	cmp    rax,0x2
   14000b55d:	jb     0x14000b5b7
   14000b55f:	lea    rcx,[r12+r12*1+0x10]
   14000b564:	cmp    rcx,0x400
   14000b56b:	ja     0x14000b59e
   14000b56d:	lea    rax,[rcx+0xf]
   14000b571:	cmp    rax,rcx
   14000b574:	ja     0x14000b580
   14000b576:	movabs rax,0xffffffffffffff0
   14000b580:	and    rax,0xfffffffffffffff0
   14000b584:	call   0x14000e1f0
   14000b589:	sub    rsp,rax
   14000b58c:	lea    rdi,[rsp+0x30]
   14000b591:	cmp    rdi,rbx
   14000b594:	je     0x14000b615
   14000b596:	mov    DWORD PTR [rdi],0xcccc
   14000b59c:	jmp    0x14000b5b1
   14000b59e:	call   0x1400073cc
   14000b5a3:	mov    rdi,rax
   14000b5a6:	cmp    rax,rbx
   14000b5a9:	je     0x14000b5ba
   14000b5ab:	mov    DWORD PTR [rax],0xdddd
   14000b5b1:	add    rdi,0x10
   14000b5b5:	jmp    0x14000b5ba
   14000b5b7:	mov    rdi,rbx
   14000b5ba:	cmp    rdi,rbx
   14000b5bd:	je     0x14000b615
   14000b5bf:	mov    r9d,DWORD PTR [rbp+0xb0]
   14000b5c6:	mov    r8,QWORD PTR [rbp+0x8]
   14000b5ca:	mov    edx,0x1
   14000b5cf:	mov    ecx,r13d
   14000b5d2:	mov    DWORD PTR [rsp+0x28],r12d
   14000b5d7:	mov    QWORD PTR [rsp+0x20],rdi
   14000b5dc:	call   QWORD PTR [rip+0x3c06]        # 0x14000f1e8
   14000b5e2:	cmp    eax,ebx
   14000b5e4:	je     0x14000b604
   14000b5e6:	mov    edx,DWORD PTR [rbp+0x4]
   14000b5e9:	mov    ecx,DWORD PTR [rbp+0x0]
   14000b5ec:	mov    r9d,r14d
   14000b5ef:	mov    r8,rsi
   14000b5f2:	mov    DWORD PTR [rsp+0x28],r12d
   14000b5f7:	mov    QWORD PTR [rsp+0x20],rdi
   14000b5fc:	call   QWORD PTR [rip+0x3c56]        # 0x14000f258
   14000b602:	mov    ebx,eax
   14000b604:	lea    rcx,[rdi-0x10]
   14000b608:	cmp    DWORD PTR [rcx],0xdddd
   14000b60e:	jne    0x14000b615
   14000b610:	call   0x140004244
   14000b615:	lea    rcx,[rsi-0x10]
   14000b619:	cmp    DWORD PTR [rcx],0xdddd
   14000b61f:	jne    0x14000b626
   14000b621:	call   0x140004244
   14000b626:	mov    eax,ebx
   14000b628:	jmp    0x14000b715
   14000b62d:	mov    rdi,rbx
   14000b630:	mov    r13,rbx
   14000b633:	cmp    r10d,ebx
   14000b636:	jne    0x14000b643
   14000b638:	mov    rax,QWORD PTR [r14]
   14000b63b:	mov    r10d,DWORD PTR [rax+0x14]
   14000b63f:	mov    DWORD PTR [rbp+0x0],r10d
   14000b643:	mov    r12d,DWORD PTR [rbp+0xb8]
   14000b64a:	cmp    r12d,ebx
   14000b64d:	jne    0x14000b656
   14000b64f:	mov    rax,QWORD PTR [r14]
   14000b652:	mov    r12d,DWORD PTR [rax+0x4]
   14000b656:	mov    ecx,r10d
   14000b659:	call   0x14000a7ec
   14000b65e:	mov    r14d,eax
   14000b661:	cmp    eax,esi
   14000b663:	je     0x14000b369
   14000b669:	cmp    eax,r12d
   14000b66c:	je     0x14000b6d3
   14000b66e:	lea    r9,[rbp+0xa0]
   14000b675:	mov    r8,r15
   14000b678:	mov    edx,eax
   14000b67a:	mov    ecx,r12d
   14000b67d:	mov    DWORD PTR [rsp+0x28],ebx
   14000b681:	mov    QWORD PTR [rsp+0x20],rbx
   14000b686:	call   0x14000a840
   14000b68b:	mov    rdi,rax
   14000b68e:	cmp    rax,rbx
   14000b691:	je     0x14000b369
   14000b697:	mov    r8,QWORD PTR [rbp+0x8]
   14000b69b:	lea    r9,[rbp+0xb0]
   14000b6a2:	mov    edx,r14d
   14000b6a5:	mov    ecx,r12d
   14000b6a8:	mov    DWORD PTR [rsp+0x28],ebx
   14000b6ac:	mov    QWORD PTR [rsp+0x20],rbx
   14000b6b1:	call   0x14000a840
   14000b6b6:	mov    r13,rax
   14000b6b9:	cmp    rax,rbx
   14000b6bc:	jne    0x14000b6cb
   14000b6be:	mov    rcx,rdi
   14000b6c1:	call   0x140004244
   14000b6c6:	jmp    0x14000b369
   14000b6cb:	mov    r15,rdi
   14000b6ce:	mov    r8,rax
   14000b6d1:	jmp    0x14000b6d7
   14000b6d3:	mov    r8,QWORD PTR [rbp+0x8]
   14000b6d7:	mov    eax,DWORD PTR [rbp+0xb0]
   14000b6dd:	mov    r9d,DWORD PTR [rbp+0xa0]
   14000b6e4:	mov    edx,DWORD PTR [rbp+0x4]
   14000b6e7:	mov    ecx,DWORD PTR [rbp+0x0]
   14000b6ea:	mov    DWORD PTR [rsp+0x28],eax
   14000b6ee:	mov    QWORD PTR [rsp+0x20],r8
   14000b6f3:	mov    r8,r15
   14000b6f6:	call   QWORD PTR [rip+0x3b54]        # 0x14000f250
   14000b6fc:	mov    esi,eax
   14000b6fe:	cmp    rdi,rbx
   14000b701:	je     0x14000b713
   14000b703:	mov    rcx,rdi
   14000b706:	call   0x140004244
   14000b70b:	mov    rcx,r13
   14000b70e:	call   0x140004244
   14000b713:	mov    eax,esi
   14000b715:	mov    rcx,QWORD PTR [rbp+0x28]
   14000b719:	xor    rcx,rbp
   14000b71c:	call   0x140002350
   14000b721:	lea    rsp,[rbp+0x38]
   14000b725:	pop    r15
   14000b727:	pop    r14
   14000b729:	pop    r13
   14000b72b:	pop    r12
   14000b72d:	pop    rdi
   14000b72e:	pop    rsi
   14000b72f:	pop    rbx
   14000b730:	pop    rbp
   14000b731:	ret    
   14000b732:	int3   
   14000b733:	int3   
   14000b734:	mov    QWORD PTR [rsp+0x8],rbx
   14000b739:	mov    QWORD PTR [rsp+0x10],rsi
   14000b73e:	push   rdi
   14000b73f:	sub    rsp,0x60
   14000b743:	mov    esi,edx
   14000b745:	mov    rdx,rcx
   14000b748:	lea    rcx,[rsp+0x40]
   14000b74d:	mov    rbx,r9
   14000b750:	mov    edi,r8d
   14000b753:	call   0x140002370
   14000b758:	mov    r11d,DWORD PTR [rsp+0xa8]
   14000b760:	mov    eax,DWORD PTR [rsp+0xa0]
   14000b767:	lea    rcx,[rsp+0x40]
   14000b76c:	mov    DWORD PTR [rsp+0x38],r11d
   14000b771:	mov    DWORD PTR [rsp+0x30],eax
   14000b775:	mov    rax,QWORD PTR [rsp+0x98]
   14000b77d:	mov    QWORD PTR [rsp+0x28],rax
   14000b782:	mov    eax,DWORD PTR [rsp+0x90]
   14000b789:	mov    r9,rbx
   14000b78c:	mov    r8d,edi
   14000b78f:	mov    edx,esi
   14000b791:	mov    DWORD PTR [rsp+0x20],eax
   14000b795:	call   0x14000b258
   14000b79a:	cmp    BYTE PTR [rsp+0x58],0x0
   14000b79f:	je     0x14000b7ad
   14000b7a1:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b7a6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000b7ad:	mov    rbx,QWORD PTR [rsp+0x70]
   14000b7b2:	mov    rsi,QWORD PTR [rsp+0x78]
   14000b7b7:	add    rsp,0x60
   14000b7bb:	pop    rdi
   14000b7bc:	ret    
   14000b7bd:	int3   
   14000b7be:	int3   
   14000b7bf:	int3   
   14000b7c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b7c5:	mov    QWORD PTR [rsp+0x10],rsi
   14000b7ca:	push   rdi
   14000b7cb:	sub    rsp,0x60
   14000b7cf:	mov    rsi,rcx
   14000b7d2:	mov    rdi,rdx
   14000b7d5:	lea    rcx,[rsp+0x40]
   14000b7da:	mov    rdx,r9
   14000b7dd:	mov    rbx,r8
   14000b7e0:	call   0x140002370
   14000b7e5:	test   rbx,rbx
   14000b7e8:	jne    0x14000b803
   14000b7ea:	cmp    BYTE PTR [rsp+0x58],bl
   14000b7ee:	je     0x14000b7fc
   14000b7f0:	mov    rax,QWORD PTR [rsp+0x50]
   14000b7f5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000b7fc:	xor    eax,eax
   14000b7fe:	jmp    0x14000b8c5
   14000b803:	test   rsi,rsi
   14000b806:	jne    0x14000b845
   14000b808:	call   0x140003fbc
   14000b80d:	and    QWORD PTR [rsp+0x20],0x0
   14000b813:	xor    r9d,r9d
   14000b816:	xor    r8d,r8d
   14000b819:	xor    edx,edx
   14000b81b:	xor    ecx,ecx
   14000b81d:	mov    DWORD PTR [rax],0x16
   14000b823:	call   0x140003eec
   14000b828:	cmp    BYTE PTR [rsp+0x58],0x0
   14000b82d:	je     0x14000b83b
   14000b82f:	mov    rax,QWORD PTR [rsp+0x50]
   14000b834:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000b83b:	mov    eax,0x7fffffff
   14000b840:	jmp    0x14000b8c5
   14000b845:	test   rdi,rdi
   14000b848:	je     0x14000b808
   14000b84a:	cmp    rbx,0x7fffffff
   14000b851:	ja     0x14000b808
   14000b853:	mov    rax,QWORD PTR [rsp+0x40]
   14000b858:	mov    edx,DWORD PTR [rax+0x10]
   14000b85b:	test   edx,edx
   14000b85d:	jne    0x14000b874
   14000b85f:	lea    r9,[rsp+0x40]
   14000b864:	mov    r8,rbx
   14000b867:	mov    rdx,rdi
   14000b86a:	mov    rcx,rsi
   14000b86d:	call   0x14000ab1c
   14000b872:	jmp    0x14000b8b2
   14000b874:	mov    eax,DWORD PTR [rax+0x8]
   14000b877:	lea    rcx,[rsp+0x40]
   14000b87c:	mov    r9,rsi
   14000b87f:	mov    DWORD PTR [rsp+0x38],eax
   14000b883:	mov    DWORD PTR [rsp+0x30],ebx
   14000b887:	mov    r8d,0x1001
   14000b88d:	mov    QWORD PTR [rsp+0x28],rdi
   14000b892:	mov    DWORD PTR [rsp+0x20],ebx
   14000b896:	call   0x14000b734
   14000b89b:	test   eax,eax
   14000b89d:	jne    0x14000b8af
   14000b89f:	call   0x140003fbc
   14000b8a4:	mov    DWORD PTR [rax],0x16
   14000b8aa:	jmp    0x14000b828
   14000b8af:	add    eax,0xfffffffe
   14000b8b2:	cmp    BYTE PTR [rsp+0x58],0x0
   14000b8b7:	je     0x14000b8c5
   14000b8b9:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b8be:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000b8c5:	mov    rbx,QWORD PTR [rsp+0x70]
   14000b8ca:	mov    rsi,QWORD PTR [rsp+0x78]
   14000b8cf:	add    rsp,0x60
   14000b8d3:	pop    rdi
   14000b8d4:	ret    
   14000b8d5:	int3   
   14000b8d6:	int3   
   14000b8d7:	int3   
   14000b8d8:	mov    QWORD PTR [rsp+0x18],rbx
   14000b8dd:	mov    DWORD PTR [rsp+0x10],edx
   14000b8e1:	push   rbp
   14000b8e2:	push   rsi
   14000b8e3:	push   rdi
   14000b8e4:	push   r12
   14000b8e6:	push   r13
   14000b8e8:	push   r14
   14000b8ea:	push   r15
   14000b8ec:	sub    rsp,0x30
   14000b8f0:	xor    r13d,r13d
   14000b8f3:	mov    ebp,edx
   14000b8f5:	mov    r14,rcx
   14000b8f8:	mov    ebx,r13d
   14000b8fb:	cmp    rcx,r13
   14000b8fe:	jne    0x14000b924
   14000b900:	call   0x140003fbc
   14000b905:	xor    r9d,r9d
   14000b908:	xor    r8d,r8d
   14000b90b:	xor    edx,edx
   14000b90d:	xor    ecx,ecx
   14000b90f:	mov    QWORD PTR [rsp+0x20],r13
   14000b914:	mov    DWORD PTR [rax],0x16
   14000b91a:	call   0x140003eec
   14000b91f:	jmp    0x14000ba0e
   14000b924:	mov    r12,QWORD PTR [rcx]
   14000b927:	cmp    r12,r13
   14000b92a:	je     0x14000ba03
   14000b930:	mov    edx,0x3d
   14000b935:	mov    rcx,r12
   14000b938:	call   0x14000bdf0
   14000b93d:	mov    rdi,rax
   14000b940:	mov    QWORD PTR [rsp+0x70],rax
   14000b945:	cmp    rax,r13
   14000b948:	je     0x14000ba03
   14000b94e:	cmp    r12,rax
   14000b951:	je     0x14000ba03
   14000b957:	cmp    BYTE PTR [rax+0x1],r13b
   14000b95b:	mov    rsi,QWORD PTR [rip+0x7bfe]        # 0x140013560
   14000b962:	mov    r15d,r13d
   14000b965:	sete   r15b
   14000b969:	cmp    rsi,QWORD PTR [rip+0x7bf8]        # 0x140013568
   14000b970:	jne    0x14000b9e2
   14000b972:	mov    rbp,rsi
   14000b975:	mov    eax,r13d
   14000b978:	cmp    rsi,r13
   14000b97b:	jne    0x14000b988
   14000b97d:	mov    rsi,r13
   14000b980:	jmp    0x14000b9d7
   14000b982:	add    rsi,0x8
   14000b986:	inc    eax
   14000b988:	cmp    QWORD PTR [rsi],r13
   14000b98b:	jne    0x14000b982
   14000b98d:	inc    eax
   14000b98f:	mov    edx,0x8
   14000b994:	movsxd rcx,eax
   14000b997:	call   0x1400040b0
   14000b99c:	mov    rdi,rax
   14000b99f:	mov    rsi,rax
   14000b9a2:	cmp    rax,r13
   14000b9a5:	jne    0x14000b9c6
   14000b9a7:	mov    ecx,0x9
   14000b9ac:	call   0x140002608
   14000b9b1:	jmp    0x14000b9c6
   14000b9b3:	mov    rcx,rax
   14000b9b6:	call   0x14000bc88
   14000b9bb:	mov    QWORD PTR [rdi],rax
   14000b9be:	add    rdi,0x8
   14000b9c2:	add    rbp,0x8
   14000b9c6:	mov    rax,QWORD PTR [rbp+0x0]
   14000b9ca:	cmp    rax,r13
   14000b9cd:	jne    0x14000b9b3
   14000b9cf:	mov    QWORD PTR [rdi],r13
   14000b9d2:	mov    rdi,QWORD PTR [rsp+0x70]
   14000b9d7:	mov    ebp,DWORD PTR [rsp+0x78]
   14000b9db:	mov    QWORD PTR [rip+0x7b7e],rsi        # 0x140013560
   14000b9e2:	cmp    rsi,r13
   14000b9e5:	jne    0x14000ba74
   14000b9eb:	cmp    ebp,r13d
   14000b9ee:	je     0x14000ba29
   14000b9f0:	cmp    QWORD PTR [rip+0x7b79],r13        # 0x140013570
   14000b9f7:	je     0x14000ba29
   14000b9f9:	call   0x14000b164
   14000b9fe:	cmp    eax,r13d
   14000ba01:	je     0x14000ba6d
   14000ba03:	call   0x140003fbc
   14000ba08:	mov    DWORD PTR [rax],0x16
   14000ba0e:	or     eax,0xffffffff
   14000ba11:	mov    rbx,QWORD PTR [rsp+0x80]
   14000ba19:	add    rsp,0x30
   14000ba1d:	pop    r15
   14000ba1f:	pop    r14
   14000ba21:	pop    r13
   14000ba23:	pop    r12
   14000ba25:	pop    rdi
   14000ba26:	pop    rsi
   14000ba27:	pop    rbp
   14000ba28:	ret    
   14000ba29:	cmp    r15d,r13d
   14000ba2c:	je     0x14000ba32
   14000ba2e:	xor    eax,eax
   14000ba30:	jmp    0x14000ba11
   14000ba32:	mov    ecx,0x8
   14000ba37:	call   0x140004044
   14000ba3c:	mov    QWORD PTR [rip+0x7b1d],rax        # 0x140013560
   14000ba43:	cmp    rax,r13
   14000ba46:	je     0x14000ba0e
   14000ba48:	mov    QWORD PTR [rax],r13
   14000ba4b:	cmp    QWORD PTR [rip+0x7b1e],r13        # 0x140013570
   14000ba52:	jne    0x14000ba6d
   14000ba54:	mov    ecx,0x8
   14000ba59:	call   0x140004044
   14000ba5e:	mov    QWORD PTR [rip+0x7b0b],rax        # 0x140013570
   14000ba65:	cmp    rax,r13
   14000ba68:	je     0x14000ba0e
   14000ba6a:	mov    QWORD PTR [rax],r13
   14000ba6d:	mov    rsi,QWORD PTR [rip+0x7aec]        # 0x140013560
   14000ba74:	mov    rbp,rsi
   14000ba77:	cmp    rsi,r13
   14000ba7a:	je     0x14000ba0e
   14000ba7c:	mov    rcx,QWORD PTR [rsi]
   14000ba7f:	mov    eax,edi
   14000ba81:	mov    rdi,rsi
   14000ba84:	sub    eax,r12d
   14000ba87:	movsxd r13,eax
   14000ba8a:	test   rcx,rcx
   14000ba8d:	je     0x14000bace
   14000ba8f:	mov    rdx,rcx
   14000ba92:	mov    r8,r13
   14000ba95:	mov    rcx,r12
   14000ba98:	call   0x14000b15c
   14000ba9d:	test   eax,eax
   14000ba9f:	jne    0x14000babb
   14000baa1:	mov    rax,QWORD PTR [rdi]
   14000baa4:	cmp    BYTE PTR [r13+rax*1+0x0],0x3d
   14000baaa:	je     0x14000bb52
   14000bab0:	cmp    BYTE PTR [r13+rax*1+0x0],bl
   14000bab5:	je     0x14000bb52
   14000babb:	add    rdi,0x8
   14000babf:	mov    rcx,QWORD PTR [rdi]
   14000bac2:	test   rcx,rcx
   14000bac5:	jne    0x14000ba8f
   14000bac7:	mov    rsi,QWORD PTR [rip+0x7a92]        # 0x140013560
   14000bace:	sub    rdi,rsi
   14000bad1:	sar    rdi,0x3
   14000bad5:	neg    edi
   14000bad7:	xor    r13d,r13d
   14000bada:	cmp    edi,r13d
   14000badd:	jl     0x14000bb6f
   14000bae3:	cmp    QWORD PTR [rbp+0x0],r13
   14000bae7:	je     0x14000bb6f
   14000baed:	movsxd rsi,edi
   14000baf0:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   14000baf5:	call   0x140004244
   14000bafa:	cmp    r15d,r13d
   14000bafd:	je     0x14000bb65
   14000baff:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   14000bb04:	je     0x14000bb23
   14000bb06:	lea    rcx,[rbp+rsi*8+0x8]
   14000bb0b:	mov    rax,QWORD PTR [rcx]
   14000bb0e:	inc    edi
   14000bb10:	add    rcx,0x8
   14000bb14:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   14000bb19:	inc    rsi
   14000bb1c:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   14000bb21:	jne    0x14000bb0b
   14000bb23:	movsxd rdx,edi
   14000bb26:	movabs rax,0x1fffffffffffffff
   14000bb30:	cmp    rdx,rax
   14000bb33:	jae    0x14000bbcc
   14000bb39:	mov    rcx,QWORD PTR [rip+0x7a20]        # 0x140013560
   14000bb40:	mov    r8d,0x8
   14000bb46:	call   0x1400041bc
   14000bb4b:	cmp    rax,r13
   14000bb4e:	je     0x14000bbcc
   14000bb50:	jmp    0x14000bbc5
   14000bb52:	mov    rsi,QWORD PTR [rip+0x7a07]        # 0x140013560
   14000bb59:	sub    rdi,rsi
   14000bb5c:	sar    rdi,0x3
   14000bb60:	jmp    0x14000bad7
   14000bb65:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   14000bb6a:	mov    QWORD PTR [r14],r13
   14000bb6d:	jmp    0x14000bbcc
   14000bb6f:	cmp    r15d,r13d
   14000bb72:	jne    0x14000bc78
   14000bb78:	cmp    edi,r13d
   14000bb7b:	jge    0x14000bb7f
   14000bb7d:	neg    edi
   14000bb7f:	lea    eax,[rdi+0x2]
   14000bb82:	cmp    eax,edi
   14000bb84:	jl     0x14000ba0e
   14000bb8a:	movsxd r8,eax
   14000bb8d:	movabs rax,0x1fffffffffffffff
   14000bb97:	cmp    r8,rax
   14000bb9a:	jae    0x14000ba0e
   14000bba0:	mov    edx,0x8
   14000bba5:	mov    rcx,rsi
   14000bba8:	call   0x1400041bc
   14000bbad:	cmp    rax,r13
   14000bbb0:	je     0x14000ba0e
   14000bbb6:	movsxd rcx,edi
   14000bbb9:	mov    QWORD PTR [rax+rcx*8],r12
   14000bbbd:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   14000bbc2:	mov    QWORD PTR [r14],r13
   14000bbc5:	mov    QWORD PTR [rip+0x7994],rax        # 0x140013560
   14000bbcc:	cmp    DWORD PTR [rsp+0x78],r13d
   14000bbd1:	je     0x14000bc61
   14000bbd7:	mov    rcx,r12
   14000bbda:	call   0x1400070e0
   14000bbdf:	mov    edx,0x1
   14000bbe4:	lea    rcx,[rax+0x2]
   14000bbe8:	call   0x1400040b0
   14000bbed:	mov    rdi,rax
   14000bbf0:	cmp    rax,r13
   14000bbf3:	je     0x14000bc61
   14000bbf5:	mov    rcx,r12
   14000bbf8:	call   0x1400070e0
   14000bbfd:	mov    r8,r12
   14000bc00:	mov    rcx,rdi
   14000bc03:	lea    rdx,[rax+0x2]
   14000bc07:	call   0x140009454
   14000bc0c:	cmp    eax,r13d
   14000bc0f:	je     0x14000bc25
   14000bc11:	xor    r9d,r9d
   14000bc14:	xor    r8d,r8d
   14000bc17:	xor    edx,edx
   14000bc19:	xor    ecx,ecx
   14000bc1b:	mov    QWORD PTR [rsp+0x20],r13
   14000bc20:	call   0x140003dc4
   14000bc25:	mov    rdx,rdi
   14000bc28:	mov    rcx,rdi
   14000bc2b:	sub    rdx,r12
   14000bc2e:	add    rdx,QWORD PTR [rsp+0x70]
   14000bc33:	mov    BYTE PTR [rdx],r13b
   14000bc36:	inc    rdx
   14000bc39:	cmp    r15d,r13d
   14000bc3c:	cmovne rdx,r13
   14000bc40:	call   QWORD PTR [rip+0x361a]        # 0x14000f260
   14000bc46:	cmp    eax,r13d
   14000bc49:	jne    0x14000bc59
   14000bc4b:	or     ebx,0xffffffff
   14000bc4e:	call   0x140003fbc
   14000bc53:	mov    DWORD PTR [rax],0x2a
   14000bc59:	mov    rcx,rdi
   14000bc5c:	call   0x140004244
   14000bc61:	cmp    r15d,r13d
   14000bc64:	je     0x14000bc71
   14000bc66:	mov    rcx,r12
   14000bc69:	call   0x140004244
   14000bc6e:	mov    QWORD PTR [r14],r13
   14000bc71:	mov    eax,ebx
   14000bc73:	jmp    0x14000ba11
   14000bc78:	mov    rcx,r12
   14000bc7b:	call   0x140004244
   14000bc80:	mov    QWORD PTR [r14],r13
   14000bc83:	jmp    0x14000ba2e
   14000bc88:	mov    QWORD PTR [rsp+0x8],rbx
   14000bc8d:	mov    QWORD PTR [rsp+0x10],rsi
   14000bc92:	push   rdi
   14000bc93:	sub    rsp,0x30
   14000bc97:	mov    rbx,rcx
   14000bc9a:	test   rcx,rcx
   14000bc9d:	je     0x14000bce5
   14000bc9f:	call   0x1400070e0
   14000bca4:	mov    rsi,rax
   14000bca7:	lea    rcx,[rax+0x1]
   14000bcab:	call   0x1400073cc
   14000bcb0:	mov    rdi,rax
   14000bcb3:	test   rax,rax
   14000bcb6:	je     0x14000bce5
   14000bcb8:	lea    rdx,[rsi+0x1]
   14000bcbc:	mov    r8,rbx
   14000bcbf:	mov    rcx,rax
   14000bcc2:	call   0x140009454
   14000bcc7:	test   eax,eax
   14000bcc9:	je     0x14000bce0
   14000bccb:	and    QWORD PTR [rsp+0x20],0x0
   14000bcd1:	xor    r9d,r9d
   14000bcd4:	xor    r8d,r8d
   14000bcd7:	xor    edx,edx
   14000bcd9:	xor    ecx,ecx
   14000bcdb:	call   0x140003dc4
   14000bce0:	mov    rax,rdi
   14000bce3:	jmp    0x14000bce7
   14000bce5:	xor    eax,eax
   14000bce7:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bcec:	mov    rsi,QWORD PTR [rsp+0x48]
   14000bcf1:	add    rsp,0x30
   14000bcf5:	pop    rdi
   14000bcf6:	ret    
   14000bcf7:	int3   
   14000bcf8:	mov    QWORD PTR [rsp+0x8],rbx
   14000bcfd:	mov    QWORD PTR [rsp+0x10],rsi
   14000bd02:	push   rdi
   14000bd03:	sub    rsp,0x50
   14000bd07:	mov    rbx,rcx
   14000bd0a:	mov    edi,edx
   14000bd0c:	lea    rcx,[rsp+0x30]
   14000bd11:	mov    rdx,r8
   14000bd14:	call   0x140002370
   14000bd19:	xor    esi,esi
   14000bd1b:	cmp    rbx,rsi
   14000bd1e:	jne    0x14000bd64
   14000bd20:	call   0x140003fbc
   14000bd25:	xor    r9d,r9d
   14000bd28:	xor    r8d,r8d
   14000bd2b:	xor    edx,edx
   14000bd2d:	xor    ecx,ecx
   14000bd2f:	mov    QWORD PTR [rsp+0x20],rsi
   14000bd34:	mov    DWORD PTR [rax],0x16
   14000bd3a:	call   0x140003eec
   14000bd3f:	cmp    BYTE PTR [rsp+0x48],sil
   14000bd44:	je     0x14000bd52
   14000bd46:	mov    rax,QWORD PTR [rsp+0x40]
   14000bd4b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000bd52:	xor    eax,eax
   14000bd54:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bd59:	mov    rsi,QWORD PTR [rsp+0x68]
   14000bd5e:	add    rsp,0x50
   14000bd62:	pop    rdi
   14000bd63:	ret    
   14000bd64:	mov    rdx,QWORD PTR [rsp+0x38]
   14000bd69:	cmp    DWORD PTR [rdx+0x8],esi
   14000bd6c:	jne    0x14000bd8d
   14000bd6e:	mov    edx,edi
   14000bd70:	mov    rcx,rbx
   14000bd73:	call   0x14000bdf8
   14000bd78:	cmp    BYTE PTR [rsp+0x48],sil
   14000bd7d:	je     0x14000bd54
   14000bd7f:	mov    rcx,QWORD PTR [rsp+0x40]
   14000bd84:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000bd8b:	jmp    0x14000bd54
   14000bd8d:	movzx  ecx,BYTE PTR [rbx]
   14000bd90:	cmp    cx,si
   14000bd93:	je     0x14000bdc8
   14000bd95:	movzx  eax,cl
   14000bd98:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   14000bd9d:	je     0x14000bdbc
   14000bd9f:	inc    rbx
   14000bda2:	cmp    BYTE PTR [rbx],sil
   14000bda5:	je     0x14000bd3f
   14000bda7:	movzx  eax,BYTE PTR [rbx]
   14000bdaa:	movzx  ecx,cx
   14000bdad:	shl    ecx,0x8
   14000bdb0:	or     ecx,eax
   14000bdb2:	cmp    edi,ecx
   14000bdb4:	jne    0x14000bdc3
   14000bdb6:	lea    rax,[rbx-0x1]
   14000bdba:	jmp    0x14000bd78
   14000bdbc:	movzx  eax,cx
   14000bdbf:	cmp    edi,eax
   14000bdc1:	je     0x14000bdc8
   14000bdc3:	inc    rbx
   14000bdc6:	jmp    0x14000bd8d
   14000bdc8:	movzx  eax,cx
   14000bdcb:	cmp    edi,eax
   14000bdcd:	jne    0x14000bd3f
   14000bdd3:	cmp    BYTE PTR [rsp+0x48],sil
   14000bdd8:	je     0x14000bde6
   14000bdda:	mov    rax,QWORD PTR [rsp+0x40]
   14000bddf:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000bde6:	mov    rax,rbx
   14000bde9:	jmp    0x14000bd54
   14000bdee:	int3   
   14000bdef:	int3   
   14000bdf0:	xor    r8d,r8d
   14000bdf3:	jmp    0x14000bcf8
   14000bdf8:	jmp    0x14000be01
   14000bdfa:	cmp    al,dl
   14000bdfc:	je     0x14000be0b
   14000bdfe:	inc    rcx
   14000be01:	mov    al,BYTE PTR [rcx]
   14000be03:	test   al,al
   14000be05:	jne    0x14000bdfa
   14000be07:	cmp    al,dl
   14000be09:	jne    0x14000be0f
   14000be0b:	mov    rax,rcx
   14000be0e:	ret    
   14000be0f:	xor    eax,eax
   14000be11:	ret    
   14000be12:	jmp    QWORD PTR [rip+0x3258]        # 0x14000f070
   14000be18:	jmp    QWORD PTR [rip+0x32a2]        # 0x14000f0c0
   14000be1e:	jmp    QWORD PTR [rip+0x32a4]        # 0x14000f0c8
   14000be24:	sub    rsp,0x38
   14000be28:	test   rcx,rcx
   14000be2b:	jne    0x14000be53
   14000be2d:	call   0x140003fbc
   14000be32:	and    QWORD PTR [rsp+0x20],0x0
   14000be38:	xor    r9d,r9d
   14000be3b:	xor    r8d,r8d
   14000be3e:	xor    edx,edx
   14000be40:	xor    ecx,ecx
   14000be42:	mov    DWORD PTR [rax],0x16
   14000be48:	call   0x140003eec
   14000be4d:	or     rax,0xffffffffffffffff
   14000be51:	jmp    0x14000be72
   14000be53:	cmp    BYTE PTR [rcx],0x0
   14000be56:	je     0x14000be2d
   14000be58:	test   rdx,rdx
   14000be5b:	je     0x14000be2d
   14000be5d:	mov    rax,QWORD PTR [rdx]
   14000be60:	test   rax,rax
   14000be63:	je     0x14000be2d
   14000be65:	cmp    BYTE PTR [rax],0x0
   14000be68:	je     0x14000be2d
   14000be6a:	xor    r8d,r8d
   14000be6d:	call   0x14000d0f4
   14000be72:	add    rsp,0x38
   14000be76:	ret    
   14000be77:	int3   
   14000be78:	mov    QWORD PTR [rsp+0x10],rdx
   14000be7d:	mov    DWORD PTR [rsp+0x8],ecx
   14000be81:	push   rbx
   14000be82:	push   rbp
   14000be83:	push   rsi
   14000be84:	push   rdi
   14000be85:	push   r12
   14000be87:	push   r13
   14000be89:	push   r14
   14000be8b:	push   r15
   14000be8d:	sub    rsp,0x58
   14000be91:	mov    r12d,0xfffffffe
   14000be97:	movsxd rax,ecx
   14000be9a:	mov    ebx,r8d
   14000be9d:	mov    DWORD PTR [rsp+0x34],r12d
   14000bea2:	mov    DWORD PTR [rsp+0x38],ebx
   14000bea6:	cmp    eax,r12d
   14000bea9:	jne    0x14000bec4
   14000beab:	call   0x140003fdc
   14000beb0:	xor    edi,edi
   14000beb2:	mov    DWORD PTR [rax],edi
   14000beb4:	call   0x140003fbc
   14000beb9:	mov    DWORD PTR [rax],0x9
   14000bebf:	jmp    0x14000c5e3
   14000bec4:	xor    edi,edi
   14000bec6:	cmp    eax,edi
   14000bec8:	jl     0x14000c5bd
   14000bece:	cmp    eax,DWORD PTR [rip+0x8494]        # 0x140014368
   14000bed4:	jae    0x14000c5bd
   14000beda:	mov    rsi,rax
   14000bedd:	mov    r14,rax
   14000bee0:	lea    r9,[rip+0xffffffffffff4119]        # 0x140000000
   14000bee7:	sar    r14,0x5
   14000beeb:	and    esi,0x1f
   14000beee:	mov    rcx,QWORD PTR [r9+r14*8+0x14380]
   14000bef6:	imul   rsi,rsi,0x58
   14000befa:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   14000befe:	test   al,0x1
   14000bf00:	je     0x14000c5bd
   14000bf06:	cmp    ebx,0x7fffffff
   14000bf0c:	jbe    0x14000bf25
   14000bf0e:	call   0x140003fdc
   14000bf13:	mov    DWORD PTR [rax],edi
   14000bf15:	call   0x140003fbc
   14000bf1a:	mov    DWORD PTR [rax],0x16
   14000bf20:	jmp    0x14000c5cf
   14000bf25:	mov    ebp,edi
   14000bf27:	cmp    ebx,edi
   14000bf29:	je     0x14000c5b9
   14000bf2f:	test   al,0x2
   14000bf31:	jne    0x14000c5b9
   14000bf37:	cmp    rdx,rdi
   14000bf3a:	je     0x14000bf0e
   14000bf3c:	mov    r15b,BYTE PTR [rcx+rsi*1+0x38]
   14000bf41:	mov    r8d,0x4
   14000bf47:	add    r15b,r15b
   14000bf4a:	sar    r15b,1
   14000bf4d:	movsx  ecx,r15b
   14000bf51:	sub    ecx,0x1
   14000bf54:	je     0x14000bf6b
   14000bf56:	sub    ecx,0x1
   14000bf59:	jne    0x14000bf66
   14000bf5b:	mov    eax,ebx
   14000bf5d:	not    eax
   14000bf5f:	test   al,0x1
   14000bf61:	je     0x14000bf0e
   14000bf63:	and    ebx,0xfffffffe
   14000bf66:	mov    r13,rdx
   14000bf69:	jmp    0x14000bfcf
   14000bf6b:	mov    eax,ebx
   14000bf6d:	not    eax
   14000bf6f:	test   al,0x1
   14000bf71:	je     0x14000bf0e
   14000bf73:	shr    ebx,1
   14000bf75:	cmp    ebx,r8d
   14000bf78:	cmovb  ebx,r8d
   14000bf7c:	mov    ecx,ebx
   14000bf7e:	call   0x140004044
   14000bf83:	mov    r13,rax
   14000bf86:	cmp    rax,rdi
   14000bf89:	jne    0x14000bfa6
   14000bf8b:	call   0x140003fbc
   14000bf90:	mov    DWORD PTR [rax],0xc
   14000bf96:	call   0x140003fdc
   14000bf9b:	mov    DWORD PTR [rax],0x8
   14000bfa1:	jmp    0x14000c5e3
   14000bfa6:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000bfad:	xor    edx,edx
   14000bfaf:	lea    r8d,[rdx+0x1]
   14000bfb3:	call   0x140009668
   14000bfb8:	lea    r9,[rip+0xffffffffffff4041]        # 0x140000000
   14000bfbf:	mov    r11,rax
   14000bfc2:	mov    rax,QWORD PTR [r9+r14*8+0x14380]
   14000bfca:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   14000bfcf:	mov    rax,QWORD PTR [r9+r14*8+0x14380]
   14000bfd7:	mov    rdx,r13
   14000bfda:	mov    r8d,0xa
   14000bfe0:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14000bfe5:	je     0x14000c087
   14000bfeb:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   14000bfef:	cmp    cl,r8b
   14000bff2:	je     0x14000c087
   14000bff8:	cmp    ebx,edi
   14000bffa:	je     0x14000c087
   14000c000:	mov    BYTE PTR [r13+0x0],cl
   14000c004:	mov    rax,QWORD PTR [r9+r14*8+0x14380]
   14000c00c:	or     r10d,0xffffffff
   14000c010:	add    ebx,r10d
   14000c013:	lea    rdx,[r13+0x1]
   14000c017:	lea    ebp,[r8-0x9]
   14000c01b:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   14000c020:	cmp    r15b,dil
   14000c023:	je     0x14000c087
   14000c025:	mov    rax,QWORD PTR [r9+r14*8+0x14380]
   14000c02d:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   14000c031:	cmp    cl,r8b
   14000c034:	je     0x14000c087
   14000c036:	cmp    ebx,edi
   14000c038:	je     0x14000c087
   14000c03a:	mov    BYTE PTR [rdx],cl
   14000c03c:	mov    rax,QWORD PTR [r9+r14*8+0x14380]
   14000c044:	add    ebx,r10d
   14000c047:	inc    rdx
   14000c04a:	lea    ebp,[r8-0x8]
   14000c04e:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   14000c053:	cmp    r15b,0x1
   14000c057:	jne    0x14000c087
   14000c059:	mov    rax,QWORD PTR [r9+r14*8+0x14380]
   14000c061:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   14000c065:	cmp    cl,r8b
   14000c068:	je     0x14000c087
   14000c06a:	cmp    ebx,edi
   14000c06c:	je     0x14000c087
   14000c06e:	mov    BYTE PTR [rdx],cl
   14000c070:	mov    rax,QWORD PTR [r9+r14*8+0x14380]
   14000c078:	inc    rdx
   14000c07b:	lea    ebp,[r8-0x7]
   14000c07f:	add    ebx,r10d
   14000c082:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   14000c087:	mov    rcx,QWORD PTR [r9+r14*8+0x14380]
   14000c08f:	lea    r9,[rsp+0x30]
   14000c094:	mov    r8d,ebx
   14000c097:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14000c09b:	mov    QWORD PTR [rsp+0x20],rdi
   14000c0a0:	call   QWORD PTR [rip+0x31c2]        # 0x14000f268
   14000c0a6:	cmp    eax,edi
   14000c0a8:	je     0x14000c57d
   14000c0ae:	movsxd rdx,DWORD PTR [rsp+0x30]
   14000c0b3:	cmp    edx,edi
   14000c0b5:	jl     0x14000c57d
   14000c0bb:	mov    eax,ebx
   14000c0bd:	cmp    rdx,rax
   14000c0c0:	ja     0x14000c57d
   14000c0c6:	lea    r8,[rip+0xffffffffffff3f33]        # 0x140000000
   14000c0cd:	add    ebp,edx
   14000c0cf:	mov    rax,QWORD PTR [r8+r14*8+0x14380]
   14000c0d7:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   14000c0dc:	je     0x14000c55b
   14000c0e2:	cmp    r15b,0x2
   14000c0e6:	je     0x14000c3a4
   14000c0ec:	cmp    edx,edi
   14000c0ee:	je     0x14000c0fe
   14000c0f0:	cmp    BYTE PTR [r13+0x0],0xa
   14000c0f5:	jne    0x14000c0fe
   14000c0f7:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14000c0fc:	jmp    0x14000c103
   14000c0fe:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   14000c103:	movsxd rax,ebp
   14000c106:	mov    rbx,r13
   14000c109:	mov    r12,r13
   14000c10c:	add    rax,r13
   14000c10f:	mov    QWORD PTR [rsp+0x40],rax
   14000c114:	cmp    r13,rax
   14000c117:	jae    0x14000c257
   14000c11d:	mov    ebp,0xd
   14000c122:	mov    al,BYTE PTR [r12]
   14000c126:	cmp    al,0x1a
   14000c128:	je     0x14000c238
   14000c12e:	cmp    al,bpl
   14000c131:	je     0x14000c140
   14000c133:	mov    BYTE PTR [rbx],al
   14000c135:	inc    rbx
   14000c138:	inc    r12
   14000c13b:	jmp    0x14000c22b
   14000c140:	mov    rax,QWORD PTR [rsp+0x40]
   14000c145:	dec    rax
   14000c148:	cmp    r12,rax
   14000c14b:	jae    0x14000c168
   14000c14d:	lea    rax,[r12+0x1]
   14000c152:	cmp    BYTE PTR [rax],0xa
   14000c155:	jne    0x14000c160
   14000c157:	add    r12,0x2
   14000c15b:	jmp    0x14000c1f0
   14000c160:	mov    r12,rax
   14000c163:	jmp    0x14000c225
   14000c168:	mov    rcx,QWORD PTR [r8+r14*8+0x14380]
   14000c170:	lea    r9,[rsp+0x30]
   14000c175:	lea    rdx,[rsp+0xb0]
   14000c17d:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14000c181:	mov    r8d,0x1
   14000c187:	inc    r12
   14000c18a:	mov    QWORD PTR [rsp+0x20],rdi
   14000c18f:	call   QWORD PTR [rip+0x30d3]        # 0x14000f268
   14000c195:	cmp    eax,edi
   14000c197:	jne    0x14000c1a3
   14000c199:	call   QWORD PTR [rip+0x2f39]        # 0x14000f0d8
   14000c19f:	cmp    eax,edi
   14000c1a1:	jne    0x14000c21e
   14000c1a3:	cmp    DWORD PTR [rsp+0x30],edi
   14000c1a7:	je     0x14000c21e
   14000c1a9:	lea    r8,[rip+0xffffffffffff3e50]        # 0x140000000
   14000c1b0:	mov    rax,QWORD PTR [r8+r14*8+0x14380]
   14000c1b8:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14000c1bd:	je     0x14000c1e1
   14000c1bf:	cmp    BYTE PTR [rsp+0xb0],0xa
   14000c1c7:	je     0x14000c1f0
   14000c1c9:	mov    BYTE PTR [rbx],bpl
   14000c1cc:	mov    rcx,QWORD PTR [r8+r14*8+0x14380]
   14000c1d4:	mov    al,BYTE PTR [rsp+0xb0]
   14000c1db:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14000c1df:	jmp    0x14000c228
   14000c1e1:	cmp    rbx,r13
   14000c1e4:	jne    0x14000c1f5
   14000c1e6:	cmp    BYTE PTR [rsp+0xb0],0xa
   14000c1ee:	jne    0x14000c1f5
   14000c1f0:	mov    BYTE PTR [rbx],0xa
   14000c1f3:	jmp    0x14000c228
   14000c1f5:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000c1fc:	mov    r8d,0x1
   14000c202:	or     rdx,0xffffffffffffffff
   14000c206:	call   0x140009668
   14000c20b:	cmp    BYTE PTR [rsp+0xb0],0xa
   14000c213:	lea    r8,[rip+0xffffffffffff3de6]        # 0x140000000
   14000c21a:	je     0x14000c22b
   14000c21c:	jmp    0x14000c225
   14000c21e:	lea    r8,[rip+0xffffffffffff3ddb]        # 0x140000000
   14000c225:	mov    BYTE PTR [rbx],bpl
   14000c228:	inc    rbx
   14000c22b:	cmp    r12,QWORD PTR [rsp+0x40]
   14000c230:	jb     0x14000c122
   14000c236:	jmp    0x14000c257
   14000c238:	mov    rax,QWORD PTR [r8+r14*8+0x14380]
   14000c240:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14000c245:	jne    0x14000c24e
   14000c247:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14000c24c:	jmp    0x14000c257
   14000c24e:	mov    al,BYTE PTR [r12]
   14000c252:	mov    BYTE PTR [rbx],al
   14000c254:	inc    rbx
   14000c257:	mov    ebp,ebx
   14000c259:	sub    ebp,r13d
   14000c25c:	cmp    r15b,0x1
   14000c260:	jne    0x14000c556
   14000c266:	cmp    ebp,edi
   14000c268:	je     0x14000c556
   14000c26e:	mov    r15d,0x1
   14000c274:	sub    rbx,r15
   14000c277:	test   BYTE PTR [rbx],0x80
   14000c27a:	jne    0x14000c284
   14000c27c:	add    rbx,r15
   14000c27f:	jmp    0x14000c336
   14000c284:	mov    edx,r15d
   14000c287:	jmp    0x14000c299
   14000c289:	cmp    edx,0x4
   14000c28c:	jg     0x14000c2a6
   14000c28e:	cmp    rbx,r13
   14000c291:	jb     0x14000c2a6
   14000c293:	sub    rbx,r15
   14000c296:	add    edx,r15d
   14000c299:	movzx  eax,BYTE PTR [rbx]
   14000c29c:	cmp    BYTE PTR [rax+r8*1+0x13410],dil
   14000c2a4:	je     0x14000c289
   14000c2a6:	movzx  ecx,BYTE PTR [rbx]
   14000c2a9:	movsx  eax,BYTE PTR [rcx+r8*1+0x13410]
   14000c2b2:	cmp    eax,edi
   14000c2b4:	jne    0x14000c2ca
   14000c2b6:	call   0x140003fbc
   14000c2bb:	mov    DWORD PTR [rax],0x2a
   14000c2c1:	or     r12d,0xffffffff
   14000c2c5:	jmp    0x14000c55b
   14000c2ca:	inc    eax
   14000c2cc:	cmp    eax,edx
   14000c2ce:	jne    0x14000c2d8
   14000c2d0:	movsxd rax,edx
   14000c2d3:	add    rbx,rax
   14000c2d6:	jmp    0x14000c336
   14000c2d8:	mov    rax,QWORD PTR [r8+r14*8+0x14380]
   14000c2e0:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14000c2e5:	je     0x14000c322
   14000c2e7:	add    rbx,r15
   14000c2ea:	cmp    edx,0x2
   14000c2ed:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   14000c2f1:	jl     0x14000c304
   14000c2f3:	mov    al,BYTE PTR [rbx]
   14000c2f5:	mov    rcx,QWORD PTR [r8+r14*8+0x14380]
   14000c2fd:	add    rbx,r15
   14000c300:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   14000c304:	cmp    edx,0x3
   14000c307:	jne    0x14000c31a
   14000c309:	mov    al,BYTE PTR [rbx]
   14000c30b:	mov    rcx,QWORD PTR [r8+r14*8+0x14380]
   14000c313:	add    rbx,r15
   14000c316:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   14000c31a:	movsxd rax,edx
   14000c31d:	sub    rbx,rax
   14000c320:	jmp    0x14000c336
   14000c322:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000c329:	neg    edx
   14000c32b:	mov    r8d,r15d
   14000c32e:	movsxd rdx,edx
   14000c331:	call   0x140009668
   14000c336:	mov    eax,DWORD PTR [rsp+0x38]
   14000c33a:	mov    r15,QWORD PTR [rsp+0xa8]
   14000c342:	sub    ebx,r13d
   14000c345:	shr    eax,1
   14000c347:	mov    r9d,ebx
   14000c34a:	mov    r8,r13
   14000c34d:	mov    DWORD PTR [rsp+0x28],eax
   14000c351:	xor    edx,edx
   14000c353:	mov    ecx,0xfde9
   14000c358:	mov    QWORD PTR [rsp+0x20],r15
   14000c35d:	call   QWORD PTR [rip+0x2e85]        # 0x14000f1e8
   14000c363:	mov    ebp,eax
   14000c365:	cmp    eax,edi
   14000c367:	jne    0x14000c37f
   14000c369:	call   QWORD PTR [rip+0x2d69]        # 0x14000f0d8
   14000c36f:	mov    ecx,eax
   14000c371:	call   0x140003ffc
   14000c376:	or     r12d,0xffffffff
   14000c37a:	jmp    0x14000c563
   14000c37f:	mov    r12d,DWORD PTR [rsp+0x34]
   14000c384:	cmp    eax,ebx
   14000c386:	lea    rax,[rip+0xffffffffffff3c73]        # 0x140000000
   14000c38d:	mov    rax,QWORD PTR [rax+r14*8+0x14380]
   14000c395:	setne  dil
   14000c399:	add    ebp,ebp
   14000c39b:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   14000c39f:	jmp    0x14000c563
   14000c3a4:	cmp    edx,edi
   14000c3a6:	mov    edx,0xa
   14000c3ab:	je     0x14000c3bb
   14000c3ad:	cmp    WORD PTR [r13+0x0],dx
   14000c3b2:	jne    0x14000c3bb
   14000c3b4:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14000c3b9:	jmp    0x14000c3c0
   14000c3bb:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   14000c3c0:	movsxd rax,ebp
   14000c3c3:	mov    rbx,r13
   14000c3c6:	mov    r12,r13
   14000c3c9:	lea    r15,[rax+r13*1]
   14000c3cd:	cmp    r13,r15
   14000c3d0:	jae    0x14000c551
   14000c3d6:	mov    ebp,0xd
   14000c3db:	movzx  eax,WORD PTR [r12]
   14000c3e0:	cmp    ax,0x1a
   14000c3e4:	je     0x14000c52f
   14000c3ea:	cmp    ax,bp
   14000c3ed:	je     0x14000c3ff
   14000c3ef:	mov    WORD PTR [rbx],ax
   14000c3f2:	add    rbx,0x2
   14000c3f6:	add    r12,0x2
   14000c3fa:	jmp    0x14000c524
   14000c3ff:	lea    rax,[r15-0x2]
   14000c403:	cmp    r12,rax
   14000c406:	jae    0x14000c423
   14000c408:	lea    rax,[r12+0x2]
   14000c40d:	cmp    WORD PTR [rax],dx
   14000c410:	jne    0x14000c41b
   14000c412:	add    r12,0x4
   14000c416:	jmp    0x14000c4dd
   14000c41b:	mov    r12,rax
   14000c41e:	jmp    0x14000c51d
   14000c423:	mov    rcx,QWORD PTR [r8+r14*8+0x14380]
   14000c42b:	lea    r9,[rsp+0x30]
   14000c430:	lea    rdx,[rsp+0xb8]
   14000c438:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14000c43c:	mov    r8d,0x2
   14000c442:	add    r12,0x2
   14000c446:	mov    QWORD PTR [rsp+0x20],rdi
   14000c44b:	call   QWORD PTR [rip+0x2e17]        # 0x14000f268
   14000c451:	cmp    eax,edi
   14000c453:	jne    0x14000c463
   14000c455:	call   QWORD PTR [rip+0x2c7d]        # 0x14000f0d8
   14000c45b:	cmp    eax,edi
   14000c45d:	jne    0x14000c511
   14000c463:	cmp    DWORD PTR [rsp+0x30],edi
   14000c467:	je     0x14000c511
   14000c46d:	lea    r8,[rip+0xffffffffffff3b8c]        # 0x140000000
   14000c474:	mov    rax,QWORD PTR [r8+r14*8+0x14380]
   14000c47c:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14000c481:	je     0x14000c4c9
   14000c483:	mov    edx,0xa
   14000c488:	cmp    WORD PTR [rsp+0xb8],dx
   14000c490:	je     0x14000c4dd
   14000c492:	mov    WORD PTR [rbx],bp
   14000c495:	mov    al,BYTE PTR [rsp+0xb8]
   14000c49c:	mov    rcx,QWORD PTR [r8+r14*8+0x14380]
   14000c4a4:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14000c4a8:	mov    al,BYTE PTR [rsp+0xb9]
   14000c4af:	mov    rcx,QWORD PTR [r8+r14*8+0x14380]
   14000c4b7:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   14000c4bb:	mov    rax,QWORD PTR [r8+r14*8+0x14380]
   14000c4c3:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   14000c4c7:	jmp    0x14000c520
   14000c4c9:	cmp    rbx,r13
   14000c4cc:	jne    0x14000c4e2
   14000c4ce:	mov    edx,0xa
   14000c4d3:	cmp    WORD PTR [rsp+0xb8],dx
   14000c4db:	jne    0x14000c4e2
   14000c4dd:	mov    WORD PTR [rbx],dx
   14000c4e0:	jmp    0x14000c520
   14000c4e2:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000c4e9:	mov    rdx,0xfffffffffffffffe
   14000c4f0:	lea    r8d,[rdx+0x3]
   14000c4f4:	call   0x140009668
   14000c4f9:	mov    edx,0xa
   14000c4fe:	lea    r8,[rip+0xffffffffffff3afb]        # 0x140000000
   14000c505:	cmp    WORD PTR [rsp+0xb8],dx
   14000c50d:	je     0x14000c524
   14000c50f:	jmp    0x14000c51d
   14000c511:	mov    edx,0xa
   14000c516:	lea    r8,[rip+0xffffffffffff3ae3]        # 0x140000000
   14000c51d:	mov    WORD PTR [rbx],bp
   14000c520:	add    rbx,0x2
   14000c524:	cmp    r12,r15
   14000c527:	jb     0x14000c3db
   14000c52d:	jmp    0x14000c551
   14000c52f:	mov    rax,QWORD PTR [r8+r14*8+0x14380]
   14000c537:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14000c53c:	jne    0x14000c545
   14000c53e:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14000c543:	jmp    0x14000c551
   14000c545:	movzx  eax,WORD PTR [r12]
   14000c54a:	mov    WORD PTR [rbx],ax
   14000c54d:	add    rbx,0x2
   14000c551:	mov    ebp,ebx
   14000c553:	sub    ebp,r13d
   14000c556:	mov    r12d,DWORD PTR [rsp+0x34]
   14000c55b:	mov    r15,QWORD PTR [rsp+0xa8]
   14000c563:	cmp    r13,r15
   14000c566:	je     0x14000c570
   14000c568:	mov    rcx,r13
   14000c56b:	call   0x140004244
   14000c570:	cmp    r12d,0xfffffffe
   14000c574:	cmove  r12d,ebp
   14000c578:	mov    eax,r12d
   14000c57b:	jmp    0x14000c5e6
   14000c57d:	call   QWORD PTR [rip+0x2b55]        # 0x14000f0d8
   14000c583:	cmp    eax,0x5
   14000c586:	jne    0x14000c5a3
   14000c588:	call   0x140003fbc
   14000c58d:	mov    DWORD PTR [rax],0x9
   14000c593:	call   0x140003fdc
   14000c598:	mov    DWORD PTR [rax],0x5
   14000c59e:	jmp    0x14000c2c1
   14000c5a3:	cmp    eax,0x6d
   14000c5a6:	jne    0x14000c5ad
   14000c5a8:	mov    r12d,edi
   14000c5ab:	jmp    0x14000c55b
   14000c5ad:	mov    ecx,eax
   14000c5af:	call   0x140003ffc
   14000c5b4:	jmp    0x14000c2c1
   14000c5b9:	xor    eax,eax
   14000c5bb:	jmp    0x14000c5e6
   14000c5bd:	call   0x140003fdc
   14000c5c2:	mov    DWORD PTR [rax],edi
   14000c5c4:	call   0x140003fbc
   14000c5c9:	mov    DWORD PTR [rax],0x9
   14000c5cf:	xor    r9d,r9d
   14000c5d2:	xor    r8d,r8d
   14000c5d5:	xor    edx,edx
   14000c5d7:	xor    ecx,ecx
   14000c5d9:	mov    QWORD PTR [rsp+0x20],rdi
   14000c5de:	call   0x140003eec
   14000c5e3:	or     eax,0xffffffff
   14000c5e6:	add    rsp,0x58
   14000c5ea:	pop    r15
   14000c5ec:	pop    r14
   14000c5ee:	pop    r13
   14000c5f0:	pop    r12
   14000c5f2:	pop    rdi
   14000c5f3:	pop    rsi
   14000c5f4:	pop    rbp
   14000c5f5:	pop    rbx
   14000c5f6:	ret    
   14000c5f7:	int3   
   14000c5f8:	mov    QWORD PTR [rsp+0x10],rbx
   14000c5fd:	mov    QWORD PTR [rsp+0x18],rsi
   14000c602:	mov    DWORD PTR [rsp+0x8],ecx
   14000c606:	push   rdi
   14000c607:	push   r12
   14000c609:	push   r13
   14000c60b:	push   r14
   14000c60d:	push   r15
   14000c60f:	sub    rsp,0x30
   14000c613:	mov    esi,r8d
   14000c616:	mov    r13,rdx
   14000c619:	movsxd rdi,ecx
   14000c61c:	cmp    edi,0xfffffffe
   14000c61f:	jne    0x14000c63d
   14000c621:	call   0x140003fdc
   14000c626:	xor    ebx,ebx
   14000c628:	mov    DWORD PTR [rax],ebx
   14000c62a:	call   0x140003fbc
   14000c62f:	mov    DWORD PTR [rax],0x9
   14000c635:	or     eax,0xffffffff
   14000c638:	jmp    0x14000c752
   14000c63d:	xor    ebx,ebx
   14000c63f:	cmp    edi,ebx
   14000c641:	jl     0x14000c729
   14000c647:	cmp    edi,DWORD PTR [rip+0x7d1b]        # 0x140014368
   14000c64d:	jae    0x14000c729
   14000c653:	mov    r12,rdi
   14000c656:	mov    r14,rdi
   14000c659:	sar    r14,0x5
   14000c65d:	lea    r15,[rip+0x7d1c]        # 0x140014380
   14000c664:	and    r12d,0x1f
   14000c668:	imul   r12,r12,0x58
   14000c66c:	mov    rax,QWORD PTR [r15+r14*8]
   14000c670:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   14000c676:	and    ecx,0x1
   14000c679:	jne    0x14000c6a9
   14000c67b:	call   0x140003fdc
   14000c680:	mov    DWORD PTR [rax],ebx
   14000c682:	call   0x140003fbc
   14000c687:	mov    DWORD PTR [rax],0x9
   14000c68d:	mov    QWORD PTR [rsp+0x20],rbx
   14000c692:	xor    r9d,r9d
   14000c695:	xor    r8d,r8d
   14000c698:	xor    edx,edx
   14000c69a:	xor    ecx,ecx
   14000c69c:	call   0x140003eec
   14000c6a1:	or     eax,0xffffffff
   14000c6a4:	jmp    0x14000c752
   14000c6a9:	mov    eax,ebx
   14000c6ab:	cmp    r8d,0x7fffffff
   14000c6b2:	setbe  al
   14000c6b5:	cmp    eax,ebx
   14000c6b7:	jne    0x14000c6e4
   14000c6b9:	call   0x140003fdc
   14000c6be:	mov    DWORD PTR [rax],ebx
   14000c6c0:	call   0x140003fbc
   14000c6c5:	mov    DWORD PTR [rax],0x16
   14000c6cb:	mov    QWORD PTR [rsp+0x20],rbx
   14000c6d0:	xor    r9d,r9d
   14000c6d3:	xor    r8d,r8d
   14000c6d6:	xor    edx,edx
   14000c6d8:	xor    ecx,ecx
   14000c6da:	call   0x140003eec
   14000c6df:	or     eax,0xffffffff
   14000c6e2:	jmp    0x14000c752
   14000c6e4:	mov    ecx,edi
   14000c6e6:	call   0x14000a500
   14000c6eb:	nop
   14000c6ec:	mov    rax,QWORD PTR [r15+r14*8]
   14000c6f0:	test   BYTE PTR [rax+r12*1+0x8],0x1
   14000c6f6:	je     0x14000c709
   14000c6f8:	mov    r8d,esi
   14000c6fb:	mov    rdx,r13
   14000c6fe:	mov    ecx,edi
   14000c700:	call   0x14000be78
   14000c705:	mov    ebx,eax
   14000c707:	jmp    0x14000c71e
   14000c709:	call   0x140003fbc
   14000c70e:	mov    DWORD PTR [rax],0x9
   14000c714:	call   0x140003fdc
   14000c719:	mov    DWORD PTR [rax],ebx
   14000c71b:	or     ebx,0xffffffff
   14000c71e:	mov    ecx,edi
   14000c720:	call   0x14000a5a8
   14000c725:	mov    eax,ebx
   14000c727:	jmp    0x14000c752
   14000c729:	call   0x140003fdc
   14000c72e:	mov    DWORD PTR [rax],ebx
   14000c730:	call   0x140003fbc
   14000c735:	mov    DWORD PTR [rax],0x9
   14000c73b:	mov    QWORD PTR [rsp+0x20],rbx
   14000c740:	xor    r9d,r9d
   14000c743:	xor    r8d,r8d
   14000c746:	xor    edx,edx
   14000c748:	xor    ecx,ecx
   14000c74a:	call   0x140003eec
   14000c74f:	or     eax,0xffffffff
   14000c752:	mov    rbx,QWORD PTR [rsp+0x68]
   14000c757:	mov    rsi,QWORD PTR [rsp+0x70]
   14000c75c:	add    rsp,0x30
   14000c760:	pop    r15
   14000c762:	pop    r14
   14000c764:	pop    r13
   14000c766:	pop    r12
   14000c768:	pop    rdi
   14000c769:	ret    
   14000c76a:	int3   
   14000c76b:	int3   
   14000c76c:	mov    rax,rsp
   14000c76f:	mov    QWORD PTR [rax+0x10],rbx
   14000c773:	mov    QWORD PTR [rax+0x18],r8
   14000c777:	mov    QWORD PTR [rax+0x8],rcx
   14000c77b:	push   rbp
   14000c77c:	push   rsi
   14000c77d:	push   rdi
   14000c77e:	push   r12
   14000c780:	push   r13
   14000c782:	push   r14
   14000c784:	push   r15
   14000c786:	sub    rsp,0x80
   14000c78d:	xor    edi,edi
   14000c78f:	mov    r12b,0x80
   14000c792:	mov    esi,r9d
   14000c795:	mov    rbx,rdx
   14000c798:	mov    DWORD PTR [rax-0x58],0x18
   14000c79f:	lea    ebp,[rdi+0x1]
   14000c7a2:	mov    DWORD PTR [rax-0x64],edi
   14000c7a5:	mov    BYTE PTR [rsp+0xd8],dil
   14000c7ad:	mov    QWORD PTR [rax-0x50],rdi
   14000c7b1:	test   r12b,r9b
   14000c7b4:	je     0x14000c7be
   14000c7b6:	mov    DWORD PTR [rax-0x48],edi
   14000c7b9:	mov    r14b,0x10
   14000c7bc:	jmp    0x14000c7c5
   14000c7be:	mov    DWORD PTR [rsp+0x70],ebp
   14000c7c2:	mov    r14b,dil
   14000c7c5:	lea    rcx,[rsp+0x54]
   14000c7ca:	call   0x14000d678
   14000c7cf:	cmp    eax,edi
   14000c7d1:	je     0x14000c7e7
   14000c7d3:	xor    r9d,r9d
   14000c7d6:	xor    r8d,r8d
   14000c7d9:	xor    edx,edx
   14000c7db:	xor    ecx,ecx
   14000c7dd:	mov    QWORD PTR [rsp+0x20],rdi
   14000c7e2:	call   0x140003dc4
   14000c7e7:	bt     esi,0xf
   14000c7eb:	jb     0x14000c802
   14000c7ed:	test   esi,0x74000
   14000c7f3:	jne    0x14000c7ff
   14000c7f5:	cmp    DWORD PTR [rsp+0x54],0x8000
   14000c7fd:	je     0x14000c802
   14000c7ff:	or     r14b,r12b
   14000c802:	mov    ecx,esi
   14000c804:	mov    r8d,0x3
   14000c80a:	mov    eax,0xc0000000
   14000c80f:	and    ecx,r8d
   14000c812:	mov    edx,0x80000000
   14000c817:	cmp    ecx,edi
   14000c819:	je     0x14000c86f
   14000c81b:	sub    ecx,ebp
   14000c81d:	je     0x14000c859
   14000c81f:	cmp    ecx,ebp
   14000c821:	je     0x14000c854
   14000c823:	call   0x140003fdc
   14000c828:	mov    DWORD PTR [rax],edi
   14000c82a:	or     DWORD PTR [rbx],0xffffffff
   14000c82d:	call   0x140003fbc
   14000c832:	mov    ebx,0x16
   14000c837:	xor    r9d,r9d
   14000c83a:	xor    r8d,r8d
   14000c83d:	xor    edx,edx
   14000c83f:	xor    ecx,ecx
   14000c841:	mov    QWORD PTR [rsp+0x20],rdi
   14000c846:	mov    DWORD PTR [rax],ebx
   14000c848:	call   0x140003eec
   14000c84d:	mov    eax,ebx
   14000c84f:	jmp    0x14000cf4f
   14000c854:	mov    r15d,eax
   14000c857:	jmp    0x14000c872
   14000c859:	test   sil,0x8
   14000c85d:	je     0x14000c867
   14000c85f:	test   esi,0x70000
   14000c865:	jne    0x14000c854
   14000c867:	mov    r15d,0x40000000
   14000c86d:	jmp    0x14000c872
   14000c86f:	mov    r15d,edx
   14000c872:	mov    ecx,DWORD PTR [rsp+0xe0]
   14000c879:	mov    r12d,0x2
   14000c87f:	sub    ecx,0x10
   14000c882:	je     0x14000c8b0
   14000c884:	sub    ecx,0x10
   14000c887:	je     0x14000c8ac
   14000c889:	sub    ecx,0x10
   14000c88c:	je     0x14000c8a7
   14000c88e:	sub    ecx,0x10
   14000c891:	je     0x14000c8a2
   14000c893:	cmp    ecx,0x40
   14000c896:	jne    0x14000c823
   14000c898:	cmp    r15d,edx
   14000c89b:	mov    ecx,edi
   14000c89d:	sete   cl
   14000c8a0:	jmp    0x14000c8b2
   14000c8a2:	mov    ecx,r8d
   14000c8a5:	jmp    0x14000c8b2
   14000c8a7:	mov    ecx,r12d
   14000c8aa:	jmp    0x14000c8b2
   14000c8ac:	mov    ecx,ebp
   14000c8ae:	jmp    0x14000c8b2
   14000c8b0:	mov    ecx,edi
   14000c8b2:	mov    eax,esi
   14000c8b4:	mov    edx,0x700
   14000c8b9:	mov    DWORD PTR [rsp+0x48],ecx
   14000c8bd:	and    eax,edx
   14000c8bf:	je     0x14000c907
   14000c8c1:	cmp    eax,0x100
   14000c8c6:	je     0x14000c900
   14000c8c8:	cmp    eax,0x200
   14000c8cd:	je     0x14000c8f9
   14000c8cf:	cmp    eax,0x300
   14000c8d4:	je     0x14000c8f4
   14000c8d6:	cmp    eax,0x400
   14000c8db:	je     0x14000c907
   14000c8dd:	cmp    eax,0x500
   14000c8e2:	je     0x14000c90a
   14000c8e4:	cmp    eax,0x600
   14000c8e9:	je     0x14000c8f9
   14000c8eb:	cmp    eax,edx
   14000c8ed:	je     0x14000c90a
   14000c8ef:	jmp    0x14000c823
   14000c8f4:	mov    ebp,r12d
   14000c8f7:	jmp    0x14000c90a
   14000c8f9:	mov    ebp,0x5
   14000c8fe:	jmp    0x14000c90a
   14000c900:	mov    ebp,0x4
   14000c905:	jmp    0x14000c90a
   14000c907:	mov    ebp,r8d
   14000c90a:	bt     esi,0x8
   14000c90e:	mov    r13d,0x80
   14000c914:	mov    DWORD PTR [rsp+0x50],r13d
   14000c919:	jae    0x14000c939
   14000c91b:	mov    al,BYTE PTR [rip+0x6c27]        # 0x140013548
   14000c921:	not    al
   14000c923:	and    al,BYTE PTR [rsp+0xe8]
   14000c92a:	test   al,0x80
   14000c92c:	lea    eax,[r13-0x7f]
   14000c930:	cmove  r13d,eax
   14000c934:	mov    DWORD PTR [rsp+0x50],r13d
   14000c939:	test   sil,0x40
   14000c93d:	je     0x14000c955
   14000c93f:	bts    r13d,0x1a
   14000c944:	bts    r15d,0x10
   14000c949:	or     ecx,0x4
   14000c94c:	mov    DWORD PTR [rsp+0x50],r13d
   14000c951:	mov    DWORD PTR [rsp+0x48],ecx
   14000c955:	bt     esi,0xc
   14000c959:	jae    0x14000c965
   14000c95b:	bts    r13d,0x8
   14000c960:	mov    DWORD PTR [rsp+0x50],r13d
   14000c965:	test   sil,0x20
   14000c969:	je     0x14000c972
   14000c96b:	bts    r13d,0x1b
   14000c970:	jmp    0x14000c97d
   14000c972:	test   sil,0x10
   14000c976:	je     0x14000c982
   14000c978:	bts    r13d,0x1c
   14000c97d:	mov    DWORD PTR [rsp+0x50],r13d
   14000c982:	call   0x14000a5d0
   14000c987:	mov    DWORD PTR [rbx],eax
   14000c989:	cmp    eax,0xffffffff
   14000c98c:	jne    0x14000c9af
   14000c98e:	call   0x140003fdc
   14000c993:	mov    DWORD PTR [rax],edi
   14000c995:	or     DWORD PTR [rbx],0xffffffff
   14000c998:	call   0x140003fbc
   14000c99d:	mov    DWORD PTR [rax],0x18
   14000c9a3:	call   0x140003fbc
   14000c9a8:	mov    eax,DWORD PTR [rax]
   14000c9aa:	jmp    0x14000cf4f
   14000c9af:	mov    rax,QWORD PTR [rsp+0xc0]
   14000c9b7:	mov    r8d,DWORD PTR [rsp+0x48]
   14000c9bc:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000c9c4:	mov    QWORD PTR [rsp+0x30],rdi
   14000c9c9:	lea    r9,[rsp+0x60]
   14000c9ce:	mov    edx,r15d
   14000c9d1:	mov    DWORD PTR [rsp+0x28],r13d
   14000c9d6:	mov    DWORD PTR [rax],0x1
   14000c9dc:	mov    DWORD PTR [rsp+0x20],ebp
   14000c9e0:	call   QWORD PTR [rip+0x2862]        # 0x14000f248
   14000c9e6:	mov    QWORD PTR [rsp+0x58],rax
   14000c9eb:	cmp    rax,0xffffffffffffffff
   14000c9ef:	jne    0x14000ca81
   14000c9f5:	mov    ecx,0xc0000000
   14000c9fa:	mov    eax,r15d
   14000c9fd:	and    eax,ecx
   14000c9ff:	cmp    eax,ecx
   14000ca01:	jne    0x14000ca46
   14000ca03:	mov    eax,0x1
   14000ca08:	test   al,sil
   14000ca0b:	je     0x14000ca46
   14000ca0d:	mov    r8d,DWORD PTR [rsp+0x48]
   14000ca12:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000ca1a:	mov    QWORD PTR [rsp+0x30],rdi
   14000ca1f:	btr    r15d,0x1f
   14000ca24:	lea    r9,[rsp+0x60]
   14000ca29:	mov    DWORD PTR [rsp+0x28],r13d
   14000ca2e:	mov    edx,r15d
   14000ca31:	mov    DWORD PTR [rsp+0x20],ebp
   14000ca35:	call   QWORD PTR [rip+0x280d]        # 0x14000f248
   14000ca3b:	mov    QWORD PTR [rsp+0x58],rax
   14000ca40:	cmp    rax,0xffffffffffffffff
   14000ca44:	jne    0x14000ca81
   14000ca46:	movsxd rcx,DWORD PTR [rbx]
   14000ca49:	lea    r13,[rip+0x7930]        # 0x140014380
   14000ca50:	mov    rax,rcx
   14000ca53:	and    ecx,0x1f
   14000ca56:	sar    rax,0x5
   14000ca5a:	imul   rcx,rcx,0x58
   14000ca5e:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14000ca63:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14000ca68:	call   QWORD PTR [rip+0x266a]        # 0x14000f0d8
   14000ca6e:	mov    ecx,eax
   14000ca70:	call   0x140003ffc
   14000ca75:	call   0x140003fbc
   14000ca7a:	mov    edi,DWORD PTR [rax]
   14000ca7c:	jmp    0x14000cf4d
   14000ca81:	mov    rcx,rax
   14000ca84:	call   QWORD PTR [rip+0x25fe]        # 0x14000f088
   14000ca8a:	cmp    eax,edi
   14000ca8c:	jne    0x14000cadb
   14000ca8e:	movsxd rcx,DWORD PTR [rbx]
   14000ca91:	lea    r13,[rip+0x78e8]        # 0x140014380
   14000ca98:	mov    rax,rcx
   14000ca9b:	and    ecx,0x1f
   14000ca9e:	sar    rax,0x5
   14000caa2:	imul   rcx,rcx,0x58
   14000caa6:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14000caab:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14000cab0:	call   QWORD PTR [rip+0x2622]        # 0x14000f0d8
   14000cab6:	mov    ecx,eax
   14000cab8:	mov    ebx,eax
   14000caba:	call   0x140003ffc
   14000cabf:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cac4:	call   QWORD PTR [rip+0x2756]        # 0x14000f220
   14000caca:	cmp    ebx,edi
   14000cacc:	jne    0x14000ca75
   14000cace:	call   0x140003fbc
   14000cad3:	mov    DWORD PTR [rax],0xd
   14000cad9:	jmp    0x14000ca75
   14000cadb:	cmp    eax,r12d
   14000cade:	jne    0x14000cae6
   14000cae0:	or     r14b,0x40
   14000cae4:	jmp    0x14000caef
   14000cae6:	cmp    eax,0x3
   14000cae9:	jne    0x14000caef
   14000caeb:	or     r14b,0x8
   14000caef:	mov    rdx,QWORD PTR [rsp+0x58]
   14000caf4:	mov    ecx,DWORD PTR [rbx]
   14000caf6:	call   0x14000a320
   14000cafb:	movsxd rcx,DWORD PTR [rbx]
   14000cafe:	lea    r13,[rip+0x787b]        # 0x140014380
   14000cb05:	mov    rax,rcx
   14000cb08:	and    ecx,0x1f
   14000cb0b:	mov    edx,0x1
   14000cb10:	sar    rax,0x5
   14000cb14:	or     r14b,dl
   14000cb17:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14000cb1c:	imul   rcx,rcx,0x58
   14000cb20:	mov    BYTE PTR [rax+rcx*1+0x8],r14b
   14000cb25:	movsxd rcx,DWORD PTR [rbx]
   14000cb28:	mov    rax,rcx
   14000cb2b:	and    ecx,0x1f
   14000cb2e:	sar    rax,0x5
   14000cb32:	imul   rcx,rcx,0x58
   14000cb36:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14000cb3b:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   14000cb40:	mov    al,r14b
   14000cb43:	and    al,0x48
   14000cb45:	mov    BYTE PTR [rsp+0x4c],al
   14000cb49:	jne    0x14000cbd5
   14000cb4f:	test   r14b,r14b
   14000cb52:	jns    0x14000ce1a
   14000cb58:	test   r12b,sil
   14000cb5b:	je     0x14000cbd5
   14000cb5d:	mov    ecx,DWORD PTR [rbx]
   14000cb5f:	mov    r8d,r12d
   14000cb62:	or     edx,0xffffffff
   14000cb65:	call   0x14000d510
   14000cb6a:	mov    DWORD PTR [rsp+0x44],eax
   14000cb6e:	cmp    eax,0xffffffff
   14000cb71:	jne    0x14000cb8c
   14000cb73:	call   0x140003fdc
   14000cb78:	cmp    DWORD PTR [rax],0x83
   14000cb7e:	je     0x14000cbd0
   14000cb80:	mov    ecx,DWORD PTR [rbx]
   14000cb82:	call   0x140009e7c
   14000cb87:	jmp    0x14000ca75
   14000cb8c:	mov    ecx,DWORD PTR [rbx]
   14000cb8e:	lea    rdx,[rsp+0x40]
   14000cb93:	mov    r8d,0x1
   14000cb99:	mov    BYTE PTR [rsp+0x40],dil
   14000cb9e:	call   0x14000be78
   14000cba3:	cmp    eax,edi
   14000cba5:	jne    0x14000cbbf
   14000cba7:	cmp    BYTE PTR [rsp+0x40],0x1a
   14000cbac:	jne    0x14000cbbf
   14000cbae:	movsxd rdx,DWORD PTR [rsp+0x44]
   14000cbb3:	mov    ecx,DWORD PTR [rbx]
   14000cbb5:	call   0x14000d378
   14000cbba:	cmp    eax,0xffffffff
   14000cbbd:	je     0x14000cb80
   14000cbbf:	mov    ecx,DWORD PTR [rbx]
   14000cbc1:	xor    r8d,r8d
   14000cbc4:	xor    edx,edx
   14000cbc6:	call   0x14000d510
   14000cbcb:	cmp    eax,0xffffffff
   14000cbce:	je     0x14000cb80
   14000cbd0:	mov    edx,0x1
   14000cbd5:	test   r14b,r14b
   14000cbd8:	jns    0x14000ce1a
   14000cbde:	mov    ecx,0x74000
   14000cbe3:	test   ecx,esi
   14000cbe5:	jne    0x14000cbf7
   14000cbe7:	mov    eax,DWORD PTR [rsp+0x54]
   14000cbeb:	and    eax,ecx
   14000cbed:	jne    0x14000cbf5
   14000cbef:	bts    esi,0xe
   14000cbf3:	jmp    0x14000cbf7
   14000cbf5:	or     esi,eax
   14000cbf7:	mov    eax,esi
   14000cbf9:	and    eax,ecx
   14000cbfb:	cmp    eax,0x4000
   14000cc00:	je     0x14000cc4c
   14000cc02:	cmp    eax,0x10000
   14000cc07:	je     0x14000cc35
   14000cc09:	cmp    eax,0x14000
   14000cc0e:	je     0x14000cc35
   14000cc10:	cmp    eax,0x20000
   14000cc15:	je     0x14000cc42
   14000cc17:	cmp    eax,0x24000
   14000cc1c:	je     0x14000cc42
   14000cc1e:	cmp    eax,0x40000
   14000cc23:	je     0x14000cc2c
   14000cc25:	cmp    eax,0x44000
   14000cc2a:	jne    0x14000cc54
   14000cc2c:	mov    BYTE PTR [rsp+0xd8],dl
   14000cc33:	jmp    0x14000cc54
   14000cc35:	mov    ecx,0x301
   14000cc3a:	mov    eax,esi
   14000cc3c:	and    eax,ecx
   14000cc3e:	cmp    eax,ecx
   14000cc40:	jne    0x14000cc54
   14000cc42:	mov    BYTE PTR [rsp+0xd8],r12b
   14000cc4a:	jmp    0x14000cc54
   14000cc4c:	mov    BYTE PTR [rsp+0xd8],dil
   14000cc54:	test   esi,0x70000
   14000cc5a:	je     0x14000ce1a
   14000cc60:	mov    DWORD PTR [rsp+0x44],edi
   14000cc64:	test   r14b,0x40
   14000cc68:	jne    0x14000ce1a
   14000cc6e:	mov    eax,r15d
   14000cc71:	and    eax,0xc0000000
   14000cc76:	cmp    eax,0x40000000
   14000cc7b:	je     0x14000cda5
   14000cc81:	cmp    eax,0x80000000
   14000cc86:	je     0x14000cd04
   14000cc88:	cmp    eax,0xc0000000
   14000cc8d:	jne    0x14000ce1a
   14000cc93:	cmp    ebp,edi
   14000cc95:	jbe    0x14000ce1a
   14000cc9b:	cmp    ebp,r12d
   14000cc9e:	jbe    0x14000ccae
   14000cca0:	cmp    ebp,0x4
   14000cca3:	jbe    0x14000ccdd
   14000cca5:	cmp    ebp,0x5
   14000cca8:	jne    0x14000ce1a
   14000ccae:	movsx  ecx,BYTE PTR [rsp+0xd8]
   14000ccb6:	mov    r8d,0x1
   14000ccbc:	mov    ebp,edi
   14000ccbe:	sub    ecx,r8d
   14000ccc1:	je     0x14000cde7
   14000ccc7:	cmp    ecx,r8d
   14000ccca:	jne    0x14000ce20
   14000ccd0:	mov    DWORD PTR [rsp+0x44],0xfeff
   14000ccd8:	jmp    0x14000cdf5
   14000ccdd:	mov    ecx,DWORD PTR [rbx]
   14000ccdf:	mov    r8d,r12d
   14000cce2:	xor    edx,edx
   14000cce4:	call   0x140009668
   14000cce9:	cmp    rax,rdi
   14000ccec:	je     0x14000ccae
   14000ccee:	mov    ecx,DWORD PTR [rbx]
   14000ccf0:	xor    r8d,r8d
   14000ccf3:	xor    edx,edx
   14000ccf5:	call   0x140009668
   14000ccfa:	cmp    rax,0xffffffffffffffff
   14000ccfe:	je     0x14000cb80
   14000cd04:	mov    ecx,DWORD PTR [rbx]
   14000cd06:	lea    rdx,[rsp+0x44]
   14000cd0b:	mov    r8d,0x3
   14000cd11:	call   0x14000be78
   14000cd16:	cmp    eax,0xffffffff
   14000cd19:	je     0x14000cb80
   14000cd1f:	cmp    eax,r12d
   14000cd22:	je     0x14000cd44
   14000cd24:	cmp    eax,0x3
   14000cd27:	jne    0x14000cd94
   14000cd29:	cmp    DWORD PTR [rsp+0x44],0xbfbbef
   14000cd31:	jne    0x14000cd44
   14000cd33:	lea    r8d,[rax-0x2]
   14000cd37:	mov    BYTE PTR [rsp+0xd8],r8b
   14000cd3f:	jmp    0x14000ce20
   14000cd44:	movzx  eax,WORD PTR [rsp+0x44]
   14000cd49:	cmp    eax,0xfffe
   14000cd4e:	jne    0x14000cd6a
   14000cd50:	mov    ecx,DWORD PTR [rbx]
   14000cd52:	call   0x140009e7c
   14000cd57:	call   0x140003fbc
   14000cd5c:	mov    ebx,0x16
   14000cd61:	mov    DWORD PTR [rax],ebx
   14000cd63:	mov    edi,ebx
   14000cd65:	jmp    0x14000cf4d
   14000cd6a:	cmp    eax,0xfeff
   14000cd6f:	jne    0x14000cd94
   14000cd71:	mov    ecx,DWORD PTR [rbx]
   14000cd73:	xor    r8d,r8d
   14000cd76:	mov    edx,r12d
   14000cd79:	call   0x14000d510
   14000cd7e:	cmp    eax,0xffffffff
   14000cd81:	je     0x14000cb80
   14000cd87:	mov    BYTE PTR [rsp+0xd8],r12b
   14000cd8f:	jmp    0x14000ce1a
   14000cd94:	mov    ecx,DWORD PTR [rbx]
   14000cd96:	xor    r8d,r8d
   14000cd99:	xor    edx,edx
   14000cd9b:	call   0x14000d510
   14000cda0:	cmp    eax,0xffffffff
   14000cda3:	jmp    0x14000cde0
   14000cda5:	cmp    ebp,edi
   14000cda7:	jbe    0x14000ce1a
   14000cda9:	cmp    ebp,r12d
   14000cdac:	jbe    0x14000ccae
   14000cdb2:	cmp    ebp,0x4
   14000cdb5:	ja     0x14000cca5
   14000cdbb:	mov    ecx,DWORD PTR [rbx]
   14000cdbd:	mov    r8d,r12d
   14000cdc0:	xor    edx,edx
   14000cdc2:	call   0x140009668
   14000cdc7:	cmp    rax,rdi
   14000cdca:	je     0x14000ccae
   14000cdd0:	mov    ecx,DWORD PTR [rbx]
   14000cdd2:	xor    r8d,r8d
   14000cdd5:	xor    edx,edx
   14000cdd7:	call   0x140009668
   14000cddc:	cmp    rax,0xffffffffffffffff
   14000cde0:	jne    0x14000ce1a
   14000cde2:	jmp    0x14000cb80
   14000cde7:	mov    DWORD PTR [rsp+0x44],0xbfbbef
   14000cdef:	mov    r12d,0x3
   14000cdf5:	mov    ecx,DWORD PTR [rbx]
   14000cdf7:	movsxd rax,ebp
   14000cdfa:	mov    r8d,r12d
   14000cdfd:	lea    rdx,[rsp+rax*1+0x44]
   14000ce02:	sub    r8d,ebp
   14000ce05:	call   0x140007e58
   14000ce0a:	cmp    eax,0xffffffff
   14000ce0d:	je     0x14000cb80
   14000ce13:	add    ebp,eax
   14000ce15:	cmp    r12d,ebp
   14000ce18:	jg     0x14000cdf5
   14000ce1a:	mov    r8d,0x1
   14000ce20:	movsxd rcx,DWORD PTR [rbx]
   14000ce23:	mov    bpl,BYTE PTR [rsp+0xd8]
   14000ce2b:	mov    rax,rcx
   14000ce2e:	and    ecx,0x1f
   14000ce31:	and    bpl,0x7f
   14000ce35:	sar    rax,0x5
   14000ce39:	imul   rcx,rcx,0x58
   14000ce3d:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14000ce42:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   14000ce47:	or     BYTE PTR [rax+rcx*1+0x38],bpl
   14000ce4c:	movsxd rdx,DWORD PTR [rbx]
   14000ce4f:	mov    rax,rdx
   14000ce52:	and    edx,0x1f
   14000ce55:	sar    rax,0x5
   14000ce59:	imul   rdx,rdx,0x58
   14000ce5d:	mov    rcx,QWORD PTR [r13+rax*8+0x0]
   14000ce62:	mov    eax,esi
   14000ce64:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   14000ce69:	shr    eax,0x10
   14000ce6c:	shl    al,0x7
   14000ce6f:	or     BYTE PTR [rcx+rdx*1+0x38],al
   14000ce73:	cmp    BYTE PTR [rsp+0x4c],dil
   14000ce78:	jne    0x14000ce9b
   14000ce7a:	test   sil,0x8
   14000ce7e:	je     0x14000ce9b
   14000ce80:	movsxd rcx,DWORD PTR [rbx]
   14000ce83:	mov    rax,rcx
   14000ce86:	and    ecx,0x1f
   14000ce89:	sar    rax,0x5
   14000ce8d:	imul   rcx,rcx,0x58
   14000ce91:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14000ce96:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   14000ce9b:	mov    eax,r15d
   14000ce9e:	and    eax,0xc0000000
   14000cea3:	cmp    eax,0xc0000000
   14000cea8:	jne    0x14000cf4d
   14000ceae:	test   r8b,sil
   14000ceb1:	je     0x14000cf4d
   14000ceb7:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cebc:	call   QWORD PTR [rip+0x235e]        # 0x14000f220
   14000cec2:	mov    eax,DWORD PTR [rsp+0x50]
   14000cec6:	mov    r8d,DWORD PTR [rsp+0x48]
   14000cecb:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000ced3:	mov    QWORD PTR [rsp+0x30],rdi
   14000ced8:	mov    DWORD PTR [rsp+0x28],eax
   14000cedc:	btr    r15d,0x1f
   14000cee1:	lea    r9,[rsp+0x60]
   14000cee6:	mov    DWORD PTR [rsp+0x20],0x3
   14000ceee:	mov    edx,r15d
   14000cef1:	call   QWORD PTR [rip+0x2351]        # 0x14000f248
   14000cef7:	cmp    rax,0xffffffffffffffff
   14000cefb:	jne    0x14000cf33
   14000cefd:	call   QWORD PTR [rip+0x21d5]        # 0x14000f0d8
   14000cf03:	mov    ecx,eax
   14000cf05:	call   0x140003ffc
   14000cf0a:	movsxd r11,DWORD PTR [rbx]
   14000cf0d:	mov    rax,r11
   14000cf10:	and    r11d,0x1f
   14000cf14:	sar    rax,0x5
   14000cf18:	imul   r11,r11,0x58
   14000cf1c:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   14000cf21:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   14000cf27:	mov    ecx,DWORD PTR [rbx]
   14000cf29:	call   0x14000a3d0
   14000cf2e:	jmp    0x14000ca75
   14000cf33:	movsxd rdx,DWORD PTR [rbx]
   14000cf36:	mov    rcx,rdx
   14000cf39:	and    edx,0x1f
   14000cf3c:	sar    rcx,0x5
   14000cf40:	imul   rdx,rdx,0x58
   14000cf44:	mov    rcx,QWORD PTR [r13+rcx*8+0x0]
   14000cf49:	mov    QWORD PTR [rdx+rcx*1],rax
   14000cf4d:	mov    eax,edi
   14000cf4f:	mov    rbx,QWORD PTR [rsp+0xc8]
   14000cf57:	add    rsp,0x80
   14000cf5e:	pop    r15
   14000cf60:	pop    r14
   14000cf62:	pop    r13
   14000cf64:	pop    r12
   14000cf66:	pop    rdi
   14000cf67:	pop    rsi
   14000cf68:	pop    rbp
   14000cf69:	ret    
   14000cf6a:	int3   
   14000cf6b:	int3   
   14000cf6c:	mov    rax,rsp
   14000cf6f:	mov    DWORD PTR [rax+0x10],edx
   14000cf72:	mov    QWORD PTR [rax+0x18],r8
   14000cf76:	mov    QWORD PTR [rax+0x20],r9
   14000cf7a:	push   rsi
   14000cf7b:	push   rdi
   14000cf7c:	sub    rsp,0x58
   14000cf80:	or     DWORD PTR [rax-0x28],0xffffffff
   14000cf84:	and    DWORD PTR [rax-0x24],0x0
   14000cf88:	xor    r8d,r8d
   14000cf8b:	test   rcx,rcx
   14000cf8e:	setne  r8b
   14000cf92:	test   r8d,r8d
   14000cf95:	jne    0x14000cfbf
   14000cf97:	call   0x140003fbc
   14000cf9c:	mov    DWORD PTR [rax],0x16
   14000cfa2:	and    QWORD PTR [rsp+0x20],0x0
   14000cfa8:	xor    r9d,r9d
   14000cfab:	xor    r8d,r8d
   14000cfae:	xor    edx,edx
   14000cfb0:	xor    ecx,ecx
   14000cfb2:	call   0x140003eec
   14000cfb7:	or     eax,0xffffffff
   14000cfba:	jmp    0x14000d052
   14000cfbf:	lea    rax,[rsp+0x80]
   14000cfc7:	add    rax,0x8
   14000cfcb:	mov    r8d,DWORD PTR [rax-0x8]
   14000cfcf:	and    DWORD PTR [rsp+0x30],0x0
   14000cfd4:	mov    DWORD PTR [rsp+0x28],r8d
   14000cfd9:	mov    DWORD PTR [rsp+0x20],0x40
   14000cfe1:	mov    r9d,edx
   14000cfe4:	mov    r8,rcx
   14000cfe7:	lea    rdx,[rsp+0x40]
   14000cfec:	lea    rcx,[rsp+0x44]
   14000cff1:	call   0x14000c76c
   14000cff6:	mov    esi,eax
   14000cff8:	mov    DWORD PTR [rsp+0x48],eax
   14000cffc:	cmp    DWORD PTR [rsp+0x44],0x0
   14000d001:	je     0x14000d03c
   14000d003:	test   eax,eax
   14000d005:	je     0x14000d02f
   14000d007:	movsxd rdi,DWORD PTR [rsp+0x40]
   14000d00c:	mov    rcx,rdi
   14000d00f:	mov    rax,rdi
   14000d012:	sar    rax,0x5
   14000d016:	lea    r8,[rip+0x7363]        # 0x140014380
   14000d01d:	and    ecx,0x1f
   14000d020:	imul   rcx,rcx,0x58
   14000d024:	mov    rax,QWORD PTR [r8+rax*8]
   14000d028:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14000d02d:	jmp    0x14000d033
   14000d02f:	mov    edi,DWORD PTR [rsp+0x40]
   14000d033:	mov    ecx,edi
   14000d035:	call   0x14000a5a8
   14000d03a:	jmp    0x14000d040
   14000d03c:	mov    edi,DWORD PTR [rsp+0x40]
   14000d040:	test   esi,esi
   14000d042:	je     0x14000d050
   14000d044:	call   0x140003fbc
   14000d049:	mov    DWORD PTR [rax],esi
   14000d04b:	or     eax,0xffffffff
   14000d04e:	jmp    0x14000d052
   14000d050:	mov    eax,edi
   14000d052:	add    rsp,0x58
   14000d056:	pop    rdi
   14000d057:	pop    rsi
   14000d058:	ret    
   14000d059:	int3   
   14000d05a:	int3   
   14000d05b:	int3   
   14000d05c:	rex push rbx
   14000d05e:	sub    rsp,0x30
   14000d062:	mov    r10,r8
   14000d065:	mov    rax,rdx
   14000d068:	mov    rbx,rcx
   14000d06b:	test   rcx,rcx
   14000d06e:	jne    0x14000d096
   14000d070:	call   0x140003fbc
   14000d075:	and    QWORD PTR [rsp+0x20],0x0
   14000d07b:	xor    r9d,r9d
   14000d07e:	xor    r8d,r8d
   14000d081:	xor    edx,edx
   14000d083:	xor    ecx,ecx
   14000d085:	mov    DWORD PTR [rax],0x16
   14000d08b:	call   0x140003eec
   14000d090:	or     rax,0xffffffffffffffff
   14000d094:	jmp    0x14000d0eb
   14000d096:	test   rax,rax
   14000d099:	je     0x14000d070
   14000d09b:	mov    QWORD PTR [rsp+0x20],rcx
   14000d0a0:	lea    r9,[rsp+0x58]
   14000d0a5:	lea    r8,[rsp+0x40]
   14000d0aa:	mov    rdx,r10
   14000d0ad:	mov    rcx,rax
   14000d0b0:	call   0x14000d984
   14000d0b5:	cmp    eax,0xffffffff
   14000d0b8:	je     0x14000d090
   14000d0ba:	mov    r9,QWORD PTR [rsp+0x58]
   14000d0bf:	mov    r8,QWORD PTR [rsp+0x40]
   14000d0c4:	mov    rdx,rbx
   14000d0c7:	mov    ecx,0x2
   14000d0cc:	call   0x14000d6b8
   14000d0d1:	mov    rcx,QWORD PTR [rsp+0x40]
   14000d0d6:	mov    rbx,rax
   14000d0d9:	call   0x140004244
   14000d0de:	mov    rcx,QWORD PTR [rsp+0x58]
   14000d0e3:	call   0x140004244
   14000d0e8:	mov    rax,rbx
   14000d0eb:	add    rsp,0x30
   14000d0ef:	pop    rbx
   14000d0f0:	ret    
   14000d0f1:	int3   
   14000d0f2:	int3   
   14000d0f3:	int3   
   14000d0f4:	mov    QWORD PTR [rsp+0x10],rbx
   14000d0f9:	mov    QWORD PTR [rsp+0x18],r8
   14000d0fe:	push   rbp
   14000d0ff:	push   rsi
   14000d100:	push   rdi
   14000d101:	push   r12
   14000d103:	push   r13
   14000d105:	push   r14
   14000d107:	push   r15
   14000d109:	sub    rsp,0x30
   14000d10d:	xor    r14d,r14d
   14000d110:	mov    r12,r8
   14000d113:	mov    r13,rdx
   14000d116:	mov    rbp,rcx
   14000d119:	mov    rsi,rcx
   14000d11c:	cmp    rcx,r14
   14000d11f:	jne    0x14000d149
   14000d121:	call   0x140003fbc
   14000d126:	xor    r9d,r9d
   14000d129:	xor    r8d,r8d
   14000d12c:	xor    edx,edx
   14000d12e:	xor    ecx,ecx
   14000d130:	mov    QWORD PTR [rsp+0x20],r14
   14000d135:	mov    DWORD PTR [rax],0x16
   14000d13b:	call   0x140003eec
   14000d140:	or     rax,0xffffffffffffffff
   14000d144:	jmp    0x14000d360
   14000d149:	cmp    BYTE PTR [rcx],r14b
   14000d14c:	je     0x14000d121
   14000d14e:	cmp    rdx,r14
   14000d151:	je     0x14000d121
   14000d153:	mov    rax,QWORD PTR [rdx]
   14000d156:	cmp    rax,r14
   14000d159:	je     0x14000d121
   14000d15b:	cmp    BYTE PTR [rax],r14b
   14000d15e:	je     0x14000d121
   14000d160:	mov    edx,0x5c
   14000d165:	call   0x14000dfe0
   14000d16a:	mov    edx,0x2f
   14000d16f:	mov    rcx,rbp
   14000d172:	mov    rdi,rax
   14000d175:	call   0x14000dfe0
   14000d17a:	mov    r15d,0x1
   14000d180:	cmp    rax,r14
   14000d183:	jne    0x14000d225
   14000d189:	cmp    rdi,r14
   14000d18c:	jne    0x14000d232
   14000d192:	lea    edx,[r15+0x39]
   14000d196:	mov    rcx,rbp
   14000d199:	call   0x14000bdf0
   14000d19e:	mov    rdi,rax
   14000d1a1:	cmp    rax,r14
   14000d1a4:	jne    0x14000d232
   14000d1aa:	mov    rcx,rbp
   14000d1ad:	call   0x1400070e0
   14000d1b2:	mov    rdx,r15
   14000d1b5:	lea    rbx,[rax+0x3]
   14000d1b9:	mov    rcx,rbx
   14000d1bc:	call   0x1400040b0
   14000d1c1:	mov    rsi,rax
   14000d1c4:	cmp    rax,r14
   14000d1c7:	je     0x14000d140
   14000d1cd:	lea    r8,[rip+0x346c]        # 0x140010640
   14000d1d4:	mov    rdx,rbx
   14000d1d7:	mov    rcx,rax
   14000d1da:	call   0x140009454
   14000d1df:	cmp    eax,r14d
   14000d1e2:	je     0x14000d1f8
   14000d1e4:	xor    r9d,r9d
   14000d1e7:	xor    r8d,r8d
   14000d1ea:	xor    edx,edx
   14000d1ec:	xor    ecx,ecx
   14000d1ee:	mov    QWORD PTR [rsp+0x20],r14
   14000d1f3:	call   0x140003dc4
   14000d1f8:	mov    r8,rbp
   14000d1fb:	mov    rdx,rbx
   14000d1fe:	mov    rcx,rsi
   14000d201:	call   0x1400092f0
   14000d206:	cmp    eax,r14d
   14000d209:	je     0x14000d21f
   14000d20b:	xor    r9d,r9d
   14000d20e:	xor    r8d,r8d
   14000d211:	xor    edx,edx
   14000d213:	xor    ecx,ecx
   14000d215:	mov    QWORD PTR [rsp+0x20],r14
   14000d21a:	call   0x140003dc4
   14000d21f:	lea    rdi,[rsi+0x2]
   14000d223:	jmp    0x14000d232
   14000d225:	cmp    rdi,r14
   14000d228:	je     0x14000d22f
   14000d22a:	cmp    rax,rdi
   14000d22d:	jbe    0x14000d232
   14000d22f:	mov    rdi,rax
   14000d232:	or     rbx,0xffffffffffffffff
   14000d236:	mov    rcx,rdi
   14000d239:	lea    edx,[rbx+0x2f]
   14000d23c:	call   0x14000dfe0
   14000d241:	mov    rcx,rsi
   14000d244:	cmp    rax,r14
   14000d247:	je     0x14000d26f
   14000d249:	xor    edx,edx
   14000d24b:	call   0x14000de60
   14000d250:	cmp    eax,r14d
   14000d253:	jne    0x14000d350
   14000d259:	mov    r8,r12
   14000d25c:	mov    rdx,r13
   14000d25f:	mov    rcx,rsi
   14000d262:	call   0x14000d05c
   14000d267:	mov    rbx,rax
   14000d26a:	jmp    0x14000d350
   14000d26f:	call   0x1400070e0
   14000d274:	mov    rdx,r15
   14000d277:	lea    r12,[rax+0x5]
   14000d27b:	mov    rcx,r12
   14000d27e:	call   0x1400040b0
   14000d283:	mov    rdi,rax
   14000d286:	cmp    rax,r14
   14000d289:	je     0x14000d35d
   14000d28f:	mov    r8,rsi
   14000d292:	mov    rdx,r12
   14000d295:	mov    rcx,rax
   14000d298:	call   0x140009454
   14000d29d:	cmp    eax,r14d
   14000d2a0:	je     0x14000d2b6
   14000d2a2:	xor    r9d,r9d
   14000d2a5:	xor    r8d,r8d
   14000d2a8:	xor    edx,edx
   14000d2aa:	xor    ecx,ecx
   14000d2ac:	mov    QWORD PTR [rsp+0x20],r14
   14000d2b1:	call   0x140003dc4
   14000d2b6:	mov    rcx,rsi
   14000d2b9:	call   0x1400070e0
   14000d2be:	lea    r14,[rdi+rax*1]
   14000d2c2:	call   0x140003fbc
   14000d2c7:	sub    r12,r14
   14000d2ca:	mov    r15d,DWORD PTR [rax]
   14000d2cd:	lea    rax,[r12+rdi*1]
   14000d2d1:	lea    r12,[rip+0x6250]        # 0x140013528
   14000d2d8:	mov    QWORD PTR [rsp+0x70],rax
   14000d2dd:	mov    r8,QWORD PTR [r12]
   14000d2e1:	mov    rdx,rax
   14000d2e4:	mov    rcx,r14
   14000d2e7:	call   0x140009454
   14000d2ec:	test   eax,eax
   14000d2ee:	je     0x14000d305
   14000d2f0:	and    QWORD PTR [rsp+0x20],0x0
   14000d2f6:	xor    r9d,r9d
   14000d2f9:	xor    r8d,r8d
   14000d2fc:	xor    edx,edx
   14000d2fe:	xor    ecx,ecx
   14000d300:	call   0x140003dc4
   14000d305:	xor    edx,edx
   14000d307:	mov    rcx,rdi
   14000d30a:	call   0x14000de60
   14000d30f:	test   eax,eax
   14000d311:	je     0x14000d32a
   14000d313:	lea    rax,[rip+0x61f6]        # 0x140013510
   14000d31a:	sub    r12,0x8
   14000d31e:	cmp    r12,rax
   14000d321:	mov    rax,QWORD PTR [rsp+0x70]
   14000d326:	jge    0x14000d2dd
   14000d328:	jmp    0x14000d348
   14000d32a:	call   0x140003fbc
   14000d32f:	mov    r8,QWORD PTR [rsp+0x80]
   14000d337:	mov    rdx,r13
   14000d33a:	mov    rcx,rdi
   14000d33d:	mov    DWORD PTR [rax],r15d
   14000d340:	call   0x14000d05c
   14000d345:	mov    rbx,rax
   14000d348:	mov    rcx,rdi
   14000d34b:	call   0x140004244
   14000d350:	cmp    rsi,rbp
   14000d353:	je     0x14000d35d
   14000d355:	mov    rcx,rsi
   14000d358:	call   0x140004244
   14000d35d:	mov    rax,rbx
   14000d360:	mov    rbx,QWORD PTR [rsp+0x78]
   14000d365:	add    rsp,0x30
   14000d369:	pop    r15
   14000d36b:	pop    r14
   14000d36d:	pop    r13
   14000d36f:	pop    r12
   14000d371:	pop    rdi
   14000d372:	pop    rsi
   14000d373:	pop    rbp
   14000d374:	ret    
   14000d375:	int3   
   14000d376:	int3   
   14000d377:	int3   
   14000d378:	mov    rax,rsp
   14000d37b:	mov    QWORD PTR [rax+0x8],rbx
   14000d37f:	mov    QWORD PTR [rax+0x10],rbp
   14000d383:	mov    QWORD PTR [rax+0x18],rsi
   14000d387:	mov    QWORD PTR [rax+0x20],rdi
   14000d38b:	push   r12
   14000d38d:	push   r13
   14000d38f:	push   r15
   14000d391:	sub    rsp,0x20
   14000d395:	mov    rbp,rdx
   14000d398:	xor    edi,edi
   14000d39a:	xor    edx,edx
   14000d39c:	lea    r8d,[rdi+0x1]
   14000d3a0:	mov    esi,ecx
   14000d3a2:	call   0x140009668
   14000d3a7:	mov    r13,rax
   14000d3aa:	cmp    rax,0xffffffffffffffff
   14000d3ae:	je     0x14000d400
   14000d3b0:	lea    r8d,[rdi+0x2]
   14000d3b4:	xor    edx,edx
   14000d3b6:	mov    ecx,esi
   14000d3b8:	call   0x140009668
   14000d3bd:	cmp    rax,0xffffffffffffffff
   14000d3c1:	je     0x14000d400
   14000d3c3:	mov    rbx,rbp
   14000d3c6:	sub    rbx,rax
   14000d3c9:	cmp    rbx,rdi
   14000d3cc:	jle    0x14000d493
   14000d3d2:	call   QWORD PTR [rip+0x1ea0]        # 0x14000f278
   14000d3d8:	mov    r15d,0x1000
   14000d3de:	lea    edx,[rdi+0x8]
   14000d3e1:	mov    rcx,rax
   14000d3e4:	mov    r8,r15
   14000d3e7:	call   QWORD PTR [rip+0x1cfb]        # 0x14000f0e8
   14000d3ed:	mov    rbp,rax
   14000d3f0:	cmp    rax,rdi
   14000d3f3:	jne    0x14000d426
   14000d3f5:	call   0x140003fbc
   14000d3fa:	mov    DWORD PTR [rax],0xc
   14000d400:	call   0x140003fbc
   14000d405:	mov    eax,DWORD PTR [rax]
   14000d407:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d40c:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d411:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d416:	mov    rdi,QWORD PTR [rsp+0x58]
   14000d41b:	add    rsp,0x20
   14000d41f:	pop    r15
   14000d421:	pop    r13
   14000d423:	pop    r12
   14000d425:	ret    
   14000d426:	mov    edx,0x8000
   14000d42b:	mov    ecx,esi
   14000d42d:	call   0x14000d5a8
   14000d432:	mov    r12d,eax
   14000d435:	mov    r8d,ebx
   14000d438:	cmp    rbx,r15
   14000d43b:	mov    rdx,rbp
   14000d43e:	cmovge r8d,r15d
   14000d442:	mov    ecx,esi
   14000d444:	call   0x1400076f8
   14000d449:	cmp    eax,0xffffffff
   14000d44c:	je     0x14000d45a
   14000d44e:	cdqe   
   14000d450:	sub    rbx,rax
   14000d453:	cmp    rbx,rdi
   14000d456:	jle    0x14000d473
   14000d458:	jmp    0x14000d435
   14000d45a:	call   0x140003fdc
   14000d45f:	cmp    DWORD PTR [rax],0x5
   14000d462:	jne    0x14000d46f
   14000d464:	call   0x140003fbc
   14000d469:	mov    DWORD PTR [rax],0xd
   14000d46f:	or     rdi,0xffffffffffffffff
   14000d473:	mov    edx,r12d
   14000d476:	mov    ecx,esi
   14000d478:	call   0x14000d5a8
   14000d47d:	call   QWORD PTR [rip+0x1df5]        # 0x14000f278
   14000d483:	mov    r8,rbp
   14000d486:	mov    rcx,rax
   14000d489:	xor    edx,edx
   14000d48b:	call   QWORD PTR [rip+0x1c4f]        # 0x14000f0e0
   14000d491:	jmp    0x14000d4e8
   14000d493:	jge    0x14000d4f2
   14000d495:	xor    r8d,r8d
   14000d498:	mov    rdx,rbp
   14000d49b:	mov    ecx,esi
   14000d49d:	call   0x140009668
   14000d4a2:	cmp    rax,0xffffffffffffffff
   14000d4a6:	je     0x14000d400
   14000d4ac:	mov    ecx,esi
   14000d4ae:	call   0x14000a47c
   14000d4b3:	mov    rcx,rax
   14000d4b6:	call   QWORD PTR [rip+0x1db4]        # 0x14000f270
   14000d4bc:	neg    eax
   14000d4be:	sbb    rdi,rdi
   14000d4c1:	neg    rdi
   14000d4c4:	dec    rdi
   14000d4c7:	cmp    rdi,0xffffffffffffffff
   14000d4cb:	jne    0x14000d4f2
   14000d4cd:	call   0x140003fbc
   14000d4d2:	mov    DWORD PTR [rax],0xd
   14000d4d8:	call   0x140003fdc
   14000d4dd:	mov    rbx,rax
   14000d4e0:	call   QWORD PTR [rip+0x1bf2]        # 0x14000f0d8
   14000d4e6:	mov    DWORD PTR [rbx],eax
   14000d4e8:	cmp    rdi,0xffffffffffffffff
   14000d4ec:	je     0x14000d400
   14000d4f2:	xor    r8d,r8d
   14000d4f5:	mov    rdx,r13
   14000d4f8:	mov    ecx,esi
   14000d4fa:	call   0x140009668
   14000d4ff:	cmp    rax,0xffffffffffffffff
   14000d503:	je     0x14000d400
   14000d509:	xor    eax,eax
   14000d50b:	jmp    0x14000d407
   14000d510:	mov    QWORD PTR [rsp+0x8],rbx
   14000d515:	mov    QWORD PTR [rsp+0x10],rsi
   14000d51a:	push   rdi
   14000d51b:	sub    rsp,0x20
   14000d51f:	movsxd rbx,ecx
   14000d522:	mov    edi,r8d
   14000d525:	mov    esi,edx
   14000d527:	mov    ecx,ebx
   14000d529:	call   0x14000a47c
   14000d52e:	cmp    rax,0xffffffffffffffff
   14000d532:	jne    0x14000d544
   14000d534:	call   0x140003fbc
   14000d539:	mov    DWORD PTR [rax],0x9
   14000d53f:	or     eax,0xffffffff
   14000d542:	jmp    0x14000d596
   14000d544:	mov    r9d,edi
   14000d547:	xor    r8d,r8d
   14000d54a:	mov    edx,esi
   14000d54c:	mov    rcx,rax
   14000d54f:	call   QWORD PTR [rip+0x1cbb]        # 0x14000f210
   14000d555:	mov    edi,eax
   14000d557:	cmp    eax,0xffffffff
   14000d55a:	jne    0x14000d564
   14000d55c:	call   QWORD PTR [rip+0x1b76]        # 0x14000f0d8
   14000d562:	jmp    0x14000d566
   14000d564:	xor    eax,eax
   14000d566:	test   eax,eax
   14000d568:	je     0x14000d573
   14000d56a:	mov    ecx,eax
   14000d56c:	call   0x140003ffc
   14000d571:	jmp    0x14000d53f
   14000d573:	mov    rcx,rbx
   14000d576:	mov    rax,rbx
   14000d579:	lea    rdx,[rip+0x6e00]        # 0x140014380
   14000d580:	sar    rax,0x5
   14000d584:	and    ecx,0x1f
   14000d587:	mov    rax,QWORD PTR [rdx+rax*8]
   14000d58b:	imul   rcx,rcx,0x58
   14000d58f:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   14000d594:	mov    eax,edi
   14000d596:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d59b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d5a0:	add    rsp,0x20
   14000d5a4:	pop    rdi
   14000d5a5:	ret    
   14000d5a6:	int3   
   14000d5a7:	int3   
   14000d5a8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5ad:	movsxd r8,ecx
   14000d5b0:	lea    rbx,[rip+0x6dc9]        # 0x140014380
   14000d5b7:	mov    r9,r8
   14000d5ba:	and    r8d,0x1f
   14000d5be:	sar    r9,0x5
   14000d5c2:	imul   r8,r8,0x58
   14000d5c6:	mov    rcx,QWORD PTR [rbx+r9*8]
   14000d5ca:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   14000d5cf:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   14000d5d5:	add    al,al
   14000d5d7:	and    r11d,0x80
   14000d5de:	movsx  r10d,al
   14000d5e2:	sar    r10d,1
   14000d5e5:	cmp    edx,0x4000
   14000d5eb:	je     0x14000d645
   14000d5ed:	cmp    edx,0x8000
   14000d5f3:	je     0x14000d63d
   14000d5f5:	cmp    edx,0x10000
   14000d5fb:	je     0x14000d625
   14000d5fd:	cmp    edx,0x20000
   14000d603:	je     0x14000d625
   14000d605:	cmp    edx,0x40000
   14000d60b:	jne    0x14000d655
   14000d60d:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000d613:	mov    rax,QWORD PTR [rbx+r9*8]
   14000d617:	and    BYTE PTR [rax+r8*1+0x38],0x81
   14000d61d:	or     BYTE PTR [rax+r8*1+0x38],0x1
   14000d623:	jmp    0x14000d655
   14000d625:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000d62b:	mov    rax,QWORD PTR [rbx+r9*8]
   14000d62f:	and    BYTE PTR [rax+r8*1+0x38],0x82
   14000d635:	or     BYTE PTR [rax+r8*1+0x38],0x2
   14000d63b:	jmp    0x14000d655
   14000d63d:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   14000d643:	jmp    0x14000d655
   14000d645:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000d64b:	mov    rcx,QWORD PTR [rbx+r9*8]
   14000d64f:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   14000d655:	test   r11d,r11d
   14000d658:	jne    0x14000d661
   14000d65a:	mov    eax,0x8000
   14000d65f:	jmp    0x14000d670
   14000d661:	neg    r10d
   14000d664:	sbb    eax,eax
   14000d666:	and    eax,0xc000
   14000d66b:	add    eax,0x4000
   14000d670:	mov    rbx,QWORD PTR [rsp+0x8]
   14000d675:	ret    
   14000d676:	int3   
   14000d677:	int3   
   14000d678:	sub    rsp,0x38
   14000d67c:	test   rcx,rcx
   14000d67f:	jne    0x14000d6a8
   14000d681:	call   0x140003fbc
   14000d686:	and    QWORD PTR [rsp+0x20],0x0
   14000d68c:	xor    r9d,r9d
   14000d68f:	xor    r8d,r8d
   14000d692:	xor    edx,edx
   14000d694:	xor    ecx,ecx
   14000d696:	mov    DWORD PTR [rax],0x16
   14000d69c:	call   0x140003eec
   14000d6a1:	mov    eax,0x16
   14000d6a6:	jmp    0x14000d6b2
   14000d6a8:	mov    eax,DWORD PTR [rip+0x6cb2]        # 0x140014360
   14000d6ae:	mov    DWORD PTR [rcx],eax
   14000d6b0:	xor    eax,eax
   14000d6b2:	add    rsp,0x38
   14000d6b6:	ret    
   14000d6b7:	int3   
   14000d6b8:	mov    QWORD PTR [rsp+0x20],r9
   14000d6bd:	mov    QWORD PTR [rsp+0x10],rdx
   14000d6c2:	push   rbx
   14000d6c3:	push   rbp
   14000d6c4:	push   rdi
   14000d6c5:	push   r12
   14000d6c7:	push   r13
   14000d6c9:	push   r14
   14000d6cb:	push   r15
   14000d6cd:	sub    rsp,0xe0
   14000d6d4:	xor    edi,edi
   14000d6d6:	mov    ebp,ecx
   14000d6d8:	lea    eax,[rdi+0x4]
   14000d6db:	lea    r12d,[rdi+0x3]
   14000d6df:	mov    r14d,edi
   14000d6e2:	mov    r13b,dil
   14000d6e5:	cmp    ecx,edi
   14000d6e7:	je     0x14000d6fc
   14000d6e9:	cmp    ecx,0x1
   14000d6ec:	je     0x14000d6fc
   14000d6ee:	jle    0x14000d701
   14000d6f0:	cmp    ecx,r12d
   14000d6f3:	jle    0x14000d6fc
   14000d6f5:	cmp    ecx,eax
   14000d6f7:	jne    0x14000d701
   14000d6f9:	mov    r13b,0x1
   14000d6fc:	mov    r15,r8
   14000d6ff:	jmp    0x14000d741
   14000d701:	call   0x140003fdc
   14000d706:	mov    DWORD PTR [rax],edi
   14000d708:	call   0x140003fbc
   14000d70d:	xor    r9d,r9d
   14000d710:	xor    r8d,r8d
   14000d713:	xor    edx,edx
   14000d715:	xor    ecx,ecx
   14000d717:	mov    DWORD PTR [rax],0x16
   14000d71d:	mov    QWORD PTR [rsp+0x20],rdi
   14000d722:	call   0x140003eec
   14000d727:	jmp    0x14000d96c
   14000d72c:	inc    r8
   14000d72f:	cmp    BYTE PTR [r8],dil
   14000d732:	jne    0x14000d72c
   14000d734:	cmp    BYTE PTR [r8+0x1],dil
   14000d738:	je     0x14000d741
   14000d73a:	mov    BYTE PTR [r8],0x20
   14000d73e:	inc    r8
   14000d741:	cmp    BYTE PTR [r8],dil
   14000d744:	jne    0x14000d72c
   14000d746:	mov    ebx,0x68
   14000d74b:	lea    rcx,[rsp+0x70]
   14000d750:	xor    edx,edx
   14000d752:	mov    r8,rbx
   14000d755:	call   0x140001cf0
   14000d75a:	mov    DWORD PTR [rsp+0x70],ebx
   14000d75e:	mov    ebx,DWORD PTR [rip+0x6c04]        # 0x140014368
   14000d764:	lea    r8,[rip+0x6c15]        # 0x140014380
   14000d76b:	cmp    ebx,edi
   14000d76d:	je     0x14000d79e
   14000d76f:	lea    edx,[rbx-0x1]
   14000d772:	movsxd rcx,edx
   14000d775:	mov    rax,rcx
   14000d778:	and    ecx,0x1f
   14000d77b:	sar    rax,0x5
   14000d77f:	imul   rcx,rcx,0x58
   14000d783:	mov    rax,QWORD PTR [r8+rax*8]
   14000d787:	cmp    BYTE PTR [rax+rcx*1+0x8],dil
   14000d78c:	jne    0x14000d796
   14000d78e:	dec    ebx
   14000d790:	dec    edx
   14000d792:	cmp    ebx,edi
   14000d794:	jne    0x14000d772
   14000d796:	cmp    ebx,edi
   14000d798:	jl     0x14000d961
   14000d79e:	cmp    ebx,0x1c71
   14000d7a4:	jae    0x14000d961
   14000d7aa:	movzx  eax,bx
   14000d7ad:	mov    edx,0x1
   14000d7b2:	shl    ax,0x3
   14000d7b6:	lea    ecx,[rax+rbx*1+0x4]
   14000d7ba:	mov    WORD PTR [rsp+0xb2],cx
   14000d7c2:	movzx  ecx,cx
   14000d7c5:	call   0x1400040b0
   14000d7ca:	mov    QWORD PTR [rsp+0xb8],rax
   14000d7d2:	cmp    rax,rdi
   14000d7d5:	je     0x14000d961
   14000d7db:	cmp    ebx,edi
   14000d7dd:	mov    DWORD PTR [rax],ebx
   14000d7df:	mov    rax,QWORD PTR [rsp+0xb8]
   14000d7e7:	movsxd r11,ebx
   14000d7ea:	lea    rcx,[rax+0x4]
   14000d7ee:	lea    rdx,[r11+rax*1+0x4]
   14000d7f3:	jle    0x14000d84c
   14000d7f5:	mov    r8,rdi
   14000d7f8:	mov    r9d,ebx
   14000d7fb:	lea    r11,[rip+0x6b7e]        # 0x140014380
   14000d802:	mov    r10,r8
   14000d805:	mov    rax,r8
   14000d808:	and    r10d,0x1f
   14000d80c:	sar    rax,0x5
   14000d810:	imul   r10,r10,0x58
   14000d814:	add    r10,QWORD PTR [r11+rax*8]
   14000d818:	mov    al,BYTE PTR [r10+0x8]
   14000d81c:	test   al,0x10
   14000d81e:	jne    0x14000d82a
   14000d820:	mov    BYTE PTR [rcx],al
   14000d822:	mov    rax,QWORD PTR [r10]
   14000d825:	mov    QWORD PTR [rdx],rax
   14000d828:	jmp    0x14000d831
   14000d82a:	mov    BYTE PTR [rcx],dil
   14000d82d:	or     QWORD PTR [rdx],0xffffffffffffffff
   14000d831:	inc    r8
   14000d834:	inc    rcx
   14000d837:	add    rdx,0x8
   14000d83b:	sub    r9,0x1
   14000d83f:	jne    0x14000d802
   14000d841:	mov    rax,QWORD PTR [rsp+0xb8]
   14000d849:	movsxd r11,ebx
   14000d84c:	cmp    r13b,dil
   14000d84f:	je     0x14000d883
   14000d851:	cmp    ebx,r12d
   14000d854:	lea    rcx,[rax+0x4]
   14000d858:	lea    rdx,[r11+rax*1+0x4]
   14000d85d:	cmovl  r12d,ebx
   14000d861:	cmp    r12d,edi
   14000d864:	jle    0x14000d87d
   14000d866:	mov    eax,r12d
   14000d869:	mov    BYTE PTR [rcx],dil
   14000d86c:	or     QWORD PTR [rdx],0xffffffffffffffff
   14000d870:	add    rdx,0x8
   14000d874:	inc    rcx
   14000d877:	sub    rax,0x1
   14000d87b:	jne    0x14000d869
   14000d87d:	mov    r14d,0x8
   14000d883:	call   0x140003fdc
   14000d888:	mov    rcx,QWORD PTR [rsp+0x128]
   14000d890:	xor    r9d,r9d
   14000d893:	mov    DWORD PTR [rax],edi
   14000d895:	lea    rax,[rsp+0x50]
   14000d89a:	xor    r8d,r8d
   14000d89d:	mov    QWORD PTR [rsp+0x48],rax
   14000d8a2:	lea    rax,[rsp+0x70]
   14000d8a7:	mov    rdx,r15
   14000d8aa:	mov    QWORD PTR [rsp+0x40],rax
   14000d8af:	mov    rax,QWORD PTR [rsp+0x138]
   14000d8b7:	mov    QWORD PTR [rsp+0x38],rdi
   14000d8bc:	mov    QWORD PTR [rsp+0x30],rax
   14000d8c1:	mov    DWORD PTR [rsp+0x28],r14d
   14000d8c6:	mov    DWORD PTR [rsp+0x20],0x1
   14000d8ce:	call   QWORD PTR [rip+0x1744]        # 0x14000f018
   14000d8d4:	mov    ebx,eax
   14000d8d6:	call   QWORD PTR [rip+0x17fc]        # 0x14000f0d8
   14000d8dc:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000d8e4:	mov    r12d,eax
   14000d8e7:	call   0x140004244
   14000d8ec:	cmp    ebx,edi
   14000d8ee:	jne    0x14000d8fa
   14000d8f0:	mov    ecx,r12d
   14000d8f3:	call   0x140003ffc
   14000d8f8:	jmp    0x14000d96c
   14000d8fa:	cmp    ebp,0x2
   14000d8fd:	jne    0x14000d907
   14000d8ff:	xor    ecx,ecx
   14000d901:	call   0x14000295c
   14000d906:	int3   
   14000d907:	cmp    ebp,edi
   14000d909:	jne    0x14000d936
   14000d90b:	mov    rcx,QWORD PTR [rsp+0x50]
   14000d910:	or     edx,0xffffffff
   14000d913:	call   QWORD PTR [rip+0x16f7]        # 0x14000f010
   14000d919:	mov    rcx,QWORD PTR [rsp+0x50]
   14000d91e:	lea    rdx,[rsp+0x120]
   14000d926:	call   QWORD PTR [rip+0x16dc]        # 0x14000f008
   14000d92c:	movsxd rdi,DWORD PTR [rsp+0x120]
   14000d934:	jmp    0x14000d93f
   14000d936:	mov    eax,0x4
   14000d93b:	cmp    ebp,eax
   14000d93d:	jne    0x14000d94c
   14000d93f:	mov    rcx,QWORD PTR [rsp+0x50]
   14000d944:	call   QWORD PTR [rip+0x18d6]        # 0x14000f220
   14000d94a:	jmp    0x14000d951
   14000d94c:	mov    rdi,QWORD PTR [rsp+0x50]
   14000d951:	mov    rcx,QWORD PTR [rsp+0x58]
   14000d956:	call   QWORD PTR [rip+0x18c4]        # 0x14000f220
   14000d95c:	mov    rax,rdi
   14000d95f:	jmp    0x14000d970
   14000d961:	call   0x140003fbc
   14000d966:	mov    DWORD PTR [rax],0xc
   14000d96c:	or     rax,0xffffffffffffffff
   14000d970:	add    rsp,0xe0
   14000d977:	pop    r15
   14000d979:	pop    r14
   14000d97b:	pop    r13
   14000d97d:	pop    r12
   14000d97f:	pop    rdi
   14000d980:	pop    rbp
   14000d981:	pop    rbx
   14000d982:	ret    
   14000d983:	int3   
   14000d984:	rex push rbx
   14000d986:	push   rbp
   14000d987:	push   rsi
   14000d988:	push   rdi
   14000d989:	push   r12
   14000d98b:	push   r13
   14000d98d:	push   r14
   14000d98f:	push   r15
   14000d991:	sub    rsp,0x88
   14000d998:	mov    rax,QWORD PTR [rip+0x4a21]        # 0x1400123c0
   14000d99f:	xor    rax,rsp
   14000d9a2:	mov    QWORD PTR [rsp+0x78],rax
   14000d9a7:	mov    rax,QWORD PTR [rip+0x2c9a]        # 0x140010648
   14000d9ae:	xor    r14d,r14d
   14000d9b1:	mov    rbp,rdx
   14000d9b4:	lea    rdx,[rsp+0x68]
   14000d9b9:	lea    r12d,[r14+0x2]
   14000d9bd:	mov    r13,r9
   14000d9c0:	mov    QWORD PTR [rdx],rax
   14000d9c3:	movzx  eax,WORD PTR [rip+0x2c86]        # 0x140010650
   14000d9ca:	mov    QWORD PTR [rsp+0x58],r9
   14000d9cf:	mov    WORD PTR [rdx+0x8],ax
   14000d9d3:	mov    al,BYTE PTR [rip+0x2c79]        # 0x140010652
   14000d9d9:	mov    r15,r8
   14000d9dc:	mov    BYTE PTR [rdx+0xa],al
   14000d9df:	mov    rax,QWORD PTR [rcx]
   14000d9e2:	mov    QWORD PTR [rsp+0x60],rcx
   14000d9e7:	mov    esi,r14d
   14000d9ea:	mov    DWORD PTR [rsp+0x30],r14d
   14000d9ef:	mov    QWORD PTR [rsp+0x38],r14
   14000d9f4:	mov    DWORD PTR [rsp+0x34],r14d
   14000d9f9:	mov    rbx,rcx
   14000d9fc:	mov    edi,r12d
   14000d9ff:	jmp    0x14000da14
   14000da01:	mov    rcx,rax
   14000da04:	call   0x1400070e0
   14000da09:	add    rbx,0x8
   14000da0d:	lea    edi,[rdi+rax*1+0x1]
   14000da11:	mov    rax,QWORD PTR [rbx]
   14000da14:	cmp    rax,r14
   14000da17:	jne    0x14000da01
   14000da19:	mov    eax,edi
   14000da1b:	mov    edx,0x1
   14000da20:	mov    ecx,edi
   14000da22:	mov    QWORD PTR [rsp+0x48],rax
   14000da27:	call   0x1400040b0
   14000da2c:	mov    QWORD PTR [r15],rax
   14000da2f:	cmp    rax,r14
   14000da32:	jne    0x14000da56
   14000da34:	mov    QWORD PTR [r13+0x0],r14
   14000da38:	call   0x140003fbc
   14000da3d:	mov    DWORD PTR [rax],0xc
   14000da43:	call   0x140003fdc
   14000da48:	mov    DWORD PTR [rax],0x8
   14000da4e:	or     eax,0xffffffff
   14000da51:	jmp    0x14000de3f
   14000da56:	lea    r8,[rsp+0x68]
   14000da5b:	lea    rcx,[rsp+0x38]
   14000da60:	xor    edx,edx
   14000da62:	call   0x14000ada8
   14000da67:	cmp    eax,r14d
   14000da6a:	je     0x14000da8b
   14000da6c:	cmp    eax,0x16
   14000da6f:	jne    0x14000daff
   14000da75:	xor    r9d,r9d
   14000da78:	xor    r8d,r8d
   14000da7b:	xor    edx,edx
   14000da7d:	xor    ecx,ecx
   14000da7f:	mov    QWORD PTR [rsp+0x20],r14
   14000da84:	call   0x140003dc4
   14000da89:	jmp    0x14000daff
   14000da8b:	lea    rcx,[rsp+0x68]
   14000da90:	call   0x1400070e0
   14000da95:	mov    rcx,QWORD PTR [rsp+0x38]
   14000da9a:	lea    edi,[r12+rax*1]
   14000da9e:	mov    QWORD PTR [rsp+0x50],rdi
   14000daa3:	cmp    rcx,r14
   14000daa6:	je     0x14000dab4
   14000daa8:	call   0x1400070e0
   14000daad:	add    edi,eax
   14000daaf:	mov    QWORD PTR [rsp+0x50],rdi
   14000dab4:	cmp    rbp,r14
   14000dab7:	je     0x14000dc17
   14000dabd:	mov    rax,QWORD PTR [rbp+0x0]
   14000dac1:	mov    rbx,rbp
   14000dac4:	jmp    0x14000dada
   14000dac6:	mov    rcx,rax
   14000dac9:	call   0x1400070e0
   14000dace:	add    rbx,0x8
   14000dad2:	lea    r12d,[r12+rax*1+0x1]
   14000dad7:	mov    rax,QWORD PTR [rbx]
   14000dada:	cmp    rax,r14
   14000dadd:	jne    0x14000dac6
   14000dadf:	mov    rdx,QWORD PTR [rip+0x5aba]        # 0x1400135a0
   14000dae6:	cmp    rdx,r14
   14000dae9:	jne    0x14000db16
   14000daeb:	call   0x140006c94
   14000daf0:	mov    rdx,rax
   14000daf3:	mov    QWORD PTR [rip+0x5aa6],rax        # 0x1400135a0
   14000dafa:	cmp    rax,r14
   14000dafd:	jne    0x14000db16
   14000daff:	mov    rcx,QWORD PTR [r15]
   14000db02:	or     esi,0xffffffff
   14000db05:	call   0x140004244
   14000db0a:	mov    QWORD PTR [r15],r14
   14000db0d:	mov    QWORD PTR [r13+0x0],r14
   14000db11:	jmp    0x14000de16
   14000db16:	mov    r13d,r14d
   14000db19:	mov    bl,0x3d
   14000db1b:	cmp    BYTE PTR [rdx],r14b
   14000db1e:	je     0x14000db48
   14000db20:	mov    al,BYTE PTR [rdx]
   14000db22:	mov    rcx,rdx
   14000db25:	cmp    al,bl
   14000db27:	je     0x14000db48
   14000db29:	call   0x1400070e0
   14000db2e:	mov    rdx,QWORD PTR [rip+0x5a6b]        # 0x1400135a0
   14000db35:	lea    r13d,[r13+rax*1+0x1]
   14000db3a:	movsxd rax,r13d
   14000db3d:	lea    rcx,[rax+rdx*1]
   14000db41:	mov    al,BYTE PTR [rcx]
   14000db43:	cmp    al,r14b
   14000db46:	jne    0x14000db25
   14000db48:	mov    r14d,r13d
   14000db4b:	movsxd rcx,r13d
   14000db4e:	jmp    0x14000db7f
   14000db50:	cmp    BYTE PTR [rcx+0x1],sil
   14000db54:	je     0x14000db86
   14000db56:	cmp    BYTE PTR [rcx+0x2],0x3a
   14000db5a:	jne    0x14000db86
   14000db5c:	cmp    BYTE PTR [rcx+0x3],bl
   14000db5f:	jne    0x14000db86
   14000db61:	lea    eax,[r14+0x4]
   14000db65:	movsxd rcx,eax
   14000db68:	add    rcx,rdx
   14000db6b:	call   0x1400070e0
   14000db70:	mov    rdx,QWORD PTR [rip+0x5a29]        # 0x1400135a0
   14000db77:	lea    r14d,[r14+rax*1+0x5]
   14000db7c:	movsxd rcx,r14d
   14000db7f:	add    rcx,rdx
   14000db82:	cmp    BYTE PTR [rcx],bl
   14000db84:	je     0x14000db50
   14000db86:	mov    eax,r14d
   14000db89:	mov    rbx,rbp
   14000db8c:	sub    eax,r13d
   14000db8f:	add    r12d,eax
   14000db92:	mov    DWORD PTR [rsp+0x40],r12d
   14000db97:	cmp    QWORD PTR [rbp+0x0],rsi
   14000db9b:	je     0x14000dbc4
   14000db9d:	lea    rcx,[rsp+0x68]
   14000dba2:	call   0x1400070e0
   14000dba7:	mov    rcx,QWORD PTR [rbx]
   14000dbaa:	lea    rdx,[rsp+0x68]
   14000dbaf:	mov    r8,rax
   14000dbb2:	call   0x14000e1ac
   14000dbb7:	test   eax,eax
   14000dbb9:	je     0x14000dc0d
   14000dbbb:	add    rbx,0x8
   14000dbbf:	cmp    QWORD PTR [rbx],rsi
   14000dbc2:	jne    0x14000db9d
   14000dbc4:	add    r12d,edi
   14000dbc7:	mov    ecx,r12d
   14000dbca:	mov    edx,0x1
   14000dbcf:	call   0x1400040b0
   14000dbd4:	mov    rcx,QWORD PTR [rsp+0x58]
   14000dbd9:	mov    QWORD PTR [rcx],rax
   14000dbdc:	test   rax,rax
   14000dbdf:	jne    0x14000dc2c
   14000dbe1:	mov    rcx,QWORD PTR [r15]
   14000dbe4:	call   0x140004244
   14000dbe9:	xor    r14d,r14d
   14000dbec:	mov    QWORD PTR [r15],r14
   14000dbef:	call   0x140003fbc
   14000dbf4:	mov    DWORD PTR [rax],0xc
   14000dbfa:	call   0x140003fdc
   14000dbff:	or     esi,0xffffffff
   14000dc02:	mov    DWORD PTR [rax],0x8
   14000dc08:	jmp    0x14000de16
   14000dc0d:	mov    DWORD PTR [rsp+0x34],0x1
   14000dc15:	jmp    0x14000dbc7
   14000dc17:	mov    r12d,DWORD PTR [rsp+0x30]
   14000dc1c:	mov    QWORD PTR [r13+0x0],r14
   14000dc20:	mov    r13d,DWORD PTR [rsp+0x30]
   14000dc25:	mov    r14d,DWORD PTR [rsp+0x30]
   14000dc2a:	jmp    0x14000dc31
   14000dc2c:	mov    r12d,DWORD PTR [rsp+0x40]
   14000dc31:	mov    rdi,QWORD PTR [rsp+0x60]
   14000dc36:	mov    rbx,QWORD PTR [r15]
   14000dc39:	mov    r8,QWORD PTR [rdi]
   14000dc3c:	test   r8,r8
   14000dc3f:	jne    0x14000dc46
   14000dc41:	inc    rbx
   14000dc44:	jmp    0x14000dc7e
   14000dc46:	mov    rdx,QWORD PTR [rsp+0x48]
   14000dc4b:	mov    rcx,rbx
   14000dc4e:	call   0x140009454
   14000dc53:	test   eax,eax
   14000dc55:	je     0x14000dc6b
   14000dc57:	and    QWORD PTR [rsp+0x20],rsi
   14000dc5c:	xor    r9d,r9d
   14000dc5f:	xor    r8d,r8d
   14000dc62:	xor    edx,edx
   14000dc64:	xor    ecx,ecx
   14000dc66:	call   0x140003dc4
   14000dc6b:	mov    rcx,QWORD PTR [rdi]
   14000dc6e:	call   0x1400070e0
   14000dc73:	inc    eax
   14000dc75:	cdqe   
   14000dc77:	add    rbx,rax
   14000dc7a:	add    rdi,0x8
   14000dc7e:	mov    rax,QWORD PTR [rdi]
   14000dc81:	test   rax,rax
   14000dc84:	je     0x14000dcdc
   14000dc86:	mov    rsi,QWORD PTR [rsp+0x48]
   14000dc8b:	mov    rdx,QWORD PTR [r15]
   14000dc8e:	mov    r8,rax
   14000dc91:	mov    rcx,rbx
   14000dc94:	sub    rdx,rbx
   14000dc97:	add    rdx,rsi
   14000dc9a:	call   0x140009454
   14000dc9f:	test   eax,eax
   14000dca1:	je     0x14000dcb8
   14000dca3:	and    QWORD PTR [rsp+0x20],0x0
   14000dca9:	xor    r9d,r9d
   14000dcac:	xor    r8d,r8d
   14000dcaf:	xor    edx,edx
   14000dcb1:	xor    ecx,ecx
   14000dcb3:	call   0x140003dc4
   14000dcb8:	mov    rcx,QWORD PTR [rdi]
   14000dcbb:	call   0x1400070e0
   14000dcc0:	add    rdi,0x8
   14000dcc4:	movsxd rcx,eax
   14000dcc7:	add    rbx,rcx
   14000dcca:	mov    BYTE PTR [rbx],0x20
   14000dccd:	mov    rax,QWORD PTR [rdi]
   14000dcd0:	inc    rbx
   14000dcd3:	test   rax,rax
   14000dcd6:	jne    0x14000dc8b
   14000dcd8:	mov    esi,DWORD PTR [rsp+0x30]
   14000dcdc:	mov    r15,QWORD PTR [rsp+0x58]
   14000dce1:	mov    BYTE PTR [rbx-0x1],0x0
   14000dce5:	mov    BYTE PTR [rbx],0x0
   14000dce8:	mov    rdi,QWORD PTR [r15]
   14000dceb:	test   rbp,rbp
   14000dcee:	je     0x14000de00
   14000dcf4:	sub    r14d,r13d
   14000dcf7:	movsxd rdx,r13d
   14000dcfa:	mov    rcx,rdi
   14000dcfd:	add    rdx,QWORD PTR [rip+0x589c]        # 0x1400135a0
   14000dd04:	movsxd rbx,r14d
   14000dd07:	mov    r8,rbx
   14000dd0a:	call   0x140008cf0
   14000dd0f:	xor    r14d,r14d
   14000dd12:	add    rdi,rbx
   14000dd15:	cmp    QWORD PTR [rbp+0x0],r14
   14000dd19:	je     0x14000dd66
   14000dd1b:	mov    ebx,r12d
   14000dd1e:	mov    r8,QWORD PTR [rbp+0x0]
   14000dd22:	mov    rdx,rbx
   14000dd25:	mov    rcx,rdi
   14000dd28:	sub    rdx,rdi
   14000dd2b:	add    rdx,QWORD PTR [r15]
   14000dd2e:	call   0x140009454
   14000dd33:	cmp    eax,r14d
   14000dd36:	je     0x14000dd4c
   14000dd38:	xor    r9d,r9d
   14000dd3b:	xor    r8d,r8d
   14000dd3e:	xor    edx,edx
   14000dd40:	xor    ecx,ecx
   14000dd42:	mov    QWORD PTR [rsp+0x20],r14
   14000dd47:	call   0x140003dc4
   14000dd4c:	mov    rcx,QWORD PTR [rbp+0x0]
   14000dd50:	call   0x1400070e0
   14000dd55:	add    rbp,0x8
   14000dd59:	inc    eax
   14000dd5b:	cdqe   
   14000dd5d:	add    rdi,rax
   14000dd60:	cmp    QWORD PTR [rbp+0x0],r14
   14000dd64:	jne    0x14000dd1e
   14000dd66:	cmp    DWORD PTR [rsp+0x34],r14d
   14000dd6b:	jne    0x14000de03
   14000dd71:	movsxd rbx,DWORD PTR [rsp+0x50]
   14000dd76:	lea    r8,[rsp+0x68]
   14000dd7b:	mov    rcx,rdi
   14000dd7e:	mov    rdx,rbx
   14000dd81:	call   0x140009454
   14000dd86:	cmp    eax,r14d
   14000dd89:	je     0x14000dd9f
   14000dd8b:	xor    r9d,r9d
   14000dd8e:	xor    r8d,r8d
   14000dd91:	xor    edx,edx
   14000dd93:	xor    ecx,ecx
   14000dd95:	mov    QWORD PTR [rsp+0x20],r14
   14000dd9a:	call   0x140003dc4
   14000dd9f:	lea    r8,[rip+0x175a]        # 0x14000f500
   14000dda6:	mov    rdx,rbx
   14000dda9:	mov    rcx,rdi
   14000ddac:	call   0x1400092f0
   14000ddb1:	cmp    eax,r14d
   14000ddb4:	je     0x14000ddca
   14000ddb6:	xor    r9d,r9d
   14000ddb9:	xor    r8d,r8d
   14000ddbc:	xor    edx,edx
   14000ddbe:	xor    ecx,ecx
   14000ddc0:	mov    QWORD PTR [rsp+0x20],r14
   14000ddc5:	call   0x140003dc4
   14000ddca:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ddcf:	cmp    rcx,r14
   14000ddd2:	je     0x14000ddfb
   14000ddd4:	mov    r8,rcx
   14000ddd7:	mov    rdx,rbx
   14000ddda:	mov    rcx,rdi
   14000dddd:	call   0x1400092f0
   14000dde2:	cmp    eax,r14d
   14000dde5:	je     0x14000ddfb
   14000dde7:	xor    r9d,r9d
   14000ddea:	xor    r8d,r8d
   14000dded:	xor    edx,edx
   14000ddef:	xor    ecx,ecx
   14000ddf1:	mov    QWORD PTR [rsp+0x20],r14
   14000ddf6:	call   0x140003dc4
   14000ddfb:	add    rdi,rbx
   14000ddfe:	jmp    0x14000de03
   14000de00:	xor    r14d,r14d
   14000de03:	cmp    rdi,r14
   14000de06:	je     0x14000de16
   14000de08:	cmp    rdi,QWORD PTR [r15]
   14000de0b:	jne    0x14000de13
   14000de0d:	mov    BYTE PTR [rdi],r14b
   14000de10:	inc    rdi
   14000de13:	mov    BYTE PTR [rdi],r14b
   14000de16:	mov    rcx,QWORD PTR [rip+0x5783]        # 0x1400135a0
   14000de1d:	cmp    rcx,r14
   14000de20:	je     0x14000de27
   14000de22:	call   0x140004244
   14000de27:	mov    rcx,QWORD PTR [rsp+0x38]
   14000de2c:	mov    QWORD PTR [rip+0x576d],r14        # 0x1400135a0
   14000de33:	cmp    rcx,r14
   14000de36:	je     0x14000de3d
   14000de38:	call   0x140004244
   14000de3d:	mov    eax,esi
   14000de3f:	mov    rcx,QWORD PTR [rsp+0x78]
   14000de44:	xor    rcx,rsp
   14000de47:	call   0x140002350
   14000de4c:	add    rsp,0x88
   14000de53:	pop    r15
   14000de55:	pop    r14
   14000de57:	pop    r13
   14000de59:	pop    r12
   14000de5b:	pop    rdi
   14000de5c:	pop    rsi
   14000de5d:	pop    rbp
   14000de5e:	pop    rbx
   14000de5f:	ret    
   14000de60:	rex push rbx
   14000de62:	sub    rsp,0x30
   14000de66:	mov    ebx,edx
   14000de68:	test   rcx,rcx
   14000de6b:	jne    0x14000de9a
   14000de6d:	call   0x140003fdc
   14000de72:	and    DWORD PTR [rax],0x0
   14000de75:	call   0x140003fbc
   14000de7a:	and    QWORD PTR [rsp+0x20],0x0
   14000de80:	mov    ebx,0x16
   14000de85:	xor    r9d,r9d
   14000de88:	xor    r8d,r8d
   14000de8b:	xor    edx,edx
   14000de8d:	xor    ecx,ecx
   14000de8f:	mov    DWORD PTR [rax],ebx
   14000de91:	call   0x140003eec
   14000de96:	mov    eax,ebx
   14000de98:	jmp    0x14000deea
   14000de9a:	test   edx,0xfffffff9
   14000dea0:	jne    0x14000de6d
   14000dea2:	call   QWORD PTR [rip+0x13d8]        # 0x14000f280
   14000dea8:	cmp    eax,0xffffffff
   14000deab:	jne    0x14000dec3
   14000dead:	call   QWORD PTR [rip+0x1225]        # 0x14000f0d8
   14000deb3:	mov    ecx,eax
   14000deb5:	call   0x140003ffc
   14000deba:	call   0x140003fbc
   14000debf:	mov    eax,DWORD PTR [rax]
   14000dec1:	jmp    0x14000deea
   14000dec3:	test   al,0x10
   14000dec5:	jne    0x14000dee8
   14000dec7:	test   al,0x1
   14000dec9:	je     0x14000dee8
   14000decb:	test   bl,0x2
   14000dece:	je     0x14000dee8
   14000ded0:	call   0x140003fdc
   14000ded5:	mov    DWORD PTR [rax],0x5
   14000dedb:	call   0x140003fbc
   14000dee0:	mov    DWORD PTR [rax],0xd
   14000dee6:	jmp    0x14000deba
   14000dee8:	xor    eax,eax
   14000deea:	add    rsp,0x30
   14000deee:	pop    rbx
   14000deef:	ret    
   14000def0:	mov    QWORD PTR [rsp+0x8],rbx
   14000def5:	mov    QWORD PTR [rsp+0x10],rsi
   14000defa:	push   rdi
   14000defb:	sub    rsp,0x50
   14000deff:	mov    rbx,rcx
   14000df02:	mov    esi,edx
   14000df04:	lea    rcx,[rsp+0x30]
   14000df09:	mov    rdx,r8
   14000df0c:	xor    edi,edi
   14000df0e:	call   0x140002370
   14000df13:	test   rbx,rbx
   14000df16:	jne    0x14000df4e
   14000df18:	call   0x140003fbc
   14000df1d:	and    QWORD PTR [rsp+0x20],rdi
   14000df22:	xor    r9d,r9d
   14000df25:	xor    r8d,r8d
   14000df28:	xor    edx,edx
   14000df2a:	xor    ecx,ecx
   14000df2c:	mov    DWORD PTR [rax],0x16
   14000df32:	call   0x140003eec
   14000df37:	cmp    BYTE PTR [rsp+0x48],dil
   14000df3c:	je     0x14000df4a
   14000df3e:	mov    rax,QWORD PTR [rsp+0x40]
   14000df43:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000df4a:	xor    eax,eax
   14000df4c:	jmp    0x14000dfcd
   14000df4e:	mov    r8,QWORD PTR [rsp+0x38]
   14000df53:	cmp    DWORD PTR [r8+0x8],edi
   14000df57:	jne    0x14000df78
   14000df59:	mov    edx,esi
   14000df5b:	mov    rcx,rbx
   14000df5e:	call   0x14000e1b4
   14000df63:	cmp    BYTE PTR [rsp+0x48],dil
   14000df68:	je     0x14000dfcd
   14000df6a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000df6f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000df76:	jmp    0x14000dfcd
   14000df78:	movzx  ecx,BYTE PTR [rbx]
   14000df7b:	mov    rdx,rcx
   14000df7e:	test   BYTE PTR [rcx+r8*1+0x1d],0x4
   14000df84:	je     0x14000dfab
   14000df86:	inc    rbx
   14000df89:	mov    cl,BYTE PTR [rbx]
   14000df8b:	test   cl,cl
   14000df8d:	je     0x14000dfa1
   14000df8f:	shl    edx,0x8
   14000df92:	movzx  eax,cl
   14000df95:	or     edx,eax
   14000df97:	cmp    esi,edx
   14000df99:	jne    0x14000dfb1
   14000df9b:	lea    rdi,[rbx-0x1]
   14000df9f:	jmp    0x14000dfb1
   14000dfa1:	test   rdi,rdi
   14000dfa4:	jne    0x14000dfb1
   14000dfa6:	mov    rdi,rbx
   14000dfa9:	jmp    0x14000dfb1
   14000dfab:	cmp    esi,ecx
   14000dfad:	cmove  rdi,rbx
   14000dfb1:	inc    rbx
   14000dfb4:	test   cl,cl
   14000dfb6:	jne    0x14000df78
   14000dfb8:	cmp    BYTE PTR [rsp+0x48],cl
   14000dfbc:	je     0x14000dfca
   14000dfbe:	mov    rcx,QWORD PTR [rsp+0x40]
   14000dfc3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000dfca:	mov    rax,rdi
   14000dfcd:	mov    rbx,QWORD PTR [rsp+0x60]
   14000dfd2:	mov    rsi,QWORD PTR [rsp+0x68]
   14000dfd7:	add    rsp,0x50
   14000dfdb:	pop    rdi
   14000dfdc:	ret    
   14000dfdd:	int3   
   14000dfde:	int3   
   14000dfdf:	int3   
   14000dfe0:	xor    r8d,r8d
   14000dfe3:	jmp    0x14000def0
   14000dfe8:	mov    QWORD PTR [rsp+0x8],rbx
   14000dfed:	mov    QWORD PTR [rsp+0x10],rbp
   14000dff2:	mov    QWORD PTR [rsp+0x18],rsi
   14000dff7:	push   rdi
   14000dff8:	sub    rsp,0x50
   14000dffc:	xor    ebp,ebp
   14000dffe:	mov    rsi,r8
   14000e001:	mov    rdi,rdx
   14000e004:	mov    rbx,rcx
   14000e007:	cmp    r8,rbp
   14000e00a:	jne    0x14000e013
   14000e00c:	xor    eax,eax
   14000e00e:	jmp    0x14000e196
   14000e013:	lea    rcx,[rsp+0x30]
   14000e018:	mov    rdx,r9
   14000e01b:	call   0x140002370
   14000e020:	mov    r11,QWORD PTR [rsp+0x38]
   14000e025:	cmp    DWORD PTR [r11+0x8],ebp
   14000e029:	jne    0x14000e03e
   14000e02b:	mov    r8,rsi
   14000e02e:	mov    rdx,rdi
   14000e031:	mov    rcx,rbx
   14000e034:	call   0x14000ac30
   14000e039:	jmp    0x14000e183
   14000e03e:	cmp    rbx,rbp
   14000e041:	jne    0x14000e07f
   14000e043:	call   0x140003fbc
   14000e048:	xor    r9d,r9d
   14000e04b:	xor    r8d,r8d
   14000e04e:	xor    edx,edx
   14000e050:	xor    ecx,ecx
   14000e052:	mov    QWORD PTR [rsp+0x20],rbp
   14000e057:	mov    DWORD PTR [rax],0x16
   14000e05d:	call   0x140003eec
   14000e062:	cmp    BYTE PTR [rsp+0x48],bpl
   14000e067:	je     0x14000e075
   14000e069:	mov    rax,QWORD PTR [rsp+0x40]
   14000e06e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e075:	mov    eax,0x7fffffff
   14000e07a:	jmp    0x14000e196
   14000e07f:	cmp    rdi,rbp
   14000e082:	je     0x14000e043
   14000e084:	movzx  ecx,BYTE PTR [rbx]
   14000e087:	dec    rsi
   14000e08a:	inc    rbx
   14000e08d:	test   BYTE PTR [rcx+r11*1+0x1d],0x4
   14000e093:	je     0x14000e0d6
   14000e095:	cmp    BYTE PTR [rbx],bpl
   14000e098:	jne    0x14000e09f
   14000e09a:	mov    cx,bp
   14000e09d:	jmp    0x14000e0ea
   14000e09f:	movzx  eax,BYTE PTR [rbx]
   14000e0a2:	shl    cx,0x8
   14000e0a6:	inc    rbx
   14000e0a9:	or     cx,ax
   14000e0ac:	cmp    cx,WORD PTR [r11+0x10]
   14000e0b1:	jb     0x14000e0c1
   14000e0b3:	cmp    cx,WORD PTR [r11+0x12]
   14000e0b8:	ja     0x14000e0c1
   14000e0ba:	add    cx,WORD PTR [r11+0x14]
   14000e0bf:	jmp    0x14000e0ea
   14000e0c1:	cmp    cx,WORD PTR [r11+0x16]
   14000e0c6:	jb     0x14000e0ea
   14000e0c8:	cmp    cx,WORD PTR [r11+0x18]
   14000e0cd:	ja     0x14000e0ea
   14000e0cf:	add    cx,WORD PTR [r11+0x1a]
   14000e0d4:	jmp    0x14000e0ea
   14000e0d6:	movzx  eax,cx
   14000e0d9:	test   BYTE PTR [rax+r11*1+0x1d],0x10
   14000e0df:	je     0x14000e0ea
   14000e0e1:	movzx  ecx,BYTE PTR [rax+r11*1+0x11d]
   14000e0ea:	movzx  edx,BYTE PTR [rdi]
   14000e0ed:	inc    rdi
   14000e0f0:	test   BYTE PTR [rdx+r11*1+0x1d],0x4
   14000e0f6:	je     0x14000e139
   14000e0f8:	cmp    BYTE PTR [rdi],bpl
   14000e0fb:	jne    0x14000e102
   14000e0fd:	mov    dx,bp
   14000e100:	jmp    0x14000e14d
   14000e102:	movzx  eax,BYTE PTR [rdi]
   14000e105:	shl    dx,0x8
   14000e109:	inc    rdi
   14000e10c:	or     dx,ax
   14000e10f:	cmp    dx,WORD PTR [r11+0x10]
   14000e114:	jb     0x14000e124
   14000e116:	cmp    dx,WORD PTR [r11+0x12]
   14000e11b:	ja     0x14000e124
   14000e11d:	add    dx,WORD PTR [r11+0x14]
   14000e122:	jmp    0x14000e14d
   14000e124:	cmp    dx,WORD PTR [r11+0x16]
   14000e129:	jb     0x14000e14d
   14000e12b:	cmp    dx,WORD PTR [r11+0x18]
   14000e130:	ja     0x14000e14d
   14000e132:	add    dx,WORD PTR [r11+0x1a]
   14000e137:	jmp    0x14000e14d
   14000e139:	movzx  eax,dx
   14000e13c:	test   BYTE PTR [rax+r11*1+0x1d],0x10
   14000e142:	je     0x14000e14d
   14000e144:	movzx  edx,BYTE PTR [rax+r11*1+0x11d]
   14000e14d:	cmp    dx,cx
   14000e150:	jne    0x14000e17c
   14000e152:	cmp    cx,bp
   14000e155:	je     0x14000e160
   14000e157:	cmp    rsi,rbp
   14000e15a:	jne    0x14000e084
   14000e160:	cmp    BYTE PTR [rsp+0x48],bpl
   14000e165:	je     0x14000e00c
   14000e16b:	mov    rax,QWORD PTR [rsp+0x40]
   14000e170:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000e177:	jmp    0x14000e00c
   14000e17c:	sbb    eax,eax
   14000e17e:	and    eax,0x2
   14000e181:	dec    eax
   14000e183:	cmp    BYTE PTR [rsp+0x48],bpl
   14000e188:	je     0x14000e196
   14000e18a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e18f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e196:	mov    rbx,QWORD PTR [rsp+0x60]
   14000e19b:	mov    rbp,QWORD PTR [rsp+0x68]
   14000e1a0:	mov    rsi,QWORD PTR [rsp+0x70]
   14000e1a5:	add    rsp,0x50
   14000e1a9:	pop    rdi
   14000e1aa:	ret    
   14000e1ab:	int3   
   14000e1ac:	xor    r9d,r9d
   14000e1af:	jmp    0x14000dfe8
   14000e1b4:	mov    r9,rcx
   14000e1b7:	xor    r8d,r8d
   14000e1ba:	mov    al,BYTE PTR [rcx]
   14000e1bc:	inc    rcx
   14000e1bf:	cmp    al,r8b
   14000e1c2:	jne    0x14000e1ba
   14000e1c4:	dec    rcx
   14000e1c7:	cmp    rcx,r9
   14000e1ca:	je     0x14000e1d0
   14000e1cc:	cmp    BYTE PTR [rcx],dl
   14000e1ce:	jne    0x14000e1c4
   14000e1d0:	cmp    BYTE PTR [rcx],dl
   14000e1d2:	cmove  r8,rcx
   14000e1d6:	mov    rax,r8
   14000e1d9:	ret    
   14000e1da:	int3   
   14000e1db:	int3   
   14000e1dc:	int3   
   14000e1dd:	int3   
   14000e1de:	int3   
   14000e1df:	int3   
   14000e1e0:	int3   
   14000e1e1:	int3   
   14000e1e2:	int3   
   14000e1e3:	int3   
   14000e1e4:	int3   
   14000e1e5:	int3   
   14000e1e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e1f0:	sub    rsp,0x10
   14000e1f4:	mov    QWORD PTR [rsp],r10
   14000e1f8:	mov    QWORD PTR [rsp+0x8],r11
   14000e1fd:	xor    r11,r11
   14000e200:	lea    r10,[rsp+0x18]
   14000e205:	sub    r10,rax
   14000e208:	cmovb  r10,r11
   14000e20c:	mov    r11,QWORD PTR gs:0x10
   14000e215:	cmp    r10,r11
   14000e218:	jae    0x14000e230
   14000e21a:	and    r10w,0xf000
   14000e220:	lea    r11,[r11-0x1000]
   14000e227:	mov    BYTE PTR [r11],0x0
   14000e22b:	cmp    r10,r11
   14000e22e:	jne    0x14000e220
   14000e230:	mov    r10,QWORD PTR [rsp]
   14000e234:	mov    r11,QWORD PTR [rsp+0x8]
   14000e239:	add    rsp,0x10
   14000e23d:	ret    
   14000e23e:	int3   
   14000e23f:	int3   
   14000e240:	rex push rbp
   14000e242:	sub    rsp,0x30
   14000e246:	mov    rbp,rdx
   14000e249:	mov    rcx,QWORD PTR [rbp+0x60]
   14000e24d:	call   0x140001c14
   14000e252:	add    rsp,0x30
   14000e256:	pop    rbp
   14000e257:	ret    
   14000e258:	rex push rbp
   14000e25a:	sub    rsp,0x20
   14000e25e:	mov    rbp,rdx
   14000e261:	cmp    DWORD PTR [rbp+0x80],0x0
   14000e268:	je     0x14000e274
   14000e26a:	mov    ecx,0x8
   14000e26f:	call   0x140004608
   14000e274:	add    rsp,0x20
   14000e278:	pop    rbp
   14000e279:	ret    
   14000e27a:	rex push rbp
   14000e27c:	sub    rsp,0x20
   14000e280:	mov    rbp,rdx
   14000e283:	mov    rax,QWORD PTR [rcx]
   14000e286:	mov    rdx,rcx
   14000e289:	mov    ecx,DWORD PTR [rax]
   14000e28b:	call   0x1400062c8
   14000e290:	add    rsp,0x20
   14000e294:	pop    rbp
   14000e295:	ret    
   14000e296:	rex push rbp
   14000e298:	sub    rsp,0x20
   14000e29c:	mov    rbp,rdx
   14000e29f:	mov    ecx,0x1
   14000e2a4:	call   0x140004608
   14000e2a9:	add    rsp,0x20
   14000e2ad:	pop    rbp
   14000e2ae:	ret    
   14000e2af:	rex push rbp
   14000e2b1:	sub    rsp,0x20
   14000e2b5:	mov    rbp,rdx
   14000e2b8:	movsxd rcx,DWORD PTR [rbp+0x20]
   14000e2bc:	mov    rax,rcx
   14000e2bf:	mov    rdx,QWORD PTR [rip+0x62fa]        # 0x1400145c0
   14000e2c6:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000e2ca:	call   0x140001c6c
   14000e2cf:	add    rsp,0x20
   14000e2d3:	pop    rbp
   14000e2d4:	ret    
   14000e2d5:	int3   
   14000e2d6:	int3   
   14000e2d7:	int3   
   14000e2d8:	int3   
   14000e2d9:	int3   
   14000e2da:	int3   
   14000e2db:	int3   
   14000e2dc:	int3   
   14000e2dd:	int3   
   14000e2de:	int3   
   14000e2df:	rex push rbp
   14000e2e1:	sub    rsp,0x20
   14000e2e5:	mov    rbp,rdx
   14000e2e8:	mov    ecx,0x1
   14000e2ed:	call   0x140004608
   14000e2f2:	add    rsp,0x20
   14000e2f6:	pop    rbp
   14000e2f7:	ret    
   14000e2f8:	rex push rbp
   14000e2fa:	sub    rsp,0x20
   14000e2fe:	mov    rbp,rdx
   14000e301:	mov    rcx,QWORD PTR [rip+0x4358]        # 0x140012660
   14000e308:	call   QWORD PTR [rip+0xd2a]        # 0x14000f038
   14000e30e:	add    rsp,0x20
   14000e312:	pop    rbp
   14000e313:	ret    
   14000e314:	rex push rbp
   14000e316:	sub    rsp,0x20
   14000e31a:	mov    rbp,rdx
   14000e31d:	mov    ecx,0xd
   14000e322:	call   0x140004608
   14000e327:	add    rsp,0x20
   14000e32b:	pop    rbp
   14000e32c:	ret    
   14000e32d:	rex push rbp
   14000e32f:	sub    rsp,0x20
   14000e333:	mov    rbp,rdx
   14000e336:	mov    ecx,0xc
   14000e33b:	call   0x140004608
   14000e340:	add    rsp,0x20
   14000e344:	pop    rbp
   14000e345:	ret    
   14000e346:	rex push rbp
   14000e348:	sub    rsp,0x20
   14000e34c:	mov    rbp,rdx
   14000e34f:	mov    ecx,0xd
   14000e354:	call   0x140004608
   14000e359:	add    rsp,0x20
   14000e35d:	pop    rbp
   14000e35e:	ret    
   14000e35f:	int3   
   14000e360:	int3   
   14000e361:	int3   
   14000e362:	int3   
   14000e363:	int3   
   14000e364:	int3   
   14000e365:	int3   
   14000e366:	rex push rbp
   14000e368:	sub    rsp,0x20
   14000e36c:	mov    rbp,rdx
   14000e36f:	mov    ecx,0xc
   14000e374:	call   0x140004608
   14000e379:	add    rsp,0x20
   14000e37d:	pop    rbp
   14000e37e:	ret    
   14000e37f:	rex push rbp
   14000e381:	sub    rsp,0x20
   14000e385:	mov    rbp,rdx
   14000e388:	call   0x140002698
   14000e38d:	add    rsp,0x20
   14000e391:	pop    rbp
   14000e392:	ret    
   14000e393:	int3   
   14000e394:	int3   
   14000e395:	int3   
   14000e396:	int3   
   14000e397:	int3   
   14000e398:	int3   
   14000e399:	int3   
   14000e39a:	int3   
   14000e39b:	int3   
   14000e39c:	int3   
   14000e39d:	int3   
   14000e39e:	int3   
   14000e39f:	int3   
   14000e3a0:	rex push rbp
   14000e3a2:	sub    rsp,0x20
   14000e3a6:	mov    rbp,rdx
   14000e3a9:	mov    rax,QWORD PTR [rcx]
   14000e3ac:	xor    ecx,ecx
   14000e3ae:	cmp    DWORD PTR [rax],0xc0000005
   14000e3b4:	sete   cl
   14000e3b7:	mov    eax,ecx
   14000e3b9:	mov    eax,ecx
   14000e3bb:	add    rsp,0x20
   14000e3bf:	pop    rbp
   14000e3c0:	ret    
   14000e3c1:	rex push rbp
   14000e3c3:	sub    rsp,0x30
   14000e3c7:	mov    rbp,rdx
   14000e3ca:	cmp    DWORD PTR [rbp+0x70],0x0
   14000e3ce:	je     0x14000e3d7
   14000e3d0:	xor    ecx,ecx
   14000e3d2:	call   0x140004608
   14000e3d7:	add    rsp,0x30
   14000e3db:	pop    rbp
   14000e3dc:	ret    
   14000e3dd:	rex push rbp
   14000e3df:	sub    rsp,0x20
   14000e3e3:	mov    rbp,rdx
   14000e3e6:	mov    rax,QWORD PTR [rcx]
   14000e3e9:	xor    r11d,r11d
   14000e3ec:	cmp    DWORD PTR [rax],0xc0000017
   14000e3f2:	sete   r11b
   14000e3f6:	mov    eax,r11d
   14000e3f9:	add    rsp,0x20
   14000e3fd:	pop    rbp
   14000e3fe:	ret    
   14000e3ff:	rex push rbp
   14000e401:	sub    rsp,0x30
   14000e405:	mov    rbp,rdx
   14000e408:	mov    rcx,QWORD PTR [rbp+0x40]
   14000e40c:	call   0x140001c14
   14000e411:	add    rsp,0x30
   14000e415:	pop    rbp
   14000e416:	ret    
   14000e417:	rex push rbp
   14000e419:	sub    rsp,0x30
   14000e41d:	mov    rbp,rdx
   14000e420:	mov    ecx,DWORD PTR [rbp+0x50]
   14000e423:	call   0x14000a5a8
   14000e428:	add    rsp,0x30
   14000e42c:	pop    rbp
   14000e42d:	ret    
   14000e42e:	rex push rbp
   14000e430:	sub    rsp,0x30
   14000e434:	mov    rbp,rdx
   14000e437:	mov    ecx,DWORD PTR [rbp+0x60]
   14000e43a:	call   0x14000a5a8
   14000e43f:	add    rsp,0x30
   14000e443:	pop    rbp
   14000e444:	ret    
   14000e445:	rex push rbp
   14000e447:	sub    rsp,0x20
   14000e44b:	mov    rbp,rdx
   14000e44e:	mov    ecx,0xa
   14000e453:	call   0x140004608
   14000e458:	add    rsp,0x20
   14000e45c:	pop    rbp
   14000e45d:	ret    
   14000e45e:	rex push rbp
   14000e460:	sub    rsp,0x20
   14000e464:	mov    rbp,rdx
   14000e467:	mov    ecx,0xa
   14000e46c:	call   0x140004608
   14000e471:	add    rsp,0x20
   14000e475:	pop    rbp
   14000e476:	ret    
   14000e477:	int3   
   14000e478:	int3   
   14000e479:	int3   
   14000e47a:	int3   
   14000e47b:	int3   
   14000e47c:	int3   
   14000e47d:	int3   
   14000e47e:	rex push rbp
   14000e480:	sub    rsp,0x20
   14000e484:	mov    rbp,rdx
   14000e487:	mov    ecx,0xb
   14000e48c:	call   0x140004608
   14000e491:	add    rsp,0x20
   14000e495:	pop    rbp
   14000e496:	ret    
   14000e497:	rex push rbp
   14000e499:	sub    rsp,0x30
   14000e49d:	mov    rbp,rdx
   14000e4a0:	mov    ecx,0x7
   14000e4a5:	call   0x140004608
   14000e4aa:	add    rsp,0x30
   14000e4ae:	pop    rbp
   14000e4af:	ret    
   14000e4b0:	rex push rbp
   14000e4b2:	sub    rsp,0x40
   14000e4b6:	mov    rbp,rdx
   14000e4b9:	cmp    DWORD PTR [rbp+0x44],0x0
   14000e4bd:	je     0x14000e4f6
   14000e4bf:	cmp    DWORD PTR [rbp+0x48],0x0
   14000e4c3:	je     0x14000e4ec
   14000e4c5:	movsxd rdx,DWORD PTR [rbp+0x40]
   14000e4c9:	mov    rcx,rdx
   14000e4cc:	mov    rax,rdx
   14000e4cf:	sar    rax,0x5
   14000e4d3:	lea    r8,[rip+0x5ea6]        # 0x140014380
   14000e4da:	and    ecx,0x1f
   14000e4dd:	imul   rcx,rcx,0x58
   14000e4e1:	mov    rax,QWORD PTR [r8+rax*8]
   14000e4e5:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14000e4ea:	jmp    0x14000e4ef
   14000e4ec:	mov    edx,DWORD PTR [rbp+0x40]
   14000e4ef:	mov    ecx,edx
   14000e4f1:	call   0x14000a5a8
   14000e4f6:	add    rsp,0x40
   14000e4fa:	pop    rbp
   14000e4fb:	ret    
