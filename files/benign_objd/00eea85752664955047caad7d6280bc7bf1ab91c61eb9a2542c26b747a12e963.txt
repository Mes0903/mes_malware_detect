
00eea85752664955047caad7d6280bc7bf1ab91c61eb9a2542c26b747a12e963.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x7735]        # 0x408750
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x7736]        # 0x408760
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x7739]        # 0x408770
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x76fc]        # 0x408740
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x75af]        # 0x408600
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x76d1]        # 0x408730
  40105f:	mov    DWORD PTR [rip+0x9fa3],edx        # 0x40b008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4044a8
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x403450
  401081:	mov    rdx,QWORD PTR [rip+0x7608]        # 0x408690
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x75ee]        # 0x408680
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x7654]        # 0x4086f0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x758b]        # 0x408630
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x403030
  4010af:	mov    rax,QWORD PTR [rip+0x74da]        # 0x408590
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4044a8
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x2209]        # 0x403330
  401127:	call   0x403320
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x75b5]        # 0x408720
  40116b:	lea    r8,[rip+0x9ea6]        # 0x40b018
  401172:	lea    rdx,[rip+0x9ea7]        # 0x40b020
  401179:	lea    rcx,[rip+0x9ea8]        # 0x40b028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x9e78],eax        # 0x40b000
  401188:	lea    rax,[rip+0x9e71]        # 0x40b000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x7545]        # 0x4086e0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4044c0
  4011a3:	mov    DWORD PTR [rip+0x9e67],eax        # 0x40b010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x756a]        # 0x408730
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x746b]        # 0x408660
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xc322]        # 0x40d524
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x7447]        # 0x408670
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x9dba],0x1        # 0x40b004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x738c]        # 0x4085f0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x403640
  40127d:	lea    rcx,[rip+0x295c]        # 0x403be0
  401284:	call   QWORD PTR [rip+0xc292]        # 0x40d51c
  40128a:	mov    rdx,QWORD PTR [rip+0x73bf]        # 0x408650
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x403af0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4044e0
  4012a5:	call   0x403430
  4012aa:	mov    rax,QWORD PTR [rip+0x734f]        # 0x408600
  4012b1:	mov    QWORD PTR [rip+0xa7d0],rax        # 0x40ba88
  4012b8:	mov    rax,QWORD PTR [rip+0x7361]        # 0x408620
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xa769],rax        # 0x40ba80
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x4cca],eax        # 0x406000
  401336:	mov    r12d,DWORD PTR [rip+0x9ceb]        # 0x40b028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x404430
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x9cc2]        # 0x40b020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x404410
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x404430
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x404420
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x9c6a],rbp        # 0x40b020
  4013b6:	call   0x403000
  4013bb:	mov    rax,QWORD PTR [rip+0x724e]        # 0x408610
  4013c2:	mov    rdx,QWORD PTR [rip+0x9c4f]        # 0x40b018
  4013c9:	mov    ecx,DWORD PTR [rip+0x9c59]        # 0x40b028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x9c3c]        # 0x40b018
  4013dc:	mov    rdx,QWORD PTR [rip+0x9c3d]        # 0x40b020
  4013e3:	call   0x404ec0
  4013e8:	mov    ecx,DWORD PTR [rip+0x9c1a]        # 0x40b008
  4013ee:	mov    DWORD PTR [rip+0x9c18],eax        # 0x40b00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x9c02]        # 0x40b004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x404490
  40140b:	mov    eax,DWORD PTR [rip+0x9bfb]        # 0x40b00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x7239]        # 0x408670
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x404498
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x724d]        # 0x4086b0
  401463:	mov    rcx,QWORD PTR [rip+0x7236]        # 0x4086a0
  40146a:	call   0x404488
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xc033]        # 0x40d4cc
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x7229]        # 0x4086d0
  4014a7:	mov    rcx,QWORD PTR [rip+0x7212]        # 0x4086c0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x404488
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x404458
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x7255]        # 0x408730
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x403040
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x7225]        # 0x408730
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x403040
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   r14
  401532:	push   r13
  401534:	push   r12
  401536:	push   rbp
  401537:	push   rdi
  401538:	push   rsi
  401539:	push   rbx
  40153a:	sub    rsp,0x190
  401541:	lea    rdx,[rip+0x5ab9]        # 0x407001
  401548:	lea    r12,[rsp+0x50]
  40154d:	lea    rbx,[rsp+0x80]
  401555:	mov    rdi,rcx
  401558:	lea    rsi,[rsp+0x70]
  40155d:	lea    rbp,[rsp+0x30]
  401562:	mov    r8,r12
  401565:	mov    rcx,rbx
  401568:	call   0x402dd0
  40156d:	mov    rcx,QWORD PTR [rsp+0x80]
  401575:	call   0x404438
  40157a:	lea    r9,[rip+0x5a7f]        # 0x407000
  401581:	test   rax,rax
  401584:	mov    r8,rsi
  401587:	mov    rcx,rbp
  40158a:	mov    rdx,r9
  40158d:	cmovne rdx,rax
  401591:	call   0x402dd0
  401596:	mov    rax,QWORD PTR [rsp+0x80]
  40159e:	mov    rdx,rsi
  4015a1:	lea    rcx,[rax-0x18]
  4015a5:	call   0x402e00
  4015aa:	mov    rax,QWORD PTR [rsp+0x30]
  4015af:	cmp    QWORD PTR [rax-0x18],0x0
  4015b4:	je     0x4015e7
  4015b6:	mov    rdx,rbp
  4015b9:	mov    rcx,rdi
  4015bc:	call   0x402dc8
  4015c1:	mov    rax,QWORD PTR [rsp+0x30]
  4015c6:	mov    rdx,rbx
  4015c9:	lea    rcx,[rax-0x18]
  4015cd:	call   0x402e00
  4015d2:	mov    rax,rdi
  4015d5:	add    rsp,0x190
  4015dc:	pop    rbx
  4015dd:	pop    rsi
  4015de:	pop    rdi
  4015df:	pop    rbp
  4015e0:	pop    r12
  4015e2:	pop    r13
  4015e4:	pop    r14
  4015e6:	ret    
  4015e7:	lea    r13,[rsp+0x2f]
  4015ec:	xor    edx,edx
  4015ee:	xor    ecx,ecx
  4015f0:	mov    r8,r13
  4015f3:	call   0x402e18
  4015f8:	lea    r8,[rsp+0x2e]
  4015fd:	xor    edx,edx
  4015ff:	xor    ecx,ecx
  401601:	mov    QWORD PTR [rsp+0x40],rax
  401606:	call   0x402e18
  40160b:	mov    QWORD PTR [rsp+0x50],rax
  401610:	xor    ecx,ecx
  401612:	call   QWORD PTR [rip+0xbeac]        # 0x40d4c4
  401618:	mov    r8d,0x104
  40161e:	mov    rdx,rbx
  401621:	mov    rcx,rax
  401624:	call   QWORD PTR [rip+0xbe92]        # 0x40d4bc
  40162a:	test   eax,eax
  40162c:	jne    0x4016f6
  401632:	mov    rax,QWORD PTR [rsp+0x50]
  401637:	cmp    QWORD PTR [rax-0x18],0x0
  40163c:	je     0x4016ef
  401642:	lea    rdx,[rip+0x59c6]        # 0x40700f
  401649:	or     r8,0xffffffffffffffff
  40164d:	mov    rcx,r12
  401650:	call   0x402e50
  401655:	cmp    rax,0xffffffffffffffff
  401659:	je     0x4016ea
  40165f:	lea    r14,[rsp+0x60]
  401664:	mov    r9,rax
  401667:	xor    r8d,r8d
  40166a:	mov    rdx,r12
  40166d:	mov    rcx,r14
  401670:	call   0x402e48
  401675:	lea    r12,[rsp+0x40]
  40167a:	mov    rdx,r14
  40167d:	mov    rcx,r12
  401680:	call   0x402df8
  401685:	mov    rax,QWORD PTR [rsp+0x60]
  40168a:	mov    rdx,rsi
  40168d:	lea    rcx,[rax-0x18]
  401691:	call   0x402e00
  401696:	mov    rax,QWORD PTR [rsp+0x50]
  40169b:	lea    rcx,[rax-0x18]
  40169f:	mov    rdx,rsi
  4016a2:	call   0x402e00
  4016a7:	mov    rdx,r12
  4016aa:	mov    rcx,rbp
  4016ad:	call   0x402df8
  4016b2:	mov    rax,QWORD PTR [rsp+0x40]
  4016b7:	mov    rdx,rbx
  4016ba:	lea    rcx,[rax-0x18]
  4016be:	call   0x402e00
  4016c3:	mov    rax,QWORD PTR [rsp+0x30]
  4016c8:	cmp    QWORD PTR [rax-0x18],0x0
  4016cd:	jne    0x4015b6
  4016d3:	lea    rdx,[rip+0x593e]        # 0x407018
  4016da:	mov    r8,rbx
  4016dd:	mov    rcx,rdi
  4016e0:	call   0x402dd0
  4016e5:	jmp    0x4015c1
  4016ea:	mov    rax,QWORD PTR [rsp+0x50]
  4016ef:	lea    r12,[rsp+0x40]
  4016f4:	jmp    0x40169b
  4016f6:	lea    r14,[rsp+0x60]
  4016fb:	mov    r8,rsi
  4016fe:	mov    rdx,rbx
  401701:	mov    BYTE PTR [rsp+0x184],0x0
  401709:	mov    rcx,r14
  40170c:	call   0x402dd0
  401711:	lea    rdx,[rip+0x58f5]        # 0x40700d
  401718:	or     r8,0xffffffffffffffff
  40171c:	mov    rcx,r14
  40171f:	call   0x402e50
  401724:	cmp    rax,0xffffffffffffffff
  401728:	je     0x401758
  40172a:	lea    r9,[rax+0x1]
  40172e:	xor    r8d,r8d
  401731:	mov    rdx,r14
  401734:	mov    rcx,rsi
  401737:	call   0x402e48
  40173c:	mov    rdx,rsi
  40173f:	mov    rcx,r12
  401742:	call   0x402df8
  401747:	mov    rax,QWORD PTR [rsp+0x70]
  40174c:	mov    rdx,r13
  40174f:	lea    rcx,[rax-0x18]
  401753:	call   0x402e00
  401758:	mov    rax,QWORD PTR [rsp+0x60]
  40175d:	mov    rdx,rsi
  401760:	lea    rcx,[rax-0x18]
  401764:	call   0x402e00
  401769:	jmp    0x401632
  40176e:	mov    rbx,rax
  401771:	mov    rax,QWORD PTR [rsp+0x60]
  401776:	mov    rdx,rsi
  401779:	lea    rcx,[rax-0x18]
  40177d:	call   0x402e00
  401782:	mov    rax,QWORD PTR [rsp+0x50]
  401787:	mov    rdx,r13
  40178a:	lea    rcx,[rax-0x18]
  40178e:	call   0x402e00
  401793:	mov    rax,QWORD PTR [rsp+0x40]
  401798:	mov    rdx,r13
  40179b:	lea    rcx,[rax-0x18]
  40179f:	call   0x402e00
  4017a4:	mov    rax,QWORD PTR [rsp+0x30]
  4017a9:	lea    rdx,[rsp+0x2d]
  4017ae:	lea    rcx,[rax-0x18]
  4017b2:	call   0x402e00
  4017b7:	mov    rcx,rbx
  4017ba:	call   0x4043b0
  4017bf:	mov    rbx,rax
  4017c2:	jmp    0x4017a4
  4017c4:	mov    rbx,rax
  4017c7:	jmp    0x401793
  4017c9:	mov    rbx,rax
  4017cc:	mov    rax,QWORD PTR [rsp+0x80]
  4017d4:	lea    rdx,[rsp+0x60]
  4017d9:	lea    rcx,[rax-0x18]
  4017dd:	call   0x402e00
  4017e2:	mov    rcx,rbx
  4017e5:	call   0x4043b0
  4017ea:	mov    rbx,rax
  4017ed:	jmp    0x401782
  4017ef:	mov    rbx,rax
  4017f2:	mov    rax,QWORD PTR [rsp+0x70]
  4017f7:	mov    rdx,r13
  4017fa:	lea    rcx,[rax-0x18]
  4017fe:	call   0x402e00
  401803:	mov    rax,QWORD PTR [rsp+0x60]
  401808:	mov    rdx,r13
  40180b:	lea    rcx,[rax-0x18]
  40180f:	call   0x402e00
  401814:	jmp    0x401782
  401819:	mov    rbx,rax
  40181c:	jmp    0x401803
  40181e:	jmp    0x4017bf
  401820:	mov    rsi,rax
  401823:	mov    rax,QWORD PTR [rsp+0x40]
  401828:	mov    rdx,rbx
  40182b:	mov    rbx,rsi
  40182e:	lea    rcx,[rax-0x18]
  401832:	call   0x402e00
  401837:	jmp    0x4017a4
  40183c:	nop    DWORD PTR [rax+0x0]
  401840:	sub    rsp,0x38
  401844:	mov    rax,QWORD PTR [rip+0x6d35]        # 0x408580
  40184b:	mov    rcx,QWORD PTR [rip+0x97ee]        # 0x40b040
  401852:	mov    eax,DWORD PTR [rax]
  401854:	test   eax,eax
  401856:	jne    0x401870
  401858:	mov    eax,DWORD PTR [rcx-0x8]
  40185b:	lea    edx,[rax-0x1]
  40185e:	test   eax,eax
  401860:	mov    DWORD PTR [rcx-0x8],edx
  401863:	jle    0x40187e
  401865:	add    rsp,0x38
  401869:	ret    
  40186a:	nop    WORD PTR [rax+rax*1+0x0]
  401870:	mov    eax,0xffffffff
  401875:	lock xadd DWORD PTR [rcx-0x8],eax
  40187a:	test   eax,eax
  40187c:	jg     0x401865
  40187e:	lea    rdx,[rsp+0x2f]
  401883:	sub    rcx,0x18
  401887:	call   0x402e08
  40188c:	nop
  40188d:	add    rsp,0x38
  401891:	ret    
  401892:	nop    DWORD PTR [rax+0x0]
  401896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018a0:	sub    rsp,0x38
  4018a4:	mov    rax,QWORD PTR [rip+0x6cd5]        # 0x408580
  4018ab:	mov    rcx,QWORD PTR [rip+0x9796]        # 0x40b048
  4018b2:	mov    eax,DWORD PTR [rax]
  4018b4:	test   eax,eax
  4018b6:	jne    0x4018d0
  4018b8:	mov    eax,DWORD PTR [rcx-0x8]
  4018bb:	lea    edx,[rax-0x1]
  4018be:	test   eax,eax
  4018c0:	mov    DWORD PTR [rcx-0x8],edx
  4018c3:	jle    0x4018de
  4018c5:	add    rsp,0x38
  4018c9:	ret    
  4018ca:	nop    WORD PTR [rax+rax*1+0x0]
  4018d0:	mov    eax,0xffffffff
  4018d5:	lock xadd DWORD PTR [rcx-0x8],eax
  4018da:	test   eax,eax
  4018dc:	jg     0x4018c5
  4018de:	lea    rdx,[rsp+0x2f]
  4018e3:	sub    rcx,0x18
  4018e7:	call   0x402e08
  4018ec:	nop
  4018ed:	add    rsp,0x38
  4018f1:	ret    
  4018f2:	nop    DWORD PTR [rax+0x0]
  4018f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401900:	lea    rcx,[rip+0x9789]        # 0x40b090
  401907:	jmp    0x402db8
  40190c:	nop    DWORD PTR [rax+0x0]
  401910:	push   r13
  401912:	push   r12
  401914:	push   rbp
  401915:	push   rdi
  401916:	push   rsi
  401917:	push   rbx
  401918:	sub    rsp,0x78
  40191c:	lea    rdi,[rsp+0x60]
  401921:	lea    r12,[rsp+0x40]
  401926:	mov    rsi,rcx
  401929:	mov    r13,rdx
  40192c:	xor    ecx,ecx
  40192e:	xor    edx,edx
  401930:	mov    r8,rdi
  401933:	call   0x402e18
  401938:	mov    rcx,r12
  40193b:	mov    QWORD PTR [rsi],rax
  40193e:	call   0x401530
  401943:	lea    rbx,[rsp+0x50]
  401948:	lea    rdx,[rip+0x56c9]        # 0x407018
  40194f:	mov    r8,rdi
  401952:	mov    rcx,rbx
  401955:	call   0x402dd0
  40195a:	mov    rdx,r13
  40195d:	mov    rcx,rsi
  401960:	lea    rbp,[rsp+0x3f]
  401965:	call   0x402de0
  40196a:	mov    rdx,rbx
  40196d:	mov    rcx,r12
  401970:	call   0x404e90
  401975:	test   al,al
  401977:	jne    0x4019bf
  401979:	mov    rax,QWORD PTR [rsp+0x50]
  40197e:	xor    r8d,r8d
  401981:	mov    rdx,r13
  401984:	mov    rcx,rdi
  401987:	lea    rbp,[rsp+0x3f]
  40198c:	mov    r12,QWORD PTR [rax-0x18]
  401990:	mov    r9,r12
  401993:	call   0x402e48
  401998:	mov    rdx,rbx
  40199b:	mov    rcx,rdi
  40199e:	lea    rbp,[rsp+0x3f]
  4019a3:	call   0x404e90
  4019a8:	mov    ebx,eax
  4019aa:	mov    rax,QWORD PTR [rsp+0x60]
  4019af:	mov    rdx,rbp
  4019b2:	lea    rcx,[rax-0x18]
  4019b6:	call   0x402e00
  4019bb:	test   bl,bl
  4019bd:	jne    0x401a37
  4019bf:	mov    rcx,rsi
  4019c2:	lea    rbp,[rsp+0x3f]
  4019c7:	call   0x402e10
  4019cc:	mov    r9,QWORD PTR [rsi]
  4019cf:	mov    rbx,rax
  4019d2:	mov    eax,DWORD PTR [r9-0x8]
  4019d6:	test   eax,eax
  4019d8:	js     0x4019f4
  4019da:	mov    rcx,rsi
  4019dd:	lea    rbp,[rsp+0x3f]
  4019e2:	call   0x402e20
  4019e7:	mov    r9,QWORD PTR [rsi]
  4019ea:	jmp    0x4019f4
  4019ec:	nop    DWORD PTR [rax+0x0]
  4019f0:	add    r9,0x1
  4019f4:	cmp    r9,rbx
  4019f7:	je     0x401a05
  4019f9:	cmp    BYTE PTR [r9],0x2f
  4019fd:	jne    0x4019f0
  4019ff:	mov    BYTE PTR [r9],0x5c
  401a03:	jmp    0x4019f0
  401a05:	mov    rax,QWORD PTR [rsp+0x50]
  401a0a:	mov    rdx,rdi
  401a0d:	lea    rcx,[rax-0x18]
  401a11:	call   0x402e00
  401a16:	mov    rax,QWORD PTR [rsp+0x40]
  401a1b:	mov    rdx,rdi
  401a1e:	lea    rcx,[rax-0x18]
  401a22:	call   0x402e00
  401a27:	mov    rax,rsi
  401a2a:	add    rsp,0x78
  401a2e:	pop    rbx
  401a2f:	pop    rsi
  401a30:	pop    rdi
  401a31:	pop    rbp
  401a32:	pop    r12
  401a34:	pop    r13
  401a36:	ret    
  401a37:	mov    r9,QWORD PTR [rsp+0x40]
  401a3c:	mov    r8,r12
  401a3f:	xor    edx,edx
  401a41:	mov    rcx,rsi
  401a44:	mov    rax,QWORD PTR [r9-0x18]
  401a48:	mov    QWORD PTR [rsp+0x20],rax
  401a4d:	call   0x402dd8
  401a52:	jmp    0x4019bf
  401a57:	lea    rbp,[rsp+0x3f]
  401a5c:	mov    rbx,rax
  401a5f:	mov    rcx,QWORD PTR [rsi]
  401a62:	mov    rdx,rbp
  401a65:	sub    rcx,0x18
  401a69:	call   0x402e00
  401a6e:	mov    rcx,rbx
  401a71:	call   0x4043b0
  401a76:	mov    rbx,rax
  401a79:	mov    rax,QWORD PTR [rsp+0x50]
  401a7e:	mov    rdx,rbp
  401a81:	lea    rcx,[rax-0x18]
  401a85:	call   0x402e00
  401a8a:	mov    rax,QWORD PTR [rsp+0x40]
  401a8f:	mov    rdx,rbp
  401a92:	lea    rcx,[rax-0x18]
  401a96:	call   0x402e00
  401a9b:	jmp    0x401a5f
  401a9d:	mov    rbx,rax
  401aa0:	lea    rbp,[rsp+0x3f]
  401aa5:	jmp    0x401a8a
  401aa7:	nop    WORD PTR [rax+rax*1+0x0]
  401ab0:	mov    rdx,QWORD PTR [rip+0x95b9]        # 0x40b070
  401ab7:	lea    rcx,[rip+0x95a2]        # 0x40b060
  401abe:	jmp    0x404db0
  401ac3:	nop    DWORD PTR [rax]
  401ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ad0:	push   r13
  401ad2:	push   r12
  401ad4:	push   rbp
  401ad5:	push   rdi
  401ad6:	push   rsi
  401ad7:	push   rbx
  401ad8:	sub    rsp,0x68
  401adc:	lea    rbx,[rsp+0x50]
  401ae1:	lea    rbp,[rsp+0x2f]
  401ae6:	lea    rdi,[rsp+0x40]
  401aeb:	mov    rcx,rbx
  401aee:	call   0x401530
  401af3:	lea    rdx,[rip+0x5507]        # 0x407001
  401afa:	mov    r8,rbp
  401afd:	mov    rcx,rdi
  401b00:	call   0x402dd0
  401b05:	lea    rcx,[rip+0x9554]        # 0x40b060
  401b0c:	mov    rdx,rdi
  401b0f:	call   0x4045a0
  401b14:	mov    rdx,rbx
  401b17:	mov    rcx,rax
  401b1a:	call   0x402df8
  401b1f:	mov    rax,QWORD PTR [rsp+0x40]
  401b24:	lea    rsi,[rsp+0x30]
  401b29:	mov    rdx,rsi
  401b2c:	lea    rcx,[rax-0x18]
  401b30:	call   0x402e00
  401b35:	mov    rax,QWORD PTR [rsp+0x50]
  401b3a:	mov    rdx,rdi
  401b3d:	lea    rcx,[rax-0x18]
  401b41:	call   0x402e00
  401b46:	lea    rdx,[rip+0x5507]        # 0x407054
  401b4d:	mov    rcx,rbx
  401b50:	mov    r8,rsi
  401b53:	call   0x402dd0
  401b58:	lea    rcx,[rip+0x9501]        # 0x40b060
  401b5f:	mov    rdx,rbx
  401b62:	call   0x4045a0
  401b67:	lea    rdx,[rip+0x54aa]        # 0x407018
  401b6e:	mov    rcx,rax
  401b71:	call   0x402df0
  401b76:	mov    rax,QWORD PTR [rsp+0x50]
  401b7b:	mov    rdx,rdi
  401b7e:	lea    rcx,[rax-0x18]
  401b82:	call   0x402e00
  401b87:	lea    rdx,[rip+0x54cd]        # 0x40705b
  401b8e:	mov    rcx,rbx
  401b91:	mov    r8,rsi
  401b94:	call   0x402dd0
  401b99:	lea    rcx,[rip+0x94c0]        # 0x40b060
  401ba0:	mov    rdx,rbx
  401ba3:	call   0x4045a0
  401ba8:	lea    rdx,[rip+0x54b8]        # 0x407067
  401baf:	mov    rcx,rax
  401bb2:	call   0x402df0
  401bb7:	mov    rax,QWORD PTR [rsp+0x50]
  401bbc:	mov    rdx,rdi
  401bbf:	lea    rcx,[rax-0x18]
  401bc3:	call   0x402e00
  401bc8:	lea    rdx,[rip+0x54a0]        # 0x40706f
  401bcf:	mov    rcx,rbx
  401bd2:	mov    r8,rsi
  401bd5:	call   0x402dd0
  401bda:	lea    rcx,[rip+0x947f]        # 0x40b060
  401be1:	mov    rdx,rbx
  401be4:	call   0x4045a0
  401be9:	lea    rdx,[rip+0x5493]        # 0x407083
  401bf0:	mov    rcx,rax
  401bf3:	call   0x402df0
  401bf8:	mov    rax,QWORD PTR [rsp+0x50]
  401bfd:	mov    rdx,rdi
  401c00:	lea    rcx,[rax-0x18]
  401c04:	call   0x402e00
  401c09:	lea    rdx,[rip+0x5486]        # 0x407096
  401c10:	mov    rcx,rbx
  401c13:	mov    r8,rsi
  401c16:	call   0x402dd0
  401c1b:	lea    rcx,[rip+0x943e]        # 0x40b060
  401c22:	mov    rdx,rbx
  401c25:	call   0x4045a0
  401c2a:	lea    rdx,[rip+0x5473]        # 0x4070a4
  401c31:	mov    rcx,rax
  401c34:	call   0x402df0
  401c39:	mov    rax,QWORD PTR [rsp+0x50]
  401c3e:	mov    rdx,rdi
  401c41:	lea    rcx,[rax-0x18]
  401c45:	call   0x402e00
  401c4a:	lea    rdx,[rip+0x5458]        # 0x4070a9
  401c51:	mov    rcx,rbx
  401c54:	mov    r8,rsi
  401c57:	call   0x402dd0
  401c5c:	lea    rcx,[rip+0x93fd]        # 0x40b060
  401c63:	mov    rdx,rbx
  401c66:	call   0x4045a0
  401c6b:	lea    rdx,[rip+0x543f]        # 0x4070b1
  401c72:	mov    rcx,rax
  401c75:	call   0x402df0
  401c7a:	mov    rax,QWORD PTR [rsp+0x50]
  401c7f:	mov    rdx,rdi
  401c82:	lea    rcx,[rax-0x18]
  401c86:	call   0x402e00
  401c8b:	lea    rdx,[rip+0x5422]        # 0x4070b4
  401c92:	mov    rcx,rbx
  401c95:	mov    r8,rsi
  401c98:	call   0x402dd0
  401c9d:	lea    rcx,[rip+0x93bc]        # 0x40b060
  401ca4:	mov    rdx,rbx
  401ca7:	call   0x4045a0
  401cac:	lea    rdx,[rip+0x5409]        # 0x4070bc
  401cb3:	mov    rcx,rax
  401cb6:	call   0x402df0
  401cbb:	mov    rax,QWORD PTR [rsp+0x50]
  401cc0:	mov    rdx,rdi
  401cc3:	lea    r13,[rsp+0x2e]
  401cc8:	lea    rcx,[rax-0x18]
  401ccc:	call   0x402e00
  401cd1:	lea    rdx,[rip+0x53f0]        # 0x4070c8
  401cd8:	mov    rcx,rdi
  401cdb:	mov    r8,r13
  401cde:	call   0x402dd0
  401ce3:	mov    rdx,rdi
  401ce6:	mov    rcx,rbx
  401ce9:	call   0x401910
  401cee:	lea    r12,[rsp+0x2d]
  401cf3:	lea    rdx,[rip+0x5437]        # 0x407131
  401cfa:	mov    rcx,rsi
  401cfd:	mov    r8,r12
  401d00:	call   0x402dd0
  401d05:	lea    rcx,[rip+0x9354]        # 0x40b060
  401d0c:	mov    rdx,rsi
  401d0f:	call   0x4045a0
  401d14:	mov    rdx,rbx
  401d17:	mov    rcx,rax
  401d1a:	call   0x402df8
  401d1f:	mov    rax,QWORD PTR [rsp+0x30]
  401d24:	mov    rdx,rbp
  401d27:	lea    rcx,[rax-0x18]
  401d2b:	call   0x402e00
  401d30:	mov    rax,QWORD PTR [rsp+0x50]
  401d35:	mov    rdx,rsi
  401d38:	lea    rcx,[rax-0x18]
  401d3c:	call   0x402e00
  401d41:	mov    rax,QWORD PTR [rsp+0x40]
  401d46:	mov    rdx,rbx
  401d49:	lea    rcx,[rax-0x18]
  401d4d:	call   0x402e00
  401d52:	lea    rdx,[rip+0x53e7]        # 0x407140
  401d59:	mov    rcx,rdi
  401d5c:	mov    r8,r13
  401d5f:	call   0x402dd0
  401d64:	mov    rdx,rdi
  401d67:	mov    rcx,rbx
  401d6a:	call   0x401910
  401d6f:	lea    rdx,[rip+0x540a]        # 0x407180
  401d76:	mov    r8,r12
  401d79:	mov    rcx,rsi
  401d7c:	call   0x402dd0
  401d81:	lea    rcx,[rip+0x92d8]        # 0x40b060
  401d88:	mov    rdx,rsi
  401d8b:	call   0x4045a0
  401d90:	mov    rdx,rbx
  401d93:	mov    rcx,rax
  401d96:	call   0x402df8
  401d9b:	mov    rax,QWORD PTR [rsp+0x30]
  401da0:	mov    rdx,rbp
  401da3:	lea    rcx,[rax-0x18]
  401da7:	call   0x402e00
  401dac:	mov    rax,QWORD PTR [rsp+0x50]
  401db1:	mov    rdx,rsi
  401db4:	lea    rcx,[rax-0x18]
  401db8:	call   0x402e00
  401dbd:	mov    rax,QWORD PTR [rsp+0x40]
  401dc2:	mov    rdx,rbx
  401dc5:	lea    rcx,[rax-0x18]
  401dc9:	call   0x402e00
  401dce:	lea    rdx,[rip+0x53b3]        # 0x407188
  401dd5:	mov    rcx,rdi
  401dd8:	mov    r8,r13
  401ddb:	call   0x402dd0
  401de0:	mov    rdx,rdi
  401de3:	mov    rcx,rbx
  401de6:	call   0x401910
  401deb:	lea    rdx,[rip+0x53d8]        # 0x4071ca
  401df2:	mov    r8,r12
  401df5:	mov    rcx,rsi
  401df8:	call   0x402dd0
  401dfd:	lea    rcx,[rip+0x925c]        # 0x40b060
  401e04:	mov    rdx,rsi
  401e07:	call   0x4045a0
  401e0c:	mov    rdx,rbx
  401e0f:	mov    rcx,rax
  401e12:	call   0x402df8
  401e17:	mov    rax,QWORD PTR [rsp+0x30]
  401e1c:	mov    rdx,rbp
  401e1f:	lea    rcx,[rax-0x18]
  401e23:	call   0x402e00
  401e28:	mov    rax,QWORD PTR [rsp+0x50]
  401e2d:	mov    rdx,rsi
  401e30:	lea    rcx,[rax-0x18]
  401e34:	call   0x402e00
  401e39:	mov    rax,QWORD PTR [rsp+0x40]
  401e3e:	mov    rdx,rbx
  401e41:	lea    rcx,[rax-0x18]
  401e45:	call   0x402e00
  401e4a:	lea    rdx,[rip+0x5337]        # 0x407188
  401e51:	mov    rcx,rdi
  401e54:	mov    r8,r13
  401e57:	call   0x402dd0
  401e5c:	mov    rdx,rdi
  401e5f:	mov    rcx,rbx
  401e62:	call   0x401910
  401e67:	lea    rdx,[rip+0x5364]        # 0x4071d2
  401e6e:	mov    r8,r12
  401e71:	mov    rcx,rsi
  401e74:	call   0x402dd0
  401e79:	lea    rcx,[rip+0x91e0]        # 0x40b060
  401e80:	mov    rdx,rsi
  401e83:	call   0x4045a0
  401e88:	mov    rdx,rbx
  401e8b:	mov    rcx,rax
  401e8e:	call   0x402df8
  401e93:	mov    rax,QWORD PTR [rsp+0x30]
  401e98:	mov    rdx,rbp
  401e9b:	lea    rcx,[rax-0x18]
  401e9f:	call   0x402e00
  401ea4:	mov    rax,QWORD PTR [rsp+0x50]
  401ea9:	mov    rdx,rsi
  401eac:	lea    rcx,[rax-0x18]
  401eb0:	call   0x402e00
  401eb5:	mov    rax,QWORD PTR [rsp+0x40]
  401eba:	mov    rdx,rbx
  401ebd:	lea    rcx,[rax-0x18]
  401ec1:	call   0x402e00
  401ec6:	lea    rdx,[rip+0x514b]        # 0x407018
  401ecd:	mov    rcx,rdi
  401ed0:	mov    r8,r13
  401ed3:	call   0x402dd0
  401ed8:	mov    rdx,rdi
  401edb:	mov    rcx,rbx
  401ede:	call   0x401910
  401ee3:	lea    rdx,[rip+0x52f4]        # 0x4071de
  401eea:	mov    r8,r12
  401eed:	mov    rcx,rsi
  401ef0:	call   0x402dd0
  401ef5:	lea    rcx,[rip+0x9164]        # 0x40b060
  401efc:	mov    rdx,rsi
  401eff:	call   0x4045a0
  401f04:	mov    rdx,rbx
  401f07:	mov    rcx,rax
  401f0a:	call   0x402df8
  401f0f:	mov    rax,QWORD PTR [rsp+0x30]
  401f14:	mov    rdx,rbp
  401f17:	lea    rcx,[rax-0x18]
  401f1b:	call   0x402e00
  401f20:	mov    rax,QWORD PTR [rsp+0x50]
  401f25:	mov    rdx,rsi
  401f28:	lea    rcx,[rax-0x18]
  401f2c:	call   0x402e00
  401f31:	mov    rax,QWORD PTR [rsp+0x40]
  401f36:	mov    rdx,rbx
  401f39:	lea    rcx,[rax-0x18]
  401f3d:	call   0x402e00
  401f42:	lea    rdx,[rip+0x52a1]        # 0x4071ea
  401f49:	mov    rcx,rdi
  401f4c:	mov    r8,r13
  401f4f:	call   0x402dd0
  401f54:	mov    rdx,rdi
  401f57:	mov    rcx,rbx
  401f5a:	call   0x401910
  401f5f:	lea    rdx,[rip+0x5289]        # 0x4071ef
  401f66:	mov    r8,r12
  401f69:	mov    rcx,rsi
  401f6c:	call   0x402dd0
  401f71:	lea    rcx,[rip+0x90e8]        # 0x40b060
  401f78:	mov    rdx,rsi
  401f7b:	call   0x4045a0
  401f80:	mov    rdx,rbx
  401f83:	mov    rcx,rax
  401f86:	call   0x402df8
  401f8b:	mov    rax,QWORD PTR [rsp+0x30]
  401f90:	mov    rdx,rbp
  401f93:	lea    rcx,[rax-0x18]
  401f97:	call   0x402e00
  401f9c:	mov    rax,QWORD PTR [rsp+0x50]
  401fa1:	mov    rdx,rsi
  401fa4:	lea    rcx,[rax-0x18]
  401fa8:	call   0x402e00
  401fad:	mov    rax,QWORD PTR [rsp+0x40]
  401fb2:	mov    rdx,rbx
  401fb5:	lea    rcx,[rax-0x18]
  401fb9:	call   0x402e00
  401fbe:	lea    rdx,[rip+0x5233]        # 0x4071f8
  401fc5:	mov    rcx,rdi
  401fc8:	mov    r8,r13
  401fcb:	call   0x402dd0
  401fd0:	mov    rdx,rdi
  401fd3:	mov    rcx,rbx
  401fd6:	call   0x401910
  401fdb:	lea    rdx,[rip+0x5267]        # 0x407249
  401fe2:	mov    r8,r12
  401fe5:	mov    rcx,rsi
  401fe8:	call   0x402dd0
  401fed:	lea    rcx,[rip+0x906c]        # 0x40b060
  401ff4:	mov    rdx,rsi
  401ff7:	call   0x4045a0
  401ffc:	mov    rdx,rbx
  401fff:	mov    rcx,rax
  402002:	call   0x402df8
  402007:	mov    rax,QWORD PTR [rsp+0x30]
  40200c:	mov    rdx,rbp
  40200f:	lea    rcx,[rax-0x18]
  402013:	call   0x402e00
  402018:	mov    rax,QWORD PTR [rsp+0x50]
  40201d:	mov    rdx,rsi
  402020:	lea    rcx,[rax-0x18]
  402024:	call   0x402e00
  402029:	mov    rax,QWORD PTR [rsp+0x40]
  40202e:	mov    rdx,rbx
  402031:	lea    rcx,[rax-0x18]
  402035:	call   0x402e00
  40203a:	lea    rdx,[rip+0x5217]        # 0x407258
  402041:	mov    rcx,rdi
  402044:	mov    r8,r13
  402047:	call   0x402dd0
  40204c:	mov    rdx,rdi
  40204f:	mov    rcx,rbx
  402052:	call   0x401910
  402057:	lea    rdx,[rip+0x5252]        # 0x4072b0
  40205e:	mov    r8,r12
  402061:	mov    rcx,rsi
  402064:	call   0x402dd0
  402069:	lea    rcx,[rip+0x8ff0]        # 0x40b060
  402070:	mov    rdx,rsi
  402073:	call   0x4045a0
  402078:	mov    rdx,rbx
  40207b:	mov    rcx,rax
  40207e:	call   0x402df8
  402083:	mov    rax,QWORD PTR [rsp+0x30]
  402088:	mov    rdx,rbp
  40208b:	lea    rcx,[rax-0x18]
  40208f:	call   0x402e00
  402094:	mov    rax,QWORD PTR [rsp+0x50]
  402099:	mov    rdx,rsi
  40209c:	lea    rcx,[rax-0x18]
  4020a0:	call   0x402e00
  4020a5:	mov    rax,QWORD PTR [rsp+0x40]
  4020aa:	mov    rdx,rbx
  4020ad:	lea    rcx,[rax-0x18]
  4020b1:	call   0x402e00
  4020b6:	lea    rdx,[rip+0x5203]        # 0x4072c0
  4020bd:	mov    rcx,rdi
  4020c0:	mov    r8,r13
  4020c3:	call   0x402dd0
  4020c8:	mov    rdx,rdi
  4020cb:	mov    rcx,rbx
  4020ce:	call   0x401910
  4020d3:	lea    rdx,[rip+0x522a]        # 0x407304
  4020da:	mov    r8,r12
  4020dd:	mov    rcx,rsi
  4020e0:	call   0x402dd0
  4020e5:	lea    rcx,[rip+0x8f74]        # 0x40b060
  4020ec:	mov    rdx,rsi
  4020ef:	call   0x4045a0
  4020f4:	mov    rdx,rbx
  4020f7:	mov    rcx,rax
  4020fa:	call   0x402df8
  4020ff:	mov    rax,QWORD PTR [rsp+0x30]
  402104:	mov    rdx,rbp
  402107:	lea    rcx,[rax-0x18]
  40210b:	call   0x402e00
  402110:	mov    rax,QWORD PTR [rsp+0x50]
  402115:	mov    rdx,rsi
  402118:	lea    rcx,[rax-0x18]
  40211c:	call   0x402e00
  402121:	mov    rax,QWORD PTR [rsp+0x40]
  402126:	mov    rdx,rbx
  402129:	lea    rcx,[rax-0x18]
  40212d:	call   0x402e00
  402132:	lea    rdx,[rip+0x51d7]        # 0x407310
  402139:	mov    rcx,rdi
  40213c:	mov    r8,r13
  40213f:	call   0x402dd0
  402144:	mov    rdx,rdi
  402147:	mov    rcx,rbx
  40214a:	call   0x401910
  40214f:	lea    rdx,[rip+0x5201]        # 0x407357
  402156:	mov    r8,r12
  402159:	mov    rcx,rsi
  40215c:	call   0x402dd0
  402161:	lea    rcx,[rip+0x8ef8]        # 0x40b060
  402168:	mov    rdx,rsi
  40216b:	call   0x4045a0
  402170:	mov    rdx,rbx
  402173:	mov    rcx,rax
  402176:	call   0x402df8
  40217b:	mov    rax,QWORD PTR [rsp+0x30]
  402180:	mov    rdx,rbp
  402183:	lea    rcx,[rax-0x18]
  402187:	call   0x402e00
  40218c:	mov    rax,QWORD PTR [rsp+0x50]
  402191:	mov    rdx,rsi
  402194:	lea    rcx,[rax-0x18]
  402198:	call   0x402e00
  40219d:	mov    rax,QWORD PTR [rsp+0x40]
  4021a2:	mov    rdx,rbx
  4021a5:	lea    rcx,[rax-0x18]
  4021a9:	call   0x402e00
  4021ae:	lea    rdx,[rip+0x51ab]        # 0x407360
  4021b5:	mov    rcx,rdi
  4021b8:	mov    r8,r13
  4021bb:	call   0x402dd0
  4021c0:	mov    rdx,rdi
  4021c3:	mov    rcx,rbx
  4021c6:	call   0x401910
  4021cb:	lea    rdx,[rip+0x51e1]        # 0x4073b3
  4021d2:	mov    r8,r12
  4021d5:	mov    rcx,rsi
  4021d8:	call   0x402dd0
  4021dd:	lea    rcx,[rip+0x8e7c]        # 0x40b060
  4021e4:	mov    rdx,rsi
  4021e7:	call   0x4045a0
  4021ec:	mov    rdx,rbx
  4021ef:	mov    rcx,rax
  4021f2:	call   0x402df8
  4021f7:	mov    rax,QWORD PTR [rsp+0x30]
  4021fc:	mov    rdx,rbp
  4021ff:	lea    rcx,[rax-0x18]
  402203:	call   0x402e00
  402208:	mov    rax,QWORD PTR [rsp+0x50]
  40220d:	mov    rdx,rsi
  402210:	lea    rcx,[rax-0x18]
  402214:	call   0x402e00
  402219:	mov    rax,QWORD PTR [rsp+0x40]
  40221e:	mov    rdx,rbx
  402221:	lea    rcx,[rax-0x18]
  402225:	call   0x402e00
  40222a:	lea    rdx,[rip+0x518f]        # 0x4073c0
  402231:	mov    rcx,rdi
  402234:	mov    r8,r13
  402237:	call   0x402dd0
  40223c:	mov    rdx,rdi
  40223f:	mov    rcx,rbx
  402242:	call   0x401910
  402247:	lea    rdx,[rip+0x51b2]        # 0x407400
  40224e:	mov    r8,r12
  402251:	mov    rcx,rsi
  402254:	call   0x402dd0
  402259:	lea    rcx,[rip+0x8e00]        # 0x40b060
  402260:	mov    rdx,rsi
  402263:	call   0x4045a0
  402268:	mov    rdx,rbx
  40226b:	mov    rcx,rax
  40226e:	call   0x402df8
  402273:	mov    rax,QWORD PTR [rsp+0x30]
  402278:	mov    rdx,rbp
  40227b:	lea    rcx,[rax-0x18]
  40227f:	call   0x402e00
  402284:	mov    rax,QWORD PTR [rsp+0x50]
  402289:	mov    rdx,rsi
  40228c:	lea    rcx,[rax-0x18]
  402290:	call   0x402e00
  402295:	mov    rax,QWORD PTR [rsp+0x40]
  40229a:	mov    rdx,rbx
  40229d:	lea    rcx,[rax-0x18]
  4022a1:	call   0x402e00
  4022a6:	lea    rdx,[rip+0x515b]        # 0x407408
  4022ad:	mov    rcx,rdi
  4022b0:	mov    r8,r13
  4022b3:	call   0x402dd0
  4022b8:	mov    rdx,rdi
  4022bb:	mov    rcx,rbx
  4022be:	call   0x401910
  4022c3:	lea    rdx,[rip+0x5182]        # 0x40744c
  4022ca:	mov    r8,r12
  4022cd:	mov    rcx,rsi
  4022d0:	call   0x402dd0
  4022d5:	lea    rcx,[rip+0x8d84]        # 0x40b060
  4022dc:	mov    rdx,rsi
  4022df:	call   0x4045a0
  4022e4:	mov    rdx,rbx
  4022e7:	mov    rcx,rax
  4022ea:	call   0x402df8
  4022ef:	mov    rax,QWORD PTR [rsp+0x30]
  4022f4:	mov    rdx,rbp
  4022f7:	lea    rcx,[rax-0x18]
  4022fb:	call   0x402e00
  402300:	mov    rax,QWORD PTR [rsp+0x50]
  402305:	mov    rdx,rsi
  402308:	lea    rcx,[rax-0x18]
  40230c:	call   0x402e00
  402311:	mov    rax,QWORD PTR [rsp+0x40]
  402316:	mov    rdx,rbx
  402319:	lea    rcx,[rax-0x18]
  40231d:	call   0x402e00
  402322:	lea    rdx,[rip+0x512f]        # 0x407458
  402329:	mov    rcx,rdi
  40232c:	mov    r8,r13
  40232f:	call   0x402dd0
  402334:	mov    rdx,rdi
  402337:	mov    rcx,rbx
  40233a:	call   0x401910
  40233f:	lea    rdx,[rip+0x5182]        # 0x4074c8
  402346:	mov    r8,r12
  402349:	mov    rcx,rsi
  40234c:	call   0x402dd0
  402351:	lea    rcx,[rip+0x8d08]        # 0x40b060
  402358:	mov    rdx,rsi
  40235b:	call   0x4045a0
  402360:	mov    rdx,rbx
  402363:	mov    rcx,rax
  402366:	call   0x402df8
  40236b:	mov    rax,QWORD PTR [rsp+0x30]
  402370:	mov    rdx,rbp
  402373:	lea    rcx,[rax-0x18]
  402377:	call   0x402e00
  40237c:	mov    rax,QWORD PTR [rsp+0x50]
  402381:	mov    rdx,rsi
  402384:	lea    rcx,[rax-0x18]
  402388:	call   0x402e00
  40238d:	mov    rax,QWORD PTR [rsp+0x40]
  402392:	mov    rdx,rbx
  402395:	lea    rcx,[rax-0x18]
  402399:	call   0x402e00
  40239e:	lea    rdx,[rip+0x513b]        # 0x4074e0
  4023a5:	mov    rcx,rdi
  4023a8:	mov    r8,r13
  4023ab:	call   0x402dd0
  4023b0:	mov    rdx,rdi
  4023b3:	mov    rcx,rbx
  4023b6:	call   0x401910
  4023bb:	lea    rdx,[rip+0x5176]        # 0x407538
  4023c2:	mov    r8,r12
  4023c5:	mov    rcx,rsi
  4023c8:	call   0x402dd0
  4023cd:	lea    rcx,[rip+0x8c8c]        # 0x40b060
  4023d4:	mov    rdx,rsi
  4023d7:	call   0x4045a0
  4023dc:	mov    rdx,rbx
  4023df:	mov    rcx,rax
  4023e2:	call   0x402df8
  4023e7:	mov    rax,QWORD PTR [rsp+0x30]
  4023ec:	mov    rdx,rbp
  4023ef:	lea    rcx,[rax-0x18]
  4023f3:	call   0x402e00
  4023f8:	mov    rax,QWORD PTR [rsp+0x50]
  4023fd:	mov    rdx,rsi
  402400:	lea    rcx,[rax-0x18]
  402404:	call   0x402e00
  402409:	mov    rax,QWORD PTR [rsp+0x40]
  40240e:	mov    rdx,rbx
  402411:	lea    rcx,[rax-0x18]
  402415:	call   0x402e00
  40241a:	lea    rdx,[rip+0x512f]        # 0x407550
  402421:	mov    rcx,rdi
  402424:	mov    r8,r13
  402427:	call   0x402dd0
  40242c:	mov    rdx,rdi
  40242f:	mov    rcx,rbx
  402432:	call   0x401910
  402437:	lea    rdx,[rip+0x517d]        # 0x4075bb
  40243e:	mov    r8,r12
  402441:	mov    rcx,rsi
  402444:	call   0x402dd0
  402449:	lea    rcx,[rip+0x8c10]        # 0x40b060
  402450:	mov    rdx,rsi
  402453:	call   0x4045a0
  402458:	mov    rdx,rbx
  40245b:	mov    rcx,rax
  40245e:	call   0x402df8
  402463:	mov    rax,QWORD PTR [rsp+0x30]
  402468:	mov    rdx,rbp
  40246b:	lea    rcx,[rax-0x18]
  40246f:	call   0x402e00
  402474:	mov    rax,QWORD PTR [rsp+0x50]
  402479:	mov    rdx,rsi
  40247c:	lea    rcx,[rax-0x18]
  402480:	call   0x402e00
  402485:	mov    rax,QWORD PTR [rsp+0x40]
  40248a:	mov    rdx,rbx
  40248d:	lea    rcx,[rax-0x18]
  402491:	call   0x402e00
  402496:	lea    rdx,[rip+0x5133]        # 0x4075d0
  40249d:	mov    rcx,rdi
  4024a0:	mov    r8,r13
  4024a3:	call   0x402dd0
  4024a8:	mov    rdx,rdi
  4024ab:	mov    rcx,rbx
  4024ae:	call   0x401910
  4024b3:	lea    rdx,[rip+0x517e]        # 0x407638
  4024ba:	mov    r8,r12
  4024bd:	mov    rcx,rsi
  4024c0:	call   0x402dd0
  4024c5:	lea    rcx,[rip+0x8b94]        # 0x40b060
  4024cc:	mov    rdx,rsi
  4024cf:	call   0x4045a0
  4024d4:	mov    rdx,rbx
  4024d7:	mov    rcx,rax
  4024da:	call   0x402df8
  4024df:	mov    rax,QWORD PTR [rsp+0x30]
  4024e4:	mov    rdx,rbp
  4024e7:	lea    rcx,[rax-0x18]
  4024eb:	call   0x402e00
  4024f0:	mov    rax,QWORD PTR [rsp+0x50]
  4024f5:	mov    rdx,rsi
  4024f8:	lea    rcx,[rax-0x18]
  4024fc:	call   0x402e00
  402501:	mov    rax,QWORD PTR [rsp+0x40]
  402506:	mov    rdx,rbx
  402509:	lea    rcx,[rax-0x18]
  40250d:	call   0x402e00
  402512:	lea    rdx,[rip+0x512f]        # 0x407648
  402519:	mov    rcx,rdi
  40251c:	mov    r8,r13
  40251f:	call   0x402dd0
  402524:	mov    rdx,rdi
  402527:	mov    rcx,rbx
  40252a:	call   0x401910
  40252f:	lea    rdx,[rip+0x5162]        # 0x407698
  402536:	mov    r8,r12
  402539:	mov    rcx,rsi
  40253c:	call   0x402dd0
  402541:	lea    rcx,[rip+0x8b18]        # 0x40b060
  402548:	mov    rdx,rsi
  40254b:	call   0x4045a0
  402550:	mov    rdx,rbx
  402553:	mov    rcx,rax
  402556:	call   0x402df8
  40255b:	mov    rax,QWORD PTR [rsp+0x30]
  402560:	mov    rdx,rbp
  402563:	lea    rcx,[rax-0x18]
  402567:	call   0x402e00
  40256c:	mov    rax,QWORD PTR [rsp+0x50]
  402571:	mov    rdx,rsi
  402574:	lea    rcx,[rax-0x18]
  402578:	call   0x402e00
  40257d:	mov    rax,QWORD PTR [rsp+0x40]
  402582:	mov    rdx,rbx
  402585:	lea    rcx,[rax-0x18]
  402589:	call   0x402e00
  40258e:	lea    rdx,[rip+0x5113]        # 0x4076a8
  402595:	mov    rcx,rdi
  402598:	mov    r8,r13
  40259b:	call   0x402dd0
  4025a0:	mov    rdx,rdi
  4025a3:	mov    rcx,rbx
  4025a6:	call   0x401910
  4025ab:	lea    rdx,[rip+0x5159]        # 0x40770b
  4025b2:	mov    r8,r12
  4025b5:	mov    rcx,rsi
  4025b8:	call   0x402dd0
  4025bd:	lea    rcx,[rip+0x8a9c]        # 0x40b060
  4025c4:	mov    rdx,rsi
  4025c7:	call   0x4045a0
  4025cc:	mov    rdx,rbx
  4025cf:	mov    rcx,rax
  4025d2:	call   0x402df8
  4025d7:	mov    rax,QWORD PTR [rsp+0x30]
  4025dc:	mov    rdx,rbp
  4025df:	lea    rcx,[rax-0x18]
  4025e3:	call   0x402e00
  4025e8:	mov    rax,QWORD PTR [rsp+0x50]
  4025ed:	mov    rdx,rsi
  4025f0:	lea    rcx,[rax-0x18]
  4025f4:	call   0x402e00
  4025f9:	mov    rax,QWORD PTR [rsp+0x40]
  4025fe:	mov    rdx,rbx
  402601:	lea    rcx,[rax-0x18]
  402605:	call   0x402e00
  40260a:	lea    rdx,[rip+0x510f]        # 0x407720
  402611:	mov    rcx,rdi
  402614:	mov    r8,r13
  402617:	call   0x402dd0
  40261c:	mov    rdx,rdi
  40261f:	mov    rcx,rbx
  402622:	call   0x401910
  402627:	lea    rdx,[rip+0x514a]        # 0x407778
  40262e:	mov    r8,r12
  402631:	mov    rcx,rsi
  402634:	call   0x402dd0
  402639:	lea    rcx,[rip+0x8a20]        # 0x40b060
  402640:	mov    rdx,rsi
  402643:	call   0x4045a0
  402648:	mov    rdx,rbx
  40264b:	mov    rcx,rax
  40264e:	call   0x402df8
  402653:	mov    rax,QWORD PTR [rsp+0x30]
  402658:	mov    rdx,rbp
  40265b:	lea    rcx,[rax-0x18]
  40265f:	call   0x402e00
  402664:	mov    rax,QWORD PTR [rsp+0x50]
  402669:	mov    rdx,rsi
  40266c:	lea    rcx,[rax-0x18]
  402670:	call   0x402e00
  402675:	mov    rax,QWORD PTR [rsp+0x40]
  40267a:	mov    rdx,rbx
  40267d:	lea    rcx,[rax-0x18]
  402681:	call   0x402e00
  402686:	lea    rdx,[rip+0x5103]        # 0x407790
  40268d:	mov    rcx,rdi
  402690:	mov    r8,r13
  402693:	call   0x402dd0
  402698:	mov    rdx,rdi
  40269b:	mov    rcx,rbx
  40269e:	call   0x401910
  4026a3:	lea    rdx,[rip+0x5154]        # 0x4077fe
  4026aa:	mov    r8,r12
  4026ad:	mov    rcx,rsi
  4026b0:	call   0x402dd0
  4026b5:	lea    rcx,[rip+0x89a4]        # 0x40b060
  4026bc:	mov    rdx,rsi
  4026bf:	call   0x4045a0
  4026c4:	mov    rdx,rbx
  4026c7:	mov    rcx,rax
  4026ca:	call   0x402df8
  4026cf:	mov    rax,QWORD PTR [rsp+0x30]
  4026d4:	mov    rdx,rbp
  4026d7:	lea    rcx,[rax-0x18]
  4026db:	call   0x402e00
  4026e0:	mov    rax,QWORD PTR [rsp+0x50]
  4026e5:	mov    rdx,rsi
  4026e8:	lea    rcx,[rax-0x18]
  4026ec:	call   0x402e00
  4026f1:	mov    rax,QWORD PTR [rsp+0x40]
  4026f6:	mov    rdx,rbx
  4026f9:	lea    rcx,[rax-0x18]
  4026fd:	call   0x402e00
  402702:	lea    rdx,[rip+0x510f]        # 0x407818
  402709:	mov    rcx,rdi
  40270c:	mov    r8,r13
  40270f:	call   0x402dd0
  402714:	mov    rdx,rdi
  402717:	mov    rcx,rbx
  40271a:	call   0x401910
  40271f:	lea    rdx,[rip+0x5148]        # 0x40786e
  402726:	mov    r8,r12
  402729:	mov    rcx,rsi
  40272c:	call   0x402dd0
  402731:	lea    rcx,[rip+0x8928]        # 0x40b060
  402738:	mov    rdx,rsi
  40273b:	call   0x4045a0
  402740:	mov    rdx,rbx
  402743:	mov    rcx,rax
  402746:	call   0x402df8
  40274b:	mov    rax,QWORD PTR [rsp+0x30]
  402750:	mov    rdx,rbp
  402753:	lea    rcx,[rax-0x18]
  402757:	call   0x402e00
  40275c:	mov    rax,QWORD PTR [rsp+0x50]
  402761:	mov    rdx,rsi
  402764:	lea    rcx,[rax-0x18]
  402768:	call   0x402e00
  40276d:	mov    rax,QWORD PTR [rsp+0x40]
  402772:	mov    rdx,rbx
  402775:	lea    rcx,[rax-0x18]
  402779:	call   0x402e00
  40277e:	lea    rdx,[rip+0x5103]        # 0x407888
  402785:	mov    rcx,rdi
  402788:	mov    r8,r13
  40278b:	call   0x402dd0
  402790:	mov    rdx,rdi
  402793:	mov    rcx,rbx
  402796:	call   0x401910
  40279b:	lea    rdx,[rip+0x514f]        # 0x4078f1
  4027a2:	mov    r8,r12
  4027a5:	mov    rcx,rsi
  4027a8:	call   0x402dd0
  4027ad:	lea    rcx,[rip+0x88ac]        # 0x40b060
  4027b4:	mov    rdx,rsi
  4027b7:	call   0x4045a0
  4027bc:	mov    rdx,rbx
  4027bf:	mov    rcx,rax
  4027c2:	call   0x402df8
  4027c7:	mov    rax,QWORD PTR [rsp+0x30]
  4027cc:	mov    rdx,rbp
  4027cf:	lea    rcx,[rax-0x18]
  4027d3:	call   0x402e00
  4027d8:	mov    rax,QWORD PTR [rsp+0x50]
  4027dd:	mov    rdx,rsi
  4027e0:	lea    rcx,[rax-0x18]
  4027e4:	call   0x402e00
  4027e9:	mov    rax,QWORD PTR [rsp+0x40]
  4027ee:	mov    rdx,rbx
  4027f1:	lea    rcx,[rax-0x18]
  4027f5:	call   0x402e00
  4027fa:	lea    rdx,[rip+0x5107]        # 0x407908
  402801:	mov    rcx,rdi
  402804:	mov    r8,r13
  402807:	call   0x402dd0
  40280c:	mov    rdx,rdi
  40280f:	mov    rcx,rbx
  402812:	call   0x401910
  402817:	lea    rdx,[rip+0x5135]        # 0x407953
  40281e:	mov    r8,r12
  402821:	mov    rcx,rsi
  402824:	call   0x402dd0
  402829:	lea    rcx,[rip+0x8830]        # 0x40b060
  402830:	mov    rdx,rsi
  402833:	call   0x4045a0
  402838:	mov    rdx,rbx
  40283b:	mov    rcx,rax
  40283e:	call   0x402df8
  402843:	mov    rax,QWORD PTR [rsp+0x30]
  402848:	mov    rdx,rbp
  40284b:	lea    rcx,[rax-0x18]
  40284f:	call   0x402e00
  402854:	mov    rax,QWORD PTR [rsp+0x50]
  402859:	mov    rdx,rsi
  40285c:	lea    rcx,[rax-0x18]
  402860:	call   0x402e00
  402865:	mov    rax,QWORD PTR [rsp+0x40]
  40286a:	mov    rdx,rbx
  40286d:	lea    rcx,[rax-0x18]
  402871:	call   0x402e00
  402876:	lea    rdx,[rip+0x50e3]        # 0x407960
  40287d:	mov    rcx,rdi
  402880:	mov    r8,r13
  402883:	call   0x402dd0
  402888:	mov    rdx,rdi
  40288b:	mov    rcx,rbx
  40288e:	call   0x401910
  402893:	lea    rdx,[rip+0x510c]        # 0x4079a6
  40289a:	mov    r8,r12
  40289d:	mov    rcx,rsi
  4028a0:	call   0x402dd0
  4028a5:	lea    rcx,[rip+0x87b4]        # 0x40b060
  4028ac:	mov    rdx,rsi
  4028af:	call   0x4045a0
  4028b4:	mov    rdx,rbx
  4028b7:	mov    rcx,rax
  4028ba:	call   0x402df8
  4028bf:	mov    rax,QWORD PTR [rsp+0x30]
  4028c4:	mov    rdx,rbp
  4028c7:	lea    rcx,[rax-0x18]
  4028cb:	call   0x402e00
  4028d0:	mov    rax,QWORD PTR [rsp+0x50]
  4028d5:	mov    rdx,rsi
  4028d8:	lea    rcx,[rax-0x18]
  4028dc:	call   0x402e00
  4028e1:	mov    rax,QWORD PTR [rsp+0x40]
  4028e6:	mov    rdx,rbx
  4028e9:	lea    rcx,[rax-0x18]
  4028ed:	call   0x402e00
  4028f2:	lea    rdx,[rip+0x50b7]        # 0x4079b0
  4028f9:	mov    rcx,rdi
  4028fc:	mov    r8,r13
  4028ff:	call   0x402dd0
  402904:	mov    rdx,rdi
  402907:	mov    rcx,rbx
  40290a:	call   0x401910
  40290f:	lea    rdx,[rip+0x50ee]        # 0x407a04
  402916:	mov    r8,r12
  402919:	mov    rcx,rsi
  40291c:	call   0x402dd0
  402921:	lea    rcx,[rip+0x8738]        # 0x40b060
  402928:	mov    rdx,rsi
  40292b:	call   0x4045a0
  402930:	mov    rdx,rbx
  402933:	mov    rcx,rax
  402936:	call   0x402df8
  40293b:	mov    rax,QWORD PTR [rsp+0x30]
  402940:	mov    rdx,rbp
  402943:	lea    rcx,[rax-0x18]
  402947:	call   0x402e00
  40294c:	mov    rax,QWORD PTR [rsp+0x50]
  402951:	mov    rdx,rsi
  402954:	lea    rcx,[rax-0x18]
  402958:	call   0x402e00
  40295d:	mov    rax,QWORD PTR [rsp+0x40]
  402962:	mov    rdx,rbx
  402965:	lea    rcx,[rax-0x18]
  402969:	call   0x402e00
  40296e:	lea    rdx,[rip+0x509b]        # 0x407a10
  402975:	mov    rcx,rdi
  402978:	mov    r8,r13
  40297b:	call   0x402dd0
  402980:	mov    rdx,rdi
  402983:	mov    rcx,rbx
  402986:	call   0x401910
  40298b:	lea    rdx,[rip+0x50e2]        # 0x407a74
  402992:	mov    r8,r12
  402995:	mov    rcx,rsi
  402998:	call   0x402dd0
  40299d:	lea    rcx,[rip+0x86bc]        # 0x40b060
  4029a4:	mov    rdx,rsi
  4029a7:	call   0x4045a0
  4029ac:	mov    rdx,rbx
  4029af:	mov    rcx,rax
  4029b2:	call   0x402df8
  4029b7:	mov    rax,QWORD PTR [rsp+0x30]
  4029bc:	mov    rdx,rbp
  4029bf:	lea    rcx,[rax-0x18]
  4029c3:	call   0x402e00
  4029c8:	mov    rax,QWORD PTR [rsp+0x50]
  4029cd:	mov    rdx,rsi
  4029d0:	lea    rcx,[rax-0x18]
  4029d4:	call   0x402e00
  4029d9:	mov    rax,QWORD PTR [rsp+0x40]
  4029de:	mov    rdx,rbx
  4029e1:	lea    rcx,[rax-0x18]
  4029e5:	call   0x402e00
  4029ea:	lea    rdx,[rip+0x508f]        # 0x407a80
  4029f1:	mov    rcx,rdi
  4029f4:	mov    r8,r13
  4029f7:	call   0x402dd0
  4029fc:	mov    rdx,rdi
  4029ff:	mov    rcx,rbx
  402a02:	call   0x401910
  402a07:	lea    rdx,[rip+0x50ca]        # 0x407ad8
  402a0e:	mov    r8,r12
  402a11:	mov    rcx,rsi
  402a14:	call   0x402dd0
  402a19:	lea    rcx,[rip+0x8640]        # 0x40b060
  402a20:	mov    rdx,rsi
  402a23:	call   0x4045a0
  402a28:	mov    rdx,rbx
  402a2b:	mov    rcx,rax
  402a2e:	call   0x402df8
  402a33:	mov    rax,QWORD PTR [rsp+0x30]
  402a38:	mov    rdx,rbp
  402a3b:	lea    rcx,[rax-0x18]
  402a3f:	call   0x402e00
  402a44:	mov    rax,QWORD PTR [rsp+0x50]
  402a49:	mov    rdx,rsi
  402a4c:	lea    rcx,[rax-0x18]
  402a50:	call   0x402e00
  402a55:	mov    rax,QWORD PTR [rsp+0x40]
  402a5a:	mov    rdx,rbx
  402a5d:	lea    rcx,[rax-0x18]
  402a61:	call   0x402e00
  402a66:	lea    rdx,[rip+0x507b]        # 0x407ae8
  402a6d:	mov    rcx,rdi
  402a70:	mov    r8,r13
  402a73:	call   0x402dd0
  402a78:	mov    rdx,rdi
  402a7b:	mov    rcx,rbx
  402a7e:	call   0x401910
  402a83:	lea    rdx,[rip+0x50ab]        # 0x407b35
  402a8a:	mov    r8,r12
  402a8d:	mov    rcx,rsi
  402a90:	call   0x402dd0
  402a95:	lea    rcx,[rip+0x85c4]        # 0x40b060
  402a9c:	mov    rdx,rsi
  402a9f:	call   0x4045a0
  402aa4:	mov    rdx,rbx
  402aa7:	mov    rcx,rax
  402aaa:	call   0x402df8
  402aaf:	mov    rax,QWORD PTR [rsp+0x30]
  402ab4:	mov    rdx,rbp
  402ab7:	lea    rcx,[rax-0x18]
  402abb:	call   0x402e00
  402ac0:	mov    rax,QWORD PTR [rsp+0x50]
  402ac5:	mov    rdx,rsi
  402ac8:	lea    rcx,[rax-0x18]
  402acc:	call   0x402e00
  402ad1:	mov    rax,QWORD PTR [rsp+0x40]
  402ad6:	mov    rdx,rbx
  402ad9:	lea    rcx,[rax-0x18]
  402add:	call   0x402e00
  402ae2:	lea    rdx,[rip+0x5057]        # 0x407b40
  402ae9:	mov    rcx,rdi
  402aec:	mov    r8,r13
  402aef:	call   0x402dd0
  402af4:	mov    rdx,rdi
  402af7:	mov    rcx,rbx
  402afa:	call   0x401910
  402aff:	lea    rdx,[rip+0x5093]        # 0x407b99
  402b06:	mov    r8,r12
  402b09:	mov    rcx,rsi
  402b0c:	call   0x402dd0
  402b11:	lea    rcx,[rip+0x8548]        # 0x40b060
  402b18:	mov    rdx,rsi
  402b1b:	call   0x4045a0
  402b20:	mov    rdx,rbx
  402b23:	mov    rcx,rax
  402b26:	call   0x402df8
  402b2b:	mov    rax,QWORD PTR [rsp+0x30]
  402b30:	mov    rdx,rbp
  402b33:	lea    rcx,[rax-0x18]
  402b37:	call   0x402e00
  402b3c:	mov    rax,QWORD PTR [rsp+0x50]
  402b41:	mov    rdx,rsi
  402b44:	lea    rcx,[rax-0x18]
  402b48:	call   0x402e00
  402b4d:	mov    rax,QWORD PTR [rsp+0x40]
  402b52:	mov    rdx,rbx
  402b55:	lea    rcx,[rax-0x18]
  402b59:	call   0x402e00
  402b5e:	nop
  402b5f:	add    rsp,0x68
  402b63:	pop    rbx
  402b64:	pop    rsi
  402b65:	pop    rdi
  402b66:	pop    rbp
  402b67:	pop    r12
  402b69:	pop    r13
  402b6b:	ret    
  402b6c:	lea    rsi,[rsp+0x30]
  402b71:	mov    rbx,rax
  402b74:	mov    rax,QWORD PTR [rsp+0x50]
  402b79:	mov    rdx,rsi
  402b7c:	lea    rcx,[rax-0x18]
  402b80:	call   0x402e00
  402b85:	mov    rcx,rbx
  402b88:	call   0x4043b0
  402b8d:	mov    rbx,rax
  402b90:	mov    rax,QWORD PTR [rsp+0x30]
  402b95:	mov    rdx,rbp
  402b98:	lea    rcx,[rax-0x18]
  402b9c:	call   0x402e00
  402ba1:	mov    rax,QWORD PTR [rsp+0x50]
  402ba6:	mov    rdx,rbp
  402ba9:	lea    rcx,[rax-0x18]
  402bad:	call   0x402e00
  402bb2:	mov    rax,QWORD PTR [rsp+0x40]
  402bb7:	mov    rdx,rbp
  402bba:	lea    rcx,[rax-0x18]
  402bbe:	call   0x402e00
  402bc3:	mov    rcx,rbx
  402bc6:	call   0x4043b0
  402bcb:	mov    rbx,rax
  402bce:	jmp    0x402ba1
  402bd0:	mov    rbx,rax
  402bd3:	jmp    0x402bb2
  402bd5:	jmp    0x402b8d
  402bd7:	jmp    0x402bcb
  402bd9:	jmp    0x402bd0
  402bdb:	jmp    0x402b8d
  402bdd:	jmp    0x402bcb
  402bdf:	jmp    0x402bd0
  402be1:	jmp    0x402b8d
  402be3:	jmp    0x402bcb
  402be5:	jmp    0x402bd0
  402be7:	jmp    0x402b8d
  402be9:	jmp    0x402bcb
  402beb:	jmp    0x402bd0
  402bed:	jmp    0x402b8d
  402bef:	jmp    0x402bcb
  402bf1:	jmp    0x402bd0
  402bf3:	jmp    0x402b8d
  402bf5:	jmp    0x402bcb
  402bf7:	jmp    0x402bd0
  402bf9:	jmp    0x402b8d
  402bfb:	jmp    0x402bcb
  402bfd:	jmp    0x402bd0
  402bff:	jmp    0x402b8d
  402c01:	jmp    0x402bcb
  402c03:	jmp    0x402bd0
  402c05:	jmp    0x402b8d
  402c07:	jmp    0x402bcb
  402c09:	jmp    0x402bd0
  402c0b:	jmp    0x402b8d
  402c0d:	jmp    0x402bcb
  402c0f:	jmp    0x402bd0
  402c11:	jmp    0x402b8d
  402c16:	jmp    0x402bcb
  402c18:	jmp    0x402bd0
  402c1a:	jmp    0x402b8d
  402c1f:	jmp    0x402bcb
  402c21:	jmp    0x402bd0
  402c23:	jmp    0x402b8d
  402c28:	jmp    0x402bcb
  402c2a:	jmp    0x402bd0
  402c2c:	jmp    0x402b8d
  402c31:	jmp    0x402bcb
  402c33:	jmp    0x402bd0
  402c35:	jmp    0x402b8d
  402c3a:	jmp    0x402bcb
  402c3c:	jmp    0x402bd0
  402c3e:	jmp    0x402b8d
  402c43:	jmp    0x402bcb
  402c45:	jmp    0x402bd0
  402c47:	jmp    0x402b8d
  402c4c:	jmp    0x402bcb
  402c51:	jmp    0x402bd0
  402c56:	jmp    0x402b8d
  402c5b:	jmp    0x402bcb
  402c60:	jmp    0x402bd0
  402c65:	jmp    0x402b8d
  402c6a:	jmp    0x402bcb
  402c6f:	jmp    0x402bd0
  402c74:	jmp    0x402b8d
  402c79:	jmp    0x402bcb
  402c7e:	jmp    0x402bd0
  402c83:	jmp    0x402b8d
  402c88:	jmp    0x402bcb
  402c8d:	jmp    0x402bd0
  402c92:	jmp    0x402b8d
  402c97:	jmp    0x402bcb
  402c9c:	jmp    0x402bd0
  402ca1:	jmp    0x402b8d
  402ca6:	jmp    0x402bcb
  402cab:	jmp    0x402bd0
  402cb0:	jmp    0x402b8d
  402cb5:	jmp    0x402bcb
  402cba:	jmp    0x402bd0
  402cbf:	jmp    0x402b8d
  402cc4:	jmp    0x402bcb
  402cc9:	jmp    0x402bd0
  402cce:	jmp    0x402b8d
  402cd3:	jmp    0x402bcb
  402cd8:	jmp    0x402bd0
  402cdd:	jmp    0x402b8d
  402ce2:	jmp    0x402bcb
  402ce7:	jmp    0x402bd0
  402cec:	jmp    0x402b8d
  402cf1:	jmp    0x402bcb
  402cf6:	jmp    0x402bd0
  402cfb:	jmp    0x402b8d
  402d00:	jmp    0x402bcb
  402d05:	jmp    0x402bd0
  402d0a:	mov    rbx,rax
  402d0d:	mov    rax,QWORD PTR [rsp+0x50]
  402d12:	mov    rdx,rdi
  402d15:	lea    rcx,[rax-0x18]
  402d19:	call   0x402e00
  402d1e:	mov    rcx,rbx
  402d21:	call   0x4043b0
  402d26:	jmp    0x402d0a
  402d28:	jmp    0x402d0a
  402d2a:	jmp    0x402d0a
  402d2c:	jmp    0x402d0a
  402d2e:	jmp    0x402d0a
  402d30:	mov    rbx,rax
  402d33:	mov    rax,QWORD PTR [rsp+0x40]
  402d38:	lea    rsi,[rsp+0x30]
  402d3d:	mov    rdx,rsi
  402d40:	lea    rcx,[rax-0x18]
  402d44:	call   0x402e00
  402d49:	jmp    0x402b74
  402d4e:	nop
  402d4f:	nop
  402d50:	jmp    QWORD PTR [rip+0xa726]        # 0x40d47c
  402d56:	nop
  402d57:	nop
  402d58:	jmp    QWORD PTR [rip+0xa716]        # 0x40d474
  402d5e:	nop
  402d5f:	nop
  402d60:	jmp    QWORD PTR [rip+0xa706]        # 0x40d46c
  402d66:	nop
  402d67:	nop
  402d68:	jmp    QWORD PTR [rip+0xa6f6]        # 0x40d464
  402d6e:	nop
  402d6f:	nop
  402d70:	jmp    QWORD PTR [rip+0xa6e6]        # 0x40d45c
  402d76:	nop
  402d77:	nop
  402d78:	jmp    QWORD PTR [rip+0xa6d6]        # 0x40d454
  402d7e:	nop
  402d7f:	nop
  402d80:	jmp    QWORD PTR [rip+0xa6c6]        # 0x40d44c
  402d86:	nop
  402d87:	nop
  402d88:	jmp    QWORD PTR [rip+0xa6b6]        # 0x40d444
  402d8e:	nop
  402d8f:	nop
  402d90:	jmp    QWORD PTR [rip+0xa696]        # 0x40d42c
  402d96:	nop
  402d97:	nop
  402d98:	jmp    QWORD PTR [rip+0xa686]        # 0x40d424
  402d9e:	nop
  402d9f:	nop
  402da0:	jmp    QWORD PTR [rip+0xa676]        # 0x40d41c
  402da6:	nop
  402da7:	nop
  402da8:	jmp    QWORD PTR [rip+0xa666]        # 0x40d414
  402dae:	nop
  402daf:	nop
  402db0:	jmp    QWORD PTR [rip+0xa656]        # 0x40d40c
  402db6:	nop
  402db7:	nop
  402db8:	jmp    QWORD PTR [rip+0xa646]        # 0x40d404
  402dbe:	nop
  402dbf:	nop
  402dc0:	jmp    QWORD PTR [rip+0xa636]        # 0x40d3fc
  402dc6:	nop
  402dc7:	nop
  402dc8:	jmp    QWORD PTR [rip+0xa626]        # 0x40d3f4
  402dce:	nop
  402dcf:	nop
  402dd0:	jmp    QWORD PTR [rip+0xa616]        # 0x40d3ec
  402dd6:	nop
  402dd7:	nop
  402dd8:	jmp    QWORD PTR [rip+0xa606]        # 0x40d3e4
  402dde:	nop
  402ddf:	nop
  402de0:	jmp    QWORD PTR [rip+0xa5f6]        # 0x40d3dc
  402de6:	nop
  402de7:	nop
  402de8:	jmp    QWORD PTR [rip+0xa5e6]        # 0x40d3d4
  402dee:	nop
  402def:	nop
  402df0:	jmp    QWORD PTR [rip+0xa5d6]        # 0x40d3cc
  402df6:	nop
  402df7:	nop
  402df8:	jmp    QWORD PTR [rip+0xa5c6]        # 0x40d3c4
  402dfe:	nop
  402dff:	nop
  402e00:	jmp    QWORD PTR [rip+0xa5b6]        # 0x40d3bc
  402e06:	nop
  402e07:	nop
  402e08:	jmp    QWORD PTR [rip+0xa5a6]        # 0x40d3b4
  402e0e:	nop
  402e0f:	nop
  402e10:	jmp    QWORD PTR [rip+0xa596]        # 0x40d3ac
  402e16:	nop
  402e17:	nop
  402e18:	jmp    QWORD PTR [rip+0xa586]        # 0x40d3a4
  402e1e:	nop
  402e1f:	nop
  402e20:	jmp    QWORD PTR [rip+0xa576]        # 0x40d39c
  402e26:	nop
  402e27:	nop
  402e28:	jmp    QWORD PTR [rip+0xa566]        # 0x40d394
  402e2e:	nop
  402e2f:	nop
  402e30:	jmp    QWORD PTR [rip+0xa556]        # 0x40d38c
  402e36:	nop
  402e37:	nop
  402e38:	jmp    QWORD PTR [rip+0xa546]        # 0x40d384
  402e3e:	nop
  402e3f:	nop
  402e40:	jmp    QWORD PTR [rip+0xa536]        # 0x40d37c
  402e46:	nop
  402e47:	nop
  402e48:	jmp    QWORD PTR [rip+0xa526]        # 0x40d374
  402e4e:	nop
  402e4f:	nop
  402e50:	jmp    QWORD PTR [rip+0xa516]        # 0x40d36c
  402e56:	nop
  402e57:	nop
  402e58:	jmp    QWORD PTR [rip+0xa6f6]        # 0x40d554
  402e5e:	nop
  402e5f:	nop
  402e60:	jmp    QWORD PTR [rip+0xa6be]        # 0x40d524
  402e66:	nop
  402e67:	nop
  402e68:	jmp    QWORD PTR [rip+0xa6ae]        # 0x40d51c
  402e6e:	nop
  402e6f:	nop
  402e70:	jmp    QWORD PTR [rip+0xa656]        # 0x40d4cc
  402e76:	nop
  402e77:	nop
  402e78:	jmp    QWORD PTR [rip+0xa646]        # 0x40d4c4
  402e7e:	nop
  402e7f:	nop
  402e80:	jmp    QWORD PTR [rip+0xa636]        # 0x40d4bc
  402e86:	nop
  402e87:	nop
  402e88:	nop    DWORD PTR [rax+rax*1+0x0]
  402e90:	push   rbx
  402e91:	sub    rsp,0x30
  402e95:	mov    rbx,rcx
  402e98:	mov    rcx,QWORD PTR [rip+0x8bf1]        # 0x40ba90
  402e9f:	call   0x403440
  402ea4:	cmp    rax,0xffffffffffffffff
  402ea8:	mov    QWORD PTR [rsp+0x20],rax
  402ead:	je     0x402f25
  402eaf:	mov    ecx,0x8
  402eb4:	call   0x404480
  402eb9:	mov    rcx,QWORD PTR [rip+0x8bd0]        # 0x40ba90
  402ec0:	call   0x403440
  402ec5:	mov    rcx,QWORD PTR [rip+0x8bcc]        # 0x40ba98
  402ecc:	mov    QWORD PTR [rsp+0x20],rax
  402ed1:	call   0x403440
  402ed6:	lea    rdx,[rsp+0x20]
  402edb:	lea    r8,[rsp+0x28]
  402ee0:	mov    rcx,rbx
  402ee3:	mov    QWORD PTR [rsp+0x28],rax
  402ee8:	call   0x4044c8
  402eed:	mov    rcx,QWORD PTR [rsp+0x20]
  402ef2:	mov    rbx,rax
  402ef5:	call   0x403450
  402efa:	mov    rcx,QWORD PTR [rsp+0x28]
  402eff:	mov    QWORD PTR [rip+0x8b8a],rax        # 0x40ba90
  402f06:	call   0x403450
  402f0b:	mov    ecx,0x8
  402f10:	mov    QWORD PTR [rip+0x8b81],rax        # 0x40ba98
  402f17:	call   0x404470
  402f1c:	mov    rax,rbx
  402f1f:	add    rsp,0x30
  402f23:	pop    rbx
  402f24:	ret    
  402f25:	mov    rax,QWORD PTR [rip+0x5714]        # 0x408640
  402f2c:	mov    rcx,rbx
  402f2f:	call   QWORD PTR [rax]
  402f31:	add    rsp,0x30
  402f35:	pop    rbx
  402f36:	ret    
  402f37:	nop    WORD PTR [rax+rax*1+0x0]
  402f40:	sub    rsp,0x28
  402f44:	call   0x402e90
  402f49:	test   rax,rax
  402f4c:	sete   al
  402f4f:	movzx  eax,al
  402f52:	neg    eax
  402f54:	add    rsp,0x28
  402f58:	ret    
  402f59:	nop
  402f5a:	nop
  402f5b:	nop
  402f5c:	nop
  402f5d:	nop
  402f5e:	nop
  402f5f:	nop
  402f60:	sub    rsp,0x28
  402f64:	mov    rax,QWORD PTR [rip+0x30b5]        # 0x406020
  402f6b:	mov    rax,QWORD PTR [rax]
  402f6e:	test   rax,rax
  402f71:	je     0x402f90
  402f73:	call   rax
  402f75:	mov    rax,QWORD PTR [rip+0x30a4]        # 0x406020
  402f7c:	lea    rdx,[rax+0x8]
  402f80:	mov    rax,QWORD PTR [rax+0x8]
  402f84:	mov    QWORD PTR [rip+0x3095],rdx        # 0x406020
  402f8b:	test   rax,rax
  402f8e:	jne    0x402f73
  402f90:	add    rsp,0x28
  402f94:	ret    
  402f95:	nop
  402f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fa0:	push   rsi
  402fa1:	push   rbx
  402fa2:	sub    rsp,0x28
  402fa6:	mov    rsi,QWORD PTR [rip+0x5613]        # 0x4085c0
  402fad:	mov    rax,QWORD PTR [rsi]
  402fb0:	cmp    eax,0xffffffff
  402fb3:	mov    ebx,eax
  402fb5:	je     0x402fe0
  402fb7:	test   ebx,ebx
  402fb9:	je     0x402fca
  402fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  402fc0:	mov    eax,ebx
  402fc2:	call   QWORD PTR [rsi+rax*8]
  402fc5:	sub    ebx,0x1
  402fc8:	jne    0x402fc0
  402fca:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x402f60
  402fd1:	add    rsp,0x28
  402fd5:	pop    rbx
  402fd6:	pop    rsi
  402fd7:	jmp    0x402f40
  402fdc:	nop    DWORD PTR [rax+0x0]
  402fe0:	xor    ebx,ebx
  402fe2:	jmp    0x402fe6
  402fe4:	mov    ebx,eax
  402fe6:	lea    edx,[rbx+0x1]
  402fe9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  402fee:	mov    rax,rdx
  402ff1:	jne    0x402fe4
  402ff3:	jmp    0x402fb7
  402ff5:	nop
  402ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403000:	mov    eax,DWORD PTR [rip+0x809a]        # 0x40b0a0
  403006:	test   eax,eax
  403008:	je     0x403010
  40300a:	repz ret 
  40300c:	nop    DWORD PTR [rax+0x0]
  403010:	mov    DWORD PTR [rip+0x8086],0x1        # 0x40b0a0
  40301a:	jmp    0x402fa0
  40301c:	nop
  40301d:	nop
  40301e:	nop
  40301f:	nop
  403020:	mov    rax,QWORD PTR [rip+0xa55d]        # 0x40d584
  403027:	rex.W jmp rax
  40302a:	nop
  40302b:	nop
  40302c:	nop
  40302d:	nop
  40302e:	nop
  40302f:	nop
  403030:	xor    eax,eax
  403032:	ret    
  403033:	nop
  403034:	nop
  403035:	nop
  403036:	nop
  403037:	nop
  403038:	nop
  403039:	nop
  40303a:	nop
  40303b:	nop
  40303c:	nop
  40303d:	nop
  40303e:	nop
  40303f:	nop
  403040:	push   r12
  403042:	push   rbp
  403043:	push   rdi
  403044:	push   rsi
  403045:	push   rbx
  403046:	sub    rsp,0x40
  40304a:	mov    rbx,QWORD PTR [rip+0x302f]        # 0x406080
  403051:	movabs rax,0x2b992ddfa232
  40305b:	mov    QWORD PTR [rsp+0x20],0x0
  403064:	cmp    rbx,rax
  403067:	je     0x403080
  403069:	not    rbx
  40306c:	mov    QWORD PTR [rip+0x301d],rbx        # 0x406090
  403073:	add    rsp,0x40
  403077:	pop    rbx
  403078:	pop    rsi
  403079:	pop    rdi
  40307a:	pop    rbp
  40307b:	pop    r12
  40307d:	ret    
  40307e:	xchg   ax,ax
  403080:	lea    rcx,[rsp+0x20]
  403085:	call   QWORD PTR [rip+0xa449]        # 0x40d4d4
  40308b:	mov    r12,QWORD PTR [rsp+0x20]
  403090:	call   QWORD PTR [rip+0xa40e]        # 0x40d4a4
  403096:	mov    ebp,eax
  403098:	call   QWORD PTR [rip+0xa40e]        # 0x40d4ac
  40309e:	mov    edi,eax
  4030a0:	call   QWORD PTR [rip+0xa436]        # 0x40d4dc
  4030a6:	lea    rcx,[rsp+0x30]
  4030ab:	mov    esi,eax
  4030ad:	call   QWORD PTR [rip+0xa441]        # 0x40d4f4
  4030b3:	xor    r12,QWORD PTR [rsp+0x30]
  4030b8:	mov    edx,edi
  4030ba:	movabs rax,0xffffffffffff
  4030c4:	xor    rbp,r12
  4030c7:	mov    rdi,rbp
  4030ca:	xor    rdi,rdx
  4030cd:	mov    edx,esi
  4030cf:	xor    rdi,rdx
  4030d2:	mov    rsi,rdi
  4030d5:	and    rsi,rax
  4030d8:	cmp    rsi,rbx
  4030db:	je     0x403100
  4030dd:	mov    rax,rsi
  4030e0:	not    rax
  4030e3:	mov    QWORD PTR [rip+0x2f96],rsi        # 0x406080
  4030ea:	mov    QWORD PTR [rip+0x2f9f],rax        # 0x406090
  4030f1:	add    rsp,0x40
  4030f5:	pop    rbx
  4030f6:	pop    rsi
  4030f7:	pop    rdi
  4030f8:	pop    rbp
  4030f9:	pop    r12
  4030fb:	ret    
  4030fc:	nop    DWORD PTR [rax+0x0]
  403100:	movabs rax,0xffffd466d2205dcc
  40310a:	movabs rsi,0x2b992ddfa233
  403114:	jmp    0x4030e3
  403116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403120:	push   rbp
  403121:	push   rsi
  403122:	push   rbx
  403123:	mov    rbp,rsp
  403126:	sub    rsp,0x70
  40312a:	mov    rsi,rcx
  40312d:	lea    rcx,[rip+0x7fcc]        # 0x40b100
  403134:	call   QWORD PTR [rip+0xa3ca]        # 0x40d504
  40313a:	mov    rbx,QWORD PTR [rip+0x80b7]        # 0x40b1f8
  403141:	xor    r8d,r8d
  403144:	lea    rdx,[rbp-0x28]
  403148:	mov    rcx,rbx
  40314b:	call   QWORD PTR [rip+0xa3bb]        # 0x40d50c
  403151:	test   rax,rax
  403154:	mov    r9,rax
  403157:	je     0x403200
  40315d:	lea    rax,[rbp-0x20]
  403161:	mov    QWORD PTR [rsp+0x38],0x0
  40316a:	mov    r8,rbx
  40316d:	mov    rdx,QWORD PTR [rbp-0x28]
  403171:	xor    ecx,ecx
  403173:	mov    QWORD PTR [rsp+0x30],rax
  403178:	lea    rax,[rbp-0x18]
  40317c:	mov    QWORD PTR [rsp+0x28],rax
  403181:	lea    rax,[rip+0x7f78]        # 0x40b100
  403188:	mov    QWORD PTR [rsp+0x20],rax
  40318d:	call   QWORD PTR [rip+0xa381]        # 0x40d514
  403193:	mov    rax,QWORD PTR [rip+0x805e]        # 0x40b1f8
  40319a:	xor    ecx,ecx
  40319c:	mov    QWORD PTR [rip+0x7fdd],rsi        # 0x40b180
  4031a3:	mov    DWORD PTR [rip+0x8453],0xc0000409        # 0x40b600
  4031ad:	mov    DWORD PTR [rip+0x844d],0x1        # 0x40b604
  4031b7:	mov    QWORD PTR [rip+0x8452],rax        # 0x40b610
  4031be:	mov    rax,QWORD PTR [rip+0x2ebb]        # 0x406080
  4031c5:	mov    QWORD PTR [rbp-0x10],rax
  4031c9:	mov    rax,QWORD PTR [rip+0x2ec0]        # 0x406090
  4031d0:	mov    QWORD PTR [rbp-0x8],rax
  4031d4:	call   QWORD PTR [rip+0xa342]        # 0x40d51c
  4031da:	lea    rcx,[rip+0x510f]        # 0x4082f0
  4031e1:	call   QWORD PTR [rip+0xa355]        # 0x40d53c
  4031e7:	call   QWORD PTR [rip+0xa2af]        # 0x40d49c
  4031ed:	mov    edx,0xc0000409
  4031f2:	mov    rcx,rax
  4031f5:	call   QWORD PTR [rip+0xa331]        # 0x40d52c
  4031fb:	call   0x404468
  403200:	mov    rax,QWORD PTR [rbp+0x18]
  403204:	mov    QWORD PTR [rip+0x7fed],rax        # 0x40b1f8
  40320b:	lea    rax,[rbp+0x8]
  40320f:	mov    QWORD PTR [rip+0x7f82],rax        # 0x40b198
  403216:	jmp    0x403193
  40321b:	nop
  40321c:	nop
  40321d:	nop
  40321e:	nop
  40321f:	nop
  403220:	sub    rsp,0x28
  403224:	test   edx,edx
  403226:	je     0x403240
  403228:	cmp    edx,0x3
  40322b:	je     0x403240
  40322d:	mov    eax,0x1
  403232:	add    rsp,0x28
  403236:	ret    
  403237:	nop    WORD PTR [rax+rax*1+0x0]
  403240:	call   0x403f30
  403245:	mov    eax,0x1
  40324a:	add    rsp,0x28
  40324e:	ret    
  40324f:	nop
  403250:	push   rsi
  403251:	push   rbx
  403252:	sub    rsp,0x28
  403256:	mov    rax,QWORD PTR [rip+0x5323]        # 0x408580
  40325d:	cmp    DWORD PTR [rax],0x2
  403260:	je     0x403268
  403262:	mov    DWORD PTR [rax],0x2
  403268:	cmp    edx,0x2
  40326b:	je     0x403280
  40326d:	cmp    edx,0x1
  403270:	je     0x4032b2
  403272:	mov    eax,0x1
  403277:	add    rsp,0x28
  40327b:	pop    rbx
  40327c:	pop    rsi
  40327d:	ret    
  40327e:	xchg   ax,ax
  403280:	lea    rbx,[rip+0xadd9]        # 0x40e060
  403287:	lea    rsi,[rip+0xadd2]        # 0x40e060
  40328e:	cmp    rbx,rsi
  403291:	je     0x403272
  403293:	mov    rax,QWORD PTR [rbx]
  403296:	test   rax,rax
  403299:	je     0x40329d
  40329b:	call   rax
  40329d:	add    rbx,0x8
  4032a1:	cmp    rbx,rsi
  4032a4:	jne    0x403293
  4032a6:	mov    eax,0x1
  4032ab:	add    rsp,0x28
  4032af:	pop    rbx
  4032b0:	pop    rsi
  4032b1:	ret    
  4032b2:	call   0x403f30
  4032b7:	jmp    0x403272
  4032b9:	nop    DWORD PTR [rax+0x0]
  4032c0:	xor    eax,eax
  4032c2:	ret    
  4032c3:	nop
  4032c4:	nop
  4032c5:	nop
  4032c6:	nop
  4032c7:	nop
  4032c8:	nop
  4032c9:	nop
  4032ca:	nop
  4032cb:	nop
  4032cc:	nop
  4032cd:	nop
  4032ce:	nop
  4032cf:	nop
  4032d0:	sub    rsp,0x58
  4032d4:	mov    rax,QWORD PTR [rip+0x8405]        # 0x40b6e0
  4032db:	test   rax,rax
  4032de:	je     0x40330c
  4032e0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4032e9:	mov    DWORD PTR [rsp+0x20],ecx
  4032ed:	lea    rcx,[rsp+0x20]
  4032f2:	mov    QWORD PTR [rsp+0x28],rdx
  4032f7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4032fd:	movsd  QWORD PTR [rsp+0x38],xmm3
  403303:	movsd  QWORD PTR [rsp+0x40],xmm0
  403309:	call   rax
  40330b:	nop
  40330c:	add    rsp,0x58
  403310:	ret    
  403311:	nop    DWORD PTR [rax+rax*1+0x0]
  403316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403320:	mov    QWORD PTR [rip+0x83b9],rcx        # 0x40b6e0
  403327:	jmp    0x4044a0
  40332c:	nop    DWORD PTR [rax+0x0]
  403330:	push   rsi
  403331:	push   rbx
  403332:	sub    rsp,0x78
  403336:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40333b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  403340:	movaps XMMWORD PTR [rsp+0x60],xmm8
  403346:	cmp    DWORD PTR [rcx],0x6
  403349:	ja     0x403420
  40334f:	mov    edx,DWORD PTR [rcx]
  403351:	lea    rax,[rip+0x50dc]        # 0x408434
  403358:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40335c:	add    rax,rdx
  40335f:	jmp    rax
  403361:	lea    rbx,[rip+0x4fa8]        # 0x408310
  403368:	nop    DWORD PTR [rax+rax*1+0x0]
  403370:	movsd  xmm8,QWORD PTR [rcx+0x20]
  403376:	mov    rsi,QWORD PTR [rcx+0x8]
  40337a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40337f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  403384:	call   0x4044b8
  403389:	movsd  QWORD PTR [rsp+0x30],xmm8
  403390:	lea    rcx,[rax+0x60]
  403394:	lea    rdx,[rip+0x506d]        # 0x408408
  40339b:	movsd  QWORD PTR [rsp+0x28],xmm7
  4033a1:	mov    r9,rsi
  4033a4:	mov    r8,rbx
  4033a7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4033ad:	call   0x404450
  4033b2:	nop
  4033b3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4033b8:	xor    eax,eax
  4033ba:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4033bf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4033c5:	add    rsp,0x78
  4033c9:	pop    rbx
  4033ca:	pop    rsi
  4033cb:	ret    
  4033cc:	nop    DWORD PTR [rax+0x0]
  4033d0:	lea    rbx,[rip+0x4f58]        # 0x40832f
  4033d7:	jmp    0x403370
  4033d9:	nop    DWORD PTR [rax+0x0]
  4033e0:	lea    rbx,[rip+0x4f69]        # 0x408350
  4033e7:	jmp    0x403370
  4033e9:	nop    DWORD PTR [rax+0x0]
  4033f0:	lea    rbx,[rip+0x4fc9]        # 0x4083c0
  4033f7:	jmp    0x403370
  4033fc:	nop    DWORD PTR [rax+0x0]
  403400:	lea    rbx,[rip+0x4f91]        # 0x408398
  403407:	jmp    0x403370
  40340c:	nop    DWORD PTR [rax+0x0]
  403410:	lea    rbx,[rip+0x4f59]        # 0x408370
  403417:	jmp    0x403370
  40341c:	nop    DWORD PTR [rax+0x0]
  403420:	lea    rbx,[rip+0x4fcf]        # 0x4083f6
  403427:	jmp    0x403370
  40342c:	nop
  40342d:	nop
  40342e:	nop
  40342f:	nop
  403430:	fninit 
  403432:	ret    
  403433:	nop
  403434:	nop
  403435:	nop
  403436:	nop
  403437:	nop
  403438:	nop
  403439:	nop
  40343a:	nop
  40343b:	nop
  40343c:	nop
  40343d:	nop
  40343e:	nop
  40343f:	nop
  403440:	mov    rax,rcx
  403443:	ret    
  403444:	xchg   ax,ax
  403446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403450:	mov    rax,rcx
  403453:	ret    
  403454:	nop
  403455:	nop
  403456:	nop
  403457:	nop
  403458:	nop
  403459:	nop
  40345a:	nop
  40345b:	nop
  40345c:	nop
  40345d:	nop
  40345e:	nop
  40345f:	nop
  403460:	push   rsi
  403461:	push   rbx
  403462:	sub    rsp,0x38
  403466:	lea    rax,[rsp+0x58]
  40346b:	mov    rbx,rcx
  40346e:	mov    QWORD PTR [rsp+0x58],rdx
  403473:	mov    QWORD PTR [rsp+0x60],r8
  403478:	mov    QWORD PTR [rsp+0x68],r9
  40347d:	mov    QWORD PTR [rsp+0x28],rax
  403482:	call   0x4044b8
  403487:	lea    rcx,[rip+0x4fc2]        # 0x408450
  40348e:	lea    r9,[rax+0x60]
  403492:	mov    r8d,0x1b
  403498:	mov    edx,0x1
  40349d:	call   0x404440
  4034a2:	mov    rsi,QWORD PTR [rsp+0x28]
  4034a7:	call   0x4044b8
  4034ac:	lea    rcx,[rax+0x60]
  4034b0:	mov    rdx,rbx
  4034b3:	mov    r8,rsi
  4034b6:	call   0x404400
  4034bb:	call   0x404468
  4034c0:	nop
  4034c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4034c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034d0:	push   r13
  4034d2:	push   r12
  4034d4:	push   rbp
  4034d5:	push   rdi
  4034d6:	push   rsi
  4034d7:	push   rbx
  4034d8:	sub    rsp,0x58
  4034dc:	movsxd rbp,DWORD PTR [rip+0x8221]        # 0x40b704
  4034e3:	mov    rbx,rcx
  4034e6:	mov    rsi,rdx
  4034e9:	mov    rdi,r8
  4034ec:	test   ebp,ebp
  4034ee:	jle    0x4035ea
  4034f4:	mov    rax,QWORD PTR [rip+0x820d]        # 0x40b708
  4034fb:	xor    r9d,r9d
  4034fe:	add    rax,0x8
  403502:	mov    r10,QWORD PTR [rax]
  403505:	cmp    rbx,r10
  403508:	jb     0x40351e
  40350a:	mov    rdx,QWORD PTR [rax+0x8]
  40350e:	mov    r11d,DWORD PTR [rdx+0x8]
  403512:	add    r10,r11
  403515:	cmp    rbx,r10
  403518:	jb     0x4035d0
  40351e:	add    r9d,0x1
  403522:	add    rax,0x18
  403526:	cmp    r9d,ebp
  403529:	jne    0x403502
  40352b:	mov    rcx,rbx
  40352e:	call   0x404140
  403533:	test   rax,rax
  403536:	mov    r12,rax
  403539:	je     0x403622
  40353f:	lea    rbp,[rbp+rbp*2+0x0]
  403544:	shl    rbp,0x3
  403548:	mov    r13,rbp
  40354b:	add    r13,QWORD PTR [rip+0x81b6]        # 0x40b708
  403552:	mov    QWORD PTR [r13+0x10],rax
  403556:	mov    DWORD PTR [r13+0x0],0x0
  40355e:	call   0x404260
  403563:	mov    edx,DWORD PTR [r12+0xc]
  403568:	mov    r8d,0x30
  40356e:	add    rax,rdx
  403571:	lea    rdx,[rsp+0x20]
  403576:	mov    QWORD PTR [r13+0x8],rax
  40357a:	mov    rax,QWORD PTR [rip+0x8187]        # 0x40b708
  403581:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  403586:	call   QWORD PTR [rip+0x9fc0]        # 0x40d54c
  40358c:	test   rax,rax
  40358f:	je     0x403605
  403591:	mov    eax,DWORD PTR [rsp+0x44]
  403595:	lea    edx,[rax-0x4]
  403598:	and    edx,0xfffffffb
  40359b:	je     0x4035c9
  40359d:	sub    eax,0x40
  4035a0:	and    eax,0xffffffbf
  4035a3:	je     0x4035c9
  4035a5:	mov    r9,rbp
  4035a8:	add    r9,QWORD PTR [rip+0x8159]        # 0x40b708
  4035af:	mov    r8d,0x40
  4035b5:	mov    rdx,QWORD PTR [rsp+0x38]
  4035ba:	mov    rcx,QWORD PTR [rsp+0x20]
  4035bf:	call   QWORD PTR [rip+0x9f7f]        # 0x40d544
  4035c5:	test   eax,eax
  4035c7:	je     0x4035f1
  4035c9:	add    DWORD PTR [rip+0x8134],0x1        # 0x40b704
  4035d0:	mov    r8,rdi
  4035d3:	mov    rdx,rsi
  4035d6:	mov    rcx,rbx
  4035d9:	add    rsp,0x58
  4035dd:	pop    rbx
  4035de:	pop    rsi
  4035df:	pop    rdi
  4035e0:	pop    rbp
  4035e1:	pop    r12
  4035e3:	pop    r13
  4035e5:	jmp    0x404420
  4035ea:	xor    ebp,ebp
  4035ec:	jmp    0x40352b
  4035f1:	call   QWORD PTR [rip+0x9ebd]        # 0x40d4b4
  4035f7:	lea    rcx,[rip+0x4eca]        # 0x4084c8
  4035fe:	mov    edx,eax
  403600:	call   0x403460
  403605:	mov    rax,QWORD PTR [rip+0x80fc]        # 0x40b708
  40360c:	mov    edx,DWORD PTR [r12+0x8]
  403611:	lea    rcx,[rip+0x4e78]        # 0x408490
  403618:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40361d:	call   0x403460
  403622:	lea    rcx,[rip+0x4e47]        # 0x408470
  403629:	mov    rdx,rbx
  40362c:	call   0x403460
  403631:	nop
  403632:	nop    DWORD PTR [rax+0x0]
  403636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403640:	push   rbp
  403641:	push   r14
  403643:	push   r13
  403645:	push   r12
  403647:	push   rdi
  403648:	push   rsi
  403649:	push   rbx
  40364a:	mov    rbp,rsp
  40364d:	sub    rsp,0x60
  403651:	mov    ebx,DWORD PTR [rip+0x80a9]        # 0x40b700
  403657:	test   ebx,ebx
  403659:	je     0x403670
  40365b:	mov    rsp,rbp
  40365e:	pop    rbx
  40365f:	pop    rsi
  403660:	pop    rdi
  403661:	pop    r12
  403663:	pop    r13
  403665:	pop    r14
  403667:	pop    rbp
  403668:	ret    
  403669:	nop    DWORD PTR [rax+0x0]
  403670:	mov    DWORD PTR [rip+0x8086],0x1        # 0x40b700
  40367a:	call   0x404190
  40367f:	cdqe   
  403681:	lea    rax,[rax+rax*2]
  403685:	lea    rax,[rax*8+0x1e]
  40368d:	and    rax,0xfffffffffffffff0
  403691:	call   0x4043c0
  403696:	mov    rsi,QWORD PTR [rip+0x4f33]        # 0x4085d0
  40369d:	mov    rbx,QWORD PTR [rip+0x4f3c]        # 0x4085e0
  4036a4:	sub    rsp,rax
  4036a7:	mov    DWORD PTR [rip+0x8053],0x0        # 0x40b704
  4036b1:	lea    rax,[rsp+0x20]
  4036b6:	mov    QWORD PTR [rip+0x804b],rax        # 0x40b708
  4036bd:	mov    rax,rsi
  4036c0:	sub    rax,rbx
  4036c3:	cmp    rax,0x7
  4036c7:	jle    0x40365b
  4036c9:	cmp    rax,0xb
  4036cd:	jle    0x4036f5
  4036cf:	mov    r11d,DWORD PTR [rbx]
  4036d2:	test   r11d,r11d
  4036d5:	jne    0x403820
  4036db:	mov    r10d,DWORD PTR [rbx+0x4]
  4036df:	test   r10d,r10d
  4036e2:	jne    0x403820
  4036e8:	mov    r9d,DWORD PTR [rbx+0x8]
  4036ec:	test   r9d,r9d
  4036ef:	jne    0x40370c
  4036f1:	add    rbx,0xc
  4036f5:	mov    r8d,DWORD PTR [rbx]
  4036f8:	test   r8d,r8d
  4036fb:	jne    0x403820
  403701:	mov    ecx,DWORD PTR [rbx+0x4]
  403704:	test   ecx,ecx
  403706:	jne    0x403820
  40370c:	mov    edx,DWORD PTR [rbx+0x8]
  40370f:	cmp    edx,0x1
  403712:	jne    0x40392c
  403718:	add    rbx,0xc
  40371c:	cmp    rbx,rsi
  40371f:	jae    0x40365b
  403725:	mov    r12,QWORD PTR [rip+0x4ed4]        # 0x408600
  40372c:	lea    r13,[rbp-0x30]
  403730:	movabs r14,0xffffffff00000000
  40373a:	mov    ecx,DWORD PTR [rbx+0x4]
  40373d:	mov    eax,DWORD PTR [rbx]
  40373f:	movzx  edx,BYTE PTR [rbx+0x8]
  403743:	add    rax,r12
  403746:	add    rcx,r12
  403749:	cmp    edx,0x10
  40374c:	mov    r8,QWORD PTR [rax]
  40374f:	je     0x403896
  403755:	jbe    0x40385d
  40375b:	cmp    edx,0x20
  40375e:	je     0x4038df
  403764:	cmp    edx,0x40
  403767:	jne    0x4038cb
  40376d:	sub    r8,rax
  403770:	mov    rdx,r13
  403773:	mov    rdi,r13
  403776:	mov    rax,r8
  403779:	add    rax,QWORD PTR [rcx]
  40377c:	mov    r8d,0x8
  403782:	mov    QWORD PTR [rbp-0x30],rax
  403786:	call   0x4034d0
  40378b:	add    rbx,0xc
  40378f:	cmp    rbx,rsi
  403792:	jb     0x40373a
  403794:	mov    eax,DWORD PTR [rip+0x7f6a]        # 0x40b704
  40379a:	xor    ebx,ebx
  40379c:	xor    esi,esi
  40379e:	test   eax,eax
  4037a0:	jle    0x40365b
  4037a6:	mov    r14,QWORD PTR [rip+0x9d9f]        # 0x40d54c
  4037ad:	lea    r13,[rbp-0x34]
  4037b1:	mov    r12,QWORD PTR [rip+0x9d8c]        # 0x40d544
  4037b8:	jmp    0x4037d3
  4037ba:	nop    WORD PTR [rax+rax*1+0x0]
  4037c0:	add    esi,0x1
  4037c3:	add    rbx,0x18
  4037c7:	cmp    esi,DWORD PTR [rip+0x7f37]        # 0x40b704
  4037cd:	jge    0x40365b
  4037d3:	mov    rax,rbx
  4037d6:	add    rax,QWORD PTR [rip+0x7f2b]        # 0x40b708
  4037dd:	mov    edx,DWORD PTR [rax]
  4037df:	test   edx,edx
  4037e1:	je     0x4037c0
  4037e3:	mov    rcx,QWORD PTR [rax+0x8]
  4037e7:	mov    r8d,0x30
  4037ed:	mov    rdx,rdi
  4037f0:	call   r14
  4037f3:	test   rax,rax
  4037f6:	je     0x40390e
  4037fc:	mov    rax,QWORD PTR [rip+0x7f05]        # 0x40b708
  403803:	mov    r9,r13
  403806:	mov    rdx,QWORD PTR [rbp-0x18]
  40380a:	mov    rcx,QWORD PTR [rbp-0x30]
  40380e:	mov    r8d,DWORD PTR [rax+rbx*1]
  403812:	call   r12
  403815:	jmp    0x4037c0
  403817:	nop    WORD PTR [rax+rax*1+0x0]
  403820:	cmp    rbx,rsi
  403823:	jae    0x40365b
  403829:	mov    r12,QWORD PTR [rip+0x4dd0]        # 0x408600
  403830:	lea    rdi,[rbp-0x30]
  403834:	mov    ecx,DWORD PTR [rbx+0x4]
  403837:	mov    eax,DWORD PTR [rbx]
  403839:	mov    r8d,0x4
  40383f:	mov    rdx,rdi
  403842:	add    rbx,0x8
  403846:	add    rcx,r12
  403849:	add    eax,DWORD PTR [rcx]
  40384b:	mov    DWORD PTR [rbp-0x30],eax
  40384e:	call   0x4034d0
  403853:	cmp    rbx,rsi
  403856:	jb     0x403834
  403858:	jmp    0x403794
  40385d:	cmp    edx,0x8
  403860:	jne    0x4038cb
  403862:	movzx  edx,BYTE PTR [rcx]
  403865:	mov    rdi,r13
  403868:	mov    r10,rdx
  40386b:	or     r10,0xffffffffffffff00
  403872:	test   dl,dl
  403874:	cmovs  rdx,r10
  403878:	sub    rdx,rax
  40387b:	lea    rax,[r8+rdx*1]
  40387f:	mov    r8d,0x1
  403885:	mov    rdx,r13
  403888:	mov    QWORD PTR [rbp-0x30],rax
  40388c:	call   0x4034d0
  403891:	jmp    0x40378b
  403896:	movzx  edx,WORD PTR [rcx]
  403899:	mov    rdi,r13
  40389c:	mov    r10,rdx
  40389f:	or     r10,0xffffffffffff0000
  4038a6:	test   dx,dx
  4038a9:	cmovs  rdx,r10
  4038ad:	sub    rdx,rax
  4038b0:	lea    rax,[r8+rdx*1]
  4038b4:	mov    r8d,0x2
  4038ba:	mov    rdx,r13
  4038bd:	mov    QWORD PTR [rbp-0x30],rax
  4038c1:	call   0x4034d0
  4038c6:	jmp    0x40378b
  4038cb:	lea    rcx,[rip+0x4c56]        # 0x408528
  4038d2:	mov    QWORD PTR [rbp-0x30],0x0
  4038da:	call   0x403460
  4038df:	mov    edx,DWORD PTR [rcx]
  4038e1:	mov    rdi,r13
  4038e4:	mov    r10,rdx
  4038e7:	or     r10,r14
  4038ea:	test   edx,edx
  4038ec:	cmovs  rdx,r10
  4038f0:	sub    rdx,rax
  4038f3:	lea    rax,[r8+rdx*1]
  4038f7:	mov    r8d,0x4
  4038fd:	mov    rdx,r13
  403900:	mov    QWORD PTR [rbp-0x30],rax
  403904:	call   0x4034d0
  403909:	jmp    0x40378b
  40390e:	add    rbx,QWORD PTR [rip+0x7df3]        # 0x40b708
  403915:	lea    rcx,[rip+0x4b74]        # 0x408490
  40391c:	mov    rax,QWORD PTR [rbx+0x10]
  403920:	mov    r8,QWORD PTR [rbx+0x8]
  403924:	mov    edx,DWORD PTR [rax+0x8]
  403927:	call   0x403460
  40392c:	lea    rcx,[rip+0x4bbd]        # 0x4084f0
  403933:	call   0x403460
  403938:	nop
  403939:	nop
  40393a:	nop
  40393b:	nop
  40393c:	nop
  40393d:	nop
  40393e:	nop
  40393f:	nop
  403940:	sub    rsp,0x28
  403944:	mov    eax,DWORD PTR [rcx]
  403946:	cmp    eax,0xc0000091
  40394b:	ja     0x4039b0
  40394d:	cmp    eax,0xc000008d
  403952:	jae    0x4039cf
  403954:	cmp    eax,0xc0000008
  403959:	je     0x403a70
  40395f:	ja     0x403a40
  403965:	cmp    eax,0x80000002
  40396a:	je     0x403a70
  403970:	cmp    eax,0xc0000005
  403975:	jne    0x403a4e
  40397b:	xor    edx,edx
  40397d:	mov    ecx,0xb
  403982:	call   0x404418
  403987:	cmp    rax,0x1
  40398b:	je     0x403ad0
  403991:	test   rax,rax
  403994:	je     0x403ab0
  40399a:	mov    ecx,0xb
  40399f:	call   rax
  4039a1:	xor    eax,eax
  4039a3:	add    rsp,0x28
  4039a7:	ret    
  4039a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4039b0:	cmp    eax,0xc0000094
  4039b5:	je     0x403a80
  4039bb:	ja     0x403a00
  4039bd:	cmp    eax,0xc0000092
  4039c2:	je     0x403a70
  4039c8:	cmp    eax,0xc0000093
  4039cd:	jne    0x403a4e
  4039cf:	xor    edx,edx
  4039d1:	mov    ecx,0x8
  4039d6:	call   0x404418
  4039db:	cmp    rax,0x1
  4039df:	mov    rdx,rax
  4039e2:	je     0x403a58
  4039e4:	test   rdx,rdx
  4039e7:	mov    eax,0x1
  4039ec:	je     0x4039a3
  4039ee:	mov    ecx,0x8
  4039f3:	call   rdx
  4039f5:	xor    eax,eax
  4039f7:	add    rsp,0x28
  4039fb:	ret    
  4039fc:	nop    DWORD PTR [rax+0x0]
  403a00:	cmp    eax,0xc0000095
  403a05:	je     0x403a70
  403a07:	cmp    eax,0xc0000096
  403a0c:	jne    0x403a4e
  403a0e:	xor    edx,edx
  403a10:	mov    ecx,0x4
  403a15:	call   0x404418
  403a1a:	cmp    rax,0x1
  403a1e:	je     0x403aba
  403a24:	test   rax,rax
  403a27:	je     0x403ab0
  403a2d:	mov    ecx,0x4
  403a32:	call   rax
  403a34:	xor    eax,eax
  403a36:	jmp    0x4039a3
  403a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a40:	cmp    eax,0xc000001d
  403a45:	je     0x403a0e
  403a47:	cmp    eax,0xc000008c
  403a4c:	je     0x403a70
  403a4e:	mov    eax,0x1
  403a53:	add    rsp,0x28
  403a57:	ret    
  403a58:	mov    edx,0x1
  403a5d:	mov    ecx,0x8
  403a62:	call   0x404418
  403a67:	call   0x403430
  403a6c:	nop    DWORD PTR [rax+0x0]
  403a70:	xor    eax,eax
  403a72:	add    rsp,0x28
  403a76:	ret    
  403a77:	nop    WORD PTR [rax+rax*1+0x0]
  403a80:	xor    edx,edx
  403a82:	mov    ecx,0x8
  403a87:	call   0x404418
  403a8c:	cmp    rax,0x1
  403a90:	mov    rdx,rax
  403a93:	jne    0x4039e4
  403a99:	mov    edx,0x1
  403a9e:	mov    ecx,0x8
  403aa3:	call   0x404418
  403aa8:	xor    eax,eax
  403aaa:	jmp    0x4039a3
  403aaf:	nop
  403ab0:	mov    eax,0x4
  403ab5:	add    rsp,0x28
  403ab9:	ret    
  403aba:	mov    edx,0x1
  403abf:	mov    ecx,0x4
  403ac4:	call   0x404418
  403ac9:	xor    eax,eax
  403acb:	jmp    0x4039a3
  403ad0:	mov    edx,0x1
  403ad5:	mov    ecx,0xb
  403ada:	call   0x404418
  403adf:	xor    eax,eax
  403ae1:	jmp    0x4039a3
  403ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403af0:	push   r12
  403af2:	push   rbp
  403af3:	push   rdi
  403af4:	push   rsi
  403af5:	push   rbx
  403af6:	sub    rsp,0x20
  403afa:	call   0x404260
  403aff:	mov    rbp,rax
  403b02:	mov    eax,DWORD PTR [rip+0x7c40]        # 0x40b748
  403b08:	test   eax,eax
  403b0a:	jne    0x403b31
  403b0c:	test   rbp,rbp
  403b0f:	je     0x403b31
  403b11:	lea    rcx,[rip+0x4a48]        # 0x408560
  403b18:	mov    DWORD PTR [rip+0x7c26],0x1        # 0x40b748
  403b22:	call   0x4040a0
  403b27:	test   rax,rax
  403b2a:	je     0x403b40
  403b2c:	mov    eax,0x1
  403b31:	add    rsp,0x20
  403b35:	pop    rbx
  403b36:	pop    rsi
  403b37:	pop    rdi
  403b38:	pop    rbp
  403b39:	pop    r12
  403b3b:	ret    
  403b3c:	nop    DWORD PTR [rax+0x0]
  403b40:	lea    rbx,[rip+0x7d39]        # 0x40b880
  403b47:	mov    ecx,0x30
  403b4c:	lea    rdx,[rip+0x7c2d]        # 0x40b780
  403b53:	lea    r12,[rip+0xfffffffffffffde6]        # 0x403940
  403b5a:	xor    esi,esi
  403b5c:	mov    rdi,rbx
  403b5f:	rep stos QWORD PTR es:[rdi],rax
  403b62:	mov    rdi,rdx
  403b65:	sub    r12,rbp
  403b68:	mov    cl,0x20
  403b6a:	rep stos QWORD PTR es:[rdi],rax
  403b6d:	mov    rdi,rdx
  403b70:	jmp    0x403ba0
  403b72:	mov    BYTE PTR [rdi],0x9
  403b75:	mov    DWORD PTR [rdi+0x4],r12d
  403b79:	add    rsi,0x1
  403b7d:	mov    edx,DWORD PTR [rax+0xc]
  403b80:	add    rbx,0xc
  403b84:	mov    DWORD PTR [rbx-0xc],edx
  403b87:	add    edx,DWORD PTR [rax+0x8]
  403b8a:	mov    rax,rdi
  403b8d:	sub    rax,rbp
  403b90:	add    rdi,0x8
  403b94:	mov    DWORD PTR [rbx-0x4],eax
  403b97:	mov    DWORD PTR [rbx-0x8],edx
  403b9a:	cmp    rsi,0x20
  403b9e:	je     0x403bd5
  403ba0:	mov    rcx,rsi
  403ba3:	call   0x4041d0
  403ba8:	test   rax,rax
  403bab:	jne    0x403b72
  403bad:	test   rsi,rsi
  403bb0:	je     0x403b2c
  403bb6:	mov    edx,esi
  403bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  403bc0:	mov    r8,rbp
  403bc3:	lea    rcx,[rip+0x7cb6]        # 0x40b880
  403bca:	call   QWORD PTR [rip+0x992c]        # 0x40d4fc
  403bd0:	jmp    0x403b2c
  403bd5:	mov    edx,0x20
  403bda:	jmp    0x403bc0
  403bdc:	nop    DWORD PTR [rax+0x0]
  403be0:	push   rbx
  403be1:	sub    rsp,0x20
  403be5:	mov    rdx,QWORD PTR [rcx]
  403be8:	mov    eax,DWORD PTR [rdx]
  403bea:	mov    r8d,eax
  403bed:	and    r8d,0x20ffffff
  403bf4:	cmp    r8d,0x20474343
  403bfb:	je     0x403d00
  403c01:	cmp    eax,0xc0000091
  403c06:	mov    rbx,rcx
  403c09:	ja     0x403c90
  403c0f:	cmp    eax,0xc000008d
  403c14:	jae    0x403ca7
  403c1a:	cmp    eax,0xc0000008
  403c1f:	je     0x403c53
  403c21:	ja     0x403c60
  403c23:	cmp    eax,0x80000002
  403c28:	je     0x403c53
  403c2a:	cmp    eax,0xc0000005
  403c2f:	jne    0x403c72
  403c31:	xor    edx,edx
  403c33:	mov    ecx,0xb
  403c38:	call   0x404418
  403c3d:	cmp    rax,0x1
  403c41:	je     0x403d70
  403c47:	test   rax,rax
  403c4a:	je     0x403c72
  403c4c:	mov    ecx,0xb
  403c51:	call   rax
  403c53:	mov    eax,0xffffffff
  403c58:	add    rsp,0x20
  403c5c:	pop    rbx
  403c5d:	ret    
  403c5e:	xchg   ax,ax
  403c60:	cmp    eax,0xc000001d
  403c65:	je     0x403d26
  403c6b:	cmp    eax,0xc000008c
  403c70:	je     0x403c53
  403c72:	mov    rax,QWORD PTR [rip+0x7ac7]        # 0x40b740
  403c79:	test   rax,rax
  403c7c:	je     0x403c58
  403c7e:	mov    rcx,rbx
  403c81:	add    rsp,0x20
  403c85:	pop    rbx
  403c86:	rex.W jmp rax
  403c89:	nop    DWORD PTR [rax+0x0]
  403c90:	cmp    eax,0xc0000094
  403c95:	je     0x403cd2
  403c97:	ja     0x403d10
  403c99:	cmp    eax,0xc0000092
  403c9e:	je     0x403c53
  403ca0:	cmp    eax,0xc0000093
  403ca5:	jne    0x403c72
  403ca7:	xor    edx,edx
  403ca9:	mov    ecx,0x8
  403cae:	call   0x404418
  403cb3:	cmp    rax,0x1
  403cb7:	jne    0x403ce4
  403cb9:	mov    edx,0x1
  403cbe:	mov    ecx,0x8
  403cc3:	call   0x404418
  403cc8:	call   0x403430
  403ccd:	jmp    0x403c53
  403cd2:	xor    edx,edx
  403cd4:	mov    ecx,0x8
  403cd9:	call   0x404418
  403cde:	cmp    rax,0x1
  403ce2:	je     0x403d52
  403ce4:	test   rax,rax
  403ce7:	je     0x403c72
  403ce9:	mov    ecx,0x8
  403cee:	call   rax
  403cf0:	mov    eax,0xffffffff
  403cf5:	jmp    0x403c58
  403cfa:	nop    WORD PTR [rax+rax*1+0x0]
  403d00:	test   BYTE PTR [rdx+0x4],0x1
  403d04:	jne    0x403c01
  403d0a:	jmp    0x403c53
  403d0f:	nop
  403d10:	cmp    eax,0xc0000095
  403d15:	je     0x403c53
  403d1b:	cmp    eax,0xc0000096
  403d20:	jne    0x403c72
  403d26:	xor    edx,edx
  403d28:	mov    ecx,0x4
  403d2d:	call   0x404418
  403d32:	cmp    rax,0x1
  403d36:	je     0x403d84
  403d38:	test   rax,rax
  403d3b:	je     0x403c72
  403d41:	mov    ecx,0x4
  403d46:	call   rax
  403d48:	mov    eax,0xffffffff
  403d4d:	jmp    0x403c58
  403d52:	mov    edx,0x1
  403d57:	mov    ecx,0x8
  403d5c:	call   0x404418
  403d61:	jmp    0x403c53
  403d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d70:	mov    edx,0x1
  403d75:	mov    ecx,0xb
  403d7a:	call   0x404418
  403d7f:	jmp    0x403c53
  403d84:	mov    edx,0x1
  403d89:	mov    ecx,0x4
  403d8e:	call   0x404418
  403d93:	jmp    0x403c53
  403d98:	nop
  403d99:	nop
  403d9a:	nop
  403d9b:	nop
  403d9c:	nop
  403d9d:	nop
  403d9e:	nop
  403d9f:	nop
  403da0:	push   rbp
  403da1:	push   rdi
  403da2:	push   rsi
  403da3:	push   rbx
  403da4:	sub    rsp,0x28
  403da8:	lea    rcx,[rip+0x7c71]        # 0x40ba20
  403daf:	call   QWORD PTR [rip+0x96df]        # 0x40d494
  403db5:	mov    rbx,QWORD PTR [rip+0x7c44]        # 0x40ba00
  403dbc:	test   rbx,rbx
  403dbf:	je     0x403df4
  403dc1:	mov    rbp,QWORD PTR [rip+0x976c]        # 0x40d534
  403dc8:	mov    rdi,QWORD PTR [rip+0x96e5]        # 0x40d4b4
  403dcf:	nop
  403dd0:	mov    ecx,DWORD PTR [rbx]
  403dd2:	call   rbp
  403dd4:	mov    rsi,rax
  403dd7:	call   rdi
  403dd9:	test   eax,eax
  403ddb:	jne    0x403deb
  403ddd:	test   rsi,rsi
  403de0:	je     0x403deb
  403de2:	mov    rax,QWORD PTR [rbx+0x8]
  403de6:	mov    rcx,rsi
  403de9:	call   rax
  403deb:	mov    rbx,QWORD PTR [rbx+0x10]
  403def:	test   rbx,rbx
  403df2:	jne    0x403dd0
  403df4:	mov    rax,QWORD PTR [rip+0x96f1]        # 0x40d4ec
  403dfb:	lea    rcx,[rip+0x7c1e]        # 0x40ba20
  403e02:	add    rsp,0x28
  403e06:	pop    rbx
  403e07:	pop    rsi
  403e08:	pop    rdi
  403e09:	pop    rbp
  403e0a:	rex.W jmp rax
  403e0d:	nop    DWORD PTR [rax]
  403e10:	push   rdi
  403e11:	push   rsi
  403e12:	push   rbx
  403e13:	sub    rsp,0x20
  403e17:	mov    eax,DWORD PTR [rip+0x7beb]        # 0x40ba08
  403e1d:	test   eax,eax
  403e1f:	jne    0x403e30
  403e21:	add    rsp,0x20
  403e25:	pop    rbx
  403e26:	pop    rsi
  403e27:	pop    rdi
  403e28:	ret    
  403e29:	nop    DWORD PTR [rax+0x0]
  403e30:	mov    rsi,rdx
  403e33:	mov    edi,ecx
  403e35:	mov    edx,0x18
  403e3a:	mov    ecx,0x1
  403e3f:	call   0x404460
  403e44:	test   rax,rax
  403e47:	mov    rbx,rax
  403e4a:	je     0x403e88
  403e4c:	mov    DWORD PTR [rax],edi
  403e4e:	mov    QWORD PTR [rax+0x8],rsi
  403e52:	lea    rcx,[rip+0x7bc7]        # 0x40ba20
  403e59:	call   QWORD PTR [rip+0x9635]        # 0x40d494
  403e5f:	mov    rax,QWORD PTR [rip+0x7b9a]        # 0x40ba00
  403e66:	lea    rcx,[rip+0x7bb3]        # 0x40ba20
  403e6d:	mov    QWORD PTR [rip+0x7b8c],rbx        # 0x40ba00
  403e74:	mov    QWORD PTR [rbx+0x10],rax
  403e78:	call   QWORD PTR [rip+0x966e]        # 0x40d4ec
  403e7e:	xor    eax,eax
  403e80:	add    rsp,0x20
  403e84:	pop    rbx
  403e85:	pop    rsi
  403e86:	pop    rdi
  403e87:	ret    
  403e88:	mov    eax,0xffffffff
  403e8d:	jmp    0x403e21
  403e8f:	nop
  403e90:	push   rbx
  403e91:	sub    rsp,0x20
  403e95:	mov    eax,DWORD PTR [rip+0x7b6d]        # 0x40ba08
  403e9b:	test   eax,eax
  403e9d:	jne    0x403eb0
  403e9f:	xor    eax,eax
  403ea1:	add    rsp,0x20
  403ea5:	pop    rbx
  403ea6:	ret    
  403ea7:	nop    WORD PTR [rax+rax*1+0x0]
  403eb0:	mov    ebx,ecx
  403eb2:	lea    rcx,[rip+0x7b67]        # 0x40ba20
  403eb9:	call   QWORD PTR [rip+0x95d5]        # 0x40d494
  403ebf:	mov    rdx,QWORD PTR [rip+0x7b3a]        # 0x40ba00
  403ec6:	test   rdx,rdx
  403ec9:	je     0x403ee7
  403ecb:	mov    eax,DWORD PTR [rdx]
  403ecd:	cmp    eax,ebx
  403ecf:	jne    0x403ede
  403ed1:	jmp    0x403f1f
  403ed3:	mov    r8d,DWORD PTR [rax]
  403ed6:	cmp    r8d,ebx
  403ed9:	je     0x403f00
  403edb:	mov    rdx,rax
  403ede:	mov    rax,QWORD PTR [rdx+0x10]
  403ee2:	test   rax,rax
  403ee5:	jne    0x403ed3
  403ee7:	lea    rcx,[rip+0x7b32]        # 0x40ba20
  403eee:	call   QWORD PTR [rip+0x95f8]        # 0x40d4ec
  403ef4:	xor    eax,eax
  403ef6:	add    rsp,0x20
  403efa:	pop    rbx
  403efb:	ret    
  403efc:	nop    DWORD PTR [rax+0x0]
  403f00:	mov    rcx,rax
  403f03:	mov    rax,QWORD PTR [rax+0x10]
  403f07:	mov    QWORD PTR [rdx+0x10],rax
  403f0b:	call   0x404448
  403f10:	lea    rcx,[rip+0x7b09]        # 0x40ba20
  403f17:	call   QWORD PTR [rip+0x95cf]        # 0x40d4ec
  403f1d:	jmp    0x403ef4
  403f1f:	mov    rax,QWORD PTR [rdx+0x10]
  403f23:	mov    rcx,rdx
  403f26:	mov    QWORD PTR [rip+0x7ad3],rax        # 0x40ba00
  403f2d:	jmp    0x403f0b
  403f2f:	nop
  403f30:	push   rbx
  403f31:	sub    rsp,0x20
  403f35:	cmp    edx,0x1
  403f38:	je     0x403fd0
  403f3e:	jb     0x403f70
  403f40:	cmp    edx,0x2
  403f43:	je     0x403f60
  403f45:	cmp    edx,0x3
  403f48:	jne    0x403f65
  403f4a:	mov    eax,DWORD PTR [rip+0x7ab8]        # 0x40ba08
  403f50:	test   eax,eax
  403f52:	je     0x403f65
  403f54:	call   0x403da0
  403f59:	jmp    0x403f65
  403f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  403f60:	call   0x403430
  403f65:	mov    eax,0x1
  403f6a:	add    rsp,0x20
  403f6e:	pop    rbx
  403f6f:	ret    
  403f70:	mov    eax,DWORD PTR [rip+0x7a92]        # 0x40ba08
  403f76:	test   eax,eax
  403f78:	jne    0x404000
  403f7e:	mov    eax,DWORD PTR [rip+0x7a84]        # 0x40ba08
  403f84:	cmp    eax,0x1
  403f87:	jne    0x403f65
  403f89:	mov    rcx,QWORD PTR [rip+0x7a70]        # 0x40ba00
  403f90:	test   rcx,rcx
  403f93:	je     0x403fa6
  403f95:	mov    rbx,QWORD PTR [rcx+0x10]
  403f99:	call   0x404448
  403f9e:	test   rbx,rbx
  403fa1:	mov    rcx,rbx
  403fa4:	jne    0x403f95
  403fa6:	lea    rcx,[rip+0x7a73]        # 0x40ba20
  403fad:	mov    QWORD PTR [rip+0x7a48],0x0        # 0x40ba00
  403fb8:	mov    DWORD PTR [rip+0x7a46],0x0        # 0x40ba08
  403fc2:	call   QWORD PTR [rip+0x94c4]        # 0x40d48c
  403fc8:	jmp    0x403f65
  403fca:	nop    WORD PTR [rax+rax*1+0x0]
  403fd0:	mov    eax,DWORD PTR [rip+0x7a32]        # 0x40ba08
  403fd6:	test   eax,eax
  403fd8:	je     0x403ff0
  403fda:	mov    eax,0x1
  403fdf:	mov    DWORD PTR [rip+0x7a1f],0x1        # 0x40ba08
  403fe9:	add    rsp,0x20
  403fed:	pop    rbx
  403fee:	ret    
  403fef:	nop
  403ff0:	lea    rcx,[rip+0x7a29]        # 0x40ba20
  403ff7:	call   QWORD PTR [rip+0x94e7]        # 0x40d4e4
  403ffd:	jmp    0x403fda
  403fff:	nop
  404000:	call   0x403da0
  404005:	jmp    0x403f7e
  40400a:	nop
  40400b:	nop
  40400c:	nop
  40400d:	nop
  40400e:	nop
  40400f:	nop
  404010:	movsxd rax,DWORD PTR [rcx+0x3c]
  404014:	add    rcx,rax
  404017:	xor    eax,eax
  404019:	cmp    DWORD PTR [rcx],0x4550
  40401f:	je     0x404023
  404021:	repz ret 
  404023:	xor    eax,eax
  404025:	cmp    WORD PTR [rcx+0x18],0x20b
  40402b:	sete   al
  40402e:	ret    
  40402f:	nop
  404030:	cmp    WORD PTR [rcx],0x5a4d
  404035:	je     0x404040
  404037:	xor    eax,eax
  404039:	ret    
  40403a:	nop    WORD PTR [rax+rax*1+0x0]
  404040:	jmp    0x404010
  404042:	nop    DWORD PTR [rax+0x0]
  404046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404050:	movsxd rax,DWORD PTR [rcx+0x3c]
  404054:	add    rcx,rax
  404057:	movzx  eax,WORD PTR [rcx+0x14]
  40405b:	lea    rax,[rcx+rax*1+0x18]
  404060:	movzx  ecx,WORD PTR [rcx+0x6]
  404064:	test   ecx,ecx
  404066:	je     0x404091
  404068:	sub    ecx,0x1
  40406b:	lea    rcx,[rcx+rcx*4]
  40406f:	lea    r9,[rax+rcx*8+0x28]
  404074:	mov    r8d,DWORD PTR [rax+0xc]
  404078:	cmp    r8,rdx
  40407b:	mov    rcx,r8
  40407e:	ja     0x404088
  404080:	add    ecx,DWORD PTR [rax+0x8]
  404083:	cmp    rdx,rcx
  404086:	jb     0x404093
  404088:	add    rax,0x28
  40408c:	cmp    rax,r9
  40408f:	jne    0x404074
  404091:	xor    eax,eax
  404093:	repz ret 
  404095:	nop
  404096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040a0:	push   rdi
  4040a1:	push   rsi
  4040a2:	push   rbx
  4040a3:	sub    rsp,0x20
  4040a7:	mov    rsi,rcx
  4040aa:	call   0x404410
  4040af:	cmp    rax,0x8
  4040b3:	ja     0x4040d0
  4040b5:	mov    rbx,QWORD PTR [rip+0x4544]        # 0x408600
  4040bc:	xor    edi,edi
  4040be:	cmp    WORD PTR [rbx],0x5a4d
  4040c3:	je     0x4040e0
  4040c5:	mov    rax,rdi
  4040c8:	add    rsp,0x20
  4040cc:	pop    rbx
  4040cd:	pop    rsi
  4040ce:	pop    rdi
  4040cf:	ret    
  4040d0:	xor    edi,edi
  4040d2:	mov    rax,rdi
  4040d5:	add    rsp,0x20
  4040d9:	pop    rbx
  4040da:	pop    rsi
  4040db:	pop    rdi
  4040dc:	ret    
  4040dd:	nop    DWORD PTR [rax]
  4040e0:	mov    rcx,rbx
  4040e3:	call   0x404010
  4040e8:	test   eax,eax
  4040ea:	je     0x4040c5
  4040ec:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4040f0:	add    rdx,rbx
  4040f3:	movzx  eax,WORD PTR [rdx+0x14]
  4040f7:	lea    rbx,[rdx+rax*1+0x18]
  4040fc:	movzx  eax,WORD PTR [rdx+0x6]
  404100:	test   eax,eax
  404102:	je     0x4040c5
  404104:	sub    eax,0x1
  404107:	lea    rax,[rax+rax*4]
  40410b:	lea    rdi,[rbx+rax*8+0x28]
  404110:	jmp    0x40411b
  404112:	add    rbx,0x28
  404116:	cmp    rbx,rdi
  404119:	je     0x4040d0
  40411b:	mov    r8d,0x8
  404121:	mov    rdx,rsi
  404124:	mov    rcx,rbx
  404127:	call   0x404408
  40412c:	test   eax,eax
  40412e:	jne    0x404112
  404130:	mov    rdi,rbx
  404133:	mov    rax,rdi
  404136:	add    rsp,0x20
  40413a:	pop    rbx
  40413b:	pop    rsi
  40413c:	pop    rdi
  40413d:	ret    
  40413e:	xchg   ax,ax
  404140:	push   rsi
  404141:	push   rbx
  404142:	sub    rsp,0x28
  404146:	mov    rbx,QWORD PTR [rip+0x44b3]        # 0x408600
  40414d:	cmp    WORD PTR [rbx],0x5a4d
  404152:	je     0x404160
  404154:	xor    eax,eax
  404156:	add    rsp,0x28
  40415a:	pop    rbx
  40415b:	pop    rsi
  40415c:	ret    
  40415d:	nop    DWORD PTR [rax]
  404160:	mov    rsi,rcx
  404163:	mov    rcx,rbx
  404166:	call   0x404010
  40416b:	test   eax,eax
  40416d:	je     0x404154
  40416f:	sub    rsi,rbx
  404172:	mov    rcx,rbx
  404175:	mov    rdx,rsi
  404178:	add    rsp,0x28
  40417c:	pop    rbx
  40417d:	pop    rsi
  40417e:	jmp    0x404050
  404183:	nop    DWORD PTR [rax]
  404186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404190:	push   rbx
  404191:	sub    rsp,0x20
  404195:	mov    rbx,QWORD PTR [rip+0x4464]        # 0x408600
  40419c:	xor    eax,eax
  40419e:	cmp    WORD PTR [rbx],0x5a4d
  4041a3:	je     0x4041b0
  4041a5:	add    rsp,0x20
  4041a9:	pop    rbx
  4041aa:	ret    
  4041ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4041b0:	mov    rcx,rbx
  4041b3:	call   0x404010
  4041b8:	test   eax,eax
  4041ba:	je     0x4041a5
  4041bc:	movsxd rax,DWORD PTR [rbx+0x3c]
  4041c0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4041c5:	add    rsp,0x20
  4041c9:	pop    rbx
  4041ca:	ret    
  4041cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4041d0:	push   rdi
  4041d1:	push   rsi
  4041d2:	push   rbx
  4041d3:	sub    rsp,0x20
  4041d7:	mov    rsi,QWORD PTR [rip+0x4422]        # 0x408600
  4041de:	xor    edi,edi
  4041e0:	mov    rbx,rcx
  4041e3:	cmp    WORD PTR [rsi],0x5a4d
  4041e8:	je     0x4041f5
  4041ea:	mov    rax,rdi
  4041ed:	add    rsp,0x20
  4041f1:	pop    rbx
  4041f2:	pop    rsi
  4041f3:	pop    rdi
  4041f4:	ret    
  4041f5:	mov    rcx,rsi
  4041f8:	call   0x404010
  4041fd:	test   eax,eax
  4041ff:	je     0x4041ea
  404201:	movsxd rax,DWORD PTR [rsi+0x3c]
  404205:	add    rsi,rax
  404208:	movzx  eax,WORD PTR [rsi+0x14]
  40420c:	lea    rdx,[rsi+rax*1+0x18]
  404211:	movzx  eax,WORD PTR [rsi+0x6]
  404215:	test   eax,eax
  404217:	je     0x4041ea
  404219:	sub    eax,0x1
  40421c:	lea    rax,[rax+rax*4]
  404220:	lea    rax,[rdx+rax*8+0x28]
  404225:	test   BYTE PTR [rdx+0x27],0x20
  404229:	je     0x404234
  40422b:	test   rbx,rbx
  40422e:	je     0x404250
  404230:	sub    rbx,0x1
  404234:	add    rdx,0x28
  404238:	cmp    rdx,rax
  40423b:	jne    0x404225
  40423d:	xor    edi,edi
  40423f:	mov    rax,rdi
  404242:	add    rsp,0x20
  404246:	pop    rbx
  404247:	pop    rsi
  404248:	pop    rdi
  404249:	ret    
  40424a:	nop    WORD PTR [rax+rax*1+0x0]
  404250:	mov    rdi,rdx
  404253:	mov    rax,rdi
  404256:	add    rsp,0x20
  40425a:	pop    rbx
  40425b:	pop    rsi
  40425c:	pop    rdi
  40425d:	ret    
  40425e:	xchg   ax,ax
  404260:	push   rsi
  404261:	push   rbx
  404262:	sub    rsp,0x28
  404266:	mov    rsi,QWORD PTR [rip+0x4393]        # 0x408600
  40426d:	xor    ebx,ebx
  40426f:	cmp    WORD PTR [rsi],0x5a4d
  404274:	je     0x404280
  404276:	mov    rax,rbx
  404279:	add    rsp,0x28
  40427d:	pop    rbx
  40427e:	pop    rsi
  40427f:	ret    
  404280:	mov    rcx,rsi
  404283:	call   0x404010
  404288:	test   eax,eax
  40428a:	cmovne rbx,rsi
  40428e:	mov    rax,rbx
  404291:	add    rsp,0x28
  404295:	pop    rbx
  404296:	pop    rsi
  404297:	ret    
  404298:	nop    DWORD PTR [rax+rax*1+0x0]
  4042a0:	push   rsi
  4042a1:	push   rbx
  4042a2:	sub    rsp,0x28
  4042a6:	mov    rbx,QWORD PTR [rip+0x4353]        # 0x408600
  4042ad:	xor    eax,eax
  4042af:	cmp    WORD PTR [rbx],0x5a4d
  4042b4:	je     0x4042c0
  4042b6:	add    rsp,0x28
  4042ba:	pop    rbx
  4042bb:	pop    rsi
  4042bc:	ret    
  4042bd:	nop    DWORD PTR [rax]
  4042c0:	mov    rsi,rcx
  4042c3:	mov    rcx,rbx
  4042c6:	call   0x404010
  4042cb:	test   eax,eax
  4042cd:	je     0x4042b6
  4042cf:	sub    rsi,rbx
  4042d2:	mov    rcx,rbx
  4042d5:	mov    rdx,rsi
  4042d8:	call   0x404050
  4042dd:	test   rax,rax
  4042e0:	je     0x4042f1
  4042e2:	mov    eax,DWORD PTR [rax+0x24]
  4042e5:	not    eax
  4042e7:	shr    eax,0x1f
  4042ea:	add    rsp,0x28
  4042ee:	pop    rbx
  4042ef:	pop    rsi
  4042f0:	ret    
  4042f1:	xor    eax,eax
  4042f3:	jmp    0x4042b6
  4042f5:	nop
  4042f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404300:	push   rbp
  404301:	push   rdi
  404302:	push   rsi
  404303:	push   rbx
  404304:	sub    rsp,0x28
  404308:	mov    rdi,QWORD PTR [rip+0x42f1]        # 0x408600
  40430f:	xor    ebp,ebp
  404311:	mov    esi,ecx
  404313:	cmp    WORD PTR [rdi],0x5a4d
  404318:	je     0x404330
  40431a:	mov    rax,rbp
  40431d:	add    rsp,0x28
  404321:	pop    rbx
  404322:	pop    rsi
  404323:	pop    rdi
  404324:	pop    rbp
  404325:	ret    
  404326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404330:	mov    rcx,rdi
  404333:	call   0x404010
  404338:	test   eax,eax
  40433a:	je     0x40431a
  40433c:	movsxd rax,DWORD PTR [rdi+0x3c]
  404340:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  404347:	test   edx,edx
  404349:	je     0x40431a
  40434b:	mov    ebx,edx
  40434d:	mov    rcx,rdi
  404350:	mov    rdx,rbx
  404353:	call   0x404050
  404358:	test   rax,rax
  40435b:	je     0x40431a
  40435d:	add    rbx,rdi
  404360:	mov    rdx,rbx
  404363:	jne    0x404377
  404365:	jmp    0x40431a
  404367:	nop    WORD PTR [rax+rax*1+0x0]
  404370:	sub    esi,0x1
  404373:	add    rdx,0x14
  404377:	mov    ecx,DWORD PTR [rdx+0x4]
  40437a:	test   ecx,ecx
  40437c:	jne    0x404385
  40437e:	mov    eax,DWORD PTR [rdx+0xc]
  404381:	test   eax,eax
  404383:	je     0x4043a0
  404385:	test   esi,esi
  404387:	jg     0x404370
  404389:	mov    ebp,DWORD PTR [rdx+0xc]
  40438c:	add    rbp,rdi
  40438f:	mov    rax,rbp
  404392:	add    rsp,0x28
  404396:	pop    rbx
  404397:	pop    rsi
  404398:	pop    rdi
  404399:	pop    rbp
  40439a:	ret    
  40439b:	nop    DWORD PTR [rax+rax*1+0x0]
  4043a0:	xor    ebp,ebp
  4043a2:	mov    rax,rbp
  4043a5:	add    rsp,0x28
  4043a9:	pop    rbx
  4043aa:	pop    rsi
  4043ab:	pop    rdi
  4043ac:	pop    rbp
  4043ad:	ret    
  4043ae:	nop
  4043af:	nop
  4043b0:	jmp    QWORD PTR [rip+0x8fa6]        # 0x40d35c
  4043b6:	nop
  4043b7:	nop
  4043b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4043c0:	push   rcx
  4043c1:	push   rax
  4043c2:	cmp    rax,0x1000
  4043c8:	lea    rcx,[rsp+0x18]
  4043cd:	jb     0x4043e8
  4043cf:	sub    rcx,0x1000
  4043d6:	or     QWORD PTR [rcx],0x0
  4043da:	sub    rax,0x1000
  4043e0:	cmp    rax,0x1000
  4043e6:	ja     0x4043cf
  4043e8:	sub    rcx,rax
  4043eb:	or     QWORD PTR [rcx],0x0
  4043ef:	pop    rax
  4043f0:	pop    rcx
  4043f1:	ret    
  4043f2:	nop
  4043f3:	nop
  4043f4:	nop
  4043f5:	nop
  4043f6:	nop
  4043f7:	nop
  4043f8:	nop
  4043f9:	nop
  4043fa:	nop
  4043fb:	nop
  4043fc:	nop
  4043fd:	nop
  4043fe:	nop
  4043ff:	nop
  404400:	jmp    QWORD PTR [rip+0x923e]        # 0x40d644
  404406:	nop
  404407:	nop
  404408:	jmp    QWORD PTR [rip+0x922e]        # 0x40d63c
  40440e:	nop
  40440f:	nop
  404410:	jmp    QWORD PTR [rip+0x921e]        # 0x40d634
  404416:	nop
  404417:	nop
  404418:	jmp    QWORD PTR [rip+0x920e]        # 0x40d62c
  40441e:	nop
  40441f:	nop
  404420:	jmp    QWORD PTR [rip+0x91fe]        # 0x40d624
  404426:	nop
  404427:	nop
  404428:	jmp    QWORD PTR [rip+0x91ee]        # 0x40d61c
  40442e:	nop
  40442f:	nop
  404430:	jmp    QWORD PTR [rip+0x91de]        # 0x40d614
  404436:	nop
  404437:	nop
  404438:	jmp    QWORD PTR [rip+0x91ce]        # 0x40d60c
  40443e:	nop
  40443f:	nop
  404440:	jmp    QWORD PTR [rip+0x91be]        # 0x40d604
  404446:	nop
  404447:	nop
  404448:	jmp    QWORD PTR [rip+0x91ae]        # 0x40d5fc
  40444e:	nop
  40444f:	nop
  404450:	jmp    QWORD PTR [rip+0x919e]        # 0x40d5f4
  404456:	nop
  404457:	nop
  404458:	jmp    QWORD PTR [rip+0x918e]        # 0x40d5ec
  40445e:	nop
  40445f:	nop
  404460:	jmp    QWORD PTR [rip+0x917e]        # 0x40d5e4
  404466:	nop
  404467:	nop
  404468:	jmp    QWORD PTR [rip+0x916e]        # 0x40d5dc
  40446e:	nop
  40446f:	nop
  404470:	jmp    QWORD PTR [rip+0x915e]        # 0x40d5d4
  404476:	nop
  404477:	nop
  404478:	jmp    QWORD PTR [rip+0x914e]        # 0x40d5cc
  40447e:	nop
  40447f:	nop
  404480:	jmp    QWORD PTR [rip+0x913e]        # 0x40d5c4
  404486:	nop
  404487:	nop
  404488:	jmp    QWORD PTR [rip+0x912e]        # 0x40d5bc
  40448e:	nop
  40448f:	nop
  404490:	jmp    QWORD PTR [rip+0x9116]        # 0x40d5ac
  404496:	nop
  404497:	nop
  404498:	jmp    QWORD PTR [rip+0x9106]        # 0x40d5a4
  40449e:	nop
  40449f:	nop
  4044a0:	jmp    QWORD PTR [rip+0x90ee]        # 0x40d594
  4044a6:	nop
  4044a7:	nop
  4044a8:	jmp    QWORD PTR [rip+0x90de]        # 0x40d58c
  4044ae:	nop
  4044af:	nop
  4044b0:	jmp    QWORD PTR [rip+0x90ce]        # 0x40d584
  4044b6:	nop
  4044b7:	nop
  4044b8:	jmp    QWORD PTR [rip+0x90be]        # 0x40d57c
  4044be:	nop
  4044bf:	nop
  4044c0:	jmp    QWORD PTR [rip+0x90a6]        # 0x40d56c
  4044c6:	nop
  4044c7:	nop
  4044c8:	jmp    QWORD PTR [rip+0x9096]        # 0x40d564
  4044ce:	nop
  4044cf:	nop
  4044d0:	mov    rax,QWORD PTR [rip+0x7599]        # 0x40ba70
  4044d7:	ret    
  4044d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4044e0:	mov    rax,rcx
  4044e3:	xchg   QWORD PTR [rip+0x7586],rax        # 0x40ba70
  4044ea:	ret    
  4044eb:	nop
  4044ec:	nop
  4044ed:	nop
  4044ee:	nop
  4044ef:	nop
  4044f0:	jmp    QWORD PTR [rip+0x9056]        # 0x40d54c
  4044f6:	nop
  4044f7:	nop
  4044f8:	jmp    QWORD PTR [rip+0x9046]        # 0x40d544
  4044fe:	nop
  4044ff:	nop
  404500:	jmp    QWORD PTR [rip+0x9036]        # 0x40d53c
  404506:	nop
  404507:	nop
  404508:	jmp    QWORD PTR [rip+0x9026]        # 0x40d534
  40450e:	nop
  40450f:	nop
  404510:	jmp    QWORD PTR [rip+0x9016]        # 0x40d52c
  404516:	nop
  404517:	nop
  404518:	jmp    QWORD PTR [rip+0x8ff6]        # 0x40d514
  40451e:	nop
  40451f:	nop
  404520:	jmp    QWORD PTR [rip+0x8fe6]        # 0x40d50c
  404526:	nop
  404527:	nop
  404528:	jmp    QWORD PTR [rip+0x8fd6]        # 0x40d504
  40452e:	nop
  40452f:	nop
  404530:	jmp    QWORD PTR [rip+0x8fc6]        # 0x40d4fc
  404536:	nop
  404537:	nop
  404538:	jmp    QWORD PTR [rip+0x8fb6]        # 0x40d4f4
  40453e:	nop
  40453f:	nop
  404540:	jmp    QWORD PTR [rip+0x8fa6]        # 0x40d4ec
  404546:	nop
  404547:	nop
  404548:	jmp    QWORD PTR [rip+0x8f96]        # 0x40d4e4
  40454e:	nop
  40454f:	nop
  404550:	jmp    QWORD PTR [rip+0x8f86]        # 0x40d4dc
  404556:	nop
  404557:	nop
  404558:	jmp    QWORD PTR [rip+0x8f76]        # 0x40d4d4
  40455e:	nop
  40455f:	nop
  404560:	jmp    QWORD PTR [rip+0x8f4e]        # 0x40d4b4
  404566:	nop
  404567:	nop
  404568:	jmp    QWORD PTR [rip+0x8f3e]        # 0x40d4ac
  40456e:	nop
  40456f:	nop
  404570:	jmp    QWORD PTR [rip+0x8f2e]        # 0x40d4a4
  404576:	nop
  404577:	nop
  404578:	jmp    QWORD PTR [rip+0x8f1e]        # 0x40d49c
  40457e:	nop
  40457f:	nop
  404580:	jmp    QWORD PTR [rip+0x8f0e]        # 0x40d494
  404586:	nop
  404587:	nop
  404588:	jmp    QWORD PTR [rip+0x8efe]        # 0x40d48c
  40458e:	nop
  40458f:	nop
  404590:	mov    eax,edx
  404592:	ret    
  404593:	nop
  404594:	nop
  404595:	nop
  404596:	nop
  404597:	nop
  404598:	nop
  404599:	nop
  40459a:	nop
  40459b:	nop
  40459c:	nop
  40459d:	nop
  40459e:	nop
  40459f:	nop
  4045a0:	push   r15
  4045a2:	push   r14
  4045a4:	push   r13
  4045a6:	push   r12
  4045a8:	push   rbp
  4045a9:	push   rdi
  4045aa:	push   rsi
  4045ab:	push   rbx
  4045ac:	sub    rsp,0x58
  4045b0:	mov    rsi,QWORD PTR [rcx+0x10]
  4045b4:	mov    r12,rcx
  4045b7:	mov    r14,rdx
  4045ba:	lea    r13,[rcx+0x8]
  4045be:	test   rsi,rsi
  4045c1:	je     0x4046a0
  4045c7:	mov    rbp,QWORD PTR [rdx]
  4045ca:	mov    rdi,r13
  4045cd:	mov    r15,QWORD PTR [rbp-0x18]
  4045d1:	jmp    0x4045e5
  4045d3:	mov    eax,ebx
  4045d5:	test   eax,eax
  4045d7:	js     0x404618
  4045d9:	mov    rdi,rsi
  4045dc:	mov    rsi,QWORD PTR [rsi+0x10]
  4045e0:	test   rsi,rsi
  4045e3:	je     0x404621
  4045e5:	mov    rcx,QWORD PTR [rsi+0x20]
  4045e9:	mov    r8,r15
  4045ec:	mov    rdx,rbp
  4045ef:	mov    rbx,QWORD PTR [rcx-0x18]
  4045f3:	cmp    rbx,r15
  4045f6:	cmovbe r8,rbx
  4045fa:	call   0x404428
  4045ff:	test   eax,eax
  404601:	jne    0x4045d5
  404603:	sub    rbx,r15
  404606:	cmp    rbx,0x7fffffff
  40460d:	jg     0x4045d9
  40460f:	cmp    rbx,0xffffffff80000000
  404616:	jge    0x4045d3
  404618:	mov    rsi,QWORD PTR [rsi+0x18]
  40461c:	test   rsi,rsi
  40461f:	jne    0x4045e5
  404621:	cmp    r13,rdi
  404624:	je     0x404675
  404626:	mov    rdx,QWORD PTR [rdi+0x20]
  40462a:	mov    r8,r15
  40462d:	mov    rcx,rbp
  404630:	mov    rbx,QWORD PTR [rdx-0x18]
  404634:	cmp    rbx,r15
  404637:	cmovbe r8,rbx
  40463b:	call   0x404428
  404640:	test   eax,eax
  404642:	jne    0x404671
  404644:	sub    r15,rbx
  404647:	cmp    r15,0x7fffffff
  40464e:	jle    0x404665
  404650:	lea    rax,[rdi+0x28]
  404654:	add    rsp,0x58
  404658:	pop    rbx
  404659:	pop    rsi
  40465a:	pop    rdi
  40465b:	pop    rbp
  40465c:	pop    r12
  40465e:	pop    r13
  404660:	pop    r14
  404662:	pop    r15
  404664:	ret    
  404665:	cmp    r15,0xffffffff80000000
  40466c:	jl     0x404675
  40466e:	mov    eax,r15d
  404671:	test   eax,eax
  404673:	jns    0x404650
  404675:	lea    rax,[rsp+0x3f]
  40467a:	lea    r9,[rsp+0x40]
  40467f:	lea    r8,[rip+0x3c64]        # 0x4082ea
  404686:	mov    rdx,rdi
  404689:	mov    rcx,r12
  40468c:	mov    QWORD PTR [rsp+0x40],r14
  404691:	mov    QWORD PTR [rsp+0x20],rax
  404696:	call   0x404750
  40469b:	mov    rdi,rax
  40469e:	jmp    0x404650
  4046a0:	mov    rdi,r13
  4046a3:	jmp    0x404675
  4046a5:	nop
  4046a6:	nop
  4046a7:	nop
  4046a8:	nop
  4046a9:	nop
  4046aa:	nop
  4046ab:	nop
  4046ac:	nop
  4046ad:	nop
  4046ae:	nop
  4046af:	nop
  4046b0:	push   r12
  4046b2:	push   rbp
  4046b3:	push   rdi
  4046b4:	push   rsi
  4046b5:	push   rbx
  4046b6:	sub    rsp,0x30
  4046ba:	test   rdx,rdx
  4046bd:	mov    rsi,r9
  4046c0:	mov    rbx,rcx
  4046c3:	mov    rdi,r8
  4046c6:	lea    r9,[rcx+0x8]
  4046ca:	je     0x4046f0
  4046cc:	mov    ecx,0x1
  4046d1:	mov    r8,rdi
  4046d4:	mov    rdx,rsi
  4046d7:	call   0x402d90
  4046dc:	add    QWORD PTR [rbx+0x28],0x1
  4046e1:	mov    rax,rsi
  4046e4:	add    rsp,0x30
  4046e8:	pop    rbx
  4046e9:	pop    rsi
  4046ea:	pop    rdi
  4046eb:	pop    rbp
  4046ec:	pop    r12
  4046ee:	ret    
  4046ef:	nop
  4046f0:	cmp    r8,r9
  4046f3:	je     0x4046cc
  4046f5:	mov    rdx,QWORD PTR [r8+0x20]
  4046f9:	mov    rcx,QWORD PTR [rsi+0x20]
  4046fd:	mov    QWORD PTR [rsp+0x28],r9
  404702:	mov    rbp,QWORD PTR [rcx-0x18]
  404706:	mov    r12,QWORD PTR [rdx-0x18]
  40470a:	mov    r8,rbp
  40470d:	cmp    r12,rbp
  404710:	cmovbe r8,r12
  404714:	call   0x404428
  404719:	test   eax,eax
  40471b:	mov    r9,QWORD PTR [rsp+0x28]
  404720:	jne    0x40473b
  404722:	sub    rbp,r12
  404725:	xor    ecx,ecx
  404727:	cmp    rbp,0x7fffffff
  40472e:	jg     0x4046d1
  404730:	cmp    rbp,0xffffffff80000000
  404737:	jl     0x4046cc
  404739:	mov    eax,ebp
  40473b:	shr    eax,0x1f
  40473e:	mov    ecx,eax
  404740:	jmp    0x4046d1
  404742:	nop
  404743:	nop
  404744:	nop
  404745:	nop
  404746:	nop
  404747:	nop
  404748:	nop
  404749:	nop
  40474a:	nop
  40474b:	nop
  40474c:	nop
  40474d:	nop
  40474e:	nop
  40474f:	nop
  404750:	push   r14
  404752:	push   r13
  404754:	push   r12
  404756:	push   rbp
  404757:	push   rdi
  404758:	push   rsi
  404759:	push   rbx
  40475a:	sub    rsp,0x40
  40475e:	mov    rsi,r9
  404761:	mov    rdi,rcx
  404764:	mov    ecx,0x30
  404769:	mov    r13,rdx
  40476c:	lea    r12,[rsp+0x3f]
  404771:	call   0x402d70
  404776:	mov    rsi,QWORD PTR [rsi]
  404779:	mov    rbx,rax
  40477c:	lea    r14,[rax+0x20]
  404780:	mov    r8,r12
  404783:	xor    edx,edx
  404785:	xor    ecx,ecx
  404787:	mov    rax,QWORD PTR [rsi]
  40478a:	mov    QWORD PTR [rbx+0x20],rax
  40478e:	call   0x402e18
  404793:	lea    r8,[rsp+0x3e]
  404798:	mov    QWORD PTR [rsi],rax
  40479b:	xor    edx,edx
  40479d:	xor    ecx,ecx
  40479f:	call   0x402e18
  4047a4:	lea    rcx,[rsp+0x20]
  4047a9:	mov    r8,r13
  4047ac:	mov    QWORD PTR [rbx+0x28],rax
  4047b0:	mov    r9,r14
  4047b3:	mov    rdx,rdi
  4047b6:	mov    rbp,rax
  4047b9:	call   0x404b80
  4047be:	mov    r8,QWORD PTR [rsp+0x28]
  4047c3:	mov    rsi,QWORD PTR [rsp+0x20]
  4047c8:	test   r8,r8
  4047cb:	je     0x4047f0
  4047cd:	mov    r9,rbx
  4047d0:	mov    rdx,rsi
  4047d3:	mov    rcx,rdi
  4047d6:	call   0x4046b0
  4047db:	add    rsp,0x40
  4047df:	pop    rbx
  4047e0:	pop    rsi
  4047e1:	pop    rdi
  4047e2:	pop    rbp
  4047e3:	pop    r12
  4047e5:	pop    r13
  4047e7:	pop    r14
  4047e9:	ret    
  4047ea:	nop    WORD PTR [rax+rax*1+0x0]
  4047f0:	mov    rdi,QWORD PTR [rip+0x3d89]        # 0x408580
  4047f7:	mov    edx,DWORD PTR [rdi]
  4047f9:	test   edx,edx
  4047fb:	jne    0x404840
  4047fd:	mov    eax,DWORD PTR [rbp-0x8]
  404800:	lea    edx,[rax-0x1]
  404803:	mov    DWORD PTR [rbp-0x8],edx
  404806:	test   eax,eax
  404808:	jle    0x404870
  40480a:	mov    eax,DWORD PTR [rdi]
  40480c:	mov    rcx,QWORD PTR [rbx+0x20]
  404810:	test   eax,eax
  404812:	jne    0x404850
  404814:	mov    eax,DWORD PTR [rcx-0x8]
  404817:	lea    edx,[rax-0x1]
  40481a:	mov    DWORD PTR [rcx-0x8],edx
  40481d:	test   eax,eax
  40481f:	jle    0x404860
  404821:	mov    rcx,rbx
  404824:	call   0x402d78
  404829:	mov    rax,rsi
  40482c:	add    rsp,0x40
  404830:	pop    rbx
  404831:	pop    rsi
  404832:	pop    rdi
  404833:	pop    rbp
  404834:	pop    r12
  404836:	pop    r13
  404838:	pop    r14
  40483a:	ret    
  40483b:	nop    DWORD PTR [rax+rax*1+0x0]
  404840:	mov    eax,0xffffffff
  404845:	lock xadd DWORD PTR [rbp-0x8],eax
  40484a:	jmp    0x404806
  40484c:	nop    DWORD PTR [rax+0x0]
  404850:	mov    eax,0xffffffff
  404855:	lock xadd DWORD PTR [rcx-0x8],eax
  40485a:	jmp    0x40481d
  40485c:	nop    DWORD PTR [rax+0x0]
  404860:	sub    rcx,0x18
  404864:	mov    rdx,r12
  404867:	call   0x402e08
  40486c:	jmp    0x404821
  40486e:	xchg   ax,ax
  404870:	lea    rcx,[rbp-0x18]
  404874:	mov    rdx,r12
  404877:	call   0x402e08
  40487c:	jmp    0x40480a
  40487e:	mov    rsi,rax
  404881:	mov    rax,QWORD PTR [rbx+0x20]
  404885:	mov    rdx,r12
  404888:	lea    rcx,[rax-0x18]
  40488c:	call   0x402e00
  404891:	mov    rax,rsi
  404894:	mov    rcx,rax
  404897:	call   0x402d68
  40489c:	mov    rcx,rbx
  40489f:	call   0x402d78
  4048a4:	call   0x402d58
  4048a9:	jmp    0x404894
  4048ab:	mov    rbx,rax
  4048ae:	call   0x402d60
  4048b3:	mov    rcx,rbx
  4048b6:	call   0x4043b0
  4048bb:	nop
  4048bc:	nop
  4048bd:	nop
  4048be:	nop
  4048bf:	nop
  4048c0:	push   r13
  4048c2:	push   r12
  4048c4:	push   rbp
  4048c5:	push   rdi
  4048c6:	push   rsi
  4048c7:	push   rbx
  4048c8:	sub    rsp,0x48
  4048cc:	mov    rbp,r9
  4048cf:	mov    rdi,rcx
  4048d2:	mov    ecx,0x30
  4048d7:	mov    r13,rdx
  4048da:	call   0x402d70
  4048df:	mov    rdx,QWORD PTR [rbp+0x0]
  4048e3:	lea    rsi,[rax+0x20]
  4048e7:	mov    rbx,rax
  4048ea:	mov    rcx,rsi
  4048ed:	call   0x402dc8
  4048f2:	lea    r12,[rsp+0x3f]
  4048f7:	xor    edx,edx
  4048f9:	xor    ecx,ecx
  4048fb:	mov    r8,r12
  4048fe:	call   0x402e18
  404903:	lea    rcx,[rsp+0x20]
  404908:	mov    r9,rsi
  40490b:	mov    r8,r13
  40490e:	mov    QWORD PTR [rbx+0x28],rax
  404912:	mov    rdx,rdi
  404915:	mov    rbp,rax
  404918:	call   0x404b80
  40491d:	mov    r8,QWORD PTR [rsp+0x28]
  404922:	mov    rsi,QWORD PTR [rsp+0x20]
  404927:	test   r8,r8
  40492a:	je     0x404950
  40492c:	mov    r9,rbx
  40492f:	mov    rdx,rsi
  404932:	mov    rcx,rdi
  404935:	call   0x4046b0
  40493a:	add    rsp,0x48
  40493e:	pop    rbx
  40493f:	pop    rsi
  404940:	pop    rdi
  404941:	pop    rbp
  404942:	pop    r12
  404944:	pop    r13
  404946:	ret    
  404947:	nop    WORD PTR [rax+rax*1+0x0]
  404950:	mov    rdi,QWORD PTR [rip+0x3c29]        # 0x408580
  404957:	mov    edx,DWORD PTR [rdi]
  404959:	test   edx,edx
  40495b:	jne    0x4049a0
  40495d:	mov    eax,DWORD PTR [rbp-0x8]
  404960:	lea    edx,[rax-0x1]
  404963:	mov    DWORD PTR [rbp-0x8],edx
  404966:	test   eax,eax
  404968:	jle    0x4049d0
  40496a:	mov    eax,DWORD PTR [rdi]
  40496c:	mov    rcx,QWORD PTR [rbx+0x20]
  404970:	test   eax,eax
  404972:	jne    0x4049b0
  404974:	mov    eax,DWORD PTR [rcx-0x8]
  404977:	lea    edx,[rax-0x1]
  40497a:	mov    DWORD PTR [rcx-0x8],edx
  40497d:	test   eax,eax
  40497f:	jle    0x4049c0
  404981:	mov    rcx,rbx
  404984:	call   0x402d78
  404989:	mov    rax,rsi
  40498c:	add    rsp,0x48
  404990:	pop    rbx
  404991:	pop    rsi
  404992:	pop    rdi
  404993:	pop    rbp
  404994:	pop    r12
  404996:	pop    r13
  404998:	ret    
  404999:	nop    DWORD PTR [rax+0x0]
  4049a0:	mov    eax,0xffffffff
  4049a5:	lock xadd DWORD PTR [rbp-0x8],eax
  4049aa:	jmp    0x404966
  4049ac:	nop    DWORD PTR [rax+0x0]
  4049b0:	mov    eax,0xffffffff
  4049b5:	lock xadd DWORD PTR [rcx-0x8],eax
  4049ba:	jmp    0x40497d
  4049bc:	nop    DWORD PTR [rax+0x0]
  4049c0:	sub    rcx,0x18
  4049c4:	mov    rdx,r12
  4049c7:	call   0x402e08
  4049cc:	jmp    0x404981
  4049ce:	xchg   ax,ax
  4049d0:	lea    rcx,[rbp-0x18]
  4049d4:	mov    rdx,r12
  4049d7:	call   0x402e08
  4049dc:	jmp    0x40496a
  4049de:	mov    rsi,rax
  4049e1:	mov    rax,QWORD PTR [rbx+0x20]
  4049e5:	lea    rdx,[rsp+0x3e]
  4049ea:	lea    rcx,[rax-0x18]
  4049ee:	call   0x402e00
  4049f3:	mov    rax,rsi
  4049f6:	mov    rcx,rax
  4049f9:	call   0x402d68
  4049fe:	mov    rcx,rbx
  404a01:	call   0x402d78
  404a06:	call   0x402d58
  404a0b:	jmp    0x4049f6
  404a0d:	mov    rbx,rax
  404a10:	call   0x402d60
  404a15:	mov    rcx,rbx
  404a18:	call   0x4043b0
  404a1d:	nop
  404a1e:	nop
  404a1f:	nop
  404a20:	push   r15
  404a22:	push   r14
  404a24:	push   r13
  404a26:	push   r12
  404a28:	push   rbp
  404a29:	push   rdi
  404a2a:	push   rsi
  404a2b:	push   rbx
  404a2c:	sub    rsp,0x28
  404a30:	mov    rsi,QWORD PTR [rdx+0x10]
  404a34:	mov    r12,rcx
  404a37:	mov    r13,rdx
  404a3a:	mov    QWORD PTR [rsp+0x80],r8
  404a42:	test   rsi,rsi
  404a45:	je     0x404b23
  404a4b:	mov    rax,QWORD PTR [rsp+0x80]
  404a53:	mov    rbp,QWORD PTR [rax]
  404a56:	mov    r14,QWORD PTR [rbp-0x18]
  404a5a:	jmp    0x404a81
  404a5c:	nop    DWORD PTR [rax+0x0]
  404a60:	cmp    r9,0xffffffff80000000
  404a67:	jl     0x404a70
  404a69:	mov    eax,r9d
  404a6c:	test   eax,eax
  404a6e:	jns    0x404ab4
  404a70:	mov    rax,QWORD PTR [rsi+0x10]
  404a74:	mov    edx,0x1
  404a79:	test   rax,rax
  404a7c:	je     0x404abf
  404a7e:	mov    rsi,rax
  404a81:	mov    r15,QWORD PTR [rsi+0x20]
  404a85:	mov    rdi,r14
  404a88:	mov    rcx,rbp
  404a8b:	mov    rbx,QWORD PTR [r15-0x18]
  404a8f:	mov    rdx,r15
  404a92:	cmp    rbx,r14
  404a95:	cmovbe rdi,rbx
  404a99:	mov    r8,rdi
  404a9c:	call   0x404428
  404aa1:	test   eax,eax
  404aa3:	jne    0x404a6c
  404aa5:	mov    r9,r14
  404aa8:	sub    r9,rbx
  404aab:	cmp    r9,0x7fffffff
  404ab2:	jle    0x404a60
  404ab4:	mov    rax,QWORD PTR [rsi+0x18]
  404ab8:	xor    edx,edx
  404aba:	test   rax,rax
  404abd:	jne    0x404a7e
  404abf:	test   dl,dl
  404ac1:	mov    r8,rdi
  404ac4:	mov    rdi,rsi
  404ac7:	jne    0x404b30
  404ac9:	mov    rdx,rbp
  404acc:	mov    rcx,r15
  404acf:	call   0x404428
  404ad4:	test   eax,eax
  404ad6:	jne    0x404b10
  404ad8:	sub    rbx,r14
  404adb:	cmp    rbx,0x7fffffff
  404ae2:	jle    0x404b05
  404ae4:	mov    QWORD PTR [r12],rsi
  404ae8:	mov    QWORD PTR [r12+0x8],0x0
  404af1:	mov    rax,r12
  404af4:	add    rsp,0x28
  404af8:	pop    rbx
  404af9:	pop    rsi
  404afa:	pop    rdi
  404afb:	pop    rbp
  404afc:	pop    r12
  404afe:	pop    r13
  404b00:	pop    r14
  404b02:	pop    r15
  404b04:	ret    
  404b05:	cmp    rbx,0xffffffff80000000
  404b0c:	jl     0x404b14
  404b0e:	mov    eax,ebx
  404b10:	test   eax,eax
  404b12:	jns    0x404ae4
  404b14:	mov    QWORD PTR [r12],0x0
  404b1c:	mov    QWORD PTR [r12+0x8],rdi
  404b21:	jmp    0x404af1
  404b23:	lea    rsi,[rdx+0x8]
  404b27:	nop    WORD PTR [rax+rax*1+0x0]
  404b30:	cmp    QWORD PTR [r13+0x18],rsi
  404b34:	je     0x404b6a
  404b36:	mov    rcx,rsi
  404b39:	mov    rdi,rsi
  404b3c:	call   0x402da0
  404b41:	mov    rcx,QWORD PTR [rsp+0x80]
  404b49:	mov    r15,QWORD PTR [rax+0x20]
  404b4d:	mov    rsi,rax
  404b50:	mov    rbp,QWORD PTR [rcx]
  404b53:	mov    rbx,QWORD PTR [r15-0x18]
  404b57:	mov    r14,QWORD PTR [rbp-0x18]
  404b5b:	cmp    rbx,r14
  404b5e:	mov    r8,r14
  404b61:	cmovbe r8,rbx
  404b65:	jmp    0x404ac9
  404b6a:	mov    QWORD PTR [r12],0x0
  404b72:	mov    QWORD PTR [r12+0x8],rsi
  404b77:	jmp    0x404af1
  404b7c:	nop
  404b7d:	nop
  404b7e:	nop
  404b7f:	nop
  404b80:	push   r15
  404b82:	push   r14
  404b84:	push   r13
  404b86:	push   r12
  404b88:	push   rbp
  404b89:	push   rdi
  404b8a:	push   rsi
  404b8b:	push   rbx
  404b8c:	sub    rsp,0x38
  404b90:	lea    rax,[rdx+0x8]
  404b94:	mov    rbp,rcx
  404b97:	mov    r12,rdx
  404b9a:	mov    rdi,r8
  404b9d:	mov    r13,r9
  404ba0:	cmp    r8,rax
  404ba3:	je     0x404cc0
  404ba9:	mov    r14,QWORD PTR [r9]
  404bac:	mov    r15,QWORD PTR [r8+0x20]
  404bb0:	mov    rbx,QWORD PTR [r14-0x18]
  404bb4:	mov    rsi,QWORD PTR [r15-0x18]
  404bb8:	mov    rdx,r15
  404bbb:	mov    rcx,r14
  404bbe:	cmp    rsi,rbx
  404bc1:	mov    r9,rbx
  404bc4:	cmovbe r9,rsi
  404bc8:	mov    r8,r9
  404bcb:	mov    QWORD PTR [rsp+0x28],r9
  404bd0:	call   0x404428
  404bd5:	test   eax,eax
  404bd7:	mov    r9,QWORD PTR [rsp+0x28]
  404bdc:	jne    0x404cb1
  404be2:	mov    rax,rbx
  404be5:	sub    rax,rsi
  404be8:	cmp    rax,0x7fffffff
  404bee:	jle    0x404c45
  404bf0:	mov    r8,r9
  404bf3:	mov    rdx,r14
  404bf6:	mov    rcx,r15
  404bf9:	call   0x404428
  404bfe:	test   eax,eax
  404c00:	jne    0x404c1d
  404c02:	sub    rsi,rbx
  404c05:	cmp    rsi,0x7fffffff
  404c0c:	jg     0x404c25
  404c0e:	cmp    rsi,0xffffffff80000000
  404c15:	jl     0x404d23
  404c1b:	mov    eax,esi
  404c1d:	test   eax,eax
  404c1f:	js     0x404d23
  404c25:	mov    QWORD PTR [rbp+0x0],rdi
  404c29:	mov    QWORD PTR [rbp+0x8],0x0
  404c31:	mov    rax,rbp
  404c34:	add    rsp,0x38
  404c38:	pop    rbx
  404c39:	pop    rsi
  404c3a:	pop    rdi
  404c3b:	pop    rbp
  404c3c:	pop    r12
  404c3e:	pop    r13
  404c40:	pop    r14
  404c42:	pop    r15
  404c44:	ret    
  404c45:	cmp    rax,0xffffffff80000000
  404c4b:	jge    0x404cb1
  404c4d:	cmp    QWORD PTR [r12+0x18],rdi
  404c52:	je     0x404ca7
  404c54:	mov    rcx,rdi
  404c57:	call   0x402da0
  404c5c:	mov    rcx,QWORD PTR [rax+0x20]
  404c60:	mov    r8,rbx
  404c63:	mov    rdx,r14
  404c66:	mov    r15,rax
  404c69:	mov    rsi,QWORD PTR [rcx-0x18]
  404c6d:	cmp    rsi,rbx
  404c70:	cmovbe r8,rsi
  404c74:	call   0x404428
  404c79:	test   eax,eax
  404c7b:	jne    0x404c98
  404c7d:	sub    rsi,rbx
  404c80:	cmp    rsi,0x7fffffff
  404c87:	jg     0x404d10
  404c8d:	cmp    rsi,0xffffffff80000000
  404c94:	jl     0x404c9c
  404c96:	mov    eax,esi
  404c98:	test   eax,eax
  404c9a:	jns    0x404d10
  404c9c:	cmp    QWORD PTR [r15+0x18],0x0
  404ca1:	je     0x404d93
  404ca7:	mov    QWORD PTR [rbp+0x0],rdi
  404cab:	mov    QWORD PTR [rbp+0x8],rdi
  404caf:	jmp    0x404c31
  404cb1:	test   eax,eax
  404cb3:	jns    0x404bf0
  404cb9:	jmp    0x404c4d
  404cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  404cc0:	cmp    QWORD PTR [rdx+0x28],0x0
  404cc5:	je     0x404d10
  404cc7:	mov    rdi,QWORD PTR [rdx+0x20]
  404ccb:	mov    rdx,QWORD PTR [r9]
  404cce:	mov    rcx,QWORD PTR [rdi+0x20]
  404cd2:	mov    rsi,QWORD PTR [rdx-0x18]
  404cd6:	mov    rbx,QWORD PTR [rcx-0x18]
  404cda:	cmp    rsi,rbx
  404cdd:	mov    r8,rbx
  404ce0:	cmovbe r8,rsi
  404ce4:	call   0x404428
  404ce9:	test   eax,eax
  404ceb:	jne    0x404d08
  404ced:	sub    rbx,rsi
  404cf0:	cmp    rbx,0x7fffffff
  404cf7:	jg     0x404d10
  404cf9:	cmp    rbx,0xffffffff80000000
  404d00:	jl     0x404d82
  404d06:	mov    eax,ebx
  404d08:	test   eax,eax
  404d0a:	js     0x404d82
  404d0c:	nop    DWORD PTR [rax+0x0]
  404d10:	mov    r8,r13
  404d13:	mov    rdx,r12
  404d16:	mov    rcx,rbp
  404d19:	call   0x404a20
  404d1e:	jmp    0x404c31
  404d23:	cmp    QWORD PTR [r12+0x20],rdi
  404d28:	je     0x404d82
  404d2a:	mov    rcx,rdi
  404d2d:	call   0x402d98
  404d32:	mov    rdx,QWORD PTR [rax+0x20]
  404d36:	mov    r8,rbx
  404d39:	mov    rcx,r14
  404d3c:	mov    r15,rax
  404d3f:	mov    rsi,QWORD PTR [rdx-0x18]
  404d43:	cmp    rsi,rbx
  404d46:	cmovbe r8,rsi
  404d4a:	call   0x404428
  404d4f:	test   eax,eax
  404d51:	jne    0x404d6a
  404d53:	sub    rbx,rsi
  404d56:	cmp    rbx,0x7fffffff
  404d5d:	jg     0x404d10
  404d5f:	cmp    rbx,0xffffffff80000000
  404d66:	jl     0x404d6e
  404d68:	mov    eax,ebx
  404d6a:	test   eax,eax
  404d6c:	jns    0x404d10
  404d6e:	cmp    QWORD PTR [rdi+0x18],0x0
  404d73:	je     0x404d82
  404d75:	mov    QWORD PTR [rbp+0x0],r15
  404d79:	mov    QWORD PTR [rbp+0x8],r15
  404d7d:	jmp    0x404c31
  404d82:	mov    QWORD PTR [rbp+0x0],0x0
  404d8a:	mov    QWORD PTR [rbp+0x8],rdi
  404d8e:	jmp    0x404c31
  404d93:	mov    QWORD PTR [rbp+0x0],0x0
  404d9b:	mov    QWORD PTR [rbp+0x8],r15
  404d9f:	jmp    0x404c31
  404da4:	nop
  404da5:	nop
  404da6:	nop
  404da7:	nop
  404da8:	nop
  404da9:	nop
  404daa:	nop
  404dab:	nop
  404dac:	nop
  404dad:	nop
  404dae:	nop
  404daf:	nop
  404db0:	push   r12
  404db2:	push   rbp
  404db3:	push   rdi
  404db4:	push   rsi
  404db5:	push   rbx
  404db6:	sub    rsp,0x30
  404dba:	mov    rsi,QWORD PTR [rip+0x37bf]        # 0x408580
  404dc1:	test   rdx,rdx
  404dc4:	mov    rbp,rcx
  404dc7:	mov    rbx,rdx
  404dca:	lea    r12,[rsp+0x2f]
  404dcf:	jne    0x404e14
  404dd1:	jmp    0x404e80
  404dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404de0:	mov    eax,DWORD PTR [rcx-0x8]
  404de3:	lea    edx,[rax-0x1]
  404de6:	test   eax,eax
  404de8:	mov    DWORD PTR [rcx-0x8],edx
  404deb:	jle    0x404e3c
  404ded:	mov    eax,DWORD PTR [rsi]
  404def:	mov    rcx,QWORD PTR [rbx+0x20]
  404df3:	test   eax,eax
  404df5:	jne    0x404e52
  404df7:	mov    eax,DWORD PTR [rcx-0x8]
  404dfa:	lea    edx,[rax-0x1]
  404dfd:	test   eax,eax
  404dff:	mov    DWORD PTR [rcx-0x8],edx
  404e02:	jle    0x404e60
  404e04:	mov    rcx,rbx
  404e07:	mov    rbx,rdi
  404e0a:	call   0x402d78
  404e0f:	test   rdi,rdi
  404e12:	je     0x404e80
  404e14:	mov    rdx,QWORD PTR [rbx+0x18]
  404e18:	mov    rcx,rbp
  404e1b:	call   0x404db0
  404e20:	mov    edx,DWORD PTR [rsi]
  404e22:	mov    rdi,QWORD PTR [rbx+0x10]
  404e26:	mov    rcx,QWORD PTR [rbx+0x28]
  404e2a:	test   edx,edx
  404e2c:	je     0x404de0
  404e2e:	mov    eax,0xffffffff
  404e33:	lock xadd DWORD PTR [rcx-0x8],eax
  404e38:	test   eax,eax
  404e3a:	jg     0x404ded
  404e3c:	sub    rcx,0x18
  404e40:	mov    rdx,r12
  404e43:	call   0x402e08
  404e48:	mov    eax,DWORD PTR [rsi]
  404e4a:	mov    rcx,QWORD PTR [rbx+0x20]
  404e4e:	test   eax,eax
  404e50:	je     0x404df7
  404e52:	mov    eax,0xffffffff
  404e57:	lock xadd DWORD PTR [rcx-0x8],eax
  404e5c:	test   eax,eax
  404e5e:	jg     0x404e04
  404e60:	sub    rcx,0x18
  404e64:	mov    rdx,r12
  404e67:	call   0x402e08
  404e6c:	mov    rcx,rbx
  404e6f:	mov    rbx,rdi
  404e72:	call   0x402d78
  404e77:	test   rdi,rdi
  404e7a:	jne    0x404e14
  404e7c:	nop    DWORD PTR [rax+0x0]
  404e80:	add    rsp,0x30
  404e84:	pop    rbx
  404e85:	pop    rsi
  404e86:	pop    rdi
  404e87:	pop    rbp
  404e88:	pop    r12
  404e8a:	ret    
  404e8b:	nop
  404e8c:	nop
  404e8d:	nop
  404e8e:	nop
  404e8f:	nop
  404e90:	sub    rsp,0x28
  404e94:	mov    rcx,QWORD PTR [rcx]
  404e97:	mov    rdx,QWORD PTR [rdx]
  404e9a:	xor    eax,eax
  404e9c:	mov    r8,QWORD PTR [rcx-0x18]
  404ea0:	cmp    r8,QWORD PTR [rdx-0x18]
  404ea4:	je     0x404eb0
  404ea6:	add    rsp,0x28
  404eaa:	ret    
  404eab:	nop    DWORD PTR [rax+rax*1+0x0]
  404eb0:	call   0x404428
  404eb5:	test   eax,eax
  404eb7:	sete   al
  404eba:	add    rsp,0x28
  404ebe:	ret    
  404ebf:	nop
  404ec0:	push   r15
  404ec2:	push   r14
  404ec4:	push   r13
  404ec6:	push   r12
  404ec8:	push   rbp
  404ec9:	push   rdi
  404eca:	push   rsi
  404ecb:	push   rbx
  404ecc:	sub    rsp,0x108
  404ed3:	mov    DWORD PTR [rsp+0x150],ecx
  404eda:	mov    QWORD PTR [rsp+0x158],rdx
  404ee2:	call   0x403000
  404ee7:	call   0x401ad0
  404eec:	cmp    DWORD PTR [rsp+0x150],0x1
  404ef4:	je     0x4058f4
  404efa:	jle    0x4051d0
  404f00:	lea    rax,[rsp+0xf0]
  404f08:	lea    rdi,[rsp+0x80]
  404f10:	mov    ebp,0x1
  404f15:	mov    QWORD PTR [rsp+0x38],rax
  404f1a:	lea    rax,[rsp+0xd0]
  404f22:	mov    QWORD PTR [rsp+0x50],rax
  404f27:	lea    rax,[rsp+0xb0]
  404f2f:	mov    QWORD PTR [rsp+0x58],rax
  404f34:	mov    rax,QWORD PTR [rip+0x3645]        # 0x408580
  404f3b:	mov    QWORD PTR [rsp+0x68],rax
  404f40:	mov    QWORD PTR [rsp+0x60],rax
  404f45:	mov    QWORD PTR [rsp+0x48],rax
  404f4a:	nop    WORD PTR [rax+rax*1+0x0]
  404f50:	mov    rsi,QWORD PTR [rsp+0x158]
  404f58:	movsxd rax,ebp
  404f5b:	mov    r8,QWORD PTR [rsp+0x38]
  404f60:	mov    rcx,rdi
  404f63:	lea    rbx,[rax*8+0x0]
  404f6b:	mov    rdx,QWORD PTR [rsi+rax*8]
  404f6f:	call   0x402dd0
  404f74:	lea    rdx,[rip+0x2c2d]        # 0x407ba8
  404f7b:	mov    rcx,rdi
  404f7e:	call   0x402e40
  404f83:	test   eax,eax
  404f85:	je     0x404f9a
  404f87:	lea    rdx,[rip+0x2c1d]        # 0x407bab
  404f8e:	mov    rcx,rdi
  404f91:	call   0x402e40
  404f96:	test   eax,eax
  404f98:	jne    0x405000
  404f9a:	mov    rdx,QWORD PTR [rip+0x60a7]        # 0x40b048
  404fa1:	mov    rcx,QWORD PTR [rip+0x3608]        # 0x4085b0
  404fa8:	mov    r8,QWORD PTR [rdx-0x18]
  404fac:	call   0x402db0
  404fb1:	mov    rcx,rax
  404fb4:	call   0x402d88
  404fb9:	mov    rdx,QWORD PTR [rip+0x6080]        # 0x40b040
  404fc0:	mov    rcx,QWORD PTR [rip+0x35e9]        # 0x4085b0
  404fc7:	mov    r8,QWORD PTR [rdx-0x18]
  404fcb:	call   0x402db0
  404fd0:	xor    ebx,ebx
  404fd2:	mov    rax,QWORD PTR [rsp+0x80]
  404fda:	mov    rdx,QWORD PTR [rsp+0x38]
  404fdf:	lea    rcx,[rax-0x18]
  404fe3:	call   0x402e00
  404fe8:	mov    eax,ebx
  404fea:	add    rsp,0x108
  404ff1:	pop    rbx
  404ff2:	pop    rsi
  404ff3:	pop    rdi
  404ff4:	pop    rbp
  404ff5:	pop    r12
  404ff7:	pop    r13
  404ff9:	pop    r14
  404ffb:	pop    r15
  404ffd:	ret    
  404ffe:	xchg   ax,ax
  405000:	lea    rdx,[rip+0x2ba7]        # 0x407bae
  405007:	mov    rcx,rdi
  40500a:	call   0x402e40
  40500f:	test   eax,eax
  405011:	je     0x404f9a
  405013:	lea    rdx,[rip+0x2bea]        # 0x407c04
  40501a:	mov    rcx,rdi
  40501d:	call   0x402e40
  405022:	test   eax,eax
  405024:	jne    0x4051e0
  40502a:	lea    rax,[rsp+0x90]
  405032:	lea    r8,[rsp+0xe0]
  40503a:	lea    rdx,[rip+0x282d]        # 0x40786e
  405041:	mov    rcx,rax
  405044:	mov    QWORD PTR [rsp+0x40],rax
  405049:	call   0x402dd0
  40504e:	mov    r14,QWORD PTR [rip+0x601b]        # 0x40b070
  405055:	test   r14,r14
  405058:	je     0x405874
  40505e:	mov    rsi,QWORD PTR [rsp+0x90]
  405066:	lea    r12,[rip+0x5ffb]        # 0x40b068
  40506d:	mov    rbx,r12
  405070:	mov    r13,QWORD PTR [rsi-0x18]
  405074:	jmp    0x405093
  405076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405080:	mov    eax,r15d
  405083:	test   eax,eax
  405085:	js     0x4050c6
  405087:	mov    rbx,r14
  40508a:	mov    r14,QWORD PTR [r14+0x10]
  40508e:	test   r14,r14
  405091:	je     0x4050cf
  405093:	mov    rcx,QWORD PTR [r14+0x20]
  405097:	mov    r8,r13
  40509a:	mov    rdx,rsi
  40509d:	mov    r15,QWORD PTR [rcx-0x18]
  4050a1:	cmp    r15,r13
  4050a4:	cmovbe r8,r15
  4050a8:	call   0x404428
  4050ad:	test   eax,eax
  4050af:	jne    0x405083
  4050b1:	sub    r15,r13
  4050b4:	cmp    r15,0x7fffffff
  4050bb:	jg     0x405087
  4050bd:	cmp    r15,0xffffffff80000000
  4050c4:	jge    0x405080
  4050c6:	mov    r14,QWORD PTR [r14+0x18]
  4050ca:	test   r14,r14
  4050cd:	jne    0x405093
  4050cf:	cmp    rbx,r12
  4050d2:	mov    r15,rbx
  4050d5:	je     0x405540
  4050db:	mov    rdx,QWORD PTR [rbx+0x20]
  4050df:	mov    r8,r13
  4050e2:	mov    rcx,rsi
  4050e5:	mov    r12,QWORD PTR [rdx-0x18]
  4050e9:	cmp    r12,r13
  4050ec:	cmovbe r8,r12
  4050f0:	call   0x404428
  4050f5:	test   eax,eax
  4050f7:	jne    0x405118
  4050f9:	mov    r10,r13
  4050fc:	sub    r10,r12
  4050ff:	cmp    r10,0x7fffffff
  405106:	jg     0x405120
  405108:	cmp    r10,0xffffffff80000000
  40510f:	jl     0x405543
  405115:	mov    eax,r10d
  405118:	test   eax,eax
  40511a:	js     0x405543
  405120:	mov    rax,rbx
  405123:	mov    rdx,QWORD PTR [rax+0x28]
  405127:	mov    rcx,QWORD PTR [rip+0x3482]        # 0x4085b0
  40512e:	mov    r8,QWORD PTR [rdx-0x18]
  405132:	call   0x402db0
  405137:	mov    rsi,rax
  40513a:	mov    rax,QWORD PTR [rax]
  40513d:	mov    rax,QWORD PTR [rax-0x18]
  405141:	mov    rbx,QWORD PTR [rsi+rax*1+0xf0]
  405149:	test   rbx,rbx
  40514c:	je     0x4059d9
  405152:	cmp    BYTE PTR [rbx+0x38],0x0
  405156:	je     0x405580
  40515c:	movsx  edx,BYTE PTR [rbx+0x43]
  405160:	mov    rcx,rsi
  405163:	call   0x402e30
  405168:	mov    rcx,rax
  40516b:	call   0x402e28
  405170:	mov    rax,QWORD PTR [rsp+0x48]
  405175:	mov    rcx,QWORD PTR [rsp+0x90]
  40517d:	mov    r9d,DWORD PTR [rax]
  405180:	mov    rbx,rax
  405183:	test   r9d,r9d
  405186:	jne    0x4055b1
  40518c:	mov    eax,DWORD PTR [rcx-0x8]
  40518f:	lea    edx,[rax-0x1]
  405192:	test   eax,eax
  405194:	mov    DWORD PTR [rcx-0x8],edx
  405197:	jle    0x4055c3
  40519d:	mov    eax,DWORD PTR [rbx]
  40519f:	mov    rcx,QWORD PTR [rsp+0x80]
  4051a7:	test   eax,eax
  4051a9:	jne    0x405380
  4051af:	mov    eax,DWORD PTR [rcx-0x8]
  4051b2:	lea    edx,[rax-0x1]
  4051b5:	test   eax,eax
  4051b7:	mov    DWORD PTR [rcx-0x8],edx
  4051ba:	jle    0x405392
  4051c0:	add    ebp,0x1
  4051c3:	cmp    DWORD PTR [rsp+0x150],ebp
  4051ca:	jg     0x404f50
  4051d0:	xor    ebx,ebx
  4051d2:	jmp    0x404fe8
  4051d7:	nop    WORD PTR [rax+rax*1+0x0]
  4051e0:	lea    rdx,[rip+0x29ce]        # 0x407bb5
  4051e7:	mov    rcx,rdi
  4051ea:	call   0x402e40
  4051ef:	test   eax,eax
  4051f1:	jne    0x4053a5
  4051f7:	lea    rax,[rsp+0xa0]
  4051ff:	lea    r8,[rsp+0xe0]
  405207:	lea    rdx,[rip+0x26e3]        # 0x4078f1
  40520e:	mov    rcx,rax
  405211:	mov    QWORD PTR [rsp+0x40],rax
  405216:	call   0x402dd0
  40521b:	mov    r14,QWORD PTR [rip+0x5e4e]        # 0x40b070
  405222:	test   r14,r14
  405225:	je     0x4058d0
  40522b:	mov    rsi,QWORD PTR [rsp+0xa0]
  405233:	lea    r12,[rip+0x5e2e]        # 0x40b068
  40523a:	mov    rbx,r12
  40523d:	mov    r13,QWORD PTR [rsi-0x18]
  405241:	jmp    0x405256
  405243:	mov    eax,r15d
  405246:	test   eax,eax
  405248:	js     0x405289
  40524a:	mov    rbx,r14
  40524d:	mov    r14,QWORD PTR [r14+0x10]
  405251:	test   r14,r14
  405254:	je     0x405292
  405256:	mov    rcx,QWORD PTR [r14+0x20]
  40525a:	mov    r8,r13
  40525d:	mov    rdx,rsi
  405260:	mov    r15,QWORD PTR [rcx-0x18]
  405264:	cmp    r15,r13
  405267:	cmovbe r8,r15
  40526b:	call   0x404428
  405270:	test   eax,eax
  405272:	jne    0x405246
  405274:	sub    r15,r13
  405277:	cmp    r15,0x7fffffff
  40527e:	jg     0x40524a
  405280:	cmp    r15,0xffffffff80000000
  405287:	jge    0x405243
  405289:	mov    r14,QWORD PTR [r14+0x18]
  40528d:	test   r14,r14
  405290:	jne    0x405256
  405292:	cmp    rbx,r12
  405295:	mov    r15,rbx
  405298:	je     0x405611
  40529e:	mov    rdx,QWORD PTR [rbx+0x20]
  4052a2:	mov    r8,r13
  4052a5:	mov    rcx,rsi
  4052a8:	mov    r12,QWORD PTR [rdx-0x18]
  4052ac:	cmp    r12,r13
  4052af:	cmovbe r8,r12
  4052b3:	call   0x404428
  4052b8:	test   eax,eax
  4052ba:	jne    0x4052db
  4052bc:	mov    r10,r13
  4052bf:	sub    r10,r12
  4052c2:	cmp    r10,0x7fffffff
  4052c9:	jg     0x4052e3
  4052cb:	cmp    r10,0xffffffff80000000
  4052d2:	jl     0x405614
  4052d8:	mov    eax,r10d
  4052db:	test   eax,eax
  4052dd:	js     0x405614
  4052e3:	mov    rax,rbx
  4052e6:	mov    rdx,QWORD PTR [rax+0x28]
  4052ea:	mov    rcx,QWORD PTR [rip+0x32bf]        # 0x4085b0
  4052f1:	mov    r8,QWORD PTR [rdx-0x18]
  4052f5:	call   0x402db0
  4052fa:	mov    rsi,rax
  4052fd:	mov    rax,QWORD PTR [rax]
  405300:	mov    rax,QWORD PTR [rax-0x18]
  405304:	mov    rbx,QWORD PTR [rsi+rax*1+0xf0]
  40530c:	test   rbx,rbx
  40530f:	je     0x4059b9
  405315:	cmp    BYTE PTR [rbx+0x38],0x0
  405319:	je     0x4055e0
  40531f:	movsx  edx,BYTE PTR [rbx+0x43]
  405323:	mov    rcx,rsi
  405326:	call   0x402e30
  40532b:	mov    rcx,rax
  40532e:	call   0x402e28
  405333:	mov    rax,QWORD PTR [rsp+0x60]
  405338:	mov    rdx,QWORD PTR [rsp+0xa0]
  405340:	mov    r8d,DWORD PTR [rax]
  405343:	mov    rbx,rax
  405346:	test   r8d,r8d
  405349:	jne    0x405531
  40534f:	mov    eax,DWORD PTR [rdx-0x8]
  405352:	lea    ecx,[rax-0x1]
  405355:	mov    DWORD PTR [rdx-0x8],ecx
  405358:	test   eax,eax
  40535a:	jg     0x40519d
  405360:	lea    rcx,[rdx-0x18]
  405364:	mov    rdx,QWORD PTR [rsp+0x38]
  405369:	call   0x402e08
  40536e:	mov    eax,DWORD PTR [rbx]
  405370:	mov    rcx,QWORD PTR [rsp+0x80]
  405378:	test   eax,eax
  40537a:	je     0x4051af
  405380:	mov    eax,0xffffffff
  405385:	lock xadd DWORD PTR [rcx-0x8],eax
  40538a:	test   eax,eax
  40538c:	jg     0x4051c0
  405392:	mov    rdx,QWORD PTR [rsp+0x38]
  405397:	sub    rcx,0x18
  40539b:	call   0x402e08
  4053a0:	jmp    0x4051c0
  4053a5:	lea    rdx,[rip+0x2818]        # 0x407bc4
  4053ac:	mov    rcx,rdi
  4053af:	call   0x402e40
  4053b4:	test   eax,eax
  4053b6:	jne    0x405660
  4053bc:	mov    r8,QWORD PTR [rsp+0x50]
  4053c1:	mov    rcx,QWORD PTR [rsp+0x58]
  4053c6:	lea    rdx,[rip+0x1ce7]        # 0x4070b4
  4053cd:	call   0x402dd0
  4053d2:	mov    r15,QWORD PTR [rip+0x5c97]        # 0x40b070
  4053d9:	test   r15,r15
  4053dc:	je     0x4058dc
  4053e2:	mov    rsi,QWORD PTR [rsp+0xb0]
  4053ea:	lea    r12,[rip+0x5c77]        # 0x40b068
  4053f1:	mov    rbx,r12
  4053f4:	mov    r13,QWORD PTR [rsi-0x18]
  4053f8:	jmp    0x405413
  4053fa:	nop    WORD PTR [rax+rax*1+0x0]
  405400:	mov    eax,r14d
  405403:	test   eax,eax
  405405:	js     0x405446
  405407:	mov    rbx,r15
  40540a:	mov    r15,QWORD PTR [r15+0x10]
  40540e:	test   r15,r15
  405411:	je     0x40544f
  405413:	mov    rcx,QWORD PTR [r15+0x20]
  405417:	mov    r8,r13
  40541a:	mov    rdx,rsi
  40541d:	mov    r14,QWORD PTR [rcx-0x18]
  405421:	cmp    r14,r13
  405424:	cmovbe r8,r14
  405428:	call   0x404428
  40542d:	test   eax,eax
  40542f:	jne    0x405403
  405431:	sub    r14,r13
  405434:	cmp    r14,0x7fffffff
  40543b:	jg     0x405407
  40543d:	cmp    r14,0xffffffff80000000
  405444:	jge    0x405400
  405446:	mov    r15,QWORD PTR [r15+0x18]
  40544a:	test   r15,r15
  40544d:	jne    0x405413
  40544f:	cmp    rbx,r12
  405452:	je     0x405496
  405454:	mov    rdx,QWORD PTR [rbx+0x20]
  405458:	mov    r8,r13
  40545b:	mov    rcx,rsi
  40545e:	mov    r12,QWORD PTR [rdx-0x18]
  405462:	cmp    r12,r13
  405465:	cmovbe r8,r12
  405469:	call   0x404428
  40546e:	test   eax,eax
  405470:	jne    0x40564e
  405476:	mov    r9,r13
  405479:	sub    r9,r12
  40547c:	cmp    r9,0x7fffffff
  405483:	jg     0x405656
  405489:	cmp    r9,0xffffffff80000000
  405490:	jge    0x40564b
  405496:	mov    rax,QWORD PTR [rsp+0x58]
  40549b:	lea    r9,[rsp+0xe0]
  4054a3:	lea    r8,[rip+0x2e40]        # 0x4082ea
  4054aa:	lea    rcx,[rip+0x5baf]        # 0x40b060
  4054b1:	mov    rdx,rbx
  4054b4:	mov    QWORD PTR [rsp+0xe0],rax
  4054bc:	lea    rax,[rsp+0x7e]
  4054c1:	mov    QWORD PTR [rsp+0x20],rax
  4054c6:	call   0x404750
  4054cb:	mov    rdx,QWORD PTR [rax+0x28]
  4054cf:	mov    rcx,QWORD PTR [rip+0x30da]        # 0x4085b0
  4054d6:	mov    r8,QWORD PTR [rdx-0x18]
  4054da:	call   0x402db0
  4054df:	mov    rsi,rax
  4054e2:	mov    rax,QWORD PTR [rax]
  4054e5:	mov    rax,QWORD PTR [rax-0x18]
  4054e9:	mov    rbx,QWORD PTR [rsi+rax*1+0xf0]
  4054f1:	test   rbx,rbx
  4054f4:	je     0x405999
  4054fa:	cmp    BYTE PTR [rbx+0x38],0x0
  4054fe:	je     0x405816
  405504:	movsx  edx,BYTE PTR [rbx+0x43]
  405508:	mov    rcx,rsi
  40550b:	call   0x402e30
  405510:	mov    rcx,rax
  405513:	call   0x402e28
  405518:	mov    rbx,QWORD PTR [rip+0x3061]        # 0x408580
  40551f:	mov    rdx,QWORD PTR [rsp+0xb0]
  405527:	mov    ecx,DWORD PTR [rbx]
  405529:	test   ecx,ecx
  40552b:	je     0x40534f
  405531:	mov    eax,0xffffffff
  405536:	lock xadd DWORD PTR [rdx-0x8],eax
  40553b:	jmp    0x405358
  405540:	mov    r15,r12
  405543:	mov    rax,QWORD PTR [rsp+0x40]
  405548:	lea    r9,[rsp+0xc0]
  405550:	lea    r8,[rip+0x2d93]        # 0x4082ea
  405557:	lea    rcx,[rip+0x5b02]        # 0x40b060
  40555e:	mov    rdx,r15
  405561:	mov    QWORD PTR [rsp+0xc0],rax
  405569:	lea    rax,[rsp+0x7c]
  40556e:	mov    QWORD PTR [rsp+0x20],rax
  405573:	call   0x404750
  405578:	jmp    0x405123
  40557d:	nop    DWORD PTR [rax]
  405580:	mov    rcx,rbx
  405583:	call   0x402e38
  405588:	mov    rax,QWORD PTR [rbx]
  40558b:	lea    rcx,[rip+0xffffffffffffeffe]        # 0x404590
  405592:	mov    edx,0xa
  405597:	mov    rax,QWORD PTR [rax+0x30]
  40559b:	cmp    rax,rcx
  40559e:	je     0x405160
  4055a4:	mov    rcx,rbx
  4055a7:	call   rax
  4055a9:	movsx  edx,al
  4055ac:	jmp    0x405160
  4055b1:	mov    eax,0xffffffff
  4055b6:	lock xadd DWORD PTR [rcx-0x8],eax
  4055bb:	test   eax,eax
  4055bd:	jg     0x40519d
  4055c3:	mov    rdx,QWORD PTR [rsp+0x38]
  4055c8:	sub    rcx,0x18
  4055cc:	call   0x402e08
  4055d1:	jmp    0x40519d
  4055d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055e0:	mov    rcx,rbx
  4055e3:	call   0x402e38
  4055e8:	mov    rax,QWORD PTR [rbx]
  4055eb:	lea    rcx,[rip+0xffffffffffffef9e]        # 0x404590
  4055f2:	mov    edx,0xa
  4055f7:	mov    rax,QWORD PTR [rax+0x30]
  4055fb:	cmp    rax,rcx
  4055fe:	je     0x405323
  405604:	mov    rcx,rbx
  405607:	call   rax
  405609:	movsx  edx,al
  40560c:	jmp    0x405323
  405611:	mov    r15,r12
  405614:	mov    rax,QWORD PTR [rsp+0x40]
  405619:	mov    r9,QWORD PTR [rsp+0x50]
  40561e:	lea    r8,[rip+0x2cc5]        # 0x4082ea
  405625:	lea    rcx,[rip+0x5a34]        # 0x40b060
  40562c:	mov    rdx,r15
  40562f:	mov    QWORD PTR [rsp+0xd0],rax
  405637:	lea    rax,[rsp+0x7d]
  40563c:	mov    QWORD PTR [rsp+0x20],rax
  405641:	call   0x404750
  405646:	jmp    0x4052e6
  40564b:	mov    eax,r9d
  40564e:	test   eax,eax
  405650:	js     0x405496
  405656:	mov    rax,rbx
  405659:	jmp    0x4054cb
  40565e:	xchg   ax,ax
  405660:	lea    rdx,[rip+0x2560]        # 0x407bc7
  405667:	mov    rcx,rdi
  40566a:	call   0x402e40
  40566f:	test   eax,eax
  405671:	je     0x4053bc
  405677:	lea    rdx,[rip+0x2593]        # 0x407c11
  40567e:	mov    rcx,rdi
  405681:	call   0x402e40
  405686:	test   eax,eax
  405688:	jne    0x405880
  40568e:	mov    eax,DWORD PTR [rsp+0x150]
  405695:	sub    eax,0x1
  405698:	cmp    eax,ebp
  40569a:	jle    0x40591d
  4056a0:	mov    rax,QWORD PTR [rsp+0x158]
  4056a8:	add    ebp,0x1
  4056ab:	mov    rbx,QWORD PTR [rax+rbx*1+0x8]
  4056b0:	mov    rcx,rbx
  4056b3:	call   0x404410
  4056b8:	mov    rdx,rbx
  4056bb:	mov    r8,rax
  4056be:	mov    rcx,rdi
  4056c1:	call   0x402de8
  4056c6:	mov    r15,QWORD PTR [rip+0x59a3]        # 0x40b070
  4056cd:	test   r15,r15
  4056d0:	je     0x4058e8
  4056d6:	mov    rsi,QWORD PTR [rsp+0x80]
  4056de:	lea    r12,[rip+0x5983]        # 0x40b068
  4056e5:	mov    rbx,r12
  4056e8:	mov    r13,QWORD PTR [rsi-0x18]
  4056ec:	jmp    0x405703
  4056ee:	xchg   ax,ax
  4056f0:	mov    eax,r14d
  4056f3:	test   eax,eax
  4056f5:	js     0x405736
  4056f7:	mov    rbx,r15
  4056fa:	mov    r15,QWORD PTR [r15+0x10]
  4056fe:	test   r15,r15
  405701:	je     0x40573f
  405703:	mov    rcx,QWORD PTR [r15+0x20]
  405707:	mov    r8,r13
  40570a:	mov    rdx,rsi
  40570d:	mov    r14,QWORD PTR [rcx-0x18]
  405711:	cmp    r14,r13
  405714:	cmovbe r8,r14
  405718:	call   0x404428
  40571d:	test   eax,eax
  40571f:	jne    0x4056f3
  405721:	sub    r14,r13
  405724:	cmp    r14,0x7fffffff
  40572b:	jg     0x4056f7
  40572d:	cmp    r14,0xffffffff80000000
  405734:	jge    0x4056f0
  405736:	mov    r15,QWORD PTR [r15+0x18]
  40573a:	test   r15,r15
  40573d:	jne    0x405703
  40573f:	cmp    rbx,r12
  405742:	je     0x405786
  405744:	mov    rdx,QWORD PTR [rbx+0x20]
  405748:	mov    r8,r13
  40574b:	mov    rcx,rsi
  40574e:	mov    r12,QWORD PTR [rdx-0x18]
  405752:	cmp    r12,r13
  405755:	cmovbe r8,r12
  405759:	call   0x404428
  40575e:	test   eax,eax
  405760:	jne    0x405809
  405766:	mov    r9,r13
  405769:	sub    r9,r12
  40576c:	cmp    r9,0x7fffffff
  405773:	jg     0x405811
  405779:	cmp    r9,0xffffffff80000000
  405780:	jge    0x405806
  405786:	lea    rax,[rsp+0x7f]
  40578b:	mov    r9,QWORD PTR [rsp+0x38]
  405790:	lea    r8,[rip+0x2b53]        # 0x4082ea
  405797:	lea    rcx,[rip+0x58c2]        # 0x40b060
  40579e:	mov    rdx,rbx
  4057a1:	mov    QWORD PTR [rsp+0xf0],rdi
  4057a9:	mov    QWORD PTR [rsp+0x20],rax
  4057ae:	call   0x4048c0
  4057b3:	mov    rdx,QWORD PTR [rax+0x28]
  4057b7:	mov    rcx,QWORD PTR [rip+0x2df2]        # 0x4085b0
  4057be:	mov    r8,QWORD PTR [rdx-0x18]
  4057c2:	call   0x402db0
  4057c7:	mov    rsi,rax
  4057ca:	mov    rax,QWORD PTR [rax]
  4057cd:	mov    rax,QWORD PTR [rax-0x18]
  4057d1:	mov    rbx,QWORD PTR [rsi+rax*1+0xf0]
  4057d9:	test   rbx,rbx
  4057dc:	je     0x40598f
  4057e2:	cmp    BYTE PTR [rbx+0x38],0x0
  4057e6:	je     0x405847
  4057e8:	movsx  edx,BYTE PTR [rbx+0x43]
  4057ec:	mov    rcx,rsi
  4057ef:	call   0x402e30
  4057f4:	mov    rcx,rax
  4057f7:	call   0x402e28
  4057fc:	mov    rbx,QWORD PTR [rsp+0x68]
  405801:	jmp    0x40519d
  405806:	mov    eax,r9d
  405809:	test   eax,eax
  40580b:	js     0x405786
  405811:	mov    rax,rbx
  405814:	jmp    0x4057b3
  405816:	mov    rcx,rbx
  405819:	call   0x402e38
  40581e:	mov    rax,QWORD PTR [rbx]
  405821:	lea    rcx,[rip+0xffffffffffffed68]        # 0x404590
  405828:	mov    edx,0xa
  40582d:	mov    rax,QWORD PTR [rax+0x30]
  405831:	cmp    rax,rcx
  405834:	je     0x405508
  40583a:	mov    rcx,rbx
  40583d:	call   rax
  40583f:	movsx  edx,al
  405842:	jmp    0x405508
  405847:	mov    rcx,rbx
  40584a:	call   0x402e38
  40584f:	mov    rax,QWORD PTR [rbx]
  405852:	lea    rcx,[rip+0xffffffffffffed37]        # 0x404590
  405859:	mov    edx,0xa
  40585e:	mov    rax,QWORD PTR [rax+0x30]
  405862:	cmp    rax,rcx
  405865:	je     0x4057ec
  405867:	mov    rcx,rbx
  40586a:	call   rax
  40586c:	movsx  edx,al
  40586f:	jmp    0x4057ec
  405874:	lea    r15,[rip+0x57ed]        # 0x40b068
  40587b:	jmp    0x405543
  405880:	lea    rdx,[rip+0x234a]        # 0x407bd1
  405887:	mov    rcx,rdi
  40588a:	call   0x402e40
  40588f:	test   eax,eax
  405891:	je     0x40568e
  405897:	mov    rcx,QWORD PTR [rip+0x2d02]        # 0x4085a0
  40589e:	lea    rdx,[rip+0x2373]        # 0x407c18
  4058a5:	call   0x402d80
  4058aa:	mov    rdx,QWORD PTR [rsp+0x80]
  4058b2:	mov    rcx,rax
  4058b5:	mov    r8,QWORD PTR [rdx-0x18]
  4058b9:	call   0x402db0
  4058be:	mov    rcx,rax
  4058c1:	call   0x402d88
  4058c6:	mov    ebx,0x1
  4058cb:	jmp    0x404fd2
  4058d0:	lea    r15,[rip+0x5791]        # 0x40b068
  4058d7:	jmp    0x405614
  4058dc:	lea    rbx,[rip+0x5785]        # 0x40b068
  4058e3:	jmp    0x405496
  4058e8:	lea    rbx,[rip+0x5779]        # 0x40b068
  4058ef:	jmp    0x405786
  4058f4:	mov    rdx,QWORD PTR [rip+0x574d]        # 0x40b048
  4058fb:	mov    rcx,QWORD PTR [rip+0x2cae]        # 0x4085b0
  405902:	mov    ebx,0x1
  405907:	mov    r8,QWORD PTR [rdx-0x18]
  40590b:	call   0x402db0
  405910:	mov    rcx,rax
  405913:	call   0x402d88
  405918:	jmp    0x404fe8
  40591d:	mov    rcx,QWORD PTR [rip+0x2c7c]        # 0x4085a0
  405924:	lea    rdx,[rip+0x22ae]        # 0x407bd9
  40592b:	call   0x402d80
  405930:	mov    rdx,QWORD PTR [rsp+0x80]
  405938:	mov    rcx,rax
  40593b:	mov    r8,QWORD PTR [rdx-0x18]
  40593f:	call   0x402db0
  405944:	lea    rdx,[rip+0x229e]        # 0x407be9
  40594b:	mov    rcx,rax
  40594e:	call   0x402d80
  405953:	jmp    0x4058be
  405958:	mov    rbx,rax
  40595b:	mov    rax,QWORD PTR [rsp+0x90]
  405963:	mov    rdx,QWORD PTR [rsp+0x38]
  405968:	lea    rcx,[rax-0x18]
  40596c:	call   0x402e00
  405971:	mov    rax,QWORD PTR [rsp+0x80]
  405979:	lea    rdx,[rsp+0x7b]
  40597e:	lea    rcx,[rax-0x18]
  405982:	call   0x402e00
  405987:	mov    rcx,rbx
  40598a:	call   0x4043b0
  40598f:	call   0x402da8
  405994:	mov    rbx,rax
  405997:	jmp    0x405971
  405999:	call   0x402da8
  40599e:	mov    rbx,rax
  4059a1:	mov    rax,QWORD PTR [rsp+0xb0]
  4059a9:	mov    rdx,QWORD PTR [rsp+0x38]
  4059ae:	lea    rcx,[rax-0x18]
  4059b2:	call   0x402e00
  4059b7:	jmp    0x405971
  4059b9:	call   0x402da8
  4059be:	mov    rbx,rax
  4059c1:	mov    rax,QWORD PTR [rsp+0xa0]
  4059c9:	mov    rdx,QWORD PTR [rsp+0x38]
  4059ce:	lea    rcx,[rax-0x18]
  4059d2:	call   0x402e00
  4059d7:	jmp    0x405971
  4059d9:	call   0x402da8
  4059de:	nop
  4059df:	nop
  4059e0:	push   rbx
  4059e1:	sub    rsp,0x30
  4059e5:	lea    rcx,[rip+0x56a4]        # 0x40b090
  4059ec:	lea    rbx,[rsp+0x2f]
  4059f1:	call   0x402dc0
  4059f6:	lea    rcx,[rip+0xffffffffffffbf03]        # 0x401900
  4059fd:	call   0x402f40
  405a02:	lea    rax,[rip+0x565f]        # 0x40b068
  405a09:	lea    rcx,[rip+0xffffffffffffc0a0]        # 0x401ab0
  405a10:	mov    DWORD PTR [rip+0x564e],0x0        # 0x40b068
  405a1a:	mov    QWORD PTR [rip+0x564b],0x0        # 0x40b070
  405a25:	mov    QWORD PTR [rip+0x5658],0x0        # 0x40b088
  405a30:	mov    QWORD PTR [rip+0x5641],rax        # 0x40b078
  405a37:	mov    QWORD PTR [rip+0x5642],rax        # 0x40b080
  405a3e:	call   0x402f40
  405a43:	lea    rdx,[rip+0x21f6]        # 0x407c40
  405a4a:	lea    rcx,[rip+0x55f7]        # 0x40b048
  405a51:	mov    r8,rbx
  405a54:	call   0x402dd0
  405a59:	lea    rcx,[rip+0xffffffffffffbe40]        # 0x4018a0
  405a60:	call   0x402f40
  405a65:	lea    rdx,[rip+0x21f4]        # 0x407c60
  405a6c:	lea    rcx,[rip+0x55cd]        # 0x40b040
  405a73:	mov    r8,rbx
  405a76:	call   0x402dd0
  405a7b:	lea    rcx,[rip+0xffffffffffffbdbe]        # 0x401840
  405a82:	call   0x402f40
  405a87:	nop
  405a88:	add    rsp,0x30
  405a8c:	pop    rbx
  405a8d:	ret    
  405a8e:	nop
  405a8f:	nop
  405a90:	(bad)  
  405a91:	(bad)  
  405a92:	(bad)  
  405a93:	(bad)  
  405a94:	(bad)  
  405a95:	(bad)  
  405a96:	(bad)  
  405a97:	jmp    rax
  405a99:	pop    rcx
  405a9a:	add    BYTE PTR [rax],al
	...
  405aa5:	add    BYTE PTR [rax],al
  405aa7:	add    bh,bh
  405aa9:	(bad)  
  405aaa:	(bad)  
  405aab:	(bad)  
  405aac:	(bad)  
  405aad:	(bad)  
  405aae:	(bad)  
  405aaf:	inc    DWORD PTR [rax]
  405ab1:	add    BYTE PTR [rax],al
  405ab3:	add    BYTE PTR [rax],al
  405ab5:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000406000 <.data>:
  406000:	or     al,BYTE PTR [rax]
	...
  40600e:	add    BYTE PTR [rax],al
  406010:	push   rax
  406011:	sub    eax,0x40
	...
  40601e:	add    BYTE PTR [rax],al
  406020:	mov    al,0x5a
  406022:	add    BYTE PTR [rax],al
	...
  40602d:	add    BYTE PTR [rax],al
  40602f:	add    bh,bh
  406031:	(bad)  
  406032:	(bad)  
  406033:	(bad)  
  406034:	(bad)  
  406035:	(bad)  
  406036:	(bad)  
  406037:	inc    DWORD PTR [rax]
  406039:	add    BYTE PTR [rax],al
  40603b:	add    BYTE PTR [rax],al
  40603d:	add    BYTE PTR [rax],al
  40603f:	add    bh,bh
	...
  40604d:	add    BYTE PTR [rax],al
  40604f:	add    BYTE PTR [rdx],al
	...
  40605d:	add    BYTE PTR [rax],al
  40605f:	add    bh,bh
  406061:	(bad)  
  406062:	(bad)  
  406063:	inc    DWORD PTR [rax]
	...
  40606d:	add    BYTE PTR [rax],al
  40606f:	add    al,dl
  406071:	rex.R
  406072:	add    BYTE PTR [rax],al
  406075:	add    BYTE PTR [rax],al
  406077:	add    al,ah
  406079:	rex.R
  40607a:	add    BYTE PTR [rax],al
  40607d:	add    BYTE PTR [rax],al
  40607f:	add    BYTE PTR [rdx],dh
  406081:	movabs ds:0x2b992ddf,al
  40608a:	add    BYTE PTR [rax],al
  40608c:	add    BYTE PTR [rax],al
  40608e:	add    BYTE PTR [rax],al
  406090:	int    0x5d
  406092:	and    dl,dl
  406094:	data16 (bad) 
  406096:	(bad)  
  406097:	inc    DWORD PTR [rax]
  406099:	add    BYTE PTR [rax],al
  40609b:	add    BYTE PTR [rax],al
  40609d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000407000 <.rdata>:
  407000:	add    BYTE PTR [rdi+0x43],cl
  407003:	push   rsp
  407004:	push   r14
  407006:	rex.RB pop r15
  407008:	rex.W
  407009:	rex.WRXB
  40700a:	rex.WRB
  40700b:	add    BYTE PTR [r8+rax*1+0x5c],r11b
  407010:	(bad)  
  407011:	imul   ebp,DWORD PTR [rsi+0x5c],0x0
  407018:	(bad)  
  407019:	jae    0x40707e
  40701b:	jb     0x40707e
  40701d:	je     0x407082
  40701f:	push   0x65776a2f
  407024:	(bad)  
  407025:	ins    DWORD PTR es:[rdi],dx
  407026:	js     0x40708d
  407028:	sub    eax,0x6174636f
  40702d:	jbe    0x407094
  40702f:	(bad)  
  407030:	xor    al,0x2e
  407032:	xor    ch,BYTE PTR [rsi]
  407034:	xor    DWORD PTR [rdi],ebp
  407036:	ja     0x40706e
  407038:	xor    al,0x2d
  40703a:	xor    esi,DWORD PTR [rdx]
  40703c:	(bad)  
  40703d:	jne    0x4070b2
  40703f:	jb     0x407070
  407041:	js     0x40707b
  407043:	ss pop rdi
  407045:	ss xor al,0x2d
  407048:	ja     0x407080
  40704a:	xor    al,0x2d
  40704c:	ins    DWORD PTR es:[rdi],dx
  40704d:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  407054:	push   rax
  407055:	push   rdx
  407056:	rex.RB
  407057:	rex.RX
  407058:	rex.WB pop r8
  40705a:	add    BYTE PTR [rcx+0x50],al
  40705d:	rex.WB pop r15
  40705f:	push   rsi
  407060:	rex.RB push r10
  407062:	push   rbx
  407063:	rex.WB
  407064:	rex.WRXB
  407065:	rex.WRX add BYTE PTR [rcx+0x70],r12b
  407069:	imul   ebp,DWORD PTR [rip+0x313576],0x4f4e4143        # 0x71a5e9
  407073:	rex.WRX
  407074:	rex.WB
  407075:	rex.XB
  407076:	rex.B
  407077:	rex.WR pop rdi
  407079:	rex.W
  40707a:	rex.WRXB push r11
  40707c:	push   rsp
  40707d:	pop    rdi
  40707e:	push   rsp
  40707f:	pop    rcx
  407080:	push   rax
  407081:	add    BYTE PTR [r8+0x38],r15b
  407085:	ss pop rdi
  407087:	ss xor al,0x2d
  40708a:	ja     0x4070c2
  40708c:	xor    al,0x2d
  40708e:	ins    DWORD PTR es:[rdi],dx
  40708f:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  407096:	rex.R
  407097:	rex.RB
  407098:	rex.RX
  407099:	push   r13
  40709b:	rex.WR push rsp
  40709d:	pop    rdi
  40709e:	push   rax
  40709f:	rex.B
  4070a0:	rex.RXB
  4070a1:	rex.RB push r10
  4070a3:	add    BYTE PTR [rbp+riz*2+0x73],ch
  4070a7:	jae    0x4070a9
  4070a9:	rex.WRB
  4070aa:	rex.B
  4070ab:	rex.WRX xor QWORD PTR [rbp+0x58],r8
  4070af:	push   rsp
  4070b0:	add    BYTE PTR [rsi],ch
  4070b2:	xor    DWORD PTR [rax],eax
  4070b4:	push   rsi
  4070b5:	rex.RB push r10
  4070b7:	push   rbx
  4070b8:	rex.WB
  4070b9:	rex.WRXB
  4070ba:	rex.WRX add BYTE PTR [rsi+r13*1],r14b
  4070be:	xor    ch,BYTE PTR [rsi]
  4070c0:	xor    DWORD PTR [rax],eax
  4070c2:	add    BYTE PTR [rax],al
  4070c4:	add    BYTE PTR [rax],al
  4070c6:	add    BYTE PTR [rax],al
  4070c8:	(bad)  
  4070c9:	jae    0x40712e
  4070cb:	jb     0x40712e
  4070cd:	je     0x407132
  4070cf:	push   0x65776a2f
  4070d4:	(bad)  
  4070d5:	ins    DWORD PTR es:[rdi],dx
  4070d6:	js     0x40713d
  4070d8:	sub    eax,0x6174636f
  4070dd:	jbe    0x407144
  4070df:	(bad)  
  4070e0:	xor    al,0x2e
  4070e2:	xor    ch,BYTE PTR [rsi]
  4070e4:	xor    DWORD PTR [rdi],ebp
  4070e6:	ja     0x40711e
  4070e8:	xor    al,0x2d
  4070ea:	xor    esi,DWORD PTR [rdx]
  4070ec:	(bad)  
  4070ed:	jne    0x407162
  4070ef:	jb     0x407120
  4070f1:	js     0x40712b
  4070f3:	ss pop rdi
  4070f5:	ss xor al,0x2d
  4070f8:	ja     0x407130
  4070fa:	xor    al,0x2d
  4070fc:	ins    DWORD PTR es:[rdi],dx
  4070fd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407104:	ins    BYTE PTR es:[rdi],dx
  407105:	imul   esp,DWORD PTR [rdx+0x65],0x2f636578
  40710c:	outs   dx,DWORD PTR ds:[rsi]
  40710d:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  407111:	gs (bad) 
  407113:	xor    al,0x2e
  407115:	xor    ch,BYTE PTR [rsi]
  407117:	xor    DWORD PTR [rdi],ebp
  407119:	gs js  0x407181
  40711c:	movsxd ebp,DWORD PTR [rdi]
  40711e:	js     0x407158
  407120:	ss pop rdi
  407122:	ss xor al,0x2d
  407125:	ja     0x40715d
  407127:	xor    al,0x2d
  407129:	ins    DWORD PTR es:[rdi],dx
  40712a:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  407131:	push   r10
  407133:	rex.XB
  407134:	rex.W
  407135:	rex.WR
  407136:	rex.WB
  407137:	rex.X
  407138:	rex.R
  407139:	rex.WB push r10
  40713b:	add    BYTE PTR [rax],al
  40713d:	add    BYTE PTR [rax],al
  40713f:	add    BYTE PTR [rdi],ch
  407141:	jae    0x4071a6
  407143:	jb     0x4071a6
  407145:	je     0x4071aa
  407147:	push   0x65776a2f
  40714c:	(bad)  
  40714d:	ins    DWORD PTR es:[rdi],dx
  40714e:	js     0x4071b5
  407150:	sub    eax,0x6174636f
  407155:	jbe    0x4071bc
  407157:	(bad)  
  407158:	xor    al,0x2e
  40715a:	xor    ch,BYTE PTR [rsi]
  40715c:	xor    DWORD PTR [rdi],ebp
  40715e:	ja     0x407196
  407160:	xor    al,0x2d
  407162:	xor    esi,DWORD PTR [rdx]
  407164:	(bad)  
  407165:	jne    0x4071da
  407167:	jb     0x407198
  407169:	js     0x4071a3
  40716b:	ss pop rdi
  40716d:	ss xor al,0x2d
  407170:	ja     0x4071a8
  407172:	xor    al,0x2d
  407174:	ins    DWORD PTR es:[rdi],dx
  407175:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  40717c:	(bad)  
  40717d:	imul   ebp,DWORD PTR [rsi+0x0],0x444e4942
  407184:	rex.WB push r10
  407186:	add    BYTE PTR [rax],al
  407188:	(bad)  
  407189:	jae    0x4071ee
  40718b:	jb     0x4071ee
  40718d:	je     0x4071f2
  40718f:	push   0x65776a2f
  407194:	(bad)  
  407195:	ins    DWORD PTR es:[rdi],dx
  407196:	js     0x4071fd
  407198:	sub    eax,0x6174636f
  40719d:	jbe    0x407204
  40719f:	(bad)  
  4071a0:	xor    al,0x2e
  4071a2:	xor    ch,BYTE PTR [rsi]
  4071a4:	xor    DWORD PTR [rdi],ebp
  4071a6:	ja     0x4071de
  4071a8:	xor    al,0x2d
  4071aa:	xor    esi,DWORD PTR [rdx]
  4071ac:	(bad)  
  4071ad:	jne    0x407222
  4071af:	jb     0x4071e0
  4071b1:	js     0x4071eb
  4071b3:	ss pop rdi
  4071b5:	ss xor al,0x2d
  4071b8:	ja     0x4071f0
  4071ba:	xor    al,0x2d
  4071bc:	ins    DWORD PTR es:[rdi],dx
  4071bd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4071c4:	jae    0x40722e
  4071c6:	(bad)  
  4071c7:	jb     0x40722e
  4071c9:	add    BYTE PTR [rcx+rax*2+0x54],al
  4071cd:	rex.B
  4071ce:	rex.R
  4071cf:	rex.WB push r10
  4071d1:	add    BYTE PTR [rcx+rax*2+0x54],al
  4071d5:	push   r10
  4071d7:	rex.WRXB
  4071d8:	rex.WRXB push r12
  4071da:	rex.R
  4071db:	rex.WB push r10
  4071dd:	add    BYTE PTR [rbp+0x58],al
  4071e0:	rex.RB
  4071e1:	rex.XB pop r15
  4071e3:	push   rax
  4071e4:	push   rdx
  4071e5:	rex.RB
  4071e6:	rex.RX
  4071e7:	rex.WB pop r8
  4071e9:	add    BYTE PTR [rsi],ch
  4071eb:	gs js  0x407253
  4071ee:	add    BYTE PTR [rbp+0x58],al
  4071f1:	rex.RB
  4071f2:	rex.RB pop r8
  4071f4:	push   rsp
  4071f5:	add    BYTE PTR [rax],al
  4071f7:	add    BYTE PTR [rdi],ch
  4071f9:	jae    0x40725e
  4071fb:	jb     0x40725e
  4071fd:	je     0x407262
  4071ff:	push   0x65776a2f
  407204:	(bad)  
  407205:	ins    DWORD PTR es:[rdi],dx
  407206:	js     0x40726d
  407208:	sub    eax,0x6174636f
  40720d:	jbe    0x407274
  40720f:	(bad)  
  407210:	xor    al,0x2e
  407212:	xor    ch,BYTE PTR [rsi]
  407214:	xor    DWORD PTR [rdi],ebp
  407216:	ja     0x40724e
  407218:	xor    al,0x2d
  40721a:	xor    esi,DWORD PTR [rdx]
  40721c:	(bad)  
  40721d:	jne    0x407292
  40721f:	jb     0x407250
  407221:	js     0x40725b
  407223:	ss pop rdi
  407225:	ss xor al,0x2d
  407228:	ja     0x407260
  40722a:	xor    al,0x2d
  40722c:	ins    DWORD PTR es:[rdi],dx
  40722d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407234:	jae    0x40729e
  407236:	(bad)  
  407237:	jb     0x40729e
  407239:	(bad)  
  40723a:	outs   dx,DWORD PTR ds:[rsi]
  40723b:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40723f:	gs (bad) 
  407241:	xor    al,0x2e
  407243:	xor    ch,BYTE PTR [rsi]
  407245:	xor    DWORD PTR [rdi],ebp
  407247:	ins    DWORD PTR es:[rdi],dx
  407248:	add    BYTE PTR [rsi+0x43],al
  40724b:	rex.WRX
  40724c:	rex.RX
  40724d:	rex.WB
  40724e:	rex.WR
  40724f:	rex.RB
  407250:	rex.R
  407251:	rex.WB push r10
  407253:	add    BYTE PTR [rax],al
  407255:	add    BYTE PTR [rax],al
  407257:	add    BYTE PTR [rdi],ch
  407259:	jae    0x4072be
  40725b:	jb     0x4072be
  40725d:	je     0x4072c2
  40725f:	push   0x65776a2f
  407264:	(bad)  
  407265:	ins    DWORD PTR es:[rdi],dx
  407266:	js     0x4072cd
  407268:	sub    eax,0x6174636f
  40726d:	jbe    0x4072d4
  40726f:	(bad)  
  407270:	xor    al,0x2e
  407272:	xor    ch,BYTE PTR [rsi]
  407274:	xor    DWORD PTR [rdi],ebp
  407276:	ja     0x4072ae
  407278:	xor    al,0x2d
  40727a:	xor    esi,DWORD PTR [rdx]
  40727c:	(bad)  
  40727d:	jne    0x4072f2
  40727f:	jb     0x4072b0
  407281:	js     0x4072bb
  407283:	ss pop rdi
  407285:	ss xor al,0x2d
  407288:	ja     0x4072c0
  40728a:	xor    al,0x2d
  40728c:	ins    DWORD PTR es:[rdi],dx
  40728d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407294:	jae    0x4072fe
  407296:	(bad)  
  407297:	jb     0x4072fe
  407299:	(bad)  
  40729a:	outs   dx,DWORD PTR ds:[rsi]
  40729b:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40729f:	gs (bad) 
  4072a1:	xor    al,0x2e
  4072a3:	xor    ch,BYTE PTR [rsi]
  4072a5:	xor    DWORD PTR [rdi],ebp
  4072a7:	imul   ebp,DWORD PTR [rbp+0x61],0x696c6567
  4072ae:	(bad)  
  4072af:	add    BYTE PTR [rcx+0x4d],cl
  4072b2:	rex.B
  4072b3:	rex.RXB
  4072b4:	rex.RB
  4072b5:	rex.R
  4072b6:	rex.WB push r10
	...
  4072c0:	(bad)  
  4072c1:	jae    0x407326
  4072c3:	jb     0x407326
  4072c5:	je     0x40732a
  4072c7:	push   0x65776a2f
  4072cc:	(bad)  
  4072cd:	ins    DWORD PTR es:[rdi],dx
  4072ce:	js     0x407335
  4072d0:	sub    eax,0x6174636f
  4072d5:	jbe    0x40733c
  4072d7:	(bad)  
  4072d8:	xor    al,0x2e
  4072da:	xor    ch,BYTE PTR [rsi]
  4072dc:	xor    DWORD PTR [rdi],ebp
  4072de:	ja     0x407316
  4072e0:	xor    al,0x2d
  4072e2:	xor    esi,DWORD PTR [rdx]
  4072e4:	(bad)  
  4072e5:	jne    0x40735a
  4072e7:	jb     0x407318
  4072e9:	js     0x407323
  4072eb:	ss pop rdi
  4072ed:	ss xor al,0x2d
  4072f0:	ja     0x407328
  4072f2:	xor    al,0x2d
  4072f4:	ins    DWORD PTR es:[rdi],dx
  4072f5:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4072fc:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  407303:	add    BYTE PTR [rcx+0x4e],cl
  407306:	rex.XB
  407307:	rex.WR push rbp
  407309:	rex.R
  40730a:	rex.RB
  40730b:	rex.R
  40730c:	rex.WB push r10
  40730e:	add    BYTE PTR [rax],al
  407310:	(bad)  
  407311:	jae    0x407376
  407313:	jb     0x407376
  407315:	je     0x40737a
  407317:	push   0x65776a2f
  40731c:	(bad)  
  40731d:	ins    DWORD PTR es:[rdi],dx
  40731e:	js     0x407385
  407320:	sub    eax,0x6174636f
  407325:	jbe    0x40738c
  407327:	(bad)  
  407328:	xor    al,0x2e
  40732a:	xor    ch,BYTE PTR [rsi]
  40732c:	xor    DWORD PTR [rdi],ebp
  40732e:	ja     0x407366
  407330:	xor    al,0x2d
  407332:	xor    esi,DWORD PTR [rdx]
  407334:	(bad)  
  407335:	jne    0x4073aa
  407337:	jb     0x407368
  407339:	js     0x407373
  40733b:	ss pop rdi
  40733d:	ss xor al,0x2d
  407340:	ja     0x407378
  407342:	xor    al,0x2d
  407344:	ins    DWORD PTR es:[rdi],dx
  407345:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  40734c:	jae    0x4073b6
  40734e:	(bad)  
  40734f:	jb     0x4073b6
  407351:	(bad)  
  407352:	imul   ebp,DWORD PTR [rsi+0x66],0x4e49006f
  407359:	rex.RX
  40735a:	rex.WRXB
  40735b:	rex.R
  40735c:	rex.WB push r10
  40735e:	add    BYTE PTR [rax],al
  407360:	(bad)  
  407361:	jae    0x4073c6
  407363:	jb     0x4073c6
  407365:	je     0x4073ca
  407367:	push   0x65776a2f
  40736c:	(bad)  
  40736d:	ins    DWORD PTR es:[rdi],dx
  40736e:	js     0x4073d5
  407370:	sub    eax,0x6174636f
  407375:	jbe    0x4073dc
  407377:	(bad)  
  407378:	xor    al,0x2e
  40737a:	xor    ch,BYTE PTR [rsi]
  40737c:	xor    DWORD PTR [rdi],ebp
  40737e:	ja     0x4073b6
  407380:	xor    al,0x2d
  407382:	xor    esi,DWORD PTR [rdx]
  407384:	(bad)  
  407385:	jne    0x4073fa
  407387:	jb     0x4073b8
  407389:	js     0x4073c3
  40738b:	ss pop rdi
  40738d:	ss xor al,0x2d
  407390:	ja     0x4073c8
  407392:	xor    al,0x2d
  407394:	ins    DWORD PTR es:[rdi],dx
  407395:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  40739c:	jae    0x407406
  40739e:	(bad)  
  40739f:	jb     0x407406
  4073a1:	(bad)  
  4073a2:	imul   ebp,DWORD PTR [rsi+0x66],0x636f2f6f
  4073a9:	je     0x40740c
  4073ab:	jbe    0x407412
  4073ad:	imul   ebp,DWORD PTR cs:[rsi+0x66],0x4e49006f
  4073b5:	rex.RX
  4073b6:	rex.WRXB
  4073b7:	rex.RX
  4073b8:	rex.WB
  4073b9:	rex.WR
  4073ba:	add    BYTE PTR [r8],r8b
  4073bd:	add    BYTE PTR [rax],al
  4073bf:	add    BYTE PTR [rdi],ch
  4073c1:	jae    0x407426
  4073c3:	jb     0x407426
  4073c5:	je     0x40742a
  4073c7:	push   0x65776a2f
  4073cc:	(bad)  
  4073cd:	ins    DWORD PTR es:[rdi],dx
  4073ce:	js     0x407435
  4073d0:	sub    eax,0x6174636f
  4073d5:	jbe    0x40743c
  4073d7:	(bad)  
  4073d8:	xor    al,0x2e
  4073da:	xor    ch,BYTE PTR [rsi]
  4073dc:	xor    DWORD PTR [rdi],ebp
  4073de:	ja     0x407416
  4073e0:	xor    al,0x2d
  4073e2:	xor    esi,DWORD PTR [rdx]
  4073e4:	(bad)  
  4073e5:	jne    0x40745a
  4073e7:	jb     0x407418
  4073e9:	js     0x407423
  4073eb:	ss pop rdi
  4073ed:	ss xor al,0x2d
  4073f0:	ja     0x407428
  4073f2:	xor    al,0x2d
  4073f4:	ins    DWORD PTR es:[rdi],dx
  4073f5:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4073fc:	ins    BYTE PTR es:[rdi],dx
  4073fd:	imul   esp,DWORD PTR [rdx+0x0],0x4442494c
  407404:	rex.WB push r10
  407406:	add    BYTE PTR [rax],al
  407408:	(bad)  
  407409:	jae    0x40746e
  40740b:	jb     0x40746e
  40740d:	je     0x407472
  40740f:	push   0x65776a2f
  407414:	(bad)  
  407415:	ins    DWORD PTR es:[rdi],dx
  407416:	js     0x40747d
  407418:	sub    eax,0x6174636f
  40741d:	jbe    0x407484
  40741f:	(bad)  
  407420:	xor    al,0x2e
  407422:	xor    ch,BYTE PTR [rsi]
  407424:	xor    DWORD PTR [rdi],ebp
  407426:	ja     0x40745e
  407428:	xor    al,0x2d
  40742a:	xor    esi,DWORD PTR [rdx]
  40742c:	(bad)  
  40742d:	jne    0x4074a2
  40742f:	jb     0x407460
  407431:	js     0x40746b
  407433:	ss pop rdi
  407435:	ss xor al,0x2d
  407438:	ja     0x407470
  40743a:	xor    al,0x2d
  40743c:	ins    DWORD PTR es:[rdi],dx
  40743d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407444:	ins    BYTE PTR es:[rdi],dx
  407445:	imul   esp,DWORD PTR [rdx+0x65],0x636578
  40744c:	rex.WR
  40744d:	rex.WB
  40744e:	rex.X
  40744f:	rex.RB pop r8
  407451:	rex.RB
  407452:	rex.XB
  407453:	rex.R
  407454:	rex.WB push r10
  407456:	add    BYTE PTR [rax],al
  407458:	(bad)  
  407459:	jae    0x4074be
  40745b:	jb     0x4074be
  40745d:	je     0x4074c2
  40745f:	push   0x65776a2f
  407464:	(bad)  
  407465:	ins    DWORD PTR es:[rdi],dx
  407466:	js     0x4074cd
  407468:	sub    eax,0x6174636f
  40746d:	jbe    0x4074d4
  40746f:	(bad)  
  407470:	xor    al,0x2e
  407472:	xor    ch,BYTE PTR [rsi]
  407474:	xor    DWORD PTR [rdi],ebp
  407476:	ja     0x4074ae
  407478:	xor    al,0x2d
  40747a:	xor    esi,DWORD PTR [rdx]
  40747c:	(bad)  
  40747d:	jne    0x4074f2
  40747f:	jb     0x4074b0
  407481:	js     0x4074bb
  407483:	ss pop rdi
  407485:	ss xor al,0x2d
  407488:	ja     0x4074c0
  40748a:	xor    al,0x2d
  40748c:	ins    DWORD PTR es:[rdi],dx
  40748d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407494:	ins    BYTE PTR es:[rdi],dx
  407495:	imul   esp,DWORD PTR [rdx+0x65],0x2f636578
  40749c:	outs   dx,DWORD PTR ds:[rsi]
  40749d:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  4074a1:	gs (bad) 
  4074a3:	(bad)  
  4074a4:	jo     0x40750f
  4074a6:	sub    eax,0x2f313576
  4074ab:	jae    0x407516
  4074ad:	je     0x407514
  4074af:	(bad)  
  4074b0:	gs js  0x407518
  4074b3:	movsxd ebp,DWORD PTR [rdi]
  4074b5:	js     0x4074ef
  4074b7:	ss pop rdi
  4074b9:	ss xor al,0x2d
  4074bc:	ja     0x4074f4
  4074be:	xor    al,0x2d
  4074c0:	ins    DWORD PTR es:[rdi],dx
  4074c1:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  4074c8:	rex.WR
  4074c9:	rex.WRXB
  4074ca:	rex.XB
  4074cb:	rex.B
  4074cc:	rex.WR
  4074cd:	push   r8
  4074cf:	rex.WB
  4074d0:	push   r10
  4074d2:	rex.XB
  4074d3:	rex.W
  4074d4:	rex.WR
  4074d5:	rex.WB
  4074d6:	rex.X
  4074d7:	rex.R
  4074d8:	rex.WB push r10
  4074da:	add    BYTE PTR [rax],al
  4074dc:	add    BYTE PTR [rax],al
  4074de:	add    BYTE PTR [rax],al
  4074e0:	(bad)  
  4074e1:	jae    0x407546
  4074e3:	jb     0x407546
  4074e5:	je     0x40754a
  4074e7:	push   0x65776a2f
  4074ec:	(bad)  
  4074ed:	ins    DWORD PTR es:[rdi],dx
  4074ee:	js     0x407555
  4074f0:	sub    eax,0x6174636f
  4074f5:	jbe    0x40755c
  4074f7:	(bad)  
  4074f8:	xor    al,0x2e
  4074fa:	xor    ch,BYTE PTR [rsi]
  4074fc:	xor    DWORD PTR [rdi],ebp
  4074fe:	ja     0x407536
  407500:	xor    al,0x2d
  407502:	xor    esi,DWORD PTR [rdx]
  407504:	(bad)  
  407505:	jne    0x40757a
  407507:	jb     0x407538
  407509:	js     0x407543
  40750b:	ss pop rdi
  40750d:	ss xor al,0x2d
  407510:	ja     0x407548
  407512:	xor    al,0x2d
  407514:	ins    DWORD PTR es:[rdi],dx
  407515:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  40751c:	jae    0x407586
  40751e:	(bad)  
  40751f:	jb     0x407586
  407521:	(bad)  
  407522:	outs   dx,DWORD PTR ds:[rsi]
  407523:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  407527:	gs (bad) 
  407529:	jae    0x407594
  40752b:	je     0x407592
  40752d:	(bad)  
  40752e:	(bad)  
  40752f:	jo     0x40759a
  407531:	sub    eax,0x2f313576
  407536:	ins    DWORD PTR es:[rdi],dx
  407537:	add    BYTE PTR [rdi+rcx*2+0x43],cl
  40753b:	rex.B
  40753c:	rex.WR
  40753d:	push   r8
  40753f:	rex.WB
  407540:	rex.RX
  407541:	rex.XB
  407542:	rex.WRX
  407543:	rex.RX
  407544:	rex.WB
  407545:	rex.WR
  407546:	rex.RB
  407547:	rex.R
  407548:	rex.WB push r10
  40754a:	add    BYTE PTR [rax],al
  40754c:	add    BYTE PTR [rax],al
  40754e:	add    BYTE PTR [rax],al
  407550:	(bad)  
  407551:	jae    0x4075b6
  407553:	jb     0x4075b6
  407555:	je     0x4075ba
  407557:	push   0x65776a2f
  40755c:	(bad)  
  40755d:	ins    DWORD PTR es:[rdi],dx
  40755e:	js     0x4075c5
  407560:	sub    eax,0x6174636f
  407565:	jbe    0x4075cc
  407567:	(bad)  
  407568:	xor    al,0x2e
  40756a:	xor    ch,BYTE PTR [rsi]
  40756c:	xor    DWORD PTR [rdi],ebp
  40756e:	ja     0x4075a6
  407570:	xor    al,0x2d
  407572:	xor    esi,DWORD PTR [rdx]
  407574:	(bad)  
  407575:	jne    0x4075ea
  407577:	jb     0x4075a8
  407579:	js     0x4075b3
  40757b:	ss pop rdi
  40757d:	ss xor al,0x2d
  407580:	ja     0x4075b8
  407582:	xor    al,0x2d
  407584:	ins    DWORD PTR es:[rdi],dx
  407585:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  40758c:	ins    BYTE PTR es:[rdi],dx
  40758d:	imul   esp,DWORD PTR [rdx+0x2f],0x6174636f
  407594:	jbe    0x4075fb
  407596:	(bad)  
  407597:	jae    0x407602
  407599:	je     0x407600
  40759b:	(bad)  
  40759c:	outs   dx,DWORD PTR ds:[rsi]
  40759d:	movsxd esi,DWORD PTR [rdi+rbp*1+0x61]
  4075a1:	jo     0x40760c
  4075a3:	sub    eax,0x2f313576
  4075a8:	js     0x4075e2
  4075aa:	ss pop rdi
  4075ac:	ss xor al,0x2d
  4075af:	ja     0x4075e7
  4075b1:	xor    al,0x2d
  4075b3:	ins    DWORD PTR es:[rdi],dx
  4075b4:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  4075bb:	rex.WR
  4075bc:	rex.WRXB
  4075bd:	rex.XB
  4075be:	rex.B
  4075bf:	rex.WR
  4075c0:	push   r8
  4075c2:	rex.WB
  4075c3:	rex.WRXB
  4075c4:	rex.XB push r12
  4075c6:	rex.RX
  4075c7:	rex.WB
  4075c8:	rex.WR
  4075c9:	rex.RB
  4075ca:	rex.R
  4075cb:	rex.WB push r10
  4075cd:	add    BYTE PTR [rax],al
  4075cf:	add    BYTE PTR [rdi],ch
  4075d1:	jae    0x407636
  4075d3:	jb     0x407636
  4075d5:	je     0x40763a
  4075d7:	push   0x65776a2f
  4075dc:	(bad)  
  4075dd:	ins    DWORD PTR es:[rdi],dx
  4075de:	js     0x407645
  4075e0:	sub    eax,0x6174636f
  4075e5:	jbe    0x40764c
  4075e7:	(bad)  
  4075e8:	xor    al,0x2e
  4075ea:	xor    ch,BYTE PTR [rsi]
  4075ec:	xor    DWORD PTR [rdi],ebp
  4075ee:	ja     0x407626
  4075f0:	xor    al,0x2d
  4075f2:	xor    esi,DWORD PTR [rdx]
  4075f4:	(bad)  
  4075f5:	jne    0x40766a
  4075f7:	jb     0x407628
  4075f9:	js     0x407633
  4075fb:	ss pop rdi
  4075fd:	ss xor al,0x2d
  407600:	ja     0x407638
  407602:	xor    al,0x2d
  407604:	ins    DWORD PTR es:[rdi],dx
  407605:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  40760c:	ins    BYTE PTR es:[rdi],dx
  40760d:	imul   esp,DWORD PTR [rdx+0x65],0x2f636578
  407614:	outs   dx,DWORD PTR ds:[rsi]
  407615:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  407619:	gs (bad) 
  40761b:	jae    0x407686
  40761d:	je     0x407684
  40761f:	(bad)  
  407620:	gs js  0x407688
  407623:	movsxd ebp,DWORD PTR [rdi]
  407625:	js     0x40765f
  407627:	ss pop rdi
  407629:	ss xor al,0x2d
  40762c:	ja     0x407664
  40762e:	xor    al,0x2d
  407630:	ins    DWORD PTR es:[rdi],dx
  407631:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  407638:	rex.WR
  407639:	rex.WRXB
  40763a:	rex.XB
  40763b:	rex.B
  40763c:	rex.WR
  40763d:	push   r10
  40763f:	rex.XB
  407640:	rex.W
  407641:	rex.WR
  407642:	rex.WB
  407643:	rex.X
  407644:	rex.R
  407645:	rex.WB push r10
  407647:	add    BYTE PTR [rdi],ch
  407649:	jae    0x4076ae
  40764b:	jb     0x4076ae
  40764d:	je     0x4076b2
  40764f:	push   0x65776a2f
  407654:	(bad)  
  407655:	ins    DWORD PTR es:[rdi],dx
  407656:	js     0x4076bd
  407658:	sub    eax,0x6174636f
  40765d:	jbe    0x4076c4
  40765f:	(bad)  
  407660:	xor    al,0x2e
  407662:	xor    ch,BYTE PTR [rsi]
  407664:	xor    DWORD PTR [rdi],ebp
  407666:	ja     0x40769e
  407668:	xor    al,0x2d
  40766a:	xor    esi,DWORD PTR [rdx]
  40766c:	(bad)  
  40766d:	jne    0x4076e2
  40766f:	jb     0x4076a0
  407671:	js     0x4076ab
  407673:	ss pop rdi
  407675:	ss xor al,0x2d
  407678:	ja     0x4076b0
  40767a:	xor    al,0x2d
  40767c:	ins    DWORD PTR es:[rdi],dx
  40767d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407684:	jae    0x4076ee
  407686:	(bad)  
  407687:	jb     0x4076ee
  407689:	(bad)  
  40768a:	outs   dx,DWORD PTR ds:[rsi]
  40768b:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40768f:	gs (bad) 
  407691:	jae    0x4076fc
  407693:	je     0x4076fa
  407695:	(bad)  
  407696:	ins    DWORD PTR es:[rdi],dx
  407697:	add    BYTE PTR [rdi+rcx*2+0x43],cl
  40769b:	rex.B
  40769c:	rex.WR
  40769d:	rex.RX
  40769e:	rex.XB
  40769f:	rex.WRX
  4076a0:	rex.RX
  4076a1:	rex.WB
  4076a2:	rex.WR
  4076a3:	rex.RB
  4076a4:	rex.R
  4076a5:	rex.WB push r10
  4076a7:	add    BYTE PTR [rdi],ch
  4076a9:	jae    0x40770e
  4076ab:	jb     0x40770e
  4076ad:	je     0x407712
  4076af:	push   0x65776a2f
  4076b4:	(bad)  
  4076b5:	ins    DWORD PTR es:[rdi],dx
  4076b6:	js     0x40771d
  4076b8:	sub    eax,0x6174636f
  4076bd:	jbe    0x407724
  4076bf:	(bad)  
  4076c0:	xor    al,0x2e
  4076c2:	xor    ch,BYTE PTR [rsi]
  4076c4:	xor    DWORD PTR [rdi],ebp
  4076c6:	ja     0x4076fe
  4076c8:	xor    al,0x2d
  4076ca:	xor    esi,DWORD PTR [rdx]
  4076cc:	(bad)  
  4076cd:	jne    0x407742
  4076cf:	jb     0x407700
  4076d1:	js     0x40770b
  4076d3:	ss pop rdi
  4076d5:	ss xor al,0x2d
  4076d8:	ja     0x407710
  4076da:	xor    al,0x2d
  4076dc:	ins    DWORD PTR es:[rdi],dx
  4076dd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4076e4:	ins    BYTE PTR es:[rdi],dx
  4076e5:	imul   esp,DWORD PTR [rdx+0x2f],0x6174636f
  4076ec:	jbe    0x407753
  4076ee:	(bad)  
  4076ef:	jae    0x40775a
  4076f1:	je     0x407758
  4076f3:	(bad)  
  4076f4:	outs   dx,DWORD PTR ds:[rsi]
  4076f5:	movsxd esi,DWORD PTR [rdi+rbp*1+0x78]
  4076f9:	cmp    BYTE PTR [rsi],dh
  4076fb:	pop    rdi
  4076fc:	ss xor al,0x2d
  4076ff:	ja     0x407737
  407701:	xor    al,0x2d
  407703:	ins    DWORD PTR es:[rdi],dx
  407704:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  40770b:	rex.WR
  40770c:	rex.WRXB
  40770d:	rex.XB
  40770e:	rex.B
  40770f:	rex.WR
  407710:	rex.WRXB
  407711:	rex.XB push r12
  407713:	rex.RX
  407714:	rex.WB
  407715:	rex.WR
  407716:	rex.RB
  407717:	rex.R
  407718:	rex.WB push r10
  40771a:	add    BYTE PTR [rax],al
  40771c:	add    BYTE PTR [rax],al
  40771e:	add    BYTE PTR [rax],al
  407720:	(bad)  
  407721:	jae    0x407786
  407723:	jb     0x407786
  407725:	je     0x40778a
  407727:	push   0x65776a2f
  40772c:	(bad)  
  40772d:	ins    DWORD PTR es:[rdi],dx
  40772e:	js     0x407795
  407730:	sub    eax,0x6174636f
  407735:	jbe    0x40779c
  407737:	(bad)  
  407738:	xor    al,0x2e
  40773a:	xor    ch,BYTE PTR [rsi]
  40773c:	xor    DWORD PTR [rdi],ebp
  40773e:	ja     0x407776
  407740:	xor    al,0x2d
  407742:	xor    esi,DWORD PTR [rdx]
  407744:	(bad)  
  407745:	jne    0x4077ba
  407747:	jb     0x407778
  407749:	js     0x407783
  40774b:	ss pop rdi
  40774d:	ss xor al,0x2d
  407750:	ja     0x407788
  407752:	xor    al,0x2d
  407754:	ins    DWORD PTR es:[rdi],dx
  407755:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  40775c:	jae    0x4077c6
  40775e:	(bad)  
  40775f:	jb     0x4077c6
  407761:	(bad)  
  407762:	outs   dx,DWORD PTR ds:[rsi]
  407763:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  407767:	gs (bad) 
  407769:	jae    0x4077d4
  40776b:	je     0x4077d2
  40776d:	(bad)  
  40776e:	ins    DWORD PTR es:[rdi],dx
  40776f:	(bad)  
  407770:	jae    0x4077e6
  407772:	(bad)  
  407773:	jb     0x4077e9
  407775:	jne    0x4077e7
  407777:	add    BYTE PTR [rdi+rcx*2+0x43],cl
  40777b:	rex.B
  40777c:	rex.WR push rbx
  40777e:	push   rsp
  40777f:	push   r10
  407781:	push   rsp
  407782:	push   rbp
  407783:	push   rax
  407784:	rex.RX
  407785:	rex.WB
  407786:	rex.WR
  407787:	rex.RB
  407788:	rex.R
  407789:	rex.WB push r10
  40778b:	add    BYTE PTR [rax],al
  40778d:	add    BYTE PTR [rax],al
  40778f:	add    BYTE PTR [rdi],ch
  407791:	jae    0x4077f6
  407793:	jb     0x4077f6
  407795:	je     0x4077fa
  407797:	push   0x65776a2f
  40779c:	(bad)  
  40779d:	ins    DWORD PTR es:[rdi],dx
  40779e:	js     0x407805
  4077a0:	sub    eax,0x6174636f
  4077a5:	jbe    0x40780c
  4077a7:	(bad)  
  4077a8:	xor    al,0x2e
  4077aa:	xor    ch,BYTE PTR [rsi]
  4077ac:	xor    DWORD PTR [rdi],ebp
  4077ae:	ja     0x4077e6
  4077b0:	xor    al,0x2d
  4077b2:	xor    esi,DWORD PTR [rdx]
  4077b4:	(bad)  
  4077b5:	jne    0x40782a
  4077b7:	jb     0x4077e8
  4077b9:	js     0x4077f3
  4077bb:	ss pop rdi
  4077bd:	ss xor al,0x2d
  4077c0:	ja     0x4077f8
  4077c2:	xor    al,0x2d
  4077c4:	ins    DWORD PTR es:[rdi],dx
  4077c5:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4077cc:	ins    BYTE PTR es:[rdi],dx
  4077cd:	imul   esp,DWORD PTR [rdx+0x65],0x2f636578
  4077d4:	outs   dx,DWORD PTR ds:[rsi]
  4077d5:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  4077d9:	gs (bad) 
  4077db:	xor    al,0x2e
  4077dd:	xor    ch,BYTE PTR [rsi]
  4077df:	xor    DWORD PTR [rdi],ebp
  4077e1:	jae    0x40784c
  4077e3:	je     0x40784a
  4077e5:	(bad)  
  4077e6:	gs js  0x40784e
  4077e9:	movsxd ebp,DWORD PTR [rdi]
  4077eb:	js     0x407825
  4077ed:	ss pop rdi
  4077ef:	ss xor al,0x2d
  4077f2:	ja     0x40782a
  4077f4:	xor    al,0x2d
  4077f6:	ins    DWORD PTR es:[rdi],dx
  4077f7:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  4077fe:	rex.WR
  4077ff:	rex.WRXB
  407800:	rex.XB
  407801:	rex.B
  407802:	rex.WR push rsi
  407804:	rex.RB push r10
  407806:	push   r10
  407808:	rex.XB
  407809:	rex.W
  40780a:	rex.WR
  40780b:	rex.WB
  40780c:	rex.X
  40780d:	rex.R
  40780e:	rex.WB push r10
	...
  407818:	(bad)  
  407819:	jae    0x40787e
  40781b:	jb     0x40787e
  40781d:	je     0x407882
  40781f:	push   0x65776a2f
  407824:	(bad)  
  407825:	ins    DWORD PTR es:[rdi],dx
  407826:	js     0x40788d
  407828:	sub    eax,0x6174636f
  40782d:	jbe    0x407894
  40782f:	(bad)  
  407830:	xor    al,0x2e
  407832:	xor    ch,BYTE PTR [rsi]
  407834:	xor    DWORD PTR [rdi],ebp
  407836:	ja     0x40786e
  407838:	xor    al,0x2d
  40783a:	xor    esi,DWORD PTR [rdx]
  40783c:	(bad)  
  40783d:	jne    0x4078b2
  40783f:	jb     0x407870
  407841:	js     0x40787b
  407843:	ss pop rdi
  407845:	ss xor al,0x2d
  407848:	ja     0x407880
  40784a:	xor    al,0x2d
  40784c:	ins    DWORD PTR es:[rdi],dx
  40784d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407854:	jae    0x4078be
  407856:	(bad)  
  407857:	jb     0x4078be
  407859:	(bad)  
  40785a:	outs   dx,DWORD PTR ds:[rsi]
  40785b:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  40785f:	gs (bad) 
  407861:	xor    al,0x2e
  407863:	xor    ch,BYTE PTR [rsi]
  407865:	xor    DWORD PTR [rdi],ebp
  407867:	jae    0x4078d2
  407869:	je     0x4078d0
  40786b:	(bad)  
  40786c:	ins    DWORD PTR es:[rdi],dx
  40786d:	add    BYTE PTR [rdi+rcx*2+0x43],cl
  407871:	rex.B
  407872:	rex.WR push rsi
  407874:	rex.RB push r10
  407876:	rex.RX
  407877:	rex.XB
  407878:	rex.WRX
  407879:	rex.RX
  40787a:	rex.WB
  40787b:	rex.WR
  40787c:	rex.RB
  40787d:	rex.R
  40787e:	rex.WB push r10
	...
  407888:	(bad)  
  407889:	jae    0x4078ee
  40788b:	jb     0x4078ee
  40788d:	je     0x4078f2
  40788f:	push   0x65776a2f
  407894:	(bad)  
  407895:	ins    DWORD PTR es:[rdi],dx
  407896:	js     0x4078fd
  407898:	sub    eax,0x6174636f
  40789d:	jbe    0x407904
  40789f:	(bad)  
  4078a0:	xor    al,0x2e
  4078a2:	xor    ch,BYTE PTR [rsi]
  4078a4:	xor    DWORD PTR [rdi],ebp
  4078a6:	ja     0x4078de
  4078a8:	xor    al,0x2d
  4078aa:	xor    esi,DWORD PTR [rdx]
  4078ac:	(bad)  
  4078ad:	jne    0x407922
  4078af:	jb     0x4078e0
  4078b1:	js     0x4078eb
  4078b3:	ss pop rdi
  4078b5:	ss xor al,0x2d
  4078b8:	ja     0x4078f0
  4078ba:	xor    al,0x2d
  4078bc:	ins    DWORD PTR es:[rdi],dx
  4078bd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4078c4:	ins    BYTE PTR es:[rdi],dx
  4078c5:	imul   esp,DWORD PTR [rdx+0x2f],0x6174636f
  4078cc:	jbe    0x407933
  4078ce:	(bad)  
  4078cf:	xor    al,0x2e
  4078d1:	xor    ch,BYTE PTR [rsi]
  4078d3:	xor    DWORD PTR [rdi],ebp
  4078d5:	jae    0x407940
  4078d7:	je     0x40793e
  4078d9:	(bad)  
  4078da:	outs   dx,DWORD PTR ds:[rsi]
  4078db:	movsxd esi,DWORD PTR [rdi+rbp*1+0x78]
  4078df:	cmp    BYTE PTR [rsi],dh
  4078e1:	pop    rdi
  4078e2:	ss xor al,0x2d
  4078e5:	ja     0x40791d
  4078e7:	xor    al,0x2d
  4078e9:	ins    DWORD PTR es:[rdi],dx
  4078ea:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  4078f1:	rex.WR
  4078f2:	rex.WRXB
  4078f3:	rex.XB
  4078f4:	rex.B
  4078f5:	rex.WR push rsi
  4078f7:	rex.RB push r10
  4078f9:	rex.WRXB
  4078fa:	rex.XB push r12
  4078fc:	rex.RX
  4078fd:	rex.WB
  4078fe:	rex.WR
  4078ff:	rex.RB
  407900:	rex.R
  407901:	rex.WB push r10
  407903:	add    BYTE PTR [rax],al
  407905:	add    BYTE PTR [rax],al
  407907:	add    BYTE PTR [rdi],ch
  407909:	jae    0x40796e
  40790b:	jb     0x40796e
  40790d:	je     0x407972
  40790f:	push   0x65776a2f
  407914:	(bad)  
  407915:	ins    DWORD PTR es:[rdi],dx
  407916:	js     0x40797d
  407918:	sub    eax,0x6174636f
  40791d:	jbe    0x407984
  40791f:	(bad)  
  407920:	xor    al,0x2e
  407922:	xor    ch,BYTE PTR [rsi]
  407924:	xor    DWORD PTR [rdi],ebp
  407926:	ja     0x40795e
  407928:	xor    al,0x2d
  40792a:	xor    esi,DWORD PTR [rdx]
  40792c:	(bad)  
  40792d:	jne    0x4079a2
  40792f:	jb     0x407960
  407931:	js     0x40796b
  407933:	ss pop rdi
  407935:	ss xor al,0x2d
  407938:	ja     0x407970
  40793a:	xor    al,0x2d
  40793c:	ins    DWORD PTR es:[rdi],dx
  40793d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407944:	jae    0x4079ae
  407946:	(bad)  
  407947:	jb     0x4079ae
  407949:	(bad)  
  40794a:	ins    DWORD PTR es:[rdi],dx
  40794b:	(bad)  
  40794c:	outs   dx,BYTE PTR ds:[rsi]
  40794d:	(bad)  
  40794e:	ins    DWORD PTR es:[rdi],dx
  40794f:	(bad)  
  407950:	outs   dx,BYTE PTR ds:[rsi]
  407951:	xor    DWORD PTR [rax],eax
  407953:	rex.WRB
  407954:	rex.B
  407955:	xor    QWORD PTR [rcx+r9*2+0x52],r8
  40795a:	add    BYTE PTR [rax],al
  40795c:	add    BYTE PTR [rax],al
  40795e:	add    BYTE PTR [rax],al
  407960:	(bad)  
  407961:	jae    0x4079c6
  407963:	jb     0x4079c6
  407965:	je     0x4079ca
  407967:	push   0x65776a2f
  40796c:	(bad)  
  40796d:	ins    DWORD PTR es:[rdi],dx
  40796e:	js     0x4079d5
  407970:	sub    eax,0x6174636f
  407975:	jbe    0x4079dc
  407977:	(bad)  
  407978:	xor    al,0x2e
  40797a:	xor    ch,BYTE PTR [rsi]
  40797c:	xor    DWORD PTR [rdi],ebp
  40797e:	ja     0x4079b6
  407980:	xor    al,0x2d
  407982:	xor    esi,DWORD PTR [rdx]
  407984:	(bad)  
  407985:	jne    0x4079fa
  407987:	jb     0x4079b8
  407989:	js     0x4079c3
  40798b:	ss pop rdi
  40798d:	ss xor al,0x2d
  407990:	ja     0x4079c8
  407992:	xor    al,0x2d
  407994:	ins    DWORD PTR es:[rdi],dx
  407995:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  40799c:	jae    0x407a06
  40799e:	(bad)  
  40799f:	jb     0x407a06
  4079a1:	(bad)  
  4079a2:	ins    DWORD PTR es:[rdi],dx
  4079a3:	(bad)  
  4079a4:	outs   dx,BYTE PTR ds:[rsi]
  4079a5:	add    BYTE PTR [rbp+0x41],cl
  4079a8:	rex.WRX
  4079a9:	rex.R
  4079aa:	rex.WB push r10
  4079ac:	add    BYTE PTR [rax],al
  4079ae:	add    BYTE PTR [rax],al
  4079b0:	(bad)  
  4079b1:	jae    0x407a16
  4079b3:	jb     0x407a16
  4079b5:	je     0x407a1a
  4079b7:	push   0x65776a2f
  4079bc:	(bad)  
  4079bd:	ins    DWORD PTR es:[rdi],dx
  4079be:	js     0x407a25
  4079c0:	sub    eax,0x6174636f
  4079c5:	jbe    0x407a2c
  4079c7:	(bad)  
  4079c8:	xor    al,0x2e
  4079ca:	xor    ch,BYTE PTR [rsi]
  4079cc:	xor    DWORD PTR [rdi],ebp
  4079ce:	ja     0x407a06
  4079d0:	xor    al,0x2d
  4079d2:	xor    esi,DWORD PTR [rdx]
  4079d4:	(bad)  
  4079d5:	jne    0x407a4a
  4079d7:	jb     0x407a08
  4079d9:	js     0x407a13
  4079db:	ss pop rdi
  4079dd:	ss xor al,0x2d
  4079e0:	ja     0x407a18
  4079e2:	xor    al,0x2d
  4079e4:	ins    DWORD PTR es:[rdi],dx
  4079e5:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4079ec:	jae    0x407a56
  4079ee:	(bad)  
  4079ef:	jb     0x407a56
  4079f1:	(bad)  
  4079f2:	outs   dx,DWORD PTR ds:[rsi]
  4079f3:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  4079f7:	gs (bad) 
  4079f9:	xor    al,0x2e
  4079fb:	xor    ch,BYTE PTR [rsi]
  4079fd:	xor    DWORD PTR [rdi],ebp
  4079ff:	fs (bad) 
  407a01:	je     0x407a64
  407a03:	add    BYTE PTR [rdi+0x43],cl
  407a06:	push   rsp
  407a07:	rex.R
  407a08:	push   r12
  407a0a:	rex.B
  407a0b:	rex.R
  407a0c:	rex.WB push r10
  407a0e:	add    BYTE PTR [rax],al
  407a10:	(bad)  
  407a11:	jae    0x407a76
  407a13:	jb     0x407a76
  407a15:	je     0x407a7a
  407a17:	push   0x65776a2f
  407a1c:	(bad)  
  407a1d:	ins    DWORD PTR es:[rdi],dx
  407a1e:	js     0x407a85
  407a20:	sub    eax,0x6174636f
  407a25:	jbe    0x407a8c
  407a27:	(bad)  
  407a28:	xor    al,0x2e
  407a2a:	xor    ch,BYTE PTR [rsi]
  407a2c:	xor    DWORD PTR [rdi],ebp
  407a2e:	ja     0x407a66
  407a30:	xor    al,0x2d
  407a32:	xor    esi,DWORD PTR [rdx]
  407a34:	(bad)  
  407a35:	jne    0x407aaa
  407a37:	jb     0x407a68
  407a39:	js     0x407a73
  407a3b:	ss pop rdi
  407a3d:	ss xor al,0x2d
  407a40:	ja     0x407a78
  407a42:	xor    al,0x2d
  407a44:	ins    DWORD PTR es:[rdi],dx
  407a45:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407a4c:	ins    BYTE PTR es:[rdi],dx
  407a4d:	imul   esp,DWORD PTR [rdx+0x2f],0x6174636f
  407a54:	jbe    0x407abb
  407a56:	(bad)  
  407a57:	xor    al,0x2e
  407a59:	xor    ch,BYTE PTR [rsi]
  407a5b:	xor    DWORD PTR [rdi],ebp
  407a5d:	outs   dx,DWORD PTR ds:[rsi]
  407a5e:	movsxd esi,DWORD PTR [rdi+rbp*1+0x78]
  407a62:	cmp    BYTE PTR [rsi],dh
  407a64:	pop    rdi
  407a65:	ss xor al,0x2d
  407a68:	ja     0x407aa0
  407a6a:	xor    al,0x2d
  407a6c:	ins    DWORD PTR es:[rdi],dx
  407a6d:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  407a74:	rex.WRXB
  407a75:	rex.XB push r12
  407a77:	rex.RX
  407a78:	rex.WB
  407a79:	rex.WR
  407a7a:	rex.RB
  407a7b:	rex.R
  407a7c:	rex.WB push r10
  407a7e:	add    BYTE PTR [rax],al
  407a80:	(bad)  
  407a81:	jae    0x407ae6
  407a83:	jb     0x407ae6
  407a85:	je     0x407aea
  407a87:	push   0x65776a2f
  407a8c:	(bad)  
  407a8d:	ins    DWORD PTR es:[rdi],dx
  407a8e:	js     0x407af5
  407a90:	sub    eax,0x6174636f
  407a95:	jbe    0x407afc
  407a97:	(bad)  
  407a98:	xor    al,0x2e
  407a9a:	xor    ch,BYTE PTR [rsi]
  407a9c:	xor    DWORD PTR [rdi],ebp
  407a9e:	ja     0x407ad6
  407aa0:	xor    al,0x2d
  407aa2:	xor    esi,DWORD PTR [rdx]
  407aa4:	(bad)  
  407aa5:	jne    0x407b1a
  407aa7:	jb     0x407ad8
  407aa9:	js     0x407ae3
  407aab:	ss pop rdi
  407aad:	ss xor al,0x2d
  407ab0:	ja     0x407ae8
  407ab2:	xor    al,0x2d
  407ab4:	ins    DWORD PTR es:[rdi],dx
  407ab5:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407abc:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  407ac3:	(bad)  
  407ac4:	outs   dx,DWORD PTR ds:[rsi]
  407ac5:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  407ac9:	gs sub eax,0x2e322e34
  407acf:	xor    DWORD PTR [rdi],ebp
  407ad1:	outs   dx,DWORD PTR ds:[rsi]
  407ad2:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  407ad6:	add    BYTE PTR gs:[rdi+0x43],cl
  407ada:	push   rsp
  407adb:	rex.WB
  407adc:	rex.WRX
  407add:	rex.XB
  407ade:	rex.WR push rbp
  407ae0:	rex.R
  407ae1:	rex.RB
  407ae2:	rex.R
  407ae3:	rex.WB push r10
  407ae5:	add    BYTE PTR [rax],al
  407ae7:	add    BYTE PTR [rdi],ch
  407ae9:	jae    0x407b4e
  407aeb:	jb     0x407b4e
  407aed:	je     0x407b52
  407aef:	push   0x65776a2f
  407af4:	(bad)  
  407af5:	ins    DWORD PTR es:[rdi],dx
  407af6:	js     0x407b5d
  407af8:	sub    eax,0x6174636f
  407afd:	jbe    0x407b64
  407aff:	(bad)  
  407b00:	xor    al,0x2e
  407b02:	xor    ch,BYTE PTR [rsi]
  407b04:	xor    DWORD PTR [rdi],ebp
  407b06:	ja     0x407b3e
  407b08:	xor    al,0x2d
  407b0a:	xor    esi,DWORD PTR [rdx]
  407b0c:	(bad)  
  407b0d:	jne    0x407b82
  407b0f:	jb     0x407b40
  407b11:	js     0x407b4b
  407b13:	ss pop rdi
  407b15:	ss xor al,0x2d
  407b18:	ja     0x407b50
  407b1a:	xor    al,0x2d
  407b1c:	ins    DWORD PTR es:[rdi],dx
  407b1d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407b24:	ins    BYTE PTR es:[rdi],dx
  407b25:	imul   esp,DWORD PTR [rdx+0x2f],0x6174636f
  407b2c:	jbe    0x407b93
  407b2e:	(bad)  
  407b2f:	xor    al,0x2e
  407b31:	xor    ch,BYTE PTR [rsi]
  407b33:	xor    DWORD PTR [rax],eax
  407b35:	rex.WRXB
  407b36:	rex.XB push r12
  407b38:	rex.WR
  407b39:	rex.WB
  407b3a:	rex.X
  407b3b:	rex.R
  407b3c:	rex.WB push r10
  407b3e:	add    BYTE PTR [rax],al
  407b40:	(bad)  
  407b41:	jae    0x407ba6
  407b43:	jb     0x407ba6
  407b45:	je     0x407baa
  407b47:	push   0x65776a2f
  407b4c:	(bad)  
  407b4d:	ins    DWORD PTR es:[rdi],dx
  407b4e:	js     0x407bb5
  407b50:	sub    eax,0x6174636f
  407b55:	jbe    0x407bbc
  407b57:	(bad)  
  407b58:	xor    al,0x2e
  407b5a:	xor    ch,BYTE PTR [rsi]
  407b5c:	xor    DWORD PTR [rdi],ebp
  407b5e:	ja     0x407b96
  407b60:	xor    al,0x2d
  407b62:	xor    esi,DWORD PTR [rdx]
  407b64:	(bad)  
  407b65:	jne    0x407bda
  407b67:	jb     0x407b98
  407b69:	js     0x407ba3
  407b6b:	ss pop rdi
  407b6d:	ss xor al,0x2d
  407b70:	ja     0x407ba8
  407b72:	xor    al,0x2d
  407b74:	ins    DWORD PTR es:[rdi],dx
  407b75:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  407b7c:	jae    0x407be6
  407b7e:	(bad)  
  407b7f:	jb     0x407be6
  407b81:	(bad)  
  407b82:	outs   dx,DWORD PTR ds:[rsi]
  407b83:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  407b87:	gs (bad) 
  407b89:	xor    al,0x2e
  407b8b:	xor    ch,BYTE PTR [rsi]
  407b8d:	xor    DWORD PTR [rdi],ebp
  407b8f:	ins    DWORD PTR es:[rdi],dx
  407b90:	(bad)  
  407b91:	jae    0x407c07
  407b93:	(bad)  
  407b94:	jb     0x407c0a
  407b96:	jne    0x407c08
  407b98:	add    BYTE PTR [rbx+0x54],dl
  407b9b:	push   r10
  407b9d:	push   rsp
  407b9e:	push   rbp
  407b9f:	push   rax
  407ba0:	rex.RX
  407ba1:	rex.WB
  407ba2:	rex.WR
  407ba3:	rex.RB
  407ba4:	rex.R
  407ba5:	rex.WB push r10
  407ba7:	add    BYTE PTR [rip+0x3f2d0068],ch        # 0x3f6d7c15
  407bad:	add    BYTE PTR [rip+0x6c65682d],ch        # 0x6ca5e3e0
  407bb3:	jo     0x407bb5
  407bb5:	sub    eax,0x74636f2d
  407bba:	sub    eax,0x65746973
  407bbf:	sub    eax,0x726964
  407bc4:	sub    eax,0x2d2d0076
  407bc9:	jbe    0x407c30
  407bcb:	jb     0x407c40
  407bcd:	imul   ebp,DWORD PTR [rdi+0x6e],0x702d2d00
  407bd4:	jb     0x407c3f
  407bd6:	outs   dx,BYTE PTR ds:[rsi]
  407bd7:	je     0x407bd9
  407bd9:	outs   dx,DWORD PTR ds:[rsi]
  407bda:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  407bde:	gs sub eax,0x666e6f63
  407be4:	imul   esp,DWORD PTR [rdi+0x3a],0x6f200020
  407beb:	jo     0x407c61
  407bed:	imul   ebp,DWORD PTR [rdi+0x6e],0x65722073
  407bf4:	jno    0x407c6b
  407bf6:	imul   esi,DWORD PTR [rdx+0x65],0x72612073
  407bfd:	addr32 jne 0x407c6d
  407c00:	outs   dx,BYTE PTR gs:[rsi]
  407c02:	je     0x407c04
  407c04:	sub    eax,0x732d6d2d
  407c09:	imul   esi,DWORD PTR [rbp+riz*2+0x2d],0x726964
  407c11:	sub    eax,0x70
  407c16:	add    BYTE PTR [rax],al
  407c18:	outs   dx,DWORD PTR ds:[rsi]
  407c19:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  407c1d:	gs sub eax,0x666e6f63
  407c23:	imul   esp,DWORD PTR [rdi+0x3a],0x726e7520
  407c2a:	movsxd ebp,DWORD PTR gs:[rdi+0x67]
  407c2e:	outs   dx,BYTE PTR ds:[rsi]
  407c2f:	imul   edi,DWORD PTR [rdx+0x65],0x72612064
  407c36:	addr32 jne 0x407ca6
  407c39:	outs   dx,BYTE PTR gs:[rsi]
  407c3b:	je     0x407c5d
  407c3d:	add    BYTE PTR [rax],al
  407c3f:	add    BYTE PTR [rbp+0x73],dh
  407c42:	(bad)  
  407c43:	cmp    ah,BYTE PTR gs:[eax]
  407c47:	outs   dx,DWORD PTR ds:[rsi]
  407c48:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  407c4c:	gs sub eax,0x666e6f63
  407c52:	imul   esp,DWORD PTR [rdi+0x20],0x74706f5b
  407c59:	imul   ebp,DWORD PTR [rdi+0x6e],0x5d73
  407c60:	or     cl,BYTE PTR [rdi+0x70]
  407c63:	je     0x407cce
  407c65:	outs   dx,DWORD PTR ds:[rsi]
  407c66:	outs   dx,BYTE PTR ds:[rsi]
  407c67:	jae    0x407ca3
  407c69:	or     cl,BYTE PTR [rdx]
  407c6b:	and    BYTE PTR [rax],ah
  407c6d:	sub    eax,0x2d202c68
  407c72:	(bad)  
  407c73:	sub    al,0x20
  407c75:	sub    eax,0x6c65682d
  407c7a:	jo     0x407c9c
  407c7c:	and    BYTE PTR [rax],ah
  407c7e:	and    BYTE PTR [rax],ah
  407c80:	and    BYTE PTR [rax],ah
  407c82:	and    BYTE PTR [rax+0x72],dl
  407c85:	imul   ebp,DWORD PTR [rsi+0x74],0x69687420
  407c8c:	jae    0x407cae
  407c8e:	ins    DWORD PTR es:[rdi],dx
  407c8f:	gs jae 0x407d05
  407c92:	(bad)  
  407c93:	gs or  cl,BYTE PTR cs:[edx]
  407c98:	and    BYTE PTR [rax],ah
  407c9a:	sub    eax,0x732d6d2d
  407c9f:	imul   esi,DWORD PTR [rbp+riz*2+0x2d],0x20726964
  407ca7:	and    BYTE PTR [rax],ah
  407ca9:	and    BYTE PTR [rax],ah
  407cab:	and    BYTE PTR [rax],ah
  407cad:	and    BYTE PTR [rax],ah
  407caf:	and    BYTE PTR [rax+0x72],dl
  407cb2:	imul   ebp,DWORD PTR [rsi+0x74],0x65687420
  407cb9:	and    BYTE PTR [rsi+0x61],ch
  407cbc:	ins    DWORD PTR es:[rdi],dx
  407cbd:	and    BYTE PTR gs:[rdi+0x66],ch
  407cc1:	and    BYTE PTR [rax+rbp*2+0x65],dh
  407cc5:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  407cc9:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  407cce:	jns    0x407cf0
  407cd0:	ja     0x407d3a
  407cd2:	gs jb  0x407d3a
  407cd5:	and    BYTE PTR [rdi+0x63],cl
  407cd8:	je     0x407d3b
  407cda:	jbe    0x407d41
  407cdc:	or     ah,BYTE PTR [rax]
  407cde:	and    BYTE PTR [rax],ah
  407ce0:	and    BYTE PTR [rax],ah
  407ce2:	and    BYTE PTR [rax],ah
  407ce4:	and    BYTE PTR [rax],ah
  407ce6:	and    BYTE PTR [rax],ah
  407ce8:	and    BYTE PTR [rax],ah
  407cea:	and    BYTE PTR [rax],ah
  407cec:	and    BYTE PTR [rax],ah
  407cee:	and    BYTE PTR [rax],ah
  407cf0:	and    BYTE PTR [rax],ah
  407cf2:	and    BYTE PTR [rax],ah
  407cf4:	and    BYTE PTR [rbp+0x78],ah
  407cf7:	jo     0x407d5e
  407cf9:	movsxd esi,DWORD PTR [rbx+rsi*2+0x20]
  407cfd:	je     0x407d6e
  407cff:	and    BYTE PTR [rsi+0x69],ah
  407d02:	outs   dx,BYTE PTR ds:[rsi]
  407d03:	and    BYTE PTR fs:[rdi+rbp*2+0x63],ch
  407d08:	(bad)  
  407d09:	ins    BYTE PTR es:[rdi],dx
  407d0a:	ins    BYTE PTR es:[rdi],dx
  407d0b:	jns    0x407d2d
  407d0d:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  407d14:	gs and BYTE PTR fs:[rsi],ch
  407d18:	ins    DWORD PTR es:[rdi],dx
  407d19:	and    BYTE PTR [rsi+0x69],ah
  407d1c:	ins    BYTE PTR es:[rdi],dx
  407d1d:	gs jae 0x407d4e
  407d20:	or     cl,BYTE PTR [rdx]
  407d22:	and    BYTE PTR [rax],ah
  407d24:	sub    eax,0x74636f2d
  407d29:	sub    eax,0x65746973
  407d2e:	sub    eax,0x20726964
  407d33:	and    BYTE PTR [rax],ah
  407d35:	and    BYTE PTR [rax],ah
  407d37:	and    BYTE PTR [rax],ah
  407d39:	and    BYTE PTR [rax+0x72],dl
  407d3c:	imul   ebp,DWORD PTR [rsi+0x74],0x65687420
  407d43:	and    BYTE PTR [rsi+0x61],ch
  407d46:	ins    DWORD PTR es:[rdi],dx
  407d47:	and    BYTE PTR gs:[rdi+0x66],ch
  407d4b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  407d4f:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  407d53:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  407d58:	jns    0x407d7a
  407d5a:	ja     0x407dc4
  407d5c:	gs jb  0x407dc4
  407d5f:	and    BYTE PTR [rdi+0x63],cl
  407d62:	je     0x407dc5
  407d64:	jbe    0x407dcb
  407d66:	or     ah,BYTE PTR [rax]
  407d68:	and    BYTE PTR [rax],ah
  407d6a:	and    BYTE PTR [rax],ah
  407d6c:	and    BYTE PTR [rax],ah
  407d6e:	and    BYTE PTR [rax],ah
  407d70:	and    BYTE PTR [rax],ah
  407d72:	and    BYTE PTR [rax],ah
  407d74:	and    BYTE PTR [rax],ah
  407d76:	and    BYTE PTR [rax],ah
  407d78:	and    BYTE PTR [rax],ah
  407d7a:	and    BYTE PTR [rax],ah
  407d7c:	and    BYTE PTR [rax],ah
  407d7e:	and    BYTE PTR [rbp+0x78],ah
  407d81:	jo     0x407de8
  407d83:	movsxd esi,DWORD PTR [rbx+rsi*2+0x20]
  407d87:	je     0x407df8
  407d89:	and    BYTE PTR [rsi+0x69],ah
  407d8c:	outs   dx,BYTE PTR ds:[rsi]
  407d8d:	and    BYTE PTR fs:[rdi+rbp*2+0x63],ch
  407d92:	(bad)  
  407d93:	ins    BYTE PTR es:[rdi],dx
  407d94:	ins    BYTE PTR es:[rdi],dx
  407d95:	jns    0x407db7
  407d97:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  407d9e:	gs and BYTE PTR fs:[rsi],ch
  407da2:	outs   dx,DWORD PTR ds:[rsi]
  407da3:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  407da7:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x200a0a2e
  407daf:	and    BYTE PTR [rip+0x41562070],ch        # 0x41969e25
  407db5:	push   rdx
  407db6:	sub    al,0x20
  407db8:	sub    eax,0x6972702d
  407dbd:	outs   dx,BYTE PTR ds:[rsi]
  407dbe:	je     0x407de0
  407dc0:	push   rsi
  407dc1:	push   r10
  407dc3:	and    BYTE PTR [rax],ah
  407dc5:	and    BYTE PTR [rax+0x72],dl
  407dc8:	imul   ebp,DWORD PTR [rsi+0x74],0x65687420
  407dcf:	and    BYTE PTR [rsi+0x61],dh
  407dd2:	ins    BYTE PTR es:[rdi],dx
  407dd3:	jne    0x407e3a
  407dd5:	and    BYTE PTR [rdi+0x66],ch
  407dd8:	and    BYTE PTR [rax+rbp*2+0x65],dh
  407ddc:	and    BYTE PTR [rdi+0x69],ah
  407ddf:	jbe    0x407e46
  407de1:	outs   dx,BYTE PTR ds:[rsi]
  407de2:	and    BYTE PTR [rbx+0x6f],ah
  407de5:	outs   dx,BYTE PTR ds:[rsi]
  407de6:	imul   sp,WORD PTR [rdi+0x75],0x6172
  407dec:	je     0x407e57
  407dee:	outs   dx,DWORD PTR ds:[rsi]
  407def:	outs   dx,BYTE PTR ds:[rsi]
  407df0:	or     ah,BYTE PTR [rax]
  407df2:	and    BYTE PTR [rax],ah
  407df4:	and    BYTE PTR [rax],ah
  407df6:	and    BYTE PTR [rax],ah
  407df8:	and    BYTE PTR [rax],ah
  407dfa:	and    BYTE PTR [rax],ah
  407dfc:	and    BYTE PTR [rax],ah
  407dfe:	and    BYTE PTR [rax],ah
  407e00:	and    BYTE PTR [rax],ah
  407e02:	and    BYTE PTR [rax],ah
  407e04:	and    BYTE PTR [rax],ah
  407e06:	and    BYTE PTR [rax],ah
  407e08:	and    BYTE PTR [rsi+0x61],dh
  407e0b:	jb     0x407e76
  407e0d:	(bad)  
  407e0e:	(bad)  
  407e0f:	ins    BYTE PTR es:[rdi],dx
  407e10:	and    BYTE PTR gs:[rsi+0x41],dl
  407e14:	push   rdx
  407e15:	and    BYTE PTR cs:[rax],ah
  407e18:	push   rdx
  407e19:	movsxd ebp,DWORD PTR gs:[rdi+0x67]
  407e1d:	outs   dx,BYTE PTR ds:[rsi]
  407e1e:	imul   edi,DWORD PTR [rdx+0x65],0x61762064
  407e25:	jb     0x407e90
  407e27:	(bad)  
  407e28:	(bad)  
  407e29:	ins    BYTE PTR es:[rdi],dx
  407e2a:	gs jae 0x407e4d
  407e2d:	(bad)  
  407e2e:	jb     0x407e95
  407e30:	cmp    cl,BYTE PTR [rdx]
  407e32:	or     ah,BYTE PTR [rax]
  407e34:	and    BYTE PTR [rax],ah
  407e36:	and    BYTE PTR [rax],ah
  407e38:	and    BYTE PTR [rax],ah
  407e3a:	and    BYTE PTR [rax],ah
  407e3c:	and    BYTE PTR [rax],ah
  407e3e:	and    BYTE PTR [rax],ah
  407e40:	and    BYTE PTR [rax],ah
  407e42:	and    BYTE PTR [rax],ah
  407e44:	and    BYTE PTR [rax],ah
  407e46:	and    BYTE PTR [rax],ah
  407e48:	and    BYTE PTR [rax],ah
  407e4a:	and    BYTE PTR [rax],ah
  407e4c:	and    BYTE PTR [rcx+0x50],al
  407e4f:	rex.WB pop r15
  407e51:	push   rsi
  407e52:	rex.RB push r10
  407e54:	push   rbx
  407e55:	rex.WB
  407e56:	rex.WRXB
  407e57:	rex.WRX and BYTE PTR [rax],r12b
  407e5a:	and    BYTE PTR [rax],ah
  407e5c:	and    BYTE PTR [rax],ah
  407e5e:	and    BYTE PTR [rax],ah
  407e60:	and    BYTE PTR [rax],ah
  407e62:	and    BYTE PTR [rax],ah
  407e64:	rex.WR
  407e65:	rex.WRXB
  407e66:	rex.XB
  407e67:	rex.B
  407e68:	rex.WR
  407e69:	push   r10
  407e6b:	rex.XB
  407e6c:	rex.W
  407e6d:	rex.WR
  407e6e:	rex.WB
  407e6f:	rex.X
  407e70:	rex.R
  407e71:	rex.WB push r10
  407e73:	or     ah,BYTE PTR [rax]
  407e75:	and    BYTE PTR [rax],ah
  407e77:	and    BYTE PTR [rax],ah
  407e79:	and    BYTE PTR [rax],ah
  407e7b:	and    BYTE PTR [rax],ah
  407e7d:	and    BYTE PTR [rax],ah
  407e7f:	and    BYTE PTR [rax],ah
  407e81:	and    BYTE PTR [rax],ah
  407e83:	and    BYTE PTR [rax],ah
  407e85:	and    BYTE PTR [rax],ah
  407e87:	and    BYTE PTR [rax],ah
  407e89:	and    BYTE PTR [rax],ah
  407e8b:	and    BYTE PTR [rax],ah
  407e8d:	and    BYTE PTR [rcx+0x52],al
  407e90:	rex.XB
  407e91:	rex.W
  407e92:	rex.WR
  407e93:	rex.WB
  407e94:	rex.X
  407e95:	rex.R
  407e96:	rex.WB push r10
  407e98:	and    BYTE PTR [rax],ah
  407e9a:	and    BYTE PTR [rax],ah
  407e9c:	and    BYTE PTR [rax],ah
  407e9e:	and    BYTE PTR [rax],ah
  407ea0:	and    BYTE PTR [rax],ah
  407ea2:	and    BYTE PTR [rax],ah
  407ea4:	and    BYTE PTR [rdi+rcx*2+0x43],cl
  407ea8:	rex.B
  407ea9:	rex.WR
  407eaa:	rex.RX
  407eab:	rex.XB
  407eac:	rex.WRX
  407ead:	rex.RX
  407eae:	rex.WB
  407eaf:	rex.WR
  407eb0:	rex.RB
  407eb1:	rex.R
  407eb2:	rex.WB push r10
  407eb4:	or     ah,BYTE PTR [rax]
  407eb6:	and    BYTE PTR [rax],ah
  407eb8:	and    BYTE PTR [rax],ah
  407eba:	and    BYTE PTR [rax],ah
  407ebc:	and    BYTE PTR [rax],ah
  407ebe:	and    BYTE PTR [rax],ah
  407ec0:	and    BYTE PTR [rax],ah
  407ec2:	and    BYTE PTR [rax],ah
  407ec4:	and    BYTE PTR [rax],ah
  407ec6:	and    BYTE PTR [rax],ah
  407ec8:	and    BYTE PTR [rax],ah
  407eca:	and    BYTE PTR [rax],ah
  407ecc:	and    BYTE PTR [rax],ah
  407ece:	and    BYTE PTR [rdx+0x49],al
  407ed1:	rex.WRX
  407ed2:	rex.R
  407ed3:	rex.WB push r10
  407ed5:	and    BYTE PTR [rax],ah
  407ed7:	and    BYTE PTR [rax],ah
  407ed9:	and    BYTE PTR [rax],ah
  407edb:	and    BYTE PTR [rax],ah
  407edd:	and    BYTE PTR [rax],ah
  407edf:	and    BYTE PTR [rax],ah
  407ee1:	and    BYTE PTR [rax],ah
  407ee3:	and    BYTE PTR [rax],ah
  407ee5:	and    BYTE PTR [rdi+rcx*2+0x43],cl
  407ee9:	rex.B
  407eea:	rex.WR
  407eeb:	rex.WRXB
  407eec:	rex.XB push r12
  407eee:	rex.RX
  407eef:	rex.WB
  407ef0:	rex.WR
  407ef1:	rex.RB
  407ef2:	rex.R
  407ef3:	rex.WB push r10
  407ef5:	or     ah,BYTE PTR [rax]
  407ef7:	and    BYTE PTR [rax],ah
  407ef9:	and    BYTE PTR [rax],ah
  407efb:	and    BYTE PTR [rax],ah
  407efd:	and    BYTE PTR [rax],ah
  407eff:	and    BYTE PTR [rax],ah
  407f01:	and    BYTE PTR [rax],ah
  407f03:	and    BYTE PTR [rax],ah
  407f05:	and    BYTE PTR [rax],ah
  407f07:	and    BYTE PTR [rax],ah
  407f09:	and    BYTE PTR [rax],ah
  407f0b:	and    BYTE PTR [rax],ah
  407f0d:	and    BYTE PTR [rax],ah
  407f0f:	and    BYTE PTR [rbx+0x41],al
  407f12:	rex.WRX
  407f13:	rex.WRXB
  407f14:	rex.WRX
  407f15:	rex.WB
  407f16:	rex.XB
  407f17:	rex.B
  407f18:	rex.WR pop rdi
  407f1a:	rex.W
  407f1b:	rex.WRXB push r11
  407f1d:	push   rsp
  407f1e:	pop    rdi
  407f1f:	push   rsp
  407f20:	pop    rcx
  407f21:	push   rax
  407f22:	and    BYTE PTR [r8],r12b
  407f25:	and    BYTE PTR [rax],ah
  407f27:	rex.WR
  407f28:	rex.WRXB
  407f29:	rex.XB
  407f2a:	rex.B
  407f2b:	rex.WR push rbx
  407f2d:	push   rsp
  407f2e:	push   r10
  407f30:	push   rsp
  407f31:	push   rbp
  407f32:	push   rax
  407f33:	rex.RX
  407f34:	rex.WB
  407f35:	rex.WR
  407f36:	rex.RB
  407f37:	rex.R
  407f38:	rex.WB push r10
  407f3a:	or     ah,BYTE PTR [rax]
  407f3c:	and    BYTE PTR [rax],ah
  407f3e:	and    BYTE PTR [rax],ah
  407f40:	and    BYTE PTR [rax],ah
  407f42:	and    BYTE PTR [rax],ah
  407f44:	and    BYTE PTR [rax],ah
  407f46:	and    BYTE PTR [rax],ah
  407f48:	and    BYTE PTR [rax],ah
  407f4a:	and    BYTE PTR [rax],ah
  407f4c:	and    BYTE PTR [rax],ah
  407f4e:	and    BYTE PTR [rax],ah
  407f50:	and    BYTE PTR [rax],ah
  407f52:	and    BYTE PTR [rax],ah
  407f54:	and    BYTE PTR [rcx+rax*2+0x54],al
  407f58:	rex.B
  407f59:	rex.R
  407f5a:	rex.WB push r10
  407f5c:	and    BYTE PTR [rax],ah
  407f5e:	and    BYTE PTR [rax],ah
  407f60:	and    BYTE PTR [rax],ah
  407f62:	and    BYTE PTR [rax],ah
  407f64:	and    BYTE PTR [rax],ah
  407f66:	and    BYTE PTR [rax],ah
  407f68:	and    BYTE PTR [rax],ah
  407f6a:	and    BYTE PTR [rax],ah
  407f6c:	rex.WR
  407f6d:	rex.WRXB
  407f6e:	rex.XB
  407f6f:	rex.B
  407f70:	rex.WR push rsi
  407f72:	rex.RB push r10
  407f74:	push   r10
  407f76:	rex.XB
  407f77:	rex.W
  407f78:	rex.WR
  407f79:	rex.WB
  407f7a:	rex.X
  407f7b:	rex.R
  407f7c:	rex.WB push r10
  407f7e:	or     ah,BYTE PTR [rax]
  407f80:	and    BYTE PTR [rax],ah
  407f82:	and    BYTE PTR [rax],ah
  407f84:	and    BYTE PTR [rax],ah
  407f86:	and    BYTE PTR [rax],ah
  407f88:	and    BYTE PTR [rax],ah
  407f8a:	and    BYTE PTR [rax],ah
  407f8c:	and    BYTE PTR [rax],ah
  407f8e:	and    BYTE PTR [rax],ah
  407f90:	and    BYTE PTR [rax],ah
  407f92:	and    BYTE PTR [rax],ah
  407f94:	and    BYTE PTR [rax],ah
  407f96:	and    BYTE PTR [rax],ah
  407f98:	and    BYTE PTR [rcx+rax*2+0x54],al
  407f9c:	push   r10
  407f9e:	rex.WRXB
  407f9f:	rex.WRXB push r12
  407fa1:	rex.R
  407fa2:	rex.WB push r10
  407fa4:	and    BYTE PTR [rax],ah
  407fa6:	and    BYTE PTR [rax],ah
  407fa8:	and    BYTE PTR [rax],ah
  407faa:	and    BYTE PTR [rax],ah
  407fac:	and    BYTE PTR [rax],ah
  407fae:	and    BYTE PTR [rax],ah
  407fb0:	rex.WR
  407fb1:	rex.WRXB
  407fb2:	rex.XB
  407fb3:	rex.B
  407fb4:	rex.WR push rsi
  407fb6:	rex.RB push r10
  407fb8:	rex.RX
  407fb9:	rex.XB
  407fba:	rex.WRX
  407fbb:	rex.RX
  407fbc:	rex.WB
  407fbd:	rex.WR
  407fbe:	rex.RB
  407fbf:	rex.R
  407fc0:	rex.WB push r10
  407fc2:	or     ah,BYTE PTR [rax]
  407fc4:	and    BYTE PTR [rax],ah
  407fc6:	and    BYTE PTR [rax],ah
  407fc8:	and    BYTE PTR [rax],ah
  407fca:	and    BYTE PTR [rax],ah
  407fcc:	and    BYTE PTR [rax],ah
  407fce:	and    BYTE PTR [rax],ah
  407fd0:	and    BYTE PTR [rax],ah
  407fd2:	and    BYTE PTR [rax],ah
  407fd4:	and    BYTE PTR [rax],ah
  407fd6:	and    BYTE PTR [rax],ah
  407fd8:	and    BYTE PTR [rax],ah
  407fda:	and    BYTE PTR [rax],ah
  407fdc:	and    BYTE PTR [rbp+rax*2+0x46],al
  407fe0:	push   r13
  407fe2:	rex.WR push rsp
  407fe4:	pop    rdi
  407fe5:	push   rax
  407fe6:	rex.B
  407fe7:	rex.RXB
  407fe8:	rex.RB push r10
  407fea:	and    BYTE PTR [rax],ah
  407fec:	and    BYTE PTR [rax],ah
  407fee:	and    BYTE PTR [rax],ah
  407ff0:	and    BYTE PTR [rax],ah
  407ff2:	and    BYTE PTR [rax],ah
  407ff4:	rex.WR
  407ff5:	rex.WRXB
  407ff6:	rex.XB
  407ff7:	rex.B
  407ff8:	rex.WR push rsi
  407ffa:	rex.RB push r10
  407ffc:	rex.WRXB
  407ffd:	rex.XB push r12
  407fff:	rex.RX
  408000:	rex.WB
  408001:	rex.WR
  408002:	rex.RB
  408003:	rex.R
  408004:	rex.WB push r10
  408006:	or     ah,BYTE PTR [rax]
  408008:	and    BYTE PTR [rax],ah
  40800a:	and    BYTE PTR [rax],ah
  40800c:	and    BYTE PTR [rax],ah
  40800e:	and    BYTE PTR [rax],ah
  408010:	and    BYTE PTR [rax],ah
  408012:	and    BYTE PTR [rax],ah
  408014:	and    BYTE PTR [rax],ah
  408016:	and    BYTE PTR [rax],ah
  408018:	and    BYTE PTR [rax],ah
  40801a:	and    BYTE PTR [rax],ah
  40801c:	and    BYTE PTR [rax],ah
  40801e:	and    BYTE PTR [rax],ah
  408020:	and    BYTE PTR [rbp+0x58],al
  408023:	rex.RB
  408024:	rex.XB pop r15
  408026:	push   rax
  408027:	push   rdx
  408028:	rex.RB
  408029:	rex.RX
  40802a:	rex.WB pop r8
  40802c:	and    BYTE PTR [rax],ah
  40802e:	and    BYTE PTR [rax],ah
  408030:	and    BYTE PTR [rax],ah
  408032:	and    BYTE PTR [rax],ah
  408034:	and    BYTE PTR [rax],ah
  408036:	and    BYTE PTR [rax],ah
  408038:	rex.WRB
  408039:	rex.B
  40803a:	xor    QWORD PTR [rcx+r9*2+0x52],r8
  40803f:	or     ah,BYTE PTR [rax]
  408041:	and    BYTE PTR [rax],ah
  408043:	and    BYTE PTR [rax],ah
  408045:	and    BYTE PTR [rax],ah
  408047:	and    BYTE PTR [rax],ah
  408049:	and    BYTE PTR [rax],ah
  40804b:	and    BYTE PTR [rax],ah
  40804d:	and    BYTE PTR [rax],ah
  40804f:	and    BYTE PTR [rax],ah
  408051:	and    BYTE PTR [rax],ah
  408053:	and    BYTE PTR [rax],ah
  408055:	and    BYTE PTR [rax],ah
  408057:	and    BYTE PTR [rax],ah
  408059:	and    BYTE PTR [rbp+0x58],al
  40805c:	rex.RB
  40805d:	rex.RB pop r8
  40805f:	push   rsp
  408060:	and    BYTE PTR [rax],ah
  408062:	and    BYTE PTR [rax],ah
  408064:	and    BYTE PTR [rax],ah
  408066:	and    BYTE PTR [rax],ah
  408068:	and    BYTE PTR [rax],ah
  40806a:	and    BYTE PTR [rax],ah
  40806c:	and    BYTE PTR [rax],ah
  40806e:	and    BYTE PTR [rax],ah
  408070:	and    BYTE PTR [rbp+0x41],cl
  408073:	rex.WRX xor QWORD PTR [rbp+0x58],r8
  408077:	push   rsp
  408078:	or     ah,BYTE PTR [rax]
  40807a:	and    BYTE PTR [rax],ah
  40807c:	and    BYTE PTR [rax],ah
  40807e:	and    BYTE PTR [rax],ah
  408080:	and    BYTE PTR [rax],ah
  408082:	and    BYTE PTR [rax],ah
  408084:	and    BYTE PTR [rax],ah
  408086:	and    BYTE PTR [rax],ah
  408088:	and    BYTE PTR [rax],ah
  40808a:	and    BYTE PTR [rax],ah
  40808c:	and    BYTE PTR [rax],ah
  40808e:	and    BYTE PTR [rax],ah
  408090:	and    BYTE PTR [rax],ah
  408092:	and    BYTE PTR [rsi+0x43],al
  408095:	rex.WRX
  408096:	rex.RX
  408097:	rex.WB
  408098:	rex.WR
  408099:	rex.RB
  40809a:	rex.R
  40809b:	rex.WB push r10
  40809d:	and    BYTE PTR [rax],ah
  40809f:	and    BYTE PTR [rax],ah
  4080a1:	and    BYTE PTR [rax],ah
  4080a3:	and    BYTE PTR [rax],ah
  4080a5:	and    BYTE PTR [rax],ah
  4080a7:	and    BYTE PTR [rax],ah
  4080a9:	and    BYTE PTR [rbp+0x41],cl
  4080ac:	rex.WRX
  4080ad:	rex.R
  4080ae:	rex.WB push r10
  4080b0:	or     ah,BYTE PTR [rax]
  4080b2:	and    BYTE PTR [rax],ah
  4080b4:	and    BYTE PTR [rax],ah
  4080b6:	and    BYTE PTR [rax],ah
  4080b8:	and    BYTE PTR [rax],ah
  4080ba:	and    BYTE PTR [rax],ah
  4080bc:	and    BYTE PTR [rax],ah
  4080be:	and    BYTE PTR [rax],ah
  4080c0:	and    BYTE PTR [rax],ah
  4080c2:	and    BYTE PTR [rax],ah
  4080c4:	and    BYTE PTR [rax],ah
  4080c6:	and    BYTE PTR [rax],ah
  4080c8:	and    BYTE PTR [rax],ah
  4080ca:	and    BYTE PTR [rcx+0x4d],cl
  4080cd:	rex.B
  4080ce:	rex.RXB
  4080cf:	rex.RB
  4080d0:	rex.R
  4080d1:	rex.WB push r10
  4080d3:	and    BYTE PTR [rax],ah
  4080d5:	and    BYTE PTR [rax],ah
  4080d7:	and    BYTE PTR [rax],ah
  4080d9:	and    BYTE PTR [rax],ah
  4080db:	and    BYTE PTR [rax],ah
  4080dd:	and    BYTE PTR [rax],ah
  4080df:	and    BYTE PTR [rax],ah
  4080e1:	and    BYTE PTR [rdi+0x43],cl
  4080e4:	push   rsp
  4080e5:	rex.R
  4080e6:	push   r12
  4080e8:	rex.B
  4080e9:	rex.R
  4080ea:	rex.WB push r10
  4080ec:	or     ah,BYTE PTR [rax]
  4080ee:	and    BYTE PTR [rax],ah
  4080f0:	and    BYTE PTR [rax],ah
  4080f2:	and    BYTE PTR [rax],ah
  4080f4:	and    BYTE PTR [rax],ah
  4080f6:	and    BYTE PTR [rax],ah
  4080f8:	and    BYTE PTR [rax],ah
  4080fa:	and    BYTE PTR [rax],ah
  4080fc:	and    BYTE PTR [rax],ah
  4080fe:	and    BYTE PTR [rax],ah
  408100:	and    BYTE PTR [rax],ah
  408102:	and    BYTE PTR [rax],ah
  408104:	and    BYTE PTR [rax],ah
  408106:	and    BYTE PTR [rcx+0x4e],cl
  408109:	rex.XB
  40810a:	rex.WR push rbp
  40810c:	rex.R
  40810d:	rex.RB
  40810e:	rex.R
  40810f:	rex.WB push r10
  408111:	and    BYTE PTR [rax],ah
  408113:	and    BYTE PTR [rax],ah
  408115:	and    BYTE PTR [rax],ah
  408117:	and    BYTE PTR [rax],ah
  408119:	and    BYTE PTR [rax],ah
  40811b:	and    BYTE PTR [rax],ah
  40811d:	and    BYTE PTR [rdi+0x43],cl
  408120:	push   rsp
  408121:	rex.RX
  408122:	rex.WB
  408123:	rex.WR
  408124:	rex.RB
  408125:	rex.R
  408126:	rex.WB push r10
  408128:	or     ah,BYTE PTR [rax]
  40812a:	and    BYTE PTR [rax],ah
  40812c:	and    BYTE PTR [rax],ah
  40812e:	and    BYTE PTR [rax],ah
  408130:	and    BYTE PTR [rax],ah
  408132:	and    BYTE PTR [rax],ah
  408134:	and    BYTE PTR [rax],ah
  408136:	and    BYTE PTR [rax],ah
  408138:	and    BYTE PTR [rax],ah
  40813a:	and    BYTE PTR [rax],ah
  40813c:	and    BYTE PTR [rax],ah
  40813e:	and    BYTE PTR [rax],ah
  408140:	and    BYTE PTR [rax],ah
  408142:	and    BYTE PTR [rcx+0x4e],cl
  408145:	rex.RX
  408146:	rex.WRXB
  408147:	rex.R
  408148:	rex.WB push r10
  40814a:	and    BYTE PTR [rax],ah
  40814c:	and    BYTE PTR [rax],ah
  40814e:	and    BYTE PTR [rax],ah
  408150:	and    BYTE PTR [rax],ah
  408152:	and    BYTE PTR [rax],ah
  408154:	and    BYTE PTR [rax],ah
  408156:	and    BYTE PTR [rax],ah
  408158:	and    BYTE PTR [rax],ah
  40815a:	rex.WRXB
  40815b:	rex.XB push r12
  40815d:	rex.WB
  40815e:	rex.WRX
  40815f:	rex.XB
  408160:	rex.WR push rbp
  408162:	rex.R
  408163:	rex.RB
  408164:	rex.R
  408165:	rex.WB push r10
  408167:	or     ah,BYTE PTR [rax]
  408169:	and    BYTE PTR [rax],ah
  40816b:	and    BYTE PTR [rax],ah
  40816d:	and    BYTE PTR [rax],ah
  40816f:	and    BYTE PTR [rax],ah
  408171:	and    BYTE PTR [rax],ah
  408173:	and    BYTE PTR [rax],ah
  408175:	and    BYTE PTR [rax],ah
  408177:	and    BYTE PTR [rax],ah
  408179:	and    BYTE PTR [rax],ah
  40817b:	and    BYTE PTR [rax],ah
  40817d:	and    BYTE PTR [rax],ah
  40817f:	and    BYTE PTR [rax],ah
  408181:	and    BYTE PTR [rcx+0x4e],cl
  408184:	rex.RX
  408185:	rex.WRXB
  408186:	rex.RX
  408187:	rex.WB
  408188:	rex.WR
  408189:	and    BYTE PTR [r8],r12b
  40818c:	and    BYTE PTR [rax],ah
  40818e:	and    BYTE PTR [rax],ah
  408190:	and    BYTE PTR [rax],ah
  408192:	and    BYTE PTR [rax],ah
  408194:	and    BYTE PTR [rax],ah
  408196:	and    BYTE PTR [rax],ah
  408198:	and    BYTE PTR [rdi+0x43],cl
  40819b:	push   rsp
  40819c:	rex.WR
  40819d:	rex.WB
  40819e:	rex.X
  40819f:	rex.R
  4081a0:	rex.WB push r10
  4081a2:	or     ah,BYTE PTR [rax]
  4081a4:	and    BYTE PTR [rax],ah
  4081a6:	and    BYTE PTR [rax],ah
  4081a8:	and    BYTE PTR [rax],ah
  4081aa:	and    BYTE PTR [rax],ah
  4081ac:	and    BYTE PTR [rax],ah
  4081ae:	and    BYTE PTR [rax],ah
  4081b0:	and    BYTE PTR [rax],ah
  4081b2:	and    BYTE PTR [rax],ah
  4081b4:	and    BYTE PTR [rax],ah
  4081b6:	and    BYTE PTR [rax],ah
  4081b8:	and    BYTE PTR [rax],ah
  4081ba:	and    BYTE PTR [rax],ah
  4081bc:	and    BYTE PTR [rcx+rcx*2+0x42],cl
  4081c0:	rex.R
  4081c1:	rex.WB push r10
  4081c3:	and    BYTE PTR [rax],ah
  4081c5:	and    BYTE PTR [rax],ah
  4081c7:	and    BYTE PTR [rax],ah
  4081c9:	and    BYTE PTR [rax],ah
  4081cb:	and    BYTE PTR [rax],ah
  4081cd:	and    BYTE PTR [rax],ah
  4081cf:	and    BYTE PTR [rax],ah
  4081d1:	and    BYTE PTR [rax],ah
  4081d3:	and    BYTE PTR [rax+0x52],dl
  4081d6:	rex.RB
  4081d7:	rex.RX
  4081d8:	rex.WB pop r8
  4081da:	or     ah,BYTE PTR [rax]
  4081dc:	and    BYTE PTR [rax],ah
  4081de:	and    BYTE PTR [rax],ah
  4081e0:	and    BYTE PTR [rax],ah
  4081e2:	and    BYTE PTR [rax],ah
  4081e4:	and    BYTE PTR [rax],ah
  4081e6:	and    BYTE PTR [rax],ah
  4081e8:	and    BYTE PTR [rax],ah
  4081ea:	and    BYTE PTR [rax],ah
  4081ec:	and    BYTE PTR [rax],ah
  4081ee:	and    BYTE PTR [rax],ah
  4081f0:	and    BYTE PTR [rax],ah
  4081f2:	and    BYTE PTR [rax],ah
  4081f4:	and    BYTE PTR [rcx+rcx*2+0x42],cl
  4081f8:	rex.RB pop r8
  4081fa:	rex.RB
  4081fb:	rex.XB
  4081fc:	rex.R
  4081fd:	rex.WB push r10
  4081ff:	and    BYTE PTR [rax],ah
  408201:	and    BYTE PTR [rax],ah
  408203:	and    BYTE PTR [rax],ah
  408205:	and    BYTE PTR [rax],ah
  408207:	and    BYTE PTR [rax],ah
  408209:	and    BYTE PTR [rax],ah
  40820b:	and    BYTE PTR [rbx+0x54],dl
  40820e:	push   r10
  408210:	push   rsp
  408211:	push   rbp
  408212:	push   rax
  408213:	rex.RX
  408214:	rex.WB
  408215:	rex.WR
  408216:	rex.RB
  408217:	rex.R
  408218:	rex.WB push r10
  40821a:	or     ah,BYTE PTR [rax]
  40821c:	and    BYTE PTR [rax],ah
  40821e:	and    BYTE PTR [rax],ah
  408220:	and    BYTE PTR [rax],ah
  408222:	and    BYTE PTR [rax],ah
  408224:	and    BYTE PTR [rax],ah
  408226:	and    BYTE PTR [rax],ah
  408228:	and    BYTE PTR [rax],ah
  40822a:	and    BYTE PTR [rax],ah
  40822c:	and    BYTE PTR [rax],ah
  40822e:	and    BYTE PTR [rax],ah
  408230:	and    BYTE PTR [rax],ah
  408232:	and    BYTE PTR [rax],ah
  408234:	and    BYTE PTR [rdi+rcx*2+0x43],cl
  408238:	rex.B
  408239:	rex.WR
  40823a:	push   r8
  40823c:	rex.WB
  40823d:	push   r10
  40823f:	rex.XB
  408240:	rex.W
  408241:	rex.WR
  408242:	rex.WB
  408243:	rex.X
  408244:	rex.R
  408245:	rex.WB push r10
  408247:	and    BYTE PTR [rax],ah
  408249:	and    BYTE PTR [rax],ah
  40824b:	and    BYTE PTR [rsi+0x45],dl
  40824e:	push   rdx
  40824f:	push   rbx
  408250:	rex.WB
  408251:	rex.WRXB
  408252:	rex.WRX or r12b,BYTE PTR [rax]
  408255:	and    BYTE PTR [rax],ah
  408257:	and    BYTE PTR [rax],ah
  408259:	and    BYTE PTR [rax],ah
  40825b:	and    BYTE PTR [rax],ah
  40825d:	and    BYTE PTR [rax],ah
  40825f:	and    BYTE PTR [rax],ah
  408261:	and    BYTE PTR [rax],ah
  408263:	and    BYTE PTR [rax],ah
  408265:	and    BYTE PTR [rax],ah
  408267:	and    BYTE PTR [rax],ah
  408269:	and    BYTE PTR [rax],ah
  40826b:	and    BYTE PTR [rax],ah
  40826d:	and    BYTE PTR [rdi+rcx*2+0x43],cl
  408271:	rex.B
  408272:	rex.WR
  408273:	push   r8
  408275:	rex.WB
  408276:	rex.RX
  408277:	rex.XB
  408278:	rex.WRX
  408279:	rex.RX
  40827a:	rex.WB
  40827b:	rex.WR
  40827c:	rex.RB
  40827d:	rex.R
  40827e:	rex.WB push r10
  408280:	or     ah,BYTE PTR [rax]
  408282:	and    BYTE PTR [rax],ah
  408284:	and    BYTE PTR [rax],ah
  408286:	and    BYTE PTR [rax],ah
  408288:	and    BYTE PTR [rax],ah
  40828a:	and    BYTE PTR [rax],ah
  40828c:	and    BYTE PTR [rax],ah
  40828e:	and    BYTE PTR [rax],ah
  408290:	and    BYTE PTR [rax],ah
  408292:	and    BYTE PTR [rax],ah
  408294:	and    BYTE PTR [rax],ah
  408296:	and    BYTE PTR [rax],ah
  408298:	and    BYTE PTR [rax],ah
  40829a:	and    BYTE PTR [rdi+rcx*2+0x43],cl
  40829e:	rex.B
  40829f:	rex.WR
  4082a0:	push   r8
  4082a2:	rex.WB
  4082a3:	rex.WRXB
  4082a4:	rex.XB push r12
  4082a6:	rex.RX
  4082a7:	rex.WB
  4082a8:	rex.WR
  4082a9:	rex.RB
  4082aa:	rex.R
  4082ab:	rex.WB push r10
  4082ad:	or     cl,BYTE PTR [rdx]
  4082af:	and    BYTE PTR [rax],ah
  4082b1:	sub    eax,0x2d202c76
  4082b6:	sub    eax,0x73726576
  4082bb:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  4082c2:	and    BYTE PTR [rax],ah
  4082c4:	and    BYTE PTR [rax],ah
  4082c6:	and    BYTE PTR [rax+0x72],dl
  4082c9:	imul   ebp,DWORD PTR [rsi+0x74],0x65687420
  4082d0:	and    BYTE PTR [rdi+0x63],cl
  4082d3:	je     0x408336
  4082d5:	jbe    0x40833c
  4082d7:	and    BYTE PTR [rsi+0x65],dh
  4082da:	jb     0x40834f
  4082dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d756e20
  4082e3:	(bad)  
  4082e4:	gs jb  0x408315
  4082e7:	or     cl,BYTE PTR [rdx]
	...
  4082f1:	mov    dh,0x40
  4082f3:	add    BYTE PTR [rax],al
  4082f5:	add    BYTE PTR [rax],al
  4082f7:	add    BYTE PTR [rax],al
  4082f9:	mov    cl,0x40
  4082fb:	add    BYTE PTR [rax],al
  4082fd:	add    BYTE PTR [rax],al
  4082ff:	add    BYTE PTR [rax+0x32],dl
  408302:	add    BYTE PTR [rax],al
	...
  40830d:	add    BYTE PTR [rax],al
  40830f:	add    BYTE PTR [rcx+0x72],al
  408312:	addr32 jne 0x408382
  408315:	outs   dx,BYTE PTR gs:[rsi]
  408317:	je     0x408339
  408319:	outs   dx,DWORD PTR fs:[rsi]
  40831b:	ins    DWORD PTR es:[rdi],dx
  40831c:	(bad)  
  40831d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  408324:	jb     0x408346
  408326:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40832a:	rex.B
  40832b:	rex.WB
  40832c:	rex.WRX sub QWORD PTR [rax],r8
  40832f:	rex.B jb 0x408399
  408332:	jne    0x4083a1
  408334:	outs   dx,BYTE PTR gs:[rsi]
  408336:	je     0x408358
  408338:	jae    0x4083a3
  40833a:	outs   dx,BYTE PTR ds:[rsi]
  40833b:	addr32 jne 0x4083aa
  40833e:	(bad)  
  40833f:	jb     0x4083aa
  408341:	je     0x4083bc
  408343:	and    BYTE PTR [rax],ch
  408345:	push   rbx
  408346:	rex.WB
  408347:	rex.RXB
  408348:	rex.WRX sub QWORD PTR [rax],r8
  40834b:	add    BYTE PTR [rax],al
  40834d:	add    BYTE PTR [rax],al
  40834f:	add    BYTE PTR [rdi+0x76],cl
  408352:	gs jb  0x4083bb
  408355:	ins    BYTE PTR es:[rdi],dx
  408356:	outs   dx,DWORD PTR ds:[rsi]
  408357:	ja     0x408379
  408359:	jb     0x4083bc
  40835b:	outs   dx,BYTE PTR ds:[rsi]
  40835c:	and    BYTE PTR gs:[ebp+0x72],ah
  408361:	jb     0x4083d2
  408363:	jb     0x408385
  408365:	sub    BYTE PTR [rdi+0x56],cl
  408368:	rex.RB push r10
  40836a:	rex.RX
  40836b:	rex.WR
  40836c:	rex.WRXB push r15
  40836e:	sub    DWORD PTR [rax],eax
  408370:	push   rax
  408371:	(bad)  
  408372:	jb     0x4083e8
  408374:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40837b:	jae    0x40839d
  40837d:	outs   dx,DWORD PTR ds:[rsi]
  40837e:	data16 and BYTE PTR [rbx+0x69],dh
  408382:	outs   dx,BYTE PTR ds:[esi]
  408384:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40838b:	and    BYTE PTR gs:[rax],ch
  40838e:	push   rax
  40838f:	rex.WR
  408390:	rex.WRXB push r11
  408392:	push   rbx
  408393:	sub    DWORD PTR [rax],eax
  408395:	add    BYTE PTR [rax],al
  408397:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40839b:	(bad)  
  40839c:	ins    BYTE PTR es:[rdi],dx
  40839d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4083a1:	jae    0x4083c3
  4083a3:	outs   dx,DWORD PTR ds:[rsi]
  4083a4:	data16 and BYTE PTR [rbx+0x69],dh
  4083a8:	outs   dx,BYTE PTR ds:[esi]
  4083aa:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4083b1:	and    BYTE PTR gs:[rax],ch
  4083b4:	push   rsp
  4083b5:	rex.WR
  4083b6:	rex.WRXB push r11
  4083b8:	push   rbx
  4083b9:	sub    DWORD PTR [rax],eax
  4083bb:	add    BYTE PTR [rax],al
  4083bd:	add    BYTE PTR [rax],al
  4083bf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4083c3:	and    BYTE PTR [rdx+0x65],dh
  4083c6:	jae    0x40843d
  4083c8:	ins    BYTE PTR es:[rdi],dx
  4083c9:	je     0x4083eb
  4083cb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4083d2:	jae    0x408441
  4083d4:	(bad)  
  4083d5:	ins    BYTE PTR es:[rdi],dx
  4083d6:	ins    BYTE PTR es:[rdi],dx
  4083d7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4083db:	(bad)  
  4083dc:	and    BYTE PTR gs:[rdx+0x65],dh
  4083e0:	jo     0x408454
  4083e2:	gs jae 0x40844a
  4083e5:	outs   dx,BYTE PTR ds:[rsi]
  4083e6:	je     0x40844d
  4083e8:	and    BYTE PTR fs:[rax],ch
  4083eb:	push   rbp
  4083ec:	rex.WRX
  4083ed:	rex.R
  4083ee:	rex.RB push r10
  4083f0:	rex.RX
  4083f1:	rex.WR
  4083f2:	rex.WRXB push r15
  4083f4:	sub    DWORD PTR [rax],eax
  4083f6:	push   rbp
  4083f7:	outs   dx,BYTE PTR ds:[rsi]
  4083f8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4083fc:	outs   dx,BYTE PTR ds:[rsi]
  4083fd:	and    BYTE PTR [rbp+0x72],ah
  408400:	jb     0x408471
  408402:	jb     0x408404
  408404:	add    BYTE PTR [rax],al
  408406:	add    BYTE PTR [rax],al
  408408:	pop    rdi
  408409:	ins    DWORD PTR es:[rdi],dx
  40840a:	(bad)  
  40840b:	je     0x408475
  40840d:	gs jb  0x408482
  408410:	sub    BYTE PTR [rcx],ch
  408412:	cmp    ah,BYTE PTR [rax]
  408414:	and    eax,0x6e692073
  408419:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765ac92
  40841f:	sub    al,0x20
  408421:	and    eax,0x20202967
  408426:	sub    BYTE PTR [rdx+0x65],dh
  408429:	je     0x4084a1
  40842b:	(bad)  
  40842c:	ins    BYTE PTR es:[rdi],dx
  40842d:	cmp    eax,0xa296725
  408432:	add    BYTE PTR [rax],al
  408434:	in     al,dx
  408435:	scas   eax,DWORD PTR es:[rdi]
  408436:	(bad)  
  408437:	jmp    FWORD PTR [rip+0xffffffff9cffffaf]        # 0xffffffff9d4083ec
  40843d:	scas   eax,DWORD PTR es:[rdi]
  40843e:	(bad)  
  40843f:	jmp    FWORD PTR [rdi+rbp*4-0x50430001]
  408446:	(bad)  
  408447:	dec    esp
  408449:	scas   eax,DWORD PTR es:[rdi]
  40844a:	(bad)  
  40844b:	(bad)  
  40844c:	fsubr  QWORD PTR [rdi+0x694dffff]
  408452:	outs   dx,BYTE PTR ds:[rsi]
  408453:	addr32 ja 0x408483
  408456:	ja     0x40848e
  408458:	xor    al,0x20
  40845a:	jb     0x4084d1
  40845c:	outs   dx,BYTE PTR ds:[rsi]
  40845d:	je     0x4084c8
  40845f:	ins    DWORD PTR es:[rdi],dx
  408460:	and    BYTE PTR gs:[rsi+0x61],ah
  408464:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40846c:	add    BYTE PTR [rax],al
  40846e:	add    BYTE PTR [rax],al
  408470:	rex.B
  408471:	fs fs jb 0x4084da
  408475:	jae    0x4084ea
  408477:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8a4ed
  40847d:	jae    0x40849f
  40847f:	outs   dx,BYTE PTR ds:[rsi]
  408480:	outs   dx,DWORD PTR ds:[rsi]
  408481:	and    BYTE PTR [rcx+0x6d],ch
  408484:	(bad)  
  408485:	addr32 gs sub eax,0x74636573
  40848c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  408493:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40849a:	jne    0x408501
  40849c:	jb     0x408517
  40849e:	and    BYTE PTR [rsi+0x61],ah
  4084a1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4084a9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2a513
  4084af:	je     0x408516
  4084b1:	jae    0x4084d3
  4084b3:	(bad)  
  4084b4:	je     0x4084d6
  4084b6:	(bad)  
  4084b7:	fs fs jb 0x408520
  4084bb:	jae    0x408530
  4084bd:	and    BYTE PTR [rip+0x70],ah        # 0x408533
  4084c3:	add    BYTE PTR [rax],al
  4084c5:	add    BYTE PTR [rax],al
  4084c7:	add    BYTE PTR [rax],ah
  4084c9:	and    BYTE PTR [rsi+0x69],dl
  4084cc:	jb     0x408542
  4084ce:	jne    0x408531
  4084d0:	ins    BYTE PTR es:[rdi],dx
  4084d1:	push   rax
  4084d2:	jb     0x408543
  4084d4:	je     0x40853b
  4084d6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4084da:	(bad)  
  4084db:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4084e3:	push   0x646f6320
  4084e8:	and    BYTE PTR gs:[rax],dh
  4084eb:	js     0x408512
  4084ed:	js     0x4084ef
  4084ef:	add    BYTE PTR [rax],ah
  4084f1:	and    BYTE PTR [rbp+0x6e],dl
  4084f4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4084f8:	outs   dx,BYTE PTR ds:[rsi]
  4084f9:	and    BYTE PTR [rax+0x73],dh
  4084fc:	gs jne 0x408563
  4084ff:	outs   dx,DWORD PTR ds:[rsi]
  408500:	and    BYTE PTR [rdx+0x65],dh
  408503:	ins    BYTE PTR es:[rdi],dx
  408504:	outs   dx,DWORD PTR ds:[rsi]
  408505:	movsxd esp,DWORD PTR [rcx+0x74]
  408508:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40850f:	je     0x408580
  408511:	movsxd ebp,DWORD PTR [rdi+0x6c]
  408514:	and    BYTE PTR [rsi+0x65],dh
  408517:	jb     0x40858c
  408519:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  408520:	or     al,BYTE PTR [rax]
  408522:	add    BYTE PTR [rax],al
  408524:	add    BYTE PTR [rax],al
  408526:	add    BYTE PTR [rax],al
  408528:	and    BYTE PTR [rax],ah
  40852a:	push   rbp
  40852b:	outs   dx,BYTE PTR ds:[rsi]
  40852c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  408530:	outs   dx,BYTE PTR ds:[rsi]
  408531:	and    BYTE PTR [rax+0x73],dh
  408534:	gs jne 0x40859b
  408537:	outs   dx,DWORD PTR ds:[rsi]
  408538:	and    BYTE PTR [rdx+0x65],dh
  40853b:	ins    BYTE PTR es:[rdi],dx
  40853c:	outs   dx,DWORD PTR ds:[rsi]
  40853d:	movsxd esp,DWORD PTR [rcx+0x74]
  408540:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  408547:	and    BYTE PTR [rbx+0x69],dh
  40854a:	jp     0x4085b1
  40854c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4ab3b6
	...
  40855e:	add    BYTE PTR [rax],al
  408560:	cs jo  0x4085c7
  408563:	(bad)  
  408564:	je     0x4085c7
	...
  40856e:	add    BYTE PTR [rax],al
  408570:	rex
  408571:	add    BYTE PTR ss:[rax],al
	...
  408580:	push   rax
  408581:	(bad)  
  408582:	add    BYTE PTR [rax],al
	...
  40858d:	add    BYTE PTR [rax],al
  40858f:	add    BYTE PTR [rax+0x60],ah
  408592:	add    BYTE PTR [rax],al
	...
  40859d:	add    BYTE PTR [rax],al
  40859f:	add    BYTE PTR [rsp+rdx*8],dh
  4085a2:	add    BYTE PTR [rax],al
	...
  4085ad:	add    BYTE PTR [rax],al
  4085af:	add    BYTE PTR [rsp+rdx*8],bh
  4085b2:	add    BYTE PTR [rax],al
	...
  4085bd:	add    BYTE PTR [rax],al
  4085bf:	add    BYTE PTR [rax+0x405a],dl
	...
  4085cd:	add    BYTE PTR [rax],al
  4085cf:	add    BYTE PTR [rbx+rcx*4],al
  4085d2:	add    BYTE PTR [rax],al
	...
  4085dd:	add    BYTE PTR [rax],al
  4085df:	add    al,ah
  4085e1:	mov    al,BYTE PTR [rax+0x0]
	...
  4085f0:	add    BYTE PTR [rbx+0x40],al
	...
  408602:	add    BYTE PTR [rax],al
	...
  40860d:	add    BYTE PTR [rax],al
  40860f:	add    BYTE PTR [rbp+rdx*8+0x40],dh
	...
  40861f:	add    BYTE PTR [rbp+rdx*8+0x40],bl
	...
  40862e:	add    BYTE PTR [rax],al
  408630:	mov    ah,0xd5
  408632:	add    BYTE PTR [rax],al
	...
  40863d:	add    BYTE PTR [rax],al
  40863f:	add    ah,cl
  408641:	(bad)  
  408642:	add    BYTE PTR [rax],al
	...
  40864d:	add    BYTE PTR [rax],al
  40864f:	add    BYTE PTR [rax-0x49],al
  408652:	add    BYTE PTR [rax],al
	...
  40865d:	add    BYTE PTR [rax],al
  40865f:	add    BYTE PTR [rax+0x40ba],ch
	...
  40866d:	add    BYTE PTR [rax],al
  40866f:	add    BYTE PTR [rax+0x40ba],ah
	...
  40867d:	add    BYTE PTR [rax],al
  40867f:	add    BYTE PTR [rax+0x40ba],dl
	...
  40868d:	add    BYTE PTR [rax],al
  40868f:	add    BYTE PTR [rax+0x40ba],bl
	...
  4086a1:	loopne 0x4086e3
	...
  4086af:	add    BYTE PTR [rax],dl
  4086b1:	loopne 0x4086f3
	...
  4086bf:	add    BYTE PTR [rax],bl
  4086c1:	loopne 0x408703
	...
  4086cf:	add    BYTE PTR [rax],dh
  4086d1:	loopne 0x408713
	...
  4086df:	add    BYTE PTR [rax+0x40b0],dh
	...
  4086ed:	add    BYTE PTR [rax],al
  4086ef:	add    BYTE PTR [rax],dl
  4086f1:	mov    bh,0x40
	...
  4086ff:	add    al,ah
  408701:	cmp    eax,DWORD PTR [rax+0x0]
	...
  408710:	xor    BYTE PTR [rbx],dh
  408712:	add    BYTE PTR [rax],al
	...
  40871d:	add    BYTE PTR [rax],al
  40871f:	add    al,al
  408721:	mov    dh,0x40
	...
  40872f:	add    al,dh
  408731:	mov    dh,0x40
	...
  40873f:	add    al,al
  408741:	mov    al,0x40
	...
  40874f:	add    al,bl
  408751:	mov    dh,0x40
	...
  40875f:	add    ah,dl
  408761:	mov    dh,0x40
	...
  40876f:	add    al,dl
  408771:	mov    dh,0x40
	...
  40877f:	add    BYTE PTR [rdi+0x43],al
  408782:	rex.XB cmp spl,BYTE PTR [r8]
  408785:	sub    BYTE PTR [rdi+0x4e],al
  408788:	push   rbp
  408789:	sub    DWORD PTR [rax],esp
  40878b:	xor    al,0x2e
  40878d:	cmp    DWORD PTR [rsi],ebp
  40878f:	xor    al,0x0
	...
  40879d:	add    BYTE PTR [rax],al
  40879f:	add    BYTE PTR [rdi+0x43],al
  4087a2:	rex.XB cmp spl,BYTE PTR [r8]
  4087a5:	sub    BYTE PTR [rdi+0x4e],al
  4087a8:	push   rbp
  4087a9:	sub    DWORD PTR [rax],esp
  4087ab:	xor    al,0x2e
  4087ad:	cmp    DWORD PTR [rsi],ebp
  4087af:	xor    al,0x0
	...
  4087bd:	add    BYTE PTR [rax],al
  4087bf:	add    BYTE PTR [rdi+0x43],al
  4087c2:	rex.XB cmp spl,BYTE PTR [r8]
  4087c5:	sub    BYTE PTR [rdi+0x4e],al
  4087c8:	push   rbp
  4087c9:	sub    DWORD PTR [rax],esp
  4087cb:	xor    al,0x2e
  4087cd:	cmp    DWORD PTR [rsi],ebp
  4087cf:	xor    al,0x0
	...
  4087dd:	add    BYTE PTR [rax],al
  4087df:	add    BYTE PTR [rdi+0x43],al
  4087e2:	rex.XB cmp spl,BYTE PTR [r8]
  4087e5:	sub    BYTE PTR [rdi+0x4e],al
  4087e8:	push   rbp
  4087e9:	sub    DWORD PTR [rax],esp
  4087eb:	xor    al,0x2e
  4087ed:	cmp    DWORD PTR [rsi],ebp
  4087ef:	xor    al,0x0
	...
  4087fd:	add    BYTE PTR [rax],al
  4087ff:	add    BYTE PTR [rdi+0x43],al
  408802:	rex.XB cmp spl,BYTE PTR [r8]
  408805:	sub    BYTE PTR [rdi+0x4e],al
  408808:	push   rbp
  408809:	sub    DWORD PTR [rax],esp
  40880b:	xor    al,0x2e
  40880d:	cmp    DWORD PTR [rsi],ebp
  40880f:	xor    al,0x0
	...
  40881d:	add    BYTE PTR [rax],al
  40881f:	add    BYTE PTR [rdi+0x43],al
  408822:	rex.XB cmp spl,BYTE PTR [r8]
  408825:	sub    BYTE PTR [rdi+0x4e],al
  408828:	push   rbp
  408829:	sub    DWORD PTR [rax],esp
  40882b:	xor    al,0x2e
  40882d:	cmp    DWORD PTR [rsi],ebp
  40882f:	xor    al,0x0
	...
  40883d:	add    BYTE PTR [rax],al
  40883f:	add    BYTE PTR [rdi+0x43],al
  408842:	rex.XB cmp spl,BYTE PTR [r8]
  408845:	sub    BYTE PTR [rdi+0x4e],al
  408848:	push   rbp
  408849:	sub    DWORD PTR [rax],esp
  40884b:	xor    al,0x2e
  40884d:	cmp    DWORD PTR [rsi],ebp
  40884f:	xor    al,0x0
	...
  40885d:	add    BYTE PTR [rax],al
  40885f:	add    BYTE PTR [rdi+0x43],al
  408862:	rex.XB cmp spl,BYTE PTR [r8]
  408865:	sub    BYTE PTR [rdi+0x4e],al
  408868:	push   rbp
  408869:	sub    DWORD PTR [rax],esp
  40886b:	xor    al,0x2e
  40886d:	cmp    DWORD PTR [rsi],ebp
  40886f:	xor    al,0x0
	...
  40887d:	add    BYTE PTR [rax],al
  40887f:	add    BYTE PTR [rdi+0x43],al
  408882:	rex.XB cmp spl,BYTE PTR [r8]
  408885:	sub    BYTE PTR [rdi+0x4e],al
  408888:	push   rbp
  408889:	sub    DWORD PTR [rax],esp
  40888b:	xor    al,0x2e
  40888d:	cmp    DWORD PTR [rsi],ebp
  40888f:	xor    al,0x0
	...
  40889d:	add    BYTE PTR [rax],al
  40889f:	add    BYTE PTR [rdi+0x43],al
  4088a2:	rex.XB cmp spl,BYTE PTR [r8]
  4088a5:	sub    BYTE PTR [rdi+0x4e],al
  4088a8:	push   rbp
  4088a9:	sub    DWORD PTR [rax],esp
  4088ab:	xor    al,0x2e
  4088ad:	cmp    DWORD PTR [rsi],ebp
  4088af:	xor    al,0x0
	...
  4088bd:	add    BYTE PTR [rax],al
  4088bf:	add    BYTE PTR [rdi+0x43],al
  4088c2:	rex.XB cmp spl,BYTE PTR [r8]
  4088c5:	sub    BYTE PTR [rdi+0x4e],al
  4088c8:	push   rbp
  4088c9:	sub    DWORD PTR [rax],esp
  4088cb:	xor    al,0x2e
  4088cd:	cmp    DWORD PTR [rsi],ebp
  4088cf:	xor    al,0x0
	...
  4088dd:	add    BYTE PTR [rax],al
  4088df:	add    BYTE PTR [rdi+0x43],al
  4088e2:	rex.XB cmp spl,BYTE PTR [r8]
  4088e5:	sub    BYTE PTR [rdi+0x4e],al
  4088e8:	push   rbp
  4088e9:	sub    DWORD PTR [rax],esp
  4088eb:	xor    al,0x2e
  4088ed:	cmp    DWORD PTR [rsi],ebp
  4088ef:	xor    al,0x0
	...
  4088fd:	add    BYTE PTR [rax],al
  4088ff:	add    BYTE PTR [rdi+0x43],al
  408902:	rex.XB cmp spl,BYTE PTR [r8]
  408905:	sub    BYTE PTR [rdi+0x4e],al
  408908:	push   rbp
  408909:	sub    DWORD PTR [rax],esp
  40890b:	xor    al,0x2e
  40890d:	cmp    DWORD PTR [rsi],ebp
  40890f:	xor    al,0x0
	...
  40891d:	add    BYTE PTR [rax],al
  40891f:	add    BYTE PTR [rdi+0x43],al
  408922:	rex.XB cmp spl,BYTE PTR [r8]
  408925:	sub    BYTE PTR [rdi+0x4e],al
  408928:	push   rbp
  408929:	sub    DWORD PTR [rax],esp
  40892b:	xor    al,0x2e
  40892d:	cmp    DWORD PTR [rsi],ebp
  40892f:	xor    al,0x0
	...
  40893d:	add    BYTE PTR [rax],al
  40893f:	add    BYTE PTR [rdi+0x43],al
  408942:	rex.XB cmp spl,BYTE PTR [r8]
  408945:	sub    BYTE PTR [rdi+0x4e],al
  408948:	push   rbp
  408949:	sub    DWORD PTR [rax],esp
  40894b:	xor    al,0x2e
  40894d:	cmp    DWORD PTR [rsi],ebp
  40894f:	xor    al,0x0
	...
  40895d:	add    BYTE PTR [rax],al
  40895f:	add    BYTE PTR [rdi+0x43],al
  408962:	rex.XB cmp spl,BYTE PTR [r8]
  408965:	sub    BYTE PTR [rdi+0x4e],al
  408968:	push   rbp
  408969:	sub    DWORD PTR [rax],esp
  40896b:	xor    al,0x2e
  40896d:	cmp    DWORD PTR [rsi],ebp
  40896f:	xor    al,0x0
	...
  40897d:	add    BYTE PTR [rax],al
  40897f:	add    BYTE PTR [rdi+0x43],al
  408982:	rex.XB cmp spl,BYTE PTR [r8]
  408985:	sub    BYTE PTR [rdi+0x4e],al
  408988:	push   rbp
  408989:	sub    DWORD PTR [rax],esp
  40898b:	xor    al,0x2e
  40898d:	cmp    DWORD PTR [rsi],ebp
  40898f:	xor    al,0x0
	...
  40899d:	add    BYTE PTR [rax],al
  40899f:	add    BYTE PTR [rdi+0x43],al
  4089a2:	rex.XB cmp spl,BYTE PTR [r8]
  4089a5:	sub    BYTE PTR [rdi+0x4e],al
  4089a8:	push   rbp
  4089a9:	sub    DWORD PTR [rax],esp
  4089ab:	xor    al,0x2e
  4089ad:	cmp    DWORD PTR [rsi],ebp
  4089af:	xor    al,0x0
	...
  4089bd:	add    BYTE PTR [rax],al
  4089bf:	add    BYTE PTR [rdi+0x43],al
  4089c2:	rex.XB cmp spl,BYTE PTR [r8]
  4089c5:	sub    BYTE PTR [rdi+0x4e],al
  4089c8:	push   rbp
  4089c9:	sub    DWORD PTR [rax],esp
  4089cb:	xor    al,0x2e
  4089cd:	cmp    DWORD PTR [rsi],ebp
  4089cf:	xor    al,0x0
	...
  4089dd:	add    BYTE PTR [rax],al
  4089df:	add    BYTE PTR [rdi+0x43],al
  4089e2:	rex.XB cmp spl,BYTE PTR [r8]
  4089e5:	sub    BYTE PTR [rdi+0x4e],al
  4089e8:	push   rbp
  4089e9:	sub    DWORD PTR [rax],esp
  4089eb:	xor    al,0x2e
  4089ed:	cmp    DWORD PTR [rsi],ebp
  4089ef:	xor    al,0x0
	...
  4089fd:	add    BYTE PTR [rax],al
  4089ff:	add    BYTE PTR [rdi+0x43],al
  408a02:	rex.XB cmp spl,BYTE PTR [r8]
  408a05:	sub    BYTE PTR [rdi+0x4e],al
  408a08:	push   rbp
  408a09:	sub    DWORD PTR [rax],esp
  408a0b:	xor    al,0x2e
  408a0d:	cmp    DWORD PTR [rsi],ebp
  408a0f:	xor    al,0x0
	...
  408a1d:	add    BYTE PTR [rax],al
  408a1f:	add    BYTE PTR [rdi+0x43],al
  408a22:	rex.XB cmp spl,BYTE PTR [r8]
  408a25:	sub    BYTE PTR [rdi+0x4e],al
  408a28:	push   rbp
  408a29:	sub    DWORD PTR [rax],esp
  408a2b:	xor    al,0x2e
  408a2d:	cmp    DWORD PTR [rsi],ebp
  408a2f:	xor    al,0x0
	...
  408a3d:	add    BYTE PTR [rax],al
  408a3f:	add    BYTE PTR [rdi+0x43],al
  408a42:	rex.XB cmp spl,BYTE PTR [r8]
  408a45:	sub    BYTE PTR [rdi+0x4e],al
  408a48:	push   rbp
  408a49:	sub    DWORD PTR [rax],esp
  408a4b:	xor    al,0x2e
  408a4d:	cmp    DWORD PTR [rsi],ebp
  408a4f:	xor    al,0x0
	...
  408a5d:	add    BYTE PTR [rax],al
  408a5f:	add    BYTE PTR [rdi+0x43],al
  408a62:	rex.XB cmp spl,BYTE PTR [r8]
  408a65:	sub    BYTE PTR [rdi+0x4e],al
  408a68:	push   rbp
  408a69:	sub    DWORD PTR [rax],esp
  408a6b:	xor    al,0x2e
  408a6d:	cmp    DWORD PTR [rsi],ebp
  408a6f:	xor    al,0x0
	...
  408a7d:	add    BYTE PTR [rax],al
  408a7f:	add    BYTE PTR [rdi+0x43],al
  408a82:	rex.XB cmp spl,BYTE PTR [r8]
  408a85:	sub    BYTE PTR [rdi+0x4e],al
  408a88:	push   rbp
  408a89:	sub    DWORD PTR [rax],esp
  408a8b:	xor    al,0x2e
  408a8d:	cmp    DWORD PTR [rsi],ebp
  408a8f:	xor    al,0x0
	...
  408a9d:	add    BYTE PTR [rax],al
  408a9f:	add    BYTE PTR [rdi+0x43],al
  408aa2:	rex.XB cmp spl,BYTE PTR [r8]
  408aa5:	sub    BYTE PTR [rdi+0x4e],al
  408aa8:	push   rbp
  408aa9:	sub    DWORD PTR [rax],esp
  408aab:	xor    al,0x2e
  408aad:	cmp    DWORD PTR [rsi],ebp
  408aaf:	xor    al,0x0
	...
  408abd:	add    BYTE PTR [rax],al
  408abf:	add    BYTE PTR [rdi+0x43],al
  408ac2:	rex.XB cmp spl,BYTE PTR [r8]
  408ac5:	sub    BYTE PTR [rdi+0x4e],al
  408ac8:	push   rbp
  408ac9:	sub    DWORD PTR [rax],esp
  408acb:	xor    al,0x2e
  408acd:	cmp    DWORD PTR [rsi],ebp
  408acf:	xor    al,0x0
	...
  408ae5:	add    BYTE PTR [rax],al
  408ae7:	add    BYTE PTR [rcx],al
  408ae9:	add    BYTE PTR [rax],al
  408aeb:	add    BYTE PTR [rsp+rdx*8],dh
  408aee:	add    BYTE PTR [rax],al
  408af0:	movabs al,ds:0x3c00000040000085
  408af9:	(bad)  
  408afa:	add    BYTE PTR [rax],al
  408afc:	mov    al,0x85
  408afe:	add    BYTE PTR [rax],al
  408b00:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000000409000 <.pdata>:
  409000:	add    BYTE PTR [rax],dl
  409002:	add    BYTE PTR [rax],al
  409004:	add    DWORD PTR [rax],edx
  409006:	add    BYTE PTR [rax],al
  409008:	add    BYTE PTR [rax+0x10100000],ah
  40900e:	add    BYTE PTR [rax],al
  409010:	push   rcx
  409011:	adc    DWORD PTR [rax],eax
  409013:	add    BYTE PTR [rax+riz*4],al
  409016:	add    BYTE PTR [rax],al
  409018:	(bad)  
  409019:	adc    DWORD PTR [rax],eax
  40901b:	add    BYTE PTR [rsi+0xc000011],ch
  409021:	movabs al,ds:0x14ce000011b00000
  40902a:	add    BYTE PTR [rax],al
  40902c:	adc    al,0xa0
  40902e:	add    BYTE PTR [rax],al
  409030:	rcl    BYTE PTR [rax+rax*1],1
  409033:	add    dl,dh
  409035:	adc    al,0x0
  409037:	add    BYTE PTR [rax],ch
  409039:	movabs al,ds:0x1522000015000000
  409042:	add    BYTE PTR [rax],al
  409044:	rex.W movabs al,ds:0x183c000015300000
  40904e:	add    BYTE PTR [rax],al
  409050:	ins    BYTE PTR es:[rdi],dx
  409051:	movabs al,ds:0x1892000018400000
  40905a:	add    BYTE PTR [rax],al
  40905c:	shl    BYTE PTR [rax+0x18a00000],1
  409062:	add    BYTE PTR [rax],al
  409064:	repnz sbb BYTE PTR [rax],al
  409067:	add    al,bl
  409069:	movabs al,ds:0x190c000019000000
  409072:	add    BYTE PTR [rax],al
  409074:	loopne 0x409016
  409076:	add    BYTE PTR [rax],al
  409078:	adc    BYTE PTR [rcx],bl
  40907a:	add    BYTE PTR [rax],al
  40907c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40907d:	sbb    al,BYTE PTR [rax]
  40907f:	add    ah,ah
  409081:	movabs al,ds:0x1ac300001ab00000
  40908a:	add    BYTE PTR [rax],al
  40908c:	sbb    al,0xa1
  40908e:	add    BYTE PTR [rax],al
  409090:	rcr    BYTE PTR [rdx],1
  409092:	add    BYTE PTR [rax],al
  409094:	rex.WRX sub rax,0xffffffffa1200000
  40909a:	add    BYTE PTR [rax],al
  40909c:	nop
  40909d:	add    BYTE PTR cs:[rax],al
  4090a0:	(bad)  
  4090a1:	(bad)  
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	(bad)  
  4090a5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	rex (bad) 
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	pop    rcx
  4090ad:	(bad)  
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	fsub   QWORD PTR [rbp+0x2f600000]
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	xchg   ebp,eax
  4090b9:	(bad)  
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	in     al,0xa5
  4090be:	add    BYTE PTR [rax],al
  4090c0:	movabs al,ds:0xec00002ff500002f
  4090c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    BYTE PTR [rax],dh
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	sbb    al,0x30
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	clc    
  4090d5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	and    BYTE PTR [rax],dh
  4090da:	add    BYTE PTR [rax],al
  4090dc:	sub    dh,BYTE PTR [rax]
  4090de:	add    BYTE PTR [rax],al
  4090e0:	cld    
  4090e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	xor    BYTE PTR [rax],dh
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	xor    esi,DWORD PTR [rax]
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	add    BYTE PTR [rsi+0x30400000],ah
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	(bad)  
  4090f5:	xor    DWORD PTR [rax],eax
  4090f7:	add    BYTE PTR [rsi+riz*4],al
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	and    BYTE PTR [rcx],dh
  4090fe:	add    BYTE PTR [rax],al
  409100:	sbb    esi,DWORD PTR [rdx]
  409102:	add    BYTE PTR [rax],al
  409104:	adc    al,0xa6
  409106:	add    BYTE PTR [rax],al
  409108:	and    BYTE PTR [rdx],dh
  40910a:	add    BYTE PTR [rax],al
  40910c:	rex.WRXB xor r8b,BYTE PTR [r8]
  40910f:	add    BYTE PTR [rsi+riz*4],ah
  409112:	add    BYTE PTR [rax],al
  409114:	push   rax
  409115:	xor    al,BYTE PTR [rax]
  409117:	add    BYTE PTR [rcx+0x2c000032],bh
  40911d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40911e:	add    BYTE PTR [rax],al
  409120:	shl    BYTE PTR [rdx],0x0
  409123:	add    bl,al
  409125:	xor    al,BYTE PTR [rax]
  409127:	add    BYTE PTR [rax],bh
  409129:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40912a:	add    BYTE PTR [rax],al
  40912c:	shl    BYTE PTR [rdx],1
  40912e:	add    BYTE PTR [rax],al
  409130:	adc    DWORD PTR [rbx],esi
  409132:	add    BYTE PTR [rax],al
  409134:	cmp    al,0xa6
  409136:	add    BYTE PTR [rax],al
  409138:	and    BYTE PTR [rbx],dh
  40913a:	add    BYTE PTR [rax],al
  40913c:	sub    al,0x33
  40913e:	add    BYTE PTR [rax],al
  409140:	rex.R cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409142:	add    BYTE PTR [rax],al
  409144:	xor    BYTE PTR [rbx],dh
  409146:	add    BYTE PTR [rax],al
  409148:	sub    al,0x34
  40914a:	add    BYTE PTR [rax],al
  40914c:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40914e:	add    BYTE PTR [rax],al
  409150:	xor    BYTE PTR [rax+rax*1],dh
  409153:	add    BYTE PTR [rbx],dh
  409155:	xor    al,0x0
  409157:	add    BYTE PTR [rax-0x5a],ah
  40915a:	add    BYTE PTR [rax],al
  40915c:	xor    al,0x0
  40915f:	add    BYTE PTR [rsp+rsi*1+0x0],al
  409163:	add    BYTE PTR [rsi+riz*4+0x0],ah
  409167:	add    BYTE PTR [rax+0x34],dl
  40916a:	add    BYTE PTR [rax],al
  40916c:	push   rsp
  40916d:	xor    al,0x0
  40916f:	add    BYTE PTR [rax-0x5a],ch
  409172:	add    BYTE PTR [rax],al
  409174:	(bad)  
  409175:	xor    al,0x0
  409177:	add    cl,al
  409179:	xor    al,0x0
  40917b:	add    BYTE PTR [rsi+riz*4+0x0],ch
  40917f:	add    al,dl
  409181:	xor    al,0x0
  409183:	add    BYTE PTR [rdx],dh
  409185:	add    BYTE PTR ss:[rax],al
  409188:	js     0x409130
  40918a:	add    BYTE PTR [rax],al
  40918c:	rex
  40918d:	add    BYTE PTR ss:[rax],al
  409190:	cmp    DWORD PTR [rcx],edi
  409192:	add    BYTE PTR [rax],al
  409194:	mov    WORD PTR [rsi+0x39400000],fs
  40919a:	add    BYTE PTR [rax],al
  40919c:	out    0x3a,al
  40919e:	add    BYTE PTR [rax],al
  4091a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4091a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	lock cmp al,BYTE PTR [rax]
  4091a7:	add    ah,bl
  4091a9:	cmp    eax,DWORD PTR [rax]
  4091ab:	add    BYTE PTR [rsi+riz*4+0x3be00000],ch
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	cwde   
  4091b5:	cmp    eax,0xa6bc0000
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	movabs al,ds:0xc400003e0d00003d
  4091c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	adc    BYTE PTR [rsi],bh
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	(bad)  
  4091cd:	add    BYTE PTR ds:[rax],al
  4091d0:	(bad)  
  4091d1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	nop
  4091d5:	add    BYTE PTR ds:[rax],al
  4091d8:	(bad)  
  4091d9:	(bad)  
  4091da:	add    BYTE PTR [rax],al
  4091dc:	loopne 0x409184
  4091de:	add    BYTE PTR [rax],al
  4091e0:	xor    BYTE PTR [rdi],bh
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	or     al,BYTE PTR [rax+0x0]
  4091e7:	add    al,ch
  4091e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	adc    BYTE PTR [rax+0x0],al
  4091ef:	add    BYTE PTR [rdi],ch
  4091f1:	add    BYTE PTR [rax],al
  4091f4:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	xor    BYTE PTR [rax+0x0],al
  4091fb:	add    BYTE PTR [rdx+0x40],al
  4091fe:	add    BYTE PTR [rax],al
  409200:	hlt    
  409201:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409202:	add    BYTE PTR [rax],al
  409204:	push   rax
  409205:	add    BYTE PTR [rax],al
  409208:	xchg   ebp,eax
  409209:	add    BYTE PTR [rax],al
  40920c:	clc    
  40920d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40920e:	add    BYTE PTR [rax],al
  409210:	movabs al,ds:0xfc0000413e000040
  409219:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40921a:	add    BYTE PTR [rax],al
  40921c:	rex
  40921d:	add    BYTE PTR [r8],al
  409220:	add    DWORD PTR [rcx+0x0],0x0
  409224:	or     BYTE PTR [rdi+0x41900000],ah
  40922a:	add    BYTE PTR [rax],al
  40922c:	retf   
  40922d:	add    BYTE PTR [r8],al
  409230:	adc    al,0xa7
  409232:	add    BYTE PTR [rax],al
  409234:	rol    BYTE PTR [rcx+0x0],1
  409237:	add    BYTE PTR [rsi+0x42],bl
  40923a:	add    BYTE PTR [rax],al
  40923c:	sbb    al,0xa7
  40923e:	add    BYTE PTR [rax],al
  409240:	(bad)  
  409241:	rex.X add BYTE PTR [rax],al
  409244:	cwde   
  409245:	rex.X add BYTE PTR [rax],al
  409248:	sub    BYTE PTR [rdi+0x42a00000],ah
  40924e:	add    BYTE PTR [rax],al
  409250:	cmc    
  409251:	rex.X add BYTE PTR [rax],al
  409254:	xor    al,0xa7
  409256:	add    BYTE PTR [rax],al
  409258:	add    BYTE PTR [rbx+0x0],al
  40925b:	add    BYTE PTR [rsi+0x40000043],ch
  409261:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  409262:	add    BYTE PTR [rax],al
  409264:	rol    BYTE PTR [rax+rax*1+0x0],1
  409268:	fadd   DWORD PTR [rax+rax*1+0x0]
  40926c:	push   rax
  40926d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40926e:	add    BYTE PTR [rax],al
  409270:	loopne 0x4092b6
  409272:	add    BYTE PTR [rax],al
  409274:	jmp    0x4092ba
  409276:	add    BYTE PTR [rax],al
  409278:	push   rsp
  409279:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40927a:	add    BYTE PTR [rax],al
  40927c:	nop
  40927d:	add    BYTE PTR [r8],r8b
  409280:	xchg   ebx,eax
  409281:	add    BYTE PTR [r8],r8b
  409284:	push   0xffffffffa00000a0
  409289:	add    BYTE PTR [r8],r8b
  40928c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  40928d:	rex.RX add BYTE PTR [rax],r8b
  409290:	and    BYTE PTR [rbp+0x46b00000],ah
  409296:	add    BYTE PTR [rax],al
  409298:	rex.X
  409299:	rex.RXB add BYTE PTR [r8],r8b
  40929c:	(bad)  
  40929d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40929e:	add    BYTE PTR [rax],al
  4092a0:	push   rax
  4092a1:	rex.RXB add BYTE PTR [r8],r8b
  4092a4:	mov    esp,0xe0000048
  4092a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	ror    BYTE PTR [rax+0x0],0x0
  4092b0:	(bad)  
  4092b1:	rex.WX add BYTE PTR [rax],al
  4092b4:	movabs al,ds:0x7c00004a200000a4
  4092bd:	rex.WXB add BYTE PTR [r8],al
  4092c0:	jo     0x409266
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	or     BYTE PTR [rbx+0x0],0x0
  4092c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4092c9:	rex.WRB add BYTE PTR [r8],r8b
  4092cc:	mov    BYTE PTR [rax+rax*1+0x4db000],ah
  4092d3:	add    BYTE PTR [rbx+0x5000004e],cl
  4092d9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4092da:	add    BYTE PTR [rax],al
  4092dc:	nop
  4092dd:	rex.WRX add BYTE PTR [rax],r8b
  4092e0:	mov    edi,0x4800004e
  4092e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	ror    BYTE PTR [rsi+0x0],0x0
  4092ec:	fistp  WORD PTR [rcx+0x0]
  4092ef:	add    BYTE PTR [rax],bh
  4092f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	loopne 0x40934f
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	mov    ds,WORD PTR [rdx+0x0]
  4092fb:	add    ah,cl
  4092fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
	...

Disassembly of section .xdata:

000000000040a000 <.xdata>:
  40a000:	add    DWORD PTR [rax],eax
  40a002:	add    BYTE PTR [rax],al
  40a004:	add    DWORD PTR [rcx+rax*1],eax
  40a007:	add    BYTE PTR [rdx+rax*2],al
  40a00a:	add    BYTE PTR [rax],al
  40a00c:	add    DWORD PTR [rcx+rax*1],eax
  40a00f:	add    BYTE PTR [rdx+riz*2],al
  40a012:	add    BYTE PTR [rax],al
  40a014:	add    DWORD PTR [rdi],ecx
  40a016:	or     BYTE PTR [rax],al
  40a018:	lgdt   [rbx]
  40a01b:	add    BYTE PTR [rax],cl
  40a01d:	xor    BYTE PTR [rdi],al
  40a01f:	(bad)  
  40a020:	(bad)  
  40a021:	jo     0x40a028
  40a023:	push   rax
  40a024:	add    al,0xc0
  40a026:	add    dl,al
  40a028:	or     DWORD PTR [rcx+rax*1],eax
  40a02b:	add    BYTE PTR [rdx+rax*2],al
  40a02e:	add    BYTE PTR [rax],al
  40a030:	pop    rax
  40a031:	add    BYTE PTR cs:[rax],al
  40a034:	add    DWORD PTR [rax],eax
  40a036:	add    BYTE PTR [rax],al
  40a038:	(bad)  
  40a039:	adc    al,0x0
  40a03b:	add    ah,ch
  40a03d:	adc    al,0x0
  40a03f:	add    al,ah
  40a041:	cmp    eax,DWORD PTR [rax]
  40a043:	add    ah,ch
  40a045:	adc    al,0x0
  40a047:	add    BYTE PTR [rcx],cl
  40a049:	add    al,0x1
  40a04b:	add    BYTE PTR [rdx+rax*2],al
  40a04e:	add    BYTE PTR [rax],al
  40a050:	pop    rax
  40a051:	add    BYTE PTR cs:[rax],al
  40a054:	add    DWORD PTR [rax],eax
  40a056:	add    BYTE PTR [rax],al
  40a058:	add    al,0x15
  40a05a:	add    BYTE PTR [rax],al
  40a05c:	sbb    al,0x15
  40a05e:	add    BYTE PTR [rax],al
  40a060:	loopne 0x40a09d
  40a062:	add    BYTE PTR [rax],al
  40a064:	sbb    al,0x15
  40a066:	add    BYTE PTR [rax],al
  40a068:	add    DWORD PTR [rax],eax
  40a06a:	add    BYTE PTR [rax],al
  40a06c:	sbb    DWORD PTR [rcx],edx
  40a06e:	or     DWORD PTR [rax],eax
  40a070:	adc    DWORD PTR [rcx],eax
  40a072:	xor    al,BYTE PTR [rax]
  40a074:	or     dh,BYTE PTR [rax]
  40a076:	or     DWORD PTR [rax+0x8],esp
  40a079:	jo     0x40a082
  40a07b:	push   rax
  40a07c:	(bad)  
  40a07d:	rol    BYTE PTR [rax+rdx*8],0x2
  40a081:	loopne 0x40a083
  40a083:	add    BYTE PTR [rax+0x2d],dl
  40a086:	add    BYTE PTR [rax],al
  40a088:	(bad)  
  40a089:	inc    DWORD PTR [rcx]
  40a08b:	cmp    BYTE PTR [rip+0x5610000],r8b        # 0x5a1a092
  40a092:	cdq    
  40a093:	add    eax,0x3c018c00
  40a098:	pop    QWORD PTR [rip+0x501d600]        # 0x542769e
  40a09e:	xchg   esp,eax
  40a09f:	add    eax,0x6301e200
  40a0a4:	mov    edx,0x2d00005
  40a0a9:	add    eax,0xfd0004be
  40a0ae:	add    al,BYTE PTR [rip+0xffffffffb00005f0]        # 0xffffffffb040a6a4
  40a0b4:	add    eax,DWORD PTR [rip+0xffffffffdc0005ee]        # 0xffffffffdc40a6a8
  40a0ba:	add    eax,DWORD PTR [rip+0xffffffffef0005ba]        # 0xffffffffef40a67a
  40a0c0:	add    ebx,DWORD PTR [rip+0xffffffff920005e9]        # 0xffffffff9240a6af
  40a0c6:	add    al,0x5
  40a0c8:	mov    edi,0x58a0005
  40a0cd:	xor    BYTE PTR [rax],al
  40a0cf:	add    BYTE PTR [rcx],al
  40a0d1:	add    al,0x1
  40a0d3:	add    BYTE PTR [rdx+riz*2],al
  40a0d6:	add    BYTE PTR [rax],al
  40a0d8:	add    DWORD PTR [rcx+rax*1],eax
  40a0db:	add    BYTE PTR [rdx+riz*2],al
  40a0de:	add    BYTE PTR [rax],al
  40a0e0:	add    DWORD PTR [rax],eax
  40a0e2:	add    BYTE PTR [rax],al
  40a0e4:	sbb    DWORD PTR [rdi+rax*1],ecx
  40a0e7:	add    BYTE PTR [rdx+riz*8],cl
  40a0ea:	or     BYTE PTR [rax],dh
  40a0ec:	(bad)  
  40a0ed:	(bad)  
  40a0ee:	(bad)  
  40a0ef:	jo     0x40a0f6
  40a0f1:	push   rax
  40a0f2:	add    al,0xc0
  40a0f4:	add    dl,al
  40a0f6:	add    BYTE PTR [rax],al
  40a0f8:	push   rax
  40a0f9:	sub    eax,0xffff0000
  40a0fe:	add    DWORD PTR [rcx],ebx
  40a100:	and    eax,DWORD PTR [rip+0x52e0000]        # 0x56ea106
  40a106:	mov    DWORD PTR [rdx],0x8d054500
  40a10c:	add    eax,DWORD PTR [rax]
  40a10e:	push   rbp
  40a10f:	in     eax,dx
  40a110:	add    esi,esp
  40a112:	add    al,BYTE PTR [rax]
  40a114:	loope  0x40a118
  40a116:	add    eax,0x0
  40a11b:	add    BYTE PTR [rcx],al
  40a11d:	add    BYTE PTR [rax],al
  40a11f:	add    BYTE PTR [rcx],bl
  40a121:	or     al,0x7
  40a123:	add    BYTE PTR [rdx+rax*8],cl
  40a126:	or     BYTE PTR [rax],dh
  40a128:	(bad)  
  40a129:	(bad)  
  40a12a:	(bad)  
  40a12b:	jo     0x40a132
  40a12d:	push   rax
  40a12e:	add    al,0xc0
  40a130:	add    dl,al
  40a132:	add    BYTE PTR [rax],al
  40a134:	push   rax
  40a135:	sub    eax,0xffff0000
  40a13a:	add    DWORD PTR [rax+0x51e06],ecx
  40a140:	add    BYTE PTR [rax],dh
  40a142:	add    eax,0x3f00219c
  40a147:	adc    al,ah
  40a149:	and    al,0x0
  40a14b:	add    DWORD PTR [rcx],0x5
  40a14e:	add    BYTE PTR [rax],al
  40a150:	xchg   edx,eax
  40a151:	add    DWORD PTR [rsi+rbx*8],edx
  40a154:	and    al,0x0
  40a156:	(bad)
  40a15a:	add    bl,dl
  40a15c:	add    DWORD PTR [rsp+rbx*8],edx
  40a15f:	and    al,0x0
  40a161:	test   DWORD PTR [rdx],eax
  40a163:	add    eax,0x2940000
  40a168:	adc    al,0xda
  40a16a:	and    al,0x0
  40a16c:	mov    BYTE PTR [rdx],0x5
  40a16f:	add    BYTE PTR [rax],al
  40a171:	(bad)  
  40a172:	add    dl,BYTE PTR [rax+rbx*8]
  40a175:	and    al,0x0
  40a177:	xchg   DWORD PTR [rbx],eax
  40a179:	add    eax,0x3960000
  40a17e:	adc    al,0xd6
  40a180:	and    al,0x0
  40a182:	enter  0x503,0x0
  40a186:	add    bh,dl
  40a188:	add    edx,DWORD PTR [rdx+rdi*4]
  40a18b:	and    al,0x0
  40a18d:	mov    es,WORD PTR [rax*1+0x4990000]
  40a194:	add    eax,0xb00024b5
  40a199:	add    al,0x5
  40a19b:	mov    al,0x24
  40a19d:	add    BYTE PTR [rdi+0x24ab1004],bh
  40a1a3:	add    BYTE PTR [rdi+0x505],cl
  40a1a9:	(bad)  
  40a1aa:	add    eax,0x24a605
  40a1af:	lods   al,BYTE PTR ds:[rsi]
  40a1b0:	add    eax,0x24a105
  40a1b5:	mov    ebx,0x249c1005
  40a1ba:	add    BYTE PTR [rbx+0x506],cl
  40a1c0:	xchg   esi,eax
  40a1c1:	(bad)  
  40a1c2:	add    eax,0xa8002497
  40a1c7:	(bad)  
  40a1c8:	add    eax,0xb7002492
  40a1cd:	(bad)  
  40a1ce:	adc    BYTE PTR [rbp+0x7870024],cl
  40a1d4:	add    eax,0x7920000
  40a1d9:	add    eax,0xa4002488
  40a1de:	(bad)  
  40a1df:	add    eax,0xb3002483
  40a1e4:	(bad)  
  40a1e5:	adc    dh,bh
  40a1e7:	and    eax,DWORD PTR [rax]
  40a1e9:	or     DWORD PTR [rax],0x5
  40a1ec:	add    BYTE PTR [rax],al
  40a1ee:	mov    cs,WORD PTR [rax]
  40a1f0:	add    eax,0xa00023f9
  40a1f5:	or     BYTE PTR [rip+0xffffffffaf0023f4],al        # 0xffffffffaf40c5ef
  40a1fb:	or     BYTE PTR [rax],dl
  40a1fd:	out    dx,eax
  40a1fe:	and    eax,DWORD PTR [rax]
  40a200:	dec    DWORD PTR [rax]
  40a202:	add    eax,0x98a0000
  40a207:	add    eax,0x9c0023ea
  40a20c:	or     DWORD PTR [rip+0xffffffffab0023e5],eax        # 0xffffffffab40c5f7
  40a212:	or     DWORD PTR [rax],edx
  40a214:	loopne 0x40a239
  40a216:	add    bl,bh
  40a218:	or     DWORD PTR [rip+0xa860000],eax        # 0xac6a21e
  40a21e:	add    eax,0x980023db
  40a223:	or     al,BYTE PTR [rip+0xffffffffa70023d6]        # 0xffffffffa740c5ff
  40a229:	or     dl,BYTE PTR [rax]
  40a22b:	shl    DWORD PTR [rbx],1
  40a22d:	add    bh,dh
  40a22f:	or     al,BYTE PTR [rip+0xb820000]        # 0xbc2a235
  40a235:	add    eax,0x940023cc
  40a23a:	or     eax,DWORD PTR [rip+0xffffffffa30023c7]        # 0xffffffffa340c607
  40a240:	or     edx,DWORD PTR [rax]
  40a242:	ret    0x23
  40a245:	repz or eax,DWORD PTR [rip+0xbfe0000]        # 0xc3ea24c
  40a24c:	add    eax,0x900023bd
  40a251:	or     al,0x5
  40a253:	mov    eax,0xc9f0023
  40a258:	adc    BYTE PTR [rbx+0xcef0023],dh
  40a25e:	add    eax,0xcfa0000
  40a263:	add    eax,0x8c0023ae
  40a268:	or     eax,0x23a905
  40a26d:	fwait
  40a26e:	or     eax,0x23a410
  40a273:	jmp    0x40a282
  40a275:	add    eax,0xdf60000
  40a27a:	add    eax,0x8800239f
  40a27f:	(bad)  
  40a280:	add    eax,0x9700239a
  40a285:	(bad)  
  40a286:	adc    BYTE PTR [rbp+0xee70023],dl
  40a28c:	add    eax,0xef20000
  40a291:	add    eax,0x84002390
  40a296:	syscall 
  40a298:	mov    esp,DWORD PTR [rbx]
  40a29a:	add    BYTE PTR [rbx+0x2386100f],dl
  40a2a0:	add    bl,ah
  40a2a2:	syscall 
  40a2a4:	add    BYTE PTR [rax],al
  40a2a6:	out    dx,al
  40a2a7:	syscall 
  40a2a9:	and    DWORD PTR [rbx],0x5108000
  40a2af:	cld    
  40a2b0:	and    al,BYTE PTR [rax]
  40a2b2:	(bad)  
  40a2b3:	adc    BYTE PTR [rax],dl
  40a2b5:	mul    DWORD PTR [rdx]
  40a2b7:	add    bh,bl
  40a2b9:	adc    BYTE PTR [rip+0x10ea0000],al        # 0x112aa2bf
  40a2bf:	add    eax,0xfc0022f5
  40a2c4:	adc    BYTE PTR [rip+0xffffffff8b0022f3],al        # 0xffffffff8b40c5bd
  40a2ca:	adc    DWORD PTR [rax],edx
  40a2cc:	out    dx,al
  40a2cd:	and    al,BYTE PTR [rax]
  40a2cf:	fist   DWORD PTR [rcx]
  40a2d1:	add    eax,0x11e60000
  40a2d6:	add    eax,0xf80022ec
  40a2db:	adc    DWORD PTR [rip+0xffffffff870022ea],eax        # 0xffffffff8740c5cb
  40a2e1:	adc    dl,BYTE PTR [rax]
  40a2e3:	in     eax,0x22
  40a2e5:	add    bh,dl
  40a2e7:	adc    al,BYTE PTR [rip+0x12e20000]        # 0x1322a2ed
  40a2ed:	add    eax,0xf40022e3
  40a2f2:	adc    al,BYTE PTR [rip+0xffffffff830022e1]        # 0xffffffff8340c5d9
  40a2f8:	adc    edx,DWORD PTR [rax]
  40a2fa:	fsub   QWORD PTR [rdx]
  40a2fc:	add    bl,dl
  40a2fe:	adc    eax,DWORD PTR [rip+0x13de0000]        # 0x141ea304
  40a304:	add    eax,0xf00022da
  40a309:	adc    eax,DWORD PTR [rip+0xffffffffff0022d8]        # 0xffffffffff40c5e7
  40a30f:	adc    edx,DWORD PTR [rax]
  40a311:	shl    DWORD PTR [rdx],cl
  40a313:	add    bh,cl
  40a315:	adc    al,0x5
  40a317:	add    BYTE PTR [rax],al
  40a319:	ficom  DWORD PTR [rax*1-0x13ffdd2f]
  40a320:	adc    al,0x5
  40a322:	iret   
  40a323:	and    al,BYTE PTR [rax]
  40a325:	sti    
  40a326:	adc    al,0x10
  40a328:	retf   0x22
  40a32b:	retf   
  40a32c:	adc    eax,0xd6000005
  40a331:	adc    eax,0x22c805
  40a336:	call   0x2306a850
  40a33b:	add    bh,dh
  40a33d:	adc    eax,0x22c110
  40a342:	(bad)  
  40a343:	(bad)  
  40a344:	add    eax,0x16d20000
  40a349:	add    eax,0xe40022bf
  40a34e:	(bad)  
  40a34f:	add    eax,0xf30022bd
  40a354:	(bad)  
  40a355:	adc    BYTE PTR [rbx+0x17c30022],bh
  40a35b:	add    eax,0x17ce0000
  40a360:	add    eax,0xe00022b9
  40a365:	(bad)  
  40a366:	add    eax,0xef0022b7
  40a36b:	(bad)  
  40a36c:	adc    BYTE PTR [rbp+0x18bf0022],dh
  40a372:	add    eax,0x18ca0000
  40a377:	add    eax,0xdc0022b3
  40a37c:	sbb    BYTE PTR [rip+0xffffffffeb0022b1],al        # 0xffffffffeb40c633
  40a382:	sbb    BYTE PTR [rax],dl
  40a384:	scas   eax,DWORD PTR es:[rdi]
  40a385:	and    al,BYTE PTR [rax]
  40a387:	mov    ebx,0x519
  40a38c:	(bad)  
  40a38d:	sbb    DWORD PTR [rip+0xffffffffd80022ad],eax        # 0xffffffffd840c640
  40a393:	sbb    DWORD PTR [rip+0xffffffffe70022ab],eax        # 0xffffffffe740c644
  40a399:	sbb    DWORD PTR [rax],edx
  40a39b:	test   eax,0x1ab70022
  40a3a0:	add    eax,0x1ac20000
  40a3a5:	add    eax,0xd40022a7
  40a3aa:	sbb    al,BYTE PTR [rip+0xffffffffe30022a5]        # 0xffffffffe340c655
  40a3b0:	sbb    dl,BYTE PTR [rax]
  40a3b2:	movabs ds:0xbe0000051bb30022,eax
  40a3bb:	sbb    eax,DWORD PTR [rip+0xffffffffd00022a1]        # 0xffffffffd040c662
  40a3c1:	sbb    eax,DWORD PTR [rip+0xffffffffdf00229f]        # 0xffffffffdf40c666
  40a3c7:	sbb    edx,DWORD PTR [rax]
  40a3c9:	popf   
  40a3ca:	and    al,BYTE PTR [rax]
  40a3cc:	scas   eax,DWORD PTR es:[rdi]
  40a3cd:	sbb    al,0x5
  40a3cf:	add    BYTE PTR [rax],al
  40a3d1:	mov    edx,0x229b051c
  40a3d6:	add    ah,cl
  40a3d8:	sbb    al,0x5
  40a3da:	cdq    
  40a3db:	and    al,BYTE PTR [rax]
  40a3dd:	fistp  DWORD PTR [rax+rdx*1]
  40a3e0:	xchg   edi,eax
  40a3e1:	and    al,BYTE PTR [rax]
  40a3e3:	stos   DWORD PTR es:[rdi],eax
  40a3e4:	sbb    eax,0xb6000005
  40a3e9:	sbb    eax,0x229505
  40a3ee:	enter  0x51d,0x93
  40a3f2:	and    al,BYTE PTR [rax]
  40a3f4:	xlat   BYTE PTR ds:[rbx]
  40a3f5:	sbb    eax,0x229110
  40a3fa:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40a3fb:	(bad)  
  40a3fc:	add    eax,0x1eb20000
  40a401:	add    eax,0xc400228f
  40a406:	(bad)  
  40a407:	add    eax,0xd300228d
  40a40c:	(bad)  
  40a40d:	adc    BYTE PTR [rbx+0x1fa30022],cl
  40a413:	add    eax,0x1fae0000
  40a418:	add    eax,0xc0002289
  40a41d:	(bad)  
  40a41e:	add    eax,0xcf002287
  40a423:	(bad)  
  40a424:	adc    BYTE PTR [rbp+0x209f0022],al
  40a42a:	add    eax,0x20aa0000
  40a42f:	add    eax,0xbc002280
  40a434:	and    BYTE PTR [rip+0xffffffffcb0021fb],al        # 0xffffffffcb40c635
  40a43a:	and    BYTE PTR [rax],dl
  40a43c:	mov    ebp,0x21b80021
  40a441:	sahf   
  40a442:	add    eax,DWORD PTR [rax]
  40a444:	add    BYTE PTR [rax],al
  40a446:	add    BYTE PTR [rax],al
  40a448:	add    DWORD PTR [rcx+rax*1],eax
  40a44b:	add    BYTE PTR [rdx+rax*2],al
  40a44e:	add    BYTE PTR [rax],al
  40a450:	add    DWORD PTR [rdx],ecx
  40a452:	(bad)  
  40a453:	add    BYTE PTR [rdx],cl
  40a455:	push   rdx
  40a456:	(bad)  
  40a457:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a8bd
  40a45d:	push   rax
  40a45e:	add    al,al
  40a460:	add    DWORD PTR [rdx],ecx
  40a462:	(bad)  
  40a463:	add    BYTE PTR [rdx],cl
  40a465:	push   rdx
  40a466:	(bad)  
  40a467:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0a8cd
  40a46d:	push   rax
  40a46e:	add    al,al
  40a470:	add    DWORD PTR [rax],edx
  40a472:	or     DWORD PTR [rax],eax
  40a474:	adc    BYTE PTR [rdx+0xc],al
  40a477:	xor    BYTE PTR [rbx],cl
  40a479:	(bad)  
  40a47a:	or     dh,BYTE PTR [rax+0x9]
  40a47d:	push   rax
  40a47e:	or     al,al
  40a480:	(bad)  
  40a481:	rol    BYTE PTR [rax+riz*8],1
  40a484:	add    dh,al
  40a486:	add    BYTE PTR [rax],al
  40a488:	add    DWORD PTR [rax],edx
  40a48a:	or     DWORD PTR [rax],eax
  40a48c:	adc    BYTE PTR [rdx+0xc],ah
  40a48f:	xor    BYTE PTR [rbx],cl
  40a491:	(bad)  
  40a492:	or     dh,BYTE PTR [rax+0x9]
  40a495:	push   rax
  40a496:	or     al,al
  40a498:	(bad)  
  40a499:	rol    BYTE PTR [rax+riz*8],1
  40a49c:	add    dh,al
  40a49e:	add    BYTE PTR [rax],al
  40a4a0:	sbb    DWORD PTR [rdi+rax*1],ecx
  40a4a3:	add    BYTE PTR [rdx+rax*4],cl
  40a4a6:	or     BYTE PTR [rax],dh
  40a4a8:	(bad)  
  40a4a9:	(bad)  
  40a4aa:	(bad)  
  40a4ab:	jo     0x40a4b2
  40a4ad:	push   rax
  40a4ae:	add    al,0xc0
  40a4b0:	add    dl,al
  40a4b2:	add    BYTE PTR [rax],al
  40a4b4:	push   rax
  40a4b5:	sub    eax,0x9bff0000
  40a4ba:	and    eax,0x51a1901
  40a4bf:	add    BYTE PTR [rax],al
  40a4c1:	sub    eax,0x102cb05
  40a4c6:	ds add eax,0xc603029e
  40a4cc:	add    al,BYTE PTR [rip+0xffffffffd80002cd]        # 0xffffffffd840a79f
  40a4d2:	add    al,BYTE PTR [rsi]
  40a4d4:	add    BYTE PTR [rax],al
  40a4d6:	add    DWORD PTR [rax],eax
  40a4d8:	add    BYTE PTR [rbp+0x0],bh
  40a4db:	add    BYTE PTR [rax],al
  40a4dd:	add    BYTE PTR [rax],al
  40a4df:	add    BYTE PTR [rcx],bl
  40a4e1:	(bad)  
  40a4e2:	or     BYTE PTR [rax],al
  40a4e4:	(bad)  
  40a4e5:	jb     0x40a4f1
  40a4e7:	xor    BYTE PTR [rcx],cl
  40a4e9:	(bad)  
  40a4ea:	or     BYTE PTR [rax+0x7],dh
  40a4ed:	push   rax
  40a4ee:	(bad)  
  40a4ef:	rol    BYTE PTR [rax+rdx*8],0x2
  40a4f3:	loopne 0x40a545
  40a4f5:	sub    eax,0x9bff0000
  40a4fa:	and    eax,0x5211901
  40a4ff:	add    BYTE PTR [rax],al
  40a501:	ds add eax,0x4f0102d9
  40a507:	add    eax,0xd40302ae
  40a50c:	add    al,BYTE PTR [rip+0xffffffffe60002db]        # 0xffffffffe640a7ed
  40a512:	add    al,BYTE PTR [rsi]
  40a514:	add    BYTE PTR [rax],al
  40a516:	add    DWORD PTR [rax],eax
  40a518:	add    BYTE PTR [rbp+0x0],bh
  40a51b:	add    BYTE PTR [rax],al
  40a51d:	add    BYTE PTR [rax],al
  40a51f:	add    BYTE PTR [rcx],al
  40a521:	adc    BYTE PTR [rcx],cl
  40a523:	add    BYTE PTR [rax],dl
  40a525:	movabs ds:0x5009700a600b300c,al
  40a52e:	or     al,al
  40a530:	(bad)  
  40a531:	rol    BYTE PTR [rax+riz*8],1
  40a534:	add    dh,al
  40a536:	add    BYTE PTR [rax],al
  40a538:	sbb    DWORD PTR [rbx],edx
  40a53a:	or     al,BYTE PTR [rax]
  40a53c:	adc    eax,DWORD PTR [rcx]
  40a53e:	and    DWORD PTR [rax],eax
  40a540:	or     al,0x30
  40a542:	or     esp,DWORD PTR [rax+0xa]
  40a545:	jo     0x40a550
  40a547:	push   rax
  40a548:	or     al,al
  40a54a:	(bad)  
  40a54b:	rol    BYTE PTR [rax+riz*8],1
  40a54e:	add    dh,al
  40a550:	push   rax
  40a551:	sub    eax,0xffff0000
  40a556:	add    DWORD PTR [rcx+0x27],esi
  40a559:	lea    eax,[rcx]
  40a55b:	add    BYTE PTR [rax],al
  40a55d:	mov    esi,0xd401d001
  40a562:	adc    eax,0x3e04f200
  40a567:	cwde   
  40a568:	adc    eax,0x3106aa00
  40a56d:	(bad)  
  40a56e:	adc    eax,0x3e08b500
  40a573:	(bad)  
  40a574:	adc    eax,0x2309ef00
  40a579:	(bad)  
  40a57a:	adc    eax,0x520c8600
  40a57f:	ficom  WORD PTR [rip+0x360db300]        # 0x364e5885
  40a585:	cwde   
  40a586:	adc    eax,0x630ea300
  40a58b:	(bad)  
  40a58c:	adc    eax,0x920faa00
  40a591:	add    edx,esp
  40a593:	adc    eax,0x2612d900
  40a598:	ficom  WORD PTR [rip+0x7c138a00]        # 0x7c542f9e
  40a59e:	(bad)  
  40a59f:	adc    eax,0xd14cb00
  40a5a4:	add    BYTE PTR [rax],al
  40a5a6:	jmp    0x40a5bc
  40a5a8:	sub    ah,dl
  40a5aa:	adc    eax,0x515ca00
  40a5af:	add    BYTE PTR [rax],al
  40a5b1:	iret   
  40a5b2:	adc    eax,0x15d405
  40a5b7:	fst    DWORD PTR [rip+0x15de05]        # 0x5683c2
  40a5bd:	stc    
  40a5be:	adc    eax,0x15fe05
  40a5c3:	cdq    
  40a5c4:	(bad)  
  40a5c5:	(bad)  
  40a5c6:	cwde   
  40a5c7:	adc    eax,0x0
  40a5cc:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245a5d4
  40a5d2:	add    DWORD PTR [rax],esi
  40a5d4:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245a5dc
  40a5da:	add    DWORD PTR [rax],esi
  40a5dc:	add    DWORD PTR [rcx+rax*1],eax
  40a5df:	add    BYTE PTR [rdx+rax*2],al
  40a5e2:	add    BYTE PTR [rax],al
  40a5e4:	add    DWORD PTR [rcx+rax*1],eax
  40a5e7:	add    BYTE PTR [rdx+rax*2],al
  40a5ea:	add    BYTE PTR [rax],al
  40a5ec:	add    DWORD PTR [rsi],eax
  40a5ee:	add    eax,DWORD PTR [rax]
  40a5f0:	(bad)  
  40a5f1:	rex.X add sil,BYTE PTR [rax]
  40a5f4:	add    DWORD PTR [rax+0x0],esp
  40a5f7:	add    BYTE PTR [rcx],al
  40a5f9:	add    BYTE PTR [rax],al
  40a5fb:	add    BYTE PTR [rcx],al
  40a5fd:	add    BYTE PTR [rax],al
  40a5ff:	add    BYTE PTR [rcx],al
  40a601:	add    BYTE PTR [rax],al
  40a603:	add    BYTE PTR [rcx],al
  40a605:	or     al,BYTE PTR [rsi]
  40a607:	add    BYTE PTR [rdx],cl
  40a609:	jb     0x40a611
  40a60b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0aa71
  40a611:	push   rax
  40a612:	add    al,al
  40a614:	add    DWORD PTR [rdx],ecx
  40a616:	add    eax,0x6d20a05
  40a61b:	add    eax,DWORD PTR [rbx]
  40a61d:	xor    BYTE PTR [rdx],al
  40a61f:	(bad)  
  40a620:	add    DWORD PTR [rax+0x0],edx
  40a623:	add    BYTE PTR [rcx],al
  40a625:	add    al,0x1
  40a627:	add    BYTE PTR [rdx+rax*2],al
  40a62a:	add    BYTE PTR [rax],al
  40a62c:	add    DWORD PTR [rsi],eax
  40a62e:	add    eax,DWORD PTR [rax]
  40a630:	(bad)  
  40a631:	rex.X add sil,BYTE PTR [rax]
  40a634:	add    DWORD PTR [rax+0x0],esp
  40a637:	add    BYTE PTR [rcx],al
  40a639:	add    BYTE PTR [rax],al
  40a63b:	add    BYTE PTR [rcx],al
  40a63d:	add    al,0x1
  40a63f:	add    BYTE PTR [rdx+riz*4],al
  40a642:	add    BYTE PTR [rax],al
  40a644:	add    DWORD PTR [rax],eax
  40a646:	add    BYTE PTR [rax],al
  40a648:	add    DWORD PTR [rsi],edx
  40a64a:	or     DWORD PTR [rax],eax
  40a64c:	(bad)  
  40a64d:	mov    BYTE PTR [rsi],al
  40a64f:	add    BYTE PTR [rax],dl
  40a651:	js     0x40a658
  40a653:	add    BYTE PTR [rbx],cl
  40a655:	push   0xffffffffe2060004
  40a65a:	add    dh,BYTE PTR [rax]
  40a65c:	add    DWORD PTR [rax+0x0],esp
  40a65f:	add    BYTE PTR [rcx],al
  40a661:	add    BYTE PTR [rax],al
  40a663:	add    BYTE PTR [rcx],al
  40a665:	add    BYTE PTR [rax],al
  40a667:	add    BYTE PTR [rcx],al
  40a669:	add    BYTE PTR [rax],al
  40a66b:	add    BYTE PTR [rcx],al
  40a66d:	(bad)  
  40a66e:	add    eax,DWORD PTR [rax]
  40a670:	(bad)  
  40a671:	(bad)  
  40a673:	xor    BYTE PTR [rcx],al
  40a675:	(bad)  
  40a676:	add    BYTE PTR [rax],al
  40a678:	add    DWORD PTR [rdi+rax*1],ecx
  40a67b:	add    BYTE PTR [rdx+riz*4],cl
  40a67e:	or     BYTE PTR [rax],dh
  40a680:	(bad)  
  40a681:	(bad)  
  40a682:	(bad)  
  40a683:	jo     0x40a68a
  40a685:	push   rax
  40a686:	add    al,0xc0
  40a688:	add    dl,al
  40a68a:	add    BYTE PTR [rax],al
  40a68c:	add    DWORD PTR [rcx],edx
  40a68e:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e58a5
  40a694:	or     dh,BYTE PTR [rax]
  40a696:	or     DWORD PTR [rax+0x8],esp
  40a699:	jo     0x40a6a2
  40a69b:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220aa72
  40a6a2:	add    BYTE PTR [rax],al
  40a6a4:	add    DWORD PTR [rcx+rax*1],eax
  40a6a7:	add    BYTE PTR [rdx+rax*2],al
  40a6aa:	add    BYTE PTR [rax],al
  40a6ac:	add    DWORD PTR [rdx],ecx
  40a6ae:	(bad)  
  40a6af:	add    BYTE PTR [rdx],cl
  40a6b1:	xor    al,BYTE PTR [rsi]
  40a6b3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0ab19
  40a6b9:	push   rax
  40a6ba:	add    al,al
  40a6bc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245a6c4
  40a6c2:	add    DWORD PTR [rax],esi
  40a6c4:	add    DWORD PTR [rax],ecx
  40a6c6:	add    eax,0x4420800
  40a6cb:	xor    BYTE PTR [rbx],al
  40a6cd:	(bad)  
  40a6ce:	add    dh,BYTE PTR [rax+0x1]
  40a6d1:	push   rax
  40a6d2:	add    BYTE PTR [rax],al
  40a6d4:	add    DWORD PTR [rdi],eax
  40a6d6:	add    al,0x0
  40a6d8:	(bad)  
  40a6d9:	xor    al,BYTE PTR [rbx]
  40a6db:	xor    BYTE PTR [rdx],al
  40a6dd:	(bad)  
  40a6de:	add    DWORD PTR [rax+0x1],esi
  40a6e1:	add    eax,0x32050002
  40a6e6:	add    DWORD PTR [rax],esi
  40a6e8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245a6f0
  40a6ee:	add    DWORD PTR [rax],esi
  40a6f0:	add    DWORD PTR [rax],eax
  40a6f2:	add    BYTE PTR [rax],al
  40a6f4:	add    DWORD PTR [rax],eax
  40a6f6:	add    BYTE PTR [rax],al
  40a6f8:	add    DWORD PTR [rax],eax
  40a6fa:	add    BYTE PTR [rax],al
  40a6fc:	add    DWORD PTR [rdi],eax
  40a6fe:	add    al,0x0
  40a700:	(bad)  
  40a701:	xor    al,BYTE PTR [rbx]
  40a703:	xor    BYTE PTR [rdx],al
  40a705:	(bad)  
  40a706:	add    DWORD PTR [rax+0x1],esi
  40a709:	(bad)  
  40a70a:	add    eax,DWORD PTR [rax]
  40a70c:	(bad)  
  40a70d:	rex.X add sil,BYTE PTR [rax]
  40a710:	add    DWORD PTR [rax+0x0],esp
  40a713:	add    BYTE PTR [rcx],al
  40a715:	add    eax,0x32050002
  40a71a:	add    DWORD PTR [rax],esi
  40a71c:	add    DWORD PTR [rdi],eax
  40a71e:	add    al,0x0
  40a720:	(bad)  
  40a721:	xor    al,BYTE PTR [rbx]
  40a723:	xor    BYTE PTR [rdx],al
  40a725:	(bad)  
  40a726:	add    DWORD PTR [rax+0x1],esi
  40a729:	(bad)  
  40a72a:	add    eax,DWORD PTR [rax]
  40a72c:	(bad)  
  40a72d:	rex.X add sil,BYTE PTR [rax]
  40a730:	add    DWORD PTR [rax+0x0],esp
  40a733:	add    BYTE PTR [rcx],al
  40a735:	(bad)  
  40a736:	add    eax,DWORD PTR [rax]
  40a738:	(bad)  
  40a739:	rex.X add sil,BYTE PTR [rax]
  40a73c:	add    DWORD PTR [rax+0x0],esp
  40a73f:	add    BYTE PTR [rcx],al
  40a741:	or     BYTE PTR [rip+0x4420800],al        # 0x482af47
  40a747:	xor    BYTE PTR [rbx],al
  40a749:	(bad)  
  40a74a:	add    dh,BYTE PTR [rax+0x1]
  40a74d:	push   rax
  40a74e:	add    BYTE PTR [rax],al
  40a750:	add    DWORD PTR [rax],eax
  40a752:	add    BYTE PTR [rax],al
  40a754:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040b000 <.bss>:
	...

Disassembly of section .edata:

000000000040c000 <.edata>:
  40c000:	add    BYTE PTR [rax],al
  40c002:	add    BYTE PTR [rax],al
  40c004:	outs   dx,BYTE PTR ds:[rsi]
  40c005:	fs scas eax,DWORD PTR es:[rdi]
  40c007:	pop    rax
  40c008:	add    BYTE PTR [rax],al
  40c00a:	add    BYTE PTR [rax],al
  40c00c:	mov    eax,es
  40c00e:	add    BYTE PTR [rax],al
  40c010:	add    DWORD PTR [rax],eax
  40c012:	add    BYTE PTR [rax],al
  40c014:	or     al,BYTE PTR [rax]
  40c016:	add    BYTE PTR [rax],al
  40c018:	or     al,BYTE PTR [rax]
  40c01a:	add    BYTE PTR [rax],al
  40c01c:	sub    al,al
  40c01e:	add    BYTE PTR [rax],al
  40c020:	push   rax
  40c021:	rol    BYTE PTR [rax],0x0
  40c024:	js     0x40bfe6
  40c026:	add    BYTE PTR [rax],al
  40c028:	nop
  40c029:	add    BYTE PTR [r8],r8b
  40c02c:	movabs al,ds:0x50000046b0000045
  40c035:	rex.RXB add BYTE PTR [r8],r8b
  40c038:	ror    BYTE PTR [rax+0x0],0x0
  40c03c:	and    BYTE PTR [rdx+0x0],cl
  40c03f:	add    BYTE PTR [rax-0x4fffffb5],al
  40c045:	rex.WRB add BYTE PTR [r8],r8b
  40c048:	nop
  40c049:	rex.WRX add BYTE PTR [rax],r8b
  40c04c:	ror    BYTE PTR [rsi+0x0],0x0
  40c050:	sahf   
  40c051:	rol    BYTE PTR [rax],0x0
  40c054:	mov    ecx,0xec0000c0
  40c059:	rol    BYTE PTR [rax],0x0
  40c05c:	je     0x40c01f
  40c05e:	add    BYTE PTR [rax],al
  40c060:	rex.RXB ret 0x0
  40c064:	sbb    eax,ebx
  40c066:	add    BYTE PTR [rax],al
  40c068:	add    bl,0x0
  40c06b:	add    BYTE PTR [rdx],cl
  40c06d:	(bad)  
  40c06e:	add    BYTE PTR [rax],al
  40c070:	jno    0x40c036
  40c072:	add    BYTE PTR [rax],al
  40c074:	loope  0x40c03a
  40c076:	add    BYTE PTR [rax],al
  40c078:	add    BYTE PTR [rax],al
  40c07a:	add    DWORD PTR [rax],eax
  40c07c:	add    al,BYTE PTR [rax]
  40c07e:	add    eax,DWORD PTR [rax]
  40c080:	add    al,0x0
  40c082:	add    eax,0x7000600
  40c087:	add    BYTE PTR [rax],cl
  40c089:	add    BYTE PTR [rcx],cl
  40c08b:	add    BYTE PTR [rdi+0x63],ch
  40c08e:	je     0x40c0f1
  40c090:	jbe    0x40c0f7
  40c092:	sub    eax,0x666e6f63
  40c097:	imul   esp,DWORD PTR [rdi+0x2e],0x657865
  40c09e:	pop    rdi
  40c09f:	pop    rdx
  40c0a0:	rex.WRX
  40c0a1:	rex.WXB push r11
  40c0a3:	je     0x40c0da
  40c0a5:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  40c0a9:	movsxd rax,DWORD PTR gs:[r13+0x38]
  40c0ae:	outs   dx,DWORD PTR fs:[rsi]
  40c0b0:	pop    rdi
  40c0b1:	ja     0x40c11c
  40c0b3:	fs outs dx,BYTE PTR gs:[rsi]
  40c0b6:	movsxd r8d,DWORD PTR [r8]
  40c0b9:	pop    rdi
  40c0ba:	pop    rdx
  40c0bb:	rex.WRX push rbx
  40c0bd:	je     0x40c0f2
  40c0bf:	ins    DWORD PTR es:[rdi],dx
  40c0c0:	(bad)  
  40c0c1:	jo     0x40c10c
  40c0c3:	push   rbx
  40c0c4:	jae    0x40c119
  40c0c6:	jae    0x40c11b
  40c0c8:	je     0x40c0fe
  40c0ca:	ins    BYTE PTR es:[rdi],dx
  40c0cb:	gs jae 0x40c141
  40c0ce:	rex.WB push r11
  40c0d0:	jae    0x40c117
  40c0d2:	push   rbx
  40c0d3:	(bad)  
  40c0d4:	rex.WB push r11
  40c0d6:	je     0x40c10c
  40c0d8:	jo     0x40c13b
  40c0da:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  40c0e1:	jae    0x40c128
  40c0e3:	rex.RB
  40c0e4:	imul   r15d,DWORD PTR [r8+0x45],0x73534f
  40c0ec:	pop    rdi
  40c0ed:	pop    rdx
  40c0ee:	rex.WRX push rbx
  40c0f0:	je     0x40c12a
  40c0f2:	pop    rdi
  40c0f3:	push   rdx
  40c0f4:	(bad)  
  40c0f5:	pop    rdi
  40c0f6:	je     0x40c16a
  40c0f8:	gs gs rex.WB push r11
  40c0fc:	jae    0x40c151
  40c0fe:	je     0x40c134
  40c100:	jo     0x40c163
  40c102:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  40c109:	jae    0x40c150
  40c10b:	push   rbx
  40c10c:	je     0x40c13f
  40c10e:	xor    BYTE PTR [rdi+0x53],bl
  40c111:	gs ins BYTE PTR es:[rdi],dx
  40c113:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  40c118:	je     0x40c163
  40c11a:	push   rbx
  40c11b:	xor    bl,BYTE PTR [rdi+0x45]
  40c11e:	push   rbx
  40c11f:	je     0x40c155
  40c121:	ins    BYTE PTR es:[rdi],dx
  40c122:	gs jae 0x40c198
  40c125:	rex.WB push r11
  40c127:	jae    0x40c16e
  40c129:	push   rbx
  40c12a:	(bad)  
  40c12b:	rex.WB push r11
  40c12d:	xor    bl,BYTE PTR [rdi+0x45]
  40c130:	xor    DWORD PTR [r15+rbx*2],r14d
  40c134:	rex.WRB pop r15
  40c136:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  40c13d:	outs   dx,BYTE PTR ds:[rsi]
  40c13e:	outs   dx,DWORD PTR ds:[rsi]
  40c13f:	fs gs rex.RB push r8
  40c143:	push   rbx
  40c144:	je     0x40c177
  40c146:	cmp    BYTE PTR [rdi+0x52],bl
  40c149:	(bad)  
  40c14a:	pop    rdi
  40c14b:	je     0x40c1bf
  40c14d:	gs gs pop rdi
  40c150:	outs   dx,BYTE PTR ds:[rsi]
  40c151:	outs   dx,DWORD PTR ds:[rsi]
  40c152:	fs gs pop rdi
  40c155:	(bad)  
  40c157:	jae    0x40c1be
  40c159:	push   rbx
  40c15a:	pop    r15
  40c15c:	push   rax
  40c15d:	push   rbx
  40c15e:	je     0x40c191
  40c160:	xor    ebx,DWORD PTR [rdi+0x52]
  40c163:	(bad)  
  40c164:	pop    rdi
  40c165:	je     0x40c1d9
  40c167:	gs gs pop rdi
  40c16a:	outs   dx,BYTE PTR ds:[rsi]
  40c16b:	outs   dx,DWORD PTR ds:[rsi]
  40c16c:	fs gs rex.WB push r11
  40c170:	xor    bl,BYTE PTR [rdi+0x45]
  40c173:	add    BYTE PTR [rdi+0x5a],bl
  40c176:	rex.WRX push rbx
  40c178:	je     0x40c1b2
  40c17a:	pop    rdi
  40c17b:	push   rdx
  40c17c:	(bad)  
  40c17d:	pop    rdi
  40c17e:	je     0x40c1f2
  40c180:	gs gs rex.WB push r11
  40c184:	jae    0x40c1d9
  40c186:	je     0x40c1bc
  40c188:	jo     0x40c1eb
  40c18a:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  40c191:	jae    0x40c1d8
  40c193:	push   rbx
  40c194:	je     0x40c1c7
  40c196:	xor    BYTE PTR [rdi+0x53],bl
  40c199:	gs ins BYTE PTR es:[rdi],dx
  40c19b:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  40c1a0:	je     0x40c1eb
  40c1a2:	push   rbx
  40c1a3:	xor    bl,BYTE PTR [rdi+0x45]
  40c1a6:	push   rbx
  40c1a7:	je     0x40c1dd
  40c1a9:	ins    BYTE PTR es:[rdi],dx
  40c1aa:	gs jae 0x40c220
  40c1ad:	rex.WB push r11
  40c1af:	jae    0x40c1f6
  40c1b1:	push   rbx
  40c1b2:	(bad)  
  40c1b3:	rex.WB push r11
  40c1b5:	xor    bl,BYTE PTR [rdi+0x45]
  40c1b8:	xor    r14b,BYTE PTR [r10]
  40c1bb:	pop    rdi
  40c1bc:	rex.WRB pop r15
  40c1be:	gs ins DWORD PTR es:[rdi],dx
  40c1c0:	jo     0x40c22e
  40c1c2:	(bad)  
  40c1c3:	movsxd esp,DWORD PTR [rbp+0x5f]
  40c1c6:	push   0x5f746e69
  40c1cb:	jne    0x40c23b
  40c1cd:	imul   esi,DWORD PTR [rcx+0x75],0x52494965
  40c1d4:	rex.WXB push r11
  40c1d6:	je     0x40c20a
  40c1d8:	xor    DWORD PTR [rax+0x69],esi
  40c1db:	movsxd esp,DWORD PTR gs:[rbp+0x77]
  40c1df:	imul   esi,DWORD PTR [rbx+0x65],0x6e6f635f
  40c1e6:	jae    0x40c25c
  40c1e8:	jb     0x40c25f
  40c1ea:	movsxd esi,DWORD PTR [rdi+rbx*2+0x74]
  40c1ee:	push   rbx
  40c1ef:	je     0x40c226
  40c1f1:	je     0x40c268
  40c1f3:	jo     0x40c261
  40c1f5:	gs rex.WB
  40c1f7:	rex.WB
  40c1f8:	rex.WRXB push r11
  40c1fa:	jae    0x40c241
  40c1fc:	rex.RB push r11
  40c1fe:	rex.R pop rdi
  40c200:	rex.WB
  40c201:	rex.WB
  40c202:	rex.RB
  40c203:	rex.RB
  40c204:	rex.RB
  40c205:	rex.RB
  40c206:	rex.RB push r11
  40c208:	je     0x40c23b
  40c20a:	(bad)  
  40c20b:	pop    rdi
  40c20c:	push   rdx
  40c20d:	(bad)  
  40c20e:	pop    rdi
  40c20f:	je     0x40c283
  40c211:	gs gs pop rdi
  40c214:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  40c21c:	rex.WB push r11
  40c21e:	xor    bl,BYTE PTR [rdi+0x45]
  40c221:	push   rbx
  40c222:	je     0x40c256
  40c224:	xor    ebx,DWORD PTR [rdi+0x52]
  40c227:	(bad)  
  40c228:	pop    rdi
  40c229:	je     0x40c29d
  40c22b:	gs gs pop rdi
  40c22e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40c231:	jae    0x40c2a7
  40c233:	pop    rdi
  40c234:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  40c23c:	rex.WB push r11
  40c23e:	xor    bl,BYTE PTR [rdi+0x45]
  40c241:	rex.R jo 0x40c293
  40c244:	push   rsp
  40c245:	pop    rdi
  40c246:	add    BYTE PTR [rdi+0x5a],bl
  40c249:	rex.WRX push rbx
  40c24b:	je     0x40c285
  40c24d:	pop    rdi
  40c24e:	push   rdx
  40c24f:	(bad)  
  40c250:	pop    rdi
  40c251:	je     0x40c2c5
  40c253:	gs gs rex.WB push r11
  40c257:	jae    0x40c2ac
  40c259:	je     0x40c28f
  40c25b:	jo     0x40c2be
  40c25d:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  40c264:	jae    0x40c2ab
  40c266:	push   rbx
  40c267:	je     0x40c29a
  40c269:	xor    BYTE PTR [rdi+0x53],bl
  40c26c:	gs ins BYTE PTR es:[rdi],dx
  40c26e:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  40c273:	je     0x40c2be
  40c275:	push   rbx
  40c276:	xor    bl,BYTE PTR [rdi+0x45]
  40c279:	push   rbx
  40c27a:	je     0x40c2b0
  40c27c:	ins    BYTE PTR es:[rdi],dx
  40c27d:	gs jae 0x40c2f3
  40c280:	rex.WB push r11
  40c282:	jae    0x40c2c9
  40c284:	push   rbx
  40c285:	(bad)  
  40c286:	rex.WB push r11
  40c288:	xor    bl,BYTE PTR [rdi+0x45]
  40c28b:	xor    r14b,BYTE PTR [r10]
  40c28e:	pop    rdi
  40c28f:	rex.WRB pop r15
  40c291:	gs ins DWORD PTR es:[rdi],dx
  40c293:	jo     0x40c301
  40c295:	(bad)  
  40c296:	movsxd esp,DWORD PTR [rbp+0x5f]
  40c299:	push   0x5f746e69
  40c29e:	jne    0x40c30e
  40c2a0:	imul   esi,DWORD PTR [rcx+0x75],0x52494965
  40c2a7:	rex.WXB push r11
  40c2a9:	je     0x40c2dd
  40c2ab:	xor    DWORD PTR [rax+0x69],esi
  40c2ae:	movsxd esp,DWORD PTR gs:[rbp+0x77]
  40c2b2:	imul   esi,DWORD PTR [rbx+0x65],0x6e6f635f
  40c2b9:	jae    0x40c32f
  40c2bb:	jb     0x40c332
  40c2bd:	movsxd esi,DWORD PTR [rdi+rbx*2+0x74]
  40c2c1:	push   rbx
  40c2c2:	je     0x40c2f9
  40c2c4:	je     0x40c33b
  40c2c6:	jo     0x40c334
  40c2c8:	gs rex.WB
  40c2ca:	rex.WB push r10
  40c2cc:	push   rbx
  40c2cd:	xor    DWORD PTR [rdi+0x45],ebx
  40c2d0:	rex.RB push r11
  40c2d2:	rex.R pop rdi
  40c2d4:	rex.WB
  40c2d5:	rex.WB
  40c2d6:	rex.RB
  40c2d7:	rex.RB
  40c2d8:	rex.RB
  40c2d9:	rex.RB
  40c2da:	rex.RB push r11
  40c2dc:	je     0x40c30f
  40c2de:	(bad)  
  40c2df:	pop    rdi
  40c2e0:	push   rdx
  40c2e1:	(bad)  
  40c2e2:	pop    rdi
  40c2e3:	je     0x40c357
  40c2e5:	gs gs pop rdi
  40c2e8:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  40c2f0:	rex.WB push r11
  40c2f2:	xor    bl,BYTE PTR [rdi+0x45]
  40c2f5:	push   rbx
  40c2f6:	je     0x40c32a
  40c2f8:	xor    ebx,DWORD PTR [rdi+0x52]
  40c2fb:	(bad)  
  40c2fc:	pop    rdi
  40c2fd:	je     0x40c371
  40c2ff:	gs gs pop rdi
  40c302:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40c305:	jae    0x40c37b
  40c307:	pop    rdi
  40c308:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  40c310:	rex.WB push r11
  40c312:	xor    bl,BYTE PTR [rdi+0x45]
  40c315:	rex.R jo 0x40c367
  40c318:	push   rsp
  40c319:	pop    rdi
  40c31a:	add    BYTE PTR [rdi+0x5a],bl
  40c31d:	rex.WRX push rbx
  40c31f:	je     0x40c359
  40c321:	pop    rdi
  40c322:	push   rdx
  40c323:	(bad)  
  40c324:	pop    rdi
  40c325:	je     0x40c399
  40c327:	gs gs rex.WB push r11
  40c32b:	jae    0x40c380
  40c32d:	je     0x40c363
  40c32f:	jo     0x40c392
  40c331:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  40c338:	jae    0x40c37f
  40c33a:	push   rbx
  40c33b:	je     0x40c36e
  40c33d:	xor    BYTE PTR [rdi+0x53],bl
  40c340:	gs ins BYTE PTR es:[rdi],dx
  40c342:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  40c347:	je     0x40c392
  40c349:	push   rbx
  40c34a:	xor    bl,BYTE PTR [rdi+0x45]
  40c34d:	push   rbx
  40c34e:	je     0x40c384
  40c350:	ins    BYTE PTR es:[rdi],dx
  40c351:	gs jae 0x40c3c7
  40c354:	rex.WB push r11
  40c356:	jae    0x40c39d
  40c358:	push   rbx
  40c359:	(bad)  
  40c35a:	rex.WB push r11
  40c35c:	xor    bl,BYTE PTR [rdi+0x45]
  40c35f:	xor    r14b,BYTE PTR [r15+rbx*2]
  40c363:	rex.WRB pop r15
  40c365:	addr32 gs je 0x40c3c8
  40c369:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  40c370:	jne    0x40c3e0
  40c372:	imul   esi,DWORD PTR [rcx+0x75],0x6f705f65
  40c379:	jae    0x40c3c0
  40c37b:	push   rdx
  40c37c:	push   rbx
  40c37d:	xor    DWORD PTR [rdi+0x0],ebx
  40c380:	pop    rdi
  40c381:	pop    rdx
  40c382:	rex.WRX push rbx
  40c384:	je     0x40c3be
  40c386:	pop    rdi
  40c387:	push   rdx
  40c388:	(bad)  
  40c389:	pop    rdi
  40c38a:	je     0x40c3fe
  40c38c:	gs gs rex.WB push r11
  40c390:	jae    0x40c3e5
  40c392:	je     0x40c3c8
  40c394:	jo     0x40c3f7
  40c396:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  40c39d:	jae    0x40c3e4
  40c39f:	push   rbx
  40c3a0:	je     0x40c3d3
  40c3a2:	xor    BYTE PTR [rdi+0x53],bl
  40c3a5:	gs ins BYTE PTR es:[rdi],dx
  40c3a7:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  40c3ac:	je     0x40c3f7
  40c3ae:	push   rbx
  40c3af:	xor    bl,BYTE PTR [rdi+0x45]
  40c3b2:	push   rbx
  40c3b3:	je     0x40c3e9
  40c3b5:	ins    BYTE PTR es:[rdi],dx
  40c3b6:	gs jae 0x40c42c
  40c3b9:	rex.WB push r11
  40c3bb:	jae    0x40c402
  40c3bd:	push   rbx
  40c3be:	(bad)  
  40c3bf:	rex.WB push r11
  40c3c1:	xor    bl,BYTE PTR [rdi+0x45]
  40c3c4:	xor    r15b,BYTE PTR [r9]
  40c3c7:	pop    rdi
  40c3c8:	rex.WRB pop r15
  40c3ca:	addr32 gs je 0x40c42d
  40c3ce:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  40c3d5:	push   0x5f746e69
  40c3da:	jne    0x40c44a
  40c3dc:	imul   esi,DWORD PTR [rcx+0x75],0x6f705f65
  40c3e3:	jae    0x40c42a
  40c3e5:	push   rbx
  40c3e6:	je     0x40c41a
  40c3e8:	xor    ebx,DWORD PTR [rdi+0x52]
  40c3eb:	(bad)  
  40c3ec:	pop    rdi
  40c3ed:	je     0x40c461
  40c3ef:	gs gs pop rdi
  40c3f2:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40c3f5:	jae    0x40c46b
  40c3f7:	pop    rdi
  40c3f8:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  40c400:	rex.WB push r11
  40c402:	xor    bl,BYTE PTR [rdi+0x45]
  40c405:	push   rdx
  40c406:	push   rbx
  40c407:	xor    DWORD PTR [rdi+0x0],ebx
  40c40a:	pop    rdi
  40c40b:	pop    rdx
  40c40c:	rex.WRX push rbx
  40c40e:	je     0x40c448
  40c410:	pop    rdi
  40c411:	push   rdx
  40c412:	(bad)  
  40c413:	pop    rdi
  40c414:	je     0x40c488
  40c416:	gs gs rex.WB push r11
  40c41a:	jae    0x40c46f
  40c41c:	je     0x40c452
  40c41e:	jo     0x40c481
  40c420:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  40c427:	jae    0x40c46e
  40c429:	push   rbx
  40c42a:	je     0x40c45d
  40c42c:	xor    BYTE PTR [rdi+0x53],bl
  40c42f:	gs ins BYTE PTR es:[rdi],dx
  40c431:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  40c436:	je     0x40c481
  40c438:	push   rbx
  40c439:	xor    bl,BYTE PTR [rdi+0x45]
  40c43c:	push   rbx
  40c43d:	je     0x40c473
  40c43f:	ins    BYTE PTR es:[rdi],dx
  40c440:	gs jae 0x40c4b6
  40c443:	rex.WB push r11
  40c445:	jae    0x40c48c
  40c447:	push   rbx
  40c448:	(bad)  
  40c449:	rex.WB push r11
  40c44b:	xor    bl,BYTE PTR [rdi+0x45]
  40c44e:	cmp    BYTE PTR [r15+0x4d],r11b
  40c452:	pop    rdi
  40c453:	gs jb  0x40c4b7
  40c456:	jae    0x40c4bd
  40c458:	rex.RB push r8
  40c45a:	push   rbx
  40c45b:	je     0x40c48e
  40c45d:	xor    ebx,DWORD PTR [rdi+0x52]
  40c460:	(bad)  
  40c461:	pop    rdi
  40c462:	je     0x40c4d6
  40c464:	gs gs pop rdi
  40c467:	outs   dx,BYTE PTR ds:[rsi]
  40c468:	outs   dx,DWORD PTR ds:[rsi]
  40c469:	fs gs rex.WB push r11
  40c46d:	xor    bl,BYTE PTR [rdi+0x45]
  40c470:	add    BYTE PTR [rdi+0x5a],bl
  40c473:	push   rbx
  40c474:	je     0x40c4db
  40c476:	jno    0x40c4c1
  40c478:	movsxd eax,DWORD PTR [rbp+0x4e]
  40c47b:	cmp    DWORD PTR [rdi+0x5f],ebx
  40c47e:	outs   dx,BYTE PTR ds:[esi]
  40c480:	jne    0x40c4e1
  40c482:	movsxd edi,DWORD PTR [rax+0x78]
  40c485:	xor    DWORD PTR [rcx],esi
  40c487:	pop    rdi
  40c488:	pop    rdi
  40c489:	outs   dx,BYTE PTR gs:[rsi]
  40c48b:	(bad)  
  40c48c:	(bad)  
  40c48d:	ins    BYTE PTR es:[rdi],dx
  40c48e:	gs pop rdi
  40c490:	imul   esp,DWORD PTR [rsi+0x49],0x53727358
  40c497:	je     0x40c4d2
  40c499:	pop    rdi
  40c49a:	pop    rdi
  40c49b:	imul   esi,DWORD PTR [rbx+0x5f],0x72616863
  40c4a2:	rex.WB push r12
  40c4a4:	pop    rdi
  40c4a5:	rex.RB (bad) 
  40c4a7:	pop    rdi
  40c4a8:	pop    rdi
  40c4a9:	jbe    0x40c50c
  40c4ab:	ins    BYTE PTR es:[rdi],dx
  40c4ac:	jne    0x40c513
  40c4ae:	rex.RB (bad) 
  40c4b0:	rex.RB
  40c4b1:	ss pop rdi
  40c4b3:	pop    rdi
  40c4b4:	je     0x40c52f
  40c4b6:	jo     0x40c51d
  40c4b8:	rex.RB push r10
  40c4ba:	rex.WXB push r11
  40c4bc:	(bad)  
  40c4bd:	rex.WB push r11
  40c4bf:	xor    ebx,DWORD PTR [rdi+0x53]
  40c4c2:	je     0x40c4f5
  40c4c4:	xor    DWORD PTR [rbx+0x68],esp
  40c4c7:	(bad)  
  40c4c8:	jb     0x40c529
  40c4ca:	je     0x40c53e
  40c4cc:	(bad)  
  40c4cd:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x455f3353
  40c4d5:	push   rbx
  40c4d6:	(bad)  
  40c4d7:	rex.WB push r11
  40c4d9:	xor    ebx,DWORD PTR [rdi+0x45]
  40c4dc:	rex.RB push r11
  40c4de:	rex.XB pop r15
  40c4e0:	add    BYTE PTR [rbp+0x61],ch
  40c4e3:	.byte 0x69
  40c4e4:	outs   dx,BYTE PTR ds:[rsi]
	...

Disassembly of section .idata:

000000000040d000 <.idata>:
  40d000:	rol    BYTE PTR fs:[rax],1
	...
  40d00b:	add    al,dl
  40d00d:	fld    QWORD PTR [rax]
  40d00f:	add    BYTE PTR [rbx+rdx*8+0x0],bl
  40d013:	add    BYTE PTR [rax+rdx*8+0x0],dh
	...
  40d01f:	add    BYTE PTR [rax-0x22],dh
  40d022:	add    BYTE PTR [rax],al
  40d024:	ins    BYTE PTR es:[rdi],dx
  40d025:	rol    DWORD PTR [rax],cl
  40d027:	add    BYTE PTR [rcx+rdx*8+0x0],dl
  40d02e:	add    BYTE PTR [rax],al
  40d030:	add    BYTE PTR [rax],al
  40d032:	add    BYTE PTR [rax],al
  40d034:	call   0xffffffff8c40d117
  40d039:	(bad)  
  40d03a:	add    BYTE PTR [rax],al
  40d03c:	ins    BYTE PTR es:[rdi],dx
  40d03d:	rol    BYTE PTR [rax],cl
	...
  40d047:	add    BYTE PTR [rdi+rbx*8+0x0],ch
  40d04b:	add    BYTE PTR [rbp+rdx*8+0x0],ah
	...
  40d063:	add    BYTE PTR [rsi+rdx*8+0x0],dl
	...
  40d073:	add    BYTE PTR [rax-0x2a],ch
  40d076:	add    BYTE PTR [rax],al
  40d078:	add    BYTE PTR [rax],al
  40d07a:	add    BYTE PTR [rax],al
  40d07c:	jl     0x40d054
  40d07e:	add    BYTE PTR [rax],al
  40d080:	add    BYTE PTR [rax],al
  40d082:	add    BYTE PTR [rax],al
  40d084:	nop
  40d085:	(bad)  
  40d086:	add    BYTE PTR [rax],al
  40d088:	add    BYTE PTR [rax],al
  40d08a:	add    BYTE PTR [rax],al
  40d08c:	test   al,0xd6
  40d08e:	add    BYTE PTR [rax],al
  40d090:	add    BYTE PTR [rax],al
  40d092:	add    BYTE PTR [rax],al
  40d094:	int3   
  40d095:	(bad)  
  40d096:	add    BYTE PTR [rax],al
  40d098:	add    BYTE PTR [rax],al
  40d09a:	add    BYTE PTR [rax],al
  40d09c:	(bad)  
  40d09e:	add    BYTE PTR [rax],al
  40d0a0:	add    BYTE PTR [rax],al
  40d0a2:	add    BYTE PTR [rax],al
  40d0a4:	in     al,dx
  40d0a5:	(bad)  
  40d0a6:	add    BYTE PTR [rax],al
  40d0a8:	add    BYTE PTR [rax],al
  40d0aa:	add    BYTE PTR [rax],al
  40d0ac:	add    al,0xd7
  40d0ae:	add    BYTE PTR [rax],al
  40d0b0:	add    BYTE PTR [rax],al
  40d0b2:	add    BYTE PTR [rax],al
  40d0b4:	and    al,0xd7
  40d0b6:	add    BYTE PTR [rax],al
  40d0b8:	add    BYTE PTR [rax],al
  40d0ba:	add    BYTE PTR [rax],al
  40d0bc:	xor    al,0xd7
  40d0be:	add    BYTE PTR [rax],al
  40d0c0:	add    BYTE PTR [rax],al
  40d0c2:	add    BYTE PTR [rax],al
  40d0c4:	pop    rax
  40d0c5:	xlat   BYTE PTR ds:[rbx]
  40d0c6:	add    BYTE PTR [rax],al
  40d0c8:	add    BYTE PTR [rax],al
  40d0ca:	add    BYTE PTR [rax],al
  40d0cc:	jl     0x40d0a5
  40d0ce:	add    BYTE PTR [rax],al
  40d0d0:	add    BYTE PTR [rax],al
  40d0d2:	add    BYTE PTR [rax],al
  40d0d4:	nop
  40d0d5:	xlat   BYTE PTR ds:[rbx]
  40d0d6:	add    BYTE PTR [rax],al
  40d0d8:	add    BYTE PTR [rax],al
  40d0da:	add    BYTE PTR [rax],al
  40d0dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d0dd:	xlat   BYTE PTR ds:[rbx]
  40d0de:	add    BYTE PTR [rax],al
  40d0e0:	add    BYTE PTR [rax],al
  40d0e2:	add    BYTE PTR [rax],al
  40d0e4:	mov    eax,0xd7
  40d0e9:	add    BYTE PTR [rax],al
  40d0eb:	add    ah,cl
  40d0ed:	xlat   BYTE PTR ds:[rbx]
  40d0ee:	add    BYTE PTR [rax],al
  40d0f0:	add    BYTE PTR [rax],al
  40d0f2:	add    BYTE PTR [rax],al
  40d0f4:	in     al,0xd7
  40d0f6:	add    BYTE PTR [rax],al
  40d0f8:	add    BYTE PTR [rax],al
  40d0fa:	add    BYTE PTR [rax],al
  40d0fc:	cld    
  40d0fd:	xlat   BYTE PTR ds:[rbx]
  40d0fe:	add    BYTE PTR [rax],al
  40d100:	add    BYTE PTR [rax],al
  40d102:	add    BYTE PTR [rax],al
  40d104:	or     al,0xd8
  40d106:	add    BYTE PTR [rax],al
  40d108:	add    BYTE PTR [rax],al
  40d10a:	add    BYTE PTR [rax],al
  40d10c:	sub    al,bl
  40d10e:	add    BYTE PTR [rax],al
  40d110:	add    BYTE PTR [rax],al
  40d112:	add    BYTE PTR [rax],al
  40d114:	rex.R fadd DWORD PTR [rax]
  40d117:	add    BYTE PTR [rax],al
  40d119:	add    BYTE PTR [rax],al
  40d11b:	add    BYTE PTR [rax+rbx*8+0x0],dl
  40d122:	add    BYTE PTR [rax],al
  40d124:	mov    al,0xd8
  40d126:	add    BYTE PTR [rax],al
  40d128:	add    BYTE PTR [rax],al
  40d12a:	add    BYTE PTR [rax],al
  40d12c:	in     al,0xd8
  40d12e:	add    BYTE PTR [rax],al
  40d130:	add    BYTE PTR [rax],al
  40d132:	add    BYTE PTR [rax],al
  40d134:	sbb    cl,bl
  40d136:	add    BYTE PTR [rax],al
  40d138:	add    BYTE PTR [rax],al
  40d13a:	add    BYTE PTR [rax],al
  40d13c:	pop    rsp
  40d13d:	fld    DWORD PTR [rax]
  40d13f:	add    BYTE PTR [rax],al
  40d141:	add    BYTE PTR [rax],al
  40d143:	add    BYTE PTR [rax-0x27],ch
  40d146:	add    BYTE PTR [rax],al
  40d148:	add    BYTE PTR [rax],al
  40d14a:	add    BYTE PTR [rax],al
  40d14c:	je     0x40d127
  40d14e:	add    BYTE PTR [rax],al
  40d150:	add    BYTE PTR [rax],al
  40d152:	add    BYTE PTR [rax],al
  40d154:	mov    ah,0xd9
  40d156:	add    BYTE PTR [rax],al
  40d158:	add    BYTE PTR [rax],al
  40d15a:	add    BYTE PTR [rax],al
  40d15c:	lock fld DWORD PTR [rax]
  40d15f:	add    BYTE PTR [rax],al
  40d161:	add    BYTE PTR [rax],al
  40d163:	add    ah,bh
  40d165:	fld    DWORD PTR [rax]
  40d167:	add    BYTE PTR [rax],al
  40d169:	add    BYTE PTR [rax],al
  40d16b:	add    BYTE PTR [rdx+rbx*8],al
  40d16e:	add    BYTE PTR [rax],al
  40d170:	add    BYTE PTR [rax],al
  40d172:	add    BYTE PTR [rax],al
  40d174:	sbb    dl,bl
  40d176:	add    BYTE PTR [rax],al
  40d178:	add    BYTE PTR [rax],al
  40d17a:	add    BYTE PTR [rax],al
  40d17c:	sub    al,0xda
  40d17e:	add    BYTE PTR [rax],al
  40d180:	add    BYTE PTR [rax],al
  40d182:	add    BYTE PTR [rax],al
  40d184:	cmp    al,0xda
	...
  40d192:	add    BYTE PTR [rax],al
  40d194:	pop    rax
  40d195:	fiadd  DWORD PTR [rax]
  40d197:	add    BYTE PTR [rax],al
  40d199:	add    BYTE PTR [rax],al
  40d19b:	add    BYTE PTR [rax-0x26],dh
  40d19e:	add    BYTE PTR [rax],al
  40d1a0:	add    BYTE PTR [rax],al
  40d1a2:	add    BYTE PTR [rax],al
  40d1a4:	mov    dl,bl
  40d1a6:	add    BYTE PTR [rax],al
  40d1a8:	add    BYTE PTR [rax],al
  40d1aa:	add    BYTE PTR [rax],al
  40d1ac:	pushf  
  40d1ad:	fiadd  DWORD PTR [rax]
  40d1af:	add    BYTE PTR [rax],al
  40d1b1:	add    BYTE PTR [rax],al
  40d1b3:	add    BYTE PTR [rdx+0xda],dh
  40d1b9:	add    BYTE PTR [rax],al
  40d1bb:	add    al,cl
  40d1bd:	fiadd  DWORD PTR [rax]
  40d1bf:	add    BYTE PTR [rax],al
  40d1c1:	add    BYTE PTR [rax],al
  40d1c3:	add    al,bl
  40d1c5:	fiadd  DWORD PTR [rax]
  40d1c7:	add    BYTE PTR [rax],al
  40d1c9:	add    BYTE PTR [rax],al
  40d1cb:	add    dh,ch
  40d1cd:	fiadd  DWORD PTR [rax]
  40d1cf:	add    BYTE PTR [rax],al
  40d1d1:	add    BYTE PTR [rax],al
  40d1d3:	add    BYTE PTR [rdx],al
  40d1d5:	fild   DWORD PTR [rax]
  40d1d7:	add    BYTE PTR [rax],al
  40d1d9:	add    BYTE PTR [rax],al
  40d1db:	add    BYTE PTR [rbx+rbx*8],dl
  40d1de:	add    BYTE PTR [rax],al
  40d1e0:	add    BYTE PTR [rax],al
  40d1e2:	add    BYTE PTR [rax],al
  40d1e4:	fild   DWORD PTR cs:[rax]
  40d1e7:	add    BYTE PTR [rax],al
  40d1e9:	add    BYTE PTR [rax],al
  40d1eb:	add    BYTE PTR [rsi],bh
  40d1ed:	fild   DWORD PTR [rax]
  40d1ef:	add    BYTE PTR [rax],al
  40d1f1:	add    BYTE PTR [rax],al
  40d1f3:	add    BYTE PTR [rdx-0x25],bl
  40d1f6:	add    BYTE PTR [rax],al
  40d1f8:	add    BYTE PTR [rax],al
  40d1fa:	add    BYTE PTR [rax],al
  40d1fc:	jb     0x40d1d9
  40d1fe:	add    BYTE PTR [rax],al
  40d200:	add    BYTE PTR [rax],al
  40d202:	add    BYTE PTR [rax],al
  40d204:	mov    ebx,ds
  40d206:	add    BYTE PTR [rax],al
  40d208:	add    BYTE PTR [rax],al
  40d20a:	add    BYTE PTR [rax],al
  40d20c:	movabs ds:0xb6000000000000db,al
  40d215:	fild   DWORD PTR [rax]
  40d217:	add    BYTE PTR [rax],al
  40d219:	add    BYTE PTR [rax],al
  40d21b:	add    al,dl
  40d21d:	fild   DWORD PTR [rax]
  40d21f:	add    BYTE PTR [rax],al
  40d221:	add    BYTE PTR [rax],al
  40d223:	add    ah,ah
  40d225:	fild   DWORD PTR [rax]
  40d227:	add    BYTE PTR [rax],al
  40d229:	add    BYTE PTR [rax],al
  40d22b:	add    BYTE PTR [rdx],al
  40d22d:	fadd   QWORD PTR [rax]
  40d22f:	add    BYTE PTR [rax],al
  40d231:	add    BYTE PTR [rax],al
  40d233:	add    BYTE PTR [rdx],cl
  40d235:	fadd   QWORD PTR [rax]
  40d237:	add    BYTE PTR [rax],al
  40d239:	add    BYTE PTR [rax],al
  40d23b:	add    BYTE PTR [rsi],bl
  40d23d:	fadd   QWORD PTR [rax]
  40d23f:	add    BYTE PTR [rax],al
  40d241:	add    BYTE PTR [rax],al
  40d243:	add    BYTE PTR [rsp+rbx*8],ch
  40d246:	add    BYTE PTR [rax],al
  40d248:	add    BYTE PTR [rax],al
  40d24a:	add    BYTE PTR [rax],al
  40d24c:	rex.W fadd QWORD PTR [rax]
  40d24f:	add    BYTE PTR [rax],al
  40d251:	add    BYTE PTR [rax],al
  40d253:	add    BYTE PTR [rdx-0x24],bl
  40d256:	add    BYTE PTR [rax],al
  40d258:	add    BYTE PTR [rax],al
  40d25a:	add    BYTE PTR [rax],al
  40d25c:	push   0xffffffffffffffdc
	...
  40d26a:	add    BYTE PTR [rax],al
  40d26c:	(bad)  
  40d26d:	fadd   QWORD PTR [rax]
  40d26f:	add    BYTE PTR [rax],al
  40d271:	add    BYTE PTR [rax],al
  40d273:	add    BYTE PTR [rax+0xdc],dl
  40d279:	add    BYTE PTR [rax],al
  40d27b:	add    BYTE PTR [rax+0xdc],ah
  40d281:	add    BYTE PTR [rax],al
  40d283:	add    BYTE PTR [rsp+rbx*8+0x0],ch
  40d28a:	add    BYTE PTR [rax],al
  40d28c:	mov    edx,0xdc
  40d291:	add    BYTE PTR [rax],al
  40d293:	add    dl,cl
  40d295:	fadd   QWORD PTR [rax]
  40d297:	add    BYTE PTR [rax],al
  40d299:	add    BYTE PTR [rax],al
  40d29b:	add    ah,bl
  40d29d:	fadd   QWORD PTR [rax]
  40d29f:	add    BYTE PTR [rax],al
  40d2a1:	add    BYTE PTR [rax],al
  40d2a3:	add    al,dh
  40d2a5:	fadd   QWORD PTR [rax]
  40d2a7:	add    BYTE PTR [rax],al
  40d2a9:	add    BYTE PTR [rax],al
  40d2ab:	add    dl,bh
  40d2ad:	fadd   QWORD PTR [rax]
  40d2af:	add    BYTE PTR [rax],al
  40d2b1:	add    BYTE PTR [rax],al
  40d2b3:	add    BYTE PTR [rax],cl
  40d2b5:	fld    QWORD PTR [rax]
  40d2b7:	add    BYTE PTR [rax],al
  40d2b9:	add    BYTE PTR [rax],al
  40d2bb:	add    BYTE PTR [rdx],dl
  40d2bd:	fld    QWORD PTR [rax]
  40d2bf:	add    BYTE PTR [rax],al
  40d2c1:	add    BYTE PTR [rax],al
  40d2c3:	add    BYTE PTR [rbx*8+0x0],bl
  40d2ca:	add    BYTE PTR [rax],al
  40d2cc:	sub    ch,bl
  40d2ce:	add    BYTE PTR [rax],al
  40d2d0:	add    BYTE PTR [rax],al
  40d2d2:	add    BYTE PTR [rax],al
  40d2d4:	xor    ch,bl
  40d2d6:	add    BYTE PTR [rax],al
  40d2d8:	add    BYTE PTR [rax],al
  40d2da:	add    BYTE PTR [rax],al
  40d2dc:	cmp    bl,ch
  40d2de:	add    BYTE PTR [rax],al
  40d2e0:	add    BYTE PTR [rax],al
  40d2e2:	add    BYTE PTR [rax],al
  40d2e4:	rex.R fld QWORD PTR [rax]
  40d2e7:	add    BYTE PTR [rax],al
  40d2e9:	add    BYTE PTR [rax],al
  40d2eb:	add    BYTE PTR [rbp+rbx*8+0x0],cl
  40d2ef:	add    BYTE PTR [rax],al
  40d2f1:	add    BYTE PTR [rax],al
  40d2f3:	add    BYTE PTR [rsi-0x23],dl
  40d2f6:	add    BYTE PTR [rax],al
  40d2f8:	add    BYTE PTR [rax],al
  40d2fa:	add    BYTE PTR [rax],al
  40d2fc:	pop    rsi
  40d2fd:	fld    QWORD PTR [rax]
  40d2ff:	add    BYTE PTR [rax],al
  40d301:	add    BYTE PTR [rax],al
  40d303:	add    BYTE PTR [rax-0x23],ch
  40d306:	add    BYTE PTR [rax],al
  40d308:	add    BYTE PTR [rax],al
  40d30a:	add    BYTE PTR [rax],al
  40d30c:	jo     0x40d2eb
  40d30e:	add    BYTE PTR [rax],al
  40d310:	add    BYTE PTR [rax],al
  40d312:	add    BYTE PTR [rax],al
  40d314:	jp     0x40d2f3
  40d316:	add    BYTE PTR [rax],al
  40d318:	add    BYTE PTR [rax],al
  40d31a:	add    BYTE PTR [rax],al
  40d31c:	test   ch,bl
  40d31e:	add    BYTE PTR [rax],al
  40d320:	add    BYTE PTR [rax],al
  40d322:	add    BYTE PTR [rax],al
  40d324:	mov    ds,ebp
  40d326:	add    BYTE PTR [rax],al
  40d328:	add    BYTE PTR [rax],al
  40d32a:	add    BYTE PTR [rax],al
  40d32c:	cwde   
  40d32d:	fld    QWORD PTR [rax]
  40d32f:	add    BYTE PTR [rax],al
  40d331:	add    BYTE PTR [rax],al
  40d333:	add    BYTE PTR [rdx+0xdd],ah
  40d339:	add    BYTE PTR [rax],al
  40d33b:	add    BYTE PTR [rbp+rbx*8+0x0],ch
  40d342:	add    BYTE PTR [rax],al
  40d344:	mov    dh,0xdd
  40d346:	add    BYTE PTR [rax],al
  40d348:	add    BYTE PTR [rax],al
  40d34a:	add    BYTE PTR [rax],al
  40d34c:	rcr    ch,0x0
	...
  40d35b:	add    BYTE PTR [rsi+rdx*8+0x0],dl
	...
  40d36b:	add    BYTE PTR [rax-0x2a],ch
  40d36e:	add    BYTE PTR [rax],al
  40d370:	add    BYTE PTR [rax],al
  40d372:	add    BYTE PTR [rax],al
  40d374:	jl     0x40d34c
  40d376:	add    BYTE PTR [rax],al
  40d378:	add    BYTE PTR [rax],al
  40d37a:	add    BYTE PTR [rax],al
  40d37c:	nop
  40d37d:	(bad)  
  40d37e:	add    BYTE PTR [rax],al
  40d380:	add    BYTE PTR [rax],al
  40d382:	add    BYTE PTR [rax],al
  40d384:	test   al,0xd6
  40d386:	add    BYTE PTR [rax],al
  40d388:	add    BYTE PTR [rax],al
  40d38a:	add    BYTE PTR [rax],al
  40d38c:	int3   
  40d38d:	(bad)  
  40d38e:	add    BYTE PTR [rax],al
  40d390:	add    BYTE PTR [rax],al
  40d392:	add    BYTE PTR [rax],al
  40d394:	(bad)  
  40d396:	add    BYTE PTR [rax],al
  40d398:	add    BYTE PTR [rax],al
  40d39a:	add    BYTE PTR [rax],al
  40d39c:	in     al,dx
  40d39d:	(bad)  
  40d39e:	add    BYTE PTR [rax],al
  40d3a0:	add    BYTE PTR [rax],al
  40d3a2:	add    BYTE PTR [rax],al
  40d3a4:	add    al,0xd7
  40d3a6:	add    BYTE PTR [rax],al
  40d3a8:	add    BYTE PTR [rax],al
  40d3aa:	add    BYTE PTR [rax],al
  40d3ac:	and    al,0xd7
  40d3ae:	add    BYTE PTR [rax],al
  40d3b0:	add    BYTE PTR [rax],al
  40d3b2:	add    BYTE PTR [rax],al
  40d3b4:	xor    al,0xd7
  40d3b6:	add    BYTE PTR [rax],al
  40d3b8:	add    BYTE PTR [rax],al
  40d3ba:	add    BYTE PTR [rax],al
  40d3bc:	pop    rax
  40d3bd:	xlat   BYTE PTR ds:[rbx]
  40d3be:	add    BYTE PTR [rax],al
  40d3c0:	add    BYTE PTR [rax],al
  40d3c2:	add    BYTE PTR [rax],al
  40d3c4:	jl     0x40d39d
  40d3c6:	add    BYTE PTR [rax],al
  40d3c8:	add    BYTE PTR [rax],al
  40d3ca:	add    BYTE PTR [rax],al
  40d3cc:	nop
  40d3cd:	xlat   BYTE PTR ds:[rbx]
  40d3ce:	add    BYTE PTR [rax],al
  40d3d0:	add    BYTE PTR [rax],al
  40d3d2:	add    BYTE PTR [rax],al
  40d3d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40d3d5:	xlat   BYTE PTR ds:[rbx]
  40d3d6:	add    BYTE PTR [rax],al
  40d3d8:	add    BYTE PTR [rax],al
  40d3da:	add    BYTE PTR [rax],al
  40d3dc:	mov    eax,0xd7
  40d3e1:	add    BYTE PTR [rax],al
  40d3e3:	add    ah,cl
  40d3e5:	xlat   BYTE PTR ds:[rbx]
  40d3e6:	add    BYTE PTR [rax],al
  40d3e8:	add    BYTE PTR [rax],al
  40d3ea:	add    BYTE PTR [rax],al
  40d3ec:	in     al,0xd7
  40d3ee:	add    BYTE PTR [rax],al
  40d3f0:	add    BYTE PTR [rax],al
  40d3f2:	add    BYTE PTR [rax],al
  40d3f4:	cld    
  40d3f5:	xlat   BYTE PTR ds:[rbx]
  40d3f6:	add    BYTE PTR [rax],al
  40d3f8:	add    BYTE PTR [rax],al
  40d3fa:	add    BYTE PTR [rax],al
  40d3fc:	or     al,0xd8
  40d3fe:	add    BYTE PTR [rax],al
  40d400:	add    BYTE PTR [rax],al
  40d402:	add    BYTE PTR [rax],al
  40d404:	sub    al,bl
  40d406:	add    BYTE PTR [rax],al
  40d408:	add    BYTE PTR [rax],al
  40d40a:	add    BYTE PTR [rax],al
  40d40c:	rex.R fadd DWORD PTR [rax]
  40d40f:	add    BYTE PTR [rax],al
  40d411:	add    BYTE PTR [rax],al
  40d413:	add    BYTE PTR [rax+rbx*8+0x0],dl
  40d41a:	add    BYTE PTR [rax],al
  40d41c:	mov    al,0xd8
  40d41e:	add    BYTE PTR [rax],al
  40d420:	add    BYTE PTR [rax],al
  40d422:	add    BYTE PTR [rax],al
  40d424:	in     al,0xd8
  40d426:	add    BYTE PTR [rax],al
  40d428:	add    BYTE PTR [rax],al
  40d42a:	add    BYTE PTR [rax],al
  40d42c:	sbb    cl,bl
  40d42e:	add    BYTE PTR [rax],al
  40d430:	add    BYTE PTR [rax],al
  40d432:	add    BYTE PTR [rax],al
  40d434:	pop    rsp
  40d435:	fld    DWORD PTR [rax]
  40d437:	add    BYTE PTR [rax],al
  40d439:	add    BYTE PTR [rax],al
  40d43b:	add    BYTE PTR [rax-0x27],ch
  40d43e:	add    BYTE PTR [rax],al
  40d440:	add    BYTE PTR [rax],al
  40d442:	add    BYTE PTR [rax],al
  40d444:	je     0x40d41f
  40d446:	add    BYTE PTR [rax],al
  40d448:	add    BYTE PTR [rax],al
  40d44a:	add    BYTE PTR [rax],al
  40d44c:	mov    ah,0xd9
  40d44e:	add    BYTE PTR [rax],al
  40d450:	add    BYTE PTR [rax],al
  40d452:	add    BYTE PTR [rax],al
  40d454:	lock fld DWORD PTR [rax]
  40d457:	add    BYTE PTR [rax],al
  40d459:	add    BYTE PTR [rax],al
  40d45b:	add    ah,bh
  40d45d:	fld    DWORD PTR [rax]
  40d45f:	add    BYTE PTR [rax],al
  40d461:	add    BYTE PTR [rax],al
  40d463:	add    BYTE PTR [rdx+rbx*8],al
  40d466:	add    BYTE PTR [rax],al
  40d468:	add    BYTE PTR [rax],al
  40d46a:	add    BYTE PTR [rax],al
  40d46c:	sbb    dl,bl
  40d46e:	add    BYTE PTR [rax],al
  40d470:	add    BYTE PTR [rax],al
  40d472:	add    BYTE PTR [rax],al
  40d474:	sub    al,0xda
  40d476:	add    BYTE PTR [rax],al
  40d478:	add    BYTE PTR [rax],al
  40d47a:	add    BYTE PTR [rax],al
  40d47c:	cmp    al,0xda
	...
  40d48a:	add    BYTE PTR [rax],al
  40d48c:	pop    rax
  40d48d:	fiadd  DWORD PTR [rax]
  40d48f:	add    BYTE PTR [rax],al
  40d491:	add    BYTE PTR [rax],al
  40d493:	add    BYTE PTR [rax-0x26],dh
  40d496:	add    BYTE PTR [rax],al
  40d498:	add    BYTE PTR [rax],al
  40d49a:	add    BYTE PTR [rax],al
  40d49c:	mov    dl,bl
  40d49e:	add    BYTE PTR [rax],al
  40d4a0:	add    BYTE PTR [rax],al
  40d4a2:	add    BYTE PTR [rax],al
  40d4a4:	pushf  
  40d4a5:	fiadd  DWORD PTR [rax]
  40d4a7:	add    BYTE PTR [rax],al
  40d4a9:	add    BYTE PTR [rax],al
  40d4ab:	add    BYTE PTR [rdx+0xda],dh
  40d4b1:	add    BYTE PTR [rax],al
  40d4b3:	add    al,cl
  40d4b5:	fiadd  DWORD PTR [rax]
  40d4b7:	add    BYTE PTR [rax],al
  40d4b9:	add    BYTE PTR [rax],al
  40d4bb:	add    al,bl
  40d4bd:	fiadd  DWORD PTR [rax]
  40d4bf:	add    BYTE PTR [rax],al
  40d4c1:	add    BYTE PTR [rax],al
  40d4c3:	add    dh,ch
  40d4c5:	fiadd  DWORD PTR [rax]
  40d4c7:	add    BYTE PTR [rax],al
  40d4c9:	add    BYTE PTR [rax],al
  40d4cb:	add    BYTE PTR [rdx],al
  40d4cd:	fild   DWORD PTR [rax]
  40d4cf:	add    BYTE PTR [rax],al
  40d4d1:	add    BYTE PTR [rax],al
  40d4d3:	add    BYTE PTR [rbx+rbx*8],dl
  40d4d6:	add    BYTE PTR [rax],al
  40d4d8:	add    BYTE PTR [rax],al
  40d4da:	add    BYTE PTR [rax],al
  40d4dc:	fild   DWORD PTR cs:[rax]
  40d4df:	add    BYTE PTR [rax],al
  40d4e1:	add    BYTE PTR [rax],al
  40d4e3:	add    BYTE PTR [rsi],bh
  40d4e5:	fild   DWORD PTR [rax]
  40d4e7:	add    BYTE PTR [rax],al
  40d4e9:	add    BYTE PTR [rax],al
  40d4eb:	add    BYTE PTR [rdx-0x25],bl
  40d4ee:	add    BYTE PTR [rax],al
  40d4f0:	add    BYTE PTR [rax],al
  40d4f2:	add    BYTE PTR [rax],al
  40d4f4:	jb     0x40d4d1
  40d4f6:	add    BYTE PTR [rax],al
  40d4f8:	add    BYTE PTR [rax],al
  40d4fa:	add    BYTE PTR [rax],al
  40d4fc:	mov    ebx,ds
  40d4fe:	add    BYTE PTR [rax],al
  40d500:	add    BYTE PTR [rax],al
  40d502:	add    BYTE PTR [rax],al
  40d504:	movabs ds:0xb6000000000000db,al
  40d50d:	fild   DWORD PTR [rax]
  40d50f:	add    BYTE PTR [rax],al
  40d511:	add    BYTE PTR [rax],al
  40d513:	add    al,dl
  40d515:	fild   DWORD PTR [rax]
  40d517:	add    BYTE PTR [rax],al
  40d519:	add    BYTE PTR [rax],al
  40d51b:	add    ah,ah
  40d51d:	fild   DWORD PTR [rax]
  40d51f:	add    BYTE PTR [rax],al
  40d521:	add    BYTE PTR [rax],al
  40d523:	add    BYTE PTR [rdx],al
  40d525:	fadd   QWORD PTR [rax]
  40d527:	add    BYTE PTR [rax],al
  40d529:	add    BYTE PTR [rax],al
  40d52b:	add    BYTE PTR [rdx],cl
  40d52d:	fadd   QWORD PTR [rax]
  40d52f:	add    BYTE PTR [rax],al
  40d531:	add    BYTE PTR [rax],al
  40d533:	add    BYTE PTR [rsi],bl
  40d535:	fadd   QWORD PTR [rax]
  40d537:	add    BYTE PTR [rax],al
  40d539:	add    BYTE PTR [rax],al
  40d53b:	add    BYTE PTR [rsp+rbx*8],ch
  40d53e:	add    BYTE PTR [rax],al
  40d540:	add    BYTE PTR [rax],al
  40d542:	add    BYTE PTR [rax],al
  40d544:	rex.W fadd QWORD PTR [rax]
  40d547:	add    BYTE PTR [rax],al
  40d549:	add    BYTE PTR [rax],al
  40d54b:	add    BYTE PTR [rdx-0x24],bl
  40d54e:	add    BYTE PTR [rax],al
  40d550:	add    BYTE PTR [rax],al
  40d552:	add    BYTE PTR [rax],al
  40d554:	push   0xffffffffffffffdc
	...
  40d562:	add    BYTE PTR [rax],al
  40d564:	(bad)  
  40d565:	fadd   QWORD PTR [rax]
  40d567:	add    BYTE PTR [rax],al
  40d569:	add    BYTE PTR [rax],al
  40d56b:	add    BYTE PTR [rax+0xdc],dl
  40d571:	add    BYTE PTR [rax],al
  40d573:	add    BYTE PTR [rax+0xdc],ah
  40d579:	add    BYTE PTR [rax],al
  40d57b:	add    BYTE PTR [rsp+rbx*8+0x0],ch
  40d582:	add    BYTE PTR [rax],al
  40d584:	mov    edx,0xdc
  40d589:	add    BYTE PTR [rax],al
  40d58b:	add    dl,cl
  40d58d:	fadd   QWORD PTR [rax]
  40d58f:	add    BYTE PTR [rax],al
  40d591:	add    BYTE PTR [rax],al
  40d593:	add    ah,bl
  40d595:	fadd   QWORD PTR [rax]
  40d597:	add    BYTE PTR [rax],al
  40d599:	add    BYTE PTR [rax],al
  40d59b:	add    al,dh
  40d59d:	fadd   QWORD PTR [rax]
  40d59f:	add    BYTE PTR [rax],al
  40d5a1:	add    BYTE PTR [rax],al
  40d5a3:	add    dl,bh
  40d5a5:	fadd   QWORD PTR [rax]
  40d5a7:	add    BYTE PTR [rax],al
  40d5a9:	add    BYTE PTR [rax],al
  40d5ab:	add    BYTE PTR [rax],cl
  40d5ad:	fld    QWORD PTR [rax]
  40d5af:	add    BYTE PTR [rax],al
  40d5b1:	add    BYTE PTR [rax],al
  40d5b3:	add    BYTE PTR [rdx],dl
  40d5b5:	fld    QWORD PTR [rax]
  40d5b7:	add    BYTE PTR [rax],al
  40d5b9:	add    BYTE PTR [rax],al
  40d5bb:	add    BYTE PTR [rbx*8+0x0],bl
  40d5c2:	add    BYTE PTR [rax],al
  40d5c4:	sub    ch,bl
  40d5c6:	add    BYTE PTR [rax],al
  40d5c8:	add    BYTE PTR [rax],al
  40d5ca:	add    BYTE PTR [rax],al
  40d5cc:	xor    ch,bl
  40d5ce:	add    BYTE PTR [rax],al
  40d5d0:	add    BYTE PTR [rax],al
  40d5d2:	add    BYTE PTR [rax],al
  40d5d4:	cmp    bl,ch
  40d5d6:	add    BYTE PTR [rax],al
  40d5d8:	add    BYTE PTR [rax],al
  40d5da:	add    BYTE PTR [rax],al
  40d5dc:	rex.R fld QWORD PTR [rax]
  40d5df:	add    BYTE PTR [rax],al
  40d5e1:	add    BYTE PTR [rax],al
  40d5e3:	add    BYTE PTR [rbp+rbx*8+0x0],cl
  40d5e7:	add    BYTE PTR [rax],al
  40d5e9:	add    BYTE PTR [rax],al
  40d5eb:	add    BYTE PTR [rsi-0x23],dl
  40d5ee:	add    BYTE PTR [rax],al
  40d5f0:	add    BYTE PTR [rax],al
  40d5f2:	add    BYTE PTR [rax],al
  40d5f4:	pop    rsi
  40d5f5:	fld    QWORD PTR [rax]
  40d5f7:	add    BYTE PTR [rax],al
  40d5f9:	add    BYTE PTR [rax],al
  40d5fb:	add    BYTE PTR [rax-0x23],ch
  40d5fe:	add    BYTE PTR [rax],al
  40d600:	add    BYTE PTR [rax],al
  40d602:	add    BYTE PTR [rax],al
  40d604:	jo     0x40d5e3
  40d606:	add    BYTE PTR [rax],al
  40d608:	add    BYTE PTR [rax],al
  40d60a:	add    BYTE PTR [rax],al
  40d60c:	jp     0x40d5eb
  40d60e:	add    BYTE PTR [rax],al
  40d610:	add    BYTE PTR [rax],al
  40d612:	add    BYTE PTR [rax],al
  40d614:	test   ch,bl
  40d616:	add    BYTE PTR [rax],al
  40d618:	add    BYTE PTR [rax],al
  40d61a:	add    BYTE PTR [rax],al
  40d61c:	mov    ds,ebp
  40d61e:	add    BYTE PTR [rax],al
  40d620:	add    BYTE PTR [rax],al
  40d622:	add    BYTE PTR [rax],al
  40d624:	cwde   
  40d625:	fld    QWORD PTR [rax]
  40d627:	add    BYTE PTR [rax],al
  40d629:	add    BYTE PTR [rax],al
  40d62b:	add    BYTE PTR [rdx+0xdd],ah
  40d631:	add    BYTE PTR [rax],al
  40d633:	add    BYTE PTR [rbp+rbx*8+0x0],ch
  40d63a:	add    BYTE PTR [rax],al
  40d63c:	mov    dh,0xdd
  40d63e:	add    BYTE PTR [rax],al
  40d640:	add    BYTE PTR [rax],al
  40d642:	add    BYTE PTR [rax],al
  40d644:	rcr    ch,0x0
	...
  40d653:	add    BYTE PTR [rsi],cl
  40d655:	add    BYTE PTR [rdi+0x55],bl
  40d658:	outs   dx,BYTE PTR ds:[rsi]
  40d659:	ja     0x40d6c4
  40d65b:	outs   dx,BYTE PTR ds:[rsi]
  40d65c:	fs pop rdi
  40d65e:	push   rdx
  40d65f:	gs jae 0x40d6d7
  40d662:	ins    DWORD PTR es:[rdi],dx
  40d663:	add    BYTE PTR gs:[rax],al
  40d666:	add    BYTE PTR [rax],al
  40d668:	test   BYTE PTR [rax],0x5f
  40d66b:	pop    rdx
  40d66c:	rex.WRX
  40d66d:	rex.WXB push r11
  40d66f:	jae    0x40d6a6
  40d671:	jb     0x40d6d9
  40d673:	imul   ebp,DWORD PTR [rsi+0x64],0x634b5045
  40d67a:	jns    0x40d67c
  40d67c:	inc    BYTE PTR [rax]
  40d67e:	pop    rdi
  40d67f:	pop    rdx
  40d680:	rex.WRX
  40d681:	rex.WXB push r11
  40d683:	jae    0x40d6bb
  40d685:	jae    0x40d6fc
  40d687:	(bad)
  40d68c:	jns    0x40d707
  40d68e:	add    BYTE PTR [rax],al
  40d690:	add    DWORD PTR [rcx],eax
  40d692:	pop    rdi
  40d693:	pop    rdx
  40d694:	rex.WRX
  40d695:	rex.WXB push r11
  40d697:	jae    0x40d6d0
  40d699:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40d69c:	jo     0x40d6ff
  40d69e:	jb     0x40d705
  40d6a0:	rex.RB push r8
  40d6a2:	rex.WXB movsxd rax,DWORD PTR [r8]
  40d6a5:	add    BYTE PTR [rax],al
  40d6a7:	add    BYTE PTR [rbx+0x4e5a5f01],bh
  40d6ad:	rex.WXB push r11
  40d6af:	je     0x40d6e6
  40d6b1:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  40d6b5:	movsxd rax,DWORD PTR gs:[r13+0x31]
  40d6ba:	xor    ebx,DWORD PTR [rdi+0x4d]
  40d6bd:	pop    rdi
  40d6be:	ja     0x40d729
  40d6c0:	fs outs dx,BYTE PTR gs:[rsi]
  40d6c3:	pop    rdi
  40d6c4:	imul   ebp,DWORD PTR [rsi+0x69],0x764574
  40d6cb:	add    BYTE PTR [rbx+rax*1+0x534e5a5f],dh
  40d6d2:	outs   dx,DWORD PTR ds:[rsi]
  40d6d3:	xor    esi,DWORD PTR [rax+0x75]
  40d6d6:	je     0x40d71d
  40d6d8:	movsxd eax,DWORD PTR [rax]
  40d6da:	add    BYTE PTR [rax],al
  40d6dc:	mov    ch,0x3
  40d6de:	pop    rdi
  40d6df:	pop    rdx
  40d6e0:	rex.WRX push rbx
  40d6e2:	outs   dx,DWORD PTR ds:[rsi]
  40d6e3:	xor    eax,0x73756c66
  40d6e8:	push   0xffffffffe2007645
  40d6ed:	add    ebx,DWORD PTR [rdi+0x5a]
  40d6f0:	rex.WRX push rbx
  40d6f2:	jae    0x40d725
  40d6f4:	xor    bl,BYTE PTR [rdi+0x4d]
  40d6f7:	pop    rdi
  40d6f8:	ins    BYTE PTR es:[rdi],dx
  40d6f9:	gs (bad) 
  40d6fb:	imul   ebx,DWORD PTR [rdi+0x68],0x61
  40d6ff:	jb     0x40d765
  40d701:	rex.RB jbe 0x40d704
  40d704:	jrcxz  0x40d709
  40d706:	pop    rdi
  40d707:	pop    rdx
  40d708:	rex.WRX push rbx
  40d70a:	jae    0x40d73d
  40d70c:	xor    bl,BYTE PTR [rdi+0x53]
  40d70f:	pop    rdi
  40d710:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40d713:	jae    0x40d789
  40d715:	jb     0x40d78c
  40d717:	movsxd esi,DWORD PTR [rbp+rax*2+0x79]
  40d71b:	movsxd edx,DWORD PTR [rdx+0x4b]
  40d71e:	push   rbx
  40d71f:	(bad)  
  40d720:	movsxd rax,DWORD PTR [r13+0x0]
  40d724:	icebp  
  40d725:	add    ebx,DWORD PTR [rdi+0x5a]
  40d728:	rex.WRX push rbx
  40d72a:	jae    0x40d75f
  40d72c:	outs   dx,BYTE PTR gs:[rsi]
  40d72e:	fs rex.RB jbe 0x40d732
  40d732:	add    BYTE PTR [rax],al
  40d734:	repnz add ebx,DWORD PTR [rdi+0x5a]
  40d738:	rex.WRX push rbx
  40d73a:	jae    0x40d770
  40d73c:	pop    rdi
  40d73d:	push   rdx
  40d73e:	gs jo  0x40d772
  40d741:	xor    BYTE PTR [rdi+0x4d],bl
  40d744:	pop    rdi
  40d745:	fs gs jae 0x40d7bd
  40d749:	jb     0x40d7ba
  40d74b:	jns    0x40d792
  40d74d:	push   rdx
  40d74e:	rex.WXB push r11
  40d750:	(bad)  
  40d751:	movsxd rax,DWORD PTR [r13+0x0]
  40d755:	add    BYTE PTR [rax],al
  40d757:	add    bl,dh
  40d759:	add    ebx,DWORD PTR [rdi+0x5a]
  40d75c:	rex.WRX push rbx
  40d75e:	jae    0x40d794
  40d760:	pop    rdi
  40d761:	push   rdx
  40d762:	gs jo  0x40d796
  40d765:	xor    BYTE PTR [rdi+0x4d],bl
  40d768:	pop    rdi
  40d769:	imul   esi,DWORD PTR fs:[rbx+0x70],0x4565736f
  40d771:	push   rdx
  40d772:	rex.WXB push r11
  40d774:	(bad)  
  40d775:	movsxd rax,DWORD PTR [r13+0x0]
  40d779:	add    BYTE PTR [rax],al
  40d77b:	add    BYTE PTR [rbx],al
  40d77d:	add    al,0x5f
  40d77f:	pop    rdx
  40d780:	rex.WRX push rbx
  40d782:	jae    0x40d7b8
  40d784:	jae    0x40d7fd
  40d786:	(bad)  
  40d787:	jo     0x40d7ce
  40d789:	push   rdx
  40d78a:	push   rbx
  40d78b:	jae    0x40d78d
  40d78d:	add    BYTE PTR [rax],al
  40d78f:	add    BYTE PTR [rcx],dl
  40d791:	add    al,0x5f
  40d793:	pop    rdx
  40d794:	rex.WRX push rbx
  40d796:	jae    0x40d7ce
  40d798:	(bad)  
  40d799:	jae    0x40d80e
  40d79b:	imul   esp,DWORD PTR [rdi+0x6e],0x634b5045
  40d7a2:	add    BYTE PTR [rax],al
  40d7a4:	adc    al,BYTE PTR [rdi+rbx*2]
  40d7a7:	pop    rdx
  40d7a8:	rex.WRX push rbx
  40d7aa:	jae    0x40d7e2
  40d7ac:	(bad)  
  40d7ad:	jae    0x40d822
  40d7af:	imul   esp,DWORD PTR [rdi+0x6e],0x634b5045
  40d7b6:	jns    0x40d7b8
  40d7b8:	adc    eax,DWORD PTR [rdi+rbx*2]
  40d7bb:	pop    rdx
  40d7bc:	rex.WRX push rbx
  40d7be:	jae    0x40d7f6
  40d7c0:	(bad)  
  40d7c1:	jae    0x40d836
  40d7c3:	imul   esp,DWORD PTR [rdi+0x6e],0x534b5245
  40d7ca:	jae    0x40d7cc
  40d7cc:	xor    BYTE PTR [rdi+rbx*2],al
  40d7cf:	pop    rdx
  40d7d0:	rex.WRX push rbx
  40d7d2:	jae    0x40d80b
  40d7d4:	jb     0x40d83b
  40d7d6:	jo     0x40d844
  40d7d8:	(bad)  
  40d7d9:	movsxd esp,DWORD PTR [rbp+0x45]
  40d7dc:	jns    0x40d857
  40d7de:	push   rax
  40d7df:	rex.WXB movsxd rdi,DWORD PTR [r9+0x0]
  40d7e3:	add    BYTE PTR [rdx],bh
  40d7e5:	add    al,0x5f
  40d7e7:	pop    rdx
  40d7e8:	rex.WRX push rbx
  40d7ea:	jae    0x40d82f
  40d7ec:	xor    DWORD PTR [rbp+0x50],eax
  40d7ef:	rex.WXB movsxd rdx,DWORD PTR [r10+0x4b]
  40d7f3:	push   rbx
  40d7f4:	(bad)  
  40d7f5:	movsxd rax,DWORD PTR [r13+0x0]
  40d7f9:	add    BYTE PTR [rax],al
  40d7fb:	add    BYTE PTR [rip+0x4e5a5f04],bh        # 0x4e9b3705
  40d801:	push   rbx
  40d802:	jae    0x40d847
  40d804:	xor    DWORD PTR [rbp+0x52],eax
  40d807:	rex.WXB push r11
  40d809:	jae    0x40d80b
  40d80b:	add    BYTE PTR [rax],dh
  40d80d:	or     bl,BYTE PTR [rdi+0x5a]
  40d810:	rex.WRX push rbx
  40d812:	je     0x40d84c
  40d814:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  40d81b:	gs xor al,0x49
  40d81e:	outs   dx,BYTE PTR ds:[rsi]
  40d81f:	imul   esi,DWORD PTR [rbx+rax*2+0x31],0x7645
  40d827:	add    BYTE PTR [rdx],dh
  40d829:	or     bl,BYTE PTR [rdi+0x5a]
  40d82c:	rex.WRX push rbx
  40d82e:	je     0x40d868
  40d830:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  40d837:	gs xor al,0x49
  40d83a:	outs   dx,BYTE PTR ds:[rsi]
  40d83b:	imul   esi,DWORD PTR [rsp+rax*2+0x31],0x7645
  40d843:	add    bh,bh
  40d845:	or     bl,BYTE PTR [rdi+0x5a]
  40d848:	push   rbx
  40d849:	je     0x40d87c
  40d84b:	ss pop rdi
  40d84d:	pop    rdi
  40d84e:	outs   dx,DWORD PTR ds:[rsi]
  40d84f:	jae    0x40d8c5
  40d851:	jb     0x40d8b8
  40d853:	(bad)  
  40d854:	ins    DWORD PTR es:[rdi],dx
  40d855:	pop    rdi
  40d856:	imul   ebp,DWORD PTR [rsi+0x73],0x49747265
  40d85d:	movsxd edx,DWORD PTR [rbx+0x74]
  40d860:	xor    DWORD PTR [rcx],esi
  40d862:	movsxd ebp,DWORD PTR [rax+0x61]
  40d865:	jb     0x40d8c6
  40d867:	je     0x40d8db
  40d869:	(bad)  
  40d86a:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  40d872:	push   rbx
  40d873:	je     0x40d8a6
  40d875:	xor    esp,DWORD PTR [rdx+0x61]
  40d878:	jae    0x40d8e3
  40d87a:	movsxd ebx,DWORD PTR [rdi+0x6f]
  40d87d:	jae    0x40d8f3
  40d87f:	jb     0x40d8e6
  40d881:	(bad)  
  40d882:	ins    DWORD PTR es:[rdi],dx
  40d883:	rex.WB push r12
  40d885:	pop    rdi
  40d886:	push   rsp
  40d887:	xor    BYTE PTR [rdi+0x45],bl
  40d88a:	push   rbx
  40d88b:	ss pop rdi
  40d88d:	push   rax
  40d88e:	rex.WXB push r11
  40d890:	xor    ebx,DWORD PTR [rdi+0x78]
  40d893:	add    BYTE PTR [rcx],al
  40d895:	or     ebx,DWORD PTR [rdi+0x5a]
  40d898:	push   rbx
  40d899:	je     0x40d8cc
  40d89b:	ss pop rdi
  40d89d:	pop    rdi
  40d89e:	je     0x40d908
  40d8a0:	jb     0x40d911
  40d8a2:	ja     0x40d903
  40d8a4:	(bad)
  40d8a9:	(bad)  
  40d8aa:	jae    0x40d920
  40d8ac:	jbe    0x40d8ae
  40d8ae:	add    BYTE PTR [rax],al
  40d8b0:	or     cl,BYTE PTR [rbx]
  40d8b2:	pop    rdi
  40d8b3:	pop    rdx
  40d8b4:	push   rbx
  40d8b5:	je     0x40d8e8
  40d8b7:	cmp    BYTE PTR [rdi+0x52],bl
  40d8ba:	(bad)  
  40d8bb:	pop    rdi
  40d8bc:	je     0x40d930
  40d8be:	gs gs pop rdi
  40d8c1:	fs movsxd esi,DWORD PTR gs:[rdx+0x65]
  40d8c6:	ins    DWORD PTR es:[rdi],dx
  40d8c7:	outs   dx,BYTE PTR gs:[rsi]
  40d8c9:	je     0x40d91b
  40d8cb:	push   rbx
  40d8cc:	je     0x40d8ff
  40d8ce:	cmp    BYTE PTR [rdi+0x52],bl
  40d8d1:	(bad)  
  40d8d2:	pop    rdi
  40d8d3:	je     0x40d947
  40d8d5:	gs gs pop rdi
  40d8d8:	outs   dx,BYTE PTR ds:[rsi]
  40d8d9:	outs   dx,DWORD PTR ds:[rsi]
  40d8da:	fs gs pop rdi
  40d8dd:	(bad)  
  40d8df:	jae    0x40d946
  40d8e1:	add    BYTE PTR [rax],al
  40d8e3:	add    BYTE PTR [rbx+rcx*1],cl
  40d8e6:	pop    rdi
  40d8e7:	pop    rdx
  40d8e8:	push   rbx
  40d8e9:	je     0x40d91c
  40d8eb:	cmp    BYTE PTR [rdi+0x52],bl
  40d8ee:	(bad)  
  40d8ef:	pop    rdi
  40d8f0:	je     0x40d964
  40d8f2:	gs gs pop rdi
  40d8f5:	imul   ebp,DWORD PTR [rsi+0x63],0x656d6572
  40d8fc:	outs   dx,BYTE PTR ds:[rsi]
  40d8fd:	je     0x40d94f
  40d8ff:	push   rbx
  40d900:	je     0x40d933
  40d902:	cmp    BYTE PTR [rdi+0x52],bl
  40d905:	(bad)  
  40d906:	pop    rdi
  40d907:	je     0x40d97b
  40d909:	gs gs pop rdi
  40d90c:	outs   dx,BYTE PTR ds:[rsi]
  40d90d:	outs   dx,DWORD PTR ds:[rsi]
  40d90e:	fs gs pop rdi
  40d911:	(bad)  
  40d913:	jae    0x40d97a
  40d915:	add    BYTE PTR [rax],al
  40d917:	add    BYTE PTR [rip+0x535a5f0b],ah        # 0x539b3828
  40d91d:	je     0x40d951
  40d91f:	cmp    DWORD PTR [rdi+0x52],ebx
  40d922:	(bad)  
  40d923:	pop    rdi
  40d924:	je     0x40d998
  40d926:	gs gs pop rdi
  40d929:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  40d930:	(bad)  
  40d931:	outs   dx,BYTE PTR ds:[rsi]
  40d932:	fs pop rdi
  40d934:	jb     0x40d99b
  40d936:	(bad)
  40d93b:	movsxd esp,DWORD PTR [rbp+0x62]
  40d93e:	push   rax
  40d93f:	push   rbx
  40d940:	je     0x40d973
  40d942:	cmp    BYTE PTR [rdi+0x52],bl
  40d945:	(bad)  
  40d946:	pop    rdi
  40d947:	je     0x40d9bb
  40d949:	gs gs pop rdi
  40d94c:	outs   dx,BYTE PTR ds:[rsi]
  40d94d:	outs   dx,DWORD PTR ds:[rsi]
  40d94e:	fs gs pop rdi
  40d951:	(bad)  
  40d953:	jae    0x40d9ba
  40d955:	push   rbx
  40d956:	xor    BYTE PTR [rdi+0x52],bl
  40d959:	push   rbx
  40d95a:	pop    rdi
  40d95b:	add    BYTE PTR [rcx],ch
  40d95d:	or     ebx,DWORD PTR [rdi+0x5a]
  40d960:	push   rbx
  40d961:	je     0x40d997
  40d963:	movsxd esp,DWORD PTR [rbp+0x72]
  40d966:	jb     0x40d968
  40d968:	sub    ecx,DWORD PTR [rbx]
  40d96a:	pop    rdi
  40d96b:	pop    rdx
  40d96c:	push   rbx
  40d96d:	je     0x40d9a3
  40d96f:	movsxd ebp,DWORD PTR [rdi+0x75]
  40d972:	je     0x40d974
  40d974:	sub    al,0xb
  40d976:	pop    rdi
  40d977:	pop    rdx
  40d978:	push   rbx
  40d979:	je     0x40d9af
  40d97b:	outs   dx,BYTE PTR gs:[rsi]
  40d97d:	fs ins BYTE PTR es:[rdi],dx
  40d97f:	movsxd rdx,DWORD PTR [r11+0x74]
  40d983:	xor    DWORD PTR [rcx],esi
  40d985:	movsxd ebp,DWORD PTR [rax+0x61]
  40d988:	jb     0x40d9e9
  40d98a:	je     0x40d9fe
  40d98c:	(bad)  
  40d98d:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  40d995:	push   rbx
  40d996:	je     0x40d9c9
  40d998:	xor    esp,DWORD PTR [rdx+0x61]
  40d99b:	jae    0x40da06
  40d99d:	movsxd ebx,DWORD PTR [rdi+0x6f]
  40d9a0:	jae    0x40da16
  40d9a2:	jb     0x40da09
  40d9a4:	(bad)  
  40d9a5:	ins    DWORD PTR es:[rdi],dx
  40d9a6:	rex.WB push r12
  40d9a8:	pop    rdi
  40d9a9:	push   rsp
  40d9aa:	xor    BYTE PTR [rdi+0x45],bl
  40d9ad:	push   rbx
  40d9ae:	ss pop rdi
  40d9b0:	add    BYTE PTR [rax],al
  40d9b2:	add    BYTE PTR [rax],al
  40d9b4:	jae    0x40d9c1
  40d9b6:	pop    rdi
  40d9b7:	pop    rdx
  40d9b8:	push   rbx
  40d9b9:	je     0x40da27
  40d9bb:	jae    0x40da06
  40d9bd:	push   rbx
  40d9be:	je     0x40d9f1
  40d9c0:	xor    DWORD PTR [rbx+0x68],esp
  40d9c3:	(bad)  
  40d9c4:	jb     0x40da25
  40d9c6:	je     0x40da3a
  40d9c8:	(bad)  
  40d9c9:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  40d9d1:	push   rbx
  40d9d2:	je     0x40da05
  40d9d4:	xor    esp,DWORD PTR [rdx+0x61]
  40d9d7:	jae    0x40da42
  40d9d9:	movsxd ebx,DWORD PTR [rdi+0x6f]
  40d9dc:	jae    0x40da52
  40d9de:	jb     0x40da45
  40d9e0:	(bad)  
  40d9e1:	ins    DWORD PTR es:[rdi],dx
  40d9e2:	movsxd rdx,DWORD PTR [r15+rbx*2+0x45]
  40d9e7:	push   rbx
  40d9e8:	xor    eax,0x634b505f
  40d9ed:	add    BYTE PTR [rax],al
  40d9ef:	add    dl,ch
  40d9f1:	or     eax,0x6c645a5f
  40d9f6:	push   rax
  40d9f7:	jbe    0x40d9f9
  40d9f9:	add    BYTE PTR [rax],al
  40d9fb:	add    dh,ch
  40d9fd:	or     eax,0x776e5a5f
  40da02:	jns    0x40da04
  40da04:	test   BYTE PTR [rip+0x78635f5f],0x61        # 0x78a4396a
  40da0b:	pop    rdi
  40da0c:	(bad)  
  40da0d:	imul   ebp,DWORD PTR gs:[esi+0x5f],0x63746163
  40da16:	push   0x5f0dfb00
  40da1b:	pop    rdi
  40da1c:	movsxd edi,DWORD PTR [rax+0x61]
  40da1f:	pop    rdi
  40da20:	outs   dx,BYTE PTR gs:[rsi]
  40da22:	fs pop rdi
  40da24:	movsxd esp,DWORD PTR [rcx+0x74]
  40da27:	movsxd ebp,DWORD PTR [rax+0x0]
  40da2a:	add    BYTE PTR [rax],al
  40da2c:	add    eax,0x635f5f0e
  40da31:	js     0x40da94
  40da33:	pop    rdi
  40da34:	jb     0x40da9b
  40da36:	je     0x40daa0
  40da38:	jb     0x40daa9
  40da3a:	ja     0x40da3c
  40da3c:	(bad)  
  40da3d:	(bad)  
  40da3e:	pop    rdi
  40da3f:	pop    rdi
  40da40:	addr32 js 0x40dabb
  40da43:	pop    rdi
  40da44:	jo     0x40daab
  40da46:	jb     0x40dabb
  40da48:	outs   dx,DWORD PTR ds:[rsi]
  40da49:	outs   dx,BYTE PTR ds:[rsi]
  40da4a:	(bad)  
  40da4b:	ins    BYTE PTR es:[rdi],dx
  40da4c:	imul   esi,DWORD PTR [rcx+rdi*2+0x5f],0x30686573
  40da54:	add    BYTE PTR [rax],al
  40da56:	add    BYTE PTR [rax],al
  40da58:	fadd   DWORD PTR [rax]
  40da5a:	rex.R
  40da5b:	gs ins BYTE PTR es:[rdi],dx
  40da5d:	gs je  0x40dac5
  40da60:	rex.XB jb 0x40dacc
  40da63:	je     0x40dace
  40da65:	movsxd esp,DWORD PTR [rcx+0x6c]
  40da68:	push   rbx
  40da69:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40da6e:	outs   dx,BYTE PTR ds:[rsi]
  40da6f:	add    al,bh
  40da71:	add    BYTE PTR [rbp+0x6e],al
  40da74:	je     0x40dadb
  40da76:	jb     0x40dabb
  40da78:	jb     0x40dae3
  40da7a:	je     0x40dae5
  40da7c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40da7f:	push   rbx
  40da80:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40da85:	outs   dx,BYTE PTR ds:[rsi]
  40da86:	add    BYTE PTR [rax],al
  40da88:	int    0x1
  40da8a:	rex.RXB
  40da8b:	gs je  0x40dad1
  40da8e:	jne    0x40db02
  40da90:	jb     0x40daf7
  40da92:	outs   dx,BYTE PTR ds:[rsi]
  40da93:	je     0x40dae5
  40da95:	jb     0x40db06
  40da97:	movsxd esp,DWORD PTR [rbp+0x73]
  40da9a:	jae    0x40da9c
  40da9c:	(bad)  
  40da9d:	add    DWORD PTR [rdi+0x65],eax
  40daa0:	je     0x40dae5
  40daa2:	jne    0x40db16
  40daa4:	jb     0x40db0b
  40daa6:	outs   dx,BYTE PTR ds:[rsi]
  40daa7:	je     0x40daf9
  40daa9:	jb     0x40db1a
  40daab:	movsxd esp,DWORD PTR [rbp+0x73]
  40daae:	jae    0x40daf9
  40dab0:	fs add dl,dl
  40dab3:	add    DWORD PTR [rdi+0x65],eax
  40dab6:	je     0x40dafb
  40dab8:	jne    0x40db2c
  40daba:	jb     0x40db21
  40dabc:	outs   dx,BYTE PTR ds:[rsi]
  40dabd:	je     0x40db13
  40dabf:	push   0x64616572
  40dac4:	rex.WB
  40dac5:	add    BYTE PTR fs:[rax],al
  40dac8:	adc    BYTE PTR [rdx],al
  40daca:	rex.RXB
  40dacb:	gs je  0x40db1a
  40dace:	(bad)  
  40dacf:	jae    0x40db45
  40dad1:	rex.RB jb 0x40db46
  40dad4:	outs   dx,DWORD PTR ds:[rsi]
  40dad5:	jb     0x40dad7
  40dad7:	add    BYTE PTR [rdx],ah
  40dad9:	add    al,BYTE PTR [rdi+0x65]
  40dadc:	je     0x40db2b
  40dade:	outs   dx,DWORD PTR ds:[rsi]
  40dadf:	fs jne 0x40db4e
  40dae2:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
  40daec:	add    BYTE PTR [rax],al
  40daee:	and    al,0x2
  40daf0:	rex.RXB
  40daf1:	gs je  0x40db41
  40daf4:	outs   dx,DWORD PTR ds:[rsi]
  40daf5:	fs jne 0x40db64
  40daf8:	gs rex.W (bad) 
  40dafb:	outs   dx,BYTE PTR ds:[rsi]
  40dafc:	fs ins BYTE PTR es:[rdi],dx
  40dafe:	add    BYTE PTR gs:[r8],al
  40db02:	jae    0x40db06
  40db04:	rex.RXB
  40db05:	gs je  0x40db5b
  40db08:	je     0x40db6b
  40db0a:	jb     0x40db80
  40db0c:	jne    0x40db7e
  40db0e:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40db10:	outs   dx,WORD PTR ds:[rsi]
  40db12:	add    BYTE PTR [r10+0x74654702],cl
  40db19:	push   rbx
  40db1a:	jns    0x40db8f
  40db1c:	je     0x40db83
  40db1e:	ins    DWORD PTR es:[rdi],dx
  40db1f:	push   rsp
  40db20:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40db27:	ins    BYTE PTR es:[rdi],dx
  40db28:	gs push rsp
  40db2a:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40db31:	gs je  0x40db88
  40db34:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40db3b:	je     0x40db3d
  40db3d:	add    cl,bh
  40db3f:	add    cl,BYTE PTR [rcx+0x6e]
  40db42:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40db4a:	rex.XB jb 0x40dbb6
  40db4d:	je     0x40dbb8
  40db4f:	movsxd esp,DWORD PTR [rcx+0x6c]
  40db52:	push   rbx
  40db53:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40db58:	outs   dx,BYTE PTR ds:[rsi]
  40db59:	add    BYTE PTR [rbx+0x3],cl
  40db5c:	rex.WR
  40db5d:	gs (bad) 
  40db5f:	jbe    0x40dbc6
  40db61:	rex.XB jb 0x40dbcd
  40db64:	je     0x40dbcf
  40db66:	movsxd esp,DWORD PTR [rcx+0x6c]
  40db69:	push   rbx
  40db6a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40db6f:	outs   dx,BYTE PTR ds:[rsi]
  40db70:	add    BYTE PTR [rax],al
  40db72:	mov    ebx,0x65755103
  40db77:	jb     0x40dbf2
  40db79:	push   rax
  40db7a:	gs jb  0x40dbe3
  40db7d:	outs   dx,DWORD PTR ds:[rsi]
  40db7e:	jb     0x40dbed
  40db80:	(bad)  
  40db81:	outs   dx,BYTE PTR ds:[rsi]
  40db82:	movsxd esp,DWORD PTR [rbp+0x43]
  40db85:	outs   dx,DWORD PTR ds:[rsi]
  40db86:	jne    0x40dbf6
  40db88:	je     0x40dbef
  40db8a:	jb     0x40db8c
  40db8c:	add    DWORD PTR [rdx+rdx*2],eax
  40db8f:	je     0x40dbfd
  40db91:	rex.B
  40db92:	fs fs rex.RX jne 0x40dc05
  40db97:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40db9b:	outs   dx,BYTE PTR ds:[rsi]
  40db9c:	push   rsp
  40db9d:	(bad)  
  40db9e:	(bad)  
  40db9f:	ins    BYTE PTR es:[rdi],dx
  40dba0:	add    BYTE PTR gs:[rdx],al
  40dba3:	add    al,0x52
  40dba5:	je     0x40dc13
  40dba7:	rex.XB (bad) 
  40dba9:	jo     0x40dc1f
  40dbab:	jne    0x40dc1f
  40dbad:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40dbb0:	outs   dx,BYTE PTR ds:[rsi]
  40dbb1:	je     0x40dc18
  40dbb3:	js     0x40dc29
  40dbb5:	add    BYTE PTR [rcx],cl
  40dbb7:	add    al,0x52
  40dbb9:	je     0x40dc27
  40dbbb:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40dbbd:	outs   dx,DWORD PTR ds:[rsi]
  40dbbe:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40dbc2:	jne    0x40dc32
  40dbc4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40dbc8:	outs   dx,BYTE PTR ds:[rsi]
  40dbc9:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40dbcb:	je     0x40dc3f
  40dbcd:	jns    0x40dbcf
  40dbcf:	add    BYTE PTR [rax],dl
  40dbd1:	add    al,0x52
  40dbd3:	je     0x40dc41
  40dbd5:	push   rsi
  40dbd6:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40dbdd:	outs   dx,BYTE PTR ds:[rsi]
  40dbde:	ja     0x40dc49
  40dbe0:	outs   dx,BYTE PTR ds:[rsi]
  40dbe1:	add    BYTE PTR fs:[rax],al
  40dbe4:	lahf   
  40dbe5:	add    al,0x53
  40dbe7:	gs je  0x40dc3f
  40dbea:	outs   dx,BYTE PTR ds:[rsi]
  40dbeb:	push   0x6c646e61
  40dbf0:	gs fs rex.RB js 0x40dc58
  40dbf5:	gs jo  0x40dc6c
  40dbf8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40dbff:	gs jb  0x40dc02
  40dc02:	lods   al,BYTE PTR ds:[rsi]
  40dc03:	add    al,0x53
  40dc05:	ins    BYTE PTR es:[rdi],dx
  40dc06:	gs gs jo 0x40dc0a
  40dc0a:	mov    edx,0x72655404
  40dc0f:	ins    DWORD PTR es:[rdi],dx
  40dc10:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40dc17:	outs   dx,DWORD PTR ds:[rsi]
  40dc18:	movsxd esp,DWORD PTR [rbp+0x73]
  40dc1b:	jae    0x40dc1d
  40dc1d:	add    cl,al
  40dc1f:	add    al,0x54
  40dc21:	ins    BYTE PTR es:[rdi],dx
  40dc22:	jae    0x40dc6b
  40dc24:	gs je  0x40dc7d
  40dc27:	(bad)  
  40dc28:	ins    BYTE PTR es:[rdi],dx
  40dc29:	jne    0x40dc90
  40dc2b:	add    dh,cl
  40dc2d:	add    al,0x55
  40dc2f:	outs   dx,BYTE PTR ds:[rsi]
  40dc30:	push   0x6c646e61
  40dc35:	gs fs rex.RB js 0x40dc9d
  40dc3a:	gs jo  0x40dcb1
  40dc3d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40dc44:	gs jb  0x40dc47
  40dc47:	add    ah,ch
  40dc49:	add    al,0x56
  40dc4b:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40dc52:	jb     0x40dcc3
  40dc54:	je     0x40dcbb
  40dc56:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40dc5a:	out    dx,al
  40dc5b:	add    al,0x56
  40dc5d:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40dc64:	jne    0x40dccb
  40dc66:	jb     0x40dce1
  40dc68:	add    BYTE PTR [rax],al
  40dc6a:	xor    al,BYTE PTR [rip+0x5f435f5f]        # 0x5f843bcf
  40dc70:	jae    0x40dce2
  40dc72:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40dc76:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40dc7d:	ins    BYTE PTR es:[rdi],dx
  40dc7e:	gs jb  0x40dc81
  40dc81:	add    BYTE PTR [rsi+0x0],cl
  40dc84:	pop    rdi
  40dc85:	pop    rdi
  40dc86:	fs ins BYTE PTR es:[rdi],dx
  40dc88:	ins    BYTE PTR es:[rdi],dx
  40dc89:	outs   dx,DWORD PTR ds:[rsi]
  40dc8a:	outs   dx,BYTE PTR ds:[rsi]
  40dc8b:	gs js  0x40dcf7
  40dc8e:	je     0x40dc90
  40dc90:	push   rcx
  40dc91:	add    BYTE PTR [rdi+0x5f],bl
  40dc94:	addr32 gs je 0x40dd05
  40dc98:	(bad)  
  40dc99:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40dca0:	push   rdx
  40dca1:	add    BYTE PTR [rdi+0x5f],bl
  40dca4:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40dcab:	add    BYTE PTR [rbx+0x0],dl
  40dcae:	pop    rdi
  40dcaf:	pop    rdi
  40dcb0:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40dcb7:	movsxd eax,DWORD PTR [rax]
  40dcb9:	add    BYTE PTR [rdx+0x0],bl
  40dcbc:	pop    rdi
  40dcbd:	pop    rdi
  40dcbe:	ins    BYTE PTR es:[rdi],dx
  40dcbf:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40dcc2:	jbe    0x40dd23
  40dcc4:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40dccb:	add    BYTE PTR [rdi+0x5f],bl
  40dcce:	jae    0x40dd35
  40dcd0:	je     0x40dd31
  40dcd2:	(bad)  
  40dcd3:	jo     0x40dd45
  40dcd5:	pop    rdi
  40dcd6:	je     0x40dd51
  40dcd8:	jo     0x40dd3f
  40dcda:	add    BYTE PTR [rax],al
  40dcdc:	(bad)  
  40dcdd:	add    BYTE PTR [rdi+0x5f],bl
  40dce0:	jae    0x40dd47
  40dce2:	je     0x40dd59
  40dce4:	jae    0x40dd4b
  40dce6:	jb     0x40dd55
  40dce8:	(bad)  
  40dce9:	je     0x40dd53
  40dceb:	gs jb  0x40dd60
  40dcee:	add    BYTE PTR [rax],al
  40dcf0:	jno    0x40dcf2
  40dcf2:	pop    rdi
  40dcf3:	(bad)  
  40dcf4:	movsxd ebp,DWORD PTR [rbp+0x64]
  40dcf7:	ins    BYTE PTR es:[rdi],dx
  40dcf8:	outs   dx,BYTE PTR ds:[rsi]
  40dcf9:	add    BYTE PTR [rax+0x0],bh
  40dcfc:	pop    rdi
  40dcfd:	(bad)  
  40dcfe:	ins    DWORD PTR es:[rdi],dx
  40dcff:	jae    0x40dd68
  40dd01:	pop    rdi
  40dd02:	gs js  0x40dd6e
  40dd05:	je     0x40dd07
  40dd07:	add    BYTE PTR [rdx+0x65635f00],cl
  40dd0d:	js     0x40dd78
  40dd0f:	je     0x40dd11
  40dd11:	add    dl,bl
  40dd13:	add    BYTE PTR [rdi+0x66],bl
  40dd16:	ins    DWORD PTR es:[rdi],dx
  40dd17:	outs   dx,DWORD PTR ds:[rsi]
  40dd18:	fs add BYTE PTR gs:[rax],al
  40dd1c:	sbb    al,BYTE PTR [rcx]
  40dd1e:	pop    rdi
  40dd1f:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40dd26:	ins    DWORD PTR es:[rdi],dx
  40dd27:	add    BYTE PTR [rax+0x6f6c5f01],al
  40dd2d:	movsxd ebp,DWORD PTR [rbx+0x0]
  40dd30:	and    eax,0x6e6f5f02
  40dd35:	gs js  0x40dda1
  40dd38:	je     0x40dd3a
  40dd3a:	(bad)
  40dd3e:	outs   dx,BYTE PTR ds:[rsi]
  40dd3f:	ins    BYTE PTR es:[rdi],dx
  40dd40:	outs   dx,DWORD PTR ds:[rsi]
  40dd41:	movsxd ebp,DWORD PTR [rbx+0x0]
  40dd44:	jg     0x40dd49
  40dd46:	(bad)  
  40dd47:	(bad)  
  40dd48:	outs   dx,DWORD PTR ds:[rsi]
  40dd49:	jb     0x40ddbf
  40dd4b:	add    BYTE PTR [rax+0x6c616303],dl
  40dd51:	ins    BYTE PTR es:[rdi],dx
  40dd52:	outs   dx,DWORD PTR ds:[rsi]
  40dd53:	movsxd eax,DWORD PTR [rax]
  40dd55:	add    BYTE PTR [rbp+0x69786503],bl
  40dd5b:	je     0x40dd5d
  40dd5d:	add    BYTE PTR [rax+0x72706603],dh
  40dd63:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40dd6a:	data16 jb 0x40ddd2
  40dd6d:	add    BYTE PTR gs:[rax],al
  40dd70:	ret    0x6603
  40dd73:	ja     0x40dde7
  40dd75:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  40dd7d:	gs je  0x40dde5
  40dd80:	outs   dx,BYTE PTR ds:[rsi]
  40dd81:	jbe    0x40dd83
  40dd83:	add    al,dh
  40dd85:	add    ebp,DWORD PTR [rbp+0x61]
  40dd88:	ins    BYTE PTR es:[rdi],dx
  40dd89:	ins    BYTE PTR es:[rdi],dx
  40dd8a:	outs   dx,DWORD PTR ds:[rsi]
  40dd8b:	movsxd eax,DWORD PTR [rax]
  40dd8d:	add    bh,dh
  40dd8f:	add    ebp,DWORD PTR [rbp+0x65]
  40dd92:	ins    DWORD PTR es:[rdi],dx
  40dd93:	movsxd ebp,DWORD PTR [rbp+0x70]
  40dd96:	add    BYTE PTR [rax],al
  40dd98:	clc    
  40dd99:	add    ebp,DWORD PTR [rbp+0x65]
  40dd9c:	ins    DWORD PTR es:[rdi],dx
  40dd9d:	movsxd esi,DWORD PTR [rax+0x79]
  40dda0:	add    BYTE PTR [rax],al
  40dda2:	(bad)  
  40dda3:	add    al,0x73
  40dda5:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40ddac:	sub    eax,DWORD PTR [rbx+rsi*2]
  40ddaf:	je     0x40de23
  40ddb1:	ins    BYTE PTR es:[rdi],dx
  40ddb2:	outs   dx,BYTE PTR gs:[rsi]
  40ddb4:	add    BYTE PTR [rax],al
  40ddb6:	cs add al,0x73
  40ddb9:	je     0x40de2d
  40ddbb:	outs   dx,BYTE PTR ds:[rsi]
  40ddbc:	movsxd ebp,DWORD PTR [rbp+0x70]
  40ddbf:	add    BYTE PTR [rsi+0x4],cl
  40ddc2:	jbe    0x40de2a
  40ddc4:	jo     0x40de38
  40ddc6:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40ddcd:	rol    BYTE PTR [rax],1
  40ddcf:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40ddd3:	movsxd esp,DWORD PTR [ebx+0x5f]
  40ddd7:	jae    0x40de38
  40ddd9:	jae    0x40de40
  40dddb:	push   0x642e312d
  40dde0:	ins    BYTE PTR es:[rdi],dx
  40dde1:	ins    BYTE PTR es:[rdi],dx
  40dde2:	add    BYTE PTR [rax],al
  40dde4:	adc    al,0xd0
  40dde6:	add    BYTE PTR [rax],al
  40dde8:	adc    al,0xd0
  40ddea:	add    BYTE PTR [rax],al
  40ddec:	adc    al,0xd0
  40ddee:	add    BYTE PTR [rax],al
  40ddf0:	adc    al,0xd0
  40ddf2:	add    BYTE PTR [rax],al
  40ddf4:	adc    al,0xd0
  40ddf6:	add    BYTE PTR [rax],al
  40ddf8:	adc    al,0xd0
  40ddfa:	add    BYTE PTR [rax],al
  40ddfc:	adc    al,0xd0
  40ddfe:	add    BYTE PTR [rax],al
  40de00:	adc    al,0xd0
  40de02:	add    BYTE PTR [rax],al
  40de04:	adc    al,0xd0
  40de06:	add    BYTE PTR [rax],al
  40de08:	adc    al,0xd0
  40de0a:	add    BYTE PTR [rax],al
  40de0c:	adc    al,0xd0
  40de0e:	add    BYTE PTR [rax],al
  40de10:	adc    al,0xd0
  40de12:	add    BYTE PTR [rax],al
  40de14:	adc    al,0xd0
  40de16:	add    BYTE PTR [rax],al
  40de18:	adc    al,0xd0
  40de1a:	add    BYTE PTR [rax],al
  40de1c:	adc    al,0xd0
  40de1e:	add    BYTE PTR [rax],al
  40de20:	adc    al,0xd0
  40de22:	add    BYTE PTR [rax],al
  40de24:	adc    al,0xd0
  40de26:	add    BYTE PTR [rax],al
  40de28:	adc    al,0xd0
  40de2a:	add    BYTE PTR [rax],al
  40de2c:	adc    al,0xd0
  40de2e:	add    BYTE PTR [rax],al
  40de30:	adc    al,0xd0
  40de32:	add    BYTE PTR [rax],al
  40de34:	adc    al,0xd0
  40de36:	add    BYTE PTR [rax],al
  40de38:	adc    al,0xd0
  40de3a:	add    BYTE PTR [rax],al
  40de3c:	adc    al,0xd0
  40de3e:	add    BYTE PTR [rax],al
  40de40:	adc    al,0xd0
  40de42:	add    BYTE PTR [rax],al
  40de44:	adc    al,0xd0
  40de46:	add    BYTE PTR [rax],al
  40de48:	adc    al,0xd0
  40de4a:	add    BYTE PTR [rax],al
  40de4c:	adc    al,0xd0
  40de4e:	add    BYTE PTR [rax],al
  40de50:	adc    al,0xd0
  40de52:	add    BYTE PTR [rax],al
  40de54:	adc    al,0xd0
  40de56:	add    BYTE PTR [rax],al
  40de58:	adc    al,0xd0
  40de5a:	add    BYTE PTR [rax],al
  40de5c:	adc    al,0xd0
  40de5e:	add    BYTE PTR [rax],al
  40de60:	adc    al,0xd0
  40de62:	add    BYTE PTR [rax],al
  40de64:	adc    al,0xd0
  40de66:	add    BYTE PTR [rax],al
  40de68:	adc    al,0xd0
  40de6a:	add    BYTE PTR [rax],al
  40de6c:	adc    al,0xd0
  40de6e:	add    BYTE PTR [rax],al
  40de70:	ins    BYTE PTR es:[rdi],dx
  40de71:	imul   esp,DWORD PTR [rdx+0x73],0x2b636474
  40de78:	sub    ebp,DWORD PTR [rip+0x6c642e36]        # 0x6ca50cb4
  40de7e:	ins    BYTE PTR es:[rdi],dx
  40de7f:	add    BYTE PTR [rax],ch
  40de81:	rol    BYTE PTR [rax],1
  40de83:	add    BYTE PTR [rax],ch
  40de85:	rol    BYTE PTR [rax],1
  40de87:	add    BYTE PTR [rax],ch
  40de89:	rol    BYTE PTR [rax],1
  40de8b:	add    BYTE PTR [rax],ch
  40de8d:	rol    BYTE PTR [rax],1
  40de8f:	add    BYTE PTR [rax],ch
  40de91:	rol    BYTE PTR [rax],1
  40de93:	add    BYTE PTR [rax],ch
  40de95:	rol    BYTE PTR [rax],1
  40de97:	add    BYTE PTR [rax],ch
  40de99:	rol    BYTE PTR [rax],1
  40de9b:	add    BYTE PTR [rax],ch
  40de9d:	rol    BYTE PTR [rax],1
  40de9f:	add    BYTE PTR [rax],ch
  40dea1:	rol    BYTE PTR [rax],1
  40dea3:	add    BYTE PTR [rax],ch
  40dea5:	rol    BYTE PTR [rax],1
  40dea7:	add    BYTE PTR [rax],ch
  40dea9:	rol    BYTE PTR [rax],1
  40deab:	add    BYTE PTR [rax],ch
  40dead:	rol    BYTE PTR [rax],1
  40deaf:	add    BYTE PTR [rax],ch
  40deb1:	rol    BYTE PTR [rax],1
  40deb3:	add    BYTE PTR [rax],ch
  40deb5:	rol    BYTE PTR [rax],1
  40deb7:	add    BYTE PTR [rax],ch
  40deb9:	rol    BYTE PTR [rax],1
  40debb:	add    BYTE PTR [rax],ch
  40debd:	rol    BYTE PTR [rax],1
  40debf:	add    BYTE PTR [rax],ch
  40dec1:	rol    BYTE PTR [rax],1
  40dec3:	add    BYTE PTR [rax],ch
  40dec5:	rol    BYTE PTR [rax],1
  40dec7:	add    BYTE PTR [rax],ch
  40dec9:	rol    BYTE PTR [rax],1
  40decb:	add    BYTE PTR [rax],ch
  40decd:	rol    BYTE PTR [rax],1
  40decf:	add    BYTE PTR [rax],ch
  40ded1:	rol    BYTE PTR [rax],1
  40ded3:	add    BYTE PTR [rax],ch
  40ded5:	rol    BYTE PTR [rax],1
  40ded7:	add    BYTE PTR [rax],ch
  40ded9:	rol    BYTE PTR [rax],1
  40dedb:	add    BYTE PTR [rax],ch
  40dedd:	rol    BYTE PTR [rax],1
  40dedf:	add    BYTE PTR [rax],ch
  40dee1:	rol    BYTE PTR [rax],1
  40dee3:	add    BYTE PTR [rax],ch
  40dee5:	rol    BYTE PTR [rax],1
  40dee7:	add    BYTE PTR [rbx+0x45],cl
  40deea:	push   rdx
  40deeb:	rex.WRX
  40deec:	rex.RB
  40deed:	xor    r14,QWORD PTR [rdx]
  40def0:	cs fs ins BYTE PTR es:[rdi],dx
  40def3:	ins    BYTE PTR es:[rdi],dx
  40def4:	add    BYTE PTR [rax],al
  40def6:	add    BYTE PTR [rax],al
  40def8:	cmp    al,0xd0
  40defa:	add    BYTE PTR [rax],al
  40defc:	cmp    al,0xd0
  40defe:	add    BYTE PTR [rax],al
  40df00:	cmp    al,0xd0
  40df02:	add    BYTE PTR [rax],al
  40df04:	cmp    al,0xd0
  40df06:	add    BYTE PTR [rax],al
  40df08:	cmp    al,0xd0
  40df0a:	add    BYTE PTR [rax],al
  40df0c:	cmp    al,0xd0
  40df0e:	add    BYTE PTR [rax],al
  40df10:	cmp    al,0xd0
  40df12:	add    BYTE PTR [rax],al
  40df14:	cmp    al,0xd0
  40df16:	add    BYTE PTR [rax],al
  40df18:	cmp    al,0xd0
  40df1a:	add    BYTE PTR [rax],al
  40df1c:	cmp    al,0xd0
  40df1e:	add    BYTE PTR [rax],al
  40df20:	cmp    al,0xd0
  40df22:	add    BYTE PTR [rax],al
  40df24:	cmp    al,0xd0
  40df26:	add    BYTE PTR [rax],al
  40df28:	cmp    al,0xd0
  40df2a:	add    BYTE PTR [rax],al
  40df2c:	cmp    al,0xd0
  40df2e:	add    BYTE PTR [rax],al
  40df30:	cmp    al,0xd0
  40df32:	add    BYTE PTR [rax],al
  40df34:	cmp    al,0xd0
  40df36:	add    BYTE PTR [rax],al
  40df38:	cmp    al,0xd0
  40df3a:	add    BYTE PTR [rax],al
  40df3c:	cmp    al,0xd0
  40df3e:	add    BYTE PTR [rax],al
  40df40:	cmp    al,0xd0
  40df42:	add    BYTE PTR [rax],al
  40df44:	cmp    al,0xd0
  40df46:	add    BYTE PTR [rax],al
  40df48:	cmp    al,0xd0
  40df4a:	add    BYTE PTR [rax],al
  40df4c:	cmp    al,0xd0
  40df4e:	add    BYTE PTR [rax],al
  40df50:	cmp    al,0xd0
  40df52:	add    BYTE PTR [rax],al
  40df54:	cmp    al,0xd0
  40df56:	add    BYTE PTR [rax],al
  40df58:	cmp    al,0xd0
  40df5a:	add    BYTE PTR [rax],al
  40df5c:	cmp    al,0xd0
  40df5e:	add    BYTE PTR [rax],al
  40df60:	cmp    al,0xd0
  40df62:	add    BYTE PTR [rax],al
  40df64:	cmp    al,0xd0
  40df66:	add    BYTE PTR [rax],al
  40df68:	cmp    al,0xd0
  40df6a:	add    BYTE PTR [rax],al
  40df6c:	ins    DWORD PTR es:[rdi],dx
  40df6d:	jae    0x40dfe5
  40df6f:	movsxd esi,DWORD PTR [rdx+0x74]
  40df72:	cs fs ins BYTE PTR es:[rdi],dx
  40df75:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040e000 <.CRT>:
	...
  40e008:	(bad)  
  40e009:	adc    DWORD PTR [rax+0x0],eax
	...
  40e020:	adc    BYTE PTR [rax],dl
  40e022:	add    BYTE PTR [rax],al
  40e025:	add    BYTE PTR [rax],al
  40e027:	add    BYTE PTR [rax],ah
  40e029:	xor    BYTE PTR [rax+0x0],al
	...
  40e040:	push   rax
  40e041:	xor    al,BYTE PTR [rax+0x0]
  40e044:	add    BYTE PTR [rax],al
  40e046:	add    BYTE PTR [rax],al
  40e048:	and    BYTE PTR [rdx],dh
  40e04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040f000 <.tls>:
	...
  40f020:	add    al,dh
  40f022:	add    BYTE PTR [rax],al
  40f025:	add    BYTE PTR [rax],al
  40f027:	add    BYTE PTR [rax-0x10],ah
  40f02a:	add    BYTE PTR [rax],al
  40f02d:	add    BYTE PTR [rax],al
  40f02f:	add    ah,bl
  40f031:	mov    dh,0x40
  40f033:	add    BYTE PTR [rax],al
  40f035:	add    BYTE PTR [rax],al
  40f037:	add    BYTE PTR [rax-0x20],al
  40f03a:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000000410000 <.reloc>:
  410000:	add    BYTE PTR [rax+0x0],dl
  410003:	add    BYTE PTR [rax+rax*1],cl
  410006:	add    BYTE PTR [rax],al
  410008:	cwde   
  410009:	stos   BYTE PTR es:[rdi],al
  41000a:	add    BYTE PTR [rax],al
  41000c:	add    BYTE PTR [rax+0x0],ah
  41000f:	add    BYTE PTR [rax],dl
  410011:	add    BYTE PTR [rax],al
  410013:	add    BYTE PTR [rax],dl
  410015:	movabs al,ds:0x8000a078a070a020
  41001e:	add    BYTE PTR [rax],al
  410020:	push   rax
  410021:	add    BYTE PTR [rax],al
  410023:	add    al,dh
  410025:	movabs ds:0xa590a580a300a2f8,al
  41002e:	movabs al,ds:0xe0a5d0a5c0a5b0a5
  410037:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  410038:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41003a:	add    BYTE PTR [rsi-0x59df59f0],ah
  410040:	xor    BYTE PTR [rsi-0x59af59c0],ah
  410046:	(bad)  
  410047:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410048:	jo     0x40fff0
  41004a:	and    BYTE PTR [rsi-0x595f5970],0xb0
  410051:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410052:	shl    BYTE PTR [rsi-0x591f5930],0xf0
  410059:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41005a:	add    BYTE PTR [rdi-0x58df58f0],ah
  410060:	xor    BYTE PTR [rdi-0x58af58c0],ah
  410066:	(bad)  
  410067:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  410068:	jo     0x410011
  41006a:	add    BYTE PTR [rax],al
  41006c:	add    al,ah
  41006e:	add    BYTE PTR [rax],al
  410070:	adc    al,0x0
  410072:	add    BYTE PTR [rax],al
  410074:	or     BYTE PTR [rax-0x5fd75fe0],ah
  41007a:	movabs al,ds:0xf0000000a048
  410084:	adc    BYTE PTR [rax],al
  410086:	add    BYTE PTR [rax],al
  410088:	and    BYTE PTR [rax-0x5fcf5fd8],ah
  41008e:	.byte 0x38
  41008f:	.byte 0xa0
