
2a1d8692f445791dc9dc9700e11f2ce68fce9ac5ad2abd56aa0f41f1047b38f1.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x59f55]        # 0x45af70
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x59f56]        # 0x45af80
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x59f59]        # 0x45af90
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x59f1c]        # 0x45af60
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x59c4f]        # 0x45aca0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x59ef1]        # 0x45af50
  40105f:	mov    DWORD PTR [rip+0x60fa3],edx        # 0x462008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4495f8
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x43c4a0
  401081:	mov    rdx,QWORD PTR [rip+0x59cb8]        # 0x45ad40
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x59c9e]        # 0x45ad30
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x59d44]        # 0x45ade0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x59c3b]        # 0x45ace0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x43c080
  4010af:	mov    rax,QWORD PTR [rip+0x59b7a]        # 0x45ac30
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4495f8
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x3b259]        # 0x43c380
  401127:	call   0x43c370
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x59cb5]        # 0x45ae20
  40116b:	lea    r8,[rip+0x60ea6]        # 0x462018
  401172:	lea    rdx,[rip+0x60ea7]        # 0x462020
  401179:	lea    rcx,[rip+0x60ea8]        # 0x462028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x60e78],eax        # 0x462000
  401188:	lea    rax,[rip+0x60e71]        # 0x462000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x59c35]        # 0x45add0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x449610
  4011a3:	mov    DWORD PTR [rip+0x60e67],eax        # 0x462010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x59d8a]        # 0x45af50
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x59b1b]        # 0x45ad10
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x634c2]        # 0x4646c4
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x59af7]        # 0x45ad20
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x60dba],0x1        # 0x462004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x59a1c]        # 0x45ac80
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x43c690
  40127d:	lea    rcx,[rip+0x3b9ac]        # 0x43cc30
  401284:	call   QWORD PTR [rip+0x63432]        # 0x4646bc
  40128a:	mov    rdx,QWORD PTR [rip+0x59a6f]        # 0x45ad00
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x43cb40
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x449640
  4012a5:	call   0x43c480
  4012aa:	mov    rax,QWORD PTR [rip+0x599ef]        # 0x45aca0
  4012b1:	mov    QWORD PTR [rip+0x62930],rax        # 0x463be8
  4012b8:	mov    rax,QWORD PTR [rip+0x59a11]        # 0x45acd0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x628c9],rax        # 0x463be0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x49cca],eax        # 0x44b000
  401336:	mov    r12d,DWORD PTR [rip+0x60ceb]        # 0x462028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x449468
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x60cc2]        # 0x462020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4493c0
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x449468
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x449450
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x60c6a],rbp        # 0x462020
  4013b6:	call   0x43c050
  4013bb:	mov    rax,QWORD PTR [rip+0x598ee]        # 0x45acb0
  4013c2:	mov    rdx,QWORD PTR [rip+0x60c4f]        # 0x462018
  4013c9:	mov    ecx,DWORD PTR [rip+0x60c59]        # 0x462028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x60c3c]        # 0x462018
  4013dc:	mov    rdx,QWORD PTR [rip+0x60c3d]        # 0x462020
  4013e3:	call   0x449950
  4013e8:	mov    ecx,DWORD PTR [rip+0x60c1a]        # 0x462008
  4013ee:	mov    DWORD PTR [rip+0x60c18],eax        # 0x46200c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x60c02]        # 0x462004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4495e0
  40140b:	mov    eax,DWORD PTR [rip+0x60bfb]        # 0x46200c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x598e9]        # 0x45ad20
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4495e8
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x5991d]        # 0x45ad80
  401463:	mov    rcx,QWORD PTR [rip+0x59906]        # 0x45ad70
  40146a:	call   0x449598
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x631a3]        # 0x46463c
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x598f9]        # 0x45ada0
  4014a7:	mov    rcx,QWORD PTR [rip+0x598e2]        # 0x45ad90
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x449598
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x449520
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x59a75]        # 0x45af50
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x43c090
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x59a45]        # 0x45af50
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x43c090
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   r12
  401532:	push   rbp
  401533:	push   rdi
  401534:	push   rsi
  401535:	push   rbx
  401536:	sub    rsp,0x20
  40153a:	mov    rsi,QWORD PTR [rcx]
  40153d:	xor    r12d,r12d
  401540:	xor    edi,edi
  401542:	mov    rbp,rcx
  401545:	movzx  ebx,BYTE PTR [rsi]
  401548:	test   bl,bl
  40154a:	je     0x401585
  40154c:	add    rsi,0x1
  401550:	test   edi,edi
  401552:	je     0x401620
  401558:	mov    rax,QWORD PTR [rip+0x60b39]        # 0x462098
  40155f:	lea    rdx,[rax+0x1]
  401563:	cmp    rdx,QWORD PTR [rip+0x60b36]        # 0x4620a0
  40156a:	ja     0x401680
  401570:	mov    QWORD PTR [rip+0x60b21],rdx        # 0x462098
  401577:	mov    BYTE PTR [rax],bl
  401579:	mov    edi,0x1
  40157e:	movzx  ebx,BYTE PTR [rsi]
  401581:	test   bl,bl
  401583:	jne    0x40154c
  401585:	mov    rax,QWORD PTR [rip+0x60b0c]        # 0x462098
  40158c:	lea    rdx,[rax+0x1]
  401590:	cmp    rdx,QWORD PTR [rip+0x60b09]        # 0x4620a0
  401597:	ja     0x4016d0
  40159d:	mov    QWORD PTR [rip+0x60af4],rdx        # 0x462098
  4015a4:	mov    BYTE PTR [rax],0x0
  4015a7:	mov    QWORD PTR [rbp+0x0],rsi
  4015ab:	mov    rax,QWORD PTR [rip+0x60ade]        # 0x462090
  4015b2:	mov    rdx,QWORD PTR [rip+0x60adf]        # 0x462098
  4015b9:	cmp    rdx,rax
  4015bc:	je     0x4016f1
  4015c2:	movsxd rcx,DWORD PTR [rip+0x60ae7]        # 0x4620b0
  4015c9:	mov    r8d,ecx
  4015cc:	add    rcx,rdx
  4015cf:	not    r8d
  4015d2:	movsxd r8,r8d
  4015d5:	mov    rdx,r8
  4015d8:	mov    r8,QWORD PTR [rip+0x60aa9]        # 0x462088
  4015df:	and    rdx,rcx
  4015e2:	mov    rcx,QWORD PTR [rip+0x60ab7]        # 0x4620a0
  4015e9:	mov    r9,rdx
  4015ec:	mov    QWORD PTR [rip+0x60aa5],rdx        # 0x462098
  4015f3:	sub    r9,r8
  4015f6:	mov    rdi,rcx
  4015f9:	sub    rdi,r8
  4015fc:	cmp    r9,rdi
  4015ff:	jle    0x40160b
  401601:	mov    QWORD PTR [rip+0x60a90],rcx        # 0x462098
  401608:	mov    rdx,rcx
  40160b:	mov    QWORD PTR [rip+0x60a7e],rdx        # 0x462090
  401612:	add    rsp,0x20
  401616:	pop    rbx
  401617:	pop    rsi
  401618:	pop    rdi
  401619:	pop    rbp
  40161a:	pop    r12
  40161c:	ret    
  40161d:	nop    DWORD PTR [rax]
  401620:	mov    edx,r12d
  401623:	xor    edx,0x1
  401626:	mov    eax,edx
  401628:	and    eax,0x1
  40162b:	cmp    bl,0x20
  40162e:	jne    0x401638
  401630:	test   al,al
  401632:	jne    0x401585
  401638:	cmp    bl,0x5c
  40163b:	jne    0x401650
  40163d:	test   al,al
  40163f:	je     0x401650
  401641:	xor    r12d,r12d
  401644:	mov    edi,0x1
  401649:	jmp    0x401545
  40164e:	xchg   ax,ax
  401650:	cmp    bl,0x27
  401653:	je     0x4016a1
  401655:	mov    rax,QWORD PTR [rip+0x60a3c]        # 0x462098
  40165c:	lea    rdx,[rax+0x1]
  401660:	cmp    rdx,QWORD PTR [rip+0x60a39]        # 0x4620a0
  401667:	ja     0x4016b0
  401669:	mov    QWORD PTR [rip+0x60a28],rdx        # 0x462098
  401670:	mov    BYTE PTR [rax],bl
  401672:	jmp    0x401545
  401677:	nop    WORD PTR [rax+rax*1+0x0]
  401680:	lea    rcx,[rip+0x609f9]        # 0x462080
  401687:	mov    edx,0x1
  40168c:	call   0x439960
  401691:	mov    rax,QWORD PTR [rip+0x60a00]        # 0x462098
  401698:	lea    rdx,[rax+0x1]
  40169c:	jmp    0x401570
  4016a1:	mov    r12d,edx
  4016a4:	jmp    0x401545
  4016a9:	nop    DWORD PTR [rax+0x0]
  4016b0:	lea    rcx,[rip+0x609c9]        # 0x462080
  4016b7:	mov    edx,0x1
  4016bc:	call   0x439960
  4016c1:	mov    rax,QWORD PTR [rip+0x609d0]        # 0x462098
  4016c8:	lea    rdx,[rax+0x1]
  4016cc:	jmp    0x401669
  4016ce:	xchg   ax,ax
  4016d0:	lea    rcx,[rip+0x609a9]        # 0x462080
  4016d7:	mov    edx,0x1
  4016dc:	call   0x439960
  4016e1:	mov    rax,QWORD PTR [rip+0x609b0]        # 0x462098
  4016e8:	lea    rdx,[rax+0x1]
  4016ec:	jmp    0x40159d
  4016f1:	or     BYTE PTR [rip+0x609d8],0x2        # 0x4620d0
  4016f8:	jmp    0x4015c2
  4016fd:	nop    DWORD PTR [rax]
  401700:	push   rbp
  401701:	push   rdi
  401702:	push   rsi
  401703:	push   rbx
  401704:	sub    rsp,0x28
  401708:	mov    rbp,QWORD PTR [rcx]
  40170b:	mov    edi,0xffff
  401710:	mov    rsi,rcx
  401713:	mov    QWORD PTR [rcx],0x0
  40171a:	test   rbp,rbp
  40171d:	je     0x4017b8
  401723:	cmp    BYTE PTR [rbp+0xc],0x5f
  401727:	mov    rbx,QWORD PTR [rbp+0x0]
  40172b:	lea    rcx,[rbp+0xc]
  40172f:	jne    0x4017c1
  401735:	lea    rax,[rbp+0xd]
  401739:	xor    edx,edx
  40173b:	nop    DWORD PTR [rax+rax*1+0x0]
  401740:	add    rax,0x1
  401744:	add    edx,0x1
  401747:	cmp    BYTE PTR [rax-0x1],0x5f
  40174b:	je     0x401740
  40174d:	add    edx,0xa
  401750:	movsxd rdx,edx
  401753:	add    rcx,rdx
  401756:	call   0x449538
  40175b:	mov    rdx,QWORD PTR [rsi]
  40175e:	test   eax,eax
  401760:	cmove  eax,edi
  401763:	mov    DWORD PTR [rbp+0x8],eax
  401766:	test   rdx,rdx
  401769:	je     0x4017c8
  40176b:	cmp    eax,DWORD PTR [rdx+0x8]
  40176e:	jle    0x401777
  401770:	jmp    0x4017c8
  401772:	cmp    DWORD PTR [rdx+0x8],eax
  401775:	jl     0x401782
  401777:	mov    rcx,rdx
  40177a:	mov    rdx,QWORD PTR [rdx]
  40177d:	test   rdx,rdx
  401780:	jne    0x401772
  401782:	test   rbx,rbx
  401785:	mov    QWORD PTR [rbp+0x0],rdx
  401789:	mov    QWORD PTR [rcx],rbp
  40178c:	mov    rbp,rbx
  40178f:	jne    0x401723
  401791:	mov    rdx,QWORD PTR [rsi]
  401794:	test   rdx,rdx
  401797:	je     0x4017b8
  401799:	mov    eax,DWORD PTR [rip+0x6095d]        # 0x4620fc
  40179f:	add    eax,0x1
  4017a2:	mov    DWORD PTR [rdx+0x8],eax
  4017a5:	mov    rdx,QWORD PTR [rdx]
  4017a8:	mov    ecx,eax
  4017aa:	add    eax,0x1
  4017ad:	test   rdx,rdx
  4017b0:	jne    0x4017a2
  4017b2:	mov    DWORD PTR [rip+0x60944],ecx        # 0x4620fc
  4017b8:	add    rsp,0x28
  4017bc:	pop    rbx
  4017bd:	pop    rsi
  4017be:	pop    rdi
  4017bf:	pop    rbp
  4017c0:	ret    
  4017c1:	mov    edx,0xa
  4017c6:	jmp    0x401753
  4017c8:	mov    rcx,rsi
  4017cb:	test   rbx,rbx
  4017ce:	mov    QWORD PTR [rbp+0x0],rdx
  4017d2:	mov    QWORD PTR [rcx],rbp
  4017d5:	mov    rbp,rbx
  4017d8:	jne    0x401723
  4017de:	jmp    0x401791
  4017e0:	push   rbp
  4017e1:	push   rdi
  4017e2:	push   rsi
  4017e3:	push   rbx
  4017e4:	sub    rsp,0x28
  4017e8:	mov    rdi,rcx
  4017eb:	mov    rcx,rdx
  4017ee:	mov    rsi,rdx
  4017f1:	call   0x4493c0
  4017f6:	lea    rcx,[rax+0x10]
  4017fa:	mov    edx,0x1
  4017ff:	call   0x43bb20
  401804:	lea    r8,[rax+0xc]
  401808:	mov    rdx,rsi
  40180b:	mov    rbp,rax
  40180e:	mov    rcx,r8
  401811:	call   0x4493d8
  401816:	cmp    QWORD PTR [rdi],0x0
  40181a:	mov    r8,rax
  40181d:	je     0x401893
  40181f:	mov    rax,QWORD PTR [rdi+0x8]
  401823:	mov    rbx,QWORD PTR [rdi]
  401826:	mov    QWORD PTR [rax],rbp
  401829:	lea    r8,[rbx+0xc]
  40182d:	jmp    0x401837
  40182f:	nop
  401830:	mov    rbx,QWORD PTR [rbx]
  401833:	lea    r8,[rbx+0xc]
  401837:	mov    rdx,r8
  40183a:	mov    rcx,rsi
  40183d:	call   0x4493e0
  401842:	test   eax,eax
  401844:	jne    0x401830
  401846:	cmp    rbp,rbx
  401849:	je     0x401870
  40184b:	mov    rax,QWORD PTR [rdi+0x8]
  40184f:	mov    rcx,rbp
  401852:	mov    QWORD PTR [rax],0x0
  401859:	add    rsp,0x28
  40185d:	pop    rbx
  40185e:	pop    rsi
  40185f:	pop    rdi
  401860:	pop    rbp
  401861:	jmp    0x4494c8
  401866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401870:	mov    eax,DWORD PTR [rip+0x60886]        # 0x4620fc
  401876:	add    DWORD PTR [rdi+0x10],0x1
  40187a:	mov    QWORD PTR [rdi+0x8],rbp
  40187e:	add    eax,0x1
  401881:	mov    DWORD PTR [rip+0x60875],eax        # 0x4620fc
  401887:	mov    DWORD PTR [rbp+0x8],eax
  40188a:	add    rsp,0x28
  40188e:	pop    rbx
  40188f:	pop    rsi
  401890:	pop    rdi
  401891:	pop    rbp
  401892:	ret    
  401893:	mov    QWORD PTR [rdi],rbp
  401896:	mov    rbx,rbp
  401899:	jmp    0x401837
  40189b:	nop    DWORD PTR [rax+rax*1+0x0]
  4018a0:	push   rdi
  4018a1:	push   rsi
  4018a2:	push   rbx
  4018a3:	sub    rsp,0x30
  4018a7:	test   r8,r8
  4018aa:	mov    rdi,rcx
  4018ad:	mov    rsi,rdx
  4018b0:	mov    rbx,r8
  4018b3:	je     0x4018dc
  4018b5:	mov    r9d,DWORD PTR [rbx+0x8]
  4018b9:	lea    rax,[rbx+0xc]
  4018bd:	lea    rdx,[rip+0x4a73c]        # 0x44c000
  4018c4:	mov    r8,rsi
  4018c7:	mov    rcx,rdi
  4018ca:	mov    QWORD PTR [rsp+0x20],rax
  4018cf:	call   0x4498d0
  4018d4:	mov    rbx,QWORD PTR [rbx]
  4018d7:	test   rbx,rbx
  4018da:	jne    0x4018b5
  4018dc:	add    rsp,0x30
  4018e0:	pop    rbx
  4018e1:	pop    rsi
  4018e2:	pop    rdi
  4018e3:	ret    
  4018e4:	xchg   ax,ax
  4018e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018f0:	push   rsi
  4018f1:	push   rbx
  4018f2:	sub    rsp,0x38
  4018f6:	lea    rbx,[rsp+0x58]
  4018fb:	mov    rsi,rcx
  4018fe:	mov    QWORD PTR [rsp+0x58],rdx
  401903:	mov    QWORD PTR [rsp+0x60],r8
  401908:	mov    QWORD PTR [rsp+0x68],r9
  40190d:	mov    QWORD PTR [rsp+0x28],rbx
  401912:	call   QWORD PTR [rip+0x62e1c]        # 0x464734
  401918:	lea    rcx,[rax+0x60]
  40191c:	mov    r8,rbx
  40191f:	mov    rdx,rsi
  401922:	call   0x43db30
  401927:	nop
  401928:	add    rsp,0x38
  40192c:	pop    rbx
  40192d:	pop    rsi
  40192e:	ret    
  40192f:	nop
  401930:	push   r13
  401932:	push   r12
  401934:	push   rbp
  401935:	push   rdi
  401936:	push   rsi
  401937:	push   rbx
  401938:	sub    rsp,0x28
  40193c:	mov    eax,DWORD PTR [rip+0x608b6]        # 0x4621f8
  401942:	mov    rsi,rcx
  401945:	test   eax,eax
  401947:	je     0x401c55
  40194d:	cmp    DWORD PTR [rip+0x6081c],0x0        # 0x462170
  401954:	mov    rcx,QWORD PTR [rip+0x6087d]        # 0x4621d8
  40195b:	setg   bpl
  40195f:	movzx  r12d,bpl
  401963:	call   0x4395f0
  401968:	mov    r13,rax
  40196b:	mov    rcx,rax
  40196e:	xchg   ax,ax
  401970:	mov    edx,0x2e
  401975:	call   0x4493e8
  40197a:	test   rax,rax
  40197d:	mov    rbx,rax
  401980:	je     0x401de8
  401986:	lea    rdx,[rip+0x4a98e]        # 0x44c31b
  40198d:	mov    r8d,0x3
  401993:	mov    rcx,rax
  401996:	call   0x4383d0
  40199b:	test   eax,eax
  40199d:	je     0x401fc5
  4019a3:	mov    rcx,rbx
  4019a6:	add    rcx,0x1
  4019aa:	jne    0x401970
  4019ac:	mov    rbx,rcx
  4019af:	sub    rbx,r13
  4019b2:	lea    rcx,[rbx+0x1]
  4019b6:	call   0x43baf0
  4019bb:	mov    r8,rbx
  4019be:	mov    rdi,rax
  4019c1:	mov    rdx,r13
  4019c4:	mov    rcx,rax
  4019c7:	call   0x4493a8
  4019cc:	mov    BYTE PTR [rdi+rbx*1],0x0
  4019d0:	movzx  r9d,BYTE PTR [rdi]
  4019d4:	test   r9b,r9b
  4019d7:	je     0x4019fb
  4019d9:	mov    r11,QWORD PTR [rip+0x59450]        # 0x45ae30
  4019e0:	mov    r10,rdi
  4019e3:	test   BYTE PTR [r11+r9*2],0x8c
  4019e8:	jne    0x4019ee
  4019ea:	mov    BYTE PTR [r10],0x5f
  4019ee:	add    r10,0x1
  4019f2:	movzx  r9d,BYTE PTR [r10]
  4019f6:	test   r9b,r9b
  4019f9:	jne    0x4019e3
  4019fb:	cmp    BYTE PTR [rip+0x606ef],0x0        # 0x4620f1
  401a02:	jne    0x401faa
  401a08:	lea    rcx,[rip+0x4a942]        # 0x44c351
  401a0f:	xor    r8d,r8d
  401a12:	mov    rdx,rdi
  401a15:	call   0x4381d0
  401a1a:	lea    rcx,[rip+0x4a93d]        # 0x44c35e
  401a21:	xor    r8d,r8d
  401a24:	mov    rdx,rdi
  401a27:	mov    QWORD PTR [rip+0x60792],rax        # 0x4621c0
  401a2e:	call   0x4381d0
  401a33:	mov    rcx,rdi
  401a36:	mov    QWORD PTR [rip+0x6077b],rax        # 0x4621b8
  401a3d:	call   0x4494c8
  401a42:	lea    rdx,[rip+0x4a922]        # 0x44c36b
  401a49:	mov    rcx,rsi
  401a4c:	call   0x4498d0
  401a51:	lea    rdx,[rip+0x4a926]        # 0x44c37e
  401a58:	mov    rcx,rsi
  401a5b:	call   0x4498d0
  401a60:	mov    r8,QWORD PTR [rip+0x60739]        # 0x4621a0
  401a67:	lea    rdx,[rip+0x4a5c4]        # 0x44c032
  401a6e:	mov    rcx,rsi
  401a71:	call   0x4018a0
  401a76:	test   bpl,bpl
  401a79:	jne    0x401e00
  401a7f:	mov    r8,QWORD PTR [rip+0x6073a]        # 0x4621c0
  401a86:	lea    rdx,[rip+0x4a90b]        # 0x44c398
  401a8d:	mov    rcx,rsi
  401a90:	call   0x4498d0
  401a95:	cmp    DWORD PTR [rip+0x60714],0x0        # 0x4621b0
  401a9c:	jle    0x4021fc
  401aa2:	lea    rdx,[rip+0x4a8ff]        # 0x44c3a8
  401aa9:	mov    rcx,rsi
  401aac:	call   0x4498d0
  401ab1:	mov    rbx,QWORD PTR [rip+0x606e8]        # 0x4621a0
  401ab8:	test   rbx,rbx
  401abb:	je     0x401aeb
  401abd:	nop    DWORD PTR [rax]
  401ac0:	mov    r9d,DWORD PTR [rbx+0x8]
  401ac4:	lea    r8,[rip+0x4a8fc]        # 0x44c3c7
  401acb:	lea    rdx,[rip+0x4a7b6]        # 0x44c288
  401ad2:	mov    rcx,rsi
  401ad5:	call   0x4498d0
  401ada:	mov    rbx,QWORD PTR [rbx]
  401add:	test   rbx,rbx
  401ae0:	jne    0x401ac0
  401ae2:	test   bpl,bpl
  401ae5:	jne    0x401f96
  401aeb:	lea    rdx,[rip+0x4a8d8]        # 0x44c3ca
  401af2:	mov    rcx,rsi
  401af5:	call   0x4498d0
  401afa:	lea    rdx,[rip+0x4a8ce]        # 0x44c3cf
  401b01:	mov    rcx,rsi
  401b04:	call   0x4498d0
  401b09:	lea    rdx,[rip+0x4a8cf]        # 0x44c3df
  401b10:	mov    rcx,rsi
  401b13:	call   0x4498d0
  401b18:	mov    r8d,DWORD PTR [rip+0x60691]        # 0x4621b0
  401b1f:	lea    rdx,[rip+0x4a8d5]        # 0x44c3fb
  401b26:	mov    rcx,rsi
  401b29:	add    r8d,r12d
  401b2c:	call   0x4498d0
  401b31:	lea    rdx,[rip+0x4a8d5]        # 0x44c40d
  401b38:	mov    rcx,rsi
  401b3b:	call   0x4498d0
  401b40:	lea    rdx,[rip+0x4a8ef]        # 0x44c436
  401b47:	mov    rcx,rsi
  401b4a:	call   0x4498d0
  401b4f:	mov    r8,QWORD PTR [rip+0x6062a]        # 0x462180
  401b56:	lea    rdx,[rip+0x4a4d5]        # 0x44c032
  401b5d:	mov    rcx,rsi
  401b60:	call   0x4018a0
  401b65:	mov    r8,QWORD PTR [rip+0x6064c]        # 0x4621b8
  401b6c:	lea    rdx,[rip+0x4a825]        # 0x44c398
  401b73:	mov    rcx,rsi
  401b76:	call   0x4498d0
  401b7b:	cmp    DWORD PTR [rip+0x6060e],0x0        # 0x462190
  401b82:	jg     0x401bb2
  401b84:	test   bpl,bpl
  401b87:	jne    0x401bb2
  401b89:	lea    rdx,[rip+0x4a8a6]        # 0x44c436
  401b90:	mov    rcx,rsi
  401b93:	call   0x4498d0
  401b98:	cmp    DWORD PTR [rip+0x60659],0x0        # 0x4621f8
  401b9f:	jne    0x401dc2
  401ba5:	add    rsp,0x28
  401ba9:	pop    rbx
  401baa:	pop    rsi
  401bab:	pop    rdi
  401bac:	pop    rbp
  401bad:	pop    r12
  401baf:	pop    r13
  401bb1:	ret    
  401bb2:	lea    rdx,[rip+0x4a887]        # 0x44c440
  401bb9:	mov    rcx,rsi
  401bbc:	call   0x4498d0
  401bc1:	mov    rbx,QWORD PTR [rip+0x605b8]        # 0x462180
  401bc8:	test   rbx,rbx
  401bcb:	je     0x401bf2
  401bcd:	nop    DWORD PTR [rax]
  401bd0:	mov    r9d,DWORD PTR [rbx+0x8]
  401bd4:	lea    r8,[rip+0x4a7ec]        # 0x44c3c7
  401bdb:	lea    rdx,[rip+0x4a6a6]        # 0x44c288
  401be2:	mov    rcx,rsi
  401be5:	call   0x4498d0
  401bea:	mov    rbx,QWORD PTR [rbx]
  401bed:	test   rbx,rbx
  401bf0:	jne    0x401bd0
  401bf2:	test   bpl,bpl
  401bf5:	jne    0x4021e8
  401bfb:	lea    rdx,[rip+0x4a7c8]        # 0x44c3ca
  401c02:	mov    rcx,rsi
  401c05:	call   0x4498d0
  401c0a:	lea    rdx,[rip+0x4a7be]        # 0x44c3cf
  401c11:	mov    rcx,rsi
  401c14:	call   0x4498d0
  401c19:	lea    rdx,[rip+0x4a83f]        # 0x44c45f
  401c20:	mov    rcx,rsi
  401c23:	call   0x4498d0
  401c28:	lea    rdx,[rip+0x4a84c]        # 0x44c47b
  401c2f:	mov    rcx,rsi
  401c32:	call   0x4498d0
  401c37:	mov    r8d,DWORD PTR [rip+0x60552]        # 0x462190
  401c3e:	lea    rdx,[rip+0x4a843]        # 0x44c488
  401c45:	mov    rcx,rsi
  401c48:	add    r8d,r12d
  401c4b:	call   0x4498d0
  401c50:	jmp    0x401b89
  401c55:	cmp    DWORD PTR [rip+0x60514],0x0        # 0x462170
  401c5c:	lea    rdx,[rip+0x4a3b4]        # 0x44c017
  401c63:	setg   dil
  401c67:	call   0x4498d0
  401c6c:	mov    r8,QWORD PTR [rip+0x6052d]        # 0x4621a0
  401c73:	lea    rdx,[rip+0x4a3b8]        # 0x44c032
  401c7a:	mov    rcx,rsi
  401c7d:	movzx  ebp,dil
  401c81:	call   0x4018a0
  401c86:	test   dil,dil
  401c89:	jne    0x401fce
  401c8f:	lea    rdx,[rip+0x4a5ba]        # 0x44c250
  401c96:	mov    rcx,rsi
  401c99:	call   0x4498d0
  401c9e:	mov    r8d,DWORD PTR [rip+0x6050b]        # 0x4621b0
  401ca5:	lea    rdx,[rip+0x4a5c5]        # 0x44c271
  401cac:	mov    rcx,rsi
  401caf:	add    r8d,ebp
  401cb2:	call   0x4498d0
  401cb7:	mov    rbx,QWORD PTR [rip+0x604e2]        # 0x4621a0
  401cbe:	test   rbx,rbx
  401cc1:	je     0x401cee
  401cc3:	mov    r9d,DWORD PTR [rbx+0x8]
  401cc7:	lea    r8,[rip+0x4a5fb]        # 0x44c2c9
  401cce:	lea    rdx,[rip+0x4a5b3]        # 0x44c288
  401cd5:	mov    rcx,rsi
  401cd8:	call   0x4498d0
  401cdd:	mov    rbx,QWORD PTR [rbx]
  401ce0:	test   rbx,rbx
  401ce3:	jne    0x401cc3
  401ce5:	test   dil,dil
  401ce8:	jne    0x402168
  401cee:	lea    rdx,[rip+0x4a5a8]        # 0x44c29d
  401cf5:	mov    rcx,rsi
  401cf8:	call   0x4498d0
  401cfd:	mov    r8,QWORD PTR [rip+0x6047c]        # 0x462180
  401d04:	lea    rdx,[rip+0x4a327]        # 0x44c032
  401d0b:	mov    rcx,rsi
  401d0e:	call   0x4018a0
  401d13:	lea    rdx,[rip+0x4a58e]        # 0x44c2a8
  401d1a:	mov    rcx,rsi
  401d1d:	call   0x4498d0
  401d22:	mov    r8d,DWORD PTR [rip+0x60467]        # 0x462190
  401d29:	lea    rdx,[rip+0x4a541]        # 0x44c271
  401d30:	mov    rcx,rsi
  401d33:	add    r8d,ebp
  401d36:	call   0x4498d0
  401d3b:	mov    rbx,QWORD PTR [rip+0x6043e]        # 0x462180
  401d42:	test   rbx,rbx
  401d45:	je     0x401d7b
  401d47:	nop    WORD PTR [rax+rax*1+0x0]
  401d50:	mov    r9d,DWORD PTR [rbx+0x8]
  401d54:	lea    r8,[rip+0x4a56e]        # 0x44c2c9
  401d5b:	lea    rdx,[rip+0x4a526]        # 0x44c288
  401d62:	mov    rcx,rsi
  401d65:	call   0x4498d0
  401d6a:	mov    rbx,QWORD PTR [rbx]
  401d6d:	test   rbx,rbx
  401d70:	jne    0x401d50
  401d72:	test   dil,dil
  401d75:	jne    0x4021d4
  401d7b:	lea    rdx,[rip+0x4a51b]        # 0x44c29d
  401d82:	mov    rcx,rsi
  401d85:	call   0x4498d0
  401d8a:	lea    r8,[rip+0x4a549]        # 0x44c2da
  401d91:	lea    rdx,[rip+0x4a549]        # 0x44c2e1
  401d98:	mov    rcx,rsi
  401d9b:	call   0x4498d0
  401da0:	lea    r8,[rip+0x4a533]        # 0x44c2da
  401da7:	lea    rdx,[rip+0x4a54a]        # 0x44c2f8
  401dae:	mov    rcx,rsi
  401db1:	add    rsp,0x28
  401db5:	pop    rbx
  401db6:	pop    rsi
  401db7:	pop    rdi
  401db8:	pop    rbp
  401db9:	pop    r12
  401dbb:	pop    r13
  401dbd:	jmp    0x4498d0
  401dc2:	mov    r8,QWORD PTR [rip+0x603f7]        # 0x4621c0
  401dc9:	lea    rdx,[rip+0x4a6e0]        # 0x44c4b0
  401dd0:	mov    rcx,rsi
  401dd3:	call   0x4498d0
  401dd8:	mov    r8,QWORD PTR [rip+0x603d9]        # 0x4621b8
  401ddf:	lea    rdx,[rip+0x4a6ea]        # 0x44c4d0
  401de6:	jmp    0x401dae
  401de8:	xor    eax,eax
  401dea:	or     rcx,0xffffffffffffffff
  401dee:	mov    rdi,r13
  401df1:	repnz scas al,BYTE PTR es:[rdi]
  401df3:	not    rcx
  401df6:	lea    rcx,[r13+rcx*1-0x1]
  401dfb:	jmp    0x4019ac
  401e00:	mov    r8,QWORD PTR [rip+0x60359]        # 0x462160
  401e07:	lea    rdx,[rip+0x4a235]        # 0x44c043
  401e0e:	mov    rcx,rsi
  401e11:	call   0x4018a0
  401e16:	lea    rdx,[rip+0x4a23b]        # 0x44c058
  401e1d:	mov    rcx,rsi
  401e20:	call   0x4498d0
  401e25:	mov    rbx,QWORD PTR [rip+0x60334]        # 0x462160
  401e2c:	test   rbx,rbx
  401e2f:	je     0x401e53
  401e31:	mov    r9d,DWORD PTR [rbx+0x8]
  401e35:	lea    r8,[rip+0x4a448]        # 0x44c284
  401e3c:	lea    rdx,[rip+0x4a445]        # 0x44c288
  401e43:	mov    rcx,rsi
  401e46:	call   0x4498d0
  401e4b:	mov    rbx,QWORD PTR [rbx]
  401e4e:	test   rbx,rbx
  401e51:	jne    0x401e31
  401e53:	lea    rdx,[rip+0x4a21f]        # 0x44c079
  401e5a:	mov    rcx,rsi
  401e5d:	call   0x4498d0
  401e62:	lea    rdx,[rip+0x4a217]        # 0x44c080
  401e69:	mov    rcx,rsi
  401e6c:	call   0x4498d0
  401e71:	lea    rdx,[rip+0x4a219]        # 0x44c091
  401e78:	mov    rcx,rsi
  401e7b:	call   0x4498d0
  401e80:	lea    rdx,[rip+0x4a21d]        # 0x44c0a4
  401e87:	mov    rcx,rsi
  401e8a:	call   0x4498d0
  401e8f:	lea    rdx,[rip+0x4a21f]        # 0x44c0b5
  401e96:	mov    rcx,rsi
  401e99:	call   0x4498d0
  401e9e:	lea    rdx,[rip+0x4a224]        # 0x44c0c9
  401ea5:	mov    rcx,rsi
  401ea8:	call   0x4498d0
  401ead:	lea    rdx,[rip+0x4a229]        # 0x44c0dd
  401eb4:	mov    rcx,rsi
  401eb7:	call   0x4498d0
  401ebc:	lea    rdx,[rip+0x4a232]        # 0x44c0f5
  401ec3:	mov    rcx,rsi
  401ec6:	call   0x4498d0
  401ecb:	lea    rdx,[rip+0x4a23b]        # 0x44c10d
  401ed2:	mov    rcx,rsi
  401ed5:	call   0x4498d0
  401eda:	lea    rdx,[rip+0x4a237]        # 0x44c118
  401ee1:	mov    rcx,rsi
  401ee4:	call   0x4498d0
  401ee9:	lea    rdx,[rip+0x4a270]        # 0x44c160
  401ef0:	mov    rcx,rsi
  401ef3:	call   0x4498d0
  401ef8:	lea    rdx,[rip+0x4a291]        # 0x44c190
  401eff:	mov    rcx,rsi
  401f02:	call   0x4498d0
  401f07:	lea    rdx,[rip+0x4a29e]        # 0x44c1ac
  401f0e:	mov    rcx,rsi
  401f11:	call   0x4498d0
  401f16:	lea    rdx,[rip+0x4a2ab]        # 0x44c1c8
  401f1d:	mov    rcx,rsi
  401f20:	call   0x4498d0
  401f25:	lea    rdx,[rip+0x4a2ce]        # 0x44c1fa
  401f2c:	mov    rcx,rsi
  401f2f:	call   0x4498d0
  401f34:	lea    rdx,[rip+0x4a2c3]        # 0x44c1fe
  401f3b:	mov    rcx,rsi
  401f3e:	call   0x4498d0
  401f43:	lea    rdx,[rip+0x4a2d6]        # 0x44c220
  401f4a:	mov    rcx,rsi
  401f4d:	call   0x4498d0
  401f52:	lea    rdx,[rip+0x4a2a1]        # 0x44c1fa
  401f59:	mov    rcx,rsi
  401f5c:	call   0x4498d0
  401f61:	mov    r8,QWORD PTR [rip+0x60258]        # 0x4621c0
  401f68:	lea    rdx,[rip+0x4a429]        # 0x44c398
  401f6f:	mov    rcx,rsi
  401f72:	call   0x4498d0
  401f77:	lea    rdx,[rip+0x4a42a]        # 0x44c3a8
  401f7e:	mov    rcx,rsi
  401f81:	call   0x4498d0
  401f86:	mov    rbx,QWORD PTR [rip+0x60213]        # 0x4621a0
  401f8d:	test   rbx,rbx
  401f90:	jne    0x401ac0
  401f96:	lea    rdx,[rip+0x4a2f3]        # 0x44c290
  401f9d:	mov    rcx,rsi
  401fa0:	call   0x4498d0
  401fa5:	jmp    0x401aeb
  401faa:	mov    rdx,QWORD PTR [rip+0x60227]        # 0x4621d8
  401fb1:	lea    rcx,[rip+0x4a368]        # 0x44c320
  401fb8:	mov    r8,rdi
  401fbb:	call   0x4018f0
  401fc0:	jmp    0x401a08
  401fc5:	lea    rcx,[rbx+0x3]
  401fc9:	jmp    0x4019ac
  401fce:	mov    r8,QWORD PTR [rip+0x6018b]        # 0x462160
  401fd5:	lea    rdx,[rip+0x4a067]        # 0x44c043
  401fdc:	mov    rcx,rsi
  401fdf:	call   0x4018a0
  401fe4:	lea    rdx,[rip+0x4a06d]        # 0x44c058
  401feb:	mov    rcx,rsi
  401fee:	call   0x4498d0
  401ff3:	mov    rbx,QWORD PTR [rip+0x60166]        # 0x462160
  401ffa:	test   rbx,rbx
  401ffd:	je     0x402022
  401fff:	nop
  402000:	mov    r9d,DWORD PTR [rbx+0x8]
  402004:	lea    r8,[rip+0x4a279]        # 0x44c284
  40200b:	lea    rdx,[rip+0x4a276]        # 0x44c288
  402012:	mov    rcx,rsi
  402015:	call   0x4498d0
  40201a:	mov    rbx,QWORD PTR [rbx]
  40201d:	test   rbx,rbx
  402020:	jne    0x402000
  402022:	lea    rdx,[rip+0x4a050]        # 0x44c079
  402029:	mov    rcx,rsi
  40202c:	call   0x4498d0
  402031:	lea    rdx,[rip+0x4a048]        # 0x44c080
  402038:	mov    rcx,rsi
  40203b:	call   0x4498d0
  402040:	lea    rdx,[rip+0x4a04a]        # 0x44c091
  402047:	mov    rcx,rsi
  40204a:	call   0x4498d0
  40204f:	lea    rdx,[rip+0x4a04e]        # 0x44c0a4
  402056:	mov    rcx,rsi
  402059:	call   0x4498d0
  40205e:	lea    rdx,[rip+0x4a050]        # 0x44c0b5
  402065:	mov    rcx,rsi
  402068:	call   0x4498d0
  40206d:	lea    rdx,[rip+0x4a055]        # 0x44c0c9
  402074:	mov    rcx,rsi
  402077:	call   0x4498d0
  40207c:	lea    rdx,[rip+0x4a05a]        # 0x44c0dd
  402083:	mov    rcx,rsi
  402086:	call   0x4498d0
  40208b:	lea    rdx,[rip+0x4a063]        # 0x44c0f5
  402092:	mov    rcx,rsi
  402095:	call   0x4498d0
  40209a:	lea    rdx,[rip+0x4a06c]        # 0x44c10d
  4020a1:	mov    rcx,rsi
  4020a4:	call   0x4498d0
  4020a9:	lea    rdx,[rip+0x4a068]        # 0x44c118
  4020b0:	mov    rcx,rsi
  4020b3:	call   0x4498d0
  4020b8:	lea    rdx,[rip+0x4a0a1]        # 0x44c160
  4020bf:	mov    rcx,rsi
  4020c2:	call   0x4498d0
  4020c7:	lea    rdx,[rip+0x4a0c2]        # 0x44c190
  4020ce:	mov    rcx,rsi
  4020d1:	call   0x4498d0
  4020d6:	lea    rdx,[rip+0x4a0cf]        # 0x44c1ac
  4020dd:	mov    rcx,rsi
  4020e0:	call   0x4498d0
  4020e5:	lea    rdx,[rip+0x4a0dc]        # 0x44c1c8
  4020ec:	mov    rcx,rsi
  4020ef:	call   0x4498d0
  4020f4:	lea    rdx,[rip+0x4a0ff]        # 0x44c1fa
  4020fb:	mov    rcx,rsi
  4020fe:	call   0x4498d0
  402103:	lea    rdx,[rip+0x4a0f4]        # 0x44c1fe
  40210a:	mov    rcx,rsi
  40210d:	call   0x4498d0
  402112:	lea    rdx,[rip+0x4a107]        # 0x44c220
  402119:	mov    rcx,rsi
  40211c:	call   0x4498d0
  402121:	lea    rdx,[rip+0x4a0d2]        # 0x44c1fa
  402128:	mov    rcx,rsi
  40212b:	call   0x4498d0
  402130:	lea    rdx,[rip+0x4a119]        # 0x44c250
  402137:	mov    rcx,rsi
  40213a:	call   0x4498d0
  40213f:	mov    r8d,DWORD PTR [rip+0x6006a]        # 0x4621b0
  402146:	lea    rdx,[rip+0x4a124]        # 0x44c271
  40214d:	mov    rcx,rsi
  402150:	add    r8d,ebp
  402153:	call   0x4498d0
  402158:	mov    rbx,QWORD PTR [rip+0x60041]        # 0x4621a0
  40215f:	test   rbx,rbx
  402162:	jne    0x401cc3
  402168:	lea    rdx,[rip+0x4a121]        # 0x44c290
  40216f:	mov    rcx,rsi
  402172:	call   0x4498d0
  402177:	lea    rdx,[rip+0x4a11f]        # 0x44c29d
  40217e:	mov    rcx,rsi
  402181:	call   0x4498d0
  402186:	mov    r8,QWORD PTR [rip+0x5fff3]        # 0x462180
  40218d:	lea    rdx,[rip+0x49e9e]        # 0x44c032
  402194:	mov    rcx,rsi
  402197:	call   0x4018a0
  40219c:	lea    rdx,[rip+0x4a105]        # 0x44c2a8
  4021a3:	mov    rcx,rsi
  4021a6:	call   0x4498d0
  4021ab:	mov    r8d,DWORD PTR [rip+0x5ffde]        # 0x462190
  4021b2:	lea    rdx,[rip+0x4a0b8]        # 0x44c271
  4021b9:	mov    rcx,rsi
  4021bc:	add    r8d,ebp
  4021bf:	call   0x4498d0
  4021c4:	mov    rbx,QWORD PTR [rip+0x5ffb5]        # 0x462180
  4021cb:	test   rbx,rbx
  4021ce:	jne    0x401d50
  4021d4:	lea    rdx,[rip+0x4a0f0]        # 0x44c2cb
  4021db:	mov    rcx,rsi
  4021de:	call   0x4498d0
  4021e3:	jmp    0x401d7b
  4021e8:	lea    rdx,[rip+0x4a0dc]        # 0x44c2cb
  4021ef:	mov    rcx,rsi
  4021f2:	call   0x4498d0
  4021f7:	jmp    0x401bfb
  4021fc:	lea    rdx,[rip+0x4a228]        # 0x44c42b
  402203:	mov    rcx,rsi
  402206:	call   0x4498d0
  40220b:	jmp    0x401b40
  402210:	cmp    BYTE PTR [rip+0x5feda],0x0        # 0x4620f1
  402217:	jne    0x402240
  402219:	cmp    rcx,QWORD PTR [rip+0x5ffb8]        # 0x4621d8
  402220:	je     0x402230
  402222:	jmp    0x43ba00
  402227:	nop    WORD PTR [rax+rax*1+0x0]
  402230:	cmp    BYTE PTR [rip+0x5fe09],0x0        # 0x462040
  402237:	jne    0x402222
  402239:	repz ret 
  40223b:	nop    DWORD PTR [rax+rax*1+0x0]
  402240:	mov    rdx,rcx
  402243:	lea    rcx,[rip+0x4a2a5]        # 0x44c4ef
  40224a:	jmp    0x4018f0
  40224f:	nop
  402250:	push   rsi
  402251:	push   rbx
  402252:	sub    rsp,0x28
  402256:	mov    esi,ecx
  402258:	mov    rcx,QWORD PTR [rip+0x5ff91]        # 0x4621f0
  40225f:	test   rcx,rcx
  402262:	je     0x40226d
  402264:	cmp    BYTE PTR [rcx],0x0
  402267:	jne    0x402300
  40226d:	mov    rcx,QWORD PTR [rip+0x5ff74]        # 0x4621e8
  402274:	test   rcx,rcx
  402277:	je     0x402282
  402279:	cmp    BYTE PTR [rcx],0x0
  40227c:	jne    0x402330
  402282:	mov    rcx,QWORD PTR [rip+0x5fe5f]        # 0x4620e8
  402289:	test   rcx,rcx
  40228c:	je     0x402297
  40228e:	cmp    BYTE PTR [rcx],0x0
  402291:	jne    0x402320
  402297:	mov    rcx,QWORD PTR [rip+0x5fe42]        # 0x4620e0
  40229e:	test   rcx,rcx
  4022a1:	je     0x4022a8
  4022a3:	cmp    BYTE PTR [rcx],0x0
  4022a6:	jne    0x402310
  4022a8:	mov    rbx,QWORD PTR [rip+0x5ff31]        # 0x4621e0
  4022af:	test   rbx,rbx
  4022b2:	je     0x4022d1
  4022b4:	mov    rcx,QWORD PTR [rbx]
  4022b7:	test   rcx,rcx
  4022ba:	je     0x4022d1
  4022bc:	nop    DWORD PTR [rax+0x0]
  4022c0:	add    rbx,0x8
  4022c4:	call   0x402210
  4022c9:	mov    rcx,QWORD PTR [rbx]
  4022cc:	test   rcx,rcx
  4022cf:	jne    0x4022c0
  4022d1:	mov    rcx,QWORD PTR [rip+0x5fe78]        # 0x462150
  4022d8:	test   rcx,rcx
  4022db:	je     0x4022e2
  4022dd:	call   0x402210
  4022e2:	mov    ecx,esi
  4022e4:	xor    edx,edx
  4022e6:	call   0x449408
  4022eb:	mov    ecx,esi
  4022ed:	add    rsp,0x28
  4022f1:	pop    rbx
  4022f2:	pop    rsi
  4022f3:	jmp    0x449428
  4022f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402300:	call   0x402210
  402305:	jmp    0x40226d
  40230a:	nop    WORD PTR [rax+rax*1+0x0]
  402310:	call   0x402210
  402315:	jmp    0x4022a8
  402317:	nop    WORD PTR [rax+rax*1+0x0]
  402320:	call   0x402210
  402325:	jmp    0x402297
  40232a:	nop    WORD PTR [rax+rax*1+0x0]
  402330:	call   0x402210
  402335:	jmp    0x402282
  40233a:	nop    WORD PTR [rax+rax*1+0x0]
  402340:	push   rsi
  402341:	push   rbx
  402342:	sub    rsp,0x38
  402346:	lea    rbx,[rsp+0x58]
  40234b:	mov    rsi,rcx
  40234e:	mov    QWORD PTR [rsp+0x58],rdx
  402353:	mov    QWORD PTR [rsp+0x60],r8
  402358:	mov    QWORD PTR [rsp+0x68],r9
  40235d:	mov    QWORD PTR [rsp+0x28],rbx
  402362:	call   QWORD PTR [rip+0x623cc]        # 0x464734
  402368:	lea    rcx,[rax+0x60]
  40236c:	mov    r8,rbx
  40236f:	mov    rdx,rsi
  402372:	call   0x43db30
  402377:	nop
  402378:	add    rsp,0x38
  40237c:	pop    rbx
  40237d:	pop    rsi
  40237e:	ret    
  40237f:	nop
  402380:	sub    rsp,0x28
  402384:	mov    edx,0x4
  402389:	call   0x4492e0
  40238e:	test   eax,eax
  402390:	sete   al
  402393:	movzx  eax,al
  402396:	add    rsp,0x28
  40239a:	ret    
  40239b:	nop    DWORD PTR [rax+rax*1+0x0]
  4023a0:	push   r12
  4023a2:	push   rbp
  4023a3:	push   rdi
  4023a4:	push   rsi
  4023a5:	push   rbx
  4023a6:	sub    rsp,0x20
  4023aa:	mov    rdi,rdx
  4023ad:	lea    rdx,[rip+0x4a149]        # 0x44c4fd
  4023b4:	call   0x4494f0
  4023b9:	test   rax,rax
  4023bc:	mov    rsi,rax
  4023bf:	je     0x4025c6
  4023c5:	mov    rbp,QWORD PTR [rip+0x58a64]        # 0x45ae30
  4023cc:	nop    DWORD PTR [rax+0x0]
  4023d0:	mov    rcx,rsi
  4023d3:	call   0x4494a0
  4023d8:	cmp    eax,0xffffffff
  4023db:	mov    ebx,eax
  4023dd:	je     0x402503
  4023e3:	movzx  eax,al
  4023e6:	test   WORD PTR [rbp+rax*2+0x0],0x204
  4023ed:	jne    0x402530
  4023f3:	cmp    ebx,0x24
  4023f6:	je     0x402530
  4023fc:	cmp    ebx,0x2e
  4023ff:	je     0x402530
  402405:	mov    rax,QWORD PTR [rip+0x5fc8c]        # 0x462098
  40240c:	cmp    DWORD PTR [rip+0x5fc7e],eax        # 0x462090
  402412:	je     0x4024e6
  402418:	lea    rdx,[rax+0x1]
  40241c:	cmp    rdx,QWORD PTR [rip+0x5fc7d]        # 0x4620a0
  402423:	ja     0x402581
  402429:	mov    QWORD PTR [rip+0x5fc68],rdx        # 0x462098
  402430:	mov    BYTE PTR [rax],0x0
  402433:	mov    r12,QWORD PTR [rip+0x5fc56]        # 0x462090
  40243a:	mov    r8,QWORD PTR [rip+0x5fc57]        # 0x462098
  402441:	cmp    r8,r12
  402444:	je     0x4025a2
  40244a:	movsxd r9,DWORD PTR [rip+0x5fc5f]        # 0x4620b0
  402451:	mov    rdx,QWORD PTR [rip+0x5fc30]        # 0x462088
  402458:	mov    eax,r9d
  40245b:	add    r9,r8
  40245e:	not    eax
  402460:	cdqe   
  402462:	and    rax,r9
  402465:	mov    r8,rax
  402468:	mov    QWORD PTR [rip+0x5fc29],rax        # 0x462098
  40246f:	mov    rax,QWORD PTR [rip+0x5fc2a]        # 0x4620a0
  402476:	mov    rcx,r8
  402479:	sub    rcx,rdx
  40247c:	mov    r10,rax
  40247f:	sub    r10,rdx
  402482:	cmp    rcx,r10
  402485:	jle    0x402491
  402487:	mov    QWORD PTR [rip+0x5fc0a],rax        # 0x462098
  40248e:	mov    r8,rax
  402491:	mov    QWORD PTR [rip+0x5fbf8],r8        # 0x462090
  402498:	cmp    BYTE PTR [r12],0x2e
  40249d:	je     0x4025b0
  4024a3:	mov    rdx,rdi
  4024a6:	mov    rcx,r12
  4024a9:	call   0x4494d8
  4024ae:	mov    rcx,rdi
  4024b1:	call   0x449500
  4024b6:	mov    rdx,QWORD PTR [rip+0x5fb8b]        # 0x462048
  4024bd:	cmp    rdx,QWORD PTR [rip+0x5fbc4]        # 0x462088
  4024c4:	jbe    0x402552
  4024ca:	cmp    rdx,QWORD PTR [rip+0x5fbcf]        # 0x4620a0
  4024d1:	jae    0x402552
  4024d3:	mov    QWORD PTR [rip+0x5fbb6],rdx        # 0x462090
  4024da:	mov    QWORD PTR [rip+0x5fbb7],rdx        # 0x462098
  4024e1:	cmp    ebx,0xffffffff
  4024e4:	je     0x402516
  4024e6:	mov    ecx,ebx
  4024e8:	mov    rdx,rdi
  4024eb:	call   0x449438
  4024f0:	mov    rcx,rsi
  4024f3:	call   0x4494a0
  4024f8:	cmp    eax,0xffffffff
  4024fb:	mov    ebx,eax
  4024fd:	jne    0x4023e3
  402503:	mov    rax,QWORD PTR [rip+0x5fb8e]        # 0x462098
  40250a:	cmp    DWORD PTR [rip+0x5fb80],eax        # 0x462090
  402510:	jne    0x402418
  402516:	mov    rcx,rsi
  402519:	add    rsp,0x20
  40251d:	pop    rbx
  40251e:	pop    rsi
  40251f:	pop    rdi
  402520:	pop    rbp
  402521:	pop    r12
  402523:	jmp    0x449518
  402528:	nop    DWORD PTR [rax+rax*1+0x0]
  402530:	mov    rax,QWORD PTR [rip+0x5fb61]        # 0x462098
  402537:	lea    rdx,[rax+0x1]
  40253b:	cmp    rdx,QWORD PTR [rip+0x5fb5e]        # 0x4620a0
  402542:	ja     0x402563
  402544:	mov    QWORD PTR [rip+0x5fb4d],rdx        # 0x462098
  40254b:	mov    BYTE PTR [rax],bl
  40254d:	jmp    0x4023d0
  402552:	lea    rcx,[rip+0x5fb27]        # 0x462080
  402559:	call   0x439b90
  40255e:	jmp    0x4024e1
  402563:	lea    rcx,[rip+0x5fb16]        # 0x462080
  40256a:	mov    edx,0x1
  40256f:	call   0x439960
  402574:	mov    rax,QWORD PTR [rip+0x5fb1d]        # 0x462098
  40257b:	lea    rdx,[rax+0x1]
  40257f:	jmp    0x402544
  402581:	lea    rcx,[rip+0x5faf8]        # 0x462080
  402588:	mov    edx,0x1
  40258d:	call   0x439960
  402592:	mov    rax,QWORD PTR [rip+0x5faff]        # 0x462098
  402599:	lea    rdx,[rax+0x1]
  40259d:	jmp    0x402429
  4025a2:	or     BYTE PTR [rip+0x5fb27],0x2        # 0x4620d0
  4025a9:	jmp    0x40244a
  4025ae:	xchg   ax,ax
  4025b0:	mov    rdx,rdi
  4025b3:	mov    ecx,0x2e
  4025b8:	add    r12,0x1
  4025bc:	call   0x449438
  4025c1:	jmp    0x4024a3
  4025c6:	add    rsp,0x20
  4025ca:	pop    rbx
  4025cb:	pop    rsi
  4025cc:	pop    rdi
  4025cd:	pop    rbp
  4025ce:	pop    r12
  4025d0:	ret    
  4025d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4025d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025e0:	push   rbx
  4025e1:	sub    rsp,0x20
  4025e5:	mov    rcx,QWORD PTR [rip+0x5fc04]        # 0x4621f0
  4025ec:	test   rcx,rcx
  4025ef:	je     0x4025f6
  4025f1:	cmp    BYTE PTR [rcx],0x0
  4025f4:	jne    0x402670
  4025f6:	mov    rcx,QWORD PTR [rip+0x5fbeb]        # 0x4621e8
  4025fd:	test   rcx,rcx
  402600:	je     0x40260b
  402602:	cmp    BYTE PTR [rcx],0x0
  402605:	jne    0x4026e0
  40260b:	mov    rbx,QWORD PTR [rip+0x5fbce]        # 0x4621e0
  402612:	test   rbx,rbx
  402615:	je     0x402631
  402617:	mov    rcx,QWORD PTR [rbx]
  40261a:	test   rcx,rcx
  40261d:	je     0x402631
  40261f:	nop
  402620:	add    rbx,0x8
  402624:	call   0x402210
  402629:	mov    rcx,QWORD PTR [rbx]
  40262c:	test   rcx,rcx
  40262f:	jne    0x402620
  402631:	mov    rax,QWORD PTR [rip+0x5fab0]        # 0x4620e8
  402638:	test   rax,rax
  40263b:	je     0x402642
  40263d:	cmp    BYTE PTR [rax],0x0
  402640:	jne    0x4026b4
  402642:	mov    rax,QWORD PTR [rip+0x5fa97]        # 0x4620e0
  402649:	test   rax,rax
  40264c:	je     0x402653
  40264e:	cmp    BYTE PTR [rax],0x0
  402651:	jne    0x402680
  402653:	mov    rcx,QWORD PTR [rip+0x5faf6]        # 0x462150
  40265a:	test   rcx,rcx
  40265d:	je     0x4026ae
  40265f:	add    rsp,0x20
  402663:	pop    rbx
  402664:	jmp    0x402210
  402669:	nop    DWORD PTR [rax+0x0]
  402670:	call   0x402210
  402675:	jmp    0x4025f6
  40267a:	nop    WORD PTR [rax+rax*1+0x0]
  402680:	call   QWORD PTR [rip+0x620ae]        # 0x464734
  402686:	mov    rcx,QWORD PTR [rip+0x5fa53]        # 0x4620e0
  40268d:	lea    rdx,[rax+0x60]
  402691:	call   0x4023a0
  402696:	mov    rcx,QWORD PTR [rip+0x5fa43]        # 0x4620e0
  40269d:	call   0x402210
  4026a2:	mov    rcx,QWORD PTR [rip+0x5faa7]        # 0x462150
  4026a9:	test   rcx,rcx
  4026ac:	jne    0x40265f
  4026ae:	add    rsp,0x20
  4026b2:	pop    rbx
  4026b3:	ret    
  4026b4:	call   QWORD PTR [rip+0x6207a]        # 0x464734
  4026ba:	mov    rcx,QWORD PTR [rip+0x5fa27]        # 0x4620e8
  4026c1:	lea    rdx,[rax+0x30]
  4026c5:	call   0x4023a0
  4026ca:	mov    rcx,QWORD PTR [rip+0x5fa17]        # 0x4620e8
  4026d1:	call   0x402210
  4026d6:	jmp    0x402642
  4026db:	nop    DWORD PTR [rax+rax*1+0x0]
  4026e0:	call   0x402210
  4026e5:	jmp    0x40260b
  4026ea:	nop    WORD PTR [rax+rax*1+0x0]
  4026f0:	push   rdi
  4026f1:	push   rsi
  4026f2:	push   rbx
  4026f3:	sub    rsp,0x40
  4026f7:	mov    rbx,rdx
  4026fa:	lea    r8,[rsp+0x3c]
  4026ff:	mov    rsi,rcx
  402702:	mov    edx,0x1
  402707:	mov    rcx,rbx
  40270a:	call   0x43a780
  40270f:	test   eax,eax
  402711:	je     0x40278c
  402713:	mov    rcx,rbx
  402716:	call   0x43a890
  40271b:	mov    eax,DWORD PTR [rsp+0x3c]
  40271f:	test   eax,eax
  402721:	je     0x402740
  402723:	movzx  r8d,al
  402727:	cmp    r8d,0x7f
  40272b:	je     0x402732
  40272d:	test   r8d,r8d
  402730:	jne    0x402748
  402732:	test   r8d,r8d
  402735:	movzx  eax,ah
  402738:	mov    edx,0x0
  40273d:	cmovne eax,edx
  402740:	add    rsp,0x40
  402744:	pop    rbx
  402745:	pop    rsi
  402746:	pop    rdi
  402747:	ret    
  402748:	mov    edi,eax
  40274a:	lea    rbx,[rip+0x49dbc]        # 0x44c50d
  402751:	and    edi,0x7f
  402754:	test   al,0x80
  402756:	lea    rax,[rip+0x49da2]        # 0x44c4ff
  40275d:	mov    ecx,edi
  40275f:	cmovne rbx,rax
  402763:	call   0x43b810
  402768:	lea    rcx,[rip+0x49dc1]        # 0x44c530
  40276f:	mov    r9,rax
  402772:	mov    QWORD PTR [rsp+0x20],rbx
  402777:	mov    r8d,edi
  40277a:	mov    rdx,rsi
  40277d:	call   0x406e60
  402782:	mov    ecx,0x1
  402787:	call   0x449520
  40278c:	lea    rcx,[rip+0x49d7b]        # 0x44c50e
  402793:	call   0x407080
  402798:	nop
  402799:	nop    DWORD PTR [rax+0x0]
  4027a0:	push   rbx
  4027a1:	sub    rsp,0x30
  4027a5:	mov    rbx,rcx
  4027a8:	call   0x4026f0
  4027ad:	test   eax,eax
  4027af:	jne    0x4027d3
  4027b1:	mov    rcx,QWORD PTR [rip+0x5f998]        # 0x462150
  4027b8:	test   rcx,rcx
  4027bb:	je     0x4027cd
  4027bd:	call   0x449340
  4027c2:	mov    QWORD PTR [rip+0x5f983],0x0        # 0x462150
  4027cd:	add    rsp,0x30
  4027d1:	pop    rbx
  4027d2:	ret    
  4027d3:	lea    rcx,[rip+0x49d7a]        # 0x44c554
  4027da:	mov    r8d,eax
  4027dd:	mov    rdx,rbx
  4027e0:	mov    DWORD PTR [rsp+0x2c],eax
  4027e4:	call   0x406e60
  4027e9:	mov    eax,DWORD PTR [rsp+0x2c]
  4027ed:	mov    ecx,eax
  4027ef:	call   0x449520
  4027f4:	nop
  4027f5:	nop
  4027f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402800:	push   r15
  402802:	push   r14
  402804:	push   r13
  402806:	push   r12
  402808:	push   rbp
  402809:	push   rdi
  40280a:	push   rsi
  40280b:	push   rbx
  40280c:	sub    rsp,0x4a8
  402813:	mov    rsi,QWORD PTR [rip+0x5f9b6]        # 0x4621d0
  40281a:	mov    QWORD PTR [rsp+0x4f0],rcx
  402822:	mov    r13d,edx
  402825:	test   rsi,rsi
  402828:	je     0x402cf8
  40282e:	lea    rax,[rip+0x49d4b]        # 0x44c580
  402835:	cmp    BYTE PTR [rip+0x5f8b6],0x0        # 0x4620f2
  40283c:	mov    QWORD PTR [rsp+0x80],rsi
  402844:	mov    QWORD PTR [rsp+0x98],0x0
  402850:	lea    rdi,[rsp+0x80]
  402858:	mov    rbx,QWORD PTR [rip+0x61ed5]        # 0x464734
  40285f:	mov    QWORD PTR [rsp+0x88],rax
  402867:	mov    rax,QWORD PTR [rsp+0x4f0]
  40286f:	mov    QWORD PTR [rsp+0x90],rax
  402877:	je     0x4028b7
  402879:	mov    rbx,QWORD PTR [rip+0x61eb4]        # 0x464734
  402880:	mov    rbp,rdi
  402883:	call   rbx
  402885:	lea    rdx,[rip+0x49cf9]        # 0x44c585
  40288c:	lea    rcx,[rax+0x60]
  402890:	mov    r8,rsi
  402893:	add    rbp,0x8
  402897:	call   0x4498d0
  40289c:	mov    rsi,QWORD PTR [rbp+0x0]
  4028a0:	test   rsi,rsi
  4028a3:	jne    0x402883
  4028a5:	call   rbx
  4028a7:	lea    rdx,[rip+0x49cd5]        # 0x44c583
  4028ae:	lea    rcx,[rax+0x60]
  4028b2:	call   0x4498d0
  4028b7:	call   rbx
  4028b9:	lea    rcx,[rax+0x30]
  4028bd:	call   0x449500
  4028c2:	call   rbx
  4028c4:	lea    rcx,[rax+0x60]
  4028c8:	call   0x449500
  4028cd:	lea    rdx,[rip+0x49cb5]        # 0x44c589
  4028d4:	xor    r8d,r8d
  4028d7:	mov    ecx,0x2
  4028dc:	call   0x43b690
  4028e1:	mov    rcx,rax
  4028e4:	mov    QWORD PTR [rsp+0x58],rax
  4028e9:	lea    rax,[rsp+0x7c]
  4028ee:	mov    r8,QWORD PTR [rip+0x5f8db]        # 0x4621d0
  4028f5:	xor    edx,edx
  4028f7:	mov    QWORD PTR [rsp+0x20],0x0
  402900:	mov    QWORD PTR [rsp+0x30],rax
  402905:	lea    rax,[rip+0x49c86]        # 0x44c592
  40290c:	mov    r9,rdi
  40290f:	mov    QWORD PTR [rsp+0x28],rax
  402914:	call   0x43a4b0
  402919:	test   rax,rax
  40291c:	mov    rsi,rax
  40291f:	je     0x40294c
  402921:	mov    ecx,DWORD PTR [rsp+0x7c]
  402925:	test   ecx,ecx
  402927:	je     0x402944
  402929:	call   QWORD PTR [rip+0x61e55]        # 0x464784
  40292f:	mov    edx,DWORD PTR [rsp+0x7c]
  402933:	lea    rcx,[rip+0x49c5c]        # 0x44c596
  40293a:	mov    DWORD PTR [rax],edx
  40293c:	mov    rdx,rsi
  40293f:	call   0x407080
  402944:	mov    rcx,rax
  402947:	call   0x407080
  40294c:	mov    edx,0x1
  402951:	mov    ecx,0x2
  402956:	call   0x449408
  40295b:	mov    rcx,QWORD PTR [rsp+0x58]
  402960:	xor    edx,edx
  402962:	mov    QWORD PTR [rsp+0x68],rax
  402967:	call   0x43a670
  40296c:	test   rax,rax
  40296f:	mov    QWORD PTR [rsp+0x48],rax
  402974:	je     0x402cec
  40297a:	cmp    BYTE PTR [rip+0x5f770],0x0        # 0x4620f1
  402981:	jne    0x402c75
  402987:	mov    rbp,QWORD PTR [rip+0x584a2]        # 0x45ae30
  40298e:	lea    r12,[rsp+0xa0]
  402996:	mov    DWORD PTR [rsp+0x64],0x0
  40299e:	xchg   ax,ax
  4029a0:	mov    r8,QWORD PTR [rsp+0x48]
  4029a5:	mov    edx,0x400
  4029aa:	mov    rcx,r12
  4029ad:	call   0x4494f8
  4029b2:	test   rax,rax
  4029b5:	je     0x402bd4
  4029bb:	cmp    BYTE PTR [rip+0x5f72f],0x0        # 0x4620f1
  4029c2:	jne    0x402b03
  4029c8:	cmp    r13d,0x4
  4029cc:	je     0x402b22
  4029d2:	movsx  eax,BYTE PTR [rsp+0xa0]
  4029da:	test   eax,eax
  4029dc:	je     0x4029a0
  4029de:	cmp    eax,0x5f
  4029e1:	je     0x402b90
  4029e7:	cmp    eax,0xa
  4029ea:	mov    rsi,r12
  4029ed:	je     0x402b90
  4029f3:	cmp    eax,0x20
  4029f6:	je     0x402ae4
  4029fc:	movsx  eax,BYTE PTR [rsi+0x1]
  402a00:	test   eax,eax
  402a02:	je     0x4029a0
  402a04:	add    rsi,0x1
  402a08:	cmp    eax,0x5f
  402a0b:	je     0x402a12
  402a0d:	cmp    eax,0xa
  402a10:	jne    0x4029f3
  402a12:	cmp    eax,0x5f
  402a15:	jne    0x4029a0
  402a17:	movsx  edx,BYTE PTR [rsi]
  402a1a:	movzx  eax,dl
  402a1d:	test   BYTE PTR [rbp+rax*2+0x0],0x40
  402a22:	jne    0x402d80
  402a28:	cmp    edx,0x7c
  402a2b:	mov    rax,rsi
  402a2e:	je     0x402d80
  402a34:	add    rax,0x1
  402a38:	movsx  edx,BYTE PTR [rax]
  402a3b:	test   edx,edx
  402a3d:	je     0x402a4e
  402a3f:	movzx  ecx,dl
  402a42:	test   BYTE PTR [rbp+rcx*2+0x0],0x40
  402a47:	jne    0x402a4e
  402a49:	cmp    edx,0x7c
  402a4c:	jne    0x402a34
  402a4e:	mov    BYTE PTR [rax],0x0
  402a51:	cmp    BYTE PTR [rsi],0x5f
  402a54:	mov    r14,rsi
  402a57:	jne    0x4029a0
  402a5d:	add    r14,0x1
  402a61:	movsx  r15d,BYTE PTR [r14]
  402a65:	cmp    r15d,0x5f
  402a69:	je     0x402a5d
  402a6b:	cmp    r14,rsi
  402a6e:	je     0x4029a0
  402a74:	mov    rax,r14
  402a77:	mov    r8d,0xa
  402a7d:	lea    rdi,[rip+0x4a3fc]        # 0x44ce80
  402a84:	sub    rax,rsi
  402a87:	mov    QWORD PTR [rsp+0x50],rax
  402a8c:	jmp    0x402aa1
  402a8e:	xchg   ax,ax
  402a90:	add    rdi,0x18
  402a94:	movsxd r8,DWORD PTR [rdi+0x8]
  402a98:	test   r8d,r8d
  402a9b:	jle    0x4029a0
  402aa1:	mov    rdx,QWORD PTR [rdi]
  402aa4:	movsx  eax,BYTE PTR [rdx]
  402aa7:	cmp    eax,r15d
  402aaa:	jne    0x402a90
  402aac:	mov    eax,DWORD PTR [rdi+0x10]
  402aaf:	test   eax,eax
  402ab1:	je     0x402abb
  402ab3:	cmp    QWORD PTR [rsp+0x50],0x1
  402ab9:	jle    0x402a90
  402abb:	mov    rcx,r14
  402abe:	call   0x4493b0
  402ac3:	test   eax,eax
  402ac5:	jne    0x402a90
  402ac7:	cmp    DWORD PTR [rdi+0xc],0x5
  402acb:	ja     0x4029a0
  402ad1:	mov    eax,DWORD PTR [rdi+0xc]
  402ad4:	lea    rdi,[rip+0x49b95]        # 0x44c670
  402adb:	movsxd rax,DWORD PTR [rdi+rax*4]
  402adf:	add    rax,rdi
  402ae2:	jmp    rax
  402ae4:	movsx  eax,BYTE PTR [rsi+0x1]
  402ae8:	cmp    al,0x55
  402aea:	jne    0x402a00
  402af0:	cmp    BYTE PTR [rsi+0x2],0x20
  402af4:	je     0x4029a0
  402afa:	add    rsi,0x1
  402afe:	jmp    0x4029fc
  402b03:	call   rbx
  402b05:	lea    rdx,[rip+0x49b07]        # 0x44c613
  402b0c:	lea    rcx,[rax+0x60]
  402b10:	mov    r8,r12
  402b13:	call   0x4498d0
  402b18:	cmp    r13d,0x4
  402b1c:	jne    0x4029d2
  402b22:	mov    edx,DWORD PTR [rsp+0x64]
  402b26:	test   edx,edx
  402b28:	jne    0x402ba0
  402b2a:	movsx  eax,BYTE PTR [rsp+0xa0]
  402b32:	test   eax,eax
  402b34:	je     0x4029a0
  402b3a:	cmp    eax,0xa
  402b3d:	je     0x4029a0
  402b43:	mov    rdx,r12
  402b46:	mov    r8d,0xc
  402b4c:	jmp    0x402b69
  402b4e:	xchg   ax,ax
  402b50:	movsx  eax,BYTE PTR [rdx+0x1]
  402b54:	add    rdx,0x1
  402b58:	test   eax,eax
  402b5a:	je     0x4029a0
  402b60:	cmp    eax,0xa
  402b63:	je     0x4029a0
  402b69:	cmp    eax,0x20
  402b6c:	jne    0x402b50
  402b6e:	movsx  eax,BYTE PTR [rdx+0x1]
  402b72:	cmp    al,0x5f
  402b74:	je     0x402b80
  402b76:	add    rdx,0x1
  402b7a:	jmp    0x402b58
  402b7c:	nop    DWORD PTR [rax+0x0]
  402b80:	cmp    BYTE PTR [rdx+0x2],0x5f
  402b84:	je     0x402bad
  402b86:	add    rdx,0x1
  402b8a:	jmp    0x402b50
  402b8c:	nop    DWORD PTR [rax+0x0]
  402b90:	mov    rsi,r12
  402b93:	jmp    0x402a12
  402b98:	nop    DWORD PTR [rax+rax*1+0x0]
  402ba0:	mov    DWORD PTR [rsp+0x64],0x1
  402ba8:	jmp    0x4029a0
  402bad:	cmp    BYTE PTR [rdx+0x3],0x5f
  402bb1:	je     0x402ca9
  402bb7:	lea    rax,[rdx+0x1]
  402bbb:	lea    rdi,[rip+0x49a9f]        # 0x44c661
  402bc2:	mov    rcx,r8
  402bc5:	mov    rsi,rax
  402bc8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402bca:	je     0x402c16
  402bcc:	mov    rdx,rax
  402bcf:	jmp    0x402b50
  402bd4:	cmp    BYTE PTR [rip+0x5f516],0x0        # 0x4620f1
  402bdb:	jne    0x402c92
  402be1:	mov    rdx,QWORD PTR [rsp+0x58]
  402be6:	mov    rcx,QWORD PTR [rip+0x5f5e3]        # 0x4621d0
  402bed:	call   0x4027a0
  402bf2:	mov    rdx,QWORD PTR [rsp+0x68]
  402bf7:	mov    ecx,0x2
  402bfc:	call   0x449408
  402c01:	nop
  402c02:	add    rsp,0x4a8
  402c09:	pop    rbx
  402c0a:	pop    rsi
  402c0b:	pop    rdi
  402c0c:	pop    rbp
  402c0d:	pop    r12
  402c0f:	pop    r13
  402c11:	pop    r14
  402c13:	pop    r15
  402c15:	ret    
  402c16:	mov    eax,0xd
  402c1b:	movzx  eax,BYTE PTR [rdx+rax*1]
  402c1f:	mov    rdi,QWORD PTR [rip+0x5820a]        # 0x45ae30
  402c26:	test   BYTE PTR [rdi+rax*2],0x40
  402c2a:	je     0x402b86
  402c30:	mov    ecx,0x10
  402c35:	call   0x43baf0
  402c3a:	mov    rdx,QWORD PTR [rip+0x5f507]        # 0x462148
  402c41:	mov    rdi,QWORD PTR [rsp+0x4f0]
  402c49:	mov    QWORD PTR [rax+0x8],0x0
  402c51:	test   rdx,rdx
  402c54:	mov    QWORD PTR [rax],rdi
  402c57:	je     0x402ce0
  402c5d:	mov    QWORD PTR [rdx+0x8],rax
  402c61:	mov    QWORD PTR [rip+0x5f4e0],rax        # 0x462148
  402c68:	mov    DWORD PTR [rsp+0x64],0x1
  402c70:	jmp    0x4029a0
  402c75:	cmp    r13d,0x4
  402c79:	je     0x402cc9
  402c7b:	call   rbx
  402c7d:	lea    rdx,[rip+0x49964]        # 0x44c5e8
  402c84:	lea    rcx,[rax+0x60]
  402c88:	call   0x4498d0
  402c8d:	jmp    0x402987
  402c92:	call   rbx
  402c94:	lea    rdx,[rip+0x498e8]        # 0x44c583
  402c9b:	lea    rcx,[rax+0x60]
  402c9f:	call   0x4498d0
  402ca4:	jmp    0x402be1
  402ca9:	lea    rsi,[rdx+0x2]
  402cad:	lea    rdi,[rip+0x499ad]        # 0x44c661
  402cb4:	mov    rcx,r8
  402cb7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402cb9:	jne    0x402b86
  402cbf:	mov    eax,0xe
  402cc4:	jmp    0x402c1b
  402cc9:	call   rbx
  402ccb:	lea    rdx,[rip+0x498e6]        # 0x44c5b8
  402cd2:	lea    rcx,[rax+0x60]
  402cd6:	call   0x4498d0
  402cdb:	jmp    0x402987
  402ce0:	mov    QWORD PTR [rip+0x5f459],rax        # 0x462140
  402ce7:	jmp    0x402c61
  402cec:	lea    rcx,[rip+0x498aa]        # 0x44c59d
  402cf3:	call   0x407080
  402cf8:	lea    rcx,[rip+0x49870]        # 0x44c56f
  402cff:	call   0x407080
  402d04:	cmp    r13d,0x2
  402d08:	je     0x4029a0
  402d0e:	lea    rcx,[rip+0x5f44b]        # 0x462160
  402d15:	mov    rdx,rsi
  402d18:	call   0x4017e0
  402d1d:	jmp    0x4029a0
  402d22:	cmp    r13d,0x2
  402d26:	jne    0x402d6c
  402d28:	lea    rcx,[rip+0x5f451]        # 0x462180
  402d2f:	mov    rdx,rsi
  402d32:	call   0x4017e0
  402d37:	jmp    0x4029a0
  402d3c:	cmp    r13d,0x2
  402d40:	jne    0x402d88
  402d42:	lea    rcx,[rip+0x5f457]        # 0x4621a0
  402d49:	mov    rdx,rsi
  402d4c:	call   0x4017e0
  402d51:	jmp    0x4029a0
  402d56:	cmp    r13d,0x2
  402d5a:	jne    0x402d42
  402d5c:	jmp    0x4029a0
  402d61:	cmp    r13d,0x2
  402d65:	jne    0x402d28
  402d67:	jmp    0x4029a0
  402d6c:	mov    rdx,QWORD PTR [rsp+0x4f0]
  402d74:	lea    rcx,[rip+0x498c5]        # 0x44c640
  402d7b:	call   0x407080
  402d80:	mov    rax,rsi
  402d83:	jmp    0x402a4e
  402d88:	mov    rdx,QWORD PTR [rsp+0x4f0]
  402d90:	lea    rcx,[rip+0x49881]        # 0x44c618
  402d97:	call   0x407080
  402d9c:	nop
  402d9d:	nop    DWORD PTR [rax]
  402da0:	push   r15
  402da2:	push   r14
  402da4:	push   r13
  402da6:	push   r12
  402da8:	push   rbp
  402da9:	push   rdi
  402daa:	push   rsi
  402dab:	push   rbx
  402dac:	sub    rsp,0x78
  402db0:	cmp    BYTE PTR [rip+0x5f3a1],0x0        # 0x462158
  402db7:	mov    rbp,rcx
  402dba:	mov    rsi,rdx
  402dbd:	mov    r12,r8
  402dc0:	mov    r13,r9
  402dc3:	je     0x402f60
  402dc9:	mov    r14,QWORD PTR [rdx]
  402dcc:	test   r14,r14
  402dcf:	je     0x402fc0
  402dd5:	lea    rcx,[rip+0x49731]        # 0x44c50d
  402ddc:	add    rsi,0x8
  402de0:	call   0x439700
  402de5:	lea    rdx,[rip+0x4989c]        # 0x44c688
  402dec:	mov    rcx,rax
  402def:	mov    QWORD PTR [rip+0x5f35a],rax        # 0x462150
  402df6:	call   0x4494f0
  402dfb:	test   rax,rax
  402dfe:	mov    rbx,rax
  402e01:	je     0x40300c
  402e07:	mov    rdx,rax
  402e0a:	mov    rcx,rsi
  402e0d:	call   0x437d00
  402e12:	test   eax,eax
  402e14:	jne    0x40301f
  402e1a:	mov    rcx,rbx
  402e1d:	call   0x449518
  402e22:	cmp    eax,0xffffffff
  402e25:	je     0x403032
  402e2b:	mov    rdx,QWORD PTR [rip+0x5f31e]        # 0x462150
  402e32:	lea    rcx,[rip+0x498c0]        # 0x44c6f9
  402e39:	xor    r8d,r8d
  402e3c:	lea    rsi,[rsp+0x50]
  402e41:	call   0x4381d0
  402e46:	cmp    BYTE PTR [rip+0x5f2a5],0x0        # 0x4620f2
  402e4d:	mov    rdi,rax
  402e50:	mov    QWORD PTR [rsp+0x50],r14
  402e55:	mov    QWORD PTR [rsp+0x58],rax
  402e5a:	mov    QWORD PTR [rsp+0x60],0x0
  402e63:	je     0x402f6f
  402e69:	mov    r14,QWORD PTR [rsi]
  402e6c:	test   r14,r14
  402e6f:	je     0x402f90
  402e75:	mov    rbx,QWORD PTR [rip+0x618b8]        # 0x464734
  402e7c:	call   rbx
  402e7e:	lea    rdx,[rip+0x49876]        # 0x44c6fb
  402e85:	lea    rcx,[rax+0x60]
  402e89:	mov    r8,r14
  402e8c:	call   0x4498d0
  402e91:	mov    r14,QWORD PTR [rsi+0x8]
  402e95:	lea    r15,[rsi+0x8]
  402e99:	test   r14,r14
  402e9c:	je     0x402ec1
  402e9e:	xchg   ax,ax
  402ea0:	call   rbx
  402ea2:	lea    rdx,[rip+0x496dc]        # 0x44c585
  402ea9:	lea    rcx,[rax+0x60]
  402ead:	mov    r8,r14
  402eb0:	add    r15,0x8
  402eb4:	call   0x4498d0
  402eb9:	mov    r14,QWORD PTR [r15]
  402ebc:	test   r14,r14
  402ebf:	jne    0x402ea0
  402ec1:	call   rbx
  402ec3:	lea    rdx,[rip+0x496b9]        # 0x44c583
  402eca:	lea    rcx,[rax+0x60]
  402ece:	call   0x4498d0
  402ed3:	call   rbx
  402ed5:	lea    rcx,[rax+0x30]
  402ed9:	call   0x449500
  402ede:	call   rbx
  402ee0:	lea    rcx,[rax+0x60]
  402ee4:	call   0x449500
  402ee9:	cmp    QWORD PTR [rsi],0x0
  402eed:	je     0x402ffd
  402ef3:	lea    rdx,[rip+0x4968f]        # 0x44c589
  402efa:	xor    r8d,r8d
  402efd:	xor    ecx,ecx
  402eff:	call   0x43b690
  402f04:	mov    rbp,rax
  402f07:	lea    rax,[rsp+0x4c]
  402f0c:	mov    QWORD PTR [rsp+0x28],r13
  402f11:	mov    QWORD PTR [rsp+0x20],r12
  402f16:	mov    edx,DWORD PTR [rsp+0xe0]
  402f1d:	mov    r9,rsi
  402f20:	mov    QWORD PTR [rsp+0x30],rax
  402f25:	mov    r8,QWORD PTR [rsi]
  402f28:	mov    rcx,rbp
  402f2b:	call   0x43a4b0
  402f30:	test   rax,rax
  402f33:	mov    rbx,rax
  402f36:	je     0x402fe1
  402f3c:	mov    eax,DWORD PTR [rsp+0x4c]
  402f40:	test   eax,eax
  402f42:	je     0x402fb0
  402f44:	call   QWORD PTR [rip+0x6183a]        # 0x464784
  402f4a:	mov    edx,DWORD PTR [rsp+0x4c]
  402f4e:	lea    rcx,[rip+0x49641]        # 0x44c596
  402f55:	mov    DWORD PTR [rax],edx
  402f57:	mov    rdx,rbx
  402f5a:	call   0x407080
  402f5f:	nop
  402f60:	xor    edi,edi
  402f62:	cmp    BYTE PTR [rip+0x5f189],0x0        # 0x4620f2
  402f69:	jne    0x402e69
  402f6f:	cmp    BYTE PTR [rip+0x5f17b],0x0        # 0x4620f1
  402f76:	mov    rbx,QWORD PTR [rip+0x617b7]        # 0x464734
  402f7d:	je     0x402ed3
  402f83:	mov    r14,QWORD PTR [rsi]
  402f86:	test   r14,r14
  402f89:	jne    0x402e75
  402f8f:	nop
  402f90:	lea    rcx,[rip+0x49767]        # 0x44c6fe
  402f97:	mov    rdx,rbp
  402f9a:	call   0x4018f0
  402f9f:	mov    rbx,QWORD PTR [rip+0x6178e]        # 0x464734
  402fa6:	jmp    0x402e91
  402fab:	nop    DWORD PTR [rax+rax*1+0x0]
  402fb0:	mov    rcx,rbx
  402fb3:	call   0x407080
  402fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402fc0:	xor    edi,edi
  402fc2:	cmp    BYTE PTR [rip+0x5f129],0x0        # 0x4620f2
  402fc9:	jne    0x402f90
  402fcb:	cmp    BYTE PTR [rip+0x5f11f],0x0        # 0x4620f1
  402fd2:	mov    rbx,QWORD PTR [rip+0x6175b]        # 0x464734
  402fd9:	je     0x402ed3
  402fdf:	jmp    0x402f90
  402fe1:	mov    rcx,rdi
  402fe4:	call   0x4494c8
  402fe9:	mov    rax,rbp
  402fec:	add    rsp,0x78
  402ff0:	pop    rbx
  402ff1:	pop    rsi
  402ff2:	pop    rdi
  402ff3:	pop    rbp
  402ff4:	pop    r12
  402ff6:	pop    r13
  402ff8:	pop    r14
  402ffa:	pop    r15
  402ffc:	ret    
  402ffd:	lea    rcx,[rip+0x4970b]        # 0x44c70f
  403004:	mov    rdx,rbp
  403007:	call   0x407080
  40300c:	mov    rdx,QWORD PTR [rip+0x5f13d]        # 0x462150
  403013:	lea    rcx,[rip+0x49676]        # 0x44c690
  40301a:	call   0x407080
  40301f:	mov    rdx,QWORD PTR [rip+0x5f12a]        # 0x462150
  403026:	lea    rcx,[rip+0x49683]        # 0x44c6b0
  40302d:	call   0x407080
  403032:	mov    rdx,QWORD PTR [rip+0x5f117]        # 0x462150
  403039:	lea    rcx,[rip+0x49698]        # 0x44c6d8
  403040:	call   0x407080
  403045:	nop
  403046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403050:	push   rbx
  403051:	sub    rsp,0x30
  403055:	xor    r9d,r9d
  403058:	xor    r8d,r8d
  40305b:	mov    rbx,rcx
  40305e:	mov    DWORD PTR [rsp+0x20],0x3
  403066:	call   0x402da0
  40306b:	mov    rcx,rbx
  40306e:	mov    rdx,rax
  403071:	add    rsp,0x30
  403075:	pop    rbx
  403076:	jmp    0x4027a0
  40307b:	nop    DWORD PTR [rax+rax*1+0x0]
  403080:	push   r15
  403082:	push   r14
  403084:	push   r13
  403086:	push   r12
  403088:	push   rbp
  403089:	push   rdi
  40308a:	push   rsi
  40308b:	push   rbx
  40308c:	sub    rsp,0x58
  403090:	cmp    rdx,r8
  403093:	mov    rsi,rcx
  403096:	mov    r14,rdx
  403099:	mov    r12,r8
  40309c:	mov    DWORD PTR [rsp+0x3c],r9d
  4030a1:	jae    0x40357d
  4030a7:	lea    rdi,[rsp+0x40]
  4030ac:	lea    r13,[rip+0x47f6d]        # 0x44b020
  4030b3:	mov    rbx,rdx
  4030b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030c0:	add    rbx,0x8
  4030c4:	mov    rbp,QWORD PTR [rbx-0x8]
  4030c8:	lea    rdx,[rip+0x49651]        # 0x44c720
  4030cf:	mov    rcx,rbp
  4030d2:	call   0x4494f0
  4030d7:	test   rax,rax
  4030da:	mov    r15,rax
  4030dd:	je     0x40318c
  4030e3:	mov    r9,rax
  4030e6:	mov    r8d,0x1
  4030ec:	mov    edx,0x4
  4030f1:	mov    rcx,rdi
  4030f4:	call   0x4494d0
  4030f9:	cmp    rax,0x1
  4030fd:	je     0x403104
  4030ff:	mov    BYTE PTR [rsp+0x40],0x0
  403104:	mov    rcx,r15
  403107:	call   0x449518
  40310c:	lea    rdx,[rip+0x47f11]        # 0x44b024
  403113:	mov    r8d,0x4
  403119:	mov    rcx,rdi
  40311c:	call   0x449458
  403121:	test   eax,eax
  403123:	je     0x4032a0
  403129:	lea    rdx,[rip+0x47ef2]        # 0x44b022
  403130:	mov    r8d,0x2
  403136:	mov    rcx,rdi
  403139:	call   0x449458
  40313e:	test   eax,eax
  403140:	je     0x4032a0
  403146:	lea    rdx,[rip+0x47ed3]        # 0x44b020
  40314d:	mov    r8d,0x2
  403153:	mov    rcx,rdi
  403156:	call   0x449458
  40315b:	test   eax,eax
  40315d:	je     0x4032a0
  403163:	lea    r15,[rip+0x47ea6]        # 0x44b010
  40316a:	mov    r8d,0x4
  403170:	mov    rdx,r15
  403173:	mov    rcx,rdi
  403176:	call   0x449458
  40317b:	test   eax,eax
  40317d:	je     0x4032a0
  403183:	add    r15,0x4
  403187:	cmp    r15,r13
  40318a:	jne    0x40316a
  40318c:	cmp    r12,rbx
  40318f:	ja     0x4030c0
  403195:	not    r14
  403198:	lea    rax,[r14+r12*1]
  40319c:	shr    rax,0x3
  4031a0:	lea    ebx,[rax+0x2]
  4031a3:	cmp    QWORD PTR [rip+0x5ef95],0x0        # 0x462140
  4031ab:	je     0x403559
  4031b1:	lea    rcx,[rip+0x4956b]        # 0x44c723
  4031b8:	call   0x449498
  4031bd:	test   rax,rax
  4031c0:	mov    rdi,rax
  4031c3:	je     0x4035b1
  4031c9:	lea    edx,[rbx+0x1]
  4031cc:	mov    ecx,0x8
  4031d1:	movsxd rdx,edx
  4031d4:	call   0x43bb20
  4031d9:	mov    rcx,QWORD PTR [rip+0x5ef60]        # 0x462140
  4031e0:	mov    rdx,rax
  4031e3:	lea    r8,[rax+0x8]
  4031e7:	mov    QWORD PTR [rax],rdi
  4031ea:	test   rcx,rcx
  4031ed:	je     0x403204
  4031ef:	nop
  4031f0:	mov    r9,QWORD PTR [rcx]
  4031f3:	add    r8,0x8
  4031f7:	mov    QWORD PTR [r8-0x8],r9
  4031fb:	mov    rcx,QWORD PTR [rcx+0x8]
  4031ff:	test   rcx,rcx
  403202:	jne    0x4031f0
  403204:	lea    rcx,[rip+0x4954d]        # 0x44c758
  40320b:	mov    QWORD PTR [r8],0x0
  403212:	xor    r9d,r9d
  403215:	xor    r8d,r8d
  403218:	mov    DWORD PTR [rsp+0x20],0x2
  403220:	call   0x402da0
  403225:	xor    edx,edx
  403227:	mov    rcx,rax
  40322a:	mov    r12,rax
  40322d:	call   0x43a670
  403232:	test   rax,rax
  403235:	mov    rdi,rax
  403238:	je     0x403599
  40323e:	xor    ebp,ebp
  403240:	jmp    0x403257
  403242:	mov    QWORD PTR [rip+0x5ee4f],rdx        # 0x462098
  403249:	xor    edx,edx
  40324b:	cmp    eax,0xa
  40324e:	sete   dl
  403251:	mov    BYTE PTR [r8],al
  403254:	add    rbp,rdx
  403257:	mov    rcx,rdi
  40325a:	call   0x4494a0
  40325f:	cmp    eax,0xffffffff
  403262:	je     0x4032bb
  403264:	mov    r8,QWORD PTR [rip+0x5ee2d]        # 0x462098
  40326b:	lea    rdx,[r8+0x1]
  40326f:	cmp    rdx,QWORD PTR [rip+0x5ee2a]        # 0x4620a0
  403276:	jbe    0x403242
  403278:	lea    rcx,[rip+0x5ee01]        # 0x462080
  40327f:	mov    edx,0x1
  403284:	mov    DWORD PTR [rsp+0x3c],eax
  403288:	call   0x439960
  40328d:	mov    r8,QWORD PTR [rip+0x5ee04]        # 0x462098
  403294:	mov    eax,DWORD PTR [rsp+0x3c]
  403298:	lea    rdx,[r8+0x1]
  40329c:	jmp    0x403242
  40329e:	xchg   ax,ax
  4032a0:	mov    edx,0x4
  4032a5:	mov    rcx,rbp
  4032a8:	call   0x402800
  4032ad:	cmp    r12,rbx
  4032b0:	ja     0x4030c0
  4032b6:	jmp    0x403195
  4032bb:	lea    r13,[rbp+0x1]
  4032bf:	lea    rbx,[r13*8+0x0]
  4032c7:	mov    rcx,rbx
  4032ca:	call   0x43baf0
  4032cf:	mov    rcx,QWORD PTR [rip+0x5edba]        # 0x462090
  4032d6:	mov    QWORD PTR [rip+0x5ef03],rax        # 0x4621e0
  4032dd:	mov    QWORD PTR [rax+rbx*1-0x8],0x0
  4032e6:	mov    rax,QWORD PTR [rip+0x5edab]        # 0x462098
  4032ed:	cmp    rax,rcx
  4032f0:	je     0x403571
  4032f6:	movsxd rdx,DWORD PTR [rip+0x5edb3]        # 0x4620b0
  4032fd:	mov    r8d,edx
  403300:	add    rax,rdx
  403303:	mov    rdx,QWORD PTR [rip+0x5ed7e]        # 0x462088
  40330a:	not    r8d
  40330d:	movsxd r8,r8d
  403310:	and    rax,r8
  403313:	mov    r8,QWORD PTR [rip+0x5ed86]        # 0x4620a0
  40331a:	mov    QWORD PTR [rip+0x5ed77],rax        # 0x462098
  403321:	sub    rax,rdx
  403324:	mov    rdi,r8
  403327:	sub    rdi,rdx
  40332a:	cmp    rax,rdi
  40332d:	jg     0x403522
  403333:	mov    rax,QWORD PTR [rip+0x5ed5e]        # 0x462098
  40333a:	xor    edi,edi
  40333c:	test   rbp,rbp
  40333f:	mov    QWORD PTR [rip+0x5ed4a],rax        # 0x462090
  403346:	je     0x40338c
  403348:	nop    DWORD PTR [rax+rax*1+0x0]
  403350:	cmp    BYTE PTR [rcx],0xa
  403353:	mov    rbx,rcx
  403356:	je     0x403369
  403358:	nop    DWORD PTR [rax+rax*1+0x0]
  403360:	add    rbx,0x1
  403364:	cmp    BYTE PTR [rbx],0xa
  403367:	jne    0x403360
  403369:	mov    rax,QWORD PTR [rip+0x5ee70]        # 0x4621e0
  403370:	mov    BYTE PTR [rbx],0x0
  403373:	lea    r14,[rax+rdi*8]
  403377:	add    rdi,0x1
  40337b:	call   0x43bbf0
  403380:	cmp    rdi,rbp
  403383:	mov    QWORD PTR [r14],rax
  403386:	lea    rcx,[rbx+0x1]
  40338a:	jne    0x403350
  40338c:	mov    rdx,QWORD PTR [rip+0x5ecb5]        # 0x462048
  403393:	cmp    rdx,QWORD PTR [rip+0x5ecee]        # 0x462088
  40339a:	jbe    0x4033a9
  40339c:	cmp    rdx,QWORD PTR [rip+0x5ecfd]        # 0x4620a0
  4033a3:	jb     0x40352e
  4033a9:	lea    rcx,[rip+0x5ecd0]        # 0x462080
  4033b0:	call   0x439b90
  4033b5:	lea    rcx,[rip+0x4939c]        # 0x44c758
  4033bc:	mov    rdx,r12
  4033bf:	call   0x4027a0
  4033c4:	cmp    QWORD PTR [rsi],0x0
  4033c8:	je     0x403587
  4033ce:	mov    edx,0x1
  4033d3:	jmp    0x4033d8
  4033d5:	mov    rdx,rax
  4033d8:	lea    rax,[rdx+0x1]
  4033dc:	cmp    QWORD PTR [rsi+rax*8-0x8],0x0
  4033e2:	jne    0x4033d5
  4033e4:	lea    rcx,[rdx+r13*1]
  4033e8:	mov    edx,0x8
  4033ed:	call   0x43bb20
  4033f2:	mov    r9,QWORD PTR [rsi]
  4033f5:	test   r9,r9
  4033f8:	je     0x40358e
  4033fe:	mov    rbx,QWORD PTR [rip+0x5ed3b]        # 0x462140
  403405:	mov    rcx,rax
  403408:	mov    r10,rsi
  40340b:	xor    r11d,r11d
  40340e:	xchg   ax,ax
  403410:	test   rbx,rbx
  403413:	je     0x403435
  403415:	cmp    r9,QWORD PTR [rbx]
  403418:	je     0x403541
  40341e:	mov    r8,rbx
  403421:	jmp    0x40342c
  403423:	cmp    r9,QWORD PTR [r8]
  403426:	je     0x403541
  40342c:	mov    r8,QWORD PTR [r8+0x8]
  403430:	test   r8,r8
  403433:	jne    0x403423
  403435:	add    r10,0x8
  403439:	mov    QWORD PTR [rcx],r9
  40343c:	add    r11d,0x1
  403440:	mov    r9,QWORD PTR [r10]
  403443:	add    rcx,0x8
  403447:	test   r9,r9
  40344a:	jne    0x403410
  40344c:	mov    r9,QWORD PTR [rip+0x5ed8d]        # 0x4621e0
  403453:	mov    rcx,QWORD PTR [r9]
  403456:	test   rcx,rcx
  403459:	je     0x4034c5
  40345b:	movsxd rdx,r11d
  40345e:	xor    r8d,r8d
  403461:	lea    rbx,[rax+rdx*8]
  403465:	mov    QWORD PTR [rbx+r8*1],rcx
  403469:	add    r8,0x8
  40346d:	add    r11d,0x1
  403471:	mov    rcx,QWORD PTR [r9+r8*1]
  403475:	test   rcx,rcx
  403478:	jne    0x403465
  40347a:	mov    r9,QWORD PTR [r10]
  40347d:	test   r9,r9
  403480:	je     0x4034c5
  403482:	mov    rcx,QWORD PTR [rip+0x5ecb7]        # 0x462140
  403489:	nop    DWORD PTR [rax+0x0]
  403490:	test   rcx,rcx
  403493:	je     0x4034ae
  403495:	cmp    r9,QWORD PTR [rcx]
  403498:	je     0x4034b9
  40349a:	mov    r8,rcx
  40349d:	jmp    0x4034a5
  40349f:	nop
  4034a0:	cmp    r9,QWORD PTR [r8]
  4034a3:	je     0x4034b9
  4034a5:	mov    r8,QWORD PTR [r8+0x8]
  4034a9:	test   r8,r8
  4034ac:	jne    0x4034a0
  4034ae:	movsxd rdx,r11d
  4034b1:	add    r11d,0x1
  4034b5:	mov    QWORD PTR [rax+rdx*8],r9
  4034b9:	add    r10,0x8
  4034bd:	mov    r9,QWORD PTR [r10]
  4034c0:	test   r9,r9
  4034c3:	jne    0x403490
  4034c5:	movsxd r11,r11d
  4034c8:	lea    rcx,[rip+0x492e6]        # 0x44c7b5
  4034cf:	mov    rdx,rax
  4034d2:	mov    QWORD PTR [rax+r11*8],0x0
  4034da:	call   0x403050
  4034df:	mov    rcx,rsi
  4034e2:	call   0x4494c8
  4034e7:	mov    rbx,QWORD PTR [rip+0x5ecf2]        # 0x4621e0
  4034ee:	mov    rcx,QWORD PTR [rbx]
  4034f1:	test   rcx,rcx
  4034f4:	je     0x403511
  4034f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403500:	add    rbx,0x8
  403504:	call   0x402210
  403509:	mov    rcx,QWORD PTR [rbx]
  40350c:	test   rcx,rcx
  40350f:	jne    0x403500
  403511:	add    rsp,0x58
  403515:	pop    rbx
  403516:	pop    rsi
  403517:	pop    rdi
  403518:	pop    rbp
  403519:	pop    r12
  40351b:	pop    r13
  40351d:	pop    r14
  40351f:	pop    r15
  403521:	ret    
  403522:	mov    QWORD PTR [rip+0x5eb6f],r8        # 0x462098
  403529:	jmp    0x403333
  40352e:	mov    QWORD PTR [rip+0x5eb5b],rdx        # 0x462090
  403535:	mov    QWORD PTR [rip+0x5eb5c],rdx        # 0x462098
  40353c:	jmp    0x4033b5
  403541:	mov    r9,QWORD PTR [rip+0x5ec98]        # 0x4621e0
  403548:	mov    rcx,QWORD PTR [r9]
  40354b:	test   rcx,rcx
  40354e:	jne    0x40345b
  403554:	jmp    0x40347a
  403559:	cmp    BYTE PTR [rsp+0x3c],0x0
  40355e:	je     0x403511
  403560:	lea    rcx,[rip+0x4924e]        # 0x44c7b5
  403567:	mov    rdx,rsi
  40356a:	call   0x403050
  40356f:	jmp    0x403511
  403571:	or     BYTE PTR [rip+0x5eb58],0x2        # 0x4620d0
  403578:	jmp    0x4032f6
  40357d:	mov    ebx,0x1
  403582:	jmp    0x4031a3
  403587:	xor    edx,edx
  403589:	jmp    0x4033e4
  40358e:	mov    r10,rsi
  403591:	xor    r11d,r11d
  403594:	jmp    0x40344c
  403599:	lea    r8,[rip+0x499a0]        # 0x44cf40
  4035a0:	lea    rcx,[rip+0x491c1]        # 0x44c768
  4035a7:	mov    edx,0x2fe
  4035ac:	call   0x406190
  4035b1:	lea    rcx,[rip+0x49180]        # 0x44c738
  4035b8:	call   0x407080
  4035bd:	nop
  4035be:	nop
  4035bf:	nop
  4035c0:	sub    rsp,0x28
  4035c4:	mov    rcx,QWORD PTR [rcx]
  4035c7:	call   0x4493e0
  4035cc:	test   eax,eax
  4035ce:	sete   al
  4035d1:	movzx  eax,al
  4035d4:	add    rsp,0x28
  4035d8:	ret    
  4035d9:	nop    DWORD PTR [rax+0x0]
  4035e0:	mov    rcx,QWORD PTR [rcx]
  4035e3:	jmp    0x4391e0
  4035e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4035f0:	push   rbp
  4035f1:	push   rdi
  4035f2:	push   rsi
  4035f3:	push   rbx
  4035f4:	sub    rsp,0x28
  4035f8:	mov    rdi,rcx
  4035fb:	mov    rbp,rdx
  4035fe:	call   0x4395f0
  403603:	mov    edx,0x2e
  403608:	mov    rcx,rax
  40360b:	call   0x449398
  403610:	test   rax,rax
  403613:	je     0x403710
  403619:	mov    rbx,QWORD PTR [rip+0x579d0]        # 0x45aff0
  403620:	sub    rax,rdi
  403623:	movsxd rsi,eax
  403626:	mov    rcx,QWORD PTR [rbx+0x18]
  40362a:	lea    rdx,[rcx+rsi*1]
  40362e:	cmp    QWORD PTR [rbx+0x20],rdx
  403632:	jb     0x4036e0
  403638:	mov    rdx,rdi
  40363b:	mov    r8,rsi
  40363e:	call   0x449450
  403643:	add    rsi,QWORD PTR [rbx+0x18]
  403647:	mov    rcx,rbp
  40364a:	mov    QWORD PTR [rbx+0x18],rsi
  40364e:	call   0x4493c0
  403653:	movsxd rdi,eax
  403656:	lea    rdx,[rsi+rdi*1+0x1]
  40365b:	cmp    QWORD PTR [rbx+0x20],rdx
  40365f:	jb     0x4036f3
  403665:	mov    r8,rdi
  403668:	mov    rdx,rbp
  40366b:	mov    rcx,rsi
  40366e:	call   0x449450
  403673:	add    rdi,QWORD PTR [rbx+0x18]
  403677:	lea    rax,[rdi+0x1]
  40367b:	mov    QWORD PTR [rbx+0x18],rax
  40367f:	mov    BYTE PTR [rdi],0x0
  403682:	mov    rax,QWORD PTR [rbx+0x10]
  403686:	mov    rdx,QWORD PTR [rbx+0x18]
  40368a:	cmp    rdx,rax
  40368d:	je     0x403720
  403693:	movsxd rcx,DWORD PTR [rbx+0x30]
  403697:	mov    r8d,ecx
  40369a:	add    rcx,rdx
  40369d:	not    r8d
  4036a0:	movsxd r8,r8d
  4036a3:	mov    rdx,r8
  4036a6:	mov    r8,QWORD PTR [rbx+0x8]
  4036aa:	and    rdx,rcx
  4036ad:	mov    rcx,QWORD PTR [rbx+0x20]
  4036b1:	mov    r9,rdx
  4036b4:	mov    QWORD PTR [rbx+0x18],rdx
  4036b8:	sub    r9,r8
  4036bb:	mov    rsi,rcx
  4036be:	sub    rsi,r8
  4036c1:	cmp    r9,rsi
  4036c4:	jle    0x4036cd
  4036c6:	mov    QWORD PTR [rbx+0x18],rcx
  4036ca:	mov    rdx,rcx
  4036cd:	mov    QWORD PTR [rbx+0x10],rdx
  4036d1:	add    rsp,0x28
  4036d5:	pop    rbx
  4036d6:	pop    rsi
  4036d7:	pop    rdi
  4036d8:	pop    rbp
  4036d9:	ret    
  4036da:	nop    WORD PTR [rax+rax*1+0x0]
  4036e0:	mov    rcx,rbx
  4036e3:	mov    edx,eax
  4036e5:	call   0x439960
  4036ea:	mov    rcx,QWORD PTR [rbx+0x18]
  4036ee:	jmp    0x403638
  4036f3:	lea    edx,[rax+0x1]
  4036f6:	mov    rcx,rbx
  4036f9:	call   0x439960
  4036fe:	mov    rsi,QWORD PTR [rbx+0x18]
  403702:	jmp    0x403665
  403707:	nop    WORD PTR [rax+rax*1+0x0]
  403710:	mov    rcx,rdi
  403713:	call   0x4493c0
  403718:	add    rax,rdi
  40371b:	jmp    0x403619
  403720:	or     BYTE PTR [rbx+0x50],0x2
  403724:	jmp    0x403693
  403729:	nop    DWORD PTR [rax+0x0]
  403730:	push   rdi
  403731:	push   rsi
  403732:	push   rbx
  403733:	sub    rsp,0x20
  403737:	mov    ebx,edx
  403739:	mov    rsi,rcx
  40373c:	call   0x4391e0
  403741:	mov    rcx,QWORD PTR [rip+0x5ec20]        # 0x462368
  403748:	xor    r9d,r9d
  40374b:	test   ebx,ebx
  40374d:	setne  r9b
  403751:	mov    r8d,eax
  403754:	mov    rdx,rsi
  403757:	call   0x438e20
  40375c:	test   rax,rax
  40375f:	mov    rbx,rax
  403762:	je     0x4037a5
  403764:	mov    r8,QWORD PTR [rax]
  403767:	test   r8,r8
  40376a:	je     0x403780
  40376c:	mov    rax,r8
  40376f:	add    rsp,0x20
  403773:	pop    rbx
  403774:	pop    rsi
  403775:	pop    rdi
  403776:	ret    
  403777:	nop    WORD PTR [rax+rax*1+0x0]
  403780:	mov    edx,0x20
  403785:	mov    ecx,0x1
  40378a:	call   0x43bb20
  40378f:	mov    rcx,rsi
  403792:	mov    rdi,rax
  403795:	mov    QWORD PTR [rbx],rax
  403798:	call   0x43bbf0
  40379d:	mov    QWORD PTR [rdi],rax
  4037a0:	mov    r8,QWORD PTR [rbx]
  4037a3:	jmp    0x40376c
  4037a5:	xor    eax,eax
  4037a7:	jmp    0x40376f
  4037a9:	nop    DWORD PTR [rax+0x0]
  4037b0:	push   rdi
  4037b1:	push   rsi
  4037b2:	push   rbx
  4037b3:	sub    rsp,0x20
  4037b7:	mov    ebx,edx
  4037b9:	mov    rsi,rcx
  4037bc:	call   0x4391e0
  4037c1:	mov    rcx,QWORD PTR [rip+0x5eb90]        # 0x462358
  4037c8:	xor    r9d,r9d
  4037cb:	test   ebx,ebx
  4037cd:	setne  r9b
  4037d1:	mov    r8d,eax
  4037d4:	mov    rdx,rsi
  4037d7:	call   0x438e20
  4037dc:	test   rax,rax
  4037df:	mov    rbx,rax
  4037e2:	je     0x403825
  4037e4:	mov    r8,QWORD PTR [rax]
  4037e7:	test   r8,r8
  4037ea:	je     0x403800
  4037ec:	mov    rax,r8
  4037ef:	add    rsp,0x20
  4037f3:	pop    rbx
  4037f4:	pop    rsi
  4037f5:	pop    rdi
  4037f6:	ret    
  4037f7:	nop    WORD PTR [rax+rax*1+0x0]
  403800:	mov    edx,0x10
  403805:	mov    ecx,0x1
  40380a:	call   0x43bb20
  40380f:	mov    rcx,rsi
  403812:	mov    rdi,rax
  403815:	mov    QWORD PTR [rbx],rax
  403818:	call   0x43bbf0
  40381d:	mov    QWORD PTR [rdi],rax
  403820:	mov    r8,QWORD PTR [rbx]
  403823:	jmp    0x4037ec
  403825:	xor    eax,eax
  403827:	jmp    0x4037ef
  403829:	nop    DWORD PTR [rax+0x0]
  403830:	push   rbx
  403831:	sub    rsp,0x30
  403835:	mov    rbx,rcx
  403838:	mov    DWORD PTR [rsp+0x20],0x3
  403840:	call   0x402da0
  403845:	mov    rcx,rbx
  403848:	mov    rdx,rax
  40384b:	add    rsp,0x30
  40384f:	pop    rbx
  403850:	jmp    0x4026f0
  403855:	nop
  403856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403860:	push   rbx
  403861:	sub    rsp,0x20
  403865:	mov    r9,QWORD PTR [rip+0x5ea34]        # 0x4622a0
  40386c:	mov    rax,QWORD PTR [rip+0x5ea25]        # 0x462298
  403873:	mov    rbx,rcx
  403876:	mov    rdx,r9
  403879:	sub    rdx,rax
  40387c:	cmp    rdx,0xf
  403880:	jle    0x403900
  403882:	mov    r8,QWORD PTR [rip+0x5ea07]        # 0x462290
  403889:	add    rax,0x10
  40388d:	cmp    rax,r8
  403890:	je     0x403924
  403896:	movsxd r10,DWORD PTR [rip+0x5ea13]        # 0x4622b0
  40389d:	mov    r11,r9
  4038a0:	mov    rdx,r10
  4038a3:	add    rax,r10
  4038a6:	not    edx
  4038a8:	movsxd rdx,edx
  4038ab:	and    rax,rdx
  4038ae:	mov    rdx,QWORD PTR [rip+0x5e9d3]        # 0x462288
  4038b5:	mov    rcx,rax
  4038b8:	mov    QWORD PTR [rip+0x5e9d9],rax        # 0x462298
  4038bf:	sub    rcx,rdx
  4038c2:	sub    r11,rdx
  4038c5:	cmp    rcx,r11
  4038c8:	jle    0x4038d4
  4038ca:	mov    QWORD PTR [rip+0x5e9c7],r9        # 0x462298
  4038d1:	mov    rax,r9
  4038d4:	mov    QWORD PTR [rip+0x5e9b5],rax        # 0x462290
  4038db:	mov    rax,QWORD PTR [rip+0x5e95e]        # 0x462240
  4038e2:	mov    QWORD PTR [r8],rbx
  4038e5:	mov    QWORD PTR [rip+0x5e954],r8        # 0x462240
  4038ec:	mov    QWORD PTR [r8+0x8],rax
  4038f0:	mov    DWORD PTR [rbx+0x20],0x1
  4038f7:	add    rsp,0x20
  4038fb:	pop    rbx
  4038fc:	ret    
  4038fd:	nop    DWORD PTR [rax]
  403900:	lea    rcx,[rip+0x5e979]        # 0x462280
  403907:	mov    edx,0x10
  40390c:	call   0x439960
  403911:	mov    rax,QWORD PTR [rip+0x5e980]        # 0x462298
  403918:	mov    r9,QWORD PTR [rip+0x5e981]        # 0x4622a0
  40391f:	jmp    0x403882
  403924:	or     BYTE PTR [rip+0x5e9a5],0x2        # 0x4622d0
  40392b:	jmp    0x403896
  403930:	push   rsi
  403931:	push   rbx
  403932:	sub    rsp,0x38
  403936:	mov    rbx,QWORD PTR [rip+0x576b3]        # 0x45aff0
  40393d:	mov    rsi,rcx
  403940:	jmp    0x403978
  403942:	cmp    eax,0xa
  403945:	je     0x403985
  403947:	mov    rdx,QWORD PTR [rbx+0x18]
  40394b:	lea    r8,[rdx+0x1]
  40394f:	cmp    r8,QWORD PTR [rbx+0x20]
  403953:	jbe    0x403972
  403955:	mov    edx,0x1
  40395a:	mov    rcx,rbx
  40395d:	mov    DWORD PTR [rsp+0x2c],eax
  403961:	call   0x439960
  403966:	mov    rdx,QWORD PTR [rbx+0x18]
  40396a:	mov    eax,DWORD PTR [rsp+0x2c]
  40396e:	lea    r8,[rdx+0x1]
  403972:	mov    QWORD PTR [rbx+0x18],r8
  403976:	mov    BYTE PTR [rdx],al
  403978:	mov    rcx,rsi
  40397b:	call   0x4494a0
  403980:	cmp    eax,0xffffffff
  403983:	jne    0x403942
  403985:	mov    rax,QWORD PTR [rbx+0x18]
  403989:	cmp    DWORD PTR [rbx+0x10],eax
  40398c:	je     0x4039f0
  40398e:	lea    rdx,[rax+0x1]
  403992:	cmp    rdx,QWORD PTR [rbx+0x20]
  403996:	ja     0x403a10
  403998:	mov    QWORD PTR [rbx+0x18],rdx
  40399c:	mov    BYTE PTR [rax],0x0
  40399f:	mov    rax,QWORD PTR [rbx+0x10]
  4039a3:	mov    rdx,QWORD PTR [rbx+0x18]
  4039a7:	cmp    rax,rdx
  4039aa:	je     0x403a30
  4039b0:	movsxd rcx,DWORD PTR [rbx+0x30]
  4039b4:	mov    r8d,ecx
  4039b7:	add    rcx,rdx
  4039ba:	not    r8d
  4039bd:	movsxd r8,r8d
  4039c0:	mov    rdx,r8
  4039c3:	mov    r8,QWORD PTR [rbx+0x20]
  4039c7:	and    rdx,rcx
  4039ca:	mov    rcx,QWORD PTR [rbx+0x8]
  4039ce:	mov    r9,rdx
  4039d1:	mov    QWORD PTR [rbx+0x18],rdx
  4039d5:	mov    rsi,r8
  4039d8:	sub    r9,rcx
  4039db:	sub    rsi,rcx
  4039de:	cmp    r9,rsi
  4039e1:	jg     0x403a00
  4039e3:	mov    QWORD PTR [rbx+0x10],rdx
  4039e7:	add    rsp,0x38
  4039eb:	pop    rbx
  4039ec:	pop    rsi
  4039ed:	ret    
  4039ee:	xchg   ax,ax
  4039f0:	xor    eax,eax
  4039f2:	add    rsp,0x38
  4039f6:	pop    rbx
  4039f7:	pop    rsi
  4039f8:	ret    
  4039f9:	nop    DWORD PTR [rax+0x0]
  403a00:	mov    QWORD PTR [rbx+0x18],r8
  403a04:	mov    rdx,r8
  403a07:	jmp    0x4039e3
  403a09:	nop    DWORD PTR [rax+0x0]
  403a10:	mov    edx,0x1
  403a15:	mov    rcx,rbx
  403a18:	call   0x439960
  403a1d:	mov    rax,QWORD PTR [rbx+0x18]
  403a21:	lea    rdx,[rax+0x1]
  403a25:	jmp    0x403998
  403a2a:	nop    WORD PTR [rax+rax*1+0x0]
  403a30:	or     BYTE PTR [rbx+0x50],0x2
  403a34:	jmp    0x4039b0
  403a39:	nop    DWORD PTR [rax+0x0]
  403a40:	push   rsi
  403a41:	push   rbx
  403a42:	sub    rsp,0x38
  403a46:	mov    rsi,rdx
  403a49:	mov    ebx,r8d
  403a4c:	call   0x403930
  403a51:	mov    edx,0x1
  403a56:	mov    rcx,rax
  403a59:	call   0x403730
  403a5e:	mov    rcx,QWORD PTR [rax+0x8]
  403a62:	test   rcx,rcx
  403a65:	je     0x403ae0
  403a67:	test   ebx,ebx
  403a69:	je     0x403a91
  403a6b:	cmp    rcx,rsi
  403a6e:	mov    edx,DWORD PTR [rax+0x10]
  403a71:	je     0x403a8a
  403a73:	test   edx,edx
  403a75:	je     0x403a8a
  403a77:	cmp    edx,0x1
  403a7a:	je     0x403aa0
  403a7c:	mov    r8d,DWORD PTR [rsi+0x20]
  403a80:	test   r8d,r8d
  403a83:	je     0x403ac0
  403a85:	mov    ebx,edx
  403a87:	mov    rsi,rcx
  403a8a:	mov    QWORD PTR [rax+0x8],rsi
  403a8e:	mov    DWORD PTR [rax+0x10],ebx
  403a91:	add    rsp,0x38
  403a95:	pop    rbx
  403a96:	pop    rsi
  403a97:	ret    
  403a98:	nop    DWORD PTR [rax+rax*1+0x0]
  403aa0:	mov    r9d,DWORD PTR [rcx+0x20]
  403aa4:	test   r9d,r9d
  403aa7:	jne    0x403a8a
  403aa9:	mov    QWORD PTR [rsp+0x28],rax
  403aae:	call   0x403860
  403ab3:	mov    rax,QWORD PTR [rsp+0x28]
  403ab8:	jmp    0x403a8a
  403aba:	nop    WORD PTR [rax+rax*1+0x0]
  403ac0:	mov    rcx,rsi
  403ac3:	mov    QWORD PTR [rsp+0x28],rax
  403ac8:	call   0x403860
  403acd:	mov    rax,QWORD PTR [rsp+0x28]
  403ad2:	mov    ebx,DWORD PTR [rax+0x10]
  403ad5:	mov    rsi,QWORD PTR [rax+0x8]
  403ad9:	jmp    0x403a8a
  403adb:	nop    DWORD PTR [rax+rax*1+0x0]
  403ae0:	mov    r9,QWORD PTR [rip+0x5e839]        # 0x462320
  403ae7:	mov    rdx,QWORD PTR [rip+0x5e82a]        # 0x462318
  403aee:	mov    rcx,r9
  403af1:	sub    rcx,rdx
  403af4:	cmp    rcx,0xf
  403af8:	jle    0x403b74
  403afa:	mov    r8,QWORD PTR [rip+0x5e80f]        # 0x462310
  403b01:	add    rdx,0x10
  403b05:	cmp    rdx,r8
  403b08:	je     0x403ba2
  403b0e:	movsxd r10,DWORD PTR [rip+0x5e81b]        # 0x462330
  403b15:	mov    r11,r9
  403b18:	mov    rcx,r10
  403b1b:	add    rdx,r10
  403b1e:	not    ecx
  403b20:	movsxd rcx,ecx
  403b23:	and    rdx,rcx
  403b26:	mov    rcx,QWORD PTR [rip+0x5e7db]        # 0x462308
  403b2d:	mov    r10,rdx
  403b30:	mov    QWORD PTR [rip+0x5e7e1],rdx        # 0x462318
  403b37:	sub    r10,rcx
  403b3a:	sub    r11,rcx
  403b3d:	cmp    r10,r11
  403b40:	jle    0x403b4c
  403b42:	mov    QWORD PTR [rip+0x5e7cf],r9        # 0x462318
  403b49:	mov    rdx,r9
  403b4c:	mov    QWORD PTR [rip+0x5e7bd],rdx        # 0x462310
  403b53:	mov    rdx,QWORD PTR [rip+0x5e77e]        # 0x4622d8
  403b5a:	mov    QWORD PTR [r8],rax
  403b5d:	mov    QWORD PTR [rip+0x5e774],r8        # 0x4622d8
  403b64:	mov    QWORD PTR [r8+0x8],rdx
  403b68:	mov    QWORD PTR [rax+0x8],rsi
  403b6c:	mov    DWORD PTR [rax+0x10],ebx
  403b6f:	jmp    0x403a91
  403b74:	lea    rcx,[rip+0x5e785]        # 0x462300
  403b7b:	mov    edx,0x10
  403b80:	mov    QWORD PTR [rsp+0x28],rax
  403b85:	call   0x439960
  403b8a:	mov    rdx,QWORD PTR [rip+0x5e787]        # 0x462318
  403b91:	mov    r9,QWORD PTR [rip+0x5e788]        # 0x462320
  403b98:	mov    rax,QWORD PTR [rsp+0x28]
  403b9d:	jmp    0x403afa
  403ba2:	or     BYTE PTR [rip+0x5e7a7],0x2        # 0x462350
  403ba9:	jmp    0x403b0e
  403bae:	xchg   ax,ax
  403bb0:	sub    rsp,0x28
  403bb4:	call   0x403930
  403bb9:	mov    rcx,rax
  403bbc:	add    rsp,0x28
  403bc0:	jmp    0x43bbf0
  403bc5:	nop
  403bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bd0:	push   r13
  403bd2:	push   r12
  403bd4:	push   rbp
  403bd5:	push   rdi
  403bd6:	push   rsi
  403bd7:	push   rbx
  403bd8:	sub    rsp,0x38
  403bdc:	lea    rdx,[rip+0x4939d]        # 0x44cf80
  403be3:	mov    rbp,rcx
  403be6:	mov    rcx,QWORD PTR [rcx]
  403be9:	call   0x4494f0
  403bee:	cmp    DWORD PTR [rip+0x5e783],0x1        # 0x462378
  403bf5:	mov    rsi,rax
  403bf8:	jle    0x403c17
  403bfa:	mov    rbx,QWORD PTR [rbp+0x0]
  403bfe:	call   QWORD PTR [rip+0x60b30]        # 0x464734
  403c04:	lea    rdx,[rip+0x49377]        # 0x44cf82
  403c0b:	lea    rcx,[rax+0x60]
  403c0f:	mov    r8,rbx
  403c12:	call   0x4498d0
  403c17:	mov    r13,QWORD PTR [rip+0x573c2]        # 0x45afe0
  403c1e:	mov    rbx,QWORD PTR [rip+0x573cb]        # 0x45aff0
  403c25:	lea    r12,[rsp+0x2f]
  403c2a:	lea    rdi,[rip+0x49383]        # 0x44cfb4
  403c31:	lea    rdx,[rip+0x4935f]        # 0x44cf97
  403c38:	mov    r8,r12
  403c3b:	mov    rcx,rsi
  403c3e:	call   0x449870
  403c43:	cmp    eax,0x1
  403c46:	jne    0x403d13
  403c4c:	movzx  eax,BYTE PTR [rsp+0x2f]
  403c51:	lea    r9d,[rax-0x41]
  403c55:	cmp    r9b,0xf
  403c59:	ja     0x403c81
  403c5b:	movzx  r9d,r9b
  403c5f:	movsxd rax,DWORD PTR [rdi+r9*4]
  403c63:	add    rax,rdi
  403c66:	jmp    rax
  403c68:	nop    DWORD PTR [rax+rax*1+0x0]
  403c70:	mov    r8d,0x2
  403c76:	mov    rdx,rbp
  403c79:	mov    rcx,rsi
  403c7c:	call   0x403a40
  403c81:	mov    rdx,QWORD PTR [r13+0x0]
  403c85:	cmp    rdx,QWORD PTR [rbx+0x8]
  403c89:	jbe    0x403cc0
  403c8b:	cmp    rdx,QWORD PTR [rbx+0x20]
  403c8f:	jae    0x403cc0
  403c91:	mov    QWORD PTR [rbx+0x10],rdx
  403c95:	mov    QWORD PTR [rbx+0x18],rdx
  403c99:	jmp    0x403c31
  403c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  403ca0:	mov    rdx,rbp
  403ca3:	mov    r8d,0x1
  403ca9:	mov    rcx,rsi
  403cac:	call   0x403a40
  403cb1:	mov    rdx,QWORD PTR [r13+0x0]
  403cb5:	cmp    rdx,QWORD PTR [rbx+0x8]
  403cb9:	ja     0x403c8b
  403cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  403cc0:	mov    rcx,QWORD PTR [rip+0x57329]        # 0x45aff0
  403cc7:	call   0x439b90
  403ccc:	jmp    0x403c31
  403cd1:	mov    rcx,rsi
  403cd4:	call   0x403bb0
  403cd9:	mov    QWORD PTR [rbp+0x8],rax
  403cdd:	jmp    0x403c81
  403cdf:	nop
  403ce0:	mov    rcx,rsi
  403ce3:	call   0x403bb0
  403ce8:	mov    QWORD PTR [rbp+0x18],rax
  403cec:	jmp    0x403c81
  403cee:	xchg   ax,ax
  403cf0:	mov    rcx,rsi
  403cf3:	call   0x403bb0
  403cf8:	mov    QWORD PTR [rbp+0x10],rax
  403cfc:	jmp    0x403c81
  403cfe:	xchg   ax,ax
  403d00:	xor    r8d,r8d
  403d03:	mov    rdx,rbp
  403d06:	mov    rcx,rsi
  403d09:	call   0x403a40
  403d0e:	jmp    0x403c81
  403d13:	mov    rcx,rsi
  403d16:	call   0x449518
  403d1b:	cmp    QWORD PTR [rbp+0x8],0x0
  403d20:	je     0x403d58
  403d22:	cmp    QWORD PTR [rbp+0x10],0x0
  403d27:	je     0x403d40
  403d29:	add    rsp,0x38
  403d2d:	pop    rbx
  403d2e:	pop    rsi
  403d2f:	pop    rdi
  403d30:	pop    rbp
  403d31:	pop    r12
  403d33:	pop    r13
  403d35:	ret    
  403d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d40:	lea    rax,[rip+0x49268]        # 0x44cfaf
  403d47:	mov    QWORD PTR [rbp+0x10],rax
  403d4b:	add    rsp,0x38
  403d4f:	pop    rbx
  403d50:	pop    rsi
  403d51:	pop    rdi
  403d52:	pop    rbp
  403d53:	pop    r12
  403d55:	pop    r13
  403d57:	ret    
  403d58:	lea    rcx,[rip+0x4923c]        # 0x44cf9b
  403d5f:	call   0x449498
  403d64:	mov    QWORD PTR [rbp+0x8],rax
  403d68:	jmp    0x403d22
  403d6a:	nop    WORD PTR [rax+rax*1+0x0]
  403d70:	push   rdi
  403d71:	push   rsi
  403d72:	push   rbx
  403d73:	sub    rsp,0x20
  403d77:	test   rcx,rcx
  403d7a:	je     0x403dce
  403d7c:	mov    rbx,rcx
  403d7f:	mov    ecx,DWORD PTR [rcx+0x18]
  403d82:	test   ecx,ecx
  403d84:	jne    0x403df0
  403d86:	mov    edx,DWORD PTR [rbx+0x14]
  403d89:	test   edx,edx
  403d8b:	jne    0x403dce
  403d8d:	cmp    DWORD PTR [rip+0x5e5e4],0x1        # 0x462378
  403d94:	jle    0x403dbc
  403d96:	mov    rax,QWORD PTR [rbx+0x8]
  403d9a:	mov    rsi,QWORD PTR [rbx]
  403d9d:	mov    rdi,QWORD PTR [rax]
  403da0:	call   QWORD PTR [rip+0x6098e]        # 0x464734
  403da6:	lea    rdx,[rip+0x4929e]        # 0x44d04b
  403dad:	lea    rcx,[rax+0x60]
  403db1:	mov    r8,rsi
  403db4:	mov    r9,rdi
  403db7:	call   0x4498d0
  403dbc:	mov    rcx,QWORD PTR [rbx+0x8]
  403dc0:	mov    DWORD PTR [rbx+0x14],0x1
  403dc7:	mov    eax,DWORD PTR [rcx+0x20]
  403dca:	test   eax,eax
  403dcc:	je     0x403de0
  403dce:	mov    eax,0x1
  403dd3:	add    rsp,0x20
  403dd7:	pop    rbx
  403dd8:	pop    rsi
  403dd9:	pop    rdi
  403dda:	ret    
  403ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  403de0:	call   0x403860
  403de5:	jmp    0x403dce
  403de7:	nop    WORD PTR [rax+rax*1+0x0]
  403df0:	mov    rax,QWORD PTR [rbx+0x8]
  403df4:	mov    rdx,QWORD PTR [rbx]
  403df7:	lea    rcx,[rip+0x491fa]        # 0x44cff8
  403dfe:	mov    r8,QWORD PTR [rax]
  403e01:	call   0x406e60
  403e06:	xor    eax,eax
  403e08:	add    rsp,0x20
  403e0c:	pop    rbx
  403e0d:	pop    rsi
  403e0e:	pop    rdi
  403e0f:	ret    
  403e10:	push   r15
  403e12:	push   r14
  403e14:	push   r13
  403e16:	push   r12
  403e18:	push   rbp
  403e19:	push   rdi
  403e1a:	push   rsi
  403e1b:	push   rbx
  403e1c:	sub    rsp,0x28
  403e20:	lea    rdx,[rip+0x49159]        # 0x44cf80
  403e27:	xor    r14d,r14d
  403e2a:	call   0x4494f0
  403e2f:	mov    rbp,QWORD PTR [rip+0x56ffa]        # 0x45ae30
  403e36:	mov    r12,rax
  403e39:	nop    DWORD PTR [rax+0x0]
  403e40:	mov    rcx,r12
  403e43:	call   0x403930
  403e48:	test   rax,rax
  403e4b:	mov    r13,rax
  403e4e:	je     0x403e79
  403e50:	test   r14d,r14d
  403e53:	je     0x403eae
  403e55:	lea    rdx,[rip+0x4920b]        # 0x44d067
  403e5c:	mov    rcx,r13
  403e5f:	call   0x449388
  403e64:	test   rax,rax
  403e67:	je     0x403eae
  403e69:	mov    rcx,r12
  403e6c:	call   0x403930
  403e71:	test   rax,rax
  403e74:	mov    r13,rax
  403e77:	jne    0x403e50
  403e79:	mov    rcx,r12
  403e7c:	call   0x449518
  403e81:	xor    eax,eax
  403e83:	cmp    QWORD PTR [rip+0x5e3b5],0x0        # 0x462240
  403e8b:	setne  al
  403e8e:	add    rsp,0x28
  403e92:	pop    rbx
  403e93:	pop    rsi
  403e94:	pop    rdi
  403e95:	pop    rbp
  403e96:	pop    r12
  403e98:	pop    r13
  403e9a:	pop    r14
  403e9c:	pop    r15
  403e9e:	ret    
  403e9f:	nop
  403ea0:	movzx  edx,al
  403ea3:	test   BYTE PTR [rbp+rdx*2+0x0],0x40
  403ea8:	je     0x403ec0
  403eaa:	add    r13,0x1
  403eae:	movzx  eax,BYTE PTR [r13+0x0]
  403eb3:	test   al,al
  403eb5:	jne    0x403ea0
  403eb7:	xor    r14d,r14d
  403eba:	jmp    0x403e40
  403ebc:	nop    DWORD PTR [rax+0x0]
  403ec0:	mov    rbx,r13
  403ec3:	jmp    0x403ed0
  403ec5:	test   BYTE PTR [rbp+rdx*2+0x0],0x40
  403eca:	jne    0x403f50
  403ed0:	add    rbx,0x1
  403ed4:	movzx  edx,BYTE PTR [rbx]
  403ed7:	test   dl,dl
  403ed9:	jne    0x403ec5
  403edb:	cmp    al,0x2e
  403edd:	je     0x4040e1
  403ee3:	mov    BYTE PTR [rbx],0x0
  403ee6:	xor    edx,edx
  403ee8:	mov    rcx,r13
  403eeb:	call   0x403730
  403ef0:	mov    r15,rax
  403ef3:	xor    r14d,r14d
  403ef6:	mov    rcx,r15
  403ef9:	call   0x403d70
  403efe:	movzx  ebx,al
  403f01:	mov    rax,QWORD PTR [rip+0x570d8]        # 0x45afe0
  403f08:	mov    rdx,QWORD PTR [rax]
  403f0b:	mov    rax,QWORD PTR [rip+0x570de]        # 0x45aff0
  403f12:	cmp    rdx,QWORD PTR [rax+0x8]
  403f16:	jbe    0x403f40
  403f18:	cmp    rdx,QWORD PTR [rax+0x20]
  403f1c:	jae    0x403f40
  403f1e:	mov    QWORD PTR [rax+0x10],rdx
  403f22:	mov    QWORD PTR [rax+0x18],rdx
  403f26:	test   ebx,ebx
  403f28:	jne    0x403e40
  403f2e:	mov    rcx,r12
  403f31:	call   0x449518
  403f36:	xor    eax,eax
  403f38:	jmp    0x403e8e
  403f3d:	nop    DWORD PTR [rax]
  403f40:	mov    rcx,QWORD PTR [rip+0x570a9]        # 0x45aff0
  403f47:	call   0x439b90
  403f4c:	jmp    0x403f26
  403f4e:	xchg   ax,ax
  403f50:	xor    esi,esi
  403f52:	cmp    al,0x2e
  403f54:	je     0x4040e6
  403f5a:	xor    edx,edx
  403f5c:	mov    BYTE PTR [rbx],0x0
  403f5f:	mov    rcx,r13
  403f62:	call   0x403730
  403f67:	test   rax,rax
  403f6a:	mov    r15,rax
  403f6d:	sete   al
  403f70:	cmp    al,sil
  403f73:	jbe    0x403ef3
  403f79:	add    rbx,0x1
  403f7d:	lea    rdx,[rip+0x490e8]        # 0x44d06c
  403f84:	mov    rcx,rbx
  403f87:	call   0x449388
  403f8c:	test   rax,rax
  403f8f:	je     0x403fc1
  403f91:	mov    edx,0x20
  403f96:	mov    rcx,rbx
  403f99:	call   0x449398
  403f9e:	cmp    BYTE PTR [rax+0x1],0x2e
  403fa2:	lea    rdx,[rax+0x2]
  403fa6:	lea    rcx,[rax+0x1]
  403faa:	cmove  rcx,rdx
  403fae:	xor    edx,edx
  403fb0:	call   0x403730
  403fb5:	test   rax,rax
  403fb8:	mov    r15,rax
  403fbb:	jne    0x403ef3
  403fc1:	lea    rdi,[rip+0x490b7]        # 0x44d07f
  403fc8:	mov    ecx,0x11
  403fcd:	mov    rsi,rbx
  403fd0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403fd2:	setb   dl
  403fd5:	seta   al
  403fd8:	sub    eax,edx
  403fda:	mov    edx,0x60
  403fdf:	movsx  eax,al
  403fe2:	test   eax,eax
  403fe4:	cmove  rbx,r13
  403fe8:	xor    r14d,r14d
  403feb:	cmp    eax,0x1
  403fee:	mov    rcx,rbx
  403ff1:	setb   r14b
  403ff5:	call   0x4493e8
  403ffa:	test   rax,rax
  403ffd:	je     0x4040ef
  404003:	lea    rdi,[rax+0x1]
  404007:	mov    edx,0x27
  40400c:	mov    rcx,rdi
  40400f:	call   0x4493e8
  404014:	mov    rsi,rax
  404017:	xor    eax,eax
  404019:	cmp    BYTE PTR [rdi],0x2e
  40401c:	mov    BYTE PTR [rdi-0x1],0x0
  404020:	sete   al
  404023:	add    rdi,rax
  404026:	test   rsi,rsi
  404029:	je     0x403ef6
  40402f:	test   r14d,r14d
  404032:	jne    0x40404c
  404034:	lea    rdx,[rip+0x49055]        # 0x44d090
  40403b:	mov    rcx,rbx
  40403e:	call   0x449388
  404043:	test   rax,rax
  404046:	je     0x40411e
  40404c:	mov    BYTE PTR [rsi],0x0
  40404f:	xor    edx,edx
  404051:	mov    rcx,rdi
  404054:	call   0x4037b0
  404059:	test   rax,rax
  40405c:	mov    rsi,rax
  40405f:	je     0x404170
  404065:	mov    rax,QWORD PTR [rax+0x8]
  404069:	mov    ebx,0x1
  40406e:	test   rax,rax
  404071:	je     0x403f01
  404077:	mov    r15d,DWORD PTR [rax+0x4]
  40407b:	xor    edi,edi
  40407d:	xor    r13d,r13d
  404080:	mov    ebx,0x1
  404085:	test   r15d,r15d
  404088:	jne    0x4040c6
  40408a:	jmp    0x403f01
  40408f:	nop
  404090:	mov    edi,DWORD PTR [rax+0x10]
  404093:	cmp    r15d,0x1
  404097:	jle    0x4040a0
  404099:	mov    DWORD PTR [rax+0x18],0x0
  4040a0:	mov    rcx,rax
  4040a3:	call   0x403d70
  4040a8:	movzx  ebx,al
  4040ab:	mov    rax,QWORD PTR [rsi+0x8]
  4040af:	add    r13d,0x1
  4040b3:	test   rax,rax
  4040b6:	je     0x403f01
  4040bc:	cmp    r13d,DWORD PTR [rax+0x4]
  4040c0:	jae    0x403f01
  4040c6:	mov    edx,r13d
  4040c9:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  4040ce:	xor    edx,edx
  4040d0:	call   0x403730
  4040d5:	test   r13d,r13d
  4040d8:	je     0x404090
  4040da:	cmp    DWORD PTR [rax+0x10],edi
  4040dd:	jne    0x4040ab
  4040df:	jmp    0x404093
  4040e1:	mov    esi,0x1
  4040e6:	add    r13,0x1
  4040ea:	jmp    0x403f5a
  4040ef:	mov    edx,0x22
  4040f4:	mov    rcx,rbx
  4040f7:	call   0x4493e8
  4040fc:	test   rax,rax
  4040ff:	je     0x404182
  404105:	lea    rdi,[rax+0x1]
  404109:	mov    edx,0x22
  40410e:	mov    rcx,rdi
  404111:	call   0x4493e8
  404116:	mov    rsi,rax
  404119:	jmp    0x404017
  40411e:	lea    rdx,[rip+0x48f74]        # 0x44d099
  404125:	mov    rcx,rbx
  404128:	call   0x449388
  40412d:	test   rax,rax
  404130:	jne    0x40404c
  404136:	lea    rdx,[rip+0x48f66]        # 0x44d0a3
  40413d:	mov    rcx,rbx
  404140:	call   0x449388
  404145:	test   rax,rax
  404148:	jne    0x40404c
  40414e:	lea    rdx,[rip+0x48f59]        # 0x44d0ae
  404155:	mov    rcx,rbx
  404158:	call   0x449388
  40415d:	test   rax,rax
  404160:	jne    0x40404c
  404166:	jmp    0x403ef6
  40416b:	nop    DWORD PTR [rax+rax*1+0x0]
  404170:	xor    edx,edx
  404172:	mov    rcx,rdi
  404175:	call   0x403730
  40417a:	mov    r15,rax
  40417d:	jmp    0x403ef6
  404182:	mov    edx,0x27
  404187:	mov    rcx,rbx
  40418a:	call   0x4493e8
  40418f:	test   rax,rax
  404192:	jne    0x404003
  404198:	xor    edx,edx
  40419a:	mov    rcx,rbx
  40419d:	mov    rdi,rbx
  4041a0:	call   0x4493e8
  4041a5:	cmp    rax,rbx
  4041a8:	mov    rsi,rax
  4041ab:	jne    0x404017
  4041b1:	mov    rsi,rbx
  4041b4:	xor    edi,edi
  4041b6:	jmp    0x40402f
  4041bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4041c0:	push   r15
  4041c2:	push   r14
  4041c4:	push   r13
  4041c6:	push   r12
  4041c8:	push   rbp
  4041c9:	push   rdi
  4041ca:	push   rsi
  4041cb:	push   rbx
  4041cc:	sub    rsp,0xa8
  4041d3:	lea    rcx,[rip+0x48edc]        # 0x44d0b6
  4041da:	call   0x43bbf0
  4041df:	mov    rcx,rax
  4041e2:	call   0x449328
  4041e7:	lea    rcx,[rip+0x48ed7]        # 0x44d0c5
  4041ee:	call   0x43bbf0
  4041f3:	mov    rcx,rax
  4041f6:	call   0x449328
  4041fb:	mov    rdx,QWORD PTR [rip+0x5e03e]        # 0x462240
  404202:	test   rdx,rdx
  404205:	je     0x404659
  40420b:	mov    r15,QWORD PTR [rip+0x56c8e]        # 0x45aea0
  404212:	mov    rbx,QWORD PTR [rip+0x56dd7]        # 0x45aff0
  404219:	lea    rbp,[rsp+0x40]
  40421e:	mov    r14,QWORD PTR [rip+0x56c3b]        # 0x45ae60
  404225:	cmp    QWORD PTR [rip+0x5e05c],rdx        # 0x462288
  40422c:	mov    rax,QWORD PTR [rdx+0x8]
  404230:	mov    rsi,QWORD PTR [rdx]
  404233:	mov    QWORD PTR [rip+0x5e006],rax        # 0x462240
  40423a:	jae    0x4046f0
  404240:	cmp    QWORD PTR [rip+0x5e059],rdx        # 0x4622a0
  404247:	jbe    0x4046f0
  40424d:	mov    QWORD PTR [rip+0x5e03c],rdx        # 0x462290
  404254:	mov    QWORD PTR [rip+0x5e03d],rdx        # 0x462298
  40425b:	mov    rcx,QWORD PTR [rsi]
  40425e:	lea    rdx,[rip+0x48d1b]        # 0x44cf80
  404265:	mov    DWORD PTR [rsi+0x20],0x0
  40426c:	call   0x4494f0
  404271:	mov    rcx,QWORD PTR [rsi]
  404274:	lea    rdx,[rip+0x48ee3]        # 0x44d15e
  40427b:	mov    rdi,rax
  40427e:	call   0x4035f0
  404283:	lea    rdx,[rip+0x48ed9]        # 0x44d163
  40428a:	mov    rcx,rax
  40428d:	mov    r13,rax
  404290:	call   0x4494f0
  404295:	mov    r12,rax
  404298:	jmp    0x4042b3
  40429a:	nop    WORD PTR [rax+rax*1+0x0]
  4042a0:	cmp    al,0x4f
  4042a2:	je     0x4042cb
  4042a4:	lea    rdx,[rip+0x48e28]        # 0x44d0d3
  4042ab:	mov    rcx,r12
  4042ae:	call   0x4498d0
  4042b3:	mov    rcx,rdi
  4042b6:	call   0x403930
  4042bb:	test   rax,rax
  4042be:	mov    r8,rax
  4042c1:	je     0x404315
  4042c3:	movzx  eax,BYTE PTR [r8]
  4042c7:	cmp    al,0x43
  4042c9:	jne    0x4042a0
  4042cb:	lea    rcx,[r8+0x2]
  4042cf:	xor    edx,edx
  4042d1:	mov    QWORD PTR [rsp+0x38],r8
  4042d6:	call   0x403730
  4042db:	cmp    QWORD PTR [rax+0x8],rsi
  4042df:	mov    r8,QWORD PTR [rsp+0x38]
  4042e4:	je     0x404712
  4042ea:	cmp    BYTE PTR [r8],0x43
  4042ee:	jne    0x4042a4
  4042f0:	mov    DWORD PTR [rax+0x14],0x0
  4042f7:	mov    DWORD PTR [rax+0x18],0x1
  4042fe:	cmp    BYTE PTR [r8],0x4f
  404302:	je     0x404770
  404308:	mov    BYTE PTR [r8],0x4f
  40430c:	mov    DWORD PTR [rax+0x10],0x0
  404313:	jmp    0x4042a4
  404315:	mov    rcx,rdi
  404318:	call   0x449518
  40431d:	mov    rcx,r12
  404320:	call   0x449518
  404325:	mov    rcx,QWORD PTR [rsi]
  404328:	call   0x449418
  40432d:	cmp    eax,0xffffffff
  404330:	je     0x4047a9
  404336:	mov    rdx,QWORD PTR [rsi]
  404339:	mov    rcx,r13
  40433c:	call   0x449410
  404341:	cmp    eax,0xffffffff
  404344:	je     0x40479d
  40434a:	cmp    QWORD PTR [rsi+0x8],0x0
  40434f:	je     0x404789
  404355:	lea    r9,[rip+0x37794]        # 0x43baf0
  40435c:	xor    edx,edx
  40435e:	xor    r8d,r8d
  404361:	mov    QWORD PTR [rsp+0x20],r15
  404366:	mov    rcx,rbp
  404369:	call   0x439830
  40436e:	mov    rax,QWORD PTR [rbx+0x18]
  404372:	lea    rdx,[rax+0x8]
  404376:	cmp    QWORD PTR [rbx+0x20],rdx
  40437a:	jb     0x404722
  404380:	mov    rdx,QWORD PTR [r14]
  404383:	mov    QWORD PTR [rax],rdx
  404386:	mov    rax,QWORD PTR [rbx+0x18]
  40438a:	mov    rcx,QWORD PTR [rsi+0x8]
  40438e:	add    rax,0x8
  404392:	mov    QWORD PTR [rbx+0x18],rax
  404396:	cmp    BYTE PTR [rcx],0x0
  404399:	je     0x404531
  40439f:	mov    edx,0x27
  4043a4:	call   0x4493e8
  4043a9:	test   rax,rax
  4043ac:	je     0x404672
  4043b2:	lea    rdi,[rax+0x1]
  4043b6:	mov    edx,0x27
  4043bb:	mov    rcx,rdi
  4043be:	call   0x4493e8
  4043c3:	test   rax,rax
  4043c6:	mov    r13,rax
  4043c9:	je     0x404672
  4043cf:	mov    rdx,rax
  4043d2:	mov    rcx,QWORD PTR [rsp+0x58]
  4043d7:	sub    rdx,rdi
  4043da:	movsxd r12,edx
  4043dd:	lea    rax,[rcx+r12*1]
  4043e1:	cmp    QWORD PTR [rsp+0x60],rax
  4043e6:	jb     0x404660
  4043ec:	mov    r8,r12
  4043ef:	mov    rdx,rdi
  4043f2:	call   0x449450
  4043f7:	add    r12,QWORD PTR [rsp+0x58]
  4043fc:	mov    QWORD PTR [rsp+0x58],r12
  404401:	cmp    BYTE PTR [r13+0x1],0x5c
  404406:	jne    0x404490
  40440c:	cmp    BYTE PTR [r13+0x2],0x27
  404411:	jne    0x404490
  404413:	cmp    BYTE PTR [r13+0x3],0x27
  404418:	je     0x40444a
  40441a:	jmp    0x404490
  40441c:	nop    DWORD PTR [rax+0x0]
  404420:	mov    r8,r12
  404423:	mov    rdx,r13
  404426:	call   0x449450
  40442b:	add    r12,QWORD PTR [rsp+0x58]
  404430:	mov    QWORD PTR [rsp+0x58],r12
  404435:	cmp    BYTE PTR [rdi+0x1],0x5c
  404439:	jne    0x404493
  40443b:	cmp    BYTE PTR [rdi+0x2],0x27
  40443f:	jne    0x404493
  404441:	cmp    BYTE PTR [rdi+0x3],0x27
  404445:	mov    r13,rdi
  404448:	jne    0x404493
  40444a:	lea    rcx,[r13+0x4]
  40444e:	mov    edx,0x27
  404453:	call   0x4493e8
  404458:	test   rax,rax
  40445b:	mov    rdi,rax
  40445e:	je     0x404672
  404464:	add    r13,0x3
  404468:	mov    rdx,rax
  40446b:	mov    rcx,QWORD PTR [rsp+0x58]
  404470:	sub    rdx,r13
  404473:	movsxd r12,edx
  404476:	lea    rax,[rcx+r12*1]
  40447a:	cmp    QWORD PTR [rsp+0x60],rax
  40447f:	jae    0x404420
  404481:	mov    rcx,rbp
  404484:	call   0x439960
  404489:	mov    rcx,QWORD PTR [rsp+0x58]
  40448e:	jmp    0x404420
  404490:	mov    rdi,r13
  404493:	lea    rax,[r12+0x1]
  404498:	cmp    rax,QWORD PTR [rsp+0x60]
  40449d:	ja     0x4046d1
  4044a3:	mov    QWORD PTR [rsp+0x58],rax
  4044a8:	mov    BYTE PTR [r12],0x0
  4044ad:	mov    r8,QWORD PTR [rbx+0x18]
  4044b1:	lea    rax,[r8+0x8]
  4044b5:	cmp    QWORD PTR [rbx+0x20],rax
  4044b9:	jb     0x4046a0
  4044bf:	mov    r9,QWORD PTR [rsp+0x50]
  4044c4:	mov    rax,QWORD PTR [rsp+0x58]
  4044c9:	cmp    rax,r9
  4044cc:	je     0x4046c4
  4044d2:	movsxd rdx,DWORD PTR [rsp+0x70]
  4044d7:	mov    ecx,edx
  4044d9:	add    rdx,rax
  4044dc:	not    ecx
  4044de:	movsxd rcx,ecx
  4044e1:	mov    rax,rcx
  4044e4:	mov    rcx,QWORD PTR [rsp+0x48]
  4044e9:	and    rax,rdx
  4044ec:	mov    rdx,QWORD PTR [rsp+0x60]
  4044f1:	mov    r10,rax
  4044f4:	mov    QWORD PTR [rsp+0x58],rax
  4044f9:	sub    r10,rcx
  4044fc:	mov    r11,rdx
  4044ff:	sub    r11,rcx
  404502:	cmp    r10,r11
  404505:	jle    0x40450f
  404507:	mov    QWORD PTR [rsp+0x58],rdx
  40450c:	mov    rax,rdx
  40450f:	mov    QWORD PTR [rsp+0x50],rax
  404514:	mov    QWORD PTR [r8],r9
  404517:	lea    rcx,[rdi+0x1]
  40451b:	mov    rax,QWORD PTR [rbx+0x18]
  40451f:	add    rax,0x8
  404523:	mov    QWORD PTR [rbx+0x18],rax
  404527:	cmp    BYTE PTR [rdi+0x1],0x0
  40452b:	jne    0x40439f
  404531:	lea    rdx,[rax+0x8]
  404535:	cmp    QWORD PTR [rbx+0x20],rdx
  404539:	jb     0x404684
  40453f:	nop
  404540:	mov    rdx,QWORD PTR [rsi+0x18]
  404544:	mov    QWORD PTR [rax],rdx
  404547:	mov    rax,QWORD PTR [rbx+0x18]
  40454b:	lea    rdx,[rax+0x8]
  40454f:	add    rax,0x10
  404553:	cmp    QWORD PTR [rbx+0x20],rax
  404557:	mov    QWORD PTR [rbx+0x18],rdx
  40455b:	jb     0x40475a
  404561:	mov    QWORD PTR [rdx],0x0
  404568:	mov    rax,QWORD PTR [rbx+0x18]
  40456c:	mov    rdi,QWORD PTR [rbx+0x10]
  404570:	add    rax,0x8
  404574:	cmp    rax,rdi
  404577:	mov    QWORD PTR [rbx+0x18],rax
  40457b:	je     0x404780
  404581:	movsxd rcx,DWORD PTR [rbx+0x30]
  404585:	mov    rdx,rcx
  404588:	add    rax,rcx
  40458b:	mov    rcx,QWORD PTR [rbx+0x20]
  40458f:	not    edx
  404591:	movsxd rdx,edx
  404594:	and    rax,rdx
  404597:	mov    rdx,QWORD PTR [rbx+0x8]
  40459b:	mov    r11,rcx
  40459e:	mov    r8,rax
  4045a1:	mov    QWORD PTR [rbx+0x18],rax
  4045a5:	sub    r8,rdx
  4045a8:	sub    r11,rdx
  4045ab:	cmp    r8,r11
  4045ae:	jle    0x4045b7
  4045b0:	mov    QWORD PTR [rbx+0x18],rcx
  4045b4:	mov    rax,rcx
  4045b7:	mov    QWORD PTR [rbx+0x10],rax
  4045bb:	mov    eax,DWORD PTR [rip+0x5ddb7]        # 0x462378
  4045c1:	test   eax,eax
  4045c3:	jne    0x404738
  4045c9:	mov    rcx,QWORD PTR [rsi+0x10]
  4045cd:	call   0x4492e8
  4045d2:	test   eax,eax
  4045d4:	jne    0x4045eb
  4045d6:	mov    rcx,QWORD PTR [r14]
  4045d9:	xor    r9d,r9d
  4045dc:	xor    r8d,r8d
  4045df:	mov    rdx,rdi
  4045e2:	call   0x403830
  4045e7:	test   eax,eax
  4045e9:	je     0x404601
  4045eb:	xor    eax,eax
  4045ed:	add    rsp,0xa8
  4045f4:	pop    rbx
  4045f5:	pop    rsi
  4045f6:	pop    rdi
  4045f7:	pop    rbp
  4045f8:	pop    r12
  4045fa:	pop    r13
  4045fc:	pop    r14
  4045fe:	pop    r15
  404600:	ret    
  404601:	mov    rcx,QWORD PTR [rip+0x5dd68]        # 0x462370
  404608:	call   0x4492e8
  40460d:	test   eax,eax
  40460f:	jne    0x4045eb
  404611:	mov    rcx,rsi
  404614:	call   0x403bd0
  404619:	xor    edx,edx
  40461b:	mov    rcx,rbp
  40461e:	call   0x439b90
  404623:	mov    rax,QWORD PTR [rip+0x569b6]        # 0x45afe0
  40462a:	mov    rdx,QWORD PTR [rax]
  40462d:	cmp    rdx,QWORD PTR [rbx+0x8]
  404631:	jbe    0x404701
  404637:	cmp    rdx,QWORD PTR [rbx+0x20]
  40463b:	jae    0x404701
  404641:	mov    QWORD PTR [rbx+0x10],rdx
  404645:	mov    QWORD PTR [rbx+0x18],rdx
  404649:	mov    rdx,QWORD PTR [rip+0x5dbf0]        # 0x462240
  404650:	test   rdx,rdx
  404653:	jne    0x404225
  404659:	mov    eax,0x1
  40465e:	jmp    0x4045ed
  404660:	mov    rcx,rbp
  404663:	call   0x439960
  404668:	mov    rcx,QWORD PTR [rsp+0x58]
  40466d:	jmp    0x4043ec
  404672:	mov    rax,QWORD PTR [rbx+0x18]
  404676:	lea    rdx,[rax+0x8]
  40467a:	cmp    QWORD PTR [rbx+0x20],rdx
  40467e:	jae    0x404540
  404684:	mov    edx,0x8
  404689:	mov    rcx,rbx
  40468c:	call   0x439960
  404691:	mov    rax,QWORD PTR [rbx+0x18]
  404695:	jmp    0x404540
  40469a:	nop    WORD PTR [rax+rax*1+0x0]
  4046a0:	mov    edx,0x8
  4046a5:	mov    rcx,rbx
  4046a8:	call   0x439960
  4046ad:	mov    r9,QWORD PTR [rsp+0x50]
  4046b2:	mov    rax,QWORD PTR [rsp+0x58]
  4046b7:	mov    r8,QWORD PTR [rbx+0x18]
  4046bb:	cmp    rax,r9
  4046be:	jne    0x4044d2
  4046c4:	or     BYTE PTR [rsp+0x90],0x2
  4046cc:	jmp    0x4044d2
  4046d1:	mov    edx,0x1
  4046d6:	mov    rcx,rbp
  4046d9:	call   0x439960
  4046de:	mov    r12,QWORD PTR [rsp+0x58]
  4046e3:	lea    rax,[r12+0x1]
  4046e8:	jmp    0x4044a3
  4046ed:	nop    DWORD PTR [rax]
  4046f0:	lea    rcx,[rip+0x5db89]        # 0x462280
  4046f7:	call   0x439b90
  4046fc:	jmp    0x40425b
  404701:	mov    rcx,QWORD PTR [rip+0x568e8]        # 0x45aff0
  404708:	call   0x439b90
  40470d:	jmp    0x404649
  404712:	mov    edx,DWORD PTR [rax+0x14]
  404715:	test   edx,edx
  404717:	jne    0x4042f0
  40471d:	jmp    0x4042a4
  404722:	mov    edx,0x8
  404727:	mov    rcx,rbx
  40472a:	call   0x439960
  40472f:	mov    rax,QWORD PTR [rbx+0x18]
  404733:	jmp    0x404380
  404738:	mov    r12,QWORD PTR [rsi+0x18]
  40473c:	call   QWORD PTR [rip+0x5fff2]        # 0x464734
  404742:	lea    rdx,[rip+0x489fc]        # 0x44d145
  404749:	lea    rcx,[rax+0x60]
  40474d:	mov    r8,r12
  404750:	call   0x4498d0
  404755:	jmp    0x4045c9
  40475a:	mov    edx,0x8
  40475f:	mov    rcx,rbx
  404762:	call   0x439960
  404767:	mov    rdx,QWORD PTR [rbx+0x18]
  40476b:	jmp    0x404561
  404770:	mov    BYTE PTR [r8],0x43
  404774:	mov    DWORD PTR [rax+0x10],0x1
  40477b:	jmp    0x4042a4
  404780:	or     BYTE PTR [rbx+0x50],0x2
  404784:	jmp    0x404581
  404789:	mov    rdx,QWORD PTR [rsi]
  40478c:	lea    rcx,[rip+0x48975]        # 0x44d108
  404793:	call   0x406e60
  404798:	jmp    0x4045eb
  40479d:	lea    rcx,[rip+0x4894a]        # 0x44d0ee
  4047a4:	call   0x407080
  4047a9:	lea    rcx,[rip+0x48927]        # 0x44d0d7
  4047b0:	call   0x407080
  4047b5:	nop
  4047b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047c0:	push   r15
  4047c2:	push   r14
  4047c4:	push   r13
  4047c6:	push   r12
  4047c8:	push   rbp
  4047c9:	push   rdi
  4047ca:	push   rsi
  4047cb:	push   rbx
  4047cc:	sub    rsp,0x48
  4047d0:	mov    rbp,QWORD PTR [rip+0x56719]        # 0x45aef0
  4047d7:	mov    rdi,QWORD PTR [rip+0x56722]        # 0x45af00
  4047de:	mov    rdx,rcx
  4047e1:	mov    r14,rcx
  4047e4:	lea    rcx,[rip+0x4897a]        # 0x44d165
  4047eb:	mov    r9,QWORD PTR [rbp+0x0]
  4047ef:	mov    r8,QWORD PTR [rdi]
  4047f2:	call   0x403830
  4047f7:	lea    r8,[rip+0xffffffffffffedc2]        # 0x4035c0
  4047fe:	lea    rdx,[rip+0xffffffffffffeddb]        # 0x4035e0
  404805:	xor    r9d,r9d
  404808:	mov    ecx,0x1f4
  40480d:	mov    r12d,eax
  404810:	call   0x438aa0
  404815:	lea    r8,[rip+0xffffffffffffeda4]        # 0x4035c0
  40481c:	lea    rdx,[rip+0xffffffffffffedbd]        # 0x4035e0
  404823:	xor    r9d,r9d
  404826:	mov    ecx,0x1f4
  40482b:	mov    QWORD PTR [rip+0x5db36],rax        # 0x462368
  404832:	call   0x438aa0
  404837:	lea    r8,[rip+0xffffffffffffed82]        # 0x4035c0
  40483e:	lea    rdx,[rip+0xffffffffffffed9b]        # 0x4035e0
  404845:	xor    r9d,r9d
  404848:	mov    ecx,0x1f4
  40484d:	mov    QWORD PTR [rip+0x5db0c],rax        # 0x462360
  404854:	call   0x438aa0
  404859:	mov    rbx,QWORD PTR [rip+0x56640]        # 0x45aea0
  404860:	lea    r9,[rip+0x37289]        # 0x43baf0
  404867:	lea    rcx,[rip+0x5da92]        # 0x462300
  40486e:	xor    r8d,r8d
  404871:	xor    edx,edx
  404873:	mov    QWORD PTR [rip+0x5dade],rax        # 0x462358
  40487a:	mov    QWORD PTR [rsp+0x20],rbx
  40487f:	call   0x439830
  404884:	lea    r9,[rip+0x37265]        # 0x43baf0
  40488b:	lea    rcx,[rip+0x5d9ee]        # 0x462280
  404892:	xor    r8d,r8d
  404895:	xor    edx,edx
  404897:	mov    QWORD PTR [rsp+0x20],rbx
  40489c:	call   0x439830
  4048a1:	lea    rcx,[rip+0x488c0]        # 0x44d168
  4048a8:	call   0x449498
  4048ad:	test   rax,rax
  4048b0:	je     0x404930
  4048b6:	mov    rcx,rax
  4048b9:	call   0x449538
  4048be:	mov    DWORD PTR [rip+0x5dab4],eax        # 0x462378
  4048c4:	call   0x438520
  4048c9:	test   r12d,r12d
  4048cc:	mov    QWORD PTR [rip+0x5da9d],rax        # 0x462370
  4048d3:	jne    0x40496f
  4048d9:	mov    rbx,QWORD PTR [rip+0x5fe54]        # 0x464734
  4048e0:	call   rbx
  4048e2:	mov    rcx,QWORD PTR [rdi]
  4048e5:	lea    rdx,[rax+0x30]
  4048e9:	call   0x4023a0
  4048ee:	mov    rcx,QWORD PTR [rdi]
  4048f1:	call   0x449340
  4048f6:	call   rbx
  4048f8:	mov    rcx,QWORD PTR [rbp+0x0]
  4048fc:	lea    rdx,[rax+0x60]
  404900:	call   0x4023a0
  404905:	mov    rcx,QWORD PTR [rbp+0x0]
  404909:	call   0x449340
  40490e:	mov    rax,QWORD PTR [rip+0x5662b]        # 0x45af40
  404915:	mov    BYTE PTR [rax],0x1
  404918:	add    rsp,0x48
  40491c:	pop    rbx
  40491d:	pop    rsi
  40491e:	pop    rdi
  40491f:	pop    rbp
  404920:	pop    r12
  404922:	pop    r13
  404924:	pop    r14
  404926:	pop    r15
  404928:	ret    
  404929:	nop    DWORD PTR [rax+0x0]
  404930:	mov    rax,QWORD PTR [rip+0x566d9]        # 0x45b010
  404937:	mov    DWORD PTR [rip+0x5da37],0x1        # 0x462378
  404941:	cmp    BYTE PTR [rax],0x0
  404944:	je     0x404950
  404946:	mov    DWORD PTR [rip+0x5da28],0x2        # 0x462378
  404950:	mov    rax,QWORD PTR [rip+0x56539]        # 0x45ae90
  404957:	cmp    BYTE PTR [rax],0x0
  40495a:	je     0x4048c4
  404960:	mov    DWORD PTR [rip+0x5da0e],0x3        # 0x462378
  40496a:	jmp    0x4048c4
  40496f:	mov    rcx,QWORD PTR [r14]
  404972:	mov    rbx,r14
  404975:	test   rcx,rcx
  404978:	jne    0x40498c
  40497a:	jmp    0x4049ec
  40497c:	nop    DWORD PTR [rax+0x0]
  404980:	add    rbx,0x8
  404984:	mov    rcx,QWORD PTR [rbx]
  404987:	test   rcx,rcx
  40498a:	je     0x4049ec
  40498c:	cmp    BYTE PTR [rcx],0x2d
  40498f:	je     0x404980
  404991:	lea    rdx,[rip+0x487de]        # 0x44d176
  404998:	call   0x4035f0
  40499d:	mov    rcx,rax
  4049a0:	mov    rsi,rax
  4049a3:	call   0x402380
  4049a8:	test   eax,eax
  4049aa:	je     0x404980
  4049ac:	mov    rcx,rsi
  4049af:	call   0x4391e0
  4049b4:	mov    rcx,QWORD PTR [rip+0x5d9a5]        # 0x462360
  4049bb:	mov    r8d,eax
  4049be:	mov    r9d,0x1
  4049c4:	mov    rdx,rsi
  4049c7:	call   0x438e20
  4049cc:	mov    rcx,QWORD PTR [rax]
  4049cf:	mov    r13,rax
  4049d2:	test   rcx,rcx
  4049d5:	je     0x404d64
  4049db:	add    rbx,0x8
  4049df:	call   0x403bd0
  4049e4:	mov    rcx,QWORD PTR [rbx]
  4049e7:	test   rcx,rcx
  4049ea:	jne    0x40498c
  4049ec:	cmp    QWORD PTR [rip+0x5d84c],0x0        # 0x462240
  4049f4:	je     0x404a03
  4049f6:	call   0x4041c0
  4049fb:	test   eax,eax
  4049fd:	je     0x404b40
  404a03:	cmp    QWORD PTR [rip+0x5d8cd],0x0        # 0x4622d8
  404a0b:	je     0x404b40
  404a11:	mov    r13,QWORD PTR [rip+0x5fd1c]        # 0x464734
  404a18:	mov    DWORD PTR [rsp+0x3c],0x11
  404a20:	cmp    DWORD PTR [rip+0x5d951],0x2        # 0x462378
  404a27:	jle    0x404a79
  404a29:	call   r13
  404a2c:	mov    rcx,QWORD PTR [rdi]
  404a2f:	lea    rdx,[rax+0x30]
  404a33:	call   0x4023a0
  404a38:	call   r13
  404a3b:	mov    rcx,QWORD PTR [rbp+0x0]
  404a3f:	lea    rdx,[rax+0x60]
  404a43:	call   0x4023a0
  404a48:	jmp    0x404a79
  404a4a:	nop    WORD PTR [rax+rax*1+0x0]
  404a50:	test   rbx,rbx
  404a53:	mov    QWORD PTR [rip+0x5d8b6],rdx        # 0x462310
  404a5a:	mov    QWORD PTR [rip+0x5d8b7],rdx        # 0x462318
  404a61:	je     0x404ab6
  404a63:	mov    rcx,QWORD PTR [rbx]
  404a66:	mov    edx,0x3
  404a6b:	call   0x428a40
  404a70:	test   rax,rax
  404a73:	jne    0x404b90
  404a79:	mov    rdx,QWORD PTR [rip+0x5d858]        # 0x4622d8
  404a80:	test   rdx,rdx
  404a83:	je     0x404ab6
  404a85:	cmp    rdx,QWORD PTR [rip+0x5d87c]        # 0x462308
  404a8c:	mov    rax,QWORD PTR [rdx+0x8]
  404a90:	mov    rbx,QWORD PTR [rdx]
  404a93:	mov    QWORD PTR [rip+0x5d83e],rax        # 0x4622d8
  404a9a:	jbe    0x404aa5
  404a9c:	cmp    rdx,QWORD PTR [rip+0x5d87d]        # 0x462320
  404aa3:	jb     0x404a50
  404aa5:	lea    rcx,[rip+0x5d854]        # 0x462300
  404aac:	call   0x439b90
  404ab1:	test   rbx,rbx
  404ab4:	jne    0x404a63
  404ab6:	mov    rcx,QWORD PTR [rdi]
  404ab9:	call   0x403e10
  404abe:	test   eax,eax
  404ac0:	je     0x404ca0
  404ac6:	call   0x4041c0
  404acb:	test   eax,eax
  404acd:	je     0x404cb1
  404ad3:	mov    eax,DWORD PTR [rip+0x5d89f]        # 0x462378
  404ad9:	test   eax,eax
  404adb:	jne    0x404cd0
  404ae1:	mov    r9,QWORD PTR [rbp+0x0]
  404ae5:	mov    r8,QWORD PTR [rdi]
  404ae8:	lea    rcx,[rip+0x48676]        # 0x44d165
  404aef:	mov    rdx,r14
  404af2:	call   0x403830
  404af7:	test   eax,eax
  404af9:	mov    r12d,eax
  404afc:	jne    0x404c90
  404b02:	call   r13
  404b05:	mov    rcx,QWORD PTR [rdi]
  404b08:	lea    rdx,[rax+0x30]
  404b0c:	call   0x4023a0
  404b11:	mov    rcx,QWORD PTR [rdi]
  404b14:	call   0x449340
  404b19:	call   r13
  404b1c:	mov    rcx,QWORD PTR [rbp+0x0]
  404b20:	lea    rdx,[rax+0x60]
  404b24:	call   0x4023a0
  404b29:	mov    rcx,QWORD PTR [rbp+0x0]
  404b2d:	call   0x449340
  404b32:	test   r12d,r12d
  404b35:	je     0x40490e
  404b3b:	jmp    0x404b75
  404b3d:	nop    DWORD PTR [rax]
  404b40:	mov    rbx,QWORD PTR [rip+0x5fbed]        # 0x464734
  404b47:	call   rbx
  404b49:	mov    rcx,QWORD PTR [rdi]
  404b4c:	lea    rdx,[rax+0x30]
  404b50:	call   0x4023a0
  404b55:	mov    rcx,QWORD PTR [rdi]
  404b58:	call   0x449340
  404b5d:	call   rbx
  404b5f:	mov    rcx,QWORD PTR [rbp+0x0]
  404b63:	lea    rdx,[rax+0x60]
  404b67:	call   0x4023a0
  404b6c:	mov    rcx,QWORD PTR [rbp+0x0]
  404b70:	call   0x449340
  404b75:	lea    rcx,[rip+0x48613]        # 0x44d18f
  404b7c:	mov    edx,r12d
  404b7f:	call   0x406e60
  404b84:	mov    ecx,r12d
  404b87:	call   0x449520
  404b8c:	nop    DWORD PTR [rax+0x0]
  404b90:	mov    edx,0x1
  404b95:	mov    rcx,rax
  404b98:	call   0x4037b0
  404b9d:	mov    rsi,QWORD PTR [rax+0x8]
  404ba1:	mov    r15,rax
  404ba4:	test   rsi,rsi
  404ba7:	je     0x404d53
  404bad:	mov    r10d,DWORD PTR [rsi]
  404bb0:	mov    edx,DWORD PTR [rsi+0x4]
  404bb3:	and    r10d,0x7fffffff
  404bba:	cmp    r10d,edx
  404bbd:	jne    0x404c7b
  404bc3:	cmp    BYTE PTR [rsi+0x3],0x0
  404bc7:	jns    0x404cf0
  404bcd:	lea    r8d,[r10+0x1]
  404bd1:	mov    QWORD PTR [rax+0x8],0x0
  404bd9:	mov    r11d,0x1
  404bdf:	cmp    r8d,0x4
  404be3:	mov    eax,0x4
  404be8:	mov    BYTE PTR [rsp+0x3b],r11b
  404bed:	cmovb  r8d,eax
  404bf1:	xor    ecx,ecx
  404bf3:	mov    DWORD PTR [rsp+0x34],r10d
  404bf8:	mov    eax,r8d
  404bfb:	mov    DWORD PTR [rsp+0x30],r8d
  404c00:	lea    rdx,[rax*8+0x8]
  404c08:	call   0x43bb70
  404c0d:	mov    r8d,DWORD PTR [rsp+0x30]
  404c12:	mov    edx,DWORD PTR [rax]
  404c14:	movzx  r11d,BYTE PTR [rsp+0x3b]
  404c1a:	mov    QWORD PTR [r15+0x8],rax
  404c1e:	mov    r10d,DWORD PTR [rsp+0x34]
  404c23:	mov    DWORD PTR [rax+0x4],0x0
  404c2a:	and    r8d,0x7fffffff
  404c31:	and    edx,0x80000000
  404c37:	or     r8d,edx
  404c3a:	mov    DWORD PTR [rax],r8d
  404c3d:	shr    r8d,0x18
  404c41:	and    r8d,0x7f
  404c45:	test   r11b,r11b
  404c48:	mov    BYTE PTR [rax+0x3],r8b
  404c4c:	je     0x404d90
  404c52:	mov    r8d,r10d
  404c55:	lea    rdx,[rsi+0x8]
  404c59:	lea    rcx,[rax+0x8]
  404c5d:	shl    r8,0x3
  404c61:	mov    DWORD PTR [rsp+0x30],r10d
  404c66:	call   0x449450
  404c6b:	mov    r10d,DWORD PTR [rsp+0x30]
  404c70:	mov    rsi,QWORD PTR [r15+0x8]
  404c74:	mov    edx,r10d
  404c77:	mov    DWORD PTR [rsi+0x4],r10d
  404c7b:	mov    rax,QWORD PTR [rbx]
  404c7e:	lea    ecx,[rdx+0x1]
  404c81:	mov    DWORD PTR [rsi+0x4],ecx
  404c84:	mov    QWORD PTR [rsi+rdx*8+0x8],rax
  404c89:	jmp    0x404a79
  404c8e:	xchg   ax,ax
  404c90:	sub    DWORD PTR [rsp+0x3c],0x1
  404c95:	je     0x404b02
  404c9b:	jmp    0x404a20
  404ca0:	mov    rcx,QWORD PTR [rbp+0x0]
  404ca4:	call   0x403e10
  404ca9:	test   eax,eax
  404cab:	jne    0x404ac6
  404cb1:	call   r13
  404cb4:	mov    rcx,QWORD PTR [rdi]
  404cb7:	lea    rdx,[rax+0x30]
  404cbb:	call   0x4023a0
  404cc0:	mov    rcx,QWORD PTR [rdi]
  404cc3:	call   0x449340
  404cc8:	call   r13
  404ccb:	jmp    0x404b5f
  404cd0:	call   r13
  404cd3:	lea    rdx,[rip+0x484a1]        # 0x44d17b
  404cda:	lea    rcx,[rax+0x60]
  404cde:	call   0x4498d0
  404ce3:	jmp    0x404ae1
  404ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  404cf0:	lea    edx,[r10+0x1]
  404cf4:	mov    ecx,r10d
  404cf7:	call   0x405010
  404cfc:	mov    rcx,QWORD PTR [r15+0x8]
  404d00:	mov    eax,eax
  404d02:	mov    rsi,rax
  404d05:	lea    rdx,[rax*8+0x8]
  404d0d:	test   rcx,rcx
  404d10:	je     0x404d8b
  404d12:	mov    r8d,DWORD PTR [rcx+0x4]
  404d16:	mov    DWORD PTR [rsp+0x30],r8d
  404d1b:	and    esi,0x7fffffff
  404d21:	call   0x43bb70
  404d26:	mov    edx,DWORD PTR [rax]
  404d28:	mov    r8d,DWORD PTR [rsp+0x30]
  404d2d:	mov    QWORD PTR [r15+0x8],rax
  404d31:	and    edx,0x80000000
  404d37:	mov    DWORD PTR [rax+0x4],r8d
  404d3b:	or     edx,esi
  404d3d:	mov    rsi,rax
  404d40:	mov    DWORD PTR [rax],edx
  404d42:	shr    edx,0x18
  404d45:	and    edx,0x7f
  404d48:	mov    BYTE PTR [rax+0x3],dl
  404d4b:	mov    edx,r8d
  404d4e:	jmp    0x404c7b
  404d53:	xor    r11d,r11d
  404d56:	xor    r10d,r10d
  404d59:	mov    r8d,0x1
  404d5f:	jmp    0x404bdf
  404d64:	mov    edx,0x28
  404d69:	mov    cl,0x1
  404d6b:	call   0x43bb20
  404d70:	mov    rcx,rsi
  404d73:	mov    r15,rax
  404d76:	mov    QWORD PTR [r13+0x0],rax
  404d7a:	call   0x43bbf0
  404d7f:	mov    QWORD PTR [r15],rax
  404d82:	mov    rcx,QWORD PTR [r13+0x0]
  404d86:	jmp    0x4049db
  404d8b:	xor    r8d,r8d
  404d8e:	jmp    0x404d16
  404d90:	mov    rsi,rax
  404d93:	xor    edx,edx
  404d95:	jmp    0x404c7b
  404d9a:	nop
  404d9b:	nop
  404d9c:	nop
  404d9d:	nop
  404d9e:	nop
  404d9f:	nop
  404da0:	push   rbx
  404da1:	sub    rsp,0x20
  404da5:	mov    rax,QWORD PTR [rip+0x56114]        # 0x45aec0
  404dac:	mov    rbx,rcx
  404daf:	mov    rcx,QWORD PTR [rcx+0x8]
  404db3:	call   QWORD PTR [rax]
  404db5:	add    eax,DWORD PTR [rbx+0x10]
  404db8:	add    rsp,0x20
  404dbc:	pop    rbx
  404dbd:	ret    
  404dbe:	xchg   ax,ax
  404dc0:	xor    eax,eax
  404dc2:	mov    r8,QWORD PTR [rdx+0x8]
  404dc6:	cmp    QWORD PTR [rcx+0x8],r8
  404dca:	je     0x404dd0
  404dcc:	repz ret 
  404dce:	xchg   ax,ax
  404dd0:	mov    r9,QWORD PTR [rdx]
  404dd3:	cmp    QWORD PTR [rcx],r9
  404dd6:	jne    0x404dcc
  404dd8:	mov    eax,DWORD PTR [rdx+0x10]
  404ddb:	cmp    DWORD PTR [rcx+0x10],eax
  404dde:	sete   al
  404de1:	movzx  eax,al
  404de4:	ret    
  404de5:	nop
  404de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404df0:	mov    rax,QWORD PTR [rip+0x560c9]        # 0x45aec0
  404df7:	mov    rcx,QWORD PTR [rcx]
  404dfa:	mov    rax,QWORD PTR [rax]
  404dfd:	rex.W jmp rax
  404e00:	xor    eax,eax
  404e02:	cmp    QWORD PTR [rcx],rdx
  404e05:	sete   al
  404e08:	ret    
  404e09:	nop
  404e0a:	nop    WORD PTR [rax+rax*1+0x0]
  404e10:	push   r14
  404e12:	push   r13
  404e14:	push   r12
  404e16:	push   rbp
  404e17:	push   rdi
  404e18:	push   rsi
  404e19:	push   rbx
  404e1a:	sub    rsp,0x50
  404e1e:	mov    r12,QWORD PTR [rsp+0xb0]
  404e26:	mov    rbp,rcx
  404e29:	mov    rcx,QWORD PTR [rip+0x5d560]        # 0x462390
  404e30:	mov    rsi,rdx
  404e33:	mov    r14,r8
  404e36:	mov    r13d,r9d
  404e39:	mov    QWORD PTR [rsp+0x28],r8
  404e3e:	mov    DWORD PTR [rsp+0x30],r9d
  404e43:	mov    QWORD PTR [rsp+0x20],r12
  404e48:	test   rcx,rcx
  404e4b:	je     0x404f70
  404e51:	lea    rdx,[rsp+0x20]
  404e56:	mov    r8d,0x1
  404e5c:	call   0x439020
  404e61:	mov    rbx,QWORD PTR [rax]
  404e64:	mov    rdi,rax
  404e67:	test   rbx,rbx
  404e6a:	je     0x404f00
  404e70:	mov    ecx,0x18
  404e75:	call   0x43baf0
  404e7a:	cmp    QWORD PTR [rip+0x5d506],0x0        # 0x462388
  404e82:	mov    rdi,rax
  404e85:	mov    QWORD PTR [rax],rbp
  404e88:	mov    QWORD PTR [rax+0x8],rbx
  404e8c:	mov    QWORD PTR [rax+0x10],rsi
  404e90:	je     0x404f40
  404e96:	mov    rax,QWORD PTR [rip+0x56023]        # 0x45aec0
  404e9d:	mov    rcx,rbp
  404ea0:	call   QWORD PTR [rax]
  404ea2:	mov    rcx,QWORD PTR [rip+0x5d4df]        # 0x462388
  404ea9:	mov    r8d,eax
  404eac:	mov    r9d,0x1
  404eb2:	mov    rdx,rbp
  404eb5:	call   0x438e20
  404eba:	cmp    QWORD PTR [rax],0x0
  404ebe:	jne    0x404f97
  404ec4:	add    rsi,QWORD PTR [rbx+0x18]
  404ec8:	mov    QWORD PTR [rax],rdi
  404ecb:	mov    rax,QWORD PTR [rbx+0x28]
  404ecf:	cmp    rsi,rax
  404ed2:	mov    rdx,rsi
  404ed5:	mov    QWORD PTR [rbx+0x18],rsi
  404ed9:	jbe    0x404ee2
  404edb:	add    rdx,rax
  404ede:	mov    QWORD PTR [rbx+0x28],rdx
  404ee2:	add    QWORD PTR [rbx+0x20],0x1
  404ee7:	add    rsp,0x50
  404eeb:	pop    rbx
  404eec:	pop    rsi
  404eed:	pop    rdi
  404eee:	pop    rbp
  404eef:	pop    r12
  404ef1:	pop    r13
  404ef3:	pop    r14
  404ef5:	ret    
  404ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f00:	mov    edx,0x30
  404f05:	mov    ecx,0x1
  404f0a:	call   0x43bb20
  404f0f:	mov    QWORD PTR [rdi],rax
  404f12:	mov    QWORD PTR [rax+0x8],r14
  404f16:	mov    rax,QWORD PTR [rdi]
  404f19:	mov    QWORD PTR [rax],r12
  404f1c:	mov    rbx,QWORD PTR [rdi]
  404f1f:	mov    DWORD PTR [rax+0x10],r13d
  404f23:	mov    QWORD PTR [rbx+0x18],0x0
  404f2b:	mov    QWORD PTR [rbx+0x28],0x0
  404f33:	jmp    0x404e70
  404f38:	nop    DWORD PTR [rax+rax*1+0x0]
  404f40:	lea    r8,[rip+0xfffffffffffffeb9]        # 0x404e00
  404f47:	lea    rdx,[rip+0xfffffffffffffea2]        # 0x404df0
  404f4e:	xor    r9d,r9d
  404f51:	mov    ecx,0xa
  404f56:	call   0x438aa0
  404f5b:	mov    QWORD PTR [rip+0x5d426],rax        # 0x462388
  404f62:	jmp    0x404e96
  404f67:	nop    WORD PTR [rax+rax*1+0x0]
  404f70:	lea    r8,[rip+0xfffffffffffffe49]        # 0x404dc0
  404f77:	lea    rdx,[rip+0xfffffffffffffe22]        # 0x404da0
  404f7e:	mov    cl,0xa
  404f80:	xor    r9d,r9d
  404f83:	call   0x438aa0
  404f88:	mov    rcx,rax
  404f8b:	mov    QWORD PTR [rip+0x5d3fe],rax        # 0x462390
  404f92:	jmp    0x404e51
  404f97:	lea    r8,[rip+0x48282]        # 0x44d220
  404f9e:	lea    rcx,[rip+0x4820b]        # 0x44d1b0
  404fa5:	mov    edx,0x94
  404faa:	call   0x406190
  404faf:	nop
  404fb0:	push   rbx
  404fb1:	sub    rsp,0x20
  404fb5:	mov    rax,QWORD PTR [rip+0x55f04]        # 0x45aec0
  404fbc:	mov    rbx,rcx
  404fbf:	call   QWORD PTR [rax]
  404fc1:	mov    rcx,QWORD PTR [rip+0x5d3c0]        # 0x462388
  404fc8:	mov    r8d,eax
  404fcb:	xor    r9d,r9d
  404fce:	mov    rdx,rbx
  404fd1:	call   0x438e20
  404fd6:	mov    rbx,QWORD PTR [rax]
  404fd9:	mov    rdx,QWORD PTR [rbx+0x8]
  404fdd:	mov    rcx,QWORD PTR [rbx+0x10]
  404fe1:	sub    QWORD PTR [rdx+0x18],rcx
  404fe5:	mov    rcx,QWORD PTR [rip+0x5d39c]        # 0x462388
  404fec:	mov    rdx,rax
  404fef:	call   0x4390c0
  404ff4:	mov    rcx,rbx
  404ff7:	add    rsp,0x20
  404ffb:	pop    rbx
  404ffc:	jmp    0x4494c8
  405001:	nop
  405002:	nop    DWORD PTR [rax+0x0]
  405006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405010:	sub    rsp,0x28
  405014:	cmp    ecx,edx
  405016:	jae    0x405042
  405018:	test   ecx,ecx
  40501a:	mov    eax,0x4
  40501f:	je     0x405029
  405021:	cmp    ecx,0xf
  405024:	ja     0x405033
  405026:	lea    eax,[rcx+rcx*1]
  405029:	cmp    eax,edx
  40502b:	cmovb  eax,edx
  40502e:	add    rsp,0x28
  405032:	ret    
  405033:	lea    eax,[rcx+rcx*2]
  405036:	shr    eax,1
  405038:	cmp    eax,edx
  40503a:	cmovb  eax,edx
  40503d:	add    rsp,0x28
  405041:	ret    
  405042:	lea    r8,[rip+0x481b7]        # 0x44d200
  405049:	lea    rcx,[rip+0x48160]        # 0x44d1b0
  405050:	mov    edx,0xb4
  405055:	call   0x406190
  40505a:	nop
  40505b:	nop    DWORD PTR [rax+rax*1+0x0]
  405060:	ret    
  405061:	nop
  405062:	nop
  405063:	nop
  405064:	nop
  405065:	nop
  405066:	nop
  405067:	nop
  405068:	nop
  405069:	nop
  40506a:	nop
  40506b:	nop
  40506c:	nop
  40506d:	nop
  40506e:	nop
  40506f:	nop
  405070:	mov    rax,rcx
  405073:	ret    
  405074:	xchg   ax,ax
  405076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405080:	jmp    0x43baf0
  405085:	nop
  405086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405090:	mov    edx,0x1
  405095:	jmp    0x43bb20
  40509a:	nop    WORD PTR [rax+rax*1+0x0]
  4050a0:	jmp    0x43bb70
  4050a5:	nop
  4050a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050b0:	jmp    0x4494c8
  4050b5:	nop
  4050b6:	nop
  4050b7:	nop
  4050b8:	nop
  4050b9:	nop
  4050ba:	nop
  4050bb:	nop
  4050bc:	nop
  4050bd:	nop
  4050be:	nop
  4050bf:	nop
  4050c0:	mov    BYTE PTR [rip+0x5d2da],cl        # 0x4623a0
  4050c6:	ret    
  4050c7:	nop    WORD PTR [rax+rax*1+0x0]
  4050d0:	push   r14
  4050d2:	push   r13
  4050d4:	push   r12
  4050d6:	push   rbp
  4050d7:	push   rdi
  4050d8:	push   rsi
  4050d9:	push   rbx
  4050da:	sub    rsp,0x60
  4050de:	mov    r14,rcx
  4050e1:	mov    rcx,rdx
  4050e4:	mov    r12,rdx
  4050e7:	mov    r13d,r8d
  4050ea:	call   0x4493c0
  4050ef:	cmp    BYTE PTR [rip+0x5d2aa],0x0        # 0x4623a0
  4050f6:	mov    rbx,rax
  4050f9:	mov    eax,DWORD PTR [r14+0x8]
  4050fd:	lea    esi,[rax+0x5]
  405100:	jne    0x405240
  405106:	lea    ecx,[rsi+rbx*1]
  405109:	movsxd rcx,ecx
  40510c:	call   0x43baf0
  405111:	mov    rbx,rax
  405114:	movzx  eax,BYTE PTR [r12]
  405119:	cmp    al,0x5c
  40511b:	je     0x405201
  405121:	cmp    al,0x2f
  405123:	je     0x405201
  405129:	test   al,al
  40512b:	jne    0x4051f5
  405131:	mov    rsi,QWORD PTR [r14]
  405134:	test   rsi,rsi
  405137:	je     0x4052c2
  40513d:	lea    rbp,[rsp+0x20]
  405142:	mov    rdi,QWORD PTR [rip+0x5f8bb]        # 0x464a04
  405149:	jmp    0x40519c
  40514b:	nop    DWORD PTR [rax+rax*1+0x0]
  405150:	mov    rcx,rbx
  405153:	call   0x4493c0
  405158:	add    rax,rbx
  40515b:	mov    rdx,rbp
  40515e:	mov    rcx,rbx
  405161:	mov    DWORD PTR [rax],0x6578652e
  405167:	mov    BYTE PTR [rax+0x4],0x0
  40516b:	call   rdi
  40516d:	test   eax,eax
  40516f:	js     0x40518f
  405171:	movzx  eax,WORD PTR [rsp+0x26]
  405176:	and    ax,0xf000
  40517a:	cmp    ax,0x4000
  40517e:	je     0x40518f
  405180:	mov    edx,r13d
  405183:	mov    rcx,rbx
  405186:	call   0x4492e0
  40518b:	test   eax,eax
  40518d:	je     0x4051e0
  40518f:	mov    rsi,QWORD PTR [rsi+0x8]
  405193:	test   rsi,rsi
  405196:	je     0x4052a4
  40519c:	mov    rdx,QWORD PTR [rsi]
  40519f:	mov    rcx,rbx
  4051a2:	call   0x43be80
  4051a7:	mov    rdx,r12
  4051aa:	mov    rcx,rax
  4051ad:	call   0x4493d8
  4051b2:	mov    rdx,rbp
  4051b5:	mov    rcx,rbx
  4051b8:	call   rdi
  4051ba:	test   eax,eax
  4051bc:	js     0x405150
  4051be:	movzx  eax,WORD PTR [rsp+0x26]
  4051c3:	and    ax,0xf000
  4051c7:	cmp    ax,0x4000
  4051cb:	je     0x405150
  4051cd:	mov    edx,r13d
  4051d0:	mov    rcx,rbx
  4051d3:	call   0x4492e0
  4051d8:	test   eax,eax
  4051da:	jne    0x405150
  4051e0:	mov    rsi,rbx
  4051e3:	mov    rax,rsi
  4051e6:	add    rsp,0x60
  4051ea:	pop    rbx
  4051eb:	pop    rsi
  4051ec:	pop    rdi
  4051ed:	pop    rbp
  4051ee:	pop    r12
  4051f0:	pop    r13
  4051f2:	pop    r14
  4051f4:	ret    
  4051f5:	cmp    BYTE PTR [r12+0x1],0x3a
  4051fb:	jne    0x405131
  405201:	mov    edx,r13d
  405204:	mov    rcx,r12
  405207:	call   0x4492e0
  40520c:	test   eax,eax
  40520e:	mov    rdx,r12
  405211:	mov    rcx,rbx
  405214:	jne    0x405260
  405216:	call   0x4493d8
  40521b:	cmp    BYTE PTR [rip+0x5d17e],0x0        # 0x4623a0
  405222:	mov    rsi,rbx
  405225:	je     0x4051e3
  405227:	call   QWORD PTR [rip+0x5f507]        # 0x464734
  40522d:	lea    rdx,[rip+0x4801e]        # 0x44d252
  405234:	lea    rcx,[rax+0x60]
  405238:	call   0x4498d0
  40523d:	jmp    0x4051e3
  40523f:	nop
  405240:	call   QWORD PTR [rip+0x5f4ee]        # 0x464734
  405246:	lea    rdx,[rip+0x47ff3]        # 0x44d240
  40524d:	lea    rcx,[rax+0x60]
  405251:	mov    r8,r12
  405254:	call   0x4498d0
  405259:	jmp    0x405106
  40525e:	xchg   ax,ax
  405260:	call   0x43be80
  405265:	mov    edx,r13d
  405268:	mov    DWORD PTR [rax],0x6578652e
  40526e:	mov    BYTE PTR [rax+0x4],0x0
  405272:	mov    rcx,rbx
  405275:	mov    rsi,rbx
  405278:	call   0x4492e0
  40527d:	test   eax,eax
  40527f:	je     0x4051e3
  405285:	cmp    BYTE PTR [rip+0x5d114],0x0        # 0x4623a0
  40528c:	je     0x4052b3
  40528e:	call   QWORD PTR [rip+0x5f4a0]        # 0x464734
  405294:	lea    rdx,[rip+0x47fd5]        # 0x44d270
  40529b:	lea    rcx,[rax+0x60]
  40529f:	call   0x4498d0
  4052a4:	cmp    BYTE PTR [rip+0x5d0f5],0x0        # 0x4623a0
  4052ab:	je     0x4052b3
  4052ad:	cmp    QWORD PTR [r14],0x0
  4052b1:	je     0x4052cb
  4052b3:	mov    rcx,rbx
  4052b6:	xor    esi,esi
  4052b8:	call   0x4494c8
  4052bd:	jmp    0x4051e3
  4052c2:	cmp    BYTE PTR [rip+0x5d0d7],0x0        # 0x4623a0
  4052c9:	je     0x4052b3
  4052cb:	call   QWORD PTR [rip+0x5f463]        # 0x464734
  4052d1:	lea    rdx,[rip+0x47fc8]        # 0x44d2a0
  4052d8:	lea    rcx,[rax+0x60]
  4052dc:	call   0x4498d0
  4052e1:	jmp    0x4052b3
  4052e3:	nop    DWORD PTR [rax]
  4052e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052f0:	push   rdi
  4052f1:	push   rsi
  4052f2:	push   rbx
  4052f3:	sub    rsp,0x20
  4052f7:	mov    r8,QWORD PTR [rcx]
  4052fa:	mov    rsi,rcx
  4052fd:	mov    rdi,rdx
  405300:	test   r8,r8
  405303:	jne    0x405313
  405305:	jmp    0x405360
  405307:	nop    WORD PTR [rax+rax*1+0x0]
  405310:	mov    r8,rax
  405313:	mov    rax,QWORD PTR [r8+0x8]
  405317:	test   rax,rax
  40531a:	jne    0x405310
  40531c:	lea    rbx,[r8+0x8]
  405320:	mov    rcx,rdi
  405323:	call   0x4493c0
  405328:	cmp    eax,DWORD PTR [rsi+0x8]
  40532b:	jle    0x405330
  40532d:	mov    DWORD PTR [rsi+0x8],eax
  405330:	mov    ecx,0x10
  405335:	call   0x43baf0
  40533a:	mov    rcx,rdi
  40533d:	mov    rsi,rax
  405340:	call   0x43bbf0
  405345:	mov    QWORD PTR [rsi],rax
  405348:	mov    rax,QWORD PTR [rbx]
  40534b:	mov    QWORD PTR [rsi+0x8],rax
  40534f:	mov    QWORD PTR [rbx],rsi
  405352:	add    rsp,0x20
  405356:	pop    rbx
  405357:	pop    rsi
  405358:	pop    rdi
  405359:	ret    
  40535a:	nop    WORD PTR [rax+rax*1+0x0]
  405360:	mov    rbx,rcx
  405363:	jmp    0x405320
  405365:	nop
  405366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405370:	push   r13
  405372:	push   r12
  405374:	push   rbp
  405375:	push   rdi
  405376:	push   rsi
  405377:	push   rbx
  405378:	sub    rsp,0x28
  40537c:	mov    rsi,rcx
  40537f:	mov    r12,rdx
  405382:	call   0x4493c0
  405387:	lea    rcx,[rax+0x3]
  40538b:	call   0x43baf0
  405390:	cmp    BYTE PTR [rip+0x5d009],0x0        # 0x4623a0
  405397:	mov    rdi,rax
  40539a:	jne    0x405481
  4053a0:	mov    rbx,rsi
  4053a3:	mov    r13,QWORD PTR [rip+0x5f38a]        # 0x464734
  4053aa:	jmp    0x4053bd
  4053ac:	nop    DWORD PTR [rax+0x0]
  4053b0:	cmp    r9b,0x3b
  4053b4:	lea    r10,[rbx+0x1]
  4053b8:	je     0x4053c6
  4053ba:	mov    rbx,r10
  4053bd:	movzx  r9d,BYTE PTR [rbx]
  4053c1:	test   r9b,r9b
  4053c4:	jne    0x4053b0
  4053c6:	mov    rbp,rbx
  4053c9:	mov    rdx,rsi
  4053cc:	mov    rcx,rdi
  4053cf:	sub    rbp,rsi
  4053d2:	mov    r8,rbp
  4053d5:	call   0x4493a8
  4053da:	cmp    rbx,rsi
  4053dd:	je     0x405470
  4053e3:	movzx  eax,BYTE PTR [rbx-0x1]
  4053e7:	cmp    al,0x5c
  4053e9:	je     0x405420
  4053eb:	cmp    al,0x2f
  4053ed:	je     0x405420
  4053ef:	mov    BYTE PTR [rdi+rbp*1],0x2f
  4053f3:	mov    BYTE PTR [rdi+rbp*1+0x1],0x0
  4053f8:	cmp    BYTE PTR [rip+0x5cfa1],0x0        # 0x4623a0
  4053ff:	jne    0x40542d
  405401:	mov    rdx,rdi
  405404:	mov    rcx,r12
  405407:	call   0x4052f0
  40540c:	cmp    BYTE PTR [rbx],0x0
  40540f:	je     0x405453
  405411:	lea    r10,[rbx+0x1]
  405415:	mov    rsi,r10
  405418:	jmp    0x4053ba
  40541a:	nop    WORD PTR [rax+rax*1+0x0]
  405420:	cmp    BYTE PTR [rip+0x5cf79],0x0        # 0x4623a0
  405427:	mov    BYTE PTR [rdi+rbp*1],0x0
  40542b:	je     0x405401
  40542d:	call   r13
  405430:	lea    rdx,[rip+0x47ec6]        # 0x44d2fd
  405437:	lea    rcx,[rax+0x60]
  40543b:	mov    r8,rdi
  40543e:	call   0x4498d0
  405443:	mov    rdx,rdi
  405446:	mov    rcx,r12
  405449:	call   0x4052f0
  40544e:	cmp    BYTE PTR [rbx],0x0
  405451:	jne    0x405411
  405453:	mov    rcx,rdi
  405456:	add    rsp,0x28
  40545a:	pop    rbx
  40545b:	pop    rsi
  40545c:	pop    rdi
  40545d:	pop    rbp
  40545e:	pop    r12
  405460:	pop    r13
  405462:	jmp    0x4494c8
  405467:	nop    WORD PTR [rax+rax*1+0x0]
  405470:	mov    eax,0x2f2e
  405475:	mov    BYTE PTR [rdi+0x2],0x0
  405479:	mov    WORD PTR [rdi],ax
  40547c:	jmp    0x4053f8
  405481:	call   QWORD PTR [rip+0x5f2ad]        # 0x464734
  405487:	lea    rdx,[rip+0x47e3a]        # 0x44d2c8
  40548e:	lea    rcx,[rax+0x60]
  405492:	mov    r9d,0x3b
  405498:	mov    r8,rsi
  40549b:	call   0x4498d0
  4054a0:	jmp    0x4053a0
  4054a5:	nop
  4054a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054b0:	push   rbx
  4054b1:	sub    rsp,0x20
  4054b5:	mov    rbx,rdx
  4054b8:	call   0x449498
  4054bd:	test   rax,rax
  4054c0:	je     0x4054d2
  4054c2:	mov    rdx,rbx
  4054c5:	mov    rcx,rax
  4054c8:	add    rsp,0x20
  4054cc:	pop    rbx
  4054cd:	jmp    0x405370
  4054d2:	add    rsp,0x20
  4054d6:	pop    rbx
  4054d7:	ret    
  4054d8:	nop
  4054d9:	nop
  4054da:	nop
  4054db:	nop
  4054dc:	nop
  4054dd:	nop
  4054de:	nop
  4054df:	nop
  4054e0:	ret    
  4054e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4054e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054f0:	sub    rsp,0x38
  4054f4:	mov    QWORD PTR [rsp+0x48],rdx
  4054f9:	mov    QWORD PTR [rsp+0x50],r8
  4054fe:	mov    rdx,rcx
  405501:	lea    r8,[rsp+0x48]
  405506:	lea    rcx,[rsp+0x20]
  40550b:	mov    QWORD PTR [rsp+0x58],r9
  405510:	mov    QWORD PTR [rsp+0x28],r8
  405515:	call   0x440e80
  40551a:	mov    rax,QWORD PTR [rsp+0x20]
  40551f:	add    rsp,0x38
  405523:	ret    
  405524:	xchg   ax,ax
  405526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405530:	push   r15
  405532:	push   r14
  405534:	push   r13
  405536:	push   r12
  405538:	push   rbp
  405539:	push   rdi
  40553a:	push   rsi
  40553b:	push   rbx
  40553c:	sub    rsp,0x48
  405540:	mov    rbx,QWORD PTR [rsp+0xb0]
  405548:	test   r8,r8
  40554b:	mov    r15,rcx
  40554e:	mov    r13,rdx
  405551:	mov    rbp,r8
  405554:	mov    r14d,r9d
  405557:	jne    0x405571
  405559:	test   rbx,rbx
  40555c:	jne    0x405571
  40555e:	xor    eax,eax
  405560:	add    rsp,0x48
  405564:	pop    rbx
  405565:	pop    rsi
  405566:	pop    rdi
  405567:	pop    rbp
  405568:	pop    r12
  40556a:	pop    r13
  40556c:	pop    r14
  40556e:	pop    r15
  405570:	ret    
  405571:	mov    eax,DWORD PTR [r15]
  405574:	test   rbp,rbp
  405577:	setne  r12b
  40557b:	test   eax,eax
  40557d:	jne    0x4055a2
  40557f:	test   r12b,r12b
  405582:	je     0x4055a2
  405584:	mov    rcx,rbp
  405587:	lea    rdi,[rip+0x47db6]        # 0x44d344
  40558e:	call   0x4395f0
  405593:	mov    ecx,0xd
  405598:	mov    rsi,rax
  40559b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40559d:	je     0x40555e
  40559f:	mov    eax,DWORD PTR [r15]
  4055a2:	cmp    eax,0x13
  4055a5:	jg     0x405670
  4055ab:	add    eax,0x1
  4055ae:	test   rbx,rbx
  4055b1:	mov    DWORD PTR [r15],eax
  4055b4:	je     0x405680
  4055ba:	mov    rcx,rbx
  4055bd:	mov    edx,0x400b
  4055c2:	call   0x436b80
  4055c7:	test   rax,rax
  4055ca:	mov    r15,rax
  4055cd:	cmovne rbx,rax
  4055d1:	xor    esi,esi
  4055d3:	lea    rax,[rip+0x483c6]        # 0x44d9a0
  4055da:	mov    rdx,QWORD PTR [rax+rsi*8]
  4055de:	mov    rcx,rdx
  4055e1:	mov    QWORD PTR [rsp+0x38],rdx
  4055e6:	call   0x4493c0
  4055eb:	mov    rdx,QWORD PTR [rsp+0x38]
  4055f0:	mov    r8,rax
  4055f3:	mov    rcx,rbx
  4055f6:	mov    rdi,rax
  4055f9:	call   0x4493b0
  4055fe:	test   eax,eax
  405600:	jne    0x40560e
  405602:	movzx  eax,BYTE PTR [rbx+rdi*1]
  405606:	cmp    al,0x28
  405608:	je     0x405660
  40560a:	test   al,al
  40560c:	je     0x405660
  40560e:	add    rsi,0x1
  405612:	cmp    rsi,0x4
  405616:	jne    0x4055d3
  405618:	test   r12b,r12b
  40561b:	je     0x4056b4
  405621:	call   QWORD PTR [rip+0x5f10d]        # 0x464734
  405627:	lea    rdx,[rip+0x47d23]        # 0x44d351
  40562e:	lea    rcx,[rax+0x60]
  405632:	mov    DWORD PTR [rsp+0x28],r14d
  405637:	mov    QWORD PTR [rsp+0x20],rbp
  40563c:	mov    r9,rbx
  40563f:	mov    r8d,r13d
  405642:	call   0x4498d0
  405647:	test   r15,r15
  40564a:	je     0x40555e
  405650:	mov    rcx,r15
  405653:	call   0x4494c8
  405658:	jmp    0x40555e
  40565d:	nop    DWORD PTR [rax]
  405660:	test   r15,r15
  405663:	je     0x405670
  405665:	mov    rcx,r15
  405668:	call   0x4494c8
  40566d:	nop    DWORD PTR [rax]
  405670:	mov    eax,0x1
  405675:	jmp    0x405560
  40567a:	nop    WORD PTR [rax+rax*1+0x0]
  405680:	test   r12b,r12b
  405683:	je     0x4056d0
  405685:	call   QWORD PTR [rip+0x5f0a9]        # 0x464734
  40568b:	lea    r9,[rip+0x47cae]        # 0x44d340
  405692:	lea    rcx,[rax+0x60]
  405696:	lea    rdx,[rip+0x47cb4]        # 0x44d351
  40569d:	mov    DWORD PTR [rsp+0x28],r14d
  4056a2:	mov    QWORD PTR [rsp+0x20],rbp
  4056a7:	mov    r8d,r13d
  4056aa:	call   0x4498d0
  4056af:	jmp    0x40555e
  4056b4:	test   rbx,rbx
  4056b7:	jne    0x4056d5
  4056b9:	lea    rbp,[rip+0x47c80]        # 0x44d340
  4056c0:	mov    rbx,rbp
  4056c3:	jmp    0x405621
  4056c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4056d0:	xor    r15d,r15d
  4056d3:	jmp    0x4056b9
  4056d5:	lea    rbp,[rip+0x47c64]        # 0x44d340
  4056dc:	jmp    0x405621
  4056e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4056e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056f0:	push   rdi
  4056f1:	push   rsi
  4056f2:	push   rbx
  4056f3:	sub    rsp,0x30
  4056f7:	test   r8d,r8d
  4056fa:	js     0x405730
  4056fc:	lea    rsi,[rip+0x47c5f]        # 0x44d362
  405703:	mov    ecx,r8d
  405706:	mov    rbx,rdx
  405709:	mov    rdi,rsi
  40570c:	jne    0x405740
  40570e:	call   QWORD PTR [rip+0x5f020]        # 0x464734
  405714:	lea    rdx,[rip+0x47c4b]        # 0x44d366
  40571b:	lea    rcx,[rax+0x60]
  40571f:	mov    QWORD PTR [rsp+0x20],rsi
  405724:	mov    r9,rdi
  405727:	mov    r8,rbx
  40572a:	call   0x4498d0
  40572f:	nop
  405730:	add    rsp,0x30
  405734:	pop    rbx
  405735:	pop    rsi
  405736:	pop    rdi
  405737:	ret    
  405738:	nop    DWORD PTR [rax+rax*1+0x0]
  405740:	call   0x43bc20
  405745:	lea    rdi,[rip+0x47c17]        # 0x44d363
  40574c:	mov    rsi,rax
  40574f:	jmp    0x40570e
  405751:	nop    DWORD PTR [rax+rax*1+0x0]
  405756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405760:	push   rdi
  405761:	push   rsi
  405762:	push   rbx
  405763:	sub    rsp,0x20
  405767:	mov    rax,QWORD PTR [rcx]
  40576a:	mov    r8d,0x5
  405770:	mov    rbx,rcx
  405773:	mov    rdi,rdx
  405776:	lea    rdx,[rip+0x47bf1]        # 0x44d36e
  40577d:	movzx  ecx,BYTE PTR [rax+0x3b]
  405781:	call   0x4071c0
  405786:	mov    rsi,rax
  405789:	mov    rax,QWORD PTR [rbx]
  40578c:	movzx  ecx,BYTE PTR [rax+0x3b]
  405790:	call   0x407230
  405795:	lea    rcx,[rip+0x47bd8]        # 0x44d374
  40579c:	mov    r9,rax
  40579f:	mov    r8,rdi
  4057a2:	mov    rdx,rsi
  4057a5:	add    rsp,0x20
  4057a9:	pop    rbx
  4057aa:	pop    rsi
  4057ab:	pop    rdi
  4057ac:	jmp    0x4054f0
  4057b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4057b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057c0:	push   rbx
  4057c1:	sub    rsp,0x20
  4057c5:	test   edx,edx
  4057c7:	mov    rbx,rcx
  4057ca:	je     0x4057e2
  4057cc:	sub    edx,0x1
  4057cf:	test   edx,edx
  4057d1:	mov    eax,0x7fffffff
  4057d6:	cmovle edx,eax
  4057d9:	mov    DWORD PTR [rbx+0x70],edx
  4057dc:	add    rsp,0x20
  4057e0:	pop    rbx
  4057e1:	ret    
  4057e2:	mov    rax,QWORD PTR [rcx]
  4057e5:	mov    rax,QWORD PTR [rax+0x8]
  4057e9:	mov    rcx,QWORD PTR [rax+0xc0]
  4057f0:	call   0x449300
  4057f5:	mov    ecx,eax
  4057f7:	call   0x449318
  4057fc:	test   eax,eax
  4057fe:	mov    edx,0x7fffffff
  405803:	je     0x4057d9
  405805:	lea    rcx,[rip+0x47b71]        # 0x44d37d
  40580c:	call   0x449498
  405811:	test   rax,rax
  405814:	mov    edx,0x7ffffffe
  405819:	je     0x4057d9
  40581b:	mov    rcx,rax
  40581e:	call   0x449538
  405823:	test   eax,eax
  405825:	mov    edx,0x7ffffffe
  40582a:	jle    0x4057d9
  40582c:	lea    edx,[rax-0x1]
  40582f:	jmp    0x4057cf
  405831:	nop    DWORD PTR [rax+rax*1+0x0]
  405836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405840:	push   rdi
  405841:	push   rsi
  405842:	push   rbx
  405843:	sub    rsp,0x20
  405847:	mov    rbx,rcx
  40584a:	mov    ecx,0x40
  40584f:	mov    esi,edx
  405851:	lea    rdi,[rbx+0x10]
  405855:	call   0x43baf0
  40585a:	xor    edx,edx
  40585c:	xor    r8d,r8d
  40585f:	mov    rcx,rax
  405862:	mov    QWORD PTR [rbx],rax
  405865:	and    rdi,0xfffffffffffffff8
  405869:	call   0x4075d0
  40586e:	mov    eax,ebx
  405870:	mov    QWORD PTR [rbx+0x8],0x0
  405878:	mov    QWORD PTR [rbx+0x34],0x0
  405880:	sub    eax,edi
  405882:	lea    ecx,[rax+0x3c]
  405885:	xor    eax,eax
  405887:	shr    ecx,0x3
  40588a:	rep stos QWORD PTR es:[rdi],rax
  40588d:	movsxd rcx,esi
  405890:	mov    BYTE PTR [rbx+0x3c],0x0
  405894:	mov    BYTE PTR [rbx+0x3d],0x0
  405898:	shl    rcx,0x2
  40589c:	mov    DWORD PTR [rbx+0x40],esi
  40589f:	call   0x43baf0
  4058a4:	lea    edx,[rsi-0x1]
  4058a7:	test   esi,esi
  4058a9:	mov    QWORD PTR [rbx+0x48],rax
  4058ad:	lea    rdx,[rax+rdx*4+0x4]
  4058b2:	jle    0x4058c3
  4058b4:	mov    DWORD PTR [rax],0x0
  4058ba:	add    rax,0x4
  4058be:	cmp    rax,rdx
  4058c1:	jne    0x4058b4
  4058c3:	mov    rax,QWORD PTR [rbx]
  4058c6:	mov    BYTE PTR [rbx+0x6c],0x0
  4058ca:	mov    rcx,rbx
  4058cd:	mov    edx,DWORD PTR [rax+0x28]
  4058d0:	call   0x4057c0
  4058d5:	lea    rax,[rip+0xaa4]        # 0x406380
  4058dc:	mov    BYTE PTR [rbx+0x74],0x0
  4058e0:	mov    BYTE PTR [rbx+0x75],0x0
  4058e4:	mov    BYTE PTR [rbx+0x76],0x0
  4058e8:	mov    BYTE PTR [rbx+0x77],0x0
  4058ec:	mov    QWORD PTR [rbx+0x88],rax
  4058f3:	lea    rax,[rip+0xfffffffffffffbe6]        # 0x4054e0
  4058fa:	mov    BYTE PTR [rbx+0x78],0x0
  4058fe:	mov    DWORD PTR [rbx+0x7c],0x0
  405905:	mov    BYTE PTR [rbx+0x80],0x0
  40590c:	mov    BYTE PTR [rbx+0x81],0x0
  405913:	mov    BYTE PTR [rbx+0x82],0x0
  40591a:	mov    DWORD PTR [rbx+0x84],0x0
  405924:	mov    QWORD PTR [rbx+0x98],0x0
  40592f:	mov    QWORD PTR [rbx+0x90],rax
  405936:	mov    QWORD PTR [rbx+0xa0],0x0
  405941:	mov    QWORD PTR [rbx+0xa8],0x0
  40594c:	mov    QWORD PTR [rbx+0xb0],0x0
  405957:	mov    DWORD PTR [rbx+0xc0],0x0
  405961:	mov    QWORD PTR [rbx+0xc8],0x0
  40596c:	mov    QWORD PTR [rbx+0xb8],0x0
  405977:	mov    DWORD PTR [rbx+0xd0],0x0
  405981:	mov    BYTE PTR [rbx+0xd4],0x0
  405988:	add    rsp,0x20
  40598c:	pop    rbx
  40598d:	pop    rsi
  40598e:	pop    rdi
  40598f:	ret    
  405990:	push   rbx
  405991:	sub    rsp,0x20
  405995:	cmp    BYTE PTR [rcx+0x3c],0x0
  405999:	je     0x4059c3
  40599b:	cmp    BYTE PTR [rcx+0x3d],0x0
  40599f:	mov    rbx,rcx
  4059a2:	mov    r8,QWORD PTR [rip+0x5ca17]        # 0x4623c0
  4059a9:	jne    0x4059d0
  4059ab:	mov    rcx,QWORD PTR [rcx]
  4059ae:	lea    rdx,[rip+0x47a03]        # 0x44d3b8
  4059b5:	call   0x408f40
  4059ba:	mov    rcx,QWORD PTR [rbx]
  4059bd:	call   0x409050
  4059c2:	nop
  4059c3:	add    rsp,0x20
  4059c7:	pop    rbx
  4059c8:	jmp    0x409ab0
  4059cd:	nop    DWORD PTR [rax]
  4059d0:	mov    rcx,QWORD PTR [rcx]
  4059d3:	lea    rdx,[rip+0x479ae]        # 0x44d388
  4059da:	call   0x408f40
  4059df:	jmp    0x4059ba
  4059e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4059e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4059f0:	push   rbp
  4059f1:	push   rdi
  4059f2:	push   rsi
  4059f3:	push   rbx
  4059f4:	sub    rsp,0x28
  4059f8:	mov    rbx,rcx
  4059fb:	mov    rdi,rdx
  4059fe:	mov    rbp,r8
  405a01:	mov    esi,r9d
  405a04:	call   QWORD PTR [rip+0x5ed7a]        # 0x464784
  405a0a:	mov    eax,DWORD PTR [rax]
  405a0c:	mov    QWORD PTR [rbx+0x8],rbp
  405a10:	mov    QWORD PTR [rbx],rdi
  405a13:	mov    DWORD PTR [rbx+0x28],esi
  405a16:	mov    DWORD PTR [rbx+0x2c],0x0
  405a1d:	mov    DWORD PTR [rbx+0x3c],0x0
  405a24:	mov    DWORD PTR [rbx+0x10],eax
  405a27:	mov    eax,DWORD PTR [rsp+0x70]
  405a2b:	mov    DWORD PTR [rbx+0x38],eax
  405a2e:	add    rsp,0x28
  405a32:	pop    rbx
  405a33:	pop    rsi
  405a34:	pop    rdi
  405a35:	pop    rbp
  405a36:	ret    
  405a37:	nop    WORD PTR [rax+rax*1+0x0]
  405a40:	push   rbp
  405a41:	push   rdi
  405a42:	push   rsi
  405a43:	push   rbx
  405a44:	sub    rsp,0x28
  405a48:	mov    rbx,rcx
  405a4b:	mov    rdi,rdx
  405a4e:	mov    rbp,r8
  405a51:	mov    esi,r9d
  405a54:	call   QWORD PTR [rip+0x5ed2a]        # 0x464784
  405a5a:	mov    eax,DWORD PTR [rax]
  405a5c:	mov    QWORD PTR [rbx+0x8],rbp
  405a60:	mov    QWORD PTR [rbx],rdi
  405a63:	mov    DWORD PTR [rbx+0x28],esi
  405a66:	mov    DWORD PTR [rbx+0x2c],0x0
  405a6d:	mov    DWORD PTR [rbx+0x3c],0x0
  405a74:	mov    DWORD PTR [rbx+0x10],eax
  405a77:	mov    eax,DWORD PTR [rsp+0x70]
  405a7b:	mov    DWORD PTR [rbx+0x38],eax
  405a7e:	add    rsp,0x28
  405a82:	pop    rbx
  405a83:	pop    rsi
  405a84:	pop    rdi
  405a85:	pop    rbp
  405a86:	ret    
  405a87:	nop    WORD PTR [rax+rax*1+0x0]
  405a90:	push   rbp
  405a91:	push   r14
  405a93:	push   r13
  405a95:	push   r12
  405a97:	push   rdi
  405a98:	push   rsi
  405a99:	push   rbx
  405a9a:	mov    rbp,rsp
  405a9d:	sub    rsp,0x90
  405aa4:	cmp    BYTE PTR [rcx+0x6c],0x0
  405aa8:	je     0x405c60
  405aae:	mov    edx,DWORD PTR [rdx+0x28]
  405ab1:	cmp    edx,0x1
  405ab4:	jbe    0x405c60
  405aba:	cmp    edx,DWORD PTR [rcx+0xc0]
  405ac0:	je     0x405c60
  405ac6:	mov    DWORD PTR [rcx+0xc0],edx
  405acc:	mov    rsi,rcx
  405acf:	lea    rcx,[rbp-0x20]
  405ad3:	call   0x409fa0
  405ad8:	mov    rax,QWORD PTR [rbp-0x20]
  405adc:	lea    rdx,[rbp-0x24]
  405ae0:	lea    rcx,[rbp-0x50]
  405ae4:	mov    r12d,DWORD PTR [rbp-0x14]
  405ae8:	mov    QWORD PTR [rbp-0x50],rax
  405aec:	mov    rax,QWORD PTR [rbp-0x18]
  405af0:	mov    QWORD PTR [rbp-0x48],rax
  405af4:	mov    rax,QWORD PTR [rbp-0x10]
  405af8:	mov    QWORD PTR [rbp-0x40],rax
  405afc:	mov    rax,QWORD PTR [rbp-0x8]
  405b00:	mov    QWORD PTR [rbp-0x38],rax
  405b04:	call   0x409b20
  405b09:	test   rax,rax
  405b0c:	mov    rbx,rax
  405b0f:	je     0x405c60
  405b15:	mov    edx,DWORD PTR [rbp-0x24]
  405b18:	mov    edi,DWORD PTR [rsi+0x70]
  405b1b:	mov    ecx,0xa
  405b20:	mov    eax,edx
  405b22:	sub    eax,r12d
  405b25:	cmp    eax,0xa
  405b28:	cmovg  eax,ecx
  405b2b:	mov    ecx,edi
  405b2d:	sub    ecx,eax
  405b2f:	cmp    r12d,ecx
  405b32:	jle    0x405b44
  405b34:	cmp    edi,edx
  405b36:	jg     0x405b44
  405b38:	sub    r12d,ecx
  405b3b:	movsxd r12,r12d
  405b3e:	add    rbx,r12
  405b41:	mov    r12d,ecx
  405b44:	mov    rcx,QWORD PTR [rsi]
  405b47:	call   0x407850
  405b4c:	mov    rcx,QWORD PTR [rsi]
  405b4f:	xor    edx,edx
  405b51:	mov    r13,QWORD PTR [rcx+0x10]
  405b55:	call   0x407570
  405b5a:	mov    rcx,QWORD PTR [rsi]
  405b5d:	mov    edx,0x20
  405b62:	call   0x4078b0
  405b67:	test   edi,edi
  405b69:	jle    0x405bb8
  405b6b:	mov    eax,DWORD PTR [rbp-0x24]
  405b6e:	test   eax,eax
  405b70:	jle    0x405bb8
  405b72:	lea    eax,[rdi-0x1]
  405b75:	lea    rdi,[rbx+rax*1+0x1]
  405b7a:	jmp    0x405b85
  405b7c:	nop    DWORD PTR [rax+0x0]
  405b80:	test   r8d,r8d
  405b83:	jle    0x405bb8
  405b85:	movzx  edx,BYTE PTR [rbx]
  405b88:	mov    eax,0x20
  405b8d:	cmp    dl,0x9
  405b90:	je     0x405b9a
  405b92:	movsx  ecx,dl
  405b95:	test   dl,dl
  405b97:	cmovne eax,ecx
  405b9a:	mov    rcx,QWORD PTR [rsi]
  405b9d:	mov    edx,eax
  405b9f:	add    rbx,0x1
  405ba3:	call   0x4078b0
  405ba8:	mov    eax,DWORD PTR [rbp-0x24]
  405bab:	cmp    rbx,rdi
  405bae:	lea    r8d,[rax-0x1]
  405bb2:	mov    DWORD PTR [rbp-0x24],r8d
  405bb6:	jne    0x405b80
  405bb8:	mov    rcx,QWORD PTR [rsi]
  405bbb:	call   0x407850
  405bc0:	mov    rax,QWORD PTR [rsi]
  405bc3:	lea    rdx,[rip+0x47818]        # 0x44d3e2
  405bca:	mov    r8d,0x5
  405bd0:	movzx  ecx,BYTE PTR [rax+0x3b]
  405bd4:	call   0x4071c0
  405bd9:	mov    rbx,rax
  405bdc:	mov    rax,QWORD PTR [rsi]
  405bdf:	movzx  ecx,BYTE PTR [rax+0x3b]
  405be3:	call   0x407230
  405be8:	mov    rcx,rbx
  405beb:	mov    rdi,rax
  405bee:	call   0x4493c0
  405bf3:	mov    rcx,rdi
  405bf6:	mov    r14,rax
  405bf9:	call   0x4493c0
  405bfe:	lea    edx,[r12+0x3]
  405c03:	add    rax,r14
  405c06:	movsxd rdx,edx
  405c09:	add    rdx,rax
  405c0c:	lea    rax,[rdx+0x1e]
  405c10:	and    rax,0xfffffffffffffff0
  405c14:	call   0x43d410
  405c19:	lea    r8,[rip+0x477c8]        # 0x44d3e8
  405c20:	sub    rsp,rax
  405c23:	mov    r9,rbx
  405c26:	lea    r14,[rsp+0x40]
  405c2b:	mov    QWORD PTR [rsp+0x30],rdi
  405c30:	mov    DWORD PTR [rsp+0x28],0x5e
  405c38:	mov    DWORD PTR [rsp+0x20],r12d
  405c3d:	mov    rcx,r14
  405c40:	call   0x449930
  405c45:	mov    rcx,QWORD PTR [rsi]
  405c48:	mov    rdx,r14
  405c4b:	call   0x407ae0
  405c50:	mov    rcx,QWORD PTR [rsi]
  405c53:	mov    rdx,r13
  405c56:	call   0x407570
  405c5b:	nop
  405c5c:	nop    DWORD PTR [rax+0x0]
  405c60:	mov    rsp,rbp
  405c63:	pop    rbx
  405c64:	pop    rsi
  405c65:	pop    rdi
  405c66:	pop    r12
  405c68:	pop    r13
  405c6a:	pop    r14
  405c6c:	pop    rbp
  405c6d:	ret    
  405c6e:	xchg   ax,ax
  405c70:	push   rdi
  405c71:	push   rsi
  405c72:	push   rbx
  405c73:	sub    rsp,0x50
  405c77:	mov    rbx,rcx
  405c7a:	mov    rcx,QWORD PTR [rcx]
  405c7d:	mov    QWORD PTR [rsp+0x48],0x0
  405c86:	cmp    BYTE PTR [rcx+0x39],0x0
  405c8a:	jne    0x405dd0
  405c90:	cmp    edx,0x1
  405c93:	jbe    0x405dc3
  405c99:	mov    rsi,QWORD PTR [rip+0x55280]        # 0x45af20
  405ca0:	lea    r9,[rsp+0x48]
  405ca5:	mov    r8d,0x2
  405cab:	mov    rcx,QWORD PTR [rsi]
  405cae:	call   0x40b2c0
  405cb3:	mov    rax,QWORD PTR [rsp+0x48]
  405cb8:	test   rax,rax
  405cbb:	je     0x405dc3
  405cc1:	cmp    rax,QWORD PTR [rbx+0xc8]
  405cc8:	je     0x405dc3
  405cce:	mov    QWORD PTR [rbx+0xc8],rax
  405cd5:	movsxd rax,DWORD PTR [rax+0x14]
  405cd9:	test   eax,eax
  405cdb:	js     0x405dc3
  405ce1:	mov    rcx,QWORD PTR [rsi]
  405ce4:	lea    rdx,[rax+rax*4]
  405ce8:	cmp    BYTE PTR [rbx+0x76],0x0
  405cec:	mov    rax,QWORD PTR [rcx]
  405cef:	lea    rdx,[rax+rdx*8]
  405cf3:	mov    QWORD PTR [rsp+0x48],rdx
  405cf8:	movzx  ecx,BYTE PTR [rdx+0x1c]
  405cfc:	jne    0x405df0
  405d02:	mov    eax,0xffffffff
  405d07:	mov    r9,QWORD PTR [rdx+0x8]
  405d0b:	shl    eax,cl
  405d0d:	mov    r8d,eax
  405d10:	mov    eax,DWORD PTR [rdx+0x28]
  405d13:	sub    eax,0x1
  405d16:	sub    eax,DWORD PTR [rdx]
  405d18:	and    eax,r8d
  405d1b:	lea    r8,[rip+0x4764c]        # 0x44d36e
  405d22:	shr    eax,cl
  405d24:	add    eax,DWORD PTR [rdx+0x10]
  405d27:	mov    rcx,QWORD PTR [rbx]
  405d2a:	lea    rdx,[rip+0x476ef]        # 0x44d420
  405d31:	mov    DWORD PTR [rsp+0x20],eax
  405d35:	call   0x408f40
  405d3a:	mov    rax,QWORD PTR [rsp+0x48]
  405d3f:	mov    edi,0x1
  405d44:	movsxd rax,DWORD PTR [rax+0x14]
  405d48:	test   eax,eax
  405d4a:	js     0x405dab
  405d4c:	nop    DWORD PTR [rax+0x0]
  405d50:	mov    rcx,QWORD PTR [rsi]
  405d53:	lea    rdx,[rax+rax*4]
  405d57:	mov    rax,QWORD PTR [rcx]
  405d5a:	lea    rdx,[rax+rdx*8]
  405d5e:	mov    eax,edi
  405d60:	movzx  ecx,BYTE PTR [rdx+0x1c]
  405d64:	mov    r9,QWORD PTR [rdx+0x8]
  405d68:	mov    QWORD PTR [rsp+0x48],rdx
  405d6d:	shl    eax,cl
  405d6f:	neg    eax
  405d71:	mov    r8d,eax
  405d74:	mov    eax,DWORD PTR [rdx+0x28]
  405d77:	sub    eax,0x1
  405d7a:	sub    eax,DWORD PTR [rdx]
  405d7c:	and    eax,r8d
  405d7f:	lea    r8,[rip+0x475e8]        # 0x44d36e
  405d86:	shr    eax,cl
  405d88:	add    eax,DWORD PTR [rdx+0x10]
  405d8b:	mov    rcx,QWORD PTR [rbx]
  405d8e:	lea    rdx,[rip+0x476b3]        # 0x44d448
  405d95:	mov    DWORD PTR [rsp+0x20],eax
  405d99:	call   0x408f40
  405d9e:	mov    rax,QWORD PTR [rsp+0x48]
  405da3:	movsxd rax,DWORD PTR [rax+0x14]
  405da7:	test   eax,eax
  405da9:	jns    0x405d50
  405dab:	mov    rcx,QWORD PTR [rbx]
  405dae:	lea    rdx,[rip+0x4768b]        # 0x44d440
  405db5:	call   0x408f40
  405dba:	mov    rcx,QWORD PTR [rbx]
  405dbd:	call   0x407850
  405dc2:	nop
  405dc3:	add    rsp,0x50
  405dc7:	pop    rbx
  405dc8:	pop    rsi
  405dc9:	pop    rdi
  405dca:	ret    
  405dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  405dd0:	mov    DWORD PTR [rsp+0x3c],edx
  405dd4:	call   0x407850
  405dd9:	mov    rax,QWORD PTR [rbx]
  405ddc:	mov    edx,DWORD PTR [rsp+0x3c]
  405de0:	mov    BYTE PTR [rax+0x39],0x0
  405de4:	jmp    0x405c90
  405de9:	nop    DWORD PTR [rax+0x0]
  405df0:	mov    eax,DWORD PTR [rdx+0x28]
  405df3:	mov    r8d,0x1
  405df9:	shl    r8d,cl
  405dfc:	mov    r9d,r8d
  405dff:	sub    r8d,0x1
  405e03:	sub    eax,0x1
  405e06:	sub    eax,DWORD PTR [rdx]
  405e08:	neg    r9d
  405e0b:	and    eax,r9d
  405e0e:	mov    r9,QWORD PTR [rdx+0x8]
  405e12:	and    r8d,eax
  405e15:	shr    eax,cl
  405e17:	mov    rcx,QWORD PTR [rbx]
  405e1a:	mov    DWORD PTR [rsp+0x28],r8d
  405e1f:	add    eax,DWORD PTR [rdx+0x10]
  405e22:	lea    r8,[rip+0x47545]        # 0x44d36e
  405e29:	lea    rdx,[rip+0x475c8]        # 0x44d3f8
  405e30:	mov    DWORD PTR [rsp+0x20],eax
  405e34:	call   0x408f40
  405e39:	jmp    0x405d3a
  405e3e:	xchg   ax,ax
  405e40:	push   r14
  405e42:	push   r13
  405e44:	push   r12
  405e46:	push   rbp
  405e47:	push   rdi
  405e48:	push   rsi
  405e49:	push   rbx
  405e4a:	sub    rsp,0x20
  405e4e:	xor    eax,eax
  405e50:	test   edx,edx
  405e52:	js     0x405f11
  405e58:	cmp    edx,DWORD PTR [rcx+0x40]
  405e5b:	jge    0x405f11
  405e61:	cmp    r8d,0xc
  405e65:	jg     0x405f11
  405e6b:	mov    rax,QWORD PTR [rcx+0x48]
  405e6f:	movsxd r10,edx
  405e72:	test   r9d,r9d
  405e75:	lea    rax,[rax+r10*4]
  405e79:	mov    ebx,DWORD PTR [rax]
  405e7b:	je     0x405f20
  405e81:	mov    esi,DWORD PTR [rcx+0x58]
  405e84:	mov    rdi,QWORD PTR [rcx+0x50]
  405e88:	mov    ebp,esi
  405e8a:	sub    ebp,0x1
  405e8d:	js     0x405ed2
  405e8f:	movsxd r11,ebp
  405e92:	lea    r10,[r11+r11*2]
  405e96:	shl    r10,0x2
  405e9a:	lea    rax,[rdi+r10*1]
  405e9e:	cmp    DWORD PTR [rax+0x4],edx
  405ea1:	je     0x405f34
  405ea7:	mov    ebp,ebp
  405ea9:	lea    r10,[rdi+r10*1-0xc]
  405eae:	sub    r11,rbp
  405eb1:	lea    rax,[r11+r11*2]
  405eb5:	lea    r11,[rdi+rax*4-0xc]
  405eba:	jmp    0x405ecd
  405ebc:	nop    DWORD PTR [rax+0x0]
  405ec0:	mov    rax,r10
  405ec3:	sub    r10,0xc
  405ec7:	cmp    DWORD PTR [r10+0x10],edx
  405ecb:	je     0x405f34
  405ecd:	cmp    r10,r11
  405ed0:	jne    0x405ec0
  405ed2:	add    esi,0x1
  405ed5:	mov    rbp,rcx
  405ed8:	mov    r14d,edx
  405edb:	movsxd rsi,esi
  405ede:	mov    rcx,rdi
  405ee1:	mov    r12d,r9d
  405ee4:	lea    rsi,[rsi+rsi*2]
  405ee8:	mov    r13d,r8d
  405eeb:	shl    rsi,0x2
  405eef:	mov    rdx,rsi
  405ef2:	call   0x43bb70
  405ef7:	mov    QWORD PTR [rbp+0x50],rax
  405efb:	lea    rax,[rax+rsi*1-0xc]
  405f00:	mov    DWORD PTR [rax],r12d
  405f03:	mov    DWORD PTR [rax+0x4],r14d
  405f07:	mov    DWORD PTR [rax+0x8],r13d
  405f0b:	add    DWORD PTR [rbp+0x58],0x1
  405f0f:	mov    eax,ebx
  405f11:	add    rsp,0x20
  405f15:	pop    rbx
  405f16:	pop    rsi
  405f17:	pop    rdi
  405f18:	pop    rbp
  405f19:	pop    r12
  405f1b:	pop    r13
  405f1d:	pop    r14
  405f1f:	ret    
  405f20:	mov    DWORD PTR [rax],r8d
  405f23:	mov    eax,ebx
  405f25:	add    rsp,0x20
  405f29:	pop    rbx
  405f2a:	pop    rsi
  405f2b:	pop    rdi
  405f2c:	pop    rbp
  405f2d:	pop    r12
  405f2f:	pop    r13
  405f31:	pop    r14
  405f33:	ret    
  405f34:	mov    ebx,DWORD PTR [rax+0x8]
  405f37:	jmp    0x405ed2
  405f39:	nop    DWORD PTR [rax+0x0]
  405f40:	push   rbx
  405f41:	sub    rsp,0x20
  405f45:	mov    eax,DWORD PTR [rcx+0x68]
  405f48:	mov    rbx,rcx
  405f4b:	mov    rcx,QWORD PTR [rcx+0x60]
  405f4f:	lea    edx,[rax+0x1]
  405f52:	movsxd rdx,edx
  405f55:	shl    rdx,0x2
  405f59:	call   0x43bb70
  405f5e:	movsxd rdx,DWORD PTR [rbx+0x68]
  405f62:	mov    QWORD PTR [rbx+0x60],rax
  405f66:	lea    ecx,[rdx+0x1]
  405f69:	mov    DWORD PTR [rbx+0x68],ecx
  405f6c:	mov    ecx,DWORD PTR [rbx+0x58]
  405f6f:	mov    DWORD PTR [rax+rdx*4],ecx
  405f72:	add    rsp,0x20
  405f76:	pop    rbx
  405f77:	ret    
  405f78:	nop    DWORD PTR [rax+rax*1+0x0]
  405f80:	push   rbp
  405f81:	push   rdi
  405f82:	push   rsi
  405f83:	push   rbx
  405f84:	sub    rsp,0x28
  405f88:	mov    eax,DWORD PTR [rcx+0x68]
  405f8b:	xor    edi,edi
  405f8d:	mov    rbx,rcx
  405f90:	mov    ebp,edx
  405f92:	test   eax,eax
  405f94:	je     0x405fa5
  405f96:	mov    rdx,QWORD PTR [rcx+0x60]
  405f9a:	sub    eax,0x1
  405f9d:	mov    DWORD PTR [rcx+0x68],eax
  405fa0:	cdqe   
  405fa2:	mov    edi,DWORD PTR [rdx+rax*4]
  405fa5:	mov    eax,DWORD PTR [rbx+0x58]
  405fa8:	mov    rcx,QWORD PTR [rbx+0x50]
  405fac:	add    eax,0x1
  405faf:	cdqe   
  405fb1:	lea    rsi,[rax+rax*2]
  405fb5:	shl    rsi,0x2
  405fb9:	mov    rdx,rsi
  405fbc:	call   0x43bb70
  405fc1:	mov    QWORD PTR [rbx+0x50],rax
  405fc5:	lea    rax,[rax+rsi*1-0xc]
  405fca:	mov    DWORD PTR [rax],ebp
  405fcc:	mov    DWORD PTR [rax+0x4],edi
  405fcf:	mov    DWORD PTR [rax+0x8],0xe
  405fd6:	add    DWORD PTR [rbx+0x58],0x1
  405fda:	add    rsp,0x28
  405fde:	pop    rbx
  405fdf:	pop    rsi
  405fe0:	pop    rdi
  405fe1:	pop    rbp
  405fe2:	ret    
  405fe3:	nop    DWORD PTR [rax]
  405fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ff0:	movzx  edx,BYTE PTR [rcx]
  405ff3:	mov    rax,rcx
  405ff6:	cmp    dl,0x2e
  405ff9:	jne    0x4060c2
  405fff:	cmp    BYTE PTR [rcx+0x1],0x2e
  406003:	jne    0x4060bd
  406009:	movzx  edx,BYTE PTR [rcx+0x2]
  40600d:	cmp    dl,0x5c
  406010:	je     0x40601b
  406012:	cmp    dl,0x2f
  406015:	jne    0x4060bd
  40601b:	mov    rdx,rax
  40601e:	xchg   ax,ax
  406020:	add    rdx,0x3
  406024:	movzx  r8d,BYTE PTR [rdx]
  406028:	cmp    r8b,0x2e
  40602c:	jne    0x406084
  40602e:	cmp    BYTE PTR [rdx+0x1],0x2e
  406032:	jne    0x406045
  406034:	movzx  r8d,BYTE PTR [rdx+0x2]
  406039:	cmp    r8b,0x5c
  40603d:	je     0x406020
  40603f:	cmp    r8b,0x2f
  406043:	je     0x406020
  406045:	cmp    rax,rdx
  406048:	jae    0x406080
  40604a:	movzx  ecx,BYTE PTR [rdx-0x1]
  40604e:	cmp    cl,0x5c
  406051:	je     0x406080
  406053:	cmp    cl,0x2f
  406056:	jne    0x406071
  406058:	jmp    0x406080
  40605a:	nop    WORD PTR [rax+rax*1+0x0]
  406060:	movzx  r8d,BYTE PTR [rdx-0x1]
  406065:	cmp    r8b,0x5c
  406069:	je     0x406080
  40606b:	cmp    r8b,0x2f
  40606f:	je     0x406080
  406071:	sub    rdx,0x1
  406075:	cmp    rdx,rax
  406078:	jne    0x406060
  40607a:	repz ret 
  40607c:	nop    DWORD PTR [rax+0x0]
  406080:	mov    rax,rdx
  406083:	ret    
  406084:	cmp    r8b,0x2f
  406088:	jne    0x406045
  40608a:	lea    r8,[rip+0x4766f]        # 0x44d700
  406091:	jmp    0x406098
  406093:	test   r10b,r10b
  406096:	je     0x406045
  406098:	add    rdx,0x1
  40609c:	add    r8,0x1
  4060a0:	movzx  r9d,BYTE PTR [rdx]
  4060a4:	movzx  r10d,BYTE PTR [r8]
  4060a8:	cmp    r9b,r10b
  4060ab:	sete   r11b
  4060af:	test   r9b,r9b
  4060b2:	setne  r9b
  4060b6:	test   r11b,r9b
  4060b9:	jne    0x406093
  4060bb:	jmp    0x406045
  4060bd:	mov    rdx,rax
  4060c0:	jmp    0x406045
  4060c2:	cmp    dl,0x2f
  4060c5:	jne    0x40607a
  4060c7:	mov    rdx,rax
  4060ca:	jmp    0x40608a
  4060cc:	nop    DWORD PTR [rax+0x0]
  4060d0:	push   rbx
  4060d1:	sub    rsp,0x60
  4060d5:	lea    rax,[rsp+0x78]
  4060da:	mov    QWORD PTR [rsp+0x80],r8
  4060e2:	mov    QWORD PTR [rsp+0x88],r9
  4060ea:	mov    rbx,rcx
  4060ed:	mov    QWORD PTR [rsp+0x78],rdx
  4060f2:	mov    QWORD PTR [rsp+0x28],rax
  4060f7:	call   QWORD PTR [rip+0x5e687]        # 0x464784
  4060fd:	mov    eax,DWORD PTR [rax]
  4060ff:	lea    rdx,[rsp+0x30]
  406104:	mov    QWORD PTR [rsp+0x30],rbx
  406109:	mov    QWORD PTR [rsp+0x48],0x0
  406112:	mov    QWORD PTR [rsp+0x50],0x0
  40611b:	mov    DWORD PTR [rsp+0x40],eax
  40611f:	lea    rax,[rsp+0x28]
  406124:	mov    QWORD PTR [rsp+0x38],rax
  406129:	mov    rax,QWORD PTR [rip+0x44f10]        # 0x44b040
  406130:	mov    rcx,QWORD PTR [rax]
  406133:	call   0x408f00
  406138:	mov    rax,QWORD PTR [rip+0x44f01]        # 0x44b040
  40613f:	mov    rcx,QWORD PTR [rax]
  406142:	call   0x409050
  406147:	nop
  406148:	add    rsp,0x60
  40614c:	pop    rbx
  40614d:	ret    
  40614e:	xchg   ax,ax
  406150:	mov    rax,QWORD PTR [rip+0x44ee9]        # 0x44b040
  406157:	cmp    QWORD PTR [rax+0x18],0x0
  40615c:	setne  al
  40615f:	ret    
  406160:	sub    rsp,0x38
  406164:	mov    QWORD PTR [rsp+0x50],r8
  406169:	lea    r8,[rsp+0x50]
  40616e:	mov    QWORD PTR [rsp+0x58],r9
  406173:	mov    QWORD PTR [rsp+0x28],r8
  406178:	call   0x43db30
  40617d:	nop
  40617e:	add    rsp,0x38
  406182:	ret    
  406183:	nop    DWORD PTR [rax]
  406186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406190:	push   rsi
  406191:	push   rbx
  406192:	sub    rsp,0x28
  406196:	mov    esi,edx
  406198:	mov    rbx,r8
  40619b:	call   0x405ff0
  4061a0:	lea    rcx,[rip+0x472c3]        # 0x44d46a
  4061a7:	mov    r8,rax
  4061aa:	mov    r9d,esi
  4061ad:	mov    rdx,rbx
  4061b0:	call   0x407120
  4061b5:	nop
  4061b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061c0:	push   r15
  4061c2:	push   r14
  4061c4:	push   r13
  4061c6:	push   r12
  4061c8:	push   rbp
  4061c9:	push   rdi
  4061ca:	push   rsi
  4061cb:	push   rbx
  4061cc:	sub    rsp,0x88
  4061d3:	movsxd rax,DWORD PTR [rdx+0x38]
  4061d7:	mov    rsi,QWORD PTR [rcx]
  4061da:	mov    rbx,rdx
  4061dd:	lea    rdx,[rip+0x4771c]        # 0x44d900
  4061e4:	mov    rbp,rcx
  4061e7:	mov    r13,QWORD PTR [rdx+rax*8]
  4061eb:	lea    rdx,[rip+0x475ce]        # 0x44d7c0
  4061f2:	mov    rdi,QWORD PTR [rdx+rax*8]
  4061f6:	test   rdi,rdi
  4061f9:	je     0x406300
  4061ff:	mov    rcx,rdi
  406202:	call   0x4493c0
  406207:	movzx  ecx,BYTE PTR [rsi+0x3b]
  40620b:	mov    r8,rax
  40620e:	mov    rdx,rdi
  406211:	call   0x4071c0
  406216:	movzx  ecx,BYTE PTR [rsi+0x3b]
  40621a:	mov    r14,rax
  40621d:	call   0x407230
  406222:	mov    r15,rax
  406225:	movzx  ecx,BYTE PTR [rsi+0x3b]
  406229:	lea    rdx,[rip+0x4713e]        # 0x44d36e
  406230:	mov    r8d,0x5
  406236:	call   0x4071c0
  40623b:	movzx  ecx,BYTE PTR [rsi+0x3b]
  40623f:	mov    r12,rax
  406242:	call   0x407230
  406247:	mov    edx,DWORD PTR [rbx+0x28]
  40624a:	lea    rcx,[rsp+0x60]
  40624f:	mov    QWORD PTR [rsp+0x58],rax
  406254:	call   0x409fa0
  406259:	mov    edx,DWORD PTR [rbx+0x2c]
  40625c:	mov    r8,QWORD PTR [rsp+0x60]
  406261:	mov    r9d,DWORD PTR [rsp+0x68]
  406266:	mov    rax,QWORD PTR [rsp+0x58]
  40626b:	test   edx,edx
  40626d:	cmove  edx,DWORD PTR [rsp+0x6c]
  406272:	cmp    DWORD PTR [rbx+0x38],0xc
  406276:	jg     0x406360
  40627c:	test   r8,r8
  40627f:	je     0x406333
  406285:	lea    rdi,[rip+0x47252]        # 0x44d4de
  40628c:	mov    ecx,0xb
  406291:	mov    rsi,r8
  406294:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406296:	je     0x406310
  406298:	cmp    BYTE PTR [rbp+0x76],0x0
  40629c:	jne    0x4062d5
  40629e:	lea    rcx,[rip+0x47259]        # 0x44d4fe
  4062a5:	mov    QWORD PTR [rsp+0x38],r15
  4062aa:	mov    QWORD PTR [rsp+0x30],r13
  4062af:	mov    QWORD PTR [rsp+0x28],r14
  4062b4:	mov    QWORD PTR [rsp+0x20],rax
  4062b9:	mov    rdx,r12
  4062bc:	call   0x4054f0
  4062c1:	add    rsp,0x88
  4062c8:	pop    rbx
  4062c9:	pop    rsi
  4062ca:	pop    rdi
  4062cb:	pop    rbp
  4062cc:	pop    r12
  4062ce:	pop    r13
  4062d0:	pop    r14
  4062d2:	pop    r15
  4062d4:	ret    
  4062d5:	lea    rcx,[rip+0x4720d]        # 0x44d4e9
  4062dc:	mov    DWORD PTR [rsp+0x20],edx
  4062e0:	mov    QWORD PTR [rsp+0x40],r15
  4062e5:	mov    QWORD PTR [rsp+0x38],r13
  4062ea:	mov    QWORD PTR [rsp+0x30],r14
  4062ef:	mov    rdx,r12
  4062f2:	mov    QWORD PTR [rsp+0x28],rax
  4062f7:	call   0x4054f0
  4062fc:	jmp    0x4062c1
  4062fe:	xchg   ax,ax
  406300:	lea    r15,[rip+0x4705b]        # 0x44d362
  406307:	mov    r14,r15
  40630a:	jmp    0x406225
  40630f:	nop
  406310:	lea    rcx,[rip+0x471b8]        # 0x44d4cf
  406317:	mov    QWORD PTR [rsp+0x30],r15
  40631c:	mov    QWORD PTR [rsp+0x28],r13
  406321:	mov    QWORD PTR [rsp+0x20],r14
  406326:	mov    r9,rax
  406329:	mov    rdx,r12
  40632c:	call   0x4054f0
  406331:	jmp    0x4062c1
  406333:	mov    r8,QWORD PTR [rip+0x5c086]        # 0x4623c0
  40633a:	lea    rcx,[rip+0x4718e]        # 0x44d4cf
  406341:	mov    QWORD PTR [rsp+0x30],r15
  406346:	mov    QWORD PTR [rsp+0x28],r13
  40634b:	mov    QWORD PTR [rsp+0x20],r14
  406350:	mov    r9,rax
  406353:	mov    rdx,r12
  406356:	call   0x4054f0
  40635b:	jmp    0x4062c1
  406360:	lea    r8,[rip+0x47409]        # 0x44d770
  406367:	lea    rcx,[rip+0x47112]        # 0x44d480
  40636e:	mov    edx,0xf4
  406373:	call   0x406190
  406378:	nop
  406379:	nop    DWORD PTR [rax+0x0]
  406380:	push   rsi
  406381:	push   rbx
  406382:	sub    rsp,0x28
  406386:	mov    rsi,rdx
  406389:	mov    edx,DWORD PTR [rdx+0x28]
  40638c:	mov    rbx,rcx
  40638f:	call   0x405c70
  406394:	mov    rdx,rsi
  406397:	mov    rcx,rbx
  40639a:	call   0x4061c0
  40639f:	mov    rcx,QWORD PTR [rbx]
  4063a2:	mov    rdx,rax
  4063a5:	add    rsp,0x28
  4063a9:	pop    rbx
  4063aa:	pop    rsi
  4063ab:	jmp    0x407570
  4063b0:	push   rdi
  4063b1:	push   rsi
  4063b2:	push   rbx
  4063b3:	sub    rsp,0x70
  4063b7:	lea    rax,[rsp+0xa8]
  4063bf:	mov    rbx,rcx
  4063c2:	mov    esi,edx
  4063c4:	mov    rdi,r8
  4063c7:	mov    QWORD PTR [rsp+0xa8],r9
  4063cf:	mov    QWORD PTR [rsp+0x28],rax
  4063d4:	call   QWORD PTR [rip+0x5e3aa]        # 0x464784
  4063da:	mov    eax,DWORD PTR [rax]
  4063dc:	cmp    BYTE PTR [rbx+0xd4],0x0
  4063e3:	mov    QWORD PTR [rsp+0x30],rdi
  4063e8:	mov    DWORD PTR [rsp+0x58],esi
  4063ec:	mov    DWORD PTR [rsp+0x5c],0x0
  4063f4:	mov    DWORD PTR [rsp+0x68],0x8
  4063fc:	mov    DWORD PTR [rsp+0x40],eax
  406400:	lea    rax,[rsp+0x28]
  406405:	mov    DWORD PTR [rsp+0x6c],0x0
  40640d:	mov    QWORD PTR [rsp+0x38],rax
  406412:	jne    0x406470
  406414:	lea    rsi,[rsp+0x30]
  406419:	mov    rax,QWORD PTR [rbx]
  40641c:	mov    rcx,rbx
  40641f:	mov    rdx,rsi
  406422:	mov    rdi,QWORD PTR [rax+0x10]
  406426:	call   0x4061c0
  40642b:	mov    rcx,QWORD PTR [rbx]
  40642e:	mov    rdx,rax
  406431:	call   0x407570
  406436:	mov    rcx,QWORD PTR [rbx]
  406439:	call   0x407850
  40643e:	mov    rcx,QWORD PTR [rbx]
  406441:	mov    rdx,rsi
  406444:	call   0x407c30
  406449:	mov    rcx,QWORD PTR [rbx]
  40644c:	call   0x408e30
  406451:	mov    rcx,QWORD PTR [rbx]
  406454:	call   0x4075a0
  406459:	mov    rcx,QWORD PTR [rbx]
  40645c:	mov    rdx,rdi
  40645f:	call   0x407570
  406464:	mov    rdx,rsi
  406467:	mov    rcx,rbx
  40646a:	call   0x405a90
  40646f:	nop
  406470:	add    rsp,0x70
  406474:	pop    rbx
  406475:	pop    rsi
  406476:	pop    rdi
  406477:	ret    
  406478:	nop    DWORD PTR [rax+rax*1+0x0]
  406480:	push   rsi
  406481:	push   rbx
  406482:	sub    rsp,0x48
  406486:	cmp    edx,0x9
  406489:	mov    rbx,rcx
  40648c:	ja     0x406590
  406492:	lea    rax,[rip+0x47197]        # 0x44d630
  406499:	mov    edx,edx
  40649b:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40649f:	add    rax,rdx
  4064a2:	jmp    rax
  4064a4:	cmp    BYTE PTR [rcx+0x75],0x0
  4064a8:	jne    0x406587
  4064ae:	cmp    BYTE PTR [rcx+0x80],0x0
  4064b5:	jne    0x4065d5
  4064bb:	mov    esi,DWORD PTR [rcx+0x84]
  4064c1:	test   esi,esi
  4064c3:	je     0x4064d3
  4064c5:	mov    eax,DWORD PTR [rcx+0x1c]
  4064c8:	add    eax,DWORD PTR [rcx+0x18]
  4064cb:	cmp    esi,eax
  4064cd:	jbe    0x4065fd
  4064d3:	add    rsp,0x48
  4064d7:	pop    rbx
  4064d8:	pop    rsi
  4064d9:	ret    
  4064da:	nop    WORD PTR [rax+rax*1+0x0]
  4064e0:	lea    r8,[rip+0xfffffffffffff209]        # 0x4056f0
  4064e7:	xor    r9d,r9d
  4064ea:	xor    edx,edx
  4064ec:	xor    ecx,ecx
  4064ee:	call   0x427040
  4064f3:	test   rax,rax
  4064f6:	mov    DWORD PTR [rsp+0x3c],0x0
  4064fe:	je     0x406525
  406500:	lea    rdx,[rsp+0x3c]
  406505:	lea    r9,[rip+0xfffffffffffff1e4]        # 0x4056f0
  40650c:	lea    r8,[rip+0xfffffffffffff01d]        # 0x405530
  406513:	mov    rcx,rax
  406516:	mov    QWORD PTR [rsp+0x20],rdx
  40651b:	mov    edx,0x2
  406520:	call   0x427140
  406525:	cmp    BYTE PTR [rbx+0x75],0x0
  406529:	jne    0x406587
  40652b:	mov    rbx,QWORD PTR [rip+0x5e202]        # 0x464734
  406532:	call   rbx
  406534:	lea    rdx,[rip+0x47035]        # 0x44d570
  40653b:	lea    rcx,[rax+0x60]
  40653f:	call   0x406160
  406544:	mov    eax,DWORD PTR [rsp+0x3c]
  406548:	test   eax,eax
  40654a:	jle    0x40655e
  40654c:	call   rbx
  40654e:	lea    rdx,[rip+0x4706b]        # 0x44d5c0
  406555:	lea    rcx,[rax+0x60]
  406559:	call   0x406160
  40655e:	call   rbx
  406560:	mov    r8,QWORD PTR [rip+0x548e9]        # 0x45ae50
  406567:	lea    rcx,[rax+0x60]
  40656b:	lea    rdx,[rip+0x4708a]        # 0x44d5fc
  406572:	call   0x406160
  406577:	mov    ecx,0x4
  40657c:	call   0x449520
  406581:	cmp    BYTE PTR [rcx+0x75],0x0
  406585:	je     0x4065b0
  406587:	call   0x449548
  40658c:	nop    DWORD PTR [rax+0x0]
  406590:	lea    r8,[rip+0x471b9]        # 0x44d750
  406597:	lea    rcx,[rip+0x46ee2]        # 0x44d480
  40659e:	mov    edx,0x1f2
  4065a3:	call   0x406190
  4065a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4065b0:	call   0x405990
  4065b5:	call   QWORD PTR [rip+0x5e179]        # 0x464734
  4065bb:	lea    rdx,[rip+0x47054]        # 0x44d616
  4065c2:	lea    rcx,[rax+0x60]
  4065c6:	call   0x406160
  4065cb:	mov    ecx,0x1
  4065d0:	call   0x449520
  4065d5:	call   QWORD PTR [rip+0x5e159]        # 0x464734
  4065db:	lea    rdx,[rip+0x46f2e]        # 0x44d510
  4065e2:	lea    rcx,[rax+0x60]
  4065e6:	call   0x406160
  4065eb:	mov    rcx,rbx
  4065ee:	call   0x405990
  4065f3:	mov    ecx,0x1
  4065f8:	call   0x449520
  4065fd:	call   QWORD PTR [rip+0x5e131]        # 0x464734
  406603:	lea    rdx,[rip+0x46f36]        # 0x44d540
  40660a:	lea    rcx,[rax+0x60]
  40660e:	mov    r8d,esi
  406611:	call   0x406160
  406616:	mov    rcx,rbx
  406619:	call   0x405990
  40661e:	mov    ecx,0x1
  406623:	call   0x449520
  406628:	nop
  406629:	nop    DWORD PTR [rax+0x0]
  406630:	push   rbp
  406631:	push   r15
  406633:	push   r14
  406635:	push   r13
  406637:	push   r12
  406639:	push   rdi
  40663a:	push   rsi
  40663b:	push   rbx
  40663c:	sub    rsp,0x58
  406640:	lea    rbp,[rsp+0x80]
  406648:	mov    edi,DWORD PTR [rdx+0x38]
  40664b:	mov    r13d,DWORD PTR [rdx+0x28]
  40664f:	mov    rbx,rcx
  406652:	mov    rsi,rdx
  406655:	lea    eax,[rdi-0x6]
  406658:	and    eax,0xfffffffb
  40665b:	jne    0x406680
  40665d:	cmp    BYTE PTR [rcx+0x81],0x0
  406664:	je     0x4068a0
  40666a:	xor    eax,eax
  40666c:	lea    rsp,[rbp-0x28]
  406670:	pop    rbx
  406671:	pop    rsi
  406672:	pop    rdi
  406673:	pop    r12
  406675:	pop    r13
  406677:	pop    r14
  406679:	pop    r15
  40667b:	pop    rbp
  40667c:	ret    
  40667d:	nop    DWORD PTR [rax]
  406680:	mov    eax,edi
  406682:	cmp    eax,0xa
  406685:	je     0x406881
  40668b:	cmp    eax,0x8
  40668e:	je     0x4068e0
  406694:	mov    edx,DWORD PTR [rbx+0xd0]
  40669a:	test   edx,edx
  40669c:	jle    0x4066b8
  40669e:	cmp    eax,0x3
  4066a1:	jne    0x4068fb
  4066a7:	cmp    edx,0x1
  4066aa:	jne    0x4068fb
  4066b0:	mov    rcx,QWORD PTR [rbx]
  4066b3:	call   0x409050
  4066b8:	cmp    BYTE PTR [rbx+0x3d],0x0
  4066bc:	je     0x4066c8
  4066be:	cmp    DWORD PTR [rsi+0x38],0x6
  4066c2:	je     0x4068d0
  4066c8:	mov    ecx,DWORD PTR [rsi+0x3c]
  4066cb:	test   ecx,ecx
  4066cd:	je     0x406770
  4066d3:	cmp    ecx,DWORD PTR [rbx+0x7c]
  4066d6:	je     0x406770
  4066dc:	mov    rdx,QWORD PTR [rbx+0xa8]
  4066e3:	call   QWORD PTR [rbx+0xa0]
  4066e9:	test   eax,eax
  4066eb:	je     0x40666a
  4066f1:	mov    r12d,DWORD PTR [rbx+0x58]
  4066f5:	test   r12d,r12d
  4066f8:	jle    0x406a05
  4066fe:	sub    r12d,0x1
  406702:	mov    r14,QWORD PTR [rip+0x54817]        # 0x45af20
  406709:	jmp    0x40672e
  40670b:	nop    DWORD PTR [rax+rax*1+0x0]
  406710:	mov    eax,DWORD PTR [rax+0x4]
  406713:	test   eax,eax
  406715:	je     0x406a00
  40671b:	cmp    DWORD PTR [rsi+0x3c],eax
  40671e:	je     0x406a00
  406724:	sub    r12d,0x1
  406728:	js     0x406a05
  40672e:	mov    rdx,QWORD PTR [rbx+0x50]
  406732:	movsxd rax,r12d
  406735:	mov    rcx,QWORD PTR [r14]
  406738:	lea    rax,[rax+rax*2]
  40673c:	mov    r8d,r13d
  40673f:	mov    edx,DWORD PTR [rdx+rax*4]
  406742:	lea    r15,[rax*4+0x0]
  40674a:	call   0x40b3e0
  40674f:	test   eax,eax
  406751:	js     0x406724
  406753:	mov    rax,r15
  406756:	add    rax,QWORD PTR [rbx+0x50]
  40675a:	mov    r9d,DWORD PTR [rax+0x8]
  40675e:	cmp    r9d,0xe
  406762:	jne    0x406710
  406764:	mov    r12d,DWORD PTR [rax+0x4]
  406768:	jmp    0x406724
  40676a:	nop    WORD PTR [rax+rax*1+0x0]
  406770:	mov    r9d,DWORD PTR [rsi+0x38]
  406774:	cmp    edi,0x6
  406777:	je     0x4069e0
  40677d:	add    DWORD PTR [rbx+0xd0],0x1
  406784:	cmp    r9d,0x3
  406788:	je     0x406830
  40678e:	movsxd rax,r9d
  406791:	add    DWORD PTR [rbx+rax*4+0x8],0x1
  406796:	cmp    BYTE PTR [rbx+0x74],0x0
  40679a:	mov    r12,QWORD PTR [rsi]
  40679d:	jne    0x406930
  4067a3:	lea    rax,[rsi+0x28]
  4067a7:	mov    rcx,QWORD PTR [rbx]
  4067aa:	mov    rdx,rsi
  4067ad:	mov    QWORD PTR [rsi+0x30],0x0
  4067b5:	mov    QWORD PTR [rsi+0x18],rax
  4067b9:	lea    rax,[rsi+0x30]
  4067bd:	mov    QWORD PTR [rsi+0x20],rax
  4067c1:	call   0x407c30
  4067c6:	mov    rdx,rsi
  4067c9:	mov    rcx,rbx
  4067cc:	call   QWORD PTR [rbx+0x88]
  4067d2:	mov    rcx,QWORD PTR [rbx]
  4067d5:	call   0x408e30
  4067da:	mov    rdx,rsi
  4067dd:	mov    rcx,rbx
  4067e0:	call   0x405a90
  4067e5:	mov    rdx,rsi
  4067e8:	mov    rcx,rbx
  4067eb:	call   QWORD PTR [rbx+0x90]
  4067f1:	mov    rcx,QWORD PTR [rbx]
  4067f4:	call   0x4075a0
  4067f9:	mov    rcx,QWORD PTR [rbx]
  4067fc:	call   0x409050
  406801:	mov    edx,DWORD PTR [rsi+0x38]
  406804:	mov    rcx,rbx
  406807:	call   0x406480
  40680c:	mov    QWORD PTR [rsi],r12
  40680f:	mov    QWORD PTR [rsi+0x30],0x0
  406817:	mov    eax,0x1
  40681c:	sub    DWORD PTR [rbx+0xd0],0x1
  406823:	jmp    0x40666c
  406828:	nop    DWORD PTR [rax+rax*1+0x0]
  406830:	mov    edx,DWORD PTR [rbx+0x18]
  406833:	test   edx,edx
  406835:	jle    0x406a30
  40683b:	cmp    BYTE PTR [rbx+0x75],0x0
  40683f:	je     0x406a5c
  406845:	mov    rax,QWORD PTR [rbx+0x98]
  40684c:	test   rax,rax
  40684f:	je     0x406a53
  406855:	mov    r8,QWORD PTR [rsi+0x8]
  406859:	mov    rdx,QWORD PTR [rsi]
  40685c:	mov    rcx,rbx
  40685f:	call   rax
  406861:	mov    r9d,DWORD PTR [rsi+0x38]
  406865:	cmp    r9d,0x4
  406869:	jne    0x40678e
  40686f:	cmp    edi,0x6
  406872:	jne    0x40678e
  406878:	add    DWORD PTR [rbx+0x38],0x1
  40687c:	jmp    0x406796
  406881:	cmp    BYTE PTR [rbx+0x77],0x1
  406885:	sbb    edi,edi
  406887:	and    edi,0x2
  40688a:	add    edi,0x4
  40688d:	mov    DWORD PTR [rsi+0x38],edi
  406890:	mov    eax,edi
  406892:	jmp    0x406694
  406897:	nop    WORD PTR [rax+rax*1+0x0]
  4068a0:	mov    r14,QWORD PTR [rip+0x54679]        # 0x45af20
  4068a7:	mov    edx,r13d
  4068aa:	mov    rcx,QWORD PTR [r14]
  4068ad:	call   0x40b220
  4068b2:	test   eax,eax
  4068b4:	je     0x4068c3
  4068b6:	cmp    BYTE PTR [rbx+0x82],0x0
  4068bd:	je     0x40666a
  4068c3:	mov    eax,DWORD PTR [rsi+0x38]
  4068c6:	jmp    0x406682
  4068cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4068d0:	mov    DWORD PTR [rsi+0x38],0x4
  4068d7:	jmp    0x4066c8
  4068dc:	nop    DWORD PTR [rax+0x0]
  4068e0:	cmp    BYTE PTR [rbx+0xd4],0x0
  4068e7:	jne    0x40666a
  4068ed:	mov    edx,DWORD PTR [rbx+0xd0]
  4068f3:	test   edx,edx
  4068f5:	jle    0x4066b8
  4068fb:	cmp    edx,0x2
  4068fe:	jle    0x406a46
  406904:	call   QWORD PTR [rip+0x5de2a]        # 0x464734
  40690a:	lea    rdx,[rip+0x46d47]        # 0x44d658
  406911:	lea    rcx,[rax+0x60]
  406915:	call   0x406160
  40691a:	mov    edx,0x3
  40691f:	mov    rcx,rbx
  406922:	call   0x406480
  406927:	call   0x449548
  40692c:	nop    DWORD PTR [rax+0x0]
  406930:	mov    r8d,edi
  406933:	mov    edx,DWORD PTR [rsi+0x3c]
  406936:	mov    rcx,rbx
  406939:	call   QWORD PTR [rbx+0xb0]
  40693f:	test   rax,rax
  406942:	mov    rdi,rax
  406945:	je     0x4067a3
  40694b:	lea    rax,[rip+0x46d7a]        # 0x44d6cc
  406952:	mov    QWORD PTR [rsp+0x28],0x0
  40695b:	lea    r8,[rip+0x46d66]        # 0x44d6c8
  406962:	lea    rdx,[rip+0x46d61]        # 0x44d6ca
  406969:	mov    r9,rdi
  40696c:	mov    QWORD PTR [rsp+0x20],rax
  406971:	mov    rcx,QWORD PTR [rsi]
  406974:	call   0x4380a0
  406979:	lea    edx,[rax+0x1]
  40697c:	add    rdx,0x1e
  406980:	shr    rdx,0x4
  406984:	mov    rax,rdx
  406987:	shl    rax,0x4
  40698b:	call   0x43d410
  406990:	lea    r8,[rip+0x46d31]        # 0x44d6c8
  406997:	sub    rsp,rax
  40699a:	mov    rax,QWORD PTR [rip+0x5456f]        # 0x45af10
  4069a1:	mov    r9,rdi
  4069a4:	lea    rdx,[rsp+0x30]
  4069a9:	mov    QWORD PTR [rax],rdx
  4069ac:	lea    rax,[rip+0x46d19]        # 0x44d6cc
  4069b3:	mov    QWORD PTR [rsp+0x28],0x0
  4069bc:	lea    rdx,[rip+0x46d07]        # 0x44d6ca
  4069c3:	mov    QWORD PTR [rsp+0x20],rax
  4069c8:	mov    rcx,QWORD PTR [rsi]
  4069cb:	call   0x438160
  4069d0:	mov    rcx,rdi
  4069d3:	mov    QWORD PTR [rsi],rax
  4069d6:	call   0x4494c8
  4069db:	jmp    0x4067a3
  4069e0:	cmp    r9d,0x4
  4069e4:	jne    0x40677d
  4069ea:	mov    BYTE PTR [rbx+0x3c],0x1
  4069ee:	add    DWORD PTR [rbx+0xd0],0x1
  4069f5:	jmp    0x406865
  4069fa:	nop    WORD PTR [rax+rax*1+0x0]
  406a00:	test   r9d,r9d
  406a03:	jne    0x406a16
  406a05:	movsxd rdx,DWORD PTR [rsi+0x3c]
  406a09:	mov    rax,QWORD PTR [rbx+0x48]
  406a0d:	mov    r9d,DWORD PTR [rax+rdx*4]
  406a11:	test   r9d,r9d
  406a14:	je     0x406a40
  406a16:	mov    DWORD PTR [rsi+0x38],r9d
  406a1a:	cmp    r9d,0x1
  406a1e:	jne    0x406774
  406a24:	jmp    0x40666a
  406a29:	nop    DWORD PTR [rax+0x0]
  406a30:	mov    eax,DWORD PTR [rbx+0x1c]
  406a33:	test   eax,eax
  406a35:	jg     0x40683b
  406a3b:	jmp    0x406845
  406a40:	mov    r9d,DWORD PTR [rsi+0x38]
  406a44:	jmp    0x406a1a
  406a46:	mov    rcx,QWORD PTR [rbx]
  406a49:	call   0x409050
  406a4e:	jmp    0x406904
  406a53:	mov    r9d,DWORD PTR [rsi+0x38]
  406a57:	jmp    0x40678e
  406a5c:	mov    edx,DWORD PTR [rsi+0x28]
  406a5f:	lea    rcx,[rbp-0x50]
  406a63:	call   0x409f80
  406a68:	mov    esi,DWORD PTR [rbp-0x48]
  406a6b:	mov    rbx,QWORD PTR [rbp-0x50]
  406a6f:	call   QWORD PTR [rip+0x5dcbf]        # 0x464734
  406a75:	lea    rdx,[rip+0x46c1c]        # 0x44d698
  406a7c:	lea    rcx,[rax+0x60]
  406a80:	mov    r9d,esi
  406a83:	mov    r8,rbx
  406a86:	call   0x406160
  406a8b:	mov    ecx,0x4
  406a90:	call   0x449520
  406a95:	nop
  406a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406aa0:	push   rbp
  406aa1:	push   rdi
  406aa2:	push   rsi
  406aa3:	push   rbx
  406aa4:	sub    rsp,0x78
  406aa8:	lea    rax,[rsp+0xc0]
  406ab0:	cmp    ecx,0xb
  406ab3:	mov    ebx,ecx
  406ab5:	mov    esi,edx
  406ab7:	mov    ebp,r8d
  406aba:	mov    rdi,r9
  406abd:	mov    QWORD PTR [rsp+0x28],rax
  406ac2:	je     0x406b20
  406ac4:	call   QWORD PTR [rip+0x5dcba]        # 0x464784
  406aca:	mov    eax,DWORD PTR [rax]
  406acc:	mov    DWORD PTR [rsp+0x68],ebx
  406ad0:	sub    ebx,0x6
  406ad3:	and    ebx,0xfffffffb
  406ad6:	mov    QWORD PTR [rsp+0x30],rdi
  406adb:	mov    DWORD PTR [rsp+0x58],esi
  406adf:	mov    DWORD PTR [rsp+0x5c],0x0
  406ae7:	mov    DWORD PTR [rsp+0x6c],0x0
  406aef:	mov    DWORD PTR [rsp+0x40],eax
  406af3:	lea    rax,[rsp+0x28]
  406af8:	mov    QWORD PTR [rsp+0x38],rax
  406afd:	jne    0x406b03
  406aff:	mov    DWORD PTR [rsp+0x6c],ebp
  406b03:	mov    rcx,QWORD PTR [rip+0x44536]        # 0x44b040
  406b0a:	lea    rdx,[rsp+0x30]
  406b0f:	call   0x406630
  406b14:	add    rsp,0x78
  406b18:	pop    rbx
  406b19:	pop    rsi
  406b1a:	pop    rdi
  406b1b:	pop    rbp
  406b1c:	ret    
  406b1d:	nop    DWORD PTR [rax]
  406b20:	mov    rax,QWORD PTR [rip+0x44519]        # 0x44b040
  406b27:	cmp    BYTE PTR [rax+0x78],0x1
  406b2b:	sbb    ebx,ebx
  406b2d:	call   QWORD PTR [rip+0x5dc51]        # 0x464784
  406b33:	mov    eax,DWORD PTR [rax]
  406b35:	mov    rcx,QWORD PTR [rip+0x44504]        # 0x44b040
  406b3c:	and    ebx,0xfffffffe
  406b3f:	add    ebx,0x6
  406b42:	mov    QWORD PTR [rsp+0x30],rdi
  406b47:	mov    DWORD PTR [rsp+0x58],esi
  406b4b:	mov    DWORD PTR [rsp+0x5c],0x0
  406b53:	mov    DWORD PTR [rsp+0x68],ebx
  406b57:	mov    DWORD PTR [rsp+0x40],eax
  406b5b:	lea    rax,[rsp+0x28]
  406b60:	mov    QWORD PTR [rsp+0x38],rax
  406b65:	mov    eax,DWORD PTR [rcx+0x7c]
  406b68:	mov    DWORD PTR [rsp+0x6c],eax
  406b6c:	jmp    0x406b0a
  406b6e:	xchg   ax,ax
  406b70:	push   rsi
  406b71:	push   rbx
  406b72:	sub    rsp,0x78
  406b76:	lea    rax,[rsp+0xa0]
  406b7e:	mov    ebx,ecx
  406b80:	mov    rsi,rdx
  406b83:	mov    QWORD PTR [rsp+0xa0],r8
  406b8b:	mov    QWORD PTR [rsp+0xa8],r9
  406b93:	mov    QWORD PTR [rsp+0x28],rax
  406b98:	call   QWORD PTR [rip+0x5dbe6]        # 0x464784
  406b9e:	mov    eax,DWORD PTR [rax]
  406ba0:	mov    rcx,QWORD PTR [rip+0x44499]        # 0x44b040
  406ba7:	lea    rdx,[rsp+0x30]
  406bac:	mov    QWORD PTR [rsp+0x30],rsi
  406bb1:	mov    DWORD PTR [rsp+0x58],ebx
  406bb5:	mov    DWORD PTR [rsp+0x5c],0x0
  406bbd:	mov    DWORD PTR [rsp+0x68],0x8
  406bc5:	mov    DWORD PTR [rsp+0x40],eax
  406bc9:	lea    rax,[rsp+0x28]
  406bce:	mov    DWORD PTR [rsp+0x6c],0x0
  406bd6:	mov    QWORD PTR [rsp+0x38],rax
  406bdb:	call   0x406630
  406be0:	nop
  406be1:	add    rsp,0x78
  406be5:	pop    rbx
  406be6:	pop    rsi
  406be7:	ret    
  406be8:	nop    DWORD PTR [rax+rax*1+0x0]
  406bf0:	push   rsi
  406bf1:	push   rbx
  406bf2:	sub    rsp,0x78
  406bf6:	lea    rax,[rsp+0xb0]
  406bfe:	mov    ebx,ecx
  406c00:	mov    rcx,r8
  406c03:	mov    r8d,edx
  406c06:	mov    rdx,r9
  406c09:	mov    QWORD PTR [rsp+0x28],rax
  406c0e:	call   0x409260
  406c13:	mov    rsi,rax
  406c16:	call   QWORD PTR [rip+0x5db68]        # 0x464784
  406c1c:	mov    eax,DWORD PTR [rax]
  406c1e:	mov    rcx,QWORD PTR [rip+0x4441b]        # 0x44b040
  406c25:	lea    rdx,[rsp+0x30]
  406c2a:	mov    QWORD PTR [rsp+0x30],rsi
  406c2f:	mov    DWORD PTR [rsp+0x58],ebx
  406c33:	mov    DWORD PTR [rsp+0x5c],0x0
  406c3b:	mov    DWORD PTR [rsp+0x68],0x8
  406c43:	mov    DWORD PTR [rsp+0x40],eax
  406c47:	lea    rax,[rsp+0x28]
  406c4c:	mov    DWORD PTR [rsp+0x6c],0x0
  406c54:	mov    QWORD PTR [rsp+0x38],rax
  406c59:	call   0x406630
  406c5e:	nop
  406c5f:	add    rsp,0x78
  406c63:	pop    rbx
  406c64:	pop    rsi
  406c65:	ret    
  406c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c70:	push   rdi
  406c71:	push   rsi
  406c72:	push   rbx
  406c73:	sub    rsp,0x70
  406c77:	lea    rax,[rsp+0xa0]
  406c7f:	mov    ebx,ecx
  406c81:	mov    QWORD PTR [rsp+0xa0],r8
  406c89:	mov    QWORD PTR [rsp+0xa8],r9
  406c91:	mov    rdi,rdx
  406c94:	mov    QWORD PTR [rsp+0x28],rax
  406c99:	mov    rax,QWORD PTR [rip+0x54240]        # 0x45aee0
  406ca0:	mov    esi,DWORD PTR [rax]
  406ca2:	call   QWORD PTR [rip+0x5dadc]        # 0x464784
  406ca8:	mov    eax,DWORD PTR [rax]
  406caa:	mov    rcx,QWORD PTR [rip+0x4438f]        # 0x44b040
  406cb1:	lea    rdx,[rsp+0x30]
  406cb6:	mov    QWORD PTR [rsp+0x30],rdi
  406cbb:	mov    DWORD PTR [rsp+0x58],esi
  406cbf:	mov    DWORD PTR [rsp+0x5c],0x0
  406cc7:	mov    DWORD PTR [rsp+0x68],0x6
  406ccf:	mov    DWORD PTR [rsp+0x40],eax
  406cd3:	lea    rax,[rsp+0x28]
  406cd8:	mov    DWORD PTR [rsp+0x6c],ebx
  406cdc:	mov    QWORD PTR [rsp+0x38],rax
  406ce1:	call   0x406630
  406ce6:	add    rsp,0x70
  406cea:	pop    rbx
  406ceb:	pop    rsi
  406cec:	pop    rdi
  406ced:	ret    
  406cee:	xchg   ax,ax
  406cf0:	push   rdi
  406cf1:	push   rsi
  406cf2:	push   rbx
  406cf3:	sub    rsp,0x70
  406cf7:	lea    rax,[rsp+0xa8]
  406cff:	mov    esi,ecx
  406d01:	mov    ebx,edx
  406d03:	mov    rdi,r8
  406d06:	mov    QWORD PTR [rsp+0xa8],r9
  406d0e:	mov    QWORD PTR [rsp+0x28],rax
  406d13:	call   QWORD PTR [rip+0x5da6b]        # 0x464784
  406d19:	mov    eax,DWORD PTR [rax]
  406d1b:	mov    rcx,QWORD PTR [rip+0x4431e]        # 0x44b040
  406d22:	lea    rdx,[rsp+0x30]
  406d27:	mov    QWORD PTR [rsp+0x30],rdi
  406d2c:	mov    DWORD PTR [rsp+0x58],esi
  406d30:	mov    DWORD PTR [rsp+0x5c],0x0
  406d38:	mov    DWORD PTR [rsp+0x68],0x6
  406d40:	mov    DWORD PTR [rsp+0x40],eax
  406d44:	lea    rax,[rsp+0x28]
  406d49:	mov    DWORD PTR [rsp+0x6c],ebx
  406d4d:	mov    QWORD PTR [rsp+0x38],rax
  406d52:	call   0x406630
  406d57:	add    rsp,0x70
  406d5b:	pop    rbx
  406d5c:	pop    rsi
  406d5d:	pop    rdi
  406d5e:	ret    
  406d5f:	nop
  406d60:	push   rdi
  406d61:	push   rsi
  406d62:	push   rbx
  406d63:	sub    rsp,0x70
  406d67:	lea    rax,[rsp+0xa8]
  406d6f:	mov    esi,ecx
  406d71:	mov    ebx,edx
  406d73:	mov    rdi,r8
  406d76:	mov    QWORD PTR [rsp+0xa8],r9
  406d7e:	mov    QWORD PTR [rsp+0x28],rax
  406d83:	call   QWORD PTR [rip+0x5d9fb]        # 0x464784
  406d89:	mov    eax,DWORD PTR [rax]
  406d8b:	mov    rcx,QWORD PTR [rip+0x442ae]        # 0x44b040
  406d92:	lea    rdx,[rsp+0x30]
  406d97:	mov    QWORD PTR [rsp+0x30],rdi
  406d9c:	mov    DWORD PTR [rsp+0x58],esi
  406da0:	mov    DWORD PTR [rsp+0x5c],0x0
  406da8:	mov    DWORD PTR [rsp+0x68],0xa
  406db0:	mov    DWORD PTR [rsp+0x40],eax
  406db4:	lea    rax,[rsp+0x28]
  406db9:	mov    DWORD PTR [rsp+0x6c],ebx
  406dbd:	mov    QWORD PTR [rsp+0x38],rax
  406dc2:	call   0x406630
  406dc7:	add    rsp,0x70
  406dcb:	pop    rbx
  406dcc:	pop    rsi
  406dcd:	pop    rdi
  406dce:	ret    
  406dcf:	nop
  406dd0:	push   rdi
  406dd1:	push   rsi
  406dd2:	push   rbx
  406dd3:	sub    rsp,0x70
  406dd7:	lea    rax,[rsp+0xa0]
  406ddf:	mov    QWORD PTR [rsp+0xa0],r8
  406de7:	mov    QWORD PTR [rsp+0xa8],r9
  406def:	mov    esi,ecx
  406df1:	mov    rdi,rdx
  406df4:	mov    QWORD PTR [rsp+0x28],rax
  406df9:	mov    rax,QWORD PTR [rip+0x44240]        # 0x44b040
  406e00:	cmp    BYTE PTR [rax+0x78],0x1
  406e04:	sbb    ebx,ebx
  406e06:	call   QWORD PTR [rip+0x5d978]        # 0x464784
  406e0c:	mov    eax,DWORD PTR [rax]
  406e0e:	mov    rcx,QWORD PTR [rip+0x4422b]        # 0x44b040
  406e15:	and    ebx,0xfffffffe
  406e18:	lea    rdx,[rsp+0x30]
  406e1d:	add    ebx,0x6
  406e20:	mov    QWORD PTR [rsp+0x30],rdi
  406e25:	mov    DWORD PTR [rsp+0x58],esi
  406e29:	mov    DWORD PTR [rsp+0x5c],0x0
  406e31:	mov    DWORD PTR [rsp+0x40],eax
  406e35:	lea    rax,[rsp+0x28]
  406e3a:	mov    DWORD PTR [rsp+0x68],ebx
  406e3e:	mov    QWORD PTR [rsp+0x38],rax
  406e43:	mov    eax,DWORD PTR [rcx+0x7c]
  406e46:	mov    DWORD PTR [rsp+0x6c],eax
  406e4a:	call   0x406630
  406e4f:	add    rsp,0x70
  406e53:	pop    rbx
  406e54:	pop    rsi
  406e55:	pop    rdi
  406e56:	ret    
  406e57:	nop    WORD PTR [rax+rax*1+0x0]
  406e60:	push   rsi
  406e61:	push   rbx
  406e62:	sub    rsp,0x78
  406e66:	lea    rax,[rsp+0x98]
  406e6e:	mov    QWORD PTR [rsp+0x98],rdx
  406e76:	mov    QWORD PTR [rsp+0xa0],r8
  406e7e:	mov    QWORD PTR [rsp+0xa8],r9
  406e86:	mov    rsi,rcx
  406e89:	mov    QWORD PTR [rsp+0x28],rax
  406e8e:	mov    rax,QWORD PTR [rip+0x5404b]        # 0x45aee0
  406e95:	mov    ebx,DWORD PTR [rax]
  406e97:	call   QWORD PTR [rip+0x5d8e7]        # 0x464784
  406e9d:	mov    eax,DWORD PTR [rax]
  406e9f:	mov    rcx,QWORD PTR [rip+0x4419a]        # 0x44b040
  406ea6:	lea    rdx,[rsp+0x30]
  406eab:	mov    QWORD PTR [rsp+0x30],rsi
  406eb0:	mov    DWORD PTR [rsp+0x58],ebx
  406eb4:	mov    DWORD PTR [rsp+0x5c],0x0
  406ebc:	mov    DWORD PTR [rsp+0x68],0x4
  406ec4:	mov    DWORD PTR [rsp+0x40],eax
  406ec8:	lea    rax,[rsp+0x28]
  406ecd:	mov    DWORD PTR [rsp+0x6c],0x0
  406ed5:	mov    QWORD PTR [rsp+0x38],rax
  406eda:	call   0x406630
  406edf:	nop
  406ee0:	add    rsp,0x78
  406ee4:	pop    rbx
  406ee5:	pop    rsi
  406ee6:	ret    
  406ee7:	nop    WORD PTR [rax+rax*1+0x0]
  406ef0:	push   rsi
  406ef1:	push   rbx
  406ef2:	sub    rsp,0x78
  406ef6:	lea    rax,[rsp+0xb0]
  406efe:	mov    ebx,ecx
  406f00:	mov    rcx,r8
  406f03:	mov    r8d,edx
  406f06:	mov    rdx,r9
  406f09:	mov    QWORD PTR [rsp+0x28],rax
  406f0e:	call   0x409260
  406f13:	mov    rsi,rax
  406f16:	call   QWORD PTR [rip+0x5d868]        # 0x464784
  406f1c:	mov    eax,DWORD PTR [rax]
  406f1e:	mov    rcx,QWORD PTR [rip+0x4411b]        # 0x44b040
  406f25:	lea    rdx,[rsp+0x30]
  406f2a:	mov    QWORD PTR [rsp+0x30],rsi
  406f2f:	mov    DWORD PTR [rsp+0x58],ebx
  406f33:	mov    DWORD PTR [rsp+0x5c],0x0
  406f3b:	mov    DWORD PTR [rsp+0x68],0x4
  406f43:	mov    DWORD PTR [rsp+0x40],eax
  406f47:	lea    rax,[rsp+0x28]
  406f4c:	mov    DWORD PTR [rsp+0x6c],0x0
  406f54:	mov    QWORD PTR [rsp+0x38],rax
  406f59:	call   0x406630
  406f5e:	nop
  406f5f:	add    rsp,0x78
  406f63:	pop    rbx
  406f64:	pop    rsi
  406f65:	ret    
  406f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f70:	push   rsi
  406f71:	push   rbx
  406f72:	sub    rsp,0x78
  406f76:	lea    rax,[rsp+0xa0]
  406f7e:	mov    ebx,ecx
  406f80:	mov    rsi,rdx
  406f83:	mov    QWORD PTR [rsp+0xa0],r8
  406f8b:	mov    QWORD PTR [rsp+0xa8],r9
  406f93:	mov    QWORD PTR [rsp+0x28],rax
  406f98:	call   QWORD PTR [rip+0x5d7e6]        # 0x464784
  406f9e:	mov    eax,DWORD PTR [rax]
  406fa0:	mov    rcx,QWORD PTR [rip+0x44099]        # 0x44b040
  406fa7:	lea    rdx,[rsp+0x30]
  406fac:	mov    QWORD PTR [rsp+0x30],rsi
  406fb1:	mov    DWORD PTR [rsp+0x58],ebx
  406fb5:	mov    DWORD PTR [rsp+0x5c],0x0
  406fbd:	mov    DWORD PTR [rsp+0x68],0x4
  406fc5:	mov    DWORD PTR [rsp+0x40],eax
  406fc9:	lea    rax,[rsp+0x28]
  406fce:	mov    DWORD PTR [rsp+0x6c],0x0
  406fd6:	mov    QWORD PTR [rsp+0x38],rax
  406fdb:	call   0x406630
  406fe0:	nop
  406fe1:	add    rsp,0x78
  406fe5:	pop    rbx
  406fe6:	pop    rsi
  406fe7:	ret    
  406fe8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ff0:	push   rsi
  406ff1:	push   rbx
  406ff2:	sub    rsp,0x78
  406ff6:	lea    rax,[rsp+0x98]
  406ffe:	mov    QWORD PTR [rsp+0x98],rdx
  407006:	mov    QWORD PTR [rsp+0xa0],r8
  40700e:	mov    QWORD PTR [rsp+0xa8],r9
  407016:	mov    rsi,rcx
  407019:	mov    QWORD PTR [rsp+0x28],rax
  40701e:	mov    rax,QWORD PTR [rip+0x53ebb]        # 0x45aee0
  407025:	mov    ebx,DWORD PTR [rax]
  407027:	call   QWORD PTR [rip+0x5d757]        # 0x464784
  40702d:	mov    eax,DWORD PTR [rax]
  40702f:	mov    rcx,QWORD PTR [rip+0x4400a]        # 0x44b040
  407036:	lea    rdx,[rsp+0x30]
  40703b:	mov    QWORD PTR [rsp+0x30],rsi
  407040:	mov    DWORD PTR [rsp+0x58],ebx
  407044:	mov    DWORD PTR [rsp+0x5c],0x0
  40704c:	mov    DWORD PTR [rsp+0x68],0x5
  407054:	mov    DWORD PTR [rsp+0x40],eax
  407058:	lea    rax,[rsp+0x28]
  40705d:	mov    DWORD PTR [rsp+0x6c],0x0
  407065:	mov    QWORD PTR [rsp+0x38],rax
  40706a:	call   0x406630
  40706f:	nop
  407070:	add    rsp,0x78
  407074:	pop    rbx
  407075:	pop    rsi
  407076:	ret    
  407077:	nop    WORD PTR [rax+rax*1+0x0]
  407080:	push   rsi
  407081:	push   rbx
  407082:	sub    rsp,0x78
  407086:	lea    rax,[rsp+0x98]
  40708e:	mov    QWORD PTR [rsp+0xa0],r8
  407096:	mov    QWORD PTR [rsp+0x98],rdx
  40709e:	mov    QWORD PTR [rsp+0xa8],r9
  4070a6:	mov    rsi,rcx
  4070a9:	mov    QWORD PTR [rsp+0x28],rax
  4070ae:	mov    rax,QWORD PTR [rip+0x53e2b]        # 0x45aee0
  4070b5:	mov    ebx,DWORD PTR [rax]
  4070b7:	call   QWORD PTR [rip+0x5d6c7]        # 0x464784
  4070bd:	mov    eax,DWORD PTR [rax]
  4070bf:	mov    rcx,QWORD PTR [rip+0x43f7a]        # 0x44b040
  4070c6:	lea    rdx,[rsp+0x30]
  4070cb:	mov    QWORD PTR [rsp+0x30],rsi
  4070d0:	mov    DWORD PTR [rsp+0x58],ebx
  4070d4:	mov    DWORD PTR [rsp+0x5c],0x0
  4070dc:	mov    DWORD PTR [rsp+0x68],0x2
  4070e4:	mov    DWORD PTR [rsp+0x40],eax
  4070e8:	lea    rax,[rsp+0x28]
  4070ed:	mov    DWORD PTR [rsp+0x6c],0x0
  4070f5:	mov    QWORD PTR [rsp+0x38],rax
  4070fa:	call   0x406630
  4070ff:	lea    r8,[rip+0x465d7]        # 0x44d6dd
  407106:	lea    rcx,[rip+0x46373]        # 0x44d480
  40710d:	mov    edx,0x461
  407112:	call   0x406190
  407117:	nop
  407118:	nop    DWORD PTR [rax+rax*1+0x0]
  407120:	push   rsi
  407121:	push   rbx
  407122:	sub    rsp,0x78
  407126:	lea    rax,[rsp+0x98]
  40712e:	mov    QWORD PTR [rsp+0xa0],r8
  407136:	mov    QWORD PTR [rsp+0x98],rdx
  40713e:	mov    QWORD PTR [rsp+0xa8],r9
  407146:	mov    rsi,rcx
  407149:	mov    QWORD PTR [rsp+0x28],rax
  40714e:	mov    rax,QWORD PTR [rip+0x53d8b]        # 0x45aee0
  407155:	mov    ebx,DWORD PTR [rax]
  407157:	call   QWORD PTR [rip+0x5d627]        # 0x464784
  40715d:	mov    eax,DWORD PTR [rax]
  40715f:	mov    rcx,QWORD PTR [rip+0x43eda]        # 0x44b040
  407166:	lea    rdx,[rsp+0x30]
  40716b:	mov    QWORD PTR [rsp+0x30],rsi
  407170:	mov    DWORD PTR [rsp+0x58],ebx
  407174:	mov    DWORD PTR [rsp+0x5c],0x0
  40717c:	mov    DWORD PTR [rsp+0x68],0x3
  407184:	mov    DWORD PTR [rsp+0x40],eax
  407188:	lea    rax,[rsp+0x28]
  40718d:	mov    DWORD PTR [rsp+0x6c],0x0
  407195:	mov    QWORD PTR [rsp+0x38],rax
  40719a:	call   0x406630
  40719f:	lea    r8,[rip+0x46528]        # 0x44d6ce
  4071a6:	lea    rcx,[rip+0x462d3]        # 0x44d480
  4071ad:	mov    edx,0x473
  4071b2:	call   0x406190
  4071b7:	nop
  4071b8:	nop
  4071b9:	nop
  4071ba:	nop
  4071bb:	nop
  4071bc:	nop
  4071bd:	nop
  4071be:	nop
  4071bf:	nop
  4071c0:	push   rdi
  4071c1:	push   rsi
  4071c2:	push   rbx
  4071c3:	sub    rsp,0x20
  4071c7:	lea    rax,[rip+0x467f2]        # 0x44d9c0
  4071ce:	test   cl,cl
  4071d0:	mov    rdi,rdx
  4071d3:	mov    rsi,r8
  4071d6:	je     0x407218
  4071d8:	mov    rcx,QWORD PTR [rip+0x43ea1]        # 0x44b080
  4071df:	test   rcx,rcx
  4071e2:	je     0x407218
  4071e4:	lea    rbx,[rip+0x43e95]        # 0x44b080
  4071eb:	jmp    0x4071fc
  4071ed:	nop    DWORD PTR [rax]
  4071f0:	add    rbx,0x18
  4071f4:	mov    rcx,QWORD PTR [rbx]
  4071f7:	test   rcx,rcx
  4071fa:	je     0x407220
  4071fc:	movzx  eax,BYTE PTR [rbx+0x10]
  407200:	cmp    rax,rsi
  407203:	jne    0x4071f0
  407205:	mov    r8,rsi
  407208:	mov    rdx,rdi
  40720b:	call   0x449458
  407210:	test   eax,eax
  407212:	jne    0x4071f0
  407214:	mov    rax,QWORD PTR [rbx+0x8]
  407218:	add    rsp,0x20
  40721c:	pop    rbx
  40721d:	pop    rsi
  40721e:	pop    rdi
  40721f:	ret    
  407220:	lea    rax,[rip+0x46799]        # 0x44d9c0
  407227:	add    rsp,0x20
  40722b:	pop    rbx
  40722c:	pop    rsi
  40722d:	pop    rdi
  40722e:	ret    
  40722f:	nop
  407230:	lea    rdx,[rip+0x46789]        # 0x44d9c0
  407237:	lea    rax,[rip+0x46783]        # 0x44d9c1
  40723e:	test   cl,cl
  407240:	cmove  rax,rdx
  407244:	ret    
  407245:	nop
  407246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407250:	xor    eax,eax
  407252:	ret    
  407253:	nop
  407254:	nop
  407255:	nop
  407256:	nop
  407257:	nop
  407258:	nop
  407259:	nop
  40725a:	nop
  40725b:	nop
  40725c:	nop
  40725d:	nop
  40725e:	nop
  40725f:	nop
  407260:	push   rbx
  407261:	sub    rsp,0x20
  407265:	movzx  r10d,BYTE PTR [rcx]
  407269:	test   rdx,rdx
  40726c:	mov    rbx,rcx
  40726f:	mov    eax,r10d
  407272:	je     0x40734f
  407278:	test   r10b,r10b
  40727b:	jns    0x407332
  407281:	xor    r9d,r9d
  407284:	add    eax,eax
  407286:	add    r9,0x1
  40728a:	test   al,0x80
  40728c:	jne    0x407284
  40728e:	lea    rax,[r9-0x2]
  407292:	cmp    rax,0x4
  407296:	ja     0x407340
  40729c:	cmp    rdx,r9
  40729f:	jb     0x407340
  4072a5:	mov    ecx,0x7
  4072aa:	mov    eax,0x1
  4072af:	sub    ecx,r9d
  4072b2:	shl    eax,cl
  4072b4:	sub    eax,0x1
  4072b7:	and    eax,r10d
  4072ba:	mov    r10d,0x1
  4072c0:	movzx  edx,BYTE PTR [rbx+r10*1]
  4072c5:	mov    r11d,edx
  4072c8:	and    r11d,0xffffffc0
  4072cc:	cmp    r11b,0x80
  4072d0:	jne    0x407340
  4072d2:	shl    eax,0x6
  4072d5:	and    edx,0x3f
  4072d8:	add    r10,0x1
  4072dc:	or     eax,edx
  4072de:	cmp    r10,r9
  4072e1:	jb     0x4072c0
  4072e3:	cmp    eax,0x7f
  4072e6:	jbe    0x407340
  4072e8:	cmp    eax,0x7ff
  4072ed:	ja     0x4072f5
  4072ef:	cmp    r9,0x2
  4072f3:	ja     0x407340
  4072f5:	cmp    eax,0xffff
  4072fa:	ja     0x407302
  4072fc:	cmp    r9,0x3
  407300:	ja     0x407340
  407302:	cmp    eax,0x1fffff
  407307:	ja     0x40730f
  407309:	cmp    r9,0x4
  40730d:	ja     0x407340
  40730f:	cmp    eax,0x3ffffff
  407314:	ja     0x40731c
  407316:	cmp    r9,0x5
  40731a:	ja     0x407340
  40731c:	lea    edx,[rax-0xd800]
  407322:	cmp    edx,0x7ff
  407328:	jbe    0x407340
  40732a:	mov    DWORD PTR [r8],eax
  40732d:	mov    eax,r9d
  407330:	jmp    0x40733a
  407332:	mov    DWORD PTR [r8],r10d
  407335:	mov    eax,0x1
  40733a:	add    rsp,0x20
  40733e:	pop    rbx
  40733f:	ret    
  407340:	xor    eax,eax
  407342:	mov    DWORD PTR [r8],0xffffffff
  407349:	add    rsp,0x20
  40734d:	pop    rbx
  40734e:	ret    
  40734f:	lea    r8,[rip+0x468ba]        # 0x44dc10
  407356:	lea    rcx,[rip+0x466d3]        # 0x44da30
  40735d:	mov    dx,0x3c3
  407361:	call   0x406190
  407366:	nop
  407367:	nop    WORD PTR [rax+rax*1+0x0]
  407370:	push   rsi
  407371:	push   rbx
  407372:	sub    rsp,0x28
  407376:	mov    esi,DWORD PTR [rcx+0x28]
  407379:	test   esi,esi
  40737b:	jle    0x4073b0
  40737d:	cmp    DWORD PTR [rcx+0x24],0x1
  407381:	jbe    0x4073b0
  407383:	mov    rbx,rcx
  407386:	mov    rcx,QWORD PTR [rcx+0x10]
  40738a:	test   rcx,rcx
  40738d:	je     0x4073c0
  40738f:	call   0x4493c0
  407394:	mov    edx,esi
  407396:	sub    edx,eax
  407398:	cmp    edx,0x1f
  40739b:	jle    0x4073c4
  40739d:	mov    DWORD PTR [rbx+0x1c],esi
  4073a0:	add    rsp,0x28
  4073a4:	pop    rbx
  4073a5:	pop    rsi
  4073a6:	ret    
  4073a7:	nop    WORD PTR [rax+rax*1+0x0]
  4073b0:	mov    DWORD PTR [rcx+0x1c],esi
  4073b3:	add    rsp,0x28
  4073b7:	pop    rbx
  4073b8:	pop    rsi
  4073b9:	ret    
  4073ba:	nop    WORD PTR [rax+rax*1+0x0]
  4073c0:	xor    eax,eax
  4073c2:	jmp    0x407394
  4073c4:	add    esi,0x20
  4073c7:	mov    DWORD PTR [rbx+0x1c],esi
  4073ca:	add    rsp,0x28
  4073ce:	pop    rbx
  4073cf:	pop    rsi
  4073d0:	ret    
  4073d1:	nop
  4073d2:	nop    DWORD PTR [rax+0x0]
  4073d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073e0:	push   rdi
  4073e1:	push   rsi
  4073e2:	push   rbx
  4073e3:	sub    rsp,0x30
  4073e7:	xor    eax,eax
  4073e9:	mov    rbx,rcx
  4073ec:	mov    ecx,0xb
  4073f1:	mov    rdi,rbx
  4073f4:	lea    rsi,[rbx+0x58]
  4073f8:	rep stos QWORD PTR es:[rdi],rax
  4073fb:	mov    rdi,rsi
  4073fe:	mov    cl,0xb
  407400:	rep stos QWORD PTR es:[rdi],rax
  407403:	mov    QWORD PTR [rbx+0xb0],rbx
  40740a:	mov    QWORD PTR [rbx+0xb8],0x0
  407415:	call   QWORD PTR [rip+0x5d319]        # 0x464734
  40741b:	add    rax,0x60
  40741f:	lea    rdx,[rbx+0x14c]
  407426:	mov    DWORD PTR [rbx+0xc8],0x0
  407430:	mov    QWORD PTR [rbx+0xc0],rax
  407437:	lea    rax,[rbx+0xcc]
  40743e:	xchg   ax,ax
  407440:	mov    BYTE PTR [rax],0x0
  407443:	add    rax,0x1
  407447:	cmp    rax,rdx
  40744a:	jne    0x407440
  40744c:	mov    rdi,QWORD PTR [rip+0x53a4d]        # 0x45aea0
  407453:	lea    r9,[rip+0x34696]        # 0x43baf0
  40745a:	xor    r8d,r8d
  40745d:	xor    edx,edx
  40745f:	mov    rcx,rbx
  407462:	mov    QWORD PTR [rsp+0x20],rdi
  407467:	call   0x439830
  40746c:	lea    r9,[rip+0x3467d]        # 0x43baf0
  407473:	mov    QWORD PTR [rsp+0x20],rdi
  407478:	xor    r8d,r8d
  40747b:	xor    edx,edx
  40747d:	mov    rcx,rsi
  407480:	call   0x439830
  407485:	nop
  407486:	add    rsp,0x30
  40748a:	pop    rbx
  40748b:	pop    rsi
  40748c:	pop    rdi
  40748d:	ret    
  40748e:	xchg   ax,ax
  407490:	push   rbx
  407491:	sub    rsp,0x20
  407495:	xor    edx,edx
  407497:	mov    rbx,rcx
  40749a:	lea    rcx,[rcx+0x58]
  40749e:	call   0x439b90
  4074a3:	xor    edx,edx
  4074a5:	mov    rcx,rbx
  4074a8:	add    rsp,0x20
  4074ac:	pop    rbx
  4074ad:	jmp    0x439b90
  4074b2:	nop    DWORD PTR [rax+0x0]
  4074b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074c0:	push   rbx
  4074c1:	sub    rsp,0x20
  4074c5:	lea    rax,[rip+0x53ba4]        # 0x45b070
  4074cc:	mov    rbx,rcx
  4074cf:	mov    QWORD PTR [rcx],rax
  4074d2:	mov    rcx,QWORD PTR [rcx+0x8]
  4074d6:	call   0x407490
  4074db:	mov    rcx,QWORD PTR [rbx+0x8]
  4074df:	add    rsp,0x20
  4074e3:	pop    rbx
  4074e4:	jmp    0x4494c8
  4074e9:	nop
  4074ea:	nop    WORD PTR [rax+rax*1+0x0]
  4074f0:	push   rbx
  4074f1:	sub    rsp,0x20
  4074f5:	mov    rbx,rcx
  4074f8:	call   0x4074c0
  4074fd:	mov    rcx,rbx
  407500:	add    rsp,0x20
  407504:	pop    rbx
  407505:	jmp    0x43bec8
  40750a:	nop    WORD PTR [rax+rax*1+0x0]
  407510:	mov    DWORD PTR [rcx+0x28],edx
  407513:	jmp    0x407370
  407518:	nop    DWORD PTR [rax+rax*1+0x0]
  407520:	push   rbx
  407521:	sub    rsp,0x20
  407525:	mov    r8,QWORD PTR [rcx+0x8]
  407529:	mov    rax,QWORD PTR [r8+0xb0]
  407530:	mov    rdx,QWORD PTR [rax+0x10]
  407534:	cmp    rdx,QWORD PTR [rax+0x8]
  407538:	jbe    0x407540
  40753a:	cmp    rdx,QWORD PTR [rax+0x20]
  40753e:	jb     0x407560
  407540:	mov    rbx,rcx
  407543:	mov    rcx,rax
  407546:	call   0x439b90
  40754b:	mov    r8,QWORD PTR [rbx+0x8]
  40754f:	mov    DWORD PTR [r8+0xc8],0x0
  40755a:	add    rsp,0x20
  40755e:	pop    rbx
  40755f:	ret    
  407560:	mov    QWORD PTR [rax+0x18],rdx
  407564:	jmp    0x40754f
  407566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407570:	push   rbx
  407571:	sub    rsp,0x20
  407575:	mov    rbx,rcx
  407578:	mov    QWORD PTR [rcx+0x10],rdx
  40757c:	call   0x407370
  407581:	mov    BYTE PTR [rbx+0x38],0x0
  407585:	mov    DWORD PTR [rbx+0x20],0x0
  40758c:	add    rsp,0x20
  407590:	pop    rbx
  407591:	ret    
  407592:	nop    DWORD PTR [rax+0x0]
  407596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4075a0:	push   rbx
  4075a1:	sub    rsp,0x20
  4075a5:	mov    rax,rcx
  4075a8:	mov    rcx,QWORD PTR [rcx+0x10]
  4075ac:	test   rcx,rcx
  4075af:	je     0x4075c1
  4075b1:	mov    rbx,rax
  4075b4:	call   0x4494c8
  4075b9:	mov    QWORD PTR [rbx+0x10],0x0
  4075c1:	add    rsp,0x20
  4075c5:	pop    rbx
  4075c6:	ret    
  4075c7:	nop
  4075c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4075d0:	push   rbp
  4075d1:	push   rdi
  4075d2:	push   rsi
  4075d3:	push   rbx
  4075d4:	sub    rsp,0x28
  4075d8:	lea    rax,[rip+0x53a91]        # 0x45b070
  4075df:	mov    rbx,rcx
  4075e2:	mov    rdi,rdx
  4075e5:	mov    edx,0x150
  4075ea:	mov    QWORD PTR [rcx],rax
  4075ed:	mov    ecx,0x1
  4075f2:	mov    ebp,r8d
  4075f5:	call   0x43bb20
  4075fa:	mov    rsi,rax
  4075fd:	mov    rcx,rax
  407600:	call   0x4073e0
  407605:	mov    QWORD PTR [rbx+0x8],rsi
  407609:	mov    DWORD PTR [rbx+0x18],0x0
  407610:	mov    rcx,rbx
  407613:	mov    DWORD PTR [rbx+0x1c],0x0
  40761a:	mov    DWORD PTR [rbx+0x20],0x0
  407621:	mov    DWORD PTR [rbx+0x24],0x0
  407628:	mov    QWORD PTR [rbx+0x30],0x0
  407630:	mov    BYTE PTR [rbx+0x38],0x0
  407634:	mov    BYTE PTR [rbx+0x39],0x0
  407638:	mov    BYTE PTR [rbx+0x3a],0x1
  40763c:	mov    BYTE PTR [rbx+0x3b],0x0
  407640:	mov    DWORD PTR [rbx+0x28],ebp
  407643:	mov    QWORD PTR [rbx+0x10],rdi
  407647:	call   0x407370
  40764c:	mov    BYTE PTR [rbx+0x38],0x0
  407650:	mov    DWORD PTR [rbx+0x20],0x0
  407657:	add    rsp,0x28
  40765b:	pop    rbx
  40765c:	pop    rsi
  40765d:	pop    rdi
  40765e:	pop    rbp
  40765f:	ret    
  407660:	push   rsi
  407661:	push   rbx
  407662:	sub    rsp,0x28
  407666:	mov    rax,QWORD PTR [rcx+0x8]
  40766a:	mov    rsi,rcx
  40766d:	mov    rbx,QWORD PTR [rax+0xb0]
  407674:	mov    rax,QWORD PTR [rbx+0x18]
  407678:	lea    rdx,[rax+0x1]
  40767c:	cmp    rdx,QWORD PTR [rbx+0x20]
  407680:	jbe    0x407697
  407682:	mov    edx,0x1
  407687:	mov    rcx,rbx
  40768a:	call   0x439960
  40768f:	mov    rax,QWORD PTR [rbx+0x18]
  407693:	lea    rdx,[rax+0x1]
  407697:	mov    QWORD PTR [rbx+0x18],rdx
  40769b:	mov    BYTE PTR [rax],0x0
  40769e:	mov    rax,QWORD PTR [rsi+0x8]
  4076a2:	mov    rax,QWORD PTR [rax+0xb0]
  4076a9:	mov    rax,QWORD PTR [rax+0x10]
  4076ad:	add    rsp,0x28
  4076b1:	pop    rbx
  4076b2:	pop    rsi
  4076b3:	ret    
  4076b4:	xchg   ax,ax
  4076b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076c0:	push   rbx
  4076c1:	sub    rsp,0x20
  4076c5:	mov    rbx,rcx
  4076c8:	call   0x407660
  4076cd:	mov    rdx,QWORD PTR [rbx+0x8]
  4076d1:	mov    rcx,rax
  4076d4:	mov    rdx,QWORD PTR [rdx+0xc0]
  4076db:	call   0x4494d8
  4076e0:	mov    rcx,rbx
  4076e3:	add    rsp,0x20
  4076e7:	pop    rbx
  4076e8:	jmp    0x407520
  4076ed:	nop    DWORD PTR [rax]
  4076f0:	push   rbx
  4076f1:	sub    rsp,0x20
  4076f5:	mov    rbx,rcx
  4076f8:	call   0x4076c0
  4076fd:	mov    rax,QWORD PTR [rbx+0x8]
  407701:	mov    BYTE PTR [rbx+0x38],0x0
  407705:	mov    DWORD PTR [rbx+0x20],0x0
  40770c:	mov    rcx,QWORD PTR [rax+0xc0]
  407713:	add    rsp,0x20
  407717:	pop    rbx
  407718:	jmp    0x449500
  40771d:	nop    DWORD PTR [rax]
  407720:	push   rbp
  407721:	push   rdi
  407722:	push   rsi
  407723:	push   rbx
  407724:	sub    rsp,0x28
  407728:	mov    rbp,rcx
  40772b:	mov    edi,edx
  40772d:	call   0x407660
  407732:	mov    rbx,rax
  407735:	mov    rax,QWORD PTR [rbp+0x8]
  407739:	movzx  r8d,BYTE PTR [rbx]
  40773d:	mov    rsi,QWORD PTR [rax+0xc0]
  407744:	test   r8b,r8b
  407747:	jne    0x407791
  407749:	jmp    0x4077c4
  40774b:	nop    DWORD PTR [rax+rax*1+0x0]
  407750:	cmp    r8b,0x20
  407754:	je     0x4077e0
  40775a:	cmp    r8b,0x22
  40775e:	je     0x4077e0
  407764:	cmp    r8b,0xa
  407768:	jne    0x4077ac
  40776a:	lea    rcx,[rip+0x46310]        # 0x44da81
  407771:	mov    r8d,0x4
  407777:	add    rbx,0x1
  40777b:	mov    r9,rsi
  40777e:	mov    edx,0x1
  407783:	call   0x4494a8
  407788:	movzx  r8d,BYTE PTR [rbx]
  40778c:	test   r8b,r8b
  40778f:	je     0x4077c4
  407791:	cmp    r8b,0x3c
  407795:	je     0x4077e0
  407797:	jle    0x407750
  407799:	cmp    r8b,0x7b
  40779d:	je     0x4077e0
  40779f:	jle    0x4077d4
  4077a1:	cmp    r8b,0x7c
  4077a5:	jne    0x4077f0
  4077a7:	test   dil,dil
  4077aa:	jne    0x4077e0
  4077ac:	movsx  ecx,BYTE PTR [rbx]
  4077af:	mov    rdx,rsi
  4077b2:	add    rbx,0x1
  4077b6:	call   0x4494e0
  4077bb:	movzx  r8d,BYTE PTR [rbx]
  4077bf:	test   r8b,r8b
  4077c2:	jne    0x407791
  4077c4:	mov    rcx,rbp
  4077c7:	add    rsp,0x28
  4077cb:	pop    rbx
  4077cc:	pop    rsi
  4077cd:	pop    rdi
  4077ce:	pop    rbp
  4077cf:	jmp    0x407520
  4077d4:	cmp    r8b,0x3e
  4077d8:	jne    0x4077ac
  4077da:	nop    WORD PTR [rax+rax*1+0x0]
  4077e0:	mov    rdx,rsi
  4077e3:	mov    ecx,0x5c
  4077e8:	call   0x4494e0
  4077ed:	jmp    0x4077ac
  4077ef:	nop
  4077f0:	cmp    r8b,0x7d
  4077f4:	jne    0x4077ac
  4077f6:	mov    rdx,rsi
  4077f9:	mov    ecx,0x5c
  4077fe:	call   0x4494e0
  407803:	jmp    0x4077ac
  407805:	nop
  407806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407810:	mov    rax,QWORD PTR [rcx+0x8]
  407814:	mov    rdx,QWORD PTR [rax+0xb0]
  40781b:	mov    rax,QWORD PTR [rdx+0x18]
  40781f:	cmp    QWORD PTR [rdx+0x10],rax
  407823:	je     0x407830
  407825:	sub    rax,0x1
  407829:	ret    
  40782a:	nop    WORD PTR [rax+rax*1+0x0]
  407830:	xor    eax,eax
  407832:	ret    
  407833:	nop    DWORD PTR [rax]
  407836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407840:	mov    rdx,QWORD PTR [rcx+0x8]
  407844:	mov    eax,DWORD PTR [rcx+0x1c]
  407847:	sub    eax,DWORD PTR [rdx+0xc8]
  40784d:	ret    
  40784e:	xchg   ax,ax
  407850:	push   rsi
  407851:	push   rbx
  407852:	sub    rsp,0x28
  407856:	mov    rax,QWORD PTR [rcx+0x8]
  40785a:	mov    rsi,rcx
  40785d:	mov    rbx,QWORD PTR [rax+0xb0]
  407864:	mov    rax,QWORD PTR [rbx+0x18]
  407868:	lea    rdx,[rax+0x1]
  40786c:	cmp    rdx,QWORD PTR [rbx+0x20]
  407870:	jbe    0x407887
  407872:	mov    edx,0x1
  407877:	mov    rcx,rbx
  40787a:	call   0x439960
  40787f:	mov    rax,QWORD PTR [rbx+0x18]
  407883:	lea    rdx,[rax+0x1]
  407887:	mov    QWORD PTR [rbx+0x18],rdx
  40788b:	mov    BYTE PTR [rax],0xa
  40788e:	mov    rax,QWORD PTR [rsi+0x8]
  407892:	mov    BYTE PTR [rsi+0x39],0x0
  407896:	mov    DWORD PTR [rax+0xc8],0x0
  4078a0:	add    rsp,0x28
  4078a4:	pop    rbx
  4078a5:	pop    rsi
  4078a6:	ret    
  4078a7:	nop    WORD PTR [rax+rax*1+0x0]
  4078b0:	push   rdi
  4078b1:	push   rsi
  4078b2:	push   rbx
  4078b3:	sub    rsp,0x20
  4078b7:	mov    eax,DWORD PTR [rcx+0x28]
  4078ba:	mov    rbx,rcx
  4078bd:	mov    edi,edx
  4078bf:	mov    rcx,QWORD PTR [rcx+0x8]
  4078c3:	test   eax,eax
  4078c5:	jle    0x4078d4
  4078c7:	mov    eax,DWORD PTR [rbx+0x1c]
  4078ca:	sub    eax,DWORD PTR [rcx+0xc8]
  4078d0:	test   eax,eax
  4078d2:	jle    0x407920
  4078d4:	mov    rsi,QWORD PTR [rcx+0xb0]
  4078db:	mov    rax,QWORD PTR [rsi+0x18]
  4078df:	lea    rcx,[rax+0x1]
  4078e3:	cmp    rcx,QWORD PTR [rsi+0x20]
  4078e7:	ja     0x407903
  4078e9:	mov    QWORD PTR [rsi+0x18],rcx
  4078ed:	mov    BYTE PTR [rax],dil
  4078f0:	mov    rax,QWORD PTR [rbx+0x8]
  4078f4:	add    DWORD PTR [rax+0xc8],0x1
  4078fb:	add    rsp,0x20
  4078ff:	pop    rbx
  407900:	pop    rsi
  407901:	pop    rdi
  407902:	ret    
  407903:	mov    rcx,rsi
  407906:	mov    edx,0x1
  40790b:	call   0x439960
  407910:	mov    rax,QWORD PTR [rsi+0x18]
  407914:	lea    rcx,[rax+0x1]
  407918:	jmp    0x4078e9
  40791a:	nop    WORD PTR [rax+rax*1+0x0]
  407920:	mov    rcx,rbx
  407923:	call   0x407850
  407928:	mov    rax,QWORD PTR [rip+0x53501]        # 0x45ae30
  40792f:	movzx  edx,dil
  407933:	test   BYTE PTR [rax+rdx*2],0x40
  407937:	jne    0x4078fb
  407939:	mov    rcx,QWORD PTR [rbx+0x8]
  40793d:	jmp    0x4078d4
  40793f:	nop
  407940:	push   rdi
  407941:	push   rsi
  407942:	push   rbx
  407943:	sub    rsp,0x20
  407947:	mov    esi,DWORD PTR [rcx+0x20]
  40794a:	xor    ebx,ebx
  40794c:	mov    rdi,rcx
  40794f:	test   esi,esi
  407951:	jle    0x407967
  407953:	mov    edx,0x20
  407958:	mov    rcx,rdi
  40795b:	add    ebx,0x1
  40795e:	call   0x4078b0
  407963:	cmp    ebx,esi
  407965:	jne    0x407953
  407967:	add    rsp,0x20
  40796b:	pop    rbx
  40796c:	pop    rsi
  40796d:	pop    rdi
  40796e:	ret    
  40796f:	nop
  407970:	push   r12
  407972:	push   rbp
  407973:	push   rdi
  407974:	push   rsi
  407975:	push   rbx
  407976:	sub    rsp,0x20
  40797a:	mov    rsi,QWORD PTR [rcx+0x10]
  40797e:	test   rsi,rsi
  407981:	je     0x4079e6
  407983:	mov    eax,DWORD PTR [rcx+0x24]
  407986:	mov    rbx,rcx
  407989:	test   eax,eax
  40798b:	je     0x4079f1
  40798d:	cmp    eax,0x2
  407990:	jne    0x4079e6
  407992:	mov    rcx,rsi
  407995:	call   0x4493c0
  40799a:	mov    r12,rax
  40799d:	mov    rax,QWORD PTR [rbx+0x8]
  4079a1:	movsxd rbp,r12d
  4079a4:	mov    rdi,QWORD PTR [rax+0xb0]
  4079ab:	mov    rcx,QWORD PTR [rdi+0x18]
  4079af:	lea    rax,[rcx+rbp*1]
  4079b3:	cmp    QWORD PTR [rdi+0x20],rax
  4079b7:	jae    0x4079c8
  4079b9:	mov    rcx,rdi
  4079bc:	mov    edx,r12d
  4079bf:	call   0x439960
  4079c4:	mov    rcx,QWORD PTR [rdi+0x18]
  4079c8:	mov    r8,rbp
  4079cb:	mov    rdx,rsi
  4079ce:	call   0x449450
  4079d3:	add    QWORD PTR [rdi+0x18],rbp
  4079d7:	mov    rax,QWORD PTR [rbx+0x8]
  4079db:	add    DWORD PTR [rax+0xc8],r12d
  4079e2:	mov    BYTE PTR [rbx+0x38],0x1
  4079e6:	add    rsp,0x20
  4079ea:	pop    rbx
  4079eb:	pop    rsi
  4079ec:	pop    rdi
  4079ed:	pop    rbp
  4079ee:	pop    r12
  4079f0:	ret    
  4079f1:	cmp    BYTE PTR [rcx+0x38],0x0
  4079f5:	je     0x407a20
  4079f7:	mov    edi,DWORD PTR [rcx+0x20]
  4079fa:	test   edi,edi
  4079fc:	jle    0x4079e6
  4079fe:	xor    esi,esi
  407a00:	mov    edx,0x20
  407a05:	mov    rcx,rbx
  407a08:	add    esi,0x1
  407a0b:	call   0x4078b0
  407a10:	cmp    esi,edi
  407a12:	jne    0x407a00
  407a14:	add    rsp,0x20
  407a18:	pop    rbx
  407a19:	pop    rsi
  407a1a:	pop    rdi
  407a1b:	pop    rbp
  407a1c:	pop    r12
  407a1e:	ret    
  407a1f:	nop
  407a20:	add    DWORD PTR [rcx+0x20],0x3
  407a24:	jmp    0x407992
  407a29:	nop    DWORD PTR [rax+0x0]
  407a30:	push   r12
  407a32:	push   rbp
  407a33:	push   rdi
  407a34:	push   rsi
  407a35:	push   rbx
  407a36:	sub    rsp,0x30
  407a3a:	mov    rax,QWORD PTR [rcx+0x8]
  407a3e:	mov    rbx,rdx
  407a41:	mov    rbp,rcx
  407a44:	mov    edx,DWORD PTR [rax+0xc8]
  407a4a:	test   edx,edx
  407a4c:	je     0x407aa0
  407a4e:	mov    rdi,QWORD PTR [rax+0xb0]
  407a55:	mov    rsi,r8
  407a58:	sub    rsi,rbx
  407a5b:	movsxd r12,esi
  407a5e:	mov    rcx,QWORD PTR [rdi+0x18]
  407a62:	lea    rax,[rcx+r12*1]
  407a66:	cmp    QWORD PTR [rdi+0x20],rax
  407a6a:	jae    0x407a7a
  407a6c:	mov    rcx,rdi
  407a6f:	mov    edx,esi
  407a71:	call   0x439960
  407a76:	mov    rcx,QWORD PTR [rdi+0x18]
  407a7a:	mov    r8,r12
  407a7d:	mov    rdx,rbx
  407a80:	call   0x449450
  407a85:	add    QWORD PTR [rdi+0x18],r12
  407a89:	mov    rax,QWORD PTR [rbp+0x8]
  407a8d:	add    DWORD PTR [rax+0xc8],esi
  407a93:	add    rsp,0x30
  407a97:	pop    rbx
  407a98:	pop    rsi
  407a99:	pop    rdi
  407a9a:	pop    rbp
  407a9b:	pop    r12
  407a9d:	ret    
  407a9e:	xchg   ax,ax
  407aa0:	mov    QWORD PTR [rsp+0x28],r8
  407aa5:	call   0x407970
  407aaa:	mov    eax,DWORD PTR [rbp+0x28]
  407aad:	mov    r8,QWORD PTR [rsp+0x28]
  407ab2:	test   eax,eax
  407ab4:	jle    0x407ace
  407ab6:	cmp    rbx,r8
  407ab9:	jne    0x407ac9
  407abb:	jmp    0x407ace
  407abd:	nop    DWORD PTR [rax]
  407ac0:	add    rbx,0x1
  407ac4:	cmp    r8,rbx
  407ac7:	je     0x407ace
  407ac9:	cmp    BYTE PTR [rbx],0x20
  407acc:	je     0x407ac0
  407ace:	mov    rax,QWORD PTR [rbp+0x8]
  407ad2:	jmp    0x407a4e
  407ad7:	nop    WORD PTR [rax+rax*1+0x0]
  407ae0:	push   r12
  407ae2:	push   rbp
  407ae3:	push   rdi
  407ae4:	push   rsi
  407ae5:	push   rbx
  407ae6:	sub    rsp,0x20
  407aea:	test   rdx,rdx
  407aed:	mov    r12,rcx
  407af0:	mov    rbp,rdx
  407af3:	je     0x407c0b
  407af9:	mov    rcx,rdx
  407afc:	call   0x4493c0
  407b01:	mov    edx,DWORD PTR [r12+0x28]
  407b06:	lea    rsi,[rbp+rax*1+0x0]
  407b0b:	test   edx,edx
  407b0d:	jle    0x407b68
  407b0f:	cmp    rbp,rsi
  407b12:	je     0x407c12
  407b18:	movzx  eax,BYTE PTR [rbp+0x0]
  407b1c:	mov    rdi,QWORD PTR [rip+0x5330d]        # 0x45ae30
  407b23:	mov    rbx,rbp
  407b26:	jmp    0x407b33
  407b28:	nop    DWORD PTR [rax+rax*1+0x0]
  407b30:	movzx  eax,BYTE PTR [rbx]
  407b33:	movzx  r9d,al
  407b37:	test   BYTE PTR [rdi+r9*2],0x1
  407b3c:	jne    0x407b80
  407b3e:	cmp    al,0xa
  407b40:	je     0x407b80
  407b42:	add    rbx,0x1
  407b46:	cmp    rsi,rbx
  407b49:	jne    0x407b30
  407b4b:	mov    rcx,QWORD PTR [r12+0x8]
  407b50:	mov    eax,DWORD PTR [r12+0x1c]
  407b55:	mov    rdx,rsi
  407b58:	sub    rdx,rbp
  407b5b:	sub    eax,DWORD PTR [rcx+0xc8]
  407b61:	cdqe   
  407b63:	cmp    rdx,rax
  407b66:	jge    0x407b9d
  407b68:	mov    r8,rsi
  407b6b:	mov    rdx,rbp
  407b6e:	mov    rcx,r12
  407b71:	add    rsp,0x20
  407b75:	pop    rbx
  407b76:	pop    rsi
  407b77:	pop    rdi
  407b78:	pop    rbp
  407b79:	pop    r12
  407b7b:	jmp    0x407a30
  407b80:	mov    rcx,QWORD PTR [r12+0x8]
  407b85:	mov    eax,DWORD PTR [r12+0x1c]
  407b8a:	mov    rdx,rbx
  407b8d:	sub    rdx,rbp
  407b90:	sub    eax,DWORD PTR [rcx+0xc8]
  407b96:	cdqe   
  407b98:	cmp    rdx,rax
  407b9b:	jl     0x407ba5
  407b9d:	mov    rcx,r12
  407ba0:	call   0x407850
  407ba5:	mov    r8,rbx
  407ba8:	mov    rdx,rbp
  407bab:	mov    rcx,r12
  407bae:	call   0x407a30
  407bb3:	cmp    rsi,rbx
  407bb6:	je     0x407c12
  407bb8:	movzx  edx,BYTE PTR [rbx]
  407bbb:	test   BYTE PTR [rdi+rdx*2],0x1
  407bbf:	mov    rax,rdx
  407bc2:	jne    0x407bd0
  407bc4:	cmp    al,0xa
  407bc6:	je     0x407bf1
  407bc8:	mov    rbp,rbx
  407bcb:	jmp    0x407b23
  407bd0:	mov    edx,0x20
  407bd5:	mov    rcx,r12
  407bd8:	call   0x4078b0
  407bdd:	lea    rdx,[rbx+0x1]
  407be1:	cmp    rsi,rdx
  407be4:	je     0x407c12
  407be6:	movzx  eax,BYTE PTR [rbx+0x1]
  407bea:	mov    rbx,rdx
  407bed:	cmp    al,0xa
  407bef:	jne    0x407bc8
  407bf1:	mov    rcx,r12
  407bf4:	call   0x407850
  407bf9:	lea    rdx,[rbx+0x1]
  407bfd:	cmp    rsi,rdx
  407c00:	je     0x407c12
  407c02:	movzx  eax,BYTE PTR [rbx+0x1]
  407c06:	mov    rbx,rdx
  407c09:	jmp    0x407bc8
  407c0b:	mov    eax,DWORD PTR [rcx+0x28]
  407c0e:	test   eax,eax
  407c10:	jle    0x407c1d
  407c12:	add    rsp,0x20
  407c16:	pop    rbx
  407c17:	pop    rsi
  407c18:	pop    rdi
  407c19:	pop    rbp
  407c1a:	pop    r12
  407c1c:	ret    
  407c1d:	xor    esi,esi
  407c1f:	jmp    0x407b68
  407c24:	xchg   ax,ax
  407c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c30:	push   r15
  407c32:	push   r14
  407c34:	push   r13
  407c36:	push   r12
  407c38:	push   rbp
  407c39:	push   rdi
  407c3a:	push   rsi
  407c3b:	push   rbx
  407c3c:	sub    rsp,0x178
  407c43:	mov    r13,QWORD PTR [rcx+0x8]
  407c47:	mov    QWORD PTR [rsp+0x1c8],rdx
  407c4f:	mov    rbp,rcx
  407c52:	mov    r8,QWORD PTR [r13+0x78]
  407c56:	mov    rax,QWORD PTR [r13+0x70]
  407c5a:	lea    rbx,[r13+0x58]
  407c5e:	mov    rdx,r8
  407c61:	sub    rdx,rax
  407c64:	cmp    rdx,0x1e7
  407c6b:	jle    0x4082f1
  407c71:	mov    rcx,QWORD PTR [r13+0x68]
  407c75:	add    rax,0x1e8
  407c7b:	mov    QWORD PTR [r13+0x70],rax
  407c7f:	cmp    rax,rcx
  407c82:	je     0x408924
  407c88:	movsxd r9,DWORD PTR [r13+0x88]
  407c8f:	mov    rdi,r8
  407c92:	mov    rdx,r9
  407c95:	add    r9,rax
  407c98:	not    edx
  407c9a:	movsxd rax,edx
  407c9d:	mov    rdx,QWORD PTR [r13+0x60]
  407ca1:	and    rax,r9
  407ca4:	mov    r9,rax
  407ca7:	mov    QWORD PTR [r13+0x70],rax
  407cab:	sub    r9,rdx
  407cae:	sub    rdi,rdx
  407cb1:	cmp    r9,rdi
  407cb4:	jle    0x407cbd
  407cb6:	mov    QWORD PTR [r13+0x70],r8
  407cba:	mov    rax,r8
  407cbd:	mov    QWORD PTR [r13+0x68],rax
  407cc1:	mov    rax,QWORD PTR [r13+0xb8]
  407cc8:	lea    rdx,[rsp+0x80]
  407cd0:	mov    BYTE PTR [rsp+0x57],0x0
  407cd5:	mov    BYTE PTR [rsp+0x56],0x0
  407cda:	xor    r12d,r12d
  407cdd:	mov    rdi,rdx
  407ce0:	mov    QWORD PTR [rcx],rax
  407ce3:	lea    rax,[rcx+0x8]
  407ce7:	mov    QWORD PTR [r13+0xb8],rcx
  407cee:	mov    ecx,0x1e
  407cf3:	mov    QWORD PTR [rsp+0x48],rax
  407cf8:	xor    eax,eax
  407cfa:	rep stos QWORD PTR es:[rdi],rax
  407cfd:	mov    rax,QWORD PTR [rsp+0x1c8]
  407d05:	xor    edi,edi
  407d07:	mov    rsi,QWORD PTR [rax]
  407d0a:	lea    rax,[rsp+0x78]
  407d0f:	mov    QWORD PTR [rsp+0x60],rax
  407d14:	movzx  eax,BYTE PTR [rsi]
  407d17:	test   al,al
  407d19:	je     0x407f6f
  407d1f:	cmp    al,0x25
  407d21:	jne    0x407d3d
  407d23:	jmp    0x407d6a
  407d25:	mov    QWORD PTR [r13+0x70],rdx
  407d29:	movzx  edx,BYTE PTR [rsi]
  407d2c:	add    rsi,0x1
  407d30:	mov    BYTE PTR [rax],dl
  407d32:	movzx  eax,BYTE PTR [rsi]
  407d35:	cmp    al,0x25
  407d37:	je     0x407d62
  407d39:	test   al,al
  407d3b:	je     0x407d62
  407d3d:	mov    rax,QWORD PTR [r13+0x70]
  407d41:	lea    rdx,[rax+0x1]
  407d45:	cmp    rdx,QWORD PTR [r13+0x78]
  407d49:	jbe    0x407d25
  407d4b:	mov    edx,0x1
  407d50:	mov    rcx,rbx
  407d53:	call   0x439960
  407d58:	mov    rax,QWORD PTR [r13+0x70]
  407d5c:	lea    rdx,[rax+0x1]
  407d60:	jmp    0x407d25
  407d62:	test   al,al
  407d64:	je     0x407f6f
  407d6a:	movzx  eax,BYTE PTR [rsi+0x1]
  407d6e:	cmp    al,0x3c
  407d70:	je     0x4081f0
  407d76:	jg     0x407ed0
  407d7c:	cmp    al,0x25
  407d7e:	je     0x408110
  407d84:	cmp    al,0x27
  407d86:	je     0x408150
  407d8c:	test   al,al
  407d8e:	je     0x408132
  407d94:	mov    rax,QWORD PTR [r13+0x70]
  407d98:	lea    rdx,[rax+0x1]
  407d9c:	cmp    rdx,QWORD PTR [r13+0x78]
  407da0:	ja     0x408416
  407da6:	cmp    edi,0x3b
  407da9:	mov    QWORD PTR [r13+0x70],rdx
  407dad:	mov    BYTE PTR [rax],0x0
  407db0:	ja     0x408dc1
  407db6:	lea    eax,[rdi+0x1]
  407db9:	mov    rcx,QWORD PTR [rsp+0x48]
  407dbe:	mov    r8,QWORD PTR [r13+0x68]
  407dc2:	mov    DWORD PTR [rsp+0x40],eax
  407dc6:	mov    eax,edi
  407dc8:	lea    r10,[rcx+rax*8]
  407dcc:	mov    rax,QWORD PTR [r13+0x70]
  407dd0:	cmp    rax,r8
  407dd3:	je     0x408931
  407dd9:	movsxd rdx,DWORD PTR [r13+0x88]
  407de0:	mov    ecx,edx
  407de2:	add    rax,rdx
  407de5:	mov    rdx,QWORD PTR [r13+0x60]
  407de9:	not    ecx
  407deb:	movsxd rcx,ecx
  407dee:	and    rax,rcx
  407df1:	mov    rcx,QWORD PTR [r13+0x78]
  407df5:	mov    r9,rax
  407df8:	mov    QWORD PTR [r13+0x70],rax
  407dfc:	sub    r9,rdx
  407dff:	mov    r11,rcx
  407e02:	sub    r11,rdx
  407e05:	cmp    r9,r11
  407e08:	jg     0x408254
  407e0e:	mov    QWORD PTR [r13+0x68],rax
  407e12:	mov    QWORD PTR [r10],r8
  407e15:	lea    r15,[rsi+0x1]
  407e19:	movzx  eax,BYTE PTR [rsi+0x1]
  407e1d:	mov    rcx,QWORD PTR [rip+0x5300c]        # 0x45ae30
  407e24:	test   BYTE PTR [rcx+rax*2],0x4
  407e28:	jne    0x40845d
  407e2e:	cmp    BYTE PTR [rsp+0x57],0x0
  407e33:	lea    eax,[r12+0x1]
  407e38:	mov    DWORD PTR [rsp+0x58],eax
  407e3c:	jne    0x408dd9
  407e42:	mov    BYTE PTR [rsp+0x56],0x1
  407e47:	cmp    r12d,0x1d
  407e4b:	ja     0x408c11
  407e51:	mov    eax,r12d
  407e54:	cmp    QWORD PTR [rsp+rax*8+0x80],0x0
  407e5d:	jne    0x408bf9
  407e63:	mov    edx,DWORD PTR [rsp+0x40]
  407e67:	mov    rcx,QWORD PTR [rsp+0x48]
  407e6c:	lea    r14,[rcx+rdx*8]
  407e70:	mov    QWORD PTR [rsp+rax*8+0x80],r14
  407e78:	jmp    0x407eaa
  407e7a:	nop    WORD PTR [rax+rax*1+0x0]
  407e80:	mov    QWORD PTR [r13+0x70],rdx
  407e84:	movzx  edx,BYTE PTR [r15]
  407e88:	add    r15,0x1
  407e8c:	lea    rcx,[rip+0x45bf9]        # 0x44da8c
  407e93:	mov    BYTE PTR [rax],dl
  407e95:	movsx  edx,BYTE PTR [r15-0x1]
  407e9a:	mov    esi,edx
  407e9c:	call   0x4493e8
  407ea1:	test   rax,rax
  407ea4:	je     0x408160
  407eaa:	mov    rax,QWORD PTR [r13+0x70]
  407eae:	lea    rdx,[rax+0x1]
  407eb2:	cmp    rdx,QWORD PTR [r13+0x78]
  407eb6:	jbe    0x407e80
  407eb8:	mov    edx,0x1
  407ebd:	mov    rcx,rbx
  407ec0:	call   0x439960
  407ec5:	mov    rax,QWORD PTR [r13+0x70]
  407ec9:	lea    rdx,[rax+0x1]
  407ecd:	jmp    0x407e80
  407ecf:	nop
  407ed0:	cmp    al,0x52
  407ed2:	je     0x408100
  407ed8:	cmp    al,0x6d
  407eda:	je     0x4080b1
  407ee0:	cmp    al,0x3e
  407ee2:	jne    0x407d94
  407ee8:	movzx  ecx,BYTE PTR [rbp+0x3b]
  407eec:	call   0x407230
  407ef1:	mov    rcx,rax
  407ef4:	mov    r15,rax
  407ef7:	call   0x4493c0
  407efc:	mov    rcx,QWORD PTR [r13+0x70]
  407f00:	movsxd r14,eax
  407f03:	lea    rdx,[rcx+r14*1]
  407f07:	cmp    QWORD PTR [r13+0x78],rdx
  407f0b:	jb     0x408430
  407f11:	mov    r8,r14
  407f14:	mov    rdx,r15
  407f17:	call   0x449450
  407f1c:	add    r14,QWORD PTR [r13+0x70]
  407f20:	mov    QWORD PTR [r13+0x70],r14
  407f24:	mov    rax,QWORD PTR [rip+0x52f55]        # 0x45ae80
  407f2b:	mov    rdx,QWORD PTR [rax]
  407f2e:	mov    rcx,rdx
  407f31:	mov    QWORD PTR [rsp+0x40],rdx
  407f36:	call   0x4493c0
  407f3b:	movsxd r15,eax
  407f3e:	mov    rdx,QWORD PTR [rsp+0x40]
  407f43:	lea    rcx,[r14+r15*1]
  407f47:	cmp    QWORD PTR [r13+0x78],rcx
  407f4b:	jb     0x4082d4
  407f51:	mov    r8,r15
  407f54:	mov    rcx,r14
  407f57:	add    rsi,0x2
  407f5b:	call   0x449450
  407f60:	add    QWORD PTR [r13+0x70],r15
  407f64:	movzx  eax,BYTE PTR [rsi]
  407f67:	test   al,al
  407f69:	jne    0x407d1f
  407f6f:	mov    rax,QWORD PTR [r13+0x70]
  407f73:	lea    rdx,[rax+0x1]
  407f77:	cmp    rdx,QWORD PTR [r13+0x78]
  407f7b:	ja     0x408608
  407f81:	cmp    edi,0x3b
  407f84:	mov    QWORD PTR [r13+0x70],rdx
  407f88:	mov    BYTE PTR [rax],0x0
  407f8b:	ja     0x408c41
  407f91:	mov    rax,QWORD PTR [rsp+0x48]
  407f96:	mov    r9,QWORD PTR [r13+0x68]
  407f9a:	lea    ecx,[rdi+0x1]
  407f9d:	lea    r11,[rax+rdi*8]
  407fa1:	mov    rax,QWORD PTR [r13+0x70]
  407fa5:	cmp    rax,r9
  407fa8:	je     0x408a34
  407fae:	movsxd rdx,DWORD PTR [r13+0x88]
  407fb5:	mov    r8d,edx
  407fb8:	add    rax,rdx
  407fbb:	mov    rdx,QWORD PTR [r13+0x60]
  407fbf:	not    r8d
  407fc2:	movsxd r8,r8d
  407fc5:	and    rax,r8
  407fc8:	mov    r8,QWORD PTR [r13+0x78]
  407fcc:	mov    rsi,rax
  407fcf:	mov    QWORD PTR [r13+0x70],rax
  407fd3:	sub    rsi,rdx
  407fd6:	mov    rdi,r8
  407fd9:	sub    rdi,rdx
  407fdc:	cmp    rsi,rdi
  407fdf:	jg     0x4085fc
  407fe5:	mov    rdi,QWORD PTR [rsp+0x48]
  407fea:	mov    QWORD PTR [r13+0x68],rax
  407fee:	mov    eax,ecx
  407ff0:	mov    QWORD PTR [r11],r9
  407ff3:	mov    r10,QWORD PTR [rsp+0x80]
  407ffb:	xor    r12d,r12d
  407ffe:	mov    QWORD PTR [rdi+rax*8],0x0
  408006:	mov    QWORD PTR [r13+0xb0],rbx
  40800d:	mov    eax,DWORD PTR [rbp+0x24]
  408010:	test   r10,r10
  408013:	mov    DWORD PTR [rbp+0x24],0x1
  40801a:	mov    DWORD PTR [rsp+0x40],eax
  40801e:	mov    eax,DWORD PTR [rbp+0x28]
  408021:	mov    DWORD PTR [rbp+0x28],0x0
  408028:	mov    DWORD PTR [rsp+0x48],eax
  40802c:	je     0x4083ba
  408032:	lea    rax,[rsp+0x78]
  408037:	mov    r15,QWORD PTR [rsp+0x1c8]
  40803f:	mov    QWORD PTR [rsp+0x60],rbx
  408044:	mov    QWORD PTR [rsp+0x68],rax
  408049:	mov    rbx,QWORD PTR [r10]
  40804c:	xor    edi,edi
  40804e:	xor    r11d,r11d
  408051:	xor    r9d,r9d
  408054:	xor    r14d,r14d
  408057:	xor    esi,esi
  408059:	jmp    0x408083
  40805b:	nop    DWORD PTR [rax+rax*1+0x0]
  408060:	cmp    al,0x23
  408062:	je     0x4082c0
  408068:	cmp    al,0x2b
  40806a:	jne    0x408284
  408070:	test   r9b,r9b
  408073:	jne    0x408d49
  408079:	mov    r9d,0x1
  40807f:	add    rbx,0x1
  408083:	movzx  eax,BYTE PTR [rbx]
  408086:	cmp    al,0x6c
  408088:	je     0x408260
  40808e:	jle    0x408060
  408090:	cmp    al,0x71
  408092:	je     0x408271
  408098:	cmp    al,0x77
  40809a:	jne    0x408284
  4080a0:	test   r14b,r14b
  4080a3:	jne    0x408d61
  4080a9:	mov    r14d,0x1
  4080af:	jmp    0x40807f
  4080b1:	mov    rax,QWORD PTR [rsp+0x1c8]
  4080b9:	mov    ecx,DWORD PTR [rax+0x10]
  4080bc:	call   0x43bc20
  4080c1:	mov    rcx,rax
  4080c4:	mov    r15,rax
  4080c7:	call   0x4493c0
  4080cc:	mov    rcx,QWORD PTR [r13+0x70]
  4080d0:	movsxd r14,eax
  4080d3:	lea    rdx,[rcx+r14*1]
  4080d7:	cmp    QWORD PTR [r13+0x78],rdx
  4080db:	jb     0x408241
  4080e1:	mov    r8,r14
  4080e4:	mov    rdx,r15
  4080e7:	add    rsi,0x2
  4080eb:	call   0x449450
  4080f0:	add    QWORD PTR [r13+0x70],r14
  4080f4:	jmp    0x407d14
  4080f9:	nop    DWORD PTR [rax+0x0]
  408100:	movzx  ecx,BYTE PTR [rbp+0x3b]
  408104:	call   0x407230
  408109:	jmp    0x4080c1
  40810b:	nop    DWORD PTR [rax+rax*1+0x0]
  408110:	mov    rax,QWORD PTR [r13+0x70]
  408114:	lea    rdx,[rax+0x1]
  408118:	cmp    rdx,QWORD PTR [r13+0x78]
  40811c:	ja     0x408443
  408122:	mov    QWORD PTR [r13+0x70],rdx
  408126:	add    rsi,0x2
  40812a:	mov    BYTE PTR [rax],0x25
  40812d:	jmp    0x407d14
  408132:	lea    r8,[rip+0x45b10]        # 0x44dc49
  408139:	lea    rcx,[rip+0x458f0]        # 0x44da30
  408140:	mov    edx,0x143
  408145:	call   0x406190
  40814a:	nop    WORD PTR [rax+rax*1+0x0]
  408150:	mov    r14,QWORD PTR [r13+0x70]
  408154:	jmp    0x407f24
  408159:	nop    DWORD PTR [rax+0x0]
  408160:	cmp    sil,0x2e
  408164:	je     0x4084bd
  40816a:	cmp    BYTE PTR [r15],0x0
  40816e:	je     0x408bc0
  408174:	mov    rax,QWORD PTR [r13+0x70]
  408178:	lea    rdx,[rax+0x1]
  40817c:	cmp    rdx,QWORD PTR [r13+0x78]
  408180:	ja     0x4084a3
  408186:	mov    QWORD PTR [r13+0x70],rdx
  40818a:	mov    BYTE PTR [rax],0x0
  40818d:	add    edi,0x2
  408190:	mov    r8,QWORD PTR [r13+0x68]
  408194:	mov    rax,QWORD PTR [r13+0x70]
  408198:	cmp    rax,r8
  40819b:	je     0x40893e
  4081a1:	movsxd rdx,DWORD PTR [r13+0x88]
  4081a8:	mov    ecx,edx
  4081aa:	add    rax,rdx
  4081ad:	mov    rdx,QWORD PTR [r13+0x78]
  4081b1:	not    ecx
  4081b3:	movsxd rcx,ecx
  4081b6:	and    rax,rcx
  4081b9:	mov    rcx,QWORD PTR [r13+0x60]
  4081bd:	mov    rsi,rdx
  4081c0:	mov    r10,rax
  4081c3:	mov    QWORD PTR [r13+0x70],rax
  4081c7:	sub    r10,rcx
  4081ca:	sub    rsi,rcx
  4081cd:	cmp    r10,rsi
  4081d0:	jle    0x4081d9
  4081d2:	mov    QWORD PTR [r13+0x70],rdx
  4081d6:	mov    rax,rdx
  4081d9:	mov    QWORD PTR [r13+0x68],rax
  4081dd:	mov    r12d,DWORD PTR [rsp+0x58]
  4081e2:	mov    rsi,r15
  4081e5:	mov    QWORD PTR [r14],r8
  4081e8:	jmp    0x407d14
  4081ed:	nop    DWORD PTR [rax]
  4081f0:	mov    rax,QWORD PTR [rip+0x52dc9]        # 0x45afc0
  4081f7:	mov    r15,QWORD PTR [rax]
  4081fa:	mov    rcx,r15
  4081fd:	call   0x4493c0
  408202:	mov    rcx,QWORD PTR [r13+0x70]
  408206:	movsxd r14,eax
  408209:	lea    rdx,[rcx+r14*1]
  40820d:	cmp    QWORD PTR [r13+0x78],rdx
  408211:	jb     0x4083f9
  408217:	mov    r8,r14
  40821a:	mov    rdx,r15
  40821d:	call   0x449450
  408222:	add    QWORD PTR [r13+0x70],r14
  408226:	movzx  ecx,BYTE PTR [rbp+0x3b]
  40822a:	lea    rdx,[rip+0x45855]        # 0x44da86
  408231:	mov    r8d,0x5
  408237:	call   0x4071c0
  40823c:	jmp    0x4080c1
  408241:	mov    rcx,rbx
  408244:	mov    edx,eax
  408246:	call   0x439960
  40824b:	mov    rcx,QWORD PTR [r13+0x70]
  40824f:	jmp    0x4080e1
  408254:	mov    QWORD PTR [r13+0x70],rcx
  408258:	mov    rax,rcx
  40825b:	jmp    0x407e0e
  408260:	cmp    esi,0x1
  408263:	jg     0x408ce9
  408269:	add    esi,0x1
  40826c:	jmp    0x40807f
  408271:	test   dil,dil
  408274:	jne    0x408d01
  40827a:	mov    edi,0x1
  40827f:	jmp    0x40807f
  408284:	test   esi,esi
  408286:	je     0x408291
  408288:	test   r14b,r14b
  40828b:	jne    0x408cd1
  408291:	test   dil,dil
  408294:	jne    0x4085a1
  40829a:	sub    eax,0x2e
  40829d:	cmp    al,0x4a
  40829f:	ja     0x4088e2
  4082a5:	lea    rcx,[rip+0x45820]        # 0x44dacc
  4082ac:	movzx  eax,al
  4082af:	movsxd rax,DWORD PTR [rcx+rax*4]
  4082b3:	add    rax,rcx
  4082b6:	jmp    rax
  4082b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4082c0:	test   r11b,r11b
  4082c3:	jne    0x408c29
  4082c9:	mov    r11d,0x1
  4082cf:	jmp    0x40807f
  4082d4:	mov    edx,eax
  4082d6:	mov    rcx,rbx
  4082d9:	call   0x439960
  4082de:	mov    rax,QWORD PTR [rip+0x52b9b]        # 0x45ae80
  4082e5:	mov    r14,QWORD PTR [r13+0x70]
  4082e9:	mov    rdx,QWORD PTR [rax]
  4082ec:	jmp    0x407f51
  4082f1:	mov    edx,0x1e8
  4082f6:	mov    rcx,rbx
  4082f9:	call   0x439960
  4082fe:	mov    rax,QWORD PTR [r13+0x70]
  408302:	mov    r8,QWORD PTR [r13+0x78]
  408306:	jmp    0x407c71
  40830b:	mov    rdx,QWORD PTR [r15+0x8]
  40830f:	mov    rax,QWORD PTR [rdx]
  408312:	lea    rcx,[rax+0x8]
  408316:	mov    QWORD PTR [rdx],rcx
  408319:	mov    rdx,QWORD PTR [rax]
  40831c:	mov    rcx,rbp
  40831f:	call   0x407ae0
  408324:	mov    eax,r12d
  408327:	mov    rbx,QWORD PTR [rsp+rax*8+0x80]
  40832f:	test   dil,dil
  408332:	jne    0x408751
  408338:	mov    rax,QWORD PTR [r13+0x70]
  40833c:	lea    rdx,[rax+0x1]
  408340:	cmp    rdx,QWORD PTR [r13+0x78]
  408344:	ja     0x408789
  40834a:	mov    QWORD PTR [r13+0x70],rdx
  40834e:	mov    BYTE PTR [rax],0x0
  408351:	mov    r8,QWORD PTR [r13+0x68]
  408355:	mov    rax,QWORD PTR [r13+0x70]
  408359:	cmp    rax,r8
  40835c:	je     0x40894b
  408362:	movsxd rdx,DWORD PTR [r13+0x88]
  408369:	mov    ecx,edx
  40836b:	add    rax,rdx
  40836e:	mov    rdx,QWORD PTR [r13+0x78]
  408372:	not    ecx
  408374:	movsxd rcx,ecx
  408377:	and    rax,rcx
  40837a:	mov    rcx,QWORD PTR [r13+0x60]
  40837e:	mov    rdi,rdx
  408381:	mov    r9,rax
  408384:	mov    QWORD PTR [r13+0x70],rax
  408388:	sub    r9,rcx
  40838b:	sub    rdi,rcx
  40838e:	cmp    r9,rdi
  408391:	jle    0x40839a
  408393:	mov    QWORD PTR [r13+0x70],rdx
  408397:	mov    rax,rdx
  40839a:	mov    QWORD PTR [r13+0x68],rax
  40839e:	lea    eax,[r12+0x1]
  4083a3:	mov    QWORD PTR [rbx],r8
  4083a6:	mov    r10,QWORD PTR [rsp+rax*8+0x80]
  4083ae:	mov    r12,rax
  4083b1:	test   r10,r10
  4083b4:	jne    0x408049
  4083ba:	mov    eax,DWORD PTR [rsp+0x40]
  4083be:	mov    QWORD PTR [r13+0xb0],r13
  4083c5:	mov    DWORD PTR [r13+0xc8],0x0
  4083d0:	mov    BYTE PTR [rbp+0x38],0x0
  4083d4:	mov    DWORD PTR [rbp+0x20],0x0
  4083db:	mov    DWORD PTR [rbp+0x24],eax
  4083de:	mov    eax,DWORD PTR [rsp+0x48]
  4083e2:	mov    DWORD PTR [rbp+0x28],eax
  4083e5:	add    rsp,0x178
  4083ec:	pop    rbx
  4083ed:	pop    rsi
  4083ee:	pop    rdi
  4083ef:	pop    rbp
  4083f0:	pop    r12
  4083f2:	pop    r13
  4083f4:	pop    r14
  4083f6:	pop    r15
  4083f8:	ret    
  4083f9:	mov    edx,eax
  4083fb:	mov    rcx,rbx
  4083fe:	call   0x439960
  408403:	mov    rax,QWORD PTR [rip+0x52bb6]        # 0x45afc0
  40840a:	mov    rcx,QWORD PTR [r13+0x70]
  40840e:	mov    r15,QWORD PTR [rax]
  408411:	jmp    0x408217
  408416:	mov    edx,0x1
  40841b:	mov    rcx,rbx
  40841e:	call   0x439960
  408423:	mov    rax,QWORD PTR [r13+0x70]
  408427:	lea    rdx,[rax+0x1]
  40842b:	jmp    0x407da6
  408430:	mov    rcx,rbx
  408433:	mov    edx,eax
  408435:	call   0x439960
  40843a:	mov    rcx,QWORD PTR [r13+0x70]
  40843e:	jmp    0x407f11
  408443:	mov    edx,0x1
  408448:	mov    rcx,rbx
  40844b:	call   0x439960
  408450:	mov    rax,QWORD PTR [r13+0x70]
  408454:	lea    rdx,[rax+0x1]
  408458:	jmp    0x408122
  40845d:	mov    rdx,QWORD PTR [rsp+0x60]
  408462:	mov    r8d,0xa
  408468:	mov    rcx,r15
  40846b:	call   0x449378
  408470:	mov    r9,QWORD PTR [rsp+0x78]
  408475:	sub    eax,0x1
  408478:	cmp    BYTE PTR [r9],0x24
  40847c:	jne    0x408d19
  408482:	cmp    BYTE PTR [rsp+0x56],0x0
  408487:	lea    r15,[r9+0x1]
  40848b:	jne    0x408d31
  408491:	mov    DWORD PTR [rsp+0x58],r12d
  408496:	mov    BYTE PTR [rsp+0x57],0x1
  40849b:	mov    r12d,eax
  40849e:	jmp    0x407e47
  4084a3:	mov    edx,0x1
  4084a8:	mov    rcx,rbx
  4084ab:	call   0x439960
  4084b0:	mov    rax,QWORD PTR [r13+0x70]
  4084b4:	lea    rdx,[rax+0x1]
  4084b8:	jmp    0x408186
  4084bd:	movzx  edx,BYTE PTR [r15]
  4084c1:	mov    rcx,QWORD PTR [rip+0x52968]        # 0x45ae30
  4084c8:	test   BYTE PTR [rcx+rdx*2],0x4
  4084cc:	jne    0x408591
  4084d2:	cmp    dl,0x2a
  4084d5:	jne    0x408c59
  4084db:	mov    rax,QWORD PTR [r13+0x70]
  4084df:	lea    rdx,[rax+0x1]
  4084e3:	cmp    rdx,QWORD PTR [r13+0x78]
  4084e7:	ja     0x408b24
  4084ed:	mov    QWORD PTR [r13+0x70],rdx
  4084f1:	mov    BYTE PTR [rax],0x2a
  4084f4:	lea    rsi,[r15+0x1]
  4084f8:	movzx  edx,BYTE PTR [r15+0x1]
  4084fd:	mov    rcx,QWORD PTR [rip+0x5292c]        # 0x45ae30
  408504:	test   BYTE PTR [rcx+rdx*2],0x4
  408508:	mov    rax,rdx
  40850b:	jne    0x408ad3
  408511:	cmp    BYTE PTR [rsp+0x57],0x0
  408516:	jne    0x408d79
  40851c:	add    DWORD PTR [rsp+0x58],0x1
  408521:	lea    edx,[r12+0x1]
  408526:	mov    QWORD PTR [rsp+rdx*8+0x80],r14
  40852e:	cmp    al,0x73
  408530:	jne    0x408df1
  408536:	mov    rax,QWORD PTR [r13+0x70]
  40853a:	lea    rdx,[rax+0x1]
  40853e:	cmp    rdx,QWORD PTR [r13+0x78]
  408542:	ja     0x408ab9
  408548:	mov    QWORD PTR [r13+0x70],rdx
  40854c:	lea    r15,[rsi+0x1]
  408550:	mov    BYTE PTR [rax],0x73
  408553:	jmp    0x40816a
  408558:	mov    edx,0x1
  40855d:	mov    rcx,rbx
  408560:	call   0x439960
  408565:	mov    rax,QWORD PTR [r13+0x70]
  408569:	lea    rdx,[rax+0x1]
  40856d:	mov    QWORD PTR [r13+0x70],rdx
  408571:	movzx  edx,BYTE PTR [r15]
  408575:	add    r15,0x1
  408579:	mov    rcx,QWORD PTR [rip+0x528b0]        # 0x45ae30
  408580:	mov    BYTE PTR [rax],dl
  408582:	movzx  edx,BYTE PTR [r15-0x1]
  408587:	test   BYTE PTR [rcx+rdx*2],0x4
  40858b:	je     0x408958
  408591:	mov    rax,QWORD PTR [r13+0x70]
  408595:	lea    rdx,[rax+0x1]
  408599:	cmp    rdx,QWORD PTR [r13+0x78]
  40859d:	jbe    0x40856d
  40859f:	jmp    0x408558
  4085a1:	mov    rax,QWORD PTR [rip+0x52a18]        # 0x45afc0
  4085a8:	mov    rcx,rbp
  4085ab:	mov    QWORD PTR [rsp+0x58],r10
  4085b0:	mov    BYTE PTR [rsp+0x57],r11b
  4085b5:	mov    BYTE PTR [rsp+0x56],r9b
  4085ba:	mov    rdx,QWORD PTR [rax]
  4085bd:	call   0x407ae0
  4085c2:	movzx  ecx,BYTE PTR [rbp+0x3b]
  4085c6:	lea    rdx,[rip+0x454b9]        # 0x44da86
  4085cd:	mov    r8d,0x5
  4085d3:	call   0x4071c0
  4085d8:	mov    rcx,rbp
  4085db:	mov    rdx,rax
  4085de:	call   0x407ae0
  4085e3:	movzx  eax,BYTE PTR [rbx]
  4085e6:	mov    r10,QWORD PTR [rsp+0x58]
  4085eb:	movzx  r11d,BYTE PTR [rsp+0x57]
  4085f1:	movzx  r9d,BYTE PTR [rsp+0x56]
  4085f7:	jmp    0x40829a
  4085fc:	mov    QWORD PTR [r13+0x70],r8
  408600:	mov    rax,r8
  408603:	jmp    0x407fe5
  408608:	mov    edx,0x1
  40860d:	mov    rcx,rbx
  408610:	call   0x439960
  408615:	mov    rax,QWORD PTR [r13+0x70]
  408619:	lea    rdx,[rax+0x1]
  40861d:	jmp    0x407f81
  408622:	test   r14b,r14b
  408625:	jne    0x408b3e
  40862b:	cmp    esi,0x1
  40862e:	je     0x408a07
  408634:	cmp    esi,0x2
  408637:	je     0x408b98
  40863d:	test   esi,esi
  40863f:	jne    0x408914
  408645:	mov    rdx,QWORD PTR [r15+0x8]
  408649:	mov    rax,QWORD PTR [rdx]
  40864c:	lea    rcx,[rax+0x8]
  408650:	mov    r8d,DWORD PTR [rax]
  408653:	mov    QWORD PTR [rdx],rcx
  408656:	mov    rbx,QWORD PTR [rbp+0x8]
  40865a:	lea    rdx,[rip+0x4545e]        # 0x44dabf
  408661:	lea    rcx,[rbx+0xcc]
  408668:	call   0x449900
  40866d:	jmp    0x40872a
  408672:	test   r14b,r14b
  408675:	jne    0x408a91
  40867b:	cmp    esi,0x1
  40867e:	je     0x4089da
  408684:	cmp    esi,0x2
  408687:	je     0x408a91
  40868d:	test   esi,esi
  40868f:	jne    0x408914
  408695:	mov    rdx,QWORD PTR [r15+0x8]
  408699:	mov    rax,QWORD PTR [rdx]
  40869c:	lea    rcx,[rax+0x8]
  4086a0:	mov    r8d,DWORD PTR [rax]
  4086a3:	mov    QWORD PTR [rdx],rcx
  4086a6:	mov    rbx,QWORD PTR [rbp+0x8]
  4086aa:	lea    rdx,[rip+0x45401]        # 0x44dab2
  4086b1:	lea    rcx,[rbx+0xcc]
  4086b8:	call   0x449900
  4086bd:	jmp    0x40872a
  4086bf:	mov    rdx,QWORD PTR [r15+0x8]
  4086c3:	mov    rax,QWORD PTR [rdx]
  4086c6:	lea    rcx,[rax+0x8]
  4086ca:	mov    QWORD PTR [rdx],rcx
  4086cd:	mov    rbx,QWORD PTR [rax]
  4086d0:	mov    rcx,rbx
  4086d3:	call   0x4493c0
  4086d8:	movzx  ecx,BYTE PTR [rbp+0x3b]
  4086dc:	mov    rdx,rbx
  4086df:	mov    r8,rax
  4086e2:	call   0x4071c0
  4086e7:	mov    rcx,rbp
  4086ea:	mov    rdx,rax
  4086ed:	call   0x407ae0
  4086f2:	mov    eax,r12d
  4086f5:	mov    rbx,QWORD PTR [rsp+rax*8+0x80]
  4086fd:	jmp    0x40832f
  408702:	mov    rdx,QWORD PTR [r15+0x8]
  408706:	mov    rax,QWORD PTR [rdx]
  408709:	lea    rcx,[rax+0x8]
  40870d:	mov    QWORD PTR [rdx],rcx
  408710:	mov    rbx,QWORD PTR [rbp+0x8]
  408714:	lea    rdx,[rip+0x4538f]        # 0x44daaa
  40871b:	mov    r8,QWORD PTR [rax]
  40871e:	lea    rcx,[rbx+0xcc]
  408725:	call   0x449900
  40872a:	mov    rax,QWORD PTR [rbp+0x8]
  40872e:	mov    rcx,rbp
  408731:	lea    rdx,[rax+0xcc]
  408738:	call   0x407ae0
  40873d:	mov    eax,r12d
  408740:	test   dil,dil
  408743:	mov    rbx,QWORD PTR [rsp+rax*8+0x80]
  40874b:	je     0x408338
  408751:	movzx  ecx,BYTE PTR [rbp+0x3b]
  408755:	call   0x407230
  40875a:	mov    rcx,rbp
  40875d:	mov    rdx,rax
  408760:	call   0x407ae0
  408765:	mov    rax,QWORD PTR [rip+0x52714]        # 0x45ae80
  40876c:	mov    rcx,rbp
  40876f:	mov    rdx,QWORD PTR [rax]
  408772:	call   0x407ae0
  408777:	mov    rax,QWORD PTR [r13+0x70]
  40877b:	lea    rdx,[rax+0x1]
  40877f:	cmp    rdx,QWORD PTR [r13+0x78]
  408783:	jbe    0x40834a
  408789:	mov    rcx,QWORD PTR [rsp+0x60]
  40878e:	mov    edx,0x1
  408793:	call   0x439960
  408798:	mov    rax,QWORD PTR [r13+0x70]
  40879c:	lea    rdx,[rax+0x1]
  4087a0:	jmp    0x40834a
  4087a5:	test   r14b,r14b
  4087a8:	jne    0x408a69
  4087ae:	cmp    esi,0x1
  4087b1:	je     0x4089ad
  4087b7:	cmp    esi,0x2
  4087ba:	je     0x408a69
  4087c0:	test   esi,esi
  4087c2:	jne    0x408914
  4087c8:	mov    rdx,QWORD PTR [r15+0x8]
  4087cc:	mov    rax,QWORD PTR [rdx]
  4087cf:	lea    rcx,[rax+0x8]
  4087d3:	mov    r8d,DWORD PTR [rax]
  4087d6:	mov    QWORD PTR [rdx],rcx
  4087d9:	mov    rbx,QWORD PTR [rbp+0x8]
  4087dd:	lea    rdx,[rip+0x452bf]        # 0x44daa3
  4087e4:	lea    rcx,[rbx+0xcc]
  4087eb:	call   0x449900
  4087f0:	jmp    0x40872a
  4087f5:	test   r14b,r14b
  4087f8:	jne    0x408a41
  4087fe:	cmp    esi,0x1
  408801:	je     0x408980
  408807:	cmp    esi,0x2
  40880a:	je     0x408a41
  408810:	test   esi,esi
  408812:	jne    0x408914
  408818:	mov    rdx,QWORD PTR [r15+0x8]
  40881c:	mov    rax,QWORD PTR [rdx]
  40881f:	lea    rcx,[rax+0x8]
  408823:	mov    r8d,DWORD PTR [rax]
  408826:	mov    QWORD PTR [rdx],rcx
  408829:	mov    rbx,QWORD PTR [rbp+0x8]
  40882d:	lea    rdx,[rip+0x45263]        # 0x44da97
  408834:	lea    rcx,[rbx+0xcc]
  40883b:	call   0x449900
  408840:	jmp    0x40872a
  408845:	mov    rdx,QWORD PTR [r15+0x8]
  408849:	mov    rax,QWORD PTR [rdx]
  40884c:	lea    rcx,[rax+0x8]
  408850:	mov    QWORD PTR [rdx],rcx
  408853:	mov    edx,DWORD PTR [rax]
  408855:	mov    rcx,rbp
  408858:	call   0x4078b0
  40885d:	mov    eax,r12d
  408860:	mov    rbx,QWORD PTR [rsp+rax*8+0x80]
  408868:	jmp    0x40832f
  40886d:	movzx  edx,BYTE PTR [rbx+0x1]
  408871:	mov    rcx,QWORD PTR [rip+0x525b8]        # 0x45ae30
  408878:	test   BYTE PTR [rcx+rdx*2],0x4
  40887c:	jne    0x408b66
  408882:	cmp    dl,0x2a
  408885:	jne    0x408cb9
  40888b:	cmp    BYTE PTR [rbx+0x2],0x73
  40888f:	jne    0x408be1
  408895:	mov    rdx,QWORD PTR [r15+0x8]
  408899:	mov    rax,QWORD PTR [rdx]
  40889c:	lea    rcx,[rax+0x8]
  4088a0:	mov    eax,DWORD PTR [rax]
  4088a2:	mov    QWORD PTR [rdx],rcx
  4088a5:	lea    edx,[r12+0x1]
  4088aa:	mov    rbx,QWORD PTR [rsp+rdx*8+0x80]
  4088b2:	mov    r12,rdx
  4088b5:	cmp    r10,rbx
  4088b8:	jne    0x408bc9
  4088be:	mov    rcx,QWORD PTR [r15+0x8]
  4088c2:	mov    rdx,QWORD PTR [rcx]
  4088c5:	lea    r8,[rdx+0x8]
  4088c9:	mov    QWORD PTR [rcx],r8
  4088cc:	mov    rdx,QWORD PTR [rdx]
  4088cf:	movsxd r8,eax
  4088d2:	mov    rcx,rbp
  4088d5:	add    r8,rdx
  4088d8:	call   0x407a30
  4088dd:	jmp    0x40832f
  4088e2:	mov    rax,QWORD PTR [rbp+0x30]
  4088e6:	test   rax,rax
  4088e9:	je     0x408da9
  4088ef:	mov    DWORD PTR [rsp+0x28],r9d
  4088f4:	mov    DWORD PTR [rsp+0x30],r11d
  4088f9:	mov    r9d,esi
  4088fc:	mov    DWORD PTR [rsp+0x20],r14d
  408901:	mov    r8,rbx
  408904:	mov    rdx,r15
  408907:	mov    rcx,rbp
  40890a:	call   rax
  40890c:	test   al,al
  40890e:	je     0x408d91
  408914:	mov    eax,r12d
  408917:	mov    rbx,QWORD PTR [rsp+rax*8+0x80]
  40891f:	jmp    0x40832f
  408924:	or     BYTE PTR [r13+0xa8],0x2
  40892c:	jmp    0x407c88
  408931:	or     BYTE PTR [r13+0xa8],0x2
  408939:	jmp    0x407dd9
  40893e:	or     BYTE PTR [r13+0xa8],0x2
  408946:	jmp    0x4081a1
  40894b:	or     BYTE PTR [r13+0xa8],0x2
  408953:	jmp    0x408362
  408958:	cmp    dl,0x73
  40895b:	je     0x40816a
  408961:	lea    r8,[rip+0x452e1]        # 0x44dc49
  408968:	lea    rcx,[rip+0x450c1]        # 0x44da30
  40896f:	mov    edx,0x1a1
  408974:	call   0x406190
  408979:	nop    DWORD PTR [rax+0x0]
  408980:	mov    rdx,QWORD PTR [r15+0x8]
  408984:	mov    rax,QWORD PTR [rdx]
  408987:	lea    rcx,[rax+0x8]
  40898b:	mov    r8d,DWORD PTR [rax]
  40898e:	mov    QWORD PTR [rdx],rcx
  408991:	mov    rbx,QWORD PTR [rbp+0x8]
  408995:	lea    rdx,[rip+0x450fe]        # 0x44da9a
  40899c:	lea    rcx,[rbx+0xcc]
  4089a3:	call   0x449900
  4089a8:	jmp    0x40872a
  4089ad:	mov    rdx,QWORD PTR [r15+0x8]
  4089b1:	mov    rax,QWORD PTR [rdx]
  4089b4:	lea    rcx,[rax+0x8]
  4089b8:	mov    r8d,DWORD PTR [rax]
  4089bb:	mov    QWORD PTR [rdx],rcx
  4089be:	mov    rbx,QWORD PTR [rbp+0x8]
  4089c2:	lea    rdx,[rip+0x450dd]        # 0x44daa6
  4089c9:	lea    rcx,[rbx+0xcc]
  4089d0:	call   0x449900
  4089d5:	jmp    0x40872a
  4089da:	mov    rdx,QWORD PTR [r15+0x8]
  4089de:	mov    rax,QWORD PTR [rdx]
  4089e1:	lea    rcx,[rax+0x8]
  4089e5:	mov    r8d,DWORD PTR [rax]
  4089e8:	mov    QWORD PTR [rdx],rcx
  4089eb:	mov    rbx,QWORD PTR [rbp+0x8]
  4089ef:	lea    rdx,[rip+0x450bf]        # 0x44dab5
  4089f6:	lea    rcx,[rbx+0xcc]
  4089fd:	call   0x449900
  408a02:	jmp    0x40872a
  408a07:	mov    rdx,QWORD PTR [r15+0x8]
  408a0b:	mov    rax,QWORD PTR [rdx]
  408a0e:	lea    rcx,[rax+0x8]
  408a12:	mov    r8d,DWORD PTR [rax]
  408a15:	mov    QWORD PTR [rdx],rcx
  408a18:	mov    rbx,QWORD PTR [rbp+0x8]
  408a1c:	lea    rdx,[rip+0x4509f]        # 0x44dac2
  408a23:	lea    rcx,[rbx+0xcc]
  408a2a:	call   0x449900
  408a2f:	jmp    0x40872a
  408a34:	or     BYTE PTR [r13+0xa8],0x2
  408a3c:	jmp    0x407fae
  408a41:	mov    rdx,QWORD PTR [r15+0x8]
  408a45:	mov    rax,QWORD PTR [rdx]
  408a48:	lea    rcx,[rax+0x8]
  408a4c:	mov    r8,QWORD PTR [rax]
  408a4f:	mov    QWORD PTR [rdx],rcx
  408a52:	mov    rbx,QWORD PTR [rbp+0x8]
  408a56:	lea    rdx,[rip+0x45035]        # 0x44da92
  408a5d:	lea    rcx,[rbx+0xcc]
  408a64:	jmp    0x408725
  408a69:	mov    rdx,QWORD PTR [r15+0x8]
  408a6d:	mov    rax,QWORD PTR [rdx]
  408a70:	lea    rcx,[rax+0x8]
  408a74:	mov    r8,QWORD PTR [rax]
  408a77:	mov    QWORD PTR [rdx],rcx
  408a7a:	mov    rbx,QWORD PTR [rbp+0x8]
  408a7e:	lea    rdx,[rip+0x45019]        # 0x44da9e
  408a85:	lea    rcx,[rbx+0xcc]
  408a8c:	jmp    0x408725
  408a91:	mov    rdx,QWORD PTR [r15+0x8]
  408a95:	mov    rax,QWORD PTR [rdx]
  408a98:	lea    rcx,[rax+0x8]
  408a9c:	mov    r8,QWORD PTR [rax]
  408a9f:	mov    QWORD PTR [rdx],rcx
  408aa2:	mov    rbx,QWORD PTR [rbp+0x8]
  408aa6:	lea    rdx,[rip+0x45000]        # 0x44daad
  408aad:	lea    rcx,[rbx+0xcc]
  408ab4:	jmp    0x408725
  408ab9:	mov    edx,0x1
  408abe:	mov    rcx,rbx
  408ac1:	call   0x439960
  408ac6:	mov    rax,QWORD PTR [r13+0x70]
  408aca:	lea    rdx,[rax+0x1]
  408ace:	jmp    0x408548
  408ad3:	mov    rdx,QWORD PTR [rsp+0x60]
  408ad8:	mov    r8d,0xa
  408ade:	mov    rcx,rsi
  408ae1:	sub    r12d,0x1
  408ae5:	call   0x449378
  408aea:	sub    eax,0x1
  408aed:	mov    rdx,QWORD PTR [rsp+0x78]
  408af2:	cmp    r12d,eax
  408af5:	jne    0x408ca1
  408afb:	cmp    BYTE PTR [rsp+0x56],0x0
  408b00:	jne    0x408c89
  408b06:	cmp    BYTE PTR [rdx],0x24
  408b09:	jne    0x408c71
  408b0f:	lea    rsi,[rdx+0x1]
  408b13:	mov    QWORD PTR [rsp+r12*8+0x80],r14
  408b1b:	movzx  eax,BYTE PTR [rdx+0x1]
  408b1f:	jmp    0x40852e
  408b24:	mov    edx,0x1
  408b29:	mov    rcx,rbx
  408b2c:	call   0x439960
  408b31:	mov    rax,QWORD PTR [r13+0x70]
  408b35:	lea    rdx,[rax+0x1]
  408b39:	jmp    0x4084ed
  408b3e:	mov    rdx,QWORD PTR [r15+0x8]
  408b42:	mov    rax,QWORD PTR [rdx]
  408b45:	lea    rcx,[rax+0x8]
  408b49:	mov    r8,QWORD PTR [rax]
  408b4c:	mov    QWORD PTR [rdx],rcx
  408b4f:	mov    rbx,QWORD PTR [rbp+0x8]
  408b53:	lea    rdx,[rip+0x44f5f]        # 0x44dab9
  408b5a:	lea    rcx,[rbx+0xcc]
  408b61:	jmp    0x408725
  408b66:	mov    rdx,QWORD PTR [rsp+0x68]
  408b6b:	lea    rcx,[rbx+0x1]
  408b6f:	mov    r8d,0xa
  408b75:	call   0x449378
  408b7a:	mov    rdx,QWORD PTR [rsp+0x78]
  408b7f:	cmp    BYTE PTR [rdx],0x73
  408b82:	jne    0x408e09
  408b88:	mov    edx,r12d
  408b8b:	mov    rbx,QWORD PTR [rsp+rdx*8+0x80]
  408b93:	jmp    0x4088be
  408b98:	mov    rdx,QWORD PTR [r15+0x8]
  408b9c:	mov    rax,QWORD PTR [rdx]
  408b9f:	lea    rcx,[rax+0x8]
  408ba3:	mov    r8,QWORD PTR [rax]
  408ba6:	mov    QWORD PTR [rdx],rcx
  408ba9:	mov    rbx,QWORD PTR [rbp+0x8]
  408bad:	lea    rdx,[rip+0x44f12]        # 0x44dac6
  408bb4:	lea    rcx,[rbx+0xcc]
  408bbb:	jmp    0x408725
  408bc0:	mov    edi,DWORD PTR [rsp+0x40]
  408bc4:	jmp    0x407f6f
  408bc9:	lea    r8,[rip+0x45079]        # 0x44dc49
  408bd0:	lea    rcx,[rip+0x44e59]        # 0x44da30
  408bd7:	mov    edx,0x259
  408bdc:	call   0x406190
  408be1:	lea    r8,[rip+0x45061]        # 0x44dc49
  408be8:	lea    rcx,[rip+0x44e41]        # 0x44da30
  408bef:	mov    edx,0x255
  408bf4:	call   0x406190
  408bf9:	lea    r8,[rip+0x45049]        # 0x44dc49
  408c00:	lea    rcx,[rip+0x44e29]        # 0x44da30
  408c07:	mov    edx,0x18c
  408c0c:	call   0x406190
  408c11:	lea    r8,[rip+0x45031]        # 0x44dc49
  408c18:	lea    rcx,[rip+0x44e11]        # 0x44da30
  408c1f:	mov    edx,0x18b
  408c24:	call   0x406190
  408c29:	lea    r8,[rip+0x45019]        # 0x44dc49
  408c30:	lea    rcx,[rip+0x44df9]        # 0x44da30
  408c37:	mov    edx,0x1ef
  408c3c:	call   0x406190
  408c41:	lea    r8,[rip+0x45001]        # 0x44dc49
  408c48:	lea    rcx,[rip+0x44de1]        # 0x44da30
  408c4f:	mov    edx,0x1c9
  408c54:	call   0x406190
  408c59:	lea    r8,[rip+0x44fe9]        # 0x44dc49
  408c60:	lea    rcx,[rip+0x44dc9]        # 0x44da30
  408c67:	mov    edx,0x1a5
  408c6c:	call   0x406190
  408c71:	lea    r8,[rip+0x44fd1]        # 0x44dc49
  408c78:	lea    rcx,[rip+0x44db1]        # 0x44da30
  408c7f:	mov    edx,0x1b0
  408c84:	call   0x406190
  408c89:	lea    r8,[rip+0x44fb9]        # 0x44dc49
  408c90:	lea    rcx,[rip+0x44d99]        # 0x44da30
  408c97:	mov    edx,0x1af
  408c9c:	call   0x406190
  408ca1:	lea    r8,[rip+0x44fa1]        # 0x44dc49
  408ca8:	lea    rcx,[rip+0x44d81]        # 0x44da30
  408caf:	mov    edx,0x1ae
  408cb4:	call   0x406190
  408cb9:	lea    r8,[rip+0x44f89]        # 0x44dc49
  408cc0:	lea    rcx,[rip+0x44d69]        # 0x44da30
  408cc7:	mov    edx,0x253
  408ccc:	call   0x406190
  408cd1:	lea    r8,[rip+0x44f71]        # 0x44dc49
  408cd8:	lea    rcx,[rip+0x44d51]        # 0x44da30
  408cdf:	mov    edx,0x201
  408ce4:	call   0x406190
  408ce9:	lea    r8,[rip+0x44f59]        # 0x44dc49
  408cf0:	lea    rcx,[rip+0x44d39]        # 0x44da30
  408cf7:	mov    edx,0x1fa
  408cfc:	call   0x406190
  408d01:	lea    r8,[rip+0x44f41]        # 0x44dc49
  408d08:	lea    rcx,[rip+0x44d21]        # 0x44da30
  408d0f:	mov    edx,0x1e5
  408d14:	call   0x406190
  408d19:	lea    r8,[rip+0x44f29]        # 0x44dc49
  408d20:	lea    rcx,[rip+0x44d09]        # 0x44da30
  408d27:	mov    edx,0x17f
  408d2c:	call   0x406190
  408d31:	lea    r8,[rip+0x44f11]        # 0x44dc49
  408d38:	lea    rcx,[rip+0x44cf1]        # 0x44da30
  408d3f:	mov    edx,0x183
  408d44:	call   0x406190
  408d49:	lea    r8,[rip+0x44ef9]        # 0x44dc49
  408d50:	lea    rcx,[rip+0x44cd9]        # 0x44da30
  408d57:	mov    edx,0x1ea
  408d5c:	call   0x406190
  408d61:	lea    r8,[rip+0x44ee1]        # 0x44dc49
  408d68:	lea    rcx,[rip+0x44cc1]        # 0x44da30
  408d6f:	mov    edx,0x1f4
  408d74:	call   0x406190
  408d79:	lea    r8,[rip+0x44ec9]        # 0x44dc49
  408d80:	lea    rcx,[rip+0x44ca9]        # 0x44da30
  408d87:	mov    edx,0x1b7
  408d8c:	call   0x406190
  408d91:	lea    r8,[rip+0x44eb1]        # 0x44dc49
  408d98:	lea    rcx,[rip+0x44c91]        # 0x44da30
  408d9f:	mov    edx,0x269
  408da4:	call   0x406190
  408da9:	lea    r8,[rip+0x44e99]        # 0x44dc49
  408db0:	lea    rcx,[rip+0x44c79]        # 0x44da30
  408db7:	mov    edx,0x266
  408dbc:	call   0x406190
  408dc1:	lea    r8,[rip+0x44e81]        # 0x44dc49
  408dc8:	lea    rcx,[rip+0x44c61]        # 0x44da30
  408dcf:	mov    edx,0x175
  408dd4:	call   0x406190
  408dd9:	lea    r8,[rip+0x44e69]        # 0x44dc49
  408de0:	lea    rcx,[rip+0x44c49]        # 0x44da30
  408de7:	mov    edx,0x189
  408dec:	call   0x406190
  408df1:	lea    r8,[rip+0x44e51]        # 0x44dc49
  408df8:	lea    rcx,[rip+0x44c31]        # 0x44da30
  408dff:	mov    edx,0x1bb
  408e04:	call   0x406190
  408e09:	lea    r8,[rip+0x44e39]        # 0x44dc49
  408e10:	lea    rcx,[rip+0x44c19]        # 0x44da30
  408e17:	mov    edx,0x24f
  408e1c:	call   0x406190
  408e21:	nop
  408e22:	nop    DWORD PTR [rax+0x0]
  408e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e30:	push   r12
  408e32:	push   rbp
  408e33:	push   rdi
  408e34:	push   rsi
  408e35:	push   rbx
  408e36:	sub    rsp,0x20
  408e3a:	mov    rbp,QWORD PTR [rcx+0x8]
  408e3e:	mov    rsi,rcx
  408e41:	cmp    QWORD PTR [rbp+0xb0],rbp
  408e48:	mov    r12,QWORD PTR [rbp+0xb8]
  408e4f:	lea    rdi,[r12+0x8]
  408e54:	jne    0x408edf
  408e5a:	mov    eax,DWORD PTR [rbp+0xc8]
  408e60:	test   eax,eax
  408e62:	jne    0x408ec7
  408e64:	mov    rdx,QWORD PTR [r12+0x8]
  408e69:	xor    ebx,ebx
  408e6b:	test   rdx,rdx
  408e6e:	je     0x408e87
  408e70:	mov    rcx,rsi
  408e73:	call   0x407ae0
  408e78:	lea    eax,[rbx+0x1]
  408e7b:	mov    rdx,QWORD PTR [rdi+rax*8]
  408e7f:	mov    rbx,rax
  408e82:	test   rdx,rdx
  408e85:	jne    0x408e70
  408e87:	cmp    r12,QWORD PTR [rbp+0x60]
  408e8b:	mov    rax,QWORD PTR [r12]
  408e8f:	mov    QWORD PTR [rbp+0xb8],rax
  408e96:	jbe    0x408e9e
  408e98:	cmp    r12,QWORD PTR [rbp+0x78]
  408e9c:	jb     0x408eb4
  408e9e:	lea    rcx,[rbp+0x58]
  408ea2:	mov    rdx,r12
  408ea5:	add    rsp,0x20
  408ea9:	pop    rbx
  408eaa:	pop    rsi
  408eab:	pop    rdi
  408eac:	pop    rbp
  408ead:	pop    r12
  408eaf:	jmp    0x439b90
  408eb4:	mov    QWORD PTR [rbp+0x68],r12
  408eb8:	mov    QWORD PTR [rbp+0x70],r12
  408ebc:	add    rsp,0x20
  408ec0:	pop    rbx
  408ec1:	pop    rsi
  408ec2:	pop    rdi
  408ec3:	pop    rbp
  408ec4:	pop    r12
  408ec6:	ret    
  408ec7:	lea    r8,[rip+0x44d62]        # 0x44dc30
  408ece:	lea    rcx,[rip+0x44b5b]        # 0x44da30
  408ed5:	mov    edx,0x28d
  408eda:	call   0x406190
  408edf:	lea    r8,[rip+0x44d4a]        # 0x44dc30
  408ee6:	lea    rcx,[rip+0x44b43]        # 0x44da30
  408eed:	mov    edx,0x28c
  408ef2:	call   0x406190
  408ef7:	nop
  408ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  408f00:	push   rdi
  408f01:	push   rsi
  408f02:	push   rbx
  408f03:	sub    rsp,0x20
  408f07:	mov    edi,DWORD PTR [rcx+0x24]
  408f0a:	mov    esi,DWORD PTR [rcx+0x28]
  408f0d:	mov    rbx,rcx
  408f10:	mov    DWORD PTR [rcx+0x28],0x0
  408f17:	mov    DWORD PTR [rcx+0x24],0x1
  408f1e:	call   0x407c30
  408f23:	mov    rcx,rbx
  408f26:	call   0x408e30
  408f2b:	mov    DWORD PTR [rbx+0x24],edi
  408f2e:	mov    DWORD PTR [rbx+0x28],esi
  408f31:	add    rsp,0x20
  408f35:	pop    rbx
  408f36:	pop    rsi
  408f37:	pop    rdi
  408f38:	ret    
  408f39:	nop    DWORD PTR [rax+0x0]
  408f40:	push   rsi
  408f41:	push   rbx
  408f42:	sub    rsp,0x68
  408f46:	lea    rax,[rsp+0x90]
  408f4e:	mov    rsi,rdx
  408f51:	mov    rbx,rcx
  408f54:	mov    QWORD PTR [rsp+0x90],r8
  408f5c:	mov    QWORD PTR [rsp+0x98],r9
  408f64:	mov    QWORD PTR [rsp+0x28],rax
  408f69:	call   QWORD PTR [rip+0x5b815]        # 0x464784
  408f6f:	mov    eax,DWORD PTR [rax]
  408f71:	lea    rdx,[rsp+0x30]
  408f76:	mov    rcx,rbx
  408f79:	mov    QWORD PTR [rsp+0x30],rsi
  408f7e:	mov    QWORD PTR [rsp+0x48],0x0
  408f87:	mov    DWORD PTR [rsp+0x40],eax
  408f8b:	lea    rax,[rsp+0x28]
  408f90:	mov    QWORD PTR [rsp+0x38],rax
  408f95:	call   0x408f00
  408f9a:	nop
  408f9b:	add    rsp,0x68
  408f9f:	pop    rbx
  408fa0:	pop    rsi
  408fa1:	ret    
  408fa2:	nop    DWORD PTR [rax+0x0]
  408fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fb0:	push   rsi
  408fb1:	push   rbx
  408fb2:	sub    rsp,0x68
  408fb6:	lea    rax,[rsp+0x90]
  408fbe:	mov    rbx,rcx
  408fc1:	mov    QWORD PTR [rsp+0x90],r8
  408fc9:	mov    QWORD PTR [rsp+0x98],r9
  408fd1:	mov    rsi,rdx
  408fd4:	mov    QWORD PTR [rsp+0x28],rax
  408fd9:	call   QWORD PTR [rip+0x5b7a5]        # 0x464784
  408fdf:	mov    eax,DWORD PTR [rax]
  408fe1:	lea    rdx,[rsp+0x30]
  408fe6:	mov    rcx,rbx
  408fe9:	mov    QWORD PTR [rsp+0x30],rsi
  408fee:	mov    QWORD PTR [rsp+0x48],0x0
  408ff7:	mov    DWORD PTR [rsp+0x40],eax
  408ffb:	lea    rax,[rsp+0x28]
  409000:	mov    QWORD PTR [rsp+0x38],rax
  409005:	call   0x407c30
  40900a:	mov    rcx,rbx
  40900d:	call   0x408e30
  409012:	nop
  409013:	add    rsp,0x68
  409017:	pop    rbx
  409018:	pop    rsi
  409019:	ret    
  40901a:	nop    WORD PTR [rax+rax*1+0x0]
  409020:	push   rbx
  409021:	sub    rsp,0x20
  409025:	mov    eax,DWORD PTR [rcx+0x18]
  409028:	test   eax,eax
  40902a:	je     0x409040
  40902c:	mov    rbx,rcx
  40902f:	mov    edx,0x20
  409034:	call   0x4078b0
  409039:	mov    DWORD PTR [rbx+0x18],0x0
  409040:	add    rsp,0x20
  409044:	pop    rbx
  409045:	ret    
  409046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409050:	push   rbx
  409051:	sub    rsp,0x20
  409055:	mov    rbx,rcx
  409058:	call   0x407850
  40905d:	mov    rcx,rbx
  409060:	call   0x4076f0
  409065:	mov    BYTE PTR [rbx+0x39],0x0
  409069:	add    rsp,0x20
  40906d:	pop    rbx
  40906e:	ret    
  40906f:	nop
  409070:	push   rdi
  409071:	push   rsi
  409072:	push   rbx
  409073:	sub    rsp,0x20
  409077:	add    DWORD PTR [rcx+0x20],edx
  40907a:	xor    ebx,ebx
  40907c:	mov    rsi,rcx
  40907f:	call   0x407850
  409084:	mov    edi,DWORD PTR [rsi+0x20]
  409087:	test   edi,edi
  409089:	jle    0x4090a4
  40908b:	nop    DWORD PTR [rax+rax*1+0x0]
  409090:	mov    edx,0x20
  409095:	mov    rcx,rsi
  409098:	add    ebx,0x1
  40909b:	call   0x4078b0
  4090a0:	cmp    ebx,edi
  4090a2:	jne    0x409090
  4090a4:	mov    BYTE PTR [rsi+0x39],0x0
  4090a8:	add    rsp,0x20
  4090ac:	pop    rbx
  4090ad:	pop    rsi
  4090ae:	pop    rdi
  4090af:	ret    
  4090b0:	push   rbx
  4090b1:	sub    rsp,0x20
  4090b5:	mov    rbx,rcx
  4090b8:	movsx  edx,dl
  4090bb:	call   0x4078b0
  4090c0:	mov    edx,0x20
  4090c5:	mov    rcx,rbx
  4090c8:	add    rsp,0x20
  4090cc:	pop    rbx
  4090cd:	jmp    0x4078b0
  4090d2:	nop    DWORD PTR [rax+0x0]
  4090d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090e0:	push   r15
  4090e2:	push   r14
  4090e4:	push   r13
  4090e6:	push   r12
  4090e8:	push   rbp
  4090e9:	push   rdi
  4090ea:	push   rsi
  4090eb:	push   rbx
  4090ec:	sub    rsp,0x38
  4090f0:	mov    rdi,rcx
  4090f3:	call   0x4493c0
  4090f8:	test   rax,rax
  4090fb:	mov    rsi,rax
  4090fe:	je     0x4091c2
  409104:	xor    ebx,ebx
  409106:	mov    ebp,0x1
  40910b:	lea    r12,[rsp+0x2c]
  409110:	xor    r13d,r13d
  409113:	jmp    0x409136
  409115:	mov    eax,DWORD PTR [rsp+0x2c]
  409119:	cmp    eax,0x1f
  40911c:	jbe    0x409150
  40911e:	sub    eax,0x7f
  409121:	cmp    eax,0x20
  409124:	jbe    0x409150
  409126:	cmp    rdx,0x2
  40912a:	cmovae ebp,r13d
  40912e:	add    rbx,rdx
  409131:	cmp    rsi,rbx
  409134:	jbe    0x4091b1
  409136:	mov    rdx,rsi
  409139:	lea    rcx,[rdi+rbx*1]
  40913d:	mov    r8,r12
  409140:	sub    rdx,rbx
  409143:	call   0x407260
  409148:	movsxd rdx,eax
  40914b:	test   rdx,rdx
  40914e:	jne    0x409115
  409150:	lea    rcx,[rsi*4+0x1]
  409158:	add    rsi,rdi
  40915b:	call   QWORD PTR [rip+0x41fe7]        # 0x44b148
  409161:	mov    rbp,rax
  409164:	mov    rbx,rax
  409167:	jmp    0x409180
  409169:	nop    DWORD PTR [rax+0x0]
  409170:	add    rdi,0x1
  409174:	mov    BYTE PTR [rbx],r8b
  409177:	add    rbx,0x1
  40917b:	cmp    rdi,rsi
  40917e:	je     0x4091a9
  409180:	movzx  r8d,BYTE PTR [rdi]
  409184:	lea    edx,[r8-0x20]
  409188:	cmp    dl,0x5e
  40918b:	jbe    0x409170
  40918d:	lea    rdx,[rip+0x44a64]        # 0x44dbf8
  409194:	mov    rcx,rbx
  409197:	add    rdi,0x1
  40919b:	add    rbx,0x4
  40919f:	call   0x449900
  4091a4:	cmp    rdi,rsi
  4091a7:	jne    0x409180
  4091a9:	mov    BYTE PTR [rbx],0x0
  4091ac:	mov    rax,rbp
  4091af:	jmp    0x4091c5
  4091b1:	test   bpl,bpl
  4091b4:	jne    0x4091c2
  4091b6:	mov    rax,QWORD PTR [rip+0x51d73]        # 0x45af30
  4091bd:	cmp    BYTE PTR [rax],0x0
  4091c0:	je     0x4091e0
  4091c2:	mov    rax,rdi
  4091c5:	add    rsp,0x38
  4091c9:	pop    rbx
  4091ca:	pop    rsi
  4091cb:	pop    rdi
  4091cc:	pop    rbp
  4091cd:	pop    r12
  4091cf:	pop    r13
  4091d1:	pop    r14
  4091d3:	pop    r15
  4091d5:	ret    
  4091d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091e0:	lea    rax,[rsi+rsi*4]
  4091e4:	xor    ebx,ebx
  4091e6:	lea    rcx,[rax+rax*1+0x1]
  4091eb:	call   QWORD PTR [rip+0x41f57]        # 0x44b148
  4091f1:	mov    r14,rax
  4091f4:	mov    r13,rax
  4091f7:	jmp    0x409214
  4091f9:	nop    DWORD PTR [rax+0x0]
  409200:	movzx  eax,BYTE PTR [r15]
  409204:	add    rbx,rbp
  409207:	add    r13,0x1
  40920b:	mov    BYTE PTR [r13-0x1],al
  40920f:	cmp    rsi,rbx
  409212:	jbe    0x409252
  409214:	lea    r15,[rdi+rbx*1]
  409218:	mov    rdx,rsi
  40921b:	mov    r8,r12
  40921e:	sub    rdx,rbx
  409221:	mov    rcx,r15
  409224:	call   0x407260
  409229:	movsxd rbp,eax
  40922c:	cmp    rbp,0x1
  409230:	je     0x409200
  409232:	mov    r8d,DWORD PTR [rsp+0x2c]
  409237:	lea    rdx,[rip+0x449c0]        # 0x44dbfe
  40923e:	mov    rcx,r13
  409241:	add    rbx,rbp
  409244:	add    r13,0xa
  409248:	call   0x449900
  40924d:	cmp    rsi,rbx
  409250:	ja     0x409214
  409252:	mov    BYTE PTR [r13+0x0],0x0
  409257:	mov    rax,r14
  40925a:	jmp    0x4091c5
  40925f:	nop
  409260:	cmp    r8d,0x1
  409264:	mov    rax,rdx
  409267:	cmove  rax,rcx
  40926b:	ret    
  40926c:	nop    DWORD PTR [rax+0x0]
  409270:	push   rbx
  409271:	sub    rsp,0x20
  409275:	call   0x4493c0
  40927a:	lea    rcx,[rax+0x1]
  40927e:	mov    rbx,rax
  409281:	call   0x43baf0
  409286:	mov    r8,rbx
  409289:	mov    edx,0x20
  40928e:	mov    rcx,rax
  409291:	call   0x449440
  409296:	mov    BYTE PTR [rax+rbx*1],0x0
  40929a:	add    rsp,0x20
  40929e:	pop    rbx
  40929f:	ret    
  4092a0:	push   rsi
  4092a1:	push   rbx
  4092a2:	sub    rsp,0x28
  4092a6:	mov    rax,QWORD PTR [rcx+0x28]
  4092aa:	test   rax,rax
  4092ad:	je     0x4092d0
  4092af:	cmp    rax,QWORD PTR [rcx+0x20]
  4092b3:	je     0x4092d0
  4092b5:	sub    rax,0x1
  4092b9:	cmp    QWORD PTR [rcx+0x30],rax
  4092bd:	jae    0x4092d0
  4092bf:	xor    eax,eax
  4092c1:	add    rsp,0x28
  4092c5:	pop    rbx
  4092c6:	pop    rsi
  4092c7:	ret    
  4092c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4092d0:	mov    rbx,rcx
  4092d3:	mov    rcx,QWORD PTR [rcx+0x10]
  4092d7:	call   0x449510
  4092dc:	test   eax,eax
  4092de:	jne    0x4092bf
  4092e0:	mov    rcx,QWORD PTR [rbx+0x10]
  4092e4:	call   0x449508
  4092e9:	test   eax,eax
  4092eb:	jne    0x4092bf
  4092ed:	mov    r8,QWORD PTR [rbx+0x20]
  4092f1:	mov    rdx,QWORD PTR [rbx+0x28]
  4092f5:	cmp    r8,rdx
  4092f8:	je     0x409330
  4092fa:	mov    rax,QWORD PTR [rbx+0x18]
  4092fe:	mov    r9,QWORD PTR [rbx+0x10]
  409302:	lea    rcx,[rax+rdx*1]
  409306:	sub    r8,rdx
  409309:	mov    edx,0x1
  40930e:	call   0x4494d0
  409313:	mov    rcx,QWORD PTR [rbx+0x10]
  409317:	mov    rsi,rax
  40931a:	call   0x449508
  40931f:	test   eax,eax
  409321:	jne    0x4092bf
  409323:	add    QWORD PTR [rbx+0x28],rsi
  409327:	test   rsi,rsi
  40932a:	setne  al
  40932d:	jmp    0x4092c1
  40932f:	nop
  409330:	test   r8,r8
  409333:	jne    0x409360
  409335:	mov    edx,0x1001
  40933a:	mov    esi,0x1000
  40933f:	mov    rcx,QWORD PTR [rbx+0x18]
  409343:	call   0x43bb70
  409348:	mov    QWORD PTR [rbx+0x20],rsi
  40934c:	mov    QWORD PTR [rbx+0x18],rax
  409350:	mov    r8,rsi
  409353:	mov    rdx,QWORD PTR [rbx+0x28]
  409357:	jmp    0x4092fe
  409359:	nop    DWORD PTR [rax+0x0]
  409360:	lea    rsi,[r8+r8*1]
  409364:	lea    rdx,[rsi+0x1]
  409368:	jmp    0x40933f
  40936a:	nop    WORD PTR [rax+rax*1+0x0]
  409370:	push   rbp
  409371:	push   rdi
  409372:	push   rsi
  409373:	push   rbx
  409374:	sub    rsp,0x48
  409378:	xor    edi,edi
  40937a:	mov    eax,edx
  40937c:	mov    rsi,rcx
  40937f:	mov    ebx,edx
  409381:	and    eax,0x7fffffff
  409386:	mov    ebp,r8d
  409389:	cmp    eax,edx
  40938b:	je     0x4093ac
  40938d:	mov    rcx,QWORD PTR [rip+0x5917c]        # 0x462510
  409394:	call   0x40a810
  409399:	mov    rcx,QWORD PTR [rip+0x59170]        # 0x462510
  4093a0:	mov    edx,ebx
  4093a2:	mov    rdi,rax
  4093a5:	call   0x40a830
  4093aa:	mov    ebx,eax
  4093ac:	cmp    ebx,0x1
  4093af:	mov    QWORD PTR [rsi],0x0
  4093b6:	mov    QWORD PTR [rsi+0x8],0x0
  4093be:	mov    QWORD PTR [rsi+0x10],0x0
  4093c6:	mov    QWORD PTR [rsi+0x18],0x0
  4093ce:	jbe    0x409420
  4093d0:	xor    r8d,r8d
  4093d3:	test   bpl,bpl
  4093d6:	lea    r9,[rsp+0x38]
  4093db:	je     0x409445
  4093dd:	mov    rcx,QWORD PTR [rip+0x5912c]        # 0x462510
  4093e4:	mov    edx,ebx
  4093e6:	call   0x40b2c0
  4093eb:	mov    r8,QWORD PTR [rsp+0x38]
  4093f0:	mov    rdx,QWORD PTR [rip+0x59119]        # 0x462510
  4093f7:	mov    ebx,eax
  4093f9:	mov    r9d,eax
  4093fc:	mov    rcx,rsi
  4093ff:	call   0x40b710
  409404:	cmp    ebx,0x1
  409407:	mov    QWORD PTR [rsi+0x10],rdi
  40940b:	jbe    0x409424
  40940d:	mov    rax,rsi
  409410:	add    rsp,0x48
  409414:	pop    rbx
  409415:	pop    rsi
  409416:	pop    rdi
  409417:	pop    rbp
  409418:	ret    
  409419:	nop    DWORD PTR [rax+0x0]
  409420:	mov    QWORD PTR [rsi+0x10],rdi
  409424:	lea    rax,[rip+0x44845]        # 0x44dc70
  40942b:	test   ebx,ebx
  40942d:	mov    edx,0x0
  409432:	cmove  rax,rdx
  409436:	mov    QWORD PTR [rsi],rax
  409439:	mov    rax,rsi
  40943c:	add    rsp,0x48
  409440:	pop    rbx
  409441:	pop    rsi
  409442:	pop    rdi
  409443:	pop    rbp
  409444:	ret    
  409445:	mov    rcx,QWORD PTR [rip+0x590c4]        # 0x462510
  40944c:	mov    r8,r9
  40944f:	mov    edx,ebx
  409451:	mov    QWORD PTR [rsp+0x28],r9
  409456:	call   0x40b620
  40945b:	mov    r8d,0x1
  409461:	mov    ebx,eax
  409463:	mov    r9,QWORD PTR [rsp+0x28]
  409468:	jmp    0x4093dd
  40946d:	nop    DWORD PTR [rax]
  409470:	sub    rsp,0x28
  409474:	mov    ecx,0x508
  409479:	call   0x43bec0
  40947e:	lea    rcx,[rax+0x8]
  409482:	mov    QWORD PTR [rax],0x10
  409489:	add    rax,0x508
  40948f:	mov    rdx,rcx
  409492:	mov    DWORD PTR [rdx],0x0
  409498:	mov    QWORD PTR [rdx+0x8],0x0
  4094a0:	add    rdx,0x50
  4094a4:	mov    QWORD PTR [rdx-0x40],0x0
  4094ac:	mov    QWORD PTR [rdx-0x38],0x0
  4094b4:	mov    QWORD PTR [rdx-0x30],0x0
  4094bc:	mov    QWORD PTR [rdx-0x28],0x0
  4094c4:	mov    QWORD PTR [rdx-0x20],0x0
  4094cc:	mov    QWORD PTR [rdx-0x18],0x0
  4094d4:	mov    QWORD PTR [rdx-0x10],0x0
  4094dc:	mov    QWORD PTR [rdx-0x8],0x0
  4094e4:	cmp    rdx,rax
  4094e7:	jne    0x409492
  4094e9:	mov    QWORD PTR [rip+0x59040],rcx        # 0x462530
  4094f0:	add    rsp,0x28
  4094f4:	ret    
  4094f5:	nop
  4094f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409500:	push   r15
  409502:	push   r14
  409504:	push   r13
  409506:	push   r12
  409508:	push   rbp
  409509:	push   rdi
  40950a:	push   rsi
  40950b:	push   rbx
  40950c:	sub    rsp,0x48
  409510:	mov    rbx,rcx
  409513:	mov    rbp,r8
  409516:	mov    r12,rdx
  409519:	call   0x4092a0
  40951e:	mov    rsi,QWORD PTR [rbx+0x30]
  409522:	mov    r8,QWORD PTR [rbx+0x28]
  409526:	sub    r8,rsi
  409529:	je     0x409640
  40952f:	add    rsi,QWORD PTR [rbx+0x18]
  409533:	mov    edx,0xa
  409538:	mov    rcx,rsi
  40953b:	call   0x449460
  409540:	test   rax,rax
  409543:	mov    rdi,rax
  409546:	lea    r13,[rax+0x1]
  40954a:	je     0x4095d8
  409550:	mov    rcx,QWORD PTR [rbx+0x10]
  409554:	call   0x449508
  409559:	test   eax,eax
  40955b:	jne    0x409620
  409561:	mov    r15,rdi
  409564:	mov    r14,QWORD PTR [rbx+0x30]
  409568:	sub    r15,rsi
  40956b:	cmp    r14,QWORD PTR [rbx+0x28]
  40956f:	jae    0x409575
  409571:	mov    QWORD PTR [r12],rsi
  409575:	mov    rax,QWORD PTR [rbx+0x38]
  409579:	mov    rcx,QWORD PTR [rbx+0x40]
  40957d:	lea    rsi,[rax+0x1]
  409581:	cmp    rsi,rcx
  409584:	mov    QWORD PTR [rbx+0x38],rsi
  409588:	jbe    0x409644
  40958e:	test   r13,r13
  409591:	je     0x409880
  409597:	sub    r13,QWORD PTR [rbx+0x18]
  40959b:	mov    QWORD PTR [rbx+0x30],r13
  40959f:	mov    QWORD PTR [rbp+0x0],r15
  4095a3:	mov    eax,0x1
  4095a8:	jmp    0x409625
  4095aa:	nop    WORD PTR [rax+rax*1+0x0]
  4095b0:	mov    rax,QWORD PTR [rbx+0x30]
  4095b4:	mov    r8,QWORD PTR [rbx+0x28]
  4095b8:	mov    edx,0xa
  4095bd:	mov    rsi,rax
  4095c0:	add    rsi,QWORD PTR [rbx+0x18]
  4095c4:	sub    r8,rax
  4095c7:	mov    rcx,rsi
  4095ca:	call   0x449460
  4095cf:	test   rax,rax
  4095d2:	jne    0x409890
  4095d8:	mov    rcx,rbx
  4095db:	call   0x4092a0
  4095e0:	test   al,al
  4095e2:	jne    0x4095b0
  4095e4:	mov    rcx,QWORD PTR [rbx+0x10]
  4095e8:	mov    rdi,QWORD PTR [rbx+0x28]
  4095ec:	add    rdi,QWORD PTR [rbx+0x18]
  4095f0:	call   0x449508
  4095f5:	test   eax,eax
  4095f7:	jne    0x409620
  4095f9:	test   rdi,rdi
  4095fc:	je     0x4099c6
  409602:	mov    r15,rdi
  409605:	xor    r13d,r13d
  409608:	mov    r14,QWORD PTR [rbx+0x30]
  40960c:	sub    r15,rsi
  40960f:	cmp    r14,QWORD PTR [rbx+0x28]
  409613:	jae    0x409575
  409619:	jmp    0x409571
  40961e:	xchg   ax,ax
  409620:	mov    eax,0x1
  409625:	add    rsp,0x48
  409629:	pop    rbx
  40962a:	pop    rsi
  40962b:	pop    rdi
  40962c:	pop    rbp
  40962d:	pop    r12
  40962f:	pop    r13
  409631:	pop    r14
  409633:	pop    r15
  409635:	ret    
  409636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409640:	xor    eax,eax
  409642:	jmp    0x409625
  409644:	mov    r12,QWORD PTR [rbx+0x48]
  409648:	test   r12,r12
  40964b:	je     0x4098a0
  409651:	cmp    DWORD PTR [r12+0x4],0x63
  409657:	ja     0x40958e
  40965d:	cmp    rcx,0x64
  409661:	ja     0x409780
  409667:	mov    eax,DWORD PTR [r12+0x4]
  40966c:	cmp    rsi,rax
  40966f:	jbe    0x40958e
  409675:	mov    r9d,DWORD PTR [r12]
  409679:	mov    edx,DWORD PTR [r12+0x4]
  40967e:	sub    rdi,QWORD PTR [rbx+0x18]
  409682:	and    r9d,0x7fffffff
  409689:	cmp    r9d,edx
  40968c:	jne    0x409756
  409692:	cmp    BYTE PTR [r12+0x3],0x0
  409698:	jns    0x4098e0
  40969e:	lea    eax,[r9+0x1]
  4096a2:	mov    QWORD PTR [rbx+0x48],0x0
  4096aa:	mov    r10d,0x1
  4096b0:	cmp    eax,0x4
  4096b3:	mov    r8d,0x4
  4096b9:	mov    BYTE PTR [rsp+0x38],r10b
  4096be:	cmovae r8d,eax
  4096c2:	xor    ecx,ecx
  4096c4:	mov    DWORD PTR [rsp+0x30],r9d
  4096c9:	mov    eax,r8d
  4096cc:	mov    DWORD PTR [rsp+0x28],r8d
  4096d1:	lea    rax,[rax+rax*2]
  4096d5:	lea    rdx,[rax*8+0x8]
  4096dd:	call   0x43bb70
  4096e2:	mov    r8d,DWORD PTR [rsp+0x28]
  4096e7:	mov    edx,DWORD PTR [rax]
  4096e9:	movzx  r10d,BYTE PTR [rsp+0x38]
  4096ef:	mov    QWORD PTR [rbx+0x48],rax
  4096f3:	mov    r9d,DWORD PTR [rsp+0x30]
  4096f8:	mov    DWORD PTR [rax+0x4],0x0
  4096ff:	and    r8d,0x7fffffff
  409706:	and    edx,0x80000000
  40970c:	or     r8d,edx
  40970f:	mov    DWORD PTR [rax],r8d
  409712:	shr    r8d,0x18
  409716:	and    r8d,0x7f
  40971a:	test   r10b,r10b
  40971d:	mov    BYTE PTR [rax+0x3],r8b
  409721:	je     0x4099de
  409727:	mov    edx,r9d
  40972a:	lea    rcx,[rax+0x8]
  40972e:	mov    DWORD PTR [rsp+0x28],r9d
  409733:	lea    r8,[rdx+rdx*2]
  409737:	lea    rdx,[r12+0x8]
  40973c:	shl    r8,0x3
  409740:	call   0x449450
  409745:	mov    r9d,DWORD PTR [rsp+0x28]
  40974a:	mov    r12,QWORD PTR [rbx+0x48]
  40974e:	mov    edx,r9d
  409751:	mov    DWORD PTR [r12+0x4],r9d
  409756:	lea    eax,[rdx+0x1]
  409759:	mov    DWORD PTR [r12+0x4],eax
  40975e:	mov    eax,edx
  409760:	lea    rax,[rax+rax*2]
  409764:	lea    rdx,[r12+rax*8]
  409768:	mov    QWORD PTR [rdx+0x8],rsi
  40976c:	mov    QWORD PTR [rdx+0x10],r14
  409770:	mov    QWORD PTR [rdx+0x18],rdi
  409774:	jmp    0x40958e
  409779:	nop    DWORD PTR [rax+0x0]
  409780:	mov    r8d,DWORD PTR [r12+0x4]
  409785:	test   r8d,r8d
  409788:	je     0x4097a7
  40978a:	lea    rax,[rsi+rsi*4]
  40978e:	xor    edx,edx
  409790:	lea    rax,[rax+rax*4]
  409794:	shl    rax,0x2
  409798:	div    rcx
  40979b:	mov    edx,r8d
  40979e:	cmp    rax,rdx
  4097a1:	jb     0x40958e
  4097a7:	sub    rdi,QWORD PTR [rbx+0x18]
  4097ab:	mov    r9,rdi
  4097ae:	mov    edi,DWORD PTR [r12]
  4097b2:	and    edi,0x7fffffff
  4097b8:	cmp    r8d,edi
  4097bb:	jne    0x409857
  4097c1:	cmp    BYTE PTR [r12+0x3],0x0
  4097c7:	jns    0x409951
  4097cd:	lea    eax,[rdi+0x1]
  4097d0:	mov    QWORD PTR [rbx+0x48],0x0
  4097d8:	mov    r10d,0x1
  4097de:	cmp    eax,0x4
  4097e1:	mov    edx,0x4
  4097e6:	cmovae edx,eax
  4097e9:	xor    ecx,ecx
  4097eb:	xor    r8d,r8d
  4097ee:	mov    eax,edx
  4097f0:	mov    DWORD PTR [rsp+0x3c],edx
  4097f4:	lea    rax,[rax+rax*2]
  4097f8:	lea    rdx,[rax*8+0x8]
  409800:	mov    DWORD PTR [rsp+0x38],r8d
  409805:	mov    QWORD PTR [rsp+0x30],r9
  40980a:	mov    BYTE PTR [rsp+0x28],r10b
  40980f:	call   0x43bb70
  409814:	mov    edx,DWORD PTR [rsp+0x3c]
  409818:	mov    ecx,DWORD PTR [rax]
  40981a:	movzx  r10d,BYTE PTR [rsp+0x28]
  409820:	mov    r8d,DWORD PTR [rsp+0x38]
  409825:	mov    QWORD PTR [rbx+0x48],rax
  409829:	mov    r9,QWORD PTR [rsp+0x30]
  40982e:	and    edx,0x7fffffff
  409834:	and    ecx,0x80000000
  40983a:	or     edx,ecx
  40983c:	mov    DWORD PTR [rax],edx
  40983e:	shr    edx,0x18
  409841:	mov    DWORD PTR [rax+0x4],r8d
  409845:	and    edx,0x7f
  409848:	test   r10b,r10b
  40984b:	mov    BYTE PTR [rax+0x3],dl
  40984e:	jne    0x409993
  409854:	mov    r12,rax
  409857:	lea    eax,[r8+0x1]
  40985b:	mov    DWORD PTR [r12+0x4],eax
  409860:	lea    rax,[r8+r8*2]
  409864:	lea    rdx,[r12+rax*8]
  409868:	mov    QWORD PTR [rdx+0x8],rsi
  40986c:	mov    QWORD PTR [rdx+0x10],r14
  409870:	mov    QWORD PTR [rdx+0x18],r9
  409874:	jmp    0x40958e
  409879:	nop    DWORD PTR [rax+0x0]
  409880:	mov    rax,QWORD PTR [rbx+0x28]
  409884:	mov    QWORD PTR [rbx+0x30],rax
  409888:	jmp    0x40959f
  40988d:	nop    DWORD PTR [rax]
  409890:	mov    rdi,rax
  409893:	lea    r13,[rax+0x1]
  409897:	jmp    0x409550
  40989c:	nop    DWORD PTR [rax+0x0]
  4098a0:	cmp    rcx,0x64
  4098a4:	jbe    0x4098c0
  4098a6:	sub    rdi,QWORD PTR [rbx+0x18]
  4098aa:	mov    eax,0x1
  4098af:	xor    r10d,r10d
  4098b2:	mov    r9,rdi
  4098b5:	xor    edi,edi
  4098b7:	jmp    0x4097de
  4098bc:	nop    DWORD PTR [rax+0x0]
  4098c0:	test   rsi,rsi
  4098c3:	je     0x40958e
  4098c9:	sub    rdi,QWORD PTR [rbx+0x18]
  4098cd:	xor    r10d,r10d
  4098d0:	xor    r9d,r9d
  4098d3:	mov    eax,0x1
  4098d8:	jmp    0x4096b0
  4098dd:	nop    DWORD PTR [rax]
  4098e0:	lea    edx,[r9+0x1]
  4098e4:	mov    ecx,r9d
  4098e7:	call   0x405010
  4098ec:	mov    rcx,QWORD PTR [rbx+0x48]
  4098f0:	mov    eax,eax
  4098f2:	mov    r12,rax
  4098f5:	lea    rax,[rax+rax*2]
  4098f9:	test   rcx,rcx
  4098fc:	lea    rdx,[rax*8+0x8]
  409904:	je     0x4099e8
  40990a:	mov    r8d,DWORD PTR [rcx+0x4]
  40990e:	mov    DWORD PTR [rsp+0x28],r8d
  409913:	call   0x43bb70
  409918:	mov    edx,r12d
  40991b:	mov    r12d,DWORD PTR [rax]
  40991e:	mov    r8d,DWORD PTR [rsp+0x28]
  409923:	and    edx,0x7fffffff
  409929:	mov    QWORD PTR [rbx+0x48],rax
  40992d:	and    r12d,0x80000000
  409934:	mov    DWORD PTR [rax+0x4],r8d
  409938:	or     edx,r12d
  40993b:	mov    r12,rax
  40993e:	mov    DWORD PTR [rax],edx
  409940:	shr    edx,0x18
  409943:	and    edx,0x7f
  409946:	mov    BYTE PTR [rax+0x3],dl
  409949:	mov    edx,r8d
  40994c:	jmp    0x409756
  409951:	mov    eax,DWORD PTR [r12+0x4]
  409956:	mov    ecx,edi
  409958:	mov    QWORD PTR [rsp+0x28],r9
  40995d:	lea    edx,[rax+0x1]
  409960:	call   0x405010
  409965:	mov    rcx,QWORD PTR [rbx+0x48]
  409969:	mov    DWORD PTR [rsp+0x3c],eax
  40996d:	mov    eax,eax
  40996f:	lea    rax,[rax+rax*2]
  409973:	mov    r9,QWORD PTR [rsp+0x28]
  409978:	test   rcx,rcx
  40997b:	lea    rdx,[rax*8+0x8]
  409983:	je     0x4099f0
  409985:	mov    r8d,DWORD PTR [rcx+0x4]
  409989:	xor    edi,edi
  40998b:	xor    r10d,r10d
  40998e:	jmp    0x409800
  409993:	mov    edx,edi
  409995:	lea    rcx,[rax+0x8]
  409999:	mov    QWORD PTR [rsp+0x28],r9
  40999e:	lea    r8,[rdx+rdx*2]
  4099a2:	lea    rdx,[r12+0x8]
  4099a7:	shl    r8,0x3
  4099ab:	call   0x449450
  4099b0:	mov    r12,QWORD PTR [rbx+0x48]
  4099b4:	mov    r8d,edi
  4099b7:	mov    r9,QWORD PTR [rsp+0x28]
  4099bc:	mov    DWORD PTR [r12+0x4],edi
  4099c1:	jmp    0x409857
  4099c6:	lea    r8,[rip+0x445ba]        # 0x44df87
  4099cd:	lea    rcx,[rip+0x442ac]        # 0x44dc80
  4099d4:	mov    edx,0x1e9
  4099d9:	call   0x406190
  4099de:	mov    r12,rax
  4099e1:	xor    edx,edx
  4099e3:	jmp    0x409756
  4099e8:	xor    r8d,r8d
  4099eb:	jmp    0x40990e
  4099f0:	xor    edi,edi
  4099f2:	xor    r10d,r10d
  4099f5:	xor    r8d,r8d
  4099f8:	jmp    0x409800
  4099fd:	nop
  4099fe:	xchg   ax,ax
  409a00:	mov    DWORD PTR [rcx],0x0
  409a06:	mov    QWORD PTR [rcx+0x8],0x0
  409a0e:	mov    QWORD PTR [rcx+0x10],0x0
  409a16:	mov    QWORD PTR [rcx+0x18],0x0
  409a1e:	mov    QWORD PTR [rcx+0x20],0x0
  409a26:	mov    QWORD PTR [rcx+0x28],0x0
  409a2e:	mov    QWORD PTR [rcx+0x30],0x0
  409a36:	mov    QWORD PTR [rcx+0x38],0x0
  409a3e:	mov    QWORD PTR [rcx+0x40],0x0
  409a46:	mov    QWORD PTR [rcx+0x48],0x0
  409a4e:	ret    
  409a4f:	nop
  409a50:	push   rbx
  409a51:	sub    rsp,0x20
  409a55:	mov    rbx,rcx
  409a58:	mov    rcx,QWORD PTR [rcx+0x10]
  409a5c:	test   rcx,rcx
  409a5f:	je     0x409a6e
  409a61:	call   0x449518
  409a66:	mov    QWORD PTR [rbx+0x10],0x0
  409a6e:	mov    rcx,QWORD PTR [rbx+0x18]
  409a72:	test   rcx,rcx
  409a75:	je     0x409a84
  409a77:	call   0x4494c8
  409a7c:	mov    QWORD PTR [rbx+0x18],0x0
  409a84:	mov    rcx,QWORD PTR [rbx+0x48]
  409a88:	test   rcx,rcx
  409a8b:	je     0x409aa7
  409a8d:	cmp    BYTE PTR [rcx+0x3],0x0
  409a91:	js     0x409aa0
  409a93:	add    rsp,0x20
  409a97:	pop    rbx
  409a98:	jmp    0x4494c8
  409a9d:	nop    DWORD PTR [rax]
  409aa0:	mov    DWORD PTR [rcx+0x4],0x0
  409aa7:	add    rsp,0x20
  409aab:	pop    rbx
  409aac:	ret    
  409aad:	nop    DWORD PTR [rax]
  409ab0:	push   rsi
  409ab1:	push   rbx
  409ab2:	sub    rsp,0x28
  409ab6:	mov    rax,QWORD PTR [rip+0x58a73]        # 0x462530
  409abd:	test   rax,rax
  409ac0:	je     0x409b0c
  409ac2:	mov    rdx,QWORD PTR [rax-0x8]
  409ac6:	lea    rsi,[rdx+rdx*4]
  409aca:	shl    rsi,0x4
  409ace:	add    rsi,rax
  409ad1:	cmp    rax,rsi
  409ad4:	je     0x409af8
  409ad6:	lea    rbx,[rsi-0x50]
  409ada:	nop    WORD PTR [rax+rax*1+0x0]
  409ae0:	mov    rcx,rbx
  409ae3:	mov    rsi,rbx
  409ae6:	sub    rbx,0x50
  409aea:	call   0x409a50
  409aef:	cmp    QWORD PTR [rip+0x58a3a],rsi        # 0x462530
  409af6:	jne    0x409ae0
  409af8:	lea    rcx,[rsi-0x8]
  409afc:	call   0x43bed0
  409b01:	mov    QWORD PTR [rip+0x58a24],0x0        # 0x462530
  409b0c:	add    rsp,0x28
  409b10:	pop    rbx
  409b11:	pop    rsi
  409b12:	ret    
  409b13:	nop    DWORD PTR [rax]
  409b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b20:	push   r14
  409b22:	push   r13
  409b24:	push   r12
  409b26:	push   rbp
  409b27:	push   rdi
  409b28:	push   rsi
  409b29:	push   rbx
  409b2a:	sub    rsp,0x50
  409b2e:	mov    ebp,DWORD PTR [rcx+0x8]
  409b31:	test   ebp,ebp
  409b33:	je     0x409c50
  409b39:	mov    r12,QWORD PTR [rcx]
  409b3c:	mov    rdi,rdx
  409b3f:	test   r12,r12
  409b42:	je     0x409cf3
  409b48:	mov    rbx,QWORD PTR [rip+0x589e1]        # 0x462530
  409b4f:	test   rbx,rbx
  409b52:	je     0x409e6e
  409b58:	lea    r13,[rbx+0x500]
  409b5f:	xor    esi,esi
  409b61:	mov    rcx,QWORD PTR [rbx+0x8]
  409b65:	test   rcx,rcx
  409b68:	je     0x409b7c
  409b6a:	mov    rdx,r12
  409b6d:	call   0x4493e0
  409b72:	test   eax,eax
  409b74:	jne    0x409b7c
  409b76:	add    DWORD PTR [rbx],0x1
  409b79:	mov    rsi,rbx
  409b7c:	add    rbx,0x50
  409b80:	cmp    rbx,r13
  409b83:	jne    0x409b61
  409b85:	test   rsi,rsi
  409b88:	je     0x409cf3
  409b8e:	add    DWORD PTR [rsi],0x1
  409b91:	mov    rax,QWORD PTR [rsi+0x38]
  409b95:	movsxd rbx,ebp
  409b98:	cmp    rbx,rax
  409b9b:	jbe    0x409c61
  409ba1:	sub    rbx,0x1
  409ba5:	lea    rbp,[rsp+0x28]
  409baa:	lea    r12,[rsp+0x30]
  409baf:	jmp    0x409bcb
  409bb1:	mov    r8,r12
  409bb4:	mov    rdx,rbp
  409bb7:	mov    rcx,rsi
  409bba:	call   0x409500
  409bbf:	test   al,al
  409bc1:	je     0x409c50
  409bc7:	mov    rax,QWORD PTR [rsi+0x38]
  409bcb:	cmp    rax,rbx
  409bce:	jb     0x409bb1
  409bd0:	mov    rdx,rbp
  409bd3:	mov    r8,r12
  409bd6:	mov    rcx,rsi
  409bd9:	mov    QWORD PTR [rsp+0x28],0x0
  409be2:	mov    QWORD PTR [rsp+0x30],0x0
  409beb:	call   0x409500
  409bf0:	mov    edx,eax
  409bf2:	xor    eax,eax
  409bf4:	test   dl,dl
  409bf6:	je     0x409c52
  409bf8:	mov    rcx,QWORD PTR [rip+0x58929]        # 0x462528
  409bff:	test   rcx,rcx
  409c02:	je     0x409f1e
  409c08:	mov    r8,QWORD PTR [rsp+0x30]
  409c0d:	cmp    QWORD PTR [rip+0x5890c],r8        # 0x462520
  409c14:	jl     0x409cd7
  409c1a:	mov    rdx,QWORD PTR [rsp+0x28]
  409c1f:	call   0x449450
  409c24:	mov    rax,QWORD PTR [rsp+0x30]
  409c29:	test   rdi,rdi
  409c2c:	mov    QWORD PTR [rip+0x588ed],rax        # 0x462520
  409c33:	je     0x409c37
  409c35:	mov    DWORD PTR [rdi],eax
  409c37:	mov    rax,QWORD PTR [rip+0x588ea]        # 0x462528
  409c3e:	add    rsp,0x50
  409c42:	pop    rbx
  409c43:	pop    rsi
  409c44:	pop    rdi
  409c45:	pop    rbp
  409c46:	pop    r12
  409c48:	pop    r13
  409c4a:	pop    r14
  409c4c:	ret    
  409c4d:	nop    DWORD PTR [rax]
  409c50:	xor    eax,eax
  409c52:	add    rsp,0x50
  409c56:	pop    rbx
  409c57:	pop    rsi
  409c58:	pop    rdi
  409c59:	pop    rbp
  409c5a:	pop    r12
  409c5c:	pop    r13
  409c5e:	pop    r14
  409c60:	ret    
  409c61:	mov    rcx,QWORD PTR [rsi+0x48]
  409c65:	test   rcx,rcx
  409c68:	je     0x409cc0
  409c6a:	mov    r8d,DWORD PTR [rcx+0x4]
  409c6e:	test   r8d,r8d
  409c71:	je     0x409cc0
  409c73:	mov    r9,QWORD PTR [rsi+0x40]
  409c77:	cmp    r9,0x64
  409c7b:	ja     0x409e26
  409c81:	cmp    rbx,r9
  409c84:	jbe    0x409e92
  409c8a:	lea    eax,[r9-0x1]
  409c8e:	lea    rax,[rax+rax*2]
  409c92:	lea    rbp,[rcx+rax*8+0x8]
  409c97:	mov    rax,QWORD PTR [rbp+0x0]
  409c9b:	cmp    rbx,rax
  409c9e:	jae    0x409e54
  409ca4:	lea    r8,[rip+0x442ea]        # 0x44df95
  409cab:	lea    rcx,[rip+0x43fce]        # 0x44dc80
  409cb2:	mov    edx,0x278
  409cb7:	call   0x406190
  409cbc:	nop    DWORD PTR [rax+0x0]
  409cc0:	mov    QWORD PTR [rsi+0x30],0x0
  409cc8:	mov    QWORD PTR [rsi+0x38],0x0
  409cd0:	xor    eax,eax
  409cd2:	jmp    0x409ba1
  409cd7:	mov    rdx,r8
  409cda:	call   0x43bb70
  409cdf:	mov    r8,QWORD PTR [rsp+0x30]
  409ce4:	mov    QWORD PTR [rip+0x5883d],rax        # 0x462528
  409ceb:	mov    rcx,rax
  409cee:	jmp    0x409c1a
  409cf3:	lea    rdx,[rip+0x43fd0]        # 0x44dcca
  409cfa:	mov    rcx,r12
  409cfd:	call   0x4494f0
  409d02:	test   rax,rax
  409d05:	mov    r14,rax
  409d08:	je     0x409c50
  409d0e:	mov    rsi,QWORD PTR [rip+0x5881b]        # 0x462530
  409d15:	test   rsi,rsi
  409d18:	je     0x409f3c
  409d1e:	mov    ebx,DWORD PTR [rsi]
  409d20:	lea    rdx,[rsi+0x50]
  409d24:	lea    r10,[rsi+0x500]
  409d2b:	mov    r9d,ebx
  409d2e:	xchg   ax,ax
  409d30:	cmp    QWORD PTR [rdx+0x8],0x0
  409d35:	mov    ecx,DWORD PTR [rdx]
  409d37:	mov    r13,rdx
  409d3a:	sete   r8b
  409d3e:	cmp    ecx,r9d
  409d41:	jb     0x409e00
  409d47:	test   r8b,r8b
  409d4a:	je     0x409e03
  409d50:	cmp    QWORD PTR [rsi+0x8],0x0
  409d55:	je     0x409e03
  409d5b:	cmp    ebx,ecx
  409d5d:	mov    rsi,rdx
  409d60:	cmovb  ebx,ecx
  409d63:	mov    rcx,QWORD PTR [r13+0x10]
  409d67:	mov    QWORD PTR [r13+0x8],r12
  409d6b:	test   rcx,rcx
  409d6e:	je     0x409d75
  409d70:	call   0x449518
  409d75:	mov    rax,QWORD PTR [r13+0x48]
  409d79:	mov    QWORD PTR [r13+0x10],r14
  409d7d:	mov    QWORD PTR [r13+0x28],0x0
  409d85:	mov    QWORD PTR [r13+0x30],0x0
  409d8d:	mov    QWORD PTR [r13+0x38],0x0
  409d95:	test   rax,rax
  409d98:	je     0x409da1
  409d9a:	mov    DWORD PTR [rax+0x4],0x0
  409da1:	mov    rcx,QWORD PTR [rip+0x58768]        # 0x462510
  409da8:	add    ebx,0x1
  409dab:	lea    r8,[rsp+0x28]
  409db0:	mov    DWORD PTR [r13+0x0],ebx
  409db4:	mov    rdx,r12
  409db7:	mov    DWORD PTR [rsp+0x28],0x0
  409dbf:	call   0x40bb00
  409dc4:	test   al,al
  409dc6:	je     0x409ea3
  409dcc:	mov    edx,DWORD PTR [rsp+0x28]
  409dd0:	cmp    edx,0x1
  409dd3:	jbe    0x409f4d
  409dd9:	lea    r12,[rsp+0x30]
  409dde:	mov    r8d,0x1
  409de4:	mov    rcx,r12
  409de7:	call   0x409370
  409dec:	movsxd rax,DWORD PTR [rsp+0x38]
  409df1:	mov    QWORD PTR [r13+0x40],rax
  409df5:	jmp    0x409b91
  409dfa:	nop    WORD PTR [rax+rax*1+0x0]
  409e00:	mov    rsi,rdx
  409e03:	cmp    ebx,ecx
  409e05:	cmovb  ebx,ecx
  409e08:	test   r8b,r8b
  409e0b:	jne    0x409eaa
  409e11:	add    rdx,0x50
  409e15:	cmp    rdx,r10
  409e18:	je     0x409eaa
  409e1e:	mov    r9d,DWORD PTR [rsi]
  409e21:	jmp    0x409d30
  409e26:	cmp    rbx,r9
  409e29:	lea    eax,[r8-0x1]
  409e2d:	jbe    0x409e7f
  409e2f:	cmp    rax,r8
  409e32:	jae    0x409cc0
  409e38:	mov    eax,eax
  409e3a:	lea    rax,[rax+rax*2]
  409e3e:	lea    rax,[rcx+rax*8]
  409e42:	cmp    rbx,QWORD PTR [rax+0x8]
  409e46:	lea    rbp,[rax+0x8]
  409e4a:	jb     0x409f65
  409e50:	mov    rax,QWORD PTR [rax+0x8]
  409e54:	cmp    rbx,rax
  409e57:	mov    rdx,QWORD PTR [rbp+0x8]
  409e5b:	je     0x409eb2
  409e5d:	sub    rax,0x1
  409e61:	mov    QWORD PTR [rsi+0x30],rdx
  409e65:	mov    QWORD PTR [rsi+0x38],rax
  409e69:	jmp    0x409ba1
  409e6e:	call   0x409470
  409e73:	mov    rbx,QWORD PTR [rip+0x586b6]        # 0x462530
  409e7a:	jmp    0x409b58
  409e7f:	lea    rax,[rbx+rbx*4]
  409e83:	xor    edx,edx
  409e85:	lea    rax,[rax+rax*4]
  409e89:	shl    rax,0x2
  409e8d:	div    r9
  409e90:	jmp    0x409e2f
  409e92:	lea    eax,[rbp-0x1]
  409e95:	lea    rax,[rax+rax*2]
  409e99:	lea    rbp,[rcx+rax*8+0x8]
  409e9e:	jmp    0x409c97
  409ea3:	xor    eax,eax
  409ea5:	jmp    0x409df1
  409eaa:	mov    r13,rsi
  409ead:	jmp    0x409d63
  409eb2:	mov    r12,QWORD PTR [rbp+0x10]
  409eb6:	sub    r12,rdx
  409eb9:	lea    rbx,[r12+0x1]
  409ebe:	cmp    rbx,QWORD PTR [rip+0x5865b]        # 0x462520
  409ec5:	jg     0x409eff
  409ec7:	mov    rcx,QWORD PTR [rip+0x5865a]        # 0x462528
  409ece:	add    rdx,QWORD PTR [rsi+0x18]
  409ed2:	mov    r8,rbx
  409ed5:	call   0x449448
  409eda:	mov    rax,QWORD PTR [rip+0x58647]        # 0x462528
  409ee1:	test   rdi,rdi
  409ee4:	mov    BYTE PTR [rax+r12*1],0x0
  409ee9:	lea    rax,[rbx-0x1]
  409eed:	mov    QWORD PTR [rip+0x5862c],rax        # 0x462520
  409ef4:	jne    0x409c35
  409efa:	jmp    0x409c37
  409eff:	mov    rcx,QWORD PTR [rip+0x58622]        # 0x462528
  409f06:	mov    rdx,rbx
  409f09:	call   0x43bb70
  409f0e:	mov    rdx,QWORD PTR [rbp+0x8]
  409f12:	mov    QWORD PTR [rip+0x5860f],rax        # 0x462528
  409f19:	mov    rcx,rax
  409f1c:	jmp    0x409ece
  409f1e:	mov    rcx,QWORD PTR [rsp+0x30]
  409f23:	call   0x43baf0
  409f28:	mov    r8,QWORD PTR [rsp+0x30]
  409f2d:	mov    QWORD PTR [rip+0x585f4],rax        # 0x462528
  409f34:	mov    rcx,rax
  409f37:	jmp    0x409c1a
  409f3c:	call   0x409470
  409f41:	mov    rsi,QWORD PTR [rip+0x585e8]        # 0x462530
  409f48:	jmp    0x409d1e
  409f4d:	lea    r8,[rip+0x4405c]        # 0x44dfb0
  409f54:	lea    rcx,[rip+0x43d25]        # 0x44dc80
  409f5b:	mov    edx,0xd2
  409f60:	call   0x406190
  409f65:	lea    r8,[rip+0x44029]        # 0x44df95
  409f6c:	lea    rcx,[rip+0x43d0d]        # 0x44dc80
  409f73:	mov    edx,0x287
  409f78:	call   0x406190
  409f7d:	nop
  409f7e:	xchg   ax,ax
  409f80:	push   rbx
  409f81:	sub    rsp,0x20
  409f85:	mov    r8d,0x1
  409f8b:	mov    rbx,rcx
  409f8e:	call   0x409370
  409f93:	mov    rax,rbx
  409f96:	add    rsp,0x20
  409f9a:	pop    rbx
  409f9b:	ret    
  409f9c:	nop    DWORD PTR [rax+0x0]
  409fa0:	push   rbx
  409fa1:	sub    rsp,0x20
  409fa5:	xor    r8d,r8d
  409fa8:	mov    rbx,rcx
  409fab:	call   0x409370
  409fb0:	mov    rax,rbx
  409fb3:	add    rsp,0x20
  409fb7:	pop    rbx
  409fb8:	ret    
  409fb9:	nop    DWORD PTR [rax+0x0]
  409fc0:	push   rbx
  409fc1:	sub    rsp,0x20
  409fc5:	mov    edx,ecx
  409fc7:	mov    ebx,ecx
  409fc9:	mov    rcx,QWORD PTR [rip+0x58540]        # 0x462510
  409fd0:	call   0x40b220
  409fd5:	test   eax,eax
  409fd7:	jne    0x409fe1
  409fd9:	mov    eax,ebx
  409fdb:	add    rsp,0x20
  409fdf:	pop    rbx
  409fe0:	ret    
  409fe1:	mov    rcx,QWORD PTR [rip+0x58528]        # 0x462510
  409fe8:	xor    r9d,r9d
  409feb:	xor    r8d,r8d
  409fee:	mov    edx,ebx
  409ff0:	add    rsp,0x20
  409ff4:	pop    rbx
  409ff5:	jmp    0x40b2c0
  409ffa:	nop    WORD PTR [rax+rax*1+0x0]
  40a000:	push   r13
  40a002:	push   r12
  40a004:	push   rbp
  40a005:	push   rdi
  40a006:	push   rsi
  40a007:	push   rbx
  40a008:	sub    rsp,0x58
  40a00c:	xor    eax,eax
  40a00e:	mov    ecx,0x5
  40a013:	lea    rdx,[rsp+0x20]
  40a018:	mov    rdi,rdx
  40a01b:	rep stos QWORD PTR es:[rdi],rax
  40a01e:	mov    rcx,QWORD PTR [rip+0x584eb]        # 0x462510
  40a025:	mov    DWORD PTR [rdi],0x0
  40a02b:	call   0x40bbb0
  40a030:	mov    esi,DWORD PTR [rsp+0x44]
  40a034:	mov    eax,DWORD PTR [rsp+0x40]
  40a038:	mov    edi,DWORD PTR [rsp+0x3c]
  40a03c:	add    edi,DWORD PTR [rsp+0x28]
  40a040:	mov    r12d,DWORD PTR [rsp+0x30]
  40a045:	mov    rbx,QWORD PTR [rip+0x5a6e8]        # 0x464734
  40a04c:	lea    ebp,[rax+rsi*1]
  40a04f:	add    eax,DWORD PTR [rsp+0x2c]
  40a053:	add    edi,esi
  40a055:	add    esi,eax
  40a057:	call   rbx
  40a059:	lea    rdx,[rip+0x43c70]        # 0x44dcd0
  40a060:	lea    rcx,[rax+0x60]
  40a064:	mov    r8d,r12d
  40a067:	call   0x4498d0
  40a06c:	mov    ecx,DWORD PTR [rsp+0x30]
  40a070:	test   ecx,ecx
  40a072:	jne    0x40a4a2
  40a078:	call   rbx
  40a07a:	lea    rdx,[rip+0x43cbf]        # 0x44dd40
  40a081:	lea    rcx,[rax+0x60]
  40a085:	call   0x4498d0
  40a08a:	mov    r8d,DWORD PTR [rsp+0x24]
  40a08f:	cmp    r8d,0x27ff
  40a096:	jle    0x40a0b4
  40a098:	cmp    r8d,0x9fffff
  40a09f:	jg     0x40a490
  40a0a5:	sar    r8d,0xa
  40a0a9:	mov    r13d,0x6b
  40a0af:	mov    r12d,r8d
  40a0b2:	jmp    0x40a0bd
  40a0b4:	mov    r12d,r8d
  40a0b7:	mov    r13d,0x20
  40a0bd:	call   rbx
  40a0bf:	lea    rdx,[rip+0x43cb2]        # 0x44dd78
  40a0c6:	lea    rcx,[rax+0x60]
  40a0ca:	mov    r8d,r12d
  40a0cd:	mov    r9d,r13d
  40a0d0:	call   0x4498d0
  40a0d5:	mov    r8d,DWORD PTR [rsp+0x2c]
  40a0da:	cmp    r8d,0x27ff
  40a0e1:	jle    0x40a100
  40a0e3:	cmp    r8d,0x9fffff
  40a0ea:	jg     0x40a474
  40a0f0:	sar    r8d,0xa
  40a0f4:	mov    r13d,0x6b
  40a0fa:	mov    r12d,r8d
  40a0fd:	jmp    0x40a109
  40a0ff:	nop
  40a100:	mov    r12d,r8d
  40a103:	mov    r13d,0x20
  40a109:	call   rbx
  40a10b:	lea    rdx,[rip+0x43c96]        # 0x44dda8
  40a112:	lea    rcx,[rax+0x60]
  40a116:	mov    r8d,r12d
  40a119:	mov    r9d,r13d
  40a11c:	call   0x4498d0
  40a121:	mov    r8d,DWORD PTR [rsp+0x20]
  40a126:	cmp    r8d,0x27ff
  40a12d:	jle    0x40a150
  40a12f:	cmp    r8d,0x9fffff
  40a136:	jg     0x40a462
  40a13c:	sar    r8d,0xa
  40a140:	mov    r13d,0x6b
  40a146:	mov    r12d,r8d
  40a149:	jmp    0x40a159
  40a14b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a150:	mov    r12d,r8d
  40a153:	mov    r13d,0x20
  40a159:	call   rbx
  40a15b:	lea    rdx,[rip+0x43c76]        # 0x44ddd8
  40a162:	lea    rcx,[rax+0x60]
  40a166:	mov    r8d,r12d
  40a169:	mov    r9d,r13d
  40a16c:	call   0x4498d0
  40a171:	mov    r8d,DWORD PTR [rsp+0x28]
  40a176:	cmp    r8d,0x27ff
  40a17d:	jle    0x40a1a0
  40a17f:	cmp    r8d,0x9fffff
  40a186:	jg     0x40a450
  40a18c:	sar    r8d,0xa
  40a190:	mov    r13d,0x6b
  40a196:	mov    r12d,r8d
  40a199:	jmp    0x40a1a9
  40a19b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1a0:	mov    r12d,r8d
  40a1a3:	mov    r13d,0x20
  40a1a9:	call   rbx
  40a1ab:	lea    rdx,[rip+0x43c56]        # 0x44de08
  40a1b2:	lea    rcx,[rax+0x60]
  40a1b6:	mov    r8d,r12d
  40a1b9:	mov    r9d,r13d
  40a1bc:	call   0x4498d0
  40a1c1:	mov    r8d,DWORD PTR [rsp+0x38]
  40a1c6:	cmp    r8d,0x27ff
  40a1cd:	jle    0x40a1f0
  40a1cf:	cmp    r8d,0x9fffff
  40a1d6:	jg     0x40a434
  40a1dc:	sar    r8d,0xa
  40a1e0:	mov    r13d,0x6b
  40a1e6:	mov    r12d,r8d
  40a1e9:	jmp    0x40a1f9
  40a1eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1f0:	mov    r12d,r8d
  40a1f3:	mov    r13d,0x20
  40a1f9:	call   rbx
  40a1fb:	lea    rdx,[rip+0x43c36]        # 0x44de38
  40a202:	lea    rcx,[rax+0x60]
  40a206:	mov    r8d,r12d
  40a209:	mov    r9d,r13d
  40a20c:	call   0x4498d0
  40a211:	mov    r8d,DWORD PTR [rsp+0x40]
  40a216:	cmp    r8d,0x27ff
  40a21d:	jle    0x40a240
  40a21f:	cmp    r8d,0x9fffff
  40a226:	jg     0x40a422
  40a22c:	sar    r8d,0xa
  40a230:	mov    r13d,0x6b
  40a236:	mov    r12d,r8d
  40a239:	jmp    0x40a249
  40a23b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a240:	mov    r12d,r8d
  40a243:	mov    r13d,0x20
  40a249:	call   rbx
  40a24b:	lea    rdx,[rip+0x43c16]        # 0x44de68
  40a252:	lea    rcx,[rax+0x60]
  40a256:	mov    r8d,r12d
  40a259:	mov    r9d,r13d
  40a25c:	call   0x4498d0
  40a261:	mov    r8d,DWORD PTR [rsp+0x44]
  40a266:	cmp    r8d,0x27ff
  40a26d:	jle    0x40a290
  40a26f:	cmp    r8d,0x9fffff
  40a276:	jg     0x40a410
  40a27c:	sar    r8d,0xa
  40a280:	mov    r13d,0x6b
  40a286:	mov    r12d,r8d
  40a289:	jmp    0x40a299
  40a28b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a290:	mov    r12d,r8d
  40a293:	mov    r13d,0x20
  40a299:	call   rbx
  40a29b:	lea    rdx,[rip+0x43bf6]        # 0x44de98
  40a2a2:	lea    rcx,[rax+0x60]
  40a2a6:	mov    r8d,r12d
  40a2a9:	mov    r9d,r13d
  40a2ac:	mov    r12d,0x20
  40a2b2:	call   0x4498d0
  40a2b7:	cmp    ebp,0x27ff
  40a2bd:	jle    0x40a2d4
  40a2bf:	cmp    ebp,0x9fffff
  40a2c5:	jg     0x40a402
  40a2cb:	sar    ebp,0xa
  40a2ce:	mov    r12d,0x6b
  40a2d4:	call   rbx
  40a2d6:	lea    rdx,[rip+0x43beb]        # 0x44dec8
  40a2dd:	lea    rcx,[rax+0x60]
  40a2e1:	mov    r8d,ebp
  40a2e4:	mov    r9d,r12d
  40a2e7:	call   0x4498d0
  40a2ec:	mov    r8d,DWORD PTR [rsp+0x48]
  40a2f1:	cmp    r8d,0x27ff
  40a2f8:	jle    0x40a320
  40a2fa:	cmp    r8d,0x9fffff
  40a301:	jg     0x40a3f0
  40a307:	sar    r8d,0xa
  40a30b:	mov    r12d,0x6b
  40a311:	mov    ebp,r8d
  40a314:	jmp    0x40a329
  40a316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a320:	mov    ebp,r8d
  40a323:	mov    r12d,0x20
  40a329:	call   rbx
  40a32b:	lea    rdx,[rip+0x43bc6]        # 0x44def8
  40a332:	lea    rcx,[rax+0x60]
  40a336:	mov    r8d,ebp
  40a339:	mov    r9d,r12d
  40a33c:	mov    ebp,0x20
  40a341:	call   0x4498d0
  40a346:	cmp    edi,0x27ff
  40a34c:	jle    0x40a362
  40a34e:	cmp    edi,0x9fffff
  40a354:	jg     0x40a3e0
  40a35a:	sar    edi,0xa
  40a35d:	mov    ebp,0x6b
  40a362:	call   rbx
  40a364:	lea    rdx,[rip+0x43bbd]        # 0x44df28
  40a36b:	lea    rcx,[rax+0x60]
  40a36f:	mov    r8d,edi
  40a372:	mov    r9d,ebp
  40a375:	mov    edi,0x20
  40a37a:	call   0x4498d0
  40a37f:	cmp    esi,0x27ff
  40a385:	jle    0x40a397
  40a387:	cmp    esi,0x9fffff
  40a38d:	jg     0x40a3d0
  40a38f:	sar    esi,0xa
  40a392:	mov    edi,0x6b
  40a397:	call   rbx
  40a399:	lea    rdx,[rip+0x43bb8]        # 0x44df58
  40a3a0:	lea    rcx,[rax+0x60]
  40a3a4:	mov    r9d,edi
  40a3a7:	mov    r8d,esi
  40a3aa:	call   0x4498d0
  40a3af:	call   rbx
  40a3b1:	lea    rdx,[rip+0x43bcd]        # 0x44df85
  40a3b8:	lea    rcx,[rax+0x60]
  40a3bc:	call   0x4498d0
  40a3c1:	nop
  40a3c2:	add    rsp,0x58
  40a3c6:	pop    rbx
  40a3c7:	pop    rsi
  40a3c8:	pop    rdi
  40a3c9:	pop    rbp
  40a3ca:	pop    r12
  40a3cc:	pop    r13
  40a3ce:	ret    
  40a3cf:	nop
  40a3d0:	sar    esi,0x14
  40a3d3:	mov    edi,0x4d
  40a3d8:	jmp    0x40a397
  40a3da:	nop    WORD PTR [rax+rax*1+0x0]
  40a3e0:	sar    edi,0x14
  40a3e3:	mov    ebp,0x4d
  40a3e8:	jmp    0x40a362
  40a3ed:	nop    DWORD PTR [rax]
  40a3f0:	sar    r8d,0x14
  40a3f4:	mov    r12d,0x4d
  40a3fa:	mov    ebp,r8d
  40a3fd:	jmp    0x40a329
  40a402:	sar    ebp,0x14
  40a405:	mov    r12d,0x4d
  40a40b:	jmp    0x40a2d4
  40a410:	sar    r8d,0x14
  40a414:	mov    r13d,0x4d
  40a41a:	mov    r12d,r8d
  40a41d:	jmp    0x40a299
  40a422:	sar    r8d,0x14
  40a426:	mov    r13d,0x4d
  40a42c:	mov    r12d,r8d
  40a42f:	jmp    0x40a249
  40a434:	sar    r8d,0x14
  40a438:	mov    r13d,0x4d
  40a43e:	mov    r12d,r8d
  40a441:	jmp    0x40a1f9
  40a446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a450:	sar    r8d,0x14
  40a454:	mov    r13d,0x4d
  40a45a:	mov    r12d,r8d
  40a45d:	jmp    0x40a1a9
  40a462:	sar    r8d,0x14
  40a466:	mov    r13d,0x4d
  40a46c:	mov    r12d,r8d
  40a46f:	jmp    0x40a159
  40a474:	sar    r8d,0x14
  40a478:	mov    r13d,0x4d
  40a47e:	mov    r12d,r8d
  40a481:	jmp    0x40a109
  40a486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a490:	sar    r8d,0x14
  40a494:	mov    r13d,0x4d
  40a49a:	mov    r12d,r8d
  40a49d:	jmp    0x40a0bd
  40a4a2:	mov    eax,DWORD PTR [rsp+0x34]
  40a4a6:	cdq    
  40a4a7:	idiv   ecx
  40a4a9:	mov    r12d,eax
  40a4ac:	call   rbx
  40a4ae:	lea    rdx,[rip+0x43853]        # 0x44dd08
  40a4b5:	lea    rcx,[rax+0x60]
  40a4b9:	mov    r8d,r12d
  40a4bc:	call   0x4498d0
  40a4c1:	jmp    0x40a078
  40a4c6:	nop
  40a4c7:	nop
  40a4c8:	nop
  40a4c9:	nop
  40a4ca:	nop
  40a4cb:	nop
  40a4cc:	nop
  40a4cd:	nop
  40a4ce:	nop
  40a4cf:	nop
  40a4d0:	mov    eax,DWORD PTR [rcx]
  40a4d2:	add    eax,DWORD PTR [rcx+0x8]
  40a4d5:	ret    
  40a4d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4e0:	xor    eax,eax
  40a4e2:	mov    r8d,DWORD PTR [rdx]
  40a4e5:	cmp    DWORD PTR [rcx],r8d
  40a4e8:	je     0x40a4f0
  40a4ea:	repz ret 
  40a4ec:	nop    DWORD PTR [rax+0x0]
  40a4f0:	mov    rax,QWORD PTR [rdx+0x8]
  40a4f4:	cmp    QWORD PTR [rcx+0x8],rax
  40a4f8:	sete   al
  40a4fb:	movzx  eax,al
  40a4fe:	ret    
  40a4ff:	nop
  40a500:	mov    rax,QWORD PTR [rdx]
  40a503:	add    QWORD PTR [rcx],rax
  40a506:	mov    eax,0x1
  40a50b:	ret    
  40a50c:	nop    DWORD PTR [rax+0x0]
  40a510:	push   rbp
  40a511:	push   rdi
  40a512:	push   rsi
  40a513:	push   rbx
  40a514:	sub    rsp,0x28
  40a518:	cmp    edx,0x4
  40a51b:	mov    rbx,rcx
  40a51e:	mov    edi,edx
  40a520:	sete   bpl
  40a524:	jne    0x40a540
  40a526:	mov    eax,DWORD PTR [rcx+0x24]
  40a529:	cmp    eax,DWORD PTR [rcx+0x20]
  40a52c:	je     0x40a5f0
  40a532:	mov    rdx,QWORD PTR [rcx+0x18]
  40a536:	jmp    0x40a54b
  40a538:	nop    DWORD PTR [rax+rax*1+0x0]
  40a540:	mov    eax,DWORD PTR [rcx+0xc]
  40a543:	cmp    eax,DWORD PTR [rcx+0x8]
  40a546:	je     0x40a572
  40a548:	mov    rdx,QWORD PTR [rcx]
  40a54b:	lea    rax,[rax+rax*4]
  40a54f:	lea    rsi,[rdx+rax*8]
  40a553:	lea    r8,[rbx+0x18]
  40a557:	test   bpl,bpl
  40a55a:	mov    rax,rsi
  40a55d:	cmovne rbx,r8
  40a561:	add    DWORD PTR [rbx+0xc],0x1
  40a565:	mov    BYTE PTR [rsi+0x4],dil
  40a569:	add    rsp,0x28
  40a56d:	pop    rbx
  40a56e:	pop    rsi
  40a56f:	pop    rdi
  40a570:	pop    rbp
  40a571:	ret    
  40a572:	mov    rsi,QWORD PTR [rcx+0x48]
  40a576:	mov    rdx,QWORD PTR [rcx+0x50]
  40a57a:	test   rsi,rsi
  40a57d:	je     0x40a652
  40a583:	mov    eax,DWORD PTR [rbx+0x8]
  40a586:	lea    eax,[rax+rax*1+0x100]
  40a58d:	lea    rcx,[rax+rax*4]
  40a591:	shl    rcx,0x3
  40a595:	call   rdx
  40a597:	movabs rdx,0xcccccccccccccccd
  40a5a1:	mov    rcx,QWORD PTR [rbx]
  40a5a4:	mul    rdx
  40a5a7:	shr    rdx,0x5
  40a5ab:	mov    DWORD PTR [rbx+0x8],edx
  40a5ae:	mov    edx,edx
  40a5b0:	lea    rdx,[rdx+rdx*4]
  40a5b4:	shl    rdx,0x3
  40a5b8:	call   rsi
  40a5ba:	mov    ecx,DWORD PTR [rbx+0xc]
  40a5bd:	mov    QWORD PTR [rbx],rax
  40a5c0:	mov    rdx,rcx
  40a5c3:	lea    rcx,[rcx+rcx*4]
  40a5c7:	lea    rsi,[rax+rcx*8]
  40a5cb:	mov    eax,DWORD PTR [rbx+0x8]
  40a5ce:	sub    eax,edx
  40a5d0:	mov    rcx,rsi
  40a5d3:	xor    edx,edx
  40a5d5:	lea    r8,[rax+rax*4]
  40a5d9:	shl    r8,0x3
  40a5dd:	call   0x449440
  40a5e2:	jmp    0x40a553
  40a5e7:	nop    WORD PTR [rax+rax*1+0x0]
  40a5f0:	mov    rsi,QWORD PTR [rcx+0x48]
  40a5f4:	test   rsi,rsi
  40a5f7:	je     0x40a660
  40a5f9:	mov    rdx,QWORD PTR [rbx+0x50]
  40a5fd:	nop    DWORD PTR [rax]
  40a600:	mov    eax,DWORD PTR [rbx+0x20]
  40a603:	lea    eax,[rax+rax*1+0x100]
  40a60a:	lea    rcx,[rax+rax*4]
  40a60e:	shl    rcx,0x3
  40a612:	call   rdx
  40a614:	movabs rdx,0xcccccccccccccccd
  40a61e:	mov    rcx,QWORD PTR [rbx+0x18]
  40a622:	mul    rdx
  40a625:	shr    rdx,0x5
  40a629:	mov    DWORD PTR [rbx+0x20],edx
  40a62c:	mov    edx,edx
  40a62e:	lea    rdx,[rdx+rdx*4]
  40a632:	shl    rdx,0x3
  40a636:	call   rsi
  40a638:	mov    ecx,DWORD PTR [rbx+0x24]
  40a63b:	mov    QWORD PTR [rbx+0x18],rax
  40a63f:	mov    rdx,rcx
  40a642:	lea    rcx,[rcx+rcx*4]
  40a646:	lea    rsi,[rax+rcx*8]
  40a64a:	mov    eax,DWORD PTR [rbx+0x20]
  40a64d:	jmp    0x40a5ce
  40a652:	lea    rsi,[rip+0x31517]        # 0x43bb70
  40a659:	jmp    0x40a583
  40a65e:	xchg   ax,ax
  40a660:	mov    rdx,QWORD PTR [rcx+0x50]
  40a664:	lea    rsi,[rip+0x31505]        # 0x43bb70
  40a66b:	jmp    0x40a600
  40a66d:	nop    DWORD PTR [rax]
  40a670:	push   rsi
  40a671:	push   rbx
  40a672:	sub    rsp,0x28
  40a676:	lea    r8,[rip+0xfffffffffffffe63]        # 0x40a4e0
  40a67d:	lea    rdx,[rip+0xfffffffffffffe4c]        # 0x40a4d0
  40a684:	xor    r9d,r9d
  40a687:	mov    rsi,rcx
  40a68a:	mov    ecx,0x64
  40a68f:	call   0x438aa0
  40a694:	mov    rcx,rax
  40a697:	mov    QWORD PTR [rsi+0x58],rax
  40a69b:	mov    eax,DWORD PTR [rsi+0x60]
  40a69e:	test   eax,eax
  40a6a0:	je     0x40a6d1
  40a6a2:	xor    ebx,ebx
  40a6a4:	jmp    0x40a6b4
  40a6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6b0:	mov    rcx,QWORD PTR [rsi+0x58]
  40a6b4:	mov    edx,ebx
  40a6b6:	mov    r8d,0x1
  40a6bc:	add    ebx,0x1
  40a6bf:	shl    rdx,0x4
  40a6c3:	add    rdx,QWORD PTR [rsi+0x68]
  40a6c7:	call   0x439020
  40a6cc:	cmp    DWORD PTR [rsi+0x60],ebx
  40a6cf:	ja     0x40a6b0
  40a6d1:	add    rsp,0x28
  40a6d5:	pop    rbx
  40a6d6:	pop    rsi
  40a6d7:	ret    
  40a6d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a6e0:	push   rdi
  40a6e1:	push   rsi
  40a6e2:	push   rbx
  40a6e3:	sub    rsp,0x40
  40a6e7:	mov    eax,edx
  40a6e9:	mov    rbx,rcx
  40a6ec:	and    eax,0x7fffffff
  40a6f1:	cmp    eax,edx
  40a6f3:	je     0x40a6ff
  40a6f5:	shl    rax,0x4
  40a6f9:	add    rax,QWORD PTR [rcx+0x68]
  40a6fd:	mov    edx,DWORD PTR [rax]
  40a6ff:	test   edx,edx
  40a701:	jne    0x40a712
  40a703:	xor    eax,eax
  40a705:	test   r8,r8
  40a708:	jne    0x40a712
  40a70a:	add    rsp,0x40
  40a70e:	pop    rbx
  40a70f:	pop    rsi
  40a710:	pop    rdi
  40a711:	ret    
  40a712:	mov    rcx,QWORD PTR [rbx+0x58]
  40a716:	mov    DWORD PTR [rsp+0x30],edx
  40a71a:	lea    rdx,[rsp+0x30]
  40a71f:	mov    QWORD PTR [rsp+0x38],r8
  40a724:	mov    r8d,0x1
  40a72a:	call   0x439020
  40a72f:	mov    rdx,QWORD PTR [rax]
  40a732:	mov    rsi,rax
  40a735:	test   rdx,rdx
  40a738:	je     0x40a755
  40a73a:	mov    rax,QWORD PTR [rbx+0x68]
  40a73e:	sub    rdx,rax
  40a741:	mov    rax,rdx
  40a744:	sar    rax,0x4
  40a748:	or     eax,0x80000000
  40a74d:	add    rsp,0x40
  40a751:	pop    rbx
  40a752:	pop    rsi
  40a753:	pop    rdi
  40a754:	ret    
  40a755:	mov    edx,DWORD PTR [rbx+0x60]
  40a758:	mov    eax,DWORD PTR [rbx+0x64]
  40a75b:	cmp    edx,eax
  40a75d:	jb     0x40a7b0
  40a75f:	mov    r8,QWORD PTR [rbx+0x48]
  40a763:	lea    rdx,[rip+0x31406]        # 0x43bb70
  40a76a:	mov    rdi,QWORD PTR [rbx+0x68]
  40a76e:	test   r8,r8
  40a771:	cmove  r8,rdx
  40a775:	test   eax,eax
  40a777:	jne    0x40a7e5
  40a779:	mov    DWORD PTR [rbx+0x64],0x80
  40a780:	mov    edx,0x800
  40a785:	mov    rcx,rdi
  40a788:	call   r8
  40a78b:	mov    rdx,rax
  40a78e:	mov    QWORD PTR [rbx+0x68],rax
  40a792:	sub    rdx,rdi
  40a795:	cmp    DWORD PTR [rbx+0x64],0x80
  40a79c:	mov    QWORD PTR [rsp+0x28],rdx
  40a7a1:	ja     0x40a7f1
  40a7a3:	mov    edx,DWORD PTR [rbx+0x60]
  40a7a6:	jmp    0x40a7b4
  40a7a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a7b0:	mov    rax,QWORD PTR [rbx+0x68]
  40a7b4:	mov    ecx,edx
  40a7b6:	add    edx,0x1
  40a7b9:	shl    rcx,0x4
  40a7bd:	add    rax,rcx
  40a7c0:	mov    QWORD PTR [rsi],rax
  40a7c3:	mov    rax,QWORD PTR [rbx+0x68]
  40a7c7:	mov    r9,QWORD PTR [rsp+0x30]
  40a7cc:	mov    r10,QWORD PTR [rsp+0x38]
  40a7d1:	mov    DWORD PTR [rbx+0x60],edx
  40a7d4:	mov    QWORD PTR [rax+rcx*1],r9
  40a7d8:	mov    QWORD PTR [rax+rcx*1+0x8],r10
  40a7dd:	mov    rdx,QWORD PTR [rsi]
  40a7e0:	jmp    0x40a73e
  40a7e5:	lea    edx,[rax+rax*1]
  40a7e8:	mov    DWORD PTR [rbx+0x64],edx
  40a7eb:	shl    rdx,0x4
  40a7ef:	jmp    0x40a785
  40a7f1:	mov    rcx,QWORD PTR [rbx+0x58]
  40a7f5:	lea    r8,[rsp+0x28]
  40a7fa:	lea    rdx,[rip+0xfffffffffffffcff]        # 0x40a500
  40a801:	call   0x439160
  40a806:	mov    rax,QWORD PTR [rbx+0x68]
  40a80a:	jmp    0x40a7a3
  40a80c:	nop    DWORD PTR [rax+0x0]
  40a810:	and    edx,0x7fffffff
  40a816:	shl    rdx,0x4
  40a81a:	add    rdx,QWORD PTR [rcx+0x68]
  40a81e:	mov    rax,QWORD PTR [rdx+0x8]
  40a822:	ret    
  40a823:	nop    DWORD PTR [rax]
  40a826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a830:	and    edx,0x7fffffff
  40a836:	shl    rdx,0x4
  40a83a:	add    rdx,QWORD PTR [rcx+0x68]
  40a83e:	mov    eax,DWORD PTR [rdx]
  40a840:	ret    
  40a841:	nop    DWORD PTR [rax+rax*1+0x0]
  40a846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a850:	mov    rcx,QWORD PTR [rcx+0x58]
  40a854:	jmp    0x438b00
  40a859:	nop    DWORD PTR [rax+0x0]
  40a860:	push   rdi
  40a861:	push   rbx
  40a862:	sub    rsp,0x28
  40a866:	xor    eax,eax
  40a868:	lea    r8,[rip+0xfffffffffffffc71]        # 0x40a4e0
  40a86f:	xor    r9d,r9d
  40a872:	lea    rdi,[rcx+0x8]
  40a876:	mov    rdx,rcx
  40a879:	mov    rbx,rcx
  40a87c:	mov    QWORD PTR [rcx],0x0
  40a883:	mov    QWORD PTR [rcx+0x68],0x0
  40a88b:	and    rdi,0xfffffffffffffff8
  40a88f:	sub    rdx,rdi
  40a892:	add    edx,0x70
  40a895:	shr    edx,0x3
  40a898:	mov    ecx,edx
  40a89a:	lea    rdx,[rip+0xfffffffffffffc2f]        # 0x40a4d0
  40a8a1:	rep stos QWORD PTR es:[rdi],rax
  40a8a4:	mov    DWORD PTR [rbx+0x38],0x1
  40a8ab:	mov    DWORD PTR [rbx+0x3c],0x1
  40a8b2:	mov    cl,0x64
  40a8b4:	call   0x438aa0
  40a8b9:	mov    QWORD PTR [rbx+0x58],rax
  40a8bd:	add    rsp,0x28
  40a8c1:	pop    rbx
  40a8c2:	pop    rdi
  40a8c3:	ret    
  40a8c4:	xchg   ax,ax
  40a8c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a8d0:	push   rbp
  40a8d1:	push   rdi
  40a8d2:	push   rsi
  40a8d3:	push   rbx
  40a8d4:	sub    rsp,0x28
  40a8d8:	mov    eax,DWORD PTR [rcx+0xc]
  40a8db:	mov    rdi,QWORD PTR [rip+0x59e52]        # 0x464734
  40a8e2:	mov    rbp,rcx
  40a8e5:	sub    eax,0x1
  40a8e8:	lea    rdx,[rax+rax*4]
  40a8ec:	mov    rax,QWORD PTR [rcx]
  40a8ef:	lea    rbx,[rax+rdx*8]
  40a8f3:	mov    eax,DWORD PTR [rbx+0x14]
  40a8f6:	test   eax,eax
  40a8f8:	js     0x40a931
  40a8fa:	mov    rsi,QWORD PTR [rbx+0x8]
  40a8fe:	call   rdi
  40a900:	lea    rdx,[rip+0x436e9]        # 0x44dff0
  40a907:	lea    rcx,[rax+0x60]
  40a90b:	mov    r8,rsi
  40a90e:	call   0x4498d0
  40a913:	movsxd rax,DWORD PTR [rbx+0x14]
  40a917:	xor    ebx,ebx
  40a919:	cmp    eax,0xffffffff
  40a91c:	je     0x40a8f3
  40a91e:	lea    rdx,[rax+rax*4]
  40a922:	mov    rax,QWORD PTR [rbp+0x0]
  40a926:	lea    rbx,[rax+rdx*8]
  40a92a:	mov    eax,DWORD PTR [rbx+0x14]
  40a92d:	test   eax,eax
  40a92f:	jns    0x40a8fa
  40a931:	add    rsp,0x28
  40a935:	pop    rbx
  40a936:	pop    rsi
  40a937:	pop    rdi
  40a938:	pop    rbp
  40a939:	ret    
  40a93a:	nop    WORD PTR [rax+rax*1+0x0]
  40a940:	push   r15
  40a942:	push   r14
  40a944:	push   r13
  40a946:	push   r12
  40a948:	push   rbp
  40a949:	push   rdi
  40a94a:	push   rsi
  40a94b:	push   rbx
  40a94c:	sub    rsp,0x28
  40a950:	mov    eax,DWORD PTR [rcx+0x38]
  40a953:	mov    r13d,DWORD PTR [rsp+0x90]
  40a95b:	cmp    edx,0x1
  40a95e:	mov    rbx,rcx
  40a961:	mov    edi,edx
  40a963:	mov    r14d,r8d
  40a966:	mov    r12,r9
  40a969:	lea    ebp,[rax+0x1]
  40a96c:	je     0x40aa55
  40a972:	call   0x40a510
  40a977:	test   r12,r12
  40a97a:	mov    rsi,rax
  40a97d:	je     0x40ab10
  40a983:	cmp    BYTE PTR [r12],0x0
  40a988:	jne    0x40aa11
  40a98e:	cmp    edi,0x3
  40a991:	je     0x40aa16
  40a997:	lea    r12,[rip+0x4367e]        # 0x44e01c
  40a99e:	cmp    edi,0x1
  40a9a1:	je     0x40aa94
  40a9a7:	mov    BYTE PTR [rsi+0x18],r14b
  40a9ab:	mov    QWORD PTR [rsi+0x8],r12
  40a9af:	mov    DWORD PTR [rsi+0x10],r13d
  40a9b3:	mov    eax,DWORD PTR [rbx+0xc]
  40a9b6:	mov    DWORD PTR [rsi],ebp
  40a9b8:	sub    eax,0x1
  40a9bb:	test   edi,edi
  40a9bd:	mov    DWORD PTR [rbx+0x10],eax
  40a9c0:	mov    BYTE PTR [rsi+0x1c],0x0
  40a9c4:	mov    DWORD PTR [rbx+0x38],ebp
  40a9c7:	mov    DWORD PTR [rbx+0x3c],ebp
  40a9ca:	mov    DWORD PTR [rbx+0x40],0x0
  40a9d1:	jne    0x40aa20
  40a9d3:	mov    r8d,DWORD PTR [rbx+0x30]
  40a9d7:	mov    eax,0xffffffff
  40a9dc:	test   r8d,r8d
  40a9df:	je     0x40a9e7
  40a9e1:	mov    eax,DWORD PTR [rbx+0xc]
  40a9e4:	sub    eax,0x2
  40a9e7:	mov    DWORD PTR [rsi+0x14],eax
  40a9ea:	mov    edi,DWORD PTR [rbx+0x30]
  40a9ed:	cmp    BYTE PTR [rbx+0x34],0x0
  40a9f1:	lea    eax,[rdi+0x1]
  40a9f4:	mov    DWORD PTR [rbx+0x30],eax
  40a9f7:	mov    rax,rsi
  40a9fa:	jne    0x40ab20
  40aa00:	add    rsp,0x28
  40aa04:	pop    rbx
  40aa05:	pop    rsi
  40aa06:	pop    rdi
  40aa07:	pop    rbp
  40aa08:	pop    r12
  40aa0a:	pop    r13
  40aa0c:	pop    r14
  40aa0e:	pop    r15
  40aa10:	ret    
  40aa11:	cmp    edi,0x3
  40aa14:	jne    0x40a99e
  40aa16:	mov    edi,0x2
  40aa1b:	jmp    0x40a9a7
  40aa1d:	nop    DWORD PTR [rax]
  40aa20:	cmp    edi,0x2
  40aa23:	je     0x40ab70
  40aa29:	cmp    edi,0x1
  40aa2c:	mov    rax,rsi
  40aa2f:	jne    0x40aa00
  40aa31:	sub    DWORD PTR [rbx+0x30],0x1
  40aa35:	movsxd rdx,DWORD PTR [rsi-0x14]
  40aa39:	cmp    edx,0xffffffff
  40aa3c:	je     0x40aba0
  40aa42:	mov    rcx,QWORD PTR [rbx]
  40aa45:	lea    rdx,[rdx+rdx*4]
  40aa49:	lea    rdx,[rcx+rdx*8]
  40aa4d:	mov    edx,DWORD PTR [rdx+0x14]
  40aa50:	mov    DWORD PTR [rsi+0x14],edx
  40aa53:	jmp    0x40aa00
  40aa55:	mov    eax,DWORD PTR [rcx+0xc]
  40aa58:	mov    r9,QWORD PTR [rcx]
  40aa5b:	sub    eax,0x1
  40aa5e:	lea    rax,[rax+rax*4]
  40aa62:	lea    rax,[r9+rax*8]
  40aa66:	mov    r10d,DWORD PTR [rax+0x14]
  40aa6a:	test   r10d,r10d
  40aa6d:	js     0x40ab80
  40aa73:	mov    edx,0x1
  40aa78:	call   0x40a510
  40aa7d:	test   r12,r12
  40aa80:	mov    rsi,rax
  40aa83:	je     0x40abb0
  40aa89:	cmp    BYTE PTR [r12],0x0
  40aa8e:	je     0x40a997
  40aa94:	movsxd rax,DWORD PTR [rsi-0x14]
  40aa98:	test   eax,eax
  40aa9a:	js     0x40abc0
  40aaa0:	lea    rdx,[rax+rax*4]
  40aaa4:	mov    rax,QWORD PTR [rbx]
  40aaa7:	test   r12,r12
  40aaaa:	lea    r15,[rax+rdx*8]
  40aaae:	je     0x40abe0
  40aab4:	mov    rcx,QWORD PTR [r15+0x8]
  40aab8:	mov    rdx,r12
  40aabb:	mov    edi,0x1
  40aac0:	call   0x438360
  40aac5:	test   eax,eax
  40aac7:	je     0x40a9a7
  40aacd:	call   QWORD PTR [rip+0x59c61]        # 0x464734
  40aad3:	lea    rdx,[rip+0x43556]        # 0x44e030
  40aada:	lea    rcx,[rax+0x60]
  40aade:	mov    r8,r12
  40aae1:	call   0x4498d0
  40aae6:	mov    r13d,DWORD PTR [r15+0x28]
  40aaea:	movzx  ecx,BYTE PTR [r15+0x1c]
  40aaef:	sub    r13d,DWORD PTR [r15]
  40aaf2:	mov    r12,QWORD PTR [r15+0x8]
  40aaf6:	movzx  r14d,BYTE PTR [r15+0x18]
  40aafb:	shr    r13d,cl
  40aafe:	add    r13d,DWORD PTR [r15+0x10]
  40ab02:	jmp    0x40a9a7
  40ab07:	nop    WORD PTR [rax+rax*1+0x0]
  40ab10:	cmp    edi,0x3
  40ab13:	jne    0x40a9a7
  40ab19:	jmp    0x40aa16
  40ab1e:	xchg   ax,ax
  40ab20:	test   edi,edi
  40ab22:	mov    rbx,QWORD PTR [rip+0x59c0b]        # 0x464734
  40ab29:	je     0x40ab49
  40ab2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab30:	call   rbx
  40ab32:	lea    rdx,[rax+0x60]
  40ab36:	mov    ecx,0x2e
  40ab3b:	call   0x449438
  40ab40:	sub    edi,0x1
  40ab43:	jne    0x40ab30
  40ab45:	mov    r12,QWORD PTR [rsi+0x8]
  40ab49:	call   rbx
  40ab4b:	lea    rdx,[rip+0x434d2]        # 0x44e024
  40ab52:	lea    rcx,[rax+0x60]
  40ab56:	mov    r8,r12
  40ab59:	call   0x4498d0
  40ab5e:	mov    rax,rsi
  40ab61:	jmp    0x40aa00
  40ab66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab70:	mov    eax,DWORD PTR [rsi-0x14]
  40ab73:	mov    DWORD PTR [rsi+0x14],eax
  40ab76:	mov    rax,rsi
  40ab79:	jmp    0x40aa00
  40ab7e:	xchg   ax,ax
  40ab80:	test   r12,r12
  40ab83:	je     0x40abea
  40ab85:	mov    edx,0x1
  40ab8a:	call   0x40a510
  40ab8f:	mov    rsi,rax
  40ab92:	jmp    0x40aa89
  40ab97:	nop    WORD PTR [rax+rax*1+0x0]
  40aba0:	mov    eax,DWORD PTR ds:0x14
  40aba7:	ud2    
  40aba9:	nop    DWORD PTR [rax+0x0]
  40abb0:	mov    eax,DWORD PTR [rax-0x14]
  40abb3:	test   eax,eax
  40abb5:	jns    0x40abce
  40abb7:	nop    WORD PTR [rax+rax*1+0x0]
  40abc0:	lea    r15,[rsi-0x28]
  40abc4:	mov    edi,0x2
  40abc9:	jmp    0x40aacd
  40abce:	movsxd r15,eax
  40abd1:	imul   r15,r15,0x28
  40abd5:	add    r15,QWORD PTR [rbx]
  40abd8:	jmp    0x40aae6
  40abdd:	nop    DWORD PTR [rax]
  40abe0:	mov    edi,0x1
  40abe5:	jmp    0x40aae6
  40abea:	sub    DWORD PTR [rcx+0x30],0x1
  40abee:	xor    eax,eax
  40abf0:	jmp    0x40aa00
  40abf5:	nop
  40abf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac00:	cmp    QWORD PTR [rcx+0x18],0x0
  40ac05:	setne  al
  40ac08:	ret    
  40ac09:	nop    DWORD PTR [rax+0x0]
  40ac10:	push   r14
  40ac12:	push   r13
  40ac14:	push   r12
  40ac16:	push   rbp
  40ac17:	push   rdi
  40ac18:	push   rsi
  40ac19:	push   rbx
  40ac1a:	sub    rsp,0x20
  40ac1e:	mov    rdi,QWORD PTR [rcx+0x48]
  40ac22:	lea    rax,[rip+0x30f47]        # 0x43bb70
  40ac29:	test   rdi,rdi
  40ac2c:	cmove  rdi,rax
  40ac30:	mov    eax,DWORD PTR [rcx+0x24]
  40ac33:	test   eax,eax
  40ac35:	je     0x40acd0
  40ac3b:	sub    eax,0x1
  40ac3e:	mov    r10,QWORD PTR [rcx+0x18]
  40ac42:	lea    rax,[rax+rax*4]
  40ac46:	lea    rax,[r10+rax*8]
  40ac4a:	mov    r10d,DWORD PTR [rax]
  40ac4d:	mov    ebp,r10d
  40ac50:	sub    ebp,r9d
  40ac53:	cmp    DWORD PTR [rcx+0x3c],ebp
  40ac56:	jae    0x40acf0
  40ac5c:	xor    eax,eax
  40ac5e:	cmp    r10d,ebp
  40ac61:	jb     0x40acb9
  40ac63:	mov    esi,r9d
  40ac66:	mov    r14,rdx
  40ac69:	mov    edx,0x4
  40ac6e:	mov    r13d,r8d
  40ac71:	mov    r12,rcx
  40ac74:	call   0x40a510
  40ac79:	lea    edx,[rsi+rsi*1]
  40ac7c:	mov    rbx,rax
  40ac7f:	xor    ecx,ecx
  40ac81:	mov    DWORD PTR [rax],ebp
  40ac83:	mov    QWORD PTR [rax+0x8],r14
  40ac87:	shl    rdx,0x2
  40ac8b:	mov    DWORD PTR [rax+0x10],esi
  40ac8e:	call   rdi
  40ac90:	mov    r8d,esi
  40ac93:	mov    QWORD PTR [rbx+0x18],rax
  40ac97:	mov    DWORD PTR [rbx+0x20],r13d
  40ac9b:	shl    r8,0x2
  40ac9f:	xor    edx,edx
  40aca1:	mov    rcx,rax
  40aca4:	call   0x449440
  40aca9:	mov    eax,DWORD PTR [r12+0x24]
  40acae:	sub    eax,0x1
  40acb1:	mov    DWORD PTR [r12+0x28],eax
  40acb6:	mov    rax,rbx
  40acb9:	add    rsp,0x20
  40acbd:	pop    rbx
  40acbe:	pop    rsi
  40acbf:	pop    rdi
  40acc0:	pop    rbp
  40acc1:	pop    r12
  40acc3:	pop    r13
  40acc5:	pop    r14
  40acc7:	ret    
  40acc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40acd0:	mov    ebp,0x7fffffff
  40acd5:	sub    ebp,r9d
  40acd8:	cmp    DWORD PTR [rcx+0x3c],ebp
  40acdb:	jae    0x40acf0
  40acdd:	mov    r10d,0x7fffffff
  40ace3:	jmp    0x40ac5c
  40ace8:	nop    DWORD PTR [rax+rax*1+0x0]
  40acf0:	xor    eax,eax
  40acf2:	add    rsp,0x20
  40acf6:	pop    rbx
  40acf7:	pop    rsi
  40acf8:	pop    rdi
  40acf9:	pop    rbp
  40acfa:	pop    r12
  40acfc:	pop    r13
  40acfe:	pop    r14
  40ad00:	ret    
  40ad01:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad10:	mov    r10,QWORD PTR [rcx+0x18]
  40ad14:	lea    r11d,[rdx+rdx*1]
  40ad18:	mov    DWORD PTR [r10+r11*4],r8d
  40ad1c:	mov    rax,QWORD PTR [rcx+0x18]
  40ad20:	lea    r8d,[r11+0x1]
  40ad24:	mov    DWORD PTR [rax+r8*4],r9d
  40ad28:	mov    eax,DWORD PTR [rcx]
  40ad2a:	add    eax,edx
  40ad2c:	ret    
  40ad2d:	nop    DWORD PTR [rax]
  40ad30:	push   r15
  40ad32:	push   r14
  40ad34:	push   r13
  40ad36:	push   r12
  40ad38:	push   rbp
  40ad39:	push   rdi
  40ad3a:	push   rsi
  40ad3b:	push   rbx
  40ad3c:	sub    rsp,0x38
  40ad40:	mov    eax,DWORD PTR [rcx+0xc]
  40ad43:	mov    r9d,DWORD PTR [rcx+0x3c]
  40ad47:	mov    r12d,edx
  40ad4a:	mov    rbx,rcx
  40ad4d:	mov    r14d,DWORD PTR [rcx+0x38]
  40ad51:	mov    r10d,r12d
  40ad54:	sub    eax,0x1
  40ad57:	lea    rdx,[rax+rax*4]
  40ad5b:	mov    rax,QWORD PTR [rcx]
  40ad5e:	lea    r11,[rax+rdx*8]
  40ad62:	movzx  eax,BYTE PTR [r11+0x1c]
  40ad67:	mov    edx,DWORD PTR [r11]
  40ad6a:	mov    r15d,DWORD PTR [r11+0x10]
  40ad6e:	sub    r9d,edx
  40ad71:	mov    ecx,eax
  40ad73:	mov    ebp,eax
  40ad75:	shr    r9d,cl
  40ad78:	add    r9d,r15d
  40ad7b:	sub    r10d,r9d
  40ad7e:	js     0x40ad99
  40ad80:	cmp    r10d,0xa
  40ad84:	jle    0x40ae70
  40ad8a:	imul   eax,r10d
  40ad8e:	cmp    eax,0x3e8
  40ad93:	jle    0x40ae70
  40ad99:	cmp    r8d,0x186a0
  40ada0:	ja     0x40aec0
  40ada6:	cmp    r14d,0x60000000
  40adad:	ja     0x40aec0
  40adb3:	cmp    r8d,0x7f
  40adb7:	mov    esi,0x7
  40adbc:	mov    eax,0x1
  40adc1:	mov    r13d,0x7
  40adc7:	mov    edi,0x80
  40adcc:	jbe    0x40ade1
  40adce:	xchg   ax,ax
  40add0:	add    esi,0x1
  40add3:	mov    edi,eax
  40add5:	mov    ecx,esi
  40add7:	shl    edi,cl
  40add9:	cmp    r8d,edi
  40addc:	jae    0x40add0
  40adde:	mov    r13d,esi
  40ade1:	shr    r10d,0x1f
  40ade5:	test   r10b,r10b
  40ade8:	jne    0x40adf3
  40adea:	cmp    r15d,r9d
  40aded:	je     0x40aee0
  40adf3:	movzx  r8d,BYTE PTR [r11+0x18]
  40adf8:	mov    r9,QWORD PTR [r11+0x8]
  40adfc:	mov    edx,0x2
  40ae01:	mov    DWORD PTR [rsp+0x20],r12d
  40ae06:	mov    rcx,rbx
  40ae09:	call   0x40a940
  40ae0e:	mov    edx,DWORD PTR [rax]
  40ae10:	mov    r15d,DWORD PTR [rax+0x10]
  40ae14:	mov    r11,rax
  40ae17:	mov    eax,r12d
  40ae1a:	mov    ecx,esi
  40ae1c:	mov    BYTE PTR [r11+0x1c],r13b
  40ae20:	sub    eax,r15d
  40ae23:	shl    eax,cl
  40ae25:	add    eax,edx
  40ae27:	mov    ecx,DWORD PTR [rbx+0x24]
  40ae2a:	mov    edx,0x7fffffff
  40ae2f:	test   ecx,ecx
  40ae31:	je     0x40ae44
  40ae33:	lea    edx,[rcx-0x1]
  40ae36:	mov    rcx,QWORD PTR [rbx+0x18]
  40ae3a:	lea    rdx,[rdx+rdx*4]
  40ae3e:	lea    rdx,[rcx+rdx*8]
  40ae42:	mov    edx,DWORD PTR [rdx]
  40ae44:	cmp    eax,edx
  40ae46:	jae    0x40aed5
  40ae4c:	cmp    eax,DWORD PTR [rbx+0x38]
  40ae4f:	mov    DWORD PTR [rbx+0x3c],eax
  40ae52:	jbe    0x40ae57
  40ae54:	mov    DWORD PTR [rbx+0x38],eax
  40ae57:	mov    DWORD PTR [rbx+0x40],edi
  40ae5a:	add    rsp,0x38
  40ae5e:	pop    rbx
  40ae5f:	pop    rsi
  40ae60:	pop    rdi
  40ae61:	pop    rbp
  40ae62:	pop    r12
  40ae64:	pop    r13
  40ae66:	pop    r14
  40ae68:	pop    r15
  40ae6a:	ret    
  40ae6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae70:	mov    eax,0x1
  40ae75:	mov    ecx,ebp
  40ae77:	shl    eax,cl
  40ae79:	cmp    eax,r8d
  40ae7c:	jbe    0x40ad99
  40ae82:	cmp    r8d,0x50
  40ae86:	ja     0x40ae92
  40ae88:	cmp    bpl,0x9
  40ae8c:	ja     0x40ad99
  40ae92:	cmp    r14d,0x60000000
  40ae99:	ja     0x40af05
  40ae9b:	mov    edi,DWORD PTR [rbx+0x40]
  40ae9e:	mov    ecx,ebp
  40aea0:	mov    eax,0x1
  40aea5:	mov    esi,r14d
  40aea8:	shl    eax,cl
  40aeaa:	sub    esi,edx
  40aeac:	shl    r10d,cl
  40aeaf:	sub    eax,0x1
  40aeb2:	and    eax,esi
  40aeb4:	sub    r14d,eax
  40aeb7:	lea    eax,[r14+r10*1]
  40aebb:	jmp    0x40ae27
  40aec0:	cmp    r14d,0x70000000
  40aec7:	ja     0x40aed5
  40aec9:	xor    r13d,r13d
  40aecc:	xor    esi,esi
  40aece:	xor    edi,edi
  40aed0:	jmp    0x40ade1
  40aed5:	xor    eax,eax
  40aed7:	jmp    0x40ae5a
  40aedc:	nop    DWORD PTR [rax+0x0]
  40aee0:	mov    ecx,ebp
  40aee2:	mov    eax,0x1
  40aee7:	sub    r14d,edx
  40aeea:	shl    eax,cl
  40aeec:	mov    ecx,esi
  40aeee:	sub    eax,0x1
  40aef1:	and    r14d,eax
  40aef4:	shr    r14d,cl
  40aef7:	test   r14d,r14d
  40aefa:	je     0x40ae17
  40af00:	jmp    0x40adf3
  40af05:	mov    r8d,DWORD PTR [rbx+0x40]
  40af09:	test   r8d,r8d
  40af0c:	jne    0x40aec0
  40af0e:	cmp    r14d,0x70000000
  40af15:	ja     0x40aec0
  40af17:	xor    edi,edi
  40af19:	jmp    0x40ae9e
  40af1e:	xchg   ax,ax
  40af20:	push   rsi
  40af21:	push   rbx
  40af22:	sub    rsp,0x28
  40af26:	cmp    DWORD PTR [rcx+0x40],edx
  40af29:	mov    eax,DWORD PTR [rcx+0x3c]
  40af2c:	mov    rbx,rcx
  40af2f:	mov    esi,edx
  40af31:	ja     0x40af6c
  40af33:	cmp    edx,0x186a0
  40af39:	ja     0x40af76
  40af3b:	cmp    eax,0xbffffff
  40af40:	ja     0x40af76
  40af42:	mov    edx,DWORD PTR [rcx+0xc]
  40af45:	lea    r8d,[rsi+0x32]
  40af49:	sub    edx,0x1
  40af4c:	lea    rcx,[rdx+rdx*4]
  40af50:	mov    rdx,QWORD PTR [rbx]
  40af53:	lea    rdx,[rdx+rcx*8]
  40af57:	movzx  ecx,BYTE PTR [rdx+0x1c]
  40af5b:	sub    eax,DWORD PTR [rdx]
  40af5d:	shr    eax,cl
  40af5f:	add    eax,DWORD PTR [rdx+0x10]
  40af62:	mov    rcx,rbx
  40af65:	mov    edx,eax
  40af67:	call   0x40ad30
  40af6c:	add    eax,esi
  40af6e:	cmp    eax,DWORD PTR [rbx+0x38]
  40af71:	jb     0x40af76
  40af73:	mov    DWORD PTR [rbx+0x38],eax
  40af76:	add    rsp,0x28
  40af7a:	pop    rbx
  40af7b:	pop    rsi
  40af7c:	ret    
  40af7d:	nop    DWORD PTR [rax]
  40af80:	mov    r9d,0x1
  40af86:	mov    r10,rcx
  40af89:	movzx  ecx,BYTE PTR [rcx+0x1c]
  40af8d:	mov    eax,edx
  40af8f:	sub    eax,DWORD PTR [r10+0x10]
  40af93:	shl    r9d,cl
  40af96:	sub    r9d,0x1
  40af9a:	shl    eax,cl
  40af9c:	and    r8d,r9d
  40af9f:	add    eax,r8d
  40afa2:	add    eax,DWORD PTR [r10]
  40afa5:	ret    
  40afa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40afb0:	mov    eax,edx
  40afb2:	and    eax,0x7fffffff
  40afb7:	cmp    eax,edx
  40afb9:	je     0x40b061
  40afbf:	mov    r8,QWORD PTR [rcx+0x68]
  40afc3:	shl    rax,0x4
  40afc7:	mov    edx,DWORD PTR [r8+rax*1]
  40afcb:	mov    eax,edx
  40afcd:	and    eax,0x7fffffff
  40afd2:	cmp    edx,eax
  40afd4:	je     0x40b068
  40afda:	shl    rax,0x4
  40afde:	mov    edx,DWORD PTR [r8+rax*1]
  40afe2:	cmp    edx,DWORD PTR [rcx+0x38]
  40afe5:	ja     0x40b071
  40afeb:	cmp    edx,0x1
  40afee:	jbe    0x40b0ed
  40aff4:	test   rcx,rcx
  40aff7:	je     0x40b0ed
  40affd:	mov    eax,DWORD PTR [rcx+0x10]
  40b000:	mov    r11,QWORD PTR [rcx]
  40b003:	mov    r10d,DWORD PTR [rcx+0xc]
  40b007:	mov    r9,rax
  40b00a:	lea    rax,[rax+rax*4]
  40b00e:	lea    rax,[r11+rax*8]
  40b012:	cmp    edx,DWORD PTR [rax]
  40b014:	jb     0x40b0d0
  40b01a:	lea    r8d,[r9+0x1]
  40b01e:	cmp    r10d,r8d
  40b021:	je     0x40b02e
  40b023:	cmp    edx,DWORD PTR [rax+0x28]
  40b026:	mov    r8d,r9d
  40b029:	mov    r9d,r10d
  40b02c:	jae    0x40b049
  40b02e:	repz ret 
  40b030:	lea    eax,[r9+r8*1]
  40b034:	shr    eax,1
  40b036:	mov    r10d,eax
  40b039:	lea    r10,[r10+r10*4]
  40b03d:	cmp    edx,DWORD PTR [r11+r10*8]
  40b041:	cmovae r8,rax
  40b045:	cmovb  r9d,eax
  40b049:	mov    eax,r9d
  40b04c:	sub    eax,r8d
  40b04f:	cmp    eax,0x1
  40b052:	ja     0x40b030
  40b054:	lea    rax,[r8+r8*4]
  40b058:	mov    DWORD PTR [rcx+0x10],r8d
  40b05c:	lea    rax,[r11+rax*8]
  40b060:	ret    
  40b061:	xor    eax,eax
  40b063:	test   rcx,rcx
  40b066:	je     0x40b02e
  40b068:	cmp    edx,DWORD PTR [rcx+0x38]
  40b06b:	jbe    0x40afeb
  40b071:	mov    eax,DWORD PTR [rcx+0x28]
  40b074:	mov    r11,QWORD PTR [rcx+0x18]
  40b078:	mov    r9d,DWORD PTR [rcx+0x24]
  40b07c:	mov    r8,rax
  40b07f:	lea    rax,[rax+rax*4]
  40b083:	lea    r10,[r11+rax*8]
  40b087:	cmp    DWORD PTR [r10],edx
  40b08a:	ja     0x40b0a7
  40b08c:	test   r8d,r8d
  40b08f:	mov    rax,r10
  40b092:	je     0x40b02e
  40b094:	cmp    DWORD PTR [r10-0x28],edx
  40b098:	ja     0x40b02e
  40b09a:	lea    r9d,[r8-0x1]
  40b09e:	xor    r8d,r8d
  40b0a1:	jmp    0x40b0a7
  40b0a3:	lea    r8d,[rax+0x1]
  40b0a7:	cmp    r9d,r8d
  40b0aa:	jbe    0x40b0e0
  40b0ac:	lea    eax,[r8+r9*1]
  40b0b0:	shr    eax,1
  40b0b2:	mov    r10d,eax
  40b0b5:	lea    r10,[r10+r10*4]
  40b0b9:	cmp    DWORD PTR [r11+r10*8],edx
  40b0bd:	ja     0x40b0a3
  40b0bf:	cmp    r8d,eax
  40b0c2:	mov    r9d,eax
  40b0c5:	jae    0x40b0e0
  40b0c7:	add    eax,r8d
  40b0ca:	jmp    0x40b0b0
  40b0cc:	nop    DWORD PTR [rax+0x0]
  40b0d0:	xor    r8d,r8d
  40b0d3:	jmp    0x40b049
  40b0d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b0e0:	lea    rax,[r9+r9*4]
  40b0e4:	mov    DWORD PTR [rcx+0x28],r9d
  40b0e8:	lea    rax,[r11+rax*8]
  40b0ec:	ret    
  40b0ed:	xor    eax,eax
  40b0ef:	ret    
  40b0f0:	push   rdi
  40b0f1:	push   rsi
  40b0f2:	push   rbx
  40b0f3:	sub    rsp,0x20
  40b0f7:	mov    eax,edx
  40b0f9:	mov    rsi,rcx
  40b0fc:	mov    ebx,edx
  40b0fe:	and    eax,0x7fffffff
  40b103:	mov    rdi,r8
  40b106:	cmp    eax,edx
  40b108:	je     0x40b129
  40b10a:	shl    rax,0x4
  40b10e:	add    rax,QWORD PTR [rcx+0x68]
  40b112:	mov    ebx,DWORD PTR [rax]
  40b114:	jmp    0x40b129
  40b116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b120:	cmp    BYTE PTR [rax+0x4],0x4
  40b124:	jne    0x40b138
  40b126:	mov    ebx,DWORD PTR [rax+0x20]
  40b129:	mov    edx,ebx
  40b12b:	mov    rcx,rsi
  40b12e:	call   0x40afb0
  40b133:	test   rax,rax
  40b136:	jne    0x40b120
  40b138:	test   rdi,rdi
  40b13b:	je     0x40b140
  40b13d:	mov    QWORD PTR [rdi],rax
  40b140:	mov    eax,ebx
  40b142:	add    rsp,0x20
  40b146:	pop    rbx
  40b147:	pop    rsi
  40b148:	pop    rdi
  40b149:	ret    
  40b14a:	nop    WORD PTR [rax+rax*1+0x0]
  40b150:	test   rcx,rcx
  40b153:	je     0x40b160
  40b155:	cmp    BYTE PTR [rcx+0x4],0x4
  40b159:	sete   al
  40b15c:	ret    
  40b15d:	nop    DWORD PTR [rax]
  40b160:	xor    eax,eax
  40b162:	ret    
  40b163:	nop    DWORD PTR [rax]
  40b166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b170:	sub    rsp,0x38
  40b174:	mov    eax,edx
  40b176:	mov    QWORD PTR [rsp+0x28],0x0
  40b17f:	and    eax,0x7fffffff
  40b184:	cmp    eax,edx
  40b186:	je     0x40b192
  40b188:	shl    rax,0x4
  40b18c:	add    rax,QWORD PTR [rcx+0x68]
  40b190:	mov    edx,DWORD PTR [rax]
  40b192:	xor    eax,eax
  40b194:	cmp    edx,0x1
  40b197:	jbe    0x40b1b3
  40b199:	lea    r8,[rsp+0x28]
  40b19e:	call   0x40b0f0
  40b1a3:	mov    rdx,QWORD PTR [rsp+0x28]
  40b1a8:	sub    eax,DWORD PTR [rdx]
  40b1aa:	movzx  ecx,BYTE PTR [rdx+0x1c]
  40b1ae:	shr    eax,cl
  40b1b0:	add    eax,DWORD PTR [rdx+0x10]
  40b1b3:	add    rsp,0x38
  40b1b7:	ret    
  40b1b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1c0:	sub    rsp,0x38
  40b1c4:	mov    eax,edx
  40b1c6:	mov    QWORD PTR [rsp+0x28],0x0
  40b1cf:	and    eax,0x7fffffff
  40b1d4:	cmp    eax,edx
  40b1d6:	je     0x40b1e2
  40b1d8:	shl    rax,0x4
  40b1dc:	add    rax,QWORD PTR [rcx+0x68]
  40b1e0:	mov    edx,DWORD PTR [rax]
  40b1e2:	cmp    edx,0x1
  40b1e5:	jbe    0x40b200
  40b1e7:	lea    r8,[rsp+0x28]
  40b1ec:	call   0x40b0f0
  40b1f1:	mov    rax,QWORD PTR [rsp+0x28]
  40b1f6:	mov    rax,QWORD PTR [rax+0x8]
  40b1fa:	add    rsp,0x38
  40b1fe:	ret    
  40b1ff:	nop
  40b200:	xor    eax,eax
  40b202:	jmp    0x40b1fa
  40b204:	xchg   ax,ax
  40b206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b210:	mov    rax,QWORD PTR [rcx+0x8]
  40b214:	mov    rax,QWORD PTR [rax]
  40b217:	ret    
  40b218:	nop    DWORD PTR [rax+rax*1+0x0]
  40b220:	push   rsi
  40b221:	push   rbx
  40b222:	sub    rsp,0x28
  40b226:	mov    eax,edx
  40b228:	mov    rsi,rcx
  40b22b:	mov    ebx,edx
  40b22d:	and    eax,0x7fffffff
  40b232:	cmp    eax,edx
  40b234:	je     0x40b240
  40b236:	shl    rax,0x4
  40b23a:	add    rax,QWORD PTR [rcx+0x68]
  40b23e:	mov    ebx,DWORD PTR [rax]
  40b240:	cmp    ebx,0x1
  40b243:	jbe    0x40b280
  40b245:	mov    edx,ebx
  40b247:	mov    rcx,rsi
  40b24a:	call   0x40afb0
  40b24f:	test   rax,rax
  40b252:	je     0x40b280
  40b254:	cmp    BYTE PTR [rax+0x4],0x4
  40b258:	jne    0x40b289
  40b25a:	sub    ebx,DWORD PTR [rax]
  40b25c:	mov    rdx,QWORD PTR [rax+0x18]
  40b260:	add    ebx,ebx
  40b262:	mov    ebx,DWORD PTR [rdx+rbx*4]
  40b265:	cmp    ebx,0x1
  40b268:	ja     0x40b245
  40b26a:	mov    ebx,DWORD PTR [rax+0x20]
  40b26d:	mov    rcx,rsi
  40b270:	mov    edx,ebx
  40b272:	call   0x40afb0
  40b277:	test   rax,rax
  40b27a:	jne    0x40b254
  40b27c:	nop    DWORD PTR [rax+0x0]
  40b280:	xor    eax,eax
  40b282:	add    rsp,0x28
  40b286:	pop    rbx
  40b287:	pop    rsi
  40b288:	ret    
  40b289:	movzx  eax,BYTE PTR [rax+0x18]
  40b28d:	jmp    0x40b282
  40b28f:	nop
  40b290:	mov    r8d,edx
  40b293:	and    r8d,0x7fffffff
  40b29a:	cmp    r8d,edx
  40b29d:	je     0x40b2b2
  40b29f:	shl    r8,0x4
  40b2a3:	add    r8,QWORD PTR [rcx+0x68]
  40b2a7:	mov    r8d,DWORD PTR [r8]
  40b2aa:	cmp    DWORD PTR [rcx+0x38],r8d
  40b2ae:	setb   al
  40b2b1:	ret    
  40b2b2:	xor    eax,eax
  40b2b4:	test   rcx,rcx
  40b2b7:	jne    0x40b2aa
  40b2b9:	repz ret 
  40b2bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b2c0:	push   rdi
  40b2c1:	push   rsi
  40b2c2:	push   rbx
  40b2c3:	sub    rsp,0x20
  40b2c7:	mov    eax,edx
  40b2c9:	mov    rsi,rcx
  40b2cc:	mov    ebx,edx
  40b2ce:	and    eax,0x7fffffff
  40b2d3:	mov    rdi,r9
  40b2d6:	cmp    eax,edx
  40b2d8:	je     0x40b2e4
  40b2da:	shl    rax,0x4
  40b2de:	add    rax,QWORD PTR [rcx+0x68]
  40b2e2:	mov    ebx,DWORD PTR [rax]
  40b2e4:	cmp    ebx,0x1
  40b2e7:	jbe    0x40b303
  40b2e9:	cmp    r8d,0x1
  40b2ed:	je     0x40b390
  40b2f3:	cmp    r8d,0x2
  40b2f7:	je     0x40b320
  40b2f9:	test   r8d,r8d
  40b2fc:	je     0x40b374
  40b2fe:	call   0x449548
  40b303:	test   rdi,rdi
  40b306:	je     0x40b30f
  40b308:	mov    QWORD PTR [rdi],0x0
  40b30f:	mov    eax,ebx
  40b311:	add    rsp,0x20
  40b315:	pop    rbx
  40b316:	pop    rsi
  40b317:	pop    rdi
  40b318:	ret    
  40b319:	nop    DWORD PTR [rax+0x0]
  40b320:	mov    eax,ebx
  40b322:	and    eax,0x7fffffff
  40b327:	cmp    ebx,eax
  40b329:	je     0x40b353
  40b32b:	shl    rax,0x4
  40b32f:	add    rax,QWORD PTR [rsi+0x68]
  40b333:	mov    ebx,DWORD PTR [rax]
  40b335:	jmp    0x40b353
  40b337:	nop    WORD PTR [rax+rax*1+0x0]
  40b340:	cmp    BYTE PTR [rax+0x4],0x4
  40b344:	jne    0x40b362
  40b346:	sub    ebx,DWORD PTR [rax]
  40b348:	mov    rax,QWORD PTR [rax+0x18]
  40b34c:	lea    edx,[rbx+rbx*1+0x1]
  40b350:	mov    ebx,DWORD PTR [rax+rdx*4]
  40b353:	mov    edx,ebx
  40b355:	mov    rcx,rsi
  40b358:	call   0x40afb0
  40b35d:	test   rax,rax
  40b360:	jne    0x40b340
  40b362:	test   rdi,rdi
  40b365:	je     0x40b30f
  40b367:	mov    QWORD PTR [rdi],rax
  40b36a:	mov    eax,ebx
  40b36c:	add    rsp,0x20
  40b370:	pop    rbx
  40b371:	pop    rsi
  40b372:	pop    rdi
  40b373:	ret    
  40b374:	mov    r8,rdi
  40b377:	mov    edx,ebx
  40b379:	mov    rcx,rsi
  40b37c:	add    rsp,0x20
  40b380:	pop    rbx
  40b381:	pop    rsi
  40b382:	pop    rdi
  40b383:	jmp    0x40b0f0
  40b388:	nop    DWORD PTR [rax+rax*1+0x0]
  40b390:	mov    eax,ebx
  40b392:	and    eax,0x7fffffff
  40b397:	cmp    ebx,eax
  40b399:	je     0x40b3c1
  40b39b:	shl    rax,0x4
  40b39f:	add    rax,QWORD PTR [rsi+0x68]
  40b3a3:	mov    ebx,DWORD PTR [rax]
  40b3a5:	jmp    0x40b3c1
  40b3a7:	nop    WORD PTR [rax+rax*1+0x0]
  40b3b0:	cmp    BYTE PTR [rax+0x4],0x4
  40b3b4:	jne    0x40b362
  40b3b6:	sub    ebx,DWORD PTR [rax]
  40b3b8:	mov    rax,QWORD PTR [rax+0x18]
  40b3bc:	add    ebx,ebx
  40b3be:	mov    ebx,DWORD PTR [rax+rbx*4]
  40b3c1:	mov    edx,ebx
  40b3c3:	mov    rcx,rsi
  40b3c6:	call   0x40afb0
  40b3cb:	test   rax,rax
  40b3ce:	jne    0x40b3b0
  40b3d0:	jmp    0x40b362
  40b3d2:	nop    DWORD PTR [rax+0x0]
  40b3d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b3e0:	push   r13
  40b3e2:	push   r12
  40b3e4:	push   rbp
  40b3e5:	push   rdi
  40b3e6:	push   rsi
  40b3e7:	push   rbx
  40b3e8:	sub    rsp,0x28
  40b3ec:	mov    esi,edx
  40b3ee:	mov    rdi,rcx
  40b3f1:	mov    r12d,edx
  40b3f4:	and    esi,0x7fffffff
  40b3fa:	mov    r13d,r8d
  40b3fd:	cmp    edx,esi
  40b3ff:	je     0x40b40b
  40b401:	shl    rsi,0x4
  40b405:	add    rsi,QWORD PTR [rcx+0x68]
  40b409:	mov    esi,DWORD PTR [rsi]
  40b40b:	mov    ebx,r13d
  40b40e:	and    ebx,0x7fffffff
  40b414:	cmp    r13d,ebx
  40b417:	je     0x40b423
  40b419:	shl    rbx,0x4
  40b41d:	add    rbx,QWORD PTR [rdi+0x68]
  40b421:	mov    ebx,DWORD PTR [rbx]
  40b423:	cmp    esi,ebx
  40b425:	je     0x40b5a0
  40b42b:	mov    ecx,esi
  40b42d:	and    ecx,0x7fffffff
  40b433:	cmp    esi,ecx
  40b435:	je     0x40b570
  40b43b:	shl    rcx,0x4
  40b43f:	add    rcx,QWORD PTR [rdi+0x68]
  40b443:	mov    eax,DWORD PTR [rcx]
  40b445:	xor    ebp,ebp
  40b447:	cmp    DWORD PTR [rdi+0x38],eax
  40b44a:	jb     0x40b502
  40b450:	mov    edx,ebx
  40b452:	and    edx,0x7fffffff
  40b458:	cmp    edx,ebx
  40b45a:	mov    eax,edx
  40b45c:	je     0x40b468
  40b45e:	shl    rax,0x4
  40b462:	add    rax,QWORD PTR [rdi+0x68]
  40b466:	mov    edx,DWORD PTR [rax]
  40b468:	cmp    DWORD PTR [rdi+0x38],edx
  40b46b:	jb     0x40b480
  40b46d:	mov    eax,ebx
  40b46f:	sub    eax,esi
  40b471:	add    rsp,0x28
  40b475:	pop    rbx
  40b476:	pop    rsi
  40b477:	pop    rdi
  40b478:	pop    rbp
  40b479:	pop    r12
  40b47b:	pop    r13
  40b47d:	ret    
  40b47e:	xchg   ax,ax
  40b480:	xor    r9d,r9d
  40b483:	xor    r8d,r8d
  40b486:	mov    edx,ebx
  40b488:	mov    rcx,rdi
  40b48b:	call   0x40b2c0
  40b490:	cmp    eax,esi
  40b492:	mov    ebx,eax
  40b494:	jne    0x40b46d
  40b496:	test   bpl,bpl
  40b499:	je     0x40b46d
  40b49b:	mov    edx,r12d
  40b49e:	mov    rcx,rdi
  40b4a1:	call   0x40afb0
  40b4a6:	mov    edx,r13d
  40b4a9:	mov    rcx,rdi
  40b4ac:	mov    rsi,rax
  40b4af:	call   0x40afb0
  40b4b4:	mov    rbp,rax
  40b4b7:	nop    WORD PTR [rax+rax*1+0x0]
  40b4c0:	test   rsi,rsi
  40b4c3:	je     0x40b4fd
  40b4c5:	cmp    BYTE PTR [rsi+0x4],0x4
  40b4c9:	jne    0x40b550
  40b4cf:	test   rbp,rbp
  40b4d2:	je     0x40b4fd
  40b4d4:	cmp    rsi,rbp
  40b4d7:	je     0x40b550
  40b4d9:	cmp    BYTE PTR [rbp+0x4],0x4
  40b4dd:	jne    0x40b550
  40b4df:	mov    eax,DWORD PTR [rbp+0x0]
  40b4e2:	cmp    DWORD PTR [rsi],eax
  40b4e4:	jae    0x40b530
  40b4e6:	mov    r12d,DWORD PTR [rsi+0x20]
  40b4ea:	mov    rcx,rdi
  40b4ed:	mov    edx,r12d
  40b4f0:	call   0x40afb0
  40b4f5:	mov    rsi,rax
  40b4f8:	test   rsi,rsi
  40b4fb:	jne    0x40b4c5
  40b4fd:	call   0x449548
  40b502:	mov    edx,esi
  40b504:	xor    r9d,r9d
  40b507:	xor    r8d,r8d
  40b50a:	mov    rcx,rdi
  40b50d:	mov    ebp,0x1
  40b512:	call   0x40b2c0
  40b517:	mov    edx,ebx
  40b519:	mov    esi,eax
  40b51b:	and    edx,0x7fffffff
  40b521:	cmp    edx,ebx
  40b523:	mov    eax,edx
  40b525:	jne    0x40b45e
  40b52b:	jmp    0x40b468
  40b530:	mov    r13d,DWORD PTR [rbp+0x20]
  40b534:	mov    rcx,rdi
  40b537:	mov    edx,r13d
  40b53a:	call   0x40afb0
  40b53f:	mov    rbp,rax
  40b542:	jmp    0x40b4c0
  40b547:	nop    WORD PTR [rax+rax*1+0x0]
  40b550:	mov    eax,r13d
  40b553:	sub    eax,r12d
  40b556:	cmp    rsi,rbp
  40b559:	jne    0x40b4fd
  40b55b:	add    rsp,0x28
  40b55f:	pop    rbx
  40b560:	pop    rsi
  40b561:	pop    rdi
  40b562:	pop    rbp
  40b563:	pop    r12
  40b565:	pop    r13
  40b567:	ret    
  40b568:	nop    DWORD PTR [rax+rax*1+0x0]
  40b570:	test   rdi,rdi
  40b573:	jne    0x40b590
  40b575:	mov    eax,ebx
  40b577:	xor    ebp,ebp
  40b579:	and    eax,0x7fffffff
  40b57e:	cmp    eax,ebx
  40b580:	jne    0x40b45e
  40b586:	jmp    0x40b46d
  40b58b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b590:	mov    eax,esi
  40b592:	jmp    0x40b445
  40b597:	nop    WORD PTR [rax+rax*1+0x0]
  40b5a0:	xor    eax,eax
  40b5a2:	add    rsp,0x28
  40b5a6:	pop    rbx
  40b5a7:	pop    rsi
  40b5a8:	pop    rdi
  40b5a9:	pop    rbp
  40b5aa:	pop    r12
  40b5ac:	pop    r13
  40b5ae:	ret    
  40b5af:	nop
  40b5b0:	push   rdi
  40b5b1:	push   rsi
  40b5b2:	push   rbx
  40b5b3:	sub    rsp,0x20
  40b5b7:	mov    eax,edx
  40b5b9:	mov    rsi,rcx
  40b5bc:	mov    rdi,r8
  40b5bf:	and    eax,0x7fffffff
  40b5c4:	cmp    eax,edx
  40b5c6:	je     0x40b5d2
  40b5c8:	shl    rax,0x4
  40b5cc:	add    rax,QWORD PTR [rcx+0x68]
  40b5d0:	mov    edx,DWORD PTR [rax]
  40b5d2:	mov    rax,QWORD PTR [rdi]
  40b5d5:	mov    rcx,rsi
  40b5d8:	sub    edx,DWORD PTR [rax]
  40b5da:	mov    rax,QWORD PTR [rax+0x18]
  40b5de:	add    edx,edx
  40b5e0:	mov    ebx,DWORD PTR [rax+rdx*4]
  40b5e3:	mov    edx,ebx
  40b5e5:	call   0x40afb0
  40b5ea:	test   rax,rax
  40b5ed:	je     0x40b602
  40b5ef:	cmp    BYTE PTR [rax+0x4],0x4
  40b5f3:	jne    0x40b602
  40b5f5:	mov    QWORD PTR [rdi],rax
  40b5f8:	mov    eax,ebx
  40b5fa:	add    rsp,0x20
  40b5fe:	pop    rbx
  40b5ff:	pop    rsi
  40b600:	pop    rdi
  40b601:	ret    
  40b602:	mov    rax,QWORD PTR [rdi]
  40b605:	mov    rcx,rsi
  40b608:	mov    ebx,DWORD PTR [rax+0x20]
  40b60b:	mov    edx,ebx
  40b60d:	call   0x40afb0
  40b612:	mov    QWORD PTR [rdi],rax
  40b615:	mov    eax,ebx
  40b617:	add    rsp,0x20
  40b61b:	pop    rbx
  40b61c:	pop    rsi
  40b61d:	pop    rdi
  40b61e:	ret    
  40b61f:	nop
  40b620:	push   r12
  40b622:	push   rbp
  40b623:	push   rdi
  40b624:	push   rsi
  40b625:	push   rbx
  40b626:	sub    rsp,0x30
  40b62a:	mov    eax,edx
  40b62c:	mov    rsi,rcx
  40b62f:	mov    ebx,edx
  40b631:	and    eax,0x7fffffff
  40b636:	mov    rdi,r8
  40b639:	mov    QWORD PTR [rsp+0x20],0x0
  40b642:	cmp    eax,edx
  40b644:	mov    QWORD PTR [rsp+0x28],0x0
  40b64d:	je     0x40b659
  40b64f:	shl    rax,0x4
  40b653:	add    rax,QWORD PTR [rcx+0x68]
  40b657:	mov    ebx,DWORD PTR [rax]
  40b659:	mov    edx,ebx
  40b65b:	mov    rcx,rsi
  40b65e:	call   0x40afb0
  40b663:	test   rax,rax
  40b666:	mov    QWORD PTR [rsp+0x20],rax
  40b66b:	je     0x40b673
  40b66d:	cmp    BYTE PTR [rax+0x4],0x4
  40b671:	je     0x40b680
  40b673:	mov    eax,ebx
  40b675:	add    rsp,0x30
  40b679:	pop    rbx
  40b67a:	pop    rsi
  40b67b:	pop    rdi
  40b67c:	pop    rbp
  40b67d:	pop    r12
  40b67f:	ret    
  40b680:	lea    rbp,[rsp+0x28]
  40b685:	mov    r8d,0x1
  40b68b:	mov    edx,ebx
  40b68d:	mov    rcx,rsi
  40b690:	mov    r9,rbp
  40b693:	call   0x40b2c0
  40b698:	cmp    eax,0x1
  40b69b:	jbe    0x40b6a8
  40b69d:	mov    rdx,QWORD PTR [rsp+0x28]
  40b6a2:	cmp    BYTE PTR [rdx+0x18],0x0
  40b6a6:	je     0x40b673
  40b6a8:	lea    r12,[rsp+0x20]
  40b6ad:	jmp    0x40b6dd
  40b6af:	nop
  40b6b0:	cmp    BYTE PTR [rdx+0x4],0x4
  40b6b4:	jne    0x40b6e7
  40b6b6:	cmp    eax,0x1
  40b6b9:	ja     0x40b700
  40b6bb:	mov    edx,ebx
  40b6bd:	mov    r8,r12
  40b6c0:	mov    rcx,rsi
  40b6c3:	call   0x40b5b0
  40b6c8:	mov    r9,rbp
  40b6cb:	mov    r8d,0x1
  40b6d1:	mov    edx,eax
  40b6d3:	mov    rcx,rsi
  40b6d6:	mov    ebx,eax
  40b6d8:	call   0x40b2c0
  40b6dd:	mov    rdx,QWORD PTR [rsp+0x20]
  40b6e2:	test   rdx,rdx
  40b6e5:	jne    0x40b6b0
  40b6e7:	test   rdi,rdi
  40b6ea:	je     0x40b673
  40b6ec:	mov    eax,ebx
  40b6ee:	mov    QWORD PTR [rdi],rdx
  40b6f1:	add    rsp,0x30
  40b6f5:	pop    rbx
  40b6f6:	pop    rsi
  40b6f7:	pop    rdi
  40b6f8:	pop    rbp
  40b6f9:	pop    r12
  40b6fb:	ret    
  40b6fc:	nop    DWORD PTR [rax+0x0]
  40b700:	mov    rax,QWORD PTR [rsp+0x28]
  40b705:	cmp    BYTE PTR [rax+0x18],0x0
  40b709:	jne    0x40b6bb
  40b70b:	jmp    0x40b6e7
  40b70d:	nop    DWORD PTR [rax]
  40b710:	sub    rsp,0x28
  40b714:	mov    rax,rcx
  40b717:	mov    QWORD PTR [rcx],0x0
  40b71e:	mov    QWORD PTR [rcx+0x8],0x0
  40b726:	mov    QWORD PTR [rcx+0x10],0x0
  40b72e:	mov    QWORD PTR [rcx+0x18],0x0
  40b736:	mov    ecx,r9d
  40b739:	and    ecx,0x7fffffff
  40b73f:	cmp    ecx,r9d
  40b742:	je     0x40b766
  40b744:	mov    r10,QWORD PTR [rdx+0x68]
  40b748:	shl    rcx,0x4
  40b74c:	mov    r9d,DWORD PTR [r10+rcx*1]
  40b750:	mov    ecx,r9d
  40b753:	and    ecx,0x7fffffff
  40b759:	shl    rcx,0x4
  40b75d:	mov    rcx,QWORD PTR [r10+rcx*1+0x8]
  40b762:	mov    QWORD PTR [rax+0x10],rcx
  40b766:	cmp    r9d,0x1
  40b76a:	jbe    0x40b7c3
  40b76c:	test   r8,r8
  40b76f:	je     0x40b7da
  40b771:	mov    ecx,r9d
  40b774:	and    ecx,0x7fffffff
  40b77a:	cmp    r9d,ecx
  40b77d:	je     0x40b7d0
  40b77f:	shl    rcx,0x4
  40b783:	add    rcx,QWORD PTR [rdx+0x68]
  40b787:	mov    ecx,DWORD PTR [rcx]
  40b789:	cmp    DWORD PTR [rdx+0x38],ecx
  40b78c:	jb     0x40b7da
  40b78e:	sub    r9d,DWORD PTR [r8]
  40b791:	mov    rdx,QWORD PTR [r8+0x8]
  40b795:	movzx  ecx,BYTE PTR [r8+0x1c]
  40b79a:	mov    QWORD PTR [rax],rdx
  40b79d:	mov    edx,r9d
  40b7a0:	shr    edx,cl
  40b7a2:	add    edx,DWORD PTR [r8+0x10]
  40b7a6:	mov    DWORD PTR [rax+0x8],edx
  40b7a9:	mov    edx,0x1
  40b7ae:	shl    edx,cl
  40b7b0:	sub    edx,0x1
  40b7b3:	and    r9d,edx
  40b7b6:	cmp    BYTE PTR [r8+0x18],0x0
  40b7bb:	mov    DWORD PTR [rax+0xc],r9d
  40b7bf:	setne  BYTE PTR [rax+0x18]
  40b7c3:	add    rsp,0x28
  40b7c7:	ret    
  40b7c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b7d0:	test   rdx,rdx
  40b7d3:	je     0x40b78e
  40b7d5:	mov    ecx,r9d
  40b7d8:	jmp    0x40b789
  40b7da:	call   0x449548
  40b7df:	nop
  40b7e0:	push   rbp
  40b7e1:	push   rdi
  40b7e2:	push   rsi
  40b7e3:	push   rbx
  40b7e4:	sub    rsp,0x88
  40b7eb:	lea    rax,[rip+0x42873]        # 0x44e065
  40b7f2:	test   rcx,rcx
  40b7f5:	mov    rbx,rcx
  40b7f8:	mov    rdi,rdx
  40b7fb:	mov    QWORD PTR [rsp+0x50],rax
  40b800:	lea    rax,[rip+0x42867]        # 0x44e06e
  40b807:	mov    QWORD PTR [rsp+0x58],rax
  40b80c:	lea    rax,[rip+0x42864]        # 0x44e077
  40b813:	mov    QWORD PTR [rsp+0x60],rax
  40b818:	lea    rax,[rip+0x42862]        # 0x44e081
  40b81f:	mov    QWORD PTR [rsp+0x68],rax
  40b824:	lea    rax,[rip+0x42869]        # 0x44e094
  40b82b:	mov    QWORD PTR [rsp+0x70],rax
  40b830:	je     0x40b9a3
  40b836:	mov    eax,r8d
  40b839:	test   r9b,r9b
  40b83c:	lea    rdx,[rax+rax*4]
  40b840:	jne    0x40b8f0
  40b846:	mov    rax,QWORD PTR [rdi]
  40b849:	lea    rsi,[rax+rdx*8]
  40b84d:	movzx  eax,BYTE PTR [rsi+0x4]
  40b851:	cmp    al,0x4
  40b853:	jbe    0x40b970
  40b859:	lea    rax,[rip+0x427fc]        # 0x44e05c
  40b860:	cmp    BYTE PTR [rsi+0x18],0x0
  40b864:	lea    rcx,[rip+0x42895]        # 0x44e100
  40b86b:	jne    0x40b874
  40b86d:	lea    rcx,[rip+0x42890]        # 0x44e104
  40b874:	mov    QWORD PTR [rsp+0x30],rcx
  40b879:	mov    QWORD PTR [rsp+0x28],rax
  40b87e:	lea    rdx,[rip+0x4284b]        # 0x44e0d0
  40b885:	mov    eax,DWORD PTR [rsi]
  40b887:	mov    r9,rsi
  40b88a:	mov    rcx,rbx
  40b88d:	mov    DWORD PTR [rsp+0x20],eax
  40b891:	call   0x4498d0
  40b896:	mov    ebp,DWORD PTR [rsi+0x14]
  40b899:	cmp    ebp,DWORD PTR [rdi+0xc]
  40b89c:	jae    0x40b980
  40b8a2:	mov    eax,ebp
  40b8a4:	mov    r9d,DWORD PTR [rsi+0x10]
  40b8a8:	mov    r8,QWORD PTR [rsi+0x8]
  40b8ac:	lea    rdx,[rax+rax*4]
  40b8b0:	mov    rax,QWORD PTR [rdi]
  40b8b3:	mov    rcx,rbx
  40b8b6:	lea    rdi,[rax+rdx*8]
  40b8ba:	lea    rdx,[rip+0x427e2]        # 0x44e0a3
  40b8c1:	call   0x4498d0
  40b8c6:	test   rdi,rdi
  40b8c9:	je     0x40b9c6
  40b8cf:	mov    r9,QWORD PTR [rdi+0x8]
  40b8d3:	lea    rdx,[rip+0x427d6]        # 0x44e0b0
  40b8da:	mov    r8d,ebp
  40b8dd:	mov    rcx,rbx
  40b8e0:	call   0x4498d0
  40b8e5:	jmp    0x40b94a
  40b8e7:	nop    WORD PTR [rax+rax*1+0x0]
  40b8f0:	mov    rax,QWORD PTR [rdi+0x18]
  40b8f4:	lea    rsi,[rax+rdx*8]
  40b8f8:	movzx  eax,BYTE PTR [rsi+0x4]
  40b8fc:	cmp    al,0x4
  40b8fe:	jbe    0x40b964
  40b900:	lea    rax,[rip+0x42755]        # 0x44e05c
  40b907:	lea    rdi,[rip+0x427f6]        # 0x44e104
  40b90e:	mov    QWORD PTR [rsp+0x28],rax
  40b913:	lea    rdx,[rip+0x427b6]        # 0x44e0d0
  40b91a:	mov    r9,rsi
  40b91d:	mov    rcx,rbx
  40b920:	mov    QWORD PTR [rsp+0x30],rdi
  40b925:	mov    eax,DWORD PTR [rsi]
  40b927:	mov    DWORD PTR [rsp+0x20],eax
  40b92b:	call   0x4498d0
  40b930:	mov    rax,QWORD PTR [rsi+0x8]
  40b934:	mov    r9d,DWORD PTR [rsi+0x10]
  40b938:	lea    rdx,[rip+0x427c8]        # 0x44e107
  40b93f:	mov    rcx,rbx
  40b942:	mov    r8,QWORD PTR [rax]
  40b945:	call   0x4498d0
  40b94a:	lea    rdx,[rip+0x42777]        # 0x44e0c8
  40b951:	mov    rcx,rbx
  40b954:	add    rsp,0x88
  40b95b:	pop    rbx
  40b95c:	pop    rsi
  40b95d:	pop    rdi
  40b95e:	pop    rbp
  40b95f:	jmp    0x4498d0
  40b964:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  40b969:	jmp    0x40b907
  40b96b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b970:	mov    rax,QWORD PTR [rsp+rax*8+0x50]
  40b975:	jmp    0x40b860
  40b97a:	nop    WORD PTR [rax+rax*1+0x0]
  40b980:	mov    r9d,DWORD PTR [rsi+0x10]
  40b984:	mov    r8,QWORD PTR [rsi+0x8]
  40b988:	lea    rdx,[rip+0x42714]        # 0x44e0a3
  40b98f:	mov    rcx,rbx
  40b992:	call   0x4498d0
  40b997:	lea    r9,[rip+0x426c2]        # 0x44e060
  40b99e:	jmp    0x40b8d3
  40b9a3:	mov    DWORD PTR [rsp+0x4c],r9d
  40b9a8:	mov    DWORD PTR [rsp+0x48],r8d
  40b9ad:	call   QWORD PTR [rip+0x58d81]        # 0x464734
  40b9b3:	mov    r9d,DWORD PTR [rsp+0x4c]
  40b9b8:	lea    rbx,[rax+0x60]
  40b9bc:	mov    r8d,DWORD PTR [rsp+0x48]
  40b9c1:	jmp    0x40b836
  40b9c6:	lea    r9,[rip+0x42693]        # 0x44e060
  40b9cd:	jmp    0x40b8d3
  40b9d2:	nop    DWORD PTR [rax+0x0]
  40b9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b9e0:	push   rbp
  40b9e1:	push   rdi
  40b9e2:	push   rsi
  40b9e3:	push   rbx
  40b9e4:	sub    rsp,0x78
  40b9e8:	mov    eax,edx
  40b9ea:	mov    rsi,rcx
  40b9ed:	mov    ebx,edx
  40b9ef:	and    eax,0x7fffffff
  40b9f4:	mov    rdi,r8
  40b9f7:	cmp    eax,edx
  40b9f9:	je     0x40ba05
  40b9fb:	shl    rax,0x4
  40b9ff:	add    rax,QWORD PTR [rcx+0x68]
  40ba03:	mov    ebx,DWORD PTR [rax]
  40ba05:	test   ebx,ebx
  40ba07:	jne    0x40ba12
  40ba09:	add    rsp,0x78
  40ba0d:	pop    rbx
  40ba0e:	pop    rsi
  40ba0f:	pop    rdi
  40ba10:	pop    rbp
  40ba11:	ret    
  40ba12:	lea    r9,[rsp+0x68]
  40ba17:	mov    edx,ebx
  40ba19:	mov    r8d,0x2
  40ba1f:	mov    rcx,rsi
  40ba22:	call   0x40b2c0
  40ba27:	mov    rdx,QWORD PTR [rsp+0x68]
  40ba2c:	test   rdx,rdx
  40ba2f:	je     0x40bae0
  40ba35:	movzx  ecx,BYTE PTR [rdx+0x1c]
  40ba39:	mov    r10d,eax
  40ba3c:	sub    r10d,DWORD PTR [rdx]
  40ba3f:	mov    r9d,0x1
  40ba45:	xor    ebp,ebp
  40ba47:	mov    r8,QWORD PTR [rdx+0x8]
  40ba4b:	shl    r9d,cl
  40ba4e:	mov    r11d,r10d
  40ba51:	sub    r9d,0x1
  40ba55:	shr    r11d,cl
  40ba58:	add    r11d,DWORD PTR [rdx+0x10]
  40ba5c:	and    r10d,r9d
  40ba5f:	cmp    BYTE PTR [rdx+0x18],0x0
  40ba63:	setne  bpl
  40ba67:	cmp    ebx,eax
  40ba69:	jne    0x40bac2
  40ba6b:	movsxd rcx,DWORD PTR [rdx+0x14]
  40ba6f:	cmp    ecx,0xffffffff
  40ba72:	je     0x40bad0
  40ba74:	lea    r9,[rcx+rcx*4]
  40ba78:	mov    rcx,QWORD PTR [rsi]
  40ba7b:	lea    rcx,[rcx+r9*8]
  40ba7f:	test   rcx,rcx
  40ba82:	je     0x40bad0
  40ba84:	mov    r9,QWORD PTR [rcx+0x8]
  40ba88:	xor    ecx,ecx
  40ba8a:	mov    QWORD PTR [rsp+0x38],rdx
  40ba8f:	lea    rdx,[rip+0x4269a]        # 0x44e130
  40ba96:	mov    DWORD PTR [rsp+0x40],ecx
  40ba9a:	mov    DWORD PTR [rsp+0x50],eax
  40ba9e:	mov    DWORD PTR [rsp+0x48],ebx
  40baa2:	mov    rcx,rdi
  40baa5:	mov    DWORD PTR [rsp+0x30],ebp
  40baa9:	mov    DWORD PTR [rsp+0x28],r10d
  40baae:	mov    DWORD PTR [rsp+0x20],r11d
  40bab3:	call   0x4498d0
  40bab8:	nop
  40bab9:	add    rsp,0x78
  40babd:	pop    rbx
  40babe:	pop    rsi
  40babf:	pop    rdi
  40bac0:	pop    rbp
  40bac1:	ret    
  40bac2:	mov    ecx,0x1
  40bac7:	lea    r9,[rip+0x42651]        # 0x44e11f
  40bace:	jmp    0x40ba8a
  40bad0:	xor    ecx,ecx
  40bad2:	lea    r9,[rip+0x4264a]        # 0x44e123
  40bad9:	jmp    0x40ba8a
  40badb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bae0:	lea    r9,[rip+0x42637]        # 0x44e11e
  40bae7:	mov    ecx,0xffffffff
  40baec:	mov    ebp,ecx
  40baee:	mov    r10d,ecx
  40baf1:	mov    r11d,ecx
  40baf4:	mov    r8,r9
  40baf7:	jmp    0x40ba8a
  40baf9:	nop    DWORD PTR [rax+0x0]
  40bb00:	push   r13
  40bb02:	push   r12
  40bb04:	push   rbp
  40bb05:	push   rdi
  40bb06:	push   rsi
  40bb07:	push   rbx
  40bb08:	sub    rsp,0x28
  40bb0c:	test   rcx,rcx
  40bb0f:	je     0x40bb90
  40bb11:	mov    ebx,DWORD PTR [rcx+0xc]
  40bb14:	test   ebx,ebx
  40bb16:	je     0x40bb90
  40bb18:	sub    ebx,0x1
  40bb1b:	js     0x40bb90
  40bb1d:	movsxd rdi,ebx
  40bb20:	mov    r12,r8
  40bb23:	mov    rbp,rdx
  40bb26:	lea    rsi,[rdi+rdi*4]
  40bb2a:	mov    r13,rcx
  40bb2d:	shl    rsi,0x3
  40bb31:	jmp    0x40bb43
  40bb33:	sub    ebx,0x1
  40bb36:	sub    rsi,0x28
  40bb3a:	sub    rdi,0x1
  40bb3e:	cmp    ebx,0xffffffff
  40bb41:	je     0x40bb90
  40bb43:	mov    rax,QWORD PTR [r13+0x0]
  40bb47:	mov    rcx,QWORD PTR [rax+rsi*1+0x8]
  40bb4c:	test   rcx,rcx
  40bb4f:	je     0x40bb33
  40bb51:	mov    rdx,rbp
  40bb54:	call   0x438360
  40bb59:	test   eax,eax
  40bb5b:	jne    0x40bb33
  40bb5d:	mov    eax,DWORD PTR [r13+0xc]
  40bb61:	sub    eax,0x1
  40bb64:	cmp    eax,ebx
  40bb66:	je     0x40bba0
  40bb68:	mov    rdx,QWORD PTR [r13+0x0]
  40bb6c:	lea    rax,[rdi+rdi*4+0x5]
  40bb71:	lea    rax,[rdx+rax*8]
  40bb75:	mov    eax,DWORD PTR [rax]
  40bb77:	sub    eax,0x1
  40bb7a:	mov    DWORD PTR [r12],eax
  40bb7e:	mov    eax,0x1
  40bb83:	add    rsp,0x28
  40bb87:	pop    rbx
  40bb88:	pop    rsi
  40bb89:	pop    rdi
  40bb8a:	pop    rbp
  40bb8b:	pop    r12
  40bb8d:	pop    r13
  40bb8f:	ret    
  40bb90:	xor    eax,eax
  40bb92:	add    rsp,0x28
  40bb96:	pop    rbx
  40bb97:	pop    rsi
  40bb98:	pop    rdi
  40bb99:	pop    rbp
  40bb9a:	pop    r12
  40bb9c:	pop    r13
  40bb9e:	ret    
  40bb9f:	nop
  40bba0:	mov    eax,DWORD PTR [r13+0x38]
  40bba4:	jmp    0x40bb7a
  40bba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bbb0:	push   r15
  40bbb2:	push   r14
  40bbb4:	push   r13
  40bbb6:	push   r12
  40bbb8:	push   rbp
  40bbb9:	push   rdi
  40bbba:	push   rsi
  40bbbb:	push   rbx
  40bbbc:	sub    rsp,0x18
  40bbc0:	mov    r14d,DWORD PTR [rcx+0xc]
  40bbc4:	mov    r15d,DWORD PTR [rcx+0x8]
  40bbc8:	xor    r8d,r8d
  40bbcb:	mov    rsi,QWORD PTR [rcx+0x18]
  40bbcf:	xor    edi,edi
  40bbd1:	mov    r12d,DWORD PTR [rcx+0x24]
  40bbd5:	lea    eax,[r14+r14*4]
  40bbd9:	lea    r13d,[r15+r15*4]
  40bbdd:	shl    eax,0x3
  40bbe0:	shl    r13d,0x3
  40bbe4:	mov    DWORD PTR [rsp+0x8],eax
  40bbe8:	mov    eax,DWORD PTR [rcx+0x20]
  40bbeb:	lea    eax,[rax+rax*4]
  40bbee:	shl    eax,0x3
  40bbf1:	test   rsi,rsi
  40bbf4:	mov    DWORD PTR [rsp+0xc],eax
  40bbf8:	je     0x40bc49
  40bbfa:	lea    eax,[r12-0x1]
  40bbff:	xor    r8d,r8d
  40bc02:	xor    edi,edi
  40bc04:	lea    rax,[rax+rax*4]
  40bc08:	lea    rbp,[rsi+rax*8]
  40bc0c:	nop    DWORD PTR [rax+0x0]
  40bc10:	cmp    rsi,rbp
  40bc13:	ja     0x40bc49
  40bc15:	mov    ebx,DWORD PTR [rsi+0x10]
  40bc18:	lea    edi,[rdi+rbx*8]
  40bc1b:	add    ebx,ebx
  40bc1d:	je     0x40bc43
  40bc1f:	mov    rcx,QWORD PTR [rsi+0x18]
  40bc23:	xor    eax,eax
  40bc25:	lea    r9d,[rax+0x1]
  40bc29:	mov    r10d,eax
  40bc2c:	lea    r11d,[r8+0x4]
  40bc30:	mov    r9d,DWORD PTR [rcx+r9*4]
  40bc34:	cmp    DWORD PTR [rcx+r10*4],r9d
  40bc38:	cmove  r8d,r11d
  40bc3c:	add    eax,0x2
  40bc3f:	cmp    eax,ebx
  40bc41:	jb     0x40bc25
  40bc43:	add    rsi,0x28
  40bc47:	jne    0x40bc10
  40bc49:	mov    eax,DWORD PTR [rsp+0x8]
  40bc4d:	mov    DWORD PTR [rdx],r15d
  40bc50:	mov    DWORD PTR [rdx+0x4],r14d
  40bc54:	mov    DWORD PTR [rdx+0x8],r13d
  40bc58:	mov    DWORD PTR [rdx+0x18],r12d
  40bc5c:	mov    DWORD PTR [rdx+0x24],edi
  40bc5f:	mov    DWORD PTR [rdx+0xc],eax
  40bc62:	mov    rax,QWORD PTR [rip+0x4f337]        # 0x45afa0
  40bc69:	mov    DWORD PTR [rdx+0x28],r8d
  40bc6d:	mov    eax,DWORD PTR [rax]
  40bc6f:	mov    DWORD PTR [rdx+0x10],eax
  40bc72:	mov    rax,QWORD PTR [rip+0x4f337]        # 0x45afb0
  40bc79:	mov    eax,DWORD PTR [rax]
  40bc7b:	mov    DWORD PTR [rdx+0x14],eax
  40bc7e:	mov    eax,DWORD PTR [rsp+0xc]
  40bc82:	mov    DWORD PTR [rdx+0x1c],eax
  40bc85:	lea    eax,[r12+r12*4]
  40bc89:	shl    eax,0x3
  40bc8c:	mov    DWORD PTR [rdx+0x20],eax
  40bc8f:	add    rsp,0x18
  40bc93:	pop    rbx
  40bc94:	pop    rsi
  40bc95:	pop    rdi
  40bc96:	pop    rbp
  40bc97:	pop    r12
  40bc99:	pop    r13
  40bc9b:	pop    r14
  40bc9d:	pop    r15
  40bc9f:	ret    
  40bca0:	push   r12
  40bca2:	push   rbp
  40bca3:	push   rdi
  40bca4:	push   rsi
  40bca5:	push   rbx
  40bca6:	sub    rsp,0x20
  40bcaa:	test   rdx,rdx
  40bcad:	mov    rdi,rcx
  40bcb0:	mov    rbx,rdx
  40bcb3:	mov    r12d,r8d
  40bcb6:	mov    ebp,r9d
  40bcb9:	je     0x40bd19
  40bcbb:	test   rcx,rcx
  40bcbe:	je     0x40bdd2
  40bcc4:	mov    r8d,DWORD PTR [rbx+0xc]
  40bcc8:	lea    rdx,[rip+0x42492]        # 0x44e161
  40bccf:	mov    rcx,rdi
  40bcd2:	call   0x4498d0
  40bcd7:	mov    r8d,DWORD PTR [rbx+0x24]
  40bcdb:	lea    rdx,[rip+0x42498]        # 0x44e17a
  40bce2:	mov    rcx,rdi
  40bce5:	call   0x4498d0
  40bcea:	mov    r8d,DWORD PTR [rbx+0x30]
  40bcee:	lea    rdx,[rip+0x4249e]        # 0x44e193
  40bcf5:	mov    rcx,rdi
  40bcf8:	call   0x4498d0
  40bcfd:	mov    r8d,DWORD PTR [rbx+0x38]
  40bd01:	lea    rdx,[rip+0x424a4]        # 0x44e1ac
  40bd08:	mov    rcx,rdi
  40bd0b:	call   0x4498d0
  40bd10:	test   r12d,r12d
  40bd13:	jne    0x40bd80
  40bd15:	test   ebp,ebp
  40bd17:	jne    0x40bd24
  40bd19:	add    rsp,0x20
  40bd1d:	pop    rbx
  40bd1e:	pop    rsi
  40bd1f:	pop    rdi
  40bd20:	pop    rbp
  40bd21:	pop    r12
  40bd23:	ret    
  40bd24:	lea    rdx,[rip+0x424af]        # 0x44e1da
  40bd2b:	mov    rcx,rdi
  40bd2e:	xor    esi,esi
  40bd30:	call   0x4498d0
  40bd35:	mov    eax,DWORD PTR [rbx+0x24]
  40bd38:	test   eax,eax
  40bd3a:	jne    0x40bd45
  40bd3c:	jmp    0x40bd60
  40bd3e:	xchg   ax,ax
  40bd40:	cmp    DWORD PTR [rbx+0x24],esi
  40bd43:	jbe    0x40bd60
  40bd45:	mov    r8d,esi
  40bd48:	mov    r9d,0x1
  40bd4e:	mov    rdx,rbx
  40bd51:	mov    rcx,rdi
  40bd54:	add    esi,0x1
  40bd57:	call   0x40b7e0
  40bd5c:	cmp    ebp,esi
  40bd5e:	ja     0x40bd40
  40bd60:	lea    rdx,[rip+0x42361]        # 0x44e0c8
  40bd67:	mov    rcx,rdi
  40bd6a:	add    rsp,0x20
  40bd6e:	pop    rbx
  40bd6f:	pop    rsi
  40bd70:	pop    rdi
  40bd71:	pop    rbp
  40bd72:	pop    r12
  40bd74:	jmp    0x4498d0
  40bd79:	nop    DWORD PTR [rax+0x0]
  40bd80:	lea    rdx,[rip+0x4243e]        # 0x44e1c5
  40bd87:	mov    rcx,rdi
  40bd8a:	xor    esi,esi
  40bd8c:	call   0x4498d0
  40bd91:	mov    edx,DWORD PTR [rbx+0xc]
  40bd94:	test   edx,edx
  40bd96:	jne    0x40bda5
  40bd98:	jmp    0x40bdbe
  40bd9a:	nop    WORD PTR [rax+rax*1+0x0]
  40bda0:	cmp    DWORD PTR [rbx+0xc],esi
  40bda3:	jbe    0x40bdbe
  40bda5:	xor    r9d,r9d
  40bda8:	mov    r8d,esi
  40bdab:	mov    rdx,rbx
  40bdae:	mov    rcx,rdi
  40bdb1:	add    esi,0x1
  40bdb4:	call   0x40b7e0
  40bdb9:	cmp    r12d,esi
  40bdbc:	ja     0x40bda0
  40bdbe:	lea    rdx,[rip+0x42303]        # 0x44e0c8
  40bdc5:	mov    rcx,rdi
  40bdc8:	call   0x4498d0
  40bdcd:	jmp    0x40bd15
  40bdd2:	call   QWORD PTR [rip+0x5895c]        # 0x464734
  40bdd8:	lea    rdi,[rax+0x60]
  40bddc:	jmp    0x40bcc4
  40bde1:	nop
  40bde2:	nop
  40bde3:	nop
  40bde4:	nop
  40bde5:	nop
  40bde6:	nop
  40bde7:	nop
  40bde8:	nop
  40bde9:	nop
  40bdea:	nop
  40bdeb:	nop
  40bdec:	nop
  40bded:	nop
  40bdee:	nop
  40bdef:	nop
  40bdf0:	cmp    r8d,0x1
  40bdf4:	je     0x40be50
  40bdf6:	cmp    r8d,0x2
  40bdfa:	je     0x40be42
  40bdfc:	test   r8d,r8d
  40bdff:	je     0x40be04
  40be01:	xor    eax,eax
  40be03:	ret    
  40be04:	mov    rax,QWORD PTR [rcx]
  40be07:	test   rax,rax
  40be0a:	je     0x40be01
  40be0c:	test   r9,r9
  40be0f:	je     0x40be6b
  40be11:	test   r8d,r8d
  40be14:	jne    0x40be30
  40be16:	mov    rcx,QWORD PTR [rcx+0x20]
  40be1a:	lea    rax,[rax+rdx*8]
  40be1e:	lea    rcx,[rcx+rdx*4]
  40be22:	mov    QWORD PTR [r9],rcx
  40be25:	ret    
  40be26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be30:	cmp    r8d,0x2
  40be34:	je     0x40be60
  40be36:	cmp    r8d,0x1
  40be3a:	lea    rax,[rax+rdx*8]
  40be3e:	je     0x40be70
  40be40:	repz ret 
  40be42:	mov    rax,QWORD PTR [rcx+0x8]
  40be46:	jmp    0x40be07
  40be48:	nop    DWORD PTR [rax+rax*1+0x0]
  40be50:	lea    rax,[rcx+0x10]
  40be54:	jmp    0x40be07
  40be56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be60:	mov    rcx,QWORD PTR [rcx+0x28]
  40be64:	lea    rcx,[rcx+rdx*4]
  40be68:	mov    QWORD PTR [r9],rcx
  40be6b:	lea    rax,[rax+rdx*8]
  40be6f:	ret    
  40be70:	mov    rdx,QWORD PTR [rax]
  40be73:	mov    QWORD PTR [r9],rdx
  40be76:	ret    
  40be77:	nop    WORD PTR [rax+rax*1+0x0]
  40be80:	push   rsi
  40be81:	push   rbx
  40be82:	sub    rsp,0x38
  40be86:	cmp    BYTE PTR [rsp+0x78],0x0
  40be8b:	lea    rax,[rsp+0x28]
  40be90:	mov    esi,r8d
  40be93:	mov    r8d,DWORD PTR [rsp+0x70]
  40be98:	mov    rbx,rdx
  40be9b:	mov    rdx,r9
  40be9e:	mov    r9d,0x0
  40bea4:	mov    QWORD PTR [rsp+0x28],0x0
  40bead:	cmovne r9,rax
  40beb1:	call   0x40bdf0
  40beb6:	mov    QWORD PTR [rax],rbx
  40beb9:	mov    rax,QWORD PTR [rsp+0x28]
  40bebe:	test   rax,rax
  40bec1:	je     0x40bec5
  40bec3:	mov    DWORD PTR [rax],esi
  40bec5:	add    rsp,0x38
  40bec9:	pop    rbx
  40beca:	pop    rsi
  40becb:	ret    
  40becc:	nop    DWORD PTR [rax+0x0]
  40bed0:	sub    rsp,0x38
  40bed4:	lea    r9,[rsp+0x28]
  40bed9:	mov    r8d,edx
  40bedc:	xor    edx,edx
  40bede:	mov    QWORD PTR [rsp+0x28],0x0
  40bee7:	call   0x40bdf0
  40beec:	test   rax,rax
  40beef:	je     0x40bf00
  40bef1:	mov    rax,QWORD PTR [rsp+0x28]
  40bef6:	add    rsp,0x38
  40befa:	ret    
  40befb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf00:	xor    eax,eax
  40bf02:	jmp    0x40bef6
  40bf04:	xchg   ax,ax
  40bf06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bf10:	push   rdi
  40bf11:	push   rsi
  40bf12:	push   rbx
  40bf13:	sub    rsp,0x20
  40bf17:	test   r8,r8
  40bf1a:	mov    rsi,rcx
  40bf1d:	mov    rbx,r8
  40bf20:	lea    rdi,[rdx*8+0x0]
  40bf28:	je     0x40bf39
  40bf2a:	mov    rcx,rdx
  40bf2d:	shl    rcx,0x4
  40bf31:	call   0x43baf0
  40bf36:	mov    QWORD PTR [rbx],rax
  40bf39:	mov    rdx,rdi
  40bf3c:	mov    rcx,rsi
  40bf3f:	add    rsp,0x20
  40bf43:	pop    rbx
  40bf44:	pop    rsi
  40bf45:	pop    rdi
  40bf46:	jmp    0x41cec0
  40bf4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf50:	push   rbp
  40bf51:	push   rdi
  40bf52:	push   rsi
  40bf53:	push   rbx
  40bf54:	sub    rsp,0x28
  40bf58:	mov    rsi,rcx
  40bf5b:	mov    rbp,r8
  40bf5e:	mov    rcx,QWORD PTR [rsp+0x78]
  40bf63:	mov    rbx,QWORD PTR [rsi+0x10]
  40bf67:	mov    r8d,r9d
  40bf6a:	mov    r10,rbx
  40bf6d:	sub    r10,QWORD PTR [rsi+0x8]
  40bf71:	shr    r10,0x3
  40bf75:	cmp    rbx,QWORD PTR [rsi+0x18]
  40bf79:	ja     0x40bfbc
  40bf7b:	test   rdx,rdx
  40bf7e:	je     0x40bfa8
  40bf80:	mov    r10d,r10d
  40bf83:	lea    rdi,[rdx+r10*4]
  40bf87:	test   rdi,rdi
  40bf8a:	je     0x40bfa8
  40bf8c:	test   rcx,rcx
  40bf8f:	je     0x40bfa5
  40bf91:	mov    r9d,DWORD PTR [rsp+0x70]
  40bf96:	mov    edx,DWORD PTR [rsp+0x80]
  40bf9d:	call   0x40ad10
  40bfa2:	mov    r8d,eax
  40bfa5:	mov    DWORD PTR [rdi],r8d
  40bfa8:	lea    rax,[rbx+0x8]
  40bfac:	mov    QWORD PTR [rbx],rbp
  40bfaf:	mov    QWORD PTR [rsi+0x10],rax
  40bfb3:	add    rsp,0x28
  40bfb7:	pop    rbx
  40bfb8:	pop    rsi
  40bfb9:	pop    rdi
  40bfba:	pop    rbp
  40bfbb:	ret    
  40bfbc:	call   0x449548
  40bfc1:	nop
  40bfc2:	nop    DWORD PTR [rax+0x0]
  40bfc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bfd0:	push   rdi
  40bfd1:	push   rbx
  40bfd2:	sub    rsp,0x28
  40bfd6:	mov    rax,QWORD PTR [rcx]
  40bfd9:	mov    rbx,rcx
  40bfdc:	mov    rdx,QWORD PTR [rax]
  40bfdf:	test   rdx,rdx
  40bfe2:	je     0x40bff1
  40bfe4:	mov    rax,rdx
  40bfe7:	mov    QWORD PTR [rbx],rdx
  40bfea:	add    rsp,0x28
  40bfee:	pop    rbx
  40bfef:	pop    rdi
  40bff0:	ret    
  40bff1:	mov    ecx,0x38
  40bff6:	call   0x43baf0
  40bffb:	lea    rdi,[rax+0x8]
  40bfff:	mov    rcx,rax
  40c002:	mov    QWORD PTR [rax],0x0
  40c009:	mov    rdx,rax
  40c00c:	mov    QWORD PTR [rax+0x30],0x0
  40c014:	xor    eax,eax
  40c016:	and    rdi,0xfffffffffffffff8
  40c01a:	sub    rcx,rdi
  40c01d:	add    ecx,0x38
  40c020:	shr    ecx,0x3
  40c023:	rep stos QWORD PTR es:[rdi],rax
  40c026:	mov    QWORD PTR [rdx],0x0
  40c02d:	mov    rax,QWORD PTR [rbx]
  40c030:	mov    QWORD PTR [rdx+0x8],rax
  40c034:	mov    QWORD PTR [rax],rdx
  40c037:	mov    rax,rdx
  40c03a:	mov    QWORD PTR [rbx],rdx
  40c03d:	add    rsp,0x28
  40c041:	pop    rbx
  40c042:	pop    rdi
  40c043:	ret    
  40c044:	xchg   ax,ax
  40c046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c050:	push   r12
  40c052:	push   rbp
  40c053:	push   rdi
  40c054:	push   rsi
  40c055:	push   rbx
  40c056:	sub    rsp,0x20
  40c05a:	mov    rdi,QWORD PTR [rsp+0x70]
  40c05f:	test   rdx,rdx
  40c062:	mov    rsi,rdx
  40c065:	mov    r12,r8
  40c068:	mov    rbp,r9
  40c06b:	je     0x40c0c0
  40c06d:	add    rcx,0x88
  40c074:	call   0x40bfd0
  40c079:	mov    ecx,0x18
  40c07e:	mov    rbx,rax
  40c081:	mov    QWORD PTR [rax+0x20],r12
  40c085:	mov    DWORD PTR [rax+0x30],0x2
  40c08c:	call   0x43baf0
  40c091:	mov    QWORD PTR [rax],rsi
  40c094:	mov    QWORD PTR [rax+0x8],rbp
  40c098:	mov    QWORD PTR [rax+0x10],rbp
  40c09c:	mov    QWORD PTR [rbx+0x28],rax
  40c0a0:	mov    eax,DWORD PTR [rsp+0x78]
  40c0a4:	mov    QWORD PTR [rbx+0x10],rdi
  40c0a8:	lea    rax,[rdi+rax*8]
  40c0ac:	mov    QWORD PTR [rbx+0x18],rax
  40c0b0:	add    rsp,0x20
  40c0b4:	pop    rbx
  40c0b5:	pop    rsi
  40c0b6:	pop    rdi
  40c0b7:	pop    rbp
  40c0b8:	pop    r12
  40c0ba:	ret    
  40c0bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c0c0:	mov    rax,QWORD PTR [rcx+0x88]
  40c0c7:	test   rax,rax
  40c0ca:	je     0x40c06d
  40c0cc:	cmp    DWORD PTR [rax+0x30],0x2
  40c0d0:	je     0x40c0e0
  40c0d2:	mov    rsi,QWORD PTR [rax+0x28]
  40c0d6:	jmp    0x40c06d
  40c0d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c0e0:	mov    rax,QWORD PTR [rax+0x28]
  40c0e4:	mov    rsi,QWORD PTR [rax]
  40c0e7:	jmp    0x40c06d
  40c0e9:	nop    DWORD PTR [rax+0x0]
  40c0f0:	push   rsi
  40c0f1:	push   rbx
  40c0f2:	sub    rsp,0x28
  40c0f6:	mov    eax,DWORD PTR [rdx]
  40c0f8:	mov    rsi,rcx
  40c0fb:	mov    rcx,QWORD PTR [rcx+0x38]
  40c0ff:	mov    rbx,rdx
  40c102:	lea    edx,[rax+0x1]
  40c105:	mov    r10,QWORD PTR [rcx+0x10]
  40c109:	mov    r9,QWORD PTR [rcx+0x18]
  40c10d:	mov    ecx,edx
  40c10f:	lea    r8,[rcx+rcx*2]
  40c113:	sub    r9,r10
  40c116:	shl    r8,0x3
  40c11a:	cmp    r9,r8
  40c11d:	jae    0x40c13e
  40c11f:	lea    rdx,[rsi+0x38]
  40c123:	mov    r8d,0x18
  40c129:	mov    rcx,rsi
  40c12c:	call   0x41d060
  40c131:	mov    rax,QWORD PTR [rsi+0x38]
  40c135:	mov    r10,QWORD PTR [rax+0x10]
  40c139:	mov    eax,DWORD PTR [rbx]
  40c13b:	lea    edx,[rax+0x1]
  40c13e:	lea    rax,[rax+rax*2]
  40c142:	mov    DWORD PTR [rbx],edx
  40c144:	lea    rax,[r10+rax*8]
  40c148:	add    rsp,0x28
  40c14c:	pop    rbx
  40c14d:	pop    rsi
  40c14e:	ret    
  40c14f:	nop
  40c150:	push   r15
  40c152:	push   r14
  40c154:	push   r13
  40c156:	push   r12
  40c158:	push   rbp
  40c159:	push   rdi
  40c15a:	push   rsi
  40c15b:	push   rbx
  40c15c:	sub    rsp,0x48
  40c160:	mov    rbx,QWORD PTR [rcx+0x1a8]
  40c167:	mov    QWORD PTR [rsp+0x98],rdx
  40c16f:	lea    rdx,[rdx+0x14]
  40c173:	mov    r15,rcx
  40c176:	call   0x40c0f0
  40c17b:	mov    rcx,r15
  40c17e:	mov    QWORD PTR [r15+0x1a8],rax
  40c185:	call   0x41e080
  40c18a:	mov    QWORD PTR [rsp+0x38],rax
  40c18f:	movzx  eax,BYTE PTR [rax+0x4]
  40c193:	mov    QWORD PTR [r15+0x1a8],rbx
  40c19a:	cmp    al,0x35
  40c19c:	je     0x40c33a
  40c1a2:	cmp    BYTE PTR [r15+0x429],0x0
  40c1aa:	je     0x40c360
  40c1b0:	mov    rcx,QWORD PTR [rsp+0x98]
  40c1b8:	movzx  r12d,WORD PTR [rcx+0x18]
  40c1bd:	test   r12w,r12w
  40c1c1:	je     0x40c360
  40c1c7:	cmp    al,0x38
  40c1c9:	je     0x40c1d3
  40c1cb:	cmp    al,0x3d
  40c1cd:	jne    0x40c360
  40c1d3:	mov    rax,QWORD PTR [rsp+0x38]
  40c1d8:	mov    rbx,QWORD PTR [rax+0x10]
  40c1dc:	mov    eax,DWORD PTR [rax+0x8]
  40c1df:	lea    rdi,[rbx+rax*1-0x1]
  40c1e4:	add    rbx,0x1
  40c1e8:	cmp    rdi,rbx
  40c1eb:	jbe    0x40c360
  40c1f1:	cmp    rdi,rbx
  40c1f4:	mov    rbp,QWORD PTR [rip+0x4ec35]        # 0x45ae30
  40c1fb:	ja     0x40c20f
  40c1fd:	jmp    0x40c330
  40c202:	add    rbx,0x1
  40c206:	cmp    rbx,rdi
  40c209:	je     0x40c330
  40c20f:	movzx  edx,BYTE PTR [rbx]
  40c212:	mov    rax,rdx
  40c215:	movzx  edx,WORD PTR [rbp+rdx*2+0x0]
  40c21a:	test   dh,0x2
  40c21d:	jne    0x40c241
  40c21f:	cmp    al,0x24
  40c221:	jne    0x40c202
  40c223:	cmp    BYTE PTR [r15+0x430],0x0
  40c22b:	je     0x40c202
  40c22d:	cmp    rdi,rbx
  40c230:	jbe    0x40c3ab
  40c236:	movzx  edx,BYTE PTR [rbx]
  40c239:	mov    rax,rdx
  40c23c:	movzx  edx,WORD PTR [rbp+rdx*2+0x0]
  40c241:	mov    r10,rbx
  40c244:	jmp    0x40c25b
  40c246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c250:	movzx  edx,BYTE PTR [rbx]
  40c253:	mov    rax,rdx
  40c256:	movzx  edx,WORD PTR [rbp+rdx*2+0x0]
  40c25b:	test   dx,0x204
  40c260:	jne    0x40c278
  40c262:	cmp    al,0x24
  40c264:	jne    0x40c394
  40c26a:	cmp    BYTE PTR [r15+0x430],0x0
  40c272:	je     0x40c394
  40c278:	add    rbx,0x1
  40c27c:	cmp    rdi,rbx
  40c27f:	ja     0x40c250
  40c281:	mov    rax,rbx
  40c284:	sub    rax,r10
  40c287:	mov    r14d,eax
  40c28a:	test   r12d,r12d
  40c28d:	je     0x40c360
  40c293:	mov    rcx,QWORD PTR [rsp+0x98]
  40c29b:	mov    eax,eax
  40c29d:	mov    QWORD PTR [rsp+0x20],rdi
  40c2a2:	mov    QWORD PTR [rsp+0x28],rbx
  40c2a7:	mov    edi,r14d
  40c2aa:	mov    QWORD PTR [rsp+0x30],r15
  40c2af:	xor    esi,esi
  40c2b1:	mov    ebx,r12d
  40c2b4:	mov    r14,rax
  40c2b7:	mov    r13,QWORD PTR [rcx]
  40c2ba:	mov    r15,r13
  40c2bd:	mov    r13,r10
  40c2c0:	jmp    0x40c2ce
  40c2c2:	add    rsi,0x1
  40c2c6:	cmp    ebx,esi
  40c2c8:	jbe    0x40c380
  40c2ce:	mov    rax,QWORD PTR [r15+rsi*8]
  40c2d2:	cmp    edi,DWORD PTR [rax+0x8]
  40c2d5:	jne    0x40c2c2
  40c2d7:	mov    r12,QWORD PTR [rax]
  40c2da:	mov    r8,r14
  40c2dd:	mov    rcx,r13
  40c2e0:	mov    rdx,r12
  40c2e3:	call   0x449458
  40c2e8:	test   eax,eax
  40c2ea:	jne    0x40c2c2
  40c2ec:	mov    r15,QWORD PTR [rsp+0x30]
  40c2f1:	lea    r8,[rip+0x41f08]        # 0x44e200
  40c2f8:	mov    r9,r12
  40c2fb:	xor    edx,edx
  40c2fd:	mov    rdi,QWORD PTR [rsp+0x20]
  40c302:	mov    rbx,QWORD PTR [rsp+0x28]
  40c307:	mov    rcx,r15
  40c30a:	call   0x414b60
  40c30f:	cmp    rdi,rbx
  40c312:	jbe    0x40c360
  40c314:	mov    rax,QWORD PTR [rsp+0x98]
  40c31c:	cmp    rdi,rbx
  40c31f:	movzx  r12d,WORD PTR [rax+0x18]
  40c324:	ja     0x40c20f
  40c32a:	nop    WORD PTR [rax+rax*1+0x0]
  40c330:	mov    r10,rbx
  40c333:	xor    r14d,r14d
  40c336:	xor    eax,eax
  40c338:	jmp    0x40c39d
  40c33a:	mov    rcx,QWORD PTR [rsp+0x38]
  40c33f:	mov    rdx,QWORD PTR [rcx+0x8]
  40c343:	test   BYTE PTR [rdx+0x19],0x10
  40c347:	je     0x40c1a2
  40c34d:	mov    BYTE PTR [rcx+0x4],0x4e
  40c351:	movzx  eax,WORD PTR [rdx+0x20]
  40c355:	mov    DWORD PTR [rcx+0x8],eax
  40c358:	nop    DWORD PTR [rax+rax*1+0x0]
  40c360:	mov    rax,QWORD PTR [rsp+0x38]
  40c365:	add    rsp,0x48
  40c369:	pop    rbx
  40c36a:	pop    rsi
  40c36b:	pop    rdi
  40c36c:	pop    rbp
  40c36d:	pop    r12
  40c36f:	pop    r13
  40c371:	pop    r14
  40c373:	pop    r15
  40c375:	ret    
  40c376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c380:	mov    rdi,QWORD PTR [rsp+0x20]
  40c385:	mov    rbx,QWORD PTR [rsp+0x28]
  40c38a:	mov    r15,QWORD PTR [rsp+0x30]
  40c38f:	jmp    0x40c30f
  40c394:	mov    rax,rbx
  40c397:	sub    rax,r10
  40c39a:	mov    r14d,eax
  40c39d:	test   r12d,r12d
  40c3a0:	jne    0x40c293
  40c3a6:	jmp    0x40c30f
  40c3ab:	mov    r10,rbx
  40c3ae:	xor    eax,eax
  40c3b0:	xor    r14d,r14d
  40c3b3:	jmp    0x40c28a
  40c3b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c3c0:	push   rdi
  40c3c1:	push   rsi
  40c3c2:	push   rbx
  40c3c3:	sub    rsp,0x30
  40c3c7:	movzx  eax,BYTE PTR [rdx+0x18]
  40c3cb:	and    eax,0x3f
  40c3ce:	cmp    al,0x1
  40c3d0:	je     0x40c3e0
  40c3d2:	mov    eax,0x1
  40c3d7:	add    rsp,0x30
  40c3db:	pop    rbx
  40c3dc:	pop    rsi
  40c3dd:	pop    rdi
  40c3de:	ret    
  40c3df:	nop
  40c3e0:	test   BYTE PTR [rdx+0x19],0x1
  40c3e4:	jne    0x40c3d2
  40c3e6:	mov    rdi,QWORD PTR [rdx+0x20]
  40c3ea:	test   BYTE PTR [rdi+0x1c],0x8
  40c3ee:	jne    0x40c3d2
  40c3f0:	mov    rbx,rdx
  40c3f3:	mov    rsi,rcx
  40c3f6:	mov    edx,DWORD PTR [rdi+0x10]
  40c3f9:	mov    rcx,QWORD PTR [rcx+0x28]
  40c3fd:	call   0x40afb0
  40c402:	mov    eax,DWORD PTR [rax+0x14]
  40c405:	test   eax,eax
  40c407:	jns    0x40c3d2
  40c409:	mov    rax,QWORD PTR [rbx]
  40c40c:	mov    r8d,DWORD PTR [rdi+0x10]
  40c410:	xor    r9d,r9d
  40c413:	mov    edx,0xe
  40c418:	mov    rcx,rsi
  40c41b:	mov    QWORD PTR [rsp+0x28],rax
  40c420:	lea    rax,[rip+0x41e13]        # 0x44e23a
  40c427:	mov    QWORD PTR [rsp+0x20],rax
  40c42c:	call   0x414c80
  40c431:	jmp    0x40c3d2
  40c433:	nop    DWORD PTR [rax]
  40c436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c440:	push   r12
  40c442:	push   rbp
  40c443:	push   rdi
  40c444:	push   rsi
  40c445:	push   rbx
  40c446:	sub    rsp,0x40
  40c44a:	mov    rsi,rcx
  40c44d:	mov    ecx,DWORD PTR [rdx+0x20]
  40c450:	mov    rbx,rdx
  40c453:	cmp    ecx,0x9
  40c456:	ja     0x40c680
  40c45c:	lea    rax,[rip+0x41f1d]        # 0x44e380
  40c463:	mov    r8d,ecx
  40c466:	movsxd rdx,DWORD PTR [rax+r8*4]
  40c46a:	add    rax,rdx
  40c46d:	jmp    rax
  40c46f:	nop
  40c470:	cmp    BYTE PTR [rsi+0x494],0x0
  40c477:	je     0x40c483
  40c479:	cmp    BYTE PTR [rsi+0x10],0x0
  40c47d:	jne    0x40c6c4
  40c483:	mov    ebx,DWORD PTR [rsi+0x510]
  40c489:	lea    eax,[rbx+0x1]
  40c48c:	mov    DWORD PTR [rsi+0x510],eax
  40c492:	jmp    0x40c4af
  40c494:	cmp    BYTE PTR [rsi+0x43d],0x0
  40c49b:	je     0x40c6b1
  40c4a1:	mov    rcx,QWORD PTR [rsi+0x28]
  40c4a5:	mov    edx,DWORD PTR [rcx+0x3c]
  40c4a8:	call   0x40b170
  40c4ad:	mov    ebx,eax
  40c4af:	mov    edx,0x15
  40c4b4:	mov    rcx,rsi
  40c4b7:	call   0x41d0e0
  40c4bc:	lea    rdx,[rip+0x41eba]        # 0x44e37d
  40c4c3:	mov    r8d,ebx
  40c4c6:	mov    rcx,rax
  40c4c9:	mov    rdi,rax
  40c4cc:	call   0x449900
  40c4d1:	mov    rax,rdi
  40c4d4:	add    rsp,0x40
  40c4d8:	pop    rbx
  40c4d9:	pop    rsi
  40c4da:	pop    rdi
  40c4db:	pop    rbp
  40c4dc:	pop    r12
  40c4de:	ret    
  40c4df:	nop
  40c4e0:	cmp    BYTE PTR [rsi+0x425],0x0
  40c4e7:	jne    0x40c700
  40c4ed:	cmp    QWORD PTR [rsi+0x268],0x0
  40c4f5:	je     0x40c744
  40c4fb:	cmp    DWORD PTR [rbx+0x20],0x1
  40c4ff:	je     0x40c720
  40c505:	mov    rdi,QWORD PTR [rsi+0x270]
  40c50c:	test   rdi,rdi
  40c50f:	jne    0x40c4d1
  40c511:	mov    ebx,0x1
  40c516:	jmp    0x40c4af
  40c518:	nop    DWORD PTR [rax+rax*1+0x0]
  40c520:	cmp    ecx,0x2
  40c523:	je     0x40c730
  40c529:	mov    rcx,QWORD PTR [rsi+0x108]
  40c530:	call   0x41ad80
  40c535:	test   rax,rax
  40c538:	mov    rbx,rax
  40c53b:	je     0x40c865
  40c541:	mov    rcx,rbx
  40c544:	call   0x4493c0
  40c549:	lea    edx,[rax+rax*1+0x3]
  40c54d:	mov    rbp,rax
  40c550:	mov    rcx,rsi
  40c553:	call   0x41d0e0
  40c558:	mov    rdi,rax
  40c55b:	mov    BYTE PTR [rax],0x22
  40c55e:	lea    rdx,[rax+0x1]
  40c562:	mov    eax,ebp
  40c564:	add    rax,rbx
  40c567:	nop    WORD PTR [rax+rax*1+0x0]
  40c570:	cmp    rbx,rax
  40c573:	je     0x40c59e
  40c575:	add    rbx,0x1
  40c579:	movzx  r8d,BYTE PTR [rbx-0x1]
  40c57e:	cmp    r8b,0x22
  40c582:	je     0x40c6a1
  40c588:	cmp    r8b,0x5c
  40c58c:	je     0x40c6a1
  40c592:	mov    BYTE PTR [rdx],r8b
  40c595:	add    rdx,0x1
  40c599:	cmp    rbx,rax
  40c59c:	jne    0x40c575
  40c59e:	mov    rax,rdi
  40c5a1:	mov    BYTE PTR [rdx],0x22
  40c5a4:	mov    BYTE PTR [rdx+0x1],0x0
  40c5a8:	add    rsp,0x40
  40c5ac:	pop    rbx
  40c5ad:	pop    rsi
  40c5ae:	pop    rdi
  40c5af:	pop    rbp
  40c5b0:	pop    r12
  40c5b2:	ret    
  40c5b3:	mov    rax,QWORD PTR [rsi+0x28]
  40c5b7:	mov    ebx,DWORD PTR [rax+0x30]
  40c5ba:	sub    ebx,0x1
  40c5bd:	jmp    0x40c4af
  40c5c2:	mov    rax,QWORD PTR [rsi]
  40c5c5:	test   rax,rax
  40c5c8:	je     0x40c511
  40c5ce:	xor    ebx,ebx
  40c5d0:	cmp    BYTE PTR [rax+0x6d],0x0
  40c5d4:	sete   bl
  40c5d7:	jmp    0x40c4af
  40c5dc:	nop    DWORD PTR [rax+0x0]
  40c5e0:	cmp    BYTE PTR [rsi+0x425],0x0
  40c5e7:	jne    0x40c6e0
  40c5ed:	mov    rcx,rsi
  40c5f0:	call   0x41ae30
  40c5f5:	mov    rdi,QWORD PTR [rax+0x58]
  40c5f9:	mov    rbx,rax
  40c5fc:	test   rdi,rdi
  40c5ff:	jne    0x40c50c
  40c605:	mov    rcx,rax
  40c608:	call   0x41ae40
  40c60d:	test   rax,rax
  40c610:	je     0x40c7fa
  40c616:	mov    rcx,rax
  40c619:	call   0x41ad90
  40c61e:	test   rax,rax
  40c621:	je     0x40c803
  40c627:	lea    rcx,[rax+0x28]
  40c62b:	call   QWORD PTR [rip+0x58193]        # 0x4647c4
  40c631:	test   rax,rax
  40c634:	mov    rcx,rax
  40c637:	je     0x40c803
  40c63d:	call   0x449540
  40c642:	mov    rcx,rax
  40c645:	mov    r12,rax
  40c648:	call   0x4493c0
  40c64d:	lea    rdx,[rax+0x2]
  40c651:	mov    rcx,rsi
  40c654:	mov    rbp,rax
  40c657:	call   0x41d0e0
  40c65c:	lea    rcx,[rax+0x1]
  40c660:	mov    rdi,rax
  40c663:	mov    BYTE PTR [rax],0x22
  40c666:	mov    rdx,r12
  40c669:	call   0x4493d8
  40c66e:	mov    BYTE PTR [rdi+rbp*1],0x22
  40c672:	mov    QWORD PTR [rbx+0x58],rdi
  40c676:	jmp    0x40c50c
  40c67b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c680:	mov    r9,QWORD PTR [rbx]
  40c683:	lea    r8,[rip+0x41be2]        # 0x44e26c
  40c68a:	mov    edx,0x4
  40c68f:	mov    rcx,rsi
  40c692:	mov    ebx,0x1
  40c697:	call   0x414b60
  40c69c:	jmp    0x40c4af
  40c6a1:	mov    BYTE PTR [rdx],0x5c
  40c6a4:	mov    BYTE PTR [rdx+0x1],r8b
  40c6a8:	add    rdx,0x2
  40c6ac:	jmp    0x40c570
  40c6b1:	mov    rax,QWORD PTR [rsi+0x1a8]
  40c6b8:	mov    rcx,QWORD PTR [rsi+0x28]
  40c6bc:	mov    edx,DWORD PTR [rax-0x18]
  40c6bf:	jmp    0x40c4a8
  40c6c4:	lea    r8,[rip+0x41c75]        # 0x44e340
  40c6cb:	mov    edx,0x3
  40c6d0:	mov    rcx,rsi
  40c6d3:	call   0x414b60
  40c6d8:	jmp    0x40c483
  40c6dd:	nop    DWORD PTR [rax]
  40c6e0:	mov    r9,QWORD PTR [rbx]
  40c6e3:	lea    r8,[rip+0x41b9e]        # 0x44e288
  40c6ea:	mov    edx,0x14
  40c6ef:	mov    rcx,rsi
  40c6f2:	call   0x414b90
  40c6f7:	jmp    0x40c5ed
  40c6fc:	nop    DWORD PTR [rax+0x0]
  40c700:	mov    r9,QWORD PTR [rbx]
  40c703:	lea    r8,[rip+0x41b7e]        # 0x44e288
  40c70a:	mov    edx,0x14
  40c70f:	mov    rcx,rsi
  40c712:	call   0x414b90
  40c717:	jmp    0x40c4ed
  40c71c:	nop    DWORD PTR [rax+0x0]
  40c720:	mov    rdi,QWORD PTR [rsi+0x268]
  40c727:	jmp    0x40c50c
  40c72c:	nop    DWORD PTR [rax+0x0]
  40c730:	mov    rcx,QWORD PTR [rsi+0x28]
  40c734:	mov    edx,DWORD PTR [rcx+0x3c]
  40c737:	call   0x40b1c0
  40c73c:	mov    rbx,rax
  40c73f:	jmp    0x40c541
  40c744:	mov    rdi,QWORD PTR [rip+0x58039]        # 0x464784
  40c74b:	call   rdi
  40c74d:	xor    ecx,ecx
  40c74f:	mov    DWORD PTR [rax],0x0
  40c755:	call   QWORD PTR [rip+0x580a1]        # 0x4647fc
  40c75b:	cmp    rax,0xffffffffffffffff
  40c75f:	mov    QWORD PTR [rsp+0x38],rax
  40c764:	je     0x40c827
  40c76a:	lea    rcx,[rsp+0x38]
  40c76f:	call   QWORD PTR [rip+0x5804f]        # 0x4647c4
  40c775:	test   rax,rax
  40c778:	mov    rdi,rax
  40c77b:	je     0x40c833
  40c781:	mov    rcx,rsi
  40c784:	mov    edx,0xe
  40c789:	call   0x41d0e0
  40c78e:	movsxd rcx,DWORD PTR [rdi+0x10]
  40c792:	lea    rdx,[rip+0x421a7]        # 0x44e940
  40c799:	mov    r9d,DWORD PTR [rdi+0xc]
  40c79d:	mov    QWORD PTR [rsi+0x268],rax
  40c7a4:	mov    r8,QWORD PTR [rdx+rcx*8]
  40c7a8:	mov    ecx,DWORD PTR [rdi+0x14]
  40c7ab:	lea    edx,[rcx+0x76c]
  40c7b1:	mov    rcx,rax
  40c7b4:	mov    DWORD PTR [rsp+0x20],edx
  40c7b8:	lea    rdx,[rip+0x41b1c]        # 0x44e2db
  40c7bf:	call   0x449900
  40c7c4:	mov    rcx,rsi
  40c7c7:	mov    edx,0xb
  40c7cc:	call   0x41d0e0
  40c7d1:	mov    edx,DWORD PTR [rdi]
  40c7d3:	mov    r9d,DWORD PTR [rdi+0x4]
  40c7d7:	mov    rcx,rax
  40c7da:	mov    r8d,DWORD PTR [rdi+0x8]
  40c7de:	mov    QWORD PTR [rsi+0x270],rax
  40c7e5:	mov    DWORD PTR [rsp+0x20],edx
  40c7e9:	lea    rdx,[rip+0x41af8]        # 0x44e2e8
  40c7f0:	call   0x449900
  40c7f5:	jmp    0x40c4fb
  40c7fa:	mov    rdi,QWORD PTR [rbx+0x58]
  40c7fe:	jmp    0x40c50c
  40c803:	lea    r8,[rip+0x41aae]        # 0x44e2b8
  40c80a:	xor    edx,edx
  40c80c:	mov    rcx,rsi
  40c80f:	call   0x414d60
  40c814:	lea    rax,[rip+0x41a36]        # 0x44e251
  40c81b:	mov    QWORD PTR [rbx+0x58],rax
  40c81f:	mov    rdi,rax
  40c822:	jmp    0x40c4d1
  40c827:	call   rdi
  40c829:	mov    eax,DWORD PTR [rax]
  40c82b:	test   eax,eax
  40c82d:	je     0x40c76a
  40c833:	lea    r8,[rip+0x41ac6]        # 0x44e300
  40c83a:	xor    edx,edx
  40c83c:	mov    rcx,rsi
  40c83f:	call   0x414d60
  40c844:	lea    rax,[rip+0x41ad7]        # 0x44e322
  40c84b:	mov    QWORD PTR [rsi+0x268],rax
  40c852:	lea    rax,[rip+0x41ad7]        # 0x44e330
  40c859:	mov    QWORD PTR [rsi+0x270],rax
  40c860:	jmp    0x40c4fb
  40c865:	call   0x449548
  40c86a:	nop
  40c86b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c870:	mov    r8d,r8d
  40c873:	mov    rax,rcx
  40c876:	add    r8,rdx
  40c879:	nop    DWORD PTR [rax+0x0]
  40c880:	cmp    rdx,r8
  40c883:	je     0x40c8a6
  40c885:	add    rdx,0x1
  40c889:	movzx  r9d,BYTE PTR [rdx-0x1]
  40c88e:	cmp    r9b,0x22
  40c892:	je     0x40c8b0
  40c894:	cmp    r9b,0x5c
  40c898:	je     0x40c8b0
  40c89a:	mov    BYTE PTR [rax],r9b
  40c89d:	add    rax,0x1
  40c8a1:	cmp    rdx,r8
  40c8a4:	jne    0x40c885
  40c8a6:	ret    
  40c8a7:	nop    WORD PTR [rax+rax*1+0x0]
  40c8b0:	mov    BYTE PTR [rax],0x5c
  40c8b3:	mov    BYTE PTR [rax+0x1],r9b
  40c8b7:	add    rax,0x2
  40c8bb:	jmp    0x40c880
  40c8bd:	nop    DWORD PTR [rax]
  40c8c0:	push   rbx
  40c8c1:	sub    rsp,0x30
  40c8c5:	movzx  eax,WORD PTR [rdx+0x18]
  40c8c9:	cmp    eax,r9d
  40c8cc:	je     0x40c970
  40c8d2:	jbe    0x40c940
  40c8d4:	lea    r10d,[r9+0x1]
  40c8d8:	cmp    eax,r10d
  40c8db:	jne    0x40c910
  40c8dd:	movzx  edx,BYTE PTR [rdx+0x1c]
  40c8e1:	test   dl,0x2
  40c8e4:	je     0x40c910
  40c8e6:	cmp    BYTE PTR [rcx+0x437],0x0
  40c8ed:	mov    ebx,0x1
  40c8f2:	je     0x40c92f
  40c8f4:	and    edx,0x4
  40c8f7:	jne    0x40c92f
  40c8f9:	lea    r8,[rip+0x41aa8]        # 0x44e3a8
  40c900:	mov    edx,0x2
  40c905:	call   0x414b60
  40c90a:	jmp    0x40c92f
  40c90c:	nop    DWORD PTR [rax+0x0]
  40c910:	mov    DWORD PTR [rsp+0x28],r9d
  40c915:	mov    DWORD PTR [rsp+0x20],eax
  40c919:	mov    edx,0x3
  40c91e:	mov    r9,QWORD PTR [r8]
  40c921:	lea    r8,[rip+0x41ab0]        # 0x44e3d8
  40c928:	xor    ebx,ebx
  40c92a:	call   0x414b60
  40c92f:	mov    eax,ebx
  40c931:	add    rsp,0x30
  40c935:	pop    rbx
  40c936:	ret    
  40c937:	nop    WORD PTR [rax+rax*1+0x0]
  40c940:	mov    DWORD PTR [rsp+0x28],eax
  40c944:	mov    DWORD PTR [rsp+0x20],r9d
  40c949:	mov    edx,0x3
  40c94e:	mov    r9,QWORD PTR [r8]
  40c951:	lea    r8,[rip+0x41ab8]        # 0x44e410
  40c958:	xor    ebx,ebx
  40c95a:	call   0x414b60
  40c95f:	mov    eax,ebx
  40c961:	add    rsp,0x30
  40c965:	pop    rbx
  40c966:	ret    
  40c967:	nop    WORD PTR [rax+rax*1+0x0]
  40c970:	mov    ebx,0x1
  40c975:	mov    eax,ebx
  40c977:	add    rsp,0x30
  40c97b:	pop    rbx
  40c97c:	ret    
  40c97d:	nop    DWORD PTR [rax]
  40c980:	push   rdi
  40c981:	push   rsi
  40c982:	push   rbx
  40c983:	sub    rsp,0x20
  40c987:	test   rdx,rdx
  40c98a:	mov    rsi,rdx
  40c98d:	mov    rdi,r8
  40c990:	mov    ebx,r9d
  40c993:	je     0x40c9d0
  40c995:	add    rcx,0x88
  40c99c:	call   0x40bfd0
  40c9a1:	mov    r9d,ebx
  40c9a4:	mov    DWORD PTR [rax+0x30],0x1
  40c9ab:	mov    QWORD PTR [rax+0x28],rsi
  40c9af:	lea    rdx,[r9+r9*2]
  40c9b3:	mov    QWORD PTR [rax+0x20],0x0
  40c9bb:	mov    QWORD PTR [rax+0x10],rdi
  40c9bf:	lea    rdx,[rdi+rdx*8]
  40c9c3:	mov    QWORD PTR [rax+0x18],rdx
  40c9c7:	add    rsp,0x20
  40c9cb:	pop    rbx
  40c9cc:	pop    rsi
  40c9cd:	pop    rdi
  40c9ce:	ret    
  40c9cf:	nop
  40c9d0:	mov    rax,QWORD PTR [rcx+0x88]
  40c9d7:	test   rax,rax
  40c9da:	je     0x40c995
  40c9dc:	cmp    DWORD PTR [rax+0x30],0x2
  40c9e0:	je     0x40c9f0
  40c9e2:	mov    rsi,QWORD PTR [rax+0x28]
  40c9e6:	jmp    0x40c995
  40c9e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c9f0:	mov    rax,QWORD PTR [rax+0x28]
  40c9f4:	mov    rsi,QWORD PTR [rax]
  40c9f7:	jmp    0x40c995
  40c9f9:	nop    DWORD PTR [rax+0x0]
  40ca00:	push   rbp
  40ca01:	push   r12
  40ca03:	push   rdi
  40ca04:	push   rsi
  40ca05:	push   rbx
  40ca06:	mov    rbp,rsp
  40ca09:	sub    rsp,0x20
  40ca0d:	cmp    DWORD PTR [rdx+0x20],0x7
  40ca11:	mov    rbx,rcx
  40ca14:	mov    rsi,rdx
  40ca17:	je     0x40cae0
  40ca1d:	call   0x40c440
  40ca22:	mov    rcx,rax
  40ca25:	mov    r12,rax
  40ca28:	call   0x4493c0
  40ca2d:	lea    r9,[rax+0x1f]
  40ca31:	mov    rdi,rax
  40ca34:	mov    rax,r9
  40ca37:	and    rax,0xfffffffffffffff0
  40ca3b:	call   0x43d410
  40ca40:	sub    rsp,rax
  40ca43:	mov    r8,rdi
  40ca46:	mov    rdx,r12
  40ca49:	lea    r10,[rsp+0x20]
  40ca4e:	mov    rcx,r10
  40ca51:	call   0x449450
  40ca56:	mov    r8,rdi
  40ca59:	mov    r9d,0x1
  40ca5f:	mov    rdx,rax
  40ca62:	mov    BYTE PTR [rax+rdi*1],0xa
  40ca66:	mov    rcx,rbx
  40ca69:	call   0x413eb0
  40ca6e:	mov    rcx,rbx
  40ca71:	call   0x41baa0
  40ca76:	mov    rcx,rbx
  40ca79:	call   0x41c410
  40ca7e:	mov    rcx,rbx
  40ca81:	mov    QWORD PTR [rbx+0x1a8],rax
  40ca88:	call   0x41e080
  40ca8d:	xor    edx,edx
  40ca8f:	mov    r8,rax
  40ca92:	mov    r9d,0x1
  40ca98:	mov    rcx,rbx
  40ca9b:	call   0x40c980
  40caa0:	mov    rax,QWORD PTR [rbx]
  40caa3:	mov    rdi,QWORD PTR [rax+0x20]
  40caa7:	cmp    QWORD PTR [rax],rdi
  40caaa:	je     0x40cac3
  40caac:	mov    r9,QWORD PTR [rsi]
  40caaf:	lea    r8,[rip+0x417b6]        # 0x44e26c
  40cab6:	mov    edx,0x4
  40cabb:	mov    rcx,rbx
  40cabe:	call   0x414b60
  40cac3:	mov    rcx,rbx
  40cac6:	call   0x414000
  40cacb:	mov    eax,0x1
  40cad0:	mov    rsp,rbp
  40cad3:	pop    rbx
  40cad4:	pop    rsi
  40cad5:	pop    rdi
  40cad6:	pop    r12
  40cad8:	pop    rbp
  40cad9:	ret    
  40cada:	nop    WORD PTR [rax+rax*1+0x0]
  40cae0:	xor    eax,eax
  40cae2:	cmp    BYTE PTR [rcx+0x10],0x0
  40cae6:	jne    0x40cad0
  40cae8:	call   0x4146b0
  40caed:	mov    rsp,rbp
  40caf0:	pop    rbx
  40caf1:	pop    rsi
  40caf2:	pop    rdi
  40caf3:	pop    r12
  40caf5:	pop    rbp
  40caf6:	ret    
  40caf7:	nop    WORD PTR [rax+rax*1+0x0]
  40cb00:	push   rdi
  40cb01:	push   rsi
  40cb02:	push   rbx
  40cb03:	sub    rsp,0x20
  40cb07:	mov    rdi,r8
  40cb0a:	mov    rsi,r9
  40cb0d:	mov    rbx,rdx
  40cb10:	add    rcx,0x88
  40cb17:	add    rsi,rdi
  40cb1a:	call   0x40bfd0
  40cb1f:	mov    DWORD PTR [rax+0x30],0x1
  40cb26:	mov    QWORD PTR [rax+0x28],rbx
  40cb2a:	mov    QWORD PTR [rax+0x20],0x0
  40cb32:	mov    QWORD PTR [rax+0x10],rdi
  40cb36:	mov    QWORD PTR [rax+0x18],rsi
  40cb3a:	or     WORD PTR [rbx+0x18],0x800
  40cb40:	add    rsp,0x20
  40cb44:	pop    rbx
  40cb45:	pop    rsi
  40cb46:	pop    rdi
  40cb47:	ret    
  40cb48:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb50:	push   rbp
  40cb51:	push   rdi
  40cb52:	push   rsi
  40cb53:	push   rbx
  40cb54:	sub    rsp,0x28
  40cb58:	mov    rbx,QWORD PTR [rcx+0x88]
  40cb5f:	lea    rax,[rcx+0x50]
  40cb63:	mov    rdi,rcx
  40cb66:	cmp    rbx,rax
  40cb69:	je     0x40cc0a
  40cb6f:	mov    rsi,QWORD PTR [rbx+0x28]
  40cb73:	test   rsi,rsi
  40cb76:	je     0x40cb9c
  40cb78:	cmp    DWORD PTR [rbx+0x30],0x2
  40cb7c:	je     0x40cbd0
  40cb7e:	mov    rax,QWORD PTR [rbx+0x8]
  40cb82:	test   rax,rax
  40cb85:	je     0x40cb96
  40cb87:	cmp    DWORD PTR [rax+0x30],0x2
  40cb8b:	mov    rax,QWORD PTR [rax+0x28]
  40cb8f:	je     0x40cc05
  40cb91:	cmp    rsi,rax
  40cb94:	je     0x40cb9c
  40cb96:	and    WORD PTR [rsi+0x18],0xf7ff
  40cb9c:	mov    rcx,QWORD PTR [rbx+0x20]
  40cba0:	test   rcx,rcx
  40cba3:	je     0x40cbaa
  40cba5:	call   0x41d0b0
  40cbaa:	mov    rax,QWORD PTR [rbx+0x8]
  40cbae:	mov    rcx,rbx
  40cbb1:	mov    QWORD PTR [rdi+0x88],rax
  40cbb8:	mov    QWORD PTR [rax],0x0
  40cbbf:	add    rsp,0x28
  40cbc3:	pop    rbx
  40cbc4:	pop    rsi
  40cbc5:	pop    rdi
  40cbc6:	pop    rbp
  40cbc7:	jmp    0x4494c8
  40cbcc:	nop    DWORD PTR [rax+0x0]
  40cbd0:	cmp    QWORD PTR [rbx+0x20],0x0
  40cbd5:	mov    rbp,QWORD PTR [rsi]
  40cbd8:	je     0x40cbe8
  40cbda:	mov    rcx,QWORD PTR [rsi+0x8]
  40cbde:	test   rcx,rcx
  40cbe1:	je     0x40cbe8
  40cbe3:	call   0x4494c8
  40cbe8:	mov    rcx,rsi
  40cbeb:	call   0x4494c8
  40cbf0:	test   rbp,rbp
  40cbf3:	mov    QWORD PTR [rbx+0x28],0x0
  40cbfb:	je     0x40cb9c
  40cbfd:	mov    rsi,rbp
  40cc00:	jmp    0x40cb7e
  40cc05:	mov    rax,QWORD PTR [rax]
  40cc08:	jmp    0x40cb91
  40cc0a:	call   0x449548
  40cc0f:	nop
  40cc10:	mov    rax,QWORD PTR [rcx+0x88]
  40cc17:	cmp    DWORD PTR [rax+0x30],0x2
  40cc1b:	mov    rax,QWORD PTR [rax+0x28]
  40cc1f:	je     0x40cc40
  40cc21:	test   rax,rax
  40cc24:	je     0x40cc50
  40cc26:	mov    rax,QWORD PTR [rax+0x20]
  40cc2a:	test   rax,rax
  40cc2d:	je     0x40cc50
  40cc2f:	movzx  eax,BYTE PTR [rax+0x1c]
  40cc33:	shr    al,0x2
  40cc36:	and    eax,0x1
  40cc39:	ret    
  40cc3a:	nop    WORD PTR [rax+rax*1+0x0]
  40cc40:	mov    rax,QWORD PTR [rax]
  40cc43:	test   rax,rax
  40cc46:	jne    0x40cc26
  40cc48:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc50:	xor    eax,eax
  40cc52:	ret    
  40cc53:	nop    DWORD PTR [rax]
  40cc56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc60:	add    DWORD PTR [rcx+0x1d8],edx
  40cc66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc70:	sub    edx,0x1
  40cc73:	cmp    edx,0xffffffff
  40cc76:	je     0x40ccc0
  40cc78:	mov    rax,QWORD PTR [rcx+0x1a8]
  40cc7f:	mov    r8,QWORD PTR [rcx+0x1d0]
  40cc86:	sub    rax,0x18
  40cc8a:	cmp    rax,QWORD PTR [r8+0x10]
  40cc8e:	mov    QWORD PTR [rcx+0x1a8],rax
  40cc95:	jne    0x40cc70
  40cc97:	mov    rax,QWORD PTR [r8+0x8]
  40cc9b:	test   rax,rax
  40cc9e:	je     0x40cc70
  40cca0:	mov    QWORD PTR [rcx+0x1d0],rax
  40cca7:	mov    rax,QWORD PTR [rax+0x18]
  40ccab:	sub    edx,0x1
  40ccae:	cmp    edx,0xffffffff
  40ccb1:	mov    QWORD PTR [rcx+0x1a8],rax
  40ccb8:	jne    0x40cc78
  40ccba:	nop    WORD PTR [rax+rax*1+0x0]
  40ccc0:	ret    
  40ccc1:	nop    DWORD PTR [rax+rax*1+0x0]
  40ccc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ccd0:	sub    rsp,0x28
  40ccd4:	mov    rax,QWORD PTR [rcx+0x88]
  40ccdb:	cmp    QWORD PTR [rax+0x8],0x0
  40cce0:	je     0x40cd40
  40cce2:	cmp    edx,0x1
  40cce5:	jne    0x40cd49
  40cce7:	mov    edx,DWORD PTR [rax+0x30]
  40ccea:	cmp    edx,0x1
  40cced:	je     0x40cd30
  40ccef:	test   edx,edx
  40ccf1:	je     0x40cd20
  40ccf3:	cmp    edx,0x2
  40ccf6:	jne    0x40cd49
  40ccf8:	sub    QWORD PTR [rax+0x10],0x8
  40ccfd:	mov    rax,QWORD PTR [rcx+0x88]
  40cd04:	mov    rax,QWORD PTR [rax+0x28]
  40cd08:	test   rax,rax
  40cd0b:	je     0x40cd49
  40cd0d:	sub    QWORD PTR [rax+0x10],0x4
  40cd12:	add    rsp,0x28
  40cd16:	ret    
  40cd17:	nop    WORD PTR [rax+rax*1+0x0]
  40cd20:	sub    QWORD PTR [rax+0x10],0x8
  40cd25:	add    rsp,0x28
  40cd29:	ret    
  40cd2a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd30:	sub    QWORD PTR [rax+0x10],0x18
  40cd35:	add    rsp,0x28
  40cd39:	ret    
  40cd3a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd40:	add    rsp,0x28
  40cd44:	jmp    0x40cc60
  40cd49:	call   0x449548
  40cd4e:	nop
  40cd4f:	nop
  40cd50:	push   rbp
  40cd51:	push   r15
  40cd53:	push   r14
  40cd55:	push   r13
  40cd57:	push   r12
  40cd59:	push   rdi
  40cd5a:	push   rsi
  40cd5b:	push   rbx
  40cd5c:	sub    rsp,0x48
  40cd60:	lea    rbp,[rsp+0x80]
  40cd68:	mov    rbx,rcx
  40cd6b:	mov    rcx,QWORD PTR [r8]
  40cd6e:	mov    rdi,r9
  40cd71:	mov    DWORD PTR [rbp+0x18],edx
  40cd74:	mov    rsi,r8
  40cd77:	call   0x41c550
  40cd7c:	mov    rcx,rdi
  40cd7f:	mov    r13d,eax
  40cd82:	call   0x41c550
  40cd87:	lea    eax,[r13+rax*1+0x1]
  40cd8c:	add    rax,0x1e
  40cd90:	shr    rax,0x4
  40cd94:	shl    rax,0x4
  40cd98:	call   0x43d410
  40cd9d:	mov    rdx,QWORD PTR [rsi]
  40cda0:	xor    r9d,r9d
  40cda3:	sub    rsp,rax
  40cda6:	mov    rcx,rbx
  40cda9:	lea    r14,[rsp+0x40]
  40cdae:	mov    r8,r14
  40cdb1:	call   0x41c590
  40cdb6:	mov    r15,rax
  40cdb9:	mov    rax,QWORD PTR [rsi]
  40cdbc:	mov    r8,r15
  40cdbf:	cmp    BYTE PTR [rax+0x4],0x7
  40cdc3:	je     0x40ceb4
  40cdc9:	cmp    BYTE PTR [rdi+0x4],0x51
  40cdcd:	jne    0x40cebd
  40cdd3:	mov    rdx,r14
  40cdd6:	mov    r9d,0x1
  40cddc:	mov    BYTE PTR [r8],0xa
  40cde0:	mov    rcx,rbx
  40cde3:	sub    r8,r14
  40cde6:	call   0x413eb0
  40cdeb:	mov    rcx,rbx
  40cdee:	call   0x41baa0
  40cdf3:	mov    rcx,rbx
  40cdf6:	call   0x41c410
  40cdfb:	mov    rcx,rbx
  40cdfe:	mov    QWORD PTR [rbx+0x1a8],rax
  40ce05:	call   0x41e080
  40ce0a:	mov    r13,rax
  40ce0d:	mov    rax,QWORD PTR [rbx]
  40ce10:	mov    rdx,QWORD PTR [rax+0x20]
  40ce14:	cmp    QWORD PTR [rax],rdx
  40ce17:	je     0x40cee0
  40ce1d:	mov    rcx,rbx
  40ce20:	mov    r12d,DWORD PTR [r13+0x0]
  40ce24:	call   0x414000
  40ce29:	mov    edx,0x1
  40ce2e:	mov    rcx,rbx
  40ce31:	call   0x40ccd0
  40ce36:	mov    BYTE PTR [r15],0x0
  40ce3a:	mov    rax,QWORD PTR [rsi]
  40ce3d:	mov    rdx,QWORD PTR [rax]
  40ce40:	mov    QWORD PTR [r13+0x0],rdx
  40ce44:	mov    rdx,QWORD PTR [rax+0x8]
  40ce48:	mov    QWORD PTR [r13+0x8],rdx
  40ce4c:	mov    rax,QWORD PTR [rax+0x10]
  40ce50:	mov    QWORD PTR [r13+0x10],rax
  40ce54:	mov    QWORD PTR [rsi],r13
  40ce57:	xor    esi,esi
  40ce59:	and    WORD PTR [r13+0x6],0xfff7
  40ce5f:	cmp    DWORD PTR [rbx+0x414],0xd
  40ce66:	mov    DWORD PTR [r13+0x0],r12d
  40ce6a:	je     0x40cea1
  40ce6c:	mov    rdx,rdi
  40ce6f:	mov    rcx,rbx
  40ce72:	call   0x41f080
  40ce77:	mov    r8d,DWORD PTR [rbp+0x18]
  40ce7b:	mov    QWORD PTR [rsp+0x30],rax
  40ce80:	lea    rax,[rip+0x415c1]        # 0x44e448
  40ce87:	mov    QWORD PTR [rsp+0x28],r14
  40ce8c:	xor    r9d,r9d
  40ce8f:	mov    edx,0x3
  40ce94:	mov    QWORD PTR [rsp+0x20],rax
  40ce99:	mov    rcx,rbx
  40ce9c:	call   0x414c40
  40cea1:	mov    eax,esi
  40cea3:	lea    rsp,[rbp-0x38]
  40cea7:	pop    rbx
  40cea8:	pop    rsi
  40cea9:	pop    rdi
  40ceaa:	pop    r12
  40ceac:	pop    r13
  40ceae:	pop    r14
  40ceb0:	pop    r15
  40ceb2:	pop    rbp
  40ceb3:	ret    
  40ceb4:	cmp    BYTE PTR [rdi+0x4],0x0
  40ceb8:	jne    0x40ced3
  40ceba:	mov    r8,r15
  40cebd:	xor    r9d,r9d
  40cec0:	mov    rdx,rdi
  40cec3:	mov    rcx,rbx
  40cec6:	call   0x41c590
  40cecb:	mov    r8,rax
  40cece:	jmp    0x40cdd3
  40ced3:	lea    r8,[r15+0x1]
  40ced7:	mov    BYTE PTR [r15],0x20
  40cedb:	jmp    0x40cdc9
  40cee0:	mov    QWORD PTR [rsi],r13
  40cee3:	mov    rcx,rbx
  40cee6:	mov    esi,0x1
  40ceeb:	call   0x414000
  40cef0:	jmp    0x40cea1
  40cef2:	nop    DWORD PTR [rax+0x0]
  40cef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf00:	push   r15
  40cf02:	push   r14
  40cf04:	push   r13
  40cf06:	push   r12
  40cf08:	push   rbp
  40cf09:	push   rdi
  40cf0a:	push   rsi
  40cf0b:	push   rbx
  40cf0c:	sub    rsp,0xd8
  40cf13:	mov    BYTE PTR [rcx+0x1a0],0x0
  40cf1a:	mov    BYTE PTR [rcx+0x13],0x0
  40cf1e:	mov    rsi,rcx
  40cf21:	mov    BYTE PTR [rcx+0xb4],0x1
  40cf28:	mov    QWORD PTR [rsp+0x128],rdx
  40cf30:	movzx  edx,WORD PTR [rdx+0x18]
  40cf34:	mov    QWORD PTR [rsp+0x130],r8
  40cf3c:	mov    DWORD PTR [rsp+0x138],r9d
  40cf44:	mov    eax,edx
  40cf46:	shr    ax,0x6
  40cf4a:	mov    ecx,eax
  40cf4c:	and    cx,0x84
  40cf51:	cmp    cx,0x4
  40cf55:	je     0x40d1d0
  40cf5b:	test   al,0x4
  40cf5d:	jne    0x40d1b0
  40cf63:	mov    rbx,QWORD PTR [rsp+0x128]
  40cf6b:	mov    rbx,QWORD PTR [rbx+0x20]
  40cf6f:	mov    rdi,rbx
  40cf72:	mov    QWORD PTR [rsp+0x58],rbx
  40cf77:	xor    ebx,ebx
  40cf79:	test   BYTE PTR [rdi+0x1c],0x1
  40cf7d:	jne    0x40d225
  40cf83:	test   al,0x80
  40cf85:	je     0x40d160
  40cf8b:	mov    rdi,QWORD PTR [rsp+0x128]
  40cf93:	or     eax,0x20
  40cf96:	shl    eax,0x6
  40cf99:	movzx  edi,WORD PTR [rdi+0x18]
  40cf9d:	mov    edx,edi
  40cf9f:	mov    WORD PTR [rsp+0x48],di
  40cfa4:	mov    rdi,QWORD PTR [rsp+0x128]
  40cfac:	and    edx,0x3f
  40cfaf:	or     eax,edx
  40cfb1:	mov    WORD PTR [rdi+0x18],ax
  40cfb5:	mov    rax,QWORD PTR [rsi+0x3e8]
  40cfbc:	test   rax,rax
  40cfbf:	je     0x40cfd5
  40cfc1:	mov    r8,QWORD PTR [rsp+0x128]
  40cfc9:	mov    edx,DWORD PTR [rsp+0x138]
  40cfd0:	mov    rcx,rsi
  40cfd3:	call   rax
  40cfd5:	mov    rdi,QWORD PTR [rsp+0x58]
  40cfda:	movzx  eax,BYTE PTR [rdi+0x1c]
  40cfde:	mov    BYTE PTR [rsp+0x48],al
  40cfe2:	or     eax,0x8
  40cfe5:	cmp    WORD PTR [rdi+0x18],0x0
  40cfea:	mov    BYTE PTR [rdi+0x1c],al
  40cfed:	jne    0x40d0c1
  40cff3:	test   al,0x20
  40cff5:	jne    0x40d7d2
  40cffb:	mov    rax,QWORD PTR [rsp+0x58]
  40d000:	mov    ebp,DWORD PTR [rax+0x14]
  40d003:	mov    rdi,QWORD PTR [rax+0x8]
  40d007:	cmp    BYTE PTR [rsi+0x43a],0x0
  40d00e:	je     0x40d2d0
  40d014:	lea    r8,[rsp+0xc8]
  40d01c:	mov    edx,ebp
  40d01e:	mov    rcx,rsi
  40d021:	mov    QWORD PTR [rsp+0xc8],0x0
  40d02d:	xor    r14d,r14d
  40d030:	call   0x40bf10
  40d035:	mov    rcx,QWORD PTR [rsi+0x28]
  40d039:	mov    r8d,DWORD PTR [rsp+0x138]
  40d041:	mov    r9d,ebp
  40d044:	mov    rdx,QWORD PTR [rsp+0x128]
  40d04c:	mov    r12,rax
  40d04f:	call   0x40ac10
  40d054:	test   ebp,ebp
  40d056:	mov    r13,rax
  40d059:	je     0x40d092
  40d05b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d060:	mov    r9d,DWORD PTR [rdi]
  40d063:	mov    rdx,QWORD PTR [rsp+0xc8]
  40d06b:	mov    r8,rdi
  40d06e:	mov    DWORD PTR [rsp+0x30],r14d
  40d073:	mov    QWORD PTR [rsp+0x28],r13
  40d078:	mov    rcx,r12
  40d07b:	add    r14d,0x1
  40d07f:	add    rdi,0x18
  40d083:	mov    DWORD PTR [rsp+0x20],r9d
  40d088:	call   0x40bf50
  40d08d:	cmp    r14d,ebp
  40d090:	jne    0x40d060
  40d092:	mov    DWORD PTR [rsp+0x28],ebp
  40d096:	mov    rax,QWORD PTR [r12+0x8]
  40d09b:	mov    r8,r12
  40d09e:	mov    r9,QWORD PTR [rsp+0xc8]
  40d0a6:	mov    rdx,QWORD PTR [rsp+0x128]
  40d0ae:	mov    rcx,rsi
  40d0b1:	mov    QWORD PTR [rsp+0x20],rax
  40d0b6:	call   0x40c050
  40d0bb:	add    DWORD PTR [rip+0x5547f],ebp        # 0x462540
  40d0c1:	test   rbx,rbx
  40d0c4:	je     0x40d2f5
  40d0ca:	cmp    BYTE PTR [rsi+0x10],0x0
  40d0ce:	je     0x40d34a
  40d0d4:	lea    r13,[rsi+0x88]
  40d0db:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0e0:	mov    rbp,QWORD PTR [rbx+0x8]
  40d0e4:	mov    rdi,QWORD PTR [rbx+0x10]
  40d0e8:	mov    rcx,r13
  40d0eb:	mov    r12,QWORD PTR [rbx]
  40d0ee:	mov    QWORD PTR [rbx],0x0
  40d0f5:	call   0x40bfd0
  40d0fa:	sub    rdi,rbp
  40d0fd:	mov    DWORD PTR [rax+0x30],0x0
  40d104:	mov    QWORD PTR [rax+0x28],0x0
  40d10c:	sar    rdi,0x3
  40d110:	mov    QWORD PTR [rax+0x20],rbx
  40d114:	mov    QWORD PTR [rax+0x10],rbp
  40d118:	mov    edx,edi
  40d11a:	lea    rdx,[rbp+rdx*8+0x0]
  40d11f:	mov    QWORD PTR [rax+0x18],rdx
  40d123:	cmp    BYTE PTR [rsi+0x43a],0x0
  40d12a:	jne    0x40d132
  40d12c:	add    DWORD PTR [rip+0x5540e],edi        # 0x462540
  40d132:	test   r12,r12
  40d135:	mov    rbx,r12
  40d138:	jne    0x40d0e0
  40d13a:	mov    BYTE PTR [rsi+0xb4],0x0
  40d141:	mov    eax,0x2
  40d146:	add    rsp,0xd8
  40d14d:	pop    rbx
  40d14e:	pop    rsi
  40d14f:	pop    rdi
  40d150:	pop    rbp
  40d151:	pop    r12
  40d153:	pop    r13
  40d155:	pop    r14
  40d157:	pop    r15
  40d159:	ret    
  40d15a:	nop    WORD PTR [rax+rax*1+0x0]
  40d160:	mov    rdi,QWORD PTR [rsp+0x128]
  40d168:	or     al,0xa0
  40d16a:	shl    eax,0x6
  40d16d:	movzx  edi,WORD PTR [rdi+0x18]
  40d171:	mov    edx,edi
  40d173:	mov    WORD PTR [rsp+0x48],di
  40d178:	mov    rdi,QWORD PTR [rsp+0x128]
  40d180:	and    edx,0x3f
  40d183:	or     eax,edx
  40d185:	mov    WORD PTR [rdi+0x18],ax
  40d189:	mov    rax,QWORD PTR [rsi+0x3d0]
  40d190:	test   rax,rax
  40d193:	je     0x40cfb5
  40d199:	mov    edx,DWORD PTR [rsi+0x30]
  40d19c:	mov    r8,rdi
  40d19f:	mov    rcx,rsi
  40d1a2:	call   rax
  40d1a4:	jmp    0x40cfb5
  40d1a9:	nop    DWORD PTR [rax+0x0]
  40d1b0:	mov    rdx,QWORD PTR [rsp+0x128]
  40d1b8:	mov    BYTE PTR [rsi+0xb4],0x0
  40d1bf:	mov    rcx,rsi
  40d1c2:	call   0x40ca00
  40d1c7:	jmp    0x40d146
  40d1cc:	nop    DWORD PTR [rax+0x0]
  40d1d0:	or     al,0x80
  40d1d2:	mov    rbx,QWORD PTR [rsp+0x128]
  40d1da:	and    edx,0x3f
  40d1dd:	shl    eax,0x6
  40d1e0:	or     eax,edx
  40d1e2:	mov    WORD PTR [rbx+0x18],ax
  40d1e6:	mov    rax,QWORD PTR [rsi+0x3f0]
  40d1ed:	test   rax,rax
  40d1f0:	je     0x40d310
  40d1f6:	mov    rdx,QWORD PTR [rsp+0x128]
  40d1fe:	mov    rcx,rsi
  40d201:	call   rax
  40d203:	test   al,al
  40d205:	je     0x40d310
  40d20b:	mov    rax,QWORD PTR [rsp+0x128]
  40d213:	movzx  eax,WORD PTR [rax+0x18]
  40d217:	mov    WORD PTR [rsp+0x48],ax
  40d21c:	shr    ax,0x6
  40d220:	jmp    0x40cf5b
  40d225:	add    BYTE PTR [rsi+0x18],0x1
  40d229:	add    DWORD PTR [rsi+0x1dc],0x1
  40d230:	mov    BYTE PTR [rsi+0x19],0x1
  40d234:	mov    rcx,rsi
  40d237:	call   0x40ec60
  40d23c:	movzx  edx,BYTE PTR [rax+0x4]
  40d240:	cmp    dl,0x51
  40d243:	jne    0x40d265
  40d245:	test   rbx,rbx
  40d248:	je     0x40d260
  40d24a:	test   BYTE PTR [rbx+0x6],0x1
  40d24e:	jne    0x40d234
  40d250:	cmp    QWORD PTR [rax+0x8],0x0
  40d255:	cmove  rbx,rax
  40d259:	jmp    0x40d234
  40d25b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d260:	mov    rbx,rax
  40d263:	jmp    0x40d234
  40d265:	cmp    dl,0x14
  40d268:	je     0x40d3d1
  40d26e:	cmp    dl,0x16
  40d271:	jne    0x40d27f
  40d273:	lea    rdx,[rsi+0x290]
  40d27a:	cmp    rax,rdx
  40d27d:	jne    0x40d2a4
  40d27f:	mov    edx,0x1
  40d284:	mov    rcx,rsi
  40d287:	call   0x40ccd0
  40d28c:	test   rbx,rbx
  40d28f:	je     0x40d2a4
  40d291:	mov    r9d,0x1
  40d297:	mov    r8,rbx
  40d29a:	xor    edx,edx
  40d29c:	mov    rcx,rsi
  40d29f:	call   0x40c980
  40d2a4:	sub    DWORD PTR [rsi+0x1dc],0x1
  40d2ab:	sub    BYTE PTR [rsi+0x18],0x1
  40d2af:	cmp    BYTE PTR [rsi+0x429],0x0
  40d2b6:	mov    BYTE PTR [rsi+0x19],0x0
  40d2ba:	jne    0x40d381
  40d2c0:	mov    BYTE PTR [rsi+0xb4],0x0
  40d2c7:	xor    eax,eax
  40d2c9:	jmp    0x40d146
  40d2ce:	xchg   ax,ax
  40d2d0:	mov    rdx,QWORD PTR [rsp+0x128]
  40d2d8:	mov    r9d,ebp
  40d2db:	mov    r8,rdi
  40d2de:	mov    rcx,rsi
  40d2e1:	call   0x40c980
  40d2e6:	add    DWORD PTR [rip+0x55254],ebp        # 0x462540
  40d2ec:	test   rbx,rbx
  40d2ef:	jne    0x40d0ca
  40d2f5:	mov    BYTE PTR [rsi+0xb4],0x0
  40d2fc:	mov    eax,0x1
  40d301:	jmp    0x40d146
  40d306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d310:	mov    rax,QWORD PTR [rsi+0x3d0]
  40d317:	test   rax,rax
  40d31a:	je     0x40d20b
  40d320:	mov    edx,DWORD PTR [rsi+0x30]
  40d323:	mov    r8,QWORD PTR [rsp+0x128]
  40d32b:	mov    rcx,rsi
  40d32e:	call   rax
  40d330:	mov    rax,QWORD PTR [rsp+0x128]
  40d338:	movzx  eax,WORD PTR [rax+0x18]
  40d33c:	mov    WORD PTR [rsp+0x48],ax
  40d341:	shr    ax,0x6
  40d345:	jmp    0x40cf5b
  40d34a:	mov    rcx,rsi
  40d34d:	call   0x41c410
  40d352:	mov    r8,rax
  40d355:	mov    BYTE PTR [rax+0x4],0x51
  40d359:	mov    rax,QWORD PTR [rsp+0x130]
  40d361:	mov    r9d,0x1
  40d367:	xor    edx,edx
  40d369:	mov    rcx,rsi
  40d36c:	mov    QWORD PTR [r8+0x8],rax
  40d370:	xor    eax,eax
  40d372:	mov    WORD PTR [r8+0x6],ax
  40d377:	call   0x40c980
  40d37c:	jmp    0x40d0d4
  40d381:	mov    rax,QWORD PTR [rsp+0x128]
  40d389:	mov    rax,QWORD PTR [rax+0x20]
  40d38d:	test   BYTE PTR [rax+0x1c],0x4
  40d391:	jne    0x40d2c0
  40d397:	xor    ebx,ebx
  40d399:	mov    rax,QWORD PTR [rsp+0x128]
  40d3a1:	lea    r8,[rip+0x41110]        # 0x44e4b8
  40d3a8:	mov    edx,0x6
  40d3ad:	mov    rcx,rsi
  40d3b0:	mov    r9,QWORD PTR [rax]
  40d3b3:	call   0x414b90
  40d3b8:	test   rbx,rbx
  40d3bb:	je     0x40d2c0
  40d3c1:	mov    rdx,rbx
  40d3c4:	mov    rcx,rsi
  40d3c7:	call   0x41cea0
  40d3cc:	jmp    0x40d2c0
  40d3d1:	mov    rax,QWORD PTR [rsp+0x128]
  40d3d9:	mov    BYTE PTR [rsi+0x19],0x2
  40d3dd:	cmp    BYTE PTR [rsi+0x43a],0x0
  40d3e4:	mov    rax,QWORD PTR [rax+0x20]
  40d3e8:	setne  BYTE PTR [rsp+0x48]
  40d3ed:	mov    QWORD PTR [rsp+0x60],rax
  40d3f2:	movzx  eax,WORD PTR [rax+0x18]
  40d3f6:	test   ax,ax
  40d3f9:	je     0x40e337
  40d3ff:	mov    rcx,rax
  40d402:	mov    rdx,rax
  40d405:	lea    rbx,[rax+rax*2]
  40d409:	shl    rcx,0x6
  40d40d:	shl    rdx,0x9
  40d411:	sub    rdx,rcx
  40d414:	shl    rbx,0x4
  40d418:	mov    rcx,rsi
  40d41b:	lea    r15,[rsp+0xc8]
  40d423:	call   0x41cec0
  40d428:	mov    r13,rax
  40d42b:	mov    QWORD PTR [rsp+0x78],rax
  40d430:	mov    rax,QWORD PTR [rax+0x8]
  40d434:	mov    r8,rbx
  40d437:	xor    edx,edx
  40d439:	mov    r12,rax
  40d43c:	mov    rcx,rax
  40d43f:	mov    QWORD PTR [rsp+0x88],rax
  40d447:	call   0x449440
  40d44c:	mov    rax,r12
  40d44f:	mov    DWORD PTR [rsp+0x68],0x0
  40d457:	add    rax,rbx
  40d45a:	lea    rbx,[rsi+0x290]
  40d461:	mov    QWORD PTR [r13+0x10],rax
  40d465:	mov    QWORD PTR [rsp+0x80],rbx
  40d46d:	xor    ebx,ebx
  40d46f:	nop
  40d470:	add    DWORD PTR [rsp+0x68],0x1
  40d475:	cmp    BYTE PTR [rsp+0x48],0x0
  40d47a:	mov    QWORD PTR [r12],rax
  40d47e:	jne    0x40d7ba
  40d484:	mov    r14d,0x32
  40d48a:	xor    edi,edi
  40d48c:	mov    DWORD PTR [rsp+0x50],0x0
  40d494:	mov    ebp,0x2
  40d499:	jmp    0x40d536
  40d49e:	xchg   ax,ax
  40d4a0:	cmp    ebp,r14d
  40d4a3:	jbe    0x40d4b0
  40d4a5:	cmp    BYTE PTR [rsp+0x48],0x0
  40d4aa:	jne    0x40d5b0
  40d4b0:	mov    rdx,r15
  40d4b3:	mov    rcx,rsi
  40d4b6:	call   0x40e730
  40d4bb:	movzx  ecx,BYTE PTR [rax+0x4]
  40d4bf:	mov    rdx,rax
  40d4c2:	cmp    cl,0x51
  40d4c5:	je     0x40d570
  40d4cb:	cmp    cl,0x14
  40d4ce:	je     0x40d580
  40d4d4:	cmp    cl,0x15
  40d4d7:	je     0x40d590
  40d4dd:	cmp    cl,0x13
  40d4e0:	je     0x40d5d2
  40d4e6:	cmp    cl,0x16
  40d4e9:	je     0x40d600
  40d4ef:	cmp    cl,0x25
  40d4f2:	je     0x40d6d0
  40d4f8:	cmp    cl,0x4f
  40d4fb:	je     0x40d6e0
  40d501:	xor    eax,eax
  40d503:	cmp    BYTE PTR [rsi+0x43a],0x0
  40d50a:	mov    r9d,edi
  40d50d:	mov    r8d,DWORD PTR [rsp+0xc8]
  40d515:	mov    DWORD PTR [rsp+0x20],0x0
  40d51d:	mov    rcx,r12
  40d520:	setne  al
  40d523:	add    edi,0x1
  40d526:	lea    ebp,[rdi+0x2]
  40d529:	mov    DWORD PTR [rsp+0x28],eax
  40d52d:	call   0x40be80
  40d532:	mov    rax,QWORD PTR [r12]
  40d536:	mov    edx,ebp
  40d538:	lea    rax,[rax+rdx*8]
  40d53c:	cmp    QWORD PTR [r13+0x18],rax
  40d540:	jae    0x40d4a0
  40d546:	mov    rdx,r13
  40d549:	mov    r8d,0x1f40
  40d54f:	mov    rcx,rsi
  40d552:	call   0x41cf70
  40d557:	mov    r13,rax
  40d55a:	mov    rax,QWORD PTR [rax+0x10]
  40d55e:	mov    QWORD PTR [r12],rax
  40d562:	jmp    0x40d4a0
  40d567:	nop    WORD PTR [rax+rax*1+0x0]
  40d570:	test   edi,edi
  40d572:	je     0x40d532
  40d574:	jmp    0x40d501
  40d576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d580:	add    DWORD PTR [rsp+0x50],0x1
  40d585:	jmp    0x40d501
  40d58a:	nop    WORD PTR [rax+rax*1+0x0]
  40d590:	mov    ecx,DWORD PTR [rsp+0x50]
  40d594:	mov    eax,ecx
  40d596:	sub    eax,0x1
  40d599:	test   ecx,ecx
  40d59b:	je     0x40d600
  40d59d:	mov    DWORD PTR [rsp+0x50],eax
  40d5a1:	jmp    0x40d501
  40d5a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d5b0:	lea    edx,[r14+0x3e8]
  40d5b7:	mov    rcx,QWORD PTR [r12+0x20]
  40d5bc:	mov    r14,rdx
  40d5bf:	shl    rdx,0x2
  40d5c3:	call   0x43bb70
  40d5c8:	mov    QWORD PTR [r12+0x20],rax
  40d5cd:	jmp    0x40d4b0
  40d5d2:	mov    eax,DWORD PTR [rsp+0x50]
  40d5d6:	test   eax,eax
  40d5d8:	jne    0x40d501
  40d5de:	mov    rax,QWORD PTR [rsp+0x60]
  40d5e3:	test   BYTE PTR [rax+0x1c],0x2
  40d5e7:	je     0x40d600
  40d5e9:	mov    rax,QWORD PTR [rsp+0x60]
  40d5ee:	movzx  eax,WORD PTR [rax+0x18]
  40d5f2:	cmp    DWORD PTR [rsp+0x68],eax
  40d5f6:	je     0x40d501
  40d5fc:	nop    DWORD PTR [rax+0x0]
  40d600:	mov    r10,rdx
  40d603:	test   edi,edi
  40d605:	je     0x40e346
  40d60b:	mov    rcx,QWORD PTR [r12]
  40d60f:	lea    eax,[rdi-0x1]
  40d612:	mov    rbp,rax
  40d615:	mov    rax,QWORD PTR [rcx+rax*8]
  40d619:	cmp    BYTE PTR [rax+0x4],0x51
  40d61d:	je     0x40d63a
  40d61f:	jmp    0x40e389
  40d624:	lea    edx,[rbp-0x1]
  40d627:	mov    rax,rdx
  40d62a:	mov    rdx,QWORD PTR [rcx+rdx*8]
  40d62e:	cmp    BYTE PTR [rdx+0x4],0x51
  40d632:	jne    0x40d7b2
  40d638:	mov    ebp,eax
  40d63a:	test   ebp,ebp
  40d63c:	jne    0x40d624
  40d63e:	xor    r9d,r9d
  40d641:	mov    DWORD PTR [r12+0x18],ebp
  40d646:	xor    eax,eax
  40d648:	cmp    BYTE PTR [rsi+0x43a],0x0
  40d64f:	mov    rdx,QWORD PTR [rsp+0x80]
  40d657:	mov    DWORD PTR [rsp+0x20],0x0
  40d65f:	mov    rcx,r12
  40d662:	mov    QWORD PTR [rsp+0x50],r10
  40d667:	setne  al
  40d66a:	mov    DWORD PTR [rsp+0x28],eax
  40d66e:	mov    r8d,DWORD PTR [rsi+0x290]
  40d675:	call   0x40be80
  40d67a:	mov    rax,QWORD PTR [rsp+0x60]
  40d67f:	mov    r10,QWORD PTR [rsp+0x50]
  40d684:	movzx  eax,WORD PTR [rax+0x18]
  40d688:	cmp    DWORD PTR [rsp+0x68],eax
  40d68c:	mov    edx,eax
  40d68e:	ja     0x40d6ad
  40d690:	mov    rcx,QWORD PTR [r12]
  40d694:	lea    r8d,[rbp+0x1]
  40d698:	cmp    DWORD PTR [rsp+0x68],eax
  40d69c:	lea    rcx,[rcx+r8*8]
  40d6a0:	mov    QWORD PTR [r13+0x10],rcx
  40d6a4:	lea    rcx,[r12+0x30]
  40d6a9:	cmovne r12,rcx
  40d6ad:	movzx  eax,BYTE PTR [r10+0x4]
  40d6b2:	lea    ecx,[rax-0x15]
  40d6b5:	cmp    cl,0x1
  40d6b8:	jbe    0x40d810
  40d6be:	mov    rax,QWORD PTR [r13+0x10]
  40d6c2:	jmp    0x40d470
  40d6c7:	nop    WORD PTR [rax+rax*1+0x0]
  40d6d0:	test   BYTE PTR [rax+0x6],0x40
  40d6d4:	je     0x40d501
  40d6da:	jmp    0x40d600
  40d6df:	nop
  40d6e0:	mov    rcx,rsi
  40d6e3:	mov    QWORD PTR [rsp+0x70],rax
  40d6e8:	call   0x41c410
  40d6ed:	mov    rdx,QWORD PTR [rsp+0x70]
  40d6f2:	mov    r8,rax
  40d6f5:	mov    DWORD PTR [rsp+0x70],edi
  40d6f9:	mov    rdi,r8
  40d6fc:	mov    rax,QWORD PTR [rdx]
  40d6ff:	mov    QWORD PTR [r8],rax
  40d702:	mov    rax,QWORD PTR [rdx+0x8]
  40d706:	mov    QWORD PTR [r8+0x8],rax
  40d70a:	mov    rax,QWORD PTR [rdx+0x10]
  40d70e:	mov    QWORD PTR [r8+0x10],rax
  40d712:	jmp    0x40d760
  40d714:	mov    rdx,QWORD PTR [rbx+0x10]
  40d718:	mov    rax,QWORD PTR [rbx+0x18]
  40d71c:	sub    rax,rdx
  40d71f:	cmp    rax,0x7
  40d723:	ja     0x40d73e
  40d725:	sub    rdx,QWORD PTR [rbx+0x8]
  40d729:	mov    rcx,rsi
  40d72c:	add    rdx,rdx
  40d72f:	call   0x41cec0
  40d734:	mov    rdx,QWORD PTR [rax+0x10]
  40d738:	mov    QWORD PTR [rax],rbx
  40d73b:	mov    rbx,rax
  40d73e:	mov    QWORD PTR [rdx],rdi
  40d741:	add    QWORD PTR [rbx+0x10],0x8
  40d746:	cmp    BYTE PTR [rdi+0x4],0x50
  40d74a:	je     0x40d790
  40d74c:	mov    rdx,r15
  40d74f:	mov    rcx,rsi
  40d752:	call   0x40e730
  40d757:	cmp    BYTE PTR [rax+0x4],0x16
  40d75b:	mov    rdi,rax
  40d75e:	je     0x40d790
  40d760:	test   rbx,rbx
  40d763:	jne    0x40d714
  40d765:	mov    edx,0x100
  40d76a:	mov    rcx,rsi
  40d76d:	call   0x41cec0
  40d772:	mov    rdx,QWORD PTR [rax+0x10]
  40d776:	mov    rbx,rax
  40d779:	mov    QWORD PTR [rdx],rdi
  40d77c:	add    QWORD PTR [rbx+0x10],0x8
  40d781:	cmp    BYTE PTR [rdi+0x4],0x50
  40d785:	jne    0x40d74c
  40d787:	nop    WORD PTR [rax+rax*1+0x0]
  40d790:	mov    r8,rdi
  40d793:	mov    BYTE PTR [rsi+0x19],0x2
  40d797:	mov    BYTE PTR [rsi+0x18],0x1
  40d79b:	cmp    BYTE PTR [r8+0x4],0x16
  40d7a0:	mov    edi,DWORD PTR [rsp+0x70]
  40d7a4:	jne    0x40d532
  40d7aa:	mov    r10,r8
  40d7ad:	jmp    0x40d603
  40d7b2:	mov    r9d,ebp
  40d7b5:	jmp    0x40d641
  40d7ba:	mov    ecx,0xc8
  40d7bf:	call   0x43baf0
  40d7c4:	mov    QWORD PTR [r12+0x20],rax
  40d7c9:	mov    rax,QWORD PTR [r12]
  40d7cd:	jmp    0x40d484
  40d7d2:	mov    ecx,DWORD PTR [rdi+0x14]
  40d7d5:	test   ecx,ecx
  40d7d7:	je     0x40d808
  40d7d9:	mov    rdi,QWORD PTR [rdi+0x8]
  40d7dd:	xor    ebp,ebp
  40d7df:	cmp    BYTE PTR [rdi+0x4],0x26
  40d7e3:	lea    rax,[rdi+0x18]
  40d7e7:	jne    0x40d801
  40d7e9:	jmp    0x40e50c
  40d7ee:	xchg   ax,ax
  40d7f0:	movzx  edx,BYTE PTR [rax+0x4]
  40d7f4:	add    rax,0x18
  40d7f8:	cmp    dl,0x26
  40d7fb:	je     0x40d007
  40d801:	add    ebp,0x1
  40d804:	cmp    ebp,ecx
  40d806:	jne    0x40d7f0
  40d808:	call   0x449548
  40d80d:	nop    DWORD PTR [rax]
  40d810:	mov    edi,DWORD PTR [rsp+0x68]
  40d814:	cmp    al,0x16
  40d816:	mov    DWORD PTR [rsp+0x80],edi
  40d81d:	je     0x40e48a
  40d823:	cmp    DWORD PTR [rsp+0x68],0x1
  40d828:	je     0x40e3c9
  40d82e:	mov    rdi,QWORD PTR [rsp+0x60]
  40d833:	mov    r9d,DWORD PTR [rsp+0x68]
  40d838:	mov    rcx,rsi
  40d83b:	mov    r8,QWORD PTR [rsp+0x128]
  40d843:	mov    rdx,rdi
  40d846:	call   0x40c8c0
  40d84b:	test   al,al
  40d84d:	je     0x40e4c8
  40d853:	test   BYTE PTR [rdi+0x1c],0x2
  40d857:	je     0x40d87a
  40d859:	mov    rax,QWORD PTR [rsp+0x60]
  40d85e:	movzx  edx,WORD PTR [rax+0x18]
  40d862:	cmp    DWORD PTR [rsp+0x68],edx
  40d866:	mov    rax,rdx
  40d869:	jb     0x40e46c
  40d86f:	cmp    DWORD PTR [rsp+0x68],0x1
  40d874:	je     0x40e44a
  40d87a:	mov    rax,QWORD PTR [rsp+0x58]
  40d87f:	sub    BYTE PTR [rsi+0x18],0x1
  40d883:	mov    BYTE PTR [rsi+0x19],0x0
  40d887:	sub    DWORD PTR [rsi+0x1dc],0x1
  40d88e:	cmp    WORD PTR [rax+0x18],0x0
  40d893:	jne    0x40d93f
  40d899:	mov    ecx,DWORD PTR [rsp+0x80]
  40d8a0:	mov    rax,QWORD PTR [rsp+0x78]
  40d8a5:	test   ecx,ecx
  40d8a7:	mov    rdx,QWORD PTR [rax+0x8]
  40d8ab:	je     0x40d91b
  40d8ad:	mov    eax,DWORD PTR [rsp+0x80]
  40d8b4:	lea    rbp,[rdx+0x8]
  40d8b8:	sub    eax,0x1
  40d8bb:	lea    rax,[rax+rax*2]
  40d8bf:	shl    rax,0x4
  40d8c3:	lea    rdi,[rdx+rax*1+0x38]
  40d8c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d8d0:	mov    rcx,QWORD PTR [rbp+0x0]
  40d8d4:	test   rcx,rcx
  40d8d7:	je     0x40d8e6
  40d8d9:	call   0x4494c8
  40d8de:	mov    QWORD PTR [rbp+0x0],0x0
  40d8e6:	mov    rcx,QWORD PTR [rbp+0x18]
  40d8ea:	test   rcx,rcx
  40d8ed:	je     0x40d8fc
  40d8ef:	call   0x4494c8
  40d8f4:	mov    QWORD PTR [rbp+0x18],0x0
  40d8fc:	mov    rcx,QWORD PTR [rbp+0x20]
  40d900:	test   rcx,rcx
  40d903:	je     0x40d912
  40d905:	call   0x4494c8
  40d90a:	mov    QWORD PTR [rbp+0x20],0x0
  40d912:	add    rbp,0x30
  40d916:	cmp    rbp,rdi
  40d919:	jne    0x40d8d0
  40d91b:	mov    rcx,QWORD PTR [rsp+0x78]
  40d920:	call   0x41d0b0
  40d925:	mov    rax,QWORD PTR [rsp+0x128]
  40d92d:	movzx  eax,WORD PTR [rax+0x18]
  40d931:	mov    WORD PTR [rsp+0x48],ax
  40d936:	shr    ax,0x6
  40d93a:	jmp    0x40cf83
  40d93f:	mov    rax,QWORD PTR [rsp+0x78]
  40d944:	mov    rax,QWORD PTR [rax+0x8]
  40d948:	mov    QWORD PTR [rsp+0xc8],0x0
  40d954:	mov    QWORD PTR [rsp+0x88],rax
  40d95c:	mov    rax,QWORD PTR [rsp+0x58]
  40d961:	test   BYTE PTR [rax+0x1c],0x20
  40d965:	jne    0x40e3ef
  40d96b:	mov    rax,QWORD PTR [rsp+0x58]
  40d970:	mov    edx,DWORD PTR [rax+0x14]
  40d973:	mov    r11,QWORD PTR [rax+0x8]
  40d977:	lea    rax,[rdx+rdx*2]
  40d97b:	mov    r13,rdx
  40d97e:	lea    rax,[r11+rax*8]
  40d982:	mov    QWORD PTR [rsp+0x70],rax
  40d987:	mov    rax,QWORD PTR [rsp+0x70]
  40d98c:	mov    r14,r11
  40d98f:	mov    DWORD PTR [rsp+0x48],r13d
  40d994:	cmp    r11,rax
  40d997:	jae    0x40dc6b
  40d99d:	lea    rdi,[rsi+0x88]
  40d9a4:	mov    QWORD PTR [rsp+0x68],rbx
  40d9a9:	mov    QWORD PTR [rsp+0x90],r15
  40d9b1:	mov    QWORD PTR [rsp+0x98],rdi
  40d9b9:	lea    rdi,[rsp+0xc4]
  40d9c1:	mov    QWORD PTR [rsp+0xa0],rdi
  40d9c9:	lea    rdi,[rsi+0x40]
  40d9cd:	mov    QWORD PTR [rsp+0x60],rdi
  40d9d2:	mov    rdi,rax
  40d9d5:	jmp    0x40d9ed
  40d9d7:	nop    WORD PTR [rax+rax*1+0x0]
  40d9e0:	add    r14,0x18
  40d9e4:	cmp    r14,rdi
  40d9e7:	jae    0x40dc5b
  40d9ed:	cmp    BYTE PTR [r14+0x4],0x4e
  40d9f2:	jne    0x40d9e0
  40d9f4:	mov    eax,DWORD PTR [r14+0x8]
  40d9f8:	add    r13d,0x2
  40d9fc:	add    DWORD PTR [rsp+0x48],0x2
  40da01:	sub    eax,0x1
  40da04:	lea    r10,[rax+rax*2]
  40da08:	mov    rax,QWORD PTR [rsp+0x88]
  40da10:	shl    r10,0x4
  40da14:	lea    r15,[rax+r10*1]
  40da18:	movzx  eax,WORD PTR [r14+0x6]
  40da1d:	test   al,0x4
  40da1f:	je     0x40dc24
  40da25:	cmp    QWORD PTR [r15+0x10],0x0
  40da2a:	jne    0x40d9e0
  40da2c:	mov    rdx,QWORD PTR [rsi+0x40]
  40da30:	mov    rax,QWORD PTR [rdx+0x10]
  40da34:	mov    rdx,QWORD PTR [rdx+0x18]
  40da38:	sub    rdx,rax
  40da3b:	cmp    rdx,0x2
  40da3f:	ja     0x40da5c
  40da41:	mov    rdx,QWORD PTR [rsp+0x60]
  40da46:	mov    r8d,0x3
  40da4c:	mov    rcx,rsi
  40da4f:	call   0x41d060
  40da54:	mov    rax,QWORD PTR [rsi+0x40]
  40da58:	mov    rax,QWORD PTR [rax+0x10]
  40da5c:	mov    BYTE PTR [rax],0x22
  40da5f:	mov    ebp,DWORD PTR [r15+0x18]
  40da63:	lea    rbx,[rax+0x1]
  40da67:	test   ebp,ebp
  40da69:	je     0x40dbca
  40da6f:	xor    ebp,ebp
  40da71:	xor    eax,eax
  40da73:	mov    DWORD PTR [rsp+0xa8],r13d
  40da7b:	mov    QWORD PTR [rsp+0xb0],rdi
  40da83:	mov    r13,rbp
  40da86:	mov    rdi,rsi
  40da89:	mov    DWORD PTR [rsp+0x50],0x0
  40da91:	mov    rbp,rbx
  40da94:	mov    esi,eax
  40da96:	mov    rdx,QWORD PTR [r15]
  40da99:	mov    eax,esi
  40da9b:	mov    r12,QWORD PTR [rdx+rax*8]
  40da9f:	movzx  eax,BYTE PTR [r12+0x4]
  40daa5:	cmp    al,0x51
  40daa7:	je     0x40e2db
  40daad:	lea    edx,[rax-0x38]
  40dab0:	cmp    dl,0x3
  40dab3:	setbe  bl
  40dab6:	sub    eax,0x3d
  40dab9:	cmp    al,0x4
  40dabb:	setbe  al
  40dabe:	or     bl,al
  40dac0:	jne    0x40e160
  40dac6:	mov    rcx,r12
  40dac9:	call   0x41c550
  40dace:	mov    eax,eax
  40dad0:	mov    rcx,QWORD PTR [rdi+0x40]
  40dad4:	add    rax,0x3
  40dad8:	mov    rdx,QWORD PTR [rcx+0x18]
  40dadc:	sub    rdx,rbp
  40dadf:	cmp    rax,rdx
  40dae2:	ja     0x40e303
  40dae8:	mov    rdx,QWORD PTR [rcx+0x10]
  40daec:	lea    rcx,[rbp-0x1]
  40daf0:	cmp    rdx,rcx
  40daf3:	je     0x40db0b
  40daf5:	test   r13,r13
  40daf8:	cmove  r13,r12
  40dafc:	test   BYTE PTR [r13+0x6],0x1
  40db01:	je     0x40db0b
  40db03:	mov    BYTE PTR [rbp+0x0],0x20
  40db07:	add    rbp,0x1
  40db0b:	test   bl,bl
  40db0d:	je     0x40e2bf
  40db13:	mov    rdx,rax
  40db16:	mov    rcx,rdi
  40db19:	call   0x41cec0
  40db1e:	mov    rbx,QWORD PTR [rax+0x10]
  40db22:	mov    rdx,r12
  40db25:	mov    r9d,0x1
  40db2b:	mov    rcx,rdi
  40db2e:	mov    r13,rax
  40db31:	mov    r8,rbx
  40db34:	call   0x41c590
  40db39:	mov    edx,eax
  40db3b:	sub    edx,ebx
  40db3d:	add    rdx,rbx
  40db40:	cmp    rbx,rdx
  40db43:	je     0x40db69
  40db45:	add    rbx,0x1
  40db49:	movzx  eax,BYTE PTR [rbx-0x1]
  40db4d:	cmp    al,0x22
  40db4f:	je     0x40dc14
  40db55:	cmp    al,0x5c
  40db57:	je     0x40dc14
  40db5d:	mov    BYTE PTR [rbp+0x0],al
  40db60:	add    rbp,0x1
  40db64:	cmp    rbx,rdx
  40db67:	jne    0x40db45
  40db69:	mov    rdx,r13
  40db6c:	mov    rcx,rdi
  40db6f:	call   0x41cea0
  40db74:	cmp    BYTE PTR [r12+0x4],0x3c
  40db7a:	je     0x40e365
  40db80:	xor    r13d,r13d
  40db83:	mov    DWORD PTR [rsp+0x50],0x0
  40db8b:	add    esi,0x1
  40db8e:	cmp    esi,DWORD PTR [r15+0x18]
  40db92:	jb     0x40da96
  40db98:	test   BYTE PTR [rsp+0x50],0x1
  40db9d:	mov    rsi,rdi
  40dba0:	mov    r13d,DWORD PTR [rsp+0xa8]
  40dba8:	mov    rbx,rbp
  40dbab:	mov    rdi,QWORD PTR [rsp+0xb0]
  40dbb3:	je     0x40dbca
  40dbb5:	lea    r8,[rip+0x40944]        # 0x44e500
  40dbbc:	xor    edx,edx
  40dbbe:	mov    rcx,rsi
  40dbc1:	sub    rbx,0x1
  40dbc5:	call   0x414b60
  40dbca:	mov    BYTE PTR [rbx],0x22
  40dbcd:	mov    rcx,QWORD PTR [rsi+0x40]
  40dbd1:	lea    rdx,[rbx+0x1]
  40dbd5:	lea    rax,[rbx+0x2]
  40dbd9:	mov    rbp,rdx
  40dbdc:	mov    rbx,rdx
  40dbdf:	sub    rbp,QWORD PTR [rcx+0x10]
  40dbe3:	mov    QWORD PTR [rcx+0x10],rax
  40dbe7:	mov    rcx,rsi
  40dbea:	call   0x41c410
  40dbef:	xor    r11d,r11d
  40dbf2:	sub    rbx,rbp
  40dbf5:	mov    edx,ebp
  40dbf7:	mov    BYTE PTR [rbx+rdx*1],0x0
  40dbfb:	mov    BYTE PTR [rax+0x4],0x3d
  40dbff:	mov    DWORD PTR [rax+0x8],ebp
  40dc02:	mov    QWORD PTR [rax+0x10],rbx
  40dc06:	mov    WORD PTR [rax+0x6],r11w
  40dc0b:	mov    QWORD PTR [r15+0x10],rax
  40dc0f:	jmp    0x40d9e0
  40dc14:	mov    BYTE PTR [rbp+0x0],0x5c
  40dc18:	mov    BYTE PTR [rbp+0x1],al
  40dc1b:	add    rbp,0x2
  40dc1f:	jmp    0x40db40
  40dc24:	test   al,0x8
  40dc26:	jne    0x40e077
  40dc2c:	mov    rax,QWORD PTR [rsp+0x58]
  40dc31:	cmp    QWORD PTR [rax+0x8],r14
  40dc35:	jae    0x40dc42
  40dc37:	test   BYTE PTR [r14-0x12],0x8
  40dc3c:	jne    0x40e077
  40dc42:	cmp    QWORD PTR [r15+0x8],0x0
  40dc47:	je     0x40e513
  40dc4d:	mov    eax,DWORD PTR [r15+0x1c]
  40dc51:	lea    r13d,[r13+rax*1-0x1]
  40dc56:	jmp    0x40d9e0
  40dc5b:	mov    rbx,QWORD PTR [rsp+0x68]
  40dc60:	mov    r15,QWORD PTR [rsp+0x90]
  40dc68:	mov    edx,r13d
  40dc6b:	movzx  eax,BYTE PTR [rsi+0x43a]
  40dc72:	test   eax,eax
  40dc74:	mov    DWORD PTR [rsp+0x60],eax
  40dc78:	je     0x40e1c6
  40dc7e:	mov    r8,r15
  40dc81:	mov    rcx,rsi
  40dc84:	call   0x40bf10
  40dc89:	cmp    DWORD PTR [rsp+0x60],0x1
  40dc8e:	mov    r9d,DWORD PTR [rsp+0x48]
  40dc93:	mov    r14,rax
  40dc96:	mov    rcx,QWORD PTR [rsi+0x28]
  40dc9a:	mov    rax,QWORD PTR [rax+0x8]
  40dc9e:	mov    r8d,DWORD PTR [rsp+0x138]
  40dca6:	mov    rdx,QWORD PTR [rsp+0x128]
  40dcae:	cmovne r9d,r13d
  40dcb2:	mov    QWORD PTR [rsp+0xa0],rax
  40dcba:	call   0x40ac10
  40dcbf:	mov    rdi,rax
  40dcc2:	mov    rax,QWORD PTR [rsp+0x58]
  40dcc7:	mov    r13,QWORD PTR [rax+0x8]
  40dccb:	cmp    r13,QWORD PTR [rsp+0x70]
  40dcd0:	jae    0x40e203
  40dcd6:	lea    rax,[rsi+0x278]
  40dcdd:	xor    r12d,r12d
  40dce0:	mov    QWORD PTR [rsp+0xa8],rbx
  40dce8:	mov    QWORD PTR [rsp+0x48],r14
  40dced:	mov    QWORD PTR [rsp+0xb0],rax
  40dcf5:	jmp    0x40dd4a
  40dcf7:	nop    WORD PTR [rax+rax*1+0x0]
  40dd00:	cmp    BYTE PTR [rsi+0x43a],0x1
  40dd07:	mov    eax,r12d
  40dd0a:	jbe    0x40dee0
  40dd10:	mov    r9d,DWORD PTR [r13+0x0]
  40dd14:	mov    rdx,QWORD PTR [rsp+0xc8]
  40dd1c:	mov    r8,r13
  40dd1f:	mov    rcx,QWORD PTR [rsp+0x48]
  40dd24:	mov    DWORD PTR [rsp+0x30],eax
  40dd28:	add    r12d,0x1
  40dd2c:	mov    QWORD PTR [rsp+0x28],rdi
  40dd31:	mov    DWORD PTR [rsp+0x20],r9d
  40dd36:	call   0x40bf50
  40dd3b:	add    r13,0x18
  40dd3f:	cmp    r13,QWORD PTR [rsp+0x70]
  40dd44:	jae    0x40dffd
  40dd4a:	cmp    BYTE PTR [r13+0x4],0x4e
  40dd4f:	jne    0x40dd00
  40dd51:	mov    eax,DWORD PTR [r13+0x8]
  40dd55:	sub    eax,0x1
  40dd58:	lea    rcx,[rax+rax*2]
  40dd5c:	movzx  eax,WORD PTR [r13+0x6]
  40dd61:	shl    rcx,0x4
  40dd65:	add    rcx,QWORD PTR [rsp+0x88]
  40dd6d:	test   al,0x4
  40dd6f:	je     0x40df94
  40dd75:	cmp    BYTE PTR [rsi+0x43a],0x0
  40dd7c:	lea    r14,[rcx+0x10]
  40dd80:	setne  BYTE PTR [rsp+0x90]
  40dd88:	jne    0x40e240
  40dd8e:	mov    QWORD PTR [rsp+0x68],0x0
  40dd97:	mov    ebx,0x1
  40dd9c:	xor    ebp,ebp
  40dd9e:	mov    r15d,0x1
  40dda4:	cmp    BYTE PTR [rsi+0x10],0x0
  40dda8:	je     0x40ddb0
  40ddaa:	cmp    BYTE PTR [rsi+0x11],0x0
  40ddae:	je     0x40ddc6
  40ddb0:	mov    rax,QWORD PTR [rsp+0x58]
  40ddb5:	cmp    r13,QWORD PTR [rax+0x8]
  40ddb9:	je     0x40ddc6
  40ddbb:	test   BYTE PTR [r13-0x12],0x8
  40ddc0:	je     0x40e173
  40ddc6:	test   r15d,r15d
  40ddc9:	je     0x40defb
  40ddcf:	lea    eax,[r15+r12*1]
  40ddd3:	mov    QWORD PTR [rsp+0x98],rbp
  40dddb:	mov    r15d,r12d
  40ddde:	movzx  ebp,BYTE PTR [rsp+0x90]
  40dde6:	mov    DWORD PTR [rsp+0x50],eax
  40ddea:	jmp    0x40de43
  40ddec:	nop    DWORD PTR [rax+0x0]
  40ddf0:	mov    rcx,QWORD PTR [rsp+0x68]
  40ddf5:	test   r14,r14
  40ddf8:	mov    r9d,DWORD PTR [rcx]
  40ddfb:	mov    DWORD PTR [rsp+0x30],eax
  40ddff:	mov    QWORD PTR [rsp+0x28],rdi
  40de04:	mov    DWORD PTR [rsp+0x20],edx
  40de08:	je     0x40dead
  40de0e:	mov    r8,QWORD PTR [r14]
  40de11:	mov    rdx,QWORD PTR [rsp+0xc8]
  40de19:	mov    rcx,QWORD PTR [rsp+0x48]
  40de1e:	call   0x40bf50
  40de23:	test   ebx,ebx
  40de25:	je     0x40e71e
  40de2b:	cmp    ebx,0x2
  40de2e:	je     0x40e71e
  40de34:	add    r15d,0x1
  40de38:	cmp    r15d,DWORD PTR [rsp+0x50]
  40de3d:	je     0x40dfca
  40de43:	cmp    DWORD PTR [rsp+0x60],0x1
  40de48:	mov    eax,r12d
  40de4b:	cmovg  eax,r15d
  40de4f:	cmp    BYTE PTR [rsi+0x43a],0x1
  40de56:	jbe    0x40de95
  40de58:	test   bpl,bpl
  40de5b:	mov    edx,DWORD PTR [r13+0x0]
  40de5f:	jne    0x40ddf0
  40de61:	mov    r8,QWORD PTR [r14]
  40de64:	mov    rcx,QWORD PTR [rsp+0x48]
  40de69:	mov    DWORD PTR [rsp+0x20],edx
  40de6d:	mov    DWORD PTR [rsp+0x30],eax
  40de71:	mov    QWORD PTR [rsp+0x28],rdi
  40de76:	mov    rdx,QWORD PTR [rsp+0xc8]
  40de7e:	mov    r9d,DWORD PTR [r8]
  40de81:	call   0x40bf50
  40de86:	test   ebx,ebx
  40de88:	je     0x40de8f
  40de8a:	cmp    ebx,0x2
  40de8d:	jne    0x40de34
  40de8f:	add    r14,0x8
  40de93:	jmp    0x40de34
  40de95:	mov    rcx,QWORD PTR [rsp+0x58]
  40de9a:	mov    rax,r13
  40de9d:	sub    rax,QWORD PTR [rcx+0x8]
  40dea1:	sar    rax,0x3
  40dea5:	imul   eax,eax,0xaaaaaaab
  40deab:	jmp    0x40de58
  40dead:	mov    rdx,QWORD PTR [rsp+0xc8]
  40deb5:	mov    rcx,QWORD PTR [rsp+0x48]
  40deba:	xor    r8d,r8d
  40debd:	call   0x40bf50
  40dec2:	test   ebx,ebx
  40dec4:	je     0x40decf
  40dec6:	cmp    ebx,0x2
  40dec9:	jne    0x40de34
  40decf:	mov    r14d,0x8
  40ded5:	add    QWORD PTR [rsp+0x68],0x4
  40dedb:	jmp    0x40de34
  40dee0:	mov    rbx,QWORD PTR [rsp+0x58]
  40dee5:	mov    rax,r13
  40dee8:	sub    rax,QWORD PTR [rbx+0x8]
  40deec:	sar    rax,0x3
  40def0:	imul   eax,eax,0xaaaaaaab
  40def6:	jmp    0x40dd10
  40defb:	cmp    BYTE PTR [rsi+0x437],0x0
  40df02:	je     0x40df2e
  40df04:	mov    rax,QWORD PTR [rsp+0x58]
  40df09:	test   BYTE PTR [rax+0x1c],0x4
  40df0d:	jne    0x40df2e
  40df0f:	cmp    BYTE PTR [rsi+0x435],0x0
  40df16:	jne    0x40df2e
  40df18:	mov    rax,QWORD PTR [rsi]
  40df1b:	test   rax,rax
  40df1e:	je     0x40e261
  40df24:	cmp    BYTE PTR [rax+0x6d],0x0
  40df28:	je     0x40e261
  40df2e:	cmp    BYTE PTR [rsi+0x10],0x0
  40df32:	mov    DWORD PTR [rsp+0x50],r12d
  40df37:	jne    0x40df44
  40df39:	test   BYTE PTR [r13+0x6],0x8
  40df3e:	je     0x40e08f
  40df44:	test   rbp,rbp
  40df47:	je     0x40df8a
  40df49:	mov    rcx,rsi
  40df4c:	call   0x41c410
  40df51:	mov    rdx,QWORD PTR [rbp+0x0]
  40df55:	movzx  edx,BYTE PTR [rdx+0x4]
  40df59:	mov    BYTE PTR [rax+0x4],dl
  40df5c:	mov    rdx,QWORD PTR [rbp+0x0]
  40df60:	test   BYTE PTR [r13+0x6],0x8
  40df65:	mov    rcx,QWORD PTR [rdx+0x8]
  40df69:	mov    rbx,QWORD PTR [rdx+0x10]
  40df6d:	mov    QWORD PTR [rax+0x8],rcx
  40df71:	mov    QWORD PTR [rax+0x10],rbx
  40df75:	mov    rdx,QWORD PTR [rbp+0x0]
  40df79:	movzx  edx,WORD PTR [rdx+0x6]
  40df7d:	je     0x40dff4
  40df7f:	or     edx,0x8
  40df82:	mov    WORD PTR [rax+0x6],dx
  40df86:	mov    QWORD PTR [rbp+0x0],rax
  40df8a:	mov    r12d,DWORD PTR [rsp+0x50]
  40df8f:	jmp    0x40dd3b
  40df94:	test   al,0x8
  40df96:	je     0x40e0cb
  40df9c:	cmp    BYTE PTR [rsi+0x43a],0x0
  40dfa3:	mov    r15d,DWORD PTR [rcx+0x18]
  40dfa7:	mov    r14,QWORD PTR [rcx]
  40dfaa:	setne  BYTE PTR [rsp+0x90]
  40dfb2:	jne    0x40e350
  40dfb8:	mov    QWORD PTR [rsp+0x68],0x0
  40dfc1:	xor    ebx,ebx
  40dfc3:	xor    ebp,ebp
  40dfc5:	jmp    0x40dda4
  40dfca:	test   BYTE PTR [r13+0x6],0x8
  40dfcf:	mov    rbp,QWORD PTR [rsp+0x98]
  40dfd7:	je     0x40e085
  40dfdd:	mov    rax,QWORD PTR [rsp+0x48]
  40dfe2:	mov    rax,QWORD PTR [rax+0x10]
  40dfe6:	mov    QWORD PTR [rsp+0x68],rax
  40dfeb:	lea    rbp,[rax-0x8]
  40dfef:	jmp    0x40df44
  40dff4:	and    edx,0xfffffff7
  40dff7:	mov    WORD PTR [rax+0x6],dx
  40dffb:	jmp    0x40df86
  40dffd:	mov    r8d,DWORD PTR [rsp+0x60]
  40e002:	mov    rbx,QWORD PTR [rsp+0xa8]
  40e00a:	mov    r14,QWORD PTR [rsp+0x48]
  40e00f:	test   r8d,r8d
  40e012:	jne    0x40e203
  40e018:	mov    rax,QWORD PTR [r14+0x8]
  40e01c:	mov    rdi,QWORD PTR [r14+0x10]
  40e020:	lea    rcx,[rsi+0x88]
  40e027:	sub    rdi,rax
  40e02a:	call   0x40bfd0
  40e02f:	mov    rcx,QWORD PTR [rsp+0x128]
  40e037:	shr    rdi,0x3
  40e03b:	mov    DWORD PTR [rax+0x30],0x0
  40e042:	mov    edi,edi
  40e044:	mov    QWORD PTR [rax+0x20],r14
  40e048:	mov    QWORD PTR [rax+0x28],rcx
  40e04c:	mov    rcx,QWORD PTR [rsp+0xa0]
  40e054:	lea    rdx,[rcx+rdi*8]
  40e058:	mov    QWORD PTR [rax+0x10],rcx
  40e05c:	mov    QWORD PTR [rax+0x18],rdx
  40e060:	mov    rax,QWORD PTR [r14+0x10]
  40e064:	sub    rax,QWORD PTR [r14+0x8]
  40e068:	shr    rax,0x3
  40e06c:	add    DWORD PTR [rip+0x544ce],eax        # 0x462540
  40e072:	jmp    0x40d899
  40e077:	mov    eax,DWORD PTR [r15+0x18]
  40e07b:	lea    r13d,[r13+rax*1-0x1]
  40e080:	jmp    0x40d9e0
  40e085:	cmp    BYTE PTR [rsi+0x10],0x0
  40e089:	jne    0x40df44
  40e08f:	mov    r9d,DWORD PTR [rsi+0x278]
  40e096:	mov    r8,QWORD PTR [rsp+0xb0]
  40e09e:	mov    rdx,QWORD PTR [rsp+0xc8]
  40e0a6:	mov    rcx,QWORD PTR [rsp+0x48]
  40e0ab:	mov    DWORD PTR [rsp+0x30],0x0
  40e0b3:	mov    QWORD PTR [rsp+0x28],0x0
  40e0bc:	mov    DWORD PTR [rsp+0x20],r9d
  40e0c1:	call   0x40bf50
  40e0c6:	jmp    0x40df44
  40e0cb:	mov    rax,QWORD PTR [rsp+0x58]
  40e0d0:	cmp    r13,QWORD PTR [rax+0x8]
  40e0d4:	je     0x40e28d
  40e0da:	test   BYTE PTR [r13-0x12],0x8
  40e0df:	je     0x40e28d
  40e0e5:	cmp    BYTE PTR [rsi+0x43a],0x0
  40e0ec:	mov    r15d,DWORD PTR [rcx+0x18]
  40e0f0:	mov    r14,QWORD PTR [rcx]
  40e0f3:	mov    QWORD PTR [rsp+0x68],0x0
  40e0fc:	setne  BYTE PTR [rsp+0x90]
  40e104:	movzx  eax,BYTE PTR [rsp+0x90]
  40e10c:	test   al,al
  40e10e:	je     0x40e11c
  40e110:	xor    edx,edx
  40e112:	call   0x40bed0
  40e117:	mov    QWORD PTR [rsp+0x68],rax
  40e11c:	mov    rax,QWORD PTR [rsp+0x48]
  40e121:	mov    rcx,QWORD PTR [rax+0x8]
  40e125:	mov    rax,QWORD PTR [rax+0x10]
  40e129:	mov    rdx,rax
  40e12c:	sub    rdx,rcx
  40e12f:	shr    rdx,0x3
  40e133:	test   edx,edx
  40e135:	je     0x40e380
  40e13b:	mov    rdx,QWORD PTR [rax-0x8]
  40e13f:	lea    rbp,[rax-0x8]
  40e143:	cmp    BYTE PTR [rdx+0x4],0x13
  40e147:	je     0x40e60a
  40e14d:	xor    ebx,ebx
  40e14f:	mov    eax,0x0
  40e154:	test   r15d,r15d
  40e157:	cmovne rbp,rax
  40e15b:	jmp    0x40dda4
  40e160:	mov    rcx,r12
  40e163:	call   0x41c550
  40e168:	mov    eax,eax
  40e16a:	shl    rax,0x2
  40e16e:	jmp    0x40dad0
  40e173:	mov    rcx,rsi
  40e176:	call   0x41c410
  40e17b:	xor    r9d,r9d
  40e17e:	mov    BYTE PTR [rax+0x4],0x51
  40e182:	mov    QWORD PTR [rax+0x8],r13
  40e186:	mov    WORD PTR [rax+0x6],r9w
  40e18b:	cmp    BYTE PTR [rsi+0x43a],0x1
  40e192:	mov    r8,rax
  40e195:	mov    edx,r12d
  40e198:	jbe    0x40e3ae
  40e19e:	mov    r9d,DWORD PTR [r8]
  40e1a1:	mov    rcx,QWORD PTR [rsp+0x48]
  40e1a6:	mov    DWORD PTR [rsp+0x30],edx
  40e1aa:	mov    rdx,QWORD PTR [rsp+0xc8]
  40e1b2:	mov    QWORD PTR [rsp+0x28],rdi
  40e1b7:	mov    DWORD PTR [rsp+0x20],r9d
  40e1bc:	call   0x40bf50
  40e1c1:	jmp    0x40ddc6
  40e1c6:	xor    r8d,r8d
  40e1c9:	mov    rcx,rsi
  40e1cc:	xor    edi,edi
  40e1ce:	call   0x40bf10
  40e1d3:	mov    r14,rax
  40e1d6:	mov    rax,QWORD PTR [rax+0x8]
  40e1da:	mov    QWORD PTR [rsp+0xa0],rax
  40e1e2:	mov    rax,QWORD PTR [rsp+0x58]
  40e1e7:	mov    r13,QWORD PTR [rax+0x8]
  40e1eb:	cmp    r13,QWORD PTR [rsp+0x70]
  40e1f0:	mov    rax,QWORD PTR [rsp+0xa0]
  40e1f8:	jb     0x40dcd6
  40e1fe:	jmp    0x40e01c
  40e203:	mov    rax,QWORD PTR [r14+0x10]
  40e207:	sub    rax,QWORD PTR [r14+0x8]
  40e20b:	mov    r8,r14
  40e20e:	mov    r9,QWORD PTR [rsp+0xc8]
  40e216:	mov    rdx,QWORD PTR [rsp+0x128]
  40e21e:	mov    rcx,rsi
  40e221:	shr    rax,0x3
  40e225:	mov    DWORD PTR [rsp+0x28],eax
  40e229:	mov    rax,QWORD PTR [rsp+0xa0]
  40e231:	mov    QWORD PTR [rsp+0x20],rax
  40e236:	call   0x40c050
  40e23b:	jmp    0x40e060
  40e240:	mov    edx,0x1
  40e245:	mov    ebx,0x1
  40e24a:	xor    ebp,ebp
  40e24c:	call   0x40bed0
  40e251:	mov    r15d,0x1
  40e257:	mov    QWORD PTR [rsp+0x68],rax
  40e25c:	jmp    0x40dda4
  40e261:	mov    eax,DWORD PTR [r13+0x8]
  40e265:	lea    r8,[rip+0x402c4]        # 0x44e530
  40e26c:	mov    edx,0x2
  40e271:	mov    rcx,rsi
  40e274:	mov    DWORD PTR [rsp+0x20],eax
  40e278:	mov    rax,QWORD PTR [rsp+0x128]
  40e280:	mov    r9,QWORD PTR [rax]
  40e283:	call   0x414b60
  40e288:	jmp    0x40df2e
  40e28d:	cmp    BYTE PTR [rsi+0x43a],0x0
  40e294:	mov    r15d,DWORD PTR [rcx+0x1c]
  40e298:	mov    r14,QWORD PTR [rcx+0x8]
  40e29c:	setne  BYTE PTR [rsp+0x90]
  40e2a4:	jne    0x40e393
  40e2aa:	mov    QWORD PTR [rsp+0x68],0x0
  40e2b3:	mov    ebx,0x2
  40e2b8:	xor    ebp,ebp
  40e2ba:	jmp    0x40dda4
  40e2bf:	mov    r8,rbp
  40e2c2:	mov    r9d,0x1
  40e2c8:	mov    rdx,r12
  40e2cb:	mov    rcx,rdi
  40e2ce:	call   0x41c590
  40e2d3:	mov    rbp,rax
  40e2d6:	jmp    0x40db74
  40e2db:	test   r13,r13
  40e2de:	je     0x40e600
  40e2e4:	test   BYTE PTR [r13+0x6],0x1
  40e2e9:	jne    0x40db8b
  40e2ef:	cmp    QWORD PTR [r12+0x8],0x0
  40e2f5:	mov    eax,0x0
  40e2fa:	cmove  r13,rax
  40e2fe:	jmp    0x40db8b
  40e303:	mov    rdx,QWORD PTR [rsp+0x60]
  40e308:	sub    rbp,QWORD PTR [rcx+0x10]
  40e30c:	mov    r8,rax
  40e30f:	mov    rcx,rdi
  40e312:	mov    QWORD PTR [rsp+0xb8],rax
  40e31a:	call   0x41d060
  40e31f:	mov    rdx,QWORD PTR [rdi+0x40]
  40e323:	mov    rax,QWORD PTR [rsp+0xb8]
  40e32b:	mov    rdx,QWORD PTR [rdx+0x10]
  40e32f:	add    rbp,rdx
  40e332:	jmp    0x40daec
  40e337:	mov    ebx,0x30
  40e33c:	mov    edx,0x1c0
  40e341:	jmp    0x40d418
  40e346:	xor    ebp,ebp
  40e348:	xor    r9d,r9d
  40e34b:	jmp    0x40d641
  40e350:	xor    edx,edx
  40e352:	xor    ebx,ebx
  40e354:	xor    ebp,ebp
  40e356:	call   0x40bed0
  40e35b:	mov    QWORD PTR [rsp+0x68],rax
  40e360:	jmp    0x40dda4
  40e365:	mov    rax,QWORD PTR [r12+0x10]
  40e36a:	cmp    BYTE PTR [rax],0x5c
  40e36d:	jne    0x40db80
  40e373:	add    DWORD PTR [rsp+0x50],0x1
  40e378:	xor    r13d,r13d
  40e37b:	jmp    0x40db8b
  40e380:	xor    ebx,ebx
  40e382:	xor    ebp,ebp
  40e384:	jmp    0x40dda4
  40e389:	mov    r9d,edi
  40e38c:	mov    ebp,edi
  40e38e:	jmp    0x40d641
  40e393:	mov    edx,0x2
  40e398:	mov    ebx,0x2
  40e39d:	xor    ebp,ebp
  40e39f:	call   0x40bed0
  40e3a4:	mov    QWORD PTR [rsp+0x68],rax
  40e3a9:	jmp    0x40dda4
  40e3ae:	mov    rax,QWORD PTR [rsp+0x58]
  40e3b3:	mov    rdx,r13
  40e3b6:	sub    rdx,QWORD PTR [rax+0x8]
  40e3ba:	sar    rdx,0x3
  40e3be:	imul   edx,edx,0xaaaaaaab
  40e3c4:	jmp    0x40e19e
  40e3c9:	test   dx,dx
  40e3cc:	jne    0x40d82e
  40e3d2:	mov    rax,QWORD PTR [rsp+0x88]
  40e3da:	mov    r13d,DWORD PTR [rax+0x18]
  40e3de:	xor    eax,eax
  40e3e0:	test   r13d,r13d
  40e3e3:	setne  al
  40e3e6:	mov    DWORD PTR [rsp+0x68],eax
  40e3ea:	jmp    0x40d82e
  40e3ef:	mov    r9d,DWORD PTR [rax+0x14]
  40e3f3:	test   r9d,r9d
  40e3f6:	je     0x40d808
  40e3fc:	mov    rax,QWORD PTR [rsp+0x58]
  40e401:	mov    edx,0x1
  40e406:	mov    r11,QWORD PTR [rax+0x8]
  40e40a:	cmp    BYTE PTR [r11+0x4],0x26
  40e40f:	lea    rax,[r11+0x18]
  40e413:	jne    0x40e423
  40e415:	jmp    0x40e667
  40e41a:	nop    WORD PTR [rax+rax*1+0x0]
  40e420:	mov    rdx,r8
  40e423:	cmp    edx,r9d
  40e426:	mov    r13d,edx
  40e429:	jae    0x40d808
  40e42f:	mov    rcx,rax
  40e432:	add    rax,0x18
  40e436:	lea    r8,[rdx+0x1]
  40e43a:	cmp    BYTE PTR [rcx+0x4],0x26
  40e43e:	jne    0x40e420
  40e440:	mov    QWORD PTR [rsp+0x70],rcx
  40e445:	jmp    0x40d987
  40e44a:	mov    rdi,QWORD PTR [rsp+0x88]
  40e452:	mov    r12d,DWORD PTR [rdi+0x18]
  40e456:	test   r12d,r12d
  40e459:	jne    0x40d87a
  40e45f:	cmp    BYTE PTR [rsi+0x436],0x0
  40e466:	jne    0x40d87a
  40e46c:	lea    rax,[rax+rax*2]
  40e470:	mov    rdi,QWORD PTR [rsp+0x88]
  40e478:	shl    rax,0x4
  40e47c:	mov    QWORD PTR [rdi+rax*1-0x30],0x0
  40e485:	jmp    0x40d87a
  40e48a:	mov    rax,QWORD PTR [rsi+0x88]
  40e491:	cmp    QWORD PTR [rax+0x8],0x0
  40e496:	je     0x40e676
  40e49c:	mov    edx,0x1
  40e4a1:	mov    rcx,rsi
  40e4a4:	call   0x40ccd0
  40e4a9:	mov    rax,QWORD PTR [rsp+0x128]
  40e4b1:	lea    r8,[rip+0x3ffd0]        # 0x44e488
  40e4b8:	mov    edx,0x3
  40e4bd:	mov    rcx,rsi
  40e4c0:	mov    r9,QWORD PTR [rax]
  40e4c3:	call   0x414b60
  40e4c8:	mov    rdx,QWORD PTR [rsp+0x78]
  40e4cd:	mov    rcx,rsi
  40e4d0:	call   0x41cea0
  40e4d5:	sub    DWORD PTR [rsi+0x1dc],0x1
  40e4dc:	sub    BYTE PTR [rsi+0x18],0x1
  40e4e0:	cmp    BYTE PTR [rsi+0x429],0x0
  40e4e7:	mov    BYTE PTR [rsi+0x19],0x0
  40e4eb:	je     0x40d3b8
  40e4f1:	mov    rax,QWORD PTR [rsp+0x128]
  40e4f9:	mov    rax,QWORD PTR [rax+0x20]
  40e4fd:	test   BYTE PTR [rax+0x1c],0x4
  40e501:	jne    0x40d3b8
  40e507:	jmp    0x40d399
  40e50c:	xor    ebp,ebp
  40e50e:	jmp    0x40d007
  40e513:	mov    r10d,DWORD PTR [r15+0x18]
  40e517:	movzx  ebx,BYTE PTR [rsi+0x43a]
  40e51e:	test   r10d,r10d
  40e521:	je     0x40dc4d
  40e527:	cmp    BYTE PTR [rsi+0x429],0x0
  40e52e:	mov    ecx,0x800
  40e533:	mov    BYTE PTR [rsi+0x429],0x0
  40e53a:	setne  bpl
  40e53e:	call   0x43baf0
  40e543:	mov    QWORD PTR [r15+0x8],rax
  40e547:	cmp    BYTE PTR [rsi+0x43a],0x0
  40e54e:	je     0x40e55e
  40e550:	mov    ecx,0x400
  40e555:	call   0x43baf0
  40e55a:	mov    QWORD PTR [r15+0x28],rax
  40e55e:	test   bl,bl
  40e560:	je     0x40e6c9
  40e566:	mov    eax,DWORD PTR [r15+0x18]
  40e56a:	mov    r9,QWORD PTR [r15+0x20]
  40e56e:	xor    r8d,r8d
  40e571:	xor    edx,edx
  40e573:	mov    rcx,rsi
  40e576:	add    eax,0x1
  40e579:	mov    DWORD PTR [rsp+0x28],eax
  40e57d:	mov    rax,QWORD PTR [r15]
  40e580:	mov    QWORD PTR [rsp+0x20],rax
  40e585:	call   0x40c050
  40e58a:	mov    eax,DWORD PTR [r15+0x1c]
  40e58e:	mov    ebx,0x100
  40e593:	lea    r12d,[rax+0x1]
  40e597:	cmp    rbx,r12
  40e59a:	jb     0x40e685
  40e5a0:	mov    rdx,QWORD PTR [rsp+0xa0]
  40e5a8:	mov    rcx,rsi
  40e5ab:	call   0x40e730
  40e5b0:	cmp    BYTE PTR [rax+0x4],0x16
  40e5b4:	je     0x40e653
  40e5ba:	xor    edx,edx
  40e5bc:	cmp    BYTE PTR [rsi+0x43a],0x0
  40e5c3:	mov    r9d,DWORD PTR [r15+0x1c]
  40e5c7:	mov    r8d,DWORD PTR [rsp+0xc4]
  40e5cf:	mov    DWORD PTR [rsp+0x20],0x2
  40e5d7:	mov    rcx,r15
  40e5da:	setne  dl
  40e5dd:	mov    DWORD PTR [rsp+0x28],edx
  40e5e1:	mov    rdx,rax
  40e5e4:	call   0x40be80
  40e5e9:	mov    eax,DWORD PTR [r15+0x1c]
  40e5ed:	add    eax,0x1
  40e5f0:	mov    DWORD PTR [r15+0x1c],eax
  40e5f4:	jmp    0x40e593
  40e5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e600:	mov    r13,QWORD PTR [r12+0x8]
  40e605:	jmp    0x40db8b
  40e60a:	mov    rbx,QWORD PTR [rsp+0x58]
  40e60f:	test   BYTE PTR [rbx+0x1c],0x2
  40e613:	je     0x40e14d
  40e619:	movzx  edx,WORD PTR [rbx+0x18]
  40e61d:	cmp    DWORD PTR [r13+0x8],edx
  40e621:	jne    0x40e14d
  40e627:	test   r14,r14
  40e62a:	je     0x40e638
  40e62c:	xor    ebx,ebx
  40e62e:	cmp    QWORD PTR [r14],0x0
  40e632:	jne    0x40dda4
  40e638:	cmp    rcx,rax
  40e63b:	jae    0x40e380
  40e641:	mov    rax,QWORD PTR [rsp+0x48]
  40e646:	xor    ebx,ebx
  40e648:	mov    QWORD PTR [rax+0x10],rbp
  40e64c:	xor    ebp,ebp
  40e64e:	jmp    0x40dda4
  40e653:	mov    rcx,rsi
  40e656:	call   0x40cb50
  40e65b:	mov    BYTE PTR [rsi+0x429],bpl
  40e662:	jmp    0x40dc4d
  40e667:	mov    QWORD PTR [rsp+0x70],r11
  40e66c:	xor    edx,edx
  40e66e:	xor    r13d,r13d
  40e671:	jmp    0x40d987
  40e676:	cmp    BYTE PTR [rsi+0x10],0x0
  40e67a:	je     0x40e4a9
  40e680:	jmp    0x40e49c
  40e685:	mov    rcx,QWORD PTR [r15+0x8]
  40e689:	mov    rdx,r12
  40e68c:	lea    rbx,[r12+r12*1]
  40e690:	shl    rdx,0x4
  40e694:	call   0x43bb70
  40e699:	mov    QWORD PTR [r15+0x8],rax
  40e69d:	cmp    BYTE PTR [rsi+0x43a],0x0
  40e6a4:	je     0x40e5a0
  40e6aa:	mov    rcx,QWORD PTR [r15+0x28]
  40e6ae:	test   rcx,rcx
  40e6b1:	je     0x40e708
  40e6b3:	lea    rdx,[r12*8+0x0]
  40e6bb:	call   0x43bb70
  40e6c0:	mov    QWORD PTR [r15+0x28],rax
  40e6c4:	jmp    0x40e5a0
  40e6c9:	mov    eax,DWORD PTR [r15+0x18]
  40e6cd:	mov    r12,QWORD PTR [r15]
  40e6d0:	mov    rcx,QWORD PTR [rsp+0x98]
  40e6d8:	lea    ebx,[rax+0x1]
  40e6db:	call   0x40bfd0
  40e6e0:	lea    rdx,[r12+rbx*8]
  40e6e4:	mov    DWORD PTR [rax+0x30],0x0
  40e6eb:	mov    QWORD PTR [rax+0x28],0x0
  40e6f3:	mov    QWORD PTR [rax+0x20],0x0
  40e6fb:	mov    QWORD PTR [rax+0x10],r12
  40e6ff:	mov    QWORD PTR [rax+0x18],rdx
  40e703:	jmp    0x40e58a
  40e708:	lea    rcx,[r12*8+0x0]
  40e710:	call   0x43baf0
  40e715:	mov    QWORD PTR [r15+0x28],rax
  40e719:	jmp    0x40e5a0
  40e71e:	add    r14,0x8
  40e722:	jmp    0x40ded5
  40e727:	nop    WORD PTR [rax+rax*1+0x0]
  40e730:	push   r15
  40e732:	push   r14
  40e734:	push   r13
  40e736:	push   r12
  40e738:	push   rbp
  40e739:	push   rdi
  40e73a:	push   rsi
  40e73b:	push   rbx
  40e73c:	sub    rsp,0x78
  40e740:	movzx  eax,BYTE PTR [rcx+0xb4]
  40e747:	xor    ebp,ebp
  40e749:	lea    rdi,[rsp+0x60]
  40e74e:	mov    rbx,rcx
  40e751:	mov    r12,rdx
  40e754:	mov    BYTE PTR [rsp+0x4f],al
  40e758:	lea    rax,[rsp+0x68]
  40e75d:	mov    QWORD PTR [rsp+0x50],rax
  40e762:	mov    rcx,QWORD PTR [rbx+0x88]
  40e769:	cmp    QWORD PTR [rcx+0x8],0x0
  40e76e:	je     0x40ea80
  40e774:	mov    eax,DWORD PTR [rcx+0x30]
  40e777:	cmp    eax,0x1
  40e77a:	je     0x40e992
  40e780:	test   eax,0xfffffffd
  40e785:	jne    0x40ec54
  40e78b:	mov    rdx,QWORD PTR [rcx+0x10]
  40e78f:	cmp    rdx,QWORD PTR [rcx+0x18]
  40e793:	jne    0x40e840
  40e799:	cmp    QWORD PTR [rcx+0x28],0x0
  40e79e:	je     0x40e7a7
  40e7a0:	add    DWORD PTR [rip+0x53d9d],0x1        # 0x462544
  40e7a7:	mov    rcx,rbx
  40e7aa:	call   0x40cb50
  40e7af:	cmp    BYTE PTR [rbx+0x10],0x0
  40e7b3:	jne    0x40e762
  40e7b5:	lea    rsi,[rbx+0x278]
  40e7bc:	nop    DWORD PTR [rax+0x0]
  40e7c0:	test   r12,r12
  40e7c3:	je     0x40e81e
  40e7c5:	test   ebp,ebp
  40e7c7:	jne    0x40e7cb
  40e7c9:	mov    ebp,DWORD PTR [rsi]
  40e7cb:	mov    DWORD PTR [r12],ebp
  40e7cf:	cmp    BYTE PTR [rbx+0x43a],0x0
  40e7d6:	mov    eax,ebp
  40e7d8:	jne    0x40e807
  40e7da:	mov    rdx,QWORD PTR [rbx+0x88]
  40e7e1:	test   rdx,rdx
  40e7e4:	je     0x40e807
  40e7e6:	cmp    DWORD PTR [rdx+0x30],0x2
  40e7ea:	mov    rax,QWORD PTR [rdx+0x28]
  40e7ee:	je     0x40ec45
  40e7f4:	test   rax,rax
  40e7f7:	je     0x40ec4d
  40e7fd:	mov    eax,DWORD PTR [rbx+0xb0]
  40e803:	mov    DWORD PTR [r12],eax
  40e807:	cmp    BYTE PTR [rbx+0x43d],0x0
  40e80e:	mov    edx,DWORD PTR [rbx+0x30]
  40e811:	je     0x40e81a
  40e813:	cmp    BYTE PTR [rbx+0x10],0x0
  40e817:	cmovne eax,edx
  40e81a:	mov    DWORD PTR [r12],eax
  40e81e:	movzx  eax,BYTE PTR [rsp+0x4f]
  40e823:	mov    BYTE PTR [rbx+0xb4],al
  40e829:	mov    rax,rsi
  40e82c:	add    rsp,0x78
  40e830:	pop    rbx
  40e831:	pop    rsi
  40e832:	pop    rdi
  40e833:	pop    rbp
  40e834:	pop    r12
  40e836:	pop    r13
  40e838:	pop    r14
  40e83a:	pop    r15
  40e83c:	ret    
  40e83d:	nop    DWORD PTR [rax]
  40e840:	test   eax,eax
  40e842:	je     0x40eaa0
  40e848:	cmp    eax,0x2
  40e84b:	jne    0x40ec54
  40e851:	mov    r8,QWORD PTR [rcx+0x28]
  40e855:	mov    rsi,QWORD PTR [rdx]
  40e858:	cmp    QWORD PTR [r8+0x8],0x0
  40e85d:	je     0x40eb60
  40e863:	mov    rax,QWORD PTR [r8+0x10]
  40e867:	mov    ebp,DWORD PTR [rax]
  40e869:	add    rax,0x4
  40e86d:	mov    QWORD PTR [r8+0x10],rax
  40e871:	add    rdx,0x8
  40e875:	mov    QWORD PTR [rcx+0x10],rdx
  40e879:	test   BYTE PTR [rsi+0x6],0x8
  40e87d:	jne    0x40e9b4
  40e883:	cmp    BYTE PTR [rbx+0x10],0x0
  40e887:	movzx  eax,BYTE PTR [rsi+0x4]
  40e88b:	je     0x40e895
  40e88d:	cmp    al,0x4d
  40e88f:	je     0x40e762
  40e895:	cmp    al,0x35
  40e897:	jne    0x40e7c0
  40e89d:	mov    rdx,QWORD PTR [rsi+0x8]
  40e8a1:	movzx  eax,BYTE PTR [rdx+0x18]
  40e8a5:	and    eax,0x3f
  40e8a8:	cmp    al,0x1
  40e8aa:	jne    0x40e7c0
  40e8b0:	test   BYTE PTR [rsi+0x6],0x20
  40e8b4:	jne    0x40e7c0
  40e8ba:	test   BYTE PTR [rdx+0x19],0x8
  40e8be:	jne    0x40ec10
  40e8c4:	cmp    BYTE PTR [rbx+0xb4],0x0
  40e8cb:	jne    0x40e8f4
  40e8cd:	mov    rax,QWORD PTR [rbx+0x88]
  40e8d4:	test   rax,rax
  40e8d7:	je     0x40ea92
  40e8dd:	cmp    DWORD PTR [rax+0x30],0x2
  40e8e1:	mov    rax,QWORD PTR [rax+0x28]
  40e8e5:	je     0x40eb54
  40e8eb:	test   rax,rax
  40e8ee:	je     0x40ea92
  40e8f4:	cmp    BYTE PTR [rbx+0x18],0x0
  40e8f8:	jne    0x40e7c0
  40e8fe:	test   BYTE PTR [rdx+0x19],0x40
  40e902:	je     0x40eab2
  40e908:	cmp    QWORD PTR [rbx+0x3c0],0x0
  40e910:	je     0x40e7c0
  40e916:	xor    edx,edx
  40e918:	mov    rcx,rbx
  40e91b:	call   0x41efb0
  40e920:	cmp    BYTE PTR [rax+0x4],0x51
  40e924:	mov    rdx,rsi
  40e927:	mov    rcx,rbx
  40e92a:	je     0x40e936
  40e92c:	test   BYTE PTR [rax+0x6],0x1
  40e930:	je     0x40ea65
  40e936:	call   QWORD PTR [rbx+0x3c0]
  40e93c:	test   rax,rax
  40e93f:	je     0x40eb05
  40e945:	mov    r9d,ebp
  40e948:	mov    r8,rsi
  40e94b:	mov    rdx,rax
  40e94e:	mov    rcx,rbx
  40e951:	call   0x40cf00
  40e956:	test   eax,eax
  40e958:	je     0x40e7c0
  40e95e:	cmp    eax,0x2
  40e961:	je     0x40e762
  40e967:	cmp    BYTE PTR [rbx+0x10],0x0
  40e96b:	jne    0x40e762
  40e971:	mov    rdi,rsi
  40e974:	mov    rcx,rbx
  40e977:	call   0x41c410
  40e97c:	mov    rsi,rax
  40e97f:	mov    BYTE PTR [rax+0x4],0x51
  40e983:	mov    QWORD PTR [rax+0x8],rdi
  40e987:	xor    eax,eax
  40e989:	mov    WORD PTR [rsi+0x6],ax
  40e98d:	jmp    0x40e7c0
  40e992:	mov    rsi,QWORD PTR [rcx+0x10]
  40e996:	cmp    rsi,QWORD PTR [rcx+0x18]
  40e99a:	je     0x40e799
  40e9a0:	lea    rax,[rsi+0x18]
  40e9a4:	mov    ebp,DWORD PTR [rsi]
  40e9a6:	mov    QWORD PTR [rcx+0x10],rax
  40e9aa:	test   BYTE PTR [rsi+0x6],0x8
  40e9ae:	je     0x40e883
  40e9b4:	mov    r14,QWORD PTR [rbx+0x88]
  40e9bb:	mov    QWORD PTR [rsp+0x60],rsi
  40e9c0:	test   r14,r14
  40e9c3:	je     0x40ec54
  40e9c9:	mov    eax,DWORD PTR [r14+0x30]
  40e9cd:	cmp    eax,0x2
  40e9d0:	je     0x40eb70
  40e9d6:	cmp    QWORD PTR [r14+0x28],0x0
  40e9db:	je     0x40ec54
  40e9e1:	mov    r15d,DWORD PTR [rbx+0xb0]
  40e9e8:	xor    r13d,r13d
  40e9eb:	jmp    0x40ea39
  40e9ed:	nop    DWORD PTR [rax]
  40e9f0:	mov    rax,QWORD PTR [r14+0x10]
  40e9f4:	lea    rdx,[rax+0x8]
  40e9f8:	mov    QWORD PTR [r14+0x10],rdx
  40e9fc:	mov    r13,QWORD PTR [rax]
  40e9ff:	cmp    BYTE PTR [r13+0x4],0x51
  40ea04:	jne    0x40ea11
  40ea06:	test   BYTE PTR [r13+0x6],0x8
  40ea0b:	jne    0x40ec54
  40ea11:	mov    r9,r13
  40ea14:	mov    r8,rdi
  40ea17:	mov    edx,r15d
  40ea1a:	mov    rcx,rbx
  40ea1d:	call   0x40cd50
  40ea22:	test   al,al
  40ea24:	je     0x40eae0
  40ea2a:	test   BYTE PTR [r13+0x6],0x8
  40ea2f:	je     0x40eae0
  40ea35:	mov    eax,DWORD PTR [r14+0x30]
  40ea39:	cmp    eax,0x1
  40ea3c:	je     0x40eac5
  40ea42:	test   eax,eax
  40ea44:	je     0x40e9f0
  40ea46:	cmp    eax,0x2
  40ea49:	jne    0x40e9ff
  40ea4b:	mov    rax,QWORD PTR [r14+0x10]
  40ea4f:	lea    rdx,[rax+0x8]
  40ea53:	mov    QWORD PTR [r14+0x10],rdx
  40ea57:	mov    r13,QWORD PTR [rax]
  40ea5a:	mov    rax,QWORD PTR [r14+0x28]
  40ea5e:	add    QWORD PTR [rax+0x10],0x4
  40ea63:	jmp    0x40e9ff
  40ea65:	call   QWORD PTR [rbx+0x3c0]
  40ea6b:	test   rax,rax
  40ea6e:	jne    0x40e945
  40ea74:	jmp    0x40e7c0
  40ea79:	nop    DWORD PTR [rax+0x0]
  40ea80:	mov    rcx,rbx
  40ea83:	call   0x41ee50
  40ea88:	mov    rsi,rax
  40ea8b:	mov    ebp,DWORD PTR [rax]
  40ea8d:	jmp    0x40e883
  40ea92:	mov    eax,DWORD PTR [rsi]
  40ea94:	mov    DWORD PTR [rbx+0xb0],eax
  40ea9a:	jmp    0x40e8f4
  40ea9f:	nop
  40eaa0:	mov    rsi,QWORD PTR [rdx]
  40eaa3:	add    rdx,0x8
  40eaa7:	mov    ebp,DWORD PTR [rsi]
  40eaa9:	mov    QWORD PTR [rcx+0x10],rdx
  40eaad:	jmp    0x40e879
  40eab2:	mov    r9d,ebp
  40eab5:	mov    r8,rsi
  40eab8:	mov    rcx,rbx
  40eabb:	call   0x40cf00
  40eac0:	jmp    0x40e956
  40eac5:	mov    r13,QWORD PTR [r14+0x10]
  40eac9:	lea    rax,[r13+0x18]
  40eacd:	mov    QWORD PTR [r14+0x10],rax
  40ead1:	jmp    0x40e9ff
  40ead6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eae0:	cmp    DWORD PTR [r14+0x30],0x2
  40eae5:	je     0x40eb90
  40eaeb:	mov    r8,QWORD PTR [rsp+0x60]
  40eaf0:	mov    r9d,0x1
  40eaf6:	xor    edx,edx
  40eaf8:	mov    rcx,rbx
  40eafb:	call   0x40c980
  40eb00:	jmp    0x40e967
  40eb05:	xor    edx,edx
  40eb07:	mov    rcx,rbx
  40eb0a:	call   0x41efb0
  40eb0f:	cmp    BYTE PTR [rax+0x4],0x51
  40eb13:	mov    rdi,rax
  40eb16:	je     0x40e7c0
  40eb1c:	test   BYTE PTR [rax+0x6],0x1
  40eb20:	jne    0x40e7c0
  40eb26:	mov    rcx,rbx
  40eb29:	call   0x41c410
  40eb2e:	xor    edx,edx
  40eb30:	mov    r8,rax
  40eb33:	mov    BYTE PTR [rax+0x4],0x51
  40eb37:	mov    WORD PTR [rax+0x6],dx
  40eb3b:	mov    QWORD PTR [rax+0x8],rdi
  40eb3f:	mov    r9d,0x1
  40eb45:	xor    edx,edx
  40eb47:	mov    rcx,rbx
  40eb4a:	call   0x40c980
  40eb4f:	jmp    0x40e7c0
  40eb54:	mov    rax,QWORD PTR [rax]
  40eb57:	jmp    0x40e8eb
  40eb5c:	nop    DWORD PTR [rax+0x0]
  40eb60:	mov    ebp,DWORD PTR [rsi]
  40eb62:	jmp    0x40e871
  40eb67:	nop    WORD PTR [rax+rax*1+0x0]
  40eb70:	mov    rdx,QWORD PTR [r14+0x28]
  40eb74:	cmp    QWORD PTR [rdx],0x0
  40eb78:	je     0x40ec54
  40eb7e:	mov    rdx,QWORD PTR [rdx+0x10]
  40eb82:	mov    r15d,DWORD PTR [rdx-0x4]
  40eb86:	jmp    0x40e9e8
  40eb8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40eb90:	mov    r8,QWORD PTR [rsp+0x50]
  40eb95:	mov    rcx,rbx
  40eb98:	mov    edx,0x1
  40eb9d:	mov    QWORD PTR [rsp+0x68],0x0
  40eba6:	call   0x40bf10
  40ebab:	mov    r8,QWORD PTR [rsp+0x60]
  40ebb0:	mov    rdx,QWORD PTR [rsp+0x68]
  40ebb5:	mov    r9d,r15d
  40ebb8:	mov    DWORD PTR [rsp+0x30],0x0
  40ebc0:	mov    QWORD PTR [rsp+0x28],0x0
  40ebc9:	mov    rcx,rax
  40ebcc:	mov    DWORD PTR [rsp+0x20],0x0
  40ebd4:	mov    QWORD PTR [rsp+0x58],rax
  40ebd9:	call   0x40bf50
  40ebde:	mov    r10,QWORD PTR [rsp+0x58]
  40ebe3:	mov    rax,QWORD PTR [r14+0x28]
  40ebe7:	mov    rcx,rbx
  40ebea:	mov    DWORD PTR [rsp+0x28],0x1
  40ebf2:	mov    r9,QWORD PTR [rsp+0x68]
  40ebf7:	mov    rdx,QWORD PTR [r10+0x8]
  40ebfb:	mov    r8,r10
  40ebfe:	mov    QWORD PTR [rsp+0x20],rdx
  40ec03:	mov    rdx,QWORD PTR [rax]
  40ec06:	call   0x40c050
  40ec0b:	jmp    0x40e967
  40ec10:	mov    rdi,rsi
  40ec13:	mov    rcx,rbx
  40ec16:	call   0x41c410
  40ec1b:	mov    rsi,rax
  40ec1e:	movzx  eax,BYTE PTR [rdi+0x4]
  40ec22:	mov    rdx,QWORD PTR [rdi+0x10]
  40ec26:	mov    BYTE PTR [rsi+0x4],al
  40ec29:	movzx  eax,WORD PTR [rdi+0x6]
  40ec2d:	or     eax,0x20
  40ec30:	mov    WORD PTR [rsi+0x6],ax
  40ec34:	mov    rax,QWORD PTR [rdi+0x8]
  40ec38:	mov    QWORD PTR [rsi+0x10],rdx
  40ec3c:	mov    QWORD PTR [rsi+0x8],rax
  40ec40:	jmp    0x40e7c0
  40ec45:	mov    rax,QWORD PTR [rax]
  40ec48:	jmp    0x40e7f4
  40ec4d:	mov    eax,ebp
  40ec4f:	jmp    0x40e807
  40ec54:	call   0x449548
  40ec59:	nop
  40ec5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ec60:	xor    edx,edx
  40ec62:	jmp    0x40e730
  40ec67:	nop    WORD PTR [rax+rax*1+0x0]
  40ec70:	push   rbx
  40ec71:	sub    rsp,0x20
  40ec75:	mov    rax,QWORD PTR [rcx]
  40ec78:	mov    rbx,rcx
  40ec7b:	or     BYTE PTR [rax+0x6c],0x4
  40ec7f:	add    BYTE PTR [rcx+0x1b],0x1
  40ec83:	add    BYTE PTR [rcx+0x18],0x1
  40ec87:	cmp    BYTE PTR [rcx+0x43d],0x0
  40ec8e:	je     0x40ecb0
  40ec90:	mov    rcx,rbx
  40ec93:	call   0x410c30
  40ec98:	test   al,al
  40ec9a:	jne    0x40ec90
  40ec9c:	sub    BYTE PTR [rbx+0x1b],0x1
  40eca0:	sub    BYTE PTR [rbx+0x18],0x1
  40eca4:	add    rsp,0x20
  40eca8:	pop    rbx
  40eca9:	ret    
  40ecaa:	nop    WORD PTR [rax+rax*1+0x0]
  40ecb0:	xor    edx,edx
  40ecb2:	mov    rcx,rbx
  40ecb5:	call   0x40e730
  40ecba:	cmp    BYTE PTR [rax+0x4],0x16
  40ecbe:	je     0x40ec9c
  40ecc0:	xor    edx,edx
  40ecc2:	mov    rcx,rbx
  40ecc5:	call   0x40e730
  40ecca:	cmp    BYTE PTR [rax+0x4],0x16
  40ecce:	jne    0x40ecb0
  40ecd0:	jmp    0x40ec9c
  40ecd2:	nop    DWORD PTR [rax+0x0]
  40ecd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ece0:	jmp    0x40e730
  40ece5:	nop
  40ece6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ecf0:	and    BYTE PTR [rcx+0x18],0xc0
  40ecf4:	and    WORD PTR [rcx+0x18],0xd6ff
  40ecfa:	ret    
  40ecfb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed00:	push   rbp
  40ed01:	push   rdi
  40ed02:	push   rsi
  40ed03:	push   rbx
  40ed04:	sub    rsp,0x28
  40ed08:	test   BYTE PTR [r8+0x19],0x10
  40ed0d:	mov    rsi,rcx
  40ed10:	mov    rdi,rdx
  40ed13:	mov    rbx,r8
  40ed16:	jne    0x40edc5
  40ed1c:	mov    rdx,QWORD PTR [rcx+0x38]
  40ed20:	movzx  r8d,WORD PTR [rdi+0x18]
  40ed25:	mov    rcx,QWORD PTR [rdx+0x10]
  40ed29:	mov    rdx,QWORD PTR [rdx+0x18]
  40ed2d:	mov    rax,r8
  40ed30:	lea    r8,[r8*8+0x8]
  40ed38:	sub    rdx,rcx
  40ed3b:	cmp    rdx,r8
  40ed3e:	jb     0x40ed84
  40ed40:	lea    edx,[rax+0x1]
  40ed43:	mov    WORD PTR [rdi+0x18],dx
  40ed47:	mov    QWORD PTR [rcx+rax*8],rbx
  40ed4b:	or     WORD PTR [rbx+0x18],0x1000
  40ed51:	movzx  ebp,WORD PTR [rdi+0x18]
  40ed55:	mov    edx,ebp
  40ed57:	shl    ebp,0x3
  40ed5a:	cmp    ebp,DWORD PTR [rsi+0x1e8]
  40ed60:	ja     0x40eda4
  40ed62:	mov    rax,QWORD PTR [rsi+0x1e0]
  40ed69:	mov    r8,QWORD PTR [rbx+0x20]
  40ed6d:	movzx  ecx,dx
  40ed70:	mov    QWORD PTR [rax+rcx*8-0x8],r8
  40ed75:	xor    eax,eax
  40ed77:	mov    WORD PTR [rbx+0x20],dx
  40ed7b:	add    rsp,0x28
  40ed7f:	pop    rbx
  40ed80:	pop    rsi
  40ed81:	pop    rdi
  40ed82:	pop    rbp
  40ed83:	ret    
  40ed84:	lea    rdx,[rsi+0x38]
  40ed88:	mov    rcx,rsi
  40ed8b:	mov    r8d,0x8
  40ed91:	call   0x41d060
  40ed96:	mov    rax,QWORD PTR [rsi+0x38]
  40ed9a:	mov    rcx,QWORD PTR [rax+0x10]
  40ed9e:	movzx  eax,WORD PTR [rdi+0x18]
  40eda2:	jmp    0x40ed40
  40eda4:	mov    rcx,QWORD PTR [rsi+0x1e0]
  40edab:	mov    edx,ebp
  40edad:	call   0x43bb70
  40edb2:	mov    DWORD PTR [rsi+0x1e8],ebp
  40edb8:	mov    QWORD PTR [rsi+0x1e0],rax
  40edbf:	movzx  edx,WORD PTR [rdi+0x18]
  40edc3:	jmp    0x40ed69
  40edc5:	mov    r9,QWORD PTR [r8]
  40edc8:	lea    r8,[rip+0x3f7c1]        # 0x44e590
  40edcf:	mov    edx,0x3
  40edd4:	call   0x414b60
  40edd9:	mov    eax,0x1
  40edde:	add    rsp,0x28
  40ede2:	pop    rbx
  40ede3:	pop    rsi
  40ede4:	pop    rdi
  40ede5:	pop    rbp
  40ede6:	ret    
  40ede7:	nop    WORD PTR [rax+rax*1+0x0]
  40edf0:	push   r13
  40edf2:	push   r12
  40edf4:	push   rbp
  40edf5:	push   rdi
  40edf6:	push   rsi
  40edf7:	push   rbx
  40edf8:	sub    rsp,0x38
  40edfc:	mov    rax,QWORD PTR [rcx+0x3f8]
  40ee03:	mov    rsi,rcx
  40ee06:	mov    rbp,rdx
  40ee09:	mov    rax,QWORD PTR [rax+0x68]
  40ee0d:	test   rax,rax
  40ee10:	je     0x40f3e0
  40ee16:	mov    ecx,0x20
  40ee1b:	call   rax
  40ee1d:	mov    rbx,rax
  40ee20:	mov    eax,DWORD PTR [rsi+0x30]
  40ee23:	mov    QWORD PTR [rbx],0x0
  40ee2a:	mov    DWORD PTR [rbx+0x10],eax
  40ee2d:	xor    eax,eax
  40ee2f:	mov    WORD PTR [rbx+0x18],ax
  40ee33:	movzx  eax,BYTE PTR [rbx+0x1c]
  40ee37:	mov    edx,eax
  40ee39:	and    edx,0xfffffffd
  40ee3c:	mov    BYTE PTR [rbx+0x1c],dl
  40ee3f:	cmp    BYTE PTR [rsi+0x434],0x0
  40ee46:	mov    DWORD PTR [rbx+0x14],0x0
  40ee4d:	sete   dl
  40ee50:	and    eax,0xffffffd4
  40ee53:	shl    edx,0x3
  40ee56:	or     eax,edx
  40ee58:	mov    BYTE PTR [rbx+0x1c],al
  40ee5b:	mov    rax,QWORD PTR [rsi]
  40ee5e:	test   rax,rax
  40ee61:	je     0x40f3f2
  40ee67:	cmp    BYTE PTR [rax+0x6d],0x0
  40ee6b:	setne  al
  40ee6e:	movzx  edx,BYTE PTR [rbx+0x1c]
  40ee72:	shl    eax,0x2
  40ee75:	and    edx,0xfffffffb
  40ee78:	or     eax,edx
  40ee7a:	mov    BYTE PTR [rbx+0x1c],al
  40ee7d:	cmp    BYTE PTR [rsi+0x43d],0x0
  40ee84:	je     0x40efa5
  40ee8a:	mov    rdx,rbx
  40ee8d:	mov    rcx,rsi
  40ee90:	call   0x410da0
  40ee95:	mov    r12d,eax
  40ee98:	movzx  eax,WORD PTR [rbx+0x18]
  40ee9c:	test   eax,eax
  40ee9e:	lea    r8d,[rax-0x1]
  40eea2:	je     0x40eece
  40eea4:	mov    rax,QWORD PTR [rbx]
  40eea7:	mov    edx,r8d
  40eeaa:	sub    r8d,0x1
  40eeae:	mov    r9,QWORD PTR [rax+rdx*8]
  40eeb2:	and    WORD PTR [r9+0x18],0xefff
  40eeb9:	cmp    r8d,0xffffffff
  40eebd:	mov    rax,QWORD PTR [rsi+0x1e0]
  40eec4:	mov    rdx,QWORD PTR [rax+rdx*8]
  40eec8:	mov    QWORD PTR [r9+0x20],rdx
  40eecc:	jne    0x40eea4
  40eece:	test   r12b,r12b
  40eed1:	je     0x40ef95
  40eed7:	movzx  eax,BYTE PTR [rbp+0x18]
  40eedb:	and    eax,0x3f
  40eede:	cmp    al,0x1
  40eee0:	je     0x40f290
  40eee6:	movzx  edx,WORD PTR [rbp+0x18]
  40eeea:	shr    dx,0x6
  40eeee:	test   al,al
  40eef0:	je     0x40ef09
  40eef2:	movzx  ecx,WORD PTR [rbp+0x18]
  40eef6:	and    dx,0x35b
  40eefb:	mov    eax,edx
  40eefd:	shl    eax,0x6
  40ef00:	and    ecx,0x3f
  40ef03:	or     eax,ecx
  40ef05:	mov    WORD PTR [rbp+0x18],ax
  40ef09:	movzx  eax,BYTE PTR [rbp+0x18]
  40ef0d:	lea    rdi,[rip+0x3f8bc]        # 0x44e7d0
  40ef14:	mov    QWORD PTR [rbp+0x20],rbx
  40ef18:	mov    ecx,0x7
  40ef1d:	and    eax,0xffffffc0
  40ef20:	or     eax,0x1
  40ef23:	mov    BYTE PTR [rbp+0x18],al
  40ef26:	mov    rax,QWORD PTR [rbp+0x0]
  40ef2a:	mov    rsi,rax
  40ef2d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ef2f:	jne    0x40ef80
  40ef31:	lea    rdi,[rip+0x3f8a0]        # 0x44e7d8
  40ef38:	mov    ecx,0x15
  40ef3d:	mov    rsi,rax
  40ef40:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ef42:	je     0x40ef80
  40ef44:	lea    rdi,[rip+0x3f8a2]        # 0x44e7ed
  40ef4b:	mov    ecx,0x14
  40ef50:	mov    rsi,rax
  40ef53:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ef55:	je     0x40ef80
  40ef57:	lea    rdi,[rip+0x3f8a3]        # 0x44e801
  40ef5e:	mov    ecx,0x17
  40ef63:	mov    rsi,rax
  40ef66:	mov    eax,edx
  40ef68:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ef6a:	seta   r8b
  40ef6e:	setb   cl
  40ef71:	or     eax,0x10
  40ef74:	cmp    r8b,cl
  40ef77:	cmovne edx,eax
  40ef7a:	nop    WORD PTR [rax+rax*1+0x0]
  40ef80:	movzx  eax,WORD PTR [rbp+0x18]
  40ef84:	and    dx,0x2ff
  40ef89:	shl    edx,0x6
  40ef8c:	and    eax,0x3f
  40ef8f:	or     edx,eax
  40ef91:	mov    WORD PTR [rbp+0x18],dx
  40ef95:	mov    eax,r12d
  40ef98:	add    rsp,0x38
  40ef9c:	pop    rbx
  40ef9d:	pop    rsi
  40ef9e:	pop    rdi
  40ef9f:	pop    rbp
  40efa0:	pop    r12
  40efa2:	pop    r13
  40efa4:	ret    
  40efa5:	mov    rcx,rsi
  40efa8:	call   0x41ee50
  40efad:	mov    rdi,rax
  40efb0:	movzx  eax,BYTE PTR [rax+0x4]
  40efb4:	cmp    al,0x14
  40efb6:	je     0x40f373
  40efbc:	cmp    al,0x16
  40efbe:	je     0x40f014
  40efc0:	test   BYTE PTR [rdi+0x6],0x1
  40efc4:	jne    0x40f014
  40efc6:	cmp    BYTE PTR [rsi+0x435],0x0
  40efcd:	jne    0x40f650
  40efd3:	cmp    al,0x36
  40efd5:	je     0x40f604
  40efdb:	jbe    0x40f5fc
  40efe1:	cmp    al,0x3c
  40efe3:	jne    0x40f428
  40efe9:	mov    rax,QWORD PTR [rdi+0x10]
  40efed:	lea    rcx,[rip+0x3f6ed]        # 0x44e6e1
  40eff4:	movzx  edx,BYTE PTR [rax]
  40eff7:	call   0x4493e8
  40effc:	cmp    rax,0x1
  40f000:	sbb    edx,edx
  40f002:	and    edx,0x2
  40f005:	lea    r8,[rip+0x3f6f4]        # 0x44e700
  40f00c:	mov    rcx,rsi
  40f00f:	call   0x414b60
  40f014:	test   BYTE PTR [rbx+0x1c],0x1
  40f018:	je     0x40f240
  40f01e:	mov    rdx,rbx
  40f021:	mov    rcx,rsi
  40f024:	call   0x40c150
  40f029:	xor    r12d,r12d
  40f02c:	xor    edi,edi
  40f02e:	jmp    0x40f053
  40f030:	sub    r8d,0x1
  40f034:	or     BYTE PTR [rbx+0x1c],0x20
  40f038:	add    r12d,0x1
  40f03c:	mov    DWORD PTR [rax+0x8],r8d
  40f040:	cmp    r9b,0x26
  40f044:	mov    rdx,rbx
  40f047:	mov    rcx,rsi
  40f04a:	sete   dil
  40f04e:	call   0x40c150
  40f053:	mov    r8d,DWORD PTR [rbx+0x14]
  40f057:	cmp    r8d,0x1
  40f05b:	jbe    0x40f063
  40f05d:	cmp    BYTE PTR [rax-0x14],0x25
  40f061:	je     0x40f0c0
  40f063:	movzx  r9d,BYTE PTR [rax+0x4]
  40f068:	cmp    r9b,0x16
  40f06c:	je     0x40f100
  40f072:	cmp    r9b,0x26
  40f076:	jne    0x40f040
  40f078:	cmp    r8d,0x1
  40f07c:	je     0x40f270
  40f082:	movzx  edx,WORD PTR [rax-0x12]
  40f086:	test   dl,0x8
  40f089:	jne    0x40f030
  40f08b:	mov    ecx,edx
  40f08d:	sub    r8d,0x1
  40f091:	or     ecx,0x8
  40f094:	mov    DWORD PTR [rbx+0x14],r8d
  40f098:	mov    WORD PTR [rax-0x12],cx
  40f09c:	movzx  ecx,WORD PTR [rax+0x6]
  40f0a0:	test   cl,0x2
  40f0a3:	je     0x40f0ae
  40f0a5:	or     dx,0x108
  40f0aa:	mov    WORD PTR [rax-0x12],dx
  40f0ae:	and    ecx,0x1
  40f0b1:	je     0x40f040
  40f0b3:	or     WORD PTR [rax-0x12],0x200
  40f0b9:	jmp    0x40f040
  40f0bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f0c0:	test   BYTE PTR [rbx+0x1c],0x1
  40f0c4:	movzx  r9d,BYTE PTR [rax+0x4]
  40f0c9:	je     0x40f068
  40f0cb:	cmp    r9b,0x4e
  40f0cf:	je     0x40f1e0
  40f0d5:	cmp    DWORD PTR [rsi+0x414],0xd
  40f0dc:	je     0x40f068
  40f0de:	lea    r8,[rip+0x3f643]        # 0x44e728
  40f0e5:	mov    edx,0x3
  40f0ea:	mov    rcx,rsi
  40f0ed:	xor    r12d,r12d
  40f0f0:	call   0x414b60
  40f0f5:	jmp    0x40f287
  40f0fa:	nop    WORD PTR [rax+rax*1+0x0]
  40f100:	test   dil,dil
  40f103:	jne    0x40f270
  40f109:	mov    rax,QWORD PTR [rsi+0x38]
  40f10d:	sub    r8d,0x1
  40f111:	mov    rax,QWORD PTR [rax+0x10]
  40f115:	and    BYTE PTR [rbx+0x1c],0xef
  40f119:	test   r8d,r8d
  40f11c:	mov    DWORD PTR [rbx+0x14],r8d
  40f120:	mov    QWORD PTR [rbx+0x8],rax
  40f124:	je     0x40f12b
  40f126:	and    WORD PTR [rax+0x6],0xfffe
  40f12b:	mov    rdx,QWORD PTR [rsi+0x3f8]
  40f132:	mov    rdx,QWORD PTR [rdx+0x68]
  40f136:	test   rdx,rdx
  40f139:	je     0x40f3ab
  40f13f:	lea    rcx,[r8+r8*2]
  40f143:	shl    rcx,0x3
  40f147:	call   rdx
  40f149:	test   r12d,r12d
  40f14c:	mov    r11,rax
  40f14f:	mov    eax,DWORD PTR [rbx+0x14]
  40f152:	je     0x40f40c
  40f158:	mov    rcx,rax
  40f15b:	sub    rax,r12
  40f15e:	lea    rax,[rax+rax*2]
  40f162:	test   ecx,ecx
  40f164:	lea    r9,[r11+rax*8]
  40f168:	je     0x40f1d0
  40f16a:	lea    eax,[rcx-0x1]
  40f16d:	mov    rdx,QWORD PTR [rbx+0x8]
  40f171:	mov    r8,r11
  40f174:	lea    rax,[rax+rax*2+0x3]
  40f179:	lea    rcx,[rdx+rax*8]
  40f17d:	jmp    0x40f1a0
  40f17f:	nop
  40f180:	mov    QWORD PTR [r8],rax
  40f183:	mov    r10,QWORD PTR [rdx+0x8]
  40f187:	add    rdx,0x18
  40f18b:	add    r8,0x18
  40f18f:	mov    QWORD PTR [r8-0x10],r10
  40f193:	mov    r10,QWORD PTR [rdx-0x8]
  40f197:	mov    QWORD PTR [r8-0x8],r10
  40f19b:	cmp    rdx,rcx
  40f19e:	je     0x40f1d0
  40f1a0:	cmp    BYTE PTR [rdx+0x4],0x26
  40f1a4:	mov    rax,QWORD PTR [rdx]
  40f1a7:	jne    0x40f180
  40f1a9:	mov    QWORD PTR [r9],rax
  40f1ac:	mov    rax,QWORD PTR [rdx+0x8]
  40f1b0:	add    rdx,0x18
  40f1b4:	add    r9,0x18
  40f1b8:	mov    QWORD PTR [r9-0x10],rax
  40f1bc:	mov    rax,QWORD PTR [rdx-0x8]
  40f1c0:	mov    QWORD PTR [r9-0x8],rax
  40f1c4:	cmp    rdx,rcx
  40f1c7:	jne    0x40f1a0
  40f1c9:	nop    DWORD PTR [rax+0x0]
  40f1d0:	mov    QWORD PTR [rbx+0x8],r11
  40f1d4:	mov    r12d,0x1
  40f1da:	jmp    0x40f287
  40f1df:	nop
  40f1e0:	movzx  edx,WORD PTR [rax+0x6]
  40f1e4:	test   dl,0x1
  40f1e7:	je     0x40f1f0
  40f1e9:	or     dh,0x2
  40f1ec:	mov    WORD PTR [rax+0x6],dx
  40f1f0:	movzx  ecx,WORD PTR [rax-0x12]
  40f1f4:	mov    r10d,edx
  40f1f7:	or     r10w,0x100
  40f1fd:	test   cl,0x2
  40f200:	cmovne edx,r10d
  40f204:	and    ecx,0x1
  40f207:	sub    r8d,0x1
  40f20b:	and    edx,0xfffffffe
  40f20e:	or     edx,0x4
  40f211:	or     edx,ecx
  40f213:	mov    WORD PTR [rax+0x6],dx
  40f217:	mov    rdx,QWORD PTR [rax]
  40f21a:	mov    QWORD PTR [rax-0x18],rdx
  40f21e:	mov    rdx,QWORD PTR [rax+0x8]
  40f222:	mov    QWORD PTR [rax-0x10],rdx
  40f226:	mov    rdx,QWORD PTR [rax+0x10]
  40f22a:	mov    QWORD PTR [rax-0x8],rdx
  40f22e:	mov    DWORD PTR [rbx+0x14],r8d
  40f232:	jmp    0x40f040
  40f237:	nop    WORD PTR [rax+rax*1+0x0]
  40f240:	lea    rdx,[rbx+0x14]
  40f244:	mov    rcx,rsi
  40f247:	call   0x40c0f0
  40f24c:	mov    rdx,QWORD PTR [rdi]
  40f24f:	mov    QWORD PTR [rax],rdx
  40f252:	mov    rdx,QWORD PTR [rdi+0x8]
  40f256:	mov    QWORD PTR [rax+0x8],rdx
  40f25a:	mov    rdx,QWORD PTR [rdi+0x10]
  40f25e:	mov    QWORD PTR [rax+0x10],rdx
  40f262:	jmp    0x40f029
  40f267:	nop    WORD PTR [rax+rax*1+0x0]
  40f270:	lea    r8,[rip+0x3f4e1]        # 0x44e758
  40f277:	mov    edx,0x3
  40f27c:	mov    rcx,rsi
  40f27f:	xor    r12d,r12d
  40f282:	call   0x414b60
  40f287:	mov    BYTE PTR [rsi+0x16],0x0
  40f28b:	jmp    0x40ee98
  40f290:	cmp    BYTE PTR [rsi+0x434],0x0
  40f297:	jne    0x40f3f9
  40f29d:	movzx  edx,WORD PTR [rbp+0x18]
  40f2a1:	shr    dx,0x6
  40f2a5:	test   dl,0x10
  40f2a8:	jne    0x40f2f2
  40f2aa:	test   dl,0x4
  40f2ad:	je     0x40f2d7
  40f2af:	mov    rax,QWORD PTR [rsi+0x3f0]
  40f2b6:	test   rax,rax
  40f2b9:	je     0x40f3ce
  40f2bf:	mov    rdx,rbp
  40f2c2:	mov    rcx,rsi
  40f2c5:	call   rax
  40f2c7:	movzx  edx,WORD PTR [rbp+0x18]
  40f2cb:	shr    dx,0x6
  40f2cf:	test   al,al
  40f2d1:	je     0x40f3ce
  40f2d7:	test   dh,0x1
  40f2da:	jne    0x40f3ce
  40f2e0:	mov    rdi,QWORD PTR [rbp+0x20]
  40f2e4:	movzx  eax,WORD PTR [rdi+0x18]
  40f2e8:	cmp    ax,WORD PTR [rbx+0x18]
  40f2ec:	je     0x40f540
  40f2f2:	mov    rax,QWORD PTR [rbp+0x0]
  40f2f6:	shl    edx,0x1d
  40f2f9:	xor    r9d,r9d
  40f2fc:	sar    edx,0x1f
  40f2ff:	mov    rcx,rsi
  40f302:	and    edx,0xb
  40f305:	mov    QWORD PTR [rsp+0x28],rax
  40f30a:	lea    rax,[rip+0x3f47d]        # 0x44e78e
  40f311:	mov    QWORD PTR [rsp+0x20],rax
  40f316:	mov    r8d,DWORD PTR [rsi+0x30]
  40f31a:	call   0x414cc0
  40f31f:	test   al,al
  40f321:	movzx  eax,BYTE PTR [rbp+0x18]
  40f325:	je     0x40f36b
  40f327:	movzx  edx,WORD PTR [rbp+0x18]
  40f32b:	and    eax,0x3f
  40f32e:	shr    dx,0x6
  40f332:	cmp    al,0x1
  40f334:	jne    0x40eeee
  40f33a:	test   dl,0x4
  40f33d:	jne    0x40eef2
  40f343:	mov    rax,QWORD PTR [rbp+0x20]
  40f347:	xor    r9d,r9d
  40f34a:	mov    edx,0x5
  40f34f:	mov    rcx,rsi
  40f352:	mov    r8d,DWORD PTR [rax+0x10]
  40f356:	lea    rax,[rip+0x3f443]        # 0x44e7a0
  40f35d:	mov    QWORD PTR [rsp+0x20],rax
  40f362:	call   0x414c40
  40f367:	movzx  eax,BYTE PTR [rbp+0x18]
  40f36b:	and    eax,0x3f
  40f36e:	jmp    0x40eee6
  40f373:	test   BYTE PTR [rdi+0x6],0x1
  40f377:	jne    0x40f014
  40f37d:	lea    r12,[rip+0x3f494]        # 0x44e818
  40f384:	xor    r13d,r13d
  40f387:	mov    rcx,rsi
  40f38a:	call   0x41ee50
  40f38f:	movzx  edx,BYTE PTR [rax+0x4]
  40f393:	lea    ecx,[rdx-0x13]
  40f396:	cmp    cl,0x22
  40f399:	ja     0x40f60e
  40f39f:	movzx  ecx,cl
  40f3a2:	movsxd rcx,DWORD PTR [r12+rcx*4]
  40f3a6:	add    rcx,r12
  40f3a9:	jmp    rcx
  40f3ab:	lea    rcx,[r8+r8*2]
  40f3af:	mov    rdx,QWORD PTR [rsi+0x38]
  40f3b3:	mov    r12d,0x1
  40f3b9:	lea    rax,[rax+rcx*8]
  40f3bd:	mov    QWORD PTR [rdx+0x10],rax
  40f3c1:	jmp    0x40f287
  40f3c6:	movzx  edx,WORD PTR [rbp+0x18]
  40f3ca:	shr    dx,0x6
  40f3ce:	movzx  eax,BYTE PTR [rbp+0x18]
  40f3d2:	and    eax,0x3f
  40f3d5:	jmp    0x40eeee
  40f3da:	nop    WORD PTR [rax+rax*1+0x0]
  40f3e0:	mov    edx,0x20
  40f3e5:	call   0x41f0f0
  40f3ea:	mov    rbx,rax
  40f3ed:	jmp    0x40ee20
  40f3f2:	xor    eax,eax
  40f3f4:	jmp    0x40ee6e
  40f3f9:	xor    r8d,r8d
  40f3fc:	mov    rdx,rbp
  40f3ff:	mov    rcx,rsi
  40f402:	call   0x40c3c0
  40f407:	jmp    0x40f29d
  40f40c:	lea    r8,[rax+rax*2]
  40f410:	mov    rdx,QWORD PTR [rbx+0x8]
  40f414:	mov    rcx,r11
  40f417:	shl    r8,0x3
  40f41b:	call   0x449450
  40f420:	mov    r11,rax
  40f423:	jmp    0x40f1d0
  40f428:	cmp    al,0x42
  40f42a:	je     0x40f604
  40f430:	xor    edx,edx
  40f432:	jmp    0x40f005
  40f437:	lea    r8,[rip+0x3f24a]        # 0x44e688
  40f43e:	mov    edx,0x3
  40f443:	mov    rcx,rsi
  40f446:	call   0x414b60
  40f44b:	mov    rax,QWORD PTR [rsi+0x38]
  40f44f:	xor    r12d,r12d
  40f452:	mov    rax,QWORD PTR [rax+0x10]
  40f456:	mov    QWORD PTR [rbx],rax
  40f459:	jmp    0x40f287
  40f45e:	test   r13d,r13d
  40f461:	jne    0x40f6e8
  40f467:	mov    r8,QWORD PTR [rax+0x8]
  40f46b:	mov    rdx,rbx
  40f46e:	mov    rcx,rsi
  40f471:	call   0x40ed00
  40f476:	test   al,al
  40f478:	jne    0x40f44b
  40f47a:	mov    r13d,0x1
  40f480:	jmp    0x40f387
  40f485:	or     BYTE PTR [rbx+0x1c],0x2
  40f489:	test   r13d,r13d
  40f48c:	je     0x40f676
  40f492:	cmp    BYTE PTR [rsi+0x437],0x0
  40f499:	je     0x40f4b8
  40f49b:	cmp    BYTE PTR [rsi+0x42d],0x0
  40f4a2:	je     0x40f4b8
  40f4a4:	lea    r8,[rip+0x3f1ad]        # 0x44e658
  40f4ab:	mov    edx,0xa
  40f4b0:	mov    rcx,rsi
  40f4b3:	call   0x414bc0
  40f4b8:	mov    rcx,rsi
  40f4bb:	call   0x41ee50
  40f4c0:	cmp    BYTE PTR [rax+0x4],0x15
  40f4c4:	jne    0x40f437
  40f4ca:	movzx  eax,WORD PTR [rbx+0x18]
  40f4ce:	mov    r8,QWORD PTR [rsi+0x3f8]
  40f4d5:	mov    rdx,QWORD PTR [rsi+0x38]
  40f4d9:	mov    r8,QWORD PTR [r8+0x68]
  40f4dd:	mov    rcx,QWORD PTR [rdx+0x10]
  40f4e1:	test   r8,r8
  40f4e4:	mov    QWORD PTR [rbx],rcx
  40f4e7:	je     0x40f669
  40f4ed:	lea    rcx,[rax*8+0x0]
  40f4f5:	call   r8
  40f4f8:	movzx  r8d,WORD PTR [rbx+0x18]
  40f4fd:	mov    rdx,QWORD PTR [rbx]
  40f500:	mov    rcx,rax
  40f503:	shl    r8,0x3
  40f507:	call   0x449450
  40f50c:	mov    QWORD PTR [rbx],rax
  40f50f:	or     BYTE PTR [rbx+0x1c],0x1
  40f513:	jmp    0x40f014
  40f518:	test   r13d,r13d
  40f51b:	movzx  eax,WORD PTR [rbx+0x18]
  40f51f:	jne    0x40f4ce
  40f521:	test   ax,ax
  40f524:	je     0x40f4ce
  40f526:	lea    r8,[rip+0x3f0dc]        # 0x44e609
  40f52d:	mov    edx,0x3
  40f532:	mov    rcx,rsi
  40f535:	call   0x414b60
  40f53a:	jmp    0x40f44b
  40f53f:	nop
  40f540:	movzx  ecx,BYTE PTR [rbx+0x1c]
  40f544:	xor    cl,BYTE PTR [rdi+0x1c]
  40f547:	and    ecx,0x3
  40f54a:	jne    0x40f2f2
  40f550:	test   eax,eax
  40f552:	je     0x40f588
  40f554:	mov    r9,QWORD PTR [rdi]
  40f557:	mov    r10,QWORD PTR [rbx]
  40f55a:	mov    rcx,QWORD PTR [r10]
  40f55d:	cmp    QWORD PTR [r9],rcx
  40f560:	jne    0x40f2f2
  40f566:	lea    ecx,[rax-0x1]
  40f569:	xor    eax,eax
  40f56b:	jmp    0x40f583
  40f56d:	nop    DWORD PTR [rax]
  40f570:	mov    r8,QWORD PTR [r9+rax*8+0x8]
  40f575:	add    rax,0x1
  40f579:	cmp    r8,QWORD PTR [r10+rax*8]
  40f57d:	jne    0x40f2f2
  40f583:	cmp    rax,rcx
  40f586:	jne    0x40f570
  40f588:	cmp    BYTE PTR [rsi+0x43d],0x0
  40f58f:	jne    0x40f6d0
  40f595:	mov    eax,DWORD PTR [rdi+0x14]
  40f598:	cmp    eax,DWORD PTR [rbx+0x14]
  40f59b:	jne    0x40f2f2
  40f5a1:	test   eax,eax
  40f5a3:	je     0x40f3ce
  40f5a9:	xor    r13d,r13d
  40f5ac:	jmp    0x40f5bc
  40f5ae:	add    r13d,0x1
  40f5b2:	cmp    r13d,DWORD PTR [rdi+0x14]
  40f5b6:	jae    0x40f3c6
  40f5bc:	mov    eax,r13d
  40f5bf:	lea    rax,[rax+rax*2]
  40f5c3:	shl    rax,0x3
  40f5c7:	mov    rdx,rax
  40f5ca:	add    rax,QWORD PTR [rdi+0x8]
  40f5ce:	add    rdx,QWORD PTR [rbx+0x8]
  40f5d2:	mov    rcx,rax
  40f5d5:	call   0x41c960
  40f5da:	test   eax,eax
  40f5dc:	jne    0x40f5ae
  40f5de:	movzx  edx,WORD PTR [rbp+0x18]
  40f5e2:	shr    dx,0x6
  40f5e6:	jmp    0x40f2f2
  40f5eb:	test   r13d,r13d
  40f5ee:	je     0x40f526
  40f5f4:	xor    r13d,r13d
  40f5f7:	jmp    0x40f387
  40f5fc:	cmp    al,0x34
  40f5fe:	jne    0x40f430
  40f604:	mov    edx,0x2
  40f609:	jmp    0x40f005
  40f60e:	cmp    dl,0x4d
  40f611:	jne    0x40f620
  40f613:	cmp    BYTE PTR [rsi+0x41c],0x0
  40f61a:	je     0x40f387
  40f620:	mov    rcx,rsi
  40f623:	mov    rdx,rax
  40f626:	call   0x41f080
  40f62b:	lea    r8,[rip+0x3ef7e]        # 0x44e5b0
  40f632:	mov    r9,rax
  40f635:	mov    edx,0x3
  40f63a:	mov    rcx,rsi
  40f63d:	call   0x414b60
  40f642:	jmp    0x40f44b
  40f647:	nop    WORD PTR [rax+rax*1+0x0]
  40f650:	lea    r8,[rip+0x3f059]        # 0x44e6b0
  40f657:	mov    edx,0x2
  40f65c:	mov    rcx,rsi
  40f65f:	call   0x414b60
  40f664:	jmp    0x40f014
  40f669:	lea    rax,[rcx+rax*8]
  40f66d:	mov    QWORD PTR [rdx+0x10],rax
  40f671:	jmp    0x40f50f
  40f676:	mov    r8,QWORD PTR [rsi+0x4b0]
  40f67d:	mov    rdx,rbx
  40f680:	mov    rcx,rsi
  40f683:	call   0x40ed00
  40f688:	cmp    BYTE PTR [rsi+0x435],0x0
  40f68f:	mov    BYTE PTR [rsi+0x16],0x1
  40f693:	jne    0x40f4b8
  40f699:	cmp    BYTE PTR [rsi+0x437],0x0
  40f6a0:	je     0x40f4b8
  40f6a6:	cmp    BYTE PTR [rsi+0x42d],0x0
  40f6ad:	je     0x40f4b8
  40f6b3:	lea    r8,[rip+0x3ef66]        # 0x44e620
  40f6ba:	mov    edx,0xa
  40f6bf:	mov    rcx,rsi
  40f6c2:	call   0x414bc0
  40f6c7:	jmp    0x40f4b8
  40f6cc:	nop    DWORD PTR [rax+0x0]
  40f6d0:	mov    rdx,rbx
  40f6d3:	mov    rcx,rdi
  40f6d6:	call   0x411010
  40f6db:	test   al,al
  40f6dd:	jne    0x40f5de
  40f6e3:	jmp    0x40f367
  40f6e8:	lea    r8,[rip+0x3eef1]        # 0x44e5e0
  40f6ef:	mov    edx,0x3
  40f6f4:	mov    rcx,rsi
  40f6f7:	call   0x414b60
  40f6fc:	jmp    0x40f44b
  40f701:	nop    DWORD PTR [rax+rax*1+0x0]
  40f706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f710:	push   r14
  40f712:	push   r13
  40f714:	push   r12
  40f716:	push   rbp
  40f717:	push   rdi
  40f718:	push   rsi
  40f719:	push   rbx
  40f71a:	sub    rsp,0x20
  40f71e:	movzx  r9d,BYTE PTR [rdx+0x18]
  40f723:	mov    rbp,rcx
  40f726:	mov    r13,rdx
  40f729:	mov    eax,r9d
  40f72c:	and    eax,0x3f
  40f72f:	cmp    al,0x1
  40f731:	je     0x40f760
  40f733:	lea    r8,[rip+0x3f16e]        # 0x44e8a8
  40f73a:	and    r9d,0x3f
  40f73e:	mov    edx,0x4
  40f743:	mov    rcx,rbp
  40f746:	call   0x414b60
  40f74b:	xor    eax,eax
  40f74d:	add    rsp,0x20
  40f751:	pop    rbx
  40f752:	pop    rsi
  40f753:	pop    rdi
  40f754:	pop    rbp
  40f755:	pop    r12
  40f757:	pop    r13
  40f759:	pop    r14
  40f75b:	ret    
  40f75c:	nop    DWORD PTR [rax+0x0]
  40f760:	test   BYTE PTR [rdx+0x19],0x1
  40f764:	je     0x40f780
  40f766:	mov    rax,QWORD PTR [rcx+0x3f0]
  40f76d:	test   rax,rax
  40f770:	je     0x40f733
  40f772:	call   rax
  40f774:	test   al,al
  40f776:	jne    0x40f780
  40f778:	movzx  r9d,BYTE PTR [r13+0x18]
  40f77d:	jmp    0x40f733
  40f77f:	nop
  40f780:	mov    rsi,QWORD PTR [r13+0x20]
  40f784:	mov    ebx,DWORD PTR [r13+0x8]
  40f788:	movzx  r9d,BYTE PTR [rsi+0x1c]
  40f78d:	test   r9b,0x1
  40f791:	jne    0x40f830
  40f797:	add    ebx,0x2
  40f79a:	cmp    BYTE PTR [rbp+0x43d],0x0
  40f7a1:	jne    0x40f864
  40f7a7:	and    r9d,0x20
  40f7ab:	jne    0x40fa63
  40f7b1:	mov    eax,DWORD PTR [rsi+0x14]
  40f7b4:	test   eax,eax
  40f7b6:	je     0x40f86e
  40f7bc:	sub    eax,0x1
  40f7bf:	xor    edi,edi
  40f7c1:	lea    r12,[rax+rax*2+0x3]
  40f7c6:	shl    r12,0x3
  40f7ca:	jmp    0x40f80d
  40f7cc:	nop    DWORD PTR [rax+0x0]
  40f7d0:	mov    eax,DWORD PTR [r14+0x8]
  40f7d4:	lea    edx,[rax-0x1]
  40f7d7:	mov    rax,QWORD PTR [rsi]
  40f7da:	mov    rax,QWORD PTR [rax+rdx*8]
  40f7de:	add    ebx,DWORD PTR [rax+0x8]
  40f7e1:	movzx  eax,WORD PTR [r14+0x6]
  40f7e6:	mov    edx,eax
  40f7e8:	and    edx,0x4
  40f7eb:	cmp    dx,0x1
  40f7ef:	sbb    ebx,0xffffffff
  40f7f2:	test   al,0x8
  40f7f4:	lea    edx,[rbx+0x3]
  40f7f7:	cmovne ebx,edx
  40f7fa:	and    eax,0x1
  40f7fd:	cmp    ax,0x1
  40f801:	sbb    ebx,0xffffffff
  40f804:	add    rdi,0x18
  40f808:	cmp    rdi,r12
  40f80b:	je     0x40f86e
  40f80d:	mov    r14,rdi
  40f810:	add    r14,QWORD PTR [rsi+0x8]
  40f814:	cmp    BYTE PTR [r14+0x4],0x4e
  40f819:	je     0x40f7d0
  40f81b:	mov    rcx,r14
  40f81e:	call   0x41c550
  40f823:	add    ebx,eax
  40f825:	jmp    0x40f7e1
  40f827:	nop    WORD PTR [rax+rax*1+0x0]
  40f830:	movzx  ecx,WORD PTR [rsi+0x18]
  40f834:	add    ebx,0x6
  40f837:	test   ecx,ecx
  40f839:	je     0x40f79a
  40f83f:	mov    r8,QWORD PTR [rsi]
  40f842:	xor    eax,eax
  40f844:	mov    rdx,QWORD PTR [r8+rax*8]
  40f848:	add    rax,0x1
  40f84c:	cmp    ecx,eax
  40f84e:	mov    edx,DWORD PTR [rdx+0x8]
  40f851:	lea    ebx,[rbx+rdx*1+0x1]
  40f855:	ja     0x40f844
  40f857:	cmp    BYTE PTR [rbp+0x43d],0x0
  40f85e:	je     0x40f7a7
  40f864:	mov    rcx,rsi
  40f867:	call   0x410c90
  40f86c:	add    ebx,eax
  40f86e:	cmp    ebx,DWORD PTR [rbp+0x1e8]
  40f874:	ja     0x40fa40
  40f87a:	mov    r9,QWORD PTR [rbp+0x1e0]
  40f881:	mov    r8d,DWORD PTR [r13+0x8]
  40f885:	mov    rdx,QWORD PTR [r13+0x0]
  40f889:	mov    rcx,r9
  40f88c:	call   0x449450
  40f891:	mov    edx,DWORD PTR [r13+0x8]
  40f895:	test   BYTE PTR [rsi+0x1c],0x1
  40f899:	lea    rax,[rax+rdx*1]
  40f89d:	je     0x40f905
  40f89f:	mov    BYTE PTR [rax],0x28
  40f8a2:	movzx  edx,WORD PTR [rsi+0x18]
  40f8a6:	lea    r9,[rax+0x1]
  40f8aa:	xor    ebx,ebx
  40f8ac:	nop    DWORD PTR [rax+0x0]
  40f8b0:	cmp    ebx,edx
  40f8b2:	jae    0x40f8fd
  40f8b4:	mov    rcx,QWORD PTR [rsi]
  40f8b7:	mov    eax,ebx
  40f8b9:	mov    rdi,QWORD PTR [rcx+rax*8]
  40f8bd:	cmp    QWORD PTR [rbp+0x4b0],rdi
  40f8c4:	je     0x40f8e2
  40f8c6:	mov    r8d,DWORD PTR [rdi+0x8]
  40f8ca:	mov    rdx,QWORD PTR [rdi]
  40f8cd:	mov    rcx,r9
  40f8d0:	call   0x449450
  40f8d5:	mov    r9,rax
  40f8d8:	mov    eax,DWORD PTR [rdi+0x8]
  40f8db:	movzx  edx,WORD PTR [rsi+0x18]
  40f8df:	add    r9,rax
  40f8e2:	add    ebx,0x1
  40f8e5:	cmp    ebx,edx
  40f8e7:	jae    0x40f9e2
  40f8ed:	mov    BYTE PTR [r9],0x2c
  40f8f1:	movzx  edx,WORD PTR [rsi+0x18]
  40f8f5:	add    r9,0x1
  40f8f9:	cmp    ebx,edx
  40f8fb:	jb     0x40f8b4
  40f8fd:	lea    rax,[r9+0x1]
  40f901:	mov    BYTE PTR [r9],0x29
  40f905:	mov    BYTE PTR [rax],0x20
  40f908:	cmp    BYTE PTR [rbp+0x43d],0x0
  40f90f:	lea    r10,[rax+0x1]
  40f913:	jne    0x40fa10
  40f919:	mov    r12d,DWORD PTR [rsi+0x14]
  40f91d:	test   r12d,r12d
  40f920:	je     0x40fa1e
  40f926:	test   BYTE PTR [rsi+0x1c],0x20
  40f92a:	mov    rax,QWORD PTR [rsi+0x8]
  40f92e:	jne    0x40faa0
  40f934:	xor    edi,edi
  40f936:	jmp    0x40f97d
  40f938:	nop    DWORD PTR [rax+rax*1+0x0]
  40f940:	mov    r8,r10
  40f943:	xor    r9d,r9d
  40f946:	mov    rdx,rbx
  40f949:	mov    rcx,rbp
  40f94c:	call   0x41c590
  40f951:	mov    r10,rax
  40f954:	test   BYTE PTR [rbx+0x6],0x8
  40f958:	je     0x40f96c
  40f95a:	mov    BYTE PTR [r10],0x20
  40f95e:	mov    BYTE PTR [r10+0x1],0x23
  40f963:	add    r10,0x3
  40f967:	mov    BYTE PTR [r10-0x1],0x23
  40f96c:	add    rdi,0x1
  40f970:	cmp    r12d,edi
  40f973:	jbe    0x40fa1e
  40f979:	mov    rax,QWORD PTR [rsi+0x8]
  40f97d:	lea    rdx,[rdi+rdi*2]
  40f981:	lea    rbx,[rax+rdx*8]
  40f985:	movzx  eax,WORD PTR [rbx+0x6]
  40f989:	test   al,0x1
  40f98b:	je     0x40f999
  40f98d:	mov    BYTE PTR [r10],0x20
  40f991:	movzx  eax,WORD PTR [rbx+0x6]
  40f995:	add    r10,0x1
  40f999:	test   al,0x4
  40f99b:	je     0x40f9a5
  40f99d:	mov    BYTE PTR [r10],0x23
  40f9a1:	add    r10,0x1
  40f9a5:	cmp    BYTE PTR [rbx+0x4],0x4e
  40f9a9:	jne    0x40f940
  40f9ab:	mov    eax,DWORD PTR [rbx+0x8]
  40f9ae:	mov    rcx,r10
  40f9b1:	lea    edx,[rax-0x1]
  40f9b4:	mov    rax,QWORD PTR [rsi]
  40f9b7:	mov    rax,QWORD PTR [rax+rdx*8]
  40f9bb:	mov    r8d,DWORD PTR [rax+0x8]
  40f9bf:	mov    rdx,QWORD PTR [rax]
  40f9c2:	call   0x449450
  40f9c7:	mov    r10,rax
  40f9ca:	mov    eax,DWORD PTR [rbx+0x8]
  40f9cd:	lea    edx,[rax-0x1]
  40f9d0:	mov    rax,QWORD PTR [rsi]
  40f9d3:	mov    rax,QWORD PTR [rax+rdx*8]
  40f9d7:	mov    eax,DWORD PTR [rax+0x8]
  40f9da:	add    r10,rax
  40f9dd:	jmp    0x40f954
  40f9e2:	test   BYTE PTR [rsi+0x1c],0x2
  40f9e6:	je     0x40f8b0
  40f9ec:	mov    BYTE PTR [r9],0x2e
  40f9f0:	mov    BYTE PTR [r9+0x1],0x2e
  40f9f5:	add    r9,0x3
  40f9f9:	mov    BYTE PTR [r9-0x1],0x2e
  40f9fe:	movzx  edx,WORD PTR [rsi+0x18]
  40fa02:	jmp    0x40f8b0
  40fa07:	nop    WORD PTR [rax+rax*1+0x0]
  40fa10:	mov    rdx,r10
  40fa13:	mov    rcx,rsi
  40fa16:	call   0x410cf0
  40fa1b:	mov    r10,rax
  40fa1e:	mov    BYTE PTR [r10],0x0
  40fa22:	mov    rax,QWORD PTR [rbp+0x1e0]
  40fa29:	add    rsp,0x20
  40fa2d:	pop    rbx
  40fa2e:	pop    rsi
  40fa2f:	pop    rdi
  40fa30:	pop    rbp
  40fa31:	pop    r12
  40fa33:	pop    r13
  40fa35:	pop    r14
  40fa37:	ret    
  40fa38:	nop    DWORD PTR [rax+rax*1+0x0]
  40fa40:	mov    rcx,QWORD PTR [rbp+0x1e0]
  40fa47:	mov    edx,ebx
  40fa49:	call   0x43bb70
  40fa4e:	mov    DWORD PTR [rbp+0x1e8],ebx
  40fa54:	mov    QWORD PTR [rbp+0x1e0],rax
  40fa5b:	mov    r9,rax
  40fa5e:	jmp    0x40f881
  40fa63:	mov    r8d,DWORD PTR [rsi+0x14]
  40fa67:	test   r8d,r8d
  40fa6a:	je     0x40fa99
  40fa6c:	mov    rdx,QWORD PTR [rsi+0x8]
  40fa70:	cmp    BYTE PTR [rdx+0x4],0x26
  40fa74:	je     0x40fad7
  40fa76:	add    rdx,0x18
  40fa7a:	xor    eax,eax
  40fa7c:	jmp    0x40fa91
  40fa7e:	xchg   ax,ax
  40fa80:	movzx  ecx,BYTE PTR [rdx+0x4]
  40fa84:	add    rdx,0x18
  40fa88:	cmp    cl,0x26
  40fa8b:	je     0x40f7b4
  40fa91:	add    eax,0x1
  40fa94:	cmp    eax,r8d
  40fa97:	jne    0x40fa80
  40fa99:	call   0x449548
  40fa9e:	xchg   ax,ax
  40faa0:	xor    edx,edx
  40faa2:	cmp    BYTE PTR [rax+0x4],0x26
  40faa6:	lea    rcx,[rax+0x18]
  40faaa:	je     0x40fa1e
  40fab0:	add    edx,0x1
  40fab3:	cmp    edx,r12d
  40fab6:	je     0x40fa99
  40fab8:	movzx  r8d,BYTE PTR [rcx+0x4]
  40fabd:	add    rcx,0x18
  40fac1:	cmp    r8b,0x26
  40fac5:	jne    0x40fab0
  40fac7:	test   edx,edx
  40fac9:	je     0x40fa1e
  40facf:	mov    r12d,edx
  40fad2:	jmp    0x40f934
  40fad7:	xor    eax,eax
  40fad9:	jmp    0x40f7b4
  40fade:	nop
  40fadf:	nop
  40fae0:	push   rbp
  40fae1:	push   rdi
  40fae2:	push   rsi
  40fae3:	push   rbx
  40fae4:	movzx  esi,BYTE PTR [r9]
  40fae8:	test   r8,r8
  40faeb:	je     0x40fb85
  40faf1:	mov    rbx,QWORD PTR [rip+0x4b338]        # 0x45ae30
  40faf8:	lea    r11,[rcx+0x1]
  40fafc:	xor    ebp,ebp
  40fafe:	xchg   ax,ax
  40fb00:	movzx  edi,BYTE PTR [rdx]
  40fb03:	test   sil,sil
  40fb06:	sete   al
  40fb09:	test   WORD PTR [rbx+rdi*2],0xc00
  40fb0f:	mov    r10,rdi
  40fb12:	je     0x40fb53
  40fb14:	test   al,al
  40fb16:	jne    0x40fb2b
  40fb18:	jmp    0x40fb53
  40fb1a:	nop    WORD PTR [rax+rax*1+0x0]
  40fb20:	movzx  eax,BYTE PTR [rdx]
  40fb23:	test   WORD PTR [rbx+rax*2],0xc00
  40fb29:	je     0x40fb35
  40fb2b:	add    rdx,0x1
  40fb2f:	sub    r8,0x1
  40fb33:	jne    0x40fb20
  40fb35:	mov    rax,r11
  40fb38:	mov    BYTE PTR [r11-0x1],0x20
  40fb3d:	xor    esi,esi
  40fb3f:	add    r11,0x1
  40fb43:	test   r8,r8
  40fb46:	jne    0x40fb00
  40fb48:	sub    rax,rcx
  40fb4b:	mov    BYTE PTR [r9],sil
  40fb4e:	pop    rbx
  40fb4f:	pop    rsi
  40fb50:	pop    rdi
  40fb51:	pop    rbp
  40fb52:	ret    
  40fb53:	cmp    r10b,0x22
  40fb57:	je     0x40fb70
  40fb59:	cmp    r10b,0x27
  40fb5d:	je     0x40fb70
  40fb5f:	mov    rax,r11
  40fb62:	add    rdx,0x1
  40fb66:	mov    BYTE PTR [r11-0x1],r10b
  40fb6a:	sub    r8,0x1
  40fb6e:	jmp    0x40fb3f
  40fb70:	test   al,al
  40fb72:	jne    0x40fb80
  40fb74:	cmp    sil,r10b
  40fb77:	cmove  esi,ebp
  40fb7a:	jmp    0x40fb5f
  40fb7c:	nop    DWORD PTR [rax+0x0]
  40fb80:	mov    esi,r10d
  40fb83:	jmp    0x40fb5f
  40fb85:	xor    eax,eax
  40fb87:	jmp    0x40fb4b
  40fb89:	nop    DWORD PTR [rax+0x0]
  40fb90:	push   rdi
  40fb91:	push   rsi
  40fb92:	push   rbx
  40fb93:	sub    rsp,0x20
  40fb97:	mov    rax,QWORD PTR [rcx+0x4e0]
  40fb9e:	mov    r8,QWORD PTR [rcx+0x4d8]
  40fba5:	add    rdx,0x3
  40fba9:	sub    r8,rax
  40fbac:	cmp    rdx,r8
  40fbaf:	jbe    0x40fbee
  40fbb1:	mov    rbx,rcx
  40fbb4:	mov    rcx,QWORD PTR [rcx+0x4d0]
  40fbbb:	sub    rax,rcx
  40fbbe:	add    rdx,rax
  40fbc1:	mov    rsi,rax
  40fbc4:	lea    rdi,[rdx+rdx*2]
  40fbc8:	shr    rdi,1
  40fbcb:	mov    rdx,rdi
  40fbce:	call   0x43bb70
  40fbd3:	add    rdi,rax
  40fbd6:	mov    QWORD PTR [rbx+0x4d0],rax
  40fbdd:	add    rax,rsi
  40fbe0:	mov    QWORD PTR [rbx+0x4d8],rdi
  40fbe7:	mov    QWORD PTR [rbx+0x4e0],rax
  40fbee:	add    rsp,0x20
  40fbf2:	pop    rbx
  40fbf3:	pop    rsi
  40fbf4:	pop    rdi
  40fbf5:	ret    
  40fbf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc00:	push   rdi
  40fc01:	push   rsi
  40fc02:	push   rbx
  40fc03:	sub    rsp,0x30
  40fc07:	test   BYTE PTR [rdx+0x19],0x1
  40fc0b:	mov    rsi,rcx
  40fc0e:	mov    rbx,rdx
  40fc11:	jne    0x40fc40
  40fc13:	mov    rdx,QWORD PTR [rdx+0x20]
  40fc17:	or     BYTE PTR [rdx+0x1c],0x18
  40fc1b:	mov    r9d,DWORD PTR [rdx+0x14]
  40fc1f:	mov    r10,QWORD PTR [rdx+0x8]
  40fc23:	mov    r8,r10
  40fc26:	mov    rdx,rbx
  40fc29:	mov    rcx,rsi
  40fc2c:	add    rsp,0x30
  40fc30:	pop    rbx
  40fc31:	pop    rsi
  40fc32:	pop    rdi
  40fc33:	jmp    0x40cb00
  40fc38:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc40:	call   0x40c440
  40fc45:	mov    rcx,rax
  40fc48:	mov    rdi,rax
  40fc4b:	call   0x4493c0
  40fc50:	lea    rdx,[rax+0x1]
  40fc54:	mov    rcx,rsi
  40fc57:	mov    QWORD PTR [rsp+0x28],rax
  40fc5c:	call   0x41d0e0
  40fc61:	mov    r9,QWORD PTR [rsp+0x28]
  40fc66:	mov    rdx,rdi
  40fc69:	mov    rcx,rax
  40fc6c:	mov    r8,r9
  40fc6f:	call   0x449450
  40fc74:	mov    r9,QWORD PTR [rsp+0x28]
  40fc79:	mov    r10,rax
  40fc7c:	mov    BYTE PTR [rax+r9*1],0xa
  40fc81:	jmp    0x40fc23
  40fc83:	nop    DWORD PTR [rax]
  40fc86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc90:	push   r12
  40fc92:	push   rbp
  40fc93:	push   rdi
  40fc94:	push   rsi
  40fc95:	push   rbx
  40fc96:	sub    rsp,0x20
  40fc9a:	mov    rbp,QWORD PTR [rcx+0x4e0]
  40fca1:	sub    rbp,QWORD PTR [rcx+0x4d0]
  40fca8:	cmp    WORD PTR [rdx+0x18],0x0
  40fcad:	mov    rsi,rcx
  40fcb0:	mov    rbx,rdx
  40fcb3:	mov    r12d,r8d
  40fcb6:	je     0x40fd50
  40fcbc:	mov    rcx,QWORD PTR [rcx+0x38]
  40fcc0:	mov    eax,DWORD PTR [rdx+0x14]
  40fcc3:	lea    rdi,[rbp+0xd]
  40fcc7:	and    rdi,0xfffffffffffffff8
  40fccb:	mov    rdx,QWORD PTR [rcx+0x10]
  40fccf:	mov    rcx,QWORD PTR [rcx+0x18]
  40fcd3:	lea    r8,[rdi+rax*1]
  40fcd7:	sub    rcx,rdx
  40fcda:	cmp    r8,rcx
  40fcdd:	ja     0x40fd30
  40fcdf:	or     BYTE PTR [rbx+0x1c],0x10
  40fce3:	add    rax,rdx
  40fce6:	mov    QWORD PTR [rbx+0x8],rdx
  40fcea:	mov    rdx,QWORD PTR [rsi+0x4d0]
  40fcf1:	lea    rcx,[rax+0x6]
  40fcf5:	mov    DWORD PTR [rax],ebp
  40fcf7:	mov    WORD PTR [rax+0x4],r12w
  40fcfc:	mov    r8,rbp
  40fcff:	call   0x449450
  40fd04:	add    edi,DWORD PTR [rbx+0x14]
  40fd07:	mov    rax,QWORD PTR [rsi+0x4d0]
  40fd0e:	test   r12d,r12d
  40fd11:	mov    QWORD PTR [rsi+0x4e0],rax
  40fd18:	mov    DWORD PTR [rbx+0x14],edi
  40fd1b:	jne    0x40fd25
  40fd1d:	mov    rax,QWORD PTR [rsi+0x38]
  40fd21:	add    QWORD PTR [rax+0x10],rdi
  40fd25:	add    rsp,0x20
  40fd29:	pop    rbx
  40fd2a:	pop    rsi
  40fd2b:	pop    rdi
  40fd2c:	pop    rbp
  40fd2d:	pop    r12
  40fd2f:	ret    
  40fd30:	lea    rdx,[rsi+0x38]
  40fd34:	mov    rcx,rsi
  40fd37:	call   0x41d060
  40fd3c:	mov    rax,QWORD PTR [rsi+0x38]
  40fd40:	mov    rdx,QWORD PTR [rax+0x10]
  40fd44:	mov    eax,DWORD PTR [rbx+0x14]
  40fd47:	jmp    0x40fcdf
  40fd49:	nop    DWORD PTR [rax+0x0]
  40fd50:	lea    rdx,[rbp+0x1]
  40fd54:	call   0x41d0e0
  40fd59:	mov    rdx,QWORD PTR [rsi+0x4d0]
  40fd60:	mov    r8,rbp
  40fd63:	mov    rcx,rax
  40fd66:	call   0x449450
  40fd6b:	mov    BYTE PTR [rax+rbp*1],0xa
  40fd6f:	or     BYTE PTR [rbx+0x1c],0x10
  40fd73:	mov    QWORD PTR [rbx+0x8],rax
  40fd77:	mov    DWORD PTR [rbx+0x14],ebp
  40fd7a:	add    rsp,0x20
  40fd7e:	pop    rbx
  40fd7f:	pop    rsi
  40fd80:	pop    rdi
  40fd81:	pop    rbp
  40fd82:	pop    r12
  40fd84:	ret    
  40fd85:	nop
  40fd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd90:	push   rsi
  40fd91:	push   rbx
  40fd92:	sub    rsp,0x28
  40fd96:	movzx  eax,BYTE PTR [rdx]
  40fd99:	mov    rbx,QWORD PTR [rcx+0x4e0]
  40fda0:	mov    r9,QWORD PTR [rip+0x4b089]        # 0x45ae30
  40fda7:	mov    rsi,rcx
  40fdaa:	nop    WORD PTR [rax+rax*1+0x0]
  40fdb0:	add    rbx,0x1
  40fdb4:	add    rdx,0x1
  40fdb8:	mov    BYTE PTR [rbx-0x1],al
  40fdbb:	movzx  r8d,BYTE PTR [rdx]
  40fdbf:	test   WORD PTR [r9+r8*2],0x204
  40fdc6:	mov    rax,r8
  40fdc9:	jne    0x40fdb0
  40fdcb:	mov    rax,QWORD PTR [rsi+0x88]
  40fdd2:	mov    r8,rbx
  40fdd5:	mov    r9d,0x1
  40fddb:	mov    QWORD PTR [rax+0x10],rdx
  40fddf:	mov    rdx,QWORD PTR [rsi+0x4e0]
  40fde6:	mov    rcx,QWORD PTR [rsi+0x3f8]
  40fded:	sub    r8,rdx
  40fdf0:	call   0x41ff20
  40fdf5:	mov    QWORD PTR [rsi+0x4e0],rbx
  40fdfc:	add    rsp,0x28
  40fe00:	pop    rbx
  40fe01:	pop    rsi
  40fe02:	ret    
  40fe03:	nop    DWORD PTR [rax]
  40fe06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fe10:	push   r12
  40fe12:	push   rbp
  40fe13:	push   rdi
  40fe14:	push   rsi
  40fe15:	push   rbx
  40fe16:	sub    rsp,0x40
  40fe1a:	mov    rax,QWORD PTR [rcx+0x28]
  40fe1e:	mov    rsi,QWORD PTR [rcx]
  40fe21:	mov    edi,r8d
  40fe24:	mov    rbx,rcx
  40fe27:	mov    rbp,rdx
  40fe2a:	mov    r8d,DWORD PTR [rax+0x3c]
  40fe2e:	mov    rax,QWORD PTR [rcx+0x88]
  40fe35:	mov    QWORD PTR [rsi],rdx
  40fe38:	cmp    QWORD PTR [rax+0x8],0x0
  40fe3d:	je     0x40ff40
  40fe43:	mov    rdx,QWORD PTR [rcx]
  40fe46:	mov    rcx,QWORD PTR [rdx]
  40fe49:	movzx  r9d,BYTE PTR [rcx+0x1]
  40fe4e:	lea    rax,[rcx+0x1]
  40fe52:	cmp    r9b,0x2f
  40fe56:	jne    0x40fe64
  40fe58:	jmp    0x40ff30
  40fe5d:	nop    DWORD PTR [rax]
  40fe60:	movzx  r9d,BYTE PTR [rax]
  40fe64:	add    rax,0x1
  40fe68:	cmp    r9b,0x2f
  40fe6c:	jne    0x40fe60
  40fe6e:	cmp    BYTE PTR [rax-0x2],0x2a
  40fe72:	jne    0x40fe60
  40fe74:	mov    QWORD PTR [rdx],rax
  40fe77:	xor    r12d,r12d
  40fe7a:	cmp    BYTE PTR [rbx+0x10],0x0
  40fe7e:	je     0x40fef0
  40fe80:	test   edi,edi
  40fe82:	je     0x40ff10
  40fe88:	cmp    BYTE PTR [rbx+0x41c],0x0
  40fe8f:	jne    0x40fef9
  40fe91:	mov    rdi,QWORD PTR [rsi]
  40fe94:	mov    rcx,QWORD PTR [rbx+0x4e0]
  40fe9b:	mov    rdx,rbp
  40fe9e:	sub    rdi,rbp
  40fea1:	mov    r8,rdi
  40fea4:	call   0x449450
  40fea9:	add    rdi,QWORD PTR [rbx+0x4e0]
  40feb0:	test   r12b,r12b
  40feb3:	je     0x40ff80
  40feb9:	lea    rax,[rdi+0x1]
  40febd:	mov    QWORD PTR [rbx+0x4e0],rax
  40fec4:	mov    BYTE PTR [rdi],0x2a
  40fec7:	mov    rax,QWORD PTR [rbx+0x4e0]
  40fece:	lea    rdx,[rax+0x1]
  40fed2:	mov    QWORD PTR [rbx+0x4e0],rdx
  40fed9:	mov    BYTE PTR [rax],0x2f
  40fedc:	mov    rax,QWORD PTR [rsi]
  40fedf:	add    rsp,0x40
  40fee3:	pop    rbx
  40fee4:	pop    rsi
  40fee5:	pop    rdi
  40fee6:	pop    rbp
  40fee7:	pop    r12
  40fee9:	ret    
  40feea:	nop    WORD PTR [rax+rax*1+0x0]
  40fef0:	cmp    BYTE PTR [rbx+0x41b],0x0
  40fef7:	je     0x40fe91
  40fef9:	sub    QWORD PTR [rbx+0x4e0],0x1
  40ff01:	mov    rax,QWORD PTR [rsi]
  40ff04:	add    rsp,0x40
  40ff08:	pop    rbx
  40ff09:	pop    rsi
  40ff0a:	pop    rdi
  40ff0b:	pop    rbp
  40ff0c:	pop    r12
  40ff0e:	ret    
  40ff0f:	nop
  40ff10:	mov    rax,QWORD PTR [rbx+0x4e0]
  40ff17:	mov    BYTE PTR [rax-0x1],0x20
  40ff1b:	mov    rax,QWORD PTR [rsi]
  40ff1e:	add    rsp,0x40
  40ff22:	pop    rbx
  40ff23:	pop    rsi
  40ff24:	pop    rdi
  40ff25:	pop    rbp
  40ff26:	pop    r12
  40ff28:	ret    
  40ff29:	nop    DWORD PTR [rax+0x0]
  40ff30:	lea    rax,[rcx+0x2]
  40ff34:	movzx  r9d,BYTE PTR [rcx+0x2]
  40ff39:	jmp    0x40fe64
  40ff3e:	xchg   ax,ax
  40ff40:	mov    DWORD PTR [rsp+0x3c],r8d
  40ff45:	call   0x41c140
  40ff4a:	test   al,al
  40ff4c:	mov    r12d,eax
  40ff4f:	je     0x40fe7a
  40ff55:	lea    rax,[rip+0x3ea64]        # 0x44e9c0
  40ff5c:	mov    r8d,DWORD PTR [rsp+0x3c]
  40ff61:	xor    r9d,r9d
  40ff64:	mov    edx,0x3
  40ff69:	mov    rcx,rbx
  40ff6c:	mov    QWORD PTR [rsp+0x20],rax
  40ff71:	call   0x414c40
  40ff76:	jmp    0x40fe7a
  40ff7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff80:	mov    rax,QWORD PTR [rsi]
  40ff83:	mov    QWORD PTR [rbx+0x4e0],rdi
  40ff8a:	add    rsp,0x40
  40ff8e:	pop    rbx
  40ff8f:	pop    rsi
  40ff90:	pop    rdi
  40ff91:	pop    rbp
  40ff92:	pop    r12
  40ff94:	ret    
  40ff95:	nop
  40ff96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ffa0:	push   rbp
  40ffa1:	push   rdi
  40ffa2:	push   rsi
  40ffa3:	push   rbx
  40ffa4:	sub    rsp,0x28
  40ffa8:	mov    rsi,QWORD PTR [rip+0x4ae81]        # 0x45ae30
  40ffaf:	mov    r11,QWORD PTR [rcx+0x4e0]
  40ffb6:	mov    rbp,rcx
  40ffb9:	mov    rax,rdx
  40ffbc:	mov    edi,r8d
  40ffbf:	jmp    0x40ffc7
  40ffc1:	mov    r11,r10
  40ffc4:	mov    rax,rdx
  40ffc7:	lea    rdx,[rax+0x1]
  40ffcb:	movzx  ebx,BYTE PTR [rdx-0x1]
  40ffcf:	lea    r10,[r11+0x1]
  40ffd3:	test   BYTE PTR [rsi+rbx*2+0x1],0x8
  40ffd8:	mov    BYTE PTR [r10-0x1],bl
  40ffdc:	jne    0x40ffc1
  40ffde:	cmp    bl,0x2f
  40ffe1:	jne    0x410008
  40ffe3:	cmp    BYTE PTR [rax+0x1],0x2a
  40ffe7:	jne    0x410008
  40ffe9:	test   edi,edi
  40ffeb:	je     0x410008
  40ffed:	mov    QWORD PTR [rbp+0x4e0],r10
  40fff4:	xor    r8d,r8d
  40fff7:	mov    rcx,rbp
  40fffa:	call   0x40fe10
  40ffff:	mov    r11,QWORD PTR [rbp+0x4e0]
  410006:	jmp    0x40ffc7
  410008:	mov    QWORD PTR [rbp+0x4e0],r11
  41000f:	add    rsp,0x28
  410013:	pop    rbx
  410014:	pop    rsi
  410015:	pop    rdi
  410016:	pop    rbp
  410017:	ret    
  410018:	nop    DWORD PTR [rax+rax*1+0x0]
  410020:	sub    rsp,0x28
  410024:	xor    eax,eax
  410026:	test   BYTE PTR [rdx+0x19],0x8
  41002a:	je     0x410075
  41002c:	mov    rax,QWORD PTR [rdx+0x20]
  410030:	test   BYTE PTR [rax+0x1c],0x1
  410034:	je     0x41005c
  410036:	mov    rax,QWORD PTR [rcx+0x88]
  41003d:	mov    r8d,0x1
  410043:	mov    rax,QWORD PTR [rax+0x8]
  410047:	test   rax,rax
  41004a:	je     0x410075
  41004c:	add    r8,0x1
  410050:	cmp    rdx,QWORD PTR [rax+0x28]
  410054:	jne    0x410043
  410056:	cmp    r8,0x14
  41005a:	jbe    0x410043
  41005c:	mov    r9,QWORD PTR [rdx]
  41005f:	lea    r8,[rip+0x3e972]        # 0x44e9d8
  410066:	mov    edx,0x3
  41006b:	call   0x414b60
  410070:	mov    eax,0x1
  410075:	add    rsp,0x28
  410079:	ret    
  41007a:	nop    WORD PTR [rax+rax*1+0x0]
  410080:	mov    rax,QWORD PTR [rcx]
  410083:	add    r8,rdx
  410086:	mov    r9,QWORD PTR [rax]
  410089:	mov    QWORD PTR [rcx+0x8],rax
  41008d:	mov    QWORD PTR [rcx+0x4f0],r9
  410094:	mov    r9,QWORD PTR [rax+0x20]
  410098:	mov    QWORD PTR [rcx+0x4f8],r9
  41009f:	mov    r9,QWORD PTR [rax+0x10]
  4100a3:	mov    QWORD PTR [rcx+0x500],r9
  4100aa:	mov    BYTE PTR [rax+0x68],0x0
  4100ae:	mov    QWORD PTR [rax],rdx
  4100b1:	mov    QWORD PTR [rax+0x8],rdx
  4100b5:	mov    QWORD PTR [rax+0x20],r8
  4100b9:	ret    
  4100ba:	nop    WORD PTR [rax+rax*1+0x0]
  4100c0:	mov    rax,QWORD PTR [rcx+0x8]
  4100c4:	mov    rdx,QWORD PTR [rcx+0x4f0]
  4100cb:	mov    QWORD PTR [rax],rdx
  4100ce:	mov    rdx,QWORD PTR [rcx+0x4f8]
  4100d5:	mov    QWORD PTR [rax+0x20],rdx
  4100d9:	mov    rdx,QWORD PTR [rcx+0x500]
  4100e0:	mov    BYTE PTR [rax+0x68],0x1
  4100e4:	mov    QWORD PTR [rax+0x8],rdx
  4100e8:	mov    QWORD PTR [rcx+0x8],0x0
  4100f0:	ret    
  4100f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4100f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410100:	push   r15
  410102:	push   r14
  410104:	push   r13
  410106:	push   r12
  410108:	push   rbp
  410109:	push   rdi
  41010a:	push   rsi
  41010b:	push   rbx
  41010c:	sub    rsp,0x88
  410113:	mov    rax,QWORD PTR [rcx+0x88]
  41011a:	cmp    BYTE PTR [rcx+0x13],0x0
  41011e:	lea    r12,[rip+0x3e913]        # 0x44ea38
  410125:	mov    QWORD PTR [rsp+0xd8],rdx
  41012d:	mov    rdx,QWORD PTR [rcx]
  410130:	mov    rsi,rcx
  410133:	mov    DWORD PTR [rsp+0x38],0x0
  41013b:	mov    DWORD PTR [rsp+0x7c],0x0
  410143:	mov    QWORD PTR [rsp+0x68],0x0
  41014c:	mov    QWORD PTR [rsp+0x58],0x0
  410155:	mov    rdx,QWORD PTR [rdx]
  410158:	setne  r10b
  41015c:	mov    QWORD PTR [rsp+0x60],0x0
  410165:	mov    QWORD PTR [rsp+0x70],0x0
  41016e:	xor    r14d,r14d
  410171:	xor    r15d,r15d
  410174:	mov    DWORD PTR [rsp+0x4c],0x0
  41017c:	mov    QWORD PTR [rax+0x10],rdx
  410180:	mov    rdx,QWORD PTR [rcx]
  410183:	mov    rax,QWORD PTR [rcx+0x88]
  41018a:	mov    rdx,QWORD PTR [rdx+0x20]
  41018e:	mov    QWORD PTR [rax+0x18],rdx
  410192:	mov    rax,QWORD PTR [rcx+0x4d0]
  410199:	mov    r13,QWORD PTR [rcx+0x88]
  4101a0:	mov    QWORD PTR [rcx+0x4e0],rax
  4101a7:	mov    rax,QWORD PTR [rcx+0x28]
  4101ab:	mov    eax,DWORD PTR [rax+0x3c]
  4101ae:	mov    DWORD PTR [rcx+0x4e8],eax
  4101b4:	mov    rax,QWORD PTR [rcx]
  4101b7:	mov    rax,QWORD PTR [rax]
  4101ba:	mov    QWORD PTR [rsp+0x50],rax
  4101bf:	mov    rax,QWORD PTR [r13+0x10]
  4101c3:	mov    rdx,QWORD PTR [r13+0x18]
  4101c7:	mov    rcx,rsi
  4101ca:	mov    BYTE PTR [rsp+0x7b],r10b
  4101cf:	sub    rdx,rax
  4101d2:	mov    QWORD PTR [rsp+0x40],rax
  4101d7:	call   0x40fb90
  4101dc:	movzx  r10d,BYTE PTR [rsp+0x7b]
  4101e2:	mov    rbx,QWORD PTR [rsi+0x4e0]
  4101e9:	mov    rax,QWORD PTR [rsp+0x40]
  4101ee:	xchg   ax,ax
  4101f0:	cmp    QWORD PTR [r13+0x8],0x0
  4101f5:	je     0x410220
  4101f7:	movzx  edx,BYTE PTR [rax]
  4101fa:	lea    rbp,[rax+0x1]
  4101fe:	lea    rdi,[rbx+0x1]
  410202:	cmp    dl,0x7a
  410205:	mov    BYTE PTR [rbx],dl
  410207:	ja     0x410283
  410209:	movsxd rcx,DWORD PTR [r12+rdx*4]
  41020d:	add    rcx,r12
  410210:	jmp    rcx
  410212:	cmp    QWORD PTR [r13+0x8],0x0
  410217:	mov    rbx,rdi
  41021a:	mov    rax,rbp
  41021d:	jne    0x4101f7
  41021f:	nop
  410220:	mov    rcx,QWORD PTR [rsi]
  410223:	mov    edx,DWORD PTR [rcx+0x38]
  410226:	shl    rdx,0x4
  41022a:	add    rdx,QWORD PTR [rcx+0x30]
  41022e:	cmp    rax,QWORD PTR [rdx]
  410231:	jb     0x4101f7
  410233:	mov    QWORD PTR [rcx],rax
  410236:	xor    edx,edx
  410238:	mov    rcx,rsi
  41023b:	mov    BYTE PTR [rsp+0x7b],r10b
  410240:	mov    QWORD PTR [rsp+0x40],rax
  410245:	call   0x41bef0
  41024a:	movzx  r10d,BYTE PTR [rsp+0x7b]
  410250:	mov    rax,QWORD PTR [rsp+0x40]
  410255:	jmp    0x4101f7
  410257:	nop    WORD PTR [rax+rax*1+0x0]
  410260:	movzx  edx,BYTE PTR [rax+0x1]
  410264:	cmp    dl,0x22
  410267:	sete   r8b
  41026b:	cmp    dl,0x5c
  41026e:	sete   cl
  410271:	or     r8b,cl
  410274:	jne    0x410625
  41027a:	cmp    dl,0x27
  41027d:	je     0x410625
  410283:	cmp    BYTE PTR [rsi+0x10],0x0
  410287:	jne    0x410290
  410289:	mov    BYTE PTR [rsi+0x1a0],0x0
  410290:	test   r14d,r14d
  410293:	je     0x4102bb
  410295:	mov    eax,r14d
  410298:	and    eax,0xfffffffd
  41029b:	cmp    eax,0x1
  41029e:	je     0x410440
  4102a4:	lea    eax,[r14-0x5]
  4102a8:	cmp    eax,0x1
  4102ab:	jbe    0x410440
  4102b1:	cmp    r14d,0x8
  4102b5:	je     0x410440
  4102bb:	mov    rbx,rdi
  4102be:	mov    rax,rbp
  4102c1:	xor    r10d,r10d
  4102c4:	jmp    0x4101f0
  4102c9:	nop    DWORD PTR [rax+0x0]
  4102d0:	cmp    BYTE PTR [rsi+0x12],0x0
  4102d4:	jne    0x410283
  4102d6:	cmp    QWORD PTR [rsp+0xd8],0x0
  4102df:	setne  r9b
  4102e3:	test   r15d,r15d
  4102e6:	je     0x4102ed
  4102e8:	test   r9b,r9b
  4102eb:	je     0x410283
  4102ed:	mov    QWORD PTR [rsi+0x4e0],rbx
  4102f4:	mov    rdx,rax
  4102f7:	mov    rcx,rsi
  4102fa:	mov    BYTE PTR [rsp+0x7b],r10b
  4102ff:	mov    BYTE PTR [rsp+0x40],r9b
  410304:	call   0x40fd90
  410309:	cmp    r14d,0x1
  41030d:	mov    r8,rax
  410310:	mov    rdi,QWORD PTR [rsi+0x4e0]
  410317:	mov    rbp,QWORD PTR [r13+0x10]
  41031b:	movzx  r9d,BYTE PTR [rsp+0x40]
  410321:	movzx  r10d,BYTE PTR [rsp+0x7b]
  410327:	ja     0x410338
  410329:	movzx  eax,BYTE PTR [rax+0x18]
  41032d:	and    eax,0x3f
  410330:	cmp    al,0x1
  410332:	je     0x41084f
  410338:	test   r9b,r9b
  41033b:	je     0x410348
  41033d:	test   BYTE PTR [r8+0x19],0x10
  410342:	jne    0x4107fc
  410348:	cmp    r14d,0x5
  41034c:	je     0x410824
  410352:	cmp    BYTE PTR [rsi+0x14],0x0
  410356:	je     0x410283
  41035c:	cmp    QWORD PTR [rsi+0x498],r8
  410363:	je     0x410a4f
  410369:	cmp    QWORD PTR [rsi+0x4b8],r8
  410370:	je     0x41037f
  410372:	cmp    QWORD PTR [rsi+0x4c0],r8
  410379:	jne    0x410283
  41037f:	mov    rbx,rdi
  410382:	mov    rax,rbp
  410385:	mov    r14d,0x8
  41038b:	jmp    0x4101f0
  410390:	cmp    edx,r15d
  410393:	mov    eax,0x0
  410398:	cmove  r15d,eax
  41039c:	jmp    0x410283
  4103a1:	test   r10b,r10b
  4103a4:	mov    eax,0x3e
  4103a9:	cmovne r15d,eax
  4103ad:	jmp    0x410283
  4103b2:	test   r15d,r15d
  4103b5:	jne    0x410283
  4103bb:	cmp    BYTE PTR [rax+0x1],0x2a
  4103bf:	jne    0x410283
  4103c5:	xor    r8d,r8d
  4103c8:	cmp    QWORD PTR [rsp+0xd8],0x0
  4103d1:	mov    QWORD PTR [rsi+0x4e0],rdi
  4103d8:	mov    rdx,rbp
  4103db:	mov    rcx,rsi
  4103de:	mov    BYTE PTR [rsp+0x40],r10b
  4103e3:	setne  r8b
  4103e7:	call   0x40fe10
  4103ec:	mov    rbx,QWORD PTR [rsi+0x4e0]
  4103f3:	movzx  r10d,BYTE PTR [rsp+0x40]
  4103f9:	jmp    0x4101f0
  4103fe:	xchg   ax,ax
  410400:	cmp    r14d,0x2
  410404:	jne    0x410283
  41040a:	test   r15d,r15d
  41040d:	jne    0x410283
  410413:	cmp    DWORD PTR [rsp+0x4c],0x1
  410418:	je     0x410745
  41041e:	xor    r15d,r15d
  410421:	cmp    BYTE PTR [rsi+0x10],0x0
  410425:	je     0x410289
  41042b:	mov    eax,r14d
  41042e:	and    eax,0xfffffffd
  410431:	cmp    eax,0x1
  410434:	jne    0x4102a4
  41043a:	nop    WORD PTR [rax+rax*1+0x0]
  410440:	mov    rbx,rdi
  410443:	mov    rax,rbp
  410446:	xor    r10d,r10d
  410449:	xor    r14d,r14d
  41044c:	jmp    0x4101f0
  410451:	test   r15d,r15d
  410454:	jne    0x410283
  41045a:	sub    DWORD PTR [rsp+0x4c],0x1
  41045f:	jne    0x410670
  410465:	cmp    r14d,0x2
  410469:	jne    0x410670
  41046f:	mov    r11,QWORD PTR [rsp+0x58]
  410474:	add    DWORD PTR [rsp+0x38],0x1
  410479:	mov    ebx,DWORD PTR [rsp+0x38]
  41047d:	mov    rcx,QWORD PTR [rsi+0x4d0]
  410484:	mov    rdx,QWORD PTR [r11+0x20]
  410488:	or     BYTE PTR [rdx+0x1c],0x8
  41048c:	mov    rax,QWORD PTR [r11+0x20]
  410490:	movzx  eax,WORD PTR [rax+0x18]
  410494:	cmp    ebx,eax
  410496:	ja     0x4104a9
  410498:	mov    eax,ebx
  41049a:	mov    rbx,QWORD PTR [rsp+0x60]
  41049f:	mov    r8,rdi
  4104a2:	sub    r8,rcx
  4104a5:	mov    QWORD PTR [rbx+rax*8],r8
  4104a9:	cmp    DWORD PTR [rsp+0x38],0x1
  4104ae:	je     0x410799
  4104b4:	mov    r9d,DWORD PTR [rsp+0x38]
  4104b9:	mov    r8,QWORD PTR [rsp+0x58]
  4104be:	mov    rcx,rsi
  4104c1:	mov    BYTE PTR [rsp+0x40],r10b
  4104c6:	call   0x40c8c0
  4104cb:	test   al,al
  4104cd:	movzx  r10d,BYTE PTR [rsp+0x40]
  4104d3:	jne    0x4108d0
  4104d9:	mov    DWORD PTR [rsp+0x4c],0x0
  4104e1:	cmp    BYTE PTR [rsi+0x10],0x0
  4104e5:	je     0x410691
  4104eb:	mov    rbx,rdi
  4104ee:	mov    rax,rbp
  4104f1:	xor    r10d,r10d
  4104f4:	xor    r14d,r14d
  4104f7:	xor    r15d,r15d
  4104fa:	jmp    0x4101f0
  4104ff:	nop
  410500:	test   r15d,r15d
  410503:	jne    0x410283
  410509:	add    DWORD PTR [rsp+0x4c],0x1
  41050e:	cmp    r14d,0x1
  410512:	je     0x4107c0
  410518:	cmp    r14d,0x6
  41051c:	je     0x410783
  410522:	cmp    r14d,0x3
  410526:	je     0x41078e
  41052c:	cmp    r14d,0x8
  410530:	jne    0x410283
  410536:	mov    r14d,0x9
  41053c:	jmp    0x41041e
  410541:	cmp    rax,QWORD PTR [rsp+0x50]
  410546:	je     0x4106a0
  41054c:	cmp    BYTE PTR [rsi+0x14],0x0
  410550:	je     0x410283
  410556:	mov    rbx,rdi
  410559:	mov    rax,rbp
  41055c:	mov    r14d,0x5
  410562:	jmp    0x4101f0
  410567:	nop    WORD PTR [rax+rax*1+0x0]
  410570:	cmp    edx,r15d
  410573:	je     0x410635
  410579:	test   r15d,r15d
  41057c:	cmove  r15d,edx
  410580:	jmp    0x410283
  410585:	cmp    QWORD PTR [r13+0x8],0x0
  41058a:	mov    BYTE PTR [rsp+0x40],r10b
  41058f:	mov    QWORD PTR [rsi+0x4e0],rbx
  410596:	jne    0x410835
  41059c:	mov    r9,QWORD PTR [rsi+0x28]
  4105a0:	mov    rax,QWORD PTR [rsi]
  4105a3:	mov    QWORD PTR [rax],rbp
  4105a6:	mov    BYTE PTR [rax+0x68],0x1
  4105aa:	mov    eax,DWORD PTR [r9+0xc]
  4105ae:	sub    eax,0x1
  4105b1:	lea    rdx,[rax+rax*4]
  4105b5:	mov    rax,QWORD PTR [r9]
  4105b8:	lea    rdx,[rax+rdx*8]
  4105bc:	mov    eax,DWORD PTR [r9+0x3c]
  4105c0:	movzx  ecx,BYTE PTR [rdx+0x1c]
  4105c4:	sub    eax,DWORD PTR [rdx]
  4105c6:	mov    r8d,DWORD PTR [rdx+0x10]
  4105ca:	shr    eax,cl
  4105cc:	mov    rcx,r9
  4105cf:	lea    edx,[r8+rax*1+0x1]
  4105d4:	xor    r8d,r8d
  4105d7:	call   0x40ad30
  4105dc:	lea    eax,[r14-0x1]
  4105e0:	cmp    eax,0x1
  4105e3:	ja     0x4105eb
  4105e5:	cmp    BYTE PTR [rsi+0x10],0x0
  4105e9:	je     0x410640
  4105eb:	mov    ebx,0x1
  4105f0:	mov    rax,QWORD PTR [rsp+0x70]
  4105f5:	test   rax,rax
  4105f8:	je     0x410605
  4105fa:	mov    rdx,rax
  4105fd:	mov    rcx,rsi
  410600:	call   0x41cea0
  410605:	cmp    r14d,0x2
  410609:	je     0x410aa9
  41060f:	mov    eax,ebx
  410611:	add    rsp,0x88
  410618:	pop    rbx
  410619:	pop    rsi
  41061a:	pop    rdi
  41061b:	pop    rbp
  41061c:	pop    r12
  41061e:	pop    r13
  410620:	pop    r14
  410622:	pop    r15
  410624:	ret    
  410625:	lea    rdi,[rbx+0x2]
  410629:	lea    rbp,[rax+0x2]
  41062d:	mov    BYTE PTR [rbx+0x1],dl
  410630:	jmp    0x410283
  410635:	xor    r15d,r15d
  410638:	jmp    0x410283
  41063d:	nop    DWORD PTR [rax]
  410640:	mov    rcx,rsi
  410643:	call   0x41c530
  410648:	test   al,al
  41064a:	movzx  r10d,BYTE PTR [rsp+0x40]
  410650:	je     0x4105eb
  410652:	cmp    r14d,0x2
  410656:	jne    0x41065b
  410658:	mov    BYTE PTR [rbx],0x20
  41065b:	mov    rax,QWORD PTR [rsi]
  41065e:	mov    rbx,rdi
  410661:	mov    rax,QWORD PTR [rax]
  410664:	jmp    0x4101f0
  410669:	nop    DWORD PTR [rax+0x0]
  410670:	lea    eax,[r14-0x7]
  410674:	and    eax,0xfffffffd
  410677:	je     0x4104e1
  41067d:	cmp    r14d,0x4
  410681:	jne    0x410283
  410687:	cmp    BYTE PTR [rsi+0x10],0x0
  41068b:	jne    0x4104eb
  410691:	xor    r14d,r14d
  410694:	xor    r15d,r15d
  410697:	jmp    0x410289
  41069c:	nop    DWORD PTR [rax+0x0]
  4106a0:	mov    rax,QWORD PTR [rsi+0x88]
  4106a7:	cmp    QWORD PTR [rax+0x8],0x0
  4106ac:	jne    0x41054c
  4106b2:	cmp    BYTE PTR [rsi+0x10],0x0
  4106b6:	jne    0x41054c
  4106bc:	mov    QWORD PTR [rsi+0x4e0],rdi
  4106c3:	mov    rdx,rbp
  4106c6:	mov    r8d,0x1
  4106cc:	mov    rcx,rsi
  4106cf:	mov    BYTE PTR [rsp+0x40],r10b
  4106d4:	call   0x40ffa0
  4106d9:	mov    rbp,rax
  4106dc:	movzx  eax,BYTE PTR [rax]
  4106df:	mov    rdi,QWORD PTR [rsi+0x4e0]
  4106e6:	movzx  r10d,BYTE PTR [rsp+0x40]
  4106ec:	cmp    al,0xa
  4106ee:	je     0x410bdd
  4106f4:	mov    rbx,QWORD PTR [rip+0x4a735]        # 0x45ae30
  4106fb:	movzx  edx,al
  4106fe:	movzx  edx,WORD PTR [rbx+rdx*2]
  410702:	test   dl,0x4
  410705:	je     0x410710
  410707:	cmp    DWORD PTR [rsi+0x414],0xd
  41070e:	jne    0x41072e
  410710:	and    dh,0x2
  410713:	jne    0x410b83
  410719:	cmp    al,0x24
  41071b:	je     0x410b76
  410721:	cmp    DWORD PTR [rsi+0x414],0xd
  410728:	je     0x41054c
  41072e:	mov    rax,QWORD PTR [rsi]
  410731:	xor    edx,edx
  410733:	mov    rcx,rsi
  410736:	xor    ebx,ebx
  410738:	mov    QWORD PTR [rax],rbp
  41073b:	call   0x4132a0
  410740:	jmp    0x4105f0
  410745:	mov    rax,QWORD PTR [rsp+0x58]
  41074a:	add    DWORD PTR [rsp+0x38],0x1
  41074f:	mov    ebx,DWORD PTR [rsp+0x38]
  410753:	mov    rdx,QWORD PTR [rsi+0x4d0]
  41075a:	mov    rax,QWORD PTR [rax+0x20]
  41075e:	movzx  eax,WORD PTR [rax+0x18]
  410762:	cmp    ebx,eax
  410764:	ja     0x41041e
  41076a:	mov    eax,ebx
  41076c:	mov    rbx,rdi
  41076f:	sub    rbx,rdx
  410772:	mov    rdx,rbx
  410775:	mov    rbx,QWORD PTR [rsp+0x60]
  41077a:	mov    QWORD PTR [rbx+rax*8],rdx
  41077e:	jmp    0x41041e
  410783:	mov    r14d,0x7
  410789:	jmp    0x41041e
  41078e:	mov    r14d,0x4
  410794:	jmp    0x41041e
  410799:	cmp    WORD PTR [rdx+0x18],0x0
  41079e:	jne    0x4104b4
  4107a4:	mov    rax,QWORD PTR [rsp+0x68]
  4107a9:	lea    rax,[rcx+rax*1+0x1]
  4107ae:	cmp    rdi,rax
  4107b1:	setne  al
  4107b4:	movzx  eax,al
  4107b7:	mov    DWORD PTR [rsp+0x38],eax
  4107bb:	jmp    0x4104b4
  4107c0:	mov    rdx,QWORD PTR [rsp+0x58]
  4107c5:	mov    rcx,rsi
  4107c8:	call   0x410020
  4107cd:	test   al,al
  4107cf:	jne    0x4104e1
  4107d5:	mov    rax,QWORD PTR [rsp+0x68]
  4107da:	mov    rdx,QWORD PTR [rsp+0x60]
  4107df:	mov    r14b,0x2
  4107e2:	mov    DWORD PTR [rsp+0x4c],0x1
  4107ea:	mov    rdi,rax
  4107ed:	add    rdi,QWORD PTR [rsi+0x4d0]
  4107f4:	mov    QWORD PTR [rdx],rax
  4107f7:	jmp    0x41041e
  4107fc:	mov    QWORD PTR [rsi+0x4e0],rbx
  410803:	movzx  r8d,WORD PTR [r8+0x20]
  410808:	mov    rcx,rsi
  41080b:	mov    rdx,QWORD PTR [rsp+0xd8]
  410813:	call   0x40fc90
  410818:	mov    rdi,QWORD PTR [rsi+0x4d0]
  41081f:	jmp    0x410283
  410824:	mov    rbx,rdi
  410827:	mov    rax,rbp
  41082a:	mov    r14d,0x6
  410830:	jmp    0x4101f0
  410835:	mov    rcx,rsi
  410838:	call   0x40cb50
  41083d:	mov    r13,QWORD PTR [rsi+0x88]
  410844:	movzx  r10d,BYTE PTR [rsp+0x40]
  41084a:	jmp    0x4101bf
  41084f:	cmp    BYTE PTR [rsi+0x18],0x0
  410853:	jne    0x410338
  410859:	mov    BYTE PTR [rsi+0x1a0],0x0
  410860:	test   BYTE PTR [r8+0x19],0x1
  410865:	jne    0x410875
  410867:	mov    rax,QWORD PTR [r8+0x20]
  41086b:	test   BYTE PTR [rax+0x1c],0x1
  41086f:	jne    0x410adc
  410875:	mov    rdx,r8
  410878:	mov    rcx,rsi
  41087b:	mov    BYTE PTR [rsp+0x7b],r10b
  410880:	mov    QWORD PTR [rsp+0x40],r8
  410885:	call   0x410020
  41088a:	test   al,al
  41088c:	mov    r8,QWORD PTR [rsp+0x40]
  410891:	movzx  r10d,BYTE PTR [rsp+0x7b]
  410897:	jne    0x410283
  41089d:	mov    QWORD PTR [rsi+0x4e0],rbx
  4108a4:	mov    rdx,r8
  4108a7:	mov    rcx,rsi
  4108aa:	mov    BYTE PTR [rsp+0x40],r10b
  4108af:	xor    r14d,r14d
  4108b2:	call   0x40fc00
  4108b7:	mov    r13,QWORD PTR [rsi+0x88]
  4108be:	movzx  r10d,BYTE PTR [rsp+0x40]
  4108c4:	jmp    0x4101bf
  4108c9:	nop    DWORD PTR [rax+0x0]
  4108d0:	mov    rax,QWORD PTR [rsp+0x68]
  4108d5:	add    rax,QWORD PTR [rsi+0x4d0]
  4108dc:	mov    QWORD PTR [rsi+0x4e0],rax
  4108e3:	mov    rax,QWORD PTR [rsp+0x58]
  4108e8:	mov    QWORD PTR [r13+0x10],rbp
  4108ec:	mov    rbx,QWORD PTR [rax+0x20]
  4108f0:	cmp    WORD PTR [rbx+0x18],0x0
  4108f5:	je     0x410bb5
  4108fb:	mov    r8,QWORD PTR [rbx+0x8]
  4108ff:	movzx  edx,WORD PTR [r8+0x4]
  410904:	mov    ecx,DWORD PTR [r8]
  410907:	test   dx,dx
  41090a:	je     0x41093d
  41090c:	mov    r11,QWORD PTR [rsp+0x60]
  410911:	mov    rax,rcx
  410914:	add    rax,0xd
  410918:	mov    r9,QWORD PTR [r11+rdx*8]
  41091c:	sub    r9,QWORD PTR [r11+rdx*8-0x8]
  410921:	and    rax,0xfffffffffffffff8
  410925:	add    r8,rax
  410928:	mov    eax,DWORD PTR [r8]
  41092b:	lea    rdx,[rax+r9*2-0x2]
  410930:	add    rcx,rdx
  410933:	movzx  edx,WORD PTR [r8+0x4]
  410938:	test   dx,dx
  41093b:	jne    0x410914
  41093d:	lea    rdx,[rcx+0x1]
  410941:	mov    rcx,rsi
  410944:	mov    BYTE PTR [rsp+0x4c],r10b
  410949:	call   0x41cec0
  41094e:	movzx  r10d,BYTE PTR [rsp+0x4c]
  410954:	mov    DWORD PTR [rsp+0x40],r15d
  410959:	mov    r11,rax
  41095c:	mov    rcx,QWORD PTR [rax+0x10]
  410960:	mov    r14,QWORD PTR [rbx+0x8]
  410964:	xor    edx,edx
  410966:	mov    r15,QWORD PTR [rsp+0x60]
  41096b:	xor    r9d,r9d
  41096e:	mov    edi,DWORD PTR [r14]
  410971:	lea    rbp,[r14+0x6]
  410975:	add    r9,rdi
  410978:	test   rdi,rdi
  41097b:	je     0x4109a2
  41097d:	xor    eax,eax
  41097f:	nop
  410980:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  410986:	mov    ebx,edx
  410988:	xor    ebx,0x1
  41098b:	cmp    r8b,0x22
  41098f:	mov    BYTE PTR [rcx+rax*1],r8b
  410993:	cmove  edx,ebx
  410996:	add    rax,0x1
  41099a:	cmp    rdi,rax
  41099d:	jne    0x410980
  41099f:	add    rcx,rdi
  4109a2:	movzx  eax,WORD PTR [r14+0x4]
  4109a7:	test   ax,ax
  4109aa:	je     0x410a60
  4109b0:	mov    r13,QWORD PTR [r15+rax*8-0x8]
  4109b5:	mov    r8,r13
  4109b8:	add    r13,QWORD PTR [rsi+0x4d0]
  4109bf:	not    r8
  4109c2:	add    r8,QWORD PTR [r15+rax*8]
  4109c6:	je     0x410a3c
  4109c8:	lea    rdi,[r13+r8*1+0x0]
  4109cd:	mov    rax,r13
  4109d0:	xor    ebp,ebp
  4109d2:	jmp    0x4109f9
  4109d4:	test   ebp,ebp
  4109d6:	mov    r8,rcx
  4109d9:	je     0x4109e5
  4109db:	cmp    bl,0x5c
  4109de:	mov    ebp,0x1
  4109e3:	je     0x410a2c
  4109e5:	add    rax,0x1
  4109e9:	add    r9,0x1
  4109ed:	lea    rcx,[r8+0x1]
  4109f1:	cmp    rax,rdi
  4109f4:	mov    BYTE PTR [r8],bl
  4109f7:	je     0x410a3c
  4109f9:	test   edx,edx
  4109fb:	movzx  ebx,BYTE PTR [rax]
  4109fe:	mov    r8,rcx
  410a01:	je     0x4109e5
  410a03:	cmp    bl,0x22
  410a06:	jne    0x4109d4
  410a08:	cmp    r13,rax
  410a0b:	jae    0x410a1c
  410a0d:	mov    r8d,ebp
  410a10:	xor    r8d,0x1
  410a14:	cmp    BYTE PTR [rax-0x1],0x5c
  410a18:	cmovne ebp,r8d
  410a1c:	mov    BYTE PTR [rcx],0x5c
  410a1f:	lea    r8,[rcx+0x1]
  410a23:	add    r9,0x1
  410a27:	movzx  ebx,BYTE PTR [rax]
  410a2a:	jmp    0x4109e5
  410a2c:	mov    BYTE PTR [rcx],0x5c
  410a2f:	add    r8,0x1
  410a33:	add    r9,0x1
  410a37:	movzx  ebx,BYTE PTR [rax]
  410a3a:	jmp    0x4109e5
  410a3c:	mov    eax,DWORD PTR [r14]
  410a3f:	add    rax,0xd
  410a43:	and    rax,0xfffffffffffffff8
  410a47:	add    r14,rax
  410a4a:	jmp    0x41096e
  410a4f:	mov    rbx,rdi
  410a52:	mov    rax,rbp
  410a55:	mov    r14d,0x3
  410a5b:	jmp    0x4101f0
  410a60:	mov    BYTE PTR [rcx],0xa
  410a63:	mov    rdx,QWORD PTR [rsp+0x58]
  410a68:	mov    rcx,rsi
  410a6b:	mov    r8,QWORD PTR [r11+0x10]
  410a6f:	mov    r15d,DWORD PTR [rsp+0x40]
  410a74:	xor    r14d,r14d
  410a77:	mov    BYTE PTR [rsp+0x7b],r10b
  410a7c:	mov    QWORD PTR [rsp+0x40],r11
  410a81:	call   0x40cb00
  410a86:	mov    r13,QWORD PTR [rsi+0x88]
  410a8d:	mov    r11,QWORD PTR [rsp+0x40]
  410a92:	mov    DWORD PTR [rsp+0x4c],0x0
  410a9a:	movzx  r10d,BYTE PTR [rsp+0x7b]
  410aa0:	mov    QWORD PTR [r13+0x20],r11
  410aa4:	jmp    0x4101bf
  410aa9:	mov    rax,QWORD PTR [rsp+0x58]
  410aae:	mov    r8d,DWORD PTR [rsp+0x7c]
  410ab3:	xor    r9d,r9d
  410ab6:	mov    edx,0x3
  410abb:	mov    rcx,rsi
  410abe:	mov    rax,QWORD PTR [rax]
  410ac1:	mov    QWORD PTR [rsp+0x28],rax
  410ac6:	lea    rax,[rip+0x3df3b]        # 0x44ea08
  410acd:	mov    QWORD PTR [rsp+0x20],rax
  410ad2:	call   0x414c40
  410ad7:	jmp    0x41060f
  410adc:	movzx  r14d,WORD PTR [rax+0x18]
  410ae1:	mov    rax,QWORD PTR [rsp+0x70]
  410ae6:	add    r14d,0x1
  410aea:	test   rax,rax
  410aed:	je     0x410b0f
  410aef:	mov    rdx,rax
  410af2:	mov    rcx,rsi
  410af5:	mov    QWORD PTR [rsp+0x40],r8
  410afa:	mov    BYTE PTR [rsp+0x38],r10b
  410aff:	call   0x41cea0
  410b04:	movzx  r10d,BYTE PTR [rsp+0x38]
  410b0a:	mov    r8,QWORD PTR [rsp+0x40]
  410b0f:	movsxd rdx,r14d
  410b12:	mov    rcx,rsi
  410b15:	mov    QWORD PTR [rsp+0x38],r8
  410b1a:	shl    rdx,0x3
  410b1e:	mov    BYTE PTR [rsp+0x40],r10b
  410b23:	mov    r14d,0x1
  410b29:	call   0x41cec0
  410b2e:	mov    QWORD PTR [rsp+0x70],rax
  410b33:	mov    rax,QWORD PTR [rax+0x10]
  410b37:	sub    rbx,QWORD PTR [rsi+0x4d0]
  410b3e:	mov    r8,QWORD PTR [rsp+0x38]
  410b43:	movzx  r10d,BYTE PTR [rsp+0x40]
  410b49:	mov    DWORD PTR [rsp+0x38],0x0
  410b51:	mov    QWORD PTR [rsp+0x60],rax
  410b56:	mov    rax,QWORD PTR [rsi+0x28]
  410b5a:	mov    QWORD PTR [rsp+0x58],r8
  410b5f:	mov    QWORD PTR [rsp+0x68],rbx
  410b64:	mov    rbx,rdi
  410b67:	mov    eax,DWORD PTR [rax+0x3c]
  410b6a:	mov    DWORD PTR [rsp+0x7c],eax
  410b6e:	mov    rax,rbp
  410b71:	jmp    0x4101f0
  410b76:	cmp    BYTE PTR [rsi+0x430],0x0
  410b7d:	je     0x410721
  410b83:	mov    rdx,rbp
  410b86:	mov    rcx,rsi
  410b89:	mov    BYTE PTR [rsp+0x40],r10b
  410b8e:	call   0x40fd90
  410b93:	test   BYTE PTR [rax+0x10],0x1
  410b97:	movzx  r10d,BYTE PTR [rsp+0x40]
  410b9d:	jne    0x41072e
  410ba3:	cmp    DWORD PTR [rsi+0x414],0xd
  410baa:	je     0x41054c
  410bb0:	jmp    0x41072e
  410bb5:	mov    rdx,rax
  410bb8:	mov    rcx,rsi
  410bbb:	xor    r14d,r14d
  410bbe:	call   0x40fc00
  410bc3:	mov    DWORD PTR [rsp+0x4c],0x0
  410bcb:	mov    r13,QWORD PTR [rsi+0x88]
  410bd2:	movzx  r10d,BYTE PTR [rsp+0x40]
  410bd8:	jmp    0x4101bf
  410bdd:	mov    r10,QWORD PTR [rsi+0x28]
  410be1:	mov    rax,QWORD PTR [rsi]
  410be4:	xor    ebx,ebx
  410be6:	mov    BYTE PTR [rax+0x68],0x1
  410bea:	mov    eax,DWORD PTR [r10+0xc]
  410bee:	sub    eax,0x1
  410bf1:	lea    rdx,[rax+rax*4]
  410bf5:	mov    rax,QWORD PTR [r10]
  410bf8:	lea    rdx,[rax+rdx*8]
  410bfc:	mov    eax,DWORD PTR [r10+0x3c]
  410c00:	movzx  ecx,BYTE PTR [rdx+0x1c]
  410c04:	sub    eax,DWORD PTR [rdx]
  410c06:	mov    r8d,DWORD PTR [rdx+0x10]
  410c0a:	shr    eax,cl
  410c0c:	mov    rcx,r10
  410c0f:	lea    edx,[r8+rax*1+0x1]
  410c14:	xor    r8d,r8d
  410c17:	call   0x40ad30
  410c1c:	jmp    0x4105f0
  410c21:	nop    DWORD PTR [rax+rax*1+0x0]
  410c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410c30:	push   rbx
  410c31:	sub    rsp,0x20
  410c35:	mov    rbx,rcx
  410c38:	jmp    0x410c4e
  410c3a:	nop    WORD PTR [rax+rax*1+0x0]
  410c40:	xor    edx,edx
  410c42:	mov    rcx,rbx
  410c45:	call   0x410100
  410c4a:	test   al,al
  410c4c:	jne    0x410c70
  410c4e:	mov    rax,QWORD PTR [rbx]
  410c51:	cmp    BYTE PTR [rax+0x68],0x0
  410c55:	je     0x410c40
  410c57:	mov    rcx,rbx
  410c5a:	call   0x41c530
  410c5f:	test   al,al
  410c61:	jne    0x410c40
  410c63:	add    rsp,0x20
  410c67:	pop    rbx
  410c68:	ret    
  410c69:	nop    DWORD PTR [rax+0x0]
  410c70:	cmp    BYTE PTR [rbx+0x12],0x0
  410c74:	jne    0x410c4e
  410c76:	cmp    QWORD PTR [rbx],0x0
  410c7a:	setne  al
  410c7d:	add    rsp,0x20
  410c81:	pop    rbx
  410c82:	ret    
  410c83:	nop    DWORD PTR [rax]
  410c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410c90:	test   BYTE PTR [rcx+0x1c],0x1
  410c94:	je     0x410ce0
  410c96:	cmp    WORD PTR [rcx+0x18],0x0
  410c9b:	je     0x410ce0
  410c9d:	mov    r9,QWORD PTR [rcx+0x8]
  410ca1:	movzx  r8d,WORD PTR [r9+0x4]
  410ca6:	mov    eax,DWORD PTR [r9]
  410ca9:	test   r8w,r8w
  410cad:	je     0x410ce3
  410caf:	mov    r10,QWORD PTR [rcx]
  410cb2:	mov    rdx,rax
  410cb5:	add    rdx,0xd
  410cb9:	mov    rcx,QWORD PTR [r10+r8*8-0x8]
  410cbe:	and    rdx,0xfffffffffffffff8
  410cc2:	add    r9,rdx
  410cc5:	mov    edx,DWORD PTR [r9]
  410cc8:	mov    ecx,DWORD PTR [rcx+0x8]
  410ccb:	movzx  r8d,WORD PTR [r9+0x4]
  410cd0:	add    rcx,rdx
  410cd3:	add    rax,rcx
  410cd6:	test   r8w,r8w
  410cda:	jne    0x410cb5
  410cdc:	repz ret 
  410cde:	xchg   ax,ax
  410ce0:	mov    eax,DWORD PTR [rcx+0x14]
  410ce3:	repz ret 
  410ce5:	nop
  410ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410cf0:	push   rdi
  410cf1:	push   rsi
  410cf2:	push   rbx
  410cf3:	sub    rsp,0x20
  410cf7:	test   BYTE PTR [rcx+0x1c],0x1
  410cfb:	mov    rsi,rcx
  410cfe:	mov    r9,rdx
  410d01:	je     0x410d70
  410d03:	cmp    WORD PTR [rcx+0x18],0x0
  410d08:	je     0x410d70
  410d0a:	mov    rbx,QWORD PTR [rcx+0x8]
  410d0e:	jmp    0x410d3d
  410d10:	mov    rdx,QWORD PTR [rsi]
  410d13:	mov    rcx,r9
  410d16:	mov    rdi,QWORD PTR [rdx+rax*8-0x8]
  410d1b:	mov    r8d,DWORD PTR [rdi+0x8]
  410d1f:	mov    rdx,QWORD PTR [rdi]
  410d22:	call   0x449450
  410d27:	mov    r9,rax
  410d2a:	mov    eax,DWORD PTR [rdi+0x8]
  410d2d:	add    r9,rax
  410d30:	mov    eax,DWORD PTR [rbx]
  410d32:	add    rax,0xd
  410d36:	and    rax,0xfffffffffffffff8
  410d3a:	add    rbx,rax
  410d3d:	mov    r8d,DWORD PTR [rbx]
  410d40:	lea    rdx,[rbx+0x6]
  410d44:	mov    rcx,r9
  410d47:	call   0x449450
  410d4c:	mov    r9,rax
  410d4f:	mov    eax,DWORD PTR [rbx]
  410d51:	add    r9,rax
  410d54:	movzx  eax,WORD PTR [rbx+0x4]
  410d58:	test   ax,ax
  410d5b:	jne    0x410d10
  410d5d:	mov    rax,r9
  410d60:	add    rsp,0x20
  410d64:	pop    rbx
  410d65:	pop    rsi
  410d66:	pop    rdi
  410d67:	ret    
  410d68:	nop    DWORD PTR [rax+rax*1+0x0]
  410d70:	mov    r8d,DWORD PTR [rsi+0x14]
  410d74:	mov    rdx,QWORD PTR [rsi+0x8]
  410d78:	mov    rcx,r9
  410d7b:	call   0x449450
  410d80:	mov    r9,rax
  410d83:	mov    eax,DWORD PTR [rsi+0x14]
  410d86:	add    r9,rax
  410d89:	mov    rax,r9
  410d8c:	add    rsp,0x20
  410d90:	pop    rbx
  410d91:	pop    rsi
  410d92:	pop    rdi
  410d93:	ret    
  410d94:	xchg   ax,ax
  410d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410da0:	push   r12
  410da2:	push   rbp
  410da3:	push   rdi
  410da4:	push   rsi
  410da5:	push   rbx
  410da6:	sub    rsp,0x20
  410daa:	mov    rax,QWORD PTR [rcx+0x4d0]
  410db1:	mov    rbp,QWORD PTR [rcx+0x88]
  410db8:	mov    rdi,rdx
  410dbb:	mov    rbx,rcx
  410dbe:	mov    QWORD PTR [rcx+0x4e0],rax
  410dc5:	mov    rax,QWORD PTR [rcx]
  410dc8:	mov    rax,QWORD PTR [rax]
  410dcb:	mov    QWORD PTR [rbp+0x10],rax
  410dcf:	mov    rdx,QWORD PTR [rcx]
  410dd2:	mov    rdx,QWORD PTR [rdx+0x20]
  410dd6:	mov    QWORD PTR [rbp+0x18],rdx
  410dda:	sub    rdx,rax
  410ddd:	call   0x40fb90
  410de2:	mov    rdx,QWORD PTR [rbp+0x10]
  410de6:	cmp    BYTE PTR [rdx],0x28
  410de9:	je     0x410e95
  410def:	movzx  r8d,BYTE PTR [rbx+0x41c]
  410df7:	mov    rsi,QWORD PTR [rbx]
  410dfa:	mov    rcx,rbx
  410dfd:	call   0x40ffa0
  410e02:	mov    QWORD PTR [rsi],rax
  410e05:	add    BYTE PTR [rbx+0x18],0x1
  410e09:	mov    rdx,rdi
  410e0c:	mov    rcx,rbx
  410e0f:	call   0x410100
  410e14:	sub    BYTE PTR [rbx+0x18],0x1
  410e18:	test   rdi,rdi
  410e1b:	je     0x410f8e
  410e21:	mov    r8,QWORD PTR [rbx+0x4d0]
  410e28:	mov    rax,QWORD PTR [rbx+0x4e0]
  410e2f:	cmp    r8,rax
  410e32:	jae    0x410e90
  410e34:	movzx  edx,BYTE PTR [rax-0x1]
  410e38:	mov    r12,QWORD PTR [rip+0x49ff1]        # 0x45ae30
  410e3f:	test   WORD PTR [r12+rdx*2],0xc00
  410e46:	jne    0x410e5d
  410e48:	jmp    0x410e90
  410e4a:	nop    WORD PTR [rax+rax*1+0x0]
  410e50:	movzx  ecx,BYTE PTR [rax-0x1]
  410e54:	test   WORD PTR [r12+rcx*2],0xc00
  410e5b:	je     0x410e90
  410e5d:	sub    rax,0x1
  410e61:	cmp    rax,r8
  410e64:	jne    0x410e50
  410e66:	mov    QWORD PTR [rbx+0x4e0],r8
  410e6d:	mov    rdx,rdi
  410e70:	xor    r8d,r8d
  410e73:	mov    rcx,rbx
  410e76:	call   0x40fc90
  410e7b:	mov    eax,0x1
  410e80:	add    rsp,0x20
  410e84:	pop    rbx
  410e85:	pop    rsi
  410e86:	pop    rdi
  410e87:	pop    rbp
  410e88:	pop    r12
  410e8a:	ret    
  410e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  410e90:	mov    r8,rax
  410e93:	jmp    0x410e66
  410e95:	mov    rax,QWORD PTR [rbx+0x88]
  410e9c:	mov    r12,QWORD PTR [rip+0x49f8d]        # 0x45ae30
  410ea3:	mov    rdx,QWORD PTR [rax+0x10]
  410ea7:	add    rdx,0x1
  410eab:	jmp    0x410edb
  410ead:	nop    DWORD PTR [rax]
  410eb0:	mov    rax,QWORD PTR [rbx+0x88]
  410eb7:	mov    r8d,0x1
  410ebd:	mov    rcx,rbx
  410ec0:	mov    rdx,QWORD PTR [rax+0x10]
  410ec4:	call   0x40ffa0
  410ec9:	mov    rsi,rax
  410ecc:	movzx  eax,BYTE PTR [rax]
  410ecf:	cmp    al,0x2c
  410ed1:	jne    0x410f95
  410ed7:	lea    rdx,[rsi+0x1]
  410edb:	mov    r8d,0x1
  410ee1:	mov    rcx,rbx
  410ee4:	call   0x40ffa0
  410ee9:	movzx  edx,BYTE PTR [rax]
  410eec:	mov    rsi,rax
  410eef:	test   BYTE PTR [r12+rdx*2+0x1],0x2
  410ef5:	jne    0x410f09
  410ef7:	cmp    dl,0x24
  410efa:	jne    0x410ff5
  410f00:	cmp    BYTE PTR [rbx+0x430],0x0
  410f07:	je     0x410f26
  410f09:	mov    rdx,rsi
  410f0c:	mov    rcx,rbx
  410f0f:	call   0x40fd90
  410f14:	mov    rdx,rdi
  410f17:	mov    r8,rax
  410f1a:	mov    rcx,rbx
  410f1d:	call   0x40ed00
  410f22:	test   al,al
  410f24:	je     0x410eb0
  410f26:	lea    r8,[rip+0x3dcfb]        # 0x44ec28
  410f2d:	mov    edx,0x3
  410f32:	mov    rcx,rbx
  410f35:	call   0x414b60
  410f3a:	xor    eax,eax
  410f3c:	cmp    BYTE PTR [rsi],0x29
  410f3f:	mov    rdx,QWORD PTR [rbx+0x88]
  410f46:	mov    rcx,rbx
  410f49:	sete   al
  410f4c:	add    rsi,rax
  410f4f:	mov    QWORD PTR [rdx+0x10],rsi
  410f53:	mov    rax,QWORD PTR [rbx+0x38]
  410f57:	mov    rsi,QWORD PTR [rbx]
  410f5a:	mov    rax,QWORD PTR [rax+0x10]
  410f5e:	mov    QWORD PTR [rdi],rax
  410f61:	movzx  r8d,BYTE PTR [rbx+0x41c]
  410f69:	mov    rdx,QWORD PTR [rbp+0x10]
  410f6d:	call   0x40ffa0
  410f72:	mov    QWORD PTR [rsi],rax
  410f75:	add    BYTE PTR [rbx+0x18],0x1
  410f79:	xor    edx,edx
  410f7b:	mov    rcx,rbx
  410f7e:	call   0x410100
  410f83:	sub    BYTE PTR [rbx+0x18],0x1
  410f87:	xor    eax,eax
  410f89:	jmp    0x410e80
  410f8e:	xor    eax,eax
  410f90:	jmp    0x410e80
  410f95:	cmp    al,0x29
  410f97:	jne    0x410f26
  410f99:	movzx  eax,WORD PTR [rdi+0x18]
  410f9d:	mov    rdx,QWORD PTR [rbx+0x88]
  410fa4:	add    rsi,0x1
  410fa8:	mov    QWORD PTR [rdx+0x10],rsi
  410fac:	mov    rdx,QWORD PTR [rbx+0x38]
  410fb0:	mov    rsi,QWORD PTR [rbx]
  410fb3:	mov    rcx,QWORD PTR [rdx+0x10]
  410fb7:	lea    rax,[rcx+rax*8]
  410fbb:	mov    QWORD PTR [rdi],rcx
  410fbe:	mov    rcx,rbx
  410fc1:	mov    QWORD PTR [rdx+0x10],rax
  410fc5:	or     BYTE PTR [rdi+0x1c],0x1
  410fc9:	movzx  r8d,BYTE PTR [rbx+0x41c]
  410fd1:	mov    rdx,QWORD PTR [rbp+0x10]
  410fd5:	call   0x40ffa0
  410fda:	mov    QWORD PTR [rsi],rax
  410fdd:	add    BYTE PTR [rbx+0x18],0x1
  410fe1:	mov    rdx,rdi
  410fe4:	mov    rcx,rbx
  410fe7:	call   0x410100
  410fec:	sub    BYTE PTR [rbx+0x18],0x1
  410ff0:	jmp    0x410e21
  410ff5:	cmp    dl,0x29
  410ff8:	jne    0x410f26
  410ffe:	movzx  eax,WORD PTR [rdi+0x18]
  411002:	test   ax,ax
  411005:	je     0x410f9d
  411007:	jmp    0x410f26
  41100c:	nop    DWORD PTR [rax+0x0]
  411010:	push   r14
  411012:	push   r13
  411014:	push   r12
  411016:	push   rbp
  411017:	push   rdi
  411018:	push   rsi
  411019:	push   rbx
  41101a:	sub    rsp,0x30
  41101e:	mov    rbx,rcx
  411021:	mov    ecx,DWORD PTR [rcx+0x14]
  411024:	add    ecx,DWORD PTR [rdx+0x14]
  411027:	mov    rsi,rdx
  41102a:	call   0x43baf0
  41102f:	mov    r8d,DWORD PTR [rbx+0x14]
  411033:	cmp    WORD PTR [rbx+0x18],0x0
  411038:	mov    rdi,rax
  41103b:	mov    BYTE PTR [rsp+0x2e],0x0
  411040:	mov    BYTE PTR [rsp+0x2f],0x0
  411045:	lea    rbp,[rax+r8*1]
  411049:	je     0x411100
  41104f:	mov    rsi,QWORD PTR [rsi+0x8]
  411053:	mov    rbx,QWORD PTR [rbx+0x8]
  411057:	lea    r13,[rsp+0x2e]
  41105c:	lea    r12,[rsp+0x2f]
  411061:	movzx  eax,WORD PTR [rsi+0x4]
  411065:	cmp    WORD PTR [rbx+0x4],ax
  411069:	je     0x4110b2
  41106b:	jmp    0x4110de
  41106d:	nop    DWORD PTR [rax]
  411070:	mov    r8,r14
  411073:	mov    rdx,rbp
  411076:	mov    rcx,rdi
  411079:	call   0x449458
  41107e:	test   eax,eax
  411080:	jne    0x4110de
  411082:	cmp    WORD PTR [rbx+0x4],0x0
  411087:	je     0x411143
  41108d:	mov    r8d,DWORD PTR [rsi]
  411090:	mov    eax,DWORD PTR [rbx]
  411092:	add    r8,0xd
  411096:	add    rax,0xd
  41109a:	and    r8,0xfffffffffffffff8
  41109e:	and    rax,0xfffffffffffffff8
  4110a2:	add    rsi,r8
  4110a5:	add    rbx,rax
  4110a8:	movzx  eax,WORD PTR [rsi+0x4]
  4110ac:	cmp    WORD PTR [rbx+0x4],ax
  4110b0:	jne    0x4110de
  4110b2:	mov    r8d,DWORD PTR [rbx]
  4110b5:	lea    rdx,[rbx+0x6]
  4110b9:	mov    r9,r13
  4110bc:	mov    rcx,rdi
  4110bf:	call   0x40fae0
  4110c4:	mov    r8d,DWORD PTR [rsi]
  4110c7:	lea    rdx,[rsi+0x6]
  4110cb:	mov    r14,rax
  4110ce:	mov    r9,r12
  4110d1:	mov    rcx,rbp
  4110d4:	call   0x40fae0
  4110d9:	cmp    r14,rax
  4110dc:	je     0x411070
  4110de:	mov    ebx,0x1
  4110e3:	mov    rcx,rdi
  4110e6:	call   0x4494c8
  4110eb:	mov    eax,ebx
  4110ed:	add    rsp,0x30
  4110f1:	pop    rbx
  4110f2:	pop    rsi
  4110f3:	pop    rdi
  4110f4:	pop    rbp
  4110f5:	pop    r12
  4110f7:	pop    r13
  4110f9:	pop    r14
  4110fb:	ret    
  4110fc:	nop    DWORD PTR [rax+0x0]
  411100:	mov    rdx,QWORD PTR [rbx+0x8]
  411104:	lea    r9,[rsp+0x2e]
  411109:	mov    rcx,rax
  41110c:	call   0x40fae0
  411111:	mov    r8d,DWORD PTR [rsi+0x14]
  411115:	mov    rdx,QWORD PTR [rsi+0x8]
  411119:	lea    r9,[rsp+0x2f]
  41111e:	mov    rbx,rax
  411121:	mov    rcx,rbp
  411124:	call   0x40fae0
  411129:	cmp    rbx,rax
  41112c:	jne    0x4110de
  41112e:	mov    r8,rbx
  411131:	mov    rdx,rbp
  411134:	mov    rcx,rdi
  411137:	call   0x449458
  41113c:	test   eax,eax
  41113e:	setne  bl
  411141:	jmp    0x4110e3
  411143:	xor    ebx,ebx
  411145:	jmp    0x4110e3
  411147:	nop
  411148:	nop
  411149:	nop
  41114a:	nop
  41114b:	nop
  41114c:	nop
  41114d:	nop
  41114e:	nop
  41114f:	nop
  411150:	and    BYTE PTR [rdx+0x18],0xc0
  411154:	mov    eax,0x1
  411159:	and    WORD PTR [rdx+0x18],0xd67f
  41115f:	ret    
  411160:	push   rsi
  411161:	push   rbx
  411162:	sub    rsp,0x28
  411166:	xor    esi,esi
  411168:	test   rcx,rcx
  41116b:	mov    rbx,rcx
  41116e:	jne    0x41117d
  411170:	jmp    0x411199
  411172:	mov    rbx,QWORD PTR [rbx]
  411175:	add    esi,0x1
  411178:	test   rbx,rbx
  41117b:	je     0x411199
  41117d:	cmp    BYTE PTR [rbx+0x10],0x0
  411181:	je     0x411172
  411183:	mov    rcx,QWORD PTR [rbx+0x18]
  411187:	call   0x411160
  41118c:	mov    rbx,QWORD PTR [rbx]
  41118f:	add    esi,eax
  411191:	add    esi,0x1
  411194:	test   rbx,rbx
  411197:	jne    0x41117d
  411199:	mov    eax,esi
  41119b:	add    rsp,0x28
  41119f:	pop    rbx
  4111a0:	pop    rsi
  4111a1:	ret    
  4111a2:	nop    DWORD PTR [rax+0x0]
  4111a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4111b0:	push   rsi
  4111b1:	push   rbx
  4111b2:	sub    rsp,0x28
  4111b6:	mov    rbx,rcx
  4111b9:	mov    esi,edx
  4111bb:	call   0x41ee50
  4111c0:	movzx  ecx,BYTE PTR [rax+0x4]
  4111c4:	cmp    cl,0x35
  4111c7:	je     0x4111f5
  4111c9:	test   BYTE PTR [rax+0x6],0x10
  4111cd:	jne    0x411274
  4111d3:	cmp    cl,0x16
  4111d6:	je     0x411231
  4111d8:	lea    r8,[rip+0x3db71]        # 0x44ed50
  4111df:	mov    edx,0x3
  4111e4:	mov    rcx,rbx
  4111e7:	call   0x414b60
  4111ec:	xor    eax,eax
  4111ee:	add    rsp,0x28
  4111f2:	pop    rbx
  4111f3:	pop    rsi
  4111f4:	ret    
  4111f5:	test   sil,sil
  4111f8:	mov    rax,QWORD PTR [rax+0x8]
  4111fc:	je     0x41121d
  4111fe:	cmp    QWORD PTR [rbx+0x498],rax
  411205:	je     0x411296
  41120b:	cmp    QWORD PTR [rbx+0x4b8],rax
  411212:	je     0x411259
  411214:	cmp    QWORD PTR [rbx+0x4c0],rax
  41121b:	je     0x411259
  41121d:	test   BYTE PTR [rax+0x18],0x80
  411221:	mov    edx,0x0
  411226:	cmovne rax,rdx
  41122a:	add    rsp,0x28
  41122e:	pop    rbx
  41122f:	pop    rsi
  411230:	ret    
  411231:	mov    rax,QWORD PTR [rbx+0x90]
  411238:	lea    r8,[rip+0x3dae9]        # 0x44ed28
  41123f:	mov    edx,0x3
  411244:	mov    rcx,rbx
  411247:	mov    r9,QWORD PTR [rax+0x8]
  41124b:	call   0x414b60
  411250:	xor    eax,eax
  411252:	add    rsp,0x28
  411256:	pop    rbx
  411257:	pop    rsi
  411258:	ret    
  411259:	lea    r8,[rip+0x3da50]        # 0x44ecb0
  411260:	mov    edx,0x3
  411265:	mov    rcx,rbx
  411268:	call   0x414b60
  41126d:	xor    eax,eax
  41126f:	jmp    0x4111ee
  411274:	mov    rax,QWORD PTR [rax+0x8]
  411278:	lea    r8,[rip+0x3da69]        # 0x44ece8
  41127f:	mov    edx,0x3
  411284:	mov    rcx,rbx
  411287:	mov    r9,QWORD PTR [rax]
  41128a:	call   0x414b60
  41128f:	xor    eax,eax
  411291:	jmp    0x4111ee
  411296:	lea    r8,[rip+0x3d9e3]        # 0x44ec80
  41129d:	mov    edx,0x3
  4112a2:	mov    rcx,rbx
  4112a5:	call   0x414b60
  4112aa:	xor    eax,eax
  4112ac:	jmp    0x4111ee
  4112b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4112b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112c0:	push   rsi
  4112c1:	push   rbx
  4112c2:	sub    rsp,0x28
  4112c6:	mov    esi,edx
  4112c8:	mov    rbx,rcx
  4112cb:	call   0x41ee50
  4112d0:	movzx  r8d,BYTE PTR [rax+0x4]
  4112d5:	mov    rdx,rax
  4112d8:	cmp    r8b,0x37
  4112dc:	je     0x4112f0
  4112de:	xor    eax,eax
  4112e0:	cmp    r8b,0x16
  4112e4:	jne    0x411320
  4112e6:	add    rsp,0x28
  4112ea:	pop    rbx
  4112eb:	pop    rsi
  4112ec:	ret    
  4112ed:	nop    DWORD PTR [rax]
  4112f0:	cmp    DWORD PTR [rax+0x8],0x1
  4112f4:	jne    0x411320
  4112f6:	mov    rax,QWORD PTR [rax+0x10]
  4112fa:	movzx  eax,BYTE PTR [rax]
  4112fd:	sub    eax,0x30
  411300:	cmp    eax,esi
  411302:	jbe    0x411320
  411304:	cmp    eax,0x4
  411307:	ja     0x411320
  411309:	cmp    eax,0x4
  41130c:	jne    0x411313
  41130e:	cmp    esi,0x3
  411311:	jne    0x411320
  411313:	cmp    eax,0x2
  411316:	jne    0x4112e6
  411318:	test   esi,esi
  41131a:	je     0x4112e6
  41131c:	nop    DWORD PTR [rax+0x0]
  411320:	mov    rcx,rbx
  411323:	call   0x41f080
  411328:	lea    r8,[rip+0x3da41]        # 0x44ed70
  41132f:	mov    r9,rax
  411332:	mov    edx,0x3
  411337:	mov    rcx,rbx
  41133a:	call   0x414b60
  41133f:	xor    eax,eax
  411341:	add    rsp,0x28
  411345:	pop    rbx
  411346:	pop    rsi
  411347:	ret    
  411348:	nop    DWORD PTR [rax+rax*1+0x0]
  411350:	push   rsi
  411351:	push   rbx
  411352:	sub    rsp,0x28
  411356:	mov    rsi,rcx
  411359:	mov    BYTE PTR [rcx+0x17],0x1
  41135d:	jmp    0x41136f
  41135f:	nop
  411360:	cmp    dl,0x35
  411363:	jne    0x411390
  411365:	mov    rbx,QWORD PTR [rax+0x8]
  411369:	test   BYTE PTR [rbx+0x18],0x80
  41136d:	je     0x4113b0
  41136f:	mov    rcx,rsi
  411372:	call   0x41ee50
  411377:	movzx  edx,BYTE PTR [rax+0x4]
  41137b:	cmp    dl,0x16
  41137e:	jne    0x411360
  411380:	mov    BYTE PTR [rsi+0x17],0x0
  411384:	add    rsp,0x28
  411388:	pop    rbx
  411389:	pop    rsi
  41138a:	ret    
  41138b:	nop    DWORD PTR [rax+rax*1+0x0]
  411390:	lea    r8,[rip+0x3da01]        # 0x44ed98
  411397:	mov    edx,0x3
  41139c:	mov    rcx,rsi
  41139f:	call   0x414b60
  4113a4:	mov    BYTE PTR [rsi+0x17],0x0
  4113a8:	add    rsp,0x28
  4113ac:	pop    rbx
  4113ad:	pop    rsi
  4113ae:	ret    
  4113af:	nop
  4113b0:	movzx  eax,BYTE PTR [rbx+0x18]
  4113b4:	and    eax,0x3f
  4113b7:	cmp    al,0x1
  4113b9:	je     0x4113cb
  4113bb:	mov    rcx,rbx
  4113be:	call   0x40ecf0
  4113c3:	or     WORD PTR [rbx+0x18],0x280
  4113c9:	jmp    0x41136f
  4113cb:	mov    r9,QWORD PTR [rbx]
  4113ce:	lea    r8,[rip+0x3d9e8]        # 0x44edbd
  4113d5:	xor    edx,edx
  4113d7:	mov    rcx,rsi
  4113da:	call   0x414b60
  4113df:	jmp    0x4113bb
  4113e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4113e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4113f0:	push   rbp
  4113f1:	push   r15
  4113f3:	push   r14
  4113f5:	push   r13
  4113f7:	push   r12
  4113f9:	push   rdi
  4113fa:	push   rsi
  4113fb:	push   rbx
  4113fc:	sub    rsp,0x38
  411400:	lea    rbp,[rsp+0x80]
  411408:	add    BYTE PTR [rcx+0x18],0x1
  41140c:	mov    QWORD PTR [rdx],0x0
  411413:	mov    rbx,rcx
  411416:	mov    r13,rdx
  411419:	mov    esi,r8d
  41141c:	call   0x40ec60
  411421:	mov    r12,rax
  411424:	movzx  eax,BYTE PTR [rax+0x4]
  411428:	cmp    al,0x16
  41142a:	je     0x411615
  411430:	cmp    al,0x35
  411432:	jne    0x4114f0
  411438:	mov    rcx,rbx
  41143b:	mov    edi,DWORD PTR [r12]
  41143f:	call   0x40ec60
  411444:	movzx  eax,BYTE PTR [rax+0x4]
  411448:	cmp    al,0x14
  41144a:	je     0x411514
  411450:	cmp    esi,0x4
  411453:	je     0x4115b0
  411459:	cmp    esi,0x11
  41145c:	jne    0x4114b2
  41145e:	cmp    al,0x16
  411460:	jne    0x4114b2
  411462:	mov    rax,QWORD PTR [r12+0x8]
  411467:	mov    r8d,DWORD PTR [rax+0x8]
  41146b:	lea    eax,[r8+0x1]
  41146f:	mov    rdi,rax
  411472:	add    rax,0x1e
  411476:	shr    rax,0x4
  41147a:	shl    rax,0x4
  41147e:	call   0x43d410
  411483:	sub    rsp,rax
  411486:	mov    BYTE PTR [rsp+0x30],0x23
  41148b:	mov    rax,QWORD PTR [r12+0x8]
  411490:	lea    rcx,[rsp+0x31]
  411495:	lea    rsi,[rsp+0x30]
  41149a:	mov    rdx,QWORD PTR [rax]
  41149d:	call   0x449450
  4114a2:	mov    r8d,edi
  4114a5:	mov    rdx,rsi
  4114a8:	mov    rcx,rbx
  4114ab:	call   0x41b3b0
  4114b0:	jmp    0x4114d3
  4114b2:	lea    rax,[rip+0x3d95f]        # 0x44ee18
  4114b9:	xor    r9d,r9d
  4114bc:	mov    r8d,edi
  4114bf:	mov    edx,0x3
  4114c4:	mov    rcx,rbx
  4114c7:	mov    QWORD PTR [rsp+0x20],rax
  4114cc:	call   0x414c40
  4114d1:	xor    eax,eax
  4114d3:	sub    BYTE PTR [rbx+0x18],0x1
  4114d7:	lea    rsp,[rbp-0x48]
  4114db:	pop    rbx
  4114dc:	pop    rsi
  4114dd:	pop    rdi
  4114de:	pop    r12
  4114e0:	pop    r13
  4114e2:	pop    r14
  4114e4:	pop    r15
  4114e6:	pop    rbp
  4114e7:	ret    
  4114e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4114f0:	lea    rax,[rip+0x3d901]        # 0x44edf8
  4114f7:	xor    r9d,r9d
  4114fa:	mov    edx,0x3
  4114ff:	mov    rcx,rbx
  411502:	mov    QWORD PTR [rsp+0x20],rax
  411507:	mov    r8d,DWORD PTR [r12]
  41150b:	call   0x414c40
  411510:	xor    eax,eax
  411512:	jmp    0x4114d3
  411514:	xor    r15d,r15d
  411517:	lea    r14,[rbx+0x38]
  41151b:	jmp    0x411551
  41151d:	nop    DWORD PTR [rax]
  411520:	lea    rax,[rdi+rdi*2]
  411524:	mov    r8,QWORD PTR [rsi]
  411527:	test   r15d,r15d
  41152a:	lea    rdx,[rcx+rax*8]
  41152e:	mov    QWORD PTR [rdx+0x10],r8
  411532:	lea    rax,[rdx+0x10]
  411536:	mov    rdx,QWORD PTR [rsi+0x8]
  41153a:	mov    QWORD PTR [rax+0x8],rdx
  41153e:	mov    rdx,QWORD PTR [rsi+0x10]
  411542:	mov    QWORD PTR [rax+0x10],rdx
  411546:	jne    0x41154d
  411548:	and    WORD PTR [rcx+0x16],0xfffe
  41154d:	add    r15d,0x1
  411551:	mov    rcx,rbx
  411554:	call   0x40ec60
  411559:	mov    rsi,rax
  41155c:	movzx  eax,BYTE PTR [rax+0x4]
  411560:	cmp    al,0x15
  411562:	je     0x4115c2
  411564:	cmp    al,0x16
  411566:	je     0x4115e3
  411568:	mov    rax,QWORD PTR [rbx+0x38]
  41156c:	mov    edi,r15d
  41156f:	lea    rdx,[rdi+rdi*2]
  411573:	mov    rcx,QWORD PTR [rax+0x10]
  411577:	mov    rax,QWORD PTR [rax+0x18]
  41157b:	lea    rdx,[rdx*8+0x28]
  411583:	sub    rax,rcx
  411586:	cmp    rdx,rax
  411589:	jbe    0x411520
  41158b:	mov    rcx,rbx
  41158e:	mov    r8d,0x28
  411594:	mov    rdx,r14
  411597:	call   0x41d060
  41159c:	mov    rax,QWORD PTR [rbx+0x38]
  4115a0:	mov    rcx,QWORD PTR [rax+0x10]
  4115a4:	jmp    0x411520
  4115a9:	nop    DWORD PTR [rax+0x0]
  4115b0:	mov    edx,0x1
  4115b5:	mov    rcx,rbx
  4115b8:	call   0x40ccd0
  4115bd:	jmp    0x411462
  4115c2:	test   r15d,r15d
  4115c5:	je     0x4115fc
  4115c7:	mov    rax,QWORD PTR [rbx+0x38]
  4115cb:	mov    rax,QWORD PTR [rax+0x10]
  4115cf:	mov    DWORD PTR [rax+0x8],r15d
  4115d3:	mov    QWORD PTR [rax],0x0
  4115da:	mov    QWORD PTR [r13+0x0],rax
  4115de:	jmp    0x411462
  4115e3:	lea    r8,[rip+0x3d84e]        # 0x44ee38
  4115ea:	mov    edx,0x3
  4115ef:	mov    rcx,rbx
  4115f2:	call   0x414b60
  4115f7:	jmp    0x4114d1
  4115fc:	lea    r8,[rip+0x3d854]        # 0x44ee57
  411603:	mov    edx,0x3
  411608:	mov    rcx,rbx
  41160b:	call   0x414b60
  411610:	jmp    0x4114d1
  411615:	lea    r8,[rip+0x3d7bf]        # 0x44eddb
  41161c:	mov    edx,0x3
  411621:	mov    rcx,rbx
  411624:	call   0x414b60
  411629:	xor    eax,eax
  41162b:	jmp    0x4114d3
  411630:	push   rbp
  411631:	push   rdi
  411632:	push   rsi
  411633:	push   rbx
  411634:	sub    rsp,0x28
  411638:	mov    rsi,QWORD PTR [rcx+0x20]
  41163c:	mov    rdi,rdx
  41163f:	lea    rbp,[rcx+0x20]
  411643:	test   rsi,rsi
  411646:	jne    0x41165d
  411648:	jmp    0x4116a0
  41164a:	nop    WORD PTR [rax+rax*1+0x0]
  411650:	mov    rbp,QWORD PTR [rbp+0x0]
  411654:	mov    rsi,QWORD PTR [rbp+0x0]
  411658:	test   rsi,rsi
  41165b:	je     0x4116a0
  41165d:	mov    eax,DWORD PTR [rsi+0x8]
  411660:	cmp    eax,DWORD PTR [rdi+0x8]
  411663:	jne    0x411650
  411665:	test   eax,eax
  411667:	je     0x4116a0
  411669:	xor    ebx,ebx
  41166b:	jmp    0x41167a
  41166d:	nop    DWORD PTR [rax]
  411670:	mov    ecx,DWORD PTR [rsi+0x8]
  411673:	add    ebx,0x1
  411676:	cmp    ecx,ebx
  411678:	jbe    0x41169b
  41167a:	mov    ecx,ebx
  41167c:	lea    rax,[rcx+rcx*2]
  411680:	lea    rcx,[rax*8+0x10]
  411688:	lea    rdx,[rdi+rcx*1]
  41168c:	add    rcx,rsi
  41168f:	call   0x41c960
  411694:	test   eax,eax
  411696:	jne    0x411670
  411698:	mov    ecx,DWORD PTR [rsi+0x8]
  41169b:	cmp    ecx,ebx
  41169d:	jne    0x411650
  41169f:	nop
  4116a0:	mov    rax,rbp
  4116a3:	add    rsp,0x28
  4116a7:	pop    rbx
  4116a8:	pop    rsi
  4116a9:	pop    rdi
  4116aa:	pop    rbp
  4116ab:	ret    
  4116ac:	nop    DWORD PTR [rax+0x0]
  4116b0:	push   r12
  4116b2:	push   rbp
  4116b3:	push   rdi
  4116b4:	push   rsi
  4116b5:	push   rbx
  4116b6:	sub    rsp,0x20
  4116ba:	mov    r12d,0x400
  4116c0:	xor    edi,edi
  4116c2:	mov    rsi,rcx
  4116c5:	mov    ecx,0x400
  4116ca:	call   0x43baf0
  4116cf:	mov    rbp,rax
  4116d2:	mov    rcx,rsi
  4116d5:	call   0x40ec60
  4116da:	movzx  r8d,BYTE PTR [rax+0x4]
  4116df:	mov    rbx,rax
  4116e2:	cmp    r8b,0x51
  4116e6:	je     0x4116d2
  4116e8:	cmp    r8b,0x2
  4116ec:	je     0x41176b
  4116ee:	cmp    r8b,0x16
  4116f2:	je     0x411757
  4116f4:	mov    rcx,rax
  4116f7:	call   0x41c550
  4116fc:	lea    r8d,[rax+0x2]
  411700:	lea    rax,[r8+rdi*1]
  411704:	cmp    r12,rax
  411707:	jb     0x411740
  411709:	test   BYTE PTR [rbx+0x6],0x1
  41170d:	je     0x411718
  41170f:	mov    BYTE PTR [rbp+rdi*1+0x0],0x20
  411714:	add    rdi,0x1
  411718:	lea    r8,[rbp+rdi*1+0x0]
  41171d:	mov    r9d,0x1
  411723:	mov    rdx,rbx
  411726:	mov    rcx,rsi
  411729:	call   0x41c590
  41172e:	sub    rax,rbp
  411731:	mov    rdi,rax
  411734:	jmp    0x4116d2
  411736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411740:	add    r8,r12
  411743:	mov    rcx,rbp
  411746:	lea    r12,[r8+r8*1]
  41174a:	mov    rdx,r12
  41174d:	call   0x43bb70
  411752:	mov    rbp,rax
  411755:	jmp    0x411709
  411757:	lea    r8,[rip+0x3d71a]        # 0x44ee78
  41175e:	mov    edx,0x3
  411763:	mov    rcx,rsi
  411766:	call   0x414b60
  41176b:	mov    rax,rbp
  41176e:	mov    BYTE PTR [rbp+rdi*1+0x0],0x0
  411773:	add    rsp,0x20
  411777:	pop    rbx
  411778:	pop    rsi
  411779:	pop    rdi
  41177a:	pop    rbp
  41177b:	pop    r12
  41177d:	ret    
  41177e:	xchg   ax,ax
  411780:	push   r12
  411782:	push   rbp
  411783:	push   rdi
  411784:	push   rsi
  411785:	push   rbx
  411786:	sub    rsp,0x30
  41178a:	mov    rax,QWORD PTR [rcx+0x1a8]
  411791:	mov    esi,edx
  411793:	xor    edx,edx
  411795:	test   r9d,r9d
  411798:	mov    rbx,rcx
  41179b:	mov    ebp,r8d
  41179e:	mov    r12d,DWORD PTR [rax-0x18]
  4117a2:	je     0x4117af
  4117a4:	mov    rax,QWORD PTR [rcx+0x90]
  4117ab:	mov    rdx,QWORD PTR [rax+0x8]
  4117af:	add    BYTE PTR [rbx+0x18],0x1
  4117b3:	mov    rcx,rbx
  4117b6:	call   0x41cd60
  4117bb:	sub    BYTE PTR [rbx+0x18],0x1
  4117bf:	test   ebp,ebp
  4117c1:	mov    rdi,rax
  4117c4:	setne  al
  4117c7:	cmp    esi,0x1
  4117ca:	mov    QWORD PTR [rsp+0x28],rdi
  4117cf:	jne    0x4117d5
  4117d1:	test   al,al
  4117d3:	jne    0x411830
  4117d5:	test   esi,esi
  4117d7:	jne    0x411810
  4117d9:	test   al,al
  4117db:	je     0x411810
  4117dd:	lea    rax,[rip+0x3d6b4]        # 0x44ee98
  4117e4:	xor    r9d,r9d
  4117e7:	mov    r8d,r12d
  4117ea:	mov    edx,ebp
  4117ec:	mov    rcx,rbx
  4117ef:	mov    QWORD PTR [rsp+0x20],rax
  4117f4:	call   0x414c80
  4117f9:	mov    rcx,rdi
  4117fc:	add    rsp,0x30
  411800:	pop    rbx
  411801:	pop    rsi
  411802:	pop    rdi
  411803:	pop    rbp
  411804:	pop    r12
  411806:	jmp    0x4494c8
  41180b:	nop    DWORD PTR [rax+rax*1+0x0]
  411810:	lea    rax,[rip+0x3d681]        # 0x44ee98
  411817:	xor    r9d,r9d
  41181a:	mov    r8d,r12d
  41181d:	mov    edx,esi
  41181f:	mov    rcx,rbx
  411822:	mov    QWORD PTR [rsp+0x20],rax
  411827:	call   0x414c40
  41182c:	jmp    0x4117f9
  41182e:	xchg   ax,ax
  411830:	lea    rax,[rip+0x3d661]        # 0x44ee98
  411837:	xor    r9d,r9d
  41183a:	mov    r8d,r12d
  41183d:	mov    edx,ebp
  41183f:	mov    rcx,rbx
  411842:	mov    QWORD PTR [rsp+0x20],rax
  411847:	call   0x414d10
  41184c:	jmp    0x4117f9
  41184e:	xchg   ax,ax
  411850:	mov    r9d,0x1
  411856:	mov    r8d,0x12
  41185c:	mov    edx,0x1
  411861:	jmp    0x411780
  411866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411870:	mov    r9d,0x1
  411876:	xor    r8d,r8d
  411879:	mov    edx,0x3
  41187e:	jmp    0x411780
  411883:	nop    DWORD PTR [rax]
  411886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411890:	push   r12
  411892:	push   rbp
  411893:	push   rdi
  411894:	push   rsi
  411895:	push   rbx
  411896:	sub    rsp,0x50
  41189a:	add    BYTE PTR [rcx+0x18],0x1
  41189e:	lea    rdx,[rsp+0x2c]
  4118a3:	mov    rsi,rcx
  4118a6:	mov    DWORD PTR [rsp+0x2c],0x0
  4118ae:	call   0x40ece0
  4118b3:	mov    rdi,rax
  4118b6:	mov    rax,QWORD PTR [rax]
  4118b9:	cmp    BYTE PTR [rdi+0x4],0x35
  4118bd:	mov    rdx,QWORD PTR [rdi+0x10]
  4118c1:	mov    QWORD PTR [rsp+0x30],rax
  4118c6:	mov    rax,QWORD PTR [rdi+0x8]
  4118ca:	mov    QWORD PTR [rsp+0x40],rdx
  4118cf:	mov    QWORD PTR [rsp+0x38],rax
  4118d4:	je     0x411910
  4118d6:	cmp    QWORD PTR [rsi+0x3a0],0x0
  4118de:	mov    edx,0x1
  4118e3:	je     0x4118f9
  4118e5:	mov    rcx,rsi
  4118e8:	call   0x40ccd0
  4118ed:	mov    edx,DWORD PTR [rsi+0x30]
  4118f0:	mov    rcx,rsi
  4118f3:	call   QWORD PTR [rsi+0x3a0]
  4118f9:	movzx  eax,BYTE PTR [rsi+0x18]
  4118fd:	sub    eax,0x1
  411900:	mov    BYTE PTR [rsi+0x18],al
  411903:	add    rsp,0x50
  411907:	pop    rbx
  411908:	pop    rsi
  411909:	pop    rdi
  41190a:	pop    rbp
  41190b:	pop    r12
  41190d:	ret    
  41190e:	xchg   ax,ax
  411910:	mov    rbx,QWORD PTR [rsi+0x360]
  411917:	test   rbx,rbx
  41191a:	jne    0x411928
  41191c:	jmp    0x4118d6
  41191e:	xchg   ax,ax
  411920:	mov    rbx,QWORD PTR [rbx]
  411923:	test   rbx,rbx
  411926:	je     0x4118d6
  411928:	cmp    rax,QWORD PTR [rbx+0x8]
  41192c:	jne    0x411920
  41192e:	cmp    BYTE PTR [rbx+0x10],0x0
  411932:	je     0x411a10
  411938:	movzx  r12d,BYTE PTR [rbx+0x13]
  41193d:	test   r12b,r12b
  411940:	je     0x411aa0
  411946:	sub    BYTE PTR [rsi+0x18],0x1
  41194a:	mov    rcx,rsi
  41194d:	call   0x40ec60
  411952:	cmp    BYTE PTR [rax+0x4],0x35
  411956:	mov    rbp,rax
  411959:	je     0x4119df
  41195f:	add    BYTE PTR [rsi+0x18],0x1
  411963:	cmp    QWORD PTR [rsi+0x3a0],0x0
  41196b:	je     0x4118f9
  41196d:	mov    rax,QWORD PTR [rsi+0x88]
  411974:	cmp    QWORD PTR [rax+0x8],0x0
  411979:	je     0x411ad0
  41197f:	mov    ecx,0x30
  411984:	call   0x43baf0
  411989:	mov    r8,rax
  41198c:	mov    rax,QWORD PTR [rsp+0x30]
  411991:	mov    r9d,0x2
  411997:	xor    edx,edx
  411999:	mov    rcx,rsi
  41199c:	mov    QWORD PTR [r8],rax
  41199f:	mov    rax,QWORD PTR [rsp+0x38]
  4119a4:	or     WORD PTR [r8+0x6],0x20
  4119aa:	mov    QWORD PTR [r8+0x8],rax
  4119ae:	mov    rax,QWORD PTR [rsp+0x40]
  4119b3:	mov    QWORD PTR [r8+0x10],rax
  4119b7:	mov    rax,QWORD PTR [rbp+0x0]
  4119bb:	mov    QWORD PTR [r8+0x18],rax
  4119bf:	mov    rax,QWORD PTR [rbp+0x8]
  4119c3:	mov    QWORD PTR [r8+0x20],rax
  4119c7:	mov    rax,QWORD PTR [rbp+0x10]
  4119cb:	or     WORD PTR [r8+0x1e],0x20
  4119d1:	mov    QWORD PTR [r8+0x28],rax
  4119d5:	call   0x40c980
  4119da:	jmp    0x4118ed
  4119df:	mov    rbx,QWORD PTR [rbx+0x18]
  4119e3:	mov    rax,QWORD PTR [rax+0x8]
  4119e7:	test   rbx,rbx
  4119ea:	jne    0x4119fd
  4119ec:	jmp    0x41195f
  4119f1:	mov    rbx,QWORD PTR [rbx]
  4119f4:	test   rbx,rbx
  4119f7:	je     0x411ada
  4119fd:	cmp    rax,QWORD PTR [rbx+0x8]
  411a01:	jne    0x4119f1
  411a03:	test   r12b,r12b
  411a06:	je     0x411a10
  411a08:	add    BYTE PTR [rsi+0x18],0x1
  411a0c:	nop    DWORD PTR [rax+0x0]
  411a10:	cmp    BYTE PTR [rbx+0x12],0x0
  411a14:	je     0x411a60
  411a16:	mov    eax,DWORD PTR [rsp+0x2c]
  411a1a:	mov    BYTE PTR [rsi+0x9c],0x4f
  411a21:	mov    DWORD PTR [rsi+0x98],eax
  411a27:	movzx  eax,WORD PTR [rdi+0x6]
  411a2b:	mov    WORD PTR [rsi+0x9e],ax
  411a32:	mov    eax,DWORD PTR [rbx+0x18]
  411a35:	mov    BYTE PTR [rsi+0x20],0x1
  411a39:	mov    DWORD PTR [rsi+0xa0],eax
  411a3f:	movzx  eax,BYTE PTR [rbx+0x13]
  411a43:	mov    BYTE PTR [rsi+0x21],al
  411a46:	cmp    BYTE PTR [rbx+0x13],0x0
  411a4a:	movzx  eax,BYTE PTR [rsi+0x18]
  411a4e:	jne    0x4118fd
  411a54:	add    eax,0x1
  411a57:	jmp    0x4118fd
  411a5c:	nop    DWORD PTR [rax+0x0]
  411a60:	mov    rax,QWORD PTR [rsi+0x368]
  411a67:	test   rax,rax
  411a6a:	je     0x411a77
  411a6c:	xor    r8d,r8d
  411a6f:	mov    rdx,rdi
  411a72:	mov    rcx,rsi
  411a75:	call   rax
  411a77:	cmp    BYTE PTR [rbx+0x13],0x0
  411a7b:	je     0x411a81
  411a7d:	sub    BYTE PTR [rsi+0x18],0x1
  411a81:	mov    rcx,rsi
  411a84:	call   QWORD PTR [rbx+0x18]
  411a87:	cmp    BYTE PTR [rbx+0x13],0x0
  411a8b:	movzx  eax,BYTE PTR [rsi+0x18]
  411a8f:	je     0x4118fd
  411a95:	jmp    0x411a54
  411a97:	nop    WORD PTR [rax+rax*1+0x0]
  411aa0:	mov    rcx,rsi
  411aa3:	call   0x40ec60
  411aa8:	cmp    BYTE PTR [rax+0x4],0x35
  411aac:	mov    rbp,rax
  411aaf:	jne    0x411963
  411ab5:	mov    rbx,QWORD PTR [rbx+0x18]
  411ab9:	mov    rax,QWORD PTR [rax+0x8]
  411abd:	test   rbx,rbx
  411ac0:	jne    0x4119fd
  411ac6:	jmp    0x411963
  411acb:	nop    DWORD PTR [rax+rax*1+0x0]
  411ad0:	mov    edx,0x2
  411ad5:	jmp    0x4118e5
  411ada:	test   r12b,r12b
  411add:	je     0x411963
  411ae3:	jmp    0x41195f
  411ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  411af0:	push   r14
  411af2:	push   rdi
  411af3:	push   rsi
  411af4:	push   rbx
  411af5:	sub    rsp,0x38
  411af9:	mov    r11,QWORD PTR [rcx+0x328]
  411b00:	mov    rax,QWORD PTR [rcx+0x320]
  411b07:	mov    edi,edx
  411b09:	mov    rbx,rcx
  411b0c:	mov    rsi,QWORD PTR [rcx]
  411b0f:	mov    rdx,r11
  411b12:	sub    rdx,rax
  411b15:	cmp    rdx,0x1f
  411b19:	jle    0x411be0
  411b1f:	mov    r10,QWORD PTR [rbx+0x318]
  411b26:	add    rax,0x20
  411b2a:	mov    QWORD PTR [rbx+0x320],rax
  411b31:	cmp    rax,r10
  411b34:	je     0x411c30
  411b3a:	movsxd rdx,DWORD PTR [rbx+0x338]
  411b41:	mov    r14,r11
  411b44:	mov    rcx,rdx
  411b47:	add    rax,rdx
  411b4a:	mov    rdx,QWORD PTR [rbx+0x310]
  411b51:	not    ecx
  411b53:	movsxd rcx,ecx
  411b56:	and    rax,rcx
  411b59:	sub    r14,rdx
  411b5c:	mov    rcx,rax
  411b5f:	mov    QWORD PTR [rbx+0x320],rax
  411b66:	sub    rcx,rdx
  411b69:	cmp    rcx,r14
  411b6c:	jle    0x411b78
  411b6e:	mov    QWORD PTR [rbx+0x320],r11
  411b75:	mov    rax,r11
  411b78:	mov    QWORD PTR [rbx+0x318],rax
  411b7f:	mov    eax,DWORD PTR [rbx+0x30]
  411b82:	test   edi,edi
  411b84:	sete   dl
  411b87:	mov    DWORD PTR [r10+0x8],eax
  411b8b:	mov    rax,QWORD PTR [rsi+0x60]
  411b8f:	mov    QWORD PTR [r10],rax
  411b92:	cmp    BYTE PTR [rbx+0x12],0x0
  411b96:	setne  al
  411b99:	or     eax,edx
  411b9b:	mov    BYTE PTR [r10+0x18],al
  411b9f:	cmp    BYTE PTR [rbx+0x12],0x0
  411ba3:	mov    DWORD PTR [r10+0x1c],r8d
  411ba7:	setne  BYTE PTR [r10+0x19]
  411bac:	cmp    BYTE PTR [rbx+0x1a0],0x0
  411bb3:	je     0x411bbf
  411bb5:	cmp    QWORD PTR [rbx+0x190],0x0
  411bbd:	je     0x411c20
  411bbf:	mov    QWORD PTR [r10+0x10],0x0
  411bc7:	mov    BYTE PTR [rbx+0x12],dil
  411bcb:	mov    QWORD PTR [rsi+0x60],r10
  411bcf:	add    rsp,0x38
  411bd3:	pop    rbx
  411bd4:	pop    rsi
  411bd5:	pop    rdi
  411bd6:	pop    r14
  411bd8:	ret    
  411bd9:	nop    DWORD PTR [rax+0x0]
  411be0:	lea    rcx,[rcx+0x308]
  411be7:	mov    edx,0x20
  411bec:	mov    QWORD PTR [rsp+0x28],r9
  411bf1:	mov    DWORD PTR [rsp+0x24],r8d
  411bf6:	call   0x439960
  411bfb:	mov    rax,QWORD PTR [rbx+0x320]
  411c02:	mov    r11,QWORD PTR [rbx+0x328]
  411c09:	mov    r9,QWORD PTR [rsp+0x28]
  411c0e:	mov    r8d,DWORD PTR [rsp+0x24]
  411c13:	jmp    0x411b1f
  411c18:	nop    DWORD PTR [rax+rax*1+0x0]
  411c20:	mov    QWORD PTR [r10+0x10],r9
  411c24:	jmp    0x411bc7
  411c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c30:	or     BYTE PTR [rbx+0x358],0x2
  411c37:	jmp    0x411b3a
  411c3c:	nop    DWORD PTR [rax+0x0]
  411c40:	push   rbx
  411c41:	sub    rsp,0x20
  411c45:	cmp    BYTE PTR [rcx+0x12],0x0
  411c49:	mov    edx,0x1
  411c4e:	mov    rbx,rcx
  411c51:	jne    0x411c5e
  411c53:	call   0x416d10
  411c58:	xor    eax,0x1
  411c5b:	movzx  edx,al
  411c5e:	mov    r9,QWORD PTR [rbx+0x198]
  411c65:	mov    r8d,0x4
  411c6b:	mov    rcx,rbx
  411c6e:	add    rsp,0x20
  411c72:	pop    rbx
  411c73:	jmp    0x411af0
  411c78:	nop    DWORD PTR [rax+rax*1+0x0]
  411c80:	push   rsi
  411c81:	push   rbx
  411c82:	sub    rsp,0x28
  411c86:	mov    edx,0x1
  411c8b:	mov    rbx,rcx
  411c8e:	call   0x4111b0
  411c93:	test   rax,rax
  411c96:	mov    rsi,rax
  411c99:	je     0x411ce3
  411c9b:	cmp    BYTE PTR [rbx+0x41c],0x0
  411ca2:	mov    rax,QWORD PTR [rbx+0x3e0]
  411ca9:	sete   BYTE PTR [rbx+0x15]
  411cad:	test   rax,rax
  411cb0:	je     0x411cb7
  411cb2:	mov    rcx,rbx
  411cb5:	call   rax
  411cb7:	mov    rdx,rsi
  411cba:	mov    rcx,rbx
  411cbd:	call   0x40edf0
  411cc2:	test   al,al
  411cc4:	je     0x411cdd
  411cc6:	mov    rax,QWORD PTR [rbx+0x388]
  411ccd:	test   rax,rax
  411cd0:	je     0x411cdd
  411cd2:	mov    edx,DWORD PTR [rbx+0x30]
  411cd5:	mov    r8,rsi
  411cd8:	mov    rcx,rbx
  411cdb:	call   rax
  411cdd:	and    WORD PTR [rsi+0x18],0xdfff
  411ce3:	add    rsp,0x28
  411ce7:	pop    rbx
  411ce8:	pop    rsi
  411ce9:	ret    
  411cea:	nop    WORD PTR [rax+rax*1+0x0]
  411cf0:	push   rsi
  411cf1:	push   rbx
  411cf2:	sub    rsp,0x28
  411cf6:	mov    rdx,QWORD PTR [rcx+0x90]
  411cfd:	lea    rax,[rip+0x3d8bc]        # 0x44f5c0
  411d04:	mov    rbx,rcx
  411d07:	cmp    rdx,rax
  411d0a:	je     0x411d71
  411d0c:	test   rdx,rdx
  411d0f:	je     0x411da0
  411d15:	movzx  eax,BYTE PTR [rdx+0x13]
  411d19:	shr    al,0x4
  411d1c:	xor    eax,0x1
  411d1f:	and    eax,0x1
  411d22:	cmp    BYTE PTR [rcx+0x12],0x0
  411d26:	lea    rcx,[rip+0x3d8f3]        # 0x44f620
  411d2d:	setne  sil
  411d31:	cmp    rdx,rcx
  411d34:	je     0x411d94
  411d36:	lea    rcx,[rip+0x3d95b]        # 0x44f698
  411d3d:	cmp    rdx,rcx
  411d40:	je     0x411d94
  411d42:	mov    BYTE PTR [rbx+0x14],0x0
  411d46:	test   al,al
  411d48:	jne    0x411d80
  411d4a:	xor    edx,edx
  411d4c:	mov    rcx,rbx
  411d4f:	call   0x410100
  411d54:	mov    rdx,QWORD PTR [rbx+0x4d0]
  411d5b:	mov    r8,QWORD PTR [rbx+0x4e0]
  411d62:	mov    rcx,rbx
  411d65:	mov    BYTE PTR [rbx+0x12],sil
  411d69:	sub    r8,rdx
  411d6c:	call   0x410080
  411d71:	add    BYTE PTR [rbx+0x18],0x1
  411d75:	add    rsp,0x28
  411d79:	pop    rbx
  411d7a:	pop    rsi
  411d7b:	ret    
  411d7c:	nop    DWORD PTR [rax+0x0]
  411d80:	add    BYTE PTR [rbx+0x18],0x1
  411d84:	xor    edx,edx
  411d86:	mov    rcx,rbx
  411d89:	call   0x410100
  411d8e:	sub    BYTE PTR [rbx+0x18],0x1
  411d92:	jmp    0x411d54
  411d94:	mov    BYTE PTR [rbx+0x14],0x1
  411d98:	mov    BYTE PTR [rbx+0x12],0x0
  411d9c:	jmp    0x411d46
  411d9e:	xchg   ax,ax
  411da0:	cmp    BYTE PTR [rcx+0x12],0x0
  411da4:	setne  sil
  411da8:	xor    eax,eax
  411daa:	jmp    0x411d42
  411dac:	nop    DWORD PTR [rax+0x0]
  411db0:	push   rbp
  411db1:	push   rdi
  411db2:	push   rsi
  411db3:	push   rbx
  411db4:	sub    rsp,0x28
  411db8:	test   rdx,rdx
  411dbb:	mov    rbp,rcx
  411dbe:	mov    rbx,rdx
  411dc1:	mov    rsi,r8
  411dc4:	jne    0x411e02
  411dc6:	jmp    0x411e20
  411dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  411dd0:	mov    rdi,QWORD PTR [rsi]
  411dd3:	add    rsi,0x8
  411dd7:	mov    rcx,rdi
  411dda:	call   0x4493c0
  411ddf:	mov    rdx,rdi
  411de2:	mov    r8d,eax
  411de5:	mov    rcx,rbp
  411de8:	call   0x41b3b0
  411ded:	mov    QWORD PTR [rbx+0x8],rax
  411df1:	mov    rcx,QWORD PTR [rsi-0x8]
  411df5:	call   0x4494c8
  411dfa:	mov    rbx,QWORD PTR [rbx]
  411dfd:	test   rbx,rbx
  411e00:	je     0x411e20
  411e02:	cmp    BYTE PTR [rbx+0x10],0x0
  411e06:	je     0x411dd0
  411e08:	mov    rdx,QWORD PTR [rbx+0x18]
  411e0c:	mov    r8,rsi
  411e0f:	mov    rcx,rbp
  411e12:	call   0x411db0
  411e17:	mov    rsi,rax
  411e1a:	jmp    0x411dd0
  411e1c:	nop    DWORD PTR [rax+0x0]
  411e20:	mov    rax,rsi
  411e23:	add    rsp,0x28
  411e27:	pop    rbx
  411e28:	pop    rsi
  411e29:	pop    rdi
  411e2a:	pop    rbp
  411e2b:	ret    
  411e2c:	nop    DWORD PTR [rax+0x0]
  411e30:	push   rdi
  411e31:	push   rsi
  411e32:	push   rbx
  411e33:	sub    rsp,0x20
  411e37:	test   rcx,rcx
  411e3a:	mov    rbx,rcx
  411e3d:	mov    rdi,rdx
  411e40:	jne    0x411e69
  411e42:	jmp    0x411e83
  411e44:	mov    rcx,QWORD PTR [rbx+0x8]
  411e48:	lea    rdi,[rsi+0x8]
  411e4c:	mov    edx,DWORD PTR [rcx+0x8]
  411e4f:	mov    rcx,QWORD PTR [rcx]
  411e52:	mov    r8,rdx
  411e55:	add    r8d,0x1
  411e59:	call   0x43bbc0
  411e5e:	mov    QWORD PTR [rsi],rax
  411e61:	mov    rbx,QWORD PTR [rbx]
  411e64:	test   rbx,rbx
  411e67:	je     0x411e83
  411e69:	cmp    BYTE PTR [rbx+0x10],0x0
  411e6d:	mov    rsi,rdi
  411e70:	je     0x411e44
  411e72:	mov    rcx,QWORD PTR [rbx+0x18]
  411e76:	mov    rdx,rdi
  411e79:	call   0x411e30
  411e7e:	mov    rsi,rax
  411e81:	jmp    0x411e44
  411e83:	mov    rax,rdi
  411e86:	add    rsp,0x20
  411e8a:	pop    rbx
  411e8b:	pop    rsi
  411e8c:	pop    rdi
  411e8d:	ret    
  411e8e:	xchg   ax,ax
  411e90:	push   rbx
  411e91:	sub    rsp,0x20
  411e95:	mov    rax,QWORD PTR [rcx+0x1a8]
  411e9c:	mov    rbx,rcx
  411e9f:	cmp    BYTE PTR [rax-0x14],0x16
  411ea3:	je     0x411eeb
  411ea5:	test   dl,dl
  411ea7:	jne    0x411ee0
  411ea9:	call   0x41ee50
  411eae:	cmp    BYTE PTR [rax+0x4],0x16
  411eb2:	je     0x411eeb
  411eb4:	mov    rax,QWORD PTR [rbx+0x90]
  411ebb:	lea    r8,[rip+0x3cfde]        # 0x44eea0
  411ec2:	mov    edx,0x2
  411ec7:	mov    rcx,rbx
  411eca:	mov    r9,QWORD PTR [rax+0x8]
  411ece:	add    rsp,0x20
  411ed2:	pop    rbx
  411ed3:	jmp    0x414b60
  411ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  411ee0:	call   0x40ec60
  411ee5:	cmp    BYTE PTR [rax+0x4],0x16
  411ee9:	jne    0x411eb4
  411eeb:	add    rsp,0x20
  411eef:	pop    rbx
  411ef0:	ret    
  411ef1:	nop    DWORD PTR [rax+rax*1+0x0]
  411ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f00:	push   rbx
  411f01:	sub    rsp,0x20
  411f05:	mov    rbx,rcx
  411f08:	call   0x40ec60
  411f0d:	cmp    BYTE PTR [rax+0x4],0x3d
  411f11:	jne    0x411f40
  411f13:	mov    r9,QWORD PTR [rbx+0x398]
  411f1a:	test   r9,r9
  411f1d:	je     0x411f2c
  411f1f:	mov    edx,DWORD PTR [rbx+0x30]
  411f22:	lea    r8,[rax+0x8]
  411f26:	mov    rcx,rbx
  411f29:	call   r9
  411f2c:	xor    edx,edx
  411f2e:	mov    rcx,rbx
  411f31:	add    rsp,0x20
  411f35:	pop    rbx
  411f36:	jmp    0x411e90
  411f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  411f40:	mov    rax,QWORD PTR [rbx+0x90]
  411f47:	lea    r8,[rip+0x3cf77]        # 0x44eec5
  411f4e:	mov    rcx,rbx
  411f51:	mov    edx,0x3
  411f56:	mov    r9,QWORD PTR [rax+0x8]
  411f5a:	call   0x414b60
  411f5f:	xor    edx,edx
  411f61:	mov    rcx,rbx
  411f64:	add    rsp,0x20
  411f68:	pop    rbx
  411f69:	jmp    0x411e90
  411f6e:	xchg   ax,ax
  411f70:	push   rsi
  411f71:	push   rbx
  411f72:	sub    rsp,0x38
  411f76:	mov    r8d,0x11
  411f7c:	lea    rdx,[rsp+0x28]
  411f81:	mov    rsi,rcx
  411f84:	call   0x4113f0
  411f89:	test   rax,rax
  411f8c:	mov    rbx,rax
  411f8f:	je     0x411f9c
  411f91:	movzx  eax,BYTE PTR [rax+0x18]
  411f95:	and    eax,0x3f
  411f98:	cmp    al,0x2
  411f9a:	je     0x411fa3
  411f9c:	add    rsp,0x38
  411fa0:	pop    rbx
  411fa1:	pop    rsi
  411fa2:	ret    
  411fa3:	mov    rdx,QWORD PTR [rsp+0x28]
  411fa8:	mov    rcx,rbx
  411fab:	test   rdx,rdx
  411fae:	je     0x411ff0
  411fb0:	call   0x411630
  411fb5:	mov    rdx,QWORD PTR [rax]
  411fb8:	test   rdx,rdx
  411fbb:	je     0x411fc3
  411fbd:	mov    rdx,QWORD PTR [rdx]
  411fc0:	mov    QWORD PTR [rax],rdx
  411fc3:	cmp    QWORD PTR [rbx+0x20],0x0
  411fc8:	je     0x411fe0
  411fca:	xor    edx,edx
  411fcc:	mov    rcx,rsi
  411fcf:	call   0x411e90
  411fd4:	nop
  411fd5:	add    rsp,0x38
  411fd9:	pop    rbx
  411fda:	pop    rsi
  411fdb:	ret    
  411fdc:	nop    DWORD PTR [rax+0x0]
  411fe0:	and    BYTE PTR [rbx+0x18],0xc0
  411fe4:	jmp    0x411fca
  411fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411ff0:	call   0x40ecf0
  411ff5:	jmp    0x411f9c
  411ff7:	nop    WORD PTR [rax+rax*1+0x0]
  412000:	push   rbp
  412001:	push   rdi
  412002:	push   rsi
  412003:	push   rbx
  412004:	sub    rsp,0x38
  412008:	mov    r8d,0x10
  41200e:	lea    rdx,[rsp+0x28]
  412013:	mov    rdi,rcx
  412016:	call   0x4113f0
  41201b:	test   rax,rax
  41201e:	mov    rbx,rax
  412021:	je     0x412095
  412023:	mov    rsi,QWORD PTR [rsp+0x28]
  412028:	mov    QWORD PTR [rsi],0x0
  41202f:	movzx  eax,BYTE PTR [rax+0x18]
  412033:	and    eax,0x3f
  412036:	cmp    al,0x2
  412038:	je     0x4120b0
  41203a:	mov    eax,DWORD PTR [rsi+0x8]
  41203d:	sub    eax,0x1
  412040:	lea    rax,[rax+rax*2]
  412044:	lea    rbp,[rax*8+0x28]
  41204c:	mov    rax,QWORD PTR [rdi+0x3f8]
  412053:	mov    rax,QWORD PTR [rax+0x68]
  412057:	test   rax,rax
  41205a:	je     0x4120a0
  41205c:	mov    rcx,rbp
  41205f:	call   rax
  412061:	mov    rdx,rsi
  412064:	mov    r8,rbp
  412067:	mov    rcx,rax
  41206a:	mov    QWORD PTR [rsp+0x28],rax
  41206f:	call   0x449450
  412074:	mov    rsi,QWORD PTR [rsp+0x28]
  412079:	movzx  eax,BYTE PTR [rbx+0x18]
  41207d:	mov    QWORD PTR [rbx+0x20],rsi
  412081:	xor    edx,edx
  412083:	mov    rcx,rdi
  412086:	and    eax,0xffffffc0
  412089:	or     eax,0x2
  41208c:	mov    BYTE PTR [rbx+0x18],al
  41208f:	call   0x411e90
  412094:	nop
  412095:	add    rsp,0x38
  412099:	pop    rbx
  41209a:	pop    rsi
  41209b:	pop    rdi
  41209c:	pop    rbp
  41209d:	ret    
  41209e:	xchg   ax,ax
  4120a0:	mov    rax,QWORD PTR [rdi+0x38]
  4120a4:	add    QWORD PTR [rax+0x10],rbp
  4120a8:	jmp    0x412079
  4120aa:	nop    WORD PTR [rax+rax*1+0x0]
  4120b0:	mov    rdx,rsi
  4120b3:	mov    rcx,rbx
  4120b6:	call   0x411630
  4120bb:	cmp    QWORD PTR [rax],0x0
  4120bf:	je     0x4120e0
  4120c1:	mov    r9,QWORD PTR [rbx]
  4120c4:	lea    r8,[rip+0x3ce10]        # 0x44eedb
  4120cb:	xor    edx,edx
  4120cd:	mov    rcx,rdi
  4120d0:	add    r9,0x1
  4120d4:	call   0x414b60
  4120d9:	jmp    0x412095
  4120db:	nop    DWORD PTR [rax+rax*1+0x0]
  4120e0:	mov    rsi,QWORD PTR [rsp+0x28]
  4120e5:	mov    rax,QWORD PTR [rbx+0x20]
  4120e9:	mov    QWORD PTR [rsi],rax
  4120ec:	jmp    0x41203a
  4120f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4120f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412100:	push   r15
  412102:	push   r14
  412104:	push   r13
  412106:	push   r12
  412108:	push   rbp
  412109:	push   rdi
  41210a:	push   rsi
  41210b:	push   rbx
  41210c:	sub    rsp,0x28
  412110:	mov    rsi,rcx
  412113:	mov    rbp,rdx
  412116:	mov    r12,r8
  412119:	mov    rdi,r9
  41211c:	nop    DWORD PTR [rax+0x0]
  412120:	mov    rcx,rsi
  412123:	call   0x40ec60
  412128:	cmp    BYTE PTR [rax+0x4],0x51
  41212c:	mov    rbx,rax
  41212f:	je     0x412120
  412131:	mov    eax,DWORD PTR [rax]
  412133:	mov    DWORD PTR [rdi],eax
  412135:	movzx  eax,BYTE PTR [rbx+0x4]
  412139:	cmp    al,0x3d
  41213b:	je     0x4121a2
  41213d:	cmp    al,0x43
  41213f:	je     0x4121ab
  412141:	cmp    al,0x3
  412143:	jne    0x4121f0
  412149:	mov    rcx,rsi
  41214c:	call   0x4116b0
  412151:	mov    DWORD PTR [rbp+0x0],0x1
  412158:	mov    rdi,rax
  41215b:	lea    rax,[rip+0x3d566]        # 0x44f6c8
  412162:	cmp    QWORD PTR [rsi+0x90],rax
  412169:	je     0x4122f0
  41216f:	test   r12,r12
  412172:	je     0x412181
  412174:	cmp    BYTE PTR [rsi+0x41b],0x0
  41217b:	je     0x412230
  412181:	mov    edx,0x1
  412186:	mov    rcx,rsi
  412189:	call   0x411e90
  41218e:	mov    rax,rdi
  412191:	add    rsp,0x28
  412195:	pop    rbx
  412196:	pop    rsi
  412197:	pop    rdi
  412198:	pop    rbp
  412199:	pop    r12
  41219b:	pop    r13
  41219d:	pop    r14
  41219f:	pop    r15
  4121a1:	ret    
  4121a2:	mov    rax,QWORD PTR [rbx+0x10]
  4121a6:	cmp    BYTE PTR [rax],0x52
  4121a9:	je     0x4121f0
  4121ab:	mov    eax,DWORD PTR [rbx+0x8]
  4121ae:	lea    ecx,[rax-0x1]
  4121b1:	call   0x43baf0
  4121b6:	mov    rdi,rax
  4121b9:	mov    eax,DWORD PTR [rbx+0x8]
  4121bc:	mov    rdx,QWORD PTR [rbx+0x10]
  4121c0:	mov    rcx,rdi
  4121c3:	lea    r8d,[rax-0x2]
  4121c7:	add    rdx,0x1
  4121cb:	call   0x449450
  4121d0:	mov    eax,DWORD PTR [rbx+0x8]
  4121d3:	sub    eax,0x2
  4121d6:	mov    BYTE PTR [rdi+rax*1],0x0
  4121da:	xor    eax,eax
  4121dc:	cmp    BYTE PTR [rbx+0x4],0x43
  4121e0:	sete   al
  4121e3:	mov    DWORD PTR [rbp+0x0],eax
  4121e6:	jmp    0x41215b
  4121eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4121f0:	mov    rax,QWORD PTR [rsi+0x90]
  4121f7:	lea    rdx,[rip+0x3d4ca]        # 0x44f6c8
  4121fe:	cmp    rax,rdx
  412201:	je     0x4122fc
  412207:	mov    r9,QWORD PTR [rax+0x8]
  41220b:	lea    r8,[rip+0x3ccee]        # 0x44ef00
  412212:	mov    edx,0x3
  412217:	mov    rcx,rsi
  41221a:	call   0x414b60
  41221f:	xor    eax,eax
  412221:	jmp    0x412191
  412226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412230:	mov    ecx,0x40
  412235:	call   0x43baf0
  41223a:	mov    r13,rax
  41223d:	mov    rax,QWORD PTR [rsi+0x1a8]
  412244:	cmp    BYTE PTR [rax-0x14],0x16
  412248:	je     0x4122f8
  41224e:	mov    r14d,0x8
  412254:	xor    ebp,ebp
  412256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412260:	mov    rcx,rsi
  412263:	call   0x41ee50
  412268:	movzx  edx,BYTE PTR [rax+0x4]
  41226c:	mov    rbx,rax
  41226f:	cmp    dl,0x16
  412272:	je     0x4122d0
  412274:	cmp    dl,0x4d
  412277:	je     0x4122a0
  412279:	mov    rax,QWORD PTR [rsi+0x90]
  412280:	lea    r8,[rip+0x3cc19]        # 0x44eea0
  412287:	mov    edx,0x2
  41228c:	mov    rcx,rsi
  41228f:	mov    r9,QWORD PTR [rax+0x8]
  412293:	call   0x414b60
  412298:	jmp    0x412260
  41229a:	nop    WORD PTR [rax+rax*1+0x0]
  4122a0:	lea    r15,[rbp+0x1]
  4122a4:	cmp    r15,r14
  4122a7:	jae    0x4122b3
  4122a9:	mov    QWORD PTR [r13+rbp*8+0x0],rbx
  4122ae:	mov    rbp,r15
  4122b1:	jmp    0x412260
  4122b3:	add    r14,r14
  4122b6:	mov    rcx,r13
  4122b9:	lea    rdx,[r14*8+0x0]
  4122c1:	call   0x43bb70
  4122c6:	mov    r13,rax
  4122c9:	jmp    0x4122a9
  4122cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4122d0:	shl    rbp,0x3
  4122d4:	mov    QWORD PTR [r13+rbp*1+0x0],0x0
  4122dd:	mov    rax,rdi
  4122e0:	mov    QWORD PTR [r12],r13
  4122e4:	jmp    0x412191
  4122e9:	nop    DWORD PTR [rax+0x0]
  4122f0:	mov    rax,rdi
  4122f3:	jmp    0x412191
  4122f8:	xor    ebp,ebp
  4122fa:	jmp    0x4122d4
  4122fc:	lea    r9,[rip+0x3cbe9]        # 0x44eeec
  412303:	jmp    0x41220b
  412308:	nop    DWORD PTR [rax+rax*1+0x0]
  412310:	push   rsi
  412311:	push   rbx
  412312:	sub    rsp,0x38
  412316:	xor    r8d,r8d
  412319:	lea    rdx,[rsp+0x28]
  41231e:	lea    r9,[rsp+0x2c]
  412323:	mov    rbx,rcx
  412326:	call   0x412100
  41232b:	test   rax,rax
  41232e:	mov    rsi,rax
  412331:	je     0x412391
  412333:	mov    r8d,DWORD PTR [rsp+0x28]
  412338:	mov    rdx,rax
  41233b:	mov    rcx,rbx
  41233e:	call   0x41ac50
  412343:	test   eax,eax
  412345:	js     0x4123a0
  412347:	je     0x412388
  412349:	lea    r8,[rip+0x3cbf0]        # 0x44ef40
  412350:	xor    edx,edx
  412352:	mov    r9,rsi
  412355:	mov    rcx,rbx
  412358:	call   0x414b60
  41235d:	mov    rcx,rbx
  412360:	call   0x40ec60
  412365:	cmp    BYTE PTR [rax+0x4],0x16
  412369:	je     0x412388
  41236b:	mov    edx,0x1
  412370:	mov    rcx,rbx
  412373:	call   0x40ccd0
  412378:	xor    r9d,r9d
  41237b:	xor    r8d,r8d
  41237e:	xor    edx,edx
  412380:	mov    rcx,rbx
  412383:	call   0x411780
  412388:	mov    rcx,rsi
  41238b:	call   0x4494c8
  412390:	nop
  412391:	add    rsp,0x38
  412395:	pop    rbx
  412396:	pop    rsi
  412397:	ret    
  412398:	nop    DWORD PTR [rax+rax*1+0x0]
  4123a0:	lea    r8,[rip+0x3cb7e]        # 0x44ef25
  4123a7:	mov    r9,rsi
  4123aa:	xor    edx,edx
  4123ac:	mov    rcx,rbx
  4123af:	call   0x414b60
  4123b4:	jmp    0x412388
  4123b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4123c0:	push   rsi
  4123c1:	push   rbx
  4123c2:	sub    rsp,0x28
  4123c6:	mov    edx,0x1
  4123cb:	mov    rbx,rcx
  4123ce:	call   0x4111b0
  4123d3:	test   rax,rax
  4123d6:	mov    rsi,rax
  4123d9:	je     0x41240e
  4123db:	mov    rax,QWORD PTR [rbx+0x3e0]
  4123e2:	test   rax,rax
  4123e5:	je     0x4123ec
  4123e7:	mov    rcx,rbx
  4123ea:	call   rax
  4123ec:	mov    rax,QWORD PTR [rbx+0x390]
  4123f3:	test   rax,rax
  4123f6:	je     0x412403
  4123f8:	mov    edx,DWORD PTR [rbx+0x30]
  4123fb:	mov    r8,rsi
  4123fe:	mov    rcx,rbx
  412401:	call   rax
  412403:	movzx  eax,BYTE PTR [rsi+0x18]
  412407:	and    eax,0x3f
  41240a:	cmp    al,0x1
  41240c:	je     0x412420
  41240e:	xor    edx,edx
  412410:	mov    rcx,rbx
  412413:	add    rsp,0x28
  412417:	pop    rbx
  412418:	pop    rsi
  412419:	jmp    0x411e90
  41241e:	xchg   ax,ax
  412420:	test   BYTE PTR [rsi+0x19],0x4
  412424:	jne    0x412450
  412426:	cmp    BYTE PTR [rbx+0x434],0x0
  41242d:	jne    0x412470
  41242f:	mov    rcx,rsi
  412432:	call   0x40ecf0
  412437:	xor    edx,edx
  412439:	mov    rcx,rbx
  41243c:	add    rsp,0x28
  412440:	pop    rbx
  412441:	pop    rsi
  412442:	jmp    0x411e90
  412447:	nop    WORD PTR [rax+rax*1+0x0]
  412450:	mov    r9,QWORD PTR [rsi]
  412453:	lea    r8,[rip+0x3cb04]        # 0x44ef5e
  41245a:	xor    edx,edx
  41245c:	mov    rcx,rbx
  41245f:	call   0x414b60
  412464:	jmp    0x412426
  412466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412470:	xor    r8d,r8d
  412473:	mov    rdx,rsi
  412476:	mov    rcx,rbx
  412479:	call   0x40c3c0
  41247e:	jmp    0x41242f
  412480:	push   rdi
  412481:	push   rsi
  412482:	push   rbx
  412483:	sub    rsp,0x20
  412487:	cmp    BYTE PTR [rcx+0x12],0x0
  41248b:	mov    rbx,rcx
  41248e:	je     0x4124b1
  412490:	xor    esi,esi
  412492:	mov    edi,0x1
  412497:	mov    r9,rsi
  41249a:	mov    r8d,0x6
  4124a0:	mov    edx,edi
  4124a2:	mov    rcx,rbx
  4124a5:	add    rsp,0x20
  4124a9:	pop    rbx
  4124aa:	pop    rsi
  4124ab:	pop    rdi
  4124ac:	jmp    0x411af0
  4124b1:	xor    edx,edx
  4124b3:	call   0x4111b0
  4124b8:	test   rax,rax
  4124bb:	mov    rsi,rax
  4124be:	je     0x412490
  4124c0:	movzx  eax,BYTE PTR [rax+0x18]
  4124c4:	and    eax,0x3f
  4124c7:	cmp    al,0x1
  4124c9:	je     0x412533
  4124cb:	movzx  eax,WORD PTR [rsi+0x18]
  4124cf:	xor    edi,edi
  4124d1:	shr    ax,0x6
  4124d5:	test   al,0x80
  4124d7:	jne    0x41250d
  4124d9:	movzx  ecx,WORD PTR [rsi+0x18]
  4124dd:	mov    edx,eax
  4124df:	or     dl,0x80
  4124e2:	shl    edx,0x6
  4124e5:	and    ecx,0x3f
  4124e8:	or     edx,ecx
  4124ea:	mov    WORD PTR [rsi+0x18],dx
  4124ee:	and    edx,0x3f
  4124f1:	cmp    dl,0x1
  4124f4:	je     0x412560
  4124f6:	mov    rax,QWORD PTR [rbx+0x3d8]
  4124fd:	test   rax,rax
  412500:	je     0x41250d
  412502:	mov    edx,DWORD PTR [rbx+0x30]
  412505:	mov    r8,rsi
  412508:	mov    rcx,rbx
  41250b:	call   rax
  41250d:	mov    rax,QWORD PTR [rbx+0x3e8]
  412514:	test   rax,rax
  412517:	je     0x412524
  412519:	mov    edx,DWORD PTR [rbx+0x30]
  41251c:	mov    r8,rsi
  41251f:	mov    rcx,rbx
  412522:	call   rax
  412524:	xor    edx,edx
  412526:	mov    rcx,rbx
  412529:	call   0x411e90
  41252e:	jmp    0x412497
  412533:	movzx  edi,WORD PTR [rsi+0x18]
  412537:	mov    eax,edi
  412539:	shr    di,0xe
  41253d:	xor    edi,0x1
  412540:	shr    ax,0x6
  412544:	and    edi,0x1
  412547:	test   al,0x4
  412549:	jne    0x4124d5
  41254b:	mov    rax,QWORD PTR [rsi+0x20]
  41254f:	or     BYTE PTR [rax+0x1c],0x8
  412553:	movzx  eax,WORD PTR [rsi+0x18]
  412557:	shr    ax,0x6
  41255b:	jmp    0x4124d5
  412560:	test   al,0x4
  412562:	je     0x412578
  412564:	mov    rax,QWORD PTR [rbx+0x3f0]
  41256b:	test   rax,rax
  41256e:	je     0x412578
  412570:	mov    rdx,rsi
  412573:	mov    rcx,rbx
  412576:	call   rax
  412578:	mov    rax,QWORD PTR [rbx+0x3d0]
  41257f:	test   rax,rax
  412582:	jne    0x412502
  412588:	jmp    0x41250d
  41258a:	nop    WORD PTR [rax+rax*1+0x0]
  412590:	push   rdi
  412591:	push   rsi
  412592:	push   rbx
  412593:	sub    rsp,0x20
  412597:	cmp    BYTE PTR [rcx+0x12],0x0
  41259b:	mov    rbx,rcx
  41259e:	je     0x4125c0
  4125a0:	mov    esi,0x1
  4125a5:	xor    r9d,r9d
  4125a8:	mov    r8d,0x3
  4125ae:	mov    edx,esi
  4125b0:	mov    rcx,rbx
  4125b3:	add    rsp,0x20
  4125b7:	pop    rbx
  4125b8:	pop    rsi
  4125b9:	pop    rdi
  4125ba:	jmp    0x411af0
  4125bf:	nop
  4125c0:	xor    edx,edx
  4125c2:	call   0x4111b0
  4125c7:	test   rax,rax
  4125ca:	mov    rdi,rax
  4125cd:	je     0x4125a0
  4125cf:	movzx  eax,BYTE PTR [rax+0x18]
  4125d3:	and    eax,0x3f
  4125d6:	cmp    al,0x1
  4125d8:	je     0x412645
  4125da:	movzx  eax,WORD PTR [rdi+0x18]
  4125de:	mov    esi,0x1
  4125e3:	shr    ax,0x6
  4125e7:	test   al,0x80
  4125e9:	jne    0x41261f
  4125eb:	movzx  ecx,WORD PTR [rdi+0x18]
  4125ef:	mov    edx,eax
  4125f1:	or     dl,0x80
  4125f4:	shl    edx,0x6
  4125f7:	and    ecx,0x3f
  4125fa:	or     edx,ecx
  4125fc:	mov    WORD PTR [rdi+0x18],dx
  412600:	and    edx,0x3f
  412603:	cmp    dl,0x1
  412606:	je     0x412670
  412608:	mov    rax,QWORD PTR [rbx+0x3d8]
  41260f:	test   rax,rax
  412612:	je     0x41261f
  412614:	mov    edx,DWORD PTR [rbx+0x30]
  412617:	mov    r8,rdi
  41261a:	mov    rcx,rbx
  41261d:	call   rax
  41261f:	mov    rax,QWORD PTR [rbx+0x3e8]
  412626:	test   rax,rax
  412629:	je     0x412636
  41262b:	mov    edx,DWORD PTR [rbx+0x30]
  41262e:	mov    r8,rdi
  412631:	mov    rcx,rbx
  412634:	call   rax
  412636:	xor    edx,edx
  412638:	mov    rcx,rbx
  41263b:	call   0x411e90
  412640:	jmp    0x4125a5
  412645:	movzx  esi,WORD PTR [rdi+0x18]
  412649:	mov    eax,esi
  41264b:	shr    si,0xe
  41264f:	shr    ax,0x6
  412653:	and    esi,0x1
  412656:	test   al,0x4
  412658:	jne    0x4125e7
  41265a:	mov    rax,QWORD PTR [rdi+0x20]
  41265e:	or     BYTE PTR [rax+0x1c],0x8
  412662:	movzx  eax,WORD PTR [rdi+0x18]
  412666:	shr    ax,0x6
  41266a:	jmp    0x4125e7
  41266f:	nop
  412670:	test   al,0x4
  412672:	je     0x412688
  412674:	mov    rax,QWORD PTR [rbx+0x3f0]
  41267b:	test   rax,rax
  41267e:	je     0x412688
  412680:	mov    rdx,rdi
  412683:	mov    rcx,rbx
  412686:	call   rax
  412688:	mov    rax,QWORD PTR [rbx+0x3d0]
  41268f:	test   rax,rax
  412692:	jne    0x412614
  412694:	jmp    0x41261f
  412696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4126a0:	push   rbx
  4126a1:	sub    rsp,0x20
  4126a5:	mov    rax,QWORD PTR [rcx+0x28]
  4126a9:	mov    rbx,rcx
  4126ac:	cmp    DWORD PTR [rax+0x30],0x1
  4126b0:	je     0x4126d0
  4126b2:	xor    edx,edx
  4126b4:	mov    rcx,rbx
  4126b7:	call   0x411e90
  4126bc:	mov    rax,QWORD PTR [rbx]
  4126bf:	mov    rcx,rbx
  4126c2:	mov    rdx,QWORD PTR [rax+0x50]
  4126c6:	add    rsp,0x20
  4126ca:	pop    rbx
  4126cb:	jmp    0x41a740
  4126d0:	lea    r8,[rip+0x3c897]        # 0x44ef6e
  4126d7:	xor    edx,edx
  4126d9:	call   0x414b60
  4126de:	jmp    0x4126b2
  4126e0:	push   rsi
  4126e1:	push   rbx
  4126e2:	sub    rsp,0x38
  4126e6:	mov    rbx,rcx
  4126e9:	nop    DWORD PTR [rax+0x0]
  4126f0:	mov    rcx,rbx
  4126f3:	call   0x40ec60
  4126f8:	movzx  edx,BYTE PTR [rax+0x4]
  4126fc:	cmp    dl,0x51
  4126ff:	je     0x4126f0
  412701:	cmp    dl,0x16
  412704:	je     0x412770
  412706:	cmp    dl,0x14
  412709:	jne    0x412760
  41270b:	nop    DWORD PTR [rax+rax*1+0x0]
  412710:	mov    rcx,rbx
  412713:	call   0x40ec60
  412718:	movzx  edx,BYTE PTR [rax+0x4]
  41271c:	mov    rsi,rax
  41271f:	cmp    dl,0x51
  412722:	je     0x412710
  412724:	cmp    dl,0x16
  412727:	je     0x412790
  412729:	sub    edx,0x3d
  41272c:	cmp    dl,0x4
  41272f:	ja     0x412760
  412731:	mov    rcx,rbx
  412734:	call   0x40ec60
  412739:	movzx  edx,BYTE PTR [rax+0x4]
  41273d:	cmp    dl,0x51
  412740:	je     0x412731
  412742:	cmp    dl,0x16
  412745:	je     0x4127a3
  412747:	cmp    dl,0x15
  41274a:	jne    0x412760
  41274c:	mov    rax,rsi
  41274f:	add    rsp,0x38
  412753:	pop    rbx
  412754:	pop    rsi
  412755:	ret    
  412756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412760:	xor    eax,eax
  412762:	add    rsp,0x38
  412766:	pop    rbx
  412767:	pop    rsi
  412768:	ret    
  412769:	nop    DWORD PTR [rax+0x0]
  412770:	mov    edx,0x1
  412775:	mov    rcx,rbx
  412778:	mov    QWORD PTR [rsp+0x28],rax
  41277d:	call   0x40ccd0
  412782:	mov    rax,QWORD PTR [rsp+0x28]
  412787:	movzx  edx,BYTE PTR [rax+0x4]
  41278b:	jmp    0x412706
  412790:	mov    edx,0x1
  412795:	mov    rcx,rbx
  412798:	call   0x40ccd0
  41279d:	movzx  edx,BYTE PTR [rsi+0x4]
  4127a1:	jmp    0x412729
  4127a3:	mov    edx,0x1
  4127a8:	mov    rcx,rbx
  4127ab:	mov    QWORD PTR [rsp+0x28],rax
  4127b0:	call   0x40ccd0
  4127b5:	mov    rax,QWORD PTR [rsp+0x28]
  4127ba:	movzx  edx,BYTE PTR [rax+0x4]
  4127be:	jmp    0x412747
  4127c0:	push   rbx
  4127c1:	sub    rsp,0x20
  4127c5:	mov    rax,QWORD PTR [rcx+0x88]
  4127cc:	mov    rbx,rcx
  4127cf:	cmp    QWORD PTR [rax+0x8],0x0
  4127d4:	je     0x4127f6
  4127d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4127e0:	mov    rcx,rbx
  4127e3:	call   0x40cb50
  4127e8:	mov    rax,QWORD PTR [rbx+0x88]
  4127ef:	cmp    QWORD PTR [rax+0x8],0x0
  4127f4:	jne    0x4127e0
  4127f6:	mov    rax,QWORD PTR [rbx+0x1a8]
  4127fd:	cmp    BYTE PTR [rax-0x14],0x16
  412801:	je     0x412811
  412803:	mov    rcx,rbx
  412806:	call   0x41ee50
  41280b:	cmp    BYTE PTR [rax+0x4],0x16
  41280f:	jne    0x412803
  412811:	add    rsp,0x20
  412815:	pop    rbx
  412816:	ret    
  412817:	nop    WORD PTR [rax+rax*1+0x0]
  412820:	push   rdi
  412821:	push   rsi
  412822:	push   rbx
  412823:	sub    rsp,0x40
  412827:	cmp    BYTE PTR [rcx+0x41b],0x0
  41282e:	mov    edi,edx
  412830:	lea    r9,[rsp+0x34]
  412835:	lea    rdx,[rsp+0x30]
  41283a:	lea    r8,[rsp+0x38]
  41283f:	mov    rbx,rcx
  412842:	mov    QWORD PTR [rsp+0x38],0x0
  41284b:	sete   BYTE PTR [rcx+0x15]
  41284f:	call   0x412100
  412854:	test   rax,rax
  412857:	mov    rsi,rax
  41285a:	je     0x4128c9
  41285c:	cmp    BYTE PTR [rax],0x0
  41285f:	je     0x412900
  412865:	mov    rax,QWORD PTR [rbx+0x28]
  412869:	cmp    DWORD PTR [rax+0x30],0xc7
  412870:	ja     0x4128e1
  412872:	mov    rcx,rbx
  412875:	call   0x4127c0
  41287a:	mov    rax,QWORD PTR [rbx+0x380]
  412881:	test   rax,rax
  412884:	je     0x4128ae
  412886:	mov    rdx,QWORD PTR [rbx+0x90]
  41288d:	mov    rcx,QWORD PTR [rsp+0x38]
  412892:	mov    r9,rsi
  412895:	mov    r8,QWORD PTR [rdx+0x8]
  412899:	mov    QWORD PTR [rsp+0x28],rcx
  41289e:	mov    ecx,DWORD PTR [rsp+0x30]
  4128a2:	mov    edx,DWORD PTR [rbx+0x30]
  4128a5:	mov    DWORD PTR [rsp+0x20],ecx
  4128a9:	mov    rcx,rbx
  4128ac:	call   rax
  4128ae:	mov    r8d,DWORD PTR [rsp+0x30]
  4128b3:	mov    r9d,edi
  4128b6:	mov    rdx,rsi
  4128b9:	mov    rcx,rbx
  4128bc:	call   0x41a750
  4128c1:	mov    rcx,rsi
  4128c4:	call   0x4494c8
  4128c9:	mov    rcx,QWORD PTR [rsp+0x38]
  4128ce:	test   rcx,rcx
  4128d1:	je     0x4128d9
  4128d3:	call   0x4494c8
  4128d8:	nop
  4128d9:	add    rsp,0x40
  4128dd:	pop    rbx
  4128de:	pop    rsi
  4128df:	pop    rdi
  4128e0:	ret    
  4128e1:	lea    r8,[rip+0x3c6b6]        # 0x44ef9e
  4128e8:	mov    edx,0x3
  4128ed:	mov    rcx,rbx
  4128f0:	call   0x414b60
  4128f5:	jmp    0x4128c1
  4128f7:	nop    WORD PTR [rax+rax*1+0x0]
  412900:	mov    rax,QWORD PTR [rbx+0x90]
  412907:	mov    r8d,DWORD PTR [rsp+0x34]
  41290c:	xor    r9d,r9d
  41290f:	mov    edx,0x3
  412914:	mov    rcx,rbx
  412917:	mov    rax,QWORD PTR [rax+0x8]
  41291b:	mov    QWORD PTR [rsp+0x28],rax
  412920:	lea    rax,[rip+0x3c661]        # 0x44ef88
  412927:	mov    QWORD PTR [rsp+0x20],rax
  41292c:	call   0x414c40
  412931:	jmp    0x4128c1
  412933:	nop    DWORD PTR [rax]
  412936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412940:	mov    edx,0x2
  412945:	jmp    0x412820
  41294a:	nop    WORD PTR [rax+rax*1+0x0]
  412950:	push   rbx
  412951:	sub    rsp,0x20
  412955:	mov    rax,QWORD PTR [rcx+0x28]
  412959:	mov    edx,0x1
  41295e:	mov    rbx,rcx
  412961:	cmp    DWORD PTR [rax+0x30],0x1
  412965:	je     0x412974
  412967:	mov    rcx,rbx
  41296a:	add    rsp,0x20
  41296e:	pop    rbx
  41296f:	jmp    0x412820
  412974:	lea    r8,[rip+0x3c645]        # 0x44efc0
  41297b:	xor    dl,dl
  41297d:	call   0x414b60
  412982:	xor    edx,edx
  412984:	mov    rcx,rbx
  412987:	add    rsp,0x20
  41298b:	pop    rbx
  41298c:	jmp    0x412820
  412991:	nop    DWORD PTR [rax+rax*1+0x0]
  412996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129a0:	xor    edx,edx
  4129a2:	jmp    0x412820
  4129a7:	nop    WORD PTR [rax+rax*1+0x0]
  4129b0:	push   rbx
  4129b1:	sub    rsp,0x20
  4129b5:	cmp    BYTE PTR [rcx+0x43d],0x0
  4129bc:	mov    rbx,rcx
  4129bf:	je     0x412a10
  4129c1:	cmp    BYTE PTR [rcx+0x20],0x0
  4129c5:	jne    0x4129cb
  4129c7:	sub    BYTE PTR [rcx+0x18],0x1
  4129cb:	lea    rax,[rip+0x3cbee]        # 0x44f5c0
  4129d2:	cmp    QWORD PTR [rbx+0x90],rax
  4129d9:	je     0x4129e3
  4129db:	mov    rcx,rbx
  4129de:	call   0x4100c0
  4129e3:	cmp    BYTE PTR [rbx+0x41b],0x0
  4129ea:	mov    BYTE PTR [rbx+0x10],0x0
  4129ee:	mov    BYTE PTR [rbx+0x14],0x0
  4129f2:	mov    BYTE PTR [rbx+0x13],0x0
  4129f6:	mov    QWORD PTR [rbx+0x90],0x0
  412a01:	sete   BYTE PTR [rbx+0x15]
  412a05:	add    rsp,0x20
  412a09:	pop    rbx
  412a0a:	ret    
  412a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  412a10:	test   edx,edx
  412a12:	je     0x4129e3
  412a14:	cmp    BYTE PTR [rcx+0x20],0x0
  412a18:	jne    0x4129e3
  412a1a:	call   0x4127c0
  412a1f:	mov    eax,DWORD PTR [rbx+0x1dc]
  412a25:	test   eax,eax
  412a27:	jne    0x4129e3
  412a29:	lea    rax,[rbx+0x1b0]
  412a30:	mov    QWORD PTR [rbx+0x1d0],rax
  412a37:	mov    rax,QWORD PTR [rbx+0x1c0]
  412a3e:	mov    QWORD PTR [rbx+0x1a8],rax
  412a45:	jmp    0x4129e3
  412a47:	nop    WORD PTR [rax+rax*1+0x0]
  412a50:	push   rbp
  412a51:	push   r13
  412a53:	push   r12
  412a55:	push   rdi
  412a56:	push   rsi
  412a57:	push   rbx
  412a58:	sub    rsp,0x38
  412a5c:	lea    rbp,[rsp+0x80]
  412a64:	mov    rbx,rcx
  412a67:	call   0x4126e0
  412a6c:	test   rax,rax
  412a6f:	mov    r8,rax
  412a72:	je     0x412c60
  412a78:	mov    ecx,DWORD PTR [rax+0x8]
  412a7b:	lea    edx,[rcx+0x2]
  412a7e:	add    rdx,0x1e
  412a82:	shr    rdx,0x4
  412a86:	mov    rax,rdx
  412a89:	shl    rax,0x4
  412a8d:	call   0x43d410
  412a92:	mov    rdx,QWORD PTR [r8+0x10]
  412a96:	sub    rsp,rax
  412a99:	xor    eax,eax
  412a9b:	lea    rdi,[rsp+0x30]
  412aa0:	cmp    BYTE PTR [rdx],0x4c
  412aa3:	lea    r10,[rdx+rcx*1-0x1]
  412aa8:	mov    r8,rdi
  412aab:	sete   al
  412aae:	lea    rax,[rdx+rax*1+0x1]
  412ab3:	cmp    rax,r10
  412ab6:	jb     0x412ad1
  412ab8:	jmp    0x412af2
  412aba:	nop    WORD PTR [rax+rax*1+0x0]
  412ac0:	add    rax,0x1
  412ac4:	add    r8,0x1
  412ac8:	mov    BYTE PTR [r8-0x1],r9b
  412acc:	cmp    r10,rax
  412acf:	jbe    0x412af2
  412ad1:	movzx  r9d,BYTE PTR [rax]
  412ad5:	cmp    r9b,0x5c
  412ad9:	jne    0x412ac0
  412adb:	movzx  ecx,BYTE PTR [rax+0x1]
  412adf:	cmp    cl,0x22
  412ae2:	je     0x412ae9
  412ae4:	cmp    cl,0x5c
  412ae7:	jne    0x412ac0
  412ae9:	add    rax,0x1
  412aed:	mov    r9d,ecx
  412af0:	jmp    0x412ac0
  412af2:	mov    BYTE PTR [r8],0x0
  412af6:	xor    edx,edx
  412af8:	mov    rcx,rbx
  412afb:	call   0x411e90
  412b00:	mov    rcx,rbx
  412b03:	call   0x4127c0
  412b08:	mov    ecx,0x20
  412b0d:	call   0x43baf0
  412b12:	mov    rcx,rdi
  412b15:	mov    rsi,rax
  412b18:	mov    QWORD PTR [rax],0x0
  412b1f:	mov    QWORD PTR [rax+0x8],0x0
  412b27:	mov    QWORD PTR [rax+0x10],0x0
  412b2f:	mov    QWORD PTR [rax+0x18],0x0
  412b37:	mov    eax,DWORD PTR [rcx]
  412b39:	add    rcx,0x4
  412b3d:	lea    r8d,[rax-0x1010101]
  412b44:	not    eax
  412b46:	and    r8d,eax
  412b49:	and    r8d,0x80808080
  412b50:	je     0x412b37
  412b52:	mov    eax,r8d
  412b55:	shr    eax,0x10
  412b58:	test   r8d,0x8080
  412b5f:	cmove  r8d,eax
  412b63:	lea    rax,[rcx+0x2]
  412b67:	cmove  rcx,rax
  412b6b:	add    r8b,r8b
  412b6e:	sbb    rcx,0x3
  412b72:	sub    rcx,rdi
  412b75:	add    rcx,0x1
  412b79:	call   0x43baf0
  412b7e:	mov    rdx,rdi
  412b81:	mov    rcx,rax
  412b84:	mov    QWORD PTR [rsi+0x8],rax
  412b88:	call   0x4493d8
  412b8d:	mov    r8,rax
  412b90:	mov    rax,QWORD PTR [rbx+0x528]
  412b97:	mov    rcx,rbx
  412b9a:	mov    rdx,r8
  412b9d:	mov    QWORD PTR [rsi],rax
  412ba0:	call   0x41c280
  412ba5:	test   BYTE PTR [rax+0x18],0x3f
  412ba9:	mov    r13,rax
  412bac:	jne    0x412bd0
  412bae:	or     BYTE PTR [rsi+0x1c],0x4
  412bb2:	mov    QWORD PTR [rbx+0x528],rsi
  412bb9:	lea    rsp,[rbp-0x48]
  412bbd:	pop    rbx
  412bbe:	pop    rsi
  412bbf:	pop    rdi
  412bc0:	pop    r12
  412bc2:	pop    r13
  412bc4:	pop    rbp
  412bc5:	ret    
  412bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412bd0:	mov    rdx,rax
  412bd3:	mov    rcx,rbx
  412bd6:	call   0x40f710
  412bdb:	mov    rcx,rax
  412bde:	mov    rdi,rax
  412be1:	call   0x4493c0
  412be6:	lea    rcx,[rax+0x2]
  412bea:	mov    r12,rax
  412bed:	call   0x43baf0
  412bf2:	mov    BYTE PTR [rax+r12*1],0xa
  412bf7:	mov    BYTE PTR [rax+r12*1+0x1],0x0
  412bfd:	mov    rcx,rax
  412c00:	mov    QWORD PTR [rsi+0x10],rax
  412c04:	mov    rax,QWORD PTR [r13+0x20]
  412c08:	mov    r8,r12
  412c0b:	mov    rdx,rdi
  412c0e:	mov    eax,DWORD PTR [rax+0x10]
  412c11:	mov    DWORD PTR [rsi+0x18],eax
  412c14:	mov    rax,QWORD PTR [r13+0x20]
  412c18:	movzx  r9d,BYTE PTR [rax+0x1c]
  412c1d:	movzx  eax,BYTE PTR [rsi+0x1c]
  412c21:	shr    r9b,0x2
  412c25:	and    eax,0xfffffffe
  412c28:	and    r9d,0x1
  412c2c:	or     r9d,eax
  412c2f:	mov    BYTE PTR [rsi+0x1c],r9b
  412c33:	mov    rax,QWORD PTR [r13+0x20]
  412c37:	and    r9d,0xfffffffd
  412c3b:	movzx  r10d,BYTE PTR [rax+0x1c]
  412c40:	shr    r10b,0x2
  412c44:	and    r10d,0x2
  412c48:	or     r9d,r10d
  412c4b:	mov    BYTE PTR [rsi+0x1c],r9b
  412c4f:	call   0x449450
  412c54:	jmp    0x412bb2
  412c59:	nop    DWORD PTR [rax+0x0]
  412c60:	mov    rax,QWORD PTR [rbx+0x1a8]
  412c67:	xor    r9d,r9d
  412c6a:	mov    rcx,rbx
  412c6d:	mov    edx,0x3
  412c72:	mov    r8d,DWORD PTR [rax-0x18]
  412c76:	lea    rax,[rip+0x3c36b]        # 0x44efe8
  412c7d:	mov    QWORD PTR [rsp+0x20],rax
  412c82:	call   0x414c40
  412c87:	xor    edx,edx
  412c89:	mov    rcx,rbx
  412c8c:	call   0x411e90
  412c91:	mov    rcx,rbx
  412c94:	call   0x4127c0
  412c99:	nop
  412c9a:	lea    rsp,[rbp-0x48]
  412c9e:	pop    rbx
  412c9f:	pop    rsi
  412ca0:	pop    rdi
  412ca1:	pop    r12
  412ca3:	pop    r13
  412ca5:	pop    rbp
  412ca6:	ret    
  412ca7:	nop    WORD PTR [rax+rax*1+0x0]
  412cb0:	push   rsi
  412cb1:	push   rbx
  412cb2:	sub    rsp,0x38
  412cb6:	mov    rax,QWORD PTR [rcx]
  412cb9:	mov    rbx,QWORD PTR [rax+0x60]
  412cbd:	test   rbx,rbx
  412cc0:	je     0x412d43
  412cc6:	cmp    DWORD PTR [rbx+0x1c],0x5
  412cca:	mov    rsi,rcx
  412ccd:	je     0x412d10
  412ccf:	movzx  eax,BYTE PTR [rbx+0x18]
  412cd3:	mov    DWORD PTR [rbx+0x1c],0x5
  412cda:	mov    BYTE PTR [rsi+0x12],al
  412cdd:	cmp    BYTE PTR [rbx+0x19],0x0
  412ce1:	mov    BYTE PTR [rbx+0x18],0x1
  412ce5:	mov    QWORD PTR [rbx+0x10],0x0
  412ced:	jne    0x412cf8
  412cef:	cmp    BYTE PTR [rsi+0x42b],0x0
  412cf6:	jne    0x412d00
  412cf8:	add    rsp,0x38
  412cfc:	pop    rbx
  412cfd:	pop    rsi
  412cfe:	ret    
  412cff:	nop
  412d00:	xor    edx,edx
  412d02:	mov    rcx,rsi
  412d05:	add    rsp,0x38
  412d09:	pop    rbx
  412d0a:	pop    rsi
  412d0b:	jmp    0x411e90
  412d10:	lea    r8,[rip+0x3c308]        # 0x44f01f
  412d17:	mov    edx,0x3
  412d1c:	call   0x414b60
  412d21:	mov    r8d,DWORD PTR [rbx+0x8]
  412d25:	lea    rax,[rip+0x3c305]        # 0x44f031
  412d2c:	xor    r9d,r9d
  412d2f:	mov    edx,0x3
  412d34:	mov    rcx,rsi
  412d37:	mov    QWORD PTR [rsp+0x20],rax
  412d3c:	call   0x414c40
  412d41:	jmp    0x412ccf
  412d43:	lea    r8,[rip+0x3c2c3]        # 0x44f00d
  412d4a:	mov    edx,0x3
  412d4f:	add    rsp,0x38
  412d53:	pop    rbx
  412d54:	pop    rsi
  412d55:	jmp    0x414b60
  412d5a:	nop    WORD PTR [rax+rax*1+0x0]
  412d60:	push   rsi
  412d61:	push   rbx
  412d62:	sub    rsp,0x48
  412d66:	mov    rbx,rcx
  412d69:	mov    esi,edx
  412d6b:	call   0x41ee50
  412d70:	cmp    BYTE PTR [rax+0x4],0x3d
  412d74:	je     0x412db0
  412d76:	lea    rax,[rip+0x3c2d5]        # 0x44f052
  412d7d:	lea    r9,[rip+0x3c2c8]        # 0x44f04c
  412d84:	test   sil,sil
  412d87:	lea    r8,[rip+0x3c2d2]        # 0x44f060
  412d8e:	mov    edx,0x3
  412d93:	mov    rcx,rbx
  412d96:	cmove  r9,rax
  412d9a:	call   0x414b60
  412d9f:	nop
  412da0:	add    rsp,0x48
  412da4:	pop    rbx
  412da5:	pop    rsi
  412da6:	ret    
  412da7:	nop    WORD PTR [rax+rax*1+0x0]
  412db0:	lea    rdx,[rax+0x8]
  412db4:	lea    r9,[rsp+0x30]
  412db9:	mov    DWORD PTR [rsp+0x20],0x3d
  412dc1:	mov    r8d,0x1
  412dc7:	mov    rcx,rbx
  412dca:	call   0x425b50
  412dcf:	test   al,al
  412dd1:	je     0x412d76
  412dd3:	mov    eax,DWORD PTR [rsp+0x30]
  412dd7:	test   eax,eax
  412dd9:	je     0x412d76
  412ddb:	cmp    sil,0x1
  412ddf:	mov    r9,QWORD PTR [rsp+0x38]
  412de4:	lea    r8,[rip+0x3c0ad]        # 0x44ee98
  412deb:	sbb    edx,edx
  412ded:	mov    rcx,rbx
  412df0:	not    edx
  412df2:	and    edx,0x3
  412df5:	call   0x414b60
  412dfa:	mov    rcx,QWORD PTR [rsp+0x38]
  412dff:	call   0x4494c8
  412e04:	jmp    0x412da0
  412e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412e10:	mov    edx,0x1
  412e15:	jmp    0x412d60
  412e1a:	nop    WORD PTR [rax+rax*1+0x0]
  412e20:	xor    edx,edx
  412e22:	jmp    0x412d60
  412e27:	nop    WORD PTR [rax+rax*1+0x0]
  412e30:	push   rsi
  412e31:	push   rbx
  412e32:	sub    rsp,0x38
  412e36:	mov    rax,QWORD PTR [rcx]
  412e39:	mov    rbx,QWORD PTR [rax+0x60]
  412e3d:	test   rbx,rbx
  412e40:	je     0x412f00
  412e46:	cmp    DWORD PTR [rbx+0x1c],0x5
  412e4a:	mov    rsi,rcx
  412e4d:	je     0x412ec0
  412e4f:	cmp    BYTE PTR [rbx+0x19],0x0
  412e53:	mov    DWORD PTR [rbx+0x1c],0x9
  412e5a:	je     0x412e70
  412e5c:	mov    QWORD PTR [rbx+0x10],0x0
  412e64:	add    rsp,0x38
  412e68:	pop    rbx
  412e69:	pop    rsi
  412e6a:	ret    
  412e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  412e70:	xor    edx,edx
  412e72:	mov    BYTE PTR [rsi+0x12],0x0
  412e76:	mov    rcx,rsi
  412e79:	call   0x416d10
  412e7e:	cmp    BYTE PTR [rbx+0x18],0x0
  412e82:	je     0x412ea0
  412e84:	mov    BYTE PTR [rsi+0x12],0x1
  412e88:	mov    QWORD PTR [rbx+0x10],0x0
  412e90:	add    rsp,0x38
  412e94:	pop    rbx
  412e95:	pop    rsi
  412e96:	ret    
  412e97:	nop    WORD PTR [rax+rax*1+0x0]
  412ea0:	mov    edx,eax
  412ea2:	xor    edx,0x1
  412ea5:	mov    BYTE PTR [rsi+0x12],dl
  412ea8:	mov    BYTE PTR [rbx+0x18],al
  412eab:	mov    QWORD PTR [rbx+0x10],0x0
  412eb3:	add    rsp,0x38
  412eb7:	pop    rbx
  412eb8:	pop    rsi
  412eb9:	ret    
  412eba:	nop    WORD PTR [rax+rax*1+0x0]
  412ec0:	lea    r8,[rip+0x3c1ce]        # 0x44f095
  412ec7:	mov    edx,0x3
  412ecc:	call   0x414b60
  412ed1:	mov    r8d,DWORD PTR [rbx+0x8]
  412ed5:	lea    rax,[rip+0x3c155]        # 0x44f031
  412edc:	xor    r9d,r9d
  412edf:	mov    edx,0x3
  412ee4:	mov    rcx,rsi
  412ee7:	mov    QWORD PTR [rsp+0x20],rax
  412eec:	call   0x414c40
  412ef1:	jmp    0x412e4f
  412ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f00:	lea    r8,[rip+0x3c17c]        # 0x44f083
  412f07:	mov    edx,0x3
  412f0c:	add    rsp,0x38
  412f10:	pop    rbx
  412f11:	pop    rsi
  412f12:	jmp    0x414b60
  412f17:	nop    WORD PTR [rax+rax*1+0x0]
  412f20:	push   rdi
  412f21:	push   rsi
  412f22:	push   rbx
  412f23:	sub    rsp,0x20
  412f27:	mov    rdi,QWORD PTR [rcx]
  412f2a:	mov    rsi,QWORD PTR [rdi+0x60]
  412f2e:	test   rsi,rsi
  412f31:	je     0x412fe0
  412f37:	movzx  eax,BYTE PTR [rsi+0x19]
  412f3b:	mov    rbx,rcx
  412f3e:	test   al,al
  412f40:	je     0x412f80
  412f42:	mov    rdx,QWORD PTR [rsi]
  412f45:	test   rdx,rdx
  412f48:	je     0x412fa0
  412f4a:	cmp    rsi,QWORD PTR [rbx+0x310]
  412f51:	mov    QWORD PTR [rdi+0x60],rdx
  412f55:	mov    BYTE PTR [rbx+0x12],al
  412f58:	jbe    0x412f63
  412f5a:	cmp    rsi,QWORD PTR [rbx+0x328]
  412f61:	jb     0x412fc0
  412f63:	lea    rcx,[rbx+0x308]
  412f6a:	mov    rdx,rsi
  412f6d:	add    rsp,0x20
  412f71:	pop    rbx
  412f72:	pop    rsi
  412f73:	pop    rdi
  412f74:	jmp    0x439b90
  412f79:	nop    DWORD PTR [rax+0x0]
  412f80:	cmp    BYTE PTR [rcx+0x42b],0x0
  412f87:	je     0x412f42
  412f89:	xor    edx,edx
  412f8b:	call   0x411e90
  412f90:	mov    rdx,QWORD PTR [rsi]
  412f93:	movzx  eax,BYTE PTR [rsi+0x19]
  412f97:	test   rdx,rdx
  412f9a:	jne    0x412f4a
  412f9c:	nop    DWORD PTR [rax+0x0]
  412fa0:	mov    rcx,QWORD PTR [rsi+0x10]
  412fa4:	test   rcx,rcx
  412fa7:	je     0x412f4a
  412fa9:	mov    BYTE PTR [rbx+0x1a0],0x1
  412fb0:	mov    QWORD PTR [rbx+0x190],rcx
  412fb7:	jmp    0x412f4a
  412fb9:	nop    DWORD PTR [rax+0x0]
  412fc0:	mov    QWORD PTR [rbx+0x318],rsi
  412fc7:	mov    QWORD PTR [rbx+0x320],rsi
  412fce:	add    rsp,0x20
  412fd2:	pop    rbx
  412fd3:	pop    rsi
  412fd4:	pop    rdi
  412fd5:	ret    
  412fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412fe0:	lea    r8,[rip+0x3c0c0]        # 0x44f0a7
  412fe7:	mov    edx,0x3
  412fec:	add    rsp,0x20
  412ff0:	pop    rbx
  412ff1:	pop    rsi
  412ff2:	pop    rdi
  412ff3:	jmp    0x414b60
  412ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  413000:	push   rbx
  413001:	sub    rsp,0x20
  413005:	mov    rax,QWORD PTR [rcx+0x28]
  413009:	cmp    DWORD PTR [rax+0x30],0x1
  41300d:	je     0x413040
  41300f:	mov    rbx,rcx
  413012:	xor    edx,edx
  413014:	call   0x411e90
  413019:	mov    rcx,rbx
  41301c:	call   0x4127c0
  413021:	xor    r8d,r8d
  413024:	mov    edx,0x1
  413029:	mov    rcx,rbx
  41302c:	add    rsp,0x20
  413030:	pop    rbx
  413031:	jmp    0x41aad0
  413036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413040:	lea    r8,[rip+0x3c079]        # 0x44f0c0
  413047:	xor    edx,edx
  413049:	add    rsp,0x20
  41304d:	pop    rbx
  41304e:	jmp    0x414b60
  413053:	nop    DWORD PTR [rax]
  413056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413060:	push   r13
  413062:	push   r12
  413064:	push   rbp
  413065:	push   rdi
  413066:	push   rsi
  413067:	push   rbx
  413068:	sub    rsp,0x38
  41306c:	test   rdx,rdx
  41306f:	mov    rdi,rcx
  413072:	mov    rbp,rdx
  413075:	mov    r12,r8
  413078:	mov    r13d,r9d
  41307b:	je     0x4131f0
  413081:	mov    rcx,rdx
  413084:	call   0x4493c0
  413089:	mov    rdx,rbp
  41308c:	mov    r8d,eax
  41308f:	mov    rcx,rdi
  413092:	call   0x41b3b0
  413097:	mov    rsi,rax
  41309a:	mov    rax,QWORD PTR [rdi+0x360]
  4130a1:	test   rax,rax
  4130a4:	jne    0x4130bc
  4130a6:	jmp    0x4131a0
  4130ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4130b0:	mov    rax,QWORD PTR [rax]
  4130b3:	test   rax,rax
  4130b6:	je     0x4131a0
  4130bc:	cmp    rsi,QWORD PTR [rax+0x8]
  4130c0:	jne    0x4130b0
  4130c2:	cmp    BYTE PTR [rax+0x10],0x0
  4130c6:	je     0x413220
  4130cc:	cmp    BYTE PTR [rax+0x13],r13b
  4130d0:	jne    0x413276
  4130d6:	lea    rbx,[rax+0x18]
  4130da:	mov    rcx,r12
  4130dd:	call   0x4493c0
  4130e2:	mov    rdx,r12
  4130e5:	mov    r8d,eax
  4130e8:	mov    rcx,rdi
  4130eb:	call   0x41b3b0
  4130f0:	mov    r10,QWORD PTR [rbx]
  4130f3:	mov    rsi,rax
  4130f6:	test   r10,r10
  4130f9:	jne    0x413108
  4130fb:	jmp    0x413150
  4130fd:	nop    DWORD PTR [rax]
  413100:	mov    r10,QWORD PTR [r10]
  413103:	test   r10,r10
  413106:	je     0x413150
  413108:	cmp    rsi,QWORD PTR [r10+0x8]
  41310c:	jne    0x413100
  41310e:	cmp    BYTE PTR [r10+0x10],0x0
  413113:	jne    0x413220
  413119:	test   rbp,rbp
  41311c:	je     0x413250
  413122:	lea    r8,[rip+0x3c097]        # 0x44f1c0
  413129:	mov    QWORD PTR [rsp+0x20],r12
  41312e:	mov    r9,rbp
  413131:	mov    edx,0x4
  413136:	mov    rcx,rdi
  413139:	call   0x414b60
  41313e:	xor    eax,eax
  413140:	add    rsp,0x38
  413144:	pop    rbx
  413145:	pop    rsi
  413146:	pop    rdi
  413147:	pop    rbp
  413148:	pop    r12
  41314a:	pop    r13
  41314c:	ret    
  41314d:	nop    DWORD PTR [rax]
  413150:	mov    edx,0x20
  413155:	mov    rcx,rdi
  413158:	call   0x41f0f0
  41315d:	mov    QWORD PTR [rax],0x0
  413164:	mov    QWORD PTR [rax+0x8],0x0
  41316c:	mov    QWORD PTR [rax+0x10],0x0
  413174:	mov    QWORD PTR [rax+0x18],0x0
  41317c:	mov    rdx,QWORD PTR [rbx]
  41317f:	mov    QWORD PTR [rax],rdx
  413182:	mov    QWORD PTR [rbx],rax
  413185:	mov    QWORD PTR [rax+0x8],rsi
  413189:	add    rsp,0x38
  41318d:	pop    rbx
  41318e:	pop    rsi
  41318f:	pop    rdi
  413190:	pop    rbp
  413191:	pop    r12
  413193:	pop    r13
  413195:	ret    
  413196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4131a0:	mov    edx,0x20
  4131a5:	mov    rcx,rdi
  4131a8:	call   0x41f0f0
  4131ad:	mov    QWORD PTR [rax+0x10],0x0
  4131b5:	mov    QWORD PTR [rax],0x0
  4131bc:	mov    QWORD PTR [rax+0x8],0x0
  4131c4:	mov    QWORD PTR [rax+0x18],0x0
  4131cc:	mov    rdx,QWORD PTR [rdi+0x360]
  4131d3:	mov    QWORD PTR [rax],rdx
  4131d6:	mov    QWORD PTR [rdi+0x360],rax
  4131dd:	mov    QWORD PTR [rax+0x8],rsi
  4131e1:	mov    BYTE PTR [rax+0x10],0x1
  4131e5:	mov    BYTE PTR [rax+0x13],r13b
  4131e9:	jmp    0x4130d6
  4131ee:	xchg   ax,ax
  4131f0:	test   r9b,r9b
  4131f3:	lea    rbx,[rcx+0x360]
  4131fa:	je     0x4130da
  413200:	mov    r9,r8
  413203:	lea    r8,[rip+0x3bf36]        # 0x44f140
  41320a:	mov    edx,0x4
  41320f:	call   0x414b60
  413214:	xor    eax,eax
  413216:	jmp    0x413140
  41321b:	nop    DWORD PTR [rax+rax*1+0x0]
  413220:	mov    r9,QWORD PTR [rsi]
  413223:	lea    r8,[rip+0x3bf56]        # 0x44f180
  41322a:	mov    edx,0x4
  41322f:	mov    rcx,rdi
  413232:	call   0x414b60
  413237:	xor    eax,eax
  413239:	add    rsp,0x38
  41323d:	pop    rbx
  41323e:	pop    rsi
  41323f:	pop    rdi
  413240:	pop    rbp
  413241:	pop    r12
  413243:	pop    r13
  413245:	ret    
  413246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413250:	lea    r8,[rip+0x3bf91]        # 0x44f1e8
  413257:	mov    r9,r12
  41325a:	mov    edx,0x4
  41325f:	mov    rcx,rdi
  413262:	call   0x414b60
  413267:	xor    eax,eax
  413269:	add    rsp,0x38
  41326d:	pop    rbx
  41326e:	pop    rsi
  41326f:	pop    rdi
  413270:	pop    rbp
  413271:	pop    r12
  413273:	pop    r13
  413275:	ret    
  413276:	lea    r8,[rip+0x3be7b]        # 0x44f0f8
  41327d:	mov    r9,rbp
  413280:	mov    edx,0x4
  413285:	mov    rcx,rdi
  413288:	call   0x414b60
  41328d:	xor    eax,eax
  41328f:	jmp    0x413140
  413294:	xchg   ax,ax
  413296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4132a0:	push   r12
  4132a2:	push   rbp
  4132a3:	push   rdi
  4132a4:	push   rsi
  4132a5:	push   rbx
  4132a6:	sub    rsp,0x20
  4132aa:	cmp    BYTE PTR [rcx+0x19],0x0
  4132ae:	mov    rbx,rcx
  4132b1:	mov    r12d,edx
  4132b4:	setne  dil
  4132b8:	cmp    BYTE PTR [rcx+0x1b],0x0
  4132bc:	setne  bpl
  4132c0:	je     0x4132c6
  4132c2:	mov    BYTE PTR [rcx+0x18],0x0
  4132c6:	test   dil,dil
  4132c9:	je     0x4132e0
  4132cb:	cmp    BYTE PTR [rbx+0x437],0x0
  4132d2:	jne    0x413460
  4132d8:	mov    BYTE PTR [rbx+0x19],0x0
  4132dc:	mov    BYTE PTR [rbx+0x18],0x0
  4132e0:	mov    rax,QWORD PTR [rbx+0x28]
  4132e4:	mov    BYTE PTR [rbx+0x10],0x1
  4132e8:	mov    rcx,rbx
  4132eb:	mov    BYTE PTR [rbx+0x15],0x0
  4132ef:	mov    BYTE PTR [rbx+0x9c],0x51
  4132f6:	mov    eax,DWORD PTR [rax+0x3c]
  4132f9:	mov    DWORD PTR [rbx+0x30],eax
  4132fc:	call   0x41ee50
  413301:	movzx  ecx,BYTE PTR [rax+0x4]
  413305:	cmp    cl,0x35
  413308:	je     0x413380
  41330a:	cmp    cl,0x37
  41330d:	je     0x413410
  413313:	cmp    cl,0x16
  413316:	je     0x413330
  413318:	cmp    DWORD PTR [rbx+0x414],0xd
  41331f:	je     0x4133db
  413325:	cmp    BYTE PTR [rbx+0x12],0x0
  413329:	je     0x4135d0
  41332f:	nop
  413330:	cmp    BYTE PTR [rbx+0x43d],0x0
  413337:	mov    QWORD PTR [rbx+0x90],0x0
  413342:	jne    0x413560
  413348:	mov    esi,0x1
  41334d:	mov    edx,esi
  41334f:	mov    rcx,rbx
  413352:	call   0x4129b0
  413357:	test   dil,dil
  41335a:	je     0x41336a
  41335c:	cmp    BYTE PTR [rbx+0x20],0x0
  413360:	jne    0x41336a
  413362:	mov    BYTE PTR [rbx+0x19],0x2
  413366:	mov    BYTE PTR [rbx+0x18],0x1
  41336a:	test   bpl,bpl
  41336d:	je     0x413373
  41336f:	mov    BYTE PTR [rbx+0x18],0x1
  413373:	mov    eax,esi
  413375:	add    rsp,0x20
  413379:	pop    rbx
  41337a:	pop    rsi
  41337b:	pop    rdi
  41337c:	pop    rbp
  41337d:	pop    r12
  41337f:	ret    
  413380:	mov    rdx,QWORD PTR [rax+0x8]
  413384:	movzx  edx,BYTE PTR [rdx+0x10]
  413388:	test   dl,0x1
  41338b:	je     0x413318
  41338d:	shr    dl,1
  41338f:	lea    rax,[rip+0x3c22a]        # 0x44f5c0
  413396:	and    edx,0x7f
  413399:	lea    rdx,[rdx+rdx*2]
  41339d:	lea    rsi,[rax+rdx*8]
  4133a1:	test   BYTE PTR [rsi+0x13],0x2
  4133a5:	movzx  eax,BYTE PTR [rbx+0x438]
  4133ac:	jne    0x4133b5
  4133ae:	mov    BYTE PTR [rbx+0x1a0],0x0
  4133b5:	test   al,al
  4133b7:	je     0x413480
  4133bd:	cmp    BYTE PTR [rbx+0x494],0x0
  4133c4:	jne    0x4134e0
  4133ca:	test   r12d,r12d
  4133cd:	jne    0x4133db
  4133cf:	movzx  eax,BYTE PTR [rsi+0x13]
  4133d3:	test   al,0x8
  4133d5:	jne    0x4134e4
  4133db:	cmp    BYTE PTR [rbx+0x43d],0x0
  4133e2:	mov    QWORD PTR [rbx+0x90],0x0
  4133ed:	jne    0x4135a0
  4133f3:	mov    edx,0x1
  4133f8:	mov    rcx,rbx
  4133fb:	xor    esi,esi
  4133fd:	call   0x40ccd0
  413402:	jmp    0x41334d
  413407:	nop    WORD PTR [rax+rax*1+0x0]
  413410:	cmp    DWORD PTR [rbx+0x414],0xd
  413417:	je     0x4133db
  413419:	cmp    BYTE PTR [rbx+0x437],0x0
  413420:	je     0x413570
  413426:	movzx  eax,BYTE PTR [rbx+0x438]
  41342d:	lea    rsi,[rip+0x3c0dc]        # 0x44f510
  413434:	test   al,al
  413436:	jne    0x4133ae
  41343c:	cmp    BYTE PTR [rbx+0x12],0x0
  413440:	jne    0x4133ae
  413446:	lea    r8,[rip+0x3be03]        # 0x44f250
  41344d:	mov    edx,0x2
  413452:	mov    rcx,rbx
  413455:	call   0x414b60
  41345a:	jmp    0x4133a1
  41345f:	nop
  413460:	lea    r8,[rip+0x3bda9]        # 0x44f210
  413467:	mov    edx,0x2
  41346c:	mov    rcx,rbx
  41346f:	call   0x414b60
  413474:	jmp    0x4132d8
  413479:	nop    DWORD PTR [rax+0x0]
  413480:	movzx  eax,BYTE PTR [rsi+0x13]
  413484:	and    eax,0x4
  413487:	mov    BYTE PTR [rbx+0x13],al
  41348a:	movzx  eax,BYTE PTR [rsi+0x13]
  41348e:	and    eax,0x4
  413491:	cmp    BYTE PTR [rbx+0x12],0x0
  413495:	mov    BYTE PTR [rbx+0x11],al
  413498:	jne    0x413530
  41349e:	movzx  eax,BYTE PTR [rsi+0x12]
  4134a2:	cmp    al,0x2
  4134a4:	je     0x413621
  4134aa:	test   BYTE PTR [rsi+0x13],0x20
  4134ae:	jne    0x4135b0
  4134b4:	lea    rdx,[rip+0x3c26d]        # 0x44f728
  4134bb:	cmp    rsi,rdx
  4134be:	jne    0x4135bd
  4134c4:	cmp    BYTE PTR [rbx+0x41a],0x0
  4134cb:	je     0x4135b0
  4134d1:	cmp    BYTE PTR [rbx+0x429],0x0
  4134d8:	jne    0x41354d
  4134da:	jmp    0x413506
  4134dc:	nop    DWORD PTR [rax+0x0]
  4134e0:	movzx  eax,BYTE PTR [rsi+0x13]
  4134e4:	and    eax,0x4
  4134e7:	mov    BYTE PTR [rbx+0x13],al
  4134ea:	movzx  eax,BYTE PTR [rsi+0x13]
  4134ee:	and    eax,0x4
  4134f1:	mov    BYTE PTR [rbx+0x11],al
  4134f4:	movzx  eax,BYTE PTR [rbx+0x12]
  4134f8:	test   al,al
  4134fa:	je     0x413506
  4134fc:	test   BYTE PTR [rsi+0x13],0x1
  413500:	je     0x413330
  413506:	cmp    BYTE PTR [rbx+0x43d],0x0
  41350d:	mov    QWORD PTR [rbx+0x90],rsi
  413514:	jne    0x4136ac
  41351a:	mov    rcx,rbx
  41351d:	call   QWORD PTR [rsi]
  41351f:	mov    esi,0x1
  413524:	jmp    0x41334d
  413529:	nop    DWORD PTR [rax+0x0]
  413530:	cmp    BYTE PTR [rbx+0x429],0x0
  413537:	je     0x4134fc
  413539:	lea    rax,[rip+0x3c158]        # 0x44f698
  413540:	cmp    rsi,rax
  413543:	je     0x413680
  413549:	movzx  eax,BYTE PTR [rsi+0x12]
  41354d:	test   r12d,r12d
  413550:	je     0x413580
  413552:	test   al,al
  413554:	je     0x413600
  41355a:	movzx  eax,BYTE PTR [rbx+0x12]
  41355e:	jmp    0x4134f8
  413560:	mov    rcx,rbx
  413563:	call   0x411cf0
  413568:	jmp    0x413348
  41356d:	nop    DWORD PTR [rax]
  413570:	lea    rsi,[rip+0x3bf99]        # 0x44f510
  413577:	jmp    0x4133a1
  41357c:	nop    DWORD PTR [rax+0x0]
  413580:	test   al,al
  413582:	je     0x41355a
  413584:	mov    r9,QWORD PTR [rsi+0x8]
  413588:	lea    r8,[rip+0x3bd91]        # 0x44f320
  41358f:	mov    edx,0x6
  413594:	mov    rcx,rbx
  413597:	call   0x414b90
  41359c:	jmp    0x41355a
  41359e:	xchg   ax,ax
  4135a0:	mov    rcx,rbx
  4135a3:	call   0x411cf0
  4135a8:	jmp    0x4133f3
  4135ad:	nop    DWORD PTR [rax]
  4135b0:	cmp    BYTE PTR [rbx+0x423],0x0
  4135b7:	jne    0x413664
  4135bd:	cmp    BYTE PTR [rbx+0x429],0x0
  4135c4:	jne    0x413539
  4135ca:	jmp    0x413506
  4135cf:	nop
  4135d0:	mov    rcx,rbx
  4135d3:	mov    rdx,rax
  4135d6:	call   0x41f080
  4135db:	lea    r8,[rip+0x3bd7e]        # 0x44f360
  4135e2:	mov    r9,rax
  4135e5:	mov    edx,0x3
  4135ea:	mov    rcx,rbx
  4135ed:	call   0x414b60
  4135f2:	jmp    0x413330
  4135f7:	nop    WORD PTR [rax+rax*1+0x0]
  413600:	mov    r9,QWORD PTR [rsi+0x8]
  413604:	lea    r8,[rip+0x3bce5]        # 0x44f2f0
  41360b:	mov    edx,0x6
  413610:	mov    rcx,rbx
  413613:	call   0x414b90
  413618:	movzx  eax,BYTE PTR [rbx+0x12]
  41361c:	jmp    0x4134f8
  413621:	lea    rdx,[rip+0x3c100]        # 0x44f728
  413628:	cmp    rsi,rdx
  41362b:	je     0x41369d
  41362d:	cmp    BYTE PTR [rbx+0x437],0x0
  413634:	je     0x4134aa
  41363a:	mov    r9,QWORD PTR [rsi+0x8]
  41363e:	lea    r8,[rip+0x3bc36]        # 0x44f27b
  413645:	mov    edx,0x2
  41364a:	mov    rcx,rbx
  41364d:	call   0x414b60
  413652:	cmp    BYTE PTR [rbx+0x429],0x0
  413659:	jne    0x413539
  41365f:	jmp    0x41355a
  413664:	mov    r9,QWORD PTR [rsi+0x8]
  413668:	lea    r8,[rip+0x3bc29]        # 0x44f298
  41366f:	mov    edx,0x1
  413674:	mov    rcx,rbx
  413677:	call   0x414b90
  41367c:	jmp    0x413652
  41367e:	xchg   ax,ax
  413680:	lea    r8,[rip+0x3bc39]        # 0x44f2c0
  413687:	mov    edx,0x6
  41368c:	mov    rcx,rbx
  41368f:	call   0x414b90
  413694:	movzx  eax,BYTE PTR [rbx+0x12]
  413698:	jmp    0x4134f8
  41369d:	cmp    BYTE PTR [rbx+0x41a],0x0
  4136a4:	jne    0x4134d1
  4136aa:	jmp    0x41362d
  4136ac:	mov    rcx,rbx
  4136af:	call   0x411cf0
  4136b4:	mov    rsi,QWORD PTR [rbx+0x90]
  4136bb:	jmp    0x41351a
  4136c0:	lea    rdx,[rip+0xffffffffffffda89]        # 0x411150
  4136c7:	xor    r8d,r8d
  4136ca:	jmp    0x41b410
  4136cf:	nop
  4136d0:	push   rsi
  4136d1:	push   rbx
  4136d2:	sub    rsp,0x38
  4136d6:	mov    rbx,rcx
  4136d9:	mov    rcx,QWORD PTR [rcx+0x28]
  4136dd:	mov    DWORD PTR [rsp+0x20],r9d
  4136e2:	mov    r9,r8
  4136e5:	mov    r8d,DWORD PTR [rsp+0x70]
  4136ea:	call   0x40a940
  4136ef:	test   rax,rax
  4136f2:	mov    rsi,rax
  4136f5:	je     0x413709
  4136f7:	mov    edx,DWORD PTR [rax+0x10]
  4136fa:	mov    rcx,QWORD PTR [rbx+0x28]
  4136fe:	mov    r8d,0x7f
  413704:	call   0x40ad30
  413709:	mov    rax,QWORD PTR [rbx+0x370]
  413710:	test   rax,rax
  413713:	je     0x413724
  413715:	mov    rdx,rsi
  413718:	mov    rcx,rbx
  41371b:	add    rsp,0x38
  41371f:	pop    rbx
  413720:	pop    rsi
  413721:	rex.W jmp rax
  413724:	add    rsp,0x38
  413728:	pop    rbx
  413729:	pop    rsi
  41372a:	ret    
  41372b:	nop    DWORD PTR [rax+rax*1+0x0]
  413730:	push   r12
  413732:	push   rbp
  413733:	push   rdi
  413734:	push   rsi
  413735:	push   rbx
  413736:	sub    rsp,0x40
  41373a:	mov    rax,QWORD PTR [rcx+0x28]
  41373e:	mov    rsi,rcx
  413741:	mov    edx,DWORD PTR [rax+0xc]
  413744:	mov    rax,QWORD PTR [rax]
  413747:	sub    edx,0x1
  41374a:	lea    rdx,[rdx+rdx*4]
  41374e:	lea    rax,[rax+rdx*8]
  413752:	mov    edx,0x1
  413757:	mov    rbp,QWORD PTR [rax+0x8]
  41375b:	movzx  edi,BYTE PTR [rax+0x18]
  41375f:	call   0x40ccd0
  413764:	mov    rcx,rsi
  413767:	call   0x40ec60
  41376c:	cmp    BYTE PTR [rax+0x4],0x37
  413770:	je     0x4137a0
  413772:	mov    rcx,rsi
  413775:	mov    rdx,rax
  413778:	call   0x41f080
  41377d:	lea    r8,[rip+0x3bc04]        # 0x44f388
  413784:	mov    r9,rax
  413787:	mov    edx,0x3
  41378c:	mov    rcx,rsi
  41378f:	call   0x414b60
  413794:	nop
  413795:	add    rsp,0x40
  413799:	pop    rbx
  41379a:	pop    rsi
  41379b:	pop    rdi
  41379c:	pop    rbp
  41379d:	pop    r12
  41379f:	ret    
  4137a0:	mov    ecx,DWORD PTR [rax+0x8]
  4137a3:	mov    r8,QWORD PTR [rax+0x10]
  4137a7:	test   rcx,rcx
  4137aa:	je     0x4138db
  4137b0:	movzx  edx,BYTE PTR [r8]
  4137b4:	mov    r11,QWORD PTR [rip+0x47675]        # 0x45ae30
  4137bb:	lea    r10,[r8+0x1]
  4137bf:	test   BYTE PTR [r11+rdx*2],0x4
  4137c4:	mov    r9,rdx
  4137c7:	je     0x413772
  4137c9:	add    r8,rcx
  4137cc:	xor    ebx,ebx
  4137ce:	jmp    0x4137e3
  4137d0:	add    r10,0x1
  4137d4:	movzx  ecx,BYTE PTR [r10-0x1]
  4137d9:	test   BYTE PTR [r11+rcx*2],0x4
  4137de:	mov    r9,rcx
  4137e1:	je     0x413772
  4137e3:	lea    ecx,[rbx+rbx*4]
  4137e6:	cmp    r10,r8
  4137e9:	lea    ebx,[r9+rcx*2-0x30]
  4137ee:	jne    0x4137d0
  4137f0:	mov    rcx,rsi
  4137f3:	call   0x40ec60
  4137f8:	movzx  ecx,BYTE PTR [rax+0x4]
  4137fc:	mov    rdx,rax
  4137ff:	cmp    cl,0x3d
  413802:	je     0x41386b
  413804:	cmp    cl,0x16
  413807:	mov    r12d,0x3
  41380d:	jne    0x413840
  41380f:	mov    rcx,rsi
  413812:	call   0x4127c0
  413817:	mov    rax,QWORD PTR [rsi+0x28]
  41381b:	mov    r9d,ebx
  41381e:	mov    r8,rbp
  413821:	mov    edx,r12d
  413824:	mov    rcx,rsi
  413827:	sub    DWORD PTR [rax+0x38],0x1
  41382b:	mov    DWORD PTR [rsp+0x20],edi
  41382f:	call   0x4136d0
  413834:	nop
  413835:	add    rsp,0x40
  413839:	pop    rbx
  41383a:	pop    rsi
  41383b:	pop    rdi
  41383c:	pop    rbp
  41383d:	pop    r12
  41383f:	ret    
  413840:	mov    rcx,rsi
  413843:	call   0x41f080
  413848:	lea    r8,[rip+0x3bb60]        # 0x44f3af
  41384f:	mov    r9,rax
  413852:	mov    edx,0x3
  413857:	mov    rcx,rsi
  41385a:	call   0x414b60
  41385f:	nop
  413860:	add    rsp,0x40
  413864:	pop    rbx
  413865:	pop    rsi
  413866:	pop    rdi
  413867:	pop    rbp
  413868:	pop    r12
  41386a:	ret    
  41386b:	lea    r9,[rsp+0x30]
  413870:	add    rdx,0x8
  413874:	mov    r8d,0x1
  41387a:	mov    rcx,rsi
  41387d:	mov    DWORD PTR [rsp+0x20],0x3d
  413885:	mov    DWORD PTR [rsp+0x30],0x0
  41388d:	mov    QWORD PTR [rsp+0x38],0x0
  413896:	call   0x425b50
  41389b:	mov    rcx,rsi
  41389e:	test   al,al
  4138a0:	cmovne rbp,QWORD PTR [rsp+0x38]
  4138a6:	xor    edx,edx
  4138a8:	call   0x4112c0
  4138ad:	cmp    eax,0x1
  4138b0:	je     0x413906
  4138b2:	cmp    eax,0x2
  4138b5:	mov    r12d,0x3
  4138bb:	je     0x413923
  4138bd:	xor    edx,edx
  4138bf:	xor    edi,edi
  4138c1:	cmp    eax,0x3
  4138c4:	je     0x4138e2
  4138c6:	mov    rax,QWORD PTR [rsi]
  4138c9:	mov    rcx,rsi
  4138cc:	mov    BYTE PTR [rax+0x6d],dl
  4138cf:	xor    edx,edx
  4138d1:	call   0x411e90
  4138d6:	jmp    0x41380f
  4138db:	xor    ebx,ebx
  4138dd:	jmp    0x4137f0
  4138e2:	mov    edx,0x3
  4138e7:	mov    rcx,rsi
  4138ea:	call   0x4112c0
  4138ef:	cmp    eax,0x4
  4138f2:	sete   dl
  4138f5:	xor    edi,edi
  4138f7:	add    edx,0x1
  4138fa:	cmp    eax,0x4
  4138fd:	sete   dil
  413901:	add    edi,0x1
  413904:	jmp    0x4138c6
  413906:	mov    rdx,rbp
  413909:	mov    rcx,rsi
  41390c:	xor    r12d,r12d
  41390f:	call   0x41aaa0
  413914:	mov    edx,0x1
  413919:	mov    rcx,rsi
  41391c:	call   0x4112c0
  413921:	jmp    0x4138bd
  413923:	mov    edx,0x2
  413928:	mov    rcx,rsi
  41392b:	mov    r12b,0x1
  41392e:	call   0x4112c0
  413933:	jmp    0x4138bd
  413935:	nop
  413936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413940:	push   r13
  413942:	push   r12
  413944:	push   rbp
  413945:	push   rdi
  413946:	push   rsi
  413947:	push   rbx
  413948:	sub    rsp,0x48
  41394c:	mov    rax,QWORD PTR [rcx+0x28]
  413950:	mov    rsi,rcx
  413953:	mov    edx,DWORD PTR [rax+0xc]
  413956:	mov    rax,QWORD PTR [rax]
  413959:	sub    edx,0x1
  41395c:	cmp    BYTE PTR [rcx+0x435],0x1
  413963:	lea    rdx,[rdx+rdx*4]
  413967:	lea    rax,[rax+rdx*8]
  41396b:	sbb    r12d,r12d
  41396e:	movzx  edi,BYTE PTR [rax+0x18]
  413972:	mov    rbp,QWORD PTR [rax+0x8]
  413976:	and    r12d,0x80008000
  41397d:	call   0x40ec60
  413982:	movzx  edx,BYTE PTR [rax+0x4]
  413986:	add    r12d,0x7fffffff
  41398d:	cmp    dl,0x37
  413990:	je     0x4139d0
  413992:	cmp    dl,0x16
  413995:	je     0x413a90
  41399b:	mov    rcx,rsi
  41399e:	mov    rdx,rax
  4139a1:	call   0x41f080
  4139a6:	lea    r8,[rip+0x3ba4b]        # 0x44f3f8
  4139ad:	mov    r9,rax
  4139b0:	mov    edx,0x3
  4139b5:	mov    rcx,rsi
  4139b8:	call   0x414b60
  4139bd:	nop
  4139be:	add    rsp,0x48
  4139c2:	pop    rbx
  4139c3:	pop    rsi
  4139c4:	pop    rdi
  4139c5:	pop    rbp
  4139c6:	pop    r12
  4139c8:	pop    r13
  4139ca:	ret    
  4139cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4139d0:	mov    r11d,DWORD PTR [rax+0x8]
  4139d4:	mov    r10,QWORD PTR [rax+0x10]
  4139d8:	xor    ecx,ecx
  4139da:	xor    ebx,ebx
  4139dc:	mov    r13,QWORD PTR [rip+0x4744d]        # 0x45ae30
  4139e3:	mov    edx,0x1
  4139e8:	add    r11,r10
  4139eb:	jmp    0x413a16
  4139ed:	nop    DWORD PTR [rax]
  4139f0:	add    r10,0x1
  4139f4:	movzx  r8d,BYTE PTR [r10-0x1]
  4139f9:	test   BYTE PTR [r13+r8*2+0x0],0x4
  4139ff:	mov    r9,r8
  413a02:	je     0x41399b
  413a04:	lea    r8d,[rbx+rbx*4]
  413a08:	lea    r9d,[r9+r8*2-0x30]
  413a0d:	cmp    ebx,r9d
  413a10:	mov    ebx,r9d
  413a13:	cmova  ecx,edx
  413a16:	cmp    r10,r11
  413a19:	jne    0x4139f0
  413a1b:	cmp    BYTE PTR [rsi+0x437],0x0
  413a22:	je     0x413ab2
  413a28:	cmp    r12d,ebx
  413a2b:	setb   dl
  413a2e:	test   ebx,ebx
  413a30:	sete   al
  413a33:	or     dl,al
  413a35:	jne    0x413ad0
  413a3b:	test   cl,cl
  413a3d:	jne    0x413ad0
  413a43:	mov    rcx,rsi
  413a46:	call   0x40ec60
  413a4b:	movzx  ecx,BYTE PTR [rax+0x4]
  413a4f:	cmp    cl,0x3d
  413a52:	je     0x413b20
  413a58:	cmp    cl,0x16
  413a5b:	jne    0x413af0
  413a61:	mov    rcx,rsi
  413a64:	call   0x4127c0
  413a69:	mov    DWORD PTR [rsp+0x20],edi
  413a6d:	mov    r9d,ebx
  413a70:	mov    r8,rbp
  413a73:	mov    edx,0x3
  413a78:	mov    rcx,rsi
  413a7b:	call   0x4136d0
  413a80:	nop
  413a81:	add    rsp,0x48
  413a85:	pop    rbx
  413a86:	pop    rsi
  413a87:	pop    rdi
  413a88:	pop    rbp
  413a89:	pop    r12
  413a8b:	pop    r13
  413a8d:	ret    
  413a8e:	xchg   ax,ax
  413a90:	lea    r8,[rip+0x3b939]        # 0x44f3d0
  413a97:	mov    edx,0x3
  413a9c:	mov    rcx,rsi
  413a9f:	call   0x414b60
  413aa4:	nop
  413aa5:	add    rsp,0x48
  413aa9:	pop    rbx
  413aaa:	pop    rsi
  413aab:	pop    rdi
  413aac:	pop    rbp
  413aad:	pop    r12
  413aaf:	pop    r13
  413ab1:	ret    
  413ab2:	test   cl,cl
  413ab4:	je     0x413a43
  413ab6:	lea    r8,[rip+0x3b966]        # 0x44f423
  413abd:	xor    edx,edx
  413abf:	mov    rcx,rsi
  413ac2:	call   0x414b60
  413ac7:	jmp    0x413a43
  413acc:	nop    DWORD PTR [rax+0x0]
  413ad0:	lea    r8,[rip+0x3b94c]        # 0x44f423
  413ad7:	mov    edx,0x2
  413adc:	mov    rcx,rsi
  413adf:	call   0x414b60
  413ae4:	jmp    0x413a43
  413ae9:	nop    DWORD PTR [rax+0x0]
  413af0:	mov    rcx,rsi
  413af3:	mov    rdx,rax
  413af6:	call   0x41f080
  413afb:	lea    r8,[rip+0x3b8ad]        # 0x44f3af
  413b02:	mov    r9,rax
  413b05:	mov    edx,0x3
  413b0a:	mov    rcx,rsi
  413b0d:	call   0x414b60
  413b12:	nop
  413b13:	add    rsp,0x48
  413b17:	pop    rbx
  413b18:	pop    rsi
  413b19:	pop    rdi
  413b1a:	pop    rbp
  413b1b:	pop    r12
  413b1d:	pop    r13
  413b1f:	ret    
  413b20:	lea    rdx,[rax+0x8]
  413b24:	lea    r9,[rsp+0x30]
  413b29:	mov    rcx,rsi
  413b2c:	mov    DWORD PTR [rsp+0x20],0x3d
  413b34:	mov    r8d,0x1
  413b3a:	mov    DWORD PTR [rsp+0x30],0x0
  413b42:	mov    QWORD PTR [rsp+0x38],0x0
  413b4b:	call   0x425b50
  413b50:	mov    edx,0x1
  413b55:	mov    rcx,rsi
  413b58:	test   al,al
  413b5a:	cmovne rbp,QWORD PTR [rsp+0x38]
  413b60:	call   0x411e90
  413b65:	jmp    0x413a61
  413b6a:	nop    WORD PTR [rax+rax*1+0x0]
  413b70:	push   rsi
  413b71:	push   rbx
  413b72:	sub    rsp,0x28
  413b76:	mov    esi,DWORD PTR [rsp+0x60]
  413b7a:	test   r9,r9
  413b7d:	je     0x413ba0
  413b7f:	mov    rbx,r9
  413b82:	xor    r9d,r9d
  413b85:	call   0x413060
  413b8a:	test   rax,rax
  413b8d:	je     0x413b97
  413b8f:	mov    BYTE PTR [rax+0x13],sil
  413b93:	mov    QWORD PTR [rax+0x18],rbx
  413b97:	add    rsp,0x28
  413b9b:	pop    rbx
  413b9c:	pop    rsi
  413b9d:	ret    
  413b9e:	xchg   ax,ax
  413ba0:	lea    r8,[rip+0x3b899]        # 0x44f440
  413ba7:	mov    edx,0x4
  413bac:	add    rsp,0x28
  413bb0:	pop    rbx
  413bb1:	pop    rsi
  413bb2:	jmp    0x414b60
  413bb7:	nop    WORD PTR [rax+rax*1+0x0]
  413bc0:	push   rsi
  413bc1:	push   rbx
  413bc2:	sub    rsp,0x28
  413bc6:	mov    esi,DWORD PTR [rsp+0x60]
  413bca:	mov    ebx,r9d
  413bcd:	movzx  r9d,BYTE PTR [rsp+0x68]
  413bd3:	call   0x413060
  413bd8:	test   rax,rax
  413bdb:	je     0x413be8
  413bdd:	mov    BYTE PTR [rax+0x12],0x1
  413be1:	mov    BYTE PTR [rax+0x13],sil
  413be5:	mov    DWORD PTR [rax+0x18],ebx
  413be8:	add    rsp,0x28
  413bec:	pop    rbx
  413bed:	pop    rsi
  413bee:	ret    
  413bef:	nop
  413bf0:	push   rbx
  413bf1:	sub    rsp,0x20
  413bf5:	lea    r8,[rip+0x3b869]        # 0x44f465
  413bfc:	xor    r9d,r9d
  413bff:	xor    edx,edx
  413c01:	mov    rbx,rcx
  413c04:	call   0x413060
  413c09:	lea    rdx,[rip+0xffffffffffffea90]        # 0x4126a0
  413c10:	lea    r8,[rip+0x3b853]        # 0x44f46a
  413c17:	xor    r9d,r9d
  413c1a:	mov    rcx,rbx
  413c1d:	mov    BYTE PTR [rax+0x11],0x1
  413c21:	mov    QWORD PTR [rax+0x18],rdx
  413c25:	xor    edx,edx
  413c27:	call   0x413060
  413c2c:	lea    rcx,[rip+0xffffffffffffee1d]        # 0x412a50
  413c33:	lea    r8,[rip+0x3b83b]        # 0x44f475
  413c3a:	xor    r9d,r9d
  413c3d:	xor    edx,edx
  413c3f:	mov    BYTE PTR [rax+0x11],0x1
  413c43:	mov    QWORD PTR [rax+0x18],rcx
  413c47:	mov    rcx,rbx
  413c4a:	call   0x413060
  413c4f:	lea    rdx,[rip+0x49a]        # 0x4140f0
  413c56:	lea    r8,[rip+0x3b822]        # 0x44f47f
  413c5d:	xor    r9d,r9d
  413c60:	mov    rcx,rbx
  413c63:	mov    BYTE PTR [rax+0x11],0x1
  413c67:	mov    QWORD PTR [rax+0x18],rdx
  413c6b:	lea    rdx,[rip+0x3b814]        # 0x44f486
  413c72:	call   0x413060
  413c77:	lea    rcx,[rip+0xffffffffffffd6d2]        # 0x411350
  413c7e:	lea    r8,[rip+0x3b805]        # 0x44f48a
  413c85:	lea    rdx,[rip+0x3b7fa]        # 0x44f486
  413c8c:	xor    r9d,r9d
  413c8f:	mov    BYTE PTR [rax+0x11],0x1
  413c93:	mov    QWORD PTR [rax+0x18],rcx
  413c97:	mov    rcx,rbx
  413c9a:	call   0x413060
  413c9f:	lea    rdx,[rip+0xfffffffffffff35a]        # 0x413000
  413ca6:	lea    r8,[rip+0x3b7eb]        # 0x44f498
  413cad:	xor    r9d,r9d
  413cb0:	mov    rcx,rbx
  413cb3:	mov    BYTE PTR [rax+0x11],0x1
  413cb7:	mov    QWORD PTR [rax+0x18],rdx
  413cbb:	lea    rdx,[rip+0x3b7c4]        # 0x44f486
  413cc2:	call   0x413060
  413cc7:	lea    rcx,[rip+0xffffffffffffe642]        # 0x412310
  413cce:	lea    r8,[rip+0x3b37d]        # 0x44f052
  413cd5:	lea    rdx,[rip+0x3b7aa]        # 0x44f486
  413cdc:	xor    r9d,r9d
  413cdf:	mov    BYTE PTR [rax+0x11],0x1
  413ce3:	mov    QWORD PTR [rax+0x18],rcx
  413ce7:	mov    rcx,rbx
  413cea:	call   0x413060
  413cef:	lea    rdx,[rip+0xfffffffffffff12a]        # 0x412e20
  413cf6:	mov    rcx,rbx
  413cf9:	lea    r8,[rip+0x3b34c]        # 0x44f04c
  413d00:	lea    rbx,[rip+0xfffffffffffff109]        # 0x412e10
  413d07:	xor    r9d,r9d
  413d0a:	mov    BYTE PTR [rax+0x11],0x1
  413d0e:	mov    QWORD PTR [rax+0x18],rdx
  413d12:	lea    rdx,[rip+0x3b76d]        # 0x44f486
  413d19:	call   0x413060
  413d1e:	mov    BYTE PTR [rax+0x11],0x1
  413d22:	mov    QWORD PTR [rax+0x18],rbx
  413d26:	add    rsp,0x20
  413d2a:	pop    rbx
  413d2b:	ret    
  413d2c:	nop    DWORD PTR [rax+0x0]
  413d30:	push   rsi
  413d31:	push   rbx
  413d32:	sub    rsp,0x28
  413d36:	mov    rsi,rcx
  413d39:	mov    rcx,QWORD PTR [rcx+0x360]
  413d40:	call   0x411160
  413d45:	cdqe   
  413d47:	lea    rcx,[rax*8+0x0]
  413d4f:	call   0x43baf0
  413d54:	mov    rcx,QWORD PTR [rsi+0x360]
  413d5b:	mov    rbx,rax
  413d5e:	mov    rdx,rax
  413d61:	call   0x411e30
  413d66:	mov    rax,rbx
  413d69:	add    rsp,0x28
  413d6d:	pop    rbx
  413d6e:	pop    rsi
  413d6f:	ret    
  413d70:	push   rbx
  413d71:	sub    rsp,0x20
  413d75:	mov    rbx,rdx
  413d78:	mov    rdx,QWORD PTR [rcx+0x360]
  413d7f:	mov    r8,rbx
  413d82:	call   0x411db0
  413d87:	mov    rcx,rbx
  413d8a:	add    rsp,0x20
  413d8e:	pop    rbx
  413d8f:	jmp    0x4494c8
  413d94:	xchg   ax,ax
  413d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413da0:	push   rdi
  413da1:	push   rsi
  413da2:	push   rbx
  413da3:	sub    rsp,0x30
  413da7:	mov    r8d,0x4
  413dad:	mov    rsi,rdx
  413db0:	lea    rdx,[rsp+0x28]
  413db5:	mov    rdi,rcx
  413db8:	call   0x4113f0
  413dbd:	test   rax,rax
  413dc0:	mov    rbx,rax
  413dc3:	mov    DWORD PTR [rsi],0x0
  413dc9:	je     0x413e10
  413dcb:	movzx  eax,BYTE PTR [rax+0x18]
  413dcf:	xor    ecx,ecx
  413dd1:	and    eax,0x3f
  413dd4:	cmp    al,0x2
  413dd6:	je     0x413df0
  413dd8:	mov    DWORD PTR [rsi],ecx
  413dda:	xor    eax,eax
  413ddc:	test   rbx,rbx
  413ddf:	sete   al
  413de2:	add    rsp,0x30
  413de6:	pop    rbx
  413de7:	pop    rsi
  413de8:	pop    rdi
  413de9:	ret    
  413dea:	nop    WORD PTR [rax+rax*1+0x0]
  413df0:	mov    rdx,QWORD PTR [rsp+0x28]
  413df5:	mov    cl,0x1
  413df7:	test   rdx,rdx
  413dfa:	je     0x413dd8
  413dfc:	mov    rcx,rbx
  413dff:	call   0x411630
  413e04:	xor    ecx,ecx
  413e06:	cmp    QWORD PTR [rax],0x0
  413e0a:	setne  cl
  413e0d:	jmp    0x413dd8
  413e0f:	nop
  413e10:	mov    rax,QWORD PTR [rdi+0x1a8]
  413e17:	cmp    BYTE PTR [rax-0x14],0x16
  413e1b:	jne    0x413dda
  413e1d:	mov    edx,0x1
  413e22:	mov    rcx,rdi
  413e25:	call   0x40ccd0
  413e2a:	jmp    0x413dda
  413e2c:	nop    DWORD PTR [rax+0x0]
  413e30:	lea    rax,[rcx+0x410]
  413e37:	ret    
  413e38:	nop    DWORD PTR [rax+rax*1+0x0]
  413e40:	lea    rax,[rcx+0x368]
  413e47:	ret    
  413e48:	nop    DWORD PTR [rax+rax*1+0x0]
  413e50:	push   rdi
  413e51:	push   rsi
  413e52:	lea    rdi,[rcx+0x368]
  413e59:	mov    rsi,rdx
  413e5c:	mov    ecx,0x12
  413e61:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  413e64:	pop    rsi
  413e65:	pop    rdi
  413e66:	ret    
  413e67:	nop    WORD PTR [rax+rax*1+0x0]
  413e70:	push   rbx
  413e71:	sub    rsp,0x20
  413e75:	mov    rax,QWORD PTR [rcx+0x2a8]
  413e7c:	test   rax,rax
  413e7f:	je     0x413e90
  413e81:	add    rsp,0x20
  413e85:	pop    rbx
  413e86:	ret    
  413e87:	nop    WORD PTR [rax+rax*1+0x0]
  413e90:	mov    rbx,rcx
  413e93:	call   0x41f3d0
  413e98:	mov    QWORD PTR [rbx+0x2a8],rax
  413e9f:	add    rsp,0x20
  413ea3:	pop    rbx
  413ea4:	ret    
  413ea5:	nop
  413ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413eb0:	push   rdi
  413eb1:	push   rsi
  413eb2:	push   rbx
  413eb3:	sub    rsp,0x30
  413eb7:	mov    rax,QWORD PTR [rcx+0x320]
  413ebe:	mov    rsi,rdx
  413ec1:	mov    rdx,QWORD PTR [rcx+0x328]
  413ec8:	mov    rbx,rcx
  413ecb:	mov    rcx,rdx
  413ece:	sub    rcx,rax
  413ed1:	cmp    rcx,0xbf
  413ed8:	jle    0x413fb0
  413ede:	mov    r10,QWORD PTR [rbx+0x318]
  413ee5:	add    rax,0xc0
  413eeb:	mov    QWORD PTR [rbx+0x320],rax
  413ef2:	cmp    rax,r10
  413ef5:	je     0x413ff0
  413efb:	movsxd r11,DWORD PTR [rbx+0x338]
  413f02:	mov    rdi,rdx
  413f05:	mov    rcx,r11
  413f08:	add    rax,r11
  413f0b:	not    ecx
  413f0d:	movsxd rcx,ecx
  413f10:	and    rax,rcx
  413f13:	mov    rcx,QWORD PTR [rbx+0x310]
  413f1a:	mov    r11,rax
  413f1d:	mov    QWORD PTR [rbx+0x320],rax
  413f24:	sub    r11,rcx
  413f27:	sub    rdi,rcx
  413f2a:	cmp    r11,rdi
  413f2d:	jle    0x413f39
  413f2f:	mov    QWORD PTR [rbx+0x320],rdx
  413f36:	mov    rax,rdx
  413f39:	lea    rdi,[r10+0x8]
  413f3d:	mov    rcx,r10
  413f40:	mov    QWORD PTR [rbx+0x318],rax
  413f47:	xor    eax,eax
  413f49:	mov    QWORD PTR [r10],0x0
  413f50:	mov    QWORD PTR [r10+0xb8],0x0
  413f5b:	and    rdi,0xfffffffffffffff8
  413f5f:	and    r9d,0x1
  413f63:	add    r8,rsi
  413f66:	sub    rcx,rdi
  413f69:	add    r9d,r9d
  413f6c:	add    ecx,0xc0
  413f72:	shr    ecx,0x3
  413f75:	rep stos QWORD PTR es:[rdi],rax
  413f78:	mov    QWORD PTR [r10+0x18],rsi
  413f7c:	mov    QWORD PTR [r10+0x10],rsi
  413f80:	mov    QWORD PTR [r10+0x20],r8
  413f84:	movzx  eax,BYTE PTR [r10+0x6c]
  413f89:	and    eax,0xfffffffd
  413f8c:	or     r9d,eax
  413f8f:	mov    BYTE PTR [r10+0x6c],r9b
  413f93:	mov    rax,QWORD PTR [rbx]
  413f96:	mov    BYTE PTR [r10+0x68],0x1
  413f9b:	mov    QWORD PTR [r10+0x48],rax
  413f9f:	mov    rax,r10
  413fa2:	mov    QWORD PTR [rbx],r10
  413fa5:	add    rsp,0x30
  413fa9:	pop    rbx
  413faa:	pop    rsi
  413fab:	pop    rdi
  413fac:	ret    
  413fad:	nop    DWORD PTR [rax]
  413fb0:	lea    rcx,[rbx+0x308]
  413fb7:	mov    edx,0xc0
  413fbc:	mov    DWORD PTR [rsp+0x2c],r9d
  413fc1:	mov    QWORD PTR [rsp+0x20],r8
  413fc6:	call   0x439960
  413fcb:	mov    rax,QWORD PTR [rbx+0x320]
  413fd2:	mov    rdx,QWORD PTR [rbx+0x328]
  413fd9:	mov    r9d,DWORD PTR [rsp+0x2c]
  413fde:	mov    r8,QWORD PTR [rsp+0x20]
  413fe3:	jmp    0x413ede
  413fe8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ff0:	or     BYTE PTR [rbx+0x358],0x2
  413ff7:	jmp    0x413efb
  413ffc:	nop    DWORD PTR [rax+0x0]
  414000:	push   r12
  414002:	push   rbp
  414003:	push   rdi
  414004:	push   rsi
  414005:	push   rbx
  414006:	sub    rsp,0x30
  41400a:	mov    rdi,QWORD PTR [rcx]
  41400d:	lea    r12,[rip+0x3b5ac]        # 0x44f5c0
  414014:	mov    rsi,rcx
  414017:	mov    rbx,QWORD PTR [rdi+0x60]
  41401b:	mov    rbp,QWORD PTR [rdi+0x50]
  41401f:	test   rbx,rbx
  414022:	je     0x41405e
  414024:	movsxd rax,DWORD PTR [rbx+0x1c]
  414028:	mov    r8d,DWORD PTR [rbx+0x8]
  41402c:	xor    r9d,r9d
  41402f:	mov    edx,0x3
  414034:	mov    rcx,rsi
  414037:	lea    rax,[rax+rax*2]
  41403b:	mov    rax,QWORD PTR [r12+rax*8+0x8]
  414040:	mov    QWORD PTR [rsp+0x28],rax
  414045:	lea    rax,[rip+0x3b457]        # 0x44f4a3
  41404c:	mov    QWORD PTR [rsp+0x20],rax
  414051:	call   0x414c40
  414056:	mov    rbx,QWORD PTR [rbx]
  414059:	test   rbx,rbx
  41405c:	jne    0x414024
  41405e:	mov    BYTE PTR [rsi+0x12],0x0
  414062:	mov    rax,QWORD PTR [rdi+0x48]
  414066:	mov    rcx,QWORD PTR [rdi+0x30]
  41406a:	mov    rbx,QWORD PTR [rdi+0x28]
  41406e:	mov    QWORD PTR [rsi],rax
  414071:	call   0x4494c8
  414076:	cmp    rdi,QWORD PTR [rsi+0x310]
  41407d:	jbe    0x414088
  41407f:	cmp    rdi,QWORD PTR [rsi+0x328]
  414086:	jb     0x4140d1
  414088:	lea    rcx,[rsi+0x308]
  41408f:	mov    rdx,rdi
  414092:	call   0x439b90
  414097:	test   rbp,rbp
  41409a:	je     0x4140c6
  41409c:	mov    r8,rbx
  41409f:	mov    rdx,rbp
  4140a2:	mov    rcx,rsi
  4140a5:	call   0x41ad10
  4140aa:	mov    DWORD PTR [rsp+0x20],0x0
  4140b2:	xor    r9d,r9d
  4140b5:	xor    r8d,r8d
  4140b8:	mov    edx,0x1
  4140bd:	mov    rcx,rsi
  4140c0:	call   0x4136d0
  4140c5:	nop
  4140c6:	add    rsp,0x30
  4140ca:	pop    rbx
  4140cb:	pop    rsi
  4140cc:	pop    rdi
  4140cd:	pop    rbp
  4140ce:	pop    r12
  4140d0:	ret    
  4140d1:	mov    QWORD PTR [rsi+0x318],rdi
  4140d8:	mov    QWORD PTR [rsi+0x320],rdi
  4140df:	jmp    0x414097
  4140e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4140e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4140f0:	push   rbp
  4140f1:	push   r13
  4140f3:	push   r12
  4140f5:	push   rdi
  4140f6:	push   rsi
  4140f7:	push   rbx
  4140f8:	sub    rsp,0x38
  4140fc:	lea    rbp,[rsp+0x80]
  414104:	mov    rbx,QWORD PTR [rcx+0x528]
  41410b:	mov    rdi,rcx
  41410e:	call   0x4126e0
  414113:	test   rax,rax
  414116:	mov    r8,rax
  414119:	je     0x414370
  41411f:	mov    ecx,DWORD PTR [rax+0x8]
  414122:	lea    edx,[rcx+0x2]
  414125:	add    rdx,0x1e
  414129:	shr    rdx,0x4
  41412d:	mov    rax,rdx
  414130:	shl    rax,0x4
  414134:	call   0x43d410
  414139:	mov    rdx,QWORD PTR [r8+0x10]
  41413d:	sub    rsp,rax
  414140:	xor    eax,eax
  414142:	lea    rsi,[rsp+0x30]
  414147:	cmp    BYTE PTR [rdx],0x4c
  41414a:	mov    r8,rsi
  41414d:	sete   al
  414150:	lea    rax,[rdx+rax*1+0x1]
  414155:	lea    rdx,[rdx+rcx*1-0x1]
  41415a:	cmp    rax,rdx
  41415d:	jb     0x414172
  41415f:	jmp    0x414193
  414161:	add    rax,0x1
  414165:	add    r8,0x1
  414169:	mov    BYTE PTR [r8-0x1],r9b
  41416d:	cmp    rdx,rax
  414170:	jbe    0x414193
  414172:	movzx  r9d,BYTE PTR [rax]
  414176:	cmp    r9b,0x5c
  41417a:	jne    0x414161
  41417c:	movzx  ecx,BYTE PTR [rax+0x1]
  414180:	cmp    cl,0x22
  414183:	je     0x41418a
  414185:	cmp    cl,0x5c
  414188:	jne    0x414161
  41418a:	add    rax,0x1
  41418e:	mov    r9d,ecx
  414191:	jmp    0x414161
  414193:	xor    edx,edx
  414195:	mov    BYTE PTR [r8],0x0
  414199:	mov    rcx,rdi
  41419c:	call   0x411e90
  4141a1:	mov    rcx,rdi
  4141a4:	call   0x4127c0
  4141a9:	test   rbx,rbx
  4141ac:	je     0x414253
  4141b2:	xor    r13d,r13d
  4141b5:	jmp    0x4141cf
  4141b7:	nop    WORD PTR [rax+rax*1+0x0]
  4141c0:	test   rax,rax
  4141c3:	mov    r13,rbx
  4141c6:	je     0x414253
  4141cc:	mov    rbx,rax
  4141cf:	mov    r12,QWORD PTR [rbx+0x8]
  4141d3:	mov    rdx,rsi
  4141d6:	mov    rcx,r12
  4141d9:	call   0x4493e0
  4141de:	test   eax,eax
  4141e0:	mov    rax,QWORD PTR [rbx]
  4141e3:	jne    0x4141c0
  4141e5:	test   r13,r13
  4141e8:	je     0x4143b7
  4141ee:	mov    QWORD PTR [r13+0x0],rax
  4141f2:	mov    rdx,r12
  4141f5:	mov    rcx,rdi
  4141f8:	call   0x41c280
  4141fd:	test   rax,rax
  414200:	mov    rsi,rax
  414203:	je     0x414238
  414205:	mov    rax,QWORD PTR [rdi+0x3e0]
  41420c:	test   rax,rax
  41420f:	je     0x414216
  414211:	mov    rcx,rdi
  414214:	call   rax
  414216:	movzx  r9d,BYTE PTR [rsi+0x18]
  41421b:	and    r9d,0x3f
  41421f:	cmp    r9b,0x1
  414223:	je     0x414340
  414229:	test   r9b,r9b
  41422c:	jne    0x414331
  414232:	test   BYTE PTR [rbx+0x1c],0x4
  414236:	je     0x414260
  414238:	mov    rcx,QWORD PTR [rbx+0x10]
  41423c:	call   0x4494c8
  414241:	mov    rcx,QWORD PTR [rbx+0x8]
  414245:	call   0x4494c8
  41424a:	mov    rcx,rbx
  41424d:	call   0x4494c8
  414252:	nop
  414253:	lea    rsp,[rbp-0x48]
  414257:	pop    rbx
  414258:	pop    rsi
  414259:	pop    rdi
  41425a:	pop    r12
  41425c:	pop    r13
  41425e:	pop    rbp
  41425f:	ret    
  414260:	mov    rsi,QWORD PTR [rbx+0x10]
  414264:	lea    rdx,[rip+0x3b271]        # 0x44f4dc
  41426b:	mov    rcx,rsi
  41426e:	call   0x4493d0
  414273:	movsxd r12,eax
  414276:	mov    rdx,rsi
  414279:	mov    rcx,rdi
  41427c:	mov    r8d,r12d
  41427f:	call   0x41b3b0
  414284:	add    r12,QWORD PTR [rbx+0x10]
  414288:	and    BYTE PTR [rax+0x18],0xc0
  41428c:	mov    edx,0xa
  414291:	and    WORD PTR [rax+0x18],0xd67f
  414297:	mov    rsi,rax
  41429a:	mov    rcx,r12
  41429d:	call   0x4493e8
  4142a2:	sub    rax,r12
  4142a5:	mov    rdx,r12
  4142a8:	mov    r9d,0x1
  4142ae:	mov    r8,rax
  4142b1:	mov    rcx,rdi
  4142b4:	call   0x413eb0
  4142b9:	test   rax,rax
  4142bc:	mov    r12,rax
  4142bf:	je     0x4143e0
  4142c5:	mov    rcx,rdi
  4142c8:	call   0x41baa0
  4142cd:	mov    BYTE PTR [r12+0x6d],0x1
  4142d3:	mov    rdx,rsi
  4142d6:	mov    rcx,rdi
  4142d9:	call   0x40edf0
  4142de:	test   al,al
  4142e0:	je     0x4143e0
  4142e6:	mov    rcx,rdi
  4142e9:	call   0x414000
  4142ee:	mov    rax,QWORD PTR [rsi+0x20]
  4142f2:	mov    edx,DWORD PTR [rbx+0x18]
  4142f5:	mov    DWORD PTR [rax+0x10],edx
  4142f8:	mov    rcx,QWORD PTR [rsi+0x20]
  4142fc:	movzx  eax,BYTE PTR [rbx+0x1c]
  414300:	movzx  edx,BYTE PTR [rcx+0x1c]
  414304:	and    eax,0x1
  414307:	shl    eax,0x2
  41430a:	and    edx,0xfffffffb
  41430d:	or     eax,edx
  41430f:	mov    BYTE PTR [rcx+0x1c],al
  414312:	mov    rcx,QWORD PTR [rsi+0x20]
  414316:	movzx  eax,BYTE PTR [rbx+0x1c]
  41431a:	movzx  edx,BYTE PTR [rcx+0x1c]
  41431e:	shl    eax,0x2
  414321:	and    eax,0x8
  414324:	and    edx,0xfffffff7
  414327:	or     eax,edx
  414329:	mov    BYTE PTR [rcx+0x1c],al
  41432c:	jmp    0x414238
  414331:	mov    rcx,rsi
  414334:	call   0x40ecf0
  414339:	jmp    0x414232
  41433e:	xchg   ax,ax
  414340:	mov    rax,QWORD PTR [rdi+0x390]
  414347:	test   rax,rax
  41434a:	je     0x4143c3
  41434c:	mov    edx,DWORD PTR [rdi+0x30]
  41434f:	mov    r8,rsi
  414352:	mov    rcx,rdi
  414355:	call   rax
  414357:	cmp    BYTE PTR [rdi+0x434],0x0
  41435e:	jne    0x4143d0
  414360:	movzx  r9d,BYTE PTR [rsi+0x18]
  414365:	and    r9d,0x3f
  414369:	jmp    0x414229
  41436e:	xchg   ax,ax
  414370:	mov    rax,QWORD PTR [rdi+0x1a8]
  414377:	xor    r9d,r9d
  41437a:	mov    rcx,rdi
  41437d:	mov    edx,0x3
  414382:	mov    r8d,DWORD PTR [rax-0x18]
  414386:	lea    rax,[rip+0x3b12b]        # 0x44f4b8
  41438d:	mov    QWORD PTR [rsp+0x20],rax
  414392:	call   0x414c40
  414397:	xor    edx,edx
  414399:	mov    rcx,rdi
  41439c:	call   0x411e90
  4143a1:	mov    rcx,rdi
  4143a4:	call   0x4127c0
  4143a9:	nop
  4143aa:	lea    rsp,[rbp-0x48]
  4143ae:	pop    rbx
  4143af:	pop    rsi
  4143b0:	pop    rdi
  4143b1:	pop    r12
  4143b3:	pop    r13
  4143b5:	pop    rbp
  4143b6:	ret    
  4143b7:	mov    QWORD PTR [rdi+0x528],rax
  4143be:	jmp    0x4141f2
  4143c3:	cmp    BYTE PTR [rdi+0x434],0x0
  4143ca:	je     0x414331
  4143d0:	xor    r8d,r8d
  4143d3:	mov    rdx,rsi
  4143d6:	mov    rcx,rdi
  4143d9:	call   0x40c3c0
  4143de:	jmp    0x414360
  4143e0:	call   0x449548
  4143e5:	nop
  4143e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4143f0:	push   rbp
  4143f1:	push   r15
  4143f3:	push   r14
  4143f5:	push   r13
  4143f7:	push   r12
  4143f9:	push   rdi
  4143fa:	push   rsi
  4143fb:	push   rbx
  4143fc:	sub    rsp,0x38
  414400:	lea    rbp,[rsp+0x80]
  414408:	lea    eax,[rdx-0x1]
  41440b:	mov    rbx,rcx
  41440e:	add    rax,0x1e
  414412:	shr    rax,0x4
  414416:	shl    rax,0x4
  41441a:	call   0x43d410
  41441f:	mov    rcx,QWORD PTR [r8]
  414422:	sub    rsp,rax
  414425:	xor    eax,eax
  414427:	mov    edx,edx
  414429:	lea    rsi,[rsp+0x20]
  41442e:	cmp    BYTE PTR [rcx],0x4c
  414431:	lea    r9,[rcx+rdx*1-0x1]
  414436:	sete   al
  414439:	lea    rax,[rcx+rax*1+0x1]
  41443e:	mov    rcx,rsi
  414441:	cmp    rax,r9
  414444:	jb     0x414461
  414446:	jmp    0x4146a5
  41444b:	nop    DWORD PTR [rax+rax*1+0x0]
  414450:	add    rax,0x1
  414454:	add    rcx,0x1
  414458:	mov    BYTE PTR [rcx-0x1],r8b
  41445c:	cmp    r9,rax
  41445f:	jbe    0x414482
  414461:	movzx  r8d,BYTE PTR [rax]
  414465:	cmp    r8b,0x5c
  414469:	jne    0x414450
  41446b:	movzx  edx,BYTE PTR [rax+0x1]
  41446f:	cmp    dl,0x22
  414472:	je     0x414479
  414474:	cmp    dl,0x5c
  414477:	jne    0x414450
  414479:	add    rax,0x1
  41447d:	mov    r8d,edx
  414480:	jmp    0x414450
  414482:	mov    rdi,rcx
  414485:	sub    rdi,rsi
  414488:	mov    rax,QWORD PTR [rbx+0x1a8]
  41448f:	mov    BYTE PTR [rcx],0xa
  414492:	mov    edx,0x38
  414497:	mov    ecx,0x1
  41449c:	mov    r14,QWORD PTR [rbx+0x88]
  4144a3:	mov    QWORD PTR [rbp-0x58],rax
  4144a7:	mov    rax,QWORD PTR [rbx+0x1d0]
  4144ae:	mov    QWORD PTR [rbp-0x60],rax
  4144b2:	call   0x43bb20
  4144b7:	mov    rdx,rsi
  4144ba:	mov    QWORD PTR [rbx+0x88],rax
  4144c1:	mov    r9d,0x1
  4144c7:	mov    r8,rdi
  4144ca:	mov    rcx,rbx
  4144cd:	call   0x413eb0
  4144d2:	mov    rax,QWORD PTR [rbx]
  4144d5:	mov    rdx,QWORD PTR [rax+0x48]
  4144d9:	test   rdx,rdx
  4144dc:	je     0x4144e6
  4144de:	mov    rdx,QWORD PTR [rdx+0x50]
  4144e2:	mov    QWORD PTR [rax+0x50],rdx
  4144e6:	mov    rax,QWORD PTR [rbx+0x28]
  4144ea:	mov    BYTE PTR [rbx+0x10],0x1
  4144ee:	mov    rcx,rbx
  4144f1:	mov    BYTE PTR [rbx+0x15],0x0
  4144f5:	mov    BYTE PTR [rbx+0x9c],0x51
  4144fc:	mov    eax,DWORD PTR [rax+0x3c]
  4144ff:	mov    DWORD PTR [rbx+0x30],eax
  414502:	call   0x41baa0
  414507:	lea    rax,[rip+0x3b1ba]        # 0x44f6c8
  41450e:	mov    rsi,QWORD PTR [rbx+0x90]
  414515:	mov    rcx,rbx
  414518:	mov    QWORD PTR [rbx+0x90],rax
  41451f:	call   0x411890
  414524:	mov    edx,0x1
  414529:	mov    rcx,rbx
  41452c:	call   0x4129b0
  414531:	cmp    BYTE PTR [rbx+0x9c],0x4f
  414538:	mov    QWORD PTR [rbx+0x90],rsi
  41453f:	je     0x4145f4
  414545:	mov    ecx,0x18
  41454a:	mov    r15d,0x1
  414550:	call   0x43baf0
  414555:	mov    r12,rax
  414558:	mov    rax,QWORD PTR [rbx+0x98]
  41455f:	mov    QWORD PTR [r12],rax
  414563:	mov    rax,QWORD PTR [rbx+0xa0]
  41456a:	mov    QWORD PTR [r12+0x8],rax
  41456f:	mov    rax,QWORD PTR [rbx+0xa8]
  414576:	mov    QWORD PTR [r12+0x10],rax
  41457b:	mov    rax,QWORD PTR [rbx+0x368]
  414582:	test   rax,rax
  414585:	je     0x414596
  414587:	mov    rdx,QWORD PTR [rbx+0x1a8]
  41458e:	xor    r8d,r8d
  414591:	mov    rcx,rbx
  414594:	call   rax
  414596:	mov    rax,QWORD PTR [rbx]
  414599:	mov    rcx,rbx
  41459c:	mov    QWORD PTR [rax+0x50],0x0
  4145a4:	call   0x414000
  4145a9:	mov    rcx,QWORD PTR [rbx+0x88]
  4145b0:	call   0x4494c8
  4145b5:	mov    rax,QWORD PTR [rbp-0x58]
  4145b9:	mov    QWORD PTR [rbx+0x88],r14
  4145c0:	mov    r9d,r15d
  4145c3:	mov    r8,r12
  4145c6:	xor    edx,edx
  4145c8:	mov    rcx,rbx
  4145cb:	mov    QWORD PTR [rbx+0x1a8],rax
  4145d2:	mov    rax,QWORD PTR [rbp-0x60]
  4145d6:	mov    QWORD PTR [rbx+0x1d0],rax
  4145dd:	call   0x40c980
  4145e2:	nop
  4145e3:	lea    rsp,[rbp-0x48]
  4145e7:	pop    rbx
  4145e8:	pop    rsi
  4145e9:	pop    rdi
  4145ea:	pop    r12
  4145ec:	pop    r13
  4145ee:	pop    r14
  4145f0:	pop    r15
  4145f2:	pop    rbp
  4145f3:	ret    
  4145f4:	mov    ecx,0x4b0
  4145f9:	mov    r13d,0x18
  4145ff:	mov    r15d,0x1
  414605:	call   0x43baf0
  41460a:	mov    r12,rax
  41460d:	mov    rax,QWORD PTR [rbx+0x98]
  414614:	mov    edi,0x32
  414619:	mov    QWORD PTR [r12],rax
  41461d:	mov    rax,QWORD PTR [rbx+0xa0]
  414624:	mov    QWORD PTR [r12+0x8],rax
  414629:	mov    rax,QWORD PTR [rbx+0xa8]
  414630:	mov    QWORD PTR [r12+0x10],rax
  414635:	jmp    0x414644
  414637:	nop    WORD PTR [rax+rax*1+0x0]
  414640:	add    r13,0x18
  414644:	mov    rcx,rbx
  414647:	lea    rsi,[r12+r13*1]
  41464b:	add    r15d,0x1
  41464f:	call   0x40ec60
  414654:	mov    rdx,QWORD PTR [rax]
  414657:	mov    QWORD PTR [rsi],rdx
  41465a:	mov    rdx,QWORD PTR [rax+0x8]
  41465e:	mov    QWORD PTR [rsi+0x8],rdx
  414662:	mov    rax,QWORD PTR [rax+0x10]
  414666:	or     WORD PTR [rsi+0x6],0x20
  41466b:	cmp    BYTE PTR [r12+r13*1+0x4],0x50
  414671:	mov    QWORD PTR [rsi+0x10],rax
  414675:	je     0x414596
  41467b:	cmp    r15d,edi
  41467e:	jne    0x414640
  414680:	lea    eax,[r15+r15*2]
  414684:	mov    rcx,r12
  414687:	mov    edi,eax
  414689:	shr    edi,0x1f
  41468c:	add    edi,eax
  41468e:	sar    edi,1
  414690:	movsxd rax,edi
  414693:	lea    rdx,[rax+rax*2]
  414697:	shl    rdx,0x3
  41469b:	call   0x43bb70
  4146a0:	mov    r12,rax
  4146a3:	jmp    0x414640
  4146a5:	xor    edi,edi
  4146a7:	jmp    0x414488
  4146ac:	nop    DWORD PTR [rax+0x0]
  4146b0:	push   rbx
  4146b1:	sub    rsp,0x20
  4146b5:	mov    rbx,rcx
  4146b8:	call   0x4126e0
  4146bd:	test   rax,rax
  4146c0:	mov    BYTE PTR [rbx+0x9c],0x51
  4146c7:	je     0x4146e3
  4146c9:	mov    edx,DWORD PTR [rax+0x8]
  4146cc:	lea    r8,[rax+0x10]
  4146d0:	mov    rcx,rbx
  4146d3:	call   0x4143f0
  4146d8:	mov    eax,0x1
  4146dd:	add    rsp,0x20
  4146e1:	pop    rbx
  4146e2:	ret    
  4146e3:	lea    r8,[rip+0x3adf6]        # 0x44f4e0
  4146ea:	mov    edx,0x3
  4146ef:	mov    rcx,rbx
  4146f2:	call   0x414b60
  4146f7:	xor    eax,eax
  4146f9:	add    rsp,0x20
  4146fd:	pop    rbx
  4146fe:	ret    
  4146ff:	nop
  414700:	push   rsi
  414701:	push   rbx
  414702:	sub    rsp,0x28
  414706:	mov    rbx,rcx
  414709:	mov    esi,edx
  41470b:	mov    rdx,r8
  41470e:	mov    r8,r9
  414711:	mov    r9d,0x1
  414717:	call   0x413eb0
  41471c:	mov    rax,QWORD PTR [rbx+0x28]
  414720:	mov    BYTE PTR [rbx+0x10],0x1
  414724:	mov    rcx,rbx
  414727:	mov    BYTE PTR [rbx+0x15],0x0
  41472b:	mov    BYTE PTR [rbx+0x9c],0x51
  414732:	mov    eax,DWORD PTR [rax+0x3c]
  414735:	mov    DWORD PTR [rbx+0x30],eax
  414738:	call   0x41baa0
  41473d:	movsxd rdx,esi
  414740:	lea    rax,[rip+0x3ae79]        # 0x44f5c0
  414747:	cmp    BYTE PTR [rbx+0x43d],0x0
  41474e:	lea    rdx,[rdx+rdx*2]
  414752:	lea    rax,[rax+rdx*8]
  414756:	mov    QWORD PTR [rbx+0x90],rax
  41475d:	je     0x41476e
  41475f:	mov    rcx,rbx
  414762:	call   0x411cf0
  414767:	mov    rax,QWORD PTR [rbx+0x90]
  41476e:	mov    rcx,rbx
  414771:	call   QWORD PTR [rax]
  414773:	mov    rcx,rbx
  414776:	mov    edx,0x1
  41477b:	call   0x4129b0
  414780:	mov    rcx,rbx
  414783:	add    rsp,0x28
  414787:	pop    rbx
  414788:	pop    rsi
  414789:	jmp    0x414000
  41478e:	xchg   ax,ax
  414790:	push   rbp
  414791:	push   r12
  414793:	push   rdi
  414794:	push   rsi
  414795:	push   rbx
  414796:	mov    rbp,rsp
  414799:	sub    rsp,0x20
  41479d:	mov    r12,rcx
  4147a0:	mov    rcx,rdx
  4147a3:	mov    rdi,rdx
  4147a6:	call   0x4493c0
  4147ab:	lea    r10,[rax+0x21]
  4147af:	mov    rbx,rax
  4147b2:	mov    rax,r10
  4147b5:	and    rax,0xfffffffffffffff0
  4147b9:	call   0x43d410
  4147be:	sub    rsp,rax
  4147c1:	mov    r8,rbx
  4147c4:	mov    rdx,rdi
  4147c7:	lea    rsi,[rsp+0x20]
  4147cc:	mov    rcx,rsi
  4147cf:	call   0x449450
  4147d4:	mov    edx,0x3d
  4147d9:	mov    rcx,rdi
  4147dc:	call   0x4493e8
  4147e1:	test   rax,rax
  4147e4:	je     0x414810
  4147e6:	sub    rax,rdi
  4147e9:	mov    BYTE PTR [rsi+rax*1],0x20
  4147ed:	mov    r9,rbx
  4147f0:	mov    r8,rsi
  4147f3:	xor    edx,edx
  4147f5:	mov    rcx,r12
  4147f8:	mov    BYTE PTR [rsi+rbx*1],0xa
  4147fc:	call   0x414700
  414801:	nop
  414802:	mov    rsp,rbp
  414805:	pop    rbx
  414806:	pop    rsi
  414807:	pop    rdi
  414808:	pop    r12
  41480a:	pop    rbp
  41480b:	ret    
  41480c:	nop    DWORD PTR [rax+0x0]
  414810:	lea    rax,[rbx+0x1]
  414814:	mov    BYTE PTR [rsi+rbx*1],0x20
  414818:	add    rbx,0x2
  41481c:	mov    BYTE PTR [rsi+rax*1],0x31
  414820:	jmp    0x4147ed
  414822:	nop    DWORD PTR [rax+0x0]
  414826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414830:	push   rbx
  414831:	sub    rsp,0x30
  414835:	mov    rbx,rcx
  414838:	mov    QWORD PTR [rsp+0x50],r8
  41483d:	lea    rcx,[rsp+0x20]
  414842:	lea    r8,[rsp+0x50]
  414847:	mov    QWORD PTR [rsp+0x58],r9
  41484c:	mov    QWORD PTR [rsp+0x20],0x0
  414855:	mov    QWORD PTR [rsp+0x28],r8
  41485a:	call   0x440e80
  41485f:	mov    rdx,QWORD PTR [rsp+0x20]
  414864:	mov    rcx,rbx
  414867:	call   0x414790
  41486c:	mov    rcx,QWORD PTR [rsp+0x20]
  414871:	call   0x4494c8
  414876:	nop
  414877:	add    rsp,0x30
  41487b:	pop    rbx
  41487c:	ret    
  41487d:	nop    DWORD PTR [rax]
  414880:	push   rbp
  414881:	push   rdi
  414882:	push   rsi
  414883:	push   rbx
  414884:	sub    rsp,0x28
  414888:	lea    rbp,[rsp+0x80]
  414890:	mov    rdi,rcx
  414893:	mov    rcx,rdx
  414896:	mov    rsi,rdx
  414899:	call   0x4493c0
  41489e:	lea    r10,[rax+0x1f]
  4148a2:	mov    rbx,rax
  4148a5:	mov    rax,r10
  4148a8:	and    rax,0xfffffffffffffff0
  4148ac:	call   0x43d410
  4148b1:	sub    rsp,rax
  4148b4:	mov    r8,rbx
  4148b7:	mov    rdx,rsi
  4148ba:	lea    r10,[rsp+0x20]
  4148bf:	mov    rcx,r10
  4148c2:	call   0x449450
  4148c7:	mov    r9,rbx
  4148ca:	mov    BYTE PTR [rax+rbx*1],0xa
  4148ce:	mov    r8,rax
  4148d1:	xor    edx,edx
  4148d3:	mov    rcx,rdi
  4148d6:	call   0x414700
  4148db:	nop
  4148dc:	lea    rsp,[rbp-0x58]
  4148e0:	pop    rbx
  4148e1:	pop    rsi
  4148e2:	pop    rdi
  4148e3:	pop    rbp
  4148e4:	ret    
  4148e5:	nop
  4148e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4148f0:	push   rbp
  4148f1:	push   rdi
  4148f2:	push   rsi
  4148f3:	push   rbx
  4148f4:	sub    rsp,0x28
  4148f8:	lea    rbp,[rsp+0x80]
  414900:	mov    rdi,rcx
  414903:	mov    rcx,rdx
  414906:	mov    rsi,rdx
  414909:	call   0x4493c0
  41490e:	lea    r10,[rax+0x1f]
  414912:	mov    rbx,rax
  414915:	mov    rax,r10
  414918:	and    rax,0xfffffffffffffff0
  41491c:	call   0x43d410
  414921:	sub    rsp,rax
  414924:	mov    r8,rbx
  414927:	mov    rdx,rsi
  41492a:	lea    r10,[rsp+0x20]
  41492f:	mov    rcx,r10
  414932:	call   0x449450
  414937:	mov    r9,rbx
  41493a:	mov    BYTE PTR [rax+rbx*1],0xa
  41493e:	mov    r8,rax
  414941:	mov    edx,0x7
  414946:	mov    rcx,rdi
  414949:	call   0x414700
  41494e:	nop
  41494f:	lea    rsp,[rbp-0x58]
  414953:	pop    rbx
  414954:	pop    rsi
  414955:	pop    rdi
  414956:	pop    rbp
  414957:	ret    
  414958:	nop    DWORD PTR [rax+rax*1+0x0]
  414960:	push   rbp
  414961:	push   r13
  414963:	push   r12
  414965:	push   rdi
  414966:	push   rsi
  414967:	push   rbx
  414968:	sub    rsp,0x28
  41496c:	lea    rbp,[rsp+0x80]
  414974:	mov    rbx,rdx
  414977:	mov    rsi,rcx
  41497a:	mov    rcx,rdx
  41497d:	mov    edi,r8d
  414980:	call   0x4493c0
  414985:	mov    edx,0x3d
  41498a:	mov    r12,rax
  41498d:	mov    rcx,rbx
  414990:	call   0x4493e8
  414995:	lea    r9,[r12+0x20]
  41499a:	mov    r13,rax
  41499d:	mov    rax,r9
  4149a0:	and    rax,0xfffffffffffffff0
  4149a4:	call   0x43d410
  4149a9:	sub    rsp,rax
  4149ac:	mov    r8,r12
  4149af:	mov    rdx,rbx
  4149b2:	lea    r10,[rsp+0x20]
  4149b7:	mov    rcx,r10
  4149ba:	call   0x449450
  4149bf:	test   r13,r13
  4149c2:	mov    r10,rax
  4149c5:	je     0x414a00
  4149c7:	sub    r13,rbx
  4149ca:	lea    r9,[r12+0x1]
  4149cf:	mov    BYTE PTR [rax+r13*1],0x28
  4149d4:	mov    BYTE PTR [rax+r12*1],0x29
  4149d9:	mov    BYTE PTR [r10+r9*1],0xa
  4149de:	mov    r8,r10
  4149e1:	mov    edx,edi
  4149e3:	mov    rcx,rsi
  4149e6:	call   0x414700
  4149eb:	nop
  4149ec:	lea    rsp,[rbp-0x58]
  4149f0:	pop    rbx
  4149f1:	pop    rsi
  4149f2:	pop    rdi
  4149f3:	pop    r12
  4149f5:	pop    r13
  4149f7:	pop    rbp
  4149f8:	ret    
  4149f9:	nop    DWORD PTR [rax+0x0]
  414a00:	mov    r9,r12
  414a03:	jmp    0x4149d9
  414a05:	nop
  414a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414a10:	mov    r8d,0x10
  414a16:	jmp    0x414960
  414a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  414a20:	mov    r8d,0x11
  414a26:	jmp    0x414960
  414a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  414a30:	push   rdi
  414a31:	push   rsi
  414a32:	push   rbx
  414a33:	sub    rsp,0x20
  414a37:	lea    rsi,[rip+0x3ab92]        # 0x44f5d0
  414a3e:	xor    ebx,ebx
  414a40:	mov    rdi,rcx
  414a43:	movzx  r8d,WORD PTR [rsi]
  414a47:	mov    rdx,QWORD PTR [rsi-0x8]
  414a4b:	mov    rcx,rdi
  414a4e:	add    rsi,0x18
  414a52:	call   0x41b3b0
  414a57:	lea    edx,[rbx+rbx*1+0x1]
  414a5b:	add    ebx,0x1
  414a5e:	and    ebx,0x7f
  414a61:	cmp    bl,0x13
  414a64:	mov    BYTE PTR [rax+0x10],dl
  414a67:	jne    0x414a43
  414a69:	add    rsp,0x20
  414a6d:	pop    rbx
  414a6e:	pop    rsi
  414a6f:	pop    rdi
  414a70:	ret    
  414a71:	nop    DWORD PTR [rax+rax*1+0x0]
  414a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414a80:	jmp    0x4116b0
  414a85:	nop
  414a86:	nop
  414a87:	nop
  414a88:	nop
  414a89:	nop
  414a8a:	nop
  414a8b:	nop
  414a8c:	nop
  414a8d:	nop
  414a8e:	nop
  414a8f:	nop
  414a90:	sub    rsp,0x48
  414a94:	cmp    BYTE PTR [rcx+0x43d],0x0
  414a9b:	je     0x414ab0
  414a9d:	cmp    BYTE PTR [rcx+0x10],0x0
  414aa1:	je     0x414af5
  414aa3:	mov    r10d,DWORD PTR [rcx+0x30]
  414aa7:	jmp    0x414ac8
  414aa9:	nop    DWORD PTR [rax+0x0]
  414ab0:	mov    r10,QWORD PTR [rcx+0x1d0]
  414ab7:	mov    rax,QWORD PTR [rcx+0x1a8]
  414abe:	cmp    rax,QWORD PTR [r10+0x10]
  414ac2:	je     0x414b00
  414ac4:	mov    r10d,DWORD PTR [rax-0x18]
  414ac8:	mov    rax,QWORD PTR [rcx+0x3c8]
  414acf:	test   rax,rax
  414ad2:	je     0x414b17
  414ad4:	mov    r11,QWORD PTR [rsp+0x70]
  414ad9:	mov    QWORD PTR [rsp+0x28],r9
  414ade:	mov    r9d,r10d
  414ae1:	mov    DWORD PTR [rsp+0x20],0x0
  414ae9:	mov    QWORD PTR [rsp+0x30],r11
  414aee:	call   rax
  414af0:	add    rsp,0x48
  414af4:	ret    
  414af5:	mov    rax,QWORD PTR [rcx+0x28]
  414af9:	mov    r10d,DWORD PTR [rax+0x3c]
  414afd:	jmp    0x414ac8
  414aff:	nop
  414b00:	mov    rax,QWORD PTR [r10+0x8]
  414b04:	test   rax,rax
  414b07:	je     0x414b12
  414b09:	mov    rax,QWORD PTR [rax+0x18]
  414b0d:	mov    r10d,DWORD PTR [rax]
  414b10:	jmp    0x414ac8
  414b12:	xor    r10d,r10d
  414b15:	jmp    0x414ac8
  414b17:	call   0x449548
  414b1c:	nop
  414b1d:	nop    DWORD PTR [rax]
  414b20:	push   rbx
  414b21:	sub    rsp,0x20
  414b25:	mov    rax,QWORD PTR [rcx+0x3c8]
  414b2c:	mov    r10d,DWORD PTR [rsp+0x50]
  414b31:	mov    r11,QWORD PTR [rsp+0x58]
  414b36:	mov    rbx,QWORD PTR [rsp+0x60]
  414b3b:	test   rax,rax
  414b3e:	je     0x414b57
  414b40:	mov    QWORD PTR [rsp+0x60],rbx
  414b45:	mov    QWORD PTR [rsp+0x58],r11
  414b4a:	mov    DWORD PTR [rsp+0x50],r10d
  414b4f:	add    rsp,0x20
  414b53:	pop    rbx
  414b54:	rex.W jmp rax
  414b57:	call   0x449548
  414b5c:	nop
  414b5d:	nop    DWORD PTR [rax]
  414b60:	sub    rsp,0x48
  414b64:	lea    rax,[rsp+0x68]
  414b69:	mov    QWORD PTR [rsp+0x68],r9
  414b6e:	mov    r9,r8
  414b71:	xor    r8d,r8d
  414b74:	mov    QWORD PTR [rsp+0x38],rax
  414b79:	lea    rax,[rsp+0x38]
  414b7e:	mov    QWORD PTR [rsp+0x20],rax
  414b83:	call   0x414a90
  414b88:	add    rsp,0x48
  414b8c:	ret    
  414b8d:	nop    DWORD PTR [rax]
  414b90:	sub    rsp,0x48
  414b94:	lea    rax,[rsp+0x68]
  414b99:	mov    QWORD PTR [rsp+0x68],r9
  414b9e:	mov    r9,r8
  414ba1:	mov    r8d,edx
  414ba4:	xor    edx,edx
  414ba6:	mov    QWORD PTR [rsp+0x38],rax
  414bab:	lea    rax,[rsp+0x38]
  414bb0:	mov    QWORD PTR [rsp+0x20],rax
  414bb5:	call   0x414a90
  414bba:	add    rsp,0x48
  414bbe:	ret    
  414bbf:	nop
  414bc0:	sub    rsp,0x48
  414bc4:	lea    rax,[rsp+0x68]
  414bc9:	mov    QWORD PTR [rsp+0x68],r9
  414bce:	mov    r9,r8
  414bd1:	mov    r8d,edx
  414bd4:	mov    edx,0x2
  414bd9:	mov    QWORD PTR [rsp+0x38],rax
  414bde:	lea    rax,[rsp+0x38]
  414be3:	mov    QWORD PTR [rsp+0x20],rax
  414be8:	call   0x414a90
  414bed:	add    rsp,0x48
  414bf1:	ret    
  414bf2:	nop    DWORD PTR [rax+0x0]
  414bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414c00:	sub    rsp,0x48
  414c04:	lea    rax,[rsp+0x68]
  414c09:	mov    QWORD PTR [rsp+0x68],r9
  414c0e:	mov    r9,r8
  414c11:	mov    r8d,edx
  414c14:	mov    edx,0x1
  414c19:	mov    QWORD PTR [rsp+0x38],rax
  414c1e:	lea    rax,[rsp+0x38]
  414c23:	mov    QWORD PTR [rsp+0x20],rax
  414c28:	call   0x414a90
  414c2d:	add    rsp,0x48
  414c31:	ret    
  414c32:	nop    DWORD PTR [rax+0x0]
  414c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414c40:	sub    rsp,0x58
  414c44:	lea    rax,[rsp+0x88]
  414c4c:	mov    DWORD PTR [rsp+0x20],r9d
  414c51:	mov    r9d,r8d
  414c54:	xor    r8d,r8d
  414c57:	mov    QWORD PTR [rsp+0x48],rax
  414c5c:	lea    rax,[rsp+0x48]
  414c61:	mov    QWORD PTR [rsp+0x30],rax
  414c66:	mov    rax,QWORD PTR [rsp+0x80]
  414c6e:	mov    QWORD PTR [rsp+0x28],rax
  414c73:	call   0x414b20
  414c78:	add    rsp,0x58
  414c7c:	ret    
  414c7d:	nop    DWORD PTR [rax]
  414c80:	sub    rsp,0x58
  414c84:	lea    rax,[rsp+0x88]
  414c8c:	mov    DWORD PTR [rsp+0x20],r9d
  414c91:	mov    r9d,r8d
  414c94:	mov    r8d,edx
  414c97:	xor    edx,edx
  414c99:	mov    QWORD PTR [rsp+0x48],rax
  414c9e:	lea    rax,[rsp+0x48]
  414ca3:	mov    QWORD PTR [rsp+0x30],rax
  414ca8:	mov    rax,QWORD PTR [rsp+0x80]
  414cb0:	mov    QWORD PTR [rsp+0x28],rax
  414cb5:	call   0x414b20
  414cba:	add    rsp,0x58
  414cbe:	ret    
  414cbf:	nop
  414cc0:	sub    rsp,0x58
  414cc4:	lea    rax,[rsp+0x88]
  414ccc:	mov    DWORD PTR [rsp+0x20],r9d
  414cd1:	mov    r9d,r8d
  414cd4:	mov    r8d,edx
  414cd7:	mov    edx,0x2
  414cdc:	mov    QWORD PTR [rsp+0x48],rax
  414ce1:	lea    rax,[rsp+0x48]
  414ce6:	mov    QWORD PTR [rsp+0x30],rax
  414ceb:	mov    rax,QWORD PTR [rsp+0x80]
  414cf3:	mov    QWORD PTR [rsp+0x28],rax
  414cf8:	call   0x414b20
  414cfd:	add    rsp,0x58
  414d01:	ret    
  414d02:	nop    DWORD PTR [rax+0x0]
  414d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d10:	sub    rsp,0x58
  414d14:	lea    rax,[rsp+0x88]
  414d1c:	mov    DWORD PTR [rsp+0x20],r9d
  414d21:	mov    r9d,r8d
  414d24:	mov    r8d,edx
  414d27:	mov    edx,0x1
  414d2c:	mov    QWORD PTR [rsp+0x48],rax
  414d31:	lea    rax,[rsp+0x48]
  414d36:	mov    QWORD PTR [rsp+0x30],rax
  414d3b:	mov    rax,QWORD PTR [rsp+0x80]
  414d43:	mov    QWORD PTR [rsp+0x28],rax
  414d48:	call   0x414b20
  414d4d:	add    rsp,0x58
  414d51:	ret    
  414d52:	nop    DWORD PTR [rax+0x0]
  414d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d60:	push   rdi
  414d61:	push   rsi
  414d62:	push   rbx
  414d63:	sub    rsp,0x30
  414d67:	mov    rdi,r8
  414d6a:	mov    rbx,rcx
  414d6d:	mov    esi,edx
  414d6f:	call   QWORD PTR [rip+0x4fa0f]        # 0x464784
  414d75:	mov    ecx,DWORD PTR [rax]
  414d77:	call   0x43bc20
  414d7c:	lea    r8,[rip+0x3aa3d]        # 0x44f7c0
  414d83:	mov    QWORD PTR [rsp+0x20],rax
  414d88:	mov    r9,rdi
  414d8b:	mov    edx,esi
  414d8d:	mov    rcx,rbx
  414d90:	call   0x414b60
  414d95:	add    rsp,0x30
  414d99:	pop    rbx
  414d9a:	pop    rsi
  414d9b:	pop    rdi
  414d9c:	ret    
  414d9d:	nop    DWORD PTR [rax]
  414da0:	push   rdi
  414da1:	push   rsi
  414da2:	push   rbx
  414da3:	sub    rsp,0x30
  414da7:	cmp    BYTE PTR [r8],0x0
  414dab:	lea    rax,[rip+0x3aa15]        # 0x44f7c7
  414db2:	mov    rbx,r8
  414db5:	mov    rsi,rcx
  414db8:	mov    edi,edx
  414dba:	cmove  rbx,rax
  414dbe:	call   QWORD PTR [rip+0x4f9c0]        # 0x464784
  414dc4:	mov    ecx,DWORD PTR [rax]
  414dc6:	call   0x43bc20
  414dcb:	lea    r8,[rip+0x3a9ee]        # 0x44f7c0
  414dd2:	mov    QWORD PTR [rsp+0x20],rax
  414dd7:	mov    r9,rbx
  414dda:	mov    edx,edi
  414ddc:	mov    rcx,rsi
  414ddf:	call   0x414b60
  414de4:	add    rsp,0x30
  414de8:	pop    rbx
  414de9:	pop    rsi
  414dea:	pop    rdi
  414deb:	ret    
  414dec:	nop
  414ded:	nop
  414dee:	nop
  414def:	nop
  414df0:	mov    r9,QWORD PTR [rdx]
  414df3:	mov    r10,QWORD PTR [rdx+0x8]
  414df7:	cmp    r8,0x40
  414dfb:	mov    rax,rcx
  414dfe:	jbe    0x414e31
  414e00:	lea    rcx,[r8-0x40]
  414e04:	cmp    rcx,0x3f
  414e08:	ja     0x414e1a
  414e0a:	mov    r8d,0x1
  414e10:	shl    r8,cl
  414e13:	sub    r8,0x1
  414e17:	and    r9,r8
  414e1a:	mov    QWORD PTR [rdx],r9
  414e1d:	mov    QWORD PTR [rdx+0x8],r10
  414e21:	mov    rdx,QWORD PTR [rdx+0x10]
  414e25:	mov    QWORD PTR [rax],r9
  414e28:	mov    QWORD PTR [rax+0x8],r10
  414e2c:	mov    QWORD PTR [rax+0x10],rdx
  414e30:	ret    
  414e31:	mov    r9d,0x0
  414e37:	je     0x414e1a
  414e39:	mov    r11d,0x1
  414e3f:	mov    ecx,r8d
  414e42:	shl    r11,cl
  414e45:	sub    r11,0x1
  414e49:	and    r10,r11
  414e4c:	jmp    0x414e1a
  414e4e:	xchg   ax,ax
  414e50:	push   rbp
  414e51:	push   rdi
  414e52:	push   rsi
  414e53:	push   rbx
  414e54:	sub    rsp,0x68
  414e58:	mov    rbp,QWORD PTR [rdx]
  414e5b:	mov    rdi,QWORD PTR [rdx+0x8]
  414e5f:	mov    rbx,rdx
  414e62:	mov    rsi,rcx
  414e65:	mov    rax,rbp
  414e68:	mov    rcx,rbp
  414e6b:	mov    rdx,rdi
  414e6e:	not    rcx
  414e71:	neg    rax
  414e74:	neg    rdx
  414e77:	cmovne rax,rcx
  414e7b:	mov    QWORD PTR [rbx+0x8],rdx
  414e7f:	lea    rcx,[rsp+0x40]
  414e84:	mov    QWORD PTR [rbx],rax
  414e87:	mov    QWORD PTR [rsp+0x20],rax
  414e8c:	mov    rax,QWORD PTR [rbx+0x10]
  414e90:	mov    QWORD PTR [rsp+0x28],rdx
  414e95:	lea    rdx,[rsp+0x20]
  414e9a:	mov    QWORD PTR [rsp+0x30],rax
  414e9f:	call   0x414df0
  414ea4:	mov    rdx,QWORD PTR [rsp+0x40]
  414ea9:	mov    rcx,QWORD PTR [rsp+0x48]
  414eae:	mov    r8,QWORD PTR [rsp+0x50]
  414eb3:	cmp    rbp,rdx
  414eb6:	mov    QWORD PTR [rbx],rdx
  414eb9:	mov    QWORD PTR [rbx+0x8],rcx
  414ebd:	sete   r9b
  414ec1:	cmp    rdi,rcx
  414ec4:	mov    QWORD PTR [rbx+0x10],r8
  414ec8:	sete   al
  414ecb:	and    eax,r9d
  414ece:	xor    r9d,r9d
  414ed1:	cmp    al,r8b
  414ed4:	ja     0x414f00
  414ed6:	mov    rax,QWORD PTR [rbx]
  414ed9:	mov    BYTE PTR [rbx+0x11],r9b
  414edd:	mov    QWORD PTR [rsi],rax
  414ee0:	mov    rax,QWORD PTR [rbx+0x8]
  414ee4:	mov    QWORD PTR [rsi+0x8],rax
  414ee8:	mov    rax,QWORD PTR [rbx+0x10]
  414eec:	mov    QWORD PTR [rsi+0x10],rax
  414ef0:	mov    rax,rsi
  414ef3:	add    rsp,0x68
  414ef7:	pop    rbx
  414ef8:	pop    rsi
  414ef9:	pop    rdi
  414efa:	pop    rbp
  414efb:	ret    
  414efc:	nop    DWORD PTR [rax+0x0]
  414f00:	or     rcx,rdx
  414f03:	setne  r9b
  414f07:	jmp    0x414ed6
  414f09:	nop    DWORD PTR [rax+0x0]
  414f10:	mov    r11d,edx
  414f13:	shr    rdx,0x20
  414f17:	mov    r9d,r8d
  414f1a:	mov    rax,rcx
  414f1d:	shr    r8,0x20
  414f21:	mov    rcx,rdx
  414f24:	imul   rcx,r8
  414f28:	mov    r10,r11
  414f2b:	imul   r8,r11
  414f2f:	imul   r10,r9
  414f33:	mov    QWORD PTR [rax],rcx
  414f36:	imul   rdx,r9
  414f3a:	mov    r9,r8
  414f3d:	shl    r9,0x20
  414f41:	add    r9,r10
  414f44:	cmp    r10,r9
  414f47:	mov    QWORD PTR [rax+0x8],r9
  414f4b:	jbe    0x414f54
  414f4d:	add    rcx,0x1
  414f51:	mov    QWORD PTR [rax],rcx
  414f54:	mov    r10,rdx
  414f57:	mov    BYTE PTR [rax+0x10],0x1
  414f5b:	mov    BYTE PTR [rax+0x11],0x0
  414f5f:	shl    r10,0x20
  414f63:	add    r10,r9
  414f66:	cmp    r10,r9
  414f69:	mov    QWORD PTR [rax+0x8],r10
  414f6d:	adc    rcx,0x0
  414f71:	shr    rdx,0x20
  414f75:	shr    r8,0x20
  414f79:	add    r8,rdx
  414f7c:	add    r8,rcx
  414f7f:	mov    QWORD PTR [rax],r8
  414f82:	ret    
  414f83:	nop    DWORD PTR [rax]
  414f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414f90:	push   r14
  414f92:	push   r13
  414f94:	push   r12
  414f96:	push   rbp
  414f97:	push   rdi
  414f98:	push   rsi
  414f99:	push   rbx
  414f9a:	sub    rsp,0x20
  414f9e:	add    BYTE PTR [rdx+0x1a],0x1
  414fa2:	xor    r13d,r13d
  414fa5:	mov    BYTE PTR [rcx+0x10],0x0
  414fa9:	mov    QWORD PTR [rcx],0x0
  414fb0:	mov    rsi,rcx
  414fb3:	mov    BYTE PTR [rcx+0x11],0x0
  414fb7:	mov    QWORD PTR [rcx+0x8],0x0
  414fbf:	mov    rcx,rdx
  414fc2:	mov    rbx,rdx
  414fc5:	mov    r14d,r8d
  414fc8:	call   0x40ec60
  414fcd:	mov    rdi,rax
  414fd0:	movzx  eax,BYTE PTR [rax+0x4]
  414fd4:	cmp    al,0x14
  414fd6:	je     0x4150e0
  414fdc:	cmp    al,0x43
  414fde:	sete   r12b
  414fe2:	je     0x415033
  414fe4:	cmp    al,0x3d
  414fe6:	je     0x415033
  414fe8:	cmp    al,0x3
  414fea:	je     0x4150c0
  414ff0:	lea    r8,[rip+0x3a7e9]        # 0x44f7e0
  414ff7:	mov    edx,0x3
  414ffc:	mov    rcx,rbx
  414fff:	xor    edi,edi
  415001:	call   0x414b60
  415006:	test   r13b,r13b
  415009:	je     0x415096
  41500f:	mov    rcx,rbx
  415012:	call   0x40ec60
  415017:	cmp    BYTE PTR [rax+0x4],0x15
  41501b:	je     0x415096
  41501d:	lea    r8,[rip+0x3a7f4]        # 0x44f818
  415024:	mov    edx,0x3
  415029:	mov    rcx,rbx
  41502c:	call   0x414b60
  415031:	jmp    0x415096
  415033:	mov    eax,DWORD PTR [rdi+0x8]
  415036:	lea    ecx,[rax-0x1]
  415039:	call   0x43baf0
  41503e:	mov    rbp,rax
  415041:	mov    eax,DWORD PTR [rdi+0x8]
  415044:	mov    rdx,QWORD PTR [rdi+0x10]
  415048:	mov    rcx,rbp
  41504b:	lea    r8d,[rax-0x2]
  41504f:	add    rdx,0x1
  415053:	call   0x449450
  415058:	mov    eax,DWORD PTR [rdi+0x8]
  41505b:	movzx  r8d,r12b
  41505f:	sub    eax,0x2
  415062:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  415067:	mov    rdi,QWORD PTR [rdi+0x8]
  41506b:	mov    rcx,rbx
  41506e:	mov    r9d,r14d
  415071:	mov    rdx,rbp
  415074:	call   0x41b0c0
  415079:	test   al,al
  41507b:	mov    rcx,rbp
  41507e:	setne  al
  415081:	movzx  eax,al
  415084:	mov    QWORD PTR [rsi+0x8],rax
  415088:	call   0x4494c8
  41508d:	test   r13b,r13b
  415090:	jne    0x41500f
  415096:	test   rdi,rdi
  415099:	je     0x4150a2
  41509b:	mov    QWORD PTR [rbx+0x198],rdi
  4150a2:	sub    BYTE PTR [rbx+0x1a],0x1
  4150a6:	mov    rax,rsi
  4150a9:	add    rsp,0x20
  4150ad:	pop    rbx
  4150ae:	pop    rsi
  4150af:	pop    rdi
  4150b0:	pop    rbp
  4150b1:	pop    r12
  4150b3:	pop    r13
  4150b5:	pop    r14
  4150b7:	ret    
  4150b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4150c0:	mov    rcx,rbx
  4150c3:	xor    edi,edi
  4150c5:	call   0x414a80
  4150ca:	test   rax,rax
  4150cd:	mov    rbp,rax
  4150d0:	je     0x41508d
  4150d2:	mov    r8d,0x1
  4150d8:	jmp    0x41506b
  4150da:	nop    WORD PTR [rax+rax*1+0x0]
  4150e0:	mov    rcx,rbx
  4150e3:	mov    r13d,0x1
  4150e9:	call   0x40ec60
  4150ee:	mov    rdi,rax
  4150f1:	movzx  eax,BYTE PTR [rax+0x4]
  4150f5:	jmp    0x414fdc
  4150fa:	nop    WORD PTR [rax+rax*1+0x0]
  415100:	push   rbp
  415101:	push   rdi
  415102:	push   rsi
  415103:	push   rbx
  415104:	cmp    r8,0x2
  415108:	je     0x415330
  41510e:	test   r8,r8
  415111:	movzx  ebp,BYTE PTR [rcx]
  415114:	je     0x4151e0
  41511a:	test   bpl,bpl
  41511d:	je     0x4151e0
  415123:	movzx  eax,BYTE PTR [rdx+r8*1-0x1]
  415129:	lea    r9,[r8-0x1]
  41512d:	cmp    al,0x52
  41512f:	je     0x415147
  415131:	jbe    0x4151d0
  415137:	cmp    al,0x6b
  415139:	je     0x415370
  41513f:	cmp    al,0x72
  415141:	jne    0x4151e0
  415147:	mov    r10d,0x100000
  41514d:	cmp    r8,0x1
  415151:	je     0x415380
  415157:	movzx  ecx,BYTE PTR [rdx]
  41515a:	mov    eax,ecx
  41515c:	and    eax,0xffffffdf
  41515f:	cmp    al,0x55
  415161:	jne    0x415180
  415163:	or     r10,0x1000
  41516a:	cmp    r9,0x1
  41516e:	je     0x415380
  415174:	lea    r9,[r8-0x2]
  415178:	movzx  ecx,BYTE PTR [rdx+0x1]
  41517c:	add    rdx,0x1
  415180:	cmp    cl,0x4c
  415183:	je     0x4153f3
  415189:	jbe    0x415310
  41518f:	cmp    cl,0x68
  415192:	je     0x4153e0
  415198:	cmp    cl,0x6c
  41519b:	jne    0x415320
  4151a1:	cmp    r9,0x1
  4151a5:	je     0x415416
  4151ab:	xor    eax,eax
  4151ad:	cmp    r9,0x2
  4151b1:	jne    0x415322
  4151b7:	or     r10d,0x40
  4151bb:	cmp    BYTE PTR [rdx+0x1],0x6c
  4151bf:	cmove  eax,r10d
  4151c3:	jmp    0x415322
  4151c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4151d0:	cmp    al,0x4b
  4151d2:	je     0x415370
  4151d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4151e0:	add    r8,rdx
  4151e3:	xor    edi,edi
  4151e5:	xor    r9d,r9d
  4151e8:	xor    r10d,r10d
  4151eb:	xor    esi,esi
  4151ed:	xor    ebx,ebx
  4151ef:	xor    r11d,r11d
  4151f2:	cmp    r8,rdx
  4151f5:	lea    rcx,[rip+0x3a640]        # 0x44f83c
  4151fc:	je     0x41522d
  4151fe:	xchg   ax,ax
  415200:	movzx  eax,BYTE PTR [r8-0x1]
  415205:	sub    eax,0x44
  415208:	cmp    al,0x33
  41520a:	ja     0x415320
  415210:	movzx  eax,al
  415213:	movsxd rax,DWORD PTR [rcx+rax*4]
  415217:	add    rax,rcx
  41521a:	jmp    rax
  41521c:	nop    DWORD PTR [rax+0x0]
  415220:	add    r10,0x1
  415224:	sub    r8,0x1
  415228:	cmp    r8,rdx
  41522b:	jne    0x415200
  41522d:	lea    rax,[r10+r9*1]
  415231:	add    rax,rsi
  415234:	add    rax,rbx
  415237:	add    rax,r11
  41523a:	cmp    rax,0x1
  41523e:	ja     0x415320
  415244:	cmp    rdi,0x1
  415248:	ja     0x415320
  41524e:	test   bpl,bpl
  415251:	sete   dl
  415254:	test   dil,0x1
  415258:	je     0x415264
  41525a:	xor    eax,eax
  41525c:	test   dl,dl
  41525e:	jne    0x415322
  415264:	mov    rax,r10
  415267:	or     rax,r9
  41526a:	je     0x415276
  41526c:	xor    eax,eax
  41526e:	test   dl,dl
  415270:	jne    0x415322
  415276:	cmp    rdi,0x1
  41527a:	mov    edx,0x10
  41527f:	sbb    eax,eax
  415281:	not    eax
  415283:	and    eax,0x2000
  415288:	test   r11,r11
  41528b:	jne    0x4152b7
  41528d:	test   rbx,rbx
  415290:	mov    dl,0x20
  415292:	jne    0x4152b7
  415294:	test   rsi,rsi
  415297:	mov    dl,0x40
  415299:	jne    0x4152b7
  41529b:	test   r10,r10
  41529e:	mov    edx,0x10000
  4152a3:	jne    0x4152b7
  4152a5:	cmp    r9,0x1
  4152a9:	sbb    edx,edx
  4152ab:	and    edx,0xfffe8000
  4152b1:	add    edx,0x20000
  4152b7:	or     eax,edx
  4152b9:	jmp    0x415322
  4152bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4152c0:	add    r9,0x1
  4152c4:	jmp    0x415224
  4152c9:	nop    DWORD PTR [rax+0x0]
  4152d0:	add    rsi,0x1
  4152d4:	jmp    0x415224
  4152d9:	nop    DWORD PTR [rax+0x0]
  4152e0:	add    rdi,0x1
  4152e4:	jmp    0x415224
  4152e9:	nop    DWORD PTR [rax+0x0]
  4152f0:	add    r11,0x1
  4152f4:	jmp    0x415224
  4152f9:	nop    DWORD PTR [rax+0x0]
  415300:	add    rbx,0x1
  415304:	jmp    0x415224
  415309:	nop    DWORD PTR [rax+0x0]
  415310:	cmp    cl,0x48
  415313:	je     0x4153e0
  415319:	nop    DWORD PTR [rax+0x0]
  415320:	xor    eax,eax
  415322:	pop    rbx
  415323:	pop    rsi
  415324:	pop    rdi
  415325:	pop    rbp
  415326:	ret    
  415327:	nop    WORD PTR [rax+rax*1+0x0]
  415330:	movzx  eax,BYTE PTR [rdx]
  415333:	mov    r9d,eax
  415336:	and    r9d,0xffffffdf
  41533a:	cmp    r9b,0x44
  41533e:	jne    0x41510e
  415344:	movzx  edi,BYTE PTR [rdx+0x1]
  415348:	cmp    al,0x44
  41534a:	sete   al
  41534d:	lea    r9d,[rdi-0x44]
  415351:	cmp    r9b,0x28
  415355:	ja     0x41510e
  41535b:	lea    r10,[rip+0x3a5aa]        # 0x44f90c
  415362:	movzx  r9d,r9b
  415366:	movsxd r9,DWORD PTR [r10+r9*4]
  41536a:	add    r10,r9
  41536d:	jmp    r10
  415370:	mov    r10d,0x200000
  415376:	jmp    0x41514d
  41537b:	nop    DWORD PTR [rax+rax*1+0x0]
  415380:	mov    eax,r10d
  415383:	jmp    0x415322
  415385:	cmp    al,0x1
  415387:	sbb    eax,eax
  415389:	and    eax,0x4040
  41538e:	jmp    0x415322
  415390:	shl    eax,0x1f
  415393:	sar    eax,0x1f
  415396:	and    eax,0x4010
  41539b:	jmp    0x415322
  41539d:	shl    eax,0x1f
  4153a0:	sar    eax,0x1f
  4153a3:	and    eax,0x4020
  4153a8:	jmp    0x415322
  4153ad:	cmp    al,0x1
  4153af:	sbb    eax,eax
  4153b1:	and    eax,0x4020
  4153b6:	jmp    0x415322
  4153bb:	shl    eax,0x1f
  4153be:	sar    eax,0x1f
  4153c1:	and    eax,0x4040
  4153c6:	jmp    0x415322
  4153cb:	cmp    al,0x1
  4153cd:	sbb    eax,eax
  4153cf:	and    eax,0x4010
  4153d4:	jmp    0x415322
  4153d9:	nop    DWORD PTR [rax+0x0]
  4153e0:	xor    eax,eax
  4153e2:	or     r10d,0x10
  4153e6:	cmp    r9,0x1
  4153ea:	cmove  eax,r10d
  4153ee:	jmp    0x415322
  4153f3:	cmp    r9,0x1
  4153f7:	je     0x415416
  4153f9:	xor    eax,eax
  4153fb:	cmp    r9,0x2
  4153ff:	jne    0x415322
  415405:	or     r10d,0x40
  415409:	cmp    BYTE PTR [rdx+0x1],0x4c
  41540d:	cmove  eax,r10d
  415411:	jmp    0x415322
  415416:	mov    eax,r10d
  415419:	or     eax,0x20
  41541c:	jmp    0x415322
  415421:	nop    DWORD PTR [rax+rax*1+0x0]
  415426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415430:	push   r13
  415432:	push   r12
  415434:	push   rbp
  415435:	push   rdi
  415436:	push   rsi
  415437:	push   rbx
  415438:	xor    esi,esi
  41543a:	xor    r10d,r10d
  41543d:	xor    edi,edi
  41543f:	mov    r12,rcx
  415442:	add    r8,rdx
  415445:	mov    ebx,0x1
  41544a:	movabs r11,0x800000008
  415454:	movabs rbp,0x300000003
  41545e:	movabs r13,0x100000001000
  415468:	jmp    0x415482
  41546a:	nop    WORD PTR [rax+rax*1+0x0]
  415470:	test   rax,rbp
  415473:	jne    0x4154c0
  415475:	test   rax,r13
  415478:	je     0x4154b0
  41547a:	add    rdi,0x1
  41547e:	sub    r8,0x1
  415482:	cmp    r8,rdx
  415485:	je     0x4154d0
  415487:	movzx  r9d,BYTE PTR [r8-0x1]
  41548c:	lea    ecx,[r9-0x49]
  415490:	cmp    cl,0x2c
  415493:	ja     0x4154b0
  415495:	mov    rax,rbx
  415498:	shl    rax,cl
  41549b:	test   rax,r11
  41549e:	je     0x415470
  4154a0:	add    r10,0x1
  4154a4:	cmp    r10,0x2
  4154a8:	jne    0x41547e
  4154aa:	cmp    r9b,BYTE PTR [r8]
  4154ad:	je     0x41547e
  4154af:	nop
  4154b0:	xor    eax,eax
  4154b2:	pop    rbx
  4154b3:	pop    rsi
  4154b4:	pop    rdi
  4154b5:	pop    rbp
  4154b6:	pop    r12
  4154b8:	pop    r13
  4154ba:	ret    
  4154bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4154c0:	add    rsi,0x1
  4154c4:	jmp    0x41547e
  4154c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4154d0:	cmp    rdi,0x1
  4154d4:	seta   dl
  4154d7:	cmp    r10,0x2
  4154db:	seta   al
  4154de:	or     dl,al
  4154e0:	jne    0x4154b0
  4154e2:	cmp    rsi,0x1
  4154e6:	ja     0x4154b0
  4154e8:	test   rsi,rsi
  4154eb:	jne    0x41551a
  4154ed:	xor    ecx,ecx
  4154ef:	cmp    rdi,0x1
  4154f3:	sbb    eax,eax
  4154f5:	not    eax
  4154f7:	and    eax,0x1000
  4154fc:	or     ecx,eax
  4154fe:	test   r10,r10
  415501:	mov    eax,0x10
  415506:	je     0x415516
  415508:	cmp    r10,0x1
  41550c:	mov    al,0x40
  41550e:	mov    edx,0x20
  415513:	cmove  eax,edx
  415516:	or     eax,ecx
  415518:	jmp    0x4154b2
  41551a:	xor    eax,eax
  41551c:	cmp    BYTE PTR [r12],0x0
  415521:	mov    ecx,0x2000
  415526:	jne    0x4154ef
  415528:	jmp    0x4154b2
  41552a:	nop    WORD PTR [rax+rax*1+0x0]
  415530:	mov    rax,rcx
  415533:	lea    ecx,[rdx-0x41]
  415536:	shr    rax,cl
  415539:	and    eax,0x1
  41553c:	xor    rax,0x1
  415540:	and    eax,0x1
  415543:	ret    
  415544:	xchg   ax,ax
  415546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415550:	push   rbp
  415551:	push   rdi
  415552:	push   rsi
  415553:	push   rbx
  415554:	sub    rsp,0x78
  415558:	mov    rsi,QWORD PTR [rdx]
  41555b:	mov    rbp,QWORD PTR [rdx+0x8]
  41555f:	cmp    r8,0x40
  415563:	mov    rdi,rcx
  415566:	mov    rbx,rdx
  415569:	jbe    0x415670
  41556f:	mov    rdx,r8
  415572:	mov    rcx,rsi
  415575:	mov    QWORD PTR [rsp+0x28],r9
  41557a:	mov    QWORD PTR [rsp+0x20],r8
  41557f:	call   0x415530
  415584:	mov    r8,QWORD PTR [rsp+0x20]
  415589:	mov    r9,QWORD PTR [rsp+0x28]
  41558e:	or     al,BYTE PTR [rbx+0x10]
  415591:	mov    r10d,eax
  415594:	xor    r10d,0x1
  415598:	movzx  r10d,r10b
  41559c:	neg    r10
  41559f:	cmp    r8,r9
  4155a2:	jbe    0x4156b0
  4155a8:	cmp    r8,0x3f
  4155ac:	ja     0x415690
  4155b2:	mov    rax,r10
  4155b5:	mov    ecx,r8d
  4155b8:	mov    rsi,r10
  4155bb:	shl    rax,cl
  4155be:	or     rbp,rax
  4155c1:	cmp    r9,0x3f
  4155c5:	jbe    0x4155d1
  4155c7:	mov    rbp,rsi
  4155ca:	sub    r9,0x40
  4155ce:	mov    rsi,r10
  4155d1:	test   r9,r9
  4155d4:	je     0x4156c0
  4155da:	mov    eax,0x40
  4155df:	mov    ecx,r9d
  4155e2:	mov    rdx,rsi
  4155e5:	sub    eax,r9d
  4155e8:	shr    rbp,cl
  4155eb:	mov    ecx,eax
  4155ed:	shl    rdx,cl
  4155f0:	mov    ecx,r9d
  4155f3:	shr    rsi,cl
  4155f6:	mov    ecx,eax
  4155f8:	or     rdx,rbp
  4155fb:	shl    r10,cl
  4155fe:	or     rsi,r10
  415601:	mov    r10,rdx
  415604:	mov    rax,QWORD PTR [rbx+0x10]
  415608:	lea    rcx,[rsp+0x50]
  41560d:	lea    rdx,[rsp+0x30]
  415612:	mov    QWORD PTR [rbx],rsi
  415615:	mov    QWORD PTR [rbx+0x8],r10
  415619:	mov    QWORD PTR [rsp+0x30],rsi
  41561e:	mov    QWORD PTR [rsp+0x38],r10
  415623:	mov    QWORD PTR [rsp+0x40],rax
  415628:	call   0x414df0
  41562d:	mov    rax,QWORD PTR [rsp+0x58]
  415632:	mov    rcx,QWORD PTR [rsp+0x60]
  415637:	mov    rdx,QWORD PTR [rsp+0x50]
  41563c:	mov    QWORD PTR [rbx+0x10],rcx
  415640:	mov    QWORD PTR [rbx+0x8],rax
  415644:	mov    BYTE PTR [rbx+0x11],0x0
  415648:	mov    QWORD PTR [rdi+0x8],rax
  41564c:	mov    rax,QWORD PTR [rbx+0x10]
  415650:	mov    QWORD PTR [rbx],rdx
  415653:	mov    QWORD PTR [rdi],rdx
  415656:	mov    QWORD PTR [rdi+0x10],rax
  41565a:	mov    rax,rdi
  41565d:	add    rsp,0x78
  415661:	pop    rbx
  415662:	pop    rsi
  415663:	pop    rdi
  415664:	pop    rbp
  415665:	ret    
  415666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415670:	lea    ecx,[r8-0x1]
  415674:	mov    r10,rbp
  415677:	shr    r10,cl
  41567a:	and    r10d,0x1
  41567e:	xor    r10,0x1
  415682:	mov    eax,r10d
  415685:	and    eax,0x1
  415688:	jmp    0x41558e
  41568d:	nop    DWORD PTR [rax]
  415690:	cmp    r8,0x7f
  415694:	ja     0x4155c1
  41569a:	lea    ecx,[r8-0x40]
  41569e:	mov    rax,r10
  4156a1:	shl    rax,cl
  4156a4:	or     rsi,rax
  4156a7:	jmp    0x4155c1
  4156ac:	nop    DWORD PTR [rax+0x0]
  4156b0:	mov    rsi,r10
  4156b3:	jmp    0x415604
  4156b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4156c0:	mov    r10,rbp
  4156c3:	jmp    0x415604
  4156c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4156d0:	push   r15
  4156d2:	push   r14
  4156d4:	push   r13
  4156d6:	push   r12
  4156d8:	push   rbp
  4156d9:	push   rdi
  4156da:	push   rsi
  4156db:	push   rbx
  4156dc:	sub    rsp,0x98
  4156e3:	mov    r14,QWORD PTR [rdx]
  4156e6:	mov    r15,QWORD PTR [rdx+0x8]
  4156ea:	cmp    r9,r8
  4156ed:	mov    rsi,rcx
  4156f0:	mov    rbx,rdx
  4156f3:	mov    r13,r8
  4156f6:	movzx  r12d,BYTE PTR [rdx+0x10]
  4156fb:	jb     0x415740
  4156fd:	xor    eax,eax
  4156ff:	test   r12b,r12b
  415702:	je     0x415820
  415708:	xor    edi,edi
  41570a:	xor    ebp,ebp
  41570c:	mov    BYTE PTR [rbx+0x10],r12b
  415710:	mov    BYTE PTR [rbx+0x11],al
  415713:	mov    rax,QWORD PTR [rbx+0x10]
  415717:	mov    QWORD PTR [rbx],rbp
  41571a:	mov    QWORD PTR [rbx+0x8],rdi
  41571e:	mov    QWORD PTR [rsi],rbp
  415721:	mov    QWORD PTR [rsi+0x8],rdi
  415725:	mov    QWORD PTR [rsi+0x10],rax
  415729:	mov    rax,rsi
  41572c:	add    rsp,0x98
  415733:	pop    rbx
  415734:	pop    rsi
  415735:	pop    rdi
  415736:	pop    rbp
  415737:	pop    r12
  415739:	pop    r13
  41573b:	pop    r14
  41573d:	pop    r15
  41573f:	ret    
  415740:	cmp    r9,0x3f
  415744:	ja     0x415810
  41574a:	mov    rdx,r15
  41574d:	mov    rax,r14
  415750:	mov    r8,r9
  415753:	test   r8,r8
  415756:	je     0x415775
  415758:	mov    ecx,r8d
  41575b:	mov    rdi,rdx
  41575e:	shl    rax,cl
  415761:	mov    ecx,0x40
  415766:	sub    ecx,r8d
  415769:	shr    rdi,cl
  41576c:	mov    ecx,r8d
  41576f:	or     rax,rdi
  415772:	shl    rdx,cl
  415775:	mov    QWORD PTR [rbx],rax
  415778:	mov    QWORD PTR [rsp+0x30],rax
  41577d:	lea    rcx,[rsp+0x50]
  415782:	mov    rax,QWORD PTR [rbx+0x10]
  415786:	mov    QWORD PTR [rbx+0x8],rdx
  41578a:	mov    r8,r13
  41578d:	mov    QWORD PTR [rsp+0x38],rdx
  415792:	lea    rdx,[rsp+0x30]
  415797:	mov    QWORD PTR [rsp+0x20],r9
  41579c:	mov    QWORD PTR [rsp+0x28],rcx
  4157a1:	mov    QWORD PTR [rsp+0x40],rax
  4157a6:	call   0x414df0
  4157ab:	mov    rdx,QWORD PTR [rsp+0x60]
  4157b0:	mov    rbp,QWORD PTR [rsp+0x50]
  4157b5:	xor    eax,eax
  4157b7:	mov    rdi,QWORD PTR [rsp+0x58]
  4157bc:	mov    r9,QWORD PTR [rsp+0x20]
  4157c1:	test   dl,dl
  4157c3:	mov    QWORD PTR [rbx],rbp
  4157c6:	mov    QWORD PTR [rbx+0x10],rdx
  4157ca:	mov    QWORD PTR [rbx+0x8],rdi
  4157ce:	mov    r12d,edx
  4157d1:	jne    0x41570c
  4157d7:	mov    rdx,QWORD PTR [rsp+0x28]
  4157dc:	lea    rcx,[rsp+0x70]
  4157e1:	mov    r8,r13
  4157e4:	call   0x415550
  4157e9:	cmp    QWORD PTR [rsp+0x78],r15
  4157ee:	mov    eax,0x1
  4157f3:	jne    0x41570c
  4157f9:	cmp    QWORD PTR [rsp+0x70],r14
  4157fe:	setne  al
  415801:	jmp    0x41570c
  415806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415810:	lea    r8,[r9-0x40]
  415814:	mov    rax,r15
  415817:	xor    edx,edx
  415819:	jmp    0x415753
  41581e:	xchg   ax,ax
  415820:	or     r15,r14
  415823:	setne  al
  415826:	jmp    0x415708
  41582b:	nop    DWORD PTR [rax+rax*1+0x0]
  415830:	push   r15
  415832:	push   r14
  415834:	push   r13
  415836:	push   r12
  415838:	push   rbp
  415839:	push   rdi
  41583a:	push   rsi
  41583b:	push   rbx
  41583c:	sub    rsp,0x98
  415843:	mov    r10d,DWORD PTR [rsp+0x100]
  41584b:	mov    r15,QWORD PTR [r8]
  41584e:	mov    rdi,rcx
  415851:	mov    rcx,rdx
  415854:	mov    rbx,r8
  415857:	mov    r12,QWORD PTR [r8+0x8]
  41585b:	movzx  edx,BYTE PTR [r8+0x10]
  415860:	cmp    r10d,0x5
  415864:	mov    rbp,QWORD PTR [r9]
  415867:	mov    rsi,QWORD PTR [r9+0x8]
  41586b:	movzx  r14d,BYTE PTR [r9+0x10]
  415870:	mov    r13,QWORD PTR [rcx+0x470]
  415877:	je     0x415a40
  41587d:	jle    0x415940
  415883:	lea    edx,[r10-0xc]
  415887:	cmp    edx,0x1
  41588a:	ja     0x415b10
  415890:	test   r14b,r14b
  415893:	jne    0x415b70
  415899:	cmp    r13,0x40
  41589d:	jbe    0x415c90
  4158a3:	mov    rdx,r13
  4158a6:	mov    rcx,rbp
  4158a9:	mov    DWORD PTR [rsp+0x2c],r10d
  4158ae:	mov    QWORD PTR [rsp+0x20],r9
  4158b3:	call   0x415530
  4158b8:	mov    r9,QWORD PTR [rsp+0x20]
  4158bd:	mov    r10d,DWORD PTR [rsp+0x2c]
  4158c2:	test   al,al
  4158c4:	jne    0x415b70
  4158ca:	mov    rax,QWORD PTR [r9]
  4158cd:	cmp    r10d,0xd
  4158d1:	lea    r12,[rsp+0x50]
  4158d6:	setne  r10b
  4158da:	lea    r14,[rsp+0x30]
  4158df:	mov    r8,r13
  4158e2:	movzx  r10d,r10b
  4158e6:	mov    rcx,r12
  4158e9:	mov    QWORD PTR [rsp+0x20],r9
  4158ee:	mov    QWORD PTR [rsp+0x30],rax
  4158f3:	mov    rax,QWORD PTR [r9+0x8]
  4158f7:	add    r10d,0xc
  4158fb:	mov    rdx,r14
  4158fe:	mov    DWORD PTR [rsp+0x2c],r10d
  415903:	mov    QWORD PTR [rsp+0x38],rax
  415908:	mov    rax,QWORD PTR [r9+0x10]
  41590c:	mov    QWORD PTR [rsp+0x40],rax
  415911:	call   0x414e50
  415916:	mov    rbp,QWORD PTR [rsp+0x50]
  41591b:	mov    r9,QWORD PTR [rsp+0x20]
  415920:	mov    r10d,DWORD PTR [rsp+0x2c]
  415925:	mov    QWORD PTR [r9],rbp
  415928:	mov    rsi,QWORD PTR [rsp+0x58]
  41592d:	mov    QWORD PTR [r9+0x8],rsi
  415931:	mov    rax,QWORD PTR [rsp+0x60]
  415936:	mov    QWORD PTR [r9+0x10],rax
  41593a:	jmp    0x415b7a
  41593f:	nop
  415940:	cmp    r10d,0x4
  415944:	jne    0x415b10
  41594a:	lea    rax,[rbp+r15*1+0x0]
  41594f:	mov    r8,rsi
  415952:	mov    BYTE PTR [rsp+0x81],0x0
  41595a:	add    r8,r12
  41595d:	lea    rcx,[rsp+0x50]
  415962:	adc    rax,0x0
  415966:	test   dl,dl
  415968:	mov    edx,0x1
  41596d:	cmovne r14d,edx
  415971:	mov    QWORD PTR [rsp+0x30],rax
  415976:	lea    rdx,[rsp+0x30]
  41597b:	mov    BYTE PTR [rsp+0x80],r14b
  415983:	mov    rax,QWORD PTR [rsp+0x80]
  41598b:	mov    QWORD PTR [rsp+0x38],r8
  415990:	mov    r8,r13
  415993:	mov    QWORD PTR [rsp+0x40],rax
  415998:	call   0x414df0
  41599d:	mov    rax,QWORD PTR [rsp+0x60]
  4159a2:	mov    rbx,QWORD PTR [rsp+0x50]
  4159a7:	mov    rdx,QWORD PTR [rsp+0x58]
  4159ac:	mov    ecx,eax
  4159ae:	mov    QWORD PTR [rsp+0x70],rbx
  4159b3:	mov    QWORD PTR [rsp+0x80],rax
  4159bb:	shr    cx,0x8
  4159bf:	test   al,al
  4159c1:	mov    QWORD PTR [rsp+0x78],rdx
  4159c6:	mov    r8d,ecx
  4159c9:	jne    0x4159fa
  4159cb:	cmp    r13,0x40
  4159cf:	jbe    0x415c00
  4159d5:	mov    rdx,r13
  4159d8:	mov    rcx,r15
  4159db:	call   0x415530
  4159e0:	mov    rdx,r13
  4159e3:	mov    r12d,eax
  4159e6:	mov    rcx,rbp
  4159e9:	call   0x415530
  4159ee:	cmp    r12b,al
  4159f1:	je     0x415af5
  4159f7:	xor    r8d,r8d
  4159fa:	mov    rax,QWORD PTR [rsp+0x70]
  4159ff:	mov    BYTE PTR [rsp+0x81],r8b
  415a07:	mov    QWORD PTR [rdi],rax
  415a0a:	mov    rax,QWORD PTR [rsp+0x78]
  415a0f:	mov    QWORD PTR [rdi+0x8],rax
  415a13:	mov    rax,QWORD PTR [rsp+0x80]
  415a1b:	mov    QWORD PTR [rdi+0x10],rax
  415a1f:	mov    rax,rdi
  415a22:	add    rsp,0x98
  415a29:	pop    rbx
  415a2a:	pop    rsi
  415a2b:	pop    rdi
  415a2c:	pop    rbp
  415a2d:	pop    r12
  415a2f:	pop    r13
  415a31:	pop    r14
  415a33:	pop    r15
  415a35:	ret    
  415a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415a40:	mov    r8,r12
  415a43:	mov    rax,r15
  415a46:	mov    BYTE PTR [rsp+0x81],0x0
  415a4e:	sub    r8,rsi
  415a51:	sub    rax,rbp
  415a54:	lea    rcx,[rsp+0x50]
  415a59:	cmp    r12,r8
  415a5c:	mov    QWORD PTR [rsp+0x38],r8
  415a61:	mov    r8,r13
  415a64:	sbb    rax,0x0
  415a68:	test   dl,dl
  415a6a:	mov    edx,0x1
  415a6f:	cmovne r14d,edx
  415a73:	mov    QWORD PTR [rsp+0x30],rax
  415a78:	lea    rdx,[rsp+0x30]
  415a7d:	mov    BYTE PTR [rsp+0x80],r14b
  415a85:	mov    rax,QWORD PTR [rsp+0x80]
  415a8d:	mov    QWORD PTR [rsp+0x40],rax
  415a92:	call   0x414df0
  415a97:	mov    rax,QWORD PTR [rsp+0x60]
  415a9c:	mov    rbx,QWORD PTR [rsp+0x50]
  415aa1:	mov    rdx,QWORD PTR [rsp+0x58]
  415aa6:	mov    ecx,eax
  415aa8:	mov    QWORD PTR [rsp+0x70],rbx
  415aad:	mov    QWORD PTR [rsp+0x80],rax
  415ab5:	shr    cx,0x8
  415ab9:	test   al,al
  415abb:	mov    QWORD PTR [rsp+0x78],rdx
  415ac0:	mov    r8d,ecx
  415ac3:	jne    0x4159fa
  415ac9:	cmp    r13,0x40
  415acd:	jbe    0x415c40
  415ad3:	mov    rdx,r13
  415ad6:	mov    rcx,r15
  415ad9:	call   0x415530
  415ade:	mov    rdx,r13
  415ae1:	mov    r12d,eax
  415ae4:	mov    rcx,rbp
  415ae7:	call   0x415530
  415aec:	cmp    r12b,al
  415aef:	je     0x4159f7
  415af5:	mov    rdx,r13
  415af8:	mov    rcx,rbx
  415afb:	call   0x415530
  415b00:	cmp    al,r12b
  415b03:	setne  r8b
  415b07:	jmp    0x4159fa
  415b0c:	nop    DWORD PTR [rax+0x0]
  415b10:	cmp    BYTE PTR [rcx+0x437],0x0
  415b17:	je     0x415b31
  415b19:	cmp    BYTE PTR [rcx+0x435],0x0
  415b20:	je     0x415be0
  415b26:	mov    eax,DWORD PTR [rcx+0x1c]
  415b29:	test   eax,eax
  415b2b:	je     0x415be0
  415b31:	mov    rax,QWORD PTR [r9]
  415b34:	mov    QWORD PTR [rbx],rax
  415b37:	mov    rax,QWORD PTR [r9+0x8]
  415b3b:	mov    QWORD PTR [rbx+0x8],rax
  415b3f:	mov    rax,QWORD PTR [r9+0x10]
  415b43:	mov    QWORD PTR [rbx+0x10],rax
  415b47:	mov    BYTE PTR [rbx+0x10],r14b
  415b4b:	mov    rax,QWORD PTR [rbx+0x10]
  415b4f:	mov    QWORD PTR [rbx],rbp
  415b52:	mov    QWORD PTR [rbx+0x8],rsi
  415b56:	mov    QWORD PTR [rdi],rbp
  415b59:	mov    QWORD PTR [rdi+0x8],rsi
  415b5d:	mov    QWORD PTR [rdi+0x10],rax
  415b61:	jmp    0x415a1f
  415b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415b70:	lea    r12,[rsp+0x50]
  415b75:	lea    r14,[rsp+0x30]
  415b7a:	test   rbp,rbp
  415b7d:	mov    rax,0xffffffffffffffff
  415b84:	mov    r8,r13
  415b87:	cmovne rsi,rax
  415b8b:	mov    rax,QWORD PTR [rbx]
  415b8e:	cmp    r10d,0xd
  415b92:	mov    r9,rsi
  415b95:	mov    rdx,r14
  415b98:	mov    rcx,r12
  415b9b:	mov    QWORD PTR [rsp+0x30],rax
  415ba0:	mov    rax,QWORD PTR [rbx+0x8]
  415ba4:	mov    QWORD PTR [rsp+0x38],rax
  415ba9:	mov    rax,QWORD PTR [rbx+0x10]
  415bad:	mov    QWORD PTR [rsp+0x40],rax
  415bb2:	je     0x415c80
  415bb8:	call   0x415550
  415bbd:	mov    rbp,QWORD PTR [rsp+0x50]
  415bc2:	mov    QWORD PTR [rbx],rbp
  415bc5:	mov    rsi,QWORD PTR [rsp+0x58]
  415bca:	mov    QWORD PTR [rbx+0x8],rsi
  415bce:	mov    r14,QWORD PTR [rsp+0x60]
  415bd3:	mov    QWORD PTR [rbx+0x10],r14
  415bd7:	jmp    0x415b47
  415bdc:	nop    DWORD PTR [rax+0x0]
  415be0:	lea    r8,[rip+0x39dc9]        # 0x44f9b0
  415be7:	mov    edx,0x2
  415bec:	mov    QWORD PTR [rsp+0x20],r9
  415bf1:	call   0x414b60
  415bf6:	mov    r9,QWORD PTR [rsp+0x20]
  415bfb:	jmp    0x415b31
  415c00:	lea    ecx,[r13-0x1]
  415c04:	shr    r12,cl
  415c07:	shr    rsi,cl
  415c0a:	and    r12d,0x1
  415c0e:	and    esi,0x1
  415c11:	xor    r12,0x1
  415c15:	xor    rsi,0x1
  415c19:	and    r12d,0x1
  415c1d:	cmp    r12b,sil
  415c20:	jne    0x4159f7
  415c26:	mov    rax,rdx
  415c29:	shr    rax,cl
  415c2c:	and    eax,0x1
  415c2f:	xor    rax,0x1
  415c33:	and    eax,0x1
  415c36:	jmp    0x415b00
  415c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  415c40:	lea    ecx,[r13-0x1]
  415c44:	shr    r12,cl
  415c47:	shr    rsi,cl
  415c4a:	and    r12d,0x1
  415c4e:	and    esi,0x1
  415c51:	xor    r12,0x1
  415c55:	xor    rsi,0x1
  415c59:	and    r12d,0x1
  415c5d:	cmp    r12b,sil
  415c60:	je     0x4159f7
  415c66:	shr    rdx,cl
  415c69:	and    edx,0x1
  415c6c:	xor    rdx,0x1
  415c70:	mov    eax,edx
  415c72:	and    eax,0x1
  415c75:	jmp    0x415b00
  415c7a:	nop    WORD PTR [rax+rax*1+0x0]
  415c80:	call   0x4156d0
  415c85:	jmp    0x415bbd
  415c8a:	nop    WORD PTR [rax+rax*1+0x0]
  415c90:	lea    ecx,[r13-0x1]
  415c94:	mov    rax,rsi
  415c97:	shr    rax,cl
  415c9a:	and    eax,0x1
  415c9d:	xor    rax,0x1
  415ca1:	and    eax,0x1
  415ca4:	jmp    0x4158c2
  415ca9:	nop    DWORD PTR [rax+0x0]
  415cb0:	push   rdi
  415cb1:	push   rsi
  415cb2:	push   rbx
  415cb3:	sub    rsp,0x30
  415cb7:	test   r8b,r8b
  415cba:	mov    rsi,rcx
  415cbd:	mov    rdi,rdx
  415cc0:	jne    0x415d10
  415cc2:	cmp    BYTE PTR [rsp+0x78],0x0
  415cc7:	jne    0x415d10
  415cc9:	cmp    QWORD PTR [rsp+0x80],0x40
  415cd2:	ja     0x415d30
  415cd4:	mov    eax,DWORD PTR [rsp+0x80]
  415cdb:	mov    rbx,rdi
  415cde:	lea    ecx,[rax-0x1]
  415ce1:	mov    rax,QWORD PTR [rsp+0x70]
  415ce6:	shr    rbx,cl
  415ce9:	shr    rax,cl
  415cec:	and    ebx,0x1
  415cef:	and    eax,0x1
  415cf2:	xor    rbx,0x1
  415cf6:	xor    rax,0x1
  415cfa:	and    ebx,0x1
  415cfd:	and    eax,0x1
  415d00:	cmp    bl,al
  415d02:	je     0x415d10
  415d04:	mov    eax,ebx
  415d06:	add    rsp,0x30
  415d0a:	pop    rbx
  415d0b:	pop    rsi
  415d0c:	pop    rdi
  415d0d:	ret    
  415d0e:	xchg   ax,ax
  415d10:	cmp    rsi,r9
  415d13:	mov    ebx,0x1
  415d18:	ja     0x415d04
  415d1a:	sete   bl
  415d1d:	cmp    rdi,QWORD PTR [rsp+0x70]
  415d22:	setae  al
  415d25:	and    ebx,eax
  415d27:	jmp    0x415d04
  415d29:	nop    DWORD PTR [rax+0x0]
  415d30:	mov    rdx,QWORD PTR [rsp+0x80]
  415d38:	mov    rcx,rsi
  415d3b:	mov    QWORD PTR [rsp+0x28],r9
  415d40:	call   0x415530
  415d45:	mov    r9,QWORD PTR [rsp+0x28]
  415d4a:	mov    rdx,QWORD PTR [rsp+0x80]
  415d52:	mov    ebx,eax
  415d54:	mov    rcx,r9
  415d57:	call   0x415530
  415d5c:	mov    r9,QWORD PTR [rsp+0x28]
  415d61:	jmp    0x415d00
  415d63:	nop    DWORD PTR [rax]
  415d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415d70:	add    rcx,0x440
  415d77:	jmp    0x415100
  415d7c:	nop    DWORD PTR [rax+0x0]
  415d80:	add    rcx,0x440
  415d87:	jmp    0x415430
  415d8c:	nop    DWORD PTR [rax+0x0]
  415d90:	mov    eax,0x3d
  415d95:	cmp    ecx,0x48
  415d98:	je     0x415dc0
  415d9a:	cmp    ecx,0x49
  415d9d:	mov    al,0x3e
  415d9f:	je     0x415dc0
  415da1:	cmp    ecx,0x4a
  415da4:	mov    al,0x3f
  415da6:	je     0x415dc0
  415da8:	cmp    ecx,0x4b
  415dab:	mov    al,0x40
  415dad:	je     0x415dc0
  415daf:	cmp    ecx,0x4c
  415db2:	mov    al,0x41
  415db4:	cmovne eax,ecx
  415db7:	nop    WORD PTR [rax+rax*1+0x0]
  415dc0:	repz ret 
  415dc2:	nop    DWORD PTR [rax+0x0]
  415dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415dd0:	mov    eax,0x48
  415dd5:	cmp    ecx,0x3d
  415dd8:	je     0x415e00
  415dda:	cmp    ecx,0x3e
  415ddd:	mov    al,0x49
  415ddf:	je     0x415e00
  415de1:	cmp    ecx,0x3f
  415de4:	mov    al,0x4a
  415de6:	je     0x415e00
  415de8:	cmp    ecx,0x40
  415deb:	mov    al,0x4b
  415ded:	je     0x415e00
  415def:	cmp    ecx,0x41
  415df2:	mov    al,0x4c
  415df4:	cmovne eax,ecx
  415df7:	nop    WORD PTR [rax+rax*1+0x0]
  415e00:	repz ret 
  415e02:	nop    DWORD PTR [rax+0x0]
  415e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415e10:	mov    eax,0x38
  415e15:	cmp    ecx,0x44
  415e18:	je     0x415e30
  415e1a:	cmp    ecx,0x45
  415e1d:	mov    al,0x39
  415e1f:	je     0x415e30
  415e21:	cmp    ecx,0x46
  415e24:	mov    al,0x3a
  415e26:	je     0x415e30
  415e28:	cmp    ecx,0x47
  415e2b:	mov    al,0x3b
  415e2d:	cmovne eax,ecx
  415e30:	repz ret 
  415e32:	nop    DWORD PTR [rax+0x0]
  415e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415e40:	mov    eax,0x44
  415e45:	cmp    ecx,0x38
  415e48:	je     0x415e60
  415e4a:	cmp    ecx,0x39
  415e4d:	mov    al,0x45
  415e4f:	je     0x415e60
  415e51:	cmp    ecx,0x3a
  415e54:	mov    al,0x46
  415e56:	je     0x415e60
  415e58:	cmp    ecx,0x3b
  415e5b:	mov    al,0x47
  415e5d:	cmovne eax,ecx
  415e60:	repz ret 
  415e62:	nop    DWORD PTR [rax+0x0]
  415e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415e70:	sub    ecx,0x48
  415e73:	cmp    ecx,0x4
  415e76:	setbe  al
  415e79:	ret    
  415e7a:	nop    WORD PTR [rax+rax*1+0x0]
  415e80:	sub    ecx,0x44
  415e83:	cmp    ecx,0x3
  415e86:	setbe  al
  415e89:	ret    
  415e8a:	nop    WORD PTR [rax+rax*1+0x0]
  415e90:	mov    r9d,DWORD PTR [rcx+0x8]
  415e94:	mov    rax,QWORD PTR [rcx+0x10]
  415e98:	test   r9d,r9d
  415e9b:	je     0x415ed5
  415e9d:	movzx  ecx,BYTE PTR [rax]
  415ea0:	cmp    cl,0x22
  415ea3:	je     0x415ee4
  415ea5:	cmp    cl,0x27
  415ea8:	je     0x415ee4
  415eaa:	lea    rdx,[rax+0x1]
  415eae:	xor    ecx,ecx
  415eb0:	jmp    0x415ec9
  415eb2:	movzx  r8d,BYTE PTR [rdx]
  415eb6:	mov    r10,rdx
  415eb9:	add    rdx,0x1
  415ebd:	cmp    r8b,0x22
  415ec1:	je     0x415ee0
  415ec3:	cmp    r8b,0x27
  415ec7:	je     0x415ee0
  415ec9:	add    ecx,0x1
  415ecc:	cmp    ecx,r9d
  415ecf:	jne    0x415eb2
  415ed1:	add    rax,rcx
  415ed4:	ret    
  415ed5:	repz ret 
  415ed7:	nop    WORD PTR [rax+rax*1+0x0]
  415ee0:	movzx  ecx,BYTE PTR [r10]
  415ee4:	lea    r8d,[r9-0x1]
  415ee8:	cmp    BYTE PTR [rax+r8*1],cl
  415eec:	mov    rdx,r8
  415eef:	jne    0x415f00
  415ef1:	jmp    0x415f0a
  415ef3:	lea    r9d,[rdx-0x1]
  415ef7:	cmp    BYTE PTR [rax+r9*1],cl
  415efb:	je     0x415f06
  415efd:	mov    edx,r9d
  415f00:	test   edx,edx
  415f02:	jne    0x415ef3
  415f04:	xor    edx,edx
  415f06:	add    rax,rdx
  415f09:	ret    
  415f0a:	mov    edx,r9d
  415f0d:	jmp    0x415f06
  415f0f:	nop
  415f10:	push   r15
  415f12:	push   r14
  415f14:	push   r13
  415f16:	push   r12
  415f18:	push   rbp
  415f19:	push   rdi
  415f1a:	push   rsi
  415f1b:	push   rbx
  415f1c:	sub    rsp,0x68
  415f20:	mov    r11,QWORD PTR [rdx+0x10]
  415f24:	test   r8,r8
  415f27:	je     0x415f30
  415f29:	mov    QWORD PTR [r8],0x0
  415f30:	mov    edx,DWORD PTR [rdx+0x8]
  415f33:	mov    eax,0x111
  415f38:	cmp    edx,0x1
  415f3b:	je     0x4160f0
  415f41:	lea    rax,[r11+rdx*1]
  415f45:	mov    r14d,r9d
  415f48:	mov    r10,r8
  415f4b:	mov    r13,rcx
  415f4e:	mov    QWORD PTR [rsp+0x48],rax
  415f53:	movzx  eax,BYTE PTR [r11]
  415f57:	cmp    al,0x30
  415f59:	je     0x416152
  415f5f:	mov    r12,QWORD PTR [rip+0x44eca]        # 0x45ae30
  415f66:	xor    ebp,ebp
  415f68:	mov    DWORD PTR [rsp+0x44],0xa
  415f70:	xor    edx,edx
  415f72:	xor    r9d,r9d
  415f75:	xor    ecx,ecx
  415f77:	xor    edi,edi
  415f79:	mov    r8,QWORD PTR [rip+0x44e80]        # 0x45ae00
  415f80:	jmp    0x415fc1
  415f82:	shr    bx,0x8
  415f86:	and    bl,bpl
  415f89:	jne    0x415fd1
  415f8b:	cmp    eax,0x27
  415f8e:	je     0x416101
  415f94:	cmp    eax,0x2e
  415f97:	jne    0x4164a4
  415f9d:	test   dl,dl
  415f9f:	jne    0x41612f
  415fa5:	cmp    BYTE PTR [rsi],0x27
  415fa8:	je     0x416121
  415fae:	test   ecx,ecx
  415fb0:	jne    0x416254
  415fb6:	mov    ecx,0x1
  415fbb:	movzx  eax,BYTE PTR [rsi]
  415fbe:	mov    r11,rsi
  415fc1:	mov    ebx,eax
  415fc3:	lea    rsi,[r11+0x1]
  415fc7:	movzx  ebx,WORD PTR [r12+rbx*2]
  415fcc:	test   bl,0x4
  415fcf:	je     0x415f82
  415fd1:	cdqe   
  415fd3:	mov    r9d,0x1
  415fd9:	movzx  eax,BYTE PTR [r8+rax*1]
  415fde:	cmp    edi,eax
  415fe0:	cmovb  edi,eax
  415fe3:	xor    edx,edx
  415fe5:	jmp    0x415fbb
  415fe7:	test   bpl,bpl
  415fea:	je     0x416000
  415fec:	and    eax,0xffffffdf
  415fef:	cmp    eax,0x50
  415ff2:	je     0x4164bb
  415ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  416000:	test   dl,dl
  416002:	mov    r15d,ecx
  416005:	mov    rsi,r11
  416008:	jne    0x4163e0
  41600e:	test   ecx,ecx
  416010:	je     0x4161a9
  416016:	test   cl,cl
  416018:	je     0x4162ae
  41601e:	cmp    DWORD PTR [rsp+0x44],0x8
  416023:	jne    0x4162ae
  416029:	cmp    edi,0x9
  41602c:	ja     0x4162bf
  416032:	mov    DWORD PTR [rsp+0x44],0xa
  41603a:	cmp    r15d,0x2
  41603e:	je     0x416348
  416044:	mov    rbp,QWORD PTR [rsp+0x48]
  416049:	lea    rcx,[r13+0x440]
  416050:	mov    rdx,rsi
  416053:	mov    QWORD PTR [rsp+0x50],r10
  416058:	sub    rbp,rsi
  41605b:	mov    r8,rbp
  41605e:	call   0x415100
  416063:	test   eax,eax
  416065:	mov    edi,eax
  416067:	mov    r10,QWORD PTR [rsp+0x50]
  41606c:	jne    0x41664c
  416072:	cmp    BYTE PTR [r13+0x43e],0x0
  41607a:	je     0x416802
  416080:	test   r10,r10
  416083:	je     0x4167f8
  416089:	mov    QWORD PTR [r10],rsi
  41608c:	mov    edi,0x1000040
  416091:	cmp    QWORD PTR [rsp+0x48],rsi
  416096:	je     0x4160a6
  416098:	cmp    BYTE PTR [r13+0x429],0x0
  4160a0:	jne    0x416781
  4160a6:	cmp    edi,0x20
  4160a9:	je     0x416685
  4160af:	test   bl,bl
  4160b1:	je     0x416659
  4160b7:	cmp    DWORD PTR [rsp+0x44],0xa
  4160bc:	je     0x416659
  4160c2:	lea    rax,[rip+0x39c5f]        # 0x44fd28
  4160c9:	mov    QWORD PTR [rsp+0x30],rsi
  4160ce:	mov    DWORD PTR [rsp+0x28],ebp
  4160d2:	mov    QWORD PTR [rsp+0x20],rax
  4160d7:	xor    r9d,r9d
  4160da:	mov    r8d,r14d
  4160dd:	mov    edx,0x3
  4160e2:	mov    rcx,r13
  4160e5:	call   0x414c40
  4160ea:	xor    eax,eax
  4160ec:	nop    DWORD PTR [rax+0x0]
  4160f0:	add    rsp,0x68
  4160f4:	pop    rbx
  4160f5:	pop    rsi
  4160f6:	pop    rdi
  4160f7:	pop    rbp
  4160f8:	pop    r12
  4160fa:	pop    r13
  4160fc:	pop    r14
  4160fe:	pop    r15
  416100:	ret    
  416101:	cmp    BYTE PTR [r13+0x443],0x0
  416109:	je     0x416000
  41610f:	test   dl,dl
  416111:	jne    0x4163ec
  416117:	mov    edx,0x1
  41611c:	jmp    0x415fbb
  416121:	cmp    BYTE PTR [r13+0x443],0x0
  416129:	je     0x415fae
  41612f:	lea    rax,[rip+0x39992]        # 0x44fac8
  416136:	mov    QWORD PTR [rsp+0x20],rax
  41613b:	xor    r9d,r9d
  41613e:	mov    r8d,r14d
  416141:	mov    edx,0x3
  416146:	mov    rcx,r13
  416149:	call   0x414c40
  41614e:	xor    eax,eax
  416150:	jmp    0x4160f0
  416152:	movzx  eax,BYTE PTR [r11+0x1]
  416157:	lea    rcx,[r11+0x1]
  41615b:	mov    edx,eax
  41615d:	and    edx,0xffffffdf
  416160:	cmp    dl,0x58
  416163:	jne    0x416260
  416169:	movzx  edx,BYTE PTR [r11+0x2]
  41616e:	mov    r12,QWORD PTR [rip+0x44cbb]        # 0x45ae30
  416175:	cmp    dl,0x2e
  416178:	je     0x41623b
  41617e:	movzx  r8d,dl
  416182:	test   BYTE PTR [r12+r8*2+0x1],0x1
  416188:	jne    0x41623b
  41618e:	cmp    dl,0x27
  416191:	je     0x416595
  416197:	mov    r11,rcx
  41619a:	xor    ebp,ebp
  41619c:	mov    DWORD PTR [rsp+0x44],0x8
  4161a4:	jmp    0x415f70
  4161a9:	cmp    DWORD PTR [rsp+0x44],0x10
  4161ae:	je     0x416016
  4161b4:	mov    r8,QWORD PTR [rsp+0x48]
  4161b9:	lea    rcx,[r13+0x440]
  4161c0:	mov    rdx,r11
  4161c3:	mov    QWORD PTR [rsp+0x58],r10
  4161c8:	mov    BYTE PTR [rsp+0x50],r9b
  4161cd:	sub    r8,r11
  4161d0:	call   0x415100
  4161d5:	test   eax,0x300000
  4161da:	mov    r11d,eax
  4161dd:	movzx  r9d,BYTE PTR [rsp+0x50]
  4161e3:	mov    r10,QWORD PTR [rsp+0x58]
  4161e8:	je     0x4162ac
  4161ee:	mov    ebx,eax
  4161f0:	or     ebx,0x2
  4161f3:	cmp    DWORD PTR [rsp+0x44],0x8
  4161f8:	je     0x4165a8
  4161fe:	cmp    BYTE PTR [r13+0x437],0x0
  416206:	jne    0x4165be
  41620c:	cmp    DWORD PTR [rsp+0x44],0x2
  416211:	je     0x4164f9
  416217:	cmp    DWORD PTR [rsp+0x44],0xa
  41621c:	je     0x4164ef
  416222:	mov    ecx,DWORD PTR [rsp+0x44]
  416226:	mov    edx,ebx
  416228:	mov    eax,ebx
  41622a:	or     dh,0x4
  41622d:	or     ah,0x2
  416230:	cmp    ecx,0x10
  416233:	cmovne eax,edx
  416236:	jmp    0x4160f0
  41623b:	add    r11,0x2
  41623f:	movzx  eax,dl
  416242:	mov    ebp,0x1
  416247:	mov    DWORD PTR [rsp+0x44],0x10
  41624f:	jmp    0x415f70
  416254:	lea    rax,[rip+0x3989d]        # 0x44faf8
  41625b:	jmp    0x416136
  416260:	cmp    dl,0x42
  416263:	jne    0x416293
  416265:	movzx  edx,BYTE PTR [r11+0x2]
  41626a:	lea    r8d,[rdx-0x30]
  41626e:	cmp    r8b,0x1
  416272:	jbe    0x416578
  416278:	cmp    dl,0x27
  41627b:	jne    0x416293
  41627d:	cmp    BYTE PTR [r13+0x443],0x0
  416285:	je     0x416293
  416287:	lea    rax,[rip+0x397fa]        # 0x44fa88
  41628e:	jmp    0x416136
  416293:	mov    r11,rcx
  416296:	xor    ebp,ebp
  416298:	mov    DWORD PTR [rsp+0x44],0x8
  4162a0:	mov    r12,QWORD PTR [rip+0x44b89]        # 0x45ae30
  4162a7:	jmp    0x415f70
  4162ac:	xor    ecx,ecx
  4162ae:	cmp    edi,DWORD PTR [rsp+0x44]
  4162b2:	jb     0x4162ec
  4162b4:	cmp    DWORD PTR [rsp+0x44],0x2
  4162b9:	je     0x416549
  4162bf:	add    edi,0x30
  4162c2:	lea    rax,[rip+0x398ff]        # 0x44fbc8
  4162c9:	mov    DWORD PTR [rsp+0x28],edi
  4162cd:	mov    QWORD PTR [rsp+0x20],rax
  4162d2:	xor    r9d,r9d
  4162d5:	mov    r8d,r14d
  4162d8:	mov    edx,0x3
  4162dd:	mov    rcx,r13
  4162e0:	call   0x414c40
  4162e5:	xor    eax,eax
  4162e7:	jmp    0x4160f0
  4162ec:	test   cl,cl
  4162ee:	je     0x4163f8
  4162f4:	cmp    DWORD PTR [rsp+0x44],0x2
  4162f9:	lea    rax,[rip+0x398f0]        # 0x44fbf0
  416300:	je     0x416136
  416306:	cmp    r9b,bpl
  416309:	lea    rax,[rip+0x39910]        # 0x44fc20
  416310:	jb     0x416136
  416316:	test   bpl,bpl
  416319:	je     0x41603a
  41631f:	cmp    BYTE PTR [r13+0x437],0x0
  416327:	je     0x416337
  416329:	cmp    BYTE PTR [r13+0x435],0x0
  416331:	je     0x4167ca
  416337:	cmp    r15d,0x2
  41633b:	lea    rax,[rip+0x3994e]        # 0x44fc90
  416342:	jne    0x416136
  416348:	movzx  eax,BYTE PTR [rsi]
  41634b:	lea    edx,[rax-0x2b]
  41634e:	and    edx,0xfd
  416354:	jne    0x41635e
  416356:	movzx  eax,BYTE PTR [rsi+0x1]
  41635a:	add    rsi,0x1
  41635e:	movzx  edx,al
  416361:	test   BYTE PTR [r12+rdx*2],0x4
  416366:	jne    0x416390
  416368:	cmp    al,0x27
  41636a:	jne    0x41637a
  41636c:	cmp    BYTE PTR [r13+0x443],0x0
  416374:	jne    0x4164e3
  41637a:	lea    rax,[rip+0x398f8]        # 0x44fc79
  416381:	jmp    0x416136
  416386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416390:	xor    edx,edx
  416392:	cmp    al,0x27
  416394:	je     0x4163c1
  416396:	add    rsi,0x1
  41639a:	movzx  ecx,BYTE PTR [rsi]
  41639d:	test   BYTE PTR [r12+rcx*2],0x4
  4163a2:	mov    rax,rcx
  4163a5:	jne    0x416390
  4163a7:	cmp    cl,0x27
  4163aa:	jne    0x4163ce
  4163ac:	cmp    BYTE PTR [r13+0x443],0x0
  4163b4:	je     0x4163ce
  4163b6:	mov    eax,0x27
  4163bb:	xor    edx,edx
  4163bd:	cmp    al,0x27
  4163bf:	jne    0x416396
  4163c1:	cmp    BYTE PTR [r13+0x443],0x0
  4163c9:	setne  dl
  4163cc:	jmp    0x416396
  4163ce:	test   dl,dl
  4163d0:	je     0x416044
  4163d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4163e0:	lea    rax,[rip+0x39761]        # 0x44fb48
  4163e7:	jmp    0x416136
  4163ec:	lea    rax,[rip+0x396ba]        # 0x44faad
  4163f3:	jmp    0x416136
  4163f8:	mov    r12,QWORD PTR [rsp+0x48]
  4163fd:	lea    rcx,[r13+0x440]
  416404:	mov    rdx,rsi
  416407:	mov    QWORD PTR [rsp+0x50],r10
  41640c:	sub    r12,rsi
  41640f:	mov    r8,r12
  416412:	call   0x415430
  416417:	test   eax,eax
  416419:	mov    edi,eax
  41641b:	mov    r10,QWORD PTR [rsp+0x50]
  416420:	jne    0x41655c
  416426:	cmp    BYTE PTR [r13+0x43e],0x0
  41642e:	je     0x41673c
  416434:	test   r10,r10
  416437:	je     0x416752
  41643d:	mov    QWORD PTR [r10],rsi
  416440:	xor    ebp,ebp
  416442:	mov    ebx,0x1001041
  416447:	mov    r15d,0x40
  41644d:	mov    edi,0x1001040
  416452:	cmp    BYTE PTR [r13+0x429],0x0
  41645a:	jne    0x4165f6
  416460:	cmp    r15d,0x40
  416464:	je     0x4166e0
  41646a:	test   ebp,ebp
  41646c:	je     0x41620c
  416472:	cmp    BYTE PTR [r13+0x437],0x0
  41647a:	je     0x41620c
  416480:	lea    rax,[rip+0x39969]        # 0x44fdf0
  416487:	xor    r9d,r9d
  41648a:	mov    r8d,r14d
  41648d:	mov    edx,0x2
  416492:	mov    rcx,r13
  416495:	mov    QWORD PTR [rsp+0x20],rax
  41649a:	call   0x414c40
  41649f:	jmp    0x41620c
  4164a4:	cmp    DWORD PTR [rsp+0x44],0xa
  4164a9:	ja     0x415fe7
  4164af:	and    eax,0xffffffdf
  4164b2:	cmp    eax,0x45
  4164b5:	jne    0x416000
  4164bb:	test   dl,dl
  4164bd:	jne    0x4164e3
  4164bf:	cmp    BYTE PTR [r11+0x1],0x27
  4164c4:	mov    ecx,0x1
  4164c9:	mov    r15d,0x2
  4164cf:	jne    0x41601e
  4164d5:	cmp    BYTE PTR [r13+0x443],0x0
  4164dd:	je     0x41601e
  4164e3:	lea    rax,[rip+0x39636]        # 0x44fb20
  4164ea:	jmp    0x416136
  4164ef:	mov    eax,ebx
  4164f1:	or     ah,0x1
  4164f4:	jmp    0x4160f0
  4164f9:	cmp    BYTE PTR [r13+0x442],0x0
  416501:	jne    0x41653f
  416503:	cmp    BYTE PTR [r13+0x437],0x0
  41650b:	je     0x41653f
  41650d:	cmp    BYTE PTR [r13+0x418],0x0
  416515:	lea    rdx,[rip+0x39544]        # 0x44fa60
  41651c:	lea    rax,[rip+0x39505]        # 0x44fa28
  416523:	mov    r8d,r14d
  416526:	mov    rcx,r13
  416529:	cmove  rax,rdx
  41652d:	xor    r9d,r9d
  416530:	mov    edx,0x2
  416535:	mov    QWORD PTR [rsp+0x20],rax
  41653a:	call   0x414c40
  41653f:	mov    eax,ebx
  416541:	or     ah,0x8
  416544:	jmp    0x4160f0
  416549:	add    edi,0x30
  41654c:	lea    rax,[rip+0x3964d]        # 0x44fba0
  416553:	mov    DWORD PTR [rsp+0x28],edi
  416557:	jmp    0x4162cd
  41655c:	mov    r15d,eax
  41655f:	mov    ebp,eax
  416561:	mov    ebx,eax
  416563:	and    r15d,0xf0
  41656a:	and    ebp,0x2000
  416570:	or     ebx,0x1
  416573:	jmp    0x416452
  416578:	add    r11,0x2
  41657c:	movzx  eax,dl
  41657f:	xor    ebp,ebp
  416581:	mov    DWORD PTR [rsp+0x44],0x2
  416589:	mov    r12,QWORD PTR [rip+0x448a0]        # 0x45ae30
  416590:	jmp    0x415f70
  416595:	cmp    BYTE PTR [r13+0x443],0x0
  41659d:	je     0x416197
  4165a3:	jmp    0x416287
  4165a8:	cmp    BYTE PTR [r13+0x437],0x0
  4165b0:	je     0x4164ef
  4165b6:	mov    DWORD PTR [rsp+0x44],0xa
  4165be:	lea    rax,[rip+0x395ab]        # 0x44fb70
  4165c5:	xor    r9d,r9d
  4165c8:	mov    r8d,r14d
  4165cb:	mov    edx,0x2
  4165d0:	mov    rcx,r13
  4165d3:	mov    DWORD PTR [rsp+0x48],r11d
  4165d8:	mov    QWORD PTR [rsp+0x20],rax
  4165dd:	call   0x414c40
  4165e2:	mov    r11d,DWORD PTR [rsp+0x48]
  4165e7:	and    r11d,0x2000
  4165ee:	mov    ebp,r11d
  4165f1:	jmp    0x41646a
  4165f6:	mov    rcx,r13
  4165f9:	call   0x40cc10
  4165fe:	test   eax,eax
  416600:	jne    0x416460
  416606:	and    edi,0x3000
  41660c:	cmp    r15d,0x40
  416610:	je     0x416769
  416616:	test   edi,edi
  416618:	je     0x41646a
  41661e:	mov    edx,0x6
  416623:	lea    rax,[rip+0x3979e]        # 0x44fdc8
  41662a:	mov    QWORD PTR [rsp+0x30],rsi
  41662f:	mov    DWORD PTR [rsp+0x28],r12d
  416634:	xor    r9d,r9d
  416637:	mov    r8d,r14d
  41663a:	mov    rcx,r13
  41663d:	mov    QWORD PTR [rsp+0x20],rax
  416642:	call   0x414c80
  416647:	jmp    0x416460
  41664c:	mov    ebx,eax
  41664e:	shr    ebx,0xe
  416651:	and    ebx,0x1
  416654:	jmp    0x416091
  416659:	test   edi,0x300000
  41665f:	je     0x4166ae
  416661:	cmp    BYTE PTR [r13+0x437],0x0
  416669:	jne    0x4167be
  41666f:	mov    ebx,edi
  416671:	or     ebx,0x2
  416674:	and    edi,0x2000
  41667a:	jne    0x416472
  416680:	jmp    0x416217
  416685:	cmp    BYTE PTR [r13+0x437],0x0
  41668d:	lea    rax,[rip+0x39664]        # 0x44fcf8
  416694:	je     0x4166ae
  416696:	mov    QWORD PTR [rsp+0x20],rax
  41669b:	xor    r9d,r9d
  41669e:	mov    r8d,r14d
  4166a1:	mov    edx,0x2
  4166a6:	mov    rcx,r13
  4166a9:	call   0x414c40
  4166ae:	test   bl,bl
  4166b0:	je     0x41666f
  4166b2:	cmp    BYTE PTR [r13+0x437],0x0
  4166ba:	je     0x41666f
  4166bc:	lea    rax,[rip+0x396a5]        # 0x44fd68
  4166c3:	xor    r9d,r9d
  4166c6:	mov    r8d,r14d
  4166c9:	mov    edx,0x2
  4166ce:	mov    rcx,r13
  4166d1:	mov    QWORD PTR [rsp+0x20],rax
  4166d6:	call   0x414c40
  4166db:	jmp    0x41666f
  4166dd:	nop    DWORD PTR [rax]
  4166e0:	cmp    BYTE PTR [r13+0x42a],0x0
  4166e8:	je     0x41646a
  4166ee:	cmp    BYTE PTR [r13+0x418],0x0
  4166f6:	lea    rdx,[rip+0x39303]        # 0x44fa00
  4166fd:	lea    rax,[rip+0x392d4]        # 0x44f9d8
  416704:	mov    r9d,0x0
  41670a:	mov    r8d,r14d
  41670d:	mov    rcx,r13
  416710:	cmove  rax,rdx
  416714:	cmp    BYTE PTR [r13+0x435],0x0
  41671c:	mov    edx,0x7
  416721:	mov    QWORD PTR [rsp+0x20],rax
  416726:	je     0x416732
  416728:	call   0x414c80
  41672d:	jmp    0x41646a
  416732:	call   0x414cc0
  416737:	jmp    0x41646a
  41673c:	mov    QWORD PTR [rsp+0x30],rsi
  416741:	mov    DWORD PTR [rsp+0x28],r12d
  416746:	lea    rax,[rip+0x3964b]        # 0x44fd98
  41674d:	jmp    0x4160d2
  416752:	xor    ebp,ebp
  416754:	mov    ebx,0x1001041
  416759:	mov    r15d,0x40
  41675f:	mov    edi,0x1001040
  416764:	jmp    0x416452
  416769:	cmp    BYTE PTR [r13+0x42a],0x0
  416771:	je     0x416616
  416777:	mov    edx,0x7
  41677c:	jmp    0x416623
  416781:	mov    rcx,r13
  416784:	call   0x40cc10
  416789:	test   eax,eax
  41678b:	jne    0x4160a6
  416791:	lea    rax,[rip+0x39630]        # 0x44fdc8
  416798:	mov    QWORD PTR [rsp+0x30],rsi
  41679d:	mov    DWORD PTR [rsp+0x28],ebp
  4167a1:	xor    r9d,r9d
  4167a4:	mov    r8d,r14d
  4167a7:	mov    edx,0x6
  4167ac:	mov    QWORD PTR [rsp+0x20],rax
  4167b1:	mov    rcx,r13
  4167b4:	call   0x414c80
  4167b9:	jmp    0x4160a6
  4167be:	lea    rax,[rip+0x393ab]        # 0x44fb70
  4167c5:	jmp    0x416696
  4167ca:	lea    rax,[rip+0x3947f]        # 0x44fc50
  4167d1:	xor    r9d,r9d
  4167d4:	mov    r8d,r14d
  4167d7:	mov    edx,0x2
  4167dc:	mov    rcx,r13
  4167df:	mov    QWORD PTR [rsp+0x50],r10
  4167e4:	mov    QWORD PTR [rsp+0x20],rax
  4167e9:	call   0x414c40
  4167ee:	mov    r10,QWORD PTR [rsp+0x50]
  4167f3:	jmp    0x416337
  4167f8:	mov    edi,0x1000040
  4167fd:	jmp    0x416091
  416802:	mov    QWORD PTR [rsp+0x30],rsi
  416807:	mov    DWORD PTR [rsp+0x28],ebp
  41680b:	lea    rax,[rip+0x394b6]        # 0x44fcc8
  416812:	jmp    0x4160d2
  416817:	nop    WORD PTR [rax+rax*1+0x0]
  416820:	push   r15
  416822:	push   r14
  416824:	push   r13
  416826:	push   r12
  416828:	push   rbp
  416829:	push   rdi
  41682a:	push   rsi
  41682b:	push   rbx
  41682c:	sub    rsp,0xc8
  416833:	mov    edi,DWORD PTR [r8+0x8]
  416837:	mov    rbx,QWORD PTR [r8+0x10]
  41683b:	mov    DWORD PTR [rsp+0x128],r9d
  416843:	shr    r9d,0xc
  416847:	mov    rsi,rcx
  41684a:	and    r9d,0x1
  41684e:	mov    r12,rdx
  416851:	mov    QWORD PTR [rcx+0x8],0x0
  416859:	mov    QWORD PTR [rcx],0x0
  416860:	mov    BYTE PTR [rcx+0x10],r9b
  416864:	mov    rax,rdi
  416867:	add    rdi,rbx
  41686a:	mov    BYTE PTR [rcx+0x11],0x0
  41686e:	cmp    eax,0x1
  416871:	je     0x416c41
  416877:	mov    rax,QWORD PTR [rdx+0x470]
  41687e:	mov    edx,DWORD PTR [rsp+0x128]
  416885:	and    edx,0xf00
  41688b:	mov    QWORD PTR [rsp+0x30],rax
  416890:	cmp    edx,0x400
  416896:	je     0x416c23
  41689c:	cmp    edx,0x200
  4168a2:	je     0x416c63
  4168a8:	cmp    edx,0x800
  4168ae:	mov    rax,0xfffffffffffffff7
  4168b5:	mov    QWORD PTR [rsp+0x28],0xa
  4168be:	mov    ebp,0xa
  4168c3:	je     0x416c90
  4168c9:	cmp    QWORD PTR [rsp+0x30],0x3f
  4168cf:	mov    rdx,0xffffffffffffffff
  4168d6:	ja     0x4168e4
  4168d8:	mov    ecx,0x40
  4168dd:	sub    ecx,DWORD PTR [rsp+0x30]
  4168e1:	shr    rdx,cl
  4168e4:	add    rax,rdx
  4168e7:	xor    edx,edx
  4168e9:	div    QWORD PTR [rsp+0x28]
  4168ee:	add    rax,0x1
  4168f2:	cmp    rbx,rdi
  4168f5:	jae    0x4169b5
  4168fb:	lea    rcx,[rsp+0x80]
  416903:	mov    BYTE PTR [rsp+0x47],0x0
  416908:	mov    r13,QWORD PTR [rip+0x44521]        # 0x45ae30
  41690f:	mov    QWORD PTR [rsp+0x48],rcx
  416914:	lea    rcx,[rsp+0x60]
  416919:	mov    QWORD PTR [rsp+0x50],rcx
  41691e:	mov    rcx,QWORD PTR [rip+0x444db]        # 0x45ae00
  416925:	mov    QWORD PTR [rsp+0x58],rcx
  41692a:	jmp    0x416952
  41692c:	nop    DWORD PTR [rax+0x0]
  416930:	cmp    ebp,0x10
  416933:	je     0x416b80
  416939:	cmp    cl,0x27
  41693c:	jne    0x416998
  41693e:	cmp    BYTE PTR [r12+0x443],0x0
  416947:	je     0x416998
  416949:	add    rbx,0x1
  41694d:	cmp    rbx,rdi
  416950:	je     0x416998
  416952:	movzx  edx,BYTE PTR [rbx]
  416955:	mov    r8d,edx
  416958:	mov    ecx,edx
  41695a:	movzx  r8d,WORD PTR [r13+r8*2+0x0]
  416960:	test   r8b,0x4
  416964:	je     0x416930
  416966:	mov    rcx,QWORD PTR [rip+0x44493]        # 0x45ae00
  41696d:	movsxd rdx,edx
  416970:	movzx  r8d,BYTE PTR [rcx+rdx*1]
  416975:	mov    rdx,QWORD PTR [rsi+0x8]
  416979:	cmp    rdx,rax
  41697c:	jae    0x416a33
  416982:	imul   rdx,QWORD PTR [rsp+0x28]
  416988:	add    rbx,0x1
  41698c:	add    rdx,r8
  41698f:	cmp    rbx,rdi
  416992:	mov    QWORD PTR [rsi+0x8],rdx
  416996:	jne    0x416952
  416998:	cmp    BYTE PTR [rsp+0x47],0x0
  41699d:	je     0x4169b0
  41699f:	test   DWORD PTR [rsp+0x128],0x1000000
  4169aa:	je     0x416ca7
  4169b0:	movzx  r9d,BYTE PTR [rsi+0x10]
  4169b5:	test   r9b,r9b
  4169b8:	jne    0x416a1c
  4169ba:	cmp    BYTE PTR [r12+0x43d],0x0
  4169c3:	jne    0x416c52
  4169c9:	cmp    QWORD PTR [rsp+0x30],0x40
  4169cf:	mov    rcx,QWORD PTR [rsi]
  4169d2:	mov    rax,QWORD PTR [rsi+0x8]
  4169d6:	ja     0x416c81
  4169dc:	mov    ecx,DWORD PTR [rsp+0x30]
  4169e0:	sub    ecx,0x1
  4169e3:	shr    rax,cl
  4169e6:	and    eax,0x1
  4169e9:	xor    rax,0x1
  4169ed:	and    eax,0x1
  4169f0:	test   al,al
  4169f2:	jne    0x416a1c
  4169f4:	cmp    ebp,0xa
  4169f7:	jne    0x416a18
  4169f9:	cmp    BYTE PTR [r12+0x435],0x1
  416a02:	lea    r8,[rip+0x3943f]        # 0x44fe48
  416a09:	mov    rcx,r12
  416a0c:	sbb    edx,edx
  416a0e:	not    edx
  416a10:	and    edx,0x2
  416a13:	call   0x414b60
  416a18:	mov    BYTE PTR [rsi+0x10],0x1
  416a1c:	mov    rax,rsi
  416a1f:	add    rsp,0xc8
  416a26:	pop    rbx
  416a27:	pop    rsi
  416a28:	pop    rdi
  416a29:	pop    rbp
  416a2a:	pop    r12
  416a2c:	pop    r13
  416a2e:	pop    r14
  416a30:	pop    r15
  416a32:	ret    
  416a33:	movzx  eax,BYTE PTR [rsi+0x10]
  416a37:	cmp    ebp,0x2
  416a3a:	mov    r11,QWORD PTR [rsi]
  416a3d:	mov    BYTE PTR [rsp+0x38],al
  416a41:	je     0x416be0
  416a47:	xor    eax,eax
  416a49:	cmp    ebp,0x10
  416a4c:	sete   al
  416a4f:	xor    r9d,r9d
  416a52:	add    eax,0x3
  416a55:	cmp    ebp,0x10
  416a58:	setne  r9b
  416a5c:	add    r9d,0x3c
  416a60:	mov    ecx,r9d
  416a63:	mov    r15,r11
  416a66:	mov    r14,rdx
  416a69:	shr    r15,cl
  416a6c:	mov    ecx,eax
  416a6e:	mov    r10,rdx
  416a71:	test   r15,r15
  416a74:	setne  r15b
  416a78:	shl    r14,cl
  416a7b:	mov    ecx,r9d
  416a7e:	shr    r10,cl
  416a81:	mov    ecx,eax
  416a83:	mov    r9,r10
  416a86:	mov    r10,r11
  416a89:	shl    r10,cl
  416a8c:	or     r9,r10
  416a8f:	cmp    ebp,0xa
  416a92:	movzx  r10d,BYTE PTR [rsp+0x38]
  416a98:	je     0x416c00
  416a9e:	add    r14,r8
  416aa1:	jae    0x416ab4
  416aa3:	mov    edx,0x1
  416aa8:	add    r9,rdx
  416aab:	mov    eax,0x1
  416ab0:	cmovb  r15d,eax
  416ab4:	mov    BYTE PTR [rsp+0xb0],r10b
  416abc:	mov    BYTE PTR [rsp+0xb1],r15b
  416ac4:	mov    rdx,QWORD PTR [rsp+0x50]
  416ac9:	mov    rax,QWORD PTR [rsp+0xb0]
  416ad1:	mov    rcx,QWORD PTR [rsp+0x48]
  416ad6:	mov    r8,QWORD PTR [rsp+0x30]
  416adb:	mov    QWORD PTR [rsp+0x60],r9
  416ae0:	mov    QWORD PTR [rsp+0x38],r9
  416ae5:	mov    QWORD PTR [rsp+0x70],rax
  416aea:	mov    QWORD PTR [rsp+0x68],r14
  416aef:	call   0x414df0
  416af4:	mov    rdx,QWORD PTR [rsp+0x88]
  416afc:	mov    rax,QWORD PTR [rsp+0x90]
  416b04:	mov    rcx,QWORD PTR [rsp+0x80]
  416b0c:	mov    r9,QWORD PTR [rsp+0x38]
  416b11:	mov    QWORD PTR [rsp+0xb0],rax
  416b19:	shr    ax,0x8
  416b1d:	cmp    rdx,r14
  416b20:	mov    QWORD PTR [rsp+0xa0],rcx
  416b28:	mov    QWORD PTR [rsp+0xa8],rdx
  416b30:	je     0x416bf0
  416b36:	mov    eax,0x1
  416b3b:	mov    BYTE PTR [rsp+0xb1],al
  416b42:	mov    rax,QWORD PTR [rsp+0xa0]
  416b4a:	mov    QWORD PTR [rsi],rax
  416b4d:	mov    rax,QWORD PTR [rsp+0xa8]
  416b55:	mov    QWORD PTR [rsi+0x8],rax
  416b59:	mov    rax,QWORD PTR [rsp+0xb0]
  416b61:	mov    ecx,eax
  416b63:	mov    QWORD PTR [rsi+0x10],rax
  416b67:	xor    eax,eax
  416b69:	shr    cx,0x8
  416b6d:	or     BYTE PTR [rsp+0x47],cl
  416b71:	jmp    0x416949
  416b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b80:	test   r8w,0x100
  416b86:	je     0x416939
  416b8c:	mov    rcx,QWORD PTR [rsp+0x58]
  416b91:	movsxd rdx,edx
  416b94:	movzx  r8d,BYTE PTR [rcx+rdx*1]
  416b99:	mov    rdx,QWORD PTR [rsi+0x8]
  416b9d:	cmp    rdx,rax
  416ba0:	jb     0x416982
  416ba6:	mov    rax,QWORD PTR [rsi]
  416ba9:	mov    r14,rdx
  416bac:	movzx  r10d,BYTE PTR [rsi+0x10]
  416bb1:	mov    rcx,rax
  416bb4:	shr    rcx,0x3c
  416bb8:	test   rcx,rcx
  416bbb:	setne  r15b
  416bbf:	shl    rax,0x4
  416bc3:	shr    rdx,0x3c
  416bc7:	mov    r9,rax
  416bca:	shl    r14,0x4
  416bce:	or     r9,rdx
  416bd1:	jmp    0x416a9e
  416bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416be0:	mov    eax,0x1
  416be5:	mov    r9d,0x3f
  416beb:	jmp    0x416a60
  416bf0:	cmp    rcx,r9
  416bf3:	mov    edx,0x1
  416bf8:	cmovne eax,edx
  416bfb:	jmp    0x416b3b
  416c00:	lea    rax,[rdx+rdx*1]
  416c04:	shr    rdx,0x3f
  416c08:	lea    rdx,[rdx+r11*2]
  416c0c:	add    r8,rax
  416c0f:	adc    rdx,0x0
  416c13:	xor    eax,eax
  416c15:	add    r14,r8
  416c18:	setb   al
  416c1b:	add    rdx,rax
  416c1e:	jmp    0x416aa8
  416c23:	add    rbx,0x1
  416c27:	mov    rax,0xfffffffffffffff9
  416c2e:	mov    QWORD PTR [rsp+0x28],0x8
  416c37:	mov    ebp,0x8
  416c3c:	jmp    0x4168c9
  416c41:	movzx  eax,BYTE PTR [rbx]
  416c44:	sub    eax,0x30
  416c47:	cdqe   
  416c49:	mov    QWORD PTR [rcx+0x8],rax
  416c4d:	jmp    0x416a1c
  416c52:	cmp    BYTE PTR [r12+0x10],0x0
  416c58:	jne    0x416a1c
  416c5e:	jmp    0x4169c9
  416c63:	add    rbx,0x2
  416c67:	mov    rax,0xfffffffffffffff1
  416c6e:	mov    QWORD PTR [rsp+0x28],0x10
  416c77:	mov    ebp,0x10
  416c7c:	jmp    0x4168c9
  416c81:	mov    rdx,QWORD PTR [rsp+0x30]
  416c86:	call   0x415530
  416c8b:	jmp    0x4169f0
  416c90:	add    rbx,0x2
  416c94:	mov    al,0xff
  416c96:	mov    QWORD PTR [rsp+0x28],0x2
  416c9f:	mov    bpl,0x2
  416ca2:	jmp    0x4168c9
  416ca7:	lea    r8,[rip+0x3916a]        # 0x44fe18
  416cae:	mov    edx,0x2
  416cb3:	mov    rcx,r12
  416cb6:	call   0x414b60
  416cbb:	jmp    0x416a1c
  416cc0:	push   rdi
  416cc1:	push   rsi
  416cc2:	push   rbx
  416cc3:	sub    rsp,0x20
  416cc7:	mov    rdi,rcx
  416cca:	mov    rcx,QWORD PTR [rcx+0x400]
  416cd1:	mov    rbx,QWORD PTR [rdi+0x408]
  416cd8:	sub    rbx,rcx
  416cdb:	mov    rax,rbx
  416cde:	sar    rax,0x3
  416ce2:	lea    rsi,[rax+0x32]
  416ce6:	shl    rsi,0x4
  416cea:	mov    rdx,rsi
  416ced:	call   0x43bb70
  416cf2:	add    rsi,rax
  416cf5:	mov    QWORD PTR [rdi+0x400],rax
  416cfc:	add    rax,rbx
  416cff:	mov    QWORD PTR [rdi+0x408],rsi
  416d06:	add    rsp,0x20
  416d0a:	pop    rbx
  416d0b:	pop    rsi
  416d0c:	pop    rdi
  416d0d:	ret    
  416d0e:	xchg   ax,ax
  416d10:	push   r15
  416d12:	push   r14
  416d14:	push   r13
  416d16:	push   r12
  416d18:	push   rbp
  416d19:	push   rdi
  416d1a:	push   rsi
  416d1b:	push   rbx
  416d1c:	sub    rsp,0x288
  416d23:	mov    r14,QWORD PTR [rcx+0x400]
  416d2a:	lea    rax,[rsp+0x158]
  416d32:	mov    DWORD PTR [rcx+0x1c],0x0
  416d39:	mov    QWORD PTR [rcx+0x198],0x0
  416d44:	mov    DWORD PTR [rsp+0xec],edx
  416d4b:	mov    DWORD PTR [rsp+0x158],0x0
  416d56:	mov    r15,rcx
  416d59:	mov    QWORD PTR [rsp+0x78],rax
  416d5e:	lea    rax,[rsp+0x260]
  416d66:	mov    DWORD PTR [r14+0x24],0x16
  416d6e:	mov    BYTE PTR [rsp+0xc6],0x1
  416d76:	mov    BYTE PTR [rsp+0xc7],0x0
  416d7e:	mov    r13,r14
  416d81:	mov    QWORD PTR [rsp+0x88],rax
  416d89:	lea    rax,[rsp+0x130]
  416d91:	mov    DWORD PTR [rsp+0xc0],0x0
  416d9c:	mov    QWORD PTR [rsp+0x68],rax
  416da1:	lea    rax,[rsp+0xf0]
  416da9:	mov    QWORD PTR [rsp+0x80],rax
  416db1:	lea    rax,[rsp+0x110]
  416db9:	mov    QWORD PTR [rsp+0x70],rax
  416dbe:	lea    rax,[rsp+0x1e0]
  416dc6:	mov    QWORD PTR [rsp+0xd0],rax
  416dce:	lea    rax,[rsp+0x15c]
  416dd6:	mov    QWORD PTR [rsp+0xe0],rax
  416dde:	xchg   ax,ax
  416de0:	mov    rdx,QWORD PTR [rsp+0x78]
  416de5:	mov    rcx,r15
  416de8:	add    DWORD PTR [rsp+0xc0],0x1
  416df0:	call   0x40ece0
  416df5:	movzx  edx,BYTE PTR [rax+0x4]
  416df9:	mov    ecx,DWORD PTR [rsp+0x158]
  416e00:	mov    QWORD PTR [rsp+0x58],rax
  416e05:	cmp    dl,0x3b
  416e08:	mov    eax,edx
  416e0a:	mov    DWORD PTR [rsp+0x64],ecx
  416e0e:	ja     0x417860
  416e14:	lea    rcx,[rip+0x39479]        # 0x450294
  416e1b:	movzx  r8d,dl
  416e1f:	movsxd r8,DWORD PTR [rcx+r8*4]
  416e23:	add    rcx,r8
  416e26:	jmp    rcx
  416e28:	nop    DWORD PTR [rax+rax*1+0x0]
  416e30:	cmp    BYTE PTR [rsp+0xc6],0x0
  416e38:	je     0x417c7c
  416e3e:	sub    eax,0x25
  416e41:	mov    DWORD PTR [rsp+0x240],0x0
  416e4c:	cmp    al,0x16
  416e4e:	ja     0x418274
  416e54:	lea    rdx,[rip+0x39529]        # 0x450384
  416e5b:	movzx  eax,al
  416e5e:	movsxd rax,DWORD PTR [rdx+rax*4]
  416e62:	add    rdx,rax
  416e65:	jmp    rdx
  416e67:	nop    WORD PTR [rax+rax*1+0x0]
  416e70:	cmp    BYTE PTR [rsp+0xc6],0x0
  416e78:	je     0x417c60
  416e7e:	mov    DWORD PTR [rsp+0x60],0x1c
  416e86:	mov    DWORD PTR [rsp+0x54],0x1c
  416e8e:	movsxd rcx,DWORD PTR [rsp+0x60]
  416e93:	lea    r12,[rip+0x395e6]        # 0x450480
  416e9a:	movzx  eax,BYTE PTR [r12+rcx*2+0x1]
  416ea0:	test   al,0x1
  416ea2:	je     0x417b24
  416ea8:	mov    r14d,DWORD PTR [r13+0x24]
  416eac:	lea    edx,[r14-0x1]
  416eb0:	cmp    edx,0x1b
  416eb3:	ja     0x417890
  416eb9:	movzx  edx,BYTE PTR [r12+rcx*2]
  416ebe:	shr    al,1
  416ec0:	mov    QWORD PTR [rsp+0x40],r12
  416ec5:	and    eax,0x1
  416ec8:	sub    edx,eax
  416eca:	mov    DWORD PTR [rsp+0x50],edx
  416ece:	mov    rdi,QWORD PTR [rsp+0x40]
  416ed3:	movsxd rax,r14d
  416ed6:	movzx  edx,BYTE PTR [rdi+rax*2]
  416eda:	cmp    DWORD PTR [rsp+0x50],edx
  416ede:	jae    0x417e20
  416ee4:	cmp    BYTE PTR [r15+0x42c],0x0
  416eec:	je     0x416f00
  416eee:	lea    rdx,[rip+0x3958b]        # 0x450480
  416ef5:	test   BYTE PTR [rdx+rax*2+0x1],0x4
  416efa:	jne    0x417b70
  416f00:	cmp    r14d,0x1c
  416f04:	ja     0x417890
  416f0a:	lea    rdi,[rip+0x394cf]        # 0x4503e0
  416f11:	mov    eax,r14d
  416f14:	movsxd rax,DWORD PTR [rdi+rax*4]
  416f18:	add    rax,rdi
  416f1b:	jmp    rax
  416f1d:	nop    DWORD PTR [rax]
  416f20:	cmp    DWORD PTR [rsp+0xc0],0x1
  416f28:	sete   BYTE PTR [rsp+0xc7]
  416f30:	lea    r12,[rip+0x39549]        # 0x450480
  416f37:	movsxd rcx,edx
  416f3a:	mov    DWORD PTR [rsp+0x60],edx
  416f3e:	movzx  eax,BYTE PTR [r12+rcx*2+0x1]
  416f44:	test   al,0x1
  416f46:	je     0x417b00
  416f4c:	cmp    BYTE PTR [rsp+0xc6],0x0
  416f54:	je     0x417c7c
  416f5a:	mov    r14d,DWORD PTR [r13+0x24]
  416f5e:	lea    r8d,[r14-0x1]
  416f62:	mov    DWORD PTR [rsp+0x54],edx
  416f66:	cmp    r8d,0x1b
  416f6a:	ja     0x417890
  416f70:	cmp    edx,0x14
  416f73:	jne    0x416eb9
  416f79:	jmp    0x4170c8
  416f7e:	xchg   ax,ax
  416f80:	cmp    BYTE PTR [rsp+0xc6],0x0
  416f88:	je     0x417c60
  416f8e:	mov    DWORD PTR [rsp+0x60],0x1b
  416f96:	mov    DWORD PTR [rsp+0x54],0x1b
  416f9e:	jmp    0x416e8e
  416fa3:	mov    rax,QWORD PTR [r13-0x20]
  416fa7:	or     rax,QWORD PTR [r13-0x18]
  416fab:	lea    rbx,[r13-0x28]
  416faf:	je     0x417cc0
  416fb5:	sub    DWORD PTR [r15+0x1c],0x1
  416fba:	mov    eax,0x1
  416fbf:	mov    QWORD PTR [r13-0x18],rax
  416fc3:	mov    eax,DWORD PTR [r13+0x20]
  416fc7:	mov    QWORD PTR [r13-0x20],0x0
  416fcf:	mov    BYTE PTR [r13-0x10],0x0
  416fd4:	mov    BYTE PTR [r13-0xf],0x0
  416fd9:	mov    DWORD PTR [r13-0x8],eax
  416fdd:	mov    r14d,DWORD PTR [rbx+0x24]
  416fe1:	mov    r13,rbx
  416fe4:	jmp    0x416ece
  416fe9:	nop    DWORD PTR [rax+0x0]
  416ff0:	mov    rax,QWORD PTR [r13-0x20]
  416ff4:	or     rax,QWORD PTR [r13-0x18]
  416ff8:	lea    rbx,[r13-0x28]
  416ffc:	jne    0x417cc0
  417002:	sub    DWORD PTR [r15+0x1c],0x1
  417007:	jmp    0x416fbf
  417009:	nop    DWORD PTR [rax+0x0]
  417010:	mov    rax,QWORD PTR [r13-0x18]
  417014:	cmp    QWORD PTR [r13+0x10],rax
  417018:	mov    rax,QWORD PTR [r13-0x20]
  41701c:	mov    QWORD PTR [r13-0x20],0x0
  417024:	sete   dl
  417027:	cmp    QWORD PTR [r13+0x8],rax
  41702b:	sete   al
  41702e:	and    eax,edx
  417030:	mov    edx,eax
  417032:	xor    edx,0x1
  417035:	cmp    r14d,0x18
  417039:	cmove  eax,edx
  41703c:	movzx  eax,al
  41703f:	mov    QWORD PTR [r13-0x18],rax
  417043:	mov    eax,DWORD PTR [r13+0x20]
  417047:	lea    rbx,[r13-0x28]
  41704b:	mov    BYTE PTR [r13-0x10],0x0
  417050:	mov    BYTE PTR [r13-0xf],0x0
  417055:	mov    DWORD PTR [r13-0x8],eax
  417059:	cmp    BYTE PTR [r13-0xf],0x0
  41705e:	je     0x416fdd
  417064:	mov    eax,DWORD PTR [r15+0x1c]
  417068:	test   eax,eax
  41706a:	jne    0x416fdd
  417070:	lea    r8,[rip+0x39189]        # 0x450200
  417077:	mov    edx,0x2
  41707c:	mov    rcx,r15
  41707f:	call   0x414b60
  417084:	jmp    0x416fdd
  417089:	nop    DWORD PTR [rax+0x0]
  417090:	cmp    DWORD PTR [rsp+0x54],0x15
  417095:	mov    rax,r13
  417098:	jne    0x418738
  41709e:	mov    rdx,QWORD PTR [r13+0x8]
  4170a2:	mov    QWORD PTR [r13-0x20],rdx
  4170a6:	mov    rdx,QWORD PTR [r13+0x10]
  4170aa:	mov    QWORD PTR [r13-0x18],rdx
  4170ae:	mov    rdx,QWORD PTR [r13+0x18]
  4170b2:	mov    QWORD PTR [r13-0x10],rdx
  4170b6:	mov    edx,DWORD PTR [r13+0x20]
  4170ba:	mov    DWORD PTR [r13-0x8],edx
  4170be:	sub    r13,0x28
  4170c2:	je     0x4177b4
  4170c8:	mov    eax,DWORD PTR [rsp+0x60]
  4170cc:	sub    eax,0xf
  4170cf:	cmp    eax,0x6
  4170d2:	ja     0x4177f0
  4170d8:	lea    rdx,[rip+0x39375]        # 0x450454
  4170df:	movsxd rax,DWORD PTR [rdx+rax*4]
  4170e3:	add    rdx,rax
  4170e6:	jmp    rdx
  4170e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4170f0:	mov    rax,QWORD PTR [r13-0x10]
  4170f4:	mov    r12,QWORD PTR [r13+0x8]
  4170f8:	mov    r9,QWORD PTR [r13+0x10]
  4170fc:	mov    rdx,QWORD PTR [r13+0x18]
  417100:	mov    rsi,QWORD PTR [r13-0x20]
  417104:	mov    rbx,QWORD PTR [r13-0x18]
  417108:	mov    QWORD PTR [rsp+0x1b0],rax
  417110:	movzx  eax,BYTE PTR [r13-0x10]
  417115:	mov    rbp,r12
  417118:	mov    QWORD PTR [rsp+0x1d0],rdx
  417120:	mov    r14,QWORD PTR [r15+0x470]
  417127:	mov    rdi,r9
  41712a:	mov    QWORD PTR [rsp+0x1a0],rsi
  417132:	mov    QWORD PTR [rsp+0x1a8],rbx
  41713a:	mov    QWORD PTR [rsp+0x1c0],r12
  417142:	mov    QWORD PTR [rsp+0x1c8],r9
  41714a:	test   al,al
  41714c:	movzx  edx,BYTE PTR [r13+0x18]
  417151:	jne    0x41715b
  417153:	test   dl,dl
  417155:	je     0x417f90
  41715b:	mov    BYTE PTR [rsp+0x90],0x1
  417163:	mov    BYTE PTR [rsp+0x98],0x1
  41716b:	mov    BYTE PTR [rsp+0x48],0x0
  417170:	mov    rcx,QWORD PTR [rsp+0xd0]
  417178:	mov    r8,rdi
  41717b:	mov    rdx,rbx
  41717e:	call   0x414f10
  417183:	mov    rax,QWORD PTR [rsp+0x1e8]
  41718b:	mov    rcx,QWORD PTR [rsp+0x88]
  417193:	mov    r8,rdi
  417196:	mov    rdx,rsi
  417199:	mov    r12,QWORD PTR [rsp+0x1e0]
  4171a1:	mov    edi,0x1
  4171a6:	mov    QWORD PTR [rsp+0xb0],rax
  4171ae:	call   0x414f10
  4171b3:	add    r12,QWORD PTR [rsp+0x268]
  4171bb:	cmp    QWORD PTR [rsp+0x260],0x0
  4171c4:	jne    0x4171d5
  4171c6:	test   rbp,rbp
  4171c9:	setne  dil
  4171cd:	test   rsi,rsi
  4171d0:	setne  dl
  4171d3:	and    edi,edx
  4171d5:	mov    rcx,QWORD PTR [rsp+0x88]
  4171dd:	mov    r8,rbp
  4171e0:	mov    rdx,rbx
  4171e3:	mov    rbp,r12
  4171e6:	mov    r12d,0x1
  4171ec:	call   0x414f10
  4171f1:	mov    rdx,QWORD PTR [rsp+0x1e8]
  4171f9:	add    rbp,QWORD PTR [rsp+0x268]
  417201:	mov    r8,r14
  417204:	cmp    QWORD PTR [rsp+0x260],0x0
  41720d:	mov    rcx,QWORD PTR [rsp+0x68]
  417212:	mov    QWORD PTR [rsp+0x118],rdx
  41721a:	mov    rdx,QWORD PTR [rsp+0x1f0]
  417222:	mov    QWORD PTR [rsp+0x110],rbp
  41722a:	cmovne edi,r12d
  41722e:	mov    QWORD PTR [rsp+0x120],rdx
  417236:	mov    rdx,QWORD PTR [rsp+0x70]
  41723b:	call   0x414df0
  417240:	mov    rbx,QWORD PTR [rsp+0x138]
  417248:	cmp    rbx,QWORD PTR [rsp+0xb0]
  417250:	mov    rsi,QWORD PTR [rsp+0x130]
  417258:	mov    rdx,QWORD PTR [rsp+0x140]
  417260:	mov    QWORD PTR [rsp+0x1e8],rbx
  417268:	mov    QWORD PTR [rsp+0x1e0],rsi
  417270:	mov    QWORD PTR [rsp+0x1f0],rdx
  417278:	je     0x417f40
  41727e:	mov    edi,0x1
  417283:	cmp    BYTE PTR [rsp+0x48],0x0
  417288:	jne    0x417ec0
  41728e:	xor    edx,edx
  417290:	cmp    BYTE PTR [rsp+0x98],0x0
  417298:	jne    0x4172d9
  41729a:	test   dil,dil
  41729d:	mov    edx,0x1
  4172a2:	jne    0x4172d9
  4172a4:	cmp    r14,0x40
  4172a8:	ja     0x418264
  4172ae:	lea    ecx,[r14-0x1]
  4172b2:	mov    rax,rbx
  4172b5:	shr    rax,cl
  4172b8:	and    eax,0x1
  4172bb:	xor    rax,0x1
  4172bf:	and    eax,0x1
  4172c2:	movzx  ecx,BYTE PTR [rsp+0x48]
  4172c7:	xor    edx,edx
  4172c9:	xor    ecx,0x1
  4172cc:	cmp    cl,al
  4172ce:	je     0x4172d9
  4172d0:	mov    rax,rsi
  4172d3:	or     rax,rbx
  4172d6:	setne  dl
  4172d9:	movzx  eax,BYTE PTR [rsp+0x90]
  4172e1:	mov    BYTE PTR [rsp+0x1f1],dl
  4172e8:	mov    QWORD PTR [rsp+0x1e8],rbx
  4172f0:	mov    QWORD PTR [r13-0x18],rbx
  4172f4:	lea    rbx,[r13-0x28]
  4172f8:	mov    QWORD PTR [rsp+0x1e0],rsi
  417300:	mov    QWORD PTR [r13-0x20],rsi
  417304:	mov    BYTE PTR [rsp+0x1f0],al
  41730b:	mov    rax,QWORD PTR [rsp+0x1f0]
  417313:	mov    QWORD PTR [r13-0x10],rax
  417317:	mov    eax,DWORD PTR [r13+0x20]
  41731b:	mov    DWORD PTR [r13-0x8],eax
  41731f:	jmp    0x417059
  417324:	mov    rax,QWORD PTR [r13-0x20]
  417328:	mov    r9,QWORD PTR [rsp+0x80]
  417330:	mov    rdx,r15
  417333:	mov    r8,QWORD PTR [rsp+0x70]
  417338:	mov    rcx,QWORD PTR [rsp+0x68]
  41733d:	lea    rbx,[r13-0x28]
  417341:	mov    QWORD PTR [rsp+0x110],rax
  417349:	mov    rax,QWORD PTR [r13-0x18]
  41734d:	mov    QWORD PTR [rsp+0x118],rax
  417355:	mov    rax,QWORD PTR [r13-0x10]
  417359:	mov    QWORD PTR [rsp+0x120],rax
  417361:	mov    rax,QWORD PTR [r13+0x8]
  417365:	mov    QWORD PTR [rsp+0xf0],rax
  41736d:	mov    rax,QWORD PTR [r13+0x10]
  417371:	mov    QWORD PTR [rsp+0xf8],rax
  417379:	mov    rax,QWORD PTR [r13+0x18]
  41737d:	mov    DWORD PTR [rsp+0x20],r14d
  417382:	mov    QWORD PTR [rsp+0x100],rax
  41738a:	call   0x415830
  41738f:	mov    rax,QWORD PTR [rsp+0x130]
  417397:	mov    QWORD PTR [r13-0x20],rax
  41739b:	mov    rax,QWORD PTR [rsp+0x138]
  4173a3:	mov    QWORD PTR [r13-0x18],rax
  4173a7:	mov    rax,QWORD PTR [rsp+0x140]
  4173af:	mov    QWORD PTR [r13-0x10],rax
  4173b3:	mov    eax,DWORD PTR [r13+0x20]
  4173b7:	mov    DWORD PTR [r13-0x8],eax
  4173bb:	jmp    0x417059
  4173c0:	mov    rax,QWORD PTR [r15+0x470]
  4173c7:	mov    rsi,QWORD PTR [r13+0x8]
  4173cb:	mov    rbx,QWORD PTR [r13-0x20]
  4173cf:	mov    rdi,QWORD PTR [r13-0x18]
  4173d3:	movzx  r8d,BYTE PTR [r13-0x10]
  4173d8:	mov    rbp,QWORD PTR [r13+0x10]
  4173dc:	mov    QWORD PTR [rsp+0x30],rax
  4173e1:	movzx  eax,BYTE PTR [r13+0x18]
  4173e6:	mov    r9,rsi
  4173e9:	mov    rdx,rdi
  4173ec:	mov    rcx,rbx
  4173ef:	mov    QWORD PTR [rsp+0x20],rbp
  4173f4:	mov    BYTE PTR [rsp+0x28],al
  4173f8:	call   0x415cb0
  4173fd:	cmp    r14d,0x19
  417401:	je     0x417d83
  417407:	cmp    r14d,0x3
  41740b:	je     0x417d80
  417411:	cmp    r14d,0x2
  417415:	je     0x418561
  41741b:	test   al,al
  41741d:	mov    edx,0x1
  417422:	jne    0x418610
  417428:	mov    QWORD PTR [r13-0x20],0x0
  417430:	mov    QWORD PTR [r13-0x18],rdx
  417434:	jmp    0x417043
  417439:	nop    DWORD PTR [rax+0x0]
  417440:	mov    rax,QWORD PTR [r13+0x18]
  417444:	mov    rdi,QWORD PTR [r13+0x8]
  417448:	cmp    r14d,0x1b
  41744c:	mov    rbx,QWORD PTR [r13+0x10]
  417450:	movzx  esi,BYTE PTR [r13+0x18]
  417455:	mov    QWORD PTR [rsp+0x190],rax
  41745d:	mov    QWORD PTR [rsp+0x180],rdi
  417465:	mov    QWORD PTR [rsp+0x188],rbx
  41746d:	movzx  eax,BYTE PTR [r13+0x19]
  417472:	je     0x418480
  417478:	cmp    r14d,0x1c
  41747c:	je     0x418400
  417482:	cmp    r14d,0xe
  417486:	je     0x418280
  41748c:	or     rbx,rdi
  41748f:	sete   bl
  417492:	xor    ebp,ebp
  417494:	xor    esi,esi
  417496:	movzx  ebx,bl
  417499:	xor    edi,edi
  41749b:	mov    eax,DWORD PTR [r13+0x20]
  41749f:	mov    QWORD PTR [r13-0x18],rbx
  4174a3:	lea    rbx,[r13-0x28]
  4174a7:	mov    QWORD PTR [r13-0x20],rdi
  4174ab:	mov    BYTE PTR [r13-0x10],sil
  4174af:	mov    BYTE PTR [r13-0xf],bpl
  4174b3:	mov    DWORD PTR [r13-0x8],eax
  4174b7:	jmp    0x417059
  4174bc:	nop    DWORD PTR [rax+0x0]
  4174c0:	mov    rax,QWORD PTR [r13-0x48]
  4174c4:	or     rax,QWORD PTR [r13-0x40]
  4174c8:	lea    rbx,[r13-0x50]
  4174cc:	je     0x417d25
  4174d2:	mov    rax,QWORD PTR [r13-0x20]
  4174d6:	sub    DWORD PTR [r15+0x1c],0x1
  4174db:	mov    QWORD PTR [r13-0x48],rax
  4174df:	mov    rax,QWORD PTR [r13-0x18]
  4174e3:	mov    QWORD PTR [r13-0x40],rax
  4174e7:	mov    rax,QWORD PTR [r13-0x10]
  4174eb:	mov    QWORD PTR [r13-0x38],rax
  4174ef:	mov    eax,DWORD PTR [r13-0x8]
  4174f3:	mov    DWORD PTR [r13-0x30],eax
  4174f7:	movzx  eax,BYTE PTR [r13-0x10]
  4174fc:	test   al,al
  4174fe:	jne    0x417505
  417500:	movzx  eax,BYTE PTR [r13+0x18]
  417505:	mov    BYTE PTR [r13-0x38],al
  417509:	jmp    0x416fdd
  41750e:	xchg   ax,ax
  417510:	mov    r11,QWORD PTR [r13-0x18]
  417514:	movzx  eax,BYTE PTR [r13-0x10]
  417519:	or     al,BYTE PTR [r13+0x18]
  41751d:	cmp    r14d,0x9
  417521:	mov    r8,QWORD PTR [r13+0x8]
  417525:	mov    r10,QWORD PTR [r13+0x10]
  417529:	mov    r9,QWORD PTR [r13-0x20]
  41752d:	mov    rdx,r11
  417530:	je     0x417f30
  417536:	mov    rcx,r9
  417539:	xor    rdx,r10
  41753c:	xor    rcx,r8
  41753f:	cmp    r14d,0xa
  417543:	je     0x418550
  417549:	mov    BYTE PTR [r13-0x10],al
  41754d:	mov    eax,DWORD PTR [r13+0x20]
  417551:	lea    rbx,[r13-0x28]
  417555:	mov    QWORD PTR [r13-0x20],rcx
  417559:	mov    QWORD PTR [r13-0x18],rdx
  41755d:	mov    BYTE PTR [r13-0xf],0x0
  417562:	mov    DWORD PTR [r13-0x8],eax
  417566:	jmp    0x417059
  41756b:	nop    DWORD PTR [rax+rax*1+0x0]
  417570:	mov    eax,DWORD PTR [r13+0x20]
  417574:	movzx  r12d,BYTE PTR [r13-0x10]
  417579:	mov    r11,QWORD PTR [r13-0x20]
  41757d:	mov    r8,QWORD PTR [r13-0x18]
  417581:	mov    r9,QWORD PTR [r13+0x8]
  417585:	mov    r10,QWORD PTR [r13+0x10]
  417589:	mov    DWORD PTR [rsp+0x90],eax
  417590:	mov    rax,QWORD PTR [r13-0x10]
  417594:	test   r12b,r12b
  417597:	mov    QWORD PTR [rsp+0x200],r11
  41759f:	mov    QWORD PTR [rsp+0x208],r8
  4175a7:	mov    rsi,r11
  4175aa:	mov    rdi,r8
  4175ad:	mov    QWORD PTR [rsp+0x220],r9
  4175b5:	mov    QWORD PTR [rsp+0x210],rax
  4175bd:	movzx  eax,BYTE PTR [r13-0xf]
  4175c2:	mov    rbx,r9
  4175c5:	mov    QWORD PTR [rsp+0x228],r10
  4175cd:	mov    rbp,r10
  4175d0:	mov    BYTE PTR [rsp+0xa0],al
  4175d7:	mov    rax,QWORD PTR [r13+0x18]
  4175db:	mov    QWORD PTR [rsp+0x230],rax
  4175e3:	movzx  eax,BYTE PTR [r13+0x18]
  4175e8:	jne    0x4178b0
  4175ee:	test   al,al
  4175f0:	jne    0x4178b0
  4175f6:	mov    rax,QWORD PTR [r15+0x470]
  4175fd:	cmp    rax,0x40
  417601:	mov    QWORD PTR [rsp+0x48],rax
  417606:	jbe    0x41831e
  41760c:	mov    rdx,QWORD PTR [rsp+0x48]
  417611:	mov    rcx,r11
  417614:	mov    QWORD PTR [rsp+0xc8],r10
  41761c:	mov    QWORD PTR [rsp+0xb8],r9
  417624:	mov    QWORD PTR [rsp+0xb0],r8
  41762c:	mov    QWORD PTR [rsp+0x98],r11
  417634:	call   0x415530
  417639:	test   al,al
  41763b:	mov    r8,QWORD PTR [rsp+0xb0]
  417643:	mov    r11,QWORD PTR [rsp+0x98]
  41764b:	mov    r9,QWORD PTR [rsp+0xb8]
  417653:	mov    r10,QWORD PTR [rsp+0xc8]
  41765b:	mov    BYTE PTR [rsp+0xb0],0x0
  417663:	je     0x418345
  417669:	cmp    QWORD PTR [rsp+0x48],0x40
  41766f:	jbe    0x418302
  417675:	mov    rdx,QWORD PTR [rsp+0x48]
  41767a:	mov    rcx,r9
  41767d:	mov    QWORD PTR [rsp+0xb8],r10
  417685:	mov    QWORD PTR [rsp+0x98],r9
  41768d:	call   0x415530
  417692:	mov    r9,QWORD PTR [rsp+0x98]
  41769a:	mov    r10,QWORD PTR [rsp+0xb8]
  4176a2:	movzx  ecx,BYTE PTR [rsp+0xb0]
  4176aa:	test   al,al
  4176ac:	mov    BYTE PTR [rsp+0xb8],0x0
  4176b4:	mov    BYTE PTR [rsp+0xc8],cl
  4176bb:	jne    0x4178d4
  4176c1:	mov    eax,ecx
  4176c3:	mov    BYTE PTR [rsp+0x230],0x0
  4176cb:	mov    r8,QWORD PTR [rsp+0x48]
  4176d0:	xor    eax,0x1
  4176d3:	mov    rdx,QWORD PTR [rsp+0x70]
  4176d8:	mov    rcx,QWORD PTR [rsp+0x68]
  4176dd:	mov    BYTE PTR [rsp+0xc8],al
  4176e4:	mov    rax,QWORD PTR [rsp+0x230]
  4176ec:	mov    QWORD PTR [rsp+0x110],r9
  4176f4:	mov    QWORD PTR [rsp+0x118],r10
  4176fc:	mov    QWORD PTR [rsp+0x120],rax
  417704:	call   0x414e50
  417709:	mov    rbx,QWORD PTR [rsp+0x130]
  417711:	mov    rbp,QWORD PTR [rsp+0x138]
  417719:	mov    rax,QWORD PTR [rsp+0x140]
  417721:	test   rbx,rbx
  417724:	mov    QWORD PTR [rsp+0x220],rbx
  41772c:	mov    QWORD PTR [rsp+0x228],rbp
  417734:	mov    QWORD PTR [rsp+0x230],rax
  41773c:	jne    0x4178dd
  417742:	test   rbp,rbp
  417745:	je     0x417f50
  41774b:	cmp    QWORD PTR [rsp+0x48],0x40
  417751:	mov    rax,QWORD PTR [rsp+0x48]
  417756:	jbe    0x418601
  41775c:	lea    rcx,[rax-0x41]
  417760:	lea    r11,[rax-0x1]
  417764:	mov    eax,0x1
  417769:	shl    rax,cl
  41776c:	test   rax,rbp
  41776f:	jne    0x41777d
  417771:	shr    rax,1
  417774:	sub    rcx,0x1
  417778:	test   rbp,rax
  41777b:	je     0x417771
  41777d:	sub    r11,rcx
  417780:	mov    r12,r11
  417783:	jmp    0x417912
  417788:	nop    DWORD PTR [rax+rax*1+0x0]
  417790:	mov    eax,DWORD PTR [rsp+0x54]
  417794:	sub    eax,0x12
  417797:	cmp    eax,0x1
  41779a:	jbe    0x4170c8
  4177a0:	lea    r8,[rip+0x38a39]        # 0x4501e0
  4177a7:	mov    edx,0x3
  4177ac:	mov    rcx,r15
  4177af:	call   0x414b60
  4177b4:	xor    eax,eax
  4177b6:	add    rsp,0x288
  4177bd:	pop    rbx
  4177be:	pop    rsi
  4177bf:	pop    rdi
  4177c0:	pop    rbp
  4177c1:	pop    r12
  4177c3:	pop    r13
  4177c5:	pop    r14
  4177c7:	pop    r15
  4177c9:	ret    
  4177ca:	nop    WORD PTR [rax+rax*1+0x0]
  4177d0:	cmp    DWORD PTR [r13+0x24],0x11
  4177d5:	jne    0x418996
  4177db:	mov    rax,QWORD PTR [r13-0x20]
  4177df:	or     rax,QWORD PTR [r13-0x18]
  4177e3:	jne    0x41782d
  4177e5:	sub    DWORD PTR [r15+0x1c],0x1
  4177ea:	nop    WORD PTR [rax+rax*1+0x0]
  4177f0:	add    r13,0x28
  4177f4:	cmp    r13,QWORD PTR [r15+0x408]
  4177fb:	je     0x41783f
  4177fd:	mov    eax,DWORD PTR [rsp+0x54]
  417801:	mov    BYTE PTR [rsp+0xc6],0x1
  417809:	mov    DWORD PTR [r13+0x24],eax
  41780d:	mov    rax,QWORD PTR [rsp+0x58]
  417812:	mov    QWORD PTR [r13+0x0],rax
  417816:	mov    eax,DWORD PTR [rsp+0x64]
  41781a:	mov    DWORD PTR [r13+0x20],eax
  41781e:	jmp    0x416de0
  417823:	mov    rax,QWORD PTR [r13+0x8]
  417827:	or     rax,QWORD PTR [r13+0x10]
  41782b:	je     0x4177f0
  41782d:	add    DWORD PTR [r15+0x1c],0x1
  417832:	add    r13,0x28
  417836:	cmp    r13,QWORD PTR [r15+0x408]
  41783d:	jne    0x4177fd
  41783f:	mov    rcx,r15
  417842:	call   0x416cc0
  417847:	mov    r13,rax
  41784a:	jmp    0x4177fd
  41784c:	nop    DWORD PTR [rax+0x0]
  417850:	mov    rax,QWORD PTR [r13+0x8]
  417854:	or     rax,QWORD PTR [r13+0x10]
  417858:	je     0x41782d
  41785a:	jmp    0x4177f0
  41785c:	nop    DWORD PTR [rax+0x0]
  417860:	lea    eax,[rdx-0x1]
  417863:	cmp    eax,0x19
  417866:	jbe    0x416f30
  41786c:	mov    rdx,QWORD PTR [rsp+0x58]
  417871:	mov    rcx,r15
  417874:	mov    r13,r15
  417877:	call   0x41f080
  41787c:	mov    QWORD PTR [rsp+0x28],rax
  417881:	lea    rax,[rip+0x387a8]        # 0x450030
  417888:	jmp    0x417c98
  41788d:	nop    DWORD PTR [rax]
  417890:	mov    r13,r15
  417893:	lea    r8,[rip+0x38858]        # 0x4500f2
  41789a:	mov    r9d,r14d
  41789d:	mov    edx,0x4
  4178a2:	mov    rcx,r13
  4178a5:	call   0x414b60
  4178aa:	jmp    0x4177b4
  4178af:	nop
  4178b0:	mov    rax,QWORD PTR [r15+0x470]
  4178b7:	mov    BYTE PTR [rsp+0xb8],0x1
  4178bf:	mov    BYTE PTR [rsp+0xb0],0x0
  4178c7:	mov    BYTE PTR [rsp+0xc8],0x0
  4178cf:	mov    QWORD PTR [rsp+0x48],rax
  4178d4:	test   rbx,rbx
  4178d7:	je     0x417742
  4178dd:	mov    rax,QWORD PTR [rsp+0x48]
  4178e2:	lea    r11,[rax-0x1]
  4178e6:	mov    eax,0x1
  4178eb:	lea    ecx,[r11-0x40]
  4178ef:	shl    rax,cl
  4178f2:	test   rax,rbx
  4178f5:	jne    0x4188c0
  4178fb:	mov    rdx,r11
  4178fe:	xchg   ax,ax
  417900:	shr    rax,1
  417903:	sub    rdx,0x1
  417907:	test   rbx,rax
  41790a:	je     0x417900
  41790c:	sub    r11,rdx
  41790f:	mov    r12,r11
  417912:	mov    BYTE PTR [rsp+0x230],0x1
  41791a:	mov    rcx,QWORD PTR [rsp+0x88]
  417922:	mov    r9,r12
  417925:	mov    rax,QWORD PTR [rsp+0x230]
  41792d:	mov    r8,QWORD PTR [rsp+0x48]
  417932:	mov    rdx,QWORD PTR [rsp+0x68]
  417937:	mov    QWORD PTR [rsp+0x220],rbx
  41793f:	mov    QWORD PTR [rsp+0x228],rbp
  417947:	mov    QWORD PTR [rsp+0x130],rbx
  41794f:	mov    QWORD PTR [rsp+0x138],rbp
  417957:	mov    QWORD PTR [rsp+0x140],rax
  41795f:	call   0x4156d0
  417964:	movzx  eax,BYTE PTR [rsp+0x270]
  41796c:	mov    rbp,QWORD PTR [rsp+0x260]
  417974:	mov    ecx,0x1
  417979:	mov    QWORD PTR [rsp+0xd8],r13
  417981:	mov    DWORD PTR [rsp+0xe8],r14d
  417989:	mov    r14d,ecx
  41798c:	mov    QWORD PTR [rsp+0x2d0],r15
  417994:	mov    rbx,QWORD PTR [rsp+0x268]
  41799c:	mov    r15,r12
  41799f:	mov    QWORD PTR [rsp+0x98],0x0
  4179ab:	mov    r12,rbp
  4179ae:	mov    QWORD PTR [rsp+0x90],0x0
  4179ba:	movzx  r13d,BYTE PTR [rsp+0xa0]
  4179c3:	mov    ebp,eax
  4179c5:	jmp    0x4179ed
  4179c7:	nop    WORD PTR [rax+rax*1+0x0]
  4179d0:	test   r15,r15
  4179d3:	je     0x417bf0
  4179d9:	mov    rax,r12
  4179dc:	shr    rbx,1
  4179df:	shr    r12,1
  4179e2:	shl    rax,0x3f
  4179e6:	sub    r15,0x1
  4179ea:	or     rbx,rax
  4179ed:	mov    rax,QWORD PTR [rsp+0x48]
  4179f2:	mov    BYTE PTR [rsp+0x28],bpl
  4179f7:	mov    r9,r12
  4179fa:	mov    QWORD PTR [rsp+0x20],rbx
  4179ff:	mov    r8d,r14d
  417a02:	mov    rdx,rdi
  417a05:	mov    rcx,rsi
  417a08:	mov    QWORD PTR [rsp+0x30],rax
  417a0d:	call   0x415cb0
  417a12:	test   al,al
  417a14:	je     0x4179d0
  417a16:	mov    BYTE PTR [rsp+0x210],r14b
  417a1e:	mov    BYTE PTR [rsp+0x211],r13b
  417a26:	mov    rax,QWORD PTR [rsp+0x210]
  417a2e:	mov    r9,QWORD PTR [rsp+0x80]
  417a36:	mov    r8,QWORD PTR [rsp+0x70]
  417a3b:	mov    rdx,QWORD PTR [rsp+0x2d0]
  417a43:	mov    rcx,QWORD PTR [rsp+0x68]
  417a48:	mov    DWORD PTR [rsp+0x20],0x5
  417a50:	mov    QWORD PTR [rsp+0x120],rax
  417a58:	mov    rax,QWORD PTR [rsp+0x270]
  417a60:	mov    QWORD PTR [rsp+0x110],rsi
  417a68:	mov    QWORD PTR [rsp+0x118],rdi
  417a70:	mov    QWORD PTR [rsp+0x260],r12
  417a78:	mov    QWORD PTR [rsp+0x268],rbx
  417a80:	mov    QWORD PTR [rsp+0xf0],r12
  417a88:	mov    QWORD PTR [rsp+0xf8],rbx
  417a90:	mov    QWORD PTR [rsp+0x100],rax
  417a98:	call   0x415830
  417a9d:	mov    r13,QWORD PTR [rsp+0x140]
  417aa5:	mov    rsi,QWORD PTR [rsp+0x130]
  417aad:	mov    rdi,QWORD PTR [rsp+0x138]
  417ab5:	mov    QWORD PTR [rsp+0x210],r13
  417abd:	mov    r14d,r13d
  417ac0:	shr    r13w,0x8
  417ac5:	cmp    r15,0x3f
  417ac9:	mov    QWORD PTR [rsp+0x200],rsi
  417ad1:	mov    QWORD PTR [rsp+0x208],rdi
  417ad9:	jbe    0x417bd0
  417adf:	lea    ecx,[r15-0x40]
  417ae3:	mov    eax,0x1
  417ae8:	shl    rax,cl
  417aeb:	or     QWORD PTR [rsp+0x90],rax
  417af3:	jmp    0x4179d9
  417af8:	nop    DWORD PTR [rax+rax*1+0x0]
  417b00:	cmp    BYTE PTR [rsp+0xc6],0x0
  417b08:	je     0x416f5a
  417b0e:	cmp    edx,0x15
  417b11:	je     0x417da0
  417b17:	cmp    edx,0x16
  417b1a:	mov    DWORD PTR [rsp+0x54],edx
  417b1e:	je     0x417de1
  417b24:	mov    r14d,DWORD PTR [r13+0x24]
  417b28:	mov    edx,r14d
  417b2b:	and    edx,0xfffffffd
  417b2e:	cmp    edx,0x14
  417b31:	jne    0x417dbf
  417b37:	mov    esi,DWORD PTR [rsp+0x54]
  417b3b:	lea    edx,[rsi-0x15]
  417b3e:	cmp    edx,0x1
  417b41:	jbe    0x416eac
  417b47:	mov    rdx,QWORD PTR [rsp+0x58]
  417b4c:	mov    rcx,r15
  417b4f:	mov    r13,r15
  417b52:	call   0x41f080
  417b57:	mov    QWORD PTR [rsp+0x28],rax
  417b5c:	lea    rax,[rip+0x3856d]        # 0x4500d0
  417b63:	jmp    0x417c98
  417b68:	nop    DWORD PTR [rax+rax*1+0x0]
  417b70:	movzx  eax,BYTE PTR [r13+0x18]
  417b75:	cmp    al,BYTE PTR [r13-0x10]
  417b79:	je     0x416f00
  417b7f:	test   al,al
  417b81:	mov    rdx,QWORD PTR [r15+0x470]
  417b88:	je     0x417cd3
  417b8e:	cmp    rdx,0x40
  417b92:	mov    rcx,QWORD PTR [r13-0x20]
  417b96:	mov    rax,QWORD PTR [r13-0x18]
  417b9a:	jbe    0x417d62
  417ba0:	call   0x415530
  417ba5:	test   al,al
  417ba7:	jne    0x416f00
  417bad:	mov    rdx,QWORD PTR [r13+0x0]
  417bb1:	mov    rcx,r15
  417bb4:	call   0x41f080
  417bb9:	mov    r8d,DWORD PTR [r13-0x8]
  417bbd:	mov    QWORD PTR [rsp+0x28],rax
  417bc2:	lea    rax,[rip+0x38547]        # 0x450110
  417bc9:	jmp    0x417d0a
  417bce:	xchg   ax,ax
  417bd0:	mov    eax,0x1
  417bd5:	mov    ecx,r15d
  417bd8:	shl    rax,cl
  417bdb:	or     QWORD PTR [rsp+0x98],rax
  417be3:	test   r15,r15
  417be6:	jne    0x4179d9
  417bec:	nop    DWORD PTR [rax+0x0]
  417bf0:	mov    r14d,DWORD PTR [rsp+0xe8]
  417bf8:	mov    r13,QWORD PTR [rsp+0xd8]
  417c00:	mov    r15,QWORD PTR [rsp+0x2d0]
  417c08:	mov    rbx,QWORD PTR [rsp+0x98]
  417c10:	cmp    r14d,0x7
  417c14:	mov    rbp,QWORD PTR [rsp+0x90]
  417c1c:	je     0x4184e2
  417c22:	xor    eax,eax
  417c24:	cmp    BYTE PTR [rsp+0xb0],0x0
  417c2c:	movzx  r11d,BYTE PTR [rsp+0xb8]
  417c35:	jne    0x418581
  417c3b:	mov    BYTE PTR [r13-0xf],al
  417c3f:	mov    eax,DWORD PTR [r13+0x20]
  417c43:	lea    rbx,[r13-0x28]
  417c47:	mov    QWORD PTR [r13-0x20],rsi
  417c4b:	mov    QWORD PTR [r13-0x18],rdi
  417c4f:	mov    BYTE PTR [r13-0x10],r11b
  417c53:	mov    DWORD PTR [r13-0x8],eax
  417c57:	jmp    0x417059
  417c5c:	nop    DWORD PTR [rax+0x0]
  417c60:	lea    r12,[rip+0x38819]        # 0x450480
  417c67:	movsxd rcx,edx
  417c6a:	mov    DWORD PTR [rsp+0x60],edx
  417c6e:	movzx  eax,BYTE PTR [r12+rcx*2+0x1]
  417c74:	test   al,0x1
  417c76:	je     0x416f5a
  417c7c:	mov    rdx,QWORD PTR [rsp+0x58]
  417c81:	mov    rcx,r15
  417c84:	mov    r13,r15
  417c87:	call   0x41f080
  417c8c:	mov    QWORD PTR [rsp+0x28],rax
  417c91:	lea    rax,[rip+0x381f0]        # 0x44fe88
  417c98:	mov    r8d,DWORD PTR [rsp+0x64]
  417c9d:	mov    QWORD PTR [rsp+0x20],rax
  417ca2:	xor    r9d,r9d
  417ca5:	mov    edx,0x3
  417caa:	mov    rcx,r13
  417cad:	call   0x414c40
  417cb2:	jmp    0x4177b4
  417cb7:	nop    WORD PTR [rax+rax*1+0x0]
  417cc0:	mov    rax,QWORD PTR [r13+0x8]
  417cc4:	or     rax,QWORD PTR [r13+0x10]
  417cc8:	setne  al
  417ccb:	movzx  eax,al
  417cce:	jmp    0x416fbf
  417cd3:	cmp    rdx,0x40
  417cd7:	mov    rcx,QWORD PTR [r13+0x8]
  417cdb:	mov    rax,QWORD PTR [r13+0x10]
  417cdf:	jbe    0x417d50
  417ce1:	call   0x415530
  417ce6:	test   al,al
  417ce8:	jne    0x416f00
  417cee:	mov    rdx,QWORD PTR [r13+0x0]
  417cf2:	mov    rcx,r15
  417cf5:	call   0x41f080
  417cfa:	mov    r8d,DWORD PTR [r13+0x20]
  417cfe:	mov    QWORD PTR [rsp+0x28],rax
  417d03:	lea    rax,[rip+0x3843e]        # 0x450148
  417d0a:	mov    QWORD PTR [rsp+0x20],rax
  417d0f:	xor    r9d,r9d
  417d12:	xor    edx,edx
  417d14:	mov    rcx,r15
  417d17:	call   0x414c40
  417d1c:	mov    r14d,DWORD PTR [r13+0x24]
  417d20:	jmp    0x416f00
  417d25:	mov    rax,QWORD PTR [r13+0x8]
  417d29:	mov    QWORD PTR [r13-0x48],rax
  417d2d:	mov    rax,QWORD PTR [r13+0x10]
  417d31:	mov    QWORD PTR [r13-0x40],rax
  417d35:	mov    rax,QWORD PTR [r13+0x18]
  417d39:	mov    QWORD PTR [r13-0x38],rax
  417d3d:	mov    eax,DWORD PTR [r13+0x20]
  417d41:	mov    DWORD PTR [r13-0x30],eax
  417d45:	jmp    0x4174f7
  417d4a:	nop    WORD PTR [rax+rax*1+0x0]
  417d50:	lea    ecx,[rdx-0x1]
  417d53:	shr    rax,cl
  417d56:	and    eax,0x1
  417d59:	xor    rax,0x1
  417d5d:	and    eax,0x1
  417d60:	jmp    0x417ce6
  417d62:	lea    ecx,[rdx-0x1]
  417d65:	shr    rax,cl
  417d68:	and    eax,0x1
  417d6b:	xor    rax,0x1
  417d6f:	and    eax,0x1
  417d72:	jmp    0x417ba5
  417d77:	nop    WORD PTR [rax+rax*1+0x0]
  417d80:	xor    eax,0x1
  417d83:	movzx  edx,al
  417d86:	mov    QWORD PTR [r13-0x20],0x0
  417d8e:	mov    QWORD PTR [r13-0x18],rdx
  417d92:	jmp    0x417043
  417d97:	nop    WORD PTR [rax+rax*1+0x0]
  417da0:	mov    r14d,DWORD PTR [r13+0x24]
  417da4:	cmp    r14d,0x14
  417da8:	je     0x418b53
  417dae:	mov    r8d,r14d
  417db1:	and    r8d,0xfffffffd
  417db5:	cmp    r8d,0x14
  417db9:	je     0x416f5e
  417dbf:	mov    r14,r13
  417dc2:	mov    rcx,r15
  417dc5:	mov    r13,r15
  417dc8:	mov    rdx,QWORD PTR [r14]
  417dcb:	call   0x41f080
  417dd0:	mov    QWORD PTR [rsp+0x28],rax
  417dd5:	lea    rax,[rip+0x382cc]        # 0x4500a8
  417ddc:	jmp    0x417c98
  417de1:	mov    r14d,DWORD PTR [r13+0x24]
  417de5:	cmp    r14d,0x16
  417de9:	jne    0x417dae
  417deb:	cmp    BYTE PTR [rsp+0xec],0x0
  417df3:	lea    rdx,[rip+0x38083]        # 0x44fe7d
  417dfa:	lea    rax,[rip+0x38078]        # 0x44fe79
  417e01:	mov    r13,r15
  417e04:	cmove  rax,rdx
  417e08:	mov    QWORD PTR [rsp+0x28],rax
  417e0d:	lea    rax,[rip+0x3827b]        # 0x45008f
  417e14:	jmp    0x417c98
  417e19:	nop    DWORD PTR [rax+0x0]
  417e20:	cmp    DWORD PTR [rsp+0x54],0x15
  417e25:	je     0x418b78
  417e2b:	cmp    DWORD PTR [rsp+0x54],0x16
  417e30:	jne    0x4170c8
  417e36:	cmp    QWORD PTR [r15+0x198],0x0
  417e3e:	mov    r14,r13
  417e41:	mov    r13,r15
  417e44:	je     0x417e65
  417e46:	cmp    DWORD PTR [rsp+0xc0],0x3
  417e4e:	setne  al
  417e51:	cmp    al,BYTE PTR [rsp+0xc7]
  417e58:	jb     0x417e65
  417e5a:	mov    QWORD PTR [r15+0x198],0x0
  417e65:	cmp    QWORD PTR [r13+0x400],r14
  417e6c:	je     0x418a5f
  417e72:	cmp    BYTE PTR [rsp+0xec],0x0
  417e7a:	lea    rdx,[rip+0x37ffc]        # 0x44fe7d
  417e81:	lea    rax,[rip+0x37ff1]        # 0x44fe79
  417e88:	mov    r8d,DWORD PTR [r14+0x20]
  417e8c:	mov    rcx,r13
  417e8f:	cmove  rax,rdx
  417e93:	xor    r9d,r9d
  417e96:	mov    edx,0x4
  417e9b:	mov    QWORD PTR [rsp+0x28],rax
  417ea0:	lea    rax,[rip+0x383ba]        # 0x450261
  417ea7:	mov    QWORD PTR [rsp+0x20],rax
  417eac:	call   0x414c40
  417eb1:	xor    eax,eax
  417eb3:	jmp    0x4177b6
  417eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  417ec0:	mov    rax,QWORD PTR [rsp+0x1e0]
  417ec8:	mov    rdx,QWORD PTR [rsp+0x70]
  417ecd:	mov    r8,r14
  417ed0:	mov    rcx,QWORD PTR [rsp+0x68]
  417ed5:	mov    QWORD PTR [rsp+0x110],rax
  417edd:	mov    rax,QWORD PTR [rsp+0x1e8]
  417ee5:	mov    QWORD PTR [rsp+0x118],rax
  417eed:	mov    rax,QWORD PTR [rsp+0x1f0]
  417ef5:	mov    QWORD PTR [rsp+0x120],rax
  417efd:	call   0x414e50
  417f02:	mov    rax,QWORD PTR [rsp+0x140]
  417f0a:	mov    rsi,QWORD PTR [rsp+0x130]
  417f12:	mov    rbx,QWORD PTR [rsp+0x138]
  417f1a:	mov    QWORD PTR [rsp+0x1f0],rax
  417f22:	jmp    0x41728e
  417f27:	nop    WORD PTR [rax+rax*1+0x0]
  417f30:	mov    rcx,r9
  417f33:	and    rdx,r10
  417f36:	and    rcx,r8
  417f39:	jmp    0x417549
  417f3e:	xchg   ax,ax
  417f40:	cmp    rbp,rsi
  417f43:	cmovne edi,r12d
  417f47:	jmp    0x417283
  417f4c:	nop    DWORD PTR [rax+0x0]
  417f50:	mov    edx,DWORD PTR [r15+0x1c]
  417f54:	test   edx,edx
  417f56:	jne    0x417f7c
  417f58:	lea    rax,[rip+0x3824f]        # 0x4501ae
  417f5f:	mov    r8d,DWORD PTR [rsp+0x90]
  417f67:	xor    r9d,r9d
  417f6a:	mov    edx,0x3
  417f6f:	mov    rcx,r15
  417f72:	mov    QWORD PTR [rsp+0x20],rax
  417f77:	call   0x414c40
  417f7c:	movzx  eax,BYTE PTR [rsp+0xa0]
  417f84:	mov    r11d,r12d
  417f87:	jmp    0x417c3b
  417f8c:	nop    DWORD PTR [rax+0x0]
  417f90:	cmp    r14,0x40
  417f94:	jbe    0x4184b5
  417f9a:	mov    rdx,r14
  417f9d:	mov    rcx,rsi
  417fa0:	mov    QWORD PTR [rsp+0x90],r9
  417fa8:	call   0x415530
  417fad:	test   al,al
  417faf:	mov    BYTE PTR [rsp+0x48],0x0
  417fb4:	mov    r9,QWORD PTR [rsp+0x90]
  417fbc:	je     0x4187f1
  417fc2:	mov    rdx,r14
  417fc5:	mov    rcx,r12
  417fc8:	mov    QWORD PTR [rsp+0x90],r9
  417fd0:	call   0x415530
  417fd5:	mov    r9,QWORD PTR [rsp+0x90]
  417fdd:	test   al,al
  417fdf:	mov    BYTE PTR [rsp+0x90],0x0
  417fe7:	mov    BYTE PTR [rsp+0x98],0x0
  417fef:	jne    0x417170
  417ff5:	mov    BYTE PTR [rsp+0x1d0],0x0
  417ffd:	mov    rdx,QWORD PTR [rsp+0x70]
  418002:	mov    r8,r14
  418005:	mov    rax,QWORD PTR [rsp+0x1d0]
  41800d:	mov    rcx,QWORD PTR [rsp+0x68]
  418012:	xor    BYTE PTR [rsp+0x48],0x1
  418017:	mov    QWORD PTR [rsp+0x110],r12
  41801f:	mov    QWORD PTR [rsp+0x118],r9
  418027:	mov    QWORD PTR [rsp+0x120],rax
  41802f:	call   0x414e50
  418034:	mov    rax,QWORD PTR [rsp+0x140]
  41803c:	mov    rbp,QWORD PTR [rsp+0x130]
  418044:	mov    rdi,QWORD PTR [rsp+0x138]
  41804c:	mov    QWORD PTR [rsp+0x1d0],rax
  418054:	movzx  eax,BYTE PTR [rsp+0x98]
  41805c:	mov    QWORD PTR [rsp+0x1c0],rbp
  418064:	mov    QWORD PTR [rsp+0x1c8],rdi
  41806c:	mov    BYTE PTR [rsp+0x90],al
  418073:	jmp    0x417170
  418078:	nop    DWORD PTR [rax+rax*1+0x0]
  418080:	mov    r8,QWORD PTR [rsp+0xe0]
  418088:	mov    rdx,QWORD PTR [rsp+0x58]
  41808d:	lea    r9,[rsp+0x240]
  418095:	mov    rcx,r15
  418098:	call   0x425bc0
  41809d:	mov    esi,DWORD PTR [rsp+0x240]
  4180a4:	mov    eax,eax
  4180a6:	test   esi,esi
  4180a8:	jne    0x418674
  4180ae:	test   eax,eax
  4180b0:	js     0x4189be
  4180b6:	xor    r8d,r8d
  4180b9:	xor    ecx,ecx
  4180bb:	xor    edx,edx
  4180bd:	jmp    0x4181f5
  4180c2:	mov    r9d,DWORD PTR [rsp+0x64]
  4180c7:	mov    rdx,QWORD PTR [rsp+0x58]
  4180cc:	xor    r8d,r8d
  4180cf:	mov    rcx,r15
  4180d2:	call   0x415f10
  4180d7:	test   eax,0x1000000
  4180dc:	mov    DWORD PTR [rsp+0x15c],eax
  4180e3:	jne    0x4188a0
  4180e9:	mov    edx,eax
  4180eb:	and    edx,0xf
  4180ee:	cmp    edx,0x1
  4180f1:	je     0x418875
  4180f7:	cmp    edx,0x2
  4180fa:	jne    0x41811a
  4180fc:	lea    rax,[rip+0x37de5]        # 0x44fee8
  418103:	mov    r8d,DWORD PTR [rsp+0x64]
  418108:	xor    r9d,r9d
  41810b:	mov    dl,0x3
  41810d:	mov    rcx,r15
  418110:	mov    QWORD PTR [rsp+0x20],rax
  418115:	call   0x414c40
  41811a:	mov    r8d,DWORD PTR [rsp+0x240]
  418122:	test   r8d,r8d
  418125:	setne  r8b
  418129:	xor    ecx,ecx
  41812b:	xor    eax,eax
  41812d:	xor    edx,edx
  41812f:	jmp    0x4181f5
  418134:	mov    rax,QWORD PTR [rsp+0x58]
  418139:	mov    rax,QWORD PTR [rax+0x8]
  41813d:	cmp    rax,QWORD PTR [r15+0x498]
  418144:	je     0x418a6f
  41814a:	xor    r8d,r8d
  41814d:	cmp    rax,QWORD PTR [r15+0x4b8]
  418154:	lea    rcx,[rsp+0x160]
  41815c:	je     0x418968
  418162:	cmp    rax,QWORD PTR [r15+0x4c0]
  418169:	je     0x41895a
  41816f:	cmp    BYTE PTR [r15+0x418],0x0
  418177:	je     0x418196
  418179:	mov    rdx,QWORD PTR [r15+0x4a0]
  418180:	cmp    rax,rdx
  418183:	je     0x418723
  418189:	cmp    rax,QWORD PTR [r15+0x4a8]
  418190:	je     0x418723
  418196:	cmp    BYTE PTR [r15+0x433],0x0
  41819e:	je     0x4181ad
  4181a0:	mov    r10d,DWORD PTR [r15+0x1c]
  4181a4:	test   r10d,r10d
  4181a7:	je     0x41892c
  4181ad:	xor    r8d,r8d
  4181b0:	xor    ecx,ecx
  4181b2:	xor    eax,eax
  4181b4:	xor    edx,edx
  4181b6:	jmp    0x4181f5
  4181b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4181c0:	cmp    BYTE PTR [r15+0x12],0x0
  4181c5:	je     0x418632
  4181cb:	mov    rdx,QWORD PTR [rsp+0xe0]
  4181d3:	mov    rcx,r15
  4181d6:	call   0x413da0
  4181db:	mov    r9d,DWORD PTR [rsp+0x240]
  4181e3:	mov    eax,DWORD PTR [rsp+0x15c]
  4181ea:	test   r9d,r9d
  4181ed:	setne  r8b
  4181f1:	xor    ecx,ecx
  4181f3:	xor    edx,edx
  4181f5:	mov    BYTE PTR [rsp+0x270],r8b
  4181fd:	mov    BYTE PTR [rsp+0x271],cl
  418204:	mov    r9,QWORD PTR [rsp+0x270]
  41820c:	mov    QWORD PTR [rsp+0x260],rdx
  418214:	mov    QWORD PTR [rsp+0x268],rax
  41821c:	mov    QWORD PTR [rsp+0x170],r9
  418224:	mov    QWORD PTR [rsp+0x168],rax
  41822c:	mov    BYTE PTR [rsp+0x170],r8b
  418234:	mov    BYTE PTR [rsp+0x171],cl
  41823b:	mov    QWORD PTR [r13+0x10],rax
  41823f:	mov    rax,QWORD PTR [rsp+0x170]
  418247:	mov    QWORD PTR [rsp+0x160],rdx
  41824f:	mov    QWORD PTR [r13+0x8],rdx
  418253:	mov    BYTE PTR [rsp+0xc6],0x0
  41825b:	mov    QWORD PTR [r13+0x18],rax
  41825f:	jmp    0x416de0
  418264:	mov    rdx,r14
  418267:	mov    rcx,rsi
  41826a:	call   0x415530
  41826f:	jmp    0x4172c2
  418274:	call   0x449548
  418279:	nop    DWORD PTR [rax+0x0]
  418280:	mov    BYTE PTR [rsp+0x190],sil
  418288:	mov    BYTE PTR [rsp+0x191],al
  41828f:	not    rdi
  418292:	mov    rax,QWORD PTR [rsp+0x190]
  41829a:	not    rbx
  41829d:	mov    QWORD PTR [rsp+0x110],rdi
  4182a5:	mov    QWORD PTR [rsp+0x118],rbx
  4182ad:	mov    rdx,QWORD PTR [rsp+0x70]
  4182b2:	xor    ebp,ebp
  4182b4:	mov    rcx,QWORD PTR [rsp+0x68]
  4182b9:	mov    QWORD PTR [rsp+0x120],rax
  4182c1:	mov    r8,QWORD PTR [r15+0x470]
  4182c8:	call   0x414df0
  4182cd:	mov    rdi,QWORD PTR [rsp+0x130]
  4182d5:	mov    rbx,QWORD PTR [rsp+0x138]
  4182dd:	mov    rsi,QWORD PTR [rsp+0x140]
  4182e5:	mov    QWORD PTR [rsp+0x180],rdi
  4182ed:	mov    QWORD PTR [rsp+0x188],rbx
  4182f5:	mov    QWORD PTR [rsp+0x190],rsi
  4182fd:	jmp    0x41749b
  418302:	mov    eax,DWORD PTR [rsp+0x48]
  418306:	lea    ecx,[rax-0x1]
  418309:	mov    rax,r10
  41830c:	shr    rax,cl
  41830f:	and    eax,0x1
  418312:	xor    rax,0x1
  418316:	and    eax,0x1
  418319:	jmp    0x4176a2
  41831e:	mov    eax,DWORD PTR [rsp+0x48]
  418322:	mov    BYTE PTR [rsp+0xb0],0x0
  41832a:	lea    ecx,[rax-0x1]
  41832d:	mov    rax,r8
  418330:	shr    rax,cl
  418333:	and    eax,0x1
  418336:	xor    rax,0x1
  41833a:	and    eax,0x1
  41833d:	test   al,al
  41833f:	jne    0x417669
  418345:	movzx  eax,BYTE PTR [rsp+0xa0]
  41834d:	mov    BYTE PTR [rsp+0x210],0x0
  418355:	mov    QWORD PTR [rsp+0x118],r8
  41835d:	mov    rdx,QWORD PTR [rsp+0x70]
  418362:	mov    r8,QWORD PTR [rsp+0x48]
  418367:	mov    rcx,QWORD PTR [rsp+0x68]
  41836c:	mov    QWORD PTR [rsp+0xb8],r10
  418374:	mov    QWORD PTR [rsp+0x98],r9
  41837c:	mov    BYTE PTR [rsp+0x211],al
  418383:	mov    rax,QWORD PTR [rsp+0x210]
  41838b:	mov    QWORD PTR [rsp+0x110],r11
  418393:	mov    QWORD PTR [rsp+0x120],rax
  41839b:	call   0x414e50
  4183a0:	mov    rax,QWORD PTR [rsp+0x140]
  4183a8:	mov    rsi,QWORD PTR [rsp+0x130]
  4183b0:	mov    rdi,QWORD PTR [rsp+0x138]
  4183b8:	mov    BYTE PTR [rsp+0xb0],0x1
  4183c0:	mov    r10,QWORD PTR [rsp+0xb8]
  4183c8:	mov    r9,QWORD PTR [rsp+0x98]
  4183d0:	mov    QWORD PTR [rsp+0x210],rax
  4183d8:	mov    r12d,eax
  4183db:	shr    ax,0x8
  4183df:	mov    QWORD PTR [rsp+0x200],rsi
  4183e7:	mov    QWORD PTR [rsp+0x208],rdi
  4183ef:	mov    WORD PTR [rsp+0xa0],ax
  4183f7:	jmp    0x417669
  4183fc:	nop    DWORD PTR [rax+0x0]
  418400:	mov    BYTE PTR [rsp+0x190],sil
  418408:	mov    BYTE PTR [rsp+0x191],al
  41840f:	mov    rax,QWORD PTR [rsp+0x190]
  418417:	mov    QWORD PTR [rsp+0x110],rdi
  41841f:	mov    QWORD PTR [rsp+0x118],rbx
  418427:	mov    rdx,QWORD PTR [rsp+0x70]
  41842c:	mov    rcx,QWORD PTR [rsp+0x68]
  418431:	mov    QWORD PTR [rsp+0x120],rax
  418439:	mov    r8,QWORD PTR [r15+0x470]
  418440:	call   0x414e50
  418445:	mov    rbp,QWORD PTR [rsp+0x140]
  41844d:	mov    rdi,QWORD PTR [rsp+0x130]
  418455:	mov    rbx,QWORD PTR [rsp+0x138]
  41845d:	mov    QWORD PTR [rsp+0x190],rbp
  418465:	mov    esi,ebp
  418467:	mov    QWORD PTR [rsp+0x180],rdi
  41846f:	mov    QWORD PTR [rsp+0x188],rbx
  418477:	shr    bp,0x8
  41847b:	jmp    0x41749b
  418480:	xor    ebp,ebp
  418482:	cmp    BYTE PTR [r15+0x429],0x0
  41848a:	je     0x41749b
  418490:	mov    ecx,DWORD PTR [r15+0x1c]
  418494:	test   ecx,ecx
  418496:	jne    0x41749b
  41849c:	lea    r8,[rip+0x37cdd]        # 0x450180
  4184a3:	mov    edx,0x6
  4184a8:	mov    rcx,r15
  4184ab:	call   0x414b90
  4184b0:	jmp    0x41749b
  4184b5:	lea    eax,[r14-0x1]
  4184b9:	mov    BYTE PTR [rsp+0x48],0x0
  4184be:	bt     rbx,rax
  4184c2:	jb     0x41875f
  4184c8:	mov    ecx,eax
  4184ca:	mov    rdx,r9
  4184cd:	shr    rdx,cl
  4184d0:	mov    rax,rdx
  4184d3:	and    eax,0x1
  4184d6:	xor    rax,0x1
  4184da:	and    eax,0x1
  4184dd:	jmp    0x417fdd
  4184e2:	movzx  esi,BYTE PTR [rsp+0xb8]
  4184ea:	xor    eax,eax
  4184ec:	test   sil,sil
  4184ef:	jne    0x41853c
  4184f1:	cmp    BYTE PTR [rsp+0xc8],0x0
  4184f9:	jne    0x418697
  4184ff:	cmp    QWORD PTR [rsp+0x48],0x40
  418505:	ja     0x418683
  41850b:	mov    ecx,DWORD PTR [rsp+0x48]
  41850f:	mov    rdx,rbx
  418512:	sub    ecx,0x1
  418515:	shr    rdx,cl
  418518:	and    edx,0x1
  41851b:	xor    rdx,0x1
  41851f:	and    edx,0x1
  418522:	movzx  ecx,BYTE PTR [rsp+0xc8]
  41852a:	xor    eax,eax
  41852c:	xor    ecx,0x1
  41852f:	cmp    cl,dl
  418531:	je     0x41853c
  418533:	mov    rax,rbx
  418536:	or     rax,rbp
  418539:	setne  al
  41853c:	mov    r11d,esi
  41853f:	mov    rdi,rbx
  418542:	mov    rsi,rbp
  418545:	jmp    0x417c3b
  41854a:	nop    WORD PTR [rax+rax*1+0x0]
  418550:	mov    rdx,r11
  418553:	mov    rcx,r9
  418556:	or     rdx,r10
  418559:	or     rcx,r8
  41855c:	jmp    0x417549
  418561:	xor    edx,edx
  418563:	test   al,al
  418565:	je     0x417428
  41856b:	cmp    rbp,rdi
  41856e:	setne  dl
  418571:	cmp    rsi,rbx
  418574:	setne  al
  418577:	or     eax,edx
  418579:	movzx  edx,al
  41857c:	jmp    0x417428
  418581:	mov    BYTE PTR [rsp+0x210],r11b
  418589:	mov    BYTE PTR [rsp+0x211],0x0
  418591:	mov    r8,QWORD PTR [rsp+0x48]
  418596:	mov    rax,QWORD PTR [rsp+0x210]
  41859e:	mov    rdx,QWORD PTR [rsp+0x70]
  4185a3:	mov    rcx,QWORD PTR [rsp+0x68]
  4185a8:	mov    QWORD PTR [rsp+0x110],rsi
  4185b0:	mov    QWORD PTR [rsp+0x118],rdi
  4185b8:	mov    QWORD PTR [rsp+0x120],rax
  4185c0:	call   0x414e50
  4185c5:	mov    rax,QWORD PTR [rsp+0x140]
  4185cd:	mov    rsi,QWORD PTR [rsp+0x130]
  4185d5:	mov    rdi,QWORD PTR [rsp+0x138]
  4185dd:	mov    QWORD PTR [rsp+0x210],rax
  4185e5:	mov    r11d,eax
  4185e8:	mov    QWORD PTR [rsp+0x200],rsi
  4185f0:	mov    QWORD PTR [rsp+0x208],rdi
  4185f8:	shr    ax,0x8
  4185fc:	jmp    0x417c3b
  418601:	lea    rcx,[rax-0x1]
  418605:	mov    r11,rcx
  418608:	jmp    0x417764
  41860d:	nop    DWORD PTR [rax]
  418610:	cmp    rbp,rdi
  418613:	mov    QWORD PTR [r13-0x20],0x0
  41861b:	sete   al
  41861e:	xor    edx,edx
  418620:	cmp    rsi,rbx
  418623:	sete   dl
  418626:	and    rdx,rax
  418629:	mov    QWORD PTR [r13-0x18],rdx
  41862d:	jmp    0x417043
  418632:	cmp    BYTE PTR [r15+0x437],0x0
  41863a:	jne    0x4188c8
  418640:	cmp    BYTE PTR [r15+0x423],0x0
  418648:	je     0x4181cb
  41864e:	lea    rax,[rip+0x379b3]        # 0x450008
  418655:	mov    r8d,DWORD PTR [rsp+0x64]
  41865a:	xor    r9d,r9d
  41865d:	mov    edx,0x1
  418662:	mov    rcx,r15
  418665:	mov    QWORD PTR [rsp+0x20],rax
  41866a:	call   0x414c80
  41866f:	jmp    0x4181cb
  418674:	mov    r8d,0x1
  41867a:	xor    ecx,ecx
  41867c:	xor    edx,edx
  41867e:	jmp    0x4181f5
  418683:	mov    rdx,QWORD PTR [rsp+0x48]
  418688:	mov    rcx,rbp
  41868b:	call   0x415530
  418690:	mov    edx,eax
  418692:	jmp    0x418522
  418697:	mov    BYTE PTR [rsp+0x250],0x0
  41869f:	mov    BYTE PTR [rsp+0x251],0x0
  4186a7:	mov    r8,QWORD PTR [rsp+0x48]
  4186ac:	mov    rax,QWORD PTR [rsp+0x250]
  4186b4:	mov    rdx,QWORD PTR [rsp+0x70]
  4186b9:	mov    rcx,QWORD PTR [rsp+0x68]
  4186be:	mov    QWORD PTR [rsp+0x240],rbp
  4186c6:	mov    QWORD PTR [rsp+0x248],rbx
  4186ce:	mov    QWORD PTR [rsp+0x110],rbp
  4186d6:	mov    QWORD PTR [rsp+0x118],rbx
  4186de:	mov    QWORD PTR [rsp+0x120],rax
  4186e6:	call   0x414e50
  4186eb:	mov    r11,QWORD PTR [rsp+0x140]
  4186f3:	mov    rbp,QWORD PTR [rsp+0x130]
  4186fb:	mov    rbx,QWORD PTR [rsp+0x138]
  418703:	mov    QWORD PTR [rsp+0x240],rbp
  41870b:	mov    QWORD PTR [rsp+0x250],r11
  418713:	mov    esi,r11d
  418716:	mov    QWORD PTR [rsp+0x248],rbx
  41871e:	jmp    0x4184ff
  418723:	cmp    rax,rdx
  418726:	sete   al
  418729:	xor    r8d,r8d
  41872c:	xor    ecx,ecx
  41872e:	movzx  eax,al
  418731:	xor    edx,edx
  418733:	jmp    0x4181f5
  418738:	mov    rax,QWORD PTR [rax]
  41873b:	lea    rsi,[rip+0x37a84]        # 0x4501c6
  418742:	xor    r9d,r9d
  418745:	mov    edx,0x3
  41874a:	mov    rcx,r15
  41874d:	mov    QWORD PTR [rsp+0x20],rsi
  418752:	mov    r8d,DWORD PTR [rax]
  418755:	call   0x414c40
  41875a:	jmp    0x4177b4
  41875f:	mov    BYTE PTR [rsp+0x1b0],0x0
  418767:	mov    rdx,QWORD PTR [rsp+0x1b0]
  41876f:	mov    r8,r14
  418772:	mov    rcx,QWORD PTR [rsp+0x68]
  418777:	mov    QWORD PTR [rsp+0x98],r9
  41877f:	mov    DWORD PTR [rsp+0x90],eax
  418786:	mov    QWORD PTR [rsp+0x110],rsi
  41878e:	mov    QWORD PTR [rsp+0x120],rdx
  418796:	mov    rdx,QWORD PTR [rsp+0x70]
  41879b:	mov    QWORD PTR [rsp+0x118],rbx
  4187a3:	call   0x414e50
  4187a8:	mov    rsi,QWORD PTR [rsp+0x130]
  4187b0:	mov    rbx,QWORD PTR [rsp+0x138]
  4187b8:	mov    rdx,QWORD PTR [rsp+0x140]
  4187c0:	mov    BYTE PTR [rsp+0x48],0x1
  4187c5:	mov    eax,DWORD PTR [rsp+0x90]
  4187cc:	mov    r9,QWORD PTR [rsp+0x98]
  4187d4:	mov    QWORD PTR [rsp+0x1a0],rsi
  4187dc:	mov    QWORD PTR [rsp+0x1a8],rbx
  4187e4:	mov    QWORD PTR [rsp+0x1b0],rdx
  4187ec:	jmp    0x4184c8
  4187f1:	mov    BYTE PTR [rsp+0x1b0],0x0
  4187f9:	mov    rdx,QWORD PTR [rsp+0x70]
  4187fe:	mov    r8,r14
  418801:	mov    rax,QWORD PTR [rsp+0x1b0]
  418809:	mov    rcx,QWORD PTR [rsp+0x68]
  41880e:	mov    QWORD PTR [rsp+0x90],r9
  418816:	mov    QWORD PTR [rsp+0x110],rsi
  41881e:	mov    QWORD PTR [rsp+0x118],rbx
  418826:	mov    QWORD PTR [rsp+0x120],rax
  41882e:	call   0x414e50
  418833:	mov    rsi,QWORD PTR [rsp+0x130]
  41883b:	mov    rbx,QWORD PTR [rsp+0x138]
  418843:	mov    rax,QWORD PTR [rsp+0x140]
  41884b:	mov    BYTE PTR [rsp+0x48],0x1
  418850:	mov    r9,QWORD PTR [rsp+0x90]
  418858:	mov    QWORD PTR [rsp+0x1a0],rsi
  418860:	mov    QWORD PTR [rsp+0x1a8],rbx
  418868:	mov    QWORD PTR [rsp+0x1b0],rax
  418870:	jmp    0x417fc2
  418875:	test   ah,0x20
  418878:	je     0x4188ee
  41887a:	lea    rax,[rip+0x37697]        # 0x44ff18
  418881:	mov    r8d,DWORD PTR [rsp+0x64]
  418886:	xor    r9d,r9d
  418889:	mov    edx,0x3
  41888e:	mov    rcx,r15
  418891:	mov    QWORD PTR [rsp+0x20],rax
  418896:	call   0x414c40
  41889b:	jmp    0x41811a
  4188a0:	lea    r8,[rip+0x37611]        # 0x44feb8
  4188a7:	mov    edx,0x3
  4188ac:	mov    rcx,r15
  4188af:	call   0x414b60
  4188b4:	mov    eax,DWORD PTR [rsp+0x15c]
  4188bb:	jmp    0x4180e9
  4188c0:	xor    r12d,r12d
  4188c3:	jmp    0x417912
  4188c8:	lea    rax,[rip+0x37719]        # 0x44ffe8
  4188cf:	mov    r8d,DWORD PTR [rsp+0x64]
  4188d4:	xor    r9d,r9d
  4188d7:	mov    edx,0x2
  4188dc:	mov    rcx,r15
  4188df:	mov    QWORD PTR [rsp+0x20],rax
  4188e4:	call   0x414c40
  4188e9:	jmp    0x4181cb
  4188ee:	mov    r8,QWORD PTR [rsp+0x58]
  4188f3:	lea    rcx,[rsp+0x160]
  4188fb:	mov    r9d,eax
  4188fe:	mov    rdx,r15
  418901:	call   0x416820
  418906:	mov    rdx,QWORD PTR [rsp+0x160]
  41890e:	mov    rax,QWORD PTR [rsp+0x168]
  418916:	movzx  r8d,BYTE PTR [rsp+0x170]
  41891f:	movzx  ecx,BYTE PTR [rsp+0x171]
  418927:	jmp    0x418224
  41892c:	mov    rax,QWORD PTR [rax]
  41892f:	mov    r8d,DWORD PTR [rsp+0x64]
  418934:	xor    r9d,r9d
  418937:	mov    edx,0xd
  41893c:	mov    rcx,r15
  41893f:	mov    QWORD PTR [rsp+0x28],rax
  418944:	lea    rax,[rip+0x37687]        # 0x44ffd2
  41894b:	mov    QWORD PTR [rsp+0x20],rax
  418950:	call   0x414c80
  418955:	jmp    0x41811a
  41895a:	lea    rcx,[rsp+0x160]
  418962:	mov    r8d,0x1
  418968:	mov    rdx,r15
  41896b:	call   0x414f90
  418970:	mov    rdx,QWORD PTR [rsp+0x160]
  418978:	mov    rax,QWORD PTR [rsp+0x168]
  418980:	movzx  r8d,BYTE PTR [rsp+0x170]
  418989:	movzx  ecx,BYTE PTR [rsp+0x171]
  418991:	jmp    0x418224
  418996:	lea    rax,[rip+0x378a9]        # 0x450246
  41899d:	mov    r8d,DWORD PTR [rsp+0x64]
  4189a2:	xor    r9d,r9d
  4189a5:	mov    edx,0x3
  4189aa:	mov    rcx,r15
  4189ad:	mov    QWORD PTR [rsp+0x20],rax
  4189b2:	call   0x414c40
  4189b7:	xor    eax,eax
  4189b9:	jmp    0x4177b6
  4189be:	movabs rdx,0xffffffff00000000
  4189c8:	mov    BYTE PTR [rsp+0x270],0x0
  4189d0:	mov    BYTE PTR [rsp+0x271],0x0
  4189d8:	or     rax,rdx
  4189db:	mov    QWORD PTR [rsp+0x110],0xffffffffffffffff
  4189e7:	mov    rdx,QWORD PTR [rsp+0x70]
  4189ec:	mov    QWORD PTR [rsp+0x118],rax
  4189f4:	mov    QWORD PTR [rsp+0x268],rax
  4189fc:	mov    rax,QWORD PTR [rsp+0x270]
  418a04:	mov    rcx,QWORD PTR [rsp+0x68]
  418a09:	mov    QWORD PTR [rsp+0x260],0xffffffffffffffff
  418a15:	mov    QWORD PTR [rsp+0x120],rax
  418a1d:	mov    r8,QWORD PTR [r15+0x470]
  418a24:	call   0x414df0
  418a29:	mov    rcx,QWORD PTR [rsp+0x140]
  418a31:	mov    ebx,DWORD PTR [rsp+0x240]
  418a38:	mov    rdx,QWORD PTR [rsp+0x130]
  418a40:	mov    rax,QWORD PTR [rsp+0x138]
  418a48:	mov    QWORD PTR [rsp+0x270],rcx
  418a50:	shr    cx,0x8
  418a54:	test   ebx,ebx
  418a56:	setne  r8b
  418a5a:	jmp    0x4181f5
  418a5f:	mov    rax,QWORD PTR [r14+0x8]
  418a63:	or     rax,QWORD PTR [r14+0x10]
  418a67:	setne  al
  418a6a:	jmp    0x4177b6
  418a6f:	add    BYTE PTR [r15+0x18],0x1
  418a74:	mov    rcx,r15
  418a77:	mov    rsi,QWORD PTR [r15+0x88]
  418a7e:	call   0x40ec60
  418a83:	mov    rbx,rax
  418a86:	movzx  eax,BYTE PTR [rax+0x4]
  418a8a:	cmp    al,0x14
  418a8c:	je     0x418c24
  418a92:	cmp    al,0x35
  418a94:	jne    0x418b91
  418a9a:	mov    rbx,QWORD PTR [rbx+0x8]
  418a9e:	test   rbx,rbx
  418aa1:	je     0x418bab
  418aa7:	cmp    rsi,QWORD PTR [r15+0x88]
  418aae:	je     0x418acb
  418ab0:	cmp    BYTE PTR [r15+0x437],0x0
  418ab8:	je     0x418acb
  418aba:	lea    r8,[rip+0x374e7]        # 0x44ffa8
  418ac1:	xor    edx,edx
  418ac3:	mov    rcx,r15
  418ac6:	call   0x414b60
  418acb:	movzx  eax,BYTE PTR [rbx+0x18]
  418acf:	and    eax,0x3f
  418ad2:	cmp    al,0x1
  418ad4:	movzx  eax,WORD PTR [rbx+0x18]
  418ad8:	je     0x418bb4
  418ade:	shr    ax,0x6
  418ae2:	test   al,0x80
  418ae4:	jne    0x418b1f
  418ae6:	movzx  ecx,WORD PTR [rbx+0x18]
  418aea:	mov    edx,eax
  418aec:	or     dl,0x80
  418aef:	shl    edx,0x6
  418af2:	and    ecx,0x3f
  418af5:	or     edx,ecx
  418af7:	mov    WORD PTR [rbx+0x18],dx
  418afb:	and    edx,0x3f
  418afe:	cmp    dl,0x1
  418b01:	je     0x418c68
  418b07:	mov    rax,QWORD PTR [r15+0x3d8]
  418b0e:	test   rax,rax
  418b11:	je     0x418b1f
  418b13:	mov    edx,DWORD PTR [r15+0x30]
  418b17:	mov    r8,rbx
  418b1a:	mov    rcx,r15
  418b1d:	call   rax
  418b1f:	sub    BYTE PTR [r15+0x18],0x1
  418b24:	mov    QWORD PTR [r15+0x198],rbx
  418b2b:	xor    eax,eax
  418b2d:	movzx  edx,BYTE PTR [rbx+0x18]
  418b31:	and    edx,0x3f
  418b34:	cmp    dl,0x1
  418b37:	jne    0x418b47
  418b39:	movzx  eax,WORD PTR [rbx+0x18]
  418b3d:	shr    ax,0xe
  418b41:	xor    eax,0x1
  418b44:	and    eax,0x1
  418b47:	xor    ecx,ecx
  418b49:	xor    r8d,r8d
  418b4c:	xor    edx,edx
  418b4e:	jmp    0x418224
  418b53:	lea    rax,[rip+0x3750e]        # 0x450068
  418b5a:	mov    r8d,DWORD PTR [rsp+0x64]
  418b5f:	xor    r9d,r9d
  418b62:	mov    dl,0x3
  418b64:	mov    rcx,r15
  418b67:	mov    QWORD PTR [rsp+0x20],rax
  418b6c:	call   0x414c40
  418b71:	xor    eax,eax
  418b73:	jmp    0x4177b6
  418b78:	lea    r8,[rip+0x376ad]        # 0x45022c
  418b7f:	mov    edx,0x3
  418b84:	mov    rcx,r15
  418b87:	call   0x414b60
  418b8c:	jmp    0x4177b4
  418b91:	lea    r8,[rip+0x373b0]        # 0x44ff48
  418b98:	mov    edx,0x3
  418b9d:	mov    rcx,r15
  418ba0:	call   0x414b60
  418ba5:	test   BYTE PTR [rbx+0x6],0x10
  418ba9:	jne    0x418bd1
  418bab:	sub    BYTE PTR [r15+0x18],0x1
  418bb0:	xor    eax,eax
  418bb2:	jmp    0x418b47
  418bb4:	shr    ax,0x6
  418bb8:	test   al,0x4
  418bba:	jne    0x418ae2
  418bc0:	mov    rax,QWORD PTR [rbx+0x20]
  418bc4:	or     BYTE PTR [rax+0x1c],0x8
  418bc8:	movzx  eax,WORD PTR [rbx+0x18]
  418bcc:	jmp    0x418ade
  418bd1:	movzx  eax,BYTE PTR [rbx+0x4]
  418bd5:	mov    rdx,QWORD PTR [rsp+0x88]
  418bdd:	xor    r11d,r11d
  418be0:	mov    rcx,r15
  418be3:	mov    WORD PTR [rsp+0x266],r11w
  418bec:	mov    BYTE PTR [rsp+0x264],al
  418bf3:	call   0x41f080
  418bf8:	mov    rdx,rbx
  418bfb:	mov    rcx,r15
  418bfe:	mov    rsi,rax
  418c01:	call   0x41f080
  418c06:	lea    r8,[rip+0x3736b]        # 0x44ff78
  418c0d:	mov    r9,rax
  418c10:	mov    QWORD PTR [rsp+0x20],rsi
  418c15:	mov    edx,0x3
  418c1a:	mov    rcx,r15
  418c1d:	call   0x414b60
  418c22:	jmp    0x418bab
  418c24:	mov    rcx,r15
  418c27:	call   0x40ec60
  418c2c:	cmp    BYTE PTR [rax+0x4],0x35
  418c30:	mov    rbx,rax
  418c33:	jne    0x418b91
  418c39:	mov    rcx,r15
  418c3c:	mov    rbx,QWORD PTR [rax+0x8]
  418c40:	call   0x40ec60
  418c45:	cmp    BYTE PTR [rax+0x4],0x15
  418c49:	je     0x418a9e
  418c4f:	lea    r8,[rip+0x37622]        # 0x450278
  418c56:	mov    edx,0x3
  418c5b:	mov    rcx,r15
  418c5e:	call   0x414b60
  418c63:	jmp    0x418bab
  418c68:	test   al,0x4
  418c6a:	je     0x418c80
  418c6c:	mov    rax,QWORD PTR [r15+0x3f0]
  418c73:	test   rax,rax
  418c76:	je     0x418c80
  418c78:	mov    rdx,rbx
  418c7b:	mov    rcx,r15
  418c7e:	call   rax
  418c80:	mov    rax,QWORD PTR [r15+0x3d0]
  418c87:	test   rax,rax
  418c8a:	jne    0x418b13
  418c90:	jmp    0x418b1f
  418c95:	nop
  418c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ca0:	cmp    BYTE PTR [rdx+0x10],0x0
  418ca4:	mov    r9,QWORD PTR [rdx]
  418ca7:	mov    rax,rcx
  418caa:	mov    r10,QWORD PTR [rdx+0x8]
  418cae:	jne    0x418ce2
  418cb0:	cmp    r8,0x40
  418cb4:	jbe    0x418d00
  418cb6:	sub    r8,0x40
  418cba:	cmp    r8,0x3f
  418cbe:	ja     0x418ce2
  418cc0:	lea    ecx,[r8-0x1]
  418cc4:	bt     r9,rcx
  418cc8:	jae    0x418ce2
  418cca:	mov    ecx,0x40
  418ccf:	sub    ecx,r8d
  418cd2:	mov    r8,0xffffffffffffffff
  418cd9:	shr    r8,cl
  418cdc:	not    r8
  418cdf:	or     r9,r8
  418ce2:	mov    QWORD PTR [rdx],r9
  418ce5:	mov    QWORD PTR [rdx+0x8],r10
  418ce9:	mov    rdx,QWORD PTR [rdx+0x10]
  418ced:	mov    QWORD PTR [rax],r9
  418cf0:	mov    QWORD PTR [rax+0x8],r10
  418cf4:	mov    QWORD PTR [rax+0x10],rdx
  418cf8:	ret    
  418cf9:	nop    DWORD PTR [rax+0x0]
  418d00:	lea    ecx,[r8-0x1]
  418d04:	bt     r10,rcx
  418d08:	jae    0x418ce2
  418d0a:	cmp    r8,0x40
  418d0e:	mov    r9,0xffffffffffffffff
  418d15:	je     0x418ce2
  418d17:	mov    ecx,0x40
  418d1c:	mov    r11,r9
  418d1f:	sub    ecx,r8d
  418d22:	shr    r11,cl
  418d25:	mov    rcx,r11
  418d28:	not    rcx
  418d2b:	or     r10,rcx
  418d2e:	jmp    0x418ce2
  418d30:	cmp    QWORD PTR [rcx+0x8],0x0
  418d35:	mov    rax,QWORD PTR [rcx+0x18]
  418d39:	je     0x418d43
  418d3b:	mov    rcx,QWORD PTR [rax]
  418d3e:	jmp    0x4391e0
  418d43:	mov    rcx,QWORD PTR [rax+0x8]
  418d47:	jmp    0x4391e0
  418d4c:	nop    DWORD PTR [rax+0x0]
  418d50:	push   rsi
  418d51:	push   rbx
  418d52:	sub    rsp,0x28
  418d56:	mov    rax,QWORD PTR [rcx]
  418d59:	cmp    QWORD PTR [rax+0x8],0x0
  418d5e:	je     0x418d74
  418d60:	mov    rbx,QWORD PTR [rax+0x18]
  418d64:	cmp    BYTE PTR [rbx+0x8a],0x0
  418d6b:	jne    0x418d74
  418d6d:	cmp    QWORD PTR [rbx+0x38],0x0
  418d72:	je     0x418d80
  418d74:	mov    eax,0x1
  418d79:	add    rsp,0x28
  418d7d:	pop    rbx
  418d7e:	pop    rsi
  418d7f:	ret    
  418d80:	cmp    WORD PTR [rbx+0x88],0x1
  418d88:	jne    0x418d74
  418d8a:	cmp    BYTE PTR [rbx+0x8c],0x0
  418d91:	jne    0x418d74
  418d93:	mov    rsi,rdx
  418d96:	mov    rdx,QWORD PTR [rdx]
  418d99:	test   rdx,rdx
  418d9c:	je     0x418db8
  418d9e:	mov    rax,QWORD PTR [rsi+0x8]
  418da2:	lea    rcx,[rax+0x1]
  418da6:	shl    rax,0x3
  418daa:	mov    QWORD PTR [rsi+0x8],rcx
  418dae:	mov    rcx,QWORD PTR [rbx+0x8]
  418db2:	mov    QWORD PTR [rdx+rax*1],rcx
  418db6:	jmp    0x418d74
  418db8:	mov    rcx,QWORD PTR [rsi+0x8]
  418dbc:	mov    edx,0x8
  418dc1:	call   0x43bb20
  418dc6:	mov    ecx,0x1
  418dcb:	mov    QWORD PTR [rsi],rax
  418dce:	mov    rdx,rax
  418dd1:	xor    eax,eax
  418dd3:	jmp    0x418daa
  418dd5:	nop
  418dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418de0:	sub    rsp,0x28
  418de4:	call   0x438360
  418de9:	test   eax,eax
  418deb:	sete   al
  418dee:	movzx  eax,al
  418df1:	add    rsp,0x28
  418df5:	ret    
  418df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e00:	sub    rsp,0x28
  418e04:	cmp    QWORD PTR [rcx+0x8],0x0
  418e09:	mov    rax,QWORD PTR [rcx+0x18]
  418e0d:	je     0x418e24
  418e0f:	mov    rcx,QWORD PTR [rax]
  418e12:	call   0x438360
  418e17:	test   eax,eax
  418e19:	sete   al
  418e1c:	movzx  eax,al
  418e1f:	add    rsp,0x28
  418e23:	ret    
  418e24:	mov    rcx,QWORD PTR [rax+0x8]
  418e28:	jmp    0x418e12
  418e2a:	nop    WORD PTR [rax+rax*1+0x0]
  418e30:	push   rbx
  418e31:	sub    rsp,0x20
  418e35:	mov    rax,QWORD PTR [rcx+0x120]
  418e3c:	mov    edx,DWORD PTR [rax]
  418e3e:	cmp    edx,0x7f
  418e41:	je     0x418e60
  418e43:	lea    ecx,[rdx+0x1]
  418e46:	shl    rdx,0x5
  418e4a:	mov    DWORD PTR [rax],ecx
  418e4c:	lea    rax,[rax+rdx*1+0x10]
  418e51:	add    rsp,0x20
  418e55:	pop    rbx
  418e56:	ret    
  418e57:	nop    WORD PTR [rax+rax*1+0x0]
  418e60:	mov    rbx,rcx
  418e63:	mov    ecx,0xff0
  418e68:	call   0x43baf0
  418e6d:	mov    rdx,QWORD PTR [rbx+0x120]
  418e74:	mov    DWORD PTR [rax],0x0
  418e7a:	mov    ecx,0x1
  418e7f:	mov    QWORD PTR [rbx+0x120],rax
  418e86:	mov    QWORD PTR [rax+0x8],rdx
  418e8a:	xor    edx,edx
  418e8c:	jmp    0x418e46
  418e8e:	xchg   ax,ax
  418e90:	push   r12
  418e92:	push   rbp
  418e93:	push   rdi
  418e94:	push   rsi
  418e95:	push   rbx
  418e96:	sub    rsp,0x20
  418e9a:	mov    rdi,rcx
  418e9d:	mov    rcx,rdx
  418ea0:	mov    rsi,rdx
  418ea3:	mov    r12d,r8d
  418ea6:	call   0x4391e0
  418eab:	mov    rcx,QWORD PTR [rdi+0x118]
  418eb2:	mov    r9d,0x1
  418eb8:	mov    r8d,eax
  418ebb:	mov    rdx,rsi
  418ebe:	call   0x438e20
  418ec3:	mov    r9,QWORD PTR [rax]
  418ec6:	mov    rbp,rax
  418ec9:	test   r9,r9
  418ecc:	jne    0x418ed8
  418ece:	jmp    0x418ef0
  418ed0:	mov    r9,QWORD PTR [r9]
  418ed3:	test   r9,r9
  418ed6:	je     0x418ef0
  418ed8:	cmp    QWORD PTR [r9+0x8],0x0
  418edd:	jne    0x418ed0
  418edf:	mov    rax,QWORD PTR [r9+0x18]
  418ee3:	add    rsp,0x20
  418ee7:	pop    rbx
  418ee8:	pop    rsi
  418ee9:	pop    rdi
  418eea:	pop    rbp
  418eeb:	pop    r12
  418eed:	ret    
  418eee:	xchg   ax,ax
  418ef0:	mov    edx,0x38
  418ef5:	mov    ecx,0x1
  418efa:	call   0x43bb20
  418eff:	mov    rbx,rax
  418f02:	mov    rax,QWORD PTR [rdi+0xb8]
  418f09:	mov    rcx,rsi
  418f0c:	mov    QWORD PTR [rbx+0x8],rsi
  418f10:	mov    QWORD PTR [rbx],rax
  418f13:	call   0x4493c0
  418f18:	mov    rcx,rdi
  418f1b:	mov    DWORD PTR [rbx+0x10],eax
  418f1e:	mov    BYTE PTR [rbx+0x14],r12b
  418f22:	mov    QWORD PTR [rbx+0x28],0x0
  418f2a:	call   0x418e30
  418f2f:	mov    rdx,rax
  418f32:	mov    rax,QWORD PTR [rbp+0x0]
  418f36:	mov    QWORD PTR [rdx+0x8],0x0
  418f3e:	mov    QWORD PTR [rdx],rax
  418f41:	mov    rax,QWORD PTR [rdi+0x28]
  418f45:	mov    eax,DWORD PTR [rax+0x38]
  418f48:	mov    QWORD PTR [rdx+0x18],rbx
  418f4c:	mov    DWORD PTR [rdx+0x10],eax
  418f4f:	mov    rax,rbx
  418f52:	mov    QWORD PTR [rbp+0x0],rdx
  418f56:	add    rsp,0x20
  418f5a:	pop    rbx
  418f5b:	pop    rsi
  418f5c:	pop    rdi
  418f5d:	pop    rbp
  418f5e:	pop    r12
  418f60:	ret    
  418f61:	nop    DWORD PTR [rax+rax*1+0x0]
  418f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f70:	push   r14
  418f72:	push   r13
  418f74:	push   r12
  418f76:	push   rbp
  418f77:	push   rdi
  418f78:	push   rsi
  418f79:	push   rbx
  418f7a:	sub    rsp,0x20
  418f7e:	mov    ebx,ecx
  418f80:	mov    ecx,0x15
  418f85:	mov    r12,rdx
  418f88:	call   0x43baf0
  418f8d:	mov    r14,QWORD PTR [rip+0x41e9c]        # 0x45ae30
  418f94:	mov    rbp,rax
  418f97:	movzx  eax,bl
  418f9a:	mov    rdi,rbp
  418f9d:	test   WORD PTR [r14+rax*2],0xc00
  418fa4:	jne    0x418fce
  418fa6:	lea    rdi,[rbp+0x1]
  418faa:	mov    BYTE PTR [rbp+0x0],bl
  418fad:	mov    r13d,0x14
  418fb3:	mov    rcx,r12
  418fb6:	call   0x4494a0
  418fbb:	cmp    eax,0xffffffff
  418fbe:	mov    ebx,eax
  418fc0:	je     0x418fce
  418fc2:	movzx  eax,al
  418fc5:	test   WORD PTR [r14+rax*2],0xc00
  418fcc:	je     0x418ff0
  418fce:	mov    BYTE PTR [rdi],0x0
  418fd1:	mov    rdx,r12
  418fd4:	mov    ecx,ebx
  418fd6:	call   0x449368
  418fdb:	mov    rax,rbp
  418fde:	add    rsp,0x20
  418fe2:	pop    rbx
  418fe3:	pop    rsi
  418fe4:	pop    rdi
  418fe5:	pop    rbp
  418fe6:	pop    r12
  418fe8:	pop    r13
  418fea:	pop    r14
  418fec:	ret    
  418fed:	nop    DWORD PTR [rax]
  418ff0:	mov    rsi,rdi
  418ff3:	movsxd rax,r13d
  418ff6:	sub    rsi,rbp
  418ff9:	cmp    rsi,rax
  418ffc:	je     0x419010
  418ffe:	mov    r8,rdi
  419001:	lea    rdi,[r8+0x1]
  419005:	mov    BYTE PTR [r8],bl
  419008:	jmp    0x418fb3
  41900a:	nop    WORD PTR [rax+rax*1+0x0]
  419010:	add    r13d,r13d
  419013:	mov    rcx,rbp
  419016:	lea    edx,[r13+0x1]
  41901a:	movsxd rdx,edx
  41901d:	call   0x43bb70
  419022:	mov    rbp,rax
  419025:	lea    r8,[rax+rsi*1]
  419029:	jmp    0x419001
  41902b:	nop    DWORD PTR [rax+rax*1+0x0]
  419030:	mov    rdx,QWORD PTR [rdx]
  419033:	mov    rcx,QWORD PTR [rcx]
  419036:	jmp    0x4493e0
  41903b:	nop    DWORD PTR [rax+rax*1+0x0]
  419040:	push   rsi
  419041:	push   rbx
  419042:	sub    rsp,0x28
  419046:	mov    rbx,rcx
  419049:	mov    rcx,QWORD PTR [rcx+0x8]
  41904d:	cmp    BYTE PTR [rcx],0x0
  419050:	jne    0x4190e0
  419056:	mov    DWORD PTR [rbx+0x80],0x0
  419060:	xor    ecx,ecx
  419062:	lea    rdx,[rbx+0x48]
  419066:	call   QWORD PTR [rip+0x4b738]        # 0x4647a4
  41906c:	test   eax,eax
  41906e:	mov    rsi,QWORD PTR [rip+0x4b70f]        # 0x464784
  419075:	jne    0x4190af
  419077:	movzx  eax,WORD PTR [rbx+0x4e]
  41907b:	and    ax,0xf000
  41907f:	cmp    ax,0x4000
  419083:	je     0x4190a0
  419085:	mov    eax,0x1
  41908a:	mov    DWORD PTR [rbx+0x84],0x0
  419094:	add    rsp,0x28
  419098:	pop    rbx
  419099:	pop    rsi
  41909a:	ret    
  41909b:	nop    DWORD PTR [rax+rax*1+0x0]
  4190a0:	mov    rsi,QWORD PTR [rip+0x4b6dd]        # 0x464784
  4190a7:	call   rsi
  4190a9:	mov    DWORD PTR [rax],0x2
  4190af:	mov    ecx,DWORD PTR [rbx+0x80]
  4190b5:	call   0x4492f0
  4190ba:	mov    DWORD PTR [rbx+0x80],0xffffffff
  4190c4:	call   rsi
  4190c6:	mov    eax,DWORD PTR [rax]
  4190c8:	mov    DWORD PTR [rbx+0x84],eax
  4190ce:	xor    eax,eax
  4190d0:	add    rsp,0x28
  4190d4:	pop    rbx
  4190d5:	pop    rsi
  4190d6:	ret    
  4190d7:	nop    WORD PTR [rax+rax*1+0x0]
  4190e0:	mov    r8d,0x1b6
  4190e6:	mov    edx,0x8000
  4190eb:	call   0x449320
  4190f0:	cmp    eax,0xffffffff
  4190f3:	mov    ecx,eax
  4190f5:	mov    DWORD PTR [rbx+0x80],eax
  4190fb:	jne    0x419062
  419101:	mov    rsi,QWORD PTR [rip+0x4b67c]        # 0x464784
  419108:	call   rsi
  41910a:	cmp    DWORD PTR [rax],0xd
  41910d:	je     0x419120
  41910f:	call   rsi
  419111:	cmp    DWORD PTR [rax],0x14
  419114:	jne    0x4190c4
  419116:	jmp    0x419140
  419118:	nop    DWORD PTR [rax+rax*1+0x0]
  419120:	lea    rdx,[rbx+0x48]
  419124:	mov    rcx,QWORD PTR [rbx+0x8]
  419128:	call   QWORD PTR [rip+0x4b8d6]        # 0x464a04
  41912e:	test   eax,eax
  419130:	jne    0x419150
  419132:	movzx  eax,WORD PTR [rbx+0x4e]
  419136:	and    ax,0xf000
  41913a:	cmp    ax,0x4000
  41913e:	jne    0x419150
  419140:	call   rsi
  419142:	mov    DWORD PTR [rax],0x2
  419148:	jmp    0x4190c4
  41914d:	nop    DWORD PTR [rax]
  419150:	call   rsi
  419152:	mov    DWORD PTR [rax],0xd
  419158:	jmp    0x4190c4
  41915d:	nop    DWORD PTR [rax]
  419160:	push   r13
  419162:	push   r12
  419164:	push   rbp
  419165:	push   rdi
  419166:	push   rsi
  419167:	push   rbx
  419168:	sub    rsp,0x28
  41916c:	mov    rax,QWORD PTR [rcx+0x28]
  419170:	xor    esi,esi
  419172:	cmp    DWORD PTR [rax+0x3c],0x1
  419176:	jbe    0x419184
  419178:	mov    rax,QWORD PTR [rcx]
  41917b:	test   rax,rax
  41917e:	je     0x419184
  419180:	movzx  esi,BYTE PTR [rax+0x6d]
  419184:	cmp    BYTE PTR [rcx+0x1a],0x0
  419188:	mov    edi,DWORD PTR [rcx+0x468]
  41918e:	je     0x4191a0
  419190:	add    rsp,0x28
  419194:	pop    rbx
  419195:	pop    rsi
  419196:	pop    rdi
  419197:	pop    rbp
  419198:	pop    r12
  41919a:	pop    r13
  41919c:	ret    
  41919d:	nop    DWORD PTR [rax]
  4191a0:	mov    rbp,rdx
  4191a3:	mov    r12d,r8d
  4191a6:	mov    rbx,rcx
  4191a9:	mov    r13,QWORD PTR [rip+0x4b5d4]        # 0x464784
  4191b0:	call   r13
  4191b3:	mov    edx,DWORD PTR [rbp+0x84]
  4191b9:	mov    DWORD PTR [rax],edx
  4191bb:	xor    eax,eax
  4191bd:	or     esi,r12d
  4191c0:	setne  al
  4191c3:	cmp    edi,eax
  4191c5:	jle    0x4191f2
  4191c7:	cmp    BYTE PTR [rbx+0x46c],0x0
  4191ce:	jne    0x419220
  4191d0:	mov    r8,QWORD PTR [rbp+0x8]
  4191d4:	test   r8,r8
  4191d7:	je     0x419212
  4191d9:	mov    edx,0x6
  4191de:	mov    rcx,rbx
  4191e1:	add    rsp,0x28
  4191e5:	pop    rbx
  4191e6:	pop    rsi
  4191e7:	pop    rdi
  4191e8:	pop    rbp
  4191e9:	pop    r12
  4191eb:	pop    r13
  4191ed:	jmp    0x414da0
  4191f2:	mov    eax,DWORD PTR [rbx+0x468]
  4191f8:	test   eax,eax
  4191fa:	je     0x4191d0
  4191fc:	cmp    BYTE PTR [rbx+0x46f],0x0
  419203:	jne    0x4191d0
  419205:	mov    r8,QWORD PTR [rbp+0x8]
  419209:	test   r8,r8
  41920c:	je     0x419246
  41920e:	xor    edx,edx
  419210:	jmp    0x4191de
  419212:	mov    r8,QWORD PTR [rbp+0x0]
  419216:	jmp    0x4191d9
  419218:	nop    DWORD PTR [rax+rax*1+0x0]
  419220:	call   r13
  419223:	cmp    DWORD PTR [rax],0x2
  419226:	jne    0x4191d0
  419228:	mov    rcx,QWORD PTR [rbx+0x2a8]
  41922f:	mov    rdx,QWORD PTR [rbp+0x0]
  419233:	call   0x41f5e0
  419238:	cmp    BYTE PTR [rbx+0x46f],0x0
  41923f:	jne    0x4191d0
  419241:	jmp    0x419190
  419246:	mov    r8,QWORD PTR [rbp+0x0]
  41924a:	xor    edx,edx
  41924c:	jmp    0x4191de
  41924e:	xchg   ax,ax
  419250:	mov    r8d,0x20
  419256:	jmp    0x449458
  41925b:	nop    DWORD PTR [rax+rax*1+0x0]
  419260:	push   r12
  419262:	push   rbp
  419263:	push   rdi
  419264:	push   rsi
  419265:	push   rbx
  419266:	sub    rsp,0x20
  41926a:	mov    ebx,r8d
  41926d:	mov    r12,rdx
  419270:	mov    rdi,rcx
  419273:	call   0x4493c0
  419278:	lea    rcx,[rbx+rax*1+0x2]
  41927d:	mov    rbp,rax
  419280:	call   0x43baf0
  419285:	mov    rdx,QWORD PTR [r12]
  419289:	mov    r8,rbx
  41928c:	mov    rcx,rax
  41928f:	mov    rsi,rax
  419292:	call   0x449450
  419297:	test   rbx,rbx
  41929a:	je     0x4192b1
  41929c:	movzx  eax,BYTE PTR [rsi+rbx*1-0x1]
  4192a1:	cmp    al,0x5c
  4192a3:	je     0x4192b1
  4192a5:	cmp    al,0x2f
  4192a7:	je     0x4192b1
  4192a9:	mov    BYTE PTR [rsi+rbx*1],0x2f
  4192ad:	add    rbx,0x1
  4192b1:	lea    rcx,[rsi+rbx*1]
  4192b5:	lea    r8,[rbp+0x1]
  4192b9:	mov    rdx,rdi
  4192bc:	call   0x449450
  4192c1:	mov    rax,rsi
  4192c4:	add    rsp,0x20
  4192c8:	pop    rbx
  4192c9:	pop    rsi
  4192ca:	pop    rdi
  4192cb:	pop    rbp
  4192cc:	pop    r12
  4192ce:	ret    
  4192cf:	nop
  4192d0:	push   rbp
  4192d1:	push   r15
  4192d3:	push   r14
  4192d5:	push   r13
  4192d7:	push   r12
  4192d9:	push   rdi
  4192da:	push   rsi
  4192db:	push   rbx
  4192dc:	sub    rsp,0x48
  4192e0:	lea    rbp,[rsp+0x80]
  4192e8:	mov    ebx,DWORD PTR [rcx+0x10]
  4192eb:	mov    rdi,rcx
  4192ee:	lea    rax,[rbx+0x2a]
  4192f2:	shr    rax,0x4
  4192f6:	shl    rax,0x4
  4192fa:	call   0x43d410
  4192ff:	mov    rdx,QWORD PTR [rcx+0x8]
  419303:	sub    rsp,rax
  419306:	mov    r8,rbx
  419309:	lea    r9,[rsp+0x20]
  41930e:	mov    rcx,r9
  419311:	call   0x449450
  419316:	test   rbx,rbx
  419319:	mov    r9,rax
  41931c:	je     0x419334
  41931e:	movzx  eax,BYTE PTR [rax+rbx*1-0x1]
  419323:	cmp    al,0x5c
  419325:	je     0x419334
  419327:	cmp    al,0x2f
  419329:	je     0x419334
  41932b:	mov    BYTE PTR [r9+rbx*1],0x2f
  419330:	add    rbx,0x1
  419334:	movabs rax,0x672e726564616568
  41933e:	lea    rdx,[rip+0x3717b]        # 0x4504c0
  419345:	mov    BYTE PTR [r9+rbx*1+0xa],0x0
  41934b:	mov    QWORD PTR [r9+rbx*1],rax
  41934f:	mov    eax,0x6363
  419354:	mov    rcx,r9
  419357:	mov    WORD PTR [r9+rbx*1+0x8],ax
  41935d:	xor    r12d,r12d
  419360:	mov    r13d,0x8
  419366:	call   0x4384f0
  41936b:	mov    ecx,0x48
  419370:	mov    rbx,rax
  419373:	mov    r14d,0x9
  419379:	call   0x43baf0
  41937e:	lea    rdx,[rdi+0x8]
  419382:	test   rbx,rbx
  419385:	mov    QWORD PTR [rdi+0x20],rax
  419389:	mov    rsi,QWORD PTR [rip+0x41aa0]        # 0x45ae30
  419390:	mov    QWORD PTR [rbp-0x48],rdx
  419394:	jne    0x4193ac
  419396:	jmp    0x4193cc
  419398:	nop    DWORD PTR [rax+rax*1+0x0]
  4193a0:	movzx  eax,r8b
  4193a4:	test   WORD PTR [rsi+rax*2],0xc00
  4193aa:	je     0x4193e5
  4193ac:	mov    rcx,rbx
  4193af:	call   0x4494a0
  4193b4:	cmp    eax,0xffffffff
  4193b7:	mov    r8d,eax
  4193ba:	jne    0x4193a0
  4193bc:	mov    rcx,rbx
  4193bf:	shl    r12,0x3
  4193c3:	call   0x449518
  4193c8:	mov    rax,QWORD PTR [rdi+0x20]
  4193cc:	mov    QWORD PTR [rax+r12*1],0x0
  4193d4:	lea    rsp,[rbp-0x38]
  4193d8:	pop    rbx
  4193d9:	pop    rsi
  4193da:	pop    rdi
  4193db:	pop    r12
  4193dd:	pop    r13
  4193df:	pop    r14
  4193e1:	pop    r15
  4193e3:	pop    rbp
  4193e4:	ret    
  4193e5:	add    r12,0x2
  4193e9:	cmp    r12,r14
  4193ec:	ja     0x4194b0
  4193f2:	mov    rax,QWORD PTR [rdi+0x20]
  4193f6:	lea    r15,[rax+r12*8-0x10]
  4193fb:	mov    rdx,rbx
  4193fe:	mov    ecx,r8d
  419401:	call   0x418f70
  419406:	mov    QWORD PTR [r15],rax
  419409:	mov    rcx,rbx
  41940c:	call   0x4494a0
  419411:	cmp    eax,0xffffffff
  419414:	je     0x41941f
  419416:	movzx  edx,al
  419419:	test   BYTE PTR [rsi+rdx*2],0x1
  41941d:	jne    0x419409
  41941f:	mov    rdx,rbx
  419422:	mov    ecx,eax
  419424:	call   0x418f70
  419429:	movzx  edx,BYTE PTR [rax]
  41942c:	mov    r9,rax
  41942f:	cmp    dl,0x5c
  419432:	je     0x4194a0
  419434:	cmp    dl,0x2f
  419437:	je     0x4194a0
  419439:	test   dl,dl
  41943b:	jne    0x419490
  41943d:	mov    r10,r13
  419440:	add    r10,QWORD PTR [rdi+0x20]
  419444:	mov    r8d,DWORD PTR [rdi+0x10]
  419448:	mov    rdx,QWORD PTR [rbp-0x48]
  41944c:	mov    rcx,r9
  41944f:	mov    QWORD PTR [rbp-0x50],r9
  419453:	mov    QWORD PTR [rbp-0x58],r10
  419457:	call   0x419260
  41945c:	mov    r10,QWORD PTR [rbp-0x58]
  419460:	mov    r9,QWORD PTR [rbp-0x50]
  419464:	mov    QWORD PTR [r10],rax
  419467:	mov    rcx,r9
  41946a:	call   0x4494c8
  41946f:	jmp    0x419476
  419471:	cmp    eax,0xffffffff
  419474:	je     0x419483
  419476:	mov    rcx,rbx
  419479:	call   0x4494a0
  41947e:	cmp    eax,0xa
  419481:	jne    0x419471
  419483:	add    r13,0x10
  419487:	jmp    0x4193ac
  41948c:	nop    DWORD PTR [rax+0x0]
  419490:	cmp    BYTE PTR [r9+0x1],0x3a
  419495:	jne    0x41943d
  419497:	nop    WORD PTR [rax+rax*1+0x0]
  4194a0:	mov    rax,QWORD PTR [rdi+0x20]
  4194a4:	mov    QWORD PTR [rax+r13*1],r9
  4194a8:	jmp    0x419476
  4194aa:	nop    WORD PTR [rax+rax*1+0x0]
  4194b0:	add    r14,0x8
  4194b4:	mov    rcx,QWORD PTR [rdi+0x20]
  4194b8:	mov    DWORD PTR [rbp-0x50],r8d
  4194bc:	lea    rdx,[r14*8+0x0]
  4194c4:	call   0x43bb70
  4194c9:	mov    r8d,DWORD PTR [rbp-0x50]
  4194cd:	mov    QWORD PTR [rdi+0x20],rax
  4194d1:	jmp    0x4193f6
  4194d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4194e0:	push   rdi
  4194e1:	push   rsi
  4194e2:	push   rbx
  4194e3:	sub    rsp,0x20
  4194e7:	mov    r8d,0x8
  4194ed:	mov    rbx,rcx
  4194f0:	mov    rsi,rdx
  4194f3:	call   0x449458
  4194f8:	test   eax,eax
  4194fa:	jne    0x41952c
  4194fc:	cmp    BYTE PTR [rbx+0x18],0x0
  419500:	lea    rdi,[rbx+0x8]
  419504:	je     0x419534
  419506:	lea    rdx,[rsi+0x8]
  41950a:	mov    r8d,0x10
  419510:	mov    rcx,rdi
  419513:	call   0x449458
  419518:	test   eax,eax
  41951a:	jne    0x41952c
  41951c:	cmp    BYTE PTR [rbx+0x19],0x0
  419520:	jne    0x41952c
  419522:	movzx  eax,BYTE PTR [rsi+0x18]
  419526:	xor    eax,0x1
  419529:	movzx  eax,al
  41952c:	add    rsp,0x20
  419530:	pop    rbx
  419531:	pop    rsi
  419532:	pop    rdi
  419533:	ret    
  419534:	mov    rax,QWORD PTR [rbx+0x20]
  419538:	lea    rdi,[rbx+0x8]
  41953c:	mov    r8,rdi
  41953f:	mov    rdx,QWORD PTR [rax+0x60]
  419543:	mov    rcx,QWORD PTR [rax+0x28]
  419547:	call   0x437880
  41954c:	mov    BYTE PTR [rbx+0x18],0x1
  419550:	jmp    0x419506
  419552:	nop    DWORD PTR [rax+0x0]
  419556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419560:	push   r14
  419562:	push   r13
  419564:	push   r12
  419566:	push   rbp
  419567:	push   rdi
  419568:	push   rsi
  419569:	push   rbx
  41956a:	sub    rsp,0x50
  41956e:	movzx  eax,BYTE PTR [rdx+0x8d]
  419575:	test   al,al
  419577:	jne    0x4196c0
  41957d:	movzx  r12d,BYTE PTR [rdx+0x8b]
  419585:	test   r12b,r12b
  419588:	jne    0x4196c0
  41958e:	mov    r8d,DWORD PTR [rdx+0x84]
  419595:	test   r8d,r8d
  419598:	jne    0x4196c0
  41959e:	cmp    DWORD PTR [rdx+0x80],0xffffffff
  4195a5:	mov    r14,rdx
  4195a8:	mov    rbp,rcx
  4195ab:	je     0x4196d0
  4195b1:	movzx  eax,WORD PTR [r14+0x4e]
  4195b6:	and    ax,0xf000
  4195ba:	cmp    ax,0x3000
  4195be:	je     0x4196f9
  4195c4:	cmp    ax,0x8000
  4195c8:	je     0x419728
  4195ce:	mov    ecx,0x2010
  4195d3:	xor    r13d,r13d
  4195d6:	mov    esi,0x2000
  4195db:	call   0x43baf0
  4195e0:	xor    ebx,ebx
  4195e2:	mov    rdi,rax
  4195e5:	mov    ecx,DWORD PTR [r14+0x80]
  4195ec:	lea    rdx,[rdi+rbx*1]
  4195f0:	mov    r8d,esi
  4195f3:	sub    r8d,ebx
  4195f6:	call   0x449330
  4195fb:	movsxd r9,eax
  4195fe:	cmp    r9,0x0
  419602:	jle    0x419630
  419604:	add    rbx,r9
  419607:	cmp    rbx,rsi
  41960a:	jne    0x4195e5
  41960c:	test   r13b,r13b
  41960f:	jne    0x419720
  419615:	lea    rsi,[rbx+rbx*1]
  419619:	mov    rcx,rdi
  41961c:	lea    rdx,[rsi+0x10]
  419620:	call   0x43bb70
  419625:	mov    rdi,rax
  419628:	jmp    0x4195e5
  41962a:	nop    WORD PTR [rax+rax*1+0x0]
  419630:	jne    0x41973b
  419636:	cmp    rsi,rbx
  419639:	je     0x419655
  41963b:	test   r13b,r13b
  41963e:	je     0x419655
  419640:	mov    r9,QWORD PTR [r14+0x8]
  419644:	lea    r8,[rip+0x36e8c]        # 0x4504d7
  41964b:	xor    edx,edx
  41964d:	mov    rcx,rbp
  419650:	call   0x414b60
  419655:	lea    rax,[r14+0x60]
  419659:	mov    rdx,QWORD PTR [rbp+0x458]
  419660:	lea    r9,[rsi+0x10]
  419664:	mov    QWORD PTR [rsp+0x20],rbx
  419669:	mov    r8,rdi
  41966c:	mov    rcx,rbp
  41966f:	mov    QWORD PTR [rsp+0x30],rax
  419674:	lea    rax,[r14+0x30]
  419678:	mov    QWORD PTR [rsp+0x28],rax
  41967d:	call   0x4261f0
  419682:	mov    BYTE PTR [r14+0x8d],0x1
  41968a:	mov    QWORD PTR [r14+0x28],rax
  41968e:	mov    ecx,DWORD PTR [r14+0x80]
  419695:	mov    BYTE PTR [r14+0x8b],r12b
  41969c:	call   0x4492f0
  4196a1:	movzx  eax,BYTE PTR [r14+0x8b]
  4196a9:	mov    DWORD PTR [r14+0x80],0xffffffff
  4196b4:	xor    eax,0x1
  4196b7:	nop    WORD PTR [rax+rax*1+0x0]
  4196c0:	add    rsp,0x50
  4196c4:	pop    rbx
  4196c5:	pop    rsi
  4196c6:	pop    rdi
  4196c7:	pop    rbp
  4196c8:	pop    r12
  4196ca:	pop    r13
  4196cc:	pop    r14
  4196ce:	ret    
  4196cf:	nop
  4196d0:	mov    rcx,rdx
  4196d3:	call   0x419040
  4196d8:	test   al,al
  4196da:	jne    0x4195b1
  4196e0:	xor    r8d,r8d
  4196e3:	mov    rdx,r14
  4196e6:	mov    rcx,rbp
  4196e9:	mov    BYTE PTR [rsp+0x4f],al
  4196ed:	call   0x419160
  4196f2:	movzx  eax,BYTE PTR [rsp+0x4f]
  4196f7:	jmp    0x4196c0
  4196f9:	mov    r9,QWORD PTR [r14+0x8]
  4196fd:	lea    r8,[rip+0x36dbe]        # 0x4504c2
  419704:	mov    edx,0x3
  419709:	mov    rcx,rbp
  41970c:	mov    r12d,0x1
  419712:	call   0x414b60
  419717:	jmp    0x41968e
  41971c:	nop    DWORD PTR [rax+0x0]
  419720:	mov    rbx,rsi
  419723:	jmp    0x419655
  419728:	mov    rsi,QWORD PTR [r14+0x60]
  41972c:	mov    r13d,0x1
  419732:	lea    rcx,[rsi+0x10]
  419736:	jmp    0x4195db
  41973b:	mov    r8,QWORD PTR [r14+0x8]
  41973f:	mov    edx,0x3
  419744:	mov    rcx,rbp
  419747:	mov    r12d,0x1
  41974d:	call   0x414da0
  419752:	mov    rcx,rdi
  419755:	call   0x4494c8
  41975a:	jmp    0x41968e
  41975f:	nop
  419760:	push   rbp
  419761:	push   rdi
  419762:	push   rsi
  419763:	push   rbx
  419764:	sub    rsp,0x28
  419768:	movzx  eax,BYTE PTR [rdx]
  41976b:	cmp    al,0x5c
  41976d:	je     0x4197b3
  41976f:	cmp    al,0x2f
  419771:	je     0x4197b3
  419773:	test   al,al
  419775:	je     0x41977d
  419777:	cmp    BYTE PTR [rdx+0x1],0x3a
  41977b:	je     0x4197b3
  41977d:	mov    rax,QWORD PTR [rcx]
  419780:	test   rax,rax
  419783:	je     0x4197f0
  419785:	mov    rbx,QWORD PTR [rax+0x50]
  419789:	cmp    r9d,0x1
  41978d:	mov    rsi,rcx
  419790:	je     0x419800
  419792:	test   r8d,r8d
  419795:	je     0x4197d0
  419797:	mov    rbx,QWORD PTR [rsi+0xc0]
  41979e:	test   rbx,rbx
  4197a1:	je     0x419860
  4197a7:	mov    rax,rbx
  4197aa:	add    rsp,0x28
  4197ae:	pop    rbx
  4197af:	pop    rsi
  4197b0:	pop    rdi
  4197b1:	pop    rbp
  4197b2:	ret    
  4197b3:	lea    rbx,[rcx+0xc8]
  4197ba:	mov    rax,rbx
  4197bd:	add    rsp,0x28
  4197c1:	pop    rbx
  4197c2:	pop    rsi
  4197c3:	pop    rdi
  4197c4:	pop    rbp
  4197c5:	ret    
  4197c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197d0:	cmp    r9d,0x3
  4197d4:	je     0x419845
  4197d6:	cmp    BYTE PTR [rsi+0x188],0x0
  4197dd:	je     0x419820
  4197df:	mov    rbx,QWORD PTR [rsi+0xb8]
  4197e6:	jmp    0x41979e
  4197e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4197f0:	mov    rbx,QWORD PTR [rcx+0x108]
  4197f7:	jmp    0x419789
  4197f9:	nop    DWORD PTR [rax+0x0]
  419800:	mov    rcx,QWORD PTR [rbx+0x40]
  419804:	test   rcx,rcx
  419807:	je     0x419851
  419809:	lea    r9,[rsi+0xc8]
  419810:	cmp    rcx,r9
  419813:	je     0x419851
  419815:	mov    rbx,QWORD PTR [rcx]
  419818:	jmp    0x41979e
  41981a:	nop    WORD PTR [rax+rax*1+0x0]
  419820:	test   rax,rax
  419823:	je     0x419880
  419825:	movzx  edi,BYTE PTR [rax+0x6d]
  419829:	mov    rdx,QWORD PTR [rbx+0x18]
  41982d:	test   rdx,rdx
  419830:	je     0x419884
  419832:	mov    r8d,edi
  419835:	mov    rcx,rsi
  419838:	add    rsp,0x28
  41983c:	pop    rbx
  41983d:	pop    rsi
  41983e:	pop    rdi
  41983f:	pop    rbp
  419840:	jmp    0x418e90
  419845:	xor    r8d,r8d
  419848:	lea    rdx,[rip+0x36ca4]        # 0x4504f3
  41984f:	jmp    0x419835
  419851:	test   r8d,r8d
  419854:	jne    0x419797
  41985a:	jmp    0x4197d6
  41985f:	nop
  419860:	lea    r8,[rip+0x36c91]        # 0x4504f8
  419867:	mov    r9,rdx
  41986a:	mov    rcx,rsi
  41986d:	mov    edx,0x3
  419872:	call   0x414b60
  419877:	jmp    0x4197a7
  41987c:	nop    DWORD PTR [rax+0x0]
  419880:	xor    edi,edi
  419882:	jmp    0x419829
  419884:	mov    rcx,QWORD PTR [rbx+0x8]
  419888:	call   0x4395f0
  41988d:	sub    rax,QWORD PTR [rbx+0x8]
  419891:	lea    rcx,[rax+0x1]
  419895:	mov    rbp,rax
  419898:	call   0x43baf0
  41989d:	mov    rdx,QWORD PTR [rbx+0x8]
  4198a1:	mov    r8,rbp
  4198a4:	mov    rcx,rax
  4198a7:	call   0x449450
  4198ac:	mov    BYTE PTR [rax+rbp*1],0x0
  4198b0:	mov    rdx,rax
  4198b3:	mov    QWORD PTR [rbx+0x18],rax
  4198b7:	jmp    0x419832
  4198bc:	nop    DWORD PTR [rax+0x0]
  4198c0:	push   r15
  4198c2:	push   r14
  4198c4:	push   r13
  4198c6:	push   r12
  4198c8:	push   rbp
  4198c9:	push   rdi
  4198ca:	push   rsi
  4198cb:	push   rbx
  4198cc:	sub    rsp,0x28
  4198d0:	mov    r14,QWORD PTR [rdx+0x8]
  4198d4:	xor    r12d,r12d
  4198d7:	mov    rbx,rdx
  4198da:	mov    rsi,rcx
  4198dd:	mov    rcx,rdx
  4198e0:	mov    QWORD PTR [rbx+0x8],r8
  4198e4:	mov    rbp,r8
  4198e7:	call   0x419040
  4198ec:	test   al,al
  4198ee:	jne    0x419910
  4198f0:	mov    eax,r12d
  4198f3:	mov    QWORD PTR [rbx+0x8],r14
  4198f7:	add    rsp,0x28
  4198fb:	pop    rbx
  4198fc:	pop    rsi
  4198fd:	pop    rdi
  4198fe:	pop    rbp
  4198ff:	pop    r12
  419901:	pop    r13
  419903:	pop    r14
  419905:	pop    r15
  419907:	ret    
  419908:	nop    DWORD PTR [rax+rax*1+0x0]
  419910:	mov    r8d,DWORD PTR [rbx+0x80]
  419917:	mov    rdx,rbp
  41991a:	mov    rcx,rsi
  41991d:	call   QWORD PTR [rsi+0x3a8]
  419923:	and    eax,0x1
  419926:	mov    r12d,eax
  419929:	mov    r13d,eax
  41992c:	and    r12d,0x1
  419930:	test   eax,eax
  419932:	je     0x4199a0
  419934:	cmp    BYTE PTR [rsi+0x422],0x0
  41993b:	je     0x4198f0
  41993d:	mov    rax,QWORD PTR [rsi+0x28]
  419941:	mov    r15d,0x1
  419947:	mov    rdi,QWORD PTR [rip+0x4ade6]        # 0x464734
  41994e:	cmp    DWORD PTR [rax+0x30],0x1
  419952:	jbe    0x419972
  419954:	call   rdi
  419956:	lea    rdx,[rax+0x60]
  41995a:	mov    ecx,0x2e
  41995f:	add    r15d,0x1
  419963:	call   0x449438
  419968:	mov    rax,QWORD PTR [rsi+0x28]
  41996c:	cmp    DWORD PTR [rax+0x30],r15d
  419970:	ja     0x419954
  419972:	cmp    r13d,0x1
  419976:	sbb    esi,esi
  419978:	and    esi,0x57
  41997b:	call   rdi
  41997d:	add    esi,0x21
  419980:	lea    rcx,[rax+0x60]
  419984:	lea    rdx,[rip+0x36b97]        # 0x450522
  41998b:	mov    r9,rbp
  41998e:	mov    r8d,esi
  419991:	call   0x4498d0
  419996:	jmp    0x4198f0
  41999b:	nop    DWORD PTR [rax+rax*1+0x0]
  4199a0:	mov    ecx,DWORD PTR [rbx+0x80]
  4199a6:	call   0x4492f0
  4199ab:	mov    DWORD PTR [rbx+0x80],0xffffffff
  4199b5:	jmp    0x419934
  4199ba:	nop    WORD PTR [rax+rax*1+0x0]
  4199c0:	mov    eax,DWORD PTR [rcx+0x84]
  4199c6:	test   eax,eax
  4199c8:	setne  al
  4199cb:	ret    
  4199cc:	nop    DWORD PTR [rax+0x0]
  4199d0:	push   r15
  4199d2:	push   r14
  4199d4:	push   r13
  4199d6:	push   r12
  4199d8:	push   rbp
  4199d9:	push   rdi
  4199da:	push   rsi
  4199db:	push   rbx
  4199dc:	sub    rsp,0xa8
  4199e3:	mov    eax,DWORD PTR [rsp+0x118]
  4199ea:	test   r8,r8
  4199ed:	mov    r13,rcx
  4199f0:	mov    r15,rdx
  4199f3:	mov    rbx,r8
  4199f6:	mov    esi,r9d
  4199f9:	mov    DWORD PTR [rsp+0x28],eax
  4199fd:	je     0x41a058
  419a03:	mov    rcx,r15
  419a06:	call   0x4391e0
  419a0b:	mov    rcx,QWORD PTR [r13+0x110]
  419a12:	mov    r8d,eax
  419a15:	mov    r9d,0x1
  419a1b:	mov    rdx,r15
  419a1e:	call   0x438e20
  419a23:	mov    QWORD PTR [rsp+0x20],rax
  419a28:	jmp    0x419a3a
  419a2a:	nop    WORD PTR [rax+rax*1+0x0]
  419a30:	cmp    rbx,QWORD PTR [rax+0x8]
  419a34:	je     0x419bd5
  419a3a:	mov    rax,QWORD PTR [rax]
  419a3d:	test   rax,rax
  419a40:	jne    0x419a30
  419a42:	mov    edx,0x90
  419a47:	mov    ecx,0x1
  419a4c:	call   0x43bb20
  419a51:	cmp    QWORD PTR [r13+0x0],0x0
  419a56:	mov    DWORD PTR [rax+0x80],0xffffffff
  419a60:	mov    rcx,r15
  419a63:	mov    QWORD PTR [rax+0x40],rbx
  419a67:	mov    r14,rax
  419a6a:	sete   BYTE PTR [rax+0x8c]
  419a71:	call   0x43bbf0
  419a76:	cmp    BYTE PTR [rsp+0x28],0x0
  419a7b:	mov    QWORD PTR [r14],rax
  419a7e:	mov    edx,0x1
  419a83:	je     0x419bf0
  419a89:	test   sil,sil
  419a8c:	mov    BYTE PTR [r14+0x8e],dl
  419a93:	jne    0x41a311
  419a99:	mov    r12,rax
  419a9c:	lea    rax,[r13+0x130]
  419aa3:	mov    rbp,QWORD PTR [r14+0x40]
  419aa7:	mov    BYTE PTR [rsp+0x30],0x0
  419aac:	mov    BYTE PTR [rsp+0x2f],0x0
  419ab1:	mov    QWORD PTR [rsp+0x48],rax
  419ab6:	lea    rax,[rsp+0x60]
  419abb:	mov    BYTE PTR [rsp+0x2e],0x0
  419ac0:	mov    QWORD PTR [rsp+0xf8],r15
  419ac8:	mov    QWORD PTR [rsp+0x100],rbx
  419ad0:	mov    QWORD PTR [rsp+0x38],rax
  419ad5:	jmp    0x419b75
  419ada:	nop    WORD PTR [rax+rax*1+0x0]
  419ae0:	mov    rax,QWORD PTR [rdx+0x28]
  419ae4:	test   rax,rax
  419ae7:	je     0x41a040
  419aed:	call   rax
  419aef:	mov    rbp,rax
  419af2:	test   rbp,rbp
  419af5:	je     0x419ce0
  419afb:	cmp    BYTE PTR [r13+0x495],0x0
  419b03:	je     0x419b13
  419b05:	mov    rax,QWORD PTR [r14+0x40]
  419b09:	cmp    BYTE PTR [rax+0x14],0x0
  419b0d:	jne    0x419e20
  419b13:	mov    rcx,rbp
  419b16:	call   0x4391e0
  419b1b:	mov    rcx,QWORD PTR [r13+0x128]
  419b22:	mov    r8d,eax
  419b25:	mov    rdx,rbp
  419b28:	mov    r12d,eax
  419b2b:	call   0x438cc0
  419b30:	test   rax,rax
  419b33:	je     0x419e70
  419b39:	mov    DWORD PTR [r14+0x84],0x2
  419b44:	mov    rax,QWORD PTR [r14+0x40]
  419b48:	mov    rbp,QWORD PTR [rax]
  419b4b:	test   rbp,rbp
  419b4e:	mov    QWORD PTR [r14+0x40],rbp
  419b52:	je     0x41a0a8
  419b58:	cmp    rbp,QWORD PTR [r13+0xc0]
  419b5f:	je     0x419d00
  419b65:	cmp    rbp,QWORD PTR [r13+0xb8]
  419b6c:	je     0x419e60
  419b72:	mov    r12,QWORD PTR [r14]
  419b75:	cmp    BYTE PTR [r13+0x42f],0x0
  419b7d:	mov    rcx,r12
  419b80:	mov    rdx,rbp
  419b83:	je     0x419ae0
  419b89:	mov    rax,QWORD PTR [rbp+0x20]
  419b8d:	test   rax,rax
  419b90:	je     0x41a06e
  419b96:	mov    rcx,QWORD PTR [rax]
  419b99:	xor    esi,esi
  419b9b:	test   rcx,rcx
  419b9e:	jne    0x419bb3
  419ba0:	jmp    0x419c10
  419ba2:	mov    rax,QWORD PTR [rbp+0x20]
  419ba6:	add    rsi,0x2
  419baa:	mov    rcx,QWORD PTR [rax+rsi*8]
  419bae:	test   rcx,rcx
  419bb1:	je     0x419c10
  419bb3:	mov    rdx,r12
  419bb6:	call   0x438360
  419bbb:	test   eax,eax
  419bbd:	jne    0x419ba2
  419bbf:	mov    rax,QWORD PTR [rbp+0x20]
  419bc3:	mov    rcx,QWORD PTR [rax+rsi*8+0x8]
  419bc8:	call   0x43bbf0
  419bcd:	mov    rbp,rax
  419bd0:	jmp    0x419afb
  419bd5:	mov    rsi,QWORD PTR [rax+0x18]
  419bd9:	mov    rax,rsi
  419bdc:	add    rsp,0xa8
  419be3:	pop    rbx
  419be4:	pop    rsi
  419be5:	pop    rdi
  419be6:	pop    rbp
  419be7:	pop    r12
  419be9:	pop    r13
  419beb:	pop    r14
  419bed:	pop    r15
  419bef:	ret    
  419bf0:	mov    rdx,QWORD PTR [r13+0x0]
  419bf4:	test   rdx,rdx
  419bf7:	je     0x41a0a1
  419bfd:	mov    rdx,QWORD PTR [rdx+0x50]
  419c01:	movzx  edx,BYTE PTR [rdx+0x8e]
  419c08:	jmp    0x419a89
  419c0d:	nop    DWORD PTR [rax]
  419c10:	movzx  eax,BYTE PTR [r12]
  419c15:	cmp    al,0x5c
  419c17:	je     0x41a170
  419c1d:	cmp    al,0x2f
  419c1f:	je     0x41a170
  419c25:	test   al,al
  419c27:	je     0x419c35
  419c29:	cmp    BYTE PTR [r12+0x1],0x3a
  419c2f:	je     0x41a170
  419c35:	mov    edx,0x2f
  419c3a:	mov    rcx,r12
  419c3d:	call   0x4493e8
  419c42:	mov    edx,0x5c
  419c47:	mov    rbx,rax
  419c4a:	mov    rcx,r12
  419c4d:	call   0x4493e8
  419c52:	cmp    rbx,rax
  419c55:	seta   cl
  419c58:	test   rbx,rbx
  419c5b:	sete   dl
  419c5e:	or     dl,cl
  419c60:	je     0x419c6b
  419c62:	test   rax,rax
  419c65:	mov    rbx,rax
  419c68:	sete   dl
  419c6b:	cmp    r12,rbx
  419c6e:	je     0x41a170
  419c74:	test   dl,dl
  419c76:	jne    0x41a170
  419c7c:	mov    edi,DWORD PTR [rbp+0x10]
  419c7f:	mov    r15,rbx
  419c82:	sub    r15,r12
  419c85:	add    r15,0x1
  419c89:	add    rdi,r15
  419c8c:	lea    rcx,[rdi+0x1]
  419c90:	call   0x43baf0
  419c95:	mov    r8d,DWORD PTR [rbp+0x10]
  419c99:	mov    rdx,QWORD PTR [rbp+0x8]
  419c9d:	mov    rcx,rax
  419ca0:	mov    rsi,rax
  419ca3:	call   0x449450
  419ca8:	mov    ecx,DWORD PTR [rbp+0x10]
  419cab:	mov    rdx,r12
  419cae:	mov    r8,r15
  419cb1:	lea    r12,[rbx+0x1]
  419cb5:	add    rcx,rsi
  419cb8:	call   0x449450
  419cbd:	mov    BYTE PTR [rsi+rdi*1],0x0
  419cc1:	movzx  r8d,BYTE PTR [rbp+0x14]
  419cc6:	mov    rdx,rsi
  419cc9:	mov    rcx,r13
  419ccc:	call   0x418e90
  419cd1:	mov    rbp,rax
  419cd4:	jmp    0x419b89
  419cd9:	nop    DWORD PTR [rax+0x0]
  419ce0:	mov    DWORD PTR [r14+0x84],0x2
  419ceb:	mov    QWORD PTR [r14+0x8],0x0
  419cf3:	jmp    0x419b44
  419cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  419d00:	mov    BYTE PTR [rsp+0x2e],0x1
  419d05:	mov    rax,QWORD PTR [rsp+0x20]
  419d0a:	mov    rsi,QWORD PTR [rax]
  419d0d:	test   rsi,rsi
  419d10:	jne    0x419d2c
  419d12:	jmp    0x419b72
  419d17:	nop    WORD PTR [rax+rax*1+0x0]
  419d20:	mov    rsi,QWORD PTR [rsi]
  419d23:	test   rsi,rsi
  419d26:	je     0x419b72
  419d2c:	mov    r12,QWORD PTR [rsi+0x8]
  419d30:	cmp    rbp,r12
  419d33:	jne    0x419d20
  419d35:	mov    rcx,QWORD PTR [r14]
  419d38:	mov    rbx,QWORD PTR [rsp+0x100]
  419d40:	call   0x4494c8
  419d45:	mov    rcx,r14
  419d48:	call   0x4494c8
  419d4d:	mov    r14,QWORD PTR [rsi+0x18]
  419d51:	mov    rcx,r13
  419d54:	call   0x418e30
  419d59:	mov    rdi,QWORD PTR [rsp+0x20]
  419d5e:	cmp    BYTE PTR [rsp+0x2e],0x0
  419d63:	mov    rdx,QWORD PTR [rdi]
  419d66:	mov    QWORD PTR [rax+0x8],rbx
  419d6a:	mov    QWORD PTR [rax],rdx
  419d6d:	mov    rdx,QWORD PTR [r13+0x28]
  419d71:	mov    edx,DWORD PTR [rdx+0x38]
  419d74:	mov    QWORD PTR [rax+0x18],r14
  419d78:	mov    DWORD PTR [rax+0x10],edx
  419d7b:	mov    QWORD PTR [rdi],rax
  419d7e:	je     0x419dc0
  419d80:	mov    rax,QWORD PTR [r13+0xc0]
  419d87:	cmp    rax,r12
  419d8a:	je     0x419dc0
  419d8c:	cmp    rbx,rax
  419d8f:	je     0x419dc0
  419d91:	mov    rcx,r13
  419d94:	call   0x418e30
  419d99:	mov    rdi,QWORD PTR [rsp+0x20]
  419d9e:	mov    rdx,QWORD PTR [rdi]
  419da1:	mov    QWORD PTR [rax],rdx
  419da4:	mov    rdx,QWORD PTR [r13+0xc0]
  419dab:	mov    QWORD PTR [rax+0x8],rdx
  419daf:	mov    rdx,QWORD PTR [r13+0x28]
  419db3:	mov    edx,DWORD PTR [rdx+0x38]
  419db6:	mov    QWORD PTR [rax+0x18],r14
  419dba:	mov    DWORD PTR [rax+0x10],edx
  419dbd:	mov    QWORD PTR [rdi],rax
  419dc0:	cmp    BYTE PTR [rsp+0x2f],0x0
  419dc5:	mov    rsi,r14
  419dc8:	je     0x419bd9
  419dce:	mov    rax,QWORD PTR [r13+0xb8]
  419dd5:	cmp    rax,r12
  419dd8:	je     0x41a106
  419dde:	cmp    rbx,rax
  419de1:	je     0x41a106
  419de7:	mov    rcx,r13
  419dea:	call   0x418e30
  419def:	mov    rdi,QWORD PTR [rsp+0x20]
  419df4:	mov    rdx,QWORD PTR [rdi]
  419df7:	mov    QWORD PTR [rax],rdx
  419dfa:	mov    rdx,QWORD PTR [r13+0xb8]
  419e01:	mov    QWORD PTR [rax+0x8],rdx
  419e05:	mov    rdx,QWORD PTR [r13+0x28]
  419e09:	mov    edx,DWORD PTR [rdx+0x38]
  419e0c:	mov    QWORD PTR [rax+0x18],r14
  419e10:	mov    DWORD PTR [rax+0x10],edx
  419e13:	mov    QWORD PTR [rdi],rax
  419e16:	jmp    0x419bd9
  419e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  419e20:	mov    rcx,rbp
  419e23:	call   0x439600
  419e28:	test   rax,rax
  419e2b:	mov    rsi,rax
  419e2e:	je     0x41a17c
  419e34:	mov    rcx,rax
  419e37:	call   0x4493c0
  419e3c:	mov    rcx,rbp
  419e3f:	mov    rdi,rax
  419e42:	call   0x4493c0
  419e47:	cmp    rdi,rax
  419e4a:	jae    0x41a17c
  419e50:	mov    rcx,rbp
  419e53:	mov    rbp,rsi
  419e56:	call   0x4494c8
  419e5b:	jmp    0x419b13
  419e60:	mov    BYTE PTR [rsp+0x2f],0x1
  419e65:	jmp    0x419d05
  419e6a:	nop    WORD PTR [rax+rax*1+0x0]
  419e70:	mov    rax,QWORD PTR [r14]
  419e73:	mov    QWORD PTR [r14+0x8],rbp
  419e77:	cmp    BYTE PTR [rax],0x0
  419e7a:	je     0x419f45
  419e80:	cmp    QWORD PTR [r13+0x3a8],0x0
  419e88:	je     0x419f45
  419e8e:	mov    rax,QWORD PTR [r13+0x100]
  419e95:	test   rax,rax
  419e98:	jne    0x419ea9
  419e9a:	jmp    0x419ebf
  419e9c:	nop    DWORD PTR [rax+0x0]
  419ea0:	mov    rax,QWORD PTR [rax+0x20]
  419ea4:	test   rax,rax
  419ea7:	je     0x419ebf
  419ea9:	cmp    BYTE PTR [rax+0x8e],0x0
  419eb0:	jne    0x419ea0
  419eb2:	cmp    BYTE PTR [rax+0x8c],0x0
  419eb9:	je     0x419f45
  419ebf:	mov    rcx,rbp
  419ec2:	call   0x4493c0
  419ec7:	mov    rsi,rax
  419eca:	lea    rax,[rax+0x5]
  419ece:	mov    rcx,rax
  419ed1:	mov    QWORD PTR [rsp+0x40],rax
  419ed6:	call   0x43baf0
  419edb:	mov    r8,rsi
  419ede:	mov    r15,rax
  419ee1:	mov    rdx,rbp
  419ee4:	mov    rcx,rax
  419ee7:	call   0x449450
  419eec:	mov    DWORD PTR [r15+rsi*1],0x6863672e
  419ef4:	mov    BYTE PTR [r15+rsi*1+0x4],0x0
  419efa:	mov    rcx,r15
  419efd:	mov    rdx,QWORD PTR [rsp+0x38]
  419f02:	call   QWORD PTR [rip+0x4aafc]        # 0x464a04
  419f08:	test   eax,eax
  419f0a:	jne    0x419f3d
  419f0c:	movzx  eax,WORD PTR [rsp+0x66]
  419f11:	and    ax,0xf000
  419f15:	cmp    ax,0x4000
  419f19:	je     0x41a1cd
  419f1f:	mov    r8,r15
  419f22:	mov    rdx,r14
  419f25:	mov    rcx,r13
  419f28:	call   0x4198c0
  419f2d:	mov    esi,eax
  419f2f:	test   sil,sil
  419f32:	jne    0x41a189
  419f38:	mov    BYTE PTR [rsp+0x30],0x1
  419f3d:	mov    rcx,r15
  419f40:	call   0x4494c8
  419f45:	mov    rcx,r14
  419f48:	call   0x419040
  419f4d:	test   al,al
  419f4f:	jne    0x41a07f
  419f55:	cmp    DWORD PTR [r14+0x84],0x2
  419f5d:	jne    0x41a19a
  419f63:	mov    rcx,rbp
  419f66:	call   0x4493c0
  419f6b:	mov    rcx,QWORD PTR [r13+0x148]
  419f72:	movsxd rsi,eax
  419f75:	lea    rdx,[rcx+rsi*1+0x1]
  419f7a:	cmp    QWORD PTR [r13+0x150],rdx
  419f81:	jb     0x41a2ac
  419f87:	mov    r8,rsi
  419f8a:	mov    rdx,rbp
  419f8d:	call   0x449450
  419f92:	add    rsi,QWORD PTR [r13+0x148]
  419f99:	lea    rax,[rsi+0x1]
  419f9d:	mov    QWORD PTR [r13+0x148],rax
  419fa4:	mov    BYTE PTR [rsi],0x0
  419fa7:	mov    rsi,QWORD PTR [r13+0x140]
  419fae:	mov    rax,QWORD PTR [r13+0x148]
  419fb5:	cmp    rsi,rax
  419fb8:	je     0x41a304
  419fbe:	movsxd rdx,DWORD PTR [r13+0x160]
  419fc5:	mov    ecx,edx
  419fc7:	add    rax,rdx
  419fca:	mov    rdx,QWORD PTR [r13+0x150]
  419fd1:	not    ecx
  419fd3:	movsxd rcx,ecx
  419fd6:	and    rax,rcx
  419fd9:	mov    rcx,QWORD PTR [r13+0x138]
  419fe0:	mov    rdi,rdx
  419fe3:	mov    r8,rax
  419fe6:	mov    QWORD PTR [r13+0x148],rax
  419fed:	sub    r8,rcx
  419ff0:	sub    rdi,rcx
  419ff3:	cmp    r8,rdi
  419ff6:	jle    0x41a002
  419ff8:	mov    QWORD PTR [r13+0x148],rdx
  419fff:	mov    rax,rdx
  41a002:	mov    QWORD PTR [r13+0x140],rax
  41a009:	mov    rcx,rbp
  41a00c:	call   0x4494c8
  41a011:	mov    rcx,QWORD PTR [r13+0x128]
  41a018:	mov    r9d,0x1
  41a01e:	mov    r8d,r12d
  41a021:	mov    rdx,rsi
  41a024:	call   0x438e20
  41a029:	mov    QWORD PTR [rax],rsi
  41a02c:	mov    rax,QWORD PTR [r14]
  41a02f:	mov    QWORD PTR [r14+0x8],rax
  41a033:	jmp    0x419b44
  41a038:	nop    DWORD PTR [rax+rax*1+0x0]
  41a040:	lea    rax,[rdx+0x8]
  41a044:	mov    r8d,DWORD PTR [rdx+0x10]
  41a048:	mov    rdx,rax
  41a04b:	call   0x419260
  41a050:	mov    rbp,rax
  41a053:	jmp    0x419af2
  41a058:	lea    r8,[rip+0x364ca]        # 0x450529
  41a05f:	mov    edx,0x4
  41a064:	call   0x414b60
  41a069:	jmp    0x419a03
  41a06e:	mov    rcx,rbp
  41a071:	call   0x4192d0
  41a076:	mov    rax,QWORD PTR [rbp+0x20]
  41a07a:	jmp    0x419b96
  41a07f:	mov    rbx,QWORD PTR [rsp+0x100]
  41a087:	mov    rax,QWORD PTR [r13+0x100]
  41a08e:	xor    r12d,r12d
  41a091:	mov    QWORD PTR [r13+0x100],r14
  41a098:	mov    QWORD PTR [r14+0x20],rax
  41a09c:	jmp    0x419d51
  41a0a1:	xor    edx,edx
  41a0a3:	jmp    0x419a89
  41a0a8:	mov    rax,QWORD PTR [r13+0x3b8]
  41a0af:	mov    r15,QWORD PTR [rsp+0xf8]
  41a0b7:	mov    rbx,QWORD PTR [rsp+0x100]
  41a0bf:	test   rax,rax
  41a0c2:	je     0x41a11e
  41a0c4:	lea    r8,[r14+0x40]
  41a0c8:	mov    rdx,r15
  41a0cb:	mov    rcx,r13
  41a0ce:	call   rax
  41a0d0:	test   rax,rax
  41a0d3:	mov    QWORD PTR [r14+0x8],rax
  41a0d7:	je     0x41a117
  41a0d9:	mov    rcx,r14
  41a0dc:	call   0x419040
  41a0e1:	test   al,al
  41a0e3:	je     0x41a10e
  41a0e5:	mov    rax,QWORD PTR [r13+0x100]
  41a0ec:	mov    QWORD PTR [r13+0x100],r14
  41a0f3:	mov    QWORD PTR [r14+0x20],rax
  41a0f7:	mov    rax,QWORD PTR [rsp+0x20]
  41a0fc:	cmp    QWORD PTR [rax],0x0
  41a100:	je     0x41a320
  41a106:	mov    rsi,r14
  41a109:	jmp    0x419bd9
  41a10e:	mov    rcx,QWORD PTR [r14+0x8]
  41a112:	call   0x4494c8
  41a117:	mov    rax,QWORD PTR [r14]
  41a11a:	mov    QWORD PTR [r14+0x8],rax
  41a11e:	cmp    BYTE PTR [rsp+0x30],0x0
  41a123:	jne    0x41a2c5
  41a129:	cmp    BYTE PTR [rsp+0x28],0x0
  41a12e:	je     0x41a1b5
  41a134:	mov    rcx,QWORD PTR [r14]
  41a137:	xor    esi,esi
  41a139:	call   0x4494c8
  41a13e:	mov    rcx,r14
  41a141:	call   0x4494c8
  41a146:	mov    rax,QWORD PTR [rsp+0x20]
  41a14b:	cmp    QWORD PTR [rax],0x0
  41a14f:	jne    0x419bd9
  41a155:	mov    QWORD PTR [rax],r14
  41a158:	mov    rcx,QWORD PTR [r13+0x110]
  41a15f:	mov    rdx,rax
  41a162:	call   0x4390c0
  41a167:	jmp    0x419bd9
  41a16c:	nop    DWORD PTR [rax+0x0]
  41a170:	mov    rdx,QWORD PTR [r14+0x40]
  41a174:	mov    rcx,QWORD PTR [r14]
  41a177:	jmp    0x419ae0
  41a17c:	mov    rcx,rsi
  41a17f:	call   0x4494c8
  41a184:	jmp    0x419b13
  41a189:	mov    rbx,QWORD PTR [rsp+0x100]
  41a191:	mov    QWORD PTR [r14+0x10],r15
  41a195:	jmp    0x41a087
  41a19a:	xor    r8d,r8d
  41a19d:	mov    rdx,r14
  41a1a0:	mov    rcx,r13
  41a1a3:	mov    rbx,QWORD PTR [rsp+0x100]
  41a1ab:	call   0x419160
  41a1b0:	jmp    0x41a087
  41a1b5:	mov    r8d,DWORD PTR [rsp+0x110]
  41a1bd:	mov    rdx,r14
  41a1c0:	mov    rcx,r13
  41a1c3:	call   0x419160
  41a1c8:	jmp    0x41a087
  41a1cd:	mov    rcx,r15
  41a1d0:	call   0x43d450
  41a1d5:	test   rax,rax
  41a1d8:	mov    QWORD PTR [rsp+0x30],rax
  41a1dd:	je     0x419f38
  41a1e3:	mov    rax,QWORD PTR [rsp+0x40]
  41a1e8:	mov    BYTE PTR [r15+rsi*1+0x4],0x2f
  41a1ee:	mov    QWORD PTR [rsp+0x50],rax
  41a1f3:	mov    rcx,QWORD PTR [rsp+0x30]
  41a1f8:	call   0x43d630
  41a1fd:	test   rax,rax
  41a200:	je     0x41a2a8
  41a206:	lea    rbx,[rax+0x8]
  41a20a:	lea    rdi,[rip+0x36334]        # 0x450545
  41a211:	mov    rcx,rbx
  41a214:	mov    rsi,rbx
  41a217:	call   0x4493c0
  41a21c:	mov    ecx,0x2
  41a221:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41a223:	je     0x41a1f3
  41a225:	lea    rdi,[rip+0x3631b]        # 0x450547
  41a22c:	mov    rsi,rbx
  41a22f:	mov    ecx,0x3
  41a234:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41a236:	je     0x41a1f3
  41a238:	lea    r8,[rax+0x1]
  41a23c:	mov    rax,QWORD PTR [rsp+0x40]
  41a241:	add    rax,r8
  41a244:	cmp    rax,QWORD PTR [rsp+0x50]
  41a249:	ja     0x41a27f
  41a24b:	mov    rax,QWORD PTR [rsp+0x40]
  41a250:	mov    rdx,rbx
  41a253:	lea    rcx,[r15+rax*1]
  41a257:	call   0x449450
  41a25c:	mov    r8,r15
  41a25f:	mov    rdx,r14
  41a262:	mov    rcx,r13
  41a265:	call   0x4198c0
  41a26a:	test   al,al
  41a26c:	je     0x41a1f3
  41a26e:	mov    esi,eax
  41a270:	mov    rcx,QWORD PTR [rsp+0x30]
  41a275:	call   0x43d850
  41a27a:	jmp    0x419f2f
  41a27f:	mov    rax,QWORD PTR [rsp+0x50]
  41a284:	mov    rcx,r15
  41a287:	mov    QWORD PTR [rsp+0x58],r8
  41a28c:	lea    rax,[rax+r8*1+0x40]
  41a291:	mov    rdx,rax
  41a294:	mov    QWORD PTR [rsp+0x50],rax
  41a299:	call   0x43bb70
  41a29e:	mov    r8,QWORD PTR [rsp+0x58]
  41a2a3:	mov    r15,rax
  41a2a6:	jmp    0x41a24b
  41a2a8:	xor    esi,esi
  41a2aa:	jmp    0x41a270
  41a2ac:	mov    rcx,QWORD PTR [rsp+0x48]
  41a2b1:	lea    edx,[rax+0x1]
  41a2b4:	call   0x439960
  41a2b9:	mov    rcx,QWORD PTR [r13+0x148]
  41a2c0:	jmp    0x419f87
  41a2c5:	lea    r8,[rip+0x36284]        # 0x450550
  41a2cc:	mov    edx,0x3
  41a2d1:	mov    rcx,r13
  41a2d4:	call   0x414b60
  41a2d9:	mov    rcx,r13
  41a2dc:	call   0x413e30
  41a2e1:	cmp    BYTE PTR [rax+0x54],0x0
  41a2e5:	jne    0x41a129
  41a2eb:	lea    r8,[rip+0x36296]        # 0x450588
  41a2f2:	mov    edx,0x3
  41a2f7:	mov    rcx,r13
  41a2fa:	call   0x414b60
  41a2ff:	jmp    0x41a129
  41a304:	or     BYTE PTR [r13+0x180],0x2
  41a30c:	jmp    0x419fbe
  41a311:	mov    BYTE PTR [rsp+0x2f],0x0
  41a316:	mov    BYTE PTR [rsp+0x2e],0x0
  41a31b:	jmp    0x41a087
  41a320:	mov    rax,QWORD PTR [rsp+0x20]
  41a325:	mov    rsi,r14
  41a328:	mov    QWORD PTR [rax],r14
  41a32b:	mov    rcx,QWORD PTR [r13+0x110]
  41a332:	mov    rdx,rax
  41a335:	call   0x4390c0
  41a33a:	jmp    0x419bd9
  41a33f:	nop
  41a340:	push   r15
  41a342:	push   r14
  41a344:	push   r13
  41a346:	push   r12
  41a348:	push   rbp
  41a349:	push   rdi
  41a34a:	push   rsi
  41a34b:	push   rbx
  41a34c:	sub    rsp,0x78
  41a350:	cmp    BYTE PTR [rdx+0x8a],0x0
  41a357:	mov    rsi,rcx
  41a35a:	mov    rbx,rdx
  41a35d:	mov    r12d,r8d
  41a360:	jne    0x41a3b3
  41a362:	test   r8b,r8b
  41a365:	jne    0x41a3d0
  41a367:	mov    rax,QWORD PTR [rbx+0x38]
  41a36b:	test   rax,rax
  41a36e:	je     0x41a37b
  41a370:	movzx  eax,BYTE PTR [rax+0x18]
  41a374:	and    eax,0x3f
  41a377:	cmp    al,0x1
  41a379:	je     0x41a3b3
  41a37b:	mov    rdx,QWORD PTR [rbx+0x10]
  41a37f:	test   rdx,rdx
  41a382:	je     0x41a3f0
  41a384:	mov    r9,QWORD PTR [rbx+0x8]
  41a388:	mov    r8d,DWORD PTR [rbx+0x80]
  41a38f:	mov    rcx,rsi
  41a392:	call   QWORD PTR [rsi+0x3b0]
  41a398:	mov    rcx,QWORD PTR [rbx+0x10]
  41a39c:	mov    DWORD PTR [rbx+0x80],0xffffffff
  41a3a6:	call   0x4494c8
  41a3ab:	mov    QWORD PTR [rbx+0x10],0x0
  41a3b3:	xor    ebp,ebp
  41a3b5:	mov    eax,ebp
  41a3b7:	add    rsp,0x78
  41a3bb:	pop    rbx
  41a3bc:	pop    rsi
  41a3bd:	pop    rdi
  41a3be:	pop    rbp
  41a3bf:	pop    r12
  41a3c1:	pop    r13
  41a3c3:	pop    r14
  41a3c5:	pop    r15
  41a3c7:	ret    
  41a3c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a3d0:	cmp    WORD PTR [rdx+0x88],0x0
  41a3d8:	mov    BYTE PTR [rcx+0x189],0x1
  41a3df:	mov    BYTE PTR [rdx+0x8a],0x1
  41a3e6:	je     0x41a367
  41a3ec:	jmp    0x41a3b3
  41a3ee:	xchg   ax,ax
  41a3f0:	mov    rdx,rbx
  41a3f3:	mov    rcx,rsi
  41a3f6:	mov    DWORD PTR [rsp+0x3c],r8d
  41a3fb:	call   0x419560
  41a400:	test   al,al
  41a402:	mov    ebp,eax
  41a404:	mov    r8d,DWORD PTR [rsp+0x3c]
  41a409:	je     0x41a3b3
  41a40b:	mov    rax,QWORD PTR [rip+0x4813e]        # 0x462550
  41a412:	test   rax,rax
  41a415:	je     0x41a4c1
  41a41b:	test   r8b,r8b
  41a41e:	jne    0x41a47d
  41a420:	cmp    BYTE PTR [rax+0x8],0x0
  41a424:	je     0x41a4c1
  41a42a:	mov    rdx,QWORD PTR [rbx+0x60]
  41a42e:	lea    rdi,[rip+0xfffffffffffff0ab]        # 0x4194e0
  41a435:	lea    rcx,[rsp+0x40]
  41a43a:	mov    r9d,0x20
  41a440:	mov    BYTE PTR [rsp+0x58],0x0
  41a445:	mov    QWORD PTR [rsp+0x60],rbx
  41a44a:	mov    QWORD PTR [rsp+0x20],rdi
  41a44f:	mov    r8,QWORD PTR [rax]
  41a452:	mov    QWORD PTR [rsp+0x40],rdx
  41a457:	lea    rdx,[rax+0x10]
  41a45b:	mov    BYTE PTR [rsp+0x59],0x0
  41a460:	call   0x449530
  41a465:	test   rax,rax
  41a468:	je     0x41a4c1
  41a46a:	mov    BYTE PTR [rsi+0x189],0x1
  41a471:	mov    BYTE PTR [rbx+0x8a],0x1
  41a478:	jmp    0x41a3b3
  41a47d:	mov    rdx,QWORD PTR [rbx+0x60]
  41a481:	lea    rdi,[rip+0xfffffffffffff058]        # 0x4194e0
  41a488:	lea    rcx,[rsp+0x40]
  41a48d:	mov    r9d,0x20
  41a493:	mov    BYTE PTR [rsp+0x58],0x0
  41a498:	mov    QWORD PTR [rsp+0x60],rbx
  41a49d:	mov    QWORD PTR [rsp+0x20],rdi
  41a4a2:	mov    r8,QWORD PTR [rax]
  41a4a5:	mov    QWORD PTR [rsp+0x40],rdx
  41a4aa:	lea    rdx,[rax+0x10]
  41a4ae:	mov    BYTE PTR [rsp+0x59],0x1
  41a4b3:	call   0x449530
  41a4b8:	test   rax,rax
  41a4bb:	jne    0x41a3b3
  41a4c1:	cmp    BYTE PTR [rsi+0x189],0x0
  41a4c8:	je     0x41a590
  41a4ce:	mov    rdi,QWORD PTR [rsi+0x100]
  41a4d5:	test   rdi,rdi
  41a4d8:	jne    0x41a4ed
  41a4da:	jmp    0x41a590
  41a4df:	nop
  41a4e0:	mov    rdi,QWORD PTR [rdi+0x20]
  41a4e4:	test   rdi,rdi
  41a4e7:	je     0x41a590
  41a4ed:	cmp    rbx,rdi
  41a4f0:	je     0x41a4e0
  41a4f2:	test   r12b,r12b
  41a4f5:	jne    0x41a500
  41a4f7:	cmp    BYTE PTR [rdi+0x8a],0x0
  41a4fe:	je     0x41a4e0
  41a500:	mov    eax,DWORD PTR [rdi+0x84]
  41a506:	test   eax,eax
  41a508:	jne    0x41a4e0
  41a50a:	mov    rax,QWORD PTR [rbx+0x70]
  41a50e:	cmp    QWORD PTR [rdi+0x70],rax
  41a512:	jne    0x41a4e0
  41a514:	mov    rax,QWORD PTR [rbx+0x60]
  41a518:	cmp    QWORD PTR [rdi+0x60],rax
  41a51c:	jne    0x41a4e0
  41a51e:	cmp    QWORD PTR [rdi+0x28],0x0
  41a523:	mov    r13,rdi
  41a526:	je     0x41a535
  41a528:	cmp    BYTE PTR [rdi+0x8d],0x0
  41a52f:	je     0x41a69e
  41a535:	mov    rdx,r13
  41a538:	mov    rcx,rsi
  41a53b:	call   0x419560
  41a540:	test   al,al
  41a542:	je     0x41a552
  41a544:	mov    r8,QWORD PTR [r13+0x60]
  41a548:	cmp    r8,QWORD PTR [rbx+0x60]
  41a54c:	je     0x41a6e9
  41a552:	cmp    QWORD PTR [rdi+0x28],0x0
  41a557:	je     0x41a4e0
  41a559:	cmp    BYTE PTR [rdi+0x8d],0x0
  41a560:	jne    0x41a4e0
  41a566:	mov    rcx,QWORD PTR [r13+0x30]
  41a56a:	mov    QWORD PTR [r13+0x8],0x0
  41a572:	call   0x4494c8
  41a577:	mov    rcx,QWORD PTR [r13+0x0]
  41a57b:	call   0x4494c8
  41a580:	mov    rcx,r13
  41a583:	call   0x4494c8
  41a588:	jmp    0x41a4e0
  41a58d:	nop    DWORD PTR [rax]
  41a590:	mov    rax,QWORD PTR [rsi]
  41a593:	test   rax,rax
  41a596:	je     0x41a692
  41a59c:	mov    rdx,QWORD PTR [rbx+0x40]
  41a5a0:	test   rdx,rdx
  41a5a3:	je     0x41a692
  41a5a9:	movzx  r12d,BYTE PTR [rax+0x6d]
  41a5ae:	movzx  eax,BYTE PTR [rdx+0x14]
  41a5b2:	cmp    r12b,al
  41a5b5:	jbe    0x41a680
  41a5bb:	movzx  edi,r12b
  41a5bf:	xor    edx,edx
  41a5c1:	test   edi,edi
  41a5c3:	setne  dl
  41a5c6:	cmp    DWORD PTR [rsi+0x468],edx
  41a5cc:	movzx  edx,WORD PTR [rbx+0x88]
  41a5d3:	jle    0x41a603
  41a5d5:	test   dx,dx
  41a5d8:	jne    0x41a603
  41a5da:	cmp    BYTE PTR [rbx+0x8c],0x0
  41a5e1:	je     0x41a5ec
  41a5e3:	cmp    BYTE PTR [rsi+0x46e],0x0
  41a5ea:	jne    0x41a603
  41a5ec:	mov    rdx,QWORD PTR [rbx+0x8]
  41a5f0:	mov    rcx,QWORD PTR [rsi+0x2a8]
  41a5f7:	call   0x41f5e0
  41a5fc:	movzx  edx,WORD PTR [rbx+0x88]
  41a603:	add    edx,0x1
  41a606:	mov    BYTE PTR [rbx+0x8d],0x0
  41a60d:	xor    r9d,r9d
  41a610:	mov    WORD PTR [rbx+0x88],dx
  41a617:	cmp    BYTE PTR [rsi+0x438],0x0
  41a61e:	je     0x41a630
  41a620:	movzx  r9d,BYTE PTR [rsi+0x494]
  41a628:	xor    r9d,0x1
  41a62c:	movzx  r9d,r9b
  41a630:	mov    rdx,QWORD PTR [rbx+0x28]
  41a634:	mov    r8,QWORD PTR [rbx+0x60]
  41a638:	mov    rcx,rsi
  41a63b:	call   0x413eb0
  41a640:	mov    BYTE PTR [rax+0x6d],r12b
  41a644:	mov    rdx,QWORD PTR [rbx+0x30]
  41a648:	mov    r9d,0x1
  41a64e:	mov    r8,QWORD PTR [rbx+0x8]
  41a652:	mov    QWORD PTR [rax+0x50],rbx
  41a656:	mov    rcx,rsi
  41a659:	mov    QWORD PTR [rax+0x28],rdx
  41a65d:	mov    BYTE PTR [rsi+0x1a0],0x1
  41a664:	xor    edx,edx
  41a666:	mov    QWORD PTR [rsi+0x190],0x0
  41a671:	mov    DWORD PTR [rsp+0x20],edi
  41a675:	call   0x4136d0
  41a67a:	jmp    0x41a3b5
  41a67f:	nop
  41a680:	movzx  edi,al
  41a683:	xor    edx,edx
  41a685:	mov    r12d,eax
  41a688:	test   edi,edi
  41a68a:	setne  dl
  41a68d:	jmp    0x41a5c6
  41a692:	xor    edi,edi
  41a694:	xor    r12d,r12d
  41a697:	xor    edx,edx
  41a699:	jmp    0x41a5c6
  41a69e:	mov    edx,0x90
  41a6a3:	mov    ecx,0x1
  41a6a8:	mov    r14,QWORD PTR [rdi]
  41a6ab:	mov    r15,QWORD PTR [rdi+0x40]
  41a6af:	call   0x43bb20
  41a6b4:	cmp    QWORD PTR [rsi],0x0
  41a6b8:	mov    r13,rax
  41a6bb:	mov    DWORD PTR [rax+0x80],0xffffffff
  41a6c5:	mov    QWORD PTR [rax+0x40],r15
  41a6c9:	mov    rcx,r14
  41a6cc:	sete   BYTE PTR [rax+0x8c]
  41a6d3:	call   0x43bbf0
  41a6d8:	mov    QWORD PTR [r13+0x0],rax
  41a6dc:	mov    rax,QWORD PTR [rdi+0x8]
  41a6e0:	mov    QWORD PTR [r13+0x8],rax
  41a6e4:	jmp    0x41a535
  41a6e9:	mov    rdx,QWORD PTR [rbx+0x28]
  41a6ed:	mov    rcx,QWORD PTR [r13+0x28]
  41a6f1:	call   0x449458
  41a6f6:	test   eax,eax
  41a6f8:	jne    0x41a552
  41a6fe:	cmp    QWORD PTR [rdi+0x28],0x0
  41a703:	je     0x41a3b3
  41a709:	cmp    BYTE PTR [rdi+0x8d],0x0
  41a710:	jne    0x41a3b3
  41a716:	mov    rcx,QWORD PTR [r13+0x30]
  41a71a:	mov    QWORD PTR [r13+0x8],0x0
  41a722:	call   0x4494c8
  41a727:	mov    rcx,QWORD PTR [r13+0x0]
  41a72b:	call   0x4494c8
  41a730:	mov    rcx,r13
  41a733:	call   0x4494c8
  41a738:	jmp    0x41a3b3
  41a73d:	nop    DWORD PTR [rax]
  41a740:	mov    BYTE PTR [rcx+0x189],0x1
  41a747:	mov    BYTE PTR [rdx+0x8a],0x1
  41a74e:	ret    
  41a74f:	nop
  41a750:	push   r12
  41a752:	push   rbp
  41a753:	push   rdi
  41a754:	push   rsi
  41a755:	push   rbx
  41a756:	sub    rsp,0x30
  41a75a:	mov    r12d,r8d
  41a75d:	mov    rsi,rcx
  41a760:	mov    rbp,rdx
  41a763:	mov    edi,r9d
  41a766:	call   0x419760
  41a76b:	test   rax,rax
  41a76e:	mov    r8,rax
  41a771:	je     0x41a7d2
  41a773:	cmp    edi,0x4
  41a776:	mov    DWORD PTR [rsp+0x20],r12d
  41a77b:	mov    rcx,rsi
  41a77e:	sete   bl
  41a781:	xor    r9d,r9d
  41a784:	movzx  edx,bl
  41a787:	mov    DWORD PTR [rsp+0x28],edx
  41a78b:	mov    rdx,rbp
  41a78e:	call   0x4199d0
  41a793:	test   rax,rax
  41a796:	sete   dl
  41a799:	and    bl,dl
  41a79b:	jne    0x41a7d2
  41a79d:	cmp    QWORD PTR [rax+0x10],0x0
  41a7a2:	je     0x41a7f3
  41a7a4:	xor    r8d,r8d
  41a7a7:	cmp    edi,0x2
  41a7aa:	mov    rdx,rax
  41a7ad:	sete   r8b
  41a7b1:	mov    rcx,rsi
  41a7b4:	call   0x41a340
  41a7b9:	test   al,al
  41a7bb:	jne    0x41a7e1
  41a7bd:	mov    rax,QWORD PTR [rsi+0x28]
  41a7c1:	add    DWORD PTR [rax+0x38],0x1
  41a7c5:	mov    eax,ebx
  41a7c7:	add    rsp,0x30
  41a7cb:	pop    rbx
  41a7cc:	pop    rsi
  41a7cd:	pop    rdi
  41a7ce:	pop    rbp
  41a7cf:	pop    r12
  41a7d1:	ret    
  41a7d2:	xor    ebx,ebx
  41a7d4:	mov    eax,ebx
  41a7d6:	add    rsp,0x30
  41a7da:	pop    rbx
  41a7db:	pop    rsi
  41a7dc:	pop    rdi
  41a7dd:	pop    rbp
  41a7de:	pop    r12
  41a7e0:	ret    
  41a7e1:	mov    ebx,0x1
  41a7e6:	mov    eax,ebx
  41a7e8:	add    rsp,0x30
  41a7ec:	pop    rbx
  41a7ed:	pop    rsi
  41a7ee:	pop    rdi
  41a7ef:	pop    rbp
  41a7f0:	pop    r12
  41a7f2:	ret    
  41a7f3:	mov    edx,DWORD PTR [rax+0x84]
  41a7f9:	test   edx,edx
  41a7fb:	jne    0x41a7a4
  41a7fd:	lea    edx,[rdi-0x3]
  41a800:	cmp    edx,0x1
  41a803:	jbe    0x41a7a4
  41a805:	mov    rdx,QWORD PTR [rsi+0x28]
  41a809:	sub    DWORD PTR [rdx+0x38],0x1
  41a80d:	jmp    0x41a7a4
  41a80f:	nop
  41a810:	push   rsi
  41a811:	push   rbx
  41a812:	sub    rsp,0x28
  41a816:	mov    rsi,rcx
  41a819:	mov    rcx,rdx
  41a81c:	mov    rbx,rdx
  41a81f:	call   0x4391e0
  41a824:	mov    rcx,QWORD PTR [rsi+0x110]
  41a82b:	mov    r8d,eax
  41a82e:	mov    rdx,rbx
  41a831:	call   0x438cc0
  41a836:	test   rax,rax
  41a839:	je     0x41a85d
  41a83b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a840:	cmp    QWORD PTR [rax+0x8],0x0
  41a845:	je     0x41a855
  41a847:	mov    rdx,QWORD PTR [rax+0x18]
  41a84b:	mov    edx,DWORD PTR [rdx+0x84]
  41a851:	test   edx,edx
  41a853:	je     0x41a864
  41a855:	mov    rax,QWORD PTR [rax]
  41a858:	test   rax,rax
  41a85b:	jne    0x41a840
  41a85d:	add    rsp,0x28
  41a861:	pop    rbx
  41a862:	pop    rsi
  41a863:	ret    
  41a864:	mov    eax,0x1
  41a869:	add    rsp,0x28
  41a86d:	pop    rbx
  41a86e:	pop    rsi
  41a86f:	ret    
  41a870:	push   rdi
  41a871:	push   rsi
  41a872:	push   rbx
  41a873:	sub    rsp,0x20
  41a877:	mov    rdi,rcx
  41a87a:	mov    rcx,rdx
  41a87d:	mov    rsi,rdx
  41a880:	mov    ebx,r8d
  41a883:	call   0x4391e0
  41a888:	mov    rcx,QWORD PTR [rdi+0x110]
  41a88f:	mov    r8d,eax
  41a892:	mov    rdx,rsi
  41a895:	call   0x438cc0
  41a89a:	test   rax,rax
  41a89d:	je     0x41a8c2
  41a89f:	nop
  41a8a0:	cmp    QWORD PTR [rax+0x8],0x0
  41a8a5:	je     0x41a8ba
  41a8a7:	mov    rdx,QWORD PTR [rax+0x18]
  41a8ab:	mov    edx,DWORD PTR [rdx+0x84]
  41a8b1:	test   edx,edx
  41a8b3:	jne    0x41a8ba
  41a8b5:	cmp    DWORD PTR [rax+0x10],ebx
  41a8b8:	jbe    0x41a8d0
  41a8ba:	mov    rax,QWORD PTR [rax]
  41a8bd:	test   rax,rax
  41a8c0:	jne    0x41a8a0
  41a8c2:	add    rsp,0x20
  41a8c6:	pop    rbx
  41a8c7:	pop    rsi
  41a8c8:	pop    rdi
  41a8c9:	ret    
  41a8ca:	nop    WORD PTR [rax+rax*1+0x0]
  41a8d0:	mov    eax,0x1
  41a8d5:	add    rsp,0x20
  41a8d9:	pop    rbx
  41a8da:	pop    rsi
  41a8db:	pop    rdi
  41a8dc:	ret    
  41a8dd:	nop    DWORD PTR [rax]
  41a8e0:	push   rdi
  41a8e1:	push   rsi
  41a8e2:	push   rbx
  41a8e3:	sub    rsp,0x30
  41a8e7:	mov    rsi,QWORD PTR [rip+0x405b2]        # 0x45aea0
  41a8ee:	mov    rdi,QWORD PTR [rip+0x4072b]        # 0x45b020
  41a8f5:	lea    r8,[rip+0xffffffffffffe504]        # 0x418e00
  41a8fc:	lea    rdx,[rip+0xffffffffffffe42d]        # 0x418d30
  41a903:	mov    rbx,rcx
  41a906:	xor    r9d,r9d
  41a909:	mov    ecx,0x7f
  41a90e:	mov    QWORD PTR [rsp+0x28],rsi
  41a913:	mov    QWORD PTR [rsp+0x20],rdi
  41a918:	call   0x438a40
  41a91d:	lea    r8,[rip+0xffffffffffffe4dc]        # 0x418e00
  41a924:	lea    rdx,[rip+0xffffffffffffe405]        # 0x418d30
  41a92b:	xor    r9d,r9d
  41a92e:	mov    QWORD PTR [rbx+0x110],rax
  41a935:	mov    QWORD PTR [rsp+0x28],rsi
  41a93a:	mov    ecx,0x7f
  41a93f:	mov    QWORD PTR [rsp+0x20],rdi
  41a944:	call   0x438a40
  41a949:	mov    ecx,0xff0
  41a94e:	mov    QWORD PTR [rbx+0x118],rax
  41a955:	call   0x43baf0
  41a95a:	mov    rdx,QWORD PTR [rbx+0x120]
  41a961:	lea    r8,[rip+0xffffffffffffe478]        # 0x418de0
  41a968:	mov    DWORD PTR [rax],0x0
  41a96e:	xor    r9d,r9d
  41a971:	mov    QWORD PTR [rbx+0x120],rax
  41a978:	mov    ecx,0x7f
  41a97d:	mov    QWORD PTR [rax+0x8],rdx
  41a981:	lea    rdx,[rip+0x1e858]        # 0x4391e0
  41a988:	mov    QWORD PTR [rsp+0x28],rsi
  41a98d:	mov    QWORD PTR [rsp+0x20],rdi
  41a992:	call   0x438a40
  41a997:	lea    rcx,[rbx+0x130]
  41a99e:	lea    r9,[rip+0x2114b]        # 0x43baf0
  41a9a5:	mov    QWORD PTR [rbx+0x128],rax
  41a9ac:	mov    QWORD PTR [rsp+0x20],rsi
  41a9b1:	xor    r8d,r8d
  41a9b4:	xor    edx,edx
  41a9b6:	call   0x439830
  41a9bb:	nop
  41a9bc:	add    rsp,0x30
  41a9c0:	pop    rbx
  41a9c1:	pop    rsi
  41a9c2:	pop    rdi
  41a9c3:	ret    
  41a9c4:	xchg   ax,ax
  41a9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a9d0:	push   rsi
  41a9d1:	push   rbx
  41a9d2:	sub    rsp,0x28
  41a9d6:	mov    rsi,rcx
  41a9d9:	mov    rcx,QWORD PTR [rcx+0x110]
  41a9e0:	call   0x438b00
  41a9e5:	mov    rcx,QWORD PTR [rsi+0x118]
  41a9ec:	call   0x438b00
  41a9f1:	mov    rcx,QWORD PTR [rsi+0x128]
  41a9f8:	call   0x438b00
  41a9fd:	lea    rcx,[rsi+0x130]
  41aa04:	xor    edx,edx
  41aa06:	call   0x439b90
  41aa0b:	mov    rcx,QWORD PTR [rsi+0x120]
  41aa12:	test   rcx,rcx
  41aa15:	je     0x41aa31
  41aa17:	nop    WORD PTR [rax+rax*1+0x0]
  41aa20:	mov    rbx,QWORD PTR [rcx+0x8]
  41aa24:	call   0x4494c8
  41aa29:	test   rbx,rbx
  41aa2c:	mov    rcx,rbx
  41aa2f:	jne    0x41aa20
  41aa31:	mov    rbx,QWORD PTR [rsi+0x100]
  41aa38:	test   rbx,rbx
  41aa3b:	je     0x41aa65
  41aa3d:	nop    DWORD PTR [rax]
  41aa40:	mov    rcx,QWORD PTR [rbx+0x30]
  41aa44:	mov    rsi,QWORD PTR [rbx+0x20]
  41aa48:	call   0x4494c8
  41aa4d:	mov    rcx,QWORD PTR [rbx]
  41aa50:	call   0x4494c8
  41aa55:	mov    rcx,rbx
  41aa58:	mov    rbx,rsi
  41aa5b:	call   0x4494c8
  41aa60:	test   rsi,rsi
  41aa63:	jne    0x41aa40
  41aa65:	add    rsp,0x28
  41aa69:	pop    rbx
  41aa6a:	pop    rsi
  41aa6b:	ret    
  41aa6c:	nop    DWORD PTR [rax+0x0]
  41aa70:	push   rbx
  41aa71:	sub    rsp,0x20
  41aa75:	mov    rbx,rcx
  41aa78:	call   0x41a9d0
  41aa7d:	mov    rcx,rbx
  41aa80:	mov    QWORD PTR [rbx+0x120],0x0
  41aa8b:	mov    QWORD PTR [rbx+0x100],0x0
  41aa96:	add    rsp,0x20
  41aa9a:	pop    rbx
  41aa9b:	jmp    0x41a8e0
  41aaa0:	sub    rsp,0x38
  41aaa4:	mov    rax,QWORD PTR [rcx]
  41aaa7:	mov    r9d,0x1
  41aaad:	mov    rax,QWORD PTR [rax+0x50]
  41aab1:	mov    r8,QWORD PTR [rax+0x40]
  41aab5:	mov    DWORD PTR [rsp+0x28],0x0
  41aabd:	mov    DWORD PTR [rsp+0x20],0x0
  41aac5:	call   0x4199d0
  41aaca:	nop
  41aacb:	add    rsp,0x38
  41aacf:	ret    
  41aad0:	sub    rsp,0x38
  41aad4:	mov    rax,rcx
  41aad7:	mov    rcx,QWORD PTR [rcx+0x28]
  41aadb:	mov    r9d,DWORD PTR [rcx+0xc]
  41aadf:	mov    rcx,QWORD PTR [rcx]
  41aae2:	sub    r9d,0x1
  41aae6:	test   edx,edx
  41aae8:	lea    r9,[r9+r9*4]
  41aaec:	lea    r10,[rcx+r9*8]
  41aaf0:	je     0x41ab40
  41aaf2:	cmp    r8d,0x1
  41aaf6:	sbb    edx,edx
  41aaf8:	add    edx,0x2
  41aafb:	cmp    r8d,0x1
  41aaff:	sbb    ecx,ecx
  41ab01:	add    ecx,0x2
  41ab04:	mov    r8,QWORD PTR [rax]
  41ab07:	mov    BYTE PTR [r8+0x6d],cl
  41ab0b:	mov    rcx,QWORD PTR [rax+0x28]
  41ab0f:	mov    r8,QWORD PTR [r10+0x8]
  41ab13:	mov    r9d,DWORD PTR [rcx+0x3c]
  41ab17:	movzx  ecx,BYTE PTR [r10+0x1c]
  41ab1c:	sub    r9d,DWORD PTR [r10]
  41ab1f:	shr    r9d,cl
  41ab22:	add    r9d,DWORD PTR [r10+0x10]
  41ab26:	mov    rcx,rax
  41ab29:	mov    DWORD PTR [rsp+0x20],edx
  41ab2d:	mov    edx,0x2
  41ab32:	call   0x4136d0
  41ab37:	nop
  41ab38:	add    rsp,0x38
  41ab3c:	ret    
  41ab3d:	nop    DWORD PTR [rax]
  41ab40:	xor    edx,edx
  41ab42:	xor    ecx,ecx
  41ab44:	jmp    0x41ab04
  41ab46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab50:	sub    rsp,0x38
  41ab54:	mov    r9d,0x1
  41ab5a:	mov    DWORD PTR [rsp+0x20],0x0
  41ab62:	call   0x4136d0
  41ab67:	nop
  41ab68:	add    rsp,0x38
  41ab6c:	ret    
  41ab6d:	nop    DWORD PTR [rax]
  41ab70:	push   rsi
  41ab71:	push   rbx
  41ab72:	sub    rsp,0x38
  41ab76:	mov    rbx,rcx
  41ab79:	mov    rcx,QWORD PTR [rcx+0x110]
  41ab80:	mov    QWORD PTR [rsp+0x20],0x0
  41ab89:	call   0x4388b0
  41ab8e:	mov    rcx,QWORD PTR [rbx+0x110]
  41ab95:	lea    r8,[rsp+0x20]
  41ab9a:	lea    rdx,[rip+0xffffffffffffe1af]        # 0x418d50
  41aba1:	mov    QWORD PTR [rsp+0x28],rax
  41aba6:	call   0x439160
  41abab:	mov    rcx,QWORD PTR [rsp+0x20]
  41abb0:	test   rcx,rcx
  41abb3:	je     0x41ac3a
  41abb9:	mov    rdx,QWORD PTR [rsp+0x28]
  41abbe:	lea    r9,[rip+0xffffffffffffe46b]        # 0x419030
  41abc5:	mov    r8d,0x8
  41abcb:	xor    ebx,ebx
  41abcd:	call   0x449430
  41abd2:	mov    rsi,QWORD PTR [rip+0x49b5b]        # 0x464734
  41abd9:	call   rsi
  41abdb:	lea    rcx,[rip+0x359ce]        # 0x4505b0
  41abe2:	lea    r9,[rax+0x60]
  41abe6:	mov    r8d,0x2b
  41abec:	mov    edx,0x1
  41abf1:	call   0x4494a8
  41abf6:	cmp    QWORD PTR [rsp+0x28],0x0
  41abfc:	je     0x41ac2f
  41abfe:	xchg   ax,ax
  41ac00:	call   rsi
  41ac02:	lea    rdx,[rax+0x60]
  41ac06:	mov    rax,QWORD PTR [rsp+0x20]
  41ac0b:	mov    rcx,QWORD PTR [rax+rbx*8]
  41ac0f:	add    rbx,0x1
  41ac13:	call   0x4494d8
  41ac18:	call   rsi
  41ac1a:	lea    rdx,[rax+0x60]
  41ac1e:	mov    ecx,0xa
  41ac23:	call   0x449438
  41ac28:	cmp    QWORD PTR [rsp+0x28],rbx
  41ac2d:	ja     0x41ac00
  41ac2f:	mov    rcx,QWORD PTR [rsp+0x20]
  41ac34:	call   0x4494c8
  41ac39:	nop
  41ac3a:	add    rsp,0x38
  41ac3e:	pop    rbx
  41ac3f:	pop    rsi
  41ac40:	ret    
  41ac41:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac50:	push   rdi
  41ac51:	push   rsi
  41ac52:	push   rbx
  41ac53:	sub    rsp,0x30
  41ac57:	xor    r9d,r9d
  41ac5a:	mov    edi,r8d
  41ac5d:	mov    rsi,rcx
  41ac60:	mov    rbx,rdx
  41ac63:	call   0x419760
  41ac68:	test   rax,rax
  41ac6b:	mov    r8,rax
  41ac6e:	je     0x41acd0
  41ac70:	xor    r9d,r9d
  41ac73:	mov    rdx,rbx
  41ac76:	mov    DWORD PTR [rsp+0x28],0x0
  41ac7e:	mov    DWORD PTR [rsp+0x20],edi
  41ac82:	mov    rcx,rsi
  41ac85:	call   0x4199d0
  41ac8a:	mov    rbx,rax
  41ac8d:	mov    eax,DWORD PTR [rax+0x84]
  41ac93:	test   eax,eax
  41ac95:	jne    0x41acd0
  41ac97:	mov    ecx,DWORD PTR [rbx+0x80]
  41ac9d:	cmp    ecx,0xffffffff
  41aca0:	je     0x41acb1
  41aca2:	call   0x4492f0
  41aca7:	mov    DWORD PTR [rbx+0x80],0xffffffff
  41acb1:	mov    rax,QWORD PTR [rsi]
  41acb4:	mov    rax,QWORD PTR [rax+0x50]
  41acb8:	mov    rax,QWORD PTR [rax+0x70]
  41acbc:	cmp    QWORD PTR [rbx+0x70],rax
  41acc0:	setg   al
  41acc3:	movzx  eax,al
  41acc6:	add    rsp,0x30
  41acca:	pop    rbx
  41accb:	pop    rsi
  41accc:	pop    rdi
  41accd:	ret    
  41acce:	xchg   ax,ax
  41acd0:	mov    eax,0xffffffff
  41acd5:	jmp    0x41acc6
  41acd7:	nop    WORD PTR [rax+rax*1+0x0]
  41ace0:	mov    r9d,0x3
  41ace6:	xor    r8d,r8d
  41ace9:	jmp    0x41a750
  41acee:	xchg   ax,ax
  41acf0:	mov    r9d,0x4
  41acf6:	mov    r8d,0x1
  41acfc:	jmp    0x41a750
  41ad01:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad10:	cmp    BYTE PTR [rcx+0x1a0],0x0
  41ad17:	je     0x41ad20
  41ad19:	cmp    QWORD PTR [rdx+0x38],0x0
  41ad1e:	je     0x41ad40
  41ad20:	test   r8,r8
  41ad23:	mov    BYTE PTR [rcx+0x1a0],0x0
  41ad2a:	je     0x41ad70
  41ad2c:	cmp    QWORD PTR [rdx+0x30],r8
  41ad30:	je     0x41ad50
  41ad32:	mov    rcx,r8
  41ad35:	jmp    0x4494c8
  41ad3a:	nop    WORD PTR [rax+rax*1+0x0]
  41ad40:	mov    rax,QWORD PTR [rcx+0x190]
  41ad47:	mov    QWORD PTR [rdx+0x38],rax
  41ad4b:	jmp    0x41ad20
  41ad4d:	nop    DWORD PTR [rax]
  41ad50:	mov    rcx,r8
  41ad53:	mov    QWORD PTR [rdx+0x30],0x0
  41ad5b:	mov    QWORD PTR [rdx+0x28],0x0
  41ad63:	mov    BYTE PTR [rdx+0x8d],0x0
  41ad6a:	jmp    0x4494c8
  41ad6f:	nop
  41ad70:	repz ret 
  41ad72:	nop    DWORD PTR [rax+0x0]
  41ad76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad80:	mov    rax,QWORD PTR [rcx]
  41ad83:	ret    
  41ad84:	xchg   ax,ax
  41ad86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad90:	lea    rax,[rcx+0x48]
  41ad94:	ret    
  41ad95:	nop
  41ad96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ada0:	push   rdi
  41ada1:	push   rsi
  41ada2:	push   rbx
  41ada3:	sub    rsp,0x20
  41ada7:	mov    rdi,rcx
  41adaa:	test   r9d,r9d
  41adad:	mov    rbx,rdx
  41adb0:	mov    QWORD PTR [rdi+0xb8],rdx
  41adb7:	mov    QWORD PTR [rdi+0xc0],rdx
  41adbe:	mov    rsi,r8
  41adc1:	setne  BYTE PTR [rcx+0x188]
  41adc8:	test   rdx,rdx
  41adcb:	jne    0x41add8
  41adcd:	jmp    0x41ae00
  41adcf:	nop
  41add0:	mov    rbx,QWORD PTR [rbx]
  41add3:	test   rbx,rbx
  41add6:	je     0x41ae00
  41add8:	mov    rcx,QWORD PTR [rbx+0x8]
  41addc:	mov    QWORD PTR [rbx+0x20],0x0
  41ade4:	call   0x4493c0
  41ade9:	cmp    rbx,rsi
  41adec:	mov    DWORD PTR [rbx+0x10],eax
  41adef:	jne    0x41add0
  41adf1:	mov    QWORD PTR [rdi+0xc0],rbx
  41adf8:	mov    rbx,QWORD PTR [rbx]
  41adfb:	test   rbx,rbx
  41adfe:	jne    0x41add8
  41ae00:	add    rsp,0x20
  41ae04:	pop    rbx
  41ae05:	pop    rsi
  41ae06:	pop    rdi
  41ae07:	ret    
  41ae08:	nop    DWORD PTR [rax+rax*1+0x0]
  41ae10:	mov    rax,QWORD PTR [rcx+0x8]
  41ae14:	ret    
  41ae15:	nop
  41ae16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae20:	mov    rax,QWORD PTR [rcx+0x40]
  41ae24:	ret    
  41ae25:	nop
  41ae26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae30:	mov    rax,QWORD PTR [rcx]
  41ae33:	ret    
  41ae34:	xchg   ax,ax
  41ae36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae40:	mov    rax,QWORD PTR [rcx+0x50]
  41ae44:	ret    
  41ae45:	nop
  41ae46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae50:	mov    rax,QWORD PTR [rcx+0x48]
  41ae54:	ret    
  41ae55:	nop
  41ae56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae60:	push   r14
  41ae62:	push   r13
  41ae64:	push   r12
  41ae66:	push   rbp
  41ae67:	push   rdi
  41ae68:	push   rsi
  41ae69:	push   rbx
  41ae6a:	sub    rsp,0x30
  41ae6e:	mov    rax,QWORD PTR [rcx+0x100]
  41ae75:	mov    rbp,rcx
  41ae78:	mov    r12,rdx
  41ae7b:	test   rax,rax
  41ae7e:	je     0x41b008
  41ae84:	xor    r8d,r8d
  41ae87:	nop    WORD PTR [rax+rax*1+0x0]
  41ae90:	mov    rax,QWORD PTR [rax+0x20]
  41ae94:	add    r8,0x1
  41ae98:	test   rax,rax
  41ae9b:	jne    0x41ae90
  41ae9d:	shl    r8,0x5
  41aea1:	lea    rdx,[r8+0x10]
  41aea5:	mov    ecx,0x1
  41aeaa:	call   0x43bb20
  41aeaf:	mov    rbx,QWORD PTR [rbp+0x100]
  41aeb6:	mov    rsi,rax
  41aeb9:	mov    QWORD PTR [rax],0x0
  41aec0:	mov    BYTE PTR [rax+0x8],0x0
  41aec4:	test   rbx,rbx
  41aec7:	je     0x41b033
  41aecd:	xor    edi,edi
  41aecf:	jmp    0x41af0d
  41aed1:	mov    rax,rdi
  41aed4:	mov    rdx,QWORD PTR [rbx+0x60]
  41aed8:	mov    rcx,QWORD PTR [rbx+0x28]
  41aedc:	shl    rax,0x5
  41aee0:	lea    r8,[rsi+rax*1+0x18]
  41aee5:	call   0x437880
  41aeea:	mov    rax,QWORD PTR [rbx+0x60]
  41aeee:	shl    rdi,0x5
  41aef2:	mov    QWORD PTR [rsi+rdi*1+0x10],rax
  41aef7:	mov    rdi,QWORD PTR [rsi]
  41aefa:	nop    WORD PTR [rax+rax*1+0x0]
  41af00:	mov    rbx,QWORD PTR [rbx+0x20]
  41af04:	test   rbx,rbx
  41af07:	je     0x41afb0
  41af0d:	cmp    BYTE PTR [rbx+0x8b],0x0
  41af14:	jne    0x41af00
  41af16:	mov    eax,DWORD PTR [rbx+0x84]
  41af1c:	test   eax,eax
  41af1e:	jne    0x41af00
  41af20:	cmp    WORD PTR [rbx+0x88],0x0
  41af28:	je     0x41af00
  41af2a:	movzx  edx,BYTE PTR [rbx+0x8a]
  41af31:	lea    rax,[rdi+0x1]
  41af35:	mov    QWORD PTR [rsi],rax
  41af38:	shl    rax,0x5
  41af3c:	mov    BYTE PTR [rsi+rax*1+0x8],dl
  41af40:	movzx  eax,BYTE PTR [rbx+0x8a]
  41af47:	or     BYTE PTR [rsi+0x8],al
  41af4a:	cmp    BYTE PTR [rbx+0x8d],0x0
  41af51:	jne    0x41aed1
  41af57:	mov    rcx,rbx
  41af5a:	mov    r14d,DWORD PTR [rbx+0x80]
  41af61:	call   0x419040
  41af66:	test   al,al
  41af68:	je     0x41b012
  41af6e:	mov    ecx,DWORD PTR [rbx+0x80]
  41af74:	lea    rdx,[rip+0x35661]        # 0x4505dc
  41af7b:	call   0x438500
  41af80:	mov    r13,rax
  41af83:	mov    rax,rdi
  41af86:	shl    rax,0x5
  41af8a:	mov    rcx,r13
  41af8d:	lea    rdx,[rsi+rax*1+0x18]
  41af92:	call   0x4378f0
  41af97:	mov    rcx,r13
  41af9a:	call   0x449518
  41af9f:	mov    DWORD PTR [rbx+0x80],r14d
  41afa6:	jmp    0x41aeea
  41afab:	nop    DWORD PTR [rax+rax*1+0x0]
  41afb0:	mov    rax,rdi
  41afb3:	shl    rax,0x5
  41afb7:	lea    rbx,[rax+0x10]
  41afbb:	lea    rcx,[rsi+0x10]
  41afbf:	lea    r9,[rip+0xffffffffffffe28a]        # 0x419250
  41afc6:	mov    r8d,0x20
  41afcc:	mov    rdx,rdi
  41afcf:	call   0x449430
  41afd4:	mov    rdx,rbx
  41afd7:	mov    r9,r12
  41afda:	mov    r8d,0x1
  41afe0:	mov    rcx,rsi
  41afe3:	call   0x4494a8
  41afe8:	cmp    rax,0x1
  41afec:	mov    rcx,rsi
  41afef:	sete   bl
  41aff2:	call   0x4494c8
  41aff7:	mov    eax,ebx
  41aff9:	add    rsp,0x30
  41affd:	pop    rbx
  41affe:	pop    rsi
  41afff:	pop    rdi
  41b000:	pop    rbp
  41b001:	pop    r12
  41b003:	pop    r13
  41b005:	pop    r14
  41b007:	ret    
  41b008:	mov    edx,0x10
  41b00d:	jmp    0x41aea5
  41b012:	xor    r8d,r8d
  41b015:	mov    rdx,rbx
  41b018:	mov    rcx,rbp
  41b01b:	mov    BYTE PTR [rsp+0x2f],al
  41b01f:	call   0x419160
  41b024:	mov    rcx,rsi
  41b027:	call   0x4494c8
  41b02c:	movzx  eax,BYTE PTR [rsp+0x2f]
  41b031:	jmp    0x41aff9
  41b033:	mov    ebx,0x10
  41b038:	xor    edi,edi
  41b03a:	jmp    0x41afbb
  41b03f:	nop
  41b040:	push   rbx
  41b041:	sub    rsp,0x50
  41b045:	mov    r8d,0x1
  41b04b:	lea    rcx,[rsp+0x20]
  41b050:	mov    r9,rdx
  41b053:	mov    rbx,rdx
  41b056:	mov    edx,0x10
  41b05b:	call   0x4494d0
  41b060:	xor    ecx,ecx
  41b062:	cmp    rax,0x1
  41b066:	je     0x41b070
  41b068:	mov    eax,ecx
  41b06a:	add    rsp,0x50
  41b06e:	pop    rbx
  41b06f:	ret    
  41b070:	mov    rax,QWORD PTR [rsp+0x20]
  41b075:	shl    rax,0x5
  41b079:	lea    rcx,[rax+0x10]
  41b07d:	call   0x43baf0
  41b082:	mov    rdx,QWORD PTR [rsp+0x28]
  41b087:	mov    r8,QWORD PTR [rsp+0x20]
  41b08c:	lea    rcx,[rax+0x10]
  41b090:	mov    r9,rbx
  41b093:	mov    QWORD PTR [rip+0x474b6],rax        # 0x462550
  41b09a:	mov    QWORD PTR [rax],r8
  41b09d:	mov    QWORD PTR [rax+0x8],rdx
  41b0a1:	mov    edx,0x20
  41b0a6:	call   0x4494d0
  41b0ab:	cmp    rax,QWORD PTR [rsp+0x20]
  41b0b0:	sete   cl
  41b0b3:	mov    eax,ecx
  41b0b5:	add    rsp,0x50
  41b0b9:	pop    rbx
  41b0ba:	ret    
  41b0bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b0c0:	push   rdi
  41b0c1:	push   rsi
  41b0c2:	push   rbx
  41b0c3:	sub    rsp,0x30
  41b0c7:	mov    edi,r8d
  41b0ca:	mov    rbx,rcx
  41b0cd:	mov    rsi,rdx
  41b0d0:	call   0x419760
  41b0d5:	xor    r9d,r9d
  41b0d8:	mov    r8,rax
  41b0db:	mov    DWORD PTR [rsp+0x28],0x0
  41b0e3:	mov    DWORD PTR [rsp+0x20],edi
  41b0e7:	mov    rdx,rsi
  41b0ea:	mov    rcx,rbx
  41b0ed:	call   0x4199d0
  41b0f2:	cmp    DWORD PTR [rax+0x84],0x2
  41b0f9:	setne  al
  41b0fc:	add    rsp,0x30
  41b100:	pop    rbx
  41b101:	pop    rsi
  41b102:	pop    rdi
  41b103:	ret    
  41b104:	nop
  41b105:	nop
  41b106:	nop
  41b107:	nop
  41b108:	nop
  41b109:	nop
  41b10a:	nop
  41b10b:	nop
  41b10c:	nop
  41b10d:	nop
  41b10e:	nop
  41b10f:	nop
  41b110:	push   rbx
  41b111:	sub    rsp,0x20
  41b115:	mov    rbx,QWORD PTR [rcx+0x78]
  41b119:	mov    r8,QWORD PTR [rbx+0x2d0]
  41b120:	mov    rdx,QWORD PTR [rbx+0x2c8]
  41b127:	mov    rax,r8
  41b12a:	sub    rax,rdx
  41b12d:	cmp    rax,0x27
  41b131:	jle    0x41b1c4
  41b137:	mov    rax,QWORD PTR [rbx+0x2c0]
  41b13e:	add    rdx,0x28
  41b142:	mov    QWORD PTR [rbx+0x2c8],rdx
  41b149:	cmp    rdx,rax
  41b14c:	je     0x41b1f0
  41b152:	movsxd r9,DWORD PTR [rbx+0x2e0]
  41b159:	mov    r10,r8
  41b15c:	mov    rcx,r9
  41b15f:	add    rdx,r9
  41b162:	not    ecx
  41b164:	movsxd rcx,ecx
  41b167:	and    rdx,rcx
  41b16a:	mov    rcx,QWORD PTR [rbx+0x2b8]
  41b171:	mov    r9,rdx
  41b174:	mov    QWORD PTR [rbx+0x2c8],rdx
  41b17b:	sub    r9,rcx
  41b17e:	sub    r10,rcx
  41b181:	cmp    r9,r10
  41b184:	jle    0x41b190
  41b186:	mov    QWORD PTR [rbx+0x2c8],r8
  41b18d:	mov    rdx,r8
  41b190:	mov    QWORD PTR [rbx+0x2c0],rdx
  41b197:	mov    QWORD PTR [rax],0x0
  41b19e:	mov    QWORD PTR [rax+0x8],0x0
  41b1a6:	mov    QWORD PTR [rax+0x10],0x0
  41b1ae:	mov    QWORD PTR [rax+0x18],0x0
  41b1b6:	mov    QWORD PTR [rax+0x20],0x0
  41b1be:	add    rsp,0x20
  41b1c2:	pop    rbx
  41b1c3:	ret    
  41b1c4:	lea    rcx,[rbx+0x2b0]
  41b1cb:	mov    edx,0x28
  41b1d0:	call   0x439960
  41b1d5:	mov    rdx,QWORD PTR [rbx+0x2c8]
  41b1dc:	mov    r8,QWORD PTR [rbx+0x2d0]
  41b1e3:	jmp    0x41b137
  41b1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b1f0:	or     BYTE PTR [rbx+0x300],0x2
  41b1f7:	jmp    0x41b152
  41b1fc:	nop    DWORD PTR [rax+0x0]
  41b200:	push   rsi
  41b201:	push   rbx
  41b202:	sub    rsp,0x38
  41b206:	test   rdx,rdx
  41b209:	mov    rbx,rcx
  41b20c:	mov    rsi,rdx
  41b20f:	je     0x41b321
  41b215:	mov    QWORD PTR [rsi+0x78],rbx
  41b219:	mov    rcx,rbx
  41b21c:	mov    QWORD PTR [rbx+0x3f8],rsi
  41b223:	call   0x414a30
  41b228:	mov    rcx,rbx
  41b22b:	call   0x413bf0
  41b230:	mov    rcx,QWORD PTR [rbx+0x3f8]
  41b237:	lea    rdx,[rip+0x353a2]        # 0x4505e0
  41b23e:	mov    r9d,0x1
  41b244:	mov    r8d,0x7
  41b24a:	call   0x41ff20
  41b24f:	mov    rcx,QWORD PTR [rbx+0x3f8]
  41b256:	lea    rdx,[rip+0x3538b]        # 0x4505e8
  41b25d:	mov    QWORD PTR [rbx+0x498],rax
  41b264:	mov    r9d,0x1
  41b26a:	mov    r8d,0x4
  41b270:	call   0x41ff20
  41b275:	mov    rcx,QWORD PTR [rbx+0x3f8]
  41b27c:	lea    rdx,[rip+0x3536a]        # 0x4505ed
  41b283:	mov    QWORD PTR [rbx+0x4a0],rax
  41b28a:	mov    r9d,0x1
  41b290:	mov    r8d,0x5
  41b296:	call   0x41ff20
  41b29b:	mov    rcx,QWORD PTR [rbx+0x3f8]
  41b2a2:	lea    rdx,[rip+0x3534a]        # 0x4505f3
  41b2a9:	mov    QWORD PTR [rbx+0x4a8],rax
  41b2b0:	mov    r9d,0x1
  41b2b6:	mov    r8d,0xb
  41b2bc:	call   0x41ff20
  41b2c1:	mov    QWORD PTR [rbx+0x4b0],rax
  41b2c8:	or     WORD PTR [rax+0x18],0x200
  41b2ce:	lea    rdx,[rip+0x3532a]        # 0x4505ff
  41b2d5:	mov    rcx,QWORD PTR [rbx+0x3f8]
  41b2dc:	mov    r9d,0x1
  41b2e2:	mov    r8d,0xf
  41b2e8:	call   0x41ff20
  41b2ed:	mov    rcx,QWORD PTR [rbx+0x3f8]
  41b2f4:	lea    rdx,[rip+0x35314]        # 0x45060f
  41b2fb:	mov    QWORD PTR [rbx+0x4b8],rax
  41b302:	mov    r9d,0x1
  41b308:	mov    r8d,0x14
  41b30e:	call   0x41ff20
  41b313:	mov    QWORD PTR [rbx+0x4c0],rax
  41b31a:	add    rsp,0x38
  41b31e:	pop    rbx
  41b31f:	pop    rsi
  41b320:	ret    
  41b321:	mov    BYTE PTR [rcx+0x4c8],0x1
  41b328:	mov    ecx,0xd
  41b32d:	call   0x41fb10
  41b332:	mov    rsi,rax
  41b335:	lea    rax,[rip+0xfffffffffffffdd4]        # 0x41b110
  41b33c:	lea    rcx,[rbx+0x2b0]
  41b343:	lea    r9,[rip+0x207a6]        # 0x43baf0
  41b34a:	xor    r8d,r8d
  41b34d:	xor    edx,edx
  41b34f:	mov    QWORD PTR [rsi+0x60],rax
  41b353:	mov    rax,QWORD PTR [rip+0x3fb46]        # 0x45aea0
  41b35a:	mov    QWORD PTR [rsp+0x20],rax
  41b35f:	call   0x439830
  41b364:	jmp    0x41b215
  41b369:	nop    DWORD PTR [rax+0x0]
  41b370:	push   rbx
  41b371:	sub    rsp,0x20
  41b375:	cmp    BYTE PTR [rcx+0x4c8],0x0
  41b37c:	jne    0x41b384
  41b37e:	add    rsp,0x20
  41b382:	pop    rbx
  41b383:	ret    
  41b384:	mov    rbx,rcx
  41b387:	mov    rcx,QWORD PTR [rcx+0x3f8]
  41b38e:	call   0x41fb80
  41b393:	lea    rcx,[rbx+0x2b0]
  41b39a:	xor    edx,edx
  41b39c:	add    rsp,0x20
  41b3a0:	pop    rbx
  41b3a1:	jmp    0x439b90
  41b3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b3b0:	mov    rcx,QWORD PTR [rcx+0x3f8]
  41b3b7:	mov    r9d,0x1
  41b3bd:	mov    r8d,r8d
  41b3c0:	jmp    0x41ff20
  41b3c5:	nop
  41b3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b3d0:	sub    rsp,0x28
  41b3d4:	mov    rcx,QWORD PTR [rcx+0x3f8]
  41b3db:	xor    r9d,r9d
  41b3de:	movsxd r8,r8d
  41b3e1:	call   0x41ff20
  41b3e6:	test   rax,rax
  41b3e9:	je     0x41b400
  41b3eb:	movzx  eax,BYTE PTR [rax+0x18]
  41b3ef:	and    eax,0x3f
  41b3f2:	cmp    al,0x1
  41b3f4:	sete   al
  41b3f7:	movzx  eax,al
  41b3fa:	add    rsp,0x28
  41b3fe:	ret    
  41b3ff:	nop
  41b400:	xor    eax,eax
  41b402:	add    rsp,0x28
  41b406:	ret    
  41b407:	nop    WORD PTR [rax+rax*1+0x0]
  41b410:	mov    rcx,QWORD PTR [rcx+0x3f8]
  41b417:	jmp    0x41ff70
  41b41c:	nop
  41b41d:	nop
  41b41e:	nop
  41b41f:	nop
  41b420:	sub    rsp,0x18
  41b424:	movaps XMMWORD PTR [rsp],xmm6
  41b428:	mov    edx,0xffffffff
  41b42d:	mov    rax,rcx
  41b430:	and    ecx,0xf
  41b433:	and    rax,0xfffffffffffffff0
  41b437:	shl    edx,cl
  41b439:	movdqa xmm6,XMMWORD PTR [rip+0x35a7f]        # 0x450ec0
  41b441:	mov    ecx,edx
  41b443:	movdqa xmm5,XMMWORD PTR [rip+0x35a85]        # 0x450ed0
  41b44b:	movdqa xmm4,XMMWORD PTR [rip+0x35a8d]        # 0x450ee0
  41b453:	movdqa xmm3,XMMWORD PTR [rip+0x35a95]        # 0x450ef0
  41b45b:	movdqa xmm0,XMMWORD PTR [rax]
  41b45f:	jmp    0x41b46e
  41b461:	add    rax,0x10
  41b465:	movdqa xmm0,XMMWORD PTR [rax]
  41b469:	mov    ecx,0xffffffff
  41b46e:	movdqa xmm1,xmm0
  41b472:	movdqa xmm2,xmm0
  41b476:	pcmpeqb xmm1,xmm6
  41b47a:	pcmpeqb xmm2,xmm5
  41b47e:	por    xmm1,xmm2
  41b482:	movdqa xmm2,xmm0
  41b486:	pcmpeqb xmm0,xmm3
  41b48a:	pcmpeqb xmm2,xmm4
  41b48e:	por    xmm1,xmm2
  41b492:	por    xmm0,xmm1
  41b496:	pmovmskb edx,xmm0
  41b49a:	and    edx,ecx
  41b49c:	je     0x41b461
  41b49e:	tzcnt  edx,edx
  41b4a2:	movaps xmm6,XMMWORD PTR [rsp]
  41b4a6:	movsxd rdx,edx
  41b4a9:	add    rax,rdx
  41b4ac:	add    rsp,0x18
  41b4b0:	ret    
  41b4b1:	nop    DWORD PTR [rax+rax*1+0x0]
  41b4b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b4c0:	test   cl,0xf
  41b4c3:	mov    r8,rcx
  41b4c6:	jne    0x41b500
  41b4c8:	movdqa xmm0,XMMWORD PTR [rip+0x36160]        # 0x451630
  41b4d0:	mov    edx,0x10
  41b4d5:	mov    eax,0x4
  41b4da:	sub    r8,0x10
  41b4de:	xchg   ax,ax
  41b4e0:	add    r8,0x10
  41b4e4:	pcmpestri xmm0,XMMWORD PTR [r8],0x0
  41b4eb:	jae    0x41b4e0
  41b4ed:	lea    rax,[r8+rcx*1]
  41b4f1:	ret    
  41b4f2:	nop    DWORD PTR [rax+0x0]
  41b4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b500:	mov    rax,rdx
  41b503:	sub    rax,rcx
  41b506:	cmp    rax,0xf
  41b50a:	jle    0x41b540
  41b50c:	movdqa xmm0,XMMWORD PTR [rip+0x3611c]        # 0x451630
  41b514:	mov    eax,0x4
  41b519:	mov    edx,0x10
  41b51e:	pcmpestri xmm0,XMMWORD PTR [r8],0x0
  41b525:	movsxd rcx,ecx
  41b528:	cmp    rcx,0xf
  41b52c:	jbe    0x41b4ed
  41b52e:	lea    rax,[r8+0x10]
  41b532:	and    rax,0xfffffffffffffff0
  41b536:	mov    r8,rax
  41b539:	jmp    0x41b4d0
  41b53b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b540:	mov    rax,rcx
  41b543:	and    eax,0xfff
  41b548:	cmp    rax,0xff0
  41b54e:	jbe    0x41b50c
  41b550:	jmp    0x41b420
  41b555:	nop
  41b556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b560:	push   rsi
  41b561:	push   rbx
  41b562:	sub    rsp,0x38
  41b566:	mov    r10d,DWORD PTR [rcx+0x3c]
  41b56a:	cmp    r10d,DWORD PTR [rcx+0x40]
  41b56e:	mov    rbx,rcx
  41b571:	mov    rsi,rdx
  41b574:	je     0x41b5a0
  41b576:	mov    rcx,QWORD PTR [rcx+0x30]
  41b57a:	mov    eax,r10d
  41b57d:	add    r10d,0x1
  41b581:	shl    rax,0x4
  41b585:	lea    rax,[rcx+rax*1]
  41b589:	mov    QWORD PTR [rax],rsi
  41b58c:	mov    DWORD PTR [rax+0x8],r8d
  41b590:	mov    DWORD PTR [rbx+0x3c],r10d
  41b594:	add    rsp,0x38
  41b598:	pop    rbx
  41b599:	pop    rsi
  41b59a:	ret    
  41b59b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b5a0:	lea    edx,[r10+r10*1+0xc8]
  41b5a8:	mov    DWORD PTR [rsp+0x2c],r8d
  41b5ad:	mov    DWORD PTR [rcx+0x40],edx
  41b5b0:	mov    rcx,QWORD PTR [rcx+0x30]
  41b5b4:	shl    rdx,0x4
  41b5b8:	call   0x43bb70
  41b5bd:	mov    r10d,DWORD PTR [rbx+0x3c]
  41b5c1:	mov    QWORD PTR [rbx+0x30],rax
  41b5c5:	mov    rcx,rax
  41b5c8:	mov    r8d,DWORD PTR [rsp+0x2c]
  41b5cd:	jmp    0x41b57a
  41b5cf:	nop
  41b5d0:	sub    rsp,0x28
  41b5d4:	movzx  r8d,BYTE PTR [rdx]
  41b5d8:	mov    r11,rcx
  41b5db:	test   r8b,r8b
  41b5de:	mov    r9d,r8d
  41b5e1:	jns    0x41b6a3
  41b5e7:	xor    eax,eax
  41b5e9:	nop    DWORD PTR [rax+0x0]
  41b5f0:	add    r9d,r9d
  41b5f3:	add    eax,0x1
  41b5f6:	test   r9b,0x80
  41b5fa:	jne    0x41b5f0
  41b5fc:	mov    r9d,0x7f
  41b602:	mov    ecx,eax
  41b604:	sar    r9d,cl
  41b607:	and    r8d,r9d
  41b60a:	cmp    eax,0x1
  41b60d:	je     0x41b6ac
  41b613:	movzx  ecx,BYTE PTR [rdx+0x1]
  41b617:	shl    r8d,0x6
  41b61b:	lea    r9,[rdx+0x1]
  41b61f:	mov    r10d,ecx
  41b622:	and    ecx,0xc0
  41b628:	and    r10d,0x3f
  41b62c:	or     r8d,r10d
  41b62f:	add    ecx,0xffffff80
  41b632:	jne    0x41b6a7
  41b634:	lea    ecx,[rax-0x2]
  41b637:	lea    rcx,[rdx+rcx*1+0x1]
  41b63c:	jmp    0x41b661
  41b63e:	xchg   ax,ax
  41b640:	add    r9,0x1
  41b644:	movzx  edx,BYTE PTR [r9]
  41b648:	shl    r8d,0x6
  41b64c:	mov    r10d,edx
  41b64f:	and    edx,0xc0
  41b655:	and    r10d,0x3f
  41b659:	or     r8d,r10d
  41b65c:	add    edx,0xffffff80
  41b65f:	jne    0x41b6a7
  41b661:	cmp    r9,rcx
  41b664:	jne    0x41b640
  41b666:	cdqe   
  41b668:	lea    r9,[r11+0x2]
  41b66c:	lea    r10,[rip+0x34fcd]        # 0x450640
  41b673:	mov    BYTE PTR [r11],0x5c
  41b677:	mov    BYTE PTR [r11+0x1],0x55
  41b67c:	mov    ecx,0x1c
  41b681:	mov    edx,r8d
  41b684:	add    r9,0x1
  41b688:	shr    edx,cl
  41b68a:	sub    ecx,0x4
  41b68d:	and    edx,0xf
  41b690:	movzx  edx,BYTE PTR [r10+rdx*1]
  41b695:	mov    BYTE PTR [r9-0x1],dl
  41b699:	cmp    ecx,0xfffffffc
  41b69c:	jne    0x41b681
  41b69e:	add    rsp,0x28
  41b6a2:	ret    
  41b6a3:	xor    eax,eax
  41b6a5:	jmp    0x41b668
  41b6a7:	call   0x449548
  41b6ac:	mov    eax,0x1
  41b6b1:	jmp    0x41b668
  41b6b3:	nop    DWORD PTR [rax]
  41b6b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b6c0:	push   rsi
  41b6c1:	push   rbx
  41b6c2:	sub    rsp,0x28
  41b6c6:	mov    rax,QWORD PTR [rcx]
  41b6c9:	test   rax,rax
  41b6cc:	je     0x41b6d5
  41b6ce:	add    rsp,0x28
  41b6d2:	pop    rbx
  41b6d3:	pop    rsi
  41b6d4:	ret    
  41b6d5:	mov    rbx,rcx
  41b6d8:	mov    ecx,0x20
  41b6dd:	call   0x43baf0
  41b6e2:	mov    ecx,0x1770
  41b6e7:	mov    rsi,rax
  41b6ea:	mov    QWORD PTR [rbx],rax
  41b6ed:	mov    QWORD PTR [rax+0x8],rbx
  41b6f1:	call   0x43baf0
  41b6f6:	mov    QWORD PTR [rsi+0x10],rax
  41b6fa:	add    rax,0x1770
  41b700:	mov    QWORD PTR [rsi],0x0
  41b707:	mov    QWORD PTR [rsi+0x18],rax
  41b70b:	mov    rax,QWORD PTR [rbx]
  41b70e:	add    rsp,0x28
  41b712:	pop    rbx
  41b713:	pop    rsi
  41b714:	ret    
  41b715:	nop
  41b716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b720:	push   rsi
  41b721:	push   rbx
  41b722:	sub    rsp,0x38
  41b726:	mov    rsi,QWORD PTR [rcx]
  41b729:	mov    rax,QWORD PTR [rsi]
  41b72c:	movzx  r9d,BYTE PTR [rax]
  41b730:	cmp    r9b,0x24
  41b734:	je     0x41b760
  41b736:	cmp    r9b,0x5c
  41b73a:	sete   bl
  41b73d:	cmp    BYTE PTR [rcx+0x431],0x0
  41b744:	setne  r9b
  41b748:	and    bl,r9b
  41b74b:	jne    0x41b790
  41b74d:	mov    eax,ebx
  41b74f:	add    rsp,0x38
  41b753:	pop    rbx
  41b754:	pop    rsi
  41b755:	ret    
  41b756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b760:	xor    ebx,ebx
  41b762:	cmp    BYTE PTR [rcx+0x430],0x0
  41b769:	je     0x41b74d
  41b76b:	add    rax,0x1
  41b76f:	mov    QWORD PTR [rsi],rax
  41b772:	cmp    BYTE PTR [rcx+0x432],0x0
  41b779:	je     0x41b781
  41b77b:	cmp    BYTE PTR [rcx+0x12],0x0
  41b77f:	je     0x41b7d4
  41b781:	mov    ebx,0x1
  41b786:	mov    eax,ebx
  41b788:	add    rsp,0x38
  41b78c:	pop    rbx
  41b78d:	pop    rsi
  41b78e:	ret    
  41b78f:	nop
  41b790:	movzx  r9d,BYTE PTR [rax+0x1]
  41b795:	xor    ebx,ebx
  41b797:	and    r9d,0xffffffdf
  41b79b:	cmp    r9b,0x55
  41b79f:	jne    0x41b74d
  41b7a1:	add    rax,0x2
  41b7a5:	cmp    edx,0x1
  41b7a8:	mov    rdx,QWORD PTR [rsi+0x20]
  41b7ac:	mov    QWORD PTR [rsi],rax
  41b7af:	sbb    eax,eax
  41b7b1:	mov    QWORD PTR [rsp+0x20],r8
  41b7b6:	not    eax
  41b7b8:	lea    r9d,[rax+0x2]
  41b7bc:	mov    r8,rdx
  41b7bf:	mov    rdx,rsi
  41b7c2:	call   0x421670
  41b7c7:	test   eax,eax
  41b7c9:	jne    0x41b781
  41b7cb:	sub    QWORD PTR [rsi],0x2
  41b7cf:	jmp    0x41b74d
  41b7d4:	lea    r8,[rip+0x34e76]        # 0x450651
  41b7db:	mov    BYTE PTR [rcx+0x432],0x0
  41b7e2:	mov    edx,0x2
  41b7e7:	call   0x414b60
  41b7ec:	jmp    0x41b781
  41b7ee:	xchg   ax,ax
  41b7f0:	push   r13
  41b7f2:	push   r12
  41b7f4:	push   rbp
  41b7f5:	push   rdi
  41b7f6:	push   rsi
  41b7f7:	push   rbx
  41b7f8:	sub    rsp,0x38
  41b7fc:	mov    rax,QWORD PTR [rcx]
  41b7ff:	movzx  esi,BYTE PTR [rdx]
  41b802:	test   r8b,r8b
  41b805:	mov    rbp,rcx
  41b808:	mov    rdi,rdx
  41b80b:	mov    r12,r9
  41b80e:	mov    rbx,QWORD PTR [rax]
  41b811:	jne    0x41b880
  41b813:	movzx  edx,BYTE PTR [rbx]
  41b816:	mov    r13,QWORD PTR [rip+0x3f613]        # 0x45ae30
  41b81d:	sub    esi,0x71
  41b820:	test   WORD PTR [r13+rdx*2+0x0],0x204
  41b828:	mov    rax,rdx
  41b82b:	je     0x41b84b
  41b82d:	nop    DWORD PTR [rax]
  41b830:	add    rbx,0x1
  41b834:	movzx  edx,BYTE PTR [rbx]
  41b837:	imul   esi,esi,0x43
  41b83a:	test   WORD PTR [r13+rdx*2+0x0],0x204
  41b842:	lea    esi,[rsi+rax*1-0x71]
  41b846:	mov    rax,rdx
  41b849:	jne    0x41b830
  41b84b:	movzx  eax,BYTE PTR [rbx-0x1]
  41b84f:	mov    BYTE PTR [r12+0x4],0x0
  41b855:	xor    edx,edx
  41b857:	mov    r8,r12
  41b85a:	mov    rcx,rbp
  41b85d:	mov    DWORD PTR [r12],eax
  41b861:	mov    rax,QWORD PTR [rbp+0x0]
  41b865:	mov    QWORD PTR [rax],rbx
  41b868:	call   0x41b720
  41b86d:	test   al,al
  41b86f:	je     0x41b920
  41b875:	mov    rax,QWORD PTR [rbp+0x0]
  41b879:	mov    rax,QWORD PTR [rax]
  41b87c:	jmp    0x41b8a8
  41b87e:	xchg   ax,ax
  41b880:	mov    rax,rbx
  41b883:	mov    r13,QWORD PTR [rip+0x3f5a6]        # 0x45ae30
  41b88a:	jmp    0x41b8a8
  41b88c:	nop    DWORD PTR [rax+0x0]
  41b890:	xor    edx,edx
  41b892:	mov    r8,r12
  41b895:	mov    rcx,rbp
  41b898:	call   0x41b720
  41b89d:	test   al,al
  41b89f:	mov    rax,QWORD PTR [rbp+0x0]
  41b8a3:	je     0x41b8d0
  41b8a5:	mov    rax,QWORD PTR [rax]
  41b8a8:	movzx  r10d,BYTE PTR [rax]
  41b8ac:	test   WORD PTR [r13+r10*2+0x0],0x204
  41b8b4:	mov    rax,r10
  41b8b7:	je     0x41b890
  41b8b9:	mov    DWORD PTR [r12],eax
  41b8bd:	mov    BYTE PTR [r12+0x4],0x0
  41b8c3:	mov    rax,QWORD PTR [rbp+0x0]
  41b8c7:	add    QWORD PTR [rax],0x1
  41b8cb:	jmp    0x41b8a5
  41b8cd:	nop    DWORD PTR [rax]
  41b8d0:	mov    r8,QWORD PTR [rax]
  41b8d3:	mov    rdx,rdi
  41b8d6:	mov    rcx,rbp
  41b8d9:	sub    r8,rdi
  41b8dc:	call   0x425fd0
  41b8e1:	mov    rbx,rax
  41b8e4:	movzx  edx,WORD PTR [rbx+0x18]
  41b8e8:	shr    dx,0x6
  41b8ec:	test   dl,0x8
  41b8ef:	je     0x41b910
  41b8f1:	cmp    BYTE PTR [rbp+0x12],0x0
  41b8f5:	jne    0x41b910
  41b8f7:	and    edx,0x2
  41b8fa:	jne    0x41b946
  41b8fc:	cmp    QWORD PTR [rbp+0x4b0],rbx
  41b903:	je     0x41b97e
  41b905:	test   BYTE PTR [rbx+0x19],0x80
  41b909:	jne    0x41b965
  41b90b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b910:	mov    rax,rbx
  41b913:	add    rsp,0x38
  41b917:	pop    rbx
  41b918:	pop    rsi
  41b919:	pop    rdi
  41b91a:	pop    rbp
  41b91b:	pop    r12
  41b91d:	pop    r13
  41b91f:	ret    
  41b920:	sub    rbx,rdi
  41b923:	mov    rcx,QWORD PTR [rbp+0x3f8]
  41b92a:	mov    rdx,rdi
  41b92d:	lea    r9d,[rsi+rbx*1]
  41b931:	mov    r8d,ebx
  41b934:	mov    DWORD PTR [rsp+0x20],0x1
  41b93c:	call   0x41fbb0
  41b941:	mov    rbx,rax
  41b944:	jmp    0x41b8e4
  41b946:	cmp    BYTE PTR [rbp+0x17],0x0
  41b94a:	jne    0x41b8fc
  41b94c:	mov    r9,QWORD PTR [rbx]
  41b94f:	lea    r8,[rip+0x34d17]        # 0x45066d
  41b956:	mov    edx,0x3
  41b95b:	mov    rcx,rbp
  41b95e:	call   0x414b60
  41b963:	jmp    0x41b8fc
  41b965:	mov    r9,QWORD PTR [rbx]
  41b968:	lea    r8,[rip+0x34d69]        # 0x4506d8
  41b96f:	mov    edx,0xf
  41b974:	mov    rcx,rbp
  41b977:	call   0x414b90
  41b97c:	jmp    0x41b910
  41b97e:	cmp    BYTE PTR [rbp+0x16],0x0
  41b982:	jne    0x41b905
  41b984:	lea    r8,[rip+0x34d05]        # 0x450690
  41b98b:	mov    edx,0x2
  41b990:	mov    rcx,rbp
  41b993:	call   0x414b60
  41b998:	jmp    0x41b905
  41b99d:	nop    DWORD PTR [rax]
  41b9a0:	sub    rsp,0x38
  41b9a4:	movzx  r9d,BYTE PTR [rdx]
  41b9a8:	mov    r11,QWORD PTR [rip+0x3f481]        # 0x45ae30
  41b9af:	xor    eax,eax
  41b9b1:	test   BYTE PTR [r11+r9*2+0x1],0x2
  41b9b7:	je     0x41ba16
  41b9b9:	movzx  r10d,BYTE PTR [rdx+0x1]
  41b9be:	lea    eax,[r9-0x71]
  41b9c2:	lea    r8,[rdx+0x1]
  41b9c6:	test   WORD PTR [r11+r10*2],0x204
  41b9cd:	mov    r9,r10
  41b9d0:	je     0x41b9ee
  41b9d2:	add    r8,0x1
  41b9d6:	movzx  r10d,BYTE PTR [r8]
  41b9da:	imul   eax,eax,0x43
  41b9dd:	test   WORD PTR [r11+r10*2],0x204
  41b9e4:	lea    eax,[rax+r9*1-0x71]
  41b9e9:	mov    r9,r10
  41b9ec:	jne    0x41b9d2
  41b9ee:	sub    r8,rdx
  41b9f1:	mov    DWORD PTR [rsp+0x20],0x0
  41b9f9:	mov    rcx,QWORD PTR [rcx]
  41b9fc:	lea    r9d,[rax+r8*1]
  41ba00:	call   0x41fbb0
  41ba05:	test   rax,rax
  41ba08:	je     0x41ba20
  41ba0a:	movzx  eax,BYTE PTR [rax+0x18]
  41ba0e:	and    eax,0x3f
  41ba11:	cmp    al,0x1
  41ba13:	sete   al
  41ba16:	add    rsp,0x38
  41ba1a:	ret    
  41ba1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba20:	xor    eax,eax
  41ba22:	jmp    0x41ba16
  41ba24:	xchg   ax,ax
  41ba26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba30:	sub    rsp,0x28
  41ba34:	xor    eax,eax
  41ba36:	cmp    BYTE PTR [rcx+0x4],0x35
  41ba3a:	jne    0x41ba50
  41ba3c:	mov    rax,QWORD PTR [rcx+0x8]
  41ba40:	mov    rcx,QWORD PTR [rax]
  41ba43:	call   0x4493e0
  41ba48:	test   eax,eax
  41ba4a:	sete   al
  41ba4d:	movzx  eax,al
  41ba50:	add    rsp,0x28
  41ba54:	ret    
  41ba55:	nop
  41ba56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba60:	xor    eax,eax
  41ba62:	xchg   r8,rbx
  41ba65:	cpuid  
  41ba67:	xchg   r8,rbx
  41ba6a:	test   eax,eax
  41ba6c:	lea    r8,[rip+0xfffffffffffff9ad]        # 0x41b420
  41ba73:	je     0x41ba93
  41ba75:	mov    eax,0x1
  41ba7a:	xchg   r9,rbx
  41ba7d:	cpuid  
  41ba7f:	xchg   r9,rbx
  41ba82:	lea    rax,[rip+0xfffffffffffffa37]        # 0x41b4c0
  41ba89:	and    ecx,0x100000
  41ba8f:	cmovne r8,rax
  41ba93:	mov    QWORD PTR [rip+0x46ac6],r8        # 0x462560
  41ba9a:	ret    
  41ba9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41baa0:	push   r15
  41baa2:	push   r14
  41baa4:	push   r13
  41baa6:	push   r12
  41baa8:	push   rbp
  41baa9:	push   rdi
  41baaa:	push   rsi
  41baab:	push   rbx
  41baac:	sub    rsp,0x38
  41bab0:	mov    rsi,QWORD PTR [rcx]
  41bab3:	mov    r13,rcx
  41bab6:	test   BYTE PTR [rsi+0x6c],0x2
  41baba:	mov    rax,QWORD PTR [rsi+0x10]
  41babe:	mov    DWORD PTR [rsi+0x3c],0x0
  41bac5:	mov    DWORD PTR [rsi+0x38],0x0
  41bacc:	mov    BYTE PTR [rsi+0x68],0x0
  41bad0:	mov    QWORD PTR [rsi+0x8],rax
  41bad4:	mov    QWORD PTR [rsi],rax
  41bad7:	jne    0x41bb59
  41badd:	xor    ebp,ebp
  41badf:	mov    rdx,QWORD PTR [rsi+0x20]
  41bae3:	mov    rcx,rax
  41bae6:	call   QWORD PTR [rip+0x46a74]        # 0x462560
  41baec:	movzx  r8d,BYTE PTR [rax]
  41baf0:	cmp    r8b,0x5c
  41baf4:	je     0x41bb70
  41baf6:	cmp    r8b,0x3f
  41bafa:	je     0x41bb96
  41bb00:	mov    rdx,QWORD PTR [rsi+0x20]
  41bb04:	cmp    rdx,rax
  41bb07:	je     0x41bb66
  41bb09:	cmp    r8b,0xd
  41bb0d:	mov    rdi,rax
  41bb10:	je     0x41bba9
  41bb16:	test   rbp,rbp
  41bb19:	jne    0x41bbd0
  41bb1f:	lea    rdx,[rax+0x1]
  41bb23:	lea    rbx,[rdi+0x1]
  41bb27:	mov    BYTE PTR [rax],0xa
  41bb2a:	mov    r8d,0xa
  41bb30:	mov    rcx,rsi
  41bb33:	call   0x41b560
  41bb38:	mov    QWORD PTR [rsi+0x10],rbx
  41bb3c:	add    rsp,0x38
  41bb40:	pop    rbx
  41bb41:	pop    rsi
  41bb42:	pop    rdi
  41bb43:	pop    rbp
  41bb44:	pop    r12
  41bb46:	pop    r13
  41bb48:	pop    r14
  41bb4a:	pop    r15
  41bb4c:	ret    
  41bb4d:	nop    DWORD PTR [rax]
  41bb50:	cmp    dl,0xa
  41bb53:	je     0x41bb61
  41bb55:	add    rax,0x1
  41bb59:	movzx  edx,BYTE PTR [rax]
  41bb5c:	cmp    dl,0xd
  41bb5f:	jne    0x41bb50
  41bb61:	cmp    dl,0xd
  41bb64:	je     0x41bb80
  41bb66:	lea    rdx,[rax+0x1]
  41bb6a:	mov    rbx,rdx
  41bb6d:	jmp    0x41bb27
  41bb6f:	nop
  41bb70:	mov    rbp,rax
  41bb73:	add    rax,0x1
  41bb77:	jmp    0x41badf
  41bb7c:	nop    DWORD PTR [rax+0x0]
  41bb80:	cmp    QWORD PTR [rsi+0x20],rax
  41bb84:	je     0x41bb66
  41bb86:	cmp    BYTE PTR [rax+0x1],0xa
  41bb8a:	jne    0x41bb66
  41bb8c:	lea    rbx,[rax+0x2]
  41bb90:	lea    rdx,[rax+0x1]
  41bb94:	jmp    0x41bb27
  41bb96:	cmp    BYTE PTR [rax+0x1],0x3f
  41bb9a:	je     0x41bd6f
  41bba0:	add    rax,0x1
  41bba4:	jmp    0x41badf
  41bba9:	cmp    BYTE PTR [rax+0x1],0xa
  41bbad:	jne    0x41bb16
  41bbb3:	lea    rdi,[rax+0x1]
  41bbb7:	lea    rbx,[rax+0x2]
  41bbbb:	cmp    rdx,rdi
  41bbbe:	jne    0x41bb16
  41bbc4:	jmp    0x41bb27
  41bbc9:	nop    DWORD PTR [rax+0x0]
  41bbd0:	movzx  edx,BYTE PTR [rax-0x1]
  41bbd4:	mov    rcx,QWORD PTR [rip+0x3f255]        # 0x45ae30
  41bbdb:	test   BYTE PTR [rcx+rdx*2+0x1],0x8
  41bbe0:	je     0x41bdeb
  41bbe6:	mov    rbx,rax
  41bbe9:	nop    DWORD PTR [rax+0x0]
  41bbf0:	sub    rbx,0x1
  41bbf4:	movzx  edx,BYTE PTR [rbx-0x1]
  41bbf8:	test   BYTE PTR [rcx+rdx*2+0x1],0x8
  41bbfd:	jne    0x41bbf0
  41bbff:	lea    r12,[rbx-0x1]
  41bc03:	cmp    r12,rbp
  41bc06:	jne    0x41bb1f
  41bc0c:	cmp    rbx,rax
  41bc0f:	mov    r8d,0x20
  41bc15:	mov    eax,0x5c
  41bc1a:	cmove  r8d,eax
  41bc1e:	mov    rdx,r12
  41bc21:	mov    rcx,rsi
  41bc24:	call   0x41b560
  41bc29:	lea    rax,[rbx-0x2]
  41bc2d:	mov    QWORD PTR [rsi+0x10],r12
  41bc31:	movzx  edx,BYTE PTR [rdi+0x1]
  41bc35:	mov    r15,QWORD PTR [rip+0x3f1f4]        # 0x45ae30
  41bc3c:	mov    ebp,0x20
  41bc41:	mov    r12,QWORD PTR [rip+0x3f168]        # 0x45adb0
  41bc48:	nop    DWORD PTR [rax+rax*1+0x0]
  41bc50:	cmp    dl,0xd
  41bc53:	lea    rbx,[rdi+0x1]
  41bc57:	lea    r14,[rax+0x1]
  41bc5b:	mov    BYTE PTR [rax+0x1],dl
  41bc5e:	je     0x41bc88
  41bc60:	cmp    dl,0xa
  41bc63:	je     0x41bce0
  41bc65:	cmp    dl,0x3f
  41bc68:	je     0x41bd33
  41bc6e:	movzx  edx,BYTE PTR [rdi+0x2]
  41bc72:	mov    rax,r14
  41bc75:	mov    rdi,rbx
  41bc78:	lea    rbx,[rdi+0x1]
  41bc7c:	lea    r14,[rax+0x1]
  41bc80:	cmp    dl,0xd
  41bc83:	mov    BYTE PTR [rax+0x1],dl
  41bc86:	jne    0x41bc60
  41bc88:	mov    rdx,QWORD PTR [rsi+0x20]
  41bc8c:	cmp    rdx,rbx
  41bc8f:	je     0x41bddb
  41bc95:	cmp    BYTE PTR [rdi+0x2],0xa
  41bc99:	je     0x41bd66
  41bc9f:	mov    rdi,rbx
  41bca2:	mov    rdx,QWORD PTR [rsi+0x10]
  41bca6:	cmp    r14,rdx
  41bca9:	je     0x41bcd6
  41bcab:	movzx  ecx,BYTE PTR [rax]
  41bcae:	test   BYTE PTR [r15+rcx*2+0x1],0x8
  41bcb4:	je     0x41bdc4
  41bcba:	mov    rbx,r14
  41bcbd:	jmp    0x41bccd
  41bcbf:	nop
  41bcc0:	movzx  r8d,BYTE PTR [rbx-0x1]
  41bcc5:	test   BYTE PTR [r15+r8*2+0x1],0x8
  41bccb:	je     0x41bd00
  41bccd:	sub    rbx,0x1
  41bcd1:	cmp    rbx,rdx
  41bcd4:	jne    0x41bcc0
  41bcd6:	mov    rax,r14
  41bcd9:	jmp    0x41bb1f
  41bcde:	xchg   ax,ax
  41bce0:	mov    rdx,QWORD PTR [rsi+0x20]
  41bce4:	mov    rdi,rbx
  41bce7:	cmp    rdi,rdx
  41bcea:	jne    0x41bca2
  41bcec:	lea    rdx,[r14+0x1]
  41bcf0:	lea    rbx,[rdi+0x1]
  41bcf4:	mov    rax,r14
  41bcf7:	jmp    0x41bb27
  41bcfc:	nop    DWORD PTR [rax+0x0]
  41bd00:	cmp    r8b,0x5c
  41bd04:	jne    0x41bcd6
  41bd06:	cmp    r14,rbx
  41bd09:	mov    r8d,0x5c
  41bd0f:	cmovne r8d,ebp
  41bd13:	lea    r14,[rbx-0x1]
  41bd17:	mov    rcx,rsi
  41bd1a:	mov    rdx,r14
  41bd1d:	call   0x41b560
  41bd22:	mov    QWORD PTR [rsi+0x10],r14
  41bd26:	lea    rax,[rbx-0x2]
  41bd2a:	movzx  edx,BYTE PTR [rdi+0x1]
  41bd2e:	jmp    0x41bc50
  41bd33:	movzx  ecx,BYTE PTR [rdi+0x2]
  41bd37:	cmp    cl,0x3f
  41bd3a:	je     0x41bd49
  41bd3c:	mov    edx,ecx
  41bd3e:	mov    rax,r14
  41bd41:	mov    rdi,rbx
  41bd44:	jmp    0x41bc50
  41bd49:	movzx  ecx,BYTE PTR [rdi+0x3]
  41bd4d:	cmp    BYTE PTR [r12+rcx*1],0x0
  41bd52:	mov    r8,rcx
  41bd55:	jne    0x41be09
  41bd5b:	mov    rax,r14
  41bd5e:	mov    rdi,rbx
  41bd61:	jmp    0x41bc50
  41bd66:	add    rdi,0x2
  41bd6a:	jmp    0x41bce7
  41bd6f:	movzx  edx,BYTE PTR [rax+0x2]
  41bd73:	mov    rdi,QWORD PTR [rip+0x3f036]        # 0x45adb0
  41bd7a:	cmp    BYTE PTR [rdi+rdx*1],0x0
  41bd7e:	mov    r8,rdx
  41bd81:	je     0x41bba0
  41bd87:	mov    rdx,rax
  41bd8a:	mov    rcx,rsi
  41bd8d:	mov    QWORD PTR [rsp+0x28],rax
  41bd92:	call   0x41b560
  41bd97:	cmp    BYTE PTR [r13+0x41d],0x0
  41bd9f:	mov    rax,QWORD PTR [rsp+0x28]
  41bda4:	je     0x41bba0
  41bdaa:	movzx  edx,BYTE PTR [rax+0x2]
  41bdae:	mov    rdi,QWORD PTR [rip+0x3effb]        # 0x45adb0
  41bdb5:	movzx  edx,BYTE PTR [rdi+rdx*1]
  41bdb9:	lea    rdi,[rax+0x2]
  41bdbd:	mov    BYTE PTR [rax],dl
  41bdbf:	jmp    0x41bc31
  41bdc4:	cmp    cl,0x5c
  41bdc7:	jne    0x41bcec
  41bdcd:	mov    rbx,r14
  41bdd0:	mov    r8d,0x5c
  41bdd6:	jmp    0x41bd13
  41bddb:	mov    rax,r14
  41bdde:	lea    rdx,[r14+0x1]
  41bde2:	lea    rbx,[rdi+0x2]
  41bde6:	jmp    0x41bb27
  41bdeb:	lea    rdx,[rax-0x1]
  41bdef:	cmp    rbp,rdx
  41bdf2:	jne    0x41bb1f
  41bdf8:	mov    r12,rbp
  41bdfb:	mov    rbx,rax
  41bdfe:	mov    r8d,0x5c
  41be04:	jmp    0x41bc1e
  41be09:	mov    rdx,r14
  41be0c:	mov    rcx,rsi
  41be0f:	mov    QWORD PTR [rsp+0x28],rax
  41be14:	call   0x41b560
  41be19:	cmp    BYTE PTR [r13+0x41d],0x0
  41be21:	mov    rax,QWORD PTR [rsp+0x28]
  41be26:	je     0x41bc6e
  41be2c:	movzx  edx,BYTE PTR [rdi+0x3]
  41be30:	add    rdi,0x3
  41be34:	movzx  edx,BYTE PTR [r12+rdx*1]
  41be39:	mov    BYTE PTR [rax+0x1],dl
  41be3c:	mov    rax,r14
  41be3f:	movzx  edx,BYTE PTR [rdi+0x1]
  41be43:	jmp    0x41bc50
  41be48:	nop    DWORD PTR [rax+rax*1+0x0]
  41be50:	push   rsi
  41be51:	push   rbx
  41be52:	sub    rsp,0x38
  41be56:	mov    rdx,QWORD PTR [rcx]
  41be59:	mov    rsi,rcx
  41be5c:	jmp    0x41bea5
  41be5e:	xchg   ax,ax
  41be60:	mov    rcx,QWORD PTR [rdx+0x10]
  41be64:	mov    r8,QWORD PTR [rdx+0x20]
  41be68:	cmp    rcx,r8
  41be6b:	jb     0x41bed0
  41be6d:	cmp    BYTE PTR [rsi+0x19],0x0
  41be71:	jne    0x41bec0
  41be73:	cmp    r8,QWORD PTR [rdx+0x18]
  41be77:	movzx  ebx,BYTE PTR [rdx+0x6c]
  41be7b:	je     0x41be8b
  41be7d:	cmp    rcx,r8
  41be80:	jbe    0x41be8b
  41be82:	test   bl,0x2
  41be85:	jne    0x41be8b
  41be87:	mov    QWORD PTR [rdx+0x10],r8
  41be8b:	mov    rcx,rsi
  41be8e:	shr    bl,0x2
  41be91:	call   0x414000
  41be96:	mov    rdx,QWORD PTR [rsi]
  41be99:	and    ebx,0x1
  41be9c:	test   rdx,rdx
  41be9f:	je     0x41bec0
  41bea1:	test   bl,bl
  41bea3:	jne    0x41bec0
  41bea5:	movzx  eax,BYTE PTR [rdx+0x68]
  41bea9:	test   al,al
  41beab:	jne    0x41be60
  41bead:	mov    eax,0x1
  41beb2:	add    rsp,0x38
  41beb6:	pop    rbx
  41beb7:	pop    rsi
  41beb8:	ret    
  41beb9:	nop    DWORD PTR [rax+0x0]
  41bec0:	xor    eax,eax
  41bec2:	add    rsp,0x38
  41bec6:	pop    rbx
  41bec7:	pop    rsi
  41bec8:	ret    
  41bec9:	nop    DWORD PTR [rax+0x0]
  41bed0:	mov    rcx,rsi
  41bed3:	mov    BYTE PTR [rsp+0x2f],al
  41bed7:	call   0x41baa0
  41bedc:	movzx  eax,BYTE PTR [rsp+0x2f]
  41bee1:	add    rsp,0x38
  41bee5:	pop    rbx
  41bee6:	pop    rsi
  41bee7:	ret    
  41bee8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bef0:	push   r14
  41bef2:	push   r13
  41bef4:	push   r12
  41bef6:	push   rbp
  41bef7:	push   rdi
  41bef8:	push   rsi
  41bef9:	push   rbx
  41befa:	sub    rsp,0x40
  41befe:	mov    rsi,QWORD PTR [rcx]
  41bf01:	mov    rdi,QWORD PTR [rip+0x3eea8]        # 0x45adb0
  41bf08:	mov    r12,QWORD PTR [rip+0x3ef21]        # 0x45ae30
  41bf0f:	mov    r13,rcx
  41bf12:	mov    ebp,edx
  41bf14:	mov    r10,QWORD PTR [rsi+0x30]
  41bf18:	mov    eax,DWORD PTR [rsi+0x38]
  41bf1b:	mov    r8,QWORD PTR [rsi]
  41bf1e:	xchg   ax,ax
  41bf20:	mov    ebx,eax
  41bf22:	shl    rbx,0x4
  41bf26:	add    rbx,r10
  41bf29:	mov    rcx,QWORD PTR [rbx]
  41bf2c:	cmp    rcx,r8
  41bf2f:	ja     0x41c120
  41bf35:	mov    edx,DWORD PTR [rbx+0x8]
  41bf38:	lea    r9,[rcx+0x1]
  41bf3c:	add    eax,0x1
  41bf3f:	mov    DWORD PTR [rsi+0x38],eax
  41bf42:	mov    r14,r9
  41bf45:	sub    r14,QWORD PTR [rsi+0x8]
  41bf49:	cmp    edx,0x20
  41bf4c:	sete   r9b
  41bf50:	je     0x41bfd0
  41bf52:	cmp    edx,0x5c
  41bf55:	je     0x41bfd0
  41bf57:	mov    r9d,edx
  41bf5a:	movzx  r9d,BYTE PTR [rdi+r9*1]
  41bf5f:	test   r9b,r9b
  41bf62:	je     0x41bfc0
  41bf64:	cmp    BYTE PTR [r13+0x427],0x0
  41bf6c:	je     0x41bf20
  41bf6e:	test   ebp,ebp
  41bf70:	jne    0x41c080
  41bf76:	cmp    BYTE PTR [r13+0x41d],0x0
  41bf7e:	je     0x41c0e0
  41bf84:	mov    rax,QWORD PTR [r13+0x28]
  41bf88:	mov    rcx,r13
  41bf8b:	mov    r8d,DWORD PTR [rax+0x3c]
  41bf8f:	lea    rax,[rip+0x347cb]        # 0x450761
  41bf96:	mov    DWORD PTR [rsp+0x30],r9d
  41bf9b:	mov    DWORD PTR [rsp+0x28],edx
  41bf9f:	mov    r9d,r14d
  41bfa2:	mov    edx,0x4
  41bfa7:	mov    QWORD PTR [rsp+0x20],rax
  41bfac:	call   0x414c80
  41bfb1:	mov    r10,QWORD PTR [rsi+0x30]
  41bfb5:	mov    eax,DWORD PTR [rsi+0x38]
  41bfb8:	mov    r8,QWORD PTR [rsi]
  41bfbb:	jmp    0x41bf20
  41bfc0:	test   edx,edx
  41bfc2:	je     0x41bf20
  41bfc8:	call   0x449548
  41bfcd:	nop    DWORD PTR [rax]
  41bfd0:	test   ebp,ebp
  41bfd2:	jne    0x41bffa
  41bfd4:	test   r9b,r9b
  41bfd7:	je     0x41bffa
  41bfd9:	mov    rax,QWORD PTR [r13+0x28]
  41bfdd:	mov    r9d,r14d
  41bfe0:	xor    edx,edx
  41bfe2:	mov    rcx,r13
  41bfe5:	mov    r8d,DWORD PTR [rax+0x3c]
  41bfe9:	lea    rax,[rip+0x34720]        # 0x450710
  41bff0:	mov    QWORD PTR [rsp+0x20],rax
  41bff5:	call   0x414c40
  41bffa:	mov    rax,QWORD PTR [rsi+0x20]
  41bffe:	cmp    QWORD PTR [rsi+0x10],rax
  41c002:	ja     0x41c050
  41c004:	mov    r9,QWORD PTR [r13+0x28]
  41c008:	mov    rax,QWORD PTR [rbx]
  41c00b:	mov    QWORD PTR [rsi+0x8],rax
  41c00f:	mov    eax,DWORD PTR [r9+0xc]
  41c013:	sub    eax,0x1
  41c016:	lea    rdx,[rax+rax*4]
  41c01a:	mov    rax,QWORD PTR [r9]
  41c01d:	lea    rdx,[rax+rdx*8]
  41c021:	mov    eax,DWORD PTR [r9+0x3c]
  41c025:	movzx  ecx,BYTE PTR [rdx+0x1c]
  41c029:	sub    eax,DWORD PTR [rdx]
  41c02b:	mov    r8d,DWORD PTR [rdx+0x10]
  41c02f:	shr    eax,cl
  41c031:	mov    rcx,r9
  41c034:	lea    edx,[r8+rax*1+0x1]
  41c039:	xor    r8d,r8d
  41c03c:	call   0x40ad30
  41c041:	mov    r10,QWORD PTR [rsi+0x30]
  41c045:	mov    eax,DWORD PTR [rsi+0x38]
  41c048:	mov    r8,QWORD PTR [rsi]
  41c04b:	jmp    0x41bf20
  41c050:	mov    rax,QWORD PTR [r13+0x28]
  41c054:	mov    r9d,r14d
  41c057:	mov    edx,0x2
  41c05c:	mov    rcx,r13
  41c05f:	mov    r8d,DWORD PTR [rax+0x3c]
  41c063:	lea    rax,[rip+0x346d6]        # 0x450740
  41c06a:	mov    QWORD PTR [rsp+0x20],rax
  41c06f:	call   0x414c40
  41c074:	mov    rax,QWORD PTR [rsi+0x20]
  41c078:	mov    QWORD PTR [rsi+0x10],rax
  41c07c:	jmp    0x41c004
  41c07e:	xchg   ax,ax
  41c080:	cmp    edx,0x2f
  41c083:	jne    0x41bf20
  41c089:	cmp    BYTE PTR [r13+0x41d],0x0
  41c091:	jne    0x41c12f
  41c097:	movzx  r11d,BYTE PTR [rcx+0x3]
  41c09c:	lea    r9,[rcx+0x3]
  41c0a0:	test   BYTE PTR [r12+r11*2+0x1],0x8
  41c0a6:	mov    rcx,r11
  41c0a9:	je     0x41c0c3
  41c0ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41c0b0:	add    r9,0x1
  41c0b4:	movzx  r11d,BYTE PTR [r9]
  41c0b8:	test   BYTE PTR [r12+r11*2+0x1],0x8
  41c0be:	mov    rcx,r11
  41c0c1:	jne    0x41c0b0
  41c0c3:	cmp    cl,0xa
  41c0c6:	jne    0x41bf20
  41c0cc:	cmp    QWORD PTR [rbx+0x10],r9
  41c0d0:	jbe    0x41bf20
  41c0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c0e0:	mov    rax,QWORD PTR [r13+0x28]
  41c0e4:	mov    r9d,r14d
  41c0e7:	mov    rcx,r13
  41c0ea:	mov    r8d,DWORD PTR [rax+0x3c]
  41c0ee:	lea    rax,[rip+0x3468b]        # 0x450780
  41c0f5:	mov    DWORD PTR [rsp+0x28],edx
  41c0f9:	mov    edx,0x4
  41c0fe:	mov    QWORD PTR [rsp+0x20],rax
  41c103:	call   0x414c80
  41c108:	mov    r10,QWORD PTR [rsi+0x30]
  41c10c:	mov    eax,DWORD PTR [rsi+0x38]
  41c10f:	mov    r8,QWORD PTR [rsi]
  41c112:	jmp    0x41bf20
  41c117:	nop    WORD PTR [rax+rax*1+0x0]
  41c120:	add    rsp,0x40
  41c124:	pop    rbx
  41c125:	pop    rsi
  41c126:	pop    rdi
  41c127:	pop    rbp
  41c128:	pop    r12
  41c12a:	pop    r13
  41c12c:	pop    r14
  41c12e:	ret    
  41c12f:	cmp    rcx,QWORD PTR [rbx+0x10]
  41c133:	jne    0x41bf20
  41c139:	jmp    0x41bf84
  41c13e:	xchg   ax,ax
  41c140:	push   rbp
  41c141:	push   rdi
  41c142:	push   rsi
  41c143:	push   rbx
  41c144:	sub    rsp,0x38
  41c148:	mov    rdi,QWORD PTR [rcx]
  41c14b:	mov    rbp,rcx
  41c14e:	mov    rdx,QWORD PTR [rdi]
  41c151:	movzx  eax,BYTE PTR [rdx+0x1]
  41c155:	lea    rbx,[rdx+0x1]
  41c159:	cmp    al,0x2f
  41c15b:	jne    0x41c16d
  41c15d:	jmp    0x41c25b
  41c162:	cmp    al,0xa
  41c164:	je     0x41c1d0
  41c166:	movzx  eax,BYTE PTR [rbx+0x1]
  41c16a:	mov    rbx,rsi
  41c16d:	cmp    al,0x2f
  41c16f:	lea    rsi,[rbx+0x1]
  41c173:	jne    0x41c162
  41c175:	cmp    BYTE PTR [rbx-0x1],0x2a
  41c179:	je     0x41c240
  41c17f:	cmp    BYTE PTR [rbp+0x424],0x0
  41c186:	je     0x41c166
  41c188:	movzx  eax,BYTE PTR [rbx+0x1]
  41c18c:	cmp    al,0x2a
  41c18e:	jne    0x41c16a
  41c190:	cmp    BYTE PTR [rbx+0x2],0x2f
  41c194:	je     0x41c16a
  41c196:	mov    rax,QWORD PTR [rbp+0x28]
  41c19a:	mov    r9,rsi
  41c19d:	sub    r9,QWORD PTR [rdi+0x8]
  41c1a1:	mov    QWORD PTR [rdi],rsi
  41c1a4:	mov    edx,0x2
  41c1a9:	mov    rcx,rbp
  41c1ac:	mov    r8d,DWORD PTR [rax+0x3c]
  41c1b0:	lea    rax,[rip+0x345f9]        # 0x4507b0
  41c1b7:	mov    QWORD PTR [rsp+0x20],rax
  41c1bc:	call   0x414c80
  41c1c1:	movzx  eax,BYTE PTR [rbx+0x1]
  41c1c5:	jmp    0x41c16a
  41c1c7:	nop    WORD PTR [rax+rax*1+0x0]
  41c1d0:	mov    QWORD PTR [rdi],rbx
  41c1d3:	mov    edx,0x1
  41c1d8:	mov    rcx,rbp
  41c1db:	call   0x41bef0
  41c1e0:	mov    rax,QWORD PTR [rdi+0x20]
  41c1e4:	cmp    QWORD PTR [rdi+0x10],rax
  41c1e8:	jae    0x41c268
  41c1ea:	mov    rcx,rbp
  41c1ed:	call   0x41baa0
  41c1f2:	mov    r9,QWORD PTR [rbp+0x28]
  41c1f6:	mov    r8,QWORD PTR [rdi+0x10]
  41c1fa:	sub    r8d,DWORD PTR [rdi+0x8]
  41c1fe:	mov    eax,DWORD PTR [r9+0xc]
  41c202:	sub    eax,0x1
  41c205:	lea    rdx,[rax+rax*4]
  41c209:	mov    rax,QWORD PTR [r9]
  41c20c:	lea    rdx,[rax+rdx*8]
  41c210:	mov    eax,DWORD PTR [r9+0x3c]
  41c214:	movzx  ecx,BYTE PTR [rdx+0x1c]
  41c218:	sub    eax,DWORD PTR [rdx]
  41c21a:	mov    r10d,DWORD PTR [rdx+0x10]
  41c21e:	shr    eax,cl
  41c220:	mov    rcx,r9
  41c223:	lea    edx,[r10+rax*1+0x1]
  41c228:	call   0x40ad30
  41c22d:	mov    rsi,QWORD PTR [rdi]
  41c230:	movzx  eax,BYTE PTR [rsi]
  41c233:	jmp    0x41c16a
  41c238:	nop    DWORD PTR [rax+rax*1+0x0]
  41c240:	mov    QWORD PTR [rdi],rsi
  41c243:	mov    edx,0x1
  41c248:	mov    rcx,rbp
  41c24b:	call   0x41bef0
  41c250:	xor    eax,eax
  41c252:	add    rsp,0x38
  41c256:	pop    rbx
  41c257:	pop    rsi
  41c258:	pop    rdi
  41c259:	pop    rbp
  41c25a:	ret    
  41c25b:	lea    rbx,[rdx+0x2]
  41c25f:	movzx  eax,BYTE PTR [rdx+0x2]
  41c263:	jmp    0x41c16d
  41c268:	mov    eax,0x1
  41c26d:	add    rsp,0x38
  41c271:	pop    rbx
  41c272:	pop    rsi
  41c273:	pop    rdi
  41c274:	pop    rbp
  41c275:	ret    
  41c276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c280:	push   rsi
  41c281:	push   rbx
  41c282:	sub    rsp,0x38
  41c286:	movzx  eax,BYTE PTR [rdx]
  41c289:	mov    r11,QWORD PTR [rip+0x3eba0]        # 0x45ae30
  41c290:	mov    rbx,rcx
  41c293:	movzx  ecx,BYTE PTR [rdx+0x1]
  41c297:	lea    r8,[rdx+0x1]
  41c29b:	sub    eax,0x71
  41c29e:	test   WORD PTR [r11+rcx*2],0x204
  41c2a5:	mov    r9,rcx
  41c2a8:	je     0x41c2cc
  41c2aa:	nop    WORD PTR [rax+rax*1+0x0]
  41c2b0:	add    r8,0x1
  41c2b4:	movzx  r10d,BYTE PTR [r8]
  41c2b8:	imul   eax,eax,0x43
  41c2bb:	test   WORD PTR [r11+r10*2],0x204
  41c2c2:	lea    eax,[rax+r9*1-0x71]
  41c2c7:	mov    r9,r10
  41c2ca:	jne    0x41c2b0
  41c2cc:	sub    r8,rdx
  41c2cf:	mov    rcx,QWORD PTR [rbx+0x3f8]
  41c2d6:	mov    DWORD PTR [rsp+0x20],0x1
  41c2de:	lea    r9d,[rax+r8*1]
  41c2e2:	mov    r8d,r8d
  41c2e5:	call   0x41fbb0
  41c2ea:	movzx  edx,WORD PTR [rax+0x18]
  41c2ee:	mov    rsi,rax
  41c2f1:	shr    dx,0x6
  41c2f5:	test   dl,0x8
  41c2f8:	je     0x41c314
  41c2fa:	cmp    BYTE PTR [rbx+0x12],0x0
  41c2fe:	jne    0x41c314
  41c300:	and    edx,0x2
  41c303:	jne    0x41c320
  41c305:	cmp    rsi,QWORD PTR [rbx+0x4b0]
  41c30c:	je     0x41c358
  41c30e:	test   BYTE PTR [rsi+0x19],0x80
  41c312:	jne    0x41c33f
  41c314:	mov    rax,rsi
  41c317:	add    rsp,0x38
  41c31b:	pop    rbx
  41c31c:	pop    rsi
  41c31d:	ret    
  41c31e:	xchg   ax,ax
  41c320:	cmp    BYTE PTR [rbx+0x17],0x0
  41c324:	jne    0x41c305
  41c326:	mov    r9,QWORD PTR [rsi]
  41c329:	lea    r8,[rip+0x3433d]        # 0x45066d
  41c330:	mov    edx,0x3
  41c335:	mov    rcx,rbx
  41c338:	call   0x414b60
  41c33d:	jmp    0x41c305
  41c33f:	mov    r9,QWORD PTR [rsi]
  41c342:	lea    r8,[rip+0x3438f]        # 0x4506d8
  41c349:	mov    edx,0xf
  41c34e:	mov    rcx,rbx
  41c351:	call   0x414b90
  41c356:	jmp    0x41c314
  41c358:	cmp    BYTE PTR [rbx+0x16],0x0
  41c35c:	jne    0x41c30e
  41c35e:	lea    r8,[rip+0x3432b]        # 0x450690
  41c365:	mov    edx,0x2
  41c36a:	mov    rcx,rbx
  41c36d:	call   0x414b60
  41c372:	jmp    0x41c30e
  41c374:	xchg   ax,ax
  41c376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c380:	lea    rax,[rcx+0x518]
  41c387:	ret    
  41c388:	nop    DWORD PTR [rax+rax*1+0x0]
  41c390:	push   rsi
  41c391:	push   rbx
  41c392:	sub    rsp,0x28
  41c396:	mov    edx,edx
  41c398:	mov    rsi,rcx
  41c39b:	lea    rbx,[rdx+rdx*2]
  41c39f:	shl    rbx,0x3
  41c3a3:	mov    rcx,rbx
  41c3a6:	call   0x43baf0
  41c3ab:	add    rbx,rax
  41c3ae:	mov    QWORD PTR [rsi+0x10],rax
  41c3b2:	mov    QWORD PTR [rsi],0x0
  41c3b9:	mov    QWORD PTR [rsi+0x18],rbx
  41c3bd:	add    rsp,0x28
  41c3c1:	pop    rbx
  41c3c2:	pop    rsi
  41c3c3:	ret    
  41c3c4:	xchg   ax,ax
  41c3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c3d0:	sub    rsp,0x28
  41c3d4:	mov    eax,DWORD PTR [rcx+0x30]
  41c3d7:	cmp    eax,0x1
  41c3da:	je     0x41c3f2
  41c3dc:	and    eax,0xfffffffd
  41c3df:	jne    0x41c409
  41c3e1:	mov    rax,QWORD PTR [rcx+0x18]
  41c3e5:	sub    rax,QWORD PTR [rcx+0x10]
  41c3e9:	shr    rax,0x3
  41c3ed:	add    rsp,0x28
  41c3f1:	ret    
  41c3f2:	mov    rax,QWORD PTR [rcx+0x18]
  41c3f6:	sub    rax,QWORD PTR [rcx+0x10]
  41c3fa:	sar    rax,0x3
  41c3fe:	imul   eax,eax,0xaaaaaaab
  41c404:	add    rsp,0x28
  41c408:	ret    
  41c409:	call   0x449548
  41c40e:	nop
  41c40f:	nop
  41c410:	push   r12
  41c412:	push   rbp
  41c413:	push   rdi
  41c414:	push   rsi
  41c415:	push   rbx
  41c416:	sub    rsp,0x20
  41c41a:	movabs rax,0xaaaaaaaaaaaaaaab
  41c424:	mov    rsi,rcx
  41c427:	mov    rcx,QWORD PTR [rcx+0x1d0]
  41c42e:	mov    rdi,QWORD PTR [rsi+0x1a8]
  41c435:	mov    ebp,DWORD PTR [rsi+0x1d8]
  41c43b:	mov    rbx,QWORD PTR [rcx+0x18]
  41c43f:	sub    rbx,rdi
  41c442:	sar    rbx,0x3
  41c446:	imul   rbx,rax
  41c44a:	test   rbp,rbp
  41c44d:	je     0x41c480
  41c44f:	cmp    rbx,rbp
  41c452:	mov    rdx,rdi
  41c455:	jle    0x41c4b0
  41c457:	sub    rbx,0x1
  41c45b:	lea    rcx,[rdx+0x18]
  41c45f:	cmp    rbx,rbp
  41c462:	cmovg  rbx,rbp
  41c466:	lea    r8,[rbx+rbx*2]
  41c46a:	shl    r8,0x3
  41c46e:	call   0x449448
  41c473:	mov    rax,QWORD PTR [rsi+0x1a8]
  41c47a:	jmp    0x41c48e
  41c47c:	nop    DWORD PTR [rax+0x0]
  41c480:	mov    rax,rdi
  41c483:	test   rbx,rbx
  41c486:	jne    0x41c48e
  41c488:	cmp    QWORD PTR [rcx+0x18],rax
  41c48c:	je     0x41c4f3
  41c48e:	lea    rdx,[rax+0x18]
  41c492:	mov    QWORD PTR [rsi+0x1a8],rdx
  41c499:	mov    edx,DWORD PTR [rdi-0x18]
  41c49c:	mov    DWORD PTR [rax],edx
  41c49e:	add    rsp,0x20
  41c4a2:	pop    rbx
  41c4a3:	pop    rsi
  41c4a4:	pop    rdi
  41c4a5:	pop    rbp
  41c4a6:	pop    r12
  41c4a8:	ret    
  41c4a9:	nop    DWORD PTR [rax+0x0]
  41c4b0:	call   0x41b6c0
  41c4b5:	cmp    rbx,rbp
  41c4b8:	mov    r12,rax
  41c4bb:	jl     0x41c505
  41c4bd:	mov    rcx,QWORD PTR [rsi+0x1d0]
  41c4c4:	mov    rax,QWORD PTR [r12+0x10]
  41c4c9:	cmp    rbx,0x1
  41c4cd:	mov    rdx,QWORD PTR [rcx+0x18]
  41c4d1:	mov    r8,QWORD PTR [rdx-0x18]
  41c4d5:	mov    QWORD PTR [rax],r8
  41c4d8:	mov    r8,QWORD PTR [rdx-0x10]
  41c4dc:	mov    QWORD PTR [rax+0x8],r8
  41c4e0:	mov    rdx,QWORD PTR [rdx-0x8]
  41c4e4:	mov    QWORD PTR [rax+0x10],rdx
  41c4e8:	jg     0x41c522
  41c4ea:	mov    rax,QWORD PTR [rsi+0x1a8]
  41c4f1:	jmp    0x41c483
  41c4f3:	call   0x41b6c0
  41c4f8:	mov    QWORD PTR [rsi+0x1d0],rax
  41c4ff:	mov    rax,QWORD PTR [rax+0x10]
  41c503:	jmp    0x41c48e
  41c505:	mov    rdx,QWORD PTR [rax+0x10]
  41c509:	mov    rax,rbp
  41c50c:	sub    rax,rbx
  41c50f:	lea    r8,[rax+rax*2]
  41c513:	lea    rcx,[rdx+0x18]
  41c517:	shl    r8,0x3
  41c51b:	call   0x449448
  41c520:	jmp    0x41c4bd
  41c522:	mov    rdx,QWORD PTR [rsi+0x1a8]
  41c529:	jmp    0x41c457
  41c52e:	xchg   ax,ax
  41c530:	cmp    BYTE PTR [rcx+0x10],0x0
  41c534:	jne    0x41c540
  41c536:	jmp    0x41be50
  41c53b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c540:	xor    eax,eax
  41c542:	ret    
  41c543:	nop    DWORD PTR [rax]
  41c546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c550:	movzx  eax,BYTE PTR [rcx+0x4]
  41c554:	lea    rdx,[rip+0x34b65]        # 0x4510c0
  41c55b:	shl    rax,0x4
  41c55f:	mov    eax,DWORD PTR [rdx+rax*1]
  41c562:	cmp    eax,0x1
  41c565:	je     0x41c580
  41c567:	cmp    eax,0x2
  41c56a:	jne    0x41c570
  41c56c:	mov    eax,DWORD PTR [rcx+0x8]
  41c56f:	ret    
  41c570:	mov    eax,0x6
  41c575:	ret    
  41c576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c580:	mov    rax,QWORD PTR [rcx+0x8]
  41c584:	mov    eax,DWORD PTR [rax+0x8]
  41c587:	lea    eax,[rax+rax*4]
  41c58a:	add    eax,eax
  41c58c:	ret    
  41c58d:	nop    DWORD PTR [rax]
  41c590:	push   rbp
  41c591:	push   rdi
  41c592:	push   rsi
  41c593:	push   rbx
  41c594:	sub    rsp,0x28
  41c598:	movzx  eax,BYTE PTR [rdx+0x4]
  41c59c:	mov    rdi,rdx
  41c59f:	lea    rdx,[rip+0x34b1a]        # 0x4510c0
  41c5a6:	mov    rbx,r8
  41c5a9:	mov    r8,rax
  41c5ac:	shl    rax,0x4
  41c5b0:	add    rax,rdx
  41c5b3:	mov    edx,DWORD PTR [rax]
  41c5b5:	cmp    edx,0x1
  41c5b8:	je     0x41c660
  41c5be:	jle    0x41c612
  41c5c0:	cmp    edx,0x2
  41c5c3:	je     0x41c5f0
  41c5c5:	cmp    edx,0x3
  41c5c8:	jne    0x41c5df
  41c5ca:	mov    r9,QWORD PTR [rax+0x8]
  41c5ce:	lea    r8,[rip+0x341ef]        # 0x4507c4
  41c5d5:	mov    edx,0x4
  41c5da:	call   0x414b60
  41c5df:	mov    rax,rbx
  41c5e2:	add    rsp,0x28
  41c5e6:	pop    rbx
  41c5e7:	pop    rsi
  41c5e8:	pop    rdi
  41c5e9:	pop    rbp
  41c5ea:	ret    
  41c5eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c5f0:	mov    r8d,DWORD PTR [rdi+0x8]
  41c5f4:	mov    rdx,QWORD PTR [rdi+0x10]
  41c5f8:	mov    rcx,rbx
  41c5fb:	call   0x449450
  41c600:	mov    eax,DWORD PTR [rdi+0x8]
  41c603:	add    rbx,rax
  41c606:	mov    rax,rbx
  41c609:	add    rsp,0x28
  41c60d:	pop    rbx
  41c60e:	pop    rsi
  41c60f:	pop    rdi
  41c610:	pop    rbp
  41c611:	ret    
  41c612:	test   edx,edx
  41c614:	jne    0x41c5df
  41c616:	movzx  edx,WORD PTR [rdi+0x6]
  41c61a:	test   dl,0x2
  41c61d:	jne    0x41c6c0
  41c623:	and    edx,0x10
  41c626:	jne    0x41c660
  41c628:	mov    rax,QWORD PTR [rax+0x8]
  41c62c:	lea    rdx,[rax+0x1]
  41c630:	movzx  eax,BYTE PTR [rax]
  41c633:	test   al,al
  41c635:	je     0x41c5df
  41c637:	nop    WORD PTR [rax+rax*1+0x0]
  41c640:	add    rbx,0x1
  41c644:	add    rdx,0x1
  41c648:	mov    BYTE PTR [rbx-0x1],al
  41c64b:	movzx  eax,BYTE PTR [rdx-0x1]
  41c64f:	test   al,al
  41c651:	jne    0x41c640
  41c653:	mov    rax,rbx
  41c656:	add    rsp,0x28
  41c65a:	pop    rbx
  41c65b:	pop    rsi
  41c65c:	pop    rdi
  41c65d:	pop    rbp
  41c65e:	ret    
  41c65f:	nop
  41c660:	test   r9b,r9b
  41c663:	mov    rax,QWORD PTR [rdi+0x8]
  41c667:	jne    0x41c6e0
  41c669:	mov    edx,DWORD PTR [rax+0x8]
  41c66c:	mov    rbp,QWORD PTR [rax]
  41c66f:	test   edx,edx
  41c671:	je     0x41c5df
  41c677:	xor    esi,esi
  41c679:	jmp    0x41c6a2
  41c67b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c680:	mov    rax,QWORD PTR [rax]
  41c683:	add    rbx,0x1
  41c687:	movzx  eax,BYTE PTR [rax+rsi*1]
  41c68b:	mov    BYTE PTR [rbx-0x1],al
  41c68e:	mov    rax,QWORD PTR [rdi+0x8]
  41c692:	add    rsi,0x1
  41c696:	mov    edx,DWORD PTR [rax+0x8]
  41c699:	cmp    rdx,rsi
  41c69c:	jbe    0x41c5df
  41c6a2:	lea    rdx,[rbp+rsi*1+0x0]
  41c6a7:	test   BYTE PTR [rdx],0x80
  41c6aa:	je     0x41c680
  41c6ac:	mov    rcx,rbx
  41c6af:	add    rbx,0xa
  41c6b3:	call   0x41b5d0
  41c6b8:	lea    rsi,[rax+rsi*1-0x1]
  41c6bd:	jmp    0x41c68e
  41c6bf:	nop
  41c6c0:	sub    r8d,0x25
  41c6c4:	lea    rax,[rip+0x34f35]        # 0x451600
  41c6cb:	movsxd r8,r8d
  41c6ce:	mov    rax,QWORD PTR [rax+r8*8]
  41c6d2:	jmp    0x41c62c
  41c6d7:	nop    WORD PTR [rax+rax*1+0x0]
  41c6e0:	mov    r8d,DWORD PTR [rax+0x8]
  41c6e4:	mov    rdx,QWORD PTR [rax]
  41c6e7:	mov    rcx,rbx
  41c6ea:	call   0x449450
  41c6ef:	mov    rax,QWORD PTR [rdi+0x8]
  41c6f3:	mov    eax,DWORD PTR [rax+0x8]
  41c6f6:	add    rbx,rax
  41c6f9:	jmp    0x41c5df
  41c6fe:	xchg   ax,ax
  41c700:	push   rbp
  41c701:	push   rdi
  41c702:	push   rsi
  41c703:	push   rbx
  41c704:	sub    rsp,0x48
  41c708:	mov    eax,DWORD PTR [r8]
  41c70b:	cmp    DWORD PTR [rcx+0x460],eax
  41c711:	jge    0x41c7b0
  41c717:	cmp    BYTE PTR [rcx+0x12],0x0
  41c71b:	jne    0x41c7b0
  41c721:	movzx  eax,BYTE PTR [rdx+0x4]
  41c725:	lea    r9,[rip+0x34994]        # 0x4510c0
  41c72c:	shl    rax,0x4
  41c730:	mov    eax,DWORD PTR [r9+rax*1]
  41c734:	cmp    eax,0x1
  41c737:	je     0x41c7d0
  41c73d:	cmp    eax,0x2
  41c740:	je     0x41c7c0
  41c742:	mov    eax,0x6
  41c747:	mov    rdi,rdx
  41c74a:	mov    rbx,rcx
  41c74d:	mov    rcx,rax
  41c750:	mov    rsi,r8
  41c753:	call   0x43baf0
  41c758:	xor    r9d,r9d
  41c75b:	mov    rbp,rax
  41c75e:	mov    r8,rax
  41c761:	mov    rdx,rdi
  41c764:	mov    rcx,rbx
  41c767:	call   0x41c590
  41c76c:	sub    rax,rbp
  41c76f:	cmp    DWORD PTR [rsi],0x1
  41c772:	mov    QWORD PTR [rsp+0x30],rbp
  41c777:	mov    DWORD PTR [rsp+0x28],eax
  41c77b:	je     0x41c7e1
  41c77d:	lea    rax,[rip+0x3406b]        # 0x4507ef
  41c784:	mov    QWORD PTR [rsp+0x20],rax
  41c789:	mov    r8d,DWORD PTR [rdi]
  41c78c:	mov    rcx,rbx
  41c78f:	xor    r9d,r9d
  41c792:	mov    edx,0x10
  41c797:	call   0x414c80
  41c79c:	mov    rcx,rbp
  41c79f:	add    rsp,0x48
  41c7a3:	pop    rbx
  41c7a4:	pop    rsi
  41c7a5:	pop    rdi
  41c7a6:	pop    rbp
  41c7a7:	jmp    0x4494c8
  41c7ac:	nop    DWORD PTR [rax+0x0]
  41c7b0:	add    rsp,0x48
  41c7b4:	pop    rbx
  41c7b5:	pop    rsi
  41c7b6:	pop    rdi
  41c7b7:	pop    rbp
  41c7b8:	ret    
  41c7b9:	nop    DWORD PTR [rax+0x0]
  41c7c0:	mov    eax,DWORD PTR [rdx+0x8]
  41c7c3:	jmp    0x41c747
  41c7c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c7d0:	mov    rax,QWORD PTR [rdx+0x8]
  41c7d4:	mov    eax,DWORD PTR [rax+0x8]
  41c7d7:	lea    eax,[rax+rax*4]
  41c7da:	add    eax,eax
  41c7dc:	jmp    0x41c747
  41c7e1:	lea    rax,[rip+0x33ff1]        # 0x4507d9
  41c7e8:	jmp    0x41c784
  41c7ea:	nop    WORD PTR [rax+rax*1+0x0]
  41c7f0:	test   dl,0x2
  41c7f3:	jne    0x41c810
  41c7f5:	and    edx,0x10
  41c7f8:	jne    0x41c822
  41c7fa:	movsxd rcx,ecx
  41c7fd:	lea    rax,[rip+0x348bc]        # 0x4510c0
  41c804:	shl    rcx,0x4
  41c808:	mov    rax,QWORD PTR [rax+rcx*1+0x8]
  41c80d:	ret    
  41c80e:	xchg   ax,ax
  41c810:	sub    ecx,0x25
  41c813:	lea    rax,[rip+0x34de6]        # 0x451600
  41c81a:	movsxd rcx,ecx
  41c81d:	mov    rax,QWORD PTR [rax+rcx*8]
  41c821:	ret    
  41c822:	jmp    0x426a20
  41c827:	nop    WORD PTR [rax+rax*1+0x0]
  41c830:	push   r12
  41c832:	push   rbp
  41c833:	push   rdi
  41c834:	push   rsi
  41c835:	push   rbx
  41c836:	sub    rsp,0x30
  41c83a:	movzx  eax,BYTE PTR [rcx+0x4]
  41c83e:	mov    rsi,rdx
  41c841:	lea    rdx,[rip+0x34878]        # 0x4510c0
  41c848:	mov    rdi,rcx
  41c84b:	mov    rcx,rax
  41c84e:	shl    rax,0x4
  41c852:	add    rax,rdx
  41c855:	mov    edx,DWORD PTR [rax]
  41c857:	cmp    edx,0x1
  41c85a:	je     0x41c8b0
  41c85c:	cmp    edx,0x2
  41c85f:	je     0x41c922
  41c865:	test   edx,edx
  41c867:	je     0x41c874
  41c869:	add    rsp,0x30
  41c86d:	pop    rbx
  41c86e:	pop    rsi
  41c86f:	pop    rdi
  41c870:	pop    rbp
  41c871:	pop    r12
  41c873:	ret    
  41c874:	movzx  edx,WORD PTR [rdi+0x6]
  41c878:	test   dl,0x2
  41c87b:	jne    0x41c943
  41c881:	and    edx,0x10
  41c884:	jne    0x41c8b0
  41c886:	mov    rbx,QWORD PTR [rax+0x8]
  41c88a:	movzx  ecx,BYTE PTR [rbx]
  41c88d:	nop    DWORD PTR [rax]
  41c890:	add    rbx,0x1
  41c894:	mov    rdx,rsi
  41c897:	call   0x449438
  41c89c:	movzx  ecx,BYTE PTR [rbx]
  41c89f:	test   ecx,ecx
  41c8a1:	jne    0x41c890
  41c8a3:	add    rsp,0x30
  41c8a7:	pop    rbx
  41c8a8:	pop    rsi
  41c8a9:	pop    rdi
  41c8aa:	pop    rbp
  41c8ab:	pop    r12
  41c8ad:	ret    
  41c8ae:	xchg   ax,ax
  41c8b0:	mov    rax,QWORD PTR [rdi+0x8]
  41c8b4:	mov    edx,DWORD PTR [rax+0x8]
  41c8b7:	mov    rbp,QWORD PTR [rax]
  41c8ba:	test   edx,edx
  41c8bc:	je     0x41c869
  41c8be:	xor    ebx,ebx
  41c8c0:	lea    r12,[rsp+0x20]
  41c8c5:	jmp    0x41c907
  41c8c7:	nop    WORD PTR [rax+rax*1+0x0]
  41c8d0:	mov    rcx,r12
  41c8d3:	call   0x41b5d0
  41c8d8:	mov    r9,rsi
  41c8db:	mov    r8d,0xa
  41c8e1:	mov    edx,0x1
  41c8e6:	mov    rcx,r12
  41c8e9:	lea    rbx,[rbx+rax*1-0x1]
  41c8ee:	call   0x4494a8
  41c8f3:	mov    rax,QWORD PTR [rdi+0x8]
  41c8f7:	add    rbx,0x1
  41c8fb:	mov    edx,DWORD PTR [rax+0x8]
  41c8fe:	cmp    rdx,rbx
  41c901:	jbe    0x41c869
  41c907:	lea    rdx,[rbp+rbx*1+0x0]
  41c90c:	test   BYTE PTR [rdx],0x80
  41c90f:	jne    0x41c8d0
  41c911:	mov    rax,QWORD PTR [rax]
  41c914:	mov    rdx,rsi
  41c917:	movzx  ecx,BYTE PTR [rax+rbx*1]
  41c91b:	call   0x4494e0
  41c920:	jmp    0x41c8f3
  41c922:	mov    r8d,DWORD PTR [rdi+0x8]
  41c926:	mov    rcx,QWORD PTR [rdi+0x10]
  41c92a:	mov    r9,rsi
  41c92d:	mov    edx,0x1
  41c932:	call   0x4494a8
  41c937:	nop
  41c938:	add    rsp,0x30
  41c93c:	pop    rbx
  41c93d:	pop    rsi
  41c93e:	pop    rdi
  41c93f:	pop    rbp
  41c940:	pop    r12
  41c942:	ret    
  41c943:	sub    ecx,0x25
  41c946:	lea    rax,[rip+0x34cb3]        # 0x451600
  41c94d:	movsxd rcx,ecx
  41c950:	mov    rbx,QWORD PTR [rax+rcx*8]
  41c954:	jmp    0x41c88a
  41c959:	nop    DWORD PTR [rax+0x0]
  41c960:	sub    rsp,0x28
  41c964:	mov    r9d,DWORD PTR [rcx+0x4]
  41c968:	mov    r8d,DWORD PTR [rdx+0x4]
  41c96c:	xor    eax,eax
  41c96e:	and    r9d,0xffff00ff
  41c975:	and    r8d,0xffff00ff
  41c97c:	cmp    r9d,r8d
  41c97f:	je     0x41c990
  41c981:	add    rsp,0x28
  41c985:	ret    
  41c986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c990:	movzx  r8d,BYTE PTR [rcx+0x4]
  41c995:	lea    r10,[rip+0x34724]        # 0x4510c0
  41c99c:	mov    r9,r8
  41c99f:	shl    r8,0x4
  41c9a3:	mov    r8d,DWORD PTR [r10+r8*1]
  41c9a7:	cmp    r8d,0x2
  41c9ab:	je     0x41c9e0
  41c9ad:	cmp    r8d,0x3
  41c9b1:	je     0x41c9d0
  41c9b3:	cmp    r8d,0x1
  41c9b7:	je     0x41ca01
  41c9b9:	cmp    r9b,0x26
  41c9bd:	mov    al,0x1
  41c9bf:	jne    0x41c981
  41c9c1:	mov    eax,DWORD PTR [rdx+0x8]
  41c9c4:	cmp    DWORD PTR [rcx+0x8],eax
  41c9c7:	sete   al
  41c9ca:	movzx  eax,al
  41c9cd:	jmp    0x41c981
  41c9cf:	nop
  41c9d0:	cmp    r9b,0x4e
  41c9d4:	mov    eax,0x1
  41c9d9:	jne    0x41c981
  41c9db:	jmp    0x41c9c1
  41c9dd:	nop    DWORD PTR [rax]
  41c9e0:	mov    r8d,DWORD PTR [rcx+0x8]
  41c9e4:	cmp    r8d,DWORD PTR [rdx+0x8]
  41c9e8:	jne    0x41c981
  41c9ea:	mov    rdx,QWORD PTR [rdx+0x10]
  41c9ee:	mov    rcx,QWORD PTR [rcx+0x10]
  41c9f2:	call   0x449458
  41c9f7:	test   eax,eax
  41c9f9:	sete   al
  41c9fc:	movzx  eax,al
  41c9ff:	jmp    0x41c981
  41ca01:	mov    rax,QWORD PTR [rdx+0x8]
  41ca05:	cmp    QWORD PTR [rcx+0x8],rax
  41ca09:	sete   al
  41ca0c:	movzx  eax,al
  41ca0f:	jmp    0x41c981
  41ca14:	xchg   ax,ax
  41ca16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca20:	push   rbx
  41ca21:	test   BYTE PTR [rdx+0x6],0x10
  41ca25:	movzx  r9d,BYTE PTR [rdx+0x4]
  41ca2a:	mov    eax,0x35
  41ca2f:	movzx  r10d,WORD PTR [r8+0x6]
  41ca34:	movzx  ebx,BYTE PTR [r8+0x4]
  41ca39:	cmovne r9,rax
  41ca3d:	test   r10b,0x10
  41ca41:	jne    0x41cac0
  41ca43:	movzx  r11d,bl
  41ca47:	movsxd rax,r11d
  41ca4a:	and    r10d,0x2
  41ca4e:	je     0x41ca80
  41ca50:	lea    r10,[rip+0x34ba9]        # 0x451600
  41ca57:	sub    eax,0x25
  41ca5a:	cdqe   
  41ca5c:	mov    rax,QWORD PTR [r10+rax*8]
  41ca60:	movzx  r10d,BYTE PTR [rax]
  41ca64:	cmp    r10d,0x3d
  41ca68:	jne    0x41ca9c
  41ca6a:	cmp    r9d,0xd
  41ca6e:	mov    eax,0x1
  41ca73:	jg     0x41ca9c
  41ca75:	pop    rbx
  41ca76:	ret    
  41ca77:	nop    WORD PTR [rax+rax*1+0x0]
  41ca80:	lea    r10,[rip+0x34639]        # 0x4510c0
  41ca87:	shl    rax,0x4
  41ca8b:	add    rax,r10
  41ca8e:	mov    r10d,DWORD PTR [rax]
  41ca91:	test   r10d,r10d
  41ca94:	je     0x41cad0
  41ca96:	mov    r10d,0xffffffff
  41ca9c:	cmp    r9d,0x41
  41caa0:	ja     0x41cb5d
  41caa6:	lea    rax,[rip+0x33d57]        # 0x450804
  41caad:	movsxd r9,DWORD PTR [rax+r9*4]
  41cab1:	add    rax,r9
  41cab4:	jmp    rax
  41cab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cac0:	mov    eax,0x35
  41cac5:	mov    r11d,0x35
  41cacb:	jmp    0x41ca4a
  41cad0:	mov    rax,QWORD PTR [rax+0x8]
  41cad4:	movzx  r10d,BYTE PTR [rax]
  41cad8:	jmp    0x41ca64
  41cada:	nop    WORD PTR [rax+rax*1+0x0]
  41cae0:	and    r10d,0xfffffffb
  41cae4:	xor    eax,eax
  41cae6:	cmp    r10d,0x3a
  41caea:	sete   al
  41caed:	pop    rbx
  41caee:	ret    
  41caef:	nop
  41caf0:	xor    eax,eax
  41caf2:	cmp    r10d,0x3e
  41caf6:	sete   al
  41caf9:	pop    rbx
  41cafa:	ret    
  41cafb:	nop    DWORD PTR [rax+rax*1+0x0]
  41cb00:	xor    eax,eax
  41cb02:	cmp    r10d,0x7c
  41cb06:	sete   al
  41cb09:	pop    rbx
  41cb0a:	ret    
  41cb0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cb10:	xor    eax,eax
  41cb12:	cmp    r10d,0x2a
  41cb16:	sete   al
  41cb19:	pop    rbx
  41cb1a:	ret    
  41cb1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cb20:	sub    r10d,0x23
  41cb24:	xor    eax,eax
  41cb26:	and    r10d,0xfffffffd
  41cb2a:	sete   al
  41cb2d:	pop    rbx
  41cb2e:	ret    
  41cb2f:	nop
  41cb30:	mov    rax,QWORD PTR [rdx+0x10]
  41cb34:	cmp    r11d,0x35
  41cb38:	movzx  edx,BYTE PTR [rax]
  41cb3b:	jne    0x41cb4b
  41cb3d:	cmp    dl,0x5c
  41cb40:	mov    eax,0x1
  41cb45:	je     0x41ca75
  41cb4b:	cmp    dl,0x40
  41cb4e:	jne    0x41cb5d
  41cb50:	cmp    BYTE PTR [rcx+0x41a],0x0
  41cb57:	jne    0x41cc88
  41cb5d:	xor    eax,eax
  41cb5f:	pop    rbx
  41cb60:	ret    
  41cb61:	and    r11d,0xfffffffd
  41cb65:	mov    eax,0x1
  41cb6a:	cmp    r11d,0x35
  41cb6e:	je     0x41ca75
  41cb74:	lea    eax,[r10-0x2d]
  41cb78:	cmp    eax,0x1
  41cb7b:	setbe  dl
  41cb7e:	cmp    r10d,0x2b
  41cb82:	sete   al
  41cb85:	or     eax,edx
  41cb87:	movzx  eax,al
  41cb8a:	pop    rbx
  41cb8b:	ret    
  41cb8c:	nop    DWORD PTR [rax+0x0]
  41cb90:	cmp    r11d,0x37
  41cb94:	je     0x41cca0
  41cb9a:	mov    eax,r11d
  41cb9d:	and    eax,0xfffffff7
  41cba0:	cmp    eax,0x35
  41cba3:	sete   dl
  41cba6:	cmp    r11d,0x38
  41cbaa:	sete   al
  41cbad:	or     eax,edx
  41cbaf:	movzx  eax,al
  41cbb2:	pop    rbx
  41cbb3:	ret    
  41cbb4:	cmp    r10d,0x2e
  41cbb8:	sete   dl
  41cbbb:	cmp    r10d,0x25
  41cbbf:	sete   al
  41cbc2:	or     eax,edx
  41cbc4:	cmp    r11d,0x37
  41cbc8:	sete   dl
  41cbcb:	or     eax,edx
  41cbcd:	movzx  eax,al
  41cbd0:	pop    rbx
  41cbd1:	ret    
  41cbd2:	xor    eax,eax
  41cbd4:	cmp    r10d,0x26
  41cbd8:	sete   al
  41cbdb:	pop    rbx
  41cbdc:	ret    
  41cbdd:	nop    DWORD PTR [rax]
  41cbe0:	xor    eax,eax
  41cbe2:	cmp    BYTE PTR [rcx+0x43e],0x0
  41cbe9:	je     0x41ca75
  41cbef:	cmp    r11d,0x35
  41cbf3:	mov    al,0x1
  41cbf5:	je     0x41ca75
  41cbfb:	lea    rdx,[rip+0x344be]        # 0x4510c0
  41cc02:	shl    rbx,0x4
  41cc06:	xor    al,al
  41cc08:	cmp    DWORD PTR [rdx+rbx*1],0x2
  41cc0c:	jne    0x41ca75
  41cc12:	mov    rax,QWORD PTR [r8+0x10]
  41cc16:	movzx  edx,BYTE PTR [rax]
  41cc19:	mov    rax,QWORD PTR [rip+0x3e210]        # 0x45ae30
  41cc20:	movzx  eax,WORD PTR [rax+rdx*2]
  41cc24:	shr    ax,0x9
  41cc28:	and    eax,0x1
  41cc2b:	pop    rbx
  41cc2c:	ret    
  41cc2d:	nop    DWORD PTR [rax]
  41cc30:	cmp    r10d,0x2a
  41cc34:	sete   dl
  41cc37:	cmp    r10d,0x2f
  41cc3b:	sete   al
  41cc3e:	or     eax,edx
  41cc40:	movzx  eax,al
  41cc43:	pop    rbx
  41cc44:	ret    
  41cc45:	cmp    r10d,0x3e
  41cc49:	sete   dl
  41cc4c:	cmp    r10d,0x2d
  41cc50:	sete   al
  41cc53:	or     eax,edx
  41cc55:	movzx  eax,al
  41cc58:	pop    rbx
  41cc59:	ret    
  41cc5a:	nop    WORD PTR [rax+rax*1+0x0]
  41cc60:	xor    eax,eax
  41cc62:	cmp    r10d,0x2b
  41cc66:	sete   al
  41cc69:	pop    rbx
  41cc6a:	ret    
  41cc6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc70:	lea    eax,[r10-0x3a]
  41cc74:	and    eax,0xfffffffd
  41cc77:	sete   dl
  41cc7a:	cmp    r10d,0x25
  41cc7e:	sete   al
  41cc81:	or     eax,edx
  41cc83:	movzx  eax,al
  41cc86:	pop    rbx
  41cc87:	ret    
  41cc88:	and    r11d,0xfffffff7
  41cc8c:	xor    eax,eax
  41cc8e:	cmp    r11d,0x35
  41cc92:	sete   al
  41cc95:	pop    rbx
  41cc96:	ret    
  41cc97:	nop    WORD PTR [rax+rax*1+0x0]
  41cca0:	mov    edx,DWORD PTR [r8+0x8]
  41cca4:	test   edx,edx
  41cca6:	je     0x41cced
  41cca8:	mov    rax,QWORD PTR [r8+0x10]
  41ccac:	sub    edx,0x1
  41ccaf:	mov    r9,QWORD PTR [rip+0x3e17a]        # 0x45ae30
  41ccb6:	lea    r10,[rax+rdx*1+0x1]
  41ccbb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ccc0:	movzx  r8d,BYTE PTR [rax]
  41ccc4:	test   WORD PTR [r9+r8*2],0x204
  41cccb:	jne    0x41cce4
  41cccd:	cmp    r8b,0x24
  41ccd1:	jne    0x41cb9a
  41ccd7:	cmp    BYTE PTR [rcx+0x430],0x0
  41ccde:	je     0x41cb9a
  41cce4:	add    rax,0x1
  41cce8:	cmp    rax,r10
  41cceb:	jne    0x41ccc0
  41cced:	mov    eax,0x1
  41ccf2:	pop    rbx
  41ccf3:	ret    
  41ccf4:	xchg   ax,ax
  41ccf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd00:	push   rdi
  41cd01:	push   rsi
  41cd02:	push   rbx
  41cd03:	sub    rsp,0x20
  41cd07:	mov    rdi,rcx
  41cd0a:	mov    rsi,rdx
  41cd0d:	call   0x40ec60
  41cd12:	mov    rbx,rax
  41cd15:	cmp    BYTE PTR [rbx+0x4],0x16
  41cd19:	mov    rdx,rsi
  41cd1c:	je     0x41cd4d
  41cd1e:	mov    rcx,rbx
  41cd21:	call   0x41c830
  41cd26:	mov    rcx,rdi
  41cd29:	call   0x40ec60
  41cd2e:	test   BYTE PTR [rax+0x6],0x1
  41cd32:	mov    rbx,rax
  41cd35:	je     0x41cd15
  41cd37:	mov    rdx,rsi
  41cd3a:	mov    ecx,0x20
  41cd3f:	call   0x449438
  41cd44:	cmp    BYTE PTR [rbx+0x4],0x16
  41cd48:	mov    rdx,rsi
  41cd4b:	jne    0x41cd1e
  41cd4d:	mov    ecx,0xa
  41cd52:	add    rsp,0x20
  41cd56:	pop    rbx
  41cd57:	pop    rsi
  41cd58:	pop    rdi
  41cd59:	jmp    0x449438
  41cd5e:	xchg   ax,ax
  41cd60:	push   r14
  41cd62:	push   r13
  41cd64:	push   r12
  41cd66:	push   rbp
  41cd67:	push   rdi
  41cd68:	push   rsi
  41cd69:	push   rbx
  41cd6a:	sub    rsp,0x20
  41cd6e:	test   rdx,rdx
  41cd71:	mov    rbp,rcx
  41cd74:	mov    r12,rdx
  41cd77:	je     0x41ce80
  41cd7d:	mov    rcx,rdx
  41cd80:	call   0x4493c0
  41cd85:	lea    ecx,[rax+0x78]
  41cd88:	mov    rbx,rax
  41cd8b:	add    ebx,0x2
  41cd8e:	mov    rsi,rcx
  41cd91:	call   0x43baf0
  41cd96:	lea    rdx,[rip+0x33b6f]        # 0x45090c
  41cd9d:	mov    r8,r12
  41cda0:	mov    rcx,rax
  41cda3:	mov    rdi,rax
  41cda6:	call   0x449900
  41cdab:	mov    rcx,rbp
  41cdae:	lea    r12,[rip+0x3430b]        # 0x4510c0
  41cdb5:	call   0x40ec60
  41cdba:	mov    r14,rax
  41cdbd:	nop    DWORD PTR [rax]
  41cdc0:	movzx  r8d,BYTE PTR [r14+0x4]
  41cdc5:	cmp    r8b,0x16
  41cdc9:	je     0x41ce47
  41cdcb:	shl    r8,0x4
  41cdcf:	mov    eax,DWORD PTR [r12+r8*1]
  41cdd3:	cmp    eax,0x1
  41cdd6:	je     0x41ce60
  41cddc:	cmp    eax,0x2
  41cddf:	jne    0x41ce71
  41cde5:	mov    eax,DWORD PTR [r14+0x8]
  41cde9:	lea    eax,[rbx+rax*1+0x2]
  41cded:	cmp    esi,eax
  41cdef:	jae    0x41ce05
  41cdf1:	add    esi,esi
  41cdf3:	mov    rcx,rdi
  41cdf6:	cmp    eax,esi
  41cdf8:	cmovae esi,eax
  41cdfb:	mov    edx,esi
  41cdfd:	call   0x43bb70
  41ce02:	mov    rdi,rax
  41ce05:	lea    r8,[rdi+rbx*1]
  41ce09:	xor    r9d,r9d
  41ce0c:	mov    rdx,r14
  41ce0f:	mov    rcx,rbp
  41ce12:	call   0x41c590
  41ce17:	mov    rcx,rbp
  41ce1a:	sub    rax,rdi
  41ce1d:	mov    r13,rax
  41ce20:	mov    ebx,eax
  41ce22:	call   0x40ec60
  41ce27:	test   BYTE PTR [rax+0x6],0x1
  41ce2b:	mov    r14,rax
  41ce2e:	je     0x41cdc0
  41ce30:	lea    ebx,[r13+0x1]
  41ce34:	mov    r13d,r13d
  41ce37:	mov    BYTE PTR [rdi+r13*1],0x20
  41ce3c:	movzx  r8d,BYTE PTR [r14+0x4]
  41ce41:	cmp    r8b,0x16
  41ce45:	jne    0x41cdcb
  41ce47:	mov    rax,rdi
  41ce4a:	mov    BYTE PTR [rdi+rbx*1],0x0
  41ce4e:	add    rsp,0x20
  41ce52:	pop    rbx
  41ce53:	pop    rsi
  41ce54:	pop    rdi
  41ce55:	pop    rbp
  41ce56:	pop    r12
  41ce58:	pop    r13
  41ce5a:	pop    r14
  41ce5c:	ret    
  41ce5d:	nop    DWORD PTR [rax]
  41ce60:	mov    rax,QWORD PTR [r14+0x8]
  41ce64:	mov    eax,DWORD PTR [rax+0x8]
  41ce67:	lea    eax,[rax+rax*4]
  41ce6a:	add    eax,eax
  41ce6c:	jmp    0x41cde9
  41ce71:	mov    eax,0x6
  41ce76:	jmp    0x41cde9
  41ce7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ce80:	mov    ecx,0x78
  41ce85:	mov    esi,0x78
  41ce8a:	xor    ebx,ebx
  41ce8c:	call   0x43baf0
  41ce91:	mov    rdi,rax
  41ce94:	jmp    0x41cdab
  41ce99:	nop    DWORD PTR [rax+0x0]
  41cea0:	mov    r8,rdx
  41cea3:	jmp    0x41cea8
  41cea5:	mov    r8,rax
  41cea8:	mov    rax,QWORD PTR [r8]
  41ceab:	test   rax,rax
  41ceae:	jne    0x41cea5
  41ceb0:	mov    rax,QWORD PTR [rcx+0x48]
  41ceb4:	mov    QWORD PTR [r8],rax
  41ceb7:	mov    QWORD PTR [rcx+0x48],rdx
  41cebb:	ret    
  41cebc:	nop    DWORD PTR [rax+0x0]
  41cec0:	push   rbx
  41cec1:	sub    rsp,0x20
  41cec5:	mov    rax,QWORD PTR [rcx+0x48]
  41cec9:	lea    r8,[rcx+0x48]
  41cecd:	test   rax,rax
  41ced0:	je     0x41cefd
  41ced2:	lea    r9,[rdx+rdx*2]
  41ced6:	shr    r9,1
  41ced9:	add    r9,0x1f40
  41cee0:	mov    rcx,QWORD PTR [rax+0x18]
  41cee4:	sub    rcx,QWORD PTR [rax+0x8]
  41cee8:	cmp    rcx,rdx
  41ceeb:	jb     0x41cef2
  41ceed:	cmp    rcx,r9
  41cef0:	jbe    0x41cf50
  41cef2:	mov    r8,rax
  41cef5:	mov    rax,QWORD PTR [rax]
  41cef8:	test   rax,rax
  41cefb:	jne    0x41cee0
  41cefd:	cmp    rdx,0x1f3f
  41cf04:	mov    ecx,0x1f60
  41cf09:	mov    ebx,0x1f40
  41cf0e:	ja     0x41cf35
  41cf10:	call   0x43baf0
  41cf15:	lea    rdx,[rax+rbx*1]
  41cf19:	mov    QWORD PTR [rdx+0x8],rax
  41cf1d:	mov    QWORD PTR [rdx+0x10],rax
  41cf21:	mov    rax,rdx
  41cf24:	mov    QWORD PTR [rdx+0x18],rdx
  41cf28:	mov    QWORD PTR [rdx],0x0
  41cf2f:	add    rsp,0x20
  41cf33:	pop    rbx
  41cf34:	ret    
  41cf35:	add    rdx,0x7
  41cf39:	mov    rbx,rdx
  41cf3c:	and    rbx,0xfffffffffffffff8
  41cf40:	lea    rcx,[rbx+0x20]
  41cf44:	jmp    0x41cf10
  41cf46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf50:	mov    rdx,QWORD PTR [rax]
  41cf53:	mov    QWORD PTR [r8],rdx
  41cf56:	mov    rdx,QWORD PTR [rax+0x8]
  41cf5a:	mov    QWORD PTR [rax],0x0
  41cf61:	mov    QWORD PTR [rax+0x10],rdx
  41cf65:	add    rsp,0x20
  41cf69:	pop    rbx
  41cf6a:	ret    
  41cf6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cf70:	push   rsi
  41cf71:	push   rbx
  41cf72:	sub    rsp,0x28
  41cf76:	mov    rax,QWORD PTR [rdx+0x18]
  41cf7a:	sub    rax,QWORD PTR [rdx+0x10]
  41cf7e:	mov    rbx,rdx
  41cf81:	lea    rdx,[r8+rax*2]
  41cf85:	call   0x41cec0
  41cf8a:	mov    rdx,QWORD PTR [rbx+0x10]
  41cf8e:	mov    r8,QWORD PTR [rbx+0x18]
  41cf92:	mov    rsi,rax
  41cf95:	mov    rcx,QWORD PTR [rax+0x8]
  41cf99:	mov    QWORD PTR [rbx],rax
  41cf9c:	sub    r8,rdx
  41cf9f:	call   0x449450
  41cfa4:	mov    rax,rsi
  41cfa7:	add    rsp,0x28
  41cfab:	pop    rbx
  41cfac:	pop    rsi
  41cfad:	ret    
  41cfae:	xchg   ax,ax
  41cfb0:	push   r15
  41cfb2:	push   r14
  41cfb4:	push   r13
  41cfb6:	push   r12
  41cfb8:	push   rbp
  41cfb9:	push   rdi
  41cfba:	push   rsi
  41cfbb:	push   rbx
  41cfbc:	sub    rsp,0x28
  41cfc0:	mov    rbp,QWORD PTR [r9]
  41cfc3:	mov    r13,QWORD PTR [rsp+0x90]
  41cfcb:	mov    r15,rcx
  41cfce:	mov    r12,rdx
  41cfd1:	mov    rdi,r8
  41cfd4:	mov    r14,r9
  41cfd7:	test   rbp,rbp
  41cfda:	mov    rbx,QWORD PTR [r13+0x0]
  41cfde:	je     0x41d040
  41cfe0:	mov    rcx,QWORD PTR [rbx+0x10]
  41cfe4:	mov    rsi,QWORD PTR [rbx+0x18]
  41cfe8:	sub    rsi,rcx
  41cfeb:	cmp    r8,rsi
  41cfee:	jbe    0x41d017
  41cff0:	mov    r8,rsi
  41cff3:	sub    rdi,rsi
  41cff6:	add    r12,rsi
  41cff9:	call   0x449450
  41cffe:	add    QWORD PTR [rbx+0x10],rsi
  41d002:	mov    rdx,rbx
  41d005:	mov    rcx,r15
  41d008:	mov    r8,rdi
  41d00b:	call   0x41cf70
  41d010:	mov    rcx,QWORD PTR [rax+0x10]
  41d014:	mov    rbx,rax
  41d017:	mov    r8,rdi
  41d01a:	mov    rdx,r12
  41d01d:	call   0x449450
  41d022:	add    QWORD PTR [rbx+0x10],rdi
  41d026:	mov    QWORD PTR [r14],rbp
  41d029:	mov    QWORD PTR [r13+0x0],rbx
  41d02d:	add    rsp,0x28
  41d031:	pop    rbx
  41d032:	pop    rsi
  41d033:	pop    rdi
  41d034:	pop    rbp
  41d035:	pop    r12
  41d037:	pop    r13
  41d039:	pop    r14
  41d03b:	pop    r15
  41d03d:	ret    
  41d03e:	xchg   ax,ax
  41d040:	mov    rdx,r8
  41d043:	call   0x41cec0
  41d048:	mov    rbp,rax
  41d04b:	mov    rcx,QWORD PTR [rax+0x10]
  41d04f:	mov    rbx,rax
  41d052:	jmp    0x41d017
  41d054:	xchg   ax,ax
  41d056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d060:	push   rdi
  41d061:	push   rsi
  41d062:	push   rbx
  41d063:	sub    rsp,0x20
  41d067:	mov    rbx,QWORD PTR [rdx]
  41d06a:	mov    rdi,rdx
  41d06d:	mov    rax,QWORD PTR [rbx+0x18]
  41d071:	sub    rax,QWORD PTR [rbx+0x10]
  41d075:	lea    rdx,[r8+rax*2]
  41d079:	call   0x41cec0
  41d07e:	mov    rdx,QWORD PTR [rbx+0x10]
  41d082:	mov    r8,QWORD PTR [rbx+0x18]
  41d086:	mov    rsi,rax
  41d089:	mov    rcx,QWORD PTR [rax+0x8]
  41d08d:	sub    r8,rdx
  41d090:	call   0x449450
  41d095:	mov    QWORD PTR [rsi],rbx
  41d098:	mov    QWORD PTR [rdi],rsi
  41d09b:	add    rsp,0x20
  41d09f:	pop    rbx
  41d0a0:	pop    rsi
  41d0a1:	pop    rdi
  41d0a2:	ret    
  41d0a3:	nop    DWORD PTR [rax]
  41d0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0b0:	push   rbx
  41d0b1:	sub    rsp,0x20
  41d0b5:	test   rcx,rcx
  41d0b8:	je     0x41d0d4
  41d0ba:	nop    WORD PTR [rax+rax*1+0x0]
  41d0c0:	mov    rbx,QWORD PTR [rcx]
  41d0c3:	mov    rcx,QWORD PTR [rcx+0x8]
  41d0c7:	call   0x4494c8
  41d0cc:	test   rbx,rbx
  41d0cf:	mov    rcx,rbx
  41d0d2:	jne    0x41d0c0
  41d0d4:	add    rsp,0x20
  41d0d8:	pop    rbx
  41d0d9:	ret    
  41d0da:	nop    WORD PTR [rax+rax*1+0x0]
  41d0e0:	push   rsi
  41d0e1:	push   rbx
  41d0e2:	sub    rsp,0x28
  41d0e6:	mov    r8,QWORD PTR [rcx+0x40]
  41d0ea:	mov    rbx,rdx
  41d0ed:	mov    rsi,rcx
  41d0f0:	mov    rax,QWORD PTR [r8+0x10]
  41d0f4:	mov    rdx,QWORD PTR [r8+0x18]
  41d0f8:	sub    rdx,rax
  41d0fb:	cmp    rdx,rbx
  41d0fe:	jae    0x41d11a
  41d100:	mov    rdx,rbx
  41d103:	call   0x41cec0
  41d108:	mov    r8,rax
  41d10b:	mov    rax,QWORD PTR [rsi+0x40]
  41d10f:	mov    QWORD PTR [r8],rax
  41d112:	mov    rax,QWORD PTR [r8+0x10]
  41d116:	mov    QWORD PTR [rsi+0x40],r8
  41d11a:	add    rbx,rax
  41d11d:	mov    QWORD PTR [r8+0x10],rbx
  41d121:	add    rsp,0x28
  41d125:	pop    rbx
  41d126:	pop    rsi
  41d127:	ret    
  41d128:	nop    DWORD PTR [rax+rax*1+0x0]
  41d130:	push   r13
  41d132:	push   r12
  41d134:	push   rbp
  41d135:	push   rdi
  41d136:	push   rsi
  41d137:	push   rbx
  41d138:	sub    rsp,0x28
  41d13c:	mov    rax,QWORD PTR [rcx]
  41d13f:	mov    r13,QWORD PTR [rip+0x3dcea]        # 0x45ae30
  41d146:	mov    r12,rcx
  41d149:	mov    rdi,rdx
  41d14c:	mov    rsi,r8
  41d14f:	mov    rbx,QWORD PTR [rax]
  41d152:	lea    rbp,[rbx-0x1]
  41d156:	jmp    0x41d18c
  41d158:	nop    DWORD PTR [rax+rax*1+0x0]
  41d160:	sub    eax,0x2b
  41d163:	test   al,0xfd
  41d165:	jne    0x41d1b7
  41d167:	movzx  eax,BYTE PTR [rbx-0x1]
  41d16b:	and    eax,0xffffffdf
  41d16e:	cmp    al,0x45
  41d170:	je     0x41d181
  41d172:	cmp    al,0x50
  41d174:	jne    0x41d1b7
  41d176:	cmp    BYTE PTR [r12+0x41f],0x0
  41d17f:	je     0x41d1b7
  41d181:	mov    DWORD PTR [rsi],r9d
  41d184:	mov    BYTE PTR [rsi+0x4],0x0
  41d188:	add    rbx,0x1
  41d18c:	movzx  r9d,BYTE PTR [rbx]
  41d190:	movsxd rdx,r9d
  41d193:	mov    eax,r9d
  41d196:	test   WORD PTR [r13+rdx*2+0x0],0x204
  41d19e:	jne    0x41d181
  41d1a0:	cmp    r9b,0x2e
  41d1a4:	je     0x41d181
  41d1a6:	cmp    r9b,0x27
  41d1aa:	jne    0x41d160
  41d1ac:	cmp    BYTE PTR [r12+0x443],0x0
  41d1b5:	jne    0x41d181
  41d1b7:	mov    rax,QWORD PTR [r12]
  41d1bb:	xor    edx,edx
  41d1bd:	mov    r8,rsi
  41d1c0:	mov    rcx,r12
  41d1c3:	mov    QWORD PTR [rax],rbx
  41d1c6:	call   0x41b720
  41d1cb:	test   al,al
  41d1cd:	je     0x41d1d8
  41d1cf:	mov    rax,QWORD PTR [r12]
  41d1d3:	mov    rbx,QWORD PTR [rax]
  41d1d6:	jmp    0x41d18c
  41d1d8:	sub    rbx,rbp
  41d1db:	mov    rcx,r12
  41d1de:	lea    edx,[rbx+0x1]
  41d1e1:	mov    DWORD PTR [rdi],ebx
  41d1e3:	call   0x41d0e0
  41d1e8:	mov    r8d,DWORD PTR [rdi]
  41d1eb:	mov    rdx,rbp
  41d1ee:	mov    rcx,rax
  41d1f1:	call   0x449450
  41d1f6:	mov    r9,rax
  41d1f9:	mov    eax,DWORD PTR [rdi]
  41d1fb:	mov    BYTE PTR [r9+rax*1],0x0
  41d200:	mov    QWORD PTR [rdi+0x8],r9
  41d204:	add    rsp,0x28
  41d208:	pop    rbx
  41d209:	pop    rsi
  41d20a:	pop    rdi
  41d20b:	pop    rbp
  41d20c:	pop    r12
  41d20e:	pop    r13
  41d210:	ret    
  41d211:	nop    DWORD PTR [rax+rax*1+0x0]
  41d216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d220:	push   rbp
  41d221:	push   rdi
  41d222:	push   rsi
  41d223:	push   rbx
  41d224:	sub    rsp,0x28
  41d228:	mov    edi,r9d
  41d22b:	mov    rbx,rdx
  41d22e:	mov    rbp,r8
  41d231:	lea    edx,[rdi+0x1]
  41d234:	call   0x41d0e0
  41d239:	mov    r8,rdi
  41d23c:	mov    rdx,rbp
  41d23f:	mov    rcx,rax
  41d242:	call   0x449450
  41d247:	mov    BYTE PTR [rax+rdi*1],0x0
  41d24b:	mov    r10,rax
  41d24e:	mov    eax,DWORD PTR [rsp+0x70]
  41d252:	mov    DWORD PTR [rbx+0x8],edi
  41d255:	mov    QWORD PTR [rbx+0x10],r10
  41d259:	mov    BYTE PTR [rbx+0x4],al
  41d25c:	add    rsp,0x28
  41d260:	pop    rbx
  41d261:	pop    rsi
  41d262:	pop    rdi
  41d263:	pop    rbp
  41d264:	ret    
  41d265:	nop
  41d266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d270:	push   r15
  41d272:	push   r14
  41d274:	push   r13
  41d276:	push   r12
  41d278:	push   rbp
  41d279:	push   rdi
  41d27a:	push   rsi
  41d27b:	push   rbx
  41d27c:	sub    rsp,0xd8
  41d283:	movzx  esi,BYTE PTR [r8]
  41d287:	mov    QWORD PTR [rsp+0x128],rdx
  41d28f:	mov    QWORD PTR [rsp+0x130],r8
  41d297:	mov    rbp,rcx
  41d29a:	mov    rax,QWORD PTR [rsp+0x130]
  41d2a2:	cmp    esi,0x55
  41d2a5:	mov    edx,esi
  41d2a7:	je     0x41d326
  41d2a9:	cmp    esi,0x4c
  41d2ac:	je     0x41d326
  41d2ae:	cmp    esi,0x75
  41d2b1:	lea    r10,[rax+0x1]
  41d2b5:	je     0x41d683
  41d2bb:	cmp    esi,0x52
  41d2be:	je     0x41d333
  41d2c0:	cmp    esi,0x22
  41d2c3:	je     0x41d611
  41d2c9:	cmp    esi,0x27
  41d2cc:	je     0x41d657
  41d2d2:	mov    edi,0x43
  41d2d7:	mov    esi,0x3e
  41d2dc:	movzx  r8d,BYTE PTR [r10]
  41d2e0:	xor    edx,edx
  41d2e2:	movzx  eax,r8b
  41d2e6:	jmp    0x41d2fd
  41d2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d2f0:	movzx  eax,BYTE PTR [r10+0x1]
  41d2f5:	mov    edx,0x1
  41d2fa:	mov    r10,rbx
  41d2fd:	cmp    eax,0x5c
  41d300:	lea    rbx,[r10+0x1]
  41d304:	je     0x41d4c1
  41d30a:	cmp    esi,eax
  41d30c:	je     0x41d4e9
  41d312:	cmp    eax,0xa
  41d315:	je     0x41d54c
  41d31b:	test   eax,eax
  41d31d:	je     0x41d2f0
  41d31f:	movzx  eax,BYTE PTR [r10+0x1]
  41d324:	jmp    0x41d2fa
  41d326:	movzx  esi,BYTE PTR [rax+0x1]
  41d32a:	lea    r10,[rax+0x2]
  41d32e:	cmp    esi,0x52
  41d331:	jne    0x41d2c0
  41d333:	mov    rcx,QWORD PTR [rbp+0x0]
  41d337:	mov    QWORD PTR [rsp+0x80],0x0
  41d343:	mov    QWORD PTR [rsp+0x88],0x0
  41d34f:	mov    DWORD PTR [rsp+0x5c],0x3e
  41d357:	mov    eax,DWORD PTR [rcx+0x38]
  41d35a:	shl    rax,0x4
  41d35e:	add    rax,QWORD PTR [rcx+0x30]
  41d362:	cmp    dl,0x4c
  41d365:	mov    r15,rax
  41d368:	je     0x41d388
  41d36a:	cmp    dl,0x55
  41d36d:	mov    DWORD PTR [rsp+0x5c],0x40
  41d375:	je     0x41d388
  41d377:	cmp    dl,0x75
  41d37a:	mov    DWORD PTR [rsp+0x5c],0x3d
  41d382:	je     0x41dd1b
  41d388:	lea    rax,[r10+0x1]
  41d38c:	mov    rsi,QWORD PTR [rsp+0x130]
  41d394:	lea    r14,[rsp+0x80]
  41d39c:	lea    r12,[rsp+0x88]
  41d3a4:	xor    r13d,r13d
  41d3a7:	xor    ebx,ebx
  41d3a9:	mov    QWORD PTR [rsp+0x68],rax
  41d3ae:	mov    rdi,rax
  41d3b1:	lea    rax,[rsp+0xb0]
  41d3b9:	mov    DWORD PTR [rsp+0x50],0x0
  41d3c1:	mov    DWORD PTR [rsp+0x58],0x0
  41d3c9:	mov    rdx,rsi
  41d3cc:	mov    QWORD PTR [rsp+0x48],rax
  41d3d1:	lea    rax,[rsp+0x7f]
  41d3d6:	mov    DWORD PTR [rsp+0x54],0x0
  41d3de:	mov    QWORD PTR [rsp+0x60],rax
  41d3e3:	mov    rax,QWORD PTR [r15]
  41d3e6:	cmp    rax,rdi
  41d3e9:	mov    QWORD PTR [rsp+0x38],rax
  41d3ee:	jb     0x41d950
  41d3f4:	jne    0x41d462
  41d3f6:	mov    rsi,r15
  41d3f9:	jmp    0x41d439
  41d3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d400:	mov    r11,QWORD PTR [rip+0x3d9a9]        # 0x45adb0
  41d407:	mov    ecx,eax
  41d409:	cmp    BYTE PTR [r11+rcx*1],0x0
  41d40e:	je     0x41de90
  41d414:	mov    DWORD PTR [rsi+0x8],0x0
  41d41b:	cmp    BYTE PTR [rbp+0x41d],0x0
  41d422:	mov    r15,rsi
  41d425:	mov    BYTE PTR [rsp+0x7f],al
  41d429:	jne    0x41d780
  41d42f:	cmp    rdi,QWORD PTR [r15+0x10]
  41d433:	lea    rsi,[r15+0x10]
  41d437:	jne    0x41d45f
  41d439:	mov    eax,DWORD PTR [rsi+0x8]
  41d43c:	cmp    eax,0x20
  41d43f:	je     0x41d701
  41d445:	cmp    eax,0x5c
  41d448:	je     0x41d701
  41d44e:	test   eax,eax
  41d450:	jne    0x41d400
  41d452:	mov    r15,rsi
  41d455:	cmp    rdi,QWORD PTR [r15+0x10]
  41d459:	lea    rsi,[r15+0x10]
  41d45d:	je     0x41d439
  41d45f:	mov    r15,rsi
  41d462:	cmp    r13,0x10
  41d466:	lea    rsi,[rdi+0x1]
  41d46a:	movzx  ecx,BYTE PTR [rdi]
  41d46d:	jbe    0x41dc94
  41d473:	mov    r8d,DWORD PTR [rsp+0x50]
  41d478:	test   r8d,r8d
  41d47b:	jne    0x41d9b0
  41d481:	mov    ecx,DWORD PTR [rsp+0x54]
  41d485:	cmp    r13,rcx
  41d488:	jbe    0x41d9cd
  41d48e:	mov    r9d,ecx
  41d491:	movzx  r8d,BYTE PTR [rsp+rcx*1+0xb0]
  41d49a:	lea    eax,[r8-0x21]
  41d49e:	mov    BYTE PTR [rsp+rcx*1+0x90],r8b
  41d4a6:	cmp    al,0x5d
  41d4a8:	ja     0x41d982
  41d4ae:	lea    rdi,[rip+0x335b7]        # 0x450a6c
  41d4b5:	movzx  eax,al
  41d4b8:	movsxd rax,DWORD PTR [rdi+rax*4]
  41d4bc:	add    rax,rdi
  41d4bf:	jmp    rax
  41d4c1:	cmp    BYTE PTR [rbp+0x13],0x0
  41d4c5:	jne    0x41d31f
  41d4cb:	cmp    BYTE PTR [r10+0x1],0xa
  41d4d0:	mov    eax,0xa
  41d4d5:	je     0x41d2fa
  41d4db:	lea    rbx,[r10+0x2]
  41d4df:	movzx  eax,BYTE PTR [r10+0x2]
  41d4e4:	jmp    0x41d2fa
  41d4e9:	test   dl,dl
  41d4eb:	je     0x41d4f3
  41d4ed:	cmp    BYTE PTR [rbp+0x12],0x0
  41d4f1:	je     0x41d567
  41d4f3:	cmp    edi,0x3c
  41d4f6:	je     0x41d581
  41d4fc:	cmp    BYTE PTR [rbp+0x43e],0x0
  41d503:	jne    0x41d5b7
  41d509:	mov    rax,QWORD PTR [rbp+0x0]
  41d50d:	mov    r9d,ebx
  41d510:	sub    r9d,DWORD PTR [rsp+0x130]
  41d518:	mov    r8,QWORD PTR [rsp+0x130]
  41d520:	mov    rdx,QWORD PTR [rsp+0x128]
  41d528:	mov    rcx,rbp
  41d52b:	mov    QWORD PTR [rax],rbx
  41d52e:	mov    DWORD PTR [rsp+0x20],edi
  41d532:	call   0x41d220
  41d537:	nop
  41d538:	add    rsp,0xd8
  41d53f:	pop    rbx
  41d540:	pop    rsi
  41d541:	pop    rdi
  41d542:	pop    rbp
  41d543:	pop    r12
  41d545:	pop    r13
  41d547:	pop    r14
  41d549:	pop    r15
  41d54b:	ret    
  41d54c:	cmp    esi,0x3e
  41d54f:	mov    rbx,r10
  41d552:	je     0x41dccb
  41d558:	test   dl,dl
  41d55a:	je     0x41d581
  41d55c:	cmp    BYTE PTR [rbp+0x12],0x0
  41d560:	jne    0x41d581
  41d562:	mov    edi,0x3c
  41d567:	lea    r8,[rip+0x334b2]        # 0x450a20
  41d56e:	xor    edx,edx
  41d570:	mov    rcx,rbp
  41d573:	call   0x414b60
  41d578:	cmp    edi,0x3c
  41d57b:	jne    0x41d4fc
  41d581:	cmp    DWORD PTR [rbp+0x414],0xd
  41d588:	mov    edi,0x3c
  41d58d:	je     0x41d4fc
  41d593:	lea    r8,[rip+0x334ae]        # 0x450a48
  41d59a:	mov    r9d,esi
  41d59d:	mov    edx,0x2
  41d5a2:	mov    rcx,rbp
  41d5a5:	call   0x414b60
  41d5aa:	cmp    BYTE PTR [rbp+0x43e],0x0
  41d5b1:	je     0x41d509
  41d5b7:	lea    rcx,[rbp+0x3f8]
  41d5be:	mov    rdx,rbx
  41d5c1:	call   0x41b9a0
  41d5c6:	test   al,al
  41d5c8:	je     0x41d6ae
  41d5ce:	cmp    BYTE PTR [rbp+0x43f],0x0
  41d5d5:	je     0x41d509
  41d5db:	cmp    BYTE PTR [rbp+0x12],0x0
  41d5df:	jne    0x41d509
  41d5e5:	lea    rax,[rip+0x333dc]        # 0x4509c8
  41d5ec:	xor    r9d,r9d
  41d5ef:	mov    edx,0x13
  41d5f4:	mov    rcx,rbp
  41d5f7:	mov    QWORD PTR [rsp+0x20],rax
  41d5fc:	mov    rax,QWORD PTR [rsp+0x128]
  41d604:	mov    r8d,DWORD PTR [rax]
  41d607:	call   0x414c80
  41d60c:	jmp    0x41d509
  41d611:	cmp    dl,0x4c
  41d614:	mov    edi,0x3e
  41d619:	je     0x41d2dc
  41d61f:	cmp    dl,0x55
  41d622:	mov    dil,0x40
  41d625:	je     0x41d2dc
  41d62b:	cmp    dl,0x75
  41d62e:	mov    dil,0x3d
  41d631:	jne    0x41d2dc
  41d637:	mov    rax,QWORD PTR [rsp+0x130]
  41d63f:	xor    edi,edi
  41d641:	mov    esi,0x22
  41d646:	cmp    BYTE PTR [rax+0x1],0x38
  41d64a:	sete   dil
  41d64e:	lea    edi,[rdi+rdi*1+0x3f]
  41d652:	jmp    0x41d2dc
  41d657:	cmp    dl,0x4c
  41d65a:	mov    edi,0x39
  41d65f:	je     0x41d2dc
  41d665:	cmp    dl,0x55
  41d668:	mov    dil,0x3b
  41d66b:	je     0x41d2dc
  41d671:	xor    edi,edi
  41d673:	cmp    dl,0x75
  41d676:	sete   dil
  41d67a:	lea    edi,[rdi+rdi*1+0x38]
  41d67e:	jmp    0x41d2dc
  41d683:	movzx  esi,BYTE PTR [rax+0x1]
  41d687:	lea    r10,[rax+0x2]
  41d68b:	cmp    esi,0x38
  41d68e:	mov    ecx,esi
  41d690:	jne    0x41d69a
  41d692:	movzx  esi,BYTE PTR [rax+0x2]
  41d696:	lea    r10,[rax+0x3]
  41d69a:	cmp    esi,0x52
  41d69d:	je     0x41def8
  41d6a3:	cmp    esi,0x22
  41d6a6:	jne    0x41d2c9
  41d6ac:	jmp    0x41d637
  41d6ae:	movzx  eax,BYTE PTR [rbx]
  41d6b1:	mov    r12,QWORD PTR [rip+0x3d778]        # 0x45ae30
  41d6b8:	test   BYTE PTR [r12+rax*2+0x1],0x2
  41d6be:	je     0x41d509
  41d6c4:	mov    ecx,edi
  41d6c6:	call   0x415e40
  41d6cb:	mov    ecx,eax
  41d6cd:	call   0x415dd0
  41d6d2:	movzx  edx,BYTE PTR [rbx+0x1]
  41d6d6:	mov    edi,eax
  41d6d8:	lea    rax,[rbx+0x1]
  41d6dc:	mov    rbx,rax
  41d6df:	test   WORD PTR [r12+rdx*2],0x204
  41d6e6:	je     0x41d509
  41d6ec:	add    rbx,0x1
  41d6f0:	movzx  eax,BYTE PTR [rbx]
  41d6f3:	test   WORD PTR [r12+rax*2],0x204
  41d6fa:	jne    0x41d6ec
  41d6fc:	jmp    0x41d509
  41d701:	mov    r15,rdi
  41d704:	mov    r9,r14
  41d707:	mov    rcx,rbp
  41d70a:	sub    r15,rdx
  41d70d:	mov    QWORD PTR [rsp+0x20],r12
  41d712:	add    rbx,0x1
  41d716:	mov    r8,r15
  41d719:	add    rbx,r15
  41d71c:	call   0x41cfb0
  41d721:	lea    rdx,[rip+0x331e9]        # 0x450911
  41d728:	mov    QWORD PTR [rsp+0x20],r12
  41d72d:	mov    r9,r14
  41d730:	mov    r8d,0x1
  41d736:	mov    rcx,rbp
  41d739:	call   0x41cfb0
  41d73e:	cmp    r13,0x10
  41d742:	jbe    0x41d920
  41d748:	cmp    DWORD PTR [rsi+0x8],0x20
  41d74c:	je     0x41dfc5
  41d752:	lea    rdx,[rip+0x331bc]        # 0x450915
  41d759:	mov    QWORD PTR [rsp+0x20],r12
  41d75e:	mov    r9,r14
  41d761:	mov    r8d,0x1
  41d767:	mov    rcx,rbp
  41d76a:	add    rbx,0x1
  41d76e:	call   0x41cfb0
  41d773:	mov    r15,rsi
  41d776:	mov    rdx,QWORD PTR [rsp+0x38]
  41d77b:	jmp    0x41d42f
  41d780:	mov    r15,rdi
  41d783:	mov    r9,r14
  41d786:	mov    rcx,rbp
  41d789:	sub    r15,rdx
  41d78c:	mov    QWORD PTR [rsp+0x20],r12
  41d791:	mov    r8,r15
  41d794:	add    rbx,r15
  41d797:	call   0x41cfb0
  41d79c:	lea    rdx,[rip+0x33174]        # 0x450917
  41d7a3:	mov    QWORD PTR [rsp+0x20],r12
  41d7a8:	mov    r9,r14
  41d7ab:	mov    r8d,0x2
  41d7b1:	mov    rcx,rbp
  41d7b4:	call   0x41cfb0
  41d7b9:	cmp    r13,0x10
  41d7bd:	ja     0x41d7e0
  41d7bf:	lea    rax,[rip+0x33151]        # 0x450917
  41d7c6:	cmp    rdi,rax
  41d7c9:	je     0x41d7e0
  41d7cb:	mov    rax,QWORD PTR [rsp+0x48]
  41d7d0:	mov    r9d,0x3f3f
  41d7d6:	mov    WORD PTR [rax+r13*1],r9w
  41d7db:	add    r13,0x2
  41d7df:	nop
  41d7e0:	cmp    BYTE PTR [rsp+0x7f],0x2f
  41d7e5:	jne    0x41da30
  41d7eb:	cmp    rdi,QWORD PTR [rsi+0x10]
  41d7ef:	jne    0x41da30
  41d7f5:	mov    eax,DWORD PTR [rsi+0x18]
  41d7f8:	cmp    eax,0x20
  41d7fb:	je     0x41d806
  41d7fd:	cmp    eax,0x5c
  41d800:	jne    0x41de90
  41d806:	lea    rdx,[rip+0x3310d]        # 0x45091a
  41d80d:	mov    QWORD PTR [rsp+0x20],r12
  41d812:	mov    r9,r14
  41d815:	mov    r8d,0x1
  41d81b:	mov    rcx,rbp
  41d81e:	add    rbx,0x3
  41d822:	call   0x41cfb0
  41d827:	cmp    r13,0x10
  41d82b:	ja     0x41d850
  41d82d:	lea    rax,[rip+0x330e6]        # 0x45091a
  41d834:	cmp    rdi,rax
  41d837:	je     0x41d850
  41d839:	mov    rax,QWORD PTR [rsp+0x48]
  41d83e:	mov    BYTE PTR [rax+r13*1],0x2f
  41d843:	add    r13,0x1
  41d847:	nop    WORD PTR [rax+rax*1+0x0]
  41d850:	lea    r15,[rsi+0x10]
  41d854:	cmp    DWORD PTR [r15+0x8],0x20
  41d859:	je     0x41d8c0
  41d85b:	lea    rdx,[rip+0x330b3]        # 0x450915
  41d862:	mov    QWORD PTR [rsp+0x20],r12
  41d867:	mov    r9,r14
  41d86a:	mov    r8d,0x1
  41d870:	mov    rcx,rbp
  41d873:	add    rbx,0x1
  41d877:	call   0x41cfb0
  41d87c:	cmp    r13,0x10
  41d880:	mov    rdx,QWORD PTR [rsp+0x38]
  41d885:	ja     0x41d42f
  41d88b:	lea    rax,[rip+0x33083]        # 0x450915
  41d892:	mov    rdx,rdi
  41d895:	cmp    rdi,rax
  41d898:	je     0x41d42f
  41d89e:	mov    rax,QWORD PTR [rsp+0x48]
  41d8a3:	mov    rdx,QWORD PTR [rsp+0x38]
  41d8a8:	mov    BYTE PTR [rax+r13*1],0xa
  41d8ad:	add    r13,0x1
  41d8b1:	jmp    0x41d42f
  41d8b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d8c0:	lea    rdx,[rip+0x3304c]        # 0x450913
  41d8c7:	mov    QWORD PTR [rsp+0x20],r12
  41d8cc:	mov    r9,r14
  41d8cf:	mov    r8d,0x1
  41d8d5:	mov    rcx,rbp
  41d8d8:	call   0x41cfb0
  41d8dd:	lea    rax,[rbx+0x1]
  41d8e1:	cmp    r13,0x10
  41d8e5:	mov    QWORD PTR [rsp+0x40],rax
  41d8ea:	jbe    0x41da08
  41d8f0:	lea    rdx,[rip+0x3301e]        # 0x450915
  41d8f7:	mov    QWORD PTR [rsp+0x20],r12
  41d8fc:	mov    r9,r14
  41d8ff:	mov    r8d,0x1
  41d905:	mov    rcx,rbp
  41d908:	call   0x41cfb0
  41d90d:	mov    rbx,QWORD PTR [rsp+0x40]
  41d912:	mov    rdx,QWORD PTR [rsp+0x38]
  41d917:	add    rbx,0x1
  41d91b:	jmp    0x41d42f
  41d920:	lea    rax,[rip+0x32fea]        # 0x450911
  41d927:	cmp    rdi,rax
  41d92a:	je     0x41d9d5
  41d930:	mov    rax,QWORD PTR [rsp+0x48]
  41d935:	mov    r15,rsi
  41d938:	mov    BYTE PTR [rax+r13*1],0x5c
  41d93d:	add    r13,0x1
  41d941:	jmp    0x41d854
  41d946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d950:	add    r15,0x10
  41d954:	jmp    0x41d3e3
  41d959:	nop    DWORD PTR [rax+0x0]
  41d960:	cmp    r9d,0xf
  41d964:	ja     0x41d982
  41d966:	lea    ecx,[r9+0x1]
  41d96a:	cmp    rcx,r13
  41d96d:	mov    r9,rcx
  41d970:	jb     0x41d491
  41d976:	mov    DWORD PTR [rsp+0x54],ecx
  41d97a:	mov    rdi,rsi
  41d97d:	jmp    0x41d3e3
  41d982:	cmp    r8b,0x28
  41d986:	mov    DWORD PTR [rsp+0x54],r9d
  41d98b:	jne    0x41dd3c
  41d991:	mov    BYTE PTR [rsp+rcx*1+0x90],0x22
  41d999:	mov    rdi,rsi
  41d99c:	mov    r13d,0x11
  41d9a2:	mov    DWORD PTR [rsp+0x50],0x1
  41d9aa:	jmp    0x41d3e3
  41d9af:	nop
  41d9b0:	cmp    DWORD PTR [rsp+0x50],0x2
  41d9b5:	je     0x41da7c
  41d9bb:	cmp    ecx,0x29
  41d9be:	je     0x41dbc3
  41d9c4:	cmp    ecx,0xa
  41d9c7:	je     0x41dbde
  41d9cd:	mov    rdi,rsi
  41d9d0:	jmp    0x41d3e3
  41d9d5:	cmp    DWORD PTR [rsi+0x8],0x20
  41d9d9:	je     0x41df97
  41d9df:	lea    rdx,[rip+0x32f2f]        # 0x450915
  41d9e6:	mov    QWORD PTR [rsp+0x20],r12
  41d9eb:	mov    r9,r14
  41d9ee:	mov    r8d,0x1
  41d9f4:	mov    rcx,rbp
  41d9f7:	add    rbx,0x1
  41d9fb:	call   0x41cfb0
  41da00:	mov    r15,rsi
  41da03:	jmp    0x41d89e
  41da08:	lea    rax,[rip+0x32f04]        # 0x450913
  41da0f:	cmp    rdi,rax
  41da12:	je     0x41dca5
  41da18:	mov    rax,QWORD PTR [rsp+0x48]
  41da1d:	mov    rbx,QWORD PTR [rsp+0x40]
  41da22:	mov    BYTE PTR [rax+r13*1],0x20
  41da27:	add    r13,0x1
  41da2b:	jmp    0x41d85b
  41da30:	mov    rdx,QWORD PTR [rsp+0x60]
  41da35:	mov    rcx,rbp
  41da38:	mov    QWORD PTR [rsp+0x20],r12
  41da3d:	mov    r9,r14
  41da40:	mov    r8d,0x1
  41da46:	add    rbx,0x3
  41da4a:	mov    r15,rsi
  41da4d:	lea    rsi,[rdi+0x1]
  41da51:	call   0x41cfb0
  41da56:	cmp    r13,0x10
  41da5a:	movzx  ecx,BYTE PTR [rsp+0x7f]
  41da5f:	ja     0x41da74
  41da61:	cmp    rsi,QWORD PTR [rsp+0x60]
  41da66:	je     0x41da74
  41da68:	mov    BYTE PTR [rsp+r13*1+0xb0],cl
  41da70:	add    r13,0x1
  41da74:	mov    rdx,rsi
  41da77:	jmp    0x41d473
  41da7c:	mov    r8d,DWORD PTR [rsp+0x58]
  41da81:	mov    r10d,DWORD PTR [rsp+0x54]
  41da86:	mov    eax,r8d
  41da89:	cmp    r10d,eax
  41da8c:	jb     0x41dadf
  41da8e:	cmp    r13,rax
  41da91:	jbe    0x41dc78
  41da97:	movzx  r11d,BYTE PTR [rsp+rax*1+0x90]
  41daa0:	cmp    BYTE PTR [rsp+rax*1+0xb0],r11b
  41daa8:	jne    0x41dc78
  41daae:	mov    r9d,r10d
  41dab1:	jmp    0x41dad6
  41dab3:	mov    eax,r8d
  41dab6:	cmp    r13,rax
  41dab9:	jbe    0x41dc73
  41dabf:	movzx  r10d,BYTE PTR [rsp+rax*1+0x90]
  41dac8:	cmp    BYTE PTR [rsp+rax*1+0xb0],r10b
  41dad0:	jne    0x41dc73
  41dad6:	add    r8d,0x1
  41dada:	cmp    r8d,r9d
  41dadd:	jbe    0x41dab3
  41dadf:	mov    r10,rsi
  41dae2:	mov    rsi,rdx
  41dae5:	cmp    BYTE PTR [rbp+0x43e],0x0
  41daec:	jne    0x41df27
  41daf2:	cmp    QWORD PTR [rsp+0x80],0x0
  41dafb:	mov    rax,QWORD PTR [rbp+0x0]
  41daff:	mov    QWORD PTR [rax],r10
  41db02:	je     0x41dff3
  41db08:	sub    r10,rsi
  41db0b:	mov    rcx,rbp
  41db0e:	lea    rdx,[r10+rbx*1+0x1]
  41db13:	mov    r13,r10
  41db16:	add    ebx,r13d
  41db19:	call   0x41d0e0
  41db1e:	movzx  edi,BYTE PTR [rsp+0x5c]
  41db23:	mov    r9,rax
  41db26:	mov    rax,QWORD PTR [rsp+0x128]
  41db2e:	mov    DWORD PTR [rax+0x8],ebx
  41db31:	mov    QWORD PTR [rax+0x10],r9
  41db35:	mov    BYTE PTR [rax+0x4],dil
  41db39:	mov    rax,QWORD PTR [rsp+0x80]
  41db41:	test   rax,rax
  41db44:	mov    QWORD PTR [rsp+0x88],rax
  41db4c:	je     0x41df90
  41db52:	mov    rdx,QWORD PTR [rax+0x8]
  41db56:	mov    r8,QWORD PTR [rax+0x10]
  41db5a:	mov    rcx,r9
  41db5d:	sub    r8,rdx
  41db60:	call   0x449450
  41db65:	mov    r9,rax
  41db68:	mov    rax,QWORD PTR [rsp+0x88]
  41db70:	add    r9,QWORD PTR [rax+0x10]
  41db74:	sub    r9,QWORD PTR [rax+0x8]
  41db78:	mov    rax,QWORD PTR [rax]
  41db7b:	test   rax,rax
  41db7e:	mov    QWORD PTR [rsp+0x88],rax
  41db86:	jne    0x41db52
  41db88:	mov    rax,QWORD PTR [rsp+0x80]
  41db90:	mov    rdx,rax
  41db93:	jmp    0x41db98
  41db95:	mov    rdx,rcx
  41db98:	mov    rcx,QWORD PTR [rdx]
  41db9b:	test   rcx,rcx
  41db9e:	jne    0x41db95
  41dba0:	mov    rcx,QWORD PTR [rbp+0x48]
  41dba4:	mov    r8,r13
  41dba7:	mov    QWORD PTR [rdx],rcx
  41dbaa:	mov    QWORD PTR [rbp+0x48],rax
  41dbae:	mov    rdx,rsi
  41dbb1:	mov    rcx,r9
  41dbb4:	call   0x449450
  41dbb9:	mov    BYTE PTR [rax+r13*1],0x0
  41dbbe:	jmp    0x41d538
  41dbc3:	mov    rdi,rsi
  41dbc6:	xor    r13d,r13d
  41dbc9:	mov    DWORD PTR [rsp+0x50],0x2
  41dbd1:	mov    DWORD PTR [rsp+0x58],0x0
  41dbd9:	jmp    0x41d3e3
  41dbde:	cmp    BYTE PTR [rbp+0x10],0x0
  41dbe2:	jne    0x41debe
  41dbe8:	cmp    BYTE PTR [rbp+0x19],0x0
  41dbec:	je     0x41dc00
  41dbee:	mov    rax,QWORD PTR [rbp+0x0]
  41dbf2:	mov    rcx,QWORD PTR [rax+0x20]
  41dbf6:	cmp    QWORD PTR [rax+0x10],rcx
  41dbfa:	jae    0x41debe
  41dc00:	sub    rsi,rdx
  41dc03:	mov    rcx,rbp
  41dc06:	mov    QWORD PTR [rsp+0x20],r12
  41dc0b:	mov    r9,r14
  41dc0e:	mov    r8,rsi
  41dc11:	add    rbx,rsi
  41dc14:	call   0x41cfb0
  41dc19:	mov    rax,QWORD PTR [rbp+0x0]
  41dc1d:	mov    rcx,QWORD PTR [rax+0x20]
  41dc21:	cmp    QWORD PTR [rax],rcx
  41dc24:	jb     0x41dcdc
  41dc2a:	xor    edx,edx
  41dc2c:	mov    BYTE PTR [rax+0x68],0x1
  41dc30:	mov    QWORD PTR [rax],rdi
  41dc33:	mov    rcx,rbp
  41dc36:	call   0x41bef0
  41dc3b:	cmp    BYTE PTR [rbp+0x10],0x0
  41dc3f:	jne    0x41de0b
  41dc45:	mov    rcx,rbp
  41dc48:	call   0x41be50
  41dc4d:	test   al,al
  41dc4f:	je     0x41de0b
  41dc55:	mov    rax,QWORD PTR [rbp+0x0]
  41dc59:	mov    r11d,DWORD PTR [rax+0x38]
  41dc5d:	mov    rdx,QWORD PTR [rax]
  41dc60:	mov    rdi,rdx
  41dc63:	shl    r11,0x4
  41dc67:	add    r11,QWORD PTR [rax+0x30]
  41dc6b:	mov    r15,r11
  41dc6e:	jmp    0x41d3e3
  41dc73:	mov    DWORD PTR [rsp+0x58],r8d
  41dc78:	cmp    r13,rax
  41dc7b:	je     0x41d9cd
  41dc81:	mov    r13d,0x11
  41dc87:	mov    DWORD PTR [rsp+0x50],0x1
  41dc8f:	jmp    0x41d9bb
  41dc94:	mov    BYTE PTR [rsp+r13*1+0xb0],cl
  41dc9c:	add    r13,0x1
  41dca0:	jmp    0x41d473
  41dca5:	lea    rdx,[rip+0x32c69]        # 0x450915
  41dcac:	mov    QWORD PTR [rsp+0x20],r12
  41dcb1:	mov    r9,r14
  41dcb4:	mov    r8d,0x1
  41dcba:	mov    rcx,rbp
  41dcbd:	add    rbx,0x2
  41dcc1:	call   0x41cfb0
  41dcc6:	jmp    0x41d89e
  41dccb:	mov    rax,QWORD PTR [rsp+0x128]
  41dcd3:	mov    BYTE PTR [rax+0x4],0x3
  41dcd7:	jmp    0x41d538
  41dcdc:	mov    r9,QWORD PTR [rbp+0x28]
  41dce0:	mov    eax,DWORD PTR [r9+0xc]
  41dce4:	sub    eax,0x1
  41dce7:	lea    rdx,[rax+rax*4]
  41dceb:	mov    rax,QWORD PTR [r9]
  41dcee:	lea    rdx,[rax+rdx*8]
  41dcf2:	mov    eax,DWORD PTR [r9+0x3c]
  41dcf6:	movzx  ecx,BYTE PTR [rdx+0x1c]
  41dcfa:	sub    eax,DWORD PTR [rdx]
  41dcfc:	mov    r8d,DWORD PTR [rdx+0x10]
  41dd00:	shr    eax,cl
  41dd02:	mov    rcx,r9
  41dd05:	lea    edx,[r8+rax*1+0x1]
  41dd0a:	xor    r8d,r8d
  41dd0d:	call   0x40ad30
  41dd12:	mov    rax,QWORD PTR [rbp+0x0]
  41dd16:	jmp    0x41dc2a
  41dd1b:	mov    rax,QWORD PTR [rsp+0x130]
  41dd23:	movzx  ecx,BYTE PTR [rax+0x1]
  41dd27:	xor    eax,eax
  41dd29:	cmp    cl,0x38
  41dd2c:	sete   al
  41dd2f:	lea    eax,[rax+rax*1+0x3f]
  41dd33:	mov    DWORD PTR [rsp+0x5c],eax
  41dd37:	jmp    0x41d388
  41dd3c:	mov    rax,QWORD PTR [rbp+0x0]
  41dd40:	mov    r10,rsi
  41dd43:	sub    r10,QWORD PTR [rax+0x8]
  41dd47:	lea    rax,[rip+0x32bd2]        # 0x450920
  41dd4e:	mov    r9,r10
  41dd51:	add    r9d,0x1
  41dd55:	cmp    DWORD PTR [rsp+0x54],0x10
  41dd5a:	je     0x41de9c
  41dd60:	cmp    r8b,0xa
  41dd64:	je     0x41de95
  41dd6a:	lea    rax,[rip+0x32c0f]        # 0x450980
  41dd71:	mov    DWORD PTR [rsp+0x28],r8d
  41dd76:	mov    edx,0x3
  41dd7b:	mov    rcx,rbp
  41dd7e:	mov    QWORD PTR [rsp+0x20],rax
  41dd83:	mov    rax,QWORD PTR [rsp+0x128]
  41dd8b:	mov    r8d,DWORD PTR [rax]
  41dd8e:	call   0x414c40
  41dd93:	mov    rax,QWORD PTR [rsp+0x68]
  41dd98:	sub    rax,QWORD PTR [rsp+0x130]
  41dda0:	mov    rdi,QWORD PTR [rsp+0x130]
  41dda8:	mov    rdx,QWORD PTR [rbp+0x0]
  41ddac:	lea    rcx,[rdi+rax*1-0x1]
  41ddb1:	lea    r9d,[rax-0x1]
  41ddb5:	mov    r8,rdi
  41ddb8:	mov    QWORD PTR [rdx],rcx
  41ddbb:	mov    rdx,QWORD PTR [rsp+0x128]
  41ddc3:	mov    rcx,rbp
  41ddc6:	mov    DWORD PTR [rsp+0x20],0x3c
  41ddce:	call   0x41d220
  41ddd3:	mov    rax,QWORD PTR [rsp+0x80]
  41dddb:	test   rax,rax
  41ddde:	je     0x41d538
  41dde4:	mov    rdx,rax
  41dde7:	jmp    0x41ddf3
  41dde9:	nop    DWORD PTR [rax+0x0]
  41ddf0:	mov    rdx,rcx
  41ddf3:	mov    rcx,QWORD PTR [rdx]
  41ddf6:	test   rcx,rcx
  41ddf9:	jne    0x41ddf0
  41ddfb:	mov    rcx,QWORD PTR [rbp+0x48]
  41ddff:	mov    QWORD PTR [rdx],rcx
  41de02:	mov    QWORD PTR [rbp+0x48],rax
  41de06:	jmp    0x41d538
  41de0b:	mov    rax,QWORD PTR [rsp+0x128]
  41de13:	mov    rdi,QWORD PTR [rsp+0x128]
  41de1b:	mov    edx,0x40
  41de20:	mov    r8d,DWORD PTR [rax]
  41de23:	mov    BYTE PTR [rax+0x4],0x16
  41de27:	mov    rax,QWORD PTR [rbp+0x28]
  41de2b:	mov    eax,DWORD PTR [rax+0x3c]
  41de2e:	mov    WORD PTR [rdi+0x6],dx
  41de32:	mov    DWORD PTR [rdi],eax
  41de34:	mov    rax,QWORD PTR [rsp+0x80]
  41de3c:	test   rax,rax
  41de3f:	mov    rdx,rax
  41de42:	jne    0x41de53
  41de44:	jmp    0x41de66
  41de46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41de50:	mov    rdx,rcx
  41de53:	mov    rcx,QWORD PTR [rdx]
  41de56:	test   rcx,rcx
  41de59:	jne    0x41de50
  41de5b:	mov    rcx,QWORD PTR [rbp+0x48]
  41de5f:	mov    QWORD PTR [rdx],rcx
  41de62:	mov    QWORD PTR [rbp+0x48],rax
  41de66:	lea    rax,[rip+0x32b42]        # 0x4509af
  41de6d:	xor    r9d,r9d
  41de70:	mov    edx,0x3
  41de75:	mov    rcx,rbp
  41de78:	mov    QWORD PTR [rsp+0x20],rax
  41de7d:	call   0x414c40
  41de82:	jmp    0x41d538
  41de87:	nop    WORD PTR [rax+rax*1+0x0]
  41de90:	call   0x449548
  41de95:	lea    rax,[rip+0x32ab4]        # 0x450950
  41de9c:	mov    QWORD PTR [rsp+0x20],rax
  41dea1:	mov    rax,QWORD PTR [rsp+0x128]
  41dea9:	mov    edx,0x3
  41deae:	mov    rcx,rbp
  41deb1:	mov    r8d,DWORD PTR [rax]
  41deb4:	call   0x414c40
  41deb9:	jmp    0x41dd93
  41debe:	lea    rax,[rip+0x32aea]        # 0x4509af
  41dec5:	mov    rsi,rdx
  41dec8:	xor    r9d,r9d
  41decb:	mov    edx,0x3
  41ded0:	mov    rcx,rbp
  41ded3:	mov    QWORD PTR [rsp+0x20],rax
  41ded8:	mov    rax,QWORD PTR [rsp+0x128]
  41dee0:	mov    r8d,DWORD PTR [rax]
  41dee3:	call   0x414c40
  41dee8:	mov    r10,rdi
  41deeb:	mov    DWORD PTR [rsp+0x5c],0x3c
  41def3:	jmp    0x41dae5
  41def8:	mov    rdx,QWORD PTR [rbp+0x0]
  41defc:	mov    QWORD PTR [rsp+0x80],0x0
  41df08:	mov    QWORD PTR [rsp+0x88],0x0
  41df14:	mov    eax,DWORD PTR [rdx+0x38]
  41df17:	shl    rax,0x4
  41df1b:	add    rax,QWORD PTR [rdx+0x30]
  41df1f:	mov    r15,rax
  41df22:	jmp    0x41dd27
  41df27:	lea    rcx,[rbp+0x3f8]
  41df2e:	mov    rdx,r10
  41df31:	mov    QWORD PTR [rsp+0x38],r10
  41df36:	call   0x41b9a0
  41df3b:	test   al,al
  41df3d:	mov    r10,QWORD PTR [rsp+0x38]
  41df42:	je     0x41e019
  41df48:	cmp    BYTE PTR [rbp+0x43f],0x0
  41df4f:	je     0x41daf2
  41df55:	cmp    BYTE PTR [rbp+0x12],0x0
  41df59:	jne    0x41daf2
  41df5f:	lea    rax,[rip+0x32a62]        # 0x4509c8
  41df66:	xor    r9d,r9d
  41df69:	mov    edx,0x13
  41df6e:	mov    rcx,rbp
  41df71:	mov    QWORD PTR [rsp+0x20],rax
  41df76:	mov    rax,QWORD PTR [rsp+0x128]
  41df7e:	mov    r8d,DWORD PTR [rax]
  41df81:	call   0x414c80
  41df86:	mov    r10,QWORD PTR [rsp+0x38]
  41df8b:	jmp    0x41daf2
  41df90:	xor    eax,eax
  41df92:	jmp    0x41db90
  41df97:	lea    rdx,[rip+0x32975]        # 0x450913
  41df9e:	mov    QWORD PTR [rsp+0x20],r12
  41dfa3:	mov    r9,r14
  41dfa6:	mov    r8d,0x1
  41dfac:	mov    rcx,rbp
  41dfaf:	mov    r15,rsi
  41dfb2:	call   0x41cfb0
  41dfb7:	lea    rax,[rbx+0x1]
  41dfbb:	mov    QWORD PTR [rsp+0x40],rax
  41dfc0:	jmp    0x41da18
  41dfc5:	lea    rdx,[rip+0x32947]        # 0x450913
  41dfcc:	mov    QWORD PTR [rsp+0x20],r12
  41dfd1:	mov    r9,r14
  41dfd4:	mov    r8d,0x1
  41dfda:	mov    rcx,rbp
  41dfdd:	mov    r15,rsi
  41dfe0:	call   0x41cfb0
  41dfe5:	lea    rax,[rbx+0x1]
  41dfe9:	mov    QWORD PTR [rsp+0x40],rax
  41dfee:	jmp    0x41d8f0
  41dff3:	mov    eax,DWORD PTR [rsp+0x5c]
  41dff7:	mov    rdx,QWORD PTR [rsp+0x128]
  41dfff:	mov    r9d,r10d
  41e002:	sub    r9d,esi
  41e005:	mov    r8,rsi
  41e008:	mov    rcx,rbp
  41e00b:	mov    DWORD PTR [rsp+0x20],eax
  41e00f:	call   0x41d220
  41e014:	jmp    0x41d538
  41e019:	movzx  eax,BYTE PTR [r10]
  41e01d:	mov    r12,QWORD PTR [rip+0x3ce0c]        # 0x45ae30
  41e024:	test   BYTE PTR [r12+rax*2+0x1],0x2
  41e02a:	je     0x41daf2
  41e030:	mov    ecx,DWORD PTR [rsp+0x5c]
  41e034:	mov    QWORD PTR [rsp+0x38],r10
  41e039:	call   0x415dd0
  41e03e:	mov    r10,QWORD PTR [rsp+0x38]
  41e043:	mov    DWORD PTR [rsp+0x5c],eax
  41e047:	movzx  edx,BYTE PTR [r10+0x1]
  41e04c:	lea    rax,[r10+0x1]
  41e050:	mov    r10,rax
  41e053:	test   WORD PTR [r12+rdx*2],0x204
  41e05a:	je     0x41daf2
  41e060:	add    r10,0x1
  41e064:	movzx  eax,BYTE PTR [r10]
  41e068:	test   WORD PTR [r12+rax*2],0x204
  41e06f:	jne    0x41e060
  41e071:	jmp    0x41daf2
  41e076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e080:	push   r15
  41e082:	push   r14
  41e084:	push   r13
  41e086:	push   r12
  41e088:	push   rbp
  41e089:	push   rdi
  41e08a:	push   rsi
  41e08b:	push   rbx
  41e08c:	sub    rsp,0x58
  41e090:	mov    rsi,QWORD PTR [rcx+0x1a8]
  41e097:	lea    r13,[rip+0x32c1e]        # 0x450cbc
  41e09e:	lea    r12,[rcx+0x1b0]
  41e0a5:	mov    rbx,rcx
  41e0a8:	lea    rax,[rsi+0x18]
  41e0ac:	mov    QWORD PTR [rcx+0x1a8],rax
  41e0b3:	mov    rdi,QWORD PTR [rbx]
  41e0b6:	xor    r10d,r10d
  41e0b9:	mov    WORD PTR [rsi+0x6],r10w
  41e0be:	cmp    BYTE PTR [rdi+0x68],0x0
  41e0c2:	je     0x41e123
  41e0c4:	cmp    BYTE PTR [rbx+0x20],0x0
  41e0c8:	jne    0x41e957
  41e0ce:	cmp    BYTE PTR [rbx+0x10],0x0
  41e0d2:	jne    0x41e240
  41e0d8:	mov    rcx,rbx
  41e0db:	call   0x41be50
  41e0e0:	test   al,al
  41e0e2:	je     0x41e240
  41e0e8:	mov    r8d,DWORD PTR [rbx+0x1dc]
  41e0ef:	test   r8d,r8d
  41e0f2:	jne    0x41e10d
  41e0f4:	mov    rsi,QWORD PTR [rbx+0x1c0]
  41e0fb:	mov    QWORD PTR [rbx+0x1d0],r12
  41e102:	lea    rax,[rsi+0x18]
  41e106:	mov    QWORD PTR [rbx+0x1a8],rax
  41e10d:	mov    ecx,0x40
  41e112:	mov    WORD PTR [rsi+0x6],cx
  41e116:	cmp    BYTE PTR [rbx+0x19],0x2
  41e11a:	je     0x41e214
  41e120:	mov    rdi,QWORD PTR [rbx]
  41e123:	lea    r14,[rip+0x32aba]        # 0x450be4
  41e12a:	mov    rax,QWORD PTR [rbx+0x28]
  41e12e:	mov    eax,DWORD PTR [rax+0x3c]
  41e131:	mov    DWORD PTR [rsi],eax
  41e133:	mov    eax,DWORD PTR [rdi+0x38]
  41e136:	mov    rcx,QWORD PTR [rdi]
  41e139:	shl    rax,0x4
  41e13d:	add    rax,QWORD PTR [rdi+0x30]
  41e141:	cmp    rcx,QWORD PTR [rax]
  41e144:	jb     0x41e151
  41e146:	cmp    QWORD PTR [rbx+0x8],0x0
  41e14b:	je     0x41e910
  41e151:	lea    rdx,[rcx+0x1]
  41e155:	mov    rax,QWORD PTR [rbx+0x530]
  41e15c:	mov    QWORD PTR [rdi],rdx
  41e15f:	movzx  r15d,BYTE PTR [rcx]
  41e163:	test   rax,rax
  41e166:	mov    rbp,r15
  41e169:	je     0x41e222
  41e16f:	mov    eax,DWORD PTR [rax]
  41e171:	mov    DWORD PTR [rsi],eax
  41e173:	cmp    bpl,0x7e
  41e177:	ja     0x41e900
  41e17d:	movsxd rax,DWORD PTR [r13+rbp*4+0x0]
  41e182:	add    rax,r13
  41e185:	jmp    rax
  41e187:	cmp    r15d,0x52
  41e18b:	je     0x41e1a0
  41e18d:	cmp    BYTE PTR [r8+0x1],0x22
  41e192:	je     0x41e8ab
  41e198:	nop    DWORD PTR [rax+rax*1+0x0]
  41e1a0:	mov    BYTE PTR [rsi+0x4],0x35
  41e1a4:	mov    BYTE PTR [rsp+0x44],0x0
  41e1a9:	lea    rbp,[rsp+0x40]
  41e1ae:	mov    rdx,QWORD PTR [rdi]
  41e1b1:	xor    r8d,r8d
  41e1b4:	mov    rcx,rbx
  41e1b7:	mov    r9,rbp
  41e1ba:	mov    DWORD PTR [rsp+0x40],0x0
  41e1c2:	mov    DWORD PTR [rsp+0x48],0x0
  41e1ca:	sub    rdx,0x1
  41e1ce:	call   0x41b7f0
  41e1d3:	lea    r8,[rbp+0x8]
  41e1d7:	mov    QWORD PTR [rsi+0x8],rax
  41e1db:	mov    rdx,rsi
  41e1de:	mov    rcx,rbx
  41e1e1:	call   0x41c700
  41e1e6:	mov    rax,QWORD PTR [rsi+0x8]
  41e1ea:	test   BYTE PTR [rax+0x18],0x40
  41e1ee:	je     0x41e200
  41e1f0:	or     WORD PTR [rsi+0x6],0x10
  41e1f5:	movzx  eax,BYTE PTR [rax+0x10]
  41e1f9:	shr    al,1
  41e1fb:	mov    BYTE PTR [rsi+0x4],al
  41e1fe:	xchg   ax,ax
  41e200:	mov    rax,rsi
  41e203:	add    rsp,0x58
  41e207:	pop    rbx
  41e208:	pop    rsi
  41e209:	pop    rdi
  41e20a:	pop    rbp
  41e20b:	pop    r12
  41e20d:	pop    r13
  41e20f:	pop    r14
  41e211:	pop    r15
  41e213:	ret    
  41e214:	mov    edx,0x41
  41e219:	mov    WORD PTR [rsi+0x6],dx
  41e21d:	jmp    0x41e120
  41e222:	sub    rdx,QWORD PTR [rdi+0x8]
  41e226:	mov    rcx,QWORD PTR [rbx+0x28]
  41e22a:	call   0x40af20
  41e22f:	mov    DWORD PTR [rsi],eax
  41e231:	jmp    0x41e173
  41e236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e240:	mov    BYTE PTR [rsi+0x4],0x16
  41e244:	cmp    BYTE PTR [rbx+0x10],0x0
  41e248:	jne    0x41e200
  41e24a:	mov    rax,QWORD PTR [rbx+0x28]
  41e24e:	mov    r9d,0x40
  41e254:	mov    eax,DWORD PTR [rax+0x3c]
  41e257:	mov    WORD PTR [rsi+0x6],r9w
  41e25c:	mov    DWORD PTR [rsi],eax
  41e25e:	jmp    0x41e200
  41e260:	lea    rdi,[rsp+0x40]
  41e265:	lea    rdx,[rsi+0x8]
  41e269:	mov    DWORD PTR [rsp+0x40],0x0
  41e271:	mov    BYTE PTR [rsp+0x44],0x0
  41e276:	mov    DWORD PTR [rsp+0x48],0x0
  41e27e:	mov    rcx,rbx
  41e281:	mov    r8,rdi
  41e284:	mov    BYTE PTR [rsi+0x4],0x37
  41e288:	call   0x41d130
  41e28d:	lea    r8,[rdi+0x8]
  41e291:	mov    rdx,rsi
  41e294:	mov    rcx,rbx
  41e297:	call   0x41c700
  41e29c:	jmp    0x41e200
  41e2a1:	mov    rdx,QWORD PTR [rdi]
  41e2a4:	mov    BYTE PTR [rsi+0x4],0x30
  41e2a8:	mov    rcx,QWORD PTR [rip+0x3cb81]        # 0x45ae30
  41e2af:	movzx  r8d,BYTE PTR [rdx]
  41e2b3:	test   BYTE PTR [rcx+r8*2],0x4
  41e2b8:	jne    0x41e260
  41e2ba:	cmp    r8b,0x2e
  41e2be:	je     0x41eaf1
  41e2c4:	cmp    r8b,0x2a
  41e2c8:	jne    0x41e200
  41e2ce:	cmp    BYTE PTR [rbx+0x418],0x0
  41e2d5:	je     0x41e200
  41e2db:	add    rdx,0x1
  41e2df:	mov    QWORD PTR [rdi],rdx
  41e2e2:	mov    BYTE PTR [rsi+0x4],0x33
  41e2e6:	jmp    0x41e200
  41e2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41e2f0:	mov    rbp,QWORD PTR [rbx]
  41e2f3:	or     WORD PTR [rsi+0x6],0x1
  41e2f8:	xor    r10d,r10d
  41e2fb:	lea    r11,[rip+0x328ec]        # 0x450bee
  41e302:	mov    r9,QWORD PTR [rbp+0x0]
  41e306:	jmp    0x41e394
  41e30b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e310:	cmp    BYTE PTR [rbx+0x10],0x0
  41e314:	je     0x41e370
  41e316:	cmp    BYTE PTR [rbx+0x437],0x0
  41e31d:	je     0x41e370
  41e31f:	mov    rdx,QWORD PTR [rbx+0x28]
  41e323:	cmp    r15d,0xc
  41e327:	mov    rax,r11
  41e32a:	cmove  rax,r14
  41e32e:	sub    r9,QWORD PTR [rbp+0x8]
  41e332:	mov    rcx,rbx
  41e335:	mov    BYTE PTR [rsp+0x3f],r10b
  41e33a:	mov    QWORD PTR [rsp+0x30],r11
  41e33f:	mov    r8d,DWORD PTR [rdx+0x3c]
  41e343:	mov    QWORD PTR [rsp+0x28],rax
  41e348:	lea    rax,[rip+0x328ac]        # 0x450bfb
  41e34f:	mov    edx,0x2
  41e354:	mov    QWORD PTR [rsp+0x20],rax
  41e359:	call   0x414c40
  41e35e:	movzx  r10d,BYTE PTR [rsp+0x3f]
  41e364:	mov    r9,QWORD PTR [rbp+0x0]
  41e368:	mov    r11,QWORD PTR [rsp+0x30]
  41e36d:	nop    DWORD PTR [rax]
  41e370:	lea    rax,[r9+0x1]
  41e374:	mov    rcx,QWORD PTR [rip+0x3cab5]        # 0x45ae30
  41e37b:	mov    QWORD PTR [rbp+0x0],rax
  41e37f:	movzx  edx,BYTE PTR [r9]
  41e383:	test   BYTE PTR [rcx+rdx*2+0x1],0x8
  41e388:	mov    r15,rdx
  41e38b:	je     0x41e930
  41e391:	mov    r9,rax
  41e394:	cmp    r15d,0x9
  41e398:	je     0x41e370
  41e39a:	cmp    r15d,0x20
  41e39e:	je     0x41e370
  41e3a0:	test   r15d,r15d
  41e3a3:	jne    0x41e310
  41e3a9:	mov    r10d,0x1
  41e3af:	jmp    0x41e370
  41e3b1:	mov    rax,QWORD PTR [rdi]
  41e3b4:	mov    BYTE PTR [rsi+0x4],0xb
  41e3b8:	cmp    BYTE PTR [rax],0x3d
  41e3bb:	jne    0x41e200
  41e3c1:	add    rax,0x1
  41e3c5:	mov    QWORD PTR [rdi],rax
  41e3c8:	mov    BYTE PTR [rsi+0x4],0x22
  41e3cc:	jmp    0x41e200
  41e3d1:	mov    BYTE PTR [rsi+0x4],0xe
  41e3d5:	jmp    0x41e200
  41e3da:	nop    WORD PTR [rax+rax*1+0x0]
  41e3e0:	mov    BYTE PTR [rsi+0x4],0x2a
  41e3e4:	jmp    0x41e200
  41e3e9:	nop    DWORD PTR [rax+0x0]
  41e3f0:	mov    rax,QWORD PTR [rdi]
  41e3f3:	mov    BYTE PTR [rsi+0x4],0xa
  41e3f7:	movzx  edx,BYTE PTR [rax]
  41e3fa:	cmp    dl,0x7c
  41e3fd:	je     0x41eab2
  41e403:	cmp    dl,0x3d
  41e406:	jne    0x41e200
  41e40c:	add    rax,0x1
  41e410:	mov    QWORD PTR [rdi],rax
  41e413:	mov    BYTE PTR [rsi+0x4],0x21
  41e417:	jmp    0x41e200
  41e41c:	nop    DWORD PTR [rax+0x0]
  41e420:	mov    r15,QWORD PTR [rdi]
  41e423:	movzx  ebp,BYTE PTR [r15]
  41e427:	cmp    ebp,0x2a
  41e42a:	je     0x41eb30
  41e430:	cmp    ebp,0x2f
  41e433:	jne    0x41eb94
  41e439:	cmp    BYTE PTR [rbx+0x419],0x0
  41e440:	je     0x41ebb0
  41e446:	mov    eax,DWORD PTR [rbx+0x414]
  41e44c:	test   eax,eax
  41e44e:	jne    0x41e463
  41e450:	cmp    BYTE PTR [rbx+0x437],0x0
  41e457:	je     0x41e463
  41e459:	test   BYTE PTR [rdi+0x6c],0x1
  41e45d:	je     0x41ebcb
  41e463:	mov    rdx,QWORD PTR [rbx]
  41e466:	mov    rax,QWORD PTR [rbx+0x28]
  41e46a:	mov    rcx,QWORD PTR [rdx]
  41e46d:	mov    r8d,DWORD PTR [rax+0x3c]
  41e471:	cmp    BYTE PTR [rcx],0xa
  41e474:	lea    rax,[rcx+0x1]
  41e478:	je     0x41e48d
  41e47a:	nop    WORD PTR [rax+rax*1+0x0]
  41e480:	mov    QWORD PTR [rdx],rax
  41e483:	add    rax,0x1
  41e487:	cmp    BYTE PTR [rax-0x1],0xa
  41e48b:	jne    0x41e480
  41e48d:	mov    edx,0x1
  41e492:	mov    rcx,rbx
  41e495:	mov    DWORD PTR [rsp+0x30],r8d
  41e49a:	call   0x41bef0
  41e49f:	mov    rax,QWORD PTR [rbx+0x28]
  41e4a3:	mov    r8d,DWORD PTR [rsp+0x30]
  41e4a8:	cmp    r8d,DWORD PTR [rax+0x3c]
  41e4ac:	je     0x41e4cb
  41e4ae:	cmp    BYTE PTR [rbx+0x424],0x0
  41e4b5:	je     0x41e4cb
  41e4b7:	lea    r8,[rip+0x327eb]        # 0x450ca9
  41e4be:	mov    edx,0x2
  41e4c3:	mov    rcx,rbx
  41e4c6:	call   0x414b90
  41e4cb:	cmp    BYTE PTR [rbx+0x15],0x0
  41e4cf:	jne    0x41ec32
  41e4d5:	or     WORD PTR [rsi+0x6],0x1
  41e4da:	jmp    0x41e12a
  41e4df:	nop
  41e4e0:	mov    BYTE PTR [rsi+0x4],0x28
  41e4e4:	jmp    0x41e200
  41e4e9:	nop    DWORD PTR [rax+0x0]
  41e4f0:	mov    rax,QWORD PTR [rdi]
  41e4f3:	mov    BYTE PTR [rsi+0x4],0x0
  41e4f7:	cmp    BYTE PTR [rax],0x3d
  41e4fa:	jne    0x41e200
  41e500:	add    rax,0x1
  41e504:	mov    QWORD PTR [rdi],rax
  41e507:	mov    BYTE PTR [rsi+0x4],0x17
  41e50b:	jmp    0x41e200
  41e510:	cmp    BYTE PTR [rbx+0x13],0x0
  41e514:	jne    0x41e9de
  41e51a:	mov    rax,QWORD PTR [rdi]
  41e51d:	mov    BYTE PTR [rsi+0x4],0x3
  41e521:	movzx  edx,BYTE PTR [rax]
  41e524:	cmp    dl,0x3d
  41e527:	je     0x41eac2
  41e52d:	cmp    dl,0x3c
  41e530:	je     0x41eb0b
  41e536:	cmp    BYTE PTR [rbx+0x41e],0x0
  41e53d:	je     0x41e200
  41e543:	cmp    dl,0x3a
  41e546:	je     0x41ebfc
  41e54c:	cmp    dl,0x25
  41e54f:	jne    0x41e200
  41e555:	add    rax,0x1
  41e559:	mov    QWORD PTR [rdi],rax
  41e55c:	or     WORD PTR [rsi+0x6],0x2
  41e561:	mov    BYTE PTR [rsi+0x4],0x29
  41e565:	jmp    0x41e200
  41e56a:	nop    WORD PTR [rax+rax*1+0x0]
  41e570:	mov    BYTE PTR [rsi+0x4],0x2b
  41e574:	jmp    0x41e200
  41e579:	nop    DWORD PTR [rax+0x0]
  41e580:	mov    rax,QWORD PTR [rdi]
  41e583:	mov    BYTE PTR [rsi+0x4],0x12
  41e587:	movzx  edx,BYTE PTR [rax]
  41e58a:	cmp    dl,0x3a
  41e58d:	je     0x41e9ff
  41e593:	cmp    dl,0x3e
  41e596:	jne    0x41e200
  41e59c:	cmp    BYTE PTR [rbx+0x41e],0x0
  41e5a3:	je     0x41e200
  41e5a9:	add    rax,0x1
  41e5ad:	mov    QWORD PTR [rdi],rax
  41e5b0:	or     WORD PTR [rsi+0x6],0x2
  41e5b5:	mov    BYTE PTR [rsi+0x4],0x28
  41e5b9:	jmp    0x41e200
  41e5be:	xchg   ax,ax
  41e5c0:	mov    rax,QWORD PTR [rdi]
  41e5c3:	mov    BYTE PTR [rsi+0x4],0x9
  41e5c7:	movzx  edx,BYTE PTR [rax]
  41e5ca:	cmp    dl,0x26
  41e5cd:	je     0x41ea3c
  41e5d3:	cmp    dl,0x3d
  41e5d6:	jne    0x41e200
  41e5dc:	add    rax,0x1
  41e5e0:	mov    QWORD PTR [rdi],rax
  41e5e3:	mov    BYTE PTR [rsi+0x4],0x20
  41e5e7:	jmp    0x41e200
  41e5ec:	nop    DWORD PTR [rax+0x0]
  41e5f0:	mov    BYTE PTR [rsi+0x4],0x34
  41e5f4:	jmp    0x41e200
  41e5f9:	nop    DWORD PTR [rax+0x0]
  41e600:	mov    rax,QWORD PTR [rdi]
  41e603:	mov    BYTE PTR [rsi+0x4],0x4
  41e607:	movzx  edx,BYTE PTR [rax]
  41e60a:	cmp    dl,0x2b
  41e60d:	je     0x41eaa2
  41e613:	cmp    dl,0x3d
  41e616:	jne    0x41e200
  41e61c:	add    rax,0x1
  41e620:	mov    QWORD PTR [rdi],rax
  41e623:	mov    BYTE PTR [rsi+0x4],0x1b
  41e627:	jmp    0x41e200
  41e62c:	nop    DWORD PTR [rax+0x0]
  41e630:	mov    rax,QWORD PTR [rdi]
  41e633:	mov    BYTE PTR [rsi+0x4],0x6
  41e637:	cmp    BYTE PTR [rax],0x3d
  41e63a:	jne    0x41e200
  41e640:	add    rax,0x1
  41e644:	mov    QWORD PTR [rdi],rax
  41e647:	mov    BYTE PTR [rsi+0x4],0x1d
  41e64b:	jmp    0x41e200
  41e650:	mov    rax,QWORD PTR [rdi]
  41e653:	mov    BYTE PTR [rsi+0x4],0x2
  41e657:	movzx  edx,BYTE PTR [rax]
  41e65a:	cmp    dl,0x3d
  41e65d:	je     0x41ea2c
  41e663:	cmp    dl,0x3e
  41e666:	jne    0x41e200
  41e66c:	lea    rdx,[rax+0x1]
  41e670:	mov    QWORD PTR [rdi],rdx
  41e673:	mov    BYTE PTR [rsi+0x4],0xc
  41e677:	cmp    BYTE PTR [rax+0x1],0x3d
  41e67b:	jne    0x41e200
  41e681:	add    rax,0x2
  41e685:	mov    QWORD PTR [rdi],rax
  41e688:	mov    BYTE PTR [rsi+0x4],0x23
  41e68c:	jmp    0x41e200
  41e691:	mov    rax,QWORD PTR [rdi]
  41e694:	mov    BYTE PTR [rsi+0x4],0x5
  41e698:	movzx  edx,BYTE PTR [rax]
  41e69b:	cmp    dl,0x3e
  41e69e:	je     0x41ea4c
  41e6a4:	cmp    dl,0x2d
  41e6a7:	je     0x41eae1
  41e6ad:	cmp    dl,0x3d
  41e6b0:	jne    0x41e200
  41e6b6:	add    rax,0x1
  41e6ba:	mov    QWORD PTR [rdi],rax
  41e6bd:	mov    BYTE PTR [rsi+0x4],0x1c
  41e6c1:	jmp    0x41e200
  41e6c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e6d0:	mov    BYTE PTR [rsi+0x4],0x11
  41e6d4:	jmp    0x41e200
  41e6d9:	nop    DWORD PTR [rax+0x0]
  41e6e0:	mov    r8,QWORD PTR [rdi]
  41e6e3:	sub    r8,0x1
  41e6e7:	mov    rdx,rsi
  41e6ea:	mov    rcx,rbx
  41e6ed:	call   0x41d270
  41e6f2:	jmp    0x41e200
  41e6f7:	nop    WORD PTR [rax+rax*1+0x0]
  41e700:	mov    rax,QWORD PTR [rdi]
  41e703:	mov    BYTE PTR [rsi+0x4],0x1
  41e707:	cmp    BYTE PTR [rax],0x3d
  41e70a:	jne    0x41e200
  41e710:	add    rax,0x1
  41e714:	mov    QWORD PTR [rdi],rax
  41e717:	mov    BYTE PTR [rsi+0x4],0x18
  41e71b:	jmp    0x41e200
  41e720:	mov    rax,QWORD PTR [rdi+0x20]
  41e724:	cmp    QWORD PTR [rdi],rax
  41e727:	jb     0x41e972
  41e72d:	mov    BYTE PTR [rdi+0x68],0x1
  41e731:	jmp    0x41e0b3
  41e736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e740:	mov    BYTE PTR [rsi+0x4],0x29
  41e744:	jmp    0x41e200
  41e749:	nop    DWORD PTR [rax+0x0]
  41e750:	mov    rax,QWORD PTR [rdi]
  41e753:	lea    r12,[rsp+0x40]
  41e758:	mov    edx,0x1
  41e75d:	mov    rcx,rbx
  41e760:	mov    r8,r12
  41e763:	lea    rbp,[rax-0x1]
  41e767:	mov    QWORD PTR [rdi],rbp
  41e76a:	mov    DWORD PTR [rsp+0x40],0x0
  41e772:	mov    BYTE PTR [rsp+0x44],0x0
  41e777:	mov    DWORD PTR [rsp+0x48],0x0
  41e77f:	call   0x41b720
  41e784:	test   al,al
  41e786:	jne    0x41e9ad
  41e78c:	mov    rax,QWORD PTR [rdi]
  41e78f:	add    rax,0x1
  41e793:	mov    QWORD PTR [rdi],rax
  41e796:	lea    r8,[rax-0x1]
  41e79a:	mov    DWORD PTR [rsp+0x20],0x3c
  41e7a2:	mov    r9d,0x1
  41e7a8:	mov    rdx,rsi
  41e7ab:	mov    rcx,rbx
  41e7ae:	call   0x41d220
  41e7b3:	jmp    0x41e200
  41e7b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e7c0:	mov    rax,QWORD PTR [rdi]
  41e7c3:	mov    BYTE PTR [rsi+0x4],0x25
  41e7c7:	cmp    BYTE PTR [rax],0x23
  41e7ca:	je     0x41ea1c
  41e7d0:	mov    DWORD PTR [rsi+0x8],0x0
  41e7d7:	jmp    0x41e200
  41e7dc:	nop    DWORD PTR [rax+0x0]
  41e7e0:	mov    rax,QWORD PTR [rdi]
  41e7e3:	mov    BYTE PTR [rsi+0x4],0x8
  41e7e7:	movzx  edx,BYTE PTR [rax]
  41e7ea:	cmp    dl,0x3d
  41e7ed:	je     0x41ea92
  41e7f3:	cmp    BYTE PTR [rbx+0x41e],0x0
  41e7fa:	je     0x41e200
  41e800:	cmp    dl,0x3a
  41e803:	je     0x41eb59
  41e809:	cmp    dl,0x3e
  41e80c:	jne    0x41e200
  41e812:	add    rax,0x1
  41e816:	mov    QWORD PTR [rdi],rax
  41e819:	or     WORD PTR [rsi+0x6],0x2
  41e81e:	mov    BYTE PTR [rsi+0x4],0x2a
  41e822:	jmp    0x41e200
  41e827:	nop    WORD PTR [rax+rax*1+0x0]
  41e830:	cmp    r15d,0x4c
  41e834:	je     0x41ea7e
  41e83a:	cmp    BYTE PTR [rbx+0x421],0x0
  41e841:	jne    0x41e85a
  41e843:	cmp    r15d,0x52
  41e847:	je     0x41e1a0
  41e84d:	cmp    BYTE PTR [rbx+0x420],0x0
  41e854:	je     0x41e1a0
  41e85a:	mov    r8,QWORD PTR [rdi]
  41e85d:	movzx  eax,BYTE PTR [r8]
  41e861:	cmp    al,0x27
  41e863:	je     0x41ead2
  41e869:	cmp    al,0x22
  41e86b:	je     0x41e6e3
  41e871:	cmp    al,0x52
  41e873:	je     0x41e187
  41e879:	cmp    al,0x38
  41e87b:	jne    0x41e1a0
  41e881:	cmp    r15d,0x75
  41e885:	jne    0x41e1a0
  41e88b:	movzx  eax,BYTE PTR [r8+0x1]
  41e890:	cmp    al,0x22
  41e892:	je     0x41e6e3
  41e898:	cmp    al,0x52
  41e89a:	jne    0x41e1a0
  41e8a0:	cmp    BYTE PTR [r8+0x2],0x22
  41e8a5:	jne    0x41e1a0
  41e8ab:	cmp    BYTE PTR [rbx+0x421],0x0
  41e8b2:	jne    0x41e6e3
  41e8b8:	jmp    0x41e1a0
  41e8bd:	nop    DWORD PTR [rax]
  41e8c0:	mov    BYTE PTR [rsi+0x4],0x13
  41e8c4:	jmp    0x41e200
  41e8c9:	nop    DWORD PTR [rax+0x0]
  41e8d0:	mov    BYTE PTR [rsi+0x4],0x15
  41e8d4:	jmp    0x41e200
  41e8d9:	nop    DWORD PTR [rax+0x0]
  41e8e0:	mov    BYTE PTR [rsi+0x4],0x14
  41e8e4:	jmp    0x41e200
  41e8e9:	nop    DWORD PTR [rax+0x0]
  41e8f0:	mov    BYTE PTR [rsi+0x4],0x27
  41e8f4:	jmp    0x41e200
  41e8f9:	nop    DWORD PTR [rax+0x0]
  41e900:	mov    rax,QWORD PTR [rdi]
  41e903:	jmp    0x41e796
  41e908:	nop    DWORD PTR [rax+rax*1+0x0]
  41e910:	mov    rcx,rbx
  41e913:	xor    edx,edx
  41e915:	call   0x41bef0
  41e91a:	mov    rax,QWORD PTR [rbx+0x28]
  41e91e:	mov    rcx,QWORD PTR [rdi]
  41e921:	mov    eax,DWORD PTR [rax+0x3c]
  41e924:	mov    DWORD PTR [rsi],eax
  41e926:	jmp    0x41e151
  41e92b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e930:	test   r10b,r10b
  41e933:	je     0x41e94a
  41e935:	lea    r8,[rip+0x322dd]        # 0x450c19
  41e93c:	xor    edx,edx
  41e93e:	mov    rcx,rbx
  41e941:	call   0x414b60
  41e946:	mov    rax,QWORD PTR [rbp+0x0]
  41e94a:	sub    rax,0x1
  41e94e:	mov    QWORD PTR [rbp+0x0],rax
  41e952:	jmp    0x41e133
  41e957:	mov    BYTE PTR [rsi+0x4],0x50
  41e95b:	cmp    BYTE PTR [rbx+0x21],0x0
  41e95f:	mov    BYTE PTR [rbx+0x20],0x0
  41e963:	jne    0x41e200
  41e969:	sub    BYTE PTR [rbx+0x18],0x1
  41e96d:	jmp    0x41e200
  41e972:	mov    r9,QWORD PTR [rbx+0x28]
  41e976:	mov    eax,DWORD PTR [r9+0xc]
  41e97a:	sub    eax,0x1
  41e97d:	lea    rdx,[rax+rax*4]
  41e981:	mov    rax,QWORD PTR [r9]
  41e984:	lea    rdx,[rax+rdx*8]
  41e988:	mov    eax,DWORD PTR [r9+0x3c]
  41e98c:	movzx  ecx,BYTE PTR [rdx+0x1c]
  41e990:	sub    eax,DWORD PTR [rdx]
  41e992:	mov    r8d,DWORD PTR [rdx+0x10]
  41e996:	shr    eax,cl
  41e998:	mov    rcx,r9
  41e99b:	lea    edx,[r8+rax*1+0x1]
  41e9a0:	xor    r8d,r8d
  41e9a3:	call   0x40ad30
  41e9a8:	jmp    0x41e72d
  41e9ad:	mov    rdx,rbp
  41e9b0:	mov    rcx,rbx
  41e9b3:	mov    BYTE PTR [rsi+0x4],0x35
  41e9b7:	mov    r9,r12
  41e9ba:	mov    r8d,0x1
  41e9c0:	call   0x41b7f0
  41e9c5:	lea    r8,[r12+0x8]
  41e9ca:	mov    QWORD PTR [rsi+0x8],rax
  41e9ce:	mov    rdx,rsi
  41e9d1:	mov    rcx,rbx
  41e9d4:	call   0x41c700
  41e9d9:	jmp    0x41e200
  41e9de:	mov    r8,QWORD PTR [rdi]
  41e9e1:	mov    rdx,rsi
  41e9e4:	mov    rcx,rbx
  41e9e7:	sub    r8,0x1
  41e9eb:	call   0x41d270
  41e9f0:	cmp    BYTE PTR [rsi+0x4],0x3
  41e9f4:	jne    0x41e200
  41e9fa:	jmp    0x41e51a
  41e9ff:	cmp    BYTE PTR [rbx+0x418],0x0
  41ea06:	je     0x41e200
  41ea0c:	add    rax,0x1
  41ea10:	mov    QWORD PTR [rdi],rax
  41ea13:	mov    BYTE PTR [rsi+0x4],0x31
  41ea17:	jmp    0x41e200
  41ea1c:	add    rax,0x1
  41ea20:	mov    QWORD PTR [rdi],rax
  41ea23:	mov    BYTE PTR [rsi+0x4],0x26
  41ea27:	jmp    0x41e7d0
  41ea2c:	add    rax,0x1
  41ea30:	mov    QWORD PTR [rdi],rax
  41ea33:	mov    BYTE PTR [rsi+0x4],0x19
  41ea37:	jmp    0x41e200
  41ea3c:	add    rax,0x1
  41ea40:	mov    QWORD PTR [rdi],rax
  41ea43:	mov    BYTE PTR [rsi+0x4],0xf
  41ea47:	jmp    0x41e200
  41ea4c:	lea    rdx,[rax+0x1]
  41ea50:	mov    QWORD PTR [rdi],rdx
  41ea53:	mov    BYTE PTR [rsi+0x4],0x2f
  41ea57:	cmp    BYTE PTR [rax+0x1],0x2a
  41ea5b:	jne    0x41e200
  41ea61:	cmp    BYTE PTR [rbx+0x418],0x0
  41ea68:	je     0x41e200
  41ea6e:	add    rax,0x2
  41ea72:	mov    QWORD PTR [rdi],rax
  41ea75:	mov    BYTE PTR [rsi+0x4],0x32
  41ea79:	jmp    0x41e200
  41ea7e:	mov    r8,QWORD PTR [rdi]
  41ea81:	movzx  eax,BYTE PTR [r8]
  41ea85:	cmp    al,0x27
  41ea87:	jne    0x41e869
  41ea8d:	jmp    0x41e6e3
  41ea92:	add    rax,0x1
  41ea96:	mov    QWORD PTR [rdi],rax
  41ea99:	mov    BYTE PTR [rsi+0x4],0x1f
  41ea9d:	jmp    0x41e200
  41eaa2:	add    rax,0x1
  41eaa6:	mov    QWORD PTR [rdi],rax
  41eaa9:	mov    BYTE PTR [rsi+0x4],0x2d
  41eaad:	jmp    0x41e200
  41eab2:	add    rax,0x1
  41eab6:	mov    QWORD PTR [rdi],rax
  41eab9:	mov    BYTE PTR [rsi+0x4],0x10
  41eabd:	jmp    0x41e200
  41eac2:	add    rax,0x1
  41eac6:	mov    QWORD PTR [rdi],rax
  41eac9:	mov    BYTE PTR [rsi+0x4],0x1a
  41eacd:	jmp    0x41e200
  41ead2:	cmp    r15d,0x52
  41ead6:	jne    0x41e6e3
  41eadc:	jmp    0x41e1a0
  41eae1:	add    rax,0x1
  41eae5:	mov    QWORD PTR [rdi],rax
  41eae8:	mov    BYTE PTR [rsi+0x4],0x2e
  41eaec:	jmp    0x41e200
  41eaf1:	cmp    BYTE PTR [rdx+0x1],0x2e
  41eaf5:	jne    0x41e200
  41eafb:	add    rdx,0x2
  41eaff:	mov    QWORD PTR [rdi],rdx
  41eb02:	mov    BYTE PTR [rsi+0x4],0x2c
  41eb06:	jmp    0x41e200
  41eb0b:	lea    rdx,[rax+0x1]
  41eb0f:	mov    QWORD PTR [rdi],rdx
  41eb12:	mov    BYTE PTR [rsi+0x4],0xd
  41eb16:	cmp    BYTE PTR [rax+0x1],0x3d
  41eb1a:	jne    0x41e200
  41eb20:	add    rax,0x2
  41eb24:	mov    QWORD PTR [rdi],rax
  41eb27:	mov    BYTE PTR [rsi+0x4],0x24
  41eb2b:	jmp    0x41e200
  41eb30:	mov    rcx,rbx
  41eb33:	call   0x41c140
  41eb38:	test   al,al
  41eb3a:	je     0x41e4cb
  41eb40:	lea    r8,[rip+0x320ec]        # 0x450c33
  41eb47:	mov    edx,0x3
  41eb4c:	mov    rcx,rbx
  41eb4f:	call   0x414b60
  41eb54:	jmp    0x41e4cb
  41eb59:	lea    rdx,[rax+0x1]
  41eb5d:	mov    QWORD PTR [rdi],rdx
  41eb60:	or     WORD PTR [rsi+0x6],0x2
  41eb65:	mov    BYTE PTR [rsi+0x4],0x25
  41eb69:	cmp    BYTE PTR [rax+0x1],0x25
  41eb6d:	jne    0x41e200
  41eb73:	cmp    BYTE PTR [rax+0x2],0x3a
  41eb77:	jne    0x41e200
  41eb7d:	add    rax,0x3
  41eb81:	mov    QWORD PTR [rdi],rax
  41eb84:	mov    BYTE PTR [rsi+0x4],0x26
  41eb88:	mov    DWORD PTR [rsi+0x8],0x0
  41eb8f:	jmp    0x41e200
  41eb94:	cmp    ebp,0x3d
  41eb97:	jne    0x41ebc2
  41eb99:	add    r15,0x1
  41eb9d:	mov    QWORD PTR [rdi],r15
  41eba0:	mov    BYTE PTR [rsi+0x4],0x1e
  41eba4:	jmp    0x41e200
  41eba9:	nop    DWORD PTR [rax+0x0]
  41ebb0:	mov    rax,QWORD PTR [rbx]
  41ebb3:	test   rax,rax
  41ebb6:	je     0x41ebc2
  41ebb8:	cmp    BYTE PTR [rax+0x6d],0x0
  41ebbc:	jne    0x41e446
  41ebc2:	mov    BYTE PTR [rsi+0x4],0x7
  41ebc6:	jmp    0x41e200
  41ebcb:	lea    r8,[rip+0x32076]        # 0x450c48
  41ebd2:	mov    edx,0x2
  41ebd7:	mov    rcx,rbx
  41ebda:	call   0x414b60
  41ebdf:	lea    r8,[rip+0x32092]        # 0x450c78
  41ebe6:	mov    edx,0x2
  41ebeb:	mov    rcx,rbx
  41ebee:	call   0x414b60
  41ebf3:	or     BYTE PTR [rdi+0x6c],0x1
  41ebf7:	jmp    0x41e463
  41ebfc:	cmp    BYTE PTR [rbx+0x418],0x0
  41ec03:	je     0x41ec1d
  41ec05:	mov    edx,DWORD PTR [rbx+0x414]
  41ec0b:	sub    edx,0x7
  41ec0e:	cmp    edx,0x1
  41ec11:	jbe    0x41ec1d
  41ec13:	cmp    BYTE PTR [rax+0x1],0x3a
  41ec17:	je     0x41edee
  41ec1d:	add    rax,0x1
  41ec21:	mov    QWORD PTR [rdi],rax
  41ec24:	or     WORD PTR [rsi+0x6],0x2
  41ec29:	mov    BYTE PTR [rsi+0x4],0x27
  41ec2d:	jmp    0x41e200
  41ec32:	mov    rax,QWORD PTR [rbx]
  41ec35:	mov    rdx,QWORD PTR [rax]
  41ec38:	movzx  ecx,BYTE PTR [rdx-0x1]
  41ec3c:	mov    rax,rdx
  41ec3f:	mov    rdx,QWORD PTR [rip+0x3c1ea]        # 0x45ae30
  41ec46:	sub    rax,r15
  41ec49:	lea    r12d,[rax+0x1]
  41ec4d:	test   BYTE PTR [rdx+rcx*2+0x1],0x4
  41ec52:	cmovne r12d,eax
  41ec56:	cmp    BYTE PTR [rbx+0x10],0x0
  41ec5a:	jne    0x41ec62
  41ec5c:	cmp    BYTE PTR [rbx+0x19],0x0
  41ec60:	je     0x41ec6b
  41ec62:	cmp    ebp,0x2f
  41ec65:	je     0x41ee03
  41ec6b:	mov    edx,r12d
  41ec6e:	mov    rcx,rbx
  41ec71:	call   0x41d0e0
  41ec76:	lea    r8d,[r12-0x1]
  41ec7b:	lea    rcx,[rax+0x1]
  41ec7f:	mov    BYTE PTR [rsi+0x4],0x4d
  41ec83:	mov    DWORD PTR [rsi+0x8],r12d
  41ec87:	mov    QWORD PTR [rsi+0x10],rax
  41ec8b:	mov    rdx,r15
  41ec8e:	mov    BYTE PTR [rax],0x2f
  41ec91:	mov    rdi,rax
  41ec94:	call   0x449450
  41ec99:	cmp    BYTE PTR [rbx+0x10],0x0
  41ec9d:	jne    0x41eca5
  41ec9f:	cmp    BYTE PTR [rbx+0x19],0x0
  41eca3:	je     0x41ecae
  41eca5:	cmp    ebp,0x2f
  41eca8:	je     0x41ed68
  41ecae:	cmp    DWORD PTR [rbx+0x524],0x0
  41ecb5:	jne    0x41ecd2
  41ecb7:	mov    DWORD PTR [rbx+0x524],0x100
  41ecc1:	mov    ecx,0x1000
  41ecc6:	call   0x43baf0
  41eccb:	mov    QWORD PTR [rbx+0x518],rax
  41ecd2:	mov    eax,DWORD PTR [rbx+0x520]
  41ecd8:	cmp    eax,DWORD PTR [rbx+0x524]
  41ecde:	je     0x41edbf
  41ece4:	mov    ebp,DWORD PTR [rsi+0x8]
  41ece7:	movsxd rdi,eax
  41ecea:	shl    rdi,0x4
  41ecee:	add    rdi,QWORD PTR [rbx+0x518]
  41ecf5:	lea    ecx,[rbp+0x1]
  41ecf8:	movsxd rcx,ecx
  41ecfb:	call   0x43baf0
  41ed00:	mov    QWORD PTR [rdi],rax
  41ed03:	movsxd rax,DWORD PTR [rbx+0x520]
  41ed0a:	movsxd rdi,ebp
  41ed0d:	mov    rdx,QWORD PTR [rsi+0x10]
  41ed11:	mov    r8,rdi
  41ed14:	shl    rax,0x4
  41ed18:	add    rax,QWORD PTR [rbx+0x518]
  41ed1f:	mov    rcx,QWORD PTR [rax]
  41ed22:	call   0x449450
  41ed27:	movsxd rax,DWORD PTR [rbx+0x520]
  41ed2e:	shl    rax,0x4
  41ed32:	add    rax,QWORD PTR [rbx+0x518]
  41ed39:	mov    rax,QWORD PTR [rax]
  41ed3c:	mov    BYTE PTR [rax+rdi*1],0x0
  41ed40:	movsxd rax,DWORD PTR [rbx+0x520]
  41ed47:	mov    ecx,DWORD PTR [rsi]
  41ed49:	mov    rdx,rax
  41ed4c:	shl    rax,0x4
  41ed50:	add    rax,QWORD PTR [rbx+0x518]
  41ed57:	add    edx,0x1
  41ed5a:	mov    DWORD PTR [rax+0x8],ecx
  41ed5d:	mov    DWORD PTR [rbx+0x520],edx
  41ed63:	jmp    0x41e200
  41ed68:	mov    ebp,r12d
  41ed6b:	lea    edx,[rbp-0x2]
  41ed6e:	mov    BYTE PTR [rdi+0x1],0x2a
  41ed72:	mov    rax,rdx
  41ed75:	mov    BYTE PTR [rdi+rdx*1],0x2a
  41ed79:	lea    edx,[rbp-0x1]
  41ed7c:	cmp    eax,0x2
  41ed7f:	mov    BYTE PTR [rdi+rdx*1],0x2f
  41ed83:	jbe    0x41ecae
  41ed89:	lea    edx,[rbp-0x5]
  41ed8c:	xor    eax,eax
  41ed8e:	add    rdx,0x1
  41ed92:	jmp    0x41eda1
  41ed94:	add    rax,0x1
  41ed98:	cmp    rax,rdx
  41ed9b:	je     0x41ecae
  41eda1:	cmp    BYTE PTR [rdi+rax*1+0x2],0x2f
  41eda6:	jne    0x41ed94
  41eda8:	cmp    BYTE PTR [rdi+rax*1+0x1],0x2a
  41edad:	je     0x41edb8
  41edaf:	lea    ecx,[rax+0x3]
  41edb2:	cmp    BYTE PTR [rdi+rcx*1],0x2a
  41edb6:	jne    0x41ed94
  41edb8:	mov    BYTE PTR [rdi+rax*1+0x2],0x7c
  41edbd:	jmp    0x41ed94
  41edbf:	add    eax,eax
  41edc1:	mov    rcx,QWORD PTR [rbx+0x518]
  41edc8:	mov    DWORD PTR [rbx+0x524],eax
  41edce:	cdqe   
  41edd0:	shl    rax,0x4
  41edd4:	mov    rdx,rax
  41edd7:	call   0x43bb70
  41eddc:	mov    QWORD PTR [rbx+0x518],rax
  41ede3:	mov    eax,DWORD PTR [rbx+0x520]
  41ede9:	jmp    0x41ece4
  41edee:	movzx  edx,BYTE PTR [rax+0x2]
  41edf2:	and    edx,0xfffffffb
  41edf5:	cmp    dl,0x3a
  41edf8:	jne    0x41e200
  41edfe:	jmp    0x41ec1d
  41ee03:	lea    edx,[r12+0x2]
  41ee08:	mov    rcx,rbx
  41ee0b:	mov    rbp,rdx
  41ee0e:	call   0x41d0e0
  41ee13:	lea    r8d,[r12-0x1]
  41ee18:	lea    rcx,[rax+0x1]
  41ee1c:	mov    BYTE PTR [rsi+0x4],0x4d
  41ee20:	mov    DWORD PTR [rsi+0x8],ebp
  41ee23:	mov    QWORD PTR [rsi+0x10],rax
  41ee27:	mov    rdx,r15
  41ee2a:	mov    BYTE PTR [rax],0x2f
  41ee2d:	mov    rdi,rax
  41ee30:	call   0x449450
  41ee35:	cmp    BYTE PTR [rbx+0x10],0x0
  41ee39:	jne    0x41ed6b
  41ee3f:	cmp    BYTE PTR [rbx+0x19],0x0
  41ee43:	jne    0x41ed6b
  41ee49:	jmp    0x41ecae
  41ee4e:	xchg   ax,ax
  41ee50:	push   rsi
  41ee51:	push   rbx
  41ee52:	sub    rsp,0x28
  41ee56:	mov    rbx,rcx
  41ee59:	jmp    0x41eed9
  41ee5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee60:	sub    eax,0x1
  41ee63:	mov    DWORD PTR [rbx+0x1d8],eax
  41ee69:	lea    rax,[rsi+0x18]
  41ee6d:	mov    QWORD PTR [rbx+0x1a8],rax
  41ee74:	movzx  edx,WORD PTR [rsi+0x6]
  41ee78:	test   dl,0x40
  41ee7b:	je     0x41eeaa
  41ee7d:	cmp    BYTE PTR [rsi+0x4],0x25
  41ee81:	je     0x41ef23
  41ee87:	cmp    BYTE PTR [rbx+0x20],0x0
  41ee8b:	je     0x41ee94
  41ee8d:	lea    rsi,[rbx+0x98]
  41ee94:	mov    rax,QWORD PTR [rbx+0x368]
  41ee9b:	test   rax,rax
  41ee9e:	je     0x41eeaa
  41eea0:	cmp    BYTE PTR [rbx+0x12],0x0
  41eea4:	je     0x41ef50
  41eeaa:	cmp    BYTE PTR [rbx+0x10],0x0
  41eeae:	jne    0x41ef70
  41eeb4:	cmp    BYTE PTR [rbx+0x20],0x0
  41eeb8:	jne    0x41ef70
  41eebe:	cmp    BYTE PTR [rbx+0x12],0x0
  41eec2:	mov    BYTE PTR [rbx+0x1a0],0x0
  41eec9:	je     0x41ef70
  41eecf:	cmp    BYTE PTR [rsi+0x4],0x16
  41eed3:	je     0x41ef70
  41eed9:	mov    rax,QWORD PTR [rbx+0x1d0]
  41eee0:	mov    rsi,QWORD PTR [rbx+0x1a8]
  41eee7:	cmp    rsi,QWORD PTR [rax+0x18]
  41eeeb:	je     0x41ef80
  41eef1:	cmp    QWORD PTR [rax+0x10],rsi
  41eef5:	ja     0x41ef9f
  41eefb:	cmp    QWORD PTR [rax+0x18],rsi
  41eeff:	jbe    0x41ef9f
  41ef05:	mov    eax,DWORD PTR [rbx+0x1d8]
  41ef0b:	test   eax,eax
  41ef0d:	jne    0x41ee60
  41ef13:	mov    rcx,rbx
  41ef16:	call   0x41e080
  41ef1b:	mov    rsi,rax
  41ef1e:	jmp    0x41ee74
  41ef23:	cmp    BYTE PTR [rbx+0x19],0x1
  41ef27:	je     0x41ee87
  41ef2d:	and    edx,0x1
  41ef30:	mov    rcx,rbx
  41ef33:	call   0x4132a0
  41ef38:	test   eax,eax
  41ef3a:	je     0x41ee94
  41ef40:	cmp    BYTE PTR [rbx+0x9c],0x51
  41ef47:	jne    0x41ee8d
  41ef4d:	jmp    0x41eed9
  41ef4f:	nop
  41ef50:	movzx  r8d,BYTE PTR [rbx+0x19]
  41ef55:	mov    rdx,rsi
  41ef58:	mov    rcx,rbx
  41ef5b:	call   rax
  41ef5d:	cmp    BYTE PTR [rbx+0x10],0x0
  41ef61:	je     0x41eeb4
  41ef67:	nop    WORD PTR [rax+rax*1+0x0]
  41ef70:	mov    rax,rsi
  41ef73:	add    rsp,0x28
  41ef77:	pop    rbx
  41ef78:	pop    rsi
  41ef79:	ret    
  41ef7a:	nop    WORD PTR [rax+rax*1+0x0]
  41ef80:	mov    rcx,rax
  41ef83:	call   0x41b6c0
  41ef88:	mov    rsi,QWORD PTR [rax+0x10]
  41ef8c:	mov    QWORD PTR [rbx+0x1d0],rax
  41ef93:	mov    QWORD PTR [rbx+0x1a8],rsi
  41ef9a:	jmp    0x41eef1
  41ef9f:	call   0x449548
  41efa4:	nop
  41efa5:	nop
  41efa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41efb0:	push   rbp
  41efb1:	push   rdi
  41efb2:	push   rsi
  41efb3:	push   rbx
  41efb4:	sub    rsp,0x38
  41efb8:	mov    rdi,QWORD PTR [rcx+0x88]
  41efbf:	mov    rbp,rcx
  41efc2:	mov    ebx,edx
  41efc4:	mov    rsi,QWORD PTR [rdi+0x8]
  41efc8:	test   rsi,rsi
  41efcb:	jne    0x41efe1
  41efcd:	jmp    0x41f010
  41efcf:	nop
  41efd0:	sub    ebx,eax
  41efd2:	mov    rax,QWORD PTR [rsi+0x8]
  41efd6:	mov    rdi,rsi
  41efd9:	test   rax,rax
  41efdc:	je     0x41f010
  41efde:	mov    rsi,rax
  41efe1:	mov    rcx,rdi
  41efe4:	call   0x41c3d0
  41efe9:	cmp    eax,ebx
  41efeb:	jle    0x41efd0
  41efed:	mov    eax,DWORD PTR [rdi+0x30]
  41eff0:	cmp    eax,0x1
  41eff3:	je     0x41f065
  41eff5:	and    eax,0xfffffffd
  41eff8:	jne    0x41f076
  41effa:	mov    rax,QWORD PTR [rdi+0x10]
  41effe:	movsxd rbx,ebx
  41f001:	mov    rax,QWORD PTR [rax+rbx*8]
  41f005:	add    rsp,0x38
  41f009:	pop    rbx
  41f00a:	pop    rsi
  41f00b:	pop    rdi
  41f00c:	pop    rbp
  41f00d:	ret    
  41f00e:	xchg   ax,ax
  41f010:	mov    edi,ebx
  41f012:	add    DWORD PTR [rbp+0x1dc],0x1
  41f019:	xor    esi,esi
  41f01b:	add    rdi,0x1
  41f01f:	jmp    0x41f02a
  41f021:	add    rsi,0x1
  41f025:	cmp    rsi,rdi
  41f028:	je     0x41f040
  41f02a:	mov    rcx,rbp
  41f02d:	call   0x41ee50
  41f032:	cmp    BYTE PTR [rax+0x4],0x16
  41f036:	jne    0x41f021
  41f038:	jmp    0x41f005
  41f03a:	nop    WORD PTR [rax+rax*1+0x0]
  41f040:	lea    edx,[rbx+0x1]
  41f043:	mov    rcx,rbp
  41f046:	mov    QWORD PTR [rsp+0x28],rax
  41f04b:	call   0x40cc60
  41f050:	sub    DWORD PTR [rbp+0x1dc],0x1
  41f057:	mov    rax,QWORD PTR [rsp+0x28]
  41f05c:	add    rsp,0x38
  41f060:	pop    rbx
  41f061:	pop    rsi
  41f062:	pop    rdi
  41f063:	pop    rbp
  41f064:	ret    
  41f065:	movsxd rbx,ebx
  41f068:	mov    rax,QWORD PTR [rdi+0x10]
  41f06c:	lea    rdx,[rbx+rbx*2]
  41f070:	lea    rax,[rax+rdx*8]
  41f074:	jmp    0x41f005
  41f076:	call   0x449548
  41f07b:	nop
  41f07c:	nop    DWORD PTR [rax+0x0]
  41f080:	push   rdi
  41f081:	push   rsi
  41f082:	push   rbx
  41f083:	sub    rsp,0x20
  41f087:	movzx  eax,BYTE PTR [rdx+0x4]
  41f08b:	mov    rbx,rdx
  41f08e:	lea    rdx,[rip+0x3202b]        # 0x4510c0
  41f095:	mov    rsi,rcx
  41f098:	shl    rax,0x4
  41f09c:	mov    eax,DWORD PTR [rdx+rax*1]
  41f09f:	cmp    eax,0x1
  41f0a2:	je     0x41f0e0
  41f0a4:	cmp    eax,0x2
  41f0a7:	mov    edx,0x7
  41f0ac:	jne    0x41f0b4
  41f0ae:	mov    eax,DWORD PTR [rbx+0x8]
  41f0b1:	lea    edx,[rax+0x1]
  41f0b4:	mov    rcx,rsi
  41f0b7:	call   0x41d0e0
  41f0bc:	xor    r9d,r9d
  41f0bf:	mov    rdi,rax
  41f0c2:	mov    r8,rax
  41f0c5:	mov    rdx,rbx
  41f0c8:	mov    rcx,rsi
  41f0cb:	call   0x41c590
  41f0d0:	mov    BYTE PTR [rax],0x0
  41f0d3:	mov    rax,rdi
  41f0d6:	add    rsp,0x20
  41f0da:	pop    rbx
  41f0db:	pop    rsi
  41f0dc:	pop    rdi
  41f0dd:	ret    
  41f0de:	xchg   ax,ax
  41f0e0:	mov    rax,QWORD PTR [rbx+0x8]
  41f0e4:	mov    eax,DWORD PTR [rax+0x8]
  41f0e7:	lea    eax,[rax+rax*4]
  41f0ea:	lea    edx,[rax+rax*1+0x1]
  41f0ee:	jmp    0x41f0b4
  41f0f0:	push   rsi
  41f0f1:	push   rbx
  41f0f2:	sub    rsp,0x28
  41f0f6:	mov    r8,QWORD PTR [rcx+0x38]
  41f0fa:	mov    rbx,rdx
  41f0fd:	mov    rsi,rcx
  41f100:	mov    rax,QWORD PTR [r8+0x10]
  41f104:	mov    rdx,QWORD PTR [r8+0x18]
  41f108:	sub    rdx,rax
  41f10b:	cmp    rdx,rbx
  41f10e:	jae    0x41f12a
  41f110:	mov    rdx,rbx
  41f113:	call   0x41cec0
  41f118:	mov    r8,rax
  41f11b:	mov    rax,QWORD PTR [rsi+0x38]
  41f11f:	mov    QWORD PTR [r8],rax
  41f122:	mov    rax,QWORD PTR [r8+0x10]
  41f126:	mov    QWORD PTR [rsi+0x38],r8
  41f12a:	add    rbx,rax
  41f12d:	mov    QWORD PTR [r8+0x10],rbx
  41f131:	add    rsp,0x28
  41f135:	pop    rbx
  41f136:	pop    rsi
  41f137:	ret    
  41f138:	nop    DWORD PTR [rax+rax*1+0x0]
  41f140:	movzx  eax,BYTE PTR [rcx+0x4]
  41f144:	lea    rdx,[rip+0x31f75]        # 0x4510c0
  41f14b:	mov    rcx,rax
  41f14e:	shl    rax,0x4
  41f152:	mov    edx,DWORD PTR [rdx+rax*1]
  41f155:	cmp    edx,0x1
  41f158:	je     0x41f1b1
  41f15a:	jle    0x41f1a0
  41f15c:	cmp    edx,0x2
  41f15f:	mov    eax,0x2
  41f164:	je     0x41f195
  41f166:	cmp    edx,0x3
  41f169:	jne    0x41f1b4
  41f16b:	cmp    cl,0x4e
  41f16e:	mov    eax,0x3
  41f173:	je     0x41f195
  41f175:	cmp    cl,0x51
  41f178:	je     0x41f190
  41f17a:	xor    eax,eax
  41f17c:	cmp    cl,0x4f
  41f17f:	setne  al
  41f182:	add    eax,0x5
  41f185:	ret    
  41f186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f190:	mov    eax,0x1
  41f195:	repz ret 
  41f197:	nop    WORD PTR [rax+rax*1+0x0]
  41f1a0:	test   edx,edx
  41f1a2:	jne    0x41f1b4
  41f1a4:	xor    eax,eax
  41f1a6:	cmp    cl,0x26
  41f1a9:	setne  al
  41f1ac:	lea    eax,[rax+rax*1+0x4]
  41f1b0:	ret    
  41f1b1:	xor    eax,eax
  41f1b3:	ret    
  41f1b4:	mov    eax,0x6
  41f1b9:	ret    
  41f1ba:	nop    WORD PTR [rax+rax*1+0x0]
  41f1c0:	mov    QWORD PTR [rcx+0x530],rdx
  41f1c7:	ret    
  41f1c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f1d0:	mov    QWORD PTR [rcx+0x530],0x0
  41f1db:	ret    
  41f1dc:	nop
  41f1dd:	nop
  41f1de:	nop
  41f1df:	nop
  41f1e0:	push   rbp
  41f1e1:	push   rdi
  41f1e2:	push   rsi
  41f1e3:	push   rbx
  41f1e4:	sub    rsp,0x28
  41f1e8:	mov    rax,QWORD PTR [rcx+0x20]
  41f1ec:	mov    rdi,rcx
  41f1ef:	mov    rbx,rdx
  41f1f2:	test   rax,rax
  41f1f5:	je     0x41f25e
  41f1f7:	mov    edx,DWORD PTR [rcx+0x30]
  41f1fa:	test   edx,edx
  41f1fc:	je     0x41f25e
  41f1fe:	xor    esi,esi
  41f200:	jmp    0x41f213
  41f202:	cmp    dl,0x2f
  41f205:	je     0x41f241
  41f207:	add    esi,0x1
  41f20a:	cmp    DWORD PTR [rdi+0x30],esi
  41f20d:	jbe    0x41f25e
  41f20f:	mov    rax,QWORD PTR [rdi+0x20]
  41f213:	mov    rdx,QWORD PTR [rdi+0x28]
  41f217:	mov    ebp,esi
  41f219:	mov    rcx,QWORD PTR [rax+rbp*8]
  41f21d:	mov    r8,QWORD PTR [rdx+rbp*8]
  41f221:	mov    rdx,rbx
  41f224:	call   0x4383d0
  41f229:	test   eax,eax
  41f22b:	jne    0x41f207
  41f22d:	mov    rax,QWORD PTR [rdi+0x28]
  41f231:	mov    rcx,QWORD PTR [rax+rbp*8]
  41f235:	lea    rax,[rbx+rcx*1]
  41f239:	movzx  edx,BYTE PTR [rax]
  41f23c:	cmp    dl,0x5c
  41f23f:	jne    0x41f202
  41f241:	cmp    BYTE PTR [rax+0x1],0x2e
  41f245:	jne    0x41f259
  41f247:	cmp    BYTE PTR [rax+0x2],0x2e
  41f24b:	jne    0x41f259
  41f24d:	movzx  eax,BYTE PTR [rax+0x3]
  41f251:	cmp    al,0x5c
  41f253:	je     0x41f207
  41f255:	cmp    al,0x2f
  41f257:	je     0x41f207
  41f259:	lea    rbx,[rbx+rcx*1+0x1]
  41f25e:	movzx  eax,BYTE PTR [rbx]
  41f261:	cmp    al,0x2e
  41f263:	jne    0x41f291
  41f265:	movzx  eax,BYTE PTR [rbx+0x1]
  41f269:	cmp    al,0x5c
  41f26b:	je     0x41f271
  41f26d:	cmp    al,0x2f
  41f26f:	jne    0x41f291
  41f271:	movzx  eax,BYTE PTR [rbx+0x2]
  41f275:	lea    rdx,[rbx+0x2]
  41f279:	mov    rbx,rdx
  41f27c:	cmp    al,0x5c
  41f27e:	je     0x41f284
  41f280:	cmp    al,0x2f
  41f282:	jne    0x41f261
  41f284:	add    rbx,0x1
  41f288:	movzx  eax,BYTE PTR [rbx]
  41f28b:	cmp    al,0x5c
  41f28d:	jne    0x41f280
  41f28f:	jmp    0x41f284
  41f291:	mov    rax,rbx
  41f294:	add    rsp,0x28
  41f298:	pop    rbx
  41f299:	pop    rsi
  41f29a:	pop    rdi
  41f29b:	pop    rbp
  41f29c:	ret    
  41f29d:	nop    DWORD PTR [rax]
  41f2a0:	push   rbx
  41f2a1:	sub    rsp,0x20
  41f2a5:	movzx  eax,BYTE PTR [rcx]
  41f2a8:	mov    rbx,rcx
  41f2ab:	test   al,al
  41f2ad:	je     0x41f3bc
  41f2b3:	lea    r9,[rcx-0x1]
  41f2b7:	xor    edx,edx
  41f2b9:	mov    r8,r9
  41f2bc:	jmp    0x41f2de
  41f2be:	xchg   ax,ax
  41f2c0:	cmp    al,0x23
  41f2c2:	je     0x41f311
  41f2c4:	cmp    al,0x24
  41f2c6:	sete   al
  41f2c9:	movzx  eax,al
  41f2cc:	add    edx,eax
  41f2ce:	add    r8,0x1
  41f2d2:	movzx  eax,BYTE PTR [r8+0x1]
  41f2d7:	add    edx,0x1
  41f2da:	test   al,al
  41f2dc:	je     0x41f324
  41f2de:	cmp    al,0x20
  41f2e0:	je     0x41f2e8
  41f2e2:	jg     0x41f2c0
  41f2e4:	cmp    al,0x9
  41f2e6:	jne    0x41f2ce
  41f2e8:	cmp    rbx,r8
  41f2eb:	mov    rax,r8
  41f2ee:	ja     0x41f311
  41f2f0:	cmp    BYTE PTR [r8],0x5c
  41f2f4:	je     0x41f305
  41f2f6:	jmp    0x41f311
  41f2f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f300:	cmp    BYTE PTR [rax],0x5c
  41f303:	jne    0x41f311
  41f305:	sub    rax,0x1
  41f309:	add    edx,0x1
  41f30c:	cmp    r9,rax
  41f30f:	jne    0x41f300
  41f311:	add    r8,0x1
  41f315:	movzx  eax,BYTE PTR [r8+0x1]
  41f31a:	add    edx,0x1
  41f31d:	add    edx,0x1
  41f320:	test   al,al
  41f322:	jne    0x41f2de
  41f324:	add    edx,0x1
  41f327:	movsxd rcx,edx
  41f32a:	call   0x43baf0
  41f32f:	movzx  r9d,BYTE PTR [rbx]
  41f333:	test   r9b,r9b
  41f336:	je     0x41f3b0
  41f338:	lea    r11,[rbx-0x1]
  41f33c:	mov    rdx,rax
  41f33f:	mov    r10,r11
  41f342:	jmp    0x41f36c
  41f344:	cmp    r9b,0x23
  41f348:	je     0x41f3a7
  41f34a:	cmp    r9b,0x24
  41f34e:	jne    0x41f357
  41f350:	mov    BYTE PTR [rdx],0x24
  41f353:	add    rdx,0x1
  41f357:	add    r10,0x1
  41f35b:	mov    BYTE PTR [rdx],r9b
  41f35e:	add    rdx,0x1
  41f362:	movzx  r9d,BYTE PTR [r10+0x1]
  41f367:	test   r9b,r9b
  41f36a:	je     0x41f3b3
  41f36c:	cmp    r9b,0x20
  41f370:	je     0x41f37a
  41f372:	jg     0x41f344
  41f374:	cmp    r9b,0x9
  41f378:	jne    0x41f357
  41f37a:	cmp    rbx,r10
  41f37d:	mov    r8,r10
  41f380:	ja     0x41f3a7
  41f382:	cmp    BYTE PTR [r10],0x5c
  41f386:	je     0x41f396
  41f388:	jmp    0x41f3a7
  41f38a:	nop    WORD PTR [rax+rax*1+0x0]
  41f390:	cmp    BYTE PTR [r8],0x5c
  41f394:	jne    0x41f3a7
  41f396:	sub    r8,0x1
  41f39a:	add    rdx,0x1
  41f39e:	mov    BYTE PTR [rdx-0x1],0x5c
  41f3a2:	cmp    r8,r11
  41f3a5:	jne    0x41f390
  41f3a7:	mov    BYTE PTR [rdx],0x5c
  41f3aa:	add    rdx,0x1
  41f3ae:	jmp    0x41f357
  41f3b0:	mov    rdx,rax
  41f3b3:	mov    BYTE PTR [rdx],0x0
  41f3b6:	add    rsp,0x20
  41f3ba:	pop    rbx
  41f3bb:	ret    
  41f3bc:	mov    ecx,0x1
  41f3c1:	jmp    0x41f32a
  41f3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f3d0:	mov    edx,0x38
  41f3d5:	mov    ecx,0x1
  41f3da:	jmp    0x43bb20
  41f3df:	nop
  41f3e0:	push   rsi
  41f3e1:	push   rbx
  41f3e2:	sub    rsp,0x28
  41f3e6:	mov    rbx,rcx
  41f3e9:	mov    rcx,QWORD PTR [rcx]
  41f3ec:	test   rcx,rcx
  41f3ef:	je     0x41f41b
  41f3f1:	mov    r8d,DWORD PTR [rbx+0x8]
  41f3f5:	test   r8d,r8d
  41f3f8:	je     0x41f416
  41f3fa:	xor    esi,esi
  41f3fc:	nop    DWORD PTR [rax+0x0]
  41f400:	mov    eax,esi
  41f402:	add    esi,0x1
  41f405:	mov    rcx,QWORD PTR [rcx+rax*8]
  41f409:	call   0x4494c8
  41f40e:	cmp    DWORD PTR [rbx+0x8],esi
  41f411:	mov    rcx,QWORD PTR [rbx]
  41f414:	ja     0x41f400
  41f416:	call   0x4494c8
  41f41b:	mov    rcx,QWORD PTR [rbx+0x10]
  41f41f:	test   rcx,rcx
  41f422:	je     0x41f44c
  41f424:	mov    edx,DWORD PTR [rbx+0x18]
  41f427:	test   edx,edx
  41f429:	je     0x41f447
  41f42b:	xor    esi,esi
  41f42d:	nop    DWORD PTR [rax]
  41f430:	mov    eax,esi
  41f432:	add    esi,0x1
  41f435:	mov    rcx,QWORD PTR [rcx+rax*8]
  41f439:	call   0x4494c8
  41f43e:	cmp    DWORD PTR [rbx+0x18],esi
  41f441:	mov    rcx,QWORD PTR [rbx+0x10]
  41f445:	ja     0x41f430
  41f447:	call   0x4494c8
  41f44c:	mov    rcx,QWORD PTR [rbx+0x20]
  41f450:	test   rcx,rcx
  41f453:	je     0x41f485
  41f455:	mov    eax,DWORD PTR [rbx+0x30]
  41f458:	test   eax,eax
  41f45a:	je     0x41f477
  41f45c:	xor    esi,esi
  41f45e:	xchg   ax,ax
  41f460:	mov    eax,esi
  41f462:	add    esi,0x1
  41f465:	mov    rcx,QWORD PTR [rcx+rax*8]
  41f469:	call   0x4494c8
  41f46e:	cmp    DWORD PTR [rbx+0x30],esi
  41f471:	mov    rcx,QWORD PTR [rbx+0x20]
  41f475:	ja     0x41f460
  41f477:	call   0x4494c8
  41f47c:	mov    rcx,QWORD PTR [rbx+0x28]
  41f480:	call   0x4494c8
  41f485:	mov    rcx,rbx
  41f488:	add    rsp,0x28
  41f48c:	pop    rbx
  41f48d:	pop    rsi
  41f48e:	jmp    0x4494c8
  41f493:	nop    DWORD PTR [rax]
  41f496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f4a0:	push   rdi
  41f4a1:	push   rsi
  41f4a2:	push   rbx
  41f4a3:	sub    rsp,0x20
  41f4a7:	mov    eax,DWORD PTR [rcx+0x8]
  41f4aa:	cmp    eax,DWORD PTR [rcx+0xc]
  41f4ad:	mov    rbx,rcx
  41f4b0:	mov    rdi,rdx
  41f4b3:	mov    esi,r8d
  41f4b6:	je     0x41f500
  41f4b8:	mov    rcx,rbx
  41f4bb:	mov    rdx,rdi
  41f4be:	call   0x41f1e0
  41f4c3:	test   esi,esi
  41f4c5:	mov    rcx,rax
  41f4c8:	jne    0x41f4f0
  41f4ca:	call   0x43bbf0
  41f4cf:	mov    edx,DWORD PTR [rbx+0x8]
  41f4d2:	mov    rcx,QWORD PTR [rbx]
  41f4d5:	lea    r8d,[rdx+0x1]
  41f4d9:	mov    DWORD PTR [rbx+0x8],r8d
  41f4dd:	mov    QWORD PTR [rcx+rdx*8],rax
  41f4e1:	add    rsp,0x20
  41f4e5:	pop    rbx
  41f4e6:	pop    rsi
  41f4e7:	pop    rdi
  41f4e8:	ret    
  41f4e9:	nop    DWORD PTR [rax+0x0]
  41f4f0:	call   0x41f2a0
  41f4f5:	jmp    0x41f4cf
  41f4f7:	nop    WORD PTR [rax+rax*1+0x0]
  41f500:	lea    edx,[rax+rax*1+0x4]
  41f504:	mov    DWORD PTR [rcx+0xc],edx
  41f507:	mov    rcx,QWORD PTR [rcx]
  41f50a:	shl    rdx,0x3
  41f50e:	call   0x43bb70
  41f513:	mov    QWORD PTR [rbx],rax
  41f516:	jmp    0x41f4b8
  41f518:	nop    DWORD PTR [rax+rax*1+0x0]
  41f520:	push   rbp
  41f521:	push   r12
  41f523:	push   rdi
  41f524:	push   rsi
  41f525:	push   rbx
  41f526:	mov    rbp,rsp
  41f529:	sub    rsp,0x20
  41f52d:	mov    r8d,DWORD PTR [rcx+0x8]
  41f531:	test   r8d,r8d
  41f534:	jne    0x41f5b4
  41f536:	cmp    BYTE PTR [rdx],0x0
  41f539:	mov    rbx,rcx
  41f53c:	je     0x41f5c0
  41f542:	mov    rcx,rdx
  41f545:	call   0x4395f0
  41f54a:	mov    rcx,rax
  41f54d:	mov    r12,rax
  41f550:	call   0x4493c0
  41f555:	lea    r8,[rax+0x21]
  41f559:	mov    rsi,rax
  41f55c:	mov    rax,r8
  41f55f:	and    rax,0xfffffffffffffff0
  41f563:	call   0x43d410
  41f568:	sub    rsp,rax
  41f56b:	lea    r8,[rsi+0x1]
  41f56f:	mov    rdx,r12
  41f572:	lea    rdi,[rsp+0x20]
  41f577:	mov    rcx,rdi
  41f57a:	add    rsi,rdi
  41f57d:	call   0x449450
  41f582:	mov    edx,0x2e
  41f587:	mov    rcx,rdi
  41f58a:	call   0x449398
  41f58f:	test   rax,rax
  41f592:	mov    edx,0x6f2e
  41f597:	mov    r8d,0x1
  41f59d:	cmove  rax,rsi
  41f5a1:	mov    rcx,rbx
  41f5a4:	mov    WORD PTR [rax],dx
  41f5a7:	mov    BYTE PTR [rax+0x2],0x0
  41f5ab:	mov    rdx,rdi
  41f5ae:	call   0x41f4a0
  41f5b3:	nop
  41f5b4:	mov    rsp,rbp
  41f5b7:	pop    rbx
  41f5b8:	pop    rsi
  41f5b9:	pop    rdi
  41f5ba:	pop    r12
  41f5bc:	pop    rbp
  41f5bd:	ret    
  41f5be:	xchg   ax,ax
  41f5c0:	lea    rdx,[rip+0x32079]        # 0x451640
  41f5c7:	mov    r8d,0x1
  41f5cd:	call   0x41f4a0
  41f5d2:	nop
  41f5d3:	mov    rsp,rbp
  41f5d6:	pop    rbx
  41f5d7:	pop    rsi
  41f5d8:	pop    rdi
  41f5d9:	pop    r12
  41f5db:	pop    rbp
  41f5dc:	ret    
  41f5dd:	nop    DWORD PTR [rax]
  41f5e0:	push   rsi
  41f5e1:	push   rbx
  41f5e2:	sub    rsp,0x28
  41f5e6:	mov    rbx,rcx
  41f5e9:	call   0x41f1e0
  41f5ee:	mov    rcx,rax
  41f5f1:	call   0x41f2a0
  41f5f6:	mov    edx,DWORD PTR [rbx+0x18]
  41f5f9:	mov    rsi,rax
  41f5fc:	cmp    edx,DWORD PTR [rbx+0x1c]
  41f5ff:	je     0x41f620
  41f601:	mov    rcx,QWORD PTR [rbx+0x10]
  41f605:	lea    eax,[rdx+0x1]
  41f608:	mov    DWORD PTR [rbx+0x18],eax
  41f60b:	mov    QWORD PTR [rcx+rdx*8],rsi
  41f60f:	add    rsp,0x28
  41f613:	pop    rbx
  41f614:	pop    rsi
  41f615:	ret    
  41f616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f620:	lea    edx,[rdx+rdx*1+0x8]
  41f624:	mov    rcx,QWORD PTR [rbx+0x10]
  41f628:	mov    DWORD PTR [rbx+0x1c],edx
  41f62b:	shl    rdx,0x3
  41f62f:	call   0x43bb70
  41f634:	mov    edx,DWORD PTR [rbx+0x18]
  41f637:	mov    QWORD PTR [rbx+0x10],rax
  41f63b:	mov    rcx,rax
  41f63e:	jmp    0x41f605
  41f640:	push   r12
  41f642:	push   rbp
  41f643:	push   rdi
  41f644:	push   rsi
  41f645:	push   rbx
  41f646:	sub    rsp,0x20
  41f64a:	mov    rsi,rdx
  41f64d:	movzx  edx,BYTE PTR [rdx]
  41f650:	mov    rdi,rcx
  41f653:	test   dl,dl
  41f655:	je     0x41f725
  41f65b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f660:	xor    ebp,ebp
  41f662:	cmp    dl,0x3a
  41f665:	mov    rax,rsi
  41f668:	mov    rbx,rsi
  41f66b:	mov    ecx,0x1
  41f670:	jne    0x41f679
  41f672:	jmp    0x41f694
  41f674:	test   r8b,r8b
  41f677:	je     0x41f687
  41f679:	add    rax,0x1
  41f67d:	movzx  r8d,BYTE PTR [rax]
  41f681:	cmp    r8b,0x3a
  41f685:	jne    0x41f674
  41f687:	mov    rbp,rax
  41f68a:	mov    rbx,rax
  41f68d:	sub    rbp,rsi
  41f690:	lea    rcx,[rbp+0x1]
  41f694:	call   0x43baf0
  41f699:	mov    rdx,rsi
  41f69c:	mov    r8,rbp
  41f69f:	mov    rcx,rax
  41f6a2:	mov    r12,rax
  41f6a5:	xor    esi,esi
  41f6a7:	call   0x449450
  41f6ac:	cmp    BYTE PTR [rbx],0x3a
  41f6af:	mov    edx,DWORD PTR [rdi+0x30]
  41f6b2:	mov    BYTE PTR [r12+rbp*1],0x0
  41f6b7:	sete   sil
  41f6bb:	add    rsi,rbx
  41f6be:	cmp    edx,DWORD PTR [rdi+0x34]
  41f6c1:	je     0x41f6f0
  41f6c3:	mov    rcx,QWORD PTR [rdi+0x20]
  41f6c7:	mov    eax,edx
  41f6c9:	add    edx,0x1
  41f6cc:	mov    QWORD PTR [rcx+rax*8],r12
  41f6d0:	mov    rcx,QWORD PTR [rdi+0x28]
  41f6d4:	mov    QWORD PTR [rcx+rax*8],rbp
  41f6d8:	mov    DWORD PTR [rdi+0x30],edx
  41f6db:	movzx  eax,BYTE PTR [rsi]
  41f6de:	test   al,al
  41f6e0:	je     0x41f725
  41f6e2:	mov    edx,eax
  41f6e4:	jmp    0x41f660
  41f6e9:	nop    DWORD PTR [rax+0x0]
  41f6f0:	lea    eax,[rdx+rdx*1+0x8]
  41f6f4:	mov    rcx,QWORD PTR [rdi+0x20]
  41f6f8:	lea    rdx,[rax*8+0x0]
  41f700:	mov    DWORD PTR [rdi+0x34],eax
  41f703:	call   0x43bb70
  41f708:	mov    edx,DWORD PTR [rdi+0x34]
  41f70b:	mov    rcx,QWORD PTR [rdi+0x28]
  41f70f:	mov    QWORD PTR [rdi+0x20],rax
  41f713:	shl    rdx,0x3
  41f717:	call   0x43bb70
  41f71c:	mov    edx,DWORD PTR [rdi+0x30]
  41f71f:	mov    QWORD PTR [rdi+0x28],rax
  41f723:	jmp    0x41f6c3
  41f725:	add    rsp,0x20
  41f729:	pop    rbx
  41f72a:	pop    rsi
  41f72b:	pop    rdi
  41f72c:	pop    rbp
  41f72d:	pop    r12
  41f72f:	ret    
  41f730:	push   r15
  41f732:	push   r14
  41f734:	push   r13
  41f736:	push   r12
  41f738:	push   rbp
  41f739:	push   rdi
  41f73a:	push   rsi
  41f73b:	push   rbx
  41f73c:	sub    rsp,0x28
  41f740:	mov    edi,0x1
  41f745:	lea    eax,[r8-0x1]
  41f749:	mov    r12,rdx
  41f74c:	mov    edx,DWORD PTR [rcx+0x8]
  41f74f:	mov    r13d,r8d
  41f752:	mov    rbp,rcx
  41f755:	cmp    eax,0x20
  41f758:	mov    eax,0x22
  41f75d:	cmovbe r13d,eax
  41f761:	test   edx,edx
  41f763:	je     0x41f803
  41f769:	mov    rax,QWORD PTR [rcx]
  41f76c:	xor    ebx,ebx
  41f76e:	mov    rsi,QWORD PTR [rax]
  41f771:	mov    rcx,rsi
  41f774:	call   0x4493c0
  41f779:	mov    edi,eax
  41f77b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f780:	mov    rdx,r12
  41f783:	mov    rcx,rsi
  41f786:	add    ebx,0x1
  41f789:	call   0x4494d8
  41f78e:	cmp    DWORD PTR [rbp+0x8],ebx
  41f791:	jbe    0x41f800
  41f793:	mov    rax,QWORD PTR [rbp+0x0]
  41f797:	mov    r14d,ebx
  41f79a:	mov    rsi,QWORD PTR [rax+r14*8]
  41f79e:	mov    rcx,rsi
  41f7a1:	call   0x4493c0
  41f7a6:	add    edi,eax
  41f7a8:	test   ebx,ebx
  41f7aa:	mov    r15,rax
  41f7ad:	je     0x41f780
  41f7af:	cmp    edi,r13d
  41f7b2:	jbe    0x41f7e1
  41f7b4:	test   r13d,r13d
  41f7b7:	je     0x41f7e1
  41f7b9:	lea    rcx,[rip+0x31e82]        # 0x451642
  41f7c0:	mov    r9,r12
  41f7c3:	mov    r8d,0x4
  41f7c9:	mov    edx,0x1
  41f7ce:	lea    edi,[r15+0x1]
  41f7d2:	call   0x4494a8
  41f7d7:	mov    rax,QWORD PTR [rbp+0x0]
  41f7db:	mov    rsi,QWORD PTR [rax+r14*8]
  41f7df:	jmp    0x41f780
  41f7e1:	mov    rdx,r12
  41f7e4:	mov    ecx,0x20
  41f7e9:	add    edi,0x1
  41f7ec:	call   0x449438
  41f7f1:	mov    rax,QWORD PTR [rbp+0x0]
  41f7f5:	mov    rsi,QWORD PTR [rax+r14*8]
  41f7f9:	jmp    0x41f780
  41f7fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f800:	add    edi,0x1
  41f803:	mov    rdx,r12
  41f806:	mov    ecx,0x3a
  41f80b:	call   0x449438
  41f810:	mov    eax,DWORD PTR [rbp+0x18]
  41f813:	test   r13d,r13d
  41f816:	setne  r14b
  41f81a:	xor    ebx,ebx
  41f81c:	test   eax,eax
  41f81e:	jne    0x41f85d
  41f820:	jmp    0x41f890
  41f822:	test   r14b,r14b
  41f825:	je     0x41f876
  41f827:	lea    rcx,[rip+0x31e14]        # 0x451642
  41f82e:	lea    edi,[r15+0x1]
  41f832:	mov    r9,r12
  41f835:	mov    r8d,0x4
  41f83b:	mov    edx,0x1
  41f840:	call   0x4494a8
  41f845:	mov    rax,QWORD PTR [rbp+0x10]
  41f849:	mov    rdx,r12
  41f84c:	add    ebx,0x1
  41f84f:	mov    rcx,QWORD PTR [rax+rsi*8]
  41f853:	call   0x4494d8
  41f858:	cmp    DWORD PTR [rbp+0x18],ebx
  41f85b:	jbe    0x41f890
  41f85d:	mov    rax,QWORD PTR [rbp+0x10]
  41f861:	mov    esi,ebx
  41f863:	mov    rcx,QWORD PTR [rax+rsi*8]
  41f867:	call   0x4493c0
  41f86c:	add    edi,eax
  41f86e:	mov    r15,rax
  41f871:	cmp    edi,r13d
  41f874:	ja     0x41f822
  41f876:	mov    rdx,r12
  41f879:	mov    ecx,0x20
  41f87e:	add    edi,0x1
  41f881:	call   0x449438
  41f886:	jmp    0x41f845
  41f888:	nop    DWORD PTR [rax+rax*1+0x0]
  41f890:	mov    rdx,r12
  41f893:	mov    ecx,0xa
  41f898:	add    rsp,0x28
  41f89c:	pop    rbx
  41f89d:	pop    rsi
  41f89e:	pop    rdi
  41f89f:	pop    rbp
  41f8a0:	pop    r12
  41f8a2:	pop    r13
  41f8a4:	pop    r14
  41f8a6:	pop    r15
  41f8a8:	jmp    0x449438
  41f8ad:	nop    DWORD PTR [rax]
  41f8b0:	push   rdi
  41f8b1:	push   rsi
  41f8b2:	push   rbx
  41f8b3:	sub    rsp,0x20
  41f8b7:	cmp    DWORD PTR [rcx+0x18],0x1
  41f8bb:	mov    ebx,0x1
  41f8c0:	mov    rdi,rcx
  41f8c3:	mov    rsi,rdx
  41f8c6:	jbe    0x41f911
  41f8c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8d0:	mov    rdx,rsi
  41f8d3:	mov    ecx,0xa
  41f8d8:	call   0x449438
  41f8dd:	mov    rax,QWORD PTR [rdi+0x10]
  41f8e1:	mov    edx,ebx
  41f8e3:	add    ebx,0x1
  41f8e6:	mov    rcx,QWORD PTR [rax+rdx*8]
  41f8ea:	mov    rdx,rsi
  41f8ed:	call   0x4494d8
  41f8f2:	mov    rdx,rsi
  41f8f5:	mov    ecx,0x3a
  41f8fa:	call   0x449438
  41f8ff:	mov    rdx,rsi
  41f902:	mov    ecx,0xa
  41f907:	call   0x449438
  41f90c:	cmp    DWORD PTR [rdi+0x18],ebx
  41f90f:	ja     0x41f8d0
  41f911:	add    rsp,0x20
  41f915:	pop    rbx
  41f916:	pop    rsi
  41f917:	pop    rdi
  41f918:	ret    
  41f919:	nop    DWORD PTR [rax+0x0]
  41f920:	push   r12
  41f922:	push   rbp
  41f923:	push   rdi
  41f924:	push   rsi
  41f925:	push   rbx
  41f926:	sub    rsp,0x30
  41f92a:	mov    r8d,0x1
  41f930:	mov    rsi,rcx
  41f933:	lea    rcx,[rcx+0x18]
  41f937:	mov    r9,rdx
  41f93a:	mov    rbp,rdx
  41f93d:	mov    edx,0x4
  41f942:	call   0x4494a8
  41f947:	cmp    rax,0x1
  41f94b:	mov    edx,0xffffffff
  41f950:	jne    0x41f9c0
  41f952:	mov    eax,DWORD PTR [rsi+0x18]
  41f955:	xor    ebx,ebx
  41f957:	lea    r12,[rsp+0x28]
  41f95c:	test   eax,eax
  41f95e:	jne    0x41f98b
  41f960:	jmp    0x41f9d0
  41f962:	mov    rax,QWORD PTR [rsi+0x10]
  41f966:	mov    rdx,QWORD PTR [rsp+0x28]
  41f96b:	mov    r9,rbp
  41f96e:	mov    r8d,0x1
  41f974:	mov    rcx,QWORD PTR [rax+rdi*8]
  41f978:	call   0x4494a8
  41f97d:	cmp    rax,0x1
  41f981:	jne    0x41f9bb
  41f983:	add    ebx,0x1
  41f986:	cmp    DWORD PTR [rsi+0x18],ebx
  41f989:	jbe    0x41f9d0
  41f98b:	mov    rax,QWORD PTR [rsi+0x10]
  41f98f:	mov    edi,ebx
  41f991:	mov    rcx,QWORD PTR [rax+rdi*8]
  41f995:	call   0x4493c0
  41f99a:	mov    r9,rbp
  41f99d:	mov    r8d,0x1
  41f9a3:	mov    edx,0x8
  41f9a8:	mov    rcx,r12
  41f9ab:	mov    QWORD PTR [rsp+0x28],rax
  41f9b0:	call   0x4494a8
  41f9b5:	cmp    rax,0x1
  41f9b9:	je     0x41f962
  41f9bb:	mov    edx,0xffffffff
  41f9c0:	mov    eax,edx
  41f9c2:	add    rsp,0x30
  41f9c6:	pop    rbx
  41f9c7:	pop    rsi
  41f9c8:	pop    rdi
  41f9c9:	pop    rbp
  41f9ca:	pop    r12
  41f9cc:	ret    
  41f9cd:	nop    DWORD PTR [rax]
  41f9d0:	xor    edx,edx
  41f9d2:	mov    eax,edx
  41f9d4:	add    rsp,0x30
  41f9d8:	pop    rbx
  41f9d9:	pop    rsi
  41f9da:	pop    rdi
  41f9db:	pop    rbp
  41f9dc:	pop    r12
  41f9de:	ret    
  41f9df:	nop
  41f9e0:	push   r14
  41f9e2:	push   r13
  41f9e4:	push   r12
  41f9e6:	push   rbp
  41f9e7:	push   rdi
  41f9e8:	push   rsi
  41f9e9:	push   rbx
  41f9ea:	sub    rsp,0x30
  41f9ee:	mov    r14,rcx
  41f9f1:	lea    rcx,[rsp+0x24]
  41f9f6:	mov    r9,rdx
  41f9f9:	mov    rdi,rdx
  41f9fc:	mov    rbp,r8
  41f9ff:	mov    edx,0x1
  41fa04:	mov    r8d,0x4
  41fa0a:	call   0x4494d0
  41fa0f:	cmp    rax,0x4
  41fa13:	mov    edx,0xffffffff
  41fa18:	jne    0x41faed
  41fa1e:	mov    ecx,0x200
  41fa23:	call   0x43baf0
  41fa28:	mov    rbx,rax
  41fa2b:	mov    eax,DWORD PTR [rsp+0x24]
  41fa2f:	test   eax,eax
  41fa31:	je     0x41fb00
  41fa37:	mov    r12d,0x200
  41fa3d:	xor    esi,esi
  41fa3f:	lea    r13,[rsp+0x28]
  41fa44:	jmp    0x41fa93
  41fa46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fa50:	mov    r9,rdi
  41fa53:	mov    edx,0x1
  41fa58:	mov    rcx,rbx
  41fa5b:	call   0x4494d0
  41fa60:	cmp    rax,QWORD PTR [rsp+0x28]
  41fa65:	jne    0x41fae0
  41fa67:	test   rbp,rbp
  41fa6a:	mov    BYTE PTR [rbx+rax*1],0x0
  41fa6e:	je     0x41fa8a
  41fa70:	mov    rdx,rbp
  41fa73:	mov    rcx,rbx
  41fa76:	call   0x438360
  41fa7b:	test   eax,eax
  41fa7d:	je     0x41fa8a
  41fa7f:	mov    rdx,rbx
  41fa82:	mov    rcx,r14
  41fa85:	call   0x41f5e0
  41fa8a:	add    esi,0x1
  41fa8d:	cmp    DWORD PTR [rsp+0x24],esi
  41fa91:	jbe    0x41fb00
  41fa93:	mov    r9,rdi
  41fa96:	mov    r8d,0x8
  41fa9c:	mov    edx,0x1
  41faa1:	mov    rcx,r13
  41faa4:	call   0x4494d0
  41faa9:	cmp    rax,0x8
  41faad:	jne    0x41fae0
  41faaf:	mov    r8,QWORD PTR [rsp+0x28]
  41fab4:	lea    rax,[r8+0x1]
  41fab8:	cmp    rax,r12
  41fabb:	jbe    0x41fa50
  41fabd:	lea    r12,[r8+0x80]
  41fac4:	mov    rcx,rbx
  41fac7:	mov    rdx,r12
  41faca:	call   0x43bb70
  41facf:	mov    r8,QWORD PTR [rsp+0x28]
  41fad4:	mov    rbx,rax
  41fad7:	jmp    0x41fa50
  41fadc:	nop    DWORD PTR [rax+0x0]
  41fae0:	mov    rcx,rbx
  41fae3:	call   0x4494c8
  41fae8:	mov    edx,0xffffffff
  41faed:	mov    eax,edx
  41faef:	add    rsp,0x30
  41faf3:	pop    rbx
  41faf4:	pop    rsi
  41faf5:	pop    rdi
  41faf6:	pop    rbp
  41faf7:	pop    r12
  41faf9:	pop    r13
  41fafb:	pop    r14
  41fafd:	ret    
  41fafe:	xchg   ax,ax
  41fb00:	mov    rcx,rbx
  41fb03:	call   0x4494c8
  41fb08:	xor    edx,edx
  41fb0a:	jmp    0x41faed
  41fb0c:	nop
  41fb0d:	nop
  41fb0e:	nop
  41fb0f:	nop
  41fb10:	push   rsi
  41fb11:	push   rbx
  41fb12:	sub    rsp,0x38
  41fb16:	mov    esi,0x1
  41fb1b:	mov    edx,0x90
  41fb20:	shl    esi,cl
  41fb22:	mov    ecx,0x1
  41fb27:	call   0x43bb20
  41fb2c:	mov    rbx,rax
  41fb2f:	mov    rax,QWORD PTR [rip+0x3b36a]        # 0x45aea0
  41fb36:	lea    r9,[rip+0x1bfb3]        # 0x43baf0
  41fb3d:	xor    r8d,r8d
  41fb40:	xor    edx,edx
  41fb42:	mov    rcx,rbx
  41fb45:	mov    QWORD PTR [rsp+0x20],rax
  41fb4a:	call   0x439830
  41fb4f:	mov    ecx,esi
  41fb51:	mov    edx,0x8
  41fb56:	mov    DWORD PTR [rbx+0x30],0x0
  41fb5d:	call   0x43bb20
  41fb62:	mov    QWORD PTR [rbx+0x58],rax
  41fb66:	mov    rax,rbx
  41fb69:	mov    BYTE PTR [rbx+0x88],0x1
  41fb70:	mov    DWORD PTR [rbx+0x70],esi
  41fb73:	add    rsp,0x38
  41fb77:	pop    rbx
  41fb78:	pop    rsi
  41fb79:	ret    
  41fb7a:	nop    WORD PTR [rax+rax*1+0x0]
  41fb80:	push   rbx
  41fb81:	sub    rsp,0x20
  41fb85:	xor    edx,edx
  41fb87:	mov    rbx,rcx
  41fb8a:	call   0x439b90
  41fb8f:	cmp    BYTE PTR [rbx+0x88],0x0
  41fb96:	je     0x41fba1
  41fb98:	mov    rcx,QWORD PTR [rbx+0x58]
  41fb9c:	call   0x4494c8
  41fba1:	mov    rcx,rbx
  41fba4:	add    rsp,0x20
  41fba8:	pop    rbx
  41fba9:	jmp    0x4494c8
  41fbae:	xchg   ax,ax
  41fbb0:	push   r15
  41fbb2:	push   r14
  41fbb4:	push   r13
  41fbb6:	push   r12
  41fbb8:	push   rbp
  41fbb9:	push   rdi
  41fbba:	push   rsi
  41fbbb:	push   rbx
  41fbbc:	sub    rsp,0x48
  41fbc0:	mov    r11d,DWORD PTR [rcx+0x70]
  41fbc4:	mov    r14,QWORD PTR [rcx+0x58]
  41fbc8:	mov    ebx,r9d
  41fbcb:	add    DWORD PTR [rcx+0x80],0x1
  41fbd2:	mov    QWORD PTR [rsp+0x98],rdx
  41fbda:	mov    rbp,rcx
  41fbdd:	mov    r10,r8
  41fbe0:	mov    r15d,r9d
  41fbe3:	lea    r13d,[r11-0x1]
  41fbe7:	and    ebx,r13d
  41fbea:	mov    eax,ebx
  41fbec:	mov    rsi,QWORD PTR [r14+rax*8]
  41fbf0:	lea    rdx,[rax*8+0x0]
  41fbf8:	test   rsi,rsi
  41fbfb:	je     0x41fef7
  41fc01:	cmp    rsi,0xffffffffffffffff
  41fc05:	je     0x41ff0d
  41fc0b:	cmp    DWORD PTR [rsi+0xc],r15d
  41fc0f:	mov    r9d,r11d
  41fc12:	je     0x41fe90
  41fc18:	mov    r12d,r15d
  41fc1b:	mov    eax,DWORD PTR [rbp+0x84]
  41fc21:	shl    r12d,0x4
  41fc25:	add    r12d,r15d
  41fc28:	and    r12d,r13d
  41fc2b:	lea    edi,[rax+0x1]
  41fc2e:	or     r12d,0x1
  41fc32:	jmp    0x41fc37
  41fc34:	add    edi,0x1
  41fc37:	add    ebx,r12d
  41fc3a:	mov    DWORD PTR [rbp+0x84],edi
  41fc40:	and    ebx,r13d
  41fc43:	mov    eax,ebx
  41fc45:	mov    rsi,QWORD PTR [r14+rax*8]
  41fc49:	lea    rdx,[rax*8+0x0]
  41fc51:	test   rsi,rsi
  41fc54:	je     0x41fcc0
  41fc56:	cmp    rsi,0xffffffffffffffff
  41fc5a:	je     0x41fcb4
  41fc5c:	cmp    DWORD PTR [rsi+0xc],r15d
  41fc60:	jne    0x41fc34
  41fc62:	cmp    DWORD PTR [rsi+0x8],r10d
  41fc66:	jne    0x41fc34
  41fc68:	mov    rdx,QWORD PTR [rsp+0x98]
  41fc70:	mov    rcx,QWORD PTR [rsi]
  41fc73:	mov    r8,r10
  41fc76:	mov    DWORD PTR [rsp+0x3c],r11d
  41fc7b:	mov    DWORD PTR [rsp+0x30],r9d
  41fc80:	mov    QWORD PTR [rsp+0x28],r10
  41fc85:	call   0x449458
  41fc8a:	test   eax,eax
  41fc8c:	mov    r10,QWORD PTR [rsp+0x28]
  41fc91:	mov    r9d,DWORD PTR [rsp+0x30]
  41fc96:	mov    r11d,DWORD PTR [rsp+0x3c]
  41fc9b:	jne    0x41fc34
  41fc9d:	nop    DWORD PTR [rax]
  41fca0:	mov    rax,rsi
  41fca3:	add    rsp,0x48
  41fca7:	pop    rbx
  41fca8:	pop    rsi
  41fca9:	pop    rdi
  41fcaa:	pop    rbp
  41fcab:	pop    r12
  41fcad:	pop    r13
  41fcaf:	pop    r14
  41fcb1:	pop    r15
  41fcb3:	ret    
  41fcb4:	cmp    r9d,r11d
  41fcb7:	cmovne r9,rbx
  41fcbb:	jmp    0x41fc34
  41fcc0:	mov    ecx,DWORD PTR [rsp+0xb0]
  41fcc7:	test   ecx,ecx
  41fcc9:	je     0x41ff06
  41fccf:	cmp    r11d,r9d
  41fcd2:	je     0x41fcdc
  41fcd4:	lea    rdx,[r9*8+0x0]
  41fcdc:	mov    QWORD PTR [rsp+0x30],r10
  41fce1:	mov    QWORD PTR [rsp+0x28],rdx
  41fce6:	mov    rcx,rbp
  41fce9:	call   QWORD PTR [rbp+0x60]
  41fcec:	mov    rdx,QWORD PTR [rsp+0x28]
  41fcf1:	mov    rbx,rax
  41fcf4:	mov    rax,QWORD PTR [rbp+0x58]
  41fcf8:	mov    r10,QWORD PTR [rsp+0x30]
  41fcfd:	mov    QWORD PTR [rax+rdx*1],rbx
  41fd01:	mov    rax,QWORD PTR [rbp+0x68]
  41fd05:	mov    DWORD PTR [rbx+0x8],r10d
  41fd09:	mov    DWORD PTR [rbx+0xc],r15d
  41fd0d:	test   rax,rax
  41fd10:	je     0x41fe02
  41fd16:	lea    rcx,[r10+0x1]
  41fd1a:	mov    QWORD PTR [rsp+0x28],r10
  41fd1f:	call   rax
  41fd21:	mov    r10,QWORD PTR [rsp+0x28]
  41fd26:	mov    rdx,QWORD PTR [rsp+0x98]
  41fd2e:	mov    rcx,rax
  41fd31:	mov    r8,r10
  41fd34:	call   0x449450
  41fd39:	mov    r10,QWORD PTR [rsp+0x28]
  41fd3e:	mov    BYTE PTR [rax+r10*1],0x0
  41fd43:	mov    QWORD PTR [rbx],rax
  41fd46:	mov    edx,DWORD PTR [rbp+0x70]
  41fd49:	mov    eax,DWORD PTR [rbp+0x74]
  41fd4c:	mov    rsi,rbx
  41fd4f:	lea    edi,[rdx+rdx*1]
  41fd52:	add    eax,0x1
  41fd55:	mov    DWORD PTR [rbp+0x74],eax
  41fd58:	shl    eax,0x2
  41fd5b:	add    edx,edi
  41fd5d:	cmp    eax,edx
  41fd5f:	jb     0x41fca0
  41fd65:	mov    ecx,edi
  41fd67:	mov    edx,0x8
  41fd6c:	call   0x43bb20
  41fd71:	mov    edx,DWORD PTR [rbp+0x70]
  41fd74:	mov    rcx,QWORD PTR [rbp+0x58]
  41fd78:	lea    r10d,[rdi-0x1]
  41fd7c:	mov    r11,rcx
  41fd7f:	lea    r12,[rcx+rdx*8]
  41fd83:	mov    rsi,QWORD PTR [r11]
  41fd86:	lea    rdx,[rsi-0x1]
  41fd8a:	cmp    rdx,0xfffffffffffffffd
  41fd8e:	ja     0x41fdd6
  41fd90:	mov    r9d,DWORD PTR [rsi+0xc]
  41fd94:	mov    edx,r10d
  41fd97:	and    edx,r9d
  41fd9a:	mov    r8d,edx
  41fd9d:	lea    r8,[rax+r8*8]
  41fda1:	cmp    QWORD PTR [r8],0x0
  41fda5:	je     0x41fdd3
  41fda7:	mov    r8d,r9d
  41fdaa:	shl    r8d,0x4
  41fdae:	add    r9d,r8d
  41fdb1:	and    r9d,r10d
  41fdb4:	or     r9d,0x1
  41fdb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41fdc0:	add    edx,r9d
  41fdc3:	and    edx,r10d
  41fdc6:	mov    r8d,edx
  41fdc9:	lea    r8,[rax+r8*8]
  41fdcd:	cmp    QWORD PTR [r8],0x0
  41fdd1:	jne    0x41fdc0
  41fdd3:	mov    QWORD PTR [r8],rsi
  41fdd6:	add    r11,0x8
  41fdda:	cmp    r12,r11
  41fddd:	ja     0x41fd83
  41fddf:	cmp    BYTE PTR [rbp+0x88],0x0
  41fde6:	jne    0x41fece
  41fdec:	mov    BYTE PTR [rbp+0x88],0x1
  41fdf3:	mov    QWORD PTR [rbp+0x58],rax
  41fdf7:	mov    rsi,rbx
  41fdfa:	mov    DWORD PTR [rbp+0x70],edi
  41fdfd:	jmp    0x41fca0
  41fe02:	mov    rcx,QWORD PTR [rbp+0x18]
  41fe06:	movsxd rsi,r10d
  41fe09:	lea    rax,[rcx+rsi*1+0x1]
  41fe0e:	cmp    QWORD PTR [rbp+0x20],rax
  41fe12:	jb     0x41fee2
  41fe18:	mov    rdx,QWORD PTR [rsp+0x98]
  41fe20:	mov    r8,rsi
  41fe23:	call   0x449450
  41fe28:	add    rsi,QWORD PTR [rbp+0x18]
  41fe2c:	lea    rax,[rsi+0x1]
  41fe30:	mov    QWORD PTR [rbp+0x18],rax
  41fe34:	mov    BYTE PTR [rsi],0x0
  41fe37:	mov    r8,QWORD PTR [rbp+0x10]
  41fe3b:	mov    rax,QWORD PTR [rbp+0x18]
  41fe3f:	cmp    rax,r8
  41fe42:	je     0x41ff15
  41fe48:	movsxd rdx,DWORD PTR [rbp+0x30]
  41fe4c:	mov    ecx,edx
  41fe4e:	add    rax,rdx
  41fe51:	mov    rdx,QWORD PTR [rbp+0x20]
  41fe55:	not    ecx
  41fe57:	movsxd rcx,ecx
  41fe5a:	and    rax,rcx
  41fe5d:	mov    rcx,QWORD PTR [rbp+0x8]
  41fe61:	mov    rdi,rdx
  41fe64:	mov    r9,rax
  41fe67:	mov    QWORD PTR [rbp+0x18],rax
  41fe6b:	sub    r9,rcx
  41fe6e:	sub    rdi,rcx
  41fe71:	cmp    r9,rdi
  41fe74:	jle    0x41fe7d
  41fe76:	mov    QWORD PTR [rbp+0x18],rdx
  41fe7a:	mov    rax,rdx
  41fe7d:	mov    QWORD PTR [rbp+0x10],rax
  41fe81:	mov    QWORD PTR [rbx],r8
  41fe84:	jmp    0x41fd46
  41fe89:	nop    DWORD PTR [rax+0x0]
  41fe90:	cmp    DWORD PTR [rsi+0x8],r8d
  41fe94:	jne    0x41fc18
  41fe9a:	mov    rdx,QWORD PTR [rsp+0x98]
  41fea2:	mov    rcx,QWORD PTR [rsi]
  41fea5:	mov    DWORD PTR [rsp+0x30],r11d
  41feaa:	mov    QWORD PTR [rsp+0x28],r10
  41feaf:	call   0x449458
  41feb4:	test   eax,eax
  41feb6:	je     0x41fca0
  41febc:	mov    r11d,DWORD PTR [rsp+0x30]
  41fec1:	mov    r10,QWORD PTR [rsp+0x28]
  41fec6:	mov    r9d,r11d
  41fec9:	jmp    0x41fc18
  41fece:	mov    QWORD PTR [rsp+0x28],rax
  41fed3:	call   0x4494c8
  41fed8:	mov    rax,QWORD PTR [rsp+0x28]
  41fedd:	jmp    0x41fdec
  41fee2:	lea    edx,[r10+0x1]
  41fee6:	mov    rcx,rbp
  41fee9:	call   0x439960
  41feee:	mov    rcx,QWORD PTR [rbp+0x18]
  41fef2:	jmp    0x41fe18
  41fef7:	mov    eax,DWORD PTR [rsp+0xb0]
  41fefe:	test   eax,eax
  41ff00:	jne    0x41fcdc
  41ff06:	xor    esi,esi
  41ff08:	jmp    0x41fca0
  41ff0d:	mov    r9d,ebx
  41ff10:	jmp    0x41fc18
  41ff15:	or     BYTE PTR [rbp+0x50],0x2
  41ff19:	jmp    0x41fe48
  41ff1e:	xchg   ax,ax
  41ff20:	push   rbx
  41ff21:	sub    rsp,0x30
  41ff25:	test   r8,r8
  41ff28:	je     0x41ff5d
  41ff2a:	lea    rbx,[rdx+r8*1]
  41ff2e:	mov    r10,rdx
  41ff31:	xor    eax,eax
  41ff33:	add    r10,0x1
  41ff37:	movzx  r11d,BYTE PTR [r10-0x1]
  41ff3c:	imul   eax,eax,0x43
  41ff3f:	cmp    r10,rbx
  41ff42:	lea    eax,[rax+r11*1-0x71]
  41ff47:	jne    0x41ff33
  41ff49:	mov    DWORD PTR [rsp+0x20],r9d
  41ff4e:	lea    r9d,[rax+r8*1]
  41ff52:	call   0x41fbb0
  41ff57:	add    rsp,0x30
  41ff5b:	pop    rbx
  41ff5c:	ret    
  41ff5d:	xor    eax,eax
  41ff5f:	jmp    0x41ff49
  41ff61:	nop    DWORD PTR [rax+rax*1+0x0]
  41ff66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ff70:	push   r12
  41ff72:	push   rbp
  41ff73:	push   rdi
  41ff74:	push   rsi
  41ff75:	push   rbx
  41ff76:	sub    rsp,0x20
  41ff7a:	mov    eax,DWORD PTR [rcx+0x70]
  41ff7d:	mov    rbx,QWORD PTR [rcx+0x58]
  41ff81:	mov    rdi,rcx
  41ff84:	mov    r12,rdx
  41ff87:	mov    rbp,r8
  41ff8a:	lea    rsi,[rbx+rax*8]
  41ff8e:	jmp    0x41ff99
  41ff90:	add    rbx,0x8
  41ff94:	cmp    rsi,rbx
  41ff97:	jbe    0x41ffb4
  41ff99:	mov    rdx,QWORD PTR [rbx]
  41ff9c:	lea    r9,[rdx-0x1]
  41ffa0:	cmp    r9,0xfffffffffffffffd
  41ffa4:	ja     0x41ff90
  41ffa6:	mov    rcx,QWORD PTR [rdi+0x78]
  41ffaa:	mov    r8,rbp
  41ffad:	call   r12
  41ffb0:	test   eax,eax
  41ffb2:	jne    0x41ff90
  41ffb4:	add    rsp,0x20
  41ffb8:	pop    rbx
  41ffb9:	pop    rsi
  41ffba:	pop    rdi
  41ffbb:	pop    rbp
  41ffbc:	pop    r12
  41ffbe:	ret    
  41ffbf:	nop
  41ffc0:	push   r12
  41ffc2:	push   rbp
  41ffc3:	push   rdi
  41ffc4:	push   rsi
  41ffc5:	push   rbx
  41ffc6:	sub    rsp,0x20
  41ffca:	mov    eax,DWORD PTR [rcx+0x70]
  41ffcd:	mov    rbx,QWORD PTR [rcx+0x58]
  41ffd1:	mov    rdi,rcx
  41ffd4:	mov    r12,rdx
  41ffd7:	mov    rbp,r8
  41ffda:	lea    rsi,[rbx+rax*8]
  41ffde:	jmp    0x41ffe9
  41ffe0:	add    rbx,0x8
  41ffe4:	cmp    rsi,rbx
  41ffe7:	jbe    0x420014
  41ffe9:	mov    rdx,QWORD PTR [rbx]
  41ffec:	lea    r9,[rdx-0x1]
  41fff0:	cmp    r9,0xfffffffffffffffd
  41fff4:	ja     0x41ffe0
  41fff6:	mov    rcx,QWORD PTR [rdi+0x78]
  41fffa:	mov    r8,rbp
  41fffd:	call   r12
  420000:	test   eax,eax
  420002:	je     0x41ffe0
  420004:	mov    QWORD PTR [rbx],0xffffffffffffffff
  42000b:	add    rbx,0x8
  42000f:	cmp    rsi,rbx
  420012:	ja     0x41ffe9
  420014:	add    rsp,0x20
  420018:	pop    rbx
  420019:	pop    rsi
  42001a:	pop    rdi
  42001b:	pop    rbp
  42001c:	pop    r12
  42001e:	ret    
  42001f:	nop
  420020:	push   rdi
  420021:	push   rsi
  420022:	push   rbx
  420023:	sub    rsp,0x30
  420027:	cmp    BYTE PTR [rcx+0x88],0x0
  42002e:	mov    esi,DWORD PTR [rsp+0x70]
  420032:	mov    rbx,rcx
  420035:	mov    rdi,rdx
  420038:	je     0x420057
  42003a:	mov    rcx,QWORD PTR [rcx+0x58]
  42003e:	mov    DWORD PTR [rsp+0x2c],r9d
  420043:	mov    DWORD PTR [rsp+0x28],r8d
  420048:	call   0x4494c8
  42004d:	mov    r9d,DWORD PTR [rsp+0x2c]
  420052:	mov    r8d,DWORD PTR [rsp+0x28]
  420057:	mov    QWORD PTR [rbx+0x58],rdi
  42005b:	mov    DWORD PTR [rbx+0x70],r8d
  42005f:	mov    DWORD PTR [rbx+0x74],r9d
  420063:	mov    BYTE PTR [rbx+0x88],sil
  42006a:	add    rsp,0x30
  42006e:	pop    rbx
  42006f:	pop    rsi
  420070:	pop    rdi
  420071:	ret    
  420072:	nop    DWORD PTR [rax+0x0]
  420076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420080:	push   r15
  420082:	push   r14
  420084:	push   r13
  420086:	push   r12
  420088:	push   rbp
  420089:	push   rdi
  42008a:	push   rsi
  42008b:	push   rbx
  42008c:	sub    rsp,0xa8
  420093:	movaps XMMWORD PTR [rsp+0x40],xmm6
  420098:	movaps XMMWORD PTR [rsp+0x50],xmm7
  42009d:	movaps XMMWORD PTR [rsp+0x60],xmm8
  4200a3:	movaps XMMWORD PTR [rsp+0x70],xmm9
  4200a9:	movaps XMMWORD PTR [rsp+0x80],xmm10
  4200b2:	movaps XMMWORD PTR [rsp+0x90],xmm11
  4200bb:	pxor   xmm6,xmm6
  4200bf:	xor    r10d,r10d
  4200c2:	mov    r13,rcx
  4200c5:	xor    ebx,ebx
  4200c7:	xor    esi,esi
  4200c9:	mov    edx,DWORD PTR [rcx+0x70]
  4200cc:	mov    rax,QWORD PTR [rcx+0x58]
  4200d0:	xor    edi,edi
  4200d2:	movapd xmm7,xmm6
  4200d6:	lea    rcx,[rax+rdx*8]
  4200da:	jmp    0x420110
  4200dc:	nop    DWORD PTR [rax+0x0]
  4200e0:	test   rdx,rdx
  4200e3:	je     0x420107
  4200e5:	mov    edx,DWORD PTR [rdx+0x8]
  4200e8:	pxor   xmm0,xmm0
  4200ec:	cvtsi2sd xmm0,rdx
  4200f1:	add    rsi,rdx
  4200f4:	cmp    rbx,rdx
  4200f7:	cmovb  rbx,rdx
  4200fb:	add    rdi,0x1
  4200ff:	mulsd  xmm0,xmm0
  420103:	addsd  xmm7,xmm0
  420107:	add    rax,0x8
  42010b:	cmp    rcx,rax
  42010e:	jbe    0x420130
  420110:	mov    rdx,QWORD PTR [rax]
  420113:	cmp    rdx,0xffffffffffffffff
  420117:	jne    0x4200e0
  420119:	add    rax,0x8
  42011d:	add    r10,0x1
  420121:	cmp    rcx,rax
  420124:	ja     0x420110
  420126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420130:	mov    ebp,DWORD PTR [r13+0x74]
  420134:	mov    rcx,r13
  420137:	mov    QWORD PTR [rsp+0x38],r10
  42013c:	call   0x439c20
  420141:	mov    r15d,DWORD PTR [r13+0x70]
  420145:	movsxd r14,eax
  420148:	mov    r12,QWORD PTR [rip+0x445e5]        # 0x464734
  42014f:	pxor   xmm8,xmm8
  420154:	sub    r14,rsi
  420157:	call   r12
  42015a:	lea    rdx,[rip+0x314ef]        # 0x451650
  420161:	lea    rcx,[rax+0x60]
  420165:	mov    r8d,ebp
  420168:	shl    r15,0x3
  42016c:	call   0x4498d0
  420171:	test   rdi,rdi
  420174:	cvtsi2sd xmm8,rbp
  420179:	mov    r10,QWORD PTR [rsp+0x38]
  42017e:	js     0x420442
  420184:	pxor   xmm9,xmm9
  420189:	cvtsi2sd xmm9,rdi
  42018e:	mulsd  xmm9,QWORD PTR [rip+0x31599]        # 0x451730
  420197:	mov    QWORD PTR [rsp+0x38],r10
  42019c:	call   r12
  42019f:	lea    rdx,[rip+0x314c5]        # 0x45166b
  4201a6:	lea    rcx,[rax+0x60]
  4201aa:	mov    r8d,edi
  4201ad:	divsd  xmm9,xmm8
  4201b2:	movapd xmm3,xmm9
  4201b7:	movq   r9,xmm9
  4201bc:	call   0x4498d0
  4201c1:	mov    edi,DWORD PTR [r13+0x70]
  4201c5:	call   r12
  4201c8:	lea    rdx,[rip+0x314b6]        # 0x451685
  4201cf:	lea    rcx,[rax+0x60]
  4201d3:	mov    r8d,edi
  4201d6:	mov    edi,0x20
  4201db:	call   0x4498d0
  4201e0:	call   r12
  4201e3:	mov    r10,QWORD PTR [rsp+0x38]
  4201e8:	lea    rcx,[rax+0x60]
  4201ec:	lea    rdx,[rip+0x3149e]        # 0x451691
  4201f3:	mov    r8d,r10d
  4201f6:	call   0x4498d0
  4201fb:	cmp    r14,0x27ff
  420202:	jbe    0x42021a
  420204:	cmp    r14,0x9fffff
  42020b:	ja     0x420434
  420211:	shr    r14,0xa
  420215:	mov    edi,0x6b
  42021a:	cmp    rsi,0x27ff
  420221:	jbe    0x420241
  420223:	cmp    rsi,0x9fffff
  42022a:	ja     0x420420
  420230:	mov    rax,rsi
  420233:	mov    ebp,0x6b
  420238:	shr    rax,0xa
  42023c:	mov    r8,rax
  42023f:	jmp    0x420249
  420241:	mov    r8d,esi
  420244:	mov    ebp,0x20
  420249:	mov    DWORD PTR [rsp+0x38],r8d
  42024e:	call   r12
  420251:	mov    r8d,DWORD PTR [rsp+0x38]
  420256:	lea    rcx,[rax+0x60]
  42025a:	lea    rdx,[rip+0x3143f]        # 0x4516a0
  420261:	mov    DWORD PTR [rsp+0x28],edi
  420265:	mov    DWORD PTR [rsp+0x20],r14d
  42026a:	mov    r9d,ebp
  42026d:	mov    edi,0x20
  420272:	call   0x4498d0
  420277:	cmp    r15,0x27ff
  42027e:	jbe    0x420296
  420280:	cmp    r15,0x9fffff
  420287:	ja     0x420410
  42028d:	shr    r15,0xa
  420291:	mov    edi,0x6b
  420296:	call   r12
  420299:	lea    rdx,[rip+0x3141f]        # 0x4516bf
  4202a0:	lea    rcx,[rax+0x60]
  4202a4:	mov    r9d,edi
  4202a7:	mov    r8d,r15d
  4202aa:	call   0x4498d0
  4202af:	test   rsi,rsi
  4202b2:	js     0x420465
  4202b8:	pxor   xmm9,xmm9
  4202bd:	cvtsi2sd xmm9,rsi
  4202c2:	mov    eax,DWORD PTR [r13+0x84]
  4202c9:	pxor   xmm10,xmm10
  4202ce:	pxor   xmm0,xmm0
  4202d2:	divsd  xmm9,xmm8
  4202d7:	cvtsi2sd xmm10,rax
  4202dc:	mov    eax,DWORD PTR [r13+0x80]
  4202e3:	cvtsi2sd xmm0,rax
  4202e8:	divsd  xmm10,xmm0
  4202ed:	call   r12
  4202f0:	lea    rdx,[rip+0x313da]        # 0x4516d1
  4202f7:	lea    rcx,[rax+0x60]
  4202fb:	movapd xmm11,xmm9
  420300:	divsd  xmm7,xmm8
  420305:	movapd xmm2,xmm10
  42030a:	movq   r8,xmm10
  42030f:	call   0x4498d0
  420314:	mov    eax,DWORD PTR [r13+0x80]
  42031b:	pxor   xmm0,xmm0
  42031f:	mulsd  xmm11,xmm9
  420324:	cvtsi2sd xmm0,rax
  420329:	divsd  xmm8,xmm0
  42032e:	call   r12
  420331:	lea    rdx,[rip+0x313ab]        # 0x4516e3
  420338:	lea    rcx,[rax+0x60]
  42033c:	movapd xmm2,xmm8
  420341:	movq   r8,xmm8
  420346:	call   0x4498d0
  42034b:	subsd  xmm7,xmm11
  420350:	ucomisd xmm6,xmm7
  420354:	ja     0x420485
  42035a:	ucomisd xmm7,xmm6
  42035e:	jp     0x420362
  420360:	je     0x420396
  420362:	movapd xmm3,xmm7
  420366:	movsd  xmm2,QWORD PTR [rip+0x313ca]        # 0x451738
  42036e:	xchg   ax,ax
  420370:	movapd xmm0,xmm3
  420374:	movapd xmm1,xmm3
  420378:	mulsd  xmm0,xmm3
  42037c:	addsd  xmm1,xmm3
  420380:	subsd  xmm0,xmm7
  420384:	divsd  xmm0,xmm1
  420388:	ucomisd xmm0,xmm2
  42038c:	subsd  xmm3,xmm0
  420390:	ja     0x420370
  420392:	movapd xmm6,xmm3
  420396:	call   r12
  420399:	movapd xmm3,xmm6
  42039d:	movq   r9,xmm6
  4203a2:	movapd xmm2,xmm9
  4203a7:	movq   r8,xmm9
  4203ac:	lea    rcx,[rax+0x60]
  4203b0:	lea    rdx,[rip+0x31341]        # 0x4516f8
  4203b7:	call   0x4498d0
  4203bc:	call   r12
  4203bf:	lea    rdx,[rip+0x31354]        # 0x45171a
  4203c6:	lea    rcx,[rax+0x60]
  4203ca:	mov    r8d,ebx
  4203cd:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4203d2:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4203d7:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4203dd:	movaps xmm9,XMMWORD PTR [rsp+0x70]
  4203e3:	movaps xmm10,XMMWORD PTR [rsp+0x80]
  4203ec:	movaps xmm11,XMMWORD PTR [rsp+0x90]
  4203f5:	add    rsp,0xa8
  4203fc:	pop    rbx
  4203fd:	pop    rsi
  4203fe:	pop    rdi
  4203ff:	pop    rbp
  420400:	pop    r12
  420402:	pop    r13
  420404:	pop    r14
  420406:	pop    r15
  420408:	jmp    0x4498d0
  42040d:	nop    DWORD PTR [rax]
  420410:	shr    r15,0x14
  420414:	mov    edi,0x4d
  420419:	jmp    0x420296
  42041e:	xchg   ax,ax
  420420:	mov    rax,rsi
  420423:	mov    ebp,0x4d
  420428:	shr    rax,0x14
  42042c:	mov    r8,rax
  42042f:	jmp    0x420249
  420434:	shr    r14,0x14
  420438:	mov    edi,0x4d
  42043d:	jmp    0x42021a
  420442:	mov    rax,rdi
  420445:	mov    rdx,rdi
  420448:	pxor   xmm9,xmm9
  42044d:	shr    rax,1
  420450:	and    edx,0x1
  420453:	or     rax,rdx
  420456:	cvtsi2sd xmm9,rax
  42045b:	addsd  xmm9,xmm9
  420460:	jmp    0x42018e
  420465:	mov    rax,rsi
  420468:	pxor   xmm9,xmm9
  42046d:	shr    rax,1
  420470:	and    esi,0x1
  420473:	or     rax,rsi
  420476:	cvtsi2sd xmm9,rax
  42047b:	addsd  xmm9,xmm9
  420480:	jmp    0x4202c2
  420485:	call   0x449548
  42048a:	nop
  42048b:	nop
  42048c:	nop
  42048d:	nop
  42048e:	nop
  42048f:	nop
  420490:	sub    r8d,0x39
  420494:	mov    rax,rcx
  420497:	cmp    r8d,0x8
  42049b:	ja     0x420535
  4204a1:	lea    rcx,[rip+0x31298]        # 0x451740
  4204a8:	movsxd r8,DWORD PTR [rcx+r8*4]
  4204ac:	add    rcx,r8
  4204af:	jmp    rcx
  4204b1:	mov    rcx,QWORD PTR [rdx+0x208]
  4204b8:	mov    QWORD PTR [rax],rcx
  4204bb:	mov    rcx,QWORD PTR [rdx+0x210]
  4204c2:	mov    rdx,QWORD PTR [rdx+0x218]
  4204c9:	mov    QWORD PTR [rax+0x8],rcx
  4204cd:	mov    QWORD PTR [rax+0x10],rdx
  4204d1:	ret    
  4204d2:	mov    rcx,QWORD PTR [rdx+0x238]
  4204d9:	mov    QWORD PTR [rax],rcx
  4204dc:	mov    rcx,QWORD PTR [rdx+0x240]
  4204e3:	mov    rdx,QWORD PTR [rdx+0x248]
  4204ea:	mov    QWORD PTR [rax+0x8],rcx
  4204ee:	mov    QWORD PTR [rax+0x10],rdx
  4204f2:	ret    
  4204f3:	mov    rcx,QWORD PTR [rdx+0x220]
  4204fa:	mov    QWORD PTR [rax],rcx
  4204fd:	mov    rcx,QWORD PTR [rdx+0x228]
  420504:	mov    rdx,QWORD PTR [rdx+0x230]
  42050b:	mov    QWORD PTR [rax+0x8],rcx
  42050f:	mov    QWORD PTR [rax+0x10],rdx
  420513:	ret    
  420514:	mov    rcx,QWORD PTR [rdx+0x250]
  42051b:	mov    QWORD PTR [rax],rcx
  42051e:	mov    rcx,QWORD PTR [rdx+0x258]
  420525:	mov    rdx,QWORD PTR [rdx+0x260]
  42052c:	mov    QWORD PTR [rax+0x8],rcx
  420530:	mov    QWORD PTR [rax+0x10],rdx
  420534:	ret    
  420535:	mov    rcx,QWORD PTR [rdx+0x1f0]
  42053c:	mov    QWORD PTR [rax],rcx
  42053f:	mov    rcx,QWORD PTR [rdx+0x1f8]
  420546:	mov    rdx,QWORD PTR [rdx+0x200]
  42054d:	mov    QWORD PTR [rax+0x8],rcx
  420551:	mov    QWORD PTR [rax+0x10],rdx
  420555:	ret    
  420556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420560:	push   r13
  420562:	push   r12
  420564:	push   rbp
  420565:	push   rdi
  420566:	push   rsi
  420567:	push   rbx
  420568:	sub    rsp,0x58
  42056c:	mov    rbp,rdx
  42056f:	mov    rdi,r8
  420572:	xor    edx,edx
  420574:	xor    r8d,r8d
  420577:	mov    rbx,r9
  42057a:	mov    QWORD PTR [rsp+0x20],0x0
  420583:	xor    r9d,r9d
  420586:	mov    rsi,rcx
  420589:	call   0x427030
  42058e:	cmp    rax,0xffffffffffffffff
  420592:	je     0x42063b
  420598:	mov    rax,QWORD PTR [rbx+0x10]
  42059c:	mov    rcx,QWORD PTR [rbx+0x8]
  4205a0:	lea    r13,[rsp+0x40]
  4205a5:	mov    QWORD PTR [rsp+0x30],rbp
  4205aa:	mov    QWORD PTR [rsp+0x40],rdi
  4205af:	lea    r12,[rsp+0x30]
  4205b4:	lea    rdi,[rsp+0x38]
  4205b9:	lea    rbp,[rsp+0x48]
  4205be:	mov    rdx,rax
  4205c1:	add    rdx,QWORD PTR [rbx]
  4205c4:	sub    rcx,rax
  4205c7:	mov    QWORD PTR [rsp+0x48],rcx
  4205cc:	mov    QWORD PTR [rsp+0x38],rdx
  4205d1:	mov    QWORD PTR [rsp+0x20],rbp
  4205d6:	mov    r9,rdi
  4205d9:	mov    r8,r13
  4205dc:	mov    rdx,r12
  4205df:	mov    rcx,rsi
  4205e2:	call   0x427030
  4205e7:	cmp    QWORD PTR [rsp+0x40],0x0
  4205ed:	jne    0x420650
  4205ef:	xor    r8d,r8d
  4205f2:	xor    edx,edx
  4205f4:	mov    QWORD PTR [rsp+0x20],rbp
  4205f9:	mov    r9,rdi
  4205fc:	mov    rcx,rsi
  4205ff:	call   0x427030
  420604:	cmp    rax,0xffffffffffffffff
  420608:	je     0x420630
  42060a:	mov    rax,QWORD PTR [rbx+0x8]
  42060e:	sub    rax,QWORD PTR [rsp+0x48]
  420613:	mov    QWORD PTR [rbx+0x10],rax
  420617:	mov    eax,0x1
  42061c:	add    rsp,0x58
  420620:	pop    rbx
  420621:	pop    rsi
  420622:	pop    rdi
  420623:	pop    rbp
  420624:	pop    r12
  420626:	pop    r13
  420628:	ret    
  420629:	nop    DWORD PTR [rax+0x0]
  420630:	call   QWORD PTR [rip+0x4414e]        # 0x464784
  420636:	cmp    DWORD PTR [rax],0x7
  420639:	je     0x420691
  42063b:	xor    eax,eax
  42063d:	add    rsp,0x58
  420641:	pop    rbx
  420642:	pop    rsi
  420643:	pop    rdi
  420644:	pop    rbp
  420645:	pop    r12
  420647:	pop    r13
  420649:	ret    
  42064a:	nop    WORD PTR [rax+rax*1+0x0]
  420650:	call   QWORD PTR [rip+0x4412e]        # 0x464784
  420656:	cmp    DWORD PTR [rax],0x7
  420659:	jne    0x42063b
  42065b:	mov    rax,QWORD PTR [rbx+0x8]
  42065f:	mov    rcx,QWORD PTR [rbx]
  420662:	add    QWORD PTR [rsp+0x48],0x100
  42066b:	lea    rdx,[rax+0x100]
  420672:	mov    QWORD PTR [rbx+0x8],rdx
  420676:	call   0x43bb70
  42067b:	mov    QWORD PTR [rbx],rax
  42067e:	add    rax,QWORD PTR [rbx+0x8]
  420682:	sub    rax,QWORD PTR [rsp+0x48]
  420687:	mov    QWORD PTR [rsp+0x38],rax
  42068c:	jmp    0x4205d1
  420691:	mov    rax,QWORD PTR [rbx+0x8]
  420695:	mov    rcx,QWORD PTR [rbx]
  420698:	add    QWORD PTR [rsp+0x48],0x100
  4206a1:	lea    rdx,[rax+0x100]
  4206a8:	mov    QWORD PTR [rbx+0x8],rdx
  4206ac:	call   0x43bb70
  4206b1:	mov    QWORD PTR [rbx],rax
  4206b4:	add    rax,QWORD PTR [rbx+0x8]
  4206b8:	xor    r8d,r8d
  4206bb:	sub    rax,QWORD PTR [rsp+0x48]
  4206c0:	xor    edx,edx
  4206c2:	mov    QWORD PTR [rsp+0x20],rbp
  4206c7:	mov    r9,rdi
  4206ca:	mov    rcx,rsi
  4206cd:	mov    QWORD PTR [rsp+0x38],rax
  4206d2:	call   0x427030
  4206d7:	cmp    rax,0xffffffffffffffff
  4206db:	jne    0x42060a
  4206e1:	xor    eax,eax
  4206e3:	jmp    0x42063d
  4206e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4206f0:	push   rdi
  4206f1:	push   rsi
  4206f2:	push   rbx
  4206f3:	sub    rsp,0x20
  4206f7:	mov    rbx,r9
  4206fa:	mov    r9,QWORD PTR [r9+0x10]
  4206fe:	mov    rdi,rdx
  420701:	mov    rsi,r8
  420704:	lea    rdx,[r8+r9*1]
  420708:	cmp    rdx,QWORD PTR [rbx+0x8]
  42070c:	ja     0x420731
  42070e:	mov    rax,QWORD PTR [rbx]
  420711:	lea    rcx,[rax+r9*1]
  420715:	mov    r8,rsi
  420718:	mov    rdx,rdi
  42071b:	call   0x449450
  420720:	add    QWORD PTR [rbx+0x10],rsi
  420724:	mov    eax,0x1
  420729:	add    rsp,0x20
  42072d:	pop    rbx
  42072e:	pop    rsi
  42072f:	pop    rdi
  420730:	ret    
  420731:	mov    rcx,QWORD PTR [rbx]
  420734:	mov    QWORD PTR [rbx+0x8],rdx
  420738:	call   0x43bb70
  42073d:	mov    r9,QWORD PTR [rbx+0x10]
  420741:	mov    QWORD PTR [rbx],rax
  420744:	jmp    0x420711
  420746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420750:	push   rbp
  420751:	push   r15
  420753:	push   r14
  420755:	push   r13
  420757:	push   r12
  420759:	push   rdi
  42075a:	push   rsi
  42075b:	push   rbx
  42075c:	sub    rsp,0x38
  420760:	lea    rbp,[rsp+0x80]
  420768:	mov    rsi,QWORD PTR [rip+0x44085]        # 0x4647f4
  42076f:	mov    QWORD PTR [rbp+0x8],rdx
  420773:	mov    rbx,rcx
  420776:	mov    r13,r8
  420779:	mov    r12,r9
  42077c:	mov    rdx,r9
  42077f:	mov    rcx,r8
  420782:	call   rsi
  420784:	test   eax,eax
  420786:	jne    0x4207b5
  420788:	lea    rax,[rip+0xffffffffffffff61]        # 0x4206f0
  42078f:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
  420797:	mov    DWORD PTR [rbx+0x10],0xffffffff
  42079e:	mov    QWORD PTR [rbx],rax
  4207a1:	mov    rax,rbx
  4207a4:	lea    rsp,[rbp-0x48]
  4207a8:	pop    rbx
  4207a9:	pop    rsi
  4207aa:	pop    rdi
  4207ab:	pop    r12
  4207ad:	pop    r13
  4207af:	pop    r14
  4207b1:	pop    r15
  4207b3:	pop    rbp
  4207b4:	ret    
  4207b5:	mov    rcx,r13
  4207b8:	call   0x4493c0
  4207bd:	mov    rcx,r12
  4207c0:	mov    r15,rax
  4207c3:	call   0x4493c0
  4207c8:	lea    rdx,[r15+rax*1+0x20]
  4207cd:	mov    r14,rax
  4207d0:	mov    rax,rdx
  4207d3:	and    rax,0xfffffffffffffff0
  4207d7:	call   0x43d410
  4207dc:	sub    rsp,rax
  4207df:	mov    r8,r14
  4207e2:	mov    rdx,r12
  4207e5:	lea    rdi,[rsp+0x30]
  4207ea:	mov    rcx,rdi
  4207ed:	call   0x449450
  4207f2:	mov    BYTE PTR [rdi+r14*1],0x2f
  4207f7:	lea    rcx,[rdi+r14*1+0x1]
  4207fc:	lea    r8,[r15+0x1]
  420800:	lea    r14,[rip+0x35379]        # 0x455b80
  420807:	mov    rdx,r13
  42080a:	xor    r15d,r15d
  42080d:	call   0x449450
  420812:	mov    rdx,QWORD PTR [r14]
  420815:	mov    rcx,rdi
  420818:	call   rsi
  42081a:	test   eax,eax
  42081c:	je     0x420885
  42081e:	add    r15,0x1
  420822:	add    r14,0x18
  420826:	cmp    r15,0x8
  42082a:	jne    0x420812
  42082c:	lea    rax,[rip+0xfffffffffffffd2d]        # 0x420560
  420833:	mov    rdx,r12
  420836:	mov    rcx,r13
  420839:	mov    QWORD PTR [rbx],rax
  42083c:	call   0x427020
  420841:	cmp    rax,0xffffffffffffffff
  420845:	mov    QWORD PTR [rbx+0x8],rax
  420849:	mov    DWORD PTR [rbx+0x10],0xffffffff
  420850:	jne    0x4207a1
  420856:	call   QWORD PTR [rip+0x43f28]        # 0x464784
  42085c:	cmp    DWORD PTR [rax],0x16
  42085f:	je     0x4208af
  420861:	mov    rcx,QWORD PTR [rbp+0x8]
  420865:	lea    r8,[rip+0x30f2c]        # 0x451798
  42086c:	mov    edx,0x3
  420871:	call   0x414d60
  420876:	lea    rax,[rip+0xfffffffffffffe73]        # 0x4206f0
  42087d:	mov    QWORD PTR [rbx],rax
  420880:	jmp    0x4207a1
  420885:	lea    rax,[r15+r15*2]
  420889:	lea    rdi,[rip+0x352f0]        # 0x455b80
  420890:	mov    DWORD PTR [rbx+0x10],0xffffffff
  420897:	lea    rax,[rdi+rax*8]
  42089b:	mov    rdx,QWORD PTR [rax+0x8]
  42089f:	mov    rax,QWORD PTR [rax+0x10]
  4208a3:	mov    QWORD PTR [rbx],rdx
  4208a6:	mov    QWORD PTR [rbx+0x8],rax
  4208aa:	jmp    0x4207a1
  4208af:	mov    rcx,QWORD PTR [rbp+0x8]
  4208b3:	lea    r8,[rip+0x30eae]        # 0x451768
  4208ba:	mov    QWORD PTR [rsp+0x20],r13
  4208bf:	mov    r9,r12
  4208c2:	mov    edx,0x3
  4208c7:	call   0x414b60
  4208cc:	jmp    0x420876
  4208ce:	xchg   ax,ax
  4208d0:	push   r12
  4208d2:	push   rbp
  4208d3:	push   rdi
  4208d4:	push   rsi
  4208d5:	push   rbx
  4208d6:	sub    rsp,0x30
  4208da:	movsxd rax,DWORD PTR [rsp+0x80]
  4208e2:	mov    rsi,rcx
  4208e5:	cmp    rax,rcx
  4208e8:	je     0x420972
  4208ee:	cmp    rcx,0x1f
  4208f2:	movzx  ebx,BYTE PTR [rdx]
  4208f5:	mov    r12d,0xffffffff
  4208fb:	jbe    0x420963
  4208fd:	xor    edx,edx
  4208ff:	mov    rbp,QWORD PTR [r9+0x10]
  420903:	div    rsi
  420906:	mov    rdx,QWORD PTR [r9+0x8]
  42090a:	mov    rdi,rax
  42090d:	lea    rax,[rax+rbp*1]
  420911:	cmp    rax,rdx
  420914:	ja     0x4209a0
  42091a:	xor    r11d,r11d
  42091d:	test   rdi,rdi
  420920:	mov    eax,r12d
  420923:	mov    ecx,esi
  420925:	lea    rdx,[rdi-0x1]
  420929:	je     0x420954
  42092b:	nop    DWORD PTR [rax+rax*1+0x0]
  420930:	mov    esi,r8d
  420933:	mov    r10,rdx
  420936:	shr    r8d,cl
  420939:	sub    r10,r11
  42093c:	and    esi,eax
  42093e:	test   bl,bl
  420940:	cmove  r10,r11
  420944:	add    r10,QWORD PTR [r9]
  420947:	add    r11,0x1
  42094b:	cmp    r11,rdi
  42094e:	mov    BYTE PTR [r10+rbp*1],sil
  420952:	jne    0x420930
  420954:	add    QWORD PTR [r9+0x10],rdi
  420958:	add    rsp,0x30
  42095c:	pop    rbx
  42095d:	pop    rsi
  42095e:	pop    rdi
  42095f:	pop    rbp
  420960:	pop    r12
  420962:	ret    
  420963:	mov    r12d,0x1
  420969:	shl    r12,cl
  42096c:	sub    r12,0x1
  420970:	jmp    0x4208fd
  420972:	mov    rdx,QWORD PTR [r9+0x10]
  420976:	mov    rax,QWORD PTR [r9+0x8]
  42097a:	lea    rcx,[rdx+0x1]
  42097e:	cmp    rcx,rax
  420981:	ja     0x4209d0
  420983:	mov    rax,QWORD PTR [r9]
  420986:	mov    QWORD PTR [r9+0x10],rcx
  42098a:	mov    BYTE PTR [rax+rdx*1],r8b
  42098e:	add    rsp,0x30
  420992:	pop    rbx
  420993:	pop    rsi
  420994:	pop    rdi
  420995:	pop    rbp
  420996:	pop    r12
  420998:	ret    
  420999:	nop    DWORD PTR [rax+0x0]
  4209a0:	mov    rcx,QWORD PTR [r9]
  4209a3:	add    rdx,0x100
  4209aa:	mov    DWORD PTR [rsp+0x2c],r8d
  4209af:	mov    QWORD PTR [r9+0x8],rdx
  4209b3:	mov    QWORD PTR [rsp+0x20],r9
  4209b8:	call   0x43bb70
  4209bd:	mov    r9,QWORD PTR [rsp+0x20]
  4209c2:	mov    r8d,DWORD PTR [rsp+0x2c]
  4209c7:	mov    QWORD PTR [r9],rax
  4209ca:	jmp    0x42091a
  4209cf:	nop
  4209d0:	lea    rdx,[rax+0x100]
  4209d7:	mov    rcx,QWORD PTR [r9]
  4209da:	mov    DWORD PTR [rsp+0x2c],r8d
  4209df:	mov    QWORD PTR [rsp+0x20],r9
  4209e4:	mov    QWORD PTR [r9+0x8],rdx
  4209e8:	call   0x43bb70
  4209ed:	mov    r9,QWORD PTR [rsp+0x20]
  4209f2:	mov    r8d,DWORD PTR [rsp+0x2c]
  4209f7:	mov    rdx,QWORD PTR [r9+0x10]
  4209fb:	mov    QWORD PTR [r9],rax
  4209fe:	lea    rcx,[rdx+0x1]
  420a02:	jmp    0x420986
  420a04:	xchg   ax,ax
  420a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a10:	push   r14
  420a12:	push   r13
  420a14:	push   r12
  420a16:	push   rbp
  420a17:	push   rdi
  420a18:	push   rsi
  420a19:	push   rbx
  420a1a:	sub    rsp,0x30
  420a1e:	mov    r10,QWORD PTR [r9+0x10]
  420a22:	mov    rbx,QWORD PTR [r9+0x8]
  420a26:	mov    rdi,rcx
  420a29:	mov    rsi,rdx
  420a2c:	mov    rax,r10
  420a2f:	add    rax,QWORD PTR [r9]
  420a32:	sub    rbx,r10
  420a35:	cmp    rbx,0x3
  420a39:	ja     0x420a82
  420a3b:	test   r8,r8
  420a3e:	je     0x420a90
  420a40:	mov    rax,QWORD PTR [r9+0x8]
  420a44:	mov    rcx,QWORD PTR [r9]
  420a47:	add    rbx,0x100
  420a4e:	mov    QWORD PTR [rsp+0x28],r8
  420a53:	mov    QWORD PTR [rsp+0x20],r9
  420a58:	lea    rdx,[rax+0x100]
  420a5f:	mov    QWORD PTR [r9+0x8],rdx
  420a63:	call   0x43bb70
  420a68:	mov    r9,QWORD PTR [rsp+0x20]
  420a6d:	mov    r8,QWORD PTR [rsp+0x28]
  420a72:	mov    QWORD PTR [r9],rax
  420a75:	sub    rax,rbx
  420a78:	add    rax,QWORD PTR [r9+0x8]
  420a7c:	cmp    rbx,0x3
  420a80:	jbe    0x420a3b
  420a82:	test   r8,r8
  420a85:	jne    0x420ab0
  420a87:	nop    WORD PTR [rax+rax*1+0x0]
  420a90:	mov    rax,QWORD PTR [r9+0x8]
  420a94:	sub    rax,rbx
  420a97:	mov    QWORD PTR [r9+0x10],rax
  420a9b:	mov    eax,0x1
  420aa0:	add    rsp,0x30
  420aa4:	pop    rbx
  420aa5:	pop    rsi
  420aa6:	pop    rdi
  420aa7:	pop    rbp
  420aa8:	pop    r12
  420aaa:	pop    r13
  420aac:	pop    r14
  420aae:	ret    
  420aaf:	nop
  420ab0:	movzx  r10d,BYTE PTR [rsi]
  420ab4:	cmp    r10d,0x7f
  420ab8:	mov    r13d,r10d
  420abb:	jbe    0x420b04
  420abd:	lea    r12,[rip+0x31620]        # 0x4520e4
  420ac4:	lea    rbp,[rip+0x31613]        # 0x4520de
  420acb:	mov    edx,0x2
  420ad0:	movzx  r11d,BYTE PTR [r12+rdx*1]
  420ad5:	movzx  r14d,BYTE PTR [rbp+rdx*1+0x0]
  420adb:	mov    ecx,r11d
  420ade:	not    r11d
  420ae1:	and    r11d,r10d
  420ae4:	cmp    r11d,r14d
  420ae7:	je     0x420b63
  420ae9:	add    rdx,0x1
  420aed:	cmp    rdx,0x7
  420af1:	jne    0x420ad0
  420af3:	mov    ebx,0x2a
  420af8:	call   QWORD PTR [rip+0x43c86]        # 0x464784
  420afe:	mov    DWORD PTR [rax],ebx
  420b00:	xor    eax,eax
  420b02:	jmp    0x420aa0
  420b04:	sub    r8,0x1
  420b08:	add    rsi,0x1
  420b0c:	test   rdi,rdi
  420b0f:	je     0x420b47
  420b11:	mov    rcx,r10
  420b14:	mov    BYTE PTR [rax+0x3],r10b
  420b18:	movzx  edx,ch
  420b1b:	mov    BYTE PTR [rax+0x2],dl
  420b1e:	mov    edx,r10d
  420b21:	shr    edx,0x10
  420b24:	mov    BYTE PTR [rax+0x1],dl
  420b27:	xor    edx,edx
  420b29:	shr    r10d,0x18
  420b2d:	sub    rbx,0x4
  420b31:	test   r8,r8
  420b34:	mov    BYTE PTR [rax+rdx*1],r10b
  420b38:	je     0x420a90
  420b3e:	add    rax,0x4
  420b42:	jmp    0x420a35
  420b47:	mov    rcx,r10
  420b4a:	mov    BYTE PTR [rax],r10b
  420b4d:	movzx  edx,ch
  420b50:	mov    BYTE PTR [rax+0x1],dl
  420b53:	mov    edx,r10d
  420b56:	shr    edx,0x10
  420b59:	mov    BYTE PTR [rax+0x2],dl
  420b5c:	mov    edx,0x3
  420b61:	jmp    0x420b29
  420b63:	cmp    r8,rdx
  420b66:	jae    0x420b6f
  420b68:	mov    ebx,0x16
  420b6d:	jmp    0x420af8
  420b6f:	and    ecx,r13d
  420b72:	lea    r11,[rsi+0x1]
  420b76:	add    rsi,rdx
  420b79:	movzx  r10d,cl
  420b7d:	jmp    0x420b8f
  420b7f:	nop
  420b80:	shl    r10d,0x6
  420b84:	and    ecx,0x3f
  420b87:	add    r10d,ecx
  420b8a:	cmp    r11,rsi
  420b8d:	je     0x420ba8
  420b8f:	add    r11,0x1
  420b93:	movzx  ecx,BYTE PTR [r11-0x1]
  420b98:	mov    ebp,ecx
  420b9a:	and    ebp,0xffffffc0
  420b9d:	cmp    bpl,0x80
  420ba1:	je     0x420b80
  420ba3:	jmp    0x420af3
  420ba8:	lea    ecx,[r10-0x80]
  420bac:	cmp    ecx,0x7fffff7f
  420bb2:	ja     0x420af3
  420bb8:	cmp    r10d,0x7ff
  420bbf:	ja     0x420bcb
  420bc1:	cmp    rdx,0x2
  420bc5:	ja     0x420af3
  420bcb:	cmp    r10d,0xffff
  420bd2:	ja     0x420bde
  420bd4:	cmp    rdx,0x3
  420bd8:	ja     0x420af3
  420bde:	cmp    r10d,0x1fffff
  420be5:	ja     0x420bf1
  420be7:	cmp    rdx,0x4
  420beb:	ja     0x420af3
  420bf1:	cmp    r10d,0x3ffffff
  420bf8:	ja     0x420c04
  420bfa:	cmp    rdx,0x5
  420bfe:	ja     0x420af3
  420c04:	lea    ecx,[r10-0xd800]
  420c0b:	cmp    ecx,0x7ff
  420c11:	jbe    0x420af3
  420c17:	sub    r8,rdx
  420c1a:	jmp    0x420b0c
  420c1f:	nop
  420c20:	push   r14
  420c22:	push   r13
  420c24:	push   r12
  420c26:	push   rbp
  420c27:	push   rdi
  420c28:	push   rsi
  420c29:	push   rbx
  420c2a:	sub    rsp,0x30
  420c2e:	mov    rbx,QWORD PTR [r9+0x8]
  420c32:	mov    rsi,rcx
  420c35:	mov    rcx,QWORD PTR [r9+0x10]
  420c39:	mov    rdi,rdx
  420c3c:	mov    rdx,rcx
  420c3f:	add    rdx,QWORD PTR [r9]
  420c42:	sub    rbx,rcx
  420c45:	test   r8,r8
  420c48:	jne    0x420c70
  420c4a:	mov    rax,QWORD PTR [r9+0x8]
  420c4e:	sub    rax,rbx
  420c51:	mov    QWORD PTR [r9+0x10],rax
  420c55:	mov    eax,0x1
  420c5a:	add    rsp,0x30
  420c5e:	pop    rbx
  420c5f:	pop    rsi
  420c60:	pop    rdi
  420c61:	pop    rbp
  420c62:	pop    r12
  420c64:	pop    r13
  420c66:	pop    r14
  420c68:	ret    
  420c69:	nop    DWORD PTR [rax+0x0]
  420c70:	movzx  eax,BYTE PTR [rdi]
  420c73:	cmp    eax,0x7f
  420c76:	mov    r13d,eax
  420c79:	jbe    0x420cd0
  420c7b:	lea    r12,[rip+0x31462]        # 0x4520e4
  420c82:	lea    rbp,[rip+0x31455]        # 0x4520de
  420c89:	mov    r11d,0x2
  420c8f:	movzx  r10d,BYTE PTR [r12+r11*1]
  420c94:	movzx  r14d,BYTE PTR [rbp+r11*1+0x0]
  420c9a:	mov    ecx,r10d
  420c9d:	not    r10d
  420ca0:	and    r10d,eax
  420ca3:	cmp    r10d,r14d
  420ca6:	je     0x420d70
  420cac:	add    r11,0x1
  420cb0:	cmp    r11,0x7
  420cb4:	jne    0x420c8f
  420cb6:	mov    ebx,0x2a
  420cbb:	call   QWORD PTR [rip+0x43ac3]        # 0x464784
  420cc1:	mov    DWORD PTR [rax],ebx
  420cc3:	xor    eax,eax
  420cc5:	jmp    0x420c5a
  420cc7:	nop    WORD PTR [rax+rax*1+0x0]
  420cd0:	lea    r10,[r8-0x1]
  420cd4:	lea    rbp,[rdi+0x1]
  420cd8:	cmp    eax,0xfffe
  420cdd:	ja     0x420d20
  420cdf:	cmp    rbx,0x1
  420ce3:	jbe    0x420d2a
  420ce5:	xor    ecx,ecx
  420ce7:	test   rsi,rsi
  420cea:	setne  cl
  420ced:	mov    BYTE PTR [rdx+rcx*1],al
  420cf0:	sete   cl
  420cf3:	movzx  eax,ah
  420cf6:	movzx  ecx,cl
  420cf9:	add    rdx,0x2
  420cfd:	sub    rbx,0x2
  420d01:	mov    BYTE PTR [rdx+rcx*1-0x2],al
  420d05:	test   r10,r10
  420d08:	je     0x420c4a
  420d0e:	mov    r8,r10
  420d11:	mov    rdi,rbp
  420d14:	jmp    0x420c45
  420d19:	nop    DWORD PTR [rax+0x0]
  420d20:	cmp    rbx,0x3
  420d24:	ja     0x420e32
  420d2a:	mov    rax,QWORD PTR [r9+0x8]
  420d2e:	mov    rcx,QWORD PTR [r9]
  420d31:	add    rbx,0x100
  420d38:	mov    QWORD PTR [rsp+0x28],r8
  420d3d:	mov    QWORD PTR [rsp+0x20],r9
  420d42:	lea    rdx,[rax+0x100]
  420d49:	mov    QWORD PTR [r9+0x8],rdx
  420d4d:	call   0x43bb70
  420d52:	mov    r9,QWORD PTR [rsp+0x20]
  420d57:	mov    r8,QWORD PTR [rsp+0x28]
  420d5c:	mov    QWORD PTR [r9],rax
  420d5f:	sub    rax,rbx
  420d62:	add    rax,QWORD PTR [r9+0x8]
  420d66:	mov    rdx,rax
  420d69:	jmp    0x420c45
  420d6e:	xchg   ax,ax
  420d70:	cmp    r8,r11
  420d73:	jae    0x420d80
  420d75:	mov    ebx,0x16
  420d7a:	jmp    0x420cbb
  420d7f:	nop
  420d80:	and    ecx,r13d
  420d83:	lea    r10,[rdi+0x1]
  420d87:	lea    rbp,[rdi+r11*1]
  420d8b:	movzx  eax,cl
  420d8e:	xchg   ax,ax
  420d90:	add    r10,0x1
  420d94:	movzx  ecx,BYTE PTR [r10-0x1]
  420d99:	mov    r12d,ecx
  420d9c:	and    r12d,0xffffffc0
  420da0:	cmp    r12b,0x80
  420da4:	jne    0x420cb6
  420daa:	shl    eax,0x6
  420dad:	and    ecx,0x3f
  420db0:	add    eax,ecx
  420db2:	cmp    r10,rbp
  420db5:	jne    0x420d90
  420db7:	lea    ecx,[rax-0x80]
  420dba:	cmp    ecx,0x7fffff7f
  420dc0:	ja     0x420cb6
  420dc6:	cmp    eax,0x7ff
  420dcb:	ja     0x420dd7
  420dcd:	cmp    r11,0x2
  420dd1:	ja     0x420cb6
  420dd7:	cmp    eax,0xffff
  420ddc:	ja     0x420de8
  420dde:	cmp    r11,0x3
  420de2:	ja     0x420cb6
  420de8:	cmp    eax,0x1fffff
  420ded:	ja     0x420df9
  420def:	cmp    r11,0x4
  420df3:	ja     0x420cb6
  420df9:	cmp    eax,0x3ffffff
  420dfe:	ja     0x420e0a
  420e00:	cmp    r11,0x5
  420e04:	ja     0x420cb6
  420e0a:	lea    ecx,[rax-0xd800]
  420e10:	cmp    ecx,0x7ff
  420e16:	jbe    0x420cb6
  420e1c:	mov    r10,r8
  420e1f:	sub    r10,r11
  420e22:	cmp    eax,0x10ffff
  420e27:	ja     0x420cb6
  420e2d:	jmp    0x420cd8
  420e32:	lea    ecx,[rax-0x10000]
  420e38:	and    eax,0x3ff
  420e3d:	add    eax,0xdc00
  420e42:	shr    ecx,0xa
  420e45:	add    ecx,0xd800
  420e4b:	test   rsi,rsi
  420e4e:	je     0x420e74
  420e50:	mov    BYTE PTR [rdx+0x1],cl
  420e53:	movzx  ecx,ch
  420e56:	mov    BYTE PTR [rdx+0x3],al
  420e59:	mov    BYTE PTR [rdx],cl
  420e5b:	mov    ecx,0x2
  420e60:	movzx  eax,ah
  420e63:	add    rdx,0x4
  420e67:	sub    rbx,0x4
  420e6b:	mov    BYTE PTR [rdx+rcx*1-0x4],al
  420e6f:	jmp    0x420d05
  420e74:	mov    BYTE PTR [rdx],cl
  420e76:	movzx  ecx,ch
  420e79:	mov    BYTE PTR [rdx+0x2],al
  420e7c:	mov    BYTE PTR [rdx+0x1],cl
  420e7f:	mov    ecx,0x3
  420e84:	jmp    0x420e60
  420e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420e90:	push   r13
  420e92:	push   r12
  420e94:	push   rbp
  420e95:	push   rdi
  420e96:	push   rsi
  420e97:	push   rbx
  420e98:	sub    rsp,0x48
  420e9c:	mov    rax,QWORD PTR [r9+0x10]
  420ea0:	mov    rbx,QWORD PTR [r9+0x8]
  420ea4:	mov    rdi,rcx
  420ea7:	lea    rbp,[rsp+0x30]
  420eac:	mov    rsi,rdx
  420eaf:	mov    rcx,rax
  420eb2:	add    rcx,QWORD PTR [r9]
  420eb5:	sub    rbx,rax
  420eb8:	cmp    r8,0x3
  420ebc:	ja     0x420ee0
  420ebe:	test   r8,r8
  420ec1:	jne    0x420f32
  420ec3:	mov    rax,QWORD PTR [r9+0x8]
  420ec7:	sub    rax,rbx
  420eca:	mov    QWORD PTR [r9+0x10],rax
  420ece:	mov    eax,0x1
  420ed3:	add    rsp,0x48
  420ed7:	pop    rbx
  420ed8:	pop    rsi
  420ed9:	pop    rdi
  420eda:	pop    rbp
  420edb:	pop    r12
  420edd:	pop    r13
  420edf:	ret    
  420ee0:	test   rdi,rdi
  420ee3:	je     0x420fe0
  420ee9:	movzx  edx,BYTE PTR [rsi+0x1]
  420eed:	movzx  eax,BYTE PTR [rsi]
  420ef0:	shl    edx,0x10
  420ef3:	shl    eax,0x18
  420ef6:	add    edx,eax
  420ef8:	movzx  eax,BYTE PTR [rsi+0x2]
  420efc:	shl    eax,0x8
  420eff:	add    eax,edx
  420f01:	mov    edx,0x3
  420f06:	movzx  edx,BYTE PTR [rsi+rdx*1]
  420f0a:	add    eax,edx
  420f0c:	lea    edx,[rax-0xd800]
  420f12:	cmp    edx,0x7ff
  420f18:	jbe    0x420f21
  420f1a:	cmp    eax,0x7ffffffe
  420f1f:	jbe    0x420f40
  420f21:	mov    ebx,0x2a
  420f26:	call   QWORD PTR [rip+0x43858]        # 0x464784
  420f2c:	mov    DWORD PTR [rax],ebx
  420f2e:	xor    eax,eax
  420f30:	jmp    0x420ed3
  420f32:	mov    ebx,0x16
  420f37:	jmp    0x420f26
  420f39:	nop    DWORD PTR [rax+0x0]
  420f40:	cmp    eax,0x7f
  420f43:	jbe    0x421001
  420f49:	lea    rdx,[rbp+0x6]
  420f4d:	mov    r11d,0x1
  420f53:	lea    r13,[rip+0x31196]        # 0x4520f0
  420f5a:	jmp    0x420f63
  420f5c:	nop    DWORD PTR [rax+0x0]
  420f60:	mov    r11,r10
  420f63:	mov    r10d,eax
  420f66:	shr    eax,0x6
  420f69:	sub    rdx,0x1
  420f6d:	and    r10d,0x3f
  420f71:	or     r10d,0xffffff80
  420f75:	cmp    eax,0x3e
  420f78:	mov    BYTE PTR [rdx],r10b
  420f7b:	lea    r10,[r11+0x1]
  420f7f:	ja     0x420f60
  420f81:	movzx  r12d,BYTE PTR [r13+r11*1+0x1]
  420f87:	test   r12d,eax
  420f8a:	jne    0x420f60
  420f8c:	lea    r12,[rip+0x31158]        # 0x4520eb
  420f93:	or     al,BYTE PTR [r12+r11*1]
  420f97:	cmp    rbx,r10
  420f9a:	mov    r11d,eax
  420f9d:	mov    BYTE PTR [rdx-0x1],al
  420fa0:	jb     0x421017
  420fa2:	lea    rax,[rbp+0x6]
  420fa6:	sub    rdx,0x1
  420faa:	cmp    rdx,rax
  420fad:	jae    0x420fca
  420faf:	lea    rax,[rbp+0x6]
  420fb3:	jmp    0x420fb9
  420fb5:	movzx  r11d,BYTE PTR [rdx]
  420fb9:	add    rdx,0x1
  420fbd:	add    rcx,0x1
  420fc1:	mov    BYTE PTR [rcx-0x1],r11b
  420fc5:	cmp    rdx,rax
  420fc8:	jb     0x420fb5
  420fca:	sub    rbx,r10
  420fcd:	sub    r8,0x4
  420fd1:	je     0x420ec3
  420fd7:	add    rsi,0x4
  420fdb:	jmp    0x420eb8
  420fe0:	movzx  edx,BYTE PTR [rsi+0x3]
  420fe4:	movzx  eax,BYTE PTR [rsi+0x2]
  420fe8:	shl    edx,0x18
  420feb:	shl    eax,0x10
  420fee:	lea    edx,[rax+rdx*1]
  420ff1:	movzx  eax,BYTE PTR [rsi+0x1]
  420ff5:	shl    eax,0x8
  420ff8:	add    eax,edx
  420ffa:	xor    edx,edx
  420ffc:	jmp    0x420f06
  421001:	test   rbx,rbx
  421004:	mov    r11d,eax
  421007:	mov    BYTE PTR [rsp+0x35],al
  42100b:	lea    rdx,[rbp+0x5]
  42100f:	mov    r10d,0x1
  421015:	jne    0x420faf
  421017:	mov    rax,QWORD PTR [r9+0x8]
  42101b:	mov    rcx,QWORD PTR [r9]
  42101e:	add    rbx,0x100
  421025:	mov    QWORD PTR [rsp+0x28],r8
  42102a:	mov    QWORD PTR [rsp+0x20],r9
  42102f:	lea    rdx,[rax+0x100]
  421036:	mov    QWORD PTR [r9+0x8],rdx
  42103a:	call   0x43bb70
  42103f:	mov    r9,QWORD PTR [rsp+0x20]
  421044:	mov    r8,QWORD PTR [rsp+0x28]
  421049:	mov    QWORD PTR [r9],rax
  42104c:	sub    rax,rbx
  42104f:	add    rax,QWORD PTR [r9+0x8]
  421053:	mov    rcx,rax
  421056:	jmp    0x420eb8
  42105b:	nop    DWORD PTR [rax+rax*1+0x0]
  421060:	push   r14
  421062:	push   r13
  421064:	push   r12
  421066:	push   rbp
  421067:	push   rdi
  421068:	push   rsi
  421069:	push   rbx
  42106a:	sub    rsp,0x40
  42106e:	mov    rax,QWORD PTR [r9+0x10]
  421072:	mov    rbx,QWORD PTR [r9+0x8]
  421076:	mov    rdi,rcx
  421079:	lea    rbp,[rsp+0x30]
  42107e:	mov    rsi,rdx
  421081:	mov    rcx,rax
  421084:	add    rcx,QWORD PTR [r9]
  421087:	sub    rbx,rax
  42108a:	cmp    r8,0x1
  42108e:	jbe    0x4210e0
  421090:	test   rdi,rdi
  421093:	sete   dl
  421096:	setne  al
  421099:	movzx  edx,dl
  42109c:	movzx  r10d,al
  4210a0:	movzx  edx,BYTE PTR [rsi+rdx*1]
  4210a4:	movzx  r10d,BYTE PTR [rsi+r10*1]
  4210a9:	shl    edx,0x8
  4210ac:	add    edx,r10d
  4210af:	lea    r10d,[rdx-0xdc00]
  4210b6:	cmp    r10d,0x3ff
  4210bd:	ja     0x421104
  4210bf:	mov    ebx,0x2a
  4210c4:	call   QWORD PTR [rip+0x436ba]        # 0x464784
  4210ca:	mov    DWORD PTR [rax],ebx
  4210cc:	xor    eax,eax
  4210ce:	add    rsp,0x40
  4210d2:	pop    rbx
  4210d3:	pop    rsi
  4210d4:	pop    rdi
  4210d5:	pop    rbp
  4210d6:	pop    r12
  4210d8:	pop    r13
  4210da:	pop    r14
  4210dc:	ret    
  4210dd:	nop    DWORD PTR [rax]
  4210e0:	test   r8,r8
  4210e3:	jne    0x42111a
  4210e5:	mov    rax,QWORD PTR [r9+0x8]
  4210e9:	sub    rax,rbx
  4210ec:	mov    QWORD PTR [r9+0x10],rax
  4210f0:	mov    eax,0x1
  4210f5:	add    rsp,0x40
  4210f9:	pop    rbx
  4210fa:	pop    rsi
  4210fb:	pop    rdi
  4210fc:	pop    rbp
  4210fd:	pop    r12
  4210ff:	pop    r13
  421101:	pop    r14
  421103:	ret    
  421104:	lea    r10d,[rdx-0xd800]
  42110b:	cmp    r10d,0x3ff
  421112:	ja     0x421121
  421114:	cmp    r8,0x3
  421118:	ja     0x421190
  42111a:	mov    ebx,0x16
  42111f:	jmp    0x4210c4
  421121:	cmp    edx,0x7f
  421124:	ja     0x4211cb
  42112a:	test   rbx,rbx
  42112d:	mov    eax,edx
  42112f:	mov    BYTE PTR [rsp+0x35],dl
  421133:	lea    r10,[rbp+0x5]
  421137:	mov    r11d,0x1
  42113d:	jne    0x421233
  421143:	mov    rax,QWORD PTR [r9+0x8]
  421147:	mov    rcx,QWORD PTR [r9]
  42114a:	add    rbx,0x100
  421151:	mov    QWORD PTR [rsp+0x28],r8
  421156:	mov    QWORD PTR [rsp+0x20],r9
  42115b:	lea    rdx,[rax+0x100]
  421162:	mov    QWORD PTR [r9+0x8],rdx
  421166:	call   0x43bb70
  42116b:	mov    r9,QWORD PTR [rsp+0x20]
  421170:	mov    r8,QWORD PTR [rsp+0x28]
  421175:	mov    QWORD PTR [r9],rax
  421178:	sub    rax,rbx
  42117b:	add    rax,QWORD PTR [r9+0x8]
  42117f:	mov    rcx,rax
  421182:	jmp    0x42108a
  421187:	nop    WORD PTR [rax+rax*1+0x0]
  421190:	test   al,al
  421192:	je     0x42127f
  421198:	movzx  eax,BYTE PTR [rsi+0x2]
  42119c:	mov    r10d,0x3
  4211a2:	shl    eax,0x8
  4211a5:	movzx  r10d,BYTE PTR [rsi+r10*1]
  4211aa:	add    eax,r10d
  4211ad:	lea    r10d,[rax-0xdc00]
  4211b4:	cmp    r10d,0x3ff
  4211bb:	ja     0x4210bf
  4211c1:	shl    edx,0xa
  4211c4:	lea    edx,[rax+rdx*1-0x35fdc00]
  4211cb:	mov    eax,edx
  4211cd:	lea    r10,[rbp+0x6]
  4211d1:	mov    r12d,0x1
  4211d7:	lea    r13,[rip+0x30f12]        # 0x4520f0
  4211de:	jmp    0x4211e3
  4211e0:	mov    r12,r11
  4211e3:	mov    r11d,eax
  4211e6:	shr    eax,0x6
  4211e9:	sub    r10,0x1
  4211ed:	and    r11d,0x3f
  4211f1:	or     r11d,0xffffff80
  4211f5:	cmp    eax,0x3e
  4211f8:	mov    BYTE PTR [r10],r11b
  4211fb:	lea    r11,[r12+0x1]
  421200:	ja     0x4211e0
  421202:	movzx  r14d,BYTE PTR [r13+r12*1+0x1]
  421208:	test   r14d,eax
  42120b:	jne    0x4211e0
  42120d:	lea    r13,[rip+0x30ed7]        # 0x4520eb
  421214:	or     al,BYTE PTR [r13+r12*1+0x0]
  421219:	cmp    rbx,r11
  42121c:	mov    BYTE PTR [r10-0x1],al
  421220:	jb     0x421143
  421226:	lea    r12,[rbp+0x6]
  42122a:	sub    r10,0x1
  42122e:	cmp    r10,r12
  421231:	jae    0x421254
  421233:	lea    r12,[rbp+0x6]
  421237:	jmp    0x421244
  421239:	nop    DWORD PTR [rax+0x0]
  421240:	movzx  eax,BYTE PTR [r10]
  421244:	add    r10,0x1
  421248:	add    rcx,0x1
  42124c:	mov    BYTE PTR [rcx-0x1],al
  42124f:	cmp    r10,r12
  421252:	jb     0x421240
  421254:	sub    rbx,r11
  421257:	cmp    edx,0xffff
  42125d:	jbe    0x421275
  42125f:	add    rsi,0x4
  421263:	sub    r8,0x4
  421267:	test   r8,r8
  42126a:	je     0x4210e5
  421270:	jmp    0x42108a
  421275:	add    rsi,0x2
  421279:	sub    r8,0x2
  42127d:	jmp    0x421267
  42127f:	movzx  eax,BYTE PTR [rsi+0x3]
  421283:	mov    r10d,0x2
  421289:	shl    eax,0x8
  42128c:	jmp    0x4211a5
  421291:	nop    DWORD PTR [rax+rax*1+0x0]
  421296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4212a0:	push   r12
  4212a2:	push   rbp
  4212a3:	push   rdi
  4212a4:	push   rsi
  4212a5:	push   rbx
  4212a6:	sub    rsp,0x40
  4212aa:	mov    rdx,QWORD PTR [rcx+0x488]
  4212b1:	mov    r8,QWORD PTR [rcx+0x448]
  4212b8:	mov    rbx,rcx
  4212bb:	mov    rbp,QWORD PTR [rcx+0x450]
  4212c2:	movzx  r12d,BYTE PTR [rcx+0x492]
  4212ca:	cmp    rdx,0x1f
  4212ce:	jbe    0x421470
  4212d4:	lea    rdx,[rip+0x304c8]        # 0x4517a3
  4212db:	lea    rax,[rip+0x304e2]        # 0x4517c4
  4212e2:	test   r12b,r12b
  4212e5:	cmove  rax,rdx
  4212e9:	lea    rdi,[rip+0x304c5]        # 0x4517b5
  4212f0:	lea    rsi,[rsp+0x20]
  4212f5:	test   r8,r8
  4212f8:	mov    rdx,rbx
  4212fb:	cmove  r8,rdi
  4212ff:	mov    r9,rdi
  421302:	test   rbp,rbp
  421305:	mov    rcx,rsi
  421308:	cmove  rbp,rax
  42130c:	call   0x420750
  421311:	mov    rax,QWORD PTR [rsp+0x20]
  421316:	mov    r9,rdi
  421319:	mov    r8,rdi
  42131c:	mov    rdx,rbx
  42131f:	mov    rcx,rsi
  421322:	mov    QWORD PTR [rbx+0x1f0],rax
  421329:	mov    rax,QWORD PTR [rsp+0x28]
  42132e:	mov    QWORD PTR [rbx+0x1f8],rax
  421335:	mov    rax,QWORD PTR [rsp+0x30]
  42133a:	mov    QWORD PTR [rbx+0x200],rax
  421341:	mov    rax,QWORD PTR [rbx+0x478]
  421348:	mov    DWORD PTR [rbx+0x200],eax
  42134e:	call   0x420750
  421353:	mov    rax,QWORD PTR [rsp+0x20]
  421358:	test   r12b,r12b
  42135b:	mov    QWORD PTR [rbx+0x208],rax
  421362:	mov    rax,QWORD PTR [rsp+0x28]
  421367:	mov    QWORD PTR [rbx+0x210],rax
  42136e:	mov    rax,QWORD PTR [rsp+0x30]
  421373:	mov    QWORD PTR [rbx+0x218],rax
  42137a:	mov    rax,QWORD PTR [rbx+0x478]
  421381:	mov    DWORD PTR [rbx+0x218],eax
  421387:	je     0x4214a0
  42138d:	lea    r8,[rip+0x30427]        # 0x4517bb
  421394:	mov    r9,rdi
  421397:	mov    rdx,rbx
  42139a:	mov    rcx,rsi
  42139d:	call   0x420750
  4213a2:	mov    rax,QWORD PTR [rsp+0x20]
  4213a7:	lea    r8,[rip+0x30416]        # 0x4517c4
  4213ae:	mov    QWORD PTR [rbx+0x220],rax
  4213b5:	mov    rax,QWORD PTR [rsp+0x28]
  4213ba:	mov    QWORD PTR [rbx+0x228],rax
  4213c1:	mov    rax,QWORD PTR [rsp+0x30]
  4213c6:	mov    QWORD PTR [rbx+0x230],rax
  4213cd:	mov    DWORD PTR [rbx+0x230],0x10
  4213d7:	lea    r9,[rip+0x303d7]        # 0x4517b5
  4213de:	mov    rdx,rbx
  4213e1:	mov    rcx,rsi
  4213e4:	call   0x420750
  4213e9:	mov    rax,QWORD PTR [rsp+0x20]
  4213ee:	lea    r9,[rip+0x303c0]        # 0x4517b5
  4213f5:	mov    r8,rbp
  4213f8:	mov    rdx,rbx
  4213fb:	mov    rcx,rsi
  4213fe:	mov    QWORD PTR [rbx+0x238],rax
  421405:	mov    rax,QWORD PTR [rsp+0x28]
  42140a:	mov    QWORD PTR [rbx+0x240],rax
  421411:	mov    rax,QWORD PTR [rsp+0x30]
  421416:	mov    QWORD PTR [rbx+0x248],rax
  42141d:	mov    DWORD PTR [rbx+0x248],0x20
  421427:	call   0x420750
  42142c:	mov    rax,QWORD PTR [rsp+0x20]
  421431:	mov    QWORD PTR [rbx+0x250],rax
  421438:	mov    rax,QWORD PTR [rsp+0x28]
  42143d:	mov    QWORD PTR [rbx+0x258],rax
  421444:	mov    rax,QWORD PTR [rsp+0x30]
  421449:	mov    QWORD PTR [rbx+0x260],rax
  421450:	mov    rax,QWORD PTR [rbx+0x488]
  421457:	mov    DWORD PTR [rbx+0x260],eax
  42145d:	add    rsp,0x40
  421461:	pop    rbx
  421462:	pop    rsi
  421463:	pop    rdi
  421464:	pop    rbp
  421465:	pop    r12
  421467:	ret    
  421468:	nop    DWORD PTR [rax+rax*1+0x0]
  421470:	cmp    rdx,0xf
  421474:	lea    rax,[rip+0x3033a]        # 0x4517b5
  42147b:	jbe    0x4212e9
  421481:	lea    rdx,[rip+0x30324]        # 0x4517ac
  421488:	lea    rax,[rip+0x3032c]        # 0x4517bb
  42148f:	test   r12b,r12b
  421492:	cmove  rax,rdx
  421496:	jmp    0x4212e9
  42149b:	nop    DWORD PTR [rax+rax*1+0x0]
  4214a0:	lea    r8,[rip+0x30305]        # 0x4517ac
  4214a7:	mov    r9,rdi
  4214aa:	mov    rdx,rbx
  4214ad:	mov    rcx,rsi
  4214b0:	call   0x420750
  4214b5:	mov    rax,QWORD PTR [rsp+0x20]
  4214ba:	lea    r8,[rip+0x302e2]        # 0x4517a3
  4214c1:	mov    QWORD PTR [rbx+0x220],rax
  4214c8:	mov    rax,QWORD PTR [rsp+0x28]
  4214cd:	mov    QWORD PTR [rbx+0x228],rax
  4214d4:	mov    rax,QWORD PTR [rsp+0x30]
  4214d9:	mov    QWORD PTR [rbx+0x230],rax
  4214e0:	mov    DWORD PTR [rbx+0x230],0x10
  4214ea:	jmp    0x4213d7
  4214ef:	nop
  4214f0:	push   rsi
  4214f1:	push   rbx
  4214f2:	sub    rsp,0x28
  4214f6:	lea    rsi,[rip+0xfffffffffffff063]        # 0x420560
  4214fd:	cmp    QWORD PTR [rcx+0x1f0],rsi
  421504:	mov    rbx,rcx
  421507:	je     0x421550
  421509:	cmp    QWORD PTR [rbx+0x208],rsi
  421510:	je     0x421560
  421512:	cmp    QWORD PTR [rbx+0x220],rsi
  421519:	je     0x421570
  42151b:	cmp    QWORD PTR [rbx+0x238],rsi
  421522:	je     0x421580
  421524:	cmp    QWORD PTR [rbx+0x250],rsi
  42152b:	je     0x421534
  42152d:	add    rsp,0x28
  421531:	pop    rbx
  421532:	pop    rsi
  421533:	ret    
  421534:	mov    rcx,QWORD PTR [rbx+0x258]
  42153b:	add    rsp,0x28
  42153f:	pop    rbx
  421540:	pop    rsi
  421541:	jmp    0x427028
  421546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421550:	mov    rcx,QWORD PTR [rcx+0x1f8]
  421557:	call   0x427028
  42155c:	jmp    0x421509
  42155e:	xchg   ax,ax
  421560:	mov    rcx,QWORD PTR [rbx+0x210]
  421567:	call   0x427028
  42156c:	jmp    0x421512
  42156e:	xchg   ax,ax
  421570:	mov    rcx,QWORD PTR [rbx+0x228]
  421577:	call   0x427028
  42157c:	jmp    0x42151b
  42157e:	xchg   ax,ax
  421580:	mov    rcx,QWORD PTR [rbx+0x240]
  421587:	call   0x427028
  42158c:	jmp    0x421524
  42158e:	xchg   ax,ax
  421590:	push   rsi
  421591:	push   rbx
  421592:	sub    rsp,0x58
  421596:	cmp    edx,0x7e
  421599:	mov    rsi,rcx
  42159c:	mov    ebx,edx
  42159e:	ja     0x421610
  4215a0:	mov    ecx,0x1
  4215a5:	mov    BYTE PTR [rsp+0x2f],dl
  4215a9:	mov    QWORD PTR [rsp+0x38],0x1
  4215b2:	call   0x43baf0
  4215b7:	mov    QWORD PTR [rsp+0x40],0x0
  4215c0:	mov    QWORD PTR [rsp+0x30],rax
  4215c5:	lea    rdx,[rsp+0x2f]
  4215ca:	mov    rcx,QWORD PTR [rsi+0x1f8]
  4215d1:	lea    r9,[rsp+0x30]
  4215d6:	mov    r8d,0x1
  4215dc:	call   QWORD PTR [rsi+0x1f0]
  4215e2:	test   al,al
  4215e4:	je     0x421630
  4215e6:	cmp    QWORD PTR [rsp+0x40],0x1
  4215ec:	je     0x421650
  4215ee:	lea    r8,[rip+0x30243]        # 0x451838
  4215f5:	mov    r9d,ebx
  4215f8:	mov    edx,0x4
  4215fd:	mov    rcx,rsi
  421600:	call   0x414b60
  421605:	xor    eax,eax
  421607:	add    rsp,0x58
  42160b:	pop    rbx
  42160c:	pop    rsi
  42160d:	ret    
  42160e:	xchg   ax,ax
  421610:	lea    r8,[rip+0x301b9]        # 0x4517d0
  421617:	mov    r9d,edx
  42161a:	mov    edx,0x4
  42161f:	call   0x414b60
  421624:	xor    eax,eax
  421626:	add    rsp,0x58
  42162a:	pop    rbx
  42162b:	pop    rsi
  42162c:	ret    
  42162d:	nop    DWORD PTR [rax]
  421630:	lea    r8,[rip+0x301d9]        # 0x451810
  421637:	mov    edx,0x4
  42163c:	mov    rcx,rsi
  42163f:	call   0x414d60
  421644:	xor    eax,eax
  421646:	add    rsp,0x58
  42164a:	pop    rbx
  42164b:	pop    rsi
  42164c:	ret    
  42164d:	nop    DWORD PTR [rax]
  421650:	mov    rcx,QWORD PTR [rsp+0x30]
  421655:	movzx  ebx,BYTE PTR [rcx]
  421658:	call   0x4494c8
  42165d:	mov    eax,ebx
  42165f:	add    rsp,0x58
  421663:	pop    rbx
  421664:	pop    rsi
  421665:	ret    
  421666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421670:	push   r14
  421672:	push   r13
  421674:	push   r12
  421676:	push   rbp
  421677:	push   rdi
  421678:	push   rsi
  421679:	push   rbx
  42167a:	sub    rsp,0x30
  42167e:	cmp    BYTE PTR [rcx+0x418],0x0
  421685:	mov    rbp,QWORD PTR [rdx]
  421688:	mov    r12,rcx
  42168b:	mov    r14,rdx
  42168e:	mov    rdi,r8
  421691:	mov    r13d,r9d
  421694:	jne    0x4216a3
  421696:	cmp    BYTE PTR [rcx+0x435],0x0
  42169d:	je     0x421890
  4216a3:	test   r13d,r13d
  4216a6:	jne    0x4216b7
  4216a8:	cmp    BYTE PTR [r12+0x429],0x0
  4216b1:	jne    0x421840
  4216b7:	movzx  eax,BYTE PTR [rbp-0x1]
  4216bb:	mov    r10d,0x4
  4216c1:	cmp    al,0x75
  4216c3:	je     0x4216e6
  4216c5:	cmp    al,0x55
  4216c7:	mov    r10b,0x8
  4216ca:	je     0x4216e6
  4216cc:	lea    r8,[rip+0x30215]        # 0x4518e8
  4216d3:	mov    edx,0x4
  4216d8:	mov    rcx,r12
  4216db:	call   0x414b60
  4216e0:	mov    r10d,0x4
  4216e6:	mov    rcx,QWORD PTR [rip+0x39743]        # 0x45ae30
  4216ed:	mov    r8,QWORD PTR [rip+0x3970c]        # 0x45ae00
  4216f4:	mov    rsi,rbp
  4216f7:	xor    ebx,ebx
  4216f9:	nop    DWORD PTR [rax+0x0]
  421700:	movzx  edx,BYTE PTR [rsi]
  421703:	test   BYTE PTR [rcx+rdx*2+0x1],0x1
  421708:	mov    rax,rdx
  42170b:	je     0x4217c0
  421711:	cdqe   
  421713:	shl    ebx,0x4
  421716:	add    rsi,0x1
  42171a:	movzx  eax,BYTE PTR [r8+rax*1]
  42171f:	add    ebx,eax
  421721:	sub    r10d,0x1
  421725:	setne  dl
  421728:	je     0x42172f
  42172a:	cmp    rsi,rdi
  42172d:	jb     0x421700
  42172f:	test   r13d,r13d
  421732:	setne  cl
  421735:	test   dl,dl
  421737:	je     0x421750
  421739:	xor    eax,eax
  42173b:	test   cl,cl
  42173d:	je     0x421750
  42173f:	add    rsp,0x30
  421743:	pop    rbx
  421744:	pop    rsi
  421745:	pop    rdi
  421746:	pop    rbp
  421747:	pop    r12
  421749:	pop    r13
  42174b:	pop    r14
  42174d:	ret    
  42174e:	xchg   ax,ax
  421750:	sub    rbp,0x2
  421754:	test   dl,dl
  421756:	mov    QWORD PTR [r14],rsi
  421759:	jne    0x421860
  42175f:	cmp    ebx,0x9f
  421765:	ja     0x4217d0
  421767:	cmp    BYTE PTR [r12+0x418],0x0
  421770:	jne    0x4217d0
  421772:	cmp    ebx,0x24
  421775:	je     0x4217d0
  421777:	mov    eax,ebx
  421779:	and    eax,0xffffffdf
  42177c:	cmp    eax,0x40
  42177f:	je     0x4217d0
  421781:	mov    r9d,esi
  421784:	lea    r8,[rip+0x301ad]        # 0x451938
  42178b:	mov    QWORD PTR [rsp+0x20],rbp
  421790:	sub    r9d,ebp
  421793:	mov    edx,0x3
  421798:	mov    rcx,r12
  42179b:	mov    ebx,0x1
  4217a0:	call   0x414b60
  4217a5:	mov    eax,ebx
  4217a7:	add    rsp,0x30
  4217ab:	pop    rbx
  4217ac:	pop    rsi
  4217ad:	pop    rdi
  4217ae:	pop    rbp
  4217af:	pop    r12
  4217b1:	pop    r13
  4217b3:	pop    r14
  4217b5:	ret    
  4217b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4217c0:	test   r10d,r10d
  4217c3:	setne  dl
  4217c6:	jmp    0x42172f
  4217cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4217d0:	test   ebx,ebx
  4217d2:	js     0x421781
  4217d4:	lea    eax,[rbx-0xd800]
  4217da:	cmp    eax,0x7ff
  4217df:	jbe    0x421781
  4217e1:	cmp    ebx,0x24
  4217e4:	jne    0x4219be
  4217ea:	test   cl,cl
  4217ec:	je     0x42195f
  4217f2:	cmp    BYTE PTR [r12+0x430],0x0
  4217fb:	je     0x42197b
  421801:	cmp    BYTE PTR [r12+0x432],0x0
  42180a:	je     0x421818
  42180c:	cmp    BYTE PTR [r12+0x12],0x0
  421812:	je     0x421a9a
  421818:	mov    rax,QWORD PTR [rsp+0x90]
  421820:	mov    ebx,0x24
  421825:	mov    DWORD PTR [rax],0x24
  42182b:	mov    BYTE PTR [rax+0x4],0x0
  42182f:	mov    eax,ebx
  421831:	jmp    0x4217a7
  421836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421840:	movzx  r9d,BYTE PTR [rbp-0x1]
  421845:	lea    r8,[rip+0x30064]        # 0x4518b0
  42184c:	mov    edx,0x6
  421851:	mov    rcx,r12
  421854:	call   0x414b90
  421859:	jmp    0x4216b7
  42185e:	xchg   ax,ax
  421860:	mov    r9d,esi
  421863:	lea    r8,[rip+0x3009e]        # 0x451908
  42186a:	mov    QWORD PTR [rsp+0x20],rbp
  42186f:	sub    r9d,ebp
  421872:	mov    edx,0x3
  421877:	mov    rcx,r12
  42187a:	mov    ebx,0x1
  42187f:	call   0x414b60
  421884:	mov    eax,ebx
  421886:	jmp    0x4217a7
  42188b:	nop    DWORD PTR [rax+rax*1+0x0]
  421890:	lea    r8,[rip+0x2ffe1]        # 0x451878
  421897:	xor    edx,edx
  421899:	call   0x414b60
  42189e:	jmp    0x4216b7
  4218a3:	lea    r8d,[r9+0x1]
  4218a7:	cmp    r8d,edx
  4218aa:	jne    0x421990
  4218b0:	cmp    BYTE PTR [r12+0x437],0x0
  4218b9:	je     0x4219ee
  4218bf:	cmp    BYTE PTR [r12+0x441],0x0
  4218c8:	jne    0x421a84
  4218ce:	cmp    BYTE PTR [r12+0x435],0x0
  4218d7:	jne    0x421b20
  4218dd:	cmp    BYTE PTR [r12+0x418],0x1
  4218e6:	movzx  eax,WORD PTR [rcx+rdx*8]
  4218ea:	sbb    r8d,r8d
  4218ed:	xor    edi,edi
  4218ef:	and    r8d,0x9
  4218f3:	add    r8d,0x4
  4218f7:	test   r8w,ax
  4218fb:	je     0x4219ca
  421901:	movzx  r14d,BYTE PTR [rcx+rdx*8+0x2]
  421907:	test   r14b,r14b
  42190a:	je     0x421a20
  421910:	mov    rcx,QWORD PTR [rsp+0x90]
  421918:	cmp    r14b,BYTE PTR [rcx+0x4]
  42191c:	jae    0x421a20
  421922:	mov    DWORD PTR [rcx+0x8],0x3
  421929:	mov    rax,QWORD PTR [rsp+0x90]
  421931:	test   di,di
  421934:	mov    BYTE PTR [rax+0x4],r14b
  421938:	je     0x42195f
  42193a:	cmp    r13d,0x1
  42193e:	jne    0x42195f
  421940:	mov    r9d,esi
  421943:	lea    r8,[rip+0x30056]        # 0x4519a0
  42194a:	mov    QWORD PTR [rsp+0x20],rbp
  42194f:	sub    r9d,ebp
  421952:	mov    edx,0x3
  421957:	mov    rcx,r12
  42195a:	call   0x414b60
  42195f:	test   ebx,ebx
  421961:	jne    0x4217a5
  421967:	mov    eax,0x1
  42196c:	add    rsp,0x30
  421970:	pop    rbx
  421971:	pop    rsi
  421972:	pop    rdi
  421973:	pop    rbp
  421974:	pop    r12
  421976:	pop    r13
  421978:	pop    r14
  42197a:	ret    
  42197b:	lea    rcx,[rip+0x3077e]        # 0x452100
  421982:	xor    r8d,r8d
  421985:	mov    edx,0x73c
  42198a:	nop    WORD PTR [rax+rax*1+0x0]
  421990:	lea    eax,[rdx+r8*1]
  421994:	mov    r9d,eax
  421997:	shr    r9d,0x1f
  42199b:	add    eax,r9d
  42199e:	sar    eax,1
  4219a0:	movsxd r10,eax
  4219a3:	mov    r9d,eax
  4219a6:	cmp    ebx,DWORD PTR [rcx+r10*8+0x4]
  4219ab:	ja     0x4218a3
  4219b1:	movsxd rdx,eax
  4219b4:	cmp    r8d,edx
  4219b7:	jne    0x421990
  4219b9:	jmp    0x4218b0
  4219be:	test   cl,cl
  4219c0:	je     0x42195f
  4219c2:	cmp    ebx,0x10ffff
  4219c8:	jbe    0x42197b
  4219ca:	mov    r9d,esi
  4219cd:	lea    r8,[rip+0x30014]        # 0x4519e8
  4219d4:	mov    QWORD PTR [rsp+0x20],rbp
  4219d9:	sub    r9d,ebp
  4219dc:	mov    edx,0x3
  4219e1:	mov    rcx,r12
  4219e4:	call   0x414b60
  4219e9:	jmp    0x42195f
  4219ee:	movzx  eax,WORD PTR [rcx+rdx*8]
  4219f2:	test   al,0xd
  4219f4:	je     0x4219ca
  4219f6:	cmp    BYTE PTR [r12+0x441],0x0
  4219ff:	jne    0x421a90
  421a05:	xor    edi,edi
  421a07:	cmp    BYTE PTR [r12+0x435],0x0
  421a10:	je     0x421901
  421a16:	mov    edi,eax
  421a18:	and    edi,0x2
  421a1b:	jmp    0x421901
  421a20:	test   ah,0x1
  421a23:	je     0x421abc
  421a29:	mov    rax,QWORD PTR [rsp+0x90]
  421a31:	lea    edx,[rbx-0x1161]
  421a37:	cmp    edx,0x14
  421a3a:	mov    eax,DWORD PTR [rax]
  421a3c:	ja     0x421ae7
  421a42:	sub    eax,0x1100
  421a47:	cmp    eax,0x12
  421a4a:	ja     0x421a6c
  421a4c:	mov    rax,QWORD PTR [rsp+0x90]
  421a54:	mov    rcx,QWORD PTR [rsp+0x90]
  421a5c:	cmp    DWORD PTR [rax+0x8],0x2
  421a60:	mov    eax,0x2
  421a65:	cmovge eax,DWORD PTR [rcx+0x8]
  421a69:	mov    DWORD PTR [rcx+0x8],eax
  421a6c:	test   r14b,r14b
  421a6f:	jne    0x421929
  421a75:	mov    rax,QWORD PTR [rsp+0x90]
  421a7d:	mov    DWORD PTR [rax],ebx
  421a7f:	jmp    0x421929
  421a84:	movzx  eax,WORD PTR [rcx+rdx*8]
  421a88:	test   al,0x8
  421a8a:	je     0x4219ca
  421a90:	mov    edi,eax
  421a92:	and    edi,0x10
  421a95:	jmp    0x421901
  421a9a:	lea    r8,[rip+0x2febf]        # 0x451960
  421aa1:	mov    BYTE PTR [r12+0x432],0x0
  421aaa:	mov    edx,0x2
  421aaf:	mov    rcx,r12
  421ab2:	call   0x414b60
  421ab7:	jmp    0x421818
  421abc:	test   al,0x80
  421abe:	jne    0x421a6c
  421ac0:	test   al,0x40
  421ac2:	je     0x421b31
  421ac4:	mov    rax,QWORD PTR [rsp+0x90]
  421acc:	mov    rcx,QWORD PTR [rsp+0x90]
  421ad4:	mov    eax,DWORD PTR [rax+0x8]
  421ad7:	test   eax,eax
  421ad9:	mov    eax,0x1
  421ade:	cmovg  eax,DWORD PTR [rcx+0x8]
  421ae2:	mov    DWORD PTR [rcx+0x8],eax
  421ae5:	jmp    0x421a6c
  421ae7:	lea    edx,[rbx-0x11a8]
  421aed:	cmp    edx,0x1a
  421af0:	ja     0x421b4d
  421af2:	lea    ecx,[rax-0xac00]
  421af8:	cmp    ecx,0x2ba3
  421afe:	ja     0x421a6c
  421b04:	mov    eax,ecx
  421b06:	mov    edx,0x24924925
  421b0b:	shr    eax,0x2
  421b0e:	mul    edx
  421b10:	imul   edx,edx,0x1c
  421b13:	cmp    ecx,edx
  421b15:	jne    0x421a6c
  421b1b:	jmp    0x421a4c
  421b20:	movzx  eax,WORD PTR [rcx+rdx*8]
  421b24:	test   al,0x1
  421b26:	jne    0x421a16
  421b2c:	jmp    0x4219ca
  421b31:	test   al,0x20
  421b33:	jne    0x421a4c
  421b39:	mov    rax,QWORD PTR [rsp+0x90]
  421b41:	mov    DWORD PTR [rax+0x8],0x3
  421b48:	jmp    0x421a6c
  421b4d:	cmp    ebx,0x338
  421b53:	je     0x421a6c
  421b59:	ja     0x421c02
  421b5f:	cmp    ebx,0x311
  421b65:	je     0x424002
  421b6b:	ja     0x42368b
  421b71:	cmp    ebx,0x307
  421b77:	je     0x42328f
  421b7d:	ja     0x423225
  421b83:	cmp    ebx,0x302
  421b89:	je     0x42234b
  421b8f:	jbe    0x4222ca
  421b95:	cmp    ebx,0x304
  421b9b:	je     0x421fc9
  421ba1:	jb     0x421f83
  421ba7:	cmp    ebx,0x306
  421bad:	jne    0x422d70
  421bb3:	cmp    eax,0x3a5
  421bb8:	je     0x421b39
  421bbe:	ja     0x422d2c
  421bc4:	cmp    eax,0x65
  421bc7:	je     0x421b39
  421bcd:	ja     0x422cfd
  421bd3:	cmp    eax,0x49
  421bd6:	je     0x421b39
  421bdc:	ja     0x422cdd
  421be2:	cmp    eax,0x45
  421be5:	je     0x421b39
  421beb:	cmp    eax,0x47
  421bee:	je     0x421b39
  421bf4:	cmp    eax,0x41
  421bf7:	jne    0x421a6c
  421bfd:	jmp    0x421b39
  421c02:	cmp    ebx,0xc56
  421c08:	je     0x421deb
  421c0e:	ja     0x421c80
  421c10:	cmp    ebx,0x9be
  421c16:	je     0x422f75
  421c1c:	ja     0x422f3b
  421c22:	cmp    ebx,0x653
  421c28:	je     0x422eb2
  421c2e:	jbe    0x422e4f
  421c34:	cmp    ebx,0x655
  421c3a:	je     0x421e2e
  421c40:	jb     0x421dfb
  421c46:	cmp    ebx,0x93c
  421c4c:	jne    0x422d70
  421c52:	lea    ecx,[rax-0x915]
  421c58:	cmp    ecx,0x1e
  421c5b:	ja     0x421a6c
  421c61:	mov    edx,0x1
  421c66:	shl    rdx,cl
  421c69:	test   edx,0x4c483087
  421c6f:	je     0x421a6c
  421c75:	jmp    0x421b39
  421c7a:	nop    WORD PTR [rax+rax*1+0x0]
  421c80:	cmp    ebx,0xdcf
  421c86:	je     0x421dd8
  421c8c:	jbe    0x421d8f
  421c92:	cmp    ebx,0x3099
  421c98:	je     0x421d6f
  421c9e:	jbe    0x421d01
  421ca0:	cmp    ebx,0x110ba
  421ca6:	je     0x421eb9
  421cac:	cmp    ebx,0x11127
  421cb2:	je     0x421ea6
  421cb8:	cmp    ebx,0x309a
  421cbe:	jne    0x422d70
  421cc4:	cmp    eax,0x307b
  421cc9:	je     0x421b39
  421ccf:	ja     0x421e7e
  421cd5:	cmp    eax,0x3072
  421cda:	je     0x421b39
  421ce0:	jbe    0x421e6e
  421ce6:	cmp    eax,0x3075
  421ceb:	je     0x421b39
  421cf1:	cmp    eax,0x3078
  421cf6:	jne    0x421a6c
  421cfc:	jmp    0x421b39
  421d01:	cmp    ebx,0x102e
  421d07:	je     0x421d5f
  421d09:	cmp    ebx,0x1b35
  421d0f:	jne    0x421d40
  421d11:	sub    eax,0x1b05
  421d16:	cmp    eax,0x3d
  421d19:	ja     0x421a6c
  421d1f:	movabs rdx,0x26a0000000001155
  421d29:	bt     rdx,rax
  421d2d:	jae    0x421a6c
  421d33:	jmp    0x421b39
  421d38:	nop    DWORD PTR [rax+rax*1+0x0]
  421d40:	cmp    ebx,0xddf
  421d46:	jne    0x422d70
  421d4c:	sub    eax,0xdd9
  421d51:	cmp    eax,0x1
  421d54:	ja     0x421a6c
  421d5a:	jmp    0x421b39
  421d5f:	cmp    eax,0x1025
  421d64:	je     0x421b39
  421d6a:	jmp    0x421a6c
  421d6f:	sub    eax,0x3046
  421d74:	cmp    eax,0xb7
  421d79:	ja     0x421a6c
  421d7f:	lea    rdx,[rip+0x2fc9a]        # 0x451a20
  421d86:	movsxd rax,DWORD PTR [rdx+rax*4]
  421d8a:	add    rdx,rax
  421d8d:	jmp    rdx
  421d8f:	cmp    ebx,0xcd6
  421d95:	je     0x421f63
  421d9b:	jbe    0x421f27
  421da1:	cmp    ebx,0xd57
  421da7:	je     0x421f17
  421dad:	cmp    ebx,0xdca
  421db3:	je     0x421efc
  421db9:	cmp    ebx,0xd3e
  421dbf:	jne    0x422d70
  421dc5:	sub    eax,0xd46
  421dca:	cmp    eax,0x1
  421dcd:	ja     0x421a6c
  421dd3:	jmp    0x421b39
  421dd8:	sub    eax,0xdd9
  421ddd:	cmp    eax,0x1
  421de0:	ja     0x421a6c
  421de6:	jmp    0x421b39
  421deb:	cmp    eax,0xc46
  421df0:	je     0x421b39
  421df6:	jmp    0x421a6c
  421dfb:	cmp    eax,0x64a
  421e00:	je     0x421b39
  421e06:	jbe    0x421e53
  421e08:	cmp    eax,0x6d2
  421e0d:	je     0x421b39
  421e13:	cmp    eax,0x6d5
  421e18:	je     0x421b39
  421e1e:	cmp    eax,0x6c1
  421e23:	jne    0x421a6c
  421e29:	jmp    0x421b39
  421e2e:	lea    ecx,[rax-0x622]
  421e34:	cmp    ecx,0x5
  421e37:	ja     0x421a6c
  421e3d:	mov    edx,0x1
  421e42:	shl    rdx,cl
  421e45:	and    edx,0x23
  421e48:	je     0x421a6c
  421e4e:	jmp    0x421b39
  421e53:	cmp    eax,0x627
  421e58:	je     0x421b39
  421e5e:	cmp    eax,0x648
  421e63:	jne    0x421a6c
  421e69:	jmp    0x421b39
  421e6e:	cmp    eax,0x306f
  421e73:	jne    0x421a6c
  421e79:	jmp    0x421b39
  421e7e:	cmp    eax,0x30d5
  421e83:	je     0x421b39
  421e89:	ja     0x421ee1
  421e8b:	cmp    eax,0x30cf
  421e90:	je     0x421b39
  421e96:	cmp    eax,0x30d2
  421e9b:	jne    0x421a6c
  421ea1:	jmp    0x421b39
  421ea6:	sub    eax,0x11131
  421eab:	cmp    eax,0x1
  421eae:	ja     0x421a6c
  421eb4:	jmp    0x421b39
  421eb9:	lea    ecx,[rax-0x11099]
  421ebf:	cmp    ecx,0xc
  421ec2:	ja     0x421a6c
  421ec8:	mov    edx,0x1
  421ecd:	shl    rdx,cl
  421ed0:	test   edx,0x1005
  421ed6:	je     0x421a6c
  421edc:	jmp    0x421b39
  421ee1:	cmp    eax,0x30d8
  421ee6:	je     0x421b39
  421eec:	cmp    eax,0x30db
  421ef1:	jne    0x421a6c
  421ef7:	jmp    0x421b39
  421efc:	cmp    eax,0xdd9
  421f01:	je     0x421b39
  421f07:	cmp    eax,0xddc
  421f0c:	jne    0x421a6c
  421f12:	jmp    0x421b39
  421f17:	cmp    eax,0xd46
  421f1c:	je     0x421b39
  421f22:	jmp    0x421a6c
  421f27:	cmp    ebx,0xcc2
  421f2d:	je     0x421f73
  421f2f:	cmp    ebx,0xcd5
  421f35:	jne    0x422d70
  421f3b:	lea    ecx,[rax-0xcbf]
  421f41:	cmp    ecx,0xb
  421f44:	ja     0x421a6c
  421f4a:	mov    edx,0x1
  421f4f:	shl    rdx,cl
  421f52:	test   edx,0x881
  421f58:	je     0x421a6c
  421f5e:	jmp    0x421b39
  421f63:	cmp    eax,0xcc6
  421f68:	je     0x421b39
  421f6e:	jmp    0x421a6c
  421f73:	cmp    eax,0xcc6
  421f78:	je     0x421b39
  421f7e:	jmp    0x421a6c
  421f83:	cmp    eax,0x76
  421f86:	ja     0x422228
  421f8c:	cmp    eax,0x75
  421f8f:	jae    0x421b39
  421f95:	cmp    eax,0x56
  421f98:	ja     0x422206
  421f9e:	cmp    eax,0x55
  421fa1:	jae    0x421b39
  421fa7:	cmp    eax,0x49
  421faa:	je     0x421b39
  421fb0:	ja     0x422017
  421fb2:	cmp    eax,0x41
  421fb5:	je     0x421b39
  421fbb:	cmp    eax,0x45
  421fbe:	jne    0x421a6c
  421fc4:	jmp    0x421b39
  421fc9:	cmp    eax,0xf6
  421fce:	ja     0x42209e
  421fd4:	cmp    eax,0xf5
  421fd9:	jae    0x421b39
  421fdf:	cmp    eax,0x69
  421fe2:	je     0x421b39
  421fe8:	ja     0x422065
  421fea:	cmp    eax,0x4f
  421fed:	je     0x421b39
  421ff3:	jbe    0x42203f
  421ff5:	cmp    eax,0x61
  421ff8:	je     0x421b39
  421ffe:	ja     0x422028
  422000:	cmp    eax,0x55
  422003:	je     0x421b39
  422009:	cmp    eax,0x59
  42200c:	jne    0x421a6c
  422012:	jmp    0x421b39
  422017:	sub    eax,0x4e
  42201a:	cmp    eax,0x1
  42201d:	ja     0x421a6c
  422023:	jmp    0x421b39
  422028:	cmp    eax,0x65
  42202b:	je     0x421b39
  422031:	cmp    eax,0x67
  422034:	jne    0x421a6c
  42203a:	jmp    0x421b39
  42203f:	cmp    eax,0x45
  422042:	je     0x421b39
  422048:	jbe    0x4220df
  42204e:	cmp    eax,0x47
  422051:	je     0x421b39
  422057:	cmp    eax,0x49
  42205a:	jne    0x421a6c
  422060:	jmp    0x421b39
  422065:	cmp    eax,0xc6
  42206a:	je     0x421b39
  422070:	ja     0x4221bb
  422076:	cmp    eax,0x75
  422079:	je     0x421b39
  42207f:	jbe    0x4221ad
  422085:	cmp    eax,0x79
  422088:	je     0x421b39
  42208e:	cmp    eax,0xc4
  422093:	jne    0x421a6c
  422099:	jmp    0x421b39
  42209e:	cmp    eax,0x3b9
  4220a3:	je     0x421b39
  4220a9:	ja     0x422128
  4220ab:	cmp    eax,0x22f
  4220b0:	ja     0x422100
  4220b2:	cmp    eax,0x22e
  4220b7:	jae    0x421b39
  4220bd:	cmp    eax,0x1eb
  4220c2:	ja     0x4220ed
  4220c4:	cmp    eax,0x1ea
  4220c9:	jae    0x421b39
  4220cf:	cmp    eax,0xfc
  4220d4:	jne    0x421a6c
  4220da:	jmp    0x421b39
  4220df:	cmp    eax,0x41
  4220e2:	jne    0x421a6c
  4220e8:	jmp    0x421b39
  4220ed:	sub    eax,0x226
  4220f2:	cmp    eax,0x1
  4220f5:	ja     0x421a6c
  4220fb:	jmp    0x421b39
  422100:	cmp    eax,0x399
  422105:	je     0x421b39
  42210b:	jbe    0x422162
  42210d:	cmp    eax,0x3a5
  422112:	je     0x421b39
  422118:	cmp    eax,0x3b1
  42211d:	jne    0x421a6c
  422123:	jmp    0x421b39
  422128:	cmp    eax,0x1e37
  42212d:	ja     0x42218d
  42212f:	cmp    eax,0x1e36
  422134:	jae    0x421b39
  42213a:	cmp    eax,0x423
  42213f:	je     0x421b39
  422145:	ja     0x422172
  422147:	cmp    eax,0x3c5
  42214c:	je     0x421b39
  422152:	cmp    eax,0x418
  422157:	jne    0x421a6c
  42215d:	jmp    0x421b39
  422162:	cmp    eax,0x391
  422167:	jne    0x421a6c
  42216d:	jmp    0x421b39
  422172:	cmp    eax,0x438
  422177:	je     0x421b39
  42217d:	cmp    eax,0x443
  422182:	jne    0x421a6c
  422188:	jmp    0x421b39
  42218d:	cmp    eax,0x1fb3
  422192:	je     0x421b39
  422198:	ja     0x4221e3
  42219a:	sub    eax,0x1e5a
  42219f:	cmp    eax,0x1
  4221a2:	ja     0x421a6c
  4221a8:	jmp    0x421b39
  4221ad:	cmp    eax,0x6f
  4221b0:	jne    0x421a6c
  4221b6:	jmp    0x421b39
  4221bb:	cmp    eax,0xdc
  4221c0:	je     0x421b39
  4221c6:	jbe    0x4221f3
  4221c8:	cmp    eax,0xe4
  4221cd:	je     0x421b39
  4221d3:	cmp    eax,0xe6
  4221d8:	jne    0x421a6c
  4221de:	jmp    0x421b39
  4221e3:	cmp    eax,0x1fbc
  4221e8:	jne    0x421a6c
  4221ee:	jmp    0x421b39
  4221f3:	sub    eax,0xd5
  4221f8:	cmp    eax,0x1
  4221fb:	ja     0x421a6c
  422201:	jmp    0x421b39
  422206:	cmp    eax,0x65
  422209:	je     0x421b39
  42220f:	ja     0x422268
  422211:	cmp    eax,0x59
  422214:	je     0x421b39
  42221a:	cmp    eax,0x61
  42221d:	jne    0x421a6c
  422223:	jmp    0x421b39
  422228:	cmp    eax,0xf4
  42222d:	je     0x421b39
  422233:	ja     0x4222a1
  422235:	cmp    eax,0xca
  42223a:	je     0x421b39
  422240:	jbe    0x422288
  422242:	cmp    eax,0xe2
  422247:	je     0x421b39
  42224d:	cmp    eax,0xea
  422252:	je     0x421b39
  422258:	cmp    eax,0xd4
  42225d:	jne    0x421a6c
  422263:	jmp    0x421b39
  422268:	cmp    eax,0x69
  42226b:	je     0x421b39
  422271:	jb     0x421a6c
  422277:	sub    eax,0x6e
  42227a:	cmp    eax,0x1
  42227d:	ja     0x421a6c
  422283:	jmp    0x421b39
  422288:	cmp    eax,0x79
  42228b:	je     0x421b39
  422291:	cmp    eax,0xc2
  422296:	jne    0x421a6c
  42229c:	jmp    0x421b39
  4222a1:	cmp    eax,0x1a1
  4222a6:	ja     0x422387
  4222ac:	cmp    eax,0x1a0
  4222b1:	jae    0x421b39
  4222b7:	sub    eax,0x102
  4222bc:	cmp    eax,0x1
  4222bf:	ja     0x421a6c
  4222c5:	jmp    0x421b39
  4222ca:	cmp    ebx,0x300
  4222d0:	je     0x4225f8
  4222d6:	cmp    ebx,0x301
  4222dc:	jne    0x422d70
  4222e2:	cmp    eax,0x39f
  4222e7:	je     0x421b39
  4222ed:	ja     0x422589
  4222f3:	cmp    eax,0xca
  4222f8:	je     0x421b39
  4222fe:	ja     0x42251b
  422304:	cmp    eax,0x63
  422307:	je     0x421b39
  42230d:	ja     0x4224da
  422313:	cmp    eax,0x50
  422316:	ja     0x42247c
  42231c:	cmp    eax,0x4b
  42231f:	jae    0x421b39
  422325:	cmp    eax,0x45
  422328:	je     0x421b39
  42232e:	ja     0x422465
  422334:	cmp    eax,0x41
  422337:	je     0x421b39
  42233d:	cmp    eax,0x43
  422340:	jne    0x421a6c
  422346:	jmp    0x421b39
  42234b:	cmp    eax,0x65
  42234e:	je     0x421b39
  422354:	ja     0x4223df
  42235a:	cmp    eax,0x53
  42235d:	je     0x421b39
  422363:	ja     0x4223ba
  422365:	cmp    eax,0x45
  422368:	je     0x421b39
  42236e:	ja     0x42239a
  422370:	cmp    eax,0x41
  422373:	je     0x421b39
  422379:	cmp    eax,0x43
  42237c:	jne    0x421a6c
  422382:	jmp    0x421b39
  422387:	sub    eax,0x1af
  42238c:	cmp    eax,0x1
  42238f:	ja     0x421a6c
  422395:	jmp    0x421b39
  42239a:	cmp    eax,0x47
  42239d:	jb     0x421a6c
  4223a3:	cmp    eax,0x4a
  4223a6:	jbe    0x421b39
  4223ac:	cmp    eax,0x4f
  4223af:	jne    0x421a6c
  4223b5:	jmp    0x421b39
  4223ba:	cmp    eax,0x5a
  4223bd:	ja     0x422418
  4223bf:	cmp    eax,0x59
  4223c2:	jae    0x421b39
  4223c8:	cmp    eax,0x55
  4223cb:	je     0x421b39
  4223d1:	cmp    eax,0x57
  4223d4:	jne    0x421a6c
  4223da:	jmp    0x421b39
  4223df:	cmp    eax,0x7a
  4223e2:	ja     0x422440
  4223e4:	cmp    eax,0x79
  4223e7:	jae    0x421b39
  4223ed:	cmp    eax,0x6f
  4223f0:	je     0x421b39
  4223f6:	jbe    0x42242f
  4223f8:	cmp    eax,0x75
  4223fb:	je     0x421b39
  422401:	cmp    eax,0x77
  422404:	je     0x421b39
  42240a:	cmp    eax,0x73
  42240d:	jne    0x421a6c
  422413:	jmp    0x421b39
  422418:	cmp    eax,0x61
  42241b:	je     0x421b39
  422421:	cmp    eax,0x63
  422424:	jne    0x421a6c
  42242a:	jmp    0x421b39
  42242f:	sub    eax,0x67
  422432:	cmp    eax,0x3
  422435:	ja     0x421a6c
  42243b:	jmp    0x421b39
  422440:	cmp    eax,0x1eb9
  422445:	ja     0x4224a7
  422447:	cmp    eax,0x1eb8
  42244c:	jae    0x421b39
  422452:	sub    eax,0x1ea0
  422457:	cmp    eax,0x1
  42245a:	ja     0x421a6c
  422460:	jmp    0x421b39
  422465:	cmp    eax,0x47
  422468:	je     0x421b39
  42246e:	cmp    eax,0x49
  422471:	jne    0x421a6c
  422477:	jmp    0x421b39
  42247c:	cmp    eax,0x57
  42247f:	je     0x421b39
  422485:	ja     0x4224ba
  422487:	cmp    eax,0x52
  42248a:	jb     0x421a6c
  422490:	cmp    eax,0x53
  422493:	jbe    0x421b39
  422499:	cmp    eax,0x55
  42249c:	jne    0x421a6c
  4224a2:	jmp    0x421b39
  4224a7:	sub    eax,0x1ecc
  4224ac:	cmp    eax,0x1
  4224af:	ja     0x421a6c
  4224b5:	jmp    0x421b39
  4224ba:	cmp    eax,0x59
  4224bd:	jb     0x421a6c
  4224c3:	cmp    eax,0x5a
  4224c6:	jbe    0x421b39
  4224cc:	cmp    eax,0x61
  4224cf:	jne    0x421a6c
  4224d5:	jmp    0x421b39
  4224da:	cmp    eax,0x75
  4224dd:	je     0x421b39
  4224e3:	ja     0x423556
  4224e9:	cmp    eax,0x70
  4224ec:	ja     0x422578
  4224f2:	cmp    eax,0x6b
  4224f5:	jae    0x421b39
  4224fb:	cmp    eax,0x67
  4224fe:	je     0x421b39
  422504:	cmp    eax,0x69
  422507:	je     0x421b39
  42250d:	cmp    eax,0x65
  422510:	jne    0x421a6c
  422516:	jmp    0x421b39
  42251b:	cmp    eax,0x103
  422520:	ja     0x4235ef
  422526:	cmp    eax,0x102
  42252b:	jae    0x421b39
  422531:	cmp    eax,0xe7
  422536:	ja     0x4235c2
  42253c:	cmp    eax,0xe5
  422541:	jae    0x421b39
  422547:	cmp    eax,0xd5
  42254c:	jbe    0x423583
  422552:	cmp    eax,0xdc
  422557:	je     0x421b39
  42255d:	cmp    eax,0xe2
  422562:	je     0x421b39
  422568:	cmp    eax,0xd8
  42256d:	jne    0x421a6c
  422573:	jmp    0x421b39
  422578:	sub    eax,0x72
  42257b:	cmp    eax,0x1
  42257e:	ja     0x421a6c
  422584:	jmp    0x421b39
  422589:	cmp    eax,0x1f39
  42258e:	ja     0x4226b7
  422594:	cmp    eax,0x1f38
  422599:	jae    0x421b39
  42259f:	cmp    eax,0x43a
  4225a4:	je     0x421b39
  4225aa:	ja     0x42267c
  4225b0:	cmp    eax,0x3bf
  4225b5:	je     0x421b39
  4225bb:	ja     0x42271f
  4225c1:	cmp    eax,0x3b1
  4225c6:	je     0x421b39
  4225cc:	jbe    0x422661
  4225d2:	cmp    eax,0x3b7
  4225d7:	je     0x421b39
  4225dd:	cmp    eax,0x3b9
  4225e2:	je     0x421b39
  4225e8:	cmp    eax,0x3b5
  4225ed:	jne    0x421a6c
  4225f3:	jmp    0x421b39
  4225f8:	cmp    eax,0x415
  4225fd:	je     0x421b39
  422603:	ja     0x422884
  422609:	cmp    eax,0xfc
  42260e:	je     0x421b39
  422614:	ja     0x422836
  42261a:	cmp    eax,0x6f
  42261d:	ja     0x4227af
  422623:	cmp    eax,0x6e
  422626:	jae    0x421b39
  42262c:	cmp    eax,0x55
  42262f:	je     0x421b39
  422635:	jbe    0x42278d
  42263b:	cmp    eax,0x61
  42263e:	je     0x421b39
  422644:	ja     0x422752
  42264a:	cmp    eax,0x57
  42264d:	je     0x421b39
  422653:	cmp    eax,0x59
  422656:	jne    0x421a6c
  42265c:	jmp    0x421b39
  422661:	cmp    eax,0x3a5
  422666:	je     0x421b39
  42266c:	cmp    eax,0x3a9
  422671:	jne    0x421a6c
  422677:	jmp    0x421b39
  42267c:	cmp    eax,0x1f19
  422681:	ja     0x4229ef
  422687:	cmp    eax,0x1f18
  42268c:	jae    0x421b39
  422692:	cmp    eax,0x1f09
  422697:	ja     0x42270c
  422699:	cmp    eax,0x1f08
  42269e:	jae    0x421b39
  4226a4:	sub    eax,0x1f00
  4226a9:	cmp    eax,0x1
  4226ac:	ja     0x421a6c
  4226b2:	jmp    0x421b39
  4226b7:	cmp    eax,0x1f91
  4226bc:	ja     0x422a72
  4226c2:	cmp    eax,0x1f90
  4226c7:	jae    0x421b39
  4226cd:	cmp    eax,0x1f61
  4226d2:	ja     0x422a4d
  4226d8:	cmp    eax,0x1f60
  4226dd:	jae    0x421b39
  4226e3:	cmp    eax,0x1f49
  4226e8:	ja     0x422a14
  4226ee:	cmp    eax,0x1f48
  4226f3:	jae    0x421b39
  4226f9:	sub    eax,0x1f40
  4226fe:	cmp    eax,0x1
  422701:	ja     0x421a6c
  422707:	jmp    0x421b39
  42270c:	sub    eax,0x1f10
  422711:	cmp    eax,0x1
  422714:	ja     0x421a6c
  42271a:	jmp    0x421b39
  42271f:	cmp    eax,0x3d2
  422724:	je     0x421b39
  42272a:	jbe    0x422769
  42272c:	cmp    eax,0x41a
  422731:	je     0x421b39
  422737:	cmp    eax,0x433
  42273c:	je     0x421b39
  422742:	cmp    eax,0x413
  422747:	jne    0x421a6c
  42274d:	jmp    0x421b39
  422752:	cmp    eax,0x65
  422755:	je     0x421b39
  42275b:	cmp    eax,0x69
  42275e:	jne    0x421a6c
  422764:	jmp    0x421b39
  422769:	cmp    eax,0x3c5
  42276e:	je     0x421b39
  422774:	jb     0x421a6c
  42277a:	sub    eax,0x3c9
  42277f:	cmp    eax,0x2
  422782:	ja     0x421a6c
  422788:	jmp    0x421b39
  42278d:	cmp    eax,0x49
  422790:	je     0x421b39
  422796:	ja     0x4227de
  422798:	cmp    eax,0x41
  42279b:	je     0x421b39
  4227a1:	cmp    eax,0x45
  4227a4:	jne    0x421a6c
  4227aa:	jmp    0x421b39
  4227af:	cmp    eax,0xca
  4227b4:	je     0x421b39
  4227ba:	ja     0x42280a
  4227bc:	cmp    eax,0x79
  4227bf:	je     0x421b39
  4227c5:	ja     0x4227ef
  4227c7:	cmp    eax,0x75
  4227ca:	je     0x421b39
  4227d0:	cmp    eax,0x77
  4227d3:	jne    0x421a6c
  4227d9:	jmp    0x421b39
  4227de:	sub    eax,0x4e
  4227e1:	cmp    eax,0x1
  4227e4:	ja     0x421a6c
  4227ea:	jmp    0x421b39
  4227ef:	cmp    eax,0xa8
  4227f4:	je     0x421b39
  4227fa:	cmp    eax,0xc2
  4227ff:	jne    0x421a6c
  422805:	jmp    0x421b39
  42280a:	cmp    eax,0xe2
  42280f:	je     0x421b39
  422815:	ja     0x4228f2
  42281b:	cmp    eax,0xd4
  422820:	je     0x421b39
  422826:	cmp    eax,0xdc
  42282b:	jne    0x421a6c
  422831:	jmp    0x421b39
  422836:	cmp    eax,0x397
  42283b:	je     0x421b39
  422841:	jbe    0x422950
  422847:	cmp    eax,0x3b5
  42284c:	je     0x421b39
  422852:	ja     0x422928
  422858:	cmp    eax,0x3a5
  42285d:	je     0x421b39
  422863:	ja     0x42290d
  422869:	cmp    eax,0x399
  42286e:	je     0x421b39
  422874:	cmp    eax,0x39f
  422879:	jne    0x421a6c
  42287f:	jmp    0x421b39
  422884:	cmp    eax,0x1f51
  422889:	ja     0x422b62
  42288f:	cmp    eax,0x1f50
  422894:	jae    0x421b39
  42289a:	cmp    eax,0x1f21
  42289f:	ja     0x422b27
  4228a5:	cmp    eax,0x1f20
  4228aa:	jae    0x421b39
  4228b0:	cmp    eax,0x1f09
  4228b5:	ja     0x422ca1
  4228bb:	cmp    eax,0x1f08
  4228c0:	jae    0x421b39
  4228c6:	cmp    eax,0x438
  4228cb:	je     0x421b39
  4228d1:	ja     0x422b14
  4228d7:	cmp    eax,0x418
  4228dc:	je     0x421b39
  4228e2:	cmp    eax,0x435
  4228e7:	jne    0x421a6c
  4228ed:	jmp    0x421b39
  4228f2:	cmp    eax,0xea
  4228f7:	je     0x421b39
  4228fd:	cmp    eax,0xf4
  422902:	jne    0x421a6c
  422908:	jmp    0x421b39
  42290d:	cmp    eax,0x3a9
  422912:	je     0x421b39
  422918:	cmp    eax,0x3b1
  42291d:	jne    0x421a6c
  422923:	jmp    0x421b39
  422928:	cmp    eax,0x3bf
  42292d:	je     0x421b39
  422933:	ja     0x42297c
  422935:	cmp    eax,0x3b7
  42293a:	je     0x421b39
  422940:	cmp    eax,0x3b9
  422945:	jne    0x421a6c
  42294b:	jmp    0x421b39
  422950:	cmp    eax,0x14d
  422955:	jbe    0x4229bb
  422957:	cmp    eax,0x1b0
  42295c:	ja     0x4229a0
  42295e:	cmp    eax,0x1af
  422963:	jae    0x421b39
  422969:	sub    eax,0x1a0
  42296e:	cmp    eax,0x1
  422971:	ja     0x421a6c
  422977:	jmp    0x421b39
  42297c:	cmp    eax,0x3c5
  422981:	je     0x421b39
  422987:	jb     0x421a6c
  42298d:	sub    eax,0x3c9
  422992:	cmp    eax,0x2
  422995:	ja     0x421a6c
  42299b:	jmp    0x421b39
  4229a0:	cmp    eax,0x391
  4229a5:	je     0x421b39
  4229ab:	cmp    eax,0x395
  4229b0:	jne    0x421a6c
  4229b6:	jmp    0x421b39
  4229bb:	cmp    eax,0x14c
  4229c0:	jae    0x421b39
  4229c6:	cmp    eax,0x102
  4229cb:	jb     0x421a6c
  4229d1:	cmp    eax,0x103
  4229d6:	jbe    0x421b39
  4229dc:	sub    eax,0x112
  4229e1:	cmp    eax,0x1
  4229e4:	ja     0x421a6c
  4229ea:	jmp    0x421b39
  4229ef:	cmp    eax,0x1f29
  4229f4:	ja     0x422a3a
  4229f6:	cmp    eax,0x1f28
  4229fb:	jae    0x421b39
  422a01:	sub    eax,0x1f20
  422a06:	cmp    eax,0x1
  422a09:	ja     0x421a6c
  422a0f:	jmp    0x421b39
  422a14:	cmp    eax,0x1f50
  422a19:	jb     0x421a6c
  422a1f:	cmp    eax,0x1f51
  422a24:	jbe    0x421b39
  422a2a:	cmp    eax,0x1f59
  422a2f:	jne    0x421a6c
  422a35:	jmp    0x421b39
  422a3a:	sub    eax,0x1f30
  422a3f:	cmp    eax,0x1
  422a42:	ja     0x421a6c
  422a48:	jmp    0x421b39
  422a4d:	cmp    eax,0x1f81
  422a52:	ja     0x422ab2
  422a54:	cmp    eax,0x1f80
  422a59:	jae    0x421b39
  422a5f:	sub    eax,0x1f68
  422a64:	cmp    eax,0x1
  422a67:	ja     0x421a6c
  422a6d:	jmp    0x421b39
  422a72:	cmp    eax,0x1fb3
  422a77:	je     0x421b39
  422a7d:	jbe    0x422aeb
  422a7f:	cmp    eax,0x1fcc
  422a84:	je     0x421b39
  422a8a:	ja     0x422ac5
  422a8c:	cmp    eax,0x1fbf
  422a91:	je     0x421b39
  422a97:	cmp    eax,0x1fc3
  422a9c:	je     0x421b39
  422aa2:	cmp    eax,0x1fbc
  422aa7:	jne    0x421a6c
  422aad:	jmp    0x421b39
  422ab2:	sub    eax,0x1f88
  422ab7:	cmp    eax,0x1
  422aba:	ja     0x421a6c
  422ac0:	jmp    0x421b39
  422ac5:	cmp    eax,0x1ffc
  422aca:	je     0x421b39
  422ad0:	cmp    eax,0x1ffe
  422ad5:	je     0x421b39
  422adb:	cmp    eax,0x1ff3
  422ae0:	jne    0x421a6c
  422ae6:	jmp    0x421b39
  422aeb:	cmp    eax,0x1fa1
  422af0:	ja     0x422cca
  422af6:	cmp    eax,0x1fa0
  422afb:	jae    0x421b39
  422b01:	sub    eax,0x1f98
  422b06:	cmp    eax,0x1
  422b09:	ja     0x421a6c
  422b0f:	jmp    0x421b39
  422b14:	sub    eax,0x1f00
  422b19:	cmp    eax,0x1
  422b1c:	ja     0x421a6c
  422b22:	jmp    0x421b39
  422b27:	cmp    eax,0x1f39
  422b2c:	ja     0x422bad
  422b2e:	cmp    eax,0x1f38
  422b33:	jae    0x421b39
  422b39:	cmp    eax,0x1f28
  422b3e:	jb     0x421a6c
  422b44:	cmp    eax,0x1f29
  422b49:	jbe    0x421b39
  422b4f:	sub    eax,0x1f30
  422b54:	cmp    eax,0x1
  422b57:	ja     0x421a6c
  422b5d:	jmp    0x421b39
  422b62:	cmp    eax,0x1f99
  422b67:	jbe    0x422c16
  422b6d:	cmp    eax,0x1fbc
  422b72:	je     0x421b39
  422b78:	jbe    0x422bf1
  422b7a:	cmp    eax,0x1fcc
  422b7f:	je     0x421b39
  422b85:	jbe    0x422bd6
  422b87:	cmp    eax,0x1ffc
  422b8c:	je     0x421b39
  422b92:	cmp    eax,0x1ffe
  422b97:	je     0x421b39
  422b9d:	cmp    eax,0x1ff3
  422ba2:	jne    0x421a6c
  422ba8:	jmp    0x421b39
  422bad:	cmp    eax,0x1f40
  422bb2:	jb     0x421a6c
  422bb8:	cmp    eax,0x1f41
  422bbd:	jbe    0x421b39
  422bc3:	sub    eax,0x1f48
  422bc8:	cmp    eax,0x1
  422bcb:	ja     0x421a6c
  422bd1:	jmp    0x421b39
  422bd6:	cmp    eax,0x1fbf
  422bdb:	je     0x421b39
  422be1:	cmp    eax,0x1fc3
  422be6:	jne    0x421a6c
  422bec:	jmp    0x421b39
  422bf1:	cmp    eax,0x1fa9
  422bf6:	ja     0x422c55
  422bf8:	cmp    eax,0x1fa8
  422bfd:	jae    0x421b39
  422c03:	sub    eax,0x1fa0
  422c08:	cmp    eax,0x1
  422c0b:	ja     0x421a6c
  422c11:	jmp    0x421b39
  422c16:	cmp    eax,0x1f98
  422c1b:	jae    0x421b39
  422c21:	cmp    eax,0x1f81
  422c26:	ja     0x422c78
  422c28:	cmp    eax,0x1f80
  422c2d:	jae    0x421b39
  422c33:	cmp    eax,0x1f61
  422c38:	ja     0x422c65
  422c3a:	cmp    eax,0x1f60
  422c3f:	jae    0x421b39
  422c45:	cmp    eax,0x1f59
  422c4a:	jne    0x421a6c
  422c50:	jmp    0x421b39
  422c55:	cmp    eax,0x1fb3
  422c5a:	jne    0x421a6c
  422c60:	jmp    0x421b39
  422c65:	sub    eax,0x1f68
  422c6a:	cmp    eax,0x1
  422c6d:	ja     0x421a6c
  422c73:	jmp    0x421b39
  422c78:	cmp    eax,0x1f88
  422c7d:	jb     0x421a6c
  422c83:	cmp    eax,0x1f89
  422c88:	jbe    0x421b39
  422c8e:	sub    eax,0x1f90
  422c93:	cmp    eax,0x1
  422c96:	ja     0x421a6c
  422c9c:	jmp    0x421b39
  422ca1:	cmp    eax,0x1f10
  422ca6:	jb     0x421a6c
  422cac:	cmp    eax,0x1f11
  422cb1:	jbe    0x421b39
  422cb7:	sub    eax,0x1f18
  422cbc:	cmp    eax,0x1
  422cbf:	ja     0x421a6c
  422cc5:	jmp    0x421b39
  422cca:	sub    eax,0x1fa8
  422ccf:	cmp    eax,0x1
  422cd2:	ja     0x421a6c
  422cd8:	jmp    0x421b39
  422cdd:	cmp    eax,0x55
  422ce0:	je     0x421b39
  422ce6:	cmp    eax,0x61
  422ce9:	je     0x421b39
  422cef:	cmp    eax,0x4f
  422cf2:	jne    0x421a6c
  422cf8:	jmp    0x421b39
  422cfd:	cmp    eax,0x75
  422d00:	je     0x421b39
  422d06:	ja     0x422d8c
  422d0c:	cmp    eax,0x69
  422d0f:	je     0x421b39
  422d15:	cmp    eax,0x6f
  422d18:	je     0x421b39
  422d1e:	cmp    eax,0x67
  422d21:	jne    0x421a6c
  422d27:	jmp    0x421b39
  422d2c:	cmp    eax,0x430
  422d31:	je     0x421b39
  422d37:	ja     0x422dcc
  422d3d:	cmp    eax,0x410
  422d42:	je     0x421b39
  422d48:	ja     0x422dac
  422d4a:	cmp    eax,0x3b9
  422d4f:	je     0x421b39
  422d55:	cmp    eax,0x3c5
  422d5a:	je     0x421b39
  422d60:	cmp    eax,0x3b1
  422d65:	jne    0x421a6c
  422d6b:	jmp    0x421b39
  422d70:	lea    r8,[rip+0x2ec09]        # 0x451980
  422d77:	mov    r9d,ebx
  422d7a:	mov    edx,0x4
  422d7f:	mov    rcx,r12
  422d82:	call   0x414b60
  422d87:	jmp    0x421a6c
  422d8c:	cmp    eax,0x391
  422d91:	je     0x421b39
  422d97:	ja     0x422df9
  422d99:	sub    eax,0x228
  422d9e:	cmp    eax,0x1
  422da1:	ja     0x421a6c
  422da7:	jmp    0x421b39
  422dac:	cmp    eax,0x418
  422db1:	je     0x421b39
  422db7:	ja     0x422e09
  422db9:	sub    eax,0x415
  422dbe:	cmp    eax,0x1
  422dc1:	ja     0x421a6c
  422dc7:	jmp    0x421b39
  422dcc:	cmp    eax,0x443
  422dd1:	je     0x421b39
  422dd7:	jbe    0x422e29
  422dd9:	cmp    eax,0x1fb3
  422dde:	je     0x421b39
  422de4:	ja     0x422e19
  422de6:	sub    eax,0x1ea0
  422deb:	cmp    eax,0x1
  422dee:	ja     0x421a6c
  422df4:	jmp    0x421b39
  422df9:	cmp    eax,0x399
  422dfe:	jne    0x421a6c
  422e04:	jmp    0x421b39
  422e09:	cmp    eax,0x423
  422e0e:	jne    0x421a6c
  422e14:	jmp    0x421b39
  422e19:	cmp    eax,0x1fbc
  422e1e:	jne    0x421a6c
  422e24:	jmp    0x421b39
  422e29:	cmp    eax,0x435
  422e2e:	jb     0x421a6c
  422e34:	cmp    eax,0x436
  422e39:	jbe    0x421b39
  422e3f:	cmp    eax,0x438
  422e44:	jne    0x421a6c
  422e4a:	jmp    0x421b39
  422e4f:	cmp    ebx,0x342
  422e55:	je     0x422ff7
  422e5b:	cmp    ebx,0x345
  422e61:	jne    0x422d70
  422e67:	cmp    eax,0x1f0f
  422e6c:	ja     0x422efe
  422e72:	cmp    eax,0x1f00
  422e77:	jae    0x421b39
  422e7d:	cmp    eax,0x3ae
  422e82:	je     0x421b39
  422e88:	ja     0x422ed2
  422e8a:	cmp    eax,0x397
  422e8f:	je     0x421b39
  422e95:	jbe    0x422ec2
  422e97:	cmp    eax,0x3a9
  422e9c:	je     0x421b39
  422ea2:	cmp    eax,0x3ac
  422ea7:	jne    0x421a6c
  422ead:	jmp    0x421b39
  422eb2:	cmp    eax,0x627
  422eb7:	je     0x421b39
  422ebd:	jmp    0x421a6c
  422ec2:	cmp    eax,0x391
  422ec7:	jne    0x421a6c
  422ecd:	jmp    0x421b39
  422ed2:	cmp    eax,0x3b7
  422ed7:	je     0x421b39
  422edd:	jbe    0x423053
  422ee3:	cmp    eax,0x3c9
  422ee8:	je     0x421b39
  422eee:	cmp    eax,0x3ce
  422ef3:	jne    0x421a6c
  422ef9:	jmp    0x421b39
  422efe:	cmp    eax,0x1f74
  422f03:	je     0x421b39
  422f09:	jbe    0x4231c3
  422f0f:	cmp    eax,0x1fb6
  422f14:	je     0x421b39
  422f1a:	jbe    0x4231b3
  422f20:	cmp    eax,0x1fc6
  422f25:	je     0x421b39
  422f2b:	cmp    eax,0x1ff6
  422f30:	jne    0x421a6c
  422f36:	jmp    0x421b39
  422f3b:	cmp    ebx,0xb56
  422f41:	je     0x422fd7
  422f47:	jbe    0x422fb3
  422f49:	cmp    ebx,0xbbe
  422f4f:	je     0x422fa0
  422f51:	cmp    ebx,0xbd7
  422f57:	je     0x422f85
  422f59:	cmp    ebx,0xb57
  422f5f:	jne    0x422d70
  422f65:	cmp    eax,0xb47
  422f6a:	je     0x421b39
  422f70:	jmp    0x421a6c
  422f75:	cmp    eax,0x9c7
  422f7a:	je     0x421b39
  422f80:	jmp    0x421a6c
  422f85:	cmp    eax,0xb92
  422f8a:	je     0x421b39
  422f90:	cmp    eax,0xbc6
  422f95:	jne    0x421a6c
  422f9b:	jmp    0x421b39
  422fa0:	sub    eax,0xbc6
  422fa5:	cmp    eax,0x1
  422fa8:	ja     0x421a6c
  422fae:	jmp    0x421b39
  422fb3:	cmp    ebx,0x9d7
  422fb9:	je     0x422fe7
  422fbb:	cmp    ebx,0xb3e
  422fc1:	jne    0x422d70
  422fc7:	cmp    eax,0xb47
  422fcc:	je     0x421b39
  422fd2:	jmp    0x421a6c
  422fd7:	cmp    eax,0xb47
  422fdc:	je     0x421b39
  422fe2:	jmp    0x421a6c
  422fe7:	cmp    eax,0x9c7
  422fec:	je     0x421b39
  422ff2:	jmp    0x421a6c
  422ff7:	cmp    eax,0x1f59
  422ffc:	je     0x421b39
  423002:	ja     0x4230db
  423008:	cmp    eax,0x1f09
  42300d:	ja     0x42309c
  423013:	cmp    eax,0x1f08
  423018:	jae    0x421b39
  42301e:	cmp    eax,0x3c5
  423023:	je     0x421b39
  423029:	ja     0x423073
  42302b:	cmp    eax,0x3b1
  423030:	je     0x421b39
  423036:	jbe    0x423063
  423038:	cmp    eax,0x3b7
  42303d:	je     0x421b39
  423043:	cmp    eax,0x3b9
  423048:	jne    0x421a6c
  42304e:	jmp    0x421b39
  423053:	cmp    eax,0x3b1
  423058:	jne    0x421a6c
  42305e:	jmp    0x421b39
  423063:	cmp    eax,0xa8
  423068:	jne    0x421a6c
  42306e:	jmp    0x421b39
  423073:	cmp    eax,0x3c9
  423078:	jb     0x421a6c
  42307e:	cmp    eax,0x3cb
  423083:	jbe    0x421b39
  423089:	sub    eax,0x1f00
  42308e:	cmp    eax,0x1
  423091:	ja     0x421a6c
  423097:	jmp    0x421b39
  42309c:	cmp    eax,0x1f31
  4230a1:	ja     0x42312c
  4230a7:	cmp    eax,0x1f30
  4230ac:	jae    0x421b39
  4230b2:	cmp    eax,0x1f20
  4230b7:	jb     0x421a6c
  4230bd:	cmp    eax,0x1f21
  4230c2:	jbe    0x421b39
  4230c8:	sub    eax,0x1f28
  4230cd:	cmp    eax,0x1
  4230d0:	ja     0x421a6c
  4230d6:	jmp    0x421b39
  4230db:	cmp    eax,0x1f99
  4230e0:	ja     0x42317e
  4230e6:	cmp    eax,0x1f98
  4230eb:	jae    0x421b39
  4230f1:	cmp    eax,0x1f81
  4230f6:	ja     0x423155
  4230f8:	cmp    eax,0x1f80
  4230fd:	jae    0x421b39
  423103:	cmp    eax,0x1f60
  423108:	jb     0x421a6c
  42310e:	cmp    eax,0x1f61
  423113:	jbe    0x421b39
  423119:	sub    eax,0x1f68
  42311e:	cmp    eax,0x1
  423121:	ja     0x421a6c
  423127:	jmp    0x421b39
  42312c:	cmp    eax,0x1f38
  423131:	jb     0x421a6c
  423137:	cmp    eax,0x1f39
  42313c:	jbe    0x421b39
  423142:	sub    eax,0x1f50
  423147:	cmp    eax,0x1
  42314a:	ja     0x421a6c
  423150:	jmp    0x421b39
  423155:	cmp    eax,0x1f88
  42315a:	jb     0x421a6c
  423160:	cmp    eax,0x1f89
  423165:	jbe    0x421b39
  42316b:	sub    eax,0x1f90
  423170:	cmp    eax,0x1
  423173:	ja     0x421a6c
  423179:	jmp    0x421b39
  42317e:	cmp    eax,0x1fb3
  423183:	je     0x421b39
  423189:	jbe    0x4231fc
  42318b:	cmp    eax,0x1fc3
  423190:	je     0x421b39
  423196:	jbe    0x4231ec
  423198:	cmp    eax,0x1ff3
  42319d:	je     0x421b39
  4231a3:	cmp    eax,0x1ffe
  4231a8:	jne    0x421a6c
  4231ae:	jmp    0x421b39
  4231b3:	cmp    eax,0x1f7c
  4231b8:	jne    0x421a6c
  4231be:	jmp    0x421b39
  4231c3:	cmp    eax,0x1f20
  4231c8:	jb     0x421a6c
  4231ce:	cmp    eax,0x1f2f
  4231d3:	jbe    0x421b39
  4231d9:	sub    eax,0x1f60
  4231de:	cmp    eax,0x10
  4231e1:	ja     0x421a6c
  4231e7:	jmp    0x421b39
  4231ec:	cmp    eax,0x1fbf
  4231f1:	jne    0x421a6c
  4231f7:	jmp    0x421b39
  4231fc:	cmp    eax,0x1fa0
  423201:	jb     0x421a6c
  423207:	cmp    eax,0x1fa1
  42320c:	jbe    0x421b39
  423212:	sub    eax,0x1fa8
  423217:	cmp    eax,0x1
  42321a:	ja     0x421a6c
  423220:	jmp    0x421b39
  423225:	cmp    ebx,0x30a
  42322b:	je     0x423a10
  423231:	jbe    0x4234fa
  423237:	cmp    ebx,0x30c
  42323d:	je     0x423372
  423243:	jb     0x42331c
  423249:	cmp    ebx,0x30f
  42324f:	jne    0x422d70
  423255:	cmp    eax,0x61
  423258:	je     0x421b39
  42325e:	ja     0x4232ed
  423264:	cmp    eax,0x49
  423267:	je     0x421b39
  42326d:	jbe    0x4232d6
  42326f:	cmp    eax,0x52
  423272:	je     0x421b39
  423278:	cmp    eax,0x55
  42327b:	je     0x421b39
  423281:	cmp    eax,0x4f
  423284:	jne    0x421a6c
  42328a:	jmp    0x421b39
  42328f:	cmp    eax,0x70
  423292:	ja     0x42347c
  423298:	cmp    eax,0x6d
  42329b:	jae    0x421b39
  4232a1:	cmp    eax,0x54
  4232a4:	ja     0x42334f
  4232aa:	cmp    eax,0x52
  4232ad:	jae    0x421b39
  4232b3:	cmp    eax,0x41
  4232b6:	jb     0x421a6c
  4232bc:	cmp    eax,0x49
  4232bf:	jbe    0x421b39
  4232c5:	sub    eax,0x4d
  4232c8:	cmp    eax,0x3
  4232cb:	ja     0x421a6c
  4232d1:	jmp    0x421b39
  4232d6:	cmp    eax,0x41
  4232d9:	je     0x421b39
  4232df:	cmp    eax,0x45
  4232e2:	jne    0x421a6c
  4232e8:	jmp    0x421b39
  4232ed:	cmp    eax,0x72
  4232f0:	je     0x421b39
  4232f6:	ja     0x4233ac
  4232fc:	cmp    eax,0x69
  4232ff:	je     0x421b39
  423305:	cmp    eax,0x6f
  423308:	je     0x421b39
  42330e:	cmp    eax,0x65
  423311:	jne    0x421a6c
  423317:	jmp    0x421b39
  42331c:	cmp    eax,0x6f
  42331f:	je     0x421b39
  423325:	jbe    0x4234b1
  42332b:	cmp    eax,0x423
  423330:	je     0x421b39
  423336:	cmp    eax,0x443
  42333b:	je     0x421b39
  423341:	cmp    eax,0x75
  423344:	jne    0x421a6c
  42334a:	jmp    0x421b39
  42334f:	cmp    eax,0x57
  423352:	jb     0x421a6c
  423358:	cmp    eax,0x5a
  42335b:	jbe    0x421b39
  423361:	sub    eax,0x61
  423364:	cmp    eax,0x7
  423367:	ja     0x421a6c
  42336d:	jmp    0x421b39
  423372:	cmp    eax,0x61
  423375:	je     0x421b39
  42337b:	jbe    0x423411
  423381:	cmp    eax,0x75
  423384:	jbe    0x4233e9
  423386:	cmp    eax,0xfc
  42338b:	je     0x421b39
  423391:	ja     0x4233ce
  423393:	cmp    eax,0x7a
  423396:	je     0x421b39
  42339c:	cmp    eax,0xdc
  4233a1:	jne    0x421a6c
  4233a7:	jmp    0x421b39
  4233ac:	cmp    eax,0x75
  4233af:	je     0x421b39
  4233b5:	jb     0x421a6c
  4233bb:	sub    eax,0x474
  4233c0:	cmp    eax,0x1
  4233c3:	ja     0x421a6c
  4233c9:	jmp    0x421b39
  4233ce:	cmp    eax,0x1b7
  4233d3:	je     0x421b39
  4233d9:	cmp    eax,0x292
  4233de:	jne    0x421a6c
  4233e4:	jmp    0x421b39
  4233e9:	cmp    eax,0x72
  4233ec:	jae    0x421b39
  4233f2:	cmp    eax,0x6c
  4233f5:	ja     0x42343b
  4233f7:	cmp    eax,0x67
  4233fa:	jae    0x421b39
  423400:	sub    eax,0x63
  423403:	cmp    eax,0x2
  423406:	ja     0x421a6c
  42340c:	jmp    0x421b39
  423411:	cmp    eax,0x4c
  423414:	ja     0x42345d
  423416:	cmp    eax,0x4b
  423419:	jae    0x421b39
  42341f:	cmp    eax,0x45
  423422:	ja     0x42344c
  423424:	cmp    eax,0x43
  423427:	jae    0x421b39
  42342d:	cmp    eax,0x41
  423430:	jne    0x421a6c
  423436:	jmp    0x421b39
  42343b:	sub    eax,0x6e
  42343e:	cmp    eax,0x1
  423441:	ja     0x421a6c
  423447:	jmp    0x421b39
  42344c:	sub    eax,0x47
  42344f:	cmp    eax,0x2
  423452:	ja     0x421a6c
  423458:	jmp    0x421b39
  42345d:	cmp    eax,0x55
  423460:	ja     0x4234c8
  423462:	cmp    eax,0x52
  423465:	jae    0x421b39
  42346b:	sub    eax,0x4e
  42346e:	cmp    eax,0x1
  423471:	ja     0x421a6c
  423477:	jmp    0x421b39
  42347c:	cmp    eax,0x15b
  423481:	ja     0x4234d6
  423483:	cmp    eax,0x15a
  423488:	jae    0x421b39
  42348e:	cmp    eax,0x72
  423491:	jb     0x421a6c
  423497:	cmp    eax,0x74
  42349a:	jbe    0x421b39
  4234a0:	sub    eax,0x77
  4234a3:	cmp    eax,0x3
  4234a6:	ja     0x421a6c
  4234ac:	jmp    0x421b39
  4234b1:	cmp    eax,0x4f
  4234b4:	je     0x421b39
  4234ba:	cmp    eax,0x55
  4234bd:	jne    0x421a6c
  4234c3:	jmp    0x421b39
  4234c8:	cmp    eax,0x5a
  4234cb:	jne    0x421a6c
  4234d1:	jmp    0x421b39
  4234d6:	cmp    eax,0x17f
  4234db:	je     0x421b39
  4234e1:	ja     0x424027
  4234e7:	sub    eax,0x160
  4234ec:	cmp    eax,0x1
  4234ef:	ja     0x421a6c
  4234f5:	jmp    0x421b39
  4234fa:	cmp    ebx,0x308
  423500:	je     0x423790
  423506:	cmp    ebx,0x309
  42350c:	jne    0x422d70
  423512:	cmp    eax,0x79
  423515:	je     0x421b39
  42351b:	ja     0x423757
  423521:	cmp    eax,0x59
  423524:	je     0x421b39
  42352a:	ja     0x423efb
  423530:	cmp    eax,0x49
  423533:	je     0x421b39
  423539:	ja     0x423740
  42353f:	cmp    eax,0x41
  423542:	je     0x421b39
  423548:	cmp    eax,0x45
  42354b:	jne    0x421a6c
  423551:	jmp    0x421b39
  423556:	cmp    eax,0xa8
  42355b:	je     0x421b39
  423561:	ja     0x42359e
  423563:	cmp    eax,0x77
  423566:	je     0x421b39
  42356c:	jb     0x421a6c
  423572:	sub    eax,0x79
  423575:	cmp    eax,0x1
  423578:	ja     0x421a6c
  42357e:	jmp    0x421b39
  423583:	cmp    eax,0xd4
  423588:	jae    0x421b39
  42358e:	cmp    eax,0xcf
  423593:	jne    0x421a6c
  423599:	jmp    0x421b39
  42359e:	cmp    eax,0xc2
  4235a3:	je     0x421b39
  4235a9:	jb     0x421a6c
  4235af:	sub    eax,0xc5
  4235b4:	cmp    eax,0x2
  4235b7:	ja     0x421a6c
  4235bd:	jmp    0x421b39
  4235c2:	cmp    eax,0xf5
  4235c7:	ja     0x423626
  4235c9:	cmp    eax,0xf4
  4235ce:	jae    0x421b39
  4235d4:	cmp    eax,0xea
  4235d9:	je     0x421b39
  4235df:	cmp    eax,0xef
  4235e4:	jne    0x421a6c
  4235ea:	jmp    0x421b39
  4235ef:	cmp    eax,0x1a1
  4235f4:	ja     0x423654
  4235f6:	cmp    eax,0x1a0
  4235fb:	jae    0x421b39
  423601:	cmp    eax,0x14d
  423606:	ja     0x423641
  423608:	cmp    eax,0x14c
  42360d:	jae    0x421b39
  423613:	sub    eax,0x112
  423618:	cmp    eax,0x1
  42361b:	ja     0x421a6c
  423621:	jmp    0x421b39
  423626:	cmp    eax,0xf8
  42362b:	je     0x421b39
  423631:	cmp    eax,0xfc
  423636:	jne    0x421a6c
  42363c:	jmp    0x421b39
  423641:	sub    eax,0x168
  423646:	cmp    eax,0x1
  423649:	ja     0x421a6c
  42364f:	jmp    0x421b39
  423654:	cmp    eax,0x391
  423659:	je     0x421b39
  42365f:	jbe    0x42404d
  423665:	cmp    eax,0x397
  42366a:	je     0x421b39
  423670:	cmp    eax,0x399
  423675:	je     0x421b39
  42367b:	cmp    eax,0x395
  423680:	jne    0x421a6c
  423686:	jmp    0x421b39
  42368b:	cmp    ebx,0x326
  423691:	je     0x4243f1
  423697:	ja     0x4242fe
  42369d:	cmp    ebx,0x31b
  4236a3:	je     0x4240eb
  4236a9:	jbe    0x424089
  4236af:	cmp    ebx,0x324
  4236b5:	je     0x423e7c
  4236bb:	ja     0x423e37
  4236c1:	cmp    ebx,0x323
  4236c7:	jne    0x422d70
  4236cd:	cmp    eax,0x17e
  4236d2:	ja     0x423a8a
  4236d8:	cmp    eax,0x174
  4236dd:	jae    0x421b39
  4236e3:	cmp    eax,0xf6
  4236e8:	ja     0x423a35
  4236ee:	cmp    eax,0xf1
  4236f3:	jae    0x421b39
  4236f9:	cmp    eax,0x69
  4236fc:	ja     0x423f64
  423702:	cmp    eax,0x68
  423705:	jae    0x421b39
  42370b:	cmp    eax,0x4f
  42370e:	ja     0x423f45
  423714:	cmp    eax,0x4b
  423717:	jae    0x421b39
  42371d:	cmp    eax,0x45
  423720:	ja     0x423f1d
  423726:	cmp    eax,0x44
  423729:	jae    0x421b39
  42372f:	sub    eax,0x41
  423732:	cmp    eax,0x1
  423735:	ja     0x421a6c
  42373b:	jmp    0x421b39
  423740:	cmp    eax,0x4f
  423743:	je     0x421b39
  423749:	cmp    eax,0x55
  42374c:	jne    0x421a6c
  423752:	jmp    0x421b39
  423757:	cmp    eax,0xf4
  42375c:	je     0x421b39
  423762:	ja     0x4237f9
  423768:	cmp    eax,0xd4
  42376d:	je     0x421b39
  423773:	ja     0x4237de
  423775:	cmp    eax,0xc2
  42377a:	je     0x421b39
  423780:	cmp    eax,0xca
  423785:	jne    0x421a6c
  42378b:	jmp    0x421b39
  423790:	cmp    eax,0x3b9
  423795:	je     0x421b39
  42379b:	ja     0x42386c
  4237a1:	cmp    eax,0x69
  4237a4:	ja     0x423839
  4237aa:	cmp    eax,0x68
  4237ad:	jae    0x421b39
  4237b3:	cmp    eax,0x4f
  4237b6:	je     0x421b39
  4237bc:	jbe    0x4238da
  4237c2:	cmp    eax,0x59
  4237c5:	ja     0x423822
  4237c7:	cmp    eax,0x57
  4237ca:	jae    0x421b39
  4237d0:	cmp    eax,0x55
  4237d3:	jne    0x421a6c
  4237d9:	jmp    0x421b39
  4237de:	cmp    eax,0xe2
  4237e3:	je     0x421b39
  4237e9:	cmp    eax,0xea
  4237ee:	jne    0x421a6c
  4237f4:	jmp    0x421b39
  4237f9:	cmp    eax,0x1a1
  4237fe:	ja     0x4238f3
  423804:	cmp    eax,0x1a0
  423809:	jae    0x421b39
  42380f:	sub    eax,0x102
  423814:	cmp    eax,0x1
  423817:	ja     0x421a6c
  42381d:	jmp    0x421b39
  423822:	cmp    eax,0x61
  423825:	je     0x421b39
  42382b:	cmp    eax,0x65
  42382e:	jne    0x421a6c
  423834:	jmp    0x421b39
  423839:	cmp    eax,0xd5
  42383e:	je     0x421b39
  423844:	jbe    0x423917
  42384a:	cmp    eax,0x16b
  42384f:	ja     0x4238bf
  423851:	cmp    eax,0x16a
  423856:	jae    0x421b39
  42385c:	cmp    eax,0xf5
  423861:	jne    0x421a6c
  423867:	jmp    0x421b39
  42386c:	cmp    eax,0x430
  423871:	je     0x421b39
  423877:	ja     0x42397c
  42387d:	cmp    eax,0x418
  423882:	ja     0x423954
  423888:	cmp    eax,0x415
  42388d:	jae    0x421b39
  423893:	cmp    eax,0x3d2
  423898:	je     0x421b39
  42389e:	jbe    0x423933
  4238a4:	cmp    eax,0x406
  4238a9:	je     0x421b39
  4238af:	cmp    eax,0x410
  4238b4:	jne    0x421a6c
  4238ba:	jmp    0x421b39
  4238bf:	cmp    eax,0x399
  4238c4:	je     0x421b39
  4238ca:	cmp    eax,0x3a5
  4238cf:	jne    0x421a6c
  4238d5:	jmp    0x421b39
  4238da:	cmp    eax,0x45
  4238dd:	je     0x421b39
  4238e3:	ja     0x423906
  4238e5:	cmp    eax,0x41
  4238e8:	jne    0x421a6c
  4238ee:	jmp    0x421b39
  4238f3:	sub    eax,0x1af
  4238f8:	cmp    eax,0x1
  4238fb:	ja     0x421a6c
  423901:	jmp    0x421b39
  423906:	sub    eax,0x48
  423909:	cmp    eax,0x1
  42390c:	ja     0x421a6c
  423912:	jmp    0x421b39
  423917:	cmp    eax,0x75
  42391a:	ja     0x423943
  42391c:	cmp    eax,0x74
  42391f:	jae    0x421b39
  423925:	cmp    eax,0x6f
  423928:	jne    0x421a6c
  42392e:	jmp    0x421b39
  423933:	cmp    eax,0x3c5
  423938:	jne    0x421a6c
  42393e:	jmp    0x421b39
  423943:	sub    eax,0x77
  423946:	cmp    eax,0x2
  423949:	ja     0x421a6c
  42394f:	jmp    0x421b39
  423954:	cmp    eax,0x427
  423959:	je     0x421b39
  42395f:	ja     0x4239b1
  423961:	cmp    eax,0x41e
  423966:	je     0x421b39
  42396c:	cmp    eax,0x423
  423971:	jne    0x421a6c
  423977:	jmp    0x421b39
  42397c:	cmp    eax,0x44b
  423981:	je     0x421b39
  423987:	ja     0x4239df
  423989:	cmp    eax,0x43e
  42398e:	je     0x421b39
  423994:	jbe    0x4239cc
  423996:	cmp    eax,0x443
  42399b:	je     0x421b39
  4239a1:	cmp    eax,0x447
  4239a6:	jne    0x421a6c
  4239ac:	jmp    0x421b39
  4239b1:	cmp    eax,0x42b
  4239b6:	je     0x421b39
  4239bc:	cmp    eax,0x42d
  4239c1:	jne    0x421a6c
  4239c7:	jmp    0x421b39
  4239cc:	sub    eax,0x435
  4239d1:	cmp    eax,0x3
  4239d4:	ja     0x421a6c
  4239da:	jmp    0x421b39
  4239df:	cmp    eax,0x4d9
  4239e4:	ja     0x42403a
  4239ea:	cmp    eax,0x4d8
  4239ef:	jae    0x421b39
  4239f5:	cmp    eax,0x44d
  4239fa:	je     0x421b39
  423a00:	cmp    eax,0x456
  423a05:	jne    0x421a6c
  423a0b:	jmp    0x421b39
  423a10:	sub    eax,0x41
  423a13:	cmp    eax,0x38
  423a16:	ja     0x421a6c
  423a1c:	movabs rdx,0x150000100100001
  423a26:	bt     rdx,rax
  423a2a:	jae    0x421a6c
  423a30:	jmp    0x421b39
  423a35:	cmp    eax,0x13e
  423a3a:	ja     0x423da0
  423a40:	cmp    eax,0x13d
  423a45:	jae    0x421b39
  423a4b:	cmp    eax,0x11b
  423a50:	ja     0x423d7b
  423a56:	cmp    eax,0x11a
  423a5b:	jae    0x421b39
  423a61:	cmp    eax,0x103
  423a66:	ja     0x423aed
  423a6c:	cmp    eax,0xff
  423a71:	jae    0x421b39
  423a77:	sub    eax,0xf9
  423a7c:	cmp    eax,0x4
  423a7f:	ja     0x421a6c
  423a85:	jmp    0x421b39
  423a8a:	cmp    eax,0x1e45
  423a8f:	ja     0x423b91
  423a95:	cmp    eax,0x1e44
  423a9a:	jae    0x421b39
  423aa0:	cmp    eax,0x227
  423aa5:	ja     0x423b52
  423aab:	cmp    eax,0x226
  423ab0:	jae    0x421b39
  423ab6:	cmp    eax,0x1e1
  423abb:	ja     0x423b29
  423abd:	cmp    eax,0x1de
  423ac2:	jae    0x421b39
  423ac8:	cmp    eax,0x1b0
  423acd:	ja     0x423b16
  423acf:	cmp    eax,0x1af
  423ad4:	jae    0x421b39
  423ada:	sub    eax,0x1a0
  423adf:	cmp    eax,0x1
  423ae2:	ja     0x421a6c
  423ae8:	jmp    0x421b39
  423aed:	cmp    eax,0x10e
  423af2:	jb     0x421a6c
  423af8:	cmp    eax,0x10f
  423afd:	jbe    0x421b39
  423b03:	sub    eax,0x112
  423b08:	cmp    eax,0x5
  423b0b:	ja     0x421a6c
  423b11:	jmp    0x421b39
  423b16:	sub    eax,0x1cd
  423b1b:	cmp    eax,0xf
  423b1e:	ja     0x421a6c
  423b24:	jmp    0x421b39
  423b29:	cmp    eax,0x1fb
  423b2e:	ja     0x423bde
  423b34:	cmp    eax,0x1f8
  423b39:	jae    0x421b39
  423b3f:	sub    eax,0x1e8
  423b44:	cmp    eax,0x1
  423b47:	ja     0x421a6c
  423b4d:	jmp    0x421b39
  423b52:	cmp    eax,0x1e17
  423b57:	ja     0x423d04
  423b5d:	cmp    eax,0x1e14
  423b62:	jae    0x421b39
  423b68:	cmp    eax,0x1e03
  423b6d:	ja     0x423cf1
  423b73:	cmp    eax,0x1e02
  423b78:	jae    0x421b39
  423b7e:	sub    eax,0x22a
  423b83:	cmp    eax,0x9
  423b86:	ja     0x421a6c
  423b8c:	jmp    0x421b39
  423b91:	cmp    eax,0x1e99
  423b96:	ja     0x423c3f
  423b9c:	cmp    eax,0x1e97
  423ba1:	jae    0x421b39
  423ba7:	cmp    eax,0x1e67
  423bac:	ja     0x423c1a
  423bae:	cmp    eax,0x1e64
  423bb3:	jae    0x421b39
  423bb9:	cmp    eax,0x1e59
  423bbe:	ja     0x423c07
  423bc0:	cmp    eax,0x1e58
  423bc5:	jae    0x421b39
  423bcb:	sub    eax,0x1e4c
  423bd0:	cmp    eax,0x7
  423bd3:	ja     0x421a6c
  423bd9:	jmp    0x421b39
  423bde:	cmp    eax,0x200
  423be3:	jb     0x421a6c
  423be9:	cmp    eax,0x217
  423bee:	jbe    0x421b39
  423bf4:	sub    eax,0x21e
  423bf9:	cmp    eax,0x1
  423bfc:	ja     0x421a6c
  423c02:	jmp    0x421b39
  423c07:	sub    eax,0x1e60
  423c0c:	cmp    eax,0x1
  423c0f:	ja     0x421a6c
  423c15:	jmp    0x421b39
  423c1a:	cmp    eax,0x1e7d
  423c1f:	ja     0x423c7a
  423c21:	cmp    eax,0x1e78
  423c26:	jae    0x421b39
  423c2c:	sub    eax,0x1e6a
  423c31:	cmp    eax,0x1
  423c34:	ja     0x421a6c
  423c3a:	jmp    0x421b39
  423c3f:	cmp    eax,0x1ed7
  423c44:	ja     0x423ccc
  423c4a:	cmp    eax,0x1ece
  423c4f:	jae    0x421b39
  423c55:	cmp    eax,0x1eb5
  423c5a:	ja     0x423ca3
  423c5c:	cmp    eax,0x1eae
  423c61:	jae    0x421b39
  423c67:	sub    eax,0x1ea2
  423c6c:	cmp    eax,0x9
  423c6f:	ja     0x421a6c
  423c75:	jmp    0x421b39
  423c7a:	cmp    eax,0x1e80
  423c7f:	jb     0x421a6c
  423c85:	cmp    eax,0x1e87
  423c8a:	jbe    0x421b39
  423c90:	sub    eax,0x1e8e
  423c95:	cmp    eax,0x3
  423c98:	ja     0x421a6c
  423c9e:	jmp    0x421b39
  423ca3:	cmp    eax,0x1eba
  423ca8:	jb     0x421a6c
  423cae:	cmp    eax,0x1ec5
  423cb3:	jbe    0x421b39
  423cb9:	sub    eax,0x1ec8
  423cbe:	cmp    eax,0x1
  423cc1:	ja     0x421a6c
  423cc7:	jmp    0x421b39
  423ccc:	cmp    eax,0x1eef
  423cd1:	ja     0x423d29
  423cd3:	cmp    eax,0x1ee6
  423cd8:	jae    0x421b39
  423cde:	sub    eax,0x1eda
  423ce3:	cmp    eax,0x7
  423ce6:	ja     0x421a6c
  423cec:	jmp    0x421b39
  423cf1:	sub    eax,0x1e0a
  423cf6:	cmp    eax,0x1
  423cf9:	ja     0x421a6c
  423cff:	jmp    0x421b39
  423d04:	cmp    eax,0x1e27
  423d09:	ja     0x423d52
  423d0b:	cmp    eax,0x1e26
  423d10:	jae    0x421b39
  423d16:	sub    eax,0x1e22
  423d1b:	cmp    eax,0x1
  423d1e:	ja     0x421a6c
  423d24:	jmp    0x421b39
  423d29:	cmp    eax,0x1ef2
  423d2e:	jb     0x421a6c
  423d34:	cmp    eax,0x1ef3
  423d39:	jbe    0x421b39
  423d3f:	sub    eax,0x1ef6
  423d44:	cmp    eax,0x3
  423d47:	ja     0x421a6c
  423d4d:	jmp    0x421b39
  423d52:	cmp    eax,0x1e2e
  423d57:	jb     0x421a6c
  423d5d:	cmp    eax,0x1e31
  423d62:	jbe    0x421b39
  423d68:	sub    eax,0x1e3e
  423d6d:	cmp    eax,0x3
  423d70:	ja     0x421a6c
  423d76:	jmp    0x421b39
  423d7b:	cmp    eax,0x12d
  423d80:	ja     0x423dd7
  423d82:	cmp    eax,0x128
  423d87:	jae    0x421b39
  423d8d:	sub    eax,0x124
  423d92:	cmp    eax,0x1
  423d95:	ja     0x421a6c
  423d9b:	jmp    0x421b39
  423da0:	cmp    eax,0x155
  423da5:	ja     0x423e0e
  423da7:	cmp    eax,0x154
  423dac:	jae    0x421b39
  423db2:	cmp    eax,0x148
  423db7:	ja     0x423dfb
  423db9:	cmp    eax,0x147
  423dbe:	jae    0x421b39
  423dc4:	sub    eax,0x143
  423dc9:	cmp    eax,0x1
  423dcc:	ja     0x421a6c
  423dd2:	jmp    0x421b39
  423dd7:	cmp    eax,0x130
  423ddc:	je     0x421b39
  423de2:	jb     0x421a6c
  423de8:	sub    eax,0x139
  423ded:	cmp    eax,0x1
  423df0:	ja     0x421a6c
  423df6:	jmp    0x421b39
  423dfb:	sub    eax,0x14c
  423e00:	cmp    eax,0x5
  423e03:	ja     0x421a6c
  423e09:	jmp    0x421b39
  423e0e:	cmp    eax,0x161
  423e13:	ja     0x423ebf
  423e19:	cmp    eax,0x160
  423e1e:	jae    0x421b39
  423e24:	sub    eax,0x158
  423e29:	cmp    eax,0x5
  423e2c:	ja     0x421a6c
  423e32:	jmp    0x421b39
  423e37:	cmp    eax,0x1e1
  423e3c:	ja     0x4242bf
  423e42:	cmp    eax,0x1de
  423e47:	jae    0x421b39
  423e4d:	cmp    eax,0xe5
  423e52:	ja     0x424296
  423e58:	cmp    eax,0xe0
  423e5d:	jae    0x421b39
  423e63:	cmp    eax,0x61
  423e66:	je     0x421b39
  423e6c:	ja     0x423ee8
  423e6e:	cmp    eax,0x41
  423e71:	jne    0x421a6c
  423e77:	jmp    0x421b39
  423e7c:	cmp    eax,0x171
  423e81:	ja     0x42437a
  423e87:	cmp    eax,0x168
  423e8c:	jae    0x421b39
  423e92:	cmp    eax,0xdc
  423e97:	ja     0x424367
  423e9d:	cmp    eax,0xd9
  423ea2:	jae    0x421b39
  423ea8:	cmp    eax,0x55
  423eab:	je     0x421b39
  423eb1:	cmp    eax,0x75
  423eb4:	jne    0x421a6c
  423eba:	jmp    0x421b39
  423ebf:	cmp    eax,0x164
  423ec4:	jb     0x421a6c
  423eca:	cmp    eax,0x165
  423ecf:	jbe    0x421b39
  423ed5:	sub    eax,0x168
  423eda:	cmp    eax,0x9
  423edd:	ja     0x421a6c
  423ee3:	jmp    0x421b39
  423ee8:	sub    eax,0xc0
  423eed:	cmp    eax,0x5
  423ef0:	ja     0x421a6c
  423ef6:	jmp    0x421b39
  423efb:	cmp    eax,0x69
  423efe:	je     0x421b39
  423f04:	ja     0x423f2e
  423f06:	cmp    eax,0x61
  423f09:	je     0x421b39
  423f0f:	cmp    eax,0x65
  423f12:	jne    0x421a6c
  423f18:	jmp    0x421b39
  423f1d:	sub    eax,0x48
  423f20:	cmp    eax,0x1
  423f23:	ja     0x421a6c
  423f29:	jmp    0x421b39
  423f2e:	cmp    eax,0x6f
  423f31:	je     0x421b39
  423f37:	cmp    eax,0x75
  423f3a:	jne    0x421a6c
  423f40:	jmp    0x421b39
  423f45:	cmp    eax,0x5a
  423f48:	ja     0x423f95
  423f4a:	cmp    eax,0x59
  423f4d:	jae    0x421b39
  423f53:	sub    eax,0x52
  423f56:	cmp    eax,0x5
  423f59:	ja     0x421a6c
  423f5f:	jmp    0x421b39
  423f64:	cmp    eax,0xcf
  423f69:	ja     0x423fdd
  423f6b:	cmp    eax,0xc8
  423f70:	jae    0x421b39
  423f76:	cmp    eax,0x77
  423f79:	ja     0x423fb8
  423f7b:	cmp    eax,0x72
  423f7e:	jae    0x421b39
  423f84:	sub    eax,0x6b
  423f87:	cmp    eax,0x4
  423f8a:	ja     0x421a6c
  423f90:	jmp    0x421b39
  423f95:	cmp    eax,0x61
  423f98:	jb     0x421a6c
  423f9e:	cmp    eax,0x62
  423fa1:	jbe    0x421b39
  423fa7:	sub    eax,0x64
  423faa:	cmp    eax,0x1
  423fad:	ja     0x421a6c
  423fb3:	jmp    0x421b39
  423fb8:	cmp    eax,0x79
  423fbb:	jb     0x421a6c
  423fc1:	cmp    eax,0x7a
  423fc4:	jbe    0x421b39
  423fca:	sub    eax,0xc0
  423fcf:	cmp    eax,0x5
  423fd2:	ja     0x421a6c
  423fd8:	jmp    0x421b39
  423fdd:	cmp    eax,0xdd
  423fe2:	ja     0x424060
  423fe4:	cmp    eax,0xd9
  423fe9:	jae    0x421b39
  423fef:	sub    eax,0xd1
  423ff4:	cmp    eax,0x5
  423ff7:	ja     0x421a6c
  423ffd:	jmp    0x421b39
  424002:	sub    eax,0x41
  424005:	cmp    eax,0x34
  424008:	ja     0x421a6c
  42400e:	movabs rdx,0x12411100124111
  424018:	bt     rdx,rax
  42401c:	jae    0x421a6c
  424022:	jmp    0x421b39
  424027:	sub    eax,0x1e62
  42402c:	cmp    eax,0x1
  42402f:	ja     0x421a6c
  424035:	jmp    0x421b39
  42403a:	sub    eax,0x4e8
  42403f:	cmp    eax,0x1
  424042:	ja     0x421a6c
  424048:	jmp    0x421b39
  42404d:	sub    eax,0x1af
  424052:	cmp    eax,0x1
  424055:	ja     0x421a6c
  42405b:	jmp    0x421b39
  424060:	cmp    eax,0xe0
  424065:	jb     0x421a6c
  42406b:	cmp    eax,0xe5
  424070:	jbe    0x421b39
  424076:	sub    eax,0xe8
  42407b:	cmp    eax,0x7
  42407e:	ja     0x421a6c
  424084:	jmp    0x421b39
  424089:	cmp    ebx,0x313
  42408f:	je     0x4243a3
  424095:	cmp    ebx,0x314
  42409b:	jne    0x422d70
  4240a1:	cmp    eax,0x3b7
  4240a6:	je     0x421b39
  4240ac:	ja     0x424259
  4240b2:	cmp    eax,0x39f
  4240b7:	je     0x421b39
  4240bd:	ja     0x424149
  4240c3:	cmp    eax,0x395
  4240c8:	je     0x421b39
  4240ce:	jbe    0x424139
  4240d0:	cmp    eax,0x397
  4240d5:	je     0x421b39
  4240db:	cmp    eax,0x399
  4240e0:	jne    0x421a6c
  4240e6:	jmp    0x421b39
  4240eb:	cmp    eax,0x171
  4240f0:	ja     0x4241d3
  4240f6:	cmp    eax,0x168
  4240fb:	jae    0x421b39
  424101:	cmp    eax,0xdc
  424106:	ja     0x4241ae
  42410c:	cmp    eax,0xd9
  424111:	jae    0x421b39
  424117:	cmp    eax,0x6f
  42411a:	je     0x421b39
  424120:	ja     0x424171
  424122:	cmp    eax,0x4f
  424125:	je     0x421b39
  42412b:	cmp    eax,0x55
  42412e:	jne    0x421a6c
  424134:	jmp    0x421b39
  424139:	cmp    eax,0x391
  42413e:	jne    0x421a6c
  424144:	jmp    0x421b39
  424149:	cmp    eax,0x3a9
  42414e:	je     0x421b39
  424154:	ja     0x424193
  424156:	cmp    eax,0x3a1
  42415b:	je     0x421b39
  424161:	cmp    eax,0x3a5
  424166:	jne    0x421a6c
  42416c:	jmp    0x421b39
  424171:	cmp    eax,0x75
  424174:	je     0x421b39
  42417a:	jb     0x421a6c
  424180:	sub    eax,0xd2
  424185:	cmp    eax,0x4
  424188:	ja     0x421a6c
  42418e:	jmp    0x421b39
  424193:	cmp    eax,0x3b1
  424198:	je     0x421b39
  42419e:	cmp    eax,0x3b5
  4241a3:	jne    0x421a6c
  4241a9:	jmp    0x421b39
  4241ae:	cmp    eax,0xfc
  4241b3:	ja     0x42420a
  4241b5:	cmp    eax,0xf9
  4241ba:	jae    0x421b39
  4241c0:	sub    eax,0xf2
  4241c5:	cmp    eax,0x4
  4241c8:	ja     0x421a6c
  4241ce:	jmp    0x421b39
  4241d3:	cmp    eax,0x231
  4241d8:	ja     0x424230
  4241da:	cmp    eax,0x22a
  4241df:	jae    0x421b39
  4241e5:	cmp    eax,0x20f
  4241ea:	ja     0x42421d
  4241ec:	cmp    eax,0x20c
  4241f1:	jae    0x421b39
  4241f7:	sub    eax,0x1d1
  4241fc:	cmp    eax,0xb
  4241ff:	ja     0x421a6c
  424205:	jmp    0x421b39
  42420a:	sub    eax,0x14c
  42420f:	cmp    eax,0x5
  424212:	ja     0x421a6c
  424218:	jmp    0x421b39
  42421d:	sub    eax,0x214
  424222:	cmp    eax,0x3
  424225:	ja     0x421a6c
  42422b:	jmp    0x421b39
  424230:	cmp    eax,0x1e7b
  424235:	ja     0x424426
  42423b:	cmp    eax,0x1e72
  424240:	jae    0x421b39
  424246:	sub    eax,0x1e4c
  42424b:	cmp    eax,0x7
  42424e:	ja     0x421a6c
  424254:	jmp    0x421b39
  424259:	cmp    eax,0x1fb3
  42425e:	je     0x421b39
  424264:	ja     0x424604
  42426a:	cmp    eax,0x3c1
  42426f:	je     0x421b39
  424275:	ja     0x4245e9
  42427b:	cmp    eax,0x3b9
  424280:	je     0x421b39
  424286:	cmp    eax,0x3bf
  42428b:	jne    0x421a6c
  424291:	jmp    0x421b39
  424296:	cmp    eax,0x100
  42429b:	jb     0x421a6c
  4242a1:	cmp    eax,0x103
  4242a6:	jbe    0x421b39
  4242ac:	sub    eax,0x1cd
  4242b1:	cmp    eax,0x1
  4242b4:	ja     0x421a6c
  4242ba:	jmp    0x421b39
  4242bf:	cmp    eax,0x227
  4242c4:	ja     0x4244ca
  4242ca:	cmp    eax,0x226
  4242cf:	jae    0x421b39
  4242d5:	cmp    eax,0x1fa
  4242da:	jb     0x421a6c
  4242e0:	cmp    eax,0x1fb
  4242e5:	jbe    0x421b39
  4242eb:	sub    eax,0x200
  4242f0:	cmp    eax,0x3
  4242f3:	ja     0x421a6c
  4242f9:	jmp    0x421b39
  4242fe:	cmp    ebx,0x32d
  424304:	je     0x4248ca
  42430a:	jbe    0x42484d
  424310:	cmp    ebx,0x330
  424316:	je     0x4246dc
  42431c:	cmp    ebx,0x331
  424322:	je     0x424683
  424328:	cmp    ebx,0x32e
  42432e:	jne    0x422d70
  424334:	cmp    eax,0x21f
  424339:	ja     0x42463f
  42433f:	cmp    eax,0x21e
  424344:	jae    0x421b39
  42434a:	cmp    eax,0x68
  42434d:	je     0x421b39
  424353:	ja     0x42462c
  424359:	cmp    eax,0x48
  42435c:	jne    0x421a6c
  424362:	jmp    0x421b39
  424367:	sub    eax,0xf9
  42436c:	cmp    eax,0x3
  42436f:	ja     0x421a6c
  424375:	jmp    0x421b39
  42437a:	cmp    eax,0x217
  42437f:	ja     0x42444f
  424385:	cmp    eax,0x214
  42438a:	jae    0x421b39
  424390:	sub    eax,0x1d3
  424395:	cmp    eax,0x9
  424398:	ja     0x421a6c
  42439e:	jmp    0x421b39
  4243a3:	cmp    eax,0x3b9
  4243a8:	je     0x421b39
  4243ae:	ja     0x42451b
  4243b4:	cmp    eax,0x39f
  4243b9:	je     0x421b39
  4243bf:	ja     0x4244f3
  4243c5:	cmp    eax,0x395
  4243ca:	je     0x421b39
  4243d0:	jbe    0x424598
  4243d6:	cmp    eax,0x397
  4243db:	je     0x421b39
  4243e1:	cmp    eax,0x399
  4243e6:	jne    0x421a6c
  4243ec:	jmp    0x421b39
  4243f1:	cmp    eax,0x165
  4243f6:	ja     0x4244a1
  4243fc:	cmp    eax,0x164
  424401:	jae    0x421b39
  424407:	cmp    eax,0x74
  42440a:	ja     0x424478
  42440c:	cmp    eax,0x73
  42440f:	jae    0x421b39
  424415:	sub    eax,0x53
  424418:	cmp    eax,0x1
  42441b:	ja     0x421a6c
  424421:	jmp    0x421b39
  424426:	cmp    eax,0x1ecc
  42442b:	jb     0x421a6c
  424431:	cmp    eax,0x1ed9
  424436:	jbe    0x421b39
  42443c:	sub    eax,0x1ee4
  424441:	cmp    eax,0x3
  424444:	ja     0x421a6c
  42444a:	jmp    0x421b39
  42444f:	cmp    eax,0x1e78
  424454:	jb     0x421a6c
  42445a:	cmp    eax,0x1e7b
  42445f:	jbe    0x421b39
  424465:	sub    eax,0x1ee6
  42446a:	cmp    eax,0x1
  42446d:	ja     0x421a6c
  424473:	jmp    0x421b39
  424478:	cmp    eax,0x15a
  42447d:	jb     0x421a6c
  424483:	cmp    eax,0x15d
  424488:	jbe    0x421b39
  42448e:	sub    eax,0x160
  424493:	cmp    eax,0x1
  424496:	ja     0x421a6c
  42449c:	jmp    0x421b39
  4244a1:	cmp    eax,0x1e67
  4244a6:	ja     0x4245a8
  4244ac:	cmp    eax,0x1e64
  4244b1:	jae    0x421b39
  4244b7:	sub    eax,0x1e60
  4244bc:	cmp    eax,0x1
  4244bf:	ja     0x421a6c
  4244c5:	jmp    0x421b39
  4244ca:	cmp    eax,0x1ea2
  4244cf:	jb     0x421a6c
  4244d5:	cmp    eax,0x1eab
  4244da:	jbe    0x421b39
  4244e0:	sub    eax,0x1eae
  4244e5:	cmp    eax,0x7
  4244e8:	ja     0x421a6c
  4244ee:	jmp    0x421b39
  4244f3:	cmp    eax,0x3b1
  4244f8:	je     0x421b39
  4244fe:	jbe    0x424550
  424500:	cmp    eax,0x3b5
  424505:	je     0x421b39
  42450b:	cmp    eax,0x3b7
  424510:	jne    0x421a6c
  424516:	jmp    0x421b39
  42451b:	cmp    eax,0x1fb3
  424520:	je     0x421b39
  424526:	ja     0x424570
  424528:	cmp    eax,0x3c1
  42452d:	je     0x421b39
  424533:	jbe    0x424560
  424535:	cmp    eax,0x3c5
  42453a:	je     0x421b39
  424540:	cmp    eax,0x3c9
  424545:	jne    0x421a6c
  42454b:	jmp    0x421b39
  424550:	cmp    eax,0x3a9
  424555:	jne    0x421a6c
  42455b:	jmp    0x421b39
  424560:	cmp    eax,0x3bf
  424565:	jne    0x421a6c
  42456b:	jmp    0x421b39
  424570:	cmp    eax,0x1fcc
  424575:	je     0x421b39
  42457b:	ja     0x4245ce
  42457d:	cmp    eax,0x1fbc
  424582:	je     0x421b39
  424588:	cmp    eax,0x1fc3
  42458d:	jne    0x421a6c
  424593:	jmp    0x421b39
  424598:	cmp    eax,0x391
  42459d:	jne    0x421a6c
  4245a3:	jmp    0x421b39
  4245a8:	cmp    eax,0x1e6a
  4245ad:	jb     0x421a6c
  4245b3:	cmp    eax,0x1e6b
  4245b8:	jbe    0x421b39
  4245be:	cmp    eax,0x1e97
  4245c3:	jne    0x421a6c
  4245c9:	jmp    0x421b39
  4245ce:	cmp    eax,0x1ff3
  4245d3:	je     0x421b39
  4245d9:	cmp    eax,0x1ffc
  4245de:	jne    0x421a6c
  4245e4:	jmp    0x421b39
  4245e9:	cmp    eax,0x3c5
  4245ee:	je     0x421b39
  4245f4:	cmp    eax,0x3c9
  4245f9:	jne    0x421a6c
  4245ff:	jmp    0x421b39
  424604:	cmp    eax,0x1fcc
  424609:	je     0x421b39
  42460f:	ja     0x424668
  424611:	cmp    eax,0x1fbc
  424616:	je     0x421b39
  42461c:	cmp    eax,0x1fc3
  424621:	jne    0x421a6c
  424627:	jmp    0x421b39
  42462c:	sub    eax,0x124
  424631:	cmp    eax,0x1
  424634:	ja     0x421a6c
  42463a:	jmp    0x421b39
  42463f:	cmp    eax,0x1e22
  424644:	jb     0x421a6c
  42464a:	cmp    eax,0x1e23
  42464f:	jbe    0x421b39
  424655:	sub    eax,0x1e26
  42465a:	cmp    eax,0x1
  42465d:	ja     0x421a6c
  424663:	jmp    0x421b39
  424668:	cmp    eax,0x1ff3
  42466d:	je     0x421b39
  424673:	cmp    eax,0x1ffc
  424678:	jne    0x421a6c
  42467e:	jmp    0x421b39
  424683:	cmp    eax,0x155
  424688:	ja     0x4247d2
  42468e:	cmp    eax,0x154
  424693:	jae    0x421b39
  424699:	cmp    eax,0x72
  42469c:	je     0x421b39
  4246a2:	ja     0x42478d
  4246a8:	cmp    eax,0x54
  4246ab:	je     0x421b39
  4246b1:	ja     0x424750
  4246b7:	cmp    eax,0x4c
  4246ba:	ja     0x424739
  4246bc:	cmp    eax,0x4b
  4246bf:	jae    0x421b39
  4246c5:	cmp    eax,0x42
  4246c8:	je     0x421b39
  4246ce:	cmp    eax,0x44
  4246d1:	jne    0x421a6c
  4246d7:	jmp    0x421b39
  4246dc:	cmp    eax,0x171
  4246e1:	ja     0x425153
  4246e7:	cmp    eax,0x168
  4246ec:	jae    0x421b39
  4246f2:	cmp    eax,0xef
  4246f7:	ja     0x42509e
  4246fd:	cmp    eax,0xe8
  424702:	jae    0x421b39
  424708:	cmp    eax,0x69
  42470b:	je     0x421b39
  424711:	ja     0x425106
  424717:	cmp    eax,0x49
  42471a:	je     0x421b39
  424720:	jbe    0x42477f
  424722:	cmp    eax,0x55
  424725:	je     0x421b39
  42472b:	cmp    eax,0x65
  42472e:	jne    0x421a6c
  424734:	jmp    0x421b39
  424739:	cmp    eax,0x4e
  42473c:	je     0x421b39
  424742:	cmp    eax,0x52
  424745:	jne    0x421a6c
  42474b:	jmp    0x421b39
  424750:	cmp    eax,0x68
  424753:	je     0x421b39
  424759:	ja     0x4251cb
  42475f:	cmp    eax,0x62
  424762:	je     0x421b39
  424768:	cmp    eax,0x64
  42476b:	je     0x421b39
  424771:	cmp    eax,0x5a
  424774:	jne    0x421a6c
  42477a:	jmp    0x421b39
  42477f:	cmp    eax,0x45
  424782:	jne    0x421a6c
  424788:	jmp    0x421b39
  42478d:	cmp    eax,0x13a
  424792:	ja     0x4250dd
  424798:	cmp    eax,0x139
  42479d:	jae    0x421b39
  4247a3:	cmp    eax,0xf1
  4247a8:	je     0x421b39
  4247ae:	ja     0x424827
  4247b0:	cmp    eax,0x7a
  4247b3:	je     0x421b39
  4247b9:	cmp    eax,0xd1
  4247be:	je     0x421b39
  4247c4:	cmp    eax,0x74
  4247c7:	jne    0x421a6c
  4247cd:	jmp    0x421b39
  4247d2:	cmp    eax,0x1e03
  4247d7:	ja     0x425237
  4247dd:	cmp    eax,0x1e02
  4247e2:	jae    0x421b39
  4247e8:	cmp    eax,0x1e9
  4247ed:	ja     0x42512a
  4247f3:	cmp    eax,0x1e8
  4247f8:	jae    0x421b39
  4247fe:	cmp    eax,0x165
  424803:	ja     0x425192
  424809:	cmp    eax,0x164
  42480e:	jae    0x421b39
  424814:	sub    eax,0x158
  424819:	cmp    eax,0x1
  42481c:	ja     0x421a6c
  424822:	jmp    0x421b39
  424827:	cmp    eax,0x10e
  42482c:	jb     0x421a6c
  424832:	cmp    eax,0x10f
  424837:	jbe    0x421b39
  42483d:	cmp    eax,0x125
  424842:	jne    0x421a6c
  424848:	jmp    0x421b39
  42484d:	cmp    ebx,0x327
  424853:	je     0x424c79
  424859:	cmp    ebx,0x328
  42485f:	jne    0x422d70
  424865:	cmp    eax,0x130
  42486a:	je     0x421b39
  424870:	ja     0x424c24
  424876:	cmp    eax,0xdc
  42487b:	ja     0x424b88
  424881:	cmp    eax,0xd9
  424886:	jae    0x421b39
  42488c:	cmp    eax,0x69
  42488f:	je     0x421b39
  424895:	ja     0x424b5f
  42489b:	cmp    eax,0x4f
  42489e:	je     0x421b39
  4248a4:	ja     0x42492a
  4248aa:	cmp    eax,0x45
  4248ad:	je     0x421b39
  4248b3:	cmp    eax,0x49
  4248b6:	je     0x421b39
  4248bc:	cmp    eax,0x41
  4248bf:	jne    0x421a6c
  4248c5:	jmp    0x421b39
  4248ca:	cmp    eax,0x13e
  4248cf:	ja     0x4249c3
  4248d5:	cmp    eax,0x13d
  4248da:	jae    0x421b39
  4248e0:	cmp    eax,0xd1
  4248e5:	je     0x421b39
  4248eb:	ja     0x424984
  4248f1:	cmp    eax,0x65
  4248f4:	ja     0x42495b
  4248f6:	cmp    eax,0x64
  4248f9:	jae    0x421b39
  4248ff:	cmp    eax,0x4c
  424902:	je     0x421b39
  424908:	jbe    0x42494a
  42490a:	cmp    eax,0x4e
  42490d:	je     0x421b39
  424913:	jb     0x421a6c
  424919:	sub    eax,0x54
  42491c:	cmp    eax,0x1
  42491f:	ja     0x421a6c
  424925:	jmp    0x421b39
  42492a:	cmp    eax,0x61
  42492d:	je     0x421b39
  424933:	cmp    eax,0x65
  424936:	je     0x421b39
  42493c:	cmp    eax,0x55
  42493f:	jne    0x421a6c
  424945:	jmp    0x421b39
  42494a:	sub    eax,0x44
  42494d:	cmp    eax,0x1
  424950:	ja     0x421a6c
  424956:	jmp    0x421b39
  42495b:	cmp    eax,0x75
  42495e:	ja     0x424a10
  424964:	cmp    eax,0x74
  424967:	jae    0x421b39
  42496d:	cmp    eax,0x6c
  424970:	je     0x421b39
  424976:	cmp    eax,0x6e
  424979:	jne    0x421a6c
  42497f:	jmp    0x421b39
  424984:	cmp    eax,0x10f
  424989:	ja     0x424b14
  42498f:	cmp    eax,0x10e
  424994:	jae    0x421b39
  42499a:	cmp    eax,0xeb
  42499f:	ja     0x424af0
  4249a5:	cmp    eax,0xe8
  4249aa:	jae    0x421b39
  4249b0:	sub    eax,0xd9
  4249b5:	cmp    eax,0x3
  4249b8:	ja     0x421a6c
  4249be:	jmp    0x421b39
  4249c3:	cmp    eax,0x217
  4249c8:	ja     0x424a5b
  4249ce:	cmp    eax,0x214
  4249d3:	jae    0x421b39
  4249d9:	cmp    eax,0x171
  4249de:	ja     0x424a36
  4249e0:	cmp    eax,0x168
  4249e5:	jae    0x421b39
  4249eb:	cmp    eax,0x148
  4249f0:	ja     0x424a23
  4249f2:	cmp    eax,0x147
  4249f7:	jae    0x421b39
  4249fd:	sub    eax,0x143
  424a02:	cmp    eax,0x1
  424a05:	ja     0x421a6c
  424a0b:	jmp    0x421b39
  424a10:	sub    eax,0xc8
  424a15:	cmp    eax,0x3
  424a18:	ja     0x421a6c
  424a1e:	jmp    0x421b39
  424a23:	sub    eax,0x164
  424a28:	cmp    eax,0x1
  424a2b:	ja     0x421a6c
  424a31:	jmp    0x421b39
  424a36:	cmp    eax,0x1f9
  424a3b:	ja     0x424a92
  424a3d:	cmp    eax,0x1f8
  424a42:	jae    0x421b39
  424a48:	sub    eax,0x1d3
  424a4d:	cmp    eax,0x9
  424a50:	ja     0x421a6c
  424a56:	jmp    0x421b39
  424a5b:	cmp    eax,0x1e6b
  424a60:	ja     0x424ab8
  424a62:	cmp    eax,0x1e6a
  424a67:	jae    0x421b39
  424a6d:	cmp    eax,0x1e17
  424a72:	ja     0x424aa5
  424a74:	cmp    eax,0x1e14
  424a79:	jae    0x421b39
  424a7f:	sub    eax,0x1e0a
  424a84:	cmp    eax,0x1
  424a87:	ja     0x421a6c
  424a8d:	jmp    0x421b39
  424a92:	sub    eax,0x204
  424a97:	cmp    eax,0x3
  424a9a:	ja     0x421a6c
  424aa0:	jmp    0x421b39
  424aa5:	sub    eax,0x1e44
  424aaa:	cmp    eax,0x1
  424aad:	ja     0x421a6c
  424ab3:	jmp    0x421b39
  424ab8:	cmp    eax,0x1ec5
  424abd:	ja     0x424b39
  424abf:	cmp    eax,0x1eba
  424ac4:	jae    0x421b39
  424aca:	cmp    eax,0x1e78
  424acf:	jb     0x421a6c
  424ad5:	cmp    eax,0x1e7b
  424ada:	jbe    0x421b39
  424ae0:	cmp    eax,0x1e97
  424ae5:	jne    0x421a6c
  424aeb:	jmp    0x421b39
  424af0:	cmp    eax,0xf1
  424af5:	je     0x421b39
  424afb:	jb     0x421a6c
  424b01:	sub    eax,0xf9
  424b06:	cmp    eax,0x3
  424b09:	ja     0x421a6c
  424b0f:	jmp    0x421b39
  424b14:	cmp    eax,0x11b
  424b19:	ja     0x424b4c
  424b1b:	cmp    eax,0x11a
  424b20:	jae    0x421b39
  424b26:	sub    eax,0x112
  424b2b:	cmp    eax,0x5
  424b2e:	ja     0x421a6c
  424b34:	jmp    0x421b39
  424b39:	sub    eax,0x1ee6
  424b3e:	cmp    eax,0x1
  424b41:	ja     0x421a6c
  424b47:	jmp    0x421b39
  424b4c:	sub    eax,0x139
  424b51:	cmp    eax,0x1
  424b54:	ja     0x421a6c
  424b5a:	jmp    0x421b39
  424b5f:	cmp    eax,0xc5
  424b64:	ja     0x424bbf
  424b66:	cmp    eax,0xc0
  424b6b:	jae    0x421b39
  424b71:	cmp    eax,0x6f
  424b74:	je     0x421b39
  424b7a:	cmp    eax,0x75
  424b7d:	jne    0x421a6c
  424b83:	jmp    0x421b39
  424b88:	cmp    eax,0xfc
  424b8d:	ja     0x424bfb
  424b8f:	cmp    eax,0xf9
  424b94:	jae    0x421b39
  424b9a:	cmp    eax,0xef
  424b9f:	ja     0x424be8
  424ba1:	cmp    eax,0xe8
  424ba6:	jae    0x421b39
  424bac:	sub    eax,0xe0
  424bb1:	cmp    eax,0x5
  424bb4:	ja     0x421a6c
  424bba:	jmp    0x421b39
  424bbf:	cmp    eax,0xc8
  424bc4:	jb     0x421a6c
  424bca:	cmp    eax,0xcf
  424bcf:	jbe    0x421b39
  424bd5:	sub    eax,0xd2
  424bda:	cmp    eax,0x4
  424bdd:	ja     0x421a6c
  424be3:	jmp    0x421b39
  424be8:	sub    eax,0xf2
  424bed:	cmp    eax,0x4
  424bf0:	ja     0x421a6c
  424bf6:	jmp    0x421b39
  424bfb:	cmp    eax,0x117
  424c00:	ja     0x424cda
  424c06:	cmp    eax,0x112
  424c0b:	jae    0x421b39
  424c11:	sub    eax,0x100
  424c16:	cmp    eax,0x3
  424c19:	ja     0x421a6c
  424c1f:	jmp    0x421b39
  424c24:	cmp    eax,0x217
  424c29:	ja     0x424d3b
  424c2f:	cmp    eax,0x214
  424c34:	jae    0x421b39
  424c3a:	cmp    eax,0x1b0
  424c3f:	ja     0x424d16
  424c45:	cmp    eax,0x1af
  424c4a:	jae    0x421b39
  424c50:	cmp    eax,0x171
  424c55:	ja     0x424d03
  424c5b:	cmp    eax,0x168
  424c60:	jae    0x421b39
  424c66:	sub    eax,0x14c
  424c6b:	cmp    eax,0x5
  424c6e:	ja     0x421a6c
  424c74:	jmp    0x421b39
  424c79:	cmp    eax,0x148
  424c7e:	ja     0x424e3e
  424c84:	cmp    eax,0x147
  424c89:	jae    0x421b39
  424c8f:	cmp    eax,0xcb
  424c94:	ja     0x424df7
  424c9a:	cmp    eax,0xc8
  424c9f:	jae    0x421b39
  424ca5:	cmp    eax,0x54
  424ca8:	ja     0x424ebc
  424cae:	cmp    eax,0x52
  424cb1:	jae    0x421b39
  424cb7:	cmp    eax,0x48
  424cba:	ja     0x424dd7
  424cc0:	cmp    eax,0x47
  424cc3:	jae    0x421b39
  424cc9:	sub    eax,0x43
  424ccc:	cmp    eax,0x2
  424ccf:	ja     0x421a6c
  424cd5:	jmp    0x421b39
  424cda:	cmp    eax,0x11a
  424cdf:	jb     0x421a6c
  424ce5:	cmp    eax,0x11b
  424cea:	jbe    0x421b39
  424cf0:	sub    eax,0x128
  424cf5:	cmp    eax,0x5
  424cf8:	ja     0x421a6c
  424cfe:	jmp    0x421b39
  424d03:	sub    eax,0x1a0
  424d08:	cmp    eax,0x1
  424d0b:	ja     0x421a6c
  424d11:	jmp    0x421b39
  424d16:	cmp    eax,0x1e1
  424d1b:	ja     0x424d72
  424d1d:	cmp    eax,0x1de
  424d22:	jae    0x421b39
  424d28:	sub    eax,0x1cd
  424d2d:	cmp    eax,0xf
  424d30:	ja     0x421a6c
  424d36:	jmp    0x421b39
  424d3b:	cmp    eax,0x1e1b
  424d40:	ja     0x424dae
  424d42:	cmp    eax,0x1e14
  424d47:	jae    0x421b39
  424d4d:	cmp    eax,0x231
  424d52:	ja     0x424d9b
  424d54:	cmp    eax,0x22a
  424d59:	jae    0x421b39
  424d5f:	sub    eax,0x226
  424d64:	cmp    eax,0x1
  424d67:	ja     0x421a6c
  424d6d:	jmp    0x421b39
  424d72:	cmp    eax,0x1fa
  424d77:	jb     0x421a6c
  424d7d:	cmp    eax,0x1fb
  424d82:	jbe    0x421b39
  424d88:	sub    eax,0x200
  424d8d:	cmp    eax,0xf
  424d90:	ja     0x421a6c
  424d96:	jmp    0x421b39
  424d9b:	sub    eax,0x1e00
  424da0:	cmp    eax,0x1
  424da3:	ja     0x421a6c
  424da9:	jmp    0x421b39
  424dae:	cmp    eax,0x1e53
  424db3:	ja     0x424eed
  424db9:	cmp    eax,0x1e4c
  424dbe:	jae    0x421b39
  424dc4:	sub    eax,0x1e2c
  424dc9:	cmp    eax,0x3
  424dcc:	ja     0x421a6c
  424dd2:	jmp    0x421b39
  424dd7:	cmp    eax,0x4b
  424dda:	jb     0x421a6c
  424de0:	cmp    eax,0x4c
  424de3:	jbe    0x421b39
  424de9:	cmp    eax,0x4e
  424dec:	jne    0x421a6c
  424df2:	jmp    0x421b39
  424df7:	cmp    eax,0x121
  424dfc:	ja     0x424f36
  424e02:	cmp    eax,0x11a
  424e07:	jae    0x421b39
  424e0d:	cmp    eax,0xf1
  424e12:	je     0x421b39
  424e18:	ja     0x424e93
  424e1a:	cmp    eax,0xd1
  424e1f:	je     0x421b39
  424e25:	jb     0x421a6c
  424e2b:	sub    eax,0xe8
  424e30:	cmp    eax,0x3
  424e33:	ja     0x421a6c
  424e39:	jmp    0x421b39
  424e3e:	cmp    eax,0x21b
  424e43:	ja     0x424fd2
  424e49:	cmp    eax,0x218
  424e4e:	jae    0x421b39
  424e54:	cmp    eax,0x1e9
  424e59:	ja     0x424fad
  424e5f:	cmp    eax,0x1e6
  424e64:	jae    0x421b39
  424e6a:	cmp    eax,0x15d
  424e6f:	ja     0x424f5b
  424e75:	cmp    eax,0x158
  424e7a:	jae    0x421b39
  424e80:	sub    eax,0x154
  424e85:	cmp    eax,0x1
  424e88:	ja     0x421a6c
  424e8e:	jmp    0x421b39
  424e93:	cmp    eax,0x106
  424e98:	jb     0x421a6c
  424e9e:	cmp    eax,0x10f
  424ea3:	jbe    0x421b39
  424ea9:	sub    eax,0x112
  424eae:	cmp    eax,0x5
  424eb1:	ja     0x421a6c
  424eb7:	jmp    0x421b39
  424ebc:	cmp    eax,0x6c
  424ebf:	ja     0x424f16
  424ec1:	cmp    eax,0x6b
  424ec4:	jae    0x421b39
  424eca:	cmp    eax,0x63
  424ecd:	jb     0x421a6c
  424ed3:	cmp    eax,0x65
  424ed6:	jbe    0x421b39
  424edc:	sub    eax,0x67
  424edf:	cmp    eax,0x1
  424ee2:	ja     0x421a6c
  424ee8:	jmp    0x421b39
  424eed:	cmp    eax,0x1e72
  424ef2:	jb     0x421a6c
  424ef8:	cmp    eax,0x1e7b
  424efd:	jbe    0x421b39
  424f03:	sub    eax,0x1ea0
  424f08:	cmp    eax,0x51
  424f0b:	ja     0x421a6c
  424f11:	jmp    0x421b39
  424f16:	cmp    eax,0x6e
  424f19:	je     0x421b39
  424f1f:	jb     0x421a6c
  424f25:	sub    eax,0x72
  424f28:	cmp    eax,0x2
  424f2b:	ja     0x421a6c
  424f31:	jmp    0x421b39
  424f36:	cmp    eax,0x13a
  424f3b:	ja     0x424f84
  424f3d:	cmp    eax,0x139
  424f42:	jae    0x421b39
  424f48:	sub    eax,0x124
  424f4d:	cmp    eax,0x1
  424f50:	ja     0x421a6c
  424f56:	jmp    0x421b39
  424f5b:	cmp    eax,0x160
  424f60:	jb     0x421a6c
  424f66:	cmp    eax,0x161
  424f6b:	jbe    0x421b39
  424f71:	sub    eax,0x164
  424f76:	cmp    eax,0x1
  424f79:	ja     0x421a6c
  424f7f:	jmp    0x421b39
  424f84:	cmp    eax,0x13d
  424f89:	jb     0x421a6c
  424f8f:	cmp    eax,0x13e
  424f94:	jbe    0x421b39
  424f9a:	sub    eax,0x143
  424f9f:	cmp    eax,0x1
  424fa2:	ja     0x421a6c
  424fa8:	jmp    0x421b39
  424fad:	cmp    eax,0x1f9
  424fb2:	ja     0x42500d
  424fb4:	cmp    eax,0x1f8
  424fb9:	jae    0x421b39
  424fbf:	sub    eax,0x1f4
  424fc4:	cmp    eax,0x1
  424fc7:	ja     0x421a6c
  424fcd:	jmp    0x421b39
  424fd2:	cmp    eax,0x1e2b
  424fd7:	ja     0x42505f
  424fdd:	cmp    eax,0x1e2a
  424fe2:	jae    0x421b39
  424fe8:	cmp    eax,0x1e0f
  424fed:	ja     0x425036
  424fef:	cmp    eax,0x1e0a
  424ff4:	jae    0x421b39
  424ffa:	sub    eax,0x21e
  424fff:	cmp    eax,0x1
  425002:	ja     0x421a6c
  425008:	jmp    0x421b39
  42500d:	cmp    eax,0x204
  425012:	jb     0x421a6c
  425018:	cmp    eax,0x207
  42501d:	jbe    0x421b39
  425023:	sub    eax,0x210
  425028:	cmp    eax,0x3
  42502b:	ja     0x421a6c
  425031:	jmp    0x421b39
  425036:	cmp    eax,0x1e12
  42503b:	jb     0x421a6c
  425041:	cmp    eax,0x1e1b
  425046:	jbe    0x421b39
  42504c:	sub    eax,0x1e20
  425051:	cmp    eax,0x7
  425054:	ja     0x421a6c
  42505a:	jmp    0x421b39
  42505f:	cmp    eax,0x1e71
  425064:	ja     0x4251fe
  42506a:	cmp    eax,0x1e58
  42506f:	jae    0x421b39
  425075:	cmp    eax,0x1e30
  42507a:	jb     0x421a6c
  425080:	cmp    eax,0x1e3d
  425085:	jbe    0x421b39
  42508b:	sub    eax,0x1e44
  425090:	cmp    eax,0x7
  425093:	ja     0x421a6c
  425099:	jmp    0x421b39
  42509e:	cmp    eax,0x11b
  4250a3:	ja     0x4251a5
  4250a9:	cmp    eax,0x11a
  4250ae:	jae    0x421b39
  4250b4:	cmp    eax,0xf9
  4250b9:	jb     0x421a6c
  4250bf:	cmp    eax,0xfc
  4250c4:	jbe    0x421b39
  4250ca:	sub    eax,0x112
  4250cf:	cmp    eax,0x5
  4250d2:	ja     0x421a6c
  4250d8:	jmp    0x421b39
  4250dd:	cmp    eax,0x144
  4250e2:	ja     0x4251eb
  4250e8:	cmp    eax,0x143
  4250ed:	jae    0x421b39
  4250f3:	sub    eax,0x13d
  4250f8:	cmp    eax,0x1
  4250fb:	ja     0x421a6c
  425101:	jmp    0x421b39
  425106:	cmp    eax,0xcf
  42510b:	ja     0x42527a
  425111:	cmp    eax,0xc8
  425116:	jae    0x421b39
  42511c:	cmp    eax,0x75
  42511f:	jne    0x421a6c
  425125:	jmp    0x421b39
  42512a:	cmp    eax,0x213
  42512f:	ja     0x425227
  425135:	cmp    eax,0x210
  42513a:	jae    0x421b39
  425140:	sub    eax,0x1f8
  425145:	cmp    eax,0x1
  425148:	ja     0x421a6c
  42514e:	jmp    0x421b39
  425153:	cmp    eax,0x1e17
  425158:	ja     0x4252f2
  42515e:	cmp    eax,0x1e14
  425163:	jae    0x421b39
  425169:	cmp    eax,0x1dc
  42516e:	ja     0x4252c9
  425174:	cmp    eax,0x1d3
  425179:	jae    0x421b39
  42517f:	sub    eax,0x1cf
  425184:	cmp    eax,0x1
  425187:	ja     0x421a6c
  42518d:	jmp    0x421b39
  425192:	sub    eax,0x179
  425197:	cmp    eax,0x5
  42519a:	ja     0x421a6c
  4251a0:	jmp    0x421b39
  4251a5:	cmp    eax,0x128
  4251aa:	jb     0x421a6c
  4251b0:	cmp    eax,0x12d
  4251b5:	jbe    0x421b39
  4251bb:	cmp    eax,0x130
  4251c0:	jne    0x421a6c
  4251c6:	jmp    0x421b39
  4251cb:	cmp    eax,0x6b
  4251ce:	jb     0x421a6c
  4251d4:	cmp    eax,0x6c
  4251d7:	jbe    0x421b39
  4251dd:	cmp    eax,0x6e
  4251e0:	jne    0x421a6c
  4251e6:	jmp    0x421b39
  4251eb:	sub    eax,0x147
  4251f0:	cmp    eax,0x1
  4251f3:	ja     0x421a6c
  4251f9:	jmp    0x421b39
  4251fe:	cmp    eax,0x1e96
  425203:	jb     0x421a6c
  425209:	cmp    eax,0x1e97
  42520e:	jbe    0x421b39
  425214:	sub    eax,0x1eb8
  425219:	cmp    eax,0xf
  42521c:	ja     0x421a6c
  425222:	jmp    0x421b39
  425227:	cmp    eax,0x21f
  42522c:	jne    0x421a6c
  425232:	jmp    0x421b39
  425237:	cmp    eax,0x1e45
  42523c:	ja     0x4252a0
  42523e:	cmp    eax,0x1e44
  425243:	jae    0x421b39
  425249:	cmp    eax,0x1e23
  42524e:	je     0x421b39
  425254:	jbe    0x42528d
  425256:	cmp    eax,0x1e27
  42525b:	je     0x421b39
  425261:	jb     0x421a6c
  425267:	sub    eax,0x1e30
  42526c:	cmp    eax,0x1
  42526f:	ja     0x421a6c
  425275:	jmp    0x421b39
  42527a:	sub    eax,0xd9
  42527f:	cmp    eax,0x3
  425282:	ja     0x421a6c
  425288:	jmp    0x421b39
  42528d:	sub    eax,0x1e0a
  425292:	cmp    eax,0x1
  425295:	ja     0x421a6c
  42529b:	jmp    0x421b39
  4252a0:	cmp    eax,0x1e6b
  4252a5:	ja     0x42532d
  4252ab:	cmp    eax,0x1e6a
  4252b0:	jae    0x421b39
  4252b6:	sub    eax,0x1e58
  4252bb:	cmp    eax,0x1
  4252be:	ja     0x421a6c
  4252c4:	jmp    0x421b39
  4252c9:	cmp    eax,0x204
  4252ce:	jb     0x421a6c
  4252d4:	cmp    eax,0x20b
  4252d9:	jbe    0x421b39
  4252df:	sub    eax,0x214
  4252e4:	cmp    eax,0x3
  4252e7:	ja     0x421a6c
  4252ed:	jmp    0x421b39
  4252f2:	cmp    eax,0x1ec5
  4252f7:	ja     0x425353
  4252f9:	cmp    eax,0x1eba
  4252fe:	jae    0x421b39
  425304:	cmp    eax,0x1e2e
  425309:	jb     0x421a6c
  42530f:	cmp    eax,0x1e2f
  425314:	jbe    0x421b39
  42531a:	sub    eax,0x1e78
  42531f:	cmp    eax,0x3
  425322:	ja     0x421a6c
  425328:	jmp    0x421b39
  42532d:	cmp    eax,0x1e90
  425332:	jb     0x421a6c
  425338:	cmp    eax,0x1e91
  42533d:	jbe    0x421b39
  425343:	cmp    eax,0x1e97
  425348:	jne    0x421a6c
  42534e:	jmp    0x421b39
  425353:	cmp    eax,0x1ec8
  425358:	jb     0x421a6c
  42535e:	cmp    eax,0x1ec9
  425363:	jbe    0x421b39
  425369:	sub    eax,0x1ee6
  42536e:	cmp    eax,0x1
  425371:	ja     0x421a6c
  425377:	jmp    0x421b39
  42537c:	nop    DWORD PTR [rax+0x0]
  425380:	push   r15
  425382:	push   r14
  425384:	push   r13
  425386:	push   r12
  425388:	push   rbp
  425389:	push   rdi
  42538a:	push   rsi
  42538b:	push   rbx
  42538c:	sub    rsp,0x118
  425393:	mov    QWORD PTR [rsp+0x170],r8
  42539b:	mov    r8d,DWORD PTR [rsp+0x180]
  4253a3:	mov    r12,rcx
  4253a6:	lea    rcx,[rsp+0xd0]
  4253ae:	mov    rbx,rdx
  4253b1:	mov    rdx,r12
  4253b4:	mov    QWORD PTR [rsp+0x178],r9
  4253bc:	call   0x420490
  4253c1:	cmp    DWORD PTR [rbx],0x100
  4253c7:	mov    ecx,0x100
  4253cc:	mov    eax,DWORD PTR [rsp+0xe0]
  4253d3:	cmovae ecx,DWORD PTR [rbx]
  4253d6:	mov    rbp,QWORD PTR [rsp+0xd0]
  4253de:	mov    rdi,QWORD PTR [rsp+0xd8]
  4253e6:	mov    DWORD PTR [rsp+0x5c],eax
  4253ea:	mov    ecx,ecx
  4253ec:	mov    QWORD PTR [rsp+0xb8],rcx
  4253f4:	call   0x43baf0
  4253f9:	cmp    QWORD PTR [rsp+0x170],0x0
  425402:	mov    QWORD PTR [rsp+0xb0],rax
  42540a:	mov    QWORD PTR [rsp+0xc0],0x0
  425416:	je     0x425b43
  42541c:	mov    esi,DWORD PTR [rsp+0x5c]
  425420:	mov    eax,0x1
  425425:	mov    r15d,0xffffffff
  42542b:	mov    r14,QWORD PTR [rip+0x359ce]        # 0x45ae00
  425432:	lea    r13,[rsp+0x8f]
  42543a:	mov    QWORD PTR [rsp+0x40],rbx
  42543f:	mov    QWORD PTR [rsp+0x48],0x0
  425448:	mov    ecx,esi
  42544a:	movsxd rdx,esi
  42544d:	mov    rsi,r15
  425450:	shl    rax,cl
  425453:	sub    rax,0x1
  425457:	cmp    rdx,0x1f
  42545b:	cmovbe rsi,rax
  42545f:	lea    rax,[rsp+0xf0]
  425467:	mov    QWORD PTR [rsp+0x68],rsi
  42546c:	mov    DWORD PTR [rsp+0x7c],esi
  425470:	mov    QWORD PTR [rsp+0x50],rax
  425475:	lea    rax,[rsp+0xa8]
  42547d:	mov    QWORD PTR [rsp+0x38],rsi
  425482:	mov    DWORD PTR [rsp+0x78],esi
  425486:	lea    rsi,[rsp+0xb0]
  42548e:	mov    QWORD PTR [rsp+0x70],rax
  425493:	mov    rax,QWORD PTR [rsp+0x40]
  425498:	mov    rcx,QWORD PTR [rax+0x8]
  42549c:	movzx  eax,BYTE PTR [rcx]
  42549f:	cmp    al,0x75
  4254a1:	je     0x425a6b
  4254a7:	cmp    al,0x55
  4254a9:	je     0x425a5e
  4254af:	cmp    al,0x4c
  4254b1:	mov    r11,rcx
  4254b4:	je     0x425a5e
  4254ba:	cmp    al,0x52
  4254bc:	je     0x4258f1
  4254c2:	mov    rax,QWORD PTR [rsp+0x40]
  4254c7:	add    r11,0x1
  4254cb:	mov    eax,DWORD PTR [rax]
  4254cd:	lea    r15,[rcx+rax*1-0x1]
  4254d2:	cmp    r11,r15
  4254d5:	mov    rbx,r11
  4254d8:	jae    0x4255b0
  4254de:	cmp    BYTE PTR [r11],0x5c
  4254e2:	jne    0x4254f9
  4254e4:	jmp    0x4255b0
  4254e9:	nop    DWORD PTR [rax+0x0]
  4254f0:	cmp    BYTE PTR [rbx],0x5c
  4254f3:	je     0x425592
  4254f9:	add    rbx,0x1
  4254fd:	cmp    rbx,r15
  425500:	jne    0x4254f0
  425502:	sub    rbx,r11
  425505:	mov    r9,rsi
  425508:	mov    rdx,r11
  42550b:	mov    r8,rbx
  42550e:	mov    rcx,rdi
  425511:	call   rbp
  425513:	test   al,al
  425515:	je     0x425941
  42551b:	add    QWORD PTR [rsp+0x48],0x1
  425521:	add    QWORD PTR [rsp+0x40],0x10
  425527:	mov    rax,QWORD PTR [rsp+0x48]
  42552c:	cmp    rax,QWORD PTR [rsp+0x170]
  425534:	jne    0x425493
  42553a:	mov    eax,DWORD PTR [rsp+0x5c]
  42553e:	mov    rcx,QWORD PTR [r12+0x478]
  425546:	lea    rdx,[r12+0x492]
  42554e:	mov    r9,rsi
  425551:	xor    r8d,r8d
  425554:	mov    DWORD PTR [rsp+0x20],eax
  425558:	call   0x4208d0
  42555d:	mov    rdx,QWORD PTR [rsp+0xc0]
  425565:	mov    rcx,QWORD PTR [rsp+0xb0]
  42556d:	call   0x43bb70
  425572:	mov    rdi,QWORD PTR [rsp+0x178]
  42557a:	mov    QWORD PTR [rdi+0x8],rax
  42557e:	mov    rax,QWORD PTR [rsp+0xc0]
  425586:	mov    DWORD PTR [rdi],eax
  425588:	mov    eax,0x1
  42558d:	jmp    0x425964
  425592:	cmp    r11,rbx
  425595:	jae    0x4255b9
  425597:	mov    r8,rbx
  42559a:	mov    r9,rsi
  42559d:	mov    rdx,r11
  4255a0:	sub    r8,r11
  4255a3:	mov    rcx,rdi
  4255a6:	call   rbp
  4255a8:	test   al,al
  4255aa:	je     0x425941
  4255b0:	cmp    rbx,r15
  4255b3:	je     0x42551b
  4255b9:	movzx  r9d,BYTE PTR [rbx+0x1]
  4255be:	lea    eax,[r9-0x22]
  4255c2:	mov    BYTE PTR [rsp+0x8f],r9b
  4255ca:	cmp    al,0x59
  4255cc:	ja     0x4255ec
  4255ce:	lea    rdx,[rip+0x2c913]        # 0x451ee8
  4255d5:	movzx  eax,al
  4255d8:	movsxd rax,DWORD PTR [rdx+rax*4]
  4255dc:	add    rdx,rax
  4255df:	jmp    rdx
  4255e1:	cmp    BYTE PTR [r12+0x437],0x0
  4255ea:	je     0x425614
  4255ec:	mov    rcx,QWORD PTR [rip+0x3583d]        # 0x45ae30
  4255f3:	movsxd rax,r9d
  4255f6:	test   BYTE PTR [rcx+rax*2],0xac
  4255fa:	je     0x4259bc
  425600:	lea    r8,[rip+0x2c811]        # 0x451e18
  425607:	mov    edx,0x2
  42560c:	mov    rcx,r12
  42560f:	call   0x414b60
  425614:	mov    r9,rsi
  425617:	mov    r8d,0x1
  42561d:	mov    rdx,r13
  425620:	mov    rcx,rdi
  425623:	call   rbp
  425625:	test   al,al
  425627:	je     0x425980
  42562d:	lea    r11,[rbx+0x2]
  425631:	jmp    0x4254d2
  425636:	cmp    BYTE PTR [r12+0x429],0x0
  42563f:	jne    0x425aa1
  425645:	lea    r11,[rbx+0x2]
  425649:	cmp    r15,r11
  42564c:	jbe    0x425ac2
  425652:	movzx  eax,BYTE PTR [rbx+0x2]
  425656:	xor    edx,edx
  425658:	xor    ebx,ebx
  42565a:	movzx  eax,BYTE PTR [r14+rax*1]
  42565f:	cmp    al,0x63
  425661:	jne    0x42567d
  425663:	jmp    0x425ac2
  425668:	nop    DWORD PTR [rax+rax*1+0x0]
  425670:	movzx  eax,BYTE PTR [r11]
  425674:	movzx  eax,BYTE PTR [r14+rax*1]
  425679:	cmp    al,0x63
  42567b:	je     0x425695
  42567d:	mov    ecx,ebx
  42567f:	add    r11,0x1
  425683:	shl    ebx,0x4
  425686:	and    ecx,0xf0000000
  42568c:	add    ebx,eax
  42568e:	or     edx,ecx
  425690:	cmp    r11,r15
  425693:	jne    0x425670
  425695:	mov    rax,QWORD PTR [rsp+0x68]
  42569a:	and    rax,rbx
  42569d:	cmp    eax,ebx
  42569f:	setne  al
  4256a2:	movzx  eax,al
  4256a5:	or     eax,edx
  4256a7:	jne    0x425afe
  4256ad:	mov    eax,DWORD PTR [rsp+0x5c]
  4256b1:	mov    rcx,QWORD PTR [r12+0x478]
  4256b9:	lea    rdx,[r12+0x492]
  4256c1:	mov    r9,rsi
  4256c4:	mov    r8d,ebx
  4256c7:	mov    QWORD PTR [rsp+0x60],r11
  4256cc:	mov    DWORD PTR [rsp+0x20],eax
  4256d0:	call   0x4208d0
  4256d5:	mov    r11,QWORD PTR [rsp+0x60]
  4256da:	jmp    0x4254d2
  4256df:	mov    BYTE PTR [rsp+0x8f],0xa
  4256e7:	jmp    0x425614
  4256ec:	mov    BYTE PTR [rsp+0x8f],0xc
  4256f4:	jmp    0x425614
  4256f9:	mov    BYTE PTR [rsp+0x8f],0x9
  425701:	jmp    0x425614
  425706:	mov    BYTE PTR [rsp+0x8f],0xd
  42570e:	jmp    0x425614
  425713:	mov    BYTE PTR [rsp+0x8f],0xb
  42571b:	jmp    0x425614
  425720:	mov    rax,QWORD PTR [rsp+0x50]
  425725:	mov    rdx,QWORD PTR [rsp+0x70]
  42572a:	add    rbx,0x2
  42572e:	xor    r9d,r9d
  425731:	mov    r8,r15
  425734:	mov    rcx,r12
  425737:	mov    DWORD PTR [rsp+0xf0],0x0
  425742:	mov    BYTE PTR [rsp+0xf4],0x0
  42574a:	mov    QWORD PTR [rsp+0x20],rax
  42574f:	mov    DWORD PTR [rsp+0xf8],0x0
  42575a:	mov    QWORD PTR [rsp+0xa8],rbx
  425762:	call   0x421670
  425767:	cmp    eax,0x7f
  42576a:	jbe    0x4259ee
  425770:	lea    r10,[rsp+0xa0]
  425778:	mov    r9d,0x1
  42577e:	lea    r11,[rip+0x2c96b]        # 0x4520f0
  425785:	lea    rcx,[r10+0x6]
  425789:	jmp    0x425793
  42578b:	nop    DWORD PTR [rax+rax*1+0x0]
  425790:	mov    r9,r8
  425793:	mov    edx,eax
  425795:	shr    eax,0x6
  425798:	sub    rcx,0x1
  42579c:	and    edx,0x3f
  42579f:	lea    r8,[r9+0x1]
  4257a3:	or     edx,0xffffff80
  4257a6:	cmp    eax,0x3e
  4257a9:	mov    BYTE PTR [rcx],dl
  4257ab:	ja     0x425790
  4257ad:	movzx  edx,BYTE PTR [r11+r9*1+0x1]
  4257b3:	test   edx,eax
  4257b5:	jne    0x425790
  4257b7:	lea    rdx,[rip+0x2c92d]        # 0x4520eb
  4257be:	or     al,BYTE PTR [rdx+r9*1]
  4257c2:	cmp    r8,0x6
  4257c6:	mov    r9d,eax
  4257c9:	mov    BYTE PTR [rcx-0x1],al
  4257cc:	jbe    0x425b25
  4257d2:	call   QWORD PTR [rip+0x3efac]        # 0x464784
  4257d8:	lea    r8,[rip+0x2c6b9]        # 0x451e98
  4257df:	mov    DWORD PTR [rax],0x7
  4257e5:	mov    edx,0x3
  4257ea:	mov    rcx,r12
  4257ed:	call   0x414d60
  4257f2:	mov    r11,QWORD PTR [rsp+0xa8]
  4257fa:	jmp    0x4254d2
  4257ff:	cmp    BYTE PTR [r12+0x437],0x0
  425808:	jne    0x425ae5
  42580e:	mov    BYTE PTR [rsp+0x8f],0x1b
  425816:	jmp    0x425614
  42581b:	mov    BYTE PTR [rsp+0x8f],0x8
  425823:	jmp    0x425614
  425828:	lea    r11,[rbx+0x1]
  42582c:	xor    r8d,r8d
  42582f:	cmp    r15,r11
  425832:	jbe    0x42588c
  425834:	lea    r10,[rbx+0x4]
  425838:	xor    ebx,ebx
  42583a:	nop    WORD PTR [rax+rax*1+0x0]
  425840:	add    r11,0x1
  425844:	lea    ebx,[r9+rbx*8-0x30]
  425849:	cmp    r11,r15
  42584c:	jne    0x4258e0
  425852:	mov    r8d,ebx
  425855:	mov    r10,r15
  425858:	mov    rax,QWORD PTR [rsp+0x38]
  42585d:	and    rax,rbx
  425860:	cmp    eax,ebx
  425862:	je     0x425889
  425864:	lea    r8,[rip+0x2c525]        # 0x451d90
  42586b:	mov    edx,0x2
  425870:	mov    rcx,r12
  425873:	mov    QWORD PTR [rsp+0x60],r10
  425878:	call   0x414b60
  42587d:	and    ebx,DWORD PTR [rsp+0x78]
  425881:	mov    r10,QWORD PTR [rsp+0x60]
  425886:	mov    r8d,ebx
  425889:	mov    r11,r10
  42588c:	mov    eax,DWORD PTR [rsp+0x5c]
  425890:	mov    rcx,QWORD PTR [r12+0x478]
  425898:	lea    rdx,[r12+0x492]
  4258a0:	mov    r9,rsi
  4258a3:	mov    QWORD PTR [rsp+0x60],r11
  4258a8:	mov    DWORD PTR [rsp+0x20],eax
  4258ac:	call   0x4208d0
  4258b1:	mov    r11,QWORD PTR [rsp+0x60]
  4258b6:	jmp    0x4254d2
  4258bb:	cmp    BYTE PTR [r12+0x429],0x0
  4258c4:	jne    0x425a88
  4258ca:	mov    BYTE PTR [rsp+0x8f],0x7
  4258d2:	jmp    0x425614
  4258d7:	nop    WORD PTR [rax+rax*1+0x0]
  4258e0:	cmp    r11,r10
  4258e3:	jne    0x4259a0
  4258e9:	mov    r8d,ebx
  4258ec:	jmp    0x425858
  4258f1:	cmp    BYTE PTR [r11+0x2],0x28
  4258f6:	lea    r9,[r11+0x2]
  4258fa:	mov    rax,r9
  4258fd:	je     0x425909
  4258ff:	nop
  425900:	add    rax,0x1
  425904:	cmp    BYTE PTR [rax],0x28
  425907:	jne    0x425900
  425909:	lea    rdx,[rax+0x1]
  42590d:	mov    rax,QWORD PTR [rsp+0x40]
  425912:	mov    r8d,DWORD PTR [rax]
  425915:	mov    rax,rdx
  425918:	sub    rax,r9
  42591b:	add    r8,rcx
  42591e:	lea    rcx,[rdx+rax*1+0x1]
  425923:	cmp    r8,rcx
  425926:	jb     0x42592e
  425928:	not    rax
  42592b:	add    r8,rax
  42592e:	sub    r8,rdx
  425931:	mov    r9,rsi
  425934:	mov    rcx,rdi
  425937:	call   rbp
  425939:	test   al,al
  42593b:	jne    0x42551b
  425941:	lea    r8,[rip+0x2bec8]        # 0x451810
  425948:	mov    edx,0x3
  42594d:	mov    rcx,r12
  425950:	call   0x414d60
  425955:	mov    rcx,QWORD PTR [rsp+0xb0]
  42595d:	call   0x4494c8
  425962:	xor    eax,eax
  425964:	add    rsp,0x118
  42596b:	pop    rbx
  42596c:	pop    rsi
  42596d:	pop    rdi
  42596e:	pop    rbp
  42596f:	pop    r12
  425971:	pop    r13
  425973:	pop    r14
  425975:	pop    r15
  425977:	ret    
  425978:	nop    DWORD PTR [rax+rax*1+0x0]
  425980:	lea    r8,[rip+0x2c4d9]        # 0x451e60
  425987:	mov    edx,0x3
  42598c:	mov    rcx,r12
  42598f:	call   0x414d60
  425994:	jmp    0x42562d
  425999:	nop    DWORD PTR [rax+0x0]
  4259a0:	movzx  r9d,BYTE PTR [r11]
  4259a4:	lea    eax,[r9-0x30]
  4259a8:	cmp    eax,0x7
  4259ab:	jbe    0x425840
  4259b1:	mov    r8d,ebx
  4259b4:	mov    r10,r11
  4259b7:	jmp    0x425858
  4259bc:	mov    rcx,QWORD PTR [rsp+0x50]
  4259c1:	lea    rdx,[rip+0x2c46f]        # 0x451e37
  4259c8:	mov    r8d,r9d
  4259cb:	call   0x449900
  4259d0:	mov    r9,QWORD PTR [rsp+0x50]
  4259d5:	lea    r8,[rip+0x2c464]        # 0x451e40
  4259dc:	mov    edx,0x2
  4259e1:	mov    rcx,r12
  4259e4:	call   0x414b60
  4259e9:	jmp    0x425614
  4259ee:	lea    r10,[rsp+0xa0]
  4259f6:	mov    r9d,eax
  4259f9:	mov    BYTE PTR [rsp+0xa5],al
  425a00:	mov    r8d,0x1
  425a06:	lea    rax,[r10+0x5]
  425a0a:	lea    rdx,[rsp+0x90]
  425a12:	add    r10,0x6
  425a16:	mov    rcx,rdx
  425a19:	jmp    0x425a24
  425a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  425a20:	movzx  r9d,BYTE PTR [rax]
  425a24:	add    rax,0x1
  425a28:	add    rcx,0x1
  425a2c:	mov    BYTE PTR [rcx-0x1],r9b
  425a30:	cmp    rax,r10
  425a33:	jb     0x425a20
  425a35:	mov    r9,rsi
  425a38:	mov    rcx,rdi
  425a3b:	call   rbp
  425a3d:	test   al,al
  425a3f:	jne    0x4257f2
  425a45:	lea    r8,[rip+0x2c2b4]        # 0x451d00
  425a4c:	mov    edx,0x3
  425a51:	mov    rcx,r12
  425a54:	call   0x414d60
  425a59:	jmp    0x4257f2
  425a5e:	lea    r11,[rcx+0x1]
  425a62:	movzx  eax,BYTE PTR [rcx+0x1]
  425a66:	jmp    0x4254ba
  425a6b:	movzx  eax,BYTE PTR [rcx+0x1]
  425a6f:	lea    r11,[rcx+0x1]
  425a73:	cmp    al,0x38
  425a75:	jne    0x4254ba
  425a7b:	lea    r11,[rcx+0x2]
  425a7f:	movzx  eax,BYTE PTR [rcx+0x2]
  425a83:	jmp    0x4254ba
  425a88:	lea    r8,[rip+0x2c329]        # 0x451db8
  425a8f:	mov    edx,0x6
  425a94:	mov    rcx,r12
  425a97:	call   0x414b90
  425a9c:	jmp    0x4258ca
  425aa1:	lea    r8,[rip+0x2c288]        # 0x451d30
  425aa8:	mov    edx,0x6
  425aad:	mov    rcx,r12
  425ab0:	call   0x414b90
  425ab5:	lea    r11,[rbx+0x2]
  425ab9:	cmp    r15,r11
  425abc:	ja     0x425652
  425ac2:	lea    r8,[rip+0x2c3f7]        # 0x451ec0
  425ac9:	mov    edx,0x3
  425ace:	mov    rcx,r12
  425ad1:	mov    QWORD PTR [rsp+0x60],r11
  425ad6:	call   0x414b60
  425adb:	mov    r11,QWORD PTR [rsp+0x60]
  425ae0:	jmp    0x4254d2
  425ae5:	lea    r8,[rip+0x2c304]        # 0x451df0
  425aec:	mov    edx,0x2
  425af1:	mov    rcx,r12
  425af4:	call   0x414b60
  425af9:	jmp    0x42580e
  425afe:	lea    r8,[rip+0x2c263]        # 0x451d68
  425b05:	mov    edx,0x2
  425b0a:	mov    rcx,r12
  425b0d:	mov    QWORD PTR [rsp+0x60],r11
  425b12:	call   0x414b60
  425b17:	and    ebx,DWORD PTR [rsp+0x7c]
  425b1b:	mov    r11,QWORD PTR [rsp+0x60]
  425b20:	jmp    0x4256ad
  425b25:	lea    rax,[rcx-0x1]
  425b29:	lea    rdx,[r10+0x6]
  425b2d:	cmp    rax,rdx
  425b30:	jb     0x425a0a
  425b36:	lea    rdx,[rsp+0x90]
  425b3e:	jmp    0x425a35
  425b43:	lea    rsi,[rsp+0xb0]
  425b4b:	jmp    0x42553a
  425b50:	push   rbp
  425b51:	push   rdi
  425b52:	push   rsi
  425b53:	push   rbx
  425b54:	sub    rsp,0x38
  425b58:	lea    rax,[rip+0xffffffffffffab91]        # 0x4206f0
  425b5f:	mov    rbp,QWORD PTR [rcx+0x1f0]
  425b66:	mov    rdi,QWORD PTR [rcx+0x1f8]
  425b6d:	mov    esi,DWORD PTR [rcx+0x200]
  425b73:	mov    rbx,rcx
  425b76:	mov    QWORD PTR [rcx+0x1f8],0xffffffffffffffff
  425b81:	mov    QWORD PTR [rcx+0x1f0],rax
  425b88:	mov    rax,QWORD PTR [rcx+0x478]
  425b8f:	mov    DWORD PTR [rsp+0x20],0x3d
  425b97:	mov    DWORD PTR [rcx+0x200],eax
  425b9d:	call   0x425380
  425ba2:	mov    QWORD PTR [rbx+0x1f0],rbp
  425ba9:	mov    QWORD PTR [rbx+0x1f8],rdi
  425bb0:	mov    DWORD PTR [rbx+0x200],esi
  425bb6:	add    rsp,0x38
  425bba:	pop    rbx
  425bbb:	pop    rsi
  425bbc:	pop    rdi
  425bbd:	pop    rbp
  425bbe:	ret    
  425bbf:	nop
  425bc0:	push   r15
  425bc2:	push   r14
  425bc4:	push   r13
  425bc6:	push   r12
  425bc8:	push   rbp
  425bc9:	push   rdi
  425bca:	push   rsi
  425bcb:	push   rbx
  425bcc:	sub    rsp,0x88
  425bd3:	movzx  eax,BYTE PTR [rdx+0x4]
  425bd7:	mov    rdi,rdx
  425bda:	mov    rbp,rcx
  425bdd:	mov    r12,r8
  425be0:	mov    r13,r9
  425be3:	mov    DWORD PTR [rsp+0x50],0x0
  425beb:	mov    QWORD PTR [rsp+0x58],0x0
  425bf4:	cmp    al,0x38
  425bf6:	setne  sil
  425bfa:	movzx  edx,sil
  425bfe:	add    edx,0x2
  425c01:	cmp    edx,DWORD PTR [rdi+0x8]
  425c04:	je     0x425f10
  425c0a:	lea    rdx,[rdi+0x8]
  425c0e:	lea    r9,[rsp+0x50]
  425c13:	mov    DWORD PTR [rsp+0x20],eax
  425c17:	mov    r8d,0x1
  425c1d:	xor    ebx,ebx
  425c1f:	call   0x425380
  425c24:	test   al,al
  425c26:	je     0x425d6a
  425c2c:	test   sil,sil
  425c2f:	je     0x425d80
  425c35:	movzx  eax,BYTE PTR [rdi+0x4]
  425c39:	lea    rcx,[rsp+0x60]
  425c3e:	mov    rdx,rbp
  425c41:	mov    ebx,DWORD PTR [rsp+0x50]
  425c45:	mov    r14,QWORD PTR [rsp+0x58]
  425c4a:	mov    esi,0xffffffff
  425c4f:	movzx  r15d,BYTE PTR [rbp+0x492]
  425c57:	mov    r8d,eax
  425c5a:	mov    DWORD PTR [rsp+0x48],eax
  425c5e:	call   0x420490
  425c63:	movsxd rax,DWORD PTR [rsp+0x70]
  425c68:	mov    r8,QWORD PTR [rbp+0x478]
  425c6f:	mov    QWORD PTR [rsp+0x40],rsi
  425c74:	cmp    rax,0x1f
  425c78:	mov    DWORD PTR [rsp+0x4c],eax
  425c7c:	mov    QWORD PTR [rsp+0x30],rax
  425c81:	jbe    0x425e90
  425c87:	cmp    r8,0x1f
  425c8b:	mov    r11d,0xffffffff
  425c91:	jbe    0x425e74
  425c97:	mov    rax,QWORD PTR [rsp+0x30]
  425c9c:	xor    edx,edx
  425c9e:	mov    esi,ebx
  425ca0:	mov    r10,rsi
  425ca3:	mov    QWORD PTR [rsp+0x38],rsi
  425ca8:	div    r8
  425cab:	lea    r9,[rax+rax*1]
  425caf:	sub    r10,r9
  425cb2:	test   rax,rax
  425cb5:	je     0x425cf2
  425cb7:	mov    ecx,r8d
  425cba:	lea    r8,[r14+r10*1]
  425cbe:	add    r10,rax
  425cc1:	mov    edx,r11d
  425cc4:	add    r10,r14
  425cc7:	xor    ebx,ebx
  425cc9:	mov    rsi,r8
  425ccc:	jmp    0x425ce6
  425cce:	xchg   ax,ax
  425cd0:	movzx  eax,BYTE PTR [rsi]
  425cd3:	shl    ebx,cl
  425cd5:	and    eax,edx
  425cd7:	sub    r10,0x1
  425cdb:	or     ebx,eax
  425cdd:	add    rsi,0x1
  425ce1:	cmp    r8,r10
  425ce4:	je     0x425cf4
  425ce6:	test   r15b,r15b
  425ce9:	jne    0x425cd0
  425ceb:	movzx  eax,BYTE PTR [r10-0x1]
  425cf0:	jmp    0x425cd3
  425cf2:	xor    ebx,ebx
  425cf4:	cmp    QWORD PTR [rsp+0x38],r9
  425cf9:	jbe    0x425d11
  425cfb:	lea    r8,[rip+0x2c36e]        # 0x452070
  425d02:	xor    edx,edx
  425d04:	mov    rcx,rbp
  425d07:	call   0x414b60
  425d0c:	mov    r14,QWORD PTR [rsp+0x58]
  425d11:	mov    eax,DWORD PTR [rsp+0x48]
  425d15:	sub    eax,0x3a
  425d18:	cmp    QWORD PTR [rsp+0x30],0x1f
  425d1e:	ja     0x425d36
  425d20:	cmp    eax,0x1
  425d23:	jbe    0x425d32
  425d25:	cmp    BYTE PTR [rbp+0x491],0x0
  425d2c:	je     0x425f30
  425d32:	and    ebx,DWORD PTR [rsp+0x40]
  425d36:	cmp    eax,0x1
  425d39:	jbe    0x425f00
  425d3f:	cmp    BYTE PTR [rbp+0x491],0x0
  425d46:	jne    0x425f00
  425d4c:	mov    DWORD PTR [r13+0x0],0x0
  425d54:	mov    DWORD PTR [r12],0x1
  425d5c:	cmp    QWORD PTR [rdi+0x10],r14
  425d60:	je     0x425d6a
  425d62:	mov    rcx,r14
  425d65:	call   0x4494c8
  425d6a:	mov    eax,ebx
  425d6c:	add    rsp,0x88
  425d73:	pop    rbx
  425d74:	pop    rsi
  425d75:	pop    rdi
  425d76:	pop    rbp
  425d77:	pop    r12
  425d79:	pop    r13
  425d7b:	pop    r14
  425d7d:	pop    r15
  425d7f:	ret    
  425d80:	mov    r10,QWORD PTR [rbp+0x480]
  425d87:	mov    rsi,QWORD PTR [rbp+0x478]
  425d8e:	xor    edx,edx
  425d90:	mov    r8d,DWORD PTR [rsp+0x50]
  425d95:	mov    r14,QWORD PTR [rsp+0x58]
  425d9a:	mov    r11d,0xffffffff
  425da0:	mov    rax,r10
  425da3:	div    rsi
  425da6:	cmp    rsi,0x1f
  425daa:	mov    r9,rax
  425dad:	jbe    0x425e60
  425db3:	lea    r15d,[r8-0x1]
  425db7:	test   r15d,r15d
  425dba:	mov    rax,r15
  425dbd:	je     0x425fba
  425dc3:	mov    rdx,r14
  425dc6:	lea    rax,[r14+r15*1]
  425dca:	xor    ebx,ebx
  425dcc:	mov    rcx,rsi
  425dcf:	jmp    0x425ddf
  425dd1:	shl    ebx,cl
  425dd3:	add    rdx,0x1
  425dd7:	or     ebx,r8d
  425dda:	cmp    rdx,rax
  425ddd:	je     0x425df8
  425ddf:	movzx  r8d,BYTE PTR [rdx]
  425de3:	and    r8d,r11d
  425de6:	cmp    rcx,0x1f
  425dea:	jbe    0x425dd1
  425dec:	add    rdx,0x1
  425df0:	mov    ebx,r8d
  425df3:	cmp    rdx,rax
  425df6:	jne    0x425ddf
  425df8:	cmp    r9,r15
  425dfb:	mov    rsi,rcx
  425dfe:	jb     0x425ec0
  425e04:	cmp    r15,0x1
  425e08:	je     0x425f50
  425e0e:	cmp    BYTE PTR [rbp+0x428],0x0
  425e15:	jne    0x425f90
  425e1b:	mov    rsi,r10
  425e1e:	xor    edx,edx
  425e20:	cmp    rsi,0x1f
  425e24:	mov    eax,r15d
  425e27:	ja     0x425e52
  425e29:	mov    eax,0x1
  425e2e:	mov    ecx,esi
  425e30:	shl    eax,cl
  425e32:	lea    edx,[rax-0x1]
  425e35:	mov    eax,r15d
  425e38:	nop    DWORD PTR [rax+rax*1+0x0]
  425e40:	sub    esi,0x1
  425e43:	bt     ebx,esi
  425e46:	jae    0x425fb5
  425e4c:	not    edx
  425e4e:	or     ebx,edx
  425e50:	xor    edx,edx
  425e52:	mov    DWORD PTR [r12],eax
  425e56:	mov    DWORD PTR [r13+0x0],edx
  425e5a:	jmp    0x425d5c
  425e5f:	nop
  425e60:	mov    r11d,0x1
  425e66:	mov    ecx,esi
  425e68:	shl    r11,cl
  425e6b:	sub    r11,0x1
  425e6f:	jmp    0x425db3
  425e74:	mov    edx,0x1
  425e79:	mov    ecx,r8d
  425e7c:	shl    rdx,cl
  425e7f:	lea    r11,[rdx-0x1]
  425e83:	jmp    0x425c97
  425e88:	nop    DWORD PTR [rax+rax*1+0x0]
  425e90:	movzx  ecx,BYTE PTR [rsp+0x4c]
  425e95:	mov    eax,0x1
  425e9a:	mov    r11d,0xffffffff
  425ea0:	shl    rax,cl
  425ea3:	sub    rax,0x1
  425ea7:	cmp    r8,0x1f
  425eab:	mov    QWORD PTR [rsp+0x40],rax
  425eb0:	ja     0x425c97
  425eb6:	jmp    0x425e74
  425eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  425ec0:	lea    r8,[rip+0x2c1a9]        # 0x452070
  425ec7:	xor    edx,edx
  425ec9:	mov    rcx,rbp
  425ecc:	mov    QWORD PTR [rsp+0x30],r9
  425ed1:	call   0x414b60
  425ed6:	mov    r9,QWORD PTR [rsp+0x30]
  425edb:	cmp    r9,0x1
  425edf:	jbe    0x425fbe
  425ee5:	mov    r14,QWORD PTR [rsp+0x58]
  425eea:	mov    rsi,QWORD PTR [rbp+0x480]
  425ef1:	mov    r15,r9
  425ef4:	jmp    0x425e1e
  425ef9:	nop    DWORD PTR [rax+0x0]
  425f00:	mov    DWORD PTR [r13+0x0],0x1
  425f08:	jmp    0x425d54
  425f0d:	nop    DWORD PTR [rax]
  425f10:	lea    r8,[rip+0x2c139]        # 0x452050
  425f17:	mov    edx,0x3
  425f1c:	xor    ebx,ebx
  425f1e:	call   0x414b60
  425f23:	jmp    0x425d6a
  425f28:	nop    DWORD PTR [rax+rax*1+0x0]
  425f30:	mov    edx,DWORD PTR [rsp+0x4c]
  425f34:	sub    edx,0x1
  425f37:	bt     ebx,edx
  425f3a:	jae    0x425d32
  425f40:	mov    eax,DWORD PTR [rsp+0x40]
  425f44:	not    eax
  425f46:	or     ebx,eax
  425f48:	jmp    0x425d4c
  425f4d:	nop    DWORD PTR [rax]
  425f50:	mov    eax,0x1
  425f55:	cmp    rsi,0x1f
  425f59:	movzx  r8d,BYTE PTR [rbp+0x490]
  425f61:	ja     0x425f7a
  425f63:	mov    edx,0x1
  425f68:	mov    ecx,esi
  425f6a:	shl    edx,cl
  425f6c:	sub    edx,0x1
  425f6f:	test   r8b,r8b
  425f72:	je     0x425e40
  425f78:	and    ebx,edx
  425f7a:	movzx  edx,r8b
  425f7e:	mov    DWORD PTR [r12],eax
  425f82:	mov    DWORD PTR [r13+0x0],edx
  425f86:	jmp    0x425d5c
  425f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  425f90:	lea    r8,[rip+0x2c109]        # 0x4520a0
  425f97:	mov    edx,0x5
  425f9c:	mov    rcx,rbp
  425f9f:	call   0x414b90
  425fa4:	mov    r10,QWORD PTR [rbp+0x480]
  425fab:	mov    r14,QWORD PTR [rsp+0x58]
  425fb0:	jmp    0x425e1b
  425fb5:	xor    r8d,r8d
  425fb8:	jmp    0x425f78
  425fba:	xor    ebx,ebx
  425fbc:	jmp    0x425f55
  425fbe:	mov    eax,r9d
  425fc1:	mov    r14,QWORD PTR [rsp+0x58]
  425fc6:	jmp    0x425f55
  425fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  425fd0:	push   rbp
  425fd1:	push   r15
  425fd3:	push   r14
  425fd5:	push   r13
  425fd7:	push   r12
  425fd9:	push   rdi
  425fda:	push   rsi
  425fdb:	push   rbx
  425fdc:	sub    rsp,0x48
  425fe0:	lea    rbp,[rsp+0x80]
  425fe8:	lea    rax,[r8+0x1f]
  425fec:	mov    r10,rdx
  425fef:	mov    QWORD PTR [rbp+0x10],rcx
  425ff3:	and    rax,0xfffffffffffffff0
  425ff7:	call   0x43d410
  425ffc:	sub    rsp,rax
  425fff:	test   r8,r8
  426002:	lea    rdi,[rsp+0x20]
  426007:	je     0x4261d9
  42600d:	lea    rax,[rbp-0x50]
  426011:	mov    rbx,rdi
  426014:	xor    ecx,ecx
  426016:	mov    rdx,QWORD PTR [rip+0x34e13]        # 0x45ae30
  42601d:	mov    r12,QWORD PTR [rip+0x34ddc]        # 0x45ae00
  426024:	mov    QWORD PTR [rbp-0x58],rax
  426028:	jmp    0x426043
  42602a:	nop    WORD PTR [rax+rax*1+0x0]
  426030:	mov    BYTE PTR [rbx],al
  426032:	add    rcx,0x1
  426036:	add    rbx,0x1
  42603a:	cmp    r8,rcx
  42603d:	jbe    0x42614f
  426043:	movzx  eax,BYTE PTR [r10+rcx*1]
  426048:	cmp    al,0x5c
  42604a:	jne    0x426030
  42604c:	xor    r9d,r9d
  42604f:	cmp    BYTE PTR [r10+rcx*1+0x1],0x75
  426055:	mov    r14,rdi
  426058:	lea    rsi,[rcx+0x2]
  42605c:	lea    rax,[rcx+0x1]
  426060:	setne  r9b
  426064:	sub    r14,rbx
  426067:	add    r14,r8
  42606a:	cmp    r8,rsi
  42606d:	lea    r9d,[r9*4+0x4]
  426075:	jbe    0x42617f
  42607b:	movzx  r11d,BYTE PTR [r10+rcx*1+0x2]
  426081:	test   BYTE PTR [rdx+r11*2+0x1],0x1
  426087:	je     0x42617f
  42608d:	xor    eax,eax
  42608f:	jmp    0x426094
  426091:	mov    rsi,rcx
  426094:	movzx  ecx,BYTE PTR [r12+r11*1]
  426099:	shl    eax,0x4
  42609c:	sub    r9d,0x1
  4260a0:	add    eax,ecx
  4260a2:	lea    rcx,[rsi+0x1]
  4260a6:	cmp    r8,rcx
  4260a9:	jbe    0x4260bd
  4260ab:	test   r9d,r9d
  4260ae:	je     0x4260bd
  4260b0:	movzx  r11d,BYTE PTR [r10+rcx*1]
  4260b5:	test   BYTE PTR [rdx+r11*2+0x1],0x1
  4260bb:	jne    0x426091
  4260bd:	cmp    eax,0x24
  4260c0:	jne    0x4260d0
  4260c2:	mov    BYTE PTR [rbx],0x24
  4260c5:	add    rbx,0x1
  4260c9:	jmp    0x42603a
  4260ce:	xchg   ax,ax
  4260d0:	cmp    eax,0x7f
  4260d3:	jbe    0x426184
  4260d9:	mov    rsi,QWORD PTR [rbp-0x58]
  4260dd:	mov    r11d,0x1
  4260e3:	lea    r15,[rip+0x2c006]        # 0x4520f0
  4260ea:	lea    r9,[rsi+0x6]
  4260ee:	jmp    0x4260f3
  4260f0:	mov    r11,rsi
  4260f3:	mov    esi,eax
  4260f5:	shr    eax,0x6
  4260f8:	sub    r9,0x1
  4260fc:	and    esi,0x3f
  4260ff:	or     esi,0xffffff80
  426102:	cmp    eax,0x3e
  426105:	mov    BYTE PTR [r9],sil
  426108:	lea    rsi,[r11+0x1]
  42610c:	ja     0x4260f0
  42610e:	movzx  r13d,BYTE PTR [r15+r11*1+0x1]
  426114:	test   r13d,eax
  426117:	jne    0x4260f0
  426119:	lea    r13,[rip+0x2bfcb]        # 0x4520eb
  426120:	or     al,BYTE PTR [r13+r11*1+0x0]
  426125:	cmp    r14,rsi
  426128:	mov    BYTE PTR [r9-0x1],al
  42612c:	jae    0x42619a
  42612e:	call   QWORD PTR [rip+0x3e650]        # 0x464784
  426134:	mov    rcx,QWORD PTR [rbp+0x10]
  426138:	lea    r8,[rip+0x2bd59]        # 0x451e98
  42613f:	mov    DWORD PTR [rax],0x7
  426145:	mov    edx,0x3
  42614a:	call   0x414d60
  42614f:	sub    rbx,rdi
  426152:	mov    r8,rbx
  426155:	mov    rax,QWORD PTR [rbp+0x10]
  426159:	mov    r9d,0x1
  42615f:	mov    rdx,rdi
  426162:	mov    rcx,QWORD PTR [rax+0x3f8]
  426169:	call   0x41ff20
  42616e:	lea    rsp,[rbp-0x38]
  426172:	pop    rbx
  426173:	pop    rsi
  426174:	pop    rdi
  426175:	pop    r12
  426177:	pop    r13
  426179:	pop    r14
  42617b:	pop    r15
  42617d:	pop    rbp
  42617e:	ret    
  42617f:	mov    rsi,rax
  426182:	xor    eax,eax
  426184:	test   r14,r14
  426187:	mov    BYTE PTR [rbp-0x4b],al
  42618a:	je     0x42612e
  42618c:	lea    rcx,[rsi+0x1]
  426190:	mov    rsi,QWORD PTR [rbp-0x58]
  426194:	lea    r9,[rsi+0x5]
  426198:	jmp    0x4261af
  42619a:	mov    rsi,QWORD PTR [rbp-0x58]
  42619e:	sub    r9,0x1
  4261a2:	lea    r11,[rsi+0x6]
  4261a6:	cmp    r9,r11
  4261a9:	jae    0x42603a
  4261af:	mov    rsi,QWORD PTR [rbp-0x58]
  4261b3:	lea    r11,[rsi+0x6]
  4261b7:	jmp    0x4261c4
  4261b9:	nop    DWORD PTR [rax+0x0]
  4261c0:	movzx  eax,BYTE PTR [r9]
  4261c4:	add    r9,0x1
  4261c8:	add    rbx,0x1
  4261cc:	mov    BYTE PTR [rbx-0x1],al
  4261cf:	cmp    r9,r11
  4261d2:	jb     0x4261c0
  4261d4:	jmp    0x42603a
  4261d9:	xor    r8d,r8d
  4261dc:	jmp    0x426155
  4261e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4261e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4261f0:	push   r14
  4261f2:	push   r13
  4261f4:	push   r12
  4261f6:	push   rbp
  4261f7:	push   rdi
  4261f8:	push   rsi
  4261f9:	push   rbx
  4261fa:	sub    rsp,0x70
  4261fe:	mov    rbx,QWORD PTR [rsp+0xd0]
  426206:	mov    rdi,QWORD PTR [rsp+0xe0]
  42620e:	mov    r13,rcx
  426211:	mov    rsi,r8
  426214:	lea    rcx,[rsp+0x30]
  426219:	lea    r8,[rip+0x2b595]        # 0x4517b5
  426220:	mov    rbp,r9
  426223:	mov    r9,rdx
  426226:	mov    rdx,r13
  426229:	call   0x420750
  42622e:	mov    r12,QWORD PTR [rsp+0x30]
  426233:	lea    rax,[rip+0xffffffffffffa4b6]        # 0x4206f0
  42623a:	mov    r14,QWORD PTR [rsp+0x38]
  42623f:	cmp    r12,rax
  426242:	je     0x426390
  426248:	cmp    rbx,0x10000
  42624f:	mov    eax,0x10000
  426254:	cmovae rax,rbx
  426258:	mov    rcx,rax
  42625b:	mov    QWORD PTR [rsp+0x58],rax
  426260:	call   0x43baf0
  426265:	mov    QWORD PTR [rsp+0x60],0x0
  42626e:	mov    QWORD PTR [rsp+0x50],rax
  426273:	lea    r9,[rsp+0x50]
  426278:	mov    r8,rbx
  42627b:	mov    rdx,rsi
  42627e:	mov    rcx,r14
  426281:	call   r12
  426284:	test   al,al
  426286:	je     0x426360
  42628c:	mov    rcx,rsi
  42628f:	call   0x4494c8
  426294:	lea    rax,[rip+0xffffffffffffa2c5]        # 0x420560
  42629b:	cmp    r12,rax
  42629e:	je     0x4263c0
  4262a4:	mov    r10,QWORD PTR [rsp+0x60]
  4262a9:	mov    r9,QWORD PTR [rsp+0x58]
  4262ae:	mov    rcx,QWORD PTR [rsp+0x50]
  4262b3:	lea    rax,[r10+0x1000]
  4262ba:	lea    rdx,[r10+0x10]
  4262be:	cmp    rax,r9
  4262c1:	jb     0x426330
  4262c3:	cmp    rdx,r9
  4262c6:	ja     0x426330
  4262c8:	add    r10,rcx
  4262cb:	mov    QWORD PTR [r10],0x0
  4262d2:	mov    QWORD PTR [r10+0x8],0x0
  4262da:	mov    rax,QWORD PTR [rsp+0x60]
  4262df:	mov    rdx,QWORD PTR [rsp+0x50]
  4262e4:	test   rax,rax
  4262e7:	je     0x4262f4
  4262e9:	cmp    BYTE PTR [rdx+rax*1-0x1],0xd
  4262ee:	je     0x4263b0
  4262f4:	mov    BYTE PTR [rdx+rax*1],0xa
  4262f8:	mov    rcx,QWORD PTR [rsp+0x60]
  4262fd:	mov    rdx,QWORD PTR [rsp+0x50]
  426302:	cmp    rcx,0x2
  426306:	mov    QWORD PTR [rdi],rcx
  426309:	mov    rax,rdx
  42630c:	jbe    0x426313
  42630e:	cmp    BYTE PTR [rdx],0xef
  426311:	je     0x426344
  426313:	mov    rcx,QWORD PTR [rsp+0xd8]
  42631b:	mov    QWORD PTR [rcx],rdx
  42631e:	add    rsp,0x70
  426322:	pop    rbx
  426323:	pop    rsi
  426324:	pop    rdi
  426325:	pop    rbp
  426326:	pop    r12
  426328:	pop    r13
  42632a:	pop    r14
  42632c:	ret    
  42632d:	nop    DWORD PTR [rax]
  426330:	call   0x43bb70
  426335:	mov    r10,QWORD PTR [rsp+0x60]
  42633a:	mov    QWORD PTR [rsp+0x50],rax
  42633f:	mov    rcx,rax
  426342:	jmp    0x4262c8
  426344:	cmp    BYTE PTR [rdx+0x1],0xbb
  426348:	jne    0x426313
  42634a:	cmp    BYTE PTR [rdx+0x2],0xbf
  42634e:	jne    0x426313
  426350:	sub    rcx,0x3
  426354:	lea    rax,[rdx+0x3]
  426358:	mov    QWORD PTR [rdi],rcx
  42635b:	jmp    0x426313
  42635d:	nop    DWORD PTR [rax]
  426360:	lea    rax,[rip+0x2b44e]        # 0x4517b5
  426367:	mov    r9,QWORD PTR [r13+0x458]
  42636e:	lea    r8,[rip+0x2bd4e]        # 0x4520c3
  426375:	mov    edx,0x3
  42637a:	mov    rcx,r13
  42637d:	mov    QWORD PTR [rsp+0x20],rax
  426382:	call   0x414b60
  426387:	jmp    0x42628c
  42638c:	nop    DWORD PTR [rax+0x0]
  426390:	mov    QWORD PTR [rsp+0x50],rsi
  426395:	mov    QWORD PTR [rsp+0x58],rbp
  42639a:	mov    rcx,rsi
  42639d:	mov    QWORD PTR [rsp+0x60],rbx
  4263a2:	mov    r9,rbp
  4263a5:	mov    r10,rbx
  4263a8:	jmp    0x4262b3
  4263ad:	nop    DWORD PTR [rax]
  4263b0:	mov    BYTE PTR [rdx+rax*1],0xd
  4263b4:	jmp    0x4262f8
  4263b9:	nop    DWORD PTR [rax+0x0]
  4263c0:	mov    rcx,r14
  4263c3:	call   0x427028
  4263c8:	jmp    0x4262a4
  4263cd:	nop    DWORD PTR [rax]
  4263d0:	lea    rax,[rip+0x2b3de]        # 0x4517b5
  4263d7:	ret    
  4263d8:	nop
  4263d9:	nop
  4263da:	nop
  4263db:	nop
  4263dc:	nop
  4263dd:	nop
  4263de:	nop
  4263df:	nop
  4263e0:	push   rbp
  4263e1:	push   rdi
  4263e2:	push   rsi
  4263e3:	push   rbx
  4263e4:	sub    rsp,0x28
  4263e8:	lea    rbp,[rsp+0x80]
  4263f0:	mov    rbx,rcx
  4263f3:	call   0x41e080
  4263f8:	cmp    BYTE PTR [rax+0x4],0x25
  4263fc:	je     0x426415
  4263fe:	mov    edx,0x1
  426403:	mov    rcx,rbx
  426406:	call   0x40ccd0
  42640b:	nop
  42640c:	lea    rsp,[rbp-0x58]
  426410:	pop    rbx
  426411:	pop    rsi
  426412:	pop    rdi
  426413:	pop    rbp
  426414:	ret    
  426415:	mov    rcx,rbx
  426418:	call   0x41e080
  42641d:	cmp    BYTE PTR [rax+0x4],0x37
  426421:	je     0x426440
  426423:	mov    edx,0x2
  426428:	mov    rcx,rbx
  42642b:	call   0x40ccd0
  426430:	nop
  426431:	lea    rsp,[rbp-0x58]
  426435:	pop    rbx
  426436:	pop    rsi
  426437:	pop    rdi
  426438:	pop    rbp
  426439:	ret    
  42643a:	nop    WORD PTR [rax+rax*1+0x0]
  426440:	mov    rcx,rbx
  426443:	call   0x41e080
  426448:	cmp    BYTE PTR [rax+0x4],0x3d
  42644c:	mov    rsi,rax
  42644f:	jne    0x4264e0
  426455:	mov    r8d,DWORD PTR [rax+0x8]
  426459:	cmp    r8d,0x4
  42645d:	jbe    0x4264e0
  426463:	mov    r9,QWORD PTR [rax+0x10]
  426467:	lea    eax,[r8-0x2]
  42646b:	movzx  eax,BYTE PTR [r9+rax*1]
  426470:	cmp    al,0x5c
  426472:	je     0x426478
  426474:	cmp    al,0x2f
  426476:	jne    0x4264e0
  426478:	lea    eax,[r8-0x3]
  42647c:	movzx  edx,BYTE PTR [r9+rax*1]
  426481:	cmp    dl,0x5c
  426484:	je     0x42648b
  426486:	cmp    dl,0x2f
  426489:	jne    0x4264e0
  42648b:	mov    rdi,QWORD PTR [rbx+0x378]
  426492:	test   rdi,rdi
  426495:	je     0x42640c
  42649b:	add    rax,0x1e
  42649f:	shr    rax,0x4
  4264a3:	shl    rax,0x4
  4264a7:	call   0x43d410
  4264ac:	sub    rsp,rax
  4264af:	lea    rdx,[r9+0x1]
  4264b3:	sub    r8d,0x4
  4264b7:	lea    r10,[rsp+0x20]
  4264bc:	mov    rcx,r10
  4264bf:	call   0x449450
  4264c4:	mov    r10,rax
  4264c7:	mov    eax,DWORD PTR [rsi+0x8]
  4264ca:	mov    rcx,rbx
  4264cd:	mov    rdx,r10
  4264d0:	sub    eax,0x4
  4264d3:	mov    BYTE PTR [r10+rax*1],0x0
  4264d8:	call   rdi
  4264da:	jmp    0x42640c
  4264df:	nop
  4264e0:	mov    edx,0x3
  4264e5:	mov    rcx,rbx
  4264e8:	call   0x40ccd0
  4264ed:	nop
  4264ee:	lea    rsp,[rbp-0x58]
  4264f2:	pop    rbx
  4264f3:	pop    rsi
  4264f4:	pop    rdi
  4264f5:	pop    rbp
  4264f6:	ret    
  4264f7:	nop    WORD PTR [rax+rax*1+0x0]
  426500:	mov    DWORD PTR [rcx+0x414],edx
  426506:	movsxd rdx,edx
  426509:	lea    rax,[rdx+rdx*2]
  42650d:	lea    rax,[rdx+rax*4]
  426511:	lea    rdx,[rip+0x2fa68]        # 0x455f80
  426518:	add    rax,rdx
  42651b:	movzx  edx,BYTE PTR [rax]
  42651e:	mov    BYTE PTR [rcx+0x435],dl
  426524:	movzx  edx,BYTE PTR [rax+0x1]
  426528:	mov    BYTE PTR [rcx+0x418],dl
  42652e:	movzx  edx,BYTE PTR [rax+0x2]
  426532:	mov    BYTE PTR [rcx+0x41f],dl
  426538:	movzx  edx,BYTE PTR [rax+0x3]
  42653c:	mov    BYTE PTR [rcx+0x431],dl
  426542:	movzx  edx,BYTE PTR [rax+0x4]
  426546:	mov    BYTE PTR [rcx+0x441],dl
  42654c:	movzx  edx,BYTE PTR [rax+0x5]
  426550:	mov    BYTE PTR [rcx+0x436],dl
  426556:	mov    BYTE PTR [rcx+0x41d],dl
  42655c:	movzx  edx,BYTE PTR [rax+0x6]
  426560:	mov    BYTE PTR [rcx+0x419],dl
  426566:	movzx  edx,BYTE PTR [rax+0x7]
  42656a:	mov    BYTE PTR [rcx+0x41e],dl
  426570:	movzx  edx,BYTE PTR [rax+0x8]
  426574:	mov    BYTE PTR [rcx+0x420],dl
  42657a:	movzx  edx,BYTE PTR [rax+0x9]
  42657e:	mov    BYTE PTR [rcx+0x421],dl
  426584:	movzx  edx,BYTE PTR [rax+0xa]
  426588:	mov    BYTE PTR [rcx+0x43e],dl
  42658e:	movzx  edx,BYTE PTR [rax+0xb]
  426592:	movzx  eax,BYTE PTR [rax+0xc]
  426596:	mov    BYTE PTR [rcx+0x442],dl
  42659c:	mov    BYTE PTR [rcx+0x443],al
  4265a2:	ret    
  4265a3:	nop    DWORD PTR [rax]
  4265a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4265b0:	push   r13
  4265b2:	push   r12
  4265b4:	push   rbp
  4265b5:	push   rdi
  4265b6:	push   rsi
  4265b7:	push   rbx
  4265b8:	sub    rsp,0x38
  4265bc:	mov    rsi,rdx
  4265bf:	mov    edx,DWORD PTR [rip+0x3c0bb]        # 0x462680
  4265c5:	mov    ebp,ecx
  4265c7:	mov    r12,r8
  4265ca:	test   edx,edx
  4265cc:	jne    0x42661c
  4265ce:	mov    DWORD PTR [rip+0x3c0a8],0x1        # 0x462680
  4265d8:	call   0x41ba60
  4265dd:	mov    BYTE PTR [rip+0x3bfd9],0x23        # 0x4625bd
  4265e4:	mov    BYTE PTR [rip+0x3bfbe],0x5d        # 0x4625a9
  4265eb:	mov    BYTE PTR [rip+0x3bfaf],0x7c        # 0x4625a1
  4265f2:	mov    BYTE PTR [rip+0x3bfaf],0x5b        # 0x4625a8
  4265f9:	mov    BYTE PTR [rip+0x3bfa7],0x5e        # 0x4625a7
  426600:	mov    BYTE PTR [rip+0x3bfb7],0x7d        # 0x4625be
  426607:	mov    BYTE PTR [rip+0x3bfa1],0x5c        # 0x4625af
  42660e:	mov    BYTE PTR [rip+0x3bfa7],0x7b        # 0x4625bc
  426615:	mov    BYTE PTR [rip+0x3bf91],0x7e        # 0x4625ad
  42661c:	mov    edx,0x538
  426621:	mov    ecx,0x1
  426626:	call   0x43bb20
  42662b:	lea    r13,[rax+0x50]
  42662f:	lea    rdi,[rax+0x58]
  426633:	mov    rbx,rax
  426636:	mov    QWORD PTR [rax+0x50],0x0
  42663e:	mov    QWORD PTR [rax+0x80],0x0
  426649:	mov    edx,ebp
  42664b:	and    rdi,0xfffffffffffffff8
  42664f:	mov    rax,r13
  426652:	sub    rax,rdi
  426655:	add    eax,0x38
  426658:	shr    eax,0x3
  42665b:	mov    ecx,eax
  42665d:	xor    eax,eax
  42665f:	rep stos QWORD PTR es:[rdi],rax
  426662:	mov    rcx,rbx
  426665:	lea    rdi,[rbx+0x1b0]
  42666c:	call   0x426500
  426671:	mov    BYTE PTR [rbx+0x428],0x1
  426678:	mov    BYTE PTR [rbx+0x41b],0x1
  42667f:	mov    BYTE PTR [rbx+0x41c],0x1
  426686:	mov    DWORD PTR [rbx+0x410],0x8
  426690:	mov    BYTE PTR [rbx+0x43b],0x1
  426697:	mov    BYTE PTR [rbx+0x427],0x2
  42669e:	mov    BYTE PTR [rbx+0x42b],0x1
  4266a5:	mov    BYTE PTR [rbx+0x423],0x1
  4266ac:	mov    BYTE PTR [rbx+0x42a],0x0
  4266b3:	mov    BYTE PTR [rbx+0x430],0x1
  4266ba:	mov    BYTE PTR [rbx+0x432],0x1
  4266c1:	mov    BYTE PTR [rbx+0x42d],0x1
  4266c8:	mov    BYTE PTR [rbx+0x42e],0x1
  4266cf:	mov    BYTE PTR [rbx+0x43a],0x2
  4266d6:	mov    DWORD PTR [rbx+0x460],0x1
  4266e0:	mov    BYTE PTR [rbx+0x43f],0x1
  4266e7:	mov    BYTE PTR [rbx+0x495],0x1
  4266ee:	mov    BYTE PTR [rbx+0x440],0x1
  4266f5:	mov    BYTE PTR [rbx+0x425],0x0
  4266fc:	mov    QWORD PTR [rbx+0x470],0x20
  426707:	mov    QWORD PTR [rbx+0x478],0x8
  426712:	mov    QWORD PTR [rbx+0x488],0x20
  42671d:	mov    QWORD PTR [rbx+0x480],0x20
  426728:	mov    BYTE PTR [rbx+0x490],0x0
  42672f:	mov    BYTE PTR [rbx+0x491],0x1
  426736:	mov    BYTE PTR [rbx+0x492],0x1
  42673d:	call   0x4263d0
  426742:	mov    QWORD PTR [rbx+0x450],0x0
  42674d:	mov    QWORD PTR [rbx+0x448],rax
  426754:	call   0x4263d0
  426759:	cmp    BYTE PTR [rbx+0x41b],0x0
  426760:	mov    QWORD PTR [rbx+0x458],rax
  426767:	lea    rax,[rip+0x2f4d2]        # 0x455c40
  42676e:	mov    rcx,rdi
  426771:	mov    edx,0xfa
  426776:	mov    QWORD PTR [rbx+0x28],r12
  42677a:	mov    QWORD PTR [rbx+0xd0],rax
  426781:	mov    BYTE PTR [rbx+0x27c],0x51
  426788:	mov    QWORD PTR [rbx+0x280],0x0
  426793:	mov    BYTE PTR [rbx+0x294],0x16
  42679a:	sete   BYTE PTR [rbx+0x15]
  42679e:	xor    eax,eax
  4267a0:	mov    WORD PTR [rbx+0x296],ax
  4267a7:	call   0x41c390
  4267ac:	mov    rax,QWORD PTR [rbx+0x1c0]
  4267b3:	xor    edx,edx
  4267b5:	mov    rcx,rbx
  4267b8:	mov    QWORD PTR [rbx+0x1d0],rdi
  4267bf:	mov    QWORD PTR [rbx+0x88],r13
  4267c6:	mov    QWORD PTR [rbx+0x78],0x0
  4267ce:	mov    QWORD PTR [rbx+0x50],0x0
  4267d6:	mov    QWORD PTR [rbx+0x1a8],rax
  4267dd:	mov    QWORD PTR [rbx+0x58],0x0
  4267e5:	call   0x41cec0
  4267ea:	xor    edx,edx
  4267ec:	mov    rcx,rbx
  4267ef:	mov    QWORD PTR [rbx+0x38],rax
  4267f3:	call   0x41cec0
  4267f8:	mov    rcx,rbx
  4267fb:	mov    QWORD PTR [rbx+0x40],rax
  4267ff:	mov    QWORD PTR [rbx+0x528],0x0
  42680a:	mov    QWORD PTR [rbx+0x530],0x0
  426815:	call   0x416cc0
  42681a:	mov    rax,QWORD PTR [rip+0x3467f]        # 0x45aea0
  426821:	lea    r9,[rip+0x152c8]        # 0x43baf0
  426828:	lea    rcx,[rbx+0x308]
  42682f:	xor    r8d,r8d
  426832:	xor    edx,edx
  426834:	mov    QWORD PTR [rsp+0x20],rax
  426839:	call   0x439830
  42683e:	mov    rcx,rbx
  426841:	call   0x41a8e0
  426846:	mov    rdx,rsi
  426849:	mov    rcx,rbx
  42684c:	call   0x41b200
  426851:	mov    rax,rbx
  426854:	add    rsp,0x38
  426858:	pop    rbx
  426859:	pop    rsi
  42685a:	pop    rdi
  42685b:	pop    rbp
  42685c:	pop    r12
  42685e:	pop    r13
  426860:	ret    
  426861:	nop    DWORD PTR [rax+rax*1+0x0]
  426866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426870:	mov    QWORD PTR [rcx+0x28],rdx
  426874:	ret    
  426875:	nop
  426876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426880:	push   rbp
  426881:	push   rdi
  426882:	push   rsi
  426883:	push   rbx
  426884:	sub    rsp,0x28
  426888:	mov    rbx,rcx
  42688b:	mov    rcx,QWORD PTR [rcx+0x400]
  426892:	call   0x4494c8
  426897:	cmp    QWORD PTR [rbx],0x0
  42689b:	je     0x4268ae
  42689d:	nop    DWORD PTR [rax]
  4268a0:	mov    rcx,rbx
  4268a3:	call   0x414000
  4268a8:	cmp    QWORD PTR [rbx],0x0
  4268ac:	jne    0x4268a0
  4268ae:	mov    rcx,QWORD PTR [rbx+0x4d0]
  4268b5:	call   0x4494c8
  4268ba:	mov    rcx,QWORD PTR [rbx+0x1e0]
  4268c1:	test   rcx,rcx
  4268c4:	je     0x4268e0
  4268c6:	call   0x4494c8
  4268cb:	mov    QWORD PTR [rbx+0x1e0],0x0
  4268d6:	mov    DWORD PTR [rbx+0x1e8],0x0
  4268e0:	mov    rcx,QWORD PTR [rbx+0x2a8]
  4268e7:	test   rcx,rcx
  4268ea:	je     0x4268f1
  4268ec:	call   0x41f3e0
  4268f1:	lea    rcx,[rbx+0x308]
  4268f8:	xor    edx,edx
  4268fa:	lea    rbp,[rbx+0x1b0]
  426901:	call   0x439b90
  426906:	mov    rcx,rbx
  426909:	call   0x41b370
  42690e:	mov    rcx,rbx
  426911:	call   0x41a9d0
  426916:	mov    rcx,rbx
  426919:	call   0x4214f0
  42691e:	mov    rcx,QWORD PTR [rbx+0x38]
  426922:	call   0x41d0b0
  426927:	mov    rcx,QWORD PTR [rbx+0x40]
  42692b:	call   0x41d0b0
  426930:	mov    rcx,QWORD PTR [rbx+0x48]
  426934:	call   0x41d0b0
  426939:	mov    rcx,QWORD PTR [rbx+0x1c0]
  426940:	mov    rsi,QWORD PTR [rbx+0x1b0]
  426947:	call   0x4494c8
  42694c:	jmp    0x42696c
  42694e:	xchg   ax,ax
  426950:	mov    rcx,QWORD PTR [rsi+0x10]
  426954:	mov    rdi,QWORD PTR [rsi]
  426957:	call   0x4494c8
  42695c:	cmp    rbp,rsi
  42695f:	je     0x426969
  426961:	mov    rcx,rsi
  426964:	call   0x4494c8
  426969:	mov    rsi,rdi
  42696c:	test   rsi,rsi
  42696f:	jne    0x426950
  426971:	mov    rcx,QWORD PTR [rbx+0x50]
  426975:	test   rcx,rcx
  426978:	je     0x426990
  42697a:	nop    WORD PTR [rax+rax*1+0x0]
  426980:	mov    rsi,QWORD PTR [rcx]
  426983:	call   0x4494c8
  426988:	test   rsi,rsi
  42698b:	mov    rcx,rsi
  42698e:	jne    0x426980
  426990:	mov    rcx,QWORD PTR [rbx+0x518]
  426997:	test   rcx,rcx
  42699a:	je     0x4269d4
  42699c:	mov    eax,DWORD PTR [rbx+0x520]
  4269a2:	test   eax,eax
  4269a4:	jle    0x4269cf
  4269a6:	xor    edi,edi
  4269a8:	xor    esi,esi
  4269aa:	nop    WORD PTR [rax+rax*1+0x0]
  4269b0:	mov    rcx,QWORD PTR [rcx+rdi*1]
  4269b4:	add    esi,0x1
  4269b7:	add    rdi,0x10
  4269bb:	call   0x4494c8
  4269c0:	cmp    DWORD PTR [rbx+0x520],esi
  4269c6:	mov    rcx,QWORD PTR [rbx+0x518]
  4269cd:	jg     0x4269b0
  4269cf:	call   0x4494c8
  4269d4:	mov    rsi,QWORD PTR [rbx+0x528]
  4269db:	test   rsi,rsi
  4269de:	je     0x426a07
  4269e0:	mov    rax,QWORD PTR [rsi]
  4269e3:	mov    rcx,QWORD PTR [rsi+0x8]
  4269e7:	mov    QWORD PTR [rbx+0x528],rax
  4269ee:	call   0x4494c8
  4269f3:	mov    rcx,rsi
  4269f6:	call   0x4494c8
  4269fb:	mov    rsi,QWORD PTR [rbx+0x528]
  426a02:	test   rsi,rsi
  426a05:	jne    0x4269e0
  426a07:	mov    rcx,rbx
  426a0a:	add    rsp,0x28
  426a0e:	pop    rbx
  426a0f:	pop    rsi
  426a10:	pop    rdi
  426a11:	pop    rbp
  426a12:	jmp    0x4494c8
  426a17:	nop    WORD PTR [rax+rax*1+0x0]
  426a20:	lea    rax,[rip+0x2f359]        # 0x455d80
  426a27:	lea    r8,[rip+0x2f402]        # 0x455e30
  426a2e:	xchg   ax,ax
  426a30:	movzx  edx,WORD PTR [rax+0xa]
  426a34:	cmp    edx,ecx
  426a36:	je     0x426a44
  426a38:	add    rax,0x10
  426a3c:	cmp    rax,r8
  426a3f:	jb     0x426a30
  426a41:	xor    eax,eax
  426a43:	ret    
  426a44:	mov    rax,QWORD PTR [rax]
  426a47:	ret    
  426a48:	nop    DWORD PTR [rax+rax*1+0x0]
  426a50:	push   rdi
  426a51:	push   rsi
  426a52:	push   rbx
  426a53:	sub    rsp,0x20
  426a57:	cmp    BYTE PTR [rcx+0x43d],0x0
  426a5e:	mov    edi,0x80
  426a63:	mov    rsi,rcx
  426a66:	jne    0x426a78
  426a68:	cmp    BYTE PTR [rcx+0x493],0x0
  426a6f:	mov    dil,0x90
  426a72:	jne    0x426b10
  426a78:	lea    rbx,[rip+0x2f441]        # 0x455ec0
  426a7f:	add    rdi,rbx
  426a82:	cmp    rdi,rbx
  426a85:	jbe    0x426afe
  426a87:	nop    WORD PTR [rax+rax*1+0x0]
  426a90:	movzx  r8d,WORD PTR [rbx+0x8]
  426a95:	mov    rdx,QWORD PTR [rbx]
  426a98:	mov    rcx,rsi
  426a9b:	call   0x41b3b0
  426aa0:	movzx  edx,BYTE PTR [rax+0x18]
  426aa4:	and    edx,0xffffffc0
  426aa7:	or     edx,0x1
  426aaa:	mov    BYTE PTR [rax+0x18],dl
  426aad:	movzx  ecx,WORD PTR [rax+0x18]
  426ab1:	mov    edx,ecx
  426ab3:	and    ecx,0x3f
  426ab6:	shr    dx,0x6
  426aba:	mov    r8d,edx
  426abd:	or     r8d,0x4
  426ac1:	shl    r8d,0x6
  426ac5:	or     ecx,r8d
  426ac8:	mov    WORD PTR [rax+0x18],cx
  426acc:	cmp    BYTE PTR [rbx+0xc],0x0
  426ad0:	jne    0x426adb
  426ad2:	cmp    BYTE PTR [rsi+0x42e],0x0
  426ad9:	je     0x426aee
  426adb:	movzx  ecx,WORD PTR [rax+0x18]
  426adf:	or     edx,0x14
  426ae2:	shl    edx,0x6
  426ae5:	and    ecx,0x3f
  426ae8:	or     edx,ecx
  426aea:	mov    WORD PTR [rax+0x18],dx
  426aee:	movzx  edx,WORD PTR [rbx+0xa]
  426af2:	add    rbx,0x10
  426af6:	cmp    rbx,rdi
  426af9:	mov    DWORD PTR [rax+0x20],edx
  426afc:	jb     0x426a90
  426afe:	add    rsp,0x20
  426b02:	pop    rbx
  426b03:	pop    rsi
  426b04:	pop    rdi
  426b05:	ret    
  426b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426b10:	cmp    BYTE PTR [rcx+0x436],0x1
  426b17:	sbb    rdi,rdi
  426b1a:	and    edi,0x10
  426b1d:	add    rdi,0x90
  426b24:	jmp    0x426a78
  426b29:	nop    DWORD PTR [rax+0x0]
  426b30:	push   rsi
  426b31:	push   rbx
  426b32:	sub    rsp,0x28
  426b36:	mov    rbx,rcx
  426b39:	mov    esi,edx
  426b3b:	call   0x426a50
  426b40:	cmp    BYTE PTR [rbx+0x43d],0x0
  426b47:	jne    0x426b63
  426b49:	cmp    BYTE PTR [rbx+0x493],0x0
  426b50:	je     0x426c50
  426b56:	cmp    BYTE PTR [rbx+0x436],0x0
  426b5d:	jne    0x426c50
  426b63:	cmp    BYTE PTR [rbx+0x418],0x0
  426b6a:	mov    eax,DWORD PTR [rbx+0x414]
  426b70:	je     0x426bd0
  426b72:	lea    edx,[rax-0xb]
  426b75:	cmp    edx,0x1
  426b78:	jbe    0x426c94
  426b7e:	sub    eax,0x9
  426b81:	cmp    eax,0x1
  426b84:	jbe    0x426cb0
  426b8a:	lea    rdx,[rip+0x2f0e3]        # 0x455c74
  426b91:	mov    rcx,rbx
  426b94:	call   0x414880
  426b99:	cmp    BYTE PTR [rbx+0x420],0x0
  426ba0:	je     0x426bab
  426ba2:	cmp    BYTE PTR [rbx+0x418],0x0
  426ba9:	je     0x426c00
  426bab:	test   esi,esi
  426bad:	je     0x426c22
  426baf:	lea    rdx,[rip+0x2f151]        # 0x455d07
  426bb6:	mov    rcx,rbx
  426bb9:	call   0x414880
  426bbe:	cmp    BYTE PTR [rbx+0x41a],0x0
  426bc5:	jne    0x426c3a
  426bc7:	add    rsp,0x28
  426bcb:	pop    rbx
  426bcc:	pop    rsi
  426bcd:	ret    
  426bce:	xchg   ax,ax
  426bd0:	cmp    eax,0xd
  426bd3:	je     0x426c80
  426bd9:	cmp    eax,0x4
  426bdc:	je     0x426ce0
  426be2:	and    eax,0xfffffffb
  426be5:	cmp    eax,0x2
  426be8:	je     0x426cc4
  426bee:	cmp    BYTE PTR [rbx+0x435],0x0
  426bf5:	jne    0x426c64
  426bf7:	cmp    BYTE PTR [rbx+0x420],0x0
  426bfe:	je     0x426bab
  426c00:	lea    rdx,[rip+0x2f0dc]        # 0x455ce3
  426c07:	mov    rcx,rbx
  426c0a:	call   0x414880
  426c0f:	lea    rdx,[rip+0x2f0df]        # 0x455cf5
  426c16:	mov    rcx,rbx
  426c19:	call   0x414880
  426c1e:	test   esi,esi
  426c20:	jne    0x426baf
  426c22:	lea    rdx,[rip+0x2f0f0]        # 0x455d19
  426c29:	mov    rcx,rbx
  426c2c:	call   0x414880
  426c31:	cmp    BYTE PTR [rbx+0x41a],0x0
  426c38:	je     0x426bc7
  426c3a:	lea    rdx,[rip+0x2f0ea]        # 0x455d2b
  426c41:	mov    rcx,rbx
  426c44:	add    rsp,0x28
  426c48:	pop    rbx
  426c49:	pop    rsi
  426c4a:	jmp    0x414880
  426c4f:	nop
  426c50:	lea    rdx,[rip+0x2efea]        # 0x455c41
  426c57:	mov    rcx,rbx
  426c5a:	call   0x414880
  426c5f:	jmp    0x426b63
  426c64:	lea    rdx,[rip+0x2f05f]        # 0x455cca
  426c6b:	mov    rcx,rbx
  426c6e:	call   0x414880
  426c73:	jmp    0x426b99
  426c78:	nop    DWORD PTR [rax+rax*1+0x0]
  426c80:	lea    rdx,[rip+0x2f001]        # 0x455c88
  426c87:	mov    rcx,rbx
  426c8a:	call   0x414880
  426c8f:	jmp    0x426b99
  426c94:	lea    rdx,[rip+0x2efb1]        # 0x455c4c
  426c9b:	mov    rcx,rbx
  426c9e:	call   0x414880
  426ca3:	jmp    0x426b99
  426ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  426cb0:	lea    rdx,[rip+0x2efa9]        # 0x455c60
  426cb7:	mov    rcx,rbx
  426cba:	call   0x414880
  426cbf:	jmp    0x426b99
  426cc4:	lea    rdx,[rip+0x2efe6]        # 0x455cb1
  426ccb:	mov    rcx,rbx
  426cce:	call   0x414880
  426cd3:	jmp    0x426b99
  426cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  426ce0:	lea    rdx,[rip+0x2efb1]        # 0x455c98
  426ce7:	mov    rcx,rbx
  426cea:	call   0x414880
  426cef:	jmp    0x426b99
  426cf4:	xchg   ax,ax
  426cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d00:	push   rbp
  426d01:	push   rdi
  426d02:	push   rsi
  426d03:	push   rbx
  426d04:	sub    rsp,0x28
  426d08:	movzx  eax,BYTE PTR [rcx+0x418]
  426d0f:	test   al,al
  426d11:	je     0x426d1a
  426d13:	mov    BYTE PTR [rcx+0x429],0x0
  426d1a:	cmp    BYTE PTR [rcx+0x438],0x0
  426d21:	je     0x426de0
  426d27:	cmp    BYTE PTR [rcx+0x494],0x0
  426d2e:	jne    0x426d34
  426d30:	mov    BYTE PTR [rcx+0x18],0x1
  426d34:	cmp    BYTE PTR [rcx+0x427],0x2
  426d3b:	mov    BYTE PTR [rcx+0x43d],0x0
  426d42:	je     0x426e12
  426d48:	test   al,al
  426d4a:	je     0x426d70
  426d4c:	cmp    BYTE PTR [rcx+0x43b],0x0
  426d53:	je     0x426d70
  426d55:	cmp    BYTE PTR [rcx+0x43c],0x1
  426d5c:	sbb    edi,edi
  426d5e:	and    di,0xfdf8
  426d63:	add    di,0x209
  426d68:	jmp    0x426d7e
  426d6a:	nop    WORD PTR [rax+rax*1+0x0]
  426d70:	cmp    BYTE PTR [rcx+0x43c],0x0
  426d77:	je     0x426dd4
  426d79:	mov    edi,0x208
  426d7e:	lea    rbx,[rip+0x2effb]        # 0x455d80
  426d85:	lea    rbp,[rip+0x2f0a4]        # 0x455e30
  426d8c:	mov    rsi,rcx
  426d8f:	nop
  426d90:	movzx  r8d,WORD PTR [rbx+0x8]
  426d95:	mov    rdx,QWORD PTR [rbx]
  426d98:	mov    rcx,rsi
  426d9b:	add    rbx,0x10
  426d9f:	call   0x41b3b0
  426da4:	movzx  edx,WORD PTR [rax+0x18]
  426da8:	and    BYTE PTR [rax+0x10],0xfe
  426dac:	mov    r8d,edx
  426daf:	and    edx,0x3f
  426db2:	shr    r8w,0x6
  426db7:	or     r8d,edi
  426dba:	shl    r8d,0x6
  426dbe:	or     edx,r8d
  426dc1:	mov    WORD PTR [rax+0x18],dx
  426dc5:	movzx  ecx,BYTE PTR [rbx-0x6]
  426dc9:	cmp    rbx,rbp
  426dcc:	lea    edx,[rcx+rcx*1]
  426dcf:	mov    BYTE PTR [rax+0x10],dl
  426dd2:	jb     0x426d90
  426dd4:	add    rsp,0x28
  426dd8:	pop    rbx
  426dd9:	pop    rsi
  426dda:	pop    rdi
  426ddb:	pop    rbp
  426ddc:	ret    
  426ddd:	nop    DWORD PTR [rax]
  426de0:	cmp    BYTE PTR [rcx+0x427],0x2
  426de7:	movzx  edx,BYTE PTR [rcx+0x43d]
  426dee:	je     0x426e14
  426df0:	test   dl,dl
  426df2:	je     0x426d48
  426df8:	mov    BYTE PTR [rcx+0x419],0x0
  426dff:	mov    BYTE PTR [rcx+0x41d],0x0
  426e06:	mov    BYTE PTR [rcx+0x427],0x0
  426e0d:	jmp    0x426d48
  426e12:	xor    edx,edx
  426e14:	cmp    BYTE PTR [rcx+0x41d],0x0
  426e1b:	sete   BYTE PTR [rcx+0x427]
  426e22:	jmp    0x426df0
  426e24:	xchg   ax,ax
  426e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426e30:	push   rdi
  426e31:	push   rsi
  426e32:	push   rbx
  426e33:	sub    rsp,0x30
  426e37:	mov    r8d,DWORD PTR [rcx+0x468]
  426e3e:	mov    rbx,rcx
  426e41:	mov    rsi,rdx
  426e44:	test   r8d,r8d
  426e47:	je     0x426e61
  426e49:	mov    rcx,QWORD PTR [rcx+0x2a8]
  426e50:	test   rcx,rcx
  426e53:	je     0x426f53
  426e59:	mov    rdx,rsi
  426e5c:	call   0x41f520
  426e61:	lea    r8,[rbx+0xc8]
  426e68:	xor    r9d,r9d
  426e6b:	mov    rdx,rsi
  426e6e:	mov    rcx,rbx
  426e71:	mov    DWORD PTR [rsp+0x28],0x0
  426e79:	mov    DWORD PTR [rsp+0x20],0x0
  426e81:	call   0x4199d0
  426e86:	mov    QWORD PTR [rbx+0x108],rax
  426e8d:	mov    rcx,rax
  426e90:	call   0x4199c0
  426e95:	xor    edx,edx
  426e97:	test   al,al
  426e99:	jne    0x426eb9
  426e9b:	mov    rdx,QWORD PTR [rbx+0x108]
  426ea2:	xor    r8d,r8d
  426ea5:	mov    rcx,rbx
  426ea8:	call   0x41a340
  426ead:	cmp    BYTE PTR [rbx+0x438],0x0
  426eb4:	mov    rdx,rsi
  426eb7:	jne    0x426ec4
  426eb9:	mov    rax,rdx
  426ebc:	add    rsp,0x30
  426ec0:	pop    rbx
  426ec1:	pop    rsi
  426ec2:	pop    rdi
  426ec3:	ret    
  426ec4:	mov    rcx,rbx
  426ec7:	call   0x41e080
  426ecc:	cmp    BYTE PTR [rax+0x4],0x25
  426ed0:	mov    rsi,rax
  426ed3:	je     0x426f10
  426ed5:	mov    edx,0x1
  426eda:	mov    rcx,rbx
  426edd:	call   0x40ccd0
  426ee2:	mov    rdx,QWORD PTR [rbx+0x28]
  426ee6:	mov    eax,DWORD PTR [rdx+0xc]
  426ee9:	mov    rcx,QWORD PTR [rdx]
  426eec:	sub    eax,0x1
  426eef:	lea    rax,[rax+rax*4]
  426ef3:	lea    rax,[rcx+rax*8]
  426ef7:	mov    rdx,QWORD PTR [rax+0x8]
  426efb:	mov    rax,rdx
  426efe:	add    rsp,0x30
  426f02:	pop    rbx
  426f03:	pop    rsi
  426f04:	pop    rdi
  426f05:	ret    
  426f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426f10:	mov    rcx,rbx
  426f13:	mov    BYTE PTR [rbx+0x10],0x1
  426f17:	call   0x41e080
  426f1c:	mov    edx,0x1
  426f21:	mov    rdi,rax
  426f24:	mov    rcx,rbx
  426f27:	call   0x40ccd0
  426f2c:	mov    BYTE PTR [rbx+0x10],0x0
  426f30:	cmp    BYTE PTR [rdi+0x4],0x37
  426f34:	jne    0x426ed5
  426f36:	movzx  edx,WORD PTR [rsi+0x6]
  426f3a:	mov    rcx,rbx
  426f3d:	and    edx,0x1
  426f40:	call   0x4132a0
  426f45:	test   eax,eax
  426f47:	je     0x426ed5
  426f49:	mov    rcx,rbx
  426f4c:	call   0x4263e0
  426f51:	jmp    0x426ee2
  426f53:	call   0x41f3d0
  426f58:	mov    rcx,rax
  426f5b:	mov    QWORD PTR [rbx+0x2a8],rax
  426f62:	jmp    0x426e59
  426f67:	nop    WORD PTR [rax+rax*1+0x0]
  426f70:	push   rsi
  426f71:	push   rbx
  426f72:	sub    rsp,0x28
  426f76:	cmp    BYTE PTR [rcx+0x434],0x0
  426f7d:	mov    rbx,rcx
  426f80:	mov    rsi,rdx
  426f83:	je     0x426f98
  426f85:	jmp    0x426ff0
  426f87:	nop    WORD PTR [rax+rax*1+0x0]
  426f90:	mov    rcx,rbx
  426f93:	call   0x414000
  426f98:	cmp    QWORD PTR [rbx],0x0
  426f9c:	jne    0x426f90
  426f9e:	test   rsi,rsi
  426fa1:	je     0x426fcb
  426fa3:	mov    eax,DWORD PTR [rbx+0x468]
  426fa9:	test   eax,eax
  426fab:	je     0x426fcb
  426fad:	mov    rcx,QWORD PTR [rbx+0x2a8]
  426fb4:	mov    r8d,0x48
  426fba:	mov    rdx,rsi
  426fbd:	call   0x41f730
  426fc2:	cmp    BYTE PTR [rbx+0x46d],0x0
  426fc9:	jne    0x427001
  426fcb:	cmp    BYTE PTR [rbx+0x422],0x0
  426fd2:	jne    0x426fe0
  426fd4:	add    rsp,0x28
  426fd8:	pop    rbx
  426fd9:	pop    rsi
  426fda:	ret    
  426fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  426fe0:	mov    rcx,rbx
  426fe3:	add    rsp,0x28
  426fe7:	pop    rbx
  426fe8:	pop    rsi
  426fe9:	jmp    0x41ab70
  426fee:	xchg   ax,ax
  426ff0:	lea    rdx,[rip+0xfffffffffffe53c9]        # 0x40c3c0
  426ff7:	xor    r8d,r8d
  426ffa:	call   0x41b410
  426fff:	jmp    0x426f98
  427001:	mov    rcx,QWORD PTR [rbx+0x2a8]
  427008:	mov    rdx,rsi
  42700b:	call   0x41f8b0
  427010:	jmp    0x426fcb
  427012:	nop
  427013:	nop
  427014:	nop
  427015:	nop
  427016:	nop
  427017:	nop
  427018:	nop
  427019:	nop
  42701a:	nop
  42701b:	nop
  42701c:	nop
  42701d:	nop
  42701e:	nop
  42701f:	nop
  427020:	jmp    QWORD PTR [rip+0x3d596]        # 0x4645bc
  427026:	nop
  427027:	nop
  427028:	jmp    QWORD PTR [rip+0x3d586]        # 0x4645b4
  42702e:	nop
  42702f:	nop
  427030:	jmp    QWORD PTR [rip+0x3d576]        # 0x4645ac
  427036:	nop
  427037:	nop
  427038:	nop    DWORD PTR [rax+rax*1+0x0]
  427040:	push   rdi
  427041:	push   rbx
  427042:	sub    rsp,0x78
  427046:	xor    eax,eax
  427048:	lea    r10,[rsp+0x20]
  42704d:	mov    rbx,rcx
  427050:	mov    ecx,0x9
  427055:	mov    rdi,r10
  427058:	rep stos QWORD PTR es:[rdi],rax
  42705b:	mov    DWORD PTR [rsp+0x28],edx
  42705f:	mov    rcx,r10
  427062:	mov    edx,0x48
  427067:	mov    QWORD PTR [rsp+0x20],rbx
  42706c:	call   0x427190
  427071:	test   rax,rax
  427074:	je     0x4270c6
  427076:	mov    rdx,QWORD PTR [rsp+0x20]
  42707b:	mov    QWORD PTR [rax],rdx
  42707e:	mov    rdx,QWORD PTR [rsp+0x28]
  427083:	mov    QWORD PTR [rax+0x8],rdx
  427087:	mov    rdx,QWORD PTR [rsp+0x30]
  42708c:	mov    QWORD PTR [rax+0x10],rdx
  427090:	mov    rdx,QWORD PTR [rsp+0x38]
  427095:	mov    QWORD PTR [rax+0x18],rdx
  427099:	mov    rdx,QWORD PTR [rsp+0x40]
  42709e:	mov    QWORD PTR [rax+0x20],rdx
  4270a2:	mov    rdx,QWORD PTR [rsp+0x48]
  4270a7:	mov    QWORD PTR [rax+0x28],rdx
  4270ab:	mov    rdx,QWORD PTR [rsp+0x50]
  4270b0:	mov    QWORD PTR [rax+0x30],rdx
  4270b4:	mov    rdx,QWORD PTR [rsp+0x58]
  4270b9:	mov    QWORD PTR [rax+0x38],rdx
  4270bd:	mov    rdx,QWORD PTR [rsp+0x60]
  4270c2:	mov    QWORD PTR [rax+0x40],rdx
  4270c6:	add    rsp,0x78
  4270ca:	pop    rbx
  4270cb:	pop    rdi
  4270cc:	ret    
  4270cd:	nop
  4270ce:	nop
  4270cf:	nop
  4270d0:	push   rbx
  4270d1:	sub    rsp,0x40
  4270d5:	mov    rbx,rdx
  4270d8:	lea    rdx,[rsp+0x3c]
  4270dd:	mov    DWORD PTR [rsp+0x3c],0x0
  4270e5:	call   0x43d400
  4270ea:	mov    ecx,DWORD PTR [rbx]
  4270ec:	test   ecx,ecx
  4270ee:	jle    0x427100
  4270f0:	sub    ecx,0x1
  4270f3:	xor    eax,eax
  4270f5:	mov    DWORD PTR [rbx],ecx
  4270f7:	add    rsp,0x40
  4270fb:	pop    rbx
  4270fc:	ret    
  4270fd:	nop    DWORD PTR [rax]
  427100:	cmp    DWORD PTR [rsp+0x3c],0x1
  427105:	mov    rdx,QWORD PTR [rbx+0x20]
  427109:	mov    rcx,QWORD PTR [rbx+0x8]
  42710d:	mov    r9,QWORD PTR [rbx+0x18]
  427111:	mov    r8,QWORD PTR [rbx+0x10]
  427115:	mov    QWORD PTR [rsp+0x20],rdx
  42711a:	sbb    rax,0x0
  42711e:	mov    rdx,rax
  427121:	call   0x4274c0
  427126:	cmp    eax,0x1
  427129:	mov    DWORD PTR [rbx+0x28],eax
  42712c:	sbb    eax,eax
  42712e:	not    eax
  427130:	and    eax,0x5
  427133:	add    rsp,0x40
  427137:	pop    rbx
  427138:	ret    
  427139:	nop    DWORD PTR [rax+0x0]
  427140:	sub    rsp,0x58
  427144:	mov    rax,QWORD PTR [rsp+0x80]
  42714c:	add    edx,0x1
  42714f:	mov    QWORD PTR [rsp+0x28],rcx
  427154:	lea    rcx,[rip+0xffffffffffffff75]        # 0x4270d0
  42715b:	mov    DWORD PTR [rsp+0x20],edx
  42715f:	lea    rdx,[rsp+0x20]
  427164:	mov    QWORD PTR [rsp+0x30],r8
  427169:	mov    QWORD PTR [rsp+0x38],r9
  42716e:	mov    QWORD PTR [rsp+0x40],rax
  427173:	mov    DWORD PTR [rsp+0x48],0x0
  42717b:	call   0x43d408
  427180:	mov    eax,DWORD PTR [rsp+0x48]
  427184:	add    rsp,0x58
  427188:	ret    
  427189:	nop
  42718a:	nop
  42718b:	nop
  42718c:	nop
  42718d:	nop
  42718e:	nop
  42718f:	nop
  427190:	push   rdi
  427191:	push   rsi
  427192:	push   rbx
  427193:	sub    rsp,0x20
  427197:	mov    rcx,rdx
  42719a:	mov    rsi,r8
  42719d:	mov    rdi,r9
  4271a0:	call   0x449468
  4271a5:	test   rax,rax
  4271a8:	mov    rbx,rax
  4271ab:	je     0x4271c0
  4271ad:	mov    rax,rbx
  4271b0:	add    rsp,0x20
  4271b4:	pop    rbx
  4271b5:	pop    rsi
  4271b6:	pop    rdi
  4271b7:	ret    
  4271b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4271c0:	call   QWORD PTR [rip+0x3d5be]        # 0x464784
  4271c6:	mov    r8d,DWORD PTR [rax]
  4271c9:	lea    rdx,[rip+0x2ee70]        # 0x456040
  4271d0:	mov    rcx,rdi
  4271d3:	call   rsi
  4271d5:	mov    rax,rbx
  4271d8:	add    rsp,0x20
  4271dc:	pop    rbx
  4271dd:	pop    rsi
  4271de:	pop    rdi
  4271df:	ret    
  4271e0:	mov    rcx,rdx
  4271e3:	jmp    0x4494c8
  4271e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4271f0:	push   r12
  4271f2:	push   rbp
  4271f3:	push   rdi
  4271f4:	push   rsi
  4271f5:	push   rbx
  4271f6:	sub    rsp,0x20
  4271fa:	mov    rsi,QWORD PTR [rsp+0x70]
  4271ff:	mov    rdi,rdx
  427202:	mov    rbp,r8
  427205:	mov    r12,r9
  427208:	mov    r10,QWORD PTR [rsi+0x10]
  42720c:	cmp    r10,rdx
  42720f:	jb     0x427235
  427211:	mov    rax,QWORD PTR [rsi]
  427214:	mov    rdx,QWORD PTR [rsi+0x8]
  427218:	lea    rcx,[rdx+rdi*1]
  42721c:	sub    r10,rdi
  42721f:	add    rax,rdx
  427222:	mov    QWORD PTR [rsi+0x10],r10
  427226:	mov    QWORD PTR [rsi+0x8],rcx
  42722a:	add    rsp,0x20
  42722e:	pop    rbx
  42722f:	pop    rsi
  427230:	pop    rdi
  427231:	pop    rbp
  427232:	pop    r12
  427234:	ret    
  427235:	mov    rbx,QWORD PTR [rsi+0x8]
  427239:	test   rbx,rbx
  42723c:	je     0x427280
  42723e:	lea    rax,[rbx+0x1000]
  427245:	lea    r11,[rbx+rbx*1]
  427249:	cmp    rbx,0x1000
  427250:	cmovb  rax,r11
  427254:	add    rbx,rdi
  427257:	mov    rcx,QWORD PTR [rsi]
  42725a:	cmp    rax,rbx
  42725d:	cmovae rbx,rax
  427261:	mov    rdx,rbx
  427264:	call   0x449420
  427269:	test   rax,rax
  42726c:	je     0x427289
  42726e:	mov    rdx,QWORD PTR [rsi+0x8]
  427272:	mov    QWORD PTR [rsi],rax
  427275:	sub    rbx,rdx
  427278:	mov    r10,rbx
  42727b:	jmp    0x427218
  42727d:	nop    DWORD PTR [rax]
  427280:	mov    rax,rdx
  427283:	shl    rax,0x5
  427287:	jmp    0x427254
  427289:	call   QWORD PTR [rip+0x3d4f5]        # 0x464784
  42728f:	lea    rdx,[rip+0x2edb1]        # 0x456047
  427296:	mov    r8d,DWORD PTR [rax]
  427299:	mov    rcx,r12
  42729c:	call   rbp
  42729e:	xor    eax,eax
  4272a0:	jmp    0x42722a
  4272a2:	nop    DWORD PTR [rax+0x0]
  4272a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4272b0:	push   rdi
  4272b1:	push   rsi
  4272b2:	push   rbx
  4272b3:	sub    rsp,0x20
  4272b7:	mov    rbx,rdx
  4272ba:	mov    rdx,QWORD PTR [rdx+0x8]
  4272be:	mov    rsi,r8
  4272c1:	mov    rcx,QWORD PTR [rbx]
  4272c4:	mov    rdi,r9
  4272c7:	call   0x449420
  4272cc:	test   rax,rax
  4272cf:	mov    QWORD PTR [rbx],rax
  4272d2:	je     0x4272f0
  4272d4:	mov    QWORD PTR [rbx+0x10],0x0
  4272dc:	mov    eax,0x1
  4272e1:	add    rsp,0x20
  4272e5:	pop    rbx
  4272e6:	pop    rsi
  4272e7:	pop    rdi
  4272e8:	ret    
  4272e9:	nop    DWORD PTR [rax+0x0]
  4272f0:	call   QWORD PTR [rip+0x3d48e]        # 0x464784
  4272f6:	lea    rdx,[rip+0x2ed4a]        # 0x456047
  4272fd:	mov    r8d,DWORD PTR [rax]
  427300:	mov    rcx,rdi
  427303:	call   rsi
  427305:	xor    eax,eax
  427307:	jmp    0x4272e1
  427309:	nop    DWORD PTR [rax+0x0]
  427310:	push   rbx
  427311:	sub    rsp,0x20
  427315:	mov    rbx,rdx
  427318:	call   0x4272b0
  42731d:	test   eax,eax
  42731f:	je     0x427341
  427321:	mov    rax,QWORD PTR [rbx]
  427324:	mov    QWORD PTR [rbx+0x8],0x0
  42732c:	mov    QWORD PTR [rbx],0x0
  427333:	mov    QWORD PTR [rbx+0x10],0x0
  42733b:	add    rsp,0x20
  42733f:	pop    rbx
  427340:	ret    
  427341:	xor    eax,eax
  427343:	add    rsp,0x20
  427347:	pop    rbx
  427348:	ret    
  427349:	nop
  42734a:	nop
  42734b:	nop
  42734c:	nop
  42734d:	nop
  42734e:	nop
  42734f:	nop
  427350:	push   r12
  427352:	push   rbp
  427353:	push   rdi
  427354:	push   rsi
  427355:	push   rbx
  427356:	sub    rsp,0x40
  42735a:	mov    rbp,r8
  42735d:	mov    r8d,DWORD PTR [rcx+0x8]
  427361:	mov    rbx,rcx
  427364:	mov    rdi,rdx
  427367:	test   r8d,r8d
  42736a:	jne    0x427391
  42736c:	mov    ecx,DWORD PTR [rcx+0x38]
  42736f:	test   ecx,ecx
  427371:	jne    0x427398
  427373:	mov    r10,QWORD PTR [rbx+0x18]
  427377:	mov    eax,0x1
  42737c:	test   r10,r10
  42737f:	mov    QWORD PTR [rsp+0x38],r10
  427384:	je     0x4273c0
  427386:	add    rsp,0x40
  42738a:	pop    rbx
  42738b:	pop    rsi
  42738c:	pop    rdi
  42738d:	pop    rbp
  42738e:	pop    r12
  427390:	ret    
  427391:	mov    eax,DWORD PTR [rcx+0x38]
  427394:	test   eax,eax
  427396:	je     0x427373
  427398:	lea    rdx,[rip+0x2ecd9]        # 0x456078
  42739f:	mov    r8d,0xffffffff
  4273a5:	mov    rcx,rbp
  4273a8:	call   rdi
  4273aa:	xor    eax,eax
  4273ac:	add    rsp,0x40
  4273b0:	pop    rbx
  4273b1:	pop    rsi
  4273b2:	pop    rdi
  4273b3:	pop    rbp
  4273b4:	pop    r12
  4273b6:	ret    
  4273b7:	nop    WORD PTR [rax+rax*1+0x0]
  4273c0:	lea    r12,[rsp+0x34]
  4273c5:	xor    esi,esi
  4273c7:	cmp    esi,0x2
  4273ca:	je     0x427480
  4273d0:	cmp    esi,0x3
  4273d3:	je     0x427470
  4273d9:	cmp    esi,0x1
  4273dc:	je     0x427438
  4273de:	mov    rcx,QWORD PTR [rbx]
  4273e1:	test   rcx,rcx
  4273e4:	je     0x427438
  4273e6:	mov    r9,r12
  4273e9:	mov    r8,rbp
  4273ec:	mov    rdx,rdi
  4273ef:	call   0x4275a0
  4273f4:	test   eax,eax
  4273f6:	js     0x427430
  4273f8:	lea    rdx,[rsp+0x38]
  4273fd:	mov    r9,rbp
  427400:	mov    r8,rdi
  427403:	mov    rcx,rbx
  427406:	mov    QWORD PTR [rsp+0x20],rdx
  42740b:	mov    edx,eax
  42740d:	call   0x4276c0
  427412:	test   eax,eax
  427414:	je     0x427453
  427416:	mov    eax,DWORD PTR [rbx+0x8]
  427419:	test   eax,eax
  42741b:	jne    0x42748c
  42741d:	mov    rax,QWORD PTR [rsp+0x38]
  427422:	mov    QWORD PTR [rbx+0x18],rax
  427426:	mov    eax,0x1
  42742b:	jmp    0x427386
  427430:	mov    edx,DWORD PTR [rsp+0x34]
  427434:	test   edx,edx
  427436:	je     0x427453
  427438:	add    esi,0x1
  42743b:	cmp    esi,0x4
  42743e:	jne    0x4273c7
  427440:	mov    rdx,QWORD PTR [rbx]
  427443:	test   rdx,rdx
  427446:	je     0x42749f
  427448:	mov    r8d,0x2
  42744e:	mov    rcx,rbp
  427451:	call   rdi
  427453:	mov    eax,DWORD PTR [rbx+0x8]
  427456:	test   eax,eax
  427458:	jne    0x4274b0
  42745a:	mov    DWORD PTR [rbx+0x38],0x1
  427461:	jmp    0x427386
  427466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427470:	lea    rcx,[rip+0x2ebd9]        # 0x456050
  427477:	jmp    0x4273e6
  42747c:	nop    DWORD PTR [rax+0x0]
  427480:	lea    rcx,[rip+0x2ebdc]        # 0x456063
  427487:	jmp    0x4273e6
  42748c:	mov    rax,QWORD PTR [rsp+0x38]
  427491:	mov    QWORD PTR [rbx+0x18],rax
  427495:	mov    eax,0x1
  42749a:	jmp    0x427386
  42749f:	xor    r8d,r8d
  4274a2:	lea    rdx,[rip+0x2ebf7]        # 0x4560a0
  4274a9:	mov    rcx,rbp
  4274ac:	call   rdi
  4274ae:	jmp    0x427453
  4274b0:	mov    DWORD PTR [rbx+0x38],0x1
  4274b7:	xor    eax,eax
  4274b9:	jmp    0x427386
  4274be:	xchg   ax,ax
  4274c0:	push   r12
  4274c2:	push   rbp
  4274c3:	push   rdi
  4274c4:	push   rsi
  4274c5:	push   rbx
  4274c6:	sub    rsp,0x20
  4274ca:	mov    rdi,QWORD PTR [rsp+0x70]
  4274cf:	mov    rbp,rdx
  4274d2:	mov    r12,r8
  4274d5:	mov    rdx,r9
  4274d8:	mov    rbx,rcx
  4274db:	mov    rsi,r9
  4274de:	mov    r8,rdi
  4274e1:	call   0x427350
  4274e6:	test   eax,eax
  4274e8:	je     0x4274f1
  4274ea:	mov    eax,DWORD PTR [rbx+0x38]
  4274ed:	test   eax,eax
  4274ef:	je     0x427500
  4274f1:	xor    eax,eax
  4274f3:	add    rsp,0x20
  4274f7:	pop    rbx
  4274f8:	pop    rsi
  4274f9:	pop    rdi
  4274fa:	pop    rbp
  4274fb:	pop    r12
  4274fd:	ret    
  4274fe:	xchg   ax,ax
  427500:	mov    rax,QWORD PTR [rbx+0x18]
  427504:	mov    r9,rsi
  427507:	mov    r8,r12
  42750a:	mov    rdx,rbp
  42750d:	mov    rcx,rbx
  427510:	mov    QWORD PTR [rsp+0x70],rdi
  427515:	add    rsp,0x20
  427519:	pop    rbx
  42751a:	pop    rsi
  42751b:	pop    rdi
  42751c:	pop    rbp
  42751d:	pop    r12
  42751f:	rex.W jmp rax
  427522:	nop    DWORD PTR [rax+0x0]
  427526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427530:	push   rbp
  427531:	push   rdi
  427532:	push   rsi
  427533:	push   rbx
  427534:	sub    rsp,0x38
  427538:	mov    rbp,r8
  42753b:	mov    r8,QWORD PTR [rsp+0x80]
  427543:	mov    rdi,rdx
  427546:	mov    rdx,r9
  427549:	mov    rbx,rcx
  42754c:	mov    rsi,r9
  42754f:	call   0x427350
  427554:	test   eax,eax
  427556:	je     0x427561
  427558:	mov    edx,DWORD PTR [rbx+0x38]
  42755b:	xor    eax,eax
  42755d:	test   edx,edx
  42755f:	je     0x427570
  427561:	add    rsp,0x38
  427565:	pop    rbx
  427566:	pop    rsi
  427567:	pop    rdi
  427568:	pop    rbp
  427569:	ret    
  42756a:	nop    WORD PTR [rax+rax*1+0x0]
  427570:	mov    rax,QWORD PTR [rsp+0x80]
  427578:	mov    r9,rsi
  42757b:	mov    r8,rbp
  42757e:	mov    rdx,rdi
  427581:	mov    rcx,rbx
  427584:	mov    QWORD PTR [rsp+0x20],rax
  427589:	call   QWORD PTR [rbx+0x28]
  42758c:	mov    eax,0x1
  427591:	add    rsp,0x38
  427595:	pop    rbx
  427596:	pop    rsi
  427597:	pop    rdi
  427598:	pop    rbp
  427599:	ret    
  42759a:	nop
  42759b:	nop
  42759c:	nop
  42759d:	nop
  42759e:	nop
  42759f:	nop
  4275a0:	push   r12
  4275a2:	push   rbp
  4275a3:	push   rdi
  4275a4:	push   rsi
  4275a5:	push   rbx
  4275a6:	sub    rsp,0x20
  4275aa:	test   r9,r9
  4275ad:	mov    rsi,rcx
  4275b0:	mov    rdi,rdx
  4275b3:	mov    rbp,r8
  4275b6:	mov    rbx,r9
  4275b9:	je     0x427610
  4275bb:	mov    DWORD PTR [r9],0x0
  4275c2:	mov    edx,0x8000
  4275c7:	call   0x449320
  4275cc:	test   eax,eax
  4275ce:	js     0x4275e0
  4275d0:	add    rsp,0x20
  4275d4:	pop    rbx
  4275d5:	pop    rsi
  4275d6:	pop    rdi
  4275d7:	pop    rbp
  4275d8:	pop    r12
  4275da:	ret    
  4275db:	nop    DWORD PTR [rax+rax*1+0x0]
  4275e0:	mov    r12,QWORD PTR [rip+0x3d19d]        # 0x464784
  4275e7:	call   r12
  4275ea:	cmp    DWORD PTR [rax],0x2
  4275ed:	je     0x427630
  4275ef:	call   r12
  4275f2:	mov    r8d,DWORD PTR [rax]
  4275f5:	mov    rdx,rsi
  4275f8:	mov    rcx,rbp
  4275fb:	call   rdi
  4275fd:	mov    eax,0xffffffff
  427602:	add    rsp,0x20
  427606:	pop    rbx
  427607:	pop    rsi
  427608:	pop    rdi
  427609:	pop    rbp
  42760a:	pop    r12
  42760c:	ret    
  42760d:	nop    DWORD PTR [rax]
  427610:	mov    edx,0x8000
  427615:	call   0x449320
  42761a:	test   eax,eax
  42761c:	mov    r12,QWORD PTR [rip+0x3d161]        # 0x464784
  427623:	jns    0x4275d0
  427625:	jmp    0x4275ef
  427627:	nop    WORD PTR [rax+rax*1+0x0]
  427630:	mov    eax,0xffffffff
  427635:	mov    DWORD PTR [rbx],0x1
  42763b:	add    rsp,0x20
  42763f:	pop    rbx
  427640:	pop    rsi
  427641:	pop    rdi
  427642:	pop    rbp
  427643:	pop    r12
  427645:	ret    
  427646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427650:	push   rsi
  427651:	push   rbx
  427652:	sub    rsp,0x28
  427656:	mov    rbx,rdx
  427659:	mov    rsi,r8
  42765c:	call   0x4492f0
  427661:	test   eax,eax
  427663:	mov    r9d,0x1
  427669:	js     0x427675
  42766b:	mov    eax,r9d
  42766e:	add    rsp,0x28
  427672:	pop    rbx
  427673:	pop    rsi
  427674:	ret    
  427675:	call   QWORD PTR [rip+0x3d109]        # 0x464784
  42767b:	mov    r8d,DWORD PTR [rax]
  42767e:	lea    rdx,[rip+0x2ea4b]        # 0x4560d0
  427685:	mov    rcx,rsi
  427688:	call   rbx
  42768a:	xor    r9d,r9d
  42768d:	mov    eax,r9d
  427690:	add    rsp,0x28
  427694:	pop    rbx
  427695:	pop    rsi
  427696:	ret    
  427697:	nop
  427698:	nop
  427699:	nop
  42769a:	nop
  42769b:	nop
  42769c:	nop
  42769d:	nop
  42769e:	nop
  42769f:	nop
  4276a0:	mov    rcx,QWORD PTR [rsp+0x28]
  4276a5:	xor    r9d,r9d
  4276a8:	mov    rax,r8
  4276ab:	xor    r8d,r8d
  4276ae:	mov    QWORD PTR [rsp+0x28],0x0
  4276b7:	rex.W jmp rax
  4276ba:	nop    WORD PTR [rax+rax*1+0x0]
  4276c0:	mov    rax,QWORD PTR [rsp+0x28]
  4276c5:	lea    rdx,[rip+0xffffffffffffffd4]        # 0x4276a0
  4276cc:	mov    QWORD PTR [rcx+0x20],0x0
  4276d4:	mov    QWORD PTR [rax],rdx
  4276d7:	mov    eax,0x1
  4276dc:	ret    
  4276dd:	nop
  4276de:	nop
  4276df:	nop
  4276e0:	mov    r8,QWORD PTR [rcx]
  4276e3:	mov    r10,QWORD PTR [rip+0x33746]        # 0x45ae30
  4276ea:	xor    eax,eax
  4276ec:	movzx  r9d,BYTE PTR [r8]
  4276f0:	add    r8,0x1
  4276f4:	test   BYTE PTR [r10+r9*2],0x4
  4276f9:	mov    rdx,r9
  4276fc:	je     0x427725
  4276fe:	xchg   ax,ax
  427700:	mov    QWORD PTR [rcx],r8
  427703:	movzx  r9d,BYTE PTR [r8]
  427707:	add    r8,0x1
  42770b:	lea    eax,[rax+rax*4]
  42770e:	movsx  edx,dl
  427711:	lea    eax,[rdx+rax*2-0x30]
  427715:	test   BYTE PTR [r10+r9*2],0x4
  42771a:	mov    rdx,r9
  42771d:	jne    0x427700
  42771f:	test   eax,eax
  427721:	js     0x427725
  427723:	repz ret 
  427725:	mov    eax,0xffffffff
  42772a:	ret    
  42772b:	nop    DWORD PTR [rax+rax*1+0x0]
  427730:	push   rbx
  427731:	sub    rsp,0x20
  427735:	mov    rdx,QWORD PTR [rcx]
  427738:	movsx  eax,BYTE PTR [rdx]
  42773b:	cmp    al,0x5f
  42773d:	je     0x427760
  42773f:	lea    r8d,[rax-0x30]
  427743:	cmp    r8b,0x9
  427747:	ja     0x427795
  427749:	add    rdx,0x1
  42774d:	sub    eax,0x30
  427750:	mov    QWORD PTR [rcx],rdx
  427753:	add    rsp,0x20
  427757:	pop    rbx
  427758:	ret    
  427759:	nop    DWORD PTR [rax+0x0]
  427760:	lea    rax,[rdx+0x1]
  427764:	mov    QWORD PTR [rcx],rax
  427767:	movzx  edx,BYTE PTR [rdx+0x1]
  42776b:	mov    rax,QWORD PTR [rip+0x336be]        # 0x45ae30
  427772:	test   BYTE PTR [rax+rdx*2],0x4
  427776:	je     0x427795
  427778:	mov    rbx,rcx
  42777b:	call   0x4276e0
  427780:	mov    rdx,QWORD PTR [rbx]
  427783:	cmp    BYTE PTR [rdx],0x5f
  427786:	jne    0x427795
  427788:	add    rdx,0x1
  42778c:	mov    QWORD PTR [rbx],rdx
  42778f:	add    rsp,0x20
  427793:	pop    rbx
  427794:	ret    
  427795:	mov    eax,0xffffffff
  42779a:	jmp    0x427753
  42779c:	nop    DWORD PTR [rax+0x0]
  4277a0:	push   rbx
  4277a1:	mov    r8,QWORD PTR [rcx]
  4277a4:	mov    r11,QWORD PTR [rip+0x33685]        # 0x45ae30
  4277ab:	xor    eax,eax
  4277ad:	movzx  r10d,BYTE PTR [r8]
  4277b1:	test   BYTE PTR [r11+r10*2],0x4
  4277b6:	je     0x42780a
  4277b8:	movsx  r9d,r10b
  4277bc:	lea    r10,[r8+0x1]
  4277c0:	mov    al,0x1
  4277c2:	sub    r9d,0x30
  4277c6:	mov    DWORD PTR [rdx],r9d
  4277c9:	mov    QWORD PTR [rcx],r10
  4277cc:	movzx  ebx,BYTE PTR [r8+0x1]
  4277d1:	test   BYTE PTR [r11+rbx*2],0x4
  4277d6:	mov    r8,rbx
  4277d9:	je     0x42780a
  4277db:	nop    DWORD PTR [rax+rax*1+0x0]
  4277e0:	lea    eax,[r9+r9*4]
  4277e4:	movsx  r8d,r8b
  4277e8:	add    r10,0x1
  4277ec:	lea    r9d,[r8+rax*2-0x30]
  4277f1:	movzx  eax,BYTE PTR [r10]
  4277f5:	test   BYTE PTR [r11+rax*2],0x4
  4277fa:	mov    r8,rax
  4277fd:	jne    0x4277e0
  4277ff:	cmp    r8b,0x5f
  427803:	mov    eax,0x1
  427808:	je     0x427810
  42780a:	pop    rbx
  42780b:	ret    
  42780c:	nop    DWORD PTR [rax+0x0]
  427810:	add    r10,0x1
  427814:	mov    QWORD PTR [rcx],r10
  427817:	mov    DWORD PTR [rdx],r9d
  42781a:	pop    rbx
  42781b:	ret    
  42781c:	nop    DWORD PTR [rax+0x0]
  427820:	push   rsi
  427821:	push   rbx
  427822:	sub    rsp,0x28
  427826:	mov    rbx,rcx
  427829:	movsxd rdx,DWORD PTR [rbx+0x20]
  42782d:	mov    rax,rdx
  427830:	lea    rsi,[rdx*8-0x8]
  427838:	jmp    0x42785a
  42783a:	nop    WORD PTR [rax+rax*1+0x0]
  427840:	mov    rdx,QWORD PTR [rbx+0x10]
  427844:	sub    eax,0x1
  427847:	mov    DWORD PTR [rbx+0x20],eax
  42784a:	mov    rcx,QWORD PTR [rdx+rsi*1]
  42784e:	lea    rdx,[rsi-0x8]
  427852:	test   rcx,rcx
  427855:	jne    0x4278d0
  427857:	mov    rsi,rdx
  42785a:	test   eax,eax
  42785c:	jg     0x427840
  42785e:	movsxd rdx,DWORD PTR [rbx+0x24]
  427862:	mov    rcx,QWORD PTR [rbx+0x18]
  427866:	mov    rax,rdx
  427869:	lea    rsi,[rdx*8-0x8]
  427871:	jmp    0x42788a
  427873:	lea    rdx,[rsi-0x8]
  427877:	sub    eax,0x1
  42787a:	mov    DWORD PTR [rbx+0x24],eax
  42787d:	mov    r8,QWORD PTR [rcx+rdx*1+0x8]
  427882:	test   r8,r8
  427885:	jne    0x4278f0
  427887:	mov    rsi,rdx
  42788a:	test   eax,eax
  42788c:	jg     0x427873
  42788e:	test   rcx,rcx
  427891:	je     0x4278a7
  427893:	call   0x4494c8
  427898:	mov    QWORD PTR [rbx+0x18],0x0
  4278a0:	mov    DWORD PTR [rbx+0x2c],0x0
  4278a7:	mov    rcx,QWORD PTR [rbx+0x10]
  4278ab:	test   rcx,rcx
  4278ae:	je     0x4278c4
  4278b0:	call   0x4494c8
  4278b5:	mov    QWORD PTR [rbx+0x10],0x0
  4278bd:	mov    DWORD PTR [rbx+0x28],0x0
  4278c4:	add    rsp,0x28
  4278c8:	pop    rbx
  4278c9:	pop    rsi
  4278ca:	ret    
  4278cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4278d0:	call   0x4494c8
  4278d5:	mov    rax,QWORD PTR [rbx+0x10]
  4278d9:	mov    QWORD PTR [rax+rsi*1],0x0
  4278e1:	jmp    0x427829
  4278e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4278f0:	mov    rcx,r8
  4278f3:	call   0x4494c8
  4278f8:	mov    rax,QWORD PTR [rbx+0x18]
  4278fc:	mov    QWORD PTR [rax+rsi*1],0x0
  427904:	jmp    0x42785e
  427909:	nop    DWORD PTR [rax+0x0]
  427910:	push   rbx
  427911:	sub    rsp,0x20
  427915:	mov    rbx,rcx
  427918:	mov    ecx,DWORD PTR [rcx+0x24]
  42791b:	mov    edx,DWORD PTR [rbx+0x2c]
  42791e:	cmp    ecx,edx
  427920:	jl     0x427963
  427922:	test   edx,edx
  427924:	je     0x427970
  427926:	cmp    edx,0x3fffffff
  42792c:	jg     0x42798a
  42792e:	add    edx,edx
  427930:	mov    rcx,QWORD PTR [rbx+0x18]
  427934:	mov    DWORD PTR [rbx+0x2c],edx
  427937:	movsxd rdx,edx
  42793a:	shl    rdx,0x3
  42793e:	call   0x43bb70
  427943:	mov    ecx,DWORD PTR [rbx+0x24]
  427946:	mov    QWORD PTR [rbx+0x18],rax
  42794a:	lea    edx,[rcx+0x1]
  42794d:	mov    DWORD PTR [rbx+0x24],edx
  427950:	movsxd rdx,ecx
  427953:	mov    QWORD PTR [rax+rdx*8],0x0
  42795b:	mov    eax,ecx
  42795d:	add    rsp,0x20
  427961:	pop    rbx
  427962:	ret    
  427963:	mov    rax,QWORD PTR [rbx+0x18]
  427967:	jmp    0x42794a
  427969:	nop    DWORD PTR [rax+0x0]
  427970:	mov    ecx,0x28
  427975:	mov    DWORD PTR [rbx+0x2c],0x5
  42797c:	call   0x43baf0
  427981:	mov    ecx,DWORD PTR [rbx+0x24]
  427984:	mov    QWORD PTR [rbx+0x18],rax
  427988:	jmp    0x42794a
  42798a:	mov    ecx,0x7fffffff
  42798f:	call   0x43ba90
  427994:	nop
  427995:	nop
  427996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4279a0:	push   rdi
  4279a1:	push   rsi
  4279a2:	push   rbx
  4279a3:	sub    rsp,0x20
  4279a7:	mov    eax,DWORD PTR [rcx+0x28]
  4279aa:	cmp    DWORD PTR [rcx+0x20],eax
  4279ad:	mov    rbx,rcx
  4279b0:	mov    rdi,rdx
  4279b3:	movsxd rsi,r8d
  4279b6:	jl     0x4279df
  4279b8:	test   eax,eax
  4279ba:	je     0x427a20
  4279bc:	cmp    eax,0x3fffffff
  4279c1:	jg     0x427a37
  4279c3:	add    eax,eax
  4279c5:	mov    DWORD PTR [rcx+0x28],eax
  4279c8:	cdqe   
  4279ca:	mov    rcx,QWORD PTR [rcx+0x10]
  4279ce:	lea    rdx,[rax*8+0x0]
  4279d6:	call   0x43bb70
  4279db:	mov    QWORD PTR [rbx+0x10],rax
  4279df:	lea    ecx,[rsi+0x1]
  4279e2:	movsxd rcx,ecx
  4279e5:	call   0x43baf0
  4279ea:	mov    rdx,rdi
  4279ed:	mov    r8,rsi
  4279f0:	mov    rcx,rax
  4279f3:	call   0x449450
  4279f8:	movsxd rdx,DWORD PTR [rbx+0x20]
  4279fc:	mov    r9,rax
  4279ff:	mov    BYTE PTR [rax+rsi*1],0x0
  427a03:	mov    rax,QWORD PTR [rbx+0x10]
  427a07:	lea    ecx,[rdx+0x1]
  427a0a:	mov    DWORD PTR [rbx+0x20],ecx
  427a0d:	mov    QWORD PTR [rax+rdx*8],r9
  427a11:	add    rsp,0x20
  427a15:	pop    rbx
  427a16:	pop    rsi
  427a17:	pop    rdi
  427a18:	ret    
  427a19:	nop    DWORD PTR [rax+0x0]
  427a20:	mov    DWORD PTR [rcx+0x28],0x5
  427a27:	mov    ecx,0x28
  427a2c:	call   0x43baf0
  427a31:	mov    QWORD PTR [rbx+0x10],rax
  427a35:	jmp    0x4279df
  427a37:	mov    ecx,0x7fffffff
  427a3c:	call   0x43ba90
  427a41:	nop
  427a42:	nop    DWORD PTR [rax+0x0]
  427a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a50:	sub    rsp,0x28
  427a54:	cmp    ecx,0x56
  427a57:	je     0x427a90
  427a59:	cmp    ecx,0x75
  427a5c:	je     0x427a80
  427a5e:	cmp    ecx,0x43
  427a61:	je     0x427a70
  427a63:	call   0x449548
  427a68:	nop    DWORD PTR [rax+rax*1+0x0]
  427a70:	mov    eax,0x1
  427a75:	add    rsp,0x28
  427a79:	ret    
  427a7a:	nop    WORD PTR [rax+rax*1+0x0]
  427a80:	mov    eax,0x4
  427a85:	add    rsp,0x28
  427a89:	ret    
  427a8a:	nop    WORD PTR [rax+rax*1+0x0]
  427a90:	mov    eax,0x2
  427a95:	add    rsp,0x28
  427a99:	ret    
  427a9a:	nop    WORD PTR [rax+rax*1+0x0]
  427aa0:	sub    rsp,0x28
  427aa4:	cmp    ecx,0x7
  427aa7:	ja     0x427b40
  427aad:	lea    rax,[rip+0x2e6b8]        # 0x45616c
  427ab4:	mov    ecx,ecx
  427ab6:	movsxd rdx,DWORD PTR [rax+rcx*4]
  427aba:	add    rax,rdx
  427abd:	jmp    rax
  427abf:	nop
  427ac0:	lea    rax,[rip+0x2e640]        # 0x456107
  427ac7:	add    rsp,0x28
  427acb:	ret    
  427acc:	nop    DWORD PTR [rax+0x0]
  427ad0:	lea    rax,[rip+0x2e644]        # 0x45611b
  427ad7:	add    rsp,0x28
  427adb:	ret    
  427adc:	nop    DWORD PTR [rax+0x0]
  427ae0:	lea    rax,[rip+0x2e629]        # 0x456110
  427ae7:	add    rsp,0x28
  427aeb:	ret    
  427aec:	nop    DWORD PTR [rax+0x0]
  427af0:	lea    rax,[rip+0x2e633]        # 0x45612a
  427af7:	add    rsp,0x28
  427afb:	ret    
  427afc:	nop    DWORD PTR [rax+0x0]
  427b00:	lea    rax,[rip+0x2e634]        # 0x45613b
  427b07:	add    rsp,0x28
  427b0b:	ret    
  427b0c:	nop    DWORD PTR [rax+0x0]
  427b10:	lea    rax,[rip+0x2e638]        # 0x45614f
  427b17:	add    rsp,0x28
  427b1b:	ret    
  427b1c:	nop    DWORD PTR [rax+0x0]
  427b20:	lea    rax,[rip+0x2e5d9]        # 0x456100
  427b27:	add    rsp,0x28
  427b2b:	ret    
  427b2c:	nop    DWORD PTR [rax+0x0]
  427b30:	lea    rax,[rip+0x2e5ca]        # 0x456101
  427b37:	add    rsp,0x28
  427b3b:	ret    
  427b3c:	nop    DWORD PTR [rax+0x0]
  427b40:	call   0x449548
  427b45:	nop
  427b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b50:	push   rdi
  427b51:	push   rsi
  427b52:	push   rbx
  427b53:	sub    rsp,0x20
  427b57:	mov    rdi,rcx
  427b5a:	mov    rsi,rdx
  427b5d:	movsxd rdx,DWORD PTR [rsi]
  427b60:	mov    rax,rdx
  427b63:	lea    rbx,[rdx*8-0x8]
  427b6b:	jmp    0x427b88
  427b6d:	nop    DWORD PTR [rax]
  427b70:	mov    r8,QWORD PTR [rdi]
  427b73:	sub    eax,0x1
  427b76:	lea    r9,[rbx-0x8]
  427b7a:	mov    DWORD PTR [rsi],eax
  427b7c:	mov    rcx,QWORD PTR [r8+rbx*1]
  427b80:	test   rcx,rcx
  427b83:	jne    0x427b94
  427b85:	mov    rbx,r9
  427b88:	test   eax,eax
  427b8a:	jg     0x427b70
  427b8c:	add    rsp,0x20
  427b90:	pop    rbx
  427b91:	pop    rsi
  427b92:	pop    rdi
  427b93:	ret    
  427b94:	call   0x4494c8
  427b99:	mov    rax,QWORD PTR [rdi]
  427b9c:	mov    QWORD PTR [rax+rbx*1],0x0
  427ba4:	jmp    0x427b5d
  427ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427bb0:	push   rdi
  427bb1:	push   rsi
  427bb2:	push   rbx
  427bb3:	sub    rsp,0x20
  427bb7:	mov    rbx,rcx
  427bba:	lea    rdx,[rcx+0x30]
  427bbe:	lea    rcx,[rcx+0x8]
  427bc2:	call   0x427b50
  427bc7:	mov    rcx,QWORD PTR [rbx+0x8]
  427bcb:	test   rcx,rcx
  427bce:	je     0x427be4
  427bd0:	call   0x4494c8
  427bd5:	mov    QWORD PTR [rbx+0x8],0x0
  427bdd:	mov    DWORD PTR [rbx+0x34],0x0
  427be4:	mov    rcx,QWORD PTR [rbx+0x50]
  427be8:	test   rcx,rcx
  427beb:	je     0x427c26
  427bed:	mov    eax,DWORD PTR [rbx+0x58]
  427bf0:	test   eax,eax
  427bf2:	jle    0x427c19
  427bf4:	xor    edi,edi
  427bf6:	xor    esi,esi
  427bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  427c00:	mov    rcx,QWORD PTR [rcx+rdi*1]
  427c04:	add    esi,0x1
  427c07:	add    rdi,0x8
  427c0b:	call   0x4494c8
  427c10:	cmp    DWORD PTR [rbx+0x58],esi
  427c13:	mov    rcx,QWORD PTR [rbx+0x50]
  427c17:	jg     0x427c00
  427c19:	call   0x4494c8
  427c1e:	mov    QWORD PTR [rbx+0x50],0x0
  427c26:	mov    rsi,QWORD PTR [rbx+0x60]
  427c2a:	test   rsi,rsi
  427c2d:	je     0x427c67
  427c2f:	mov    rcx,QWORD PTR [rsi]
  427c32:	test   rcx,rcx
  427c35:	je     0x427c57
  427c37:	call   0x4494c8
  427c3c:	mov    QWORD PTR [rsi+0x8],0x0
  427c44:	mov    QWORD PTR [rsi+0x10],0x0
  427c4c:	mov    QWORD PTR [rsi],0x0
  427c53:	mov    rsi,QWORD PTR [rbx+0x60]
  427c57:	mov    rcx,rsi
  427c5a:	call   0x4494c8
  427c5f:	mov    QWORD PTR [rbx+0x60],0x0
  427c67:	add    rsp,0x20
  427c6b:	pop    rbx
  427c6c:	pop    rsi
  427c6d:	pop    rdi
  427c6e:	ret    
  427c6f:	nop
  427c70:	push   rbp
  427c71:	push   rdi
  427c72:	push   rsi
  427c73:	push   rbx
  427c74:	sub    rsp,0x28
  427c78:	movsxd rbx,r8d
  427c7b:	mov    rdi,rcx
  427c7e:	mov    rbp,rdx
  427c81:	lea    eax,[rbx+0x1]
  427c84:	movsxd rsi,r9d
  427c87:	movsxd rcx,eax
  427c8a:	call   0x43baf0
  427c8f:	mov    r8,rbx
  427c92:	mov    rdx,rbp
  427c95:	mov    rcx,rax
  427c98:	call   0x449450
  427c9d:	mov    r9,rax
  427ca0:	mov    BYTE PTR [rax+rbx*1],0x0
  427ca4:	mov    rax,QWORD PTR [rdi]
  427ca7:	mov    QWORD PTR [rax+rsi*8],r9
  427cab:	add    rsp,0x28
  427caf:	pop    rbx
  427cb0:	pop    rsi
  427cb1:	pop    rdi
  427cb2:	pop    rbp
  427cb3:	ret    
  427cb4:	xchg   ax,ax
  427cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427cc0:	push   rdi
  427cc1:	push   rsi
  427cc2:	push   rbx
  427cc3:	sub    rsp,0x20
  427cc7:	mov    rdi,rcx
  427cca:	mov    rcx,QWORD PTR [rcx]
  427ccd:	test   rcx,rcx
  427cd0:	je     0x427d22
  427cd2:	mov    rax,QWORD PTR [rdi+0x8]
  427cd6:	mov    r8,QWORD PTR [rdi+0x10]
  427cda:	movsxd r9,edx
  427cdd:	sub    r8,rax
  427ce0:	cmp    r8,r9
  427ce3:	jge    0x427d1a
  427ce5:	sub    rax,rcx
  427ce8:	mov    rsi,rax
  427ceb:	mov    eax,0x3fffffff
  427cf0:	sub    eax,esi
  427cf2:	cmp    edx,eax
  427cf4:	jg     0x427d4f
  427cf6:	lea    ebx,[rdx+rsi*1]
  427cf9:	movsxd rsi,esi
  427cfc:	add    ebx,ebx
  427cfe:	movsxd rbx,ebx
  427d01:	mov    rdx,rbx
  427d04:	call   0x43bb70
  427d09:	add    rsi,rax
  427d0c:	add    rbx,rax
  427d0f:	mov    QWORD PTR [rdi],rax
  427d12:	mov    QWORD PTR [rdi+0x8],rsi
  427d16:	mov    QWORD PTR [rdi+0x10],rbx
  427d1a:	add    rsp,0x20
  427d1e:	pop    rbx
  427d1f:	pop    rsi
  427d20:	pop    rdi
  427d21:	ret    
  427d22:	cmp    edx,0x20
  427d25:	movsxd rax,edx
  427d28:	mov    ebx,0x20
  427d2d:	cmovge rbx,rax
  427d31:	mov    rcx,rbx
  427d34:	call   0x43baf0
  427d39:	add    rbx,rax
  427d3c:	mov    QWORD PTR [rdi],rax
  427d3f:	mov    QWORD PTR [rdi+0x8],rax
  427d43:	mov    QWORD PTR [rdi+0x10],rbx
  427d47:	add    rsp,0x20
  427d4b:	pop    rbx
  427d4c:	pop    rsi
  427d4d:	pop    rdi
  427d4e:	ret    
  427d4f:	mov    ecx,0x7fffffff
  427d54:	call   0x43ba90
  427d59:	nop
  427d5a:	nop    WORD PTR [rax+rax*1+0x0]
  427d60:	push   rdi
  427d61:	push   rsi
  427d62:	push   rbx
  427d63:	sub    rsp,0x20
  427d67:	movsxd rbx,r8d
  427d6a:	mov    rsi,rcx
  427d6d:	mov    rdi,rdx
  427d70:	mov    edx,ebx
  427d72:	call   0x427cc0
  427d77:	mov    rcx,QWORD PTR [rsi+0x8]
  427d7b:	mov    r8,rbx
  427d7e:	mov    rdx,rdi
  427d81:	call   0x449450
  427d86:	add    QWORD PTR [rsi+0x8],rbx
  427d8a:	add    rsp,0x20
  427d8e:	pop    rbx
  427d8f:	pop    rsi
  427d90:	pop    rdi
  427d91:	ret    
  427d92:	nop    DWORD PTR [rax+0x0]
  427d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427da0:	push   rdi
  427da1:	push   rsi
  427da2:	push   rbx
  427da3:	sub    rsp,0x20
  427da7:	movsxd rsi,r8d
  427daa:	mov    rbx,rcx
  427dad:	mov    rdi,rdx
  427db0:	mov    edx,esi
  427db2:	call   0x427cc0
  427db7:	mov    rax,QWORD PTR [rbx+0x8]
  427dbb:	mov    rcx,QWORD PTR [rbx]
  427dbe:	sub    rax,0x1
  427dc2:	cmp    rax,rcx
  427dc5:	jb     0x427de5
  427dc7:	nop    WORD PTR [rax+rax*1+0x0]
  427dd0:	movzx  r9d,BYTE PTR [rax]
  427dd4:	sub    rax,0x1
  427dd8:	mov    BYTE PTR [rax+rsi*1+0x1],r9b
  427ddd:	mov    rcx,QWORD PTR [rbx]
  427de0:	cmp    rax,rcx
  427de3:	jae    0x427dd0
  427de5:	mov    r8,rsi
  427de8:	mov    rdx,rdi
  427deb:	call   0x449450
  427df0:	add    QWORD PTR [rbx+0x8],rsi
  427df4:	add    rsp,0x20
  427df8:	pop    rbx
  427df9:	pop    rsi
  427dfa:	pop    rdi
  427dfb:	ret    
  427dfc:	nop    DWORD PTR [rax+0x0]
  427e00:	push   rsi
  427e01:	push   rbx
  427e02:	sub    rsp,0x28
  427e06:	mov    rsi,rcx
  427e09:	mov    rcx,rdx
  427e0c:	mov    rbx,rdx
  427e0f:	call   0x4493c0
  427e14:	test   eax,eax
  427e16:	jne    0x427e20
  427e18:	add    rsp,0x28
  427e1c:	pop    rbx
  427e1d:	pop    rsi
  427e1e:	ret    
  427e1f:	nop
  427e20:	mov    r8d,eax
  427e23:	mov    rdx,rbx
  427e26:	mov    rcx,rsi
  427e29:	add    rsp,0x28
  427e2d:	pop    rbx
  427e2e:	pop    rsi
  427e2f:	jmp    0x427da0
  427e34:	xchg   ax,ax
  427e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427e40:	push   rdi
  427e41:	push   rsi
  427e42:	push   rbx
  427e43:	sub    rsp,0x20
  427e47:	mov    rsi,rcx
  427e4a:	mov    rcx,rdx
  427e4d:	mov    rdi,rdx
  427e50:	call   0x4493c0
  427e55:	mov    rcx,rsi
  427e58:	mov    edx,eax
  427e5a:	mov    rbx,rax
  427e5d:	call   0x427cc0
  427e62:	mov    rcx,QWORD PTR [rsi+0x8]
  427e66:	movsxd rbx,ebx
  427e69:	mov    rdx,rdi
  427e6c:	mov    r8,rbx
  427e6f:	call   0x449450
  427e74:	add    QWORD PTR [rsi+0x8],rbx
  427e78:	add    rsp,0x20
  427e7c:	pop    rbx
  427e7d:	pop    rsi
  427e7e:	pop    rdi
  427e7f:	ret    
  427e80:	push   rsi
  427e81:	push   rbx
  427e82:	sub    rsp,0x58
  427e86:	lea    rbx,[rsp+0x20]
  427e8b:	mov    r8d,edx
  427e8e:	lea    rdx,[rip+0x2e2f7]        # 0x45618c
  427e95:	mov    rsi,rcx
  427e98:	mov    rcx,rbx
  427e9b:	call   0x449400
  427ea0:	cmp    BYTE PTR [rsp+0x20],0x0
  427ea5:	je     0x427eb3
  427ea7:	mov    rdx,rbx
  427eaa:	mov    rcx,rsi
  427ead:	call   0x427e40
  427eb2:	nop
  427eb3:	add    rsp,0x58
  427eb7:	pop    rbx
  427eb8:	pop    rsi
  427eb9:	ret    
  427eba:	nop    WORD PTR [rax+rax*1+0x0]
  427ec0:	push   rdi
  427ec1:	push   rsi
  427ec2:	push   rbx
  427ec3:	sub    rsp,0x20
  427ec7:	mov    rsi,rdx
  427eca:	mov    rdx,QWORD PTR [rcx]
  427ecd:	mov    rbx,rcx
  427ed0:	movzx  eax,BYTE PTR [rdx]
  427ed3:	cmp    al,0x2d
  427ed5:	je     0x427f50
  427ed7:	cmp    al,0x2b
  427ed9:	mov    r8d,eax
  427edc:	je     0x427f41
  427ede:	mov    rdi,QWORD PTR [rip+0x32f4b]        # 0x45ae30
  427ee5:	movzx  edx,r8b
  427ee9:	xor    eax,eax
  427eeb:	test   BYTE PTR [rdi+rdx*2],0x4
  427eef:	je     0x427f39
  427ef1:	mov    eax,r8d
  427ef4:	jmp    0x427f19
  427ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f00:	mov    rax,QWORD PTR [rbx]
  427f03:	lea    r8,[rax+0x1]
  427f07:	mov    QWORD PTR [rbx],r8
  427f0a:	movzx  r8d,BYTE PTR [rax+0x1]
  427f0f:	test   BYTE PTR [rdi+r8*2],0x4
  427f14:	mov    rax,r8
  427f17:	je     0x427f34
  427f19:	test   al,al
  427f1b:	mov    BYTE PTR [rip+0x3a79f],al        # 0x4626c0
  427f21:	je     0x427f00
  427f23:	lea    rdx,[rip+0x3a796]        # 0x4626c0
  427f2a:	mov    rcx,rsi
  427f2d:	call   0x427e40
  427f32:	jmp    0x427f00
  427f34:	mov    eax,0x1
  427f39:	add    rsp,0x20
  427f3d:	pop    rbx
  427f3e:	pop    rsi
  427f3f:	pop    rdi
  427f40:	ret    
  427f41:	lea    rax,[rdx+0x1]
  427f45:	mov    QWORD PTR [rcx],rax
  427f48:	movzx  r8d,BYTE PTR [rdx+0x1]
  427f4d:	jmp    0x427ede
  427f4f:	nop
  427f50:	lea    rdx,[rip+0x3a769]        # 0x4626c0
  427f57:	mov    rcx,rsi
  427f5a:	mov    BYTE PTR [rip+0x3a75f],0x2d        # 0x4626c0
  427f61:	call   0x427e40
  427f66:	mov    rax,QWORD PTR [rbx]
  427f69:	lea    rdx,[rax+0x1]
  427f6d:	mov    QWORD PTR [rbx],rdx
  427f70:	movzx  r8d,BYTE PTR [rax+0x1]
  427f75:	jmp    0x427ede
  427f7a:	nop    WORD PTR [rax+rax*1+0x0]
  427f80:	push   rdi
  427f81:	push   rsi
  427f82:	push   rbx
  427f83:	sub    rsp,0x20
  427f87:	mov    rax,QWORD PTR [rdx]
  427f8a:	cmp    rax,r8
  427f8d:	je     0x427fb8
  427f8f:	mov    rbx,r8
  427f92:	mov    rsi,rcx
  427f95:	mov    rdi,rdx
  427f98:	sub    rbx,rax
  427f9b:	mov    edx,ebx
  427f9d:	movsxd rbx,ebx
  427fa0:	call   0x427cc0
  427fa5:	mov    rcx,QWORD PTR [rsi+0x8]
  427fa9:	mov    rdx,QWORD PTR [rdi]
  427fac:	mov    r8,rbx
  427faf:	call   0x449450
  427fb4:	add    QWORD PTR [rsi+0x8],rbx
  427fb8:	add    rsp,0x20
  427fbc:	pop    rbx
  427fbd:	pop    rsi
  427fbe:	pop    rdi
  427fbf:	ret    
  427fc0:	push   r13
  427fc2:	push   r12
  427fc4:	push   rbp
  427fc5:	push   rdi
  427fc6:	push   rsi
  427fc7:	push   rbx
  427fc8:	sub    rsp,0x28
  427fcc:	mov    rsi,rcx
  427fcf:	mov    rbx,rdx
  427fd2:	call   0x427bb0
  427fd7:	mov    rcx,rsi
  427fda:	call   0x427820
  427fdf:	mov    rax,QWORD PTR [rbx]
  427fe2:	mov    QWORD PTR [rsi],rax
  427fe5:	mov    rax,QWORD PTR [rbx+0x8]
  427fe9:	mov    QWORD PTR [rsi+0x8],rax
  427fed:	mov    rax,QWORD PTR [rbx+0x10]
  427ff1:	mov    QWORD PTR [rsi+0x10],rax
  427ff5:	mov    rax,QWORD PTR [rbx+0x18]
  427ff9:	mov    QWORD PTR [rsi+0x18],rax
  427ffd:	mov    rax,QWORD PTR [rbx+0x20]
  428001:	mov    QWORD PTR [rsi+0x20],rax
  428005:	mov    rax,QWORD PTR [rbx+0x28]
  428009:	mov    QWORD PTR [rsi+0x28],rax
  42800d:	mov    rax,QWORD PTR [rbx+0x30]
  428011:	mov    QWORD PTR [rsi+0x30],rax
  428015:	mov    rax,QWORD PTR [rbx+0x38]
  428019:	mov    QWORD PTR [rsi+0x38],rax
  42801d:	mov    rax,QWORD PTR [rbx+0x40]
  428021:	mov    QWORD PTR [rsi+0x40],rax
  428025:	mov    rax,QWORD PTR [rbx+0x48]
  428029:	mov    QWORD PTR [rsi+0x48],rax
  42802d:	mov    rax,QWORD PTR [rbx+0x50]
  428031:	mov    QWORD PTR [rsi+0x50],rax
  428035:	mov    rax,QWORD PTR [rbx+0x58]
  428039:	mov    QWORD PTR [rsi+0x58],rax
  42803d:	mov    rax,QWORD PTR [rbx+0x60]
  428041:	mov    QWORD PTR [rsi+0x60],rax
  428045:	mov    rax,QWORD PTR [rbx+0x68]
  428049:	mov    QWORD PTR [rsi+0x68],rax
  42804d:	movsxd rax,DWORD PTR [rbx+0x34]
  428051:	test   eax,eax
  428053:	jne    0x4281e4
  428059:	mov    r9d,DWORD PTR [rbx+0x30]
  42805d:	xor    ebp,ebp
  42805f:	xor    r12d,r12d
  428062:	test   r9d,r9d
  428065:	jle    0x4280bc
  428067:	nop    WORD PTR [rax+rax*1+0x0]
  428070:	mov    rax,QWORD PTR [rbx+0x8]
  428074:	mov    r13,rbp
  428077:	add    r12d,0x1
  42807b:	mov    rcx,QWORD PTR [rax+rbp*1]
  42807f:	call   0x4493c0
  428084:	add    r13,QWORD PTR [rsi+0x8]
  428088:	lea    edi,[rax+0x1]
  42808b:	movsxd rdi,edi
  42808e:	mov    rcx,rdi
  428091:	call   0x43baf0
  428096:	mov    QWORD PTR [r13+0x0],rax
  42809a:	mov    rax,QWORD PTR [rsi+0x8]
  42809e:	mov    r8,rdi
  4280a1:	mov    rcx,QWORD PTR [rax+rbp*1]
  4280a5:	mov    rax,QWORD PTR [rbx+0x8]
  4280a9:	mov    rdx,QWORD PTR [rax+rbp*1]
  4280ad:	add    rbp,0x8
  4280b1:	call   0x449450
  4280b6:	cmp    DWORD PTR [rbx+0x30],r12d
  4280ba:	jg     0x428070
  4280bc:	movsxd rax,DWORD PTR [rbx+0x28]
  4280c0:	test   eax,eax
  4280c2:	jne    0x4282b0
  4280c8:	mov    r8d,DWORD PTR [rbx+0x20]
  4280cc:	xor    ebp,ebp
  4280ce:	xor    r12d,r12d
  4280d1:	test   r8d,r8d
  4280d4:	jle    0x42812c
  4280d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280e0:	mov    rax,QWORD PTR [rbx+0x10]
  4280e4:	mov    r13,rbp
  4280e7:	add    r12d,0x1
  4280eb:	mov    rcx,QWORD PTR [rax+rbp*1]
  4280ef:	call   0x4493c0
  4280f4:	add    r13,QWORD PTR [rsi+0x10]
  4280f8:	lea    edi,[rax+0x1]
  4280fb:	movsxd rdi,edi
  4280fe:	mov    rcx,rdi
  428101:	call   0x43baf0
  428106:	mov    QWORD PTR [r13+0x0],rax
  42810a:	mov    rax,QWORD PTR [rsi+0x10]
  42810e:	mov    r8,rdi
  428111:	mov    rcx,QWORD PTR [rax+rbp*1]
  428115:	mov    rax,QWORD PTR [rbx+0x10]
  428119:	mov    rdx,QWORD PTR [rax+rbp*1]
  42811d:	add    rbp,0x8
  428121:	call   0x449450
  428126:	cmp    DWORD PTR [rbx+0x20],r12d
  42812a:	jg     0x4280e0
  42812c:	movsxd rax,DWORD PTR [rbx+0x2c]
  428130:	test   eax,eax
  428132:	jne    0x428290
  428138:	mov    ecx,DWORD PTR [rbx+0x24]
  42813b:	xor    ebp,ebp
  42813d:	xor    r12d,r12d
  428140:	test   ecx,ecx
  428142:	jle    0x428190
  428144:	mov    rax,QWORD PTR [rbx+0x18]
  428148:	mov    r13,rbp
  42814b:	add    r12d,0x1
  42814f:	mov    rcx,QWORD PTR [rax+rbp*1]
  428153:	call   0x4493c0
  428158:	add    r13,QWORD PTR [rsi+0x18]
  42815c:	lea    edi,[rax+0x1]
  42815f:	movsxd rdi,edi
  428162:	mov    rcx,rdi
  428165:	call   0x43baf0
  42816a:	mov    QWORD PTR [r13+0x0],rax
  42816e:	mov    rax,QWORD PTR [rsi+0x18]
  428172:	mov    r8,rdi
  428175:	mov    rcx,QWORD PTR [rax+rbp*1]
  428179:	mov    rax,QWORD PTR [rbx+0x18]
  42817d:	mov    rdx,QWORD PTR [rax+rbp*1]
  428181:	add    rbp,0x8
  428185:	call   0x449450
  42818a:	cmp    DWORD PTR [rbx+0x24],r12d
  42818e:	jg     0x428144
  428190:	movsxd rax,DWORD PTR [rbx+0x58]
  428194:	test   eax,eax
  428196:	jne    0x428200
  428198:	cmp    QWORD PTR [rbx+0x60],0x0
  42819d:	je     0x42827d
  4281a3:	mov    ecx,0x18
  4281a8:	call   0x43baf0
  4281ad:	mov    QWORD PTR [rsi+0x60],rax
  4281b1:	mov    rdx,QWORD PTR [rbx+0x60]
  4281b5:	mov    rcx,rax
  4281b8:	mov    QWORD PTR [rax+0x10],0x0
  4281c0:	mov    QWORD PTR [rax+0x8],0x0
  4281c8:	mov    QWORD PTR [rax],0x0
  4281cf:	mov    r8,QWORD PTR [rdx+0x8]
  4281d3:	add    rsp,0x28
  4281d7:	pop    rbx
  4281d8:	pop    rsi
  4281d9:	pop    rdi
  4281da:	pop    rbp
  4281db:	pop    r12
  4281dd:	pop    r13
  4281df:	jmp    0x427f80
  4281e4:	lea    rcx,[rax*8+0x0]
  4281ec:	call   0x43baf0
  4281f1:	mov    QWORD PTR [rsi+0x8],rax
  4281f5:	jmp    0x428059
  4281fa:	nop    WORD PTR [rax+rax*1+0x0]
  428200:	lea    rcx,[rax*8+0x0]
  428208:	call   0x43baf0
  42820d:	mov    edx,DWORD PTR [rbx+0x58]
  428210:	mov    QWORD PTR [rsi+0x50],rax
  428214:	test   edx,edx
  428216:	jle    0x428198
  428218:	mov    r12,rax
  42821b:	xor    edi,edi
  42821d:	jmp    0x428224
  42821f:	nop
  428220:	mov    r12,QWORD PTR [rsi+0x50]
  428224:	mov    rax,QWORD PTR [rbx+0x50]
  428228:	lea    rbp,[rdi*8+0x0]
  428230:	add    r12,rbp
  428233:	mov    rcx,QWORD PTR [rax+rdi*8]
  428237:	call   0x4493c0
  42823c:	lea    ebp,[rax+0x1]
  42823f:	movsxd rbp,ebp
  428242:	mov    rcx,rbp
  428245:	call   0x43baf0
  42824a:	mov    QWORD PTR [r12],rax
  42824e:	mov    rax,QWORD PTR [rsi+0x50]
  428252:	mov    r8,rbp
  428255:	mov    rcx,QWORD PTR [rax+rdi*8]
  428259:	mov    rax,QWORD PTR [rbx+0x50]
  42825d:	mov    rdx,QWORD PTR [rax+rdi*8]
  428261:	call   0x449450
  428266:	lea    eax,[rdi+0x1]
  428269:	add    rdi,0x1
  42826d:	cmp    DWORD PTR [rbx+0x58],eax
  428270:	jg     0x428220
  428272:	cmp    QWORD PTR [rbx+0x60],0x0
  428277:	jne    0x4281a3
  42827d:	add    rsp,0x28
  428281:	pop    rbx
  428282:	pop    rsi
  428283:	pop    rdi
  428284:	pop    rbp
  428285:	pop    r12
  428287:	pop    r13
  428289:	ret    
  42828a:	nop    WORD PTR [rax+rax*1+0x0]
  428290:	lea    rcx,[rax*8+0x0]
  428298:	call   0x43baf0
  42829d:	mov    QWORD PTR [rsi+0x18],rax
  4282a1:	jmp    0x428138
  4282a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4282b0:	lea    rcx,[rax*8+0x0]
  4282b8:	call   0x43baf0
  4282bd:	mov    QWORD PTR [rsi+0x10],rax
  4282c1:	jmp    0x4280c8
  4282c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4282d0:	push   rdi
  4282d1:	push   rsi
  4282d2:	push   rbx
  4282d3:	sub    rsp,0x20
  4282d7:	mov    eax,DWORD PTR [rcx+0x5c]
  4282da:	test   eax,eax
  4282dc:	jne    0x428348
  4282de:	mov    eax,DWORD PTR [rcx+0x34]
  4282e1:	cmp    DWORD PTR [rcx+0x30],eax
  4282e4:	movsxd rsi,r8d
  4282e7:	mov    rdi,rdx
  4282ea:	mov    rbx,rcx
  4282ed:	jl     0x428316
  4282ef:	test   eax,eax
  4282f1:	je     0x428350
  4282f3:	cmp    eax,0x3fffffff
  4282f8:	jg     0x428367
  4282fa:	add    eax,eax
  4282fc:	mov    DWORD PTR [rcx+0x34],eax
  4282ff:	cdqe   
  428301:	mov    rcx,QWORD PTR [rcx+0x8]
  428305:	lea    rdx,[rax*8+0x0]
  42830d:	call   0x43bb70
  428312:	mov    QWORD PTR [rbx+0x8],rax
  428316:	lea    ecx,[rsi+0x1]
  428319:	movsxd rcx,ecx
  42831c:	call   0x43baf0
  428321:	mov    rdx,rdi
  428324:	mov    rcx,rax
  428327:	mov    r8,rsi
  42832a:	call   0x449450
  42832f:	movsxd rdx,DWORD PTR [rbx+0x30]
  428333:	mov    r9,rax
  428336:	mov    BYTE PTR [rax+rsi*1],0x0
  42833a:	mov    rax,QWORD PTR [rbx+0x8]
  42833e:	lea    ecx,[rdx+0x1]
  428341:	mov    DWORD PTR [rbx+0x30],ecx
  428344:	mov    QWORD PTR [rax+rdx*8],r9
  428348:	add    rsp,0x20
  42834c:	pop    rbx
  42834d:	pop    rsi
  42834e:	pop    rdi
  42834f:	ret    
  428350:	mov    DWORD PTR [rcx+0x34],0x3
  428357:	mov    ecx,0x18
  42835c:	call   0x43baf0
  428361:	mov    QWORD PTR [rbx+0x8],rax
  428365:	jmp    0x428316
  428367:	mov    ecx,0x7fffffff
  42836c:	call   0x43ba90
  428371:	nop
  428372:	nop    DWORD PTR [rax+0x0]
  428376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428380:	mov    BYTE PTR [rip+0x22dda],cl        # 0x44b160
  428386:	ret    
  428387:	nop    WORD PTR [rax+rax*1+0x0]
  428390:	push   r14
  428392:	push   r13
  428394:	push   r12
  428396:	push   rbp
  428397:	push   rdi
  428398:	push   rsi
  428399:	push   rbx
  42839a:	sub    rsp,0x20
  42839e:	lea    rbx,[rip+0x2eca3]        # 0x457048
  4283a5:	xor    esi,esi
  4283a7:	mov    r13,rcx
  4283aa:	mov    r12d,edx
  4283ad:	call   0x4493c0
  4283b2:	movsxd r14,eax
  4283b5:	mov    rbp,r14
  4283b8:	jmp    0x4283ce
  4283ba:	nop    WORD PTR [rax+rax*1+0x0]
  4283c0:	add    rsi,0x1
  4283c4:	add    rbx,0x18
  4283c8:	cmp    rsi,0x4f
  4283cc:	je     0x428420
  4283ce:	mov    rdi,QWORD PTR [rbx]
  4283d1:	mov    rcx,rdi
  4283d4:	call   0x4493c0
  4283d9:	cmp    ebp,eax
  4283db:	jne    0x4283c0
  4283dd:	mov    eax,DWORD PTR [rbx+0x8]
  4283e0:	xor    eax,r12d
  4283e3:	test   al,0x2
  4283e5:	jne    0x4283c0
  4283e7:	mov    r8,r14
  4283ea:	mov    rdx,r13
  4283ed:	mov    rcx,rdi
  4283f0:	call   0x449458
  4283f5:	test   eax,eax
  4283f7:	jne    0x4283c0
  4283f9:	lea    rdx,[rsi+rsi*2]
  4283fd:	lea    rax,[rip+0x2ec3c]        # 0x457040
  428404:	mov    rax,QWORD PTR [rax+rdx*8]
  428408:	add    rsp,0x20
  42840c:	pop    rbx
  42840d:	pop    rsi
  42840e:	pop    rdi
  42840f:	pop    rbp
  428410:	pop    r12
  428412:	pop    r13
  428414:	pop    r14
  428416:	ret    
  428417:	nop    WORD PTR [rax+rax*1+0x0]
  428420:	xor    eax,eax
  428422:	add    rsp,0x20
  428426:	pop    rbx
  428427:	pop    rsi
  428428:	pop    rdi
  428429:	pop    rbp
  42842a:	pop    r12
  42842c:	pop    r13
  42842e:	pop    r14
  428430:	ret    
  428431:	nop    DWORD PTR [rax+rax*1+0x0]
  428436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428440:	cmp    ecx,0xffffffff
  428443:	je     0x428461
  428445:	lea    rdx,[rip+0x2e8b4]        # 0x456d00
  42844c:	jmp    0x428454
  42844e:	xchg   ax,ax
  428450:	cmp    eax,ecx
  428452:	je     0x428461
  428454:	add    rdx,0x18
  428458:	mov    eax,DWORD PTR [rdx+0x8]
  42845b:	test   eax,eax
  42845d:	jne    0x428450
  42845f:	repz ret 
  428461:	mov    DWORD PTR [rip+0x22cfd],ecx        # 0x44b164
  428467:	mov    eax,ecx
  428469:	ret    
  42846a:	nop    WORD PTR [rax+rax*1+0x0]
  428470:	push   rdi
  428471:	push   rsi
  428472:	push   rbx
  428473:	sub    rsp,0x20
  428477:	mov    esi,0xffffffff
  42847c:	lea    rbx,[rip+0x2e87d]        # 0x456d00
  428483:	mov    rdi,rcx
  428486:	jmp    0x42849b
  428488:	nop    DWORD PTR [rax+rax*1+0x0]
  428490:	add    rbx,0x18
  428494:	mov    esi,DWORD PTR [rbx+0x8]
  428497:	test   esi,esi
  428499:	je     0x4284aa
  42849b:	mov    rdx,QWORD PTR [rbx]
  42849e:	mov    rcx,rdi
  4284a1:	call   0x4493e0
  4284a6:	test   eax,eax
  4284a8:	jne    0x428490
  4284aa:	mov    eax,esi
  4284ac:	add    rsp,0x20
  4284b0:	pop    rbx
  4284b1:	pop    rsi
  4284b2:	pop    rdi
  4284b3:	ret    
  4284b4:	xchg   ax,ax
  4284b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4284c0:	push   r15
  4284c2:	push   r14
  4284c4:	push   r13
  4284c6:	push   r12
  4284c8:	push   rbp
  4284c9:	push   rdi
  4284ca:	push   rsi
  4284cb:	push   rbx
  4284cc:	sub    rsp,0x38
  4284d0:	lea    rdi,[rip+0x2dcf3]        # 0x4561ca
  4284d7:	mov    r12,rcx
  4284da:	mov    ecx,0x5
  4284df:	mov    rsi,r12
  4284e2:	lea    rax,[r12+0x5]
  4284e7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4284e9:	mov    rdi,QWORD PTR [rip+0x32940]        # 0x45ae30
  4284f0:	seta   cl
  4284f3:	setb   dl
  4284f6:	cmp    cl,dl
  4284f8:	cmove  r12,rax
  4284fc:	movzx  eax,BYTE PTR [r12]
  428501:	test   BYTE PTR [rdi+rax*2],0x8
  428505:	je     0x428704
  42850b:	mov    rcx,r12
  42850e:	mov    rbx,r12
  428511:	call   0x4493c0
  428516:	lea    ecx,[rax+0x8]
  428519:	movsxd rcx,ecx
  42851c:	call   0x43baf0
  428521:	mov    r13,rax
  428524:	mov    QWORD PTR [rsp+0x28],rax
  428529:	movzx  eax,BYTE PTR [r12]
  42852e:	mov    r9,rax
  428531:	movzx  eax,WORD PTR [rdi+rax*2]
  428535:	test   al,0x8
  428537:	jne    0x428670
  42853d:	cmp    r9b,0x4f
  428541:	jne    0x428704
  428547:	lea    rbp,[rip+0x2e542]        # 0x456a90
  42854e:	mov    r15d,0x4
  428554:	lea    rsi,[rip+0x2dc35]        # 0x456190
  42855b:	xor    r14d,r14d
  42855e:	jmp    0x428580
  428560:	add    rbp,0x10
  428564:	mov    rsi,QWORD PTR [rbp-0x10]
  428568:	add    r14d,0x1
  42856c:	test   rsi,rsi
  42856f:	je     0x428704
  428575:	mov    rcx,rsi
  428578:	call   0x4493c0
  42857d:	mov    r15,rax
  428580:	mov    r8,r15
  428583:	mov    rdx,rsi
  428586:	mov    rcx,rbx
  428589:	call   0x4493b0
  42858e:	test   eax,eax
  428590:	jne    0x428560
  428592:	lea    rax,[rip+0x2e4e7]        # 0x456a80
  428599:	movsxd r14,r14d
  42859c:	add    rbx,r15
  42859f:	shl    r14,0x4
  4285a3:	lea    rbp,[rax+r14*1]
  4285a7:	mov    rcx,QWORD PTR [rbp+0x8]
  4285ab:	call   0x4493c0
  4285b0:	lea    r9,[r13+0x1]
  4285b4:	mov    rdx,QWORD PTR [rbp+0x8]
  4285b8:	mov    BYTE PTR [r13+0x0],0x22
  4285bd:	mov    r8,rax
  4285c0:	mov    r14,rax
  4285c3:	mov    rcx,r9
  4285c6:	call   0x449450
  4285cb:	movzx  r9d,BYTE PTR [rbx]
  4285cf:	add    r14,rax
  4285d2:	lea    r13,[r14+0x1]
  4285d6:	mov    BYTE PTR [r14],0x22
  4285da:	cmp    r9b,0x54
  4285de:	je     0x4286e4
  4285e4:	cmp    r9b,0x45
  4285e8:	je     0x428820
  4285ee:	lea    eax,[r9-0x4e]
  4285f2:	mov    rbp,r13
  4285f5:	mov    r14,rbx
  4285f8:	test   al,0xfd
  4285fa:	jne    0x428756
  428600:	cmp    BYTE PTR [rbx+0x1],0x0
  428604:	je     0x4288b7
  42860a:	cmp    r9b,0x58
  42860e:	je     0x428781
  428614:	cmp    r9b,0x53
  428618:	je     0x4287ae
  42861e:	cmp    r9b,0x44
  428622:	je     0x428970
  428628:	cmp    r9b,0x5f
  42862c:	jne    0x4289eb
  428632:	movzx  eax,BYTE PTR [r14+0x1]
  428637:	cmp    al,0x5f
  428639:	jne    0x428920
  42863f:	movzx  eax,BYTE PTR [r14+0x2]
  428644:	lea    rbx,[r14+0x2]
  428648:	mov    r9,rax
  42864b:	movzx  eax,WORD PTR [rdi+rax*2]
  42864f:	test   al,0x4
  428651:	jne    0x4286c2
  428653:	cmp    r9b,0x5f
  428657:	je     0x428830
  42865d:	test   al,0x8
  42865f:	lea    r13,[rbp+0x1]
  428663:	mov    BYTE PTR [rbp+0x0],0x2e
  428667:	je     0x42853d
  42866d:	nop    DWORD PTR [rax]
  428670:	add    rbx,0x1
  428674:	movzx  eax,BYTE PTR [rbx]
  428677:	add    r13,0x1
  42867b:	mov    BYTE PTR [r13-0x1],r9b
  42867f:	test   BYTE PTR [rdi+rax*2],0xc
  428683:	mov    r9,rax
  428686:	jne    0x428670
  428688:	cmp    al,0x5f
  42868a:	jne    0x4285da
  428690:	movzx  eax,BYTE PTR [rbx+0x1]
  428694:	test   BYTE PTR [rdi+rax*2],0xc
  428698:	je     0x428750
  42869e:	mov    r9d,0x5f
  4286a4:	jmp    0x428670
  4286a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4286b0:	cmp    al,0x5f
  4286b2:	jne    0x4289c1
  4286b8:	movzx  eax,BYTE PTR [rbx+0x1]
  4286bc:	test   BYTE PTR [rdi+rax*2],0x4
  4286c0:	je     0x428704
  4286c2:	add    rbx,0x1
  4286c6:	movzx  eax,BYTE PTR [rbx]
  4286c9:	test   BYTE PTR [rdi+rax*2],0x4
  4286cd:	mov    r9,rax
  4286d0:	je     0x4286b0
  4286d2:	add    rbx,0x1
  4286d6:	movzx  eax,BYTE PTR [rbx]
  4286d9:	test   BYTE PTR [rdi+rax*2],0x4
  4286dd:	mov    r9,rax
  4286e0:	jne    0x4286c2
  4286e2:	jmp    0x4286b0
  4286e4:	cmp    BYTE PTR [rbx+0x1],0x4b
  4286e8:	jne    0x428756
  4286ea:	movzx  eax,BYTE PTR [rbx+0x2]
  4286ee:	cmp    al,0x42
  4286f0:	je     0x428909
  4286f6:	cmp    al,0x5f
  4286f8:	jne    0x428704
  4286fa:	cmp    BYTE PTR [rbx+0x3],0x5f
  4286fe:	je     0x4288d8
  428704:	mov    rcx,r12
  428707:	call   0x4493c0
  42870c:	lea    ecx,[rax+0x3]
  42870f:	movsxd rcx,ecx
  428712:	call   0x43baf0
  428717:	cmp    BYTE PTR [r12],0x3c
  42871c:	mov    rsi,rax
  42871f:	je     0x4288c5
  428725:	lea    rdx,[rip+0x2daa4]        # 0x4561d0
  42872c:	mov    r8,r12
  42872f:	mov    rcx,rax
  428732:	call   0x449400
  428737:	mov    rax,rsi
  42873a:	add    rsp,0x38
  42873e:	pop    rbx
  42873f:	pop    rsi
  428740:	pop    rdi
  428741:	pop    rbp
  428742:	pop    r12
  428744:	pop    r13
  428746:	pop    r14
  428748:	pop    r15
  42874a:	ret    
  42874b:	nop    DWORD PTR [rax+rax*1+0x0]
  428750:	mov    r9d,0x5f
  428756:	cmp    r9b,0x4e
  42875a:	mov    rbp,r13
  42875d:	mov    r14,rbx
  428760:	sete   al
  428763:	test   al,al
  428765:	jne    0x428771
  428767:	cmp    r9b,0x53
  42876b:	jne    0x42860a
  428771:	cmp    BYTE PTR [rbx+0x1],0x0
  428775:	je     0x428704
  428777:	cmp    r9b,0x58
  42877b:	jne    0x428614
  428781:	movzx  r9d,BYTE PTR [rbx+0x1]
  428786:	lea    r14,[rbx+0x1]
  42878a:	cmp    r9b,0x62
  42878e:	jne    0x42879e
  428790:	add    r14,0x1
  428794:	movzx  r9d,BYTE PTR [r14]
  428798:	cmp    r9b,0x62
  42879c:	je     0x428790
  42879e:	cmp    r9b,0x6e
  4287a2:	je     0x428790
  4287a4:	cmp    r9b,0x53
  4287a8:	jne    0x42861e
  4287ae:	movzx  eax,BYTE PTR [r14+0x1]
  4287b3:	test   al,al
  4287b5:	je     0x428704
  4287bb:	movzx  ebx,BYTE PTR [r14+0x2]
  4287c0:	test   bl,bl
  4287c2:	je     0x4287cd
  4287c4:	cmp    bl,0x5f
  4287c7:	jne    0x428704
  4287cd:	cmp    al,0x4f
  4287cf:	je     0x4289a9
  4287d5:	jle    0x4288f5
  4287db:	cmp    al,0x52
  4287dd:	je     0x4289b5
  4287e3:	cmp    al,0x57
  4287e5:	jne    0x428704
  4287eb:	lea    rbp,[rip+0x2d9a9]        # 0x45619b
  4287f2:	mov    rdx,rbp
  4287f5:	mov    rcx,r13
  4287f8:	add    r14,0x2
  4287fc:	call   0x4493d8
  428801:	mov    rcx,rbp
  428804:	call   0x4493c0
  428809:	mov    r9d,ebx
  42880c:	lea    rbp,[r13+rax*1+0x0]
  428811:	jmp    0x428628
  428816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428820:	cmp    BYTE PTR [rbx+0x1],0x0
  428824:	jne    0x428756
  42882a:	jmp    0x428704
  42882f:	nop
  428830:	cmp    BYTE PTR [r14+0x3],0x5f
  428835:	je     0x42865d
  42883b:	lea    r15,[rip+0x2e13e]        # 0x456980
  428842:	mov    r8d,0x6
  428848:	lea    rdi,[rip+0x2d974]        # 0x4561c3
  42884f:	xor    r14d,r14d
  428852:	mov    r13,r15
  428855:	jmp    0x428880
  428857:	nop    WORD PTR [rax+rax*1+0x0]
  428860:	add    r13,0x10
  428864:	mov    rdi,QWORD PTR [r13+0x0]
  428868:	add    r14d,0x1
  42886c:	test   rdi,rdi
  42886f:	je     0x428704
  428875:	mov    rcx,rdi
  428878:	call   0x4493c0
  42887d:	mov    r8,rax
  428880:	mov    rdx,rdi
  428883:	mov    rcx,rbx
  428886:	call   0x4493b0
  42888b:	test   eax,eax
  42888d:	jne    0x428860
  42888f:	movsxd r14,r14d
  428892:	shl    r14,0x4
  428896:	mov    rdi,QWORD PTR [r15+r14*1+0x8]
  42889b:	mov    rcx,rdi
  42889e:	call   0x4493c0
  4288a3:	mov    rbx,rax
  4288a6:	mov    rcx,rbp
  4288a9:	mov    r8,rax
  4288ac:	mov    rdx,rdi
  4288af:	add    rbp,rbx
  4288b2:	call   0x449450
  4288b7:	mov    BYTE PTR [rbp+0x0],0x0
  4288bb:	mov    rax,QWORD PTR [rsp+0x28]
  4288c0:	jmp    0x42873a
  4288c5:	mov    rdx,r12
  4288c8:	mov    rcx,rax
  4288cb:	call   0x4493d8
  4288d0:	mov    rax,rsi
  4288d3:	jmp    0x42873a
  4288d8:	movzx  eax,BYTE PTR [rbx+0x4]
  4288dc:	mov    BYTE PTR [r13+0x0],0x2e
  4288e1:	add    rbx,0x4
  4288e5:	add    r13,0x1
  4288e9:	mov    r9,rax
  4288ec:	movzx  eax,WORD PTR [rdi+rax*2]
  4288f0:	jmp    0x428535
  4288f5:	cmp    al,0x49
  4288f7:	jne    0x428704
  4288fd:	lea    rbp,[rip+0x2d89e]        # 0x4561a2
  428904:	jmp    0x4287f2
  428909:	cmp    BYTE PTR [rbx+0x3],0x0
  42890d:	jne    0x428704
  428913:	mov    rbp,r13
  428916:	jmp    0x4288b7
  428918:	nop    DWORD PTR [rax+rax*1+0x0]
  428920:	cmp    al,0x45
  428922:	je     0x42892c
  428924:	cmp    al,0x42
  428926:	jne    0x428704
  42892c:	movzx  ecx,BYTE PTR [r14+0x2]
  428931:	lea    rax,[r14+0x2]
  428935:	test   BYTE PTR [rdi+rcx*2],0x4
  428939:	mov    rdx,rcx
  42893c:	je     0x42894e
  42893e:	add    rax,0x1
  428942:	movzx  ecx,BYTE PTR [rax]
  428945:	test   BYTE PTR [rdi+rcx*2],0x4
  428949:	mov    rdx,rcx
  42894c:	jne    0x42893e
  42894e:	cmp    dl,0x73
  428951:	jne    0x428704
  428957:	cmp    BYTE PTR [rax+0x1],0x0
  42895b:	jne    0x428704
  428961:	jmp    0x4288b7
  428966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428970:	movzx  eax,BYTE PTR [r14+0x1]
  428975:	cmp    al,0x41
  428977:	je     0x428a30
  42897d:	cmp    al,0x46
  42897f:	jne    0x428704
  428985:	lea    rbx,[rip+0x2d825]        # 0x4561b1
  42898c:	mov    rdx,rbx
  42898f:	mov    rcx,r13
  428992:	call   0x4493d8
  428997:	mov    rcx,rbx
  42899a:	call   0x4493c0
  42899f:	lea    rbp,[r13+rax*1+0x0]
  4289a4:	jmp    0x4288b7
  4289a9:	lea    rbp,[rip+0x2d7f9]        # 0x4561a9
  4289b0:	jmp    0x4287f2
  4289b5:	lea    rbp,[rip+0x2d7d9]        # 0x456195
  4289bc:	jmp    0x4287f2
  4289c1:	cmp    al,0x58
  4289c3:	mov    r14,rbx
  4289c6:	jne    0x4289eb
  4289c8:	movzx  r9d,BYTE PTR [rbx+0x1]
  4289cd:	add    r14,0x1
  4289d1:	cmp    r9b,0x62
  4289d5:	jne    0x4289e5
  4289d7:	add    r14,0x1
  4289db:	movzx  r9d,BYTE PTR [r14]
  4289df:	cmp    r9b,0x62
  4289e3:	je     0x4289d7
  4289e5:	cmp    r9b,0x6e
  4289e9:	je     0x4289d7
  4289eb:	cmp    r9b,0x2e
  4289ef:	jne    0x428a22
  4289f1:	movzx  eax,BYTE PTR [r14+0x1]
  4289f6:	test   BYTE PTR [rdi+rax*2],0x4
  4289fa:	je     0x428704
  428a00:	movzx  edx,BYTE PTR [r14+0x2]
  428a05:	lea    rax,[r14+0x2]
  428a09:	test   BYTE PTR [rdi+rdx*2],0x4
  428a0d:	mov    r9,rdx
  428a10:	je     0x428a22
  428a12:	add    rax,0x1
  428a16:	movzx  edx,BYTE PTR [rax]
  428a19:	test   BYTE PTR [rdi+rdx*2],0x4
  428a1d:	mov    r9,rdx
  428a20:	jne    0x428a12
  428a22:	test   r9b,r9b
  428a25:	je     0x4288b7
  428a2b:	jmp    0x428704
  428a30:	lea    rbx,[rip+0x2d784]        # 0x4561bb
  428a37:	jmp    0x42898c
  428a3c:	nop    DWORD PTR [rax+0x0]
  428a40:	push   rbp
  428a41:	push   rdi
  428a42:	push   rsi
  428a43:	push   rbx
  428a44:	sub    rsp,0x98
  428a4b:	mov    r8d,DWORD PTR [rip+0x22712]        # 0x44b164
  428a52:	mov    rbp,rcx
  428a55:	mov    ebx,edx
  428a57:	cmp    r8d,0xffffffff
  428a5b:	je     0x428af2
  428a61:	lea    rsi,[rsp+0x20]
  428a66:	xor    eax,eax
  428a68:	mov    ecx,0xe
  428a6d:	test   edx,0xff04
  428a73:	mov    rdi,rsi
  428a76:	rep stos QWORD PTR es:[rdi],rax
  428a79:	je     0x428ac0
  428a7b:	mov    DWORD PTR [rsp+0x20],edx
  428a7f:	test   DWORD PTR [rsp+0x20],0x4100
  428a87:	jne    0x428ada
  428a89:	test   dl,0x4
  428a8c:	jne    0x428b20
  428a92:	and    dh,0x80
  428a95:	jne    0x428b03
  428a97:	mov    rdx,rbp
  428a9a:	mov    rcx,rsi
  428a9d:	call   0x42d7f0
  428aa2:	mov    rcx,rsi
  428aa5:	mov    rbx,rax
  428aa8:	call   0x427820
  428aad:	mov    rax,rbx
  428ab0:	add    rsp,0x98
  428ab7:	pop    rbx
  428ab8:	pop    rsi
  428ab9:	pop    rdi
  428aba:	pop    rbp
  428abb:	ret    
  428abc:	nop    DWORD PTR [rax+0x0]
  428ac0:	and    r8d,0xff04
  428ac7:	mov    edx,r8d
  428aca:	or     edx,ebx
  428acc:	mov    DWORD PTR [rsp+0x20],edx
  428ad0:	test   DWORD PTR [rsp+0x20],0x4100
  428ad8:	je     0x428a89
  428ada:	mov    rcx,rbp
  428add:	call   0x436b80
  428ae2:	test   rax,rax
  428ae5:	jne    0x428ab0
  428ae7:	mov    edx,DWORD PTR [rsp+0x20]
  428aeb:	test   dh,0x40
  428aee:	je     0x428a89
  428af0:	jmp    0x428ab0
  428af2:	call   0x43bbf0
  428af7:	add    rsp,0x98
  428afe:	pop    rbx
  428aff:	pop    rsi
  428b00:	pop    rdi
  428b01:	pop    rbp
  428b02:	ret    
  428b03:	mov    edx,ebx
  428b05:	mov    rcx,rbp
  428b08:	call   0x4284c0
  428b0d:	add    rsp,0x98
  428b14:	pop    rbx
  428b15:	pop    rsi
  428b16:	pop    rdi
  428b17:	pop    rbp
  428b18:	ret    
  428b19:	nop    DWORD PTR [rax+0x0]
  428b20:	mov    rcx,rbp
  428b23:	call   0x436bb0
  428b28:	test   rax,rax
  428b2b:	jne    0x428ab0
  428b31:	mov    edx,DWORD PTR [rsp+0x20]
  428b35:	jmp    0x428a92
  428b3a:	nop    WORD PTR [rax+rax*1+0x0]
  428b40:	push   r13
  428b42:	push   r12
  428b44:	push   rbp
  428b45:	push   rdi
  428b46:	push   rsi
  428b47:	push   rbx
  428b48:	sub    rsp,0x68
  428b4c:	mov    rbx,rdx
  428b4f:	mov    rdx,QWORD PTR [rdx]
  428b52:	mov    rdi,rcx
  428b55:	mov    rsi,r8
  428b58:	movzx  eax,BYTE PTR [rdx]
  428b5b:	cmp    al,0x59
  428b5d:	je     0x428c40
  428b63:	cmp    r9d,0x3
  428b67:	je     0x428cb1
  428b6d:	cmp    r9d,0x5
  428b71:	je     0x428bb0
  428b73:	cmp    r9d,0x4
  428b77:	je     0x428c20
  428b7d:	cmp    r9d,0x6
  428b81:	je     0x428df0
  428b87:	lea    edx,[r9-0x1]
  428b8b:	cmp    edx,0x1
  428b8e:	jbe    0x428d50
  428b94:	mov    eax,0x1
  428b99:	add    rsp,0x68
  428b9d:	pop    rbx
  428b9e:	pop    rsi
  428b9f:	pop    rdi
  428ba0:	pop    rbp
  428ba1:	pop    r12
  428ba3:	pop    r13
  428ba5:	ret    
  428ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428bb0:	cmp    al,0x6d
  428bb2:	je     0x428ed0
  428bb8:	lea    rdx,[rip+0x2d61b]        # 0x4561da
  428bbf:	mov    r8d,0x1
  428bc5:	mov    rcx,rsi
  428bc8:	call   0x427d60
  428bcd:	mov    rcx,rbx
  428bd0:	call   0x4276e0
  428bd5:	xor    edx,edx
  428bd7:	test   eax,eax
  428bd9:	jle    0x428c11
  428bdb:	lea    rdx,[rsp+0x40]
  428be0:	mov    r8d,0x1
  428be6:	mov    rcx,rsi
  428be9:	mov    BYTE PTR [rsp+0x40],al
  428bed:	mov    BYTE PTR [rsp+0x41],0x0
  428bf2:	call   0x427d60
  428bf7:	lea    rdx,[rip+0x2d5dc]        # 0x4561da
  428bfe:	mov    r8d,0x1
  428c04:	mov    rcx,rsi
  428c07:	call   0x427d60
  428c0c:	mov    edx,0x1
  428c11:	mov    eax,edx
  428c13:	add    rsp,0x68
  428c17:	pop    rbx
  428c18:	pop    rsi
  428c19:	pop    rdi
  428c1a:	pop    rbp
  428c1b:	pop    r12
  428c1d:	pop    r13
  428c1f:	ret    
  428c20:	mov    rcx,rbx
  428c23:	call   0x4276e0
  428c28:	test   eax,eax
  428c2a:	je     0x428fa1
  428c30:	cmp    eax,0x1
  428c33:	je     0x428f62
  428c39:	xor    eax,eax
  428c3b:	jmp    0x428b99
  428c40:	add    rdx,0x1
  428c44:	mov    rcx,rbx
  428c47:	mov    QWORD PTR [rbx],rdx
  428c4a:	call   0x427730
  428c4f:	movsxd rbp,eax
  428c52:	cmp    ebp,0xffffffff
  428c55:	je     0x428fd3
  428c5b:	cmp    QWORD PTR [rdi+0x50],0x0
  428c60:	je     0x428c6b
  428c62:	cmp    ebp,DWORD PTR [rdi+0x58]
  428c65:	jge    0x428fd3
  428c6b:	mov    rcx,rbx
  428c6e:	call   0x427730
  428c73:	cmp    eax,0xffffffff
  428c76:	je     0x428fd3
  428c7c:	mov    rax,QWORD PTR [rdi+0x50]
  428c80:	test   rax,rax
  428c83:	je     0x428fdd
  428c89:	mov    rdx,QWORD PTR [rax+rbp*8]
  428c8d:	test   rdx,rdx
  428c90:	je     0x428b94
  428c96:	cmp    BYTE PTR [rdx],0x0
  428c99:	je     0x428b94
  428c9f:	mov    rcx,rsi
  428ca2:	call   0x427e40
  428ca7:	mov    eax,0x1
  428cac:	jmp    0x428b99
  428cb1:	cmp    al,0x45
  428cb3:	je     0x428fc0
  428cb9:	cmp    al,0x4b
  428cbb:	je     0x428e90
  428cc1:	cmp    al,0x51
  428cc3:	je     0x428e90
  428cc9:	cmp    al,0x5f
  428ccb:	je     0x428f80
  428cd1:	cmp    al,0x6d
  428cd3:	mov    r12d,0x1
  428cd9:	je     0x428ff1
  428cdf:	mov    rcx,rbx
  428ce2:	mov    ebp,0x1
  428ce7:	call   0x4276e0
  428cec:	mov    edi,eax
  428cee:	cmp    edi,0xffffffff
  428cf1:	je     0x428c39
  428cf7:	lea    r13,[rsp+0x40]
  428cfc:	lea    rdx,[rip+0x2d4d4]        # 0x4561d7
  428d03:	mov    r8d,edi
  428d06:	mov    rcx,r13
  428d09:	call   0x449400
  428d0e:	cmp    BYTE PTR [rsp+0x40],0x0
  428d13:	jne    0x428ef0
  428d19:	cmp    edi,0x9
  428d1c:	setg   al
  428d1f:	or     al,bpl
  428d22:	je     0x428b94
  428d28:	test   r12d,r12d
  428d2b:	jne    0x428b94
  428d31:	mov    rax,QWORD PTR [rbx]
  428d34:	cmp    BYTE PTR [rax],0x5f
  428d37:	jne    0x428b94
  428d3d:	add    rax,0x1
  428d41:	mov    QWORD PTR [rbx],rax
  428d44:	jmp    0x428b94
  428d49:	nop    DWORD PTR [rax+0x0]
  428d50:	cmp    al,0x51
  428d52:	mov    DWORD PTR [rsp+0x38],r9d
  428d57:	je     0x428e90
  428d5d:	mov    rcx,rbx
  428d60:	call   0x4276e0
  428d65:	movsxd rbp,eax
  428d68:	cmp    ebp,0xffffffff
  428d6b:	je     0x428fd3
  428d71:	test   ebp,ebp
  428d73:	mov    r9d,DWORD PTR [rsp+0x38]
  428d78:	je     0x428eb0
  428d7e:	lea    ecx,[rbp+0x1]
  428d81:	mov    DWORD PTR [rsp+0x38],r9d
  428d86:	movsxd rcx,ecx
  428d89:	call   0x43baf0
  428d8e:	mov    rdx,QWORD PTR [rbx]
  428d91:	mov    r8,rbp
  428d94:	mov    rcx,rax
  428d97:	mov    r12,rax
  428d9a:	call   0x4493a8
  428d9f:	mov    edx,DWORD PTR [rdi]
  428da1:	mov    BYTE PTR [r12+rbp*1],0x0
  428da6:	mov    rcx,r12
  428da9:	call   0x428a40
  428dae:	mov    r9d,DWORD PTR [rsp+0x38]
  428db3:	cmp    r9d,0x1
  428db7:	je     0x429029
  428dbd:	test   rax,rax
  428dc0:	je     0x42904d
  428dc6:	cmp    BYTE PTR [rax],0x0
  428dc9:	jne    0x42900f
  428dcf:	mov    rcx,rax
  428dd2:	call   0x4494c8
  428dd7:	mov    rcx,r12
  428dda:	call   0x4494c8
  428ddf:	add    QWORD PTR [rbx],rbp
  428de2:	mov    eax,0x1
  428de7:	jmp    0x428b99
  428dec:	nop    DWORD PTR [rax+0x0]
  428df0:	cmp    al,0x45
  428df2:	je     0x428fc0
  428df8:	cmp    al,0x6d
  428dfa:	je     0x428f3a
  428e00:	mov    rdi,QWORD PTR [rip+0x32029]        # 0x45ae30
  428e07:	movzx  ecx,al
  428e0a:	test   BYTE PTR [rdi+rcx*2],0x4
  428e0e:	je     0x428e35
  428e10:	mov    rcx,rsi
  428e13:	mov    r8d,0x1
  428e19:	call   0x427d60
  428e1e:	mov    rax,QWORD PTR [rbx]
  428e21:	lea    rdx,[rax+0x1]
  428e25:	mov    QWORD PTR [rbx],rdx
  428e28:	movzx  ecx,BYTE PTR [rax+0x1]
  428e2c:	test   BYTE PTR [rdi+rcx*2],0x4
  428e30:	mov    rax,rcx
  428e33:	jne    0x428e10
  428e35:	cmp    al,0x2e
  428e37:	je     0x428f00
  428e3d:	mov    rax,QWORD PTR [rbx]
  428e40:	movzx  eax,BYTE PTR [rax]
  428e43:	cmp    al,0x65
  428e45:	jne    0x428b94
  428e4b:	mov    r8d,0x1
  428e51:	lea    rdx,[rip+0x2d391]        # 0x4561e9
  428e58:	jmp    0x428e66
  428e5a:	nop    WORD PTR [rax+rax*1+0x0]
  428e60:	mov    r8d,0x1
  428e66:	mov    rcx,rsi
  428e69:	call   0x427d60
  428e6e:	mov    rax,QWORD PTR [rbx]
  428e71:	lea    rdx,[rax+0x1]
  428e75:	mov    QWORD PTR [rbx],rdx
  428e78:	movzx  eax,BYTE PTR [rax+0x1]
  428e7c:	test   BYTE PTR [rdi+rax*2],0x4
  428e80:	jne    0x428e60
  428e82:	jmp    0x428b94
  428e87:	nop    WORD PTR [rax+rax*1+0x0]
  428e90:	mov    DWORD PTR [rsp+0x20],0x1
  428e98:	xor    r9d,r9d
  428e9b:	mov    r8,rsi
  428e9e:	mov    rdx,rbx
  428ea1:	mov    rcx,rdi
  428ea4:	call   0x429920
  428ea9:	jmp    0x428b99
  428eae:	xchg   ax,ax
  428eb0:	lea    rdx,[rip+0x2d334]        # 0x4561eb
  428eb7:	mov    r8d,0x1
  428ebd:	mov    rcx,rsi
  428ec0:	xor    ebp,ebp
  428ec2:	call   0x427d60
  428ec7:	jmp    0x428ddf
  428ecc:	nop    DWORD PTR [rax+0x0]
  428ed0:	lea    rdx,[rip+0x2d2fe]        # 0x4561d5
  428ed7:	mov    r8d,0x1
  428edd:	mov    rcx,rsi
  428ee0:	call   0x427d60
  428ee5:	add    QWORD PTR [rbx],0x1
  428ee9:	jmp    0x428bb8
  428eee:	xchg   ax,ax
  428ef0:	mov    rdx,r13
  428ef3:	mov    rcx,rsi
  428ef6:	call   0x427e40
  428efb:	jmp    0x428d19
  428f00:	mov    r8d,0x1
  428f06:	lea    rdx,[rip+0x2d2da]        # 0x4561e7
  428f0d:	jmp    0x428f16
  428f0f:	nop
  428f10:	mov    r8d,0x1
  428f16:	mov    rcx,rsi
  428f19:	call   0x427d60
  428f1e:	mov    rax,QWORD PTR [rbx]
  428f21:	lea    rdx,[rax+0x1]
  428f25:	mov    QWORD PTR [rbx],rdx
  428f28:	movzx  ecx,BYTE PTR [rax+0x1]
  428f2c:	test   BYTE PTR [rdi+rcx*2],0x4
  428f30:	mov    rax,rcx
  428f33:	jne    0x428f10
  428f35:	jmp    0x428e43
  428f3a:	lea    rdx,[rip+0x2d294]        # 0x4561d5
  428f41:	mov    r8d,0x1
  428f47:	mov    rcx,rsi
  428f4a:	call   0x427d60
  428f4f:	mov    rax,QWORD PTR [rbx]
  428f52:	lea    rdx,[rax+0x1]
  428f56:	mov    QWORD PTR [rbx],rdx
  428f59:	movzx  eax,BYTE PTR [rax+0x1]
  428f5d:	jmp    0x428e00
  428f62:	lea    rdx,[rip+0x2d279]        # 0x4561e2
  428f69:	mov    r8d,0x4
  428f6f:	mov    rcx,rsi
  428f72:	call   0x427d60
  428f77:	jmp    0x428b94
  428f7c:	nop    DWORD PTR [rax+0x0]
  428f80:	cmp    BYTE PTR [rdx+0x1],0x6d
  428f84:	je     0x429068
  428f8a:	mov    rcx,rbx
  428f8d:	mov    r12d,0x1
  428f93:	xor    ebp,ebp
  428f95:	call   0x427730
  428f9a:	mov    edi,eax
  428f9c:	jmp    0x428cee
  428fa1:	lea    rdx,[rip+0x2d234]        # 0x4561dc
  428fa8:	mov    r8d,0x5
  428fae:	mov    rcx,rsi
  428fb1:	call   0x427d60
  428fb6:	mov    eax,0x1
  428fbb:	jmp    0x428b99
  428fc0:	mov    r8,rsi
  428fc3:	mov    rdx,rbx
  428fc6:	mov    rcx,rdi
  428fc9:	call   0x429090
  428fce:	jmp    0x428b99
  428fd3:	mov    eax,0xffffffff
  428fd8:	jmp    0x428b99
  428fdd:	mov    edx,ebp
  428fdf:	mov    rcx,rsi
  428fe2:	call   0x427e80
  428fe7:	mov    eax,0x1
  428fec:	jmp    0x428b99
  428ff1:	lea    rdx,[rip+0x2d1dd]        # 0x4561d5
  428ff8:	mov    r8d,0x1
  428ffe:	mov    rcx,rsi
  429001:	call   0x427d60
  429006:	add    QWORD PTR [rbx],0x1
  42900a:	jmp    0x428cdf
  42900f:	mov    rdx,rax
  429012:	mov    rcx,rsi
  429015:	mov    QWORD PTR [rsp+0x38],rax
  42901a:	call   0x427e40
  42901f:	mov    rax,QWORD PTR [rsp+0x38]
  429024:	jmp    0x428dcf
  429029:	lea    rdx,[rip+0x2d1bd]        # 0x4561ed
  429030:	mov    r8d,0x1
  429036:	mov    rcx,rsi
  429039:	mov    QWORD PTR [rsp+0x38],rax
  42903e:	call   0x427d60
  429043:	mov    rax,QWORD PTR [rsp+0x38]
  429048:	jmp    0x428dbd
  42904d:	cmp    BYTE PTR [r12],0x0
  429052:	je     0x428dd7
  429058:	mov    rdx,r12
  42905b:	mov    rcx,rsi
  42905e:	call   0x427e40
  429063:	jmp    0x428dd7
  429068:	lea    rdx,[rip+0x2d166]        # 0x4561d5
  42906f:	mov    r8d,0x1
  429075:	mov    rcx,rsi
  429078:	xor    r12d,r12d
  42907b:	call   0x427d60
  429080:	add    QWORD PTR [rbx],0x2
  429084:	jmp    0x428cdf
  429089:	nop    DWORD PTR [rax+0x0]
  429090:	push   r15
  429092:	push   r14
  429094:	push   r13
  429096:	push   r12
  429098:	push   rbp
  429099:	push   rdi
  42909a:	push   rsi
  42909b:	push   rbx
  42909c:	sub    rsp,0x38
  4290a0:	mov    r12,rdx
  4290a3:	mov    r13,r8
  4290a6:	lea    rdx,[rip+0x2d142]        # 0x4561ef
  4290ad:	mov    QWORD PTR [rsp+0x80],rcx
  4290b5:	mov    r8d,0x1
  4290bb:	mov    rcx,r13
  4290be:	mov    DWORD PTR [rsp+0x98],r9d
  4290c6:	call   0x427d60
  4290cb:	mov    rax,QWORD PTR [r12]
  4290cf:	xor    ecx,ecx
  4290d1:	lea    rbp,[rax+0x1]
  4290d5:	mov    eax,0x1
  4290da:	mov    QWORD PTR [r12],rbp
  4290de:	xchg   ax,ax
  4290e0:	movzx  edx,BYTE PTR [rbp+0x0]
  4290e4:	cmp    dl,0x57
  4290e7:	je     0x4291c6
  4290ed:	test   dl,dl
  4290ef:	je     0x4291c6
  4290f5:	test   ecx,ecx
  4290f7:	je     0x429192
  4290fd:	mov    rcx,rbp
  429100:	lea    rsi,[rip+0x2df39]        # 0x457040
  429107:	xor    ebx,ebx
  429109:	call   0x4493c0
  42910e:	mov    rdi,rax
  429111:	jmp    0x429125
  429113:	add    rbx,0x1
  429117:	add    rsi,0x18
  42911b:	cmp    rbx,0x4f
  42911f:	je     0x4291d0
  429125:	mov    r15,QWORD PTR [rsi]
  429128:	mov    rcx,r15
  42912b:	call   0x4493c0
  429130:	cmp    rdi,rax
  429133:	mov    r14,rax
  429136:	jb     0x429113
  429138:	mov    r8,rax
  42913b:	mov    rdx,rbp
  42913e:	mov    rcx,r15
  429141:	call   0x449458
  429146:	test   eax,eax
  429148:	jne    0x429113
  42914a:	lea    rdx,[rip+0x2d0a0]        # 0x4561f1
  429151:	mov    r8d,0x1
  429157:	mov    rcx,r13
  42915a:	call   0x427d60
  42915f:	lea    rax,[rbx+rbx*2]
  429163:	lea    rdx,[rip+0x2ded6]        # 0x457040
  42916a:	mov    rdx,QWORD PTR [rdx+rax*8+0x8]
  42916f:	test   rdx,rdx
  429172:	je     0x429179
  429174:	cmp    BYTE PTR [rdx],0x0
  429177:	jne    0x4291e3
  429179:	lea    rdx,[rip+0x2d071]        # 0x4561f1
  429180:	mov    r8d,0x1
  429186:	mov    rcx,r13
  429189:	call   0x427d60
  42918e:	add    QWORD PTR [r12],r14
  429192:	mov    r9d,DWORD PTR [rsp+0x98]
  42919a:	mov    rcx,QWORD PTR [rsp+0x80]
  4291a2:	mov    r8,r13
  4291a5:	mov    rdx,r12
  4291a8:	call   0x428b40
  4291ad:	test   eax,eax
  4291af:	je     0x4291bf
  4291b1:	mov    rbp,QWORD PTR [r12]
  4291b5:	mov    ecx,0x1
  4291ba:	jmp    0x4290e0
  4291bf:	mov    rdx,QWORD PTR [r12]
  4291c3:	movzx  edx,BYTE PTR [rdx]
  4291c6:	cmp    dl,0x57
  4291c9:	mov    DWORD PTR [rsp+0x2c],eax
  4291cd:	je     0x4291ed
  4291cf:	nop
  4291d0:	xor    eax,eax
  4291d2:	add    rsp,0x38
  4291d6:	pop    rbx
  4291d7:	pop    rsi
  4291d8:	pop    rdi
  4291d9:	pop    rbp
  4291da:	pop    r12
  4291dc:	pop    r13
  4291de:	pop    r14
  4291e0:	pop    r15
  4291e2:	ret    
  4291e3:	mov    rcx,r13
  4291e6:	call   0x427e40
  4291eb:	jmp    0x429179
  4291ed:	lea    rdx,[rip+0x2cfff]        # 0x4561f3
  4291f4:	mov    r8d,0x1
  4291fa:	mov    rcx,r13
  4291fd:	call   0x427d60
  429202:	add    QWORD PTR [r12],0x1
  429207:	mov    eax,DWORD PTR [rsp+0x2c]
  42920b:	jmp    0x4291d2
  42920d:	nop    DWORD PTR [rax]
  429210:	push   r15
  429212:	push   r14
  429214:	push   r13
  429216:	push   r12
  429218:	push   rbp
  429219:	push   rdi
  42921a:	push   rsi
  42921b:	push   rbx
  42921c:	sub    rsp,0x98
  429223:	mov    rax,QWORD PTR [rdx]
  429226:	mov    r13d,DWORD PTR [rsp+0x100]
  42922e:	mov    rbx,rdx
  429231:	mov    rbp,rcx
  429234:	mov    r12,r8
  429237:	mov    r14,r9
  42923a:	lea    rdx,[rax+0x1]
  42923e:	test   r13d,r13d
  429241:	mov    QWORD PTR [rbx],rdx
  429244:	jne    0x4293e2
  42924a:	lea    rdx,[rip+0x2cfad]        # 0x4561fe
  429251:	mov    rcx,r12
  429254:	call   0x427e40
  429259:	lea    rdx,[rsp+0x4c]
  42925e:	mov    rcx,rbx
  429261:	call   0x4277a0
  429266:	test   eax,eax
  429268:	je     0x4294c0
  42926e:	test   r13d,r13d
  429271:	je     0x429780
  429277:	mov    eax,DWORD PTR [rsp+0x4c]
  42927b:	mov    DWORD PTR [rsp+0x3c],0x0
  429283:	test   eax,eax
  429285:	jle    0x42938a
  42928b:	lea    rax,[rsp+0x50]
  429290:	xor    edi,edi
  429292:	xor    esi,esi
  429294:	mov    QWORD PTR [rsp+0x20],rax
  429299:	jmp    0x429352
  42929e:	xchg   ax,ax
  4292a0:	mov    r8,QWORD PTR [rsp+0x20]
  4292a5:	mov    rcx,rbp
  4292a8:	mov    rdx,rbx
  4292ab:	call   0x429e80
  4292b0:	mov    rcx,QWORD PTR [rsp+0x50]
  4292b5:	mov    r15d,eax
  4292b8:	test   rcx,rcx
  4292bb:	je     0x4292dd
  4292bd:	call   0x4494c8
  4292c2:	mov    QWORD PTR [rsp+0x58],0x0
  4292cb:	mov    QWORD PTR [rsp+0x60],0x0
  4292d4:	mov    QWORD PTR [rsp+0x50],0x0
  4292dd:	test   r15d,r15d
  4292e0:	je     0x42938a
  4292e6:	test   r13d,r13d
  4292e9:	mov    r14,r12
  4292ec:	jne    0x429311
  4292ee:	lea    r14,[rsp+0x70]
  4292f3:	mov    QWORD PTR [rsp+0x80],0x0
  4292ff:	mov    QWORD PTR [rsp+0x78],0x0
  429308:	mov    QWORD PTR [rsp+0x70],0x0
  429311:	mov    r9d,r15d
  429314:	mov    r8,r14
  429317:	mov    rdx,rbx
  42931a:	mov    rcx,rbp
  42931d:	call   0x428b40
  429322:	test   eax,eax
  429324:	mov    r15d,eax
  429327:	je     0x4297f0
  42932d:	test   r13d,r13d
  429330:	je     0x4294d0
  429336:	add    esi,0x1
  429339:	add    rdi,0x8
  42933d:	cmp    DWORD PTR [rsp+0x4c],esi
  429341:	jle    0x42938d
  429343:	lea    rdx,[rip+0x2ceb6]        # 0x456200
  42934a:	mov    rcx,r12
  42934d:	call   0x427e40
  429352:	mov    rax,QWORD PTR [rbx]
  429355:	movzx  edx,BYTE PTR [rax]
  429358:	cmp    dl,0x5a
  42935b:	je     0x429570
  429361:	cmp    dl,0x7a
  429364:	jne    0x4292a0
  42936a:	add    rax,0x1
  42936e:	mov    r8,r12
  429371:	mov    rdx,rbx
  429374:	mov    QWORD PTR [rbx],rax
  429377:	mov    rcx,rbp
  42937a:	call   0x42b9b0
  42937f:	test   eax,eax
  429381:	mov    r15d,eax
  429384:	jne    0x4295c5
  42938a:	xor    r15d,r15d
  42938d:	mov    edx,DWORD PTR [rsp+0x3c]
  429391:	test   edx,edx
  429393:	jne    0x4297d2
  429399:	mov    rax,QWORD PTR [r12+0x8]
  42939e:	cmp    BYTE PTR [rax-0x1],0x3e
  4293a2:	je     0x429887
  4293a8:	lea    rdx,[rip+0x2ce57]        # 0x456206
  4293af:	mov    rcx,r12
  4293b2:	call   0x427e40
  4293b7:	test   r13d,r13d
  4293ba:	je     0x4293cb
  4293bc:	mov    eax,DWORD PTR [rsp+0x108]
  4293c3:	test   eax,eax
  4293c5:	jne    0x429710
  4293cb:	mov    eax,r15d
  4293ce:	add    rsp,0x98
  4293d5:	pop    rbx
  4293d6:	pop    rsi
  4293d7:	pop    rdi
  4293d8:	pop    rbp
  4293d9:	pop    r12
  4293db:	pop    r13
  4293dd:	pop    r14
  4293df:	pop    r15
  4293e1:	ret    
  4293e2:	cmp    BYTE PTR [rax+0x1],0x7a
  4293e6:	je     0x429670
  4293ec:	mov    rcx,rbx
  4293ef:	call   0x4276e0
  4293f4:	movsxd r15,eax
  4293f7:	test   r15d,r15d
  4293fa:	mov    DWORD PTR [rsp+0x4c],r15d
  4293ff:	jle    0x4294c0
  429405:	mov    rdx,QWORD PTR [rbx]
  429408:	mov    rcx,rdx
  42940b:	mov    QWORD PTR [rsp+0x20],rdx
  429410:	call   0x4493c0
  429415:	cmp    r15d,eax
  429418:	jg     0x4294c0
  42941e:	test   BYTE PTR [rbp+0x0],0x4
  429422:	mov    rdx,QWORD PTR [rsp+0x20]
  429427:	je     0x429750
  42942d:	lea    rdi,[rip+0x2cdc1]        # 0x4561f5
  429434:	mov    ecx,0x8
  429439:	mov    rsi,rdx
  42943c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42943e:	jne    0x429750
  429444:	test   r14,r14
  429447:	je     0x4298ed
  42944d:	mov    r8d,r15d
  429450:	mov    rcx,r14
  429453:	call   0x427d60
  429458:	movsxd rax,DWORD PTR [rsp+0x4c]
  42945d:	add    QWORD PTR [rbx],rax
  429460:	lea    rdx,[rsp+0x4c]
  429465:	mov    rcx,rbx
  429468:	call   0x4277a0
  42946d:	test   eax,eax
  42946f:	je     0x4294c0
  429471:	mov    eax,DWORD PTR [rsp+0x4c]
  429475:	mov    DWORD PTR [rsp+0x3c],0x1
  42947d:	jmp    0x429283
  429482:	mov    rcx,r14
  429485:	call   0x427d60
  42948a:	movsxd rax,DWORD PTR [rsp+0x4c]
  42948f:	lea    rdx,[rip+0x2cd68]        # 0x4561fe
  429496:	mov    rcx,r12
  429499:	add    QWORD PTR [rbx],rax
  42949c:	call   0x427e40
  4294a1:	lea    rdx,[rsp+0x4c]
  4294a6:	mov    rcx,rbx
  4294a9:	call   0x4277a0
  4294ae:	test   eax,eax
  4294b0:	jne    0x429277
  4294b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4294c0:	xor    eax,eax
  4294c2:	jmp    0x4293ce
  4294c7:	nop    WORD PTR [rax+rax*1+0x0]
  4294d0:	mov    r8,QWORD PTR [r14+0x8]
  4294d4:	sub    r8,QWORD PTR [r14]
  4294d7:	mov    rdx,rdi
  4294da:	add    rdx,QWORD PTR [rbp+0x50]
  4294de:	lea    ecx,[r8+0x1]
  4294e2:	mov    QWORD PTR [rsp+0x28],r8
  4294e7:	mov    QWORD PTR [rsp+0x30],rdx
  4294ec:	movsxd rcx,ecx
  4294ef:	call   0x43baf0
  4294f4:	mov    rdx,QWORD PTR [rsp+0x30]
  4294f9:	mov    r8,QWORD PTR [rsp+0x28]
  4294fe:	mov    QWORD PTR [rdx],rax
  429501:	mov    rax,QWORD PTR [rbp+0x50]
  429505:	movsxd r9,r8d
  429508:	mov    rdx,QWORD PTR [r14]
  42950b:	mov    r8,r9
  42950e:	mov    QWORD PTR [rsp+0x28],r9
  429513:	mov    rcx,QWORD PTR [rax+rdi*1]
  429517:	call   0x449450
  42951c:	mov    rax,QWORD PTR [rbp+0x50]
  429520:	mov    r9,QWORD PTR [rsp+0x28]
  429525:	mov    rcx,r12
  429528:	mov    rdx,r14
  42952b:	mov    rax,QWORD PTR [rax+rdi*1]
  42952f:	mov    BYTE PTR [rax+r9*1],0x0
  429534:	mov    r8,QWORD PTR [r14+0x8]
  429538:	call   0x427f80
  42953d:	mov    rcx,QWORD PTR [r14]
  429540:	test   rcx,rcx
  429543:	je     0x429336
  429549:	call   0x4494c8
  42954e:	mov    QWORD PTR [r14+0x8],0x0
  429556:	mov    QWORD PTR [r14+0x10],0x0
  42955e:	mov    QWORD PTR [r14],0x0
  429565:	jmp    0x429336
  42956a:	nop    WORD PTR [rax+rax*1+0x0]
  429570:	mov    r8,QWORD PTR [rsp+0x20]
  429575:	add    rax,0x1
  429579:	mov    rdx,rbx
  42957c:	mov    QWORD PTR [rbx],rax
  42957f:	mov    rcx,rbp
  429582:	call   0x429e80
  429587:	test   eax,eax
  429589:	mov    r15d,eax
  42958c:	jne    0x429620
  429592:	mov    rcx,QWORD PTR [rsp+0x50]
  429597:	test   rcx,rcx
  42959a:	je     0x42938a
  4295a0:	call   0x4494c8
  4295a5:	mov    QWORD PTR [rsp+0x58],0x0
  4295ae:	mov    QWORD PTR [rsp+0x60],0x0
  4295b7:	mov    QWORD PTR [rsp+0x50],0x0
  4295c0:	jmp    0x42938a
  4295c5:	mov    rcx,rbx
  4295c8:	call   0x4276e0
  4295cd:	movsxd r14,eax
  4295d0:	test   r14d,r14d
  4295d3:	jle    0x429336
  4295d9:	mov    rcx,QWORD PTR [rbx]
  4295dc:	call   0x4493c0
  4295e1:	cmp    r14d,eax
  4295e4:	jg     0x429336
  4295ea:	lea    rdx,[rip+0x2cc00]        # 0x4561f1
  4295f1:	mov    rcx,r12
  4295f4:	call   0x427e40
  4295f9:	mov    rdx,QWORD PTR [rbx]
  4295fc:	mov    r8d,r14d
  4295ff:	mov    rcx,r12
  429602:	call   0x427d60
  429607:	test   r13d,r13d
  42960a:	je     0x42989b
  429610:	add    QWORD PTR [rbx],r14
  429613:	jmp    0x429336
  429618:	nop    DWORD PTR [rax+rax*1+0x0]
  429620:	mov    r8,QWORD PTR [rsp+0x58]
  429625:	mov    rdx,QWORD PTR [rsp+0x20]
  42962a:	mov    rcx,r12
  42962d:	call   0x427f80
  429632:	test   r13d,r13d
  429635:	je     0x429830
  42963b:	mov    rcx,QWORD PTR [rsp+0x50]
  429640:	test   rcx,rcx
  429643:	je     0x429336
  429649:	call   0x4494c8
  42964e:	mov    QWORD PTR [rsp+0x58],0x0
  429657:	mov    QWORD PTR [rsp+0x60],0x0
  429660:	mov    QWORD PTR [rsp+0x50],0x0
  429669:	jmp    0x429336
  42966e:	xchg   ax,ax
  429670:	add    rax,0x3
  429674:	mov    rcx,rbx
  429677:	mov    QWORD PTR [rbx],rax
  42967a:	call   0x427730
  42967f:	movsxd rsi,eax
  429682:	cmp    esi,0xffffffff
  429685:	je     0x4294c0
  42968b:	cmp    QWORD PTR [rbp+0x50],0x0
  429690:	je     0x42969b
  429692:	cmp    esi,DWORD PTR [rbp+0x58]
  429695:	jge    0x4294c0
  42969b:	mov    rcx,rbx
  42969e:	call   0x427730
  4296a3:	cmp    eax,0xffffffff
  4296a6:	je     0x4294c0
  4296ac:	mov    rax,QWORD PTR [rbp+0x50]
  4296b0:	test   rax,rax
  4296b3:	je     0x4298f8
  4296b9:	mov    rdx,QWORD PTR [rax+rsi*8]
  4296bd:	test   rdx,rdx
  4296c0:	je     0x42924a
  4296c6:	cmp    BYTE PTR [rdx],0x0
  4296c9:	je     0x42924a
  4296cf:	mov    rcx,r12
  4296d2:	call   0x427e40
  4296d7:	test   r14,r14
  4296da:	je     0x42924a
  4296e0:	mov    rax,QWORD PTR [rbp+0x50]
  4296e4:	mov    rdx,QWORD PTR [rax+rsi*8]
  4296e8:	test   rdx,rdx
  4296eb:	je     0x42924a
  4296f1:	cmp    BYTE PTR [rdx],0x0
  4296f4:	je     0x42924a
  4296fa:	mov    rcx,r14
  4296fd:	call   0x427e40
  429702:	jmp    0x42924a
  429707:	nop    WORD PTR [rax+rax*1+0x0]
  429710:	mov    rcx,rbp
  429713:	call   0x427910
  429718:	mov    r8,QWORD PTR [r12+0x8]
  42971d:	mov    rdx,QWORD PTR [r12]
  429721:	mov    r9d,eax
  429724:	mov    ecx,r8d
  429727:	sub    ecx,edx
  429729:	cmp    rdx,r8
  42972c:	mov    r8d,0x0
  429732:	cmovne r8d,ecx
  429736:	lea    rcx,[rbp+0x18]
  42973a:	call   0x427c70
  42973f:	mov    eax,r15d
  429742:	jmp    0x4293ce
  429747:	nop    WORD PTR [rax+rax*1+0x0]
  429750:	mov    r8d,r15d
  429753:	mov    rcx,r12
  429756:	call   0x427d60
  42975b:	test   r14,r14
  42975e:	je     0x42948a
  429764:	mov    r8d,DWORD PTR [rsp+0x4c]
  429769:	mov    rdx,QWORD PTR [rbx]
  42976c:	test   r8d,r8d
  42976f:	jne    0x429482
  429775:	mov    QWORD PTR [rbx],rdx
  429778:	jmp    0x42924a
  42977d:	nop    DWORD PTR [rax]
  429780:	movsxd rcx,DWORD PTR [rsp+0x4c]
  429785:	shl    rcx,0x3
  429789:	call   0x43baf0
  42978e:	mov    edx,DWORD PTR [rsp+0x4c]
  429792:	mov    QWORD PTR [rbp+0x50],rax
  429796:	test   edx,edx
  429798:	mov    DWORD PTR [rbp+0x58],edx
  42979b:	jle    0x4298e0
  4297a1:	lea    ecx,[rdx-0x1]
  4297a4:	xor    edx,edx
  4297a6:	shl    rcx,0x3
  4297aa:	jmp    0x4297b8
  4297ac:	nop    DWORD PTR [rax+0x0]
  4297b0:	mov    rax,QWORD PTR [rbp+0x50]
  4297b4:	add    rdx,0x8
  4297b8:	cmp    rdx,rcx
  4297bb:	mov    QWORD PTR [rax+rdx*1],0x0
  4297c3:	jne    0x4297b0
  4297c5:	mov    DWORD PTR [rsp+0x3c],0x0
  4297cd:	jmp    0x42928b
  4297d2:	lea    rdx,[rip+0x2ca2a]        # 0x456203
  4297d9:	mov    rcx,r12
  4297dc:	call   0x427e40
  4297e1:	jmp    0x4293b7
  4297e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4297f0:	test   r13d,r13d
  4297f3:	jne    0x42938a
  4297f9:	mov    rcx,QWORD PTR [r14]
  4297fc:	test   rcx,rcx
  4297ff:	je     0x42938a
  429805:	call   0x4494c8
  42980a:	mov    QWORD PTR [r14+0x8],0x0
  429812:	mov    QWORD PTR [r14+0x10],0x0
  42981a:	mov    QWORD PTR [r14],0x0
  429821:	jmp    0x42938a
  429826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429830:	mov    r9,QWORD PTR [rsp+0x58]
  429835:	sub    r9,QWORD PTR [rsp+0x50]
  42983a:	mov    rdx,rdi
  42983d:	add    rdx,QWORD PTR [rbp+0x50]
  429841:	lea    ecx,[r9+0x1]
  429845:	mov    r14,r9
  429848:	mov    QWORD PTR [rsp+0x28],rdx
  42984d:	movsxd r14,r14d
  429850:	movsxd rcx,ecx
  429853:	call   0x43baf0
  429858:	mov    rdx,QWORD PTR [rsp+0x28]
  42985d:	mov    r8,r14
  429860:	mov    QWORD PTR [rdx],rax
  429863:	mov    rax,QWORD PTR [rbp+0x50]
  429867:	mov    rdx,QWORD PTR [rsp+0x50]
  42986c:	mov    rcx,QWORD PTR [rax+rdi*1]
  429870:	call   0x449450
  429875:	mov    rax,QWORD PTR [rbp+0x50]
  429879:	mov    rax,QWORD PTR [rax+rdi*1]
  42987d:	mov    BYTE PTR [rax+r14*1],0x0
  429882:	jmp    0x42963b
  429887:	lea    rdx,[rip+0x2c963]        # 0x4561f1
  42988e:	mov    rcx,r12
  429891:	call   0x427e40
  429896:	jmp    0x4293a8
  42989b:	mov    rdx,rdi
  42989e:	add    rdx,QWORD PTR [rbp+0x50]
  4298a2:	lea    ecx,[r14+0x1]
  4298a6:	movsxd rcx,ecx
  4298a9:	mov    QWORD PTR [rsp+0x28],rdx
  4298ae:	call   0x43baf0
  4298b3:	mov    rdx,QWORD PTR [rsp+0x28]
  4298b8:	mov    r8,r14
  4298bb:	mov    QWORD PTR [rdx],rax
  4298be:	mov    rax,QWORD PTR [rbp+0x50]
  4298c2:	mov    rdx,QWORD PTR [rbx]
  4298c5:	mov    rcx,QWORD PTR [rax+rdi*1]
  4298c9:	call   0x449450
  4298ce:	mov    rax,QWORD PTR [rbp+0x50]
  4298d2:	mov    rax,QWORD PTR [rax+rdi*1]
  4298d6:	mov    BYTE PTR [rax+r14*1],0x0
  4298db:	jmp    0x429610
  4298e0:	mov    DWORD PTR [rsp+0x3c],0x0
  4298e8:	jmp    0x42938a
  4298ed:	add    rdx,r15
  4298f0:	mov    QWORD PTR [rbx],rdx
  4298f3:	jmp    0x429460
  4298f8:	mov    edx,esi
  4298fa:	mov    rcx,r12
  4298fd:	call   0x427e80
  429902:	test   r14,r14
  429905:	je     0x42924a
  42990b:	mov    edx,esi
  42990d:	mov    rcx,r14
  429910:	call   0x427e80
  429915:	jmp    0x42924a
  42991a:	nop    WORD PTR [rax+rax*1+0x0]
  429920:	push   r15
  429922:	push   r14
  429924:	push   r13
  429926:	push   r12
  429928:	push   rbp
  429929:	push   rdi
  42992a:	push   rsi
  42992b:	push   rbx
  42992c:	sub    rsp,0xa8
  429933:	mov    rsi,rcx
  429936:	mov    rdi,rdx
  429939:	mov    QWORD PTR [rsp+0x100],r8
  429941:	mov    DWORD PTR [rsp+0x108],r9d
  429949:	call   0x427910
  42994e:	mov    ecx,DWORD PTR [rsp+0x108]
  429955:	mov    DWORD PTR [rsp+0x4c],eax
  429959:	test   ecx,ecx
  42995b:	je     0x429978
  42995d:	movabs rax,0x100000001
  429967:	test   QWORD PTR [rsi+0x38],rax
  42996b:	setne  al
  42996e:	movzx  eax,al
  429971:	mov    DWORD PTR [rsp+0x108],eax
  429978:	mov    rax,QWORD PTR [rdi]
  42997b:	mov    QWORD PTR [rsp+0x70],0x0
  429984:	mov    QWORD PTR [rsp+0x68],0x0
  42998d:	mov    QWORD PTR [rsp+0x60],0x0
  429996:	mov    QWORD PTR [rsp+0x90],0x0
  4299a2:	mov    QWORD PTR [rsp+0x88],0x0
  4299ae:	mov    QWORD PTR [rsp+0x80],0x0
  4299ba:	cmp    BYTE PTR [rax],0x4b
  4299bd:	je     0x429dec
  4299c3:	movzx  edx,BYTE PTR [rax+0x1]
  4299c7:	cmp    dl,0x31
  4299ca:	jl     0x429dc0
  4299d0:	cmp    dl,0x39
  4299d3:	jle    0x429b12
  4299d9:	cmp    dl,0x5f
  4299dc:	jne    0x429dc0
  4299e2:	add    rax,0x1
  4299e6:	mov    rcx,rdi
  4299e9:	mov    QWORD PTR [rdi],rax
  4299ec:	call   0x427730
  4299f1:	cmp    eax,0xffffffff
  4299f4:	mov    ebx,eax
  4299f6:	je     0x429dc0
  4299fc:	lea    rax,[rsp+0x60]
  429a01:	lea    r12,[rsp+0x80]
  429a09:	mov    r13d,0x1
  429a0f:	mov    QWORD PTR [rsp+0x38],rax
  429a14:	sub    ebx,0x1
  429a17:	lea    eax,[rbx+0x1]
  429a1a:	test   eax,eax
  429a1c:	jle    0x429b87
  429a22:	mov    rcx,QWORD PTR [rsp+0x80]
  429a2a:	mov    rdx,QWORD PTR [rdi]
  429a2d:	mov    QWORD PTR [rsp+0x88],rcx
  429a35:	movzx  eax,BYTE PTR [rdx]
  429a38:	cmp    al,0x5f
  429a3a:	je     0x429b40
  429a40:	cmp    al,0x74
  429a42:	je     0x429b56
  429a48:	cmp    al,0x4b
  429a4a:	je     0x429d42
  429a50:	test   DWORD PTR [rsi],0x2000
  429a56:	jne    0x429cb5
  429a5c:	test   rcx,rcx
  429a5f:	je     0x429a8a
  429a61:	call   0x4494c8
  429a66:	mov    QWORD PTR [rsp+0x88],0x0
  429a72:	mov    QWORD PTR [rsp+0x90],0x0
  429a7e:	mov    QWORD PTR [rsp+0x80],0x0
  429a8a:	mov    r8,r12
  429a8d:	mov    rdx,rdi
  429a90:	mov    rcx,rsi
  429a93:	call   0x429e80
  429a98:	test   eax,eax
  429a9a:	mov    r13d,eax
  429a9d:	je     0x429b84
  429aa3:	mov    r8,QWORD PTR [rsp+0x88]
  429aab:	mov    rcx,QWORD PTR [rsp+0x38]
  429ab0:	mov    rdx,r12
  429ab3:	call   0x427f80
  429ab8:	mov    rcx,QWORD PTR [rsp+0x68]
  429abd:	mov    rdx,QWORD PTR [rsp+0x60]
  429ac2:	mov    r8d,0x0
  429ac8:	mov    rax,rcx
  429acb:	sub    rax,rdx
  429ace:	cmp    rdx,rcx
  429ad1:	mov    rcx,rsi
  429ad4:	cmovne r8d,eax
  429ad8:	call   0x4279a0
  429add:	test   ebx,ebx
  429adf:	jle    0x429a14
  429ae5:	test   BYTE PTR [rsi],0x4
  429ae8:	lea    rdx,[rip+0x2c719]        # 0x456208
  429aef:	lea    rax,[rip+0x2c6f1]        # 0x4561e7
  429af6:	cmovne rdx,rax
  429afa:	cmp    BYTE PTR [rdx],0x0
  429afd:	je     0x429a14
  429b03:	mov    rcx,QWORD PTR [rsp+0x38]
  429b08:	call   0x427e40
  429b0d:	jmp    0x429a14
  429b12:	lea    rcx,[rsp+0x50]
  429b17:	mov    BYTE PTR [rsp+0x50],dl
  429b1b:	mov    BYTE PTR [rsp+0x51],0x0
  429b20:	call   0x449538
  429b25:	mov    ebx,eax
  429b27:	mov    rax,QWORD PTR [rdi]
  429b2a:	xor    edx,edx
  429b2c:	cmp    BYTE PTR [rax+0x2],0x5f
  429b30:	sete   dl
  429b33:	lea    rax,[rax+rdx*1+0x2]
  429b38:	mov    QWORD PTR [rdi],rax
  429b3b:	jmp    0x4299fc
  429b40:	lea    r8,[rdx+0x1]
  429b44:	mov    QWORD PTR [rdi],r8
  429b47:	movzx  eax,BYTE PTR [rdx+0x1]
  429b4b:	mov    rdx,r8
  429b4e:	cmp    al,0x74
  429b50:	jne    0x429a48
  429b56:	mov    r8,QWORD PTR [rsp+0x38]
  429b5b:	mov    DWORD PTR [rsp+0x28],0x0
  429b63:	mov    r9,r12
  429b66:	mov    DWORD PTR [rsp+0x20],0x1
  429b6e:	mov    rdx,rdi
  429b71:	mov    rcx,rsi
  429b74:	call   0x429210
  429b79:	test   eax,eax
  429b7b:	mov    r13d,eax
  429b7e:	jne    0x429ab8
  429b84:	xor    r13d,r13d
  429b87:	mov    rcx,QWORD PTR [rsp+0x68]
  429b8c:	mov    rdx,QWORD PTR [rsp+0x60]
  429b91:	mov    r8d,0x0
  429b97:	mov    r9d,DWORD PTR [rsp+0x4c]
  429b9c:	mov    eax,ecx
  429b9e:	sub    eax,edx
  429ba0:	cmp    rdx,rcx
  429ba3:	lea    rcx,[rsi+0x18]
  429ba7:	cmovne r8d,eax
  429bab:	call   0x427c70
  429bb0:	mov    edx,DWORD PTR [rsp+0x108]
  429bb7:	test   edx,edx
  429bb9:	je     0x429c00
  429bbb:	test   BYTE PTR [rsi],0x4
  429bbe:	lea    rdx,[rip+0x2c643]        # 0x456208
  429bc5:	lea    rax,[rip+0x2c61b]        # 0x4561e7
  429bcc:	lea    rbp,[rsp+0x60]
  429bd1:	cmovne rdx,rax
  429bd5:	cmp    BYTE PTR [rdx],0x0
  429bd8:	jne    0x429e6a
  429bde:	test   BYTE PTR [rsi+0x3c],0x1
  429be2:	jne    0x429e56
  429be8:	mov    r8,QWORD PTR [rsp+0x88]
  429bf0:	lea    rdx,[rsp+0x80]
  429bf8:	mov    rcx,rbp
  429bfb:	call   0x427f80
  429c00:	mov    eax,DWORD PTR [rsp+0x110]
  429c07:	test   eax,eax
  429c09:	jne    0x429dd0
  429c0f:	mov    rax,QWORD PTR [rsp+0x100]
  429c17:	mov    rbx,QWORD PTR [rax+0x8]
  429c1b:	cmp    QWORD PTR [rax],rbx
  429c1e:	je     0x429c3e
  429c20:	test   BYTE PTR [rsi],0x4
  429c23:	lea    rdx,[rip+0x2c5de]        # 0x456208
  429c2a:	lea    rax,[rip+0x2c5b6]        # 0x4561e7
  429c31:	cmovne rdx,rax
  429c35:	cmp    BYTE PTR [rdx],0x0
  429c38:	jne    0x429e47
  429c3e:	mov    rdx,QWORD PTR [rsp+0x60]
  429c43:	mov    r8,QWORD PTR [rsp+0x68]
  429c48:	cmp    rdx,r8
  429c4b:	je     0x429c59
  429c4d:	sub    r8,rdx
  429c50:	test   r8d,r8d
  429c53:	jne    0x429e35
  429c59:	mov    rcx,QWORD PTR [rsp+0x80]
  429c61:	test   rcx,rcx
  429c64:	je     0x429c8f
  429c66:	call   0x4494c8
  429c6b:	mov    QWORD PTR [rsp+0x88],0x0
  429c77:	mov    QWORD PTR [rsp+0x90],0x0
  429c83:	mov    QWORD PTR [rsp+0x80],0x0
  429c8f:	mov    rcx,QWORD PTR [rsp+0x60]
  429c94:	test   rcx,rcx
  429c97:	je     0x429c9e
  429c99:	call   0x4494c8
  429c9e:	mov    eax,r13d
  429ca1:	add    rsp,0xa8
  429ca8:	pop    rbx
  429ca9:	pop    rsi
  429caa:	pop    rdi
  429cab:	pop    rbp
  429cac:	pop    r12
  429cae:	pop    r13
  429cb0:	pop    r14
  429cb2:	pop    r15
  429cb4:	ret    
  429cb5:	mov    rcx,rdi
  429cb8:	call   0x4276e0
  429cbd:	cmp    eax,0xffffffff
  429cc0:	mov    r14d,eax
  429cc3:	je     0x429b84
  429cc9:	lea    ecx,[rax+0x1]
  429ccc:	movsxd r15,r14d
  429ccf:	movsxd rcx,ecx
  429cd2:	call   0x43baf0
  429cd7:	mov    rdx,QWORD PTR [rdi]
  429cda:	mov    r8,r15
  429cdd:	mov    rcx,rax
  429ce0:	mov    rbp,rax
  429ce3:	call   0x449450
  429ce8:	mov    edx,DWORD PTR [rsi]
  429cea:	mov    BYTE PTR [rbp+r15*1+0x0],0x0
  429cf0:	mov    rcx,rbp
  429cf3:	call   0x428a40
  429cf8:	test   rax,rax
  429cfb:	je     0x429d90
  429d01:	cmp    BYTE PTR [rax],0x0
  429d04:	je     0x429d1d
  429d06:	mov    rcx,QWORD PTR [rsp+0x38]
  429d0b:	mov    rdx,rax
  429d0e:	mov    QWORD PTR [rsp+0x40],rax
  429d13:	call   0x427e40
  429d18:	mov    rax,QWORD PTR [rsp+0x40]
  429d1d:	mov    rcx,rax
  429d20:	call   0x4494c8
  429d25:	mov    rax,QWORD PTR [rdi]
  429d28:	mov    QWORD PTR [rsp+0x40],rax
  429d2d:	mov    rcx,rbp
  429d30:	call   0x4494c8
  429d35:	add    r15,QWORD PTR [rsp+0x40]
  429d3a:	mov    QWORD PTR [rdi],r15
  429d3d:	jmp    0x429ab8
  429d42:	add    rdx,0x1
  429d46:	mov    rcx,rdi
  429d49:	mov    QWORD PTR [rdi],rdx
  429d4c:	call   0x427730
  429d51:	cmp    eax,0xffffffff
  429d54:	je     0x429b84
  429d5a:	cmp    eax,DWORD PTR [rsi+0x20]
  429d5d:	jge    0x429b84
  429d63:	mov    rdx,QWORD PTR [rsi+0x10]
  429d67:	cdqe   
  429d69:	mov    rdx,QWORD PTR [rdx+rax*8]
  429d6d:	test   rdx,rdx
  429d70:	je     0x429add
  429d76:	cmp    BYTE PTR [rdx],0x0
  429d79:	je     0x429add
  429d7f:	mov    rcx,QWORD PTR [rsp+0x38]
  429d84:	call   0x427e40
  429d89:	jmp    0x429add
  429d8e:	xchg   ax,ax
  429d90:	mov    rax,QWORD PTR [rdi]
  429d93:	test   r14d,r14d
  429d96:	mov    QWORD PTR [rsp+0x40],rax
  429d9b:	je     0x429d2d
  429d9d:	mov    rcx,QWORD PTR [rsp+0x38]
  429da2:	mov    rdx,rax
  429da5:	mov    r8d,r14d
  429da8:	call   0x427d60
  429dad:	mov    rax,QWORD PTR [rdi]
  429db0:	mov    QWORD PTR [rsp+0x40],rax
  429db5:	jmp    0x429d2d
  429dba:	nop    WORD PTR [rax+rax*1+0x0]
  429dc0:	xor    r13d,r13d
  429dc3:	jmp    0x429c9e
  429dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  429dd0:	mov    r8,QWORD PTR [rsp+0x68]
  429dd5:	mov    rcx,QWORD PTR [rsp+0x100]
  429ddd:	lea    rdx,[rsp+0x60]
  429de2:	call   0x427f80
  429de7:	jmp    0x429c59
  429dec:	add    rax,0x1
  429df0:	mov    rcx,rdi
  429df3:	mov    QWORD PTR [rdi],rax
  429df6:	call   0x427730
  429dfb:	cmp    eax,0xffffffff
  429dfe:	je     0x429dc0
  429e00:	cmp    eax,DWORD PTR [rsi+0x20]
  429e03:	jge    0x429dc0
  429e05:	mov    rdx,QWORD PTR [rsi+0x10]
  429e09:	cdqe   
  429e0b:	xor    ebx,ebx
  429e0d:	mov    rdx,QWORD PTR [rdx+rax*8]
  429e11:	test   rdx,rdx
  429e14:	je     0x4299fc
  429e1a:	cmp    BYTE PTR [rdx],0x0
  429e1d:	je     0x4299fc
  429e23:	lea    rbp,[rsp+0x60]
  429e28:	mov    rcx,rbp
  429e2b:	call   0x427e40
  429e30:	jmp    0x4299fc
  429e35:	mov    rcx,QWORD PTR [rsp+0x100]
  429e3d:	call   0x427da0
  429e42:	jmp    0x429c59
  429e47:	lea    rcx,[rsp+0x60]
  429e4c:	call   0x427e40
  429e51:	jmp    0x429c3e
  429e56:	lea    rdx,[rip+0x2c3ae]        # 0x45620b
  429e5d:	mov    rcx,rbp
  429e60:	call   0x427e40
  429e65:	jmp    0x429be8
  429e6a:	mov    rcx,rbp
  429e6d:	call   0x427e40
  429e72:	jmp    0x429bde
  429e77:	nop    WORD PTR [rax+rax*1+0x0]
  429e80:	push   r15
  429e82:	push   r14
  429e84:	push   r13
  429e86:	push   r12
  429e88:	push   rbp
  429e89:	push   rdi
  429e8a:	push   rsi
  429e8b:	push   rbx
  429e8c:	sub    rsp,0xc8
  429e93:	mov    rax,QWORD PTR [rip+0x30f96]        # 0x45ae30
  429e9a:	xor    ebp,ebp
  429e9c:	mov    esi,0x1
  429ea1:	mov    r14,rdx
  429ea4:	mov    QWORD PTR [r8],0x0
  429eab:	mov    r13,r8
  429eae:	mov    QWORD PTR [r8+0x10],0x0
  429eb6:	mov    QWORD PTR [r8+0x8],0x0
  429ebe:	mov    r12,rcx
  429ec1:	mov    r8,QWORD PTR [r14]
  429ec4:	mov    QWORD PTR [rsp+0x80],0x0
  429ed0:	lea    rbx,[rip+0x2c3ad]        # 0x456284
  429ed7:	mov    QWORD PTR [rsp+0x78],0x0
  429ee0:	mov    QWORD PTR [rsp+0x70],0x0
  429ee9:	lea    rdi,[rsp+0x70]
  429eee:	mov    QWORD PTR [rsp+0x38],rax
  429ef3:	lea    rax,[rsp+0x90]
  429efb:	movzx  r15d,BYTE PTR [r8]
  429eff:	mov    QWORD PTR [rsp+0x58],rax
  429f04:	lea    rax,[rsp+0x60]
  429f09:	mov    QWORD PTR [rsp+0x40],rax
  429f0e:	lea    eax,[r15-0x41]
  429f12:	cmp    al,0x34
  429f14:	ja     0x429fae
  429f1a:	nop    WORD PTR [rax+rax*1+0x0]
  429f20:	movzx  eax,al
  429f23:	movsxd rax,DWORD PTR [rbx+rax*4]
  429f27:	add    rax,rbx
  429f2a:	jmp    rax
  429f2c:	nop    DWORD PTR [rax+0x0]
  429f30:	test   BYTE PTR [r12],0x2
  429f35:	je     0x429f90
  429f37:	mov    rax,QWORD PTR [rsp+0x78]
  429f3c:	cmp    QWORD PTR [rsp+0x70],rax
  429f41:	mov    r10d,r15d
  429f44:	je     0x429f5c
  429f46:	lea    rdx,[rip+0x2c2a4]        # 0x4561f1
  429f4d:	mov    rcx,rdi
  429f50:	call   0x427e00
  429f55:	mov    r8,QWORD PTR [r14]
  429f58:	movzx  r10d,BYTE PTR [r8]
  429f5c:	movsx  ecx,r10b
  429f60:	mov    QWORD PTR [rsp+0x48],r8
  429f65:	call   0x427a50
  429f6a:	mov    ecx,eax
  429f6c:	call   0x427aa0
  429f71:	test   rax,rax
  429f74:	mov    r8,QWORD PTR [rsp+0x48]
  429f79:	je     0x429f90
  429f7b:	cmp    BYTE PTR [rax],0x0
  429f7e:	je     0x429f90
  429f80:	mov    rdx,rax
  429f83:	mov    rcx,rdi
  429f86:	call   0x427e00
  429f8b:	mov    r8,QWORD PTR [r14]
  429f8e:	xchg   ax,ax
  429f90:	add    r8,0x1
  429f94:	mov    QWORD PTR [r14],r8
  429f97:	test   esi,esi
  429f99:	je     0x42a010
  429f9b:	mov    r8,QWORD PTR [r14]
  429f9e:	movzx  r15d,BYTE PTR [r8]
  429fa2:	lea    eax,[r15-0x41]
  429fa6:	cmp    al,0x34
  429fa8:	jbe    0x429f20
  429fae:	mov    rbx,QWORD PTR [r14]
  429fb1:	movzx  eax,BYTE PTR [rbx]
  429fb4:	sub    eax,0x42
  429fb7:	cmp    al,0x17
  429fb9:	ja     0x42a633
  429fbf:	lea    rdx,[rip+0x2c392]        # 0x456358
  429fc6:	movzx  eax,al
  429fc9:	movsxd rax,DWORD PTR [rdx+rax*4]
  429fcd:	add    rdx,rax
  429fd0:	jmp    rdx
  429fd2:	add    r8,0x1
  429fd6:	mov    rax,QWORD PTR [rsp+0x70]
  429fdb:	cmp    rax,QWORD PTR [rsp+0x78]
  429fe0:	mov    QWORD PTR [r14],r8
  429fe3:	je     0x429ff3
  429fe5:	movzx  eax,BYTE PTR [rax]
  429fe8:	sub    eax,0x26
  429feb:	test   al,0xfb
  429fed:	je     0x42a400
  429ff3:	mov    r8,rdi
  429ff6:	mov    rdx,r14
  429ff9:	mov    rcx,r12
  429ffc:	call   0x42bfc0
  42a001:	test   eax,eax
  42a003:	jne    0x42a320
  42a009:	nop    DWORD PTR [rax+0x0]
  42a010:	mov    rcx,QWORD PTR [r13+0x0]
  42a014:	test   rcx,rcx
  42a017:	je     0x42a036
  42a019:	call   0x4494c8
  42a01e:	mov    QWORD PTR [r13+0x8],0x0
  42a026:	mov    QWORD PTR [r13+0x10],0x0
  42a02e:	mov    QWORD PTR [r13+0x0],0x0
  42a036:	mov    rcx,QWORD PTR [rsp+0x70]
  42a03b:	xor    esi,esi
  42a03d:	test   rcx,rcx
  42a040:	je     0x42a2e0
  42a046:	call   0x4494c8
  42a04b:	test   esi,esi
  42a04d:	je     0x42a2e0
  42a053:	test   ebp,ebp
  42a055:	mov    eax,0x3
  42a05a:	cmovne eax,ebp
  42a05d:	add    rsp,0xc8
  42a064:	pop    rbx
  42a065:	pop    rsi
  42a066:	pop    rdi
  42a067:	pop    rbp
  42a068:	pop    r12
  42a06a:	pop    r13
  42a06c:	pop    r14
  42a06e:	pop    r15
  42a070:	ret    
  42a071:	mov    rdx,QWORD PTR [rsp+0x40]
  42a076:	add    r8,0x1
  42a07a:	mov    rcx,r14
  42a07d:	mov    QWORD PTR [r14],r8
  42a080:	call   0x4277a0
  42a085:	test   eax,eax
  42a087:	je     0x42a010
  42a089:	movsxd rax,DWORD PTR [rsp+0x60]
  42a08e:	cmp    DWORD PTR [r12+0x30],eax
  42a093:	jle    0x42a010
  42a099:	mov    rdx,QWORD PTR [r12+0x8]
  42a09e:	lea    r14,[rsp+0x68]
  42a0a3:	mov    rax,QWORD PTR [rdx+rax*8]
  42a0a7:	mov    QWORD PTR [rsp+0x68],rax
  42a0ac:	jmp    0x429f97
  42a0b1:	add    r8,0x1
  42a0b5:	mov    rax,QWORD PTR [rsp+0x70]
  42a0ba:	cmp    rax,QWORD PTR [rsp+0x78]
  42a0bf:	mov    QWORD PTR [r14],r8
  42a0c2:	je     0x42a0d2
  42a0c4:	movzx  eax,BYTE PTR [rax]
  42a0c7:	sub    eax,0x26
  42a0ca:	test   al,0xfb
  42a0cc:	je     0x42a3d4
  42a0d2:	lea    rdx,[rip+0x2c136]        # 0x45620f
  42a0d9:	mov    rcx,rdi
  42a0dc:	call   0x427e40
  42a0e1:	mov    rax,QWORD PTR [r14]
  42a0e4:	cmp    BYTE PTR [rax],0x5f
  42a0e7:	jne    0x42a2f0
  42a0ed:	add    rax,0x1
  42a0f1:	mov    QWORD PTR [r14],rax
  42a0f4:	lea    rdx,[rip+0x2c116]        # 0x456211
  42a0fb:	mov    rcx,rdi
  42a0fe:	call   0x427e40
  42a103:	jmp    0x429f97
  42a108:	nop    DWORD PTR [rax+rax*1+0x0]
  42a110:	add    r8,0x1
  42a114:	test   BYTE PTR [r12],0x4
  42a119:	mov    QWORD PTR [r14],r8
  42a11c:	je     0x42a3c0
  42a122:	test   ebp,ebp
  42a124:	mov    eax,0x1
  42a129:	cmove  ebp,eax
  42a12c:	jmp    0x429f97
  42a131:	add    r8,0x1
  42a135:	lea    rdx,[rip+0x2c0b1]        # 0x4561ed
  42a13c:	mov    rcx,rdi
  42a13f:	mov    QWORD PTR [r14],r8
  42a142:	call   0x427e00
  42a147:	test   ebp,ebp
  42a149:	mov    eax,0x2
  42a14e:	cmove  ebp,eax
  42a151:	jmp    0x429f97
  42a156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a160:	add    r8,0x1
  42a164:	lea    rdx,[rip+0x2c088]        # 0x4561f3
  42a16b:	mov    rcx,rdi
  42a16e:	mov    QWORD PTR [r14],r8
  42a171:	call   0x427e40
  42a176:	mov    rax,QWORD PTR [r14]
  42a179:	movzx  eax,BYTE PTR [rax]
  42a17c:	cmp    al,0x51
  42a17e:	je     0x42a350
  42a184:	test   BYTE PTR [r12],0x4
  42a189:	lea    rcx,[rip+0x2c078]        # 0x456208
  42a190:	lea    rdx,[rip+0x2c050]        # 0x4561e7
  42a197:	cmove  rdx,rcx
  42a19b:	cmp    BYTE PTR [rdx],0x0
  42a19e:	jne    0x42a423
  42a1a4:	mov    rcx,QWORD PTR [rsp+0x38]
  42a1a9:	movzx  edx,al
  42a1ac:	test   BYTE PTR [rcx+rdx*2],0x4
  42a1b0:	jne    0x42a364
  42a1b6:	lea    edx,[rax-0x58]
  42a1b9:	cmp    dl,0x1
  42a1bc:	jbe    0x42a464
  42a1c2:	cmp    al,0x74
  42a1c4:	je     0x42a4a8
  42a1ca:	cmp    al,0x51
  42a1cc:	jne    0x42a010
  42a1d2:	xor    r9d,r9d
  42a1d5:	mov    DWORD PTR [rsp+0x20],0x0
  42a1dd:	mov    r8,rdi
  42a1e0:	mov    rdx,r14
  42a1e3:	mov    rcx,r12
  42a1e6:	call   0x429920
  42a1eb:	test   eax,eax
  42a1ed:	mov    esi,eax
  42a1ef:	je     0x42a010
  42a1f5:	lea    rdx,[rip+0x2bff3]        # 0x4561ef
  42a1fc:	mov    rcx,rdi
  42a1ff:	call   0x427e00
  42a204:	cmp    r15b,0x4d
  42a208:	jne    0x42a440
  42a20e:	mov    r15,QWORD PTR [r14]
  42a211:	xor    r9d,r9d
  42a214:	movsx  ecx,BYTE PTR [r15]
  42a218:	lea    eax,[rcx-0x43]
  42a21b:	cmp    al,0x32
  42a21d:	ja     0x42a233
  42a21f:	movabs r8,0x4000000080001
  42a229:	bt     r8,rax
  42a22d:	jb     0x42a7c1
  42a233:	lea    rax,[r15+0x1]
  42a237:	mov    QWORD PTR [r14],rax
  42a23a:	cmp    BYTE PTR [r15],0x46
  42a23e:	jne    0x42a010
  42a244:	mov    r8,rdi
  42a247:	mov    rdx,r14
  42a24a:	mov    rcx,r12
  42a24d:	mov    DWORD PTR [rsp+0x48],r9d
  42a252:	call   0x42bfc0
  42a257:	test   eax,eax
  42a259:	mov    r9d,DWORD PTR [rsp+0x48]
  42a25e:	je     0x42a010
  42a264:	mov    rax,QWORD PTR [r14]
  42a267:	cmp    BYTE PTR [rax],0x5f
  42a26a:	jne    0x42a010
  42a270:	add    rax,0x1
  42a274:	test   r9d,r9d
  42a277:	mov    QWORD PTR [r14],rax
  42a27a:	je     0x429f97
  42a280:	test   BYTE PTR [r12],0x2
  42a285:	je     0x429f97
  42a28b:	mov    rax,QWORD PTR [rsp+0x78]
  42a290:	cmp    QWORD PTR [rsp+0x70],rax
  42a295:	je     0x42a2b0
  42a297:	lea    rdx,[rip+0x2bf53]        # 0x4561f1
  42a29e:	mov    rcx,rdi
  42a2a1:	mov    DWORD PTR [rsp+0x48],r9d
  42a2a6:	call   0x427e40
  42a2ab:	mov    r9d,DWORD PTR [rsp+0x48]
  42a2b0:	mov    ecx,r9d
  42a2b3:	call   0x427aa0
  42a2b8:	test   rax,rax
  42a2bb:	je     0x429f97
  42a2c1:	cmp    BYTE PTR [rax],0x0
  42a2c4:	je     0x429f97
  42a2ca:	mov    rdx,rax
  42a2cd:	mov    rcx,rdi
  42a2d0:	call   0x427e40
  42a2d5:	jmp    0x429f97
  42a2da:	nop    WORD PTR [rax+rax*1+0x0]
  42a2e0:	xor    eax,eax
  42a2e2:	jmp    0x42a05d
  42a2e7:	nop    WORD PTR [rax+rax*1+0x0]
  42a2f0:	mov    r9d,0x3
  42a2f6:	mov    r8,rdi
  42a2f9:	mov    rdx,r14
  42a2fc:	mov    rcx,r12
  42a2ff:	call   0x428b40
  42a304:	mov    esi,eax
  42a306:	mov    rax,QWORD PTR [r14]
  42a309:	cmp    BYTE PTR [rax],0x5f
  42a30c:	jne    0x42a0f4
  42a312:	jmp    0x42a0ed
  42a317:	nop    WORD PTR [rax+rax*1+0x0]
  42a320:	mov    rdx,QWORD PTR [r14]
  42a323:	movzx  eax,BYTE PTR [rdx]
  42a326:	test   al,al
  42a328:	je     0x42a332
  42a32a:	cmp    al,0x5f
  42a32c:	jne    0x42a010
  42a332:	cmp    al,0x5f
  42a334:	jne    0x429f97
  42a33a:	add    rdx,0x1
  42a33e:	mov    QWORD PTR [r14],rdx
  42a341:	jmp    0x429f97
  42a346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a350:	mov    rax,QWORD PTR [rip+0x30ad9]        # 0x45ae30
  42a357:	test   BYTE PTR [rax+0xa2],0x4
  42a35e:	je     0x42a1d2
  42a364:	mov    rcx,r14
  42a367:	call   0x4276e0
  42a36c:	cmp    eax,0xffffffff
  42a36f:	mov    DWORD PTR [rsp+0x60],eax
  42a373:	mov    DWORD PTR [rsp+0x48],eax
  42a377:	je     0x42a010
  42a37d:	mov    rdx,QWORD PTR [r14]
  42a380:	mov    rcx,rdx
  42a383:	mov    QWORD PTR [rsp+0x50],rdx
  42a388:	call   0x4493c0
  42a38d:	mov    r8d,DWORD PTR [rsp+0x48]
  42a392:	mov    rdx,QWORD PTR [rsp+0x50]
  42a397:	cmp    r8d,eax
  42a39a:	jg     0x42a010
  42a3a0:	test   r8d,r8d
  42a3a3:	jne    0x42a7a3
  42a3a9:	movsxd rax,r8d
  42a3ac:	add    rax,rdx
  42a3af:	mov    QWORD PTR [r14],rax
  42a3b2:	jmp    0x42a1f5
  42a3b7:	nop    WORD PTR [rax+rax*1+0x0]
  42a3c0:	lea    rdx,[rip+0x2be46]        # 0x45620d
  42a3c7:	mov    rcx,rdi
  42a3ca:	call   0x427e00
  42a3cf:	jmp    0x42a122
  42a3d4:	lea    rdx,[rip+0x2be14]        # 0x4561ef
  42a3db:	mov    rcx,rdi
  42a3de:	call   0x427e00
  42a3e3:	lea    rdx,[rip+0x2be09]        # 0x4561f3
  42a3ea:	mov    rcx,rdi
  42a3ed:	call   0x427e40
  42a3f2:	jmp    0x42a0d2
  42a3f7:	nop    WORD PTR [rax+rax*1+0x0]
  42a400:	lea    rdx,[rip+0x2bde8]        # 0x4561ef
  42a407:	mov    rcx,rdi
  42a40a:	call   0x427e00
  42a40f:	lea    rdx,[rip+0x2bddd]        # 0x4561f3
  42a416:	mov    rcx,rdi
  42a419:	call   0x427e40
  42a41e:	jmp    0x429ff3
  42a423:	mov    rcx,rdi
  42a426:	call   0x427e00
  42a42b:	mov    rax,QWORD PTR [r14]
  42a42e:	movzx  eax,BYTE PTR [rax]
  42a431:	jmp    0x42a1a4
  42a436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a440:	mov    rax,QWORD PTR [r14]
  42a443:	xor    r9d,r9d
  42a446:	cmp    BYTE PTR [rax],0x5f
  42a449:	jne    0x42a010
  42a44f:	add    rax,0x1
  42a453:	test   r9d,r9d
  42a456:	mov    QWORD PTR [r14],rax
  42a459:	jne    0x42a280
  42a45f:	jmp    0x429f97
  42a464:	mov    r8,QWORD PTR [rsp+0x58]
  42a469:	mov    rcx,r12
  42a46c:	mov    rdx,r14
  42a46f:	call   0x429e80
  42a474:	mov    rcx,QWORD PTR [rsp+0x90]
  42a47c:	mov    r8,QWORD PTR [rsp+0x98]
  42a484:	cmp    rcx,r8
  42a487:	je     0x42a495
  42a489:	sub    r8,rcx
  42a48c:	test   r8d,r8d
  42a48f:	jne    0x42a78b
  42a495:	test   rcx,rcx
  42a498:	je     0x42a1f5
  42a49e:	call   0x4494c8
  42a4a3:	jmp    0x42a1f5
  42a4a8:	mov    r8,QWORD PTR [rsp+0x58]
  42a4ad:	xor    r9d,r9d
  42a4b0:	mov    rcx,r12
  42a4b3:	mov    DWORD PTR [rsp+0x28],0x1
  42a4bb:	mov    DWORD PTR [rsp+0x20],0x1
  42a4c3:	mov    rdx,r14
  42a4c6:	mov    QWORD PTR [rsp+0xa0],0x0
  42a4d2:	mov    QWORD PTR [rsp+0x98],0x0
  42a4de:	mov    QWORD PTR [rsp+0x90],0x0
  42a4ea:	call   0x429210
  42a4ef:	test   eax,eax
  42a4f1:	mov    esi,eax
  42a4f3:	mov    rcx,QWORD PTR [rsp+0x90]
  42a4fb:	je     0x42a512
  42a4fd:	mov    r8,QWORD PTR [rsp+0x98]
  42a505:	sub    r8,rcx
  42a508:	test   r8d,r8d
  42a50b:	je     0x42a495
  42a50d:	jmp    0x42a78b
  42a512:	test   rcx,rcx
  42a515:	je     0x42a010
  42a51b:	call   0x4494c8
  42a520:	jmp    0x42a010
  42a525:	add    rbx,0x1
  42a529:	mov    rcx,r14
  42a52c:	mov    QWORD PTR [r14],rbx
  42a52f:	call   0x427730
  42a534:	movsxd rbx,eax
  42a537:	cmp    ebx,0xffffffff
  42a53a:	je     0x42a010
  42a540:	cmp    QWORD PTR [r12+0x50],0x0
  42a546:	je     0x42a553
  42a548:	cmp    ebx,DWORD PTR [r12+0x58]
  42a54d:	jge    0x42a010
  42a553:	mov    rcx,r14
  42a556:	call   0x427730
  42a55b:	cmp    eax,0xffffffff
  42a55e:	je     0x42a010
  42a564:	mov    rax,QWORD PTR [r12+0x50]
  42a569:	test   rax,rax
  42a56c:	je     0x42acf5
  42a572:	mov    rdx,QWORD PTR [rax+rbx*8]
  42a576:	mov    esi,0x1
  42a57b:	test   rdx,rdx
  42a57e:	je     0x42a5f3
  42a580:	cmp    BYTE PTR [rdx],0x0
  42a583:	je     0x42a5f3
  42a585:	mov    rcx,r13
  42a588:	call   0x427e40
  42a58d:	jmp    0x42a5f3
  42a58f:	nop
  42a590:	add    rbx,0x1
  42a594:	lea    rdx,[rsp+0x60]
  42a599:	mov    rcx,r14
  42a59c:	mov    QWORD PTR [r14],rbx
  42a59f:	call   0x4277a0
  42a5a4:	test   eax,eax
  42a5a6:	je     0x42a010
  42a5ac:	movsxd rax,DWORD PTR [rsp+0x60]
  42a5b1:	cmp    DWORD PTR [r12+0x24],eax
  42a5b6:	jle    0x42a010
  42a5bc:	mov    rdx,QWORD PTR [r12+0x18]
  42a5c1:	mov    rdx,QWORD PTR [rdx+rax*8]
  42a5c5:	test   rdx,rdx
  42a5c8:	jne    0x42a580
  42a5ca:	jmp    0x42a5f3
  42a5cc:	nop    DWORD PTR [rax+0x0]
  42a5d0:	mov    DWORD PTR [rsp+0x20],0x1
  42a5d8:	xor    r9d,r9d
  42a5db:	mov    r8,r13
  42a5de:	mov    rdx,r14
  42a5e1:	mov    rcx,r12
  42a5e4:	call   0x429920
  42a5e9:	mov    esi,eax
  42a5eb:	test   esi,esi
  42a5ed:	je     0x42a010
  42a5f3:	mov    rcx,QWORD PTR [rsp+0x78]
  42a5f8:	cmp    QWORD PTR [rsp+0x70],rcx
  42a5fd:	je     0x42a625
  42a5ff:	lea    rdx,[rip+0x2bbeb]        # 0x4561f1
  42a606:	mov    rcx,r13
  42a609:	call   0x427e40
  42a60e:	mov    r8,QWORD PTR [rsp+0x78]
  42a613:	lea    rdx,[rsp+0x70]
  42a618:	mov    rcx,r13
  42a61b:	call   0x427f80
  42a620:	mov    rcx,QWORD PTR [rsp+0x70]
  42a625:	test   rcx,rcx
  42a628:	jne    0x42a046
  42a62e:	jmp    0x42a04b
  42a633:	lea    rsi,[rip+0x2bd7e]        # 0x4563b8
  42a63a:	mov    DWORD PTR [rsp+0x64],0x0
  42a642:	movzx  edx,BYTE PTR [rbx]
  42a645:	lea    eax,[rdx-0x43]
  42a648:	cmp    al,0x32
  42a64a:	ja     0x42a6a0
  42a64c:	movzx  eax,al
  42a64f:	movsxd rax,DWORD PTR [rsi+rax*4]
  42a653:	add    rax,rsi
  42a656:	jmp    rax
  42a658:	nop    DWORD PTR [rax+rax*1+0x0]
  42a660:	add    rbx,0x1
  42a664:	mov    QWORD PTR [r14],rbx
  42a667:	mov    rax,QWORD PTR [r13+0x8]
  42a66b:	cmp    QWORD PTR [r13+0x0],rax
  42a66f:	je     0x42a680
  42a671:	lea    rdx,[rip+0x2bb79]        # 0x4561f1
  42a678:	mov    rcx,r13
  42a67b:	call   0x427e40
  42a680:	lea    rdx,[rip+0x2bb8c]        # 0x456213
  42a687:	mov    rcx,r13
  42a68a:	call   0x427e40
  42a68f:	mov    rbx,QWORD PTR [r14]
  42a692:	movzx  edx,BYTE PTR [rbx]
  42a695:	lea    eax,[rdx-0x43]
  42a698:	cmp    al,0x32
  42a69a:	jbe    0x42a64c
  42a69c:	nop    DWORD PTR [rax+0x0]
  42a6a0:	cmp    dl,0x78
  42a6a3:	mov    rax,rbx
  42a6a6:	ja     0x42a010
  42a6ac:	lea    rcx,[rip+0x2bdd1]        # 0x456484
  42a6b3:	movzx  edx,dl
  42a6b6:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  42a6ba:	add    rcx,rdx
  42a6bd:	jmp    rcx
  42a6bf:	nop
  42a6c0:	add    rbx,0x1
  42a6c4:	mov    QWORD PTR [r14],rbx
  42a6c7:	mov    rax,QWORD PTR [r13+0x8]
  42a6cb:	cmp    QWORD PTR [r13+0x0],rax
  42a6cf:	je     0x42a6e0
  42a6d1:	lea    rdx,[rip+0x2bb19]        # 0x4561f1
  42a6d8:	mov    rcx,r13
  42a6db:	call   0x427e40
  42a6e0:	lea    rdx,[rip+0x2bb35]        # 0x45621c
  42a6e7:	mov    rcx,r13
  42a6ea:	call   0x427e40
  42a6ef:	mov    rbx,QWORD PTR [r14]
  42a6f2:	jmp    0x42a642
  42a6f7:	nop    WORD PTR [rax+rax*1+0x0]
  42a700:	add    rbx,0x1
  42a704:	mov    QWORD PTR [r14],rbx
  42a707:	mov    rax,QWORD PTR [r13+0x8]
  42a70b:	cmp    QWORD PTR [r13+0x0],rax
  42a70f:	je     0x42a720
  42a711:	lea    rdx,[rip+0x2bad9]        # 0x4561f1
  42a718:	mov    rcx,r13
  42a71b:	call   0x427e40
  42a720:	lea    rdx,[rip+0x2bafc]        # 0x456223
  42a727:	mov    rcx,r13
  42a72a:	call   0x427e40
  42a72f:	mov    rbx,QWORD PTR [r14]
  42a732:	jmp    0x42a642
  42a737:	nop    WORD PTR [rax+rax*1+0x0]
  42a740:	test   BYTE PTR [r12],0x2
  42a745:	je     0x42a77f
  42a747:	mov    rax,QWORD PTR [r13+0x8]
  42a74b:	cmp    QWORD PTR [r13+0x0],rax
  42a74f:	je     0x42a766
  42a751:	lea    rdx,[rip+0x2ba99]        # 0x4561f1
  42a758:	mov    rcx,r13
  42a75b:	call   0x427e00
  42a760:	mov    rbx,QWORD PTR [r14]
  42a763:	movzx  edx,BYTE PTR [rbx]
  42a766:	movsx  ecx,dl
  42a769:	call   0x427a50
  42a76e:	mov    ecx,eax
  42a770:	call   0x427aa0
  42a775:	test   rax,rax
  42a778:	je     0x42a77f
  42a77a:	cmp    BYTE PTR [rax],0x0
  42a77d:	jne    0x42a7e3
  42a77f:	add    rbx,0x1
  42a783:	mov    QWORD PTR [r14],rbx
  42a786:	jmp    0x42a642
  42a78b:	mov    rdx,rcx
  42a78e:	mov    rcx,rdi
  42a791:	call   0x427da0
  42a796:	mov    rcx,QWORD PTR [rsp+0x90]
  42a79e:	jmp    0x42a495
  42a7a3:	mov    rcx,rdi
  42a7a6:	call   0x427da0
  42a7ab:	mov    r8d,DWORD PTR [rsp+0x60]
  42a7b0:	mov    rdx,QWORD PTR [r14]
  42a7b3:	movsxd rax,r8d
  42a7b6:	add    rax,rdx
  42a7b9:	mov    QWORD PTR [r14],rax
  42a7bc:	jmp    0x42a1f5
  42a7c1:	add    r15,0x1
  42a7c5:	call   0x427a50
  42a7ca:	mov    r9d,eax
  42a7cd:	lea    rax,[r15+0x1]
  42a7d1:	mov    QWORD PTR [r14],rax
  42a7d4:	cmp    BYTE PTR [r15],0x46
  42a7d8:	jne    0x42a010
  42a7de:	jmp    0x42a244
  42a7e3:	mov    rdx,rax
  42a7e6:	mov    rcx,r13
  42a7e9:	call   0x427e00
  42a7ee:	mov    rbx,QWORD PTR [r14]
  42a7f1:	jmp    0x42a77f
  42a7f3:	lea    rax,[rbx+0x1]
  42a7f7:	mov    rdx,QWORD PTR [rip+0x30632]        # 0x45ae30
  42a7fe:	mov    QWORD PTR [r14],rax
  42a801:	movzx  ecx,BYTE PTR [rbx+0x1]
  42a805:	test   BYTE PTR [rdx+rcx*2],0x4
  42a809:	je     0x42a010
  42a80f:	lea    rsi,[rax+0x1]
  42a813:	mov    QWORD PTR [r14],rsi
  42a816:	cmp    BYTE PTR [rax+0x1],0x5f
  42a81a:	jne    0x42aae1
  42a820:	add    rax,0x2
  42a824:	xor    ecx,ecx
  42a826:	mov    QWORD PTR [r14],rax
  42a829:	jmp    0x42a854
  42a82b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a830:	cmp    dl,0x5f
  42a833:	je     0x42a85e
  42a835:	mov    BYTE PTR [rsp+rcx*1+0x90],dl
  42a83c:	lea    r8,[rax+0x1]
  42a840:	add    rcx,0x1
  42a844:	cmp    rcx,0x24
  42a848:	mov    QWORD PTR [r14],r8
  42a84b:	je     0x42ad09
  42a851:	mov    rax,r8
  42a854:	movzx  edx,BYTE PTR [rax]
  42a857:	movsxd r8,ecx
  42a85a:	test   dl,dl
  42a85c:	jne    0x42a830
  42a85e:	cmp    dl,0x5f
  42a861:	jne    0x42a010
  42a867:	add    rax,0x1
  42a86b:	lea    rbx,[rsp+0x90]
  42a873:	mov    BYTE PTR [rsp+r8*1+0x90],0x0
  42a87c:	mov    QWORD PTR [r14],rax
  42a87f:	lea    r8,[rsp+0x64]
  42a884:	lea    rdx,[rip+0x2b9eb]        # 0x456276
  42a88b:	mov    rcx,rbx
  42a88e:	call   0x4493f8
  42a893:	mov    r8d,DWORD PTR [rsp+0x64]
  42a898:	lea    rdx,[rip+0x2b9da]        # 0x456279
  42a89f:	mov    rcx,rbx
  42a8a2:	call   0x449400
  42a8a7:	mov    rax,QWORD PTR [r13+0x8]
  42a8ab:	cmp    QWORD PTR [r13+0x0],rax
  42a8af:	je     0x42a8c0
  42a8b1:	lea    rdx,[rip+0x2b939]        # 0x4561f1
  42a8b8:	mov    rcx,r13
  42a8bb:	call   0x427e40
  42a8c0:	cmp    BYTE PTR [rsp+0x90],0x0
  42a8c8:	mov    esi,0x3
  42a8cd:	je     0x42a9f4
  42a8d3:	mov    rdx,rbx
  42a8d6:	mov    rcx,r13
  42a8d9:	call   0x427e40
  42a8de:	jmp    0x42a9f4
  42a8e3:	lea    rbx,[rsp+0x90]
  42a8eb:	mov    rcx,r12
  42a8ee:	xor    esi,esi
  42a8f0:	call   0x427910
  42a8f5:	mov    r8,rbx
  42a8f8:	mov    rdx,r14
  42a8fb:	mov    rcx,r12
  42a8fe:	mov    edi,eax
  42a900:	mov    QWORD PTR [rsp+0xa0],0x0
  42a90c:	mov    QWORD PTR [rsp+0x98],0x0
  42a918:	mov    QWORD PTR [rsp+0x90],0x0
  42a924:	call   0x42b510
  42a929:	test   eax,eax
  42a92b:	je     0x42a98c
  42a92d:	mov    rcx,QWORD PTR [rsp+0x98]
  42a935:	mov    rdx,QWORD PTR [rsp+0x90]
  42a93d:	mov    r8d,0x0
  42a943:	mov    r9d,edi
  42a946:	mov    eax,ecx
  42a948:	sub    eax,edx
  42a94a:	cmp    rdx,rcx
  42a94d:	lea    rcx,[r12+0x18]
  42a952:	cmovne r8d,eax
  42a956:	call   0x427c70
  42a95b:	mov    rax,QWORD PTR [r13+0x8]
  42a95f:	cmp    QWORD PTR [r13+0x0],rax
  42a963:	je     0x42a974
  42a965:	lea    rdx,[rip+0x2b885]        # 0x4561f1
  42a96c:	mov    rcx,r13
  42a96f:	call   0x427e40
  42a974:	mov    r8,QWORD PTR [rsp+0x98]
  42a97c:	mov    rdx,rbx
  42a97f:	mov    rcx,r13
  42a982:	mov    esi,0x1
  42a987:	call   0x427f80
  42a98c:	mov    rcx,QWORD PTR [rsp+0x90]
  42a994:	test   rcx,rcx
  42a997:	je     0x42a99e
  42a999:	call   0x4494c8
  42a99e:	test   esi,esi
  42a9a0:	je     0x42a010
  42a9a6:	test   ebp,ebp
  42a9a8:	je     0x42acdf
  42a9ae:	mov    esi,0x3
  42a9b3:	jmp    0x42a5f3
  42a9b8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a9c0:	add    rbx,0x1
  42a9c4:	mov    QWORD PTR [r14],rbx
  42a9c7:	mov    rax,QWORD PTR [r13+0x8]
  42a9cb:	cmp    QWORD PTR [r13+0x0],rax
  42a9cf:	je     0x42a9e0
  42a9d1:	lea    rdx,[rip+0x2b819]        # 0x4561f1
  42a9d8:	mov    rcx,r13
  42a9db:	call   0x427e40
  42a9e0:	lea    rdx,[rip+0x2b84b]        # 0x456232
  42a9e7:	mov    rcx,r13
  42a9ea:	mov    esi,0x3
  42a9ef:	call   0x427e40
  42a9f4:	test   ebp,ebp
  42a9f6:	jne    0x42a5f3
  42a9fc:	mov    ebp,esi
  42a9fe:	jmp    0x42a5eb
  42aa03:	add    rbx,0x1
  42aa07:	mov    QWORD PTR [r14],rbx
  42aa0a:	mov    rax,QWORD PTR [r13+0x8]
  42aa0e:	cmp    QWORD PTR [r13+0x0],rax
  42aa12:	je     0x42aa23
  42aa14:	lea    rdx,[rip+0x2b7d6]        # 0x4561f1
  42aa1b:	mov    rcx,r13
  42aa1e:	call   0x427e40
  42aa23:	lea    rdx,[rip+0x2b846]        # 0x456270
  42aa2a:	mov    rcx,r13
  42aa2d:	mov    esi,0x6
  42aa32:	call   0x427e40
  42aa37:	jmp    0x42a9f4
  42aa39:	add    rbx,0x1
  42aa3d:	mov    QWORD PTR [r14],rbx
  42aa40:	mov    rax,QWORD PTR [r13+0x8]
  42aa44:	cmp    QWORD PTR [r13+0x0],rax
  42aa48:	je     0x42aa59
  42aa4a:	lea    rdx,[rip+0x2b7a0]        # 0x4561f1
  42aa51:	mov    rcx,r13
  42aa54:	call   0x427e40
  42aa59:	lea    rdx,[rip+0x2b809]        # 0x456269
  42aa60:	mov    rcx,r13
  42aa63:	mov    esi,0x6
  42aa68:	call   0x427e40
  42aa6d:	jmp    0x42a9f4
  42aa6f:	add    rbx,0x1
  42aa73:	mov    QWORD PTR [r14],rbx
  42aa76:	mov    rax,QWORD PTR [r13+0x8]
  42aa7a:	cmp    QWORD PTR [r13+0x0],rax
  42aa7e:	je     0x42aa8f
  42aa80:	lea    rdx,[rip+0x2b76a]        # 0x4561f1
  42aa87:	mov    rcx,r13
  42aa8a:	call   0x427e40
  42aa8f:	lea    rdx,[rip+0x2b7ba]        # 0x456250
  42aa96:	mov    rcx,r13
  42aa99:	mov    esi,0x5
  42aa9e:	call   0x427e40
  42aaa3:	jmp    0x42a9f4
  42aaa8:	add    rbx,0x1
  42aaac:	mov    QWORD PTR [r14],rbx
  42aaaf:	mov    rax,QWORD PTR [r13+0x8]
  42aab3:	cmp    QWORD PTR [r13+0x0],rax
  42aab7:	je     0x42aac8
  42aab9:	lea    rdx,[rip+0x2b731]        # 0x4561f1
  42aac0:	mov    rcx,r13
  42aac3:	call   0x427e40
  42aac8:	lea    rdx,[rip+0x2b77c]        # 0x45624b
  42aacf:	mov    rcx,r13
  42aad2:	mov    esi,0x4
  42aad7:	call   0x427e40
  42aadc:	jmp    0x42a9f4
  42aae1:	lea    rbx,[rsp+0x90]
  42aae9:	mov    rdx,rsi
  42aaec:	mov    r8d,0x2
  42aaf2:	mov    rcx,rbx
  42aaf5:	call   0x4493a8
  42aafa:	mov    rcx,rsi
  42aafd:	mov    BYTE PTR [rsp+0x92],0x0
  42ab05:	call   0x4493c0
  42ab0a:	mov    edx,0x2
  42ab0f:	cmp    rax,0x1
  42ab13:	cmova  rax,rdx
  42ab17:	add    rax,rsi
  42ab1a:	mov    QWORD PTR [r14],rax
  42ab1d:	jmp    0x42a87f
  42ab22:	add    rbx,0x1
  42ab26:	mov    QWORD PTR [r14],rbx
  42ab29:	mov    rax,QWORD PTR [r13+0x8]
  42ab2d:	cmp    QWORD PTR [r13+0x0],rax
  42ab31:	je     0x42ab42
  42ab33:	lea    rdx,[rip+0x2b6b7]        # 0x4561f1
  42ab3a:	mov    rcx,r13
  42ab3d:	call   0x427e40
  42ab42:	lea    rdx,[rip+0x2b6fc]        # 0x456245
  42ab49:	mov    rcx,r13
  42ab4c:	mov    esi,0x3
  42ab51:	call   0x427e40
  42ab56:	jmp    0x42a9f4
  42ab5b:	add    rbx,0x1
  42ab5f:	mov    QWORD PTR [r14],rbx
  42ab62:	mov    rax,QWORD PTR [r13+0x8]
  42ab66:	cmp    QWORD PTR [r13+0x0],rax
  42ab6a:	je     0x42ab7b
  42ab6c:	lea    rdx,[rip+0x2b67e]        # 0x4561f1
  42ab73:	mov    rcx,r13
  42ab76:	call   0x427e40
  42ab7b:	lea    rdx,[rip+0x2b6db]        # 0x45625d
  42ab82:	mov    rcx,r13
  42ab85:	mov    esi,0x6
  42ab8a:	call   0x427e40
  42ab8f:	jmp    0x42a9f4
  42ab94:	add    rbx,0x1
  42ab98:	mov    QWORD PTR [r14],rbx
  42ab9b:	mov    rax,QWORD PTR [r13+0x8]
  42ab9f:	cmp    QWORD PTR [r13+0x0],rax
  42aba3:	je     0x42abb4
  42aba5:	lea    rdx,[rip+0x2b645]        # 0x4561f1
  42abac:	mov    rcx,r13
  42abaf:	call   0x427e40
  42abb4:	lea    rdx,[rip+0x2b681]        # 0x45623c
  42abbb:	mov    rcx,r13
  42abbe:	mov    esi,0x3
  42abc3:	call   0x427e40
  42abc8:	jmp    0x42a9f4
  42abcd:	add    rbx,0x1
  42abd1:	mov    QWORD PTR [r14],rbx
  42abd4:	mov    rax,QWORD PTR [r13+0x8]
  42abd8:	cmp    QWORD PTR [r13+0x0],rax
  42abdc:	je     0x42abed
  42abde:	lea    rdx,[rip+0x2b60c]        # 0x4561f1
  42abe5:	mov    rcx,r13
  42abe8:	call   0x427e40
  42abed:	lea    rdx,[rip+0x2b64d]        # 0x456241
  42abf4:	mov    rcx,r13
  42abf7:	mov    esi,0x3
  42abfc:	call   0x427e40
  42ac01:	jmp    0x42a9f4
  42ac06:	add    rbx,0x1
  42ac0a:	mov    QWORD PTR [r14],rbx
  42ac0d:	mov    rax,QWORD PTR [r13+0x8]
  42ac11:	cmp    QWORD PTR [r13+0x0],rax
  42ac15:	je     0x42ac26
  42ac17:	lea    rdx,[rip+0x2b5d3]        # 0x4561f1
  42ac1e:	mov    rcx,r13
  42ac21:	call   0x427e40
  42ac26:	lea    rdx,[rip+0x2b600]        # 0x45622d
  42ac2d:	mov    rcx,r13
  42ac30:	mov    esi,0x3
  42ac35:	call   0x427e40
  42ac3a:	jmp    0x42a9f4
  42ac3f:	lea    rbx,[rsp+0x90]
  42ac47:	mov    rdx,r14
  42ac4a:	mov    rcx,r12
  42ac4d:	mov    DWORD PTR [rsp+0x28],0x1
  42ac55:	mov    DWORD PTR [rsp+0x20],0x1
  42ac5d:	xor    r9d,r9d
  42ac60:	mov    r8,rbx
  42ac63:	mov    QWORD PTR [rsp+0xa0],0x0
  42ac6f:	mov    QWORD PTR [rsp+0x98],0x0
  42ac7b:	mov    QWORD PTR [rsp+0x90],0x0
  42ac87:	call   0x429210
  42ac8c:	mov    r8,QWORD PTR [rsp+0x98]
  42ac94:	mov    rdx,rbx
  42ac97:	mov    rcx,r13
  42ac9a:	mov    esi,eax
  42ac9c:	call   0x427f80
  42aca1:	jmp    0x42a98c
  42aca6:	add    rbx,0x1
  42acaa:	mov    QWORD PTR [r14],rbx
  42acad:	mov    rax,QWORD PTR [r13+0x8]
  42acb1:	cmp    QWORD PTR [r13+0x0],rax
  42acb5:	je     0x42acc6
  42acb7:	lea    rdx,[rip+0x2b533]        # 0x4561f1
  42acbe:	mov    rcx,r13
  42acc1:	call   0x427e40
  42acc6:	lea    rdx,[rip+0x2b588]        # 0x456255
  42accd:	mov    rcx,r13
  42acd0:	mov    esi,0x5
  42acd5:	call   0x427e40
  42acda:	jmp    0x42a9f4
  42acdf:	mov    esi,0x3
  42ace4:	mov    ebp,esi
  42ace6:	jmp    0x42a5eb
  42aceb:	mov    esi,0x3
  42acf0:	jmp    0x42a9f4
  42acf5:	mov    edx,ebx
  42acf7:	mov    rcx,r13
  42acfa:	mov    esi,0x1
  42acff:	call   0x427e80
  42ad04:	jmp    0x42a5f3
  42ad09:	movzx  edx,BYTE PTR [rax+0x1]
  42ad0d:	mov    rax,r8
  42ad10:	mov    r8d,0x24
  42ad16:	jmp    0x42a85e
  42ad1b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ad20:	push   r15
  42ad22:	push   r14
  42ad24:	push   r13
  42ad26:	push   r12
  42ad28:	push   rbp
  42ad29:	push   rdi
  42ad2a:	push   rsi
  42ad2b:	push   rbx
  42ad2c:	sub    rsp,0x88
  42ad33:	mov    ebx,DWORD PTR [rcx]
  42ad35:	mov    r15,QWORD PTR [rdx]
  42ad38:	movsxd rax,r8d
  42ad3b:	mov    r12,rcx
  42ad3e:	mov    r13,rdx
  42ad41:	mov    rbp,r9
  42ad44:	mov    QWORD PTR [rsp+0x20],rax
  42ad49:	test   bh,0x10
  42ad4c:	lea    rdi,[r15+rax*1]
  42ad50:	je     0x42ad5b
  42ad52:	cmp    BYTE PTR [rdi],0x58
  42ad55:	je     0x42aee0
  42ad5b:	mov    esi,DWORD PTR [r12]
  42ad5f:	test   esi,0x1800
  42ad65:	je     0x42adbf
  42ad67:	lea    rdx,[rip+0x2b90a]        # 0x456678
  42ad6e:	mov    rcx,r15
  42ad71:	mov    DWORD PTR [rsp+0x2c],r8d
  42ad76:	call   0x449388
  42ad7b:	test   rax,rax
  42ad7e:	mov    rbx,rax
  42ad81:	mov    r8d,DWORD PTR [rsp+0x2c]
  42ad86:	je     0x42adbf
  42ad88:	lea    rsi,[rsp+0x38]
  42ad8d:	lea    rax,[rax+0x6]
  42ad91:	mov    rcx,rsi
  42ad94:	mov    QWORD PTR [rsp+0x38],rax
  42ad99:	call   0x4276e0
  42ad9e:	cmp    eax,0xffffffff
  42ada1:	mov    r8d,DWORD PTR [rsp+0x2c]
  42ada6:	je     0x42ae24
  42ada8:	mov    rdx,QWORD PTR [rsp+0x38]
  42adad:	cdqe   
  42adaf:	add    rax,rdx
  42adb2:	cmp    rdi,rax
  42adb5:	je     0x42b258
  42adbb:	mov    esi,DWORD PTR [r12]
  42adbf:	and    esi,0x2100
  42adc5:	je     0x42ae24
  42adc7:	lea    rdx,[rip+0x2b8b1]        # 0x45667f
  42adce:	mov    rcx,r15
  42add1:	mov    DWORD PTR [rsp+0x2c],r8d
  42add6:	call   0x449388
  42addb:	test   rax,rax
  42adde:	mov    rbx,rax
  42ade1:	mov    r8d,DWORD PTR [rsp+0x2c]
  42ade6:	je     0x42b130
  42adec:	lea    rax,[rbx+0x6]
  42adf0:	mov    DWORD PTR [rsp+0x2c],r8d
  42adf5:	lea    rsi,[rsp+0x38]
  42adfa:	mov    QWORD PTR [rsp+0x38],rax
  42adff:	mov    rcx,rsi
  42ae02:	call   0x4276e0
  42ae07:	cmp    eax,0xffffffff
  42ae0a:	mov    r8d,DWORD PTR [rsp+0x2c]
  42ae0f:	je     0x42ae24
  42ae11:	mov    rdx,QWORD PTR [rsp+0x38]
  42ae16:	cdqe   
  42ae18:	add    rax,rdx
  42ae1b:	cmp    rdi,rax
  42ae1e:	je     0x42aed0
  42ae24:	cmp    r8d,0xa
  42ae28:	mov    rbx,QWORD PTR [r13+0x0]
  42ae2c:	jg     0x42ae70
  42ae2e:	cmp    DWORD PTR [r12+0x44],0xffffffff
  42ae34:	je     0x42b1c1
  42ae3a:	test   r8d,r8d
  42ae3d:	je     0x42ae4e
  42ae3f:	mov    rdx,rbx
  42ae42:	mov    rcx,rbp
  42ae45:	call   0x427d60
  42ae4a:	mov    rbx,QWORD PTR [r13+0x0]
  42ae4e:	mov    r14,QWORD PTR [rsp+0x20]
  42ae53:	add    r14,rbx
  42ae56:	mov    QWORD PTR [r13+0x0],r14
  42ae5a:	add    rsp,0x88
  42ae61:	pop    rbx
  42ae62:	pop    rsi
  42ae63:	pop    rdi
  42ae64:	pop    rbp
  42ae65:	pop    r12
  42ae67:	pop    r13
  42ae69:	pop    r14
  42ae6b:	pop    r15
  42ae6d:	ret    
  42ae6e:	xchg   ax,ax
  42ae70:	lea    rdi,[rip+0x2b81a]        # 0x456691
  42ae77:	mov    ecx,0x8
  42ae7c:	mov    rsi,rbx
  42ae7f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ae81:	jne    0x42ae2e
  42ae83:	cmp    BYTE PTR [rbx+0x9],0x4e
  42ae87:	jne    0x42ae2e
  42ae89:	movzx  eax,BYTE PTR [rbx+0x8]
  42ae8d:	cmp    al,BYTE PTR [rbx+0xa]
  42ae90:	jne    0x42ae2e
  42ae92:	lea    rcx,[rip+0x202c7]        # 0x44b160
  42ae99:	movsx  edx,al
  42ae9c:	mov    DWORD PTR [rsp+0x2c],r8d
  42aea1:	call   0x4493e8
  42aea6:	test   rax,rax
  42aea9:	mov    r8d,DWORD PTR [rsp+0x2c]
  42aeae:	je     0x42ae2e
  42aeb4:	lea    rdx,[rip+0x2b7df]        # 0x45669a
  42aebb:	mov    rcx,rbp
  42aebe:	call   0x427e40
  42aec3:	mov    rbx,QWORD PTR [r13+0x0]
  42aec7:	jmp    0x42ae4e
  42aec9:	nop    DWORD PTR [rax+0x0]
  42aed0:	cmp    BYTE PTR [rdx],0x5f
  42aed3:	jne    0x42ae24
  42aed9:	jmp    0x42b261
  42aede:	xchg   ax,ax
  42aee0:	mov    edx,0x3c
  42aee5:	mov    rcx,r15
  42aee8:	mov    DWORD PTR [rsp+0x2c],r8d
  42aeed:	call   0x4493e8
  42aef2:	test   rax,rax
  42aef5:	mov    r8d,DWORD PTR [rsp+0x2c]
  42aefa:	je     0x42b1a0
  42af00:	sub    rax,r15
  42af03:	cmp    rax,QWORD PTR [rsp+0x20]
  42af08:	jge    0x42b1a0
  42af0e:	test   eax,eax
  42af10:	mov    r8d,eax
  42af13:	jne    0x42b1a9
  42af19:	mov    rax,QWORD PTR [rsp+0x20]
  42af1e:	cmp    DWORD PTR [r12+0x44],0xffffffff
  42af24:	mov    QWORD PTR [rsp+0x50],0x0
  42af2d:	mov    QWORD PTR [rsp+0x48],0x0
  42af36:	mov    QWORD PTR [rsp+0x40],0x0
  42af3f:	lea    rax,[r15+rax*1+0x1]
  42af44:	mov    QWORD PTR [r13+0x0],rax
  42af48:	je     0x42b1dc
  42af4e:	mov    eax,ebx
  42af50:	lea    rdx,[rip+0x2b2a7]        # 0x4561fe
  42af57:	mov    rcx,rbp
  42af5a:	or     eax,0x1
  42af5d:	lea    rsi,[rsp+0x40]
  42af62:	mov    DWORD PTR [r12],eax
  42af66:	call   0x427e40
  42af6b:	mov    rdi,QWORD PTR [rip+0x2febe]        # 0x45ae30
  42af72:	mov    rcx,QWORD PTR [rsp+0x40]
  42af77:	test   rcx,rcx
  42af7a:	je     0x42af9c
  42af7c:	call   0x4494c8
  42af81:	mov    QWORD PTR [rsp+0x48],0x0
  42af8a:	mov    QWORD PTR [rsp+0x50],0x0
  42af93:	mov    QWORD PTR [rsp+0x40],0x0
  42af9c:	mov    rax,QWORD PTR [r13+0x0]
  42afa0:	movzx  r14d,BYTE PTR [rax]
  42afa4:	cmp    r14b,0x53
  42afa8:	je     0x42afc0
  42afaa:	jle    0x42b040
  42afb0:	cmp    r14b,0x54
  42afb4:	je     0x42b0d0
  42afba:	cmp    r14b,0x55
  42afbe:	jne    0x42aff0
  42afc0:	lea    edx,[r14-0x53]
  42afc4:	and    edx,0xfd
  42afca:	jne    0x42aff0
  42afcc:	lea    rdx,[rax+0x1]
  42afd0:	mov    QWORD PTR [r13+0x0],rdx
  42afd4:	movzx  eax,BYTE PTR [rax+0x1]
  42afd8:	cmp    al,0x4e
  42afda:	je     0x42b1ee
  42afe0:	cmp    al,0x50
  42afe2:	je     0x42b201
  42afe8:	cmp    al,0x4d
  42afea:	je     0x42b414
  42aff0:	lea    rdx,[rip+0x2b20f]        # 0x456206
  42aff7:	mov    rcx,rbp
  42affa:	call   0x427e40
  42afff:	mov    rcx,QWORD PTR [rsp+0x40]
  42b004:	test   rcx,rcx
  42b007:	je     0x42b029
  42b009:	call   0x4494c8
  42b00e:	mov    QWORD PTR [rsp+0x48],0x0
  42b017:	mov    QWORD PTR [rsp+0x50],0x0
  42b020:	mov    QWORD PTR [rsp+0x40],0x0
  42b029:	mov    rax,QWORD PTR [r13+0x0]
  42b02d:	cmp    BYTE PTR [rax],0x5f
  42b030:	je     0x42b1cf
  42b036:	mov    DWORD PTR [r12],ebx
  42b03a:	jmp    0x42ae5a
  42b03f:	nop
  42b040:	cmp    r14b,0x41
  42b044:	jne    0x42aff0
  42b046:	add    rax,0x1
  42b04a:	mov    rcx,r13
  42b04d:	mov    QWORD PTR [r13+0x0],rax
  42b051:	call   0x4276e0
  42b056:	test   eax,eax
  42b058:	mov    DWORD PTR [rsp+0x20],eax
  42b05c:	jle    0x42aff0
  42b05e:	lea    rdx,[rip+0x2b188]        # 0x4561ed
  42b065:	mov    rcx,rsi
  42b068:	call   0x427e40
  42b06d:	mov    r15d,DWORD PTR [rsp+0x20]
  42b072:	lea    ecx,[r15+0x1]
  42b076:	movsxd r15,r15d
  42b079:	movsxd rcx,ecx
  42b07c:	call   0x43baf0
  42b081:	mov    rdx,QWORD PTR [r13+0x0]
  42b085:	mov    r14,rax
  42b088:	mov    r8,r15
  42b08b:	mov    rcx,rax
  42b08e:	call   0x449450
  42b093:	mov    BYTE PTR [r14+r15*1],0x0
  42b098:	mov    edx,DWORD PTR [r12]
  42b09c:	mov    rcx,r14
  42b09f:	call   0x428a40
  42b0a4:	test   rax,rax
  42b0a7:	je     0x42b4fa
  42b0ad:	cmp    BYTE PTR [rax],0x0
  42b0b0:	jne    0x42b4e0
  42b0b6:	mov    rcx,rax
  42b0b9:	call   0x4494c8
  42b0be:	add    QWORD PTR [r13+0x0],r15
  42b0c2:	mov    rcx,r14
  42b0c5:	call   0x4494c8
  42b0ca:	jmp    0x42b0ee
  42b0cc:	nop    DWORD PTR [rax+0x0]
  42b0d0:	add    rax,0x1
  42b0d4:	mov    r8,rsi
  42b0d7:	mov    rdx,r13
  42b0da:	mov    QWORD PTR [r13+0x0],rax
  42b0de:	mov    rcx,r12
  42b0e1:	call   0x429e80
  42b0e6:	test   eax,eax
  42b0e8:	je     0x42aff0
  42b0ee:	mov    r8,QWORD PTR [rsp+0x48]
  42b0f3:	mov    rdx,rsi
  42b0f6:	mov    rcx,rbp
  42b0f9:	call   0x427f80
  42b0fe:	mov    rax,QWORD PTR [r13+0x0]
  42b102:	movzx  eax,BYTE PTR [rax]
  42b105:	cmp    al,0x5f
  42b107:	je     0x42aff0
  42b10d:	test   al,al
  42b10f:	je     0x42aff0
  42b115:	lea    rdx,[rip+0x2b55a]        # 0x456676
  42b11c:	mov    rcx,rbp
  42b11f:	call   0x427e40
  42b124:	jmp    0x42af72
  42b129:	nop    DWORD PTR [rax+0x0]
  42b130:	lea    rdx,[rip+0x2b54f]        # 0x456686
  42b137:	mov    rcx,r15
  42b13a:	call   0x449388
  42b13f:	test   rax,rax
  42b142:	mov    rbx,rax
  42b145:	mov    r8d,DWORD PTR [rsp+0x2c]
  42b14a:	jne    0x42adec
  42b150:	lea    rdx,[rip+0x2b521]        # 0x456678
  42b157:	mov    rcx,r15
  42b15a:	call   0x449388
  42b15f:	test   rax,rax
  42b162:	mov    rbx,rax
  42b165:	mov    r8d,DWORD PTR [rsp+0x2c]
  42b16a:	jne    0x42adec
  42b170:	lea    rdx,[rip+0x2b516]        # 0x45668d
  42b177:	mov    rcx,r15
  42b17a:	mov    DWORD PTR [rsp+0x2c],r8d
  42b17f:	call   0x449388
  42b184:	test   rax,rax
  42b187:	mov    rbx,rax
  42b18a:	mov    r8d,DWORD PTR [rsp+0x2c]
  42b18f:	je     0x42ae24
  42b195:	lea    rax,[rax+0x3]
  42b199:	jmp    0x42adf5
  42b19e:	xchg   ax,ax
  42b1a0:	test   r8d,r8d
  42b1a3:	je     0x42af19
  42b1a9:	mov    rdx,r15
  42b1ac:	mov    rcx,rbp
  42b1af:	call   0x427d60
  42b1b4:	mov    r15,QWORD PTR [r13+0x0]
  42b1b8:	mov    ebx,DWORD PTR [r12]
  42b1bc:	jmp    0x42af19
  42b1c1:	mov    DWORD PTR [r12+0x44],0x0
  42b1ca:	jmp    0x42ae3a
  42b1cf:	add    rax,0x1
  42b1d3:	mov    QWORD PTR [r13+0x0],rax
  42b1d7:	jmp    0x42b036
  42b1dc:	mov    rax,QWORD PTR [rbp+0x8]
  42b1e0:	sub    rax,QWORD PTR [rbp+0x0]
  42b1e4:	mov    DWORD PTR [r12+0x44],eax
  42b1e9:	jmp    0x42af4e
  42b1ee:	lea    rdx,[rip+0x2afe0]        # 0x4561d5
  42b1f5:	mov    rcx,rsi
  42b1f8:	call   0x427e40
  42b1fd:	mov    rdx,QWORD PTR [r13+0x0]
  42b201:	lea    rax,[rdx+0x1]
  42b205:	mov    QWORD PTR [r13+0x0],rax
  42b209:	movzx  edx,BYTE PTR [rdx+0x1]
  42b20d:	test   BYTE PTR [rdi+rdx*2],0x4
  42b211:	mov    rax,rdx
  42b214:	jne    0x42b24c
  42b216:	jmp    0x42aff0
  42b21b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b220:	lea    rdx,[rip+0x37499]        # 0x4626c0
  42b227:	mov    rcx,rsi
  42b22a:	call   0x427e40
  42b22f:	mov    rax,QWORD PTR [r13+0x0]
  42b233:	lea    rdx,[rax+0x1]
  42b237:	mov    QWORD PTR [r13+0x0],rdx
  42b23b:	movzx  edx,BYTE PTR [rax+0x1]
  42b23f:	test   BYTE PTR [rdi+rdx*2],0x4
  42b243:	mov    rax,rdx
  42b246:	je     0x42b4c2
  42b24c:	test   al,al
  42b24e:	mov    BYTE PTR [rip+0x3746c],al        # 0x4626c0
  42b254:	je     0x42b22f
  42b256:	jmp    0x42b220
  42b258:	cmp    BYTE PTR [rdx],0x5f
  42b25b:	jne    0x42adbb
  42b261:	add    rdx,0x1
  42b265:	mov    QWORD PTR [rsp+0x50],0x0
  42b26e:	mov    QWORD PTR [rsp+0x48],0x0
  42b277:	mov    QWORD PTR [rsp+0x38],rdx
  42b27c:	mov    rdx,QWORD PTR [r13+0x0]
  42b280:	mov    QWORD PTR [rsp+0x40],0x0
  42b289:	sub    rbx,rdx
  42b28c:	test   ebx,ebx
  42b28e:	mov    r8,rbx
  42b291:	je     0x42b29b
  42b293:	mov    rcx,rbp
  42b296:	call   0x427d60
  42b29b:	cmp    DWORD PTR [r12+0x44],0xffffffff
  42b2a1:	je     0x42b4b0
  42b2a7:	mov    eax,DWORD PTR [r12]
  42b2ab:	lea    rdx,[rip+0x2af4c]        # 0x4561fe
  42b2b2:	mov    rcx,rbp
  42b2b5:	mov    DWORD PTR [rsp+0x2c],eax
  42b2b9:	or     eax,0x1
  42b2bc:	mov    DWORD PTR [r12],eax
  42b2c0:	call   0x427e40
  42b2c5:	cmp    rdi,QWORD PTR [rsp+0x38]
  42b2ca:	jbe    0x42b4a0
  42b2d0:	lea    rbx,[rsp+0x40]
  42b2d5:	lea    r15,[rsp+0x60]
  42b2da:	jmp    0x42b3ab
  42b2df:	nop
  42b2e0:	lea    r9,[r14+0x1]
  42b2e4:	mov    r8,r15
  42b2e7:	mov    rdx,rsi
  42b2ea:	mov    rcx,r12
  42b2ed:	mov    QWORD PTR [rsp+0x38],r9
  42b2f2:	call   0x429e80
  42b2f7:	test   eax,eax
  42b2f9:	je     0x42b440
  42b2ff:	lea    rdx,[rip+0x2aee9]        # 0x4561ef
  42b306:	mov    rcx,rbx
  42b309:	call   0x427e40
  42b30e:	mov    r8,QWORD PTR [rsp+0x68]
  42b313:	mov    rcx,rbx
  42b316:	mov    rdx,r15
  42b319:	call   0x427f80
  42b31e:	mov    rcx,QWORD PTR [rsp+0x60]
  42b323:	test   rcx,rcx
  42b326:	je     0x42b348
  42b328:	call   0x4494c8
  42b32d:	mov    QWORD PTR [rsp+0x68],0x0
  42b336:	mov    QWORD PTR [rsp+0x70],0x0
  42b33f:	mov    QWORD PTR [rsp+0x60],0x0
  42b348:	lea    rdx,[rip+0x2aea4]        # 0x4561f3
  42b34f:	mov    rcx,rbx
  42b352:	call   0x427e40
  42b357:	mov    rax,QWORD PTR [rsp+0x38]
  42b35c:	cmp    BYTE PTR [rax],0x4c
  42b35f:	jne    0x42b440
  42b365:	add    rax,0x1
  42b369:	mov    QWORD PTR [rsp+0x38],rax
  42b36e:	mov    rdx,rbx
  42b371:	mov    rcx,rsi
  42b374:	call   0x427ec0
  42b379:	test   eax,eax
  42b37b:	je     0x42b440
  42b381:	mov    r8,QWORD PTR [rsp+0x48]
  42b386:	mov    rdx,rbx
  42b389:	mov    rcx,rbp
  42b38c:	call   0x427f80
  42b391:	lea    rdx,[rip+0x2b2de]        # 0x456676
  42b398:	mov    rcx,rbp
  42b39b:	call   0x427e40
  42b3a0:	cmp    rdi,QWORD PTR [rsp+0x38]
  42b3a5:	jbe    0x42b4a0
  42b3ab:	mov    rcx,QWORD PTR [rsp+0x40]
  42b3b0:	test   rcx,rcx
  42b3b3:	je     0x42b3d5
  42b3b5:	call   0x4494c8
  42b3ba:	mov    QWORD PTR [rsp+0x48],0x0
  42b3c3:	mov    QWORD PTR [rsp+0x50],0x0
  42b3cc:	mov    QWORD PTR [rsp+0x40],0x0
  42b3d5:	mov    r14,QWORD PTR [rsp+0x38]
  42b3da:	movzx  eax,BYTE PTR [r14]
  42b3de:	cmp    al,0x4c
  42b3e0:	je     0x42b430
  42b3e2:	cmp    al,0x58
  42b3e4:	je     0x42b2e0
  42b3ea:	mov    r8,rbx
  42b3ed:	mov    rdx,rsi
  42b3f0:	mov    rcx,r12
  42b3f3:	call   0x429e80
  42b3f8:	test   eax,eax
  42b3fa:	je     0x42b440
  42b3fc:	cmp    r14,QWORD PTR [rsp+0x38]
  42b401:	jne    0x42b381
  42b407:	mov    eax,DWORD PTR [rsp+0x2c]
  42b40b:	mov    DWORD PTR [r12],eax
  42b40f:	jmp    0x42ae5a
  42b414:	lea    rdx,[rip+0x2b24d]        # 0x456668
  42b41b:	mov    rcx,rsi
  42b41e:	call   0x427e40
  42b423:	add    QWORD PTR [r13+0x0],0x1
  42b428:	jmp    0x42b0ee
  42b42d:	nop    DWORD PTR [rax]
  42b430:	lea    r9,[r14+0x1]
  42b434:	mov    QWORD PTR [rsp+0x38],r9
  42b439:	jmp    0x42b36e
  42b43e:	xchg   ax,ax
  42b440:	mov    rcx,QWORD PTR [rsp+0x40]
  42b445:	test   rcx,rcx
  42b448:	je     0x42b46a
  42b44a:	call   0x4494c8
  42b44f:	mov    QWORD PTR [rsp+0x48],0x0
  42b458:	mov    QWORD PTR [rsp+0x50],0x0
  42b461:	mov    QWORD PTR [rsp+0x40],0x0
  42b46a:	cmp    rdi,QWORD PTR [rsp+0x38]
  42b46f:	ja     0x42b476
  42b471:	sub    QWORD PTR [rbp+0x8],0x1
  42b476:	lea    rdx,[rip+0x2ad89]        # 0x456206
  42b47d:	mov    rcx,rbp
  42b480:	call   0x427e40
  42b485:	mov    eax,DWORD PTR [rsp+0x2c]
  42b489:	mov    rbx,QWORD PTR [r13+0x0]
  42b48d:	mov    DWORD PTR [r12],eax
  42b491:	jmp    0x42ae4e
  42b496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b4a0:	mov    rcx,QWORD PTR [rsp+0x40]
  42b4a5:	test   rcx,rcx
  42b4a8:	jne    0x42b44a
  42b4aa:	jmp    0x42b471
  42b4ac:	nop    DWORD PTR [rax+0x0]
  42b4b0:	mov    rax,QWORD PTR [rbp+0x8]
  42b4b4:	sub    rax,QWORD PTR [rbp+0x0]
  42b4b8:	mov    DWORD PTR [r12+0x44],eax
  42b4bd:	jmp    0x42b2a7
  42b4c2:	cmp    r14b,0x55
  42b4c6:	jne    0x42b0ee
  42b4cc:	lea    rdx,[rip+0x2b1a1]        # 0x456674
  42b4d3:	mov    rcx,rsi
  42b4d6:	call   0x427e40
  42b4db:	jmp    0x42b0ee
  42b4e0:	mov    rdx,rax
  42b4e3:	mov    rcx,rsi
  42b4e6:	mov    QWORD PTR [rsp+0x20],rax
  42b4eb:	call   0x427e40
  42b4f0:	mov    rax,QWORD PTR [rsp+0x20]
  42b4f5:	jmp    0x42b0b6
  42b4fa:	mov    r8d,DWORD PTR [rsp+0x20]
  42b4ff:	mov    rdx,QWORD PTR [r13+0x0]
  42b503:	mov    rcx,rsi
  42b506:	call   0x427d60
  42b50b:	jmp    0x42b0be
  42b510:	push   rbp
  42b511:	push   rdi
  42b512:	push   rsi
  42b513:	push   rbx
  42b514:	sub    rsp,0x28
  42b518:	mov    rdi,rcx
  42b51b:	mov    rcx,rdx
  42b51e:	mov    rbx,rdx
  42b521:	mov    rbp,r8
  42b524:	call   0x4276e0
  42b529:	cmp    eax,0xffffffff
  42b52c:	mov    esi,eax
  42b52e:	je     0x42b571
  42b530:	mov    rcx,QWORD PTR [rbx]
  42b533:	call   0x4493c0
  42b538:	xor    edx,edx
  42b53a:	cmp    esi,eax
  42b53c:	jle    0x42b550
  42b53e:	mov    eax,edx
  42b540:	add    rsp,0x28
  42b544:	pop    rbx
  42b545:	pop    rsi
  42b546:	pop    rdi
  42b547:	pop    rbp
  42b548:	ret    
  42b549:	nop    DWORD PTR [rax+0x0]
  42b550:	mov    rdx,rbx
  42b553:	mov    r9,rbp
  42b556:	mov    r8d,esi
  42b559:	mov    rcx,rdi
  42b55c:	call   0x42ad20
  42b561:	mov    edx,0x1
  42b566:	mov    eax,edx
  42b568:	add    rsp,0x28
  42b56c:	pop    rbx
  42b56d:	pop    rsi
  42b56e:	pop    rdi
  42b56f:	pop    rbp
  42b570:	ret    
  42b571:	xor    edx,edx
  42b573:	mov    eax,edx
  42b575:	add    rsp,0x28
  42b579:	pop    rbx
  42b57a:	pop    rsi
  42b57b:	pop    rdi
  42b57c:	pop    rbp
  42b57d:	ret    
  42b57e:	xchg   ax,ax
  42b580:	push   r15
  42b582:	push   r14
  42b584:	push   r13
  42b586:	push   r12
  42b588:	push   rbp
  42b589:	push   rdi
  42b58a:	push   rsi
  42b58b:	push   rbx
  42b58c:	sub    rsp,0xd8
  42b593:	lea    rsi,[rsp+0x60]
  42b598:	mov    rbx,rcx
  42b59b:	mov    r13,rdx
  42b59e:	mov    r12d,r8d
  42b5a1:	mov    rdi,rsi
  42b5a4:	call   0x4493c0
  42b5a9:	mov    ecx,0xe
  42b5ae:	mov    rbp,rax
  42b5b1:	xor    eax,eax
  42b5b3:	rep stos QWORD PTR es:[rdi],rax
  42b5b6:	mov    BYTE PTR [r13+0x0],0x0
  42b5bb:	movzx  eax,BYTE PTR [rbx]
  42b5be:	mov    DWORD PTR [rsp+0x60],r12d
  42b5c3:	cmp    al,0x5f
  42b5c5:	je     0x42b650
  42b5cb:	cmp    ebp,0x2
  42b5ce:	jle    0x42b630
  42b5d0:	cmp    al,0x6f
  42b5d2:	je     0x42b6d0
  42b5d8:	cmp    ebp,0x4
  42b5db:	jle    0x42b630
  42b5dd:	lea    rdx,[rip+0x2b0ca]        # 0x4566ae
  42b5e4:	mov    r8d,0x4
  42b5ea:	mov    rcx,rbx
  42b5ed:	call   0x449458
  42b5f2:	test   eax,eax
  42b5f4:	jne    0x42b630
  42b5f6:	movsx  edx,BYTE PTR [rbx+0x4]
  42b5fa:	lea    rcx,[rip+0x1fb5f]        # 0x44b160
  42b601:	call   0x4493e8
  42b606:	test   rax,rax
  42b609:	je     0x42b630
  42b60b:	lea    rdx,[rsp+0x38]
  42b610:	lea    r8,[rsp+0x40]
  42b615:	add    rbx,0x5
  42b619:	mov    rcx,rsi
  42b61c:	mov    QWORD PTR [rsp+0x38],rbx
  42b621:	call   0x429e80
  42b626:	test   eax,eax
  42b628:	jne    0x42b665
  42b62a:	nop    WORD PTR [rax+rax*1+0x0]
  42b630:	xor    ebx,ebx
  42b632:	mov    rcx,rsi
  42b635:	call   0x427820
  42b63a:	mov    eax,ebx
  42b63c:	add    rsp,0xd8
  42b643:	pop    rbx
  42b644:	pop    rsi
  42b645:	pop    rdi
  42b646:	pop    rbp
  42b647:	pop    r12
  42b649:	pop    r13
  42b64b:	pop    r14
  42b64d:	pop    r15
  42b64f:	ret    
  42b650:	cmp    BYTE PTR [rbx+0x1],0x5f
  42b654:	je     0x42b7c0
  42b65a:	cmp    ebp,0x2
  42b65d:	jg     0x42b5d8
  42b663:	jmp    0x42b630
  42b665:	mov    rcx,r13
  42b668:	movabs rdi,0x726f74617265706f
  42b672:	call   0x4493c0
  42b677:	add    rax,r13
  42b67a:	mov    QWORD PTR [rax],rdi
  42b67d:	mov    edx,0x20
  42b682:	mov    rcx,r13
  42b685:	mov    WORD PTR [rax+0x8],dx
  42b689:	mov    rbx,QWORD PTR [rsp+0x40]
  42b68e:	mov    r8,QWORD PTR [rsp+0x48]
  42b693:	mov    rdx,rbx
  42b696:	sub    r8,rbx
  42b699:	call   0x4493b8
  42b69e:	mov    rcx,rbx
  42b6a1:	mov    ebx,0x1
  42b6a6:	call   0x4494c8
  42b6ab:	mov    QWORD PTR [rsp+0x48],0x0
  42b6b4:	mov    QWORD PTR [rsp+0x50],0x0
  42b6bd:	mov    QWORD PTR [rsp+0x40],0x0
  42b6c6:	jmp    0x42b632
  42b6cb:	nop    DWORD PTR [rax+rax*1+0x0]
  42b6d0:	cmp    BYTE PTR [rbx+0x1],0x70
  42b6d4:	jne    0x42b5d8
  42b6da:	movsx  edx,BYTE PTR [rbx+0x2]
  42b6de:	lea    rcx,[rip+0x1fa7b]        # 0x44b160
  42b6e5:	call   0x4493e8
  42b6ea:	test   rax,rax
  42b6ed:	je     0x42b5d8
  42b6f3:	cmp    ebp,0x9
  42b6f6:	jle    0x42b880
  42b6fc:	lea    rcx,[rbx+0x3]
  42b700:	lea    rdx,[rip+0x2af9f]        # 0x4566a6
  42b707:	mov    r8d,0x7
  42b70d:	call   0x449458
  42b712:	test   eax,eax
  42b714:	jne    0x42b880
  42b71a:	lea    edi,[rbp-0xa]
  42b71d:	lea    rax,[rip+0x2b91c]        # 0x457040
  42b724:	xor    ebp,ebp
  42b726:	lea    r15,[rbx+0xa]
  42b72a:	mov    QWORD PTR [rsp+0x28],rax
  42b72f:	mov    r12,rax
  42b732:	movsxd r14,edi
  42b735:	jmp    0x42b752
  42b737:	nop    WORD PTR [rax+rax*1+0x0]
  42b740:	add    rbp,0x1
  42b744:	add    r12,0x18
  42b748:	cmp    rbp,0x4f
  42b74c:	je     0x42b630
  42b752:	mov    rbx,QWORD PTR [r12]
  42b756:	mov    rcx,rbx
  42b759:	call   0x4493c0
  42b75e:	cmp    edi,eax
  42b760:	jne    0x42b740
  42b762:	mov    r8,r14
  42b765:	mov    rdx,r15
  42b768:	mov    rcx,rbx
  42b76b:	call   0x449458
  42b770:	test   eax,eax
  42b772:	jne    0x42b740
  42b774:	movabs rax,0x726f74617265706f
  42b77e:	mov    rdx,QWORD PTR [rsp+0x28]
  42b783:	lea    rcx,[r13+0x8]
  42b787:	mov    QWORD PTR [r13+0x0],rax
  42b78b:	lea    rax,[rbp+rbp*2+0x0]
  42b790:	mov    BYTE PTR [r13+0x8],0x0
  42b795:	mov    ebx,0x1
  42b79a:	mov    rdx,QWORD PTR [rdx+rax*8+0x8]
  42b79f:	call   0x4493d8
  42b7a4:	mov    rcx,r13
  42b7a7:	call   0x4493c0
  42b7ac:	mov    ecx,0x3d
  42b7b1:	mov    WORD PTR [r13+rax*1+0x0],cx
  42b7b7:	jmp    0x42b632
  42b7bc:	nop    DWORD PTR [rax+0x0]
  42b7c0:	movzx  eax,BYTE PTR [rbx+0x2]
  42b7c4:	cmp    al,0x6f
  42b7c6:	je     0x42b8f1
  42b7cc:	mov    rdx,QWORD PTR [rip+0x2f65d]        # 0x45ae30
  42b7d3:	movzx  ecx,al
  42b7d6:	test   BYTE PTR [rdx+rcx*2],0x8
  42b7da:	je     0x42b65a
  42b7e0:	movzx  ecx,BYTE PTR [rbx+0x3]
  42b7e4:	test   BYTE PTR [rdx+rcx*2],0x8
  42b7e8:	je     0x42b65a
  42b7ee:	cmp    BYTE PTR [rbx+0x4],0x0
  42b7f2:	jne    0x42b93b
  42b7f8:	lea    rax,[rip+0x2b841]        # 0x457040
  42b7ff:	xor    edi,edi
  42b801:	add    rbx,0x2
  42b805:	mov    QWORD PTR [rsp+0x28],rax
  42b80a:	mov    rbp,rax
  42b80d:	jmp    0x42b822
  42b80f:	nop
  42b810:	add    rdi,0x1
  42b814:	add    rbp,0x18
  42b818:	cmp    rdi,0x4f
  42b81c:	je     0x42b630
  42b822:	mov    r12,QWORD PTR [rbp+0x0]
  42b826:	mov    rcx,r12
  42b829:	call   0x4493c0
  42b82e:	cmp    rax,0x2
  42b832:	jne    0x42b810
  42b834:	mov    r8d,0x2
  42b83a:	mov    rdx,rbx
  42b83d:	mov    rcx,r12
  42b840:	call   0x449458
  42b845:	test   eax,eax
  42b847:	jne    0x42b810
  42b849:	movabs rax,0x726f74617265706f
  42b853:	mov    BYTE PTR [r13+0x8],0x0
  42b858:	mov    QWORD PTR [r13+0x0],rax
  42b85c:	lea    rax,[rdi+rdi*2]
  42b860:	mov    rdx,QWORD PTR [rsp+0x28]
  42b865:	lea    rcx,[r13+0x8]
  42b869:	mov    ebx,0x1
  42b86e:	mov    rdx,QWORD PTR [rdx+rax*8+0x8]
  42b873:	call   0x4493d8
  42b878:	jmp    0x42b632
  42b87d:	nop    DWORD PTR [rax]
  42b880:	lea    edi,[rbp-0x3]
  42b883:	lea    rax,[rip+0x2b7b6]        # 0x457040
  42b88a:	xor    ebp,ebp
  42b88c:	add    rbx,0x3
  42b890:	mov    QWORD PTR [rsp+0x28],rax
  42b895:	mov    r12,rax
  42b898:	movsxd r15,edi
  42b89b:	jmp    0x42b8b2
  42b89d:	nop    DWORD PTR [rax]
  42b8a0:	add    rbp,0x1
  42b8a4:	add    r12,0x18
  42b8a8:	cmp    rbp,0x4f
  42b8ac:	je     0x42b630
  42b8b2:	mov    r14,QWORD PTR [r12]
  42b8b6:	mov    rcx,r14
  42b8b9:	call   0x4493c0
  42b8be:	cmp    edi,eax
  42b8c0:	jne    0x42b8a0
  42b8c2:	mov    r8,r15
  42b8c5:	mov    rdx,rbx
  42b8c8:	mov    rcx,r14
  42b8cb:	call   0x449458
  42b8d0:	test   eax,eax
  42b8d2:	jne    0x42b8a0
  42b8d4:	movabs rax,0x726f74617265706f
  42b8de:	mov    BYTE PTR [r13+0x8],0x0
  42b8e3:	mov    QWORD PTR [r13+0x0],rax
  42b8e7:	lea    rax,[rbp+rbp*2+0x0]
  42b8ec:	jmp    0x42b860
  42b8f1:	cmp    BYTE PTR [rbx+0x3],0x70
  42b8f5:	jne    0x42b7cc
  42b8fb:	lea    rdx,[rsp+0x38]
  42b900:	lea    r8,[rsp+0x40]
  42b905:	add    rbx,0x4
  42b909:	mov    rcx,rsi
  42b90c:	mov    QWORD PTR [rsp+0x38],rbx
  42b911:	call   0x429e80
  42b916:	test   eax,eax
  42b918:	je     0x42b630
  42b91e:	mov    rcx,r13
  42b921:	call   0x4493c0
  42b926:	movabs rdx,0x726f74617265706f
  42b930:	add    rax,r13
  42b933:	mov    QWORD PTR [rax],rdx
  42b936:	jmp    0x42b67d
  42b93b:	cmp    al,0x61
  42b93d:	jne    0x42b630
  42b943:	cmp    BYTE PTR [rbx+0x5],0x0
  42b947:	jne    0x42b630
  42b94d:	lea    rax,[rip+0x2b6ec]        # 0x457040
  42b954:	xor    edi,edi
  42b956:	add    rbx,0x2
  42b95a:	mov    QWORD PTR [rsp+0x28],rax
  42b95f:	mov    rbp,rax
  42b962:	jmp    0x42b976
  42b964:	add    rdi,0x1
  42b968:	add    rbp,0x18
  42b96c:	cmp    rdi,0x4f
  42b970:	je     0x42b630
  42b976:	mov    r12,QWORD PTR [rbp+0x0]
  42b97a:	mov    rcx,r12
  42b97d:	call   0x4493c0
  42b982:	cmp    rax,0x3
  42b986:	jne    0x42b964
  42b988:	mov    r8d,0x3
  42b98e:	mov    rdx,rbx
  42b991:	mov    rcx,r12
  42b994:	call   0x449458
  42b999:	test   eax,eax
  42b99b:	jne    0x42b964
  42b99d:	jmp    0x42b849
  42b9a2:	nop    DWORD PTR [rax+0x0]
  42b9a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b9b0:	push   r13
  42b9b2:	push   r12
  42b9b4:	push   rbp
  42b9b5:	push   rdi
  42b9b6:	push   rsi
  42b9b7:	push   rbx
  42b9b8:	sub    rsp,0x58
  42b9bc:	mov    r13d,0x1
  42b9c2:	mov    rsi,rdx
  42b9c5:	lea    rdx,[rip+0x2ace7]        # 0x4566b3
  42b9cc:	mov    rbp,rcx
  42b9cf:	mov    rcx,r8
  42b9d2:	mov    rdi,r8
  42b9d5:	call   0x427e40
  42b9da:	lea    rdx,[rsp+0x2c]
  42b9df:	mov    rcx,rsi
  42b9e2:	call   0x4277a0
  42b9e7:	test   eax,eax
  42b9e9:	je     0x42ba5a
  42b9eb:	mov    eax,DWORD PTR [rsp+0x2c]
  42b9ef:	xor    ebx,ebx
  42b9f1:	lea    r12,[rsp+0x30]
  42b9f6:	test   eax,eax
  42b9f8:	jle    0x42ba5a
  42b9fa:	mov    r9,QWORD PTR [rsi]
  42b9fd:	movzx  eax,BYTE PTR [r9]
  42ba01:	cmp    al,0x5a
  42ba03:	je     0x42bad3
  42ba09:	nop    DWORD PTR [rax+0x0]
  42ba10:	cmp    al,0x7a
  42ba12:	je     0x42ba90
  42ba14:	mov    r8,r12
  42ba17:	mov    rdx,rsi
  42ba1a:	mov    rcx,rbp
  42ba1d:	call   0x429e80
  42ba22:	test   eax,eax
  42ba24:	mov    r13d,eax
  42ba27:	jne    0x42baf0
  42ba2d:	mov    rcx,QWORD PTR [rsp+0x30]
  42ba32:	test   rcx,rcx
  42ba35:	je     0x42ba57
  42ba37:	call   0x4494c8
  42ba3c:	mov    QWORD PTR [rsp+0x38],0x0
  42ba45:	mov    QWORD PTR [rsp+0x40],0x0
  42ba4e:	mov    QWORD PTR [rsp+0x30],0x0
  42ba57:	xor    r13d,r13d
  42ba5a:	mov    rax,QWORD PTR [rdi+0x8]
  42ba5e:	cmp    BYTE PTR [rax-0x1],0x3e
  42ba62:	je     0x42bb30
  42ba68:	lea    rdx,[rip+0x2ac55]        # 0x4566c4
  42ba6f:	mov    rcx,rdi
  42ba72:	call   0x427e40
  42ba77:	mov    eax,r13d
  42ba7a:	add    rsp,0x58
  42ba7e:	pop    rbx
  42ba7f:	pop    rsi
  42ba80:	pop    rdi
  42ba81:	pop    rbp
  42ba82:	pop    r12
  42ba84:	pop    r13
  42ba86:	ret    
  42ba87:	nop    WORD PTR [rax+rax*1+0x0]
  42ba90:	add    r9,0x1
  42ba94:	mov    r8,rdi
  42ba97:	mov    rdx,rsi
  42ba9a:	mov    QWORD PTR [rsi],r9
  42ba9d:	mov    rcx,rbp
  42baa0:	call   0x42b9b0
  42baa5:	test   eax,eax
  42baa7:	mov    r13d,eax
  42baaa:	je     0x42ba57
  42baac:	add    ebx,0x1
  42baaf:	cmp    DWORD PTR [rsp+0x2c],ebx
  42bab3:	jle    0x42ba5a
  42bab5:	lea    rdx,[rip+0x2a744]        # 0x456200
  42babc:	mov    rcx,rdi
  42babf:	call   0x427e40
  42bac4:	mov    r9,QWORD PTR [rsi]
  42bac7:	movzx  eax,BYTE PTR [r9]
  42bacb:	cmp    al,0x5a
  42bacd:	jne    0x42ba10
  42bad3:	add    r9,0x1
  42bad7:	lea    rdx,[rip+0x2abe0]        # 0x4566be
  42bade:	mov    rcx,rdi
  42bae1:	mov    QWORD PTR [rsi],r9
  42bae4:	call   0x427e40
  42bae9:	jmp    0x42baac
  42baeb:	nop    DWORD PTR [rax+rax*1+0x0]
  42baf0:	mov    r8,QWORD PTR [rsp+0x38]
  42baf5:	mov    rcx,rdi
  42baf8:	mov    rdx,r12
  42bafb:	call   0x427f80
  42bb00:	mov    rcx,QWORD PTR [rsp+0x30]
  42bb05:	test   rcx,rcx
  42bb08:	je     0x42baac
  42bb0a:	call   0x4494c8
  42bb0f:	mov    QWORD PTR [rsp+0x38],0x0
  42bb18:	mov    QWORD PTR [rsp+0x40],0x0
  42bb21:	mov    QWORD PTR [rsp+0x30],0x0
  42bb2a:	jmp    0x42baac
  42bb2c:	nop    DWORD PTR [rax+0x0]
  42bb30:	lea    rdx,[rip+0x2a6ba]        # 0x4561f1
  42bb37:	mov    rcx,rdi
  42bb3a:	call   0x427e40
  42bb3f:	jmp    0x42ba68
  42bb44:	xchg   ax,ax
  42bb46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bb50:	push   r12
  42bb52:	push   rbp
  42bb53:	push   rdi
  42bb54:	push   rsi
  42bb55:	push   rbx
  42bb56:	sub    rsp,0x20
  42bb5a:	mov    rdi,QWORD PTR [rdx]
  42bb5d:	mov    eax,DWORD PTR [rcx+0x68]
  42bb60:	mov    rbp,rcx
  42bb63:	mov    rbx,rdx
  42bb66:	mov    rsi,r8
  42bb69:	nop    DWORD PTR [rax+0x0]
  42bb70:	test   eax,eax
  42bb72:	mov    QWORD PTR [rsi+0x10],0x0
  42bb7a:	mov    QWORD PTR [rsi+0x8],0x0
  42bb82:	mov    QWORD PTR [rsi],0x0
  42bb89:	jg     0x42bbf3
  42bb8b:	mov    rax,QWORD PTR [rbx]
  42bb8e:	cmp    BYTE PTR [rax],0x6e
  42bb91:	jne    0x42bc20
  42bb97:	add    rax,0x1
  42bb9b:	mov    rcx,rbx
  42bb9e:	mov    QWORD PTR [rbx],rax
  42bba1:	call   0x4276e0
  42bba6:	test   eax,eax
  42bba8:	mov    DWORD PTR [rbp+0x68],eax
  42bbab:	jle    0x42bbe6
  42bbad:	cmp    eax,0x9
  42bbb0:	mov    rdi,QWORD PTR [rbx]
  42bbb3:	jle    0x42bb70
  42bbb5:	cmp    BYTE PTR [rdi],0x5f
  42bbb8:	jne    0x42bbe6
  42bbba:	add    rdi,0x1
  42bbbe:	mov    QWORD PTR [rbx],rdi
  42bbc1:	jmp    0x42bb70
  42bbc3:	mov    ecx,0x18
  42bbc8:	call   0x43baf0
  42bbcd:	mov    QWORD PTR [rbp+0x60],rax
  42bbd1:	mov    r12,rax
  42bbd4:	mov    r8,r12
  42bbd7:	mov    rdx,rbx
  42bbda:	mov    rcx,rbp
  42bbdd:	call   0x429e80
  42bbe2:	test   eax,eax
  42bbe4:	jne    0x42bc5a
  42bbe6:	xor    eax,eax
  42bbe8:	add    rsp,0x20
  42bbec:	pop    rbx
  42bbed:	pop    rsi
  42bbee:	pop    rdi
  42bbef:	pop    rbp
  42bbf0:	pop    r12
  42bbf2:	ret    
  42bbf3:	mov    rdx,QWORD PTR [rbp+0x60]
  42bbf7:	sub    eax,0x1
  42bbfa:	mov    DWORD PTR [rbp+0x68],eax
  42bbfd:	test   rdx,rdx
  42bc00:	je     0x42bbe6
  42bc02:	mov    r8,QWORD PTR [rdx+0x8]
  42bc06:	mov    rcx,rsi
  42bc09:	call   0x427f80
  42bc0e:	mov    eax,0x1
  42bc13:	add    rsp,0x20
  42bc17:	pop    rbx
  42bc18:	pop    rsi
  42bc19:	pop    rdi
  42bc1a:	pop    rbp
  42bc1b:	pop    r12
  42bc1d:	ret    
  42bc1e:	xchg   ax,ax
  42bc20:	mov    r12,QWORD PTR [rbp+0x60]
  42bc24:	test   r12,r12
  42bc27:	je     0x42bbc3
  42bc29:	mov    rcx,QWORD PTR [r12]
  42bc2d:	test   rcx,rcx
  42bc30:	je     0x42bbd4
  42bc32:	call   0x4494c8
  42bc37:	mov    QWORD PTR [r12+0x8],0x0
  42bc40:	mov    QWORD PTR [r12+0x10],0x0
  42bc49:	mov    QWORD PTR [r12],0x0
  42bc51:	mov    r12,QWORD PTR [rbp+0x60]
  42bc55:	jmp    0x42bbd4
  42bc5a:	mov    rdx,QWORD PTR [rbp+0x60]
  42bc5e:	mov    rcx,rsi
  42bc61:	mov    r8,QWORD PTR [rdx+0x8]
  42bc65:	call   0x427f80
  42bc6a:	mov    r8,QWORD PTR [rbx]
  42bc6d:	mov    rdx,rdi
  42bc70:	mov    rcx,rbp
  42bc73:	sub    r8d,edi
  42bc76:	call   0x4282d0
  42bc7b:	mov    eax,0x1
  42bc80:	add    rsp,0x20
  42bc84:	pop    rbx
  42bc85:	pop    rsi
  42bc86:	pop    rdi
  42bc87:	pop    rbp
  42bc88:	pop    r12
  42bc8a:	ret    
  42bc8b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bc90:	push   r15
  42bc92:	push   r14
  42bc94:	push   r13
  42bc96:	push   r12
  42bc98:	push   rbp
  42bc99:	push   rdi
  42bc9a:	push   rsi
  42bc9b:	push   rbx
  42bc9c:	sub    rsp,0x58
  42bca0:	test   BYTE PTR [rcx],0x1
  42bca3:	mov    rbx,rcx
  42bca6:	mov    r13,rdx
  42bca9:	mov    r12,r8
  42bcac:	jne    0x42bf38
  42bcb2:	mov    rdx,QWORD PTR [r13+0x0]
  42bcb6:	movzx  eax,BYTE PTR [rdx]
  42bcb9:	xor    esi,esi
  42bcbb:	test   al,al
  42bcbd:	lea    rdi,[rsp+0x30]
  42bcc2:	setne  r8b
  42bcc6:	cmp    al,0x5f
  42bcc8:	lea    rbp,[rsp+0x28]
  42bccd:	setne  cl
  42bcd0:	lea    r14,[rsp+0x24]
  42bcd5:	lea    r15,[rsp+0x20]
  42bcda:	test   r8b,cl
  42bcdd:	je     0x42bd71
  42bce3:	cmp    al,0x65
  42bce5:	je     0x42bd71
  42bceb:	cmp    al,0x54
  42bced:	je     0x42bda2
  42bcf3:	cmp    al,0x4e
  42bcf5:	je     0x42bda2
  42bcfb:	test   esi,esi
  42bcfd:	je     0x42bd08
  42bcff:	test   BYTE PTR [rbx],0x1
  42bd02:	jne    0x42bf6a
  42bd08:	mov    r8,rdi
  42bd0b:	mov    rdx,r13
  42bd0e:	mov    rcx,rbx
  42bd11:	call   0x42bb50
  42bd16:	test   eax,eax
  42bd18:	je     0x42bf10
  42bd1e:	test   BYTE PTR [rbx],0x1
  42bd21:	jne    0x42bf23
  42bd27:	mov    rcx,QWORD PTR [rsp+0x30]
  42bd2c:	mov    esi,0x1
  42bd31:	test   rcx,rcx
  42bd34:	je     0x42bd56
  42bd36:	call   0x4494c8
  42bd3b:	mov    QWORD PTR [rsp+0x38],0x0
  42bd44:	mov    QWORD PTR [rsp+0x40],0x0
  42bd4d:	mov    QWORD PTR [rsp+0x30],0x0
  42bd56:	mov    rdx,QWORD PTR [r13+0x0]
  42bd5a:	movzx  eax,BYTE PTR [rdx]
  42bd5d:	test   al,al
  42bd5f:	setne  r8b
  42bd63:	cmp    al,0x5f
  42bd65:	setne  cl
  42bd68:	test   r8b,cl
  42bd6b:	jne    0x42bce3
  42bd71:	mov    ecx,DWORD PTR [rbx+0x68]
  42bd74:	test   ecx,ecx
  42bd76:	jg     0x42bceb
  42bd7c:	cmp    al,0x65
  42bd7e:	je     0x42bf7e
  42bd84:	test   BYTE PTR [rbx],0x1
  42bd87:	je     0x42bd98
  42bd89:	lea    rdx,[rip+0x2a463]        # 0x4561f3
  42bd90:	mov    rcx,r12
  42bd93:	call   0x427e40
  42bd98:	mov    eax,0x1
  42bd9d:	jmp    0x42bf12
  42bda2:	lea    rax,[rdx+0x1]
  42bda6:	mov    QWORD PTR [r13+0x0],rax
  42bdaa:	cmp    BYTE PTR [rdx],0x4e
  42bdad:	je     0x42bef4
  42bdb3:	mov    DWORD PTR [rsp+0x20],0x1
  42bdbb:	test   DWORD PTR [rbx],0x3800
  42bdc1:	je     0x42bdcd
  42bdc3:	cmp    DWORD PTR [rbx+0x30],0x9
  42bdc7:	jg     0x42beb4
  42bdcd:	mov    rdx,r14
  42bdd0:	mov    rcx,r13
  42bdd3:	call   0x4277a0
  42bdd8:	test   eax,eax
  42bdda:	je     0x42bf10
  42bde0:	test   DWORD PTR [rbx],0x3c00
  42bde6:	mov    eax,DWORD PTR [rsp+0x24]
  42bdea:	jne    0x42bed0
  42bdf0:	test   eax,eax
  42bdf2:	js     0x42bf10
  42bdf8:	cmp    DWORD PTR [rbx+0x30],eax
  42bdfb:	jg     0x42be11
  42bdfd:	jmp    0x42bf10
  42be02:	mov    rcx,QWORD PTR [rsp+0x30]
  42be07:	mov    esi,0x1
  42be0c:	test   rcx,rcx
  42be0f:	jne    0x42be77
  42be11:	mov    r8d,DWORD PTR [rbx+0x68]
  42be15:	test   r8d,r8d
  42be18:	jle    0x42bea4
  42be1e:	movsxd rdx,DWORD PTR [rsp+0x24]
  42be23:	mov    rax,QWORD PTR [rbx+0x8]
  42be27:	test   esi,esi
  42be29:	mov    rax,QWORD PTR [rax+rdx*8]
  42be2d:	mov    QWORD PTR [rsp+0x28],rax
  42be32:	je     0x42be3d
  42be34:	test   BYTE PTR [rbx],0x1
  42be37:	jne    0x42bee0
  42be3d:	mov    r8,rdi
  42be40:	mov    rdx,rbp
  42be43:	mov    rcx,rbx
  42be46:	call   0x42bb50
  42be4b:	test   eax,eax
  42be4d:	je     0x42bf10
  42be53:	test   BYTE PTR [rbx],0x1
  42be56:	je     0x42be02
  42be58:	mov    r8,QWORD PTR [rsp+0x38]
  42be5d:	mov    rcx,r12
  42be60:	mov    rdx,rdi
  42be63:	mov    esi,0x1
  42be68:	call   0x427f80
  42be6d:	mov    rcx,QWORD PTR [rsp+0x30]
  42be72:	test   rcx,rcx
  42be75:	je     0x42be11
  42be77:	call   0x4494c8
  42be7c:	mov    r8d,DWORD PTR [rbx+0x68]
  42be80:	mov    QWORD PTR [rsp+0x38],0x0
  42be89:	mov    QWORD PTR [rsp+0x40],0x0
  42be92:	mov    QWORD PTR [rsp+0x30],0x0
  42be9b:	test   r8d,r8d
  42be9e:	jg     0x42be1e
  42bea4:	sub    DWORD PTR [rsp+0x20],0x1
  42bea9:	jns    0x42be1e
  42beaf:	jmp    0x42bd56
  42beb4:	mov    rcx,r13
  42beb7:	call   0x4276e0
  42bebc:	test   eax,eax
  42bebe:	mov    DWORD PTR [rsp+0x24],eax
  42bec2:	jle    0x42bf10
  42bec4:	test   DWORD PTR [rbx],0x3c00
  42beca:	je     0x42bdf8
  42bed0:	sub    eax,0x1
  42bed3:	mov    DWORD PTR [rsp+0x24],eax
  42bed7:	jmp    0x42bdf0
  42bedc:	nop    DWORD PTR [rax+0x0]
  42bee0:	lea    rdx,[rip+0x2a319]        # 0x456200
  42bee7:	mov    rcx,r12
  42beea:	call   0x427e40
  42beef:	jmp    0x42be3d
  42bef4:	mov    rdx,r15
  42bef7:	mov    rcx,r13
  42befa:	call   0x4277a0
  42beff:	test   eax,eax
  42bf01:	jne    0x42bdbb
  42bf07:	nop    WORD PTR [rax+rax*1+0x0]
  42bf10:	xor    eax,eax
  42bf12:	add    rsp,0x58
  42bf16:	pop    rbx
  42bf17:	pop    rsi
  42bf18:	pop    rdi
  42bf19:	pop    rbp
  42bf1a:	pop    r12
  42bf1c:	pop    r13
  42bf1e:	pop    r14
  42bf20:	pop    r15
  42bf22:	ret    
  42bf23:	mov    r8,QWORD PTR [rsp+0x38]
  42bf28:	mov    rdx,rdi
  42bf2b:	mov    rcx,r12
  42bf2e:	call   0x427f80
  42bf33:	jmp    0x42bd27
  42bf38:	lea    rdx,[rip+0x2a2b0]        # 0x4561ef
  42bf3f:	mov    rcx,r8
  42bf42:	call   0x427e40
  42bf47:	mov    rdx,QWORD PTR [r13+0x0]
  42bf4b:	movzx  eax,BYTE PTR [rdx]
  42bf4e:	test   al,al
  42bf50:	jne    0x42bcb9
  42bf56:	lea    rdx,[rip+0x2a2d0]        # 0x45622d
  42bf5d:	mov    rcx,r12
  42bf60:	call   0x427e40
  42bf65:	jmp    0x42bcb2
  42bf6a:	lea    rdx,[rip+0x2a28f]        # 0x456200
  42bf71:	mov    rcx,r12
  42bf74:	call   0x427e40
  42bf79:	jmp    0x42bd08
  42bf7e:	add    rdx,0x1
  42bf82:	test   BYTE PTR [rbx],0x1
  42bf85:	mov    QWORD PTR [r13+0x0],rdx
  42bf89:	je     0x42bd98
  42bf8f:	test   esi,esi
  42bf91:	jne    0x42bfa7
  42bf93:	lea    rdx,[rip+0x2a732]        # 0x4566cc
  42bf9a:	mov    rcx,r12
  42bf9d:	call   0x427e40
  42bfa2:	jmp    0x42bd84
  42bfa7:	lea    rdx,[rip+0x2a6c8]        # 0x456676
  42bfae:	mov    rcx,r12
  42bfb1:	call   0x427e40
  42bfb6:	jmp    0x42bf93
  42bfb8:	nop    DWORD PTR [rax+rax*1+0x0]
  42bfc0:	push   r12
  42bfc2:	push   rbp
  42bfc3:	push   rdi
  42bfc4:	push   rsi
  42bfc5:	push   rbx
  42bfc6:	sub    rsp,0x20
  42bfca:	add    DWORD PTR [rcx+0x5c],0x1
  42bfce:	mov    r12,QWORD PTR [rcx+0x60]
  42bfd2:	mov    rbx,rcx
  42bfd5:	mov    ebp,DWORD PTR [rcx+0x68]
  42bfd8:	mov    QWORD PTR [rcx+0x60],0x0
  42bfe0:	mov    DWORD PTR [rcx+0x68],0x0
  42bfe7:	call   0x42bc90
  42bfec:	mov    rsi,QWORD PTR [rbx+0x60]
  42bff0:	mov    edi,eax
  42bff2:	test   rsi,rsi
  42bff5:	je     0x42c027
  42bff7:	mov    rcx,QWORD PTR [rsi]
  42bffa:	test   rcx,rcx
  42bffd:	je     0x42c01f
  42bfff:	call   0x4494c8
  42c004:	mov    QWORD PTR [rsi+0x8],0x0
  42c00c:	mov    QWORD PTR [rsi+0x10],0x0
  42c014:	mov    QWORD PTR [rsi],0x0
  42c01b:	mov    rsi,QWORD PTR [rbx+0x60]
  42c01f:	mov    rcx,rsi
  42c022:	call   0x4494c8
  42c027:	sub    DWORD PTR [rbx+0x5c],0x1
  42c02b:	mov    eax,edi
  42c02d:	mov    QWORD PTR [rbx+0x60],r12
  42c031:	mov    DWORD PTR [rbx+0x68],ebp
  42c034:	add    rsp,0x20
  42c038:	pop    rbx
  42c039:	pop    rsi
  42c03a:	pop    rdi
  42c03b:	pop    rbp
  42c03c:	pop    r12
  42c03e:	ret    
  42c03f:	nop
  42c040:	push   r15
  42c042:	push   r14
  42c044:	push   r13
  42c046:	push   r12
  42c048:	push   rbp
  42c049:	push   rdi
  42c04a:	push   rsi
  42c04b:	push   rbx
  42c04c:	sub    rsp,0x68
  42c050:	mov    rbp,rdx
  42c053:	mov    rdx,QWORD PTR [rdx]
  42c056:	mov    rbx,r8
  42c059:	mov    r8,r9
  42c05c:	mov    r12,rcx
  42c05f:	mov    rdi,r9
  42c062:	sub    r8,rdx
  42c065:	test   r8d,r8d
  42c068:	jne    0x42c270
  42c06e:	mov    edx,0x1
  42c073:	mov    rcx,rbx
  42c076:	call   0x427cc0
  42c07b:	mov    rax,QWORD PTR [rbx+0x8]
  42c07f:	mov    BYTE PTR [rax],0x0
  42c082:	test   DWORD PTR [r12],0x1000
  42c08a:	lea    rax,[rdi+0x2]
  42c08e:	mov    QWORD PTR [rbp+0x0],rax
  42c092:	je     0x42c09e
  42c094:	cmp    BYTE PTR [rdi+0x2],0x58
  42c098:	je     0x42c2c0
  42c09e:	test   DWORD PTR [r12],0x3c00
  42c0a6:	mov    r15,QWORD PTR [rbx]
  42c0a9:	je     0x42c0d9
  42c0ab:	lea    rdi,[rip+0x2a61e]        # 0x4566d0
  42c0b2:	mov    ecx,0x5
  42c0b7:	mov    rsi,r15
  42c0ba:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c0bc:	je     0x42c280
  42c0c2:	lea    rdi,[rip+0x2a60c]        # 0x4566d5
  42c0c9:	mov    ecx,0x5
  42c0ce:	mov    rsi,r15
  42c0d1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42c0d3:	je     0x42c2a2
  42c0d9:	mov    rdi,QWORD PTR [rbx+0x8]
  42c0dd:	movzx  r13d,BYTE PTR [r15]
  42c0e1:	mov    rbp,rdi
  42c0e4:	sub    rbp,r15
  42c0e7:	cmp    rbp,0x2
  42c0eb:	jle    0x42c190
  42c0f1:	cmp    r13b,0x6f
  42c0f5:	je     0x42c2f0
  42c0fb:	cmp    rbp,0x4
  42c0ff:	jle    0x42c190
  42c105:	lea    rdx,[rip+0x2a5a2]        # 0x4566ae
  42c10c:	mov    r8d,0x4
  42c112:	mov    rcx,r15
  42c115:	call   0x449458
  42c11a:	test   eax,eax
  42c11c:	jne    0x42c190
  42c11e:	movsx  edx,BYTE PTR [r15+0x4]
  42c123:	lea    rcx,[rip+0x1f036]        # 0x44b160
  42c12a:	call   0x4493e8
  42c12f:	test   rax,rax
  42c132:	lea    r9,[r15+0x5]
  42c136:	je     0x42c190
  42c138:	lea    rsi,[rsp+0x40]
  42c13d:	lea    rdx,[rsp+0x38]
  42c142:	mov    rcx,r12
  42c145:	mov    QWORD PTR [rsp+0x38],r9
  42c14a:	mov    r8,rsi
  42c14d:	call   0x429e80
  42c152:	test   eax,eax
  42c154:	jne    0x42c330
  42c15a:	mov    r15,QWORD PTR [rbx]
  42c15d:	mov    rdi,QWORD PTR [rbx+0x8]
  42c161:	cmp    r15,rdi
  42c164:	je     0x42c2e0
  42c16a:	sub    rdi,r15
  42c16d:	mov    eax,0x1
  42c172:	cmp    rdi,0x1
  42c176:	je     0x42c294
  42c17c:	add    rsp,0x68
  42c180:	pop    rbx
  42c181:	pop    rsi
  42c182:	pop    rdi
  42c183:	pop    rbp
  42c184:	pop    r12
  42c186:	pop    r13
  42c188:	pop    r14
  42c18a:	pop    r15
  42c18c:	ret    
  42c18d:	nop    DWORD PTR [rax]
  42c190:	cmp    r13b,0x5f
  42c194:	jne    0x42c161
  42c196:	cmp    BYTE PTR [r15+0x1],0x5f
  42c19b:	jne    0x42c161
  42c19d:	movzx  eax,BYTE PTR [r15+0x2]
  42c1a2:	cmp    al,0x6f
  42c1a4:	je     0x42c505
  42c1aa:	mov    rdx,QWORD PTR [rip+0x2ec7f]        # 0x45ae30
  42c1b1:	movzx  ecx,al
  42c1b4:	test   BYTE PTR [rdx+rcx*2],0x8
  42c1b8:	je     0x42c161
  42c1ba:	movzx  ecx,BYTE PTR [r15+0x3]
  42c1bf:	test   BYTE PTR [rdx+rcx*2],0x8
  42c1c3:	je     0x42c161
  42c1c5:	cmp    BYTE PTR [r15+0x4],0x0
  42c1ca:	jne    0x42c519
  42c1d0:	lea    rax,[rip+0x2ae69]        # 0x457040
  42c1d7:	xor    ebp,ebp
  42c1d9:	lea    r13,[r15+0x2]
  42c1dd:	mov    QWORD PTR [rsp+0x28],rax
  42c1e2:	mov    r12,rax
  42c1e5:	jmp    0x42c202
  42c1e7:	nop    WORD PTR [rax+rax*1+0x0]
  42c1f0:	add    rbp,0x1
  42c1f4:	add    r12,0x18
  42c1f8:	cmp    rbp,0x4f
  42c1fc:	je     0x42c161
  42c202:	mov    rsi,QWORD PTR [r12]
  42c206:	mov    rcx,rsi
  42c209:	call   0x4493c0
  42c20e:	cmp    rax,0x2
  42c212:	jne    0x42c1f0
  42c214:	mov    r8d,0x2
  42c21a:	mov    rdx,r13
  42c21d:	mov    rcx,rsi
  42c220:	call   0x449458
  42c225:	test   eax,eax
  42c227:	jne    0x42c1f0
  42c229:	lea    rdx,[rip+0x2a4aa]        # 0x4566da
  42c230:	mov    QWORD PTR [rbx+0x8],r15
  42c234:	mov    rcx,rbx
  42c237:	call   0x427e40
  42c23c:	mov    rsi,QWORD PTR [rsp+0x28]
  42c241:	lea    rax,[rbp+rbp*2+0x0]
  42c246:	mov    rdx,QWORD PTR [rsi+rax*8+0x8]
  42c24b:	test   rdx,rdx
  42c24e:	je     0x42c15a
  42c254:	cmp    BYTE PTR [rdx],0x0
  42c257:	je     0x42c15a
  42c25d:	mov    rcx,rbx
  42c260:	call   0x427e40
  42c265:	jmp    0x42c15a
  42c26a:	nop    WORD PTR [rax+rax*1+0x0]
  42c270:	mov    rcx,rbx
  42c273:	call   0x427d60
  42c278:	jmp    0x42c06e
  42c27d:	nop    DWORD PTR [rax]
  42c280:	add    DWORD PTR [r12+0x38],0x1
  42c286:	mov    eax,0x1
  42c28b:	mov    QWORD PTR [rbx+0x8],r15
  42c28f:	jmp    0x42c17c
  42c294:	xor    eax,eax
  42c296:	cmp    BYTE PTR [r15],0x2e
  42c29a:	setne  al
  42c29d:	jmp    0x42c17c
  42c2a2:	add    DWORD PTR [r12+0x3c],0x1
  42c2a8:	mov    eax,0x1
  42c2ad:	mov    QWORD PTR [rbx+0x8],r15
  42c2b1:	jmp    0x42c17c
  42c2b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c2c0:	mov    r9,rbx
  42c2c3:	xor    r8d,r8d
  42c2c6:	mov    rdx,rbp
  42c2c9:	mov    rcx,r12
  42c2cc:	call   0x42ad20
  42c2d1:	jmp    0x42c09e
  42c2d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c2e0:	mov    eax,0x1
  42c2e5:	jmp    0x42c17c
  42c2ea:	nop    WORD PTR [rax+rax*1+0x0]
  42c2f0:	cmp    BYTE PTR [r15+0x1],0x70
  42c2f5:	je     0x42c390
  42c2fb:	cmp    rbp,0x4
  42c2ff:	jle    0x42c161
  42c305:	lea    rdx,[rip+0x2a3a2]        # 0x4566ae
  42c30c:	mov    r8d,0x4
  42c312:	mov    rcx,r15
  42c315:	call   0x449458
  42c31a:	test   eax,eax
  42c31c:	je     0x42c11e
  42c322:	jmp    0x42c161
  42c327:	nop    WORD PTR [rax+rax*1+0x0]
  42c330:	mov    rax,QWORD PTR [rbx]
  42c333:	lea    rdx,[rip+0x2a3ab]        # 0x4566e5
  42c33a:	mov    rcx,rbx
  42c33d:	mov    QWORD PTR [rbx+0x8],rax
  42c341:	call   0x427e40
  42c346:	mov    r8,QWORD PTR [rsp+0x48]
  42c34b:	mov    rcx,rbx
  42c34e:	mov    rdx,rsi
  42c351:	call   0x427f80
  42c356:	mov    rcx,QWORD PTR [rsp+0x40]
  42c35b:	test   rcx,rcx
  42c35e:	je     0x42c15a
  42c364:	call   0x4494c8
  42c369:	mov    QWORD PTR [rsp+0x48],0x0
  42c372:	mov    QWORD PTR [rsp+0x50],0x0
  42c37b:	mov    QWORD PTR [rsp+0x40],0x0
  42c384:	mov    r15,QWORD PTR [rbx]
  42c387:	mov    rdi,QWORD PTR [rbx+0x8]
  42c38b:	jmp    0x42c161
  42c390:	movsx  edx,BYTE PTR [r15+0x2]
  42c395:	lea    rcx,[rip+0x1edc4]        # 0x44b160
  42c39c:	call   0x4493e8
  42c3a1:	test   rax,rax
  42c3a4:	je     0x42c2fb
  42c3aa:	cmp    rbp,0x9
  42c3ae:	jle    0x42c475
  42c3b4:	lea    rcx,[r15+0x3]
  42c3b8:	lea    rdx,[rip+0x2a2e7]        # 0x4566a6
  42c3bf:	mov    r8d,0x7
  42c3c5:	call   0x449458
  42c3ca:	test   eax,eax
  42c3cc:	jne    0x42c475
  42c3d2:	lea    rax,[rip+0x2ac67]        # 0x457040
  42c3d9:	sub    ebp,0xa
  42c3dc:	xor    r12d,r12d
  42c3df:	lea    rsi,[r15+0xa]
  42c3e3:	mov    QWORD PTR [rsp+0x28],rax
  42c3e8:	mov    r13,rax
  42c3eb:	movsxd rax,ebp
  42c3ee:	mov    QWORD PTR [rsp+0x20],rax
  42c3f3:	jmp    0x42c407
  42c3f5:	add    r12,0x1
  42c3f9:	add    r13,0x18
  42c3fd:	cmp    r12,0x4f
  42c401:	je     0x42c161
  42c407:	mov    r14,QWORD PTR [r13+0x0]
  42c40b:	mov    rcx,r14
  42c40e:	call   0x4493c0
  42c413:	cmp    ebp,eax
  42c415:	jne    0x42c3f5
  42c417:	mov    r8,QWORD PTR [rsp+0x20]
  42c41c:	mov    rdx,rsi
  42c41f:	mov    rcx,r14
  42c422:	call   0x449458
  42c427:	test   eax,eax
  42c429:	jne    0x42c3f5
  42c42b:	lea    rdx,[rip+0x2a2a8]        # 0x4566da
  42c432:	mov    QWORD PTR [rbx+0x8],r15
  42c436:	mov    rcx,rbx
  42c439:	call   0x427e40
  42c43e:	mov    rsi,QWORD PTR [rsp+0x28]
  42c443:	lea    rax,[r12+r12*2]
  42c447:	mov    rdx,QWORD PTR [rsi+rax*8+0x8]
  42c44c:	test   rdx,rdx
  42c44f:	je     0x42c45a
  42c451:	cmp    BYTE PTR [rdx],0x0
  42c454:	jne    0x42c5ab
  42c45a:	lea    rdx,[rip+0x2a282]        # 0x4566e3
  42c461:	mov    rcx,rbx
  42c464:	call   0x427e40
  42c469:	mov    r15,QWORD PTR [rbx]
  42c46c:	mov    rdi,QWORD PTR [rbx+0x8]
  42c470:	jmp    0x42c161
  42c475:	lea    rax,[rip+0x2abc4]        # 0x457040
  42c47c:	sub    ebp,0x3
  42c47f:	xor    r12d,r12d
  42c482:	lea    rsi,[r15+0x3]
  42c486:	mov    QWORD PTR [rsp+0x28],rax
  42c48b:	mov    r13,rax
  42c48e:	movsxd rax,ebp
  42c491:	mov    QWORD PTR [rsp+0x20],rax
  42c496:	jmp    0x42c4b2
  42c498:	nop    DWORD PTR [rax+rax*1+0x0]
  42c4a0:	add    r12,0x1
  42c4a4:	add    r13,0x18
  42c4a8:	cmp    r12,0x4f
  42c4ac:	je     0x42c161
  42c4b2:	mov    r14,QWORD PTR [r13+0x0]
  42c4b6:	mov    rcx,r14
  42c4b9:	call   0x4493c0
  42c4be:	cmp    ebp,eax
  42c4c0:	jne    0x42c4a0
  42c4c2:	mov    r8,QWORD PTR [rsp+0x20]
  42c4c7:	mov    rdx,rsi
  42c4ca:	mov    rcx,r14
  42c4cd:	call   0x449458
  42c4d2:	test   eax,eax
  42c4d4:	jne    0x42c4a0
  42c4d6:	lea    rdx,[rip+0x2a1fd]        # 0x4566da
  42c4dd:	mov    QWORD PTR [rbx+0x8],r15
  42c4e1:	mov    rcx,rbx
  42c4e4:	call   0x427e40
  42c4e9:	mov    rsi,QWORD PTR [rsp+0x28]
  42c4ee:	lea    rax,[r12+r12*2]
  42c4f2:	mov    rdx,QWORD PTR [rsi+rax*8+0x8]
  42c4f7:	test   rdx,rdx
  42c4fa:	jne    0x42c254
  42c500:	jmp    0x42c15a
  42c505:	cmp    BYTE PTR [r15+0x3],0x70
  42c50a:	jne    0x42c1aa
  42c510:	lea    r9,[r15+0x4]
  42c514:	jmp    0x42c138
  42c519:	cmp    al,0x61
  42c51b:	jne    0x42c161
  42c521:	cmp    BYTE PTR [r15+0x5],0x0
  42c526:	jne    0x42c161
  42c52c:	lea    rax,[rip+0x2ab0d]        # 0x457040
  42c533:	xor    esi,esi
  42c535:	lea    r13,[r15+0x2]
  42c539:	mov    QWORD PTR [rsp+0x28],rax
  42c53e:	mov    rbp,rax
  42c541:	jmp    0x42c555
  42c543:	add    rsi,0x1
  42c547:	add    rbp,0x18
  42c54b:	cmp    rsi,0x4f
  42c54f:	je     0x42c161
  42c555:	mov    r12,QWORD PTR [rbp+0x0]
  42c559:	mov    rcx,r12
  42c55c:	call   0x4493c0
  42c561:	cmp    rax,0x3
  42c565:	jne    0x42c543
  42c567:	mov    r8d,0x3
  42c56d:	mov    rdx,r13
  42c570:	mov    rcx,r12
  42c573:	call   0x449458
  42c578:	test   eax,eax
  42c57a:	jne    0x42c543
  42c57c:	lea    rdx,[rip+0x2a157]        # 0x4566da
  42c583:	mov    QWORD PTR [rbx+0x8],r15
  42c587:	mov    rcx,rbx
  42c58a:	imul   rsi,rsi,0x18
  42c58e:	call   0x427e40
  42c593:	mov    rax,QWORD PTR [rsp+0x28]
  42c598:	mov    rdx,QWORD PTR [rax+rsi*1+0x8]
  42c59d:	test   rdx,rdx
  42c5a0:	jne    0x42c254
  42c5a6:	jmp    0x42c15a
  42c5ab:	mov    rcx,rbx
  42c5ae:	call   0x427e40
  42c5b3:	jmp    0x42c45a
  42c5b8:	nop    DWORD PTR [rax+rax*1+0x0]
  42c5c0:	push   r15
  42c5c2:	push   r14
  42c5c4:	push   r13
  42c5c6:	push   r12
  42c5c8:	push   rbp
  42c5c9:	push   rdi
  42c5ca:	push   rsi
  42c5cb:	push   rbx
  42c5cc:	sub    rsp,0xc8
  42c5d3:	mov    r14d,0x1
  42c5d9:	xor    edi,edi
  42c5db:	xor    ebp,ebp
  42c5dd:	lea    rax,[rcx+0x30]
  42c5e1:	mov    rsi,rdx
  42c5e4:	mov    r15d,r14d
  42c5e7:	mov    r14,QWORD PTR [rsi]
  42c5ea:	mov    rbx,rcx
  42c5ed:	xor    r13d,r13d
  42c5f0:	mov    QWORD PTR [rsp+0x38],rax
  42c5f5:	lea    rax,[rcx+0x8]
  42c5f9:	mov    r12,r8
  42c5fc:	mov    DWORD PTR [rsp+0x4c],0x0
  42c604:	mov    QWORD PTR [rsp+0x40],rax
  42c609:	lea    rax,[rsp+0xa0]
  42c611:	movsx  ecx,BYTE PTR [r14]
  42c615:	mov    QWORD PTR [rsp+0x30],rax
  42c61a:	lea    rax,[rsp+0x60]
  42c61f:	mov    QWORD PTR [rsp+0x50],rax
  42c624:	lea    rax,[rsp+0x80]
  42c62c:	test   cl,cl
  42c62e:	mov    QWORD PTR [rsp+0x58],rax
  42c633:	je     0x42c7e9
  42c639:	nop    DWORD PTR [rax+0x0]
  42c640:	lea    edx,[rcx-0x30]
  42c643:	cmp    dl,0x45
  42c646:	ja     0x42cb95
  42c64c:	lea    rax,[rip+0x2a0a5]        # 0x4566f8
  42c653:	movzx  edx,dl
  42c656:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42c65a:	add    rax,rdx
  42c65d:	jmp    rax
  42c65f:	nop
  42c660:	mov    r9,QWORD PTR [rsp+0x50]
  42c665:	mov    r8,QWORD PTR [rsp+0x58]
  42c66a:	test   rdi,rdi
  42c66d:	mov    DWORD PTR [rsp+0x28],0x1
  42c675:	mov    DWORD PTR [rsp+0x20],0x1
  42c67d:	mov    rdx,rsi
  42c680:	mov    rcx,rbx
  42c683:	cmove  rdi,r14
  42c687:	mov    QWORD PTR [rsp+0x70],0x0
  42c690:	mov    QWORD PTR [rsp+0x68],0x0
  42c699:	mov    QWORD PTR [rsp+0x60],0x0
  42c6a2:	mov    QWORD PTR [rsp+0x90],0x0
  42c6ae:	mov    QWORD PTR [rsp+0x88],0x0
  42c6ba:	mov    QWORD PTR [rsp+0x80],0x0
  42c6c6:	call   0x429210
  42c6cb:	test   eax,eax
  42c6cd:	mov    r15d,eax
  42c6d0:	jne    0x42cd54
  42c6d6:	test   BYTE PTR [rbx],0x4
  42c6d9:	lea    rdx,[rip+0x29b07]        # 0x4561e7
  42c6e0:	lea    rax,[rip+0x29b21]        # 0x456208
  42c6e7:	cmove  rdx,rax
  42c6eb:	cmp    BYTE PTR [rdx],0x0
  42c6ee:	jne    0x42cdd0
  42c6f4:	mov    rdx,QWORD PTR [rsp+0x80]
  42c6fc:	mov    r8,QWORD PTR [rsp+0x88]
  42c704:	cmp    rdx,r8
  42c707:	je     0x42c715
  42c709:	sub    r8,rdx
  42c70c:	test   r8d,r8d
  42c70f:	jne    0x42cdc0
  42c715:	test   BYTE PTR [rbx+0x3c],0x1
  42c719:	jne    0x42cd90
  42c71f:	movabs rax,0x100000001
  42c729:	test   QWORD PTR [rbx+0x38],rax
  42c72d:	jne    0x42cd70
  42c733:	mov    rcx,QWORD PTR [rsp+0x60]
  42c738:	test   rcx,rcx
  42c73b:	je     0x42c75d
  42c73d:	call   0x4494c8
  42c742:	mov    QWORD PTR [rsp+0x68],0x0
  42c74b:	mov    QWORD PTR [rsp+0x70],0x0
  42c754:	mov    QWORD PTR [rsp+0x60],0x0
  42c75d:	mov    rcx,QWORD PTR [rsp+0x80]
  42c765:	test   rcx,rcx
  42c768:	je     0x42c793
  42c76a:	call   0x4494c8
  42c76f:	mov    QWORD PTR [rsp+0x88],0x0
  42c77b:	mov    QWORD PTR [rsp+0x90],0x0
  42c787:	mov    QWORD PTR [rsp+0x80],0x0
  42c793:	test   r15d,r15d
  42c796:	mov    eax,0x1
  42c79b:	mov    ebp,0x1
  42c7a0:	setne  dl
  42c7a3:	xor    edi,edi
  42c7a5:	test   dl,dl
  42c7a7:	je     0x42c7d1
  42c7a9:	test   al,al
  42c7ab:	je     0x42c7d1
  42c7ad:	mov    eax,DWORD PTR [rbx]
  42c7af:	test   ah,0x2c
  42c7b2:	jne    0x42cbd0
  42c7b8:	mov    r8,r12
  42c7bb:	mov    rdx,rsi
  42c7be:	mov    rcx,rbx
  42c7c1:	call   0x42bc90
  42c7c6:	xor    ebp,ebp
  42c7c8:	mov    r15d,eax
  42c7cb:	mov    r13d,0x1
  42c7d1:	test   r15d,r15d
  42c7d4:	je     0x42c920
  42c7da:	mov    r14,QWORD PTR [rsi]
  42c7dd:	movsx  ecx,BYTE PTR [r14]
  42c7e1:	test   cl,cl
  42c7e3:	jne    0x42c640
  42c7e9:	test   r13d,r13d
  42c7ec:	mov    r14d,r15d
  42c7ef:	jne    0x42c7fd
  42c7f1:	test   DWORD PTR [rbx],0x300
  42c7f7:	jne    0x42ce75
  42c7fd:	test   BYTE PTR [rbx],0x1
  42c800:	je     0x42c923
  42c806:	mov    eax,DWORD PTR [rbx+0x40]
  42c809:	test   eax,eax
  42c80b:	jne    0x42ce93
  42c811:	mov    ecx,DWORD PTR [rbx+0x48]
  42c814:	test   ecx,ecx
  42c816:	je     0x42c923
  42c81c:	mov    rax,QWORD PTR [r12+0x8]
  42c821:	cmp    QWORD PTR [r12],rax
  42c825:	je     0x42c839
  42c827:	lea    rdx,[rip+0x299c3]        # 0x4561f1
  42c82e:	mov    rcx,r12
  42c831:	call   0x427e40
  42c836:	mov    ecx,DWORD PTR [rbx+0x48]
  42c839:	call   0x427aa0
  42c83e:	test   rax,rax
  42c841:	je     0x42c923
  42c847:	cmp    BYTE PTR [rax],0x0
  42c84a:	je     0x42c923
  42c850:	mov    rdx,rax
  42c853:	mov    rcx,r12
  42c856:	call   0x427e40
  42c85b:	jmp    0x42c923
  42c860:	test   rdi,rdi
  42c863:	mov    eax,ebp
  42c865:	cmove  rdi,r14
  42c869:	add    r14,0x1
  42c86d:	and    eax,0x1
  42c870:	mov    QWORD PTR [rsi],r14
  42c873:	mov    DWORD PTR [rbx+0x40],0x1
  42c87a:	jmp    0x42c7a9
  42c87f:	nop
  42c880:	test   BYTE PTR [rsp+0x4c],0x1
  42c885:	je     0x42c893
  42c887:	test   DWORD PTR [rbx],0x300
  42c88d:	jne    0x42cde0
  42c893:	test   DWORD PTR [rbx],0x1000
  42c899:	je     0x42c920
  42c89f:	lea    rax,[r14+0x1]
  42c8a3:	mov    QWORD PTR [rsi],rax
  42c8a6:	movzx  eax,BYTE PTR [r14+0x1]
  42c8ab:	test   al,al
  42c8ad:	je     0x42c8de
  42c8af:	mov    rcx,QWORD PTR [rip+0x2e57a]        # 0x45ae30
  42c8b6:	add    r14,0x2
  42c8ba:	test   BYTE PTR [rcx+rax*2],0x4
  42c8be:	jne    0x42c8d3
  42c8c0:	jmp    0x42c8de
  42c8c2:	mov    rcx,QWORD PTR [rip+0x2e567]        # 0x45ae30
  42c8c9:	add    r14,0x1
  42c8cd:	test   BYTE PTR [rcx+rax*2],0x4
  42c8d1:	je     0x42c8de
  42c8d3:	mov    QWORD PTR [rsi],r14
  42c8d6:	movzx  eax,BYTE PTR [r14]
  42c8da:	test   al,al
  42c8dc:	jne    0x42c8c2
  42c8de:	mov    eax,ebp
  42c8e0:	and    eax,0x1
  42c8e3:	jmp    0x42c7a9
  42c8e8:	nop    DWORD PTR [rax+rax*1+0x0]
  42c8f0:	mov    DWORD PTR [rsp+0x20],0x0
  42c8f8:	mov    r9d,0x1
  42c8fe:	mov    r8,r12
  42c901:	mov    rdx,rsi
  42c904:	mov    rcx,rbx
  42c907:	call   0x429920
  42c90c:	test   eax,eax
  42c90e:	mov    r15d,eax
  42c911:	jne    0x42cd13
  42c917:	nop    WORD PTR [rax+rax*1+0x0]
  42c920:	xor    r14d,r14d
  42c923:	mov    eax,r14d
  42c926:	add    rsp,0xc8
  42c92d:	pop    rbx
  42c92e:	pop    rsi
  42c92f:	pop    rdi
  42c930:	pop    rbp
  42c931:	pop    r12
  42c933:	pop    r13
  42c935:	pop    r14
  42c937:	pop    r15
  42c939:	ret    
  42c93a:	nop    WORD PTR [rax+rax*1+0x0]
  42c940:	test   DWORD PTR [rbx],0x1000
  42c946:	je     0x42c920
  42c948:	add    r14,0x1
  42c94c:	jmp    0x42c954
  42c94e:	xchg   ax,ax
  42c950:	test   al,al
  42c952:	je     0x42c966
  42c954:	mov    QWORD PTR [rsi],r14
  42c957:	movzx  eax,BYTE PTR [r14]
  42c95b:	mov    rdx,r14
  42c95e:	add    r14,0x1
  42c962:	cmp    al,0x5f
  42c964:	jne    0x42c950
  42c966:	test   al,al
  42c968:	je     0x42c920
  42c96a:	add    rdx,0x1
  42c96e:	mov    eax,ebp
  42c970:	mov    QWORD PTR [rsi],rdx
  42c973:	and    eax,0x1
  42c976:	jmp    0x42c7a9
  42c97b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c980:	mov    DWORD PTR [rsp+0x20],0x0
  42c988:	mov    r9d,0x1
  42c98e:	mov    r8,r12
  42c991:	mov    rdx,rsi
  42c994:	mov    rcx,rbx
  42c997:	call   0x429920
  42c99c:	test   DWORD PTR [rbx],0x300
  42c9a2:	mov    r15d,eax
  42c9a5:	jne    0x42c793
  42c9ab:	mov    eax,ebp
  42c9ad:	and    eax,0x1
  42c9b0:	test   r15d,r15d
  42c9b3:	setne  dl
  42c9b6:	xor    edi,edi
  42c9b8:	jmp    0x42c7a5
  42c9bd:	nop    DWORD PTR [rax]
  42c9c0:	test   DWORD PTR [rbx],0x300
  42c9c6:	je     0x42c920
  42c9cc:	xor    r9d,r9d
  42c9cf:	mov    rdx,rsi
  42c9d2:	mov    DWORD PTR [rsp+0x28],0x0
  42c9da:	mov    DWORD PTR [rsp+0x20],0x0
  42c9e2:	mov    r8,r12
  42c9e5:	mov    rcx,rbx
  42c9e8:	call   0x429210
  42c9ed:	test   BYTE PTR [rbx+0x38],0x1
  42c9f1:	mov    r15d,eax
  42c9f4:	mov    eax,0x1
  42c9f9:	cmovne eax,DWORD PTR [rsp+0x4c]
  42c9fe:	add    QWORD PTR [rsi],0x1
  42ca02:	mov    DWORD PTR [rsp+0x4c],eax
  42ca06:	mov    eax,ebp
  42ca08:	and    eax,0x1
  42ca0b:	test   r15d,r15d
  42ca0e:	setne  dl
  42ca11:	jmp    0x42c7a5
  42ca16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ca20:	add    r14,0x1
  42ca24:	mov    QWORD PTR [rsi],r14
  42ca27:	test   DWORD PTR [rbx],0x3c00
  42ca2d:	jne    0x42cd40
  42ca33:	mov    r8,r12
  42ca36:	mov    rdx,rsi
  42ca39:	mov    rcx,rbx
  42ca3c:	call   0x42bc90
  42ca41:	test   eax,eax
  42ca43:	mov    r15d,eax
  42ca46:	je     0x42c920
  42ca4c:	test   DWORD PTR [rbx],0x2100
  42ca52:	je     0x42ca60
  42ca54:	mov    rax,QWORD PTR [rsi]
  42ca57:	cmp    BYTE PTR [rax],0x5f
  42ca5a:	je     0x42cf34
  42ca60:	mov    eax,ebp
  42ca62:	xor    edi,edi
  42ca64:	mov    r13d,0x1
  42ca6a:	and    eax,0x1
  42ca6d:	jmp    0x42c7a9
  42ca72:	call   0x427a50
  42ca77:	or     DWORD PTR [rbx+0x48],eax
  42ca7a:	test   rdi,rdi
  42ca7d:	mov    eax,ebp
  42ca7f:	cmove  rdi,r14
  42ca83:	add    r14,0x1
  42ca87:	and    eax,0x1
  42ca8a:	mov    QWORD PTR [rsi],r14
  42ca8d:	jmp    0x42c7a9
  42ca92:	mov    r8,QWORD PTR [rsp+0x30]
  42ca97:	mov    rdx,rsi
  42ca9a:	mov    rcx,rbx
  42ca9d:	call   0x429e80
  42caa2:	test   eax,eax
  42caa4:	mov    r15d,eax
  42caa7:	je     0x42c793
  42caad:	test   BYTE PTR [rbx],0x4
  42cab0:	lea    rdx,[rip+0x29751]        # 0x456208
  42cab7:	lea    rax,[rip+0x29729]        # 0x4561e7
  42cabe:	cmovne rdx,rax
  42cac2:	cmp    BYTE PTR [rdx],0x0
  42cac5:	jne    0x42cf00
  42cacb:	mov    rcx,QWORD PTR [rsp+0xa0]
  42cad3:	mov    r8,QWORD PTR [rsp+0xa8]
  42cadb:	cmp    rcx,r8
  42cade:	je     0x42caec
  42cae0:	sub    r8,rcx
  42cae3:	test   r8d,r8d
  42cae6:	jne    0x42cee0
  42caec:	test   rcx,rcx
  42caef:	je     0x42c793
  42caf5:	call   0x4494c8
  42cafa:	jmp    0x42c793
  42caff:	nop
  42cb00:	test   rdi,rdi
  42cb03:	mov    rcx,rbx
  42cb06:	mov    DWORD PTR [rbx+0x44],0xffffffff
  42cb0d:	cmove  rdi,r14
  42cb11:	mov    QWORD PTR [rsp+0xb0],0x0
  42cb1d:	mov    QWORD PTR [rsp+0xa8],0x0
  42cb29:	mov    QWORD PTR [rsp+0xa0],0x0
  42cb35:	call   0x427910
  42cb3a:	mov    r8,QWORD PTR [rsp+0x30]
  42cb3f:	mov    rdx,rsi
  42cb42:	mov    rcx,rbx
  42cb45:	mov    r14d,eax
  42cb48:	call   0x42b510
  42cb4d:	test   eax,eax
  42cb4f:	jne    0x42cbe4
  42cb55:	mov    rcx,QWORD PTR [rsp+0xa0]
  42cb5d:	test   rcx,rcx
  42cb60:	je     0x42cb67
  42cb62:	call   0x4494c8
  42cb67:	xor    edx,edx
  42cb69:	xor    r15d,r15d
  42cb6c:	test   DWORD PTR [rbx],0x2300
  42cb72:	je     0x42cd07
  42cb78:	mov    rax,QWORD PTR [rsi]
  42cb7b:	cmp    BYTE PTR [rax],0x46
  42cb7e:	je     0x42cd07
  42cb84:	mov    eax,0x1
  42cb89:	xor    edi,edi
  42cb8b:	mov    ebp,0x1
  42cb90:	jmp    0x42c7a5
  42cb95:	test   DWORD PTR [rbx],0x300
  42cb9b:	je     0x42c920
  42cba1:	mov    rdx,rsi
  42cba4:	mov    r8,r12
  42cba7:	mov    rcx,rbx
  42cbaa:	call   0x42bc90
  42cbaf:	mov    r15d,eax
  42cbb2:	mov    eax,ebp
  42cbb4:	mov    r13d,0x1
  42cbba:	and    eax,0x1
  42cbbd:	test   r15d,r15d
  42cbc0:	setne  dl
  42cbc3:	jmp    0x42c7a5
  42cbc8:	nop    DWORD PTR [rax+rax*1+0x0]
  42cbd0:	mov    rdx,QWORD PTR [rsp+0x38]
  42cbd5:	mov    rcx,QWORD PTR [rsp+0x40]
  42cbda:	call   0x427b50
  42cbdf:	jmp    0x42c7b8
  42cbe4:	movabs rdx,0x100000001
  42cbee:	test   QWORD PTR [rbx+0x38],rdx
  42cbf2:	mov    r15,QWORD PTR [rsp+0xa8]
  42cbfa:	je     0x42cc3f
  42cbfc:	movsxd rcx,DWORD PTR [rbx+0x44]
  42cc00:	lea    edx,[rcx+0x1]
  42cc03:	cmp    edx,0x1
  42cc06:	mov    rdx,QWORD PTR [rsp+0xa0]
  42cc0e:	jbe    0x42ce6d
  42cc14:	lea    r8,[rdx+rcx*1]
  42cc18:	mov    QWORD PTR [rsp+0xa8],r8
  42cc20:	cmp    r8,rdx
  42cc23:	je     0x42cc31
  42cc25:	sub    r8,rdx
  42cc28:	test   r8d,r8d
  42cc2b:	jne    0x42cf27
  42cc31:	test   BYTE PTR [rbx+0x3c],0x1
  42cc35:	jne    0x42cf0f
  42cc3b:	sub    DWORD PTR [rbx+0x38],0x1
  42cc3f:	mov    rdx,QWORD PTR [rsp+0xa0]
  42cc47:	mov    ecx,r15d
  42cc4a:	mov    r8d,0x0
  42cc50:	mov    QWORD PTR [rsp+0xa8],r15
  42cc58:	sub    ecx,edx
  42cc5a:	cmp    r15,rdx
  42cc5d:	cmovne r8d,ecx
  42cc61:	mov    rcx,rbx
  42cc64:	call   0x4279a0
  42cc69:	mov    rcx,QWORD PTR [rsp+0xa8]
  42cc71:	mov    rdx,QWORD PTR [rsp+0xa0]
  42cc79:	mov    r8d,0x0
  42cc7f:	mov    r9d,r14d
  42cc82:	mov    eax,ecx
  42cc84:	sub    eax,edx
  42cc86:	cmp    rdx,rcx
  42cc89:	lea    rcx,[rbx+0x18]
  42cc8d:	cmovne r8d,eax
  42cc91:	call   0x427c70
  42cc96:	test   BYTE PTR [rbx],0x4
  42cc99:	lea    rdx,[rip+0x29547]        # 0x4561e7
  42cca0:	lea    rax,[rip+0x29561]        # 0x456208
  42cca7:	cmove  rdx,rax
  42ccab:	cmp    BYTE PTR [rdx],0x0
  42ccae:	jne    0x42ced0
  42ccb4:	mov    rcx,QWORD PTR [rsp+0xa0]
  42ccbc:	mov    r8,QWORD PTR [rsp+0xa8]
  42ccc4:	cmp    rcx,r8
  42ccc7:	je     0x42ccd5
  42ccc9:	sub    r8,rcx
  42cccc:	test   r8d,r8d
  42cccf:	jne    0x42ceb0
  42ccd5:	test   rcx,rcx
  42ccd8:	je     0x42ccdf
  42ccda:	call   0x4494c8
  42ccdf:	mov    r8d,DWORD PTR [rsi]
  42cce2:	mov    rdx,rdi
  42cce5:	mov    rcx,rbx
  42cce8:	mov    r15d,0x1
  42ccee:	sub    r8d,edi
  42ccf1:	call   0x4282d0
  42ccf6:	test   DWORD PTR [rbx],0x2300
  42ccfc:	mov    edx,0x1
  42cd01:	jne    0x42cb78
  42cd07:	mov    eax,ebp
  42cd09:	xor    edi,edi
  42cd0b:	and    eax,0x1
  42cd0e:	jmp    0x42c7a5
  42cd13:	mov    r8d,DWORD PTR [rsi]
  42cd16:	mov    rdx,r14
  42cd19:	mov    rcx,rbx
  42cd1c:	sub    r8d,r14d
  42cd1f:	call   0x4282d0
  42cd24:	mov    eax,DWORD PTR [rbx]
  42cd26:	test   ah,0x3
  42cd29:	je     0x42ce61
  42cd2f:	xor    edi,edi
  42cd31:	jmp    0x42c7af
  42cd36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cd40:	mov    rdx,QWORD PTR [rsp+0x38]
  42cd45:	mov    rcx,QWORD PTR [rsp+0x40]
  42cd4a:	call   0x427b50
  42cd4f:	jmp    0x42ca33
  42cd54:	mov    r8d,DWORD PTR [rsi]
  42cd57:	mov    rdx,rdi
  42cd5a:	mov    rcx,rbx
  42cd5d:	sub    r8d,edi
  42cd60:	call   0x4282d0
  42cd65:	jmp    0x42c6d6
  42cd6a:	nop    WORD PTR [rax+rax*1+0x0]
  42cd70:	mov    r8,QWORD PTR [rsp+0x68]
  42cd75:	mov    rdx,QWORD PTR [rsp+0x50]
  42cd7a:	mov    rcx,r12
  42cd7d:	call   0x427f80
  42cd82:	sub    DWORD PTR [rbx+0x38],0x1
  42cd86:	jmp    0x42c733
  42cd8b:	nop    DWORD PTR [rax+rax*1+0x0]
  42cd90:	mov    rdi,QWORD PTR [rsp+0x50]
  42cd95:	lea    rdx,[rip+0x2946f]        # 0x45620b
  42cd9c:	mov    rcx,rdi
  42cd9f:	call   0x427e00
  42cda4:	mov    r8,QWORD PTR [rsp+0x68]
  42cda9:	mov    rdx,rdi
  42cdac:	mov    rcx,r12
  42cdaf:	call   0x427f80
  42cdb4:	sub    DWORD PTR [rbx+0x3c],0x1
  42cdb8:	jmp    0x42c71f
  42cdbd:	nop    DWORD PTR [rax]
  42cdc0:	mov    rcx,r12
  42cdc3:	call   0x427da0
  42cdc8:	jmp    0x42c715
  42cdcd:	nop    DWORD PTR [rax]
  42cdd0:	mov    rcx,QWORD PTR [rsp+0x58]
  42cdd5:	call   0x427e40
  42cdda:	jmp    0x42c6f4
  42cddf:	nop
  42cde0:	add    r14,0x1
  42cde4:	mov    rcx,rbx
  42cde7:	mov    rdx,rsi
  42cdea:	mov    QWORD PTR [rsi],r14
  42cded:	mov    r14,QWORD PTR [rsp+0x30]
  42cdf2:	mov    r8,r14
  42cdf5:	call   0x429e80
  42cdfa:	mov    rcx,QWORD PTR [rsp+0xa8]
  42ce02:	cmp    QWORD PTR [rsp+0xa0],rcx
  42ce0a:	mov    r15d,eax
  42ce0d:	je     0x42ce3f
  42ce0f:	lea    rdx,[rip+0x293db]        # 0x4561f1
  42ce16:	mov    rcx,r14
  42ce19:	call   0x427e40
  42ce1e:	mov    rcx,QWORD PTR [rsp+0xa0]
  42ce26:	mov    r8,QWORD PTR [rsp+0xa8]
  42ce2e:	cmp    rcx,r8
  42ce31:	je     0x42ce3f
  42ce33:	sub    r8,rcx
  42ce36:	test   r8d,r8d
  42ce39:	jne    0x42cf9c
  42ce3f:	test   rcx,rcx
  42ce42:	je     0x42ce49
  42ce44:	call   0x4494c8
  42ce49:	mov    eax,ebp
  42ce4b:	mov    DWORD PTR [rsp+0x4c],0x1
  42ce53:	and    eax,0x1
  42ce56:	test   r15d,r15d
  42ce59:	setne  dl
  42ce5c:	jmp    0x42c7a5
  42ce61:	mov    eax,ebp
  42ce63:	xor    edi,edi
  42ce65:	and    eax,0x1
  42ce68:	jmp    0x42c7a9
  42ce6d:	mov    r8,r15
  42ce70:	jmp    0x42cc20
  42ce75:	mov    r8,r12
  42ce78:	mov    rdx,rsi
  42ce7b:	mov    rcx,rbx
  42ce7e:	call   0x42bc90
  42ce83:	test   eax,eax
  42ce85:	mov    r14d,eax
  42ce88:	jne    0x42c7fd
  42ce8e:	jmp    0x42c923
  42ce93:	lea    rdx,[rip+0x29855]        # 0x4566ef
  42ce9a:	mov    rcx,r12
  42ce9d:	call   0x427e40
  42cea2:	jmp    0x42c811
  42cea7:	nop    WORD PTR [rax+rax*1+0x0]
  42ceb0:	mov    rdx,rcx
  42ceb3:	mov    rcx,r12
  42ceb6:	call   0x427da0
  42cebb:	mov    rcx,QWORD PTR [rsp+0xa0]
  42cec3:	jmp    0x42ccd5
  42cec8:	nop    DWORD PTR [rax+rax*1+0x0]
  42ced0:	mov    rcx,r12
  42ced3:	call   0x427e00
  42ced8:	jmp    0x42ccb4
  42cedd:	nop    DWORD PTR [rax]
  42cee0:	mov    rdx,rcx
  42cee3:	mov    rcx,r12
  42cee6:	call   0x427da0
  42ceeb:	mov    rcx,QWORD PTR [rsp+0xa0]
  42cef3:	jmp    0x42caec
  42cef8:	nop    DWORD PTR [rax+rax*1+0x0]
  42cf00:	mov    rcx,QWORD PTR [rsp+0x30]
  42cf05:	call   0x427e40
  42cf0a:	jmp    0x42cacb
  42cf0f:	lea    rdx,[rip+0x292f5]        # 0x45620b
  42cf16:	mov    rcx,r12
  42cf19:	call   0x427e00
  42cf1e:	sub    DWORD PTR [rbx+0x3c],0x1
  42cf22:	jmp    0x42cc3f
  42cf27:	mov    rcx,r12
  42cf2a:	call   0x427da0
  42cf2f:	jmp    0x42cc31
  42cf34:	mov    r8,QWORD PTR [rsp+0x58]
  42cf39:	add    rax,0x1
  42cf3d:	mov    rcx,rbx
  42cf40:	mov    QWORD PTR [rsi],rax
  42cf43:	mov    rdx,rsi
  42cf46:	call   0x429e80
  42cf4b:	mov    rcx,QWORD PTR [rsp+0x80]
  42cf53:	mov    r15d,eax
  42cf56:	test   rcx,rcx
  42cf59:	je     0x42cf84
  42cf5b:	call   0x4494c8
  42cf60:	mov    QWORD PTR [rsp+0x88],0x0
  42cf6c:	mov    QWORD PTR [rsp+0x90],0x0
  42cf78:	mov    QWORD PTR [rsp+0x80],0x0
  42cf84:	mov    eax,ebp
  42cf86:	mov    r13d,0x1
  42cf8c:	and    eax,0x1
  42cf8f:	test   r15d,r15d
  42cf92:	setne  dl
  42cf95:	xor    edi,edi
  42cf97:	jmp    0x42c7a5
  42cf9c:	mov    rdx,rcx
  42cf9f:	mov    rcx,r12
  42cfa2:	call   0x427da0
  42cfa7:	mov    rcx,QWORD PTR [rsp+0xa0]
  42cfaf:	jmp    0x42ce3f
  42cfb4:	xchg   ax,ax
  42cfb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cfc0:	push   r15
  42cfc2:	push   r14
  42cfc4:	push   r13
  42cfc6:	push   r12
  42cfc8:	push   rbp
  42cfc9:	push   rdi
  42cfca:	push   rsi
  42cfcb:	push   rbx
  42cfcc:	sub    rsp,0xc8
  42cfd3:	xor    eax,eax
  42cfd5:	cmp    BYTE PTR [r9+0x2],0x0
  42cfda:	mov    r13,QWORD PTR [rdx]
  42cfdd:	mov    rsi,rcx
  42cfe0:	mov    rbp,rdx
  42cfe3:	mov    rbx,r8
  42cfe6:	mov    r15,r9
  42cfe9:	je     0x42d13d
  42cfef:	test   DWORD PTR [rcx],0x3c00
  42cff5:	jne    0x42d151
  42cffb:	lea    rcx,[r9+0x2]
  42cfff:	lea    rdx,[rip+0x2980a]        # 0x456810
  42d006:	call   0x449388
  42d00b:	test   rax,rax
  42d00e:	je     0x42d151
  42d014:	mov    r8,QWORD PTR [rbx+0x8]
  42d018:	lea    r14,[rsp+0x30]
  42d01d:	lea    r12,[rsp+0x50]
  42d022:	mov    rdx,rbx
  42d025:	mov    QWORD PTR [rsp+0x40],0x0
  42d02e:	mov    QWORD PTR [rsp+0x38],0x0
  42d037:	mov    rcx,r14
  42d03a:	mov    QWORD PTR [rsp+0x30],0x0
  42d043:	mov    rdi,r12
  42d046:	call   0x427f80
  42d04b:	xor    eax,eax
  42d04d:	mov    ecx,0xe
  42d052:	mov    rdx,rsi
  42d055:	rep stos QWORD PTR es:[rdi],rax
  42d058:	mov    rcx,r12
  42d05b:	call   0x427fc0
  42d060:	cmp    BYTE PTR [r15+0x2],0x0
  42d065:	je     0x42d110
  42d06b:	mov    r9,r15
  42d06e:	mov    r8,rbx
  42d071:	mov    rdx,rbp
  42d074:	mov    rcx,rsi
  42d077:	call   0x42c040
  42d07c:	test   eax,eax
  42d07e:	je     0x42d096
  42d080:	mov    r8,rbx
  42d083:	mov    rdx,rbp
  42d086:	mov    rcx,rsi
  42d089:	call   0x42c5c0
  42d08e:	test   eax,eax
  42d090:	jne    0x42d112
  42d096:	mov    QWORD PTR [rbp+0x0],r13
  42d09a:	mov    rax,QWORD PTR [rbx]
  42d09d:	mov    rdx,r14
  42d0a0:	mov    r8,QWORD PTR [rsp+0x38]
  42d0a5:	mov    rcx,rbx
  42d0a8:	mov    QWORD PTR [rbx+0x8],rax
  42d0ac:	call   0x427f80
  42d0b1:	mov    rdx,r12
  42d0b4:	mov    rcx,rsi
  42d0b7:	call   0x427fc0
  42d0bc:	movzx  eax,BYTE PTR [r15+0x2]
  42d0c1:	lea    rdx,[r15+0x2]
  42d0c5:	test   al,al
  42d0c7:	jne    0x42d0d8
  42d0c9:	jmp    0x42d110
  42d0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d0d0:	add    rdx,0x1
  42d0d4:	test   al,al
  42d0d6:	je     0x42d110
  42d0d8:	cmp    al,0x5f
  42d0da:	movzx  eax,BYTE PTR [rdx+0x1]
  42d0de:	jne    0x42d0d0
  42d0e0:	cmp    al,0x5f
  42d0e2:	jne    0x42d0d0
  42d0e4:	movzx  eax,BYTE PTR [rdx]
  42d0e7:	cmp    al,0x5f
  42d0e9:	jne    0x42d0fe
  42d0eb:	mov    eax,0x5f
  42d0f0:	jmp    0x42d0f6
  42d0f2:	movzx  eax,BYTE PTR [rdx+0x1]
  42d0f6:	add    rdx,0x1
  42d0fa:	cmp    al,0x5f
  42d0fc:	je     0x42d0f2
  42d0fe:	test   al,al
  42d100:	lea    r15,[rdx-0x2]
  42d104:	jne    0x42d06b
  42d10a:	nop    WORD PTR [rax+rax*1+0x0]
  42d110:	xor    eax,eax
  42d112:	mov    rcx,r12
  42d115:	mov    DWORD PTR [rsp+0x2c],eax
  42d119:	call   0x427bb0
  42d11e:	mov    rcx,r12
  42d121:	call   0x427820
  42d126:	mov    rcx,QWORD PTR [rsp+0x30]
  42d12b:	mov    eax,DWORD PTR [rsp+0x2c]
  42d12f:	test   rcx,rcx
  42d132:	je     0x42d13d
  42d134:	call   0x4494c8
  42d139:	mov    eax,DWORD PTR [rsp+0x2c]
  42d13d:	add    rsp,0xc8
  42d144:	pop    rbx
  42d145:	pop    rsi
  42d146:	pop    rdi
  42d147:	pop    rbp
  42d148:	pop    r12
  42d14a:	pop    r13
  42d14c:	pop    r14
  42d14e:	pop    r15
  42d150:	ret    
  42d151:	mov    r9,r15
  42d154:	mov    r8,rbx
  42d157:	mov    rdx,rbp
  42d15a:	mov    rcx,rsi
  42d15d:	call   0x42c040
  42d162:	jmp    0x42d13d
  42d164:	xchg   ax,ax
  42d166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d170:	push   r15
  42d172:	push   r14
  42d174:	push   r13
  42d176:	push   r12
  42d178:	push   rbp
  42d179:	push   rdi
  42d17a:	push   rsi
  42d17b:	push   rbx
  42d17c:	sub    rsp,0x88
  42d183:	mov    rbx,QWORD PTR [rdx]
  42d186:	mov    r12,rcx
  42d189:	mov    rbp,rdx
  42d18c:	mov    r13,r8
  42d18f:	cmp    BYTE PTR [rbx],0x5f
  42d192:	je     0x42d200
  42d194:	lea    rdi,[rip+0x296a9]        # 0x456844
  42d19b:	mov    ecx,0x8
  42d1a0:	mov    rsi,rbx
  42d1a3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d1a5:	je     0x42d300
  42d1ab:	lea    rdi,[rip+0x296c5]        # 0x456877
  42d1b2:	mov    ecx,0x3
  42d1b7:	mov    rsi,rbx
  42d1ba:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d1bc:	jne    0x42d1e0
  42d1be:	movzx  eax,BYTE PTR [rbx+0x3]
  42d1c2:	cmp    al,0x69
  42d1c4:	sete   dl
  42d1c7:	cmp    al,0x66
  42d1c9:	je     0x42d540
  42d1cf:	test   dl,dl
  42d1d1:	jne    0x42d3a0
  42d1d7:	nop    WORD PTR [rax+rax*1+0x0]
  42d1e0:	xor    ebx,ebx
  42d1e2:	mov    eax,ebx
  42d1e4:	add    rsp,0x88
  42d1eb:	pop    rbx
  42d1ec:	pop    rsi
  42d1ed:	pop    rdi
  42d1ee:	pop    rbp
  42d1ef:	pop    r12
  42d1f1:	pop    r13
  42d1f3:	pop    r14
  42d1f5:	pop    r15
  42d1f7:	ret    
  42d1f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42d200:	movsx  edi,BYTE PTR [rbx+0x1]
  42d204:	lea    rcx,[rip+0x1df55]        # 0x44b160
  42d20b:	mov    edx,edi
  42d20d:	mov    esi,edi
  42d20f:	call   0x4493e8
  42d214:	test   rax,rax
  42d217:	je     0x42d223
  42d219:	cmp    BYTE PTR [rbx+0x2],0x5f
  42d21d:	je     0x42d660
  42d223:	cmp    sil,0x5f
  42d227:	je     0x42d410
  42d22d:	cmp    sil,0x76
  42d231:	je     0x42d510
  42d237:	lea    rcx,[rip+0x295f9]        # 0x456837
  42d23e:	mov    edx,edi
  42d240:	call   0x4493e8
  42d245:	test   rax,rax
  42d248:	je     0x42d194
  42d24e:	lea    rdx,[rip+0x1df0b]        # 0x44b160
  42d255:	mov    rcx,rbx
  42d258:	call   0x4493a0
  42d25d:	test   rax,rax
  42d260:	mov    r14,rax
  42d263:	je     0x42d194
  42d269:	lea    rax,[rbx+0x1]
  42d26d:	mov    QWORD PTR [rbp+0x0],rax
  42d271:	movzx  eax,BYTE PTR [rbx+0x1]
  42d275:	cmp    al,0x51
  42d277:	je     0x42d640
  42d27d:	cmp    al,0x74
  42d27f:	je     0x42d5a0
  42d285:	cmp    al,0x4b
  42d287:	je     0x42d640
  42d28d:	mov    rcx,rbp
  42d290:	call   0x4276e0
  42d295:	movsxd rbx,eax
  42d298:	test   ebx,ebx
  42d29a:	js     0x42d1e0
  42d2a0:	mov    r15,QWORD PTR [rbp+0x0]
  42d2a4:	mov    rcx,r15
  42d2a7:	call   0x4493c0
  42d2ac:	cmp    ebx,eax
  42d2ae:	jg     0x42d1e0
  42d2b4:	cmp    ebx,0xa
  42d2b7:	jle    0x42d760
  42d2bd:	lea    rdi,[rip+0x293cd]        # 0x456691
  42d2c4:	mov    ecx,0x8
  42d2c9:	mov    rsi,r15
  42d2cc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d2ce:	jne    0x42d2db
  42d2d0:	cmp    BYTE PTR [r15+0x9],0x4e
  42d2d5:	je     0x42d78b
  42d2db:	mov    rdx,r15
  42d2de:	mov    r8d,ebx
  42d2e1:	mov    rcx,r13
  42d2e4:	call   0x427d60
  42d2e9:	mov    r15,QWORD PTR [rbp+0x0]
  42d2ed:	lea    rsi,[r15+rbx*1]
  42d2f1:	mov    QWORD PTR [rbp+0x0],rsi
  42d2f5:	mov    ebx,0x1
  42d2fa:	jmp    0x42d5cf
  42d2ff:	nop
  42d300:	add    rbx,0x8
  42d304:	mov    rcx,rbp
  42d307:	mov    QWORD PTR [rbp+0x0],rbx
  42d30b:	call   0x4276e0
  42d310:	cmp    eax,0xffffffff
  42d313:	mov    ebx,eax
  42d315:	je     0x42d1e0
  42d31b:	mov    rax,QWORD PTR [rbp+0x0]
  42d31f:	mov    rcx,r12
  42d322:	lea    rdx,[rax+0x1]
  42d326:	mov    QWORD PTR [rbp+0x0],rdx
  42d32a:	call   0x42d7f0
  42d32f:	test   rax,rax
  42d332:	mov    rsi,rax
  42d335:	je     0x42d1e0
  42d33b:	lea    rdi,[rsp+0x40]
  42d340:	neg    ebx
  42d342:	lea    rdx,[rip+0x29507]        # 0x456850
  42d349:	mov    r8d,ebx
  42d34c:	mov    rcx,rdi
  42d34f:	call   0x449400
  42d354:	cmp    BYTE PTR [rsp+0x40],0x0
  42d359:	jne    0x42d700
  42d35f:	cmp    BYTE PTR [rsi],0x0
  42d362:	je     0x42d36f
  42d364:	mov    rdx,rsi
  42d367:	mov    rcx,r13
  42d36a:	call   0x427e40
  42d36f:	mov    rcx,rsi
  42d372:	call   0x4494c8
  42d377:	mov    rbx,QWORD PTR [rbp+0x0]
  42d37b:	mov    rcx,rbx
  42d37e:	call   0x4493c0
  42d383:	cdqe   
  42d385:	lea    rcx,[rbx+rax*1]
  42d389:	mov    ebx,0x1
  42d38e:	mov    QWORD PTR [rbp+0x0],rcx
  42d392:	jmp    0x42d1e2
  42d397:	nop    WORD PTR [rax+rax*1+0x0]
  42d3a0:	lea    rsi,[rip+0x2946c]        # 0x456813
  42d3a7:	lea    rax,[rbx+0x4]
  42d3ab:	mov    QWORD PTR [rbp+0x0],rax
  42d3af:	movzx  eax,BYTE PTR [rbx+0x4]
  42d3b3:	cmp    al,0x51
  42d3b5:	je     0x42d580
  42d3bb:	cmp    al,0x74
  42d3bd:	je     0x42d554
  42d3c3:	cmp    al,0x4b
  42d3c5:	je     0x42d580
  42d3cb:	mov    r8,r13
  42d3ce:	mov    rdx,rbp
  42d3d1:	mov    rcx,r12
  42d3d4:	call   0x429e80
  42d3d9:	mov    ebx,eax
  42d3db:	test   ebx,ebx
  42d3dd:	je     0x42d1e0
  42d3e3:	mov    rax,QWORD PTR [rbp+0x0]
  42d3e7:	cmp    BYTE PTR [rax],0x0
  42d3ea:	jne    0x42d1e0
  42d3f0:	cmp    BYTE PTR [rsi],0x0
  42d3f3:	je     0x42d1e2
  42d3f9:	mov    rdx,rsi
  42d3fc:	mov    rcx,r13
  42d3ff:	call   0x427e40
  42d404:	jmp    0x42d1e2
  42d409:	nop    DWORD PTR [rax+0x0]
  42d410:	cmp    BYTE PTR [rbx+0x2],0x76
  42d414:	jne    0x42d194
  42d41a:	cmp    BYTE PTR [rbx+0x3],0x74
  42d41e:	jne    0x42d194
  42d424:	cmp    BYTE PTR [rbx+0x4],0x5f
  42d428:	jne    0x42d194
  42d42e:	lea    rdi,[rbx+0x5]
  42d432:	mov    QWORD PTR [rbp+0x0],rdi
  42d436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d440:	lea    r14,[rip+0x28da0]        # 0x4561e7
  42d447:	lea    rsi,[rip+0x28dba]        # 0x456208
  42d44e:	mov    ebx,0x1
  42d453:	movzx  eax,BYTE PTR [rdi]
  42d456:	test   al,al
  42d458:	je     0x42d4f9
  42d45e:	cmp    al,0x51
  42d460:	je     0x42d680
  42d466:	cmp    al,0x74
  42d468:	je     0x42d6c0
  42d46e:	cmp    al,0x4b
  42d470:	je     0x42d680
  42d476:	mov    rcx,QWORD PTR [rip+0x2d9b3]        # 0x45ae30
  42d47d:	test   BYTE PTR [rcx+rax*2],0x4
  42d481:	jne    0x42d710
  42d487:	lea    rdx,[rip+0x1dcd2]        # 0x44b160
  42d48e:	mov    rcx,rdi
  42d491:	call   0x4493d0
  42d496:	mov    r15d,eax
  42d499:	test   r15d,r15d
  42d49c:	jne    0x42d740
  42d4a2:	movsxd r9,r15d
  42d4a5:	add    rdi,r9
  42d4a8:	mov    QWORD PTR [rbp+0x0],rdi
  42d4ac:	lea    rdx,[rip+0x1dcad]        # 0x44b160
  42d4b3:	mov    rcx,rdi
  42d4b6:	call   0x4493a0
  42d4bb:	test   rax,rax
  42d4be:	je     0x42d6f2
  42d4c4:	cmp    rdi,rax
  42d4c7:	jne    0x42d1e0
  42d4cd:	test   BYTE PTR [r12],0x4
  42d4d2:	mov    rdx,rsi
  42d4d5:	cmovne rdx,r14
  42d4d9:	cmp    BYTE PTR [rdx],0x0
  42d4dc:	jne    0x42d6e5
  42d4e2:	mov    rax,QWORD PTR [rbp+0x0]
  42d4e6:	lea    rdi,[rax+0x1]
  42d4ea:	mov    QWORD PTR [rbp+0x0],rdi
  42d4ee:	movzx  eax,BYTE PTR [rdi]
  42d4f1:	test   al,al
  42d4f3:	jne    0x42d45e
  42d4f9:	lea    rdx,[rip+0x2937b]        # 0x45687b
  42d500:	mov    rcx,r13
  42d503:	call   0x427e40
  42d508:	jmp    0x42d1e2
  42d50d:	nop    DWORD PTR [rax]
  42d510:	cmp    BYTE PTR [rbx+0x2],0x74
  42d514:	jne    0x42d194
  42d51a:	movsx  edx,BYTE PTR [rbx+0x3]
  42d51e:	lea    rcx,[rip+0x1dc3b]        # 0x44b160
  42d525:	call   0x4493e8
  42d52a:	test   rax,rax
  42d52d:	je     0x42d194
  42d533:	lea    rdi,[rbx+0x4]
  42d537:	mov    QWORD PTR [rbp+0x0],rdi
  42d53b:	jmp    0x42d440
  42d540:	test   dl,dl
  42d542:	jne    0x42d3a0
  42d548:	lea    rsi,[rip+0x292d4]        # 0x456823
  42d54f:	jmp    0x42d3a7
  42d554:	mov    DWORD PTR [rsp+0x28],0x1
  42d55c:	mov    DWORD PTR [rsp+0x20],0x1
  42d564:	xor    r9d,r9d
  42d567:	mov    r8,r13
  42d56a:	mov    rdx,rbp
  42d56d:	mov    rcx,r12
  42d570:	call   0x429210
  42d575:	mov    ebx,eax
  42d577:	jmp    0x42d3db
  42d57c:	nop    DWORD PTR [rax+0x0]
  42d580:	mov    DWORD PTR [rsp+0x20],0x1
  42d588:	xor    r9d,r9d
  42d58b:	mov    r8,r13
  42d58e:	mov    rdx,rbp
  42d591:	mov    rcx,r12
  42d594:	call   0x429920
  42d599:	mov    ebx,eax
  42d59b:	jmp    0x42d3db
  42d5a0:	mov    DWORD PTR [rsp+0x28],0x1
  42d5a8:	mov    DWORD PTR [rsp+0x20],0x1
  42d5b0:	xor    r9d,r9d
  42d5b3:	mov    r8,r13
  42d5b6:	mov    rdx,rbp
  42d5b9:	mov    rcx,r12
  42d5bc:	call   0x429210
  42d5c1:	mov    ebx,eax
  42d5c3:	test   ebx,ebx
  42d5c5:	je     0x42d1e0
  42d5cb:	mov    rsi,QWORD PTR [rbp+0x0]
  42d5cf:	cmp    rsi,r14
  42d5d2:	jne    0x42d1e0
  42d5d8:	add    rsi,0x1
  42d5dc:	test   BYTE PTR [r12],0x4
  42d5e1:	lea    rdx,[rip+0x28c20]        # 0x456208
  42d5e8:	lea    rax,[rip+0x28bf8]        # 0x4561e7
  42d5ef:	mov    QWORD PTR [rbp+0x0],rsi
  42d5f3:	cmovne rdx,rax
  42d5f7:	cmp    BYTE PTR [rdx],0x0
  42d5fa:	jne    0x42d77a
  42d600:	mov    rcx,rsi
  42d603:	call   0x4493c0
  42d608:	test   eax,eax
  42d60a:	je     0x42d628
  42d60c:	mov    r8d,eax
  42d60f:	mov    rdx,rsi
  42d612:	mov    rcx,r13
  42d615:	mov    QWORD PTR [rsp+0x38],rax
  42d61a:	call   0x427d60
  42d61f:	mov    rsi,QWORD PTR [rbp+0x0]
  42d623:	mov    rax,QWORD PTR [rsp+0x38]
  42d628:	cdqe   
  42d62a:	add    rsi,rax
  42d62d:	mov    QWORD PTR [rbp+0x0],rsi
  42d631:	jmp    0x42d1e2
  42d636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d640:	mov    DWORD PTR [rsp+0x20],0x1
  42d648:	xor    r9d,r9d
  42d64b:	mov    r8,r13
  42d64e:	mov    rdx,rbp
  42d651:	mov    rcx,r12
  42d654:	call   0x429920
  42d659:	mov    ebx,eax
  42d65b:	jmp    0x42d5c3
  42d660:	add    rbx,0x3
  42d664:	mov    QWORD PTR [rbp+0x0],rbx
  42d668:	add    DWORD PTR [r12+0x3c],0x1
  42d66e:	mov    ebx,0x1
  42d673:	jmp    0x42d1e2
  42d678:	nop    DWORD PTR [rax+rax*1+0x0]
  42d680:	mov    DWORD PTR [rsp+0x20],0x1
  42d688:	xor    r9d,r9d
  42d68b:	mov    r8,r13
  42d68e:	mov    rdx,rbp
  42d691:	mov    rcx,r12
  42d694:	call   0x429920
  42d699:	mov    ebx,eax
  42d69b:	mov    rdi,QWORD PTR [rbp+0x0]
  42d69f:	lea    rdx,[rip+0x1daba]        # 0x44b160
  42d6a6:	mov    rcx,rdi
  42d6a9:	call   0x4493a0
  42d6ae:	test   ebx,ebx
  42d6b0:	jne    0x42d4bb
  42d6b6:	jmp    0x42d1e0
  42d6bb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d6c0:	mov    DWORD PTR [rsp+0x28],0x1
  42d6c8:	mov    DWORD PTR [rsp+0x20],0x1
  42d6d0:	xor    r9d,r9d
  42d6d3:	mov    r8,r13
  42d6d6:	mov    rdx,rbp
  42d6d9:	mov    rcx,r12
  42d6dc:	call   0x429210
  42d6e1:	mov    ebx,eax
  42d6e3:	jmp    0x42d69b
  42d6e5:	mov    rcx,r13
  42d6e8:	call   0x427e40
  42d6ed:	jmp    0x42d4e2
  42d6f2:	mov    rdi,QWORD PTR [rbp+0x0]
  42d6f6:	jmp    0x42d453
  42d6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d700:	mov    rdx,rdi
  42d703:	mov    rcx,r13
  42d706:	call   0x427e40
  42d70b:	jmp    0x42d35f
  42d710:	mov    rcx,rbp
  42d713:	call   0x4276e0
  42d718:	mov    rdi,QWORD PTR [rbp+0x0]
  42d71c:	mov    r15d,eax
  42d71f:	mov    rcx,rdi
  42d722:	call   0x4493c0
  42d727:	cmp    r15d,eax
  42d72a:	jg     0x42d770
  42d72c:	cmp    r15d,0xffffffff
  42d730:	jne    0x42d499
  42d736:	jmp    0x42d1e0
  42d73b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d740:	mov    rdx,rdi
  42d743:	mov    r8d,r15d
  42d746:	mov    rcx,r13
  42d749:	call   0x427d60
  42d74e:	mov    rdi,QWORD PTR [rbp+0x0]
  42d752:	jmp    0x42d4a2
  42d757:	nop    WORD PTR [rax+rax*1+0x0]
  42d760:	test   ebx,ebx
  42d762:	je     0x42d2ed
  42d768:	jmp    0x42d2db
  42d76d:	nop    DWORD PTR [rax]
  42d770:	mov    ebx,0x1
  42d775:	jmp    0x42d4ac
  42d77a:	mov    rcx,r13
  42d77d:	call   0x427e40
  42d782:	mov    rsi,QWORD PTR [rbp+0x0]
  42d786:	jmp    0x42d600
  42d78b:	movzx  eax,BYTE PTR [r15+0x8]
  42d790:	cmp    al,BYTE PTR [r15+0xa]
  42d794:	jne    0x42d2db
  42d79a:	lea    rcx,[rip+0x1d9bf]        # 0x44b160
  42d7a1:	movsx  edx,al
  42d7a4:	call   0x4493e8
  42d7a9:	test   rax,rax
  42d7ac:	je     0x42d2db
  42d7b2:	lea    rdx,[rip+0x28ee1]        # 0x45669a
  42d7b9:	mov    rcx,r13
  42d7bc:	mov    rsi,rbx
  42d7bf:	call   0x427e40
  42d7c4:	add    rsi,QWORD PTR [rbp+0x0]
  42d7c8:	lea    rdx,[rip+0x1d991]        # 0x44b160
  42d7cf:	mov    QWORD PTR [rbp+0x0],rsi
  42d7d3:	mov    rcx,rsi
  42d7d6:	call   0x4493a0
  42d7db:	mov    r14,rax
  42d7de:	jmp    0x42d2f5
  42d7e3:	nop    DWORD PTR [rax]
  42d7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d7f0:	push   r15
  42d7f2:	push   r14
  42d7f4:	push   r13
  42d7f6:	push   r12
  42d7f8:	push   rbp
  42d7f9:	push   rdi
  42d7fa:	push   rsi
  42d7fb:	push   rbx
  42d7fc:	sub    rsp,0x68
  42d800:	mov    ebp,DWORD PTR [rcx+0x38]
  42d803:	mov    r12d,DWORD PTR [rcx+0x3c]
  42d807:	test   rdx,rdx
  42d80a:	mov    r14d,DWORD PTR [rcx+0x48]
  42d80e:	mov    rbx,rcx
  42d811:	mov    QWORD PTR [rsp+0xb8],rdx
  42d819:	mov    r13d,DWORD PTR [rcx+0x40]
  42d81d:	mov    r15,rdx
  42d820:	mov    DWORD PTR [rcx+0x3c],0x0
  42d827:	mov    DWORD PTR [rcx+0x38],0x0
  42d82e:	mov    DWORD PTR [rcx+0x48],0x0
  42d835:	mov    DWORD PTR [rcx+0x4c],0x0
  42d83c:	je     0x42da1a
  42d842:	cmp    BYTE PTR [rdx],0x0
  42d845:	je     0x42da1a
  42d84b:	test   DWORD PTR [rcx],0x300
  42d851:	mov    QWORD PTR [rsp+0x50],0x0
  42d85a:	mov    QWORD PTR [rsp+0x48],0x0
  42d863:	mov    QWORD PTR [rsp+0x40],0x0
  42d86c:	jne    0x42da40
  42d872:	mov    rcx,r15
  42d875:	call   0x4493c0
  42d87a:	cmp    rax,0x6
  42d87e:	jbe    0x42dad1
  42d884:	lea    rdi,[rip+0x28fff]        # 0x45688a
  42d88b:	mov    ecx,0x6
  42d890:	mov    rsi,r15
  42d893:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d895:	je     0x42db30
  42d89b:	lea    rdi,[rip+0x28fef]        # 0x456891
  42d8a2:	mov    ecx,0x6
  42d8a7:	mov    rsi,r15
  42d8aa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d8ac:	je     0x42db30
  42d8b2:	cmp    rax,0xa
  42d8b6:	jbe    0x42dad1
  42d8bc:	lea    rdi,[rip+0x28dce]        # 0x456691
  42d8c3:	mov    ecx,0x8
  42d8c8:	mov    rsi,r15
  42d8cb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42d8cd:	jne    0x42dad1
  42d8d3:	movsx  edx,BYTE PTR [r15+0x8]
  42d8d8:	lea    rcx,[rip+0x1d881]        # 0x44b160
  42d8df:	call   0x4493e8
  42d8e4:	test   rax,rax
  42d8e7:	je     0x42de53
  42d8ed:	movzx  edi,BYTE PTR [r15+0xa]
  42d8f2:	mov    QWORD PTR [rsp+0x20],r15
  42d8f7:	cmp    BYTE PTR [rax],dil
  42d8fa:	jne    0x42db48
  42d900:	movzx  eax,BYTE PTR [r15+0x9]
  42d905:	cmp    al,0x44
  42d907:	je     0x42deb6
  42d90d:	cmp    al,0x49
  42d90f:	mov    QWORD PTR [rsp+0x20],r15
  42d914:	jne    0x42db48
  42d91a:	lea    r8,[r15+0xb]
  42d91e:	mov    DWORD PTR [rbx+0x38],0x2
  42d925:	mov    QWORD PTR [rsp+0xb8],r8
  42d92d:	lea    rdx,[rsp+0xb8]
  42d935:	lea    r8,[rsp+0x40]
  42d93a:	mov    rcx,rbx
  42d93d:	call   0x42d170
  42d942:	test   eax,eax
  42d944:	jne    0x42dedf
  42d94a:	mov    rax,QWORD PTR [rsp+0xb8]
  42d952:	mov    QWORD PTR [rsp+0x20],rax
  42d957:	jmp    0x42db48
  42d95c:	nop    DWORD PTR [rax+0x0]
  42d960:	cmp    rsi,QWORD PTR [rsp+0x20]
  42d965:	je     0x42dd22
  42d96b:	mov    eax,DWORD PTR [rbx]
  42d96d:	test   ah,0x8
  42d970:	je     0x42dc40
  42d976:	cmp    BYTE PTR [rsi+0x2],0x70
  42d97a:	jne    0x42dc40
  42d980:	movzx  edx,BYTE PTR [rsi+0x3]
  42d984:	cmp    dl,0x74
  42d987:	je     0x42dd98
  42d98d:	test   ah,0x20
  42d990:	je     0x42dc60
  42d996:	sub    edx,0x73
  42d999:	cmp    dl,0x1
  42d99c:	jbe    0x42dd98
  42d9a2:	cmp    rsi,QWORD PTR [rsp+0x20]
  42d9a7:	je     0x42ddc7
  42d9ad:	lea    rdx,[rsp+0xb8]
  42d9b5:	lea    r8,[rsp+0x40]
  42d9ba:	mov    r9,rsi
  42d9bd:	mov    rcx,rbx
  42d9c0:	call   0x42cfc0
  42d9c5:	mov    esi,eax
  42d9c7:	test   esi,esi
  42d9c9:	je     0x42d9dd
  42d9cb:	mov    r15,QWORD PTR [rsp+0xb8]
  42d9d3:	cmp    BYTE PTR [r15],0x0
  42d9d7:	jne    0x42dba0
  42d9dd:	cmp    DWORD PTR [rbx+0x38],0x2
  42d9e1:	je     0x42dbc1
  42d9e7:	cmp    DWORD PTR [rbx+0x3c],0x2
  42d9eb:	je     0x42dc80
  42d9f1:	cmp    DWORD PTR [rbx+0x4c],0x1
  42d9f5:	je     0x42dca0
  42d9fb:	mov    rcx,rbx
  42d9fe:	call   0x427bb0
  42da03:	test   esi,esi
  42da05:	jne    0x42dab0
  42da0b:	mov    rcx,QWORD PTR [rsp+0x40]
  42da10:	test   rcx,rcx
  42da13:	je     0x42da1a
  42da15:	call   0x4494c8
  42da1a:	xor    eax,eax
  42da1c:	mov    DWORD PTR [rbx+0x38],ebp
  42da1f:	mov    DWORD PTR [rbx+0x3c],r12d
  42da23:	mov    DWORD PTR [rbx+0x40],r13d
  42da27:	mov    DWORD PTR [rbx+0x48],r14d
  42da2b:	add    rsp,0x68
  42da2f:	pop    rbx
  42da30:	pop    rsi
  42da31:	pop    rdi
  42da32:	pop    rbp
  42da33:	pop    r12
  42da35:	pop    r13
  42da37:	pop    r14
  42da39:	pop    r15
  42da3b:	ret    
  42da3c:	nop    DWORD PTR [rax+0x0]
  42da40:	lea    rdx,[rsp+0xb8]
  42da48:	lea    r8,[rsp+0x40]
  42da4d:	call   0x42d170
  42da52:	test   eax,eax
  42da54:	mov    esi,eax
  42da56:	mov    r15,QWORD PTR [rsp+0xb8]
  42da5e:	jne    0x42d9d3
  42da64:	mov    rcx,rbx
  42da67:	call   0x427bb0
  42da6c:	mov    rcx,rbx
  42da6f:	call   0x427820
  42da74:	mov    rcx,QWORD PTR [rsp+0x40]
  42da79:	test   rcx,rcx
  42da7c:	je     0x42da9e
  42da7e:	call   0x4494c8
  42da83:	mov    QWORD PTR [rsp+0x48],0x0
  42da8c:	mov    QWORD PTR [rsp+0x50],0x0
  42da95:	mov    QWORD PTR [rsp+0x40],0x0
  42da9e:	mov    r15,QWORD PTR [rsp+0xb8]
  42daa6:	jmp    0x42d872
  42daab:	nop    DWORD PTR [rax+rax*1+0x0]
  42dab0:	lea    rcx,[rsp+0x40]
  42dab5:	lea    rdx,[rip+0x28644]        # 0x456100
  42dabc:	mov    r8d,0x1
  42dac2:	call   0x427d60
  42dac7:	mov    rax,QWORD PTR [rsp+0x40]
  42dacc:	jmp    0x42da1c
  42dad1:	test   DWORD PTR [rbx],0x3800
  42dad7:	mov    QWORD PTR [rsp+0x20],r15
  42dadc:	je     0x42db48
  42dade:	lea    rdi,[rip+0x28db3]        # 0x456898
  42dae5:	mov    ecx,0x7
  42daea:	mov    rsi,r15
  42daed:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42daef:	je     0x42dd05
  42daf5:	mov    rsi,QWORD PTR [rsp+0x20]
  42dafa:	lea    rdi,[rip+0x28d9f]        # 0x4568a0
  42db01:	mov    ecx,0x7
  42db06:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42db08:	jne    0x42db48
  42db0a:	mov    r15,QWORD PTR [rsp+0x20]
  42db0f:	mov    DWORD PTR [rbx+0x38],0x2
  42db16:	add    r15,0x7
  42db1a:	mov    QWORD PTR [rsp+0xb8],r15
  42db22:	mov    QWORD PTR [rsp+0x20],r15
  42db27:	jmp    0x42db48
  42db29:	nop    DWORD PTR [rax+0x0]
  42db30:	add    r15,0x6
  42db34:	mov    DWORD PTR [rbx+0x4c],0x1
  42db3b:	mov    QWORD PTR [rsp+0xb8],r15
  42db43:	mov    QWORD PTR [rsp+0x20],r15
  42db48:	mov    rcx,QWORD PTR [rsp+0x20]
  42db4d:	jmp    0x42db5e
  42db4f:	nop
  42db50:	cmp    BYTE PTR [rax+0x1],0x5f
  42db54:	lea    rcx,[rax+0x1]
  42db58:	je     0x42dbe0
  42db5e:	mov    edx,0x5f
  42db63:	call   0x4493e8
  42db68:	test   rax,rax
  42db6b:	mov    rsi,rax
  42db6e:	jne    0x42db50
  42db70:	cmp    DWORD PTR [rbx+0x38],0x2
  42db74:	je     0x42dcc0
  42db7a:	cmp    DWORD PTR [rbx+0x3c],0x2
  42db7e:	je     0x42dcc0
  42db84:	xor    esi,esi
  42db86:	cmp    DWORD PTR [rbx+0x4c],0x1
  42db8a:	je     0x42dca0
  42db90:	mov    rcx,rbx
  42db93:	call   0x427bb0
  42db98:	jmp    0x42da0b
  42db9d:	nop    DWORD PTR [rax]
  42dba0:	lea    rdx,[rsp+0xb8]
  42dba8:	lea    r8,[rsp+0x40]
  42dbad:	mov    rcx,rbx
  42dbb0:	call   0x42c5c0
  42dbb5:	cmp    DWORD PTR [rbx+0x38],0x2
  42dbb9:	mov    esi,eax
  42dbbb:	jne    0x42d9e7
  42dbc1:	lea    rcx,[rsp+0x40]
  42dbc6:	lea    rdx,[rip+0x28ce6]        # 0x4568b3
  42dbcd:	call   0x427e00
  42dbd2:	mov    DWORD PTR [rbx+0x38],0x0
  42dbd9:	jmp    0x42d9fb
  42dbde:	xchg   ax,ax
  42dbe0:	test   rcx,rcx
  42dbe3:	je     0x42db70
  42dbe5:	lea    rdx,[rip+0x28cbc]        # 0x4568a8
  42dbec:	mov    rcx,rax
  42dbef:	call   0x449390
  42dbf4:	cmp    eax,0x2
  42dbf7:	jle    0x42dc09
  42dbf9:	cdqe   
  42dbfb:	lea    rsi,[rsi+rax*1-0x2]
  42dc00:	test   rsi,rsi
  42dc03:	je     0x42db70
  42dc09:	mov    eax,DWORD PTR [rbx+0x40]
  42dc0c:	test   eax,eax
  42dc0e:	je     0x42d960
  42dc14:	movzx  ecx,BYTE PTR [rsi]
  42dc17:	mov    rdx,QWORD PTR [rip+0x2d212]        # 0x45ae30
  42dc1e:	test   BYTE PTR [rdx+rcx*2],0x4
  42dc22:	jne    0x42dc2d
  42dc24:	cmp    cl,0x74
  42dc27:	jne    0x42db70
  42dc2d:	mov    r15,QWORD PTR [rsp+0x20]
  42dc32:	mov    esi,0x1
  42dc37:	jmp    0x42d9d3
  42dc3c:	nop    DWORD PTR [rax+0x0]
  42dc40:	test   ah,0x20
  42dc43:	je     0x42dc60
  42dc45:	movzx  eax,BYTE PTR [rsi+0x2]
  42dc49:	cmp    al,0x74
  42dc4b:	je     0x42dd8e
  42dc51:	cmp    al,0x70
  42dc53:	jne    0x42dc60
  42dc55:	movzx  edx,BYTE PTR [rsi+0x3]
  42dc59:	jmp    0x42d996
  42dc5e:	xchg   ax,ax
  42dc60:	cmp    rsi,QWORD PTR [rsp+0x20]
  42dc65:	je     0x42ddc7
  42dc6b:	movzx  eax,BYTE PTR [rsi+0x2]
  42dc6f:	test   al,al
  42dc71:	je     0x42db70
  42dc77:	jmp    0x42d9ad
  42dc7c:	nop    DWORD PTR [rax+0x0]
  42dc80:	lea    rcx,[rsp+0x40]
  42dc85:	lea    rdx,[rip+0x28c45]        # 0x4568d1
  42dc8c:	call   0x427e00
  42dc91:	mov    DWORD PTR [rbx+0x3c],0x0
  42dc98:	jmp    0x42d9fb
  42dc9d:	nop    DWORD PTR [rax]
  42dca0:	lea    rcx,[rsp+0x40]
  42dca5:	lea    rdx,[rip+0x28c42]        # 0x4568ee
  42dcac:	call   0x427e00
  42dcb1:	mov    DWORD PTR [rbx+0x4c],0x0
  42dcb8:	jmp    0x42d9fb
  42dcbd:	nop    DWORD PTR [rax]
  42dcc0:	mov    r15,QWORD PTR [rsp+0xb8]
  42dcc8:	test   r15,r15
  42dccb:	je     0x42dce8
  42dccd:	cmp    BYTE PTR [r15],0x0
  42dcd1:	je     0x42dce8
  42dcd3:	lea    rcx,[rsp+0x40]
  42dcd8:	mov    rdx,r15
  42dcdb:	call   0x427e40
  42dce0:	mov    r15,QWORD PTR [rsp+0xb8]
  42dce8:	mov    rcx,r15
  42dceb:	mov    esi,0x1
  42dcf0:	call   0x4493c0
  42dcf5:	add    r15,rax
  42dcf8:	mov    QWORD PTR [rsp+0xb8],r15
  42dd00:	jmp    0x42d9d3
  42dd05:	add    r15,0x7
  42dd09:	mov    DWORD PTR [rbx+0x3c],0x2
  42dd10:	mov    QWORD PTR [rsp+0xb8],r15
  42dd18:	mov    QWORD PTR [rsp+0x20],r15
  42dd1d:	jmp    0x42db48
  42dd22:	movzx  edx,BYTE PTR [rsi+0x2]
  42dd26:	mov    rax,QWORD PTR [rip+0x2d103]        # 0x45ae30
  42dd2d:	movzx  eax,WORD PTR [rax+rdx*2]
  42dd31:	mov    r8,rdx
  42dd34:	shr    ax,0x2
  42dd38:	and    eax,0x1
  42dd3b:	cmp    dl,0x74
  42dd3e:	sete   cl
  42dd41:	cmp    dl,0x51
  42dd44:	sete   dl
  42dd47:	or     ecx,edx
  42dd49:	cmp    r8b,0x4b
  42dd4d:	sete   dl
  42dd50:	or     edx,ecx
  42dd52:	cmp    r8b,0x48
  42dd56:	sete   cl
  42dd59:	or     dl,cl
  42dd5b:	jne    0x42dd65
  42dd5d:	test   al,al
  42dd5f:	je     0x42d96b
  42dd65:	test   al,al
  42dd67:	mov    edx,DWORD PTR [rbx]
  42dd69:	je     0x42dd74
  42dd6b:	test   dh,0x1c
  42dd6e:	jne    0x42de5d
  42dd74:	and    dh,0x3c
  42dd77:	jne    0x42dd7d
  42dd79:	add    DWORD PTR [rbx+0x38],0x1
  42dd7d:	lea    r15,[rsi+0x2]
  42dd81:	mov    QWORD PTR [rsp+0xb8],r15
  42dd89:	jmp    0x42dc32
  42dd8e:	cmp    BYTE PTR [rsi+0x3],0x6d
  42dd92:	jne    0x42d9ad
  42dd98:	mov    rcx,QWORD PTR [rsp+0x20]
  42dd9d:	call   0x4493c0
  42dda2:	lea    rdx,[rsp+0xb8]
  42ddaa:	lea    r9,[rsp+0x40]
  42ddaf:	mov    r8d,eax
  42ddb2:	mov    rcx,rbx
  42ddb5:	call   0x42ad20
  42ddba:	mov    r15,QWORD PTR [rsp+0xb8]
  42ddc2:	jmp    0x42dc32
  42ddc7:	mov    rax,QWORD PTR [rsp+0x20]
  42ddcc:	mov    rdx,QWORD PTR [rip+0x2d05d]        # 0x45ae30
  42ddd3:	movzx  ecx,BYTE PTR [rax+0x2]
  42ddd7:	test   BYTE PTR [rdx+rcx*2],0x4
  42dddb:	jne    0x42dc6b
  42dde1:	cmp    cl,0x74
  42dde4:	je     0x42dc6b
  42ddea:	test   DWORD PTR [rbx],0x3c00
  42ddf0:	je     0x42de06
  42ddf2:	jmp    0x42deec
  42ddf7:	nop    WORD PTR [rax+rax*1+0x0]
  42de00:	add    QWORD PTR [rsp+0x20],0x1
  42de06:	mov    rax,QWORD PTR [rsp+0x20]
  42de0b:	cmp    BYTE PTR [rax],0x5f
  42de0e:	je     0x42de00
  42de10:	mov    rcx,QWORD PTR [rsp+0x20]
  42de15:	lea    rdx,[rip+0x289f4]        # 0x456810
  42de1c:	call   0x449388
  42de21:	test   rax,rax
  42de24:	mov    r9,rax
  42de27:	je     0x42db70
  42de2d:	cmp    BYTE PTR [rax+0x2],0x0
  42de31:	je     0x42db70
  42de37:	lea    rdx,[rsp+0xb8]
  42de3f:	lea    r8,[rsp+0x40]
  42de44:	mov    rcx,rbx
  42de47:	call   0x42cfc0
  42de4c:	mov    esi,eax
  42de4e:	jmp    0x42d9c7
  42de53:	mov    QWORD PTR [rsp+0x20],r15
  42de58:	jmp    0x42db48
  42de5d:	lea    rcx,[rsp+0xb8]
  42de65:	add    rsi,0x2
  42de69:	mov    QWORD PTR [rsp+0xb8],rsi
  42de71:	call   0x4276e0
  42de76:	mov    r15,QWORD PTR [rsp+0xb8]
  42de7e:	test   r15,r15
  42de81:	je     0x42de9e
  42de83:	cmp    BYTE PTR [r15],0x0
  42de87:	je     0x42de9e
  42de89:	lea    rcx,[rsp+0x40]
  42de8e:	mov    rdx,r15
  42de91:	call   0x427e40
  42de96:	mov    r15,QWORD PTR [rsp+0xb8]
  42de9e:	mov    rcx,r15
  42dea1:	call   0x4493c0
  42dea6:	add    r15,rax
  42dea9:	mov    QWORD PTR [rsp+0xb8],r15
  42deb1:	jmp    0x42dc32
  42deb6:	add    r15,0xb
  42deba:	mov    DWORD PTR [rbx+0x3c],0x2
  42dec1:	mov    QWORD PTR [rsp+0xb8],r15
  42dec9:	jmp    0x42d92d
  42dece:	lea    rcx,[rsp+0x40]
  42ded3:	lea    rdx,[rip+0x289a1]        # 0x45687b
  42deda:	call   0x427e40
  42dedf:	mov    r15,QWORD PTR [rsp+0xb8]
  42dee7:	jmp    0x42dc32
  42deec:	mov    rsi,QWORD PTR [rsp+0x20]
  42def1:	lea    rdi,[rip+0x289b2]        # 0x4568aa
  42def8:	mov    ecx,0x8
  42defd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42deff:	jne    0x42de06
  42df05:	mov    rdi,QWORD PTR [rsp+0x20]
  42df0a:	lea    rsi,[rsp+0x38]
  42df0f:	movzx  edx,BYTE PTR [rdi+0x8]
  42df13:	mov    rax,rdi
  42df16:	add    rax,0x8
  42df1a:	mov    QWORD PTR [rsp+0x38],rax
  42df1f:	test   dl,dl
  42df21:	je     0x42df5d
  42df23:	mov    rcx,rsi
  42df26:	call   0x4276e0
  42df2b:	cmp    eax,0xffffffff
  42df2e:	je     0x42de06
  42df34:	cdqe   
  42df36:	add    rax,QWORD PTR [rsp+0x38]
  42df3b:	mov    QWORD PTR [rsp+0x38],rax
  42df40:	movzx  edx,BYTE PTR [rax]
  42df43:	cmp    dl,0x5f
  42df46:	jne    0x42df1f
  42df48:	cmp    BYTE PTR [rax+0x1],0x5f
  42df4c:	jne    0x42df23
  42df4e:	lea    rdx,[rax+0x2]
  42df52:	mov    QWORD PTR [rsp+0x38],rdx
  42df57:	movzx  edx,BYTE PTR [rax+0x2]
  42df5b:	jmp    0x42df1f
  42df5d:	mov    rax,QWORD PTR [rsp+0xb8]
  42df65:	lea    rsi,[rsp+0x40]
  42df6a:	lea    rdx,[rax+0x8]
  42df6e:	mov    QWORD PTR [rsp+0xb8],rdx
  42df76:	movzx  edx,BYTE PTR [rax+0x8]
  42df7a:	lea    rax,[rsp+0xb8]
  42df82:	mov    QWORD PTR [rsp+0x28],rax
  42df87:	test   dl,dl
  42df89:	je     0x42dece
  42df8f:	mov    rcx,QWORD PTR [rsp+0x28]
  42df94:	call   0x4276e0
  42df99:	cmp    eax,0xffffffff
  42df9c:	mov    edi,eax
  42df9e:	je     0x42de06
  42dfa4:	mov    r15,QWORD PTR [rsp+0xb8]
  42dfac:	mov    rcx,r15
  42dfaf:	call   0x4493c0
  42dfb4:	cmp    edi,eax
  42dfb6:	jg     0x42de06
  42dfbc:	test   edi,edi
  42dfbe:	jne    0x42e010
  42dfc0:	movsxd r9,edi
  42dfc3:	lea    rax,[r15+r9*1]
  42dfc7:	mov    QWORD PTR [rsp+0xb8],rax
  42dfcf:	movzx  edx,BYTE PTR [rax]
  42dfd2:	cmp    dl,0x5f
  42dfd5:	jne    0x42df87
  42dfd7:	cmp    BYTE PTR [rax+0x1],0x5f
  42dfdb:	jne    0x42df8f
  42dfdd:	lea    rdx,[rip+0x28224]        # 0x456208
  42dfe4:	mov    rcx,rsi
  42dfe7:	call   0x427e00
  42dfec:	mov    rax,QWORD PTR [rsp+0xb8]
  42dff4:	lea    rdx,[rax+0x2]
  42dff8:	mov    QWORD PTR [rsp+0xb8],rdx
  42e000:	movzx  edx,BYTE PTR [rax+0x2]
  42e004:	jmp    0x42df87
  42e006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e010:	mov    rdx,r15
  42e013:	mov    r8d,edi
  42e016:	mov    rcx,rsi
  42e019:	call   0x427da0
  42e01e:	mov    r15,QWORD PTR [rsp+0xb8]
  42e026:	jmp    0x42dfc0
  42e028:	nop
  42e029:	nop
  42e02a:	nop
  42e02b:	nop
  42e02c:	nop
  42e02d:	nop
  42e02e:	nop
  42e02f:	nop
  42e030:	push   rbx
  42e031:	cmp    edx,0x4c
  42e034:	ja     0x42e0a0
  42e036:	lea    rax,[rip+0x29783]        # 0x4577c0
  42e03d:	mov    r10d,edx
  42e040:	movsxd r10,DWORD PTR [rax+r10*4]
  42e044:	add    rax,r10
  42e047:	jmp    rax
  42e049:	nop    DWORD PTR [rax+0x0]
  42e050:	test   r8,r8
  42e053:	je     0x42e0a0
  42e055:	mov    r11d,DWORD PTR [rcx+0x28]
  42e059:	xor    eax,eax
  42e05b:	cmp    r11d,DWORD PTR [rcx+0x2c]
  42e05f:	jge    0x42e08b
  42e061:	movsxd r10,r11d
  42e064:	add    r11d,0x1
  42e068:	lea    rbx,[r10+r10*2]
  42e06c:	mov    r10,QWORD PTR [rcx+0x20]
  42e070:	mov    DWORD PTR [rcx+0x28],r11d
  42e074:	lea    r10,[r10+rbx*8]
  42e078:	test   r10,r10
  42e07b:	je     0x42e08b
  42e07d:	mov    DWORD PTR [r10],edx
  42e080:	mov    QWORD PTR [r10+0x8],r8
  42e084:	mov    rax,r10
  42e087:	mov    QWORD PTR [r10+0x10],r9
  42e08b:	pop    rbx
  42e08c:	ret    
  42e08d:	nop    DWORD PTR [rax]
  42e090:	test   r8,r8
  42e093:	je     0x42e0a0
  42e095:	test   r9,r9
  42e098:	jne    0x42e055
  42e09a:	nop    WORD PTR [rax+rax*1+0x0]
  42e0a0:	xor    eax,eax
  42e0a2:	pop    rbx
  42e0a3:	ret    
  42e0a4:	xchg   ax,ax
  42e0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e0b0:	mov    r9d,DWORD PTR [rcx+0x28]
  42e0b4:	cmp    r9d,DWORD PTR [rcx+0x2c]
  42e0b8:	jge    0x42e100
  42e0ba:	movsxd rax,r9d
  42e0bd:	add    r9d,0x1
  42e0c1:	lea    r10,[rax+rax*2]
  42e0c5:	mov    rax,QWORD PTR [rcx+0x20]
  42e0c9:	mov    DWORD PTR [rcx+0x28],r9d
  42e0cd:	lea    rax,[rax+r10*8]
  42e0d1:	test   rax,rax
  42e0d4:	sete   r9b
  42e0d8:	test   rdx,rdx
  42e0db:	sete   cl
  42e0de:	or     r9b,cl
  42e0e1:	jne    0x42e100
  42e0e3:	test   r8d,r8d
  42e0e6:	je     0x42e100
  42e0e8:	mov    DWORD PTR [rax],0x0
  42e0ee:	mov    QWORD PTR [rax+0x8],rdx
  42e0f2:	mov    DWORD PTR [rax+0x10],r8d
  42e0f6:	ret    
  42e0f7:	nop    WORD PTR [rax+rax*1+0x0]
  42e100:	xor    eax,eax
  42e102:	ret    
  42e103:	nop    DWORD PTR [rax]
  42e106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e110:	push   rbp
  42e111:	push   rdi
  42e112:	push   rsi
  42e113:	push   rbx
  42e114:	sub    rsp,0x28
  42e118:	mov    rax,QWORD PTR [rcx+0x18]
  42e11c:	mov    rbx,rcx
  42e11f:	mov    rbp,rdx
  42e122:	mov    edi,r8d
  42e125:	mov    rsi,rdx
  42e128:	movzx  ecx,BYTE PTR [rax]
  42e12b:	jmp    0x42e172
  42e12d:	nop    DWORD PTR [rax]
  42e130:	test   al,al
  42e132:	jne    0x42e180
  42e134:	cmp    cl,0x4b
  42e137:	jne    0x42e1c0
  42e13d:	add    QWORD PTR [rbx+0x18],0x1
  42e142:	cmp    edi,0x1
  42e145:	sbb    edx,edx
  42e147:	add    DWORD PTR [rbx+0x50],0x6
  42e14b:	and    edx,0xfffffffd
  42e14e:	add    edx,0x1e
  42e151:	xor    r9d,r9d
  42e154:	xor    r8d,r8d
  42e157:	mov    rcx,rbx
  42e15a:	call   0x42e030
  42e15f:	test   rax,rax
  42e162:	mov    QWORD PTR [rsi],rax
  42e165:	je     0x42e1b5
  42e167:	lea    rsi,[rax+0x8]
  42e16b:	mov    rax,QWORD PTR [rbx+0x18]
  42e16f:	movzx  ecx,BYTE PTR [rax]
  42e172:	cmp    cl,0x72
  42e175:	sete   al
  42e178:	cmp    cl,0x56
  42e17b:	sete   dl
  42e17e:	jne    0x42e130
  42e180:	add    QWORD PTR [rbx+0x18],0x1
  42e185:	test   al,al
  42e187:	je     0x42e1a0
  42e189:	cmp    edi,0x1
  42e18c:	sbb    edx,edx
  42e18e:	add    DWORD PTR [rbx+0x50],0x9
  42e192:	and    edx,0xfffffffd
  42e195:	add    edx,0x1c
  42e198:	jmp    0x42e151
  42e19a:	nop    WORD PTR [rax+rax*1+0x0]
  42e1a0:	test   dl,dl
  42e1a2:	je     0x42e142
  42e1a4:	cmp    edi,0x1
  42e1a7:	sbb    edx,edx
  42e1a9:	add    DWORD PTR [rbx+0x50],0x9
  42e1ad:	and    edx,0xfffffffd
  42e1b0:	add    edx,0x1d
  42e1b3:	jmp    0x42e151
  42e1b5:	xor    eax,eax
  42e1b7:	add    rsp,0x28
  42e1bb:	pop    rbx
  42e1bc:	pop    rsi
  42e1bd:	pop    rdi
  42e1be:	pop    rbp
  42e1bf:	ret    
  42e1c0:	test   edi,edi
  42e1c2:	jne    0x42e210
  42e1c4:	cmp    cl,0x46
  42e1c7:	jne    0x42e210
  42e1c9:	cmp    rbp,rsi
  42e1cc:	jne    0x42e1ea
  42e1ce:	jmp    0x42e210
  42e1d0:	cmp    eax,0x1b
  42e1d3:	je     0x42e220
  42e1d5:	cmp    eax,0x19
  42e1d8:	jne    0x42e1e1
  42e1da:	mov    DWORD PTR [rbp+0x0],0x1c
  42e1e1:	add    rbp,0x8
  42e1e5:	cmp    rbp,rsi
  42e1e8:	je     0x42e210
  42e1ea:	mov    rbp,QWORD PTR [rbp+0x0]
  42e1ee:	mov    eax,DWORD PTR [rbp+0x0]
  42e1f1:	cmp    eax,0x1a
  42e1f4:	jne    0x42e1d0
  42e1f6:	mov    DWORD PTR [rbp+0x0],0x1d
  42e1fd:	add    rbp,0x8
  42e201:	cmp    rbp,rsi
  42e204:	jne    0x42e1ea
  42e206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e210:	mov    rax,rsi
  42e213:	add    rsp,0x28
  42e217:	pop    rbx
  42e218:	pop    rsi
  42e219:	pop    rdi
  42e21a:	pop    rbp
  42e21b:	ret    
  42e21c:	nop    DWORD PTR [rax+0x0]
  42e220:	mov    DWORD PTR [rbp+0x0],0x1e
  42e227:	jmp    0x42e1e1
  42e229:	nop    DWORD PTR [rax+0x0]
  42e230:	mov    r9,QWORD PTR [rcx+0x18]
  42e234:	mov    r8,rdx
  42e237:	movzx  r10d,BYTE PTR [r9]
  42e23b:	cmp    r10b,0x52
  42e23f:	sete   al
  42e242:	cmp    r10b,0x4f
  42e246:	je     0x42e250
  42e248:	test   al,al
  42e24a:	jne    0x42e270
  42e24c:	mov    rax,rdx
  42e24f:	ret    
  42e250:	test   al,al
  42e252:	jne    0x42e270
  42e254:	add    DWORD PTR [rcx+0x50],0x3
  42e258:	add    r9,0x1
  42e25c:	mov    edx,0x20
  42e261:	mov    QWORD PTR [rcx+0x18],r9
  42e265:	xor    r9d,r9d
  42e268:	jmp    0x42e030
  42e26d:	nop    DWORD PTR [rax]
  42e270:	add    DWORD PTR [rcx+0x50],0x2
  42e274:	add    r9,0x1
  42e278:	mov    edx,0x1f
  42e27d:	mov    QWORD PTR [rcx+0x18],r9
  42e281:	xor    r9d,r9d
  42e284:	jmp    0x42e030
  42e289:	nop    DWORD PTR [rax+0x0]
  42e290:	push   rdi
  42e291:	push   rsi
  42e292:	push   rbx
  42e293:	mov    rax,QWORD PTR [rcx+0x18]
  42e297:	cmp    BYTE PTR [rax],0x53
  42e29a:	je     0x42e2a2
  42e29c:	xor    eax,eax
  42e29e:	pop    rbx
  42e29f:	pop    rsi
  42e2a0:	pop    rdi
  42e2a1:	ret    
  42e2a2:	lea    r8,[rax+0x1]
  42e2a6:	mov    QWORD PTR [rcx+0x18],r8
  42e2aa:	cmp    BYTE PTR [rax+0x1],0x0
  42e2ae:	jne    0x42e303
  42e2b0:	xor    eax,eax
  42e2b2:	mov    r8d,DWORD PTR [rcx+0x10]
  42e2b6:	shr    r8d,0x3
  42e2ba:	and    r8d,0x1
  42e2be:	test   edx,edx
  42e2c0:	setne  dl
  42e2c3:	cmp    r8b,dl
  42e2c6:	jae    0x42e2d9
  42e2c8:	mov    rdx,QWORD PTR [rcx+0x18]
  42e2cc:	movzx  edx,BYTE PTR [rdx]
  42e2cf:	sub    edx,0x43
  42e2d2:	cmp    dl,0x1
  42e2d5:	setbe  r8b
  42e2d9:	lea    rdx,[rip+0x2a2e0]        # 0x4585c0
  42e2e0:	lea    r9,[rip+0x2a461]        # 0x458748
  42e2e7:	movzx  r8d,r8b
  42e2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  42e2f0:	cmp    al,BYTE PTR [rdx]
  42e2f2:	je     0x42e3a7
  42e2f8:	add    rdx,0x38
  42e2fc:	cmp    rdx,r9
  42e2ff:	jne    0x42e2f0
  42e301:	jmp    0x42e29c
  42e303:	lea    r8,[rax+0x2]
  42e307:	mov    QWORD PTR [rcx+0x18],r8
  42e30b:	movsx  eax,BYTE PTR [rax+0x1]
  42e30f:	lea    r8d,[rax-0x30]
  42e313:	cmp    r8b,0x9
  42e317:	jbe    0x42e321
  42e319:	cmp    al,0x5f
  42e31b:	jne    0x42e453
  42e321:	cmp    al,0x5f
  42e323:	je     0x42e384
  42e325:	xor    edx,edx
  42e327:	jmp    0x42e35d
  42e329:	nop    DWORD PTR [rax+0x0]
  42e330:	lea    r8d,[rdx+rdx*8]
  42e334:	lea    r8d,[rax+r8*4-0x30]
  42e339:	cmp    edx,r8d
  42e33c:	ja     0x42e29c
  42e342:	mov    rax,QWORD PTR [rcx+0x18]
  42e346:	cmp    BYTE PTR [rax],0x0
  42e349:	je     0x42e380
  42e34b:	lea    rdx,[rax+0x1]
  42e34f:	mov    QWORD PTR [rcx+0x18],rdx
  42e353:	movsx  eax,BYTE PTR [rax]
  42e356:	cmp    al,0x5f
  42e358:	je     0x42e3a1
  42e35a:	mov    edx,r8d
  42e35d:	lea    r8d,[rax-0x30]
  42e361:	cmp    r8b,0x9
  42e365:	jbe    0x42e330
  42e367:	lea    r8d,[rax-0x41]
  42e36b:	cmp    r8b,0x19
  42e36f:	ja     0x42e29c
  42e375:	lea    r8d,[rdx+rdx*8]
  42e379:	lea    r8d,[rax+r8*4-0x37]
  42e37e:	jmp    0x42e339
  42e380:	xor    eax,eax
  42e382:	jmp    0x42e35a
  42e384:	xor    r8d,r8d
  42e387:	cmp    r8d,DWORD PTR [rcx+0x38]
  42e38b:	jae    0x42e29c
  42e391:	mov    rax,QWORD PTR [rcx+0x30]
  42e395:	add    DWORD PTR [rcx+0x40],0x1
  42e399:	mov    rax,QWORD PTR [rax+r8*8]
  42e39d:	pop    rbx
  42e39e:	pop    rsi
  42e39f:	pop    rdi
  42e3a0:	ret    
  42e3a1:	add    r8d,0x1
  42e3a5:	jmp    0x42e387
  42e3a7:	mov    r11,QWORD PTR [rdx+0x28]
  42e3ab:	test   r11,r11
  42e3ae:	je     0x42e440
  42e3b4:	mov    r9d,DWORD PTR [rcx+0x28]
  42e3b8:	mov    r10d,DWORD PTR [rcx+0x2c]
  42e3bc:	xor    ebx,ebx
  42e3be:	mov    esi,DWORD PTR [rdx+0x30]
  42e3c1:	cmp    r9d,r10d
  42e3c4:	jge    0x42e3f2
  42e3c6:	movsxd rax,r9d
  42e3c9:	add    r9d,0x1
  42e3cd:	lea    rdi,[rax+rax*2]
  42e3d1:	mov    rax,QWORD PTR [rcx+0x20]
  42e3d5:	mov    DWORD PTR [rcx+0x28],r9d
  42e3d9:	lea    rax,[rax+rdi*8]
  42e3dd:	test   rax,rax
  42e3e0:	je     0x42e3f2
  42e3e2:	mov    DWORD PTR [rax],0x18
  42e3e8:	mov    QWORD PTR [rax+0x8],r11
  42e3ec:	mov    rbx,rax
  42e3ef:	mov    DWORD PTR [rax+0x10],esi
  42e3f2:	mov    QWORD PTR [rcx+0x48],rbx
  42e3f6:	test   r8d,r8d
  42e3f9:	je     0x42e44a
  42e3fb:	mov    r8,QWORD PTR [rdx+0x18]
  42e3ff:	mov    edx,DWORD PTR [rdx+0x20]
  42e402:	add    DWORD PTR [rcx+0x50],edx
  42e405:	cmp    r10d,r9d
  42e408:	jle    0x42e29c
  42e40e:	movsxd rax,r9d
  42e411:	add    r9d,0x1
  42e415:	lea    r10,[rax+rax*2]
  42e419:	mov    rax,QWORD PTR [rcx+0x20]
  42e41d:	mov    DWORD PTR [rcx+0x28],r9d
  42e421:	lea    rax,[rax+r10*8]
  42e425:	test   rax,rax
  42e428:	je     0x42e29c
  42e42e:	mov    DWORD PTR [rax],0x18
  42e434:	mov    QWORD PTR [rax+0x8],r8
  42e438:	mov    DWORD PTR [rax+0x10],edx
  42e43b:	jmp    0x42e29e
  42e440:	mov    r10d,DWORD PTR [rcx+0x2c]
  42e444:	mov    r9d,DWORD PTR [rcx+0x28]
  42e448:	jmp    0x42e3f6
  42e44a:	mov    r8,QWORD PTR [rdx+0x8]
  42e44e:	mov    edx,DWORD PTR [rdx+0x10]
  42e451:	jmp    0x42e402
  42e453:	lea    r8d,[rax-0x41]
  42e457:	cmp    r8b,0x19
  42e45b:	jbe    0x42e325
  42e461:	jmp    0x42e2b2
  42e466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e470:	push   rbp
  42e471:	push   rdi
  42e472:	push   rsi
  42e473:	push   rbx
  42e474:	sub    rsp,0x28
  42e478:	lea    rsi,[rip+0x29475]        # 0x4578f4
  42e47f:	test   r8,r8
  42e482:	mov    rdi,rcx
  42e485:	mov    rbp,rdx
  42e488:	mov    rbx,r8
  42e48b:	je     0x42e4a9
  42e48d:	nop    DWORD PTR [rax]
  42e490:	cmp    DWORD PTR [rbx],0x4c
  42e493:	ja     0x42e4a9
  42e495:	mov    eax,DWORD PTR [rbx]
  42e497:	movsxd rax,DWORD PTR [rsi+rax*4]
  42e49b:	add    rax,rsi
  42e49e:	jmp    rax
  42e4a0:	mov    rbx,QWORD PTR [rbx+0x10]
  42e4a4:	test   rbx,rbx
  42e4a7:	jne    0x42e490
  42e4a9:	add    rsp,0x28
  42e4ad:	pop    rbx
  42e4ae:	pop    rsi
  42e4af:	pop    rdi
  42e4b0:	pop    rbp
  42e4b1:	ret    
  42e4b2:	mov    rbx,QWORD PTR [rbx+0x8]
  42e4b6:	jmp    0x42e4a4
  42e4b8:	nop    DWORD PTR [rax+rax*1+0x0]
  42e4c0:	mov    r8,QWORD PTR [rbx+0x8]
  42e4c4:	cmp    DWORD PTR [r8],0x5
  42e4c8:	jne    0x42e4d2
  42e4ca:	add    DWORD PTR [rbp+0x0],0x1
  42e4ce:	mov    r8,QWORD PTR [rbx+0x8]
  42e4d2:	mov    rdx,rbp
  42e4d5:	mov    rcx,rdi
  42e4d8:	call   0x42e470
  42e4dd:	mov    rbx,QWORD PTR [rbx+0x10]
  42e4e1:	jmp    0x42e4a4
  42e4e3:	add    DWORD PTR [rdi],0x1
  42e4e6:	mov    r8,QWORD PTR [rbx+0x8]
  42e4ea:	jmp    0x42e4d2
  42e4ec:	nop    DWORD PTR [rax+0x0]
  42e4f0:	push   rsi
  42e4f1:	push   rbx
  42e4f2:	sub    rsp,0x28
  42e4f6:	mov    rax,QWORD PTR [rcx+0x100]
  42e4fd:	mov    rbx,rcx
  42e500:	mov    esi,edx
  42e502:	cmp    rax,0xff
  42e508:	je     0x42e530
  42e50a:	lea    rdx,[rax+0x1]
  42e50e:	mov    QWORD PTR [rbx+0x100],rdx
  42e515:	mov    BYTE PTR [rbx+rax*1],sil
  42e519:	mov    BYTE PTR [rbx+0x108],sil
  42e520:	add    rsp,0x28
  42e524:	pop    rbx
  42e525:	pop    rsi
  42e526:	ret    
  42e527:	nop    WORD PTR [rax+rax*1+0x0]
  42e530:	mov    edx,0xff
  42e535:	mov    BYTE PTR [rcx+0xff],0x0
  42e53c:	mov    r8,QWORD PTR [rcx+0x118]
  42e543:	call   QWORD PTR [rbx+0x110]
  42e549:	add    DWORD PTR [rbx+0x138],0x1
  42e550:	mov    edx,0x1
  42e555:	xor    eax,eax
  42e557:	jmp    0x42e50e
  42e559:	nop    DWORD PTR [rax+0x0]
  42e560:	mov    r8,QWORD PTR [rcx]
  42e563:	xor    r11d,r11d
  42e566:	xor    eax,eax
  42e568:	movsx  edx,BYTE PTR [r8]
  42e56c:	cmp    dl,0x6e
  42e56f:	je     0x42e5c0
  42e571:	lea    r8d,[rdx-0x30]
  42e575:	xor    r9d,r9d
  42e578:	cmp    r8b,0x9
  42e57c:	ja     0x42e5af
  42e57e:	mov    r9,QWORD PTR [rcx]
  42e581:	lea    r8,[r9+0x1]
  42e585:	xor    r9d,r9d
  42e588:	nop    DWORD PTR [rax+rax*1+0x0]
  42e590:	lea    r10d,[r9+r9*4]
  42e594:	mov    QWORD PTR [rcx],r8
  42e597:	add    r8,0x1
  42e59b:	lea    r9d,[rdx+r10*2-0x30]
  42e5a0:	movsx  edx,BYTE PTR [r8-0x1]
  42e5a5:	lea    r10d,[rdx-0x30]
  42e5a9:	cmp    r10b,0x9
  42e5ad:	jbe    0x42e590
  42e5af:	xor    eax,r9d
  42e5b2:	add    eax,r11d
  42e5b5:	ret    
  42e5b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e5c0:	lea    rax,[r8+0x1]
  42e5c4:	mov    r11b,0x1
  42e5c7:	mov    QWORD PTR [rcx],rax
  42e5ca:	mov    eax,0xffffffff
  42e5cf:	movsx  edx,BYTE PTR [r8+0x1]
  42e5d4:	jmp    0x42e571
  42e5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e5e0:	push   rbx
  42e5e1:	sub    rsp,0x20
  42e5e5:	mov    eax,DWORD PTR [rcx+0x28]
  42e5e8:	cmp    eax,DWORD PTR [rcx+0x2c]
  42e5eb:	jge    0x42e622
  42e5ed:	movsxd rdx,eax
  42e5f0:	add    eax,0x1
  42e5f3:	lea    r8,[rdx+rdx*2]
  42e5f7:	mov    rdx,QWORD PTR [rcx+0x20]
  42e5fb:	mov    DWORD PTR [rcx+0x28],eax
  42e5fe:	lea    rbx,[rdx+r8*8]
  42e602:	test   rbx,rbx
  42e605:	je     0x42e622
  42e607:	mov    DWORD PTR [rbx],0x41
  42e60d:	add    rcx,0x18
  42e611:	call   0x42e560
  42e616:	mov    DWORD PTR [rbx+0x8],eax
  42e619:	mov    rax,rbx
  42e61c:	add    rsp,0x20
  42e620:	pop    rbx
  42e621:	ret    
  42e622:	xor    eax,eax
  42e624:	add    rsp,0x20
  42e628:	pop    rbx
  42e629:	ret    
  42e62a:	nop    WORD PTR [rax+rax*1+0x0]
  42e630:	push   rbx
  42e631:	sub    rsp,0x20
  42e635:	mov    rdx,QWORD PTR [rcx+0x18]
  42e639:	mov    rbx,rcx
  42e63c:	movzx  eax,BYTE PTR [rdx]
  42e63f:	cmp    al,0x5f
  42e641:	je     0x42e670
  42e643:	cmp    al,0x6e
  42e645:	je     0x42e674
  42e647:	lea    rcx,[rcx+0x18]
  42e64b:	call   0x42e560
  42e650:	add    eax,0x1
  42e653:	js     0x42e674
  42e655:	mov    rdx,QWORD PTR [rbx+0x18]
  42e659:	cmp    BYTE PTR [rdx],0x5f
  42e65c:	jne    0x42e674
  42e65e:	add    rdx,0x1
  42e662:	mov    QWORD PTR [rbx+0x18],rdx
  42e666:	add    rsp,0x20
  42e66a:	pop    rbx
  42e66b:	ret    
  42e66c:	nop    DWORD PTR [rax+0x0]
  42e670:	xor    eax,eax
  42e672:	jmp    0x42e65e
  42e674:	mov    eax,0xffffffff
  42e679:	add    rsp,0x20
  42e67d:	pop    rbx
  42e67e:	ret    
  42e67f:	nop
  42e680:	push   rbx
  42e681:	sub    rsp,0x20
  42e685:	mov    rax,QWORD PTR [rcx+0x18]
  42e689:	cmp    BYTE PTR [rax],0x54
  42e68c:	je     0x42e6a0
  42e68e:	xor    eax,eax
  42e690:	add    rsp,0x20
  42e694:	pop    rbx
  42e695:	ret    
  42e696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e6a0:	add    rax,0x1
  42e6a4:	mov    rbx,rcx
  42e6a7:	mov    QWORD PTR [rcx+0x18],rax
  42e6ab:	call   0x42e630
  42e6b0:	test   eax,eax
  42e6b2:	js     0x42e68e
  42e6b4:	add    DWORD PTR [rbx+0x40],0x1
  42e6b8:	mov    ecx,DWORD PTR [rbx+0x28]
  42e6bb:	cmp    ecx,DWORD PTR [rbx+0x2c]
  42e6be:	jge    0x42e68e
  42e6c0:	movsxd rdx,ecx
  42e6c3:	add    ecx,0x1
  42e6c6:	lea    r8,[rdx+rdx*2]
  42e6ca:	mov    rdx,QWORD PTR [rbx+0x20]
  42e6ce:	mov    DWORD PTR [rbx+0x28],ecx
  42e6d1:	lea    rdx,[rdx+r8*8]
  42e6d5:	test   rdx,rdx
  42e6d8:	je     0x42e68e
  42e6da:	mov    DWORD PTR [rdx+0x8],eax
  42e6dd:	mov    rax,rdx
  42e6e0:	mov    DWORD PTR [rdx],0x5
  42e6e6:	add    rsp,0x20
  42e6ea:	pop    rbx
  42e6eb:	ret    
  42e6ec:	nop    DWORD PTR [rax+0x0]
  42e6f0:	sub    rsp,0x28
  42e6f4:	mov    rdx,QWORD PTR [rcx+0x18]
  42e6f8:	mov    eax,0x1
  42e6fd:	cmp    BYTE PTR [rdx],0x5f
  42e700:	je     0x42e710
  42e702:	add    rsp,0x28
  42e706:	ret    
  42e707:	nop    WORD PTR [rax+rax*1+0x0]
  42e710:	add    rdx,0x1
  42e714:	add    rcx,0x18
  42e718:	mov    QWORD PTR [rcx],rdx
  42e71b:	call   0x42e560
  42e720:	not    eax
  42e722:	shr    eax,0x1f
  42e725:	add    rsp,0x28
  42e729:	ret    
  42e72a:	nop    WORD PTR [rax+rax*1+0x0]
  42e730:	push   rdi
  42e731:	push   rsi
  42e732:	push   rbx
  42e733:	sub    rsp,0x20
  42e737:	mov    rbx,rcx
  42e73a:	lea    rcx,[rcx+0x18]
  42e73e:	call   0x42e560
  42e743:	test   eax,eax
  42e745:	mov    esi,eax
  42e747:	jle    0x42e800
  42e74d:	mov    rdi,QWORD PTR [rbx+0x18]
  42e751:	mov    rax,QWORD PTR [rbx+0x8]
  42e755:	movsxd r9,esi
  42e758:	sub    rax,rdi
  42e75b:	cmp    rax,r9
  42e75e:	jl     0x42e804
  42e764:	add    r9,rdi
  42e767:	test   BYTE PTR [rbx+0x10],0x4
  42e76b:	mov    QWORD PTR [rbx+0x18],r9
  42e76f:	jne    0x42e7b0
  42e771:	cmp    esi,0x9
  42e774:	jle    0x42e78f
  42e776:	lea    rdx,[rip+0x292ab]        # 0x457a28
  42e77d:	mov    r8d,0x8
  42e783:	mov    rcx,rdi
  42e786:	call   0x449458
  42e78b:	test   eax,eax
  42e78d:	je     0x42e7c0
  42e78f:	mov    r8d,esi
  42e792:	mov    rdx,rdi
  42e795:	mov    rcx,rbx
  42e798:	call   0x42e0b0
  42e79d:	mov    QWORD PTR [rbx+0x48],rax
  42e7a1:	add    rsp,0x20
  42e7a5:	pop    rbx
  42e7a6:	pop    rsi
  42e7a7:	pop    rdi
  42e7a8:	ret    
  42e7a9:	nop    DWORD PTR [rax+0x0]
  42e7b0:	cmp    BYTE PTR [r9],0x24
  42e7b4:	jne    0x42e771
  42e7b6:	add    r9,0x1
  42e7ba:	mov    QWORD PTR [rbx+0x18],r9
  42e7be:	jmp    0x42e771
  42e7c0:	movzx  eax,BYTE PTR [rdi+0x8]
  42e7c4:	cmp    al,0x5f
  42e7c6:	sete   cl
  42e7c9:	cmp    al,0x2e
  42e7cb:	sete   dl
  42e7ce:	or     cl,dl
  42e7d0:	jne    0x42e7d6
  42e7d2:	cmp    al,0x24
  42e7d4:	jne    0x42e78f
  42e7d6:	cmp    BYTE PTR [rdi+0x9],0x4e
  42e7da:	jne    0x42e78f
  42e7dc:	mov    eax,DWORD PTR [rbx+0x50]
  42e7df:	lea    rdx,[rip+0x2924b]        # 0x457a31
  42e7e6:	mov    r8d,0x15
  42e7ec:	mov    rcx,rbx
  42e7ef:	add    eax,0x16
  42e7f2:	sub    eax,esi
  42e7f4:	mov    DWORD PTR [rbx+0x50],eax
  42e7f7:	call   0x42e0b0
  42e7fc:	jmp    0x42e79d
  42e7fe:	xchg   ax,ax
  42e800:	xor    eax,eax
  42e802:	jmp    0x42e7a1
  42e804:	xor    eax,eax
  42e806:	jmp    0x42e79d
  42e808:	nop    DWORD PTR [rax+rax*1+0x0]
  42e810:	push   rsi
  42e811:	push   rbx
  42e812:	sub    rsp,0x28
  42e816:	test   edx,edx
  42e818:	mov    rbx,rcx
  42e81b:	jne    0x42e83b
  42e81d:	mov    rax,QWORD PTR [rcx+0x18]
  42e821:	cmp    BYTE PTR [rax],0x0
  42e824:	jne    0x42e830
  42e826:	xor    eax,eax
  42e828:	add    rsp,0x28
  42e82c:	pop    rbx
  42e82d:	pop    rsi
  42e82e:	ret    
  42e82f:	nop
  42e830:	lea    rdx,[rax+0x1]
  42e834:	mov    QWORD PTR [rcx+0x18],rdx
  42e838:	movsx  edx,BYTE PTR [rax]
  42e83b:	cmp    edx,0x68
  42e83e:	je     0x42e870
  42e840:	cmp    edx,0x76
  42e843:	jne    0x42e826
  42e845:	lea    rsi,[rbx+0x18]
  42e849:	mov    rcx,rsi
  42e84c:	call   0x42e560
  42e851:	mov    rax,QWORD PTR [rbx+0x18]
  42e855:	cmp    BYTE PTR [rax],0x5f
  42e858:	jne    0x42e826
  42e85a:	add    rax,0x1
  42e85e:	mov    rcx,rsi
  42e861:	mov    QWORD PTR [rbx+0x18],rax
  42e865:	call   0x42e560
  42e86a:	jmp    0x42e879
  42e86c:	nop    DWORD PTR [rax+0x0]
  42e870:	lea    rcx,[rbx+0x18]
  42e874:	call   0x42e560
  42e879:	mov    rax,QWORD PTR [rbx+0x18]
  42e87d:	cmp    BYTE PTR [rax],0x5f
  42e880:	jne    0x42e826
  42e882:	add    rax,0x1
  42e886:	mov    QWORD PTR [rbx+0x18],rax
  42e88a:	mov    eax,0x1
  42e88f:	jmp    0x42e828
  42e891:	nop    DWORD PTR [rax+rax*1+0x0]
  42e896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e8a0:	mov    rax,QWORD PTR [rcx+0x120]
  42e8a7:	test   rax,rax
  42e8aa:	je     0x42e8f8
  42e8ac:	mov    rax,QWORD PTR [rax+0x8]
  42e8b0:	mov    edx,DWORD PTR [rdx]
  42e8b2:	mov    rax,QWORD PTR [rax+0x10]
  42e8b6:	test   rax,rax
  42e8b9:	je     0x42e8f0
  42e8bb:	cmp    DWORD PTR [rax],0x2f
  42e8be:	jne    0x42e8f0
  42e8c0:	cmp    edx,0x0
  42e8c3:	jg     0x42e8d9
  42e8c5:	jmp    0x42e8e7
  42e8c7:	nop    WORD PTR [rax+rax*1+0x0]
  42e8d0:	cmp    DWORD PTR [rax],0x2f
  42e8d3:	jne    0x42e8f0
  42e8d5:	test   edx,edx
  42e8d7:	je     0x42e8f3
  42e8d9:	mov    rax,QWORD PTR [rax+0x10]
  42e8dd:	sub    edx,0x1
  42e8e0:	test   rax,rax
  42e8e3:	jne    0x42e8d0
  42e8e5:	repz ret 
  42e8e7:	je     0x42e8f3
  42e8e9:	nop    DWORD PTR [rax+0x0]
  42e8f0:	xor    eax,eax
  42e8f2:	ret    
  42e8f3:	mov    rax,QWORD PTR [rax+0x8]
  42e8f7:	ret    
  42e8f8:	mov    DWORD PTR [rcx+0x130],0x1
  42e902:	ret    
  42e903:	nop    DWORD PTR [rax]
  42e906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e910:	push   rdi
  42e911:	push   rsi
  42e912:	push   rbx
  42e913:	sub    rsp,0x20
  42e917:	lea    rsi,[rip+0x2912a]        # 0x457a48
  42e91e:	test   rdx,rdx
  42e921:	mov    rdi,rcx
  42e924:	mov    rbx,rdx
  42e927:	je     0x42e960
  42e929:	cmp    DWORD PTR [rbx],0x4b
  42e92c:	ja     0x42e940
  42e92e:	mov    eax,DWORD PTR [rbx]
  42e930:	movsxd rax,DWORD PTR [rsi+rax*4]
  42e934:	add    rax,rsi
  42e937:	jmp    rax
  42e939:	nop    DWORD PTR [rax+0x0]
  42e940:	mov    rdx,QWORD PTR [rbx+0x8]
  42e944:	mov    rcx,rdi
  42e947:	call   0x42e910
  42e94c:	test   rax,rax
  42e94f:	jne    0x42e962
  42e951:	mov    rbx,QWORD PTR [rbx+0x10]
  42e955:	test   rbx,rbx
  42e958:	jne    0x42e929
  42e95a:	nop    WORD PTR [rax+rax*1+0x0]
  42e960:	xor    eax,eax
  42e962:	add    rsp,0x20
  42e966:	pop    rbx
  42e967:	pop    rsi
  42e968:	pop    rdi
  42e969:	ret    
  42e96a:	nop    WORD PTR [rax+rax*1+0x0]
  42e970:	lea    rdx,[rbx+0x8]
  42e974:	mov    rcx,rdi
  42e977:	call   0x42e8a0
  42e97c:	test   rax,rax
  42e97f:	je     0x42e960
  42e981:	cmp    DWORD PTR [rax],0x2f
  42e984:	jne    0x42e960
  42e986:	add    rsp,0x20
  42e98a:	pop    rbx
  42e98b:	pop    rsi
  42e98c:	pop    rdi
  42e98d:	ret    
  42e98e:	xchg   ax,ax
  42e990:	push   rbp
  42e991:	push   rdi
  42e992:	push   rsi
  42e993:	push   rbx
  42e994:	sub    rsp,0x28
  42e998:	mov    rax,QWORD PTR [r8+0x8]
  42e99c:	mov    rbx,QWORD PTR [r8+0x10]
  42e9a0:	mov    rbp,rcx
  42e9a3:	mov    rdi,rdx
  42e9a6:	mov    rsi,r8
  42e9a9:	lea    rax,[rdx+rax*1+0x1]
  42e9ae:	cmp    rax,rbx
  42e9b1:	ja     0x42e9f2
  42e9b3:	mov    eax,DWORD PTR [rsi+0x18]
  42e9b6:	test   eax,eax
  42e9b8:	je     0x42e9c3
  42e9ba:	add    rsp,0x28
  42e9be:	pop    rbx
  42e9bf:	pop    rsi
  42e9c0:	pop    rdi
  42e9c1:	pop    rbp
  42e9c2:	ret    
  42e9c3:	mov    rax,QWORD PTR [rsi+0x8]
  42e9c7:	add    rax,QWORD PTR [rsi]
  42e9ca:	mov    r8,rdi
  42e9cd:	mov    rdx,rbp
  42e9d0:	mov    rcx,rax
  42e9d3:	call   0x449450
  42e9d8:	mov    rax,rdi
  42e9db:	add    rax,QWORD PTR [rsi]
  42e9de:	add    rax,QWORD PTR [rsi+0x8]
  42e9e2:	mov    BYTE PTR [rax],0x0
  42e9e5:	add    QWORD PTR [rsi+0x8],rdi
  42e9e9:	add    rsp,0x28
  42e9ed:	pop    rbx
  42e9ee:	pop    rsi
  42e9ef:	pop    rdi
  42e9f0:	pop    rbp
  42e9f1:	ret    
  42e9f2:	mov    edx,DWORD PTR [r8+0x18]
  42e9f6:	test   edx,edx
  42e9f8:	jne    0x42e9ba
  42e9fa:	test   rbx,rbx
  42e9fd:	jne    0x42ea10
  42e9ff:	cmp    rax,0x2
  42ea03:	jbe    0x42ea31
  42ea05:	mov    bl,0x2
  42ea07:	nop    WORD PTR [rax+rax*1+0x0]
  42ea10:	add    rbx,rbx
  42ea13:	cmp    rax,rbx
  42ea16:	ja     0x42ea10
  42ea18:	mov    rcx,QWORD PTR [rsi]
  42ea1b:	mov    rdx,rbx
  42ea1e:	call   0x449420
  42ea23:	test   rax,rax
  42ea26:	je     0x42ea38
  42ea28:	mov    QWORD PTR [rsi],rax
  42ea2b:	mov    QWORD PTR [rsi+0x10],rbx
  42ea2f:	jmp    0x42e9b3
  42ea31:	mov    ebx,0x2
  42ea36:	jmp    0x42ea18
  42ea38:	mov    rcx,QWORD PTR [rsi]
  42ea3b:	call   0x4494c8
  42ea40:	mov    QWORD PTR [rsi],0x0
  42ea47:	mov    QWORD PTR [rsi+0x8],0x0
  42ea4f:	mov    QWORD PTR [rsi+0x10],0x0
  42ea57:	mov    DWORD PTR [rsi+0x18],0x1
  42ea5e:	jmp    0x42e9ba
  42ea63:	nop    DWORD PTR [rax]
  42ea66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ea70:	push   rbp
  42ea71:	push   rdi
  42ea72:	push   rsi
  42ea73:	push   rbx
  42ea74:	sub    rsp,0x28
  42ea78:	mov    rsi,rcx
  42ea7b:	mov    rcx,rdx
  42ea7e:	mov    rbx,rdx
  42ea81:	call   0x4493c0
  42ea86:	test   rax,rax
  42ea89:	je     0x42eb00
  42ea8b:	mov    r8,QWORD PTR [rsi+0x100]
  42ea92:	lea    rbp,[rbx+rax*1]
  42ea96:	jmp    0x42eac2
  42ea98:	nop    DWORD PTR [rax+rax*1+0x0]
  42eaa0:	mov    rdx,r8
  42eaa3:	add    r8,0x1
  42eaa7:	add    rbx,0x1
  42eaab:	mov    QWORD PTR [rsi+0x100],r8
  42eab2:	mov    BYTE PTR [rsi+rdx*1],dil
  42eab6:	cmp    rbx,rbp
  42eab9:	mov    BYTE PTR [rsi+0x108],dil
  42eac0:	je     0x42eb00
  42eac2:	cmp    r8,0xff
  42eac9:	movzx  edi,BYTE PTR [rbx]
  42eacc:	jne    0x42eaa0
  42eace:	mov    r8,QWORD PTR [rsi+0x118]
  42ead5:	mov    edx,0xff
  42eada:	mov    BYTE PTR [rsi+0xff],0x0
  42eae1:	mov    rcx,rsi
  42eae4:	call   QWORD PTR [rsi+0x110]
  42eaea:	add    DWORD PTR [rsi+0x138],0x1
  42eaf1:	mov    r8d,0x1
  42eaf7:	xor    edx,edx
  42eaf9:	jmp    0x42eaa7
  42eafb:	nop    DWORD PTR [rax+rax*1+0x0]
  42eb00:	add    rsp,0x28
  42eb04:	pop    rbx
  42eb05:	pop    rsi
  42eb06:	pop    rdi
  42eb07:	pop    rbp
  42eb08:	ret    
  42eb09:	nop    DWORD PTR [rax+0x0]
  42eb10:	push   r15
  42eb12:	push   r14
  42eb14:	push   r13
  42eb16:	push   r12
  42eb18:	push   rbp
  42eb19:	push   rdi
  42eb1a:	push   rsi
  42eb1b:	push   rbx
  42eb1c:	sub    rsp,0xc8
  42eb23:	test   r8,r8
  42eb26:	mov    rbx,rcx
  42eb29:	mov    r12d,edx
  42eb2c:	mov    rbp,r8
  42eb2f:	je     0x42ec70
  42eb35:	mov    r9d,DWORD PTR [rcx+0x130]
  42eb3c:	test   r9d,r9d
  42eb3f:	jne    0x42ec25
  42eb45:	mov    ecx,DWORD PTR [r8]
  42eb48:	cmp    ecx,0x4c
  42eb4b:	ja     0x430706
  42eb51:	lea    rax,[rip+0x2928c]        # 0x457de4
  42eb58:	mov    edx,ecx
  42eb5a:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42eb5e:	add    rax,rdx
  42eb61:	jmp    rax
  42eb63:	mov    rax,QWORD PTR [r8+0x8]
  42eb67:	xor    esi,esi
  42eb69:	cmp    DWORD PTR [rax],0x27
  42eb6c:	jne    0x42eba1
  42eb6e:	mov    rax,QWORD PTR [rax+0x8]
  42eb72:	mov    esi,DWORD PTR [rax+0x1c]
  42eb75:	cmp    esi,0x1
  42eb78:	jb     0x42eba1
  42eb7a:	cmp    esi,0x6
  42eb7d:	jbe    0x431abb
  42eb83:	cmp    esi,0x7
  42eb86:	jne    0x42eba1
  42eb88:	mov    rax,QWORD PTR [r8+0x10]
  42eb8c:	mov    edx,DWORD PTR [rax]
  42eb8e:	test   edx,edx
  42eb90:	jne    0x42eba1
  42eb92:	cmp    DWORD PTR [rax+0x10],0x1
  42eb96:	jne    0x42eba1
  42eb98:	cmp    ecx,0x3c
  42eb9b:	je     0x432233
  42eba1:	mov    rax,QWORD PTR [rbx+0x100]
  42eba8:	cmp    rax,0xff
  42ebae:	je     0x431a79
  42ebb4:	lea    rdx,[rax+0x1]
  42ebb8:	mov    QWORD PTR [rbx+0x100],rdx
  42ebbf:	mov    BYTE PTR [rbx+rax*1],0x28
  42ebc3:	mov    edx,r12d
  42ebc6:	mov    BYTE PTR [rbx+0x108],0x28
  42ebcd:	mov    r8,QWORD PTR [rbp+0x8]
  42ebd1:	mov    rcx,rbx
  42ebd4:	call   0x432320
  42ebd9:	mov    rax,QWORD PTR [rbx+0x100]
  42ebe0:	cmp    rax,0xff
  42ebe6:	je     0x431a4a
  42ebec:	lea    rdx,[rax+0x1]
  42ebf0:	mov    QWORD PTR [rbx+0x100],rdx
  42ebf7:	mov    BYTE PTR [rbx+rax*1],0x29
  42ebfb:	mov    BYTE PTR [rbx+0x108],0x29
  42ec02:	cmp    DWORD PTR [rbp+0x0],0x3d
  42ec06:	je     0x431ca8
  42ec0c:	cmp    esi,0x8
  42ec0f:	je     0x431c7a
  42ec15:	mov    r8,QWORD PTR [rbp+0x10]
  42ec19:	mov    edx,r12d
  42ec1c:	mov    rcx,rbx
  42ec1f:	call   0x432320
  42ec24:	nop
  42ec25:	add    rsp,0xc8
  42ec2c:	pop    rbx
  42ec2d:	pop    rsi
  42ec2e:	pop    rdi
  42ec2f:	pop    rbp
  42ec30:	pop    r12
  42ec32:	pop    r13
  42ec34:	pop    r14
  42ec36:	pop    r15
  42ec38:	ret    
  42ec39:	mov    rdx,QWORD PTR [r9+0x8]
  42ec3d:	mov    rsi,QWORD PTR [rbx+0x120]
  42ec44:	mov    rcx,rbx
  42ec47:	mov    edi,0x1
  42ec4c:	mov    QWORD PTR [rbx+0x120],rdx
  42ec53:	lea    rdx,[rax+0x8]
  42ec57:	call   0x42e8a0
  42ec5c:	test   rax,rax
  42ec5f:	jne    0x43124c
  42ec65:	mov    QWORD PTR [rbx+0x120],rsi
  42ec6c:	nop    DWORD PTR [rax+0x0]
  42ec70:	mov    DWORD PTR [rbx+0x130],0x1
  42ec7a:	jmp    0x42ec25
  42ec7c:	mov    r8,QWORD PTR [r8+0x8]
  42ec80:	mov    edx,r12d
  42ec83:	mov    rcx,rbx
  42ec86:	lea    rsi,[rip+0x2914a]        # 0x457dd7
  42ec8d:	lea    r13,[rip+0x2914b]        # 0x457ddf
  42ec94:	call   0x432320
  42ec99:	mov    rax,QWORD PTR [rbx+0x100]
  42eca0:	jmp    0x42ecc8
  42eca2:	mov    rdx,rax
  42eca5:	add    rax,0x1
  42eca9:	add    rsi,0x1
  42ecad:	mov    QWORD PTR [rbx+0x100],rax
  42ecb4:	mov    BYTE PTR [rbx+rdx*1],dil
  42ecb8:	cmp    rsi,r13
  42ecbb:	mov    BYTE PTR [rbx+0x108],dil
  42ecc2:	je     0x430b8e
  42ecc8:	cmp    rax,0xff
  42ecce:	movzx  edi,BYTE PTR [rsi]
  42ecd1:	jne    0x42eca2
  42ecd3:	mov    edx,0xff
  42ecd8:	mov    BYTE PTR [rbx+0xff],0x0
  42ecdf:	mov    r8,QWORD PTR [rbx+0x118]
  42ece6:	mov    rcx,rbx
  42ece9:	call   QWORD PTR [rbx+0x110]
  42ecef:	add    DWORD PTR [rbx+0x138],0x1
  42ecf6:	mov    eax,0x1
  42ecfb:	xor    edx,edx
  42ecfd:	jmp    0x42eca9
  42ecff:	mov    r8,QWORD PTR [r8+0x8]
  42ed03:	mov    edx,r12d
  42ed06:	mov    rcx,rbx
  42ed09:	lea    rsi,[rip+0x28e68]        # 0x457b78
  42ed10:	lea    r13,[rip+0x28e66]        # 0x457b7d
  42ed17:	call   0x432320
  42ed1c:	mov    rax,QWORD PTR [rbx+0x100]
  42ed23:	jmp    0x42ed4b
  42ed25:	mov    rdx,rax
  42ed28:	add    rax,0x1
  42ed2c:	add    rsi,0x1
  42ed30:	mov    QWORD PTR [rbx+0x100],rax
  42ed37:	mov    BYTE PTR [rbx+rdx*1],dil
  42ed3b:	cmp    rsi,r13
  42ed3e:	mov    BYTE PTR [rbx+0x108],dil
  42ed45:	je     0x430b3d
  42ed4b:	cmp    rax,0xff
  42ed51:	movzx  edi,BYTE PTR [rsi]
  42ed54:	jne    0x42ed25
  42ed56:	mov    edx,0xff
  42ed5b:	mov    BYTE PTR [rbx+0xff],0x0
  42ed62:	mov    r8,QWORD PTR [rbx+0x118]
  42ed69:	mov    rcx,rbx
  42ed6c:	call   QWORD PTR [rbx+0x110]
  42ed72:	add    DWORD PTR [rbx+0x138],0x1
  42ed79:	mov    eax,0x1
  42ed7e:	xor    edx,edx
  42ed80:	jmp    0x42ed2c
  42ed82:	mov    rdx,QWORD PTR [r8+0x8]
  42ed86:	mov    rcx,rbx
  42ed89:	xor    edi,edi
  42ed8b:	call   0x42e910
  42ed90:	test   rax,rax
  42ed93:	je     0x432103
  42ed99:	nop    DWORD PTR [rax+0x0]
  42eda0:	cmp    DWORD PTR [rax],0x2f
  42eda3:	jne    0x430e92
  42eda9:	cmp    QWORD PTR [rax+0x8],0x0
  42edae:	je     0x430e92
  42edb4:	mov    rax,QWORD PTR [rax+0x10]
  42edb8:	add    edi,0x1
  42edbb:	test   rax,rax
  42edbe:	jne    0x42eda0
  42edc0:	mov    r13,QWORD PTR [rbp+0x8]
  42edc4:	lea    eax,[rdi-0x1]
  42edc7:	lea    r14,[rip+0x28f45]        # 0x457d13
  42edce:	xor    ebp,ebp
  42edd0:	mov    DWORD PTR [rsp+0x2c],eax
  42edd4:	mov    DWORD PTR [rbx+0x134],ebp
  42edda:	mov    r8,r13
  42eddd:	mov    edx,r12d
  42ede0:	mov    rcx,rbx
  42ede3:	call   0x432320
  42ede8:	cmp    DWORD PTR [rsp+0x2c],ebp
  42edec:	jle    0x430715
  42edf2:	mov    rax,QWORD PTR [rbx+0x100]
  42edf9:	lea    rsi,[rip+0x28f11]        # 0x457d11
  42ee00:	jmp    0x42ee28
  42ee02:	mov    rdx,rax
  42ee05:	add    rax,0x1
  42ee09:	add    rsi,0x1
  42ee0d:	mov    QWORD PTR [rbx+0x100],rax
  42ee14:	mov    BYTE PTR [rbx+rdx*1],r15b
  42ee18:	cmp    rsi,r14
  42ee1b:	mov    BYTE PTR [rbx+0x108],r15b
  42ee22:	je     0x430715
  42ee28:	cmp    rax,0xff
  42ee2e:	movzx  r15d,BYTE PTR [rsi]
  42ee32:	jne    0x42ee02
  42ee34:	mov    edx,0xff
  42ee39:	mov    BYTE PTR [rbx+0xff],0x0
  42ee40:	mov    r8,QWORD PTR [rbx+0x118]
  42ee47:	mov    rcx,rbx
  42ee4a:	call   QWORD PTR [rbx+0x110]
  42ee50:	add    DWORD PTR [rbx+0x138],0x1
  42ee57:	mov    eax,0x1
  42ee5c:	xor    edx,edx
  42ee5e:	jmp    0x42ee09
  42ee60:	mov    rax,QWORD PTR [rbx+0x100]
  42ee67:	lea    rsi,[rip+0x28e74]        # 0x457ce2
  42ee6e:	lea    r13,[rip+0x28e87]        # 0x457cfc
  42ee75:	jmp    0x42eea6
  42ee77:	nop    WORD PTR [rax+rax*1+0x0]
  42ee80:	mov    rdx,rax
  42ee83:	add    rax,0x1
  42ee87:	add    rsi,0x1
  42ee8b:	mov    QWORD PTR [rbx+0x100],rax
  42ee92:	mov    BYTE PTR [rbx+rdx*1],dil
  42ee96:	cmp    rsi,r13
  42ee99:	mov    BYTE PTR [rbx+0x108],dil
  42eea0:	je     0x430b7a
  42eea6:	cmp    rax,0xff
  42eeac:	movzx  edi,BYTE PTR [rsi]
  42eeaf:	jne    0x42ee80
  42eeb1:	mov    edx,0xff
  42eeb6:	mov    BYTE PTR [rbx+0xff],0x0
  42eebd:	mov    r8,QWORD PTR [rbx+0x118]
  42eec4:	mov    rcx,rbx
  42eec7:	call   QWORD PTR [rbx+0x110]
  42eecd:	add    DWORD PTR [rbx+0x138],0x1
  42eed4:	mov    eax,0x1
  42eed9:	xor    edx,edx
  42eedb:	jmp    0x42ee87
  42eedd:	mov    rax,QWORD PTR [rbx+0x100]
  42eee4:	lea    rsi,[rip+0x28edd]        # 0x457dc8
  42eeeb:	lea    r12,[rip+0x28ee4]        # 0x457dd6
  42eef2:	jmp    0x42ef1a
  42eef4:	mov    rdx,rax
  42eef7:	add    rax,0x1
  42eefb:	add    rsi,0x1
  42eeff:	mov    QWORD PTR [rbx+0x100],rax
  42ef06:	mov    BYTE PTR [rbx+rdx*1],dil
  42ef0a:	cmp    rsi,r12
  42ef0d:	mov    BYTE PTR [rbx+0x108],dil
  42ef14:	je     0x430850
  42ef1a:	cmp    rax,0xff
  42ef20:	movzx  edi,BYTE PTR [rsi]
  42ef23:	jne    0x42eef4
  42ef25:	mov    edx,0xff
  42ef2a:	mov    BYTE PTR [rbx+0xff],0x0
  42ef31:	mov    r8,QWORD PTR [rbx+0x118]
  42ef38:	mov    rcx,rbx
  42ef3b:	call   QWORD PTR [rbx+0x110]
  42ef41:	add    DWORD PTR [rbx+0x138],0x1
  42ef48:	mov    eax,0x1
  42ef4d:	xor    edx,edx
  42ef4f:	jmp    0x42eefb
  42ef51:	mov    rax,QWORD PTR [rbx+0x100]
  42ef58:	lea    rsi,[rip+0x28e5d]        # 0x457dbc
  42ef5f:	lea    r13,[rip+0x28e5e]        # 0x457dc4
  42ef66:	jmp    0x42ef96
  42ef68:	nop    DWORD PTR [rax+rax*1+0x0]
  42ef70:	mov    rdx,rax
  42ef73:	add    rax,0x1
  42ef77:	add    rsi,0x1
  42ef7b:	mov    QWORD PTR [rbx+0x100],rax
  42ef82:	mov    BYTE PTR [rbx+rdx*1],dil
  42ef86:	cmp    rsi,r13
  42ef89:	mov    BYTE PTR [rbx+0x108],dil
  42ef90:	je     0x430934
  42ef96:	cmp    rax,0xff
  42ef9c:	movzx  edi,BYTE PTR [rsi]
  42ef9f:	jne    0x42ef70
  42efa1:	mov    edx,0xff
  42efa6:	mov    BYTE PTR [rbx+0xff],0x0
  42efad:	mov    r8,QWORD PTR [rbx+0x118]
  42efb4:	mov    rcx,rbx
  42efb7:	call   QWORD PTR [rbx+0x110]
  42efbd:	add    DWORD PTR [rbx+0x138],0x1
  42efc4:	mov    eax,0x1
  42efc9:	xor    edx,edx
  42efcb:	jmp    0x42ef77
  42efcd:	mov    rax,QWORD PTR [rbx+0x100]
  42efd4:	lea    rsi,[rip+0x28dc4]        # 0x457d9f
  42efdb:	lea    r13,[rip+0x28dd9]        # 0x457dbb
  42efe2:	jmp    0x42f00a
  42efe4:	mov    rdx,rax
  42efe7:	add    rax,0x1
  42efeb:	add    rsi,0x1
  42efef:	mov    QWORD PTR [rbx+0x100],rax
  42eff6:	mov    BYTE PTR [rbx+rdx*1],dil
  42effa:	cmp    rsi,r13
  42effd:	mov    BYTE PTR [rbx+0x108],dil
  42f004:	je     0x430828
  42f00a:	cmp    rax,0xff
  42f010:	movzx  edi,BYTE PTR [rsi]
  42f013:	jne    0x42efe4
  42f015:	mov    edx,0xff
  42f01a:	mov    BYTE PTR [rbx+0xff],0x0
  42f021:	mov    r8,QWORD PTR [rbx+0x118]
  42f028:	mov    rcx,rbx
  42f02b:	call   QWORD PTR [rbx+0x110]
  42f031:	add    DWORD PTR [rbx+0x138],0x1
  42f038:	mov    eax,0x1
  42f03d:	xor    edx,edx
  42f03f:	jmp    0x42efeb
  42f041:	mov    rax,QWORD PTR [rbx+0x100]
  42f048:	lea    rsi,[rip+0x28d32]        # 0x457d81
  42f04f:	lea    r13,[rip+0x28d48]        # 0x457d9e
  42f056:	jmp    0x42f086
  42f058:	nop    DWORD PTR [rax+rax*1+0x0]
  42f060:	mov    rdx,rax
  42f063:	add    rax,0x1
  42f067:	add    rsi,0x1
  42f06b:	mov    QWORD PTR [rbx+0x100],rax
  42f072:	mov    BYTE PTR [rbx+rdx*1],dil
  42f076:	cmp    rsi,r13
  42f079:	mov    BYTE PTR [rbx+0x108],dil
  42f080:	je     0x43083c
  42f086:	cmp    rax,0xff
  42f08c:	movzx  edi,BYTE PTR [rsi]
  42f08f:	jne    0x42f060
  42f091:	mov    edx,0xff
  42f096:	mov    BYTE PTR [rbx+0xff],0x0
  42f09d:	mov    r8,QWORD PTR [rbx+0x118]
  42f0a4:	mov    rcx,rbx
  42f0a7:	call   QWORD PTR [rbx+0x110]
  42f0ad:	add    DWORD PTR [rbx+0x138],0x1
  42f0b4:	mov    eax,0x1
  42f0b9:	xor    edx,edx
  42f0bb:	jmp    0x42f067
  42f0bd:	mov    rax,QWORD PTR [rbx+0x100]
  42f0c4:	lea    rsi,[rip+0x28c9b]        # 0x457d66
  42f0cb:	lea    r13,[rip+0x28c9e]        # 0x457d70
  42f0d2:	jmp    0x42f0fa
  42f0d4:	mov    rdx,rax
  42f0d7:	add    rax,0x1
  42f0db:	add    rsi,0x1
  42f0df:	mov    QWORD PTR [rbx+0x100],rax
  42f0e6:	mov    BYTE PTR [rbx+rdx*1],dil
  42f0ea:	cmp    rsi,r13
  42f0ed:	mov    BYTE PTR [rbx+0x108],dil
  42f0f4:	je     0x430725
  42f0fa:	cmp    rax,0xff
  42f100:	movzx  edi,BYTE PTR [rsi]
  42f103:	jne    0x42f0d4
  42f105:	mov    edx,0xff
  42f10a:	mov    BYTE PTR [rbx+0xff],0x0
  42f111:	mov    r8,QWORD PTR [rbx+0x118]
  42f118:	mov    rcx,rbx
  42f11b:	call   QWORD PTR [rbx+0x110]
  42f121:	add    DWORD PTR [rbx+0x138],0x1
  42f128:	mov    eax,0x1
  42f12d:	xor    edx,edx
  42f12f:	jmp    0x42f0db
  42f131:	lea    rsi,[rsp+0x40]
  42f136:	mov    r8d,DWORD PTR [r8+0x8]
  42f13a:	lea    rdx,[rip+0x28a4e]        # 0x457b8f
  42f141:	mov    rcx,rsi
  42f144:	mov    r12,rsi
  42f147:	call   0x449400
  42f14c:	mov    edx,DWORD PTR [r12]
  42f150:	add    r12,0x4
  42f154:	lea    eax,[rdx-0x1010101]
  42f15a:	not    edx
  42f15c:	and    eax,edx
  42f15e:	and    eax,0x80808080
  42f163:	je     0x42f14c
  42f165:	mov    edx,eax
  42f167:	shr    edx,0x10
  42f16a:	test   eax,0x8080
  42f16f:	cmove  eax,edx
  42f172:	lea    rdx,[r12+0x2]
  42f177:	cmove  r12,rdx
  42f17b:	add    al,al
  42f17d:	sbb    r12,0x3
  42f181:	sub    r12,rsi
  42f184:	je     0x42ec25
  42f18a:	mov    rax,QWORD PTR [rbx+0x100]
  42f191:	xor    edi,edi
  42f193:	jmp    0x42f1bb
  42f195:	mov    rdx,rax
  42f198:	add    rax,0x1
  42f19c:	add    rdi,0x1
  42f1a0:	mov    QWORD PTR [rbx+0x100],rax
  42f1a7:	mov    BYTE PTR [rbx+rdx*1],bpl
  42f1ab:	cmp    rdi,r12
  42f1ae:	mov    BYTE PTR [rbx+0x108],bpl
  42f1b5:	je     0x42ec25
  42f1bb:	cmp    rax,0xff
  42f1c1:	movzx  ebp,BYTE PTR [rsi+rdi*1]
  42f1c5:	jne    0x42f195
  42f1c7:	mov    edx,0xff
  42f1cc:	mov    BYTE PTR [rbx+0xff],0x0
  42f1d3:	mov    r8,QWORD PTR [rbx+0x118]
  42f1da:	mov    rcx,rbx
  42f1dd:	call   QWORD PTR [rbx+0x110]
  42f1e3:	add    DWORD PTR [rbx+0x138],0x1
  42f1ea:	mov    eax,0x1
  42f1ef:	xor    edx,edx
  42f1f1:	jmp    0x42f19c
  42f1f3:	mov    rax,QWORD PTR [rbx+0x100]
  42f1fa:	lea    rsi,[rip+0x28aca]        # 0x457ccb
  42f201:	lea    r13,[rip+0x28ad9]        # 0x457ce1
  42f208:	jmp    0x42f236
  42f20a:	nop    WORD PTR [rax+rax*1+0x0]
  42f210:	mov    rdx,rax
  42f213:	add    rax,0x1
  42f217:	add    rsi,0x1
  42f21b:	mov    QWORD PTR [rbx+0x100],rax
  42f222:	mov    BYTE PTR [rbx+rdx*1],dil
  42f226:	cmp    rsi,r13
  42f229:	mov    BYTE PTR [rbx+0x108],dil
  42f230:	je     0x430800
  42f236:	cmp    rax,0xff
  42f23c:	movzx  edi,BYTE PTR [rsi]
  42f23f:	jne    0x42f210
  42f241:	mov    edx,0xff
  42f246:	mov    BYTE PTR [rbx+0xff],0x0
  42f24d:	mov    r8,QWORD PTR [rbx+0x118]
  42f254:	mov    rcx,rbx
  42f257:	call   QWORD PTR [rbx+0x110]
  42f25d:	add    DWORD PTR [rbx+0x138],0x1
  42f264:	mov    eax,0x1
  42f269:	xor    edx,edx
  42f26b:	jmp    0x42f217
  42f26d:	mov    rax,QWORD PTR [rbx+0x100]
  42f274:	mov    esi,DWORD PTR [r8+0x8]
  42f278:	cmp    rax,0xff
  42f27e:	je     0x4319ac
  42f284:	lea    rdx,[rax+0x1]
  42f288:	mov    QWORD PTR [rbx+0x100],rdx
  42f28f:	mov    BYTE PTR [rbx+rax*1],sil
  42f293:	mov    BYTE PTR [rbx+0x108],sil
  42f29a:	jmp    0x42ec25
  42f29f:	mov    r8,QWORD PTR [r8+0x8]
  42f2a3:	mov    edx,r12d
  42f2a6:	mov    rcx,rbx
  42f2a9:	call   0x432320
  42f2ae:	mov    r8,QWORD PTR [rbp+0x10]
  42f2b2:	mov    edx,r12d
  42f2b5:	mov    rcx,rbx
  42f2b8:	call   0x432320
  42f2bd:	jmp    0x42ec25
  42f2c2:	mov    r13,QWORD PTR [r8+0x8]
  42f2c6:	mov    r14,QWORD PTR [r8+0x10]
  42f2ca:	mov    eax,DWORD PTR [r13+0x0]
  42f2ce:	cmp    eax,0x31
  42f2d1:	je     0x431321
  42f2d7:	cmp    eax,0x33
  42f2da:	je     0x4314e7
  42f2e0:	mov    r8,r13
  42f2e3:	mov    edx,r12d
  42f2e6:	mov    rcx,rbx
  42f2e9:	call   0x433470
  42f2ee:	mov    r8,r14
  42f2f1:	mov    edx,r12d
  42f2f4:	mov    rcx,rbx
  42f2f7:	call   0x433540
  42f2fc:	jmp    0x42ec25
  42f301:	mov    r8,QWORD PTR [r8+0x8]
  42f305:	mov    edx,r12d
  42f308:	mov    rcx,rbx
  42f30b:	call   0x433470
  42f310:	jmp    0x42ec25
  42f315:	mov    rax,QWORD PTR [rbx+0x100]
  42f31c:	lea    rsi,[rip+0x289fa]        # 0x457d1d
  42f323:	lea    r13,[rip+0x289fc]        # 0x457d26
  42f32a:	jmp    0x42f356
  42f32c:	nop    DWORD PTR [rax+0x0]
  42f330:	mov    rdx,rax
  42f333:	add    rax,0x1
  42f337:	add    rsi,0x1
  42f33b:	mov    QWORD PTR [rbx+0x100],rax
  42f342:	mov    BYTE PTR [rbx+rdx*1],dil
  42f346:	cmp    rsi,r13
  42f349:	mov    BYTE PTR [rbx+0x108],dil
  42f350:	je     0x430762
  42f356:	cmp    rax,0xff
  42f35c:	movzx  edi,BYTE PTR [rsi]
  42f35f:	jne    0x42f330
  42f361:	mov    edx,0xff
  42f366:	mov    BYTE PTR [rbx+0xff],0x0
  42f36d:	mov    r8,QWORD PTR [rbx+0x118]
  42f374:	mov    rcx,rbx
  42f377:	call   QWORD PTR [rbx+0x110]
  42f37d:	add    DWORD PTR [rbx+0x138],0x1
  42f384:	mov    eax,0x1
  42f389:	xor    edx,edx
  42f38b:	jmp    0x42f337
  42f38d:	mov    rax,QWORD PTR [rbx+0x100]
  42f394:	lea    rsi,[rip+0x28982]        # 0x457d1d
  42f39b:	lea    r13,[rip+0x28984]        # 0x457d26
  42f3a2:	jmp    0x42f3ca
  42f3a4:	mov    rdx,rax
  42f3a7:	add    rax,0x1
  42f3ab:	add    rsi,0x1
  42f3af:	mov    QWORD PTR [rbx+0x100],rax
  42f3b6:	mov    BYTE PTR [rbx+rdx*1],dil
  42f3ba:	cmp    rsi,r13
  42f3bd:	mov    BYTE PTR [rbx+0x108],dil
  42f3c4:	je     0x4307ec
  42f3ca:	cmp    rax,0xff
  42f3d0:	movzx  edi,BYTE PTR [rsi]
  42f3d3:	jne    0x42f3a4
  42f3d5:	mov    edx,0xff
  42f3da:	mov    BYTE PTR [rbx+0xff],0x0
  42f3e1:	mov    r8,QWORD PTR [rbx+0x118]
  42f3e8:	mov    rcx,rbx
  42f3eb:	call   QWORD PTR [rbx+0x110]
  42f3f1:	add    DWORD PTR [rbx+0x138],0x1
  42f3f8:	mov    eax,0x1
  42f3fd:	xor    edx,edx
  42f3ff:	jmp    0x42f3ab
  42f401:	mov    r13,QWORD PTR [r8+0x8]
  42f405:	mov    rax,QWORD PTR [rbx+0x100]
  42f40c:	lea    rsi,[rip+0x28901]        # 0x457d14
  42f413:	lea    rbp,[rip+0x28902]        # 0x457d1c
  42f41a:	mov    r12d,DWORD PTR [r13+0x10]
  42f41e:	jmp    0x42f446
  42f420:	mov    rdx,rax
  42f423:	add    rax,0x1
  42f427:	add    rsi,0x1
  42f42b:	mov    QWORD PTR [rbx+0x100],rax
  42f432:	mov    BYTE PTR [rbx+rdx*1],dil
  42f436:	cmp    rsi,rbp
  42f439:	mov    BYTE PTR [rbx+0x108],dil
  42f440:	je     0x430aa1
  42f446:	cmp    rax,0xff
  42f44c:	movzx  edi,BYTE PTR [rsi]
  42f44f:	jne    0x42f420
  42f451:	mov    edx,0xff
  42f456:	mov    BYTE PTR [rbx+0xff],0x0
  42f45d:	mov    r8,QWORD PTR [rbx+0x118]
  42f464:	mov    rcx,rbx
  42f467:	call   QWORD PTR [rbx+0x110]
  42f46d:	add    DWORD PTR [rbx+0x138],0x1
  42f474:	mov    eax,0x1
  42f479:	xor    edx,edx
  42f47b:	jmp    0x42f427
  42f47d:	mov    r8,QWORD PTR [r8+0x8]
  42f481:	test   r8,r8
  42f484:	je     0x42f491
  42f486:	mov    edx,r12d
  42f489:	mov    rcx,rbx
  42f48c:	call   0x432320
  42f491:	cmp    QWORD PTR [rbp+0x10],0x0
  42f496:	je     0x42ec25
  42f49c:	mov    rsi,QWORD PTR [rbx+0x100]
  42f4a3:	cmp    rsi,0xfd
  42f4aa:	ja     0x431576
  42f4b0:	lea    rdi,[rip+0x2885a]        # 0x457d11
  42f4b7:	lea    r14,[rip+0x28855]        # 0x457d13
  42f4be:	jmp    0x42f4e6
  42f4c0:	mov    rax,rsi
  42f4c3:	add    rsi,0x1
  42f4c7:	add    rdi,0x1
  42f4cb:	mov    QWORD PTR [rbx+0x100],rsi
  42f4d2:	mov    BYTE PTR [rbx+rax*1],r13b
  42f4d6:	cmp    rdi,r14
  42f4d9:	mov    BYTE PTR [rbx+0x108],r13b
  42f4e0:	je     0x430e41
  42f4e6:	cmp    rsi,0xff
  42f4ed:	movzx  r13d,BYTE PTR [rdi]
  42f4f1:	jne    0x42f4c0
  42f4f3:	mov    BYTE PTR [rbx+0xff],0x0
  42f4fa:	mov    r8,QWORD PTR [rbx+0x118]
  42f501:	mov    edx,0xff
  42f506:	mov    rcx,rbx
  42f509:	mov    esi,0x1
  42f50e:	call   QWORD PTR [rbx+0x110]
  42f514:	add    DWORD PTR [rbx+0x138],0x1
  42f51b:	xor    eax,eax
  42f51d:	jmp    0x42f4c7
  42f51f:	mov    r8,QWORD PTR [r8+0x8]
  42f523:	mov    rsi,QWORD PTR [rbp+0x10]
  42f527:	test   r8,r8
  42f52a:	je     0x42f537
  42f52c:	mov    edx,r12d
  42f52f:	mov    rcx,rbx
  42f532:	call   0x432320
  42f537:	mov    rax,QWORD PTR [rbx+0x100]
  42f53e:	cmp    rax,0xff
  42f544:	je     0x4318c1
  42f54a:	lea    rdx,[rax+0x1]
  42f54e:	mov    QWORD PTR [rbx+0x100],rdx
  42f555:	mov    r8,rsi
  42f558:	mov    BYTE PTR [rbx+rax*1],0x7b
  42f55c:	mov    edx,r12d
  42f55f:	mov    BYTE PTR [rbx+0x108],0x7b
  42f566:	mov    rcx,rbx
  42f569:	call   0x432320
  42f56e:	mov    rax,QWORD PTR [rbx+0x100]
  42f575:	cmp    rax,0xff
  42f57b:	je     0x431892
  42f581:	lea    rdx,[rax+0x1]
  42f585:	mov    QWORD PTR [rbx+0x100],rdx
  42f58c:	mov    BYTE PTR [rbx+rax*1],0x7d
  42f590:	mov    BYTE PTR [rbx+0x108],0x7d
  42f597:	jmp    0x42ec25
  42f59c:	cmp    WORD PTR [r8+0x12],0x0
  42f5a2:	jne    0x4312ad
  42f5a8:	mov    r8,QWORD PTR [rbp+0x8]
  42f5ac:	lea    rax,[rip+0x293cd]        # 0x458980
  42f5b3:	cmp    QWORD PTR [r8+0x8],rax
  42f5b7:	je     0x431123
  42f5bd:	mov    edx,r12d
  42f5c0:	mov    rcx,rbx
  42f5c3:	call   0x432320
  42f5c8:	mov    rdx,QWORD PTR [rbx+0x100]
  42f5cf:	cmp    rdx,0xff
  42f5d6:	je     0x431ba3
  42f5dc:	lea    rax,[rdx+0x1]
  42f5e0:	mov    QWORD PTR [rbx+0x100],rax
  42f5e7:	mov    BYTE PTR [rbx+rdx*1],0x20
  42f5eb:	mov    BYTE PTR [rbx+0x108],0x20
  42f5f2:	cmp    WORD PTR [rbp+0x10],0x0
  42f5f7:	je     0x43106f
  42f5fd:	lea    rsi,[rip+0x286ff]        # 0x457d03
  42f604:	lea    rbp,[rip+0x286fe]        # 0x457d09
  42f60b:	jmp    0x42f636
  42f60d:	nop    DWORD PTR [rax]
  42f610:	mov    rdx,rax
  42f613:	add    rax,0x1
  42f617:	add    rsi,0x1
  42f61b:	mov    QWORD PTR [rbx+0x100],rax
  42f622:	mov    BYTE PTR [rbx+rdx*1],dil
  42f626:	cmp    rsi,rbp
  42f629:	mov    BYTE PTR [rbx+0x108],dil
  42f630:	je     0x42ec25
  42f636:	cmp    rax,0xff
  42f63c:	movzx  edi,BYTE PTR [rsi]
  42f63f:	jne    0x42f610
  42f641:	mov    edx,0xff
  42f646:	mov    BYTE PTR [rbx+0xff],0x0
  42f64d:	mov    r8,QWORD PTR [rbx+0x118]
  42f654:	mov    rcx,rbx
  42f657:	call   QWORD PTR [rbx+0x110]
  42f65d:	add    DWORD PTR [rbx+0x138],0x1
  42f664:	mov    eax,0x1
  42f669:	xor    edx,edx
  42f66b:	jmp    0x42f617
  42f66d:	mov    DWORD PTR [rbx+0x130],0x1
  42f677:	jmp    0x42ec25
  42f67c:	mov    rax,QWORD PTR [r8+0x10]
  42f680:	cmp    DWORD PTR [rax],0x3a
  42f683:	jne    0x42ec70
  42f689:	mov    rdx,QWORD PTR [rax+0x10]
  42f68d:	cmp    DWORD PTR [rdx],0x3b
  42f690:	jne    0x42ec70
  42f696:	mov    r15,QWORD PTR [r8+0x8]
  42f69a:	mov    r13,QWORD PTR [rax+0x8]
  42f69e:	lea    rdi,[rip+0x28691]        # 0x457d36
  42f6a5:	mov    ecx,0x3
  42f6aa:	mov    r14,QWORD PTR [rdx+0x8]
  42f6ae:	mov    rbp,QWORD PTR [rdx+0x10]
  42f6b2:	mov    rax,QWORD PTR [r15+0x8]
  42f6b6:	mov    rsi,QWORD PTR [rax]
  42f6b9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42f6bb:	je     0x431fb2
  42f6c1:	lea    rdx,[rip+0x28675]        # 0x457d3d
  42f6c8:	mov    rcx,rbx
  42f6cb:	call   0x42ea70
  42f6d0:	cmp    QWORD PTR [r13+0x8],0x0
  42f6d5:	je     0x42f6f2
  42f6d7:	mov    edx,r12d
  42f6da:	mov    rcx,rbx
  42f6dd:	mov    r8,r13
  42f6e0:	call   0x433540
  42f6e5:	mov    edx,0x20
  42f6ea:	mov    rcx,rbx
  42f6ed:	call   0x42e4f0
  42f6f2:	mov    r8,r14
  42f6f5:	mov    edx,r12d
  42f6f8:	mov    rcx,rbx
  42f6fb:	call   0x432320
  42f700:	test   rbp,rbp
  42f703:	je     0x42ec25
  42f709:	mov    r8,rbp
  42f70c:	mov    edx,r12d
  42f70f:	mov    rcx,rbx
  42f712:	call   0x433540
  42f717:	jmp    0x42ec25
  42f71c:	nop    DWORD PTR [rax+0x0]
  42f720:	mov    DWORD PTR [rbx+0x130],0x1
  42f72a:	jmp    0x42ec25
  42f72f:	mov    rax,QWORD PTR [r8+0x10]
  42f733:	cmp    DWORD PTR [rax],0x38
  42f736:	jne    0x42ec70
  42f73c:	mov    r8,QWORD PTR [r8+0x8]
  42f740:	mov    rcx,QWORD PTR [r8+0x8]
  42f744:	mov    rdx,QWORD PTR [rcx]
  42f747:	cmp    BYTE PTR [rdx+0x1],0x63
  42f74b:	je     0x431cba
  42f751:	cmp    DWORD PTR [r8],0x31
  42f755:	je     0x431ed2
  42f75b:	mov    rsi,rdx
  42f75e:	lea    r13,[rip+0x285cb]        # 0x457d30
  42f765:	mov    ecx,0x3
  42f76a:	mov    r8,QWORD PTR [rax+0x8]
  42f76e:	mov    rdi,r13
  42f771:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42f773:	seta   cl
  42f776:	setb   dl
  42f779:	cmp    cl,dl
  42f77b:	jne    0x42f787
  42f77d:	cmp    DWORD PTR [r8],0x3
  42f781:	je     0x431f8b
  42f787:	mov    edx,r12d
  42f78a:	mov    rcx,rbx
  42f78d:	call   0x433540
  42f792:	mov    r8,QWORD PTR [rbp+0x8]
  42f796:	lea    rdi,[rip+0x28596]        # 0x457d33
  42f79d:	mov    ecx,0x3
  42f7a2:	mov    rax,QWORD PTR [r8+0x8]
  42f7a6:	mov    rax,QWORD PTR [rax]
  42f7a9:	mov    rsi,rax
  42f7ac:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42f7ae:	je     0x431f0a
  42f7b4:	mov    ecx,0x3
  42f7b9:	mov    rsi,rax
  42f7bc:	mov    rdi,r13
  42f7bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42f7c1:	jne    0x431f7b
  42f7c7:	mov    rax,QWORD PTR [rbp+0x10]
  42f7cb:	mov    edx,r12d
  42f7ce:	mov    rcx,rbx
  42f7d1:	mov    r8,QWORD PTR [rax+0x10]
  42f7d5:	call   0x433540
  42f7da:	mov    rax,QWORD PTR [rbp+0x8]
  42f7de:	cmp    DWORD PTR [rax],0x31
  42f7e1:	jne    0x42ec25
  42f7e7:	mov    rax,QWORD PTR [rax+0x8]
  42f7eb:	cmp    DWORD PTR [rax+0x10],0x1
  42f7ef:	jne    0x42ec25
  42f7f5:	mov    rax,QWORD PTR [rax+0x8]
  42f7f9:	cmp    BYTE PTR [rax],0x3e
  42f7fc:	jne    0x42ec25
  42f802:	mov    edx,0x29
  42f807:	mov    rcx,rbx
  42f80a:	call   0x42e4f0
  42f80f:	jmp    0x42ec25
  42f814:	mov    rax,QWORD PTR [rbx+0x100]
  42f81b:	lea    rsi,[rip+0x28535]        # 0x457d57
  42f822:	lea    r13,[rip+0x2853c]        # 0x457d65
  42f829:	jmp    0x42f856
  42f82b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f830:	mov    rdx,rax
  42f833:	add    rax,0x1
  42f837:	add    rsi,0x1
  42f83b:	mov    QWORD PTR [rbx+0x100],rax
  42f842:	mov    BYTE PTR [rbx+rdx*1],dil
  42f846:	cmp    rsi,r13
  42f849:	mov    BYTE PTR [rbx+0x108],dil
  42f850:	je     0x430c23
  42f856:	cmp    rax,0xff
  42f85c:	movzx  edi,BYTE PTR [rsi]
  42f85f:	jne    0x42f830
  42f861:	mov    edx,0xff
  42f866:	mov    BYTE PTR [rbx+0xff],0x0
  42f86d:	mov    r8,QWORD PTR [rbx+0x118]
  42f874:	mov    rcx,rbx
  42f877:	call   QWORD PTR [rbx+0x110]
  42f87d:	add    DWORD PTR [rbx+0x138],0x1
  42f884:	mov    eax,0x1
  42f889:	xor    edx,edx
  42f88b:	jmp    0x42f837
  42f88d:	mov    rax,QWORD PTR [rbx+0x128]
  42f894:	mov    QWORD PTR [rsp+0x48],r8
  42f899:	mov    edx,r12d
  42f89c:	mov    rcx,rbx
  42f89f:	mov    DWORD PTR [rsp+0x50],0x0
  42f8a7:	mov    QWORD PTR [rsp+0x40],rax
  42f8ac:	lea    rax,[rsp+0x40]
  42f8b1:	mov    QWORD PTR [rbx+0x128],rax
  42f8b8:	mov    rax,QWORD PTR [rbx+0x120]
  42f8bf:	mov    r8,QWORD PTR [r8+0x10]
  42f8c3:	mov    QWORD PTR [rsp+0x58],rax
  42f8c8:	call   0x432320
  42f8cd:	mov    r10d,DWORD PTR [rsp+0x50]
  42f8d2:	test   r10d,r10d
  42f8d5:	jne    0x42f8e5
  42f8d7:	mov    r8,rbp
  42f8da:	mov    edx,r12d
  42f8dd:	mov    rcx,rbx
  42f8e0:	call   0x432360
  42f8e5:	mov    rax,QWORD PTR [rsp+0x40]
  42f8ea:	mov    QWORD PTR [rbx+0x128],rax
  42f8f1:	jmp    0x42ec25
  42f8f6:	mov    rcx,QWORD PTR [rbx+0x128]
  42f8fd:	mov    rax,QWORD PTR [rbx+0x120]
  42f904:	lea    rsi,[rsp+0x40]
  42f909:	mov    QWORD PTR [rsp+0x48],r8
  42f90e:	mov    DWORD PTR [rsp+0x50],0x0
  42f916:	mov    QWORD PTR [rbx+0x128],rsi
  42f91d:	mov    r13,rcx
  42f920:	mov    QWORD PTR [rsp+0x40],rcx
  42f925:	mov    QWORD PTR [rsp+0x58],rax
  42f92a:	test   r13,r13
  42f92d:	mov    rcx,rsi
  42f930:	je     0x431be6
  42f936:	mov    rax,QWORD PTR [r13+0x8]
  42f93a:	mov    eax,DWORD PTR [rax]
  42f93c:	sub    eax,0x19
  42f93f:	cmp    eax,0x2
  42f942:	ja     0x431be6
  42f948:	mov    rax,r13
  42f94b:	mov    edi,0x1
  42f950:	jmp    0x42f960
  42f952:	mov    rdx,QWORD PTR [rax+0x8]
  42f956:	mov    edx,DWORD PTR [rdx]
  42f958:	sub    edx,0x19
  42f95b:	cmp    edx,0x2
  42f95e:	ja     0x42f9bd
  42f960:	mov    r14d,DWORD PTR [rax+0x10]
  42f964:	test   r14d,r14d
  42f967:	jne    0x42f9b5
  42f969:	cmp    edi,0x3
  42f96c:	ja     0x431711
  42f972:	mov    r8,QWORD PTR [rax]
  42f975:	mov    edx,edi
  42f977:	add    edi,0x1
  42f97a:	shl    rdx,0x5
  42f97e:	mov    QWORD PTR [rsp+rdx*1+0x40],r8
  42f983:	mov    r8,QWORD PTR [rax+0x8]
  42f987:	mov    QWORD PTR [rsp+rdx*1+0x48],r8
  42f98c:	mov    r8,QWORD PTR [rax+0x10]
  42f990:	mov    QWORD PTR [rsp+rdx*1+0x50],r8
  42f995:	mov    r8,QWORD PTR [rax+0x18]
  42f999:	mov    QWORD PTR [rsp+rdx*1+0x40],rcx
  42f99e:	lea    rcx,[rsi+rdx*1]
  42f9a2:	mov    QWORD PTR [rsp+rdx*1+0x58],r8
  42f9a7:	mov    QWORD PTR [rbx+0x128],rcx
  42f9ae:	mov    DWORD PTR [rax+0x10],0x1
  42f9b5:	mov    rax,QWORD PTR [rax]
  42f9b8:	test   rax,rax
  42f9bb:	jne    0x42f952
  42f9bd:	mov    r8,QWORD PTR [rbp+0x10]
  42f9c1:	mov    edx,r12d
  42f9c4:	mov    rcx,rbx
  42f9c7:	call   0x432320
  42f9cc:	mov    r11d,DWORD PTR [rsp+0x50]
  42f9d1:	mov    QWORD PTR [rbx+0x128],r13
  42f9d8:	test   r11d,r11d
  42f9db:	jne    0x42ec25
  42f9e1:	cmp    edi,0x1
  42f9e4:	je     0x431c07
  42f9ea:	lea    eax,[rdi-0x1]
  42f9ed:	mov    edx,r12d
  42f9f0:	mov    rcx,rbx
  42f9f3:	mov    rdi,rax
  42f9f6:	shl    rax,0x5
  42f9fa:	mov    r8,QWORD PTR [rsp+rax*1+0x48]
  42f9ff:	call   0x432360
  42fa04:	cmp    edi,0x1
  42fa07:	jne    0x42f9ea
  42fa09:	mov    r9,QWORD PTR [rbx+0x128]
  42fa10:	lea    r8,[rbp+0x8]
  42fa14:	mov    edx,r12d
  42fa17:	mov    rcx,rbx
  42fa1a:	call   0x432eb0
  42fa1f:	jmp    0x42ec25
  42fa24:	test   r12b,0x20
  42fa28:	jne    0x4310ec
  42fa2e:	cmp    QWORD PTR [r8+0x8],0x0
  42fa33:	je     0x42fa3f
  42fa35:	test   r12b,0x40
  42fa39:	je     0x4319db
  42fa3f:	mov    r9,QWORD PTR [rbx+0x128]
  42fa46:	mov    edx,r12d
  42fa49:	lea    r8,[rbp+0x10]
  42fa4d:	and    edx,0xffffff9f
  42fa50:	mov    rcx,rbx
  42fa53:	call   0x433150
  42fa58:	jmp    0x42ec25
  42fa5d:	mov    r8,QWORD PTR [r8+0x8]
  42fa61:	mov    edx,r12d
  42fa64:	mov    rcx,rbx
  42fa67:	call   0x432320
  42fa6c:	jmp    0x42ec25
  42fa71:	mov    rax,QWORD PTR [rbx+0x100]
  42fa78:	lea    rsi,[rip+0x2819c]        # 0x457c1b
  42fa7f:	lea    r13,[rip+0x281a6]        # 0x457c2c
  42fa86:	jmp    0x42fab6
  42fa88:	nop    DWORD PTR [rax+rax*1+0x0]
  42fa90:	mov    rdx,rax
  42fa93:	add    rax,0x1
  42fa97:	add    rsi,0x1
  42fa9b:	mov    QWORD PTR [rbx+0x100],rax
  42faa2:	mov    BYTE PTR [rbx+rdx*1],dil
  42faa6:	cmp    rsi,r13
  42faa9:	mov    BYTE PTR [rbx+0x108],dil
  42fab0:	je     0x430814
  42fab6:	cmp    rax,0xff
  42fabc:	movzx  edi,BYTE PTR [rsi]
  42fabf:	jne    0x42fa90
  42fac1:	mov    edx,0xff
  42fac6:	mov    BYTE PTR [rbx+0xff],0x0
  42facd:	mov    r8,QWORD PTR [rbx+0x118]
  42fad4:	mov    rcx,rbx
  42fad7:	call   QWORD PTR [rbx+0x110]
  42fadd:	add    DWORD PTR [rbx+0x138],0x1
  42fae4:	mov    eax,0x1
  42fae9:	xor    edx,edx
  42faeb:	jmp    0x42fa97
  42faed:	mov    rax,QWORD PTR [rbx+0x100]
  42faf4:	lea    rsi,[rip+0x2810a]        # 0x457c05
  42fafb:	lea    r13,[rip+0x28118]        # 0x457c1a
  42fb02:	jmp    0x42fb2a
  42fb04:	mov    rdx,rax
  42fb07:	add    rax,0x1
  42fb0b:	add    rsi,0x1
  42fb0f:	mov    QWORD PTR [rbx+0x100],rax
  42fb16:	mov    BYTE PTR [rbx+rdx*1],dil
  42fb1a:	cmp    rsi,r13
  42fb1d:	mov    BYTE PTR [rbx+0x108],dil
  42fb24:	je     0x430d2e
  42fb2a:	cmp    rax,0xff
  42fb30:	movzx  edi,BYTE PTR [rsi]
  42fb33:	jne    0x42fb04
  42fb35:	mov    edx,0xff
  42fb3a:	mov    BYTE PTR [rbx+0xff],0x0
  42fb41:	mov    r8,QWORD PTR [rbx+0x118]
  42fb48:	mov    rcx,rbx
  42fb4b:	call   QWORD PTR [rbx+0x110]
  42fb51:	add    DWORD PTR [rbx+0x138],0x1
  42fb58:	mov    eax,0x1
  42fb5d:	xor    edx,edx
  42fb5f:	jmp    0x42fb0b
  42fb61:	mov    rax,QWORD PTR [rbx+0x100]
  42fb68:	lea    rsi,[rip+0x28085]        # 0x457bf4
  42fb6f:	lea    r13,[rip+0x2808e]        # 0x457c04
  42fb76:	jmp    0x42fba6
  42fb78:	nop    DWORD PTR [rax+rax*1+0x0]
  42fb80:	mov    rdx,rax
  42fb83:	add    rax,0x1
  42fb87:	add    rsi,0x1
  42fb8b:	mov    QWORD PTR [rbx+0x100],rax
  42fb92:	mov    BYTE PTR [rbx+rdx*1],dil
  42fb96:	cmp    rsi,r13
  42fb99:	mov    BYTE PTR [rbx+0x108],dil
  42fba0:	je     0x430d1a
  42fba6:	cmp    rax,0xff
  42fbac:	movzx  edi,BYTE PTR [rsi]
  42fbaf:	jne    0x42fb80
  42fbb1:	mov    edx,0xff
  42fbb6:	mov    BYTE PTR [rbx+0xff],0x0
  42fbbd:	mov    r8,QWORD PTR [rbx+0x118]
  42fbc4:	mov    rcx,rbx
  42fbc7:	call   QWORD PTR [rbx+0x110]
  42fbcd:	add    DWORD PTR [rbx+0x138],0x1
  42fbd4:	mov    eax,0x1
  42fbd9:	xor    edx,edx
  42fbdb:	jmp    0x42fb87
  42fbdd:	mov    rax,QWORD PTR [rbx+0x100]
  42fbe4:	lea    rsi,[rip+0x27ff6]        # 0x457be1
  42fbeb:	lea    r13,[rip+0x28001]        # 0x457bf3
  42fbf2:	jmp    0x42fc1a
  42fbf4:	mov    rdx,rax
  42fbf7:	add    rax,0x1
  42fbfb:	add    rsi,0x1
  42fbff:	mov    QWORD PTR [rbx+0x100],rax
  42fc06:	mov    BYTE PTR [rbx+rdx*1],dil
  42fc0a:	cmp    rsi,r13
  42fc0d:	mov    BYTE PTR [rbx+0x108],dil
  42fc14:	je     0x430cf2
  42fc1a:	cmp    rax,0xff
  42fc20:	movzx  edi,BYTE PTR [rsi]
  42fc23:	jne    0x42fbf4
  42fc25:	mov    edx,0xff
  42fc2a:	mov    BYTE PTR [rbx+0xff],0x0
  42fc31:	mov    r8,QWORD PTR [rbx+0x118]
  42fc38:	mov    rcx,rbx
  42fc3b:	call   QWORD PTR [rbx+0x110]
  42fc41:	add    DWORD PTR [rbx+0x138],0x1
  42fc48:	mov    eax,0x1
  42fc4d:	xor    edx,edx
  42fc4f:	jmp    0x42fbfb
  42fc51:	mov    rax,QWORD PTR [rbx+0x100]
  42fc58:	lea    rsi,[rip+0x27f74]        # 0x457bd3
  42fc5f:	lea    r13,[rip+0x27f7a]        # 0x457be0
  42fc66:	jmp    0x42fc96
  42fc68:	nop    DWORD PTR [rax+rax*1+0x0]
  42fc70:	mov    rdx,rax
  42fc73:	add    rax,0x1
  42fc77:	add    rsi,0x1
  42fc7b:	mov    QWORD PTR [rbx+0x100],rax
  42fc82:	mov    BYTE PTR [rbx+rdx*1],dil
  42fc86:	cmp    rsi,r13
  42fc89:	mov    BYTE PTR [rbx+0x108],dil
  42fc90:	je     0x430cde
  42fc96:	cmp    rax,0xff
  42fc9c:	movzx  edi,BYTE PTR [rsi]
  42fc9f:	jne    0x42fc70
  42fca1:	mov    edx,0xff
  42fca6:	mov    BYTE PTR [rbx+0xff],0x0
  42fcad:	mov    r8,QWORD PTR [rbx+0x118]
  42fcb4:	mov    rcx,rbx
  42fcb7:	call   QWORD PTR [rbx+0x110]
  42fcbd:	add    DWORD PTR [rbx+0x138],0x1
  42fcc4:	mov    eax,0x1
  42fcc9:	xor    edx,edx
  42fccb:	jmp    0x42fc77
  42fccd:	mov    rax,QWORD PTR [rbx+0x100]
  42fcd4:	lea    rsi,[rip+0x27eda]        # 0x457bb5
  42fcdb:	lea    r13,[rip+0x27eeb]        # 0x457bcd
  42fce2:	jmp    0x42fd0a
  42fce4:	mov    rdx,rax
  42fce7:	add    rax,0x1
  42fceb:	add    rsi,0x1
  42fcef:	mov    QWORD PTR [rbx+0x100],rax
  42fcf6:	mov    BYTE PTR [rbx+rdx*1],dil
  42fcfa:	cmp    rsi,r13
  42fcfd:	mov    BYTE PTR [rbx+0x108],dil
  42fd04:	je     0x430c5f
  42fd0a:	cmp    rax,0xff
  42fd10:	movzx  edi,BYTE PTR [rsi]
  42fd13:	jne    0x42fce4
  42fd15:	mov    edx,0xff
  42fd1a:	mov    BYTE PTR [rbx+0xff],0x0
  42fd21:	mov    r8,QWORD PTR [rbx+0x118]
  42fd28:	mov    rcx,rbx
  42fd2b:	call   QWORD PTR [rbx+0x110]
  42fd31:	add    DWORD PTR [rbx+0x138],0x1
  42fd38:	mov    eax,0x1
  42fd3d:	xor    edx,edx
  42fd3f:	jmp    0x42fceb
  42fd41:	mov    rax,QWORD PTR [rbx+0x100]
  42fd48:	lea    rsi,[rip+0x27e5d]        # 0x457bac
  42fd4f:	lea    r13,[rip+0x27e5e]        # 0x457bb4
  42fd56:	jmp    0x42fd86
  42fd58:	nop    DWORD PTR [rax+rax*1+0x0]
  42fd60:	mov    rdx,rax
  42fd63:	add    rax,0x1
  42fd67:	add    rsi,0x1
  42fd6b:	mov    QWORD PTR [rbx+0x100],rax
  42fd72:	mov    BYTE PTR [rbx+rdx*1],dil
  42fd76:	cmp    rsi,r13
  42fd79:	mov    BYTE PTR [rbx+0x108],dil
  42fd80:	je     0x430c4b
  42fd86:	cmp    rax,0xff
  42fd8c:	movzx  edi,BYTE PTR [rsi]
  42fd8f:	jne    0x42fd60
  42fd91:	mov    edx,0xff
  42fd96:	mov    BYTE PTR [rbx+0xff],0x0
  42fd9d:	mov    r8,QWORD PTR [rbx+0x118]
  42fda4:	mov    rcx,rbx
  42fda7:	call   QWORD PTR [rbx+0x110]
  42fdad:	add    DWORD PTR [rbx+0x138],0x1
  42fdb4:	mov    eax,0x1
  42fdb9:	xor    edx,edx
  42fdbb:	jmp    0x42fd67
  42fdbd:	mov    rax,QWORD PTR [rbx+0x100]
  42fdc4:	lea    rsi,[rip+0x27dd5]        # 0x457ba0
  42fdcb:	lea    r13,[rip+0x27dd9]        # 0x457bab
  42fdd2:	jmp    0x42fdfa
  42fdd4:	mov    rdx,rax
  42fdd7:	add    rax,0x1
  42fddb:	add    rsi,0x1
  42fddf:	mov    QWORD PTR [rbx+0x100],rax
  42fde6:	mov    BYTE PTR [rbx+rdx*1],dil
  42fdea:	cmp    rsi,r13
  42fded:	mov    BYTE PTR [rbx+0x108],dil
  42fdf4:	je     0x430c37
  42fdfa:	cmp    rax,0xff
  42fe00:	movzx  edi,BYTE PTR [rsi]
  42fe03:	jne    0x42fdd4
  42fe05:	mov    edx,0xff
  42fe0a:	mov    BYTE PTR [rbx+0xff],0x0
  42fe11:	mov    r8,QWORD PTR [rbx+0x118]
  42fe18:	mov    rcx,rbx
  42fe1b:	call   QWORD PTR [rbx+0x110]
  42fe21:	add    DWORD PTR [rbx+0x138],0x1
  42fe28:	mov    eax,0x1
  42fe2d:	xor    edx,edx
  42fe2f:	jmp    0x42fddb
  42fe31:	mov    rax,QWORD PTR [rbx+0x100]
  42fe38:	cmp    rax,0xff
  42fe3e:	je     0x4318f0
  42fe44:	lea    rdx,[rax+0x1]
  42fe48:	mov    QWORD PTR [rbx+0x100],rdx
  42fe4f:	mov    BYTE PTR [rbx+rax*1],0x7e
  42fe53:	mov    edx,r12d
  42fe56:	mov    BYTE PTR [rbx+0x108],0x7e
  42fe5d:	mov    r8,QWORD PTR [rbp+0x10]
  42fe61:	mov    rcx,rbx
  42fe64:	call   0x432320
  42fe69:	jmp    0x42ec25
  42fe6e:	mov    r8,QWORD PTR [r8+0x10]
  42fe72:	mov    edx,r12d
  42fe75:	mov    rcx,rbx
  42fe78:	call   0x432320
  42fe7d:	jmp    0x42ec25
  42fe82:	movsxd r12,DWORD PTR [r8+0x10]
  42fe86:	mov    rbp,QWORD PTR [r8+0x8]
  42fe8a:	test   r12,r12
  42fe8d:	je     0x42ec25
  42fe93:	mov    rax,QWORD PTR [rbx+0x100]
  42fe9a:	xor    esi,esi
  42fe9c:	jmp    0x42fec6
  42fe9e:	xchg   ax,ax
  42fea0:	mov    rdx,rax
  42fea3:	add    rax,0x1
  42fea7:	add    rsi,0x1
  42feab:	mov    QWORD PTR [rbx+0x100],rax
  42feb2:	mov    BYTE PTR [rbx+rdx*1],dil
  42feb6:	cmp    r12,rsi
  42feb9:	mov    BYTE PTR [rbx+0x108],dil
  42fec0:	je     0x42ec25
  42fec6:	cmp    rax,0xff
  42fecc:	movzx  edi,BYTE PTR [rbp+rsi*1+0x0]
  42fed1:	jne    0x42fea0
  42fed3:	mov    edx,0xff
  42fed8:	mov    BYTE PTR [rbx+0xff],0x0
  42fedf:	mov    r8,QWORD PTR [rbx+0x118]
  42fee6:	mov    rcx,rbx
  42fee9:	call   QWORD PTR [rbx+0x110]
  42feef:	add    DWORD PTR [rbx+0x138],0x1
  42fef6:	mov    eax,0x1
  42fefb:	xor    edx,edx
  42fefd:	jmp    0x42fea7
  42feff:	mov    rax,QWORD PTR [rbx+0x100]
  42ff06:	lea    rsi,[rip+0x27dac]        # 0x457cb9
  42ff0d:	lea    r13,[rip+0x27db6]        # 0x457cca
  42ff14:	jmp    0x42ff46
  42ff16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ff20:	mov    rdx,rax
  42ff23:	add    rax,0x1
  42ff27:	add    rsi,0x1
  42ff2b:	mov    QWORD PTR [rbx+0x100],rax
  42ff32:	mov    BYTE PTR [rbx+rdx*1],dil
  42ff36:	cmp    rsi,r13
  42ff39:	mov    BYTE PTR [rbx+0x108],dil
  42ff40:	je     0x430ddd
  42ff46:	cmp    rax,0xff
  42ff4c:	movzx  edi,BYTE PTR [rsi]
  42ff4f:	jne    0x42ff20
  42ff51:	mov    edx,0xff
  42ff56:	mov    BYTE PTR [rbx+0xff],0x0
  42ff5d:	mov    r8,QWORD PTR [rbx+0x118]
  42ff64:	mov    rcx,rbx
  42ff67:	call   QWORD PTR [rbx+0x110]
  42ff6d:	add    DWORD PTR [rbx+0x138],0x1
  42ff74:	mov    eax,0x1
  42ff79:	xor    edx,edx
  42ff7b:	jmp    0x42ff27
  42ff7d:	mov    rax,QWORD PTR [rbx+0x100]
  42ff84:	lea    rsi,[rip+0x27d12]        # 0x457c9d
  42ff8b:	lea    r13,[rip+0x27d20]        # 0x457cb2
  42ff92:	jmp    0x42ffba
  42ff94:	mov    rdx,rax
  42ff97:	add    rax,0x1
  42ff9b:	add    rsi,0x1
  42ff9f:	mov    QWORD PTR [rbx+0x100],rax
  42ffa6:	mov    BYTE PTR [rbx+rdx*1],dil
  42ffaa:	cmp    rsi,r13
  42ffad:	mov    BYTE PTR [rbx+0x108],dil
  42ffb4:	je     0x430d42
  42ffba:	cmp    rax,0xff
  42ffc0:	movzx  edi,BYTE PTR [rsi]
  42ffc3:	jne    0x42ff94
  42ffc5:	mov    edx,0xff
  42ffca:	mov    BYTE PTR [rbx+0xff],0x0
  42ffd1:	mov    r8,QWORD PTR [rbx+0x118]
  42ffd8:	mov    rcx,rbx
  42ffdb:	call   QWORD PTR [rbx+0x110]
  42ffe1:	add    DWORD PTR [rbx+0x138],0x1
  42ffe8:	mov    eax,0x1
  42ffed:	xor    edx,edx
  42ffef:	jmp    0x42ff9b
  42fff1:	mov    rax,QWORD PTR [rbx+0x100]
  42fff8:	lea    rsi,[rip+0x27c84]        # 0x457c83
  42ffff:	lea    r13,[rip+0x27c96]        # 0x457c9c
  430006:	jmp    0x430036
  430008:	nop    DWORD PTR [rax+rax*1+0x0]
  430010:	mov    rdx,rax
  430013:	add    rax,0x1
  430017:	add    rsi,0x1
  43001b:	mov    QWORD PTR [rbx+0x100],rax
  430022:	mov    BYTE PTR [rbx+rdx*1],dil
  430026:	cmp    rsi,r13
  430029:	mov    BYTE PTR [rbx+0x108],dil
  430030:	je     0x430e19
  430036:	cmp    rax,0xff
  43003c:	movzx  edi,BYTE PTR [rsi]
  43003f:	jne    0x430010
  430041:	mov    edx,0xff
  430046:	mov    BYTE PTR [rbx+0xff],0x0
  43004d:	mov    r8,QWORD PTR [rbx+0x118]
  430054:	mov    rcx,rbx
  430057:	call   QWORD PTR [rbx+0x110]
  43005d:	add    DWORD PTR [rbx+0x138],0x1
  430064:	mov    eax,0x1
  430069:	xor    edx,edx
  43006b:	jmp    0x430017
  43006d:	mov    rax,QWORD PTR [rbx+0x100]
  430074:	lea    rsi,[rip+0x27bf1]        # 0x457c6c
  43007b:	lea    r13,[rip+0x27c00]        # 0x457c82
  430082:	jmp    0x4300aa
  430084:	mov    rdx,rax
  430087:	add    rax,0x1
  43008b:	add    rsi,0x1
  43008f:	mov    QWORD PTR [rbx+0x100],rax
  430096:	mov    BYTE PTR [rbx+rdx*1],dil
  43009a:	cmp    rsi,r13
  43009d:	mov    BYTE PTR [rbx+0x108],dil
  4300a4:	je     0x430e05
  4300aa:	cmp    rax,0xff
  4300b0:	movzx  edi,BYTE PTR [rsi]
  4300b3:	jne    0x430084
  4300b5:	mov    edx,0xff
  4300ba:	mov    BYTE PTR [rbx+0xff],0x0
  4300c1:	mov    r8,QWORD PTR [rbx+0x118]
  4300c8:	mov    rcx,rbx
  4300cb:	call   QWORD PTR [rbx+0x110]
  4300d1:	add    DWORD PTR [rbx+0x138],0x1
  4300d8:	mov    eax,0x1
  4300dd:	xor    edx,edx
  4300df:	jmp    0x43008b
  4300e1:	mov    rax,QWORD PTR [rbx+0x100]
  4300e8:	lea    rsi,[rip+0x27b69]        # 0x457c58
  4300ef:	lea    r13,[rip+0x27b75]        # 0x457c6b
  4300f6:	jmp    0x430126
  4300f8:	nop    DWORD PTR [rax+rax*1+0x0]
  430100:	mov    rdx,rax
  430103:	add    rax,0x1
  430107:	add    rsi,0x1
  43010b:	mov    QWORD PTR [rbx+0x100],rax
  430112:	mov    BYTE PTR [rbx+rdx*1],dil
  430116:	cmp    rsi,r13
  430119:	mov    BYTE PTR [rbx+0x108],dil
  430120:	je     0x430e2d
  430126:	cmp    rax,0xff
  43012c:	movzx  edi,BYTE PTR [rsi]
  43012f:	jne    0x430100
  430131:	mov    edx,0xff
  430136:	mov    BYTE PTR [rbx+0xff],0x0
  43013d:	mov    r8,QWORD PTR [rbx+0x118]
  430144:	mov    rcx,rbx
  430147:	call   QWORD PTR [rbx+0x110]
  43014d:	add    DWORD PTR [rbx+0x138],0x1
  430154:	mov    eax,0x1
  430159:	xor    edx,edx
  43015b:	jmp    0x430107
  43015d:	mov    rax,QWORD PTR [rbx+0x100]
  430164:	lea    rsi,[rip+0x27add]        # 0x457c48
  43016b:	lea    r13,[rip+0x27ae5]        # 0x457c57
  430172:	jmp    0x43019a
  430174:	mov    rdx,rax
  430177:	add    rax,0x1
  43017b:	add    rsi,0x1
  43017f:	mov    QWORD PTR [rbx+0x100],rax
  430186:	mov    BYTE PTR [rbx+rdx*1],dil
  43018a:	cmp    rsi,r13
  43018d:	mov    BYTE PTR [rbx+0x108],dil
  430194:	je     0x430c0f
  43019a:	cmp    rax,0xff
  4301a0:	movzx  edi,BYTE PTR [rsi]
  4301a3:	jne    0x430174
  4301a5:	mov    edx,0xff
  4301aa:	mov    BYTE PTR [rbx+0xff],0x0
  4301b1:	mov    r8,QWORD PTR [rbx+0x118]
  4301b8:	mov    rcx,rbx
  4301bb:	call   QWORD PTR [rbx+0x110]
  4301c1:	add    DWORD PTR [rbx+0x138],0x1
  4301c8:	mov    eax,0x1
  4301cd:	xor    edx,edx
  4301cf:	jmp    0x43017b
  4301d1:	mov    rax,QWORD PTR [rbx+0x100]
  4301d8:	lea    rsi,[rip+0x27a4e]        # 0x457c2d
  4301df:	lea    r13,[rip+0x27a61]        # 0x457c47
  4301e6:	jmp    0x430216
  4301e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4301f0:	mov    rdx,rax
  4301f3:	add    rax,0x1
  4301f7:	add    rsi,0x1
  4301fb:	mov    QWORD PTR [rbx+0x100],rax
  430202:	mov    BYTE PTR [rbx+rdx*1],dil
  430206:	cmp    rsi,r13
  430209:	mov    BYTE PTR [rbx+0x108],dil
  430210:	je     0x430df1
  430216:	cmp    rax,0xff
  43021c:	movzx  edi,BYTE PTR [rsi]
  43021f:	jne    0x4301f0
  430221:	mov    edx,0xff
  430226:	mov    BYTE PTR [rbx+0xff],0x0
  43022d:	mov    r8,QWORD PTR [rbx+0x118]
  430234:	mov    rcx,rbx
  430237:	call   QWORD PTR [rbx+0x110]
  43023d:	add    DWORD PTR [rbx+0x138],0x1
  430244:	mov    eax,0x1
  430249:	xor    edx,edx
  43024b:	jmp    0x4301f7
  43024d:	and    r12d,0x4
  430251:	mov    rax,QWORD PTR [r8+0x8]
  430255:	jne    0x430ff1
  43025b:	movsxd rbp,DWORD PTR [rax+0x8]
  43025f:	mov    r12,QWORD PTR [rax]
  430262:	test   rbp,rbp
  430265:	je     0x42ec25
  43026b:	mov    rax,QWORD PTR [rbx+0x100]
  430272:	xor    esi,esi
  430274:	jmp    0x4302a6
  430276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430280:	mov    rdx,rax
  430283:	add    rax,0x1
  430287:	add    rsi,0x1
  43028b:	mov    QWORD PTR [rbx+0x100],rax
  430292:	mov    BYTE PTR [rbx+rdx*1],dil
  430296:	cmp    rbp,rsi
  430299:	mov    BYTE PTR [rbx+0x108],dil
  4302a0:	je     0x42ec25
  4302a6:	cmp    rax,0xff
  4302ac:	movzx  edi,BYTE PTR [r12+rsi*1]
  4302b1:	jne    0x430280
  4302b3:	mov    edx,0xff
  4302b8:	mov    BYTE PTR [rbx+0xff],0x0
  4302bf:	mov    r8,QWORD PTR [rbx+0x118]
  4302c6:	mov    rcx,rbx
  4302c9:	call   QWORD PTR [rbx+0x110]
  4302cf:	add    DWORD PTR [rbx+0x138],0x1
  4302d6:	mov    eax,0x1
  4302db:	xor    edx,edx
  4302dd:	jmp    0x430287
  4302df:	mov    rax,QWORD PTR [r8+0x8]
  4302e3:	xor    edi,edi
  4302e5:	mov    edx,DWORD PTR [rax]
  4302e7:	cmp    edx,0x5
  4302ea:	je     0x43115a
  4302f0:	cmp    edx,0x23
  4302f3:	je     0x4310dd
  4302f9:	cmp    DWORD PTR [rbp+0x0],edx
  4302fc:	je     0x4310dd
  430302:	cmp    edx,0x24
  430305:	je     0x431b60
  43030b:	mov    rdx,QWORD PTR [rbx+0x128]
  430312:	lea    rax,[rsp+0x40]
  430317:	mov    QWORD PTR [rsp+0x40],rdx
  43031c:	mov    QWORD PTR [rsp+0x48],rbp
  430321:	mov    DWORD PTR [rsp+0x50],0x0
  430329:	mov    QWORD PTR [rbx+0x128],rax
  430330:	mov    rax,QWORD PTR [rbx+0x120]
  430337:	mov    QWORD PTR [rsp+0x58],rax
  43033c:	mov    r8,QWORD PTR [rbp+0x8]
  430340:	mov    edx,r12d
  430343:	mov    rcx,rbx
  430346:	call   0x432320
  43034b:	mov    eax,DWORD PTR [rsp+0x50]
  43034f:	test   eax,eax
  430351:	je     0x430e7f
  430357:	mov    rax,QWORD PTR [rsp+0x40]
  43035c:	test   edi,edi
  43035e:	mov    QWORD PTR [rbx+0x128],rax
  430365:	je     0x42ec25
  43036b:	mov    QWORD PTR [rbx+0x120],rsi
  430372:	jmp    0x42ec25
  430377:	mov    rdx,QWORD PTR [rbx+0x128]
  43037e:	xor    edi,edi
  430380:	jmp    0x430312
  430382:	mov    r9,QWORD PTR [rbx+0x128]
  430389:	test   r9,r9
  43038c:	je     0x4321d7
  430392:	mov    rax,r9
  430395:	mov    edx,DWORD PTR [rax+0x10]
  430398:	test   edx,edx
  43039a:	jne    0x4303b4
  43039c:	mov    rdx,QWORD PTR [rax+0x8]
  4303a0:	mov    edx,DWORD PTR [rdx]
  4303a2:	lea    r8d,[rdx-0x19]
  4303a6:	cmp    r8d,0x2
  4303aa:	ja     0x4303bc
  4303ac:	cmp    ecx,edx
  4303ae:	je     0x4315a6
  4303b4:	mov    rax,QWORD PTR [rax]
  4303b7:	test   rax,rax
  4303ba:	jne    0x430395
  4303bc:	mov    rdx,r9
  4303bf:	xor    edi,edi
  4303c1:	jmp    0x430312
  4303c6:	test   r12b,0x4
  4303ca:	mov    r13,QWORD PTR [rbx+0x168]
  4303d1:	mov    r14,QWORD PTR [rbx+0x128]
  4303d8:	mov    QWORD PTR [rbx+0x168],r8
  4303df:	mov    QWORD PTR [rbx+0x128],0x0
  4303ea:	mov    r8,QWORD PTR [r8+0x8]
  4303ee:	je     0x430402
  4303f0:	mov    ecx,DWORD PTR [r8]
  4303f3:	test   ecx,ecx
  4303f5:	jne    0x430402
  4303f7:	cmp    DWORD PTR [r8+0x10],0x6
  4303fc:	je     0x431e97
  430402:	mov    edx,r12d
  430405:	mov    rcx,rbx
  430408:	call   0x432320
  43040d:	cmp    BYTE PTR [rbx+0x108],0x3c
  430414:	je     0x431c68
  43041a:	mov    rax,QWORD PTR [rbx+0x100]
  430421:	cmp    rax,0xff
  430427:	je     0x43174f
  43042d:	lea    rdx,[rax+0x1]
  430431:	mov    QWORD PTR [rbx+0x100],rdx
  430438:	mov    BYTE PTR [rbx+rax*1],0x3c
  43043c:	mov    edx,r12d
  43043f:	mov    BYTE PTR [rbx+0x108],0x3c
  430446:	mov    r8,QWORD PTR [rbp+0x10]
  43044a:	mov    rcx,rbx
  43044d:	call   0x432320
  430452:	cmp    BYTE PTR [rbx+0x108],0x3e
  430459:	je     0x431c56
  43045f:	mov    rax,QWORD PTR [rbx+0x100]
  430466:	cmp    rax,0xff
  43046c:	je     0x431720
  430472:	lea    rdx,[rax+0x1]
  430476:	mov    QWORD PTR [rbx+0x100],rdx
  43047d:	mov    BYTE PTR [rbx+rax*1],0x3e
  430481:	mov    BYTE PTR [rbx+0x108],0x3e
  430488:	mov    QWORD PTR [rbx+0x128],r14
  43048f:	mov    QWORD PTR [rbx+0x168],r13
  430496:	jmp    0x42ec25
  43049b:	mov    r14,QWORD PTR [rbx+0x128]
  4304a2:	mov    QWORD PTR [rbx+0x128],0x0
  4304ad:	mov    rdi,QWORD PTR [r8+0x8]
  4304b1:	test   rdi,rdi
  4304b4:	je     0x43050e
  4304b6:	lea    rsi,[rsp+0x40]
  4304bb:	mov    r9,QWORD PTR [rbx+0x120]
  4304c2:	xor    edx,edx
  4304c4:	xor    r13d,r13d
  4304c7:	mov    rax,rsi
  4304ca:	mov    QWORD PTR [rax],rdx
  4304cd:	mov    edx,DWORD PTR [rdi]
  4304cf:	add    r13d,0x1
  4304d3:	mov    r8,rax
  4304d6:	mov    QWORD PTR [rbx+0x128],rax
  4304dd:	mov    QWORD PTR [rax+0x8],rdi
  4304e1:	mov    DWORD PTR [rax+0x10],0x0
  4304e8:	mov    QWORD PTR [rax+0x18],r9
  4304ec:	lea    ecx,[rdx-0x1c]
  4304ef:	cmp    ecx,0x4
  4304f2:	ja     0x431d64
  4304f8:	mov    rdi,QWORD PTR [rdi+0x8]
  4304fc:	test   rdi,rdi
  4304ff:	je     0x43050e
  430501:	add    rax,0x20
  430505:	cmp    r13d,0x4
  430509:	mov    rdx,r8
  43050c:	jne    0x4304ca
  43050e:	mov    DWORD PTR [rbx+0x130],0x1
  430518:	jmp    0x42ec25
  43051d:	mov    r8,QWORD PTR [r8+0x8]
  430521:	mov    edx,r12d
  430524:	mov    rcx,rbx
  430527:	call   0x432320
  43052c:	test   r12b,0x4
  430530:	mov    rax,QWORD PTR [rbx+0x100]
  430537:	jne    0x430bcb
  43053d:	lea    rsi,[rip+0x2763a]        # 0x457b7e
  430544:	lea    r13,[rip+0x27635]        # 0x457b80
  43054b:	jmp    0x430576
  43054d:	nop    DWORD PTR [rax]
  430550:	mov    rdx,rax
  430553:	add    rax,0x1
  430557:	add    rsi,0x1
  43055b:	mov    QWORD PTR [rbx+0x100],rax
  430562:	mov    BYTE PTR [rbx+rdx*1],dil
  430566:	cmp    rsi,r13
  430569:	mov    BYTE PTR [rbx+0x108],dil
  430570:	je     0x430bed
  430576:	cmp    rax,0xff
  43057c:	movzx  edi,BYTE PTR [rsi]
  43057f:	jne    0x430550
  430581:	mov    edx,0xff
  430586:	mov    BYTE PTR [rbx+0xff],0x0
  43058d:	mov    r8,QWORD PTR [rbx+0x118]
  430594:	mov    rcx,rbx
  430597:	call   QWORD PTR [rbx+0x110]
  43059d:	add    DWORD PTR [rbx+0x138],0x1
  4305a4:	mov    eax,0x1
  4305a9:	xor    edx,edx
  4305ab:	jmp    0x430557
  4305ad:	and    r12d,0x4
  4305b1:	jne    0x431600
  4305b7:	movsxd r12,DWORD PTR [r8+0x10]
  4305bb:	mov    rbp,QWORD PTR [r8+0x8]
  4305bf:	test   r12,r12
  4305c2:	je     0x42ec25
  4305c8:	mov    rax,QWORD PTR [rbx+0x100]
  4305cf:	xor    esi,esi
  4305d1:	jmp    0x4305f9
  4305d3:	mov    rdx,rax
  4305d6:	add    rax,0x1
  4305da:	add    rsi,0x1
  4305de:	mov    QWORD PTR [rbx+0x100],rax
  4305e5:	mov    BYTE PTR [rbx+rdx*1],dil
  4305e9:	cmp    r12,rsi
  4305ec:	mov    BYTE PTR [rbx+0x108],dil
  4305f3:	je     0x42ec25
  4305f9:	cmp    rax,0xff
  4305ff:	movzx  edi,BYTE PTR [rbp+rsi*1+0x0]
  430604:	jne    0x4305d3
  430606:	mov    edx,0xff
  43060b:	mov    BYTE PTR [rbx+0xff],0x0
  430612:	mov    r8,QWORD PTR [rbx+0x118]
  430619:	mov    rcx,rbx
  43061c:	call   QWORD PTR [rbx+0x110]
  430622:	add    DWORD PTR [rbx+0x138],0x1
  430629:	mov    eax,0x1
  43062e:	xor    edx,edx
  430630:	jmp    0x4305da
  430632:	mov    r12d,DWORD PTR [r8+0x8]
  430636:	mov    rax,QWORD PTR [rbx+0x100]
  43063d:	test   r12d,r12d
  430640:	jne    0x430ea3
  430646:	lea    rsi,[rip+0x27728]        # 0x457d75
  43064d:	lea    rbp,[rip+0x27725]        # 0x457d79
  430654:	jmp    0x430686
  430656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430660:	mov    rdx,rax
  430663:	add    rax,0x1
  430667:	add    rsi,0x1
  43066b:	mov    QWORD PTR [rbx+0x100],rax
  430672:	mov    BYTE PTR [rbx+rdx*1],dil
  430676:	cmp    rsi,rbp
  430679:	mov    BYTE PTR [rbx+0x108],dil
  430680:	je     0x42ec25
  430686:	cmp    rax,0xff
  43068c:	movzx  edi,BYTE PTR [rsi]
  43068f:	jne    0x430660
  430691:	mov    edx,0xff
  430696:	mov    BYTE PTR [rbx+0xff],0x0
  43069d:	mov    r8,QWORD PTR [rbx+0x118]
  4306a4:	mov    rcx,rbx
  4306a7:	call   QWORD PTR [rbx+0x110]
  4306ad:	add    DWORD PTR [rbx+0x138],0x1
  4306b4:	mov    eax,0x1
  4306b9:	xor    edx,edx
  4306bb:	jmp    0x430667
  4306bd:	lea    rdx,[r8+0x8]
  4306c1:	mov    rcx,rbx
  4306c4:	call   0x42e8a0
  4306c9:	test   rax,rax
  4306cc:	je     0x42ec70
  4306d2:	cmp    DWORD PTR [rax],0x2f
  4306d5:	je     0x4315ba
  4306db:	mov    rsi,QWORD PTR [rbx+0x120]
  4306e2:	mov    r8,rax
  4306e5:	mov    rcx,rbx
  4306e8:	mov    rdx,QWORD PTR [rsi]
  4306eb:	mov    QWORD PTR [rbx+0x120],rdx
  4306f2:	mov    edx,r12d
  4306f5:	call   0x432320
  4306fa:	mov    QWORD PTR [rbx+0x120],rsi
  430701:	jmp    0x42ec25
  430706:	mov    DWORD PTR [rbx+0x130],0x1
  430710:	jmp    0x42ec25
  430715:	add    ebp,0x1
  430718:	cmp    ebp,edi
  43071a:	jne    0x42edd4
  430720:	jmp    0x42ec25
  430725:	mov    r8,QWORD PTR [rbp+0x8]
  430729:	mov    edx,r12d
  43072c:	mov    rcx,rbx
  43072f:	call   0x432320
  430734:	mov    rax,QWORD PTR [rbx+0x100]
  43073b:	cmp    rax,0xff
  430741:	je     0x43194e
  430747:	lea    rdx,[rax+0x1]
  43074b:	mov    QWORD PTR [rbx+0x100],rdx
  430752:	mov    BYTE PTR [rbx+rax*1],0x29
  430756:	mov    BYTE PTR [rbx+0x108],0x29
  43075d:	jmp    0x42ec25
  430762:	mov    rax,QWORD PTR [rbx+0x168]
  430769:	test   rax,rax
  43076c:	je     0x43078b
  43076e:	mov    rdx,QWORD PTR [rbx+0x120]
  430775:	mov    QWORD PTR [rsp+0x38],rax
  43077a:	mov    QWORD PTR [rsp+0x30],rdx
  43077f:	lea    rdx,[rsp+0x30]
  430784:	mov    QWORD PTR [rbx+0x120],rdx
  43078b:	mov    r8,QWORD PTR [rbp+0x8]
  43078f:	cmp    DWORD PTR [r8],0x4
  430793:	je     0x4313f1
  430799:	mov    rax,QWORD PTR [rbx+0x140]
  4307a0:	mov    edx,r12d
  4307a3:	mov    rcx,rbx
  4307a6:	mov    QWORD PTR [rsp+0x40],r8
  4307ab:	mov    QWORD PTR [rsp+0x48],rax
  4307b0:	lea    rax,[rsp+0x40]
  4307b5:	mov    QWORD PTR [rbx+0x140],rax
  4307bc:	call   0x42eb10
  4307c1:	cmp    QWORD PTR [rbx+0x168],0x0
  4307c9:	mov    rax,QWORD PTR [rsp+0x48]
  4307ce:	mov    QWORD PTR [rbx+0x140],rax
  4307d5:	je     0x42ec25
  4307db:	mov    rax,QWORD PTR [rsp+0x30]
  4307e0:	mov    QWORD PTR [rbx+0x120],rax
  4307e7:	jmp    0x42ec25
  4307ec:	mov    r8,QWORD PTR [rbp+0x10]
  4307f0:	mov    edx,r12d
  4307f3:	mov    rcx,rbx
  4307f6:	call   0x432320
  4307fb:	jmp    0x42ec25
  430800:	mov    r8,QWORD PTR [rbp+0x8]
  430804:	mov    edx,r12d
  430807:	mov    rcx,rbx
  43080a:	call   0x432320
  43080f:	jmp    0x42ec25
  430814:	mov    r8,QWORD PTR [rbp+0x8]
  430818:	mov    edx,r12d
  43081b:	mov    rcx,rbx
  43081e:	call   0x432320
  430823:	jmp    0x42ec25
  430828:	mov    r8,QWORD PTR [rbp+0x8]
  43082c:	mov    edx,r12d
  43082f:	mov    rcx,rbx
  430832:	call   0x432320
  430837:	jmp    0x42ec25
  43083c:	mov    r8,QWORD PTR [rbp+0x8]
  430840:	mov    edx,r12d
  430843:	mov    rcx,rbx
  430846:	call   0x432320
  43084b:	jmp    0x42ec25
  430850:	mov    eax,DWORD PTR [rbp+0x8]
  430853:	lea    rsi,[rsp+0x40]
  430858:	lea    rdx,[rip+0x27330]        # 0x457b8f
  43085f:	mov    rcx,rsi
  430862:	mov    r12,rsi
  430865:	lea    r8d,[rax+0x1]
  430869:	call   0x449400
  43086e:	mov    edx,DWORD PTR [r12]
  430872:	add    r12,0x4
  430876:	lea    eax,[rdx-0x1010101]
  43087c:	not    edx
  43087e:	and    eax,edx
  430880:	and    eax,0x80808080
  430885:	je     0x43086e
  430887:	mov    edx,eax
  430889:	shr    edx,0x10
  43088c:	test   eax,0x8080
  430891:	cmove  eax,edx
  430894:	lea    rdx,[r12+0x2]
  430899:	cmove  r12,rdx
  43089d:	add    al,al
  43089f:	mov    rax,QWORD PTR [rbx+0x100]
  4308a6:	sbb    r12,0x3
  4308aa:	sub    r12,rsi
  4308ad:	je     0x43090d
  4308af:	xor    edi,edi
  4308b1:	jmp    0x4308d5
  4308b3:	mov    rdx,rax
  4308b6:	add    rax,0x1
  4308ba:	add    rdi,0x1
  4308be:	mov    QWORD PTR [rbx+0x100],rax
  4308c5:	mov    BYTE PTR [rbx+rdx*1],bpl
  4308c9:	cmp    rdi,r12
  4308cc:	mov    BYTE PTR [rbx+0x108],bpl
  4308d3:	je     0x43090d
  4308d5:	cmp    rax,0xff
  4308db:	movzx  ebp,BYTE PTR [rsi+rdi*1]
  4308df:	jne    0x4308b3
  4308e1:	mov    edx,0xff
  4308e6:	mov    BYTE PTR [rbx+0xff],0x0
  4308ed:	mov    r8,QWORD PTR [rbx+0x118]
  4308f4:	mov    rcx,rbx
  4308f7:	call   QWORD PTR [rbx+0x110]
  4308fd:	add    DWORD PTR [rbx+0x138],0x1
  430904:	mov    eax,0x1
  430909:	xor    edx,edx
  43090b:	jmp    0x4308ba
  43090d:	cmp    rax,0xff
  430913:	je     0x43197d
  430919:	lea    rdx,[rax+0x1]
  43091d:	mov    QWORD PTR [rbx+0x100],rdx
  430924:	mov    BYTE PTR [rbx+rax*1],0x7d
  430928:	mov    BYTE PTR [rbx+0x108],0x7d
  43092f:	jmp    0x42ec25
  430934:	mov    r8,QWORD PTR [rbp+0x8]
  430938:	mov    edx,r12d
  43093b:	mov    rcx,rbx
  43093e:	lea    rsi,[rip+0x27480]        # 0x457dc5
  430945:	lea    r12,[rip+0x2747b]        # 0x457dc7
  43094c:	call   0x432320
  430951:	mov    rax,QWORD PTR [rbx+0x100]
  430958:	jmp    0x430982
  43095a:	nop    WORD PTR [rax+rax*1+0x0]
  430960:	mov    rdx,rax
  430963:	add    rax,0x1
  430967:	add    rsi,0x1
  43096b:	mov    QWORD PTR [rbx+0x100],rax
  430972:	mov    BYTE PTR [rbx+rdx*1],dil
  430976:	cmp    rsi,r12
  430979:	mov    BYTE PTR [rbx+0x108],dil
  430980:	je     0x4309b9
  430982:	cmp    rax,0xff
  430988:	movzx  edi,BYTE PTR [rsi]
  43098b:	jne    0x430960
  43098d:	mov    edx,0xff
  430992:	mov    BYTE PTR [rbx+0xff],0x0
  430999:	mov    r8,QWORD PTR [rbx+0x118]
  4309a0:	mov    rcx,rbx
  4309a3:	call   QWORD PTR [rbx+0x110]
  4309a9:	add    DWORD PTR [rbx+0x138],0x1
  4309b0:	mov    eax,0x1
  4309b5:	xor    edx,edx
  4309b7:	jmp    0x430967
  4309b9:	mov    eax,DWORD PTR [rbp+0x10]
  4309bc:	lea    rsi,[rsp+0x40]
  4309c1:	lea    rdx,[rip+0x271c7]        # 0x457b8f
  4309c8:	mov    rcx,rsi
  4309cb:	mov    r12,rsi
  4309ce:	lea    r8d,[rax+0x1]
  4309d2:	call   0x449400
  4309d7:	mov    edx,DWORD PTR [r12]
  4309db:	add    r12,0x4
  4309df:	lea    eax,[rdx-0x1010101]
  4309e5:	not    edx
  4309e7:	and    eax,edx
  4309e9:	and    eax,0x80808080
  4309ee:	je     0x4309d7
  4309f0:	mov    edx,eax
  4309f2:	shr    edx,0x10
  4309f5:	test   eax,0x8080
  4309fa:	cmove  eax,edx
  4309fd:	lea    rdx,[r12+0x2]
  430a02:	cmove  r12,rdx
  430a06:	add    al,al
  430a08:	mov    rax,QWORD PTR [rbx+0x100]
  430a0f:	sbb    r12,0x3
  430a13:	sub    r12,rsi
  430a16:	je     0x430a7a
  430a18:	xor    edi,edi
  430a1a:	jmp    0x430a42
  430a1c:	nop    DWORD PTR [rax+0x0]
  430a20:	mov    rdx,rax
  430a23:	add    rax,0x1
  430a27:	add    rdi,0x1
  430a2b:	mov    QWORD PTR [rbx+0x100],rax
  430a32:	mov    BYTE PTR [rbx+rdx*1],bpl
  430a36:	cmp    rdi,r12
  430a39:	mov    BYTE PTR [rbx+0x108],bpl
  430a40:	je     0x430a7a
  430a42:	cmp    rax,0xff
  430a48:	movzx  ebp,BYTE PTR [rsi+rdi*1]
  430a4c:	jne    0x430a20
  430a4e:	mov    edx,0xff
  430a53:	mov    BYTE PTR [rbx+0xff],0x0
  430a5a:	mov    r8,QWORD PTR [rbx+0x118]
  430a61:	mov    rcx,rbx
  430a64:	call   QWORD PTR [rbx+0x110]
  430a6a:	add    DWORD PTR [rbx+0x138],0x1
  430a71:	mov    eax,0x1
  430a76:	xor    edx,edx
  430a78:	jmp    0x430a27
  430a7a:	cmp    rax,0xff
  430a80:	je     0x4316e2
  430a86:	lea    rdx,[rax+0x1]
  430a8a:	mov    QWORD PTR [rbx+0x100],rdx
  430a91:	mov    BYTE PTR [rbx+rax*1],0x7d
  430a95:	mov    BYTE PTR [rbx+0x108],0x7d
  430a9c:	jmp    0x42ec25
  430aa1:	mov    rsi,QWORD PTR [r13+0x8]
  430aa5:	movzx  ecx,BYTE PTR [rsi]
  430aa8:	lea    edx,[rcx-0x61]
  430aab:	cmp    dl,0x19
  430aae:	jbe    0x43112f
  430ab4:	movsxd rbp,r12d
  430ab7:	cmp    BYTE PTR [rsi+rbp*1-0x1],0x20
  430abc:	je     0x4312a0
  430ac2:	test   rbp,rbp
  430ac5:	je     0x42ec25
  430acb:	mov    rax,QWORD PTR [rbx+0x100]
  430ad2:	add    rbp,rsi
  430ad5:	jmp    0x430b06
  430ad7:	nop    WORD PTR [rax+rax*1+0x0]
  430ae0:	mov    rdx,rax
  430ae3:	add    rax,0x1
  430ae7:	add    rsi,0x1
  430aeb:	mov    QWORD PTR [rbx+0x100],rax
  430af2:	mov    BYTE PTR [rbx+rdx*1],dil
  430af6:	cmp    rsi,rbp
  430af9:	mov    BYTE PTR [rbx+0x108],dil
  430b00:	je     0x42ec25
  430b06:	cmp    rax,0xff
  430b0c:	movzx  edi,BYTE PTR [rsi]
  430b0f:	jne    0x430ae0
  430b11:	mov    edx,0xff
  430b16:	mov    BYTE PTR [rbx+0xff],0x0
  430b1d:	mov    r8,QWORD PTR [rbx+0x118]
  430b24:	mov    rcx,rbx
  430b27:	call   QWORD PTR [rbx+0x110]
  430b2d:	add    DWORD PTR [rbx+0x138],0x1
  430b34:	mov    eax,0x1
  430b39:	xor    edx,edx
  430b3b:	jmp    0x430ae7
  430b3d:	mov    r8,QWORD PTR [rbp+0x10]
  430b41:	mov    edx,r12d
  430b44:	mov    rcx,rbx
  430b47:	call   0x432320
  430b4c:	mov    rax,QWORD PTR [rbx+0x100]
  430b53:	cmp    rax,0xff
  430b59:	je     0x43177e
  430b5f:	lea    rdx,[rax+0x1]
  430b63:	mov    QWORD PTR [rbx+0x100],rdx
  430b6a:	mov    BYTE PTR [rbx+rax*1],0x5d
  430b6e:	mov    BYTE PTR [rbx+0x108],0x5d
  430b75:	jmp    0x42ec25
  430b7a:	mov    r8,QWORD PTR [rbp+0x8]
  430b7e:	mov    edx,r12d
  430b81:	mov    rcx,rbx
  430b84:	call   0x432320
  430b89:	jmp    0x42ec25
  430b8e:	mov    r8,QWORD PTR [rbp+0x10]
  430b92:	mov    edx,r12d
  430b95:	mov    rcx,rbx
  430b98:	call   0x432320
  430b9d:	mov    rax,QWORD PTR [rbx+0x100]
  430ba4:	cmp    rax,0xff
  430baa:	je     0x43191f
  430bb0:	lea    rdx,[rax+0x1]
  430bb4:	mov    QWORD PTR [rbx+0x100],rdx
  430bbb:	mov    BYTE PTR [rbx+rax*1],0x5d
  430bbf:	mov    BYTE PTR [rbx+0x108],0x5d
  430bc6:	jmp    0x42ec25
  430bcb:	cmp    rax,0xff
  430bd1:	je     0x431e68
  430bd7:	lea    rdx,[rax+0x1]
  430bdb:	mov    QWORD PTR [rbx+0x100],rdx
  430be2:	mov    BYTE PTR [rbx+rax*1],0x2e
  430be6:	mov    BYTE PTR [rbx+0x108],0x2e
  430bed:	mov    r13,QWORD PTR [rbp+0x10]
  430bf1:	cmp    DWORD PTR [r13+0x0],0x46
  430bf6:	je     0x4317ad
  430bfc:	mov    r8,r13
  430bff:	mov    edx,r12d
  430c02:	mov    rcx,rbx
  430c05:	call   0x432320
  430c0a:	jmp    0x42ec25
  430c0f:	mov    r8,QWORD PTR [rbp+0x8]
  430c13:	mov    edx,r12d
  430c16:	mov    rcx,rbx
  430c19:	call   0x432320
  430c1e:	jmp    0x42ec25
  430c23:	mov    r8,QWORD PTR [rbp+0x8]
  430c27:	mov    edx,r12d
  430c2a:	mov    rcx,rbx
  430c2d:	call   0x432320
  430c32:	jmp    0x42ec25
  430c37:	mov    r8,QWORD PTR [rbp+0x8]
  430c3b:	mov    edx,r12d
  430c3e:	mov    rcx,rbx
  430c41:	call   0x432320
  430c46:	jmp    0x42ec25
  430c4b:	mov    r8,QWORD PTR [rbp+0x8]
  430c4f:	mov    edx,r12d
  430c52:	mov    rcx,rbx
  430c55:	call   0x432320
  430c5a:	jmp    0x42ec25
  430c5f:	mov    r8,QWORD PTR [rbp+0x8]
  430c63:	mov    edx,r12d
  430c66:	mov    rcx,rbx
  430c69:	lea    rsi,[rip+0x26f5e]        # 0x457bce
  430c70:	lea    r13,[rip+0x26f5b]        # 0x457bd2
  430c77:	call   0x432320
  430c7c:	mov    rax,QWORD PTR [rbx+0x100]
  430c83:	jmp    0x430ca7
  430c85:	mov    rdx,rax
  430c88:	add    rax,0x1
  430c8c:	add    rsi,0x1
  430c90:	mov    QWORD PTR [rbx+0x100],rax
  430c97:	mov    BYTE PTR [rbx+rdx*1],dil
  430c9b:	cmp    rsi,r13
  430c9e:	mov    BYTE PTR [rbx+0x108],dil
  430ca5:	je     0x430d06
  430ca7:	cmp    rax,0xff
  430cad:	movzx  edi,BYTE PTR [rsi]
  430cb0:	jne    0x430c85
  430cb2:	mov    edx,0xff
  430cb7:	mov    BYTE PTR [rbx+0xff],0x0
  430cbe:	mov    r8,QWORD PTR [rbx+0x118]
  430cc5:	mov    rcx,rbx
  430cc8:	call   QWORD PTR [rbx+0x110]
  430cce:	add    DWORD PTR [rbx+0x138],0x1
  430cd5:	mov    eax,0x1
  430cda:	xor    edx,edx
  430cdc:	jmp    0x430c8c
  430cde:	mov    r8,QWORD PTR [rbp+0x8]
  430ce2:	mov    edx,r12d
  430ce5:	mov    rcx,rbx
  430ce8:	call   0x432320
  430ced:	jmp    0x42ec25
  430cf2:	mov    r8,QWORD PTR [rbp+0x8]
  430cf6:	mov    edx,r12d
  430cf9:	mov    rcx,rbx
  430cfc:	call   0x432320
  430d01:	jmp    0x42ec25
  430d06:	mov    r8,QWORD PTR [rbp+0x10]
  430d0a:	mov    edx,r12d
  430d0d:	mov    rcx,rbx
  430d10:	call   0x432320
  430d15:	jmp    0x42ec25
  430d1a:	mov    r8,QWORD PTR [rbp+0x8]
  430d1e:	mov    edx,r12d
  430d21:	mov    rcx,rbx
  430d24:	call   0x432320
  430d29:	jmp    0x42ec25
  430d2e:	mov    r8,QWORD PTR [rbp+0x8]
  430d32:	mov    edx,r12d
  430d35:	mov    rcx,rbx
  430d38:	call   0x432320
  430d3d:	jmp    0x42ec25
  430d42:	mov    r8,QWORD PTR [rbp+0x10]
  430d46:	mov    edx,r12d
  430d49:	mov    rcx,rbx
  430d4c:	lea    rsi,[rip+0x26f60]        # 0x457cb3
  430d53:	lea    r13,[rip+0x26f5e]        # 0x457cb8
  430d5a:	call   0x432320
  430d5f:	mov    rax,QWORD PTR [rbx+0x100]
  430d66:	jmp    0x430d92
  430d68:	nop    DWORD PTR [rax+rax*1+0x0]
  430d70:	mov    rdx,rax
  430d73:	add    rax,0x1
  430d77:	add    rsi,0x1
  430d7b:	mov    QWORD PTR [rbx+0x100],rax
  430d82:	mov    BYTE PTR [rbx+rdx*1],dil
  430d86:	cmp    rsi,r13
  430d89:	mov    BYTE PTR [rbx+0x108],dil
  430d90:	je     0x430dc9
  430d92:	cmp    rax,0xff
  430d98:	movzx  edi,BYTE PTR [rsi]
  430d9b:	jne    0x430d70
  430d9d:	mov    edx,0xff
  430da2:	mov    BYTE PTR [rbx+0xff],0x0
  430da9:	mov    r8,QWORD PTR [rbx+0x118]
  430db0:	mov    rcx,rbx
  430db3:	call   QWORD PTR [rbx+0x110]
  430db9:	add    DWORD PTR [rbx+0x138],0x1
  430dc0:	mov    eax,0x1
  430dc5:	xor    edx,edx
  430dc7:	jmp    0x430d77
  430dc9:	mov    r8,QWORD PTR [rbp+0x8]
  430dcd:	mov    edx,r12d
  430dd0:	mov    rcx,rbx
  430dd3:	call   0x432320
  430dd8:	jmp    0x42ec25
  430ddd:	mov    r8,QWORD PTR [rbp+0x8]
  430de1:	mov    edx,r12d
  430de4:	mov    rcx,rbx
  430de7:	call   0x432320
  430dec:	jmp    0x42ec25
  430df1:	mov    r8,QWORD PTR [rbp+0x8]
  430df5:	mov    edx,r12d
  430df8:	mov    rcx,rbx
  430dfb:	call   0x432320
  430e00:	jmp    0x42ec25
  430e05:	mov    r8,QWORD PTR [rbp+0x8]
  430e09:	mov    edx,r12d
  430e0c:	mov    rcx,rbx
  430e0f:	call   0x432320
  430e14:	jmp    0x42ec25
  430e19:	mov    r8,QWORD PTR [rbp+0x8]
  430e1d:	mov    edx,r12d
  430e20:	mov    rcx,rbx
  430e23:	call   0x432320
  430e28:	jmp    0x42ec25
  430e2d:	mov    r8,QWORD PTR [rbp+0x8]
  430e31:	mov    edx,r12d
  430e34:	mov    rcx,rbx
  430e37:	call   0x432320
  430e3c:	jmp    0x42ec25
  430e41:	mov    r8,QWORD PTR [rbp+0x10]
  430e45:	mov    edx,r12d
  430e48:	mov    rcx,rbx
  430e4b:	mov    edi,DWORD PTR [rbx+0x138]
  430e51:	call   0x432320
  430e56:	cmp    DWORD PTR [rbx+0x138],edi
  430e5c:	jne    0x42ec25
  430e62:	cmp    QWORD PTR [rbx+0x100],rsi
  430e69:	jne    0x42ec25
  430e6f:	sub    rsi,0x2
  430e73:	mov    QWORD PTR [rbx+0x100],rsi
  430e7a:	jmp    0x42ec25
  430e7f:	mov    r8,rbp
  430e82:	mov    edx,r12d
  430e85:	mov    rcx,rbx
  430e88:	call   0x432360
  430e8d:	jmp    0x430357
  430e92:	test   edi,edi
  430e94:	mov    r13,QWORD PTR [rbp+0x8]
  430e98:	jne    0x42edc4
  430e9e:	jmp    0x42ec25
  430ea3:	lea    rsi,[rip+0x26ed0]        # 0x457d7a
  430eaa:	lea    rbp,[rip+0x26ecf]        # 0x457d80
  430eb1:	jmp    0x430ed5
  430eb3:	mov    rdx,rax
  430eb6:	add    rax,0x1
  430eba:	add    rsi,0x1
  430ebe:	mov    QWORD PTR [rbx+0x100],rax
  430ec5:	mov    BYTE PTR [rbx+rdx*1],dil
  430ec9:	cmp    rsi,rbp
  430ecc:	mov    BYTE PTR [rbx+0x108],dil
  430ed3:	je     0x430f0c
  430ed5:	cmp    rax,0xff
  430edb:	movzx  edi,BYTE PTR [rsi]
  430ede:	jne    0x430eb3
  430ee0:	mov    edx,0xff
  430ee5:	mov    BYTE PTR [rbx+0xff],0x0
  430eec:	mov    r8,QWORD PTR [rbx+0x118]
  430ef3:	mov    rcx,rbx
  430ef6:	call   QWORD PTR [rbx+0x110]
  430efc:	add    DWORD PTR [rbx+0x138],0x1
  430f03:	mov    eax,0x1
  430f08:	xor    edx,edx
  430f0a:	jmp    0x430eba
  430f0c:	lea    rsi,[rsp+0x40]
  430f11:	lea    rdx,[rip+0x26c77]        # 0x457b8f
  430f18:	mov    r8d,r12d
  430f1b:	mov    rcx,rsi
  430f1e:	mov    r12,rsi
  430f21:	call   0x449400
  430f26:	mov    edx,DWORD PTR [r12]
  430f2a:	add    r12,0x4
  430f2e:	lea    eax,[rdx-0x1010101]
  430f34:	not    edx
  430f36:	and    eax,edx
  430f38:	and    eax,0x80808080
  430f3d:	je     0x430f26
  430f3f:	mov    edx,eax
  430f41:	shr    edx,0x10
  430f44:	test   eax,0x8080
  430f49:	cmove  eax,edx
  430f4c:	lea    rdx,[r12+0x2]
  430f51:	cmove  r12,rdx
  430f55:	add    al,al
  430f57:	mov    rax,QWORD PTR [rbx+0x100]
  430f5e:	sbb    r12,0x3
  430f62:	sub    r12,rsi
  430f65:	je     0x430fca
  430f67:	xor    edi,edi
  430f69:	jmp    0x430f92
  430f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  430f70:	mov    rdx,rax
  430f73:	add    rax,0x1
  430f77:	add    rdi,0x1
  430f7b:	mov    QWORD PTR [rbx+0x100],rax
  430f82:	mov    BYTE PTR [rbx+rdx*1],bpl
  430f86:	cmp    rdi,r12
  430f89:	mov    BYTE PTR [rbx+0x108],bpl
  430f90:	je     0x430fca
  430f92:	cmp    rax,0xff
  430f98:	movzx  ebp,BYTE PTR [rsi+rdi*1]
  430f9c:	jne    0x430f70
  430f9e:	mov    edx,0xff
  430fa3:	mov    BYTE PTR [rbx+0xff],0x0
  430faa:	mov    r8,QWORD PTR [rbx+0x118]
  430fb1:	mov    rcx,rbx
  430fb4:	call   QWORD PTR [rbx+0x110]
  430fba:	add    DWORD PTR [rbx+0x138],0x1
  430fc1:	mov    eax,0x1
  430fc6:	xor    edx,edx
  430fc8:	jmp    0x430f77
  430fca:	cmp    rax,0xff
  430fd0:	je     0x431d35
  430fd6:	lea    rdx,[rax+0x1]
  430fda:	mov    QWORD PTR [rbx+0x100],rdx
  430fe1:	mov    BYTE PTR [rbx+rax*1],0x7d
  430fe5:	mov    BYTE PTR [rbx+0x108],0x7d
  430fec:	jmp    0x42ec25
  430ff1:	movsxd rbp,DWORD PTR [rax+0x18]
  430ff5:	mov    r12,QWORD PTR [rax+0x10]
  430ff9:	test   rbp,rbp
  430ffc:	je     0x42ec25
  431002:	mov    rax,QWORD PTR [rbx+0x100]
  431009:	xor    esi,esi
  43100b:	jmp    0x431036
  43100d:	nop    DWORD PTR [rax]
  431010:	mov    rdx,rax
  431013:	add    rax,0x1
  431017:	add    rsi,0x1
  43101b:	mov    QWORD PTR [rbx+0x100],rax
  431022:	mov    BYTE PTR [rbx+rdx*1],dil
  431026:	cmp    rbp,rsi
  431029:	mov    BYTE PTR [rbx+0x108],dil
  431030:	je     0x42ec25
  431036:	cmp    rax,0xff
  43103c:	movzx  edi,BYTE PTR [r12+rsi*1]
  431041:	jne    0x431010
  431043:	mov    edx,0xff
  431048:	mov    BYTE PTR [rbx+0xff],0x0
  43104f:	mov    r8,QWORD PTR [rbx+0x118]
  431056:	mov    rcx,rbx
  431059:	call   QWORD PTR [rbx+0x110]
  43105f:	add    DWORD PTR [rbx+0x138],0x1
  431066:	mov    eax,0x1
  43106b:	xor    edx,edx
  43106d:	jmp    0x431017
  43106f:	lea    rsi,[rip+0x26c94]        # 0x457d0a
  431076:	lea    rbp,[rip+0x26c93]        # 0x457d10
  43107d:	jmp    0x4310a6
  43107f:	nop
  431080:	mov    rdx,rax
  431083:	add    rax,0x1
  431087:	add    rsi,0x1
  43108b:	mov    QWORD PTR [rbx+0x100],rax
  431092:	mov    BYTE PTR [rbx+rdx*1],dil
  431096:	cmp    rsi,rbp
  431099:	mov    BYTE PTR [rbx+0x108],dil
  4310a0:	je     0x42ec25
  4310a6:	cmp    rax,0xff
  4310ac:	movzx  edi,BYTE PTR [rsi]
  4310af:	jne    0x431080
  4310b1:	mov    edx,0xff
  4310b6:	mov    BYTE PTR [rbx+0xff],0x0
  4310bd:	mov    r8,QWORD PTR [rbx+0x118]
  4310c4:	mov    rcx,rbx
  4310c7:	call   QWORD PTR [rbx+0x110]
  4310cd:	add    DWORD PTR [rbx+0x138],0x1
  4310d4:	mov    eax,0x1
  4310d9:	xor    edx,edx
  4310db:	jmp    0x431087
  4310dd:	mov    rdx,QWORD PTR [rbx+0x128]
  4310e4:	mov    rbp,rax
  4310e7:	jmp    0x430312
  4310ec:	mov    r9,QWORD PTR [rbx+0x128]
  4310f3:	and    r12d,0xffffff9f
  4310f7:	lea    r8,[r8+0x10]
  4310fb:	mov    edx,r12d
  4310fe:	mov    rcx,rbx
  431101:	call   0x433150
  431106:	mov    r8,QWORD PTR [rbp+0x8]
  43110a:	test   r8,r8
  43110d:	je     0x42ec25
  431113:	mov    edx,r12d
  431116:	mov    rcx,rbx
  431119:	call   0x432320
  43111e:	jmp    0x42ec25
  431123:	mov    rax,QWORD PTR [rbx+0x100]
  43112a:	jmp    0x42f5f2
  43112f:	cmp    rax,0xff
  431135:	je     0x431ffe
  43113b:	lea    rdx,[rax+0x1]
  43113f:	mov    QWORD PTR [rbx+0x100],rdx
  431146:	mov    BYTE PTR [rbx+rax*1],0x20
  43114a:	mov    BYTE PTR [rbx+0x108],0x20
  431151:	mov    rsi,QWORD PTR [r13+0x8]
  431155:	jmp    0x430ab4
  43115a:	mov    r8d,DWORD PTR [rbx+0x150]
  431161:	mov    r10,QWORD PTR [rbx+0x148]
  431168:	test   r8d,r8d
  43116b:	jle    0x431199
  43116d:	xor    ecx,ecx
  43116f:	cmp    rax,QWORD PTR [r10]
  431172:	lea    rdx,[r10+0x10]
  431176:	jne    0x431191
  431178:	jmp    0x431c0f
  43117d:	nop    DWORD PTR [rax]
  431180:	mov    r9,rdx
  431183:	add    rdx,0x10
  431187:	cmp    rax,QWORD PTR [rdx-0x10]
  43118b:	je     0x431c12
  431191:	add    ecx,0x1
  431194:	cmp    ecx,r8d
  431197:	jne    0x431180
  431199:	cmp    r8d,DWORD PTR [rbx+0x154]
  4311a0:	jge    0x432224
  4311a6:	movsxd rdx,r8d
  4311a9:	mov    r9,QWORD PTR [rbx+0x120]
  4311b0:	add    r8d,0x1
  4311b4:	shl    rdx,0x4
  4311b8:	mov    DWORD PTR [rbx+0x150],r8d
  4311bf:	add    rdx,r10
  4311c2:	mov    QWORD PTR [rdx],rax
  4311c5:	add    rdx,0x8
  4311c9:	test   r9,r9
  4311cc:	je     0x43122e
  4311ce:	movsxd rcx,DWORD PTR [rbx+0x160]
  4311d5:	mov    r10d,DWORD PTR [rbx+0x164]
  4311dc:	cmp    r10d,ecx
  4311df:	jle    0x432224
  4311e5:	lea    r8d,[rcx+0x1]
  4311e9:	add    r10d,0x1
  4311ed:	shl    rcx,0x4
  4311f1:	jmp    0x431204
  4311f3:	add    r8d,0x1
  4311f7:	add    rcx,0x10
  4311fb:	cmp    r8d,r10d
  4311fe:	je     0x43221e
  431204:	mov    r11,rcx
  431207:	add    r11,QWORD PTR [rbx+0x158]
  43120e:	mov    r13,QWORD PTR [r9+0x8]
  431212:	mov    edi,r8d
  431215:	mov    QWORD PTR [r11+0x8],r13
  431219:	mov    QWORD PTR [rdx],r11
  43121c:	mov    rdx,r11
  43121f:	mov    r9,QWORD PTR [r9]
  431222:	test   r9,r9
  431225:	jne    0x4311f3
  431227:	mov    DWORD PTR [rbx+0x160],r8d
  43122e:	mov    QWORD PTR [rdx],0x0
  431235:	lea    rdx,[rax+0x8]
  431239:	mov    rcx,rbx
  43123c:	xor    edi,edi
  43123e:	call   0x42e8a0
  431243:	test   rax,rax
  431246:	je     0x42ec70
  43124c:	mov    edx,DWORD PTR [rax]
  43124e:	cmp    edx,0x2f
  431251:	jne    0x4302f0
  431257:	mov    edx,DWORD PTR [rbx+0x134]
  43125d:	jmp    0x431279
  43125f:	nop
  431260:	mov    rax,QWORD PTR [rax+0x10]
  431264:	sub    edx,0x1
  431267:	test   rax,rax
  43126a:	je     0x432197
  431270:	cmp    DWORD PTR [rax],0x2f
  431273:	jne    0x432197
  431279:	cmp    edx,0x0
  43127c:	jg     0x431260
  43127e:	jne    0x432197
  431284:	mov    rax,QWORD PTR [rax+0x8]
  431288:	test   rax,rax
  43128b:	je     0x432197
  431291:	mov    edx,DWORD PTR [rax]
  431293:	jmp    0x4302f0
  431298:	nop    DWORD PTR [rax+rax*1+0x0]
  4312a0:	lea    ebp,[r12-0x1]
  4312a5:	movsxd rbp,ebp
  4312a8:	jmp    0x430ac2
  4312ad:	mov    rax,QWORD PTR [rbx+0x100]
  4312b4:	lea    rsi,[rip+0x26a42]        # 0x457cfd
  4312bb:	lea    r13,[rip+0x26a40]        # 0x457d02
  4312c2:	jmp    0x4312ea
  4312c4:	mov    rdx,rax
  4312c7:	add    rax,0x1
  4312cb:	add    rsi,0x1
  4312cf:	mov    QWORD PTR [rbx+0x100],rax
  4312d6:	mov    BYTE PTR [rbx+rdx*1],dil
  4312da:	cmp    rsi,r13
  4312dd:	mov    BYTE PTR [rbx+0x108],dil
  4312e4:	je     0x42f5a8
  4312ea:	cmp    rax,0xff
  4312f0:	movzx  edi,BYTE PTR [rsi]
  4312f3:	jne    0x4312c4
  4312f5:	mov    edx,0xff
  4312fa:	mov    BYTE PTR [rbx+0xff],0x0
  431301:	mov    r8,QWORD PTR [rbx+0x118]
  431308:	mov    rcx,rbx
  43130b:	call   QWORD PTR [rbx+0x110]
  431311:	add    DWORD PTR [rbx+0x138],0x1
  431318:	mov    eax,0x1
  43131d:	xor    edx,edx
  43131f:	jmp    0x4312cb
  431321:	mov    rax,QWORD PTR [r13+0x8]
  431325:	lea    rdi,[rip+0x269fb]        # 0x457d27
  43132c:	mov    ecx,0x3
  431331:	mov    rbp,QWORD PTR [rax]
  431334:	mov    eax,DWORD PTR [r14]
  431337:	mov    rsi,rbp
  43133a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43133c:	jne    0x431347
  43133e:	cmp    eax,0x3
  431341:	je     0x43217a
  431347:	cmp    eax,0x38
  43134a:	je     0x4321ea
  431350:	mov    rcx,rbx
  431353:	mov    r8,r13
  431356:	mov    edx,r12d
  431359:	lea    rdi,[rip+0x269ca]        # 0x457d2a
  431360:	mov    rsi,rbp
  431363:	call   0x433470
  431368:	mov    ecx,0x3
  43136d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43136f:	je     0x431aa8
  431375:	lea    rdi,[rip+0x269b1]        # 0x457d2d
  43137c:	mov    ecx,0x3
  431381:	mov    rsi,rbp
  431384:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  431386:	jne    0x42f2ee
  43138c:	mov    rax,QWORD PTR [rbx+0x100]
  431393:	cmp    rax,0xff
  431399:	je     0x432150
  43139f:	lea    rdx,[rax+0x1]
  4313a3:	mov    r8,r14
  4313a6:	mov    rcx,rbx
  4313a9:	mov    QWORD PTR [rbx+0x100],rdx
  4313b0:	mov    BYTE PTR [rbx+rax*1],0x28
  4313b4:	mov    edx,r12d
  4313b7:	mov    BYTE PTR [rbx+0x108],0x28
  4313be:	call   0x432320
  4313c3:	mov    rax,QWORD PTR [rbx+0x100]
  4313ca:	cmp    rax,0xff
  4313d0:	je     0x432126
  4313d6:	lea    rdx,[rax+0x1]
  4313da:	mov    QWORD PTR [rbx+0x100],rdx
  4313e1:	mov    BYTE PTR [rbx+rax*1],0x29
  4313e5:	mov    BYTE PTR [rbx+0x108],0x29
  4313ec:	jmp    0x42ec25
  4313f1:	mov    r8,QWORD PTR [r8+0x8]
  4313f5:	mov    rax,QWORD PTR [rbx+0x140]
  4313fc:	lea    rsi,[rsp+0x40]
  431401:	mov    edx,r12d
  431404:	mov    rcx,rbx
  431407:	mov    QWORD PTR [rbx+0x140],rsi
  43140e:	mov    QWORD PTR [rsp+0x48],rax
  431413:	mov    QWORD PTR [rsp+0x40],r8
  431418:	call   0x42eb10
  43141d:	cmp    QWORD PTR [rbx+0x168],0x0
  431425:	mov    rax,QWORD PTR [rsp+0x48]
  43142a:	mov    QWORD PTR [rbx+0x140],rax
  431431:	je     0x43143f
  431433:	mov    rax,QWORD PTR [rsp+0x30]
  431438:	mov    QWORD PTR [rbx+0x120],rax
  43143f:	cmp    BYTE PTR [rbx+0x108],0x3c
  431446:	je     0x4320d0
  43144c:	mov    rax,QWORD PTR [rbx+0x100]
  431453:	cmp    rax,0xff
  431459:	je     0x4320a6
  43145f:	lea    rdx,[rax+0x1]
  431463:	mov    rcx,rbx
  431466:	mov    QWORD PTR [rbx+0x100],rdx
  43146d:	mov    BYTE PTR [rbx+rax*1],0x3c
  431471:	mov    edx,r12d
  431474:	mov    BYTE PTR [rbx+0x108],0x3c
  43147b:	mov    rax,QWORD PTR [rbp+0x8]
  43147f:	mov    r8,QWORD PTR [rax+0x10]
  431483:	mov    rax,QWORD PTR [rbx+0x140]
  43148a:	mov    QWORD PTR [rbx+0x140],rsi
  431491:	mov    QWORD PTR [rsp+0x48],rax
  431496:	mov    QWORD PTR [rsp+0x40],r8
  43149b:	call   0x42eb10
  4314a0:	cmp    BYTE PTR [rbx+0x108],0x3e
  4314a7:	mov    rax,QWORD PTR [rsp+0x48]
  4314ac:	mov    QWORD PTR [rbx+0x140],rax
  4314b3:	je     0x4321a4
  4314b9:	mov    rax,QWORD PTR [rbx+0x100]
  4314c0:	cmp    rax,0xff
  4314c6:	je     0x43207c
  4314cc:	lea    rdx,[rax+0x1]
  4314d0:	mov    QWORD PTR [rbx+0x100],rdx
  4314d7:	mov    BYTE PTR [rbx+rax*1],0x3e
  4314db:	mov    BYTE PTR [rbx+0x108],0x3e
  4314e2:	jmp    0x42ec25
  4314e7:	mov    rax,QWORD PTR [rbx+0x100]
  4314ee:	cmp    rax,0xff
  4314f4:	je     0x432052
  4314fa:	lea    rdx,[rax+0x1]
  4314fe:	mov    rcx,rbx
  431501:	mov    QWORD PTR [rbx+0x100],rdx
  431508:	mov    BYTE PTR [rbx+rax*1],0x28
  43150c:	mov    edx,r12d
  43150f:	mov    rax,QWORD PTR [rbx+0x140]
  431516:	mov    BYTE PTR [rbx+0x108],0x28
  43151d:	mov    r8,QWORD PTR [r13+0x8]
  431521:	mov    QWORD PTR [rsp+0x48],rax
  431526:	lea    rax,[rsp+0x40]
  43152b:	mov    QWORD PTR [rsp+0x40],r8
  431530:	mov    QWORD PTR [rbx+0x140],rax
  431537:	call   0x42eb10
  43153c:	mov    rax,QWORD PTR [rsp+0x48]
  431541:	mov    QWORD PTR [rbx+0x140],rax
  431548:	mov    rax,QWORD PTR [rbx+0x100]
  43154f:	cmp    rax,0xff
  431555:	je     0x432028
  43155b:	lea    rdx,[rax+0x1]
  43155f:	mov    QWORD PTR [rbx+0x100],rdx
  431566:	mov    BYTE PTR [rbx+rax*1],0x29
  43156a:	mov    BYTE PTR [rbx+0x108],0x29
  431571:	jmp    0x42f2ee
  431576:	mov    BYTE PTR [rbx+rsi*1],0x0
  43157a:	mov    rdx,rsi
  43157d:	mov    r8,QWORD PTR [rbx+0x118]
  431584:	mov    rcx,rbx
  431587:	xor    esi,esi
  431589:	call   QWORD PTR [rbx+0x110]
  43158f:	mov    QWORD PTR [rbx+0x100],0x0
  43159a:	add    DWORD PTR [rbx+0x138],0x1
  4315a1:	jmp    0x42f4b0
  4315a6:	mov    r8,QWORD PTR [rbp+0x8]
  4315aa:	mov    edx,r12d
  4315ad:	mov    rcx,rbx
  4315b0:	call   0x432320
  4315b5:	jmp    0x42ec25
  4315ba:	mov    edx,DWORD PTR [rbx+0x134]
  4315c0:	jmp    0x4315db
  4315c2:	mov    rax,QWORD PTR [rax+0x10]
  4315c6:	sub    edx,0x1
  4315c9:	test   rax,rax
  4315cc:	je     0x42ec70
  4315d2:	cmp    DWORD PTR [rax],0x2f
  4315d5:	jne    0x42ec70
  4315db:	cmp    edx,0x0
  4315de:	jg     0x4315c2
  4315e0:	jne    0x42ec70
  4315e6:	mov    rax,QWORD PTR [rax+0x8]
  4315ea:	test   rax,rax
  4315ed:	jne    0x4306db
  4315f3:	jmp    0x42ec70
  4315f8:	nop    DWORD PTR [rax+rax*1+0x0]
  431600:	movsxd rbp,DWORD PTR [r8+0x10]
  431604:	mov    rsi,QWORD PTR [r8+0x8]
  431608:	add    rbp,rsi
  43160b:	cmp    rsi,rbp
  43160e:	jb     0x43164b
  431610:	jmp    0x42ec25
  431615:	mov    rax,QWORD PTR [rbx+0x100]
  43161c:	cmp    rax,0xff
  431622:	je     0x4316b3
  431628:	lea    rdx,[rax+0x1]
  43162c:	mov    QWORD PTR [rbx+0x100],rdx
  431633:	mov    BYTE PTR [rbx+rax*1],dil
  431637:	mov    BYTE PTR [rbx+0x108],dil
  43163e:	add    rsi,0x1
  431642:	cmp    rbp,rsi
  431645:	jbe    0x42ec25
  43164b:	mov    rax,rbp
  43164e:	movzx  edi,BYTE PTR [rsi]
  431651:	sub    rax,rsi
  431654:	cmp    rax,0x3
  431658:	jle    0x431615
  43165a:	cmp    dil,0x5f
  43165e:	jne    0x431615
  431660:	cmp    BYTE PTR [rsi+0x1],0x5f
  431664:	jne    0x431615
  431666:	cmp    BYTE PTR [rsi+0x2],0x55
  43166a:	jne    0x431615
  43166c:	lea    r12,[rsi+0x3]
  431670:	cmp    rbp,r12
  431673:	jbe    0x431615
  431675:	xor    edx,edx
  431677:	jmp    0x431695
  431679:	nop    DWORD PTR [rax+0x0]
  431680:	sub    eax,0x30
  431683:	shl    edx,0x4
  431686:	add    r12,0x1
  43168a:	add    edx,eax
  43168c:	cmp    r12,rbp
  43168f:	je     0x4321e0
  431695:	movsx  eax,BYTE PTR [r12]
  43169a:	lea    ecx,[rax-0x30]
  43169d:	cmp    cl,0x9
  4316a0:	jbe    0x431680
  4316a2:	lea    ecx,[rax-0x41]
  4316a5:	cmp    cl,0x5
  4316a8:	ja     0x431bd2
  4316ae:	sub    eax,0x37
  4316b1:	jmp    0x431683
  4316b3:	mov    edx,0xff
  4316b8:	mov    BYTE PTR [rbx+0xff],0x0
  4316bf:	mov    r8,QWORD PTR [rbx+0x118]
  4316c6:	mov    rcx,rbx
  4316c9:	call   QWORD PTR [rbx+0x110]
  4316cf:	add    DWORD PTR [rbx+0x138],0x1
  4316d6:	mov    edx,0x1
  4316db:	xor    eax,eax
  4316dd:	jmp    0x43162c
  4316e2:	mov    edx,0xff
  4316e7:	mov    BYTE PTR [rbx+0xff],0x0
  4316ee:	mov    r8,QWORD PTR [rbx+0x118]
  4316f5:	mov    rcx,rbx
  4316f8:	call   QWORD PTR [rbx+0x110]
  4316fe:	add    DWORD PTR [rbx+0x138],0x1
  431705:	mov    edx,0x1
  43170a:	xor    eax,eax
  43170c:	jmp    0x430a8a
  431711:	mov    DWORD PTR [rbx+0x130],0x1
  43171b:	jmp    0x42ec25
  431720:	mov    edx,0xff
  431725:	mov    BYTE PTR [rbx+0xff],0x0
  43172c:	mov    r8,QWORD PTR [rbx+0x118]
  431733:	mov    rcx,rbx
  431736:	call   QWORD PTR [rbx+0x110]
  43173c:	add    DWORD PTR [rbx+0x138],0x1
  431743:	mov    edx,0x1
  431748:	xor    eax,eax
  43174a:	jmp    0x430476
  43174f:	mov    edx,0xff
  431754:	mov    BYTE PTR [rbx+0xff],0x0
  43175b:	mov    r8,QWORD PTR [rbx+0x118]
  431762:	mov    rcx,rbx
  431765:	call   QWORD PTR [rbx+0x110]
  43176b:	add    DWORD PTR [rbx+0x138],0x1
  431772:	mov    edx,0x1
  431777:	xor    eax,eax
  431779:	jmp    0x430431
  43177e:	mov    edx,0xff
  431783:	mov    BYTE PTR [rbx+0xff],0x0
  43178a:	mov    r8,QWORD PTR [rbx+0x118]
  431791:	mov    rcx,rbx
  431794:	call   QWORD PTR [rbx+0x110]
  43179a:	add    DWORD PTR [rbx+0x138],0x1
  4317a1:	mov    edx,0x1
  4317a6:	xor    eax,eax
  4317a8:	jmp    0x430b63
  4317ad:	lea    rdx,[rip+0x263cd]        # 0x457b81
  4317b4:	mov    rcx,rbx
  4317b7:	lea    rsi,[rsp+0x40]
  4317bc:	call   0x42ea70
  4317c1:	mov    eax,DWORD PTR [r13+0x10]
  4317c5:	lea    rdx,[rip+0x263c3]        # 0x457b8f
  4317cc:	mov    rcx,rsi
  4317cf:	mov    r14,rsi
  4317d2:	lea    r8d,[rax+0x1]
  4317d6:	call   0x449400
  4317db:	mov    edx,DWORD PTR [r14]
  4317de:	add    r14,0x4
  4317e2:	lea    eax,[rdx-0x1010101]
  4317e8:	not    edx
  4317ea:	and    eax,edx
  4317ec:	and    eax,0x80808080
  4317f1:	je     0x4317db
  4317f3:	mov    edx,eax
  4317f5:	shr    edx,0x10
  4317f8:	test   eax,0x8080
  4317fd:	cmove  eax,edx
  431800:	lea    rdx,[r14+0x2]
  431804:	cmove  r14,rdx
  431808:	add    al,al
  43180a:	sbb    r14,0x3
  43180e:	sub    r14,rsi
  431811:	je     0x43187a
  431813:	mov    rax,QWORD PTR [rbx+0x100]
  43181a:	xor    edi,edi
  43181c:	jmp    0x431842
  43181e:	xchg   ax,ax
  431820:	mov    rdx,rax
  431823:	add    rax,0x1
  431827:	add    rdi,0x1
  43182b:	mov    QWORD PTR [rbx+0x100],rax
  431832:	mov    BYTE PTR [rbx+rdx*1],bpl
  431836:	cmp    rdi,r14
  431839:	mov    BYTE PTR [rbx+0x108],bpl
  431840:	je     0x43187a
  431842:	cmp    rax,0xff
  431848:	movzx  ebp,BYTE PTR [rsi+rdi*1]
  43184c:	jne    0x431820
  43184e:	mov    edx,0xff
  431853:	mov    BYTE PTR [rbx+0xff],0x0
  43185a:	mov    r8,QWORD PTR [rbx+0x118]
  431861:	mov    rcx,rbx
  431864:	call   QWORD PTR [rbx+0x110]
  43186a:	add    DWORD PTR [rbx+0x138],0x1
  431871:	mov    eax,0x1
  431876:	xor    edx,edx
  431878:	jmp    0x431827
  43187a:	lea    rdx,[rip+0x26311]        # 0x457b92
  431881:	mov    rcx,rbx
  431884:	call   0x42ea70
  431889:	mov    r13,QWORD PTR [r13+0x8]
  43188d:	jmp    0x430bfc
  431892:	mov    edx,0xff
  431897:	mov    BYTE PTR [rbx+0xff],0x0
  43189e:	mov    r8,QWORD PTR [rbx+0x118]
  4318a5:	mov    rcx,rbx
  4318a8:	call   QWORD PTR [rbx+0x110]
  4318ae:	add    DWORD PTR [rbx+0x138],0x1
  4318b5:	mov    edx,0x1
  4318ba:	xor    eax,eax
  4318bc:	jmp    0x42f585
  4318c1:	mov    edx,0xff
  4318c6:	mov    BYTE PTR [rbx+0xff],0x0
  4318cd:	mov    r8,QWORD PTR [rbx+0x118]
  4318d4:	mov    rcx,rbx
  4318d7:	call   QWORD PTR [rbx+0x110]
  4318dd:	add    DWORD PTR [rbx+0x138],0x1
  4318e4:	mov    edx,0x1
  4318e9:	xor    eax,eax
  4318eb:	jmp    0x42f54e
  4318f0:	mov    edx,0xff
  4318f5:	mov    BYTE PTR [rbx+0xff],0x0
  4318fc:	mov    r8,QWORD PTR [rbx+0x118]
  431903:	mov    rcx,rbx
  431906:	call   QWORD PTR [rbx+0x110]
  43190c:	add    DWORD PTR [rbx+0x138],0x1
  431913:	mov    edx,0x1
  431918:	xor    eax,eax
  43191a:	jmp    0x42fe48
  43191f:	mov    edx,0xff
  431924:	mov    BYTE PTR [rbx+0xff],0x0
  43192b:	mov    r8,QWORD PTR [rbx+0x118]
  431932:	mov    rcx,rbx
  431935:	call   QWORD PTR [rbx+0x110]
  43193b:	add    DWORD PTR [rbx+0x138],0x1
  431942:	mov    edx,0x1
  431947:	xor    eax,eax
  431949:	jmp    0x430bb4
  43194e:	mov    edx,0xff
  431953:	mov    BYTE PTR [rbx+0xff],0x0
  43195a:	mov    r8,QWORD PTR [rbx+0x118]
  431961:	mov    rcx,rbx
  431964:	call   QWORD PTR [rbx+0x110]
  43196a:	add    DWORD PTR [rbx+0x138],0x1
  431971:	mov    edx,0x1
  431976:	xor    eax,eax
  431978:	jmp    0x43074b
  43197d:	mov    edx,0xff
  431982:	mov    BYTE PTR [rbx+0xff],0x0
  431989:	mov    r8,QWORD PTR [rbx+0x118]
  431990:	mov    rcx,rbx
  431993:	call   QWORD PTR [rbx+0x110]
  431999:	add    DWORD PTR [rbx+0x138],0x1
  4319a0:	mov    edx,0x1
  4319a5:	xor    eax,eax
  4319a7:	jmp    0x43091d
  4319ac:	mov    edx,0xff
  4319b1:	mov    BYTE PTR [rbx+0xff],0x0
  4319b8:	mov    r8,QWORD PTR [rbx+0x118]
  4319bf:	mov    rcx,rbx
  4319c2:	call   QWORD PTR [rbx+0x110]
  4319c8:	add    DWORD PTR [rbx+0x138],0x1
  4319cf:	mov    edx,0x1
  4319d4:	xor    eax,eax
  4319d6:	jmp    0x42f288
  4319db:	mov    rax,QWORD PTR [rbx+0x128]
  4319e2:	mov    edx,r12d
  4319e5:	mov    rcx,rbx
  4319e8:	and    edx,0xffffff9f
  4319eb:	mov    QWORD PTR [rsp+0x48],rbp
  4319f0:	mov    DWORD PTR [rsp+0x50],0x0
  4319f8:	mov    QWORD PTR [rsp+0x40],rax
  4319fd:	lea    rax,[rsp+0x40]
  431a02:	mov    QWORD PTR [rbx+0x128],rax
  431a09:	mov    rax,QWORD PTR [rbx+0x120]
  431a10:	mov    r8,QWORD PTR [rbp+0x8]
  431a14:	mov    QWORD PTR [rsp+0x58],rax
  431a19:	call   0x432320
  431a1e:	mov    r15d,DWORD PTR [rsp+0x50]
  431a23:	mov    rax,QWORD PTR [rsp+0x40]
  431a28:	test   r15d,r15d
  431a2b:	mov    QWORD PTR [rbx+0x128],rax
  431a32:	jne    0x42ec25
  431a38:	mov    edx,0x20
  431a3d:	mov    rcx,rbx
  431a40:	call   0x42e4f0
  431a45:	jmp    0x42fa3f
  431a4a:	mov    edx,0xff
  431a4f:	mov    BYTE PTR [rbx+0xff],0x0
  431a56:	mov    r8,QWORD PTR [rbx+0x118]
  431a5d:	mov    rcx,rbx
  431a60:	call   QWORD PTR [rbx+0x110]
  431a66:	add    DWORD PTR [rbx+0x138],0x1
  431a6d:	mov    edx,0x1
  431a72:	xor    eax,eax
  431a74:	jmp    0x42ebf0
  431a79:	mov    edx,0xff
  431a7e:	mov    BYTE PTR [rbx+0xff],0x0
  431a85:	mov    r8,QWORD PTR [rbx+0x118]
  431a8c:	mov    rcx,rbx
  431a8f:	call   QWORD PTR [rbx+0x110]
  431a95:	add    DWORD PTR [rbx+0x138],0x1
  431a9c:	mov    edx,0x1
  431aa1:	xor    eax,eax
  431aa3:	jmp    0x42ebb8
  431aa8:	mov    r8,r14
  431aab:	mov    edx,r12d
  431aae:	mov    rcx,rbx
  431ab1:	call   0x432320
  431ab6:	jmp    0x42ec25
  431abb:	mov    r8,QWORD PTR [r8+0x10]
  431abf:	mov    r9d,DWORD PTR [r8]
  431ac2:	test   r9d,r9d
  431ac5:	jne    0x42eba1
  431acb:	cmp    ecx,0x3d
  431ace:	je     0x4322c1
  431ad4:	mov    edx,r12d
  431ad7:	mov    rcx,rbx
  431ada:	sub    esi,0x2
  431add:	call   0x432320
  431ae2:	cmp    esi,0x4
  431ae5:	ja     0x42ec25
  431aeb:	lea    rax,[rip+0x26426]        # 0x457f18
  431af2:	movsxd rdx,DWORD PTR [rax+rsi*4]
  431af6:	add    rax,rdx
  431af9:	jmp    rax
  431afb:	lea    rdx,[rip+0x26243]        # 0x457d45
  431b02:	mov    rcx,rbx
  431b05:	call   0x42ea70
  431b0a:	jmp    0x42ec25
  431b0f:	lea    rdx,[rip+0x2622c]        # 0x457d42
  431b16:	mov    rcx,rbx
  431b19:	call   0x42ea70
  431b1e:	jmp    0x42ec25
  431b23:	mov    edx,0x6c
  431b28:	mov    rcx,rbx
  431b2b:	call   0x42e4f0
  431b30:	jmp    0x42ec25
  431b35:	mov    edx,0x75
  431b3a:	mov    rcx,rbx
  431b3d:	call   0x42e4f0
  431b42:	jmp    0x42ec25
  431b47:	lea    rdx,[rip+0x261fa]        # 0x457d48
  431b4e:	mov    rcx,rbx
  431b51:	call   0x42ea70
  431b56:	jmp    0x42ec25
  431b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  431b60:	mov    r8,QWORD PTR [rax+0x8]
  431b64:	mov    rax,QWORD PTR [rbx+0x128]
  431b6b:	mov    QWORD PTR [rsp+0x48],rbp
  431b70:	mov    DWORD PTR [rsp+0x50],0x0
  431b78:	mov    QWORD PTR [rsp+0x40],rax
  431b7d:	lea    rax,[rsp+0x40]
  431b82:	test   r8,r8
  431b85:	mov    QWORD PTR [rbx+0x128],rax
  431b8c:	mov    rax,QWORD PTR [rbx+0x120]
  431b93:	mov    QWORD PTR [rsp+0x58],rax
  431b98:	jne    0x430340
  431b9e:	jmp    0x43033c
  431ba3:	mov    edx,0xff
  431ba8:	mov    BYTE PTR [rbx+0xff],0x0
  431baf:	mov    r8,QWORD PTR [rbx+0x118]
  431bb6:	mov    rcx,rbx
  431bb9:	call   QWORD PTR [rbx+0x110]
  431bbf:	add    DWORD PTR [rbx+0x138],0x1
  431bc6:	mov    eax,0x1
  431bcb:	xor    edx,edx
  431bcd:	jmp    0x42f5e0
  431bd2:	lea    ecx,[rax-0x61]
  431bd5:	cmp    cl,0x5
  431bd8:	ja     0x432291
  431bde:	sub    eax,0x57
  431be1:	jmp    0x431683
  431be6:	mov    r8,QWORD PTR [rbp+0x10]
  431bea:	mov    edx,r12d
  431bed:	mov    rcx,rbx
  431bf0:	call   0x432320
  431bf5:	cmp    DWORD PTR [rsp+0x50],0x0
  431bfa:	mov    QWORD PTR [rbx+0x128],r13
  431c01:	jne    0x42ec25
  431c07:	mov    r9,r13
  431c0a:	jmp    0x42fa10
  431c0f:	mov    r9,r10
  431c12:	mov    r8,QWORD PTR [rbx+0x140]
  431c19:	test   r8,r8
  431c1c:	je     0x42ec39
  431c22:	cmp    QWORD PTR [r8],rax
  431c25:	je     0x431235
  431c2b:	mov    rdx,r8
  431c2e:	mov    rdx,QWORD PTR [rdx+0x8]
  431c32:	test   rdx,rdx
  431c35:	je     0x42ec39
  431c3b:	mov    rcx,QWORD PTR [rdx]
  431c3e:	cmp    rcx,rax
  431c41:	je     0x431235
  431c47:	cmp    rbp,rcx
  431c4a:	jne    0x431c2e
  431c4c:	cmp    r8,rdx
  431c4f:	je     0x431c2e
  431c51:	jmp    0x431235
  431c56:	mov    edx,0x20
  431c5b:	mov    rcx,rbx
  431c5e:	call   0x42e4f0
  431c63:	jmp    0x43045f
  431c68:	mov    edx,0x20
  431c6d:	mov    rcx,rbx
  431c70:	call   0x42e4f0
  431c75:	jmp    0x43041a
  431c7a:	mov    rcx,rbx
  431c7d:	mov    edx,0x5b
  431c82:	call   0x42e4f0
  431c87:	mov    r8,QWORD PTR [rbp+0x10]
  431c8b:	mov    edx,r12d
  431c8e:	mov    rcx,rbx
  431c91:	call   0x432320
  431c96:	mov    edx,0x5d
  431c9b:	mov    rcx,rbx
  431c9e:	call   0x42e4f0
  431ca3:	jmp    0x42ec25
  431ca8:	mov    edx,0x2d
  431cad:	mov    rcx,rbx
  431cb0:	call   0x42e4f0
  431cb5:	jmp    0x42ec0c
  431cba:	movzx  r9d,BYTE PTR [rdx]
  431cbe:	lea    r10d,[r9-0x72]
  431cc2:	cmp    r10b,0x1
  431cc6:	jbe    0x431cd6
  431cc8:	sub    r9d,0x63
  431ccc:	cmp    r9b,0x1
  431cd0:	ja     0x42f751
  431cd6:	mov    edx,r12d
  431cd9:	mov    rcx,rbx
  431cdc:	call   0x433470
  431ce1:	mov    rcx,rbx
  431ce4:	mov    edx,0x3c
  431ce9:	call   0x42e4f0
  431cee:	mov    rax,QWORD PTR [rbp+0x10]
  431cf2:	mov    edx,r12d
  431cf5:	mov    rcx,rbx
  431cf8:	mov    r8,QWORD PTR [rax+0x8]
  431cfc:	call   0x432320
  431d01:	lea    rdx,[rip+0x260d8]        # 0x457de0
  431d08:	mov    rcx,rbx
  431d0b:	call   0x42ea70
  431d10:	mov    rax,QWORD PTR [rbp+0x10]
  431d14:	mov    edx,r12d
  431d17:	mov    rcx,rbx
  431d1a:	mov    r8,QWORD PTR [rax+0x10]
  431d1e:	call   0x432320
  431d23:	mov    edx,0x29
  431d28:	mov    rcx,rbx
  431d2b:	call   0x42e4f0
  431d30:	jmp    0x42ec25
  431d35:	mov    edx,0xff
  431d3a:	mov    BYTE PTR [rbx+0xff],0x0
  431d41:	mov    r8,QWORD PTR [rbx+0x118]
  431d48:	mov    rcx,rbx
  431d4b:	call   QWORD PTR [rbx+0x110]
  431d51:	add    DWORD PTR [rbx+0x138],0x1
  431d58:	mov    edx,0x1
  431d5d:	xor    eax,eax
  431d5f:	jmp    0x430fda
  431d64:	cmp    edx,0x4
  431d67:	je     0x431f3c
  431d6d:	cmp    edx,0x2
  431d70:	jne    0x431f52
  431d76:	mov    rcx,QWORD PTR [rdi+0x10]
  431d7a:	cmp    DWORD PTR [rcx],0x46
  431d7d:	je     0x43220c
  431d83:	mov    eax,DWORD PTR [rcx]
  431d85:	sub    eax,0x1c
  431d88:	cmp    eax,0x4
  431d8b:	jbe    0x431e00
  431d8d:	jmp    0x431f52
  431d92:	lea    eax,[r13-0x1]
  431d96:	mov    edx,r13d
  431d99:	add    r13d,0x1
  431d9d:	shl    rdx,0x5
  431da1:	shl    rax,0x5
  431da5:	mov    r8,QWORD PTR [rsp+rax*1+0x40]
  431daa:	mov    QWORD PTR [rsp+rdx*1+0x40],r8
  431daf:	mov    r8,QWORD PTR [rsp+rax*1+0x48]
  431db4:	mov    QWORD PTR [rsp+rdx*1+0x48],r8
  431db9:	mov    r8,QWORD PTR [rsp+rax*1+0x50]
  431dbe:	mov    QWORD PTR [rsp+rdx*1+0x50],r8
  431dc3:	mov    r8,QWORD PTR [rsp+rax*1+0x58]
  431dc8:	mov    QWORD PTR [rsp+rdx*1+0x58],r8
  431dcd:	lea    r8,[rsi+rax*1]
  431dd1:	mov    QWORD PTR [rsp+rdx*1+0x40],r8
  431dd6:	add    rdx,rsi
  431dd9:	mov    QWORD PTR [rsp+rax*1+0x48],rcx
  431dde:	mov    DWORD PTR [rsp+rax*1+0x50],0x0
  431de6:	mov    QWORD PTR [rsp+rax*1+0x58],r9
  431deb:	mov    QWORD PTR [rbx+0x128],rdx
  431df2:	mov    rcx,QWORD PTR [rcx+0x8]
  431df6:	mov    eax,DWORD PTR [rcx]
  431df8:	sub    eax,0x1c
  431dfb:	cmp    eax,0x4
  431dfe:	ja     0x431e0b
  431e00:	cmp    r13d,0x4
  431e04:	jne    0x431d92
  431e06:	jmp    0x43050e
  431e0b:	mov    r8,QWORD PTR [rbp+0x10]
  431e0f:	mov    edx,r12d
  431e12:	mov    rcx,rbx
  431e15:	call   0x432320
  431e1a:	cmp    DWORD PTR [rdi],0x4
  431e1d:	je     0x431f6a
  431e23:	test   r13d,r13d
  431e26:	je     0x431e5c
  431e28:	lea    esi,[r13-0x1]
  431e2c:	mov    r13,rsi
  431e2f:	shl    rsi,0x5
  431e33:	mov    r8d,DWORD PTR [rsp+rsi*1+0x50]
  431e38:	test   r8d,r8d
  431e3b:	jne    0x431e23
  431e3d:	mov    rcx,rbx
  431e40:	mov    edx,0x20
  431e45:	call   0x42e4f0
  431e4a:	mov    r8,QWORD PTR [rsp+rsi*1+0x48]
  431e4f:	mov    edx,r12d
  431e52:	mov    rcx,rbx
  431e55:	call   0x432360
  431e5a:	jmp    0x431e23
  431e5c:	mov    QWORD PTR [rbx+0x128],r14
  431e63:	jmp    0x42ec25
  431e68:	mov    edx,0xff
  431e6d:	mov    BYTE PTR [rbx+0xff],0x0
  431e74:	mov    r8,QWORD PTR [rbx+0x118]
  431e7b:	mov    rcx,rbx
  431e7e:	call   QWORD PTR [rbx+0x110]
  431e84:	add    DWORD PTR [rbx+0x138],0x1
  431e8b:	mov    edx,0x1
  431e90:	xor    eax,eax
  431e92:	jmp    0x430bdb
  431e97:	mov    rsi,QWORD PTR [r8+0x8]
  431e9b:	lea    rdi,[rip+0x25cf4]        # 0x457b96
  431ea2:	mov    ecx,0x6
  431ea7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  431ea9:	jne    0x430402
  431eaf:	mov    r8,QWORD PTR [rbp+0x10]
  431eb3:	mov    edx,r12d
  431eb6:	mov    rcx,rbx
  431eb9:	call   0x432320
  431ebe:	lea    rdx,[rip+0x25cd8]        # 0x457b9d
  431ec5:	mov    rcx,rbx
  431ec8:	call   0x42ea70
  431ecd:	jmp    0x430488
  431ed2:	cmp    DWORD PTR [rcx+0x10],0x1
  431ed6:	jne    0x42f75b
  431edc:	mov    rcx,QWORD PTR [rcx+0x8]
  431ee0:	cmp    BYTE PTR [rcx],0x3e
  431ee3:	jne    0x42f75b
  431ee9:	mov    edx,0x28
  431eee:	mov    rcx,rbx
  431ef1:	call   0x42e4f0
  431ef6:	mov    rax,QWORD PTR [rbp+0x8]
  431efa:	mov    rax,QWORD PTR [rax+0x8]
  431efe:	mov    rsi,QWORD PTR [rax]
  431f01:	mov    rax,QWORD PTR [rbp+0x10]
  431f05:	jmp    0x42f75e
  431f0a:	mov    rcx,rbx
  431f0d:	mov    edx,0x5b
  431f12:	call   0x42e4f0
  431f17:	mov    rax,QWORD PTR [rbp+0x10]
  431f1b:	mov    edx,r12d
  431f1e:	mov    rcx,rbx
  431f21:	mov    r8,QWORD PTR [rax+0x10]
  431f25:	call   0x432320
  431f2a:	mov    edx,0x5d
  431f2f:	mov    rcx,rbx
  431f32:	call   0x42e4f0
  431f37:	jmp    0x42f7da
  431f3c:	lea    rax,[rsp+0x30]
  431f41:	mov    QWORD PTR [rsp+0x30],r9
  431f46:	mov    QWORD PTR [rsp+0x38],rdi
  431f4b:	mov    QWORD PTR [rbx+0x120],rax
  431f52:	mov    r8,QWORD PTR [rbp+0x10]
  431f56:	mov    edx,r12d
  431f59:	mov    rcx,rbx
  431f5c:	call   0x432320
  431f61:	cmp    DWORD PTR [rdi],0x4
  431f64:	jne    0x431e28
  431f6a:	mov    rax,QWORD PTR [rsp+0x30]
  431f6f:	mov    QWORD PTR [rbx+0x120],rax
  431f76:	jmp    0x431e23
  431f7b:	mov    edx,r12d
  431f7e:	mov    rcx,rbx
  431f81:	call   0x433470
  431f86:	jmp    0x42f7c7
  431f8b:	mov    rax,QWORD PTR [r8+0x10]
  431f8f:	cmp    DWORD PTR [rax],0x29
  431f92:	je     0x431f9e
  431f94:	mov    DWORD PTR [rbx+0x130],0x1
  431f9e:	mov    r8,QWORD PTR [r8+0x8]
  431fa2:	mov    edx,r12d
  431fa5:	mov    rcx,rbx
  431fa8:	call   0x433540
  431fad:	jmp    0x42f792
  431fb2:	mov    r8,r13
  431fb5:	mov    edx,r12d
  431fb8:	mov    rcx,rbx
  431fbb:	call   0x433540
  431fc0:	mov    r8,r15
  431fc3:	mov    edx,r12d
  431fc6:	mov    rcx,rbx
  431fc9:	call   0x433470
  431fce:	mov    r8,r14
  431fd1:	mov    edx,r12d
  431fd4:	mov    rcx,rbx
  431fd7:	call   0x433540
  431fdc:	lea    rdx,[rip+0x25d56]        # 0x457d39
  431fe3:	mov    rcx,rbx
  431fe6:	call   0x42ea70
  431feb:	mov    r8,rbp
  431fee:	mov    edx,r12d
  431ff1:	mov    rcx,rbx
  431ff4:	call   0x433540
  431ff9:	jmp    0x42ec25
  431ffe:	mov    BYTE PTR [rbx+0xff],0x0
  432005:	mov    r8,QWORD PTR [rbx+0x118]
  43200c:	mov    edx,0xff
  432011:	mov    rcx,rbx
  432014:	call   QWORD PTR [rbx+0x110]
  43201a:	add    DWORD PTR [rbx+0x138],0x1
  432021:	xor    eax,eax
  432023:	jmp    0x43113b
  432028:	mov    BYTE PTR [rbx+0xff],0x0
  43202f:	mov    r8,QWORD PTR [rbx+0x118]
  432036:	mov    edx,0xff
  43203b:	mov    rcx,rbx
  43203e:	call   QWORD PTR [rbx+0x110]
  432044:	add    DWORD PTR [rbx+0x138],0x1
  43204b:	xor    eax,eax
  43204d:	jmp    0x43155b
  432052:	mov    BYTE PTR [rbx+0xff],0x0
  432059:	mov    r8,QWORD PTR [rbx+0x118]
  432060:	mov    edx,0xff
  432065:	mov    rcx,rbx
  432068:	call   QWORD PTR [rbx+0x110]
  43206e:	add    DWORD PTR [rbx+0x138],0x1
  432075:	xor    eax,eax
  432077:	jmp    0x4314fa
  43207c:	mov    BYTE PTR [rbx+0xff],0x0
  432083:	mov    r8,QWORD PTR [rbx+0x118]
  43208a:	mov    edx,0xff
  43208f:	mov    rcx,rbx
  432092:	call   QWORD PTR [rbx+0x110]
  432098:	add    DWORD PTR [rbx+0x138],0x1
  43209f:	xor    eax,eax
  4320a1:	jmp    0x4314cc
  4320a6:	mov    BYTE PTR [rbx+0xff],0x0
  4320ad:	mov    r8,QWORD PTR [rbx+0x118]
  4320b4:	mov    edx,0xff
  4320b9:	mov    rcx,rbx
  4320bc:	call   QWORD PTR [rbx+0x110]
  4320c2:	add    DWORD PTR [rbx+0x138],0x1
  4320c9:	xor    eax,eax
  4320cb:	jmp    0x43145f
  4320d0:	cmp    QWORD PTR [rbx+0x100],0xff
  4320db:	je     0x4322d7
  4320e1:	mov    rax,QWORD PTR [rbx+0x100]
  4320e8:	lea    rdx,[rax+0x1]
  4320ec:	mov    QWORD PTR [rbx+0x100],rdx
  4320f3:	mov    BYTE PTR [rbx+rax*1],0x20
  4320f7:	mov    BYTE PTR [rbx+0x108],0x20
  4320fe:	jmp    0x43144c
  432103:	mov    r8,QWORD PTR [rbp+0x8]
  432107:	mov    edx,r12d
  43210a:	mov    rcx,rbx
  43210d:	call   0x433540
  432112:	lea    rdx,[rip+0x25c58]        # 0x457d71
  432119:	mov    rcx,rbx
  43211c:	call   0x42ea70
  432121:	jmp    0x42ec25
  432126:	mov    BYTE PTR [rbx+0xff],0x0
  43212d:	mov    r8,QWORD PTR [rbx+0x118]
  432134:	mov    edx,0xff
  432139:	mov    rcx,rbx
  43213c:	call   QWORD PTR [rbx+0x110]
  432142:	add    DWORD PTR [rbx+0x138],0x1
  432149:	xor    eax,eax
  43214b:	jmp    0x4313d6
  432150:	mov    BYTE PTR [rbx+0xff],0x0
  432157:	mov    r8,QWORD PTR [rbx+0x118]
  43215e:	mov    edx,0xff
  432163:	mov    rcx,rbx
  432166:	call   QWORD PTR [rbx+0x110]
  43216c:	add    DWORD PTR [rbx+0x138],0x1
  432173:	xor    eax,eax
  432175:	jmp    0x43139f
  43217a:	mov    rax,QWORD PTR [r14+0x8]
  43217e:	cmp    DWORD PTR [rax],0x1
  432181:	jne    0x431350
  432187:	mov    rdx,QWORD PTR [r14+0x10]
  43218b:	cmp    DWORD PTR [rdx],0x29
  43218e:	cmove  r14,rax
  432192:	jmp    0x431350
  432197:	test   edi,edi
  432199:	jne    0x42ec65
  43219f:	jmp    0x42ec70
  4321a4:	cmp    QWORD PTR [rbx+0x100],0xff
  4321af:	je     0x43225e
  4321b5:	mov    rax,QWORD PTR [rbx+0x100]
  4321bc:	lea    rdx,[rax+0x1]
  4321c0:	mov    QWORD PTR [rbx+0x100],rdx
  4321c7:	mov    BYTE PTR [rbx+rax*1],0x20
  4321cb:	mov    BYTE PTR [rbx+0x108],0x20
  4321d2:	jmp    0x4314b9
  4321d7:	xor    edx,edx
  4321d9:	xor    edi,edi
  4321db:	jmp    0x430312
  4321e0:	mov    edi,0x5f
  4321e5:	jmp    0x431615
  4321ea:	mov    r8,QWORD PTR [r14+0x8]
  4321ee:	mov    edx,r12d
  4321f1:	mov    rcx,rbx
  4321f4:	call   0x433540
  4321f9:	mov    r8,r13
  4321fc:	mov    edx,r12d
  4321ff:	mov    rcx,rbx
  432202:	call   0x433470
  432207:	jmp    0x42ec25
  43220c:	mov    rcx,QWORD PTR [rcx+0x8]
  432210:	test   rcx,rcx
  432213:	je     0x43050e
  432219:	jmp    0x431d83
  43221e:	mov    DWORD PTR [rbx+0x160],edi
  432224:	mov    DWORD PTR [rbx+0x130],0x1
  43222e:	jmp    0x42ec25
  432233:	mov    rax,QWORD PTR [rax+0x8]
  432237:	movzx  eax,BYTE PTR [rax]
  43223a:	cmp    al,0x30
  43223c:	je     0x43230a
  432242:	cmp    al,0x31
  432244:	jne    0x42eba1
  43224a:	lea    rdx,[rip+0x25b01]        # 0x457d52
  432251:	mov    rcx,rbx
  432254:	call   0x42ea70
  432259:	jmp    0x42ec25
  43225e:	mov    BYTE PTR [rbx+0xff],0x0
  432265:	mov    r8,QWORD PTR [rbx+0x118]
  43226c:	mov    edx,0xff
  432271:	mov    rcx,rbx
  432274:	call   QWORD PTR [rbx+0x110]
  43227a:	mov    QWORD PTR [rbx+0x100],0x0
  432285:	add    DWORD PTR [rbx+0x138],0x1
  43228c:	jmp    0x4321b5
  432291:	cmp    rbp,r12
  432294:	jbe    0x4321e0
  43229a:	cmp    al,0x5f
  43229c:	jne    0x4321e0
  4322a2:	cmp    edx,0xff
  4322a8:	ja     0x4321e0
  4322ae:	movsx  edx,dl
  4322b1:	mov    rcx,rbx
  4322b4:	mov    rsi,r12
  4322b7:	call   0x42e4f0
  4322bc:	jmp    0x43163e
  4322c1:	mov    edx,0x2d
  4322c6:	mov    rcx,rbx
  4322c9:	call   0x42e4f0
  4322ce:	mov    r8,QWORD PTR [rbp+0x10]
  4322d2:	jmp    0x431ad4
  4322d7:	mov    BYTE PTR [rbx+0xff],0x0
  4322de:	mov    r8,QWORD PTR [rbx+0x118]
  4322e5:	mov    edx,0xff
  4322ea:	mov    rcx,rbx
  4322ed:	call   QWORD PTR [rbx+0x110]
  4322f3:	mov    QWORD PTR [rbx+0x100],0x0
  4322fe:	add    DWORD PTR [rbx+0x138],0x1
  432305:	jmp    0x4320e1
  43230a:	lea    rdx,[rip+0x25a3b]        # 0x457d4c
  432311:	mov    rcx,rbx
  432314:	call   0x42ea70
  432319:	jmp    0x42ec25
  43231e:	xchg   ax,ax
  432320:	push   rbx
  432321:	sub    rsp,0x30
  432325:	mov    rax,QWORD PTR [rcx+0x140]
  43232c:	mov    rbx,rcx
  43232f:	mov    QWORD PTR [rsp+0x20],r8
  432334:	mov    QWORD PTR [rsp+0x28],rax
  432339:	lea    rax,[rsp+0x20]
  43233e:	mov    QWORD PTR [rcx+0x140],rax
  432345:	call   0x42eb10
  43234a:	mov    rax,QWORD PTR [rsp+0x28]
  43234f:	mov    QWORD PTR [rbx+0x140],rax
  432356:	add    rsp,0x30
  43235a:	pop    rbx
  43235b:	ret    
  43235c:	nop    DWORD PTR [rax+0x0]
  432360:	push   r13
  432362:	push   r12
  432364:	push   rbp
  432365:	push   rdi
  432366:	push   rsi
  432367:	push   rbx
  432368:	sub    rsp,0x38
  43236c:	mov    eax,DWORD PTR [r8]
  43236f:	mov    rbx,rcx
  432372:	mov    r12d,edx
  432375:	mov    rdi,r8
  432378:	sub    eax,0x3
  43237b:	cmp    eax,0x2a
  43237e:	ja     0x432940
  432384:	lea    rcx,[rip+0x25be5]        # 0x457f70
  43238b:	movsxd rax,DWORD PTR [rcx+rax*4]
  43238f:	add    rcx,rax
  432392:	jmp    rcx
  432394:	mov    rax,QWORD PTR [rbx+0x100]
  43239b:	lea    rsi,[rip+0x25bc0]        # 0x457f62
  4323a2:	lea    r13,[rip+0x25bc3]        # 0x457f6c
  4323a9:	jmp    0x4323d6
  4323ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4323b0:	mov    rdx,rax
  4323b3:	add    rax,0x1
  4323b7:	add    rsi,0x1
  4323bb:	mov    QWORD PTR [rbx+0x100],rax
  4323c2:	mov    BYTE PTR [rbx+rdx*1],bpl
  4323c6:	cmp    rsi,r13
  4323c9:	mov    BYTE PTR [rbx+0x108],bpl
  4323d0:	je     0x432965
  4323d6:	cmp    rax,0xff
  4323dc:	movzx  ebp,BYTE PTR [rsi]
  4323df:	jne    0x4323b0
  4323e1:	mov    edx,0xff
  4323e6:	mov    BYTE PTR [rbx+0xff],0x0
  4323ed:	mov    r8,QWORD PTR [rbx+0x118]
  4323f4:	mov    rcx,rbx
  4323f7:	call   QWORD PTR [rbx+0x110]
  4323fd:	add    DWORD PTR [rbx+0x138],0x1
  432404:	mov    eax,0x1
  432409:	xor    edx,edx
  43240b:	jmp    0x4323b7
  43240d:	nop    DWORD PTR [rax]
  432410:	mov    r8,QWORD PTR [r8+0x8]
  432414:	mov    rax,QWORD PTR [rbx+0x140]
  43241b:	mov    QWORD PTR [rsp+0x20],r8
  432420:	mov    QWORD PTR [rsp+0x28],rax
  432425:	lea    rax,[rsp+0x20]
  43242a:	mov    QWORD PTR [rbx+0x140],rax
  432431:	mov    edx,r12d
  432434:	mov    rcx,rbx
  432437:	call   0x42eb10
  43243c:	mov    rax,QWORD PTR [rsp+0x28]
  432441:	mov    QWORD PTR [rbx+0x140],rax
  432448:	add    rsp,0x38
  43244c:	pop    rbx
  43244d:	pop    rsi
  43244e:	pop    rdi
  43244f:	pop    rbp
  432450:	pop    r12
  432452:	pop    r13
  432454:	ret    
  432455:	mov    rax,QWORD PTR [rbx+0x100]
  43245c:	lea    rsi,[rip+0x25ac9]        # 0x457f2c
  432463:	lea    rbp,[rip+0x25acb]        # 0x457f35
  43246a:	jmp    0x432492
  43246c:	nop    DWORD PTR [rax+0x0]
  432470:	mov    rdx,rax
  432473:	add    rax,0x1
  432477:	add    rsi,0x1
  43247b:	mov    QWORD PTR [rbx+0x100],rax
  432482:	mov    BYTE PTR [rbx+rdx*1],dil
  432486:	cmp    rsi,rbp
  432489:	mov    BYTE PTR [rbx+0x108],dil
  432490:	je     0x432448
  432492:	cmp    rax,0xff
  432498:	movzx  edi,BYTE PTR [rsi]
  43249b:	jne    0x432470
  43249d:	mov    edx,0xff
  4324a2:	mov    BYTE PTR [rbx+0xff],0x0
  4324a9:	mov    r8,QWORD PTR [rbx+0x118]
  4324b0:	mov    rcx,rbx
  4324b3:	call   QWORD PTR [rbx+0x110]
  4324b9:	add    DWORD PTR [rbx+0x138],0x1
  4324c0:	mov    eax,0x1
  4324c5:	xor    edx,edx
  4324c7:	jmp    0x432477
  4324c9:	nop    DWORD PTR [rax+0x0]
  4324d0:	mov    rax,QWORD PTR [rbx+0x100]
  4324d7:	lea    rsi,[rip+0x25a58]        # 0x457f36
  4324de:	lea    rbp,[rip+0x25a5a]        # 0x457f3f
  4324e5:	jmp    0x432516
  4324e7:	nop    WORD PTR [rax+rax*1+0x0]
  4324f0:	mov    rdx,rax
  4324f3:	add    rax,0x1
  4324f7:	add    rsi,0x1
  4324fb:	mov    QWORD PTR [rbx+0x100],rax
  432502:	mov    BYTE PTR [rbx+rdx*1],dil
  432506:	cmp    rsi,rbp
  432509:	mov    BYTE PTR [rbx+0x108],dil
  432510:	je     0x432448
  432516:	cmp    rax,0xff
  43251c:	movzx  edi,BYTE PTR [rsi]
  43251f:	jne    0x4324f0
  432521:	mov    edx,0xff
  432526:	mov    BYTE PTR [rbx+0xff],0x0
  43252d:	mov    r8,QWORD PTR [rbx+0x118]
  432534:	mov    rcx,rbx
  432537:	call   QWORD PTR [rbx+0x110]
  43253d:	add    DWORD PTR [rbx+0x138],0x1
  432544:	mov    eax,0x1
  432549:	xor    edx,edx
  43254b:	jmp    0x4324f7
  43254d:	nop    DWORD PTR [rax]
  432550:	mov    rax,QWORD PTR [rbx+0x100]
  432557:	lea    rsi,[rip+0x259e2]        # 0x457f40
  43255e:	lea    rbp,[rip+0x259e1]        # 0x457f46
  432565:	jmp    0x432596
  432567:	nop    WORD PTR [rax+rax*1+0x0]
  432570:	mov    rdx,rax
  432573:	add    rax,0x1
  432577:	add    rsi,0x1
  43257b:	mov    QWORD PTR [rbx+0x100],rax
  432582:	mov    BYTE PTR [rbx+rdx*1],dil
  432586:	cmp    rsi,rbp
  432589:	mov    BYTE PTR [rbx+0x108],dil
  432590:	je     0x432448
  432596:	cmp    rax,0xff
  43259c:	movzx  edi,BYTE PTR [rsi]
  43259f:	jne    0x432570
  4325a1:	mov    edx,0xff
  4325a6:	mov    BYTE PTR [rbx+0xff],0x0
  4325ad:	mov    r8,QWORD PTR [rbx+0x118]
  4325b4:	mov    rcx,rbx
  4325b7:	call   QWORD PTR [rbx+0x110]
  4325bd:	add    DWORD PTR [rbx+0x138],0x1
  4325c4:	mov    eax,0x1
  4325c9:	xor    edx,edx
  4325cb:	jmp    0x432577
  4325cd:	nop    DWORD PTR [rax]
  4325d0:	mov    rdx,QWORD PTR [rbx+0x100]
  4325d7:	cmp    rdx,0xff
  4325de:	je     0x432a2e
  4325e4:	lea    rax,[rdx+0x1]
  4325e8:	mov    QWORD PTR [rbx+0x100],rax
  4325ef:	mov    BYTE PTR [rbx+rdx*1],0x20
  4325f3:	mov    BYTE PTR [rbx+0x108],0x20
  4325fa:	cmp    rax,0xff
  432600:	je     0x4329d0
  432606:	lea    rdx,[rax+0x1]
  43260a:	mov    QWORD PTR [rbx+0x100],rdx
  432611:	mov    BYTE PTR [rbx+rax*1],0x26
  432615:	mov    BYTE PTR [rbx+0x108],0x26
  43261c:	add    rsp,0x38
  432620:	pop    rbx
  432621:	pop    rsi
  432622:	pop    rdi
  432623:	pop    rbp
  432624:	pop    r12
  432626:	pop    r13
  432628:	ret    
  432629:	nop    DWORD PTR [rax+0x0]
  432630:	mov    rdx,QWORD PTR [rbx+0x100]
  432637:	cmp    rdx,0xff
  43263e:	je     0x432a8c
  432644:	lea    rax,[rdx+0x1]
  432648:	mov    QWORD PTR [rbx+0x100],rax
  43264f:	mov    BYTE PTR [rbx+rdx*1],0x20
  432653:	mov    BYTE PTR [rbx+0x108],0x20
  43265a:	lea    rsi,[rip+0x258e6]        # 0x457f47
  432661:	lea    rbp,[rip+0x258e1]        # 0x457f49
  432668:	jmp    0x432696
  43266a:	nop    WORD PTR [rax+rax*1+0x0]
  432670:	mov    rdx,rax
  432673:	add    rax,0x1
  432677:	add    rsi,0x1
  43267b:	mov    QWORD PTR [rbx+0x100],rax
  432682:	mov    BYTE PTR [rbx+rdx*1],dil
  432686:	cmp    rsi,rbp
  432689:	mov    BYTE PTR [rbx+0x108],dil
  432690:	je     0x432448
  432696:	cmp    rax,0xff
  43269c:	movzx  edi,BYTE PTR [rsi]
  43269f:	jne    0x432670
  4326a1:	mov    edx,0xff
  4326a6:	mov    BYTE PTR [rbx+0xff],0x0
  4326ad:	mov    r8,QWORD PTR [rbx+0x118]
  4326b4:	mov    rcx,rbx
  4326b7:	call   QWORD PTR [rbx+0x110]
  4326bd:	add    DWORD PTR [rbx+0x138],0x1
  4326c4:	mov    eax,0x1
  4326c9:	xor    edx,edx
  4326cb:	jmp    0x432677
  4326cd:	nop    DWORD PTR [rax]
  4326d0:	mov    rax,QWORD PTR [rbx+0x100]
  4326d7:	cmp    rax,0xff
  4326dd:	je     0x4329ff
  4326e3:	lea    rdx,[rax+0x1]
  4326e7:	mov    QWORD PTR [rbx+0x100],rdx
  4326ee:	mov    BYTE PTR [rbx+rax*1],0x20
  4326f2:	mov    BYTE PTR [rbx+0x108],0x20
  4326f9:	mov    r8,QWORD PTR [rdi+0x10]
  4326fd:	jmp    0x432414
  432702:	and    r12d,0x4
  432706:	jne    0x432448
  43270c:	mov    rax,QWORD PTR [rbx+0x100]
  432713:	cmp    rax,0xff
  432719:	je     0x432aea
  43271f:	lea    rdx,[rax+0x1]
  432723:	mov    QWORD PTR [rbx+0x100],rdx
  43272a:	mov    BYTE PTR [rbx+rax*1],0x2a
  43272e:	mov    BYTE PTR [rbx+0x108],0x2a
  432735:	jmp    0x432448
  43273a:	nop    WORD PTR [rax+rax*1+0x0]
  432740:	mov    rax,QWORD PTR [rbx+0x100]
  432747:	jmp    0x4325fa
  43274c:	nop    DWORD PTR [rax+0x0]
  432750:	mov    rax,QWORD PTR [rbx+0x100]
  432757:	jmp    0x43265a
  43275c:	nop    DWORD PTR [rax+0x0]
  432760:	mov    rax,QWORD PTR [rbx+0x100]
  432767:	lea    rsi,[rip+0x257dc]        # 0x457f4a
  43276e:	lea    rbp,[rip+0x257dd]        # 0x457f52
  432775:	jmp    0x4327a6
  432777:	nop    WORD PTR [rax+rax*1+0x0]
  432780:	mov    rdx,rax
  432783:	add    rax,0x1
  432787:	add    rsi,0x1
  43278b:	mov    QWORD PTR [rbx+0x100],rax
  432792:	mov    BYTE PTR [rbx+rdx*1],dil
  432796:	cmp    rsi,rbp
  432799:	mov    BYTE PTR [rbx+0x108],dil
  4327a0:	je     0x432448
  4327a6:	cmp    rax,0xff
  4327ac:	movzx  edi,BYTE PTR [rsi]
  4327af:	jne    0x432780
  4327b1:	mov    edx,0xff
  4327b6:	mov    BYTE PTR [rbx+0xff],0x0
  4327bd:	mov    r8,QWORD PTR [rbx+0x118]
  4327c4:	mov    rcx,rbx
  4327c7:	call   QWORD PTR [rbx+0x110]
  4327cd:	add    DWORD PTR [rbx+0x138],0x1
  4327d4:	mov    eax,0x1
  4327d9:	xor    edx,edx
  4327db:	jmp    0x432787
  4327dd:	nop    DWORD PTR [rax]
  4327e0:	mov    rax,QWORD PTR [rbx+0x100]
  4327e7:	lea    rsi,[rip+0x25765]        # 0x457f53
  4327ee:	lea    rbp,[rip+0x25768]        # 0x457f5d
  4327f5:	jmp    0x432826
  4327f7:	nop    WORD PTR [rax+rax*1+0x0]
  432800:	mov    rdx,rax
  432803:	add    rax,0x1
  432807:	add    rsi,0x1
  43280b:	mov    QWORD PTR [rbx+0x100],rax
  432812:	mov    BYTE PTR [rbx+rdx*1],dil
  432816:	cmp    rsi,rbp
  432819:	mov    BYTE PTR [rbx+0x108],dil
  432820:	je     0x432448
  432826:	cmp    rax,0xff
  43282c:	movzx  edi,BYTE PTR [rsi]
  43282f:	jne    0x432800
  432831:	mov    edx,0xff
  432836:	mov    BYTE PTR [rbx+0xff],0x0
  43283d:	mov    r8,QWORD PTR [rbx+0x118]
  432844:	mov    rcx,rbx
  432847:	call   QWORD PTR [rbx+0x110]
  43284d:	add    DWORD PTR [rbx+0x138],0x1
  432854:	mov    eax,0x1
  432859:	xor    edx,edx
  43285b:	jmp    0x432807
  43285d:	nop    DWORD PTR [rax]
  432860:	cmp    BYTE PTR [rbx+0x108],0x28
  432867:	je     0x432892
  432869:	mov    rax,QWORD PTR [rbx+0x100]
  432870:	cmp    rax,0xff
  432876:	je     0x432abb
  43287c:	lea    rdx,[rax+0x1]
  432880:	mov    QWORD PTR [rbx+0x100],rdx
  432887:	mov    BYTE PTR [rbx+rax*1],0x20
  43288b:	mov    BYTE PTR [rbx+0x108],0x20
  432892:	mov    rax,QWORD PTR [rbx+0x140]
  432899:	mov    r8,QWORD PTR [rdi+0x8]
  43289d:	mov    edx,r12d
  4328a0:	mov    rcx,rbx
  4328a3:	lea    rsi,[rip+0x256b4]        # 0x457f5e
  4328aa:	lea    rbp,[rip+0x256b0]        # 0x457f61
  4328b1:	mov    QWORD PTR [rsp+0x28],rax
  4328b6:	lea    rax,[rsp+0x20]
  4328bb:	mov    QWORD PTR [rsp+0x20],r8
  4328c0:	mov    QWORD PTR [rbx+0x140],rax
  4328c7:	call   0x42eb10
  4328cc:	mov    rax,QWORD PTR [rsp+0x28]
  4328d1:	mov    QWORD PTR [rbx+0x140],rax
  4328d8:	mov    rax,QWORD PTR [rbx+0x100]
  4328df:	jmp    0x432907
  4328e1:	mov    rdx,rax
  4328e4:	add    rax,0x1
  4328e8:	add    rsi,0x1
  4328ec:	mov    QWORD PTR [rbx+0x100],rax
  4328f3:	mov    BYTE PTR [rbx+rdx*1],dil
  4328f7:	cmp    rsi,rbp
  4328fa:	mov    BYTE PTR [rbx+0x108],dil
  432901:	je     0x432448
  432907:	cmp    rax,0xff
  43290d:	movzx  edi,BYTE PTR [rsi]
  432910:	jne    0x4328e1
  432912:	mov    edx,0xff
  432917:	mov    BYTE PTR [rbx+0xff],0x0
  43291e:	mov    r8,QWORD PTR [rbx+0x118]
  432925:	mov    rcx,rbx
  432928:	call   QWORD PTR [rbx+0x110]
  43292e:	add    DWORD PTR [rbx+0x138],0x1
  432935:	mov    eax,0x1
  43293a:	xor    edx,edx
  43293c:	jmp    0x4328e8
  43293e:	xchg   ax,ax
  432940:	mov    rax,QWORD PTR [rbx+0x140]
  432947:	mov    QWORD PTR [rsp+0x20],rdi
  43294c:	mov    r8,rdi
  43294f:	mov    QWORD PTR [rsp+0x28],rax
  432954:	lea    rax,[rsp+0x20]
  432959:	mov    QWORD PTR [rbx+0x140],rax
  432960:	jmp    0x432431
  432965:	mov    rax,QWORD PTR [rbx+0x140]
  43296c:	mov    r8,QWORD PTR [rdi+0x8]
  432970:	mov    edx,r12d
  432973:	mov    rcx,rbx
  432976:	mov    QWORD PTR [rsp+0x28],rax
  43297b:	lea    rax,[rsp+0x20]
  432980:	mov    QWORD PTR [rsp+0x20],r8
  432985:	mov    QWORD PTR [rbx+0x140],rax
  43298c:	call   0x42eb10
  432991:	mov    rax,QWORD PTR [rsp+0x28]
  432996:	mov    QWORD PTR [rbx+0x140],rax
  43299d:	mov    rax,QWORD PTR [rbx+0x100]
  4329a4:	cmp    rax,0xff
  4329aa:	je     0x432a5d
  4329b0:	lea    rdx,[rax+0x1]
  4329b4:	mov    QWORD PTR [rbx+0x100],rdx
  4329bb:	mov    BYTE PTR [rbx+rax*1],0x29
  4329bf:	mov    BYTE PTR [rbx+0x108],0x29
  4329c6:	jmp    0x432448
  4329cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4329d0:	mov    edx,0xff
  4329d5:	mov    BYTE PTR [rbx+0xff],0x0
  4329dc:	mov    r8,QWORD PTR [rbx+0x118]
  4329e3:	mov    rcx,rbx
  4329e6:	call   QWORD PTR [rbx+0x110]
  4329ec:	add    DWORD PTR [rbx+0x138],0x1
  4329f3:	mov    edx,0x1
  4329f8:	xor    eax,eax
  4329fa:	jmp    0x43260a
  4329ff:	mov    edx,0xff
  432a04:	mov    BYTE PTR [rbx+0xff],0x0
  432a0b:	mov    r8,QWORD PTR [rbx+0x118]
  432a12:	mov    rcx,rbx
  432a15:	call   QWORD PTR [rbx+0x110]
  432a1b:	add    DWORD PTR [rbx+0x138],0x1
  432a22:	mov    edx,0x1
  432a27:	xor    eax,eax
  432a29:	jmp    0x4326e7
  432a2e:	mov    edx,0xff
  432a33:	mov    BYTE PTR [rbx+0xff],0x0
  432a3a:	mov    r8,QWORD PTR [rbx+0x118]
  432a41:	mov    rcx,rbx
  432a44:	call   QWORD PTR [rbx+0x110]
  432a4a:	add    DWORD PTR [rbx+0x138],0x1
  432a51:	mov    eax,0x1
  432a56:	xor    edx,edx
  432a58:	jmp    0x4325e8
  432a5d:	mov    edx,0xff
  432a62:	mov    BYTE PTR [rbx+0xff],0x0
  432a69:	mov    r8,QWORD PTR [rbx+0x118]
  432a70:	mov    rcx,rbx
  432a73:	call   QWORD PTR [rbx+0x110]
  432a79:	add    DWORD PTR [rbx+0x138],0x1
  432a80:	mov    edx,0x1
  432a85:	xor    eax,eax
  432a87:	jmp    0x4329b4
  432a8c:	mov    edx,0xff
  432a91:	mov    BYTE PTR [rbx+0xff],0x0
  432a98:	mov    r8,QWORD PTR [rbx+0x118]
  432a9f:	mov    rcx,rbx
  432aa2:	call   QWORD PTR [rbx+0x110]
  432aa8:	add    DWORD PTR [rbx+0x138],0x1
  432aaf:	mov    eax,0x1
  432ab4:	xor    edx,edx
  432ab6:	jmp    0x432648
  432abb:	mov    edx,0xff
  432ac0:	mov    BYTE PTR [rbx+0xff],0x0
  432ac7:	mov    r8,QWORD PTR [rbx+0x118]
  432ace:	mov    rcx,rbx
  432ad1:	call   QWORD PTR [rbx+0x110]
  432ad7:	add    DWORD PTR [rbx+0x138],0x1
  432ade:	mov    edx,0x1
  432ae3:	xor    eax,eax
  432ae5:	jmp    0x432880
  432aea:	mov    edx,0xff
  432aef:	mov    BYTE PTR [rbx+0xff],0x0
  432af6:	mov    r8,QWORD PTR [rbx+0x118]
  432afd:	mov    rcx,rbx
  432b00:	call   QWORD PTR [rbx+0x110]
  432b06:	add    DWORD PTR [rbx+0x138],0x1
  432b0d:	mov    edx,0x1
  432b12:	xor    eax,eax
  432b14:	jmp    0x432723
  432b19:	nop    DWORD PTR [rax+0x0]
  432b20:	push   r15
  432b22:	push   r14
  432b24:	push   r13
  432b26:	push   r12
  432b28:	push   rbp
  432b29:	push   rdi
  432b2a:	push   rsi
  432b2b:	push   rbx
  432b2c:	sub    rsp,0x48
  432b30:	test   r8,r8
  432b33:	mov    rsi,rcx
  432b36:	mov    ebp,edx
  432b38:	mov    rbx,r8
  432b3b:	mov    edi,r9d
  432b3e:	jne    0x432b9d
  432b40:	jmp    0x432ba7
  432b42:	mov    eax,DWORD PTR [rbx+0x10]
  432b45:	test   eax,eax
  432b47:	jne    0x432b95
  432b49:	mov    r8,QWORD PTR [rbx+0x8]
  432b4d:	test   edi,edi
  432b4f:	mov    eax,DWORD PTR [r8]
  432b52:	jne    0x432b5c
  432b54:	lea    edx,[rax-0x1c]
  432b57:	cmp    edx,0x4
  432b5a:	jbe    0x432b95
  432b5c:	mov    rcx,QWORD PTR [rbx+0x18]
  432b60:	cmp    eax,0x29
  432b63:	mov    DWORD PTR [rbx+0x10],0x1
  432b6a:	mov    r12,QWORD PTR [rsi+0x120]
  432b71:	mov    QWORD PTR [rsi+0x120],rcx
  432b78:	je     0x432bb8
  432b7a:	cmp    eax,0x2a
  432b7d:	je     0x432bd2
  432b7f:	cmp    eax,0x2
  432b82:	je     0x432bec
  432b84:	mov    edx,ebp
  432b86:	mov    rcx,rsi
  432b89:	call   0x432360
  432b8e:	mov    QWORD PTR [rsi+0x120],r12
  432b95:	mov    rbx,QWORD PTR [rbx]
  432b98:	test   rbx,rbx
  432b9b:	je     0x432ba7
  432b9d:	mov    edx,DWORD PTR [rsi+0x130]
  432ba3:	test   edx,edx
  432ba5:	je     0x432b42
  432ba7:	add    rsp,0x48
  432bab:	pop    rbx
  432bac:	pop    rsi
  432bad:	pop    rdi
  432bae:	pop    rbp
  432baf:	pop    r12
  432bb1:	pop    r13
  432bb3:	pop    r14
  432bb5:	pop    r15
  432bb7:	ret    
  432bb8:	mov    r9,QWORD PTR [rbx]
  432bbb:	add    r8,0x10
  432bbf:	mov    edx,ebp
  432bc1:	mov    rcx,rsi
  432bc4:	call   0x433150
  432bc9:	mov    QWORD PTR [rsi+0x120],r12
  432bd0:	jmp    0x432ba7
  432bd2:	mov    r9,QWORD PTR [rbx]
  432bd5:	add    r8,0x8
  432bd9:	mov    edx,ebp
  432bdb:	mov    rcx,rsi
  432bde:	call   0x432eb0
  432be3:	mov    QWORD PTR [rsi+0x120],r12
  432bea:	jmp    0x432ba7
  432bec:	mov    rdi,QWORD PTR [rsi+0x128]
  432bf3:	mov    QWORD PTR [rsi+0x128],0x0
  432bfe:	mov    edx,ebp
  432c00:	mov    r8,QWORD PTR [r8+0x8]
  432c04:	mov    rcx,rsi
  432c07:	call   0x432320
  432c0c:	test   bpl,0x4
  432c10:	mov    QWORD PTR [rsi+0x128],rdi
  432c17:	mov    rax,QWORD PTR [rsi+0x100]
  432c1e:	jne    0x432c8a
  432c20:	lea    rdi,[rip+0x24f57]        # 0x457b7e
  432c27:	lea    r14,[rip+0x24f52]        # 0x457b80
  432c2e:	jmp    0x432c52
  432c30:	mov    rdx,rax
  432c33:	add    rax,0x1
  432c37:	add    rdi,0x1
  432c3b:	mov    QWORD PTR [rsi+0x100],rax
  432c42:	mov    BYTE PTR [rsi+rdx*1],r13b
  432c46:	cmp    rdi,r14
  432c49:	mov    BYTE PTR [rsi+0x108],r13b
  432c50:	je     0x432ca8
  432c52:	cmp    rax,0xff
  432c58:	movzx  r13d,BYTE PTR [rdi]
  432c5c:	jne    0x432c30
  432c5e:	mov    edx,0xff
  432c63:	mov    BYTE PTR [rsi+0xff],0x0
  432c6a:	mov    r8,QWORD PTR [rsi+0x118]
  432c71:	mov    rcx,rsi
  432c74:	call   QWORD PTR [rsi+0x110]
  432c7a:	add    DWORD PTR [rsi+0x138],0x1
  432c81:	mov    eax,0x1
  432c86:	xor    edx,edx
  432c88:	jmp    0x432c37
  432c8a:	cmp    rax,0xff
  432c90:	je     0x432ce7
  432c92:	lea    rdx,[rax+0x1]
  432c96:	mov    QWORD PTR [rsi+0x100],rdx
  432c9d:	mov    BYTE PTR [rsi+rax*1],0x2e
  432ca1:	mov    BYTE PTR [rsi+0x108],0x2e
  432ca8:	mov    rax,QWORD PTR [rbx+0x8]
  432cac:	mov    rbx,QWORD PTR [rax+0x10]
  432cb0:	mov    eax,DWORD PTR [rbx]
  432cb2:	cmp    eax,0x46
  432cb5:	jne    0x432cc6
  432cb7:	jmp    0x432d13
  432cb9:	nop    DWORD PTR [rax+0x0]
  432cc0:	mov    rbx,QWORD PTR [rbx+0x8]
  432cc4:	mov    eax,DWORD PTR [rbx]
  432cc6:	sub    eax,0x1c
  432cc9:	cmp    eax,0x4
  432ccc:	jbe    0x432cc0
  432cce:	mov    r8,rbx
  432cd1:	mov    edx,ebp
  432cd3:	mov    rcx,rsi
  432cd6:	call   0x432320
  432cdb:	mov    QWORD PTR [rsi+0x120],r12
  432ce2:	jmp    0x432ba7
  432ce7:	mov    edx,0xff
  432cec:	mov    BYTE PTR [rsi+0xff],0x0
  432cf3:	mov    r8,QWORD PTR [rsi+0x118]
  432cfa:	mov    rcx,rsi
  432cfd:	call   QWORD PTR [rsi+0x110]
  432d03:	add    DWORD PTR [rsi+0x138],0x1
  432d0a:	mov    edx,0x1
  432d0f:	xor    eax,eax
  432d11:	jmp    0x432c96
  432d13:	mov    rax,QWORD PTR [rsi+0x100]
  432d1a:	lea    rdi,[rip+0x24e60]        # 0x457b81
  432d21:	lea    r14,[rip+0x24e66]        # 0x457b8e
  432d28:	jmp    0x432d4c
  432d2a:	mov    rdx,rax
  432d2d:	add    rax,0x1
  432d31:	add    rdi,0x1
  432d35:	mov    QWORD PTR [rsi+0x100],rax
  432d3c:	mov    BYTE PTR [rsi+rdx*1],r13b
  432d40:	cmp    rdi,r14
  432d43:	mov    BYTE PTR [rsi+0x108],r13b
  432d4a:	je     0x432d84
  432d4c:	cmp    rax,0xff
  432d52:	movzx  r13d,BYTE PTR [rdi]
  432d56:	jne    0x432d2a
  432d58:	mov    edx,0xff
  432d5d:	mov    BYTE PTR [rsi+0xff],0x0
  432d64:	mov    r8,QWORD PTR [rsi+0x118]
  432d6b:	mov    rcx,rsi
  432d6e:	call   QWORD PTR [rsi+0x110]
  432d74:	add    DWORD PTR [rsi+0x138],0x1
  432d7b:	mov    eax,0x1
  432d80:	xor    edx,edx
  432d82:	jmp    0x432d31
  432d84:	mov    eax,DWORD PTR [rbx+0x10]
  432d87:	lea    r15,[rsp+0x20]
  432d8c:	lea    rdx,[rip+0x24dfc]        # 0x457b8f
  432d93:	mov    rcx,r15
  432d96:	mov    r14,r15
  432d99:	lea    r8d,[rax+0x1]
  432d9d:	call   0x449400
  432da2:	mov    edx,DWORD PTR [r14]
  432da5:	add    r14,0x4
  432da9:	lea    eax,[rdx-0x1010101]
  432daf:	not    edx
  432db1:	and    eax,edx
  432db3:	and    eax,0x80808080
  432db8:	je     0x432da2
  432dba:	mov    edx,eax
  432dbc:	shr    edx,0x10
  432dbf:	test   eax,0x8080
  432dc4:	cmove  eax,edx
  432dc7:	lea    rdx,[r14+0x2]
  432dcb:	cmove  r14,rdx
  432dcf:	add    al,al
  432dd1:	mov    rax,QWORD PTR [rsi+0x100]
  432dd8:	sbb    r14,0x3
  432ddc:	sub    r14,r15
  432ddf:	je     0x432e40
  432de1:	xor    edi,edi
  432de3:	jmp    0x432e07
  432de5:	mov    rdx,rax
  432de8:	add    rax,0x1
  432dec:	add    rdi,0x1
  432df0:	mov    QWORD PTR [rsi+0x100],rax
  432df7:	mov    BYTE PTR [rsi+rdx*1],r13b
  432dfb:	cmp    rdi,r14
  432dfe:	mov    BYTE PTR [rsi+0x108],r13b
  432e05:	je     0x432e40
  432e07:	cmp    rax,0xff
  432e0d:	movzx  r13d,BYTE PTR [r15+rdi*1]
  432e12:	jne    0x432de5
  432e14:	mov    edx,0xff
  432e19:	mov    BYTE PTR [rsi+0xff],0x0
  432e20:	mov    r8,QWORD PTR [rsi+0x118]
  432e27:	mov    rcx,rsi
  432e2a:	call   QWORD PTR [rsi+0x110]
  432e30:	add    DWORD PTR [rsi+0x138],0x1
  432e37:	mov    eax,0x1
  432e3c:	xor    edx,edx
  432e3e:	jmp    0x432dec
  432e40:	lea    rdi,[rip+0x24d4b]        # 0x457b92
  432e47:	lea    r14,[rip+0x24d47]        # 0x457b95
  432e4e:	jmp    0x432e76
  432e50:	mov    rdx,rax
  432e53:	add    rax,0x1
  432e57:	add    rdi,0x1
  432e5b:	mov    QWORD PTR [rsi+0x100],rax
  432e62:	mov    BYTE PTR [rsi+rdx*1],r13b
  432e66:	cmp    rdi,r14
  432e69:	mov    BYTE PTR [rsi+0x108],r13b
  432e70:	je     0x432cc0
  432e76:	cmp    rax,0xff
  432e7c:	movzx  r13d,BYTE PTR [rdi]
  432e80:	jne    0x432e50
  432e82:	mov    edx,0xff
  432e87:	mov    BYTE PTR [rsi+0xff],0x0
  432e8e:	mov    r8,QWORD PTR [rsi+0x118]
  432e95:	mov    rcx,rsi
  432e98:	call   QWORD PTR [rsi+0x110]
  432e9e:	add    DWORD PTR [rsi+0x138],0x1
  432ea5:	mov    eax,0x1
  432eaa:	xor    edx,edx
  432eac:	jmp    0x432e57
  432eae:	xchg   ax,ax
  432eb0:	push   r14
  432eb2:	push   r13
  432eb4:	push   r12
  432eb6:	push   rbp
  432eb7:	push   rdi
  432eb8:	push   rsi
  432eb9:	push   rbx
  432eba:	sub    rsp,0x20
  432ebe:	test   r9,r9
  432ec1:	mov    rbx,rcx
  432ec4:	mov    ebp,edx
  432ec6:	mov    r12,r8
  432ec9:	mov    r13,r9
  432ecc:	mov    rax,r9
  432ecf:	je     0x432ef4
  432ed1:	mov    edx,DWORD PTR [rax+0x10]
  432ed4:	test   edx,edx
  432ed6:	je     0x432f90
  432edc:	mov    rax,QWORD PTR [rax]
  432edf:	test   rax,rax
  432ee2:	jne    0x432ed1
  432ee4:	xor    r9d,r9d
  432ee7:	mov    r8,r13
  432eea:	mov    edx,ebp
  432eec:	mov    rcx,rbx
  432eef:	call   0x432b20
  432ef4:	mov    rax,QWORD PTR [rbx+0x100]
  432efb:	cmp    rax,0xff
  432f01:	je     0x43304b
  432f07:	lea    rdx,[rax+0x1]
  432f0b:	mov    QWORD PTR [rbx+0x100],rdx
  432f12:	mov    BYTE PTR [rbx+rax*1],0x20
  432f16:	mov    BYTE PTR [rbx+0x108],0x20
  432f1d:	cmp    rdx,0xff
  432f24:	je     0x4330e0
  432f2a:	lea    rax,[rdx+0x1]
  432f2e:	mov    QWORD PTR [rbx+0x100],rax
  432f35:	mov    BYTE PTR [rbx+rdx*1],0x5b
  432f39:	mov    BYTE PTR [rbx+0x108],0x5b
  432f40:	mov    r8,QWORD PTR [r12]
  432f44:	test   r8,r8
  432f47:	je     0x432f5a
  432f49:	mov    edx,ebp
  432f4b:	mov    rcx,rbx
  432f4e:	call   0x432320
  432f53:	mov    rax,QWORD PTR [rbx+0x100]
  432f5a:	cmp    rax,0xff
  432f60:	je     0x4330b0
  432f66:	lea    rdx,[rax+0x1]
  432f6a:	mov    QWORD PTR [rbx+0x100],rdx
  432f71:	mov    BYTE PTR [rbx+rax*1],0x5d
  432f75:	mov    BYTE PTR [rbx+0x108],0x5d
  432f7c:	add    rsp,0x20
  432f80:	pop    rbx
  432f81:	pop    rsi
  432f82:	pop    rdi
  432f83:	pop    rbp
  432f84:	pop    r12
  432f86:	pop    r13
  432f88:	pop    r14
  432f8a:	ret    
  432f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  432f90:	mov    rax,QWORD PTR [rax+0x8]
  432f94:	cmp    DWORD PTR [rax],0x2a
  432f97:	je     0x433130
  432f9d:	mov    rax,QWORD PTR [rbx+0x100]
  432fa4:	lea    rsi,[rip+0x25071]        # 0x45801c
  432fab:	lea    r14,[rip+0x2506c]        # 0x45801e
  432fb2:	jmp    0x432fd6
  432fb4:	mov    rdx,rax
  432fb7:	add    rax,0x1
  432fbb:	add    rsi,0x1
  432fbf:	mov    QWORD PTR [rbx+0x100],rax
  432fc6:	mov    BYTE PTR [rbx+rdx*1],dil
  432fca:	cmp    rsi,r14
  432fcd:	mov    BYTE PTR [rbx+0x108],dil
  432fd4:	je     0x433010
  432fd6:	cmp    rax,0xff
  432fdc:	movzx  edi,BYTE PTR [rsi]
  432fdf:	jne    0x432fb4
  432fe1:	mov    edx,0xff
  432fe6:	mov    BYTE PTR [rbx+0xff],0x0
  432fed:	mov    r8,QWORD PTR [rbx+0x118]
  432ff4:	mov    rcx,rbx
  432ff7:	call   QWORD PTR [rbx+0x110]
  432ffd:	add    DWORD PTR [rbx+0x138],0x1
  433004:	mov    eax,0x1
  433009:	xor    edx,edx
  43300b:	jmp    0x432fbb
  43300d:	nop    DWORD PTR [rax]
  433010:	xor    r9d,r9d
  433013:	mov    edx,ebp
  433015:	mov    r8,r13
  433018:	mov    rcx,rbx
  43301b:	call   0x432b20
  433020:	mov    rdx,QWORD PTR [rbx+0x100]
  433027:	cmp    rdx,0xff
  43302e:	je     0x43307a
  433030:	lea    rax,[rdx+0x1]
  433034:	mov    QWORD PTR [rbx+0x100],rax
  43303b:	mov    BYTE PTR [rbx+rdx*1],0x29
  43303f:	mov    BYTE PTR [rbx+0x108],0x29
  433046:	jmp    0x432efb
  43304b:	mov    edx,0xff
  433050:	mov    BYTE PTR [rbx+0xff],0x0
  433057:	mov    r8,QWORD PTR [rbx+0x118]
  43305e:	mov    rcx,rbx
  433061:	call   QWORD PTR [rbx+0x110]
  433067:	add    DWORD PTR [rbx+0x138],0x1
  43306e:	mov    edx,0x1
  433073:	xor    eax,eax
  433075:	jmp    0x432f0b
  43307a:	mov    edx,0xff
  43307f:	mov    BYTE PTR [rbx+0xff],0x0
  433086:	mov    r8,QWORD PTR [rbx+0x118]
  43308d:	mov    rcx,rbx
  433090:	call   QWORD PTR [rbx+0x110]
  433096:	add    DWORD PTR [rbx+0x138],0x1
  43309d:	mov    eax,0x1
  4330a2:	xor    edx,edx
  4330a4:	jmp    0x433034
  4330a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4330b0:	mov    edx,0xff
  4330b5:	mov    BYTE PTR [rbx+0xff],0x0
  4330bc:	mov    r8,QWORD PTR [rbx+0x118]
  4330c3:	mov    rcx,rbx
  4330c6:	call   QWORD PTR [rbx+0x110]
  4330cc:	add    DWORD PTR [rbx+0x138],0x1
  4330d3:	mov    edx,0x1
  4330d8:	xor    eax,eax
  4330da:	jmp    0x432f6a
  4330df:	nop
  4330e0:	mov    r8,QWORD PTR [rbx+0x118]
  4330e7:	mov    BYTE PTR [rbx+0xff],0x0
  4330ee:	mov    edx,0xff
  4330f3:	mov    rcx,rbx
  4330f6:	call   QWORD PTR [rbx+0x110]
  4330fc:	mov    BYTE PTR [rbx],0x5b
  4330ff:	mov    BYTE PTR [rbx+0x108],0x5b
  433106:	mov    r8,QWORD PTR [r12]
  43310a:	add    DWORD PTR [rbx+0x138],0x1
  433111:	mov    QWORD PTR [rbx+0x100],0x1
  43311c:	test   r8,r8
  43311f:	jne    0x432f49
  433125:	mov    eax,0x1
  43312a:	jmp    0x432f66
  43312f:	nop
  433130:	mov    edx,ebp
  433132:	xor    r9d,r9d
  433135:	mov    r8,r13
  433138:	mov    rcx,rbx
  43313b:	call   0x432b20
  433140:	mov    rdx,QWORD PTR [rbx+0x100]
  433147:	jmp    0x432f1d
  43314c:	nop    DWORD PTR [rax+0x0]
  433150:	push   r12
  433152:	push   rbp
  433153:	push   rdi
  433154:	push   rsi
  433155:	push   rbx
  433156:	sub    rsp,0x30
  43315a:	test   r9,r9
  43315d:	mov    rbx,rcx
  433160:	mov    esi,edx
  433162:	mov    rdi,r8
  433165:	mov    rbp,r9
  433168:	je     0x433240
  43316e:	mov    r8d,DWORD PTR [r9+0x10]
  433172:	test   r8d,r8d
  433175:	jne    0x433240
  43317b:	mov    rax,r9
  43317e:	mov    edx,0x1
  433183:	jmp    0x4331a5
  433185:	and    ch,0xe
  433188:	jne    0x433315
  43318e:	mov    rax,QWORD PTR [rax]
  433191:	test   rax,rax
  433194:	je     0x433240
  43319a:	mov    ecx,DWORD PTR [rax+0x10]
  43319d:	test   ecx,ecx
  43319f:	jne    0x433240
  4331a5:	mov    rcx,QWORD PTR [rax+0x8]
  4331a9:	mov    r10d,DWORD PTR [rcx]
  4331ac:	lea    ecx,[r10-0x19]
  4331b0:	cmp    ecx,0x12
  4331b3:	ja     0x43318e
  4331b5:	mov    r11,rdx
  4331b8:	shl    r11,cl
  4331bb:	test   r11d,0x43107
  4331c2:	mov    rcx,r11
  4331c5:	je     0x433185
  4331c7:	movzx  eax,BYTE PTR [rbx+0x108]
  4331ce:	cmp    al,0x20
  4331d0:	je     0x43332a
  4331d6:	mov    rdx,QWORD PTR [rbx+0x100]
  4331dd:	cmp    rdx,0xff
  4331e4:	je     0x43343e
  4331ea:	lea    rax,[rdx+0x1]
  4331ee:	cmp    rax,0xff
  4331f4:	mov    QWORD PTR [rbx+0x100],rax
  4331fb:	mov    BYTE PTR [rbx+rdx*1],0x20
  4331ff:	mov    BYTE PTR [rbx+0x108],0x20
  433206:	jne    0x43333d
  43320c:	mov    edx,0xff
  433211:	mov    BYTE PTR [rbx+0xff],0x0
  433218:	mov    r8,QWORD PTR [rbx+0x118]
  43321f:	mov    rcx,rbx
  433222:	call   QWORD PTR [rbx+0x110]
  433228:	add    DWORD PTR [rbx+0x138],0x1
  43322f:	mov    edx,0x1
  433234:	xor    eax,eax
  433236:	jmp    0x433341
  43323b:	nop    DWORD PTR [rax+rax*1+0x0]
  433240:	mov    r12,QWORD PTR [rbx+0x128]
  433247:	xor    r9d,r9d
  43324a:	mov    edx,esi
  43324c:	mov    QWORD PTR [rbx+0x128],0x0
  433257:	mov    r8,rbp
  43325a:	mov    rcx,rbx
  43325d:	call   0x432b20
  433262:	mov    rdx,QWORD PTR [rbx+0x100]
  433269:	cmp    rdx,0xff
  433270:	je     0x4333ab
  433276:	lea    rax,[rdx+0x1]
  43327a:	mov    QWORD PTR [rbx+0x100],rax
  433281:	mov    BYTE PTR [rbx+rdx*1],0x28
  433285:	mov    BYTE PTR [rbx+0x108],0x28
  43328c:	mov    r8,QWORD PTR [rdi]
  43328f:	test   r8,r8
  433292:	je     0x4332ce
  433294:	mov    rax,QWORD PTR [rbx+0x140]
  43329b:	mov    edx,esi
  43329d:	mov    rcx,rbx
  4332a0:	mov    QWORD PTR [rsp+0x20],r8
  4332a5:	mov    QWORD PTR [rsp+0x28],rax
  4332aa:	lea    rax,[rsp+0x20]
  4332af:	mov    QWORD PTR [rbx+0x140],rax
  4332b6:	call   0x42eb10
  4332bb:	mov    rax,QWORD PTR [rsp+0x28]
  4332c0:	mov    QWORD PTR [rbx+0x140],rax
  4332c7:	mov    rax,QWORD PTR [rbx+0x100]
  4332ce:	cmp    rax,0xff
  4332d4:	je     0x4333e0
  4332da:	lea    rdx,[rax+0x1]
  4332de:	mov    QWORD PTR [rbx+0x100],rdx
  4332e5:	mov    r9d,0x1
  4332eb:	mov    BYTE PTR [rbx+rax*1],0x29
  4332ef:	mov    r8,rbp
  4332f2:	mov    BYTE PTR [rbx+0x108],0x29
  4332f9:	mov    edx,esi
  4332fb:	mov    rcx,rbx
  4332fe:	call   0x432b20
  433303:	mov    QWORD PTR [rbx+0x128],r12
  43330a:	add    rsp,0x30
  43330e:	pop    rbx
  43330f:	pop    rsi
  433310:	pop    rdi
  433311:	pop    rbp
  433312:	pop    r12
  433314:	ret    
  433315:	movzx  eax,BYTE PTR [rbx+0x108]
  43331c:	mov    edx,eax
  43331e:	and    edx,0xfffffffd
  433321:	cmp    dl,0x28
  433324:	jne    0x4331ce
  43332a:	mov    rax,QWORD PTR [rbx+0x100]
  433331:	cmp    rax,0xff
  433337:	je     0x43320c
  43333d:	lea    rdx,[rax+0x1]
  433341:	mov    QWORD PTR [rbx+0x100],rdx
  433348:	mov    r12,QWORD PTR [rbx+0x128]
  43334f:	xor    r9d,r9d
  433352:	mov    BYTE PTR [rbx+rax*1],0x28
  433356:	mov    r8,rbp
  433359:	mov    BYTE PTR [rbx+0x108],0x28
  433360:	mov    QWORD PTR [rbx+0x128],0x0
  43336b:	mov    edx,esi
  43336d:	mov    rcx,rbx
  433370:	call   0x432b20
  433375:	mov    rax,QWORD PTR [rbx+0x100]
  43337c:	cmp    rax,0xff
  433382:	je     0x43340f
  433388:	lea    rdx,[rax+0x1]
  43338c:	cmp    rdx,0xff
  433393:	mov    QWORD PTR [rbx+0x100],rdx
  43339a:	mov    BYTE PTR [rbx+rax*1],0x29
  43339e:	mov    BYTE PTR [rbx+0x108],0x29
  4333a5:	jne    0x433276
  4333ab:	mov    edx,0xff
  4333b0:	mov    BYTE PTR [rbx+0xff],0x0
  4333b7:	mov    r8,QWORD PTR [rbx+0x118]
  4333be:	mov    rcx,rbx
  4333c1:	call   QWORD PTR [rbx+0x110]
  4333c7:	add    DWORD PTR [rbx+0x138],0x1
  4333ce:	mov    eax,0x1
  4333d3:	xor    edx,edx
  4333d5:	jmp    0x43327a
  4333da:	nop    WORD PTR [rax+rax*1+0x0]
  4333e0:	mov    edx,0xff
  4333e5:	mov    BYTE PTR [rbx+0xff],0x0
  4333ec:	mov    r8,QWORD PTR [rbx+0x118]
  4333f3:	mov    rcx,rbx
  4333f6:	call   QWORD PTR [rbx+0x110]
  4333fc:	add    DWORD PTR [rbx+0x138],0x1
  433403:	mov    edx,0x1
  433408:	xor    eax,eax
  43340a:	jmp    0x4332de
  43340f:	mov    edx,0xff
  433414:	mov    BYTE PTR [rbx+0xff],0x0
  43341b:	mov    r8,QWORD PTR [rbx+0x118]
  433422:	mov    rcx,rbx
  433425:	call   QWORD PTR [rbx+0x110]
  43342b:	add    DWORD PTR [rbx+0x138],0x1
  433432:	mov    edx,0x1
  433437:	xor    eax,eax
  433439:	jmp    0x43338c
  43343e:	mov    edx,0xff
  433443:	mov    BYTE PTR [rbx+0xff],0x0
  43344a:	mov    r8,QWORD PTR [rbx+0x118]
  433451:	mov    rcx,rbx
  433454:	call   QWORD PTR [rbx+0x110]
  43345a:	add    DWORD PTR [rbx+0x138],0x1
  433461:	mov    eax,0x1
  433466:	xor    edx,edx
  433468:	jmp    0x4331ee
  43346d:	nop    DWORD PTR [rax]
  433470:	push   r12
  433472:	push   rbp
  433473:	push   rdi
  433474:	push   rsi
  433475:	push   rbx
  433476:	sub    rsp,0x30
  43347a:	cmp    DWORD PTR [r8],0x31
  43347e:	mov    rbx,rcx
  433481:	je     0x4334c0
  433483:	mov    rax,QWORD PTR [rcx+0x140]
  43348a:	mov    QWORD PTR [rsp+0x20],r8
  43348f:	mov    QWORD PTR [rsp+0x28],rax
  433494:	lea    rax,[rsp+0x20]
  433499:	mov    QWORD PTR [rcx+0x140],rax
  4334a0:	call   0x42eb10
  4334a5:	mov    rax,QWORD PTR [rsp+0x28]
  4334aa:	mov    QWORD PTR [rbx+0x140],rax
  4334b1:	add    rsp,0x30
  4334b5:	pop    rbx
  4334b6:	pop    rsi
  4334b7:	pop    rdi
  4334b8:	pop    rbp
  4334b9:	pop    r12
  4334bb:	ret    
  4334bc:	nop    DWORD PTR [rax+0x0]
  4334c0:	mov    rax,QWORD PTR [r8+0x8]
  4334c4:	movsxd rbp,DWORD PTR [rax+0x10]
  4334c8:	mov    r12,QWORD PTR [rax+0x8]
  4334cc:	test   rbp,rbp
  4334cf:	je     0x4334b1
  4334d1:	mov    rax,QWORD PTR [rcx+0x100]
  4334d8:	xor    esi,esi
  4334da:	jmp    0x433502
  4334dc:	nop    DWORD PTR [rax+0x0]
  4334e0:	mov    rdx,rax
  4334e3:	add    rax,0x1
  4334e7:	add    rsi,0x1
  4334eb:	mov    QWORD PTR [rbx+0x100],rax
  4334f2:	mov    BYTE PTR [rbx+rdx*1],dil
  4334f6:	cmp    rbp,rsi
  4334f9:	mov    BYTE PTR [rbx+0x108],dil
  433500:	je     0x4334b1
  433502:	cmp    rax,0xff
  433508:	movzx  edi,BYTE PTR [r12+rsi*1]
  43350d:	jne    0x4334e0
  43350f:	mov    edx,0xff
  433514:	mov    BYTE PTR [rbx+0xff],0x0
  43351b:	mov    r8,QWORD PTR [rbx+0x118]
  433522:	mov    rcx,rbx
  433525:	call   QWORD PTR [rbx+0x110]
  43352b:	add    DWORD PTR [rbx+0x138],0x1
  433532:	mov    eax,0x1
  433537:	xor    edx,edx
  433539:	jmp    0x4334e7
  43353b:	nop    DWORD PTR [rax+rax*1+0x0]
  433540:	push   rdi
  433541:	push   rsi
  433542:	push   rbx
  433543:	sub    rsp,0x30
  433547:	mov    eax,DWORD PTR [r8]
  43354a:	mov    rbx,rcx
  43354d:	mov    edi,edx
  43354f:	mov    rsi,r8
  433552:	cmp    eax,0x30
  433555:	sete   cl
  433558:	cmp    eax,0x1
  43355b:	setbe  dl
  43355e:	or     cl,dl
  433560:	jne    0x433600
  433566:	cmp    eax,0x6
  433569:	je     0x433600
  43356f:	mov    rax,QWORD PTR [rbx+0x100]
  433576:	cmp    rax,0xff
  43357c:	je     0x433640
  433582:	lea    rdx,[rax+0x1]
  433586:	mov    QWORD PTR [rbx+0x100],rdx
  43358d:	mov    BYTE PTR [rbx+rax*1],0x28
  433591:	mov    r8,rsi
  433594:	mov    rax,QWORD PTR [rbx+0x140]
  43359b:	mov    BYTE PTR [rbx+0x108],0x28
  4335a2:	mov    edx,edi
  4335a4:	mov    rcx,rbx
  4335a7:	mov    QWORD PTR [rsp+0x20],rsi
  4335ac:	mov    QWORD PTR [rsp+0x28],rax
  4335b1:	lea    rax,[rsp+0x20]
  4335b6:	mov    QWORD PTR [rbx+0x140],rax
  4335bd:	call   0x42eb10
  4335c2:	mov    rax,QWORD PTR [rsp+0x28]
  4335c7:	mov    QWORD PTR [rbx+0x140],rax
  4335ce:	mov    rax,QWORD PTR [rbx+0x100]
  4335d5:	cmp    rax,0xff
  4335db:	je     0x433670
  4335e1:	lea    rdx,[rax+0x1]
  4335e5:	mov    QWORD PTR [rbx+0x100],rdx
  4335ec:	mov    BYTE PTR [rbx+rax*1],0x29
  4335f0:	mov    BYTE PTR [rbx+0x108],0x29
  4335f7:	add    rsp,0x30
  4335fb:	pop    rbx
  4335fc:	pop    rsi
  4335fd:	pop    rdi
  4335fe:	ret    
  4335ff:	nop
  433600:	mov    rax,QWORD PTR [rbx+0x140]
  433607:	mov    r8,rsi
  43360a:	mov    edx,edi
  43360c:	mov    rcx,rbx
  43360f:	mov    QWORD PTR [rsp+0x20],rsi
  433614:	mov    QWORD PTR [rsp+0x28],rax
  433619:	lea    rax,[rsp+0x20]
  43361e:	mov    QWORD PTR [rbx+0x140],rax
  433625:	call   0x42eb10
  43362a:	mov    rax,QWORD PTR [rsp+0x28]
  43362f:	mov    QWORD PTR [rbx+0x140],rax
  433636:	add    rsp,0x30
  43363a:	pop    rbx
  43363b:	pop    rsi
  43363c:	pop    rdi
  43363d:	ret    
  43363e:	xchg   ax,ax
  433640:	mov    edx,0xff
  433645:	mov    BYTE PTR [rbx+0xff],0x0
  43364c:	mov    r8,QWORD PTR [rbx+0x118]
  433653:	mov    rcx,rbx
  433656:	call   QWORD PTR [rbx+0x110]
  43365c:	add    DWORD PTR [rbx+0x138],0x1
  433663:	mov    edx,0x1
  433668:	xor    eax,eax
  43366a:	jmp    0x433586
  43366f:	nop
  433670:	mov    edx,0xff
  433675:	mov    BYTE PTR [rbx+0xff],0x0
  43367c:	mov    r8,QWORD PTR [rbx+0x118]
  433683:	mov    rcx,rbx
  433686:	call   QWORD PTR [rbx+0x110]
  43368c:	add    DWORD PTR [rbx+0x138],0x1
  433693:	mov    edx,0x1
  433698:	xor    eax,eax
  43369a:	jmp    0x4335e5
  43369f:	nop
  4336a0:	test   rdx,rdx
  4336a3:	sete   r9b
  4336a7:	test   r8d,r8d
  4336aa:	sete   al
  4336ad:	or     r9b,al
  4336b0:	jne    0x4336d0
  4336b2:	test   rcx,rcx
  4336b5:	je     0x4336d0
  4336b7:	mov    DWORD PTR [rcx],0x0
  4336bd:	mov    QWORD PTR [rcx+0x8],rdx
  4336c1:	mov    eax,0x1
  4336c6:	mov    DWORD PTR [rcx+0x10],r8d
  4336ca:	ret    
  4336cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4336d0:	xor    eax,eax
  4336d2:	ret    
  4336d3:	nop    DWORD PTR [rax]
  4336d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4336e0:	mov    eax,edx
  4336e2:	shr    eax,0x1f
  4336e5:	test   r8,r8
  4336e8:	sete   r9b
  4336ec:	or     r9b,al
  4336ef:	jne    0x433710
  4336f1:	test   rcx,rcx
  4336f4:	je     0x433710
  4336f6:	mov    DWORD PTR [rcx],0x32
  4336fc:	mov    DWORD PTR [rcx+0x8],edx
  4336ff:	mov    eax,0x1
  433704:	mov    QWORD PTR [rcx+0x10],r8
  433708:	ret    
  433709:	nop    DWORD PTR [rax+0x0]
  433710:	xor    eax,eax
  433712:	ret    
  433713:	nop    DWORD PTR [rax]
  433716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433720:	test   rcx,rcx
  433723:	je     0x433750
  433725:	test   r8,r8
  433728:	je     0x433750
  43372a:	lea    r9d,[rdx-0x1]
  43372e:	xor    eax,eax
  433730:	cmp    r9d,0x4
  433734:	ja     0x433752
  433736:	mov    DWORD PTR [rcx],0x7
  43373c:	mov    DWORD PTR [rcx+0x8],edx
  43373f:	mov    al,0x1
  433741:	mov    QWORD PTR [rcx+0x10],r8
  433745:	ret    
  433746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433750:	xor    eax,eax
  433752:	repz ret 
  433754:	xchg   ax,ax
  433756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433760:	test   rcx,rcx
  433763:	je     0x433790
  433765:	test   r8,r8
  433768:	je     0x433790
  43376a:	lea    r9d,[rdx-0x1]
  43376e:	xor    eax,eax
  433770:	cmp    r9d,0x4
  433774:	ja     0x433792
  433776:	mov    DWORD PTR [rcx],0x8
  43377c:	mov    DWORD PTR [rcx+0x8],edx
  43377f:	mov    al,0x1
  433781:	mov    QWORD PTR [rcx+0x10],r8
  433785:	ret    
  433786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433790:	xor    eax,eax
  433792:	repz ret 
  433794:	xchg   ax,ax
  433796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4337a0:	push   r13
  4337a2:	push   r12
  4337a4:	push   rbp
  4337a5:	push   rdi
  4337a6:	push   rsi
  4337a7:	push   rbx
  4337a8:	sub    rsp,0x38
  4337ac:	mov    rbx,rcx
  4337af:	mov    rcx,QWORD PTR [rcx+0x18]
  4337b3:	movsx  eax,BYTE PTR [rcx]
  4337b6:	cmp    al,0x56
  4337b8:	sete   r8b
  4337bc:	cmp    al,0x72
  4337be:	sete   dl
  4337c1:	or     r8b,dl
  4337c4:	jne    0x433841
  4337c6:	cmp    al,0x4b
  4337c8:	je     0x433841
  4337ca:	lea    edx,[rax-0x30]
  4337cd:	cmp    dl,0x4a
  4337d0:	ja     0x433832
  4337d2:	lea    r8,[rip+0x2484b]        # 0x458024
  4337d9:	movzx  edx,dl
  4337dc:	movsxd rdx,DWORD PTR [r8+rdx*4]
  4337e0:	add    r8,rdx
  4337e3:	jmp    r8
  4337e6:	mov    esi,DWORD PTR [rbx+0x54]
  4337e9:	mov    rcx,rbx
  4337ec:	mov    DWORD PTR [rbx+0x54],0x1
  4337f3:	call   0x434f70
  4337f8:	xor    r9d,r9d
  4337fb:	mov    r8,rax
  4337fe:	mov    edx,0x42
  433803:	mov    DWORD PTR [rbx+0x54],esi
  433806:	mov    rcx,rbx
  433809:	call   0x42e030
  43380e:	test   rax,rax
  433811:	mov    QWORD PTR [rsp+0x28],rax
  433816:	je     0x433832
  433818:	mov    rdx,QWORD PTR [rbx+0x18]
  43381c:	cmp    BYTE PTR [rdx],0x0
  43381f:	je     0x433832
  433821:	lea    rcx,[rdx+0x1]
  433825:	mov    QWORD PTR [rbx+0x18],rcx
  433829:	cmp    BYTE PTR [rdx],0x45
  43382c:	je     0x433919
  433832:	xor    eax,eax
  433834:	add    rsp,0x38
  433838:	pop    rbx
  433839:	pop    rsi
  43383a:	pop    rdi
  43383b:	pop    rbp
  43383c:	pop    r12
  43383e:	pop    r13
  433840:	ret    
  433841:	lea    rdx,[rsp+0x28]
  433846:	xor    r8d,r8d
  433849:	mov    rcx,rbx
  43384c:	call   0x42e110
  433851:	test   rax,rax
  433854:	mov    rsi,rax
  433857:	je     0x433832
  433859:	mov    rax,QWORD PTR [rbx+0x18]
  43385d:	mov    rcx,rbx
  433860:	cmp    BYTE PTR [rax],0x46
  433863:	je     0x4338b1
  433865:	call   0x4337a0
  43386a:	mov    QWORD PTR [rsi],rax
  43386d:	test   rax,rax
  433870:	je     0x433832
  433872:	mov    edi,DWORD PTR [rax]
  433874:	lea    ecx,[rdi-0x1f]
  433877:	cmp    ecx,0x1
  43387a:	jbe    0x4338c0
  43387c:	mov    rdx,QWORD PTR [rsp+0x28]
  433881:	test   rdx,rdx
  433884:	je     0x433832
  433886:	mov    eax,DWORD PTR [rbx+0x38]
  433889:	cmp    eax,DWORD PTR [rbx+0x3c]
  43388c:	jge    0x433832
  43388e:	mov    rcx,QWORD PTR [rbx+0x30]
  433892:	movsxd r8,eax
  433895:	add    eax,0x1
  433898:	mov    QWORD PTR [rcx+r8*8],rdx
  43389c:	mov    DWORD PTR [rbx+0x38],eax
  43389f:	mov    rax,QWORD PTR [rsp+0x28]
  4338a4:	add    rsp,0x38
  4338a8:	pop    rbx
  4338a9:	pop    rsi
  4338aa:	pop    rdi
  4338ab:	pop    rbp
  4338ac:	pop    r12
  4338ae:	pop    r13
  4338b0:	ret    
  4338b1:	call   0x434800
  4338b6:	mov    QWORD PTR [rsi],rax
  4338b9:	jmp    0x43386d
  4338bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4338c0:	mov    rcx,QWORD PTR [rsp+0x28]
  4338c5:	mov    r8,QWORD PTR [rax+0x8]
  4338c9:	mov    QWORD PTR [rax+0x8],rcx
  4338cd:	mov    rdx,QWORD PTR [rsi]
  4338d0:	mov    QWORD PTR [rsp+0x28],rdx
  4338d5:	mov    QWORD PTR [rsi],r8
  4338d8:	jmp    0x43387c
  4338da:	nop    WORD PTR [rax+rax*1+0x0]
  4338e0:	add    rcx,0x1
  4338e4:	mov    QWORD PTR [rbx+0x18],rcx
  4338e8:	mov    rcx,rbx
  4338eb:	call   0x42e730
  4338f0:	xor    r9d,r9d
  4338f3:	mov    r8,rax
  4338f6:	mov    edx,0x28
  4338fb:	mov    rcx,rbx
  4338fe:	call   0x42e030
  433903:	mov    QWORD PTR [rsp+0x28],rax
  433908:	nop    DWORD PTR [rax+rax*1+0x0]
  433910:	test   rax,rax
  433913:	je     0x433832
  433919:	mov    edx,DWORD PTR [rbx+0x38]
  43391c:	cmp    edx,DWORD PTR [rbx+0x3c]
  43391f:	jge    0x433832
  433925:	mov    rcx,QWORD PTR [rbx+0x30]
  433929:	movsxd r8,edx
  43392c:	add    edx,0x1
  43392f:	mov    QWORD PTR [rcx+r8*8],rax
  433933:	mov    rax,QWORD PTR [rsp+0x28]
  433938:	mov    DWORD PTR [rbx+0x38],edx
  43393b:	add    rsp,0x38
  43393f:	pop    rbx
  433940:	pop    rsi
  433941:	pop    rdi
  433942:	pop    rbp
  433943:	pop    r12
  433945:	pop    r13
  433947:	ret    
  433948:	nop    DWORD PTR [rax+rax*1+0x0]
  433950:	mov    rcx,rbx
  433953:	call   0x4356b0
  433958:	mov    QWORD PTR [rsp+0x28],rax
  43395d:	jmp    0x433910
  43395f:	nop
  433960:	lea    rdx,[rcx+0x1]
  433964:	mov    QWORD PTR [rbx+0x18],rdx
  433968:	movzx  eax,BYTE PTR [rcx+0x1]
  43396c:	cmp    al,0x5f
  43396e:	je     0x433fd3
  433974:	sub    eax,0x30
  433977:	cmp    al,0x9
  433979:	ja     0x434021
  43397f:	mov    r8,rdx
  433982:	add    r8,0x1
  433986:	mov    QWORD PTR [rbx+0x18],r8
  43398a:	movzx  eax,BYTE PTR [r8]
  43398e:	sub    eax,0x30
  433991:	cmp    al,0x9
  433993:	jbe    0x433982
  433995:	sub    r8d,edx
  433998:	mov    rcx,rbx
  43399b:	call   0x42e0b0
  4339a0:	test   rax,rax
  4339a3:	mov    rsi,rax
  4339a6:	je     0x4339b5
  4339a8:	mov    rdx,QWORD PTR [rbx+0x18]
  4339ac:	cmp    BYTE PTR [rdx],0x5f
  4339af:	je     0x433fd5
  4339b5:	xor    eax,eax
  4339b7:	jmp    0x433ab0
  4339bc:	nop    DWORD PTR [rax+0x0]
  4339c0:	add    rcx,0x1
  4339c4:	mov    QWORD PTR [rbx+0x18],rcx
  4339c8:	mov    rcx,rbx
  4339cb:	call   0x4337a0
  4339d0:	xor    r9d,r9d
  4339d3:	mov    r8,rax
  4339d6:	mov    edx,0x25
  4339db:	mov    rcx,rbx
  4339de:	call   0x42e030
  4339e3:	mov    QWORD PTR [rsp+0x28],rax
  4339e8:	jmp    0x433910
  4339ed:	nop    DWORD PTR [rax]
  4339f0:	mov    rcx,rbx
  4339f3:	call   0x434800
  4339f8:	mov    QWORD PTR [rsp+0x28],rax
  4339fd:	jmp    0x433910
  433a02:	add    rcx,0x1
  433a06:	mov    QWORD PTR [rbx+0x18],rcx
  433a0a:	mov    rcx,rbx
  433a0d:	call   0x4337a0
  433a12:	xor    r9d,r9d
  433a15:	mov    r8,rax
  433a18:	mov    edx,0x26
  433a1d:	mov    rcx,rbx
  433a20:	call   0x42e030
  433a25:	mov    QWORD PTR [rsp+0x28],rax
  433a2a:	jmp    0x433910
  433a2f:	nop
  433a30:	lea    rax,[rcx+0x1]
  433a34:	mov    QWORD PTR [rbx+0x18],rax
  433a38:	cmp    BYTE PTR [rcx+0x1],0x0
  433a3c:	je     0x433832
  433a42:	lea    rax,[rcx+0x2]
  433a46:	mov    QWORD PTR [rbx+0x18],rax
  433a4a:	movzx  eax,BYTE PTR [rcx+0x1]
  433a4e:	sub    eax,0x46
  433a51:	cmp    al,0x30
  433a53:	ja     0x433832
  433a59:	lea    rdx,[rip+0x246f0]        # 0x458150
  433a60:	movzx  eax,al
  433a63:	movsxd rax,DWORD PTR [rdx+rax*4]
  433a67:	add    rdx,rax
  433a6a:	jmp    rdx
  433a6c:	nop    DWORD PTR [rax+0x0]
  433a70:	add    rcx,0x1
  433a74:	mov    QWORD PTR [rbx+0x18],rcx
  433a78:	mov    rcx,rbx
  433a7b:	call   0x4337a0
  433a80:	test   rax,rax
  433a83:	mov    rsi,rax
  433a86:	je     0x4339b5
  433a8c:	mov    rcx,rbx
  433a8f:	call   0x4337a0
  433a94:	test   rax,rax
  433a97:	mov    r9,rax
  433a9a:	je     0x4339b5
  433aa0:	mov    r8,rsi
  433aa3:	mov    edx,0x2b
  433aa8:	mov    rcx,rbx
  433aab:	call   0x42e030
  433ab0:	mov    QWORD PTR [rsp+0x28],rax
  433ab5:	jmp    0x433910
  433aba:	nop    WORD PTR [rax+rax*1+0x0]
  433ac0:	add    rcx,0x1
  433ac4:	mov    QWORD PTR [rbx+0x18],rcx
  433ac8:	mov    rcx,rbx
  433acb:	call   0x4337a0
  433ad0:	xor    r9d,r9d
  433ad3:	mov    r8,rax
  433ad6:	mov    edx,0x24
  433adb:	mov    rcx,rbx
  433ade:	call   0x42e030
  433ae3:	mov    QWORD PTR [rsp+0x28],rax
  433ae8:	jmp    0x433910
  433aed:	nop    DWORD PTR [rax]
  433af0:	add    rcx,0x1
  433af4:	mov    QWORD PTR [rbx+0x18],rcx
  433af8:	mov    rcx,rbx
  433afb:	call   0x4337a0
  433b00:	xor    r9d,r9d
  433b03:	mov    r8,rax
  433b06:	mov    edx,0x22
  433b0b:	mov    rcx,rbx
  433b0e:	call   0x42e030
  433b13:	mov    QWORD PTR [rsp+0x28],rax
  433b18:	jmp    0x433910
  433b1d:	nop    DWORD PTR [rax]
  433b20:	add    rcx,0x1
  433b24:	mov    QWORD PTR [rbx+0x18],rcx
  433b28:	mov    rcx,rbx
  433b2b:	call   0x4337a0
  433b30:	xor    r9d,r9d
  433b33:	mov    r8,rax
  433b36:	mov    edx,0x23
  433b3b:	mov    rcx,rbx
  433b3e:	call   0x42e030
  433b43:	mov    QWORD PTR [rsp+0x28],rax
  433b48:	jmp    0x433910
  433b4d:	nop    DWORD PTR [rax]
  433b50:	movzx  eax,BYTE PTR [rcx+0x1]
  433b54:	lea    edx,[rax-0x30]
  433b57:	cmp    dl,0x9
  433b5a:	jbe    0x433b6b
  433b5c:	cmp    al,0x5f
  433b5e:	je     0x433b6b
  433b60:	sub    eax,0x41
  433b63:	cmp    al,0x19
  433b65:	ja     0x433ffd
  433b6b:	xor    edx,edx
  433b6d:	mov    rcx,rbx
  433b70:	call   0x42e290
  433b75:	mov    rdx,QWORD PTR [rbx+0x18]
  433b79:	mov    QWORD PTR [rsp+0x28],rax
  433b7e:	cmp    BYTE PTR [rdx],0x49
  433b81:	jne    0x433834
  433b87:	mov    rcx,rbx
  433b8a:	call   0x435570
  433b8f:	mov    r8,QWORD PTR [rsp+0x28]
  433b94:	mov    r9,rax
  433b97:	mov    edx,0x4
  433b9c:	mov    rcx,rbx
  433b9f:	call   0x42e030
  433ba4:	jmp    0x433ab0
  433ba9:	nop    DWORD PTR [rax+0x0]
  433bb0:	add    rcx,0x1
  433bb4:	mov    QWORD PTR [rbx+0x18],rcx
  433bb8:	mov    rcx,rbx
  433bbb:	call   0x42e730
  433bc0:	mov    rcx,rbx
  433bc3:	mov    rsi,rax
  433bc6:	mov    QWORD PTR [rsp+0x28],rax
  433bcb:	call   0x4337a0
  433bd0:	mov    r9,rsi
  433bd3:	mov    r8,rax
  433bd6:	mov    edx,0x21
  433bdb:	mov    rcx,rbx
  433bde:	call   0x42e030
  433be3:	mov    QWORD PTR [rsp+0x28],rax
  433be8:	jmp    0x433910
  433bed:	nop    DWORD PTR [rax]
  433bf0:	sub    eax,0x61
  433bf3:	lea    rdx,[rip+0x24c86]        # 0x458880
  433bfa:	mov    r8d,DWORD PTR [rbx+0x28]
  433bfe:	cdqe   
  433c00:	shl    rax,0x5
  433c04:	add    rdx,rax
  433c07:	cmp    r8d,DWORD PTR [rbx+0x2c]
  433c0b:	jge    0x433fc0
  433c11:	movsxd rax,r8d
  433c14:	add    r8d,0x1
  433c18:	lea    r9,[rax+rax*2]
  433c1c:	mov    rax,QWORD PTR [rbx+0x20]
  433c20:	mov    DWORD PTR [rbx+0x28],r8d
  433c24:	lea    rax,[rax+r9*8]
  433c28:	test   rax,rax
  433c2b:	je     0x433fc0
  433c31:	add    rcx,0x1
  433c35:	mov    QWORD PTR [rax+0x8],rdx
  433c39:	mov    DWORD PTR [rax],0x27
  433c3f:	mov    edx,DWORD PTR [rdx+0x8]
  433c42:	mov    QWORD PTR [rbx+0x18],rcx
  433c46:	add    DWORD PTR [rbx+0x50],edx
  433c49:	jmp    0x433834
  433c4e:	xchg   ax,ax
  433c50:	mov    rcx,rbx
  433c53:	call   0x42e680
  433c58:	mov    rsi,QWORD PTR [rbx+0x18]
  433c5c:	mov    QWORD PTR [rsp+0x28],rax
  433c61:	cmp    BYTE PTR [rsi],0x49
  433c64:	jne    0x433910
  433c6a:	mov    edx,DWORD PTR [rbx+0x58]
  433c6d:	test   edx,edx
  433c6f:	jne    0x434050
  433c75:	test   rax,rax
  433c78:	je     0x433832
  433c7e:	mov    edx,DWORD PTR [rbx+0x38]
  433c81:	cmp    edx,DWORD PTR [rbx+0x3c]
  433c84:	jge    0x433832
  433c8a:	mov    rcx,QWORD PTR [rbx+0x30]
  433c8e:	movsxd r8,edx
  433c91:	add    edx,0x1
  433c94:	mov    QWORD PTR [rcx+r8*8],rax
  433c98:	mov    DWORD PTR [rbx+0x38],edx
  433c9b:	mov    rcx,rbx
  433c9e:	call   0x435570
  433ca3:	jmp    0x433b8f
  433ca8:	mov    edx,DWORD PTR [rbx+0x28]
  433cab:	cmp    edx,DWORD PTR [rbx+0x2c]
  433cae:	jge    0x433fc0
  433cb4:	movsxd rax,edx
  433cb7:	add    edx,0x1
  433cba:	lea    rcx,[rax+rax*2]
  433cbe:	mov    rax,QWORD PTR [rbx+0x20]
  433cc2:	mov    DWORD PTR [rbx+0x28],edx
  433cc5:	lea    rax,[rax+rcx*8]
  433cc9:	test   rax,rax
  433ccc:	je     0x433fc0
  433cd2:	lea    rdi,[rip+0x24f87]        # 0x458c60
  433cd9:	mov    DWORD PTR [rax],0x27
  433cdf:	mov    QWORD PTR [rax+0x8],rdi
  433ce3:	add    DWORD PTR [rbx+0x50],0x8
  433ce7:	jmp    0x433834
  433cec:	mov    edx,DWORD PTR [rbx+0x28]
  433cef:	cmp    edx,DWORD PTR [rbx+0x2c]
  433cf2:	jge    0x433fc0
  433cf8:	movsxd rax,edx
  433cfb:	add    edx,0x1
  433cfe:	lea    rcx,[rax+rax*2]
  433d02:	mov    rax,QWORD PTR [rbx+0x20]
  433d06:	mov    DWORD PTR [rbx+0x28],edx
  433d09:	lea    rax,[rax+rcx*8]
  433d0d:	test   rax,rax
  433d10:	je     0x433fc0
  433d16:	lea    rdi,[rip+0x24f03]        # 0x458c20
  433d1d:	mov    DWORD PTR [rax],0x27
  433d23:	mov    QWORD PTR [rax+0x8],rdi
  433d27:	add    DWORD PTR [rbx+0x50],0x4
  433d2b:	jmp    0x433834
  433d30:	mov    edx,DWORD PTR [rbx+0x28]
  433d33:	cmp    edx,DWORD PTR [rbx+0x2c]
  433d36:	jge    0x433fc0
  433d3c:	movsxd rax,edx
  433d3f:	add    edx,0x1
  433d42:	lea    rcx,[rax+rax*2]
  433d46:	mov    rax,QWORD PTR [rbx+0x20]
  433d4a:	mov    DWORD PTR [rbx+0x28],edx
  433d4d:	lea    rax,[rax+rcx*8]
  433d51:	test   rax,rax
  433d54:	je     0x433fc0
  433d5a:	lea    rdi,[rip+0x24e5f]        # 0x458bc0
  433d61:	mov    DWORD PTR [rax],0x27
  433d67:	mov    QWORD PTR [rax+0x8],rdi
  433d6b:	add    DWORD PTR [rbx+0x50],0x9
  433d6f:	jmp    0x433834
  433d74:	mov    edx,DWORD PTR [rbx+0x28]
  433d77:	cmp    edx,DWORD PTR [rbx+0x2c]
  433d7a:	jge    0x433fc0
  433d80:	movsxd rax,edx
  433d83:	add    edx,0x1
  433d86:	lea    rcx,[rax+rax*2]
  433d8a:	mov    rax,QWORD PTR [rbx+0x20]
  433d8e:	mov    DWORD PTR [rbx+0x28],edx
  433d91:	lea    rax,[rax+rcx*8]
  433d95:	test   rax,rax
  433d98:	je     0x433fc0
  433d9e:	lea    rdi,[rip+0x24e5b]        # 0x458c00
  433da5:	mov    DWORD PTR [rax],0x27
  433dab:	mov    QWORD PTR [rax+0x8],rdi
  433daf:	add    DWORD PTR [rbx+0x50],0xa
  433db3:	jmp    0x433834
  433db8:	cmp    BYTE PTR [rcx+0x2],0x5f
  433dbc:	je     0x434098
  433dc2:	mov    rcx,rbx
  433dc5:	call   0x42e5e0
  433dca:	mov    rsi,rax
  433dcd:	test   rsi,rsi
  433dd0:	je     0x4339b5
  433dd6:	mov    rdx,QWORD PTR [rbx+0x18]
  433dda:	xor    eax,eax
  433ddc:	cmp    BYTE PTR [rdx],0x5f
  433ddf:	jne    0x433ab0
  433de5:	add    rdx,0x1
  433de9:	mov    rcx,rbx
  433dec:	mov    QWORD PTR [rbx+0x18],rdx
  433df0:	call   0x4337a0
  433df5:	mov    r8,rsi
  433df8:	mov    r9,rax
  433dfb:	mov    edx,0x2d
  433e00:	mov    rcx,rbx
  433e03:	call   0x42e030
  433e08:	jmp    0x433ab0
  433e0d:	mov    edx,DWORD PTR [rbx+0x28]
  433e10:	cmp    edx,DWORD PTR [rbx+0x2c]
  433e13:	jge    0x433fc0
  433e19:	movsxd rax,edx
  433e1c:	add    edx,0x1
  433e1f:	lea    rcx,[rax+rax*2]
  433e23:	mov    rax,QWORD PTR [rbx+0x20]
  433e27:	mov    DWORD PTR [rbx+0x28],edx
  433e2a:	lea    rax,[rax+rcx*8]
  433e2e:	test   rax,rax
  433e31:	je     0x433fc0
  433e37:	lea    rdi,[rip+0x24e02]        # 0x458c40
  433e3e:	mov    DWORD PTR [rax],0x27
  433e44:	mov    QWORD PTR [rax+0x8],rdi
  433e48:	add    DWORD PTR [rbx+0x50],0x8
  433e4c:	jmp    0x433834
  433e51:	mov    rcx,rbx
  433e54:	call   0x4337a0
  433e59:	xor    r9d,r9d
  433e5c:	mov    r8,rax
  433e5f:	mov    edx,0x4a
  433e64:	mov    rcx,rbx
  433e67:	call   0x42e030
  433e6c:	mov    QWORD PTR [rsp+0x28],rax
  433e71:	jmp    0x433910
  433e76:	mov    edx,DWORD PTR [rbx+0x28]
  433e79:	cmp    edx,DWORD PTR [rbx+0x2c]
  433e7c:	jge    0x433fc0
  433e82:	movsxd rax,edx
  433e85:	add    edx,0x1
  433e88:	lea    rcx,[rax+rax*2]
  433e8c:	mov    rax,QWORD PTR [rbx+0x20]
  433e90:	mov    DWORD PTR [rbx+0x28],edx
  433e93:	lea    rax,[rax+rcx*8]
  433e97:	test   rax,rax
  433e9a:	je     0x433fc0
  433ea0:	lea    rdi,[rip+0x24dd9]        # 0x458c80
  433ea7:	mov    DWORD PTR [rax],0x27
  433ead:	mov    QWORD PTR [rax+0x8],rdi
  433eb1:	add    DWORD PTR [rbx+0x50],0x11
  433eb5:	jmp    0x433834
  433eba:	mov    edx,DWORD PTR [rbx+0x28]
  433ebd:	cmp    edx,DWORD PTR [rbx+0x2c]
  433ec0:	jge    0x433fc0
  433ec6:	movsxd rax,edx
  433ec9:	add    edx,0x1
  433ecc:	lea    rcx,[rax+rax*2]
  433ed0:	mov    rax,QWORD PTR [rbx+0x20]
  433ed4:	mov    DWORD PTR [rbx+0x28],edx
  433ed7:	lea    rax,[rax+rcx*8]
  433edb:	test   rax,rax
  433ede:	je     0x433fc0
  433ee4:	lea    rdi,[rip+0x24cf5]        # 0x458be0
  433eeb:	mov    DWORD PTR [rax],0x27
  433ef1:	mov    QWORD PTR [rax+0x8],rdi
  433ef5:	add    DWORD PTR [rbx+0x50],0x9
  433ef9:	jmp    0x433834
  433efe:	lea    rdx,[rip+0x2411a]        # 0x45801f
  433f05:	mov    r8d,0x4
  433f0b:	mov    rcx,rbx
  433f0e:	call   0x42e0b0
  433f13:	jmp    0x433834
  433f18:	mov    eax,DWORD PTR [rbx+0x28]
  433f1b:	cmp    eax,DWORD PTR [rbx+0x2c]
  433f1e:	jge    0x43408b
  433f24:	movsxd rdx,eax
  433f27:	add    eax,0x1
  433f2a:	lea    r8,[rdx+rdx*2]
  433f2e:	mov    rdx,QWORD PTR [rbx+0x20]
  433f32:	mov    DWORD PTR [rbx+0x28],eax
  433f35:	lea    rdx,[rdx+r8*8]
  433f39:	mov    QWORD PTR [rsp+0x28],rdx
  433f3e:	mov    DWORD PTR [rdx],0x2c
  433f44:	movzx  eax,BYTE PTR [rcx+0x2]
  433f48:	sub    eax,0x30
  433f4b:	cmp    al,0x9
  433f4d:	setbe  al
  433f50:	movzx  ecx,al
  433f53:	test   al,al
  433f55:	mov    WORD PTR [rdx+0x10],cx
  433f59:	je     0x433f64
  433f5b:	lea    rcx,[rbx+0x18]
  433f5f:	call   0x42e560
  433f64:	mov    rsi,QWORD PTR [rsp+0x28]
  433f69:	mov    rcx,rbx
  433f6c:	call   0x4337a0
  433f71:	mov    QWORD PTR [rsi+0x8],rax
  433f75:	mov    rax,QWORD PTR [rsp+0x28]
  433f7a:	cmp    QWORD PTR [rax+0x8],0x0
  433f7f:	je     0x433832
  433f85:	lea    rcx,[rbx+0x18]
  433f89:	call   0x42e560
  433f8e:	mov    rax,QWORD PTR [rbx+0x18]
  433f92:	xor    edx,edx
  433f94:	cmp    BYTE PTR [rax],0x0
  433f97:	je     0x433fa9
  433f99:	lea    rdx,[rax+0x1]
  433f9d:	mov    QWORD PTR [rbx+0x18],rdx
  433fa1:	xor    edx,edx
  433fa3:	cmp    BYTE PTR [rax],0x73
  433fa6:	sete   dl
  433fa9:	mov    rax,QWORD PTR [rsp+0x28]
  433fae:	mov    WORD PTR [rax+0x12],dx
  433fb2:	jmp    0x433834
  433fb7:	nop    WORD PTR [rax+rax*1+0x0]
  433fc0:	mov    QWORD PTR [rsp+0x28],0x0
  433fc9:	mov    rax,QWORD PTR ds:0x8
  433fd1:	ud2    
  433fd3:	xor    esi,esi
  433fd5:	add    rdx,0x1
  433fd9:	mov    rcx,rbx
  433fdc:	mov    QWORD PTR [rbx+0x18],rdx
  433fe0:	call   0x4337a0
  433fe5:	mov    r8,rsi
  433fe8:	mov    r9,rax
  433feb:	mov    edx,0x2a
  433ff0:	mov    rcx,rbx
  433ff3:	call   0x42e030
  433ff8:	jmp    0x433ab0
  433ffd:	mov    rcx,rbx
  434000:	call   0x4356b0
  434005:	test   rax,rax
  434008:	mov    QWORD PTR [rsp+0x28],rax
  43400d:	je     0x433832
  434013:	cmp    DWORD PTR [rax],0x18
  434016:	jne    0x433919
  43401c:	jmp    0x433834
  434021:	mov    edi,DWORD PTR [rbx+0x54]
  434024:	mov    rcx,rbx
  434027:	mov    DWORD PTR [rbx+0x54],0x1
  43402e:	call   0x434f70
  434033:	test   rax,rax
  434036:	mov    rsi,rax
  434039:	mov    DWORD PTR [rbx+0x54],edi
  43403c:	jne    0x4339a8
  434042:	xor    eax,eax
  434044:	jmp    0x433ab0
  434049:	nop    DWORD PTR [rax+0x0]
  434050:	mov    rcx,rbx
  434053:	mov    r13d,DWORD PTR [rbx+0x28]
  434057:	mov    r12d,DWORD PTR [rbx+0x38]
  43405b:	mov    ebp,DWORD PTR [rbx+0x40]
  43405e:	mov    edi,DWORD PTR [rbx+0x50]
  434061:	call   0x435570
  434066:	mov    rdx,QWORD PTR [rbx+0x18]
  43406a:	cmp    BYTE PTR [rdx],0x49
  43406d:	je     0x4340bd
  43406f:	mov    QWORD PTR [rbx+0x18],rsi
  434073:	mov    DWORD PTR [rbx+0x28],r13d
  434077:	mov    DWORD PTR [rbx+0x38],r12d
  43407b:	mov    DWORD PTR [rbx+0x40],ebp
  43407e:	mov    DWORD PTR [rbx+0x50],edi
  434081:	mov    rax,QWORD PTR [rsp+0x28]
  434086:	jmp    0x433910
  43408b:	mov    DWORD PTR ds:0x0,0x0
  434096:	ud2    
  434098:	mov    edi,DWORD PTR [rbx+0x54]
  43409b:	add    rcx,0x3
  43409f:	mov    DWORD PTR [rbx+0x54],0x1
  4340a6:	mov    QWORD PTR [rbx+0x18],rcx
  4340aa:	mov    rcx,rbx
  4340ad:	call   0x434f70
  4340b2:	mov    DWORD PTR [rbx+0x54],edi
  4340b5:	mov    rsi,rax
  4340b8:	jmp    0x433dcd
  4340bd:	mov    rcx,QWORD PTR [rsp+0x28]
  4340c2:	test   rcx,rcx
  4340c5:	je     0x433832
  4340cb:	mov    edx,DWORD PTR [rbx+0x38]
  4340ce:	cmp    edx,DWORD PTR [rbx+0x3c]
  4340d1:	jge    0x433832
  4340d7:	mov    r8,QWORD PTR [rbx+0x30]
  4340db:	movsxd r9,edx
  4340de:	add    edx,0x1
  4340e1:	mov    QWORD PTR [r8+r9*8],rcx
  4340e5:	mov    DWORD PTR [rbx+0x38],edx
  4340e8:	jmp    0x433b8f
  4340ed:	nop    DWORD PTR [rax]
  4340f0:	push   rdi
  4340f1:	push   rsi
  4340f2:	push   rbx
  4340f3:	sub    rsp,0x20
  4340f7:	mov    rax,QWORD PTR [rcx+0x18]
  4340fb:	cmp    BYTE PTR [rax],0x0
  4340fe:	je     0x434190
  434104:	lea    rdx,[rax+0x1]
  434108:	mov    QWORD PTR [rcx+0x18],rdx
  43410c:	cmp    BYTE PTR [rax+0x1],0x0
  434110:	movzx  ebx,BYTE PTR [rax]
  434113:	je     0x434200
  434119:	lea    rdx,[rax+0x2]
  43411d:	cmp    bl,0x76
  434120:	mov    rdi,rcx
  434123:	mov    QWORD PTR [rcx+0x18],rdx
  434127:	movzx  esi,BYTE PTR [rax+0x1]
  43412b:	jne    0x434204
  434131:	lea    eax,[rsi-0x30]
  434134:	cmp    al,0x9
  434136:	ja     0x434194
  434138:	call   0x42e730
  43413d:	mov    ecx,DWORD PTR [rdi+0x28]
  434140:	cmp    ecx,DWORD PTR [rdi+0x2c]
  434143:	jge    0x4341f3
  434149:	movsxd rdx,ecx
  43414c:	add    ecx,0x1
  43414f:	test   rax,rax
  434152:	lea    r8,[rdx+rdx*2]
  434156:	mov    rdx,QWORD PTR [rdi+0x20]
  43415a:	mov    DWORD PTR [rdi+0x28],ecx
  43415d:	lea    rdx,[rdx+r8*8]
  434161:	je     0x4341f3
  434167:	test   rdx,rdx
  43416a:	je     0x4341f3
  434170:	movsx  ecx,sil
  434174:	mov    QWORD PTR [rdx+0x10],rax
  434178:	mov    DWORD PTR [rdx],0x32
  43417e:	sub    ecx,0x30
  434181:	mov    rax,rdx
  434184:	mov    DWORD PTR [rdx+0x8],ecx
  434187:	jmp    0x4341f5
  434189:	nop    DWORD PTR [rax+0x0]
  434190:	xor    esi,esi
  434192:	xor    ebx,ebx
  434194:	mov    r9d,0x3d
  43419a:	xor    edx,edx
  43419c:	lea    rdi,[rip+0x24c9d]        # 0x458e40
  4341a3:	jmp    0x4341b2
  4341a5:	cmp    r8b,bl
  4341a8:	jle    0x4341eb
  4341aa:	mov    r9d,eax
  4341ad:	cmp    edx,r9d
  4341b0:	je     0x4341f3
  4341b2:	mov    eax,r9d
  4341b5:	sub    eax,edx
  4341b7:	mov    r8d,eax
  4341ba:	shr    r8d,0x1f
  4341be:	add    eax,r8d
  4341c1:	sar    eax,1
  4341c3:	add    eax,edx
  4341c5:	movsxd r8,eax
  4341c8:	lea    r8,[r8+r8*2]
  4341cc:	lea    r11,[rdi+r8*8]
  4341d0:	mov    r10,QWORD PTR [r11]
  4341d3:	movzx  r8d,BYTE PTR [r10]
  4341d7:	cmp    bl,r8b
  4341da:	jne    0x4341a5
  4341dc:	movzx  r8d,BYTE PTR [r10+0x1]
  4341e1:	cmp    sil,r8b
  4341e4:	je     0x434260
  4341e6:	cmp    r8b,sil
  4341e9:	jg     0x4341aa
  4341eb:	lea    edx,[rax+0x1]
  4341ee:	cmp    edx,r9d
  4341f1:	jne    0x4341b2
  4341f3:	xor    eax,eax
  4341f5:	add    rsp,0x20
  4341f9:	pop    rbx
  4341fa:	pop    rsi
  4341fb:	pop    rdi
  4341fc:	ret    
  4341fd:	nop    DWORD PTR [rax]
  434200:	xor    esi,esi
  434202:	jmp    0x434194
  434204:	cmp    sil,0x76
  434208:	jne    0x434194
  43420e:	cmp    bl,0x63
  434211:	jne    0x434194
  434217:	mov    edx,DWORD PTR [rcx+0x54]
  43421a:	xor    eax,eax
  43421c:	mov    ebx,DWORD PTR [rcx+0x58]
  43421f:	test   edx,edx
  434221:	sete   al
  434224:	mov    DWORD PTR [rcx+0x58],eax
  434227:	call   0x4337a0
  43422c:	mov    ecx,DWORD PTR [rdi+0x58]
  43422f:	xor    r9d,r9d
  434232:	mov    r8,rax
  434235:	test   ecx,ecx
  434237:	jne    0x434251
  434239:	mov    edx,0x33
  43423e:	mov    rcx,rdi
  434241:	call   0x42e030
  434246:	mov    DWORD PTR [rdi+0x58],ebx
  434249:	add    rsp,0x20
  43424d:	pop    rbx
  43424e:	pop    rsi
  43424f:	pop    rdi
  434250:	ret    
  434251:	mov    edx,0x34
  434256:	mov    rcx,rdi
  434259:	call   0x42e030
  43425e:	jmp    0x434246
  434260:	mov    edx,DWORD PTR [rcx+0x28]
  434263:	cmp    edx,DWORD PTR [rcx+0x2c]
  434266:	jge    0x4341f3
  434268:	movsxd rax,edx
  43426b:	add    edx,0x1
  43426e:	lea    r8,[rax+rax*2]
  434272:	mov    rax,QWORD PTR [rcx+0x20]
  434276:	mov    DWORD PTR [rcx+0x28],edx
  434279:	lea    rax,[rax+r8*8]
  43427d:	test   rax,rax
  434280:	je     0x4341f3
  434286:	mov    DWORD PTR [rax],0x31
  43428c:	mov    QWORD PTR [rax+0x8],r11
  434290:	add    rsp,0x20
  434294:	pop    rbx
  434295:	pop    rsi
  434296:	pop    rdi
  434297:	ret    
  434298:	nop    DWORD PTR [rax+rax*1+0x0]
  4342a0:	push   rsi
  4342a1:	push   rbx
  4342a2:	sub    rsp,0x38
  4342a6:	mov    rdx,QWORD PTR [rcx+0x18]
  4342aa:	mov    QWORD PTR [rsp+0x28],0x0
  4342b3:	movzx  eax,BYTE PTR [rdx]
  4342b6:	cmp    al,0x45
  4342b8:	sete   r9b
  4342bc:	test   al,al
  4342be:	sete   r8b
  4342c2:	or     r9b,r8b
  4342c5:	jne    0x43432a
  4342c7:	cmp    al,0x2e
  4342c9:	je     0x43432a
  4342cb:	mov    rbx,rcx
  4342ce:	lea    rsi,[rsp+0x28]
  4342d3:	jmp    0x43430c
  4342d5:	xor    r9d,r9d
  4342d8:	mov    edx,0x2e
  4342dd:	mov    rcx,rbx
  4342e0:	call   0x42e030
  4342e5:	test   rax,rax
  4342e8:	mov    QWORD PTR [rsi],rax
  4342eb:	je     0x43432a
  4342ed:	mov    rdx,QWORD PTR [rbx+0x18]
  4342f1:	lea    rsi,[rax+0x10]
  4342f5:	movzx  eax,BYTE PTR [rdx]
  4342f8:	cmp    al,0x45
  4342fa:	sete   r8b
  4342fe:	test   al,al
  434300:	sete   cl
  434303:	or     r8b,cl
  434306:	jne    0x434333
  434308:	cmp    al,0x2e
  43430a:	je     0x434333
  43430c:	cmp    al,0x4f
  43430e:	je     0x434314
  434310:	cmp    al,0x52
  434312:	jne    0x43431a
  434314:	cmp    BYTE PTR [rdx+0x1],0x45
  434318:	je     0x434333
  43431a:	mov    rcx,rbx
  43431d:	call   0x4337a0
  434322:	test   rax,rax
  434325:	mov    r8,rax
  434328:	jne    0x4342d5
  43432a:	xor    eax,eax
  43432c:	add    rsp,0x38
  434330:	pop    rbx
  434331:	pop    rsi
  434332:	ret    
  434333:	mov    rax,QWORD PTR [rsp+0x28]
  434338:	test   rax,rax
  43433b:	je     0x43432a
  43433d:	cmp    QWORD PTR [rax+0x10],0x0
  434342:	jne    0x43432c
  434344:	mov    rdx,QWORD PTR [rax+0x8]
  434348:	cmp    DWORD PTR [rdx],0x27
  43434b:	jne    0x43432c
  43434d:	mov    rdx,QWORD PTR [rdx+0x8]
  434351:	cmp    DWORD PTR [rdx+0x1c],0x9
  434355:	jne    0x43432c
  434357:	mov    edx,DWORD PTR [rdx+0x8]
  43435a:	sub    DWORD PTR [rbx+0x50],edx
  43435d:	mov    QWORD PTR [rax+0x8],0x0
  434365:	jmp    0x43432c
  434367:	nop    WORD PTR [rax+rax*1+0x0]
  434370:	push   rbp
  434371:	push   rdi
  434372:	push   rsi
  434373:	push   rbx
  434374:	sub    rsp,0x28
  434378:	mov    r8,QWORD PTR [rcx+0x18]
  43437c:	mov    rbx,rcx
  43437f:	movzx  eax,BYTE PTR [r8]
  434383:	lea    edx,[rax-0x30]
  434386:	cmp    dl,0x9
  434389:	jbe    0x434440
  43438f:	lea    edx,[rax-0x61]
  434392:	cmp    dl,0x19
  434395:	jbe    0x434491
  43439b:	lea    edx,[rax-0x43]
  43439e:	cmp    dl,0x1
  4343a1:	jbe    0x434570
  4343a7:	cmp    al,0x4c
  4343a9:	je     0x4345e0
  4343af:	cmp    al,0x55
  4343b1:	jne    0x4345d1
  4343b7:	movzx  eax,BYTE PTR [r8+0x1]
  4343bc:	cmp    al,0x6c
  4343be:	je     0x4344b0
  4343c4:	cmp    al,0x74
  4343c6:	jne    0x4345d1
  4343cc:	lea    rdx,[r8+0x1]
  4343d0:	xor    ebp,ebp
  4343d2:	mov    QWORD PTR [rcx+0x18],rdx
  4343d6:	movzx  ecx,BYTE PTR [r8+0x1]
  4343db:	cmp    cl,0x74
  4343de:	jne    0x43444f
  4343e0:	add    r8,0x2
  4343e4:	mov    rcx,rbx
  4343e7:	mov    QWORD PTR [rbx+0x18],r8
  4343eb:	call   0x42e630
  4343f0:	test   eax,eax
  4343f2:	js     0x4344a7
  4343f8:	mov    edx,DWORD PTR [rbx+0x28]
  4343fb:	cmp    edx,DWORD PTR [rbx+0x2c]
  4343fe:	jge    0x434430
  434400:	movsxd rcx,edx
  434403:	add    edx,0x1
  434406:	lea    r8,[rcx+rcx*2]
  43440a:	mov    rcx,QWORD PTR [rbx+0x20]
  43440e:	mov    DWORD PTR [rbx+0x28],edx
  434411:	lea    rbp,[rcx+r8*8]
  434415:	test   rbp,rbp
  434418:	je     0x434430
  43441a:	mov    DWORD PTR [rbp+0x8],eax
  43441d:	mov    eax,DWORD PTR [rbx+0x38]
  434420:	cmp    eax,DWORD PTR [rbx+0x3c]
  434423:	mov    DWORD PTR [rbp+0x0],0x47
  43442a:	jl     0x43454c
  434430:	mov    rdx,QWORD PTR [rbx+0x18]
  434434:	xor    ebp,ebp
  434436:	movzx  ecx,BYTE PTR [rdx]
  434439:	jmp    0x43444f
  43443b:	nop    DWORD PTR [rax+rax*1+0x0]
  434440:	call   0x42e730
  434445:	mov    rdx,QWORD PTR [rbx+0x18]
  434449:	mov    rbp,rax
  43444c:	movzx  ecx,BYTE PTR [rdx]
  43444f:	cmp    cl,0x42
  434452:	mov    rax,rbp
  434455:	je     0x434460
  434457:	add    rsp,0x28
  43445b:	pop    rbx
  43445c:	pop    rsi
  43445d:	pop    rdi
  43445e:	pop    rbp
  43445f:	ret    
  434460:	add    rdx,0x1
  434464:	mov    rcx,rbx
  434467:	mov    QWORD PTR [rbx+0x18],rdx
  43446b:	call   0x42e730
  434470:	mov    r8,rbp
  434473:	mov    edx,0x4b
  434478:	mov    r9,rax
  43447b:	mov    rcx,rbx
  43447e:	call   0x42e030
  434483:	mov    rdx,QWORD PTR [rbx+0x18]
  434487:	mov    rbp,rax
  43448a:	cmp    BYTE PTR [rdx],0x42
  43448d:	je     0x434460
  43448f:	jmp    0x434457
  434491:	call   0x4340f0
  434496:	test   rax,rax
  434499:	mov    rbp,rax
  43449c:	je     0x4344a7
  43449e:	cmp    DWORD PTR [rax],0x31
  4344a1:	je     0x434610
  4344a7:	mov    rdx,QWORD PTR [rbx+0x18]
  4344ab:	movzx  ecx,BYTE PTR [rdx]
  4344ae:	jmp    0x43444f
  4344b0:	lea    rdx,[r8+0x1]
  4344b4:	xor    ebp,ebp
  4344b6:	mov    QWORD PTR [rcx+0x18],rdx
  4344ba:	movzx  ecx,BYTE PTR [r8+0x1]
  4344bf:	cmp    cl,0x6c
  4344c2:	jne    0x43444f
  4344c4:	add    r8,0x2
  4344c8:	mov    rcx,rbx
  4344cb:	mov    QWORD PTR [rbx+0x18],r8
  4344cf:	call   0x4342a0
  4344d4:	mov    rdx,QWORD PTR [rbx+0x18]
  4344d8:	test   rax,rax
  4344db:	mov    rsi,rax
  4344de:	movzx  ecx,BYTE PTR [rdx]
  4344e1:	je     0x43444f
  4344e7:	cmp    cl,0x45
  4344ea:	jne    0x43444f
  4344f0:	add    rdx,0x1
  4344f4:	mov    rcx,rbx
  4344f7:	mov    QWORD PTR [rbx+0x18],rdx
  4344fb:	call   0x42e630
  434500:	test   eax,eax
  434502:	js     0x434430
  434508:	mov    edx,DWORD PTR [rbx+0x28]
  43450b:	cmp    edx,DWORD PTR [rbx+0x2c]
  43450e:	jge    0x434430
  434514:	movsxd rcx,edx
  434517:	add    edx,0x1
  43451a:	lea    r8,[rcx+rcx*2]
  43451e:	mov    rcx,QWORD PTR [rbx+0x20]
  434522:	mov    DWORD PTR [rbx+0x28],edx
  434525:	lea    rbp,[rcx+r8*8]
  434529:	test   rbp,rbp
  43452c:	je     0x434430
  434532:	mov    QWORD PTR [rbp+0x8],rsi
  434536:	mov    DWORD PTR [rbp+0x10],eax
  434539:	mov    eax,DWORD PTR [rbx+0x38]
  43453c:	cmp    eax,DWORD PTR [rbx+0x3c]
  43453f:	mov    DWORD PTR [rbp+0x0],0x45
  434546:	jge    0x434430
  43454c:	mov    rdx,QWORD PTR [rbx+0x30]
  434550:	movsxd rcx,eax
  434553:	add    eax,0x1
  434556:	mov    QWORD PTR [rdx+rcx*8],rbp
  43455a:	mov    rdx,QWORD PTR [rbx+0x18]
  43455e:	mov    DWORD PTR [rbx+0x38],eax
  434561:	movzx  ecx,BYTE PTR [rdx]
  434564:	jmp    0x43444f
  434569:	nop    DWORD PTR [rax+0x0]
  434570:	mov    r9,QWORD PTR [rcx+0x48]
  434574:	test   r9,r9
  434577:	je     0x4345c5
  434579:	mov    edx,DWORD PTR [r9]
  43457c:	test   edx,edx
  43457e:	jne    0x4345c0
  434580:	mov    eax,DWORD PTR [r9+0x10]
  434584:	add    DWORD PTR [rbx+0x50],eax
  434587:	movzx  ecx,BYTE PTR [r8]
  43458b:	cmp    cl,0x43
  43458e:	je     0x4346f0
  434594:	cmp    cl,0x44
  434597:	jne    0x4346e0
  43459d:	movzx  eax,BYTE PTR [r8+0x1]
  4345a2:	sub    eax,0x30
  4345a5:	cmp    al,0x5
  4345a7:	ja     0x4345d1
  4345a9:	lea    rdx,[rip+0x23c68]        # 0x458218
  4345b0:	movzx  eax,al
  4345b3:	movsxd rax,DWORD PTR [rdx+rax*4]
  4345b7:	add    rdx,rax
  4345ba:	jmp    rdx
  4345bc:	nop    DWORD PTR [rax+0x0]
  4345c0:	cmp    edx,0x18
  4345c3:	je     0x434580
  4345c5:	cmp    al,0x43
  4345c7:	je     0x4346f0
  4345cd:	cmp    al,0x44
  4345cf:	je     0x43459d
  4345d1:	xor    eax,eax
  4345d3:	add    rsp,0x28
  4345d7:	pop    rbx
  4345d8:	pop    rsi
  4345d9:	pop    rdi
  4345da:	pop    rbp
  4345db:	ret    
  4345dc:	nop    DWORD PTR [rax+0x0]
  4345e0:	add    r8,0x1
  4345e4:	mov    QWORD PTR [rcx+0x18],r8
  4345e8:	call   0x42e730
  4345ed:	test   rax,rax
  4345f0:	mov    rbp,rax
  4345f3:	je     0x4345d1
  4345f5:	mov    rcx,rbx
  4345f8:	call   0x42e6f0
  4345fd:	test   eax,eax
  4345ff:	jne    0x4344a7
  434605:	jmp    0x4345d1
  434607:	nop    WORD PTR [rax+rax*1+0x0]
  434610:	mov    rdx,QWORD PTR [rax+0x8]
  434614:	lea    rdi,[rip+0x23bf9]        # 0x458214
  43461b:	mov    ecx,0x3
  434620:	mov    eax,DWORD PTR [rdx+0x10]
  434623:	add    eax,DWORD PTR [rbx+0x50]
  434626:	mov    rsi,QWORD PTR [rdx]
  434629:	add    eax,0x7
  43462c:	mov    DWORD PTR [rbx+0x50],eax
  43462f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  434631:	jne    0x4344a7
  434637:	mov    rcx,rbx
  43463a:	call   0x42e730
  43463f:	mov    r8,rbp
  434642:	mov    r9,rax
  434645:	mov    edx,0x36
  43464a:	mov    rcx,rbx
  43464d:	call   0x42e030
  434652:	mov    rbp,rax
  434655:	jmp    0x4344a7
  43465a:	mov    r10d,0x1
  434660:	mov    eax,DWORD PTR [rbx+0x28]
  434663:	cmp    eax,DWORD PTR [rbx+0x2c]
  434666:	lea    rdx,[r8+0x2]
  43466a:	mov    QWORD PTR [rbx+0x18],rdx
  43466e:	jge    0x4346d0
  434670:	movsxd rcx,eax
  434673:	add    eax,0x1
  434676:	lea    r11,[rcx+rcx*2]
  43467a:	mov    rcx,QWORD PTR [rbx+0x20]
  43467e:	mov    DWORD PTR [rbx+0x28],eax
  434681:	lea    rbp,[rcx+r11*8]
  434685:	test   rbp,rbp
  434688:	je     0x4346d0
  43468a:	test   r9,r9
  43468d:	je     0x4346d0
  43468f:	mov    DWORD PTR [rbp+0x0],0x8
  434696:	mov    DWORD PTR [rbp+0x8],r10d
  43469a:	mov    QWORD PTR [rbp+0x10],r9
  43469e:	movzx  ecx,BYTE PTR [r8+0x2]
  4346a3:	jmp    0x43444f
  4346a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4346b0:	mov    r10d,0x2
  4346b6:	jmp    0x434660
  4346b8:	mov    r10d,0x4
  4346be:	jmp    0x434660
  4346c0:	mov    r10d,0x5
  4346c6:	jmp    0x434660
  4346c8:	mov    r10d,0x3
  4346ce:	jmp    0x434660
  4346d0:	movzx  ecx,BYTE PTR [r8+0x2]
  4346d5:	xor    ebp,ebp
  4346d7:	jmp    0x43444f
  4346dc:	nop    DWORD PTR [rax+0x0]
  4346e0:	mov    rdx,r8
  4346e3:	xor    ebp,ebp
  4346e5:	jmp    0x43444f
  4346ea:	nop    WORD PTR [rax+rax*1+0x0]
  4346f0:	movzx  eax,BYTE PTR [r8+0x1]
  4346f5:	sub    eax,0x31
  4346f8:	cmp    al,0x4
  4346fa:	ja     0x4345d1
  434700:	lea    rdx,[rip+0x23b29]        # 0x458230
  434707:	movzx  eax,al
  43470a:	movsxd rax,DWORD PTR [rdx+rax*4]
  43470e:	add    rdx,rax
  434711:	jmp    rdx
  434713:	mov    r10d,0x1
  434719:	mov    eax,DWORD PTR [rbx+0x28]
  43471c:	cmp    eax,DWORD PTR [rbx+0x2c]
  43471f:	lea    rdx,[r8+0x2]
  434723:	mov    QWORD PTR [rbx+0x18],rdx
  434727:	jge    0x4346d0
  434729:	movsxd rcx,eax
  43472c:	add    eax,0x1
  43472f:	lea    r11,[rcx+rcx*2]
  434733:	mov    rcx,QWORD PTR [rbx+0x20]
  434737:	mov    DWORD PTR [rbx+0x28],eax
  43473a:	lea    rbp,[rcx+r11*8]
  43473e:	test   rbp,rbp
  434741:	je     0x4346d0
  434743:	test   r9,r9
  434746:	je     0x4346d0
  434748:	mov    DWORD PTR [rbp+0x0],0x7
  43474f:	mov    DWORD PTR [rbp+0x8],r10d
  434753:	mov    QWORD PTR [rbp+0x10],r9
  434757:	movzx  ecx,BYTE PTR [r8+0x2]
  43475c:	jmp    0x43444f
  434761:	mov    r10d,0x5
  434767:	jmp    0x434719
  434769:	mov    r10d,0x4
  43476f:	jmp    0x434719
  434771:	mov    r10d,0x3
  434777:	jmp    0x434719
  434779:	mov    r10d,0x2
  43477f:	jmp    0x434719
  434781:	nop    DWORD PTR [rax+rax*1+0x0]
  434786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434790:	push   rsi
  434791:	push   rbx
  434792:	sub    rsp,0x28
  434796:	mov    rax,QWORD PTR [rcx+0x18]
  43479a:	mov    rbx,rcx
  43479d:	cmp    BYTE PTR [rax],0x4a
  4347a0:	je     0x4347d0
  4347a2:	xor    esi,esi
  4347a4:	test   edx,edx
  4347a6:	jne    0x4347d8
  4347a8:	mov    rcx,rbx
  4347ab:	call   0x4342a0
  4347b0:	test   rax,rax
  4347b3:	mov    r9,rax
  4347b6:	je     0x4347f0
  4347b8:	mov    r8,rsi
  4347bb:	mov    edx,0x29
  4347c0:	mov    rcx,rbx
  4347c3:	add    rsp,0x28
  4347c7:	pop    rbx
  4347c8:	pop    rsi
  4347c9:	jmp    0x42e030
  4347ce:	xchg   ax,ax
  4347d0:	add    rax,0x1
  4347d4:	mov    QWORD PTR [rcx+0x18],rax
  4347d8:	mov    rcx,rbx
  4347db:	call   0x4337a0
  4347e0:	test   rax,rax
  4347e3:	mov    rsi,rax
  4347e6:	jne    0x4347a8
  4347e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4347f0:	xor    eax,eax
  4347f2:	add    rsp,0x28
  4347f6:	pop    rbx
  4347f7:	pop    rsi
  4347f8:	ret    
  4347f9:	nop    DWORD PTR [rax+0x0]
  434800:	push   rbx
  434801:	sub    rsp,0x20
  434805:	mov    rax,QWORD PTR [rcx+0x18]
  434809:	cmp    BYTE PTR [rax],0x46
  43480c:	je     0x434820
  43480e:	xor    eax,eax
  434810:	add    rsp,0x20
  434814:	pop    rbx
  434815:	ret    
  434816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434820:	lea    rdx,[rax+0x1]
  434824:	mov    QWORD PTR [rcx+0x18],rdx
  434828:	cmp    BYTE PTR [rax+0x1],0x59
  43482c:	jne    0x434836
  43482e:	add    rax,0x2
  434832:	mov    QWORD PTR [rcx+0x18],rax
  434836:	mov    rbx,rcx
  434839:	mov    edx,0x1
  43483e:	call   0x434790
  434843:	mov    rcx,rbx
  434846:	mov    rdx,rax
  434849:	call   0x42e230
  43484e:	mov    rdx,QWORD PTR [rbx+0x18]
  434852:	cmp    BYTE PTR [rdx],0x45
  434855:	jne    0x43480e
  434857:	add    rdx,0x1
  43485b:	mov    QWORD PTR [rbx+0x18],rdx
  43485f:	add    rsp,0x20
  434863:	pop    rbx
  434864:	ret    
  434865:	nop
  434866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434870:	push   r15
  434872:	push   r14
  434874:	push   r13
  434876:	push   r12
  434878:	push   rbp
  434879:	push   rdi
  43487a:	push   rsi
  43487b:	push   rbx
  43487c:	sub    rsp,0x48
  434880:	mov    r14d,0x3
  434886:	mov    rbx,rcx
  434889:	mov    rcx,QWORD PTR [rcx+0x18]
  43488d:	mov    r13d,edx
  434890:	mov    QWORD PTR [rsp+0x38],0x0
  434899:	lea    rbp,[rsp+0x38]
  43489e:	cmp    BYTE PTR [rcx],dl
  4348a0:	je     0x434ed0
  4348a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4348b0:	mov    r12d,DWORD PTR [rbx+0x54]
  4348b4:	mov    DWORD PTR [rbx+0x54],0x1
  4348bb:	movzx  eax,BYTE PTR [rcx]
  4348be:	cmp    al,0x4c
  4348c0:	je     0x434ac0
  4348c6:	cmp    al,0x54
  4348c8:	je     0x434ae0
  4348ce:	cmp    al,0x73
  4348d0:	je     0x4349e0
  4348d6:	cmp    al,0x66
  4348d8:	je     0x434a20
  4348de:	lea    edx,[rax-0x30]
  4348e1:	cmp    dl,0x9
  4348e4:	jbe    0x434972
  4348ea:	cmp    al,0x6f
  4348ec:	je     0x434964
  4348ee:	cmp    al,0x74
  4348f0:	sete   dl
  4348f3:	jne    0x434f59
  4348f9:	cmp    BYTE PTR [rcx+0x1],0x6c
  4348fd:	je     0x434c00
  434903:	mov    rcx,rbx
  434906:	call   0x4340f0
  43490b:	test   rax,rax
  43490e:	mov    r15,rax
  434911:	je     0x434aa2
  434917:	mov    eax,DWORD PTR [rax]
  434919:	cmp    eax,0x31
  43491c:	je     0x434af0
  434922:	cmp    eax,0x32
  434925:	je     0x434c40
  43492b:	cmp    eax,0x33
  43492e:	jne    0x434aa2
  434934:	mov    rax,QWORD PTR [rbx+0x18]
  434938:	cmp    BYTE PTR [rax],0x5f
  43493b:	je     0x434efb
  434941:	mov    rcx,rbx
  434944:	call   0x434f70
  434949:	mov    r8,r15
  43494c:	mov    r9,rax
  43494f:	mov    edx,0x36
  434954:	mov    rcx,rbx
  434957:	call   0x42e030
  43495c:	mov    r8,rax
  43495f:	jmp    0x434acb
  434964:	cmp    BYTE PTR [rcx+0x1],0x6e
  434968:	jne    0x434903
  43496a:	add    rcx,0x2
  43496e:	mov    QWORD PTR [rbx+0x18],rcx
  434972:	mov    rcx,rbx
  434975:	call   0x434370
  43497a:	test   rax,rax
  43497d:	je     0x434aa2
  434983:	mov    rdx,QWORD PTR [rbx+0x18]
  434987:	mov    r8,rax
  43498a:	cmp    BYTE PTR [rdx],0x49
  43498d:	je     0x434c80
  434993:	mov    DWORD PTR [rbx+0x54],r12d
  434997:	xor    r9d,r9d
  43499a:	mov    edx,0x2e
  43499f:	mov    rcx,rbx
  4349a2:	call   0x42e030
  4349a7:	test   rax,rax
  4349aa:	mov    QWORD PTR [rbp+0x0],rax
  4349ae:	je     0x434aa6
  4349b4:	mov    rcx,QWORD PTR [rbx+0x18]
  4349b8:	lea    rbp,[rax+0x10]
  4349bc:	cmp    BYTE PTR [rcx],r13b
  4349bf:	jne    0x4348b0
  4349c5:	add    rcx,0x1
  4349c9:	mov    rax,QWORD PTR [rsp+0x38]
  4349ce:	mov    QWORD PTR [rbx+0x18],rcx
  4349d2:	jmp    0x434aa8
  4349d7:	nop    WORD PTR [rax+rax*1+0x0]
  4349e0:	movzx  eax,BYTE PTR [rcx+0x1]
  4349e4:	cmp    al,0x72
  4349e6:	je     0x434cc0
  4349ec:	cmp    al,0x70
  4349ee:	jne    0x434903
  4349f4:	add    rcx,0x2
  4349f8:	mov    QWORD PTR [rbx+0x18],rcx
  4349fc:	mov    rcx,rbx
  4349ff:	call   0x434f70
  434a04:	xor    r9d,r9d
  434a07:	mov    r8,rax
  434a0a:	mov    edx,0x4a
  434a0f:	mov    rcx,rbx
  434a12:	call   0x42e030
  434a17:	mov    r8,rax
  434a1a:	jmp    0x434acb
  434a1f:	nop
  434a20:	cmp    BYTE PTR [rcx+0x1],0x70
  434a24:	jne    0x434903
  434a2a:	lea    rax,[rcx+0x2]
  434a2e:	mov    QWORD PTR [rbx+0x18],rax
  434a32:	cmp    BYTE PTR [rcx+0x2],0x54
  434a36:	je     0x434cb0
  434a3c:	mov    rcx,rbx
  434a3f:	call   0x42e630
  434a44:	mov    edx,eax
  434a46:	and    edx,0x7fffffff
  434a4c:	cmp    edx,0x7fffffff
  434a52:	je     0x434aa2
  434a54:	add    eax,0x1
  434a57:	mov    edx,DWORD PTR [rbx+0x28]
  434a5a:	cmp    edx,DWORD PTR [rbx+0x2c]
  434a5d:	jge    0x434aa2
  434a5f:	movsxd rcx,edx
  434a62:	add    edx,0x1
  434a65:	lea    r8,[rcx+rcx*2]
  434a69:	mov    rcx,QWORD PTR [rbx+0x20]
  434a6d:	mov    DWORD PTR [rbx+0x28],edx
  434a70:	lea    r8,[rcx+r8*8]
  434a74:	test   r8,r8
  434a77:	je     0x434aa2
  434a79:	mov    DWORD PTR [r8],0x6
  434a80:	mov    DWORD PTR [r8+0x8],eax
  434a84:	jmp    0x434993
  434a89:	mov    rcx,rbx
  434a8c:	call   0x4337a0
  434a91:	mov    rcx,QWORD PTR [rbx+0x18]
  434a95:	mov    rdi,rax
  434a98:	cmp    BYTE PTR [rcx+0x1],0x0
  434a9c:	jne    0x434c0a
  434aa2:	mov    DWORD PTR [rbx+0x54],r12d
  434aa6:	xor    eax,eax
  434aa8:	add    rsp,0x48
  434aac:	pop    rbx
  434aad:	pop    rsi
  434aae:	pop    rdi
  434aaf:	pop    rbp
  434ab0:	pop    r12
  434ab2:	pop    r13
  434ab4:	pop    r14
  434ab6:	pop    r15
  434ab8:	ret    
  434ab9:	nop    DWORD PTR [rax+0x0]
  434ac0:	mov    rcx,rbx
  434ac3:	call   0x436300
  434ac8:	mov    r8,rax
  434acb:	test   r8,r8
  434ace:	mov    DWORD PTR [rbx+0x54],r12d
  434ad2:	jne    0x434997
  434ad8:	jmp    0x434aa6
  434ada:	nop    WORD PTR [rax+rax*1+0x0]
  434ae0:	mov    rcx,rbx
  434ae3:	call   0x42e680
  434ae8:	mov    r8,rax
  434aeb:	jmp    0x434acb
  434aed:	nop    DWORD PTR [rax]
  434af0:	mov    r8,QWORD PTR [r15+0x8]
  434af4:	lea    rdi,[rip+0x23232]        # 0x457d2d
  434afb:	mov    rcx,r14
  434afe:	mov    eax,DWORD PTR [r8+0x10]
  434b02:	mov    rdx,QWORD PTR [r8]
  434b05:	sub    eax,0x2
  434b08:	add    DWORD PTR [rbx+0x50],eax
  434b0b:	mov    rsi,rdx
  434b0e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  434b10:	je     0x434e30
  434b16:	mov    eax,DWORD PTR [r8+0x14]
  434b1a:	cmp    eax,0x1
  434b1d:	je     0x434d06
  434b23:	jle    0x434c53
  434b29:	cmp    eax,0x2
  434b2c:	je     0x434d50
  434b32:	cmp    eax,0x3
  434b35:	jne    0x434aa2
  434b3b:	test   rdx,rdx
  434b3e:	je     0x434aa2
  434b44:	lea    rdi,[rip+0x231eb]        # 0x457d36
  434b4b:	mov    rsi,rdx
  434b4e:	mov    rcx,r14
  434b51:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  434b53:	je     0x434e55
  434b59:	cmp    BYTE PTR [rdx],0x6e
  434b5c:	jne    0x434aa2
  434b62:	movzx  eax,BYTE PTR [rdx+0x1]
  434b66:	cmp    al,0x61
  434b68:	je     0x434b72
  434b6a:	cmp    al,0x77
  434b6c:	jne    0x434aa2
  434b72:	mov    edx,0x5f
  434b77:	mov    rcx,rbx
  434b7a:	call   0x434870
  434b7f:	mov    rcx,rbx
  434b82:	mov    rsi,rax
  434b85:	call   0x4337a0
  434b8a:	mov    rdx,QWORD PTR [rbx+0x18]
  434b8e:	mov    rdi,rax
  434b91:	movzx  eax,BYTE PTR [rdx]
  434b94:	cmp    al,0x45
  434b96:	je     0x434f15
  434b9c:	cmp    al,0x70
  434b9e:	je     0x434f25
  434ba4:	cmp    al,0x69
  434ba6:	jne    0x434aa2
  434bac:	cmp    BYTE PTR [rdx+0x1],0x6c
  434bb0:	jne    0x434aa2
  434bb6:	mov    rcx,rbx
  434bb9:	call   0x434f70
  434bbe:	mov    r9,rax
  434bc1:	mov    r8,rdi
  434bc4:	mov    edx,0x3b
  434bc9:	mov    rcx,rbx
  434bcc:	call   0x42e030
  434bd1:	mov    r8,rsi
  434bd4:	mov    r9,rax
  434bd7:	mov    edx,0x3a
  434bdc:	mov    rcx,rbx
  434bdf:	call   0x42e030
  434be4:	mov    r8,r15
  434be7:	mov    r9,rax
  434bea:	mov    edx,0x39
  434bef:	mov    rcx,rbx
  434bf2:	call   0x42e030
  434bf7:	mov    r8,rax
  434bfa:	jmp    0x434acb
  434bff:	nop
  434c00:	xor    edi,edi
  434c02:	test   dl,dl
  434c04:	jne    0x434a89
  434c0a:	add    rcx,0x2
  434c0e:	mov    edx,0x45
  434c13:	mov    QWORD PTR [rbx+0x18],rcx
  434c17:	mov    rcx,rbx
  434c1a:	call   0x434870
  434c1f:	mov    r8,rdi
  434c22:	mov    r9,rax
  434c25:	mov    edx,0x30
  434c2a:	mov    rcx,rbx
  434c2d:	call   0x42e030
  434c32:	mov    r8,rax
  434c35:	jmp    0x434acb
  434c3a:	nop    WORD PTR [rax+rax*1+0x0]
  434c40:	mov    eax,DWORD PTR [r15+0x8]
  434c44:	cmp    eax,0x1
  434c47:	je     0x434941
  434c4d:	jg     0x434aa2
  434c53:	test   eax,eax
  434c55:	jne    0x434aa2
  434c5b:	mov    r8,r15
  434c5e:	xor    r9d,r9d
  434c61:	mov    edx,0x35
  434c66:	mov    rcx,rbx
  434c69:	call   0x42e030
  434c6e:	mov    r8,rax
  434c71:	jmp    0x434acb
  434c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434c80:	mov    rcx,rbx
  434c83:	mov    QWORD PTR [rsp+0x20],rax
  434c88:	call   0x435570
  434c8d:	mov    r8,QWORD PTR [rsp+0x20]
  434c92:	mov    r9,rax
  434c95:	mov    edx,0x4
  434c9a:	mov    rcx,rbx
  434c9d:	call   0x42e030
  434ca2:	mov    r8,rax
  434ca5:	jmp    0x434acb
  434caa:	nop    WORD PTR [rax+rax*1+0x0]
  434cb0:	add    rcx,0x3
  434cb4:	xor    eax,eax
  434cb6:	mov    QWORD PTR [rbx+0x18],rcx
  434cba:	jmp    0x434a57
  434cbf:	nop
  434cc0:	add    rcx,0x2
  434cc4:	mov    QWORD PTR [rbx+0x18],rcx
  434cc8:	mov    rcx,rbx
  434ccb:	call   0x4337a0
  434cd0:	mov    rcx,rbx
  434cd3:	mov    rsi,rax
  434cd6:	call   0x434370
  434cdb:	mov    rdx,QWORD PTR [rbx+0x18]
  434cdf:	mov    rdi,rax
  434ce2:	mov    r9,rax
  434ce5:	cmp    BYTE PTR [rdx],0x49
  434ce8:	je     0x434ead
  434cee:	mov    r8,rsi
  434cf1:	mov    edx,0x1
  434cf6:	mov    rcx,rbx
  434cf9:	call   0x42e030
  434cfe:	mov    r8,rax
  434d01:	jmp    0x434acb
  434d06:	movzx  eax,BYTE PTR [rdx]
  434d09:	cmp    al,0x6d
  434d0b:	je     0x434d15
  434d0d:	cmp    al,0x70
  434d0f:	jne    0x434941
  434d15:	cmp    al,BYTE PTR [rdx+0x1]
  434d18:	jne    0x434941
  434d1e:	mov    rax,QWORD PTR [rbx+0x18]
  434d22:	cmp    BYTE PTR [rax],0x5f
  434d25:	je     0x434f4c
  434d2b:	mov    rcx,rbx
  434d2e:	call   0x434f70
  434d33:	mov    edx,0x38
  434d38:	mov    r8,rax
  434d3b:	mov    r9,rax
  434d3e:	mov    rcx,rbx
  434d41:	call   0x42e030
  434d46:	jmp    0x434949
  434d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  434d50:	test   rdx,rdx
  434d53:	je     0x434aa2
  434d59:	mov    rax,QWORD PTR [r15+0x8]
  434d5d:	mov    rax,QWORD PTR [rax]
  434d60:	cmp    BYTE PTR [rax+0x1],0x63
  434d64:	je     0x434e7b
  434d6a:	mov    rcx,rbx
  434d6d:	mov    QWORD PTR [rsp+0x28],rdx
  434d72:	call   0x434f70
  434d77:	mov    rdx,QWORD PTR [rsp+0x28]
  434d7c:	mov    QWORD PTR [rsp+0x20],rax
  434d81:	lea    rdi,[rip+0x22fa8]        # 0x457d30
  434d88:	mov    rsi,rdx
  434d8b:	mov    rcx,r14
  434d8e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  434d90:	je     0x434e40
  434d96:	lea    rdi,[rip+0x234a7]        # 0x458244
  434d9d:	mov    rsi,rdx
  434da0:	mov    rcx,r14
  434da3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  434da5:	je     0x434df3
  434da7:	lea    rdi,[rip+0x23499]        # 0x458247
  434dae:	mov    rsi,rdx
  434db1:	mov    rcx,r14
  434db4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  434db6:	je     0x434df3
  434db8:	mov    rcx,rbx
  434dbb:	call   0x434f70
  434dc0:	mov    rdi,rax
  434dc3:	mov    r8,QWORD PTR [rsp+0x20]
  434dc8:	mov    r9,rdi
  434dcb:	mov    edx,0x38
  434dd0:	mov    rcx,rbx
  434dd3:	call   0x42e030
  434dd8:	mov    r8,r15
  434ddb:	mov    r9,rax
  434dde:	mov    edx,0x37
  434de3:	mov    rcx,rbx
  434de6:	call   0x42e030
  434deb:	mov    r8,rax
  434dee:	jmp    0x434acb
  434df3:	mov    rcx,rbx
  434df6:	call   0x434370
  434dfb:	mov    rdi,rax
  434dfe:	mov    rax,QWORD PTR [rbx+0x18]
  434e02:	cmp    BYTE PTR [rax],0x49
  434e05:	jne    0x434dc3
  434e07:	mov    rcx,rbx
  434e0a:	call   0x435570
  434e0f:	mov    r8,rdi
  434e12:	mov    r9,rax
  434e15:	mov    edx,0x4
  434e1a:	mov    rcx,rbx
  434e1d:	call   0x42e030
  434e22:	mov    rdi,rax
  434e25:	jmp    0x434dc3
  434e27:	nop    WORD PTR [rax+rax*1+0x0]
  434e30:	mov    rcx,rbx
  434e33:	call   0x4337a0
  434e38:	jmp    0x434949
  434e3d:	nop    DWORD PTR [rax]
  434e40:	mov    edx,0x45
  434e45:	mov    rcx,rbx
  434e48:	call   0x434870
  434e4d:	mov    rdi,rax
  434e50:	jmp    0x434dc3
  434e55:	mov    rcx,rbx
  434e58:	call   0x434f70
  434e5d:	mov    rcx,rbx
  434e60:	mov    rsi,rax
  434e63:	call   0x434f70
  434e68:	mov    rcx,rbx
  434e6b:	mov    rdi,rax
  434e6e:	call   0x434f70
  434e73:	mov    r9,rax
  434e76:	jmp    0x434bc1
  434e7b:	movzx  eax,BYTE PTR [rax]
  434e7e:	lea    ecx,[rax-0x72]
  434e81:	cmp    cl,0x1
  434e84:	jbe    0x434e91
  434e86:	sub    eax,0x63
  434e89:	cmp    al,0x1
  434e8b:	ja     0x434d6a
  434e91:	mov    rcx,rbx
  434e94:	mov    QWORD PTR [rsp+0x28],rdx
  434e99:	call   0x4337a0
  434e9e:	mov    rdx,QWORD PTR [rsp+0x28]
  434ea3:	mov    QWORD PTR [rsp+0x20],rax
  434ea8:	jmp    0x434d81
  434ead:	mov    rcx,rbx
  434eb0:	call   0x435570
  434eb5:	mov    r8,rdi
  434eb8:	mov    r9,rax
  434ebb:	mov    edx,0x4
  434ec0:	mov    rcx,rbx
  434ec3:	call   0x42e030
  434ec8:	mov    r9,rax
  434ecb:	jmp    0x434cee
  434ed0:	add    rcx,0x1
  434ed4:	xor    r9d,r9d
  434ed7:	xor    r8d,r8d
  434eda:	mov    QWORD PTR [rbx+0x18],rcx
  434ede:	mov    edx,0x2e
  434ee3:	mov    rcx,rbx
  434ee6:	add    rsp,0x48
  434eea:	pop    rbx
  434eeb:	pop    rsi
  434eec:	pop    rdi
  434eed:	pop    rbp
  434eee:	pop    r12
  434ef0:	pop    r13
  434ef2:	pop    r14
  434ef4:	pop    r15
  434ef6:	jmp    0x42e030
  434efb:	add    rax,0x1
  434eff:	mov    edx,0x45
  434f04:	mov    rcx,rbx
  434f07:	mov    QWORD PTR [rbx+0x18],rax
  434f0b:	call   0x434870
  434f10:	jmp    0x434949
  434f15:	add    rdx,0x1
  434f19:	xor    r9d,r9d
  434f1c:	mov    QWORD PTR [rbx+0x18],rdx
  434f20:	jmp    0x434bc1
  434f25:	cmp    BYTE PTR [rdx+0x1],0x69
  434f29:	jne    0x434aa2
  434f2f:	add    rdx,0x2
  434f33:	mov    rcx,rbx
  434f36:	mov    QWORD PTR [rbx+0x18],rdx
  434f3a:	mov    edx,0x45
  434f3f:	call   0x434870
  434f44:	mov    r9,rax
  434f47:	jmp    0x434bc1
  434f4c:	add    rax,0x1
  434f50:	mov    QWORD PTR [rbx+0x18],rax
  434f54:	jmp    0x434941
  434f59:	cmp    al,0x69
  434f5b:	je     0x4348f9
  434f61:	jmp    0x434903
  434f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434f70:	push   r13
  434f72:	push   r12
  434f74:	push   rbp
  434f75:	push   rdi
  434f76:	push   rsi
  434f77:	push   rbx
  434f78:	sub    rsp,0x28
  434f7c:	mov    rdx,QWORD PTR [rcx+0x18]
  434f80:	movzx  eax,BYTE PTR [rdx]
  434f83:	cmp    al,0x4c
  434f85:	je     0x435290
  434f8b:	cmp    al,0x54
  434f8d:	je     0x4352a1
  434f93:	cmp    al,0x73
  434f95:	mov    rbx,rcx
  434f98:	je     0x4350c0
  434f9e:	cmp    al,0x66
  434fa0:	je     0x435053
  434fa6:	lea    ecx,[rax-0x30]
  434fa9:	cmp    cl,0x9
  434fac:	ja     0x434fe0
  434fae:	mov    rcx,rbx
  434fb1:	call   0x434370
  434fb6:	test   rax,rax
  434fb9:	mov    rsi,rax
  434fbc:	je     0x435260
  434fc2:	mov    rdx,QWORD PTR [rbx+0x18]
  434fc6:	cmp    BYTE PTR [rdx],0x49
  434fc9:	je     0x4352d4
  434fcf:	add    rsp,0x28
  434fd3:	pop    rbx
  434fd4:	pop    rsi
  434fd5:	pop    rdi
  434fd6:	pop    rbp
  434fd7:	pop    r12
  434fd9:	pop    r13
  434fdb:	ret    
  434fdc:	nop    DWORD PTR [rax+0x0]
  434fe0:	cmp    al,0x6f
  434fe2:	je     0x435270
  434fe8:	cmp    al,0x74
  434fea:	sete   cl
  434fed:	jne    0x435560
  434ff3:	cmp    BYTE PTR [rdx+0x1],0x6c
  434ff7:	je     0x435200
  434ffd:	mov    rcx,rbx
  435000:	call   0x4340f0
  435005:	test   rax,rax
  435008:	mov    rbp,rax
  43500b:	je     0x435260
  435011:	mov    eax,DWORD PTR [rax]
  435013:	cmp    eax,0x31
  435016:	je     0x4350f1
  43501c:	cmp    eax,0x32
  43501f:	je     0x4352b2
  435025:	cmp    eax,0x33
  435028:	jne    0x435260
  43502e:	mov    rax,QWORD PTR [rbx+0x18]
  435032:	cmp    BYTE PTR [rax],0x5f
  435035:	je     0x43533f
  43503b:	mov    rcx,rbx
  43503e:	call   0x434f70
  435043:	mov    r9,rax
  435046:	mov    r8,rbp
  435049:	mov    edx,0x36
  43504e:	jmp    0x435230
  435053:	cmp    BYTE PTR [rdx+0x1],0x70
  435057:	jne    0x434ffd
  435059:	lea    rax,[rdx+0x2]
  43505d:	mov    QWORD PTR [rcx+0x18],rax
  435061:	cmp    BYTE PTR [rdx+0x2],0x54
  435065:	je     0x435330
  43506b:	call   0x42e630
  435070:	mov    edx,eax
  435072:	lea    ecx,[rax+0x1]
  435075:	and    edx,0x7fffffff
  43507b:	cmp    edx,0x7fffffff
  435081:	je     0x435260
  435087:	mov    edx,DWORD PTR [rbx+0x28]
  43508a:	cmp    edx,DWORD PTR [rbx+0x2c]
  43508d:	jge    0x435260
  435093:	movsxd rax,edx
  435096:	add    edx,0x1
  435099:	lea    r8,[rax+rax*2]
  43509d:	mov    rax,QWORD PTR [rbx+0x20]
  4350a1:	mov    DWORD PTR [rbx+0x28],edx
  4350a4:	lea    rax,[rax+r8*8]
  4350a8:	test   rax,rax
  4350ab:	je     0x435260
  4350b1:	mov    DWORD PTR [rax],0x6
  4350b7:	mov    DWORD PTR [rax+0x8],ecx
  4350ba:	jmp    0x434fcf
  4350bf:	nop
  4350c0:	movzx  eax,BYTE PTR [rdx+0x1]
  4350c4:	cmp    al,0x72
  4350c6:	je     0x4352f0
  4350cc:	cmp    al,0x70
  4350ce:	jne    0x434ffd
  4350d4:	add    rdx,0x2
  4350d8:	mov    QWORD PTR [rcx+0x18],rdx
  4350dc:	call   0x434f70
  4350e1:	xor    r9d,r9d
  4350e4:	mov    r8,rax
  4350e7:	mov    edx,0x4a
  4350ec:	jmp    0x435230
  4350f1:	mov    rdx,QWORD PTR [rbp+0x8]
  4350f5:	lea    rdi,[rip+0x22c31]        # 0x457d2d
  4350fc:	mov    ecx,0x3
  435101:	mov    eax,DWORD PTR [rdx+0x10]
  435104:	mov    r12,QWORD PTR [rdx]
  435107:	sub    eax,0x2
  43510a:	add    DWORD PTR [rbx+0x50],eax
  43510d:	mov    rsi,r12
  435110:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  435112:	je     0x435450
  435118:	mov    eax,DWORD PTR [rdx+0x14]
  43511b:	cmp    eax,0x1
  43511e:	je     0x435360
  435124:	jle    0x4352c0
  43512a:	cmp    eax,0x2
  43512d:	je     0x4353b0
  435133:	cmp    eax,0x3
  435136:	jne    0x435260
  43513c:	test   r12,r12
  43513f:	je     0x435260
  435145:	lea    rdi,[rip+0x22bea]        # 0x457d36
  43514c:	mov    ecx,0x3
  435151:	mov    rsi,r12
  435154:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  435156:	je     0x435472
  43515c:	cmp    BYTE PTR [r12],0x6e
  435161:	jne    0x435260
  435167:	movzx  eax,BYTE PTR [r12+0x1]
  43516d:	cmp    al,0x61
  43516f:	je     0x435179
  435171:	cmp    al,0x77
  435173:	jne    0x435260
  435179:	mov    edx,0x5f
  43517e:	mov    rcx,rbx
  435181:	call   0x434870
  435186:	mov    rcx,rbx
  435189:	mov    rsi,rax
  43518c:	call   0x4337a0
  435191:	mov    rdx,QWORD PTR [rbx+0x18]
  435195:	mov    rdi,rax
  435198:	movzx  ecx,BYTE PTR [rdx]
  43519b:	cmp    cl,0x45
  43519e:	je     0x4354f9
  4351a4:	cmp    cl,0x70
  4351a7:	je     0x43552c
  4351ad:	cmp    cl,0x69
  4351b0:	jne    0x435260
  4351b6:	cmp    BYTE PTR [rdx+0x1],0x6c
  4351ba:	jne    0x435260
  4351c0:	mov    rcx,rbx
  4351c3:	call   0x434f70
  4351c8:	mov    r9,rax
  4351cb:	mov    r8,rdi
  4351ce:	mov    edx,0x3b
  4351d3:	mov    rcx,rbx
  4351d6:	call   0x42e030
  4351db:	mov    r8,rsi
  4351de:	mov    r9,rax
  4351e1:	mov    edx,0x3a
  4351e6:	mov    rcx,rbx
  4351e9:	call   0x42e030
  4351ee:	mov    r8,rbp
  4351f1:	mov    r9,rax
  4351f4:	mov    edx,0x39
  4351f9:	jmp    0x435230
  4351fb:	nop    DWORD PTR [rax+rax*1+0x0]
  435200:	xor    esi,esi
  435202:	test   cl,cl
  435204:	jne    0x435244
  435206:	add    rdx,0x2
  43520a:	mov    rcx,rbx
  43520d:	mov    QWORD PTR [rbx+0x18],rdx
  435211:	mov    edx,0x45
  435216:	call   0x434870
  43521b:	mov    r8,rsi
  43521e:	mov    r9,rax
  435221:	mov    edx,0x30
  435226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435230:	mov    rcx,rbx
  435233:	add    rsp,0x28
  435237:	pop    rbx
  435238:	pop    rsi
  435239:	pop    rdi
  43523a:	pop    rbp
  43523b:	pop    r12
  43523d:	pop    r13
  43523f:	jmp    0x42e030
  435244:	mov    rcx,rbx
  435247:	call   0x4337a0
  43524c:	mov    rdx,QWORD PTR [rbx+0x18]
  435250:	mov    rsi,rax
  435253:	cmp    BYTE PTR [rdx+0x1],0x0
  435257:	jne    0x435206
  435259:	nop    DWORD PTR [rax+0x0]
  435260:	xor    eax,eax
  435262:	add    rsp,0x28
  435266:	pop    rbx
  435267:	pop    rsi
  435268:	pop    rdi
  435269:	pop    rbp
  43526a:	pop    r12
  43526c:	pop    r13
  43526e:	ret    
  43526f:	nop
  435270:	cmp    BYTE PTR [rdx+0x1],0x6e
  435274:	jne    0x434ffd
  43527a:	add    rdx,0x2
  43527e:	mov    QWORD PTR [rbx+0x18],rdx
  435282:	jmp    0x434fae
  435287:	nop    WORD PTR [rax+rax*1+0x0]
  435290:	add    rsp,0x28
  435294:	pop    rbx
  435295:	pop    rsi
  435296:	pop    rdi
  435297:	pop    rbp
  435298:	pop    r12
  43529a:	pop    r13
  43529c:	jmp    0x436300
  4352a1:	add    rsp,0x28
  4352a5:	pop    rbx
  4352a6:	pop    rsi
  4352a7:	pop    rdi
  4352a8:	pop    rbp
  4352a9:	pop    r12
  4352ab:	pop    r13
  4352ad:	jmp    0x42e680
  4352b2:	mov    eax,DWORD PTR [rbp+0x8]
  4352b5:	cmp    eax,0x1
  4352b8:	je     0x43503b
  4352be:	jg     0x435260
  4352c0:	test   eax,eax
  4352c2:	jne    0x435260
  4352c4:	xor    r9d,r9d
  4352c7:	mov    r8,rbp
  4352ca:	mov    edx,0x35
  4352cf:	jmp    0x435230
  4352d4:	mov    rcx,rbx
  4352d7:	call   0x435570
  4352dc:	mov    r8,rsi
  4352df:	mov    r9,rax
  4352e2:	mov    edx,0x4
  4352e7:	jmp    0x435230
  4352ec:	nop    DWORD PTR [rax+0x0]
  4352f0:	add    rdx,0x2
  4352f4:	mov    QWORD PTR [rcx+0x18],rdx
  4352f8:	call   0x4337a0
  4352fd:	mov    rcx,rbx
  435300:	mov    rsi,rax
  435303:	call   0x434370
  435308:	mov    rdx,QWORD PTR [rbx+0x18]
  43530c:	mov    rdi,rax
  43530f:	cmp    BYTE PTR [rdx],0x49
  435312:	je     0x4354be
  435318:	mov    r9,rax
  43531b:	mov    r8,rsi
  43531e:	mov    edx,0x1
  435323:	jmp    0x435230
  435328:	nop    DWORD PTR [rax+rax*1+0x0]
  435330:	add    rdx,0x3
  435334:	mov    QWORD PTR [rcx+0x18],rdx
  435338:	xor    ecx,ecx
  43533a:	jmp    0x435087
  43533f:	add    rax,0x1
  435343:	mov    edx,0x45
  435348:	mov    rcx,rbx
  43534b:	mov    QWORD PTR [rbx+0x18],rax
  43534f:	call   0x434870
  435354:	jmp    0x435043
  435359:	nop    DWORD PTR [rax+0x0]
  435360:	movzx  eax,BYTE PTR [r12]
  435365:	cmp    al,0x6d
  435367:	je     0x435371
  435369:	cmp    al,0x70
  43536b:	jne    0x43503b
  435371:	cmp    al,BYTE PTR [r12+0x1]
  435376:	jne    0x43503b
  43537c:	mov    rax,QWORD PTR [rbx+0x18]
  435380:	cmp    BYTE PTR [rax],0x5f
  435383:	je     0x435553
  435389:	mov    rcx,rbx
  43538c:	call   0x434f70
  435391:	mov    edx,0x38
  435396:	mov    r8,rax
  435399:	mov    r9,rax
  43539c:	mov    rcx,rbx
  43539f:	call   0x42e030
  4353a4:	jmp    0x435043
  4353a9:	nop    DWORD PTR [rax+0x0]
  4353b0:	test   r12,r12
  4353b3:	je     0x435260
  4353b9:	mov    rax,QWORD PTR [rbp+0x8]
  4353bd:	mov    rax,QWORD PTR [rax]
  4353c0:	cmp    BYTE PTR [rax+0x1],0x63
  4353c4:	je     0x435498
  4353ca:	mov    rcx,rbx
  4353cd:	call   0x434f70
  4353d2:	mov    r13,rax
  4353d5:	lea    rdi,[rip+0x22954]        # 0x457d30
  4353dc:	mov    ecx,0x3
  4353e1:	mov    rsi,r12
  4353e4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4353e6:	je     0x435460
  4353e8:	lea    rdi,[rip+0x22e55]        # 0x458244
  4353ef:	mov    ecx,0x3
  4353f4:	mov    rsi,r12
  4353f7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4353f9:	je     0x435412
  4353fb:	lea    rdi,[rip+0x22e45]        # 0x458247
  435402:	mov    ecx,0x3
  435407:	mov    rsi,r12
  43540a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43540c:	jne    0x4354e9
  435412:	mov    rcx,rbx
  435415:	call   0x434370
  43541a:	mov    rsi,rax
  43541d:	mov    rax,QWORD PTR [rbx+0x18]
  435421:	cmp    BYTE PTR [rax],0x49
  435424:	je     0x435509
  43542a:	mov    r9,rsi
  43542d:	mov    r8,r13
  435430:	mov    edx,0x38
  435435:	mov    rcx,rbx
  435438:	call   0x42e030
  43543d:	mov    r8,rbp
  435440:	mov    r9,rax
  435443:	mov    edx,0x37
  435448:	jmp    0x435230
  43544d:	nop    DWORD PTR [rax]
  435450:	mov    rcx,rbx
  435453:	call   0x4337a0
  435458:	jmp    0x435043
  43545d:	nop    DWORD PTR [rax]
  435460:	mov    edx,0x45
  435465:	mov    rcx,rbx
  435468:	call   0x434870
  43546d:	mov    rsi,rax
  435470:	jmp    0x43542a
  435472:	mov    rcx,rbx
  435475:	call   0x434f70
  43547a:	mov    rcx,rbx
  43547d:	mov    rsi,rax
  435480:	call   0x434f70
  435485:	mov    rcx,rbx
  435488:	mov    rdi,rax
  43548b:	call   0x434f70
  435490:	mov    r9,rax
  435493:	jmp    0x4351cb
  435498:	movzx  eax,BYTE PTR [rax]
  43549b:	lea    edx,[rax-0x72]
  43549e:	cmp    dl,0x1
  4354a1:	jbe    0x4354ae
  4354a3:	sub    eax,0x63
  4354a6:	cmp    al,0x1
  4354a8:	ja     0x4353ca
  4354ae:	mov    rcx,rbx
  4354b1:	call   0x4337a0
  4354b6:	mov    r13,rax
  4354b9:	jmp    0x4353d5
  4354be:	mov    rcx,rbx
  4354c1:	call   0x435570
  4354c6:	mov    r8,rdi
  4354c9:	mov    r9,rax
  4354cc:	mov    edx,0x4
  4354d1:	mov    rcx,rbx
  4354d4:	call   0x42e030
  4354d9:	mov    r8,rsi
  4354dc:	mov    r9,rax
  4354df:	mov    edx,0x1
  4354e4:	jmp    0x435230
  4354e9:	mov    rcx,rbx
  4354ec:	call   0x434f70
  4354f1:	mov    rsi,rax
  4354f4:	jmp    0x43542a
  4354f9:	add    rdx,0x1
  4354fd:	xor    r9d,r9d
  435500:	mov    QWORD PTR [rbx+0x18],rdx
  435504:	jmp    0x4351cb
  435509:	mov    rcx,rbx
  43550c:	call   0x435570
  435511:	mov    r8,rsi
  435514:	mov    r9,rax
  435517:	mov    edx,0x4
  43551c:	mov    rcx,rbx
  43551f:	call   0x42e030
  435524:	mov    rsi,rax
  435527:	jmp    0x43542a
  43552c:	cmp    BYTE PTR [rdx+0x1],0x69
  435530:	jne    0x435260
  435536:	add    rdx,0x2
  43553a:	mov    rcx,rbx
  43553d:	mov    QWORD PTR [rbx+0x18],rdx
  435541:	mov    edx,0x45
  435546:	call   0x434870
  43554b:	mov    r9,rax
  43554e:	jmp    0x4351cb
  435553:	add    rax,0x1
  435557:	mov    QWORD PTR [rbx+0x18],rax
  43555b:	jmp    0x43503b
  435560:	cmp    al,0x69
  435562:	je     0x434ff3
  435568:	jmp    0x434ffd
  43556d:	nop    DWORD PTR [rax]
  435570:	push   rbp
  435571:	push   rdi
  435572:	push   rsi
  435573:	push   rbx
  435574:	sub    rsp,0x38
  435578:	mov    r8,QWORD PTR [rcx+0x18]
  43557c:	mov    rsi,QWORD PTR [rcx+0x48]
  435580:	movzx  eax,BYTE PTR [r8]
  435584:	sub    eax,0x49
  435587:	cmp    al,0x1
  435589:	ja     0x435632
  43558f:	lea    rdx,[r8+0x1]
  435593:	mov    QWORD PTR [rcx+0x18],rdx
  435597:	movzx  eax,BYTE PTR [r8+0x1]
  43559c:	cmp    al,0x45
  43559e:	je     0x43568a
  4355a4:	mov    rbx,rcx
  4355a7:	mov    QWORD PTR [rsp+0x28],0x0
  4355b0:	lea    rdi,[rsp+0x28]
  4355b5:	jmp    0x435602
  4355b7:	nop    WORD PTR [rax+rax*1+0x0]
  4355c0:	sub    eax,0x49
  4355c3:	cmp    al,0x1
  4355c5:	ja     0x435650
  4355cb:	mov    rcx,rbx
  4355ce:	call   0x435570
  4355d3:	mov    r8,rax
  4355d6:	test   r8,r8
  4355d9:	je     0x435632
  4355db:	xor    r9d,r9d
  4355de:	mov    edx,0x2f
  4355e3:	mov    rcx,rbx
  4355e6:	call   0x42e030
  4355eb:	test   rax,rax
  4355ee:	mov    QWORD PTR [rdi],rax
  4355f1:	je     0x435632
  4355f3:	mov    rdx,QWORD PTR [rbx+0x18]
  4355f7:	lea    rdi,[rax+0x10]
  4355fb:	movzx  eax,BYTE PTR [rdx]
  4355fe:	cmp    al,0x45
  435600:	je     0x435670
  435602:	cmp    al,0x4c
  435604:	je     0x435660
  435606:	jle    0x4355c0
  435608:	cmp    al,0x58
  43560a:	jne    0x435650
  43560c:	add    rdx,0x1
  435610:	mov    ebp,DWORD PTR [rbx+0x54]
  435613:	mov    rcx,rbx
  435616:	mov    QWORD PTR [rbx+0x18],rdx
  43561a:	mov    DWORD PTR [rbx+0x54],0x1
  435621:	call   0x434f70
  435626:	mov    rdx,QWORD PTR [rbx+0x18]
  43562a:	mov    DWORD PTR [rbx+0x54],ebp
  43562d:	cmp    BYTE PTR [rdx],0x45
  435630:	je     0x435640
  435632:	xor    eax,eax
  435634:	add    rsp,0x38
  435638:	pop    rbx
  435639:	pop    rsi
  43563a:	pop    rdi
  43563b:	pop    rbp
  43563c:	ret    
  43563d:	nop    DWORD PTR [rax]
  435640:	add    rdx,0x1
  435644:	mov    r8,rax
  435647:	mov    QWORD PTR [rbx+0x18],rdx
  43564b:	jmp    0x4355d6
  43564d:	nop    DWORD PTR [rax]
  435650:	mov    rcx,rbx
  435653:	call   0x4337a0
  435658:	mov    r8,rax
  43565b:	jmp    0x4355d6
  435660:	mov    rcx,rbx
  435663:	call   0x436300
  435668:	mov    r8,rax
  43566b:	jmp    0x4355d6
  435670:	mov    rax,QWORD PTR [rsp+0x28]
  435675:	add    rdx,0x1
  435679:	mov    QWORD PTR [rbx+0x48],rsi
  43567d:	mov    QWORD PTR [rbx+0x18],rdx
  435681:	add    rsp,0x38
  435685:	pop    rbx
  435686:	pop    rsi
  435687:	pop    rdi
  435688:	pop    rbp
  435689:	ret    
  43568a:	add    r8,0x2
  43568e:	xor    r9d,r9d
  435691:	mov    edx,0x2f
  435696:	mov    QWORD PTR [rcx+0x18],r8
  43569a:	xor    r8d,r8d
  43569d:	add    rsp,0x38
  4356a1:	pop    rbx
  4356a2:	pop    rsi
  4356a3:	pop    rdi
  4356a4:	pop    rbp
  4356a5:	jmp    0x42e030
  4356aa:	nop    WORD PTR [rax+rax*1+0x0]
  4356b0:	push   r12
  4356b2:	push   rbp
  4356b3:	push   rdi
  4356b4:	push   rsi
  4356b5:	push   rbx
  4356b6:	sub    rsp,0x40
  4356ba:	mov    rax,QWORD PTR [rcx+0x18]
  4356be:	mov    rsi,rcx
  4356c1:	movzx  edx,BYTE PTR [rax]
  4356c4:	cmp    dl,0x53
  4356c7:	je     0x435861
  4356cd:	jle    0x435730
  4356cf:	cmp    dl,0x55
  4356d2:	je     0x435710
  4356d4:	cmp    dl,0x5a
  4356d7:	jne    0x435800
  4356dd:	add    rax,0x1
  4356e1:	xor    edx,edx
  4356e3:	mov    QWORD PTR [rcx+0x18],rax
  4356e7:	call   0x435bb0
  4356ec:	mov    rdx,QWORD PTR [rsi+0x18]
  4356f0:	mov    rdi,rax
  4356f3:	cmp    BYTE PTR [rdx],0x45
  4356f6:	je     0x435a32
  4356fc:	xor    ebx,ebx
  4356fe:	mov    rax,rbx
  435701:	add    rsp,0x40
  435705:	pop    rbx
  435706:	pop    rsi
  435707:	pop    rdi
  435708:	pop    rbp
  435709:	pop    r12
  43570b:	ret    
  43570c:	nop    DWORD PTR [rax+0x0]
  435710:	call   0x434370
  435715:	mov    rbx,rax
  435718:	mov    rax,rbx
  43571b:	add    rsp,0x40
  43571f:	pop    rbx
  435720:	pop    rsi
  435721:	pop    rdi
  435722:	pop    rbp
  435723:	pop    r12
  435725:	ret    
  435726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435730:	cmp    dl,0x4e
  435733:	jne    0x435800
  435739:	add    rax,0x1
  43573d:	lea    rdx,[rsp+0x38]
  435742:	mov    r8d,0x1
  435748:	mov    QWORD PTR [rcx+0x18],rax
  43574c:	call   0x42e110
  435751:	test   rax,rax
  435754:	mov    rbp,rax
  435757:	je     0x4356fc
  435759:	xor    edx,edx
  43575b:	mov    rcx,rsi
  43575e:	xor    edi,edi
  435760:	call   0x42e230
  435765:	mov    rdx,QWORD PTR [rsi+0x18]
  435769:	mov    r12,rax
  43576c:	movzx  ebx,BYTE PTR [rdx]
  43576f:	nop
  435770:	test   bl,bl
  435772:	je     0x4357f1
  435774:	cmp    bl,0x44
  435777:	je     0x435990
  43577d:	lea    eax,[rbx-0x30]
  435780:	cmp    al,0x9
  435782:	jbe    0x435920
  435788:	lea    eax,[rbx-0x61]
  43578b:	cmp    al,0x19
  43578d:	jbe    0x435920
  435793:	cmp    bl,0x43
  435796:	sete   cl
  435799:	cmp    bl,0x55
  43579c:	sete   al
  43579f:	or     cl,al
  4357a1:	jne    0x435920
  4357a7:	cmp    bl,0x4c
  4357aa:	je     0x435920
  4357b0:	cmp    bl,0x53
  4357b3:	je     0x435a00
  4357b9:	cmp    bl,0x49
  4357bc:	je     0x4359e0
  4357c2:	cmp    bl,0x54
  4357c5:	je     0x435a25
  4357cb:	cmp    bl,0x45
  4357ce:	je     0x435b69
  4357d4:	cmp    bl,0x4d
  4357d7:	jne    0x4357f1
  4357d9:	test   rdi,rdi
  4357dc:	je     0x4357f1
  4357de:	lea    rax,[rdx+0x1]
  4357e2:	mov    QWORD PTR [rsi+0x18],rax
  4357e6:	movzx  ebx,BYTE PTR [rdx+0x1]
  4357ea:	mov    rdx,rax
  4357ed:	test   bl,bl
  4357ef:	jne    0x435774
  4357f1:	mov    QWORD PTR [rbp+0x0],0x0
  4357f9:	xor    ebx,ebx
  4357fb:	jmp    0x4356fe
  435800:	mov    rcx,rsi
  435803:	call   0x434370
  435808:	mov    rdx,QWORD PTR [rsi+0x18]
  43580c:	mov    rbx,rax
  43580f:	cmp    BYTE PTR [rdx],0x49
  435812:	jne    0x435718
  435818:	test   rax,rax
  43581b:	je     0x4356fc
  435821:	mov    eax,DWORD PTR [rsi+0x38]
  435824:	cmp    eax,DWORD PTR [rsi+0x3c]
  435827:	jge    0x4356fc
  43582d:	mov    rdx,QWORD PTR [rsi+0x30]
  435831:	movsxd rcx,eax
  435834:	add    eax,0x1
  435837:	mov    QWORD PTR [rdx+rcx*8],rbx
  43583b:	mov    rcx,rsi
  43583e:	mov    DWORD PTR [rsi+0x38],eax
  435841:	call   0x435570
  435846:	mov    r8,rbx
  435849:	mov    r9,rax
  43584c:	mov    edx,0x4
  435851:	mov    rcx,rsi
  435854:	call   0x42e030
  435859:	mov    rbx,rax
  43585c:	jmp    0x435718
  435861:	cmp    BYTE PTR [rax+0x1],0x74
  435865:	je     0x4358a4
  435867:	xor    edx,edx
  435869:	call   0x42e290
  43586e:	mov    rdi,rax
  435871:	mov    rax,QWORD PTR [rsi+0x18]
  435875:	mov    rbx,rdi
  435878:	cmp    BYTE PTR [rax],0x49
  43587b:	jne    0x435718
  435881:	mov    rcx,rsi
  435884:	call   0x435570
  435889:	mov    r8,rdi
  43588c:	mov    r9,rax
  43588f:	mov    edx,0x4
  435894:	mov    rcx,rsi
  435897:	call   0x42e030
  43589c:	mov    rbx,rax
  43589f:	jmp    0x435718
  4358a4:	add    rax,0x2
  4358a8:	mov    QWORD PTR [rcx+0x18],rax
  4358ac:	call   0x434370
  4358b1:	lea    rdx,[rip+0x229a1]        # 0x458259
  4358b8:	mov    rbx,rax
  4358bb:	mov    r8d,0x3
  4358c1:	mov    rcx,rsi
  4358c4:	call   0x42e0b0
  4358c9:	mov    r9,rbx
  4358cc:	mov    r8,rax
  4358cf:	mov    edx,0x1
  4358d4:	mov    rcx,rsi
  4358d7:	call   0x42e030
  4358dc:	mov    rdi,rax
  4358df:	mov    rax,QWORD PTR [rsi+0x18]
  4358e3:	add    DWORD PTR [rsi+0x50],0x3
  4358e7:	mov    rbx,rdi
  4358ea:	cmp    BYTE PTR [rax],0x49
  4358ed:	jne    0x435718
  4358f3:	test   rdi,rdi
  4358f6:	je     0x4356fc
  4358fc:	mov    eax,DWORD PTR [rsi+0x38]
  4358ff:	cmp    eax,DWORD PTR [rsi+0x3c]
  435902:	jge    0x4356fc
  435908:	mov    rdx,QWORD PTR [rsi+0x30]
  43590c:	movsxd rcx,eax
  43590f:	add    eax,0x1
  435912:	mov    QWORD PTR [rdx+rcx*8],rdi
  435916:	mov    DWORD PTR [rsi+0x38],eax
  435919:	jmp    0x435881
  43591e:	xchg   ax,ax
  435920:	mov    rcx,rsi
  435923:	call   0x434370
  435928:	test   rdi,rdi
  43592b:	je     0x4359c0
  435931:	mov    edx,0x1
  435936:	mov    r8,rdi
  435939:	mov    r9,rax
  43593c:	mov    rcx,rsi
  43593f:	call   0x42e030
  435944:	mov    rdi,rax
  435947:	cmp    bl,0x53
  43594a:	je     0x43597b
  43594c:	mov    rdx,QWORD PTR [rsi+0x18]
  435950:	cmp    BYTE PTR [rdx],0x45
  435953:	je     0x4359b4
  435955:	test   rdi,rdi
  435958:	je     0x4357f1
  43595e:	mov    edx,DWORD PTR [rsi+0x38]
  435961:	cmp    edx,DWORD PTR [rsi+0x3c]
  435964:	jge    0x4357f1
  43596a:	mov    rax,QWORD PTR [rsi+0x30]
  43596e:	movsxd rcx,edx
  435971:	add    edx,0x1
  435974:	mov    QWORD PTR [rax+rcx*8],rdi
  435978:	mov    DWORD PTR [rsi+0x38],edx
  43597b:	mov    rdx,QWORD PTR [rsi+0x18]
  43597f:	movzx  ebx,BYTE PTR [rdx]
  435982:	jmp    0x435770
  435987:	nop    WORD PTR [rax+rax*1+0x0]
  435990:	movzx  eax,BYTE PTR [rdx+0x1]
  435994:	mov    rcx,rsi
  435997:	and    eax,0xffffffdf
  43599a:	cmp    al,0x54
  43599c:	jne    0x4359d0
  43599e:	call   0x4337a0
  4359a3:	test   rdi,rdi
  4359a6:	jne    0x435931
  4359a8:	mov    rdx,QWORD PTR [rsi+0x18]
  4359ac:	mov    rdi,rax
  4359af:	cmp    BYTE PTR [rdx],0x45
  4359b2:	jne    0x435955
  4359b4:	mov    ebx,0x45
  4359b9:	jmp    0x43577d
  4359be:	xchg   ax,ax
  4359c0:	mov    rdi,rax
  4359c3:	jmp    0x435947
  4359c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4359d0:	call   0x434370
  4359d5:	jmp    0x4359a3
  4359d7:	nop    WORD PTR [rax+rax*1+0x0]
  4359e0:	test   rdi,rdi
  4359e3:	je     0x4357f1
  4359e9:	mov    rcx,rsi
  4359ec:	call   0x435570
  4359f1:	mov    edx,0x4
  4359f6:	jmp    0x435936
  4359fb:	nop    DWORD PTR [rax+rax*1+0x0]
  435a00:	mov    edx,0x1
  435a05:	mov    rcx,rsi
  435a08:	call   0x42e290
  435a0d:	test   rdi,rdi
  435a10:	jne    0x435931
  435a16:	mov    rdx,QWORD PTR [rsi+0x18]
  435a1a:	mov    rdi,rax
  435a1d:	movzx  ebx,BYTE PTR [rdx]
  435a20:	jmp    0x435770
  435a25:	mov    rcx,rsi
  435a28:	call   0x42e680
  435a2d:	jmp    0x4359a3
  435a32:	lea    rax,[rdx+0x1]
  435a36:	mov    QWORD PTR [rsi+0x18],rax
  435a3a:	movzx  eax,BYTE PTR [rdx+0x1]
  435a3e:	cmp    al,0x73
  435a40:	je     0x435b34
  435a46:	cmp    al,0x64
  435a48:	je     0x435a91
  435a4a:	mov    rcx,rsi
  435a4d:	call   0x4356b0
  435a52:	test   rax,rax
  435a55:	mov    r9,rax
  435a58:	je     0x435a70
  435a5a:	mov    eax,DWORD PTR [rax]
  435a5c:	cmp    eax,0x45
  435a5f:	je     0x435a70
  435a61:	cmp    eax,0x47
  435a64:	jne    0x435b13
  435a6a:	nop    WORD PTR [rax+rax*1+0x0]
  435a70:	mov    r8,rdi
  435a73:	mov    edx,0x2
  435a78:	mov    rcx,rsi
  435a7b:	call   0x42e030
  435a80:	mov    rbx,rax
  435a83:	mov    rax,rbx
  435a86:	add    rsp,0x40
  435a8a:	pop    rbx
  435a8b:	pop    rsi
  435a8c:	pop    rdi
  435a8d:	pop    rbp
  435a8e:	pop    r12
  435a90:	ret    
  435a91:	add    rdx,0x2
  435a95:	mov    rcx,rsi
  435a98:	mov    QWORD PTR [rsi+0x18],rdx
  435a9c:	call   0x42e630
  435aa1:	test   eax,eax
  435aa3:	mov    ebp,eax
  435aa5:	js     0x4356fc
  435aab:	mov    rcx,rsi
  435aae:	call   0x4356b0
  435ab3:	test   rax,rax
  435ab6:	mov    rbx,rax
  435ab9:	je     0x435ac7
  435abb:	mov    edx,DWORD PTR [rax]
  435abd:	cmp    edx,0x45
  435ac0:	je     0x435ac7
  435ac2:	cmp    edx,0x47
  435ac5:	jne    0x435b00
  435ac7:	mov    edx,DWORD PTR [rsi+0x28]
  435aca:	xor    r9d,r9d
  435acd:	cmp    edx,DWORD PTR [rsi+0x2c]
  435ad0:	jge    0x435a70
  435ad2:	movsxd rax,edx
  435ad5:	add    edx,0x1
  435ad8:	lea    rcx,[rax+rax*2]
  435adc:	mov    rax,QWORD PTR [rsi+0x20]
  435ae0:	mov    DWORD PTR [rsi+0x28],edx
  435ae3:	lea    r9,[rax+rcx*8]
  435ae7:	test   r9,r9
  435aea:	je     0x435a70
  435aec:	mov    DWORD PTR [r9],0x46
  435af3:	mov    DWORD PTR [r9+0x10],ebp
  435af7:	mov    QWORD PTR [r9+0x8],rbx
  435afb:	jmp    0x435a70
  435b00:	mov    rcx,rsi
  435b03:	call   0x42e6f0
  435b08:	test   eax,eax
  435b0a:	jne    0x435ac7
  435b0c:	xor    ebx,ebx
  435b0e:	jmp    0x4356fe
  435b13:	mov    rcx,rsi
  435b16:	mov    QWORD PTR [rsp+0x28],r9
  435b1b:	call   0x42e6f0
  435b20:	test   eax,eax
  435b22:	mov    r9,QWORD PTR [rsp+0x28]
  435b27:	jne    0x435a70
  435b2d:	xor    ebx,ebx
  435b2f:	jmp    0x4356fe
  435b34:	add    rdx,0x2
  435b38:	mov    rcx,rsi
  435b3b:	mov    QWORD PTR [rsi+0x18],rdx
  435b3f:	call   0x42e6f0
  435b44:	test   eax,eax
  435b46:	je     0x4356fc
  435b4c:	lea    rdx,[rip+0x226f7]        # 0x45824a
  435b53:	mov    r8d,0xe
  435b59:	mov    rcx,rsi
  435b5c:	call   0x42e0b0
  435b61:	mov    r9,rax
  435b64:	jmp    0x435a70
  435b69:	test   rdi,rdi
  435b6c:	mov    QWORD PTR [rbp+0x0],rdi
  435b70:	je     0x4356fc
  435b76:	test   r12,r12
  435b79:	je     0x435b8a
  435b7b:	mov    rax,QWORD PTR [rsp+0x38]
  435b80:	mov    QWORD PTR [rsp+0x38],r12
  435b85:	mov    QWORD PTR [r12+0x8],rax
  435b8a:	mov    rax,QWORD PTR [rsi+0x18]
  435b8e:	cmp    BYTE PTR [rax],0x45
  435b91:	jne    0x4356fc
  435b97:	add    rax,0x1
  435b9b:	mov    rbx,QWORD PTR [rsp+0x38]
  435ba0:	mov    QWORD PTR [rsi+0x18],rax
  435ba4:	jmp    0x435718
  435ba9:	nop    DWORD PTR [rax+0x0]
  435bb0:	push   r13
  435bb2:	push   r12
  435bb4:	push   rbp
  435bb5:	push   rdi
  435bb6:	push   rsi
  435bb7:	push   rbx
  435bb8:	sub    rsp,0x28
  435bbc:	mov    rax,QWORD PTR [rcx+0x18]
  435bc0:	mov    rsi,rcx
  435bc3:	mov    edi,edx
  435bc5:	movzx  ecx,BYTE PTR [rax]
  435bc8:	cmp    cl,0x54
  435bcb:	je     0x435c83
  435bd1:	cmp    cl,0x47
  435bd4:	je     0x435c83
  435bda:	mov    rcx,rsi
  435bdd:	call   0x4356b0
  435be2:	test   rax,rax
  435be5:	mov    rbx,rax
  435be8:	je     0x435bf4
  435bea:	test   edi,edi
  435bec:	je     0x435bf4
  435bee:	test   BYTE PTR [rsi+0x10],0x1
  435bf2:	je     0x435c44
  435bf4:	mov    rax,QWORD PTR [rsi+0x18]
  435bf8:	movzx  eax,BYTE PTR [rax]
  435bfb:	cmp    al,0x45
  435bfd:	sete   dl
  435c00:	test   al,al
  435c02:	sete   al
  435c05:	or     dl,al
  435c07:	jne    0x435c73
  435c09:	test   rbx,rbx
  435c0c:	je     0x435c73
  435c0e:	mov    rdx,rbx
  435c11:	mov    eax,DWORD PTR [rdx]
  435c13:	cmp    eax,0x4
  435c16:	je     0x435cb0
  435c1c:	jb     0x435dc0
  435c22:	sub    eax,0x1c
  435c25:	cmp    eax,0x4
  435c28:	ja     0x435dc0
  435c2e:	mov    rdx,QWORD PTR [rdx+0x8]
  435c32:	test   rdx,rdx
  435c35:	jne    0x435c11
  435c37:	jmp    0x435d1c
  435c3c:	nop    DWORD PTR [rax+0x0]
  435c40:	mov    rbx,QWORD PTR [rbx+0x8]
  435c44:	mov    eax,DWORD PTR [rbx]
  435c46:	lea    edx,[rax-0x1c]
  435c49:	cmp    edx,0x4
  435c4c:	jbe    0x435c40
  435c4e:	cmp    eax,0x2
  435c51:	jne    0x435c73
  435c53:	mov    rdx,QWORD PTR [rbx+0x10]
  435c57:	mov    eax,DWORD PTR [rdx]
  435c59:	sub    eax,0x1c
  435c5c:	cmp    eax,0x4
  435c5f:	ja     0x435c6f
  435c61:	mov    rdx,QWORD PTR [rdx+0x8]
  435c65:	mov    eax,DWORD PTR [rdx]
  435c67:	sub    eax,0x1c
  435c6a:	cmp    eax,0x4
  435c6d:	jbe    0x435c61
  435c6f:	mov    QWORD PTR [rbx+0x10],rdx
  435c73:	mov    rax,rbx
  435c76:	add    rsp,0x28
  435c7a:	pop    rbx
  435c7b:	pop    rsi
  435c7c:	pop    rdi
  435c7d:	pop    rbp
  435c7e:	pop    r12
  435c80:	pop    r13
  435c82:	ret    
  435c83:	mov    ecx,DWORD PTR [rsi+0x50]
  435c86:	lea    edx,[rcx+0x14]
  435c89:	mov    DWORD PTR [rsi+0x50],edx
  435c8c:	movzx  edx,BYTE PTR [rax]
  435c8f:	cmp    dl,0x54
  435c92:	je     0x435d80
  435c98:	cmp    dl,0x47
  435c9b:	je     0x435d43
  435ca1:	xor    eax,eax
  435ca3:	add    rsp,0x28
  435ca7:	pop    rbx
  435ca8:	pop    rsi
  435ca9:	pop    rdi
  435caa:	pop    rbp
  435cab:	pop    r12
  435cad:	pop    r13
  435caf:	ret    
  435cb0:	mov    rax,QWORD PTR [rdx+0x8]
  435cb4:	test   rax,rax
  435cb7:	je     0x435d17
  435cb9:	mov    edi,DWORD PTR [rax]
  435cbb:	lea    ecx,[rdi-0x1]
  435cbe:	cmp    ecx,0x33
  435cc1:	ja     0x435d17
  435cc3:	mov    edx,0x1
  435cc8:	movabs r8,0x80000000000c0
  435cd2:	shl    rdx,cl
  435cd5:	test   rdx,r8
  435cd8:	jne    0x435dc0
  435cde:	and    edx,0x3
  435ce1:	mov    r9d,0x1
  435ce7:	jne    0x435d0e
  435ce9:	jmp    0x435d17
  435ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  435cf0:	mov    edi,DWORD PTR [rax]
  435cf2:	lea    ecx,[rdi-0x1]
  435cf5:	cmp    ecx,0x33
  435cf8:	ja     0x435d17
  435cfa:	mov    rdx,r9
  435cfd:	shl    rdx,cl
  435d00:	test   rdx,r8
  435d03:	jne    0x435dc0
  435d09:	and    edx,0x3
  435d0c:	je     0x435d17
  435d0e:	mov    rax,QWORD PTR [rax+0x10]
  435d12:	test   rax,rax
  435d15:	jne    0x435cf0
  435d17:	mov    edx,0x1
  435d1c:	mov    rcx,rsi
  435d1f:	call   0x434790
  435d24:	mov    r8,rbx
  435d27:	mov    r9,rax
  435d2a:	mov    edx,0x3
  435d2f:	mov    rcx,rsi
  435d32:	add    rsp,0x28
  435d36:	pop    rbx
  435d37:	pop    rsi
  435d38:	pop    rdi
  435d39:	pop    rbp
  435d3a:	pop    r12
  435d3c:	pop    r13
  435d3e:	jmp    0x42e030
  435d43:	lea    rdx,[rax+0x1]
  435d47:	mov    QWORD PTR [rsi+0x18],rdx
  435d4b:	cmp    BYTE PTR [rax+0x1],0x0
  435d4f:	je     0x435ca1
  435d55:	lea    rdx,[rax+0x2]
  435d59:	mov    QWORD PTR [rsi+0x18],rdx
  435d5d:	movzx  edi,BYTE PTR [rax+0x1]
  435d61:	lea    edx,[rdi-0x41]
  435d64:	cmp    dl,0x31
  435d67:	ja     0x435ca1
  435d6d:	lea    rcx,[rip+0x224ec]        # 0x458260
  435d74:	movzx  edx,dl
  435d77:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  435d7b:	add    rcx,rdx
  435d7e:	jmp    rcx
  435d80:	lea    rdx,[rax+0x1]
  435d84:	mov    QWORD PTR [rsi+0x18],rdx
  435d88:	cmp    BYTE PTR [rax+0x1],0x0
  435d8c:	je     0x435ca1
  435d92:	lea    rdx,[rax+0x2]
  435d96:	mov    QWORD PTR [rsi+0x18],rdx
  435d9a:	movzx  eax,BYTE PTR [rax+0x1]
  435d9e:	sub    eax,0x43
  435da1:	cmp    al,0x33
  435da3:	ja     0x435ca1
  435da9:	lea    rdx,[rip+0x22578]        # 0x458328
  435db0:	movzx  eax,al
  435db3:	movsxd rax,DWORD PTR [rdx+rax*4]
  435db7:	add    rdx,rax
  435dba:	jmp    rdx
  435dbc:	nop    DWORD PTR [rax+0x0]
  435dc0:	xor    edx,edx
  435dc2:	jmp    0x435d1c
  435dc7:	nop    WORD PTR [rax+rax*1+0x0]
  435dd0:	lea    rcx,[rsi+0x18]
  435dd4:	call   0x42e560
  435dd9:	cmp    eax,0x1
  435ddc:	jle    0x435ca1
  435de2:	mov    rdx,QWORD PTR [rsi+0x18]
  435de6:	cmp    BYTE PTR [rdx],0x0
  435de9:	je     0x435ca1
  435def:	lea    rdi,[rdx+0x1]
  435df3:	mov    QWORD PTR [rsi+0x18],rdi
  435df7:	cmp    BYTE PTR [rdx],0x5f
  435dfa:	jne    0x435ca1
  435e00:	lea    ebp,[rax-0x1]
  435e03:	xor    r13d,r13d
  435e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435e10:	movzx  eax,BYTE PTR [rdi]
  435e13:	test   al,al
  435e15:	je     0x435ca1
  435e1b:	cmp    al,0x24
  435e1d:	mov    ebx,0x1
  435e22:	jne    0x435e44
  435e24:	jmp    0x436100
  435e29:	nop    DWORD PTR [rax+0x0]
  435e30:	movzx  ecx,BYTE PTR [rdi+rbx*1]
  435e34:	lea    r9,[rbx+0x1]
  435e38:	test   cl,cl
  435e3a:	je     0x435e4e
  435e3c:	cmp    cl,0x24
  435e3f:	je     0x435e4e
  435e41:	mov    rbx,r9
  435e44:	cmp    ebx,ebp
  435e46:	mov    r12d,ebx
  435e49:	jl     0x435e30
  435e4b:	movsxd rbx,ebx
  435e4e:	mov    rdx,rdi
  435e51:	mov    r8d,r12d
  435e54:	mov    rcx,rsi
  435e57:	call   0x42e0b0
  435e5c:	mov    rdi,rbx
  435e5f:	add    rdi,QWORD PTR [rsi+0x18]
  435e63:	sub    ebp,r12d
  435e66:	test   rax,rax
  435e69:	mov    r9,rax
  435e6c:	mov    QWORD PTR [rsi+0x18],rdi
  435e70:	je     0x435ca1
  435e76:	test   r13,r13
  435e79:	je     0x436160
  435e7f:	mov    r8,r13
  435e82:	mov    edx,0x3f
  435e87:	mov    rcx,rsi
  435e8a:	call   0x42e030
  435e8f:	test   rax,rax
  435e92:	mov    r13,rax
  435e95:	je     0x435ca1
  435e9b:	test   ebp,ebp
  435e9d:	jg     0x435e10
  435ea3:	xor    r9d,r9d
  435ea6:	mov    r8,r13
  435ea9:	mov    edx,0x3e
  435eae:	jmp    0x435d2f
  435eb3:	mov    rcx,rsi
  435eb6:	call   0x4356b0
  435ebb:	xor    r9d,r9d
  435ebe:	mov    r8,rax
  435ec1:	mov    edx,0x13
  435ec6:	jmp    0x435d2f
  435ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  435ed0:	mov    rcx,rsi
  435ed3:	call   0x4356b0
  435ed8:	mov    rcx,rsi
  435edb:	mov    rbx,rax
  435ede:	call   0x42e5e0
  435ee3:	mov    r8,rbx
  435ee6:	mov    r9,rax
  435ee9:	mov    edx,0x16
  435eee:	jmp    0x435d2f
  435ef3:	xor    edx,edx
  435ef5:	mov    rcx,rsi
  435ef8:	call   0x435bb0
  435efd:	xor    r9d,r9d
  435f00:	mov    r8,rax
  435f03:	mov    edx,0x17
  435f08:	jmp    0x435d2f
  435f0d:	nop    DWORD PTR [rax]
  435f10:	cmp    BYTE PTR [rax+0x2],0x0
  435f14:	je     0x436168
  435f1a:	lea    rdx,[rax+0x3]
  435f1e:	mov    QWORD PTR [rsi+0x18],rdx
  435f22:	cmp    BYTE PTR [rax+0x2],0x6e
  435f26:	jne    0x436168
  435f2c:	xor    edx,edx
  435f2e:	mov    rcx,rsi
  435f31:	call   0x435bb0
  435f36:	xor    r9d,r9d
  435f39:	mov    r8,rax
  435f3c:	mov    edx,0x49
  435f41:	jmp    0x435d2f
  435f46:	mov    edx,0x76
  435f4b:	mov    rcx,rsi
  435f4e:	call   0x42e810
  435f53:	test   eax,eax
  435f55:	je     0x435ca1
  435f5b:	xor    edx,edx
  435f5d:	mov    rcx,rsi
  435f60:	call   0x435bb0
  435f65:	xor    r9d,r9d
  435f68:	mov    r8,rax
  435f6b:	mov    edx,0x10
  435f70:	jmp    0x435d2f
  435f75:	xor    edx,edx
  435f77:	mov    rcx,rsi
  435f7a:	call   0x42e810
  435f7f:	test   eax,eax
  435f81:	je     0x435ca1
  435f87:	xor    edx,edx
  435f89:	mov    rcx,rsi
  435f8c:	call   0x42e810
  435f91:	test   eax,eax
  435f93:	je     0x435ca1
  435f99:	xor    edx,edx
  435f9b:	mov    rcx,rsi
  435f9e:	call   0x435bb0
  435fa3:	xor    r9d,r9d
  435fa6:	mov    r8,rax
  435fa9:	mov    edx,0x11
  435fae:	jmp    0x435d2f
  435fb3:	mov    rcx,rsi
  435fb6:	call   0x4356b0
  435fbb:	xor    r9d,r9d
  435fbe:	mov    r8,rax
  435fc1:	mov    edx,0x15
  435fc6:	jmp    0x435d2f
  435fcb:	mov    edx,0x68
  435fd0:	mov    rcx,rsi
  435fd3:	call   0x42e810
  435fd8:	test   eax,eax
  435fda:	je     0x435ca1
  435fe0:	xor    edx,edx
  435fe2:	mov    rcx,rsi
  435fe5:	call   0x435bb0
  435fea:	xor    r9d,r9d
  435fed:	mov    r8,rax
  435ff0:	mov    edx,0xf
  435ff5:	jmp    0x435d2f
  435ffa:	add    ecx,0xf
  435ffd:	mov    DWORD PTR [rsi+0x50],ecx
  436000:	mov    rcx,rsi
  436003:	call   0x4337a0
  436008:	xor    r9d,r9d
  43600b:	mov    r8,rax
  43600e:	mov    edx,0x9
  436013:	jmp    0x435d2f
  436018:	add    ecx,0xa
  43601b:	mov    DWORD PTR [rsi+0x50],ecx
  43601e:	mov    rcx,rsi
  436021:	call   0x4337a0
  436026:	xor    r9d,r9d
  436029:	mov    r8,rax
  43602c:	mov    edx,0xa
  436031:	jmp    0x435d2f
  436036:	mov    rcx,rsi
  436039:	call   0x4337a0
  43603e:	xor    r9d,r9d
  436041:	mov    r8,rax
  436044:	mov    edx,0xd
  436049:	jmp    0x435d2f
  43604e:	mov    rcx,rsi
  436051:	call   0x4337a0
  436056:	xor    r9d,r9d
  436059:	mov    r8,rax
  43605c:	mov    edx,0x12
  436061:	jmp    0x435d2f
  436066:	mov    rcx,rsi
  436069:	call   0x4337a0
  43606e:	xor    r9d,r9d
  436071:	mov    r8,rax
  436074:	mov    edx,0xc
  436079:	jmp    0x435d2f
  43607e:	mov    rcx,rsi
  436081:	call   0x4356b0
  436086:	xor    r9d,r9d
  436089:	mov    r8,rax
  43608c:	mov    edx,0x14
  436091:	jmp    0x435d2f
  436096:	mov    rcx,rsi
  436099:	call   0x4337a0
  43609e:	xor    r9d,r9d
  4360a1:	mov    r8,rax
  4360a4:	mov    edx,0xe
  4360a9:	jmp    0x435d2f
  4360ae:	mov    rcx,rsi
  4360b1:	call   0x4337a0
  4360b6:	lea    rcx,[rsi+0x18]
  4360ba:	mov    rbx,rax
  4360bd:	call   0x42e560
  4360c2:	test   eax,eax
  4360c4:	js     0x435ca1
  4360ca:	mov    rdx,QWORD PTR [rsi+0x18]
  4360ce:	cmp    BYTE PTR [rdx],0x5f
  4360d1:	jne    0x435ca1
  4360d7:	add    rdx,0x1
  4360db:	mov    rcx,rsi
  4360de:	mov    QWORD PTR [rsi+0x18],rdx
  4360e2:	call   0x4337a0
  4360e7:	add    DWORD PTR [rsi+0x50],0x5
  4360eb:	mov    r8,rax
  4360ee:	mov    r9,rbx
  4360f1:	mov    edx,0xb
  4360f6:	jmp    0x435d2f
  4360fb:	nop    DWORD PTR [rax+rax*1+0x0]
  436100:	movzx  eax,BYTE PTR [rdi+0x1]
  436104:	cmp    al,0x53
  436106:	je     0x43618a
  43610c:	cmp    al,0x5f
  43610e:	je     0x436182
  436110:	cmp    al,0x24
  436112:	jne    0x435ca1
  436118:	mov    r8d,0x24
  43611e:	mov    eax,DWORD PTR [rsi+0x28]
  436121:	cmp    eax,DWORD PTR [rsi+0x2c]
  436124:	jge    0x436192
  436126:	movsxd rdx,eax
  436129:	add    eax,0x1
  43612c:	lea    rcx,[rdx+rdx*2]
  436130:	mov    rdx,QWORD PTR [rsi+0x20]
  436134:	mov    DWORD PTR [rsi+0x28],eax
  436137:	lea    r9,[rdx+rcx*8]
  43613b:	test   r9,r9
  43613e:	je     0x436192
  436140:	mov    DWORD PTR [r9+0x8],r8d
  436144:	mov    rax,QWORD PTR [rsi+0x18]
  436148:	sub    ebp,0x2
  43614b:	mov    DWORD PTR [r9],0x40
  436152:	lea    rdi,[rax+0x2]
  436156:	mov    QWORD PTR [rsi+0x18],rdi
  43615a:	jmp    0x435e76
  43615f:	nop
  436160:	mov    r13,r9
  436163:	jmp    0x435e9b
  436168:	xor    edx,edx
  43616a:	mov    rcx,rsi
  43616d:	call   0x435bb0
  436172:	xor    r9d,r9d
  436175:	mov    r8,rax
  436178:	mov    edx,0x48
  43617d:	jmp    0x435d2f
  436182:	mov    r8d,0x2e
  436188:	jmp    0x43611e
  43618a:	mov    r8d,0x2f
  436190:	jmp    0x43611e
  436192:	add    QWORD PTR [rsi+0x18],0x2
  436197:	jmp    0x435ca1
  43619c:	nop    DWORD PTR [rax+0x0]
  4361a0:	push   rdi
  4361a1:	push   rsi
  4361a2:	push   rbx
  4361a3:	sub    rsp,0x20
  4361a7:	mov    rax,QWORD PTR [rcx+0x18]
  4361ab:	movzx  r8d,BYTE PTR [rax]
  4361af:	cmp    r8b,0x5f
  4361b3:	je     0x4361cd
  4361b5:	test   edx,edx
  4361b7:	jne    0x4361c3
  4361b9:	cmp    r8b,0x5a
  4361bd:	je     0x4362db
  4361c3:	xor    eax,eax
  4361c5:	add    rsp,0x20
  4361c9:	pop    rbx
  4361ca:	pop    rsi
  4361cb:	pop    rdi
  4361cc:	ret    
  4361cd:	lea    r8,[rax+0x1]
  4361d1:	mov    QWORD PTR [rcx+0x18],r8
  4361d5:	cmp    BYTE PTR [rax+0x1],0x5a
  4361d9:	jne    0x4361c3
  4361db:	add    rax,0x2
  4361df:	mov    edi,edx
  4361e1:	mov    rbx,rcx
  4361e4:	mov    QWORD PTR [rcx+0x18],rax
  4361e8:	call   0x435bb0
  4361ed:	test   edi,edi
  4361ef:	mov    rsi,rax
  4361f2:	je     0x4361c5
  4361f4:	test   BYTE PTR [rbx+0x10],0x1
  4361f8:	je     0x4361c5
  4361fa:	mov    rdx,QWORD PTR [rbx+0x18]
  4361fe:	cmp    BYTE PTR [rdx],0x2e
  436201:	jne    0x4361c5
  436203:	movzx  eax,BYTE PTR [rdx+0x1]
  436207:	lea    ecx,[rax-0x61]
  43620a:	cmp    cl,0x19
  43620d:	jbe    0x4362a6
  436213:	cmp    al,0x5f
  436215:	je     0x4362a6
  43621b:	sub    eax,0x30
  43621e:	cmp    al,0x9
  436220:	ja     0x43629b
  436222:	movzx  r10d,BYTE PTR [rdx]
  436226:	mov    r8,rdx
  436229:	cmp    r10b,0x2e
  43622d:	jne    0x436269
  43622f:	nop
  436230:	movzx  eax,BYTE PTR [r8+0x1]
  436235:	lea    ecx,[rax-0x30]
  436238:	cmp    cl,0x9
  43623b:	ja     0x436269
  43623d:	movzx  r10d,BYTE PTR [r8+0x2]
  436242:	lea    rcx,[r8+0x2]
  436246:	mov    r8,rcx
  436249:	lea    eax,[r10-0x30]
  43624d:	cmp    al,0x9
  43624f:	ja     0x436229
  436251:	add    r8,0x1
  436255:	movzx  r10d,BYTE PTR [r8]
  436259:	lea    r11d,[r10-0x30]
  43625d:	cmp    r11b,0x9
  436261:	jbe    0x436251
  436263:	cmp    r10b,0x2e
  436267:	je     0x436230
  436269:	mov    QWORD PTR [rbx+0x18],r8
  43626d:	mov    rcx,rbx
  436270:	sub    r8d,edx
  436273:	call   0x42e0b0
  436278:	mov    r8,rsi
  43627b:	mov    edx,0x4c
  436280:	mov    r9,rax
  436283:	mov    rcx,rbx
  436286:	call   0x42e030
  43628b:	mov    rdx,QWORD PTR [rbx+0x18]
  43628f:	mov    rsi,rax
  436292:	cmp    BYTE PTR [rdx],0x2e
  436295:	je     0x436203
  43629b:	mov    rax,rsi
  43629e:	add    rsp,0x20
  4362a2:	pop    rbx
  4362a3:	pop    rsi
  4362a4:	pop    rdi
  4362a5:	ret    
  4362a6:	movzx  r10d,BYTE PTR [rdx+0x2]
  4362ab:	lea    r8,[rdx+0x2]
  4362af:	lea    eax,[r10-0x61]
  4362b3:	cmp    al,0x19
  4362b5:	ja     0x4362d0
  4362b7:	nop    WORD PTR [rax+rax*1+0x0]
  4362c0:	add    r8,0x1
  4362c4:	movzx  r10d,BYTE PTR [r8]
  4362c8:	lea    eax,[r10-0x61]
  4362cc:	cmp    al,0x19
  4362ce:	jbe    0x4362c0
  4362d0:	cmp    r10b,0x5f
  4362d4:	je     0x4362c0
  4362d6:	jmp    0x436229
  4362db:	add    rax,0x1
  4362df:	xor    edx,edx
  4362e1:	mov    QWORD PTR [rcx+0x18],rax
  4362e5:	add    rsp,0x20
  4362e9:	pop    rbx
  4362ea:	pop    rsi
  4362eb:	pop    rdi
  4362ec:	jmp    0x435bb0
  4362f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4362f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436300:	push   rdi
  436301:	push   rsi
  436302:	push   rbx
  436303:	sub    rsp,0x20
  436307:	mov    rax,QWORD PTR [rcx+0x18]
  43630b:	cmp    BYTE PTR [rax],0x4c
  43630e:	je     0x436320
  436310:	xor    eax,eax
  436312:	add    rsp,0x20
  436316:	pop    rbx
  436317:	pop    rsi
  436318:	pop    rdi
  436319:	ret    
  43631a:	nop    WORD PTR [rax+rax*1+0x0]
  436320:	lea    rdx,[rax+0x1]
  436324:	mov    rbx,rcx
  436327:	mov    QWORD PTR [rcx+0x18],rdx
  43632b:	movzx  eax,BYTE PTR [rax+0x1]
  43632f:	cmp    al,0x5a
  436331:	je     0x4363d2
  436337:	cmp    al,0x5f
  436339:	je     0x4363d2
  43633f:	call   0x4337a0
  436344:	test   rax,rax
  436347:	mov    rsi,rax
  43634a:	je     0x436310
  43634c:	cmp    DWORD PTR [rax],0x27
  43634f:	je     0x436400
  436355:	mov    rdx,QWORD PTR [rbx+0x18]
  436359:	mov    edi,0x3c
  43635e:	movzx  r9d,BYTE PTR [rdx]
  436362:	cmp    r9b,0x6e
  436366:	je     0x4363e0
  436368:	cmp    r9b,0x45
  43636c:	je     0x43641a
  436372:	test   r9b,r9b
  436375:	je     0x436310
  436377:	lea    r9,[rdx+0x1]
  43637b:	jmp    0x436389
  43637d:	nop    DWORD PTR [rax]
  436380:	add    r9,0x1
  436384:	test   r10b,r10b
  436387:	je     0x436310
  436389:	mov    QWORD PTR [rbx+0x18],r9
  43638d:	movzx  r10d,BYTE PTR [r9]
  436391:	cmp    r10b,0x45
  436395:	jne    0x436380
  436397:	mov    r8d,r9d
  43639a:	sub    r8d,edx
  43639d:	mov    rcx,rbx
  4363a0:	call   0x42e0b0
  4363a5:	mov    r8,rsi
  4363a8:	mov    r9,rax
  4363ab:	mov    edx,edi
  4363ad:	mov    rcx,rbx
  4363b0:	call   0x42e030
  4363b5:	mov    rdx,QWORD PTR [rbx+0x18]
  4363b9:	cmp    BYTE PTR [rdx],0x45
  4363bc:	jne    0x436310
  4363c2:	add    rdx,0x1
  4363c6:	mov    QWORD PTR [rbx+0x18],rdx
  4363ca:	add    rsp,0x20
  4363ce:	pop    rbx
  4363cf:	pop    rsi
  4363d0:	pop    rdi
  4363d1:	ret    
  4363d2:	xor    edx,edx
  4363d4:	mov    rcx,rbx
  4363d7:	call   0x4361a0
  4363dc:	jmp    0x4363b5
  4363de:	xchg   ax,ax
  4363e0:	lea    rax,[rdx+0x1]
  4363e4:	mov    dil,0x3d
  4363e7:	mov    QWORD PTR [rbx+0x18],rax
  4363eb:	movzx  r9d,BYTE PTR [rdx+0x1]
  4363f0:	mov    rdx,rax
  4363f3:	jmp    0x436368
  4363f8:	nop    DWORD PTR [rax+rax*1+0x0]
  436400:	mov    rax,QWORD PTR [rax+0x8]
  436404:	mov    edx,DWORD PTR [rax+0x1c]
  436407:	test   edx,edx
  436409:	je     0x436355
  43640f:	mov    eax,DWORD PTR [rax+0x8]
  436412:	sub    DWORD PTR [rbx+0x50],eax
  436415:	jmp    0x436355
  43641a:	xor    r8d,r8d
  43641d:	jmp    0x43639d
  436422:	nop    DWORD PTR [rax+0x0]
  436426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436430:	push   rbp
  436431:	push   rdi
  436432:	push   rsi
  436433:	push   rbx
  436434:	sub    rsp,0x88
  43643b:	lea    rbp,[rsp+0x80]
  436443:	mov    rdi,rcx
  436446:	mov    DWORD PTR [rdx],0x0
  43644c:	mov    DWORD PTR [r8],0x0
  436453:	mov    rsi,rdx
  436456:	mov    rbx,r8
  436459:	call   0x4493c0
  43645e:	mov    rdx,rax
  436461:	lea    rax,[rdi+rax*1]
  436465:	mov    QWORD PTR [rbp-0x60],rdi
  436469:	mov    DWORD PTR [rbp-0x50],0x4000
  436470:	mov    QWORD PTR [rbp-0x48],rdi
  436474:	mov    QWORD PTR [rbp-0x58],rax
  436478:	lea    eax,[rdx+rdx*1]
  43647b:	mov    DWORD PTR [rbp-0x38],0x0
  436482:	mov    DWORD PTR [rbp-0x24],edx
  436485:	mov    DWORD PTR [rbp-0x28],0x0
  43648c:	mov    DWORD PTR [rbp-0x34],eax
  43648f:	cdqe   
  436491:	mov    DWORD PTR [rbp-0x20],0x0
  436498:	lea    rax,[rax+rax*2]
  43649c:	mov    QWORD PTR [rbp-0x18],0x0
  4364a4:	mov    DWORD PTR [rbp-0x10],0x0
  4364ab:	mov    DWORD PTR [rbp-0xc],0x0
  4364b2:	mov    DWORD PTR [rbp-0x8],0x0
  4364b9:	lea    rax,[rax*8+0x10]
  4364c1:	call   0x43d410
  4364c6:	movsxd rdx,edx
  4364c9:	sub    rsp,rax
  4364cc:	lea    rax,[rdx*8+0x16]
  4364d4:	lea    rcx,[rsp+0x20]
  4364d9:	and    rax,0xfffffffffffffff0
  4364dd:	call   0x43d410
  4364e2:	mov    edx,0x1
  4364e7:	sub    rsp,rax
  4364ea:	mov    QWORD PTR [rbp-0x40],rcx
  4364ee:	lea    rcx,[rbp-0x60]
  4364f2:	lea    rax,[rsp+0x20]
  4364f7:	mov    QWORD PTR [rbp-0x30],rax
  4364fb:	call   0x4361a0
  436500:	lea    r10,[rip+0x21ef1]        # 0x4583f8
  436507:	mov    rcx,rax
  43650a:	xor    eax,eax
  43650c:	nop    DWORD PTR [rax+0x0]
  436510:	test   rcx,rcx
  436513:	je     0x43653a
  436515:	cmp    DWORD PTR [rcx],0x8
  436518:	ja     0x43653a
  43651a:	mov    r9d,DWORD PTR [rcx]
  43651d:	movsxd r9,DWORD PTR [r10+r9*4]
  436521:	add    r9,r10
  436524:	jmp    r9
  436527:	nop    WORD PTR [rax+rax*1+0x0]
  436530:	mov    eax,DWORD PTR [rcx+0x8]
  436533:	mov    DWORD PTR [rbx],eax
  436535:	mov    eax,0x1
  43653a:	lea    rsp,[rbp+0x8]
  43653e:	pop    rbx
  43653f:	pop    rsi
  436540:	pop    rdi
  436541:	pop    rbp
  436542:	ret    
  436543:	mov    eax,DWORD PTR [rcx+0x8]
  436546:	mov    DWORD PTR [rsi],eax
  436548:	mov    eax,0x1
  43654d:	lea    rsp,[rbp+0x8]
  436551:	pop    rbx
  436552:	pop    rsi
  436553:	pop    rdi
  436554:	pop    rbp
  436555:	ret    
  436556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436560:	mov    rcx,QWORD PTR [rcx+0x10]
  436564:	jmp    0x436510
  436566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436570:	mov    rcx,QWORD PTR [rcx+0x8]
  436574:	jmp    0x436510
  436576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436580:	push   rbp
  436581:	push   r12
  436583:	push   rdi
  436584:	push   rsi
  436585:	push   rbx
  436586:	sub    rsp,0x1a0
  43658d:	lea    rbp,[rsp+0x80]
  436595:	lea    r12,[rbp-0x50]
  436599:	mov    rdi,rdx
  43659c:	mov    esi,ecx
  43659e:	mov    QWORD PTR [rbp+0xc0],r8
  4365a5:	mov    r8,rdi
  4365a8:	mov    QWORD PTR [rbp+0xc8],r9
  4365af:	lea    rdx,[r12+0x154]
  4365b7:	lea    rcx,[r12+0x164]
  4365bf:	mov    QWORD PTR [rbp+0xb0],0x0
  4365ca:	mov    BYTE PTR [rbp+0xb8],0x0
  4365d1:	mov    QWORD PTR [rbp+0xd0],0x0
  4365dc:	mov    rbx,rsp
  4365df:	mov    QWORD PTR [rbp+0xd8],0x0
  4365ea:	mov    DWORD PTR [rbp+0xe4],0x0
  4365f4:	mov    DWORD PTR [rbp+0xe8],0x0
  4365fe:	mov    DWORD PTR [rbp+0xe0],0x0
  436608:	mov    QWORD PTR [rbp+0xf0],0x0
  436613:	mov    QWORD PTR [rbp+0xf8],0x0
  43661e:	mov    DWORD PTR [rbp+0x100],0x0
  436628:	mov    DWORD PTR [rbp+0x104],0x0
  436632:	mov    QWORD PTR [rbp+0x108],0x0
  43663d:	mov    DWORD PTR [rbp+0x110],0x0
  436647:	mov    DWORD PTR [rbp+0x114],0x0
  436651:	call   0x42e470
  436656:	movsxd rax,DWORD PTR [rbp+0x104]
  43665d:	mov    r9d,DWORD PTR [rbp+0x114]
  436664:	mov    QWORD PTR [rbp+0x118],0x0
  43666f:	imul   r9d,eax
  436673:	shl    rax,0x4
  436677:	add    rax,0x10
  43667b:	mov    DWORD PTR [rbp+0x114],r9d
  436682:	call   0x43d410
  436687:	sub    rsp,rax
  43668a:	movsxd rax,r9d
  43668d:	shl    rax,0x4
  436691:	lea    rdx,[rsp+0x20]
  436696:	add    rax,0x10
  43669a:	call   0x43d410
  43669f:	sub    rsp,rax
  4366a2:	mov    QWORD PTR [rbp+0xf8],rdx
  4366a9:	mov    r8,rdi
  4366ac:	lea    rax,[rsp+0x20]
  4366b1:	mov    edx,esi
  4366b3:	mov    rcx,r12
  4366b6:	mov    QWORD PTR [rbp-0x60],rdi
  4366ba:	mov    QWORD PTR [rbp+0x108],rax
  4366c1:	mov    rax,QWORD PTR [rbp+0xf0]
  4366c8:	mov    QWORD PTR [rbp-0x58],rax
  4366cc:	lea    rax,[rbp-0x60]
  4366d0:	mov    QWORD PTR [rbp+0xf0],rax
  4366d7:	call   0x42eb10
  4366dc:	mov    rax,QWORD PTR [rbp-0x58]
  4366e0:	mov    rcx,r12
  4366e3:	mov    QWORD PTR [rbp+0xf0],rax
  4366ea:	mov    rdx,QWORD PTR [rbp+0xb0]
  4366f1:	mov    rsp,rbx
  4366f4:	mov    r8,QWORD PTR [rbp+0xc8]
  4366fb:	mov    BYTE PTR [rbp+rdx*1-0x50],0x0
  436700:	call   QWORD PTR [rbp+0xc0]
  436706:	mov    edx,DWORD PTR [rbp+0xe0]
  43670c:	xor    eax,eax
  43670e:	test   edx,edx
  436710:	sete   al
  436713:	lea    rsp,[rbp+0x120]
  43671a:	pop    rbx
  43671b:	pop    rsi
  43671c:	pop    rdi
  43671d:	pop    r12
  43671f:	pop    rbp
  436720:	ret    
  436721:	nop    DWORD PTR [rax+rax*1+0x0]
  436726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436730:	push   rbp
  436731:	push   r15
  436733:	push   r14
  436735:	push   r13
  436737:	push   r12
  436739:	push   rdi
  43673a:	push   rsi
  43673b:	push   rbx
  43673c:	sub    rsp,0x88
  436743:	lea    rbp,[rsp+0x80]
  43674b:	cmp    BYTE PTR [rcx],0x5f
  43674e:	mov    r10,rcx
  436751:	je     0x436940
  436757:	lea    rdi,[rip+0x212ca]        # 0x457a28
  43675e:	mov    ecx,0x8
  436763:	mov    rsi,r10
  436766:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  436768:	je     0x4368f0
  43676e:	mov    eax,edx
  436770:	and    eax,0x10
  436773:	je     0x4368de
  436779:	xor    r13d,r13d
  43677c:	mov    rbx,r10
  43677f:	mov    rcx,r10
  436782:	mov    esi,edx
  436784:	mov    r12,r9
  436787:	mov    rdi,r8
  43678a:	mov    r14,rsp
  43678d:	call   0x4493c0
  436792:	mov    rdx,rax
  436795:	lea    rax,[rbx+rax*1]
  436799:	mov    QWORD PTR [rbp-0x60],rbx
  43679d:	mov    DWORD PTR [rbp-0x50],esi
  4367a0:	mov    QWORD PTR [rbp-0x48],rbx
  4367a4:	mov    QWORD PTR [rbp-0x58],rax
  4367a8:	lea    eax,[rdx+rdx*1]
  4367ab:	mov    DWORD PTR [rbp-0x38],0x0
  4367b2:	mov    DWORD PTR [rbp-0x24],edx
  4367b5:	mov    DWORD PTR [rbp-0x28],0x0
  4367bc:	mov    DWORD PTR [rbp-0x34],eax
  4367bf:	cdqe   
  4367c1:	mov    DWORD PTR [rbp-0x20],0x0
  4367c8:	lea    rax,[rax+rax*2]
  4367cc:	mov    QWORD PTR [rbp-0x18],0x0
  4367d4:	mov    DWORD PTR [rbp-0x10],0x0
  4367db:	mov    DWORD PTR [rbp-0xc],0x0
  4367e2:	mov    DWORD PTR [rbp-0x8],0x0
  4367e9:	lea    rax,[rax*8+0x10]
  4367f1:	call   0x43d410
  4367f6:	movsxd rdx,edx
  4367f9:	sub    rsp,rax
  4367fc:	lea    rax,[rdx*8+0x16]
  436804:	lea    rcx,[rsp+0x20]
  436809:	and    rax,0xfffffffffffffff0
  43680d:	call   0x43d410
  436812:	sub    rsp,rax
  436815:	cmp    r13d,0x1
  436819:	mov    QWORD PTR [rbp-0x40],rcx
  43681d:	lea    rax,[rsp+0x20]
  436822:	mov    QWORD PTR [rbp-0x30],rax
  436826:	je     0x4368a0
  436828:	jb     0x436955
  43682e:	cmp    r13d,0x3
  436832:	ja     0x436955
  436838:	cmp    BYTE PTR [rbx+0xb],0x5f
  43683c:	lea    r15,[rbx+0xb]
  436840:	mov    QWORD PTR [rbp-0x48],r15
  436844:	jne    0x436850
  436846:	cmp    BYTE PTR [rbx+0xc],0x5a
  43684a:	je     0x436980
  436850:	lea    rbx,[rbp-0x60]
  436854:	mov    rcx,r15
  436857:	call   0x4493c0
  43685c:	mov    rdx,r15
  43685f:	mov    r8d,eax
  436862:	mov    rcx,rbx
  436865:	call   0x42e0b0
  43686a:	mov    r8,rax
  43686d:	xor    edx,edx
  43686f:	cmp    r13d,0x2
  436873:	mov    rcx,rbx
  436876:	setne  dl
  436879:	xor    r9d,r9d
  43687c:	add    edx,0x43
  43687f:	call   0x42e030
  436884:	mov    r13,QWORD PTR [rbp-0x48]
  436888:	mov    rbx,rax
  43688b:	mov    rcx,r13
  43688e:	call   0x4493c0
  436893:	add    rax,r13
  436896:	mov    QWORD PTR [rbp-0x48],rax
  43689a:	jmp    0x4368b1
  43689c:	nop    DWORD PTR [rax+0x0]
  4368a0:	lea    rcx,[rbp-0x60]
  4368a4:	mov    edx,0x1
  4368a9:	call   0x4361a0
  4368ae:	mov    rbx,rax
  4368b1:	test   sil,0x1
  4368b5:	je     0x4368c2
  4368b7:	mov    rdx,QWORD PTR [rbp-0x48]
  4368bb:	xor    eax,eax
  4368bd:	cmp    BYTE PTR [rdx],0x0
  4368c0:	jne    0x4368db
  4368c2:	test   rbx,rbx
  4368c5:	je     0x436970
  4368cb:	mov    r9,r12
  4368ce:	mov    r8,rdi
  4368d1:	mov    rdx,rbx
  4368d4:	mov    ecx,esi
  4368d6:	call   0x436580
  4368db:	mov    rsp,r14
  4368de:	lea    rsp,[rbp+0x8]
  4368e2:	pop    rbx
  4368e3:	pop    rsi
  4368e4:	pop    rdi
  4368e5:	pop    r12
  4368e7:	pop    r13
  4368e9:	pop    r14
  4368eb:	pop    r15
  4368ed:	pop    rbp
  4368ee:	ret    
  4368ef:	nop
  4368f0:	movzx  eax,BYTE PTR [r10+0x8]
  4368f5:	cmp    al,0x5f
  4368f7:	sete   r11b
  4368fb:	cmp    al,0x2e
  4368fd:	sete   cl
  436900:	or     r11b,cl
  436903:	jne    0x43690d
  436905:	cmp    al,0x24
  436907:	jne    0x43676e
  43690d:	movzx  eax,BYTE PTR [r10+0x9]
  436912:	cmp    al,0x49
  436914:	sete   r13b
  436918:	je     0x436922
  43691a:	cmp    al,0x44
  43691c:	jne    0x43676e
  436922:	cmp    BYTE PTR [r10+0xa],0x5f
  436927:	jne    0x43676e
  43692d:	shl    r13d,0x1f
  436931:	sar    r13d,0x1f
  436935:	add    r13d,0x3
  436939:	jmp    0x43677c
  43693e:	xchg   ax,ax
  436940:	cmp    BYTE PTR [rcx+0x1],0x5a
  436944:	jne    0x436757
  43694a:	mov    r13d,0x1
  436950:	jmp    0x43677c
  436955:	lea    rcx,[rbp-0x60]
  436959:	call   0x4337a0
  43695e:	mov    rbx,rax
  436961:	jmp    0x4368b1
  436966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436970:	xor    eax,eax
  436972:	jmp    0x4368db
  436977:	nop    WORD PTR [rax+rax*1+0x0]
  436980:	lea    r10,[rbx+0xd]
  436984:	lea    rbx,[rbp-0x60]
  436988:	xor    edx,edx
  43698a:	mov    rcx,rbx
  43698d:	mov    QWORD PTR [rbp-0x48],r10
  436991:	call   0x435bb0
  436996:	mov    r8,rax
  436999:	jmp    0x43686d
  43699e:	xchg   ax,ax
  4369a0:	push   rbx
  4369a1:	sub    rsp,0x40
  4369a5:	mov    rbx,r8
  4369a8:	lea    r9,[rsp+0x20]
  4369ad:	lea    r8,[rip+0xffffffffffff7fdc]        # 0x42e990
  4369b4:	mov    QWORD PTR [rsp+0x20],0x0
  4369bd:	mov    QWORD PTR [rsp+0x28],0x0
  4369c6:	mov    QWORD PTR [rsp+0x30],0x0
  4369cf:	mov    DWORD PTR [rsp+0x38],0x0
  4369d7:	call   0x436730
  4369dc:	test   eax,eax
  4369de:	je     0x436a00
  4369e0:	mov    edx,DWORD PTR [rsp+0x38]
  4369e4:	mov    eax,0x1
  4369e9:	test   edx,edx
  4369eb:	cmove  rax,QWORD PTR [rsp+0x30]
  4369f1:	mov    QWORD PTR [rbx],rax
  4369f4:	mov    rax,QWORD PTR [rsp+0x20]
  4369f9:	add    rsp,0x40
  4369fd:	pop    rbx
  4369fe:	ret    
  4369ff:	nop
  436a00:	mov    rcx,QWORD PTR [rsp+0x20]
  436a05:	call   0x4494c8
  436a0a:	mov    QWORD PTR [rbx],0x0
  436a11:	xor    eax,eax
  436a13:	jmp    0x4369f9
  436a15:	nop
  436a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436a20:	push   rbp
  436a21:	push   rdi
  436a22:	push   rsi
  436a23:	push   rbx
  436a24:	sub    rsp,0x48
  436a28:	movsxd r8,r8d
  436a2b:	mov    edi,ecx
  436a2d:	mov    rbp,rdx
  436a30:	test   r8,r8
  436a33:	mov    rsi,r9
  436a36:	mov    QWORD PTR [rsp+0x20],0x0
  436a3f:	mov    QWORD PTR [rsp+0x28],0x0
  436a48:	mov    QWORD PTR [rsp+0x30],0x0
  436a51:	mov    DWORD PTR [rsp+0x38],0x0
  436a59:	jne    0x436aa0
  436a5b:	lea    r9,[rsp+0x20]
  436a60:	lea    r8,[rip+0xffffffffffff7f29]        # 0x42e990
  436a67:	mov    rdx,rbp
  436a6a:	mov    ecx,edi
  436a6c:	call   0x436580
  436a71:	test   eax,eax
  436a73:	je     0x436ad3
  436a75:	mov    edx,DWORD PTR [rsp+0x38]
  436a79:	mov    eax,0x1
  436a7e:	test   edx,edx
  436a80:	cmove  rax,QWORD PTR [rsp+0x30]
  436a86:	mov    QWORD PTR [rsi],rax
  436a89:	mov    rax,QWORD PTR [rsp+0x20]
  436a8e:	add    rsp,0x48
  436a92:	pop    rbx
  436a93:	pop    rsi
  436a94:	pop    rdi
  436a95:	pop    rbp
  436a96:	ret    
  436a97:	nop    WORD PTR [rax+rax*1+0x0]
  436aa0:	cmp    r8,0x2
  436aa4:	mov    ebx,0x2
  436aa9:	jbe    0x436ab8
  436aab:	nop    DWORD PTR [rax+rax*1+0x0]
  436ab0:	add    rbx,rbx
  436ab3:	cmp    r8,rbx
  436ab6:	ja     0x436ab0
  436ab8:	xor    ecx,ecx
  436aba:	mov    rdx,rbx
  436abd:	call   0x449420
  436ac2:	test   rax,rax
  436ac5:	je     0x436ae8
  436ac7:	mov    QWORD PTR [rsp+0x20],rax
  436acc:	mov    QWORD PTR [rsp+0x30],rbx
  436ad1:	jmp    0x436a5b
  436ad3:	mov    rcx,QWORD PTR [rsp+0x20]
  436ad8:	call   0x4494c8
  436add:	mov    QWORD PTR [rsi],0x0
  436ae4:	xor    eax,eax
  436ae6:	jmp    0x436a8e
  436ae8:	mov    rcx,QWORD PTR [rsp+0x20]
  436aed:	call   0x4494c8
  436af2:	mov    QWORD PTR [rsp+0x20],0x0
  436afb:	mov    QWORD PTR [rsp+0x28],0x0
  436b04:	mov    QWORD PTR [rsp+0x30],0x0
  436b0d:	mov    DWORD PTR [rsp+0x38],0x1
  436b15:	jmp    0x436a5b
  436b1a:	nop    WORD PTR [rax+rax*1+0x0]
  436b20:	lea    rax,[rcx+r8*1]
  436b24:	mov    QWORD PTR [r9],rcx
  436b27:	mov    DWORD PTR [r9+0x10],edx
  436b2b:	mov    QWORD PTR [r9+0x18],rcx
  436b2f:	mov    DWORD PTR [r9+0x28],0x0
  436b37:	mov    QWORD PTR [r9+0x8],rax
  436b3b:	lea    eax,[r8+r8*1]
  436b3f:	mov    DWORD PTR [r9+0x3c],r8d
  436b43:	mov    DWORD PTR [r9+0x38],0x0
  436b4b:	mov    DWORD PTR [r9+0x40],0x0
  436b53:	mov    DWORD PTR [r9+0x2c],eax
  436b57:	mov    QWORD PTR [r9+0x48],0x0
  436b5f:	mov    DWORD PTR [r9+0x50],0x0
  436b67:	mov    DWORD PTR [r9+0x54],0x0
  436b6f:	mov    DWORD PTR [r9+0x58],0x0
  436b77:	ret    
  436b78:	nop    DWORD PTR [rax+rax*1+0x0]
  436b80:	sub    rsp,0x38
  436b84:	lea    r8,[rsp+0x28]
  436b89:	call   0x4369a0
  436b8e:	add    rsp,0x38
  436b92:	ret    
  436b93:	nop    DWORD PTR [rax]
  436b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436ba0:	jmp    0x436730
  436ba5:	nop
  436ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436bb0:	sub    rsp,0x38
  436bb4:	mov    edx,0x25
  436bb9:	lea    r8,[rsp+0x28]
  436bbe:	call   0x4369a0
  436bc3:	add    rsp,0x38
  436bc7:	ret    
  436bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  436bd0:	mov    r9,r8
  436bd3:	mov    r8,rdx
  436bd6:	mov    edx,0x25
  436bdb:	jmp    0x436730
  436be0:	sub    rsp,0x38
  436be4:	lea    rdx,[rsp+0x28]
  436be9:	lea    r8,[rsp+0x2c]
  436bee:	call   0x436430
  436bf3:	xor    edx,edx
  436bf5:	test   eax,eax
  436bf7:	cmovne edx,DWORD PTR [rsp+0x28]
  436bfc:	mov    eax,edx
  436bfe:	add    rsp,0x38
  436c02:	ret    
  436c03:	nop    DWORD PTR [rax]
  436c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436c10:	sub    rsp,0x38
  436c14:	lea    rdx,[rsp+0x28]
  436c19:	lea    r8,[rsp+0x2c]
  436c1e:	call   0x436430
  436c23:	xor    edx,edx
  436c25:	test   eax,eax
  436c27:	cmovne edx,DWORD PTR [rsp+0x2c]
  436c2c:	mov    eax,edx
  436c2e:	add    rsp,0x38
  436c32:	ret    
  436c33:	nop
  436c34:	nop
  436c35:	nop
  436c36:	nop
  436c37:	nop
  436c38:	nop
  436c39:	nop
  436c3a:	nop
  436c3b:	nop
  436c3c:	nop
  436c3d:	nop
  436c3e:	nop
  436c3f:	nop
  436c40:	mov    DWORD PTR [rcx],0x67452301
  436c46:	mov    DWORD PTR [rcx+0x4],0xefcdab89
  436c4d:	mov    DWORD PTR [rcx+0x8],0x98badcfe
  436c54:	mov    DWORD PTR [rcx+0xc],0x10325476
  436c5b:	mov    DWORD PTR [rcx+0x14],0x0
  436c62:	mov    DWORD PTR [rcx+0x10],0x0
  436c69:	mov    DWORD PTR [rcx+0x18],0x0
  436c70:	ret    
  436c71:	nop    DWORD PTR [rax+rax*1+0x0]
  436c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436c80:	mov    r10d,DWORD PTR [rcx]
  436c83:	mov    r9d,DWORD PTR [rcx+0x4]
  436c87:	mov    rax,rdx
  436c8a:	mov    r8d,DWORD PTR [rcx+0x8]
  436c8e:	mov    edx,DWORD PTR [rcx+0xc]
  436c91:	mov    DWORD PTR [rax],r10d
  436c94:	mov    DWORD PTR [rax+0x4],r9d
  436c98:	mov    DWORD PTR [rax+0x8],r8d
  436c9c:	mov    DWORD PTR [rax+0xc],edx
  436c9f:	ret    
  436ca0:	push   r15
  436ca2:	push   r14
  436ca4:	push   r13
  436ca6:	push   r12
  436ca8:	push   rbp
  436ca9:	push   rdi
  436caa:	push   rsi
  436cab:	push   rbx
  436cac:	sub    rsp,0x48
  436cb0:	mov    ebx,DWORD PTR [r8+0x4]
  436cb4:	mov    rax,rdx
  436cb7:	mov    rsi,rcx
  436cba:	mov    QWORD PTR [rsp+0xa0],r8
  436cc2:	and    rax,0xfffffffffffffffc
  436cc6:	add    rax,rcx
  436cc9:	mov    rcx,rdx
  436ccc:	mov    rdi,rax
  436ccf:	mov    QWORD PTR [rsp+0x38],rax
  436cd4:	mov    eax,DWORD PTR [r8]
  436cd7:	shr    rcx,0x20
  436cdb:	add    ecx,DWORD PTR [r8+0x14]
  436cdf:	mov    DWORD PTR [rsp+0x30],eax
  436ce3:	mov    eax,DWORD PTR [r8+0x8]
  436ce7:	mov    DWORD PTR [rsp+0x28],eax
  436ceb:	mov    eax,DWORD PTR [r8+0xc]
  436cef:	mov    DWORD PTR [rsp+0x2c],eax
  436cf3:	mov    eax,edx
  436cf5:	add    eax,DWORD PTR [r8+0x10]
  436cf9:	cmp    rax,rdx
  436cfc:	mov    DWORD PTR [r8+0x10],eax
  436d00:	setb   al
  436d03:	movzx  eax,al
  436d06:	add    eax,ecx
  436d08:	cmp    rsi,rdi
  436d0b:	mov    DWORD PTR [r8+0x14],eax
  436d0f:	jae    0x4374dc
  436d15:	mov    r14d,DWORD PTR [rsi]
  436d18:	mov    ecx,DWORD PTR [rsp+0x2c]
  436d1c:	mov    eax,DWORD PTR [rsp+0x30]
  436d20:	mov    edi,DWORD PTR [rsp+0x28]
  436d24:	mov    r10d,DWORD PTR [rsi+0x8]
  436d28:	mov    r11d,DWORD PTR [rsi+0x10]
  436d2c:	mov    r12d,DWORD PTR [rsi+0x18]
  436d30:	lea    edx,[r14+rax*1-0x28955b88]
  436d38:	mov    eax,ecx
  436d3a:	xor    eax,edi
  436d3c:	lea    r8d,[r10+rdi*1+0x242070db]
  436d44:	mov    DWORD PTR [rsp+0x10],r10d
  436d49:	and    eax,ebx
  436d4b:	mov    r10d,DWORD PTR [rsi+0x20]
  436d4f:	mov    DWORD PTR [rsp+0x18],r11d
  436d54:	xor    eax,ecx
  436d56:	mov    DWORD PTR [rsp+0x1c],r12d
  436d5b:	add    eax,edx
  436d5d:	mov    edx,DWORD PTR [rsi+0x4]
  436d60:	rol    eax,0x7
  436d63:	mov    DWORD PTR [rsp+0x20],r10d
  436d68:	add    eax,ebx
  436d6a:	mov    DWORD PTR [rsp+0xc],edx
  436d6e:	lea    ecx,[rdx+rcx*1-0x173848aa]
  436d75:	mov    edx,edi
  436d77:	xor    edx,ebx
  436d79:	mov    r15d,eax
  436d7c:	and    edx,eax
  436d7e:	xor    r15d,ebx
  436d81:	xor    edx,edi
  436d83:	mov    edi,DWORD PTR [rsi+0x28]
  436d86:	add    edx,ecx
  436d88:	mov    ecx,r15d
  436d8b:	mov    r15d,DWORD PTR [rsi+0xc]
  436d8f:	rol    edx,0xc
  436d92:	add    edx,eax
  436d94:	and    ecx,edx
  436d96:	lea    r9d,[r15+rbx*1-0x3e423112]
  436d9e:	mov    DWORD PTR [rsp+0x14],r15d
  436da3:	xor    ecx,ebx
  436da5:	mov    r15d,DWORD PTR [rsi+0x24]
  436da9:	add    ecx,r8d
  436dac:	mov    r8d,edx
  436daf:	ror    ecx,0xf
  436db2:	xor    r8d,eax
  436db5:	add    ecx,edx
  436db7:	and    r8d,ecx
  436dba:	mov    ebp,ecx
  436dbc:	xor    r8d,eax
  436dbf:	xor    ebp,edx
  436dc1:	add    r8d,r9d
  436dc4:	lea    r9d,[rax+r11*1-0xa83f051]
  436dcc:	mov    eax,ebp
  436dce:	ror    r8d,0xa
  436dd2:	mov    ebp,DWORD PTR [rsi+0x14]
  436dd5:	mov    r11d,DWORD PTR [rsi+0x2c]
  436dd9:	add    r8d,ecx
  436ddc:	and    eax,r8d
  436ddf:	mov    r13d,r8d
  436de2:	xor    eax,edx
  436de4:	xor    r13d,ecx
  436de7:	mov    DWORD PTR [rsp+0x24],r11d
  436dec:	add    eax,r9d
  436def:	lea    r9d,[rdx+rbp*1+0x4787c62a]
  436df7:	mov    edx,r13d
  436dfa:	rol    eax,0x7
  436dfd:	add    eax,r8d
  436e00:	and    edx,eax
  436e02:	mov    r13d,eax
  436e05:	xor    edx,ecx
  436e07:	add    edx,r9d
  436e0a:	xor    r13d,r8d
  436e0d:	lea    r9d,[rcx+r12*1-0x57cfb9ed]
  436e15:	rol    edx,0xc
  436e18:	mov    ecx,r13d
  436e1b:	mov    r13d,DWORD PTR [rsi+0x1c]
  436e1f:	add    edx,eax
  436e21:	mov    r12d,DWORD PTR [rsi+0x38]
  436e25:	and    ecx,edx
  436e27:	xor    ecx,r8d
  436e2a:	add    ecx,r9d
  436e2d:	lea    r9d,[r8+r13*1-0x2b96aff]
  436e35:	mov    r8d,edx
  436e38:	ror    ecx,0xf
  436e3b:	xor    r8d,eax
  436e3e:	add    ecx,edx
  436e40:	and    r8d,ecx
  436e43:	xor    r8d,eax
  436e46:	add    r8d,r9d
  436e49:	lea    r9d,[rax+r10*1+0x698098d8]
  436e51:	mov    eax,ecx
  436e53:	ror    r8d,0xa
  436e57:	xor    eax,edx
  436e59:	mov    r10d,DWORD PTR [rsi+0x30]
  436e5d:	add    r8d,ecx
  436e60:	and    eax,r8d
  436e63:	xor    eax,edx
  436e65:	add    eax,r9d
  436e68:	lea    r9d,[rdx+r15*1-0x74bb0851]
  436e70:	mov    edx,r8d
  436e73:	rol    eax,0x7
  436e76:	xor    edx,ecx
  436e78:	add    eax,r8d
  436e7b:	and    edx,eax
  436e7d:	xor    edx,ecx
  436e7f:	add    edx,r9d
  436e82:	lea    r9d,[rcx+rdi*1-0xa44f]
  436e8a:	mov    ecx,eax
  436e8c:	rol    edx,0xc
  436e8f:	xor    ecx,r8d
  436e92:	add    edx,eax
  436e94:	and    ecx,edx
  436e96:	xor    ecx,r8d
  436e99:	add    ecx,r9d
  436e9c:	lea    r9d,[r8+r11*1-0x76a32842]
  436ea4:	mov    r8d,edx
  436ea7:	ror    ecx,0xf
  436eaa:	mov    r11d,DWORD PTR [rsi+0x34]
  436eae:	add    ecx,edx
  436eb0:	xor    r8d,eax
  436eb3:	add    rsi,0x40
  436eb7:	and    r8d,ecx
  436eba:	xor    r8d,eax
  436ebd:	mov    DWORD PTR [rsp+0x8],r11d
  436ec2:	add    r8d,r9d
  436ec5:	lea    r9d,[rax+r10*1+0x6b901122]
  436ecd:	mov    eax,ecx
  436ecf:	ror    r8d,0xa
  436ed3:	xor    eax,edx
  436ed5:	add    r8d,ecx
  436ed8:	and    eax,r8d
  436edb:	xor    eax,edx
  436edd:	add    eax,r9d
  436ee0:	lea    r9d,[rdx+r11*1-0x2678e6d]
  436ee8:	mov    edx,r8d
  436eeb:	rol    eax,0x7
  436eee:	xor    edx,ecx
  436ef0:	mov    r11d,DWORD PTR [rsi-0x4]
  436ef4:	add    eax,r8d
  436ef7:	and    edx,eax
  436ef9:	xor    edx,ecx
  436efb:	add    edx,r9d
  436efe:	lea    r9d,[rcx+r12*1-0x5986bc72]
  436f06:	mov    ecx,eax
  436f08:	rol    edx,0xc
  436f0b:	xor    ecx,r8d
  436f0e:	add    edx,eax
  436f10:	and    ecx,edx
  436f12:	xor    ecx,r8d
  436f15:	add    ecx,r9d
  436f18:	lea    r9d,[r8+r11*1+0x49b40821]
  436f20:	mov    r8d,edx
  436f23:	ror    ecx,0xf
  436f26:	xor    r8d,eax
  436f29:	add    ecx,edx
  436f2b:	and    r8d,ecx
  436f2e:	xor    r8d,eax
  436f31:	add    r8d,r9d
  436f34:	mov    r9d,DWORD PTR [rsp+0xc]
  436f39:	ror    r8d,0xa
  436f3d:	add    r8d,ecx
  436f40:	lea    r9d,[r9+rax*1-0x9e1da9e]
  436f48:	mov    eax,r8d
  436f4b:	xor    eax,ecx
  436f4d:	and    eax,edx
  436f4f:	xor    eax,ecx
  436f51:	add    eax,r9d
  436f54:	mov    r9d,DWORD PTR [rsp+0x1c]
  436f59:	rol    eax,0x5
  436f5c:	add    eax,r8d
  436f5f:	lea    r9d,[r9+rdx*1-0x3fbf4cc0]
  436f67:	mov    edx,eax
  436f69:	xor    edx,r8d
  436f6c:	and    edx,ecx
  436f6e:	xor    edx,r8d
  436f71:	add    edx,r9d
  436f74:	mov    r9d,DWORD PTR [rsp+0x24]
  436f79:	rol    edx,0x9
  436f7c:	add    edx,eax
  436f7e:	lea    r9d,[r9+rcx*1+0x265e5a51]
  436f86:	mov    ecx,edx
  436f88:	xor    ecx,eax
  436f8a:	and    ecx,r8d
  436f8d:	xor    ecx,eax
  436f8f:	add    ecx,r9d
  436f92:	lea    r9d,[r14+r8*1-0x16493856]
  436f9a:	rol    ecx,0xe
  436f9d:	add    ecx,edx
  436f9f:	mov    r8d,ecx
  436fa2:	xor    r8d,edx
  436fa5:	and    r8d,eax
  436fa8:	xor    r8d,edx
  436fab:	add    r8d,r9d
  436fae:	lea    r9d,[rbp+rax*1-0x29d0efa3]
  436fb6:	ror    r8d,0xc
  436fba:	add    r8d,ecx
  436fbd:	mov    eax,r8d
  436fc0:	xor    eax,ecx
  436fc2:	and    eax,edx
  436fc4:	xor    eax,ecx
  436fc6:	add    eax,r9d
  436fc9:	lea    r9d,[rdi+rdx*1+0x2441453]
  436fd1:	rol    eax,0x5
  436fd4:	add    eax,r8d
  436fd7:	mov    edx,eax
  436fd9:	xor    edx,r8d
  436fdc:	and    edx,ecx
  436fde:	xor    edx,r8d
  436fe1:	add    edx,r9d
  436fe4:	lea    r9d,[r11+rcx*1-0x275e197f]
  436fec:	rol    edx,0x9
  436fef:	add    edx,eax
  436ff1:	mov    ecx,edx
  436ff3:	xor    ecx,eax
  436ff5:	and    ecx,r8d
  436ff8:	xor    ecx,eax
  436ffa:	add    ecx,r9d
  436ffd:	mov    r9d,DWORD PTR [rsp+0x18]
  437002:	rol    ecx,0xe
  437005:	add    ecx,edx
  437007:	lea    r9d,[r9+r8*1-0x182c0438]
  43700f:	mov    r8d,ecx
  437012:	xor    r8d,edx
  437015:	and    r8d,eax
  437018:	xor    r8d,edx
  43701b:	add    r8d,r9d
  43701e:	lea    r9d,[r15+rax*1+0x21e1cde6]
  437026:	ror    r8d,0xc
  43702a:	add    r8d,ecx
  43702d:	mov    eax,r8d
  437030:	xor    eax,ecx
  437032:	and    eax,edx
  437034:	xor    eax,ecx
  437036:	add    eax,r9d
  437039:	lea    r9d,[r12+rdx*1-0x3cc8f82a]
  437041:	rol    eax,0x5
  437044:	add    eax,r8d
  437047:	mov    edx,eax
  437049:	xor    edx,r8d
  43704c:	and    edx,ecx
  43704e:	xor    edx,r8d
  437051:	add    edx,r9d
  437054:	mov    r9d,DWORD PTR [rsp+0x14]
  437059:	rol    edx,0x9
  43705c:	add    edx,eax
  43705e:	lea    r9d,[r9+rcx*1-0xb2af279]
  437066:	mov    ecx,edx
  437068:	xor    ecx,eax
  43706a:	and    ecx,r8d
  43706d:	xor    ecx,eax
  43706f:	add    ecx,r9d
  437072:	mov    r9d,DWORD PTR [rsp+0x20]
  437077:	rol    ecx,0xe
  43707a:	add    ecx,edx
  43707c:	lea    r8d,[r9+r8*1+0x455a14ed]
  437084:	mov    r9d,ecx
  437087:	xor    r9d,edx
  43708a:	and    r9d,eax
  43708d:	xor    r9d,edx
  437090:	add    r9d,r8d
  437093:	mov    r8d,DWORD PTR [rsp+0x8]
  437098:	ror    r9d,0xc
  43709c:	add    r9d,ecx
  43709f:	lea    r8d,[r8+rax*1-0x561c16fb]
  4370a7:	mov    eax,r9d
  4370aa:	xor    eax,ecx
  4370ac:	and    eax,edx
  4370ae:	xor    eax,ecx
  4370b0:	add    eax,r8d
  4370b3:	mov    r8d,DWORD PTR [rsp+0x10]
  4370b8:	rol    eax,0x5
  4370bb:	add    eax,r9d
  4370be:	lea    r8d,[r8+rdx*1-0x3105c08]
  4370c6:	mov    edx,eax
  4370c8:	xor    edx,r9d
  4370cb:	and    edx,ecx
  4370cd:	lea    ecx,[r13+rcx*1+0x676f02d9]
  4370d5:	xor    edx,r9d
  4370d8:	add    edx,r8d
  4370db:	rol    edx,0x9
  4370de:	add    edx,eax
  4370e0:	mov    r8d,edx
  4370e3:	xor    r8d,eax
  4370e6:	and    r8d,r9d
  4370e9:	lea    r9d,[r10+r9*1-0x72d5b376]
  4370f1:	xor    r8d,eax
  4370f4:	add    r8d,ecx
  4370f7:	mov    DWORD PTR [rsp+0x34],r9d
  4370fc:	rol    r8d,0xe
  437100:	add    r8d,edx
  437103:	mov    ecx,r8d
  437106:	xor    ecx,edx
  437108:	mov    r9d,ecx
  43710b:	and    r9d,eax
  43710e:	lea    eax,[rbp+rax*1-0x5c6be]
  437115:	xor    r9d,edx
  437118:	add    r9d,DWORD PTR [rsp+0x34]
  43711d:	ror    r9d,0xc
  437121:	add    r9d,r8d
  437124:	xor    ecx,r9d
  437127:	add    ecx,eax
  437129:	mov    eax,DWORD PTR [rsp+0x20]
  43712d:	rol    ecx,0x4
  437130:	add    ecx,r9d
  437133:	lea    eax,[rax+rdx*1-0x788e097f]
  43713a:	mov    edx,r9d
  43713d:	xor    edx,r8d
  437140:	xor    edx,ecx
  437142:	add    edx,eax
  437144:	mov    eax,DWORD PTR [rsp+0x24]
  437148:	rol    edx,0xb
  43714b:	add    edx,ecx
  43714d:	lea    eax,[rax+r8*1+0x6d9d6122]
  437155:	mov    r8d,ecx
  437158:	xor    r8d,r9d
  43715b:	lea    r9d,[r12+r9*1-0x21ac7f4]
  437163:	xor    r8d,edx
  437166:	add    r8d,eax
  437169:	mov    eax,edx
  43716b:	rol    r8d,0x10
  43716f:	xor    eax,ecx
  437171:	add    r8d,edx
  437174:	xor    eax,r8d
  437177:	add    eax,r9d
  43717a:	mov    r9d,DWORD PTR [rsp+0xc]
  43717f:	ror    eax,0x9
  437182:	add    eax,r8d
  437185:	lea    r9d,[r9+rcx*1-0x5b4115bc]
  43718d:	mov    ecx,r8d
  437190:	xor    ecx,edx
  437192:	xor    ecx,eax
  437194:	add    ecx,r9d
  437197:	mov    r9d,DWORD PTR [rsp+0x18]
  43719c:	rol    ecx,0x4
  43719f:	add    ecx,eax
  4371a1:	lea    edx,[r9+rdx*1+0x4bdecfa9]
  4371a9:	mov    r9d,eax
  4371ac:	xor    r9d,r8d
  4371af:	lea    r8d,[r13+r8*1-0x944b4a0]
  4371b7:	xor    r9d,ecx
  4371ba:	add    r9d,edx
  4371bd:	mov    edx,ecx
  4371bf:	rol    r9d,0xb
  4371c3:	xor    edx,eax
  4371c5:	lea    eax,[rdi+rax*1-0x41404390]
  4371cc:	add    r9d,ecx
  4371cf:	xor    edx,r9d
  4371d2:	add    edx,r8d
  4371d5:	mov    r8d,r9d
  4371d8:	rol    edx,0x10
  4371db:	xor    r8d,ecx
  4371de:	add    edx,r9d
  4371e1:	xor    r8d,edx
  4371e4:	add    r8d,eax
  4371e7:	mov    eax,DWORD PTR [rsp+0x8]
  4371eb:	ror    r8d,0x9
  4371ef:	add    r8d,edx
  4371f2:	lea    eax,[rax+rcx*1+0x289b7ec6]
  4371f9:	mov    ecx,edx
  4371fb:	xor    ecx,r9d
  4371fe:	lea    r9d,[r14+r9*1-0x155ed806]
  437206:	xor    ecx,r8d
  437209:	add    ecx,eax
  43720b:	mov    eax,r8d
  43720e:	rol    ecx,0x4
  437211:	xor    eax,edx
  437213:	add    ecx,r8d
  437216:	xor    eax,ecx
  437218:	add    eax,r9d
  43721b:	mov    r9d,DWORD PTR [rsp+0x14]
  437220:	rol    eax,0xb
  437223:	add    eax,ecx
  437225:	lea    edx,[r9+rdx*1-0x2b10cf7b]
  43722d:	mov    r9d,ecx
  437230:	xor    r9d,r8d
  437233:	xor    r9d,eax
  437236:	add    r9d,edx
  437239:	mov    edx,DWORD PTR [rsp+0x1c]
  43723d:	rol    r9d,0x10
  437241:	add    r9d,eax
  437244:	lea    edx,[rdx+r8*1+0x4881d05]
  43724c:	mov    r8d,eax
  43724f:	xor    r8d,ecx
  437252:	lea    ecx,[r15+rcx*1-0x262b2fc7]
  43725a:	xor    r8d,r9d
  43725d:	add    r8d,edx
  437260:	mov    edx,r9d
  437263:	ror    r8d,0x9
  437267:	xor    edx,eax
  437269:	lea    eax,[r10+rax*1-0x1924661b]
  437271:	add    r8d,r9d
  437274:	xor    edx,r8d
  437277:	add    edx,ecx
  437279:	mov    ecx,r8d
  43727c:	rol    edx,0x4
  43727f:	xor    ecx,r9d
  437282:	add    edx,r8d
  437285:	xor    ecx,edx
  437287:	add    ecx,eax
  437289:	lea    eax,[r11+r9*1+0x1fa27cf8]
  437291:	mov    r9d,edx
  437294:	rol    ecx,0xb
  437297:	xor    r9d,r8d
  43729a:	add    ecx,edx
  43729c:	xor    r9d,ecx
  43729f:	add    r9d,eax
  4372a2:	mov    eax,DWORD PTR [rsp+0x10]
  4372a6:	rol    r9d,0x10
  4372aa:	add    r9d,ecx
  4372ad:	lea    r8d,[rax+r8*1-0x3b53a99b]
  4372b5:	mov    eax,ecx
  4372b7:	xor    eax,edx
  4372b9:	xor    eax,r9d
  4372bc:	add    eax,r8d
  4372bf:	lea    r8d,[r14+rdx*1-0xbd6ddbc]
  4372c7:	mov    edx,ecx
  4372c9:	ror    eax,0x9
  4372cc:	not    edx
  4372ce:	mov    r14d,DWORD PTR [rsp+0x14]
  4372d3:	add    eax,r9d
  4372d6:	or     edx,eax
  4372d8:	xor    edx,r9d
  4372db:	add    edx,r8d
  4372de:	lea    r8d,[r13+rcx*1+0x432aff97]
  4372e6:	mov    r13d,r9d
  4372e9:	rol    edx,0x6
  4372ec:	not    r13d
  4372ef:	lea    r9d,[r12+r9*1-0x546bdc59]
  4372f7:	add    edx,eax
  4372f9:	mov    ecx,r13d
  4372fc:	mov    r13d,DWORD PTR [rsp+0x20]
  437301:	or     ecx,edx
  437303:	mov    r12d,edx
  437306:	xor    ecx,eax
  437308:	not    r12d
  43730b:	add    ecx,r8d
  43730e:	mov    r8d,eax
  437311:	rol    ecx,0xa
  437314:	not    r8d
  437317:	add    ecx,edx
  437319:	or     r8d,ecx
  43731c:	xor    r8d,edx
  43731f:	add    r8d,r9d
  437322:	lea    r9d,[rbp+rax*1-0x36c5fc7]
  43732a:	mov    eax,r12d
  43732d:	rol    r8d,0xf
  437331:	mov    r12d,ecx
  437334:	mov    ebp,DWORD PTR [rsp+0x1c]
  437338:	add    r8d,ecx
  43733b:	not    r12d
  43733e:	or     eax,r8d
  437341:	xor    eax,ecx
  437343:	add    eax,r9d
  437346:	lea    r9d,[r10+rdx*1+0x655b59c3]
  43734e:	mov    edx,r12d
  437351:	ror    eax,0xb
  437354:	mov    r12d,r8d
  437357:	add    eax,r8d
  43735a:	not    r12d
  43735d:	or     edx,eax
  43735f:	xor    edx,r8d
  437362:	add    edx,r9d
  437365:	lea    r9d,[r14+rcx*1-0x70f3336e]
  43736d:	mov    ecx,r12d
  437370:	rol    edx,0x6
  437373:	mov    r14d,DWORD PTR [rsp+0x18]
  437378:	add    edx,eax
  43737a:	or     ecx,edx
  43737c:	mov    r12d,edx
  43737f:	xor    ecx,eax
  437381:	not    r12d
  437384:	add    ecx,r9d
  437387:	lea    r9d,[rdi+r8*1-0x100b83]
  43738f:	mov    r8d,eax
  437392:	rol    ecx,0xa
  437395:	not    r8d
  437398:	mov    edi,DWORD PTR [rsp+0x8]
  43739c:	add    ecx,edx
  43739e:	or     r8d,ecx
  4373a1:	xor    r8d,edx
  4373a4:	add    r8d,r9d
  4373a7:	mov    r9d,DWORD PTR [rsp+0xc]
  4373ac:	rol    r8d,0xf
  4373b0:	add    r8d,ecx
  4373b3:	lea    r9d,[r9+rax*1-0x7a7ba22f]
  4373bb:	mov    eax,r12d
  4373be:	or     eax,r8d
  4373c1:	xor    eax,ecx
  4373c3:	add    eax,r9d
  4373c6:	lea    r9d,[r13+rdx*1+0x6fa87e4f]
  4373ce:	mov    r13d,ecx
  4373d1:	ror    eax,0xb
  4373d4:	not    r13d
  4373d7:	add    eax,r8d
  4373da:	mov    edx,r13d
  4373dd:	mov    r13d,r8d
  4373e0:	or     edx,eax
  4373e2:	not    r13d
  4373e5:	xor    edx,r8d
  4373e8:	add    edx,r9d
  4373eb:	lea    r9d,[r11+rcx*1-0x1d31920]
  4373f3:	mov    ecx,r13d
  4373f6:	rol    edx,0x6
  4373f9:	mov    r11d,DWORD PTR [rsp+0x10]
  4373fe:	add    edx,eax
  437400:	or     ecx,edx
  437402:	mov    r10d,edx
  437405:	xor    ecx,eax
  437407:	not    r10d
  43740a:	add    ecx,r9d
  43740d:	lea    r9d,[rbp+r8*1-0x5cfebcec]
  437415:	mov    r8d,eax
  437418:	rol    ecx,0xa
  43741b:	not    r8d
  43741e:	lea    eax,[rdi+rax*1+0x4e0811a1]
  437425:	add    ecx,edx
  437427:	or     r8d,ecx
  43742a:	xor    r8d,edx
  43742d:	lea    edx,[r14+rdx*1-0x8ac817e]
  437435:	mov    r14d,DWORD PTR [rsp+0x24]
  43743a:	add    r8d,r9d
  43743d:	mov    r9d,r10d
  437440:	mov    r10d,ecx
  437443:	rol    r8d,0xf
  437447:	not    r10d
  43744a:	add    r8d,ecx
  43744d:	or     r9d,r8d
  437450:	xor    r9d,ecx
  437453:	lea    ecx,[r14+rcx*1-0x42c50dcb]
  43745b:	add    r9d,eax
  43745e:	mov    eax,r10d
  437461:	ror    r9d,0xb
  437465:	add    r9d,r8d
  437468:	or     eax,r9d
  43746b:	xor    eax,r8d
  43746e:	add    eax,edx
  437470:	mov    edx,r8d
  437473:	lea    r8d,[r11+r8*1+0x2ad7d2bb]
  43747b:	rol    eax,0x6
  43747e:	not    edx
  437480:	mov    r11d,r9d
  437483:	add    eax,r9d
  437486:	not    r11d
  437489:	add    DWORD PTR [rsp+0x30],eax
  43748d:	or     edx,eax
  43748f:	xor    edx,r9d
  437492:	lea    r9d,[r15+r9*1-0x14792c6f]
  43749a:	add    edx,ecx
  43749c:	mov    ecx,r11d
  43749f:	rol    edx,0xa
  4374a2:	add    edx,eax
  4374a4:	add    DWORD PTR [rsp+0x2c],edx
  4374a8:	or     ecx,edx
  4374aa:	xor    ecx,eax
  4374ac:	add    ecx,r8d
  4374af:	mov    r8d,eax
  4374b2:	rol    ecx,0xf
  4374b5:	not    r8d
  4374b8:	add    ecx,edx
  4374ba:	add    DWORD PTR [rsp+0x28],ecx
  4374be:	or     r8d,ecx
  4374c1:	xor    r8d,edx
  4374c4:	add    r8d,r9d
  4374c7:	ror    r8d,0xb
  4374cb:	lea    eax,[rcx+r8*1]
  4374cf:	add    ebx,eax
  4374d1:	cmp    QWORD PTR [rsp+0x38],rsi
  4374d6:	ja     0x436d15
  4374dc:	mov    rax,QWORD PTR [rsp+0xa0]
  4374e4:	mov    esi,DWORD PTR [rsp+0x30]
  4374e8:	mov    DWORD PTR [rax+0x4],ebx
  4374eb:	mov    ebx,DWORD PTR [rsp+0x28]
  4374ef:	mov    DWORD PTR [rax],esi
  4374f1:	mov    DWORD PTR [rax+0x8],ebx
  4374f4:	mov    ebx,DWORD PTR [rsp+0x2c]
  4374f8:	mov    DWORD PTR [rax+0xc],ebx
  4374fb:	add    rsp,0x48
  4374ff:	pop    rbx
  437500:	pop    rsi
  437501:	pop    rdi
  437502:	pop    rbp
  437503:	pop    r12
  437505:	pop    r13
  437507:	pop    r14
  437509:	pop    r15
  43750b:	ret    
  43750c:	nop    DWORD PTR [rax+0x0]
  437510:	push   rbp
  437511:	push   rdi
  437512:	push   rsi
  437513:	push   rbx
  437514:	sub    rsp,0x28
  437518:	mov    rbx,rcx
  43751b:	mov    ecx,DWORD PTR [rcx+0x18]
  43751e:	mov    rdi,rdx
  437521:	mov    eax,DWORD PTR [rbx+0x10]
  437524:	add    eax,ecx
  437526:	cmp    ecx,eax
  437528:	mov    DWORD PTR [rbx+0x10],eax
  43752b:	jbe    0x437531
  43752d:	add    DWORD PTR [rbx+0x14],0x1
  437531:	cmp    ecx,0x37
  437534:	ja     0x4375b0
  437536:	mov    ebp,0x38
  43753b:	sub    ebp,ecx
  43753d:	mov    esi,ecx
  43753f:	lea    rdx,[rip+0x21efa]        # 0x459440
  437546:	mov    r8,rbp
  437549:	lea    rcx,[rbx+rsi*1+0x1c]
  43754e:	call   0x449450
  437553:	mov    eax,DWORD PTR [rbx+0x10]
  437556:	lea    rcx,[rbp+rsi*1+0x0]
  43755b:	mov    r8,rbx
  43755e:	shl    eax,0x3
  437561:	mov    DWORD PTR [rbx+rcx*1+0x1c],eax
  437565:	mov    edx,DWORD PTR [rbx+0x10]
  437568:	mov    eax,DWORD PTR [rbx+0x14]
  43756b:	shr    edx,0x1d
  43756e:	shl    eax,0x3
  437571:	or     eax,edx
  437573:	lea    rdx,[rcx+0x8]
  437577:	mov    DWORD PTR [rbx+rcx*1+0x20],eax
  43757b:	lea    rcx,[rbx+0x1c]
  43757f:	call   0x436ca0
  437584:	mov    eax,DWORD PTR [rbx+0xc]
  437587:	mov    r8d,DWORD PTR [rbx]
  43758a:	mov    ecx,DWORD PTR [rbx+0x4]
  43758d:	mov    edx,DWORD PTR [rbx+0x8]
  437590:	mov    DWORD PTR [rdi+0xc],eax
  437593:	mov    rax,rdi
  437596:	mov    DWORD PTR [rdi],r8d
  437599:	mov    DWORD PTR [rdi+0x4],ecx
  43759c:	mov    DWORD PTR [rdi+0x8],edx
  43759f:	add    rsp,0x28
  4375a3:	pop    rbx
  4375a4:	pop    rsi
  4375a5:	pop    rdi
  4375a6:	pop    rbp
  4375a7:	ret    
  4375a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4375b0:	mov    ebp,0x78
  4375b5:	sub    ebp,ecx
  4375b7:	jmp    0x43753d
  4375b9:	nop    DWORD PTR [rax+0x0]
  4375c0:	push   r15
  4375c2:	push   r14
  4375c4:	push   r13
  4375c6:	push   r12
  4375c8:	push   rbp
  4375c9:	push   rdi
  4375ca:	push   rsi
  4375cb:	push   rbx
  4375cc:	sub    rsp,0x28
  4375d0:	mov    edi,DWORD PTR [r8+0x18]
  4375d4:	mov    r13,rcx
  4375d7:	mov    r12,rdx
  4375da:	mov    rbp,r8
  4375dd:	test   edi,edi
  4375df:	jne    0x4376f0
  4375e5:	cmp    r12,0x40
  4375e9:	jbe    0x4376cc
  4375ef:	test   r13b,0x3
  4375f3:	je     0x4376b0
  4375f9:	lea    rsi,[rbp+0x1c]
  4375fd:	mov    rdi,r12
  437600:	mov    rbx,r13
  437603:	mov    rax,QWORD PTR [rbx]
  437606:	mov    r8,rbp
  437609:	mov    edx,0x40
  43760e:	mov    rcx,rsi
  437611:	sub    rdi,0x40
  437615:	add    rbx,0x40
  437619:	mov    QWORD PTR [rsi],rax
  43761c:	mov    rax,QWORD PTR [rbx-0x38]
  437620:	mov    QWORD PTR [rsi+0x8],rax
  437624:	mov    rax,QWORD PTR [rbx-0x30]
  437628:	mov    QWORD PTR [rsi+0x10],rax
  43762c:	mov    rax,QWORD PTR [rbx-0x28]
  437630:	mov    QWORD PTR [rsi+0x18],rax
  437634:	mov    rax,QWORD PTR [rbx-0x20]
  437638:	mov    QWORD PTR [rsi+0x20],rax
  43763c:	mov    rax,QWORD PTR [rbx-0x18]
  437640:	mov    QWORD PTR [rsi+0x28],rax
  437644:	mov    rax,QWORD PTR [rbx-0x10]
  437648:	mov    QWORD PTR [rsi+0x30],rax
  43764c:	mov    rax,QWORD PTR [rbx-0x8]
  437650:	mov    QWORD PTR [rsi+0x38],rax
  437654:	call   0x436ca0
  437659:	cmp    rdi,0x40
  43765d:	ja     0x437603
  43765f:	lea    rax,[r12-0x41]
  437664:	shr    rax,0x6
  437668:	lea    rdx,[rax+0x1]
  43766c:	neg    rax
  43766f:	shl    rax,0x6
  437673:	shl    rdx,0x6
  437677:	lea    r12,[r12+rax*1-0x40]
  43767c:	add    r13,rdx
  43767f:	cmp    r12d,0x8
  437683:	mov    eax,r12d
  437686:	jae    0x437730
  43768c:	test   r12b,0x4
  437690:	jne    0x43782f
  437696:	test   eax,eax
  437698:	je     0x4376a9
  43769a:	movzx  edx,BYTE PTR [r13+0x0]
  43769f:	test   al,0x2
  4376a1:	mov    BYTE PTR [rsi],dl
  4376a3:	jne    0x437843
  4376a9:	mov    DWORD PTR [rbp+0x18],r12d
  4376ad:	jmp    0x4376d5
  4376af:	nop
  4376b0:	mov    rbx,r12
  4376b3:	mov    rcx,r13
  4376b6:	mov    r8,rbp
  4376b9:	and    rbx,0xffffffffffffffc0
  4376bd:	and    r12d,0x3f
  4376c1:	mov    rdx,rbx
  4376c4:	add    r13,rbx
  4376c7:	call   0x436ca0
  4376cc:	test   r12,r12
  4376cf:	jne    0x437826
  4376d5:	add    rsp,0x28
  4376d9:	pop    rbx
  4376da:	pop    rsi
  4376db:	pop    rdi
  4376dc:	pop    rbp
  4376dd:	pop    r12
  4376df:	pop    r13
  4376e1:	pop    r14
  4376e3:	pop    r15
  4376e5:	ret    
  4376e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4376f0:	mov    esi,edi
  4376f2:	mov    ebx,0x80
  4376f7:	sub    rbx,rsi
  4376fa:	lea    rcx,[r8+rsi*1+0x1c]
  4376ff:	cmp    rbx,rdx
  437702:	cmova  rbx,rdx
  437706:	mov    rdx,r13
  437709:	mov    r8,rbx
  43770c:	add    rsi,rbx
  43770f:	call   0x449450
  437714:	add    DWORD PTR [rbp+0x18],ebx
  437717:	cmp    rsi,0x40
  43771b:	ja     0x437780
  43771d:	add    r13,rbx
  437720:	sub    r12,rbx
  437723:	jmp    0x4375e5
  437728:	nop    DWORD PTR [rax+rax*1+0x0]
  437730:	mov    rax,QWORD PTR [r13+0x0]
  437734:	mov    QWORD PTR [rsi],rax
  437737:	mov    eax,r12d
  43773a:	mov    rdx,QWORD PTR [r13+rax*1-0x8]
  43773f:	mov    QWORD PTR [rsi+rax*1-0x8],rdx
  437744:	lea    rdx,[rsi+0x8]
  437748:	and    rdx,0xfffffffffffffff8
  43774c:	sub    rsi,rdx
  43774f:	lea    eax,[r12+rsi*1]
  437753:	sub    r13,rsi
  437756:	and    eax,0xfffffff8
  437759:	cmp    eax,0x8
  43775c:	jb     0x4376a9
  437762:	and    eax,0xfffffff8
  437765:	mov    esi,eax
  437767:	xor    eax,eax
  437769:	mov    ecx,eax
  43776b:	add    eax,0x8
  43776e:	mov    r8,QWORD PTR [r13+rcx*1+0x0]
  437773:	cmp    eax,esi
  437775:	mov    QWORD PTR [rdx+rcx*1],r8
  437779:	jb     0x437769
  43777b:	jmp    0x4376a9
  437780:	mov    r15,rsi
  437783:	lea    r14,[rbp+0x1c]
  437787:	mov    r8,rbp
  43778a:	and    r15,0xffffffffffffffc0
  43778e:	and    esi,0x3f
  437791:	mov    rdx,r15
  437794:	mov    rcx,r14
  437797:	call   0x436ca0
  43779c:	lea    rdx,[rbp+r15*1+0x10]
  4377a1:	cmp    esi,0x8
  4377a4:	lea    rax,[rdx+0xc]
  4377a8:	jae    0x4377e0
  4377aa:	test   sil,0x4
  4377ae:	jne    0x437853
  4377b4:	test   esi,esi
  4377b6:	je     0x4377c9
  4377b8:	movzx  edx,BYTE PTR [rdx+0xc]
  4377bc:	test   sil,0x2
  4377c0:	mov    BYTE PTR [rbp+0x1c],dl
  4377c3:	jne    0x437869
  4377c9:	lea    eax,[rdi+rbx*1]
  4377cc:	and    eax,0x3f
  4377cf:	mov    DWORD PTR [rbp+0x18],eax
  4377d2:	jmp    0x43771d
  4377d7:	nop    WORD PTR [rax+rax*1+0x0]
  4377e0:	mov    rdx,QWORD PTR [rdx+0xc]
  4377e4:	mov    QWORD PTR [rbp+0x1c],rdx
  4377e8:	mov    edx,esi
  4377ea:	mov    rcx,QWORD PTR [rax+rdx*1-0x8]
  4377ef:	mov    QWORD PTR [r14+rdx*1-0x8],rcx
  4377f4:	lea    rdx,[rbp+0x24]
  4377f8:	and    rdx,0xfffffffffffffff8
  4377fc:	sub    r14,rdx
  4377ff:	add    esi,r14d
  437802:	sub    rax,r14
  437805:	and    esi,0xfffffff8
  437808:	cmp    esi,0x8
  43780b:	jb     0x4377c9
  43780d:	and    esi,0xfffffff8
  437810:	xor    ecx,ecx
  437812:	mov    r8d,ecx
  437815:	add    ecx,0x8
  437818:	mov    r9,QWORD PTR [rax+r8*1]
  43781c:	cmp    ecx,esi
  43781e:	mov    QWORD PTR [rdx+r8*1],r9
  437822:	jb     0x437812
  437824:	jmp    0x4377c9
  437826:	lea    rsi,[rbp+0x1c]
  43782a:	jmp    0x43767f
  43782f:	mov    edx,DWORD PTR [r13+0x0]
  437833:	mov    DWORD PTR [rsi],edx
  437835:	mov    edx,DWORD PTR [r13+rax*1-0x4]
  43783a:	mov    DWORD PTR [rsi+rax*1-0x4],edx
  43783e:	jmp    0x4376a9
  437843:	movzx  edx,WORD PTR [r13+rax*1-0x2]
  437849:	mov    WORD PTR [rsi+rax*1-0x2],dx
  43784e:	jmp    0x4376a9
  437853:	mov    edx,DWORD PTR [rdx+0xc]
  437856:	mov    esi,esi
  437858:	mov    DWORD PTR [rbp+0x1c],edx
  43785b:	mov    eax,DWORD PTR [rax+rsi*1-0x4]
  43785f:	mov    DWORD PTR [r14+rsi*1-0x4],eax
  437864:	jmp    0x4377c9
  437869:	mov    esi,esi
  43786b:	movzx  eax,WORD PTR [rax+rsi*1-0x2]
  437870:	mov    WORD PTR [r14+rsi*1-0x2],ax
  437876:	jmp    0x4377c9
  43787b:	nop    DWORD PTR [rax+rax*1+0x0]
  437880:	push   rsi
  437881:	push   rbx
  437882:	sub    rsp,0xc8
  437889:	lea    rbx,[rsp+0x20]
  43788e:	mov    rsi,r8
  437891:	mov    DWORD PTR [rsp+0x20],0x67452301
  437899:	mov    DWORD PTR [rsp+0x24],0xefcdab89
  4378a1:	mov    DWORD PTR [rsp+0x28],0x98badcfe
  4378a9:	mov    r8,rbx
  4378ac:	mov    DWORD PTR [rsp+0x2c],0x10325476
  4378b4:	mov    DWORD PTR [rsp+0x34],0x0
  4378bc:	mov    DWORD PTR [rsp+0x30],0x0
  4378c4:	mov    DWORD PTR [rsp+0x38],0x0
  4378cc:	call   0x4375c0
  4378d1:	mov    rdx,rsi
  4378d4:	mov    rcx,rbx
  4378d7:	call   0x437510
  4378dc:	add    rsp,0xc8
  4378e3:	pop    rbx
  4378e4:	pop    rsi
  4378e5:	ret    
  4378e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4378f0:	push   r13
  4378f2:	push   r12
  4378f4:	mov    eax,0x1118
  4378f9:	push   rbp
  4378fa:	push   rdi
  4378fb:	push   rsi
  4378fc:	push   rbx
  4378fd:	call   0x43d410
  437902:	sub    rsp,rax
  437905:	mov    ebp,0x1000
  43790a:	lea    rsi,[rsp+0xc0]
  437912:	lea    r12,[rsp+0x20]
  437917:	mov    rdi,rcx
  43791a:	mov    r13,rdx
  43791d:	mov    DWORD PTR [rsp+0x20],0x67452301
  437925:	mov    DWORD PTR [rsp+0x24],0xefcdab89
  43792d:	mov    DWORD PTR [rsp+0x28],0x98badcfe
  437935:	mov    DWORD PTR [rsp+0x2c],0x10325476
  43793d:	mov    DWORD PTR [rsp+0x34],0x0
  437945:	mov    DWORD PTR [rsp+0x30],0x0
  43794d:	mov    DWORD PTR [rsp+0x38],0x0
  437955:	xor    ebx,ebx
  437957:	jmp    0x437965
  437959:	nop    DWORD PTR [rax+0x0]
  437960:	test   rax,rax
  437963:	je     0x437988
  437965:	lea    rcx,[rsi+rbx*1]
  437969:	mov    r8,rbp
  43796c:	mov    r9,rdi
  43796f:	sub    r8,rbx
  437972:	mov    edx,0x1
  437977:	call   0x4494d0
  43797c:	add    rbx,rax
  43797f:	cmp    rbx,0xfff
  437986:	jbe    0x437960
  437988:	test   rax,rax
  43798b:	je     0x4379a0
  43798d:	mov    r8,r12
  437990:	mov    edx,0x1000
  437995:	mov    rcx,rsi
  437998:	call   0x436ca0
  43799d:	jmp    0x437955
  43799f:	nop
  4379a0:	mov    rcx,rdi
  4379a3:	call   0x449508
  4379a8:	test   eax,eax
  4379aa:	mov    edi,eax
  4379ac:	jne    0x4379d5
  4379ae:	test   rbx,rbx
  4379b1:	lea    rbp,[rsp+0x20]
  4379b6:	jne    0x4379dc
  4379b8:	mov    rdx,r13
  4379bb:	mov    rcx,rbp
  4379be:	call   0x437510
  4379c3:	mov    eax,edi
  4379c5:	add    rsp,0x1118
  4379cc:	pop    rbx
  4379cd:	pop    rsi
  4379ce:	pop    rdi
  4379cf:	pop    rbp
  4379d0:	pop    r12
  4379d2:	pop    r13
  4379d4:	ret    
  4379d5:	mov    edi,0x1
  4379da:	jmp    0x4379c3
  4379dc:	mov    r8,rbp
  4379df:	mov    rdx,rbx
  4379e2:	mov    rcx,rsi
  4379e5:	call   0x4375c0
  4379ea:	jmp    0x4379b8
  4379ec:	nop
  4379ed:	nop
  4379ee:	nop
  4379ef:	nop
  4379f0:	push   rdi
  4379f1:	push   rsi
  4379f2:	push   rbx
  4379f3:	sub    rsp,0x20
  4379f7:	test   rcx,rcx
  4379fa:	je     0x437a87
  437a00:	cmp    QWORD PTR [rcx],0x0
  437a04:	je     0x437a80
  437a06:	lea    rax,[rcx+0x8]
  437a0a:	xor    edx,edx
  437a0c:	nop    DWORD PTR [rax+0x0]
  437a10:	add    rax,0x8
  437a14:	add    edx,0x1
  437a17:	cmp    QWORD PTR [rax-0x8],0x0
  437a1c:	jne    0x437a10
  437a1e:	add    edx,0x1
  437a21:	movsxd rdx,edx
  437a24:	shl    rdx,0x3
  437a28:	mov    rsi,rcx
  437a2b:	mov    rcx,rdx
  437a2e:	xor    ebx,ebx
  437a30:	call   0x43baf0
  437a35:	mov    rcx,QWORD PTR [rsi]
  437a38:	mov    rdi,rax
  437a3b:	test   rcx,rcx
  437a3e:	je     0x437a6d
  437a40:	call   0x4493c0
  437a45:	lea    ecx,[rax+0x1]
  437a48:	movsxd rcx,ecx
  437a4b:	call   0x43baf0
  437a50:	mov    rdx,QWORD PTR [rsi+rbx*1]
  437a54:	mov    rcx,rax
  437a57:	mov    QWORD PTR [rdi+rbx*1],rax
  437a5b:	add    rbx,0x8
  437a5f:	call   0x4493d8
  437a64:	mov    rcx,QWORD PTR [rsi+rbx*1]
  437a68:	test   rcx,rcx
  437a6b:	jne    0x437a40
  437a6d:	mov    QWORD PTR [rdi+rbx*1],0x0
  437a75:	mov    rax,rdi
  437a78:	add    rsp,0x20
  437a7c:	pop    rbx
  437a7d:	pop    rsi
  437a7e:	pop    rdi
  437a7f:	ret    
  437a80:	mov    edx,0x8
  437a85:	jmp    0x437a28
  437a87:	xor    eax,eax
  437a89:	jmp    0x437a78
  437a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  437a90:	push   rsi
  437a91:	push   rbx
  437a92:	sub    rsp,0x28
  437a96:	test   rcx,rcx
  437a99:	je     0x437ad0
  437a9b:	mov    rsi,rcx
  437a9e:	mov    rcx,QWORD PTR [rcx]
  437aa1:	mov    rbx,rsi
  437aa4:	test   rcx,rcx
  437aa7:	je     0x437ac1
  437aa9:	nop    DWORD PTR [rax+0x0]
  437ab0:	add    rbx,0x8
  437ab4:	call   0x4494c8
  437ab9:	mov    rcx,QWORD PTR [rbx]
  437abc:	test   rcx,rcx
  437abf:	jne    0x437ab0
  437ac1:	mov    rcx,rsi
  437ac4:	add    rsp,0x28
  437ac8:	pop    rbx
  437ac9:	pop    rsi
  437aca:	jmp    0x4494c8
  437acf:	nop
  437ad0:	add    rsp,0x28
  437ad4:	pop    rbx
  437ad5:	pop    rsi
  437ad6:	ret    
  437ad7:	nop    WORD PTR [rax+rax*1+0x0]
  437ae0:	push   r15
  437ae2:	push   r14
  437ae4:	push   r13
  437ae6:	push   r12
  437ae8:	push   rbp
  437ae9:	push   rdi
  437aea:	push   rsi
  437aeb:	push   rbx
  437aec:	sub    rsp,0x38
  437af0:	test   rcx,rcx
  437af3:	mov    rbx,rcx
  437af6:	je     0x437cf1
  437afc:	call   0x4493c0
  437b01:	lea    rcx,[rax+0x1]
  437b05:	xor    r15d,r15d
  437b08:	xor    r12d,r12d
  437b0b:	xor    ebp,ebp
  437b0d:	xor    edi,edi
  437b0f:	xor    r14d,r14d
  437b12:	call   0x43baf0
  437b17:	mov    rsi,QWORD PTR [rip+0x23312]        # 0x45ae30
  437b1e:	mov    QWORD PTR [rsp+0x20],rax
  437b23:	xor    r13d,r13d
  437b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437b30:	movzx  eax,BYTE PTR [rbx]
  437b33:	mov    edx,r15d
  437b36:	test   BYTE PTR [rsi+rax*2],0x40
  437b3a:	je     0x437b4d
  437b3c:	nop    DWORD PTR [rax+0x0]
  437b40:	add    rbx,0x1
  437b44:	movzx  eax,BYTE PTR [rbx]
  437b47:	test   BYTE PTR [rsi+rax*2],0x40
  437b4b:	jne    0x437b40
  437b4d:	test   ebp,ebp
  437b4f:	je     0x437b5c
  437b51:	lea    eax,[rbp-0x1]
  437b54:	lea    r11,[r12+r15*8]
  437b58:	cmp    edx,eax
  437b5a:	jl     0x437b84
  437b5c:	test   r12,r12
  437b5f:	je     0x437cda
  437b65:	add    ebp,ebp
  437b67:	mov    rcx,r12
  437b6a:	movsxd rdx,ebp
  437b6d:	shl    rdx,0x3
  437b71:	call   0x43bb70
  437b76:	mov    r12,rax
  437b79:	lea    r11,[r12+r15*8]
  437b7d:	mov    QWORD PTR [r11],0x0
  437b84:	movzx  edx,BYTE PTR [rbx]
  437b87:	mov    r8,QWORD PTR [rsp+0x20]
  437b8c:	test   dl,dl
  437b8e:	jne    0x437ba6
  437b90:	jmp    0x437bf0
  437b92:	mov    BYTE PTR [r8],dl
  437b95:	xor    edi,edi
  437b97:	add    r8,0x1
  437b9b:	add    rbx,0x1
  437b9f:	movzx  edx,BYTE PTR [rbx]
  437ba2:	test   dl,dl
  437ba4:	je     0x437bf0
  437ba6:	movzx  r9d,dl
  437baa:	test   BYTE PTR [rsi+r9*2],0x40
  437baf:	je     0x437bbf
  437bb1:	mov    eax,edi
  437bb3:	or     eax,r13d
  437bb6:	or     eax,r14d
  437bb9:	je     0x437cd0
  437bbf:	test   edi,edi
  437bc1:	jne    0x437b92
  437bc3:	cmp    dl,0x5c
  437bc6:	je     0x437c80
  437bcc:	test   r13d,r13d
  437bcf:	je     0x437c60
  437bd5:	cmp    dl,0x27
  437bd8:	je     0x437cb0
  437bde:	add    rbx,0x1
  437be2:	mov    BYTE PTR [r8],dl
  437be5:	add    r8,0x1
  437be9:	movzx  edx,BYTE PTR [rbx]
  437bec:	test   dl,dl
  437bee:	jne    0x437ba6
  437bf0:	mov    rcx,QWORD PTR [rsp+0x20]
  437bf5:	mov    BYTE PTR [r8],0x0
  437bf9:	add    r15,0x1
  437bfd:	mov    QWORD PTR [rsp+0x28],r11
  437c02:	call   0x43bbf0
  437c07:	mov    r11,QWORD PTR [rsp+0x28]
  437c0c:	mov    QWORD PTR [r11],rax
  437c0f:	mov    QWORD PTR [r12+r15*8],0x0
  437c17:	movzx  edx,BYTE PTR [rbx]
  437c1a:	test   BYTE PTR [rsi+rdx*2],0x40
  437c1e:	mov    rax,rdx
  437c21:	je     0x437c33
  437c23:	add    rbx,0x1
  437c27:	movzx  edx,BYTE PTR [rbx]
  437c2a:	test   BYTE PTR [rsi+rdx*2],0x40
  437c2e:	mov    rax,rdx
  437c31:	jne    0x437c23
  437c33:	test   al,al
  437c35:	jne    0x437b30
  437c3b:	mov    rcx,QWORD PTR [rsp+0x20]
  437c40:	call   0x4494c8
  437c45:	mov    rax,r12
  437c48:	add    rsp,0x38
  437c4c:	pop    rbx
  437c4d:	pop    rsi
  437c4e:	pop    rdi
  437c4f:	pop    rbp
  437c50:	pop    r12
  437c52:	pop    r13
  437c54:	pop    r14
  437c56:	pop    r15
  437c58:	ret    
  437c59:	nop    DWORD PTR [rax+0x0]
  437c60:	test   r14d,r14d
  437c63:	je     0x437c90
  437c65:	cmp    dl,0x22
  437c68:	jne    0x437bde
  437c6e:	xor    r14d,r14d
  437c71:	jmp    0x437b9b
  437c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437c80:	mov    edi,0x1
  437c85:	jmp    0x437b9b
  437c8a:	nop    WORD PTR [rax+rax*1+0x0]
  437c90:	cmp    dl,0x27
  437c93:	je     0x437cc0
  437c95:	cmp    dl,0x22
  437c98:	jne    0x437bde
  437c9e:	mov    r14d,0x1
  437ca4:	jmp    0x437b9b
  437ca9:	nop    DWORD PTR [rax+0x0]
  437cb0:	xor    r13d,r13d
  437cb3:	jmp    0x437b9b
  437cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  437cc0:	mov    r13d,0x1
  437cc6:	jmp    0x437b9b
  437ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  437cd0:	xor    edi,edi
  437cd2:	xor    r14d,r14d
  437cd5:	jmp    0x437bf0
  437cda:	mov    ecx,0x40
  437cdf:	mov    ebp,0x8
  437ce4:	call   0x43baf0
  437ce9:	mov    r12,rax
  437cec:	jmp    0x437b79
  437cf1:	xor    r12d,r12d
  437cf4:	jmp    0x437c45
  437cf9:	nop    DWORD PTR [rax+0x0]
  437d00:	push   r12
  437d02:	push   rbp
  437d03:	push   rdi
  437d04:	push   rsi
  437d05:	push   rbx
  437d06:	sub    rsp,0x20
  437d0a:	test   rdx,rdx
  437d0d:	mov    r12,rcx
  437d10:	mov    rdi,rdx
  437d13:	je     0x437d7d
  437d15:	mov    rbx,QWORD PTR [rcx]
  437d18:	mov    rbp,QWORD PTR [rip+0x23111]        # 0x45ae30
  437d1f:	test   rbx,rbx
  437d22:	jne    0x437d55
  437d24:	jmp    0x437daf
  437d29:	nop    DWORD PTR [rax+0x0]
  437d30:	cmp    al,0x22
  437d32:	je     0x437d6b
  437d34:	cmp    al,0x5c
  437d36:	sete   dl
  437d39:	cmp    al,0x27
  437d3b:	sete   al
  437d3e:	or     dl,al
  437d40:	jne    0x437d6b
  437d42:	mov    rdx,rdi
  437d45:	mov    ecx,esi
  437d47:	call   0x4494e0
  437d4c:	cmp    eax,0xffffffff
  437d4f:	je     0x437d7d
  437d51:	add    rbx,0x1
  437d55:	movzx  eax,BYTE PTR [rbx]
  437d58:	test   al,al
  437d5a:	je     0x437d90
  437d5c:	movzx  r8d,al
  437d60:	movsx  esi,al
  437d63:	test   BYTE PTR [rbp+r8*2+0x0],0x40
  437d69:	je     0x437d30
  437d6b:	mov    rdx,rdi
  437d6e:	mov    ecx,0x5c
  437d73:	call   0x4494e0
  437d78:	cmp    eax,0xffffffff
  437d7b:	jne    0x437d42
  437d7d:	mov    eax,0x1
  437d82:	add    rsp,0x20
  437d86:	pop    rbx
  437d87:	pop    rsi
  437d88:	pop    rdi
  437d89:	pop    rbp
  437d8a:	pop    r12
  437d8c:	ret    
  437d8d:	nop    DWORD PTR [rax]
  437d90:	mov    rdx,rdi
  437d93:	mov    ecx,0xa
  437d98:	call   0x4494e0
  437d9d:	cmp    eax,0xffffffff
  437da0:	je     0x437d7d
  437da2:	add    r12,0x8
  437da6:	mov    rbx,QWORD PTR [r12]
  437daa:	test   rbx,rbx
  437dad:	jne    0x437d55
  437daf:	xor    eax,eax
  437db1:	jmp    0x437d82
  437db3:	nop    DWORD PTR [rax]
  437db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437dc0:	push   r15
  437dc2:	push   r14
  437dc4:	push   r13
  437dc6:	push   r12
  437dc8:	push   rbp
  437dc9:	push   rdi
  437dca:	push   rsi
  437dcb:	push   rbx
  437dcc:	sub    rsp,0x48
  437dd0:	xor    edi,edi
  437dd2:	mov    rbp,rdx
  437dd5:	mov    edx,DWORD PTR [rcx]
  437dd7:	lea    ebx,[rdi+0x1]
  437dda:	mov    r13,rcx
  437ddd:	mov    DWORD PTR [rsp+0x38],0x7d0
  437de5:	cmp    ebx,edx
  437de7:	jge    0x437e11
  437de9:	nop    DWORD PTR [rax+0x0]
  437df0:	mov    rax,QWORD PTR [rbp+0x0]
  437df4:	movsxd rsi,ebx
  437df7:	lea    r12,[rsi*8+0x0]
  437dff:	mov    rcx,QWORD PTR [rax+rsi*8]
  437e03:	cmp    BYTE PTR [rcx],0x40
  437e06:	je     0x437e22
  437e08:	mov    edi,ebx
  437e0a:	lea    ebx,[rdi+0x1]
  437e0d:	cmp    ebx,edx
  437e0f:	jl     0x437df0
  437e11:	add    rsp,0x48
  437e15:	pop    rbx
  437e16:	pop    rsi
  437e17:	pop    rdi
  437e18:	pop    rbp
  437e19:	pop    r12
  437e1b:	pop    r13
  437e1d:	pop    r14
  437e1f:	pop    r15
  437e21:	ret    
  437e22:	sub    DWORD PTR [rsp+0x38],0x1
  437e27:	je     0x43802f
  437e2d:	lea    rdx,[rip+0x21675]        # 0x4594a9
  437e34:	add    rcx,0x1
  437e38:	call   0x4494f0
  437e3d:	test   rax,rax
  437e40:	mov    r14,rax
  437e43:	je     0x437fda
  437e49:	xor    edx,edx
  437e4b:	mov    r8d,0x2
  437e51:	mov    rcx,rax
  437e54:	call   0x4494b8
  437e59:	cmp    eax,0xffffffff
  437e5c:	je     0x437fd2
  437e62:	mov    rcx,r14
  437e65:	call   0x4494b0
  437e6a:	movsxd r15,eax
  437e6d:	cmp    r15d,0xffffffff
  437e71:	je     0x437fd2
  437e77:	xor    r8d,r8d
  437e7a:	xor    edx,edx
  437e7c:	mov    rcx,r14
  437e7f:	call   0x4494b8
  437e84:	cmp    eax,0xffffffff
  437e87:	je     0x437fd2
  437e8d:	lea    rcx,[r15+0x1]
  437e91:	call   0x43baf0
  437e96:	mov    edx,0x1
  437e9b:	mov    r9,r14
  437e9e:	mov    r8,r15
  437ea1:	mov    rcx,rax
  437ea4:	mov    QWORD PTR [rsp+0x20],rax
  437ea9:	call   0x4494d0
  437eae:	cmp    r15,rax
  437eb1:	mov    rdx,rax
  437eb4:	je     0x437ed0
  437eb6:	mov    rcx,r14
  437eb9:	mov    QWORD PTR [rsp+0x28],rax
  437ebe:	call   0x449508
  437ec3:	test   eax,eax
  437ec5:	mov    rdx,QWORD PTR [rsp+0x28]
  437eca:	jne    0x437fd2
  437ed0:	mov    rax,QWORD PTR [rsp+0x20]
  437ed5:	mov    BYTE PTR [rax+rdx*1],0x0
  437ed9:	movzx  eax,BYTE PTR [rax]
  437edc:	test   al,al
  437ede:	je     0x437f1c
  437ee0:	mov    rdx,QWORD PTR [rip+0x22f49]        # 0x45ae30
  437ee7:	test   BYTE PTR [rdx+rax*2],0x40
  437eeb:	je     0x437fe5
  437ef1:	mov    rdx,QWORD PTR [rsp+0x20]
  437ef6:	jmp    0x437f11
  437ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  437f00:	mov    rcx,QWORD PTR [rip+0x22f29]        # 0x45ae30
  437f07:	test   BYTE PTR [rcx+rax*2],0x40
  437f0b:	je     0x437fe5
  437f11:	add    rdx,0x1
  437f15:	movzx  eax,BYTE PTR [rdx]
  437f18:	test   al,al
  437f1a:	jne    0x437f00
  437f1c:	mov    ecx,0x8
  437f21:	call   0x43baf0
  437f26:	mov    rcx,QWORD PTR [rbp+0x0]
  437f2a:	mov    QWORD PTR [rax],0x0
  437f31:	mov    r15,rax
  437f34:	call   0x4379f0
  437f39:	xor    r10d,r10d
  437f3c:	mov    QWORD PTR [rbp+0x0],rax
  437f40:	xor    r9d,r9d
  437f43:	xor    r8d,r8d
  437f46:	movsxd rdx,DWORD PTR [r13+0x0]
  437f4a:	mov    rcx,rax
  437f4d:	mov    DWORD PTR [rsp+0x3c],r10d
  437f52:	mov    QWORD PTR [rsp+0x30],r9
  437f57:	mov    QWORD PTR [rsp+0x28],r8
  437f5c:	lea    rdx,[r8+rdx*1+0x1]
  437f61:	shl    rdx,0x3
  437f65:	call   0x43bb70
  437f6a:	mov    edx,DWORD PTR [r13+0x0]
  437f6e:	mov    r8,QWORD PTR [rsp+0x28]
  437f73:	mov    QWORD PTR [rbp+0x0],rax
  437f77:	sub    edx,ebx
  437f79:	add    rsi,r8
  437f7c:	movsxd rbx,edx
  437f7f:	lea    rcx,[rax+rsi*8]
  437f83:	lea    rdx,[rax+r12*1+0x8]
  437f88:	lea    r8,[rbx*8+0x0]
  437f90:	mov    ebx,edi
  437f92:	call   0x449448
  437f97:	mov    r9,QWORD PTR [rsp+0x30]
  437f9c:	mov    rcx,r12
  437f9f:	add    rcx,QWORD PTR [rbp+0x0]
  437fa3:	mov    rdx,r15
  437fa6:	mov    r8,r9
  437fa9:	call   0x449450
  437fae:	mov    eax,DWORD PTR [r13+0x0]
  437fb2:	mov    r10d,DWORD PTR [rsp+0x3c]
  437fb7:	mov    rcx,r15
  437fba:	lea    eax,[r10+rax*1-0x1]
  437fbf:	mov    DWORD PTR [r13+0x0],eax
  437fc3:	call   0x4494c8
  437fc8:	mov    rcx,QWORD PTR [rsp+0x20]
  437fcd:	call   0x4494c8
  437fd2:	mov    rcx,r14
  437fd5:	call   0x449518
  437fda:	mov    edx,DWORD PTR [r13+0x0]
  437fde:	mov    edi,ebx
  437fe0:	jmp    0x437e0a
  437fe5:	mov    rcx,QWORD PTR [rsp+0x20]
  437fea:	call   0x437ae0
  437fef:	mov    rcx,QWORD PTR [rbp+0x0]
  437ff3:	mov    rdx,QWORD PTR [rax]
  437ff6:	mov    r15,rax
  437ff9:	mov    QWORD PTR [rsp+0x28],rdx
  437ffe:	call   0x4379f0
  438003:	mov    rdx,QWORD PTR [rsp+0x28]
  438008:	mov    QWORD PTR [rbp+0x0],rax
  43800c:	test   rdx,rdx
  43800f:	je     0x438055
  438011:	xor    r8d,r8d
  438014:	add    r8,0x1
  438018:	cmp    QWORD PTR [r15+r8*8],0x0
  43801d:	lea    r9,[r8*8+0x0]
  438025:	jne    0x438014
  438027:	mov    r10d,r8d
  43802a:	jmp    0x437f46
  43802f:	mov    rbx,QWORD PTR [rax]
  438032:	call   QWORD PTR [rip+0x2c6fc]        # 0x464734
  438038:	lea    rdx,[rip+0x21441]        # 0x459480
  43803f:	lea    rcx,[rax+0x60]
  438043:	mov    r8,rbx
  438046:	call   0x4494e8
  43804b:	mov    ecx,0x1
  438050:	call   0x43ba60
  438055:	xor    r10d,r10d
  438058:	xor    r9d,r9d
  43805b:	xor    r8d,r8d
  43805e:	jmp    0x437f46
  438063:	nop    DWORD PTR [rax]
  438066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438070:	test   rcx,rcx
  438073:	je     0x438091
  438075:	cmp    QWORD PTR [rcx],0x0
  438079:	je     0x438091
  43807b:	add    rcx,0x8
  43807f:	xor    eax,eax
  438081:	add    rcx,0x8
  438085:	add    eax,0x1
  438088:	cmp    QWORD PTR [rcx-0x8],0x0
  43808d:	jne    0x438081
  43808f:	repz ret 
  438091:	xor    eax,eax
  438093:	ret    
  438094:	nop
  438095:	nop
  438096:	nop
  438097:	nop
  438098:	nop
  438099:	nop
  43809a:	nop
  43809b:	nop
  43809c:	nop
  43809d:	nop
  43809e:	nop
  43809f:	nop
  4380a0:	push   rsi
  4380a1:	push   rbx
  4380a2:	sub    rsp,0x38
  4380a6:	xor    esi,esi
  4380a8:	lea    rbx,[rsp+0x58]
  4380ad:	test   rcx,rcx
  4380b0:	mov    QWORD PTR [rsp+0x58],rdx
  4380b5:	mov    QWORD PTR [rsp+0x60],r8
  4380ba:	mov    QWORD PTR [rsp+0x68],r9
  4380bf:	mov    QWORD PTR [rsp+0x28],rbx
  4380c4:	je     0x4380e4
  4380c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4380d0:	add    rbx,0x8
  4380d4:	call   0x4493c0
  4380d9:	mov    rcx,QWORD PTR [rbx-0x8]
  4380dd:	add    esi,eax
  4380df:	test   rcx,rcx
  4380e2:	jne    0x4380d0
  4380e4:	mov    eax,esi
  4380e6:	add    rsp,0x38
  4380ea:	pop    rbx
  4380eb:	pop    rsi
  4380ec:	ret    
  4380ed:	nop    DWORD PTR [rax]
  4380f0:	push   r12
  4380f2:	push   rbp
  4380f3:	push   rdi
  4380f4:	push   rsi
  4380f5:	push   rbx
  4380f6:	sub    rsp,0x30
  4380fa:	lea    rdi,[rsp+0x70]
  4380ff:	test   rdx,rdx
  438102:	mov    r12,rcx
  438105:	mov    QWORD PTR [rsp+0x70],r8
  43810a:	mov    QWORD PTR [rsp+0x78],r9
  43810f:	mov    rsi,rdx
  438112:	mov    QWORD PTR [rsp+0x28],rdi
  438117:	mov    rbp,rcx
  43811a:	je     0x438148
  43811c:	nop    DWORD PTR [rax+0x0]
  438120:	mov    rcx,rsi
  438123:	add    rdi,0x8
  438127:	call   0x4493c0
  43812c:	mov    ebx,eax
  43812e:	mov    rdx,rsi
  438131:	mov    rcx,rbp
  438134:	mov    r8,rbx
  438137:	add    rbp,rbx
  43813a:	call   0x449450
  43813f:	mov    rsi,QWORD PTR [rdi-0x8]
  438143:	test   rsi,rsi
  438146:	jne    0x438120
  438148:	mov    rax,r12
  43814b:	mov    BYTE PTR [rbp+0x0],0x0
  43814f:	add    rsp,0x30
  438153:	pop    rbx
  438154:	pop    rsi
  438155:	pop    rdi
  438156:	pop    rbp
  438157:	pop    r12
  438159:	ret    
  43815a:	nop    WORD PTR [rax+rax*1+0x0]
  438160:	push   rbp
  438161:	push   rdi
  438162:	push   rsi
  438163:	push   rbx
  438164:	sub    rsp,0x38
  438168:	mov    rbp,QWORD PTR [rip+0x2ba81]        # 0x463bf0
  43816f:	lea    rdi,[rsp+0x68]
  438174:	test   rcx,rcx
  438177:	mov    QWORD PTR [rsp+0x68],rdx
  43817c:	mov    QWORD PTR [rsp+0x70],r8
  438181:	mov    QWORD PTR [rsp+0x78],r9
  438186:	mov    rsi,rcx
  438189:	mov    QWORD PTR [rsp+0x28],rdi
  43818e:	je     0x4381b8
  438190:	mov    rcx,rsi
  438193:	add    rdi,0x8
  438197:	call   0x4493c0
  43819c:	mov    ebx,eax
  43819e:	mov    rdx,rsi
  4381a1:	mov    rcx,rbp
  4381a4:	mov    r8,rbx
  4381a7:	add    rbp,rbx
  4381aa:	call   0x449450
  4381af:	mov    rsi,QWORD PTR [rdi-0x8]
  4381b3:	test   rsi,rsi
  4381b6:	jne    0x438190
  4381b8:	mov    BYTE PTR [rbp+0x0],0x0
  4381bc:	mov    rax,QWORD PTR [rip+0x2ba2d]        # 0x463bf0
  4381c3:	add    rsp,0x38
  4381c7:	pop    rbx
  4381c8:	pop    rsi
  4381c9:	pop    rdi
  4381ca:	pop    rbp
  4381cb:	ret    
  4381cc:	nop    DWORD PTR [rax+0x0]
  4381d0:	push   r12
  4381d2:	push   rbp
  4381d3:	push   rdi
  4381d4:	push   rsi
  4381d5:	push   rbx
  4381d6:	sub    rsp,0x30
  4381da:	lea    rdi,[rsp+0x68]
  4381df:	test   rcx,rcx
  4381e2:	mov    QWORD PTR [rsp+0x68],rdx
  4381e7:	mov    QWORD PTR [rsp+0x70],r8
  4381ec:	mov    QWORD PTR [rsp+0x78],r9
  4381f1:	mov    rsi,rcx
  4381f4:	mov    QWORD PTR [rsp+0x28],rdi
  4381f9:	mov    rbx,rdi
  4381fc:	je     0x43826a
  4381fe:	xor    ebp,ebp
  438200:	add    rbx,0x8
  438204:	call   0x4493c0
  438209:	mov    rcx,QWORD PTR [rbx-0x8]
  43820d:	add    ebp,eax
  43820f:	test   rcx,rcx
  438212:	jne    0x438200
  438214:	lea    ecx,[rbp+0x1]
  438217:	call   0x43baf0
  43821c:	mov    QWORD PTR [rsp+0x28],rdi
  438221:	mov    r12,rax
  438224:	mov    rbp,rax
  438227:	nop    WORD PTR [rax+rax*1+0x0]
  438230:	mov    rcx,rsi
  438233:	add    rdi,0x8
  438237:	call   0x4493c0
  43823c:	mov    ebx,eax
  43823e:	mov    rdx,rsi
  438241:	mov    rcx,rbp
  438244:	mov    r8,rbx
  438247:	add    rbp,rbx
  43824a:	call   0x449450
  43824f:	mov    rsi,QWORD PTR [rdi-0x8]
  438253:	test   rsi,rsi
  438256:	jne    0x438230
  438258:	mov    rax,r12
  43825b:	mov    BYTE PTR [rbp+0x0],0x0
  43825f:	add    rsp,0x30
  438263:	pop    rbx
  438264:	pop    rsi
  438265:	pop    rdi
  438266:	pop    rbp
  438267:	pop    r12
  438269:	ret    
  43826a:	mov    ecx,0x1
  43826f:	call   0x43baf0
  438274:	mov    QWORD PTR [rsp+0x28],rdi
  438279:	mov    r12,rax
  43827c:	mov    rbp,rax
  43827f:	jmp    0x438258
  438281:	nop    DWORD PTR [rax+rax*1+0x0]
  438286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438290:	push   r13
  438292:	push   r12
  438294:	push   rbp
  438295:	push   rdi
  438296:	push   rsi
  438297:	push   rbx
  438298:	sub    rsp,0x38
  43829c:	lea    rbp,[rsp+0x80]
  4382a4:	test   rdx,rdx
  4382a7:	mov    r12,rcx
  4382aa:	mov    QWORD PTR [rsp+0x80],r8
  4382b2:	mov    QWORD PTR [rsp+0x88],r9
  4382ba:	mov    rsi,rdx
  4382bd:	mov    QWORD PTR [rsp+0x28],rbp
  4382c2:	mov    rbx,rbp
  4382c5:	je     0x438348
  4382cb:	mov    rcx,rdx
  4382ce:	xor    edi,edi
  4382d0:	add    rbx,0x8
  4382d4:	call   0x4493c0
  4382d9:	mov    rcx,QWORD PTR [rbx-0x8]
  4382dd:	add    edi,eax
  4382df:	test   rcx,rcx
  4382e2:	jne    0x4382d0
  4382e4:	lea    ecx,[rdi+0x1]
  4382e7:	call   0x43baf0
  4382ec:	mov    QWORD PTR [rsp+0x28],rbp
  4382f1:	mov    r13,rax
  4382f4:	mov    rdi,rax
  4382f7:	nop    WORD PTR [rax+rax*1+0x0]
  438300:	mov    rcx,rsi
  438303:	add    rbp,0x8
  438307:	call   0x4493c0
  43830c:	mov    ebx,eax
  43830e:	mov    rdx,rsi
  438311:	mov    rcx,rdi
  438314:	mov    r8,rbx
  438317:	add    rdi,rbx
  43831a:	call   0x449450
  43831f:	mov    rsi,QWORD PTR [rbp-0x8]
  438323:	test   rsi,rsi
  438326:	jne    0x438300
  438328:	test   r12,r12
  43832b:	mov    BYTE PTR [rdi],0x0
  43832e:	je     0x438338
  438330:	mov    rcx,r12
  438333:	call   0x4494c8
  438338:	mov    rax,r13
  43833b:	add    rsp,0x38
  43833f:	pop    rbx
  438340:	pop    rsi
  438341:	pop    rdi
  438342:	pop    rbp
  438343:	pop    r12
  438345:	pop    r13
  438347:	ret    
  438348:	mov    ecx,0x1
  43834d:	call   0x43baf0
  438352:	mov    QWORD PTR [rsp+0x28],rbp
  438357:	mov    r13,rax
  43835a:	mov    rdi,rax
  43835d:	jmp    0x438328
  43835f:	nop
  438360:	mov    r9,QWORD PTR [rip+0x22ad9]        # 0x45ae40
  438367:	jmp    0x43838f
  438369:	nop    DWORD PTR [rax+0x0]
  438370:	cmp    r8d,0x2f
  438374:	mov    r10d,0x5c
  43837a:	cmove  r8d,r10d
  43837e:	cmp    eax,r8d
  438381:	jne    0x4383b5
  438383:	test   eax,eax
  438385:	je     0x4383c0
  438387:	add    rcx,0x1
  43838b:	add    rdx,0x1
  43838f:	movzx  eax,BYTE PTR [rcx]
  438392:	movzx  r8d,BYTE PTR [rdx]
  438396:	movzx  eax,BYTE PTR [r9+rax*1]
  43839b:	movzx  r8d,BYTE PTR [r9+r8*1]
  4383a0:	cmp    eax,0x2f
  4383a3:	jne    0x438370
  4383a5:	cmp    r8d,0x2f
  4383a9:	mov    eax,0x5c
  4383ae:	je     0x438387
  4383b0:	cmp    eax,r8d
  4383b3:	je     0x438383
  4383b5:	sub    eax,r8d
  4383b8:	ret    
  4383b9:	nop    DWORD PTR [rax+0x0]
  4383c0:	xor    eax,eax
  4383c2:	ret    
  4383c3:	nop    DWORD PTR [rax]
  4383c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4383d0:	xor    eax,eax
  4383d2:	test   r8,r8
  4383d5:	je     0x438440
  4383d7:	mov    r11,QWORD PTR [rip+0x22a62]        # 0x45ae40
  4383de:	jmp    0x438404
  4383e0:	test   eax,eax
  4383e2:	sete   r10b
  4383e6:	cmp    r9d,0x2f
  4383ea:	je     0x438434
  4383ec:	cmp    eax,r9d
  4383ef:	jne    0x438430
  4383f1:	test   r10b,r10b
  4383f4:	jne    0x438430
  4383f6:	add    rcx,0x1
  4383fa:	add    rdx,0x1
  4383fe:	sub    r8,0x1
  438402:	je     0x438442
  438404:	movzx  eax,BYTE PTR [rcx]
  438407:	movzx  r9d,BYTE PTR [rdx]
  43840b:	movzx  eax,BYTE PTR [r11+rax*1]
  438410:	movzx  r9d,BYTE PTR [r11+r9*1]
  438415:	cmp    eax,0x2f
  438418:	jne    0x4383e0
  43841a:	cmp    r9d,0x2f
  43841e:	je     0x4383f6
  438420:	mov    eax,0x5c
  438425:	xor    r10d,r10d
  438428:	cmp    eax,r9d
  43842b:	je     0x4383f1
  43842d:	nop    DWORD PTR [rax]
  438430:	sub    eax,r9d
  438433:	ret    
  438434:	mov    r9b,0x5c
  438437:	jmp    0x4383ec
  438439:	nop    DWORD PTR [rax+0x0]
  438440:	repz ret 
  438442:	xor    eax,eax
  438444:	ret    
  438445:	nop
  438446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438450:	xor    eax,eax
  438452:	lea    r8,[rcx+0x1]
  438456:	movzx  ecx,BYTE PTR [rcx]
  438459:	test   cl,cl
  43845b:	je     0x438495
  43845d:	mov    r10,QWORD PTR [rip+0x229dc]        # 0x45ae40
  438464:	mov    r9d,0x2f
  43846a:	nop    WORD PTR [rax+rax*1+0x0]
  438470:	cmp    cl,0x5c
  438473:	movzx  edx,cl
  438476:	cmove  rdx,r9
  43847a:	add    r8,0x1
  43847e:	movzx  ecx,BYTE PTR [r8-0x1]
  438483:	movzx  edx,BYTE PTR [r10+rdx*1]
  438488:	imul   eax,eax,0x43
  43848b:	test   cl,cl
  43848d:	lea    eax,[rax+rdx*1-0x71]
  438491:	jne    0x438470
  438493:	repz ret 
  438495:	repz ret 
  438497:	nop    WORD PTR [rax+rax*1+0x0]
  4384a0:	sub    rsp,0x28
  4384a4:	call   0x438360
  4384a9:	test   eax,eax
  4384ab:	sete   al
  4384ae:	movzx  eax,al
  4384b1:	add    rsp,0x28
  4384b5:	ret    
  4384b6:	nop
  4384b7:	nop
  4384b8:	nop
  4384b9:	nop
  4384ba:	nop
  4384bb:	nop
  4384bc:	nop
  4384bd:	nop
  4384be:	nop
  4384bf:	nop
  4384c0:	ret    
  4384c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4384c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4384d0:	push   rbx
  4384d1:	sub    rsp,0x20
  4384d5:	mov    rbx,QWORD PTR [rip+0x2c258]        # 0x464734
  4384dc:	call   rbx
  4384de:	call   rbx
  4384e0:	mov    rax,rbx
  4384e3:	add    rsp,0x20
  4384e7:	pop    rbx
  4384e8:	rex.W jmp rax
  4384eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4384f0:	jmp    0x4494f0
  4384f5:	nop
  4384f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438500:	jmp    0x4492f8
  438505:	nop
  438506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438510:	jmp    0x4494c0
  438515:	nop
  438516:	nop
  438517:	nop
  438518:	nop
  438519:	nop
  43851a:	nop
  43851b:	nop
  43851c:	nop
  43851d:	nop
  43851e:	nop
  43851f:	nop
  438520:	sub    rsp,0x28
  438524:	mov    rax,QWORD PTR [rip+0x2a1a5]        # 0x4626d0
  43852b:	test   rax,rax
  43852e:	je     0x438535
  438530:	add    rsp,0x28
  438534:	ret    
  438535:	mov    ecx,0x105
  43853a:	call   0x43baf0
  43853f:	mov    edx,0x105
  438544:	mov    rcx,rax
  438547:	call   0x449308
  43854c:	mov    QWORD PTR [rip+0x2a17d],rax        # 0x4626d0
  438553:	add    rsp,0x28
  438557:	ret    
  438558:	nop
  438559:	nop
  43855a:	nop
  43855b:	nop
  43855c:	nop
  43855d:	nop
  43855e:	nop
  43855f:	nop
  438560:	xor    eax,eax
  438562:	cmp    rcx,rdx
  438565:	sete   al
  438568:	ret    
  438569:	nop    DWORD PTR [rax+0x0]
  438570:	mov    rdx,rcx
  438573:	lea    r8d,[rcx+0x5c242785]
  43857a:	sar    rdx,0x20
  43857e:	sub    edx,ecx
  438580:	mov    ecx,0x42135234
  438585:	sub    edx,0x42135234
  43858b:	xor    edx,0x2109a
  438591:	mov    eax,edx
  438593:	sub    r8d,edx
  438596:	sub    ecx,edx
  438598:	shl    eax,0x8
  43859b:	xor    r8d,eax
  43859e:	mov    eax,r8d
  4385a1:	sub    ecx,r8d
  4385a4:	sub    edx,r8d
  4385a7:	shr    eax,0xd
  4385aa:	xor    ecx,eax
  4385ac:	mov    eax,ecx
  4385ae:	sub    edx,ecx
  4385b0:	sub    r8d,ecx
  4385b3:	shr    eax,0xc
  4385b6:	xor    edx,eax
  4385b8:	mov    eax,edx
  4385ba:	sub    r8d,edx
  4385bd:	sub    ecx,edx
  4385bf:	shl    eax,0x10
  4385c2:	xor    r8d,eax
  4385c5:	mov    eax,r8d
  4385c8:	sub    ecx,r8d
  4385cb:	sub    edx,r8d
  4385ce:	shr    eax,0x5
  4385d1:	xor    ecx,eax
  4385d3:	mov    eax,ecx
  4385d5:	sub    edx,ecx
  4385d7:	sub    r8d,ecx
  4385da:	shr    eax,0x3
  4385dd:	xor    edx,eax
  4385df:	mov    eax,edx
  4385e1:	sub    r8d,edx
  4385e4:	sub    ecx,edx
  4385e6:	shl    eax,0xa
  4385e9:	xor    eax,r8d
  4385ec:	sub    ecx,eax
  4385ee:	shr    eax,0xf
  4385f1:	xor    eax,ecx
  4385f3:	ret    
  4385f4:	xchg   ax,ax
  4385f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438600:	push   rbx
  438601:	sub    rsp,0x20
  438605:	xor    r8d,r8d
  438608:	mov    eax,0x1e
  43860d:	lea    r10,[rip+0x20f2c]        # 0x459540
  438614:	jmp    0x438629
  438616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438620:	lea    r8d,[rdx+0x1]
  438624:	cmp    r8d,eax
  438627:	je     0x438667
  438629:	mov    edx,eax
  43862b:	sub    edx,r8d
  43862e:	shr    edx,1
  438630:	lea    r9d,[rdx+r8*1]
  438634:	mov    rdx,r9
  438637:	shl    r9,0x4
  43863b:	cmp    ecx,DWORD PTR [r10+r9*1]
  43863f:	ja     0x438620
  438641:	cmp    edx,r8d
  438644:	mov    eax,edx
  438646:	je     0x438667
  438648:	sub    edx,r8d
  43864b:	shr    edx,1
  43864d:	lea    r9d,[rdx+r8*1]
  438651:	mov    rdx,r9
  438654:	shl    r9,0x4
  438658:	cmp    DWORD PTR [r10+r9*1],ecx
  43865c:	jae    0x438641
  43865e:	lea    r8d,[rdx+0x1]
  438662:	cmp    r8d,eax
  438665:	jne    0x438629
  438667:	mov    edx,eax
  438669:	shl    rdx,0x4
  43866d:	cmp    ecx,DWORD PTR [r10+rdx*1]
  438671:	ja     0x438679
  438673:	add    rsp,0x20
  438677:	pop    rbx
  438678:	ret    
  438679:	mov    ebx,ecx
  43867b:	call   QWORD PTR [rip+0x2c0b3]        # 0x464734
  438681:	lea    rdx,[rip+0x20e38]        # 0x4594c0
  438688:	lea    rcx,[rax+0x60]
  43868c:	mov    r8d,ebx
  43868f:	call   0x4494e8
  438694:	call   0x449548
  438699:	nop
  43869a:	nop    WORD PTR [rax+rax*1+0x0]
  4386a0:	push   r15
  4386a2:	push   r14
  4386a4:	push   r13
  4386a6:	push   r12
  4386a8:	push   rbp
  4386a9:	push   rdi
  4386aa:	push   rsi
  4386ab:	push   rbx
  4386ac:	sub    rsp,0x38
  4386b0:	mov    rdx,QWORD PTR [rcx+0x28]
  4386b4:	sub    rdx,QWORD PTR [rcx+0x30]
  4386b8:	mov    rbx,QWORD PTR [rcx+0x20]
  4386bc:	mov    rdi,QWORD PTR [rcx+0x18]
  4386c0:	mov    r12,rcx
  4386c3:	mov    ebp,DWORD PTR [rcx+0x68]
  4386c6:	lea    rax,[rdx+rdx*1]
  4386ca:	lea    rsi,[rdi+rbx*8]
  4386ce:	cmp    rbx,rax
  4386d1:	jb     0x4386e6
  4386d3:	lea    rax,[rdx*8+0x0]
  4386db:	cmp    rbx,rax
  4386de:	jbe    0x438701
  4386e0:	cmp    rbx,0x20
  4386e4:	jbe    0x438701
  4386e6:	lea    ecx,[rdx+rdx*1]
  4386e9:	call   0x438600
  4386ee:	lea    rdx,[rip+0x20e4b]        # 0x459540
  4386f5:	mov    eax,eax
  4386f7:	mov    rbp,rax
  4386fa:	shl    rax,0x4
  4386fe:	mov    ebx,DWORD PTR [rdx+rax*1]
  438701:	mov    rax,QWORD PTR [r12+0x58]
  438706:	test   rax,rax
  438709:	je     0x438880
  43870f:	mov    rcx,QWORD PTR [r12+0x50]
  438714:	mov    r8d,0x8
  43871a:	mov    rdx,rbx
  43871d:	call   rax
  43871f:	test   rax,rax
  438722:	je     0x438896
  438728:	mov    QWORD PTR [r12+0x18],rax
  43872d:	mov    DWORD PTR [r12+0x68],ebp
  438732:	mov    rbp,rdi
  438735:	mov    rax,QWORD PTR [r12+0x30]
  43873a:	mov    QWORD PTR [r12+0x20],rbx
  43873f:	sub    QWORD PTR [r12+0x28],rax
  438744:	mov    QWORD PTR [r12+0x30],0x0
  43874d:	jmp    0x43875d
  43874f:	nop
  438750:	add    rbp,0x8
  438754:	cmp    rsi,rbp
  438757:	jbe    0x438837
  43875d:	mov    rbx,QWORD PTR [rbp+0x0]
  438761:	cmp    rbx,0x1
  438765:	jbe    0x438750
  438767:	mov    rcx,rbx
  43876a:	call   QWORD PTR [r12]
  43876e:	mov    r10d,DWORD PTR [r12+0x68]
  438773:	lea    rcx,[rip+0x20dc6]        # 0x459540
  43877a:	mov    r14d,eax
  43877d:	mov    r8d,eax
  438780:	mov    r15d,eax
  438783:	mov    r11,QWORD PTR [r12+0x18]
  438788:	mov    r9,QWORD PTR [r12+0x20]
  43878d:	shl    r10,0x4
  438791:	add    r10,rcx
  438794:	mov    edx,DWORD PTR [r10+0x4]
  438798:	mov    ecx,DWORD PTR [r10+0xc]
  43879c:	mov    r13d,DWORD PTR [r10]
  43879f:	imul   rdx,r14
  4387a3:	shr    rdx,0x20
  4387a7:	sub    r8d,edx
  4387aa:	shr    r8d,1
  4387ad:	add    edx,r8d
  4387b0:	shr    edx,cl
  4387b2:	imul   edx,r13d
  4387b6:	sub    r15d,edx
  4387b9:	mov    r8d,r15d
  4387bc:	mov    rdx,r8
  4387bf:	lea    r8,[r11+r8*8]
  4387c3:	mov    r15,QWORD PTR [r8]
  4387c6:	test   r15,r15
  4387c9:	je     0x438827
  4387cb:	cmp    r15,0x1
  4387cf:	je     0x43889a
  4387d5:	mov    r8d,DWORD PTR [r10+0x8]
  4387d9:	lea    r10d,[rax+0x1]
  4387dd:	sub    r13d,0x2
  4387e1:	imul   r14,r8
  4387e5:	shr    r14,0x20
  4387e9:	sub    eax,r14d
  4387ec:	shr    eax,1
  4387ee:	add    r14d,eax
  4387f1:	shr    r14d,cl
  4387f4:	imul   r14d,r13d
  4387f8:	sub    r10d,r14d
  4387fb:	jmp    0x43880a
  4387fd:	nop    DWORD PTR [rax]
  438800:	cmp    rax,0x1
  438804:	je     0x43889a
  43880a:	lea    eax,[rdx+r10*1]
  43880e:	cmp    r9,rax
  438811:	mov    rdx,rax
  438814:	ja     0x43881b
  438816:	sub    edx,r9d
  438819:	mov    eax,edx
  43881b:	lea    r8,[r11+rax*8]
  43881f:	mov    rax,QWORD PTR [r8]
  438822:	test   rax,rax
  438825:	jne    0x438800
  438827:	add    rbp,0x8
  43882b:	mov    QWORD PTR [r8],rbx
  43882e:	cmp    rsi,rbp
  438831:	ja     0x43875d
  438837:	mov    rax,QWORD PTR [r12+0x48]
  43883c:	test   rax,rax
  43883f:	je     0x43885c
  438841:	mov    rcx,rdi
  438844:	call   rax
  438846:	mov    eax,0x1
  43884b:	add    rsp,0x38
  43884f:	pop    rbx
  438850:	pop    rsi
  438851:	pop    rdi
  438852:	pop    rbp
  438853:	pop    r12
  438855:	pop    r13
  438857:	pop    r14
  438859:	pop    r15
  43885b:	ret    
  43885c:	mov    r8,QWORD PTR [r12+0x60]
  438861:	mov    eax,0x1
  438866:	test   r8,r8
  438869:	je     0x43884b
  43886b:	mov    DWORD PTR [rsp+0x2c],eax
  43886f:	mov    rcx,QWORD PTR [r12+0x50]
  438874:	mov    rdx,rdi
  438877:	call   r8
  43887a:	mov    eax,DWORD PTR [rsp+0x2c]
  43887e:	jmp    0x43884b
  438880:	mov    edx,0x8
  438885:	mov    rcx,rbx
  438888:	call   QWORD PTR [r12+0x40]
  43888d:	test   rax,rax
  438890:	jne    0x438728
  438896:	xor    eax,eax
  438898:	jmp    0x43884b
  43889a:	call   0x449548
  43889f:	nop
  4388a0:	mov    rax,QWORD PTR [rcx+0x20]
  4388a4:	ret    
  4388a5:	nop
  4388a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4388b0:	mov    rax,QWORD PTR [rcx+0x28]
  4388b4:	sub    rax,QWORD PTR [rcx+0x30]
  4388b8:	ret    
  4388b9:	nop    DWORD PTR [rax+0x0]
  4388c0:	push   r15
  4388c2:	push   r14
  4388c4:	push   r13
  4388c6:	push   r12
  4388c8:	push   rbp
  4388c9:	push   rdi
  4388ca:	push   rsi
  4388cb:	push   rbx
  4388cc:	sub    rsp,0x28
  4388d0:	mov    rbx,QWORD PTR [rsp+0x90]
  4388d8:	mov    rsi,QWORD PTR [rsp+0x98]
  4388e0:	mov    r15,rdx
  4388e3:	mov    r14,r8
  4388e6:	mov    r13,r9
  4388e9:	call   0x438600
  4388ee:	lea    rdx,[rip+0x20c4b]        # 0x459540
  4388f5:	mov    eax,eax
  4388f7:	mov    r8d,0x70
  4388fd:	mov    rdi,rax
  438900:	shl    rax,0x4
  438904:	mov    rcx,rbx
  438907:	mov    ebp,DWORD PTR [rdx+rax*1]
  43890a:	mov    edx,0x1
  43890f:	call   rsi
  438911:	test   rax,rax
  438914:	mov    r12,rax
  438917:	je     0x43898c
  438919:	mov    r8d,0x8
  43891f:	mov    rdx,rbp
  438922:	mov    rcx,rbx
  438925:	call   rsi
  438927:	test   rax,rax
  43892a:	mov    QWORD PTR [r12+0x18],rax
  43892f:	je     0x438974
  438931:	mov    rax,QWORD PTR [rsp+0xa0]
  438939:	mov    QWORD PTR [r12+0x20],rbp
  43893e:	mov    DWORD PTR [r12+0x68],edi
  438943:	mov    QWORD PTR [r12],r15
  438947:	mov    QWORD PTR [r12+0x8],r14
  43894c:	mov    QWORD PTR [r12+0x10],r13
  438951:	mov    QWORD PTR [r12+0x60],rax
  438956:	mov    QWORD PTR [r12+0x50],rbx
  43895b:	mov    rax,r12
  43895e:	mov    QWORD PTR [r12+0x58],rsi
  438963:	add    rsp,0x28
  438967:	pop    rbx
  438968:	pop    rsi
  438969:	pop    rdi
  43896a:	pop    rbp
  43896b:	pop    r12
  43896d:	pop    r13
  43896f:	pop    r14
  438971:	pop    r15
  438973:	ret    
  438974:	cmp    QWORD PTR [rsp+0xa0],0x0
  43897d:	je     0x43898c
  43897f:	mov    rdx,r12
  438982:	mov    rcx,rbx
  438985:	call   QWORD PTR [rsp+0xa0]
  43898c:	xor    eax,eax
  43898e:	jmp    0x438963
  438990:	push   r15
  438992:	push   r14
  438994:	push   r13
  438996:	push   r12
  438998:	push   rbp
  438999:	push   rdi
  43899a:	push   rsi
  43899b:	push   rbx
  43899c:	sub    rsp,0x28
  4389a0:	mov    rdi,QWORD PTR [rsp+0x98]
  4389a8:	mov    rbp,QWORD PTR [rsp+0xa0]
  4389b0:	mov    r14,rdx
  4389b3:	mov    r13,r8
  4389b6:	mov    r12,r9
  4389b9:	call   0x438600
  4389be:	mov    ecx,eax
  4389c0:	lea    rax,[rip+0x20b79]        # 0x459540
  4389c7:	mov    edx,0x70
  4389cc:	mov    rsi,rcx
  4389cf:	shl    rcx,0x4
  4389d3:	mov    r15d,DWORD PTR [rax+rcx*1]
  4389d7:	mov    ecx,0x1
  4389dc:	call   QWORD PTR [rsp+0x90]
  4389e3:	test   rax,rax
  4389e6:	mov    rbx,rax
  4389e9:	je     0x438a3a
  4389eb:	mov    edx,0x8
  4389f0:	mov    rcx,r15
  4389f3:	call   rdi
  4389f5:	test   rax,rax
  4389f8:	mov    QWORD PTR [rbx+0x18],rax
  4389fc:	je     0x438a30
  4389fe:	mov    QWORD PTR [rbx+0x20],r15
  438a02:	mov    DWORD PTR [rbx+0x68],esi
  438a05:	mov    rax,rbx
  438a08:	mov    QWORD PTR [rbx],r14
  438a0b:	mov    QWORD PTR [rbx+0x8],r13
  438a0f:	mov    QWORD PTR [rbx+0x10],r12
  438a13:	mov    QWORD PTR [rbx+0x40],rdi
  438a17:	mov    QWORD PTR [rbx+0x48],rbp
  438a1b:	add    rsp,0x28
  438a1f:	pop    rbx
  438a20:	pop    rsi
  438a21:	pop    rdi
  438a22:	pop    rbp
  438a23:	pop    r12
  438a25:	pop    r13
  438a27:	pop    r14
  438a29:	pop    r15
  438a2b:	ret    
  438a2c:	nop    DWORD PTR [rax+0x0]
  438a30:	test   rbp,rbp
  438a33:	je     0x438a3a
  438a35:	mov    rcx,rbx
  438a38:	call   rbp
  438a3a:	xor    eax,eax
  438a3c:	jmp    0x438a1b
  438a3e:	xchg   ax,ax
  438a40:	sub    rsp,0x48
  438a44:	mov    rax,QWORD PTR [rsp+0x70]
  438a49:	mov    r10,QWORD PTR [rsp+0x78]
  438a4e:	mov    QWORD PTR [rsp+0x28],rax
  438a53:	mov    QWORD PTR [rsp+0x30],r10
  438a58:	mov    QWORD PTR [rsp+0x20],rax
  438a5d:	call   0x438990
  438a62:	add    rsp,0x48
  438a66:	ret    
  438a67:	nop    WORD PTR [rax+rax*1+0x0]
  438a70:	mov    rax,QWORD PTR [rsp+0x28]
  438a75:	mov    QWORD PTR [rcx],rdx
  438a78:	mov    QWORD PTR [rcx+0x8],r8
  438a7c:	mov    QWORD PTR [rcx+0x10],r9
  438a80:	mov    QWORD PTR [rcx+0x50],rax
  438a84:	mov    rax,QWORD PTR [rsp+0x30]
  438a89:	mov    QWORD PTR [rcx+0x58],rax
  438a8d:	mov    rax,QWORD PTR [rsp+0x38]
  438a92:	mov    QWORD PTR [rcx+0x60],rax
  438a96:	ret    
  438a97:	nop    WORD PTR [rax+rax*1+0x0]
  438aa0:	sub    rsp,0x48
  438aa4:	mov    rax,QWORD PTR [rip+0x223f5]        # 0x45aea0
  438aab:	mov    QWORD PTR [rsp+0x30],rax
  438ab0:	mov    rax,QWORD PTR [rip+0x22569]        # 0x45b020
  438ab7:	mov    QWORD PTR [rsp+0x28],rax
  438abc:	mov    QWORD PTR [rsp+0x20],rax
  438ac1:	call   0x438990
  438ac6:	add    rsp,0x48
  438aca:	ret    
  438acb:	nop    DWORD PTR [rax+rax*1+0x0]
  438ad0:	sub    rsp,0x48
  438ad4:	mov    rax,QWORD PTR [rip+0x223c5]        # 0x45aea0
  438adb:	mov    QWORD PTR [rsp+0x30],rax
  438ae0:	mov    rax,QWORD PTR [rip+0x22389]        # 0x45ae70
  438ae7:	mov    QWORD PTR [rsp+0x28],rax
  438aec:	mov    QWORD PTR [rsp+0x20],rax
  438af1:	call   0x438990
  438af6:	add    rsp,0x48
  438afa:	ret    
  438afb:	nop    DWORD PTR [rax+rax*1+0x0]
  438b00:	push   rbp
  438b01:	push   rdi
  438b02:	push   rsi
  438b03:	push   rbx
  438b04:	sub    rsp,0x28
  438b08:	cmp    QWORD PTR [rcx+0x10],0x0
  438b0d:	mov    rbx,QWORD PTR [rcx+0x20]
  438b11:	mov    rdi,rcx
  438b14:	mov    rbp,QWORD PTR [rcx+0x18]
  438b18:	je     0x438b54
  438b1a:	sub    ebx,0x1
  438b1d:	js     0x438b54
  438b1f:	movsxd rax,ebx
  438b22:	lea    rsi,[rbp+rax*8+0x0]
  438b27:	jmp    0x438b3c
  438b29:	nop    DWORD PTR [rax+0x0]
  438b30:	sub    ebx,0x1
  438b33:	sub    rsi,0x8
  438b37:	cmp    ebx,0xffffffff
  438b3a:	je     0x438b54
  438b3c:	mov    rcx,QWORD PTR [rsi]
  438b3f:	cmp    rcx,0x1
  438b43:	jbe    0x438b30
  438b45:	sub    ebx,0x1
  438b48:	sub    rsi,0x8
  438b4c:	call   QWORD PTR [rdi+0x10]
  438b4f:	cmp    ebx,0xffffffff
  438b52:	jne    0x438b3c
  438b54:	mov    rax,QWORD PTR [rdi+0x48]
  438b58:	test   rax,rax
  438b5b:	je     0x438b74
  438b5d:	mov    rcx,rbp
  438b60:	call   rax
  438b62:	mov    rax,QWORD PTR [rdi+0x48]
  438b66:	mov    rcx,rdi
  438b69:	add    rsp,0x28
  438b6d:	pop    rbx
  438b6e:	pop    rsi
  438b6f:	pop    rdi
  438b70:	pop    rbp
  438b71:	rex.W jmp rax
  438b74:	mov    rax,QWORD PTR [rdi+0x60]
  438b78:	test   rax,rax
  438b7b:	je     0x438ba0
  438b7d:	mov    rcx,QWORD PTR [rdi+0x50]
  438b81:	mov    rdx,rbp
  438b84:	call   rax
  438b86:	mov    rcx,QWORD PTR [rdi+0x50]
  438b8a:	mov    rax,QWORD PTR [rdi+0x60]
  438b8e:	mov    rdx,rdi
  438b91:	add    rsp,0x28
  438b95:	pop    rbx
  438b96:	pop    rsi
  438b97:	pop    rdi
  438b98:	pop    rbp
  438b99:	rex.W jmp rax
  438b9c:	nop    DWORD PTR [rax+0x0]
  438ba0:	add    rsp,0x28
  438ba4:	pop    rbx
  438ba5:	pop    rsi
  438ba6:	pop    rdi
  438ba7:	pop    rbp
  438ba8:	ret    
  438ba9:	nop    DWORD PTR [rax+0x0]
  438bb0:	push   r12
  438bb2:	push   rbp
  438bb3:	push   rdi
  438bb4:	push   rsi
  438bb5:	push   rbx
  438bb6:	sub    rsp,0x20
  438bba:	cmp    QWORD PTR [rcx+0x10],0x0
  438bbf:	mov    rbp,QWORD PTR [rcx+0x20]
  438bc3:	mov    rdi,rcx
  438bc6:	mov    r12,QWORD PTR [rcx+0x18]
  438bca:	je     0x438c04
  438bcc:	mov    ebx,ebp
  438bce:	sub    ebx,0x1
  438bd1:	js     0x438c04
  438bd3:	movsxd rax,ebx
  438bd6:	lea    rsi,[r12+rax*8]
  438bda:	jmp    0x438bec
  438bdc:	nop    DWORD PTR [rax+0x0]
  438be0:	sub    ebx,0x1
  438be3:	sub    rsi,0x8
  438be7:	cmp    ebx,0xffffffff
  438bea:	je     0x438c04
  438bec:	mov    rcx,QWORD PTR [rsi]
  438bef:	cmp    rcx,0x1
  438bf3:	jbe    0x438be0
  438bf5:	sub    ebx,0x1
  438bf8:	sub    rsi,0x8
  438bfc:	call   QWORD PTR [rdi+0x10]
  438bff:	cmp    ebx,0xffffffff
  438c02:	jne    0x438bec
  438c04:	cmp    rbp,0x20000
  438c0b:	jbe    0x438c60
  438c0d:	mov    ecx,0x80
  438c12:	call   0x438600
  438c17:	movsxd rdx,eax
  438c1a:	lea    rax,[rip+0x2091f]        # 0x459540
  438c21:	mov    rsi,rdx
  438c24:	shl    rdx,0x4
  438c28:	movsxd rbx,DWORD PTR [rax+rdx*1]
  438c2c:	mov    rax,QWORD PTR [rdi+0x48]
  438c30:	test   rax,rax
  438c33:	je     0x438c90
  438c35:	mov    rcx,QWORD PTR [rdi+0x18]
  438c39:	call   rax
  438c3b:	mov    rax,QWORD PTR [rdi+0x58]
  438c3f:	test   rax,rax
  438c42:	je     0x438ca5
  438c44:	mov    rcx,QWORD PTR [rdi+0x50]
  438c48:	mov    r8d,0x8
  438c4e:	mov    rdx,rbx
  438c51:	call   rax
  438c53:	mov    QWORD PTR [rdi+0x18],rax
  438c57:	mov    QWORD PTR [rdi+0x20],rbx
  438c5b:	mov    DWORD PTR [rdi+0x68],esi
  438c5e:	jmp    0x438c72
  438c60:	lea    r8,[rbp*8+0x0]
  438c68:	xor    edx,edx
  438c6a:	mov    rcx,r12
  438c6d:	call   0x449440
  438c72:	mov    QWORD PTR [rdi+0x30],0x0
  438c7a:	mov    QWORD PTR [rdi+0x28],0x0
  438c82:	add    rsp,0x20
  438c86:	pop    rbx
  438c87:	pop    rsi
  438c88:	pop    rdi
  438c89:	pop    rbp
  438c8a:	pop    r12
  438c8c:	ret    
  438c8d:	nop    DWORD PTR [rax]
  438c90:	mov    rax,QWORD PTR [rdi+0x60]
  438c94:	test   rax,rax
  438c97:	je     0x438c3b
  438c99:	mov    rdx,QWORD PTR [rdi+0x18]
  438c9d:	mov    rcx,QWORD PTR [rdi+0x50]
  438ca1:	call   rax
  438ca3:	jmp    0x438c3b
  438ca5:	mov    edx,0x8
  438caa:	mov    rcx,rbx
  438cad:	call   QWORD PTR [rdi+0x40]
  438cb0:	mov    QWORD PTR [rdi+0x18],rax
  438cb4:	jmp    0x438c57
  438cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438cc0:	push   r15
  438cc2:	push   r14
  438cc4:	push   r13
  438cc6:	push   r12
  438cc8:	push   rbp
  438cc9:	push   rdi
  438cca:	push   rsi
  438ccb:	push   rbx
  438ccc:	sub    rsp,0x28
  438cd0:	mov    r11d,DWORD PTR [rcx+0x68]
  438cd4:	lea    r13,[rip+0x20865]        # 0x459540
  438cdb:	add    DWORD PTR [rcx+0x38],0x1
  438cdf:	mov    rdi,rcx
  438ce2:	mov    rbp,QWORD PTR [rcx+0x20]
  438ce6:	mov    r15d,r8d
  438ce9:	mov    r9d,r8d
  438cec:	mov    ebx,r8d
  438cef:	mov    rax,r11
  438cf2:	shl    rax,0x4
  438cf6:	add    rax,r13
  438cf9:	mov    ecx,DWORD PTR [rax+0xc]
  438cfc:	mov    r10d,DWORD PTR [rax]
  438cff:	mov    eax,DWORD PTR [rax+0x4]
  438d02:	imul   rax,r15
  438d06:	shr    rax,0x20
  438d0a:	sub    r9d,eax
  438d0d:	shr    r9d,1
  438d10:	add    eax,r9d
  438d13:	mov    r9,QWORD PTR [rdi+0x18]
  438d17:	shr    eax,cl
  438d19:	imul   eax,r10d
  438d1d:	sub    ebx,eax
  438d1f:	mov    eax,ebx
  438d21:	mov    rsi,QWORD PTR [r9+rax*8]
  438d25:	test   rsi,rsi
  438d28:	je     0x438dd0
  438d2e:	cmp    rsi,0x1
  438d32:	mov    r14d,r8d
  438d35:	mov    r12,rdx
  438d38:	je     0x438d60
  438d3a:	mov    rcx,rsi
  438d3d:	call   QWORD PTR [rdi+0x8]
  438d40:	test   eax,eax
  438d42:	jne    0x438dd2
  438d48:	mov    r11d,DWORD PTR [rdi+0x68]
  438d4c:	mov    r9,QWORD PTR [rdi+0x18]
  438d50:	mov    rax,r11
  438d53:	shl    rax,0x4
  438d57:	add    rax,r13
  438d5a:	mov    ecx,DWORD PTR [rax+0xc]
  438d5d:	mov    r10d,DWORD PTR [rax]
  438d60:	shl    r11,0x4
  438d64:	sub    r10d,0x2
  438d68:	mov    eax,DWORD PTR [r13+r11*1+0x8]
  438d6d:	lea    r13d,[r14+0x1]
  438d71:	imul   r15,rax
  438d75:	mov    eax,DWORD PTR [rdi+0x3c]
  438d78:	shr    r15,0x20
  438d7c:	sub    r14d,r15d
  438d7f:	shr    r14d,1
  438d82:	add    r15d,r14d
  438d85:	shr    r15d,cl
  438d88:	imul   r15d,r10d
  438d8c:	sub    r13d,r15d
  438d8f:	nop
  438d90:	lea    edx,[rbx+r13*1]
  438d94:	add    eax,0x1
  438d97:	mov    DWORD PTR [rdi+0x3c],eax
  438d9a:	cmp    rbp,rdx
  438d9d:	mov    rbx,rdx
  438da0:	ja     0x438da6
  438da2:	sub    ebx,ebp
  438da4:	mov    edx,ebx
  438da6:	mov    rsi,QWORD PTR [r9+rdx*8]
  438daa:	test   rsi,rsi
  438dad:	je     0x438dd2
  438daf:	cmp    rsi,0x1
  438db3:	je     0x438d90
  438db5:	mov    rdx,r12
  438db8:	mov    rcx,rsi
  438dbb:	call   QWORD PTR [rdi+0x8]
  438dbe:	test   eax,eax
  438dc0:	jne    0x438dd2
  438dc2:	mov    eax,DWORD PTR [rdi+0x3c]
  438dc5:	mov    r9,QWORD PTR [rdi+0x18]
  438dc9:	jmp    0x438d90
  438dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  438dd0:	xor    esi,esi
  438dd2:	mov    rax,rsi
  438dd5:	add    rsp,0x28
  438dd9:	pop    rbx
  438dda:	pop    rsi
  438ddb:	pop    rdi
  438ddc:	pop    rbp
  438ddd:	pop    r12
  438ddf:	pop    r13
  438de1:	pop    r14
  438de3:	pop    r15
  438de5:	ret    
  438de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438df0:	push   rsi
  438df1:	push   rbx
  438df2:	sub    rsp,0x28
  438df6:	mov    rbx,rcx
  438df9:	mov    rsi,rdx
  438dfc:	mov    rcx,rdx
  438dff:	call   QWORD PTR [rbx]
  438e01:	mov    rdx,rsi
  438e04:	mov    r8d,eax
  438e07:	mov    rcx,rbx
  438e0a:	add    rsp,0x28
  438e0e:	pop    rbx
  438e0f:	pop    rsi
  438e10:	jmp    0x438cc0
  438e15:	nop
  438e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438e20:	push   r15
  438e22:	push   r14
  438e24:	push   r13
  438e26:	push   r12
  438e28:	push   rbp
  438e29:	push   rdi
  438e2a:	push   rsi
  438e2b:	push   rbx
  438e2c:	sub    rsp,0x38
  438e30:	mov    rbx,QWORD PTR [rcx+0x20]
  438e34:	cmp    r9d,0x1
  438e38:	mov    r14,rcx
  438e3b:	mov    rbp,rdx
  438e3e:	mov    r13d,r8d
  438e41:	mov    r12d,r9d
  438e44:	je     0x438fc0
  438e4a:	mov    r11d,DWORD PTR [r14+0x68]
  438e4e:	lea    r9,[rip+0x206eb]        # 0x459540
  438e55:	mov    r10d,r13d
  438e58:	mov    edx,r13d
  438e5b:	mov    r15d,r13d
  438e5e:	add    DWORD PTR [r14+0x38],0x1
  438e63:	mov    rax,r11
  438e66:	shl    rax,0x4
  438e6a:	add    rax,r9
  438e6d:	mov    ecx,DWORD PTR [rax+0xc]
  438e70:	mov    r8d,DWORD PTR [rax]
  438e73:	mov    eax,DWORD PTR [rax+0x4]
  438e76:	imul   rax,r10
  438e7a:	shr    rax,0x20
  438e7e:	sub    edx,eax
  438e80:	shr    edx,1
  438e82:	add    eax,edx
  438e84:	mov    rdx,QWORD PTR [r14+0x18]
  438e88:	shr    eax,cl
  438e8a:	imul   eax,r8d
  438e8e:	sub    r15d,eax
  438e91:	mov    edi,r15d
  438e94:	shl    rdi,0x3
  438e98:	lea    rsi,[rdx+rdi*1]
  438e9c:	mov    rax,QWORD PTR [rsi]
  438e9f:	test   rax,rax
  438ea2:	je     0x439000
  438ea8:	cmp    rax,0x1
  438eac:	je     0x438eee
  438eae:	mov    QWORD PTR [rsp+0x28],r9
  438eb3:	mov    QWORD PTR [rsp+0x20],r10
  438eb8:	mov    rdx,rbp
  438ebb:	mov    rcx,rax
  438ebe:	call   QWORD PTR [r14+0x8]
  438ec2:	test   eax,eax
  438ec4:	jne    0x438f80
  438eca:	mov    r11d,DWORD PTR [r14+0x68]
  438ece:	mov    r9,QWORD PTR [rsp+0x28]
  438ed3:	xor    esi,esi
  438ed5:	mov    rdx,QWORD PTR [r14+0x18]
  438ed9:	mov    r10,QWORD PTR [rsp+0x20]
  438ede:	mov    rax,r11
  438ee1:	shl    rax,0x4
  438ee5:	add    rax,r9
  438ee8:	mov    ecx,DWORD PTR [rax+0xc]
  438eeb:	mov    r8d,DWORD PTR [rax]
  438eee:	shl    r11,0x4
  438ef2:	lea    edi,[r13+0x1]
  438ef6:	sub    r8d,0x2
  438efa:	mov    eax,DWORD PTR [r9+r11*1+0x8]
  438eff:	imul   r10,rax
  438f03:	shr    r10,0x20
  438f07:	sub    r13d,r10d
  438f0a:	shr    r13d,1
  438f0d:	add    r13d,r10d
  438f10:	shr    r13d,cl
  438f13:	imul   r13d,r8d
  438f17:	mov    r8d,DWORD PTR [r14+0x3c]
  438f1b:	sub    edi,r13d
  438f1e:	xchg   ax,ax
  438f20:	lea    r10d,[r15+rdi*1]
  438f24:	add    r8d,0x1
  438f28:	mov    DWORD PTR [r14+0x3c],r8d
  438f2c:	cmp    rbx,r10
  438f2f:	mov    r15,r10
  438f32:	ja     0x438f3a
  438f34:	sub    r15d,ebx
  438f37:	mov    r10d,r15d
  438f3a:	lea    r13,[r10*8+0x0]
  438f42:	lea    rax,[rdx+r13*1]
  438f46:	mov    rcx,QWORD PTR [rax]
  438f49:	test   rcx,rcx
  438f4c:	je     0x438fa0
  438f4e:	cmp    rcx,0x1
  438f52:	je     0x438f70
  438f54:	mov    rdx,rbp
  438f57:	call   QWORD PTR [r14+0x8]
  438f5b:	test   eax,eax
  438f5d:	jne    0x438ff0
  438f63:	mov    r8d,DWORD PTR [r14+0x3c]
  438f67:	mov    rdx,QWORD PTR [r14+0x18]
  438f6b:	jmp    0x438f20
  438f6d:	nop    DWORD PTR [rax]
  438f70:	test   rsi,rsi
  438f73:	cmove  rsi,rax
  438f77:	jmp    0x438f20
  438f79:	nop    DWORD PTR [rax+0x0]
  438f80:	mov    rax,rdi
  438f83:	add    rax,QWORD PTR [r14+0x18]
  438f87:	add    rsp,0x38
  438f8b:	pop    rbx
  438f8c:	pop    rsi
  438f8d:	pop    rdi
  438f8e:	pop    rbp
  438f8f:	pop    r12
  438f91:	pop    r13
  438f93:	pop    r14
  438f95:	pop    r15
  438f97:	ret    
  438f98:	nop    DWORD PTR [rax+rax*1+0x0]
  438fa0:	test   r12d,r12d
  438fa3:	je     0x439017
  438fa5:	test   rsi,rsi
  438fa8:	je     0x439012
  438faa:	sub    QWORD PTR [r14+0x30],0x1
  438faf:	mov    rax,rsi
  438fb2:	mov    QWORD PTR [rsi],0x0
  438fb9:	jmp    0x438f87
  438fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  438fc0:	mov    rax,QWORD PTR [rcx+0x28]
  438fc4:	lea    rdx,[rbx+rbx*2]
  438fc8:	shl    rax,0x2
  438fcc:	cmp    rdx,rax
  438fcf:	ja     0x438e4a
  438fd5:	call   0x4386a0
  438fda:	test   eax,eax
  438fdc:	je     0x439017
  438fde:	mov    rbx,QWORD PTR [r14+0x20]
  438fe2:	jmp    0x438e4a
  438fe7:	nop    WORD PTR [rax+rax*1+0x0]
  438ff0:	mov    rax,r13
  438ff3:	add    rax,QWORD PTR [r14+0x18]
  438ff7:	jmp    0x438f87
  438ff9:	nop    DWORD PTR [rax+0x0]
  439000:	test   r12d,r12d
  439003:	je     0x439017
  439005:	add    QWORD PTR [r14+0x28],0x1
  43900a:	mov    rax,rsi
  43900d:	jmp    0x438f87
  439012:	mov    rsi,rax
  439015:	jmp    0x439005
  439017:	xor    eax,eax
  439019:	jmp    0x438f87
  43901e:	xchg   ax,ax
  439020:	push   rdi
  439021:	push   rsi
  439022:	push   rbx
  439023:	sub    rsp,0x20
  439027:	mov    rbx,rcx
  43902a:	mov    edi,r8d
  43902d:	mov    rsi,rdx
  439030:	mov    rcx,rdx
  439033:	call   QWORD PTR [rbx]
  439035:	mov    r9d,edi
  439038:	mov    r8d,eax
  43903b:	mov    rdx,rsi
  43903e:	mov    rcx,rbx
  439041:	add    rsp,0x20
  439045:	pop    rbx
  439046:	pop    rsi
  439047:	pop    rdi
  439048:	jmp    0x438e20
  43904d:	nop    DWORD PTR [rax]
  439050:	push   rsi
  439051:	push   rbx
  439052:	sub    rsp,0x28
  439056:	xor    r9d,r9d
  439059:	mov    rbx,rcx
  43905c:	call   0x438e20
  439061:	mov    rcx,QWORD PTR [rax]
  439064:	mov    rsi,rax
  439067:	test   rcx,rcx
  43906a:	je     0x439083
  43906c:	mov    rax,QWORD PTR [rbx+0x10]
  439070:	test   rax,rax
  439073:	je     0x439077
  439075:	call   rax
  439077:	mov    QWORD PTR [rsi],0x1
  43907e:	add    QWORD PTR [rbx+0x30],0x1
  439083:	add    rsp,0x28
  439087:	pop    rbx
  439088:	pop    rsi
  439089:	ret    
  43908a:	nop    WORD PTR [rax+rax*1+0x0]
  439090:	push   rsi
  439091:	push   rbx
  439092:	sub    rsp,0x28
  439096:	mov    rbx,rcx
  439099:	mov    rsi,rdx
  43909c:	mov    rcx,rdx
  43909f:	call   QWORD PTR [rbx]
  4390a1:	mov    rdx,rsi
  4390a4:	mov    r8d,eax
  4390a7:	mov    rcx,rbx
  4390aa:	add    rsp,0x28
  4390ae:	pop    rbx
  4390af:	pop    rsi
  4390b0:	jmp    0x439050
  4390b2:	nop    DWORD PTR [rax+0x0]
  4390b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4390c0:	push   rsi
  4390c1:	push   rbx
  4390c2:	sub    rsp,0x28
  4390c6:	mov    rax,QWORD PTR [rcx+0x18]
  4390ca:	mov    rbx,rcx
  4390cd:	mov    rsi,rdx
  4390d0:	cmp    rax,rdx
  4390d3:	ja     0x439109
  4390d5:	mov    rdx,QWORD PTR [rcx+0x20]
  4390d9:	lea    rax,[rax+rdx*8]
  4390dd:	cmp    rsi,rax
  4390e0:	jae    0x439109
  4390e2:	mov    rcx,QWORD PTR [rsi]
  4390e5:	cmp    rcx,0x1
  4390e9:	jbe    0x439109
  4390eb:	mov    rax,QWORD PTR [rbx+0x10]
  4390ef:	test   rax,rax
  4390f2:	je     0x4390f6
  4390f4:	call   rax
  4390f6:	mov    QWORD PTR [rsi],0x1
  4390fd:	add    QWORD PTR [rbx+0x30],0x1
  439102:	add    rsp,0x28
  439106:	pop    rbx
  439107:	pop    rsi
  439108:	ret    
  439109:	call   0x449548
  43910e:	nop
  43910f:	nop
  439110:	push   rbp
  439111:	push   rdi
  439112:	push   rsi
  439113:	push   rbx
  439114:	sub    rsp,0x28
  439118:	mov    rbx,QWORD PTR [rcx+0x18]
  43911c:	mov    rax,QWORD PTR [rcx+0x20]
  439120:	mov    rbp,rdx
  439123:	mov    rdi,r8
  439126:	lea    rsi,[rbx+rax*8]
  43912a:	jmp    0x439139
  43912c:	nop    DWORD PTR [rax+0x0]
  439130:	add    rbx,0x8
  439134:	cmp    rsi,rbx
  439137:	jbe    0x43914b
  439139:	cmp    QWORD PTR [rbx],0x1
  43913d:	jbe    0x439130
  43913f:	mov    rdx,rdi
  439142:	mov    rcx,rbx
  439145:	call   rbp
  439147:	test   eax,eax
  439149:	jne    0x439130
  43914b:	add    rsp,0x28
  43914f:	pop    rbx
  439150:	pop    rsi
  439151:	pop    rdi
  439152:	pop    rbp
  439153:	ret    
  439154:	xchg   ax,ax
  439156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439160:	push   rbx
  439161:	sub    rsp,0x30
  439165:	mov    rbx,rcx
  439168:	mov    rcx,QWORD PTR [rcx+0x20]
  43916c:	mov    rax,QWORD PTR [rbx+0x28]
  439170:	sub    rax,QWORD PTR [rbx+0x30]
  439174:	shl    rax,0x3
  439178:	cmp    rcx,rax
  43917b:	jbe    0x43919f
  43917d:	cmp    rcx,0x20
  439181:	jbe    0x43919f
  439183:	mov    rcx,rbx
  439186:	mov    QWORD PTR [rsp+0x28],r8
  43918b:	mov    QWORD PTR [rsp+0x20],rdx
  439190:	call   0x4386a0
  439195:	mov    r8,QWORD PTR [rsp+0x28]
  43919a:	mov    rdx,QWORD PTR [rsp+0x20]
  43919f:	mov    rcx,rbx
  4391a2:	add    rsp,0x30
  4391a6:	pop    rbx
  4391a7:	jmp    0x439110
  4391ac:	nop    DWORD PTR [rax+0x0]
  4391b0:	mov    eax,DWORD PTR [rcx+0x38]
  4391b3:	test   eax,eax
  4391b5:	je     0x4391d1
  4391b7:	mov    edx,DWORD PTR [rcx+0x3c]
  4391ba:	pxor   xmm0,xmm0
  4391be:	pxor   xmm1,xmm1
  4391c2:	cvtsi2sd xmm0,rdx
  4391c7:	cvtsi2sd xmm1,rax
  4391cc:	divsd  xmm0,xmm1
  4391d0:	ret    
  4391d1:	pxor   xmm0,xmm0
  4391d5:	ret    
  4391d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4391e0:	movzx  edx,BYTE PTR [rcx]
  4391e3:	xor    eax,eax
  4391e5:	lea    r8,[rcx+0x1]
  4391e9:	test   dl,dl
  4391eb:	je     0x439206
  4391ed:	nop    DWORD PTR [rax]
  4391f0:	imul   eax,eax,0x43
  4391f3:	add    r8,0x1
  4391f7:	lea    eax,[rax+rdx*1-0x71]
  4391fb:	movzx  edx,BYTE PTR [r8-0x1]
  439200:	test   dl,dl
  439202:	jne    0x4391f0
  439204:	repz ret 
  439206:	repz ret 
  439208:	nop    DWORD PTR [rax+rax*1+0x0]
  439210:	push   rbx
  439211:	test   cl,0x3
  439214:	je     0x439453
  43921a:	mov    eax,0x9e3779b9
  43921f:	cmp    edx,0xb
  439222:	mov    r9d,edx
  439225:	mov    r10d,eax
  439228:	jbe    0x439358
  43922e:	xchg   ax,ax
  439230:	movzx  r11d,BYTE PTR [rcx+0x5]
  439235:	mov    ebx,r11d
  439238:	movzx  r11d,BYTE PTR [rcx+0x6]
  43923d:	shl    ebx,0x8
  439240:	shl    r11d,0x10
  439244:	add    r11d,ebx
  439247:	movzx  ebx,BYTE PTR [rcx+0x4]
  43924b:	add    ebx,r11d
  43924e:	movzx  r11d,BYTE PTR [rcx+0x7]
  439253:	shl    r11d,0x18
  439257:	add    r11d,ebx
  43925a:	add    eax,r11d
  43925d:	movzx  r11d,BYTE PTR [rcx+0x9]
  439262:	mov    ebx,r11d
  439265:	movzx  r11d,BYTE PTR [rcx+0xa]
  43926a:	shl    ebx,0x8
  43926d:	shl    r11d,0x10
  439271:	add    r11d,ebx
  439274:	movzx  ebx,BYTE PTR [rcx+0x8]
  439278:	add    ebx,r11d
  43927b:	movzx  r11d,BYTE PTR [rcx+0xb]
  439280:	shl    r11d,0x18
  439284:	add    r11d,ebx
  439287:	add    r8d,r11d
  43928a:	movzx  r11d,BYTE PTR [rcx+0x1]
  43928f:	mov    ebx,r11d
  439292:	movzx  r11d,BYTE PTR [rcx+0x2]
  439297:	shl    ebx,0x8
  43929a:	shl    r11d,0x10
  43929e:	add    r11d,ebx
  4392a1:	movzx  ebx,BYTE PTR [rcx]
  4392a4:	add    ebx,r11d
  4392a7:	movzx  r11d,BYTE PTR [rcx+0x3]
  4392ac:	shl    r11d,0x18
  4392b0:	add    r11d,ebx
  4392b3:	sub    r11d,eax
  4392b6:	sub    eax,r8d
  4392b9:	sub    r11d,r8d
  4392bc:	add    r10d,r11d
  4392bf:	mov    r11d,r8d
  4392c2:	shr    r11d,0xd
  4392c6:	xor    r10d,r11d
  4392c9:	mov    r11d,r10d
  4392cc:	sub    eax,r10d
  4392cf:	sub    r8d,r10d
  4392d2:	shl    r11d,0x8
  4392d6:	xor    eax,r11d
  4392d9:	mov    r11d,eax
  4392dc:	sub    r8d,eax
  4392df:	shr    r11d,0xd
  4392e3:	xor    r8d,r11d
  4392e6:	sub    r10d,eax
  4392e9:	sub    r9d,0xc
  4392ed:	mov    r11d,r8d
  4392f0:	sub    r10d,r8d
  4392f3:	sub    eax,r8d
  4392f6:	shr    r11d,0xc
  4392fa:	add    rcx,0xc
  4392fe:	xor    r10d,r11d
  439301:	mov    r11d,r10d
  439304:	sub    eax,r10d
  439307:	sub    r8d,r10d
  43930a:	shl    r11d,0x10
  43930e:	xor    eax,r11d
  439311:	mov    r11d,eax
  439314:	sub    r8d,eax
  439317:	sub    r10d,eax
  43931a:	shr    r11d,0x5
  43931e:	xor    r8d,r11d
  439321:	mov    r11d,r8d
  439324:	sub    r10d,r8d
  439327:	sub    eax,r8d
  43932a:	shr    r11d,0x3
  43932e:	xor    r10d,r11d
  439331:	mov    r11d,r10d
  439334:	sub    eax,r10d
  439337:	sub    r8d,r10d
  43933a:	shl    r11d,0xa
  43933e:	xor    eax,r11d
  439341:	mov    r11d,eax
  439344:	sub    r8d,eax
  439347:	shr    r11d,0xf
  43934b:	xor    r8d,r11d
  43934e:	cmp    r9d,0xb
  439352:	ja     0x439230
  439358:	add    r8d,edx
  43935b:	cmp    r9d,0xb
  43935f:	ja     0x4393d4
  439361:	lea    rdx,[rip+0x2017c]        # 0x4594e4
  439368:	movsxd r9,DWORD PTR [rdx+r9*4]
  43936c:	add    rdx,r9
  43936f:	jmp    rdx
  439371:	movzx  edx,BYTE PTR [rcx+0xa]
  439375:	shl    edx,0x18
  439378:	add    r8d,edx
  43937b:	movzx  edx,BYTE PTR [rcx+0x9]
  43937f:	shl    edx,0x10
  439382:	add    r8d,edx
  439385:	movzx  edx,BYTE PTR [rcx+0x8]
  439389:	shl    edx,0x8
  43938c:	add    r8d,edx
  43938f:	movzx  edx,BYTE PTR [rcx+0x7]
  439393:	shl    edx,0x18
  439396:	add    eax,edx
  439398:	movzx  edx,BYTE PTR [rcx+0x6]
  43939c:	shl    edx,0x10
  43939f:	add    eax,edx
  4393a1:	movzx  edx,BYTE PTR [rcx+0x5]
  4393a5:	shl    edx,0x8
  4393a8:	add    eax,edx
  4393aa:	movzx  edx,BYTE PTR [rcx+0x4]
  4393ae:	add    eax,edx
  4393b0:	movzx  edx,BYTE PTR [rcx+0x3]
  4393b4:	shl    edx,0x18
  4393b7:	add    r10d,edx
  4393ba:	movzx  edx,BYTE PTR [rcx+0x2]
  4393be:	shl    edx,0x10
  4393c1:	add    r10d,edx
  4393c4:	movzx  edx,BYTE PTR [rcx+0x1]
  4393c8:	shl    edx,0x8
  4393cb:	add    r10d,edx
  4393ce:	movzx  edx,BYTE PTR [rcx]
  4393d1:	add    r10d,edx
  4393d4:	sub    r10d,eax
  4393d7:	mov    edx,r8d
  4393da:	sub    eax,r8d
  4393dd:	sub    r10d,r8d
  4393e0:	shr    edx,0xd
  4393e3:	xor    r10d,edx
  4393e6:	mov    ecx,r10d
  4393e9:	sub    eax,r10d
  4393ec:	sub    r8d,r10d
  4393ef:	shl    ecx,0x8
  4393f2:	xor    eax,ecx
  4393f4:	mov    edx,eax
  4393f6:	sub    r8d,eax
  4393f9:	sub    r10d,eax
  4393fc:	shr    edx,0xd
  4393ff:	xor    r8d,edx
  439402:	mov    edx,r8d
  439405:	sub    r10d,r8d
  439408:	sub    eax,r8d
  43940b:	shr    edx,0xc
  43940e:	xor    r10d,edx
  439411:	mov    ecx,r10d
  439414:	sub    eax,r10d
  439417:	sub    r8d,r10d
  43941a:	shl    ecx,0x10
  43941d:	xor    ecx,eax
  43941f:	mov    edx,ecx
  439421:	sub    r8d,ecx
  439424:	sub    r10d,ecx
  439427:	shr    edx,0x5
  43942a:	xor    edx,r8d
  43942d:	mov    eax,edx
  43942f:	sub    r10d,edx
  439432:	sub    ecx,edx
  439434:	shr    eax,0x3
  439437:	xor    r10d,eax
  43943a:	mov    eax,r10d
  43943d:	sub    ecx,r10d
  439440:	sub    edx,r10d
  439443:	shl    eax,0xa
  439446:	xor    ecx,eax
  439448:	sub    edx,ecx
  43944a:	shr    ecx,0xf
  43944d:	mov    eax,ecx
  43944f:	xor    eax,edx
  439451:	pop    rbx
  439452:	ret    
  439453:	cmp    edx,0xb
  439456:	jbe    0x439522
  43945c:	mov    eax,0x9e3779b9
  439461:	mov    r9d,edx
  439464:	mov    r10d,eax
  439467:	nop    WORD PTR [rax+rax*1+0x0]
  439470:	add    r8d,DWORD PTR [rcx+0x8]
  439474:	add    eax,DWORD PTR [rcx+0x4]
  439477:	lea    r11d,[rax+r8*1]
  43947b:	sub    eax,r8d
  43947e:	sub    r10d,r11d
  439481:	add    r10d,DWORD PTR [rcx]
  439484:	mov    r11d,r8d
  439487:	shr    r11d,0xd
  43948b:	xor    r10d,r11d
  43948e:	mov    r11d,r10d
  439491:	sub    eax,r10d
  439494:	sub    r8d,r10d
  439497:	shl    r11d,0x8
  43949b:	xor    eax,r11d
  43949e:	mov    r11d,eax
  4394a1:	sub    r8d,eax
  4394a4:	sub    r10d,eax
  4394a7:	shr    r11d,0xd
  4394ab:	xor    r8d,r11d
  4394ae:	mov    r11d,r8d
  4394b1:	sub    r10d,r8d
  4394b4:	sub    eax,r8d
  4394b7:	shr    r11d,0xc
  4394bb:	xor    r10d,r11d
  4394be:	mov    r11d,r10d
  4394c1:	sub    eax,r10d
  4394c4:	sub    r8d,r10d
  4394c7:	shl    r11d,0x10
  4394cb:	xor    eax,r11d
  4394ce:	mov    r11d,eax
  4394d1:	sub    r8d,eax
  4394d4:	sub    r10d,eax
  4394d7:	shr    r11d,0x5
  4394db:	xor    r8d,r11d
  4394de:	mov    r11d,r8d
  4394e1:	sub    r10d,r8d
  4394e4:	sub    eax,r8d
  4394e7:	shr    r11d,0x3
  4394eb:	xor    r10d,r11d
  4394ee:	mov    r11d,r10d
  4394f1:	sub    eax,r10d
  4394f4:	shl    r11d,0xa
  4394f8:	xor    eax,r11d
  4394fb:	sub    r8d,r10d
  4394fe:	sub    r9d,0xc
  439502:	mov    r11d,eax
  439505:	sub    r8d,eax
  439508:	add    rcx,0xc
  43950c:	shr    r11d,0xf
  439510:	xor    r8d,r11d
  439513:	cmp    r9d,0xb
  439517:	ja     0x439470
  43951d:	jmp    0x439358
  439522:	mov    eax,0x9e3779b9
  439527:	mov    r9d,edx
  43952a:	mov    r10d,eax
  43952d:	jmp    0x439358
  439532:	nop
  439533:	nop
  439534:	nop
  439535:	nop
  439536:	nop
  439537:	nop
  439538:	nop
  439539:	nop
  43953a:	nop
  43953b:	nop
  43953c:	nop
  43953d:	nop
  43953e:	nop
  43953f:	nop
  439540:	ret    
  439541:	nop
  439542:	nop
  439543:	nop
  439544:	nop
  439545:	nop
  439546:	nop
  439547:	nop
  439548:	nop
  439549:	nop
  43954a:	nop
  43954b:	nop
  43954c:	nop
  43954d:	nop
  43954e:	nop
  43954f:	nop
  439550:	movzx  r8d,BYTE PTR [rcx]
  439554:	mov    rax,rcx
  439557:	test   r8b,r8b
  43955a:	je     0x439575
  43955c:	lea    rdx,[rcx+0x1]
  439560:	cmp    r8b,0x2f
  439564:	movzx  r8d,BYTE PTR [rdx]
  439568:	cmove  rax,rdx
  43956c:	add    rdx,0x1
  439570:	test   r8b,r8b
  439573:	jne    0x439560
  439575:	repz ret 
  439577:	nop    WORD PTR [rax+rax*1+0x0]
  439580:	movzx  r8d,BYTE PTR [rcx]
  439584:	mov    rax,rcx
  439587:	mov    rcx,QWORD PTR [rip+0x218a2]        # 0x45ae30
  43958e:	test   BYTE PTR [rcx+r8*2],0x88
  439593:	mov    rdx,r8
  439596:	je     0x43959e
  439598:	cmp    BYTE PTR [rax+0x1],0x3a
  43959c:	je     0x4395e0
  43959e:	test   dl,dl
  4395a0:	je     0x4395d5
  4395a2:	lea    r8,[rax+0x1]
  4395a6:	jmp    0x4395c1
  4395a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4395b0:	cmp    dl,0x2f
  4395b3:	je     0x4395c6
  4395b5:	movzx  edx,BYTE PTR [r8]
  4395b9:	add    r8,0x1
  4395bd:	test   dl,dl
  4395bf:	je     0x4395d5
  4395c1:	cmp    dl,0x5c
  4395c4:	jne    0x4395b0
  4395c6:	movzx  edx,BYTE PTR [r8]
  4395ca:	mov    rax,r8
  4395cd:	add    r8,0x1
  4395d1:	test   dl,dl
  4395d3:	jne    0x4395c1
  4395d5:	repz ret 
  4395d7:	nop    WORD PTR [rax+rax*1+0x0]
  4395e0:	movzx  edx,BYTE PTR [rax+0x2]
  4395e4:	add    rax,0x2
  4395e8:	jmp    0x43959e
  4395ea:	nop    WORD PTR [rax+rax*1+0x0]
  4395f0:	jmp    0x439580
  4395f2:	nop
  4395f3:	nop
  4395f4:	nop
  4395f5:	nop
  4395f6:	nop
  4395f7:	nop
  4395f8:	nop
  4395f9:	nop
  4395fa:	nop
  4395fb:	nop
  4395fc:	nop
  4395fd:	nop
  4395fe:	nop
  4395ff:	nop
  439600:	push   rsi
  439601:	push   rbx
  439602:	sub    rsp,0x148
  439609:	mov    edx,0x104
  43960e:	lea    rbx,[rsp+0x30]
  439613:	mov    rsi,rcx
  439616:	lea    r9,[rsp+0x28]
  43961b:	mov    r8,rbx
  43961e:	call   QWORD PTR [rip+0x2aff8]        # 0x46461c
  439624:	lea    edx,[rax-0x1]
  439627:	cmp    edx,0x102
  43962d:	ja     0x439650
  43962f:	mov    edx,eax
  439631:	mov    rcx,rbx
  439634:	call   QWORD PTR [rip+0x2b44a]        # 0x464a84
  43963a:	mov    rcx,rbx
  43963d:	call   0x449338
  439642:	add    rsp,0x148
  439649:	pop    rbx
  43964a:	pop    rsi
  43964b:	ret    
  43964c:	nop    DWORD PTR [rax+0x0]
  439650:	mov    rcx,rsi
  439653:	add    rsp,0x148
  43965a:	pop    rbx
  43965b:	pop    rsi
  43965c:	jmp    0x449338
  439661:	nop
  439662:	nop
  439663:	nop
  439664:	nop
  439665:	nop
  439666:	nop
  439667:	nop
  439668:	nop
  439669:	nop
  43966a:	nop
  43966b:	nop
  43966c:	nop
  43966d:	nop
  43966e:	nop
  43966f:	nop
  439670:	push   rsi
  439671:	push   rbx
  439672:	sub    rsp,0x28
  439676:	mov    rax,QWORD PTR [rip+0x29063]        # 0x4626e0
  43967d:	test   rax,rax
  439680:	je     0x439690
  439682:	add    rsp,0x28
  439686:	pop    rbx
  439687:	pop    rsi
  439688:	ret    
  439689:	nop    DWORD PTR [rax+0x0]
  439690:	xor    edx,edx
  439692:	xor    ecx,ecx
  439694:	mov    rsi,QWORD PTR [rip+0x2afb1]        # 0x46464c
  43969b:	call   rsi
  43969d:	test   eax,eax
  43969f:	mov    ebx,eax
  4396a1:	jne    0x4396c5
  4396a3:	mov    rax,QWORD PTR [rip+0x29036]        # 0x4626e0
  4396aa:	test   rax,rax
  4396ad:	jne    0x439682
  4396af:	nop
  4396b0:	lea    rcx,[rip+0x20189]        # 0x459840
  4396b7:	call   0x43bbf0
  4396bc:	mov    QWORD PTR [rip+0x2901d],rax        # 0x4626e0
  4396c3:	jmp    0x439682
  4396c5:	mov    ecx,eax
  4396c7:	call   0x43baf0
  4396cc:	mov    ecx,ebx
  4396ce:	mov    QWORD PTR [rip+0x2900b],rax        # 0x4626e0
  4396d5:	mov    rdx,rax
  4396d8:	call   rsi
  4396da:	test   eax,eax
  4396dc:	jne    0x4396a3
  4396de:	mov    rcx,QWORD PTR [rip+0x28ffb]        # 0x4626e0
  4396e5:	call   0x4494c8
  4396ea:	mov    QWORD PTR [rip+0x28feb],0x0        # 0x4626e0
  4396f5:	jmp    0x4396b0
  4396f7:	nop    WORD PTR [rax+rax*1+0x0]
  439700:	push   r12
  439702:	push   rbp
  439703:	push   rdi
  439704:	push   rsi
  439705:	push   rbx
  439706:	sub    rsp,0x20
  43970a:	mov    rdi,rcx
  43970d:	call   0x439670
  439712:	test   rdi,rdi
  439715:	mov    rbp,rax
  439718:	je     0x4397a0
  43971e:	mov    rcx,rdi
  439721:	call   0x4493c0
  439726:	mov    r12d,eax
  439729:	movsxd rsi,eax
  43972c:	mov    rcx,rbp
  43972f:	call   0x4493c0
  439734:	movsxd rbx,eax
  439737:	lea    rcx,[rbx+rsi*1+0x9]
  43973c:	call   0x43baf0
  439741:	mov    rdx,rbp
  439744:	mov    rsi,rax
  439747:	mov    rcx,rax
  43974a:	call   0x4493d8
  43974f:	lea    rax,[rsi+rbx*1]
  439753:	movabs rdx,0x5858585858586363
  43975d:	lea    rcx,[rsi+rbx*1+0x8]
  439762:	mov    QWORD PTR [rax],rdx
  439765:	mov    BYTE PTR [rax+0x8],0x0
  439769:	mov    rdx,rdi
  43976c:	call   0x4493d8
  439771:	mov    edx,r12d
  439774:	mov    rcx,rsi
  439777:	call   0x43bc70
  43977c:	cmp    eax,0xffffffff
  43977f:	je     0x4397b1
  439781:	mov    ecx,eax
  439783:	call   0x4492f0
  439788:	test   eax,eax
  43978a:	jne    0x4397e2
  43978c:	mov    rax,rsi
  43978f:	add    rsp,0x20
  439793:	pop    rbx
  439794:	pop    rsi
  439795:	pop    rdi
  439796:	pop    rbp
  439797:	pop    r12
  439799:	ret    
  43979a:	nop    WORD PTR [rax+rax*1+0x0]
  4397a0:	xor    esi,esi
  4397a2:	xor    r12d,r12d
  4397a5:	lea    rdi,[rip+0x20097]        # 0x459843
  4397ac:	jmp    0x43972c
  4397b1:	call   QWORD PTR [rip+0x2afcd]        # 0x464784
  4397b7:	mov    ecx,DWORD PTR [rax]
  4397b9:	call   0x4493c8
  4397be:	mov    rbx,rax
  4397c1:	call   QWORD PTR [rip+0x2af6d]        # 0x464734
  4397c7:	lea    rdx,[rip+0x2007a]        # 0x459848
  4397ce:	lea    rcx,[rax+0x60]
  4397d2:	mov    r9,rbx
  4397d5:	mov    r8,rbp
  4397d8:	call   0x4494e8
  4397dd:	call   0x449548
  4397e2:	call   0x449548
  4397e7:	nop
  4397e8:	nop
  4397e9:	nop
  4397ea:	nop
  4397eb:	nop
  4397ec:	nop
  4397ed:	nop
  4397ee:	nop
  4397ef:	nop
  4397f0:	sub    rsp,0x28
  4397f4:	call   QWORD PTR [rip+0x2af3a]        # 0x464734
  4397fa:	lea    rcx,[rip+0x2006f]        # 0x459870
  439801:	lea    r9,[rax+0x60]
  439805:	mov    r8d,0x11
  43980b:	mov    edx,0x1
  439810:	call   0x4494a8
  439815:	mov    ecx,DWORD PTR [rip+0x11965]        # 0x44b180
  43981b:	call   0x449520
  439820:	nop
  439821:	nop    DWORD PTR [rax+rax*1+0x0]
  439826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439830:	push   rbx
  439831:	sub    rsp,0x30
  439835:	lea    eax,[r8-0x1]
  439839:	mov    rbx,rcx
  43983c:	test   r8d,r8d
  43983f:	mov    ecx,0x7
  439844:	mov    QWORD PTR [rbx+0x38],r9
  439848:	cmove  eax,ecx
  43984b:	test   edx,edx
  43984d:	mov    cx,0xfe8
  439851:	cmove  edx,ecx
  439854:	mov    rcx,QWORD PTR [rsp+0x60]
  439859:	and    BYTE PTR [rbx+0x50],0xfe
  43985d:	mov    DWORD PTR [rbx],edx
  43985f:	mov    DWORD PTR [rbx+0x30],eax
  439862:	mov    QWORD PTR [rbx+0x40],rcx
  439866:	mov    ecx,edx
  439868:	call   r9
  43986b:	test   rax,rax
  43986e:	mov    QWORD PTR [rbx+0x8],rax
  439872:	je     0x4398a4
  439874:	lea    rdx,[rax+0x10]
  439878:	mov    QWORD PTR [rbx+0x10],rdx
  43987c:	mov    QWORD PTR [rbx+0x18],rdx
  439880:	movsxd rdx,DWORD PTR [rbx]
  439883:	add    rdx,rax
  439886:	mov    QWORD PTR [rax],rdx
  439889:	mov    QWORD PTR [rbx+0x20],rdx
  43988d:	mov    QWORD PTR [rax+0x8],0x0
  439895:	and    BYTE PTR [rbx+0x50],0xf9
  439899:	mov    eax,0x1
  43989e:	add    rsp,0x30
  4398a2:	pop    rbx
  4398a3:	ret    
  4398a4:	mov    QWORD PTR [rsp+0x28],rax
  4398a9:	call   QWORD PTR [rip+0x118d9]        # 0x44b188
  4398af:	mov    rax,QWORD PTR [rsp+0x28]
  4398b4:	jmp    0x439874
  4398b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4398c0:	push   rbx
  4398c1:	sub    rsp,0x30
  4398c5:	lea    eax,[r8-0x1]
  4398c9:	test   r8d,r8d
  4398cc:	mov    r8d,0x7
  4398d2:	mov    rbx,rcx
  4398d5:	mov    rcx,QWORD PTR [rsp+0x68]
  4398da:	cmove  eax,r8d
  4398de:	test   edx,edx
  4398e0:	mov    r8w,0xfe8
  4398e5:	cmove  edx,r8d
  4398e9:	mov    r8,QWORD PTR [rsp+0x60]
  4398ee:	or     BYTE PTR [rbx+0x50],0x1
  4398f2:	mov    QWORD PTR [rbx+0x38],r9
  4398f6:	mov    DWORD PTR [rbx],edx
  4398f8:	mov    DWORD PTR [rbx+0x30],eax
  4398fb:	mov    QWORD PTR [rbx+0x48],rcx
  4398ff:	mov    QWORD PTR [rbx+0x40],r8
  439903:	call   r9
  439906:	test   rax,rax
  439909:	mov    QWORD PTR [rbx+0x8],rax
  43990d:	je     0x439940
  43990f:	lea    rdx,[rax+0x10]
  439913:	mov    QWORD PTR [rbx+0x10],rdx
  439917:	mov    QWORD PTR [rbx+0x18],rdx
  43991b:	movsxd rdx,DWORD PTR [rbx]
  43991e:	add    rdx,rax
  439921:	mov    QWORD PTR [rax],rdx
  439924:	mov    QWORD PTR [rbx+0x20],rdx
  439928:	mov    QWORD PTR [rax+0x8],0x0
  439930:	and    BYTE PTR [rbx+0x50],0xf9
  439934:	mov    eax,0x1
  439939:	add    rsp,0x30
  43993d:	pop    rbx
  43993e:	ret    
  43993f:	nop
  439940:	mov    QWORD PTR [rsp+0x28],rax
  439945:	call   QWORD PTR [rip+0x1183d]        # 0x44b188
  43994b:	mov    rax,QWORD PTR [rsp+0x28]
  439950:	jmp    0x43990f
  439952:	nop    DWORD PTR [rax+0x0]
  439956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439960:	push   r12
  439962:	push   rbp
  439963:	push   rdi
  439964:	push   rsi
  439965:	push   rbx
  439966:	sub    rsp,0x30
  43996a:	mov    rsi,QWORD PTR [rcx+0x18]
  43996e:	sub    rsi,QWORD PTR [rcx+0x10]
  439972:	mov    edi,DWORD PTR [rcx]
  439974:	mov    rbx,rcx
  439977:	mov    rbp,QWORD PTR [rcx+0x8]
  43997b:	mov    eax,esi
  43997d:	add    edx,esi
  43997f:	sar    eax,0x3
  439982:	lea    eax,[rdx+rax*1+0x64]
  439986:	cmp    eax,edi
  439988:	cmovge edi,eax
  43998b:	test   BYTE PTR [rcx+0x50],0x1
  43998f:	je     0x439a73
  439995:	mov    rcx,QWORD PTR [rcx+0x48]
  439999:	mov    edx,edi
  43999b:	call   QWORD PTR [rbx+0x38]
  43999e:	test   rax,rax
  4399a1:	je     0x439aa1
  4399a7:	movsxd rdi,edi
  4399aa:	mov    QWORD PTR [rbx+0x8],rax
  4399ae:	mov    QWORD PTR [rax+0x8],rbp
  4399b2:	add    rdi,rax
  4399b5:	cmp    DWORD PTR [rbx+0x30],0x6
  4399b9:	mov    QWORD PTR [rbx+0x20],rdi
  4399bd:	mov    QWORD PTR [rax],rdi
  4399c0:	movsxd rdi,esi
  4399c3:	jg     0x439a24
  4399c5:	lea    r12,[rax+0x10]
  4399c9:	xor    r8d,r8d
  4399cc:	movsxd rdx,r8d
  4399cf:	cmp    r8d,esi
  4399d2:	mov    r9,rdx
  4399d5:	jge    0x439a00
  4399d7:	mov    rcx,QWORD PTR [rbx+0x10]
  4399db:	add    r8d,0x1
  4399df:	movzx  ecx,BYTE PTR [rcx+r9*1]
  4399e4:	add    r9,0x1
  4399e8:	cmp    r8d,esi
  4399eb:	mov    BYTE PTR [rax+rdx*1+0x10],cl
  4399ef:	je     0x439a00
  4399f1:	movsxd rdx,r8d
  4399f4:	jmp    0x4399d7
  4399f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439a00:	lea    rdx,[rbp+0x10]
  439a04:	cmp    QWORD PTR [rbx+0x10],rdx
  439a08:	je     0x439a80
  439a0a:	and    BYTE PTR [rbx+0x50],0xfd
  439a0e:	add    rdi,r12
  439a11:	mov    QWORD PTR [rbx+0x10],r12
  439a15:	mov    QWORD PTR [rbx+0x18],rdi
  439a19:	add    rsp,0x30
  439a1d:	pop    rbx
  439a1e:	pop    rsi
  439a1f:	pop    rdi
  439a20:	pop    rbp
  439a21:	pop    r12
  439a23:	ret    
  439a24:	mov    r9,rdi
  439a27:	lea    r12,[rax+0x10]
  439a2b:	shr    r9,0x2
  439a2f:	mov    r10d,r9d
  439a32:	sub    r10d,0x1
  439a36:	js     0x439a66
  439a38:	movsxd rcx,r10d
  439a3b:	xor    r8d,r8d
  439a3e:	shl    rcx,0x2
  439a42:	mov    r11,rcx
  439a45:	add    r11,QWORD PTR [rbx+0x10]
  439a49:	add    rcx,r12
  439a4c:	nop    DWORD PTR [rax+0x0]
  439a50:	mov    edx,DWORD PTR [r11+r8*1]
  439a54:	sub    r10d,0x1
  439a58:	mov    DWORD PTR [rcx+r8*1],edx
  439a5c:	sub    r8,0x4
  439a60:	cmp    r10d,0xffffffff
  439a64:	jne    0x439a50
  439a66:	lea    r8d,[r9*4+0x0]
  439a6e:	jmp    0x4399cc
  439a73:	mov    ecx,edi
  439a75:	call   QWORD PTR [rbx+0x38]
  439a78:	jmp    0x43999e
  439a7d:	nop    DWORD PTR [rax]
  439a80:	movzx  edx,BYTE PTR [rbx+0x50]
  439a84:	test   dl,0x2
  439a87:	jne    0x439a0a
  439a89:	mov    rcx,QWORD PTR [rbp+0x8]
  439a8d:	and    edx,0x1
  439a90:	mov    QWORD PTR [rax+0x8],rcx
  439a94:	jne    0x439ac0
  439a96:	mov    rcx,rbp
  439a99:	call   QWORD PTR [rbx+0x40]
  439a9c:	jmp    0x439a0a
  439aa1:	mov    QWORD PTR [rsp+0x28],rax
  439aa6:	call   QWORD PTR [rip+0x116dc]        # 0x44b188
  439aac:	mov    rax,QWORD PTR [rsp+0x28]
  439ab1:	jmp    0x4399a7
  439ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439ac0:	mov    rcx,QWORD PTR [rbx+0x48]
  439ac4:	mov    rdx,rbp
  439ac7:	call   QWORD PTR [rbx+0x40]
  439aca:	jmp    0x439a0a
  439acf:	nop
  439ad0:	mov    rax,QWORD PTR [rcx+0x8]
  439ad4:	test   rax,rax
  439ad7:	je     0x439afb
  439ad9:	nop    DWORD PTR [rax+0x0]
  439ae0:	cmp    rdx,rax
  439ae3:	jbe    0x439aea
  439ae5:	cmp    rdx,QWORD PTR [rax]
  439ae8:	jbe    0x439af5
  439aea:	mov    rax,QWORD PTR [rax+0x8]
  439aee:	test   rax,rax
  439af1:	jne    0x439ae0
  439af3:	repz ret 
  439af5:	mov    eax,0x1
  439afa:	ret    
  439afb:	repz ret 
  439afd:	nop    DWORD PTR [rax]
  439b00:	push   rdi
  439b01:	push   rsi
  439b02:	push   rbx
  439b03:	sub    rsp,0x20
  439b07:	mov    rdi,rdx
  439b0a:	mov    rdx,QWORD PTR [rcx+0x8]
  439b0e:	mov    rbx,rcx
  439b11:	test   rdx,rdx
  439b14:	jne    0x439b33
  439b16:	jmp    0x439b56
  439b18:	nop    DWORD PTR [rax+rax*1+0x0]
  439b20:	mov    rcx,QWORD PTR [rbx+0x48]
  439b24:	call   QWORD PTR [rbx+0x40]
  439b27:	or     BYTE PTR [rbx+0x50],0x2
  439b2b:	test   rsi,rsi
  439b2e:	je     0x439b56
  439b30:	mov    rdx,rsi
  439b33:	cmp    rdi,rdx
  439b36:	jbe    0x439b3d
  439b38:	cmp    rdi,QWORD PTR [rdx]
  439b3b:	jbe    0x439b63
  439b3d:	test   BYTE PTR [rbx+0x50],0x1
  439b41:	mov    rsi,QWORD PTR [rdx+0x8]
  439b45:	jne    0x439b20
  439b47:	mov    rcx,rdx
  439b4a:	call   QWORD PTR [rbx+0x40]
  439b4d:	or     BYTE PTR [rbx+0x50],0x2
  439b51:	test   rsi,rsi
  439b54:	jne    0x439b30
  439b56:	test   rdi,rdi
  439b59:	jne    0x439b7e
  439b5b:	add    rsp,0x20
  439b5f:	pop    rbx
  439b60:	pop    rsi
  439b61:	pop    rdi
  439b62:	ret    
  439b63:	mov    rax,QWORD PTR [rdx]
  439b66:	mov    QWORD PTR [rbx+0x18],rdi
  439b6a:	mov    QWORD PTR [rbx+0x10],rdi
  439b6e:	mov    QWORD PTR [rbx+0x8],rdx
  439b72:	mov    QWORD PTR [rbx+0x20],rax
  439b76:	add    rsp,0x20
  439b7a:	pop    rbx
  439b7b:	pop    rsi
  439b7c:	pop    rdi
  439b7d:	ret    
  439b7e:	call   0x449548
  439b83:	nop
  439b84:	xchg   ax,ax
  439b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439b90:	push   rdi
  439b91:	push   rsi
  439b92:	push   rbx
  439b93:	sub    rsp,0x20
  439b97:	mov    rdi,rdx
  439b9a:	mov    rdx,QWORD PTR [rcx+0x8]
  439b9e:	mov    rbx,rcx
  439ba1:	test   rdx,rdx
  439ba4:	jne    0x439bc3
  439ba6:	jmp    0x439be6
  439ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  439bb0:	mov    rcx,QWORD PTR [rbx+0x48]
  439bb4:	call   QWORD PTR [rbx+0x40]
  439bb7:	or     BYTE PTR [rbx+0x50],0x2
  439bbb:	test   rsi,rsi
  439bbe:	je     0x439be6
  439bc0:	mov    rdx,rsi
  439bc3:	cmp    rdi,rdx
  439bc6:	jbe    0x439bcd
  439bc8:	cmp    rdi,QWORD PTR [rdx]
  439bcb:	jbe    0x439bf3
  439bcd:	test   BYTE PTR [rbx+0x50],0x1
  439bd1:	mov    rsi,QWORD PTR [rdx+0x8]
  439bd5:	jne    0x439bb0
  439bd7:	mov    rcx,rdx
  439bda:	call   QWORD PTR [rbx+0x40]
  439bdd:	or     BYTE PTR [rbx+0x50],0x2
  439be1:	test   rsi,rsi
  439be4:	jne    0x439bc0
  439be6:	test   rdi,rdi
  439be9:	jne    0x439c0e
  439beb:	add    rsp,0x20
  439bef:	pop    rbx
  439bf0:	pop    rsi
  439bf1:	pop    rdi
  439bf2:	ret    
  439bf3:	mov    rax,QWORD PTR [rdx]
  439bf6:	mov    QWORD PTR [rbx+0x18],rdi
  439bfa:	mov    QWORD PTR [rbx+0x10],rdi
  439bfe:	mov    QWORD PTR [rbx+0x8],rdx
  439c02:	mov    QWORD PTR [rbx+0x20],rax
  439c06:	add    rsp,0x20
  439c0a:	pop    rbx
  439c0b:	pop    rsi
  439c0c:	pop    rdi
  439c0d:	ret    
  439c0e:	call   0x449548
  439c13:	nop
  439c14:	xchg   ax,ax
  439c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439c20:	mov    rdx,QWORD PTR [rcx+0x8]
  439c24:	xor    eax,eax
  439c26:	test   rdx,rdx
  439c29:	je     0x439c3f
  439c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  439c30:	add    eax,DWORD PTR [rdx]
  439c32:	sub    eax,edx
  439c34:	mov    rdx,QWORD PTR [rdx+0x8]
  439c38:	test   rdx,rdx
  439c3b:	jne    0x439c30
  439c3d:	repz ret 
  439c3f:	repz ret 
  439c41:	nop
  439c42:	nop
  439c43:	nop
  439c44:	nop
  439c45:	nop
  439c46:	nop
  439c47:	nop
  439c48:	nop
  439c49:	nop
  439c4a:	nop
  439c4b:	nop
  439c4c:	nop
  439c4d:	nop
  439c4e:	nop
  439c4f:	nop
  439c50:	push   r15
  439c52:	push   r14
  439c54:	push   r13
  439c56:	push   r12
  439c58:	push   rbp
  439c59:	push   rdi
  439c5a:	push   rsi
  439c5b:	push   rbx
  439c5c:	sub    rsp,0x48
  439c60:	mov    r10d,DWORD PTR [rcx+0x30]
  439c64:	cmp    DWORD PTR [rcx+0x50],r10d
  439c68:	mov    eax,0x1
  439c6d:	je     0x439d1f
  439c73:	mov    rbx,rcx
  439c76:	mov    rcx,QWORD PTR [rcx+0x40]
  439c7a:	mov    ebp,edx
  439c7c:	movsxd rdx,r10d
  439c7f:	mov    r13,r9
  439c82:	mov    r12,r8
  439c85:	shl    rdx,0x2
  439c89:	call   0x43bb70
  439c8e:	test   BYTE PTR [rbx],0x1
  439c91:	mov    QWORD PTR [rbx+0x40],rax
  439c95:	jne    0x439d30
  439c9b:	mov    edi,DWORD PTR [rbx+0x50]
  439c9e:	cmp    edi,DWORD PTR [rbx+0x30]
  439ca1:	jge    0x439d4a
  439ca7:	movsxd rsi,edi
  439caa:	mov    r14d,0x1
  439cb0:	mov    r15,rsi
  439cb3:	shl    r15,0x4
  439cb7:	nop    WORD PTR [rax+rax*1+0x0]
  439cc0:	mov    r9,QWORD PTR [rbx+0x48]
  439cc4:	mov    rcx,QWORD PTR [rbx+0x40]
  439cc8:	mov    rax,QWORD PTR [rbx+0x80]
  439ccf:	lea    rdx,[r9+r15*1]
  439cd3:	test   r9,r9
  439cd6:	lea    r8,[rcx+rsi*4]
  439cda:	mov    rax,QWORD PTR [rax+0x20]
  439cde:	mov    rcx,rbx
  439ce1:	cmovne r9,rdx
  439ce5:	mov    rdx,QWORD PTR [rbx+0x38]
  439ce9:	mov    rdx,QWORD PTR [rdx+rsi*8]
  439ced:	mov    QWORD PTR [rsp+0x30],r13
  439cf2:	mov    QWORD PTR [rsp+0x28],r12
  439cf7:	mov    DWORD PTR [rsp+0x20],ebp
  439cfb:	call   rax
  439cfd:	test   rax,rax
  439d00:	mov    eax,0x0
  439d05:	cmovs  r14d,eax
  439d09:	add    edi,0x1
  439d0c:	add    rsi,0x1
  439d10:	add    r15,0x10
  439d14:	cmp    edi,DWORD PTR [rbx+0x30]
  439d17:	jl     0x439cc0
  439d19:	mov    DWORD PTR [rbx+0x50],edi
  439d1c:	mov    eax,r14d
  439d1f:	add    rsp,0x48
  439d23:	pop    rbx
  439d24:	pop    rsi
  439d25:	pop    rdi
  439d26:	pop    rbp
  439d27:	pop    r12
  439d29:	pop    r13
  439d2b:	pop    r14
  439d2d:	pop    r15
  439d2f:	ret    
  439d30:	movsxd rdx,DWORD PTR [rbx+0x30]
  439d34:	mov    rcx,QWORD PTR [rbx+0x48]
  439d38:	shl    rdx,0x4
  439d3c:	call   0x43bb70
  439d41:	mov    QWORD PTR [rbx+0x48],rax
  439d45:	jmp    0x439c9b
  439d4a:	mov    r14d,0x1
  439d50:	jmp    0x439d19
  439d52:	nop    DWORD PTR [rax+0x0]
  439d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439d60:	push   rdi
  439d61:	push   rsi
  439d62:	push   rbx
  439d63:	sub    rsp,0x20
  439d67:	test   r8,r8
  439d6a:	mov    rax,r8
  439d6d:	je     0x439d90
  439d6f:	and    edx,0x4
  439d72:	je     0x439deb
  439d74:	mov    rcx,QWORD PTR [rcx]
  439d77:	test   rcx,rcx
  439d7a:	je     0x439df3
  439d7c:	xor    r8d,r8d
  439d7f:	mov    rdx,rax
  439d82:	add    rsp,0x20
  439d86:	pop    rbx
  439d87:	pop    rsi
  439d88:	pop    rdi
  439d89:	jmp    0x4381d0
  439d8e:	xchg   ax,ax
  439d90:	mov    rbx,QWORD PTR [rcx]
  439d93:	xor    ecx,ecx
  439d95:	test   rbx,rbx
  439d98:	je     0x439df6
  439d9a:	mov    rcx,rbx
  439d9d:	call   0x4493c0
  439da2:	cmp    eax,0x5
  439da5:	jle    0x439dbe
  439da7:	cdqe   
  439da9:	lea    rdi,[rip+0x1fae0]        # 0x459890
  439db0:	mov    ecx,0x7
  439db5:	lea    rsi,[rbx+rax*1-0x6]
  439dba:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  439dbc:	je     0x439e02
  439dbe:	lea    rdx,[rip+0x1facb]        # 0x459890
  439dc5:	mov    rcx,rbx
  439dc8:	xor    r8d,r8d
  439dcb:	call   0x4381d0
  439dd0:	mov    rbx,rax
  439dd3:	xor    edx,edx
  439dd5:	mov    rcx,rbx
  439dd8:	call   0x43bc70
  439ddd:	test   eax,eax
  439ddf:	js     0x439e0f
  439de1:	mov    ecx,eax
  439de3:	call   0x4492f0
  439de8:	mov    rax,rbx
  439deb:	add    rsp,0x20
  439def:	pop    rbx
  439df0:	pop    rsi
  439df1:	pop    rdi
  439df2:	ret    
  439df3:	mov    rcx,r8
  439df6:	add    rsp,0x20
  439dfa:	pop    rbx
  439dfb:	pop    rsi
  439dfc:	pop    rdi
  439dfd:	jmp    0x439700
  439e02:	mov    rcx,rbx
  439e05:	call   0x43bbf0
  439e0a:	mov    rbx,rax
  439e0d:	jmp    0x439dd3
  439e0f:	mov    rcx,rbx
  439e12:	call   0x4494c8
  439e17:	xor    eax,eax
  439e19:	jmp    0x439deb
  439e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  439e20:	push   rbp
  439e21:	push   rdi
  439e22:	push   rsi
  439e23:	push   rbx
  439e24:	sub    rsp,0x28
  439e28:	mov    ebp,ecx
  439e2a:	mov    rdi,rdx
  439e2d:	mov    rsi,r8
  439e30:	mov    rbx,r9
  439e33:	mov    ecx,0x90
  439e38:	call   0x43baf0
  439e3d:	mov    DWORD PTR [rax],ebp
  439e3f:	mov    QWORD PTR [rax+0x8],rdi
  439e43:	mov    QWORD PTR [rax+0x10],rsi
  439e47:	mov    DWORD PTR [rax+0x18],0x0
  439e4e:	mov    QWORD PTR [rax+0x20],0x0
  439e56:	mov    DWORD PTR [rax+0x28],0x0
  439e5d:	mov    DWORD PTR [rax+0x2c],0xffffffff
  439e64:	mov    DWORD PTR [rax+0x30],0x0
  439e6b:	mov    QWORD PTR [rax+0x38],0x0
  439e73:	mov    QWORD PTR [rax+0x40],0x0
  439e7b:	mov    QWORD PTR [rax+0x48],0x0
  439e83:	mov    DWORD PTR [rax+0x50],0x0
  439e8a:	mov    QWORD PTR [rax+0x58],0x0
  439e92:	mov    QWORD PTR [rax+0x60],0x0
  439e9a:	mov    QWORD PTR [rax+0x68],0x0
  439ea2:	mov    DWORD PTR [rax+0x70],0x0
  439ea9:	mov    QWORD PTR [rax+0x78],0x0
  439eb1:	mov    QWORD PTR [rax+0x80],rbx
  439eb8:	mov    QWORD PTR [rax+0x88],0x0
  439ec3:	add    rsp,0x28
  439ec7:	pop    rbx
  439ec8:	pop    rsi
  439ec9:	pop    rdi
  439eca:	pop    rbp
  439ecb:	ret    
  439ecc:	nop    DWORD PTR [rax+0x0]
  439ed0:	push   r15
  439ed2:	push   r14
  439ed4:	push   r13
  439ed6:	push   r12
  439ed8:	push   rbp
  439ed9:	push   rdi
  439eda:	push   rsi
  439edb:	push   rbx
  439edc:	sub    rsp,0x78
  439ee0:	mov    rbx,rcx
  439ee3:	mov    rcx,QWORD PTR [rcx+0x58]
  439ee7:	mov    esi,edx
  439ee9:	mov    r12,r8
  439eec:	mov    r13,r9
  439eef:	test   rcx,rcx
  439ef2:	je     0x439f0a
  439ef4:	call   0x449518
  439ef9:	cmp    eax,0xffffffff
  439efc:	je     0x43a150
  439f02:	mov    QWORD PTR [rbx+0x58],0x0
  439f0a:	cmp    QWORD PTR [rbx+0x20],0x0
  439f0f:	je     0x439f50
  439f11:	mov    r9,QWORD PTR [rsp+0xf8]
  439f19:	lea    r8,[rsp+0x68]
  439f1e:	xor    edx,edx
  439f20:	mov    rcx,rbx
  439f23:	call   0x439c50
  439f28:	test   eax,eax
  439f2a:	jne    0x43a040
  439f30:	mov    rax,QWORD PTR [rsp+0x68]
  439f35:	add    rsp,0x78
  439f39:	pop    rbx
  439f3a:	pop    rsi
  439f3b:	pop    rdi
  439f3c:	pop    rbp
  439f3d:	pop    r12
  439f3f:	pop    r13
  439f41:	pop    r14
  439f43:	pop    r15
  439f45:	ret    
  439f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439f50:	mov    edi,DWORD PTR [rbx+0x18]
  439f53:	test   edi,edi
  439f55:	js     0x43a130
  439f5b:	test   sil,0x1
  439f5f:	je     0x43a082
  439f65:	xor    r14d,r14d
  439f68:	cmp    QWORD PTR [rsp+0xe8],0x0
  439f71:	je     0x43a340
  439f77:	test   sil,0x4
  439f7b:	mov    ebp,0xffffffff
  439f80:	jne    0x43a2c5
  439f86:	mov    DWORD PTR [rbx+0x18],0xffffffff
  439f8d:	test   ebp,ebp
  439f8f:	js     0x43a49b
  439f95:	test   r14d,r14d
  439f98:	jne    0x43a192
  439f9e:	cmp    QWORD PTR [rsp+0xf0],0x0
  439fa7:	je     0x43a213
  439fad:	test   sil,0x40
  439fb1:	je     0x43a161
  439fb7:	mov    rax,QWORD PTR [rsp+0xf8]
  439fbf:	xor    esi,esi
  439fc1:	mov    r15d,0xffffffff
  439fc7:	mov    DWORD PTR [rax],0x0
  439fcd:	lea    rax,[rip+0x1f954]        # 0x459928
  439fd4:	mov    QWORD PTR [rsp+0x68],rax
  439fd9:	xor    r14d,r14d
  439fdc:	test   edi,edi
  439fde:	je     0x439fef
  439fe0:	mov    rax,QWORD PTR [rbx+0x80]
  439fe7:	mov    edx,edi
  439fe9:	mov    rcx,rbx
  439fec:	call   QWORD PTR [rax+0x18]
  439fef:	cmp    ebp,0x1
  439ff2:	je     0x43a007
  439ff4:	test   ebp,ebp
  439ff6:	js     0x43a007
  439ff8:	mov    rax,QWORD PTR [rbx+0x80]
  439fff:	mov    edx,ebp
  43a001:	mov    rcx,rbx
  43a004:	call   QWORD PTR [rax+0x18]
  43a007:	test   sil,sil
  43a00a:	je     0x43a01c
  43a00c:	mov    rax,QWORD PTR [rbx+0x80]
  43a013:	mov    edx,r15d
  43a016:	mov    rcx,rbx
  43a019:	call   QWORD PTR [rax+0x18]
  43a01c:	test   r14d,r14d
  43a01f:	je     0x439f30
  43a025:	mov    rcx,QWORD PTR [rsp+0xe8]
  43a02d:	call   0x4494c8
  43a032:	jmp    0x439f30
  43a037:	nop    WORD PTR [rax+rax*1+0x0]
  43a040:	mov    rax,QWORD PTR [rbx+0x80]
  43a047:	mov    r8d,esi
  43a04a:	mov    rdx,QWORD PTR [rbx+0x20]
  43a04e:	shr    r8d,0x4
  43a052:	mov    rcx,rbx
  43a055:	and    r8d,0x1
  43a059:	call   QWORD PTR [rax]
  43a05b:	test   eax,eax
  43a05d:	mov    edi,eax
  43a05f:	js     0x43a350
  43a065:	mov    eax,DWORD PTR [rbx+0x28]
  43a068:	test   eax,eax
  43a06a:	jne    0x43a2b0
  43a070:	test   sil,0x1
  43a074:	mov    QWORD PTR [rbx+0x20],0x0
  43a07c:	jne    0x439f65
  43a082:	test   BYTE PTR [rbx],0x2
  43a085:	jne    0x43a1a4
  43a08b:	mov    r8,QWORD PTR [rsp+0xe8]
  43a093:	lea    rcx,[rbx+0x10]
  43a097:	mov    edx,esi
  43a099:	call   0x439d60
  43a09e:	test   rax,rax
  43a0a1:	mov    r15,rax
  43a0a4:	je     0x43a373
  43a0aa:	cmp    rax,QWORD PTR [rsp+0xe8]
  43a0b2:	je     0x43a3d4
  43a0b8:	test   BYTE PTR [rbx],0x4
  43a0bb:	mov    eax,0x1
  43a0c0:	je     0x43a1dc
  43a0c6:	mov    QWORD PTR [rbx+0x20],r15
  43a0ca:	mov    DWORD PTR [rbx+0x28],eax
  43a0cd:	xor    r14d,r14d
  43a0d0:	mov    rax,QWORD PTR [rbx+0x80]
  43a0d7:	mov    r8d,esi
  43a0da:	mov    rdx,r15
  43a0dd:	shr    r8d,0x5
  43a0e1:	mov    rcx,rbx
  43a0e4:	and    r8d,0x1
  43a0e8:	call   QWORD PTR [rax+0x8]
  43a0eb:	test   eax,eax
  43a0ed:	mov    ebp,eax
  43a0ef:	mov    QWORD PTR [rsp+0xe8],r15
  43a0f7:	jns    0x439f95
  43a0fd:	call   QWORD PTR [rip+0x2a681]        # 0x464784
  43a103:	mov    rsi,QWORD PTR [rsp+0xf8]
  43a10b:	mov    eax,DWORD PTR [rax]
  43a10d:	test   edi,edi
  43a10f:	mov    DWORD PTR [rsi],eax
  43a111:	lea    rax,[rip+0x1f7f5]        # 0x45990d
  43a118:	mov    QWORD PTR [rsp+0x68],rax
  43a11d:	je     0x43a01c
  43a123:	xor    esi,esi
  43a125:	mov    r15d,0xffffffff
  43a12b:	jmp    0x439fe0
  43a130:	mov    rax,QWORD PTR [rsp+0xf8]
  43a138:	mov    DWORD PTR [rax],0x0
  43a13e:	lea    rax,[rip+0x1f782]        # 0x4598c7
  43a145:	mov    QWORD PTR [rsp+0x68],rax
  43a14a:	jmp    0x439f30
  43a14f:	nop
  43a150:	lea    rax,[rip+0x1f740]        # 0x459897
  43a157:	mov    QWORD PTR [rsp+0x68],rax
  43a15c:	jmp    0x439f30
  43a161:	cmp    DWORD PTR [rbx+0x2c],0xffffffff
  43a165:	je     0x43a2f0
  43a16b:	mov    rax,QWORD PTR [rsp+0xf8]
  43a173:	xor    esi,esi
  43a175:	mov    r15d,0xffffffff
  43a17b:	mov    DWORD PTR [rax],0x0
  43a181:	lea    rax,[rip+0x1f7d0]        # 0x459958
  43a188:	mov    QWORD PTR [rsp+0x68],rax
  43a18d:	jmp    0x439fd9
  43a192:	mov    rcx,QWORD PTR [rsp+0xe8]
  43a19a:	call   0x4494c8
  43a19f:	jmp    0x439f9e
  43a1a4:	mov    rax,QWORD PTR [rbx+0x80]
  43a1ab:	mov    r8d,esi
  43a1ae:	lea    rdx,[rsp+0x60]
  43a1b3:	shr    r8d,0x5
  43a1b7:	mov    rcx,rbx
  43a1ba:	and    r8d,0x1
  43a1be:	call   QWORD PTR [rax+0x28]
  43a1c1:	test   eax,eax
  43a1c3:	js     0x43a3b4
  43a1c9:	mov    eax,DWORD PTR [rsp+0x60]
  43a1cd:	mov    ebp,DWORD PTR [rsp+0x64]
  43a1d1:	xor    r14d,r14d
  43a1d4:	mov    DWORD PTR [rbx+0x18],eax
  43a1d7:	jmp    0x439f8d
  43a1dc:	mov    eax,DWORD PTR [rbx+0x70]
  43a1df:	mov    rcx,QWORD PTR [rbx+0x78]
  43a1e3:	add    eax,0x1
  43a1e6:	mov    DWORD PTR [rbx+0x70],eax
  43a1e9:	cdqe   
  43a1eb:	lea    rdx,[rax*8+0x0]
  43a1f3:	call   0x43bb70
  43a1f8:	mov    QWORD PTR [rbx+0x78],rax
  43a1fc:	mov    rax,r15
  43a1ff:	movsxd rcx,DWORD PTR [rbx+0x70]
  43a203:	mov    rdx,QWORD PTR [rbx+0x78]
  43a207:	mov    QWORD PTR [rdx+rcx*8-0x8],rax
  43a20c:	xor    eax,eax
  43a20e:	jmp    0x43a0c6
  43a213:	cmp    DWORD PTR [rbx+0x2c],0xffffffff
  43a217:	jne    0x43a16b
  43a21d:	test   sil,0x40
  43a221:	mov    r15d,0x2
  43a227:	jne    0x43a440
  43a22d:	test   BYTE PTR [rbx],0x2
  43a230:	mov    eax,0xffffffff
  43a235:	je     0x43a23a
  43a237:	mov    eax,DWORD PTR [rbx+0x18]
  43a23a:	mov    rdx,QWORD PTR [rsp+0xf8]
  43a242:	mov    DWORD PTR [rsp+0x40],eax
  43a246:	mov    r9,r13
  43a249:	mov    rax,QWORD PTR [rsp+0xe0]
  43a251:	mov    r10,QWORD PTR [rbx+0x80]
  43a258:	mov    r8,r12
  43a25b:	mov    DWORD PTR [rsp+0x38],r15d
  43a260:	mov    DWORD PTR [rsp+0x30],ebp
  43a264:	mov    rcx,rbx
  43a267:	mov    QWORD PTR [rsp+0x50],rdx
  43a26c:	lea    rdx,[rsp+0x68]
  43a271:	mov    DWORD PTR [rsp+0x28],edi
  43a275:	mov    QWORD PTR [rsp+0x20],rax
  43a27a:	mov    QWORD PTR [rsp+0x48],rdx
  43a27f:	mov    edx,esi
  43a281:	call   QWORD PTR [r10+0x10]
  43a285:	test   rax,rax
  43a288:	mov    rsi,rax
  43a28b:	jns    0x43a410
  43a291:	mov    esi,r15d
  43a294:	cmp    r15d,0x2
  43a298:	not    esi
  43a29a:	setne  al
  43a29d:	shr    esi,0x1f
  43a2a0:	and    esi,eax
  43a2a2:	jmp    0x439fd9
  43a2a7:	nop    WORD PTR [rax+rax*1+0x0]
  43a2b0:	mov    rcx,QWORD PTR [rbx+0x20]
  43a2b4:	call   0x4494c8
  43a2b9:	mov    DWORD PTR [rbx+0x28],0x0
  43a2c0:	jmp    0x43a070
  43a2c5:	mov    rcx,QWORD PTR [rbx+0x10]
  43a2c9:	mov    rdx,QWORD PTR [rsp+0xe8]
  43a2d1:	xor    r8d,r8d
  43a2d4:	mov    r14b,0x1
  43a2d7:	call   0x4381d0
  43a2dc:	mov    QWORD PTR [rsp+0xe8],rax
  43a2e4:	jmp    0x439f86
  43a2e9:	nop    DWORD PTR [rax+0x0]
  43a2f0:	mov    rax,QWORD PTR [rbx+0x80]
  43a2f7:	mov    r8d,esi
  43a2fa:	mov    rdx,QWORD PTR [rsp+0xf0]
  43a302:	shr    r8d,0x7
  43a306:	mov    rcx,rbx
  43a309:	and    r8d,0x1
  43a30d:	call   QWORD PTR [rax+0x8]
  43a310:	test   eax,eax
  43a312:	mov    r15d,eax
  43a315:	jns    0x43a22d
  43a31b:	call   QWORD PTR [rip+0x2a463]        # 0x464784
  43a321:	mov    rsi,QWORD PTR [rsp+0xf8]
  43a329:	mov    eax,DWORD PTR [rax]
  43a32b:	mov    DWORD PTR [rsi],eax
  43a32d:	lea    rax,[rip+0x1f656]        # 0x45998a
  43a334:	xor    esi,esi
  43a336:	mov    QWORD PTR [rsp+0x68],rax
  43a33b:	jmp    0x439fd9
  43a340:	mov    ebp,0x1
  43a345:	jmp    0x439f86
  43a34a:	nop    WORD PTR [rax+rax*1+0x0]
  43a350:	call   QWORD PTR [rip+0x2a42e]        # 0x464784
  43a356:	mov    rdi,QWORD PTR [rsp+0xf8]
  43a35e:	mov    eax,DWORD PTR [rax]
  43a360:	mov    DWORD PTR [rdi],eax
  43a362:	lea    rax,[rip+0x1f54a]        # 0x4598b3
  43a369:	mov    QWORD PTR [rsp+0x68],rax
  43a36e:	jmp    0x439f30
  43a373:	mov    rax,QWORD PTR [rsp+0xf8]
  43a37b:	mov    QWORD PTR [rsp+0xe8],0x0
  43a387:	mov    DWORD PTR [rax],0x0
  43a38d:	lea    rax,[rip+0x1f554]        # 0x4598e8
  43a394:	mov    QWORD PTR [rsp+0x68],rax
  43a399:	test   edi,edi
  43a39b:	je     0x439f30
  43a3a1:	mov    r15d,0xffffffff
  43a3a7:	xor    esi,esi
  43a3a9:	xor    r14d,r14d
  43a3ac:	mov    ebp,r15d
  43a3af:	jmp    0x439fe0
  43a3b4:	call   QWORD PTR [rip+0x2a3ca]        # 0x464784
  43a3ba:	mov    rsi,QWORD PTR [rsp+0xf8]
  43a3c2:	mov    eax,DWORD PTR [rax]
  43a3c4:	mov    DWORD PTR [rsi],eax
  43a3c6:	lea    rax,[rip+0x1f53b]        # 0x459908
  43a3cd:	mov    QWORD PTR [rsp+0x68],rax
  43a3d2:	jmp    0x43a399
  43a3d4:	test   BYTE PTR [rbx],0x4
  43a3d7:	jne    0x43a20c
  43a3dd:	mov    eax,DWORD PTR [rbx+0x70]
  43a3e0:	mov    rcx,QWORD PTR [rbx+0x78]
  43a3e4:	add    eax,0x1
  43a3e7:	mov    DWORD PTR [rbx+0x70],eax
  43a3ea:	cdqe   
  43a3ec:	lea    rdx,[rax*8+0x0]
  43a3f4:	call   0x43bb70
  43a3f9:	mov    rcx,QWORD PTR [rsp+0xe8]
  43a401:	mov    QWORD PTR [rbx+0x78],rax
  43a405:	call   0x43bbf0
  43a40a:	jmp    0x43a1ff
  43a40f:	nop
  43a410:	mov    eax,DWORD PTR [rbx+0x30]
  43a413:	mov    rcx,QWORD PTR [rbx+0x38]
  43a417:	add    eax,0x1
  43a41a:	mov    DWORD PTR [rbx+0x30],eax
  43a41d:	cdqe   
  43a41f:	lea    rdx,[rax*8+0x0]
  43a427:	call   0x43bb70
  43a42c:	movsxd rdx,DWORD PTR [rbx+0x30]
  43a430:	mov    QWORD PTR [rbx+0x38],rax
  43a434:	mov    QWORD PTR [rax+rdx*8-0x8],rsi
  43a439:	xor    eax,eax
  43a43b:	jmp    0x439f35
  43a440:	mov    rax,QWORD PTR [rbx+0x80]
  43a447:	mov    r8d,esi
  43a44a:	lea    rdx,[rsp+0x60]
  43a44f:	shr    r8d,0x7
  43a453:	mov    rcx,rbx
  43a456:	and    r8d,0x1
  43a45a:	call   QWORD PTR [rax+0x28]
  43a45d:	test   eax,eax
  43a45f:	js     0x43a472
  43a461:	mov    eax,DWORD PTR [rsp+0x60]
  43a465:	mov    r15d,DWORD PTR [rsp+0x64]
  43a46a:	mov    DWORD PTR [rbx+0x2c],eax
  43a46d:	jmp    0x43a22d
  43a472:	call   QWORD PTR [rip+0x2a30c]        # 0x464784
  43a478:	mov    rsi,QWORD PTR [rsp+0xf8]
  43a480:	mov    eax,DWORD PTR [rax]
  43a482:	or     r15d,0xffffffff
  43a486:	mov    DWORD PTR [rsi],eax
  43a488:	lea    rax,[rip+0x1f479]        # 0x459908
  43a48f:	xor    esi,esi
  43a491:	mov    QWORD PTR [rsp+0x68],rax
  43a496:	jmp    0x439fd9
  43a49b:	mov    r15,QWORD PTR [rsp+0xe8]
  43a4a3:	jmp    0x43a0d0
  43a4a8:	nop    DWORD PTR [rax+rax*1+0x0]
  43a4b0:	sub    rsp,0x48
  43a4b4:	mov    rax,QWORD PTR [rsp+0x80]
  43a4bc:	mov    QWORD PTR [rsp+0x20],0x0
  43a4c5:	mov    QWORD PTR [rsp+0x38],rax
  43a4ca:	mov    rax,QWORD PTR [rsp+0x78]
  43a4cf:	mov    QWORD PTR [rsp+0x30],rax
  43a4d4:	mov    rax,QWORD PTR [rsp+0x70]
  43a4d9:	mov    QWORD PTR [rsp+0x28],rax
  43a4de:	call   0x439ed0
  43a4e3:	add    rsp,0x48
  43a4e7:	ret    
  43a4e8:	nop    DWORD PTR [rax+rax*1+0x0]
  43a4f0:	push   rbp
  43a4f1:	push   rdi
  43a4f2:	push   rsi
  43a4f3:	push   rbx
  43a4f4:	sub    rsp,0x28
  43a4f8:	mov    esi,edx
  43a4fa:	mov    edx,DWORD PTR [rcx+0x30]
  43a4fd:	mov    rbx,rcx
  43a500:	mov    rdi,r8
  43a503:	test   edx,edx
  43a505:	jne    0x43a515
  43a507:	mov    eax,DWORD PTR [rcx+0x18]
  43a50a:	test   eax,eax
  43a50c:	jg     0x43a515
  43a50e:	cmp    QWORD PTR [rcx+0x20],0x0
  43a513:	je     0x43a530
  43a515:	call   QWORD PTR [rip+0x2a269]        # 0x464784
  43a51b:	mov    DWORD PTR [rax],0x16
  43a521:	xor    eax,eax
  43a523:	add    rsp,0x28
  43a527:	pop    rbx
  43a528:	pop    rsi
  43a529:	pop    rdi
  43a52a:	pop    rbp
  43a52b:	ret    
  43a52c:	nop    DWORD PTR [rax+0x0]
  43a530:	lea    rcx,[rcx+0x10]
  43a534:	mov    edx,esi
  43a536:	call   0x439d60
  43a53b:	test   rax,rax
  43a53e:	mov    rbp,rax
  43a541:	je     0x43a587
  43a543:	lea    rax,[rip+0x1f450]        # 0x45999a
  43a54a:	lea    rdx,[rip+0x1f44c]        # 0x45999d
  43a551:	and    esi,0x20
  43a554:	mov    rcx,rbp
  43a557:	cmovne rdx,rax
  43a55b:	call   0x4494f0
  43a560:	test   rax,rax
  43a563:	mov    rdx,rax
  43a566:	je     0x43a58b
  43a568:	mov    QWORD PTR [rbx+0x58],rax
  43a56c:	xor    eax,eax
  43a56e:	cmp    rbp,rdi
  43a571:	setne  al
  43a574:	mov    QWORD PTR [rbx+0x20],rbp
  43a578:	mov    DWORD PTR [rbx+0x28],eax
  43a57b:	mov    rax,rdx
  43a57e:	add    rsp,0x28
  43a582:	pop    rbx
  43a583:	pop    rsi
  43a584:	pop    rdi
  43a585:	pop    rbp
  43a586:	ret    
  43a587:	xor    eax,eax
  43a589:	jmp    0x43a523
  43a58b:	mov    rcx,rbp
  43a58e:	call   0x4494c8
  43a593:	xor    eax,eax
  43a595:	jmp    0x43a523
  43a597:	nop    WORD PTR [rax+rax*1+0x0]
  43a5a0:	push   rdi
  43a5a1:	push   rsi
  43a5a2:	push   rbx
  43a5a3:	sub    rsp,0x30
  43a5a7:	mov    rbx,rcx
  43a5aa:	mov    ecx,DWORD PTR [rcx+0x30]
  43a5ad:	test   ecx,ecx
  43a5af:	jg     0x43a5c4
  43a5b1:	test   BYTE PTR [rbx],0x2
  43a5b4:	je     0x43a5c4
  43a5b6:	mov    eax,DWORD PTR [rbx+0x18]
  43a5b9:	test   eax,eax
  43a5bb:	jg     0x43a5c4
  43a5bd:	cmp    QWORD PTR [rbx+0x20],0x0
  43a5c2:	je     0x43a5e0
  43a5c4:	call   QWORD PTR [rip+0x2a1ba]        # 0x464784
  43a5ca:	mov    DWORD PTR [rax],0x16
  43a5d0:	xor    eax,eax
  43a5d2:	add    rsp,0x30
  43a5d6:	pop    rbx
  43a5d7:	pop    rsi
  43a5d8:	pop    rdi
  43a5d9:	ret    
  43a5da:	nop    WORD PTR [rax+rax*1+0x0]
  43a5e0:	mov    rax,QWORD PTR [rbx+0x80]
  43a5e7:	xor    esi,esi
  43a5e9:	test   edx,edx
  43a5eb:	setne  sil
  43a5ef:	lea    rdx,[rsp+0x20]
  43a5f4:	mov    rcx,rbx
  43a5f7:	mov    r8d,esi
  43a5fa:	call   QWORD PTR [rax+0x28]
  43a5fd:	test   eax,eax
  43a5ff:	js     0x43a630
  43a601:	mov    rax,QWORD PTR [rbx+0x80]
  43a608:	mov    r8d,esi
  43a60b:	mov    edx,DWORD PTR [rsp+0x24]
  43a60f:	mov    rcx,rbx
  43a612:	call   QWORD PTR [rax+0x38]
  43a615:	test   rax,rax
  43a618:	je     0x43a634
  43a61a:	mov    edx,DWORD PTR [rsp+0x20]
  43a61e:	mov    DWORD PTR [rbx+0x18],edx
  43a621:	add    rsp,0x30
  43a625:	pop    rbx
  43a626:	pop    rsi
  43a627:	pop    rdi
  43a628:	ret    
  43a629:	nop    DWORD PTR [rax+0x0]
  43a630:	xor    eax,eax
  43a632:	jmp    0x43a5d2
  43a634:	mov    rsi,QWORD PTR [rip+0x2a149]        # 0x464784
  43a63b:	call   rsi
  43a63d:	mov    edi,DWORD PTR [rax]
  43a63f:	mov    rax,QWORD PTR [rbx+0x80]
  43a646:	mov    rcx,rbx
  43a649:	mov    edx,DWORD PTR [rsp+0x20]
  43a64d:	call   QWORD PTR [rax+0x18]
  43a650:	mov    rax,QWORD PTR [rbx+0x80]
  43a657:	mov    edx,DWORD PTR [rsp+0x24]
  43a65b:	mov    rcx,rbx
  43a65e:	call   QWORD PTR [rax+0x18]
  43a661:	call   rsi
  43a663:	mov    DWORD PTR [rax],edi
  43a665:	xor    eax,eax
  43a667:	jmp    0x43a5d2
  43a66c:	nop    DWORD PTR [rax+0x0]
  43a670:	push   rsi
  43a671:	push   rbx
  43a672:	sub    rsp,0x38
  43a676:	cmp    QWORD PTR [rcx+0x20],0x0
  43a67b:	mov    rbx,rcx
  43a67e:	mov    esi,edx
  43a680:	je     0x43a6d2
  43a682:	lea    r9,[rsp+0x24]
  43a687:	lea    r8,[rsp+0x28]
  43a68c:	xor    edx,edx
  43a68e:	call   0x439c50
  43a693:	test   eax,eax
  43a695:	je     0x43a720
  43a69b:	lea    rax,[rip+0x1f2fd]        # 0x45999f
  43a6a2:	lea    rdx,[rip+0x1f2f9]        # 0x4599a2
  43a6a9:	mov    rcx,QWORD PTR [rbx+0x20]
  43a6ad:	test   esi,esi
  43a6af:	cmovne rdx,rax
  43a6b3:	call   0x4494f0
  43a6b8:	mov    edx,DWORD PTR [rbx+0x28]
  43a6bb:	mov    QWORD PTR [rbx+0x60],rax
  43a6bf:	test   edx,edx
  43a6c1:	jne    0x43a700
  43a6c3:	mov    QWORD PTR [rbx+0x20],0x0
  43a6cb:	add    rsp,0x38
  43a6cf:	pop    rbx
  43a6d0:	pop    rsi
  43a6d1:	ret    
  43a6d2:	mov    edx,DWORD PTR [rcx+0x18]
  43a6d5:	test   edx,edx
  43a6d7:	jle    0x43a730
  43a6d9:	mov    rax,QWORD PTR [rcx+0x80]
  43a6e0:	mov    r8d,esi
  43a6e3:	call   QWORD PTR [rax+0x30]
  43a6e6:	mov    QWORD PTR [rbx+0x60],rax
  43a6ea:	mov    DWORD PTR [rbx+0x18],0xffffffff
  43a6f1:	add    rsp,0x38
  43a6f5:	pop    rbx
  43a6f6:	pop    rsi
  43a6f7:	ret    
  43a6f8:	nop    DWORD PTR [rax+rax*1+0x0]
  43a700:	mov    rcx,QWORD PTR [rbx+0x20]
  43a704:	call   0x4494c8
  43a709:	mov    DWORD PTR [rbx+0x28],0x0
  43a710:	mov    rax,QWORD PTR [rbx+0x60]
  43a714:	jmp    0x43a6c3
  43a716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a720:	call   QWORD PTR [rip+0x2a05e]        # 0x464784
  43a726:	mov    edx,DWORD PTR [rsp+0x24]
  43a72a:	mov    DWORD PTR [rax],edx
  43a72c:	xor    eax,eax
  43a72e:	jmp    0x43a6cb
  43a730:	xor    eax,eax
  43a732:	jmp    0x43a6cb
  43a734:	xchg   ax,ax
  43a736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a740:	push   rbx
  43a741:	sub    rsp,0x20
  43a745:	mov    r8d,edx
  43a748:	mov    edx,DWORD PTR [rcx+0x2c]
  43a74b:	test   edx,edx
  43a74d:	jle    0x43a770
  43a74f:	mov    rax,QWORD PTR [rcx+0x80]
  43a756:	mov    rbx,rcx
  43a759:	call   QWORD PTR [rax+0x30]
  43a75c:	mov    DWORD PTR [rbx+0x2c],0xffffffff
  43a763:	mov    QWORD PTR [rbx+0x68],rax
  43a767:	add    rsp,0x20
  43a76b:	pop    rbx
  43a76c:	ret    
  43a76d:	nop    DWORD PTR [rax]
  43a770:	xor    eax,eax
  43a772:	jmp    0x43a767
  43a774:	xchg   ax,ax
  43a776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a780:	push   rdi
  43a781:	push   rsi
  43a782:	push   rbx
  43a783:	sub    rsp,0x30
  43a787:	cmp    QWORD PTR [rcx+0x40],0x0
  43a78c:	mov    rsi,rcx
  43a78f:	mov    ebx,edx
  43a791:	mov    rdi,r8
  43a794:	je     0x43a7e0
  43a796:	movsxd rax,DWORD PTR [rsi+0x30]
  43a79a:	cmp    eax,ebx
  43a79c:	jl     0x43a7c0
  43a79e:	mov    rdx,QWORD PTR [rsi+0x40]
  43a7a2:	movsxd r8,ebx
  43a7a5:	mov    rcx,rdi
  43a7a8:	shl    r8,0x2
  43a7ac:	call   0x449450
  43a7b1:	mov    eax,0x1
  43a7b6:	add    rsp,0x30
  43a7ba:	pop    rbx
  43a7bb:	pop    rsi
  43a7bc:	pop    rdi
  43a7bd:	ret    
  43a7be:	xchg   ax,ax
  43a7c0:	sub    ebx,eax
  43a7c2:	lea    rcx,[rdi+rax*4]
  43a7c6:	xor    edx,edx
  43a7c8:	movsxd r8,ebx
  43a7cb:	shl    r8,0x2
  43a7cf:	call   0x449440
  43a7d4:	mov    ebx,DWORD PTR [rsi+0x30]
  43a7d7:	jmp    0x43a79e
  43a7d9:	nop    DWORD PTR [rax+0x0]
  43a7e0:	lea    r9,[rsp+0x24]
  43a7e5:	lea    r8,[rsp+0x28]
  43a7ea:	xor    edx,edx
  43a7ec:	call   0x439c50
  43a7f1:	test   eax,eax
  43a7f3:	jne    0x43a796
  43a7f5:	jmp    0x43a7b6
  43a7f7:	nop    WORD PTR [rax+rax*1+0x0]
  43a800:	push   rdi
  43a801:	push   rsi
  43a802:	push   rbx
  43a803:	sub    rsp,0x30
  43a807:	cmp    QWORD PTR [rcx+0x40],0x0
  43a80c:	mov    rsi,rcx
  43a80f:	mov    ebx,edx
  43a811:	mov    rdi,r8
  43a814:	je     0x43a870
  43a816:	mov    rdx,QWORD PTR [rsi+0x48]
  43a81a:	test   rdx,rdx
  43a81d:	je     0x43a864
  43a81f:	movsxd rax,DWORD PTR [rsi+0x30]
  43a823:	cmp    eax,ebx
  43a825:	jl     0x43a843
  43a827:	movsxd r8,ebx
  43a82a:	mov    rcx,rdi
  43a82d:	shl    r8,0x4
  43a831:	call   0x449450
  43a836:	mov    eax,0x1
  43a83b:	add    rsp,0x30
  43a83f:	pop    rbx
  43a840:	pop    rsi
  43a841:	pop    rdi
  43a842:	ret    
  43a843:	sub    ebx,eax
  43a845:	shl    rax,0x4
  43a849:	xor    edx,edx
  43a84b:	movsxd r8,ebx
  43a84e:	lea    rcx,[rdi+rax*1]
  43a852:	shl    r8,0x4
  43a856:	call   0x449440
  43a85b:	mov    ebx,DWORD PTR [rsi+0x30]
  43a85e:	mov    rdx,QWORD PTR [rsi+0x48]
  43a862:	jmp    0x43a827
  43a864:	xor    eax,eax
  43a866:	jmp    0x43a83b
  43a868:	nop    DWORD PTR [rax+rax*1+0x0]
  43a870:	lea    r9,[rsp+0x24]
  43a875:	lea    r8,[rsp+0x28]
  43a87a:	xor    edx,edx
  43a87c:	call   0x439c50
  43a881:	test   eax,eax
  43a883:	jne    0x43a816
  43a885:	jmp    0x43a83b
  43a887:	nop    WORD PTR [rax+rax*1+0x0]
  43a890:	push   rdi
  43a891:	push   rsi
  43a892:	push   rbx
  43a893:	sub    rsp,0x30
  43a897:	mov    edx,DWORD PTR [rcx+0x18]
  43a89a:	mov    rbx,rcx
  43a89d:	test   edx,edx
  43a89f:	jle    0x43a8ab
  43a8a1:	mov    rax,QWORD PTR [rcx+0x80]
  43a8a8:	call   QWORD PTR [rax+0x18]
  43a8ab:	mov    edx,DWORD PTR [rbx+0x2c]
  43a8ae:	test   edx,edx
  43a8b0:	jle    0x43a8bf
  43a8b2:	mov    rax,QWORD PTR [rbx+0x80]
  43a8b9:	mov    rcx,rbx
  43a8bc:	call   QWORD PTR [rax+0x18]
  43a8bf:	mov    rcx,QWORD PTR [rbx+0x60]
  43a8c3:	test   rcx,rcx
  43a8c6:	je     0x43a8cd
  43a8c8:	call   0x449518
  43a8cd:	mov    rcx,QWORD PTR [rbx+0x68]
  43a8d1:	test   rcx,rcx
  43a8d4:	je     0x43a8db
  43a8d6:	call   0x449518
  43a8db:	cmp    QWORD PTR [rbx+0x40],0x0
  43a8e0:	je     0x43a981
  43a8e6:	mov    edx,DWORD PTR [rbx+0x28]
  43a8e9:	test   edx,edx
  43a8eb:	jne    0x43a973
  43a8f1:	mov    rcx,QWORD PTR [rbx+0x38]
  43a8f5:	xor    esi,esi
  43a8f7:	xor    edi,edi
  43a8f9:	call   0x4494c8
  43a8fe:	mov    rcx,QWORD PTR [rbx+0x40]
  43a902:	call   0x4494c8
  43a907:	mov    rcx,QWORD PTR [rbx+0x48]
  43a90b:	call   0x4494c8
  43a910:	mov    eax,DWORD PTR [rbx+0x70]
  43a913:	test   eax,eax
  43a915:	jle    0x43a94f
  43a917:	nop    WORD PTR [rax+rax*1+0x0]
  43a920:	mov    rax,QWORD PTR [rbx+0x78]
  43a924:	add    edi,0x1
  43a927:	mov    rcx,QWORD PTR [rax+rsi*1]
  43a92b:	call   0x449418
  43a930:	mov    rax,QWORD PTR [rbx+0x78]
  43a934:	mov    rcx,QWORD PTR [rax+rsi*1]
  43a938:	add    rsi,0x8
  43a93c:	call   0x4494c8
  43a941:	cmp    DWORD PTR [rbx+0x70],edi
  43a944:	jg     0x43a920
  43a946:	mov    rcx,QWORD PTR [rbx+0x78]
  43a94a:	call   0x4494c8
  43a94f:	mov    rax,QWORD PTR [rbx+0x80]
  43a956:	mov    rax,QWORD PTR [rax+0x40]
  43a95a:	test   rax,rax
  43a95d:	je     0x43a964
  43a95f:	mov    rcx,rbx
  43a962:	call   rax
  43a964:	mov    rcx,rbx
  43a967:	add    rsp,0x30
  43a96b:	pop    rbx
  43a96c:	pop    rsi
  43a96d:	pop    rdi
  43a96e:	jmp    0x4494c8
  43a973:	mov    rcx,QWORD PTR [rbx+0x20]
  43a977:	call   0x4494c8
  43a97c:	jmp    0x43a8f1
  43a981:	and    DWORD PTR [rbx],0xfffffffe
  43a984:	lea    r9,[rsp+0x24]
  43a989:	lea    r8,[rsp+0x28]
  43a98e:	mov    edx,0x1
  43a993:	mov    rcx,rbx
  43a996:	call   0x439c50
  43a99b:	jmp    0x43a8e6
  43a9a0:	push   rsi
  43a9a1:	push   rbx
  43a9a2:	sub    rsp,0x28
  43a9a6:	mov    ebx,edx
  43a9a8:	mov    esi,r8d
  43a9ab:	mov    ecx,edx
  43a9ad:	call   QWORD PTR [rip+0x29e01]        # 0x4647b4
  43a9b3:	cmp    rax,0xffffffffffffffff
  43a9b7:	je     0x43a9f0
  43a9b9:	xor    r8d,r8d
  43a9bc:	mov    edx,0x1
  43a9c1:	mov    rcx,rax
  43a9c4:	call   QWORD PTR [rip+0x29cea]        # 0x4646b4
  43a9ca:	test   eax,eax
  43a9cc:	je     0x43a9f0
  43a9ce:	lea    rax,[rip+0x1efeb]        # 0x4599c0
  43a9d5:	lea    rdx,[rip+0x1efe7]        # 0x4599c3
  43a9dc:	test   esi,esi
  43a9de:	mov    ecx,ebx
  43a9e0:	cmovne rdx,rax
  43a9e4:	add    rsp,0x28
  43a9e8:	pop    rbx
  43a9e9:	pop    rsi
  43a9ea:	jmp    0x4492f8
  43a9ef:	nop
  43a9f0:	xor    eax,eax
  43a9f2:	add    rsp,0x28
  43a9f6:	pop    rbx
  43a9f7:	pop    rsi
  43a9f8:	ret    
  43a9f9:	nop    DWORD PTR [rax+0x0]
  43aa00:	push   rsi
  43aa01:	push   rbx
  43aa02:	sub    rsp,0x28
  43aa06:	mov    ebx,edx
  43aa08:	mov    esi,r8d
  43aa0b:	mov    ecx,edx
  43aa0d:	call   QWORD PTR [rip+0x29da1]        # 0x4647b4
  43aa13:	cmp    rax,0xffffffffffffffff
  43aa17:	je     0x43aa50
  43aa19:	xor    r8d,r8d
  43aa1c:	mov    edx,0x1
  43aa21:	mov    rcx,rax
  43aa24:	call   QWORD PTR [rip+0x29c8a]        # 0x4646b4
  43aa2a:	test   eax,eax
  43aa2c:	je     0x43aa50
  43aa2e:	lea    rax,[rip+0x1ef90]        # 0x4599c5
  43aa35:	lea    rdx,[rip+0x1ef8c]        # 0x4599c8
  43aa3c:	test   esi,esi
  43aa3e:	mov    ecx,ebx
  43aa40:	cmovne rdx,rax
  43aa44:	add    rsp,0x28
  43aa48:	pop    rbx
  43aa49:	pop    rsi
  43aa4a:	jmp    0x4492f8
  43aa4f:	nop
  43aa50:	xor    eax,eax
  43aa52:	add    rsp,0x28
  43aa56:	pop    rbx
  43aa57:	pop    rsi
  43aa58:	ret    
  43aa59:	nop    DWORD PTR [rax+0x0]
  43aa60:	mov    rax,QWORD PTR [rip+0x29d7d]        # 0x4647e4
  43aa67:	cmp    r8d,0x1
  43aa6b:	mov    rcx,rdx
  43aa6e:	mov    edx,0x100
  43aa73:	sbb    r8d,r8d
  43aa76:	and    r8d,0xffffc000
  43aa7d:	add    r8d,0x8080
  43aa84:	rex.W jmp rax
  43aa87:	nop    WORD PTR [rax+rax*1+0x0]
  43aa90:	push   rsi
  43aa91:	push   rbx
  43aa92:	sub    rsp,0x38
  43aa96:	test   r9,r9
  43aa99:	mov    rbx,rdx
  43aa9c:	mov    rsi,r8
  43aa9f:	je     0x43aab0
  43aaa1:	mov    QWORD PTR [r9],0x0
  43aaa8:	mov    QWORD PTR [r9+0x8],0x0
  43aab0:	mov    edx,0xffffffff
  43aab5:	mov    rcx,rbx
  43aab8:	call   QWORD PTR [rip+0x29c36]        # 0x4646f4
  43aabe:	test   eax,eax
  43aac0:	jne    0x43ab04
  43aac2:	lea    rdx,[rsp+0x2c]
  43aac7:	mov    rcx,rbx
  43aaca:	call   QWORD PTR [rip+0x29b3c]        # 0x46460c
  43aad0:	mov    rcx,rbx
  43aad3:	call   QWORD PTR [rip+0x29af3]        # 0x4645cc
  43aad9:	mov    eax,DWORD PTR [rsp+0x2c]
  43aadd:	cmp    eax,0x3
  43aae0:	je     0x43aaf5
  43aae2:	shl    eax,0x8
  43aae5:	and    eax,0xffff
  43aaea:	mov    DWORD PTR [rsi],eax
  43aaec:	xor    eax,eax
  43aaee:	add    rsp,0x38
  43aaf2:	pop    rbx
  43aaf3:	pop    rsi
  43aaf4:	ret    
  43aaf5:	xor    eax,eax
  43aaf7:	mov    DWORD PTR [rsi],0x16
  43aafd:	add    rsp,0x38
  43ab01:	pop    rbx
  43ab02:	pop    rsi
  43ab03:	ret    
  43ab04:	mov    rcx,rbx
  43ab07:	lea    rsi,[rip+0x1eebc]        # 0x4599ca
  43ab0e:	call   QWORD PTR [rip+0x29ab8]        # 0x4645cc
  43ab14:	mov    rax,QWORD PTR [rsp+0x80]
  43ab1c:	mov    DWORD PTR [rax],0xa
  43ab22:	mov    rax,QWORD PTR [rsp+0x78]
  43ab27:	mov    QWORD PTR [rax],rsi
  43ab2a:	mov    rax,0xffffffffffffffff
  43ab31:	jmp    0x43aaee
  43ab33:	nop    DWORD PTR [rax]
  43ab36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ab40:	mov    rax,QWORD PTR [rip+0x29c2d]        # 0x464774
  43ab47:	mov    ecx,edx
  43ab49:	rex.W jmp rax
  43ab4c:	nop    DWORD PTR [rax+0x0]
  43ab50:	push   r12
  43ab52:	push   rbp
  43ab53:	push   rdi
  43ab54:	push   rsi
  43ab55:	push   rbx
  43ab56:	sub    rsp,0x20
  43ab5a:	mov    rbp,QWORD PTR [rip+0x29e83]        # 0x4649e4
  43ab61:	mov    rdi,QWORD PTR [rcx]
  43ab64:	mov    rsi,QWORD PTR [rdx]
  43ab67:	nop    WORD PTR [rax+rax*1+0x0]
  43ab70:	add    rdi,0x1
  43ab74:	movsx  ecx,BYTE PTR [rdi-0x1]
  43ab78:	add    rsi,0x1
  43ab7c:	call   rbp
  43ab7e:	movsx  ecx,BYTE PTR [rsi-0x1]
  43ab82:	mov    ebx,eax
  43ab84:	mov    r12d,eax
  43ab87:	call   rbp
  43ab89:	cmp    bl,0x3d
  43ab8c:	movzx  edx,al
  43ab8f:	je     0x43aba5
  43ab91:	cmp    al,0x3d
  43ab93:	je     0x43abc1
  43ab95:	cmp    bl,al
  43ab97:	sete   cl
  43ab9a:	test   bl,bl
  43ab9c:	setne  al
  43ab9f:	test   cl,al
  43aba1:	jne    0x43ab70
  43aba3:	jmp    0x43abac
  43aba5:	xor    r12d,r12d
  43aba8:	cmp    al,0x3d
  43abaa:	je     0x43abb3
  43abac:	movzx  r12d,r12b
  43abb0:	sub    r12d,edx
  43abb3:	mov    eax,r12d
  43abb6:	add    rsp,0x20
  43abba:	pop    rbx
  43abbb:	pop    rsi
  43abbc:	pop    rdi
  43abbd:	pop    rbp
  43abbe:	pop    r12
  43abc0:	ret    
  43abc1:	xor    edx,edx
  43abc3:	jmp    0x43abac
  43abc5:	nop
  43abc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43abd0:	push   rbp
  43abd1:	push   r15
  43abd3:	push   r14
  43abd5:	push   r13
  43abd7:	push   r12
  43abd9:	push   rdi
  43abda:	push   rsi
  43abdb:	push   rbx
  43abdc:	sub    rsp,0x68
  43abe0:	lea    rbp,[rsp+0x80]
  43abe8:	test   r9,r9
  43abeb:	mov    r12,rcx
  43abee:	mov    edi,edx
  43abf0:	mov    r13,r8
  43abf3:	mov    rsi,r9
  43abf6:	je     0x43b122
  43abfc:	cmp    QWORD PTR [r9],0x0
  43ac00:	je     0x43b122
  43ac06:	mov    r15d,0x1
  43ac0c:	jmp    0x43ac13
  43ac0e:	xchg   ax,ax
  43ac10:	mov    r15,rax
  43ac13:	lea    rax,[r15+0x1]
  43ac17:	mov    r14d,r15d
  43ac1a:	lea    r8,[r15*8+0x0]
  43ac22:	cmp    QWORD PTR [rsi+rax*8-0x8],0x0
  43ac28:	jne    0x43ac10
  43ac2a:	lea    rax,[r8+0x1e]
  43ac2e:	and    rax,0xfffffffffffffff0
  43ac32:	call   0x43d410
  43ac37:	sub    rsp,rax
  43ac3a:	mov    rdx,rsi
  43ac3d:	lea    rbx,[rsp+0x50]
  43ac42:	mov    rcx,rbx
  43ac45:	call   0x449450
  43ac4a:	lea    r9,[rip+0xfffffffffffffeff]        # 0x43ab50
  43ac51:	mov    rdx,r15
  43ac54:	mov    r8d,0x8
  43ac5a:	mov    rcx,rbx
  43ac5d:	mov    r15,rsi
  43ac60:	call   0x449430
  43ac65:	lea    eax,[r14-0x1]
  43ac69:	mov    r14d,0x1
  43ac6f:	lea    rax,[rax*8+0x8]
  43ac77:	lea    rsi,[rsi+rax*1]
  43ac7b:	mov    QWORD PTR [rbp-0x30],rax
  43ac7f:	nop
  43ac80:	mov    rcx,QWORD PTR [r15]
  43ac83:	add    r15,0x8
  43ac87:	call   0x4493c0
  43ac8c:	cmp    r15,rsi
  43ac8f:	lea    r14d,[r14+rax*1+0x1]
  43ac94:	jne    0x43ac80
  43ac96:	movsxd rcx,r14d
  43ac99:	call   0x43baf0
  43ac9e:	mov    r15,QWORD PTR [rbp-0x30]
  43aca2:	mov    QWORD PTR [rbp-0x28],rax
  43aca6:	mov    rcx,rax
  43aca9:	add    r15,rbx
  43acac:	nop    DWORD PTR [rax+0x0]
  43acb0:	mov    rdx,QWORD PTR [rbx]
  43acb3:	add    rbx,0x8
  43acb7:	call   0x43be80
  43acbc:	cmp    rbx,r15
  43acbf:	lea    rcx,[rax+0x1]
  43acc3:	jne    0x43acb0
  43acc5:	mov    BYTE PTR [rcx],0x0
  43acc8:	mov    rcx,r12
  43accb:	call   0x4493c0
  43acd0:	mov    edx,0x2f
  43acd5:	mov    rcx,r12
  43acd8:	mov    rbx,rax
  43acdb:	call   0x4493e8
  43ace0:	test   rax,rax
  43ace3:	je     0x43b12f
  43ace9:	lea    r14,[rip+0x1ecee]        # 0x4599de
  43acf0:	mov    rax,r14
  43acf3:	xor    ecx,ecx
  43acf5:	movzx  edx,BYTE PTR [rax]
  43acf8:	test   dl,dl
  43acfa:	je     0x43ad44
  43acfc:	nop    DWORD PTR [rax+0x0]
  43ad00:	cmp    dl,0x3b
  43ad03:	mov    r8,rax
  43ad06:	jne    0x43ad16
  43ad08:	jmp    0x43aee8
  43ad0d:	nop    DWORD PTR [rax]
  43ad10:	cmp    r9b,0x3b
  43ad14:	je     0x43ad23
  43ad16:	add    r8,0x1
  43ad1a:	movzx  r9d,BYTE PTR [r8]
  43ad1e:	test   r9b,r9b
  43ad21:	jne    0x43ad10
  43ad23:	mov    rdi,r8
  43ad26:	sub    rdi,rax
  43ad29:	cmp    rcx,rdi
  43ad2c:	cmovb  rcx,rdi
  43ad30:	cmp    r9b,0x3b
  43ad34:	je     0x43aee8
  43ad3a:	mov    rax,r8
  43ad3d:	movzx  edx,BYTE PTR [rax]
  43ad40:	test   dl,dl
  43ad42:	jne    0x43ad00
  43ad44:	lea    rcx,[rcx+rbx*1+0x6]
  43ad49:	call   0x43baf0
  43ad4e:	mov    rbx,rax
  43ad51:	movzx  eax,BYTE PTR [r14]
  43ad55:	mov    r15,QWORD PTR [rip+0x29878]        # 0x4645d4
  43ad5c:	test   al,al
  43ad5e:	je     0x43b110
  43ad64:	cmp    al,0x3b
  43ad66:	mov    rsi,r14
  43ad69:	jne    0x43ad74
  43ad6b:	jmp    0x43b110
  43ad70:	cmp    al,0x3b
  43ad72:	je     0x43ad7f
  43ad74:	add    rsi,0x1
  43ad78:	movzx  eax,BYTE PTR [rsi]
  43ad7b:	test   al,al
  43ad7d:	jne    0x43ad70
  43ad7f:	mov    rdi,rsi
  43ad82:	mov    rcx,rbx
  43ad85:	mov    rdx,r14
  43ad88:	sub    rdi,r14
  43ad8b:	mov    r8,rdi
  43ad8e:	call   0x449450
  43ad93:	lea    r9,[rbx+rdi*1]
  43ad97:	cmp    rsi,r14
  43ad9a:	mov    rcx,r9
  43ad9d:	je     0x43ada7
  43ad9f:	add    rcx,0x1
  43ada3:	mov    BYTE PTR [r9],0x5c
  43ada7:	mov    rdx,r12
  43adaa:	mov    r14,rbx
  43adad:	call   0x4493d8
  43adb2:	xor    eax,eax
  43adb4:	cmp    BYTE PTR [rsi],0x3b
  43adb7:	sete   al
  43adba:	add    rsi,rax
  43adbd:	movzx  eax,BYTE PTR [rbx]
  43adc0:	test   al,al
  43adc2:	jne    0x43addc
  43adc4:	jmp    0x43adf0
  43adc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43add0:	add    r14,0x1
  43add4:	movzx  eax,BYTE PTR [r14]
  43add8:	test   al,al
  43adda:	je     0x43adf0
  43addc:	cmp    al,0x2f
  43adde:	jne    0x43add0
  43ade0:	mov    BYTE PTR [r14],0x5c
  43ade4:	add    r14,0x1
  43ade8:	movzx  eax,BYTE PTR [r14]
  43adec:	test   al,al
  43adee:	jne    0x43addc
  43adf0:	lea    rdi,[rip+0x1ec29]        # 0x459a20
  43adf7:	lea    rdx,[rip+0x1ebe1]        # 0x4599df
  43adfe:	jmp    0x43ae10
  43ae00:	add    rdi,0x8
  43ae04:	mov    rdx,QWORD PTR [rdi]
  43ae07:	test   rdx,rdx
  43ae0a:	je     0x43b0f8
  43ae10:	mov    rcx,rbx
  43ae13:	mov    BYTE PTR [r14],0x0
  43ae17:	call   0x4493f0
  43ae1c:	xor    r9d,r9d
  43ae1f:	mov    QWORD PTR [rsp+0x30],0x0
  43ae28:	mov    DWORD PTR [rsp+0x28],0x80
  43ae30:	mov    DWORD PTR [rsp+0x20],0x3
  43ae38:	mov    r8d,0x3
  43ae3e:	mov    edx,0x80000000
  43ae43:	mov    rcx,rbx
  43ae46:	call   r15
  43ae49:	cmp    rax,0xffffffffffffffff
  43ae4d:	je     0x43ae00
  43ae4f:	mov    rcx,rax
  43ae52:	mov    r12,QWORD PTR [rip+0x29773]        # 0x4645cc
  43ae59:	call   r12
  43ae5c:	mov    r14,QWORD PTR [r13+0x0]
  43ae60:	test   r14,r14
  43ae63:	je     0x43b170
  43ae69:	lea    r15,[r13+0x8]
  43ae6d:	xor    ecx,ecx
  43ae6f:	nop
  43ae70:	movzx  edx,BYTE PTR [r14]
  43ae74:	test   dl,dl
  43ae76:	je     0x43b11b
  43ae7c:	lea    r8,[r14-0x1]
  43ae80:	mov    r11d,0xffffffff
  43ae86:	xor    r9d,r9d
  43ae89:	jmp    0x43aea8
  43ae8b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ae90:	movzx  edx,BYTE PTR [r8+0x2]
  43ae95:	lea    rax,[r9+0x1]
  43ae99:	add    r11d,0x1
  43ae9d:	add    r8,0x1
  43aea1:	mov    r9,rax
  43aea4:	test   dl,dl
  43aea6:	je     0x43af00
  43aea8:	cmp    dl,0x22
  43aeab:	movsxd r10,r9d
  43aeae:	jne    0x43ae90
  43aeb0:	cmp    r11d,0xffffffff
  43aeb4:	je     0x43aee2
  43aeb6:	cmp    BYTE PTR [r8],0x5c
  43aeba:	jne    0x43aee2
  43aebc:	lea    rdx,[rcx+0x1]
  43aec0:	mov    ecx,r11d
  43aec3:	mov    rax,r8
  43aec6:	add    rcx,rdx
  43aec9:	jmp    0x43aedd
  43aecb:	nop    DWORD PTR [rax+rax*1+0x0]
  43aed0:	sub    rax,0x1
  43aed4:	cmp    BYTE PTR [rax],0x5c
  43aed7:	jne    0x43aef1
  43aed9:	add    rdx,0x1
  43aedd:	cmp    rdx,rcx
  43aee0:	jne    0x43aed0
  43aee2:	add    rcx,0x1
  43aee6:	jmp    0x43ae90
  43aee8:	add    r8,0x1
  43aeec:	jmp    0x43ad3a
  43aef1:	mov    rcx,rdx
  43aef4:	add    rcx,0x1
  43aef8:	jmp    0x43ae90
  43aefa:	nop    WORD PTR [rax+rax*1+0x0]
  43af00:	cmp    BYTE PTR [r14+r10*1],0x5c
  43af05:	jne    0x43af38
  43af07:	lea    rdx,[rcx+0x1]
  43af0b:	lea    r8,[r14+r10*1-0x1]
  43af10:	lea    rcx,[rdx+r10*1]
  43af14:	jmp    0x43af33
  43af16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43af20:	sub    r8,0x1
  43af24:	cmp    BYTE PTR [r8+0x1],0x5c
  43af29:	jne    0x43b0f0
  43af2f:	add    rdx,0x1
  43af33:	cmp    rdx,rcx
  43af36:	jne    0x43af20
  43af38:	add    r15,0x8
  43af3c:	mov    r14,QWORD PTR [r15-0x8]
  43af40:	lea    rcx,[rcx+rax*1+0x3]
  43af45:	test   r14,r14
  43af48:	jne    0x43ae70
  43af4e:	call   0x43baf0
  43af53:	mov    r11,QWORD PTR [r13+0x0]
  43af57:	test   r11,r11
  43af5a:	je     0x43b184
  43af60:	add    r13,0x8
  43af64:	mov    rcx,rax
  43af67:	nop    WORD PTR [rax+rax*1+0x0]
  43af70:	mov    BYTE PTR [rcx],0x22
  43af73:	movzx  r10d,BYTE PTR [r11]
  43af77:	lea    r8,[rcx+0x1]
  43af7b:	test   r10b,r10b
  43af7e:	je     0x43b0e2
  43af84:	lea    rcx,[r11-0x1]
  43af88:	mov    r14d,0xffffffff
  43af8e:	jmp    0x43afad
  43af90:	movzx  r10d,BYTE PTR [rcx+0x1]
  43af95:	add    rcx,0x1
  43af99:	lea    r8,[r9+0x1]
  43af9d:	mov    r14d,edx
  43afa0:	mov    BYTE PTR [r9],r10b
  43afa3:	movzx  r10d,BYTE PTR [rcx+0x1]
  43afa8:	test   r10b,r10b
  43afab:	je     0x43b000
  43afad:	cmp    r10b,0x22
  43afb1:	lea    edx,[r14+0x1]
  43afb5:	mov    r9,r8
  43afb8:	jne    0x43af90
  43afba:	cmp    r14d,0xffffffff
  43afbe:	je     0x43aff2
  43afc0:	cmp    BYTE PTR [rcx],0x5c
  43afc3:	jne    0x43aff2
  43afc5:	lea    r10,[r8+r14*1+0x1]
  43afca:	mov    r9,rcx
  43afcd:	jmp    0x43afda
  43afcf:	nop
  43afd0:	sub    r9,0x1
  43afd4:	cmp    BYTE PTR [r9],0x5c
  43afd8:	jne    0x43aff2
  43afda:	add    r8,0x1
  43afde:	mov    BYTE PTR [r8-0x1],0x5c
  43afe3:	cmp    r8,r10
  43afe6:	jne    0x43afd0
  43afe8:	lea    r9,[r10+0x1]
  43afec:	mov    BYTE PTR [r10],0x5c
  43aff0:	jmp    0x43af90
  43aff2:	mov    r10,r8
  43aff5:	lea    r9,[r10+0x1]
  43aff9:	mov    BYTE PTR [r10],0x5c
  43affd:	jmp    0x43af90
  43afff:	nop
  43b000:	cmp    edx,0xffffffff
  43b003:	je     0x43b0e2
  43b009:	movsxd rcx,edx
  43b00c:	cmp    BYTE PTR [r11+rcx*1],0x5c
  43b011:	jne    0x43b0e2
  43b017:	mov    edx,edx
  43b019:	lea    rcx,[r11+rcx*1-0x1]
  43b01e:	lea    rdx,[r8+rdx*1+0x1]
  43b023:	jmp    0x43b033
  43b025:	sub    rcx,0x1
  43b029:	cmp    BYTE PTR [rcx+0x1],0x5c
  43b02d:	jne    0x43b0e2
  43b033:	add    r8,0x1
  43b037:	mov    BYTE PTR [r8-0x1],0x5c
  43b03c:	cmp    r8,rdx
  43b03f:	jne    0x43b025
  43b041:	add    r13,0x8
  43b045:	mov    r11,QWORD PTR [r13-0x8]
  43b049:	mov    BYTE PTR [rdx],0x22
  43b04c:	lea    rcx,[rdx+0x2]
  43b050:	mov    BYTE PTR [rdx+0x1],0x20
  43b054:	test   r11,r11
  43b057:	jne    0x43af70
  43b05d:	mov    rsi,QWORD PTR [rbp+0x60]
  43b061:	mov    rdx,QWORD PTR [rbp+0x58]
  43b065:	xor    r9d,r9d
  43b068:	mov    BYTE PTR [rcx-0x1],0x0
  43b06c:	xor    r8d,r8d
  43b06f:	mov    QWORD PTR [rsp+0x38],0x0
  43b078:	mov    DWORD PTR [rsp+0x20],0x1
  43b080:	mov    rcx,rbx
  43b083:	mov    QWORD PTR [rsp+0x48],rsi
  43b088:	mov    QWORD PTR [rsp+0x40],rdx
  43b08d:	mov    rsi,QWORD PTR [rbp-0x28]
  43b091:	mov    edx,DWORD PTR [rbp+0x50]
  43b094:	mov    QWORD PTR [rsp+0x30],rsi
  43b099:	mov    DWORD PTR [rsp+0x28],edx
  43b09d:	mov    rdx,rax
  43b0a0:	call   QWORD PTR [rip+0x29536]        # 0x4645dc
  43b0a6:	test   eax,eax
  43b0a8:	je     0x43b1aa
  43b0ae:	mov    rax,QWORD PTR [rbp+0x60]
  43b0b2:	mov    rcx,QWORD PTR [rax+0x8]
  43b0b6:	call   r12
  43b0b9:	mov    rcx,rbx
  43b0bc:	call   0x4494c8
  43b0c1:	mov    rcx,QWORD PTR [rbp-0x28]
  43b0c5:	call   0x4494c8
  43b0ca:	mov    rax,QWORD PTR [rbp+0x60]
  43b0ce:	mov    rax,QWORD PTR [rax]
  43b0d1:	lea    rsp,[rbp-0x18]
  43b0d5:	pop    rbx
  43b0d6:	pop    rsi
  43b0d7:	pop    rdi
  43b0d8:	pop    r12
  43b0da:	pop    r13
  43b0dc:	pop    r14
  43b0de:	pop    r15
  43b0e0:	pop    rbp
  43b0e1:	ret    
  43b0e2:	mov    rdx,r8
  43b0e5:	jmp    0x43b041
  43b0ea:	nop    WORD PTR [rax+rax*1+0x0]
  43b0f0:	mov    rcx,rdx
  43b0f3:	jmp    0x43af38
  43b0f8:	movzx  edx,BYTE PTR [rsi]
  43b0fb:	test   dl,dl
  43b0fd:	je     0x43b18c
  43b103:	mov    eax,edx
  43b105:	mov    r14,rsi
  43b108:	test   al,al
  43b10a:	jne    0x43ad64
  43b110:	mov    rsi,r14
  43b113:	mov    rcx,rbx
  43b116:	jmp    0x43ada7
  43b11b:	xor    eax,eax
  43b11d:	jmp    0x43af38
  43b122:	mov    QWORD PTR [rbp-0x28],0x0
  43b12a:	jmp    0x43acc8
  43b12f:	mov    edx,0x5c
  43b134:	mov    rcx,r12
  43b137:	call   0x4493e8
  43b13c:	test   rax,rax
  43b13f:	jne    0x43ace9
  43b145:	test   edi,edi
  43b147:	je     0x43ace9
  43b14d:	lea    rcx,[rip+0x1e890]        # 0x4599e4
  43b154:	call   0x449498
  43b159:	test   rax,rax
  43b15c:	mov    r14,rax
  43b15f:	jne    0x43acf0
  43b165:	jmp    0x43ace9
  43b16a:	nop    WORD PTR [rax+rax*1+0x0]
  43b170:	xor    ecx,ecx
  43b172:	call   0x43baf0
  43b177:	mov    r11,QWORD PTR [r13+0x0]
  43b17b:	test   r11,r11
  43b17e:	jne    0x43af60
  43b184:	mov    rcx,rax
  43b187:	jmp    0x43b05d
  43b18c:	mov    rcx,rbx
  43b18f:	mov    QWORD PTR [rbp-0x30],rax
  43b193:	call   0x4494c8
  43b198:	mov    rcx,QWORD PTR [rbp-0x28]
  43b19c:	call   0x4494c8
  43b1a1:	mov    rax,QWORD PTR [rbp-0x30]
  43b1a5:	jmp    0x43b0d1
  43b1aa:	mov    rcx,QWORD PTR [rbp-0x28]
  43b1ae:	call   0x4494c8
  43b1b3:	mov    rcx,rbx
  43b1b6:	call   0x4494c8
  43b1bb:	mov    rax,0xffffffffffffffff
  43b1c2:	jmp    0x43b0d1
  43b1c7:	nop    WORD PTR [rax+rax*1+0x0]
  43b1d0:	mov    rax,QWORD PTR [rip+0x29605]        # 0x4647dc
  43b1d7:	cmp    r8d,0x1
  43b1db:	mov    rcx,rdx
  43b1de:	mov    r8d,0x180
  43b1e4:	sbb    edx,edx
  43b1e6:	and    edx,0xffffc000
  43b1ec:	add    edx,0x8301
  43b1f2:	rex.W jmp rax
  43b1f5:	nop
  43b1f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b200:	mov    rax,QWORD PTR [rip+0x295d5]        # 0x4647dc
  43b207:	cmp    r8d,0x1
  43b20b:	mov    rcx,rdx
  43b20e:	sbb    edx,edx
  43b210:	and    edx,0xffffc000
  43b216:	add    edx,0x8000
  43b21c:	rex.W jmp rax
  43b21f:	nop
  43b220:	push   r15
  43b222:	push   r14
  43b224:	push   r13
  43b226:	push   r12
  43b228:	push   rbp
  43b229:	push   rdi
  43b22a:	push   rsi
  43b22b:	push   rbx
  43b22c:	sub    rsp,0x2a8
  43b233:	mov    rbp,QWORD PTR [rip+0x29542]        # 0x46477c
  43b23a:	mov    ecx,DWORD PTR [rsp+0x318]
  43b241:	mov    ebx,edx
  43b243:	mov    esi,edx
  43b245:	mov    QWORD PTR [rsp+0x300],r8
  43b24d:	shr    ebx,0x3
  43b250:	mov    QWORD PTR [rsp+0x308],r9
  43b258:	xor    ebx,0x1
  43b25b:	and    ebx,0x1
  43b25e:	call   rbp
  43b260:	mov    ecx,DWORD PTR [rsp+0x320]
  43b267:	mov    DWORD PTR [rsp+0x40],eax
  43b26b:	call   rbp
  43b26d:	test   bl,bl
  43b26f:	mov    DWORD PTR [rsp+0x44],eax
  43b273:	jne    0x43b4b0
  43b279:	mov    rbp,QWORD PTR [rip+0x29534]        # 0x4647b4
  43b280:	mov    ecx,DWORD PTR [rsp+0x40]
  43b284:	call   rbp
  43b286:	mov    ecx,DWORD PTR [rsp+0x44]
  43b28a:	mov    r15,rax
  43b28d:	call   rbp
  43b28f:	mov    rbp,rax
  43b292:	mov    r14,rax
  43b295:	mov    DWORD PTR [rsp+0xf0],0x94
  43b2a0:	lea    rcx,[rsp+0xf0]
  43b2a8:	xor    r12d,r12d
  43b2ab:	call   QWORD PTR [rip+0x293b3]        # 0x464664
  43b2b1:	cmp    DWORD PTR [rsp+0x100],0x1
  43b2b9:	je     0x43b307
  43b2bb:	xor    r9d,r9d
  43b2be:	mov    QWORD PTR [rsp+0x30],0x0
  43b2c7:	mov    DWORD PTR [rsp+0x28],0x80
  43b2cf:	mov    DWORD PTR [rsp+0x20],0x3
  43b2d7:	mov    r8d,0x2
  43b2dd:	mov    edx,0x40000000
  43b2e2:	lea    rcx,[rip+0x1e700]        # 0x4599e9
  43b2e9:	mov    r12d,0x8000000
  43b2ef:	call   QWORD PTR [rip+0x292df]        # 0x4645d4
  43b2f5:	cmp    rax,0xffffffffffffffff
  43b2f9:	je     0x43b307
  43b2fb:	xor    r12d,r12d
  43b2fe:	mov    rcx,rax
  43b301:	call   QWORD PTR [rip+0x292c5]        # 0x4645cc
  43b307:	lea    r13,[rsp+0x80]
  43b30f:	xor    eax,eax
  43b311:	mov    ecx,0xd
  43b316:	shr    esi,1
  43b318:	mov    r9,QWORD PTR [rsp+0x310]
  43b320:	mov    r8,QWORD PTR [rsp+0x308]
  43b328:	mov    rdi,r13
  43b32b:	mov    edx,esi
  43b32d:	rep stos QWORD PTR es:[rdi],rax
  43b330:	mov    QWORD PTR [rsp+0xd0],r15
  43b338:	mov    rcx,QWORD PTR [rsp+0x300]
  43b340:	lea    r15,[rsp+0x60]
  43b345:	and    edx,0x1
  43b348:	mov    QWORD PTR [rsp+0x28],r13
  43b34d:	mov    DWORD PTR [rsp+0x20],r12d
  43b352:	mov    QWORD PTR [rsp+0x30],r15
  43b357:	mov    QWORD PTR [rsp+0xd8],r14
  43b35f:	mov    QWORD PTR [rsp+0xe0],rbp
  43b367:	mov    DWORD PTR [rsp+0x80],0x68
  43b372:	mov    DWORD PTR [rsp+0xbc],0x100
  43b37d:	call   0x43abd0
  43b382:	cmp    rax,0xffffffffffffffff
  43b386:	mov    rbp,rax
  43b389:	mov    r14,QWORD PTR [rip+0x293e4]        # 0x464774
  43b390:	je     0x43b3f0
  43b392:	mov    eax,DWORD PTR [rsp+0x318]
  43b399:	test   eax,eax
  43b39b:	jne    0x43b4f2
  43b3a1:	cmp    DWORD PTR [rsp+0x320],0x1
  43b3a9:	je     0x43b3b5
  43b3ab:	mov    ecx,DWORD PTR [rsp+0x320]
  43b3b2:	call   r14
  43b3b5:	cmp    DWORD PTR [rsp+0x50],0x2
  43b3ba:	je     0x43b480
  43b3c0:	test   bl,bl
  43b3c2:	je     0x43b480
  43b3c8:	mov    ecx,DWORD PTR [rsp+0x50]
  43b3cc:	call   r14
  43b3cf:	mov    ecx,DWORD PTR [rsp+0x40]
  43b3d3:	call   r14
  43b3d6:	mov    ecx,DWORD PTR [rsp+0x44]
  43b3da:	call   r14
  43b3dd:	mov    ecx,DWORD PTR [rsp+0x328]
  43b3e4:	call   r14
  43b3e7:	jmp    0x43b496
  43b3ec:	nop    DWORD PTR [rax+0x0]
  43b3f0:	mov    rax,QWORD PTR [rip+0x2938d]        # 0x464784
  43b3f7:	mov    QWORD PTR [rsp+0x58],rax
  43b3fc:	call   rax
  43b3fe:	mov    eax,DWORD PTR [rax]
  43b400:	xor    edx,edx
  43b402:	mov    rcx,QWORD PTR [rsp+0x300]
  43b40a:	mov    DWORD PTR [rsp+0x54],eax
  43b40e:	call   QWORD PTR [rip+0x293c8]        # 0x4647dc
  43b414:	test   eax,eax
  43b416:	mov    esi,eax
  43b418:	js     0x43b449
  43b41a:	lea    rax,[rsp+0x190]
  43b422:	mov    r8d,0x108
  43b428:	mov    ecx,esi
  43b42a:	mov    rdx,rax
  43b42d:	mov    QWORD PTR [rsp+0x48],rax
  43b432:	call   QWORD PTR [rip+0x293b4]        # 0x4647ec
  43b438:	movsxd rdi,eax
  43b43b:	mov    ecx,esi
  43b43d:	call   r14
  43b440:	cmp    edi,0x3
  43b443:	jg     0x43b501
  43b449:	mov    rax,QWORD PTR [rsp+0x58]
  43b44e:	call   rax
  43b450:	mov    edi,DWORD PTR [rsp+0x54]
  43b454:	mov    DWORD PTR [rax],edi
  43b456:	mov    rax,QWORD PTR [rsp+0x340]
  43b45e:	lea    rdi,[rip+0x1e58f]        # 0x4599f4
  43b465:	mov    DWORD PTR [rax],0x2
  43b46b:	mov    rax,QWORD PTR [rsp+0x338]
  43b473:	mov    QWORD PTR [rax],rdi
  43b476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b480:	mov    ecx,DWORD PTR [rsp+0x40]
  43b484:	call   r14
  43b487:	mov    ecx,DWORD PTR [rsp+0x44]
  43b48b:	call   r14
  43b48e:	test   bl,bl
  43b490:	jne    0x43b3dd
  43b496:	mov    rax,rbp
  43b499:	add    rsp,0x2a8
  43b4a0:	pop    rbx
  43b4a1:	pop    rsi
  43b4a2:	pop    rdi
  43b4a3:	pop    rbp
  43b4a4:	pop    r12
  43b4a6:	pop    r13
  43b4a8:	pop    r14
  43b4aa:	pop    r15
  43b4ac:	ret    
  43b4ad:	nop    DWORD PTR [rax]
  43b4b0:	mov    ecx,DWORD PTR [rsp+0x328]
  43b4b7:	call   rbp
  43b4b9:	mov    edi,eax
  43b4bb:	mov    rbp,QWORD PTR [rip+0x292f2]        # 0x4647b4
  43b4c2:	mov    ecx,DWORD PTR [rsp+0x40]
  43b4c6:	call   rbp
  43b4c8:	mov    ecx,DWORD PTR [rsp+0x44]
  43b4cc:	mov    r15,rax
  43b4cf:	call   rbp
  43b4d1:	mov    ecx,edi
  43b4d3:	mov    r14,rax
  43b4d6:	call   rbp
  43b4d8:	mov    rbp,rax
  43b4db:	mov    eax,DWORD PTR [rsp+0x328]
  43b4e2:	mov    DWORD PTR [rsp+0x328],edi
  43b4e9:	mov    DWORD PTR [rsp+0x50],eax
  43b4ed:	jmp    0x43b295
  43b4f2:	mov    ecx,DWORD PTR [rsp+0x318]
  43b4f9:	call   r14
  43b4fc:	jmp    0x43b3a1
  43b501:	mov    rsi,QWORD PTR [rsp+0x48]
  43b506:	mov    edx,0xa
  43b50b:	mov    BYTE PTR [rsp+rdi*1+0x190],0x0
  43b513:	mov    rcx,rsi
  43b516:	call   0x4493e8
  43b51b:	test   rax,rax
  43b51e:	je     0x43b449
  43b524:	lea    rdi,[rip+0x1e4c6]        # 0x4599f1
  43b52b:	mov    ecx,0x2
  43b530:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43b532:	jne    0x43b449
  43b538:	nop    DWORD PTR [rax+rax*1+0x0]
  43b540:	mov    BYTE PTR [rax],0x0
  43b543:	sub    rax,0x1
  43b547:	movzx  edx,BYTE PTR [rax]
  43b54a:	mov    ecx,edx
  43b54c:	and    ecx,0xfffffffb
  43b54f:	cmp    cl,0x9
  43b552:	je     0x43b540
  43b554:	cmp    dl,0x20
  43b557:	je     0x43b540
  43b559:	movzx  eax,BYTE PTR [rsp+0x192]
  43b561:	cmp    al,0x9
  43b563:	je     0x43b653
  43b569:	cmp    al,0x20
  43b56b:	mov    rdi,QWORD PTR [rsp+0x48]
  43b570:	sete   al
  43b573:	test   al,al
  43b575:	lea    rsi,[rdi+0x2]
  43b579:	jne    0x43b653
  43b57f:	mov    rax,rsi
  43b582:	jmp    0x43b587
  43b584:	mov    BYTE PTR [rax],0x5c
  43b587:	mov    edx,0x2f
  43b58c:	mov    rcx,rax
  43b58f:	call   0x4493e8
  43b594:	test   rax,rax
  43b597:	jne    0x43b584
  43b599:	mov    rax,QWORD PTR [rsp+0x308]
  43b5a1:	cmp    QWORD PTR [rax],0x0
  43b5a5:	je     0x43b671
  43b5ab:	nop    DWORD PTR [rax+rax*1+0x0]
  43b5b0:	add    rax,0x8
  43b5b4:	cmp    QWORD PTR [rax],0x0
  43b5b8:	jne    0x43b5b0
  43b5ba:	sub    rax,QWORD PTR [rsp+0x308]
  43b5c2:	sar    rax,0x3
  43b5c6:	lea    ecx,[rax+0x2]
  43b5c9:	movsxd rcx,ecx
  43b5cc:	shl    rcx,0x3
  43b5d0:	lea    r8,[rcx-0x8]
  43b5d4:	mov    QWORD PTR [rsp+0x48],r8
  43b5d9:	call   0x43baf0
  43b5de:	mov    r8,QWORD PTR [rsp+0x48]
  43b5e3:	mov    rdx,QWORD PTR [rsp+0x308]
  43b5eb:	lea    rcx,[rax+0x8]
  43b5ef:	mov    QWORD PTR [rax],rsi
  43b5f2:	mov    rdi,rax
  43b5f5:	call   0x449450
  43b5fa:	mov    rcx,rsi
  43b5fd:	mov    edx,0x5c
  43b602:	call   0x449398
  43b607:	mov    r9,QWORD PTR [rsp+0x310]
  43b60f:	add    rax,0x1
  43b613:	mov    r8,rdi
  43b616:	mov    rcx,rax
  43b619:	mov    edx,0x1
  43b61e:	mov    QWORD PTR [rsp+0x30],r15
  43b623:	cmove  rcx,rsi
  43b627:	mov    QWORD PTR [rsp+0x28],r13
  43b62c:	mov    DWORD PTR [rsp+0x20],r12d
  43b631:	call   0x43abd0
  43b636:	mov    rcx,rdi
  43b639:	mov    rsi,rax
  43b63c:	call   0x4494c8
  43b641:	cmp    rsi,0xffffffffffffffff
  43b645:	je     0x43b449
  43b64b:	mov    rbp,rsi
  43b64e:	jmp    0x43b392
  43b653:	mov    rsi,QWORD PTR [rsp+0x48]
  43b658:	add    rsi,0x2
  43b65c:	add    rsi,0x1
  43b660:	movzx  eax,BYTE PTR [rsi]
  43b663:	cmp    al,0x9
  43b665:	je     0x43b65c
  43b667:	cmp    al,0x20
  43b669:	jne    0x43b57f
  43b66f:	jmp    0x43b65c
  43b671:	mov    r8d,0x8
  43b677:	mov    ecx,0x10
  43b67c:	jmp    0x43b5d4
  43b681:	nop    DWORD PTR [rax+rax*1+0x0]
  43b686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b690:	lea    r9,[rip+0x1e3e9]        # 0x459a80
  43b697:	jmp    0x439e20
  43b69c:	nop
  43b69d:	nop
  43b69e:	nop
  43b69f:	nop
  43b6a0:	push   rdi
  43b6a1:	push   rsi
  43b6a2:	push   rbx
  43b6a3:	sub    rsp,0x20
  43b6a7:	mov    edx,DWORD PTR [rip+0x2709f]        # 0x46274c
  43b6ad:	test   edx,edx
  43b6af:	jne    0x43b6dd
  43b6b1:	lea    rax,[rip+0x1e908]        # 0x459fc0
  43b6b8:	nop    DWORD PTR [rax+rax*1+0x0]
  43b6c0:	mov    ecx,DWORD PTR [rax]
  43b6c2:	lea    r8d,[rcx+0x1]
  43b6c6:	cmp    ecx,edx
  43b6c8:	cmovge edx,r8d
  43b6cc:	add    rax,0x18
  43b6d0:	cmp    QWORD PTR [rax+0x8],0x0
  43b6d5:	jne    0x43b6c0
  43b6d7:	mov    DWORD PTR [rip+0x2706f],edx        # 0x46274c
  43b6dd:	cmp    QWORD PTR [rip+0x2706b],0x0        # 0x462750
  43b6e5:	je     0x43b760
  43b6e7:	cmp    QWORD PTR [rip+0x27051],0x0        # 0x462740
  43b6ef:	je     0x43b700
  43b6f1:	add    rsp,0x20
  43b6f5:	pop    rbx
  43b6f6:	pop    rsi
  43b6f7:	pop    rdi
  43b6f8:	ret    
  43b6f9:	nop    DWORD PTR [rax+0x0]
  43b700:	mov    edi,DWORD PTR [rip+0x27046]        # 0x46274c
  43b706:	lea    esi,[rdi*8+0x0]
  43b70d:	movsxd rsi,esi
  43b710:	mov    rcx,rsi
  43b713:	call   0x449468
  43b718:	test   rax,rax
  43b71b:	mov    rbx,rax
  43b71e:	mov    QWORD PTR [rip+0x2701b],rax        # 0x462740
  43b725:	je     0x43b6f1
  43b727:	xor    edx,edx
  43b729:	mov    r8,rsi
  43b72c:	mov    rcx,rax
  43b72f:	call   0x449440
  43b734:	lea    rdx,[rip+0x1e885]        # 0x459fc0
  43b73b:	mov    DWORD PTR [rip+0x27007],edi        # 0x462748
  43b741:	movsxd r8,DWORD PTR [rdx]
  43b744:	mov    r9,QWORD PTR [rdx+0x10]
  43b748:	add    rdx,0x18
  43b74c:	cmp    QWORD PTR [rdx+0x8],0x0
  43b751:	mov    QWORD PTR [rbx+r8*8],r9
  43b755:	jne    0x43b741
  43b757:	jmp    0x43b6f1
  43b759:	nop    DWORD PTR [rax+0x0]
  43b760:	mov    eax,DWORD PTR [rip+0x26fe6]        # 0x46274c
  43b766:	lea    esi,[rax*8+0x0]
  43b76d:	movsxd rsi,esi
  43b770:	mov    rcx,rsi
  43b773:	call   0x449468
  43b778:	test   rax,rax
  43b77b:	mov    rbx,rax
  43b77e:	mov    QWORD PTR [rip+0x26fcb],rax        # 0x462750
  43b785:	je     0x43b6e7
  43b78b:	mov    r8,rsi
  43b78e:	xor    edx,edx
  43b790:	mov    rcx,rax
  43b793:	call   0x449440
  43b798:	lea    r8,[rip+0x1e761]        # 0x459f00
  43b79f:	lea    rdx,[rip+0x1e81a]        # 0x459fc0
  43b7a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b7b0:	movsxd r9,DWORD PTR [rdx]
  43b7b3:	add    rdx,0x18
  43b7b7:	mov    QWORD PTR [rbx+r9*8],r8
  43b7bb:	mov    r8,QWORD PTR [rdx+0x8]
  43b7bf:	test   r8,r8
  43b7c2:	jne    0x43b7b0
  43b7c4:	jmp    0x43b6e7
  43b7c9:	nop    DWORD PTR [rax+0x0]
  43b7d0:	sub    rsp,0x28
  43b7d4:	cmp    QWORD PTR [rip+0x26f74],0x0        # 0x462750
  43b7dc:	je     0x43b800
  43b7de:	mov    eax,DWORD PTR [rip+0x26f68]        # 0x46274c
  43b7e4:	cmp    DWORD PTR [rip+0x26f5e],eax        # 0x462748
  43b7ea:	cmovge eax,DWORD PTR [rip+0x26f57]        # 0x462748
  43b7f1:	sub    eax,0x1
  43b7f4:	add    rsp,0x28
  43b7f8:	ret    
  43b7f9:	nop    DWORD PTR [rax+0x0]
  43b800:	call   0x43b6a0
  43b805:	jmp    0x43b7de
  43b807:	nop    WORD PTR [rax+rax*1+0x0]
  43b810:	sub    rsp,0x38
  43b814:	cmp    QWORD PTR [rip+0x26f34],0x0        # 0x462750
  43b81c:	je     0x43b880
  43b81e:	test   ecx,ecx
  43b820:	js     0x43b872
  43b822:	cmp    ecx,DWORD PTR [rip+0x26f20]        # 0x462748
  43b828:	jge    0x43b872
  43b82a:	mov    rax,QWORD PTR [rip+0x26f0f]        # 0x462740
  43b831:	test   rax,rax
  43b834:	je     0x43b850
  43b836:	movsxd rdx,ecx
  43b839:	mov    rax,QWORD PTR [rax+rdx*8]
  43b83d:	test   rax,rax
  43b840:	je     0x43b850
  43b842:	add    rsp,0x38
  43b846:	ret    
  43b847:	nop    WORD PTR [rax+rax*1+0x0]
  43b850:	mov    r8d,ecx
  43b853:	lea    rdx,[rip+0x1e6ad]        # 0x459f07
  43b85a:	lea    rcx,[rip+0x26ebf]        # 0x462720
  43b861:	call   0x449400
  43b866:	lea    rax,[rip+0x26eb3]        # 0x462720
  43b86d:	add    rsp,0x38
  43b871:	ret    
  43b872:	xor    eax,eax
  43b874:	add    rsp,0x38
  43b878:	ret    
  43b879:	nop    DWORD PTR [rax+0x0]
  43b880:	mov    DWORD PTR [rsp+0x2c],ecx
  43b884:	call   0x43b6a0
  43b889:	mov    ecx,DWORD PTR [rsp+0x2c]
  43b88d:	jmp    0x43b81e
  43b88f:	nop
  43b890:	sub    rsp,0x38
  43b894:	cmp    QWORD PTR [rip+0x26eb4],0x0        # 0x462750
  43b89c:	je     0x43b900
  43b89e:	test   ecx,ecx
  43b8a0:	js     0x43b8f2
  43b8a2:	cmp    ecx,DWORD PTR [rip+0x26ea4]        # 0x46274c
  43b8a8:	jge    0x43b8f2
  43b8aa:	mov    rax,QWORD PTR [rip+0x26e9f]        # 0x462750
  43b8b1:	test   rax,rax
  43b8b4:	je     0x43b8d0
  43b8b6:	movsxd rdx,ecx
  43b8b9:	mov    rax,QWORD PTR [rax+rdx*8]
  43b8bd:	test   rax,rax
  43b8c0:	je     0x43b8d0
  43b8c2:	add    rsp,0x38
  43b8c6:	ret    
  43b8c7:	nop    WORD PTR [rax+rax*1+0x0]
  43b8d0:	mov    r8d,ecx
  43b8d3:	lea    rdx,[rip+0x1e62d]        # 0x459f07
  43b8da:	lea    rcx,[rip+0x26e1f]        # 0x462700
  43b8e1:	call   0x449400
  43b8e6:	lea    rax,[rip+0x26e13]        # 0x462700
  43b8ed:	add    rsp,0x38
  43b8f1:	ret    
  43b8f2:	xor    eax,eax
  43b8f4:	add    rsp,0x38
  43b8f8:	ret    
  43b8f9:	nop    DWORD PTR [rax+0x0]
  43b900:	mov    DWORD PTR [rsp+0x2c],ecx
  43b904:	call   0x43b6a0
  43b909:	mov    ecx,DWORD PTR [rsp+0x2c]
  43b90d:	jmp    0x43b89e
  43b90f:	nop
  43b910:	push   rbp
  43b911:	push   rdi
  43b912:	push   rsi
  43b913:	push   rbx
  43b914:	sub    rsp,0x28
  43b918:	test   rcx,rcx
  43b91b:	je     0x43b95f
  43b91d:	cmp    QWORD PTR [rip+0x26e2b],0x0        # 0x462750
  43b925:	mov    rdi,rcx
  43b928:	je     0x43b96c
  43b92a:	mov    ebp,DWORD PTR [rip+0x26e1c]        # 0x46274c
  43b930:	cmp    ebp,0x0
  43b933:	jle    0x43b95f
  43b935:	mov    rsi,QWORD PTR [rip+0x26e14]        # 0x462750
  43b93c:	xor    ebx,ebx
  43b93e:	xchg   ax,ax
  43b940:	mov    rdx,QWORD PTR [rsi]
  43b943:	test   rdx,rdx
  43b946:	je     0x43b954
  43b948:	mov    rcx,rdi
  43b94b:	call   0x4493e0
  43b950:	test   eax,eax
  43b952:	je     0x43b961
  43b954:	add    ebx,0x1
  43b957:	add    rsi,0x8
  43b95b:	cmp    ebx,ebp
  43b95d:	jne    0x43b940
  43b95f:	xor    ebx,ebx
  43b961:	mov    eax,ebx
  43b963:	add    rsp,0x28
  43b967:	pop    rbx
  43b968:	pop    rsi
  43b969:	pop    rdi
  43b96a:	pop    rbp
  43b96b:	ret    
  43b96c:	call   0x43b6a0
  43b971:	jmp    0x43b92a
  43b973:	nop    DWORD PTR [rax]
  43b976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b980:	push   rsi
  43b981:	push   rbx
  43b982:	sub    rsp,0x38
  43b986:	cmp    QWORD PTR [rip+0x26dc2],0x0        # 0x462750
  43b98e:	mov    rbx,rdx
  43b991:	je     0x43b9f0
  43b993:	test   ecx,ecx
  43b995:	jle    0x43b99f
  43b997:	cmp    ecx,DWORD PTR [rip+0x26dab]        # 0x462748
  43b99d:	jl     0x43b9c0
  43b99f:	call   QWORD PTR [rip+0x28d8f]        # 0x464734
  43b9a5:	lea    rdx,[rip+0x1e565]        # 0x459f11
  43b9ac:	lea    rcx,[rax+0x60]
  43b9b0:	mov    r8,rbx
  43b9b3:	add    rsp,0x38
  43b9b7:	pop    rbx
  43b9b8:	pop    rsi
  43b9b9:	jmp    0x4494e8
  43b9be:	xchg   ax,ax
  43b9c0:	mov    rax,QWORD PTR [rip+0x26d79]        # 0x462740
  43b9c7:	movsxd rcx,ecx
  43b9ca:	mov    rsi,QWORD PTR [rax+rcx*8]
  43b9ce:	call   QWORD PTR [rip+0x28d60]        # 0x464734
  43b9d4:	lea    rdx,[rip+0x1e54a]        # 0x459f25
  43b9db:	lea    rcx,[rax+0x60]
  43b9df:	mov    r8,rbx
  43b9e2:	mov    r9,rsi
  43b9e5:	add    rsp,0x38
  43b9e9:	pop    rbx
  43b9ea:	pop    rsi
  43b9eb:	jmp    0x4494e8
  43b9f0:	mov    DWORD PTR [rsp+0x2c],ecx
  43b9f4:	call   0x43b6a0
  43b9f9:	mov    ecx,DWORD PTR [rsp+0x2c]
  43b9fd:	jmp    0x43b993
  43b9ff:	nop
  43ba00:	push   rbx
  43ba01:	sub    rsp,0x60
  43ba05:	mov    rbx,rcx
  43ba08:	lea    rdx,[rsp+0x20]
  43ba0d:	call   QWORD PTR [rip+0x28ff1]        # 0x464a04
  43ba13:	test   eax,eax
  43ba15:	mov    r8d,0x1
  43ba1b:	jne    0x43ba2e
  43ba1d:	movzx  edx,WORD PTR [rsp+0x26]
  43ba22:	and    dx,0xf000
  43ba27:	cmp    dx,0x8000
  43ba2c:	je     0x43ba40
  43ba2e:	mov    eax,r8d
  43ba31:	add    rsp,0x60
  43ba35:	pop    rbx
  43ba36:	ret    
  43ba37:	nop    WORD PTR [rax+rax*1+0x0]
  43ba40:	mov    rcx,rbx
  43ba43:	call   0x449340
  43ba48:	mov    r8d,eax
  43ba4b:	mov    eax,r8d
  43ba4e:	add    rsp,0x60
  43ba52:	pop    rbx
  43ba53:	ret    
  43ba54:	nop
  43ba55:	nop
  43ba56:	nop
  43ba57:	nop
  43ba58:	nop
  43ba59:	nop
  43ba5a:	nop
  43ba5b:	nop
  43ba5c:	nop
  43ba5d:	nop
  43ba5e:	nop
  43ba5f:	nop
  43ba60:	sub    rsp,0x38
  43ba64:	mov    rax,QWORD PTR [rip+0x28195]        # 0x463c00
  43ba6b:	test   rax,rax
  43ba6e:	je     0x43ba7a
  43ba70:	mov    DWORD PTR [rsp+0x2c],ecx
  43ba74:	call   rax
  43ba76:	mov    ecx,DWORD PTR [rsp+0x2c]
  43ba7a:	call   0x449520
  43ba7f:	nop
  43ba80:	mov    QWORD PTR [rip+0xf709],rcx        # 0x44b190
  43ba87:	ret    
  43ba88:	nop    DWORD PTR [rax+rax*1+0x0]
  43ba90:	push   rdi
  43ba91:	push   rsi
  43ba92:	push   rbx
  43ba93:	sub    rsp,0x30
  43ba97:	mov    rsi,QWORD PTR [rip+0xf6f2]        # 0x44b190
  43ba9e:	lea    rax,[rip+0x1e5db]        # 0x45a080
  43baa5:	lea    rbx,[rip+0x1e5d7]        # 0x45a083
  43baac:	mov    rdi,rcx
  43baaf:	cmp    BYTE PTR [rsi],0x0
  43bab2:	cmovne rbx,rax
  43bab6:	call   QWORD PTR [rip+0x28c78]        # 0x464734
  43babc:	lea    rdx,[rip+0x1e5c5]        # 0x45a088
  43bac3:	lea    rcx,[rax+0x60]
  43bac7:	mov    DWORD PTR [rsp+0x20],edi
  43bacb:	mov    r9,rbx
  43bace:	mov    r8,rsi
  43bad1:	call   0x4494e8
  43bad6:	mov    ecx,0x1
  43badb:	call   0x43ba60
  43bae0:	nop
  43bae1:	nop    DWORD PTR [rax+rax*1+0x0]
  43bae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43baf0:	push   rbx
  43baf1:	sub    rsp,0x20
  43baf5:	mov    eax,0x1
  43bafa:	test   rcx,rcx
  43bafd:	mov    rbx,rcx
  43bb00:	cmove  rbx,rax
  43bb04:	mov    rcx,rbx
  43bb07:	call   0x449468
  43bb0c:	test   rax,rax
  43bb0f:	je     0x43bb17
  43bb11:	add    rsp,0x20
  43bb15:	pop    rbx
  43bb16:	ret    
  43bb17:	mov    rcx,rbx
  43bb1a:	call   0x43ba90
  43bb1f:	nop
  43bb20:	push   rsi
  43bb21:	push   rbx
  43bb22:	sub    rsp,0x28
  43bb26:	test   rcx,rcx
  43bb29:	mov    rbx,rcx
  43bb2c:	mov    rsi,rdx
  43bb2f:	je     0x43bb50
  43bb31:	test   rdx,rdx
  43bb34:	je     0x43bb50
  43bb36:	mov    rdx,rsi
  43bb39:	mov    rcx,rbx
  43bb3c:	call   0x449528
  43bb41:	test   rax,rax
  43bb44:	je     0x43bb5c
  43bb46:	add    rsp,0x28
  43bb4a:	pop    rbx
  43bb4b:	pop    rsi
  43bb4c:	ret    
  43bb4d:	nop    DWORD PTR [rax]
  43bb50:	mov    esi,0x1
  43bb55:	mov    ebx,0x1
  43bb5a:	jmp    0x43bb36
  43bb5c:	mov    rcx,rsi
  43bb5f:	imul   rcx,rbx
  43bb63:	call   0x43ba90
  43bb68:	nop
  43bb69:	nop    DWORD PTR [rax+0x0]
  43bb70:	push   rbx
  43bb71:	sub    rsp,0x20
  43bb75:	mov    eax,0x1
  43bb7a:	test   rdx,rdx
  43bb7d:	mov    rbx,rdx
  43bb80:	cmove  rbx,rax
  43bb84:	test   rcx,rcx
  43bb87:	je     0x43bba0
  43bb89:	mov    rdx,rbx
  43bb8c:	call   0x449420
  43bb91:	test   rax,rax
  43bb94:	je     0x43bbaa
  43bb96:	add    rsp,0x20
  43bb9a:	pop    rbx
  43bb9b:	ret    
  43bb9c:	nop    DWORD PTR [rax+0x0]
  43bba0:	mov    rcx,rbx
  43bba3:	call   0x449468
  43bba8:	jmp    0x43bb91
  43bbaa:	mov    rcx,rbx
  43bbad:	call   0x43ba90
  43bbb2:	nop
  43bbb3:	nop
  43bbb4:	nop
  43bbb5:	nop
  43bbb6:	nop
  43bbb7:	nop
  43bbb8:	nop
  43bbb9:	nop
  43bbba:	nop
  43bbbb:	nop
  43bbbc:	nop
  43bbbd:	nop
  43bbbe:	nop
  43bbbf:	nop
  43bbc0:	push   rsi
  43bbc1:	push   rbx
  43bbc2:	sub    rsp,0x28
  43bbc6:	mov    rbx,rcx
  43bbc9:	mov    rsi,rdx
  43bbcc:	mov    ecx,0x1
  43bbd1:	mov    rdx,r8
  43bbd4:	call   0x43bb20
  43bbd9:	mov    r8,rsi
  43bbdc:	mov    rdx,rbx
  43bbdf:	mov    rcx,rax
  43bbe2:	add    rsp,0x28
  43bbe6:	pop    rbx
  43bbe7:	pop    rsi
  43bbe8:	jmp    0x449450
  43bbed:	nop
  43bbee:	nop
  43bbef:	nop
  43bbf0:	push   rsi
  43bbf1:	push   rbx
  43bbf2:	sub    rsp,0x28
  43bbf6:	mov    rsi,rcx
  43bbf9:	call   0x4493c0
  43bbfe:	lea    rbx,[rax+0x1]
  43bc02:	mov    rcx,rbx
  43bc05:	call   0x43baf0
  43bc0a:	mov    r8,rbx
  43bc0d:	mov    rdx,rsi
  43bc10:	mov    rcx,rax
  43bc13:	add    rsp,0x28
  43bc17:	pop    rbx
  43bc18:	pop    rsi
  43bc19:	jmp    0x449450
  43bc1e:	nop
  43bc1f:	nop
  43bc20:	push   rbx
  43bc21:	sub    rsp,0x20
  43bc25:	mov    ebx,ecx
  43bc27:	call   0x4493c8
  43bc2c:	test   rax,rax
  43bc2f:	je     0x43bc40
  43bc31:	add    rsp,0x20
  43bc35:	pop    rbx
  43bc36:	ret    
  43bc37:	nop    WORD PTR [rax+rax*1+0x0]
  43bc40:	lea    rdx,[rip+0x1e479]        # 0x45a0c0
  43bc47:	lea    rcx,[rip+0x26b12]        # 0x462760
  43bc4e:	mov    r8d,ebx
  43bc51:	call   0x449400
  43bc56:	lea    rax,[rip+0x26b03]        # 0x462760
  43bc5d:	add    rsp,0x20
  43bc61:	pop    rbx
  43bc62:	ret    
  43bc63:	nop
  43bc64:	nop
  43bc65:	nop
  43bc66:	nop
  43bc67:	nop
  43bc68:	nop
  43bc69:	nop
  43bc6a:	nop
  43bc6b:	nop
  43bc6c:	nop
  43bc6d:	nop
  43bc6e:	nop
  43bc6f:	nop
  43bc70:	push   r13
  43bc72:	push   r12
  43bc74:	push   rbp
  43bc75:	push   rdi
  43bc76:	push   rsi
  43bc77:	push   rbx
  43bc78:	sub    rsp,0x38
  43bc7c:	movsxd rbx,edx
  43bc7f:	mov    rbp,rcx
  43bc82:	call   0x4493c0
  43bc87:	lea    edx,[rbx+0x5]
  43bc8a:	cmp    edx,eax
  43bc8c:	jge    0x43be79
  43bc92:	sub    rax,rbx
  43bc95:	lea    rdi,[rip+0x1e444]        # 0x45a0e0
  43bc9c:	mov    ecx,0x6
  43bca1:	lea    r13,[rbp+rax*1-0x6]
  43bca6:	mov    eax,0xffffffff
  43bcab:	mov    rsi,r13
  43bcae:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43bcb0:	seta   cl
  43bcb3:	setb   dl
  43bcb6:	cmp    cl,dl
  43bcb8:	jne    0x43be56
  43bcbe:	lea    rcx,[rsp+0x20]
  43bcc3:	xor    edx,edx
  43bcc5:	mov    edi,0x7fff
  43bcca:	lea    rsi,[rip+0x1e42f]        # 0x45a100
  43bcd1:	call   0x43da90
  43bcd6:	movsxd rcx,DWORD PTR [rsp+0x24]
  43bcdb:	movsxd rax,DWORD PTR [rsp+0x20]
  43bce0:	shl    rcx,0x10
  43bce4:	mov    rbx,rcx
  43bce7:	xor    rbx,rax
  43bcea:	call   0x449310
  43bcef:	cdqe   
  43bcf1:	mov    r12,QWORD PTR [rip+0x28a8c]        # 0x464784
  43bcf8:	xor    rbx,rax
  43bcfb:	mov    rcx,rbx
  43bcfe:	add    rcx,QWORD PTR [rip+0x26a9b]        # 0x4627a0
  43bd05:	movabs rbx,0x8421084210842109
  43bd0f:	mov    QWORD PTR [rip+0x26a8a],rcx        # 0x4627a0
  43bd16:	jmp    0x43bd52
  43bd18:	nop    DWORD PTR [rax+rax*1+0x0]
  43bd20:	call   r12
  43bd23:	cmp    DWORD PTR [rax],0x11
  43bd26:	je     0x43bd34
  43bd28:	call   r12
  43bd2b:	cmp    DWORD PTR [rax],0x15
  43bd2e:	jne    0x43be63
  43bd34:	mov    rax,QWORD PTR [rip+0x26a65]        # 0x4627a0
  43bd3b:	sub    edi,0x1
  43bd3e:	lea    rcx,[rax+0x1e61]
  43bd45:	mov    QWORD PTR [rip+0x26a54],rcx        # 0x4627a0
  43bd4c:	je     0x43be63
  43bd52:	mov    rdx,rcx
  43bd55:	shr    rdx,1
  43bd58:	mov    rax,rdx
  43bd5b:	mul    rbx
  43bd5e:	mov    r9,rdx
  43bd61:	shr    rdx,0x5
  43bd65:	shr    r9,0x4
  43bd69:	lea    rax,[rcx+r9*2]
  43bd6d:	mov    r8,r9
  43bd70:	shl    r8,0x6
  43bd74:	sub    rax,r8
  43bd77:	movzx  eax,BYTE PTR [rsi+rax*1]
  43bd7b:	mov    BYTE PTR [r13+0x0],al
  43bd7f:	mov    rax,rdx
  43bd82:	mul    rbx
  43bd85:	mov    r8,rdx
  43bd88:	shr    rdx,0x5
  43bd8c:	shr    r8,0x4
  43bd90:	lea    rax,[r9+r8*2]
  43bd94:	mov    rcx,r8
  43bd97:	shl    rcx,0x6
  43bd9b:	sub    rax,rcx
  43bd9e:	movzx  eax,BYTE PTR [rsi+rax*1]
  43bda2:	mov    BYTE PTR [r13+0x1],al
  43bda6:	mov    rax,rdx
  43bda9:	mul    rbx
  43bdac:	mov    rcx,rdx
  43bdaf:	shr    rdx,0x5
  43bdb3:	shr    rcx,0x4
  43bdb7:	lea    rax,[r8+rcx*2]
  43bdbb:	mov    r9,rcx
  43bdbe:	shl    r9,0x6
  43bdc2:	sub    rax,r9
  43bdc5:	movzx  eax,BYTE PTR [rsi+rax*1]
  43bdc9:	mov    BYTE PTR [r13+0x2],al
  43bdcd:	mov    rax,rdx
  43bdd0:	mul    rbx
  43bdd3:	mov    r8,rdx
  43bdd6:	shr    rdx,0x5
  43bdda:	shr    r8,0x4
  43bdde:	lea    rax,[rcx+r8*2]
  43bde2:	mov    r9,r8
  43bde5:	shl    r9,0x6
  43bde9:	sub    rax,r9
  43bdec:	movzx  eax,BYTE PTR [rsi+rax*1]
  43bdf0:	mov    BYTE PTR [r13+0x3],al
  43bdf4:	mov    rax,rdx
  43bdf7:	mul    rbx
  43bdfa:	mov    rcx,rdx
  43bdfd:	shr    rdx,0x5
  43be01:	shr    rcx,0x4
  43be05:	lea    rax,[r8+rcx*2]
  43be09:	mov    r9,rcx
  43be0c:	shl    r9,0x6
  43be10:	sub    rax,r9
  43be13:	movzx  eax,BYTE PTR [rsi+rax*1]
  43be17:	mov    BYTE PTR [r13+0x4],al
  43be1b:	mov    rax,rdx
  43be1e:	mul    rbx
  43be21:	shr    rdx,0x4
  43be25:	lea    rax,[rcx+rdx*2]
  43be29:	mov    r8,rdx
  43be2c:	mov    rcx,rbp
  43be2f:	shl    r8,0x6
  43be33:	mov    edx,0x8502
  43be38:	sub    rax,r8
  43be3b:	mov    r8d,0x180
  43be41:	movzx  eax,BYTE PTR [rsi+rax*1]
  43be45:	mov    BYTE PTR [r13+0x5],al
  43be49:	call   0x449320
  43be4e:	test   eax,eax
  43be50:	js     0x43bd20
  43be56:	add    rsp,0x38
  43be5a:	pop    rbx
  43be5b:	pop    rsi
  43be5c:	pop    rdi
  43be5d:	pop    rbp
  43be5e:	pop    r12
  43be60:	pop    r13
  43be62:	ret    
  43be63:	mov    eax,0xffffffff
  43be68:	mov    BYTE PTR [rbp+0x0],0x0
  43be6c:	add    rsp,0x38
  43be70:	pop    rbx
  43be71:	pop    rsi
  43be72:	pop    rdi
  43be73:	pop    rbp
  43be74:	pop    r12
  43be76:	pop    r13
  43be78:	ret    
  43be79:	mov    eax,0xffffffff
  43be7e:	jmp    0x43be56
  43be80:	push   rdi
  43be81:	push   rsi
  43be82:	push   rbx
  43be83:	sub    rsp,0x20
  43be87:	mov    rdi,rcx
  43be8a:	mov    rcx,rdx
  43be8d:	mov    rsi,rdx
  43be90:	call   0x4493c0
  43be95:	lea    r8,[rax+0x1]
  43be99:	mov    rbx,rax
  43be9c:	mov    rdx,rsi
  43be9f:	mov    rcx,rdi
  43bea2:	call   0x449450
  43bea7:	add    rax,rbx
  43beaa:	add    rsp,0x20
  43beae:	pop    rbx
  43beaf:	pop    rsi
  43beb0:	pop    rdi
  43beb1:	ret    
  43beb2:	nop
  43beb3:	nop
  43beb4:	nop
  43beb5:	nop
  43beb6:	nop
  43beb7:	nop
  43beb8:	nop
  43beb9:	nop
  43beba:	nop
  43bebb:	nop
  43bebc:	nop
  43bebd:	nop
  43bebe:	nop
  43bebf:	nop
  43bec0:	jmp    QWORD PTR [rip+0x28bf6]        # 0x464abc
  43bec6:	nop
  43bec7:	nop
  43bec8:	jmp    QWORD PTR [rip+0x28be6]        # 0x464ab4
  43bece:	nop
  43becf:	nop
  43bed0:	jmp    QWORD PTR [rip+0x28bd6]        # 0x464aac
  43bed6:	nop
  43bed7:	nop
  43bed8:	nop    DWORD PTR [rax+rax*1+0x0]
  43bee0:	push   rbx
  43bee1:	sub    rsp,0x30
  43bee5:	mov    rbx,rcx
  43bee8:	mov    rcx,QWORD PTR [rip+0x27d19]        # 0x463c08
  43beef:	call   0x43c490
  43bef4:	cmp    rax,0xffffffffffffffff
  43bef8:	mov    QWORD PTR [rsp+0x20],rax
  43befd:	je     0x43bf75
  43beff:	mov    ecx,0x8
  43bf04:	call   0x449588
  43bf09:	mov    rcx,QWORD PTR [rip+0x27cf8]        # 0x463c08
  43bf10:	call   0x43c490
  43bf15:	mov    rcx,QWORD PTR [rip+0x27cf4]        # 0x463c10
  43bf1c:	mov    QWORD PTR [rsp+0x20],rax
  43bf21:	call   0x43c490
  43bf26:	lea    rdx,[rsp+0x20]
  43bf2b:	lea    r8,[rsp+0x28]
  43bf30:	mov    rcx,rbx
  43bf33:	mov    QWORD PTR [rsp+0x28],rax
  43bf38:	call   0x449618
  43bf3d:	mov    rcx,QWORD PTR [rsp+0x20]
  43bf42:	mov    rbx,rax
  43bf45:	call   0x43c4a0
  43bf4a:	mov    rcx,QWORD PTR [rsp+0x28]
  43bf4f:	mov    QWORD PTR [rip+0x27cb2],rax        # 0x463c08
  43bf56:	call   0x43c4a0
  43bf5b:	mov    ecx,0x8
  43bf60:	mov    QWORD PTR [rip+0x27ca9],rax        # 0x463c10
  43bf67:	call   0x449550
  43bf6c:	mov    rax,rbx
  43bf6f:	add    rsp,0x30
  43bf73:	pop    rbx
  43bf74:	ret    
  43bf75:	mov    rax,QWORD PTR [rip+0x1ed74]        # 0x45acf0
  43bf7c:	mov    rcx,rbx
  43bf7f:	call   QWORD PTR [rax]
  43bf81:	add    rsp,0x30
  43bf85:	pop    rbx
  43bf86:	ret    
  43bf87:	nop    WORD PTR [rax+rax*1+0x0]
  43bf90:	sub    rsp,0x28
  43bf94:	call   0x43bee0
  43bf99:	test   rax,rax
  43bf9c:	sete   al
  43bf9f:	movzx  eax,al
  43bfa2:	neg    eax
  43bfa4:	add    rsp,0x28
  43bfa8:	ret    
  43bfa9:	nop
  43bfaa:	nop
  43bfab:	nop
  43bfac:	nop
  43bfad:	nop
  43bfae:	nop
  43bfaf:	nop
  43bfb0:	sub    rsp,0x28
  43bfb4:	mov    rax,QWORD PTR [rip+0xf1e5]        # 0x44b1a0
  43bfbb:	mov    rax,QWORD PTR [rax]
  43bfbe:	test   rax,rax
  43bfc1:	je     0x43bfe0
  43bfc3:	call   rax
  43bfc5:	mov    rax,QWORD PTR [rip+0xf1d4]        # 0x44b1a0
  43bfcc:	lea    rdx,[rax+0x8]
  43bfd0:	mov    rax,QWORD PTR [rax+0x8]
  43bfd4:	mov    QWORD PTR [rip+0xf1c5],rdx        # 0x44b1a0
  43bfdb:	test   rax,rax
  43bfde:	jne    0x43bfc3
  43bfe0:	add    rsp,0x28
  43bfe4:	ret    
  43bfe5:	nop
  43bfe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bff0:	push   rsi
  43bff1:	push   rbx
  43bff2:	sub    rsp,0x28
  43bff6:	mov    rsi,QWORD PTR [rip+0x1ec43]        # 0x45ac40
  43bffd:	mov    rax,QWORD PTR [rsi]
  43c000:	cmp    eax,0xffffffff
  43c003:	mov    ebx,eax
  43c005:	je     0x43c030
  43c007:	test   ebx,ebx
  43c009:	je     0x43c01a
  43c00b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c010:	mov    eax,ebx
  43c012:	call   QWORD PTR [rsi+rax*8]
  43c015:	sub    ebx,0x1
  43c018:	jne    0x43c010
  43c01a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x43bfb0
  43c021:	add    rsp,0x28
  43c025:	pop    rbx
  43c026:	pop    rsi
  43c027:	jmp    0x43bf90
  43c02c:	nop    DWORD PTR [rax+0x0]
  43c030:	xor    ebx,ebx
  43c032:	jmp    0x43c036
  43c034:	mov    ebx,eax
  43c036:	lea    edx,[rbx+0x1]
  43c039:	cmp    QWORD PTR [rsi+rdx*8],0x0
  43c03e:	mov    rax,rdx
  43c041:	jne    0x43c034
  43c043:	jmp    0x43c007
  43c045:	nop
  43c046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c050:	mov    eax,DWORD PTR [rip+0x2675a]        # 0x4627b0
  43c056:	test   eax,eax
  43c058:	je     0x43c060
  43c05a:	repz ret 
  43c05c:	nop    DWORD PTR [rax+0x0]
  43c060:	mov    DWORD PTR [rip+0x26746],0x1        # 0x4627b0
  43c06a:	jmp    0x43bff0
  43c06c:	nop
  43c06d:	nop
  43c06e:	nop
  43c06f:	nop
  43c070:	mov    rax,QWORD PTR [rip+0x286c5]        # 0x46473c
  43c077:	rex.W jmp rax
  43c07a:	nop
  43c07b:	nop
  43c07c:	nop
  43c07d:	nop
  43c07e:	nop
  43c07f:	nop
  43c080:	xor    eax,eax
  43c082:	ret    
  43c083:	nop
  43c084:	nop
  43c085:	nop
  43c086:	nop
  43c087:	nop
  43c088:	nop
  43c089:	nop
  43c08a:	nop
  43c08b:	nop
  43c08c:	nop
  43c08d:	nop
  43c08e:	nop
  43c08f:	nop
  43c090:	push   r12
  43c092:	push   rbp
  43c093:	push   rdi
  43c094:	push   rsi
  43c095:	push   rbx
  43c096:	sub    rsp,0x40
  43c09a:	mov    rbx,QWORD PTR [rip+0xf1df]        # 0x44b280
  43c0a1:	movabs rax,0x2b992ddfa232
  43c0ab:	mov    QWORD PTR [rsp+0x20],0x0
  43c0b4:	cmp    rbx,rax
  43c0b7:	je     0x43c0d0
  43c0b9:	not    rbx
  43c0bc:	mov    QWORD PTR [rip+0xf1cd],rbx        # 0x44b290
  43c0c3:	add    rsp,0x40
  43c0c7:	pop    rbx
  43c0c8:	pop    rsi
  43c0c9:	pop    rdi
  43c0ca:	pop    rbp
  43c0cb:	pop    r12
  43c0cd:	ret    
  43c0ce:	xchg   ax,ax
  43c0d0:	lea    rcx,[rsp+0x20]
  43c0d5:	call   QWORD PTR [rip+0x28569]        # 0x464644
  43c0db:	mov    r12,QWORD PTR [rsp+0x20]
  43c0e0:	call   QWORD PTR [rip+0x28516]        # 0x4645fc
  43c0e6:	mov    ebp,eax
  43c0e8:	call   QWORD PTR [rip+0x28516]        # 0x464604
  43c0ee:	mov    edi,eax
  43c0f0:	call   QWORD PTR [rip+0x2855e]        # 0x464654
  43c0f6:	lea    rcx,[rsp+0x30]
  43c0fb:	mov    esi,eax
  43c0fd:	call   QWORD PTR [rip+0x28589]        # 0x46468c
  43c103:	xor    r12,QWORD PTR [rsp+0x30]
  43c108:	mov    edx,edi
  43c10a:	movabs rax,0xffffffffffff
  43c114:	xor    rbp,r12
  43c117:	mov    rdi,rbp
  43c11a:	xor    rdi,rdx
  43c11d:	mov    edx,esi
  43c11f:	xor    rdi,rdx
  43c122:	mov    rsi,rdi
  43c125:	and    rsi,rax
  43c128:	cmp    rsi,rbx
  43c12b:	je     0x43c150
  43c12d:	mov    rax,rsi
  43c130:	not    rax
  43c133:	mov    QWORD PTR [rip+0xf146],rsi        # 0x44b280
  43c13a:	mov    QWORD PTR [rip+0xf14f],rax        # 0x44b290
  43c141:	add    rsp,0x40
  43c145:	pop    rbx
  43c146:	pop    rsi
  43c147:	pop    rdi
  43c148:	pop    rbp
  43c149:	pop    r12
  43c14b:	ret    
  43c14c:	nop    DWORD PTR [rax+0x0]
  43c150:	movabs rax,0xffffd466d2205dcc
  43c15a:	movabs rsi,0x2b992ddfa233
  43c164:	jmp    0x43c133
  43c166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c170:	push   rbp
  43c171:	push   rsi
  43c172:	push   rbx
  43c173:	mov    rbp,rsp
  43c176:	sub    rsp,0x70
  43c17a:	mov    rsi,rcx
  43c17d:	lea    rcx,[rip+0x2667c]        # 0x462800
  43c184:	call   QWORD PTR [rip+0x28512]        # 0x46469c
  43c18a:	mov    rbx,QWORD PTR [rip+0x26767]        # 0x4628f8
  43c191:	xor    r8d,r8d
  43c194:	lea    rdx,[rbp-0x28]
  43c198:	mov    rcx,rbx
  43c19b:	call   QWORD PTR [rip+0x28503]        # 0x4646a4
  43c1a1:	test   rax,rax
  43c1a4:	mov    r9,rax
  43c1a7:	je     0x43c250
  43c1ad:	lea    rax,[rbp-0x20]
  43c1b1:	mov    QWORD PTR [rsp+0x38],0x0
  43c1ba:	mov    r8,rbx
  43c1bd:	mov    rdx,QWORD PTR [rbp-0x28]
  43c1c1:	xor    ecx,ecx
  43c1c3:	mov    QWORD PTR [rsp+0x30],rax
  43c1c8:	lea    rax,[rbp-0x18]
  43c1cc:	mov    QWORD PTR [rsp+0x28],rax
  43c1d1:	lea    rax,[rip+0x26628]        # 0x462800
  43c1d8:	mov    QWORD PTR [rsp+0x20],rax
  43c1dd:	call   QWORD PTR [rip+0x284c9]        # 0x4646ac
  43c1e3:	mov    rax,QWORD PTR [rip+0x2670e]        # 0x4628f8
  43c1ea:	xor    ecx,ecx
  43c1ec:	mov    QWORD PTR [rip+0x2668d],rsi        # 0x462880
  43c1f3:	mov    DWORD PTR [rip+0x26b03],0xc0000409        # 0x462d00
  43c1fd:	mov    DWORD PTR [rip+0x26afd],0x1        # 0x462d04
  43c207:	mov    QWORD PTR [rip+0x26b02],rax        # 0x462d10
  43c20e:	mov    rax,QWORD PTR [rip+0xf06b]        # 0x44b280
  43c215:	mov    QWORD PTR [rbp-0x10],rax
  43c219:	mov    rax,QWORD PTR [rip+0xf070]        # 0x44b290
  43c220:	mov    QWORD PTR [rbp-0x8],rax
  43c224:	call   QWORD PTR [rip+0x28492]        # 0x4646bc
  43c22a:	lea    rcx,[rip+0x1df0f]        # 0x45a140
  43c231:	call   QWORD PTR [rip+0x284a5]        # 0x4646dc
  43c237:	call   QWORD PTR [rip+0x283b7]        # 0x4645f4
  43c23d:	mov    edx,0xc0000409
  43c242:	mov    rcx,rax
  43c245:	call   QWORD PTR [rip+0x28481]        # 0x4646cc
  43c24b:	call   0x449548
  43c250:	mov    rax,QWORD PTR [rbp+0x18]
  43c254:	mov    QWORD PTR [rip+0x2669d],rax        # 0x4628f8
  43c25b:	lea    rax,[rbp+0x8]
  43c25f:	mov    QWORD PTR [rip+0x26632],rax        # 0x462898
  43c266:	jmp    0x43c1e3
  43c26b:	nop
  43c26c:	nop
  43c26d:	nop
  43c26e:	nop
  43c26f:	nop
  43c270:	sub    rsp,0x28
  43c274:	test   edx,edx
  43c276:	je     0x43c290
  43c278:	cmp    edx,0x3
  43c27b:	je     0x43c290
  43c27d:	mov    eax,0x1
  43c282:	add    rsp,0x28
  43c286:	ret    
  43c287:	nop    WORD PTR [rax+rax*1+0x0]
  43c290:	call   0x43cf80
  43c295:	mov    eax,0x1
  43c29a:	add    rsp,0x28
  43c29e:	ret    
  43c29f:	nop
  43c2a0:	push   rsi
  43c2a1:	push   rbx
  43c2a2:	sub    rsp,0x28
  43c2a6:	mov    rax,QWORD PTR [rip+0x1e973]        # 0x45ac20
  43c2ad:	cmp    DWORD PTR [rax],0x2
  43c2b0:	je     0x43c2b8
  43c2b2:	mov    DWORD PTR [rax],0x2
  43c2b8:	cmp    edx,0x2
  43c2bb:	je     0x43c2d0
  43c2bd:	cmp    edx,0x1
  43c2c0:	je     0x43c302
  43c2c2:	mov    eax,0x1
  43c2c7:	add    rsp,0x28
  43c2cb:	pop    rbx
  43c2cc:	pop    rsi
  43c2cd:	ret    
  43c2ce:	xchg   ax,ax
  43c2d0:	lea    rbx,[rip+0x29d89]        # 0x466060
  43c2d7:	lea    rsi,[rip+0x29d82]        # 0x466060
  43c2de:	cmp    rbx,rsi
  43c2e1:	je     0x43c2c2
  43c2e3:	mov    rax,QWORD PTR [rbx]
  43c2e6:	test   rax,rax
  43c2e9:	je     0x43c2ed
  43c2eb:	call   rax
  43c2ed:	add    rbx,0x8
  43c2f1:	cmp    rbx,rsi
  43c2f4:	jne    0x43c2e3
  43c2f6:	mov    eax,0x1
  43c2fb:	add    rsp,0x28
  43c2ff:	pop    rbx
  43c300:	pop    rsi
  43c301:	ret    
  43c302:	call   0x43cf80
  43c307:	jmp    0x43c2c2
  43c309:	nop    DWORD PTR [rax+0x0]
  43c310:	xor    eax,eax
  43c312:	ret    
  43c313:	nop
  43c314:	nop
  43c315:	nop
  43c316:	nop
  43c317:	nop
  43c318:	nop
  43c319:	nop
  43c31a:	nop
  43c31b:	nop
  43c31c:	nop
  43c31d:	nop
  43c31e:	nop
  43c31f:	nop
  43c320:	sub    rsp,0x58
  43c324:	mov    rax,QWORD PTR [rip+0x26ab5]        # 0x462de0
  43c32b:	test   rax,rax
  43c32e:	je     0x43c35c
  43c330:	movsd  xmm0,QWORD PTR [rsp+0x80]
  43c339:	mov    DWORD PTR [rsp+0x20],ecx
  43c33d:	lea    rcx,[rsp+0x20]
  43c342:	mov    QWORD PTR [rsp+0x28],rdx
  43c347:	movsd  QWORD PTR [rsp+0x30],xmm2
  43c34d:	movsd  QWORD PTR [rsp+0x38],xmm3
  43c353:	movsd  QWORD PTR [rsp+0x40],xmm0
  43c359:	call   rax
  43c35b:	nop
  43c35c:	add    rsp,0x58
  43c360:	ret    
  43c361:	nop    DWORD PTR [rax+rax*1+0x0]
  43c366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c370:	mov    QWORD PTR [rip+0x26a69],rcx        # 0x462de0
  43c377:	jmp    0x4495f0
  43c37c:	nop    DWORD PTR [rax+0x0]
  43c380:	push   rsi
  43c381:	push   rbx
  43c382:	sub    rsp,0x78
  43c386:	movaps XMMWORD PTR [rsp+0x40],xmm6
  43c38b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  43c390:	movaps XMMWORD PTR [rsp+0x60],xmm8
  43c396:	cmp    DWORD PTR [rcx],0x6
  43c399:	ja     0x43c470
  43c39f:	mov    edx,DWORD PTR [rcx]
  43c3a1:	lea    rax,[rip+0x1dedc]        # 0x45a284
  43c3a8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  43c3ac:	add    rax,rdx
  43c3af:	jmp    rax
  43c3b1:	lea    rbx,[rip+0x1dda8]        # 0x45a160
  43c3b8:	nop    DWORD PTR [rax+rax*1+0x0]
  43c3c0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  43c3c6:	mov    rsi,QWORD PTR [rcx+0x8]
  43c3ca:	movsd  xmm7,QWORD PTR [rcx+0x18]
  43c3cf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  43c3d4:	call   0x449608
  43c3d9:	movsd  QWORD PTR [rsp+0x30],xmm8
  43c3e0:	lea    rcx,[rax+0x60]
  43c3e4:	lea    rdx,[rip+0x1de6d]        # 0x45a258
  43c3eb:	movsd  QWORD PTR [rsp+0x28],xmm7
  43c3f1:	mov    r9,rsi
  43c3f4:	mov    r8,rbx
  43c3f7:	movsd  QWORD PTR [rsp+0x20],xmm6
  43c3fd:	call   0x4494e8
  43c402:	nop
  43c403:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  43c408:	xor    eax,eax
  43c40a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  43c40f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  43c415:	add    rsp,0x78
  43c419:	pop    rbx
  43c41a:	pop    rsi
  43c41b:	ret    
  43c41c:	nop    DWORD PTR [rax+0x0]
  43c420:	lea    rbx,[rip+0x1dd58]        # 0x45a17f
  43c427:	jmp    0x43c3c0
  43c429:	nop    DWORD PTR [rax+0x0]
  43c430:	lea    rbx,[rip+0x1dd69]        # 0x45a1a0
  43c437:	jmp    0x43c3c0
  43c439:	nop    DWORD PTR [rax+0x0]
  43c440:	lea    rbx,[rip+0x1ddc9]        # 0x45a210
  43c447:	jmp    0x43c3c0
  43c44c:	nop    DWORD PTR [rax+0x0]
  43c450:	lea    rbx,[rip+0x1dd91]        # 0x45a1e8
  43c457:	jmp    0x43c3c0
  43c45c:	nop    DWORD PTR [rax+0x0]
  43c460:	lea    rbx,[rip+0x1dd59]        # 0x45a1c0
  43c467:	jmp    0x43c3c0
  43c46c:	nop    DWORD PTR [rax+0x0]
  43c470:	lea    rbx,[rip+0x1ddcf]        # 0x45a246
  43c477:	jmp    0x43c3c0
  43c47c:	nop
  43c47d:	nop
  43c47e:	nop
  43c47f:	nop
  43c480:	fninit 
  43c482:	ret    
  43c483:	nop
  43c484:	nop
  43c485:	nop
  43c486:	nop
  43c487:	nop
  43c488:	nop
  43c489:	nop
  43c48a:	nop
  43c48b:	nop
  43c48c:	nop
  43c48d:	nop
  43c48e:	nop
  43c48f:	nop
  43c490:	mov    rax,rcx
  43c493:	ret    
  43c494:	xchg   ax,ax
  43c496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c4a0:	mov    rax,rcx
  43c4a3:	ret    
  43c4a4:	nop
  43c4a5:	nop
  43c4a6:	nop
  43c4a7:	nop
  43c4a8:	nop
  43c4a9:	nop
  43c4aa:	nop
  43c4ab:	nop
  43c4ac:	nop
  43c4ad:	nop
  43c4ae:	nop
  43c4af:	nop
  43c4b0:	push   rsi
  43c4b1:	push   rbx
  43c4b2:	sub    rsp,0x38
  43c4b6:	lea    rax,[rsp+0x58]
  43c4bb:	mov    rbx,rcx
  43c4be:	mov    QWORD PTR [rsp+0x58],rdx
  43c4c3:	mov    QWORD PTR [rsp+0x60],r8
  43c4c8:	mov    QWORD PTR [rsp+0x68],r9
  43c4cd:	mov    QWORD PTR [rsp+0x28],rax
  43c4d2:	call   0x449608
  43c4d7:	lea    rcx,[rip+0x1ddc2]        # 0x45a2a0
  43c4de:	lea    r9,[rax+0x60]
  43c4e2:	mov    r8d,0x1b
  43c4e8:	mov    edx,0x1
  43c4ed:	call   0x4494a8
  43c4f2:	mov    rsi,QWORD PTR [rsp+0x28]
  43c4f7:	call   0x449608
  43c4fc:	lea    rcx,[rax+0x60]
  43c500:	mov    rdx,rbx
  43c503:	mov    r8,rsi
  43c506:	call   0x449360
  43c50b:	call   0x449548
  43c510:	nop
  43c511:	nop    DWORD PTR [rax+rax*1+0x0]
  43c516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c520:	push   r13
  43c522:	push   r12
  43c524:	push   rbp
  43c525:	push   rdi
  43c526:	push   rsi
  43c527:	push   rbx
  43c528:	sub    rsp,0x58
  43c52c:	movsxd rbp,DWORD PTR [rip+0x268d1]        # 0x462e04
  43c533:	mov    rbx,rcx
  43c536:	mov    rsi,rdx
  43c539:	mov    rdi,r8
  43c53c:	test   ebp,ebp
  43c53e:	jle    0x43c63a
  43c544:	mov    rax,QWORD PTR [rip+0x268bd]        # 0x462e08
  43c54b:	xor    r9d,r9d
  43c54e:	add    rax,0x8
  43c552:	mov    r10,QWORD PTR [rax]
  43c555:	cmp    rbx,r10
  43c558:	jb     0x43c56e
  43c55a:	mov    rdx,QWORD PTR [rax+0x8]
  43c55e:	mov    r11d,DWORD PTR [rdx+0x8]
  43c562:	add    r10,r11
  43c565:	cmp    rbx,r10
  43c568:	jb     0x43c620
  43c56e:	add    r9d,0x1
  43c572:	add    rax,0x18
  43c576:	cmp    r9d,ebp
  43c579:	jne    0x43c552
  43c57b:	mov    rcx,rbx
  43c57e:	call   0x43d190
  43c583:	test   rax,rax
  43c586:	mov    r12,rax
  43c589:	je     0x43c672
  43c58f:	lea    rbp,[rbp+rbp*2+0x0]
  43c594:	shl    rbp,0x3
  43c598:	mov    r13,rbp
  43c59b:	add    r13,QWORD PTR [rip+0x26866]        # 0x462e08
  43c5a2:	mov    QWORD PTR [r13+0x10],rax
  43c5a6:	mov    DWORD PTR [r13+0x0],0x0
  43c5ae:	call   0x43d2b0
  43c5b3:	mov    edx,DWORD PTR [r12+0xc]
  43c5b8:	mov    r8d,0x30
  43c5be:	add    rax,rdx
  43c5c1:	lea    rdx,[rsp+0x20]
  43c5c6:	mov    QWORD PTR [r13+0x8],rax
  43c5ca:	mov    rax,QWORD PTR [rip+0x26837]        # 0x462e08
  43c5d1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  43c5d6:	call   QWORD PTR [rip+0x28110]        # 0x4646ec
  43c5dc:	test   rax,rax
  43c5df:	je     0x43c655
  43c5e1:	mov    eax,DWORD PTR [rsp+0x44]
  43c5e5:	lea    edx,[rax-0x4]
  43c5e8:	and    edx,0xfffffffb
  43c5eb:	je     0x43c619
  43c5ed:	sub    eax,0x40
  43c5f0:	and    eax,0xffffffbf
  43c5f3:	je     0x43c619
  43c5f5:	mov    r9,rbp
  43c5f8:	add    r9,QWORD PTR [rip+0x26809]        # 0x462e08
  43c5ff:	mov    r8d,0x40
  43c605:	mov    rdx,QWORD PTR [rsp+0x38]
  43c60a:	mov    rcx,QWORD PTR [rsp+0x20]
  43c60f:	call   QWORD PTR [rip+0x280cf]        # 0x4646e4
  43c615:	test   eax,eax
  43c617:	je     0x43c641
  43c619:	add    DWORD PTR [rip+0x267e4],0x1        # 0x462e04
  43c620:	mov    r8,rdi
  43c623:	mov    rdx,rsi
  43c626:	mov    rcx,rbx
  43c629:	add    rsp,0x58
  43c62d:	pop    rbx
  43c62e:	pop    rsi
  43c62f:	pop    rdi
  43c630:	pop    rbp
  43c631:	pop    r12
  43c633:	pop    r13
  43c635:	jmp    0x449450
  43c63a:	xor    ebp,ebp
  43c63c:	jmp    0x43c57b
  43c641:	call   QWORD PTR [rip+0x27fdd]        # 0x464624
  43c647:	lea    rcx,[rip+0x1dcca]        # 0x45a318
  43c64e:	mov    edx,eax
  43c650:	call   0x43c4b0
  43c655:	mov    rax,QWORD PTR [rip+0x267ac]        # 0x462e08
  43c65c:	mov    edx,DWORD PTR [r12+0x8]
  43c661:	lea    rcx,[rip+0x1dc78]        # 0x45a2e0
  43c668:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  43c66d:	call   0x43c4b0
  43c672:	lea    rcx,[rip+0x1dc47]        # 0x45a2c0
  43c679:	mov    rdx,rbx
  43c67c:	call   0x43c4b0
  43c681:	nop
  43c682:	nop    DWORD PTR [rax+0x0]
  43c686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c690:	push   rbp
  43c691:	push   r14
  43c693:	push   r13
  43c695:	push   r12
  43c697:	push   rdi
  43c698:	push   rsi
  43c699:	push   rbx
  43c69a:	mov    rbp,rsp
  43c69d:	sub    rsp,0x60
  43c6a1:	mov    ebx,DWORD PTR [rip+0x26759]        # 0x462e00
  43c6a7:	test   ebx,ebx
  43c6a9:	je     0x43c6c0
  43c6ab:	mov    rsp,rbp
  43c6ae:	pop    rbx
  43c6af:	pop    rsi
  43c6b0:	pop    rdi
  43c6b1:	pop    r12
  43c6b3:	pop    r13
  43c6b5:	pop    r14
  43c6b7:	pop    rbp
  43c6b8:	ret    
  43c6b9:	nop    DWORD PTR [rax+0x0]
  43c6c0:	mov    DWORD PTR [rip+0x26736],0x1        # 0x462e00
  43c6ca:	call   0x43d1e0
  43c6cf:	cdqe   
  43c6d1:	lea    rax,[rax+rax*2]
  43c6d5:	lea    rax,[rax*8+0x1e]
  43c6dd:	and    rax,0xfffffffffffffff0
  43c6e1:	call   0x43d410
  43c6e6:	mov    rsi,QWORD PTR [rip+0x1e563]        # 0x45ac50
  43c6ed:	mov    rbx,QWORD PTR [rip+0x1e56c]        # 0x45ac60
  43c6f4:	sub    rsp,rax
  43c6f7:	mov    DWORD PTR [rip+0x26703],0x0        # 0x462e04
  43c701:	lea    rax,[rsp+0x20]
  43c706:	mov    QWORD PTR [rip+0x266fb],rax        # 0x462e08
  43c70d:	mov    rax,rsi
  43c710:	sub    rax,rbx
  43c713:	cmp    rax,0x7
  43c717:	jle    0x43c6ab
  43c719:	cmp    rax,0xb
  43c71d:	jle    0x43c745
  43c71f:	mov    r11d,DWORD PTR [rbx]
  43c722:	test   r11d,r11d
  43c725:	jne    0x43c870
  43c72b:	mov    r10d,DWORD PTR [rbx+0x4]
  43c72f:	test   r10d,r10d
  43c732:	jne    0x43c870
  43c738:	mov    r9d,DWORD PTR [rbx+0x8]
  43c73c:	test   r9d,r9d
  43c73f:	jne    0x43c75c
  43c741:	add    rbx,0xc
  43c745:	mov    r8d,DWORD PTR [rbx]
  43c748:	test   r8d,r8d
  43c74b:	jne    0x43c870
  43c751:	mov    ecx,DWORD PTR [rbx+0x4]
  43c754:	test   ecx,ecx
  43c756:	jne    0x43c870
  43c75c:	mov    edx,DWORD PTR [rbx+0x8]
  43c75f:	cmp    edx,0x1
  43c762:	jne    0x43c97c
  43c768:	add    rbx,0xc
  43c76c:	cmp    rbx,rsi
  43c76f:	jae    0x43c6ab
  43c775:	mov    r12,QWORD PTR [rip+0x1e524]        # 0x45aca0
  43c77c:	lea    r13,[rbp-0x30]
  43c780:	movabs r14,0xffffffff00000000
  43c78a:	mov    ecx,DWORD PTR [rbx+0x4]
  43c78d:	mov    eax,DWORD PTR [rbx]
  43c78f:	movzx  edx,BYTE PTR [rbx+0x8]
  43c793:	add    rax,r12
  43c796:	add    rcx,r12
  43c799:	cmp    edx,0x10
  43c79c:	mov    r8,QWORD PTR [rax]
  43c79f:	je     0x43c8e6
  43c7a5:	jbe    0x43c8ad
  43c7ab:	cmp    edx,0x20
  43c7ae:	je     0x43c92f
  43c7b4:	cmp    edx,0x40
  43c7b7:	jne    0x43c91b
  43c7bd:	sub    r8,rax
  43c7c0:	mov    rdx,r13
  43c7c3:	mov    rdi,r13
  43c7c6:	mov    rax,r8
  43c7c9:	add    rax,QWORD PTR [rcx]
  43c7cc:	mov    r8d,0x8
  43c7d2:	mov    QWORD PTR [rbp-0x30],rax
  43c7d6:	call   0x43c520
  43c7db:	add    rbx,0xc
  43c7df:	cmp    rbx,rsi
  43c7e2:	jb     0x43c78a
  43c7e4:	mov    eax,DWORD PTR [rip+0x2661a]        # 0x462e04
  43c7ea:	xor    ebx,ebx
  43c7ec:	xor    esi,esi
  43c7ee:	test   eax,eax
  43c7f0:	jle    0x43c6ab
  43c7f6:	mov    r14,QWORD PTR [rip+0x27eef]        # 0x4646ec
  43c7fd:	lea    r13,[rbp-0x34]
  43c801:	mov    r12,QWORD PTR [rip+0x27edc]        # 0x4646e4
  43c808:	jmp    0x43c823
  43c80a:	nop    WORD PTR [rax+rax*1+0x0]
  43c810:	add    esi,0x1
  43c813:	add    rbx,0x18
  43c817:	cmp    esi,DWORD PTR [rip+0x265e7]        # 0x462e04
  43c81d:	jge    0x43c6ab
  43c823:	mov    rax,rbx
  43c826:	add    rax,QWORD PTR [rip+0x265db]        # 0x462e08
  43c82d:	mov    edx,DWORD PTR [rax]
  43c82f:	test   edx,edx
  43c831:	je     0x43c810
  43c833:	mov    rcx,QWORD PTR [rax+0x8]
  43c837:	mov    r8d,0x30
  43c83d:	mov    rdx,rdi
  43c840:	call   r14
  43c843:	test   rax,rax
  43c846:	je     0x43c95e
  43c84c:	mov    rax,QWORD PTR [rip+0x265b5]        # 0x462e08
  43c853:	mov    r9,r13
  43c856:	mov    rdx,QWORD PTR [rbp-0x18]
  43c85a:	mov    rcx,QWORD PTR [rbp-0x30]
  43c85e:	mov    r8d,DWORD PTR [rax+rbx*1]
  43c862:	call   r12
  43c865:	jmp    0x43c810
  43c867:	nop    WORD PTR [rax+rax*1+0x0]
  43c870:	cmp    rbx,rsi
  43c873:	jae    0x43c6ab
  43c879:	mov    r12,QWORD PTR [rip+0x1e420]        # 0x45aca0
  43c880:	lea    rdi,[rbp-0x30]
  43c884:	mov    ecx,DWORD PTR [rbx+0x4]
  43c887:	mov    eax,DWORD PTR [rbx]
  43c889:	mov    r8d,0x4
  43c88f:	mov    rdx,rdi
  43c892:	add    rbx,0x8
  43c896:	add    rcx,r12
  43c899:	add    eax,DWORD PTR [rcx]
  43c89b:	mov    DWORD PTR [rbp-0x30],eax
  43c89e:	call   0x43c520
  43c8a3:	cmp    rbx,rsi
  43c8a6:	jb     0x43c884
  43c8a8:	jmp    0x43c7e4
  43c8ad:	cmp    edx,0x8
  43c8b0:	jne    0x43c91b
  43c8b2:	movzx  edx,BYTE PTR [rcx]
  43c8b5:	mov    rdi,r13
  43c8b8:	mov    r10,rdx
  43c8bb:	or     r10,0xffffffffffffff00
  43c8c2:	test   dl,dl
  43c8c4:	cmovs  rdx,r10
  43c8c8:	sub    rdx,rax
  43c8cb:	lea    rax,[r8+rdx*1]
  43c8cf:	mov    r8d,0x1
  43c8d5:	mov    rdx,r13
  43c8d8:	mov    QWORD PTR [rbp-0x30],rax
  43c8dc:	call   0x43c520
  43c8e1:	jmp    0x43c7db
  43c8e6:	movzx  edx,WORD PTR [rcx]
  43c8e9:	mov    rdi,r13
  43c8ec:	mov    r10,rdx
  43c8ef:	or     r10,0xffffffffffff0000
  43c8f6:	test   dx,dx
  43c8f9:	cmovs  rdx,r10
  43c8fd:	sub    rdx,rax
  43c900:	lea    rax,[r8+rdx*1]
  43c904:	mov    r8d,0x2
  43c90a:	mov    rdx,r13
  43c90d:	mov    QWORD PTR [rbp-0x30],rax
  43c911:	call   0x43c520
  43c916:	jmp    0x43c7db
  43c91b:	lea    rcx,[rip+0x1da56]        # 0x45a378
  43c922:	mov    QWORD PTR [rbp-0x30],0x0
  43c92a:	call   0x43c4b0
  43c92f:	mov    edx,DWORD PTR [rcx]
  43c931:	mov    rdi,r13
  43c934:	mov    r10,rdx
  43c937:	or     r10,r14
  43c93a:	test   edx,edx
  43c93c:	cmovs  rdx,r10
  43c940:	sub    rdx,rax
  43c943:	lea    rax,[r8+rdx*1]
  43c947:	mov    r8d,0x4
  43c94d:	mov    rdx,r13
  43c950:	mov    QWORD PTR [rbp-0x30],rax
  43c954:	call   0x43c520
  43c959:	jmp    0x43c7db
  43c95e:	add    rbx,QWORD PTR [rip+0x264a3]        # 0x462e08
  43c965:	lea    rcx,[rip+0x1d974]        # 0x45a2e0
  43c96c:	mov    rax,QWORD PTR [rbx+0x10]
  43c970:	mov    r8,QWORD PTR [rbx+0x8]
  43c974:	mov    edx,DWORD PTR [rax+0x8]
  43c977:	call   0x43c4b0
  43c97c:	lea    rcx,[rip+0x1d9bd]        # 0x45a340
  43c983:	call   0x43c4b0
  43c988:	nop
  43c989:	nop
  43c98a:	nop
  43c98b:	nop
  43c98c:	nop
  43c98d:	nop
  43c98e:	nop
  43c98f:	nop
  43c990:	sub    rsp,0x28
  43c994:	mov    eax,DWORD PTR [rcx]
  43c996:	cmp    eax,0xc0000091
  43c99b:	ja     0x43ca00
  43c99d:	cmp    eax,0xc000008d
  43c9a2:	jae    0x43ca1f
  43c9a4:	cmp    eax,0xc0000008
  43c9a9:	je     0x43cac0
  43c9af:	ja     0x43ca90
  43c9b5:	cmp    eax,0x80000002
  43c9ba:	je     0x43cac0
  43c9c0:	cmp    eax,0xc0000005
  43c9c5:	jne    0x43ca9e
  43c9cb:	xor    edx,edx
  43c9cd:	mov    ecx,0xb
  43c9d2:	call   0x449408
  43c9d7:	cmp    rax,0x1
  43c9db:	je     0x43cb20
  43c9e1:	test   rax,rax
  43c9e4:	je     0x43cb00
  43c9ea:	mov    ecx,0xb
  43c9ef:	call   rax
  43c9f1:	xor    eax,eax
  43c9f3:	add    rsp,0x28
  43c9f7:	ret    
  43c9f8:	nop    DWORD PTR [rax+rax*1+0x0]
  43ca00:	cmp    eax,0xc0000094
  43ca05:	je     0x43cad0
  43ca0b:	ja     0x43ca50
  43ca0d:	cmp    eax,0xc0000092
  43ca12:	je     0x43cac0
  43ca18:	cmp    eax,0xc0000093
  43ca1d:	jne    0x43ca9e
  43ca1f:	xor    edx,edx
  43ca21:	mov    ecx,0x8
  43ca26:	call   0x449408
  43ca2b:	cmp    rax,0x1
  43ca2f:	mov    rdx,rax
  43ca32:	je     0x43caa8
  43ca34:	test   rdx,rdx
  43ca37:	mov    eax,0x1
  43ca3c:	je     0x43c9f3
  43ca3e:	mov    ecx,0x8
  43ca43:	call   rdx
  43ca45:	xor    eax,eax
  43ca47:	add    rsp,0x28
  43ca4b:	ret    
  43ca4c:	nop    DWORD PTR [rax+0x0]
  43ca50:	cmp    eax,0xc0000095
  43ca55:	je     0x43cac0
  43ca57:	cmp    eax,0xc0000096
  43ca5c:	jne    0x43ca9e
  43ca5e:	xor    edx,edx
  43ca60:	mov    ecx,0x4
  43ca65:	call   0x449408
  43ca6a:	cmp    rax,0x1
  43ca6e:	je     0x43cb0a
  43ca74:	test   rax,rax
  43ca77:	je     0x43cb00
  43ca7d:	mov    ecx,0x4
  43ca82:	call   rax
  43ca84:	xor    eax,eax
  43ca86:	jmp    0x43c9f3
  43ca8b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ca90:	cmp    eax,0xc000001d
  43ca95:	je     0x43ca5e
  43ca97:	cmp    eax,0xc000008c
  43ca9c:	je     0x43cac0
  43ca9e:	mov    eax,0x1
  43caa3:	add    rsp,0x28
  43caa7:	ret    
  43caa8:	mov    edx,0x1
  43caad:	mov    ecx,0x8
  43cab2:	call   0x449408
  43cab7:	call   0x43c480
  43cabc:	nop    DWORD PTR [rax+0x0]
  43cac0:	xor    eax,eax
  43cac2:	add    rsp,0x28
  43cac6:	ret    
  43cac7:	nop    WORD PTR [rax+rax*1+0x0]
  43cad0:	xor    edx,edx
  43cad2:	mov    ecx,0x8
  43cad7:	call   0x449408
  43cadc:	cmp    rax,0x1
  43cae0:	mov    rdx,rax
  43cae3:	jne    0x43ca34
  43cae9:	mov    edx,0x1
  43caee:	mov    ecx,0x8
  43caf3:	call   0x449408
  43caf8:	xor    eax,eax
  43cafa:	jmp    0x43c9f3
  43caff:	nop
  43cb00:	mov    eax,0x4
  43cb05:	add    rsp,0x28
  43cb09:	ret    
  43cb0a:	mov    edx,0x1
  43cb0f:	mov    ecx,0x4
  43cb14:	call   0x449408
  43cb19:	xor    eax,eax
  43cb1b:	jmp    0x43c9f3
  43cb20:	mov    edx,0x1
  43cb25:	mov    ecx,0xb
  43cb2a:	call   0x449408
  43cb2f:	xor    eax,eax
  43cb31:	jmp    0x43c9f3
  43cb36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cb40:	push   r12
  43cb42:	push   rbp
  43cb43:	push   rdi
  43cb44:	push   rsi
  43cb45:	push   rbx
  43cb46:	sub    rsp,0x20
  43cb4a:	call   0x43d2b0
  43cb4f:	mov    rbp,rax
  43cb52:	mov    eax,DWORD PTR [rip+0x262f0]        # 0x462e48
  43cb58:	test   eax,eax
  43cb5a:	jne    0x43cb81
  43cb5c:	test   rbp,rbp
  43cb5f:	je     0x43cb81
  43cb61:	lea    rcx,[rip+0x1d848]        # 0x45a3b0
  43cb68:	mov    DWORD PTR [rip+0x262d6],0x1        # 0x462e48
  43cb72:	call   0x43d0f0
  43cb77:	test   rax,rax
  43cb7a:	je     0x43cb90
  43cb7c:	mov    eax,0x1
  43cb81:	add    rsp,0x20
  43cb85:	pop    rbx
  43cb86:	pop    rsi
  43cb87:	pop    rdi
  43cb88:	pop    rbp
  43cb89:	pop    r12
  43cb8b:	ret    
  43cb8c:	nop    DWORD PTR [rax+0x0]
  43cb90:	lea    rbx,[rip+0x263e9]        # 0x462f80
  43cb97:	mov    ecx,0x30
  43cb9c:	lea    rdx,[rip+0x262dd]        # 0x462e80
  43cba3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x43c990
  43cbaa:	xor    esi,esi
  43cbac:	mov    rdi,rbx
  43cbaf:	rep stos QWORD PTR es:[rdi],rax
  43cbb2:	mov    rdi,rdx
  43cbb5:	sub    r12,rbp
  43cbb8:	mov    cl,0x20
  43cbba:	rep stos QWORD PTR es:[rdi],rax
  43cbbd:	mov    rdi,rdx
  43cbc0:	jmp    0x43cbf0
  43cbc2:	mov    BYTE PTR [rdi],0x9
  43cbc5:	mov    DWORD PTR [rdi+0x4],r12d
  43cbc9:	add    rsi,0x1
  43cbcd:	mov    edx,DWORD PTR [rax+0xc]
  43cbd0:	add    rbx,0xc
  43cbd4:	mov    DWORD PTR [rbx-0xc],edx
  43cbd7:	add    edx,DWORD PTR [rax+0x8]
  43cbda:	mov    rax,rdi
  43cbdd:	sub    rax,rbp
  43cbe0:	add    rdi,0x8
  43cbe4:	mov    DWORD PTR [rbx-0x4],eax
  43cbe7:	mov    DWORD PTR [rbx-0x8],edx
  43cbea:	cmp    rsi,0x20
  43cbee:	je     0x43cc25
  43cbf0:	mov    rcx,rsi
  43cbf3:	call   0x43d220
  43cbf8:	test   rax,rax
  43cbfb:	jne    0x43cbc2
  43cbfd:	test   rsi,rsi
  43cc00:	je     0x43cb7c
  43cc06:	mov    edx,esi
  43cc08:	nop    DWORD PTR [rax+rax*1+0x0]
  43cc10:	mov    r8,rbp
  43cc13:	lea    rcx,[rip+0x26366]        # 0x462f80
  43cc1a:	call   QWORD PTR [rip+0x27a74]        # 0x464694
  43cc20:	jmp    0x43cb7c
  43cc25:	mov    edx,0x20
  43cc2a:	jmp    0x43cc10
  43cc2c:	nop    DWORD PTR [rax+0x0]
  43cc30:	push   rbx
  43cc31:	sub    rsp,0x20
  43cc35:	mov    rdx,QWORD PTR [rcx]
  43cc38:	mov    eax,DWORD PTR [rdx]
  43cc3a:	mov    r8d,eax
  43cc3d:	and    r8d,0x20ffffff
  43cc44:	cmp    r8d,0x20474343
  43cc4b:	je     0x43cd50
  43cc51:	cmp    eax,0xc0000091
  43cc56:	mov    rbx,rcx
  43cc59:	ja     0x43cce0
  43cc5f:	cmp    eax,0xc000008d
  43cc64:	jae    0x43ccf7
  43cc6a:	cmp    eax,0xc0000008
  43cc6f:	je     0x43cca3
  43cc71:	ja     0x43ccb0
  43cc73:	cmp    eax,0x80000002
  43cc78:	je     0x43cca3
  43cc7a:	cmp    eax,0xc0000005
  43cc7f:	jne    0x43ccc2
  43cc81:	xor    edx,edx
  43cc83:	mov    ecx,0xb
  43cc88:	call   0x449408
  43cc8d:	cmp    rax,0x1
  43cc91:	je     0x43cdc0
  43cc97:	test   rax,rax
  43cc9a:	je     0x43ccc2
  43cc9c:	mov    ecx,0xb
  43cca1:	call   rax
  43cca3:	mov    eax,0xffffffff
  43cca8:	add    rsp,0x20
  43ccac:	pop    rbx
  43ccad:	ret    
  43ccae:	xchg   ax,ax
  43ccb0:	cmp    eax,0xc000001d
  43ccb5:	je     0x43cd76
  43ccbb:	cmp    eax,0xc000008c
  43ccc0:	je     0x43cca3
  43ccc2:	mov    rax,QWORD PTR [rip+0x26177]        # 0x462e40
  43ccc9:	test   rax,rax
  43cccc:	je     0x43cca8
  43ccce:	mov    rcx,rbx
  43ccd1:	add    rsp,0x20
  43ccd5:	pop    rbx
  43ccd6:	rex.W jmp rax
  43ccd9:	nop    DWORD PTR [rax+0x0]
  43cce0:	cmp    eax,0xc0000094
  43cce5:	je     0x43cd22
  43cce7:	ja     0x43cd60
  43cce9:	cmp    eax,0xc0000092
  43ccee:	je     0x43cca3
  43ccf0:	cmp    eax,0xc0000093
  43ccf5:	jne    0x43ccc2
  43ccf7:	xor    edx,edx
  43ccf9:	mov    ecx,0x8
  43ccfe:	call   0x449408
  43cd03:	cmp    rax,0x1
  43cd07:	jne    0x43cd34
  43cd09:	mov    edx,0x1
  43cd0e:	mov    ecx,0x8
  43cd13:	call   0x449408
  43cd18:	call   0x43c480
  43cd1d:	jmp    0x43cca3
  43cd22:	xor    edx,edx
  43cd24:	mov    ecx,0x8
  43cd29:	call   0x449408
  43cd2e:	cmp    rax,0x1
  43cd32:	je     0x43cda2
  43cd34:	test   rax,rax
  43cd37:	je     0x43ccc2
  43cd39:	mov    ecx,0x8
  43cd3e:	call   rax
  43cd40:	mov    eax,0xffffffff
  43cd45:	jmp    0x43cca8
  43cd4a:	nop    WORD PTR [rax+rax*1+0x0]
  43cd50:	test   BYTE PTR [rdx+0x4],0x1
  43cd54:	jne    0x43cc51
  43cd5a:	jmp    0x43cca3
  43cd5f:	nop
  43cd60:	cmp    eax,0xc0000095
  43cd65:	je     0x43cca3
  43cd6b:	cmp    eax,0xc0000096
  43cd70:	jne    0x43ccc2
  43cd76:	xor    edx,edx
  43cd78:	mov    ecx,0x4
  43cd7d:	call   0x449408
  43cd82:	cmp    rax,0x1
  43cd86:	je     0x43cdd4
  43cd88:	test   rax,rax
  43cd8b:	je     0x43ccc2
  43cd91:	mov    ecx,0x4
  43cd96:	call   rax
  43cd98:	mov    eax,0xffffffff
  43cd9d:	jmp    0x43cca8
  43cda2:	mov    edx,0x1
  43cda7:	mov    ecx,0x8
  43cdac:	call   0x449408
  43cdb1:	jmp    0x43cca3
  43cdb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cdc0:	mov    edx,0x1
  43cdc5:	mov    ecx,0xb
  43cdca:	call   0x449408
  43cdcf:	jmp    0x43cca3
  43cdd4:	mov    edx,0x1
  43cdd9:	mov    ecx,0x4
  43cdde:	call   0x449408
  43cde3:	jmp    0x43cca3
  43cde8:	nop
  43cde9:	nop
  43cdea:	nop
  43cdeb:	nop
  43cdec:	nop
  43cded:	nop
  43cdee:	nop
  43cdef:	nop
  43cdf0:	push   rbp
  43cdf1:	push   rdi
  43cdf2:	push   rsi
  43cdf3:	push   rbx
  43cdf4:	sub    rsp,0x28
  43cdf8:	lea    rcx,[rip+0x26321]        # 0x463120
  43cdff:	call   QWORD PTR [rip+0x277e7]        # 0x4645ec
  43ce05:	mov    rbx,QWORD PTR [rip+0x262f4]        # 0x463100
  43ce0c:	test   rbx,rbx
  43ce0f:	je     0x43ce44
  43ce11:	mov    rbp,QWORD PTR [rip+0x278bc]        # 0x4646d4
  43ce18:	mov    rdi,QWORD PTR [rip+0x27805]        # 0x464624
  43ce1f:	nop
  43ce20:	mov    ecx,DWORD PTR [rbx]
  43ce22:	call   rbp
  43ce24:	mov    rsi,rax
  43ce27:	call   rdi
  43ce29:	test   eax,eax
  43ce2b:	jne    0x43ce3b
  43ce2d:	test   rsi,rsi
  43ce30:	je     0x43ce3b
  43ce32:	mov    rax,QWORD PTR [rbx+0x8]
  43ce36:	mov    rcx,rsi
  43ce39:	call   rax
  43ce3b:	mov    rbx,QWORD PTR [rbx+0x10]
  43ce3f:	test   rbx,rbx
  43ce42:	jne    0x43ce20
  43ce44:	mov    rax,QWORD PTR [rip+0x27831]        # 0x46467c
  43ce4b:	lea    rcx,[rip+0x262ce]        # 0x463120
  43ce52:	add    rsp,0x28
  43ce56:	pop    rbx
  43ce57:	pop    rsi
  43ce58:	pop    rdi
  43ce59:	pop    rbp
  43ce5a:	rex.W jmp rax
  43ce5d:	nop    DWORD PTR [rax]
  43ce60:	push   rdi
  43ce61:	push   rsi
  43ce62:	push   rbx
  43ce63:	sub    rsp,0x20
  43ce67:	mov    eax,DWORD PTR [rip+0x2629b]        # 0x463108
  43ce6d:	test   eax,eax
  43ce6f:	jne    0x43ce80
  43ce71:	add    rsp,0x20
  43ce75:	pop    rbx
  43ce76:	pop    rsi
  43ce77:	pop    rdi
  43ce78:	ret    
  43ce79:	nop    DWORD PTR [rax+0x0]
  43ce80:	mov    rsi,rdx
  43ce83:	mov    edi,ecx
  43ce85:	mov    edx,0x18
  43ce8a:	mov    ecx,0x1
  43ce8f:	call   0x449528
  43ce94:	test   rax,rax
  43ce97:	mov    rbx,rax
  43ce9a:	je     0x43ced8
  43ce9c:	mov    DWORD PTR [rax],edi
  43ce9e:	mov    QWORD PTR [rax+0x8],rsi
  43cea2:	lea    rcx,[rip+0x26277]        # 0x463120
  43cea9:	call   QWORD PTR [rip+0x2773d]        # 0x4645ec
  43ceaf:	mov    rax,QWORD PTR [rip+0x2624a]        # 0x463100
  43ceb6:	lea    rcx,[rip+0x26263]        # 0x463120
  43cebd:	mov    QWORD PTR [rip+0x2623c],rbx        # 0x463100
  43cec4:	mov    QWORD PTR [rbx+0x10],rax
  43cec8:	call   QWORD PTR [rip+0x277ae]        # 0x46467c
  43cece:	xor    eax,eax
  43ced0:	add    rsp,0x20
  43ced4:	pop    rbx
  43ced5:	pop    rsi
  43ced6:	pop    rdi
  43ced7:	ret    
  43ced8:	mov    eax,0xffffffff
  43cedd:	jmp    0x43ce71
  43cedf:	nop
  43cee0:	push   rbx
  43cee1:	sub    rsp,0x20
  43cee5:	mov    eax,DWORD PTR [rip+0x2621d]        # 0x463108
  43ceeb:	test   eax,eax
  43ceed:	jne    0x43cf00
  43ceef:	xor    eax,eax
  43cef1:	add    rsp,0x20
  43cef5:	pop    rbx
  43cef6:	ret    
  43cef7:	nop    WORD PTR [rax+rax*1+0x0]
  43cf00:	mov    ebx,ecx
  43cf02:	lea    rcx,[rip+0x26217]        # 0x463120
  43cf09:	call   QWORD PTR [rip+0x276dd]        # 0x4645ec
  43cf0f:	mov    rdx,QWORD PTR [rip+0x261ea]        # 0x463100
  43cf16:	test   rdx,rdx
  43cf19:	je     0x43cf37
  43cf1b:	mov    eax,DWORD PTR [rdx]
  43cf1d:	cmp    eax,ebx
  43cf1f:	jne    0x43cf2e
  43cf21:	jmp    0x43cf6f
  43cf23:	mov    r8d,DWORD PTR [rax]
  43cf26:	cmp    r8d,ebx
  43cf29:	je     0x43cf50
  43cf2b:	mov    rdx,rax
  43cf2e:	mov    rax,QWORD PTR [rdx+0x10]
  43cf32:	test   rax,rax
  43cf35:	jne    0x43cf23
  43cf37:	lea    rcx,[rip+0x261e2]        # 0x463120
  43cf3e:	call   QWORD PTR [rip+0x27738]        # 0x46467c
  43cf44:	xor    eax,eax
  43cf46:	add    rsp,0x20
  43cf4a:	pop    rbx
  43cf4b:	ret    
  43cf4c:	nop    DWORD PTR [rax+0x0]
  43cf50:	mov    rcx,rax
  43cf53:	mov    rax,QWORD PTR [rax+0x10]
  43cf57:	mov    QWORD PTR [rdx+0x10],rax
  43cf5b:	call   0x4494c8
  43cf60:	lea    rcx,[rip+0x261b9]        # 0x463120
  43cf67:	call   QWORD PTR [rip+0x2770f]        # 0x46467c
  43cf6d:	jmp    0x43cf44
  43cf6f:	mov    rax,QWORD PTR [rdx+0x10]
  43cf73:	mov    rcx,rdx
  43cf76:	mov    QWORD PTR [rip+0x26183],rax        # 0x463100
  43cf7d:	jmp    0x43cf5b
  43cf7f:	nop
  43cf80:	push   rbx
  43cf81:	sub    rsp,0x20
  43cf85:	cmp    edx,0x1
  43cf88:	je     0x43d020
  43cf8e:	jb     0x43cfc0
  43cf90:	cmp    edx,0x2
  43cf93:	je     0x43cfb0
  43cf95:	cmp    edx,0x3
  43cf98:	jne    0x43cfb5
  43cf9a:	mov    eax,DWORD PTR [rip+0x26168]        # 0x463108
  43cfa0:	test   eax,eax
  43cfa2:	je     0x43cfb5
  43cfa4:	call   0x43cdf0
  43cfa9:	jmp    0x43cfb5
  43cfab:	nop    DWORD PTR [rax+rax*1+0x0]
  43cfb0:	call   0x43c480
  43cfb5:	mov    eax,0x1
  43cfba:	add    rsp,0x20
  43cfbe:	pop    rbx
  43cfbf:	ret    
  43cfc0:	mov    eax,DWORD PTR [rip+0x26142]        # 0x463108
  43cfc6:	test   eax,eax
  43cfc8:	jne    0x43d050
  43cfce:	mov    eax,DWORD PTR [rip+0x26134]        # 0x463108
  43cfd4:	cmp    eax,0x1
  43cfd7:	jne    0x43cfb5
  43cfd9:	mov    rcx,QWORD PTR [rip+0x26120]        # 0x463100
  43cfe0:	test   rcx,rcx
  43cfe3:	je     0x43cff6
  43cfe5:	mov    rbx,QWORD PTR [rcx+0x10]
  43cfe9:	call   0x4494c8
  43cfee:	test   rbx,rbx
  43cff1:	mov    rcx,rbx
  43cff4:	jne    0x43cfe5
  43cff6:	lea    rcx,[rip+0x26123]        # 0x463120
  43cffd:	mov    QWORD PTR [rip+0x260f8],0x0        # 0x463100
  43d008:	mov    DWORD PTR [rip+0x260f6],0x0        # 0x463108
  43d012:	call   QWORD PTR [rip+0x275cc]        # 0x4645e4
  43d018:	jmp    0x43cfb5
  43d01a:	nop    WORD PTR [rax+rax*1+0x0]
  43d020:	mov    eax,DWORD PTR [rip+0x260e2]        # 0x463108
  43d026:	test   eax,eax
  43d028:	je     0x43d040
  43d02a:	mov    eax,0x1
  43d02f:	mov    DWORD PTR [rip+0x260cf],0x1        # 0x463108
  43d039:	add    rsp,0x20
  43d03d:	pop    rbx
  43d03e:	ret    
  43d03f:	nop
  43d040:	lea    rcx,[rip+0x260d9]        # 0x463120
  43d047:	call   QWORD PTR [rip+0x2761f]        # 0x46466c
  43d04d:	jmp    0x43d02a
  43d04f:	nop
  43d050:	call   0x43cdf0
  43d055:	jmp    0x43cfce
  43d05a:	nop
  43d05b:	nop
  43d05c:	nop
  43d05d:	nop
  43d05e:	nop
  43d05f:	nop
  43d060:	movsxd rax,DWORD PTR [rcx+0x3c]
  43d064:	add    rcx,rax
  43d067:	xor    eax,eax
  43d069:	cmp    DWORD PTR [rcx],0x4550
  43d06f:	je     0x43d073
  43d071:	repz ret 
  43d073:	xor    eax,eax
  43d075:	cmp    WORD PTR [rcx+0x18],0x20b
  43d07b:	sete   al
  43d07e:	ret    
  43d07f:	nop
  43d080:	cmp    WORD PTR [rcx],0x5a4d
  43d085:	je     0x43d090
  43d087:	xor    eax,eax
  43d089:	ret    
  43d08a:	nop    WORD PTR [rax+rax*1+0x0]
  43d090:	jmp    0x43d060
  43d092:	nop    DWORD PTR [rax+0x0]
  43d096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d0a0:	movsxd rax,DWORD PTR [rcx+0x3c]
  43d0a4:	add    rcx,rax
  43d0a7:	movzx  eax,WORD PTR [rcx+0x14]
  43d0ab:	lea    rax,[rcx+rax*1+0x18]
  43d0b0:	movzx  ecx,WORD PTR [rcx+0x6]
  43d0b4:	test   ecx,ecx
  43d0b6:	je     0x43d0e1
  43d0b8:	sub    ecx,0x1
  43d0bb:	lea    rcx,[rcx+rcx*4]
  43d0bf:	lea    r9,[rax+rcx*8+0x28]
  43d0c4:	mov    r8d,DWORD PTR [rax+0xc]
  43d0c8:	cmp    r8,rdx
  43d0cb:	mov    rcx,r8
  43d0ce:	ja     0x43d0d8
  43d0d0:	add    ecx,DWORD PTR [rax+0x8]
  43d0d3:	cmp    rdx,rcx
  43d0d6:	jb     0x43d0e3
  43d0d8:	add    rax,0x28
  43d0dc:	cmp    rax,r9
  43d0df:	jne    0x43d0c4
  43d0e1:	xor    eax,eax
  43d0e3:	repz ret 
  43d0e5:	nop
  43d0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d0f0:	push   rdi
  43d0f1:	push   rsi
  43d0f2:	push   rbx
  43d0f3:	sub    rsp,0x20
  43d0f7:	mov    rsi,rcx
  43d0fa:	call   0x4493c0
  43d0ff:	cmp    rax,0x8
  43d103:	ja     0x43d120
  43d105:	mov    rbx,QWORD PTR [rip+0x1db94]        # 0x45aca0
  43d10c:	xor    edi,edi
  43d10e:	cmp    WORD PTR [rbx],0x5a4d
  43d113:	je     0x43d130
  43d115:	mov    rax,rdi
  43d118:	add    rsp,0x20
  43d11c:	pop    rbx
  43d11d:	pop    rsi
  43d11e:	pop    rdi
  43d11f:	ret    
  43d120:	xor    edi,edi
  43d122:	mov    rax,rdi
  43d125:	add    rsp,0x20
  43d129:	pop    rbx
  43d12a:	pop    rsi
  43d12b:	pop    rdi
  43d12c:	ret    
  43d12d:	nop    DWORD PTR [rax]
  43d130:	mov    rcx,rbx
  43d133:	call   0x43d060
  43d138:	test   eax,eax
  43d13a:	je     0x43d115
  43d13c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  43d140:	add    rdx,rbx
  43d143:	movzx  eax,WORD PTR [rdx+0x14]
  43d147:	lea    rbx,[rdx+rax*1+0x18]
  43d14c:	movzx  eax,WORD PTR [rdx+0x6]
  43d150:	test   eax,eax
  43d152:	je     0x43d115
  43d154:	sub    eax,0x1
  43d157:	lea    rax,[rax+rax*4]
  43d15b:	lea    rdi,[rbx+rax*8+0x28]
  43d160:	jmp    0x43d16b
  43d162:	add    rbx,0x28
  43d166:	cmp    rbx,rdi
  43d169:	je     0x43d120
  43d16b:	mov    r8d,0x8
  43d171:	mov    rdx,rsi
  43d174:	mov    rcx,rbx
  43d177:	call   0x4493b0
  43d17c:	test   eax,eax
  43d17e:	jne    0x43d162
  43d180:	mov    rdi,rbx
  43d183:	mov    rax,rdi
  43d186:	add    rsp,0x20
  43d18a:	pop    rbx
  43d18b:	pop    rsi
  43d18c:	pop    rdi
  43d18d:	ret    
  43d18e:	xchg   ax,ax
  43d190:	push   rsi
  43d191:	push   rbx
  43d192:	sub    rsp,0x28
  43d196:	mov    rbx,QWORD PTR [rip+0x1db03]        # 0x45aca0
  43d19d:	cmp    WORD PTR [rbx],0x5a4d
  43d1a2:	je     0x43d1b0
  43d1a4:	xor    eax,eax
  43d1a6:	add    rsp,0x28
  43d1aa:	pop    rbx
  43d1ab:	pop    rsi
  43d1ac:	ret    
  43d1ad:	nop    DWORD PTR [rax]
  43d1b0:	mov    rsi,rcx
  43d1b3:	mov    rcx,rbx
  43d1b6:	call   0x43d060
  43d1bb:	test   eax,eax
  43d1bd:	je     0x43d1a4
  43d1bf:	sub    rsi,rbx
  43d1c2:	mov    rcx,rbx
  43d1c5:	mov    rdx,rsi
  43d1c8:	add    rsp,0x28
  43d1cc:	pop    rbx
  43d1cd:	pop    rsi
  43d1ce:	jmp    0x43d0a0
  43d1d3:	nop    DWORD PTR [rax]
  43d1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d1e0:	push   rbx
  43d1e1:	sub    rsp,0x20
  43d1e5:	mov    rbx,QWORD PTR [rip+0x1dab4]        # 0x45aca0
  43d1ec:	xor    eax,eax
  43d1ee:	cmp    WORD PTR [rbx],0x5a4d
  43d1f3:	je     0x43d200
  43d1f5:	add    rsp,0x20
  43d1f9:	pop    rbx
  43d1fa:	ret    
  43d1fb:	nop    DWORD PTR [rax+rax*1+0x0]
  43d200:	mov    rcx,rbx
  43d203:	call   0x43d060
  43d208:	test   eax,eax
  43d20a:	je     0x43d1f5
  43d20c:	movsxd rax,DWORD PTR [rbx+0x3c]
  43d210:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  43d215:	add    rsp,0x20
  43d219:	pop    rbx
  43d21a:	ret    
  43d21b:	nop    DWORD PTR [rax+rax*1+0x0]
  43d220:	push   rdi
  43d221:	push   rsi
  43d222:	push   rbx
  43d223:	sub    rsp,0x20
  43d227:	mov    rsi,QWORD PTR [rip+0x1da72]        # 0x45aca0
  43d22e:	xor    edi,edi
  43d230:	mov    rbx,rcx
  43d233:	cmp    WORD PTR [rsi],0x5a4d
  43d238:	je     0x43d245
  43d23a:	mov    rax,rdi
  43d23d:	add    rsp,0x20
  43d241:	pop    rbx
  43d242:	pop    rsi
  43d243:	pop    rdi
  43d244:	ret    
  43d245:	mov    rcx,rsi
  43d248:	call   0x43d060
  43d24d:	test   eax,eax
  43d24f:	je     0x43d23a
  43d251:	movsxd rax,DWORD PTR [rsi+0x3c]
  43d255:	add    rsi,rax
  43d258:	movzx  eax,WORD PTR [rsi+0x14]
  43d25c:	lea    rdx,[rsi+rax*1+0x18]
  43d261:	movzx  eax,WORD PTR [rsi+0x6]
  43d265:	test   eax,eax
  43d267:	je     0x43d23a
  43d269:	sub    eax,0x1
  43d26c:	lea    rax,[rax+rax*4]
  43d270:	lea    rax,[rdx+rax*8+0x28]
  43d275:	test   BYTE PTR [rdx+0x27],0x20
  43d279:	je     0x43d284
  43d27b:	test   rbx,rbx
  43d27e:	je     0x43d2a0
  43d280:	sub    rbx,0x1
  43d284:	add    rdx,0x28
  43d288:	cmp    rdx,rax
  43d28b:	jne    0x43d275
  43d28d:	xor    edi,edi
  43d28f:	mov    rax,rdi
  43d292:	add    rsp,0x20
  43d296:	pop    rbx
  43d297:	pop    rsi
  43d298:	pop    rdi
  43d299:	ret    
  43d29a:	nop    WORD PTR [rax+rax*1+0x0]
  43d2a0:	mov    rdi,rdx
  43d2a3:	mov    rax,rdi
  43d2a6:	add    rsp,0x20
  43d2aa:	pop    rbx
  43d2ab:	pop    rsi
  43d2ac:	pop    rdi
  43d2ad:	ret    
  43d2ae:	xchg   ax,ax
  43d2b0:	push   rsi
  43d2b1:	push   rbx
  43d2b2:	sub    rsp,0x28
  43d2b6:	mov    rsi,QWORD PTR [rip+0x1d9e3]        # 0x45aca0
  43d2bd:	xor    ebx,ebx
  43d2bf:	cmp    WORD PTR [rsi],0x5a4d
  43d2c4:	je     0x43d2d0
  43d2c6:	mov    rax,rbx
  43d2c9:	add    rsp,0x28
  43d2cd:	pop    rbx
  43d2ce:	pop    rsi
  43d2cf:	ret    
  43d2d0:	mov    rcx,rsi
  43d2d3:	call   0x43d060
  43d2d8:	test   eax,eax
  43d2da:	cmovne rbx,rsi
  43d2de:	mov    rax,rbx
  43d2e1:	add    rsp,0x28
  43d2e5:	pop    rbx
  43d2e6:	pop    rsi
  43d2e7:	ret    
  43d2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  43d2f0:	push   rsi
  43d2f1:	push   rbx
  43d2f2:	sub    rsp,0x28
  43d2f6:	mov    rbx,QWORD PTR [rip+0x1d9a3]        # 0x45aca0
  43d2fd:	xor    eax,eax
  43d2ff:	cmp    WORD PTR [rbx],0x5a4d
  43d304:	je     0x43d310
  43d306:	add    rsp,0x28
  43d30a:	pop    rbx
  43d30b:	pop    rsi
  43d30c:	ret    
  43d30d:	nop    DWORD PTR [rax]
  43d310:	mov    rsi,rcx
  43d313:	mov    rcx,rbx
  43d316:	call   0x43d060
  43d31b:	test   eax,eax
  43d31d:	je     0x43d306
  43d31f:	sub    rsi,rbx
  43d322:	mov    rcx,rbx
  43d325:	mov    rdx,rsi
  43d328:	call   0x43d0a0
  43d32d:	test   rax,rax
  43d330:	je     0x43d341
  43d332:	mov    eax,DWORD PTR [rax+0x24]
  43d335:	not    eax
  43d337:	shr    eax,0x1f
  43d33a:	add    rsp,0x28
  43d33e:	pop    rbx
  43d33f:	pop    rsi
  43d340:	ret    
  43d341:	xor    eax,eax
  43d343:	jmp    0x43d306
  43d345:	nop
  43d346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d350:	push   rbp
  43d351:	push   rdi
  43d352:	push   rsi
  43d353:	push   rbx
  43d354:	sub    rsp,0x28
  43d358:	mov    rdi,QWORD PTR [rip+0x1d941]        # 0x45aca0
  43d35f:	xor    ebp,ebp
  43d361:	mov    esi,ecx
  43d363:	cmp    WORD PTR [rdi],0x5a4d
  43d368:	je     0x43d380
  43d36a:	mov    rax,rbp
  43d36d:	add    rsp,0x28
  43d371:	pop    rbx
  43d372:	pop    rsi
  43d373:	pop    rdi
  43d374:	pop    rbp
  43d375:	ret    
  43d376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d380:	mov    rcx,rdi
  43d383:	call   0x43d060
  43d388:	test   eax,eax
  43d38a:	je     0x43d36a
  43d38c:	movsxd rax,DWORD PTR [rdi+0x3c]
  43d390:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  43d397:	test   edx,edx
  43d399:	je     0x43d36a
  43d39b:	mov    ebx,edx
  43d39d:	mov    rcx,rdi
  43d3a0:	mov    rdx,rbx
  43d3a3:	call   0x43d0a0
  43d3a8:	test   rax,rax
  43d3ab:	je     0x43d36a
  43d3ad:	add    rbx,rdi
  43d3b0:	mov    rdx,rbx
  43d3b3:	jne    0x43d3c7
  43d3b5:	jmp    0x43d36a
  43d3b7:	nop    WORD PTR [rax+rax*1+0x0]
  43d3c0:	sub    esi,0x1
  43d3c3:	add    rdx,0x14
  43d3c7:	mov    ecx,DWORD PTR [rdx+0x4]
  43d3ca:	test   ecx,ecx
  43d3cc:	jne    0x43d3d5
  43d3ce:	mov    eax,DWORD PTR [rdx+0xc]
  43d3d1:	test   eax,eax
  43d3d3:	je     0x43d3f0
  43d3d5:	test   esi,esi
  43d3d7:	jg     0x43d3c0
  43d3d9:	mov    ebp,DWORD PTR [rdx+0xc]
  43d3dc:	add    rbp,rdi
  43d3df:	mov    rax,rbp
  43d3e2:	add    rsp,0x28
  43d3e6:	pop    rbx
  43d3e7:	pop    rsi
  43d3e8:	pop    rdi
  43d3e9:	pop    rbp
  43d3ea:	ret    
  43d3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  43d3f0:	xor    ebp,ebp
  43d3f2:	mov    rax,rbp
  43d3f5:	add    rsp,0x28
  43d3f9:	pop    rbx
  43d3fa:	pop    rsi
  43d3fb:	pop    rdi
  43d3fc:	pop    rbp
  43d3fd:	ret    
  43d3fe:	nop
  43d3ff:	nop
  43d400:	jmp    QWORD PTR [rip+0x27696]        # 0x464a9c
  43d406:	nop
  43d407:	nop
  43d408:	jmp    QWORD PTR [rip+0x27686]        # 0x464a94
  43d40e:	nop
  43d40f:	nop
  43d410:	push   rcx
  43d411:	push   rax
  43d412:	cmp    rax,0x1000
  43d418:	lea    rcx,[rsp+0x18]
  43d41d:	jb     0x43d438
  43d41f:	sub    rcx,0x1000
  43d426:	or     QWORD PTR [rcx],0x0
  43d42a:	sub    rax,0x1000
  43d430:	cmp    rax,0x1000
  43d436:	ja     0x43d41f
  43d438:	sub    rcx,rax
  43d43b:	or     QWORD PTR [rcx],0x0
  43d43f:	pop    rax
  43d440:	pop    rcx
  43d441:	ret    
  43d442:	nop
  43d443:	nop
  43d444:	nop
  43d445:	nop
  43d446:	nop
  43d447:	nop
  43d448:	nop
  43d449:	nop
  43d44a:	nop
  43d44b:	nop
  43d44c:	nop
  43d44d:	nop
  43d44e:	nop
  43d44f:	nop
  43d450:	push   rdi
  43d451:	push   rsi
  43d452:	push   rbx
  43d453:	sub    rsp,0x130
  43d45a:	mov    rbx,rcx
  43d45d:	call   0x4495c8
  43d462:	test   rbx,rbx
  43d465:	mov    DWORD PTR [rax],0x0
  43d46b:	je     0x43d61e
  43d471:	cmp    BYTE PTR [rbx],0x0
  43d474:	je     0x43d5e0
  43d47a:	mov    rcx,rbx
  43d47d:	call   QWORD PTR [rip+0x27191]        # 0x464614
  43d483:	cmp    eax,0xffffffff
  43d486:	je     0x43d600
  43d48c:	test   al,0x10
  43d48e:	je     0x43d5e0
  43d494:	lea    rdi,[rsp+0x20]
  43d499:	mov    rdx,rbx
  43d49c:	mov    r8d,0x104
  43d4a2:	mov    rcx,rdi
  43d4a5:	mov    rbx,rdi
  43d4a8:	call   0x4495a8
  43d4ad:	mov    r8d,DWORD PTR [rbx]
  43d4b0:	add    rbx,0x4
  43d4b4:	lea    eax,[r8-0x1010101]
  43d4bb:	not    r8d
  43d4be:	and    eax,r8d
  43d4c1:	and    eax,0x80808080
  43d4c6:	je     0x43d4ad
  43d4c8:	mov    edx,eax
  43d4ca:	shr    edx,0x10
  43d4cd:	test   eax,0x8080
  43d4d2:	cmove  eax,edx
  43d4d5:	lea    rdx,[rbx+0x2]
  43d4d9:	cmove  rbx,rdx
  43d4dd:	add    al,al
  43d4df:	sbb    rbx,0x3
  43d4e3:	sub    rbx,rdi
  43d4e6:	lea    rcx,[rbx+0x24b]
  43d4ed:	call   0x449468
  43d4f2:	test   rax,rax
  43d4f5:	mov    rsi,rax
  43d4f8:	je     0x43d60f
  43d4fe:	lea    r9,[rax+0x244]
  43d505:	lea    r8,[rbx+0x1]
  43d509:	mov    rdx,rdi
  43d50c:	mov    rcx,r9
  43d50f:	call   0x449450
  43d514:	cmp    BYTE PTR [rsi+0x244],0x0
  43d51b:	mov    r9,rax
  43d51e:	je     0x43d540
  43d520:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  43d528:	cmp    al,0x2f
  43d52a:	je     0x43d540
  43d52c:	cmp    al,0x5c
  43d52e:	je     0x43d540
  43d530:	mov    r8d,0x5c
  43d536:	mov    WORD PTR [r9+rbx*1],r8w
  43d53b:	nop    DWORD PTR [rax+rax*1+0x0]
  43d540:	mov    rcx,r9
  43d543:	mov    eax,DWORD PTR [rcx]
  43d545:	add    rcx,0x4
  43d549:	lea    edx,[rax-0x1010101]
  43d54f:	not    eax
  43d551:	and    edx,eax
  43d553:	and    edx,0x80808080
  43d559:	je     0x43d543
  43d55b:	mov    eax,edx
  43d55d:	shr    eax,0x10
  43d560:	test   edx,0x8080
  43d566:	cmove  edx,eax
  43d569:	lea    rax,[rcx+0x2]
  43d56d:	cmove  rcx,rax
  43d571:	add    dl,dl
  43d573:	mov    eax,0x2a
  43d578:	sbb    rcx,0x3
  43d57c:	xor    edx,edx
  43d57e:	mov    WORD PTR [rcx],ax
  43d581:	mov    WORD PTR [rsi+0x12c],dx
  43d588:	lea    rdx,[rsi+0x130]
  43d58f:	xor    ecx,ecx
  43d591:	xor    eax,eax
  43d593:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  43d59e:	mov    WORD PTR [rsi+0x12e],cx
  43d5a5:	mov    rdi,rdx
  43d5a8:	mov    ecx,0x20
  43d5ad:	mov    DWORD PTR [rsi+0x240],0x0
  43d5b7:	mov    DWORD PTR [rsi+0x128],0x0
  43d5c1:	rep stos QWORD PTR es:[rdi],rax
  43d5c4:	mov    rax,rsi
  43d5c7:	mov    DWORD PTR [rdi],0x0
  43d5cd:	add    rsp,0x130
  43d5d4:	pop    rbx
  43d5d5:	pop    rsi
  43d5d6:	pop    rdi
  43d5d7:	ret    
  43d5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  43d5e0:	call   0x4495c8
  43d5e5:	mov    DWORD PTR [rax],0x14
  43d5eb:	xor    eax,eax
  43d5ed:	add    rsp,0x130
  43d5f4:	pop    rbx
  43d5f5:	pop    rsi
  43d5f6:	pop    rdi
  43d5f7:	ret    
  43d5f8:	nop    DWORD PTR [rax+rax*1+0x0]
  43d600:	call   0x4495c8
  43d605:	mov    DWORD PTR [rax],0x2
  43d60b:	xor    eax,eax
  43d60d:	jmp    0x43d5cd
  43d60f:	call   0x4495c8
  43d614:	mov    DWORD PTR [rax],0xc
  43d61a:	xor    eax,eax
  43d61c:	jmp    0x43d5cd
  43d61e:	call   0x4495c8
  43d623:	mov    DWORD PTR [rax],0xe
  43d629:	xor    eax,eax
  43d62b:	jmp    0x43d5cd
  43d62d:	nop    DWORD PTR [rax]
  43d630:	push   rbp
  43d631:	push   rdi
  43d632:	push   rsi
  43d633:	push   rbx
  43d634:	sub    rsp,0x158
  43d63b:	mov    rbx,rcx
  43d63e:	call   0x4495c8
  43d643:	test   rbx,rbx
  43d646:	mov    DWORD PTR [rax],0x0
  43d64c:	je     0x43d83d
  43d652:	mov    eax,DWORD PTR [rbx+0x240]
  43d658:	test   eax,eax
  43d65a:	js     0x43d7df
  43d660:	lea    rdi,[rsp+0x20]
  43d665:	je     0x43d714
  43d66b:	mov    rcx,QWORD PTR [rbx+0x238]
  43d672:	mov    rdx,rdi
  43d675:	call   0x449348
  43d67a:	cmp    eax,0xffffffff
  43d67d:	mov    ebp,eax
  43d67f:	je     0x43d785
  43d685:	mov    eax,DWORD PTR [rsp+0x20]
  43d689:	lea    rsi,[rbx+0x24]
  43d68d:	lea    rdx,[rdi+0x28]
  43d691:	mov    r8d,0x104
  43d697:	mov    rcx,rsi
  43d69a:	mov    DWORD PTR [rbx],eax
  43d69c:	mov    rax,QWORD PTR [rsp+0x28]
  43d6a1:	mov    QWORD PTR [rbx+0x8],rax
  43d6a5:	mov    rax,QWORD PTR [rsp+0x30]
  43d6aa:	mov    QWORD PTR [rbx+0x10],rax
  43d6ae:	mov    rax,QWORD PTR [rsp+0x38]
  43d6b3:	mov    QWORD PTR [rbx+0x18],rax
  43d6b7:	mov    rax,QWORD PTR [rsp+0x40]
  43d6bc:	mov    DWORD PTR [rbx+0x20],eax
  43d6bf:	call   0x4493a8
  43d6c4:	test   ebp,ebp
  43d6c6:	jne    0x43d7b3
  43d6cc:	mov    eax,DWORD PTR [rbx+0x240]
  43d6d2:	add    eax,0x1
  43d6d5:	test   eax,eax
  43d6d7:	mov    DWORD PTR [rbx+0x240],eax
  43d6dd:	jle    0x43d7df
  43d6e3:	mov    rcx,rsi
  43d6e6:	call   0x4493c0
  43d6eb:	lea    rcx,[rbx+0x130]
  43d6f2:	mov    WORD PTR [rbx+0x12e],ax
  43d6f9:	mov    rdx,rsi
  43d6fc:	call   0x4493d8
  43d701:	lea    rax,[rbx+0x128]
  43d708:	add    rsp,0x158
  43d70f:	pop    rbx
  43d710:	pop    rsi
  43d711:	pop    rdi
  43d712:	pop    rbp
  43d713:	ret    
  43d714:	lea    rcx,[rbx+0x244]
  43d71b:	mov    rdx,rdi
  43d71e:	call   0x4495b8
  43d723:	cmp    rax,0xffffffffffffffff
  43d727:	mov    rbp,rax
  43d72a:	je     0x43d7f0
  43d730:	mov    eax,DWORD PTR [rsp+0x20]
  43d734:	lea    rsi,[rbx+0x24]
  43d738:	lea    rdx,[rdi+0x28]
  43d73c:	mov    r8d,0x104
  43d742:	mov    rcx,rsi
  43d745:	mov    DWORD PTR [rbx],eax
  43d747:	mov    rax,QWORD PTR [rsp+0x28]
  43d74c:	mov    QWORD PTR [rbx+0x8],rax
  43d750:	mov    rax,QWORD PTR [rsp+0x30]
  43d755:	mov    QWORD PTR [rbx+0x10],rax
  43d759:	mov    rax,QWORD PTR [rsp+0x38]
  43d75e:	mov    QWORD PTR [rbx+0x18],rax
  43d762:	mov    rax,QWORD PTR [rsp+0x40]
  43d767:	mov    DWORD PTR [rbx+0x20],eax
  43d76a:	call   0x4493a8
  43d76f:	mov    QWORD PTR [rbx+0x238],rbp
  43d776:	mov    DWORD PTR [rbx+0x240],0x1
  43d780:	jmp    0x43d6e3
  43d785:	lea    rdi,[rbx+0x8]
  43d789:	mov    rcx,rbx
  43d78c:	xor    eax,eax
  43d78e:	mov    QWORD PTR [rbx],0x0
  43d795:	mov    QWORD PTR [rbx+0x120],0x0
  43d7a0:	and    rdi,0xfffffffffffffff8
  43d7a4:	sub    rcx,rdi
  43d7a7:	add    ecx,0x128
  43d7ad:	shr    ecx,0x3
  43d7b0:	rep stos QWORD PTR es:[rdi],rax
  43d7b3:	call   QWORD PTR [rip+0x26e6b]        # 0x464624
  43d7b9:	cmp    eax,0x12
  43d7bc:	je     0x43d830
  43d7be:	mov    rcx,QWORD PTR [rbx+0x238]
  43d7c5:	call   0x4495c0
  43d7ca:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  43d7d5:	mov    DWORD PTR [rbx+0x240],0xffffffff
  43d7df:	xor    eax,eax
  43d7e1:	add    rsp,0x158
  43d7e8:	pop    rbx
  43d7e9:	pop    rsi
  43d7ea:	pop    rdi
  43d7eb:	pop    rbp
  43d7ec:	ret    
  43d7ed:	nop    DWORD PTR [rax]
  43d7f0:	lea    rdi,[rbx+0x8]
  43d7f4:	mov    rcx,rbx
  43d7f7:	xor    eax,eax
  43d7f9:	mov    QWORD PTR [rbx],0x0
  43d800:	mov    QWORD PTR [rbx+0x120],0x0
  43d80b:	and    rdi,0xfffffffffffffff8
  43d80f:	sub    rcx,rdi
  43d812:	add    ecx,0x128
  43d818:	shr    ecx,0x3
  43d81b:	rep stos QWORD PTR es:[rdi],rax
  43d81e:	mov    QWORD PTR [rbx+0x238],rbp
  43d825:	mov    DWORD PTR [rbx+0x240],ebp
  43d82b:	xor    eax,eax
  43d82d:	jmp    0x43d7e1
  43d82f:	nop
  43d830:	call   0x4495c8
  43d835:	mov    DWORD PTR [rax],0x0
  43d83b:	jmp    0x43d7be
  43d83d:	call   0x4495c8
  43d842:	mov    DWORD PTR [rax],0xe
  43d848:	xor    eax,eax
  43d84a:	jmp    0x43d708
  43d84f:	nop
  43d850:	push   rsi
  43d851:	push   rbx
  43d852:	sub    rsp,0x28
  43d856:	mov    rsi,rcx
  43d859:	call   0x4495c8
  43d85e:	test   rsi,rsi
  43d861:	mov    DWORD PTR [rax],0x0
  43d867:	je     0x43d890
  43d869:	mov    rcx,QWORD PTR [rsi+0x238]
  43d870:	xor    ebx,ebx
  43d872:	cmp    rcx,0xffffffffffffffff
  43d876:	je     0x43d87f
  43d878:	call   0x4495c0
  43d87d:	mov    ebx,eax
  43d87f:	mov    rcx,rsi
  43d882:	call   0x4494c8
  43d887:	mov    eax,ebx
  43d889:	add    rsp,0x28
  43d88d:	pop    rbx
  43d88e:	pop    rsi
  43d88f:	ret    
  43d890:	call   0x4495c8
  43d895:	mov    DWORD PTR [rax],0xe
  43d89b:	mov    eax,0xffffffff
  43d8a0:	jmp    0x43d889
  43d8a2:	nop    DWORD PTR [rax+0x0]
  43d8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d8b0:	push   rbx
  43d8b1:	sub    rsp,0x20
  43d8b5:	mov    rbx,rcx
  43d8b8:	call   0x4495c8
  43d8bd:	test   rbx,rbx
  43d8c0:	mov    DWORD PTR [rax],0x0
  43d8c6:	je     0x43d8f5
  43d8c8:	mov    rcx,QWORD PTR [rbx+0x238]
  43d8cf:	cmp    rcx,0xffffffffffffffff
  43d8d3:	je     0x43d8da
  43d8d5:	call   0x4495c0
  43d8da:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  43d8e5:	mov    DWORD PTR [rbx+0x240],0x0
  43d8ef:	add    rsp,0x20
  43d8f3:	pop    rbx
  43d8f4:	ret    
  43d8f5:	call   0x4495c8
  43d8fa:	mov    DWORD PTR [rax],0xe
  43d900:	jmp    0x43d8ef
  43d902:	nop    DWORD PTR [rax+0x0]
  43d906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d910:	push   rbx
  43d911:	sub    rsp,0x20
  43d915:	mov    rbx,rcx
  43d918:	call   0x4495c8
  43d91d:	test   rbx,rbx
  43d920:	mov    DWORD PTR [rax],0x0
  43d926:	je     0x43d934
  43d928:	mov    eax,DWORD PTR [rbx+0x240]
  43d92e:	add    rsp,0x20
  43d932:	pop    rbx
  43d933:	ret    
  43d934:	call   0x4495c8
  43d939:	mov    DWORD PTR [rax],0xe
  43d93f:	mov    eax,0xffffffff
  43d944:	jmp    0x43d92e
  43d946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d950:	push   rsi
  43d951:	push   rbx
  43d952:	sub    rsp,0x28
  43d956:	mov    rbx,rcx
  43d959:	mov    esi,edx
  43d95b:	call   0x4495c8
  43d960:	test   rbx,rbx
  43d963:	mov    DWORD PTR [rax],0x0
  43d969:	je     0x43d9dd
  43d96b:	cmp    esi,0xffffffff
  43d96e:	jl     0x43d9d0
  43d970:	je     0x43d9a0
  43d972:	mov    rcx,rbx
  43d975:	call   0x43d8b0
  43d97a:	jmp    0x43d98d
  43d97c:	nop    DWORD PTR [rax+0x0]
  43d980:	mov    rcx,rbx
  43d983:	call   0x43d630
  43d988:	test   rax,rax
  43d98b:	je     0x43d9c7
  43d98d:	cmp    esi,DWORD PTR [rbx+0x240]
  43d993:	jg     0x43d980
  43d995:	add    rsp,0x28
  43d999:	pop    rbx
  43d99a:	pop    rsi
  43d99b:	ret    
  43d99c:	nop    DWORD PTR [rax+0x0]
  43d9a0:	mov    rcx,QWORD PTR [rbx+0x238]
  43d9a7:	cmp    rcx,0xffffffffffffffff
  43d9ab:	je     0x43d9b2
  43d9ad:	call   0x4495c0
  43d9b2:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  43d9bd:	mov    DWORD PTR [rbx+0x240],0xffffffff
  43d9c7:	add    rsp,0x28
  43d9cb:	pop    rbx
  43d9cc:	pop    rsi
  43d9cd:	ret    
  43d9ce:	xchg   ax,ax
  43d9d0:	call   0x4495c8
  43d9d5:	mov    DWORD PTR [rax],0x16
  43d9db:	jmp    0x43d9c7
  43d9dd:	call   0x4495c8
  43d9e2:	mov    DWORD PTR [rax],0xe
  43d9e8:	jmp    0x43d9c7
  43d9ea:	nop
  43d9eb:	nop
  43d9ec:	nop
  43d9ed:	nop
  43d9ee:	nop
  43d9ef:	nop
  43d9f0:	push   rsi
  43d9f1:	push   rbx
  43d9f2:	sub    rsp,0xe8
  43d9f9:	test   rdx,rdx
  43d9fc:	mov    rbx,rcx
  43d9ff:	mov    rsi,rdx
  43da02:	je     0x43da26
  43da04:	lea    rcx,[rsp+0x30]
  43da09:	call   QWORD PTR [rip+0x26c4d]        # 0x46465c
  43da0f:	cmp    eax,0xffffffff
  43da12:	je     0x43da80
  43da14:	mov    edx,DWORD PTR [rsp+0x30]
  43da18:	cmp    eax,0x2
  43da1b:	sete   al
  43da1e:	movzx  eax,al
  43da21:	mov    DWORD PTR [rsi],edx
  43da23:	mov    DWORD PTR [rsi+0x4],eax
  43da26:	test   rbx,rbx
  43da29:	je     0x43da6e
  43da2b:	lea    rcx,[rsp+0x20]
  43da30:	call   QWORD PTR [rip+0x26c0e]        # 0x464644
  43da36:	movabs r8,0xfe624e212ac18000
  43da40:	add    r8,QWORD PTR [rsp+0x20]
  43da45:	movabs rdx,0xd6bf94d5e57a42bd
  43da4f:	mov    rax,r8
  43da52:	mul    rdx
  43da55:	shr    rdx,0x17
  43da59:	mov    QWORD PTR [rbx],rdx
  43da5c:	imul   rdx,rdx,0x989680
  43da63:	sub    r8,rdx
  43da66:	imul   r8d,r8d,0x64
  43da6a:	mov    DWORD PTR [rbx+0x8],r8d
  43da6e:	xor    eax,eax
  43da70:	add    rsp,0xe8
  43da77:	pop    rbx
  43da78:	pop    rsi
  43da79:	ret    
  43da7a:	nop    WORD PTR [rax+rax*1+0x0]
  43da80:	mov    DWORD PTR [rsi],0x0
  43da86:	mov    DWORD PTR [rsi+0x4],0x0
  43da8d:	jmp    0x43da26
  43da8f:	nop
  43da90:	push   rbx
  43da91:	sub    rsp,0x30
  43da95:	mov    rbx,rcx
  43da98:	lea    rcx,[rsp+0x20]
  43da9d:	call   0x43d9f0
  43daa2:	test   eax,eax
  43daa4:	mov    r9d,eax
  43daa7:	jne    0x43dad5
  43daa9:	mov    rax,QWORD PTR [rsp+0x20]
  43daae:	mov    r8d,DWORD PTR [rsp+0x28]
  43dab3:	mov    edx,0x10624dd3
  43dab8:	mov    DWORD PTR [rbx],eax
  43daba:	mov    eax,r8d
  43dabd:	sar    r8d,0x1f
  43dac1:	imul   edx
  43dac3:	sar    edx,0x6
  43dac6:	sub    edx,r8d
  43dac9:	mov    DWORD PTR [rbx+0x4],edx
  43dacc:	mov    eax,r9d
  43dacf:	add    rsp,0x30
  43dad3:	pop    rbx
  43dad4:	ret    
  43dad5:	mov    r9d,0xffffffff
  43dadb:	jmp    0x43dacc
  43dadd:	nop    DWORD PTR [rax]
  43dae0:	push   rbx
  43dae1:	sub    rsp,0x30
  43dae5:	mov    rbx,rcx
  43dae8:	lea    rcx,[rsp+0x20]
  43daed:	call   0x43d9f0
  43daf2:	test   eax,eax
  43daf4:	mov    r9d,eax
  43daf7:	jne    0x43db25
  43daf9:	mov    rax,QWORD PTR [rsp+0x20]
  43dafe:	mov    r8d,DWORD PTR [rsp+0x28]
  43db03:	mov    edx,0x10624dd3
  43db08:	mov    DWORD PTR [rbx],eax
  43db0a:	mov    eax,r8d
  43db0d:	sar    r8d,0x1f
  43db11:	imul   edx
  43db13:	sar    edx,0x6
  43db16:	sub    edx,r8d
  43db19:	mov    DWORD PTR [rbx+0x4],edx
  43db1c:	mov    eax,r9d
  43db1f:	add    rsp,0x30
  43db23:	pop    rbx
  43db24:	ret    
  43db25:	mov    r9d,0xffffffff
  43db2b:	jmp    0x43db1c
  43db2d:	nop
  43db2e:	nop
  43db2f:	nop
  43db30:	sub    rsp,0x38
  43db34:	mov    r9,rdx
  43db37:	mov    QWORD PTR [rsp+0x20],r8
  43db3c:	mov    rdx,rcx
  43db3f:	xor    r8d,r8d
  43db42:	mov    ecx,0x6000
  43db47:	call   0x443110
  43db4c:	add    rsp,0x38
  43db50:	ret    
  43db51:	nop
  43db52:	nop
  43db53:	nop
  43db54:	nop
  43db55:	nop
  43db56:	nop
  43db57:	nop
  43db58:	nop
  43db59:	nop
  43db5a:	nop
  43db5b:	nop
  43db5c:	nop
  43db5d:	nop
  43db5e:	nop
  43db5f:	nop
  43db60:	push   rbx
  43db61:	sub    rsp,0x20
  43db65:	test   rcx,rcx
  43db68:	je     0x43db8d
  43db6a:	mov    rax,QWORD PTR [rcx]
  43db6d:	test   rax,rax
  43db70:	je     0x43db8d
  43db72:	sub    rdx,rax
  43db75:	cmp    rdx,r8
  43db78:	je     0x43db8d
  43db7a:	mov    rbx,rcx
  43db7d:	mov    rcx,rax
  43db80:	call   0x449420
  43db85:	test   rax,rax
  43db88:	je     0x43db8d
  43db8a:	mov    QWORD PTR [rbx],rax
  43db8d:	add    rsp,0x20
  43db91:	pop    rbx
  43db92:	ret    
  43db93:	nop    DWORD PTR [rax]
  43db96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43dba0:	push   rdi
  43dba1:	push   rsi
  43dba2:	push   rbx
  43dba3:	sub    rsp,0x20
  43dba7:	test   rdx,rdx
  43dbaa:	mov    rdi,rcx
  43dbad:	mov    rbx,rdx
  43dbb0:	je     0x43dbc1
  43dbb2:	mov    rcx,QWORD PTR [rdx]
  43dbb5:	call   0x4494c8
  43dbba:	mov    QWORD PTR [rbx],0x0
  43dbc1:	test   rdi,rdi
  43dbc4:	je     0x43dc1f
  43dbc6:	mov    rsi,QWORD PTR [rdi]
  43dbc9:	test   rsi,rsi
  43dbcc:	je     0x43dc1f
  43dbce:	xchg   ax,ax
  43dbd0:	xor    ebx,ebx
  43dbd2:	cmp    QWORD PTR [rsi],0x0
  43dbd6:	je     0x43dc02
  43dbd8:	nop    DWORD PTR [rax+rax*1+0x0]
  43dbe0:	mov    rax,QWORD PTR [rsi+rbx*8+0x10]
  43dbe5:	mov    rcx,QWORD PTR [rax]
  43dbe8:	call   0x4494c8
  43dbed:	mov    rax,QWORD PTR [rsi+rbx*8+0x10]
  43dbf2:	add    rbx,0x1
  43dbf6:	cmp    QWORD PTR [rsi],rbx
  43dbf9:	mov    QWORD PTR [rax],0x0
  43dc00:	ja     0x43dbe0
  43dc02:	mov    rbx,QWORD PTR [rsi+0x8]
  43dc06:	mov    rcx,rsi
  43dc09:	call   0x4494c8
  43dc0e:	test   rbx,rbx
  43dc11:	je     0x43dc18
  43dc13:	mov    rsi,rbx
  43dc16:	jmp    0x43dbd0
  43dc18:	mov    QWORD PTR [rdi],0x0
  43dc1f:	add    rsp,0x20
  43dc23:	pop    rbx
  43dc24:	pop    rsi
  43dc25:	pop    rdi
  43dc26:	ret    
  43dc27:	nop    WORD PTR [rax+rax*1+0x0]
  43dc30:	push   rsi
  43dc31:	push   rbx
  43dc32:	sub    rsp,0x38
  43dc36:	mov    r9,QWORD PTR [rdx]
  43dc39:	mov    rsi,rdx
  43dc3c:	cmp    r9,rcx
  43dc3f:	je     0x43dc50
  43dc41:	mov    rax,r8
  43dc44:	add    rsp,0x38
  43dc48:	pop    rbx
  43dc49:	pop    rsi
  43dc4a:	ret    
  43dc4b:	nop    DWORD PTR [rax+rax*1+0x0]
  43dc50:	lea    rbx,[r9+r9*1]
  43dc54:	mov    eax,0x100
  43dc59:	cmp    rbx,0x100
  43dc60:	cmovb  rbx,rax
  43dc64:	test   r8,r8
  43dc67:	je     0x43dc93
  43dc69:	mov    rcx,r8
  43dc6c:	mov    rdx,rbx
  43dc6f:	mov    QWORD PTR [rsp+0x28],r8
  43dc74:	call   0x449420
  43dc79:	test   rax,rax
  43dc7c:	mov    r8,QWORD PTR [rsp+0x28]
  43dc81:	je     0x43dcb0
  43dc83:	mov    r8,rax
  43dc86:	mov    QWORD PTR [rsi],rbx
  43dc89:	mov    rax,r8
  43dc8c:	add    rsp,0x38
  43dc90:	pop    rbx
  43dc91:	pop    rsi
  43dc92:	ret    
  43dc93:	mov    rcx,rbx
  43dc96:	mov    QWORD PTR [rsp+0x28],r8
  43dc9b:	call   0x449468
  43dca0:	test   rax,rax
  43dca3:	mov    r8,QWORD PTR [rsp+0x28]
  43dca8:	jne    0x43dc83
  43dcaa:	jmp    0x43dc41
  43dcac:	nop    DWORD PTR [rax+0x0]
  43dcb0:	mov    rcx,r8
  43dcb3:	call   0x4494c8
  43dcb8:	xor    r8d,r8d
  43dcbb:	jmp    0x43dc41
  43dcbd:	nop    DWORD PTR [rax]
  43dcc0:	push   r12
  43dcc2:	push   rbp
  43dcc3:	push   rdi
  43dcc4:	push   rsi
  43dcc5:	push   rbx
  43dcc6:	sub    rsp,0x20
  43dcca:	cmp    ecx,0xffffffff
  43dccd:	mov    r12d,ecx
  43dcd0:	mov    rsi,rdx
  43dcd3:	mov    rbp,r8
  43dcd6:	mov    rdi,r9
  43dcd9:	je     0x43dd40
  43dcdb:	test   rdx,rdx
  43dcde:	je     0x43dd08
  43dce0:	mov    rcx,QWORD PTR [rdx]
  43dce3:	test   rcx,rcx
  43dce6:	je     0x43dd01
  43dce8:	nop    DWORD PTR [rax+rax*1+0x0]
  43dcf0:	mov    rbx,QWORD PTR [rcx+0x8]
  43dcf4:	call   0x4494c8
  43dcf9:	test   rbx,rbx
  43dcfc:	mov    rcx,rbx
  43dcff:	jne    0x43dcf0
  43dd01:	mov    QWORD PTR [rsi],0x0
  43dd08:	test   rbp,rbp
  43dd0b:	je     0x43dd1e
  43dd0d:	mov    rcx,QWORD PTR [rbp+0x0]
  43dd11:	call   0x4494c8
  43dd16:	mov    QWORD PTR [rbp+0x0],0x0
  43dd1e:	test   rdi,rdi
  43dd21:	je     0x43dd32
  43dd23:	mov    rcx,QWORD PTR [rdi]
  43dd26:	call   0x4494c8
  43dd2b:	mov    QWORD PTR [rdi],0x0
  43dd32:	mov    eax,r12d
  43dd35:	add    rsp,0x20
  43dd39:	pop    rbx
  43dd3a:	pop    rsi
  43dd3b:	pop    rdi
  43dd3c:	pop    rbp
  43dd3d:	pop    r12
  43dd3f:	ret    
  43dd40:	mov    rdx,r9
  43dd43:	mov    rcx,rsi
  43dd46:	call   0x43dba0
  43dd4b:	jmp    0x43dd32
  43dd4d:	nop    DWORD PTR [rax]
  43dd50:	sub    rsp,0x28
  43dd54:	test   edx,edx
  43dd56:	je     0x43dd70
  43dd58:	lea    r8d,[rdx-0x2]
  43dd5c:	cmp    edx,0x1
  43dd5f:	lea    rax,[rcx+r8*8+0x8]
  43dd64:	cmove  rax,rcx
  43dd68:	mov    rax,QWORD PTR [rax]
  43dd6b:	add    rsp,0x28
  43dd6f:	ret    
  43dd70:	call   0x449548
  43dd75:	nop
  43dd76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43dd80:	push   rbx
  43dd81:	sub    rsp,0x20
  43dd85:	mov    rbx,rcx
  43dd88:	mov    ecx,0x110
  43dd8d:	call   0x449468
  43dd92:	mov    QWORD PTR [rax],0x0
  43dd99:	mov    QWORD PTR [rax+0x8],rbx
  43dd9d:	add    rsp,0x20
  43dda1:	pop    rbx
  43dda2:	ret    
  43dda3:	nop    DWORD PTR [rax]
  43dda6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ddb0:	push   rsi
  43ddb1:	push   rbx
  43ddb2:	sub    rsp,0x28
  43ddb6:	mov    eax,DWORD PTR [rcx+0x100c]
  43ddbc:	test   eax,eax
  43ddbe:	je     0x43dde0
  43ddc0:	sub    eax,0x1
  43ddc3:	mov    DWORD PTR [rcx+0x100c],eax
  43ddc9:	cdqe   
  43ddcb:	mov    eax,DWORD PTR [rcx+rax*4+0x8]
  43ddcf:	add    QWORD PTR [rdx],0x1
  43ddd3:	add    rsp,0x28
  43ddd7:	pop    rbx
  43ddd8:	pop    rsi
  43ddd9:	ret    
  43ddda:	nop    WORD PTR [rax+rax*1+0x0]
  43dde0:	test   BYTE PTR [rcx+0x1010],0x1
  43dde7:	jne    0x43de40
  43dde9:	test   BYTE PTR [rcx+0x1008],0x1
  43ddf0:	mov    rbx,rcx
  43ddf3:	mov    rsi,rdx
  43ddf6:	mov    rcx,QWORD PTR [rcx]
  43ddf9:	je     0x43de14
  43ddfb:	movzx  eax,BYTE PTR [rcx]
  43ddfe:	add    rcx,0x1
  43de02:	test   eax,eax
  43de04:	je     0x43de30
  43de06:	add    QWORD PTR [rdx],0x1
  43de0a:	mov    QWORD PTR [rbx],rcx
  43de0d:	add    rsp,0x28
  43de11:	pop    rbx
  43de12:	pop    rsi
  43de13:	ret    
  43de14:	call   0x4494a0
  43de19:	cmp    eax,0xffffffff
  43de1c:	je     0x43de30
  43de1e:	add    QWORD PTR [rsi],0x1
  43de22:	add    rsp,0x28
  43de26:	pop    rbx
  43de27:	pop    rsi
  43de28:	ret    
  43de29:	nop    DWORD PTR [rax+0x0]
  43de30:	or     BYTE PTR [rbx+0x1010],0x1
  43de37:	mov    eax,0xffffffff
  43de3c:	jmp    0x43ddd3
  43de3e:	xchg   ax,ax
  43de40:	mov    eax,0xffffffff
  43de45:	jmp    0x43ddd3
  43de47:	nop    WORD PTR [rax+rax*1+0x0]
  43de50:	push   rbx
  43de51:	sub    rsp,0x20
  43de55:	test   r9d,r9d
  43de58:	jne    0x43de65
  43de5a:	cmp    ecx,0xffffffff
  43de5d:	jne    0x43de65
  43de5f:	add    rsp,0x20
  43de63:	pop    rbx
  43de64:	ret    
  43de65:	test   BYTE PTR [rdx+0x1008],0x1
  43de6c:	je     0x43de90
  43de6e:	sub    QWORD PTR [r8],0x1
  43de72:	movsxd r8,DWORD PTR [rdx+0x100c]
  43de79:	mov    rax,r8
  43de7c:	mov    DWORD PTR [rdx+r8*4+0x8],ecx
  43de81:	add    eax,0x1
  43de84:	mov    DWORD PTR [rdx+0x100c],eax
  43de8a:	add    rsp,0x20
  43de8e:	pop    rbx
  43de8f:	ret    
  43de90:	mov    rdx,QWORD PTR [rdx]
  43de93:	mov    rbx,r8
  43de96:	call   0x449368
  43de9b:	sub    QWORD PTR [rbx],0x1
  43de9f:	add    rsp,0x20
  43dea3:	pop    rbx
  43dea4:	ret    
  43dea5:	nop
  43dea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43deb0:	push   r15
  43deb2:	push   r14
  43deb4:	push   r13
  43deb6:	push   r12
  43deb8:	push   rbp
  43deb9:	push   rdi
  43deba:	push   rsi
  43debb:	push   rbx
  43debc:	sub    rsp,0x168
  43dec3:	movaps XMMWORD PTR [rsp+0x130],xmm6
  43decb:	movaps XMMWORD PTR [rsp+0x140],xmm7
  43ded3:	movaps XMMWORD PTR [rsp+0x150],xmm8
  43dedc:	test   rcx,rcx
  43dedf:	mov    r14,rcx
  43dee2:	mov    rbp,rdx
  43dee5:	mov    QWORD PTR [rsp+0x1c0],r8
  43deed:	mov    QWORD PTR [rsp+0x108],0x0
  43def9:	mov    QWORD PTR [rsp+0x110],0x0
  43df05:	mov    QWORD PTR [rsp+0x118],0x0
  43df11:	mov    QWORD PTR [rsp+0x120],0x0
  43df1d:	je     0x43fe65
  43df23:	test   rdx,rdx
  43df26:	sete   dl
  43df29:	cmp    QWORD PTR [rcx],0x0
  43df2d:	sete   al
  43df30:	or     dl,al
  43df32:	jne    0x43fe65
  43df38:	mov    DWORD PTR [rsp+0xf8],0x0
  43df43:	call   0x449470
  43df48:	mov    rax,QWORD PTR [rax]
  43df4b:	mov    QWORD PTR [rsp+0x70],rax
  43df50:	call   0x449470
  43df55:	mov    rax,QWORD PTR [rax+0x8]
  43df59:	test   rax,rax
  43df5c:	mov    QWORD PTR [rsp+0x40],rax
  43df61:	mov    rdi,rax
  43df64:	je     0x43df77
  43df66:	cmp    BYTE PTR [rax],0x0
  43df69:	mov    eax,0x0
  43df6e:	cmovne rax,rdi
  43df72:	mov    QWORD PTR [rsp+0x40],rax
  43df77:	mov    rax,QWORD PTR [rsp+0x1c0]
  43df7f:	movzx  esi,BYTE PTR [rbp+0x0]
  43df83:	xor    r13d,r13d
  43df86:	mov    DWORD PTR [rsp+0x48],0x0
  43df8e:	mov    DWORD PTR [rsp+0x4c],0x0
  43df96:	lea    r12,[rsp+0x110]
  43df9e:	mov    QWORD PTR [rsp+0x78],0x0
  43dfa7:	mov    QWORD PTR [rsp+0x28],0x0
  43dfb0:	movss  xmm7,DWORD PTR [rip+0x1c608]        # 0x45a5c0
  43dfb8:	mov    QWORD PTR [rsp+0x50],rax
  43dfbd:	lea    rax,[rsp+0xfc]
  43dfc5:	mov    QWORD PTR [rsp+0x80],0x0
  43dfd1:	test   sil,sil
  43dfd4:	mov    QWORD PTR [rsp+0x58],0x0
  43dfdd:	mov    r15d,r13d
  43dfe0:	mov    QWORD PTR [rsp+0x88],rax
  43dfe8:	lea    rax,[rsp+0x100]
  43dff0:	movsd  xmm6,QWORD PTR [rip+0x1c5b8]        # 0x45a5b0
  43dff8:	mov    QWORD PTR [rsp+0x90],rax
  43e000:	lea    rax,[rsp+0x128]
  43e008:	mov    QWORD PTR [rsp+0x98],rax
  43e010:	je     0x43e046
  43e012:	test   sil,sil
  43e015:	js     0x43e3b0
  43e01b:	cmp    sil,0x25
  43e01f:	lea    rbx,[rbp+0x1]
  43e023:	je     0x43e090
  43e025:	mov    ecx,esi
  43e027:	call   0x449488
  43e02c:	test   eax,eax
  43e02e:	je     0x43e203
  43e034:	mov    r13d,0x1
  43e03a:	mov    rbp,rbx
  43e03d:	movzx  esi,BYTE PTR [rbp+0x0]
  43e041:	test   sil,sil
  43e044:	jne    0x43e012
  43e046:	test   r13d,r13d
  43e049:	je     0x43e360
  43e04f:	lea    rsi,[rsp+0x110]
  43e057:	nop    WORD PTR [rax+rax*1+0x0]
  43e060:	mov    rdx,rsi
  43e063:	mov    rcx,r14
  43e066:	call   0x43ddb0
  43e06b:	mov    ecx,eax
  43e06d:	mov    ebx,eax
  43e06f:	call   0x449488
  43e074:	test   eax,eax
  43e076:	jne    0x43e060
  43e078:	xor    r9d,r9d
  43e07b:	mov    r8,rsi
  43e07e:	mov    rdx,r14
  43e081:	mov    ecx,ebx
  43e083:	call   0x43de50
  43e088:	jmp    0x43e360
  43e08d:	nop    DWORD PTR [rax]
  43e090:	movzx  edi,BYTE PTR [rbp+0x1]
  43e094:	mov    eax,edi
  43e096:	sub    edi,0x30
  43e099:	cmp    edi,0x9
  43e09c:	jbe    0x43e260
  43e0a2:	mov    edx,eax
  43e0a4:	xor    edi,edi
  43e0a6:	xor    eax,eax
  43e0a8:	mov    rcx,QWORD PTR [rsp+0x40]
  43e0ad:	jmp    0x43e0cf
  43e0af:	nop
  43e0b0:	cmp    dl,0x27
  43e0b3:	je     0x43e0e0
  43e0b5:	cmp    dl,0x49
  43e0b8:	jne    0x43e120
  43e0ba:	movzx  edx,BYTE PTR [rbx+0x1]
  43e0be:	cmp    dl,0x36
  43e0c1:	je     0x43e0f0
  43e0c3:	cmp    dl,0x33
  43e0c6:	je     0x43e103
  43e0c8:	or     eax,0xc
  43e0cb:	add    rbx,0x1
  43e0cf:	cmp    dl,0x2a
  43e0d2:	jne    0x43e0b0
  43e0d4:	or     al,0x80
  43e0d6:	movzx  edx,BYTE PTR [rbx+0x1]
  43e0da:	jmp    0x43e0cb
  43e0dc:	nop    DWORD PTR [rax+0x0]
  43e0e0:	test   rcx,rcx
  43e0e3:	je     0x43e0e8
  43e0e5:	or     ah,0x1
  43e0e8:	movzx  edx,BYTE PTR [rbx+0x1]
  43e0ec:	jmp    0x43e0cb
  43e0ee:	xchg   ax,ax
  43e0f0:	cmp    BYTE PTR [rbx+0x2],0x34
  43e0f4:	jne    0x43e0c8
  43e0f6:	movzx  edx,BYTE PTR [rbx+0x3]
  43e0fa:	or     eax,0xc
  43e0fd:	add    rbx,0x2
  43e101:	jmp    0x43e0cb
  43e103:	cmp    BYTE PTR [rbx+0x2],0x32
  43e107:	jne    0x43e0c8
  43e109:	movzx  edx,BYTE PTR [rbx+0x3]
  43e10d:	or     eax,0x4
  43e110:	add    rbx,0x2
  43e114:	jmp    0x43e0cb
  43e116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e120:	movzx  ecx,dl
  43e123:	xor    r8d,r8d
  43e126:	mov    DWORD PTR [rsp+0x30],eax
  43e12a:	lea    r9d,[rcx-0x30]
  43e12e:	mov    esi,0xffffffff
  43e133:	cmp    r9d,0x9
  43e137:	ja     0x43e168
  43e139:	nop    DWORD PTR [rax+0x0]
  43e140:	lea    edx,[r8+r8*4]
  43e144:	add    rbx,0x1
  43e148:	lea    r8d,[rcx+rdx*2-0x30]
  43e14d:	movzx  ecx,BYTE PTR [rbx]
  43e150:	lea    r9d,[rcx-0x30]
  43e154:	mov    edx,ecx
  43e156:	cmp    r9d,0x9
  43e15a:	jbe    0x43e140
  43e15c:	test   r8d,r8d
  43e15f:	mov    esi,0xffffffff
  43e164:	cmovne esi,r8d
  43e168:	cmp    dl,0x6a
  43e16b:	je     0x43e433
  43e171:	jle    0x43e2b0
  43e177:	cmp    dl,0x71
  43e17a:	je     0x43f151
  43e180:	jg     0x43e410
  43e186:	cmp    dl,0x6c
  43e189:	je     0x43e475
  43e18f:	cmp    dl,0x6d
  43e192:	jne    0x43e468
  43e198:	movzx  ebp,BYTE PTR [rbx+0x1]
  43e19c:	cmp    bpl,0x6c
  43e1a0:	je     0x43febe
  43e1a6:	or     ah,0x4
  43e1a9:	mov    DWORD PTR [rsp+0x30],eax
  43e1ad:	lea    rax,[rbx+0x1]
  43e1b1:	mov    QWORD PTR [rsp+0x60],rax
  43e1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e1c0:	test   bpl,bpl
  43e1c3:	je     0x43e360
  43e1c9:	mov    rax,QWORD PTR [rsp+0x60]
  43e1ce:	test   r13d,r13d
  43e1d1:	lea    rbx,[rax+0x1]
  43e1d5:	jne    0x43eba5
  43e1db:	cmp    bpl,0x5b
  43e1df:	jne    0x43eec0
  43e1e5:	lea    eax,[rbp-0x25]
  43e1e8:	cmp    al,0x53
  43e1ea:	ja     0x43e360
  43e1f0:	lea    rdx,[rip+0x1c1dd]        # 0x45a3d4
  43e1f7:	movzx  eax,al
  43e1fa:	movsxd rax,DWORD PTR [rdx+rax*4]
  43e1fe:	add    rdx,rax
  43e201:	jmp    rdx
  43e203:	mov    rdx,r12
  43e206:	mov    rcx,r14
  43e209:	call   0x43ddb0
  43e20e:	cmp    eax,0xffffffff
  43e211:	mov    r15d,eax
  43e214:	je     0x43fe7a
  43e21a:	test   r13d,r13d
  43e21d:	jne    0x43e247
  43e21f:	cmp    esi,r15d
  43e222:	jne    0x43e345
  43e228:	xor    r13d,r13d
  43e22b:	jmp    0x43e03a
  43e230:	mov    rdx,r12
  43e233:	mov    rcx,r14
  43e236:	call   0x43ddb0
  43e23b:	cmp    eax,0xffffffff
  43e23e:	mov    r15d,eax
  43e241:	je     0x43f16a
  43e247:	mov    ecx,r15d
  43e24a:	call   0x449488
  43e24f:	test   eax,eax
  43e251:	jne    0x43e230
  43e253:	cmp    esi,r15d
  43e256:	je     0x43e228
  43e258:	jmp    0x43e345
  43e25d:	nop    DWORD PTR [rax]
  43e260:	movzx  edx,BYTE PTR [rbp+0x2]
  43e264:	lea    rcx,[rbp+0x2]
  43e268:	lea    r9d,[rdx-0x30]
  43e26c:	mov    r8d,edx
  43e26f:	cmp    r9d,0x9
  43e273:	ja     0x43e292
  43e275:	lea    r8d,[rdi+rdi*4]
  43e279:	add    rcx,0x1
  43e27d:	lea    edi,[rdx+r8*2-0x30]
  43e282:	movzx  edx,BYTE PTR [rcx]
  43e285:	lea    r9d,[rdx-0x30]
  43e289:	mov    r8d,edx
  43e28c:	cmp    r9d,0x9
  43e290:	jbe    0x43e275
  43e292:	cmp    r8b,0x24
  43e296:	jne    0x43e0a2
  43e29c:	lea    rbx,[rcx+0x1]
  43e2a0:	movzx  edx,BYTE PTR [rcx+0x1]
  43e2a4:	jmp    0x43e0a6
  43e2a9:	nop    DWORD PTR [rax+0x0]
  43e2b0:	cmp    dl,0x4c
  43e2b3:	je     0x43f151
  43e2b9:	jle    0x43f144
  43e2bf:	cmp    dl,0x61
  43e2c2:	je     0x43e44c
  43e2c8:	cmp    dl,0x68
  43e2cb:	jne    0x43e468
  43e2d1:	movzx  ebp,BYTE PTR [rbx+0x1]
  43e2d5:	cmp    bpl,0x68
  43e2d9:	je     0x43fea5
  43e2df:	lea    rcx,[rbx+0x1]
  43e2e3:	or     eax,0x2
  43e2e6:	mov    DWORD PTR [rsp+0x30],eax
  43e2ea:	mov    QWORD PTR [rsp+0x60],rcx
  43e2ef:	jmp    0x43e1c0
  43e2f4:	test   BYTE PTR [rsp+0x30],0x20
  43e2f9:	je     0x43e345
  43e2fb:	mov    ecx,r15d
  43e2fe:	call   0x449370
  43e303:	cmp    al,0x28
  43e305:	jne    0x43e345
  43e307:	mov    esi,0x6e
  43e30c:	lea    rbp,[rip+0x1c0ae]        # 0x45a3c1
  43e313:	jmp    0x43e332
  43e315:	mov    ecx,eax
  43e317:	call   0x449370
  43e31c:	cmp    sil,al
  43e31f:	jne    0x43e345
  43e321:	add    rbp,0x1
  43e325:	movzx  esi,BYTE PTR [rbp+0x0]
  43e329:	test   sil,sil
  43e32c:	je     0x440a43
  43e332:	mov    rdx,r12
  43e335:	mov    rcx,r14
  43e338:	call   0x43ddb0
  43e33d:	cmp    eax,0xffffffff
  43e340:	mov    r15d,eax
  43e343:	jne    0x43e315
  43e345:	xor    r9d,r9d
  43e348:	mov    r8,r12
  43e34b:	mov    rdx,r14
  43e34e:	mov    ecx,r15d
  43e351:	call   0x43de50
  43e356:	jmp    0x43e360
  43e358:	fstp   st(0)
  43e35a:	nop    WORD PTR [rax+rax*1+0x0]
  43e360:	mov    r8,QWORD PTR [rsp+0x28]
  43e365:	mov    ecx,DWORD PTR [rsp+0x4c]
  43e369:	lea    rdx,[rsp+0x108]
  43e371:	lea    r9,[rsp+0x120]
  43e379:	call   0x43dcc0
  43e37e:	nop
  43e37f:	movaps xmm6,XMMWORD PTR [rsp+0x130]
  43e387:	movaps xmm7,XMMWORD PTR [rsp+0x140]
  43e38f:	movaps xmm8,XMMWORD PTR [rsp+0x150]
  43e398:	add    rsp,0x168
  43e39f:	pop    rbx
  43e3a0:	pop    rsi
  43e3a1:	pop    rdi
  43e3a2:	pop    rbp
  43e3a3:	pop    r12
  43e3a5:	pop    r13
  43e3a7:	pop    r14
  43e3a9:	pop    r15
  43e3ab:	ret    
  43e3ac:	nop    DWORD PTR [rax+0x0]
  43e3b0:	mov    rcx,rbp
  43e3b3:	call   0x4493c0
  43e3b8:	lea    r8,[rsp+0xf8]
  43e3c0:	mov    rdx,rax
  43e3c3:	mov    rcx,rbp
  43e3c6:	call   0x441400
  43e3cb:	test   eax,eax
  43e3cd:	jle    0x43f13b
  43e3d3:	sub    eax,0x1
  43e3d6:	lea    rbx,[rbp+rax*1+0x1]
  43e3db:	mov    rdx,r12
  43e3de:	mov    rcx,r14
  43e3e1:	call   0x43ddb0
  43e3e6:	cmp    eax,0xffffffff
  43e3e9:	je     0x43f0fb
  43e3ef:	add    rbp,0x1
  43e3f3:	movzx  r8d,BYTE PTR [rbp-0x1]
  43e3f8:	cmp    eax,r8d
  43e3fb:	jne    0x43f0fb
  43e401:	cmp    rbp,rbx
  43e404:	jne    0x43e3db
  43e406:	mov    r15d,eax
  43e409:	jmp    0x43e03a
  43e40e:	xchg   ax,ax
  43e410:	cmp    dl,0x74
  43e413:	je     0x43e433
  43e415:	cmp    dl,0x7a
  43e418:	jne    0x43e468
  43e41a:	or     eax,0xc
  43e41d:	movzx  ebp,BYTE PTR [rbx+0x1]
  43e421:	mov    DWORD PTR [rsp+0x30],eax
  43e425:	lea    rax,[rbx+0x1]
  43e429:	mov    QWORD PTR [rsp+0x60],rax
  43e42e:	jmp    0x43e1c0
  43e433:	or     eax,0x8
  43e436:	movzx  ebp,BYTE PTR [rbx+0x1]
  43e43a:	mov    DWORD PTR [rsp+0x30],eax
  43e43e:	lea    rax,[rbx+0x1]
  43e442:	mov    QWORD PTR [rsp+0x60],rax
  43e447:	jmp    0x43e1c0
  43e44c:	movzx  ebp,BYTE PTR [rbx+0x1]
  43e450:	mov    edx,ebp
  43e452:	and    edx,0xfffffff7
  43e455:	cmp    dl,0x53
  43e458:	je     0x43f44d
  43e45e:	cmp    bpl,0x73
  43e462:	je     0x43f44d
  43e468:	movzx  ebp,BYTE PTR [rbx]
  43e46b:	mov    QWORD PTR [rsp+0x60],rbx
  43e470:	jmp    0x43e1c0
  43e475:	movzx  ebp,BYTE PTR [rbx+0x1]
  43e479:	cmp    bpl,0x6c
  43e47d:	je     0x43fed9
  43e483:	add    rbx,0x1
  43e487:	or     eax,0x4
  43e48a:	mov    QWORD PTR [rsp+0x60],rbx
  43e48f:	mov    DWORD PTR [rsp+0x30],eax
  43e493:	jmp    0x43e1c0
  43e498:	xor    r13d,r13d
  43e49b:	test   BYTE PTR [rsp+0x30],0x80
  43e4a0:	jne    0x43e03a
  43e4a6:	test   BYTE PTR [rsp+0x30],0x8
  43e4ab:	je     0x44003f
  43e4b1:	test   edi,edi
  43e4b3:	jne    0x440762
  43e4b9:	mov    rsi,QWORD PTR [rsp+0x50]
  43e4be:	mov    rax,QWORD PTR [rsi]
  43e4c1:	add    rsi,0x8
  43e4c5:	mov    QWORD PTR [rsp+0x50],rsi
  43e4ca:	mov    rdx,QWORD PTR [rsp+0x110]
  43e4d2:	xor    r13d,r13d
  43e4d5:	mov    QWORD PTR [rax],rdx
  43e4d8:	jmp    0x43e03a
  43e4dd:	mov    r13d,DWORD PTR [rsp+0x30]
  43e4e2:	and    r13d,0x4
  43e4e6:	jne    0x43f462
  43e4ec:	test   BYTE PTR [rsp+0x30],0x80
  43e4f1:	jne    0x43e595
  43e4f7:	test   DWORD PTR [rsp+0x30],0x600
  43e4ff:	je     0x4406b0
  43e505:	test   edi,edi
  43e507:	jne    0x440a2a
  43e50d:	mov    rax,QWORD PTR [rsp+0x50]
  43e512:	mov    rdi,QWORD PTR [rax]
  43e515:	add    rax,0x8
  43e519:	mov    QWORD PTR [rsp+0x50],rax
  43e51e:	mov    QWORD PTR [rsp+0x28],rdi
  43e523:	cmp    QWORD PTR [rsp+0x28],0x0
  43e529:	je     0x440b68
  43e52f:	mov    ecx,0x64
  43e534:	call   0x449468
  43e539:	mov    rdi,QWORD PTR [rsp+0x28]
  43e53e:	test   rax,rax
  43e541:	mov    QWORD PTR [rsp+0x80],rax
  43e549:	mov    QWORD PTR [rdi],rax
  43e54c:	je     0x43f4c5
  43e552:	mov    rax,QWORD PTR [rsp+0x108]
  43e55a:	test   rax,rax
  43e55d:	je     0x43e568
  43e55f:	mov    rdx,QWORD PTR [rax]
  43e562:	cmp    rdx,0x1f
  43e566:	jbe    0x43e573
  43e568:	mov    rcx,rax
  43e56b:	call   0x43dd80
  43e570:	mov    rdx,QWORD PTR [rax]
  43e573:	mov    rdi,QWORD PTR [rsp+0x28]
  43e578:	lea    rcx,[rdx+0x1]
  43e57c:	mov    QWORD PTR [rsp+0x108],rax
  43e584:	mov    QWORD PTR [rax],rcx
  43e587:	mov    QWORD PTR [rax+rdx*8+0x10],rdi
  43e58c:	mov    QWORD PTR [rsp+0x58],0x64
  43e595:	mov    rax,QWORD PTR [rsp+0x60]
  43e59a:	cmp    BYTE PTR [rax+0x1],0x5e
  43e59e:	sete   bpl
  43e5a2:	add    rax,0x2
  43e5a6:	test   bpl,bpl
  43e5a9:	cmovne rbx,rax
  43e5ad:	test   esi,esi
  43e5af:	mov    eax,0x7fffffff
  43e5b4:	cmovs  esi,eax
  43e5b7:	cmp    QWORD PTR [rsp+0x118],0xff
  43e5c3:	jbe    0x43fc57
  43e5c9:	mov    rax,QWORD PTR [rsp+0x120]
  43e5d1:	lea    rdi,[rax+0x8]
  43e5d5:	mov    QWORD PTR [rax],0x0
  43e5dc:	mov    QWORD PTR [rax+0xf8],0x0
  43e5e7:	and    rdi,0xfffffffffffffff8
  43e5eb:	sub    rax,rdi
  43e5ee:	lea    ecx,[rax+0x100]
  43e5f4:	xor    eax,eax
  43e5f6:	shr    ecx,0x3
  43e5f9:	rep stos QWORD PTR es:[rdi],rax
  43e5fc:	movzx  edx,BYTE PTR [rbx]
  43e5ff:	cmp    dl,0x2d
  43e602:	je     0x43fc3f
  43e608:	cmp    dl,0x5d
  43e60b:	movzx  eax,dl
  43e60e:	jne    0x43e627
  43e610:	jmp    0x43fc3f
  43e615:	mov    rdx,QWORD PTR [rsp+0x120]
  43e61d:	mov    BYTE PTR [rdx+rax*1],0x1
  43e621:	movzx  edx,BYTE PTR [rbx]
  43e624:	movzx  eax,dl
  43e627:	add    rbx,0x1
  43e62b:	test   al,al
  43e62d:	je     0x43e360
  43e633:	cmp    al,0x5d
  43e635:	je     0x43fa35
  43e63b:	cmp    al,0x2d
  43e63d:	jne    0x43e615
  43e63f:	movzx  edx,BYTE PTR [rbx]
  43e642:	test   dl,dl
  43e644:	je     0x43e615
  43e646:	cmp    dl,0x5d
  43e649:	je     0x43e615
  43e64b:	movzx  ecx,BYTE PTR [rbx-0x2]
  43e64f:	cmp    cl,dl
  43e651:	ja     0x43e615
  43e653:	jae    0x43e624
  43e655:	mov    rdx,QWORD PTR [rsp+0x120]
  43e65d:	movzx  eax,cl
  43e660:	add    ecx,0x1
  43e663:	mov    BYTE PTR [rdx+rax*1],0x1
  43e667:	cmp    BYTE PTR [rbx],cl
  43e669:	ja     0x43e655
  43e66b:	jmp    0x43e621
  43e66d:	sub    ebp,0x58
  43e670:	cmp    bpl,0x20
  43e674:	ja     0x43e95f
  43e67a:	lea    rax,[rip+0x1bea3]        # 0x45a524
  43e681:	movzx  ebp,bpl
  43e685:	movsxd rdx,DWORD PTR [rax+rbp*4]
  43e689:	add    rax,rdx
  43e68c:	jmp    rax
  43e68e:	xor    eax,eax
  43e690:	test   esi,esi
  43e692:	mov    rdx,r12
  43e695:	setg   al
  43e698:	mov    rcx,r14
  43e69b:	sub    esi,eax
  43e69d:	call   0x43ddb0
  43e6a2:	cmp    eax,0xffffffff
  43e6a5:	mov    r15d,eax
  43e6a8:	je     0x43fe7a
  43e6ae:	cmp    eax,0x2d
  43e6b1:	lea    eax,[rax-0x2b]
  43e6b4:	sete   BYTE PTR [rsp+0xd3]
  43e6bc:	and    eax,0xfffffffd
  43e6bf:	jne    0x43e6eb
  43e6c1:	test   esi,esi
  43e6c3:	je     0x43e360
  43e6c9:	mov    rdx,r12
  43e6cc:	mov    rcx,r14
  43e6cf:	call   0x43ddb0
  43e6d4:	cmp    eax,0xffffffff
  43e6d7:	mov    r15d,eax
  43e6da:	je     0x43e360
  43e6e0:	test   esi,esi
  43e6e2:	jle    0x440663
  43e6e8:	sub    esi,0x1
  43e6eb:	mov    ecx,r15d
  43e6ee:	call   0x449370
  43e6f3:	cmp    eax,0x6e
  43e6f6:	je     0x4403b1
  43e6fc:	cmp    eax,0x69
  43e6ff:	je     0x4404c7
  43e705:	xor    ebp,ebp
  43e707:	test   esi,esi
  43e709:	mov    BYTE PTR [rsp+0xb0],0x65
  43e711:	jne    0x43f4f4
  43e717:	mov    ecx,DWORD PTR [rsp+0x30]
  43e71b:	lea    rax,[rsp+0x118]
  43e723:	mov    BYTE PTR [rsp+0x60],0x0
  43e728:	mov    BYTE PTR [rsp+0xa0],0x0
  43e730:	mov    QWORD PTR [rsp+0xc8],rbx
  43e738:	mov    QWORD PTR [rsp+0xa8],rax
  43e740:	mov    DWORD PTR [rsp+0xd4],edi
  43e747:	mov    eax,ecx
  43e749:	and    eax,0x100
  43e74e:	mov    DWORD PTR [rsp+0xc4],eax
  43e755:	mov    eax,ecx
  43e757:	and    eax,0x40
  43e75a:	mov    DWORD PTR [rsp+0xc0],eax
  43e761:	lea    eax,[r15-0x30]
  43e765:	cmp    eax,0x9
  43e768:	jbe    0x43ee61
  43e76e:	cmp    BYTE PTR [rsp+0x60],0x0
  43e773:	je     0x43ee40
  43e779:	mov    r8,QWORD PTR [rsp+0x120]
  43e781:	movzx  eax,BYTE PTR [rsp+0xb0]
  43e789:	cmp    BYTE PTR [r8+rbp*1-0x1],al
  43e78e:	je     0x43f195
  43e794:	cmp    BYTE PTR [rsp+0x60],0x0
  43e799:	jne    0x43e7b5
  43e79b:	test   rbp,rbp
  43e79e:	je     0x43e7b5
  43e7a0:	mov    ecx,r15d
  43e7a3:	call   0x449370
  43e7a8:	cmp    BYTE PTR [rsp+0xb0],al
  43e7af:	je     0x43f9f3
  43e7b5:	test   esi,esi
  43e7b7:	mov    ebx,0x7fffffff
  43e7bc:	cmovg  ebx,esi
  43e7bf:	cmp    BYTE PTR [rsp+0xa0],0x0
  43e7c7:	jne    0x43f053
  43e7cd:	mov    rdi,QWORD PTR [rsp+0x70]
  43e7d2:	movzx  edx,BYTE PTR [rdi]
  43e7d5:	cmp    edx,r15d
  43e7d8:	mov    eax,edx
  43e7da:	jne    0x440813
  43e7e0:	cmp    BYTE PTR [rdi+0x1],0x0
  43e7e4:	lea    r13,[rdi+0x1]
  43e7e8:	jne    0x43e817
  43e7ea:	jmp    0x43f08f
  43e7ef:	nop
  43e7f0:	movzx  edx,BYTE PTR [r13+0x0]
  43e7f5:	sub    ebx,0x1
  43e7f8:	cmp    edx,eax
  43e7fa:	jne    0x43f800
  43e800:	add    r13,0x1
  43e804:	cmp    BYTE PTR [r13+0x0],0x0
  43e809:	je     0x43f084
  43e80f:	test   ebx,ebx
  43e811:	je     0x43f80a
  43e817:	mov    rdx,r12
  43e81a:	mov    rcx,r14
  43e81d:	call   0x43ddb0
  43e822:	cmp    eax,0xffffffff
  43e825:	jne    0x43e7f0
  43e827:	mov    r15d,eax
  43e82a:	movzx  eax,BYTE PTR [r13+0x0]
  43e82f:	test   al,al
  43e831:	je     0x43f812
  43e837:	mov    r9d,DWORD PTR [rsp+0xc4]
  43e83f:	test   r9d,r9d
  43e842:	je     0x43f061
  43e848:	mov    r9,QWORD PTR [rsp+0x70]
  43e84d:	mov    r8,r13
  43e850:	sub    r8,r9
  43e853:	test   r8,r8
  43e856:	jle    0x44099d
  43e85c:	mov    rcx,QWORD PTR [rsp+0x40]
  43e861:	movzx  eax,BYTE PTR [r9]
  43e865:	cmp    BYTE PTR [rcx],al
  43e867:	jne    0x4409a9
  43e86d:	mov    rax,rcx
  43e870:	jmp    0x43e880
  43e872:	movzx  edi,BYTE PTR [r9+rdx*1]
  43e877:	cmp    BYTE PTR [rax],dil
  43e87a:	jne    0x43f06f
  43e880:	add    rax,0x1
  43e884:	mov    rdx,rax
  43e887:	sub    rdx,rcx
  43e88a:	cmp    r8,rdx
  43e88d:	jg     0x43e872
  43e88f:	cmp    r8,rdx
  43e892:	jne    0x43f066
  43e898:	movzx  ecx,BYTE PTR [rax]
  43e89b:	cmp    r15d,ecx
  43e89e:	mov    edx,ecx
  43e8a0:	jne    0x43f072
  43e8a6:	movzx  edx,BYTE PTR [rax+0x1]
  43e8aa:	lea    r13,[rax+0x1]
  43e8ae:	test   dl,dl
  43e8b0:	jne    0x43e8e2
  43e8b2:	jmp    0x43f07a
  43e8b7:	nop    WORD PTR [rax+rax*1+0x0]
  43e8c0:	movzx  r15d,BYTE PTR [r13+0x0]
  43e8c5:	sub    ebx,0x1
  43e8c8:	cmp    r15d,eax
  43e8cb:	jne    0x44078a
  43e8d1:	add    r13,0x1
  43e8d5:	movzx  edx,BYTE PTR [r13+0x0]
  43e8da:	test   dl,dl
  43e8dc:	je     0x43f07a
  43e8e2:	test   ebx,ebx
  43e8e4:	je     0x43f072
  43e8ea:	mov    rdx,r12
  43e8ed:	mov    rcx,r14
  43e8f0:	call   0x43ddb0
  43e8f5:	cmp    eax,0xffffffff
  43e8f8:	jne    0x43e8c0
  43e8fa:	movzx  edx,BYTE PTR [r13+0x0]
  43e8ff:	mov    r15d,eax
  43e902:	jmp    0x43f072
  43e907:	nop    WORD PTR [rax+rax*1+0x0]
  43e910:	mov    rdx,r12
  43e913:	mov    rcx,r14
  43e916:	call   0x43ddb0
  43e91b:	cmp    eax,0xffffffff
  43e91e:	mov    r15d,eax
  43e921:	je     0x43fe7a
  43e927:	cmp    eax,0x25
  43e92a:	je     0x43e228
  43e930:	mov    r9d,0x1
  43e936:	mov    r8,r12
  43e939:	mov    rdx,r14
  43e93c:	mov    ecx,r15d
  43e93f:	call   0x43de50
  43e944:	jmp    0x43e360
  43e949:	mov    eax,DWORD PTR [rsp+0x30]
  43e94d:	mov    DWORD PTR [rsp+0x48],0x10
  43e955:	and    eax,0xfffffff1
  43e958:	or     eax,0x2c
  43e95b:	mov    DWORD PTR [rsp+0x30],eax
  43e95f:	mov    rdx,r12
  43e962:	mov    rcx,r14
  43e965:	call   0x43ddb0
  43e96a:	cmp    eax,0xffffffff
  43e96d:	mov    r15d,eax
  43e970:	je     0x43fe7a
  43e976:	lea    eax,[rax-0x2b]
  43e979:	mov    QWORD PTR [rsp+0xa0],0x0
  43e985:	and    eax,0xfffffffd
  43e988:	je     0x43ff79
  43e98e:	test   esi,esi
  43e990:	setne  al
  43e993:	cmp    r15d,0x30
  43e997:	jne    0x43f615
  43e99d:	test   al,al
  43e99f:	je     0x43f615
  43e9a5:	test   esi,esi
  43e9a7:	jle    0x4400ee
  43e9ad:	mov    r15,QWORD PTR [rsp+0xa0]
  43e9b5:	lea    r13,[rsp+0x118]
  43e9bd:	mov    r8,QWORD PTR [rsp+0x120]
  43e9c5:	sub    esi,0x1
  43e9c8:	mov    rdx,r13
  43e9cb:	mov    rcx,r15
  43e9ce:	lea    r13,[r15+0x1]
  43e9d2:	call   0x43dc30
  43e9d7:	mov    rdx,r12
  43e9da:	mov    QWORD PTR [rsp+0x120],rax
  43e9e2:	mov    rcx,r14
  43e9e5:	mov    BYTE PTR [rax+r15*1],0x30
  43e9ea:	call   0x43ddb0
  43e9ef:	mov    r15d,eax
  43e9f2:	xor    eax,eax
  43e9f4:	test   esi,esi
  43e9f6:	mov    QWORD PTR [rsp+0xa0],r13
  43e9fe:	jne    0x440130
  43ea04:	mov    ecx,DWORD PTR [rsp+0x48]
  43ea08:	mov    edx,0x8
  43ea0d:	test   ecx,ecx
  43ea0f:	cmovne edx,ecx
  43ea12:	mov    DWORD PTR [rsp+0x48],edx
  43ea16:	test   al,al
  43ea18:	je     0x43ea9e
  43ea1e:	mov    eax,DWORD PTR [rsp+0x30]
  43ea22:	mov    r13,QWORD PTR [rsp+0x40]
  43ea27:	mov    rbp,QWORD PTR [rsp+0xa0]
  43ea2f:	mov    DWORD PTR [rsp+0xc0],edi
  43ea36:	mov    edi,r15d
  43ea39:	mov    QWORD PTR [rsp+0xb0],rbx
  43ea41:	and    eax,0x100
  43ea46:	mov    DWORD PTR [rsp+0xa8],eax
  43ea4d:	lea    rax,[rsp+0x118]
  43ea55:	mov    QWORD PTR [rsp+0x60],rax
  43ea5a:	nop    WORD PTR [rax+rax*1+0x0]
  43ea60:	cmp    DWORD PTR [rsp+0x48],0x10
  43ea65:	je     0x43f682
  43ea6b:	lea    eax,[rdi-0x30]
  43ea6e:	cmp    eax,0x9
  43ea71:	ja     0x43f6e5
  43ea77:	lea    eax,[rdi-0x2f]
  43ea7a:	cmp    eax,DWORD PTR [rsp+0x48]
  43ea7e:	jle    0x43f691
  43ea84:	mov    r15d,edi
  43ea87:	mov    rbx,QWORD PTR [rsp+0xb0]
  43ea8f:	mov    edi,DWORD PTR [rsp+0xc0]
  43ea96:	mov    QWORD PTR [rsp+0xa0],rbp
  43ea9e:	cmp    QWORD PTR [rsp+0xa0],0x0
  43eaa7:	je     0x43e2f4
  43eaad:	cmp    QWORD PTR [rsp+0xa0],0x1
  43eab6:	jne    0x43eace
  43eab8:	mov    rax,QWORD PTR [rsp+0x120]
  43eac0:	movzx  eax,BYTE PTR [rax]
  43eac3:	sub    eax,0x2b
  43eac6:	test   al,0xfd
  43eac8:	je     0x43e345
  43eace:	lea    r13,[rsp+0x118]
  43ead6:	xor    r9d,r9d
  43ead9:	mov    r8,r12
  43eadc:	mov    rdx,r14
  43eadf:	mov    ecx,r15d
  43eae2:	call   0x43de50
  43eae7:	mov    rsi,QWORD PTR [rsp+0xa0]
  43eaef:	mov    r8,QWORD PTR [rsp+0x120]
  43eaf7:	mov    rdx,r13
  43eafa:	mov    rcx,rsi
  43eafd:	call   0x43dc30
  43eb02:	mov    QWORD PTR [rsp+0x120],rax
  43eb0a:	mov    BYTE PTR [rax+rsi*1],0x0
  43eb0e:	mov    esi,DWORD PTR [rsp+0x30]
  43eb12:	mov    r8d,DWORD PTR [rsp+0x48]
  43eb17:	mov    rdx,QWORD PTR [rsp+0x98]
  43eb1f:	mov    rcx,QWORD PTR [rsp+0x120]
  43eb27:	and    esi,0x8
  43eb2a:	je     0x43fe14
  43eb30:	test   BYTE PTR [rsp+0x30],0x10
  43eb35:	je     0x44028c
  43eb3b:	call   0x441460
  43eb40:	mov    QWORD PTR [rsp+0xb8],rax
  43eb48:	mov    rax,QWORD PTR [rsp+0x128]
  43eb50:	cmp    QWORD PTR [rsp+0x120],rax
  43eb58:	je     0x43e360
  43eb5e:	xor    r13d,r13d
  43eb61:	test   BYTE PTR [rsp+0x30],0x80
  43eb66:	jne    0x43e03a
  43eb6c:	test   esi,esi
  43eb6e:	je     0x44029e
  43eb74:	test   edi,edi
  43eb76:	jne    0x440776
  43eb7c:	mov    rsi,QWORD PTR [rsp+0x50]
  43eb81:	mov    rax,QWORD PTR [rsi]
  43eb84:	add    rsi,0x8
  43eb88:	mov    QWORD PTR [rsp+0x50],rsi
  43eb8d:	mov    rsi,QWORD PTR [rsp+0xb8]
  43eb95:	mov    QWORD PTR [rax],rsi
  43eb98:	add    DWORD PTR [rsp+0x4c],0x1
  43eb9d:	xor    r13d,r13d
  43eba0:	jmp    0x43e03a
  43eba5:	call   0x4495c8
  43ebaa:	mov    r13d,DWORD PTR [rax]
  43ebad:	call   0x4495c8
  43ebb2:	mov    DWORD PTR [rax],0x0
  43ebb8:	jmp    0x43ebdf
  43ebba:	nop    WORD PTR [rax+rax*1+0x0]
  43ebc0:	mov    rdx,r12
  43ebc3:	mov    rcx,r14
  43ebc6:	call   0x43ddb0
  43ebcb:	cmp    eax,0xffffffff
  43ebce:	mov    r15d,eax
  43ebd1:	je     0x43ebe5
  43ebd3:	mov    ecx,r15d
  43ebd6:	call   0x449488
  43ebdb:	test   eax,eax
  43ebdd:	je     0x43ec05
  43ebdf:	cmp    r15d,0xffffffff
  43ebe3:	jne    0x43ebc0
  43ebe5:	call   0x4495c8
  43ebea:	cmp    DWORD PTR [rax],0x4
  43ebed:	je     0x43f10e
  43ebf3:	mov    r15d,0xffffffff
  43ebf9:	mov    ecx,r15d
  43ebfc:	call   0x449488
  43ec01:	test   eax,eax
  43ec03:	jne    0x43ebdf
  43ec05:	call   0x4495c8
  43ec0a:	xor    r9d,r9d
  43ec0d:	mov    DWORD PTR [rax],r13d
  43ec10:	mov    r8,r12
  43ec13:	mov    rdx,r14
  43ec16:	mov    ecx,r15d
  43ec19:	call   0x43de50
  43ec1e:	cmp    bpl,0x63
  43ec22:	jne    0x43eedd
  43ec28:	test   BYTE PTR [rsp+0x30],0x4
  43ec2d:	je     0x43f2f5
  43ec33:	cmp    esi,0xffffffff
  43ec36:	mov    eax,0x1
  43ec3b:	cmove  esi,eax
  43ec3e:	mov    eax,DWORD PTR [rsp+0x30]
  43ec42:	mov    ebp,eax
  43ec44:	and    ebp,0x80
  43ec4a:	jne    0x43ecf2
  43ec50:	test   ah,0x6
  43ec53:	je     0x43f580
  43ec59:	test   edi,edi
  43ec5b:	jne    0x4406fe
  43ec61:	mov    rax,QWORD PTR [rsp+0x50]
  43ec66:	mov    rdi,QWORD PTR [rax]
  43ec69:	add    rax,0x8
  43ec6d:	mov    QWORD PTR [rsp+0x50],rax
  43ec72:	mov    QWORD PTR [rsp+0x28],rdi
  43ec77:	cmp    QWORD PTR [rsp+0x28],0x0
  43ec7d:	je     0x440b68
  43ec83:	cmp    esi,0x400
  43ec89:	mov    edi,0x400
  43ec8e:	cmovle edi,esi
  43ec91:	movsxd rax,edi
  43ec94:	lea    rcx,[rax+rax*1]
  43ec98:	mov    QWORD PTR [rsp+0x58],rax
  43ec9d:	call   0x449468
  43eca2:	mov    rdi,QWORD PTR [rsp+0x28]
  43eca7:	test   rax,rax
  43ecaa:	mov    QWORD PTR [rsp+0x78],rax
  43ecaf:	mov    QWORD PTR [rdi],rax
  43ecb2:	je     0x43f4c5
  43ecb8:	mov    rax,QWORD PTR [rsp+0x108]
  43ecc0:	test   rax,rax
  43ecc3:	je     0x43ecce
  43ecc5:	mov    rdx,QWORD PTR [rax]
  43ecc8:	cmp    rdx,0x1f
  43eccc:	jbe    0x43ecd9
  43ecce:	mov    rcx,rax
  43ecd1:	call   0x43dd80
  43ecd6:	mov    rdx,QWORD PTR [rax]
  43ecd9:	mov    rdi,QWORD PTR [rsp+0x28]
  43ecde:	lea    rcx,[rdx+0x1]
  43ece2:	mov    QWORD PTR [rsp+0x108],rax
  43ecea:	mov    QWORD PTR [rax],rcx
  43eced:	mov    QWORD PTR [rax+rdx*8+0x10],rdi
  43ecf2:	mov    rdx,r12
  43ecf5:	mov    rcx,r14
  43ecf8:	call   0x43ddb0
  43ecfd:	cmp    eax,0xffffffff
  43ed00:	mov    r15d,eax
  43ed03:	je     0x43fe7a
  43ed09:	movsxd rax,esi
  43ed0c:	mov    QWORD PTR [rsp+0xa8],rbx
  43ed14:	mov    r13,QWORD PTR [rsp+0x88]
  43ed1c:	sub    rax,0x1
  43ed20:	mov    rbx,QWORD PTR [rsp+0x78]
  43ed25:	mov    DWORD PTR [rsp+0xfc],0x0
  43ed30:	mov    QWORD PTR [rsp+0x60],rax
  43ed35:	mov    eax,DWORD PTR [rsp+0x30]
  43ed39:	mov    DWORD PTR [rsp+0x30],esi
  43ed3d:	mov    rsi,QWORD PTR [rsp+0x90]
  43ed45:	and    eax,0x600
  43ed4a:	mov    DWORD PTR [rsp+0xa0],eax
  43ed51:	test   ebp,ebp
  43ed53:	mov    BYTE PTR [rsp+0x100],r15b
  43ed5b:	jne    0x43edea
  43ed61:	mov    ecx,DWORD PTR [rsp+0xa0]
  43ed68:	test   ecx,ecx
  43ed6a:	je     0x43edea
  43ed6c:	mov    rax,QWORD PTR [rsp+0x28]
  43ed71:	mov    rcx,QWORD PTR [rax]
  43ed74:	mov    rax,QWORD PTR [rsp+0x58]
  43ed79:	add    rax,rax
  43ed7c:	mov    QWORD PTR [rsp+0x78],rax
  43ed81:	add    rax,rcx
  43ed84:	cmp    rbx,rax
  43ed87:	jne    0x43edea
  43ed89:	mov    rbx,QWORD PTR [rsp+0x60]
  43ed8e:	mov    rdi,QWORD PTR [rsp+0x58]
  43ed93:	mov    rax,rbx
  43ed96:	add    rax,0x1
  43ed9a:	cmp    rdi,rax
  43ed9d:	mov    rax,rbx
  43eda0:	cmovle rax,rdi
  43eda4:	mov    r8,rax
  43eda7:	mov    rax,rdi
  43edaa:	lea    rbx,[rax+0x1]
  43edae:	add    rdi,r8
  43edb1:	jmp    0x43edc7
  43edb3:	cmp    rdi,rbx
  43edb6:	jbe    0x43ff1b
  43edbc:	mov    rax,QWORD PTR [rsp+0x28]
  43edc1:	mov    rdi,rbx
  43edc4:	mov    rcx,QWORD PTR [rax]
  43edc7:	lea    rdx,[rdi+rdi*1]
  43edcb:	call   0x449420
  43edd0:	test   rax,rax
  43edd3:	je     0x43edb3
  43edd5:	mov    rbx,QWORD PTR [rsp+0x28]
  43edda:	mov    QWORD PTR [rsp+0x58],rdi
  43eddf:	mov    QWORD PTR [rbx],rax
  43ede2:	mov    rbx,QWORD PTR [rsp+0x78]
  43ede7:	add    rbx,rax
  43edea:	xor    edi,edi
  43edec:	jmp    0x43edf7
  43edee:	xchg   ax,ax
  43edf0:	mov    BYTE PTR [rsp+0x100],al
  43edf7:	test   ebp,ebp
  43edf9:	mov    rcx,rdi
  43edfc:	mov    r9,r13
  43edff:	cmove  rcx,rbx
  43ee03:	mov    r8d,0x1
  43ee09:	mov    rdx,rsi
  43ee0c:	call   0x441260
  43ee11:	cmp    rax,0xfffffffffffffffe
  43ee15:	jne    0x43fc97
  43ee1b:	mov    rdx,r12
  43ee1e:	mov    rcx,r14
  43ee21:	call   0x43ddb0
  43ee26:	cmp    eax,0xffffffff
  43ee29:	mov    r15d,eax
  43ee2c:	jne    0x43edf0
  43ee2e:	call   0x4495c8
  43ee33:	mov    DWORD PTR [rax],0x2a
  43ee39:	jmp    0x43e360
  43ee3e:	xchg   ax,ax
  43ee40:	mov    r10d,DWORD PTR [rsp+0xc0]
  43ee48:	test   r10d,r10d
  43ee4b:	je     0x43e794
  43ee51:	mov    ecx,r15d
  43ee54:	call   0x449478
  43ee59:	test   eax,eax
  43ee5b:	je     0x43e794
  43ee61:	mov    r8,QWORD PTR [rsp+0x120]
  43ee69:	mov    rdx,QWORD PTR [rsp+0xa8]
  43ee71:	mov    rcx,rbp
  43ee74:	call   0x43dc30
  43ee79:	mov    QWORD PTR [rsp+0x120],rax
  43ee81:	mov    BYTE PTR [rax+rbp*1],r15b
  43ee85:	add    rbp,0x1
  43ee89:	test   esi,esi
  43ee8b:	je     0x43f8bd
  43ee91:	mov    rdx,r12
  43ee94:	mov    rcx,r14
  43ee97:	call   0x43ddb0
  43ee9c:	cmp    eax,0xffffffff
  43ee9f:	mov    r15d,eax
  43eea2:	je     0x43f8bd
  43eea8:	xor    eax,eax
  43eeaa:	test   esi,esi
  43eeac:	setg   al
  43eeaf:	sub    esi,eax
  43eeb1:	jmp    0x43e761
  43eeb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43eec0:	mov    eax,ebp
  43eec2:	and    eax,0xffffffdf
  43eec5:	cmp    al,0x43
  43eec7:	je     0x43eed3
  43eec9:	cmp    bpl,0x6e
  43eecd:	jne    0x43eba5
  43eed3:	cmp    bpl,0x63
  43eed7:	je     0x43ec28
  43eedd:	cmp    bpl,0x73
  43eee1:	jne    0x43e1e5
  43eee7:	test   BYTE PTR [rsp+0x30],0x4
  43eeec:	je     0x43f1a7
  43eef2:	mov    eax,DWORD PTR [rsp+0x30]
  43eef6:	mov    ebp,eax
  43eef8:	and    ebp,0x80
  43eefe:	jne    0x43ef9a
  43ef04:	test   ah,0x6
  43ef07:	je     0x43f5b0
  43ef0d:	test   edi,edi
  43ef0f:	jne    0x440730
  43ef15:	mov    rax,QWORD PTR [rsp+0x50]
  43ef1a:	mov    rdi,QWORD PTR [rax]
  43ef1d:	add    rax,0x8
  43ef21:	mov    QWORD PTR [rsp+0x50],rax
  43ef26:	mov    QWORD PTR [rsp+0x28],rdi
  43ef2b:	cmp    QWORD PTR [rsp+0x28],0x0
  43ef31:	je     0x440b68
  43ef37:	mov    ecx,0xc8
  43ef3c:	call   0x449468
  43ef41:	mov    rdi,QWORD PTR [rsp+0x28]
  43ef46:	test   rax,rax
  43ef49:	mov    QWORD PTR [rsp+0x78],rax
  43ef4e:	mov    QWORD PTR [rdi],rax
  43ef51:	je     0x43f4c5
  43ef57:	mov    rax,QWORD PTR [rsp+0x108]
  43ef5f:	test   rax,rax
  43ef62:	je     0x43ef6d
  43ef64:	mov    rdx,QWORD PTR [rax]
  43ef67:	cmp    rdx,0x1f
  43ef6b:	jbe    0x43ef78
  43ef6d:	mov    rcx,rax
  43ef70:	call   0x43dd80
  43ef75:	mov    rdx,QWORD PTR [rax]
  43ef78:	mov    rdi,QWORD PTR [rsp+0x28]
  43ef7d:	lea    rcx,[rdx+0x1]
  43ef81:	mov    QWORD PTR [rsp+0x108],rax
  43ef89:	mov    QWORD PTR [rsp+0x58],0x64
  43ef92:	mov    QWORD PTR [rax],rcx
  43ef95:	mov    QWORD PTR [rax+rdx*8+0x10],rdi
  43ef9a:	mov    rdx,r12
  43ef9d:	mov    rcx,r14
  43efa0:	call   0x43ddb0
  43efa5:	cmp    eax,0xffffffff
  43efa8:	mov    r15d,eax
  43efab:	je     0x43fe7a
  43efb1:	mov    eax,DWORD PTR [rsp+0x30]
  43efb5:	mov    QWORD PTR [rsp+0x60],rbx
  43efba:	mov    r13,QWORD PTR [rsp+0x88]
  43efc2:	mov    rbx,QWORD PTR [rsp+0x78]
  43efc7:	mov    DWORD PTR [rsp+0x78],esi
  43efcb:	mov    rsi,QWORD PTR [rsp+0x90]
  43efd3:	and    eax,0x600
  43efd8:	mov    DWORD PTR [rsp+0xfc],0x0
  43efe3:	mov    DWORD PTR [rsp+0xa0],eax
  43efea:	mov    ecx,r15d
  43efed:	call   0x449488
  43eff2:	test   eax,eax
  43eff4:	jne    0x4408ca
  43effa:	mov    BYTE PTR [rsp+0x100],r15b
  43f002:	xor    edi,edi
  43f004:	jmp    0x43f017
  43f006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f010:	mov    BYTE PTR [rsp+0x100],al
  43f017:	test   ebp,ebp
  43f019:	mov    rcx,rdi
  43f01c:	mov    r9,r13
  43f01f:	cmove  rcx,rbx
  43f023:	mov    r8d,0x1
  43f029:	mov    rdx,rsi
  43f02c:	call   0x441260
  43f031:	cmp    rax,0xfffffffffffffffe
  43f035:	jne    0x43fd12
  43f03b:	mov    rdx,r12
  43f03e:	mov    rcx,r14
  43f041:	call   0x43ddb0
  43f046:	cmp    eax,0xffffffff
  43f049:	mov    r15d,eax
  43f04c:	jne    0x43f010
  43f04e:	jmp    0x43ee2e
  43f053:	mov    rax,QWORD PTR [rsp+0x70]
  43f058:	cmp    BYTE PTR [rax],0x0
  43f05b:	je     0x43f0e9
  43f061:	mov    rax,QWORD PTR [rsp+0x40]
  43f066:	test   rax,rax
  43f069:	je     0x44038c
  43f06f:	movzx  edx,BYTE PTR [rax]
  43f072:	test   dl,dl
  43f074:	jne    0x44038c
  43f07a:	test   esi,esi
  43f07c:	cmovg  esi,ebx
  43f07f:	jmp    0x43ee89
  43f084:	mov    r15d,eax
  43f087:	mov    rax,QWORD PTR [rsp+0x70]
  43f08c:	movzx  eax,BYTE PTR [rax]
  43f08f:	test   al,al
  43f091:	je     0x43f0e9
  43f093:	mov    rdi,QWORD PTR [rsp+0x70]
  43f098:	mov    r13,QWORD PTR [rsp+0xa8]
  43f0a0:	mov    DWORD PTR [rsp+0xa0],ebx
  43f0a7:	mov    rbx,rbp
  43f0aa:	nop    WORD PTR [rax+rax*1+0x0]
  43f0b0:	mov    r8,QWORD PTR [rsp+0x120]
  43f0b8:	mov    rdx,r13
  43f0bb:	mov    rcx,rbp
  43f0be:	add    rdi,0x1
  43f0c2:	add    rbp,0x1
  43f0c6:	call   0x43dc30
  43f0cb:	mov    QWORD PTR [rsp+0x120],rax
  43f0d3:	movzx  edx,BYTE PTR [rdi-0x1]
  43f0d7:	mov    BYTE PTR [rax+rbx*1],dl
  43f0da:	cmp    BYTE PTR [rdi],0x0
  43f0dd:	mov    rbx,rbp
  43f0e0:	jne    0x43f0b0
  43f0e2:	mov    ebx,DWORD PTR [rsp+0xa0]
  43f0e9:	test   esi,esi
  43f0eb:	mov    BYTE PTR [rsp+0xa0],0x1
  43f0f3:	cmovg  esi,ebx
  43f0f6:	jmp    0x43ee89
  43f0fb:	mov    r9d,0x1
  43f101:	mov    r8,r12
  43f104:	mov    rdx,r14
  43f107:	mov    ecx,eax
  43f109:	call   0x43de50
  43f10e:	mov    eax,DWORD PTR [rsp+0x4c]
  43f112:	mov    r8,QWORD PTR [rsp+0x28]
  43f117:	mov    ecx,0xffffffff
  43f11c:	lea    rdx,[rsp+0x108]
  43f124:	lea    r9,[rsp+0x120]
  43f12c:	test   eax,eax
  43f12e:	cmovne ecx,eax
  43f131:	call   0x43dcc0
  43f136:	jmp    0x43e37f
  43f13b:	movzx  esi,BYTE PTR [rbp+0x0]
  43f13f:	jmp    0x43e01b
  43f144:	test   dl,dl
  43f146:	je     0x43e360
  43f14c:	jmp    0x43e468
  43f151:	lea    rcx,[rbx+0x1]
  43f155:	or     eax,0xc
  43f158:	movzx  ebp,BYTE PTR [rbx+0x1]
  43f15c:	mov    DWORD PTR [rsp+0x30],eax
  43f160:	mov    QWORD PTR [rsp+0x60],rcx
  43f165:	jmp    0x43e1c0
  43f16a:	mov    eax,DWORD PTR [rsp+0x4c]
  43f16e:	mov    r8,QWORD PTR [rsp+0x28]
  43f173:	lea    rdx,[rsp+0x108]
  43f17b:	lea    r9,[rsp+0x120]
  43f183:	test   eax,eax
  43f185:	mov    ecx,eax
  43f187:	cmove  ecx,r15d
  43f18b:	call   0x43dcc0
  43f190:	jmp    0x43e37f
  43f195:	lea    eax,[r15-0x2b]
  43f199:	and    eax,0xfffffffd
  43f19c:	jne    0x43e794
  43f1a2:	jmp    0x43ee69
  43f1a7:	mov    eax,DWORD PTR [rsp+0x30]
  43f1ab:	mov    ebp,eax
  43f1ad:	and    ebp,0x80
  43f1b3:	jne    0x43f252
  43f1b9:	test   ah,0x6
  43f1bc:	je     0x43f5e0
  43f1c2:	test   edi,edi
  43f1c4:	jne    0x440749
  43f1ca:	mov    rax,QWORD PTR [rsp+0x50]
  43f1cf:	mov    rdi,QWORD PTR [rax]
  43f1d2:	add    rax,0x8
  43f1d6:	mov    QWORD PTR [rsp+0x50],rax
  43f1db:	mov    QWORD PTR [rsp+0x28],rdi
  43f1e0:	cmp    QWORD PTR [rsp+0x28],0x0
  43f1e6:	je     0x440b68
  43f1ec:	mov    ecx,0x64
  43f1f1:	call   0x449468
  43f1f6:	mov    rdi,QWORD PTR [rsp+0x28]
  43f1fb:	test   rax,rax
  43f1fe:	mov    QWORD PTR [rsp+0x80],rax
  43f206:	mov    QWORD PTR [rdi],rax
  43f209:	je     0x43f4c5
  43f20f:	mov    rax,QWORD PTR [rsp+0x108]
  43f217:	test   rax,rax
  43f21a:	je     0x43f225
  43f21c:	mov    rdx,QWORD PTR [rax]
  43f21f:	cmp    rdx,0x1f
  43f223:	jbe    0x43f230
  43f225:	mov    rcx,rax
  43f228:	call   0x43dd80
  43f22d:	mov    rdx,QWORD PTR [rax]
  43f230:	mov    rdi,QWORD PTR [rsp+0x28]
  43f235:	lea    rcx,[rdx+0x1]
  43f239:	mov    QWORD PTR [rsp+0x108],rax
  43f241:	mov    QWORD PTR [rsp+0x58],0x64
  43f24a:	mov    QWORD PTR [rax],rcx
  43f24d:	mov    QWORD PTR [rax+rdx*8+0x10],rdi
  43f252:	mov    rdx,r12
  43f255:	mov    rcx,r14
  43f258:	call   0x43ddb0
  43f25d:	cmp    eax,0xffffffff
  43f260:	mov    r15d,eax
  43f263:	je     0x43fe7a
  43f269:	mov    eax,DWORD PTR [rsp+0x30]
  43f26d:	mov    QWORD PTR [rsp+0xa0],rbx
  43f275:	mov    rdi,QWORD PTR [rsp+0x80]
  43f27d:	mov    r13,QWORD PTR [rsp+0x28]
  43f282:	and    eax,0x600
  43f287:	mov    DWORD PTR [rsp+0x60],eax
  43f28b:	jmp    0x43f2cd
  43f28d:	nop    DWORD PTR [rax]
  43f290:	mov    rdi,QWORD PTR [rsp+0x58]
  43f295:	mov    rcx,QWORD PTR [r13+0x0]
  43f299:	lea    rdx,[rcx+rdi*1]
  43f29d:	mov    rdi,rax
  43f2a0:	cmp    rax,rdx
  43f2a3:	je     0x43f9a8
  43f2a9:	test   esi,esi
  43f2ab:	jle    0x43f2b6
  43f2ad:	sub    esi,0x1
  43f2b0:	je     0x43f81f
  43f2b6:	mov    rdx,r12
  43f2b9:	mov    rcx,r14
  43f2bc:	call   0x43ddb0
  43f2c1:	cmp    eax,0xffffffff
  43f2c4:	mov    r15d,eax
  43f2c7:	je     0x43f81f
  43f2cd:	mov    ecx,r15d
  43f2d0:	call   0x449488
  43f2d5:	test   eax,eax
  43f2d7:	jne    0x43fef2
  43f2dd:	test   ebp,ebp
  43f2df:	jne    0x43f2a9
  43f2e1:	mov    edx,DWORD PTR [rsp+0x60]
  43f2e5:	lea    rax,[rdi+0x1]
  43f2e9:	mov    BYTE PTR [rdi],r15b
  43f2ec:	test   edx,edx
  43f2ee:	jne    0x43f290
  43f2f0:	mov    rdi,rax
  43f2f3:	jmp    0x43f2a9
  43f2f5:	cmp    esi,0xffffffff
  43f2f8:	mov    eax,0x1
  43f2fd:	cmove  esi,eax
  43f300:	mov    eax,DWORD PTR [rsp+0x30]
  43f304:	test   al,0x80
  43f306:	jne    0x43ffff
  43f30c:	and    eax,0x600
  43f311:	mov    DWORD PTR [rsp+0x60],eax
  43f315:	je     0x43f550
  43f31b:	test   edi,edi
  43f31d:	jne    0x4406e5
  43f323:	mov    rax,QWORD PTR [rsp+0x50]
  43f328:	mov    rdi,QWORD PTR [rax]
  43f32b:	add    rax,0x8
  43f32f:	mov    QWORD PTR [rsp+0x50],rax
  43f334:	mov    QWORD PTR [rsp+0x28],rdi
  43f339:	cmp    QWORD PTR [rsp+0x28],0x0
  43f33f:	je     0x440b68
  43f345:	cmp    esi,0x400
  43f34b:	mov    edi,0x400
  43f350:	cmovle edi,esi
  43f353:	movsxd rax,edi
  43f356:	mov    rcx,rax
  43f359:	mov    QWORD PTR [rsp+0x58],rax
  43f35e:	call   0x449468
  43f363:	mov    rdi,rax
  43f366:	mov    rax,QWORD PTR [rsp+0x28]
  43f36b:	test   rdi,rdi
  43f36e:	mov    QWORD PTR [rax],rdi
  43f371:	je     0x440c9e
  43f377:	mov    rax,QWORD PTR [rsp+0x108]
  43f37f:	test   rax,rax
  43f382:	je     0x43f38d
  43f384:	mov    rdx,QWORD PTR [rax]
  43f387:	cmp    rdx,0x1f
  43f38b:	jbe    0x43f398
  43f38d:	mov    rcx,rax
  43f390:	call   0x43dd80
  43f395:	mov    rdx,QWORD PTR [rax]
  43f398:	lea    rcx,[rdx+0x1]
  43f39c:	mov    QWORD PTR [rsp+0x108],rax
  43f3a4:	mov    QWORD PTR [rax],rcx
  43f3a7:	mov    rcx,QWORD PTR [rsp+0x28]
  43f3ac:	mov    QWORD PTR [rax+rdx*8+0x10],rcx
  43f3b1:	mov    rdx,r12
  43f3b4:	mov    rcx,r14
  43f3b7:	call   0x43ddb0
  43f3bc:	cmp    eax,0xffffffff
  43f3bf:	je     0x43f10e
  43f3c5:	movsxd r13,esi
  43f3c8:	mov    QWORD PTR [rsp+0x80],rbx
  43f3d0:	mov    QWORD PTR [rsp+0x1b0],r14
  43f3d8:	sub    r13,0x1
  43f3dc:	mov    rbx,QWORD PTR [rsp+0x58]
  43f3e1:	mov    rbp,QWORD PTR [rsp+0x28]
  43f3e6:	mov    r14d,eax
  43f3e9:	mov    r15d,DWORD PTR [rsp+0x60]
  43f3ee:	mov    QWORD PTR [rsp+0x30],r12
  43f3f3:	jmp    0x43f440
  43f3f5:	mov    rcx,QWORD PTR [rbp+0x0]
  43f3f9:	mov    r12,rbx
  43f3fc:	mov    r8,rdi
  43f3ff:	lea    rax,[rcx+rbx*1]
  43f403:	cmp    rdi,rax
  43f406:	je     0x43f876
  43f40c:	sub    esi,0x1
  43f40f:	lea    rdi,[r8+0x1]
  43f413:	mov    BYTE PTR [r8],r14b
  43f416:	test   esi,esi
  43f418:	jle    0x43fdc6
  43f41e:	mov    rdx,QWORD PTR [rsp+0x30]
  43f423:	mov    rcx,QWORD PTR [rsp+0x1b0]
  43f42b:	sub    r13,0x1
  43f42f:	call   0x43ddb0
  43f434:	cmp    eax,0xffffffff
  43f437:	mov    r14d,eax
  43f43a:	je     0x43fdc6
  43f440:	test   r15d,r15d
  43f443:	jne    0x43f3f5
  43f445:	mov    r12,rbx
  43f448:	mov    r8,rdi
  43f44b:	jmp    0x43f40c
  43f44d:	add    rbx,0x1
  43f451:	or     ah,0x2
  43f454:	mov    QWORD PTR [rsp+0x60],rbx
  43f459:	mov    DWORD PTR [rsp+0x30],eax
  43f45d:	jmp    0x43e1c0
  43f462:	test   BYTE PTR [rsp+0x30],0x80
  43f467:	jne    0x43e595
  43f46d:	test   DWORD PTR [rsp+0x30],0x600
  43f475:	je     0x440634
  43f47b:	test   edi,edi
  43f47d:	jne    0x4409d8
  43f483:	mov    rax,QWORD PTR [rsp+0x50]
  43f488:	mov    rdi,QWORD PTR [rax]
  43f48b:	add    rax,0x8
  43f48f:	mov    QWORD PTR [rsp+0x50],rax
  43f494:	mov    QWORD PTR [rsp+0x28],rdi
  43f499:	cmp    QWORD PTR [rsp+0x28],0x0
  43f49f:	je     0x440b68
  43f4a5:	mov    ecx,0xc8
  43f4aa:	call   0x449468
  43f4af:	mov    rdi,QWORD PTR [rsp+0x28]
  43f4b4:	test   rax,rax
  43f4b7:	mov    QWORD PTR [rsp+0x78],rax
  43f4bc:	mov    QWORD PTR [rdi],rax
  43f4bf:	jne    0x43e552
  43f4c5:	test   DWORD PTR [rsp+0x30],0x400
  43f4cd:	mov    ecx,0xffffffff
  43f4d2:	lea    rdx,[rsp+0x108]
  43f4da:	cmove  ecx,DWORD PTR [rsp+0x4c]
  43f4df:	lea    r9,[rsp+0x120]
  43f4e7:	mov    r8,rdi
  43f4ea:	call   0x43dcc0
  43f4ef:	jmp    0x43e37f
  43f4f4:	cmp    r15d,0x30
  43f4f8:	jne    0x43e717
  43f4fe:	mov    r8,QWORD PTR [rsp+0x120]
  43f506:	lea    r13,[rsp+0x118]
  43f50e:	xor    ecx,ecx
  43f510:	mov    rdx,r13
  43f513:	call   0x43dc30
  43f518:	mov    rdx,r12
  43f51b:	mov    QWORD PTR [rsp+0x120],rax
  43f523:	mov    rcx,r14
  43f526:	mov    BYTE PTR [rax],0x30
  43f529:	call   0x43ddb0
  43f52e:	test   esi,esi
  43f530:	mov    r15d,eax
  43f533:	jle    0x440983
  43f539:	sub    esi,0x1
  43f53c:	jne    0x440af2
  43f542:	mov    bpl,0x1
  43f545:	jmp    0x43e717
  43f54a:	nop    WORD PTR [rax+rax*1+0x0]
  43f550:	test   edi,edi
  43f552:	jne    0x4404b0
  43f558:	mov    rax,QWORD PTR [rsp+0x50]
  43f55d:	mov    rdi,QWORD PTR [rax]
  43f560:	add    rax,0x8
  43f564:	mov    QWORD PTR [rsp+0x50],rax
  43f569:	test   rdi,rdi
  43f56c:	jne    0x43f3b1
  43f572:	jmp    0x43e360
  43f577:	nop    WORD PTR [rax+rax*1+0x0]
  43f580:	test   edi,edi
  43f582:	jne    0x440717
  43f588:	mov    rax,QWORD PTR [rsp+0x50]
  43f58d:	mov    rdi,QWORD PTR [rax]
  43f590:	add    rax,0x8
  43f594:	mov    QWORD PTR [rsp+0x50],rax
  43f599:	mov    QWORD PTR [rsp+0x78],rdi
  43f59e:	cmp    QWORD PTR [rsp+0x78],0x0
  43f5a4:	jne    0x43ecf2
  43f5aa:	jmp    0x43e360
  43f5af:	nop
  43f5b0:	test   edi,edi
  43f5b2:	jne    0x44047b
  43f5b8:	mov    rax,QWORD PTR [rsp+0x50]
  43f5bd:	mov    rdi,QWORD PTR [rax]
  43f5c0:	add    rax,0x8
  43f5c4:	mov    QWORD PTR [rsp+0x50],rax
  43f5c9:	mov    QWORD PTR [rsp+0x78],rdi
  43f5ce:	cmp    QWORD PTR [rsp+0x78],0x0
  43f5d4:	jne    0x43ef9a
  43f5da:	jmp    0x43e360
  43f5df:	nop
  43f5e0:	test   edi,edi
  43f5e2:	jne    0x440494
  43f5e8:	mov    rax,QWORD PTR [rsp+0x50]
  43f5ed:	mov    rdi,QWORD PTR [rax]
  43f5f0:	add    rax,0x8
  43f5f4:	mov    QWORD PTR [rsp+0x50],rax
  43f5f9:	mov    QWORD PTR [rsp+0x80],rdi
  43f601:	cmp    QWORD PTR [rsp+0x80],0x0
  43f60a:	jne    0x43f252
  43f610:	jmp    0x43e360
  43f615:	mov    ebp,DWORD PTR [rsp+0x48]
  43f619:	cmp    r15d,0xffffffff
  43f61d:	setne  dl
  43f620:	and    eax,edx
  43f622:	test   ebp,ebp
  43f624:	jne    0x43ea16
  43f62a:	mov    DWORD PTR [rsp+0x48],0xa
  43f632:	jmp    0x43ea16
  43f637:	mov    DWORD PTR [rsp+0x48],0xa
  43f63f:	jmp    0x43e95f
  43f644:	mov    DWORD PTR [rsp+0x48],0x10
  43f64c:	jmp    0x43e95f
  43f651:	or     DWORD PTR [rsp+0x30],0x10
  43f656:	mov    DWORD PTR [rsp+0x48],0x0
  43f65e:	jmp    0x43e95f
  43f663:	or     DWORD PTR [rsp+0x30],0x10
  43f668:	mov    DWORD PTR [rsp+0x48],0xa
  43f670:	jmp    0x43e95f
  43f675:	mov    DWORD PTR [rsp+0x48],0x8
  43f67d:	jmp    0x43e95f
  43f682:	mov    ecx,edi
  43f684:	call   0x449478
  43f689:	test   eax,eax
  43f68b:	je     0x43ea84
  43f691:	mov    r15,rbp
  43f694:	mov    r8,QWORD PTR [rsp+0x120]
  43f69c:	mov    rdx,QWORD PTR [rsp+0x60]
  43f6a1:	mov    rcx,r15
  43f6a4:	lea    rbp,[r15+0x1]
  43f6a8:	call   0x43dc30
  43f6ad:	mov    QWORD PTR [rsp+0x120],rax
  43f6b5:	mov    BYTE PTR [rax+r15*1],dil
  43f6b9:	xor    eax,eax
  43f6bb:	test   esi,esi
  43f6bd:	mov    rdx,r12
  43f6c0:	mov    rcx,r14
  43f6c3:	setg   al
  43f6c6:	sub    esi,eax
  43f6c8:	call   0x43ddb0
  43f6cd:	test   esi,esi
  43f6cf:	mov    edi,eax
  43f6d1:	je     0x43ea84
  43f6d7:	cmp    eax,0xffffffff
  43f6da:	jne    0x43ea60
  43f6e0:	jmp    0x43ea84
  43f6e5:	cmp    DWORD PTR [rsp+0x48],0xa
  43f6ea:	jne    0x43ea84
  43f6f0:	mov    r11d,DWORD PTR [rsp+0xa8]
  43f6f8:	test   r11d,r11d
  43f6fb:	je     0x43ea84
  43f701:	movzx  edx,BYTE PTR [r13+0x0]
  43f706:	test   esi,esi
  43f708:	mov    ebx,0x7fffffff
  43f70d:	cmovg  ebx,esi
  43f710:	cmp    edi,edx
  43f712:	mov    eax,edx
  43f714:	jne    0x440309
  43f71a:	cmp    BYTE PTR [r13+0x1],0x0
  43f71f:	lea    r15,[r13+0x1]
  43f723:	jne    0x43f749
  43f725:	jmp    0x43f777
  43f727:	nop    WORD PTR [rax+rax*1+0x0]
  43f730:	movzx  ecx,BYTE PTR [r15]
  43f734:	sub    ebx,0x1
  43f737:	cmp    ecx,eax
  43f739:	jne    0x43f77d
  43f73b:	add    r15,0x1
  43f73f:	cmp    BYTE PTR [r15],0x0
  43f743:	je     0x43f779
  43f745:	test   ebx,ebx
  43f747:	je     0x43f783
  43f749:	mov    rdx,r12
  43f74c:	mov    rcx,r14
  43f74f:	call   0x43ddb0
  43f754:	cmp    eax,0xffffffff
  43f757:	jne    0x43f730
  43f759:	mov    edi,eax
  43f75b:	movzx  eax,BYTE PTR [r15]
  43f75f:	test   al,al
  43f761:	jne    0x440c65
  43f767:	test   esi,esi
  43f769:	lea    r15,[rbp-0x1]
  43f76d:	cmovle ebx,esi
  43f770:	mov    esi,ebx
  43f772:	jmp    0x43f694
  43f777:	mov    ecx,edi
  43f779:	mov    edi,ecx
  43f77b:	jmp    0x43f767
  43f77d:	mov    edi,eax
  43f77f:	mov    eax,ecx
  43f781:	jmp    0x43f75f
  43f783:	mov    rbx,QWORD PTR [rsp+0xb0]
  43f78b:	mov    edi,DWORD PTR [rsp+0xc0]
  43f792:	mov    r13,r15
  43f795:	mov    QWORD PTR [rsp+0xa0],rbp
  43f79d:	cmp    QWORD PTR [rsp+0x40],r13
  43f7a2:	mov    r15d,ecx
  43f7a5:	jae    0x43ea9e
  43f7ab:	xor    r9d,r9d
  43f7ae:	mov    r8,r12
  43f7b1:	mov    rdx,r14
  43f7b4:	call   0x43de50
  43f7b9:	lea    rsi,[r13-0x1]
  43f7bd:	cmp    QWORD PTR [rsp+0x40],rsi
  43f7c2:	jae    0x43f7f4
  43f7c4:	mov    rbp,rsi
  43f7c7:	movzx  ecx,BYTE PTR [rbp+0x0]
  43f7cb:	mov    r9d,0x1
  43f7d1:	mov    r8,r12
  43f7d4:	mov    rdx,r14
  43f7d7:	sub    rbp,0x1
  43f7db:	call   0x43de50
  43f7e0:	cmp    rbp,QWORD PTR [rsp+0x40]
  43f7e5:	jne    0x43f7c7
  43f7e7:	mov    rax,QWORD PTR [rsp+0x40]
  43f7ec:	sub    rax,r13
  43f7ef:	lea    rsi,[rsi+rax*1+0x1]
  43f7f4:	movzx  r15d,BYTE PTR [rsi]
  43f7f8:	jmp    0x43ea9e
  43f7fd:	nop    DWORD PTR [rax]
  43f800:	mov    r15d,eax
  43f803:	mov    eax,edx
  43f805:	jmp    0x43e82f
  43f80a:	mov    r15d,eax
  43f80d:	jmp    0x43e837
  43f812:	mov    rax,QWORD PTR [rsp+0x70]
  43f817:	movzx  eax,BYTE PTR [rax]
  43f81a:	jmp    0x43f08f
  43f81f:	mov    rbx,QWORD PTR [rsp+0xa0]
  43f827:	mov    QWORD PTR [rsp+0x80],rdi
  43f82f:	xor    r13d,r13d
  43f832:	test   ebp,ebp
  43f834:	jne    0x43e03a
  43f83a:	mov    rax,QWORD PTR [rsp+0x80]
  43f842:	lea    rsi,[rax+0x1]
  43f846:	mov    BYTE PTR [rax],0x0
  43f849:	mov    r8,QWORD PTR [rsp+0x58]
  43f84e:	mov    rcx,QWORD PTR [rsp+0x28]
  43f853:	mov    rdx,rsi
  43f856:	call   0x43db60
  43f85b:	add    DWORD PTR [rsp+0x4c],0x1
  43f860:	mov    QWORD PTR [rsp+0x80],rsi
  43f868:	mov    QWORD PTR [rsp+0x28],0x0
  43f871:	jmp    0x43e03a
  43f876:	lea    rax,[r13+0x1]
  43f87a:	mov    r12,r13
  43f87d:	lea    rdi,[rbx+0x1]
  43f881:	cmp    rbx,rax
  43f884:	cmovl  r12,rbx
  43f888:	add    r12,rbx
  43f88b:	jmp    0x43f8a0
  43f88d:	nop    DWORD PTR [rax]
  43f890:	cmp    r12,rdi
  43f893:	jbe    0x43ff1b
  43f899:	mov    rcx,QWORD PTR [rbp+0x0]
  43f89d:	mov    r12,rdi
  43f8a0:	mov    rdx,r12
  43f8a3:	call   0x449420
  43f8a8:	test   rax,rax
  43f8ab:	je     0x43f890
  43f8ad:	lea    r8,[rax+rbx*1]
  43f8b1:	mov    QWORD PTR [rbp+0x0],rax
  43f8b5:	mov    rbx,r12
  43f8b8:	jmp    0x43f40c
  43f8bd:	mov    rbx,QWORD PTR [rsp+0xc8]
  43f8c5:	mov    edi,DWORD PTR [rsp+0xd4]
  43f8cc:	test   rbp,rbp
  43f8cf:	je     0x43e360
  43f8d5:	cmp    rbp,0x2
  43f8d9:	jne    0x43f8e6
  43f8db:	test   BYTE PTR [rsp+0x30],0x40
  43f8e0:	jne    0x43e360
  43f8e6:	lea    r13,[rsp+0x118]
  43f8ee:	mov    r8,QWORD PTR [rsp+0x120]
  43f8f6:	mov    rdx,r13
  43f8f9:	mov    rcx,rbp
  43f8fc:	call   0x43dc30
  43f901:	test   BYTE PTR [rsp+0x30],0x8
  43f906:	mov    QWORD PTR [rsp+0x120],rax
  43f90e:	mov    BYTE PTR [rax+rbp*1],0x0
  43f912:	jne    0x440213
  43f918:	test   BYTE PTR [rsp+0x30],0x4
  43f91d:	je     0x440081
  43f923:	mov    r8,QWORD PTR [rsp+0x98]
  43f92b:	mov    rdx,QWORD PTR [rsp+0x120]
  43f933:	lea    rcx,[rsp+0xe0]
  43f93b:	call   0x440fb0
  43f940:	test   BYTE PTR [rsp+0x30],0x80
  43f945:	fld    TBYTE PTR [rsp+0xe0]
  43f94c:	jne    0x43fe48
  43f952:	mov    rax,QWORD PTR [rsp+0x120]
  43f95a:	cmp    QWORD PTR [rsp+0x128],rax
  43f962:	je     0x43e358
  43f968:	test   edi,edi
  43f96a:	jne    0x44086a
  43f970:	mov    rsi,QWORD PTR [rsp+0x50]
  43f975:	mov    rax,QWORD PTR [rsi]
  43f978:	add    rsi,0x8
  43f97c:	mov    QWORD PTR [rsp+0x50],rsi
  43f981:	cmp    BYTE PTR [rsp+0xd3],0x0
  43f989:	fstp   QWORD PTR [rsp+0xd8]
  43f990:	movsd  xmm0,QWORD PTR [rsp+0xd8]
  43f999:	je     0x43f99f
  43f99b:	xorpd  xmm0,xmm6
  43f99f:	movsd  QWORD PTR [rax],xmm0
  43f9a3:	jmp    0x43eb98
  43f9a8:	mov    rax,QWORD PTR [rsp+0x58]
  43f9ad:	lea    rbx,[rax+rax*1]
  43f9b1:	lea    rdi,[rax+0x1]
  43f9b5:	jmp    0x43f9d0
  43f9b7:	nop    WORD PTR [rax+rax*1+0x0]
  43f9c0:	cmp    rbx,rdi
  43f9c3:	jbe    0x44015c
  43f9c9:	mov    rcx,QWORD PTR [r13+0x0]
  43f9cd:	mov    rbx,rdi
  43f9d0:	mov    rdx,rbx
  43f9d3:	call   0x449420
  43f9d8:	test   rax,rax
  43f9db:	je     0x43f9c0
  43f9dd:	mov    rdi,QWORD PTR [rsp+0x58]
  43f9e2:	mov    QWORD PTR [r13+0x0],rax
  43f9e6:	mov    QWORD PTR [rsp+0x58],rbx
  43f9eb:	add    rdi,rax
  43f9ee:	jmp    0x43f2a9
  43f9f3:	mov    r8,QWORD PTR [rsp+0x120]
  43f9fb:	mov    rdx,QWORD PTR [rsp+0xa8]
  43fa03:	mov    rcx,rbp
  43fa06:	call   0x43dc30
  43fa0b:	movzx  edi,BYTE PTR [rsp+0xb0]
  43fa13:	mov    QWORD PTR [rsp+0x120],rax
  43fa1b:	mov    BYTE PTR [rsp+0x60],0x1
  43fa20:	mov    BYTE PTR [rsp+0xa0],0x1
  43fa28:	mov    BYTE PTR [rax+rbp*1],dil
  43fa2c:	add    rbp,0x1
  43fa30:	jmp    0x43ee89
  43fa35:	test   r13d,r13d
  43fa38:	je     0x43fb87
  43fa3e:	mov    rax,QWORD PTR [rsp+0x110]
  43fa46:	mov    rdx,r12
  43fa49:	mov    rcx,r14
  43fa4c:	mov    QWORD PTR [rsp+0xa8],rax
  43fa54:	call   0x43ddb0
  43fa59:	cmp    eax,0xffffffff
  43fa5c:	mov    r15d,eax
  43fa5f:	je     0x43fe7a
  43fa65:	mov    r13d,DWORD PTR [rsp+0x30]
  43fa6a:	mov    QWORD PTR [rsp+0xa0],rbx
  43fa72:	xor    edi,edi
  43fa74:	mov    DWORD PTR [rsp+0xfc],0x0
  43fa7f:	mov    rbx,QWORD PTR [rsp+0x78]
  43fa84:	and    r13d,0x80
  43fa8b:	jmp    0x43fab0
  43fa8d:	nop    DWORD PTR [rax]
  43fa90:	sub    esi,0x1
  43fa93:	je     0x43ff3a
  43fa99:	mov    rdx,r12
  43fa9c:	mov    rcx,r14
  43fa9f:	call   0x43ddb0
  43faa4:	cmp    eax,0xffffffff
  43faa7:	mov    r15d,eax
  43faaa:	je     0x43ff3a
  43fab0:	mov    rax,QWORD PTR [rsp+0x120]
  43fab8:	movsxd rdx,r15d
  43fabb:	cmp    BYTE PTR [rax+rdx*1],bpl
  43fabf:	je     0x4402d9
  43fac5:	test   r13d,r13d
  43fac8:	jne    0x43fa90
  43faca:	mov    r9,QWORD PTR [rsp+0x88]
  43fad2:	mov    rdx,QWORD PTR [rsp+0x90]
  43fada:	mov    r8d,0x1
  43fae0:	mov    rcx,rbx
  43fae3:	mov    BYTE PTR [rsp+0x100],r15b
  43faeb:	add    rdi,0x1
  43faef:	call   0x441260
  43faf4:	cmp    rax,0xfffffffffffffffe
  43faf8:	je     0x43fa99
  43fafa:	add    rbx,0x2
  43fafe:	test   DWORD PTR [rsp+0x30],0x600
  43fb06:	je     0x43fb80
  43fb08:	mov    rax,QWORD PTR [rsp+0x28]
  43fb0d:	xor    edi,edi
  43fb0f:	mov    rcx,QWORD PTR [rax]
  43fb12:	mov    rax,QWORD PTR [rsp+0x58]
  43fb17:	add    rax,rax
  43fb1a:	mov    QWORD PTR [rsp+0x60],rax
  43fb1f:	add    rax,rcx
  43fb22:	cmp    rbx,rax
  43fb25:	jne    0x43fa90
  43fb2b:	mov    rbx,QWORD PTR [rsp+0x58]
  43fb30:	mov    rdi,QWORD PTR [rsp+0x60]
  43fb35:	add    rbx,0x1
  43fb39:	jmp    0x43fb54
  43fb3b:	nop    DWORD PTR [rax+rax*1+0x0]
  43fb40:	cmp    rdi,rbx
  43fb43:	jbe    0x44081d
  43fb49:	mov    rax,QWORD PTR [rsp+0x28]
  43fb4e:	mov    rdi,rbx
  43fb51:	mov    rcx,QWORD PTR [rax]
  43fb54:	lea    rdx,[rdi+rdi*1]
  43fb58:	call   0x449420
  43fb5d:	test   rax,rax
  43fb60:	je     0x43fb40
  43fb62:	mov    rbx,QWORD PTR [rsp+0x28]
  43fb67:	mov    QWORD PTR [rsp+0x58],rdi
  43fb6c:	xor    edi,edi
  43fb6e:	mov    QWORD PTR [rbx],rax
  43fb71:	mov    rbx,QWORD PTR [rsp+0x60]
  43fb76:	add    rbx,rax
  43fb79:	jmp    0x43fa90
  43fb7e:	xchg   ax,ax
  43fb80:	xor    edi,edi
  43fb82:	jmp    0x43fa90
  43fb87:	mov    rax,QWORD PTR [rsp+0x110]
  43fb8f:	mov    rdx,r12
  43fb92:	mov    rcx,r14
  43fb95:	mov    QWORD PTR [rsp+0xa8],rax
  43fb9d:	call   0x43ddb0
  43fba2:	cmp    eax,0xffffffff
  43fba5:	mov    r15d,eax
  43fba8:	je     0x43fe7a
  43fbae:	mov    eax,DWORD PTR [rsp+0x30]
  43fbb2:	mov    QWORD PTR [rsp+0xa0],rbx
  43fbba:	mov    rbx,QWORD PTR [rsp+0x80]
  43fbc2:	mov    edi,eax
  43fbc4:	and    eax,0x600
  43fbc9:	and    edi,0x80
  43fbcf:	mov    DWORD PTR [rsp+0x60],eax
  43fbd3:	jmp    0x43fc12
  43fbd5:	mov    rbx,QWORD PTR [rsp+0x28]
  43fbda:	mov    rcx,QWORD PTR [rbx]
  43fbdd:	mov    rbx,QWORD PTR [rsp+0x58]
  43fbe2:	lea    rdx,[rcx+rbx*1]
  43fbe6:	mov    rbx,rax
  43fbe9:	cmp    rax,rdx
  43fbec:	je     0x440191
  43fbf2:	sub    esi,0x1
  43fbf5:	je     0x43ffc6
  43fbfb:	mov    rdx,r12
  43fbfe:	mov    rcx,r14
  43fc01:	call   0x43ddb0
  43fc06:	cmp    eax,0xffffffff
  43fc09:	mov    r15d,eax
  43fc0c:	je     0x43ffc6
  43fc12:	mov    rax,QWORD PTR [rsp+0x120]
  43fc1a:	movsxd rdx,r15d
  43fc1d:	cmp    BYTE PTR [rax+rdx*1],bpl
  43fc21:	je     0x440338
  43fc27:	test   edi,edi
  43fc29:	jne    0x43fbf2
  43fc2b:	mov    edx,DWORD PTR [rsp+0x60]
  43fc2f:	lea    rax,[rbx+0x1]
  43fc33:	mov    BYTE PTR [rbx],r15b
  43fc36:	test   edx,edx
  43fc38:	jne    0x43fbd5
  43fc3a:	mov    rbx,rax
  43fc3d:	jmp    0x43fbf2
  43fc3f:	mov    rax,QWORD PTR [rsp+0x120]
  43fc47:	add    rbx,0x1
  43fc4b:	mov    BYTE PTR [rax+rdx*1],0x1
  43fc4f:	movzx  eax,BYTE PTR [rbx]
  43fc52:	jmp    0x43e627
  43fc57:	mov    rcx,QWORD PTR [rsp+0x120]
  43fc5f:	mov    QWORD PTR [rsp+0x118],0x100
  43fc6b:	mov    eax,0x100
  43fc70:	test   rcx,rcx
  43fc73:	je     0x43fc82
  43fc75:	call   0x4494c8
  43fc7a:	mov    rax,QWORD PTR [rsp+0x118]
  43fc82:	mov    rcx,rax
  43fc85:	call   0x449468
  43fc8a:	mov    QWORD PTR [rsp+0x120],rax
  43fc92:	jmp    0x43e5d1
  43fc97:	cmp    rax,0x1
  43fc9b:	jne    0x43ee2e
  43fca1:	sub    DWORD PTR [rsp+0x30],0x1
  43fca6:	add    rbx,0x2
  43fcaa:	mov    eax,DWORD PTR [rsp+0x30]
  43fcae:	test   eax,eax
  43fcb0:	jle    0x43fccf
  43fcb2:	mov    rdx,r12
  43fcb5:	mov    rcx,r14
  43fcb8:	call   0x43ddb0
  43fcbd:	sub    QWORD PTR [rsp+0x60],0x1
  43fcc3:	cmp    eax,0xffffffff
  43fcc6:	mov    r15d,eax
  43fcc9:	jne    0x43ed51
  43fccf:	xor    r13d,r13d
  43fcd2:	test   ebp,ebp
  43fcd4:	mov    QWORD PTR [rsp+0x78],rbx
  43fcd9:	mov    rbx,QWORD PTR [rsp+0xa8]
  43fce1:	jne    0x43e03a
  43fce7:	mov    rax,QWORD PTR [rsp+0x58]
  43fcec:	mov    rdx,QWORD PTR [rsp+0x78]
  43fcf1:	mov    rcx,QWORD PTR [rsp+0x28]
  43fcf6:	lea    r8,[rax+rax*1]
  43fcfa:	call   0x43db60
  43fcff:	add    DWORD PTR [rsp+0x4c],0x1
  43fd04:	mov    QWORD PTR [rsp+0x28],0x0
  43fd0d:	jmp    0x43e03a
  43fd12:	cmp    rax,0x1
  43fd16:	jne    0x43ee2e
  43fd1c:	add    rbx,0x2
  43fd20:	test   ebp,ebp
  43fd22:	jne    0x43fd4d
  43fd24:	mov    eax,DWORD PTR [rsp+0xa0]
  43fd2b:	test   eax,eax
  43fd2d:	je     0x43fd4d
  43fd2f:	mov    rax,QWORD PTR [rsp+0x28]
  43fd34:	mov    rcx,QWORD PTR [rax]
  43fd37:	mov    rax,QWORD PTR [rsp+0x58]
  43fd3c:	lea    r8,[rax+rax*1]
  43fd40:	lea    rax,[rcx+r8*1]
  43fd44:	cmp    rbx,rax
  43fd47:	je     0x440933
  43fd4d:	mov    eax,DWORD PTR [rsp+0x78]
  43fd51:	test   eax,eax
  43fd53:	jle    0x43fd5e
  43fd55:	sub    eax,0x1
  43fd58:	mov    DWORD PTR [rsp+0x78],eax
  43fd5c:	je     0x43fd75
  43fd5e:	mov    rdx,r12
  43fd61:	mov    rcx,r14
  43fd64:	call   0x43ddb0
  43fd69:	cmp    eax,0xffffffff
  43fd6c:	mov    r15d,eax
  43fd6f:	jne    0x43efea
  43fd75:	mov    QWORD PTR [rsp+0x78],rbx
  43fd7a:	mov    rbx,QWORD PTR [rsp+0x60]
  43fd7f:	xor    r13d,r13d
  43fd82:	test   ebp,ebp
  43fd84:	jne    0x43e03a
  43fd8a:	mov    rax,QWORD PTR [rsp+0x78]
  43fd8f:	xor    ecx,ecx
  43fd91:	lea    rsi,[rax+0x2]
  43fd95:	mov    WORD PTR [rax],cx
  43fd98:	mov    rax,QWORD PTR [rsp+0x58]
  43fd9d:	mov    rcx,QWORD PTR [rsp+0x28]
  43fda2:	mov    rdx,rsi
  43fda5:	lea    r8,[rax+rax*1]
  43fda9:	call   0x43db60
  43fdae:	add    DWORD PTR [rsp+0x4c],0x1
  43fdb3:	mov    QWORD PTR [rsp+0x78],rsi
  43fdb8:	mov    QWORD PTR [rsp+0x28],0x0
  43fdc1:	jmp    0x43e03a
  43fdc6:	mov    rcx,QWORD PTR [rsp+0x28]
  43fdcb:	mov    rbp,r12
  43fdce:	mov    rdx,rdi
  43fdd1:	mov    r8,rbp
  43fdd4:	mov    QWORD PTR [rsp+0x58],rbx
  43fdd9:	mov    r15d,r14d
  43fddc:	mov    rbx,QWORD PTR [rsp+0x80]
  43fde4:	mov    r14,QWORD PTR [rsp+0x1b0]
  43fdec:	xor    r13d,r13d
  43fdef:	mov    r12,QWORD PTR [rsp+0x30]
  43fdf4:	mov    QWORD PTR [rsp+0x80],rdi
  43fdfc:	call   0x43db60
  43fe01:	add    DWORD PTR [rsp+0x4c],0x1
  43fe06:	mov    QWORD PTR [rsp+0x28],0x0
  43fe0f:	jmp    0x43e03a
  43fe14:	test   BYTE PTR [rsp+0x30],0x10
  43fe19:	je     0x440209
  43fe1f:	call   0x449380
  43fe24:	movabs rdx,0xffffffff00000000
  43fe2e:	and    rdx,QWORD PTR [rsp+0xb8]
  43fe36:	mov    eax,eax
  43fe38:	or     rdx,rax
  43fe3b:	mov    QWORD PTR [rsp+0xb8],rdx
  43fe43:	jmp    0x43eb48
  43fe48:	fstp   st(0)
  43fe4a:	mov    rax,QWORD PTR [rsp+0x128]
  43fe52:	cmp    QWORD PTR [rsp+0x120],rax
  43fe5a:	jne    0x43e228
  43fe60:	jmp    0x43e360
  43fe65:	call   0x4495c8
  43fe6a:	mov    DWORD PTR [rax],0x16
  43fe70:	mov    eax,0xffffffff
  43fe75:	jmp    0x43e37f
  43fe7a:	mov    eax,DWORD PTR [rsp+0x4c]
  43fe7e:	test   eax,eax
  43fe80:	cmove  eax,r15d
  43fe84:	mov    ecx,eax
  43fe86:	mov    r8,QWORD PTR [rsp+0x28]
  43fe8b:	lea    rdx,[rsp+0x108]
  43fe93:	lea    r9,[rsp+0x120]
  43fe9b:	call   0x43dcc0
  43fea0:	jmp    0x43e37f
  43fea5:	or     eax,0x1
  43fea8:	movzx  ebp,BYTE PTR [rbx+0x2]
  43feac:	mov    DWORD PTR [rsp+0x30],eax
  43feb0:	lea    rax,[rbx+0x2]
  43feb4:	mov    QWORD PTR [rsp+0x60],rax
  43feb9:	jmp    0x43e1c0
  43febe:	or     eax,0x404
  43fec3:	movzx  ebp,BYTE PTR [rbx+0x2]
  43fec7:	mov    DWORD PTR [rsp+0x30],eax
  43fecb:	lea    rax,[rbx+0x2]
  43fecf:	mov    QWORD PTR [rsp+0x60],rax
  43fed4:	jmp    0x43e1c0
  43fed9:	or     eax,0xc
  43fedc:	movzx  ebp,BYTE PTR [rbx+0x2]
  43fee0:	mov    DWORD PTR [rsp+0x30],eax
  43fee4:	lea    rax,[rbx+0x2]
  43fee8:	mov    QWORD PTR [rsp+0x60],rax
  43feed:	jmp    0x43e1c0
  43fef2:	mov    r9d,0x1
  43fef8:	mov    r8,r12
  43fefb:	mov    rdx,r14
  43fefe:	mov    ecx,r15d
  43ff01:	mov    rbx,QWORD PTR [rsp+0xa0]
  43ff09:	mov    QWORD PTR [rsp+0x80],rdi
  43ff11:	call   0x43de50
  43ff16:	jmp    0x43f82f
  43ff1b:	lea    rdx,[rsp+0x120]
  43ff23:	lea    rcx,[rsp+0x108]
  43ff2b:	call   0x43dba0
  43ff30:	mov    eax,0xffffffff
  43ff35:	jmp    0x43e37f
  43ff3a:	mov    QWORD PTR [rsp+0x78],rbx
  43ff3f:	mov    rbx,QWORD PTR [rsp+0xa0]
  43ff47:	test   rdi,rdi
  43ff4a:	jne    0x43ee2e
  43ff50:	mov    rax,QWORD PTR [rsp+0xa8]
  43ff58:	cmp    rax,QWORD PTR [rsp+0x110]
  43ff60:	je     0x43e360
  43ff66:	xor    r13d,r13d
  43ff69:	test   BYTE PTR [rsp+0x30],0x80
  43ff6e:	jne    0x43e03a
  43ff74:	jmp    0x43fd8a
  43ff79:	mov    r8,QWORD PTR [rsp+0x120]
  43ff81:	lea    r13,[rsp+0x118]
  43ff89:	xor    ecx,ecx
  43ff8b:	mov    rdx,r13
  43ff8e:	call   0x43dc30
  43ff93:	mov    QWORD PTR [rsp+0x120],rax
  43ff9b:	mov    BYTE PTR [rax],r15b
  43ff9e:	xor    eax,eax
  43ffa0:	test   esi,esi
  43ffa2:	mov    rdx,r12
  43ffa5:	mov    rcx,r14
  43ffa8:	setg   al
  43ffab:	sub    esi,eax
  43ffad:	call   0x43ddb0
  43ffb2:	mov    QWORD PTR [rsp+0xa0],0x1
  43ffbe:	mov    r15d,eax
  43ffc1:	jmp    0x43e98e
  43ffc6:	mov    QWORD PTR [rsp+0x80],rbx
  43ffce:	mov    rbx,QWORD PTR [rsp+0xa0]
  43ffd6:	mov    rax,QWORD PTR [rsp+0xa8]
  43ffde:	cmp    rax,QWORD PTR [rsp+0x110]
  43ffe6:	je     0x43e360
  43ffec:	xor    r13d,r13d
  43ffef:	test   BYTE PTR [rsp+0x30],0x80
  43fff4:	jne    0x43e03a
  43fffa:	jmp    0x43f83a
  43ffff:	mov    rdx,r12
  440002:	mov    rcx,r14
  440005:	call   0x43ddb0
  44000a:	cmp    eax,0xffffffff
  44000d:	mov    r15d,eax
  440010:	je     0x43f10e
  440016:	mov    eax,r15d
  440019:	jmp    0x440030
  44001b:	nop    DWORD PTR [rax+rax*1+0x0]
  440020:	mov    rdx,r12
  440023:	mov    rcx,r14
  440026:	call   0x43ddb0
  44002b:	cmp    eax,0xffffffff
  44002e:	je     0x440037
  440030:	sub    esi,0x1
  440033:	test   esi,esi
  440035:	jg     0x440020
  440037:	mov    r15d,eax
  44003a:	jmp    0x43e228
  44003f:	test   BYTE PTR [rsp+0x30],0x4
  440044:	jne    0x440361
  44004a:	test   BYTE PTR [rsp+0x30],0x2
  44004f:	je     0x4407dd
  440055:	test   edi,edi
  440057:	jne    0x44091a
  44005d:	mov    rax,QWORD PTR [rsp+0x50]
  440062:	lea    rdx,[rax+0x8]
  440066:	mov    rax,QWORD PTR [rax]
  440069:	mov    rcx,QWORD PTR [rsp+0x110]
  440071:	mov    QWORD PTR [rsp+0x50],rdx
  440076:	xor    r13d,r13d
  440079:	mov    WORD PTR [rax],cx
  44007c:	jmp    0x43e03a
  440081:	mov    rdx,QWORD PTR [rsp+0x98]
  440089:	mov    rcx,QWORD PTR [rsp+0x120]
  440091:	call   0x440f00
  440096:	test   BYTE PTR [rsp+0x30],0x80
  44009b:	movaps xmm8,xmm0
  44009f:	jne    0x43fe4a
  4400a5:	mov    rax,QWORD PTR [rsp+0x120]
  4400ad:	cmp    QWORD PTR [rsp+0x128],rax
  4400b5:	je     0x43e360
  4400bb:	test   edi,edi
  4400bd:	jne    0x4408a2
  4400c3:	mov    rsi,QWORD PTR [rsp+0x50]
  4400c8:	mov    rax,QWORD PTR [rsi]
  4400cb:	add    rsi,0x8
  4400cf:	mov    QWORD PTR [rsp+0x50],rsi
  4400d4:	cmp    BYTE PTR [rsp+0xd3],0x0
  4400dc:	movaps xmm0,xmm8
  4400e0:	je     0x4400e5
  4400e2:	xorps  xmm0,xmm7
  4400e5:	movss  DWORD PTR [rax],xmm0
  4400e9:	jmp    0x43eb98
  4400ee:	mov    r15,QWORD PTR [rsp+0xa0]
  4400f6:	lea    r13,[rsp+0x118]
  4400fe:	mov    r8,QWORD PTR [rsp+0x120]
  440106:	mov    rdx,r13
  440109:	mov    rcx,r15
  44010c:	lea    r13,[r15+0x1]
  440110:	call   0x43dc30
  440115:	mov    rdx,r12
  440118:	mov    QWORD PTR [rsp+0x120],rax
  440120:	mov    rcx,r14
  440123:	mov    BYTE PTR [rax+r15*1],0x30
  440128:	call   0x43ddb0
  44012d:	mov    r15d,eax
  440130:	mov    ecx,r15d
  440133:	call   0x449370
  440138:	cmp    eax,0x78
  44013b:	je     0x4409b3
  440141:	cmp    r15d,0xffffffff
  440145:	mov    QWORD PTR [rsp+0xa0],r13
  44014d:	setne  dl
  440150:	test   esi,esi
  440152:	setne  al
  440155:	and    eax,edx
  440157:	jmp    0x43ea04
  44015c:	test   DWORD PTR [rsp+0x30],0x400
  440164:	jne    0x4402ff
  44016a:	mov    rax,QWORD PTR [rsp+0x28]
  44016f:	mov    rsi,QWORD PTR [rsp+0x58]
  440174:	mov    ecx,DWORD PTR [rsp+0x4c]
  440178:	mov    QWORD PTR [rsp+0x28],0x0
  440181:	mov    rax,QWORD PTR [rax]
  440184:	add    ecx,0x1
  440187:	mov    BYTE PTR [rax+rsi*1-0x1],0x0
  44018c:	jmp    0x43fe86
  440191:	mov    rax,QWORD PTR [rsp+0x58]
  440196:	mov    DWORD PTR [rsp+0x80],esi
  44019d:	mov    rsi,QWORD PTR [rsp+0x28]
  4401a2:	lea    r13,[rax+rax*1]
  4401a6:	lea    rbx,[rax+0x1]
  4401aa:	mov    rax,r12
  4401ad:	mov    r12d,edi
  4401b0:	mov    rdi,r13
  4401b3:	mov    r13,rax
  4401b6:	jmp    0x4401cf
  4401b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4401c0:	cmp    rdi,rbx
  4401c3:	jbe    0x4405f0
  4401c9:	mov    rcx,QWORD PTR [rsi]
  4401cc:	mov    rdi,rbx
  4401cf:	mov    rdx,rdi
  4401d2:	call   0x449420
  4401d7:	test   rax,rax
  4401da:	je     0x4401c0
  4401dc:	mov    rbx,r13
  4401df:	mov    r13,rdi
  4401e2:	mov    edi,r12d
  4401e5:	mov    r12,rbx
  4401e8:	mov    rbx,QWORD PTR [rsp+0x28]
  4401ed:	mov    esi,DWORD PTR [rsp+0x80]
  4401f4:	mov    QWORD PTR [rbx],rax
  4401f7:	mov    rbx,QWORD PTR [rsp+0x58]
  4401fc:	mov    QWORD PTR [rsp+0x58],r13
  440201:	add    rbx,rax
  440204:	jmp    0x43fbf2
  440209:	call   0x449378
  44020e:	jmp    0x43fe24
  440213:	mov    r8,QWORD PTR [rsp+0x98]
  44021b:	mov    rdx,QWORD PTR [rsp+0x120]
  440223:	lea    rcx,[rsp+0xe0]
  44022b:	call   0x440fb0
  440230:	fld    TBYTE PTR [rsp+0xe0]
  440237:	test   BYTE PTR [rsp+0x30],0x80
  44023c:	fstp   TBYTE PTR [rsp+0x60]
  440240:	jne    0x43fe4a
  440246:	mov    rax,QWORD PTR [rsp+0x120]
  44024e:	cmp    QWORD PTR [rsp+0x128],rax
  440256:	je     0x43e360
  44025c:	test   edi,edi
  44025e:	jne    0x440906
  440264:	mov    rsi,QWORD PTR [rsp+0x50]
  440269:	mov    rax,QWORD PTR [rsi]
  44026c:	add    rsi,0x8
  440270:	mov    QWORD PTR [rsp+0x50],rsi
  440275:	cmp    BYTE PTR [rsp+0xd3],0x0
  44027d:	fld    TBYTE PTR [rsp+0x60]
  440281:	je     0x440285
  440283:	fchs   
  440285:	fstp   TBYTE PTR [rax]
  440287:	jmp    0x43eb98
  44028c:	call   0x4416c0
  440291:	mov    QWORD PTR [rsp+0xb8],rax
  440299:	jmp    0x43eb48
  44029e:	test   BYTE PTR [rsp+0x30],0x4
  4402a3:	jne    0x440311
  4402a5:	test   BYTE PTR [rsp+0x30],0x2
  4402aa:	je     0x4407a9
  4402b0:	test   edi,edi
  4402b2:	jne    0x440c8a
  4402b8:	mov    rsi,QWORD PTR [rsp+0x50]
  4402bd:	mov    rax,QWORD PTR [rsi]
  4402c0:	add    rsi,0x8
  4402c4:	mov    QWORD PTR [rsp+0x50],rsi
  4402c9:	movzx  esi,WORD PTR [rsp+0xb8]
  4402d1:	mov    WORD PTR [rax],si
  4402d4:	jmp    0x43eb98
  4402d9:	mov    r9d,0x1
  4402df:	mov    r8,r12
  4402e2:	mov    rdx,r14
  4402e5:	mov    ecx,r15d
  4402e8:	mov    QWORD PTR [rsp+0x78],rbx
  4402ed:	mov    rbx,QWORD PTR [rsp+0xa0]
  4402f5:	call   0x43de50
  4402fa:	jmp    0x43ff47
  4402ff:	mov    ecx,0xffffffff
  440304:	jmp    0x43fe86
  440309:	mov    r15,r13
  44030c:	jmp    0x43f75f
  440311:	test   edi,edi
  440313:	jne    0x440795
  440319:	mov    rsi,QWORD PTR [rsp+0x50]
  44031e:	mov    rax,QWORD PTR [rsi]
  440321:	add    rsi,0x8
  440325:	mov    QWORD PTR [rsp+0x50],rsi
  44032a:	mov    esi,DWORD PTR [rsp+0xb8]
  440331:	mov    DWORD PTR [rax],esi
  440333:	jmp    0x43eb98
  440338:	mov    r9d,0x1
  44033e:	mov    r8,r12
  440341:	mov    rdx,r14
  440344:	mov    ecx,r15d
  440347:	mov    QWORD PTR [rsp+0x80],rbx
  44034f:	mov    rbx,QWORD PTR [rsp+0xa0]
  440357:	call   0x43de50
  44035c:	jmp    0x43ffd6
  440361:	test   edi,edi
  440363:	jne    0x4408b6
  440369:	mov    rsi,QWORD PTR [rsp+0x50]
  44036e:	mov    rax,QWORD PTR [rsi]
  440371:	add    rsi,0x8
  440375:	mov    QWORD PTR [rsp+0x50],rsi
  44037a:	mov    rdx,QWORD PTR [rsp+0x110]
  440382:	xor    r13d,r13d
  440385:	mov    DWORD PTR [rax],edx
  440387:	jmp    0x43e03a
  44038c:	xor    r9d,r9d
  44038f:	mov    r8,r12
  440392:	mov    rdx,r14
  440395:	mov    ecx,r15d
  440398:	mov    rbx,QWORD PTR [rsp+0xc8]
  4403a0:	mov    edi,DWORD PTR [rsp+0xd4]
  4403a7:	call   0x43de50
  4403ac:	jmp    0x43f8cc
  4403b1:	lea    r13,[rsp+0x118]
  4403b9:	mov    r8,QWORD PTR [rsp+0x120]
  4403c1:	xor    ecx,ecx
  4403c3:	mov    rdx,r13
  4403c6:	call   0x43dc30
  4403cb:	test   esi,esi
  4403cd:	mov    QWORD PTR [rsp+0x120],rax
  4403d5:	mov    BYTE PTR [rax],r15b
  4403d8:	je     0x43e360
  4403de:	lea    rax,[rip+0x19fe2]        # 0x45a3c7
  4403e5:	mov    ecx,0x1
  4403ea:	mov    QWORD PTR [rsp+0x60],rbx
  4403ef:	mov    r15d,edi
  4403f2:	mov    rdi,rcx
  4403f5:	mov    rbx,rax
  4403f8:	jmp    0x44040b
  4403fa:	nop    WORD PTR [rax+rax*1+0x0]
  440400:	test   esi,esi
  440402:	je     0x43e360
  440408:	mov    rdi,rdx
  44040b:	mov    rdx,r12
  44040e:	mov    rcx,r14
  440411:	call   0x43ddb0
  440416:	cmp    eax,0xffffffff
  440419:	mov    ebp,eax
  44041b:	je     0x43e360
  440421:	mov    ecx,eax
  440423:	call   0x449370
  440428:	movsx  edx,BYTE PTR [rbx]
  44042b:	cmp    eax,edx
  44042d:	jne    0x43e360
  440433:	mov    r8,QWORD PTR [rsp+0x120]
  44043b:	xor    eax,eax
  44043d:	test   esi,esi
  44043f:	setg   al
  440442:	mov    rdx,r13
  440445:	mov    rcx,rdi
  440448:	add    rbx,0x1
  44044c:	sub    esi,eax
  44044e:	call   0x43dc30
  440453:	cmp    BYTE PTR [rbx],0x0
  440456:	mov    QWORD PTR [rsp+0x120],rax
  44045e:	lea    rdx,[rdi+0x1]
  440462:	mov    BYTE PTR [rax+rdi*1],bpl
  440466:	jne    0x440400
  440468:	mov    edi,r15d
  44046b:	mov    rbx,QWORD PTR [rsp+0x60]
  440470:	mov    r15d,ebp
  440473:	mov    rbp,rdx
  440476:	jmp    0x43f8ee
  44047b:	mov    rcx,QWORD PTR [rsp+0x1c0]
  440483:	mov    edx,edi
  440485:	call   0x43dd50
  44048a:	mov    QWORD PTR [rsp+0x78],rax
  44048f:	jmp    0x43f5ce
  440494:	mov    rcx,QWORD PTR [rsp+0x1c0]
  44049c:	mov    edx,edi
  44049e:	call   0x43dd50
  4404a3:	mov    QWORD PTR [rsp+0x80],rax
  4404ab:	jmp    0x43f601
  4404b0:	mov    rcx,QWORD PTR [rsp+0x1c0]
  4404b8:	mov    edx,edi
  4404ba:	call   0x43dd50
  4404bf:	mov    rdi,rax
  4404c2:	jmp    0x43f569
  4404c7:	lea    r13,[rsp+0x118]
  4404cf:	mov    r8,QWORD PTR [rsp+0x120]
  4404d7:	xor    ecx,ecx
  4404d9:	mov    rdx,r13
  4404dc:	call   0x43dc30
  4404e1:	test   esi,esi
  4404e3:	mov    QWORD PTR [rsp+0x120],rax
  4404eb:	mov    BYTE PTR [rax],r15b
  4404ee:	je     0x43e360
  4404f4:	mov    eax,0x1
  4404f9:	mov    QWORD PTR [rsp+0xa0],rbx
  440501:	lea    rbp,[rip+0x19ec3]        # 0x45a3cb
  440508:	mov    r15d,edi
  44050b:	mov    rbx,rax
  44050e:	jmp    0x44051b
  440510:	test   esi,esi
  440512:	je     0x43e360
  440518:	mov    rbx,r9
  44051b:	mov    rdx,r12
  44051e:	mov    rcx,r14
  440521:	call   0x43ddb0
  440526:	cmp    eax,0xffffffff
  440529:	mov    edi,eax
  44052b:	je     0x43e360
  440531:	mov    ecx,eax
  440533:	call   0x449370
  440538:	movsx  edx,BYTE PTR [rbp+0x0]
  44053c:	cmp    eax,edx
  44053e:	jne    0x43e360
  440544:	mov    r8,QWORD PTR [rsp+0x120]
  44054c:	xor    eax,eax
  44054e:	test   esi,esi
  440550:	setg   al
  440553:	mov    rdx,r13
  440556:	mov    rcx,rbx
  440559:	add    rbp,0x1
  44055d:	sub    esi,eax
  44055f:	call   0x43dc30
  440564:	cmp    BYTE PTR [rbp+0x0],0x0
  440568:	mov    QWORD PTR [rsp+0x120],rax
  440570:	lea    r9,[rbx+0x1]
  440574:	mov    BYTE PTR [rax+rbx*1],dil
  440578:	jne    0x440510
  44057a:	mov    eax,r15d
  44057d:	test   esi,esi
  44057f:	mov    r15d,edi
  440582:	mov    QWORD PTR [rsp+0x60],rbx
  440587:	mov    edi,eax
  440589:	mov    rbx,QWORD PTR [rsp+0xa0]
  440591:	mov    rbp,r9
  440594:	je     0x43f8ee
  44059a:	mov    rdx,r12
  44059d:	mov    rcx,r14
  4405a0:	mov    QWORD PTR [rsp+0xa0],r9
  4405a8:	call   0x43ddb0
  4405ad:	cmp    eax,0xffffffff
  4405b0:	mov    r15d,eax
  4405b3:	je     0x43f8ee
  4405b9:	mov    ecx,eax
  4405bb:	call   0x449370
  4405c0:	cmp    eax,0x69
  4405c3:	mov    r9,QWORD PTR [rsp+0xa0]
  4405cb:	je     0x440b89
  4405d1:	xor    r9d,r9d
  4405d4:	mov    r8,r12
  4405d7:	mov    rdx,r14
  4405da:	mov    ecx,r15d
  4405dd:	call   0x43de50
  4405e2:	jmp    0x43f8ee
  4405e7:	nop    WORD PTR [rax+rax*1+0x0]
  4405f0:	test   DWORD PTR [rsp+0x30],0x400
  4405f8:	mov    r8,QWORD PTR [rsp+0x28]
  4405fd:	jne    0x440860
  440603:	mov    rax,QWORD PTR [r8]
  440606:	mov    rsi,QWORD PTR [rsp+0x58]
  44060b:	xor    r8d,r8d
  44060e:	mov    ecx,DWORD PTR [rsp+0x4c]
  440612:	mov    BYTE PTR [rax+rsi*1-0x1],0x0
  440617:	add    ecx,0x1
  44061a:	lea    rdx,[rsp+0x108]
  440622:	lea    r9,[rsp+0x120]
  44062a:	call   0x43dcc0
  44062f:	jmp    0x43e37f
  440634:	test   edi,edi
  440636:	jne    0x4408ed
  44063c:	mov    rax,QWORD PTR [rsp+0x50]
  440641:	mov    rdi,QWORD PTR [rax]
  440644:	add    rax,0x8
  440648:	mov    QWORD PTR [rsp+0x50],rax
  44064d:	mov    QWORD PTR [rsp+0x78],rdi
  440652:	cmp    QWORD PTR [rsp+0x78],0x0
  440658:	jne    0x43e595
  44065e:	jmp    0x43e360
  440663:	mov    ecx,eax
  440665:	call   0x449370
  44066a:	cmp    eax,0x6e
  44066d:	je     0x440a79
  440673:	cmp    eax,0x69
  440676:	jne    0x43e705
  44067c:	lea    r13,[rsp+0x118]
  440684:	mov    r8,QWORD PTR [rsp+0x120]
  44068c:	xor    ecx,ecx
  44068e:	mov    rdx,r13
  440691:	call   0x43dc30
  440696:	mov    QWORD PTR [rsp+0x120],rax
  44069e:	mov    BYTE PTR [rax],r15b
  4406a1:	jmp    0x4404f4
  4406a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4406b0:	test   edi,edi
  4406b2:	jne    0x440886
  4406b8:	mov    rax,QWORD PTR [rsp+0x50]
  4406bd:	mov    rdi,QWORD PTR [rax]
  4406c0:	add    rax,0x8
  4406c4:	mov    QWORD PTR [rsp+0x50],rax
  4406c9:	mov    QWORD PTR [rsp+0x80],rdi
  4406d1:	cmp    QWORD PTR [rsp+0x80],0x0
  4406da:	jne    0x43e595
  4406e0:	jmp    0x43e360
  4406e5:	mov    rcx,QWORD PTR [rsp+0x1c0]
  4406ed:	mov    edx,edi
  4406ef:	call   0x43dd50
  4406f4:	mov    QWORD PTR [rsp+0x28],rax
  4406f9:	jmp    0x43f339
  4406fe:	mov    rcx,QWORD PTR [rsp+0x1c0]
  440706:	mov    edx,edi
  440708:	call   0x43dd50
  44070d:	mov    QWORD PTR [rsp+0x28],rax
  440712:	jmp    0x43ec77
  440717:	mov    rcx,QWORD PTR [rsp+0x1c0]
  44071f:	mov    edx,edi
  440721:	call   0x43dd50
  440726:	mov    QWORD PTR [rsp+0x78],rax
  44072b:	jmp    0x43f59e
  440730:	mov    rcx,QWORD PTR [rsp+0x1c0]
  440738:	mov    edx,edi
  44073a:	call   0x43dd50
  44073f:	mov    QWORD PTR [rsp+0x28],rax
  440744:	jmp    0x43ef2b
  440749:	mov    rcx,QWORD PTR [rsp+0x1c0]
  440751:	mov    edx,edi
  440753:	call   0x43dd50
  440758:	mov    QWORD PTR [rsp+0x28],rax
  44075d:	jmp    0x43f1e0
  440762:	mov    rcx,QWORD PTR [rsp+0x1c0]
  44076a:	mov    edx,edi
  44076c:	call   0x43dd50
  440771:	jmp    0x43e4ca
  440776:	mov    rcx,QWORD PTR [rsp+0x1c0]
  44077e:	mov    edx,edi
  440780:	call   0x43dd50
  440785:	jmp    0x43eb8d
  44078a:	mov    edx,r15d
  44078d:	mov    r15d,eax
  440790:	jmp    0x43f072
  440795:	mov    rcx,QWORD PTR [rsp+0x1c0]
  44079d:	mov    edx,edi
  44079f:	call   0x43dd50
  4407a4:	jmp    0x44032a
  4407a9:	test   BYTE PTR [rsp+0x30],0x1
  4407ae:	je     0x440311
  4407b4:	test   edi,edi
  4407b6:	jne    0x440ccd
  4407bc:	mov    rsi,QWORD PTR [rsp+0x50]
  4407c1:	mov    rax,QWORD PTR [rsi]
  4407c4:	add    rsi,0x8
  4407c8:	mov    QWORD PTR [rsp+0x50],rsi
  4407cd:	movzx  esi,BYTE PTR [rsp+0xb8]
  4407d5:	mov    BYTE PTR [rax],sil
  4407d8:	jmp    0x43eb98
  4407dd:	test   BYTE PTR [rsp+0x30],0x1
  4407e2:	je     0x440361
  4407e8:	test   edi,edi
  4407ea:	jne    0x440b54
  4407f0:	mov    rsi,QWORD PTR [rsp+0x50]
  4407f5:	mov    rax,QWORD PTR [rsi]
  4407f8:	add    rsi,0x8
  4407fc:	mov    QWORD PTR [rsp+0x50],rsi
  440801:	mov    rdx,QWORD PTR [rsp+0x110]
  440809:	xor    r13d,r13d
  44080c:	mov    BYTE PTR [rax],dl
  44080e:	jmp    0x43e03a
  440813:	mov    r13,QWORD PTR [rsp+0x70]
  440818:	jmp    0x43e82f
  44081d:	test   DWORD PTR [rsp+0x30],0x400
  440825:	jne    0x4402ff
  44082b:	mov    rax,QWORD PTR [rsp+0x28]
  440830:	mov    rsi,QWORD PTR [rsp+0x60]
  440835:	xor    r8d,r8d
  440838:	mov    ecx,DWORD PTR [rsp+0x4c]
  44083c:	mov    QWORD PTR [rsp+0x28],0x0
  440845:	mov    rax,QWORD PTR [rax]
  440848:	add    ecx,0x1
  44084b:	mov    WORD PTR [rax+rsi*1-0x2],r8w
  440851:	jmp    0x43fe86
  440856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  440860:	mov    ecx,0xffffffff
  440865:	jmp    0x44061a
  44086a:	fstp   TBYTE PTR [rsp+0x30]
  44086e:	mov    rcx,QWORD PTR [rsp+0x1c0]
  440876:	mov    edx,edi
  440878:	call   0x43dd50
  44087d:	fld    TBYTE PTR [rsp+0x30]
  440881:	jmp    0x43f981
  440886:	mov    rcx,QWORD PTR [rsp+0x1c0]
  44088e:	mov    edx,edi
  440890:	call   0x43dd50
  440895:	mov    QWORD PTR [rsp+0x80],rax
  44089d:	jmp    0x4406d1
  4408a2:	mov    rcx,QWORD PTR [rsp+0x1c0]
  4408aa:	mov    edx,edi
  4408ac:	call   0x43dd50
  4408b1:	jmp    0x4400d4
  4408b6:	mov    rcx,QWORD PTR [rsp+0x1c0]
  4408be:	mov    edx,edi
  4408c0:	call   0x43dd50
  4408c5:	jmp    0x44037a
  4408ca:	mov    r9d,0x1
  4408d0:	mov    r8,r12
  4408d3:	mov    rdx,r14
  4408d6:	mov    ecx,r15d
  4408d9:	mov    QWORD PTR [rsp+0x78],rbx
  4408de:	mov    rbx,QWORD PTR [rsp+0x60]
  4408e3:	call   0x43de50
  4408e8:	jmp    0x43fd7f
  4408ed:	mov    rcx,QWORD PTR [rsp+0x1c0]
  4408f5:	mov    edx,edi
  4408f7:	call   0x43dd50
  4408fc:	mov    QWORD PTR [rsp+0x78],rax
  440901:	jmp    0x440652
  440906:	mov    rcx,QWORD PTR [rsp+0x1c0]
  44090e:	mov    edx,edi
  440910:	call   0x43dd50
  440915:	jmp    0x440275
  44091a:	mov    rcx,QWORD PTR [rsp+0x1c0]
  440922:	mov    edx,edi
  440924:	call   0x43dd50
  440929:	mov    rdx,QWORD PTR [rsp+0x50]
  44092e:	jmp    0x440069
  440933:	mov    rbx,QWORD PTR [rsp+0x58]
  440938:	mov    rdi,r8
  44093b:	add    rbx,0x1
  44093f:	jmp    0x440955
  440941:	cmp    rdi,rbx
  440944:	jbe    0x440ce1
  44094a:	mov    rax,QWORD PTR [rsp+0x28]
  44094f:	mov    rdi,rbx
  440952:	mov    rcx,QWORD PTR [rax]
  440955:	lea    rdx,[rdi+rdi*1]
  440959:	mov    QWORD PTR [rsp+0x58],r8
  44095e:	call   0x449420
  440963:	test   rax,rax
  440966:	mov    r8,QWORD PTR [rsp+0x58]
  44096b:	je     0x440941
  44096d:	mov    rbx,QWORD PTR [rsp+0x28]
  440972:	mov    QWORD PTR [rsp+0x58],rdi
  440977:	mov    QWORD PTR [rbx],rax
  44097a:	lea    rbx,[rax+r8*1]
  44097e:	jmp    0x43fd4d
  440983:	mov    ecx,eax
  440985:	call   0x449370
  44098a:	cmp    eax,0x78
  44098d:	je     0x440aa3
  440993:	mov    ebp,0x1
  440998:	jmp    0x43e717
  44099d:	mov    rax,QWORD PTR [rsp+0x40]
  4409a2:	xor    edx,edx
  4409a4:	jmp    0x43e88f
  4409a9:	mov    rax,QWORD PTR [rsp+0x40]
  4409ae:	jmp    0x43f06f
  4409b3:	test   DWORD PTR [rsp+0x48],0xffffffef
  4409bb:	je     0x4409f1
  4409bd:	cmp    r15d,0xffffffff
  4409c1:	mov    QWORD PTR [rsp+0xa0],r13
  4409c9:	setne  dl
  4409cc:	test   esi,esi
  4409ce:	setne  al
  4409d1:	and    eax,edx
  4409d3:	jmp    0x43ea16
  4409d8:	mov    rcx,QWORD PTR [rsp+0x1c0]
  4409e0:	mov    edx,edi
  4409e2:	call   0x43dd50
  4409e7:	mov    QWORD PTR [rsp+0x28],rax
  4409ec:	jmp    0x43f499
  4409f1:	xor    eax,eax
  4409f3:	test   esi,esi
  4409f5:	mov    rdx,r12
  4409f8:	setg   al
  4409fb:	mov    rcx,r14
  4409fe:	sub    esi,eax
  440a00:	call   0x43ddb0
  440a05:	cmp    eax,0xffffffff
  440a08:	mov    r15d,eax
  440a0b:	mov    QWORD PTR [rsp+0xa0],r13
  440a13:	setne  dl
  440a16:	test   esi,esi
  440a18:	mov    DWORD PTR [rsp+0x48],0x10
  440a20:	setne  al
  440a23:	and    eax,edx
  440a25:	jmp    0x43ea16
  440a2a:	mov    rcx,QWORD PTR [rsp+0x1c0]
  440a32:	mov    edx,edi
  440a34:	call   0x43dd50
  440a39:	mov    QWORD PTR [rsp+0x28],rax
  440a3e:	jmp    0x43e523
  440a43:	lea    r13,[rsp+0x118]
  440a4b:	mov    r8,QWORD PTR [rsp+0x120]
  440a53:	xor    ecx,ecx
  440a55:	mov    rdx,r13
  440a58:	call   0x43dc30
  440a5d:	mov    QWORD PTR [rsp+0xa0],0x1
  440a69:	mov    QWORD PTR [rsp+0x120],rax
  440a71:	mov    BYTE PTR [rax],0x30
  440a74:	jmp    0x43eae7
  440a79:	lea    r13,[rsp+0x118]
  440a81:	mov    r8,QWORD PTR [rsp+0x120]
  440a89:	xor    ecx,ecx
  440a8b:	mov    rdx,r13
  440a8e:	call   0x43dc30
  440a93:	mov    QWORD PTR [rsp+0x120],rax
  440a9b:	mov    BYTE PTR [rax],r15b
  440a9e:	jmp    0x4403de
  440aa3:	mov    r8,QWORD PTR [rsp+0x120]
  440aab:	mov    rdx,r13
  440aae:	mov    ecx,0x1
  440ab3:	mov    ebp,0x2
  440ab8:	call   0x43dc30
  440abd:	mov    QWORD PTR [rsp+0x120],rax
  440ac5:	mov    BYTE PTR [rax+0x1],r15b
  440ac9:	mov    rdx,r12
  440acc:	mov    eax,DWORD PTR [rsp+0x30]
  440ad0:	mov    rcx,r14
  440ad3:	and    ah,0xfe
  440ad6:	or     eax,0x40
  440ad9:	mov    DWORD PTR [rsp+0x30],eax
  440add:	call   0x43ddb0
  440ae2:	mov    BYTE PTR [rsp+0xb0],0x70
  440aea:	mov    r15d,eax
  440aed:	jmp    0x43e717
  440af2:	mov    ecx,eax
  440af4:	call   0x449370
  440af9:	cmp    eax,0x78
  440afc:	jne    0x440993
  440b02:	mov    r8,QWORD PTR [rsp+0x120]
  440b0a:	mov    rdx,r13
  440b0d:	mov    ecx,0x1
  440b12:	sub    esi,0x1
  440b15:	mov    ebp,0x2
  440b1a:	call   0x43dc30
  440b1f:	mov    QWORD PTR [rsp+0x120],rax
  440b27:	mov    BYTE PTR [rax+0x1],r15b
  440b2b:	mov    rdx,r12
  440b2e:	mov    eax,DWORD PTR [rsp+0x30]
  440b32:	mov    rcx,r14
  440b35:	and    ah,0xfe
  440b38:	or     eax,0x40
  440b3b:	mov    DWORD PTR [rsp+0x30],eax
  440b3f:	call   0x43ddb0
  440b44:	mov    BYTE PTR [rsp+0xb0],0x70
  440b4c:	mov    r15d,eax
  440b4f:	jmp    0x43e717
  440b54:	mov    rcx,QWORD PTR [rsp+0x1c0]
  440b5c:	mov    edx,edi
  440b5e:	call   0x43dd50
  440b63:	jmp    0x440801
  440b68:	mov    ecx,DWORD PTR [rsp+0x4c]
  440b6c:	lea    rdx,[rsp+0x108]
  440b74:	lea    r9,[rsp+0x120]
  440b7c:	xor    r8d,r8d
  440b7f:	call   0x43dcc0
  440b84:	jmp    0x43e37f
  440b89:	mov    r8,QWORD PTR [rsp+0x120]
  440b91:	xor    eax,eax
  440b93:	test   esi,esi
  440b95:	setg   al
  440b98:	mov    rcx,r9
  440b9b:	mov    rdx,r13
  440b9e:	sub    esi,eax
  440ba0:	call   0x43dc30
  440ba5:	mov    rcx,QWORD PTR [rsp+0x60]
  440baa:	mov    r9,QWORD PTR [rsp+0xa0]
  440bb2:	mov    QWORD PTR [rsp+0x120],rax
  440bba:	add    rcx,0x2
  440bbe:	test   esi,esi
  440bc0:	mov    BYTE PTR [rax+r9*1],r15b
  440bc4:	je     0x43e360
  440bca:	lea    rax,[rip+0x197fe]        # 0x45a3cf
  440bd1:	mov    r15d,edi
  440bd4:	mov    rbp,rbx
  440bd7:	mov    rdi,rcx
  440bda:	mov    QWORD PTR [rsp+0x60],rax
  440bdf:	jmp    0x440bec
  440be1:	test   esi,esi
  440be3:	je     0x43e360
  440be9:	mov    rdi,rdx
  440bec:	mov    rdx,r12
  440bef:	mov    rcx,r14
  440bf2:	call   0x43ddb0
  440bf7:	cmp    eax,0xffffffff
  440bfa:	mov    ebx,eax
  440bfc:	je     0x43e360
  440c02:	mov    ecx,eax
  440c04:	call   0x449370
  440c09:	mov    rcx,QWORD PTR [rsp+0x60]
  440c0e:	movsx  edx,BYTE PTR [rcx]
  440c11:	cmp    eax,edx
  440c13:	jne    0x43e360
  440c19:	mov    r8,QWORD PTR [rsp+0x120]
  440c21:	xor    eax,eax
  440c23:	test   esi,esi
  440c25:	setg   al
  440c28:	mov    rdx,r13
  440c2b:	mov    rcx,rdi
  440c2e:	sub    esi,eax
  440c30:	call   0x43dc30
  440c35:	add    QWORD PTR [rsp+0x60],0x1
  440c3b:	mov    QWORD PTR [rsp+0x120],rax
  440c43:	lea    rdx,[rdi+0x1]
  440c47:	mov    rcx,QWORD PTR [rsp+0x60]
  440c4c:	mov    BYTE PTR [rax+rdi*1],bl
  440c4f:	cmp    BYTE PTR [rcx],0x0
  440c52:	jne    0x440be1
  440c54:	mov    edi,r15d
  440c57:	mov    r15d,ebx
  440c5a:	mov    rbx,rbp
  440c5d:	mov    rbp,rdx
  440c60:	jmp    0x43f8ee
  440c65:	mov    r13,r15
  440c68:	mov    r15d,edi
  440c6b:	mov    rbx,QWORD PTR [rsp+0xb0]
  440c73:	mov    edi,DWORD PTR [rsp+0xc0]
  440c7a:	mov    QWORD PTR [rsp+0xa0],rbp
  440c82:	mov    ecx,r15d
  440c85:	jmp    0x43f79d
  440c8a:	mov    rcx,QWORD PTR [rsp+0x1c0]
  440c92:	mov    edx,edi
  440c94:	call   0x43dd50
  440c99:	jmp    0x4402c9
  440c9e:	test   DWORD PTR [rsp+0x30],0x400
  440ca6:	mov    ecx,0xffffffff
  440cab:	lea    rdx,[rsp+0x108]
  440cb3:	cmove  ecx,DWORD PTR [rsp+0x4c]
  440cb8:	lea    r9,[rsp+0x120]
  440cc0:	mov    r8,rax
  440cc3:	call   0x43dcc0
  440cc8:	jmp    0x43e37f
  440ccd:	mov    rcx,QWORD PTR [rsp+0x1c0]
  440cd5:	mov    edx,edi
  440cd7:	call   0x43dd50
  440cdc:	jmp    0x4407cd
  440ce1:	test   DWORD PTR [rsp+0x30],0x400
  440ce9:	mov    rdi,r8
  440cec:	mov    r8,QWORD PTR [rsp+0x28]
  440cf1:	jne    0x440860
  440cf7:	mov    rax,QWORD PTR [r8]
  440cfa:	mov    ecx,DWORD PTR [rsp+0x4c]
  440cfe:	xor    r12d,r12d
  440d01:	xor    r8d,r8d
  440d04:	mov    WORD PTR [rax+rdi*1-0x2],r12w
  440d0a:	add    ecx,0x1
  440d0d:	jmp    0x44061a
  440d12:	nop    DWORD PTR [rax+0x0]
  440d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  440d20:	push   rdi
  440d21:	mov    eax,0x1040
  440d26:	call   0x43d410
  440d2b:	sub    rsp,rax
  440d2e:	xor    eax,eax
  440d30:	lea    r9,[rsp+0x20]
  440d35:	mov    r11,rcx
  440d38:	mov    ecx,0x203
  440d3d:	mov    rdi,r9
  440d40:	rep stos QWORD PTR es:[rdi],rax
  440d43:	mov    rcx,r9
  440d46:	mov    QWORD PTR [rsp+0x20],r11
  440d4b:	call   0x43deb0
  440d50:	add    rsp,0x1040
  440d57:	pop    rdi
  440d58:	ret    
  440d59:	nop    DWORD PTR [rax+0x0]
  440d60:	push   rdi
  440d61:	mov    eax,0x1040
  440d66:	call   0x43d410
  440d6b:	sub    rsp,rax
  440d6e:	xor    eax,eax
  440d70:	lea    r9,[rsp+0x20]
  440d75:	mov    r11,rcx
  440d78:	mov    ecx,0x203
  440d7d:	mov    rdi,r9
  440d80:	rep stos QWORD PTR es:[rdi],rax
  440d83:	mov    rcx,r9
  440d86:	mov    QWORD PTR [rsp+0x20],r11
  440d8b:	mov    BYTE PTR [rsp+0x1028],0x1
  440d93:	call   0x43deb0
  440d98:	add    rsp,0x1040
  440d9f:	pop    rdi
  440da0:	ret    
  440da1:	nop
  440da2:	nop
  440da3:	nop
  440da4:	nop
  440da5:	nop
  440da6:	nop
  440da7:	nop
  440da8:	nop
  440da9:	nop
  440daa:	nop
  440dab:	nop
  440dac:	nop
  440dad:	nop
  440dae:	nop
  440daf:	nop
  440db0:	push   rsi
  440db1:	push   rbx
  440db2:	sub    rsp,0x38
  440db6:	mov    rbx,rcx
  440db9:	mov    rsi,rdx
  440dbc:	call   0x449608
  440dc1:	lea    rdx,[rax+0x30]
  440dc5:	mov    QWORD PTR [rsp+0x20],rsi
  440dca:	mov    r9,rbx
  440dcd:	xor    r8d,r8d
  440dd0:	mov    ecx,0x6000
  440dd5:	call   0x443110
  440dda:	add    rsp,0x38
  440dde:	pop    rbx
  440ddf:	pop    rsi
  440de0:	ret    
  440de1:	nop
  440de2:	nop
  440de3:	nop
  440de4:	nop
  440de5:	nop
  440de6:	nop
  440de7:	nop
  440de8:	nop
  440de9:	nop
  440dea:	nop
  440deb:	nop
  440dec:	nop
  440ded:	nop
  440dee:	nop
  440def:	nop
  440df0:	push   rsi
  440df1:	push   rbx
  440df2:	sub    rsp,0x38
  440df6:	test   rdx,rdx
  440df9:	mov    rsi,rcx
  440dfc:	je     0x440e30
  440dfe:	lea    rbx,[rdx-0x1]
  440e02:	mov    QWORD PTR [rsp+0x20],r9
  440e07:	mov    rdx,rcx
  440e0a:	mov    r9,r8
  440e0d:	xor    ecx,ecx
  440e0f:	mov    r8d,ebx
  440e12:	call   0x443110
  440e17:	cmp    eax,ebx
  440e19:	cmovle ebx,eax
  440e1c:	movsxd rbx,ebx
  440e1f:	mov    BYTE PTR [rsi+rbx*1],0x0
  440e23:	add    rsp,0x38
  440e27:	pop    rbx
  440e28:	pop    rsi
  440e29:	ret    
  440e2a:	nop    WORD PTR [rax+rax*1+0x0]
  440e30:	mov    QWORD PTR [rsp+0x20],r9
  440e35:	mov    rdx,rcx
  440e38:	mov    r9,r8
  440e3b:	xor    ecx,ecx
  440e3d:	xor    r8d,r8d
  440e40:	call   0x443110
  440e45:	add    rsp,0x38
  440e49:	pop    rbx
  440e4a:	pop    rsi
  440e4b:	ret    
  440e4c:	nop
  440e4d:	nop
  440e4e:	nop
  440e4f:	nop
  440e50:	push   rbx
  440e51:	sub    rsp,0x30
  440e55:	mov    rbx,rcx
  440e58:	mov    r9,rdx
  440e5b:	mov    QWORD PTR [rsp+0x20],r8
  440e60:	mov    rdx,rcx
  440e63:	xor    r8d,r8d
  440e66:	mov    ecx,0x4000
  440e6b:	call   0x443110
  440e70:	movsxd rdx,eax
  440e73:	mov    BYTE PTR [rbx+rdx*1],0x0
  440e77:	add    rsp,0x30
  440e7b:	pop    rbx
  440e7c:	ret    
  440e7d:	nop
  440e7e:	nop
  440e7f:	nop
  440e80:	push   r12
  440e82:	push   rbp
  440e83:	push   rdi
  440e84:	push   rsi
  440e85:	push   rbx
  440e86:	sub    rsp,0x20
  440e8a:	mov    r9,r8
  440e8d:	mov    r12,rcx
  440e90:	mov    rdi,rdx
  440e93:	xor    ecx,ecx
  440e95:	mov    rbp,r8
  440e98:	mov    r8,rdx
  440e9b:	xor    edx,edx
  440e9d:	call   0x440df0
  440ea2:	test   eax,eax
  440ea4:	mov    ebx,eax
  440ea6:	js     0x440ef0
  440ea8:	lea    esi,[rax+0x1]
  440eab:	movsxd rsi,esi
  440eae:	mov    rcx,rsi
  440eb1:	call   0x449468
  440eb6:	test   rax,rax
  440eb9:	mov    QWORD PTR [r12],rax
  440ebd:	je     0x440ef0
  440ebf:	mov    rdx,rsi
  440ec2:	mov    r9,rbp
  440ec5:	mov    r8,rdi
  440ec8:	mov    rcx,rax
  440ecb:	call   0x440df0
  440ed0:	mov    rdx,QWORD PTR [r12]
  440ed4:	movsxd rax,ebx
  440ed7:	mov    BYTE PTR [rdx+rax*1],0x0
  440edb:	mov    eax,ebx
  440edd:	add    rsp,0x20
  440ee1:	pop    rbx
  440ee2:	pop    rsi
  440ee3:	pop    rdi
  440ee4:	pop    rbp
  440ee5:	pop    r12
  440ee7:	ret    
  440ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  440ef0:	mov    eax,0xffffffff
  440ef5:	jmp    0x440edd
  440ef7:	nop
  440ef8:	nop
  440ef9:	nop
  440efa:	nop
  440efb:	nop
  440efc:	nop
  440efd:	nop
  440efe:	nop
  440eff:	nop
  440f00:	sub    rsp,0x58
  440f04:	lea    r8,[rip+0xa2e5]        # 0x44b1f0
  440f0b:	lea    rax,[rsp+0x40]
  440f10:	lea    r9,[rsp+0x4c]
  440f15:	mov    QWORD PTR [rsp+0x20],rax
  440f1a:	call   0x4463e0
  440f1f:	mov    edx,eax
  440f21:	and    edx,0x7
  440f24:	cmp    edx,0x5
  440f27:	ja     0x440fa0
  440f29:	lea    rcx,[rip+0x196a0]        # 0x45a5d0
  440f30:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  440f34:	add    rcx,rdx
  440f37:	jmp    rcx
  440f39:	nop    DWORD PTR [rax+0x0]
  440f40:	mov    edx,0x7f800000
  440f45:	mov    ecx,edx
  440f47:	or     ecx,0x80000000
  440f4d:	test   al,0x8
  440f4f:	cmovne edx,ecx
  440f52:	mov    DWORD PTR [rsp+0x3c],edx
  440f56:	movss  xmm0,DWORD PTR [rsp+0x3c]
  440f5c:	add    rsp,0x58
  440f60:	ret    
  440f61:	mov    edx,DWORD PTR [rsp+0x40]
  440f65:	jmp    0x440f45
  440f67:	nop    WORD PTR [rax+rax*1+0x0]
  440f70:	mov    ecx,DWORD PTR [rsp+0x4c]
  440f74:	lea    edx,[rcx+0x96]
  440f7a:	mov    ecx,DWORD PTR [rsp+0x40]
  440f7e:	shl    edx,0x17
  440f81:	and    ecx,0x7fffff
  440f87:	or     edx,ecx
  440f89:	jmp    0x440f45
  440f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  440f90:	mov    edx,0x7fc00000
  440f95:	jmp    0x440f45
  440f97:	nop    WORD PTR [rax+rax*1+0x0]
  440fa0:	xor    edx,edx
  440fa2:	jmp    0x440f45
  440fa4:	nop
  440fa5:	nop
  440fa6:	nop
  440fa7:	nop
  440fa8:	nop
  440fa9:	nop
  440faa:	nop
  440fab:	nop
  440fac:	nop
  440fad:	nop
  440fae:	nop
  440faf:	nop
  440fb0:	push   rbx
  440fb1:	sub    rsp,0x60
  440fb5:	lea    rax,[rsp+0x40]
  440fba:	fldz   
  440fbc:	mov    rbx,rcx
  440fbf:	lea    r9,[rsp+0x3c]
  440fc4:	mov    rcx,rdx
  440fc7:	mov    rdx,r8
  440fca:	lea    r8,[rip+0xa23f]        # 0x44b210
  440fd1:	mov    QWORD PTR [rsp+0x20],rax
  440fd6:	fstp   TBYTE PTR [rsp+0x50]
  440fda:	call   0x4463e0
  440fdf:	mov    edx,eax
  440fe1:	and    edx,0x7
  440fe4:	cmp    edx,0x6
  440fe7:	ja     0x441032
  440fe9:	lea    r8,[rip+0x19600]        # 0x45a5f0
  440ff0:	movsxd rdx,DWORD PTR [r8+rdx*4]
  440ff4:	add    r8,rdx
  440ff7:	jmp    r8
  440ffa:	nop    WORD PTR [rax+rax*1+0x0]
  441000:	movzx  ecx,WORD PTR [rsp+0x3c]
  441005:	lea    edx,[rcx+0x403e]
  44100b:	mov    WORD PTR [rsp+0x58],dx
  441010:	mov    edx,DWORD PTR [rsp+0x40]
  441014:	mov    WORD PTR [rsp+0x50],dx
  441019:	shr    edx,0x10
  44101c:	mov    WORD PTR [rsp+0x52],dx
  441021:	mov    edx,DWORD PTR [rsp+0x44]
  441025:	mov    WORD PTR [rsp+0x54],dx
  44102a:	shr    edx,0x10
  44102d:	mov    WORD PTR [rsp+0x56],dx
  441032:	test   al,0x8
  441034:	je     0x44103d
  441036:	or     WORD PTR [rsp+0x58],0x8000
  44103d:	fld    TBYTE PTR [rsp+0x50]
  441041:	mov    rax,rbx
  441044:	fstp   TBYTE PTR [rbx]
  441046:	add    rsp,0x60
  44104a:	pop    rbx
  44104b:	ret    
  44104c:	nop    DWORD PTR [rax+0x0]
  441050:	mov    r11d,0x7fff
  441056:	mov    edx,0xffff8000
  44105b:	xor    ecx,ecx
  44105d:	xor    r8d,r8d
  441060:	xor    r9d,r9d
  441063:	mov    WORD PTR [rsp+0x58],r11w
  441069:	mov    WORD PTR [rsp+0x56],dx
  44106e:	mov    WORD PTR [rsp+0x50],cx
  441073:	mov    WORD PTR [rsp+0x52],r8w
  441079:	mov    WORD PTR [rsp+0x54],r9w
  44107f:	jmp    0x441032
  441081:	xor    edx,edx
  441083:	xor    ecx,ecx
  441085:	xor    r8d,r8d
  441088:	mov    r9d,0xffffc000
  44108e:	mov    r10d,0x7fff
  441094:	mov    WORD PTR [rsp+0x50],dx
  441099:	mov    WORD PTR [rsp+0x52],cx
  44109e:	mov    WORD PTR [rsp+0x54],r8w
  4410a4:	mov    WORD PTR [rsp+0x56],r9w
  4410aa:	mov    WORD PTR [rsp+0x58],r10w
  4410b0:	jmp    0x441032
  4410b2:	xor    r11d,r11d
  4410b5:	xor    edx,edx
  4410b7:	xor    ecx,ecx
  4410b9:	xor    r8d,r8d
  4410bc:	xor    r9d,r9d
  4410bf:	mov    WORD PTR [rsp+0x58],r11w
  4410c5:	mov    WORD PTR [rsp+0x56],dx
  4410ca:	mov    WORD PTR [rsp+0x54],cx
  4410cf:	mov    WORD PTR [rsp+0x52],r8w
  4410d5:	mov    WORD PTR [rsp+0x50],r9w
  4410db:	jmp    0x441032
  4410e0:	xor    r10d,r10d
  4410e3:	mov    WORD PTR [rsp+0x58],r10w
  4410e9:	jmp    0x441010
  4410ee:	nop
  4410ef:	nop
  4410f0:	push   rbp
  4410f1:	push   rdi
  4410f2:	push   rsi
  4410f3:	push   rbx
  4410f4:	sub    rsp,0x48
  4410f8:	test   rdx,rdx
  4410fb:	je     0x441223
  441101:	test   r8,r8
  441104:	je     0x441230
  44110a:	mov    eax,DWORD PTR [r9]
  44110d:	mov    DWORD PTR [r9],0x0
  441114:	mov    DWORD PTR [rsp+0x30],eax
  441118:	movzx  eax,BYTE PTR [rdx]
  44111b:	test   al,al
  44111d:	je     0x4411c0
  441123:	cmp    DWORD PTR [rsp+0x98],0x1
  44112b:	mov    rsi,r9
  44112e:	mov    rdi,r8
  441131:	mov    rbx,rdx
  441134:	mov    rbp,rcx
  441137:	jbe    0x4411a0
  441139:	cmp    BYTE PTR [rsp+0x30],0x0
  44113e:	jne    0x4411d0
  441144:	movzx  edx,al
  441147:	mov    ecx,DWORD PTR [rsp+0x90]
  44114e:	call   QWORD PTR [rip+0x23520]        # 0x464674
  441154:	test   eax,eax
  441156:	je     0x4411a0
  441158:	cmp    rdi,0x1
  44115c:	jbe    0x44124c
  441162:	mov    DWORD PTR [rsp+0x28],0x1
  44116a:	mov    QWORD PTR [rsp+0x20],rbp
  44116f:	mov    r9d,0x2
  441175:	mov    r8,rbx
  441178:	mov    edx,0x8
  44117d:	mov    ecx,DWORD PTR [rsp+0x90]
  441184:	call   QWORD PTR [rip+0x234fa]        # 0x464684
  44118a:	test   eax,eax
  44118c:	je     0x441237
  441192:	mov    eax,0x2
  441197:	add    rsp,0x48
  44119b:	pop    rbx
  44119c:	pop    rsi
  44119d:	pop    rdi
  44119e:	pop    rbp
  44119f:	ret    
  4411a0:	mov    eax,DWORD PTR [rsp+0x90]
  4411a7:	test   eax,eax
  4411a9:	jne    0x4411f0
  4411ab:	movzx  eax,BYTE PTR [rbx]
  4411ae:	mov    WORD PTR [rbp+0x0],ax
  4411b2:	mov    eax,0x1
  4411b7:	add    rsp,0x48
  4411bb:	pop    rbx
  4411bc:	pop    rsi
  4411bd:	pop    rdi
  4411be:	pop    rbp
  4411bf:	ret    
  4411c0:	xor    edx,edx
  4411c2:	xor    eax,eax
  4411c4:	mov    WORD PTR [rcx],dx
  4411c7:	add    rsp,0x48
  4411cb:	pop    rbx
  4411cc:	pop    rsi
  4411cd:	pop    rdi
  4411ce:	pop    rbp
  4411cf:	ret    
  4411d0:	mov    BYTE PTR [rsp+0x31],al
  4411d4:	mov    DWORD PTR [rsp+0x28],0x1
  4411dc:	mov    r9d,0x2
  4411e2:	mov    QWORD PTR [rsp+0x20],rcx
  4411e7:	lea    r8,[rsp+0x30]
  4411ec:	jmp    0x441178
  4411ee:	xchg   ax,ax
  4411f0:	mov    DWORD PTR [rsp+0x28],0x1
  4411f8:	mov    QWORD PTR [rsp+0x20],rbp
  4411fd:	mov    r9d,0x1
  441203:	mov    r8,rbx
  441206:	mov    edx,0x8
  44120b:	mov    ecx,DWORD PTR [rsp+0x90]
  441212:	call   QWORD PTR [rip+0x2346c]        # 0x464684
  441218:	test   eax,eax
  44121a:	je     0x441237
  44121c:	mov    eax,0x1
  441221:	jmp    0x4411c7
  441223:	xor    eax,eax
  441225:	add    rsp,0x48
  441229:	pop    rbx
  44122a:	pop    rsi
  44122b:	pop    rdi
  44122c:	pop    rbp
  44122d:	ret    
  44122e:	xchg   ax,ax
  441230:	mov    eax,0xfffffffe
  441235:	jmp    0x4411c7
  441237:	call   0x4495c8
  44123c:	mov    DWORD PTR [rax],0x2a
  441242:	mov    eax,0xffffffff
  441247:	jmp    0x4411c7
  44124c:	movzx  eax,BYTE PTR [rbx]
  44124f:	mov    BYTE PTR [rsi],al
  441251:	mov    eax,0xfffffffe
  441256:	jmp    0x4411c7
  44125b:	nop    DWORD PTR [rax+rax*1+0x0]
  441260:	push   rbp
  441261:	push   rdi
  441262:	push   rsi
  441263:	push   rbx
  441264:	sub    rsp,0x58
  441268:	xor    eax,eax
  44126a:	mov    WORD PTR [rsp+0x4e],ax
  44126f:	lea    rax,[rsp+0x4e]
  441274:	test   rcx,rcx
  441277:	mov    rbx,rcx
  44127a:	mov    rsi,r9
  44127d:	mov    rdi,rdx
  441280:	cmove  rbx,rax
  441284:	mov    rax,QWORD PTR [rip+0x19a35]        # 0x45acc0
  44128b:	mov    QWORD PTR [rsp+0x38],r8
  441290:	mov    rax,QWORD PTR [rax]
  441293:	mov    ebp,DWORD PTR [rax]
  441295:	call   0x449620
  44129a:	mov    r8,QWORD PTR [rsp+0x38]
  44129f:	lea    r9,[rip+0x21ed2]        # 0x463178
  4412a6:	test   rsi,rsi
  4412a9:	mov    DWORD PTR [rsp+0x28],ebp
  4412ad:	mov    DWORD PTR [rsp+0x20],eax
  4412b1:	mov    rdx,rdi
  4412b4:	cmovne r9,rsi
  4412b8:	mov    rcx,rbx
  4412bb:	call   0x4410f0
  4412c0:	cdqe   
  4412c2:	add    rsp,0x58
  4412c6:	pop    rbx
  4412c7:	pop    rsi
  4412c8:	pop    rdi
  4412c9:	pop    rbp
  4412ca:	ret    
  4412cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4412d0:	push   r15
  4412d2:	push   r14
  4412d4:	push   r13
  4412d6:	push   r12
  4412d8:	push   rbp
  4412d9:	push   rdi
  4412da:	push   rsi
  4412db:	push   rbx
  4412dc:	sub    rsp,0x48
  4412e0:	lea    rax,[rip+0x21e8d]        # 0x463174
  4412e7:	test   r9,r9
  4412ea:	mov    rdi,r9
  4412ed:	mov    r13,rdx
  4412f0:	cmove  rdi,rax
  4412f4:	mov    r14,rcx
  4412f7:	mov    rsi,r8
  4412fa:	call   0x449620
  4412ff:	mov    r12d,eax
  441302:	mov    rax,QWORD PTR [rip+0x199b7]        # 0x45acc0
  441309:	test   r13,r13
  44130c:	mov    rax,QWORD PTR [rax]
  44130f:	mov    ebp,DWORD PTR [rax]
  441311:	je     0x441395
  441317:	mov    rdx,QWORD PTR [r13+0x0]
  44131b:	test   rdx,rdx
  44131e:	je     0x441395
  441320:	test   r14,r14
  441323:	je     0x4413a0
  441325:	xor    ebx,ebx
  441327:	test   rsi,rsi
  44132a:	jne    0x44134a
  44132c:	jmp    0x441395
  44132e:	xchg   ax,ax
  441330:	movsxd r10,eax
  441333:	add    r14,0x2
  441337:	mov    rdx,r10
  44133a:	add    rdx,QWORD PTR [r13+0x0]
  44133e:	add    rbx,r10
  441341:	cmp    rsi,rbx
  441344:	mov    QWORD PTR [r13+0x0],rdx
  441348:	jbe    0x441390
  44134a:	mov    r8,rsi
  44134d:	mov    DWORD PTR [rsp+0x28],ebp
  441351:	mov    DWORD PTR [rsp+0x20],r12d
  441356:	sub    r8,rbx
  441359:	mov    r9,rdi
  44135c:	mov    rcx,r14
  44135f:	call   0x4410f0
  441364:	cmp    eax,0x0
  441367:	jg     0x441330
  441369:	jne    0x441390
  44136b:	cmp    rbx,rsi
  44136e:	jae    0x441390
  441370:	mov    QWORD PTR [r13+0x0],0x0
  441378:	mov    rax,rbx
  44137b:	add    rsp,0x48
  44137f:	pop    rbx
  441380:	pop    rsi
  441381:	pop    rdi
  441382:	pop    rbp
  441383:	pop    r12
  441385:	pop    r13
  441387:	pop    r14
  441389:	pop    r15
  44138b:	ret    
  44138c:	xor    ebx,ebx
  44138e:	xchg   ax,ax
  441390:	mov    rax,rbx
  441393:	jmp    0x44137b
  441395:	xor    eax,eax
  441397:	jmp    0x44137b
  441399:	nop    DWORD PTR [rax+0x0]
  4413a0:	xor    eax,eax
  4413a2:	test   rsi,rsi
  4413a5:	mov    WORD PTR [rsp+0x3e],ax
  4413aa:	je     0x44138c
  4413ac:	mov    r15d,ebp
  4413af:	xor    ebx,ebx
  4413b1:	lea    r14,[rsp+0x3e]
  4413b6:	jmp    0x4413d5
  4413b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4413c0:	cdqe   
  4413c2:	mov    rdx,rax
  4413c5:	add    rdx,QWORD PTR [r13+0x0]
  4413c9:	add    rbx,rax
  4413cc:	cmp    rsi,rbx
  4413cf:	mov    QWORD PTR [r13+0x0],rdx
  4413d3:	jbe    0x441390
  4413d5:	mov    DWORD PTR [rsp+0x28],ebp
  4413d9:	mov    DWORD PTR [rsp+0x20],r12d
  4413de:	mov    r9,rdi
  4413e1:	mov    r8,r15
  4413e4:	mov    rcx,r14
  4413e7:	call   0x4410f0
  4413ec:	test   eax,eax
  4413ee:	jg     0x4413c0
  4413f0:	jmp    0x441390
  4413f2:	nop    DWORD PTR [rax+0x0]
  4413f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  441400:	push   rbp
  441401:	push   rdi
  441402:	push   rsi
  441403:	push   rbx
  441404:	sub    rsp,0x48
  441408:	xor    eax,eax
  44140a:	mov    WORD PTR [rsp+0x3e],ax
  44140f:	mov    rax,QWORD PTR [rip+0x198aa]        # 0x45acc0
  441416:	mov    rbx,r8
  441419:	mov    rsi,rcx
  44141c:	mov    rdi,rdx
  44141f:	mov    rax,QWORD PTR [rax]
  441422:	mov    ebp,DWORD PTR [rax]
  441424:	call   0x449620
  441429:	lea    r9,[rip+0x21d40]        # 0x463170
  441430:	test   rbx,rbx
  441433:	lea    rcx,[rsp+0x3e]
  441438:	mov    DWORD PTR [rsp+0x28],ebp
  44143c:	mov    DWORD PTR [rsp+0x20],eax
  441440:	mov    r8,rdi
  441443:	cmovne r9,rbx
  441447:	mov    rdx,rsi
  44144a:	call   0x4410f0
  44144f:	cdqe   
  441451:	add    rsp,0x48
  441455:	pop    rbx
  441456:	pop    rsi
  441457:	pop    rdi
  441458:	pop    rbp
  441459:	ret    
  44145a:	nop
  44145b:	nop
  44145c:	nop
  44145d:	nop
  44145e:	nop
  44145f:	nop
  441460:	push   r15
  441462:	push   r14
  441464:	push   r13
  441466:	push   r12
  441468:	push   rbp
  441469:	push   rdi
  44146a:	push   rsi
  44146b:	push   rbx
  44146c:	sub    rsp,0x28
  441470:	test   rdx,rdx
  441473:	mov    rsi,rcx
  441476:	mov    r12,rdx
  441479:	mov    edi,r8d
  44147c:	je     0x441482
  44147e:	mov    QWORD PTR [r12],rcx
  441482:	cmp    edi,0x24
  441485:	ja     0x441563
  44148b:	cmp    edi,0x1
  44148e:	jne    0x441499
  441490:	jmp    0x441563
  441495:	add    rsi,0x1
  441499:	movsx  ecx,BYTE PTR [rsi]
  44149c:	mov    ebx,ecx
  44149e:	call   0x449488
  4414a3:	test   eax,eax
  4414a5:	jne    0x441495
  4414a7:	lea    edx,[rbx-0x2b]
  4414aa:	mov    rcx,rsi
  4414ad:	mov    eax,ebx
  4414af:	and    edx,0xfd
  4414b5:	jne    0x4414bf
  4414b7:	movzx  eax,BYTE PTR [rcx+0x1]
  4414bb:	add    rsi,0x1
  4414bf:	test   edi,edi
  4414c1:	jne    0x441601
  4414c7:	cmp    al,0x30
  4414c9:	mov    dil,0xa
  4414cc:	je     0x441652
  4414d2:	movsx  r15d,al
  4414d6:	lea    edx,[r15-0x30]
  4414da:	cmp    edx,0x9
  4414dd:	ja     0x4415d0
  4414e3:	movsx  ecx,al
  4414e6:	sub    ecx,0x30
  4414e9:	cmp    edi,ecx
  4414eb:	jle    0x441680
  4414f1:	mov    eax,ecx
  4414f3:	shr    eax,0x1f
  4414f6:	test   al,al
  4414f8:	jne    0x441680
  4414fe:	lea    r14,[rsi+0x1]
  441502:	movsxd r15,ecx
  441505:	xor    r13d,r13d
  441508:	movsxd rsi,edi
  44150b:	nop    DWORD PTR [rax+rax*1+0x0]
  441510:	movsx  ebp,BYTE PTR [r14]
  441514:	lea    r9d,[rbp-0x30]
  441518:	cmp    r9d,0x9
  44151c:	mov    ecx,r9d
  44151f:	jbe    0x441584
  441521:	mov    ecx,ebp
  441523:	call   0x449480
  441528:	test   eax,eax
  44152a:	lea    ecx,[rbp-0x37]
  44152d:	jne    0x441584
  44152f:	mov    ecx,ebp
  441531:	call   0x449490
  441536:	test   eax,eax
  441538:	jne    0x441581
  44153a:	test   r12,r12
  44153d:	je     0x441543
  44153f:	mov    QWORD PTR [r12],r14
  441543:	cmp    bl,0x2d
  441546:	je     0x441630
  44154c:	test   r15,r15
  44154f:	js     0x4416a0
  441555:	test   r13d,r13d
  441558:	jne    0x4416a0
  44155e:	mov    rax,r15
  441561:	jmp    0x441570
  441563:	call   0x4495c8
  441568:	mov    DWORD PTR [rax],0x21
  44156e:	xor    eax,eax
  441570:	add    rsp,0x28
  441574:	pop    rbx
  441575:	pop    rsi
  441576:	pop    rdi
  441577:	pop    rbp
  441578:	pop    r12
  44157a:	pop    r13
  44157c:	pop    r14
  44157e:	pop    r15
  441580:	ret    
  441581:	lea    ecx,[rbp-0x57]
  441584:	cmp    edi,ecx
  441586:	jle    0x44153a
  441588:	test   ecx,ecx
  44158a:	js     0x44153a
  44158c:	movabs rax,0x7fffffffffffffff
  441596:	cqo    
  441598:	idiv   rsi
  44159b:	add    rax,0x2
  44159f:	cmp    r15,rax
  4415a2:	ja     0x4415c0
  4415a4:	imul   r15,rsi
  4415a8:	movsxd rcx,ecx
  4415ab:	add    r15,rcx
  4415ae:	add    r14,0x1
  4415b2:	jmp    0x441510
  4415b7:	nop    WORD PTR [rax+rax*1+0x0]
  4415c0:	mov    r13d,0x1
  4415c6:	jmp    0x4415ae
  4415c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4415d0:	mov    ecx,r15d
  4415d3:	call   0x449480
  4415d8:	test   eax,eax
  4415da:	lea    ecx,[r15-0x37]
  4415de:	jne    0x4414e9
  4415e4:	mov    ecx,r15d
  4415e7:	call   0x449490
  4415ec:	mov    edx,eax
  4415ee:	xor    eax,eax
  4415f0:	test   edx,edx
  4415f2:	je     0x441570
  4415f8:	lea    ecx,[r15-0x57]
  4415fc:	jmp    0x4414e9
  441601:	cmp    edi,0x10
  441604:	jne    0x4414d2
  44160a:	cmp    al,0x30
  44160c:	jne    0x4414d2
  441612:	movzx  eax,BYTE PTR [rsi+0x1]
  441616:	and    eax,0xffffffdf
  441619:	cmp    al,0x58
  44161b:	je     0x441665
  44161d:	mov    eax,0x30
  441622:	jmp    0x4414e3
  441627:	nop    WORD PTR [rax+rax*1+0x0]
  441630:	movabs rbx,0x8000000000000000
  44163a:	cmp    r15,rbx
  44163d:	jbe    0x441690
  44163f:	call   0x4495c8
  441644:	mov    DWORD PTR [rax],0x22
  44164a:	mov    rax,rbx
  44164d:	jmp    0x441570
  441652:	movzx  edx,BYTE PTR [rsi+0x1]
  441656:	mov    dil,0x8
  441659:	and    edx,0xffffffdf
  44165c:	cmp    dl,0x58
  44165f:	jne    0x4414d2
  441665:	movzx  eax,BYTE PTR [rsi+0x2]
  441669:	mov    edi,0x10
  44166e:	add    rsi,0x2
  441672:	jmp    0x4414d2
  441677:	nop    WORD PTR [rax+rax*1+0x0]
  441680:	xor    eax,eax
  441682:	jmp    0x441570
  441687:	nop    WORD PTR [rax+rax*1+0x0]
  441690:	test   r13d,r13d
  441693:	jne    0x44163f
  441695:	mov    rax,r15
  441698:	neg    rax
  44169b:	jmp    0x441570
  4416a0:	call   0x4495c8
  4416a5:	mov    DWORD PTR [rax],0x22
  4416ab:	movabs rax,0x7fffffffffffffff
  4416b5:	jmp    0x441570
  4416ba:	nop
  4416bb:	nop
  4416bc:	nop
  4416bd:	nop
  4416be:	nop
  4416bf:	nop
  4416c0:	push   r15
  4416c2:	push   r14
  4416c4:	push   r13
  4416c6:	push   r12
  4416c8:	push   rbp
  4416c9:	push   rdi
  4416ca:	push   rsi
  4416cb:	push   rbx
  4416cc:	sub    rsp,0x28
  4416d0:	test   rdx,rdx
  4416d3:	mov    rsi,rcx
  4416d6:	mov    r12,rdx
  4416d9:	mov    edi,r8d
  4416dc:	je     0x4416e2
  4416de:	mov    QWORD PTR [r12],rcx
  4416e2:	cmp    edi,0x24
  4416e5:	ja     0x4417c3
  4416eb:	cmp    edi,0x1
  4416ee:	jne    0x4416f9
  4416f0:	jmp    0x4417c3
  4416f5:	add    rsi,0x1
  4416f9:	movsx  ecx,BYTE PTR [rsi]
  4416fc:	mov    ebx,ecx
  4416fe:	call   0x449488
  441703:	test   eax,eax
  441705:	jne    0x4416f5
  441707:	lea    edx,[rbx-0x2b]
  44170a:	mov    rcx,rsi
  44170d:	mov    eax,ebx
  44170f:	and    edx,0xfd
  441715:	jne    0x44171f
  441717:	movzx  eax,BYTE PTR [rcx+0x1]
  44171b:	add    rsi,0x1
  44171f:	test   edi,edi
  441721:	jne    0x441855
  441727:	cmp    al,0x30
  441729:	mov    dil,0xa
  44172c:	je     0x4418b0
  441732:	movsx  r15d,al
  441736:	lea    edx,[r15-0x30]
  44173a:	cmp    edx,0x9
  44173d:	ja     0x441830
  441743:	movsx  r15d,al
  441747:	sub    r15d,0x30
  44174b:	cmp    edi,r15d
  44174e:	jle    0x4418d5
  441754:	mov    eax,r15d
  441757:	shr    eax,0x1f
  44175a:	test   al,al
  44175c:	jne    0x4418d5
  441762:	lea    r14,[rsi+0x1]
  441766:	movsxd r15,r15d
  441769:	xor    r13d,r13d
  44176c:	movsxd rsi,edi
  44176f:	nop
  441770:	movsx  ebp,BYTE PTR [r14]
  441774:	lea    r9d,[rbp-0x30]
  441778:	cmp    r9d,0x9
  44177c:	mov    ecx,r9d
  44177f:	jbe    0x4417e4
  441781:	mov    ecx,ebp
  441783:	call   0x449480
  441788:	test   eax,eax
  44178a:	lea    ecx,[rbp-0x37]
  44178d:	jne    0x4417e4
  44178f:	mov    ecx,ebp
  441791:	call   0x449490
  441796:	test   eax,eax
  441798:	jne    0x4417e1
  44179a:	test   r12,r12
  44179d:	je     0x4417a3
  44179f:	mov    QWORD PTR [r12],r14
  4417a3:	test   r13d,r13d
  4417a6:	jne    0x441880
  4417ac:	xor    edx,edx
  4417ae:	cmp    bl,0x2d
  4417b1:	sete   dl
  4417b4:	mov    rax,rdx
  4417b7:	neg    rax
  4417ba:	xor    r15,rax
  4417bd:	lea    rax,[r15+rdx*1]
  4417c1:	jmp    0x4417d0
  4417c3:	call   0x4495c8
  4417c8:	mov    DWORD PTR [rax],0x21
  4417ce:	xor    eax,eax
  4417d0:	add    rsp,0x28
  4417d4:	pop    rbx
  4417d5:	pop    rsi
  4417d6:	pop    rdi
  4417d7:	pop    rbp
  4417d8:	pop    r12
  4417da:	pop    r13
  4417dc:	pop    r14
  4417de:	pop    r15
  4417e0:	ret    
  4417e1:	lea    ecx,[rbp-0x57]
  4417e4:	cmp    edi,ecx
  4417e6:	jle    0x44179a
  4417e8:	test   ecx,ecx
  4417ea:	js     0x44179a
  4417ec:	xor    edx,edx
  4417ee:	mov    rax,0xffffffffffffffff
  4417f5:	div    rsi
  4417f8:	add    rax,0x1
  4417fc:	cmp    r15,rax
  4417ff:	ja     0x441820
  441801:	mov    rax,r15
  441804:	movsxd rcx,ecx
  441807:	imul   rax,rsi
  44180b:	add    rcx,rax
  44180e:	cmp    r15,rcx
  441811:	ja     0x441820
  441813:	mov    r15,rcx
  441816:	add    r14,0x1
  44181a:	jmp    0x441770
  44181f:	nop
  441820:	mov    r13d,0x1
  441826:	jmp    0x441816
  441828:	nop    DWORD PTR [rax+rax*1+0x0]
  441830:	mov    ecx,r15d
  441833:	call   0x449480
  441838:	test   eax,eax
  44183a:	jne    0x4418a0
  44183c:	mov    ecx,r15d
  44183f:	call   0x449490
  441844:	mov    edx,eax
  441846:	xor    eax,eax
  441848:	test   edx,edx
  44184a:	je     0x4417d0
  44184c:	sub    r15d,0x57
  441850:	jmp    0x44174b
  441855:	cmp    edi,0x10
  441858:	jne    0x441732
  44185e:	cmp    al,0x30
  441860:	jne    0x441732
  441866:	movzx  eax,BYTE PTR [rsi+0x1]
  44186a:	and    eax,0xffffffdf
  44186d:	cmp    al,0x58
  44186f:	je     0x4418c3
  441871:	mov    eax,0x30
  441876:	jmp    0x441743
  44187b:	nop    DWORD PTR [rax+rax*1+0x0]
  441880:	call   0x4495c8
  441885:	mov    DWORD PTR [rax],0x22
  44188b:	mov    rax,0xffffffffffffffff
  441892:	jmp    0x4417d0
  441897:	nop    WORD PTR [rax+rax*1+0x0]
  4418a0:	sub    r15d,0x37
  4418a4:	jmp    0x44174b
  4418a9:	nop    DWORD PTR [rax+0x0]
  4418b0:	movzx  edx,BYTE PTR [rsi+0x1]
  4418b4:	mov    dil,0x8
  4418b7:	and    edx,0xffffffdf
  4418ba:	cmp    dl,0x58
  4418bd:	jne    0x441732
  4418c3:	movzx  eax,BYTE PTR [rsi+0x2]
  4418c7:	mov    edi,0x10
  4418cc:	add    rsi,0x2
  4418d0:	jmp    0x441732
  4418d5:	xor    eax,eax
  4418d7:	jmp    0x4417d0
  4418dc:	nop
  4418dd:	nop
  4418de:	nop
  4418df:	nop
  4418e0:	sub    rsp,0x58
  4418e4:	mov    rax,QWORD PTR [rdx]
  4418e7:	mov    r11,rdx
  4418ea:	mov    edx,DWORD PTR [rdx+0x8]
  4418ed:	mov    r10,rdx
  4418f0:	and    r10w,0x7fff
  4418f6:	jne    0x441914
  4418f8:	mov    rdx,rax
  4418fb:	shr    rdx,0x20
  4418ff:	or     eax,edx
  441901:	jne    0x441980
  441903:	mov    DWORD PTR [rsp+0x44],0x0
  44190b:	movzx  eax,WORD PTR [r11+0x8]
  441910:	xor    edx,edx
  441912:	jmp    0x44193b
  441914:	cmp    r10w,0x7fff
  44191a:	je     0x4419a0
  441920:	movzx  eax,WORD PTR [r11+0x8]
  441925:	mov    DWORD PTR [rsp+0x44],0x1
  44192d:	mov    edx,eax
  44192f:	and    edx,0x7fff
  441935:	sub    edx,0x403e
  44193b:	and    eax,0x8000
  441940:	mov    r10,QWORD PTR [rsp+0x80]
  441948:	mov    DWORD PTR [r10],eax
  44194b:	lea    rax,[rsp+0x48]
  441950:	mov    QWORD PTR [rsp+0x30],r9
  441955:	mov    DWORD PTR [rsp+0x20],ecx
  441959:	lea    r9,[rsp+0x44]
  44195e:	lea    rcx,[rip+0x98cb]        # 0x44b230
  441965:	mov    DWORD PTR [rsp+0x28],r8d
  44196a:	mov    QWORD PTR [rsp+0x38],rax
  44196f:	mov    r8,r11
  441972:	call   0x443d90
  441977:	add    rsp,0x58
  44197b:	ret    
  44197c:	nop    DWORD PTR [rax+0x0]
  441980:	test   edx,edx
  441982:	js     0x441920
  441984:	mov    DWORD PTR [rsp+0x44],0x2
  44198c:	movzx  eax,WORD PTR [r11+0x8]
  441991:	mov    edx,0xffffbfc3
  441996:	jmp    0x44193b
  441998:	nop    DWORD PTR [rax+rax*1+0x0]
  4419a0:	mov    rdx,rax
  4419a3:	shr    rdx,0x20
  4419a7:	and    edx,0x7fffffff
  4419ad:	or     edx,eax
  4419af:	jne    0x4419c5
  4419b1:	mov    DWORD PTR [rsp+0x44],0x3
  4419b9:	movzx  eax,WORD PTR [r11+0x8]
  4419be:	xor    edx,edx
  4419c0:	jmp    0x44193b
  4419c5:	mov    DWORD PTR [rsp+0x44],0x4
  4419cd:	xor    edx,edx
  4419cf:	xor    eax,eax
  4419d1:	jmp    0x441940
  4419d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4419e0:	push   rbx
  4419e1:	sub    rsp,0x20
  4419e5:	mov    rbx,rdx
  4419e8:	mov    edx,DWORD PTR [rdx+0x8]
  4419eb:	test   dh,0x40
  4419ee:	jne    0x4419f8
  4419f0:	mov    eax,DWORD PTR [rbx+0x24]
  4419f3:	cmp    DWORD PTR [rbx+0x28],eax
  4419f6:	jle    0x441a0a
  4419f8:	and    dh,0x20
  4419fb:	jne    0x441a20
  4419fd:	movsxd rax,DWORD PTR [rbx+0x24]
  441a01:	mov    rdx,QWORD PTR [rbx]
  441a04:	mov    BYTE PTR [rdx+rax*1],cl
  441a07:	mov    eax,DWORD PTR [rbx+0x24]
  441a0a:	add    eax,0x1
  441a0d:	mov    DWORD PTR [rbx+0x24],eax
  441a10:	add    rsp,0x20
  441a14:	pop    rbx
  441a15:	ret    
  441a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  441a20:	mov    rdx,QWORD PTR [rbx]
  441a23:	call   0x4494e0
  441a28:	mov    eax,DWORD PTR [rbx+0x24]
  441a2b:	add    eax,0x1
  441a2e:	mov    DWORD PTR [rbx+0x24],eax
  441a31:	add    rsp,0x20
  441a35:	pop    rbx
  441a36:	ret    
  441a37:	nop    WORD PTR [rax+rax*1+0x0]
  441a40:	push   r14
  441a42:	push   r13
  441a44:	push   r12
  441a46:	push   rbp
  441a47:	push   rdi
  441a48:	push   rsi
  441a49:	push   rbx
  441a4a:	sub    rsp,0x40
  441a4e:	lea    r14,[rsp+0x2c]
  441a53:	lea    r13,[rsp+0x30]
  441a58:	mov    ebx,edx
  441a5a:	mov    rsi,r8
  441a5d:	xor    edx,edx
  441a5f:	mov    r12,rcx
  441a62:	mov    r8,r14
  441a65:	mov    rcx,r13
  441a68:	call   0x448110
  441a6d:	mov    ebp,DWORD PTR [rsi+0x10]
  441a70:	cmp    ebp,ebx
  441a72:	jge    0x441b19
  441a78:	test   ebp,ebp
  441a7a:	js     0x441b19
  441a80:	mov    eax,DWORD PTR [rsi+0xc]
  441a83:	cmp    ebp,eax
  441a85:	jge    0x441b26
  441a8b:	sub    eax,ebp
  441a8d:	test   eax,eax
  441a8f:	mov    DWORD PTR [rsi+0xc],eax
  441a92:	jle    0x441aa0
  441a94:	test   BYTE PTR [rsi+0x9],0x4
  441a98:	je     0x441b32
  441a9e:	xchg   ax,ax
  441aa0:	test   ebp,ebp
  441aa2:	jle    0x441afd
  441aa4:	add    r12,0x2
  441aa8:	movzx  edx,WORD PTR [r12-0x2]
  441aae:	mov    r8,r14
  441ab1:	mov    rcx,r13
  441ab4:	call   0x448110
  441ab9:	test   eax,eax
  441abb:	jle    0x441afd
  441abd:	sub    eax,0x1
  441ac0:	mov    rbx,r13
  441ac3:	lea    rdi,[r13+rax*1+0x1]
  441ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  441ad0:	add    rbx,0x1
  441ad4:	movsx  ecx,BYTE PTR [rbx-0x1]
  441ad8:	mov    rdx,rsi
  441adb:	call   0x4419e0
  441ae0:	cmp    rbx,rdi
  441ae3:	jne    0x441ad0
  441ae5:	sub    ebp,0x1
  441ae8:	jmp    0x441aa0
  441aea:	nop    WORD PTR [rax+rax*1+0x0]
  441af0:	mov    rdx,rsi
  441af3:	mov    ecx,0x20
  441af8:	call   0x4419e0
  441afd:	mov    eax,DWORD PTR [rsi+0xc]
  441b00:	lea    edx,[rax-0x1]
  441b03:	test   eax,eax
  441b05:	mov    DWORD PTR [rsi+0xc],edx
  441b08:	jg     0x441af0
  441b0a:	add    rsp,0x40
  441b0e:	pop    rbx
  441b0f:	pop    rsi
  441b10:	pop    rdi
  441b11:	pop    rbp
  441b12:	pop    r12
  441b14:	pop    r13
  441b16:	pop    r14
  441b18:	ret    
  441b19:	mov    eax,DWORD PTR [rsi+0xc]
  441b1c:	mov    ebp,ebx
  441b1e:	cmp    ebp,eax
  441b20:	jl     0x441a8b
  441b26:	mov    DWORD PTR [rsi+0xc],0xffffffff
  441b2d:	jmp    0x441aa0
  441b32:	sub    eax,0x1
  441b35:	mov    DWORD PTR [rsi+0xc],eax
  441b38:	nop    DWORD PTR [rax+rax*1+0x0]
  441b40:	mov    rdx,rsi
  441b43:	mov    ecx,0x20
  441b48:	call   0x4419e0
  441b4d:	mov    eax,DWORD PTR [rsi+0xc]
  441b50:	lea    edx,[rax-0x1]
  441b53:	test   eax,eax
  441b55:	mov    DWORD PTR [rsi+0xc],edx
  441b58:	jne    0x441b40
  441b5a:	jmp    0x441aa0
  441b5f:	nop
  441b60:	push   rdi
  441b61:	push   rsi
  441b62:	push   rbx
  441b63:	sub    rsp,0x20
  441b67:	mov    edi,DWORD PTR [r8+0x10]
  441b6b:	mov    rsi,rcx
  441b6e:	mov    rbx,r8
  441b71:	cmp    edi,edx
  441b73:	jge    0x441bf0
  441b75:	test   edi,edi
  441b77:	js     0x441bf0
  441b79:	mov    eax,DWORD PTR [rbx+0xc]
  441b7c:	cmp    edi,eax
  441b7e:	jge    0x441bf9
  441b80:	sub    eax,edi
  441b82:	test   eax,eax
  441b84:	mov    DWORD PTR [rbx+0xc],eax
  441b87:	jle    0x441c52
  441b8d:	test   BYTE PTR [rbx+0x9],0x4
  441b91:	jne    0x441c20
  441b97:	sub    eax,0x1
  441b9a:	mov    DWORD PTR [rbx+0xc],eax
  441b9d:	nop    DWORD PTR [rax]
  441ba0:	mov    rdx,rbx
  441ba3:	mov    ecx,0x20
  441ba8:	call   0x4419e0
  441bad:	mov    eax,DWORD PTR [rbx+0xc]
  441bb0:	mov    edx,eax
  441bb2:	sub    eax,0x1
  441bb5:	test   edx,edx
  441bb7:	mov    DWORD PTR [rbx+0xc],eax
  441bba:	jne    0x441ba0
  441bbc:	test   edi,edi
  441bbe:	lea    edx,[rdi-0x1]
  441bc1:	je     0x441c40
  441bc3:	lea    rdi,[rsi+rdx*1+0x1]
  441bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  441bd0:	add    rsi,0x1
  441bd4:	movsx  ecx,BYTE PTR [rsi-0x1]
  441bd8:	mov    rdx,rbx
  441bdb:	call   0x4419e0
  441be0:	cmp    rsi,rdi
  441be3:	jne    0x441bd0
  441be5:	jmp    0x441c3d
  441be7:	nop    WORD PTR [rax+rax*1+0x0]
  441bf0:	mov    eax,DWORD PTR [rbx+0xc]
  441bf3:	mov    edi,edx
  441bf5:	cmp    edi,eax
  441bf7:	jl     0x441b80
  441bf9:	test   edi,edi
  441bfb:	mov    DWORD PTR [rbx+0xc],0xffffffff
  441c02:	lea    edx,[rdi-0x1]
  441c05:	jne    0x441bc3
  441c07:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  441c0e:	add    rsp,0x20
  441c12:	pop    rbx
  441c13:	pop    rsi
  441c14:	pop    rdi
  441c15:	ret    
  441c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  441c20:	test   edi,edi
  441c22:	lea    edx,[rdi-0x1]
  441c25:	jne    0x441bc3
  441c27:	sub    eax,0x1
  441c2a:	mov    DWORD PTR [rbx+0xc],eax
  441c2d:	nop    DWORD PTR [rax]
  441c30:	mov    rdx,rbx
  441c33:	mov    ecx,0x20
  441c38:	call   0x4419e0
  441c3d:	mov    eax,DWORD PTR [rbx+0xc]
  441c40:	lea    edx,[rax-0x1]
  441c43:	test   eax,eax
  441c45:	mov    DWORD PTR [rbx+0xc],edx
  441c48:	jg     0x441c30
  441c4a:	add    rsp,0x20
  441c4e:	pop    rbx
  441c4f:	pop    rsi
  441c50:	pop    rdi
  441c51:	ret    
  441c52:	test   edi,edi
  441c54:	lea    edx,[rdi-0x1]
  441c57:	jne    0x441bc3
  441c5d:	sub    eax,0x1
  441c60:	mov    DWORD PTR [rbx+0xc],eax
  441c63:	jmp    0x441c0e
  441c65:	nop
  441c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  441c70:	sub    rsp,0x38
  441c74:	test   ecx,ecx
  441c76:	mov    DWORD PTR [r8+0x10],0xffffffff
  441c7e:	je     0x441cc4
  441c80:	lea    rcx,[rsp+0x20]
  441c85:	mov    r11d,DWORD PTR [r8+0x8]
  441c89:	mov    BYTE PTR [rsp+0x20],0x2d
  441c8e:	lea    r10,[rcx+0x1]
  441c92:	and    r11d,0x20
  441c96:	xor    r9d,r9d
  441c99:	movzx  eax,BYTE PTR [rdx+r9*1]
  441c9e:	and    eax,0xffffffdf
  441ca1:	or     eax,r11d
  441ca4:	mov    BYTE PTR [r10+r9*1],al
  441ca8:	add    r9,0x1
  441cac:	cmp    r9,0x3
  441cb0:	jne    0x441c99
  441cb2:	lea    rdx,[r10+0x3]
  441cb6:	sub    rdx,rcx
  441cb9:	call   0x441b60
  441cbe:	nop
  441cbf:	add    rsp,0x38
  441cc3:	ret    
  441cc4:	mov    r11d,DWORD PTR [r8+0x8]
  441cc8:	test   r11d,0x100
  441ccf:	je     0x441ce1
  441cd1:	lea    rcx,[rsp+0x20]
  441cd6:	mov    BYTE PTR [rsp+0x20],0x2b
  441cdb:	lea    r10,[rcx+0x1]
  441cdf:	jmp    0x441c92
  441ce1:	test   r11b,0x40
  441ce5:	je     0x441d00
  441ce7:	lea    rcx,[rsp+0x20]
  441cec:	mov    BYTE PTR [rsp+0x20],0x20
  441cf1:	lea    r10,[rcx+0x1]
  441cf5:	jmp    0x441c92
  441cf7:	nop    WORD PTR [rax+rax*1+0x0]
  441d00:	lea    rcx,[rsp+0x20]
  441d05:	mov    r10,rcx
  441d08:	jmp    0x441c92
  441d0a:	nop    WORD PTR [rax+rax*1+0x0]
  441d10:	push   rbp
  441d11:	push   r12
  441d13:	push   rdi
  441d14:	push   rsi
  441d15:	push   rbx
  441d16:	mov    rbp,rsp
  441d19:	sub    rsp,0x30
  441d1d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  441d21:	mov    rsi,rcx
  441d24:	je     0x441dc0
  441d2a:	movzx  edx,WORD PTR [rcx+0x18]
  441d2e:	test   dx,dx
  441d31:	je     0x441d92
  441d33:	movsxd rax,DWORD PTR [rsi+0x14]
  441d37:	mov    r12,rsp
  441d3a:	add    rax,0xf
  441d3e:	and    rax,0xfffffffffffffff0
  441d42:	call   0x43d410
  441d47:	sub    rsp,rax
  441d4a:	lea    r8,[rbp-0x4]
  441d4e:	mov    DWORD PTR [rbp-0x4],0x0
  441d55:	lea    rbx,[rsp+0x20]
  441d5a:	mov    rcx,rbx
  441d5d:	call   0x448110
  441d62:	test   eax,eax
  441d64:	jle    0x441db0
  441d66:	sub    eax,0x1
  441d69:	lea    rdi,[rbx+rax*1+0x1]
  441d6e:	xchg   ax,ax
  441d70:	add    rbx,0x1
  441d74:	movsx  ecx,BYTE PTR [rbx-0x1]
  441d78:	mov    rdx,rsi
  441d7b:	call   0x4419e0
  441d80:	cmp    rbx,rdi
  441d83:	jne    0x441d70
  441d85:	mov    rsp,r12
  441d88:	mov    rsp,rbp
  441d8b:	pop    rbx
  441d8c:	pop    rsi
  441d8d:	pop    rdi
  441d8e:	pop    r12
  441d90:	pop    rbp
  441d91:	ret    
  441d92:	mov    rdx,rsi
  441d95:	mov    ecx,0x2e
  441d9a:	call   0x4419e0
  441d9f:	nop
  441da0:	mov    rsp,rbp
  441da3:	pop    rbx
  441da4:	pop    rsi
  441da5:	pop    rdi
  441da6:	pop    r12
  441da8:	pop    rbp
  441da9:	ret    
  441daa:	nop    WORD PTR [rax+rax*1+0x0]
  441db0:	mov    rdx,rsi
  441db3:	mov    ecx,0x2e
  441db8:	call   0x4419e0
  441dbd:	jmp    0x441d85
  441dbf:	nop
  441dc0:	mov    DWORD PTR [rbp-0x4],0x0
  441dc7:	call   0x449470
  441dcc:	mov    rdx,QWORD PTR [rax]
  441dcf:	lea    rcx,[rbp-0x6]
  441dd3:	lea    r9,[rbp-0x4]
  441dd7:	mov    r8d,0x10
  441ddd:	call   0x441260
  441de2:	test   eax,eax
  441de4:	jle    0x441df6
  441de6:	movzx  edx,WORD PTR [rbp-0x6]
  441dea:	mov    WORD PTR [rsi+0x18],dx
  441dee:	mov    DWORD PTR [rsi+0x14],eax
  441df1:	jmp    0x441d2e
  441df6:	movzx  edx,WORD PTR [rsi+0x18]
  441dfa:	jmp    0x441dee
  441dfc:	nop    DWORD PTR [rax+0x0]
  441e00:	push   r12
  441e02:	push   rbp
  441e03:	push   rdi
  441e04:	push   rsi
  441e05:	push   rbx
  441e06:	sub    rsp,0x20
  441e0a:	mov    esi,r8d
  441e0d:	mov    ebp,ecx
  441e0f:	mov    rdi,rdx
  441e12:	test   esi,esi
  441e14:	mov    rbx,r9
  441e17:	mov    r8d,DWORD PTR [r9+0xc]
  441e1b:	jle    0x441ff2
  441e21:	cmp    esi,r8d
  441e24:	jg     0x441f60
  441e2a:	sub    r8d,esi
  441e2d:	mov    DWORD PTR [r9+0xc],r8d
  441e31:	test   r8d,r8d
  441e34:	js     0x441f60
  441e3a:	mov    eax,DWORD PTR [rbx+0x10]
  441e3d:	cmp    eax,r8d
  441e40:	jge    0x441f60
  441e46:	sub    r8d,eax
  441e49:	test   r8d,r8d
  441e4c:	mov    DWORD PTR [rbx+0xc],r8d
  441e50:	jle    0x441f6d
  441e56:	test   eax,eax
  441e58:	jle    0x4420a5
  441e5e:	sub    r8d,0x1
  441e62:	test   esi,esi
  441e64:	mov    DWORD PTR [rbx+0xc],r8d
  441e68:	jle    0x441e74
  441e6a:	test   BYTE PTR [rbx+0x9],0x10
  441e6e:	jne    0x441f7f
  441e74:	test   r8d,r8d
  441e77:	jle    0x441ebd
  441e79:	test   ebp,ebp
  441e7b:	jne    0x441e8b
  441e7d:	mov    eax,DWORD PTR [rbx+0x8]
  441e80:	test   eax,0x1c0
  441e85:	je     0x442085
  441e8b:	sub    r8d,0x1
  441e8f:	test   r8d,r8d
  441e92:	mov    DWORD PTR [rbx+0xc],r8d
  441e96:	jle    0x441ebd
  441e98:	test   DWORD PTR [rbx+0x8],0x600
  441e9f:	jne    0x441ebd
  441ea1:	jmp    0x441eb0
  441ea3:	mov    rdx,rbx
  441ea6:	mov    ecx,0x20
  441eab:	call   0x4419e0
  441eb0:	mov    eax,DWORD PTR [rbx+0xc]
  441eb3:	lea    edx,[rax-0x1]
  441eb6:	test   eax,eax
  441eb8:	mov    DWORD PTR [rbx+0xc],edx
  441ebb:	jg     0x441ea3
  441ebd:	test   ebp,ebp
  441ebf:	jne    0x441fe0
  441ec5:	mov    eax,DWORD PTR [rbx+0x8]
  441ec8:	test   ah,0x1
  441ecb:	jne    0x442010
  441ed1:	test   al,0x40
  441ed3:	jne    0x442093
  441ed9:	mov    edx,DWORD PTR [rbx+0xc]
  441edc:	test   edx,edx
  441ede:	jle    0x441ef3
  441ee0:	mov    eax,DWORD PTR [rbx+0x8]
  441ee3:	and    eax,0x600
  441ee8:	cmp    eax,0x200
  441eed:	je     0x442022
  441ef3:	test   esi,esi
  441ef5:	jle    0x442052
  441efb:	lea    r12,[rbx+0x20]
  441eff:	mov    ebp,0x55555556
  441f04:	movzx  eax,BYTE PTR [rdi]
  441f07:	mov    ecx,0x30
  441f0c:	test   al,al
  441f0e:	je     0x441f17
  441f10:	add    rdi,0x1
  441f14:	movsx  ecx,al
  441f17:	mov    rdx,rbx
  441f1a:	call   0x4419e0
  441f1f:	sub    esi,0x1
  441f22:	je     0x442140
  441f28:	test   BYTE PTR [rbx+0x9],0x10
  441f2c:	je     0x441f04
  441f2e:	cmp    WORD PTR [rbx+0x20],0x0
  441f33:	je     0x441f04
  441f35:	mov    eax,esi
  441f37:	imul   ebp
  441f39:	mov    eax,esi
  441f3b:	sar    eax,0x1f
  441f3e:	sub    edx,eax
  441f40:	lea    eax,[rdx+rdx*2]
  441f43:	cmp    esi,eax
  441f45:	jne    0x441f04
  441f47:	mov    r8,rbx
  441f4a:	mov    edx,0x1
  441f4f:	mov    rcx,r12
  441f52:	call   0x441a40
  441f57:	jmp    0x441f04
  441f59:	nop    DWORD PTR [rax+0x0]
  441f60:	mov    DWORD PTR [rbx+0xc],0xffffffff
  441f67:	mov    r8d,0xffffffff
  441f6d:	test   esi,esi
  441f6f:	jle    0x441ebd
  441f75:	test   BYTE PTR [rbx+0x9],0x10
  441f79:	je     0x441ebd
  441f7f:	cmp    WORD PTR [rbx+0x20],0x0
  441f84:	je     0x441e74
  441f8a:	lea    ecx,[rsi+0x2]
  441f8d:	mov    edx,0x55555556
  441f92:	mov    eax,ecx
  441f94:	sar    ecx,0x1f
  441f97:	imul   edx
  441f99:	sub    edx,ecx
  441f9b:	cmp    edx,0x1
  441f9e:	jle    0x441e74
  441fa4:	test   r8d,r8d
  441fa7:	jle    0x441ebd
  441fad:	mov    eax,r8d
  441fb0:	sub    eax,edx
  441fb2:	add    eax,0x1
  441fb5:	jmp    0x441fc9
  441fb7:	nop    WORD PTR [rax+rax*1+0x0]
  441fc0:	test   r8d,r8d
  441fc3:	je     0x442134
  441fc9:	sub    r8d,0x1
  441fcd:	cmp    r8d,eax
  441fd0:	jne    0x441fc0
  441fd2:	mov    DWORD PTR [rbx+0xc],r8d
  441fd6:	jmp    0x441e74
  441fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  441fe0:	mov    rdx,rbx
  441fe3:	mov    ecx,0x2d
  441fe8:	call   0x4419e0
  441fed:	jmp    0x441ed9
  441ff2:	test   r8d,r8d
  441ff5:	jle    0x441e31
  441ffb:	sub    r8d,0x1
  441fff:	mov    DWORD PTR [r9+0xc],r8d
  442003:	jmp    0x441e3a
  442008:	nop    DWORD PTR [rax+rax*1+0x0]
  442010:	mov    rdx,rbx
  442013:	mov    ecx,0x2b
  442018:	call   0x4419e0
  44201d:	jmp    0x441ed9
  442022:	sub    edx,0x1
  442025:	mov    DWORD PTR [rbx+0xc],edx
  442028:	nop    DWORD PTR [rax+rax*1+0x0]
  442030:	mov    rdx,rbx
  442033:	mov    ecx,0x30
  442038:	call   0x4419e0
  44203d:	mov    eax,DWORD PTR [rbx+0xc]
  442040:	lea    edx,[rax-0x1]
  442043:	test   eax,eax
  442045:	mov    DWORD PTR [rbx+0xc],edx
  442048:	jg     0x442030
  44204a:	test   esi,esi
  44204c:	jg     0x441efb
  442052:	mov    rdx,rbx
  442055:	mov    ecx,0x30
  44205a:	call   0x4419e0
  44205f:	mov    eax,DWORD PTR [rbx+0x10]
  442062:	test   eax,eax
  442064:	jg     0x4420d2
  442066:	test   BYTE PTR [rbx+0x9],0x8
  44206a:	jne    0x4420d2
  44206c:	test   esi,esi
  44206e:	jne    0x442116
  442074:	sub    eax,0x1
  442077:	mov    DWORD PTR [rbx+0x10],eax
  44207a:	add    rsp,0x20
  44207e:	pop    rbx
  44207f:	pop    rsi
  442080:	pop    rdi
  442081:	pop    rbp
  442082:	pop    r12
  442084:	ret    
  442085:	test   ah,0x6
  442088:	je     0x441eb0
  44208e:	jmp    0x441ec8
  442093:	mov    rdx,rbx
  442096:	mov    ecx,0x20
  44209b:	call   0x4419e0
  4420a0:	jmp    0x441ed9
  4420a5:	mov    eax,DWORD PTR [rbx+0x8]
  4420a8:	test   ah,0x8
  4420ab:	jne    0x441e5e
  4420b1:	test   esi,esi
  4420b3:	jle    0x441e79
  4420b9:	test   ah,0x10
  4420bc:	je     0x441e79
  4420c2:	cmp    WORD PTR [rbx+0x20],0x0
  4420c7:	jne    0x441f8a
  4420cd:	jmp    0x441e79
  4420d2:	mov    rcx,rbx
  4420d5:	call   0x441d10
  4420da:	test   esi,esi
  4420dc:	je     0x4420fb
  4420de:	jmp    0x442113
  4420e0:	movzx  eax,BYTE PTR [rdi]
  4420e3:	mov    ecx,0x30
  4420e8:	test   al,al
  4420ea:	je     0x4420f3
  4420ec:	add    rdi,0x1
  4420f0:	movsx  ecx,al
  4420f3:	mov    rdx,rbx
  4420f6:	call   0x4419e0
  4420fb:	mov    eax,DWORD PTR [rbx+0x10]
  4420fe:	lea    edx,[rax-0x1]
  442101:	test   eax,eax
  442103:	mov    DWORD PTR [rbx+0x10],edx
  442106:	jg     0x4420e0
  442108:	add    rsp,0x20
  44210c:	pop    rbx
  44210d:	pop    rsi
  44210e:	pop    rdi
  44210f:	pop    rbp
  442110:	pop    r12
  442112:	ret    
  442113:	mov    eax,DWORD PTR [rbx+0x10]
  442116:	add    eax,esi
  442118:	mov    DWORD PTR [rbx+0x10],eax
  44211b:	nop    DWORD PTR [rax+rax*1+0x0]
  442120:	mov    rdx,rbx
  442123:	mov    ecx,0x30
  442128:	call   0x4419e0
  44212d:	add    esi,0x1
  442130:	jne    0x442120
  442132:	jmp    0x4420fb
  442134:	mov    DWORD PTR [rbx+0xc],0x0
  44213b:	jmp    0x441ebd
  442140:	mov    eax,DWORD PTR [rbx+0x10]
  442143:	test   eax,eax
  442145:	jle    0x442151
  442147:	mov    rcx,rbx
  44214a:	call   0x441d10
  44214f:	jmp    0x4420fb
  442151:	test   BYTE PTR [rbx+0x9],0x8
  442155:	jne    0x442147
  442157:	jmp    0x442074
  44215c:	nop    DWORD PTR [rax+0x0]
  442160:	push   rsi
  442161:	push   rbx
  442162:	sub    rsp,0x68
  442166:	mov    r8d,DWORD PTR [rdx+0x10]
  44216a:	fld    TBYTE PTR [rcx]
  44216c:	mov    rbx,rdx
  44216f:	test   r8d,r8d
  442172:	js     0x442210
  442178:	lea    rdx,[rsp+0x30]
  44217d:	lea    r9,[rsp+0x4c]
  442182:	mov    ecx,0x3
  442187:	fstp   TBYTE PTR [rsp+0x50]
  44218b:	mov    rax,QWORD PTR [rsp+0x50]
  442190:	mov    QWORD PTR [rsp+0x30],rax
  442195:	mov    rax,QWORD PTR [rsp+0x58]
  44219a:	mov    QWORD PTR [rsp+0x38],rax
  44219f:	lea    rax,[rsp+0x48]
  4421a4:	mov    QWORD PTR [rsp+0x20],rax
  4421a9:	call   0x4418e0
  4421ae:	mov    r8d,DWORD PTR [rsp+0x4c]
  4421b3:	mov    rsi,rax
  4421b6:	cmp    r8d,0xffff8000
  4421bd:	je     0x442222
  4421bf:	mov    ecx,DWORD PTR [rsp+0x48]
  4421c3:	mov    rdx,rax
  4421c6:	mov    r9,rbx
  4421c9:	call   0x441e00
  4421ce:	mov    eax,DWORD PTR [rbx+0xc]
  4421d1:	lea    edx,[rax-0x1]
  4421d4:	test   eax,eax
  4421d6:	mov    DWORD PTR [rbx+0xc],edx
  4421d9:	jle    0x4421fe
  4421db:	nop    DWORD PTR [rax+rax*1+0x0]
  4421e0:	mov    rdx,rbx
  4421e3:	mov    ecx,0x20
  4421e8:	call   0x4419e0
  4421ed:	mov    r8d,DWORD PTR [rbx+0xc]
  4421f1:	lea    r9d,[r8-0x1]
  4421f5:	test   r8d,r8d
  4421f8:	mov    DWORD PTR [rbx+0xc],r9d
  4421fc:	jg     0x4421e0
  4421fe:	mov    rcx,rsi
  442201:	call   0x443bf0
  442206:	nop
  442207:	add    rsp,0x68
  44220b:	pop    rbx
  44220c:	pop    rsi
  44220d:	ret    
  44220e:	xchg   ax,ax
  442210:	mov    DWORD PTR [rdx+0x10],0x6
  442217:	mov    r8d,0x6
  44221d:	jmp    0x442178
  442222:	mov    ecx,DWORD PTR [rsp+0x48]
  442226:	mov    r8,rbx
  442229:	mov    rdx,rax
  44222c:	call   0x441c70
  442231:	mov    rcx,rsi
  442234:	call   0x443bf0
  442239:	nop
  44223a:	add    rsp,0x68
  44223e:	pop    rbx
  44223f:	pop    rsi
  442240:	ret    
  442241:	nop    DWORD PTR [rax+rax*1+0x0]
  442246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  442250:	push   rbp
  442251:	push   r13
  442253:	push   r12
  442255:	push   rdi
  442256:	push   rsi
  442257:	push   rbx
  442258:	sub    rsp,0x28
  44225c:	lea    rbp,[rsp+0x80]
  442264:	mov    ebx,DWORD PTR [rdx+0x10]
  442267:	mov    r11d,DWORD PTR [rdx+0x8]
  44226b:	mov    r8d,0x0
  442271:	mov    rsi,rdx
  442274:	test   ebx,ebx
  442276:	cmovns r8d,ebx
  44227a:	add    r8d,0x17
  44227e:	test   r11d,0x1000
  442285:	je     0x442292
  442287:	cmp    WORD PTR [rdx+0x20],0x0
  44228c:	jne    0x442482
  442292:	movsxd r13,DWORD PTR [rsi+0xc]
  442296:	movsxd rax,r8d
  442299:	cmp    r8d,r13d
  44229c:	cmovl  rax,r13
  4422a0:	add    rax,0x1e
  4422a4:	and    rax,0xfffffffffffffff0
  4422a8:	call   0x43d410
  4422ad:	sub    rsp,rax
  4422b0:	test   r11b,0x80
  4422b4:	lea    r12,[rsp+0x20]
  4422b9:	je     0x4422cc
  4422bb:	test   rcx,rcx
  4422be:	js     0x442510
  4422c4:	and    r11b,0x7f
  4422c8:	mov    DWORD PTR [rsi+0x8],r11d
  4422cc:	test   rcx,rcx
  4422cf:	je     0x442518
  4422d5:	mov    r10d,r11d
  4422d8:	mov    r8,r12
  4422db:	movabs r9,0xcccccccccccccccd
  4422e5:	and    r10d,0x1000
  4422ec:	jmp    0x442323
  4422ee:	xchg   ax,ax
  4422f0:	cmp    r12,rdi
  4422f3:	je     0x442320
  4422f5:	test   r10d,r10d
  4422f8:	je     0x442320
  4422fa:	cmp    WORD PTR [rsi+0x20],0x0
  4422ff:	je     0x442320
  442301:	mov    rax,rdi
  442304:	sub    rax,r12
  442307:	cqo    
  442309:	shr    rdx,0x3e
  44230d:	add    rax,rdx
  442310:	and    eax,0x3
  442313:	sub    rax,rdx
  442316:	cmp    rax,0x3
  44231a:	je     0x442460
  442320:	mov    r8,rdi
  442323:	mov    rax,rcx
  442326:	lea    rdi,[r8+0x1]
  44232a:	mul    r9
  44232d:	shr    rdx,0x3
  442331:	lea    rax,[rdx+rdx*4]
  442335:	add    rax,rax
  442338:	sub    rcx,rax
  44233b:	add    ecx,0x30
  44233e:	test   rdx,rdx
  442341:	mov    BYTE PTR [r8],cl
  442344:	mov    rcx,rdx
  442347:	jne    0x4422f0
  442349:	test   ebx,ebx
  44234b:	jle    0x442385
  44234d:	mov    rax,r12
  442350:	sub    rax,rdi
  442353:	add    eax,ebx
  442355:	test   eax,eax
  442357:	jle    0x442385
  442359:	sub    eax,0x1
  44235c:	mov    rdx,rax
  44235f:	lea    rcx,[rdi+rax*1+0x1]
  442364:	mov    rax,rdi
  442367:	nop    WORD PTR [rax+rax*1+0x0]
  442370:	add    rax,0x1
  442374:	mov    BYTE PTR [rax-0x1],0x30
  442378:	cmp    rax,rcx
  44237b:	jne    0x442370
  44237d:	movsxd rax,edx
  442380:	lea    rdi,[rdi+rax*1+0x1]
  442385:	cmp    r12,rdi
  442388:	jne    0x442395
  44238a:	test   ebx,ebx
  44238c:	je     0x442395
  44238e:	mov    BYTE PTR [rdi],0x30
  442391:	add    rdi,0x1
  442395:	test   r13d,r13d
  442398:	jle    0x4423fe
  44239a:	mov    rax,r12
  44239d:	sub    rax,rdi
  4423a0:	add    r13d,eax
  4423a3:	test   r13d,r13d
  4423a6:	mov    DWORD PTR [rsi+0xc],r13d
  4423aa:	jle    0x4423fe
  4423ac:	test   r11d,0x1c0
  4423b3:	je     0x4423bd
  4423b5:	sub    r13d,0x1
  4423b9:	mov    DWORD PTR [rsi+0xc],r13d
  4423bd:	test   ebx,ebx
  4423bf:	js     0x4424c0
  4423c5:	test   r11d,0x400
  4423cc:	jne    0x4423fe
  4423ce:	mov    eax,DWORD PTR [rsi+0xc]
  4423d1:	lea    edx,[rax-0x1]
  4423d4:	test   eax,eax
  4423d6:	mov    DWORD PTR [rsi+0xc],edx
  4423d9:	jle    0x4423fe
  4423db:	nop    DWORD PTR [rax+rax*1+0x0]
  4423e0:	mov    rdx,rsi
  4423e3:	mov    ecx,0x20
  4423e8:	call   0x4419e0
  4423ed:	mov    eax,DWORD PTR [rsi+0xc]
  4423f0:	lea    edx,[rax-0x1]
  4423f3:	test   eax,eax
  4423f5:	mov    DWORD PTR [rsi+0xc],edx
  4423f8:	jg     0x4423e0
  4423fa:	mov    r11d,DWORD PTR [rsi+0x8]
  4423fe:	test   r11b,0x80
  442402:	je     0x442470
  442404:	lea    rbx,[rdi+0x1]
  442408:	mov    BYTE PTR [rdi],0x2d
  44240b:	cmp    r12,rbx
  44240e:	jae    0x44243e
  442410:	sub    rbx,0x1
  442414:	movsx  ecx,BYTE PTR [rbx]
  442417:	mov    rdx,rsi
  44241a:	call   0x4419e0
  44241f:	cmp    rbx,r12
  442422:	jne    0x442410
  442424:	mov    eax,DWORD PTR [rsi+0xc]
  442427:	lea    edx,[rax-0x1]
  44242a:	test   eax,eax
  44242c:	mov    DWORD PTR [rsi+0xc],edx
  44242f:	jle    0x44244b
  442431:	mov    rdx,rsi
  442434:	mov    ecx,0x20
  442439:	call   0x4419e0
  44243e:	mov    eax,DWORD PTR [rsi+0xc]
  442441:	lea    edx,[rax-0x1]
  442444:	test   eax,eax
  442446:	mov    DWORD PTR [rsi+0xc],edx
  442449:	jg     0x442431
  44244b:	lea    rsp,[rbp-0x58]
  44244f:	pop    rbx
  442450:	pop    rsi
  442451:	pop    rdi
  442452:	pop    r12
  442454:	pop    r13
  442456:	pop    rbp
  442457:	ret    
  442458:	nop    DWORD PTR [rax+rax*1+0x0]
  442460:	lea    rdi,[r8+0x2]
  442464:	mov    BYTE PTR [r8+0x1],0x2c
  442469:	jmp    0x442320
  44246e:	xchg   ax,ax
  442470:	test   r11d,0x100
  442477:	je     0x4424a0
  442479:	lea    rbx,[rdi+0x1]
  44247d:	mov    BYTE PTR [rdi],0x2b
  442480:	jmp    0x44240b
  442482:	mov    eax,r8d
  442485:	mov    edx,0x55555556
  44248a:	imul   edx
  44248c:	mov    eax,r8d
  44248f:	sar    eax,0x1f
  442492:	sub    edx,eax
  442494:	add    r8d,edx
  442497:	jmp    0x442292
  44249c:	nop    DWORD PTR [rax+0x0]
  4424a0:	and    r11d,0x40
  4424a4:	mov    rbx,rdi
  4424a7:	je     0x44240b
  4424ad:	add    rbx,0x1
  4424b1:	mov    BYTE PTR [rdi],0x20
  4424b4:	jmp    0x44240b
  4424b9:	nop    DWORD PTR [rax+0x0]
  4424c0:	mov    eax,r11d
  4424c3:	and    eax,0x600
  4424c8:	cmp    eax,0x200
  4424cd:	jne    0x4423c5
  4424d3:	mov    eax,DWORD PTR [rsi+0xc]
  4424d6:	lea    ecx,[rax-0x1]
  4424d9:	test   eax,eax
  4424db:	mov    DWORD PTR [rsi+0xc],ecx
  4424de:	jle    0x4423fe
  4424e4:	lea    rdx,[rdi+rcx*1+0x1]
  4424e9:	mov    rax,rdi
  4424ec:	nop    DWORD PTR [rax+0x0]
  4424f0:	add    rax,0x1
  4424f4:	mov    BYTE PTR [rax-0x1],0x30
  4424f8:	cmp    rax,rdx
  4424fb:	jne    0x4424f0
  4424fd:	lea    rdi,[rdi+rcx*1+0x1]
  442502:	mov    DWORD PTR [rsi+0xc],0xffffffff
  442509:	jmp    0x4423fe
  44250e:	xchg   ax,ax
  442510:	neg    rcx
  442513:	jmp    0x4422cc
  442518:	mov    rdi,r12
  44251b:	jmp    0x442349
  442520:	push   rdi
  442521:	push   rsi
  442522:	push   rbx
  442523:	sub    rsp,0x20
  442527:	mov    rsi,r9
  44252a:	lea    r9d,[r8-0x1]
  44252e:	mov    r8d,0x66666667
  442534:	mov    r10,rdx
  442537:	mov    eax,r9d
  44253a:	movsxd rbx,r9d
  44253d:	sar    r9d,0x1f
  442541:	imul   r8d
  442544:	sar    edx,0x2
  442547:	mov    r8d,edx
  44254a:	sub    r8d,r9d
  44254d:	mov    r9d,0x1
  442553:	je     0x44257b
  442555:	mov    r11d,0x66666667
  44255b:	nop    DWORD PTR [rax+rax*1+0x0]
  442560:	mov    eax,r8d
  442563:	sar    r8d,0x1f
  442567:	add    r9d,0x1
  44256b:	imul   r11d
  44256e:	mov    eax,edx
  442570:	sar    eax,0x2
  442573:	sub    eax,r8d
  442576:	mov    r8d,eax
  442579:	jne    0x442560
  44257b:	mov    edi,DWORD PTR [rsi+0x2c]
  44257e:	mov    eax,DWORD PTR [rsi+0xc]
  442581:	cmp    r9d,edi
  442584:	cmovge edi,r9d
  442588:	lea    edx,[rdi+0x2]
  44258b:	cmp    eax,edx
  44258d:	jg     0x4425e2
  44258f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  442596:	mov    r9,rsi
  442599:	mov    rdx,r10
  44259c:	mov    r8d,0x1
  4425a2:	call   0x441e00
  4425a7:	mov    ecx,DWORD PTR [rsi+0x8]
  4425aa:	mov    eax,DWORD PTR [rsi+0x2c]
  4425ad:	mov    rdx,rsi
  4425b0:	mov    DWORD PTR [rsi+0x10],eax
  4425b3:	mov    eax,ecx
  4425b5:	and    ecx,0x20
  4425b8:	or     eax,0x1c0
  4425bd:	or     ecx,0x45
  4425c0:	mov    DWORD PTR [rsi+0x8],eax
  4425c3:	call   0x4419e0
  4425c8:	lea    r9d,[rdi+0x1]
  4425cc:	add    DWORD PTR [rsi+0xc],r9d
  4425d0:	mov    rdx,rsi
  4425d3:	mov    rcx,rbx
  4425d6:	add    rsp,0x20
  4425da:	pop    rbx
  4425db:	pop    rsi
  4425dc:	pop    rdi
  4425dd:	jmp    0x442250
  4425e2:	sub    eax,edx
  4425e4:	mov    DWORD PTR [rsi+0xc],eax
  4425e7:	jmp    0x442596
  4425e9:	nop    DWORD PTR [rax+0x0]
  4425f0:	push   rsi
  4425f1:	push   rbx
  4425f2:	sub    rsp,0x68
  4425f6:	mov    eax,DWORD PTR [rdx+0x10]
  4425f9:	fld    TBYTE PTR [rcx]
  4425fb:	mov    rbx,rdx
  4425fe:	test   eax,eax
  442600:	lea    r8d,[rax+0x1]
  442604:	js     0x442670
  442606:	lea    rdx,[rsp+0x30]
  44260b:	lea    r9,[rsp+0x4c]
  442610:	mov    ecx,0x2
  442615:	fstp   TBYTE PTR [rsp+0x50]
  442619:	mov    rax,QWORD PTR [rsp+0x50]
  44261e:	mov    QWORD PTR [rsp+0x30],rax
  442623:	mov    rax,QWORD PTR [rsp+0x58]
  442628:	mov    QWORD PTR [rsp+0x38],rax
  44262d:	lea    rax,[rsp+0x48]
  442632:	mov    QWORD PTR [rsp+0x20],rax
  442637:	call   0x4418e0
  44263c:	mov    r8d,DWORD PTR [rsp+0x4c]
  442641:	mov    rsi,rax
  442644:	cmp    r8d,0xffff8000
  44264b:	je     0x442680
  44264d:	mov    ecx,DWORD PTR [rsp+0x48]
  442651:	mov    r9,rbx
  442654:	mov    rdx,rax
  442657:	call   0x442520
  44265c:	mov    rcx,rsi
  44265f:	call   0x443bf0
  442664:	nop
  442665:	add    rsp,0x68
  442669:	pop    rbx
  44266a:	pop    rsi
  44266b:	ret    
  44266c:	nop    DWORD PTR [rax+0x0]
  442670:	mov    DWORD PTR [rdx+0x10],0x6
  442677:	mov    r8d,0x7
  44267d:	jmp    0x442606
  44267f:	nop
  442680:	mov    ecx,DWORD PTR [rsp+0x48]
  442684:	mov    r8,rbx
  442687:	mov    rdx,rax
  44268a:	call   0x441c70
  44268f:	mov    rcx,rsi
  442692:	call   0x443bf0
  442697:	nop
  442698:	add    rsp,0x68
  44269c:	pop    rbx
  44269d:	pop    rsi
  44269e:	ret    
  44269f:	nop
  4426a0:	push   rsi
  4426a1:	push   rbx
  4426a2:	sub    rsp,0x78
  4426a6:	mov    r8d,DWORD PTR [rdx+0x10]
  4426aa:	fld    TBYTE PTR [rcx]
  4426ac:	mov    rbx,rdx
  4426af:	test   r8d,r8d
  4426b2:	js     0x4427f0
  4426b8:	je     0x4427d0
  4426be:	lea    rdx,[rsp+0x40]
  4426c3:	lea    r9,[rsp+0x5c]
  4426c8:	mov    ecx,0x2
  4426cd:	fstp   TBYTE PTR [rsp+0x60]
  4426d1:	mov    rax,QWORD PTR [rsp+0x60]
  4426d6:	mov    QWORD PTR [rsp+0x40],rax
  4426db:	mov    rax,QWORD PTR [rsp+0x68]
  4426e0:	mov    QWORD PTR [rsp+0x48],rax
  4426e5:	lea    rax,[rsp+0x58]
  4426ea:	mov    QWORD PTR [rsp+0x20],rax
  4426ef:	call   0x4418e0
  4426f4:	mov    r8d,DWORD PTR [rsp+0x5c]
  4426f9:	mov    rsi,rax
  4426fc:	cmp    r8d,0xffff8000
  442703:	je     0x442810
  442709:	cmp    r8d,0xfffffffd
  44270d:	jl     0x442790
  442713:	mov    eax,DWORD PTR [rbx+0x10]
  442716:	cmp    r8d,eax
  442719:	jg     0x442790
  44271b:	test   BYTE PTR [rbx+0x9],0x8
  44271f:	jne    0x442802
  442725:	mov    rcx,rsi
  442728:	mov    DWORD PTR [rsp+0x3c],r8d
  44272d:	call   0x4493c0
  442732:	mov    r8d,DWORD PTR [rsp+0x3c]
  442737:	sub    eax,r8d
  44273a:	test   eax,eax
  44273c:	mov    DWORD PTR [rbx+0x10],eax
  44273f:	js     0x442821
  442745:	mov    ecx,DWORD PTR [rsp+0x58]
  442749:	mov    rdx,rsi
  44274c:	mov    r9,rbx
  44274f:	call   0x441e00
  442754:	mov    eax,DWORD PTR [rbx+0xc]
  442757:	lea    edx,[rax-0x1]
  44275a:	test   eax,eax
  44275c:	mov    DWORD PTR [rbx+0xc],edx
  44275f:	jle    0x4427bd
  442761:	mov    rdx,rbx
  442764:	mov    ecx,0x20
  442769:	call   0x4419e0
  44276e:	mov    r8d,DWORD PTR [rbx+0xc]
  442772:	lea    r9d,[r8-0x1]
  442776:	test   r8d,r8d
  442779:	mov    DWORD PTR [rbx+0xc],r9d
  44277d:	jg     0x442761
  44277f:	mov    rcx,rsi
  442782:	call   0x443bf0
  442787:	nop
  442788:	add    rsp,0x78
  44278c:	pop    rbx
  44278d:	pop    rsi
  44278e:	ret    
  44278f:	nop
  442790:	test   BYTE PTR [rbx+0x9],0x8
  442794:	jne    0x4427e2
  442796:	mov    rcx,rsi
  442799:	mov    DWORD PTR [rsp+0x3c],r8d
  44279e:	call   0x4493c0
  4427a3:	mov    r8d,DWORD PTR [rsp+0x3c]
  4427a8:	sub    eax,0x1
  4427ab:	mov    DWORD PTR [rbx+0x10],eax
  4427ae:	mov    ecx,DWORD PTR [rsp+0x58]
  4427b2:	mov    r9,rbx
  4427b5:	mov    rdx,rsi
  4427b8:	call   0x442520
  4427bd:	mov    rcx,rsi
  4427c0:	call   0x443bf0
  4427c5:	nop
  4427c6:	add    rsp,0x78
  4427ca:	pop    rbx
  4427cb:	pop    rsi
  4427cc:	ret    
  4427cd:	nop    DWORD PTR [rax]
  4427d0:	mov    DWORD PTR [rdx+0x10],0x1
  4427d7:	mov    r8d,0x1
  4427dd:	jmp    0x4426be
  4427e2:	sub    DWORD PTR [rbx+0x10],0x1
  4427e6:	jmp    0x4427ae
  4427e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4427f0:	mov    DWORD PTR [rdx+0x10],0x6
  4427f7:	mov    r8d,0x6
  4427fd:	jmp    0x4426be
  442802:	sub    eax,r8d
  442805:	mov    DWORD PTR [rbx+0x10],eax
  442808:	jmp    0x442745
  44280d:	nop    DWORD PTR [rax]
  442810:	mov    ecx,DWORD PTR [rsp+0x58]
  442814:	mov    r8,rbx
  442817:	mov    rdx,rax
  44281a:	call   0x441c70
  44281f:	jmp    0x4427bd
  442821:	mov    edx,DWORD PTR [rbx+0xc]
  442824:	test   edx,edx
  442826:	jle    0x442745
  44282c:	add    eax,edx
  44282e:	mov    DWORD PTR [rbx+0xc],eax
  442831:	jmp    0x442745
  442836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  442840:	push   rbp
  442841:	push   r14
  442843:	push   r13
  442845:	push   r12
  442847:	push   rdi
  442848:	push   rsi
  442849:	push   rbx
  44284a:	mov    rbp,rsp
  44284d:	sub    rsp,0x20
  442851:	mov    r10d,0x12
  442857:	mov    eax,0x18
  44285c:	cmp    ecx,0x6f
  44285f:	mov    rbx,r8
  442862:	mov    r8d,DWORD PTR [r8+0x10]
  442866:	mov    r11d,ecx
  442869:	setne  cl
  44286c:	mov    edi,DWORD PTR [rbx+0x8]
  44286f:	movzx  ecx,cl
  442872:	cmovne eax,r10d
  442876:	mov    r10b,0x0
  442879:	add    ecx,0x3
  44287c:	test   r8d,r8d
  44287f:	mov    r9,rdx
  442882:	cmovns r10d,r8d
  442886:	add    r10d,eax
  442889:	test   edi,0x1000
  44288f:	je     0x44289c
  442891:	cmp    WORD PTR [rbx+0x20],0x0
  442896:	jne    0x442a63
  44289c:	movsxd r12,DWORD PTR [rbx+0xc]
  4428a0:	movsxd rax,r10d
  4428a3:	cmp    r10d,r12d
  4428a6:	cmovl  rax,r12
  4428aa:	add    rax,0x1e
  4428ae:	and    rax,0xfffffffffffffff0
  4428b2:	call   0x43d410
  4428b7:	xor    edx,edx
  4428b9:	sub    rsp,rax
  4428bc:	cmp    r11d,0x6f
  4428c0:	lea    rsi,[rsp+0x20]
  4428c5:	setne  dl
  4428c8:	test   r9,r9
  4428cb:	lea    edx,[rdx*8+0x7]
  4428d2:	mov    r10,rsi
  4428d5:	je     0x442b82
  4428db:	mov    r13d,r11d
  4428de:	and    r13d,0x20
  4428e2:	jmp    0x4428f0
  4428e4:	shr    r9,cl
  4428e7:	mov    BYTE PTR [r10-0x1],r14b
  4428eb:	test   r9,r9
  4428ee:	je     0x442915
  4428f0:	mov    eax,edx
  4428f2:	add    r10,0x1
  4428f6:	and    eax,r9d
  4428f9:	lea    r14d,[rax+0x30]
  4428fd:	cmp    r14b,0x39
  442901:	jbe    0x4428e4
  442903:	add    eax,0x37
  442906:	shr    r9,cl
  442909:	or     eax,r13d
  44290c:	test   r9,r9
  44290f:	mov    BYTE PTR [r10-0x1],al
  442913:	jne    0x4428f0
  442915:	cmp    rsi,r10
  442918:	je     0x442b82
  44291e:	test   r8d,r8d
  442921:	jle    0x442ae2
  442927:	mov    rax,rsi
  44292a:	sub    rax,r10
  44292d:	add    eax,r8d
  442930:	test   eax,eax
  442932:	jle    0x442ae2
  442938:	sub    eax,0x1
  44293b:	mov    rdx,rax
  44293e:	lea    rcx,[r10+rax*1+0x1]
  442943:	mov    rax,r10
  442946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  442950:	add    rax,0x1
  442954:	mov    BYTE PTR [rax-0x1],0x30
  442958:	cmp    rax,rcx
  44295b:	jne    0x442950
  44295d:	movsxd rax,edx
  442960:	lea    r10,[r10+rax*1+0x1]
  442965:	cmp    rsi,r10
  442968:	jne    0x442980
  44296a:	test   r8d,r8d
  44296d:	je     0x442980
  44296f:	mov    BYTE PTR [r10],0x30
  442973:	add    r10,0x1
  442977:	nop    WORD PTR [rax+rax*1+0x0]
  442980:	mov    rax,r10
  442983:	sub    rax,rsi
  442986:	cmp    r12d,eax
  442989:	jle    0x442ab0
  44298f:	sub    r12d,eax
  442992:	test   r12d,r12d
  442995:	mov    DWORD PTR [rbx+0xc],r12d
  442999:	jle    0x442be7
  44299f:	cmp    r11d,0x6f
  4429a3:	mov    edx,DWORD PTR [rbx+0x8]
  4429a6:	je     0x442b70
  4429ac:	test   dh,0x8
  4429af:	je     0x442b30
  4429b5:	lea    r13d,[r12-0x2]
  4429ba:	test   r13d,r13d
  4429bd:	jle    0x4429c8
  4429bf:	test   r8d,r8d
  4429c2:	js     0x442a7d
  4429c8:	test   r13d,r13d
  4429cb:	mov    BYTE PTR [r10],r11b
  4429ce:	lea    rdi,[r10+0x2]
  4429d2:	mov    BYTE PTR [r10+0x1],0x30
  4429d7:	jle    0x442ad8
  4429dd:	and    dh,0x4
  4429e0:	jne    0x442b03
  4429e6:	lea    r14d,[r13-0x1]
  4429ea:	mov    r12d,r14d
  4429ed:	nop    DWORD PTR [rax]
  4429f0:	sub    r12d,0x1
  4429f4:	mov    rdx,rbx
  4429f7:	mov    ecx,0x20
  4429fc:	call   0x4419e0
  442a01:	lea    eax,[r12+0x1]
  442a06:	test   eax,eax
  442a08:	jg     0x4429f0
  442a0a:	test   r14d,r14d
  442a0d:	lea    r13d,[r14-0x1]
  442a11:	mov    r12d,0x0
  442a17:	cmovns r12d,r14d
  442a1b:	sub    r13d,r12d
  442a1e:	cmp    rsi,rdi
  442a21:	jb     0x442b10
  442a27:	nop    WORD PTR [rax+rax*1+0x0]
  442a30:	test   r13d,r13d
  442a33:	lea    esi,[r13-0x1]
  442a37:	jle    0x442a55
  442a39:	nop    DWORD PTR [rax+0x0]
  442a40:	mov    rdx,rbx
  442a43:	mov    ecx,0x20
  442a48:	sub    esi,0x1
  442a4b:	call   0x4419e0
  442a50:	cmp    esi,0xffffffff
  442a53:	jne    0x442a40
  442a55:	mov    rsp,rbp
  442a58:	pop    rbx
  442a59:	pop    rsi
  442a5a:	pop    rdi
  442a5b:	pop    r12
  442a5d:	pop    r13
  442a5f:	pop    r14
  442a61:	pop    rbp
  442a62:	ret    
  442a63:	mov    eax,r10d
  442a66:	mov    edx,0x55555556
  442a6b:	imul   edx
  442a6d:	mov    eax,r10d
  442a70:	sar    eax,0x1f
  442a73:	sub    edx,eax
  442a75:	add    r10d,edx
  442a78:	jmp    0x44289c
  442a7d:	mov    eax,edx
  442a7f:	and    eax,0x600
  442a84:	cmp    eax,0x200
  442a89:	je     0x442b90
  442a8f:	mov    r12d,r13d
  442a92:	test   dh,0x8
  442a95:	mov    r13d,r12d
  442a98:	mov    rdi,r10
  442a9b:	je     0x4429dd
  442aa1:	mov    r13d,r12d
  442aa4:	jmp    0x4429c8
  442aa9:	nop    DWORD PTR [rax+0x0]
  442ab0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  442ab7:	mov    r13d,0xffffffff
  442abd:	cmp    r11d,0x6f
  442ac1:	je     0x442ad5
  442ac3:	mov    edx,DWORD PTR [rbx+0x8]
  442ac6:	mov    eax,edx
  442ac8:	and    eax,0x800
  442acd:	test   eax,eax
  442acf:	jne    0x4429c8
  442ad5:	mov    rdi,r10
  442ad8:	cmp    rsi,rdi
  442adb:	jb     0x442b10
  442add:	jmp    0x442a55
  442ae2:	cmp    r11d,0x6f
  442ae6:	jne    0x442965
  442aec:	test   BYTE PTR [rbx+0x9],0x8
  442af0:	je     0x442965
  442af6:	mov    BYTE PTR [r10],0x30
  442afa:	add    r10,0x1
  442afe:	jmp    0x442965
  442b03:	cmp    rsi,rdi
  442b06:	jae    0x442bef
  442b0c:	nop    DWORD PTR [rax+0x0]
  442b10:	sub    rdi,0x1
  442b14:	movsx  ecx,BYTE PTR [rdi]
  442b17:	mov    rdx,rbx
  442b1a:	call   0x4419e0
  442b1f:	cmp    rsi,rdi
  442b22:	jb     0x442b10
  442b24:	jmp    0x442a30
  442b29:	nop    DWORD PTR [rax+0x0]
  442b30:	test   r8d,r8d
  442b33:	jns    0x442a92
  442b39:	mov    eax,edx
  442b3b:	and    eax,0x600
  442b40:	cmp    eax,0x200
  442b45:	je     0x442bde
  442b4b:	cmp    r11d,0x6f
  442b4f:	jne    0x442a92
  442b55:	and    dh,0x4
  442b58:	jne    0x442b7a
  442b5a:	lea    r14d,[r12-0x1]
  442b5f:	mov    rdi,r10
  442b62:	jmp    0x4429ea
  442b67:	nop    WORD PTR [rax+rax*1+0x0]
  442b70:	test   r8d,r8d
  442b73:	js     0x442b39
  442b75:	and    dh,0x4
  442b78:	je     0x442b5a
  442b7a:	mov    rdi,r10
  442b7d:	mov    r13d,r12d
  442b80:	jmp    0x442b1f
  442b82:	and    edi,0xfffff7ff
  442b88:	mov    DWORD PTR [rbx+0x8],edi
  442b8b:	jmp    0x44291e
  442b90:	lea    r8d,[r12-0x3]
  442b95:	mov    r12d,r8d
  442b98:	mov    eax,r12d
  442b9b:	lea    rcx,[r10+rax*1+0x1]
  442ba0:	mov    rax,r10
  442ba3:	add    rax,0x1
  442ba7:	mov    BYTE PTR [rax-0x1],0x30
  442bab:	cmp    rax,rcx
  442bae:	jne    0x442ba3
  442bb0:	movsxd rax,r8d
  442bb3:	cmp    r11d,0x6f
  442bb7:	lea    r10,[r10+rax*1+0x1]
  442bbc:	je     0x442bd0
  442bbe:	mov    eax,edx
  442bc0:	mov    r13d,0xffffffff
  442bc6:	and    eax,0x800
  442bcb:	jmp    0x442acd
  442bd0:	mov    rdi,r10
  442bd3:	mov    r13d,0xffffffff
  442bd9:	jmp    0x442ad8
  442bde:	sub    r12d,0x1
  442be2:	mov    r8d,r12d
  442be5:	jmp    0x442b98
  442be7:	mov    r13d,r12d
  442bea:	jmp    0x442abd
  442bef:	lea    esi,[r13-0x1]
  442bf3:	jmp    0x442a40
  442bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  442c00:	push   r13
  442c02:	push   r12
  442c04:	push   rbp
  442c05:	push   rdi
  442c06:	push   rsi
  442c07:	push   rbx
  442c08:	sub    rsp,0x68
  442c0c:	mov    r9,QWORD PTR [rcx]
  442c0f:	mov    r10d,DWORD PTR [rcx+0x8]
  442c13:	mov    rbx,rdx
  442c16:	mov    rax,r9
  442c19:	mov    QWORD PTR [rsp+0x30],r9
  442c1e:	mov    DWORD PTR [rsp+0x38],r10d
  442c23:	shr    rax,0x20
  442c27:	mov    r8,r10
  442c2a:	and    eax,0x7fffffff
  442c2f:	or     r9d,eax
  442c32:	lea    eax,[r10+r10*1]
  442c36:	mov    edx,r9d
  442c39:	neg    edx
  442c3b:	and    eax,0xfffe
  442c40:	or     edx,r9d
  442c43:	shr    edx,0x1f
  442c46:	or     edx,eax
  442c48:	mov    eax,0xfffe
  442c4d:	sub    eax,edx
  442c4f:	sar    eax,0x10
  442c52:	test   eax,eax
  442c54:	jne    0x443040
  442c5a:	movzx  esi,WORD PTR [rsp+0x38]
  442c5f:	mov    ecx,esi
  442c61:	and    ecx,0x8000
  442c67:	je     0x442c70
  442c69:	or     DWORD PTR [rbx+0x8],0x80
  442c70:	and    r8w,0x7fff
  442c76:	cmp    r8w,0x7fff
  442c7c:	jne    0x442ca0
  442c7e:	test   r9d,r9d
  442c81:	jne    0x442ca0
  442c83:	lea    rdx,[rip+0x1798a]        # 0x45a614
  442c8a:	mov    r8,rbx
  442c8d:	call   0x441c70
  442c92:	jmp    0x443015
  442c97:	nop    WORD PTR [rax+rax*1+0x0]
  442ca0:	and    si,0x7fff
  442ca5:	jne    0x442dd0
  442cab:	mov    rax,QWORD PTR [rsp+0x30]
  442cb0:	test   rax,rax
  442cb3:	jne    0x44305f
  442cb9:	mov    r9d,DWORD PTR [rbx+0x10]
  442cbd:	cmp    r9d,0xe
  442cc1:	jbe    0x4430dc
  442cc7:	xor    esi,esi
  442cc9:	mov    r8d,DWORD PTR [rbx+0x8]
  442ccd:	lea    rbp,[rsp+0x40]
  442cd2:	test   r9d,r9d
  442cd5:	jle    0x4430ec
  442cdb:	lea    rax,[rbp+0x1]
  442cdf:	mov    BYTE PTR [rsp+0x40],0x2e
  442ce4:	mov    r10d,DWORD PTR [rbx+0xc]
  442ce8:	lea    rdi,[rax+0x1]
  442cec:	mov    BYTE PTR [rax],0x30
  442cef:	mov    r12d,0x2
  442cf5:	test   r10d,r10d
  442cf8:	jg     0x442efc
  442cfe:	xchg   ax,ax
  442d00:	test   r8b,0x80
  442d04:	jne    0x442fc0
  442d0a:	test   r8d,0x100
  442d11:	jne    0x4430b0
  442d17:	and    r8d,0x40
  442d1b:	jne    0x4430c2
  442d21:	mov    rdx,rbx
  442d24:	mov    ecx,0x30
  442d29:	call   0x4419e0
  442d2e:	mov    ecx,DWORD PTR [rbx+0x8]
  442d31:	mov    rdx,rbx
  442d34:	and    ecx,0x20
  442d37:	or     ecx,0x58
  442d3a:	call   0x4419e0
  442d3f:	mov    eax,DWORD PTR [rbx+0xc]
  442d42:	test   eax,eax
  442d44:	jle    0x442d6c
  442d46:	test   BYTE PTR [rbx+0x9],0x2
  442d4a:	je     0x442d6c
  442d4c:	sub    eax,0x1
  442d4f:	mov    DWORD PTR [rbx+0xc],eax
  442d52:	mov    rdx,rbx
  442d55:	mov    ecx,0x30
  442d5a:	call   0x4419e0
  442d5f:	mov    eax,DWORD PTR [rbx+0xc]
  442d62:	lea    edx,[rax-0x1]
  442d65:	test   eax,eax
  442d67:	mov    DWORD PTR [rbx+0xc],edx
  442d6a:	jg     0x442d52
  442d6c:	cmp    rdi,rbp
  442d6f:	lea    r13,[rsp+0x2e]
  442d74:	ja     0x442da9
  442d76:	jmp    0x442fdf
  442d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  442d80:	movzx  eax,WORD PTR [rbx+0x20]
  442d84:	test   ax,ax
  442d87:	mov    WORD PTR [rsp+0x2e],ax
  442d8c:	je     0x442da0
  442d8e:	mov    r8,rbx
  442d91:	mov    edx,0x1
  442d96:	mov    rcx,r13
  442d99:	call   0x441a40
  442d9e:	xchg   ax,ax
  442da0:	cmp    rdi,rbp
  442da3:	je     0x442fdf
  442da9:	sub    rdi,0x1
  442dad:	movsx  ecx,BYTE PTR [rdi]
  442db0:	cmp    ecx,0x2e
  442db3:	je     0x443022
  442db9:	cmp    ecx,0x2c
  442dbc:	je     0x442d80
  442dbe:	mov    rdx,rbx
  442dc1:	call   0x4419e0
  442dc6:	jmp    0x442da0
  442dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  442dd0:	mov    r9d,DWORD PTR [rbx+0x10]
  442dd4:	sub    si,0x3fff
  442dd9:	mov    rax,QWORD PTR [rsp+0x30]
  442dde:	cmp    r9d,0xe
  442de2:	ja     0x44308d
  442de8:	test   rax,rax
  442deb:	js     0x442df5
  442ded:	nop    DWORD PTR [rax]
  442df0:	add    rax,rax
  442df3:	jns    0x442df0
  442df5:	mov    ecx,0xe
  442dfa:	mov    edx,0x4
  442dff:	shr    rax,1
  442e02:	sub    ecx,r9d
  442e05:	shl    ecx,0x2
  442e08:	shl    rdx,cl
  442e0b:	add    rax,rdx
  442e0e:	js     0x4430d4
  442e14:	add    rax,rax
  442e17:	mov    ecx,0xf
  442e1c:	sub    ecx,r9d
  442e1f:	shl    ecx,0x2
  442e22:	shr    rax,cl
  442e25:	mov    r8d,DWORD PTR [rbx+0x8]
  442e29:	lea    rbp,[rsp+0x40]
  442e2e:	mov    rdi,rbp
  442e31:	mov    r11d,r8d
  442e34:	mov    r10d,r8d
  442e37:	and    r11d,0x800
  442e3e:	and    r10d,0x20
  442e42:	jmp    0x442e73
  442e44:	mov    ecx,DWORD PTR [rbx+0x10]
  442e47:	test   ecx,ecx
  442e49:	jle    0x442e51
  442e4b:	sub    ecx,0x1
  442e4e:	mov    DWORD PTR [rbx+0x10],ecx
  442e51:	shr    rax,0x4
  442e55:	mov    r9,rdi
  442e58:	test   edx,edx
  442e5a:	je     0x442ec4
  442e5c:	cmp    edx,0x9
  442e5f:	lea    rdi,[r9+0x1]
  442e63:	jle    0x442ed7
  442e65:	add    edx,0x37
  442e68:	or     edx,r10d
  442e6b:	mov    BYTE PTR [r9],dl
  442e6e:	test   rax,rax
  442e71:	je     0x442ee0
  442e73:	mov    edx,eax
  442e75:	and    edx,0xf
  442e78:	cmp    edx,eax
  442e7a:	jne    0x442e44
  442e7c:	cmp    rdi,rbp
  442e7f:	ja     0x442e92
  442e81:	test   r11d,r11d
  442e84:	jne    0x442e92
  442e86:	mov    r12d,DWORD PTR [rbx+0x10]
  442e8a:	mov    r9,rdi
  442e8d:	test   r12d,r12d
  442e90:	jle    0x442e99
  442e92:	lea    r9,[rdi+0x1]
  442e96:	mov    BYTE PTR [rdi],0x2e
  442e99:	cmp    rax,0x1
  442e9d:	jbe    0x4430a9
  442ea3:	lea    ecx,[rsi-0x1]
  442ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  442eb0:	shr    rax,1
  442eb3:	mov    esi,ecx
  442eb5:	cmp    rax,0x1
  442eb9:	lea    ecx,[rsi-0x1]
  442ebc:	jne    0x442eb0
  442ebe:	xor    al,al
  442ec0:	test   edx,edx
  442ec2:	jne    0x442e5c
  442ec4:	cmp    r9,rbp
  442ec7:	ja     0x442ed3
  442ec9:	mov    ecx,DWORD PTR [rbx+0x10]
  442ecc:	mov    rdi,r9
  442ecf:	test   ecx,ecx
  442ed1:	js     0x442e6e
  442ed3:	lea    rdi,[r9+0x1]
  442ed7:	add    edx,0x30
  442eda:	jmp    0x442e6b
  442edc:	nop    DWORD PTR [rax+0x0]
  442ee0:	cmp    rdi,rbp
  442ee3:	je     0x4430e3
  442ee9:	mov    r10d,DWORD PTR [rbx+0xc]
  442eed:	mov    r12d,0x2
  442ef3:	test   r10d,r10d
  442ef6:	jle    0x442d00
  442efc:	mov    edx,DWORD PTR [rbx+0x10]
  442eff:	mov    rax,rdi
  442f02:	movsx  r11d,si
  442f06:	sub    rax,rbp
  442f09:	lea    ecx,[rdx+rax*1]
  442f0c:	test   edx,edx
  442f0e:	mov    edx,r8d
  442f11:	cmovg  eax,ecx
  442f14:	and    edx,0x1c0
  442f1a:	mov    ecx,0x66666667
  442f1f:	cmp    edx,0x1
  442f22:	sbb    edx,edx
  442f24:	lea    r9d,[rax+rdx*1+0x6]
  442f29:	mov    eax,r11d
  442f2c:	imul   ecx
  442f2e:	mov    eax,r11d
  442f31:	sar    eax,0x1f
  442f34:	mov    ecx,edx
  442f36:	sar    ecx,0x2
  442f39:	sub    ecx,eax
  442f3b:	je     0x442f60
  442f3d:	mov    r11d,0x66666667
  442f43:	mov    eax,ecx
  442f45:	sar    ecx,0x1f
  442f48:	add    r9d,0x1
  442f4c:	imul   r11d
  442f4f:	add    r12d,0x1
  442f53:	sar    edx,0x2
  442f56:	sub    edx,ecx
  442f58:	mov    ecx,edx
  442f5a:	jne    0x442f43
  442f5c:	movsx  r12d,r12w
  442f60:	cmp    r10d,r9d
  442f63:	jle    0x443030
  442f69:	sub    r10d,r9d
  442f6c:	test   r8d,0x600
  442f73:	jne    0x4430a0
  442f79:	lea    eax,[r10-0x1]
  442f7d:	test   r10d,r10d
  442f80:	mov    DWORD PTR [rbx+0xc],eax
  442f83:	jle    0x442d00
  442f89:	nop    DWORD PTR [rax+0x0]
  442f90:	mov    rdx,rbx
  442f93:	mov    ecx,0x20
  442f98:	call   0x4419e0
  442f9d:	mov    eax,DWORD PTR [rbx+0xc]
  442fa0:	lea    edx,[rax-0x1]
  442fa3:	test   eax,eax
  442fa5:	mov    DWORD PTR [rbx+0xc],edx
  442fa8:	jg     0x442f90
  442faa:	mov    r8d,DWORD PTR [rbx+0x8]
  442fae:	test   r8b,0x80
  442fb2:	je     0x442d0a
  442fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  442fc0:	mov    rdx,rbx
  442fc3:	mov    ecx,0x2d
  442fc8:	call   0x4419e0
  442fcd:	jmp    0x442d21
  442fd2:	mov    rdx,rbx
  442fd5:	mov    ecx,0x30
  442fda:	call   0x4419e0
  442fdf:	mov    eax,DWORD PTR [rbx+0x10]
  442fe2:	lea    edx,[rax-0x1]
  442fe5:	test   eax,eax
  442fe7:	mov    DWORD PTR [rbx+0x10],edx
  442fea:	jg     0x442fd2
  442fec:	mov    ecx,DWORD PTR [rbx+0x8]
  442fef:	mov    rdx,rbx
  442ff2:	and    ecx,0x20
  442ff5:	or     ecx,0x50
  442ff8:	call   0x4419e0
  442ffd:	add    DWORD PTR [rbx+0xc],r12d
  443001:	or     DWORD PTR [rbx+0x8],0x1c0
  443008:	movsx  rcx,si
  44300c:	mov    rdx,rbx
  44300f:	call   0x442250
  443014:	nop
  443015:	add    rsp,0x68
  443019:	pop    rbx
  44301a:	pop    rsi
  44301b:	pop    rdi
  44301c:	pop    rbp
  44301d:	pop    r12
  44301f:	pop    r13
  443021:	ret    
  443022:	mov    rcx,rbx
  443025:	call   0x441d10
  44302a:	jmp    0x442da0
  44302f:	nop
  443030:	mov    DWORD PTR [rbx+0xc],0xffffffff
  443037:	jmp    0x442d00
  44303c:	nop    DWORD PTR [rax+0x0]
  443040:	lea    rdx,[rip+0x175c9]        # 0x45a610
  443047:	mov    r8,rbx
  44304a:	xor    ecx,ecx
  44304c:	call   0x441c70
  443051:	nop
  443052:	add    rsp,0x68
  443056:	pop    rbx
  443057:	pop    rsi
  443058:	pop    rdi
  443059:	pop    rbp
  44305a:	pop    r12
  44305c:	pop    r13
  44305e:	ret    
  44305f:	js     0x443101
  443065:	mov    edx,0xffffc001
  44306a:	nop    WORD PTR [rax+rax*1+0x0]
  443070:	mov    esi,edx
  443072:	sub    edx,0x1
  443075:	add    rax,rax
  443078:	jns    0x443070
  44307a:	mov    r9d,DWORD PTR [rbx+0x10]
  44307e:	cmp    r9d,0xe
  443082:	jbe    0x442df5
  443088:	jmp    0x442e25
  44308d:	test   rax,rax
  443090:	jne    0x442e25
  443096:	jmp    0x442cc9
  44309b:	nop    DWORD PTR [rax+rax*1+0x0]
  4430a0:	mov    DWORD PTR [rbx+0xc],r10d
  4430a4:	jmp    0x442d00
  4430a9:	xor    eax,eax
  4430ab:	jmp    0x442e58
  4430b0:	mov    rdx,rbx
  4430b3:	mov    ecx,0x2b
  4430b8:	call   0x4419e0
  4430bd:	jmp    0x442d21
  4430c2:	mov    rdx,rbx
  4430c5:	mov    ecx,0x20
  4430ca:	call   0x4419e0
  4430cf:	jmp    0x442d21
  4430d4:	add    esi,0x1
  4430d7:	jmp    0x442e17
  4430dc:	xor    eax,eax
  4430de:	jmp    0x442df0
  4430e3:	mov    r9d,DWORD PTR [rbx+0x10]
  4430e7:	jmp    0x442cd2
  4430ec:	test   r8d,0x800
  4430f3:	mov    rax,rbp
  4430f6:	je     0x442ce4
  4430fc:	jmp    0x442cdb
  443101:	mov    esi,0xffffc002
  443106:	jmp    0x44307a
  44310b:	nop    DWORD PTR [rax+rax*1+0x0]
  443110:	push   r15
  443112:	push   r14
  443114:	push   r13
  443116:	push   r12
  443118:	push   rbp
  443119:	push   rdi
  44311a:	push   rsi
  44311b:	push   rbx
  44311c:	sub    rsp,0xb8
  443123:	mov    r13,QWORD PTR [rsp+0x120]
  44312b:	mov    r15d,ecx
  44312e:	mov    rdi,rdx
  443131:	mov    esi,r8d
  443134:	mov    rbx,r9
  443137:	and    r15d,0x6000
  44313e:	call   0x4495c8
  443143:	mov    eax,DWORD PTR [rax]
  443145:	lea    rcx,[rip+0x174e1]        # 0x45a62d
  44314c:	xor    edx,edx
  44314e:	mov    QWORD PTR [rsp+0x80],rdi
  443156:	mov    DWORD PTR [rsp+0x88],r15d
  44315e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  443169:	mov    DWORD PTR [rsp+0x90],0xffffffff
  443174:	mov    DWORD PTR [rsp+0x34],eax
  443178:	xor    eax,eax
  44317a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  443185:	mov    WORD PTR [rsp+0x98],ax
  44318d:	mov    DWORD PTR [rsp+0x9c],0x0
  443198:	mov    WORD PTR [rsp+0xa0],dx
  4431a0:	mov    DWORD PTR [rsp+0xa4],0x0
  4431ab:	mov    DWORD PTR [rsp+0xa8],esi
  4431b2:	call   0x449498
  4431b7:	test   rax,rax
  4431ba:	je     0x4431cc
  4431bc:	movsx  edx,BYTE PTR [rax]
  4431bf:	mov    eax,0x2
  4431c4:	sub    edx,0x30
  4431c7:	cmp    edx,0x2
  4431ca:	jbe    0x4431d9
  4431cc:	call   0x449710
  4431d1:	and    eax,0x1
  4431d4:	neg    eax
  4431d6:	add    eax,0x3
  4431d9:	lea    rdi,[rsp+0x70]
  4431de:	mov    DWORD PTR [rsp+0xac],eax
  4431e5:	movzx  eax,BYTE PTR [rbx]
  4431e8:	lea    rsi,[rsp+0x6e]
  4431ed:	lea    r12,[rsp+0x80]
  4431f5:	lea    rbp,[rip+0x17448]        # 0x45a644
  4431fc:	mov    QWORD PTR [rsp+0x28],rdi
  443201:	lea    rdi,[rsp+0x50]
  443206:	mov    QWORD PTR [rsp+0x38],rsi
  44320b:	mov    QWORD PTR [rsp+0x20],rdi
  443210:	mov    edi,r15d
  443213:	or     edi,0x200
  443219:	mov    DWORD PTR [rsp+0x48],edi
  44321d:	nop    DWORD PTR [rax]
  443220:	movsx  ecx,al
  443223:	lea    rsi,[rbx+0x1]
  443227:	test   ecx,ecx
  443229:	je     0x4432aa
  44322b:	cmp    ecx,0x25
  44322e:	jne    0x443290
  443230:	movzx  eax,BYTE PTR [rbx+0x1]
  443234:	xor    r10d,r10d
  443237:	xor    r14d,r14d
  44323a:	mov    DWORD PTR [rsp+0x88],r15d
  443242:	mov    DWORD PTR [rsp+0x90],0xffffffff
  44324d:	mov    rdi,rsi
  443250:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  44325b:	lea    r11,[r12+0xc]
  443260:	test   al,al
  443262:	je     0x44340b
  443268:	lea    edx,[rax-0x20]
  44326b:	lea    rbx,[rdi+0x1]
  44326f:	movsx  ecx,al
  443272:	cmp    dl,0x5a
  443275:	ja     0x443880
  44327b:	movzx  edx,dl
  44327e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  443283:	add    rdx,rbp
  443286:	jmp    rdx
  443288:	nop    DWORD PTR [rax+rax*1+0x0]
  443290:	mov    rdx,r12
  443293:	call   0x4419e0
  443298:	movzx  eax,BYTE PTR [rbx+0x1]
  44329c:	mov    rbx,rsi
  44329f:	lea    rsi,[rbx+0x1]
  4432a3:	movsx  ecx,al
  4432a6:	test   ecx,ecx
  4432a8:	jne    0x44322b
  4432aa:	mov    eax,DWORD PTR [rsp+0xa4]
  4432b1:	add    rsp,0xb8
  4432b8:	pop    rbx
  4432b9:	pop    rsi
  4432ba:	pop    rdi
  4432bb:	pop    rbp
  4432bc:	pop    r12
  4432be:	pop    r13
  4432c0:	pop    r14
  4432c2:	pop    r15
  4432c4:	ret    
  4432c5:	sub    r10d,0x2
  4432c9:	mov    rax,r13
  4432cc:	cmp    r10d,0x1
  4432d0:	jbe    0x4438c3
  4432d6:	mov    rsi,QWORD PTR [rax]
  4432d9:	add    r13,0x8
  4432dd:	test   rsi,rsi
  4432e0:	je     0x4433a5
  4432e6:	mov    rcx,rsi
  4432e9:	call   0x4493c0
  4432ee:	mov    edx,eax
  4432f0:	mov    r8,r12
  4432f3:	mov    rcx,rsi
  4432f6:	call   0x441b60
  4432fb:	nop    DWORD PTR [rax+rax*1+0x0]
  443300:	movzx  eax,BYTE PTR [rbx]
  443303:	jmp    0x443220
  443308:	nop    DWORD PTR [rax+rax*1+0x0]
  443310:	test   r14d,r14d
  443313:	jne    0x443323
  443315:	cmp    DWORD PTR [rsp+0x88],r15d
  44331d:	je     0x443a8b
  443323:	mov    rdx,QWORD PTR [r13+0x0]
  443327:	lea    rsi,[r13+0x8]
  44332b:	mov    r8,r12
  44332e:	mov    ecx,0x78
  443333:	mov    QWORD PTR [rsp+0x78],0x0
  44333c:	mov    r13,rsi
  44333f:	mov    QWORD PTR [rsp+0x70],rdx
  443344:	call   0x442840
  443349:	jmp    0x443300
  44334b:	nop    DWORD PTR [rax+rax*1+0x0]
  443350:	cmp    r10d,0x5
  443354:	mov    rax,QWORD PTR [r13+0x0]
  443358:	je     0x4439ca
  44335e:	cmp    r10d,0x1
  443362:	je     0x443a54
  443368:	cmp    r10d,0x2
  44336c:	je     0x443378
  44336e:	cmp    r10d,0x3
  443372:	je     0x443afc
  443378:	mov    edx,DWORD PTR [rsp+0xa4]
  44337f:	add    r13,0x8
  443383:	mov    DWORD PTR [rax],edx
  443385:	jmp    0x443300
  44338a:	nop    WORD PTR [rax+rax*1+0x0]
  443390:	mov    ecx,DWORD PTR [rsp+0x34]
  443394:	call   0x4493c8
  443399:	test   rax,rax
  44339c:	mov    rsi,rax
  44339f:	jne    0x4432e6
  4433a5:	mov    edx,0x6
  4433aa:	lea    rsi,[rip+0x17275]        # 0x45a626
  4433b1:	jmp    0x4432f0
  4433b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4433c0:	movzx  eax,BYTE PTR [rdi+0x1]
  4433c4:	mov    r10d,0x2
  4433ca:	mov    r14d,0x4
  4433d0:	cmp    al,0x6c
  4433d2:	jne    0x443400
  4433d4:	lea    rbx,[rdi+0x2]
  4433d8:	movzx  eax,BYTE PTR [rdi+0x2]
  4433dc:	mov    r10d,0x3
  4433e2:	mov    r14d,0x4
  4433e8:	jmp    0x443400
  4433ea:	nop    WORD PTR [rax+rax*1+0x0]
  4433f0:	movzx  eax,BYTE PTR [rdi+0x1]
  4433f4:	mov    r10d,0x3
  4433fa:	mov    r14d,0x4
  443400:	test   al,al
  443402:	mov    rdi,rbx
  443405:	jne    0x443268
  44340b:	mov    rbx,rdi
  44340e:	jmp    0x443220
  443413:	mov    eax,DWORD PTR [rsp+0x88]
  44341a:	mov    rdx,r13
  44341d:	add    r13,0x8
  443421:	or     eax,0x20
  443424:	test   al,0x4
  443426:	mov    DWORD PTR [rsp+0x88],eax
  44342d:	je     0x44368b
  443433:	mov    rax,QWORD PTR [rdx]
  443436:	mov    rcx,QWORD PTR [rsp+0x20]
  44343b:	mov    rdx,r12
  44343e:	fld    TBYTE PTR [rax]
  443440:	fstp   TBYTE PTR [rsp+0x50]
  443444:	call   0x4426a0
  443449:	jmp    0x443300
  44344e:	xchg   ax,ax
  443450:	movzx  eax,BYTE PTR [rdi+0x1]
  443454:	mov    r10d,0x1
  44345a:	mov    r14d,0x4
  443460:	cmp    al,0x68
  443462:	jne    0x443400
  443464:	lea    rbx,[rdi+0x2]
  443468:	movzx  eax,BYTE PTR [rdi+0x2]
  44346c:	mov    r10d,0x5
  443472:	mov    r14d,0x4
  443478:	jmp    0x443400
  44347a:	nop    WORD PTR [rax+rax*1+0x0]
  443480:	mov    eax,DWORD PTR [rsp+0x88]
  443487:	mov    rdx,r13
  44348a:	add    r13,0x8
  44348e:	or     eax,0x20
  443491:	test   al,0x4
  443493:	mov    DWORD PTR [rsp+0x88],eax
  44349a:	je     0x4436b9
  4434a0:	mov    rax,QWORD PTR [rdx]
  4434a3:	mov    rcx,QWORD PTR [rsp+0x20]
  4434a8:	mov    rdx,r12
  4434ab:	fld    TBYTE PTR [rax]
  4434ad:	fstp   TBYTE PTR [rsp+0x50]
  4434b1:	call   0x442160
  4434b6:	jmp    0x443300
  4434bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4434c0:	mov    eax,DWORD PTR [rsp+0x88]
  4434c7:	mov    rdx,r13
  4434ca:	add    r13,0x8
  4434ce:	or     eax,0x20
  4434d1:	test   al,0x4
  4434d3:	mov    DWORD PTR [rsp+0x88],eax
  4434da:	je     0x4436e7
  4434e0:	mov    rax,QWORD PTR [rdx]
  4434e3:	mov    rcx,QWORD PTR [rsp+0x20]
  4434e8:	mov    rdx,r12
  4434eb:	fld    TBYTE PTR [rax]
  4434ed:	fstp   TBYTE PTR [rsp+0x50]
  4434f1:	call   0x4425f0
  4434f6:	jmp    0x443300
  4434fb:	nop    DWORD PTR [rax+rax*1+0x0]
  443500:	cmp    r10d,0x3
  443504:	je     0x4439dc
  44350a:	cmp    r10d,0x2
  44350e:	je     0x443a79
  443514:	mov    eax,DWORD PTR [r13+0x0]
  443518:	cmp    r10d,0x1
  44351c:	lea    rdx,[r13+0x8]
  443520:	mov    QWORD PTR [rsp+0x70],rax
  443525:	je     0x443abb
  44352b:	cmp    r10d,0x5
  44352f:	mov    r13,rdx
  443532:	je     0x443b10
  443538:	cmp    ecx,0x75
  44353b:	je     0x443a1c
  443541:	mov    r8,r12
  443544:	mov    rdx,rax
  443547:	call   0x442840
  44354c:	jmp    0x443300
  443551:	sub    r10d,0x2
  443555:	mov    rax,r13
  443558:	mov    DWORD PTR [rsp+0x90],0xffffffff
  443563:	cmp    r10d,0x1
  443567:	jbe    0x44370b
  44356d:	mov    eax,DWORD PTR [rax]
  44356f:	mov    rcx,QWORD PTR [rsp+0x28]
  443574:	mov    r8,r12
  443577:	mov    edx,0x1
  44357c:	add    r13,0x8
  443580:	mov    BYTE PTR [rsp+0x70],al
  443584:	call   0x441b60
  443589:	jmp    0x443300
  44358e:	xchg   ax,ax
  443590:	mov    eax,DWORD PTR [rsp+0x88]
  443597:	mov    rdx,r13
  44359a:	add    r13,0x8
  44359e:	or     eax,0x20
  4435a1:	test   al,0x4
  4435a3:	mov    DWORD PTR [rsp+0x88],eax
  4435aa:	je     0x443748
  4435b0:	mov    rax,QWORD PTR [rdx]
  4435b3:	mov    rcx,QWORD PTR [rsp+0x20]
  4435b8:	mov    rdx,r12
  4435bb:	fld    TBYTE PTR [rax]
  4435bd:	fstp   TBYTE PTR [rsp+0x50]
  4435c1:	call   0x442c00
  4435c6:	jmp    0x443300
  4435cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4435d0:	or     DWORD PTR [rsp+0x88],0x80
  4435db:	cmp    r10d,0x3
  4435df:	je     0x4439b8
  4435e5:	cmp    r10d,0x2
  4435e9:	je     0x443a67
  4435ef:	movsxd rcx,DWORD PTR [r13+0x0]
  4435f3:	cmp    r10d,0x1
  4435f7:	lea    rax,[r13+0x8]
  4435fb:	mov    QWORD PTR [rsp+0x70],rcx
  443600:	je     0x443acd
  443606:	cmp    r10d,0x5
  44360a:	mov    r13,rax
  44360d:	je     0x443b1f
  443613:	mov    rax,rcx
  443616:	mov    rdx,r12
  443619:	sar    rax,0x3f
  44361d:	mov    QWORD PTR [rsp+0x78],rax
  443622:	call   0x442250
  443627:	jmp    0x443300
  44362c:	nop    DWORD PTR [rax+0x0]
  443630:	or     DWORD PTR [rsp+0x88],0x4
  443638:	movzx  eax,BYTE PTR [rdi+0x1]
  44363c:	mov    r14d,0x4
  443642:	jmp    0x443400
  443647:	nop    WORD PTR [rax+rax*1+0x0]
  443650:	movzx  eax,BYTE PTR [rdi+0x1]
  443654:	cmp    al,0x36
  443656:	je     0x443998
  44365c:	cmp    al,0x33
  44365e:	je     0x443a2c
  443664:	mov    r10d,0x3
  44366a:	mov    r14d,0x4
  443670:	jmp    0x443400
  443675:	mov    eax,DWORD PTR [rsp+0x88]
  44367c:	mov    rdx,r13
  44367f:	add    r13,0x8
  443683:	test   al,0x4
  443685:	jne    0x443433
  44368b:	mov    rcx,QWORD PTR [rsp+0x20]
  443690:	fld    QWORD PTR [rdx]
  443692:	mov    rdx,r12
  443695:	fstp   TBYTE PTR [rsp+0x50]
  443699:	call   0x4426a0
  44369e:	jmp    0x443300
  4436a3:	mov    eax,DWORD PTR [rsp+0x88]
  4436aa:	mov    rdx,r13
  4436ad:	add    r13,0x8
  4436b1:	test   al,0x4
  4436b3:	jne    0x4434a0
  4436b9:	mov    rcx,QWORD PTR [rsp+0x20]
  4436be:	fld    QWORD PTR [rdx]
  4436c0:	mov    rdx,r12
  4436c3:	fstp   TBYTE PTR [rsp+0x50]
  4436c7:	call   0x442160
  4436cc:	jmp    0x443300
  4436d1:	mov    eax,DWORD PTR [rsp+0x88]
  4436d8:	mov    rdx,r13
  4436db:	add    r13,0x8
  4436df:	test   al,0x4
  4436e1:	jne    0x4434e0
  4436e7:	mov    rcx,QWORD PTR [rsp+0x20]
  4436ec:	fld    QWORD PTR [rdx]
  4436ee:	mov    rdx,r12
  4436f1:	fstp   TBYTE PTR [rsp+0x50]
  4436f5:	call   0x4425f0
  4436fa:	jmp    0x443300
  4436ff:	nop
  443700:	mov    DWORD PTR [rsp+0x90],0xffffffff
  44370b:	mov    eax,DWORD PTR [r13+0x0]
  44370f:	mov    rcx,QWORD PTR [rsp+0x28]
  443714:	lea    rsi,[r13+0x8]
  443718:	mov    r8,r12
  44371b:	mov    edx,0x1
  443720:	mov    r13,rsi
  443723:	mov    WORD PTR [rsp+0x70],ax
  443728:	call   0x441a40
  44372d:	jmp    0x443300
  443732:	mov    eax,DWORD PTR [rsp+0x88]
  443739:	mov    rdx,r13
  44373c:	add    r13,0x8
  443740:	test   al,0x4
  443742:	jne    0x4435b0
  443748:	mov    rcx,QWORD PTR [rsp+0x20]
  44374d:	fld    QWORD PTR [rdx]
  44374f:	mov    rdx,r12
  443752:	fstp   TBYTE PTR [rsp+0x50]
  443756:	call   0x442c00
  44375b:	jmp    0x443300
  443760:	test   r14d,r14d
  443763:	jne    0x443900
  443769:	or     DWORD PTR [rsp+0x88],0x200
  443774:	movzx  eax,BYTE PTR [rdi+0x1]
  443778:	jmp    0x443400
  44377d:	nop    DWORD PTR [rax]
  443780:	cmp    r14d,0x1
  443784:	jbe    0x4439ee
  44378a:	movzx  eax,BYTE PTR [rdi+0x1]
  44378e:	mov    r14d,0x4
  443794:	jmp    0x443400
  443799:	nop    DWORD PTR [rax+0x0]
  4437a0:	test   r14d,r14d
  4437a3:	jne    0x443829
  4437a9:	or     DWORD PTR [rsp+0x88],0x400
  4437b4:	movzx  eax,BYTE PTR [rdi+0x1]
  4437b8:	jmp    0x443400
  4437bd:	nop    DWORD PTR [rax]
  4437c0:	test   r14d,r14d
  4437c3:	jne    0x443829
  4437c5:	or     DWORD PTR [rsp+0x88],0x100
  4437d0:	movzx  eax,BYTE PTR [rdi+0x1]
  4437d4:	jmp    0x443400
  4437d9:	nop    DWORD PTR [rax+0x0]
  4437e0:	test   r14d,r14d
  4437e3:	jne    0x443829
  4437e5:	or     DWORD PTR [rsp+0x88],0x800
  4437f0:	movzx  eax,BYTE PTR [rdi+0x1]
  4437f4:	jmp    0x443400
  4437f9:	nop    DWORD PTR [rax+0x0]
  443800:	test   r14d,r14d
  443803:	jne    0x443829
  443805:	or     DWORD PTR [rsp+0x88],0x40
  44380d:	movzx  eax,BYTE PTR [rdi+0x1]
  443811:	jmp    0x443400
  443816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  443820:	test   r14d,r14d
  443823:	je     0x443932
  443829:	movzx  eax,BYTE PTR [rdi+0x1]
  44382d:	jmp    0x443400
  443832:	mov    rdx,r12
  443835:	call   0x4419e0
  44383a:	jmp    0x443300
  44383f:	nop
  443840:	test   r11,r11
  443843:	je     0x44378a
  443849:	test   r14d,0xfffffffd
  443850:	jne    0x443920
  443856:	mov    eax,DWORD PTR [r13+0x0]
  44385a:	lea    rdx,[r13+0x8]
  44385e:	test   eax,eax
  443860:	mov    DWORD PTR [r11],eax
  443863:	js     0x443ae0
  443869:	movzx  eax,BYTE PTR [rdi+0x1]
  44386d:	mov    r13,rdx
  443870:	xor    r11d,r11d
  443873:	jmp    0x443400
  443878:	nop    DWORD PTR [rax+rax*1+0x0]
  443880:	sub    eax,0x30
  443883:	cmp    al,0x9
  443885:	ja     0x443aa6
  44388b:	cmp    r14d,0x3
  44388f:	ja     0x443aa6
  443895:	test   r14d,r14d
  443898:	jne    0x44390a
  44389a:	mov    r14d,0x1
  4438a0:	test   r11,r11
  4438a3:	je     0x443829
  4438a5:	mov    eax,DWORD PTR [r11]
  4438a8:	test   eax,eax
  4438aa:	js     0x443a0d
  4438b0:	lea    eax,[rax+rax*4]
  4438b3:	lea    eax,[rcx+rax*2-0x30]
  4438b7:	mov    DWORD PTR [r11],eax
  4438ba:	movzx  eax,BYTE PTR [rdi+0x1]
  4438be:	jmp    0x443400
  4438c3:	mov    rsi,QWORD PTR [r13+0x0]
  4438c7:	lea    rax,[rip+0x16d4a]        # 0x45a618
  4438ce:	lea    rdi,[r13+0x8]
  4438d2:	mov    r13,rdi
  4438d5:	test   rsi,rsi
  4438d8:	cmove  rsi,rax
  4438dc:	mov    rcx,rsi
  4438df:	call   0x449358
  4438e4:	mov    r8,r12
  4438e7:	mov    edx,eax
  4438e9:	mov    rcx,rsi
  4438ec:	call   0x441a40
  4438f1:	jmp    0x443300
  4438f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  443900:	cmp    r14d,0x3
  443904:	ja     0x443aa6
  44390a:	cmp    r14d,0x2
  44390e:	mov    eax,0x3
  443913:	cmove  r14d,eax
  443917:	jmp    0x4438a0
  443919:	nop    DWORD PTR [rax+0x0]
  443920:	movzx  eax,BYTE PTR [rdi+0x1]
  443924:	xor    r11d,r11d
  443927:	mov    r14d,0x4
  44392d:	jmp    0x443400
  443932:	mov    DWORD PTR [rsp+0x4c],r10d
  443937:	mov    QWORD PTR [rsp+0x40],r11
  44393c:	or     DWORD PTR [rsp+0x88],0x1000
  443947:	mov    DWORD PTR [rsp+0x70],0x0
  44394f:	call   0x449470
  443954:	mov    r9,QWORD PTR [rsp+0x28]
  443959:	mov    rdx,QWORD PTR [rax+0x8]
  44395d:	mov    r8d,0x10
  443963:	mov    rcx,QWORD PTR [rsp+0x38]
  443968:	call   0x441260
  44396d:	test   eax,eax
  44396f:	mov    r11,QWORD PTR [rsp+0x40]
  443974:	mov    r10d,DWORD PTR [rsp+0x4c]
  443979:	jle    0x443988
  44397b:	movzx  edx,WORD PTR [rsp+0x6e]
  443980:	mov    WORD PTR [rsp+0xa0],dx
  443988:	mov    DWORD PTR [rsp+0x9c],eax
  44398f:	movzx  eax,BYTE PTR [rdi+0x1]
  443993:	jmp    0x443400
  443998:	cmp    BYTE PTR [rdi+0x2],0x34
  44399c:	je     0x443b2f
  4439a2:	mov    eax,0x36
  4439a7:	mov    r10d,0x3
  4439ad:	mov    r14d,0x4
  4439b3:	jmp    0x443400
  4439b8:	mov    rcx,QWORD PTR [r13+0x0]
  4439bc:	add    r13,0x8
  4439c0:	mov    QWORD PTR [rsp+0x70],rcx
  4439c5:	jmp    0x443613
  4439ca:	mov    edx,DWORD PTR [rsp+0xa4]
  4439d1:	add    r13,0x8
  4439d5:	mov    BYTE PTR [rax],dl
  4439d7:	jmp    0x443300
  4439dc:	mov    rax,QWORD PTR [r13+0x0]
  4439e0:	add    r13,0x8
  4439e4:	mov    QWORD PTR [rsp+0x70],rax
  4439e9:	jmp    0x443538
  4439ee:	mov    DWORD PTR [rsp+0x90],0x0
  4439f9:	movzx  eax,BYTE PTR [rdi+0x1]
  4439fd:	lea    r11,[r12+0x10]
  443a02:	mov    r14d,0x2
  443a08:	jmp    0x443400
  443a0d:	sub    ecx,0x30
  443a10:	movzx  eax,BYTE PTR [rdi+0x1]
  443a14:	mov    DWORD PTR [r11],ecx
  443a17:	jmp    0x443400
  443a1c:	mov    rdx,r12
  443a1f:	mov    rcx,rax
  443a22:	call   0x442250
  443a27:	jmp    0x443300
  443a2c:	cmp    BYTE PTR [rdi+0x2],0x32
  443a30:	mov    eax,0x33
  443a35:	jne    0x443664
  443a3b:	lea    rbx,[rdi+0x3]
  443a3f:	movzx  eax,BYTE PTR [rdi+0x3]
  443a43:	mov    r10d,0x2
  443a49:	mov    r14d,0x4
  443a4f:	jmp    0x443400
  443a54:	mov    edx,DWORD PTR [rsp+0xa4]
  443a5b:	add    r13,0x8
  443a5f:	mov    WORD PTR [rax],dx
  443a62:	jmp    0x443300
  443a67:	movsxd rcx,DWORD PTR [r13+0x0]
  443a6b:	add    r13,0x8
  443a6f:	mov    QWORD PTR [rsp+0x70],rcx
  443a74:	jmp    0x443613
  443a79:	mov    eax,DWORD PTR [r13+0x0]
  443a7d:	add    r13,0x8
  443a81:	mov    QWORD PTR [rsp+0x70],rax
  443a86:	jmp    0x443538
  443a8b:	mov    eax,DWORD PTR [rsp+0x48]
  443a8f:	mov    DWORD PTR [rsp+0x90],0x10
  443a9a:	mov    DWORD PTR [rsp+0x88],eax
  443aa1:	jmp    0x443323
  443aa6:	mov    rdx,r12
  443aa9:	mov    ecx,0x25
  443aae:	mov    rbx,rsi
  443ab1:	call   0x4419e0
  443ab6:	jmp    0x443300
  443abb:	movzx  eax,WORD PTR [rsp+0x70]
  443ac0:	mov    r13,rdx
  443ac3:	mov    QWORD PTR [rsp+0x70],rax
  443ac8:	jmp    0x443538
  443acd:	movsx  rcx,WORD PTR [rsp+0x70]
  443ad3:	mov    r13,rax
  443ad6:	mov    QWORD PTR [rsp+0x70],rcx
  443adb:	jmp    0x443613
  443ae0:	test   r14d,r14d
  443ae3:	jne    0x443b48
  443ae5:	or     DWORD PTR [rsp+0x88],0x400
  443af0:	neg    DWORD PTR [rsp+0x8c]
  443af7:	jmp    0x443869
  443afc:	movsxd rdx,DWORD PTR [rsp+0xa4]
  443b04:	add    r13,0x8
  443b08:	mov    QWORD PTR [rax],rdx
  443b0b:	jmp    0x443300
  443b10:	movzx  eax,BYTE PTR [rsp+0x70]
  443b15:	mov    QWORD PTR [rsp+0x70],rax
  443b1a:	jmp    0x443538
  443b1f:	movsx  rcx,BYTE PTR [rsp+0x70]
  443b25:	mov    QWORD PTR [rsp+0x70],rcx
  443b2a:	jmp    0x443613
  443b2f:	lea    rbx,[rdi+0x3]
  443b33:	movzx  eax,BYTE PTR [rdi+0x3]
  443b37:	mov    r10d,0x3
  443b3d:	mov    r14d,0x4
  443b43:	jmp    0x443400
  443b48:	mov    DWORD PTR [rsp+0x90],0xffffffff
  443b53:	movzx  eax,BYTE PTR [rdi+0x1]
  443b57:	mov    r13,rdx
  443b5a:	xor    r11d,r11d
  443b5d:	jmp    0x443400
  443b62:	nop
  443b63:	nop
  443b64:	nop
  443b65:	nop
  443b66:	nop
  443b67:	nop
  443b68:	nop
  443b69:	nop
  443b6a:	nop
  443b6b:	nop
  443b6c:	nop
  443b6d:	nop
  443b6e:	nop
  443b6f:	nop
  443b70:	push   rbx
  443b71:	sub    rsp,0x20
  443b75:	xor    ebx,ebx
  443b77:	cmp    ecx,0x1b
  443b7a:	jle    0x443b8d
  443b7c:	mov    eax,0x4
  443b81:	add    eax,eax
  443b83:	add    ebx,0x1
  443b86:	lea    edx,[rax+0x17]
  443b89:	cmp    edx,ecx
  443b8b:	jl     0x443b81
  443b8d:	mov    ecx,ebx
  443b8f:	call   0x445460
  443b94:	mov    DWORD PTR [rax],ebx
  443b96:	add    rax,0x4
  443b9a:	add    rsp,0x20
  443b9e:	pop    rbx
  443b9f:	ret    
  443ba0:	push   rsi
  443ba1:	push   rbx
  443ba2:	sub    rsp,0x28
  443ba6:	mov    rbx,rcx
  443ba9:	mov    ecx,r8d
  443bac:	mov    rsi,rdx
  443baf:	call   0x443b70
  443bb4:	movzx  ecx,BYTE PTR [rbx]
  443bb7:	lea    r8,[rbx+0x1]
  443bbb:	test   cl,cl
  443bbd:	mov    BYTE PTR [rax],cl
  443bbf:	mov    rcx,rax
  443bc2:	je     0x443bd9
  443bc4:	add    r8,0x1
  443bc8:	movzx  r9d,BYTE PTR [r8-0x1]
  443bcd:	add    rcx,0x1
  443bd1:	test   r9b,r9b
  443bd4:	mov    BYTE PTR [rcx],r9b
  443bd7:	jne    0x443bc4
  443bd9:	test   rsi,rsi
  443bdc:	je     0x443be1
  443bde:	mov    QWORD PTR [rsi],rcx
  443be1:	add    rsp,0x28
  443be5:	pop    rbx
  443be6:	pop    rsi
  443be7:	ret    
  443be8:	nop    DWORD PTR [rax+rax*1+0x0]
  443bf0:	mov    edx,0x1
  443bf5:	mov    rax,rcx
  443bf8:	mov    ecx,DWORD PTR [rcx-0x4]
  443bfb:	shl    edx,cl
  443bfd:	mov    DWORD PTR [rax+0x4],ecx
  443c00:	lea    rcx,[rax-0x4]
  443c04:	mov    DWORD PTR [rax+0x8],edx
  443c07:	jmp    0x445570
  443c0c:	nop    DWORD PTR [rax+0x0]
  443c10:	push   r15
  443c12:	push   r14
  443c14:	push   r13
  443c16:	push   r12
  443c18:	push   rbp
  443c19:	push   rdi
  443c1a:	push   rsi
  443c1b:	push   rbx
  443c1c:	sub    rsp,0x38
  443c20:	xor    eax,eax
  443c22:	mov    edi,DWORD PTR [rdx+0x14]
  443c25:	cmp    edi,DWORD PTR [rcx+0x14]
  443c28:	mov    r15,rdx
  443c2b:	jg     0x443d79
  443c31:	sub    edi,0x1
  443c34:	lea    rbx,[rdx+0x18]
  443c38:	lea    r12,[rcx+0x18]
  443c3c:	movsxd r13,edi
  443c3f:	xor    edx,edx
  443c41:	shl    r13,0x2
  443c45:	lea    rbp,[rbx+r13*1]
  443c49:	add    r13,r12
  443c4c:	mov    eax,DWORD PTR [rbp+0x0]
  443c4f:	lea    r8d,[rax+0x1]
  443c53:	mov    eax,DWORD PTR [r13+0x0]
  443c57:	div    r8d
  443c5a:	test   eax,eax
  443c5c:	mov    r14d,eax
  443c5f:	mov    DWORD PTR [rsp+0x2c],eax
  443c63:	je     0x443cf7
  443c69:	mov    edx,eax
  443c6b:	mov    rsi,rbx
  443c6e:	mov    r11,r12
  443c71:	xor    eax,eax
  443c73:	xor    r10d,r10d
  443c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  443c80:	add    rsi,0x4
  443c84:	mov    r8d,DWORD PTR [rsi-0x4]
  443c88:	mov    r9d,DWORD PTR [r11]
  443c8b:	add    r11,0x4
  443c8f:	imul   r8,rdx
  443c93:	add    r8,rax
  443c96:	mov    rax,r8
  443c99:	mov    r8d,r8d
  443c9c:	sub    r9,r8
  443c9f:	shr    rax,0x20
  443ca3:	sub    r9,r10
  443ca6:	mov    r10,r9
  443ca9:	mov    DWORD PTR [r11-0x4],r9d
  443cad:	shr    r10,0x20
  443cb1:	and    r10d,0x1
  443cb5:	cmp    rbp,rsi
  443cb8:	jae    0x443c80
  443cba:	mov    r11d,DWORD PTR [r13+0x0]
  443cbe:	test   r11d,r11d
  443cc1:	jne    0x443cf7
  443cc3:	lea    rax,[r13-0x4]
  443cc7:	cmp    r12,rax
  443cca:	jae    0x443cf4
  443ccc:	mov    r10d,DWORD PTR [r13-0x4]
  443cd0:	test   r10d,r10d
  443cd3:	je     0x443ce8
  443cd5:	jmp    0x443cf4
  443cd7:	nop    WORD PTR [rax+rax*1+0x0]
  443ce0:	mov    r9d,DWORD PTR [rax]
  443ce3:	test   r9d,r9d
  443ce6:	jne    0x443cf4
  443ce8:	sub    rax,0x4
  443cec:	sub    edi,0x1
  443cef:	cmp    r12,rax
  443cf2:	jb     0x443ce0
  443cf4:	mov    DWORD PTR [rcx+0x14],edi
  443cf7:	mov    rdx,r15
  443cfa:	mov    rsi,rcx
  443cfd:	call   0x445a90
  443d02:	test   eax,eax
  443d04:	js     0x443d75
  443d06:	lea    eax,[r14+0x1]
  443d0a:	mov    rcx,r12
  443d0d:	xor    edx,edx
  443d0f:	mov    DWORD PTR [rsp+0x2c],eax
  443d13:	add    rbx,0x4
  443d17:	mov    eax,DWORD PTR [rcx]
  443d19:	mov    r8d,DWORD PTR [rbx-0x4]
  443d1d:	add    rcx,0x4
  443d21:	sub    rax,r8
  443d24:	sub    rax,rdx
  443d27:	mov    rdx,rax
  443d2a:	mov    DWORD PTR [rcx-0x4],eax
  443d2d:	shr    rdx,0x20
  443d31:	and    edx,0x1
  443d34:	cmp    rbp,rbx
  443d37:	jae    0x443d13
  443d39:	movsxd rax,edi
  443d3c:	lea    rdx,[r12+rax*4]
  443d40:	mov    r8d,DWORD PTR [rdx]
  443d43:	test   r8d,r8d
  443d46:	jne    0x443d75
  443d48:	lea    rax,[rdx-0x4]
  443d4c:	cmp    r12,rax
  443d4f:	jae    0x443d72
  443d51:	mov    ecx,DWORD PTR [rdx-0x4]
  443d54:	test   ecx,ecx
  443d56:	je     0x443d66
  443d58:	jmp    0x443d72
  443d5a:	nop    WORD PTR [rax+rax*1+0x0]
  443d60:	mov    edx,DWORD PTR [rax]
  443d62:	test   edx,edx
  443d64:	jne    0x443d72
  443d66:	sub    rax,0x4
  443d6a:	sub    edi,0x1
  443d6d:	cmp    r12,rax
  443d70:	jb     0x443d60
  443d72:	mov    DWORD PTR [rsi+0x14],edi
  443d75:	mov    eax,DWORD PTR [rsp+0x2c]
  443d79:	add    rsp,0x38
  443d7d:	pop    rbx
  443d7e:	pop    rsi
  443d7f:	pop    rdi
  443d80:	pop    rbp
  443d81:	pop    r12
  443d83:	pop    r13
  443d85:	pop    r14
  443d87:	pop    r15
  443d89:	ret    
  443d8a:	nop
  443d8b:	nop
  443d8c:	nop
  443d8d:	nop
  443d8e:	nop
  443d8f:	nop
  443d90:	push   r15
  443d92:	push   r14
  443d94:	push   r13
  443d96:	push   r12
  443d98:	push   rbp
  443d99:	push   rdi
  443d9a:	push   rsi
  443d9b:	push   rbx
  443d9c:	sub    rsp,0xb8
  443da3:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  443dab:	mov    r12d,DWORD PTR [r9]
  443dae:	mov    eax,r12d
  443db1:	and    eax,0xffffffcf
  443db4:	mov    DWORD PTR [r9],eax
  443db7:	mov    eax,r12d
  443dba:	and    eax,0x7
  443dbd:	cmp    eax,0x4
  443dc0:	ja     0x4451f3
  443dc6:	mov    r13d,edx
  443dc9:	lea    rdx,[rip+0x169f0]        # 0x45a7c0
  443dd0:	mov    QWORD PTR [rsp+0x28],r9
  443dd5:	mov    r15,r8
  443dd8:	mov    rbp,rcx
  443ddb:	movsxd rax,DWORD PTR [rdx+rax*4]
  443ddf:	add    rdx,rax
  443de2:	jmp    rdx
  443de4:	mov    edi,DWORD PTR [rcx]
  443de6:	xor    ecx,ecx
  443de8:	cmp    edi,0x20
  443deb:	jle    0x443dfb
  443ded:	mov    eax,0x20
  443df2:	add    eax,eax
  443df4:	add    ecx,0x1
  443df7:	cmp    edi,eax
  443df9:	jg     0x443df2
  443dfb:	call   0x445460
  443e00:	mov    rsi,rax
  443e03:	lea    eax,[rdi-0x1]
  443e06:	lea    r9,[rsi+0x18]
  443e0a:	sar    eax,0x5
  443e0d:	cdqe   
  443e0f:	mov    rdx,r9
  443e12:	lea    r11,[r15+rax*4]
  443e16:	mov    rax,r15
  443e19:	nop    DWORD PTR [rax+0x0]
  443e20:	mov    ecx,DWORD PTR [rax]
  443e22:	add    rax,0x4
  443e26:	add    rdx,0x4
  443e2a:	cmp    r11,rax
  443e2d:	mov    DWORD PTR [rdx-0x4],ecx
  443e30:	jae    0x443e20
  443e32:	sub    rdx,r9
  443e35:	sar    rdx,0x2
  443e39:	mov    r14d,edx
  443e3c:	movsxd rdx,edx
  443e3f:	lea    rax,[r9+rdx*4-0x4]
  443e44:	jmp    0x443e5f
  443e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  443e50:	sub    rax,0x4
  443e54:	test   edx,edx
  443e56:	mov    r14d,edx
  443e59:	je     0x444360
  443e5f:	mov    r8d,DWORD PTR [rax]
  443e62:	lea    edx,[r14-0x1]
  443e66:	test   r8d,r8d
  443e69:	je     0x443e50
  443e6b:	movsxd rdx,edx
  443e6e:	mov    DWORD PTR [rsi+0x14],r14d
  443e72:	shl    r14d,0x5
  443e76:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  443e7b:	xor    eax,0x1f
  443e7e:	sub    r14d,eax
  443e81:	mov    rcx,rsi
  443e84:	call   0x445300
  443e89:	test   eax,eax
  443e8b:	mov    DWORD PTR [rsp+0x9c],eax
  443e92:	mov    r11d,r13d
  443e95:	jne    0x444370
  443e9b:	mov    ecx,DWORD PTR [rsi+0x14]
  443e9e:	test   ecx,ecx
  443ea0:	jne    0x443f50
  443ea6:	mov    rcx,rsi
  443ea9:	call   0x445570
  443eae:	mov    rax,QWORD PTR [rsp+0x130]
  443eb6:	mov    rdx,QWORD PTR [rsp+0x138]
  443ebe:	lea    rcx,[rip+0x168f8]        # 0x45a7bd
  443ec5:	mov    r8d,0x1
  443ecb:	mov    DWORD PTR [rax],0x1
  443ed1:	call   0x443ba0
  443ed6:	nop
  443ed7:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  443edf:	add    rsp,0xb8
  443ee6:	pop    rbx
  443ee7:	pop    rsi
  443ee8:	pop    rdi
  443ee9:	pop    rbp
  443eea:	pop    r12
  443eec:	pop    r13
  443eee:	pop    r14
  443ef0:	pop    r15
  443ef2:	ret    
  443ef3:	mov    rax,QWORD PTR [rsp+0x130]
  443efb:	mov    rdx,QWORD PTR [rsp+0x138]
  443f03:	lea    rcx,[rip+0x168af]        # 0x45a7b9
  443f0a:	mov    r8d,0x3
  443f10:	mov    DWORD PTR [rax],0xffff8000
  443f16:	call   0x443ba0
  443f1b:	jmp    0x443ed7
  443f1d:	nop    DWORD PTR [rax]
  443f20:	mov    rax,QWORD PTR [rsp+0x130]
  443f28:	mov    rdx,QWORD PTR [rsp+0x138]
  443f30:	lea    rcx,[rip+0x16879]        # 0x45a7b0
  443f37:	mov    r8d,0x8
  443f3d:	mov    DWORD PTR [rax],0xffff8000
  443f43:	call   0x443ba0
  443f48:	jmp    0x443ed7
  443f4a:	nop    WORD PTR [rax+rax*1+0x0]
  443f50:	lea    rdx,[rsp+0x9c]
  443f58:	mov    rcx,rsi
  443f5b:	mov    DWORD PTR [rsp+0x30],r11d
  443f60:	call   0x445c20
  443f65:	movq   rdx,xmm0
  443f6a:	movq   r9,xmm0
  443f6f:	mov    r11d,DWORD PTR [rsp+0x30]
  443f74:	pxor   xmm0,xmm0
  443f78:	shr    rdx,0x20
  443f7c:	mov    r9d,r9d
  443f7f:	and    edx,0xfffff
  443f85:	lea    ecx,[r11+r14*1-0x1]
  443f8a:	or     edx,0x3ff00000
  443f90:	mov    rax,rdx
  443f93:	cvtsi2sd xmm0,ecx
  443f97:	shl    rax,0x20
  443f9b:	mov    ebx,ecx
  443f9d:	or     r9,rax
  443fa0:	sar    ebx,0x1f
  443fa3:	mov    QWORD PTR [rsp+0x30],r9
  443fa8:	mov    eax,ebx
  443faa:	movsd  xmm1,QWORD PTR [rsp+0x30]
  443fb0:	xor    eax,ecx
  443fb2:	sub    eax,ebx
  443fb4:	subsd  xmm1,QWORD PTR [rip+0x1681c]        # 0x45a7d8
  443fbc:	sub    eax,0x435
  443fc1:	test   eax,eax
  443fc3:	mulsd  xmm0,QWORD PTR [rip+0x16825]        # 0x45a7f0
  443fcb:	mulsd  xmm1,QWORD PTR [rip+0x1680d]        # 0x45a7e0
  443fd3:	addsd  xmm1,QWORD PTR [rip+0x1680d]        # 0x45a7e8
  443fdb:	addsd  xmm1,xmm0
  443fdf:	jle    0x443ff5
  443fe1:	pxor   xmm0,xmm0
  443fe5:	cvtsi2sd xmm0,eax
  443fe9:	mulsd  xmm0,QWORD PTR [rip+0x16807]        # 0x45a7f8
  443ff1:	addsd  xmm1,xmm0
  443ff5:	cvttsd2si eax,xmm1
  443ff9:	pxor   xmm6,xmm6
  443ffd:	ucomisd xmm6,xmm1
  444001:	mov    DWORD PTR [rsp+0x30],eax
  444005:	ja     0x444893
  44400b:	mov    eax,ecx
  44400d:	mov    r9d,r9d
  444010:	mov    DWORD PTR [rsp+0x6c],0x1
  444018:	shl    eax,0x14
  44401b:	add    eax,edx
  44401d:	shl    rax,0x20
  444021:	or     r9,rax
  444024:	cmp    DWORD PTR [rsp+0x30],0x16
  444029:	mov    QWORD PTR [rsp+0x80],r9
  444031:	ja     0x444060
  444033:	movsxd rax,DWORD PTR [rsp+0x30]
  444038:	mov    rdx,QWORD PTR [rip+0x16d11]        # 0x45ad50
  44403f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  444044:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  44404d:	jbe    0x4443b0
  444053:	sub    DWORD PTR [rsp+0x30],0x1
  444058:	mov    DWORD PTR [rsp+0x6c],0x0
  444060:	mov    eax,r14d
  444063:	mov    DWORD PTR [rsp+0x50],0x0
  44406b:	sub    eax,ecx
  44406d:	sub    eax,0x1
  444070:	mov    DWORD PTR [rsp+0x40],eax
  444074:	js     0x444880
  44407a:	mov    eax,DWORD PTR [rsp+0x30]
  44407e:	test   eax,eax
  444080:	js     0x444860
  444086:	add    DWORD PTR [rsp+0x40],eax
  44408a:	mov    DWORD PTR [rsp+0x88],eax
  444091:	mov    DWORD PTR [rsp+0x58],0x0
  444099:	cmp    DWORD PTR [rsp+0x120],0x9
  4440a1:	ja     0x444390
  4440a7:	cmp    DWORD PTR [rsp+0x120],0x5
  4440af:	jle    0x44439b
  4440b5:	sub    DWORD PTR [rsp+0x120],0x4
  4440bd:	xor    eax,eax
  4440bf:	cmp    DWORD PTR [rsp+0x120],0x3
  4440c7:	je     0x444a54
  4440cd:	jle    0x4447b3
  4440d3:	cmp    DWORD PTR [rsp+0x120],0x4
  4440db:	mov    DWORD PTR [rsp+0x60],0x1
  4440e3:	je     0x4443c0
  4440e9:	cmp    DWORD PTR [rsp+0x120],0x5
  4440f1:	jne    0x4447c9
  4440f7:	mov    ebx,DWORD PTR [rsp+0x30]
  4440fb:	add    ebx,DWORD PTR [rsp+0x128]
  444102:	mov    DWORD PTR [rsp+0x8c],ebx
  444109:	add    ebx,0x1
  44410c:	test   ebx,ebx
  44410e:	mov    DWORD PTR [rsp+0x68],ebx
  444112:	mov    ecx,ebx
  444114:	jle    0x444c90
  44411a:	cmp    ebx,0xe
  44411d:	mov    DWORD PTR [rsp+0x9c],ebx
  444124:	setbe  bl
  444127:	and    ebx,eax
  444129:	mov    QWORD PTR [rsp+0x78],r9
  44412e:	mov    DWORD PTR [rsp+0x70],r11d
  444133:	call   0x443b70
  444138:	mov    QWORD PTR [rsp+0x48],rax
  44413d:	mov    eax,DWORD PTR [rbp+0xc]
  444140:	mov    r11d,DWORD PTR [rsp+0x70]
  444145:	mov    r9,QWORD PTR [rsp+0x78]
  44414a:	sub    eax,0x1
  44414d:	mov    DWORD PTR [rsp+0x38],eax
  444151:	je     0x444178
  444153:	mov    ecx,DWORD PTR [rsp+0x38]
  444157:	mov    eax,0x2
  44415c:	test   ecx,ecx
  44415e:	cmovns eax,ecx
  444161:	and    r12d,0x8
  444165:	mov    DWORD PTR [rsp+0x38],eax
  444169:	je     0x444178
  44416b:	mov    eax,0x3
  444170:	sub    eax,DWORD PTR [rsp+0x38]
  444174:	mov    DWORD PTR [rsp+0x38],eax
  444178:	test   bl,bl
  44417a:	je     0x444470
  444180:	mov    eax,DWORD PTR [rsp+0x38]
  444184:	or     eax,DWORD PTR [rsp+0x30]
  444188:	jne    0x444470
  44418e:	mov    eax,DWORD PTR [rsp+0x6c]
  444192:	mov    DWORD PTR [rsp+0x9c],0x0
  44419d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  4441a6:	test   eax,eax
  4441a8:	je     0x4441bc
  4441aa:	movsd  xmm0,QWORD PTR [rip+0x16656]        # 0x45a808
  4441b2:	ucomisd xmm0,xmm4
  4441b6:	ja     0x444feb
  4441bc:	movapd xmm0,xmm4
  4441c0:	mov    r12d,DWORD PTR [rsp+0x68]
  4441c5:	addsd  xmm0,xmm4
  4441c9:	addsd  xmm0,QWORD PTR [rip+0x1664f]        # 0x45a820
  4441d1:	movq   rdx,xmm0
  4441d6:	movq   rax,xmm0
  4441db:	shr    rdx,0x20
  4441df:	mov    eax,eax
  4441e1:	sub    edx,0x3400000
  4441e7:	shl    rdx,0x20
  4441eb:	or     rax,rdx
  4441ee:	test   r12d,r12d
  4441f1:	je     0x444427
  4441f7:	mov    r9d,DWORD PTR [rsp+0x68]
  4441fc:	movapd xmm0,xmm4
  444200:	xor    ecx,ecx
  444202:	mov    ebx,DWORD PTR [rsp+0x60]
  444206:	lea    edx,[r9-0x1]
  44420a:	movsxd rdx,edx
  44420d:	test   ebx,ebx
  44420f:	je     0x444d33
  444215:	mov    r10,QWORD PTR [rip+0x16b34]        # 0x45ad50
  44421c:	movsd  xmm1,QWORD PTR [rip+0x1661c]        # 0x45a840
  444224:	mov    QWORD PTR [rsp+0x38],rax
  444229:	cvttsd2si eax,xmm0
  44422d:	pxor   xmm2,xmm2
  444231:	mov    DWORD PTR [rsp+0x9c],0x0
  44423c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  444242:	mov    rdx,QWORD PTR [rsp+0x48]
  444247:	mov    rbx,rdx
  44424a:	add    rbx,0x1
  44424e:	cvtsi2sd xmm2,eax
  444252:	add    eax,0x30
  444255:	mov    BYTE PTR [rdx],al
  444257:	movsd  xmm5,QWORD PTR [rsp+0x38]
  44425d:	subsd  xmm0,xmm2
  444261:	subsd  xmm1,xmm5
  444265:	ucomisd xmm1,xmm0
  444269:	ja     0x444304
  44426f:	movsd  xmm5,QWORD PTR [rip+0x16591]        # 0x45a808
  444277:	movapd xmm2,xmm5
  44427b:	subsd  xmm2,xmm0
  44427f:	ucomisd xmm1,xmm2
  444283:	ja     0x444e07
  444289:	mov    eax,DWORD PTR [rsp+0x9c]
  444290:	movsd  xmm3,QWORD PTR [rip+0x16578]        # 0x45a810
  444298:	add    eax,0x1
  44429b:	cmp    r9d,eax
  44429e:	mov    DWORD PTR [rsp+0x9c],eax
  4442a5:	jg     0x4442dc
  4442a7:	jmp    0x44445e
  4442ac:	nop    DWORD PTR [rax+0x0]
  4442b0:	movapd xmm2,xmm5
  4442b4:	subsd  xmm2,xmm0
  4442b8:	ucomisd xmm1,xmm2
  4442bc:	ja     0x444e07
  4442c2:	mov    eax,DWORD PTR [rsp+0x9c]
  4442c9:	add    eax,0x1
  4442cc:	cmp    r9d,eax
  4442cf:	mov    DWORD PTR [rsp+0x9c],eax
  4442d6:	jle    0x44445e
  4442dc:	mulsd  xmm0,xmm3
  4442e0:	add    rbx,0x1
  4442e4:	pxor   xmm2,xmm2
  4442e8:	mulsd  xmm1,xmm3
  4442ec:	cvttsd2si eax,xmm0
  4442f0:	cvtsi2sd xmm2,eax
  4442f4:	add    eax,0x30
  4442f7:	mov    BYTE PTR [rbx-0x1],al
  4442fa:	subsd  xmm0,xmm2
  4442fe:	ucomisd xmm1,xmm0
  444302:	jbe    0x4442b0
  444304:	ucomisd xmm0,xmm6
  444308:	lea    ebp,[rcx+0x1]
  44430b:	jp     0x444313
  44430d:	je     0x444c67
  444313:	mov    r15d,0x10
  444319:	nop    DWORD PTR [rax+0x0]
  444320:	mov    rcx,rsi
  444323:	call   0x445570
  444328:	cmp    QWORD PTR [rsp+0x138],0x0
  444331:	mov    rax,QWORD PTR [rsp+0x130]
  444339:	mov    BYTE PTR [rbx],0x0
  44433c:	mov    DWORD PTR [rax],ebp
  44433e:	je     0x44434b
  444340:	mov    rax,QWORD PTR [rsp+0x138]
  444348:	mov    QWORD PTR [rax],rbx
  44434b:	mov    rax,QWORD PTR [rsp+0x28]
  444350:	or     DWORD PTR [rax],r15d
  444353:	mov    rax,QWORD PTR [rsp+0x48]
  444358:	jmp    0x443ed7
  44435d:	nop    DWORD PTR [rax]
  444360:	mov    DWORD PTR [rsi+0x14],0x0
  444367:	jmp    0x443e81
  44436c:	nop    DWORD PTR [rax+0x0]
  444370:	mov    edx,eax
  444372:	mov    rcx,rsi
  444375:	call   0x445200
  44437a:	mov    eax,DWORD PTR [rsp+0x9c]
  444381:	lea    r11d,[r13+rax*1+0x0]
  444386:	sub    r14d,eax
  444389:	jmp    0x443e9b
  44438e:	xchg   ax,ax
  444390:	mov    DWORD PTR [rsp+0x120],0x0
  44439b:	add    ecx,0x3fe
  4443a1:	cmp    ecx,0x7f7
  4443a7:	setbe  al
  4443aa:	jmp    0x4440bf
  4443af:	nop
  4443b0:	mov    DWORD PTR [rsp+0x6c],0x0
  4443b8:	jmp    0x444060
  4443bd:	nop    DWORD PTR [rax]
  4443c0:	mov    edx,DWORD PTR [rsp+0x128]
  4443c7:	test   edx,edx
  4443c9:	jle    0x444c7b
  4443cf:	cmp    DWORD PTR [rsp+0x128],0xe
  4443d7:	setbe  bl
  4443da:	mov    ecx,DWORD PTR [rsp+0x128]
  4443e1:	and    ebx,eax
  4443e3:	mov    DWORD PTR [rsp+0x9c],ecx
  4443ea:	mov    DWORD PTR [rsp+0x8c],ecx
  4443f1:	mov    DWORD PTR [rsp+0x68],ecx
  4443f5:	jmp    0x444129
  4443fa:	movapd xmm0,xmm4
  4443fe:	addsd  xmm0,xmm4
  444402:	addsd  xmm0,QWORD PTR [rip+0x16416]        # 0x45a820
  44440a:	movq   rdx,xmm0
  44440f:	movq   rax,xmm0
  444414:	shr    rdx,0x20
  444418:	mov    eax,eax
  44441a:	sub    edx,0x3400000
  444420:	shl    rdx,0x20
  444424:	or     rax,rdx
  444427:	movapd xmm1,xmm4
  44442b:	mov    QWORD PTR [rsp+0x38],rax
  444430:	movsd  xmm0,QWORD PTR [rsp+0x38]
  444436:	subsd  xmm1,QWORD PTR [rip+0x163ea]        # 0x45a828
  44443e:	ucomisd xmm1,xmm0
  444442:	ja     0x444d24
  444448:	movsd  xmm2,QWORD PTR [rip+0x163e0]        # 0x45a830
  444450:	xorpd  xmm0,xmm2
  444454:	ucomisd xmm0,xmm1
  444458:	ja     0x44483d
  44445e:	movq   r9,xmm4
  444463:	mov    DWORD PTR [rsp+0x38],0x0
  44446b:	nop    DWORD PTR [rax+rax*1+0x0]
  444470:	test   r11d,r11d
  444473:	js     0x444512
  444479:	movsxd rax,DWORD PTR [rsp+0x30]
  44447e:	cmp    eax,DWORD PTR [rbp+0x14]
  444481:	jg     0x444512
  444487:	mov    ebx,DWORD PTR [rsp+0x68]
  44448b:	mov    rdx,QWORD PTR [rip+0x168be]        # 0x45ad50
  444492:	test   ebx,ebx
  444494:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  444499:	jg     0x444ba3
  44449f:	mov    eax,DWORD PTR [rsp+0x128]
  4444a6:	shr    eax,0x1f
  4444a9:	test   al,al
  4444ab:	je     0x444ba3
  4444b1:	test   ebx,ebx
  4444b3:	jne    0x44483d
  4444b9:	mulsd  xmm2,QWORD PTR [rip+0x16367]        # 0x45a828
  4444c1:	mov    QWORD PTR [rsp+0x38],r9
  4444c6:	movsd  xmm5,QWORD PTR [rsp+0x38]
  4444cc:	ucomisd xmm2,xmm5
  4444d0:	jae    0x44483d
  4444d6:	mov    ebp,DWORD PTR [rsp+0x30]
  4444da:	xor    r12d,r12d
  4444dd:	xor    edi,edi
  4444df:	add    ebp,0x2
  4444e2:	mov    rax,QWORD PTR [rsp+0x48]
  4444e7:	mov    r15d,0x20
  4444ed:	lea    rbx,[rax+0x1]
  4444f1:	mov    BYTE PTR [rax],0x31
  4444f4:	mov    rcx,r12
  4444f7:	call   0x445570
  4444fc:	test   rdi,rdi
  4444ff:	je     0x444320
  444505:	mov    rcx,rdi
  444508:	call   0x445570
  44450d:	jmp    0x444320
  444512:	mov    r9d,DWORD PTR [rsp+0x60]
  444517:	test   r9d,r9d
  44451a:	je     0x444a20
  444520:	mov    edx,DWORD PTR [rbp+0x4]
  444523:	sub    edi,r14d
  444526:	mov    ecx,r11d
  444529:	lea    eax,[rdi+0x1]
  44452c:	sub    ecx,edi
  44452e:	cmp    ecx,edx
  444530:	mov    DWORD PTR [rsp+0x9c],eax
  444537:	jge    0x44456c
  444539:	mov    ebx,DWORD PTR [rsp+0x120]
  444540:	lea    ecx,[rbx-0x3]
  444543:	and    ecx,0xfffffffd
  444546:	je     0x44456c
  444548:	mov    ebx,DWORD PTR [rsp+0x68]
  44454c:	sub    r11d,edx
  44454f:	lea    eax,[r11+0x1]
  444553:	test   ebx,ebx
  444555:	mov    DWORD PTR [rsp+0x9c],eax
  44455c:	setg   cl
  44455f:	cmp    ebx,eax
  444561:	setl   dl
  444564:	test   cl,dl
  444566:	je     0x444caf
  44456c:	cmp    DWORD PTR [rsp+0x120],0x1
  444574:	jle    0x444caf
  44457a:	mov    ebx,DWORD PTR [rsp+0x58]
  44457e:	mov    eax,DWORD PTR [rsp+0x68]
  444582:	mov    r12d,ebx
  444585:	sub    eax,0x1
  444588:	sub    r12d,eax
  44458b:	cmp    ebx,eax
  44458d:	jge    0x4445a3
  44458f:	mov    edx,eax
  444591:	sub    edx,DWORD PTR [rsp+0x58]
  444595:	xor    r12d,r12d
  444598:	add    DWORD PTR [rsp+0x88],edx
  44459f:	mov    DWORD PTR [rsp+0x58],eax
  4445a3:	mov    eax,DWORD PTR [rsp+0x68]
  4445a7:	test   eax,eax
  4445a9:	js     0x444f42
  4445af:	mov    ebx,DWORD PTR [rsp+0x50]
  4445b3:	mov    DWORD PTR [rsp+0x9c],eax
  4445ba:	mov    ecx,0x1
  4445bf:	add    DWORD PTR [rsp+0x50],eax
  4445c3:	add    DWORD PTR [rsp+0x40],eax
  4445c7:	call   0x4456a0
  4445cc:	mov    rdi,rax
  4445cf:	mov    ecx,DWORD PTR [rsp+0x40]
  4445d3:	test   ecx,ecx
  4445d5:	mov    eax,ecx
  4445d7:	jle    0x4445f5
  4445d9:	test   ebx,ebx
  4445db:	jle    0x4445f5
  4445dd:	cmp    ecx,ebx
  4445df:	cmovg  eax,ebx
  4445e2:	sub    DWORD PTR [rsp+0x50],eax
  4445e6:	sub    ecx,eax
  4445e8:	mov    DWORD PTR [rsp+0x9c],eax
  4445ef:	sub    ebx,eax
  4445f1:	mov    DWORD PTR [rsp+0x40],ecx
  4445f5:	mov    r8d,DWORD PTR [rsp+0x58]
  4445fa:	test   r8d,r8d
  4445fd:	jle    0x44464b
  4445ff:	mov    ecx,DWORD PTR [rsp+0x60]
  444603:	test   ecx,ecx
  444605:	je     0x444a40
  44460b:	test   r12d,r12d
  44460e:	jle    0x44463e
  444610:	mov    rcx,rdi
  444613:	mov    edx,r12d
  444616:	call   0x445800
  44461b:	mov    rdx,rsi
  44461e:	mov    rcx,rax
  444621:	mov    rdi,rax
  444624:	call   0x4456d0
  444629:	mov    rcx,rsi
  44462c:	mov    QWORD PTR [rsp+0x70],rax
  444631:	call   0x445570
  444636:	mov    rax,QWORD PTR [rsp+0x70]
  44463b:	mov    rsi,rax
  44463e:	mov    edx,DWORD PTR [rsp+0x58]
  444642:	sub    edx,r12d
  444645:	jne    0x444a44
  44464b:	mov    ecx,0x1
  444650:	call   0x4456a0
  444655:	mov    r12,rax
  444658:	mov    eax,DWORD PTR [rsp+0x88]
  44465f:	test   eax,eax
  444661:	jle    0x444790
  444667:	mov    rcx,r12
  44466a:	mov    edx,eax
  44466c:	call   0x445800
  444671:	cmp    DWORD PTR [rsp+0x120],0x1
  444679:	mov    r12,rax
  44467c:	jg     0x444688
  44467e:	cmp    r14d,0x1
  444682:	je     0x44474c
  444688:	xor    ebp,ebp
  44468a:	mov    eax,DWORD PTR [r12+0x14]
  44468f:	sub    eax,0x1
  444692:	cdqe   
  444694:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  44469a:	xor    eax,0x1f
  44469d:	sub    eax,DWORD PTR [rsp+0x40]
  4446a1:	mov    edx,DWORD PTR [rsp+0x50]
  4446a5:	sub    eax,0x4
  4446a8:	and    eax,0x1f
  4446ab:	add    edx,eax
  4446ad:	mov    r13d,eax
  4446b0:	mov    DWORD PTR [rsp+0x9c],eax
  4446b7:	test   edx,edx
  4446b9:	mov    ecx,eax
  4446bb:	jle    0x4446cf
  4446bd:	mov    rcx,rsi
  4446c0:	call   0x445970
  4446c5:	mov    ecx,DWORD PTR [rsp+0x9c]
  4446cc:	mov    rsi,rax
  4446cf:	mov    edx,DWORD PTR [rsp+0x40]
  4446d3:	add    edx,ecx
  4446d5:	test   edx,edx
  4446d7:	jle    0x4446e4
  4446d9:	mov    rcx,r12
  4446dc:	call   0x445970
  4446e1:	mov    r12,rax
  4446e4:	mov    eax,DWORD PTR [rsp+0x6c]
  4446e8:	test   eax,eax
  4446ea:	jne    0x444a61
  4446f0:	mov    r14d,DWORD PTR [rsp+0x68]
  4446f5:	test   r14d,r14d
  4446f8:	jg     0x4448b1
  4446fe:	cmp    DWORD PTR [rsp+0x120],0x2
  444706:	jle    0x4448b1
  44470c:	mov    r11d,DWORD PTR [rsp+0x68]
  444711:	test   r11d,r11d
  444714:	jne    0x444842
  44471a:	xor    r8d,r8d
  44471d:	mov    rcx,r12
  444720:	mov    edx,0x5
  444725:	call   0x4455e0
  44472a:	mov    rcx,rsi
  44472d:	mov    rdx,rax
  444730:	mov    r12,rax
  444733:	call   0x445a90
  444738:	test   eax,eax
  44473a:	jle    0x444842
  444740:	mov    ebp,DWORD PTR [rsp+0x30]
  444744:	add    ebp,0x2
  444747:	jmp    0x4444e2
  44474c:	mov    eax,DWORD PTR [rbp+0x4]
  44474f:	add    eax,0x1
  444752:	cmp    r13d,eax
  444755:	jle    0x444688
  44475b:	add    DWORD PTR [rsp+0x50],0x1
  444760:	add    DWORD PTR [rsp+0x40],0x1
  444765:	mov    ebp,0x1
  44476a:	nop    WORD PTR [rax+rax*1+0x0]
  444770:	mov    edx,DWORD PTR [rsp+0x88]
  444777:	mov    eax,0x1f
  44477c:	test   edx,edx
  44477e:	je     0x44469d
  444784:	jmp    0x44468a
  444789:	nop    DWORD PTR [rax+0x0]
  444790:	cmp    DWORD PTR [rsp+0x120],0x1
  444798:	jg     0x4447a0
  44479a:	cmp    r14d,0x1
  44479e:	je     0x4447a4
  4447a0:	xor    ebp,ebp
  4447a2:	jmp    0x444770
  4447a4:	mov    eax,DWORD PTR [rbp+0x4]
  4447a7:	xor    ebp,ebp
  4447a9:	add    eax,0x1
  4447ac:	cmp    r13d,eax
  4447af:	jle    0x444770
  4447b1:	jmp    0x44475b
  4447b3:	cmp    DWORD PTR [rsp+0x120],0x2
  4447bb:	mov    DWORD PTR [rsp+0x60],0x0
  4447c3:	je     0x4443c0
  4447c9:	pxor   xmm0,xmm0
  4447cd:	mov    QWORD PTR [rsp+0x60],r9
  4447d2:	mov    DWORD PTR [rsp+0x68],r11d
  4447d7:	cvtsi2sd xmm0,edi
  4447db:	mulsd  xmm0,QWORD PTR [rip+0x1601d]        # 0x45a800
  4447e3:	cvttsd2si ecx,xmm0
  4447e7:	add    ecx,0x3
  4447ea:	mov    DWORD PTR [rsp+0x9c],ecx
  4447f1:	call   0x443b70
  4447f6:	mov    QWORD PTR [rsp+0x48],rax
  4447fb:	mov    eax,DWORD PTR [rbp+0xc]
  4447fe:	mov    r11d,DWORD PTR [rsp+0x68]
  444803:	mov    r9,QWORD PTR [rsp+0x60]
  444808:	sub    eax,0x1
  44480b:	mov    DWORD PTR [rsp+0x38],eax
  44480f:	jne    0x444cbd
  444815:	mov    eax,0xffffffff
  44481a:	mov    DWORD PTR [rsp+0x60],0x1
  444822:	mov    DWORD PTR [rsp+0x128],0x0
  44482d:	mov    DWORD PTR [rsp+0x8c],eax
  444834:	mov    DWORD PTR [rsp+0x68],eax
  444838:	jmp    0x444470
  44483d:	xor    r12d,r12d
  444840:	xor    edi,edi
  444842:	mov    ebp,DWORD PTR [rsp+0x128]
  444849:	mov    rbx,QWORD PTR [rsp+0x48]
  44484e:	mov    r15d,0x10
  444854:	neg    ebp
  444856:	jmp    0x4444f4
  44485b:	nop    DWORD PTR [rax+rax*1+0x0]
  444860:	mov    eax,DWORD PTR [rsp+0x30]
  444864:	sub    DWORD PTR [rsp+0x50],eax
  444868:	mov    DWORD PTR [rsp+0x88],0x0
  444873:	neg    eax
  444875:	mov    DWORD PTR [rsp+0x58],eax
  444879:	jmp    0x444099
  44487e:	xchg   ax,ax
  444880:	neg    eax
  444882:	mov    DWORD PTR [rsp+0x40],0x0
  44488a:	mov    DWORD PTR [rsp+0x50],eax
  44488e:	jmp    0x44407a
  444893:	pxor   xmm0,xmm0
  444897:	cvtsi2sd xmm0,eax
  44489b:	ucomisd xmm0,xmm1
  44489f:	jp     0x4448a7
  4448a1:	je     0x44400b
  4448a7:	sub    DWORD PTR [rsp+0x30],0x1
  4448ac:	jmp    0x44400b
  4448b1:	mov    r10d,DWORD PTR [rsp+0x60]
  4448b6:	test   r10d,r10d
  4448b9:	je     0x444ac0
  4448bf:	lea    edx,[rbx+r13*1]
  4448c3:	test   edx,edx
  4448c5:	jle    0x4448d2
  4448c7:	mov    rcx,rdi
  4448ca:	call   0x445970
  4448cf:	mov    rdi,rax
  4448d2:	test   ebp,ebp
  4448d4:	mov    r13,rdi
  4448d7:	jne    0x444f75
  4448dd:	mov    DWORD PTR [rsp+0x9c],0x1
  4448e8:	mov    rbx,QWORD PTR [rsp+0x48]
  4448ed:	mov    QWORD PTR [rsp+0x40],r12
  4448f2:	mov    QWORD PTR [rsp+0x50],r15
  4448f7:	jmp    0x4449be
  4448fc:	nop    DWORD PTR [rax+0x0]
  444900:	mov    rcx,r8
  444903:	call   0x445570
  444908:	mov    eax,r12d
  44490b:	or     eax,DWORD PTR [rsp+0x120]
  444912:	jne    0x44492a
  444914:	mov    ecx,DWORD PTR [rsp+0x38]
  444918:	test   ecx,ecx
  44491a:	jne    0x44492a
  44491c:	mov    rax,QWORD PTR [rsp+0x50]
  444921:	test   BYTE PTR [rax],0x1
  444924:	je     0x4450e5
  44492a:	test   r14d,r14d
  44492d:	js     0x444e40
  444933:	or     r14d,DWORD PTR [rsp+0x120]
  44493b:	jne    0x44494b
  44493d:	mov    rax,QWORD PTR [rsp+0x50]
  444942:	test   BYTE PTR [rax],0x1
  444945:	je     0x444e40
  44494b:	test   r12d,r12d
  44494e:	jle    0x44495b
  444950:	cmp    DWORD PTR [rsp+0x38],0x2
  444955:	jne    0x44504f
  44495b:	add    rbx,0x1
  44495f:	mov    BYTE PTR [rbx-0x1],bpl
  444963:	mov    eax,DWORD PTR [rsp+0x68]
  444967:	cmp    DWORD PTR [rsp+0x9c],eax
  44496e:	je     0x444fdb
  444974:	xor    r8d,r8d
  444977:	mov    rcx,rsi
  44497a:	mov    edx,0xa
  44497f:	call   0x4455e0
  444984:	xor    r8d,r8d
  444987:	cmp    rdi,r13
  44498a:	mov    rsi,rax
  44498d:	mov    edx,0xa
  444992:	mov    rcx,rdi
  444995:	je     0x444a30
  44499b:	call   0x4455e0
  4449a0:	mov    rcx,r13
  4449a3:	xor    r8d,r8d
  4449a6:	mov    edx,0xa
  4449ab:	mov    rdi,rax
  4449ae:	call   0x4455e0
  4449b3:	mov    r13,rax
  4449b6:	add    DWORD PTR [rsp+0x9c],0x1
  4449be:	mov    r12,QWORD PTR [rsp+0x40]
  4449c3:	mov    rcx,rsi
  4449c6:	mov    rdx,r12
  4449c9:	call   0x443c10
  4449ce:	mov    rdx,rdi
  4449d1:	mov    rcx,rsi
  4449d4:	mov    r15d,eax
  4449d7:	lea    ebp,[rax+0x30]
  4449da:	call   0x445a90
  4449df:	mov    rcx,r12
  4449e2:	mov    rdx,r13
  4449e5:	mov    r14d,eax
  4449e8:	call   0x445ae0
  4449ed:	mov    r9d,DWORD PTR [rax+0x10]
  4449f1:	mov    r8,rax
  4449f4:	mov    r12d,0x1
  4449fa:	test   r9d,r9d
  4449fd:	jne    0x444900
  444a03:	mov    rdx,rax
  444a06:	mov    rcx,rsi
  444a09:	mov    QWORD PTR [rsp+0x58],rax
  444a0e:	call   0x445a90
  444a13:	mov    r8,QWORD PTR [rsp+0x58]
  444a18:	mov    r12d,eax
  444a1b:	jmp    0x444900
  444a20:	mov    r12d,DWORD PTR [rsp+0x58]
  444a25:	mov    ebx,DWORD PTR [rsp+0x50]
  444a29:	xor    edi,edi
  444a2b:	jmp    0x4445cf
  444a30:	call   0x4455e0
  444a35:	mov    rdi,rax
  444a38:	mov    r13,rax
  444a3b:	jmp    0x4449b6
  444a40:	mov    edx,DWORD PTR [rsp+0x58]
  444a44:	mov    rcx,rsi
  444a47:	call   0x445800
  444a4c:	mov    rsi,rax
  444a4f:	jmp    0x44464b
  444a54:	mov    DWORD PTR [rsp+0x60],0x0
  444a5c:	jmp    0x4440f7
  444a61:	mov    rdx,r12
  444a64:	mov    rcx,rsi
  444a67:	call   0x445a90
  444a6c:	test   eax,eax
  444a6e:	jns    0x4446f0
  444a74:	xor    r8d,r8d
  444a77:	mov    rcx,rsi
  444a7a:	mov    edx,0xa
  444a7f:	sub    DWORD PTR [rsp+0x30],0x1
  444a84:	call   0x4455e0
  444a89:	mov    rsi,rax
  444a8c:	mov    eax,DWORD PTR [rsp+0x60]
  444a90:	test   eax,eax
  444a92:	jne    0x445158
  444a98:	mov    eax,DWORD PTR [rsp+0x8c]
  444a9f:	test   eax,eax
  444aa1:	jg     0x444ab5
  444aa3:	cmp    DWORD PTR [rsp+0x120],0x2
  444aab:	mov    DWORD PTR [rsp+0x68],eax
  444aaf:	jg     0x44470c
  444ab5:	mov    eax,DWORD PTR [rsp+0x8c]
  444abc:	mov    DWORD PTR [rsp+0x68],eax
  444ac0:	mov    DWORD PTR [rsp+0x9c],0x1
  444acb:	mov    rbx,QWORD PTR [rsp+0x48]
  444ad0:	mov    r13d,DWORD PTR [rsp+0x68]
  444ad5:	jmp    0x444afb
  444ad7:	nop    WORD PTR [rax+rax*1+0x0]
  444ae0:	mov    rcx,rsi
  444ae3:	xor    r8d,r8d
  444ae6:	mov    edx,0xa
  444aeb:	call   0x4455e0
  444af0:	add    DWORD PTR [rsp+0x9c],0x1
  444af8:	mov    rsi,rax
  444afb:	mov    rdx,r12
  444afe:	mov    rcx,rsi
  444b01:	add    rbx,0x1
  444b05:	call   0x443c10
  444b0a:	lea    ebp,[rax+0x30]
  444b0d:	mov    BYTE PTR [rbx-0x1],bpl
  444b11:	cmp    DWORD PTR [rsp+0x9c],r13d
  444b19:	jl     0x444ae0
  444b1b:	xor    r14d,r14d
  444b1e:	mov    eax,DWORD PTR [rsp+0x38]
  444b22:	test   eax,eax
  444b24:	je     0x444eec
  444b2a:	cmp    eax,0x2
  444b2d:	je     0x444f1c
  444b33:	cmp    DWORD PTR [rsi+0x14],0x1
  444b37:	jle    0x4450b3
  444b3d:	movzx  edx,BYTE PTR [rbx-0x1]
  444b41:	mov    rcx,QWORD PTR [rsp+0x48]
  444b46:	jmp    0x444b60
  444b48:	nop    DWORD PTR [rax+rax*1+0x0]
  444b50:	cmp    rax,rcx
  444b53:	je     0x444d0c
  444b59:	movzx  edx,BYTE PTR [rax-0x1]
  444b5d:	mov    rbx,rax
  444b60:	cmp    dl,0x39
  444b63:	lea    rax,[rbx-0x1]
  444b67:	je     0x444b50
  444b69:	add    edx,0x1
  444b6c:	mov    r15d,0x20
  444b72:	mov    BYTE PTR [rax],dl
  444b74:	mov    rcx,r12
  444b77:	call   0x445570
  444b7c:	test   rdi,rdi
  444b7f:	je     0x444c6f
  444b85:	cmp    r14,rdi
  444b88:	je     0x444b97
  444b8a:	test   r14,r14
  444b8d:	je     0x444b97
  444b8f:	mov    rcx,r14
  444b92:	call   0x445570
  444b97:	mov    ebp,DWORD PTR [rsp+0x30]
  444b9b:	add    ebp,0x1
  444b9e:	jmp    0x444505
  444ba3:	mov    QWORD PTR [rsp+0x40],r9
  444ba8:	mov    rdi,QWORD PTR [rsp+0x48]
  444bad:	movsd  xmm0,QWORD PTR [rsp+0x40]
  444bb3:	mov    DWORD PTR [rsp+0x9c],0x1
  444bbe:	movapd xmm1,xmm0
  444bc2:	mov    rbx,rdi
  444bc5:	add    rbx,0x1
  444bc9:	divsd  xmm1,xmm2
  444bcd:	cvttsd2si eax,xmm1
  444bd1:	pxor   xmm1,xmm1
  444bd5:	cvtsi2sd xmm1,eax
  444bd9:	lea    edx,[rax+0x30]
  444bdc:	mov    BYTE PTR [rdi],dl
  444bde:	mulsd  xmm1,xmm2
  444be2:	subsd  xmm0,xmm1
  444be6:	ucomisd xmm0,xmm6
  444bea:	jp     0x444bee
  444bec:	je     0x444c60
  444bee:	mov    edx,DWORD PTR [rsp+0x9c]
  444bf5:	cmp    DWORD PTR [rsp+0x68],edx
  444bf9:	je     0x444ce7
  444bff:	movsd  xmm3,QWORD PTR [rip+0x15c09]        # 0x45a810
  444c07:	movapd xmm4,xmm6
  444c0b:	mov    ecx,DWORD PTR [rsp+0x68]
  444c0f:	jmp    0x444c20
  444c11:	mov    edx,DWORD PTR [rsp+0x9c]
  444c18:	cmp    ecx,edx
  444c1a:	je     0x444ce7
  444c20:	mulsd  xmm0,xmm3
  444c24:	add    edx,0x1
  444c27:	add    rbx,0x1
  444c2b:	mov    DWORD PTR [rsp+0x9c],edx
  444c32:	movapd xmm1,xmm0
  444c36:	divsd  xmm1,xmm2
  444c3a:	cvttsd2si eax,xmm1
  444c3e:	pxor   xmm1,xmm1
  444c42:	cvtsi2sd xmm1,eax
  444c46:	lea    edx,[rax+0x30]
  444c49:	mov    BYTE PTR [rbx-0x1],dl
  444c4c:	mulsd  xmm1,xmm2
  444c50:	subsd  xmm0,xmm1
  444c54:	ucomisd xmm0,xmm6
  444c58:	jp     0x444c11
  444c5a:	ucomisd xmm0,xmm4
  444c5e:	jne    0x444c11
  444c60:	mov    ebp,DWORD PTR [rsp+0x30]
  444c64:	add    ebp,0x1
  444c67:	xor    r15d,r15d
  444c6a:	jmp    0x444320
  444c6f:	mov    ebp,DWORD PTR [rsp+0x30]
  444c73:	add    ebp,0x1
  444c76:	jmp    0x444320
  444c7b:	mov    ebx,0x1
  444c80:	mov    DWORD PTR [rsp+0x128],0x1
  444c8b:	jmp    0x4443da
  444c90:	cmp    DWORD PTR [rsp+0x68],0xe
  444c95:	mov    DWORD PTR [rsp+0x9c],0x1
  444ca0:	mov    ecx,0x1
  444ca5:	setbe  bl
  444ca8:	and    ebx,eax
  444caa:	jmp    0x444129
  444caf:	mov    r12d,DWORD PTR [rsp+0x58]
  444cb4:	mov    ebx,DWORD PTR [rsp+0x50]
  444cb8:	jmp    0x4445ba
  444cbd:	mov    eax,0xffffffff
  444cc2:	xor    ebx,ebx
  444cc4:	mov    DWORD PTR [rsp+0x60],0x1
  444ccc:	mov    DWORD PTR [rsp+0x8c],eax
  444cd3:	mov    DWORD PTR [rsp+0x68],eax
  444cd7:	mov    DWORD PTR [rsp+0x128],0x0
  444ce2:	jmp    0x444153
  444ce7:	mov    r10d,DWORD PTR [rsp+0x38]
  444cec:	test   r10d,r10d
  444cef:	je     0x444fae
  444cf5:	cmp    DWORD PTR [rsp+0x38],0x1
  444cfa:	je     0x4450a1
  444d00:	mov    ebp,DWORD PTR [rsp+0x30]
  444d04:	add    ebp,0x1
  444d07:	jmp    0x444313
  444d0c:	mov    rax,QWORD PTR [rsp+0x48]
  444d11:	add    DWORD PTR [rsp+0x30],0x1
  444d16:	mov    r15d,0x20
  444d1c:	mov    BYTE PTR [rax],0x31
  444d1f:	jmp    0x444b74
  444d24:	mov    ebp,0x2
  444d29:	xor    r12d,r12d
  444d2c:	xor    edi,edi
  444d2e:	jmp    0x4444e2
  444d33:	mov    r10,QWORD PTR [rip+0x16016]        # 0x45ad50
  444d3a:	mov    QWORD PTR [rsp+0x38],rax
  444d3f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  444d45:	mov    DWORD PTR [rsp+0x9c],0x1
  444d50:	mov    rbx,QWORD PTR [rsp+0x48]
  444d55:	movsd  xmm1,QWORD PTR [rip+0x15ab3]        # 0x45a810
  444d5d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  444d63:	jmp    0x444d73
  444d65:	mulsd  xmm0,xmm1
  444d69:	add    edx,0x1
  444d6c:	mov    DWORD PTR [rsp+0x9c],edx
  444d73:	cvttsd2si eax,xmm0
  444d77:	test   eax,eax
  444d79:	je     0x444d87
  444d7b:	pxor   xmm2,xmm2
  444d7f:	cvtsi2sd xmm2,eax
  444d83:	subsd  xmm0,xmm2
  444d87:	add    rbx,0x1
  444d8b:	add    eax,0x30
  444d8e:	mov    BYTE PTR [rbx-0x1],al
  444d91:	mov    edx,DWORD PTR [rsp+0x9c]
  444d98:	cmp    edx,r9d
  444d9b:	jne    0x444d65
  444d9d:	movsd  xmm1,QWORD PTR [rip+0x15a9b]        # 0x45a840
  444da5:	movapd xmm2,xmm3
  444da9:	addsd  xmm2,xmm1
  444dad:	ucomisd xmm0,xmm2
  444db1:	ja     0x444e07
  444db3:	subsd  xmm1,xmm3
  444db7:	ucomisd xmm1,xmm0
  444dbb:	jbe    0x44445e
  444dc1:	ucomisd xmm0,xmm6
  444dc5:	jp     0x44514d
  444dcb:	jne    0x44514d
  444dd1:	xor    r15d,r15d
  444dd4:	jmp    0x444de7
  444dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  444de0:	movzx  eax,BYTE PTR [rbx-0x2]
  444de4:	mov    rbx,rdx
  444de7:	cmp    al,0x30
  444de9:	lea    rdx,[rbx-0x1]
  444ded:	je     0x444de0
  444def:	lea    ebp,[rcx+0x1]
  444df2:	jmp    0x444320
  444df7:	test   al,0x1
  444df9:	mov    ecx,DWORD PTR [rsp+0x30]
  444dfd:	movzx  eax,BYTE PTR [rbx-0x1]
  444e01:	je     0x44514d
  444e07:	mov    r8,QWORD PTR [rsp+0x48]
  444e0c:	jmp    0x444e20
  444e0e:	xchg   ax,ax
  444e10:	cmp    rdx,r8
  444e13:	je     0x444f5c
  444e19:	movzx  eax,BYTE PTR [rdx-0x1]
  444e1d:	mov    rbx,rdx
  444e20:	cmp    al,0x39
  444e22:	lea    rdx,[rbx-0x1]
  444e26:	je     0x444e10
  444e28:	mov    QWORD PTR [rsp+0x48],r8
  444e2d:	add    eax,0x1
  444e30:	mov    BYTE PTR [rdx],al
  444e32:	lea    ebp,[rcx+0x1]
  444e35:	mov    r15d,0x20
  444e3b:	jmp    0x444320
  444e40:	mov    edx,DWORD PTR [rsp+0x38]
  444e44:	mov    eax,r12d
  444e47:	mov    r14d,ebp
  444e4a:	mov    r12,QWORD PTR [rsp+0x40]
  444e4f:	test   edx,edx
  444e51:	je     0x445081
  444e57:	cmp    DWORD PTR [rsi+0x14],0x1
  444e5b:	jle    0x445077
  444e61:	cmp    DWORD PTR [rsp+0x38],0x2
  444e66:	jne    0x444eb7
  444e68:	jmp    0x445096
  444e6d:	nop    DWORD PTR [rax]
  444e70:	add    rbx,0x1
  444e74:	xor    r8d,r8d
  444e77:	mov    rcx,r13
  444e7a:	mov    BYTE PTR [rbx-0x1],r14b
  444e7e:	mov    edx,0xa
  444e83:	call   0x4455e0
  444e88:	cmp    rdi,r13
  444e8b:	mov    rcx,rsi
  444e8e:	mov    edx,0xa
  444e93:	cmove  rdi,rax
  444e97:	xor    r8d,r8d
  444e9a:	mov    rbp,rax
  444e9d:	call   0x4455e0
  444ea2:	mov    rdx,r12
  444ea5:	mov    rcx,rax
  444ea8:	mov    rsi,rax
  444eab:	call   0x443c10
  444eb0:	lea    r14d,[rax+0x30]
  444eb4:	mov    r13,rbp
  444eb7:	mov    rdx,r13
  444eba:	mov    rcx,r12
  444ebd:	call   0x445a90
  444ec2:	test   eax,eax
  444ec4:	jg     0x444e70
  444ec6:	cmp    r14d,0x39
  444eca:	je     0x4450c6
  444ed0:	add    r14d,0x1
  444ed4:	mov    r15d,0x20
  444eda:	mov    BYTE PTR [rbx],r14b
  444edd:	mov    r14,rdi
  444ee0:	add    rbx,0x1
  444ee4:	mov    rdi,r13
  444ee7:	jmp    0x444b74
  444eec:	mov    rcx,rsi
  444eef:	mov    edx,0x1
  444ef4:	call   0x445970
  444ef9:	mov    rdx,r12
  444efc:	mov    rcx,rax
  444eff:	mov    rsi,rax
  444f02:	call   0x445a90
  444f07:	cmp    eax,0x0
  444f0a:	jg     0x444b3d
  444f10:	jne    0x444f1c
  444f12:	and    bpl,0x1
  444f16:	jne    0x444b3d
  444f1c:	cmp    DWORD PTR [rsi+0x14],0x1
  444f20:	mov    r15d,0x10
  444f26:	jg     0x444f33
  444f28:	jmp    0x4451bd
  444f2d:	nop    DWORD PTR [rax]
  444f30:	mov    rbx,rax
  444f33:	cmp    BYTE PTR [rbx-0x1],0x30
  444f37:	lea    rax,[rbx-0x1]
  444f3b:	je     0x444f30
  444f3d:	jmp    0x444b74
  444f42:	mov    ebx,DWORD PTR [rsp+0x50]
  444f46:	mov    DWORD PTR [rsp+0x9c],0x0
  444f51:	xor    eax,eax
  444f53:	sub    ebx,DWORD PTR [rsp+0x68]
  444f57:	jmp    0x4445ba
  444f5c:	mov    QWORD PTR [rsp+0x48],r8
  444f61:	add    ecx,0x1
  444f64:	mov    BYTE PTR [r8],0x30
  444f68:	mov    rdx,r8
  444f6b:	mov    eax,0x31
  444f70:	jmp    0x444e30
  444f75:	mov    ecx,DWORD PTR [rdi+0x8]
  444f78:	call   0x445460
  444f7d:	lea    rcx,[rax+0x10]
  444f81:	mov    rbx,rax
  444f84:	movsxd rax,DWORD PTR [rdi+0x14]
  444f88:	lea    rdx,[rdi+0x10]
  444f8c:	lea    r8,[rax*4+0x8]
  444f94:	call   0x449450
  444f99:	mov    edx,0x1
  444f9e:	mov    rcx,rbx
  444fa1:	call   0x445970
  444fa6:	mov    r13,rax
  444fa9:	jmp    0x4448dd
  444fae:	addsd  xmm0,xmm0
  444fb2:	ucomisd xmm0,xmm2
  444fb6:	ja     0x4450a1
  444fbc:	ucomisd xmm2,xmm0
  444fc0:	jp     0x444fc8
  444fc2:	je     0x444df7
  444fc8:	movzx  eax,BYTE PTR [rbx-0x1]
  444fcc:	mov    ecx,DWORD PTR [rsp+0x30]
  444fd0:	mov    r15d,0x10
  444fd6:	jmp    0x444de7
  444fdb:	mov    r14,rdi
  444fde:	mov    r12,QWORD PTR [rsp+0x40]
  444fe3:	mov    rdi,r13
  444fe6:	jmp    0x444b1e
  444feb:	mov    eax,DWORD PTR [rsp+0x68]
  444fef:	test   eax,eax
  444ff1:	je     0x4443fa
  444ff7:	mov    r9d,DWORD PTR [rsp+0x8c]
  444fff:	test   r9d,r9d
  445002:	jle    0x44445e
  445008:	movsd  xmm0,QWORD PTR [rip+0x15800]        # 0x45a810
  445010:	mov    ecx,0xffffffff
  445015:	movsd  xmm1,QWORD PTR [rip+0x157fb]        # 0x45a818
  44501d:	mulsd  xmm0,xmm4
  445021:	mulsd  xmm1,xmm0
  445025:	addsd  xmm1,QWORD PTR [rip+0x157f3]        # 0x45a820
  44502d:	movq   rdx,xmm1
  445032:	movq   rax,xmm1
  445037:	shr    rdx,0x20
  44503b:	mov    eax,eax
  44503d:	sub    edx,0x3400000
  445043:	shl    rdx,0x20
  445047:	or     rax,rdx
  44504a:	jmp    0x444202
  44504f:	cmp    ebp,0x39
  445052:	mov    r12,QWORD PTR [rsp+0x40]
  445057:	mov    rax,rbx
  44505a:	je     0x4450c9
  44505c:	add    ebp,0x1
  44505f:	mov    r14,rdi
  445062:	add    rbx,0x1
  445066:	mov    BYTE PTR [rax],bpl
  445069:	mov    rdi,r13
  44506c:	mov    r15d,0x20
  445072:	jmp    0x444b74
  445077:	cmp    DWORD PTR [rsi+0x18],0x0
  44507b:	jne    0x444e61
  445081:	test   eax,eax
  445083:	jg     0x445119
  445089:	xor    r15d,r15d
  44508c:	cmp    DWORD PTR [rsi+0x14],0x1
  445090:	jle    0x445198
  445096:	mov    r15d,0x10
  44509c:	jmp    0x444eda
  4450a1:	movzx  eax,BYTE PTR [rbx-0x1]
  4450a5:	mov    ecx,DWORD PTR [rsp+0x30]
  4450a9:	mov    r8,QWORD PTR [rsp+0x48]
  4450ae:	jmp    0x444e20
  4450b3:	mov    eax,DWORD PTR [rsi+0x18]
  4450b6:	test   eax,eax
  4450b8:	jne    0x444b3d
  4450be:	xor    r15d,r15d
  4450c1:	jmp    0x444f33
  4450c6:	mov    rax,rbx
  4450c9:	mov    r14,rdi
  4450cc:	add    rbx,0x1
  4450d0:	mov    rdi,r13
  4450d3:	mov    BYTE PTR [rax],0x39
  4450d6:	mov    edx,0x39
  4450db:	mov    rcx,QWORD PTR [rsp+0x48]
  4450e0:	jmp    0x444b60
  4450e5:	cmp    ebp,0x39
  4450e8:	mov    r12,QWORD PTR [rsp+0x40]
  4450ed:	mov    rax,rbx
  4450f0:	je     0x4450c6
  4450f2:	test   r14d,r14d
  4450f5:	jle    0x4451d0
  4450fb:	mov    ebp,r15d
  4450fe:	mov    r15d,0x20
  445104:	add    ebp,0x31
  445107:	mov    r14,rdi
  44510a:	add    rbx,0x1
  44510e:	mov    BYTE PTR [rax],bpl
  445111:	mov    rdi,r13
  445114:	jmp    0x444b74
  445119:	mov    rcx,rsi
  44511c:	mov    edx,0x1
  445121:	call   0x445970
  445126:	mov    rdx,r12
  445129:	mov    rcx,rax
  44512c:	mov    rsi,rax
  44512f:	call   0x445a90
  445134:	cmp    eax,0x0
  445137:	jle    0x4451aa
  445139:	cmp    ebp,0x39
  44513c:	je     0x4450c6
  44513e:	lea    r14d,[rbp+0x1]
  445142:	mov    r15d,0x20
  445148:	jmp    0x44508c
  44514d:	mov    r15d,0x10
  445153:	jmp    0x444de7
  445158:	xor    r8d,r8d
  44515b:	mov    rcx,rdi
  44515e:	mov    edx,0xa
  445163:	call   0x4455e0
  445168:	mov    rdi,rax
  44516b:	mov    eax,DWORD PTR [rsp+0x8c]
  445172:	test   eax,eax
  445174:	jg     0x445188
  445176:	cmp    DWORD PTR [rsp+0x120],0x2
  44517e:	mov    DWORD PTR [rsp+0x68],eax
  445182:	jg     0x44470c
  445188:	mov    eax,DWORD PTR [rsp+0x8c]
  44518f:	mov    DWORD PTR [rsp+0x68],eax
  445193:	jmp    0x4448bf
  445198:	cmp    DWORD PTR [rsi+0x18],0x0
  44519c:	mov    eax,0x10
  4451a1:	cmovne r15d,eax
  4451a5:	jmp    0x444eda
  4451aa:	jne    0x4451b2
  4451ac:	test   bpl,0x1
  4451b0:	jne    0x445139
  4451b2:	mov    r15d,0x20
  4451b8:	jmp    0x44508c
  4451bd:	cmp    DWORD PTR [rsi+0x18],0x1
  4451c1:	sbb    r15d,r15d
  4451c4:	not    r15d
  4451c7:	and    r15d,0x10
  4451cb:	jmp    0x444f33
  4451d0:	cmp    DWORD PTR [rsi+0x14],0x1
  4451d4:	mov    r15d,0x10
  4451da:	jg     0x445107
  4451e0:	cmp    DWORD PTR [rsi+0x18],0x1
  4451e4:	sbb    r15d,r15d
  4451e7:	not    r15d
  4451ea:	and    r15d,0x10
  4451ee:	jmp    0x445107
  4451f3:	xor    eax,eax
  4451f5:	jmp    0x443ed7
  4451fa:	nop
  4451fb:	nop
  4451fc:	nop
  4451fd:	nop
  4451fe:	nop
  4451ff:	nop
  445200:	push   rbp
  445201:	push   rdi
  445202:	push   rsi
  445203:	push   rbx
  445204:	mov    rsi,rcx
  445207:	lea    r10,[rcx+0x18]
  44520b:	movsxd rcx,DWORD PTR [rcx+0x14]
  44520f:	mov    eax,edx
  445211:	sar    eax,0x5
  445214:	cmp    eax,ecx
  445216:	jge    0x4452a0
  44521c:	cdqe   
  44521e:	and    edx,0x1f
  445221:	lea    rbx,[r10+rcx*4]
  445225:	lea    rdi,[r10+rax*4]
  445229:	je     0x4452b3
  44522f:	mov    r9d,DWORD PTR [rdi]
  445232:	lea    r8,[rdi+0x4]
  445236:	mov    ebp,0x20
  44523b:	mov    ecx,edx
  44523d:	sub    ebp,edx
  44523f:	shr    r9d,cl
  445242:	cmp    rbx,r8
  445245:	jbe    0x4452f8
  44524b:	mov    r11,r10
  44524e:	xchg   ax,ax
  445250:	mov    eax,DWORD PTR [r8]
  445253:	mov    ecx,ebp
  445255:	add    r11,0x4
  445259:	add    r8,0x4
  44525d:	shl    eax,cl
  44525f:	mov    ecx,edx
  445261:	or     eax,r9d
  445264:	mov    DWORD PTR [r11-0x4],eax
  445268:	mov    r9d,DWORD PTR [r8-0x4]
  44526c:	shr    r9d,cl
  44526f:	cmp    rbx,r8
  445272:	ja     0x445250
  445274:	sub    rbx,rdi
  445277:	lea    rax,[rbx-0x5]
  44527b:	shr    rax,0x2
  44527f:	lea    rax,[r10+rax*4+0x4]
  445284:	test   r9d,r9d
  445287:	mov    DWORD PTR [rax],r9d
  44528a:	je     0x445290
  44528c:	add    rax,0x4
  445290:	sub    rax,r10
  445293:	shr    rax,0x2
  445297:	jmp    0x4452ec
  445299:	nop    DWORD PTR [rax+0x0]
  4452a0:	mov    DWORD PTR [rsi+0x14],0x0
  4452a7:	mov    DWORD PTR [rsi+0x18],0x0
  4452ae:	pop    rbx
  4452af:	pop    rsi
  4452b0:	pop    rdi
  4452b1:	pop    rbp
  4452b2:	ret    
  4452b3:	cmp    rbx,rdi
  4452b6:	mov    rdx,r10
  4452b9:	mov    rax,rdi
  4452bc:	jbe    0x4452a0
  4452be:	xchg   ax,ax
  4452c0:	add    rax,0x4
  4452c4:	mov    r8d,DWORD PTR [rax-0x4]
  4452c8:	add    rdx,0x4
  4452cc:	cmp    rbx,rax
  4452cf:	mov    DWORD PTR [rdx-0x4],r8d
  4452d3:	ja     0x4452c0
  4452d5:	not    rdi
  4452d8:	lea    rax,[rdi+rbx*1]
  4452dc:	shr    rax,0x2
  4452e0:	lea    rax,[rax*4+0x4]
  4452e8:	shr    rax,0x2
  4452ec:	test   eax,eax
  4452ee:	mov    DWORD PTR [rsi+0x14],eax
  4452f1:	je     0x4452a7
  4452f3:	pop    rbx
  4452f4:	pop    rsi
  4452f5:	pop    rdi
  4452f6:	pop    rbp
  4452f7:	ret    
  4452f8:	mov    rax,r10
  4452fb:	jmp    0x445284
  4452fd:	nop    DWORD PTR [rax]
  445300:	movsxd rax,DWORD PTR [rcx+0x14]
  445304:	lea    rdx,[rcx+0x18]
  445308:	lea    r8,[rdx+rax*4]
  44530c:	cmp    rdx,r8
  44530f:	jae    0x44533b
  445311:	mov    ecx,DWORD PTR [rcx+0x18]
  445314:	xor    eax,eax
  445316:	test   ecx,ecx
  445318:	je     0x445326
  44531a:	jmp    0x445334
  44531c:	nop    DWORD PTR [rax+0x0]
  445320:	mov    ecx,DWORD PTR [rdx]
  445322:	test   ecx,ecx
  445324:	jne    0x445334
  445326:	add    rdx,0x4
  44532a:	add    eax,0x20
  44532d:	cmp    r8,rdx
  445330:	ja     0x445320
  445332:	repz ret 
  445334:	tzcnt  ecx,ecx
  445338:	add    eax,ecx
  44533a:	ret    
  44533b:	xor    eax,eax
  44533d:	ret    
  44533e:	nop
  44533f:	nop
  445340:	push   rsi
  445341:	push   rbx
  445342:	sub    rsp,0x28
  445346:	mov    eax,DWORD PTR [rip+0x1e7c4]        # 0x463b10
  44534c:	movsxd rsi,ecx
  44534f:	cmp    eax,0x2
  445352:	je     0x4453bd
  445354:	test   eax,eax
  445356:	je     0x445382
  445358:	cmp    eax,0x1
  44535b:	jne    0x44537b
  44535d:	mov    rbx,QWORD PTR [rip+0x1f360]        # 0x4646c4
  445364:	mov    ecx,0x1
  445369:	call   rbx
  44536b:	mov    eax,DWORD PTR [rip+0x1e79f]        # 0x463b10
  445371:	cmp    eax,0x1
  445374:	je     0x445364
  445376:	cmp    eax,0x2
  445379:	je     0x4453bd
  44537b:	add    rsp,0x28
  44537f:	pop    rbx
  445380:	pop    rsi
  445381:	ret    
  445382:	mov    al,0x1
  445384:	xchg   DWORD PTR [rip+0x1e786],eax        # 0x463b10
  44538a:	test   eax,eax
  44538c:	jne    0x4453e0
  44538e:	lea    rcx,[rip+0x1e7ab]        # 0x463b40
  445395:	mov    rbx,QWORD PTR [rip+0x1f2d0]        # 0x46466c
  44539c:	call   rbx
  44539e:	lea    rcx,[rip+0x1e7c3]        # 0x463b68
  4453a5:	call   rbx
  4453a7:	lea    rcx,[rip+0x62]        # 0x445410
  4453ae:	call   0x43bf90
  4453b3:	mov    DWORD PTR [rip+0x1e753],0x2        # 0x463b10
  4453bd:	lea    rdx,[rsi+rsi*4]
  4453c1:	lea    rax,[rip+0x1e778]        # 0x463b40
  4453c8:	lea    rcx,[rax+rdx*8]
  4453cc:	mov    rax,QWORD PTR [rip+0x1f219]        # 0x4645ec
  4453d3:	add    rsp,0x28
  4453d7:	pop    rbx
  4453d8:	pop    rsi
  4453d9:	rex.W jmp rax
  4453dc:	nop    DWORD PTR [rax+0x0]
  4453e0:	cmp    eax,0x2
  4453e3:	je     0x445400
  4453e5:	mov    eax,DWORD PTR [rip+0x1e725]        # 0x463b10
  4453eb:	cmp    eax,0x1
  4453ee:	je     0x44535d
  4453f4:	jmp    0x445376
  4453f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  445400:	mov    DWORD PTR [rip+0x1e706],0x2        # 0x463b10
  44540a:	jmp    0x4453bd
  44540c:	nop    DWORD PTR [rax+0x0]
  445410:	push   rbx
  445411:	sub    rsp,0x20
  445415:	mov    eax,0x3
  44541a:	xchg   DWORD PTR [rip+0x1e6f0],eax        # 0x463b10
  445420:	cmp    eax,0x2
  445423:	je     0x445430
  445425:	add    rsp,0x20
  445429:	pop    rbx
  44542a:	ret    
  44542b:	nop    DWORD PTR [rax+rax*1+0x0]
  445430:	mov    rbx,QWORD PTR [rip+0x1f1ad]        # 0x4645e4
  445437:	lea    rcx,[rip+0x1e702]        # 0x463b40
  44543e:	call   rbx
  445440:	lea    rcx,[rip+0x1e721]        # 0x463b68
  445447:	mov    rax,rbx
  44544a:	add    rsp,0x20
  44544e:	pop    rbx
  44544f:	rex.W jmp rax
  445452:	nop    DWORD PTR [rax+0x0]
  445456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  445460:	push   rdi
  445461:	push   rsi
  445462:	push   rbx
  445463:	sub    rsp,0x20
  445467:	mov    ebx,ecx
  445469:	xor    ecx,ecx
  44546b:	call   0x445340
  445470:	cmp    ebx,0x9
  445473:	jg     0x4454b0
  445475:	lea    rdx,[rip+0x1e644]        # 0x463ac0
  44547c:	movsxd rcx,ebx
  44547f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  445483:	test   rdi,rdi
  445486:	je     0x445510
  44548c:	cmp    DWORD PTR [rip+0x1e67d],0x2        # 0x463b10
  445493:	mov    r8,QWORD PTR [rdi]
  445496:	mov    QWORD PTR [rdx+rcx*8],r8
  44549a:	jne    0x4454f6
  44549c:	lea    rcx,[rip+0x1e69d]        # 0x463b40
  4454a3:	call   QWORD PTR [rip+0x1f1d3]        # 0x46467c
  4454a9:	jmp    0x4454f6
  4454ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4454b0:	mov    eax,0x1
  4454b5:	mov    ecx,ebx
  4454b7:	shl    eax,cl
  4454b9:	mov    esi,eax
  4454bb:	lea    eax,[rax-0x1]
  4454be:	cdqe   
  4454c0:	lea    rdx,[rax*4+0x27]
  4454c8:	shr    rdx,0x3
  4454cc:	mov    edx,edx
  4454ce:	lea    rcx,[rdx*8+0x0]
  4454d6:	call   0x449468
  4454db:	test   rax,rax
  4454de:	mov    rdi,rax
  4454e1:	je     0x44556a
  4454e7:	cmp    DWORD PTR [rip+0x1e622],0x2        # 0x463b10
  4454ee:	mov    DWORD PTR [rdi+0x8],ebx
  4454f1:	mov    DWORD PTR [rdi+0xc],esi
  4454f4:	je     0x44549c
  4454f6:	mov    DWORD PTR [rdi+0x14],0x0
  4454fd:	mov    DWORD PTR [rdi+0x10],0x0
  445504:	mov    rax,rdi
  445507:	add    rsp,0x20
  44550b:	pop    rbx
  44550c:	pop    rsi
  44550d:	pop    rdi
  44550e:	ret    
  44550f:	nop
  445510:	mov    ecx,ebx
  445512:	mov    eax,0x1
  445517:	mov    rdi,QWORD PTR [rip+0x5d32]        # 0x44b250
  44551e:	shl    eax,cl
  445520:	lea    rcx,[rip+0x1dc99]        # 0x4631c0
  445527:	lea    edx,[rax-0x1]
  44552a:	mov    esi,eax
  44552c:	mov    rax,rdi
  44552f:	movsxd rdx,edx
  445532:	sub    rax,rcx
  445535:	lea    rdx,[rdx*4+0x27]
  44553d:	mov    rcx,rax
  445540:	sar    rcx,0x3
  445544:	shr    rdx,0x3
  445548:	mov    edx,edx
  44554a:	add    rcx,rdx
  44554d:	cmp    rcx,0x120
  445554:	ja     0x4454ce
  44555a:	lea    rdx,[rdi+rdx*8]
  44555e:	mov    QWORD PTR [rip+0x5ceb],rdx        # 0x44b250
  445565:	jmp    0x4454e7
  44556a:	xor    eax,eax
  44556c:	jmp    0x445507
  44556e:	xchg   ax,ax
  445570:	push   rbx
  445571:	sub    rsp,0x20
  445575:	test   rcx,rcx
  445578:	je     0x4455a9
  44557a:	cmp    DWORD PTR [rcx+0x8],0x9
  44557e:	jg     0x4455b0
  445580:	mov    rbx,rcx
  445583:	xor    ecx,ecx
  445585:	call   0x445340
  44558a:	movsxd rdx,DWORD PTR [rbx+0x8]
  44558e:	lea    rax,[rip+0x1e52b]        # 0x463ac0
  445595:	cmp    DWORD PTR [rip+0x1e574],0x2        # 0x463b10
  44559c:	mov    rcx,QWORD PTR [rax+rdx*8]
  4455a0:	mov    QWORD PTR [rax+rdx*8],rbx
  4455a4:	mov    QWORD PTR [rbx],rcx
  4455a7:	je     0x4455c0
  4455a9:	add    rsp,0x20
  4455ad:	pop    rbx
  4455ae:	ret    
  4455af:	nop
  4455b0:	add    rsp,0x20
  4455b4:	pop    rbx
  4455b5:	jmp    0x4494c8
  4455ba:	nop    WORD PTR [rax+rax*1+0x0]
  4455c0:	mov    rax,QWORD PTR [rip+0x1f0b5]        # 0x46467c
  4455c7:	lea    rcx,[rip+0x1e572]        # 0x463b40
  4455ce:	add    rsp,0x20
  4455d2:	pop    rbx
  4455d3:	rex.W jmp rax
  4455d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4455e0:	push   rbp
  4455e1:	push   rdi
  4455e2:	push   rsi
  4455e3:	push   rbx
  4455e4:	sub    rsp,0x28
  4455e8:	mov    esi,DWORD PTR [rcx+0x14]
  4455eb:	xor    r9d,r9d
  4455ee:	lea    r10,[rcx+0x18]
  4455f2:	mov    rdi,rcx
  4455f5:	movsxd rbx,r8d
  4455f8:	movsxd rdx,edx
  4455fb:	nop    DWORD PTR [rax+rax*1+0x0]
  445600:	mov    eax,DWORD PTR [r10+r9*4]
  445604:	imul   rax,rdx
  445608:	add    rax,rbx
  44560b:	mov    rbx,rax
  44560e:	mov    DWORD PTR [r10+r9*4],eax
  445612:	add    r9,0x1
  445616:	shr    rbx,0x20
  44561a:	cmp    esi,r9d
  44561d:	jg     0x445600
  44561f:	test   rbx,rbx
  445622:	mov    rax,rdi
  445625:	je     0x44563c
  445627:	cmp    esi,DWORD PTR [rdi+0xc]
  44562a:	jge    0x445645
  44562c:	movsxd rax,esi
  44562f:	add    esi,0x1
  445632:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  445636:	mov    DWORD PTR [rdi+0x14],esi
  445639:	mov    rax,rdi
  44563c:	add    rsp,0x28
  445640:	pop    rbx
  445641:	pop    rsi
  445642:	pop    rdi
  445643:	pop    rbp
  445644:	ret    
  445645:	mov    eax,DWORD PTR [rdi+0x8]
  445648:	lea    ecx,[rax+0x1]
  44564b:	call   0x445460
  445650:	test   rax,rax
  445653:	mov    rbp,rax
  445656:	je     0x44568e
  445658:	lea    rcx,[rax+0x10]
  44565c:	movsxd rax,DWORD PTR [rdi+0x14]
  445660:	lea    rdx,[rdi+0x10]
  445664:	lea    r8,[rax*4+0x8]
  44566c:	call   0x449450
  445671:	mov    rcx,rdi
  445674:	mov    rdi,rbp
  445677:	call   0x445570
  44567c:	movsxd rax,esi
  44567f:	add    esi,0x1
  445682:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  445686:	mov    DWORD PTR [rdi+0x14],esi
  445689:	mov    rax,rdi
  44568c:	jmp    0x44563c
  44568e:	xor    eax,eax
  445690:	jmp    0x44563c
  445692:	nop    DWORD PTR [rax+0x0]
  445696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4456a0:	push   rbx
  4456a1:	sub    rsp,0x20
  4456a5:	mov    ebx,ecx
  4456a7:	mov    ecx,0x1
  4456ac:	call   0x445460
  4456b1:	test   rax,rax
  4456b4:	je     0x4456c0
  4456b6:	mov    DWORD PTR [rax+0x18],ebx
  4456b9:	mov    DWORD PTR [rax+0x14],0x1
  4456c0:	add    rsp,0x20
  4456c4:	pop    rbx
  4456c5:	ret    
  4456c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4456d0:	push   r14
  4456d2:	push   r13
  4456d4:	push   r12
  4456d6:	push   rbp
  4456d7:	push   rdi
  4456d8:	push   rsi
  4456d9:	push   rbx
  4456da:	sub    rsp,0x20
  4456de:	movsxd r13,DWORD PTR [rcx+0x14]
  4456e2:	movsxd rbx,DWORD PTR [rdx+0x14]
  4456e6:	mov    r12,rcx
  4456e9:	mov    r14,rdx
  4456ec:	cmp    r13d,ebx
  4456ef:	jl     0x4457f1
  4456f5:	mov    eax,ebx
  4456f7:	movsxd rbx,r13d
  4456fa:	movsxd r13,eax
  4456fd:	xor    eax,eax
  4456ff:	lea    esi,[rbx+r13*1]
  445703:	cmp    esi,DWORD PTR [r12+0xc]
  445708:	setg   al
  44570b:	add    eax,DWORD PTR [r12+0x8]
  445710:	mov    ecx,eax
  445712:	call   0x445460
  445717:	test   rax,rax
  44571a:	je     0x4457fc
  445720:	lea    rdi,[rax+0x18]
  445724:	movsxd rdx,esi
  445727:	lea    rbp,[rdi+rdx*4]
  44572b:	mov    r8,rdi
  44572e:	cmp    rdi,rbp
  445731:	jae    0x445743
  445733:	mov    DWORD PTR [r8],0x0
  44573a:	add    r8,0x4
  44573e:	cmp    rbp,r8
  445741:	ja     0x445733
  445743:	lea    rdx,[r14+0x18]
  445747:	add    r12,0x18
  44574b:	lea    rbx,[r12+rbx*4]
  44574f:	lea    r13,[rdx+r13*4]
  445753:	cmp    rdx,r13
  445756:	jae    0x4457b9
  445758:	nop    DWORD PTR [rax+rax*1+0x0]
  445760:	add    rdx,0x4
  445764:	mov    r11d,DWORD PTR [rdx-0x4]
  445768:	test   r11d,r11d
  44576b:	je     0x4457b0
  44576d:	mov    r9,rdi
  445770:	mov    r8,r12
  445773:	xor    r10d,r10d
  445776:	jmp    0x445783
  445778:	nop    DWORD PTR [rax+rax*1+0x0]
  445780:	mov    r9,r14
  445783:	add    r8,0x4
  445787:	mov    ecx,DWORD PTR [r8-0x4]
  44578b:	mov    r14d,DWORD PTR [r9]
  44578e:	imul   rcx,r11
  445792:	add    rcx,r14
  445795:	lea    r14,[r9+0x4]
  445799:	add    rcx,r10
  44579c:	mov    r10,rcx
  44579f:	mov    DWORD PTR [r14-0x4],ecx
  4457a3:	shr    r10,0x20
  4457a7:	cmp    rbx,r8
  4457aa:	ja     0x445780
  4457ac:	mov    DWORD PTR [r9+0x4],r10d
  4457b0:	add    rdi,0x4
  4457b4:	cmp    r13,rdx
  4457b7:	ja     0x445760
  4457b9:	test   esi,esi
  4457bb:	jle    0x4457df
  4457bd:	mov    r8d,DWORD PTR [rbp-0x4]
  4457c1:	lea    rdx,[rbp-0x4]
  4457c5:	test   r8d,r8d
  4457c8:	je     0x4457da
  4457ca:	jmp    0x4457df
  4457cc:	nop    DWORD PTR [rax+0x0]
  4457d0:	sub    rdx,0x4
  4457d4:	mov    ecx,DWORD PTR [rdx]
  4457d6:	test   ecx,ecx
  4457d8:	jne    0x4457df
  4457da:	sub    esi,0x1
  4457dd:	jne    0x4457d0
  4457df:	mov    DWORD PTR [rax+0x14],esi
  4457e2:	add    rsp,0x20
  4457e6:	pop    rbx
  4457e7:	pop    rsi
  4457e8:	pop    rdi
  4457e9:	pop    rbp
  4457ea:	pop    r12
  4457ec:	pop    r13
  4457ee:	pop    r14
  4457f0:	ret    
  4457f1:	mov    r12,rdx
  4457f4:	mov    r14,rcx
  4457f7:	jmp    0x4456fd
  4457fc:	xor    eax,eax
  4457fe:	jmp    0x4457e2
  445800:	push   rbp
  445801:	push   rdi
  445802:	push   rsi
  445803:	push   rbx
  445804:	sub    rsp,0x28
  445808:	mov    eax,edx
  44580a:	mov    rbp,rcx
  44580d:	mov    ebx,edx
  44580f:	and    eax,0x3
  445812:	jne    0x4458a0
  445818:	sar    ebx,0x2
  44581b:	mov    rax,rbp
  44581e:	test   ebx,ebx
  445820:	je     0x44586c
  445822:	mov    rdi,QWORD PTR [rip+0x1d957]        # 0x463180
  445829:	test   rdi,rdi
  44582c:	jne    0x445842
  44582e:	jmp    0x4458ed
  445833:	sar    ebx,1
  445835:	je     0x445869
  445837:	mov    rsi,QWORD PTR [rdi]
  44583a:	test   rsi,rsi
  44583d:	je     0x445875
  44583f:	mov    rdi,rsi
  445842:	test   bl,0x1
  445845:	je     0x445833
  445847:	mov    rdx,rdi
  44584a:	mov    rcx,rbp
  44584d:	call   0x4456d0
  445852:	test   rax,rax
  445855:	mov    rsi,rax
  445858:	je     0x4458c3
  44585a:	mov    rcx,rbp
  44585d:	mov    rbp,rsi
  445860:	call   0x445570
  445865:	sar    ebx,1
  445867:	jne    0x445837
  445869:	mov    rax,rbp
  44586c:	add    rsp,0x28
  445870:	pop    rbx
  445871:	pop    rsi
  445872:	pop    rdi
  445873:	pop    rbp
  445874:	ret    
  445875:	mov    ecx,0x1
  44587a:	call   0x445340
  44587f:	mov    rsi,QWORD PTR [rdi]
  445882:	test   rsi,rsi
  445885:	je     0x4458ce
  445887:	cmp    DWORD PTR [rip+0x1e282],0x2        # 0x463b10
  44588e:	jne    0x44583f
  445890:	lea    rcx,[rip+0x1e2d1]        # 0x463b68
  445897:	call   QWORD PTR [rip+0x1eddf]        # 0x46467c
  44589d:	jmp    0x44583f
  44589f:	nop
  4458a0:	sub    eax,0x1
  4458a3:	lea    rdx,[rip+0x14fd6]        # 0x45a880
  4458aa:	xor    r8d,r8d
  4458ad:	cdqe   
  4458af:	mov    edx,DWORD PTR [rdx+rax*4]
  4458b2:	call   0x4455e0
  4458b7:	test   rax,rax
  4458ba:	mov    rbp,rax
  4458bd:	jne    0x445818
  4458c3:	xor    eax,eax
  4458c5:	add    rsp,0x28
  4458c9:	pop    rbx
  4458ca:	pop    rsi
  4458cb:	pop    rdi
  4458cc:	pop    rbp
  4458cd:	ret    
  4458ce:	mov    rdx,rdi
  4458d1:	mov    rcx,rdi
  4458d4:	call   0x4456d0
  4458d9:	test   rax,rax
  4458dc:	mov    rsi,rax
  4458df:	mov    QWORD PTR [rdi],rax
  4458e2:	je     0x4458c3
  4458e4:	mov    QWORD PTR [rax],0x0
  4458eb:	jmp    0x445887
  4458ed:	mov    ecx,0x1
  4458f2:	call   0x445340
  4458f7:	mov    rdi,QWORD PTR [rip+0x1d882]        # 0x463180
  4458fe:	test   rdi,rdi
  445901:	je     0x445922
  445903:	cmp    DWORD PTR [rip+0x1e206],0x2        # 0x463b10
  44590a:	jne    0x445842
  445910:	lea    rcx,[rip+0x1e251]        # 0x463b68
  445917:	call   QWORD PTR [rip+0x1ed5f]        # 0x46467c
  44591d:	jmp    0x445842
  445922:	mov    ecx,0x1
  445927:	call   0x445460
  44592c:	test   rax,rax
  44592f:	mov    rdi,rax
  445932:	je     0x445952
  445934:	mov    DWORD PTR [rax+0x18],0x271
  44593b:	mov    DWORD PTR [rax+0x14],0x1
  445942:	mov    QWORD PTR [rip+0x1d837],rax        # 0x463180
  445949:	mov    QWORD PTR [rax],0x0
  445950:	jmp    0x445903
  445952:	mov    QWORD PTR [rip+0x1d823],0x0        # 0x463180
  44595d:	xor    eax,eax
  44595f:	jmp    0x4458c5
  445964:	xchg   ax,ax
  445966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  445970:	push   r13
  445972:	push   r12
  445974:	push   rbp
  445975:	push   rdi
  445976:	push   rsi
  445977:	push   rbx
  445978:	sub    rsp,0x28
  44597c:	mov    rdi,rcx
  44597f:	mov    ebp,edx
  445981:	mov    esi,edx
  445983:	mov    r12d,DWORD PTR [rdi+0x14]
  445987:	sar    ebp,0x5
  44598a:	mov    eax,DWORD PTR [rdi+0xc]
  44598d:	mov    ecx,DWORD PTR [rcx+0x8]
  445990:	add    r12d,ebp
  445993:	lea    ebx,[r12+0x1]
  445998:	cmp    ebx,eax
  44599a:	jle    0x4459a9
  44599c:	nop    DWORD PTR [rax+0x0]
  4459a0:	add    eax,eax
  4459a2:	add    ecx,0x1
  4459a5:	cmp    ebx,eax
  4459a7:	jg     0x4459a0
  4459a9:	call   0x445460
  4459ae:	test   rax,rax
  4459b1:	mov    r13,rax
  4459b4:	je     0x445a7f
  4459ba:	test   ebp,ebp
  4459bc:	lea    r8,[rax+0x18]
  4459c0:	jle    0x445a77
  4459c6:	lea    eax,[rbp-0x1]
  4459c9:	lea    r9,[r8+rax*4+0x4]
  4459ce:	xchg   ax,ax
  4459d0:	add    r8,0x4
  4459d4:	mov    DWORD PTR [r8-0x4],0x0
  4459dc:	cmp    r8,r9
  4459df:	jne    0x4459d0
  4459e1:	movsxd rax,DWORD PTR [rdi+0x14]
  4459e5:	lea    r8,[rdi+0x18]
  4459e9:	mov    edx,esi
  4459eb:	and    edx,0x1f
  4459ee:	lea    rbp,[r8+rax*4]
  4459f2:	je     0x445a60
  4459f4:	mov    eax,0x20
  4459f9:	xor    r11d,r11d
  4459fc:	sub    eax,edx
  4459fe:	jmp    0x445a03
  445a00:	mov    r9,rsi
  445a03:	mov    r10d,DWORD PTR [r8]
  445a06:	mov    ecx,edx
  445a08:	lea    rsi,[r9+0x4]
  445a0c:	add    r8,0x4
  445a10:	shl    r10d,cl
  445a13:	mov    ecx,eax
  445a15:	or     r10d,r11d
  445a18:	mov    DWORD PTR [rsi-0x4],r10d
  445a1c:	mov    r11d,DWORD PTR [r8-0x4]
  445a20:	shr    r11d,cl
  445a23:	cmp    rbp,r8
  445a26:	ja     0x445a00
  445a28:	add    r12d,0x2
  445a2c:	test   r11d,r11d
  445a2f:	mov    DWORD PTR [r9+0x4],r11d
  445a33:	cmovne ebx,r12d
  445a37:	sub    ebx,0x1
  445a3a:	mov    rcx,rdi
  445a3d:	mov    DWORD PTR [r13+0x14],ebx
  445a41:	call   0x445570
  445a46:	mov    rax,r13
  445a49:	add    rsp,0x28
  445a4d:	pop    rbx
  445a4e:	pop    rsi
  445a4f:	pop    rdi
  445a50:	pop    rbp
  445a51:	pop    r12
  445a53:	pop    r13
  445a55:	ret    
  445a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  445a60:	add    r8,0x4
  445a64:	mov    edx,DWORD PTR [r8-0x4]
  445a68:	add    r9,0x4
  445a6c:	cmp    rbp,r8
  445a6f:	mov    DWORD PTR [r9-0x4],edx
  445a73:	ja     0x445a60
  445a75:	jmp    0x445a37
  445a77:	mov    r9,r8
  445a7a:	jmp    0x4459e1
  445a7f:	xor    eax,eax
  445a81:	jmp    0x445a49
  445a83:	nop    DWORD PTR [rax]
  445a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  445a90:	movsxd r8,DWORD PTR [rdx+0x14]
  445a94:	mov    eax,DWORD PTR [rcx+0x14]
  445a97:	sub    eax,r8d
  445a9a:	test   eax,eax
  445a9c:	jne    0x445ad2
  445a9e:	shl    r8,0x2
  445aa2:	add    rcx,0x18
  445aa6:	lea    rax,[rcx+r8*1]
  445aaa:	lea    rdx,[rdx+r8*1+0x18]
  445aaf:	jmp    0x445ab6
  445ab1:	cmp    rcx,rax
  445ab4:	jae    0x445ad0
  445ab6:	sub    rdx,0x4
  445aba:	sub    rax,0x4
  445abe:	mov    r9d,DWORD PTR [rdx]
  445ac1:	cmp    DWORD PTR [rax],r9d
  445ac4:	je     0x445ab1
  445ac6:	sbb    eax,eax
  445ac8:	or     eax,0x1
  445acb:	ret    
  445acc:	nop    DWORD PTR [rax+0x0]
  445ad0:	xor    eax,eax
  445ad2:	repz ret 
  445ad4:	xchg   ax,ax
  445ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  445ae0:	push   rdi
  445ae1:	push   rsi
  445ae2:	push   rbx
  445ae3:	sub    rsp,0x20
  445ae7:	mov    rsi,rcx
  445aea:	mov    rdi,rdx
  445aed:	call   0x445a90
  445af2:	test   eax,eax
  445af4:	je     0x445be0
  445afa:	mov    ebx,0x0
  445aff:	js     0x445c02
  445b05:	mov    ecx,DWORD PTR [rsi+0x8]
  445b08:	call   0x445460
  445b0d:	test   rax,rax
  445b10:	je     0x445c12
  445b16:	movsxd rdx,DWORD PTR [rsi+0x14]
  445b1a:	lea    rcx,[rsi+0x18]
  445b1e:	mov    DWORD PTR [rax+0x10],ebx
  445b21:	lea    r10,[rdi+0x18]
  445b25:	xor    r9d,r9d
  445b28:	mov    rbx,rdx
  445b2b:	lea    rsi,[rcx+rdx*4]
  445b2f:	movsxd rdx,DWORD PTR [rdi+0x14]
  445b33:	lea    rdi,[r10+rdx*4]
  445b37:	lea    rdx,[rax+0x18]
  445b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  445b40:	add    rcx,0x4
  445b44:	add    r10,0x4
  445b48:	mov    r11d,DWORD PTR [r10-0x4]
  445b4c:	mov    r8d,DWORD PTR [rcx-0x4]
  445b50:	add    rdx,0x4
  445b54:	sub    r8,r11
  445b57:	sub    r8,r9
  445b5a:	mov    r9,r8
  445b5d:	mov    r11d,r8d
  445b60:	mov    DWORD PTR [rdx-0x4],r8d
  445b64:	shr    r9,0x20
  445b68:	and    r9d,0x1
  445b6c:	cmp    rdi,r10
  445b6f:	ja     0x445b40
  445b71:	cmp    rsi,rcx
  445b74:	mov    rdi,rdx
  445b77:	mov    r10,rcx
  445b7a:	jbe    0x445bb6
  445b7c:	nop    DWORD PTR [rax+0x0]
  445b80:	add    rcx,0x4
  445b84:	mov    r8d,DWORD PTR [rcx-0x4]
  445b88:	add    rdx,0x4
  445b8c:	sub    r8,r9
  445b8f:	mov    r9,r8
  445b92:	mov    r11d,r8d
  445b95:	mov    DWORD PTR [rdx-0x4],r8d
  445b99:	shr    r9,0x20
  445b9d:	and    r9d,0x1
  445ba1:	cmp    rsi,rcx
  445ba4:	ja     0x445b80
  445ba6:	not    r10
  445ba9:	lea    rdx,[r10+rsi*1]
  445bad:	shr    rdx,0x2
  445bb1:	lea    rdx,[rdi+rdx*4+0x4]
  445bb6:	sub    rdx,0x4
  445bba:	test   r11d,r11d
  445bbd:	jne    0x445bcd
  445bbf:	nop
  445bc0:	sub    rdx,0x4
  445bc4:	mov    ecx,DWORD PTR [rdx]
  445bc6:	sub    ebx,0x1
  445bc9:	test   ecx,ecx
  445bcb:	je     0x445bc0
  445bcd:	mov    DWORD PTR [rax+0x14],ebx
  445bd0:	add    rsp,0x20
  445bd4:	pop    rbx
  445bd5:	pop    rsi
  445bd6:	pop    rdi
  445bd7:	ret    
  445bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  445be0:	xor    ecx,ecx
  445be2:	call   0x445460
  445be7:	test   rax,rax
  445bea:	je     0x445c12
  445bec:	mov    DWORD PTR [rax+0x14],0x1
  445bf3:	mov    DWORD PTR [rax+0x18],0x0
  445bfa:	add    rsp,0x20
  445bfe:	pop    rbx
  445bff:	pop    rsi
  445c00:	pop    rdi
  445c01:	ret    
  445c02:	mov    rax,rsi
  445c05:	mov    bl,0x1
  445c07:	mov    rsi,rdi
  445c0a:	mov    rdi,rax
  445c0d:	jmp    0x445b05
  445c12:	xor    eax,eax
  445c14:	jmp    0x445bd0
  445c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  445c20:	push   rsi
  445c21:	push   rbx
  445c22:	sub    rsp,0x18
  445c26:	movsxd rax,DWORD PTR [rcx+0x14]
  445c2a:	lea    r10,[rcx+0x18]
  445c2e:	mov    ecx,0x20
  445c33:	lea    r9,[r10+rax*4]
  445c37:	mov    eax,DWORD PTR [r9-0x4]
  445c3b:	lea    rbx,[r9-0x4]
  445c3f:	bsr    r8d,eax
  445c43:	xor    r8d,0x1f
  445c47:	sub    ecx,r8d
  445c4a:	cmp    r8d,0xa
  445c4e:	mov    DWORD PTR [rdx],ecx
  445c50:	jg     0x445ca0
  445c52:	mov    ecx,0xb
  445c57:	mov    r11d,eax
  445c5a:	xor    esi,esi
  445c5c:	sub    ecx,r8d
  445c5f:	shr    r11d,cl
  445c62:	or     r11d,0x3ff00000
  445c69:	shl    r11,0x20
  445c6d:	cmp    r10,rbx
  445c70:	jae    0x445c78
  445c72:	mov    esi,DWORD PTR [r9-0x8]
  445c76:	shr    esi,cl
  445c78:	lea    ecx,[r8+0x15]
  445c7c:	shl    eax,cl
  445c7e:	mov    edx,eax
  445c80:	mov    eax,esi
  445c82:	or     eax,edx
  445c84:	or     rax,r11
  445c87:	mov    QWORD PTR [rsp+0x8],rax
  445c8c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  445c92:	add    rsp,0x18
  445c96:	pop    rbx
  445c97:	pop    rsi
  445c98:	ret    
  445c99:	nop    DWORD PTR [rax+0x0]
  445ca0:	cmp    r10,rbx
  445ca3:	jae    0x445d00
  445ca5:	mov    r11d,r8d
  445ca8:	lea    rsi,[r9-0x8]
  445cac:	mov    edx,DWORD PTR [r9-0x8]
  445cb0:	sub    r11d,0xb
  445cb4:	je     0x445d22
  445cb6:	mov    ebx,0x2b
  445cbb:	mov    ecx,r11d
  445cbe:	sub    ebx,r8d
  445cc1:	shl    eax,cl
  445cc3:	mov    r8d,edx
  445cc6:	mov    ecx,ebx
  445cc8:	shr    r8d,cl
  445ccb:	or     eax,r8d
  445cce:	xor    r8d,r8d
  445cd1:	or     eax,0x3ff00000
  445cd6:	shl    rax,0x20
  445cda:	cmp    r10,rsi
  445cdd:	jae    0x445ce6
  445cdf:	mov    r8d,DWORD PTR [r9-0xc]
  445ce3:	shr    r8d,cl
  445ce6:	mov    ecx,r11d
  445ce9:	shl    edx,cl
  445ceb:	or     r8d,edx
  445cee:	movabs rdx,0xffffffff00000000
  445cf8:	and    rax,rdx
  445cfb:	or     rax,r8
  445cfe:	jmp    0x445c87
  445d00:	mov    r11d,r8d
  445d03:	sub    r11d,0xb
  445d07:	je     0x445d20
  445d09:	mov    ecx,r11d
  445d0c:	xor    r8d,r8d
  445d0f:	xor    edx,edx
  445d11:	shl    eax,cl
  445d13:	or     eax,0x3ff00000
  445d18:	shl    rax,0x20
  445d1c:	jmp    0x445ce6
  445d1e:	xchg   ax,ax
  445d20:	xor    edx,edx
  445d22:	or     eax,0x3ff00000
  445d27:	shl    rax,0x20
  445d2b:	or     rax,rdx
  445d2e:	jmp    0x445c87
  445d33:	nop    DWORD PTR [rax]
  445d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  445d40:	push   rdi
  445d41:	push   rsi
  445d42:	push   rbx
  445d43:	sub    rsp,0x20
  445d47:	mov    ecx,0x1
  445d4c:	movq   rbx,xmm0
  445d51:	mov    rdi,rdx
  445d54:	mov    rsi,r8
  445d57:	call   0x445460
  445d5c:	test   rax,rax
  445d5f:	je     0x445e45
  445d65:	mov    r9,rbx
  445d68:	shr    r9,0x20
  445d6c:	mov    r10d,r9d
  445d6f:	and    r9d,0x7fffffff
  445d76:	and    r10d,0xfffff
  445d7d:	shr    r9d,0x14
  445d81:	mov    edx,r10d
  445d84:	or     edx,0x100000
  445d8a:	test   r9d,r9d
  445d8d:	cmovne r10d,edx
  445d91:	test   ebx,ebx
  445d93:	jne    0x445dd4
  445d95:	xor    ecx,ecx
  445d97:	mov    DWORD PTR [rax+0x14],0x1
  445d9e:	mov    edx,0x1
  445da3:	tzcnt  ecx,r10d
  445da8:	shr    r10d,cl
  445dab:	test   r9d,r9d
  445dae:	lea    r11d,[rcx+0x20]
  445db2:	mov    DWORD PTR [rax+0x18],r10d
  445db6:	je     0x445e13
  445db8:	lea    edx,[r11+r9*1-0x433]
  445dc0:	mov    DWORD PTR [rdi],edx
  445dc2:	mov    edx,0x35
  445dc7:	sub    edx,r11d
  445dca:	mov    DWORD PTR [rsi],edx
  445dcc:	add    rsp,0x20
  445dd0:	pop    rbx
  445dd1:	pop    rsi
  445dd2:	pop    rdi
  445dd3:	ret    
  445dd4:	xor    r11d,r11d
  445dd7:	tzcnt  r11d,ebx
  445ddc:	mov    ecx,r11d
  445ddf:	shr    ebx,cl
  445de1:	test   r11d,r11d
  445de4:	je     0x445e40
  445de6:	mov    ecx,0x20
  445deb:	mov    edx,r10d
  445dee:	sub    ecx,r11d
  445df1:	shl    edx,cl
  445df3:	mov    ecx,r11d
  445df6:	or     ebx,edx
  445df8:	shr    r10d,cl
  445dfb:	mov    DWORD PTR [rax+0x18],ebx
  445dfe:	cmp    r10d,0x1
  445e02:	mov    DWORD PTR [rax+0x1c],r10d
  445e06:	sbb    edx,edx
  445e08:	add    edx,0x2
  445e0b:	test   r9d,r9d
  445e0e:	mov    DWORD PTR [rax+0x14],edx
  445e11:	jne    0x445db8
  445e13:	movsxd rcx,edx
  445e16:	shl    edx,0x5
  445e19:	sub    r11d,0x432
  445e20:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  445e25:	mov    DWORD PTR [rdi],r11d
  445e28:	xor    ecx,0x1f
  445e2b:	sub    edx,ecx
  445e2d:	mov    DWORD PTR [rsi],edx
  445e2f:	add    rsp,0x20
  445e33:	pop    rbx
  445e34:	pop    rsi
  445e35:	pop    rdi
  445e36:	ret    
  445e37:	nop    WORD PTR [rax+rax*1+0x0]
  445e40:	mov    DWORD PTR [rax+0x18],ebx
  445e43:	jmp    0x445dfe
  445e45:	xor    eax,eax
  445e47:	jmp    0x445dcc
  445e49:	nop    DWORD PTR [rax+0x0]
  445e50:	mov    rax,rcx
  445e53:	lea    rcx,[rdx+0x1]
  445e57:	movzx  edx,BYTE PTR [rdx]
  445e5a:	test   dl,dl
  445e5c:	mov    BYTE PTR [rax],dl
  445e5e:	je     0x445e72
  445e60:	add    rcx,0x1
  445e64:	movzx  edx,BYTE PTR [rcx-0x1]
  445e68:	add    rax,0x1
  445e6c:	test   dl,dl
  445e6e:	mov    BYTE PTR [rax],dl
  445e70:	jne    0x445e60
  445e72:	repz ret 
  445e74:	nop
  445e75:	nop
  445e76:	nop
  445e77:	nop
  445e78:	nop
  445e79:	nop
  445e7a:	nop
  445e7b:	nop
  445e7c:	nop
  445e7d:	nop
  445e7e:	nop
  445e7f:	nop
  445e80:	push   rsi
  445e81:	push   rbx
  445e82:	sub    rsp,0x28
  445e86:	movsxd rax,DWORD PTR [rcx+0x14]
  445e8a:	lea    rdx,[rcx+0x18]
  445e8e:	mov    rbx,rcx
  445e91:	lea    r9,[rdx+rax*4]
  445e95:	mov    rcx,rax
  445e98:	jmp    0x445eb0
  445e9a:	nop    WORD PTR [rax+rax*1+0x0]
  445ea0:	add    rdx,0x4
  445ea4:	mov    DWORD PTR [rdx-0x4],0x0
  445eab:	cmp    r9,rdx
  445eae:	jbe    0x445ed0
  445eb0:	mov    r8d,DWORD PTR [rdx]
  445eb3:	cmp    r8d,0xffffffff
  445eb7:	je     0x445ea0
  445eb9:	add    r8d,0x1
  445ebd:	mov    rax,rbx
  445ec0:	mov    DWORD PTR [rdx],r8d
  445ec3:	add    rsp,0x28
  445ec7:	pop    rbx
  445ec8:	pop    rsi
  445ec9:	ret    
  445eca:	nop    WORD PTR [rax+rax*1+0x0]
  445ed0:	cmp    ecx,DWORD PTR [rbx+0xc]
  445ed3:	jge    0x445ef0
  445ed5:	add    ecx,0x1
  445ed8:	mov    DWORD PTR [rbx+0x14],ecx
  445edb:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  445ee3:	mov    rax,rbx
  445ee6:	add    rsp,0x28
  445eea:	pop    rbx
  445eeb:	pop    rsi
  445eec:	ret    
  445eed:	nop    DWORD PTR [rax]
  445ef0:	mov    eax,DWORD PTR [rbx+0x8]
  445ef3:	lea    ecx,[rax+0x1]
  445ef6:	call   0x445460
  445efb:	mov    rsi,rax
  445efe:	lea    rcx,[rax+0x10]
  445f02:	movsxd rax,DWORD PTR [rbx+0x14]
  445f06:	lea    rdx,[rbx+0x10]
  445f0a:	lea    r8,[rax*4+0x8]
  445f12:	call   0x449450
  445f17:	mov    rcx,rbx
  445f1a:	mov    rbx,rsi
  445f1d:	call   0x445570
  445f22:	movsxd rax,DWORD PTR [rsi+0x14]
  445f26:	mov    rcx,rax
  445f29:	jmp    0x445ed5
  445f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  445f30:	push   r15
  445f32:	push   r14
  445f34:	push   r13
  445f36:	push   r12
  445f38:	push   rbp
  445f39:	push   rdi
  445f3a:	push   rsi
  445f3b:	push   rbx
  445f3c:	sub    rsp,0x48
  445f40:	mov    rdi,rdx
  445f43:	mov    r12,r8
  445f46:	lea    rdx,[rsp+0x3c]
  445f4b:	lea    r8,[rsp+0x38]
  445f50:	movsd  xmm0,QWORD PTR [rcx]
  445f54:	mov    r13,r9
  445f57:	call   0x445d40
  445f5c:	mov    r10d,DWORD PTR [rsp+0x38]
  445f61:	mov    esi,DWORD PTR [rdi]
  445f63:	mov    rbx,rax
  445f66:	mov    edx,DWORD PTR [rsp+0x3c]
  445f6a:	sub    r10d,esi
  445f6d:	add    edx,r10d
  445f70:	test   r10d,r10d
  445f73:	mov    DWORD PTR [rsp+0x38],r10d
  445f78:	mov    DWORD PTR [rsp+0x3c],edx
  445f7c:	jle    0x446140
  445f82:	cmp    esi,0x35
  445f85:	je     0x446170
  445f8b:	cmp    DWORD PTR [rsp+0xb8],0x1
  445f93:	je     0x446044
  445f99:	cmp    DWORD PTR [rsp+0xb8],0x2
  445fa1:	je     0x445fd0
  445fa3:	mov    eax,r10d
  445fa6:	sub    eax,0x1
  445fa9:	jne    0x446240
  445faf:	mov    ecx,DWORD PTR [rsp+0xb0]
  445fb6:	xor    r15d,r15d
  445fb9:	test   ecx,ecx
  445fbb:	je     0x4460c7
  445fc1:	test   BYTE PTR [rbx+0x18],0x2
  445fc5:	je     0x44618e
  445fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  445fd0:	mov    edx,r10d
  445fd3:	mov    rcx,rbx
  445fd6:	call   0x449250
  445fdb:	mov    edx,DWORD PTR [rsp+0x38]
  445fdf:	mov    rcx,rbx
  445fe2:	mov    r14d,eax
  445fe5:	call   0x445200
  445fea:	mov    rcx,rbx
  445fed:	call   0x445e80
  445ff2:	mov    edx,esi
  445ff4:	mov    rbx,rax
  445ff7:	and    edx,0x1f
  445ffa:	jne    0x446230
  446000:	mov    eax,DWORD PTR [rbx+0x14]
  446003:	sub    eax,0x1
  446006:	cdqe   
  446008:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  44600d:	xor    eax,0x1f
  446010:	cmp    edx,eax
  446012:	je     0x4462c0
  446018:	test   r14d,r14d
  44601b:	jne    0x446025
  44601d:	mov    r14d,DWORD PTR [rbx+0x18]
  446021:	and    r14d,0x1
  446025:	mov    edx,0x1
  44602a:	mov    rcx,rbx
  44602d:	mov    ebp,0x20
  446032:	call   0x445200
  446037:	mov    eax,DWORD PTR [rsp+0x3c]
  44603b:	lea    edx,[rax+0x1]
  44603e:	mov    DWORD PTR [rsp+0x3c],edx
  446042:	jmp    0x44606f
  446044:	mov    edx,r10d
  446047:	mov    rcx,rax
  44604a:	call   0x449250
  44604f:	test   eax,eax
  446051:	mov    r14d,eax
  446054:	jne    0x4460e3
  44605a:	mov    edx,DWORD PTR [rsp+0x38]
  44605e:	mov    rcx,rbx
  446061:	xor    r14d,r14d
  446064:	xor    ebp,ebp
  446066:	call   0x445200
  44606b:	mov    edx,DWORD PTR [rsp+0x3c]
  44606f:	mov    eax,DWORD PTR [rdi+0x4]
  446072:	cmp    eax,edx
  446074:	jle    0x446100
  44607a:	mov    r8d,eax
  44607d:	mov    DWORD PTR [rsp+0x3c],eax
  446081:	sub    r8d,edx
  446084:	cmp    esi,r8d
  446087:	jge    0x4461c0
  44608d:	mov    rdi,QWORD PTR [rsp+0xc0]
  446095:	mov    DWORD PTR [rbx+0x14],0x0
  44609c:	mov    edx,eax
  44609e:	xor    ebp,ebp
  4460a0:	mov    DWORD PTR [rdi],0x50
  4460a6:	mov    DWORD PTR [r12],edx
  4460aa:	mov    r8,rbx
  4460ad:	mov    edx,esi
  4460af:	mov    rcx,r13
  4460b2:	mov    r15d,0x1
  4460b8:	call   0x4491e0
  4460bd:	mov    rax,QWORD PTR [rsp+0xc0]
  4460c5:	or     DWORD PTR [rax],ebp
  4460c7:	mov    rcx,rbx
  4460ca:	call   0x445570
  4460cf:	mov    eax,r15d
  4460d2:	add    rsp,0x48
  4460d6:	pop    rbx
  4460d7:	pop    rsi
  4460d8:	pop    rdi
  4460d9:	pop    rbp
  4460da:	pop    r12
  4460dc:	pop    r13
  4460de:	pop    r14
  4460e0:	pop    r15
  4460e2:	ret    
  4460e3:	mov    edx,DWORD PTR [rsp+0x38]
  4460e7:	mov    rcx,rbx
  4460ea:	mov    ebp,0x10
  4460ef:	call   0x445200
  4460f4:	jmp    0x44606b
  4460f9:	nop    DWORD PTR [rax+0x0]
  446100:	mov    eax,DWORD PTR [rdi+0x8]
  446103:	cmp    eax,edx
  446105:	jge    0x4460a6
  446107:	add    eax,0x1
  44610a:	xor    ebp,ebp
  44610c:	mov    DWORD PTR [rsp+0x3c],eax
  446110:	mov    rax,QWORD PTR [rsp+0xc0]
  446118:	mov    DWORD PTR [rax],0xa3
  44611e:	call   0x4495c8
  446123:	mov    DWORD PTR [rax],0x22
  446129:	mov    DWORD PTR [rbx+0x14],0x0
  446130:	mov    edx,DWORD PTR [rsp+0x3c]
  446134:	jmp    0x4460a6
  446139:	nop    DWORD PTR [rax+0x0]
  446140:	mov    r9d,DWORD PTR [rsp+0xb0]
  446148:	xor    r15d,r15d
  44614b:	test   r9d,r9d
  44614e:	je     0x4460c7
  446154:	test   r10d,r10d
  446157:	jne    0x4462a0
  44615d:	xor    r14d,r14d
  446160:	xor    ebp,ebp
  446162:	jmp    0x44606f
  446167:	nop    WORD PTR [rax+rax*1+0x0]
  446170:	mov    r8d,DWORD PTR [rsp+0xb0]
  446178:	xor    r15d,r15d
  44617b:	test   r8d,r8d
  44617e:	je     0x4460c7
  446184:	cmp    DWORD PTR [rdi+0xc],0x1
  446188:	jne    0x4460c7
  44618e:	mov    edx,r10d
  446191:	mov    rcx,rbx
  446194:	call   0x449250
  446199:	test   eax,eax
  44619b:	mov    r14d,eax
  44619e:	je     0x44605a
  4461a4:	mov    edx,DWORD PTR [rsp+0x38]
  4461a8:	mov    rcx,rbx
  4461ab:	mov    ebp,0x10
  4461b0:	call   0x445200
  4461b5:	mov    edx,DWORD PTR [rsp+0x3c]
  4461b9:	jmp    0x44606f
  4461be:	xchg   ax,ax
  4461c0:	mov    edx,DWORD PTR [rdi+0x10]
  4461c3:	test   edx,edx
  4461c5:	jne    0x44608d
  4461cb:	lea    edi,[r8-0x1]
  4461cf:	test   r14d,r14d
  4461d2:	sete   al
  4461d5:	test   edi,edi
  4461d7:	jle    0x44627c
  4461dd:	test   al,al
  4461df:	jne    0x446260
  4461e1:	mov    ecx,edi
  4461e3:	sar    edi,0x5
  4461e6:	mov    eax,0x1
  4461eb:	movsxd rdi,edi
  4461ee:	shl    eax,cl
  4461f0:	mov    edx,r8d
  4461f3:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  4461f7:	mov    rcx,rbx
  4461fa:	mov    edi,eax
  4461fc:	call   0x445200
  446201:	mov    rax,QWORD PTR [rsp+0xc0]
  446209:	test   edi,edi
  44620b:	mov    DWORD PTR [rax],0x2
  446211:	jne    0x4462d0
  446217:	test   r14d,r14d
  44621a:	mov    edx,DWORD PTR [rsp+0x3c]
  44621e:	je     0x4460a6
  446224:	mov    ebp,0x50
  446229:	jmp    0x4460a6
  44622e:	xchg   ax,ax
  446230:	mov    eax,0x20
  446235:	sub    eax,edx
  446237:	mov    edx,eax
  446239:	jmp    0x446000
  44623e:	xchg   ax,ax
  446240:	mov    edx,eax
  446242:	sar    edx,0x5
  446245:	movsxd rdx,edx
  446248:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  44624c:	bt     edx,eax
  44624f:	jb     0x445fd0
  446255:	jmp    0x44618e
  44625a:	nop    WORD PTR [rax+rax*1+0x0]
  446260:	mov    edx,edi
  446262:	mov    rcx,rbx
  446265:	mov    DWORD PTR [rsp+0x2c],r8d
  44626a:	call   0x449250
  44626f:	mov    r8d,DWORD PTR [rsp+0x2c]
  446274:	test   eax,eax
  446276:	mov    r14d,eax
  446279:	sete   al
  44627c:	test   al,al
  44627e:	je     0x4461e1
  446284:	mov    eax,DWORD PTR [rsp+0xb0]
  44628b:	xor    r15d,r15d
  44628e:	test   eax,eax
  446290:	je     0x4460c7
  446296:	jmp    0x4461e1
  44629b:	nop    DWORD PTR [rax+rax*1+0x0]
  4462a0:	mov    edx,r10d
  4462a3:	mov    rcx,rbx
  4462a6:	neg    edx
  4462a8:	call   0x445970
  4462ad:	mov    edx,DWORD PTR [rsp+0x3c]
  4462b1:	mov    rbx,rax
  4462b4:	jmp    0x44615d
  4462b9:	nop    DWORD PTR [rax+0x0]
  4462c0:	mov    edx,DWORD PTR [rsp+0x3c]
  4462c4:	mov    ebp,0x20
  4462c9:	jmp    0x44606f
  4462ce:	xchg   ax,ax
  4462d0:	mov    rcx,rbx
  4462d3:	mov    ebp,0x60
  4462d8:	call   0x445e80
  4462dd:	mov    edx,DWORD PTR [rsp+0x3c]
  4462e1:	mov    rbx,rax
  4462e4:	jmp    0x4460a6
  4462e9:	nop    DWORD PTR [rax+0x0]
  4462f0:	movsxd rdx,DWORD PTR [rcx+0x14]
  4462f4:	lea    rax,[rcx+0x18]
  4462f8:	lea    rcx,[rax+rdx*4]
  4462fc:	jmp    0x446310
  4462fe:	xchg   ax,ax
  446300:	add    rax,0x4
  446304:	mov    DWORD PTR [rax-0x4],0xffffffff
  44630b:	cmp    rcx,rax
  44630e:	jbe    0x446320
  446310:	mov    edx,DWORD PTR [rax]
  446312:	test   edx,edx
  446314:	je     0x446300
  446316:	sub    edx,0x1
  446319:	mov    DWORD PTR [rax],edx
  44631b:	ret    
  44631c:	nop    DWORD PTR [rax+0x0]
  446320:	repz ret 
  446322:	nop    DWORD PTR [rax+0x0]
  446326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  446330:	push   rbx
  446331:	sub    rsp,0x30
  446335:	lea    ebx,[rdx+0x1f]
  446338:	mov    rax,rcx
  44633b:	sar    ebx,0x5
  44633e:	cmp    ebx,DWORD PTR [rcx+0x8]
  446341:	jg     0x4463c0
  446343:	mov    r9d,edx
  446346:	sar    r9d,0x5
  44634a:	and    edx,0x1f
  44634d:	je     0x4463a0
  44634f:	add    r9d,0x1
  446353:	lea    r8,[rax+0x18]
  446357:	mov    DWORD PTR [rax+0x14],r9d
  44635b:	movsxd r9,r9d
  44635e:	lea    r9,[r8+r9*4]
  446362:	cmp    r8,r9
  446365:	jae    0x446385
  446367:	nop    WORD PTR [rax+rax*1+0x0]
  446370:	add    r8,0x4
  446374:	mov    DWORD PTR [r8-0x4],0xffffffff
  44637c:	cmp    r8,r9
  44637f:	jb     0x446370
  446381:	test   edx,edx
  446383:	je     0x446390
  446385:	mov    ecx,0x20
  44638a:	sub    ecx,edx
  44638c:	shr    DWORD PTR [r8-0x4],cl
  446390:	add    rsp,0x30
  446394:	pop    rbx
  446395:	ret    
  446396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4463a0:	lea    r8,[rax+0x18]
  4463a4:	mov    DWORD PTR [rax+0x14],r9d
  4463a8:	movsxd r9,r9d
  4463ab:	lea    r9,[r8+r9*4]
  4463af:	cmp    r8,r9
  4463b2:	jb     0x446370
  4463b4:	jmp    0x446390
  4463b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4463c0:	mov    DWORD PTR [rsp+0x2c],edx
  4463c4:	call   0x445570
  4463c9:	mov    ecx,ebx
  4463cb:	call   0x445460
  4463d0:	mov    edx,DWORD PTR [rsp+0x2c]
  4463d4:	jmp    0x446343
  4463d9:	nop    DWORD PTR [rax+0x0]
  4463e0:	push   r15
  4463e2:	push   r14
  4463e4:	push   r13
  4463e6:	push   r12
  4463e8:	push   rbp
  4463e9:	push   rdi
  4463ea:	push   rsi
  4463eb:	push   rbx
  4463ec:	sub    rsp,0x138
  4463f3:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  4463fb:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  446403:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  44640c:	movaps XMMWORD PTR [rsp+0x100],xmm9
  446415:	movaps XMMWORD PTR [rsp+0x110],xmm10
  44641e:	movaps XMMWORD PTR [rsp+0x120],xmm11
  446427:	mov    rdi,rcx
  44642a:	mov    QWORD PTR [rsp+0x190],r8
  446432:	mov    QWORD PTR [rsp+0x188],rdx
  44643a:	mov    QWORD PTR [rsp+0x198],r9
  446442:	call   0x449470
  446447:	mov    rbp,QWORD PTR [rax]
  44644a:	mov    rcx,rbp
  44644d:	call   0x4493c0
  446452:	mov    r14,rax
  446455:	mov    rax,QWORD PTR [rsp+0x190]
  44645d:	mov    DWORD PTR [rsp+0xa4],0x0
  446468:	mov    QWORD PTR [rsp+0xb0],0x0
  446474:	mov    QWORD PTR [rsp+0xc8],0x0
  446480:	lea    rcx,[rip+0x14585]        # 0x45aa0c
  446487:	mov    QWORD PTR [rsp+0xc0],rdi
  44648f:	mov    eax,DWORD PTR [rax]
  446491:	mov    DWORD PTR [rsp+0x40],eax
  446495:	mov    rax,rdi
  446498:	movzx  r8d,BYTE PTR [rax]
  44649c:	cmp    r8b,0x2d
  4464a0:	ja     0x446650
  4464a6:	movzx  edx,r8b
  4464aa:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  4464ae:	add    rdx,rcx
  4464b1:	jmp    rdx
  4464b3:	mov    DWORD PTR [rsp+0xa4],0x6
  4464be:	mov    QWORD PTR [rsp+0xc0],rdi
  4464c6:	xor    r8d,r8d
  4464c9:	mov    DWORD PTR [rsp+0x58],0x0
  4464d1:	cmp    QWORD PTR [rsp+0x188],0x0
  4464da:	je     0x4464ef
  4464dc:	mov    rax,QWORD PTR [rsp+0xc0]
  4464e4:	mov    rsi,QWORD PTR [rsp+0x188]
  4464ec:	mov    QWORD PTR [rsi],rax
  4464ef:	mov    eax,DWORD PTR [rsp+0x58]
  4464f3:	test   eax,eax
  4464f5:	jne    0x446570
  4464f7:	test   r8,r8
  4464fa:	je     0x44651a
  4464fc:	mov    rcx,QWORD PTR [rsp+0x1a0]
  446504:	mov    edx,DWORD PTR [rsp+0x40]
  446508:	call   0x4491e0
  44650d:	mov    rcx,QWORD PTR [rsp+0xc8]
  446515:	call   0x445570
  44651a:	mov    eax,DWORD PTR [rsp+0xa4]
  446521:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  446529:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  446531:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  44653a:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  446543:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  44654c:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  446555:	add    rsp,0x138
  44655c:	pop    rbx
  44655d:	pop    rsi
  44655e:	pop    rdi
  44655f:	pop    rbp
  446560:	pop    r12
  446562:	pop    r13
  446564:	pop    r14
  446566:	pop    r15
  446568:	ret    
  446569:	nop    DWORD PTR [rax+0x0]
  446570:	or     DWORD PTR [rsp+0xa4],0x8
  446578:	jmp    0x4464f7
  44657d:	nop    DWORD PTR [rax]
  446580:	mov    rdx,rax
  446583:	mov    DWORD PTR [rsp+0x58],0x0
  44658b:	add    rax,0x1
  44658f:	mov    QWORD PTR [rsp+0xc0],rax
  446597:	movzx  r8d,BYTE PTR [rdx+0x1]
  44659c:	test   r8b,r8b
  44659f:	je     0x4464b3
  4465a5:	xor    r12d,r12d
  4465a8:	cmp    r8b,0x30
  4465ac:	mov    r15,rax
  4465af:	je     0x446668
  4465b5:	mov    rax,QWORD PTR [rsp+0x190]
  4465bd:	mov    eax,DWORD PTR [rax+0x10]
  4465c0:	mov    DWORD PTR [rsp+0x84],eax
  4465c7:	movsx  eax,r8b
  4465cb:	lea    edx,[rax-0x30]
  4465ce:	cmp    edx,0x9
  4465d1:	ja     0x4466c3
  4465d7:	lea    rcx,[r15+0x1]
  4465db:	xor    edx,edx
  4465dd:	xor    esi,esi
  4465df:	xor    ebx,ebx
  4465e1:	jmp    0x446615
  4465e3:	lea    eax,[rsi+rsi*4]
  4465e6:	movsx  r8d,r8b
  4465ea:	lea    esi,[r8+rax*2-0x30]
  4465ef:	mov    QWORD PTR [rsp+0xc0],rcx
  4465f7:	movsx  eax,BYTE PTR [rcx]
  4465fa:	add    ebx,0x1
  4465fd:	mov    r9,rcx
  446600:	lea    rcx,[rcx+0x1]
  446604:	lea    r10d,[rax-0x30]
  446608:	mov    r8d,eax
  44660b:	cmp    r10d,0x9
  44660f:	ja     0x4466d0
  446615:	cmp    ebx,0x8
  446618:	jle    0x4465e3
  44661a:	cmp    ebx,0xf
  44661d:	jg     0x4465ef
  44661f:	lea    eax,[rdx+rdx*4]
  446622:	movsx  r8d,r8b
  446626:	lea    edx,[r8+rax*2-0x30]
  44662b:	jmp    0x4465ef
  44662d:	nop    DWORD PTR [rax]
  446630:	add    rax,0x1
  446634:	mov    QWORD PTR [rsp+0xc0],rax
  44663c:	movzx  r8d,BYTE PTR [rax]
  446640:	cmp    r8b,0x2d
  446644:	jbe    0x4464a6
  44664a:	nop    WORD PTR [rax+rax*1+0x0]
  446650:	xor    r12d,r12d
  446653:	cmp    r8b,0x30
  446657:	mov    DWORD PTR [rsp+0x58],0x0
  44665f:	mov    r15,rax
  446662:	jne    0x4465b5
  446668:	movzx  edx,BYTE PTR [rax+0x1]
  44666c:	cmp    dl,0x58
  44666f:	je     0x44782f
  446675:	add    rax,0x1
  446679:	cmp    dl,0x78
  44667c:	je     0x44782f
  446682:	mov    r15,rax
  446685:	mov    QWORD PTR [rsp+0xc0],rax
  44668d:	add    rax,0x1
  446691:	movzx  edx,BYTE PTR [rax-0x1]
  446695:	cmp    dl,0x30
  446698:	je     0x446682
  44669a:	xor    r8d,r8d
  44669d:	test   dl,dl
  44669f:	je     0x4464d1
  4466a5:	mov    r8d,edx
  4466a8:	mov    r12d,0x1
  4466ae:	jmp    0x4465b5
  4466b3:	mov    rdx,rax
  4466b6:	mov    DWORD PTR [rsp+0x58],0x1
  4466be:	jmp    0x44658b
  4466c3:	mov    r9,r15
  4466c6:	xor    edx,edx
  4466c8:	xor    esi,esi
  4466ca:	xor    ebx,ebx
  4466cc:	nop    DWORD PTR [rax+0x0]
  4466d0:	movsx  ecx,BYTE PTR [rbp+0x0]
  4466d4:	cmp    ecx,eax
  4466d6:	je     0x446ad4
  4466dc:	mov    ebp,ebx
  4466de:	xor    ecx,ecx
  4466e0:	xor    r13d,r13d
  4466e3:	xor    r11d,r11d
  4466e6:	mov    r8d,eax
  4466e9:	and    r8d,0xffffffdf
  4466ed:	cmp    r8d,0x45
  4466f1:	je     0x4467f0
  4466f7:	xor    r8d,r8d
  4466fa:	test   ebp,ebp
  4466fc:	jne    0x446965
  446702:	or     ecx,r12d
  446705:	jne    0x446958
  44670b:	test   r11d,r11d
  44670e:	jne    0x446923
  446714:	cmp    eax,0x4e
  446717:	je     0x446731
  446719:	jle    0x44691a
  44671f:	cmp    eax,0x69
  446722:	je     0x447aba
  446728:	cmp    eax,0x6e
  44672b:	jne    0x446923
  446731:	lea    rbx,[rsp+0xc0]
  446739:	lea    rdx,[rip+0x142c9]        # 0x45aa09
  446740:	mov    rcx,rbx
  446743:	call   0x449190
  446748:	test   eax,eax
  44674a:	je     0x446923
  446750:	mov    rax,QWORD PTR [rsp+0x190]
  446758:	mov    rsi,QWORD PTR [rsp+0x198]
  446760:	xor    ebp,ebp
  446762:	mov    rdx,QWORD PTR [rsp+0xc0]
  44676a:	mov    DWORD PTR [rsp+0xa4],0x4
  446775:	mov    eax,DWORD PTR [rax+0x8]
  446778:	mov    DWORD PTR [rsp+0x44],eax
  44677c:	add    eax,0x1
  44677f:	mov    DWORD PTR [rsi],eax
  446781:	cmp    BYTE PTR [rdx],0x28
  446784:	je     0x447e96
  44678a:	nop    WORD PTR [rax+rax*1+0x0]
  446790:	mov    rsi,QWORD PTR [rsp+0x198]
  446798:	mov    DWORD PTR [rsi],eax
  44679a:	mov    r8,QWORD PTR [rsp+0xc8]
  4467a2:	test   ebp,ebp
  4467a4:	je     0x4464d1
  4467aa:	mov    r9d,DWORD PTR [rsp+0x84]
  4467b2:	test   r9d,r9d
  4467b5:	jne    0x446ee4
  4467bb:	mov    eax,DWORD PTR [rsp+0xa4]
  4467c2:	mov    ecx,DWORD PTR [r8+0x14]
  4467c6:	xor    edx,edx
  4467c8:	and    eax,0xfffffff8
  4467cb:	test   ecx,ecx
  4467cd:	setg   dl
  4467d0:	add    edx,edx
  4467d2:	or     eax,edx
  4467d4:	test   al,0x30
  4467d6:	jne    0x446943
  4467dc:	mov    DWORD PTR [rsp+0xa4],eax
  4467e3:	jmp    0x4464d1
  4467e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4467f0:	mov    eax,ebp
  4467f2:	or     eax,ecx
  4467f4:	or     eax,r12d
  4467f7:	je     0x446923
  4467fd:	mov    rdi,QWORD PTR [rsp+0xc0]
  446805:	lea    rax,[rdi+0x1]
  446809:	mov    QWORD PTR [rsp+0xc0],rax
  446811:	movsx  eax,BYTE PTR [rdi+0x1]
  446815:	cmp    al,0x2b
  446817:	je     0x4479d8
  44681d:	cmp    al,0x2d
  44681f:	je     0x446de1
  446825:	mov    DWORD PTR [rsp+0x44],0x0
  44682d:	lea    r8d,[rax-0x30]
  446831:	cmp    r8d,0x9
  446835:	ja     0x446f10
  44683b:	cmp    eax,0x30
  44683e:	jne    0x446865
  446840:	mov    rax,QWORD PTR [rsp+0xc0]
  446848:	lea    r8,[rax+0x1]
  44684c:	nop    DWORD PTR [rax+0x0]
  446850:	mov    QWORD PTR [rsp+0xc0],r8
  446858:	movsx  eax,BYTE PTR [r8]
  44685c:	add    r8,0x1
  446860:	cmp    eax,0x30
  446863:	je     0x446850
  446865:	lea    r9d,[rax-0x31]
  446869:	xor    r8d,r8d
  44686c:	cmp    r9d,0x8
  446870:	ja     0x4466fa
  446876:	lea    r9d,[rax-0x30]
  44687a:	mov    rax,QWORD PTR [rsp+0xc0]
  446882:	lea    r10,[rax+0x1]
  446886:	mov    QWORD PTR [rsp+0x50],rax
  44688b:	mov    QWORD PTR [rsp+0xc0],r10
  446893:	mov    QWORD PTR [rsp+0x48],r10
  446898:	mov    r10,rax
  44689b:	movsx  eax,BYTE PTR [rax+0x1]
  44689f:	lea    r8d,[rax-0x30]
  4468a3:	cmp    r8d,0x9
  4468a7:	ja     0x4468e3
  4468a9:	lea    r8,[r10+0x2]
  4468ad:	mov    DWORD PTR [rsp+0x5c],r11d
  4468b2:	lea    r9d,[r9+r9*4]
  4468b6:	mov    QWORD PTR [rsp+0xc0],r8
  4468be:	mov    r11,r8
  4468c1:	add    r8,0x1
  4468c5:	lea    r9d,[rax+r9*2-0x30]
  4468ca:	movsx  eax,BYTE PTR [r8-0x1]
  4468cf:	lea    r10d,[rax-0x30]
  4468d3:	cmp    r10d,0x9
  4468d7:	jbe    0x4468b2
  4468d9:	mov    QWORD PTR [rsp+0x48],r11
  4468de:	mov    r11d,DWORD PTR [rsp+0x5c]
  4468e3:	mov    r8,QWORD PTR [rsp+0x48]
  4468e8:	sub    r8,QWORD PTR [rsp+0x50]
  4468ed:	cmp    r8,0x8
  4468f1:	jg     0x447aaf
  4468f7:	cmp    r9d,0x4e1f
  4468fe:	jg     0x447aaf
  446904:	mov    r10d,DWORD PTR [rsp+0x44]
  446909:	mov    r8d,r10d
  44690c:	neg    r8d
  44690f:	xor    r8d,r9d
  446912:	add    r8d,r10d
  446915:	jmp    0x4466fa
  44691a:	cmp    eax,0x49
  44691d:	je     0x447aba
  446923:	mov    DWORD PTR [rsp+0xa4],0x6
  44692e:	mov    QWORD PTR [rsp+0xc0],rdi
  446936:	mov    r8,QWORD PTR [rsp+0xc8]
  44693e:	jmp    0x4464d1
  446943:	or     eax,0x40
  446946:	mov    DWORD PTR [rsp+0xa4],eax
  44694d:	call   0x4495c8
  446952:	mov    DWORD PTR [rax],0x22
  446958:	mov    r8,QWORD PTR [rsp+0xc8]
  446960:	jmp    0x4464d1
  446965:	mov    rax,QWORD PTR [rsp+0x190]
  44696d:	mov    ecx,DWORD PTR [rsp+0x58]
  446971:	sub    r8d,r13d
  446974:	mov    DWORD PTR [rsp+0xa4],0x1
  44697f:	mov    DWORD PTR [rsp+0x68],r8d
  446984:	mov    eax,DWORD PTR [rax+0xc]
  446987:	mov    DWORD PTR [rsp+0x44],eax
  44698b:	and    eax,0x3
  44698e:	mov    edi,eax
  446990:	sub    edi,ecx
  446992:	cmp    eax,0x2
  446995:	mov    DWORD PTR [rsp+0x6c],edi
  446999:	je     0x4469b3
  44699b:	lea    edi,[rcx+0x1]
  44699e:	cmp    eax,0x3
  4469a1:	mov    DWORD PTR [rsp+0x6c],edi
  4469a5:	je     0x4469b3
  4469a7:	test   eax,eax
  4469a9:	sete   al
  4469ac:	movzx  eax,al
  4469af:	mov    DWORD PTR [rsp+0x6c],eax
  4469b3:	pxor   xmm0,xmm0
  4469b7:	mov    eax,esi
  4469b9:	test   ebx,ebx
  4469bb:	cmove  ebx,ebp
  4469be:	mov    edi,0x10
  4469c3:	cmp    ebp,0x10
  4469c6:	cmovle edi,ebp
  4469c9:	cvtsi2sd xmm0,rax
  4469ce:	cmp    edi,0x9
  4469d1:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4469da:	jle    0x446a03
  4469dc:	pxor   xmm1,xmm1
  4469e0:	lea    eax,[rdi-0x9]
  4469e3:	mov    rcx,QWORD PTR [rip+0x14366]        # 0x45ad50
  4469ea:	cdqe   
  4469ec:	cvtsi2sd xmm1,rdx
  4469f1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  4469f6:	addsd  xmm0,xmm1
  4469fa:	movsd  QWORD PTR [rsp+0xb0],xmm0
  446a03:	cmp    ebp,0xf
  446a06:	jg     0x446b75
  446a0c:	cmp    DWORD PTR [rsp+0x40],0x35
  446a11:	jg     0x446b75
  446a17:	cmp    DWORD PTR [rsp+0x68],0x0
  446a1c:	je     0x447a00
  446a22:	jle    0x446e89
  446a28:	cmp    DWORD PTR [rsp+0x68],0x16
  446a2d:	jg     0x447a2a
  446a33:	movsxd rcx,DWORD PTR [rsp+0x68]
  446a38:	mov    edx,DWORD PTR [rsp+0xb0]
  446a3f:	lea    rax,[rip+0x140ba]        # 0x45ab00
  446a46:	test   edx,edx
  446a48:	mov    r8d,DWORD PTR [rax+rcx*4]
  446a4c:	je     0x447b1e
  446a52:	tzcnt  edx,edx
  446a56:	mov    eax,0x35
  446a5b:	sub    eax,edx
  446a5d:	mov    rdx,QWORD PTR [rip+0x142ec]        # 0x45ad50
  446a64:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  446a6d:	add    eax,r8d
  446a70:	cmp    eax,0x35
  446a73:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  446a78:	lea    rdx,[rsp+0xa4]
  446a80:	setle  al
  446a83:	movzx  eax,al
  446a86:	lea    rcx,[rsp+0xb0]
  446a8e:	mov    QWORD PTR [rsp+0x30],rdx
  446a93:	mov    edx,DWORD PTR [rsp+0x6c]
  446a97:	mov    DWORD PTR [rsp+0x20],eax
  446a9b:	mov    DWORD PTR [rsp+0x28],edx
  446a9f:	movsd  QWORD PTR [rsp+0xb0],xmm0
  446aa8:	mov    r9,QWORD PTR [rsp+0x1a0]
  446ab0:	mov    r8,QWORD PTR [rsp+0x198]
  446ab8:	mov    rdx,QWORD PTR [rsp+0x190]
  446ac0:	call   0x445f30
  446ac5:	test   eax,eax
  446ac7:	jne    0x446958
  446acd:	xor    eax,eax
  446acf:	jmp    0x446b79
  446ad4:	movzx  r8d,BYTE PTR [rbp+0x1]
  446ad9:	test   r8b,r8b
  446adc:	je     0x447d5d
  446ae2:	cmp    r8b,BYTE PTR [r9+0x1]
  446ae6:	jne    0x4466dc
  446aec:	mov    eax,0x2
  446af1:	jmp    0x446b02
  446af3:	add    rax,0x1
  446af7:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  446afc:	jne    0x446d00
  446b02:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  446b08:	test   r8b,r8b
  446b0b:	jne    0x446af3
  446b0d:	lea    r8,[r9+rax*1]
  446b11:	test   ebx,ebx
  446b13:	mov    QWORD PTR [rsp+0xc0],r8
  446b1b:	movsx  eax,BYTE PTR [r8]
  446b1f:	je     0x446dfe
  446b25:	lea    r8d,[rax-0x30]
  446b29:	xor    ecx,ecx
  446b2b:	xor    r13d,r13d
  446b2e:	mov    ebp,ebx
  446b30:	cmp    r8d,0x9
  446b34:	ja     0x446b6a
  446b36:	test   r8d,r8d
  446b39:	lea    eax,[rcx+0x1]
  446b3c:	mov    r9d,r8d
  446b3f:	jne    0x447cdd
  446b45:	mov    r8,QWORD PTR [rsp+0xc0]
  446b4d:	mov    ecx,eax
  446b4f:	lea    rax,[r8+0x1]
  446b53:	mov    QWORD PTR [rsp+0xc0],rax
  446b5b:	movsx  eax,BYTE PTR [r8+0x1]
  446b60:	lea    r8d,[rax-0x30]
  446b64:	cmp    r8d,0x9
  446b68:	jbe    0x446b36
  446b6a:	mov    r11d,0x1
  446b70:	jmp    0x4466e6
  446b75:	mov    eax,DWORD PTR [rsp+0x68]
  446b79:	mov    edx,ebp
  446b7b:	sub    edx,edi
  446b7d:	add    edx,eax
  446b7f:	cmp    edx,0x0
  446b82:	jle    0x4478ba
  446b88:	mov    eax,edx
  446b8a:	and    eax,0xf
  446b8d:	je     0x446baf
  446b8f:	mov    rcx,QWORD PTR [rip+0x141ba]        # 0x45ad50
  446b96:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  446b9f:	cdqe   
  446ba1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  446ba6:	movsd  QWORD PTR [rsp+0xb0],xmm0
  446baf:	and    edx,0xfffffff0
  446bb2:	jne    0x446d11
  446bb8:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  446bc1:	xor    edi,edi
  446bc3:	lea    rdx,[rsp+0xac]
  446bcb:	lea    r8,[rsp+0xa8]
  446bd3:	call   0x445d40
  446bd8:	mov    edx,DWORD PTR [rsp+0xa8]
  446bdf:	mov    r13d,DWORD PTR [rsp+0x40]
  446be4:	add    edi,DWORD PTR [rsp+0xac]
  446beb:	mov    QWORD PTR [rsp+0xc8],rax
  446bf3:	mov    r12d,edx
  446bf6:	sub    r12d,r13d
  446bf9:	test   r12d,r12d
  446bfc:	mov    DWORD PTR [rsp+0xac],edi
  446c03:	jle    0x446c2c
  446c05:	mov    edx,r12d
  446c08:	mov    rcx,rax
  446c0b:	call   0x445200
  446c10:	mov    edi,DWORD PTR [rsp+0xac]
  446c17:	mov    DWORD PTR [rsp+0xa8],r13d
  446c1f:	mov    edx,r13d
  446c22:	add    edi,r12d
  446c25:	mov    DWORD PTR [rsp+0xac],edi
  446c2c:	lea    eax,[rdi+rdx*1]
  446c2f:	sub    eax,DWORD PTR [rsp+0x40]
  446c33:	mov    ecx,eax
  446c35:	mov    DWORD PTR [rsp+0x8c],eax
  446c3c:	mov    rax,QWORD PTR [rsp+0x190]
  446c44:	mov    eax,DWORD PTR [rax+0x8]
  446c47:	mov    DWORD PTR [rsp+0x44],eax
  446c4b:	add    eax,0x1
  446c4e:	cmp    ecx,eax
  446c50:	jg     0x4477f5
  446c56:	mov    rax,QWORD PTR [rsp+0x190]
  446c5e:	mov    eax,DWORD PTR [rax+0x4]
  446c61:	cmp    ecx,eax
  446c63:	mov    DWORD PTR [rsp+0x50],eax
  446c67:	jge    0x4479f3
  446c6d:	sub    edi,eax
  446c6f:	cmp    edi,0x0
  446c72:	jle    0x446e5c
  446c78:	mov    rcx,QWORD PTR [rsp+0xc8]
  446c80:	mov    edx,edi
  446c82:	call   0x445970
  446c87:	add    DWORD PTR [rsp+0xa8],edi
  446c8e:	mov    QWORD PTR [rsp+0xc8],rax
  446c96:	mov    eax,DWORD PTR [rsp+0x50]
  446c9a:	mov    DWORD PTR [rsp+0xac],eax
  446ca1:	mov    eax,DWORD PTR [rsp+0x84]
  446ca8:	test   eax,eax
  446caa:	je     0x446f20
  446cb0:	mov    eax,DWORD PTR [rsp+0x8c]
  446cb7:	add    eax,0x1
  446cba:	cmp    DWORD PTR [rsp+0x50],eax
  446cbe:	jle    0x446f20
  446cc4:	mov    r8,QWORD PTR [rsp+0xc8]
  446ccc:	mov    rax,QWORD PTR [rsp+0x198]
  446cd4:	mov    esi,DWORD PTR [rsp+0x50]
  446cd8:	mov    DWORD PTR [rsp+0xa4],0x50
  446ce3:	mov    DWORD PTR [r8+0x14],0x0
  446ceb:	mov    DWORD PTR [r8+0x18],0x0
  446cf3:	mov    DWORD PTR [rax],esi
  446cf5:	jmp    0x4467aa
  446cfa:	nop    WORD PTR [rax+rax*1+0x0]
  446d00:	mov    eax,ecx
  446d02:	mov    ebp,ebx
  446d04:	xor    ecx,ecx
  446d06:	xor    r13d,r13d
  446d09:	xor    r11d,r11d
  446d0c:	jmp    0x4466e6
  446d11:	sar    edx,0x4
  446d14:	cmp    edx,0xf
  446d17:	jle    0x447de3
  446d1d:	mov    rax,QWORD PTR [rip+0x13f4c]        # 0x45ac70
  446d24:	mov    ecx,edx
  446d26:	xor    r8d,r8d
  446d29:	movsd  xmm1,QWORD PTR [rax+0x20]
  446d2e:	xchg   ax,ax
  446d30:	mov    eax,DWORD PTR [rsp+0xb4]
  446d37:	sub    ecx,0x10
  446d3a:	mov    r9d,eax
  446d3d:	and    eax,0x800fffff
  446d42:	or     eax,0x3ff00000
  446d47:	and    r9d,0x7ff00000
  446d4e:	mov    DWORD PTR [rsp+0xb4],eax
  446d55:	shr    r9d,0x14
  446d59:	cmp    ecx,0xf
  446d5c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  446d65:	lea    r8d,[r8+r9*1-0x3ff]
  446d6d:	mulsd  xmm0,xmm1
  446d71:	movsd  QWORD PTR [rsp+0xb0],xmm0
  446d7a:	jg     0x446d30
  446d7c:	and    edx,0xf
  446d7f:	mov    eax,DWORD PTR [rsp+0xb4]
  446d86:	mov    ecx,eax
  446d88:	and    eax,0x800fffff
  446d8d:	or     eax,0x3ff00000
  446d92:	and    ecx,0x7ff00000
  446d98:	shr    ecx,0x14
  446d9b:	mov    DWORD PTR [rsp+0xb4],eax
  446da2:	test   edx,edx
  446da4:	lea    edi,[r8+rcx*1-0x3ff]
  446dac:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  446db5:	mov    rax,QWORD PTR [rip+0x13eb4]        # 0x45ac70
  446dbc:	je     0x446bc3
  446dc2:	test   dl,0x1
  446dc5:	je     0x446dcb
  446dc7:	mulsd  xmm0,QWORD PTR [rax]
  446dcb:	add    rax,0x8
  446dcf:	sar    edx,1
  446dd1:	jne    0x446dc2
  446dd3:	movsd  QWORD PTR [rsp+0xb0],xmm0
  446ddc:	jmp    0x446bc3
  446de1:	mov    DWORD PTR [rsp+0x44],0x1
  446de9:	lea    rax,[rdi+0x2]
  446ded:	mov    QWORD PTR [rsp+0xc0],rax
  446df5:	movsx  eax,BYTE PTR [rdi+0x2]
  446df9:	jmp    0x44682d
  446dfe:	cmp    eax,0x30
  446e01:	jne    0x447e45
  446e07:	add    r8,0x1
  446e0b:	xor    ecx,ecx
  446e0d:	nop    DWORD PTR [rax]
  446e10:	mov    QWORD PTR [rsp+0xc0],r8
  446e18:	movsx  eax,BYTE PTR [r8]
  446e1c:	add    ecx,0x1
  446e1f:	add    r8,0x1
  446e23:	cmp    eax,0x30
  446e26:	je     0x446e10
  446e28:	lea    r8d,[rax-0x31]
  446e2c:	cmp    r8d,0x8
  446e30:	ja     0x447aa5
  446e36:	mov    r15,QWORD PTR [rsp+0xc0]
  446e3e:	lea    r9d,[rax-0x30]
  446e42:	lea    r13d,[rcx+0x1]
  446e46:	mov    ebp,0x1
  446e4b:	mov    r8,r15
  446e4e:	lea    eax,[rsi+rsi*4]
  446e51:	xor    ecx,ecx
  446e53:	lea    esi,[r9+rax*2]
  446e57:	jmp    0x446b4f
  446e5c:	je     0x446c96
  446e62:	add    edx,edi
  446e64:	test   edx,edx
  446e66:	mov    DWORD PTR [rsp+0xa8],edx
  446e6d:	jle    0x447e06
  446e73:	mov    rcx,QWORD PTR [rsp+0xc8]
  446e7b:	neg    edi
  446e7d:	mov    edx,edi
  446e7f:	call   0x445200
  446e84:	jmp    0x446c96
  446e89:	mov    edx,DWORD PTR [rsp+0x68]
  446e8d:	cmp    edx,0xffffffea
  446e90:	mov    eax,edx
  446e92:	jl     0x446b79
  446e98:	mov    rdx,QWORD PTR [rip+0x13eb1]        # 0x45ad50
  446e9f:	neg    eax
  446ea1:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  446eaa:	cdqe   
  446eac:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  446eb1:	lea    rax,[rsp+0xa4]
  446eb9:	movsd  QWORD PTR [rsp+0xb0],xmm0
  446ec2:	lea    rcx,[rsp+0xb0]
  446eca:	mov    DWORD PTR [rsp+0x20],0x0
  446ed2:	mov    QWORD PTR [rsp+0x30],rax
  446ed7:	mov    eax,DWORD PTR [rsp+0x6c]
  446edb:	mov    DWORD PTR [rsp+0x28],eax
  446edf:	jmp    0x446aa8
  446ee4:	mov    DWORD PTR [r8+0x14],0x0
  446eec:	mov    DWORD PTR [rsp+0xa4],0x50
  446ef7:	call   0x4495c8
  446efc:	mov    r8,QWORD PTR [rsp+0xc8]
  446f04:	mov    DWORD PTR [rax],0x22
  446f0a:	jmp    0x4464d1
  446f0f:	nop
  446f10:	mov    QWORD PTR [rsp+0xc0],rdi
  446f18:	xor    r8d,r8d
  446f1b:	jmp    0x4466fa
  446f20:	mov    eax,DWORD PTR [rsp+0x50]
  446f24:	mov    DWORD PTR [rsp+0x44],0x1
  446f2c:	mov    DWORD PTR [rsp+0x8c],eax
  446f33:	mov    r8d,ebp
  446f36:	mov    edx,ebx
  446f38:	mov    DWORD PTR [rsp+0x20],r14d
  446f3d:	mov    r9d,esi
  446f40:	mov    rcx,r15
  446f43:	call   0x448fd0
  446f48:	mov    QWORD PTR [rsp+0x70],rax
  446f4d:	add    rax,0x10
  446f51:	mov    QWORD PTR [rsp+0x78],rax
  446f56:	mov    eax,DWORD PTR [rsp+0x40]
  446f5a:	movsd  xmm8,QWORD PTR [rip+0x13bfd]        # 0x45ab60
  446f63:	movsd  xmm9,QWORD PTR [rip+0x13c04]        # 0x45ab70
  446f6c:	add    eax,0x1
  446f6f:	movapd xmm11,xmm8
  446f74:	mov    DWORD PTR [rsp+0x80],eax
  446f7b:	mov    eax,DWORD PTR [rsp+0x68]
  446f7f:	movsd  xmm10,QWORD PTR [rip+0x13c08]        # 0x45ab90
  446f88:	mov    edx,eax
  446f8a:	neg    edx
  446f8c:	test   eax,eax
  446f8e:	mov    eax,0x0
  446f93:	cmovs  eax,edx
  446f96:	xor    ebp,ebp
  446f98:	mov    DWORD PTR [rsp+0x5c],eax
  446f9c:	jmp    0x4471e0
  446fa1:	mov    rcx,rsi
  446fa4:	call   0x445970
  446fa9:	mov    rsi,rax
  446fac:	test   r15d,r15d
  446faf:	je     0x446fbf
  446fb1:	mov    rcx,rdi
  446fb4:	mov    edx,r15d
  446fb7:	call   0x445800
  446fbc:	mov    rdi,rax
  446fbf:	test   r12d,r12d
  446fc2:	jle    0x446fd2
  446fc4:	mov    rcx,rdi
  446fc7:	mov    edx,r12d
  446fca:	call   0x445970
  446fcf:	mov    rdi,rax
  446fd2:	test   r14d,r14d
  446fd5:	jle    0x446fe5
  446fd7:	mov    rcx,r13
  446fda:	mov    edx,r14d
  446fdd:	call   0x445970
  446fe2:	mov    r13,rax
  446fe5:	mov    rdx,rdi
  446fe8:	mov    rcx,rsi
  446feb:	call   0x445ae0
  446ff0:	cmp    DWORD PTR [rax+0x14],0x1
  446ff4:	mov    rbx,rax
  446ff7:	jle    0x447390
  446ffd:	mov    ebp,DWORD PTR [rbx+0x10]
  447000:	mov    rdx,r13
  447003:	mov    DWORD PTR [rbx+0x10],0x0
  44700a:	mov    rcx,rbx
  44700d:	call   0x445a90
  447012:	test   eax,eax
  447014:	jg     0x447320
  44701a:	mov    ecx,DWORD PTR [rsp+0x6c]
  44701e:	test   ecx,ecx
  447020:	je     0x447320
  447026:	mov    eax,ecx
  447028:	and    eax,0x1
  44702b:	xor    eax,ebp
  44702d:	mov    DWORD PTR [rsp+0x60],eax
  447031:	je     0x447b3b
  447037:	test   ebp,ebp
  447039:	je     0x447591
  44703f:	movsd  xmm6,QWORD PTR [rip+0x13b19]        # 0x45ab60
  447047:	mov    DWORD PTR [rsp+0xa4],0x21
  447052:	xor    r12d,r12d
  447055:	mov    DWORD PTR [rsp+0x88],0x20
  447060:	xor    r14d,r14d
  447063:	movapd xmm7,xmm6
  447067:	mov    eax,DWORD PTR [rsp+0xa8]
  44706e:	mov    edx,DWORD PTR [rsp+0xac]
  447075:	mov    r8d,DWORD PTR [rsp+0x44]
  44707a:	add    edx,eax
  44707c:	test   r8d,r8d
  44707f:	mov    DWORD PTR [rsp+0x48],edx
  447083:	jne    0x44708f
  447085:	cmp    DWORD PTR [rsp+0x40],eax
  447089:	jg     0x447745
  44708f:	lea    rdx,[rsp+0x9c]
  447097:	lea    r8,[rsp+0xa0]
  44709f:	movapd xmm0,xmm6
  4470a3:	call   0x445d40
  4470a8:	mov    edx,DWORD PTR [rsp+0x9c]
  4470af:	mov    r15,rax
  4470b2:	test   edx,edx
  4470b4:	js     0x447780
  4470ba:	je     0x4470c7
  4470bc:	mov    rcx,rax
  4470bf:	call   0x445970
  4470c4:	mov    r15,rax
  4470c7:	mov    rbp,QWORD PTR [rsp+0xc8]
  4470cf:	test   r14d,r14d
  4470d2:	mov    rdx,r15
  4470d5:	mov    rcx,rbp
  4470d8:	je     0x4474c0
  4470de:	call   0x445ae0
  4470e3:	mov    ecx,DWORD PTR [rsp+0x44]
  4470e7:	mov    QWORD PTR [rsp+0xc8],rax
  4470ef:	mov    edx,DWORD PTR [rbp+0x14]
  4470f2:	test   ecx,ecx
  4470f4:	jne    0x447660
  4470fa:	sub    edx,0x1
  4470fd:	cmp    edx,DWORD PTR [rax+0x14]
  447100:	jge    0x44711d
  447102:	movsxd rdx,edx
  447105:	add    rdx,0x4
  447109:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  44710e:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  447113:	xor    ecx,0x1f
  447116:	xor    edx,0x1f
  447119:	cmp    ecx,edx
  44711b:	jle    0x447140
  44711d:	mov    ecx,DWORD PTR [rsp+0x50]
  447121:	cmp    DWORD PTR [rsp+0x8c],ecx
  447128:	jne    0x447540
  44712e:	sub    DWORD PTR [rsp+0xa8],0x1
  447136:	mov    DWORD PTR [rsp+0x44],0x1
  44713e:	xchg   ax,ax
  447140:	mov    rcx,r15
  447143:	call   0x445570
  447148:	mov    rcx,rbp
  44714b:	call   0x445570
  447150:	mov    r14d,DWORD PTR [rsp+0x60]
  447155:	test   r14d,r14d
  447158:	jne    0x4473a0
  44715e:	test   r12d,r12d
  447161:	je     0x4471a8
  447163:	mov    eax,DWORD PTR [rsp+0xa8]
  44716a:	add    eax,DWORD PTR [rsp+0xac]
  447171:	cmp    DWORD PTR [rsp+0x48],eax
  447175:	jne    0x4471a8
  447177:	mulsd  xmm6,QWORD PTR [rip+0x13a09]        # 0x45ab88
  44717f:	movapd xmm0,xmm7
  447183:	subsd  xmm0,QWORD PTR [rip+0x139ed]        # 0x45ab78
  44718b:	movapd xmm1,xmm6
  44718f:	xorpd  xmm1,xmm10
  447194:	ucomisd xmm1,xmm0
  447198:	jbe    0x447712
  44719e:	ucomisd xmm7,xmm6
  4471a2:	ja     0x447732
  4471a8:	mov    r12d,DWORD PTR [rsp+0x44]
  4471ad:	test   r12d,r12d
  4471b0:	je     0x447575
  4471b6:	mov    DWORD PTR [rsp+0x44],0x1
  4471be:	xor    ebp,ebp
  4471c0:	mov    rcx,rsi
  4471c3:	call   0x445570
  4471c8:	mov    rcx,rdi
  4471cb:	call   0x445570
  4471d0:	mov    rcx,r13
  4471d3:	call   0x445570
  4471d8:	mov    rcx,rbx
  4471db:	call   0x445570
  4471e0:	mov    rsi,QWORD PTR [rsp+0x70]
  4471e5:	mov    r15d,0x0
  4471eb:	mov    ecx,DWORD PTR [rsi+0x8]
  4471ee:	call   0x445460
  4471f3:	lea    rcx,[rax+0x10]
  4471f7:	mov    rdi,rax
  4471fa:	movsxd rax,DWORD PTR [rsi+0x14]
  4471fe:	mov    rdx,QWORD PTR [rsp+0x78]
  447203:	lea    r8,[rax*4+0x8]
  44720b:	call   0x449450
  447210:	mov    rax,QWORD PTR [rsp+0xc8]
  447218:	mov    ecx,DWORD PTR [rax+0x8]
  44721b:	call   0x445460
  447220:	mov    rdx,QWORD PTR [rsp+0xc8]
  447228:	lea    rcx,[rax+0x10]
  44722c:	mov    rsi,rax
  44722f:	movsxd rax,DWORD PTR [rdx+0x14]
  447233:	add    rdx,0x10
  447237:	lea    r8,[rax*4+0x8]
  44723f:	call   0x449450
  447244:	mov    eax,DWORD PTR [rsp+0xa8]
  44724b:	mov    ecx,0x1
  447250:	mov    ebx,DWORD PTR [rsp+0xac]
  447257:	sub    eax,ebp
  447259:	add    ebx,ebp
  44725b:	mov    DWORD PTR [rsp+0x48],eax
  44725f:	call   0x4456a0
  447264:	mov    r13,rax
  447267:	mov    eax,DWORD PTR [rsp+0x68]
  44726b:	test   eax,eax
  44726d:	cmovg  r15d,eax
  447271:	test   ebx,ebx
  447273:	js     0x447530
  447279:	mov    eax,DWORD PTR [rsp+0x5c]
  44727d:	mov    edx,r15d
  447280:	lea    r14d,[rax+rbx*1]
  447284:	mov    ecx,DWORD PTR [rsp+0x48]
  447288:	mov    eax,DWORD PTR [rsp+0x80]
  44728f:	add    ebx,ecx
  447291:	sub    ebx,DWORD PTR [rsp+0x40]
  447295:	sub    eax,ecx
  447297:	cmp    DWORD PTR [rsp+0x50],ebx
  44729b:	jle    0x4472a3
  44729d:	sub    ebx,DWORD PTR [rsp+0x50]
  4472a1:	add    eax,ebx
  4472a3:	lea    ebx,[r14+rax*1]
  4472a7:	lea    r12d,[rdx+rax*1]
  4472ab:	cmp    ebx,r12d
  4472ae:	mov    eax,r12d
  4472b1:	cmovle eax,ebx
  4472b4:	cmp    eax,r14d
  4472b7:	cmovg  eax,r14d
  4472bb:	test   eax,eax
  4472bd:	jle    0x4472c7
  4472bf:	sub    ebx,eax
  4472c1:	sub    r12d,eax
  4472c4:	sub    r14d,eax
  4472c7:	mov    eax,DWORD PTR [rsp+0x5c]
  4472cb:	test   eax,eax
  4472cd:	je     0x4472fc
  4472cf:	mov    rcx,r13
  4472d2:	mov    edx,eax
  4472d4:	call   0x445800
  4472d9:	mov    rdx,rsi
  4472dc:	mov    rcx,rax
  4472df:	mov    r13,rax
  4472e2:	call   0x4456d0
  4472e7:	mov    rcx,rsi
  4472ea:	mov    QWORD PTR [rsp+0x60],rax
  4472ef:	call   0x445570
  4472f4:	mov    rax,QWORD PTR [rsp+0x60]
  4472f9:	mov    rsi,rax
  4472fc:	sub    ebx,ebp
  4472fe:	cmp    ebx,0x0
  447301:	mov    edx,ebx
  447303:	jg     0x446fa1
  447309:	je     0x446fac
  44730f:	neg    edx
  447311:	mov    rcx,rsi
  447314:	call   0x445200
  447319:	jmp    0x446fac
  44731e:	xchg   ax,ax
  447320:	test   eax,eax
  447322:	js     0x447b52
  447328:	je     0x447c1e
  44732e:	mov    rdx,r13
  447331:	mov    rcx,rbx
  447334:	call   0x4490d0
  447339:	ucomisd xmm9,xmm0
  44733e:	jb     0x447670
  447344:	test   ebp,ebp
  447346:	jne    0x4477a0
  44734c:	mov    DWORD PTR [rsp+0x60],0x0
  447354:	cmp    DWORD PTR [rsp+0x48],0x1
  447359:	jg     0x447369
  44735b:	mov    r9d,DWORD PTR [rsp+0x44]
  447360:	test   r9d,r9d
  447363:	jne    0x447d2a
  447369:	movapd xmm6,xmm8
  44736e:	xor    r12d,r12d
  447371:	mov    DWORD PTR [rsp+0x88],0x10
  44737c:	movapd xmm7,xmm8
  447381:	mov    r14d,0x1
  447387:	jmp    0x447067
  44738c:	nop    DWORD PTR [rax+0x0]
  447390:	mov    r15d,DWORD PTR [rax+0x18]
  447394:	test   r15d,r15d
  447397:	jne    0x446ffd
  44739d:	nop    DWORD PTR [rax]
  4473a0:	mov    ebp,DWORD PTR [rsp+0x44]
  4473a4:	test   ebp,ebp
  4473a6:	je     0x447898
  4473ac:	mov    eax,DWORD PTR [rsp+0xac]
  4473b3:	mov    ebp,0x1
  4473b8:	mov    rdx,QWORD PTR [rsp+0x198]
  4473c0:	mov    rcx,rsi
  4473c3:	mov    DWORD PTR [rdx],eax
  4473c5:	call   0x445570
  4473ca:	mov    rcx,rdi
  4473cd:	call   0x445570
  4473d2:	mov    rcx,r13
  4473d5:	call   0x445570
  4473da:	mov    rcx,QWORD PTR [rsp+0x70]
  4473df:	call   0x445570
  4473e4:	mov    rcx,rbx
  4473e7:	call   0x445570
  4473ec:	mov    rax,QWORD PTR [rsp+0x190]
  4473f4:	mov    esi,DWORD PTR [rsp+0xac]
  4473fb:	cmp    DWORD PTR [rax+0x8],esi
  4473fe:	jge    0x44679a
  447404:	mov    rax,QWORD PTR [rsp+0x190]
  44740c:	mov    eax,DWORD PTR [rax+0xc]
  44740f:	mov    DWORD PTR [rsp+0x44],eax
  447413:	and    eax,0x3
  447416:	cmp    eax,0x2
  447419:	je     0x447c0b
  44741f:	cmp    eax,0x3
  447422:	je     0x447bf8
  447428:	cmp    eax,0x1
  44742b:	je     0x4477f7
  447431:	mov    rcx,QWORD PTR [rsp+0xc8]
  447439:	call   0x445570
  44743e:	mov    rax,QWORD PTR [rsp+0x190]
  447446:	mov    rsi,QWORD PTR [rsp+0x198]
  44744e:	mov    QWORD PTR [rsp+0xc8],0x0
  44745a:	mov    DWORD PTR [rsp+0xa4],0x11
  447465:	mov    eax,DWORD PTR [rax+0x8]
  447468:	mov    DWORD PTR [rsi],eax
  44746a:	mov    rax,QWORD PTR [rsp+0x190]
  447472:	mov    rsi,QWORD PTR [rsp+0x1a0]
  44747a:	mov    ecx,DWORD PTR [rax]
  44747c:	lea    eax,[rcx+0x1f]
  44747f:	sar    eax,0x5
  447482:	cdqe   
  447484:	lea    rdx,[rsi+rax*4]
  447488:	mov    rax,rsi
  44748b:	cmp    rsi,rdx
  44748e:	jae    0x4474a0
  447490:	add    rax,0x4
  447494:	mov    DWORD PTR [rax-0x4],0xffffffff
  44749b:	cmp    rdx,rax
  44749e:	ja     0x447490
  4474a0:	and    ecx,0x1f
  4474a3:	je     0x4474b1
  4474a5:	mov    eax,0x20
  4474aa:	sub    eax,ecx
  4474ac:	mov    ecx,eax
  4474ae:	shr    DWORD PTR [rdx-0x4],cl
  4474b1:	xor    r8d,r8d
  4474b4:	jmp    0x4467a2
  4474b9:	nop    DWORD PTR [rax+0x0]
  4474c0:	call   0x447f30
  4474c5:	mov    edx,DWORD PTR [rax+0x14]
  4474c8:	mov    QWORD PTR [rsp+0xc8],rax
  4474d0:	sub    edx,0x1
  4474d3:	cmp    edx,DWORD PTR [rbp+0x14]
  4474d6:	jge    0x4474f7
  4474d8:	movsxd rdx,edx
  4474db:	add    rdx,0x4
  4474df:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  4474e4:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  4474e9:	xor    ecx,0x1f
  4474ec:	xor    edx,0x1f
  4474ef:	cmp    ecx,edx
  4474f1:	jge    0x447140
  4474f7:	mov    edx,DWORD PTR [rsp+0x44]
  4474fb:	test   edx,edx
  4474fd:	je     0x4477d0
  447503:	mov    eax,DWORD PTR [rsp+0xa8]
  44750a:	add    eax,0x1
  44750d:	cmp    DWORD PTR [rsp+0x40],eax
  447511:	mov    DWORD PTR [rsp+0xa8],eax
  447518:	setne  al
  44751b:	movzx  eax,al
  44751e:	mov    DWORD PTR [rsp+0x44],eax
  447522:	jmp    0x447140
  447527:	nop    WORD PTR [rax+rax*1+0x0]
  447530:	mov    edx,r15d
  447533:	mov    r14d,DWORD PTR [rsp+0x5c]
  447538:	sub    edx,ebx
  44753a:	jmp    0x447284
  44753f:	nop
  447540:	mov    edx,0x1
  447545:	mov    rcx,rax
  447548:	call   0x445970
  44754d:	mov    rcx,r15
  447550:	mov    QWORD PTR [rsp+0xc8],rax
  447558:	sub    DWORD PTR [rsp+0xac],0x1
  447560:	sub    DWORD PTR [rsp+0x8c],0x1
  447568:	call   0x445570
  44756d:	mov    rcx,rbp
  447570:	call   0x445570
  447575:	mov    rcx,QWORD PTR [rsp+0xc8]
  44757d:	call   0x445300
  447582:	mov    DWORD PTR [rsp+0x44],0x0
  44758a:	mov    ebp,eax
  44758c:	jmp    0x4471c0
  447591:	mov    edx,DWORD PTR [rsp+0x50]
  447595:	cmp    DWORD PTR [rsp+0x8c],edx
  44759c:	mov    DWORD PTR [rsp+0xa4],0x11
  4475a7:	je     0x447354
  4475ad:	xor    ecx,ecx
  4475af:	cmp    DWORD PTR [rsp+0x40],0x1f
  4475b4:	mov    r9,QWORD PTR [rsp+0xc8]
  4475bc:	mov    eax,DWORD PTR [rsp+0x40]
  4475c0:	jle    0x4475fc
  4475c2:	mov    r14d,DWORD PTR [r9+0x18]
  4475c6:	test   r14d,r14d
  4475c9:	jne    0x447354
  4475cf:	lea    rdx,[r9+0x1c]
  4475d3:	mov    eax,DWORD PTR [rsp+0x40]
  4475d7:	xor    ecx,ecx
  4475d9:	jmp    0x4475f1
  4475db:	nop    DWORD PTR [rax+rax*1+0x0]
  4475e0:	add    rdx,0x4
  4475e4:	mov    r12d,DWORD PTR [rdx-0x4]
  4475e8:	test   r12d,r12d
  4475eb:	jne    0x447354
  4475f1:	sub    eax,0x20
  4475f4:	add    ecx,0x1
  4475f7:	cmp    eax,0x1f
  4475fa:	jg     0x4475e0
  4475fc:	cmp    eax,0x1
  4475ff:	jle    0x447623
  447601:	movsxd rcx,ecx
  447604:	sub    eax,0x1
  447607:	lea    r8,[r9+rcx*4]
  44760b:	xor    ecx,ecx
  44760d:	mov    edx,DWORD PTR [r8+0x18]
  447611:	tzcnt  ecx,edx
  447615:	shr    edx,cl
  447617:	cmp    eax,ecx
  447619:	mov    DWORD PTR [r8+0x18],edx
  44761d:	jg     0x447354
  447623:	mov    eax,DWORD PTR [rsp+0x8c]
  44762a:	mov    rcx,r9
  44762d:	sub    eax,0x1
  447630:	mov    DWORD PTR [rsp+0xac],eax
  447637:	mov    eax,DWORD PTR [rsp+0x40]
  44763b:	mov    edx,eax
  44763d:	mov    DWORD PTR [rsp+0xa8],eax
  447644:	call   0x446330
  447649:	mov    QWORD PTR [rsp+0xc8],rax
  447651:	jmp    0x4473a0
  447656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  447660:	mov    DWORD PTR [rsp+0x44],0x1
  447668:	jmp    0x447140
  44766d:	nop    DWORD PTR [rax]
  447670:	movapd xmm7,xmm0
  447674:	cmp    ebp,0x1
  447677:	movsd  xmm1,QWORD PTR [rip+0x134f9]        # 0x45ab78
  44767f:	sbb    eax,eax
  447681:	and    eax,0x10
  447684:	movsd  xmm0,QWORD PTR [rip+0x134f4]        # 0x45ab80
  44768c:	mulsd  xmm7,xmm1
  447690:	add    eax,0x10
  447693:	xor    r14d,r14d
  447696:	cmp    ebp,0x1
  447699:	mov    DWORD PTR [rsp+0x88],eax
  4476a0:	setb   r14b
  4476a4:	ucomisd xmm0,xmm7
  4476a8:	jbe    0x447790
  4476ae:	cvttsd2si r12d,xmm7
  4476b3:	pxor   xmm6,xmm6
  4476b7:	mov    eax,DWORD PTR [rsp+0x6c]
  4476bb:	cmp    eax,0x1
  4476be:	cvtsi2sd xmm6,r12d
  4476c3:	subsd  xmm7,xmm6
  4476c7:	je     0x4479e5
  4476cd:	cmp    eax,0x2
  4476d0:	jne    0x447889
  4476d6:	test   r14d,r14d
  4476d9:	jne    0x447705
  4476db:	ucomisd xmm7,QWORD PTR [rip+0x13485]        # 0x45ab68
  4476e3:	jbe    0x447705
  4476e5:	pxor   xmm6,xmm6
  4476e9:	add    r12d,0x1
  4476ed:	mov    eax,0x30
  4476f2:	sub    eax,DWORD PTR [rsp+0x88]
  4476f9:	cvtsi2sd xmm6,r12d
  4476fe:	mov    DWORD PTR [rsp+0x88],eax
  447705:	mov    DWORD PTR [rsp+0x60],0x0
  44770d:	jmp    0x447067
  447712:	ucomisd xmm0,xmm6
  447716:	jbe    0x4471a8
  44771c:	movsd  xmm0,QWORD PTR [rip+0x1343c]        # 0x45ab60
  447724:	subsd  xmm0,xmm6
  447728:	ucomisd xmm0,xmm7
  44772c:	jbe    0x4471a8
  447732:	mov    eax,DWORD PTR [rsp+0x88]
  447739:	or     DWORD PTR [rsp+0xa4],eax
  447740:	jmp    0x4473a0
  447745:	mov    r15d,DWORD PTR [rsp+0x40]
  44774a:	mov    rcx,QWORD PTR [rsp+0xc8]
  447752:	mov    ebp,r15d
  447755:	sub    ebp,eax
  447757:	mov    edx,ebp
  447759:	call   0x445970
  44775e:	sub    DWORD PTR [rsp+0xac],ebp
  447765:	mov    QWORD PTR [rsp+0xc8],rax
  44776d:	mov    DWORD PTR [rsp+0xa8],r15d
  447775:	jmp    0x44708f
  44777a:	nop    WORD PTR [rax+rax*1+0x0]
  447780:	neg    edx
  447782:	mov    rcx,rax
  447785:	call   0x445200
  44778a:	jmp    0x4470c7
  44778f:	nop
  447790:	movapd xmm6,xmm7
  447794:	xor    r12d,r12d
  447797:	jmp    0x447705
  44779c:	nop    DWORD PTR [rax+0x0]
  4477a0:	movapd xmm6,xmm11
  4477a5:	xor    r12d,r12d
  4477a8:	movapd xmm7,xmm11
  4477ad:	mov    DWORD PTR [rsp+0x88],0x20
  4477b8:	mov    DWORD PTR [rsp+0x60],0x0
  4477c0:	xor    r14d,r14d
  4477c3:	jmp    0x447067
  4477c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4477d0:	mov    edx,0x1
  4477d5:	mov    rcx,rax
  4477d8:	xor    r12d,r12d
  4477db:	call   0x445200
  4477e0:	add    DWORD PTR [rsp+0xac],0x1
  4477e8:	add    DWORD PTR [rsp+0x8c],0x1
  4477f0:	jmp    0x447140
  4477f5:	xor    ebp,ebp
  4477f7:	mov    rax,QWORD PTR [rsp+0xc8]
  4477ff:	mov    DWORD PTR [rsp+0xa4],0xa3
  44780a:	mov    DWORD PTR [rax+0x14],0x0
  447811:	call   0x4495c8
  447816:	mov    DWORD PTR [rax],0x22
  44781c:	mov    rax,QWORD PTR [rsp+0x190]
  447824:	mov    eax,DWORD PTR [rax+0x8]
  447827:	add    eax,0x1
  44782a:	jmp    0x446790
  44782f:	mov    eax,DWORD PTR [rsp+0x58]
  447833:	mov    r8,QWORD PTR [rsp+0x198]
  44783b:	lea    rcx,[rsp+0xc0]
  447843:	mov    rdx,QWORD PTR [rsp+0x190]
  44784b:	lea    r9,[rsp+0xc8]
  447853:	mov    DWORD PTR [rsp+0x20],eax
  447857:	call   0x4482b0
  44785c:	cmp    eax,0x6
  44785f:	mov    DWORD PTR [rsp+0xa4],eax
  447866:	mov    r8,QWORD PTR [rsp+0xc8]
  44786e:	jne    0x4464d1
  447874:	mov    QWORD PTR [rsp+0xc0],rdi
  44787c:	mov    DWORD PTR [rsp+0x58],0x0
  447884:	jmp    0x4464d1
  447889:	ucomisd xmm7,xmm1
  44788d:	jae    0x4476e5
  447893:	jmp    0x447705
  447898:	mov    eax,DWORD PTR [rsp+0xa8]
  44789f:	mov    ebp,DWORD PTR [rsp+0x40]
  4478a3:	sub    ebp,eax
  4478a5:	cmp    ebp,0x0
  4478a8:	jne    0x447a71
  4478ae:	mov    eax,DWORD PTR [rsp+0xac]
  4478b5:	jmp    0x4473b8
  4478ba:	je     0x446bb8
  4478c0:	neg    edx
  4478c2:	mov    eax,edx
  4478c4:	and    eax,0xf
  4478c7:	je     0x4478e9
  4478c9:	mov    rcx,QWORD PTR [rip+0x13480]        # 0x45ad50
  4478d0:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  4478d9:	cdqe   
  4478db:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  4478e0:	movsd  QWORD PTR [rsp+0xb0],xmm0
  4478e9:	and    edx,0xfffffff0
  4478ec:	je     0x446bb8
  4478f2:	mov    eax,edx
  4478f4:	sar    eax,0x4
  4478f7:	cmp    eax,0xf
  4478fa:	jle    0x447ec8
  447900:	mov    rdx,QWORD PTR [rip+0x13459]        # 0x45ad60
  447907:	mov    ecx,eax
  447909:	xor    r8d,r8d
  44790c:	movsd  xmm1,QWORD PTR [rdx+0x20]
  447911:	mov    edx,DWORD PTR [rsp+0xb4]
  447918:	sub    ecx,0x10
  44791b:	mov    r9d,edx
  44791e:	and    edx,0x800fffff
  447924:	or     edx,0x3ff00000
  44792a:	and    r9d,0x7ff00000
  447931:	mov    DWORD PTR [rsp+0xb4],edx
  447938:	shr    r9d,0x14
  44793c:	cmp    ecx,0xf
  44793f:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  447948:	lea    r8d,[r8+r9*1-0x3ff]
  447950:	mulsd  xmm0,xmm1
  447954:	movsd  QWORD PTR [rsp+0xb0],xmm0
  44795d:	jg     0x447911
  44795f:	and    eax,0xf
  447962:	mov    edx,DWORD PTR [rsp+0xb4]
  447969:	mov    ecx,edx
  44796b:	and    edx,0x800fffff
  447971:	and    ecx,0x7ff00000
  447977:	or     edx,0x3ff00000
  44797d:	shr    ecx,0x14
  447980:	mov    DWORD PTR [rsp+0xb4],edx
  447987:	test   eax,eax
  447989:	lea    edi,[r8+rcx*1-0x3ff]
  447991:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  44799a:	jle    0x446bc3
  4479a0:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  4479a9:	mov    rdx,QWORD PTR [rip+0x133b0]        # 0x45ad60
  4479b0:	movapd xmm0,xmm1
  4479b4:	test   al,0x1
  4479b6:	je     0x4479c0
  4479b8:	mulsd  xmm1,QWORD PTR [rdx]
  4479bc:	movapd xmm0,xmm1
  4479c0:	sar    eax,1
  4479c2:	add    rdx,0x8
  4479c6:	test   eax,eax
  4479c8:	jg     0x4479b4
  4479ca:	movsd  QWORD PTR [rsp+0xb0],xmm1
  4479d3:	jmp    0x446bc3
  4479d8:	mov    DWORD PTR [rsp+0x44],0x0
  4479e0:	jmp    0x446de9
  4479e5:	test   r14d,r14d
  4479e8:	je     0x447705
  4479ee:	jmp    0x4476db
  4479f3:	mov    DWORD PTR [rsp+0x44],0x0
  4479fb:	jmp    0x446f33
  447a00:	lea    rax,[rsp+0xa4]
  447a08:	lea    rcx,[rsp+0xb0]
  447a10:	mov    DWORD PTR [rsp+0x20],0x1
  447a18:	mov    QWORD PTR [rsp+0x30],rax
  447a1d:	mov    eax,DWORD PTR [rsp+0x6c]
  447a21:	mov    DWORD PTR [rsp+0x28],eax
  447a25:	jmp    0x446aa8
  447a2a:	mov    ecx,DWORD PTR [rsp+0x68]
  447a2e:	mov    edx,0x25
  447a33:	sub    edx,ebp
  447a35:	cmp    ecx,edx
  447a37:	mov    eax,ecx
  447a39:	jg     0x446b79
  447a3f:	mov    rdx,QWORD PTR [rip+0x1330a]        # 0x45ad50
  447a46:	mov    eax,0xf
  447a4b:	sub    eax,ebp
  447a4d:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  447a56:	movsxd rcx,eax
  447a59:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  447a5e:	mov    ecx,DWORD PTR [rsp+0x68]
  447a62:	sub    ecx,eax
  447a64:	movsxd rax,ecx
  447a67:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  447a6c:	jmp    0x446eb1
  447a71:	mov    edx,ebp
  447a73:	jle    0x447dcf
  447a79:	mov    rcx,QWORD PTR [rsp+0xc8]
  447a81:	call   0x445970
  447a86:	mov    QWORD PTR [rsp+0xc8],rax
  447a8e:	mov    eax,DWORD PTR [rsp+0xac]
  447a95:	sub    eax,ebp
  447a97:	xor    ebp,ebp
  447a99:	mov    DWORD PTR [rsp+0xac],eax
  447aa0:	jmp    0x4473b8
  447aa5:	xor    ebp,ebp
  447aa7:	xor    r13d,r13d
  447aaa:	jmp    0x446b6a
  447aaf:	mov    r9d,0x4e1f
  447ab5:	jmp    0x446904
  447aba:	lea    rbx,[rsp+0xc0]
  447ac2:	lea    rdx,[rip+0x12f37]        # 0x45aa00
  447ac9:	mov    rcx,rbx
  447acc:	call   0x449190
  447ad1:	test   eax,eax
  447ad3:	je     0x446923
  447ad9:	lea    rdx,[rip+0x12f23]        # 0x45aa03
  447ae0:	mov    rcx,rbx
  447ae3:	sub    QWORD PTR [rsp+0xc0],0x1
  447aec:	call   0x449190
  447af1:	test   eax,eax
  447af3:	jne    0x447afe
  447af5:	add    QWORD PTR [rsp+0xc0],0x1
  447afe:	mov    rax,QWORD PTR [rsp+0x190]
  447b06:	mov    DWORD PTR [rsp+0xa4],0x3
  447b11:	xor    ebp,ebp
  447b13:	mov    eax,DWORD PTR [rax+0x8]
  447b16:	add    eax,0x1
  447b19:	jmp    0x446790
  447b1e:	mov    edx,DWORD PTR [rsp+0xb4]
  447b25:	mov    eax,0x15
  447b2a:	or     edx,0x100000
  447b30:	tzcnt  edx,edx
  447b34:	sub    eax,edx
  447b36:	jmp    0x446a5d
  447b3b:	cmp    ebp,0x1
  447b3e:	sbb    eax,eax
  447b40:	and    eax,0x10
  447b43:	add    eax,0x11
  447b46:	mov    DWORD PTR [rsp+0xa4],eax
  447b4d:	jmp    0x4473a0
  447b52:	cmp    ebp,0x1
  447b55:	sbb    eax,eax
  447b57:	and    eax,0x10
  447b5a:	add    eax,0x11
  447b5d:	test   ebp,ebp
  447b5f:	mov    DWORD PTR [rsp+0xa4],eax
  447b66:	jne    0x4473a0
  447b6c:	cmp    DWORD PTR [rsp+0x48],0x1
  447b71:	jg     0x4473a0
  447b77:	mov    ebp,DWORD PTR [rsp+0x44]
  447b7b:	test   ebp,ebp
  447b7d:	jne    0x4473a0
  447b83:	mov    edx,DWORD PTR [rsp+0x8c]
  447b8a:	cmp    DWORD PTR [rsp+0x50],edx
  447b8e:	je     0x4473a0
  447b94:	mov    rcx,rbx
  447b97:	mov    edx,0x1
  447b9c:	call   0x445970
  447ba1:	mov    rdx,r13
  447ba4:	mov    rcx,rax
  447ba7:	mov    rbx,rax
  447baa:	call   0x445a90
  447baf:	test   eax,eax
  447bb1:	jle    0x447898
  447bb7:	mov    DWORD PTR [rsp+0xa4],0x11
  447bc2:	mov    DWORD PTR [rsp+0x44],0x0
  447bca:	mov    eax,DWORD PTR [rsp+0x40]
  447bce:	mov    rcx,QWORD PTR [rsp+0xc8]
  447bd6:	sub    DWORD PTR [rsp+0xac],eax
  447bdd:	mov    edx,eax
  447bdf:	mov    DWORD PTR [rsp+0xa8],eax
  447be6:	call   0x446330
  447beb:	mov    QWORD PTR [rsp+0xc8],rax
  447bf3:	jmp    0x4473a0
  447bf8:	mov    r10d,DWORD PTR [rsp+0x58]
  447bfd:	test   r10d,r10d
  447c00:	jne    0x4477f7
  447c06:	jmp    0x447431
  447c0b:	mov    r11d,DWORD PTR [rsp+0x58]
  447c10:	test   r11d,r11d
  447c13:	je     0x4477f7
  447c19:	jmp    0x447431
  447c1e:	test   ebp,ebp
  447c20:	je     0x447d67
  447c26:	mov    r11d,DWORD PTR [rsp+0x44]
  447c2b:	test   r11d,r11d
  447c2e:	je     0x447e35
  447c34:	mov    ecx,DWORD PTR [rsp+0xa8]
  447c3b:	mov    r8,QWORD PTR [rsp+0xc8]
  447c43:	mov    edx,ecx
  447c45:	lea    rax,[r8+0x18]
  447c49:	sar    edx,0x5
  447c4c:	movsxd rdx,edx
  447c4f:	lea    rdx,[rax+rdx*4]
  447c53:	cmp    rax,rdx
  447c56:	jae    0x447c83
  447c58:	cmp    DWORD PTR [r8+0x18],0xffffffff
  447c5d:	lea    rax,[r8+0x1c]
  447c61:	je     0x447c7e
  447c63:	jmp    0x447e35
  447c68:	nop    DWORD PTR [rax+rax*1+0x0]
  447c70:	add    rax,0x4
  447c74:	cmp    DWORD PTR [rax-0x4],0xffffffff
  447c78:	jne    0x447e35
  447c7e:	cmp    rdx,rax
  447c81:	ja     0x447c70
  447c83:	and    ecx,0x1f
  447c86:	je     0x447c9a
  447c88:	or     edx,0xffffffff
  447c8b:	shl    edx,cl
  447c8d:	or     edx,DWORD PTR [rax]
  447c8f:	mov    eax,edx
  447c91:	add    eax,0x1
  447c94:	jne    0x447e35
  447c9a:	mov    eax,DWORD PTR [rsp+0x40]
  447c9e:	mov    edx,DWORD PTR [rsp+0x50]
  447ca2:	mov    DWORD PTR [r8+0x14],0x1
  447caa:	mov    DWORD PTR [r8+0x18],0x1
  447cb2:	mov    DWORD PTR [rsp+0xa8],0x1
  447cbd:	mov    DWORD PTR [rsp+0xa4],0x21
  447cc8:	lea    eax,[rax+rdx*1-0x1]
  447ccc:	mov    DWORD PTR [rsp+0xac],eax
  447cd3:	mov    eax,0x1
  447cd8:	jmp    0x44789f
  447cdd:	add    r13d,eax
  447ce0:	cmp    eax,0x1
  447ce3:	je     0x447d0c
  447ce5:	add    ecx,ebp
  447ce7:	mov    r10d,ecx
  447cea:	jmp    0x447cf5
  447cec:	lea    esi,[rsi+rsi*4]
  447cef:	add    esi,esi
  447cf1:	cmp    ebp,ecx
  447cf3:	je     0x447d0f
  447cf5:	add    ebp,0x1
  447cf8:	lea    eax,[rbp-0x1]
  447cfb:	cmp    eax,0x8
  447cfe:	jle    0x447cec
  447d00:	cmp    ebp,0x10
  447d03:	jg     0x447cf1
  447d05:	lea    edx,[rdx+rdx*4]
  447d08:	add    edx,edx
  447d0a:	jmp    0x447cf1
  447d0c:	mov    r10d,ebp
  447d0f:	cmp    r10d,0x8
  447d13:	lea    ebp,[r10+0x1]
  447d17:	jg     0x447deb
  447d1d:	mov    r8,QWORD PTR [rsp+0xc0]
  447d25:	jmp    0x446e4e
  447d2a:	mov    r9,QWORD PTR [rsp+0xc8]
  447d32:	mov    DWORD PTR [rsp+0x44],0x1
  447d3a:	mov    eax,DWORD PTR [rsp+0x50]
  447d3e:	mov    DWORD PTR [r9+0x14],0x0
  447d46:	mov    DWORD PTR [rsp+0xa4],0x50
  447d51:	mov    DWORD PTR [rsp+0xac],eax
  447d58:	jmp    0x4473a0
  447d5d:	mov    eax,0x1
  447d62:	jmp    0x446b0d
  447d67:	cmp    DWORD PTR [rsp+0x48],0x1
  447d6c:	je     0x447e4c
  447d72:	mov    DWORD PTR [rsp+0xa4],0x21
  447d7d:	mov    r10d,DWORD PTR [rsp+0x44]
  447d82:	test   r10d,r10d
  447d85:	jne    0x447d95
  447d87:	mov    edx,DWORD PTR [rsp+0x40]
  447d8b:	cmp    DWORD PTR [rsp+0x48],edx
  447d8f:	jl     0x447898
  447d95:	mov    r9,QWORD PTR [rsp+0xc8]
  447d9d:	mov    eax,DWORD PTR [r9+0x18]
  447da1:	test   al,0x1
  447da3:	je     0x4473a0
  447da9:	test   ebp,ebp
  447dab:	jne    0x447ed0
  447db1:	cmp    DWORD PTR [rsp+0x48],0x1
  447db6:	je     0x447d3a
  447db8:	sub    eax,0x1
  447dbb:	mov    DWORD PTR [rsp+0xa4],0x11
  447dc6:	mov    DWORD PTR [r9+0x18],eax
  447dca:	jmp    0x4473a0
  447dcf:	mov    rcx,QWORD PTR [rsp+0xc8]
  447dd7:	neg    edx
  447dd9:	call   0x445200
  447dde:	jmp    0x447a8e
  447de3:	xor    r8d,r8d
  447de6:	jmp    0x446d7f
  447deb:	cmp    ebp,0x10
  447dee:	jg     0x447df7
  447df0:	lea    eax,[rdx+rdx*4]
  447df3:	lea    edx,[r8+rax*2]
  447df7:	mov    r8,QWORD PTR [rsp+0xc0]
  447dff:	xor    ecx,ecx
  447e01:	jmp    0x446b4f
  447e06:	cmp    edx,0xffffffff
  447e09:	jl     0x446cc4
  447e0f:	mov    rax,QWORD PTR [rsp+0xc8]
  447e17:	mov    DWORD PTR [rsp+0xa8],0x1
  447e22:	mov    DWORD PTR [rax+0x14],0x1
  447e29:	mov    DWORD PTR [rax+0x18],0x1
  447e30:	jmp    0x446c96
  447e35:	mov    DWORD PTR [rsp+0xa4],0x11
  447e40:	jmp    0x447d7d
  447e45:	xor    ecx,ecx
  447e47:	jmp    0x446e28
  447e4c:	mov    edx,DWORD PTR [rsp+0x8c]
  447e53:	cmp    DWORD PTR [rsp+0x50],edx
  447e57:	jne    0x447f1d
  447e5d:	mov    rax,QWORD PTR [rsp+0xc8]
  447e65:	mov    DWORD PTR [rsp+0xa4],0x21
  447e70:	cmp    DWORD PTR [rax+0x14],0x1
  447e74:	jne    0x4473a0
  447e7a:	cmp    DWORD PTR [rax+0x18],0x1
  447e7e:	mov    eax,DWORD PTR [rsp+0x48]
  447e82:	cmovne eax,DWORD PTR [rsp+0x84]
  447e8a:	mov    DWORD PTR [rsp+0x84],eax
  447e91:	jmp    0x4473a0
  447e96:	mov    r8,QWORD PTR [rsp+0x1a0]
  447e9e:	mov    rdx,QWORD PTR [rsp+0x190]
  447ea6:	mov    rcx,rbx
  447ea9:	call   0x448c10
  447eae:	mov    DWORD PTR [rsp+0xa4],eax
  447eb5:	mov    rax,QWORD PTR [rsp+0x190]
  447ebd:	mov    eax,DWORD PTR [rax+0x8]
  447ec0:	add    eax,0x1
  447ec3:	jmp    0x446790
  447ec8:	xor    r8d,r8d
  447ecb:	jmp    0x447962
  447ed0:	mov    rcx,r9
  447ed3:	call   0x445e80
  447ed8:	mov    edx,DWORD PTR [rax+0x14]
  447edb:	mov    ecx,DWORD PTR [rsp+0xa8]
  447ee2:	mov    QWORD PTR [rsp+0xc8],rax
  447eea:	sub    edx,0x1
  447eed:	movsxd rdx,edx
  447ef0:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  447ef5:	mov    eax,ecx
  447ef7:	neg    eax
  447ef9:	and    eax,0x1f
  447efc:	xor    edx,0x1f
  447eff:	cmp    edx,eax
  447f01:	je     0x447f0d
  447f03:	add    ecx,0x1
  447f06:	mov    DWORD PTR [rsp+0xa8],ecx
  447f0d:	mov    DWORD PTR [rsp+0xa4],0x21
  447f18:	jmp    0x4473a0
  447f1d:	mov    DWORD PTR [rsp+0xa4],0x1
  447f28:	jmp    0x447bca
  447f2d:	nop
  447f2e:	nop
  447f2f:	nop
  447f30:	push   r13
  447f32:	push   r12
  447f34:	push   rbp
  447f35:	push   rdi
  447f36:	push   rsi
  447f37:	push   rbx
  447f38:	sub    rsp,0x28
  447f3c:	mov    eax,DWORD PTR [rdx+0x14]
  447f3f:	cmp    DWORD PTR [rcx+0x14],eax
  447f42:	mov    rsi,rcx
  447f45:	mov    rdi,rdx
  447f48:	jge    0x447f50
  447f4a:	mov    rsi,rdx
  447f4d:	mov    rdi,rcx
  447f50:	mov    ecx,DWORD PTR [rsi+0x8]
  447f53:	xor    r12d,r12d
  447f56:	call   0x445460
  447f5b:	movsxd rcx,DWORD PTR [rsi+0x14]
  447f5f:	mov    rbx,rax
  447f62:	lea    r11,[rdi+0x18]
  447f66:	lea    r8,[rbx+0x18]
  447f6a:	mov    DWORD PTR [rax+0x14],ecx
  447f6d:	movsxd rdx,DWORD PTR [rdi+0x14]
  447f71:	lea    rax,[rsi+0x18]
  447f75:	lea    rdi,[r8+rdx*4]
  447f79:	mov    rbp,rdx
  447f7c:	nop    DWORD PTR [rax+0x0]
  447f80:	mov    r10d,DWORD PTR [rax]
  447f83:	mov    r9d,DWORD PTR [r11]
  447f86:	add    r8,0x4
  447f8a:	add    rax,0x4
  447f8e:	add    r11,0x4
  447f92:	movzx  r13d,r9w
  447f96:	movzx  edx,r10w
  447f9a:	shr    r9d,0x10
  447f9e:	add    edx,r13d
  447fa1:	shr    r10d,0x10
  447fa5:	add    edx,r12d
  447fa8:	add    r10d,r9d
  447fab:	mov    r9d,edx
  447fae:	mov    WORD PTR [r8-0x4],dx
  447fb3:	and    r9d,0x10000
  447fba:	shr    r9d,0x10
  447fbe:	add    r9d,r10d
  447fc1:	mov    r12d,r9d
  447fc4:	mov    WORD PTR [r8-0x2],r9w
  447fc9:	and    r12d,0x10000
  447fd0:	shr    r12d,0x10
  447fd4:	cmp    rdi,r8
  447fd7:	ja     0x447f80
  447fd9:	mov    edx,DWORD PTR [rsi+0x14]
  447fdc:	sub    edx,ebp
  447fde:	movsxd rdx,edx
  447fe1:	lea    r11,[rdi+rdx*4]
  447fe5:	cmp    r11,r8
  447fe8:	jbe    0x44802b
  447fea:	nop    WORD PTR [rax+rax*1+0x0]
  447ff0:	mov    r9d,DWORD PTR [rax]
  447ff3:	add    r8,0x4
  447ff7:	add    rax,0x4
  447ffb:	movzx  r10d,r9w
  447fff:	shr    r9d,0x10
  448003:	add    r10d,r12d
  448006:	mov    edx,r10d
  448009:	mov    WORD PTR [r8-0x4],r10w
  44800e:	and    edx,0x10000
  448014:	shr    edx,0x10
  448017:	add    edx,r9d
  44801a:	mov    WORD PTR [r8-0x2],dx
  44801f:	mov    r12d,edx
  448022:	shr    r12d,0x10
  448026:	cmp    r11,r8
  448029:	ja     0x447ff0
  44802b:	test   r12d,r12d
  44802e:	je     0x448043
  448030:	cmp    ecx,DWORD PTR [rbx+0xc]
  448033:	je     0x448053
  448035:	lea    eax,[rcx+0x1]
  448038:	mov    DWORD PTR [rbx+0x14],eax
  44803b:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  448043:	mov    rax,rbx
  448046:	add    rsp,0x28
  44804a:	pop    rbx
  44804b:	pop    rsi
  44804c:	pop    rdi
  44804d:	pop    rbp
  44804e:	pop    r12
  448050:	pop    r13
  448052:	ret    
  448053:	mov    eax,DWORD PTR [rbx+0x8]
  448056:	lea    ecx,[rax+0x1]
  448059:	call   0x445460
  44805e:	mov    rsi,rax
  448061:	lea    rcx,[rax+0x10]
  448065:	movsxd rax,DWORD PTR [rbx+0x14]
  448069:	lea    rdx,[rbx+0x10]
  44806d:	lea    r8,[rax*4+0x8]
  448075:	call   0x449450
  44807a:	mov    rcx,rbx
  44807d:	mov    rbx,rsi
  448080:	call   0x445570
  448085:	movsxd rcx,DWORD PTR [rsi+0x14]
  448089:	jmp    0x448035
  44808b:	nop
  44808c:	nop
  44808d:	nop
  44808e:	nop
  44808f:	nop
  448090:	sub    rsp,0x58
  448094:	test   r8d,r8d
  448097:	mov    eax,r8d
  44809a:	mov    WORD PTR [rsp+0x68],dx
  44809f:	jne    0x4480b4
  4480a1:	cmp    dx,0xff
  4480a6:	ja     0x4480fa
  4480a8:	mov    BYTE PTR [rcx],dl
  4480aa:	mov    eax,0x1
  4480af:	add    rsp,0x58
  4480b3:	ret    
  4480b4:	lea    rdx,[rsp+0x4c]
  4480b9:	mov    DWORD PTR [rsp+0x28],r9d
  4480be:	mov    QWORD PTR [rsp+0x20],rcx
  4480c3:	mov    DWORD PTR [rsp+0x4c],0x0
  4480cb:	mov    QWORD PTR [rsp+0x30],0x0
  4480d4:	mov    r9d,0x1
  4480da:	mov    QWORD PTR [rsp+0x38],rdx
  4480df:	lea    r8,[rsp+0x68]
  4480e4:	xor    edx,edx
  4480e6:	mov    ecx,eax
  4480e8:	call   QWORD PTR [rip+0x1c60e]        # 0x4646fc
  4480ee:	test   eax,eax
  4480f0:	je     0x4480fa
  4480f2:	mov    edx,DWORD PTR [rsp+0x4c]
  4480f6:	test   edx,edx
  4480f8:	je     0x4480af
  4480fa:	call   0x4495c8
  4480ff:	mov    DWORD PTR [rax],0x2a
  448105:	mov    eax,0xffffffff
  44810a:	add    rsp,0x58
  44810e:	ret    
  44810f:	nop
  448110:	push   rdi
  448111:	push   rsi
  448112:	push   rbx
  448113:	sub    rsp,0x30
  448117:	lea    rax,[rsp+0x20]
  44811c:	test   rcx,rcx
  44811f:	mov    rbx,rcx
  448122:	mov    esi,edx
  448124:	cmove  rbx,rax
  448128:	mov    rax,QWORD PTR [rip+0x12b91]        # 0x45acc0
  44812f:	mov    rax,QWORD PTR [rax]
  448132:	mov    edi,DWORD PTR [rax]
  448134:	call   0x449620
  448139:	movzx  edx,si
  44813c:	mov    r8d,eax
  44813f:	mov    rcx,rbx
  448142:	mov    r9d,edi
  448145:	call   0x448090
  44814a:	cdqe   
  44814c:	add    rsp,0x30
  448150:	pop    rbx
  448151:	pop    rsi
  448152:	pop    rdi
  448153:	ret    
  448154:	xchg   ax,ax
  448156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  448160:	push   r14
  448162:	push   r13
  448164:	push   r12
  448166:	push   rbp
  448167:	push   rdi
  448168:	push   rsi
  448169:	push   rbx
  44816a:	sub    rsp,0x30
  44816e:	mov    r13,rdx
  448171:	mov    rbx,rcx
  448174:	mov    rdi,r8
  448177:	call   0x449620
  44817c:	mov    ebp,eax
  44817e:	mov    rax,QWORD PTR [rip+0x12b3b]        # 0x45acc0
  448185:	mov    r14,QWORD PTR [r13+0x0]
  448189:	mov    rax,QWORD PTR [rax]
  44818c:	test   r14,r14
  44818f:	mov    r12d,DWORD PTR [rax]
  448192:	je     0x448280
  448198:	xor    esi,esi
  44819a:	test   rbx,rbx
  44819d:	je     0x448230
  4481a3:	test   rdi,rdi
  4481a6:	jne    0x4481c8
  4481a8:	jmp    0x4481f4
  4481aa:	nop    WORD PTR [rax+rax*1+0x0]
  4481b0:	movsxd r10,eax
  4481b3:	add    rbx,r10
  4481b6:	add    rsi,r10
  4481b9:	cmp    BYTE PTR [rbx-0x1],0x0
  4481bd:	je     0x448210
  4481bf:	add    r14,0x2
  4481c3:	cmp    rdi,rsi
  4481c6:	jbe    0x4481f4
  4481c8:	movzx  edx,WORD PTR [r14]
  4481cc:	mov    r9d,r12d
  4481cf:	mov    r8d,ebp
  4481d2:	mov    rcx,rbx
  4481d5:	call   0x448090
  4481da:	test   eax,eax
  4481dc:	jg     0x4481b0
  4481de:	mov    rax,0xffffffffffffffff
  4481e5:	add    rsp,0x30
  4481e9:	pop    rbx
  4481ea:	pop    rsi
  4481eb:	pop    rdi
  4481ec:	pop    rbp
  4481ed:	pop    r12
  4481ef:	pop    r13
  4481f1:	pop    r14
  4481f3:	ret    
  4481f4:	mov    rax,rsi
  4481f7:	mov    QWORD PTR [r13+0x0],r14
  4481fb:	add    rsp,0x30
  4481ff:	pop    rbx
  448200:	pop    rsi
  448201:	pop    rdi
  448202:	pop    rbp
  448203:	pop    r12
  448205:	pop    r13
  448207:	pop    r14
  448209:	ret    
  44820a:	nop    WORD PTR [rax+rax*1+0x0]
  448210:	lea    rax,[rsi-0x1]
  448214:	mov    QWORD PTR [r13+0x0],0x0
  44821c:	add    rsp,0x30
  448220:	pop    rbx
  448221:	pop    rsi
  448222:	pop    rdi
  448223:	pop    rbp
  448224:	pop    r12
  448226:	pop    r13
  448228:	pop    r14
  44822a:	ret    
  44822b:	nop    DWORD PTR [rax+rax*1+0x0]
  448230:	test   rdi,rdi
  448233:	lea    rbx,[rsp+0x20]
  448238:	jne    0x44825b
  44823a:	jmp    0x448291
  44823c:	nop    DWORD PTR [rax+0x0]
  448240:	movsxd rdx,eax
  448243:	sub    eax,0x1
  448246:	cdqe   
  448248:	add    rsi,rdx
  44824b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  448250:	je     0x448299
  448252:	add    r14,0x2
  448256:	cmp    rdi,rsi
  448259:	jbe    0x448291
  44825b:	movzx  edx,WORD PTR [r14]
  44825f:	mov    r9d,r12d
  448262:	mov    r8d,ebp
  448265:	mov    rcx,rbx
  448268:	call   0x448090
  44826d:	test   eax,eax
  44826f:	jg     0x448240
  448271:	jmp    0x4481de
  448276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  448280:	xor    eax,eax
  448282:	add    rsp,0x30
  448286:	pop    rbx
  448287:	pop    rsi
  448288:	pop    rdi
  448289:	pop    rbp
  44828a:	pop    r12
  44828c:	pop    r13
  44828e:	pop    r14
  448290:	ret    
  448291:	mov    rax,rsi
  448294:	jmp    0x4481e5
  448299:	lea    rax,[rsi-0x1]
  44829d:	jmp    0x4481e5
  4482a2:	nop
  4482a3:	nop
  4482a4:	nop
  4482a5:	nop
  4482a6:	nop
  4482a7:	nop
  4482a8:	nop
  4482a9:	nop
  4482aa:	nop
  4482ab:	nop
  4482ac:	nop
  4482ad:	nop
  4482ae:	nop
  4482af:	nop
  4482b0:	push   r15
  4482b2:	push   r14
  4482b4:	push   r13
  4482b6:	push   r12
  4482b8:	push   rbp
  4482b9:	push   rdi
  4482ba:	push   rsi
  4482bb:	push   rbx
  4482bc:	sub    rsp,0x28
  4482c0:	mov    r14,rcx
  4482c3:	mov    r13,rdx
  4482c6:	mov    QWORD PTR [rsp+0x80],r8
  4482ce:	mov    QWORD PTR [rsp+0x88],r9
  4482d6:	call   0x449470
  4482db:	mov    rdi,QWORD PTR [rip+0x129ae]        # 0x45ac90
  4482e2:	mov    rsi,QWORD PTR [rax]
  4482e5:	cmp    BYTE PTR [rdi+0x30],0x0
  4482e9:	je     0x448710
  4482ef:	mov    rax,QWORD PTR [rsp+0x88]
  4482f7:	xor    r8d,r8d
  4482fa:	mov    QWORD PTR [rax],0x0
  448301:	mov    rbx,QWORD PTR [r14]
  448304:	movzx  edx,BYTE PTR [rbx+0x2]
  448308:	lea    rax,[rbx+0x3]
  44830c:	add    rbx,0x2
  448310:	cmp    dl,0x30
  448313:	jne    0x448329
  448315:	mov    rbx,rax
  448318:	add    rax,0x1
  44831c:	movzx  edx,BYTE PTR [rax-0x1]
  448320:	add    r8d,0x1
  448324:	cmp    dl,0x30
  448327:	je     0x448315
  448329:	cmp    BYTE PTR [rdi+rdx*1],0x0
  44832d:	jne    0x448480
  448333:	movzx  r9d,BYTE PTR [rsi]
  448337:	test   r9b,r9b
  44833a:	je     0x44897a
  448340:	movzx  edx,BYTE PTR [rbx]
  448343:	cmp    r9b,dl
  448346:	jne    0x448723
  44834c:	mov    eax,0x1
  448351:	jmp    0x448361
  448353:	add    rax,0x1
  448357:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  44835b:	jne    0x448720
  448361:	movzx  edx,BYTE PTR [rsi+rax*1]
  448365:	test   dl,dl
  448367:	jne    0x448353
  448369:	add    rax,rbx
  44836c:	movzx  ecx,BYTE PTR [rax]
  44836f:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  448374:	mov    rdx,rcx
  448377:	test   r10b,r10b
  44837a:	jne    0x448800
  448380:	cmp    dl,0x50
  448383:	je     0x448630
  448389:	cmp    dl,0x70
  44838c:	je     0x448630
  448392:	mov    rbp,rax
  448395:	mov    r11d,0x1
  44839b:	xor    r12d,r12d
  44839e:	xor    r15d,r15d
  4483a1:	xor    r10d,r10d
  4483a4:	test   r8d,r8d
  4483a7:	jne    0x4483ad
  4483a9:	lea    rax,[rbx-0x1]
  4483ad:	test   r11d,r11d
  4483b0:	mov    QWORD PTR [r14],rax
  4483b3:	jne    0x4486e0
  4483b9:	test   r10d,r10d
  4483bc:	je     0x4484f0
  4483c2:	test   r15d,r15d
  4483c5:	mov    eax,DWORD PTR [r13+0xc]
  4483c9:	jne    0x448770
  4483cf:	cmp    eax,0x2
  4483d2:	je     0x448a18
  4483d8:	cmp    eax,0x3
  4483db:	je     0x448a02
  4483e1:	cmp    eax,0x1
  4483e4:	je     0x4487e8
  4483ea:	mov    esi,DWORD PTR [r13+0x0]
  4483ee:	mov    ebx,esi
  4483f0:	and    esi,0x1f
  4483f3:	sar    ebx,0x5
  4483f6:	cmp    esi,0x1
  4483f9:	mov    edi,ebx
  4483fb:	sbb    edi,0xffffffff
  4483fe:	xor    ecx,ecx
  448400:	mov    eax,edi
  448402:	sar    eax,1
  448404:	je     0x448417
  448406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  448410:	add    ecx,0x1
  448413:	sar    eax,1
  448415:	jne    0x448410
  448417:	call   0x445460
  44841c:	mov    rcx,QWORD PTR [rsp+0x88]
  448424:	test   ebx,ebx
  448426:	mov    QWORD PTR [rcx],rax
  448429:	mov    DWORD PTR [rax+0x14],edi
  44842c:	jle    0x448b38
  448432:	lea    ecx,[rbx-0x1]
  448435:	lea    rdx,[rax+0x18]
  448439:	lea    rcx,[rax+rcx*4+0x1c]
  44843e:	xchg   ax,ax
  448440:	mov    DWORD PTR [rdx],0xffffffff
  448446:	add    rdx,0x4
  44844a:	cmp    rdx,rcx
  44844d:	jne    0x448440
  44844f:	mov    edx,ebx
  448451:	cmp    edi,ebx
  448453:	jle    0x448468
  448455:	movsxd r8,edx
  448458:	mov    edx,0x20
  44845d:	mov    ecx,edx
  44845f:	sub    ecx,esi
  448461:	sar    edx,cl
  448463:	mov    DWORD PTR [rax+r8*4+0x18],edx
  448468:	mov    eax,DWORD PTR [r13+0x4]
  44846c:	mov    rdi,QWORD PTR [rsp+0x80]
  448474:	mov    DWORD PTR [rdi],eax
  448476:	mov    eax,0x11
  44847b:	jmp    0x4486e2
  448480:	movzx  eax,BYTE PTR [rbx]
  448483:	movzx  r9d,BYTE PTR [rsi]
  448487:	add    r8d,0x1
  44848b:	xor    r11d,r11d
  44848e:	xor    r12d,r12d
  448491:	movzx  r10d,BYTE PTR [rdi+rax*1]
  448496:	mov    rdx,rax
  448499:	test   r10b,r10b
  44849c:	mov    rax,rbx
  44849f:	je     0x4484b1
  4484a1:	add    rax,0x1
  4484a5:	movzx  ecx,BYTE PTR [rax]
  4484a8:	cmp    BYTE PTR [rdi+rcx*1],0x0
  4484ac:	mov    rdx,rcx
  4484af:	jne    0x4484a1
  4484b1:	cmp    dl,r9b
  4484b4:	je     0x448730
  4484ba:	test   r12,r12
  4484bd:	movzx  edx,BYTE PTR [rax]
  4484c0:	je     0x4484c9
  4484c2:	sub    r12d,eax
  4484c5:	shl    r12d,0x2
  4484c9:	cmp    dl,0x50
  4484cc:	je     0x448639
  4484d2:	cmp    dl,0x70
  4484d5:	je     0x448639
  4484db:	test   r11d,r11d
  4484de:	mov    QWORD PTR [r14],rax
  4484e1:	mov    rbp,rax
  4484e4:	jne    0x4486e0
  4484ea:	nop    WORD PTR [rax+rax*1+0x0]
  4484f0:	mov    rax,rbp
  4484f3:	xor    ecx,ecx
  4484f5:	sub    rax,rbx
  4484f8:	sub    eax,0x1
  4484fb:	cmp    eax,0x7
  4484fe:	jle    0x44850a
  448500:	sar    eax,1
  448502:	add    ecx,0x1
  448505:	cmp    eax,0x7
  448508:	jg     0x448500
  44850a:	call   0x445460
  44850f:	cmp    BYTE PTR [rsi+0x1],0x0
  448513:	mov    r14,rax
  448516:	lea    r15,[rax+0x18]
  44851a:	je     0x448a2e
  448520:	mov    edx,0x1
  448525:	jmp    0x448533
  448527:	nop    WORD PTR [rax+rax*1+0x0]
  448530:	mov    rdx,rax
  448533:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  448538:	lea    rax,[rdx+0x1]
  44853c:	jne    0x448530
  44853e:	cmp    rbx,rbp
  448541:	jae    0x448a35
  448547:	add    rsi,rdx
  44854a:	mov    rax,r15
  44854d:	xor    r9d,r9d
  448550:	xor    r8d,r8d
  448553:	jmp    0x448581
  448555:	cmp    r8d,0x20
  448559:	je     0x4486f3
  44855f:	movzx  r10d,cl
  448563:	mov    ecx,r8d
  448566:	add    r8d,0x4
  44856a:	movzx  r10d,BYTE PTR [rdi+r10*1]
  44856f:	mov    rbp,r11
  448572:	and    r10d,0xf
  448576:	shl    r10d,cl
  448579:	or     r9d,r10d
  44857c:	cmp    rbx,rbp
  44857f:	jae    0x448598
  448581:	movzx  ecx,BYTE PTR [rbp-0x1]
  448585:	lea    r11,[rbp-0x1]
  448589:	cmp    cl,BYTE PTR [rsi]
  44858b:	jne    0x448555
  44858d:	sub    r11,rdx
  448590:	mov    rbp,r11
  448593:	cmp    rbx,rbp
  448596:	jb     0x448581
  448598:	bsr    edx,r9d
  44859c:	xor    edx,0x1f
  44859f:	mov    DWORD PTR [rax],r9d
  4485a2:	add    rax,0x4
  4485a6:	mov    esi,DWORD PTR [r13+0x0]
  4485aa:	sub    rax,r15
  4485ad:	sar    rax,0x2
  4485b1:	mov    DWORD PTR [r14+0x14],eax
  4485b5:	shl    eax,0x5
  4485b8:	sub    eax,edx
  4485ba:	cmp    eax,esi
  4485bc:	jg     0x448868
  4485c2:	mov    edi,0x0
  4485c7:	jl     0x44883e
  4485cd:	cmp    r12d,DWORD PTR [r13+0x8]
  4485d1:	jg     0x4487e0
  4485d7:	mov    eax,DWORD PTR [r13+0x4]
  4485db:	cmp    r12d,eax
  4485de:	jge    0x4488c9
  4485e4:	mov    ebx,eax
  4485e6:	sub    ebx,r12d
  4485e9:	cmp    esi,ebx
  4485eb:	jg     0x448927
  4485f1:	mov    edx,DWORD PTR [r13+0xc]
  4485f5:	cmp    edx,0x2
  4485f8:	je     0x448b02
  4485fe:	cmp    edx,0x3
  448601:	je     0x448adf
  448607:	cmp    edx,0x1
  44860a:	je     0x448b12
  448610:	mov    rcx,r14
  448613:	call   0x445570
  448618:	call   0x4495c8
  44861d:	mov    DWORD PTR [rax],0x22
  448623:	mov    eax,0x50
  448628:	jmp    0x4486e2
  44862d:	nop    DWORD PTR [rax]
  448630:	xor    r12d,r12d
  448633:	mov    r11d,0x1
  448639:	movzx  edx,BYTE PTR [rax+0x1]
  44863d:	cmp    dl,0x2b
  448640:	je     0x448860
  448646:	cmp    dl,0x2d
  448649:	je     0x448741
  44864f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  448653:	xor    r15d,r15d
  448656:	lea    r9,[rax+0x1]
  44865a:	lea    ecx,[rdx-0x1]
  44865d:	cmp    cl,0x18
  448660:	ja     0x44875f
  448666:	lea    rcx,[r9+0x1]
  44866a:	movzx  r9d,BYTE PTR [r9+0x1]
  44866f:	sub    edx,0x10
  448672:	xor    r10d,r10d
  448675:	movzx  ebp,BYTE PTR [rdi+r9*1]
  44867a:	mov    r9d,ebp
  44867d:	sub    r9d,0x1
  448681:	cmp    r9b,0x18
  448685:	ja     0x4486c1
  448687:	nop    WORD PTR [rax+rax*1+0x0]
  448690:	test   edx,0xf8000000
  448696:	mov    r9d,0x1
  44869c:	lea    edx,[rdx+rdx*4]
  44869f:	cmovne r10d,r9d
  4486a3:	add    rcx,0x1
  4486a7:	movzx  r9d,BYTE PTR [rcx]
  4486ab:	lea    edx,[rbp+rdx*2-0x10]
  4486af:	movzx  ebp,BYTE PTR [rdi+r9*1]
  4486b4:	mov    r9d,ebp
  4486b7:	sub    r9d,0x1
  4486bb:	cmp    r9b,0x18
  4486bf:	jbe    0x448690
  4486c1:	mov    r9d,r15d
  4486c4:	mov    rbp,rax
  4486c7:	mov    rax,rcx
  4486ca:	neg    r9d
  4486cd:	xor    edx,r9d
  4486d0:	add    edx,r15d
  4486d3:	add    r12d,edx
  4486d6:	jmp    0x4483a4
  4486db:	nop    DWORD PTR [rax+rax*1+0x0]
  4486e0:	xor    eax,eax
  4486e2:	add    rsp,0x28
  4486e6:	pop    rbx
  4486e7:	pop    rsi
  4486e8:	pop    rdi
  4486e9:	pop    rbp
  4486ea:	pop    r12
  4486ec:	pop    r13
  4486ee:	pop    r14
  4486f0:	pop    r15
  4486f2:	ret    
  4486f3:	mov    DWORD PTR [rax],r9d
  4486f6:	mov    r8d,0x4
  4486fc:	movzx  r10d,BYTE PTR [rbp-0x1]
  448701:	add    rax,0x4
  448705:	xor    r9d,r9d
  448708:	xor    ecx,ecx
  44870a:	jmp    0x44856a
  44870f:	nop
  448710:	call   0x448b80
  448715:	jmp    0x4482ef
  44871a:	nop    WORD PTR [rax+rax*1+0x0]
  448720:	mov    edx,r9d
  448723:	mov    rax,rbx
  448726:	jmp    0x448380
  44872b:	nop    DWORD PTR [rax+rax*1+0x0]
  448730:	test   r12,r12
  448733:	je     0x448a45
  448739:	movzx  edx,BYTE PTR [rax]
  44873c:	jmp    0x4484c2
  448741:	mov    r15d,0x1
  448747:	movzx  edx,BYTE PTR [rax+0x2]
  44874b:	lea    r9,[rax+0x2]
  44874f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  448753:	lea    ecx,[rdx-0x1]
  448756:	cmp    cl,0x18
  448759:	jbe    0x448666
  44875f:	mov    rbp,rax
  448762:	xor    r10d,r10d
  448765:	jmp    0x4483a4
  44876a:	nop    WORD PTR [rax+rax*1+0x0]
  448770:	cmp    eax,0x2
  448773:	je     0x448911
  448779:	cmp    eax,0x3
  44877c:	jne    0x448618
  448782:	mov    r10d,DWORD PTR [rsp+0x90]
  44878a:	test   r10d,r10d
  44878d:	je     0x448618
  448793:	xor    ecx,ecx
  448795:	call   0x445460
  44879a:	mov    r14,rax
  44879d:	mov    DWORD PTR [rax+0x14],0x1
  4487a4:	mov    DWORD PTR [rax+0x18],0x1
  4487ab:	mov    eax,DWORD PTR [r13+0x4]
  4487af:	mov    rdi,QWORD PTR [rsp+0x88]
  4487b7:	mov    QWORD PTR [rdi],r14
  4487ba:	mov    rdi,QWORD PTR [rsp+0x80]
  4487c2:	mov    DWORD PTR [rdi],eax
  4487c4:	call   0x4495c8
  4487c9:	mov    DWORD PTR [rax],0x22
  4487cf:	mov    eax,0x62
  4487d4:	jmp    0x4486e2
  4487d9:	nop    DWORD PTR [rax+0x0]
  4487e0:	mov    rcx,r14
  4487e3:	call   0x445570
  4487e8:	call   0x4495c8
  4487ed:	mov    DWORD PTR [rax],0x22
  4487f3:	mov    eax,0xa3
  4487f8:	jmp    0x4486e2
  4487fd:	nop    DWORD PTR [rax]
  448800:	cmp    cl,0x30
  448803:	mov    rbx,rax
  448806:	jne    0x448826
  448808:	nop    DWORD PTR [rax+rax*1+0x0]
  448810:	add    rbx,0x1
  448814:	movzx  ecx,BYTE PTR [rbx]
  448817:	cmp    cl,0x30
  44881a:	je     0x448810
  44881c:	movzx  edx,cl
  44881f:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  448824:	mov    edx,ecx
  448826:	xor    r11d,r11d
  448829:	test   r10b,r10b
  44882c:	mov    r12,rax
  44882f:	sete   r11b
  448833:	mov    r8d,0x1
  448839:	jmp    0x448499
  44883e:	mov    ebx,esi
  448840:	mov    rcx,r14
  448843:	sub    ebx,eax
  448845:	mov    edx,ebx
  448847:	sub    r12d,ebx
  44884a:	call   0x445970
  44884f:	mov    r14,rax
  448852:	lea    r15,[rax+0x18]
  448856:	jmp    0x4485cd
  44885b:	nop    DWORD PTR [rax+rax*1+0x0]
  448860:	xor    r15d,r15d
  448863:	jmp    0x448747
  448868:	mov    ebx,eax
  44886a:	mov    rcx,r14
  44886d:	xor    edi,edi
  44886f:	sub    ebx,esi
  448871:	mov    edx,ebx
  448873:	call   0x449250
  448878:	test   eax,eax
  44887a:	je     0x4488b7
  44887c:	lea    ecx,[rbx-0x1]
  44887f:	mov    r8d,0x1
  448885:	mov    dil,0x1
  448888:	mov    eax,ecx
  44888a:	shl    r8d,cl
  44888d:	sar    eax,0x5
  448890:	cdqe   
  448892:	test   DWORD PTR [r15+rax*4],r8d
  448896:	je     0x4488b7
  448898:	test   ecx,ecx
  44889a:	jle    0x448aaf
  4488a0:	mov    edx,ecx
  4488a2:	mov    rcx,r14
  4488a5:	call   0x449250
  4488aa:	test   eax,eax
  4488ac:	je     0x448aaf
  4488b2:	mov    edi,0x3
  4488b7:	mov    edx,ebx
  4488b9:	mov    rcx,r14
  4488bc:	add    r12d,ebx
  4488bf:	call   0x445200
  4488c4:	jmp    0x4485cd
  4488c9:	mov    ebx,0x1
  4488ce:	test   edi,edi
  4488d0:	je     0x4488f4
  4488d2:	mov    eax,DWORD PTR [r13+0xc]
  4488d6:	cmp    eax,0x2
  4488d9:	je     0x448981
  4488df:	cmp    eax,0x3
  4488e2:	je     0x448994
  4488e8:	cmp    eax,0x1
  4488eb:	je     0x448ab9
  4488f1:	or     ebx,0x10
  4488f4:	mov    rax,QWORD PTR [rsp+0x88]
  4488fc:	mov    QWORD PTR [rax],r14
  4488ff:	mov    rax,QWORD PTR [rsp+0x80]
  448907:	mov    DWORD PTR [rax],r12d
  44890a:	mov    eax,ebx
  44890c:	jmp    0x4486e2
  448911:	mov    r11d,DWORD PTR [rsp+0x90]
  448919:	test   r11d,r11d
  44891c:	jne    0x448618
  448922:	jmp    0x448793
  448927:	test   edi,edi
  448929:	lea    ebp,[rbx-0x1]
  44892c:	jne    0x448aa5
  448932:	test   ebp,ebp
  448934:	jle    0x448942
  448936:	mov    edx,ebp
  448938:	mov    rcx,r14
  44893b:	call   0x449250
  448940:	mov    edi,eax
  448942:	mov    eax,ebp
  448944:	mov    ecx,ebp
  448946:	mov    edx,edi
  448948:	sar    eax,0x5
  44894b:	mov    r8d,0x1
  448951:	or     edx,0x2
  448954:	cdqe   
  448956:	shl    r8d,cl
  448959:	mov    rcx,r14
  44895c:	test   DWORD PTR [r15+rax*4],r8d
  448960:	cmovne edi,edx
  448963:	mov    edx,ebx
  448965:	sub    esi,ebx
  448967:	call   0x445200
  44896c:	mov    ebx,0x2
  448971:	mov    r12d,DWORD PTR [r13+0x4]
  448975:	jmp    0x4488ce
  44897a:	xor    eax,eax
  44897c:	jmp    0x448369
  448981:	mov    eax,0x1
  448986:	sub    eax,DWORD PTR [rsp+0x90]
  44898d:	mov    DWORD PTR [rsp+0x90],eax
  448994:	mov    eax,DWORD PTR [rsp+0x90]
  44899b:	test   eax,eax
  44899d:	je     0x4488f1
  4489a3:	mov    rcx,r14
  4489a6:	movsxd rdi,DWORD PTR [r14+0x14]
  4489aa:	call   0x445e80
  4489af:	cmp    ebx,0x2
  4489b2:	mov    r14,rax
  4489b5:	lea    r8,[rax+0x18]
  4489b9:	je     0x448b3f
  4489bf:	cmp    edi,DWORD PTR [rax+0x14]
  4489c2:	jl     0x4489dd
  4489c4:	and    esi,0x1f
  4489c7:	je     0x4489f8
  4489c9:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  4489cf:	mov    edx,0x20
  4489d4:	sub    edx,esi
  4489d6:	xor    eax,0x1f
  4489d9:	cmp    edx,eax
  4489db:	jle    0x4489f8
  4489dd:	mov    edx,0x1
  4489e2:	mov    rcx,r14
  4489e5:	add    r12d,0x1
  4489e9:	call   0x445200
  4489ee:	cmp    r12d,DWORD PTR [r13+0x8]
  4489f2:	jg     0x4487e0
  4489f8:	mov    ebx,0x21
  4489fd:	jmp    0x4488f4
  448a02:	mov    r8d,DWORD PTR [rsp+0x90]
  448a0a:	test   r8d,r8d
  448a0d:	jne    0x4487e8
  448a13:	jmp    0x4483ea
  448a18:	mov    r9d,DWORD PTR [rsp+0x90]
  448a20:	test   r9d,r9d
  448a23:	je     0x4487e8
  448a29:	jmp    0x4483ea
  448a2e:	xor    edx,edx
  448a30:	jmp    0x44853e
  448a35:	mov    rax,r15
  448a38:	mov    edx,0x20
  448a3d:	xor    r9d,r9d
  448a40:	jmp    0x44859f
  448a45:	movzx  edx,BYTE PTR [rsi+0x1]
  448a49:	test   dl,dl
  448a4b:	je     0x448b74
  448a51:	cmp    dl,BYTE PTR [rax+0x1]
  448a54:	jne    0x448ad4
  448a56:	mov    r12d,0x2
  448a5c:	jmp    0x448a6b
  448a5e:	xchg   ax,ax
  448a60:	add    r12,0x1
  448a64:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  448a69:	jne    0x448ad4
  448a6b:	movzx  edx,BYTE PTR [rsi+r12*1]
  448a70:	test   dl,dl
  448a72:	jne    0x448a60
  448a74:	add    r12,rax
  448a77:	movzx  eax,BYTE PTR [r12]
  448a7c:	cmp    BYTE PTR [rdi+rax*1],0x0
  448a80:	mov    rdx,rax
  448a83:	mov    rax,r12
  448a86:	je     0x4484c2
  448a8c:	nop    DWORD PTR [rax+0x0]
  448a90:	add    rax,0x1
  448a94:	movzx  ecx,BYTE PTR [rax]
  448a97:	cmp    BYTE PTR [rdi+rcx*1],0x0
  448a9b:	mov    rdx,rcx
  448a9e:	jne    0x448a90
  448aa0:	jmp    0x4484c2
  448aa5:	mov    edi,0x1
  448aaa:	jmp    0x448942
  448aaf:	mov    edi,0x2
  448ab4:	jmp    0x4488b7
  448ab9:	test   dil,0x2
  448abd:	je     0x4488f1
  448ac3:	or     edi,DWORD PTR [r15]
  448ac6:	and    edi,0x1
  448ac9:	jne    0x4489a3
  448acf:	jmp    0x4488f1
  448ad4:	movzx  edx,BYTE PTR [rax]
  448ad7:	xor    r12d,r12d
  448ada:	jmp    0x4484c9
  448adf:	mov    edx,DWORD PTR [rsp+0x90]
  448ae6:	test   edx,edx
  448ae8:	je     0x448610
  448aee:	mov    DWORD PTR [r14+0x14],0x1
  448af6:	mov    DWORD PTR [r15],0x1
  448afd:	jmp    0x4487af
  448b02:	mov    ecx,DWORD PTR [rsp+0x90]
  448b09:	test   ecx,ecx
  448b0b:	je     0x448aee
  448b0d:	jmp    0x448610
  448b12:	cmp    ebx,esi
  448b14:	jne    0x448610
  448b1a:	cmp    esi,0x1
  448b1d:	jle    0x448aee
  448b1f:	lea    edx,[rsi-0x1]
  448b22:	mov    rcx,r14
  448b25:	call   0x449250
  448b2a:	test   eax,eax
  448b2c:	je     0x448610
  448b32:	mov    eax,DWORD PTR [r13+0x4]
  448b36:	jmp    0x448aee
  448b38:	xor    edx,edx
  448b3a:	jmp    0x448451
  448b3f:	mov    eax,DWORD PTR [r13+0x0]
  448b43:	mov    bl,0x22
  448b45:	sub    eax,0x1
  448b48:	cmp    eax,esi
  448b4a:	jne    0x4488f4
  448b50:	mov    edx,esi
  448b52:	mov    eax,0x1
  448b57:	mov    ecx,esi
  448b59:	sar    edx,0x5
  448b5c:	shl    eax,cl
  448b5e:	movsxd rdx,edx
  448b61:	and    eax,DWORD PTR [r8+rdx*4]
  448b65:	cmp    eax,0x1
  448b68:	sbb    ebx,ebx
  448b6a:	not    ebx
  448b6c:	add    ebx,0x22
  448b6f:	jmp    0x4488f4
  448b74:	mov    r12d,0x1
  448b7a:	jmp    0x448a74
  448b7f:	nop
  448b80:	lea    r8,[rip+0x12047]        # 0x45abce
  448b87:	lea    rdx,[rip+0x1b0f2]        # 0x463c80
  448b8e:	mov    ecx,0x10
  448b93:	mov    eax,0x30
  448b98:	nop    DWORD PTR [rax+rax*1+0x0]
  448ba0:	mov    BYTE PTR [rdx+rax*1],cl
  448ba3:	movzx  eax,BYTE PTR [r8+0x1]
  448ba8:	add    ecx,0x1
  448bab:	add    r8,0x1
  448baf:	test   al,al
  448bb1:	jne    0x448ba0
  448bb3:	lea    r8,[rip+0x1200d]        # 0x45abc7
  448bba:	mov    ecx,0x1a
  448bbf:	mov    eax,0x61
  448bc4:	mov    BYTE PTR [rdx+rax*1],cl
  448bc7:	movzx  eax,BYTE PTR [r8+0x1]
  448bcc:	add    ecx,0x1
  448bcf:	add    r8,0x1
  448bd3:	test   al,al
  448bd5:	jne    0x448bc4
  448bd7:	lea    r8,[rip+0x11fe2]        # 0x45abc0
  448bde:	mov    ecx,0x1a
  448be3:	mov    eax,0x41
  448be8:	nop    DWORD PTR [rax+rax*1+0x0]
  448bf0:	mov    BYTE PTR [rdx+rax*1],cl
  448bf3:	movzx  eax,BYTE PTR [r8+0x1]
  448bf8:	add    ecx,0x1
  448bfb:	add    r8,0x1
  448bff:	test   al,al
  448c01:	jne    0x448bf0
  448c03:	ret    
  448c04:	nop
  448c05:	nop
  448c06:	nop
  448c07:	nop
  448c08:	nop
  448c09:	nop
  448c0a:	nop
  448c0b:	nop
  448c0c:	nop
  448c0d:	nop
  448c0e:	nop
  448c0f:	nop
  448c10:	push   r15
  448c12:	push   r14
  448c14:	push   r13
  448c16:	push   r12
  448c18:	push   rbp
  448c19:	push   rdi
  448c1a:	push   rsi
  448c1b:	push   rbx
  448c1c:	sub    rsp,0x48
  448c20:	mov    r14,QWORD PTR [rip+0x12069]        # 0x45ac90
  448c27:	mov    QWORD PTR [rsp+0x90],rcx
  448c2f:	cmp    BYTE PTR [r14+0x30],0x0
  448c34:	je     0x448f06
  448c3a:	mov    eax,DWORD PTR [rdx]
  448c3c:	mov    edx,eax
  448c3e:	sar    edx,0x5
  448c41:	and    eax,0x1f
  448c44:	movsxd rdx,edx
  448c47:	mov    DWORD PTR [rsp+0x3c],eax
  448c4b:	mov    rax,QWORD PTR [rsp+0x90]
  448c53:	lea    rdi,[r8+rdx*4]
  448c57:	lea    rdx,[rdi+0x4]
  448c5b:	mov    rax,QWORD PTR [rax]
  448c5e:	cmove  rdx,rdi
  448c62:	mov    QWORD PTR [rsp+0x30],rdx
  448c67:	lea    rsi,[rdx-0x4]
  448c6b:	mov    DWORD PTR [rdx-0x4],0x0
  448c72:	jmp    0x448c78
  448c74:	add    rax,0x1
  448c78:	movzx  edx,BYTE PTR [rax+0x1]
  448c7c:	mov    ecx,edx
  448c7e:	sub    edx,0x1
  448c81:	cmp    edx,0x1f
  448c84:	jbe    0x448c74
  448c86:	cmp    cl,0x30
  448c89:	je     0x448f24
  448c8f:	movzx  edx,BYTE PTR [rax+0x1]
  448c93:	xor    r9d,r9d
  448c96:	xor    r15d,r15d
  448c99:	xor    r12d,r12d
  448c9c:	test   edx,edx
  448c9e:	mov    rbp,rsi
  448ca1:	mov    r11,rsi
  448ca4:	lea    rbx,[rax+0x1]
  448ca8:	je     0x448d50
  448cae:	xchg   ax,ax
  448cb0:	mov    ecx,edx
  448cb2:	movzx  ecx,BYTE PTR [r14+rcx*1]
  448cb7:	test   cl,cl
  448cb9:	jne    0x448e24
  448cbf:	cmp    edx,0x20
  448cc2:	ja     0x448ed5
  448cc8:	cmp    r12d,r15d
  448ccb:	jle    0x448e65
  448cd1:	cmp    r9d,0x7
  448cd5:	jg     0x448d2a
  448cd7:	cmp    r11,rbp
  448cda:	jae    0x448d2a
  448cdc:	mov    edi,0x8
  448ce1:	mov    edx,DWORD PTR [r11]
  448ce4:	mov    r13d,0x20
  448cea:	sub    edi,r9d
  448ced:	mov    QWORD PTR [rsp+0x28],rax
  448cf2:	mov    r9,r11
  448cf5:	shl    edi,0x2
  448cf8:	sub    r13d,edi
  448cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  448d00:	mov    r10d,DWORD PTR [r9+0x4]
  448d04:	mov    ecx,r13d
  448d07:	add    r9,0x4
  448d0b:	mov    eax,r10d
  448d0e:	shl    eax,cl
  448d10:	mov    ecx,edi
  448d12:	or     edx,eax
  448d14:	mov    DWORD PTR [r9-0x4],edx
  448d18:	mov    edx,r10d
  448d1b:	shr    edx,cl
  448d1d:	mov    DWORD PTR [r9],edx
  448d20:	cmp    rbp,r9
  448d23:	ja     0x448d00
  448d25:	mov    rax,QWORD PTR [rsp+0x28]
  448d2a:	cmp    r11,r8
  448d2d:	ja     0x448e50
  448d33:	mov    rax,rbx
  448d36:	mov    r9d,0x8
  448d3c:	nop    DWORD PTR [rax+0x0]
  448d40:	movzx  edx,BYTE PTR [rax+0x1]
  448d44:	lea    rbx,[rax+0x1]
  448d48:	test   edx,edx
  448d4a:	jne    0x448cb0
  448d50:	test   r12d,r12d
  448d53:	mov    eax,0x4
  448d58:	je     0x448e13
  448d5e:	mov    r10,r11
  448d61:	cmp    r9d,0x7
  448d65:	jg     0x448db3
  448d67:	cmp    rbp,r11
  448d6a:	jbe    0x448db3
  448d6c:	mov    edi,0x8
  448d71:	mov    eax,DWORD PTR [r11]
  448d74:	mov    r12d,0x20
  448d7a:	sub    edi,r9d
  448d7d:	mov    r9,r11
  448d80:	shl    edi,0x2
  448d83:	sub    r12d,edi
  448d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  448d90:	mov    ebx,DWORD PTR [r9+0x4]
  448d94:	mov    ecx,r12d
  448d97:	add    r9,0x4
  448d9b:	mov    edx,ebx
  448d9d:	shl    edx,cl
  448d9f:	mov    ecx,edi
  448da1:	or     eax,edx
  448da3:	mov    DWORD PTR [r9-0x4],eax
  448da7:	mov    eax,ebx
  448da9:	shr    eax,cl
  448dab:	mov    DWORD PTR [r9],eax
  448dae:	cmp    rbp,r9
  448db1:	ja     0x448d90
  448db3:	cmp    r8,r11
  448db6:	jae    0x448f54
  448dbc:	mov    rax,r8
  448dbf:	nop
  448dc0:	add    r10,0x4
  448dc4:	mov    edx,DWORD PTR [r10-0x4]
  448dc8:	add    rax,0x4
  448dcc:	cmp    rsi,r10
  448dcf:	mov    DWORD PTR [rax-0x4],edx
  448dd2:	jae    0x448dc0
  448dd4:	add    rax,0x4
  448dd8:	mov    DWORD PTR [rax-0x4],0x0
  448ddf:	cmp    rsi,rax
  448de2:	jae    0x448dd4
  448de4:	mov    rax,QWORD PTR [rsp+0x30]
  448de9:	mov    eax,DWORD PTR [rax-0x4]
  448dec:	test   eax,eax
  448dee:	je     0x448e03
  448df0:	jmp    0x448f4a
  448df5:	sub    rsi,0x4
  448df9:	mov    eax,DWORD PTR [rsi]
  448dfb:	test   eax,eax
  448dfd:	jne    0x448f4a
  448e03:	cmp    r8,rsi
  448e06:	jne    0x448df5
  448e08:	mov    DWORD PTR [rsi],0x1
  448e0e:	mov    eax,0x5
  448e13:	add    rsp,0x48
  448e17:	pop    rbx
  448e18:	pop    rsi
  448e19:	pop    rdi
  448e1a:	pop    rbp
  448e1b:	pop    r12
  448e1d:	pop    r13
  448e1f:	pop    r14
  448e21:	pop    r15
  448e23:	ret    
  448e24:	add    r9d,0x1
  448e28:	add    r12d,0x1
  448e2c:	cmp    r9d,0x8
  448e30:	jg     0x448eb0
  448e32:	mov    eax,DWORD PTR [r11]
  448e35:	shl    eax,0x4
  448e38:	and    ecx,0xf
  448e3b:	or     ecx,eax
  448e3d:	mov    rax,rbx
  448e40:	mov    DWORD PTR [r11],ecx
  448e43:	jmp    0x448d40
  448e48:	nop    DWORD PTR [rax+rax*1+0x0]
  448e50:	lea    rbp,[r11-0x4]
  448e54:	mov    DWORD PTR [r11-0x4],0x0
  448e5c:	mov    r15d,r12d
  448e5f:	xor    r9d,r9d
  448e62:	mov    r11,rbp
  448e65:	movzx  edx,BYTE PTR [rax+0x2]
  448e69:	mov    rax,rbx
  448e6c:	cmp    dl,0x20
  448e6f:	ja     0x448e7e
  448e71:	add    rax,0x1
  448e75:	movzx  edx,BYTE PTR [rax+0x1]
  448e79:	cmp    dl,0x20
  448e7c:	jbe    0x448e71
  448e7e:	cmp    dl,0x30
  448e81:	jne    0x448d40
  448e87:	movzx  edx,BYTE PTR [rax+0x2]
  448e8b:	and    edx,0xffffffdf
  448e8e:	cmp    dl,0x58
  448e91:	jne    0x448d40
  448e97:	cmp    BYTE PTR [rax+0x3],0x21
  448e9b:	lea    rdx,[rax+0x2]
  448e9f:	cmovae rax,rdx
  448ea3:	jmp    0x448d40
  448ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  448eb0:	cmp    r11,r8
  448eb3:	mov    rax,rbx
  448eb6:	jbe    0x448d40
  448ebc:	mov    DWORD PTR [r11-0x4],0x0
  448ec4:	xor    eax,eax
  448ec6:	sub    r11,0x4
  448eca:	mov    r9d,0x1
  448ed0:	jmp    0x448e38
  448ed5:	cmp    edx,0x29
  448ed8:	mov    rcx,rbx
  448edb:	sete   dl
  448ede:	test   r12d,r12d
  448ee1:	je     0x448f80
  448ee7:	test   dl,dl
  448ee9:	je     0x448f84
  448eef:	mov    rbx,QWORD PTR [rsp+0x90]
  448ef7:	add    rax,0x2
  448efb:	mov    r10,r11
  448efe:	mov    QWORD PTR [rbx],rax
  448f01:	jmp    0x448d61
  448f06:	mov    QWORD PTR [rsp+0x30],r8
  448f0b:	mov    QWORD PTR [rsp+0x28],rdx
  448f10:	call   0x448b80
  448f15:	mov    r8,QWORD PTR [rsp+0x30]
  448f1a:	mov    rdx,QWORD PTR [rsp+0x28]
  448f1f:	jmp    0x448c3a
  448f24:	movzx  edx,BYTE PTR [rax+0x2]
  448f28:	and    edx,0xffffffdf
  448f2b:	cmp    dl,0x58
  448f2e:	jne    0x448c8f
  448f34:	movzx  edx,BYTE PTR [rax+0x3]
  448f38:	cmp    dl,0x20
  448f3b:	jbe    0x448c8f
  448f41:	add    rax,0x2
  448f45:	jmp    0x448c93
  448f4a:	mov    eax,0x5
  448f4f:	jmp    0x448e13
  448f54:	mov    edx,DWORD PTR [rsp+0x3c]
  448f58:	test   edx,edx
  448f5a:	je     0x448de4
  448f60:	mov    ecx,0x20
  448f65:	sub    ecx,DWORD PTR [rsp+0x3c]
  448f69:	mov    rbx,QWORD PTR [rsp+0x30]
  448f6e:	mov    eax,0xffffffff
  448f73:	shr    eax,cl
  448f75:	and    eax,DWORD PTR [rbx-0x4]
  448f78:	mov    DWORD PTR [rbx-0x4],eax
  448f7b:	jmp    0x448dec
  448f80:	test   dl,dl
  448f82:	jne    0x448fa2
  448f84:	movsx  eax,BYTE PTR [rbx+0x1]
  448f88:	lea    rcx,[rbx+0x1]
  448f8c:	test   eax,eax
  448f8e:	jne    0x448f9d
  448f90:	jmp    0x448fbb
  448f92:	add    rcx,0x1
  448f96:	movsx  eax,BYTE PTR [rcx]
  448f99:	test   eax,eax
  448f9b:	je     0x448fbb
  448f9d:	cmp    eax,0x29
  448fa0:	jne    0x448f92
  448fa2:	mov    rax,QWORD PTR [rsp+0x90]
  448faa:	add    rcx,0x1
  448fae:	mov    QWORD PTR [rax],rcx
  448fb1:	mov    eax,0x4
  448fb6:	jmp    0x448e13
  448fbb:	mov    al,0x4
  448fbd:	jmp    0x448e13
  448fc2:	nop
  448fc3:	nop
  448fc4:	nop
  448fc5:	nop
  448fc6:	nop
  448fc7:	nop
  448fc8:	nop
  448fc9:	nop
  448fca:	nop
  448fcb:	nop
  448fcc:	nop
  448fcd:	nop
  448fce:	nop
  448fcf:	nop
  448fd0:	push   r13
  448fd2:	push   r12
  448fd4:	push   rbp
  448fd5:	push   rdi
  448fd6:	push   rsi
  448fd7:	push   rbx
  448fd8:	sub    rsp,0x28
  448fdc:	mov    rsi,rcx
  448fdf:	lea    ecx,[r8+0x8]
  448fe3:	mov    ebp,edx
  448fe5:	mov    edx,0x38e38e39
  448fea:	mov    edi,r8d
  448fed:	mov    ebx,r9d
  448ff0:	mov    eax,ecx
  448ff2:	sar    ecx,0x1f
  448ff5:	imul   edx
  448ff7:	sar    edx,1
  448ff9:	sub    edx,ecx
  448ffb:	cmp    edx,0x1
  448ffe:	jle    0x4490c4
  449004:	mov    eax,0x1
  449009:	xor    ecx,ecx
  44900b:	nop    DWORD PTR [rax+rax*1+0x0]
  449010:	add    eax,eax
  449012:	add    ecx,0x1
  449015:	cmp    edx,eax
  449017:	jg     0x449010
  449019:	call   0x445460
  44901e:	cmp    ebp,0x9
  449021:	mov    DWORD PTR [rax+0x18],ebx
  449024:	mov    DWORD PTR [rax+0x14],0x1
  44902b:	jle    0x4490b0
  449031:	lea    rbx,[rsi+0x9]
  449035:	lea    r12d,[rbp-0xa]
  449039:	lea    r13,[rsi+r12*1+0xa]
  44903e:	mov    rsi,rbx
  449041:	add    rsi,0x1
  449045:	movsx  r8d,BYTE PTR [rsi-0x1]
  44904a:	mov    edx,0xa
  44904f:	mov    rcx,rax
  449052:	sub    r8d,0x30
  449056:	call   0x4455e0
  44905b:	cmp    rsi,r13
  44905e:	jne    0x449041
  449060:	movsxd rdx,DWORD PTR [rsp+0x80]
  449068:	lea    r9,[r12+rdx*1+0x1]
  44906d:	add    rbx,r9
  449070:	cmp    edi,ebp
  449072:	jle    0x44909f
  449074:	sub    edi,0x1
  449077:	sub    edi,ebp
  449079:	lea    rsi,[rbx+rdi*1+0x1]
  44907e:	xchg   ax,ax
  449080:	add    rbx,0x1
  449084:	movsx  r8d,BYTE PTR [rbx-0x1]
  449089:	mov    edx,0xa
  44908e:	mov    rcx,rax
  449091:	sub    r8d,0x30
  449095:	call   0x4455e0
  44909a:	cmp    rbx,rsi
  44909d:	jne    0x449080
  44909f:	add    rsp,0x28
  4490a3:	pop    rbx
  4490a4:	pop    rsi
  4490a5:	pop    rdi
  4490a6:	pop    rbp
  4490a7:	pop    r12
  4490a9:	pop    r13
  4490ab:	ret    
  4490ac:	nop    DWORD PTR [rax+0x0]
  4490b0:	movsxd rdx,DWORD PTR [rsp+0x80]
  4490b8:	mov    ebp,0x9
  4490bd:	lea    rbx,[rsi+rdx*1+0x9]
  4490c2:	jmp    0x449070
  4490c4:	xor    ecx,ecx
  4490c6:	jmp    0x449019
  4490cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4490d0:	push   rdi
  4490d1:	push   rsi
  4490d2:	push   rbx
  4490d3:	sub    rsp,0x50
  4490d7:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4490dc:	mov    rsi,rdx
  4490df:	lea    rdx,[rsp+0x38]
  4490e4:	mov    rdi,rcx
  4490e7:	call   0x445c20
  4490ec:	lea    rdx,[rsp+0x3c]
  4490f1:	mov    rcx,rsi
  4490f4:	movq   rbx,xmm0
  4490f9:	movapd xmm6,xmm0
  4490fd:	call   0x445c20
  449102:	mov    eax,DWORD PTR [rsp+0x38]
  449106:	sub    eax,DWORD PTR [rsp+0x3c]
  44910a:	movq   rcx,xmm0
  44910f:	mov    r8d,eax
  449112:	mov    eax,DWORD PTR [rdi+0x14]
  449115:	sub    eax,DWORD PTR [rsi+0x14]
  449118:	shl    eax,0x5
  44911b:	add    eax,r8d
  44911e:	test   eax,eax
  449120:	jle    0x449160
  449122:	movq   rdx,xmm6
  449127:	shl    eax,0x14
  44912a:	shr    rdx,0x20
  44912e:	add    eax,edx
  449130:	shl    rax,0x20
  449134:	mov    rdx,rax
  449137:	mov    eax,ebx
  449139:	or     rax,rdx
  44913c:	mov    QWORD PTR [rsp+0x28],rax
  449141:	movsd  xmm6,QWORD PTR [rsp+0x28]
  449147:	divsd  xmm6,xmm0
  44914b:	movapd xmm0,xmm6
  44914f:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  449154:	add    rsp,0x50
  449158:	pop    rbx
  449159:	pop    rsi
  44915a:	pop    rdi
  44915b:	ret    
  44915c:	nop    DWORD PTR [rax+0x0]
  449160:	movq   rdx,xmm0
  449165:	shl    eax,0x14
  449168:	shr    rdx,0x20
  44916c:	mov    ebx,edx
  44916e:	sub    ebx,eax
  449170:	mov    rax,rbx
  449173:	shl    rax,0x20
  449177:	mov    rdx,rax
  44917a:	mov    eax,ecx
  44917c:	or     rax,rdx
  44917f:	mov    QWORD PTR [rsp+0x28],rax
  449184:	movsd  xmm0,QWORD PTR [rsp+0x28]
  44918a:	jmp    0x449147
  44918c:	nop    DWORD PTR [rax+0x0]
  449190:	mov    r8,QWORD PTR [rcx]
  449193:	jmp    0x4491ae
  449195:	movsx  eax,BYTE PTR [r8]
  449199:	lea    r11d,[rax-0x41]
  44919d:	lea    r10d,[rax+0x20]
  4491a1:	cmp    r11d,0x19
  4491a5:	cmovbe eax,r10d
  4491a9:	cmp    eax,r9d
  4491ac:	jne    0x4491d0
  4491ae:	add    rdx,0x1
  4491b2:	movsx  r9d,BYTE PTR [rdx-0x1]
  4491b7:	add    r8,0x1
  4491bb:	test   r9d,r9d
  4491be:	jne    0x449195
  4491c0:	mov    QWORD PTR [rcx],r8
  4491c3:	mov    eax,0x1
  4491c8:	ret    
  4491c9:	nop    DWORD PTR [rax+0x0]
  4491d0:	xor    eax,eax
  4491d2:	ret    
  4491d3:	nop    DWORD PTR [rax]
  4491d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4491e0:	sub    edx,0x1
  4491e3:	lea    rax,[r8+0x18]
  4491e7:	sar    edx,0x5
  4491ea:	movsxd rdx,edx
  4491ed:	lea    r11,[rcx+rdx*4+0x4]
  4491f2:	movsxd rdx,DWORD PTR [r8+0x14]
  4491f6:	lea    r10,[rax+rdx*4]
  4491fa:	cmp    rax,r10
  4491fd:	jae    0x44923b
  4491ff:	mov    rdx,rcx
  449202:	add    rax,0x4
  449206:	mov    r9d,DWORD PTR [rax-0x4]
  44920a:	add    rdx,0x4
  44920e:	cmp    r10,rax
  449211:	mov    DWORD PTR [rdx-0x4],r9d
  449215:	ja     0x449202
  449217:	sub    r10,r8
  44921a:	lea    rax,[r10-0x19]
  44921e:	shr    rax,0x2
  449222:	lea    rcx,[rcx+rax*4+0x4]
  449227:	cmp    r11,rcx
  44922a:	jbe    0x449240
  44922c:	nop    DWORD PTR [rax+0x0]
  449230:	add    rcx,0x4
  449234:	mov    DWORD PTR [rcx-0x4],0x0
  44923b:	cmp    r11,rcx
  44923e:	ja     0x449230
  449240:	repz ret 
  449242:	nop    DWORD PTR [rax+0x0]
  449246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  449250:	movsxd rax,DWORD PTR [rcx+0x14]
  449254:	mov    r9d,edx
  449257:	lea    r8,[rcx+0x18]
  44925b:	sar    r9d,0x5
  44925f:	cmp    eax,r9d
  449262:	jge    0x449291
  449264:	lea    r9,[r8+rax*4]
  449268:	cmp    r8,r9
  44926b:	jae    0x4492d6
  44926d:	mov    eax,DWORD PTR [r9-0x4]
  449271:	lea    rdx,[r9-0x4]
  449275:	test   eax,eax
  449277:	je     0x44928a
  449279:	jmp    0x4492d0
  44927b:	nop    DWORD PTR [rax+rax*1+0x0]
  449280:	sub    rdx,0x4
  449284:	mov    ecx,DWORD PTR [rdx]
  449286:	test   ecx,ecx
  449288:	jne    0x4492d0
  44928a:	cmp    r8,rdx
  44928d:	jb     0x449280
  44928f:	repz ret 
  449291:	jle    0x4492c0
  449293:	mov    ecx,edx
  449295:	movsxd r9,r9d
  449298:	and    ecx,0x1f
  44929b:	lea    r9,[r8+r9*4]
  44929f:	je     0x449268
  4492a1:	mov    r10d,DWORD PTR [r9]
  4492a4:	mov    eax,r10d
  4492a7:	shr    eax,cl
  4492a9:	shl    eax,cl
  4492ab:	mov    edx,eax
  4492ad:	mov    eax,0x1
  4492b2:	cmp    edx,r10d
  4492b5:	je     0x449268
  4492b7:	repz ret 
  4492b9:	nop    DWORD PTR [rax+0x0]
  4492c0:	movsxd r9,r9d
  4492c3:	lea    r9,[r8+r9*4]
  4492c7:	jmp    0x449268
  4492c9:	nop    DWORD PTR [rax+0x0]
  4492d0:	mov    eax,0x1
  4492d5:	ret    
  4492d6:	xor    eax,eax
  4492d8:	ret    
  4492d9:	nop
  4492da:	nop
  4492db:	nop
  4492dc:	nop
  4492dd:	nop
  4492de:	nop
  4492df:	nop
  4492e0:	jmp    QWORD PTR [rip+0x1b78e]        # 0x464a74
  4492e6:	nop
  4492e7:	nop
  4492e8:	jmp    QWORD PTR [rip+0x1b77e]        # 0x464a6c
  4492ee:	nop
  4492ef:	nop
  4492f0:	jmp    QWORD PTR [rip+0x1b76e]        # 0x464a64
  4492f6:	nop
  4492f7:	nop
  4492f8:	jmp    QWORD PTR [rip+0x1b75e]        # 0x464a5c
  4492fe:	nop
  4492ff:	nop
  449300:	jmp    QWORD PTR [rip+0x1b74e]        # 0x464a54
  449306:	nop
  449307:	nop
  449308:	jmp    QWORD PTR [rip+0x1b73e]        # 0x464a4c
  44930e:	nop
  44930f:	nop
  449310:	jmp    QWORD PTR [rip+0x1b72e]        # 0x464a44
  449316:	nop
  449317:	nop
  449318:	jmp    QWORD PTR [rip+0x1b71e]        # 0x464a3c
  44931e:	nop
  44931f:	nop
  449320:	jmp    QWORD PTR [rip+0x1b70e]        # 0x464a34
  449326:	nop
  449327:	nop
  449328:	jmp    QWORD PTR [rip+0x1b6fe]        # 0x464a2c
  44932e:	nop
  44932f:	nop
  449330:	jmp    QWORD PTR [rip+0x1b6ee]        # 0x464a24
  449336:	nop
  449337:	nop
  449338:	jmp    QWORD PTR [rip+0x1b6de]        # 0x464a1c
  44933e:	nop
  44933f:	nop
  449340:	jmp    QWORD PTR [rip+0x1b6ce]        # 0x464a14
  449346:	nop
  449347:	nop
  449348:	jmp    QWORD PTR [rip+0x1b6be]        # 0x464a0c
  44934e:	nop
  44934f:	nop
  449350:	jmp    QWORD PTR [rip+0x1b6ae]        # 0x464a04
  449356:	nop
  449357:	nop
  449358:	jmp    QWORD PTR [rip+0x1b69e]        # 0x4649fc
  44935e:	nop
  44935f:	nop
  449360:	jmp    QWORD PTR [rip+0x1b68e]        # 0x4649f4
  449366:	nop
  449367:	nop
  449368:	jmp    QWORD PTR [rip+0x1b67e]        # 0x4649ec
  44936e:	nop
  44936f:	nop
  449370:	jmp    QWORD PTR [rip+0x1b66e]        # 0x4649e4
  449376:	nop
  449377:	nop
  449378:	jmp    QWORD PTR [rip+0x1b65e]        # 0x4649dc
  44937e:	nop
  44937f:	nop
  449380:	jmp    QWORD PTR [rip+0x1b64e]        # 0x4649d4
  449386:	nop
  449387:	nop
  449388:	jmp    QWORD PTR [rip+0x1b63e]        # 0x4649cc
  44938e:	nop
  44938f:	nop
  449390:	jmp    QWORD PTR [rip+0x1b62e]        # 0x4649c4
  449396:	nop
  449397:	nop
  449398:	jmp    QWORD PTR [rip+0x1b61e]        # 0x4649bc
  44939e:	nop
  44939f:	nop
  4493a0:	jmp    QWORD PTR [rip+0x1b60e]        # 0x4649b4
  4493a6:	nop
  4493a7:	nop
  4493a8:	jmp    QWORD PTR [rip+0x1b5fe]        # 0x4649ac
  4493ae:	nop
  4493af:	nop
  4493b0:	jmp    QWORD PTR [rip+0x1b5ee]        # 0x4649a4
  4493b6:	nop
  4493b7:	nop
  4493b8:	jmp    QWORD PTR [rip+0x1b5de]        # 0x46499c
  4493be:	nop
  4493bf:	nop
  4493c0:	jmp    QWORD PTR [rip+0x1b5ce]        # 0x464994
  4493c6:	nop
  4493c7:	nop
  4493c8:	jmp    QWORD PTR [rip+0x1b5be]        # 0x46498c
  4493ce:	nop
  4493cf:	nop
  4493d0:	jmp    QWORD PTR [rip+0x1b5ae]        # 0x464984
  4493d6:	nop
  4493d7:	nop
  4493d8:	jmp    QWORD PTR [rip+0x1b59e]        # 0x46497c
  4493de:	nop
  4493df:	nop
  4493e0:	jmp    QWORD PTR [rip+0x1b58e]        # 0x464974
  4493e6:	nop
  4493e7:	nop
  4493e8:	jmp    QWORD PTR [rip+0x1b57e]        # 0x46496c
  4493ee:	nop
  4493ef:	nop
  4493f0:	jmp    QWORD PTR [rip+0x1b56e]        # 0x464964
  4493f6:	nop
  4493f7:	nop
  4493f8:	jmp    QWORD PTR [rip+0x1b55e]        # 0x46495c
  4493fe:	nop
  4493ff:	nop
  449400:	jmp    QWORD PTR [rip+0x1b54e]        # 0x464954
  449406:	nop
  449407:	nop
  449408:	jmp    QWORD PTR [rip+0x1b53e]        # 0x46494c
  44940e:	nop
  44940f:	nop
  449410:	jmp    QWORD PTR [rip+0x1b52e]        # 0x464944
  449416:	nop
  449417:	nop
  449418:	jmp    QWORD PTR [rip+0x1b51e]        # 0x46493c
  44941e:	nop
  44941f:	nop
  449420:	jmp    QWORD PTR [rip+0x1b50e]        # 0x464934
  449426:	nop
  449427:	nop
  449428:	jmp    QWORD PTR [rip+0x1b4fe]        # 0x46492c
  44942e:	nop
  44942f:	nop
  449430:	jmp    QWORD PTR [rip+0x1b4ee]        # 0x464924
  449436:	nop
  449437:	nop
  449438:	jmp    QWORD PTR [rip+0x1b4de]        # 0x46491c
  44943e:	nop
  44943f:	nop
  449440:	jmp    QWORD PTR [rip+0x1b4ce]        # 0x464914
  449446:	nop
  449447:	nop
  449448:	jmp    QWORD PTR [rip+0x1b4be]        # 0x46490c
  44944e:	nop
  44944f:	nop
  449450:	jmp    QWORD PTR [rip+0x1b4ae]        # 0x464904
  449456:	nop
  449457:	nop
  449458:	jmp    QWORD PTR [rip+0x1b49e]        # 0x4648fc
  44945e:	nop
  44945f:	nop
  449460:	jmp    QWORD PTR [rip+0x1b48e]        # 0x4648f4
  449466:	nop
  449467:	nop
  449468:	jmp    QWORD PTR [rip+0x1b47e]        # 0x4648ec
  44946e:	nop
  44946f:	nop
  449470:	jmp    QWORD PTR [rip+0x1b46e]        # 0x4648e4
  449476:	nop
  449477:	nop
  449478:	jmp    QWORD PTR [rip+0x1b45e]        # 0x4648dc
  44947e:	nop
  44947f:	nop
  449480:	jmp    QWORD PTR [rip+0x1b44e]        # 0x4648d4
  449486:	nop
  449487:	nop
  449488:	jmp    QWORD PTR [rip+0x1b43e]        # 0x4648cc
  44948e:	nop
  44948f:	nop
  449490:	jmp    QWORD PTR [rip+0x1b42e]        # 0x4648c4
  449496:	nop
  449497:	nop
  449498:	jmp    QWORD PTR [rip+0x1b41e]        # 0x4648bc
  44949e:	nop
  44949f:	nop
  4494a0:	jmp    QWORD PTR [rip+0x1b40e]        # 0x4648b4
  4494a6:	nop
  4494a7:	nop
  4494a8:	jmp    QWORD PTR [rip+0x1b3fe]        # 0x4648ac
  4494ae:	nop
  4494af:	nop
  4494b0:	jmp    QWORD PTR [rip+0x1b3ee]        # 0x4648a4
  4494b6:	nop
  4494b7:	nop
  4494b8:	jmp    QWORD PTR [rip+0x1b3de]        # 0x46489c
  4494be:	nop
  4494bf:	nop
  4494c0:	jmp    QWORD PTR [rip+0x1b3ce]        # 0x464894
  4494c6:	nop
  4494c7:	nop
  4494c8:	jmp    QWORD PTR [rip+0x1b3be]        # 0x46488c
  4494ce:	nop
  4494cf:	nop
  4494d0:	jmp    QWORD PTR [rip+0x1b3ae]        # 0x464884
  4494d6:	nop
  4494d7:	nop
  4494d8:	jmp    QWORD PTR [rip+0x1b39e]        # 0x46487c
  4494de:	nop
  4494df:	nop
  4494e0:	jmp    QWORD PTR [rip+0x1b38e]        # 0x464874
  4494e6:	nop
  4494e7:	nop
  4494e8:	jmp    QWORD PTR [rip+0x1b37e]        # 0x46486c
  4494ee:	nop
  4494ef:	nop
  4494f0:	jmp    QWORD PTR [rip+0x1b36e]        # 0x464864
  4494f6:	nop
  4494f7:	nop
  4494f8:	jmp    QWORD PTR [rip+0x1b35e]        # 0x46485c
  4494fe:	nop
  4494ff:	nop
  449500:	jmp    QWORD PTR [rip+0x1b34e]        # 0x464854
  449506:	nop
  449507:	nop
  449508:	jmp    QWORD PTR [rip+0x1b33e]        # 0x46484c
  44950e:	nop
  44950f:	nop
  449510:	jmp    QWORD PTR [rip+0x1b32e]        # 0x464844
  449516:	nop
  449517:	nop
  449518:	jmp    QWORD PTR [rip+0x1b31e]        # 0x46483c
  44951e:	nop
  44951f:	nop
  449520:	jmp    QWORD PTR [rip+0x1b30e]        # 0x464834
  449526:	nop
  449527:	nop
  449528:	jmp    QWORD PTR [rip+0x1b2fe]        # 0x46482c
  44952e:	nop
  44952f:	nop
  449530:	jmp    QWORD PTR [rip+0x1b2ee]        # 0x464824
  449536:	nop
  449537:	nop
  449538:	jmp    QWORD PTR [rip+0x1b2de]        # 0x46481c
  44953e:	nop
  44953f:	nop
  449540:	jmp    QWORD PTR [rip+0x1b2ce]        # 0x464814
  449546:	nop
  449547:	nop
  449548:	jmp    QWORD PTR [rip+0x1b2be]        # 0x46480c
  44954e:	nop
  44954f:	nop
  449550:	jmp    QWORD PTR [rip+0x1b2ae]        # 0x464804
  449556:	nop
  449557:	nop
  449558:	jmp    QWORD PTR [rip+0x1b29e]        # 0x4647fc
  44955e:	nop
  44955f:	nop
  449560:	jmp    QWORD PTR [rip+0x1b28e]        # 0x4647f4
  449566:	nop
  449567:	nop
  449568:	jmp    QWORD PTR [rip+0x1b27e]        # 0x4647ec
  44956e:	nop
  44956f:	nop
  449570:	jmp    QWORD PTR [rip+0x1b26e]        # 0x4647e4
  449576:	nop
  449577:	nop
  449578:	jmp    QWORD PTR [rip+0x1b25e]        # 0x4647dc
  44957e:	nop
  44957f:	nop
  449580:	jmp    QWORD PTR [rip+0x1b24e]        # 0x4647d4
  449586:	nop
  449587:	nop
  449588:	jmp    QWORD PTR [rip+0x1b23e]        # 0x4647cc
  44958e:	nop
  44958f:	nop
  449590:	jmp    QWORD PTR [rip+0x1b22e]        # 0x4647c4
  449596:	nop
  449597:	nop
  449598:	jmp    QWORD PTR [rip+0x1b21e]        # 0x4647bc
  44959e:	nop
  44959f:	nop
  4495a0:	jmp    QWORD PTR [rip+0x1b20e]        # 0x4647b4
  4495a6:	nop
  4495a7:	nop
  4495a8:	jmp    QWORD PTR [rip+0x1b1fe]        # 0x4647ac
  4495ae:	nop
  4495af:	nop
  4495b0:	jmp    QWORD PTR [rip+0x1b1ee]        # 0x4647a4
  4495b6:	nop
  4495b7:	nop
  4495b8:	jmp    QWORD PTR [rip+0x1b1d6]        # 0x464794
  4495be:	nop
  4495bf:	nop
  4495c0:	jmp    QWORD PTR [rip+0x1b1c6]        # 0x46478c
  4495c6:	nop
  4495c7:	nop
  4495c8:	jmp    QWORD PTR [rip+0x1b1b6]        # 0x464784
  4495ce:	nop
  4495cf:	nop
  4495d0:	jmp    QWORD PTR [rip+0x1b1a6]        # 0x46477c
  4495d6:	nop
  4495d7:	nop
  4495d8:	jmp    QWORD PTR [rip+0x1b196]        # 0x464774
  4495de:	nop
  4495df:	nop
  4495e0:	jmp    QWORD PTR [rip+0x1b186]        # 0x46476c
  4495e6:	nop
  4495e7:	nop
  4495e8:	jmp    QWORD PTR [rip+0x1b176]        # 0x464764
  4495ee:	nop
  4495ef:	nop
  4495f0:	jmp    QWORD PTR [rip+0x1b15e]        # 0x464754
  4495f6:	nop
  4495f7:	nop
  4495f8:	jmp    QWORD PTR [rip+0x1b14e]        # 0x46474c
  4495fe:	nop
  4495ff:	nop
  449600:	jmp    QWORD PTR [rip+0x1b136]        # 0x46473c
  449606:	nop
  449607:	nop
  449608:	jmp    QWORD PTR [rip+0x1b126]        # 0x464734
  44960e:	nop
  44960f:	nop
  449610:	jmp    QWORD PTR [rip+0x1b10e]        # 0x464724
  449616:	nop
  449617:	nop
  449618:	jmp    QWORD PTR [rip+0x1b0fe]        # 0x46471c
  44961e:	nop
  44961f:	nop
  449620:	jmp    QWORD PTR [rip+0x1b0ee]        # 0x464714
  449626:	nop
  449627:	nop
  449628:	jmp    QWORD PTR [rip+0x1b0de]        # 0x46470c
  44962e:	nop
  44962f:	nop
  449630:	mov    rax,QWORD PTR [rip+0x1a589]        # 0x463bc0
  449637:	ret    
  449638:	nop    DWORD PTR [rax+rax*1+0x0]
  449640:	mov    rax,rcx
  449643:	xchg   QWORD PTR [rip+0x1a576],rax        # 0x463bc0
  44964a:	ret    
  44964b:	nop
  44964c:	nop
  44964d:	nop
  44964e:	nop
  44964f:	nop
  449650:	mov    eax,DWORD PTR [rip+0x1a57a]        # 0x463bd0
  449656:	ret    
  449657:	nop    WORD PTR [rax+rax*1+0x0]
  449660:	mov    eax,ecx
  449662:	xchg   DWORD PTR [rip+0x1a568],eax        # 0x463bd0
  449668:	ret    
  449669:	nop    DWORD PTR [rax+0x0]
  449670:	push   rbx
  449671:	sub    rsp,0x20
  449675:	mov    ebx,ecx
  449677:	lea    rcx,[rip+0x11562]        # 0x45abe0
  44967e:	call   QWORD PTR [rip+0x1afa8]        # 0x46462c
  449684:	lea    rdx,[rip+0x1156b]        # 0x45abf6
  44968b:	mov    rcx,rax
  44968e:	call   QWORD PTR [rip+0x1afa0]        # 0x464634
  449694:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x449660
  44969b:	test   rax,rax
  44969e:	mov    ecx,ebx
  4496a0:	cmove  rax,rdx
  4496a4:	mov    QWORD PTR [rip+0x1bcd],rax        # 0x44b278
  4496ab:	add    rsp,0x20
  4496af:	pop    rbx
  4496b0:	rex.W jmp rax
  4496b3:	nop    DWORD PTR [rax]
  4496b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4496c0:	sub    rsp,0x28
  4496c4:	lea    rcx,[rip+0x11515]        # 0x45abe0
  4496cb:	call   QWORD PTR [rip+0x1af5b]        # 0x46462c
  4496d1:	lea    rdx,[rip+0x11531]        # 0x45ac09
  4496d8:	mov    rcx,rax
  4496db:	call   QWORD PTR [rip+0x1af53]        # 0x464634
  4496e1:	lea    rdx,[rip+0xffffffffffffff68]        # 0x449650
  4496e8:	test   rax,rax
  4496eb:	cmove  rax,rdx
  4496ef:	mov    QWORD PTR [rip+0x1b7a],rax        # 0x44b270
  4496f6:	add    rsp,0x28
  4496fa:	rex.W jmp rax
  4496fd:	nop    DWORD PTR [rax]
  449700:	mov    rax,QWORD PTR [rip+0x1b71]        # 0x44b278
  449707:	rex.W jmp rax
  44970a:	nop    WORD PTR [rax+rax*1+0x0]
  449710:	mov    rax,QWORD PTR [rip+0x1b59]        # 0x44b270
  449717:	rex.W jmp rax
  44971a:	nop
  44971b:	nop
  44971c:	nop
  44971d:	nop
  44971e:	nop
  44971f:	nop
  449720:	jmp    QWORD PTR [rip+0x1b35e]        # 0x464a84
  449726:	nop
  449727:	nop
  449728:	nop    DWORD PTR [rax+rax*1+0x0]
  449730:	jmp    QWORD PTR [rip+0x1afc6]        # 0x4646fc
  449736:	nop
  449737:	nop
  449738:	jmp    QWORD PTR [rip+0x1afb6]        # 0x4646f4
  44973e:	nop
  44973f:	nop
  449740:	jmp    QWORD PTR [rip+0x1afa6]        # 0x4646ec
  449746:	nop
  449747:	nop
  449748:	jmp    QWORD PTR [rip+0x1af96]        # 0x4646e4
  44974e:	nop
  44974f:	nop
  449750:	jmp    QWORD PTR [rip+0x1af86]        # 0x4646dc
  449756:	nop
  449757:	nop
  449758:	jmp    QWORD PTR [rip+0x1af76]        # 0x4646d4
  44975e:	nop
  44975f:	nop
  449760:	jmp    QWORD PTR [rip+0x1af66]        # 0x4646cc
  449766:	nop
  449767:	nop
  449768:	jmp    QWORD PTR [rip+0x1af56]        # 0x4646c4
  44976e:	nop
  44976f:	nop
  449770:	jmp    QWORD PTR [rip+0x1af46]        # 0x4646bc
  449776:	nop
  449777:	nop
  449778:	jmp    QWORD PTR [rip+0x1af36]        # 0x4646b4
  44977e:	nop
  44977f:	nop
  449780:	jmp    QWORD PTR [rip+0x1af26]        # 0x4646ac
  449786:	nop
  449787:	nop
  449788:	jmp    QWORD PTR [rip+0x1af16]        # 0x4646a4
  44978e:	nop
  44978f:	nop
  449790:	jmp    QWORD PTR [rip+0x1af06]        # 0x46469c
  449796:	nop
  449797:	nop
  449798:	jmp    QWORD PTR [rip+0x1aef6]        # 0x464694
  44979e:	nop
  44979f:	nop
  4497a0:	jmp    QWORD PTR [rip+0x1aee6]        # 0x46468c
  4497a6:	nop
  4497a7:	nop
  4497a8:	jmp    QWORD PTR [rip+0x1aed6]        # 0x464684
  4497ae:	nop
  4497af:	nop
  4497b0:	jmp    QWORD PTR [rip+0x1aec6]        # 0x46467c
  4497b6:	nop
  4497b7:	nop
  4497b8:	jmp    QWORD PTR [rip+0x1aeb6]        # 0x464674
  4497be:	nop
  4497bf:	nop
  4497c0:	jmp    QWORD PTR [rip+0x1aea6]        # 0x46466c
  4497c6:	nop
  4497c7:	nop
  4497c8:	jmp    QWORD PTR [rip+0x1ae96]        # 0x464664
  4497ce:	nop
  4497cf:	nop
  4497d0:	jmp    QWORD PTR [rip+0x1ae86]        # 0x46465c
  4497d6:	nop
  4497d7:	nop
  4497d8:	jmp    QWORD PTR [rip+0x1ae76]        # 0x464654
  4497de:	nop
  4497df:	nop
  4497e0:	jmp    QWORD PTR [rip+0x1ae66]        # 0x46464c
  4497e6:	nop
  4497e7:	nop
  4497e8:	jmp    QWORD PTR [rip+0x1ae56]        # 0x464644
  4497ee:	nop
  4497ef:	nop
  4497f0:	jmp    QWORD PTR [rip+0x1ae46]        # 0x46463c
  4497f6:	nop
  4497f7:	nop
  4497f8:	jmp    QWORD PTR [rip+0x1ae36]        # 0x464634
  4497fe:	nop
  4497ff:	nop
  449800:	jmp    QWORD PTR [rip+0x1ae26]        # 0x46462c
  449806:	nop
  449807:	nop
  449808:	jmp    QWORD PTR [rip+0x1ae16]        # 0x464624
  44980e:	nop
  44980f:	nop
  449810:	jmp    QWORD PTR [rip+0x1ae06]        # 0x46461c
  449816:	nop
  449817:	nop
  449818:	jmp    QWORD PTR [rip+0x1adf6]        # 0x464614
  44981e:	nop
  44981f:	nop
  449820:	jmp    QWORD PTR [rip+0x1ade6]        # 0x46460c
  449826:	nop
  449827:	nop
  449828:	jmp    QWORD PTR [rip+0x1add6]        # 0x464604
  44982e:	nop
  44982f:	nop
  449830:	jmp    QWORD PTR [rip+0x1adc6]        # 0x4645fc
  449836:	nop
  449837:	nop
  449838:	jmp    QWORD PTR [rip+0x1adb6]        # 0x4645f4
  44983e:	nop
  44983f:	nop
  449840:	jmp    QWORD PTR [rip+0x1ada6]        # 0x4645ec
  449846:	nop
  449847:	nop
  449848:	jmp    QWORD PTR [rip+0x1ad96]        # 0x4645e4
  44984e:	nop
  44984f:	nop
  449850:	jmp    QWORD PTR [rip+0x1ad86]        # 0x4645dc
  449856:	nop
  449857:	nop
  449858:	jmp    QWORD PTR [rip+0x1ad76]        # 0x4645d4
  44985e:	nop
  44985f:	nop
  449860:	jmp    QWORD PTR [rip+0x1ad66]        # 0x4645cc
  449866:	nop
  449867:	nop
  449868:	nop    DWORD PTR [rax+rax*1+0x0]
  449870:	sub    rsp,0x38
  449874:	mov    QWORD PTR [rsp+0x50],r8
  449879:	lea    r8,[rsp+0x50]
  44987e:	mov    QWORD PTR [rsp+0x58],r9
  449883:	mov    QWORD PTR [rsp+0x28],r8
  449888:	call   0x440d20
  44988d:	add    rsp,0x38
  449891:	ret    
  449892:	nop
  449893:	nop
  449894:	nop
  449895:	nop
  449896:	nop
  449897:	nop
  449898:	nop
  449899:	nop
  44989a:	nop
  44989b:	nop
  44989c:	nop
  44989d:	nop
  44989e:	nop
  44989f:	nop
  4498a0:	sub    rsp,0x38
  4498a4:	mov    QWORD PTR [rsp+0x48],rdx
  4498a9:	lea    rdx,[rsp+0x48]
  4498ae:	mov    QWORD PTR [rsp+0x50],r8
  4498b3:	mov    QWORD PTR [rsp+0x58],r9
  4498b8:	mov    QWORD PTR [rsp+0x28],rdx
  4498bd:	call   0x440db0
  4498c2:	add    rsp,0x38
  4498c6:	ret    
  4498c7:	nop
  4498c8:	nop
  4498c9:	nop
  4498ca:	nop
  4498cb:	nop
  4498cc:	nop
  4498cd:	nop
  4498ce:	nop
  4498cf:	nop
  4498d0:	sub    rsp,0x38
  4498d4:	mov    QWORD PTR [rsp+0x50],r8
  4498d9:	lea    r8,[rsp+0x50]
  4498de:	mov    QWORD PTR [rsp+0x58],r9
  4498e3:	mov    QWORD PTR [rsp+0x28],r8
  4498e8:	call   0x43db30
  4498ed:	add    rsp,0x38
  4498f1:	ret    
  4498f2:	nop
  4498f3:	nop
  4498f4:	nop
  4498f5:	nop
  4498f6:	nop
  4498f7:	nop
  4498f8:	nop
  4498f9:	nop
  4498fa:	nop
  4498fb:	nop
  4498fc:	nop
  4498fd:	nop
  4498fe:	nop
  4498ff:	nop
  449900:	sub    rsp,0x38
  449904:	mov    QWORD PTR [rsp+0x50],r8
  449909:	lea    r8,[rsp+0x50]
  44990e:	mov    QWORD PTR [rsp+0x58],r9
  449913:	mov    QWORD PTR [rsp+0x28],r8
  449918:	call   0x440e50
  44991d:	add    rsp,0x38
  449921:	ret    
  449922:	nop
  449923:	nop
  449924:	nop
  449925:	nop
  449926:	nop
  449927:	nop
  449928:	nop
  449929:	nop
  44992a:	nop
  44992b:	nop
  44992c:	nop
  44992d:	nop
  44992e:	nop
  44992f:	nop
  449930:	sub    rsp,0x38
  449934:	mov    QWORD PTR [rsp+0x58],r9
  449939:	lea    r9,[rsp+0x58]
  44993e:	mov    QWORD PTR [rsp+0x28],r9
  449943:	call   0x440df0
  449948:	add    rsp,0x38
  44994c:	ret    
  44994d:	nop
  44994e:	nop
  44994f:	nop
  449950:	push   r15
  449952:	push   r14
  449954:	push   r13
  449956:	push   r12
  449958:	push   rbp
  449959:	push   rdi
  44995a:	push   rsi
  44995b:	push   rbx
  44995c:	sub    rsp,0xb8
  449963:	mov    DWORD PTR [rsp+0x100],ecx
  44996a:	mov    QWORD PTR [rsp+0x108],rdx
  449972:	call   0x43c050
  449977:	mov    rbx,QWORD PTR [rsp+0x108]
  44997f:	lea    rax,[rip+0x2e2f]        # 0x44c7b5
  449986:	mov    QWORD PTR [rsp+0x90],rax
  44998e:	mov    QWORD PTR [rsp+0x98],rax
  449996:	lea    rax,[rip+0x2e29]        # 0x44c7c6
  44999d:	mov    rsi,QWORD PTR [rbx]
  4499a0:	mov    QWORD PTR [rsp+0xa0],rax
  4499a8:	lea    rax,[rip+0x2e1f]        # 0x44c7ce
  4499af:	mov    rcx,rsi
  4499b2:	mov    QWORD PTR [rsp+0xa8],rax
  4499ba:	call   0x4493c0
  4499bf:	lea    rcx,[rsi+rax*1]
  4499c3:	mov    QWORD PTR [rsp+0x88],rcx
  4499cb:	cmp    QWORD PTR [rbx],rcx
  4499ce:	je     0x449a02
  4499d0:	movzx  eax,BYTE PTR [rcx-0x1]
  4499d4:	cmp    al,0x5c
  4499d6:	je     0x449a02
  4499d8:	cmp    al,0x2f
  4499da:	je     0x449a02
  4499dc:	lea    rdx,[rcx-0x1]
  4499e0:	jmp    0x4499f2
  4499e2:	movzx  eax,BYTE PTR [rdx-0x1]
  4499e6:	sub    rdx,0x1
  4499ea:	cmp    al,0x5c
  4499ec:	je     0x449a02
  4499ee:	cmp    al,0x2f
  4499f0:	je     0x449a02
  4499f2:	mov    QWORD PTR [rsp+0x88],rdx
  4499fa:	cmp    QWORD PTR [rbx],rdx
  4499fd:	mov    rcx,rdx
  449a00:	jne    0x4499e2
  449a02:	mov    rax,QWORD PTR [rip+0x115c7]        # 0x45afd0
  449a09:	mov    QWORD PTR [rax],rcx
  449a0c:	call   0x43ba80
  449a11:	lea    rdx,[rsp+0x108]
  449a19:	lea    rcx,[rsp+0x100]
  449a21:	mov    rbx,QWORD PTR [rsp+0x108]
  449a29:	call   0x437dc0
  449a2e:	cmp    QWORD PTR [rsp+0x108],rbx
  449a36:	je     0x449a3f
  449a38:	mov    BYTE PTR [rip+0x18719],0x1        # 0x462158
  449a3f:	mov    eax,DWORD PTR [rsp+0x100]
  449a46:	lea    rcx,[rip+0xfffffffffffb8b93]        # 0x4025e0
  449a4d:	lea    r13d,[rax+0x9]
  449a51:	call   0x43bf90
  449a56:	test   eax,eax
  449a58:	jne    0x44acab
  449a5e:	call   0x4384d0
  449a63:	mov    rax,QWORD PTR [rip+0x11446]        # 0x45aeb0
  449a6a:	xor    edx,edx
  449a6c:	mov    rcx,QWORD PTR [rax]
  449a6f:	call   0x405840
  449a74:	mov    eax,DWORD PTR [rsp+0x100]
  449a7b:	mov    edx,0x8
  449a80:	lea    ecx,[rax+0x4]
  449a83:	movsxd rcx,ecx
  449a86:	call   0x43bb20
  449a8b:	mov    QWORD PTR [rsp+0x48],rax
  449a90:	mov    eax,DWORD PTR [rsp+0x100]
  449a97:	mov    edx,0x8
  449a9c:	lea    ecx,[rax+0xb]
  449a9f:	movsxd rcx,ecx
  449aa2:	call   0x43bb20
  449aa7:	movsxd rcx,DWORD PTR [rsp+0x100]
  449aaf:	mov    edx,0x8
  449ab4:	mov    QWORD PTR [rsp+0x60],rax
  449ab9:	call   0x43bb20
  449abe:	mov    rbp,QWORD PTR [rsp+0x108]
  449ac6:	mov    QWORD PTR [rsp+0x40],rax
  449acb:	mov    rbx,QWORD PTR [rbp+0x8]
  449acf:	test   rbx,rbx
  449ad2:	je     0x44aac4
  449ad8:	add    rbp,0x10
  449adc:	xor    r15d,r15d
  449adf:	mov    BYTE PTR [rsp+0x34],0x0
  449ae4:	xor    r14d,r14d
  449ae7:	lea    r8,[rip+0x2cf5]        # 0x44c7e3
  449aee:	mov    r12d,0x7
  449af4:	mov    r9d,0x15
  449afa:	mov    r10d,0x8
  449b00:	jmp    0x449b16
  449b02:	mov    BYTE PTR [rip+0x185e8],0x1        # 0x4620f1
  449b09:	add    rbp,0x8
  449b0d:	mov    rbx,QWORD PTR [rbp-0x8]
  449b11:	test   rbx,rbx
  449b14:	je     0x449b64
  449b16:	mov    rsi,rbx
  449b19:	mov    rdi,r8
  449b1c:	mov    rcx,r12
  449b1f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  449b21:	je     0x449b02
  449b23:	lea    rdi,[rip+0x2cc0]        # 0x44c7ea
  449b2a:	mov    rsi,rbx
  449b2d:	mov    rcx,r9
  449b30:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  449b32:	je     0x449c81
  449b38:	lea    rdi,[rip+0x2cc0]        # 0x44c7ff
  449b3f:	mov    rsi,rbx
  449b42:	mov    rcx,r10
  449b45:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  449b47:	jne    0x449c90
  449b4d:	add    rbp,0x8
  449b51:	mov    rbx,QWORD PTR [rbp-0x8]
  449b55:	mov    DWORD PTR [rip+0x14d1],0x0        # 0x44b030
  449b5f:	test   rbx,rbx
  449b62:	jne    0x449b16
  449b64:	movzx  ecx,BYTE PTR [rip+0x18586]        # 0x4620f1
  449b6b:	mov    BYTE PTR [rip+0x18581],cl        # 0x4620f2
  449b71:	call   0x4050c0
  449b76:	cmp    BYTE PTR [rsp+0x34],0x0
  449b7b:	je     0x44a423
  449b81:	mov    DWORD PTR [rip+0x14a5],0x0        # 0x44b030
  449b8b:	lea    rax,[rip+0x2c99]        # 0x44c82b
  449b92:	lea    r9,[rip+0xffffffffffff1f57]        # 0x43baf0
  449b99:	lea    rcx,[rip+0x184e0]        # 0x462080
  449ba0:	xor    r8d,r8d
  449ba3:	xor    edx,edx
  449ba5:	mov    QWORD PTR [rip+0x1862c],rax        # 0x4621d8
  449bac:	mov    rax,QWORD PTR [rip+0x112ed]        # 0x45aea0
  449bb3:	mov    QWORD PTR [rsp+0x20],rax
  449bb8:	call   0x439830
  449bbd:	mov    r8,QWORD PTR [rip+0x184dc]        # 0x4620a0
  449bc4:	mov    rax,QWORD PTR [rip+0x184cd]        # 0x462098
  449bcb:	cmp    r8,rax
  449bce:	js     0x44aa83
  449bd4:	mov    r9,QWORD PTR [rip+0x184b5]        # 0x462090
  449bdb:	cmp    r9,rax
  449bde:	je     0x44aa77
  449be4:	movsxd rcx,DWORD PTR [rip+0x184c5]        # 0x4620b0
  449beb:	mov    rbx,r8
  449bee:	mov    rdx,rcx
  449bf1:	add    rax,rcx
  449bf4:	not    edx
  449bf6:	movsxd rdx,edx
  449bf9:	and    rax,rdx
  449bfc:	mov    rdx,QWORD PTR [rip+0x18485]        # 0x462088
  449c03:	mov    QWORD PTR [rip+0x1848e],rax        # 0x462098
  449c0a:	sub    rbx,rdx
  449c0d:	sub    rax,rdx
  449c10:	cmp    rax,rbx
  449c13:	jle    0x449c1c
  449c15:	mov    QWORD PTR [rip+0x1847c],r8        # 0x462098
  449c1c:	mov    rax,QWORD PTR [rip+0x18475]        # 0x462098
  449c23:	lea    rcx,[rip+0x2c07]        # 0x44c831
  449c2a:	mov    QWORD PTR [rip+0x18417],r9        # 0x462048
  449c31:	lea    rbx,[rsp+0x88]
  449c39:	mov    QWORD PTR [rip+0x18450],rax        # 0x462090
  449c40:	call   0x449498
  449c45:	mov    QWORD PTR [rsp+0x88],rax
  449c4d:	jmp    0x449c58
  449c4f:	nop
  449c50:	mov    rax,QWORD PTR [rsp+0x88]
  449c58:	test   rax,rax
  449c5b:	je     0x449cc0
  449c5d:	cmp    BYTE PTR [rax],0x0
  449c60:	je     0x449cc0
  449c62:	mov    rcx,rbx
  449c65:	call   0x401530
  449c6a:	cmp    BYTE PTR [rax],0x2d
  449c6d:	jne    0x449c50
  449c6f:	movzx  eax,BYTE PTR [rax+0x1]
  449c73:	cmp    al,0x66
  449c75:	je     0x449c7b
  449c77:	cmp    al,0x6d
  449c79:	jne    0x449c50
  449c7b:	add    r13d,0x1
  449c7f:	jmp    0x449c50
  449c81:	mov    r15d,0x1
  449c87:	jmp    0x449b09
  449c8c:	nop    DWORD PTR [rax+0x0]
  449c90:	lea    rdi,[rip+0x2b71]        # 0x44c808
  449c97:	mov    rsi,rbx
  449c9a:	mov    rcx,r10
  449c9d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  449c9f:	jne    0x44a448
  449ca5:	test   r14d,r14d
  449ca8:	mov    eax,0x1
  449cad:	mov    BYTE PTR [rsp+0x34],0x1
  449cb2:	cmove  r14,rax
  449cb6:	jmp    0x449b09
  449cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  449cc0:	mov    rdx,QWORD PTR [rip+0x18381]        # 0x462048
  449cc7:	cmp    rdx,QWORD PTR [rip+0x183ba]        # 0x462088
  449cce:	jbe    0x449cdd
  449cd0:	cmp    rdx,QWORD PTR [rip+0x183c9]        # 0x4620a0
  449cd7:	jb     0x44a4b2
  449cdd:	lea    rcx,[rip+0x1839c]        # 0x462080
  449ce4:	call   0x439b90
  449ce9:	lea    ecx,[r13+0x6]
  449ced:	mov    edx,0x8
  449cf2:	movsxd rcx,ecx
  449cf5:	call   0x43bb20
  449cfa:	cmp    DWORD PTR [rsp+0x100],0x1
  449d02:	mov    QWORD PTR [rsp+0x68],rax
  449d07:	jle    0x44acb7
  449d0d:	mov    edx,0x1
  449d12:	mov    ecx,0x2
  449d17:	call   0x449408
  449d1c:	cmp    rax,0x1
  449d20:	je     0x449d33
  449d22:	lea    rdx,[rip+0xfffffffffffb8527]        # 0x402250
  449d29:	mov    ecx,0x2
  449d2e:	call   0x449408
  449d33:	mov    edx,0x1
  449d38:	mov    ecx,0xb
  449d3d:	call   0x449408
  449d42:	cmp    rax,0x1
  449d46:	je     0x449d59
  449d48:	lea    rdx,[rip+0xfffffffffffb8501]        # 0x402250
  449d4f:	mov    ecx,0xb
  449d54:	call   0x449408
  449d59:	lea    rdx,[rip+0x183c0]        # 0x462120
  449d60:	lea    rcx,[rip+0x2aeb]        # 0x44c852
  449d67:	call   0x4054b0
  449d6c:	lea    rdx,[rip+0x1838d]        # 0x462100
  449d73:	lea    rcx,[rip+0x2ae6]        # 0x44c860
  449d7a:	call   0x4054b0
  449d7f:	lea    rdx,[rip+0x2adf]        # 0x44c865
  449d86:	lea    rcx,[rip+0x18393]        # 0x462120
  449d8d:	mov    r8d,0x1
  449d93:	call   0x4050d0
  449d98:	test   rax,rax
  449d9b:	mov    QWORD PTR [rsp+0x58],rax
  449da0:	mov    BYTE PTR [rsp+0x7b],0x0
  449da5:	je     0x44ab84
  449dab:	lea    rdx,[rip+0x2ac6]        # 0x44c878
  449db2:	lea    rcx,[rip+0x18367]        # 0x462120
  449db9:	mov    r8d,0x1
  449dbf:	call   0x4050d0
  449dc4:	test   rax,rax
  449dc7:	mov    QWORD PTR [rip+0x18402],rax        # 0x4621d0
  449dce:	je     0x44abff
  449dd4:	lea    rdx,[rip+0x2aa4]        # 0x44c87f
  449ddb:	lea    rcx,[rip+0x1833e]        # 0x462120
  449de2:	mov    r8d,0x1
  449de8:	call   0x4050d0
  449ded:	test   rax,rax
  449df0:	mov    QWORD PTR [rip+0x183d1],rax        # 0x4621c8
  449df7:	je     0x44aade
  449dfd:	lea    rcx,[rip+0x2a88]        # 0x44c88c
  449e04:	call   0x449498
  449e09:	test   rax,rax
  449e0c:	mov    QWORD PTR [rip+0x182c5],rax        # 0x4620d8
  449e13:	mov    rdx,rax
  449e16:	je     0x44aa61
  449e1c:	lea    rcx,[rip+0x182fd]        # 0x462120
  449e23:	mov    r8d,0x1
  449e29:	call   0x4050d0
  449e2e:	test   rax,rax
  449e31:	mov    QWORD PTR [rsp+0x88],rax
  449e39:	je     0x44ab55
  449e3f:	mov    QWORD PTR [rip+0x18292],rax        # 0x4620d8
  449e46:	mov    rax,QWORD PTR [rsp+0x48]
  449e4b:	mov    rsi,QWORD PTR [rsp+0x60]
  449e50:	lea    rcx,[rip+0x2a41]        # 0x44c898
  449e57:	mov    rdi,QWORD PTR [rsp+0x58]
  449e5c:	lea    r12,[rax+0x8]
  449e60:	mov    rbx,rsi
  449e63:	mov    QWORD PTR [rsi],rdi
  449e66:	mov    QWORD PTR [rax],rdi
  449e69:	add    rbx,0x8
  449e6d:	call   0x439700
  449e72:	lea    rcx,[rip+0x2a22]        # 0x44c89b
  449e79:	mov    QWORD PTR [rip+0x18370],rax        # 0x4621f0
  449e80:	call   0x439700
  449e85:	cmp    BYTE PTR [rip+0x18265],0x0        # 0x4620f1
  449e8c:	mov    QWORD PTR [rip+0x18355],rax        # 0x4621e8
  449e93:	je     0x44a8a7
  449e99:	mov    rdi,QWORD PTR [rsp+0x68]
  449e9e:	lea    rsi,[rip+0x2a01]        # 0x44c8a6
  449ea5:	mov    rdx,QWORD PTR [rip+0x1822c]        # 0x4620d8
  449eac:	lea    rcx,[rip+0x297e]        # 0x44c831
  449eb3:	lea    r14,[rsp+0x88]
  449ebb:	mov    r13d,0x4
  449ec1:	mov    QWORD PTR [rdi+0x8],rsi
  449ec5:	lea    rsi,[rip+0x29dd]        # 0x44c8a9
  449ecc:	mov    QWORD PTR [rdi],rdx
  449ecf:	mov    QWORD PTR [rdi+0x28],rax
  449ed3:	lea    rbp,[rdi+0x30]
  449ed7:	mov    QWORD PTR [rdi+0x10],rsi
  449edb:	lea    rsi,[rip+0x29c9]        # 0x44c8ab
  449ee2:	mov    QWORD PTR [rdi+0x18],rsi
  449ee6:	lea    rsi,[rip+0x29c1]        # 0x44c8ae
  449eed:	mov    QWORD PTR [rdi+0x20],rsi
  449ef1:	call   0x449498
  449ef6:	mov    QWORD PTR [rsp+0x88],rax
  449efe:	jmp    0x449f60
  449f00:	lea    rdi,[rip+0x29aa]        # 0x44c8b1
  449f07:	mov    rsi,r15
  449f0a:	mov    rcx,r13
  449f0d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  449f0f:	je     0x449f22
  449f11:	lea    rdi,[rip+0x299d]        # 0x44c8b5
  449f18:	mov    rsi,r15
  449f1b:	mov    rcx,r13
  449f1e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  449f20:	jne    0x449f35
  449f22:	lea    rsi,[rbp+0x8]
  449f26:	mov    rcx,r15
  449f29:	call   0x43bbf0
  449f2e:	mov    QWORD PTR [rbp+0x0],rax
  449f32:	mov    rbp,rsi
  449f35:	lea    rdi,[rip+0x297d]        # 0x44c8b9
  449f3c:	mov    rsi,r15
  449f3f:	mov    ecx,0x8
  449f44:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  449f46:	jne    0x449f52
  449f48:	mov    DWORD PTR [rip+0x182a6],0x1        # 0x4621f8
  449f52:	cmp    BYTE PTR [r15],0x2d
  449f56:	je     0x449fa2
  449f58:	mov    rax,QWORD PTR [rsp+0x88]
  449f60:	test   rax,rax
  449f63:	je     0x449fd0
  449f65:	cmp    BYTE PTR [rax],0x0
  449f68:	je     0x449fd0
  449f6a:	mov    rcx,r14
  449f6d:	call   0x401530
  449f72:	cmp    BYTE PTR [rax],0x2d
  449f75:	mov    r15,rax
  449f78:	jne    0x449f00
  449f7a:	movzx  eax,BYTE PTR [rax+0x1]
  449f7e:	cmp    al,0x66
  449f80:	je     0x449f8a
  449f82:	cmp    al,0x6d
  449f84:	jne    0x449f00
  449f8a:	lea    rsi,[rbp+0x8]
  449f8e:	mov    rcx,r15
  449f91:	call   0x43bbf0
  449f96:	mov    QWORD PTR [rbp+0x0],rax
  449f9a:	mov    rbp,rsi
  449f9d:	jmp    0x449f00
  449fa2:	cmp    BYTE PTR [r15+0x1],0x42
  449fa7:	jne    0x449f58
  449fa9:	mov    rcx,r15
  449fac:	call   0x43bbf0
  449fb1:	mov    QWORD PTR [rbp+0x0],rax
  449fb5:	cmp    BYTE PTR [r15+0x2],0x0
  449fba:	je     0x44aaa4
  449fc0:	add    rbp,0x8
  449fc4:	jmp    0x449f58
  449fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  449fd0:	mov    rdx,QWORD PTR [rip+0x18071]        # 0x462048
  449fd7:	cmp    rdx,QWORD PTR [rip+0x180aa]        # 0x462088
  449fde:	jbe    0x449fed
  449fe0:	cmp    rdx,QWORD PTR [rip+0x180b9]        # 0x4620a0
  449fe7:	jb     0x44a4c5
  449fed:	lea    rcx,[rip+0x1808c]        # 0x462080
  449ff4:	call   0x439b90
  449ff9:	lea    rax,[rip+0x28c1]        # 0x44c8c1
  44a000:	mov    rsi,QWORD PTR [rsp+0x108]
  44a008:	mov    DWORD PTR [rsp+0x34],0x1
  44a010:	mov    QWORD PTR [rsp+0x70],rbp
  44a015:	mov    QWORD PTR [rbp+0x0],rax
  44a019:	lea    rax,[rip+0x28b3]        # 0x44c8d3
  44a020:	mov    QWORD PTR [rbp+0x8],rax
  44a024:	lea    rax,[rip+0x28bb]        # 0x44c8e6
  44a02b:	mov    QWORD PTR [rbp+0x10],rax
  44a02f:	lea    rax,[rip+0x28ca]        # 0x44c900
  44a036:	mov    QWORD PTR [rbp+0x18],rax
  44a03a:	lea    rax,[rip+0x28cf]        # 0x44c910
  44a041:	mov    QWORD PTR [rbp+0x20],rax
  44a045:	lea    rax,[rip+0x28c7]        # 0x44c913
  44a04c:	mov    QWORD PTR [rbp+0x28],rax
  44a050:	mov    rax,QWORD PTR [rip+0x18191]        # 0x4621e8
  44a057:	mov    QWORD PTR [rsp+0x50],rax
  44a05c:	mov    eax,DWORD PTR [rip+0x18096]        # 0x4620f8
  44a062:	mov    DWORD PTR [rsp+0x7c],eax
  44a066:	mov    rax,QWORD PTR [rsp+0x40]
  44a06b:	mov    QWORD PTR [rsp+0x38],rax
  44a070:	mov    r13,QWORD PTR [rsi+0x8]
  44a074:	lea    rbp,[rsi+0x8]
  44a078:	mov    QWORD PTR [rsp+0x108],rbp
  44a080:	test   r13,r13
  44a083:	je     0x44a1d0
  44a089:	mov    QWORD PTR [rbx],r13
  44a08c:	mov    QWORD PTR [r12],r13
  44a090:	lea    r15,[r12+0x8]
  44a095:	cmp    BYTE PTR [r13+0x0],0x2d
  44a09a:	lea    r14,[rbx+0x8]
  44a09e:	je     0x44a160
  44a0a4:	mov    edx,0x2e
  44a0a9:	mov    rcx,r13
  44a0ac:	call   0x449398
  44a0b1:	test   rax,rax
  44a0b4:	mov    r12,rax
  44a0b7:	mov    QWORD PTR [rsp+0x88],rax
  44a0bf:	je     0x44a190
  44a0c5:	lea    rdi,[rip+0x27cf]        # 0x44c89b
  44a0cc:	mov    rsi,rax
  44a0cf:	mov    ecx,0x3
  44a0d4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44a0d6:	je     0x44a115
  44a0d8:	lea    rdi,[rip+0x289c]        # 0x44c97b
  44a0df:	mov    rsi,rax
  44a0e2:	mov    ecx,0x3
  44a0e7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44a0e9:	je     0x44a115
  44a0eb:	lea    rdi,[rip+0x2229]        # 0x44c31b
  44a0f2:	mov    rsi,rax
  44a0f5:	mov    ecx,0x4
  44a0fa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44a0fc:	je     0x44a115
  44a0fe:	lea    rdi,[rip+0x2879]        # 0x44c97e
  44a105:	mov    rsi,rax
  44a108:	mov    ecx,0x4
  44a10d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44a10f:	jne    0x44a496
  44a115:	mov    edx,DWORD PTR [rsp+0x34]
  44a119:	test   edx,edx
  44a11b:	je     0x44a139
  44a11d:	cmp    BYTE PTR [r12+0x1],0x6f
  44a123:	je     0x44a484
  44a129:	mov    rax,QWORD PTR [rsp+0x50]
  44a12e:	lea    r14,[rbx+0x10]
  44a132:	mov    QWORD PTR [rbx+0x8],r13
  44a136:	mov    QWORD PTR [rbx],rax
  44a139:	movzx  eax,BYTE PTR [r12+0x1]
  44a13f:	cmp    al,0x6c
  44a141:	je     0x44a1a0
  44a143:	cmp    al,0x6f
  44a145:	je     0x44a1a0
  44a147:	mov    rsi,rbp
  44a14a:	mov    rbx,r14
  44a14d:	mov    r12,r15
  44a150:	mov    DWORD PTR [rsp+0x34],0x0
  44a158:	jmp    0x44a070
  44a15d:	nop    DWORD PTR [rax]
  44a160:	movzx  eax,BYTE PTR [r13+0x1]
  44a165:	sub    eax,0x2d
  44a168:	cmp    al,0x49
  44a16a:	ja     0x44a190
  44a16c:	lea    rdi,[rip+0x2b65]        # 0x44ccd8
  44a173:	movzx  eax,al
  44a176:	movsxd rax,DWORD PTR [rdi+rax*4]
  44a17a:	add    rax,rdi
  44a17d:	jmp    rax
  44a17f:	cmp    DWORD PTR [rsp+0x34],0x0
  44a184:	jne    0x44a8e1
  44a18a:	nop    WORD PTR [rax+rax*1+0x0]
  44a190:	mov    rsi,rbp
  44a193:	mov    rbx,r14
  44a196:	mov    r12,r15
  44a199:	jmp    0x44a070
  44a19e:	xchg   ax,ax
  44a1a0:	mov    rax,QWORD PTR [rsp+0x38]
  44a1a5:	mov    rsi,rbp
  44a1a8:	mov    rbx,r14
  44a1ab:	mov    r12,r15
  44a1ae:	mov    DWORD PTR [rsp+0x34],0x0
  44a1b6:	mov    QWORD PTR [rax],r13
  44a1b9:	add    rax,0x8
  44a1bd:	mov    QWORD PTR [rsp+0x38],rax
  44a1c2:	jmp    0x44a070
  44a1c7:	nop    WORD PTR [rax+rax*1+0x0]
  44a1d0:	mov    rbp,QWORD PTR [rsp+0x70]
  44a1d5:	mov    rax,QWORD PTR [rip+0x18014]        # 0x4621f0
  44a1dc:	cmp    BYTE PTR [rip+0x17f0f],0x0        # 0x4620f2
  44a1e3:	mov    QWORD PTR [r12],0x0
  44a1eb:	mov    QWORD PTR [rbp+0x30],rax
  44a1ef:	mov    rax,QWORD PTR [rsp+0x38]
  44a1f4:	mov    QWORD PTR [rbp+0x38],0x0
  44a1fc:	mov    QWORD PTR [rax],0x0
  44a203:	jne    0x44a88f
  44a209:	cmp    BYTE PTR [rip+0x17ee0],0x0        # 0x4620f0
  44a210:	jne    0x44a80b
  44a216:	cmp    BYTE PTR [rip+0x17ed4],0x0        # 0x4620f1
  44a21d:	je     0x44a3c1
  44a223:	mov    rax,QWORD PTR [rsp+0x58]
  44a228:	lea    rdi,[rip+0x258d]        # 0x44c7bc
  44a22f:	mov    rsi,QWORD PTR [rip+0x1a4fe]        # 0x464734
  44a236:	test   rax,rax
  44a239:	mov    rbp,rax
  44a23c:	cmove  rbp,rdi
  44a240:	call   rsi
  44a242:	lea    rdx,[rip+0x289e]        # 0x44cae7
  44a249:	lea    rcx,[rax+0x60]
  44a24d:	mov    r8,rbp
  44a250:	call   0x4498d0
  44a255:	mov    rbp,QWORD PTR [rip+0x17e7c]        # 0x4620d8
  44a25c:	test   rbp,rbp
  44a25f:	cmove  rbp,rdi
  44a263:	call   rsi
  44a265:	lea    rdx,[rip+0x2895]        # 0x44cb01
  44a26c:	lea    rcx,[rax+0x60]
  44a270:	mov    r8,rbp
  44a273:	call   0x4498d0
  44a278:	mov    rbp,QWORD PTR [rip+0x17f51]        # 0x4621d0
  44a27f:	test   rbp,rbp
  44a282:	cmove  rbp,rdi
  44a286:	call   rsi
  44a288:	lea    rdx,[rip+0x288c]        # 0x44cb1b
  44a28f:	lea    rcx,[rax+0x60]
  44a293:	mov    r8,rbp
  44a296:	call   0x4498d0
  44a29b:	mov    rbp,QWORD PTR [rip+0x17f26]        # 0x4621c8
  44a2a2:	test   rbp,rbp
  44a2a5:	cmove  rbp,rdi
  44a2a9:	call   rsi
  44a2ab:	lea    rdx,[rip+0x2883]        # 0x44cb35
  44a2b2:	lea    rcx,[rax+0x60]
  44a2b6:	mov    r8,rbp
  44a2b9:	call   0x4498d0
  44a2be:	mov    rbp,QWORD PTR [rip+0x17f2b]        # 0x4621f0
  44a2c5:	test   rbp,rbp
  44a2c8:	cmove  rbp,rdi
  44a2cc:	call   rsi
  44a2ce:	lea    rdx,[rip+0x287a]        # 0x44cb4f
  44a2d5:	lea    rcx,[rax+0x60]
  44a2d9:	mov    r8,rbp
  44a2dc:	call   0x4498d0
  44a2e1:	mov    rbp,QWORD PTR [rip+0x17f00]        # 0x4621e8
  44a2e8:	test   rbp,rbp
  44a2eb:	cmove  rbp,rdi
  44a2ef:	call   rsi
  44a2f1:	lea    rdx,[rip+0x2871]        # 0x44cb69
  44a2f8:	lea    rcx,[rax+0x60]
  44a2fc:	mov    r8,rbp
  44a2ff:	call   0x4498d0
  44a304:	lea    rcx,[rip+0x2526]        # 0x44c831
  44a30b:	call   0x449498
  44a310:	test   rax,rax
  44a313:	mov    rdi,rax
  44a316:	je     0x44a32d
  44a318:	call   rsi
  44a31a:	lea    rdx,[rip+0x2862]        # 0x44cb83
  44a321:	lea    rcx,[rax+0x60]
  44a325:	mov    r8,rdi
  44a328:	call   0x4498d0
  44a32d:	lea    rcx,[rip+0x2558]        # 0x44c88c
  44a334:	call   0x449498
  44a339:	test   rax,rax
  44a33c:	mov    rdi,rax
  44a33f:	je     0x44a356
  44a341:	call   rsi
  44a343:	lea    rdx,[rip+0x2853]        # 0x44cb9d
  44a34a:	lea    rcx,[rax+0x60]
  44a34e:	mov    r8,rdi
  44a351:	call   0x4498d0
  44a356:	lea    rcx,[rip+0x24f5]        # 0x44c852
  44a35d:	call   0x449498
  44a362:	test   rax,rax
  44a365:	mov    rdi,rax
  44a368:	je     0x44a37f
  44a36a:	call   rsi
  44a36c:	lea    rdx,[rip+0x2844]        # 0x44cbb7
  44a373:	lea    rcx,[rax+0x60]
  44a377:	mov    r8,rdi
  44a37a:	call   0x4498d0
  44a37f:	lea    rcx,[rip+0x284b]        # 0x44cbd1
  44a386:	call   0x449498
  44a38b:	test   rax,rax
  44a38e:	mov    rdi,rax
  44a391:	je     0x44a3af
  44a393:	call   rsi
  44a395:	lea    r8,[rip+0x2835]        # 0x44cbd1
  44a39c:	lea    rcx,[rax+0x60]
  44a3a0:	lea    rdx,[rip+0x2837]        # 0x44cbde
  44a3a7:	mov    r9,rdi
  44a3aa:	call   0x4498d0
  44a3af:	call   rsi
  44a3b1:	lea    rdx,[rip+0x21cb]        # 0x44c583
  44a3b8:	lea    rcx,[rax+0x60]
  44a3bc:	call   0x4498d0
  44a3c1:	mov    ecx,DWORD PTR [rip+0x17e39]        # 0x462200
  44a3c7:	test   ecx,ecx
  44a3c9:	jne    0x44a3d8
  44a3cb:	cmp    DWORD PTR [rip+0x17d26],0x0        # 0x4620f8
  44a3d2:	jne    0x44a71f
  44a3d8:	mov    rdx,QWORD PTR [rsp+0x40]
  44a3dd:	mov    rcx,QWORD PTR [rsp+0x48]
  44a3e2:	call   0x4047c0
  44a3e7:	mov    eax,DWORD PTR [rip+0xc43]        # 0x44b030
  44a3ed:	test   eax,eax
  44a3ef:	jne    0x44a703
  44a3f5:	mov    rcx,QWORD PTR [rip+0x17df4]        # 0x4621f0
  44a3fc:	call   0x402210
  44a401:	mov    rcx,QWORD PTR [rip+0x17de0]        # 0x4621e8
  44a408:	call   0x402210
  44a40d:	xor    eax,eax
  44a40f:	add    rsp,0xb8
  44a416:	pop    rbx
  44a417:	pop    rsi
  44a418:	pop    rdi
  44a419:	pop    rbp
  44a41a:	pop    r12
  44a41c:	pop    r13
  44a41e:	pop    r14
  44a420:	pop    r15
  44a422:	ret    
  44a423:	test   r15b,r15b
  44a426:	je     0x449b8b
  44a42c:	cmp    DWORD PTR [rip+0xbfd],0x2        # 0x44b030
  44a433:	jne    0x449b8b
  44a439:	mov    DWORD PTR [rip+0xbed],0x1        # 0x44b030
  44a443:	jmp    0x449b8b
  44a448:	lea    rdx,[rip+0x23c1]        # 0x44c810
  44a44f:	mov    rcx,rbx
  44a452:	mov    QWORD PTR [rsp+0x58],r10
  44a457:	mov    QWORD PTR [rsp+0x50],r9
  44a45c:	mov    QWORD PTR [rsp+0x38],r8
  44a461:	call   0x4493e0
  44a466:	test   eax,eax
  44a468:	mov    r8,QWORD PTR [rsp+0x38]
  44a46d:	mov    r9,QWORD PTR [rsp+0x50]
  44a472:	mov    r10,QWORD PTR [rsp+0x58]
  44a477:	jne    0x44a4d8
  44a479:	mov    r14d,0x3
  44a47f:	jmp    0x449b09
  44a484:	mov    rax,QWORD PTR [rsp+0x50]
  44a489:	lea    r14,[rbx+0x10]
  44a48d:	mov    QWORD PTR [rbx+0x8],rax
  44a491:	jmp    0x44a139
  44a496:	lea    rdx,[rip+0x24e5]        # 0x44c982
  44a49d:	mov    rcx,rax
  44a4a0:	call   0x4493e0
  44a4a5:	test   eax,eax
  44a4a7:	je     0x44a115
  44a4ad:	jmp    0x44a190
  44a4b2:	mov    QWORD PTR [rip+0x17bd7],rdx        # 0x462090
  44a4b9:	mov    QWORD PTR [rip+0x17bd8],rdx        # 0x462098
  44a4c0:	jmp    0x449ce9
  44a4c5:	mov    QWORD PTR [rip+0x17bc4],rdx        # 0x462090
  44a4cc:	mov    QWORD PTR [rip+0x17bc5],rdx        # 0x462098
  44a4d3:	jmp    0x449ff9
  44a4d8:	lea    rdx,[rip+0x233e]        # 0x44c81d
  44a4df:	mov    rcx,rbx
  44a4e2:	call   0x4493e0
  44a4e7:	test   eax,eax
  44a4e9:	mov    eax,0x2
  44a4ee:	mov    r8,QWORD PTR [rsp+0x38]
  44a4f3:	cmove  r14,rax
  44a4f7:	mov    r9,QWORD PTR [rsp+0x50]
  44a4fc:	mov    r10,QWORD PTR [rsp+0x58]
  44a501:	jmp    0x449b09
  44a506:	cmp    BYTE PTR [r13+0x2],0x0
  44a50b:	jne    0x44a190
  44a511:	mov    BYTE PTR [rip+0x17bda],0x1        # 0x4620f2
  44a518:	mov    rsi,rbp
  44a51b:	mov    rbx,r14
  44a51e:	mov    r12,r15
  44a521:	jmp    0x44a070
  44a526:	cmp    BYTE PTR [r13+0x2],0x0
  44a52b:	jne    0x44a190
  44a531:	cmp    DWORD PTR [rsp+0x7c],0x0
  44a536:	je     0x44a190
  44a53c:	mov    DWORD PTR [rip+0x17cb6],0x1        # 0x4621fc
  44a546:	mov    rsi,rbp
  44a549:	mov    rbx,r14
  44a54c:	jmp    0x44a070
  44a551:	lea    rdx,[rip+0x228b]        # 0x44c7e3
  44a558:	mov    rcx,r13
  44a55b:	call   0x4493e0
  44a560:	lea    rdx,[rip+0x23bf]        # 0x44c926
  44a567:	test   eax,eax
  44a569:	mov    rcx,r13
  44a56c:	cmovne rbx,r14
  44a570:	cmovne r12,r15
  44a574:	call   0x4493e0
  44a579:	test   eax,eax
  44a57b:	jne    0x44a8d9
  44a581:	mov    rax,QWORD PTR [rsi+0x10]
  44a585:	test   rax,rax
  44a588:	je     0x44a8d9
  44a58e:	mov    QWORD PTR [rbx],rax
  44a591:	mov    QWORD PTR [r12],rax
  44a595:	add    rsi,0x10
  44a599:	add    rbx,0x8
  44a59d:	add    r12,0x8
  44a5a1:	jmp    0x44a070
  44a5a6:	lea    rdx,[rip+0x2399]        # 0x44c946
  44a5ad:	mov    rcx,r13
  44a5b0:	call   0x4493e0
  44a5b5:	test   eax,eax
  44a5b7:	je     0x44a190
  44a5bd:	lea    rdx,[rip+0x2390]        # 0x44c954
  44a5c4:	mov    r8d,0xa
  44a5ca:	mov    rcx,r13
  44a5cd:	call   0x4493b0
  44a5d2:	test   eax,eax
  44a5d4:	je     0x44a190
  44a5da:	lea    rdx,[rip+0x237e]        # 0x44c95f
  44a5e1:	mov    r8d,0xa
  44a5e7:	mov    rcx,r13
  44a5ea:	call   0x4493b0
  44a5ef:	test   eax,eax
  44a5f1:	je     0x44ac76
  44a5f7:	lea    rdx,[rip+0x236c]        # 0x44c96a
  44a5fe:	mov    rcx,r13
  44a601:	call   0x4493e0
  44a606:	test   eax,eax
  44a608:	je     0x44a511
  44a60e:	lea    rdx,[rip+0x235f]        # 0x44c974
  44a615:	mov    rcx,r13
  44a618:	call   0x4493e0
  44a61d:	test   eax,eax
  44a61f:	jne    0x44a190
  44a625:	mov    BYTE PTR [rip+0x17ac4],0x1        # 0x4620f0
  44a62c:	mov    rsi,rbp
  44a62f:	mov    rbx,r14
  44a632:	mov    r12,r15
  44a635:	jmp    0x44a070
  44a63a:	cmp    BYTE PTR [r13+0x2],0x0
  44a63f:	jne    0x44a190
  44a645:	mov    DWORD PTR [rip+0x17bb1],0x1        # 0x462200
  44a64f:	mov    rsi,rbp
  44a652:	mov    rbx,r14
  44a655:	mov    r12,r15
  44a658:	jmp    0x44a070
  44a65d:	cmp    BYTE PTR [r13+0x2],0x0
  44a662:	jne    0x44a905
  44a668:	mov    rax,QWORD PTR [rsi+0x10]
  44a66c:	lea    rdx,[rsi+0x10]
  44a670:	add    rbx,0x10
  44a674:	add    r12,0x10
  44a678:	mov    QWORD PTR [rsp+0x108],rdx
  44a680:	mov    rsi,rdx
  44a683:	mov    QWORD PTR [rbx-0x8],rax
  44a687:	mov    QWORD PTR [r12-0x8],rax
  44a68c:	mov    QWORD PTR [rip+0x17b45],rax        # 0x4621d8
  44a693:	jmp    0x44a070
  44a698:	lea    rdx,[rip+0x2297]        # 0x44c936
  44a69f:	mov    r8d,0x5
  44a6a5:	mov    rcx,r13
  44a6a8:	mov    rsi,rbp
  44a6ab:	call   0x4493b0
  44a6b0:	test   eax,eax
  44a6b2:	je     0x44a070
  44a6b8:	cmp    BYTE PTR [rsp+0x7b],0x0
  44a6bd:	jne    0x44a6dc
  44a6bf:	lea    rdx,[rip+0x2276]        # 0x44c93c
  44a6c6:	mov    r8d,0x9
  44a6cc:	mov    rcx,r13
  44a6cf:	call   0x4493b0
  44a6d4:	test   eax,eax
  44a6d6:	je     0x44a070
  44a6dc:	lea    rdx,[rip+0x211c]        # 0x44c7ff
  44a6e3:	mov    r8d,0x8
  44a6e9:	mov    rcx,r13
  44a6ec:	mov    rsi,rbp
  44a6ef:	call   0x4493b0
  44a6f4:	test   eax,eax
  44a6f6:	cmovne rbx,r14
  44a6fa:	cmovne r12,r15
  44a6fe:	jmp    0x44a070
  44a703:	mov    r8,QWORD PTR [rsp+0x38]
  44a708:	mov    rdx,QWORD PTR [rsp+0x40]
  44a70d:	xor    r9d,r9d
  44a710:	mov    rcx,QWORD PTR [rsp+0x48]
  44a715:	call   0x403080
  44a71a:	jmp    0x44a3f5
  44a71f:	mov    rdx,QWORD PTR [rsp+0x40]
  44a724:	mov    rcx,QWORD PTR [rsp+0x48]
  44a729:	call   0x4047c0
  44a72e:	mov    rcx,QWORD PTR [rip+0x17aa3]        # 0x4621d8
  44a735:	xor    edx,edx
  44a737:	call   0x402800
  44a73c:	cmp    BYTE PTR [rip+0x179ae],0x0        # 0x4620f1
  44a743:	jne    0x44a99b
  44a749:	cmp    DWORD PTR [rip+0x17a60],0x0        # 0x4621b0
  44a750:	jne    0x44a75f
  44a752:	cmp    DWORD PTR [rip+0x17a37],0x0        # 0x462190
  44a759:	je     0x44a934
  44a75f:	lea    rcx,[rip+0x17a3a]        # 0x4621a0
  44a766:	call   0x401700
  44a76b:	lea    rcx,[rip+0x17a0e]        # 0x462180
  44a772:	call   0x401700
  44a777:	mov    rcx,QWORD PTR [rip+0x17a5a]        # 0x4621d8
  44a77e:	call   0x402210
  44a783:	mov    rcx,QWORD PTR [rip+0x17a66]        # 0x4621f0
  44a78a:	lea    rdx,[rip+0x1ef7]        # 0x44c688
  44a791:	call   0x4494f0
  44a796:	test   rax,rax
  44a799:	mov    rsi,rax
  44a79c:	je     0x44acc3
  44a7a2:	mov    rcx,rax
  44a7a5:	call   0x401930
  44a7aa:	mov    rcx,rsi
  44a7ad:	call   0x449518
  44a7b2:	test   eax,eax
  44a7b4:	jne    0x44acd6
  44a7ba:	cmp    BYTE PTR [rip+0x17930],0x0        # 0x4620f1
  44a7c1:	mov    QWORD PTR [rbx],0x0
  44a7c8:	jne    0x44aa12
  44a7ce:	mov    rdx,QWORD PTR [rsp+0x68]
  44a7d3:	lea    rcx,[rip+0x1fde]        # 0x44c7b8
  44a7da:	call   0x403050
  44a7df:	cmp    DWORD PTR [rip+0x84a],0x0        # 0x44b030
  44a7e6:	je     0x44a91e
  44a7ec:	mov    r8,QWORD PTR [rsp+0x38]
  44a7f1:	mov    rdx,QWORD PTR [rsp+0x40]
  44a7f6:	mov    r9d,0x1
  44a7fc:	mov    rcx,QWORD PTR [rsp+0x60]
  44a801:	call   0x403080
  44a806:	jmp    0x44a3f5
  44a80b:	lea    rcx,[rip+0x218a]        # 0x44c99c
  44a812:	call   0x4498a0
  44a817:	lea    rcx,[rip+0x219a]        # 0x44c9b8
  44a81e:	call   0x4498a0
  44a823:	lea    rcx,[rip+0x21c5]        # 0x44c9ef
  44a82a:	call   0x4498a0
  44a82f:	lea    rcx,[rip+0x21ca]        # 0x44ca00
  44a836:	call   0x4498a0
  44a83b:	lea    rcx,[rip+0x21e6]        # 0x44ca28
  44a842:	call   0x4498a0
  44a847:	lea    rcx,[rip+0x220a]        # 0x44ca58
  44a84e:	call   0x4498a0
  44a853:	lea    rcx,[rip+0x1d29]        # 0x44c583
  44a85a:	call   0x4498a0
  44a85f:	lea    rcx,[rip+0x2232]        # 0x44ca98
  44a866:	call   0x4498a0
  44a86b:	mov    rdx,QWORD PTR [rip+0x105de]        # 0x45ae50
  44a872:	lea    rcx,[rip+0x225d]        # 0x44cad6
  44a879:	call   0x4498a0
  44a87e:	lea    rcx,[rip+0x1cfe]        # 0x44c583
  44a885:	call   0x4498a0
  44a88a:	jmp    0x44a216
  44a88f:	mov    rdx,QWORD PTR [rip+0x1076a]        # 0x45b000
  44a896:	lea    rcx,[rip+0x20ea]        # 0x44c987
  44a89d:	call   0x4018f0
  44a8a2:	jmp    0x44a209
  44a8a7:	lea    rcx,[rip+0x1ff0]        # 0x44c89e
  44a8ae:	call   0x439700
  44a8b3:	lea    rcx,[rip+0x1fe8]        # 0x44c8a2
  44a8ba:	mov    QWORD PTR [rip+0x17827],rax        # 0x4620e8
  44a8c1:	call   0x439700
  44a8c6:	mov    QWORD PTR [rip+0x17813],rax        # 0x4620e0
  44a8cd:	mov    rax,QWORD PTR [rip+0x17914]        # 0x4621e8
  44a8d4:	jmp    0x449e99
  44a8d9:	mov    rsi,rbp
  44a8dc:	jmp    0x44a070
  44a8e1:	mov    rax,QWORD PTR [rsp+0x50]
  44a8e6:	mov    QWORD PTR [rbx+0x8],r13
  44a8ea:	mov    rsi,rbp
  44a8ed:	add    rbx,0x10
  44a8f1:	mov    r12,r15
  44a8f4:	mov    DWORD PTR [rsp+0x34],0x0
  44a8fc:	mov    QWORD PTR [rbx-0x10],rax
  44a900:	jmp    0x44a070
  44a905:	add    r13,0x2
  44a909:	mov    rsi,rbp
  44a90c:	mov    rbx,r14
  44a90f:	mov    QWORD PTR [rip+0x178c2],r13        # 0x4621d8
  44a916:	mov    r12,r15
  44a919:	jmp    0x44a070
  44a91e:	mov    rdx,QWORD PTR [rsp+0x60]
  44a923:	lea    rcx,[rip+0x1e8b]        # 0x44c7b5
  44a92a:	call   0x403050
  44a92f:	jmp    0x44a3f5
  44a934:	cmp    DWORD PTR [rip+0x17835],0x0        # 0x462170
  44a93b:	jne    0x44a75f
  44a941:	cmp    DWORD PTR [rip+0x6e8],0x0        # 0x44b030
  44a948:	jne    0x44ac8f
  44a94e:	cmp    DWORD PTR [rip+0x178a7],0x0        # 0x4621fc
  44a955:	je     0x44a3f5
  44a95b:	mov    edx,0x8
  44a960:	mov    ecx,0x3
  44a965:	call   0x43bb20
  44a96a:	mov    rdx,QWORD PTR [rip+0x17857]        # 0x4621c8
  44a971:	lea    rcx,[rip+0x1f0e]        # 0x44c886
  44a978:	mov    QWORD PTR [rax+0x10],0x0
  44a980:	mov    QWORD PTR [rax],rdx
  44a983:	mov    rdx,QWORD PTR [rip+0x1784e]        # 0x4621d8
  44a98a:	mov    QWORD PTR [rax+0x8],rdx
  44a98e:	mov    rdx,rax
  44a991:	call   0x403050
  44a996:	jmp    0x44a3f5
  44a99b:	mov    esi,DWORD PTR [rip+0x1780f]        # 0x4621b0
  44a9a1:	lea    rdx,[rip+0x2241]        # 0x44cbe9
  44a9a8:	lea    rcx,[rip+0x2251]        # 0x44cc00
  44a9af:	mov    r8d,esi
  44a9b2:	call   0x409260
  44a9b7:	mov    edx,esi
  44a9b9:	mov    rcx,rax
  44a9bc:	call   0x402340
  44a9c1:	mov    esi,DWORD PTR [rip+0x177c9]        # 0x462190
  44a9c7:	lea    rdx,[rip+0x2248]        # 0x44cc16
  44a9ce:	lea    rcx,[rip+0x2257]        # 0x44cc2c
  44a9d5:	mov    r8d,esi
  44a9d8:	call   0x409260
  44a9dd:	mov    edx,esi
  44a9df:	mov    rcx,rax
  44a9e2:	call   0x402340
  44a9e7:	mov    esi,DWORD PTR [rip+0x17783]        # 0x462170
  44a9ed:	lea    rdx,[rip+0x224d]        # 0x44cc41
  44a9f4:	lea    rcx,[rip+0x225d]        # 0x44cc58
  44a9fb:	mov    r8d,esi
  44a9fe:	call   0x409260
  44aa03:	mov    edx,esi
  44aa05:	mov    rcx,rax
  44aa08:	call   0x402340
  44aa0d:	jmp    0x44a749
  44aa12:	mov    rdi,QWORD PTR [rip+0x177d7]        # 0x4621f0
  44aa19:	mov    rsi,QWORD PTR [rip+0x177b8]        # 0x4621d8
  44aa20:	mov    rbx,QWORD PTR [rip+0x19d0d]        # 0x464734
  44aa27:	call   rbx
  44aa29:	lea    rdx,[rip+0x2260]        # 0x44cc90
  44aa30:	lea    rcx,[rax+0x60]
  44aa34:	mov    r9,rdi
  44aa37:	mov    r8,rsi
  44aa3a:	call   0x4498d0
  44aa3f:	call   rbx
  44aa41:	lea    rcx,[rax+0x60]
  44aa45:	call   0x401930
  44aa4a:	call   rbx
  44aa4c:	lea    rdx,[rip+0x2268]        # 0x44ccbb
  44aa53:	lea    rcx,[rax+0x60]
  44aa57:	call   0x4498d0
  44aa5c:	jmp    0x44a7ce
  44aa61:	lea    rax,[rip+0x1d50]        # 0x44c7b8
  44aa68:	mov    QWORD PTR [rip+0x17669],rax        # 0x4620d8
  44aa6f:	mov    rdx,rax
  44aa72:	jmp    0x449e1c
  44aa77:	or     BYTE PTR [rip+0x17652],0x2        # 0x4620d0
  44aa7e:	jmp    0x449be4
  44aa83:	lea    rcx,[rip+0x175f6]        # 0x462080
  44aa8a:	xor    edx,edx
  44aa8c:	call   0x439960
  44aa91:	mov    rax,QWORD PTR [rip+0x17600]        # 0x462098
  44aa98:	mov    r8,QWORD PTR [rip+0x17601]        # 0x4620a0
  44aa9f:	jmp    0x449bd4
  44aaa4:	mov    rcx,r14
  44aaa7:	lea    rsi,[rbp+0x10]
  44aaab:	call   0x401530
  44aab0:	mov    rcx,rax
  44aab3:	call   0x43bbf0
  44aab8:	mov    QWORD PTR [rbp+0x8],rax
  44aabc:	mov    rbp,rsi
  44aabf:	jmp    0x449f58
  44aac4:	movzx  ecx,BYTE PTR [rip+0x17626]        # 0x4620f1
  44aacb:	xor    r14d,r14d
  44aace:	mov    BYTE PTR [rip+0x1761e],cl        # 0x4620f2
  44aad4:	call   0x4050c0
  44aad9:	jmp    0x449b8b
  44aade:	lea    rdx,[rip+0x1d9a]        # 0x44c87f
  44aae5:	lea    rcx,[rip+0x17614]        # 0x462100
  44aaec:	mov    r8d,0x1
  44aaf2:	call   0x4050d0
  44aaf7:	test   rax,rax
  44aafa:	mov    QWORD PTR [rip+0x176c7],rax        # 0x4621c8
  44ab01:	jne    0x449dfd
  44ab07:	lea    rdx,[rip+0x1d78]        # 0x44c886
  44ab0e:	lea    rcx,[rip+0x1760b]        # 0x462120
  44ab15:	mov    r8d,0x1
  44ab1b:	call   0x4050d0
  44ab20:	test   rax,rax
  44ab23:	mov    QWORD PTR [rip+0x1769e],rax        # 0x4621c8
  44ab2a:	jne    0x449dfd
  44ab30:	lea    rdx,[rip+0x1d4f]        # 0x44c886
  44ab37:	lea    rcx,[rip+0x175c2]        # 0x462100
  44ab3e:	mov    r8d,0x1
  44ab44:	call   0x4050d0
  44ab49:	mov    QWORD PTR [rip+0x17678],rax        # 0x4621c8
  44ab50:	jmp    0x449dfd
  44ab55:	mov    rdx,QWORD PTR [rip+0x1757c]        # 0x4620d8
  44ab5c:	lea    rcx,[rip+0x1759d]        # 0x462100
  44ab63:	mov    r8d,0x1
  44ab69:	call   0x4050d0
  44ab6e:	test   rax,rax
  44ab71:	mov    QWORD PTR [rsp+0x88],rax
  44ab79:	je     0x449e46
  44ab7f:	jmp    0x449e3f
  44ab84:	lea    rdx,[rip+0x1ce2]        # 0x44c86d
  44ab8b:	lea    rcx,[rip+0x1758e]        # 0x462120
  44ab92:	mov    r8d,0x1
  44ab98:	call   0x4050d0
  44ab9d:	test   rax,rax
  44aba0:	mov    QWORD PTR [rsp+0x58],rax
  44aba5:	setne  BYTE PTR [rsp+0x7b]
  44abaa:	jne    0x449dab
  44abb0:	lea    rax,[rip+0x23a9]        # 0x44cf60
  44abb7:	lea    rcx,[rip+0x17562]        # 0x462120
  44abbe:	mov    r8d,0x1
  44abc4:	mov    rdx,QWORD PTR [rax+r14*8]
  44abc8:	call   0x4050d0
  44abcd:	test   rax,rax
  44abd0:	mov    QWORD PTR [rsp+0x58],rax
  44abd5:	jne    0x449dab
  44abdb:	mov    rdx,QWORD PTR [rsp+r14*8+0x90]
  44abe3:	lea    rcx,[rip+0x17516]        # 0x462100
  44abea:	mov    r8d,0x1
  44abf0:	call   0x4050d0
  44abf5:	mov    QWORD PTR [rsp+0x58],rax
  44abfa:	jmp    0x449dab
  44abff:	lea    rdx,[rip+0x1c72]        # 0x44c878
  44ac06:	lea    rcx,[rip+0x174f3]        # 0x462100
  44ac0d:	mov    r8d,0x1
  44ac13:	call   0x4050d0
  44ac18:	test   rax,rax
  44ac1b:	mov    QWORD PTR [rip+0x175ae],rax        # 0x4621d0
  44ac22:	jne    0x449dd4
  44ac28:	lea    rdx,[rip+0x1c4d]        # 0x44c87c
  44ac2f:	lea    rcx,[rip+0x174ea]        # 0x462120
  44ac36:	mov    r8d,0x1
  44ac3c:	call   0x4050d0
  44ac41:	test   rax,rax
  44ac44:	mov    QWORD PTR [rip+0x17585],rax        # 0x4621d0
  44ac4b:	jne    0x449dd4
  44ac51:	lea    rdx,[rip+0x1c24]        # 0x44c87c
  44ac58:	lea    rcx,[rip+0x174a1]        # 0x462100
  44ac5f:	mov    r8d,0x1
  44ac65:	call   0x4050d0
  44ac6a:	mov    QWORD PTR [rip+0x1755f],rax        # 0x4621d0
  44ac71:	jmp    0x449dd4
  44ac76:	add    r13,0xa
  44ac7a:	mov    rsi,rbp
  44ac7d:	mov    rbx,r14
  44ac80:	mov    QWORD PTR [rip+0x3a1],r13        # 0x44b028
  44ac87:	mov    r12,r15
  44ac8a:	jmp    0x44a070
  44ac8f:	mov    r8,QWORD PTR [rsp+0x38]
  44ac94:	mov    rdx,QWORD PTR [rsp+0x40]
  44ac99:	xor    r9d,r9d
  44ac9c:	mov    rcx,QWORD PTR [rsp+0x48]
  44aca1:	call   0x403080
  44aca6:	jmp    0x44a94e
  44acab:	lea    rcx,[rip+0x1b23]        # 0x44c7d5
  44acb2:	call   0x407080
  44acb7:	lea    rcx,[rip+0x1b87]        # 0x44c845
  44acbe:	call   0x407080
  44acc3:	mov    rdx,QWORD PTR [rip+0x17526]        # 0x4621f0
  44acca:	lea    rcx,[rip+0x1f9d]        # 0x44cc6e
  44acd1:	call   0x407080
  44acd6:	mov    rdx,QWORD PTR [rip+0x17513]        # 0x4621f0
  44acdd:	lea    rcx,[rip+0x1f97]        # 0x44cc7b
  44ace4:	call   0x407080
  44ace9:	nop
  44acea:	nop
  44aceb:	nop
  44acec:	nop
  44aced:	nop
  44acee:	nop
  44acef:	nop
  44acf0:	(bad)  
  44acf1:	(bad)  
  44acf2:	(bad)  
  44acf3:	(bad)  
  44acf4:	(bad)  
  44acf5:	(bad)  
  44acf6:	(bad)  
  44acf7:	inc    DWORD PTR [rax]
  44acf9:	add    BYTE PTR [rax],al
  44acfb:	add    BYTE PTR [rax],al
  44acfd:	add    BYTE PTR [rax],al
  44acff:	add    bh,bh
  44ad01:	(bad)  
  44ad02:	(bad)  
  44ad03:	(bad)  
  44ad04:	(bad)  
  44ad05:	(bad)  
  44ad06:	(bad)  
  44ad07:	inc    DWORD PTR [rax]
  44ad09:	add    BYTE PTR [rax],al
  44ad0b:	add    BYTE PTR [rax],al
  44ad0d:	add    BYTE PTR [rax],al
	...
