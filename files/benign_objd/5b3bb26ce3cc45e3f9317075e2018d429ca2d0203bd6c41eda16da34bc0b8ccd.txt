
5b3bb26ce3cc45e3f9317075e2018d429ca2d0203bd6c41eda16da34bc0b8ccd.exe:     file format pei-i386


Disassembly of section .text:

10001000 <.text>:
10001000:	pop    edx
10001001:	add    BYTE PTR gs:[eax],al
10001004:	dec    edx
10001005:	add    BYTE PTR gs:[eax],al
10001008:	xor    ah,BYTE PTR [ebp+0x0]
1000100b:	add    BYTE PTR [edx],ah
1000100d:	add    BYTE PTR gs:[eax],al
10001010:	push   cs
10001011:	add    BYTE PTR gs:[eax],al
10001014:	add    BYTE PTR [ebp+0x0],ah
10001017:	add    BYTE PTR [eax],al
10001019:	add    BYTE PTR [eax],al
1000101b:	add    BYTE PTR [edi+eiz*2],ah
1000101e:	add    BYTE PTR [eax],al
10001020:	adc    BYTE PTR [edi+0x0],ah
10001023:	add    BYTE PTR [eax],al
10001025:	add    BYTE PTR [bx+si],al
10001028:	out    0x66,al
1000102a:	add    BYTE PTR [eax],al
1000102c:	shl    BYTE PTR [esi+0x0],cl
1000102f:	add    dh,al
10001031:	data16 add BYTE PTR [eax],al
10001034:	mov    edx,0xa8000066
10001039:	data16 add BYTE PTR [eax],al
1000103c:	xchg   edx,eax
1000103d:	data16 add BYTE PTR [eax],al
10001040:	and    BYTE PTR [esi+0x0],0x0
10001044:	jo     0x100010ac
10001046:	add    BYTE PTR [eax],al
10001048:	pusha  
10001049:	data16 add BYTE PTR [eax],al
1000104c:	inc    esi
1000104d:	data16 add BYTE PTR [eax],al
10001050:	data16 add BYTE PTR ss:[eax],al
10001054:	sbb    ah,BYTE PTR [esi+0x0]
10001057:	add    BYTE PTR [esi+eiz*2],al
1000105a:	add    BYTE PTR [eax],al
1000105c:	sub    al,0x67
1000105e:	add    BYTE PTR [eax],al
10001060:	add    BYTE PTR ds:[bx+si],al
10001064:	pop    edx
10001065:	add    BYTE PTR [bx+si],al
10001068:	push   0x67
1000106a:	add    BYTE PTR [eax],al
1000106c:	test   BYTE PTR [edi+0x0],ah
1000106f:	add    BYTE PTR [eax-0x57ffff99],bl
10001075:	add    BYTE PTR [bx+si],al
10001078:	mov    esi,0xdc000067
1000107d:	add    BYTE PTR [bx+si],al
10001080:	cli    
10001081:	add    BYTE PTR [bx+si],al
10001084:	adc    al,0x68
10001086:	add    BYTE PTR [eax],al
10001088:	sub    ch,BYTE PTR [eax+0x0]
1000108b:	add    BYTE PTR [eax+0x68],al
1000108e:	add    BYTE PTR [eax],al
10001090:	pushf  
10001091:	add    BYTE PTR gs:[eax],al
10001094:	pop    edx
10001095:	push   0x68760000
1000109a:	add    BYTE PTR [eax],al
1000109c:	and    BYTE PTR [ebp+0x0],0x0
100010a0:	mov    WORD PTR [ebp+0x0],fs
100010a3:	add    dl,dh
100010a5:	add    BYTE PTR gs:[eax],al
100010a8:	mov    al,0x65
100010aa:	add    BYTE PTR [eax],al
100010ac:	shl    BYTE PTR [ebp+0x0],0x0
100010b0:	into   
100010b1:	add    BYTE PTR gs:[eax],al
100010b4:	in     al,0x65
100010b6:	add    BYTE PTR [eax],al
100010b8:	add    BYTE PTR [eax],al
100010ba:	add    BYTE PTR [eax],al
100010bc:	jmp    0x64:0xda000064
100010c3:	add    al,cl
100010c5:	add    BYTE PTR fs:[eax],al
100010c8:	mov    dh,0x64
100010ca:	add    BYTE PTR [eax],al
100010cc:	lods   al,BYTE PTR ds:[esi]
100010cd:	add    BYTE PTR fs:[eax],al
100010d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100010d1:	add    BYTE PTR fs:[eax],al
100010d4:	xchg   esi,eax
100010d5:	add    BYTE PTR fs:[eax],al
100010d8:	mov    WORD PTR [eax+eax*1+0x0],fs
100010dc:	jb     0x10001142
100010de:	add    BYTE PTR [eax],al
100010e0:	pop    esi
100010e1:	add    BYTE PTR fs:[eax],al
100010e4:	inc    eax
100010e5:	add    BYTE PTR fs:[eax],al
100010e8:	cs add BYTE PTR fs:[eax],al
100010ec:	and    BYTE PTR [eax+eax*1+0x0],ah
100010f0:	adc    BYTE PTR [eax+eax*1+0x0],ah
100010f4:	add    BYTE PTR [eax+eax*1+0x0],ah
100010f8:	in     al,dx
100010f9:	arpl   WORD PTR [eax],ax
100010fb:	add    dh,dl
100010fd:	arpl   WORD PTR [eax],ax
100010ff:	add    al,cl
10001101:	arpl   WORD PTR [eax],ax
10001103:	add    BYTE PTR [ebx+eiz*2+0x63ae0000],bh
1000110a:	add    BYTE PTR [eax],al
1000110c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000110d:	arpl   WORD PTR [eax],ax
1000110f:	add    BYTE PTR [eax-0x6fffff9d],bl
10001115:	arpl   WORD PTR [eax],ax
10001117:	add    BYTE PTR [esi+0x74000063],al
1000111d:	arpl   WORD PTR [eax],ax
1000111f:	add    BYTE PTR [esi+0x63],ah
10001122:	add    BYTE PTR [eax],al
10001124:	pop    edx
10001125:	arpl   WORD PTR [eax],ax
10001127:	add    BYTE PTR [eax+0x63],dl
1000112a:	add    BYTE PTR [eax],al
1000112c:	inc    edx
1000112d:	arpl   WORD PTR [eax],ax
1000112f:	add    BYTE PTR [edx],dh
10001131:	arpl   WORD PTR [eax],ax
10001133:	add    BYTE PTR [esi],ah
10001135:	arpl   WORD PTR [eax],ax
10001137:	add    BYTE PTR [esi],dl
10001139:	arpl   WORD PTR [eax],ax
1000113b:	add    BYTE PTR [esi],al
1000113d:	arpl   WORD PTR [eax],ax
1000113f:	add    ah,bh
10001141:	bound  eax,QWORD PTR [eax]
10001143:	add    ah,ch
10001145:	bound  eax,QWORD PTR [eax]
10001147:	add    ah,bl
10001149:	bound  eax,QWORD PTR [eax]
1000114b:	add    dl,dl
1000114d:	bound  eax,QWORD PTR [eax]
1000114f:	add    al,cl
10001151:	bound  eax,QWORD PTR [eax]
10001153:	add    BYTE PTR [esi-0x4dffff9e],bh
10001159:	bound  eax,QWORD PTR [eax]
1000115b:	add    BYTE PTR [edx+eiz*2+0x0],bl
10001162:	add    BYTE PTR [eax],al
10001164:	add    BYTE PTR [ecx+0x0],ch
10001167:	add    BYTE PTR [eax],al
10001169:	add    BYTE PTR [eax],al
1000116b:	add    BYTE PTR [eax+0x68],bl
10001171:	add    BYTE PTR [eax],al
10001173:	add    ah,al
10001175:	push   0x68b20000
1000117a:	add    BYTE PTR [eax],al
1000117c:	fisubr DWORD PTR [eax+0x0]
	...
10001187:	add    ch,ah
10001189:	dec    edx
1000118a:	add    BYTE PTR [eax],dl
	...
10001194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10001195:	dec    esp
10001196:	add    BYTE PTR [eax],dl
10001198:	pop    ds
10001199:	push   ecx
1000119a:	add    BYTE PTR [eax],dl
	...
100011a4:	cmc    
100011a5:	cmc    
100011a6:	dec    edx
100011a7:	push   ebp
100011a8:	add    BYTE PTR [eax],al
100011aa:	add    BYTE PTR [eax],al
100011ac:	add    al,BYTE PTR [eax]
100011ae:	add    BYTE PTR [eax],al
100011b0:	and    DWORD PTR [eax],eax
100011b2:	add    BYTE PTR [eax],al
100011b4:	or     BYTE PTR ds:0x9080000,dl
100011ba:	add    BYTE PTR [eax],al
100011bc:	and    eax,0x65004700
100011c1:	add    BYTE PTR [esi+0x0],ch
100011c4:	add    BYTE PTR gs:[edx+0x0],dh
100011c8:	popa   
100011c9:	add    BYTE PTR [eax+eax*1+0x5f],ch
100011cd:	add    BYTE PTR [ecx+0x0],al
100011d0:	jo     0x100011d2
100011d2:	jo     0x100011d4
100011d4:	dec    esi
100011d5:	add    BYTE PTR [ecx+0x0],ah
100011d8:	ins    DWORD PTR es:[edi],dx
100011d9:	add    BYTE PTR [ebp+0x0],ah
100011dc:	and    eax,0x2e000000
100011e1:	add    BYTE PTR [ebx+0x0],ah
100011e4:	jbe    0x100011e6
100011e6:	jb     0x100011e8
100011e8:	add    BYTE PTR [eax],al
100011ea:	add    BYTE PTR [eax],al
100011ec:	dec    ebp
100011ed:	add    BYTE PTR [ebp+0x0],dh
100011f0:	je     0x100011f2
100011f2:	add    BYTE PTR gs:[eax+0x0],bh
100011f6:	and    BYTE PTR [eax],al
100011f8:	ja     0x100011fa
100011fa:	push   0x6c006900
100011ff:	add    BYTE PTR [ebp+0x0],ah
10001202:	and    BYTE PTR [eax],al
10001204:	imul   eax,DWORD PTR [eax],0x20006e
1000120a:	outs   dx,BYTE PTR ds:[esi]
1000120b:	add    BYTE PTR [edi+0x0],ch
1000120e:	je     0x10001210
10001210:	imul   eax,DWORD PTR [eax],0x790066
10001216:	and    BYTE PTR [eax],al
10001218:	ins    BYTE PTR es:[edi],dx
10001219:	add    BYTE PTR [edi+0x0],ch
1000121c:	outs   dx,DWORD PTR ds:[esi]
1000121d:	add    BYTE PTR [eax+0x0],dh
10001220:	add    BYTE PTR [eax],al
10001222:	add    BYTE PTR [eax],al
10001224:	dec    esi
10001225:	add    BYTE PTR [edi+0x0],ch
10001228:	je     0x1000122a
1000122a:	imul   eax,DWORD PTR [eax],0x690066
10001230:	arpl   WORD PTR [eax],ax
10001232:	popa   
10001233:	add    BYTE PTR [eax+eax*1+0x69],dh
10001237:	add    BYTE PTR [edi+0x0],ch
1000123a:	outs   dx,BYTE PTR ds:[esi]
1000123b:	add    BYTE PTR [eax],ah
1000123d:	add    BYTE PTR [eax+0x0],ch
10001240:	popa   
10001241:	add    BYTE PTR [esi+0x0],ch
10001244:	add    BYTE PTR fs:[eax+eax*1+0x65],ch
10001249:	add    BYTE PTR [ebx+0x0],dh
1000124c:	add    BYTE PTR [eax],al
1000124e:	add    BYTE PTR [eax],al
10001250:	inc    ecx
10001251:	add    BYTE PTR [eax+0x0],dl
10001254:	push   eax
10001255:	add    BYTE PTR [ebx+0x0],al
10001258:	push   edx
10001259:	add    BYTE PTR [ecx+0x0],al
1000125c:	push   ebx
1000125d:	add    BYTE PTR [eax+0x0],cl
10001260:	add    BYTE PTR [eax],al
10001262:	add    BYTE PTR [eax],al
10001264:	and    al,BYTE PTR [eax]
10001266:	add    BYTE PTR [eax],al
10001268:	push   edi
10001269:	gs jb  0x100012be
1000126c:	gs jo  0x100012de
1000126f:	jb     0x100012e5
10001271:	inc    ebx
10001272:	ins    BYTE PTR es:[edi],dx
10001273:	outs   dx,DWORD PTR ds:[esi]
10001274:	jae    0x100012db
10001276:	dec    eax
10001277:	popa   
10001278:	outs   dx,BYTE PTR ds:[esi]
10001279:	fs ins BYTE PTR es:[edi],dx
1000127b:	add    BYTE PTR gs:[eax],al
1000127e:	add    BYTE PTR [eax],al
10001280:	push   edi
10001281:	gs jb  0x100012d6
10001284:	gs jo  0x100012f6
10001287:	jb     0x100012fd
10001289:	inc    ecx
1000128a:	fs fs inc esp
1000128d:	jne    0x100012fc
1000128f:	jo     0x10001291
10001291:	add    BYTE PTR [eax],al
10001293:	add    BYTE PTR [edi+0x65],dl
10001296:	jb     0x100012ea
10001298:	gs jo  0x1000130a
1000129b:	jb     0x10001311
1000129d:	push   ebx
1000129e:	jne    0x10001302
100012a0:	ins    DWORD PTR es:[edi],dx
100012a1:	imul   esi,DWORD PTR [eax+eax*1+0x57],0x65527265
100012a9:	jo     0x1000131a
100012ab:	jb     0x10001321
100012ad:	push   ebx
100012ae:	gs je  0x10001306
100012b1:	dec    ecx
100012b2:	dec    edi
100012b3:	jo     0x10001329
100012b5:	imul   ebp,DWORD PTR [edi+0x6e],0x0
100012bc:	push   edi
100012bd:	gs jb  0x10001312
100012c0:	gs jo  0x10001332
100012c3:	jb     0x10001339
100012c5:	inc    ecx
100012c6:	fs fs inc esi
100012c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x57000000
100012d1:	gs jb  0x10001326
100012d4:	gs jo  0x10001346
100012d7:	jb     0x1000134d
100012d9:	push   ebx
100012da:	gs je  0x1000132d
100012dd:	popa   
100012de:	jb     0x10001341
100012e0:	ins    DWORD PTR es:[edi],dx
100012e1:	gs je  0x10001349
100012e4:	jb     0x100012e6
100012e6:	add    BYTE PTR [eax],al
100012e8:	push   edi
100012e9:	gs jb  0x1000133e
100012ec:	gs jo  0x1000135e
100012ef:	jb     0x10001365
100012f1:	inc    ebx
100012f2:	jb     0x10001359
100012f4:	popa   
100012f5:	je     0x1000135c
100012f7:	add    BYTE PTR [eax+eax*1+0x77],bl
100012fb:	add    BYTE PTR [ebp+0x0],ah
100012fe:	jb     0x10001300
10001300:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
10001305:	add    BYTE PTR [eax+eax*1+0x0],ch
10001309:	add    BYTE PTR [eax],al
1000130b:	add    BYTE PTR [edx+0x61],ah
1000130e:	and    BYTE PTR fs:[ecx+0x6c],ah
10001312:	ins    BYTE PTR es:[edi],dx
10001313:	outs   dx,DWORD PTR ds:[esi]
10001314:	arpl   WORD PTR [ecx+0x74],sp
10001317:	imul   ebp,DWORD PTR [edi+0x6e],0x0
1000131e:	add    BYTE PTR [eax],al
10001320:	pop    esp
10001321:	add    BYTE PTR [eax],al
10001323:	add    BYTE PTR [eax+eax*1+0x72],ah
10001327:	add    BYTE PTR [edi+0x0],dh
1000132a:	popa   
1000132b:	add    BYTE PTR [eax+eax*1+0x73],dh
1000132f:	add    BYTE PTR [edi+0x0],ch
10001332:	outs   dx,BYTE PTR ds:[esi]
10001333:	add    BYTE PTR [eax],al
10001335:	add    BYTE PTR [eax],al
10001337:	add    BYTE PTR [eax+eax*1+0x72],ah
1000133b:	add    BYTE PTR [edi+0x0],dh
1000133e:	je     0x10001340
10001340:	jae    0x10001342
10001342:	outs   dx,BYTE PTR ds:[esi]
10001343:	add    BYTE PTR [ebx],dh
10001345:	add    BYTE PTR [edx],dh
	...
1000134f:	add    BYTE PTR [ebx+0x0],dl
10001352:	dec    edi
10001353:	add    BYTE PTR [esi+0x0],al
10001356:	push   esp
10001357:	add    BYTE PTR [edi+0x0],dl
1000135a:	inc    ecx
1000135b:	add    BYTE PTR [edx+0x0],dl
1000135e:	inc    ebp
1000135f:	add    BYTE PTR [eax+eax*1+0x4d],bl
10001363:	add    BYTE PTR [ecx+0x0],ch
10001366:	arpl   WORD PTR [eax],ax
10001368:	jb     0x1000136a
1000136a:	outs   dx,DWORD PTR ds:[esi]
1000136b:	add    BYTE PTR [ebx+0x0],dh
1000136e:	outs   dx,DWORD PTR ds:[esi]
1000136f:	add    BYTE PTR [esi+0x0],ah
10001372:	je     0x10001374
10001374:	pop    esp
10001375:	add    BYTE PTR [edi+0x0],dl
10001378:	imul   eax,DWORD PTR [eax],0x64006e
1000137e:	outs   dx,DWORD PTR ds:[esi]
1000137f:	add    BYTE PTR [edi+0x0],dh
10001382:	jae    0x10001384
10001384:	and    BYTE PTR [eax],al
10001386:	dec    esi
10001387:	add    BYTE PTR [eax+eax*1+0x5c],dl
1000138b:	add    BYTE PTR [ebx+0x0],al
1000138e:	jne    0x10001390
10001390:	jb     0x10001392
10001392:	jb     0x10001394
10001394:	add    BYTE PTR gs:[esi+0x0],ch
10001398:	je     0x1000139a
1000139a:	push   esi
1000139b:	add    BYTE PTR [ebp+0x0],ah
1000139e:	jb     0x100013a0
100013a0:	jae    0x100013a2
100013a2:	imul   eax,DWORD PTR [eax],0x6e006f
100013a8:	pop    esp
100013a9:	add    BYTE PTR [ecx+0x0],al
100013ac:	add    BYTE PTR gs:[eax+eax*1+0x65],al
100013b1:	add    BYTE PTR [edx+0x0],ah
100013b4:	jne    0x100013b6
100013b6:	add    BYTE PTR [bx+si],al
100013b9:	add    BYTE PTR [eax],al
100013bb:	add    BYTE PTR [eax+eax*1+0x65],al
100013bf:	add    BYTE PTR [edx+0x0],ah
100013c2:	jne    0x100013c4
100013c4:	add    BYTE PTR [bx+0x0],ah
100013c8:	add    BYTE PTR gs:[edx+0x0],dh
100013cc:	add    BYTE PTR [eax],al
100013ce:	add    BYTE PTR [eax],al
100013d0:	pop    esp
100013d1:	add    BYTE PTR [ebx+0x0],dl
100013d4:	je     0x100013d6
100013d6:	jb     0x100013d8
100013d8:	imul   eax,DWORD PTR [eax],0x67006e
100013de:	inc    esi
100013df:	add    BYTE PTR [ecx+0x0],ch
100013e2:	ins    BYTE PTR es:[edi],dx
100013e3:	add    BYTE PTR [ebp+0x0],ah
100013e6:	dec    ecx
100013e7:	add    BYTE PTR [esi+0x0],ch
100013ea:	data16 add BYTE PTR [edi+0x0],ch
100013ee:	pop    esp
100013ef:	add    BYTE PTR ds:0x34003000,ah
100013f5:	add    BYTE PTR [eax+0x0],bh
100013f8:	and    eax,0x34003000
100013fd:	add    BYTE PTR [eax+0x0],bh
10001400:	pop    esp
10001401:	add    BYTE PTR ds:0x7300,ah
10001407:	add    BYTE PTR [eax+eax*1+0x56],bl
1000140b:	add    BYTE PTR [ecx+0x0],ah
1000140e:	jb     0x10001410
10001410:	inc    esi
10001411:	add    BYTE PTR [ecx+0x0],ch
10001414:	ins    BYTE PTR es:[edi],dx
10001415:	add    BYTE PTR [ebp+0x0],ah
10001418:	dec    ecx
10001419:	add    BYTE PTR [esi+0x0],ch
1000141c:	data16 add BYTE PTR [edi+0x0],ch
10001420:	pop    esp
10001421:	add    BYTE PTR [eax+eax*1+0x72],dl
10001425:	add    BYTE PTR [ecx+0x0],ah
10001428:	outs   dx,BYTE PTR ds:[esi]
10001429:	add    BYTE PTR [ebx+0x0],dh
1000142c:	ins    BYTE PTR es:[edi],dx
1000142d:	add    BYTE PTR [ecx+0x0],ah
10001430:	je     0x10001432
10001432:	imul   eax,DWORD PTR [eax],0x6e006f
10001438:	add    BYTE PTR [eax],al
1000143a:	add    BYTE PTR [eax],al
1000143c:	and    eax,0x38003000
10001441:	add    BYTE PTR [eax+0x0],bh
10001444:	add    BYTE PTR [eax],al
10001446:	add    BYTE PTR [eax],al
10001448:	and    eax,0x2e006400
1000144d:	add    BYTE PTR ds:0x2e006400,ah
10001453:	add    BYTE PTR ds:0x2e006400,ah
10001459:	add    BYTE PTR ds:0x6400,ah
1000145f:	add    BYTE PTR [ebp+0x0],ch
10001462:	outs   dx,DWORD PTR ds:[esi]
10001463:	add    BYTE PTR [eax+eax*1+0x64],ah
10001467:	add    BYTE PTR [ecx+0x0],ch
1000146a:	jb     0x1000146c
1000146c:	add    BYTE PTR [eax],al
1000146e:	add    BYTE PTR [eax],al
10001470:	jne    0x10001472
10001472:	outs   dx,BYTE PTR ds:[esi]
10001473:	add    BYTE PTR [ebx+0x0],ch
10001476:	outs   dx,BYTE PTR ds:[esi]
10001477:	add    BYTE PTR [edi+0x0],ch
1000147a:	ja     0x1000147c
1000147c:	outs   dx,BYTE PTR ds:[esi]
1000147d:	add    BYTE PTR [eax],al
1000147f:	add    BYTE PTR [ecx+0x0],ah
10001482:	jo     0x10001484
10001484:	jo     0x10001486
10001486:	add    BYTE PTR fs:[ecx+0x0],ch
1000148a:	jb     0x1000148c
1000148c:	add    BYTE PTR [eax],al
1000148e:	add    BYTE PTR [eax],al
10001490:	inc    ecx
10001491:	add    BYTE PTR [eax+0x0],dh
10001494:	jo     0x10001496
10001496:	ins    BYTE PTR es:[edi],dx
10001497:	add    BYTE PTR [ecx+0x0],ch
1000149a:	arpl   WORD PTR [eax],ax
1000149c:	popa   
1000149d:	add    BYTE PTR [eax+eax*1+0x69],dh
100014a1:	add    BYTE PTR [edi+0x0],ch
100014a4:	outs   dx,BYTE PTR ds:[esi]
100014a5:	add    BYTE PTR [eax],ah
100014a7:	add    BYTE PTR [ebp+0x0],al
100014aa:	jb     0x100014ac
100014ac:	jb     0x100014ae
100014ae:	outs   dx,DWORD PTR ds:[esi]
100014af:	add    BYTE PTR [edx+0x0],dh
100014b2:	add    BYTE PTR [eax],al
100014b4:	add    BYTE PTR [eax],al
100014b6:	add    BYTE PTR [eax],al
100014b8:	loopne 0x1000152a
100014ba:	add    BYTE PTR [eax],dl
100014bc:	cmp    BYTE PTR [ecx+0x0],dh
100014bf:	adc    BYTE PTR [eax+0x0],cl
	...
100014fa:	add    BYTE PTR [eax],al
100014fc:	pusha  
100014fd:	jo     0x100014ff
100014ff:	adc    BYTE PTR [eax],dh
10001501:	adc    eax,0x161000
10001506:	add    BYTE PTR [eax],al
10001508:	push   edx
10001509:	push   ebx
1000150a:	inc    esp
1000150b:	push   ebx
1000150c:	push   ss
1000150d:	test   eax,0xa6e0649e
10001512:	fs dec edx
10001514:	mov    dl,0x59
10001516:	jmp    0x1000150f
10001518:	xor    eax,0x1cec34f
1000151d:	add    BYTE PTR [eax],al
1000151f:	add    BYTE PTR [edi+esi*2+0x32],ah
10001523:	xor    BYTE PTR [esi],ch
10001525:	jo     0x1000158b
10001527:	bound  eax,QWORD PTR [eax]
10001529:	add    BYTE PTR [eax],al
1000152b:	add    BYTE PTR [eax],al
1000152d:	add    BYTE PTR [eax],al
1000152f:	add    BYTE PTR [edi+0x8000050],bh
10001535:	push   esi
10001536:	add    BYTE PTR [eax],al
10001538:	cmp    DWORD PTR [esi+0x0],edx
1000153b:	add    dh,bh
1000153d:	push   esi
1000153e:	add    BYTE PTR [eax],al
10001540:	and    al,0x57
10001542:	add    BYTE PTR [eax],al
10001544:	push   edi
10001545:	push   edi
10001546:	add    BYTE PTR [eax],al
10001548:	xchg   DWORD PTR [edi+0x0],edx
1000154b:	add    BYTE PTR [edx-0x3affffa9],ch
10001551:	push   edi
10001552:	add    BYTE PTR [eax],al
10001554:	loopne 0x100015ad
10001556:	add    BYTE PTR [eax],al
10001558:	sti    
10001559:	push   edi
1000155a:	add    BYTE PTR [eax],al
1000155c:	push   ss
1000155d:	pop    eax
1000155e:	add    BYTE PTR [eax],al
10001560:	xor    DWORD PTR [eax+0x0],ebx
10001563:	add    BYTE PTR [eax+ebx*2+0x0],dl
10001567:	add    BYTE PTR [edi+0x58],ch
1000156a:	add    BYTE PTR [eax],al
1000156c:	mov    al,ds:0xc3000058
10001571:	pop    eax
10001572:	add    BYTE PTR [eax],al
10001574:	ficomp WORD PTR [eax+0x0]
10001577:	add    BYTE PTR [edx+0x59],bh
1000157a:	add    BYTE PTR [eax],al
1000157c:	popf   
1000157d:	pop    ecx
1000157e:	add    BYTE PTR [eax],al
10001580:	rcr    BYTE PTR [ecx+0x0],0x0
10001584:	icebp  
10001585:	pop    ecx
	...
1000159e:	add    BYTE PTR [eax],al
100015a0:	push   ebp
100015a1:	mov    ebp,esp
100015a3:	mov    eax,DWORD PTR [ebp+0x8]
100015a6:	test   eax,eax
100015a8:	je     0x100015ca
100015aa:	mov    edx,DWORD PTR [ebp+0xc]
100015ad:	test   edx,edx
100015af:	je     0x100015ca
100015b1:	and    DWORD PTR [eax],0x0
100015b4:	mov    DWORD PTR [edx],0x1
100015ba:	test   BYTE PTR [ecx+0x180],0xc
100015c1:	je     0x100015c6
100015c3:	or     DWORD PTR [eax],0x4
100015c6:	xor    eax,eax
100015c8:	jmp    0x100015cf
100015ca:	mov    eax,0x80070057
100015cf:	pop    ebp
100015d0:	ret    0x8
100015d3:	push   0xc
100015d5:	mov    eax,0x100059c0
100015da:	call   0x10004da3
100015df:	mov    edi,ecx
100015e1:	lea    ecx,[ebp-0x18]
100015e4:	call   0x10003156
100015e9:	xor    ebx,ebx
100015eb:	mov    DWORD PTR [ebp-0x4],ebx
100015ee:	lea    esi,[edi+0xe4]
100015f4:	mov    ecx,esi
100015f6:	call   0x100031e1
100015fb:	test   eax,eax
100015fd:	je     0x1000164b
100015ff:	push   esi
10001600:	lea    ecx,[ebp-0x18]
10001603:	call   0x100036c3
10001608:	test   eax,eax
1000160a:	jl     0x1000164b
1000160c:	cmp    ebx,0x3
1000160f:	je     0x10001616
10001611:	cmp    ebx,0x4
10001614:	jne    0x10001638
10001616:	mov    ecx,edi
10001618:	call   0x100031e1
1000161d:	test   eax,eax
1000161f:	je     0x10001638
10001621:	push   0x0
10001623:	mov    ecx,edi
10001625:	call   0x10003189
1000162a:	push   eax
1000162b:	push   0x100011bc
10001630:	lea    ecx,[ebp-0x18]
10001633:	call   0x100038ab
10001638:	lea    ecx,[ebp-0x18]
1000163b:	call   0x10003189
10001640:	push   eax
10001641:	push   ebx
10001642:	push   DWORD PTR [ebp+0x8]
10001645:	call   DWORD PTR ds:0x10007098
1000164b:	inc    ebx
1000164c:	add    esi,0xc
1000164f:	cmp    ebx,0xb
10001652:	jb     0x100015f4
10001654:	or     DWORD PTR [ebp-0x4],0xffffffff
10001658:	lea    ecx,[ebp-0x18]
1000165b:	call   0x10003180
10001660:	xor    eax,eax
10001662:	call   0x10004e7b
10001667:	ret    0x4
1000166a:	xor    eax,eax
1000166c:	ret    0x4
1000166f:	push   ebp
10001670:	mov    ebp,esp
10001672:	push   ebx
10001673:	push   esi
10001674:	lea    esi,[ecx+0x6c]
10001677:	push   edi
10001678:	mov    ecx,esi
1000167a:	mov    ebx,0x80004005
1000167f:	call   0x10003189
10001684:	test   eax,eax
10001686:	je     0x100016c4
10001688:	mov    ecx,esi
1000168a:	call   0x10003189
1000168f:	xor    edi,edi
10001691:	cmp    WORD PTR [eax],di
10001694:	je     0x100016c4
10001696:	mov    ecx,esi
10001698:	call   0x100031e1
1000169d:	test   eax,eax
1000169f:	je     0x100016b7
100016a1:	mov    ecx,esi
100016a3:	call   0x10003189
100016a8:	push   eax
100016a9:	push   0x0
100016ab:	push   edi
100016ac:	push   DWORD PTR [ebp+0x8]
100016af:	call   DWORD PTR ds:0x10007090
100016b5:	mov    ebx,eax
100016b7:	inc    edi
100016b8:	add    esi,0xc
100016bb:	cmp    edi,0xa
100016be:	jb     0x10001696
100016c0:	mov    eax,ebx
100016c2:	jmp    0x100016c9
100016c4:	mov    eax,0xe0000000
100016c9:	pop    edi
100016ca:	pop    esi
100016cb:	pop    ebx
100016cc:	pop    ebp
100016cd:	ret    0x4
100016d0:	push   ebp
100016d1:	mov    ebp,esp
100016d3:	cmp    DWORD PTR [ebp+0x8],0x0
100016d7:	je     0x100016ff
100016d9:	push   0x2e
100016db:	push   DWORD PTR [ebp+0x8]
100016de:	call   DWORD PTR ds:0x10001154
100016e4:	test   eax,eax
100016e6:	pop    ecx
100016e7:	pop    ecx
100016e8:	je     0x100016ff
100016ea:	push   0x100011e0
100016ef:	push   eax
100016f0:	call   DWORD PTR ds:0x10001158
100016f6:	neg    eax
100016f8:	pop    ecx
100016f9:	sbb    eax,eax
100016fb:	pop    ecx
100016fc:	inc    eax
100016fd:	jmp    0x10001701
100016ff:	xor    eax,eax
10001701:	pop    ebp
10001702:	ret    0x4
10001705:	push   0x14
10001707:	mov    eax,0x10005608
1000170c:	call   0x10004da3
10001711:	mov    DWORD PTR [ebp-0x14],ecx
10001714:	lea    ecx,[ebp-0x20]
10001717:	call   0x10003156
1000171c:	and    DWORD PTR [ebp-0x4],0x0
10001720:	mov    esi,DWORD PTR [ebp+0xc]
10001723:	test   esi,esi
10001725:	mov    eax,DWORD PTR [ebp+0x14]
10001728:	mov    DWORD PTR [ebp-0x10],eax
1000172b:	je     0x100017d6
10001731:	cmp    DWORD PTR [ebp+0x8],0x0
10001735:	je     0x100017d6
1000173b:	mov    edi,DWORD PTR ds:0x10001150
10001741:	jmp    0x100017a3
10001743:	mov    eax,ebx
10001745:	sub    eax,esi
10001747:	sar    eax,1
10001749:	push   eax
1000174a:	push   esi
1000174b:	lea    ecx,[ebp-0x20]
1000174e:	call   0x100036d4
10001753:	mov    esi,eax
10001755:	test   esi,esi
10001757:	jl     0x100017c6
10001759:	mov    esi,DWORD PTR [ebp+0x14]
1000175c:	lea    ecx,[ebp-0x20]
1000175f:	mov    DWORD PTR [ebp-0x10],esi
10001762:	call   0x10003189
10001767:	mov    ecx,DWORD PTR [ebp-0x14]
1000176a:	push   eax
1000176b:	call   0x100016d0
10001770:	test   eax,eax
10001772:	je     0x1000177c
10001774:	mov    eax,esi
10001776:	or     eax,0x2
10001779:	mov    DWORD PTR [ebp-0x10],eax
1000177c:	push   DWORD PTR [ebp-0x10]
1000177f:	lea    ecx,[ebp-0x20]
10001782:	push   DWORD PTR [ebp+0x10]
10001785:	call   0x10003189
1000178a:	push   eax
1000178b:	push   DWORD PTR [ebp+0x8]
1000178e:	call   DWORD PTR ds:0x10007094
10001794:	test   eax,eax
10001796:	jge    0x100017a0
10001798:	lea    ecx,[ebp-0x20]
1000179b:	call   0x10003189
100017a0:	lea    esi,[ebx+0x2]
100017a3:	push   0x7c
100017a5:	push   esi
100017a6:	call   edi
100017a8:	mov    ebx,eax
100017aa:	test   ebx,ebx
100017ac:	pop    ecx
100017ad:	pop    ecx
100017ae:	jne    0x10001743
100017b0:	test   esi,esi
100017b2:	je     0x100017c4
100017b4:	push   DWORD PTR [ebp-0x10]
100017b7:	push   DWORD PTR [ebp+0x10]
100017ba:	push   esi
100017bb:	push   DWORD PTR [ebp+0x8]
100017be:	call   DWORD PTR ds:0x10007094
100017c4:	xor    esi,esi
100017c6:	or     DWORD PTR [ebp-0x4],0xffffffff
100017ca:	lea    ecx,[ebp-0x20]
100017cd:	call   0x10003180
100017d2:	mov    eax,esi
100017d4:	jmp    0x100017e7
100017d6:	or     DWORD PTR [ebp-0x4],0xffffffff
100017da:	lea    ecx,[ebp-0x20]
100017dd:	call   0x10003180
100017e2:	mov    eax,0x80070057
100017e7:	call   0x10004e7b
100017ec:	ret    0x10
100017ef:	push   ebp
100017f0:	mov    ebp,esp
100017f2:	push   ebx
100017f3:	push   esi
100017f4:	mov    esi,ecx
100017f6:	push   edi
100017f7:	lea    edi,[esi+0x30]
100017fa:	mov    ecx,edi
100017fc:	call   0x100031e1
10001801:	test   eax,eax
10001803:	mov    ebx,DWORD PTR [ebp+0x8]
10001806:	je     0x10001824
10001808:	mov    eax,DWORD PTR [esi+0x180]
1000180e:	and    eax,0x1
10001811:	push   eax
10001812:	push   0x5
10001814:	mov    ecx,edi
10001816:	call   0x10003189
1000181b:	push   eax
1000181c:	push   ebx
1000181d:	mov    ecx,esi
1000181f:	call   0x10001705
10001824:	lea    edi,[esi+0x3c]
10001827:	mov    ecx,edi
10001829:	call   0x100031e1
1000182e:	test   eax,eax
10001830:	je     0x10001846
10001832:	push   0x0
10001834:	push   0x5
10001836:	mov    ecx,edi
10001838:	call   0x10003189
1000183d:	push   eax
1000183e:	push   ebx
1000183f:	mov    ecx,esi
10001841:	call   0x10001705
10001846:	lea    edi,[esi+0x48]
10001849:	mov    ecx,edi
1000184b:	call   0x100031e1
10001850:	test   eax,eax
10001852:	je     0x10001868
10001854:	push   0x0
10001856:	push   0x4
10001858:	mov    ecx,edi
1000185a:	call   0x10003189
1000185f:	push   eax
10001860:	push   ebx
10001861:	mov    ecx,esi
10001863:	call   0x10001705
10001868:	lea    edi,[esi+0x54]
1000186b:	mov    ecx,edi
1000186d:	call   0x100031e1
10001872:	test   eax,eax
10001874:	je     0x10001896
10001876:	mov    eax,DWORD PTR [esi+0x180]
1000187c:	and    eax,0x1
1000187f:	push   eax
10001880:	push   0x3
10001882:	mov    ecx,edi
10001884:	call   0x10003189
10001889:	push   eax
1000188a:	push   ebx
1000188b:	mov    ecx,esi
1000188d:	call   0x10001705
10001892:	test   eax,eax
10001894:	jl     0x10001898
10001896:	xor    eax,eax
10001898:	pop    edi
10001899:	pop    esi
1000189a:	pop    ebx
1000189b:	pop    ebp
1000189c:	ret    0x4
1000189f:	push   esi
100018a0:	lea    esi,[ecx+0x190]
100018a6:	mov    eax,DWORD PTR [esi]
100018a8:	test   eax,eax
100018aa:	je     0x100018c0
100018ac:	push   edi
100018ad:	push   DWORD PTR [eax+0x18]
100018b0:	mov    edi,DWORD PTR ds:0x1000109c
100018b6:	call   edi
100018b8:	mov    eax,DWORD PTR [esi]
100018ba:	push   DWORD PTR [eax+0x20]
100018bd:	call   edi
100018bf:	pop    edi
100018c0:	pop    esi
100018c1:	ret    
100018c2:	xor    edx,edx
100018c4:	cmp    DWORD PTR [ecx+0x190],edx
100018ca:	jne    0x100018cf
100018cc:	xor    eax,eax
100018ce:	ret    
100018cf:	mov    eax,DWORD PTR [ecx+0x19c]
100018d5:	sub    eax,edx
100018d7:	push   esi
100018d8:	je     0x1000191b
100018da:	dec    eax
100018db:	je     0x100018ef
100018dd:	dec    eax
100018de:	je     0x100018e7
100018e0:	mov    eax,0x80004005
100018e5:	pop    esi
100018e6:	ret    
100018e7:	lea    eax,[ecx+0x198]
100018ed:	jmp    0x100018f5
100018ef:	lea    eax,[ecx+0x194]
100018f5:	cmp    DWORD PTR [eax],edx
100018f7:	je     0x1000191f
100018f9:	mov    edx,DWORD PTR [eax]
100018fb:	mov    esi,DWORD PTR [ecx+0x190]
10001901:	mov    edx,DWORD PTR [edx+0x40]
10001904:	mov    DWORD PTR [esi+0x9c94],edx
1000190a:	mov    eax,DWORD PTR [eax]
1000190c:	mov    ecx,DWORD PTR [ecx+0x190]
10001912:	mov    eax,DWORD PTR [eax+0x44]
10001915:	mov    DWORD PTR [ecx+0x9c98],eax
1000191b:	xor    eax,eax
1000191d:	pop    esi
1000191e:	ret    
1000191f:	mov    eax,0xe0000000
10001924:	pop    esi
10001925:	ret    
10001926:	lea    eax,[ecx+0x190]
1000192c:	cmp    DWORD PTR [eax],0x0
1000192f:	jne    0x10001937
10001931:	mov    eax,0xe0000000
10001936:	ret    
10001937:	mov    eax,DWORD PTR [eax]
10001939:	push   DWORD PTR [eax+0x9a84]
1000193f:	push   DWORD PTR [eax+0x28]
10001942:	call   DWORD PTR ds:0x10001090
10001948:	test   eax,eax
1000194a:	je     0x1000194f
1000194c:	xor    eax,eax
1000194e:	ret    
1000194f:	push   esi
10001950:	mov    esi,DWORD PTR ds:0x100010a0
10001956:	call   esi
10001958:	test   eax,eax
1000195a:	jg     0x10001960
1000195c:	call   esi
1000195e:	pop    esi
1000195f:	ret    
10001960:	call   esi
10001962:	and    eax,0xffff
10001967:	or     eax,0x80070000
1000196c:	pop    esi
1000196d:	ret    
1000196e:	lea    eax,[ecx+0x190]
10001974:	cmp    DWORD PTR [eax],0x0
10001977:	jne    0x1000197c
10001979:	xor    eax,eax
1000197b:	ret    
1000197c:	mov    ecx,DWORD PTR [eax]
1000197e:	mov    eax,DWORD PTR [ecx+0x9a84]
10001984:	and    eax,DWORD PTR [ecx+0x48]
10001987:	ret    
10001988:	lea    eax,[ecx+0x190]
1000198e:	cmp    DWORD PTR [eax],0x0
10001991:	jne    0x10001996
10001993:	xor    eax,eax
10001995:	ret    
10001996:	mov    ecx,DWORD PTR [eax]
10001998:	mov    eax,DWORD PTR [ecx+0x9a84]
1000199e:	and    eax,DWORD PTR [ecx+0x4c]
100019a1:	ret    
100019a2:	mov    edx,ecx
100019a4:	call   0x1000196e
100019a9:	test   eax,eax
100019ab:	jne    0x100019b9
100019ad:	mov    ecx,edx
100019af:	call   0x10001988
100019b4:	test   eax,eax
100019b6:	jne    0x100019b9
100019b8:	ret    
100019b9:	xor    eax,eax
100019bb:	inc    eax
100019bc:	ret    
100019bd:	push   ebp
100019be:	mov    ebp,esp
100019c0:	sub    esp,0x14
100019c3:	push   ebx
100019c4:	push   esi
100019c5:	mov    esi,ecx
100019c7:	mov    eax,DWORD PTR [esi+0x190]
100019cd:	xor    ebx,ebx
100019cf:	cmp    eax,ebx
100019d1:	mov    DWORD PTR [ebp-0x4],ebx
100019d4:	mov    DWORD PTR [ebp-0x8],0x80004005
100019db:	jne    0x100019e7
100019dd:	mov    eax,0xe0000000
100019e2:	jmp    0x10001a9c
100019e7:	cmp    DWORD PTR [eax+0x1c],ebx
100019ea:	je     0x100019dd
100019ec:	mov    ecx,DWORD PTR [eax+0x20]
100019ef:	mov    DWORD PTR [ebp-0x14],ecx
100019f2:	mov    ecx,DWORD PTR [eax+0x1c]
100019f5:	mov    DWORD PTR [ebp-0x10],ecx
100019f8:	mov    eax,DWORD PTR [eax+0x28]
100019fb:	push   edi
100019fc:	mov    DWORD PTR [ebp-0xc],eax
100019ff:	mov    edi,0x102
10001a04:	push   0x1d4c0
10001a09:	push   ebx
10001a0a:	lea    eax,[ebp-0x14]
10001a0d:	push   eax
10001a0e:	push   0x3
10001a10:	push   0x10001224
10001a15:	call   0x10003bdf
10001a1a:	cmp    eax,edi
10001a1c:	je     0x10001a98
10001a1e:	cmp    eax,0xffffffff
10001a21:	je     0x10001a98
10001a23:	sub    eax,ebx
10001a25:	je     0x10001a2f
10001a27:	dec    eax
10001a28:	je     0x10001a84
10001a2a:	dec    eax
10001a2b:	jne    0x10001a04
10001a2d:	jmp    0x10001a98
10001a2f:	mov    eax,DWORD PTR [esi+0x190]
10001a35:	push   0x2710
10001a3a:	push   DWORD PTR [eax+0x24]
10001a3d:	push   0x100011ec
10001a42:	call   0x10003c0a
10001a47:	cmp    eax,edi
10001a49:	je     0x10001a98
10001a4b:	cmp    eax,0x80
10001a50:	je     0x10001a89
10001a52:	mov    ecx,esi
10001a54:	call   0x100018c2
10001a59:	mov    eax,DWORD PTR [esi+0x190]
10001a5f:	cmp    DWORD PTR [eax+0x9c94],ebx
10001a65:	je     0x10001a79
10001a67:	mov    ecx,DWORD PTR [eax+0x9c98]
10001a6d:	cmp    ecx,ebx
10001a6f:	je     0x10001a79
10001a71:	cmp    ecx,DWORD PTR [ebp-0x4]
10001a74:	je     0x10001a79
10001a76:	mov    DWORD PTR [ebp-0x4],ecx
10001a79:	push   DWORD PTR [eax+0x24]
10001a7c:	call   DWORD PTR ds:0x100010a8
10001a82:	jmp    0x10001a04
10001a84:	mov    DWORD PTR [ebp-0x8],ebx
10001a87:	jmp    0x10001a98
10001a89:	mov    eax,DWORD PTR [esi+0x190]
10001a8f:	push   DWORD PTR [eax+0x24]
10001a92:	call   DWORD PTR ds:0x100010a8
10001a98:	mov    eax,DWORD PTR [ebp-0x8]
10001a9b:	pop    edi
10001a9c:	pop    esi
10001a9d:	pop    ebx
10001a9e:	leave  
10001a9f:	ret    
10001aa0:	cmp    DWORD PTR ds:0x10007084,0x0
10001aa7:	mov    edx,ecx
10001aa9:	jne    0x10001ad5
10001aab:	cmp    DWORD PTR [edx+0x190],0x0
10001ab2:	je     0x10001ad5
10001ab4:	push   esi
10001ab5:	call   0x10001988
10001aba:	xor    esi,esi
10001abc:	inc    esi
10001abd:	test   eax,eax
10001abf:	je     0x10001ace
10001ac1:	mov    ecx,edx
10001ac3:	mov    DWORD PTR [edx+0x1a0],esi
10001ac9:	call   0x1000189f
10001ace:	mov    DWORD PTR ds:0x10007084,esi
10001ad4:	pop    esi
10001ad5:	ret    
10001ad6:	mov    eax,DWORD PTR [ecx+0x190]
10001adc:	xor    ecx,ecx
10001ade:	cmp    eax,ecx
10001ae0:	jne    0x10001ae8
10001ae2:	mov    eax,0xe0000000
10001ae7:	ret    
10001ae8:	cmp    DWORD PTR [eax+0x24],ecx
10001aeb:	je     0x10001aff
10001aed:	cmp    DWORD PTR [eax+0x18],ecx
10001af0:	je     0x10001aff
10001af2:	cmp    DWORD PTR [eax+0x20],ecx
10001af5:	je     0x10001aff
10001af7:	cmp    DWORD PTR [eax+0x28],ecx
10001afa:	je     0x10001aff
10001afc:	xor    eax,eax
10001afe:	ret    
10001aff:	mov    eax,0x80004005
10001b04:	ret    
10001b05:	push   ebp
10001b06:	mov    ebp,esp
10001b08:	push   ecx
10001b09:	and    DWORD PTR [ebp-0x4],0x0
10001b0d:	push   esi
10001b0e:	mov    esi,ecx
10001b10:	mov    eax,DWORD PTR [esi+0x190]
10001b16:	test   eax,eax
10001b18:	je     0x10001b8d
10001b1a:	push   ebx
10001b1b:	push   edi
10001b1c:	mov    edi,DWORD PTR ds:0x100010b0
10001b22:	push   0x2710
10001b27:	push   DWORD PTR [eax+0x24]
10001b2a:	call   edi
10001b2c:	mov    ebx,eax
10001b2e:	test   ebx,ebx
10001b30:	je     0x10001b49
10001b32:	mov    ecx,esi
10001b34:	call   0x1000189f
10001b39:	cmp    ebx,0x80
10001b3f:	jne    0x10001b88
10001b41:	mov    eax,DWORD PTR [esi+0x190]
10001b47:	jmp    0x10001b62
10001b49:	mov    eax,DWORD PTR [esi+0x190]
10001b4f:	xor    ebx,ebx
10001b51:	inc    ebx
10001b52:	push   ebx
10001b53:	push   DWORD PTR [eax+0x18]
10001b56:	call   edi
10001b58:	test   eax,eax
10001b5a:	mov    eax,DWORD PTR [esi+0x190]
10001b60:	jne    0x10001b6d
10001b62:	push   DWORD PTR [eax+0x24]
10001b65:	call   DWORD PTR ds:0x100010a8
10001b6b:	jmp    0x10001b88
10001b6d:	push   DWORD PTR [eax+0x20]
10001b70:	call   DWORD PTR ds:0x1000109c
10001b76:	mov    eax,DWORD PTR [esi+0x190]
10001b7c:	push   DWORD PTR [eax+0x24]
10001b7f:	call   DWORD PTR ds:0x100010a8
10001b85:	mov    DWORD PTR [ebp-0x4],ebx
10001b88:	mov    eax,DWORD PTR [ebp-0x4]
10001b8b:	pop    edi
10001b8c:	pop    ebx
10001b8d:	pop    esi
10001b8e:	leave  
10001b8f:	ret    
10001b90:	push   ebp
10001b91:	mov    ebp,esp
10001b93:	sub    esp,0x28
10001b96:	push   ebx
10001b97:	push   esi
10001b98:	mov    esi,ecx
10001b9a:	mov    eax,DWORD PTR [esi+0x190]
10001ba0:	lea    ecx,[eax+0x8672]
10001ba6:	mov    DWORD PTR [ebp-0x28],ecx
10001ba9:	lea    ecx,[eax+0x8870]
10001baf:	mov    DWORD PTR [ebp-0x24],ecx
10001bb2:	lea    ecx,[eax+0x8a6e]
10001bb8:	mov    DWORD PTR [ebp-0x20],ecx
10001bbb:	lea    ecx,[eax+0x8c6c]
10001bc1:	mov    DWORD PTR [ebp-0x1c],ecx
10001bc4:	lea    ecx,[eax+0x8e6a]
10001bca:	mov    DWORD PTR [ebp-0x18],ecx
10001bcd:	lea    ecx,[eax+0x9068]
10001bd3:	mov    DWORD PTR [ebp-0x14],ecx
10001bd6:	lea    ecx,[eax+0x9266]
10001bdc:	mov    DWORD PTR [ebp-0x10],ecx
10001bdf:	lea    ecx,[eax+0x9464]
10001be5:	mov    DWORD PTR [ebp-0xc],ecx
10001be8:	lea    ecx,[eax+0x9662]
10001bee:	mov    DWORD PTR [ebp-0x8],ecx
10001bf1:	lea    ecx,[eax+0x9860]
10001bf7:	push   edi
10001bf8:	add    eax,0x21ac
10001bfd:	mov    DWORD PTR [ebp-0x4],ecx
10001c00:	push   eax
10001c01:	mov    ecx,esi
10001c03:	call   0x10003378
10001c08:	mov    eax,DWORD PTR [esi+0x190]
10001c0e:	add    eax,0x3d1c
10001c13:	push   eax
10001c14:	lea    ecx,[esi+0xc]
10001c17:	call   0x10003378
10001c1c:	mov    eax,DWORD PTR [esi+0x190]
10001c22:	add    eax,0x564
10001c27:	push   eax
10001c28:	lea    ecx,[esi+0x18]
10001c2b:	call   0x10003669
10001c30:	mov    eax,DWORD PTR [esi+0x190]
10001c36:	add    eax,0x59c
10001c3b:	push   eax
10001c3c:	lea    ecx,[esi+0x24]
10001c3f:	call   0x10003669
10001c44:	mov    eax,DWORD PTR [esi+0x190]
10001c4a:	add    eax,0x9ac
10001c4f:	push   eax
10001c50:	lea    ecx,[esi+0x30]
10001c53:	call   0x10003378
10001c58:	mov    eax,DWORD PTR [esi+0x190]
10001c5e:	add    eax,0x11ac
10001c63:	push   eax
10001c64:	lea    ecx,[esi+0x3c]
10001c67:	call   0x10003378
10001c6c:	mov    eax,DWORD PTR [esi+0x190]
10001c72:	add    eax,0x19ac
10001c77:	push   eax
10001c78:	lea    ecx,[esi+0x48]
10001c7b:	call   0x10003378
10001c80:	mov    eax,DWORD PTR [esi+0x190]
10001c86:	lea    ecx,[eax+0x2494]
10001c8c:	xor    ebx,ebx
10001c8e:	cmp    WORD PTR [ecx],bx
10001c91:	je     0x10001c96
10001c93:	push   ecx
10001c94:	jmp    0x10001c9c
10001c96:	add    eax,0x258
10001c9b:	push   eax
10001c9c:	lea    ecx,[esi+0xfc]
10001ca2:	call   0x10003378
10001ca7:	mov    eax,DWORD PTR [esi+0x190]
10001cad:	add    eax,0x269c
10001cb2:	push   eax
10001cb3:	lea    ecx,[esi+0x108]
10001cb9:	call   0x10003378
10001cbe:	mov    eax,DWORD PTR [esi+0x190]
10001cc4:	add    eax,0x28a4
10001cc9:	push   eax
10001cca:	lea    ecx,[esi+0x114]
10001cd0:	call   0x10003378
10001cd5:	mov    eax,DWORD PTR [esi+0x190]
10001cdb:	cmp    DWORD PTR [eax+0x8470],ebx
10001ce1:	lea    ecx,[esi+0x60]
10001ce4:	je     0x10001d27
10001ce6:	add    eax,0x8474
10001ceb:	push   eax
10001cec:	mov    DWORD PTR [esi+0x1a8],0x1
10001cf6:	call   0x10003378
10001cfb:	cmp    eax,ebx
10001cfd:	jl     0x10001d67
10001cff:	lea    edi,[esi+0x6c]
10001d02:	mov    eax,DWORD PTR [ebp+ebx*4-0x28]
10001d06:	test   eax,eax
10001d08:	je     0x10001d3b
10001d0a:	cmp    WORD PTR [eax],0x0
10001d0e:	je     0x10001d3b
10001d10:	push   eax
10001d11:	mov    ecx,edi
10001d13:	call   0x10003378
10001d18:	test   eax,eax
10001d1a:	jl     0x10001d67
10001d1c:	inc    ebx
10001d1d:	add    edi,0xc
10001d20:	cmp    ebx,0xa
10001d23:	jb     0x10001d02
10001d25:	jmp    0x10001d3b
10001d27:	push   0x10001250
10001d2c:	mov    DWORD PTR [esi+0x1a8],ebx
10001d32:	call   0x10003378
10001d37:	cmp    eax,ebx
10001d39:	jl     0x10001d67
10001d3b:	mov    eax,DWORD PTR [esi+0x190]
10001d41:	mov    ecx,DWORD PTR [eax+0x2c]
10001d44:	mov    DWORD PTR [esi+0x180],ecx
10001d4a:	mov    ecx,DWORD PTR [eax+0x30]
10001d4d:	mov    DWORD PTR [esi+0x184],ecx
10001d53:	mov    ecx,DWORD PTR [eax+0x38]
10001d56:	mov    DWORD PTR [esi+0x1b0],ecx
10001d5c:	mov    eax,DWORD PTR [eax+0x40]
10001d5f:	mov    DWORD PTR [esi+0x18c],eax
10001d65:	xor    eax,eax
10001d67:	pop    edi
10001d68:	pop    esi
10001d69:	pop    ebx
10001d6a:	leave  
10001d6b:	ret    
10001d6c:	push   ebp
10001d6d:	mov    ebp,esp
10001d6f:	push   esi
10001d70:	mov    esi,DWORD PTR [ebp+0x8]
10001d73:	test   esi,esi
10001d75:	push   edi
10001d76:	mov    edi,ecx
10001d78:	je     0x10001daf
10001d7a:	mov    eax,DWORD PTR [ebp+0xc]
10001d7d:	test   eax,eax
10001d7f:	je     0x10001daf
10001d81:	and    DWORD PTR [esi],0x0
10001d84:	push   eax
10001d85:	push   esi
10001d86:	mov    DWORD PTR [eax],0x1
10001d8c:	call   0x100015a0
10001d91:	test   eax,eax
10001d93:	jl     0x10001db4
10001d95:	or     DWORD PTR [esi],0x3
10001d98:	mov    ecx,DWORD PTR [edi+0x190]
10001d9e:	test   BYTE PTR [ecx+0x44],0x10
10001da2:	mov    eax,DWORD PTR [esi]
10001da4:	je     0x10001dab
10001da6:	or     eax,0x8
10001da9:	mov    DWORD PTR [esi],eax
10001dab:	xor    eax,eax
10001dad:	jmp    0x10001db4
10001daf:	mov    eax,0x80070057
10001db4:	pop    edi
10001db5:	pop    esi
10001db6:	pop    ebp
10001db7:	ret    0x8
10001dba:	push   ebp
10001dbb:	mov    ebp,esp
10001dbd:	sub    esp,0x240
10001dc3:	mov    eax,ds:0x10007060
10001dc8:	xor    eax,ebp
10001dca:	mov    DWORD PTR [ebp-0x4],eax
10001dcd:	mov    eax,DWORD PTR [ebp+0x8]
10001dd0:	push   ebx
10001dd1:	push   esi
10001dd2:	push   edi
10001dd3:	mov    DWORD PTR [ebp-0x238],eax
10001dd9:	xor    ebx,ebx
10001ddb:	xor    eax,eax
10001ddd:	lea    edi,[ebp-0x23c]
10001de3:	push   0x224
10001de8:	mov    DWORD PTR [ebp-0x240],ebx
10001dee:	stos   DWORD PTR es:[edi],eax
10001def:	lea    eax,[ebp-0x228]
10001df5:	mov    esi,ecx
10001df7:	push   ebx
10001df8:	push   eax
10001df9:	mov    DWORD PTR [ebp-0x230],esi
10001dff:	mov    DWORD PTR [ebp-0x22c],ebx
10001e05:	call   0x10004eae
10001e0a:	mov    eax,DWORD PTR [esi+0x190]
10001e10:	mov    ecx,DWORD PTR [eax+0x14]
10001e13:	add    esp,0xc
10001e16:	mov    DWORD PTR [ebp-0x240],ecx
10001e1c:	mov    DWORD PTR [ebp-0x23c],0x1
10001e26:	push   DWORD PTR [eax+0xc]
10001e29:	push   ebx
10001e2a:	push   0x1f03ff
10001e2f:	call   DWORD PTR ds:0x100010b4
10001e35:	mov    ebx,0x228
10001e3a:	push   ebx
10001e3b:	mov    DWORD PTR [ebp-0x234],eax
10001e41:	xor    edi,edi
10001e43:	lea    eax,[ebp-0x22c]
10001e49:	push   edi
10001e4a:	push   eax
10001e4b:	call   0x10004eae
10001e50:	mov    edx,DWORD PTR [esi+0x190]
10001e56:	add    esp,0xc
10001e59:	cmp    DWORD PTR [edx+0x9a60],edi
10001e5f:	je     0x10001ed9
10001e61:	mov    eax,edx
10001e63:	mov    ecx,ebx
10001e65:	mov    DWORD PTR [ebp-0x22c],ecx
10001e6b:	mov    edi,DWORD PTR [eax+0x9a64]
10001e71:	mov    DWORD PTR [ebp-0x224],edi
10001e77:	mov    edi,DWORD PTR [eax+0x9a74]
10001e7d:	mov    DWORD PTR [ebp-0x214],edi
10001e83:	mov    edi,DWORD PTR [eax+0x9a6c]
10001e89:	mov    DWORD PTR [ebp-0x21c],edi
10001e8f:	mov    edi,DWORD PTR [eax+0x9a68]
10001e95:	mov    DWORD PTR [ebp-0x220],edi
10001e9b:	mov    edi,DWORD PTR [eax+0x9a80]
10001ea1:	mov    DWORD PTR [ebp-0x208],edi
10001ea7:	mov    edi,DWORD PTR [eax+0x9a78]
10001ead:	mov    DWORD PTR [ebp-0x210],edi
10001eb3:	mov    edi,DWORD PTR [eax+0x9a70]
10001eb9:	mov    DWORD PTR [ebp-0x218],edi
10001ebf:	mov    eax,DWORD PTR [eax+0x9a7c]
10001ec5:	mov    DWORD PTR [ebp-0x20c],eax
10001ecb:	mov    DWORD PTR [ebp-0x228],0xfffffeff
10001ed5:	xor    edi,edi
10001ed7:	jmp    0x10001edf
10001ed9:	mov    ecx,DWORD PTR [ebp-0x22c]
10001edf:	lea    eax,[edx+0x7a4]
10001ee5:	cmp    WORD PTR [eax],di
10001ee8:	je     0x10001f21
10001eea:	or     DWORD PTR [ebp-0x228],0x100
10001ef4:	mov    DWORD PTR [ebp-0x22c],ebx
10001efa:	mov    ecx,0x80
10001eff:	mov    esi,eax
10001f01:	lea    edi,[ebp-0x204]
10001f07:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001f09:	and    WORD PTR [ebp-0x6],0x0
10001f0e:	and    WORD PTR [ebp-0x8],0x0
10001f13:	mov    ecx,DWORD PTR [ebp-0x22c]
10001f19:	mov    esi,DWORD PTR [ebp-0x230]
10001f1f:	xor    edi,edi
10001f21:	push   edi
10001f22:	neg    ecx
10001f24:	sbb    ecx,ecx
10001f26:	lea    eax,[ebp-0x22c]
10001f2c:	and    ecx,eax
10001f2e:	push   ecx
10001f2f:	lea    eax,[ebp-0x240]
10001f35:	push   eax
10001f36:	push   0x2
10001f38:	push   DWORD PTR [ebp-0x234]
10001f3e:	push   DWORD PTR [edx+0x28]
10001f41:	push   DWORD PTR [ebp-0x238]
10001f47:	call   DWORD PTR ds:0x100070a4
10001f4d:	cmp    eax,edi
10001f4f:	mov    DWORD PTR [ebp-0x230],eax
10001f55:	jl     0x10001fcb
10001f57:	test   BYTE PTR [esi+0x180],0x60
10001f5e:	je     0x10001fc5
10001f60:	push   ebx
10001f61:	lea    eax,[ebp-0x22c]
10001f67:	push   edi
10001f68:	push   eax
10001f69:	call   0x10004eae
10001f6e:	add    esp,0xc
10001f71:	push   edi
10001f72:	lea    eax,[ebp-0x22c]
10001f78:	push   eax
10001f79:	mov    eax,DWORD PTR [esi+0x190]
10001f7f:	push   edi
10001f80:	push   0x3
10001f82:	push   DWORD PTR [ebp-0x234]
10001f88:	mov    DWORD PTR [ebp-0x22c],ebx
10001f8e:	mov    DWORD PTR [ebp-0x224],0x88
10001f98:	mov    DWORD PTR [ebp-0x220],0x1
10001fa2:	mov    DWORD PTR [ebp-0x228],0xfffffeff
10001fac:	push   DWORD PTR [eax+0x28]
10001faf:	push   DWORD PTR [ebp-0x238]
10001fb5:	call   DWORD PTR ds:0x100070a4
10001fbb:	cmp    eax,edi
10001fbd:	mov    DWORD PTR [ebp-0x230],eax
10001fc3:	jl     0x10001fcb
10001fc5:	mov    DWORD PTR [ebp-0x230],edi
10001fcb:	cmp    DWORD PTR [ebp-0x234],edi
10001fd1:	pop    edi
10001fd2:	pop    esi
10001fd3:	pop    ebx
10001fd4:	je     0x10001fe2
10001fd6:	push   DWORD PTR [ebp-0x234]
10001fdc:	call   DWORD PTR ds:0x100010ac
10001fe2:	mov    ecx,DWORD PTR [ebp-0x4]
10001fe5:	mov    eax,DWORD PTR [ebp-0x230]
10001feb:	xor    ecx,ebp
10001fed:	call   0x10004d94
10001ff2:	leave  
10001ff3:	ret    0x4
10001ff6:	push   ebp
10001ff7:	mov    ebp,esp
10001ff9:	push   ebx
10001ffa:	push   esi
10001ffb:	push   edi
10001ffc:	mov    esi,ecx
10001ffe:	mov    eax,DWORD PTR [esi+0x190]
10002004:	push   DWORD PTR [eax+0xc]
10002007:	mov    edi,0x80004005
1000200c:	push   0x0
1000200e:	push   0x1f03ff
10002013:	call   DWORD PTR ds:0x100010b4
10002019:	mov    ebx,eax
1000201b:	test   ebx,ebx
1000201d:	jne    0x10002027
1000201f:	call   DWORD PTR ds:0x100010a0
10002025:	jmp    0x1000206c
10002027:	mov    eax,DWORD PTR [esi+0x190]
1000202d:	push   DWORD PTR [eax+0x10]
10002030:	add    esi,0x1b4
10002036:	push   DWORD PTR [eax+0x14]
10002039:	mov    ecx,esi
1000203b:	push   ebx
1000203c:	push   0x0
1000203e:	push   DWORD PTR [eax+0x28]
10002041:	call   0x1000455c
10002046:	mov    edi,eax
10002048:	test   edi,edi
1000204a:	jl     0x10002065
1000204c:	mov    ecx,esi
1000204e:	call   0x1000483b
10002053:	push   DWORD PTR [ebp+0x8]
10002056:	mov    ecx,esi
10002058:	call   0x100048c9
1000205d:	mov    edi,eax
1000205f:	test   edi,edi
10002061:	jl     0x10002065
10002063:	xor    edi,edi
10002065:	push   ebx
10002066:	call   DWORD PTR ds:0x100010ac
1000206c:	mov    eax,edi
1000206e:	pop    edi
1000206f:	pop    esi
10002070:	pop    ebx
10002071:	pop    ebp
10002072:	ret    0x4
10002075:	push   0x4
10002077:	mov    eax,0x100056fe
1000207c:	call   0x10004da3
10002081:	mov    esi,ecx
10002083:	mov    DWORD PTR [ebp-0x10],esi
10002086:	mov    DWORD PTR [ebp-0x4],0xb
1000208d:	lea    ecx,[esi+0x174]
10002093:	call   0x10003180
10002098:	mov    BYTE PTR [ebp-0x4],0xa
1000209c:	lea    ecx,[esi+0x168]
100020a2:	call   0x10003180
100020a7:	mov    BYTE PTR [ebp-0x4],0x9
100020ab:	mov    edi,0x10003180
100020b0:	push   edi
100020b1:	push   0xb
100020b3:	push   0xc
100020b5:	lea    eax,[esi+0xe4]
100020bb:	push   eax
100020bc:	call   0x10004f12
100020c1:	mov    BYTE PTR [ebp-0x4],0x8
100020c5:	push   edi
100020c6:	push   0xa
100020c8:	push   0xc
100020ca:	lea    eax,[esi+0x6c]
100020cd:	push   eax
100020ce:	call   0x10004f12
100020d3:	mov    BYTE PTR [ebp-0x4],0x7
100020d7:	lea    ecx,[esi+0x60]
100020da:	call   0x10003180
100020df:	mov    BYTE PTR [ebp-0x4],0x6
100020e3:	lea    ecx,[esi+0x54]
100020e6:	call   0x10003180
100020eb:	mov    BYTE PTR [ebp-0x4],0x5
100020ef:	lea    ecx,[esi+0x48]
100020f2:	call   0x10003180
100020f7:	mov    BYTE PTR [ebp-0x4],0x4
100020fb:	lea    ecx,[esi+0x3c]
100020fe:	call   0x10003180
10002103:	mov    BYTE PTR [ebp-0x4],0x3
10002107:	lea    ecx,[esi+0x30]
1000210a:	call   0x10003180
1000210f:	mov    BYTE PTR [ebp-0x4],0x2
10002113:	lea    ecx,[esi+0x24]
10002116:	call   0x10003180
1000211b:	mov    BYTE PTR [ebp-0x4],0x1
1000211f:	lea    ecx,[esi+0x18]
10002122:	call   0x10003180
10002127:	mov    BYTE PTR [ebp-0x4],0x0
1000212b:	lea    ecx,[esi+0xc]
1000212e:	call   0x10003180
10002133:	or     DWORD PTR [ebp-0x4],0xffffffff
10002137:	mov    ecx,esi
10002139:	call   0x10003180
1000213e:	call   0x10004e7b
10002143:	ret    
10002144:	push   0x4
10002146:	mov    eax,0x1000597a
1000214b:	call   0x10004da3
10002150:	mov    esi,ecx
10002152:	mov    DWORD PTR [ebp-0x10],esi
10002155:	mov    DWORD PTR [ebp-0x4],0x8
1000215c:	lea    ecx,[esi+0x94]
10002162:	call   0x10003180
10002167:	mov    BYTE PTR [ebp-0x4],0x7
1000216b:	lea    ecx,[esi+0x88]
10002171:	call   0x10003180
10002176:	mov    BYTE PTR [ebp-0x4],0x6
1000217a:	lea    ecx,[esi+0x70]
1000217d:	call   0x10003180
10002182:	mov    BYTE PTR [ebp-0x4],0x5
10002186:	lea    ecx,[esi+0x64]
10002189:	call   0x10003180
1000218e:	mov    BYTE PTR [ebp-0x4],0x4
10002192:	lea    ecx,[esi+0x4c]
10002195:	call   0x10003180
1000219a:	mov    BYTE PTR [ebp-0x4],0x3
1000219e:	lea    ecx,[esi+0x40]
100021a1:	call   0x10003180
100021a6:	mov    BYTE PTR [ebp-0x4],0x2
100021aa:	lea    ecx,[esi+0x34]
100021ad:	call   0x10003180
100021b2:	mov    BYTE PTR [ebp-0x4],0x1
100021b6:	lea    ecx,[esi+0x28]
100021b9:	call   0x10003180
100021be:	mov    BYTE PTR [ebp-0x4],0x0
100021c2:	lea    ecx,[esi+0x10]
100021c5:	call   0x10003180
100021ca:	or     DWORD PTR [ebp-0x4],0xffffffff
100021ce:	lea    ecx,[esi+0x4]
100021d1:	call   0x10003180
100021d6:	call   0x10004e7b
100021db:	ret    
100021dc:	push   0x4
100021de:	mov    eax,0x10005639
100021e3:	call   0x10004da3
100021e8:	mov    esi,ecx
100021ea:	mov    DWORD PTR [ebp-0x10],esi
100021ed:	xor    ecx,ecx
100021ef:	inc    ecx
100021f0:	mov    DWORD PTR [ebp-0x4],ecx
100021f3:	mov    eax,DWORD PTR [esi+0x19c]
100021f9:	cmp    eax,ecx
100021fb:	jne    0x10002228
100021fd:	lea    edi,[esi+0x194]
10002203:	mov    eax,DWORD PTR [edi]
10002205:	test   eax,eax
10002207:	je     0x10002213
10002209:	push   eax
1000220a:	call   DWORD PTR ds:0x100010a4
10002210:	and    DWORD PTR [edi],0x0
10002213:	lea    edi,[esi+0x190]
10002219:	mov    eax,DWORD PTR [edi]
1000221b:	test   eax,eax
1000221d:	je     0x1000224f
1000221f:	push   eax
10002220:	call   0x10004f76
10002225:	pop    ecx
10002226:	jmp    0x1000224c
10002228:	cmp    eax,0x2
1000222b:	jne    0x10002235
1000222d:	lea    edi,[esi+0x198]
10002233:	jmp    0x10002203
10002235:	test   eax,eax
10002237:	jne    0x1000224f
10002239:	lea    edi,[esi+0x190]
1000223f:	mov    eax,DWORD PTR [edi]
10002241:	test   eax,eax
10002243:	je     0x1000224f
10002245:	push   eax
10002246:	call   DWORD PTR ds:0x100010a4
1000224c:	and    DWORD PTR [edi],0x0
1000224f:	lea    edi,[esi+0x1ac]
10002255:	mov    eax,DWORD PTR [edi]
10002257:	test   eax,eax
10002259:	je     0x10002265
1000225b:	push   eax
1000225c:	call   DWORD PTR ds:0x100010ac
10002262:	and    DWORD PTR [edi],0x0
10002265:	mov    BYTE PTR [ebp-0x4],0x0
10002269:	lea    ecx,[esi+0x1b4]
1000226f:	call   0x10002144
10002274:	or     DWORD PTR [ebp-0x4],0xffffffff
10002278:	mov    ecx,esi
1000227a:	call   0x10002075
1000227f:	call   0x10004e7b
10002284:	ret    
10002285:	push   ebp
10002286:	mov    ebp,esp
10002288:	xor    eax,eax
1000228a:	cmp    DWORD PTR [ebp+0xc],eax
1000228d:	jne    0x10002296
1000228f:	mov    eax,0x80070057
10002294:	jmp    0x100022bb
10002296:	mov    edx,DWORD PTR [ebp+0x8]
10002299:	push   esi
1000229a:	mov    esi,DWORD PTR [ebp+0x10]
1000229d:	mov    cl,BYTE PTR [esi]
1000229f:	test   cl,cl
100022a1:	je     0x100022ac
100022a3:	mov    BYTE PTR [edx],cl
100022a5:	inc    edx
100022a6:	inc    esi
100022a7:	dec    DWORD PTR [ebp+0xc]
100022aa:	jne    0x1000229d
100022ac:	cmp    DWORD PTR [ebp+0xc],eax
100022af:	pop    esi
100022b0:	jne    0x100022b8
100022b2:	dec    edx
100022b3:	mov    eax,0x8007007a
100022b8:	mov    BYTE PTR [edx],0x0
100022bb:	pop    ebp
100022bc:	ret    0xc
100022bf:	push   ebp
100022c0:	mov    ebp,esp
100022c2:	xor    eax,eax
100022c4:	cmp    DWORD PTR [ebp+0xc],eax
100022c7:	jne    0x100022d0
100022c9:	mov    eax,0x80070057
100022ce:	jmp    0x100022fc
100022d0:	mov    edx,DWORD PTR [ebp+0x8]
100022d3:	push   esi
100022d4:	mov    esi,DWORD PTR [ebp+0x10]
100022d7:	movzx  ecx,WORD PTR [esi]
100022da:	test   cx,cx
100022dd:	je     0x100022eb
100022df:	mov    WORD PTR [edx],cx
100022e2:	inc    edx
100022e3:	inc    edx
100022e4:	inc    esi
100022e5:	inc    esi
100022e6:	dec    DWORD PTR [ebp+0xc]
100022e9:	jne    0x100022d7
100022eb:	cmp    DWORD PTR [ebp+0xc],eax
100022ee:	pop    esi
100022ef:	jne    0x100022f8
100022f1:	dec    edx
100022f2:	dec    edx
100022f3:	mov    eax,0x8007007a
100022f8:	and    WORD PTR [edx],0x0
100022fc:	pop    ebp
100022fd:	ret    0xc
10002300:	push   0x4
10002302:	mov    eax,0x100056fe
10002307:	call   0x10004da3
1000230c:	mov    esi,ecx
1000230e:	mov    DWORD PTR [ebp-0x10],esi
10002311:	call   0x10003156
10002316:	and    DWORD PTR [ebp-0x4],0x0
1000231a:	lea    ecx,[esi+0xc]
1000231d:	call   0x10003156
10002322:	mov    BYTE PTR [ebp-0x4],0x1
10002326:	lea    ecx,[esi+0x18]
10002329:	call   0x10003156
1000232e:	mov    BYTE PTR [ebp-0x4],0x2
10002332:	lea    ecx,[esi+0x24]
10002335:	call   0x10003156
1000233a:	mov    BYTE PTR [ebp-0x4],0x3
1000233e:	lea    ecx,[esi+0x30]
10002341:	call   0x10003156
10002346:	mov    BYTE PTR [ebp-0x4],0x4
1000234a:	lea    ecx,[esi+0x3c]
1000234d:	call   0x10003156
10002352:	mov    BYTE PTR [ebp-0x4],0x5
10002356:	lea    ecx,[esi+0x48]
10002359:	call   0x10003156
1000235e:	mov    BYTE PTR [ebp-0x4],0x6
10002362:	lea    ecx,[esi+0x54]
10002365:	call   0x10003156
1000236a:	mov    BYTE PTR [ebp-0x4],0x7
1000236e:	lea    ecx,[esi+0x60]
10002371:	call   0x10003156
10002376:	mov    BYTE PTR [ebp-0x4],0x8
1000237a:	mov    ebx,0x10003180
1000237f:	push   ebx
10002380:	mov    edi,0x10003156
10002385:	push   edi
10002386:	push   0xa
10002388:	push   0xc
1000238a:	lea    eax,[esi+0x6c]
1000238d:	push   eax
1000238e:	call   0x10004f7c
10002393:	mov    BYTE PTR [ebp-0x4],0x9
10002397:	push   ebx
10002398:	push   edi
10002399:	push   0xb
1000239b:	push   0xc
1000239d:	lea    eax,[esi+0xe4]
100023a3:	push   eax
100023a4:	call   0x10004f7c
100023a9:	mov    BYTE PTR [ebp-0x4],0xa
100023ad:	lea    ecx,[esi+0x168]
100023b3:	call   0x10003156
100023b8:	mov    BYTE PTR [ebp-0x4],0xb
100023bc:	lea    ecx,[esi+0x174]
100023c2:	call   0x10003156
100023c7:	mov    BYTE PTR [ebp-0x4],0xc
100023cb:	xor    eax,eax
100023cd:	mov    DWORD PTR [esi+0x18c],eax
100023d3:	mov    DWORD PTR [esi+0x188],0x3
100023dd:	mov    DWORD PTR [esi+0x180],eax
100023e3:	mov    DWORD PTR [esi+0x184],eax
100023e9:	or     DWORD PTR [ebp-0x4],0xffffffff
100023ed:	mov    eax,esi
100023ef:	call   0x10004e7b
100023f4:	ret    
100023f5:	push   ebp
100023f6:	mov    ebp,esp
100023f8:	cmp    DWORD PTR [ebp+0xc],0x7fffffff
100023ff:	jbe    0x1000240a
10002401:	mov    eax,0x80070057
10002406:	pop    ebp
10002407:	ret    0xc
1000240a:	pop    ebp
1000240b:	jmp    0x100022bf
10002410:	push   esi
10002411:	mov    esi,ecx
10002413:	cmp    DWORD PTR [esi+0x190],0x0
1000241a:	je     0x100024a2
10002420:	cmp    DWORD PTR ds:0x10007088,0x0
10002427:	jne    0x100024a2
10002429:	push   edi
1000242a:	call   0x10001b05
1000242f:	xor    edi,edi
10002431:	inc    edi
10002432:	test   eax,eax
10002434:	jne    0x10002447
10002436:	mov    ecx,esi
10002438:	mov    DWORD PTR [esi+0x1a0],edi
1000243e:	call   0x100019a2
10002443:	test   eax,eax
10002445:	jne    0x1000249b
10002447:	mov    ecx,esi
10002449:	call   0x100019a2
1000244e:	test   eax,eax
10002450:	mov    ecx,esi
10002452:	jne    0x10002461
10002454:	call   0x10001926
10002459:	mov    DWORD PTR [esi+0x1a0],edi
1000245f:	jmp    0x1000249b
10002461:	call   0x10001988
10002466:	test   eax,eax
10002468:	je     0x10002475
1000246a:	mov    ecx,esi
1000246c:	call   0x1000196e
10002471:	test   eax,eax
10002473:	je     0x1000249b
10002475:	mov    ecx,esi
10002477:	mov    DWORD PTR [esi+0x1a0],edi
1000247d:	call   0x1000189f
10002482:	mov    ecx,esi
10002484:	call   0x1000196e
10002489:	test   eax,eax
1000248b:	je     0x10002494
1000248d:	mov    ecx,esi
1000248f:	call   0x100019bd
10002494:	mov    ecx,esi
10002496:	call   0x10001926
1000249b:	mov    DWORD PTR ds:0x10007088,edi
100024a1:	pop    edi
100024a2:	pop    esi
100024a3:	ret    
100024a4:	push   ebp
100024a5:	mov    ebp,esp
100024a7:	push   ebx
100024a8:	push   esi
100024a9:	mov    esi,0x9c9c
100024ae:	push   esi
100024af:	call   0x10004fe2
100024b4:	mov    ebx,eax
100024b6:	test   ebx,ebx
100024b8:	pop    ecx
100024b9:	je     0x10002609
100024bf:	push   edi
100024c0:	push   esi
100024c1:	push   0x0
100024c3:	push   ebx
100024c4:	call   0x10004eae
100024c9:	mov    DWORD PTR [ebx],esi
100024cb:	mov    esi,DWORD PTR [ebp+0x8]
100024ce:	mov    DWORD PTR [ebx+0x4],0x20000
100024d5:	mov    eax,DWORD PTR [esi+0x4]
100024d8:	mov    DWORD PTR [ebx+0x8],eax
100024db:	mov    eax,DWORD PTR [esi+0x8]
100024de:	mov    DWORD PTR [ebx+0xc],eax
100024e1:	mov    eax,DWORD PTR [esi+0xc]
100024e4:	mov    DWORD PTR [ebx+0x10],eax
100024e7:	mov    eax,DWORD PTR [esi+0x10]
100024ea:	mov    DWORD PTR [ebx+0x14],eax
100024ed:	mov    eax,DWORD PTR [esi+0x14]
100024f0:	mov    DWORD PTR [ebx+0x18],eax
100024f3:	mov    eax,DWORD PTR [esi+0x18]
100024f6:	mov    DWORD PTR [ebx+0x1c],eax
100024f9:	mov    eax,DWORD PTR [esi+0x1c]
100024fc:	mov    DWORD PTR [ebx+0x20],eax
100024ff:	mov    eax,DWORD PTR [esi+0x20]
10002502:	mov    DWORD PTR [ebx+0x24],eax
10002505:	mov    eax,DWORD PTR [esi+0x24]
10002508:	add    esp,0xc
1000250b:	mov    DWORD PTR [ebx+0x28],eax
1000250e:	lea    eax,[ebx+0x38]
10002511:	push   eax
10002512:	lea    eax,[ebx+0x30]
10002515:	push   eax
10002516:	lea    edi,[ebx+0x2c]
10002519:	push   edi
1000251a:	push   DWORD PTR [esi+0x28]
1000251d:	call   0x10002cd2
10002522:	mov    eax,DWORD PTR [esi+0x1144]
10002528:	mov    DWORD PTR [ebx+0x40],eax
1000252b:	mov    eax,DWORD PTR [esi+0x34]
1000252e:	mov    DWORD PTR [ebx+0x44],eax
10002531:	mov    eax,DWORD PTR [esi+0x38]
10002534:	mov    DWORD PTR [ebx+0x48],eax
10002537:	mov    eax,DWORD PTR [esi+0x3c]
1000253a:	and    DWORD PTR [ebx+0x8470],0x0
10002541:	test   BYTE PTR [edi],0x1
10002544:	mov    DWORD PTR [ebx+0x4c],eax
10002547:	mov    eax,DWORD PTR [esi+0x40]
1000254a:	mov    DWORD PTR [ebx+0x9c94],eax
10002550:	mov    eax,DWORD PTR [esi+0x44]
10002553:	mov    DWORD PTR [ebx+0x9c98],eax
10002559:	lea    eax,[esi+0x1418]
1000255f:	push   eax
10002560:	push   0x400
10002565:	je     0x10002575
10002567:	lea    eax,[ebx+0x9ac]
1000256d:	push   eax
1000256e:	call   0x100022bf
10002573:	jmp    0x10002585
10002575:	lea    eax,[ebx+0x11ac]
1000257b:	push   eax
1000257c:	call   0x100022bf
10002581:	test   eax,eax
10002583:	jl     0x100025ff
10002585:	lea    eax,[esi+0x1c18]
1000258b:	push   eax
1000258c:	push   0x38
1000258e:	lea    eax,[ebx+0x564]
10002594:	push   eax
10002595:	call   0x10002285
1000259a:	test   eax,eax
1000259c:	jl     0x100025ff
1000259e:	add    esi,0x1210
100025a4:	lea    edi,[ebx+0x7a4]
100025aa:	mov    ecx,0x82
100025af:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100025b1:	mov    esi,DWORD PTR [ebp+0x8]
100025b4:	lea    eax,[esi+0xb8]
100025ba:	push   eax
100025bb:	mov    edi,0x104
100025c0:	push   edi
100025c1:	lea    eax,[ebx+0x258]
100025c7:	push   eax
100025c8:	call   0x100022bf
100025cd:	test   eax,eax
100025cf:	jl     0x100025ff
100025d1:	lea    eax,[esi+0x48]
100025d4:	push   eax
100025d5:	push   0x38
100025d7:	lea    eax,[ebx+0x21ac]
100025dd:	push   eax
100025de:	call   0x100022bf
100025e3:	test   eax,eax
100025e5:	jl     0x100025ff
100025e7:	add    esi,0x2c0
100025ed:	push   esi
100025ee:	push   edi
100025ef:	lea    eax,[ebx+0x3d1c]
100025f5:	push   eax
100025f6:	call   0x100022bf
100025fb:	test   eax,eax
100025fd:	jge    0x10002608
100025ff:	push   ebx
10002600:	call   0x10004f76
10002605:	pop    ecx
10002606:	xor    ebx,ebx
10002608:	pop    edi
10002609:	pop    esi
1000260a:	mov    eax,ebx
1000260c:	pop    ebx
1000260d:	pop    ebp
1000260e:	ret    0x4
10002611:	push   ebp
10002612:	mov    ebp,esp
10002614:	push   ecx
10002615:	push   ebx
10002616:	push   esi
10002617:	mov    esi,0x9c9c
1000261c:	push   esi
1000261d:	call   0x10004fe2
10002622:	mov    ebx,eax
10002624:	test   ebx,ebx
10002626:	pop    ecx
10002627:	je     0x100027ca
1000262d:	push   edi
1000262e:	push   esi
1000262f:	push   0x0
10002631:	push   ebx
10002632:	call   0x10004eae
10002637:	mov    DWORD PTR [ebx],esi
10002639:	mov    esi,DWORD PTR [ebp+0x8]
1000263c:	mov    DWORD PTR [ebx+0x4],0x20000
10002643:	mov    eax,DWORD PTR [esi+0x4]
10002646:	mov    DWORD PTR [ebx+0x8],eax
10002649:	mov    eax,DWORD PTR [esi+0x8]
1000264c:	mov    DWORD PTR [ebx+0xc],eax
1000264f:	mov    eax,DWORD PTR [esi+0xc]
10002652:	mov    DWORD PTR [ebx+0x10],eax
10002655:	mov    eax,DWORD PTR [esi+0x10]
10002658:	mov    DWORD PTR [ebx+0x14],eax
1000265b:	mov    eax,DWORD PTR [esi+0x14]
1000265e:	mov    DWORD PTR [ebx+0x18],eax
10002661:	mov    eax,DWORD PTR [esi+0x18]
10002664:	mov    DWORD PTR [ebx+0x1c],eax
10002667:	mov    eax,DWORD PTR [esi+0x1c]
1000266a:	mov    DWORD PTR [ebx+0x20],eax
1000266d:	mov    eax,DWORD PTR [esi+0x20]
10002670:	mov    DWORD PTR [ebx+0x24],eax
10002673:	mov    eax,DWORD PTR [esi+0x24]
10002676:	add    esp,0xc
10002679:	mov    DWORD PTR [ebx+0x28],eax
1000267c:	lea    eax,[ebx+0x38]
1000267f:	push   eax
10002680:	lea    eax,[ebx+0x30]
10002683:	push   eax
10002684:	lea    edi,[ebx+0x2c]
10002687:	push   edi
10002688:	push   DWORD PTR [esi+0x28]
1000268b:	call   0x10002cd2
10002690:	call   DWORD PTR ds:0x10001054
10002696:	movzx  eax,ax
10002699:	mov    DWORD PTR [ebx+0x40],eax
1000269c:	mov    eax,DWORD PTR [esi+0x34]
1000269f:	mov    DWORD PTR [ebx+0x44],eax
100026a2:	mov    eax,DWORD PTR [esi+0x38]
100026a5:	mov    DWORD PTR [ebx+0x48],eax
100026a8:	mov    eax,DWORD PTR [esi+0x3c]
100026ab:	and    DWORD PTR [ebx+0x8470],0x0
100026b2:	test   BYTE PTR [edi],0x1
100026b5:	mov    DWORD PTR [ebx+0x4c],eax
100026b8:	mov    eax,DWORD PTR [esi+0x40]
100026bb:	mov    DWORD PTR [ebx+0x9c94],eax
100026c1:	mov    eax,DWORD PTR [esi+0x44]
100026c4:	mov    DWORD PTR [ebx+0x9c98],eax
100026ca:	lea    eax,[esi+0x9a0]
100026d0:	push   eax
100026d1:	push   0x400
100026d6:	je     0x100026e6
100026d8:	lea    eax,[ebx+0x9ac]
100026de:	push   eax
100026df:	call   0x100022bf
100026e4:	jmp    0x100026fa
100026e6:	lea    eax,[ebx+0x11ac]
100026ec:	push   eax
100026ed:	call   0x100022bf
100026f2:	test   eax,eax
100026f4:	jl     0x100027c0
100026fa:	lea    eax,[esi+0x11a0]
10002700:	push   eax
10002701:	push   0x38
10002703:	lea    eax,[ebx+0x564]
10002709:	push   eax
1000270a:	call   0x10002285
1000270f:	test   eax,eax
10002711:	mov    DWORD PTR [ebp-0x4],eax
10002714:	jl     0x100027c0
1000271a:	push   0x104
1000271f:	add    esi,0x798
10002725:	lea    edi,[ebx+0x7a4]
1000272b:	mov    ecx,0x82
10002730:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002732:	mov    esi,DWORD PTR [ebp+0x8]
10002735:	mov    edi,DWORD PTR ds:0x10001058
1000273b:	lea    eax,[ebx+0x258]
10002741:	push   eax
10002742:	push   0xffffffff
10002744:	lea    eax,[esi+0xb8]
1000274a:	push   eax
1000274b:	push   0x0
1000274d:	push   0x0
1000274f:	mov    BYTE PTR [esi+0x1bb],0x0
10002756:	call   edi
10002758:	test   eax,eax
1000275a:	jne    0x1000277d
1000275c:	mov    esi,DWORD PTR ds:0x100010a0
10002762:	call   esi
10002764:	test   eax,eax
10002766:	jg     0x1000276c
10002768:	call   esi
1000276a:	jmp    0x10002778
1000276c:	call   esi
1000276e:	and    eax,0xffff
10002773:	or     eax,0x80070000
10002778:	mov    DWORD PTR [ebp-0x4],eax
1000277b:	jmp    0x100027ba
1000277d:	push   0x38
1000277f:	lea    eax,[ebx+0x21ac]
10002785:	push   eax
10002786:	push   0xffffffff
10002788:	lea    eax,[esi+0x48]
1000278b:	push   eax
1000278c:	push   0x0
1000278e:	push   0x0
10002790:	mov    BYTE PTR [esi+0x7f],0x0
10002794:	call   edi
10002796:	test   eax,eax
10002798:	je     0x100027ba
1000279a:	add    esi,0x1bc
100027a0:	push   esi
100027a1:	push   0x104
100027a6:	lea    eax,[ebx+0x3d1c]
100027ac:	push   eax
100027ad:	call   0x100022bf
100027b2:	test   eax,eax
100027b4:	jl     0x100027c0
100027b6:	and    DWORD PTR [ebp-0x4],0x0
100027ba:	cmp    DWORD PTR [ebp-0x4],0x0
100027be:	jge    0x100027c9
100027c0:	push   ebx
100027c1:	call   0x10004f76
100027c6:	pop    ecx
100027c7:	xor    ebx,ebx
100027c9:	pop    edi
100027ca:	pop    esi
100027cb:	mov    eax,ebx
100027cd:	pop    ebx
100027ce:	leave  
100027cf:	ret    0x4
100027d2:	push   0x4
100027d4:	mov    eax,0x10005639
100027d9:	call   0x10004da3
100027de:	mov    esi,ecx
100027e0:	mov    DWORD PTR [ebp-0x10],esi
100027e3:	call   0x10002300
100027e8:	xor    edi,edi
100027ea:	mov    DWORD PTR [ebp-0x4],edi
100027ed:	lea    ecx,[esi+0x1b4]
100027f3:	call   0x1000428a
100027f8:	mov    BYTE PTR [ebp-0x4],0x1
100027fc:	push   0x3
100027fe:	pop    eax
100027ff:	mov    DWORD PTR [esi+0x1ac],edi
10002805:	mov    DWORD PTR [esi+0x190],edi
1000280b:	mov    DWORD PTR [esi+0x194],edi
10002811:	mov    DWORD PTR [esi+0x198],edi
10002817:	mov    DWORD PTR [esi+0x19c],eax
1000281d:	mov    DWORD PTR [esi+0x1a0],edi
10002823:	mov    DWORD PTR [esi+0x1a4],edi
10002829:	mov    DWORD PTR [esi+0x1a8],eax
1000282f:	or     DWORD PTR [ebp-0x4],0xffffffff
10002833:	mov    eax,esi
10002835:	call   0x10004e7b
1000283a:	ret    
1000283b:	push   ebp
1000283c:	mov    ebp,esp
1000283e:	push   ebx
1000283f:	xor    ebx,ebx
10002841:	cmp    DWORD PTR [ebp+0x8],ebx
10002844:	push   esi
10002845:	mov    esi,ecx
10002847:	jne    0x10002853
10002849:	mov    eax,0x80070057
1000284e:	jmp    0x10002924
10002853:	push   ebx
10002854:	push   ebx
10002855:	push   ebx
10002856:	push   0x6
10002858:	push   DWORD PTR [ebp+0x8]
1000285b:	call   DWORD PTR ds:0x10001050
10002861:	cmp    eax,ebx
10002863:	jne    0x1000286f
10002865:	mov    esi,0x80004005
1000286a:	jmp    0x10002919
1000286f:	mov    ecx,DWORD PTR [eax]
10002871:	push   edi
10002872:	xor    edi,edi
10002874:	inc    edi
10002875:	cmp    ecx,0x11d8
1000287b:	je     0x100028af
1000287d:	cmp    ecx,0x1c50
10002883:	je     0x10002895
10002885:	cmp    ecx,0x9c9c
1000288b:	jne    0x100028c9
1000288d:	mov    DWORD PTR [esi+0x19c],ebx
10002893:	jmp    0x100028c3
10002895:	push   eax
10002896:	mov    ecx,esi
10002898:	mov    DWORD PTR [esi+0x198],eax
1000289e:	call   0x100024a4
100028a3:	mov    DWORD PTR [esi+0x19c],0x2
100028ad:	jmp    0x100028c3
100028af:	push   eax
100028b0:	mov    ecx,esi
100028b2:	mov    DWORD PTR [esi+0x194],eax
100028b8:	call   0x10002611
100028bd:	mov    DWORD PTR [esi+0x19c],edi
100028c3:	mov    DWORD PTR [esi+0x190],eax
100028c9:	mov    eax,DWORD PTR [esi+0x190]
100028cf:	cmp    eax,ebx
100028d1:	jne    0x100028da
100028d3:	mov    esi,0x80004005
100028d8:	jmp    0x10002918
100028da:	test   BYTE PTR [eax+0x38],0x10
100028de:	jne    0x100028fd
100028e0:	call   0x10003eb5
100028e5:	test   eax,eax
100028e7:	je     0x100028fd
100028e9:	mov    eax,DWORD PTR [esi+0x190]
100028ef:	or     DWORD PTR [eax+0x44],0x10
100028f3:	mov    eax,DWORD PTR [esi+0x190]
100028f9:	or     DWORD PTR [eax+0x4c],0x10
100028fd:	mov    eax,DWORD PTR [esi+0x190]
10002903:	mov    ecx,esi
10002905:	mov    DWORD PTR [eax+0x9a84],edi
1000290b:	call   0x10001ad6
10002910:	mov    esi,eax
10002912:	cmp    esi,ebx
10002914:	jl     0x10002918
10002916:	xor    esi,esi
10002918:	pop    edi
10002919:	push   DWORD PTR [ebp+0x8]
1000291c:	call   DWORD PTR ds:0x100010ac
10002922:	mov    eax,esi
10002924:	pop    esi
10002925:	pop    ebx
10002926:	pop    ebp
10002927:	ret    0x4
1000292a:	push   ebp
1000292b:	mov    ebp,esp
1000292d:	cmp    DWORD PTR [ebp+0x8],0x3
10002931:	push   esi
10002932:	mov    esi,ecx
10002934:	jne    0x1000294d
10002936:	mov    eax,DWORD PTR [esi+0x190]
1000293c:	mov    DWORD PTR [eax+0x9a84],0x10
10002946:	call   0x1000189f
1000294b:	jmp    0x1000296b
1000294d:	call   0x100019a2
10002952:	test   eax,eax
10002954:	mov    ecx,esi
10002956:	jne    0x1000295f
10002958:	call   0x10001926
1000295d:	jmp    0x1000296b
1000295f:	call   0x10002410
10002964:	mov    ecx,esi
10002966:	call   0x10001aa0
1000296b:	pop    esi
1000296c:	pop    ebp
1000296d:	ret    0x4
10002970:	push   0x8b0
10002975:	mov    eax,0x10005724
1000297a:	call   0x10004e0c
1000297f:	mov    ebx,DWORD PTR [ebp+0x8]
10002982:	xor    edi,edi
10002984:	push   0x890
10002989:	lea    eax,[ebp-0x8a0]
1000298f:	push   edi
10002990:	push   eax
10002991:	mov    esi,ecx
10002993:	mov    DWORD PTR [ebp-0x8ac],edi
10002999:	mov    DWORD PTR [ebp-0x8b0],0x1
100029a3:	mov    DWORD PTR [ebp-0x8a4],edi
100029a9:	call   0x10004eae
100029ae:	add    esp,0xc
100029b1:	lea    ecx,[ebp-0x8bc]
100029b7:	call   0x10003156
100029bc:	mov    DWORD PTR [ebp-0x4],edi
100029bf:	cmp    ebx,edi
100029c1:	mov    DWORD PTR [ebp-0x8a8],edi
100029c7:	jne    0x100029e7
100029c9:	mov    edi,0x80070057
100029ce:	or     DWORD PTR [ebp-0x4],0xffffffff
100029d2:	lea    ecx,[ebp-0x8bc]
100029d8:	call   0x10003180
100029dd:	mov    eax,edi
100029df:	call   0x10004e8f
100029e4:	ret    0x4
100029e7:	cmp    DWORD PTR [esi+0x190],edi
100029ed:	jne    0x100029f6
100029ef:	mov    edi,0xe0000000
100029f4:	jmp    0x100029ce
100029f6:	mov    ecx,esi
100029f8:	mov    DWORD PTR [ebx],0x4
100029fe:	call   0x10001b90
10002a03:	mov    edi,eax
10002a05:	test   edi,edi
10002a07:	jl     0x10002b95
10002a0d:	lea    eax,[ebp-0x8b0]
10002a13:	push   eax
10002a14:	lea    eax,[ebp-0x8ac]
10002a1a:	push   eax
10002a1b:	mov    ecx,esi
10002a1d:	call   0x10001d6c
10002a22:	or     DWORD PTR [ebp-0x8ac],0x10
10002a29:	push   0x1392
10002a2e:	lea    ecx,[ebp-0x8bc]
10002a34:	call   0x1000388d
10002a39:	mov    eax,DWORD PTR [esi+0x190]
10002a3f:	mov    DWORD PTR [ebp-0x8a4],0x894
10002a49:	mov    eax,DWORD PTR [eax+0x28]
10002a4c:	mov    ecx,esi
10002a4e:	mov    DWORD PTR [ebp-0x8a0],eax
10002a54:	call   0x100031e1
10002a59:	test   eax,eax
10002a5b:	je     0x10002a76
10002a5d:	mov    ecx,esi
10002a5f:	call   0x10003189
10002a64:	push   eax
10002a65:	push   0x80
10002a6a:	lea    eax,[ebp-0x71c]
10002a70:	push   eax
10002a71:	call   0x100022bf
10002a76:	lea    edi,[esi+0x174]
10002a7c:	mov    ecx,edi
10002a7e:	call   0x100031e1
10002a83:	test   eax,eax
10002a85:	je     0x10002aa0
10002a87:	mov    ecx,edi
10002a89:	call   0x10003189
10002a8e:	push   eax
10002a8f:	push   0x104
10002a94:	lea    eax,[ebp-0x61c]
10002a9a:	push   eax
10002a9b:	call   0x100022bf
10002aa0:	lea    ecx,[ebp-0x8bc]
10002aa6:	call   0x100031e1
10002aab:	test   eax,eax
10002aad:	je     0x10002acc
10002aaf:	lea    ecx,[ebp-0x8bc]
10002ab5:	call   0x10003189
10002aba:	push   eax
10002abb:	push   0x200
10002ac0:	lea    eax,[ebp-0x414]
10002ac6:	push   eax
10002ac7:	call   0x100022bf
10002acc:	lea    eax,[ebp-0x8a8]
10002ad2:	push   eax
10002ad3:	lea    eax,[ebp-0x8a4]
10002ad9:	push   eax
10002ada:	push   0x2
10002adc:	lea    ecx,[esi+0x60]
10002adf:	call   0x10003189
10002ae4:	push   eax
10002ae5:	call   DWORD PTR ds:0x1000708c
10002aeb:	mov    edi,eax
10002aed:	test   edi,edi
10002aef:	jl     0x10002b95
10002af5:	mov    eax,DWORD PTR [esi+0x1a8]
10002afb:	cmp    eax,0x1
10002afe:	jne    0x10002b0f
10002b00:	push   DWORD PTR [ebp-0x8a8]
10002b06:	mov    ecx,esi
10002b08:	call   0x1000166f
10002b0d:	jmp    0x10002b20
10002b0f:	test   eax,eax
10002b11:	jne    0x10002b90
10002b13:	push   DWORD PTR [ebp-0x8a8]
10002b19:	mov    ecx,esi
10002b1b:	call   0x10001ff6
10002b20:	mov    edi,eax
10002b22:	test   edi,edi
10002b24:	jl     0x10002b95
10002b26:	push   DWORD PTR [ebp-0x8a8]
10002b2c:	mov    ecx,esi
10002b2e:	call   0x100015d3
10002b33:	push   DWORD PTR [ebp-0x8a8]
10002b39:	mov    ecx,esi
10002b3b:	call   0x100017ef
10002b40:	push   DWORD PTR [ebp-0x8a8]
10002b46:	mov    ecx,esi
10002b48:	call   0x1000166a
10002b4d:	push   DWORD PTR [ebp-0x8a8]
10002b53:	mov    ecx,esi
10002b55:	call   0x10001dba
10002b5a:	push   ebx
10002b5b:	push   DWORD PTR [ebp-0x8ac]
10002b61:	push   DWORD PTR [ebp-0x8b0]
10002b67:	push   DWORD PTR [ebp-0x8a8]
10002b6d:	call   DWORD PTR ds:0x100070a0
10002b73:	mov    edi,eax
10002b75:	test   edi,edi
10002b77:	jge    0x10002b85
10002b79:	mov    DWORD PTR [esi+0x1a4],0x1
10002b83:	jmp    0x10002b95
10002b85:	and    DWORD PTR [esi+0x1a4],0x0
10002b8c:	xor    edi,edi
10002b8e:	jmp    0x10002b95
10002b90:	mov    edi,0xe0000000
10002b95:	push   DWORD PTR [ebx]
10002b97:	mov    ecx,esi
10002b99:	call   0x1000292a
10002b9e:	cmp    DWORD PTR [ebp-0x8a8],0x0
10002ba5:	je     0x100029ce
10002bab:	push   DWORD PTR [ebp-0x8a8]
10002bb1:	call   DWORD PTR ds:0x100070a8
10002bb7:	and    DWORD PTR [ebp-0x8a8],0x0
10002bbe:	jmp    0x100029ce
10002bc3:	push   ebp
10002bc4:	mov    ebp,esp
10002bc6:	push   ecx
10002bc7:	lea    eax,[ebp-0x4]
10002bca:	push   eax
10002bcb:	mov    DWORD PTR [ebp-0x4],0x4
10002bd2:	call   0x10002970
10002bd7:	test   eax,eax
10002bd9:	jl     0x10002bdd
10002bdb:	xor    eax,eax
10002bdd:	leave  
10002bde:	ret    
10002bdf:	push   ebp
10002be0:	mov    ebp,esp
10002be2:	push   ecx
10002be3:	lea    eax,[ebp-0x4]
10002be6:	push   eax
10002be7:	mov    DWORD PTR [ebp-0x4],0x1400
10002bee:	call   DWORD PTR ds:0x1000104c
10002bf4:	mov    ecx,DWORD PTR [ebp+0x8]
10002bf7:	call   0x10002bc3
10002bfc:	xor    eax,eax
10002bfe:	leave  
10002bff:	ret    0x4
10002c02:	push   ebp
10002c03:	mov    ebp,esp
10002c05:	push   ecx
10002c06:	push   ecx
10002c07:	push   ebx
10002c08:	xor    ebx,ebx
10002c0a:	cmp    DWORD PTR [ebp+0x8],ebx
10002c0d:	push   edi
10002c0e:	mov    edi,ecx
10002c10:	mov    DWORD PTR [ebp-0x4],ebx
10002c13:	mov    DWORD PTR [ebp-0x8],ebx
10002c16:	je     0x10002cc7
10002c1c:	cmp    DWORD PTR [ebp+0xc],ebx
10002c1f:	je     0x10002cc7
10002c25:	push   esi
10002c26:	push   DWORD PTR [ebp+0x8]
10002c29:	call   0x1000283b
10002c2e:	mov    esi,eax
10002c30:	cmp    esi,ebx
10002c32:	jl     0x10002ca9
10002c34:	lea    eax,[ebp-0x8]
10002c37:	push   eax
10002c38:	push   ebx
10002c39:	push   edi
10002c3a:	push   0x10002bdf
10002c3f:	push   0x20000
10002c44:	push   ebx
10002c45:	call   DWORD PTR ds:0x10001048
10002c4b:	cmp    eax,ebx
10002c4d:	mov    DWORD PTR [ebp-0x4],eax
10002c50:	jne    0x10002c76
10002c52:	mov    esi,DWORD PTR ds:0x100010a0
10002c58:	call   esi
10002c5a:	test   eax,eax
10002c5c:	jg     0x10002c64
10002c5e:	call   esi
10002c60:	mov    esi,eax
10002c62:	jmp    0x10002ca9
10002c64:	call   esi
10002c66:	mov    esi,eax
10002c68:	and    esi,0xffff
10002c6e:	or     esi,0x80070000
10002c74:	jmp    0x10002ca9
10002c76:	xor    esi,esi
10002c78:	inc    esi
10002c79:	cmp    esi,ebx
10002c7b:	je     0x10002c8e
10002c7d:	cmp    DWORD PTR [edi+0x1a0],ebx
10002c83:	jne    0x10002c8e
10002c85:	mov    ecx,edi
10002c87:	call   0x10001b05
10002c8c:	mov    esi,eax
10002c8e:	push   0x1a0a
10002c93:	push   DWORD PTR [ebp-0x4]
10002c96:	call   DWORD PTR ds:0x100010b0
10002c9c:	cmp    eax,ebx
10002c9e:	je     0x10002ca7
10002ca0:	cmp    eax,0x102
10002ca5:	je     0x10002c79
10002ca7:	xor    esi,esi
10002ca9:	cmp    DWORD PTR [ebp-0x4],ebx
10002cac:	mov    eax,DWORD PTR [edi+0x1a4]
10002cb2:	mov    ecx,DWORD PTR [ebp+0xc]
10002cb5:	mov    DWORD PTR [ecx],eax
10002cb7:	je     0x10002cc2
10002cb9:	push   DWORD PTR [ebp-0x4]
10002cbc:	call   DWORD PTR ds:0x100010ac
10002cc2:	mov    eax,esi
10002cc4:	pop    esi
10002cc5:	jmp    0x10002ccc
10002cc7:	mov    eax,0x80070057
10002ccc:	pop    edi
10002ccd:	pop    ebx
10002cce:	leave  
10002ccf:	ret    0x8
10002cd2:	push   ebp
10002cd3:	mov    ebp,esp
10002cd5:	mov    ecx,DWORD PTR [ebp+0xc]
10002cd8:	test   ecx,ecx
10002cda:	je     0x10002d18
10002cdc:	mov    eax,DWORD PTR [ebp+0x10]
10002cdf:	test   eax,eax
10002ce1:	je     0x10002d18
10002ce3:	mov    edx,DWORD PTR [ebp+0x8]
10002ce6:	test   dx,0x800
10002ceb:	je     0x10002cf0
10002ced:	or     DWORD PTR [eax],0x20
10002cf0:	mov    eax,DWORD PTR [ebp+0x14]
10002cf3:	test   eax,eax
10002cf5:	je     0x10002d01
10002cf7:	test   dx,0x1000
10002cfc:	je     0x10002d01
10002cfe:	or     DWORD PTR [eax],0x2
10002d01:	test   edx,0x40000
10002d07:	je     0x10002d0c
10002d09:	or     DWORD PTR [ecx],0x60
10002d0c:	test   dl,0x40
10002d0f:	je     0x10002d14
10002d11:	or     DWORD PTR [ecx],0x1
10002d14:	xor    eax,eax
10002d16:	jmp    0x10002d1d
10002d18:	mov    eax,0x80070057
10002d1d:	pop    ebp
10002d1e:	ret    0x10
10002d21:	push   0x4
10002d23:	mov    eax,0x10005787
10002d28:	call   0x10004da3
10002d2d:	mov    esi,ecx
10002d2f:	mov    DWORD PTR [ebp-0x10],esi
10002d32:	call   0x10003156
10002d37:	xor    eax,eax
10002d39:	mov    DWORD PTR [ebp-0x4],eax
10002d3c:	mov    DWORD PTR [esi+0xc],eax
10002d3f:	mov    DWORD PTR [esi+0x10],eax
10002d42:	or     DWORD PTR [ebp-0x4],0xffffffff
10002d46:	mov    eax,esi
10002d48:	call   0x10004e7b
10002d4d:	ret    
10002d4e:	push   ebp
10002d4f:	mov    ebp,esp
10002d51:	sub    esp,0x10
10002d54:	push   esi
10002d55:	mov    esi,DWORD PTR [ebp+0x8]
10002d58:	mov    DWORD PTR [ebp-0x4],ecx
10002d5b:	xor    ecx,ecx
10002d5d:	cmp    esi,ecx
10002d5f:	mov    DWORD PTR [ebp-0x10],ecx
10002d62:	mov    DWORD PTR [ebp-0xc],ecx
10002d65:	mov    DWORD PTR [ebp-0x8],0x80004005
10002d6c:	je     0x10002ebe
10002d72:	cmp    DWORD PTR [ebp+0xc],ecx
10002d75:	je     0x10002ebe
10002d7b:	movzx  eax,WORD PTR [esi]
10002d7e:	cmp    ax,0x22
10002d82:	push   edi
10002d83:	push   0x2
10002d85:	pop    edi
10002d86:	jne    0x10002da8
10002d88:	add    esi,edi
10002d8a:	movzx  eax,WORD PTR [esi]
10002d8d:	cmp    ax,cx
10002d90:	je     0x10002e71
10002d96:	cmp    ax,0x22
10002d9a:	je     0x10002dc0
10002d9c:	add    esi,edi
10002d9e:	movzx  eax,WORD PTR [esi]
10002da1:	cmp    ax,cx
10002da4:	jne    0x10002d96
10002da6:	jmp    0x10002dc0
10002da8:	cmp    ax,cx
10002dab:	je     0x10002dc0
10002dad:	movzx  eax,ax
10002db0:	cmp    ax,0x20
10002db4:	jbe    0x10002dc0
10002db6:	add    esi,edi
10002db8:	movzx  eax,WORD PTR [esi]
10002dbb:	cmp    ax,cx
10002dbe:	jne    0x10002db0
10002dc0:	movzx  eax,WORD PTR [esi]
10002dc3:	cmp    ax,cx
10002dc6:	je     0x10002e71
10002dcc:	cmp    ax,0x20
10002dd0:	ja     0x10002ddc
10002dd2:	add    esi,edi
10002dd4:	movzx  eax,WORD PTR [esi]
10002dd7:	cmp    ax,cx
10002dda:	jne    0x10002dcc
10002ddc:	movzx  eax,WORD PTR [esi]
10002ddf:	cmp    ax,cx
10002de2:	je     0x10002e71
10002de8:	push   ebx
10002de9:	xor    ebx,ebx
10002deb:	inc    ebx
10002dec:	jmp    0x10002e51
10002dee:	cmp    ax,0x2d
10002df2:	je     0x10002e04
10002df4:	cmp    ax,0x2f
10002df8:	je     0x10002e04
10002dfa:	add    esi,edi
10002dfc:	movzx  eax,WORD PTR [esi]
10002dff:	cmp    ax,cx
10002e02:	jne    0x10002dee
10002e04:	cmp    WORD PTR [esi],cx
10002e07:	je     0x10002e56
10002e09:	add    esi,edi
10002e0b:	movzx  eax,WORD PTR [esi]
10002e0e:	cmp    eax,0x44
10002e11:	je     0x10002e77
10002e13:	cmp    eax,0x53
10002e16:	je     0x10002e33
10002e18:	cmp    eax,0x58
10002e1b:	je     0x10002e2c
10002e1d:	cmp    eax,0x64
10002e20:	je     0x10002e77
10002e22:	cmp    eax,0x73
10002e25:	je     0x10002e33
10002e27:	cmp    eax,0x78
10002e2a:	jne    0x10002e4e
10002e2c:	add    esi,edi
10002e2e:	mov    DWORD PTR [ebp-0x10],ebx
10002e31:	jmp    0x10002e4e
10002e33:	add    esi,edi
10002e35:	cmp    WORD PTR [esi],0x20
10002e39:	jbe    0x10002e33
10002e3b:	push   esi
10002e3c:	call   DWORD PTR ds:0x10001140
10002e42:	pop    ecx
10002e43:	mov    ecx,DWORD PTR [ebp-0x4]
10002e46:	mov    DWORD PTR [ecx+0xc],eax
10002e49:	mov    DWORD PTR [ebp-0xc],ebx
10002e4c:	xor    ecx,ecx
10002e4e:	movzx  eax,WORD PTR [esi]
10002e51:	cmp    ax,cx
10002e54:	jne    0x10002dee
10002e56:	cmp    DWORD PTR [ebp-0xc],ecx
10002e59:	je     0x10002e70
10002e5b:	cmp    DWORD PTR [ebp-0x10],ecx
10002e5e:	je     0x10002e70
10002e60:	mov    eax,DWORD PTR [ebp-0x4]
10002e63:	cmp    DWORD PTR [eax+0xc],ecx
10002e66:	je     0x10002e70
10002e68:	mov    eax,DWORD PTR [ebp+0xc]
10002e6b:	mov    DWORD PTR [eax],edi
10002e6d:	mov    DWORD PTR [ebp-0x8],ecx
10002e70:	pop    ebx
10002e71:	mov    eax,DWORD PTR [ebp-0x8]
10002e74:	pop    edi
10002e75:	jmp    0x10002ec3
10002e77:	add    esi,edi
10002e79:	cmp    WORD PTR [esi],0x20
10002e7d:	jbe    0x10002e77
10002e7f:	mov    ecx,DWORD PTR [ebp-0x4]
10002e82:	push   esi
10002e83:	call   0x10003378
10002e88:	mov    ecx,DWORD PTR [ebp-0x4]
10002e8b:	push   0x10001264
10002e90:	mov    DWORD PTR [ebp-0x8],eax
10002e93:	call   0x10003599
10002e98:	cmp    DWORD PTR [ebp-0xc],0x0
10002e9c:	jne    0x10002e70
10002e9e:	cmp    DWORD PTR [ebp-0x10],0x0
10002ea2:	jne    0x10002e70
10002ea4:	mov    ecx,DWORD PTR [ebp-0x4]
10002ea7:	call   0x100031e1
10002eac:	test   eax,eax
10002eae:	je     0x10002e70
10002eb0:	mov    eax,DWORD PTR [ebp+0xc]
10002eb3:	mov    DWORD PTR [eax],ebx
10002eb5:	mov    DWORD PTR [ebp-0x8],0x80004005
10002ebc:	jmp    0x10002e70
10002ebe:	mov    eax,0x80070057
10002ec3:	pop    esi
10002ec4:	leave  
10002ec5:	ret    0x8
10002ec8:	cmp    DWORD PTR [ecx+0x10],0x2
10002ecc:	jne    0x10002ed2
10002ece:	mov    eax,DWORD PTR [ecx+0xc]
10002ed1:	ret    
10002ed2:	xor    eax,eax
10002ed4:	ret    
10002ed5:	push   0x25c
10002eda:	mov    eax,0x10005757
10002edf:	call   0x10004e0c
10002ee4:	mov    edi,DWORD PTR [ebp+0xc]
10002ee7:	test   edi,edi
10002ee9:	mov    eax,DWORD PTR [ebp+0x8]
10002eec:	mov    ebx,ecx
10002eee:	jne    0x10002ef7
10002ef0:	mov    eax,0x80070057
10002ef5:	jmp    0x10002f60
10002ef7:	and    DWORD PTR [edi],0x0
10002efa:	lea    esi,[ebx+0x10]
10002efd:	and    DWORD PTR [esi],0x0
10002f00:	push   esi
10002f01:	push   eax
10002f02:	call   0x10002d4e
10002f07:	test   eax,eax
10002f09:	mov    DWORD PTR [ebp-0x268],eax
10002f0f:	jl     0x10002f5a
10002f11:	cmp    DWORD PTR [esi],0x2
10002f14:	jne    0x10002f50
10002f16:	lea    ecx,[ebp-0x264]
10002f1c:	call   0x100027d2
10002f21:	and    DWORD PTR [ebp-0x4],0x0
10002f25:	push   edi
10002f26:	mov    ecx,ebx
10002f28:	call   0x10002ec8
10002f2d:	push   eax
10002f2e:	lea    ecx,[ebp-0x264]
10002f34:	call   0x10002c02
10002f39:	mov    DWORD PTR [ebp-0x268],eax
10002f3f:	or     DWORD PTR [ebp-0x4],0xffffffff
10002f43:	lea    ecx,[ebp-0x264]
10002f49:	call   0x100021dc
10002f4e:	jmp    0x10002f5a
10002f50:	mov    DWORD PTR [ebp-0x268],0x80004005
10002f5a:	mov    eax,DWORD PTR [ebp-0x268]
10002f60:	call   0x10004e8f
10002f65:	ret    0x8
10002f68:	push   0x4
10002f6a:	mov    eax,0x10005787
10002f6f:	call   0x10004da3
10002f74:	mov    DWORD PTR [ebp-0x10],ecx
10002f77:	or     DWORD PTR [ebp-0x4],0xffffffff
10002f7b:	call   0x10003180
10002f80:	call   0x10004e7b
10002f85:	ret    
10002f86:	push   ebp
10002f87:	mov    ebp,esp
10002f89:	push   esi
10002f8a:	mov    esi,DWORD PTR [ebp+0xc]
10002f8d:	xor    eax,eax
10002f8f:	test   esi,esi
10002f91:	mov    ecx,esi
10002f93:	je     0x10002fa6
10002f95:	mov    edx,DWORD PTR [ebp+0x8]
10002f98:	cmp    WORD PTR [edx],ax
10002f9b:	je     0x10002fa2
10002f9d:	inc    edx
10002f9e:	inc    edx
10002f9f:	dec    esi
10002fa0:	jne    0x10002f98
10002fa2:	test   esi,esi
10002fa4:	jne    0x10002fab
10002fa6:	mov    eax,0x80070057
10002fab:	mov    edx,DWORD PTR [ebp+0x10]
10002fae:	test   edx,edx
10002fb0:	je     0x10002fbf
10002fb2:	test   eax,eax
10002fb4:	jl     0x10002fbc
10002fb6:	sub    ecx,esi
10002fb8:	mov    DWORD PTR [edx],ecx
10002fba:	jmp    0x10002fbf
10002fbc:	and    DWORD PTR [edx],0x0
10002fbf:	pop    esi
10002fc0:	pop    ebp
10002fc1:	ret    0xc
10002fc4:	push   ebp
10002fc5:	mov    ebp,esp
10002fc7:	push   esi
10002fc8:	mov    esi,DWORD PTR [ebp+0xc]
10002fcb:	push   edi
10002fcc:	mov    edi,DWORD PTR [ebp+0x8]
10002fcf:	lea    eax,[ebp+0xc]
10002fd2:	push   eax
10002fd3:	push   esi
10002fd4:	push   edi
10002fd5:	call   0x10002f86
10002fda:	test   eax,eax
10002fdc:	jl     0x10002ff0
10002fde:	push   DWORD PTR [ebp+0x10]
10002fe1:	mov    eax,DWORD PTR [ebp+0xc]
10002fe4:	sub    esi,eax
10002fe6:	push   esi
10002fe7:	lea    eax,[edi+eax*2]
10002fea:	push   eax
10002feb:	call   0x100022bf
10002ff0:	pop    edi
10002ff1:	pop    esi
10002ff2:	pop    ebp
10002ff3:	ret    0xc
10002ff6:	push   ebp
10002ff7:	mov    ebp,esp
10002ff9:	sub    esp,0x220
10002fff:	mov    eax,ds:0x10007060
10003004:	xor    eax,ebp
10003006:	mov    DWORD PTR [ebp-0x4],eax
10003009:	push   esi
1000300a:	mov    esi,0x105
1000300f:	push   esi
10003010:	lea    eax,[ebp-0x220]
10003016:	push   eax
10003017:	call   DWORD PTR ds:0x1000103c
1000301d:	test   eax,eax
1000301f:	jne    0x1000302c
10003021:	call   DWORD PTR ds:0x100010a0
10003027:	jmp    0x100030f4
1000302c:	cmp    eax,esi
1000302e:	jb     0x1000303a
10003030:	mov    eax,0xea
10003035:	jmp    0x100030f4
1000303a:	push   0x100012f8
1000303f:	push   0x10d
10003044:	lea    eax,[ebp-0x220]
1000304a:	push   eax
1000304b:	call   0x10002fc4
10003050:	test   eax,eax
10003052:	jl     0x100030f4
10003058:	push   edi
10003059:	lea    eax,[ebp-0x220]
1000305f:	push   eax
10003060:	call   DWORD PTR ds:0x10001040
10003066:	mov    edi,eax
10003068:	test   edi,edi
1000306a:	je     0x100030e9
1000306c:	mov    esi,DWORD PTR ds:0x10001044
10003072:	push   0x100012e8
10003077:	push   edi
10003078:	call   esi
1000307a:	test   eax,eax
1000307c:	mov    ds:0x1000708c,eax
10003081:	je     0x100030e9
10003083:	push   0x100012d0
10003088:	push   edi
10003089:	call   esi
1000308b:	test   eax,eax
1000308d:	mov    ds:0x10007090,eax
10003092:	je     0x100030e9
10003094:	push   0x100012bc
10003099:	push   edi
1000309a:	call   esi
1000309c:	test   eax,eax
1000309e:	mov    ds:0x10007094,eax
100030a3:	je     0x100030e9
100030a5:	push   0x100012a4
100030aa:	push   edi
100030ab:	call   esi
100030ad:	test   eax,eax
100030af:	mov    ds:0x10007098,eax
100030b4:	je     0x100030e9
100030b6:	push   0x10001294
100030bb:	push   edi
100030bc:	call   esi
100030be:	test   eax,eax
100030c0:	mov    ds:0x100070a0,eax
100030c5:	je     0x100030e9
100030c7:	push   0x10001280
100030cc:	push   edi
100030cd:	call   esi
100030cf:	test   eax,eax
100030d1:	mov    ds:0x100070a4,eax
100030d6:	je     0x100030e9
100030d8:	push   0x10001268
100030dd:	push   edi
100030de:	call   esi
100030e0:	test   eax,eax
100030e2:	mov    ds:0x100070a8,eax
100030e7:	jne    0x100030f1
100030e9:	call   DWORD PTR ds:0x100010a0
100030ef:	jmp    0x100030f3
100030f1:	xor    eax,eax
100030f3:	pop    edi
100030f4:	mov    ecx,DWORD PTR [ebp-0x4]
100030f7:	xor    ecx,ebp
100030f9:	pop    esi
100030fa:	call   0x10004d94
100030ff:	leave  
10003100:	ret    
10003101:	push   0x18
10003103:	mov    eax,0x100057aa
10003108:	call   0x10004da3
1000310d:	lea    ecx,[ebp-0x24]
10003110:	call   0x10002d21
10003115:	and    DWORD PTR [ebp-0x4],0x0
10003119:	and    DWORD PTR [ebp-0x10],0x0
1000311d:	call   DWORD PTR ds:0x10001038
10003123:	mov    esi,eax
10003125:	test   esi,esi
10003127:	je     0x1000313f
10003129:	call   0x10002ff6
1000312e:	test   eax,eax
10003130:	jne    0x1000313f
10003132:	lea    eax,[ebp-0x10]
10003135:	push   eax
10003136:	push   esi
10003137:	lea    ecx,[ebp-0x24]
1000313a:	call   0x10002ed5
1000313f:	mov    esi,DWORD PTR [ebp-0x10]
10003142:	or     DWORD PTR [ebp-0x4],0xffffffff
10003146:	lea    ecx,[ebp-0x24]
10003149:	call   0x10002f68
1000314e:	mov    eax,esi
10003150:	call   0x10004e7b
10003155:	ret    
10003156:	mov    eax,ecx
10003158:	xor    ecx,ecx
1000315a:	mov    DWORD PTR [eax],ecx
1000315c:	mov    DWORD PTR [eax+0x8],ecx
1000315f:	mov    DWORD PTR [eax+0x4],ecx
10003162:	ret    
10003163:	push   esi
10003164:	mov    esi,ecx
10003166:	mov    eax,DWORD PTR [esi]
10003168:	test   eax,eax
1000316a:	je     0x10003176
1000316c:	push   eax
1000316d:	call   0x10004fe8
10003172:	and    DWORD PTR [esi],0x0
10003175:	pop    ecx
10003176:	and    DWORD PTR [esi+0x8],0x0
1000317a:	and    DWORD PTR [esi+0x4],0x0
1000317e:	pop    esi
1000317f:	ret    
10003180:	jmp    0x10003163
10003185:	mov    eax,DWORD PTR [ecx+0x8]
10003188:	ret    
10003189:	mov    eax,DWORD PTR [ecx]
1000318b:	ret    
1000318c:	push   ebp
1000318d:	mov    ebp,esp
1000318f:	push   ecx
10003190:	push   ebx
10003191:	push   esi
10003192:	mov    esi,DWORD PTR ds:0x10001034
10003198:	push   edi
10003199:	push   DWORD PTR [ebp+0x8]
1000319c:	call   esi
1000319e:	push   DWORD PTR [ebp+0xc]
100031a1:	mov    edi,eax
100031a3:	call   esi
100031a5:	mov    ebx,eax
100031a7:	xor    esi,esi
100031a9:	sub    edi,ebx
100031ab:	js     0x100031d0
100031ad:	mov    eax,DWORD PTR [ebp+0x8]
100031b0:	mov    DWORD PTR [ebp-0x4],eax
100031b3:	push   ebx
100031b4:	push   DWORD PTR [ebp+0xc]
100031b7:	push   DWORD PTR [ebp-0x4]
100031ba:	call   DWORD PTR ds:0x10001134
100031c0:	add    esp,0xc
100031c3:	test   eax,eax
100031c5:	je     0x100031d9
100031c7:	add    DWORD PTR [ebp-0x4],0x2
100031cb:	inc    esi
100031cc:	cmp    esi,edi
100031ce:	jle    0x100031b3
100031d0:	xor    eax,eax
100031d2:	pop    edi
100031d3:	pop    esi
100031d4:	pop    ebx
100031d5:	leave  
100031d6:	ret    0x8
100031d9:	mov    eax,DWORD PTR [ebp+0x8]
100031dc:	lea    eax,[eax+esi*2]
100031df:	jmp    0x100031d2
100031e1:	xor    eax,eax
100031e3:	cmp    DWORD PTR [ecx],eax
100031e5:	je     0x100031ed
100031e7:	cmp    DWORD PTR [ecx+0x8],eax
100031ea:	jbe    0x100031ed
100031ec:	inc    eax
100031ed:	ret    
100031ee:	xor    eax,eax
100031f0:	cmp    DWORD PTR [ecx],eax
100031f2:	je     0x100031f9
100031f4:	cmp    DWORD PTR [ecx+0x8],eax
100031f7:	jne    0x100031fc
100031f9:	xor    eax,eax
100031fb:	inc    eax
100031fc:	ret    
100031fd:	push   ebp
100031fe:	mov    ebp,esp
10003200:	mov    eax,DWORD PTR [ebp+0x8]
10003203:	cmp    DWORD PTR [ecx+0x8],eax
10003206:	jbe    0x10003216
10003208:	mov    edx,DWORD PTR [ecx]
1000320a:	and    WORD PTR [edx+eax*2],0x0
1000320f:	mov    DWORD PTR [ecx+0x8],eax
10003212:	xor    eax,eax
10003214:	jmp    0x1000321b
10003216:	mov    eax,0x80070057
1000321b:	pop    ebp
1000321c:	ret    0x4
1000321f:	push   ebp
10003220:	mov    ebp,esp
10003222:	mov    eax,DWORD PTR [ebp+0xc]
10003225:	push   ebx
10003226:	xor    ebx,ebx
10003228:	test   eax,eax
1000322a:	jne    0x10003233
1000322c:	mov    ebx,0x80070057
10003231:	jmp    0x10003268
10003233:	push   esi
10003234:	push   edi
10003235:	push   DWORD PTR [ebp+0x14]
10003238:	mov    edi,DWORD PTR [ebp+0x8]
1000323b:	push   DWORD PTR [ebp+0x10]
1000323e:	lea    esi,[eax-0x1]
10003241:	push   esi
10003242:	push   eax
10003243:	push   edi
10003244:	call   DWORD PTR ds:0x10001130
1000324a:	add    esp,0x14
1000324d:	test   eax,eax
1000324f:	jl     0x1000325d
10003251:	cmp    eax,esi
10003253:	ja     0x1000325d
10003255:	jne    0x10003266
10003257:	and    WORD PTR [edi+esi*2],bx
1000325b:	jmp    0x10003266
1000325d:	and    WORD PTR [edi+esi*2],bx
10003261:	mov    ebx,0x8007007a
10003266:	pop    edi
10003267:	pop    esi
10003268:	mov    eax,ebx
1000326a:	pop    ebx
1000326b:	pop    ebp
1000326c:	ret    0x10
1000326f:	push   ebp
10003270:	mov    ebp,esp
10003272:	mov    eax,DWORD PTR [ebp+0x8]
10003275:	test   eax,eax
10003277:	jle    0x10003285
10003279:	and    eax,0xffff
1000327e:	or     eax,0x80070000
10003283:	test   eax,eax
10003285:	jl     0x1000328c
10003287:	mov    eax,0x80004005
1000328c:	pop    ebp
1000328d:	ret    0x4
10003290:	push   0xc
10003292:	mov    eax,0x100057c5
10003297:	call   0x10004dd6
1000329c:	xor    esi,esi
1000329e:	cmp    DWORD PTR [ebp+0x8],esi
100032a1:	je     0x10003350
100032a7:	cmp    DWORD PTR [ebp+0xc],esi
100032aa:	je     0x10003350
100032b0:	push   DWORD PTR [ebp+0x8]
100032b3:	call   DWORD PTR ds:0x10001030
100032b9:	mov    ebx,eax
100032bb:	mov    DWORD PTR [ebp-0x14],ebx
100032be:	push   esi
100032bf:	push   esi
100032c0:	lea    eax,[ebx+0x1]
100032c3:	push   eax
100032c4:	push   DWORD PTR [ebp+0x8]
100032c7:	push   esi
100032c8:	push   esi
100032c9:	call   DWORD PTR ds:0x10001058
100032cf:	mov    edi,eax
100032d1:	mov    DWORD PTR [ebp-0x18],edi
100032d4:	cmp    edi,esi
100032d6:	jne    0x100032ef
100032d8:	call   DWORD PTR ds:0x100010a0
100032de:	push   eax
100032df:	call   0x1000326f
100032e4:	cmp    eax,esi
100032e6:	jl     0x10003355
100032e8:	mov    eax,0x80004005
100032ed:	jmp    0x10003355
100032ef:	mov    eax,DWORD PTR [ebp+0xc]
100032f2:	mov    DWORD PTR [eax],esi
100032f4:	mov    DWORD PTR [ebp-0x4],esi
100032f7:	lea    eax,[edi+0x1]
100032fa:	xor    ecx,ecx
100032fc:	push   0x2
100032fe:	pop    edx
100032ff:	mul    edx
10003301:	seto   cl
10003304:	neg    ecx
10003306:	or     ecx,eax
10003308:	push   ecx
10003309:	call   0x10004fee
1000330e:	pop    ecx
1000330f:	mov    ecx,DWORD PTR [ebp+0xc]
10003312:	mov    DWORD PTR [ecx],eax
10003314:	or     DWORD PTR [ebp-0x4],0xffffffff
10003318:	jmp    0x10003328
1000331a:	mov    eax,0x10003320
1000331f:	ret    
10003320:	xor    esi,esi
10003322:	mov    ebx,DWORD PTR [ebp-0x14]
10003325:	mov    edi,DWORD PTR [ebp-0x18]
10003328:	mov    eax,DWORD PTR [ebp+0xc]
1000332b:	mov    eax,DWORD PTR [eax]
1000332d:	cmp    eax,esi
1000332f:	jne    0x10003338
10003331:	mov    eax,0x8007000e
10003336:	jmp    0x10003355
10003338:	inc    edi
10003339:	push   edi
1000333a:	push   eax
1000333b:	inc    ebx
1000333c:	push   ebx
1000333d:	push   DWORD PTR [ebp+0x8]
10003340:	push   esi
10003341:	push   esi
10003342:	call   DWORD PTR ds:0x10001058
10003348:	test   eax,eax
1000334a:	je     0x100032d8
1000334c:	xor    eax,eax
1000334e:	jmp    0x10003355
10003350:	mov    eax,0x80070057
10003355:	call   0x10004e7b
1000335a:	ret    0x8
1000335d:	push   ebp
1000335e:	mov    ebp,esp
10003360:	cmp    DWORD PTR [ebp+0xc],0x7fffffff
10003367:	jbe    0x10003372
10003369:	mov    eax,0x80070057
1000336e:	pop    ebp
1000336f:	ret    0x10
10003372:	pop    ebp
10003373:	jmp    0x1000321f
10003378:	push   0xc
1000337a:	mov    eax,0x100057e0
1000337f:	call   0x10004dd6
10003384:	mov    esi,ecx
10003386:	mov    DWORD PTR [ebp-0x14],esi
10003389:	cmp    DWORD PTR [ebp+0x8],0x0
1000338d:	jne    0x10003399
1000338f:	call   0x10003163
10003394:	jmp    0x10003424
10003399:	push   DWORD PTR [ebp+0x8]
1000339c:	call   DWORD PTR ds:0x10001034
100033a2:	mov    edi,eax
100033a4:	mov    DWORD PTR [ebp-0x18],edi
100033a7:	cmp    edi,0x10000
100033ad:	jle    0x100033b6
100033af:	mov    eax,0x80070057
100033b4:	jmp    0x10003426
100033b6:	lea    ebx,[edi+0x1]
100033b9:	cmp    ebx,DWORD PTR [esi+0x4]
100033bc:	ja     0x100033c3
100033be:	cmp    DWORD PTR [esi],0x0
100033c1:	jne    0x10003410
100033c3:	mov    ecx,esi
100033c5:	call   0x10003163
100033ca:	and    DWORD PTR [ebp-0x4],0x0
100033ce:	xor    ecx,ecx
100033d0:	mov    eax,ebx
100033d2:	push   0x2
100033d4:	pop    edx
100033d5:	mul    edx
100033d7:	seto   cl
100033da:	neg    ecx
100033dc:	or     ecx,eax
100033de:	push   ecx
100033df:	call   0x10004fee
100033e4:	pop    ecx
100033e5:	mov    DWORD PTR [esi],eax
100033e7:	or     DWORD PTR [ebp-0x4],0xffffffff
100033eb:	jmp    0x100033f9
100033ed:	mov    eax,0x100033f3
100033f2:	ret    
100033f3:	mov    esi,DWORD PTR [ebp-0x14]
100033f6:	mov    edi,DWORD PTR [ebp-0x18]
100033f9:	mov    eax,DWORD PTR [esi]
100033fb:	test   eax,eax
100033fd:	jne    0x10003406
100033ff:	mov    eax,0x8007000e
10003404:	jmp    0x10003426
10003406:	and    WORD PTR [eax],0x0
1000340a:	lea    eax,[edi+0x1]
1000340d:	mov    DWORD PTR [esi+0x4],eax
10003410:	push   DWORD PTR [ebp+0x8]
10003413:	push   DWORD PTR [esi+0x4]
10003416:	push   DWORD PTR [esi]
10003418:	call   0x100023f5
1000341d:	test   eax,eax
1000341f:	jl     0x10003426
10003421:	mov    DWORD PTR [esi+0x8],edi
10003424:	xor    eax,eax
10003426:	call   0x10004e7b
1000342b:	ret    0x4
1000342e:	push   0x10
10003430:	mov    eax,0x100057fb
10003435:	call   0x10004dd6
1000343a:	xor    esi,esi
1000343c:	mov    DWORD PTR [ebp-0x18],esi
1000343f:	mov    DWORD PTR [ebp-0x14],esi
10003442:	cmp    DWORD PTR [ebp+0xc],esi
10003445:	jne    0x10003451
10003447:	mov    eax,0x80070057
1000344c:	jmp    0x10003534
10003451:	push   DWORD PTR [ebp+0x10]
10003454:	push   DWORD PTR [ebp+0xc]
10003457:	call   DWORD PTR ds:0x1000112c
1000345d:	pop    ecx
1000345e:	pop    ecx
1000345f:	mov    edi,eax
10003461:	cmp    edi,esi
10003463:	jne    0x1000346f
10003465:	mov    edi,0x80004005
1000346a:	jmp    0x10003532
1000346f:	cmp    edi,0x10000
10003475:	jbe    0x10003481
10003477:	mov    edi,0x80070057
1000347c:	jmp    0x10003532
10003481:	inc    edi
10003482:	mov    DWORD PTR [ebp-0x1c],edi
10003485:	mov    ebx,DWORD PTR [ebp+0x8]
10003488:	mov    eax,DWORD PTR [ebx+0x4]
1000348b:	cmp    eax,edi
1000348d:	jb     0x10003499
1000348f:	mov    esi,DWORD PTR [ebx]
10003491:	test   esi,esi
10003493:	je     0x10003499
10003495:	mov    edi,eax
10003497:	jmp    0x100034e0
10003499:	and    DWORD PTR [ebp-0x4],0x0
1000349d:	xor    ecx,ecx
1000349f:	mov    eax,edi
100034a1:	push   0x2
100034a3:	pop    edx
100034a4:	mul    edx
100034a6:	seto   cl
100034a9:	neg    ecx
100034ab:	or     ecx,eax
100034ad:	push   ecx
100034ae:	call   0x10004fee
100034b3:	pop    ecx
100034b4:	mov    esi,eax
100034b6:	mov    DWORD PTR [ebp-0x18],esi
100034b9:	or     DWORD PTR [ebp-0x4],0xffffffff
100034bd:	jmp    0x100034ce
100034bf:	mov    eax,0x100034c5
100034c4:	ret    
100034c5:	mov    ebx,DWORD PTR [ebp+0x8]
100034c8:	mov    esi,DWORD PTR [ebp-0x18]
100034cb:	mov    edi,DWORD PTR [ebp-0x1c]
100034ce:	test   esi,esi
100034d0:	jne    0x100034d9
100034d2:	mov    edi,0x8007000e
100034d7:	jmp    0x10003532
100034d9:	mov    DWORD PTR [ebp-0x14],0x1
100034e0:	and    WORD PTR [esi],0x0
100034e4:	push   DWORD PTR [ebp+0x10]
100034e7:	push   DWORD PTR [ebp+0xc]
100034ea:	push   edi
100034eb:	push   esi
100034ec:	call   0x1000335d
100034f1:	mov    edi,eax
100034f3:	test   edi,edi
100034f5:	jl     0x10003525
100034f7:	cmp    DWORD PTR [ebp-0x14],0x0
100034fb:	je     0x1000350d
100034fd:	push   esi
100034fe:	mov    ecx,ebx
10003500:	call   0x10003378
10003505:	mov    edi,eax
10003507:	test   edi,edi
10003509:	jl     0x10003525
1000350b:	jmp    0x10003523
1000350d:	mov    eax,esi
1000350f:	lea    edx,[eax+0x2]
10003512:	mov    cx,WORD PTR [eax]
10003515:	inc    eax
10003516:	inc    eax
10003517:	test   cx,cx
1000351a:	jne    0x10003512
1000351c:	sub    eax,edx
1000351e:	sar    eax,1
10003520:	mov    DWORD PTR [ebx+0x8],eax
10003523:	xor    edi,edi
10003525:	cmp    DWORD PTR [ebp-0x14],0x0
10003529:	je     0x10003532
1000352b:	push   esi
1000352c:	call   0x10004fe8
10003531:	pop    ecx
10003532:	mov    eax,edi
10003534:	call   0x10004e7b
10003539:	ret    
1000353a:	push   ebp
1000353b:	mov    ebp,esp
1000353d:	sub    esp,0x204
10003543:	mov    eax,ds:0x10007060
10003548:	xor    eax,ebp
1000354a:	mov    DWORD PTR [ebp-0x4],eax
1000354d:	mov    eax,DWORD PTR [ebp+0xc]
10003550:	and    WORD PTR [ebp-0x204],0x0
10003558:	push   esi
10003559:	push   0x100
1000355e:	mov    esi,ecx
10003560:	lea    ecx,[ebp-0x204]
10003566:	push   ecx
10003567:	push   DWORD PTR [ebp+0x8]
1000356a:	push   eax
1000356b:	call   DWORD PTR ds:0x1000116c
10003571:	test   eax,eax
10003573:	je     0x10003585
10003575:	lea    eax,[ebp-0x204]
1000357b:	push   eax
1000357c:	mov    ecx,esi
1000357e:	call   0x10003378
10003583:	jmp    0x1000358a
10003585:	mov    eax,0x80004005
1000358a:	mov    ecx,DWORD PTR [ebp-0x4]
1000358d:	xor    ecx,ebp
1000358f:	pop    esi
10003590:	call   0x10004d94
10003595:	leave  
10003596:	ret    0x8
10003599:	push   ebp
1000359a:	mov    ebp,esp
1000359c:	push   ebx
1000359d:	mov    ebx,ecx
1000359f:	push   esi
100035a0:	mov    esi,DWORD PTR [ebx+0x8]
100035a3:	test   esi,esi
100035a5:	je     0x10003646
100035ab:	push   edi
100035ac:	mov    edi,DWORD PTR [ebx]
100035ae:	jmp    0x100035d6
100035b0:	push   eax
100035b1:	call   DWORD PTR ds:0x10001124
100035b7:	test   eax,eax
100035b9:	pop    ecx
100035ba:	jne    0x100035d4
100035bc:	cmp    DWORD PTR [ebp+0x8],eax
100035bf:	je     0x100035ec
100035c1:	movzx  eax,WORD PTR [edi]
100035c4:	push   eax
100035c5:	push   DWORD PTR [ebp+0x8]
100035c8:	call   DWORD PTR ds:0x10001150
100035ce:	test   eax,eax
100035d0:	pop    ecx
100035d1:	pop    ecx
100035d2:	je     0x100035ec
100035d4:	inc    edi
100035d5:	inc    edi
100035d6:	movzx  eax,WORD PTR [edi]
100035d9:	test   ax,ax
100035dc:	jne    0x100035b0
100035de:	push   0x1000131c
100035e3:	mov    ecx,ebx
100035e5:	call   0x10003378
100035ea:	jmp    0x10003645
100035ec:	mov    eax,DWORD PTR [ebx]
100035ee:	lea    esi,[eax+esi*2-0x2]
100035f2:	jmp    0x1000361d
100035f4:	movzx  eax,WORD PTR [esi]
100035f7:	push   eax
100035f8:	call   DWORD PTR ds:0x10001124
100035fe:	test   eax,eax
10003600:	pop    ecx
10003601:	jne    0x1000361b
10003603:	cmp    DWORD PTR [ebp+0x8],eax
10003606:	je     0x10003621
10003608:	movzx  eax,WORD PTR [esi]
1000360b:	push   eax
1000360c:	push   DWORD PTR [ebp+0x8]
1000360f:	call   DWORD PTR ds:0x10001150
10003615:	test   eax,eax
10003617:	pop    ecx
10003618:	pop    ecx
10003619:	je     0x10003621
1000361b:	dec    esi
1000361c:	dec    esi
1000361d:	cmp    esi,edi
1000361f:	ja     0x100035f4
10003621:	and    WORD PTR [esi+0x2],0x0
10003626:	sub    esi,edi
10003628:	inc    esi
10003629:	inc    esi
1000362a:	sar    esi,1
1000362c:	mov    DWORD PTR [ebx+0x8],esi
1000362f:	mov    ebx,DWORD PTR [ebx]
10003631:	cmp    edi,ebx
10003633:	jbe    0x10003645
10003635:	lea    eax,[esi+esi*1+0x2]
10003639:	push   eax
1000363a:	push   edi
1000363b:	push   ebx
1000363c:	call   DWORD PTR ds:0x10001128
10003642:	add    esp,0xc
10003645:	pop    edi
10003646:	pop    esi
10003647:	xor    eax,eax
10003649:	pop    ebx
1000364a:	pop    ebp
1000364b:	ret    0x4
1000364e:	push   ebp
1000364f:	mov    ebp,esp
10003651:	cmp    DWORD PTR [ebp+0xc],0x7fffffff
10003658:	jbe    0x10003663
1000365a:	mov    eax,0x80070057
1000365f:	pop    ebp
10003660:	ret    0xc
10003663:	pop    ebp
10003664:	jmp    0x10002fc4
10003669:	push   ebp
1000366a:	mov    ebp,esp
1000366c:	push   ecx
1000366d:	mov    eax,DWORD PTR [ebp+0x8]
10003670:	and    DWORD PTR [ebp-0x4],0x0
10003674:	test   eax,eax
10003676:	push   ebx
10003677:	mov    ebx,ecx
10003679:	je     0x100036b4
1000367b:	cmp    BYTE PTR [eax],0x0
1000367e:	je     0x100036b4
10003680:	push   esi
10003681:	push   edi
10003682:	lea    ecx,[ebp-0x4]
10003685:	push   ecx
10003686:	push   eax
10003687:	call   0x10003290
1000368c:	mov    esi,DWORD PTR [ebp-0x4]
1000368f:	mov    edi,eax
10003691:	test   edi,edi
10003693:	jl     0x100036a3
10003695:	test   esi,esi
10003697:	je     0x100036ae
10003699:	push   esi
1000369a:	mov    ecx,ebx
1000369c:	call   0x10003378
100036a1:	mov    edi,eax
100036a3:	test   esi,esi
100036a5:	je     0x100036ae
100036a7:	push   esi
100036a8:	call   0x10004fe8
100036ad:	pop    ecx
100036ae:	mov    eax,edi
100036b0:	pop    edi
100036b1:	pop    esi
100036b2:	jmp    0x100036be
100036b4:	push   0x1000131c
100036b9:	call   0x10003378
100036be:	pop    ebx
100036bf:	leave  
100036c0:	ret    0x4
100036c3:	push   ebp
100036c4:	mov    ebp,esp
100036c6:	mov    eax,DWORD PTR [ebp+0x8]
100036c9:	push   DWORD PTR [eax]
100036cb:	call   0x10003378
100036d0:	pop    ebp
100036d1:	ret    0x4
100036d4:	push   0xc
100036d6:	mov    eax,0x10005816
100036db:	call   0x10004dd6
100036e0:	mov    DWORD PTR [ebp-0x18],ecx
100036e3:	and    DWORD PTR [ebp-0x14],0x0
100036e7:	mov    eax,DWORD PTR [ebp+0xc]
100036ea:	lea    ecx,[eax+0x1]
100036ed:	mov    DWORD PTR [ebp+0xc],ecx
100036f0:	cmp    ecx,eax
100036f2:	jae    0x100036fb
100036f4:	mov    eax,0x80070216
100036f9:	jmp    0x1000375f
100036fb:	and    DWORD PTR [ebp-0x4],0x0
100036ff:	xor    ebx,ebx
10003701:	mov    eax,ecx
10003703:	push   0x2
10003705:	pop    ecx
10003706:	mul    ecx
10003708:	seto   bl
1000370b:	neg    ebx
1000370d:	or     ebx,eax
1000370f:	push   ebx
10003710:	call   0x10004fee
10003715:	pop    ecx
10003716:	mov    DWORD PTR [ebp-0x14],eax
10003719:	or     DWORD PTR [ebp-0x4],0xffffffff
1000371d:	mov    edi,DWORD PTR [ebp-0x14]
10003720:	test   edi,edi
10003722:	jne    0x10003731
10003724:	mov    esi,0x8007000e
10003729:	jmp    0x1000375d
1000372b:	mov    eax,0x1000371d
10003730:	ret    
10003731:	push   DWORD PTR [ebp+0x8]
10003734:	push   DWORD PTR [ebp+0xc]
10003737:	push   edi
10003738:	call   0x100023f5
1000373d:	mov    esi,eax
1000373f:	test   esi,esi
10003741:	jge    0x1000374b
10003743:	cmp    esi,0x8007007a
10003749:	jne    0x10003756
1000374b:	push   edi
1000374c:	mov    ecx,DWORD PTR [ebp-0x18]
1000374f:	call   0x10003378
10003754:	mov    esi,eax
10003756:	push   edi
10003757:	call   0x10004fe8
1000375c:	pop    ecx
1000375d:	mov    eax,esi
1000375f:	call   0x10004e7b
10003764:	ret    0x8
10003767:	push   0x10
10003769:	mov    eax,0x10005831
1000376e:	call   0x10004dd6
10003773:	mov    esi,ecx
10003775:	mov    DWORD PTR [ebp-0x18],esi
10003778:	xor    ebx,ebx
1000377a:	mov    DWORD PTR [ebp-0x14],ebx
1000377d:	cmp    DWORD PTR [ebp+0x8],ebx
10003780:	jne    0x10003789
10003782:	xor    eax,eax
10003784:	jmp    0x10003861
10003789:	push   DWORD PTR [ebp+0x8]
1000378c:	call   DWORD PTR ds:0x10001034
10003792:	mov    edi,eax
10003794:	cmp    edi,ebx
10003796:	je     0x1000385f
1000379c:	mov    eax,DWORD PTR [esi+0x8]
1000379f:	add    eax,edi
100037a1:	mov    ecx,DWORD PTR [esi+0x4]
100037a4:	cmp    eax,ecx
100037a6:	jae    0x100037ca
100037a8:	mov    edx,DWORD PTR [esi]
100037aa:	cmp    edx,ebx
100037ac:	je     0x100037ca
100037ae:	push   DWORD PTR [ebp+0x8]
100037b1:	push   ecx
100037b2:	push   edx
100037b3:	call   0x1000364e
100037b8:	mov    ebx,eax
100037ba:	test   ebx,ebx
100037bc:	jl     0x1000385f
100037c2:	add    DWORD PTR [esi+0x8],edi
100037c5:	jmp    0x1000384b
100037ca:	lea    edi,[eax+0x1]
100037cd:	mov    DWORD PTR [ebp-0x1c],edi
100037d0:	and    DWORD PTR [ebp-0x4],0x0
100037d4:	xor    ecx,ecx
100037d6:	mov    eax,edi
100037d8:	push   0x2
100037da:	pop    edx
100037db:	mul    edx
100037dd:	seto   cl
100037e0:	neg    ecx
100037e2:	or     ecx,eax
100037e4:	push   ecx
100037e5:	call   0x10004fee
100037ea:	pop    ecx
100037eb:	mov    DWORD PTR [ebp-0x14],eax
100037ee:	or     DWORD PTR [ebp-0x4],0xffffffff
100037f2:	jmp    0x10003800
100037f4:	mov    eax,0x100037fa
100037f9:	ret    
100037fa:	mov    esi,DWORD PTR [ebp-0x18]
100037fd:	mov    edi,DWORD PTR [ebp-0x1c]
10003800:	mov    ecx,DWORD PTR [ebp-0x14]
10003803:	test   ecx,ecx
10003805:	jne    0x1000380e
10003807:	mov    ebx,0x8007000e
1000380c:	jmp    0x1000385f
1000380e:	and    WORD PTR [ecx],0x0
10003812:	mov    eax,DWORD PTR [esi]
10003814:	test   eax,eax
10003816:	je     0x10003826
10003818:	push   eax
10003819:	push   edi
1000381a:	push   ecx
1000381b:	call   0x100023f5
10003820:	mov    ebx,eax
10003822:	test   ebx,ebx
10003824:	jl     0x1000384d
10003826:	push   DWORD PTR [ebp+0x8]
10003829:	push   edi
1000382a:	push   DWORD PTR [ebp-0x14]
1000382d:	call   0x1000364e
10003832:	mov    ebx,eax
10003834:	test   ebx,ebx
10003836:	jl     0x1000384d
10003838:	mov    ecx,esi
1000383a:	call   0x10003163
1000383f:	mov    eax,DWORD PTR [ebp-0x14]
10003842:	mov    DWORD PTR [esi],eax
10003844:	mov    DWORD PTR [esi+0x4],edi
10003847:	dec    edi
10003848:	mov    DWORD PTR [esi+0x8],edi
1000384b:	xor    ebx,ebx
1000384d:	mov    eax,DWORD PTR [ebp-0x14]
10003850:	test   eax,eax
10003852:	je     0x1000385f
10003854:	cmp    DWORD PTR [esi],eax
10003856:	je     0x1000385f
10003858:	push   eax
10003859:	call   0x10004fe8
1000385e:	pop    ecx
1000385f:	mov    eax,ebx
10003861:	call   0x10004e7b
10003866:	ret    0x4
10003869:	push   ebp
1000386a:	mov    ebp,esp
1000386c:	cmp    DWORD PTR [ebp+0xc],0x0
10003870:	jne    0x10003879
10003872:	mov    eax,0x80070057
10003877:	pop    ebp
10003878:	ret    
10003879:	lea    eax,[ebp+0x10]
1000387c:	push   eax
1000387d:	push   DWORD PTR [ebp+0xc]
10003880:	push   DWORD PTR [ebp+0x8]
10003883:	call   0x1000342e
10003888:	add    esp,0xc
1000388b:	pop    ebp
1000388c:	ret    
1000388d:	push   ebp
1000388e:	mov    ebp,esp
10003890:	push   esi
10003891:	push   0x0
10003893:	mov    esi,ecx
10003895:	call   DWORD PTR ds:0x1000102c
1000389b:	push   eax
1000389c:	push   DWORD PTR [ebp+0x8]
1000389f:	mov    ecx,esi
100038a1:	call   0x1000353a
100038a6:	pop    esi
100038a7:	pop    ebp
100038a8:	ret    0x4
100038ab:	push   0x1c
100038ad:	mov    eax,0x10005854
100038b2:	call   0x10004da3
100038b7:	mov    DWORD PTR [ebp-0x1c],ecx
100038ba:	push   DWORD PTR [ebp+0x8]
100038bd:	mov    edi,DWORD PTR [ecx]
100038bf:	call   DWORD PTR ds:0x10001034
100038c5:	xor    ebx,ebx
100038c7:	mov    DWORD PTR [ebp-0x18],eax
100038ca:	mov    DWORD PTR [ebp-0x28],ebx
100038cd:	mov    DWORD PTR [ebp-0x20],ebx
100038d0:	mov    DWORD PTR [ebp-0x24],ebx
100038d3:	mov    DWORD PTR [ebp-0x4],ebx
100038d6:	push   DWORD PTR [ebp+0x8]
100038d9:	mov    DWORD PTR [ebp-0x10],ebx
100038dc:	push   edi
100038dd:	call   0x1000318c
100038e2:	mov    esi,eax
100038e4:	cmp    esi,ebx
100038e6:	je     0x10003956
100038e8:	movzx  eax,WORD PTR [esi]
100038eb:	push   edi
100038ec:	lea    ecx,[ebp-0x28]
100038ef:	mov    DWORD PTR [ebp-0x14],eax
100038f2:	mov    WORD PTR [esi],bx
100038f5:	call   0x10003767
100038fa:	mov    edi,eax
100038fc:	cmp    edi,ebx
100038fe:	mov    ax,WORD PTR [ebp-0x14]
10003902:	mov    WORD PTR [esi],ax
10003905:	jl     0x1000395d
10003907:	push   DWORD PTR [ebp+0xc]
1000390a:	lea    ecx,[ebp-0x28]
1000390d:	call   0x10003767
10003912:	mov    edi,eax
10003914:	cmp    edi,ebx
10003916:	jl     0x1000395d
10003918:	mov    eax,DWORD PTR [ebp-0x18]
1000391b:	push   DWORD PTR [ebp+0x8]
1000391e:	inc    DWORD PTR [ebp-0x10]
10003921:	lea    edi,[esi+eax*2]
10003924:	push   edi
10003925:	call   0x1000318c
1000392a:	mov    esi,eax
1000392c:	cmp    esi,ebx
1000392e:	jne    0x100038e8
10003930:	cmp    DWORD PTR [ebp-0x20],ebx
10003933:	je     0x10003956
10003935:	push   edi
10003936:	lea    ecx,[ebp-0x28]
10003939:	call   0x10003767
1000393e:	mov    edi,eax
10003940:	cmp    edi,ebx
10003942:	jl     0x1000395d
10003944:	mov    ecx,DWORD PTR [ebp-0x1c]
10003947:	lea    eax,[ebp-0x28]
1000394a:	push   eax
1000394b:	call   0x100036c3
10003950:	mov    edi,eax
10003952:	cmp    edi,ebx
10003954:	jl     0x1000395d
10003956:	mov    ecx,DWORD PTR [ebp-0x10]
10003959:	xor    edi,edi
1000395b:	jmp    0x10003960
1000395d:	or     ecx,0xffffffff
10003960:	mov    eax,DWORD PTR [ebp+0x10]
10003963:	cmp    eax,ebx
10003965:	je     0x10003969
10003967:	mov    DWORD PTR [eax],ecx
10003969:	or     DWORD PTR [ebp-0x4],0xffffffff
1000396d:	lea    ecx,[ebp-0x28]
10003970:	call   0x10003163
10003975:	mov    eax,edi
10003977:	call   0x10004e7b
1000397c:	ret    0xc
1000397f:	push   ebp
10003980:	mov    ebp,esp
10003982:	mov    eax,DWORD PTR [ebp+0x8]
10003985:	push   esi
10003986:	push   DWORD PTR [ebp+0xc]
10003989:	mov    esi,ecx
1000398b:	lea    ecx,[esi+0x14]
1000398e:	mov    DWORD PTR [esi+0xc],eax
10003991:	call   0x10003378
10003996:	test   eax,eax
10003998:	jl     0x100039cf
1000399a:	push   DWORD PTR [ebp+0x10]
1000399d:	lea    ecx,[esi+0x20]
100039a0:	call   0x10003378
100039a5:	test   eax,eax
100039a7:	jl     0x100039cf
100039a9:	mov    eax,DWORD PTR [ebp+0x14]
100039ac:	mov    DWORD PTR [esi+0x2c],eax
100039af:	mov    eax,DWORD PTR [esi+0x8]
100039b2:	test   eax,eax
100039b4:	je     0x100039c4
100039b6:	push   eax
100039b7:	call   0x10004fe8
100039bc:	and    DWORD PTR [esi+0x8],0x0
100039c0:	and    DWORD PTR [esi],0x0
100039c3:	pop    ecx
100039c4:	mov    DWORD PTR [esi+0x4],0x1
100039cb:	xor    eax,eax
100039cd:	jmp    0x100039d4
100039cf:	mov    eax,0x80004005
100039d4:	pop    esi
100039d5:	pop    ebp
100039d6:	ret    0x10
100039d9:	push   ebp
100039da:	mov    ebp,esp
100039dc:	xor    eax,eax
100039de:	mov    ecx,DWORD PTR [eax*8+0x1000700c]
100039e5:	cmp    ecx,DWORD PTR [ebp+0x8]
100039e8:	je     0x100039f7
100039ea:	inc    eax
100039eb:	cmp    eax,0xb
100039ee:	jl     0x100039de
100039f0:	push   0x9
100039f2:	pop    eax
100039f3:	pop    ebp
100039f4:	ret    0x4
100039f7:	mov    eax,DWORD PTR [eax*8+0x10007008]
100039fe:	jmp    0x100039f3
10003a00:	push   0x14
10003a02:	mov    eax,0x1000586f
10003a07:	call   0x10004dd6
10003a0c:	mov    esi,ecx
10003a0e:	mov    DWORD PTR [ebp-0x20],esi
10003a11:	mov    edi,DWORD PTR [ebp+0x8]
10003a14:	mov    DWORD PTR [ebp-0x14],edi
10003a17:	xor    ebx,ebx
10003a19:	mov    DWORD PTR [ebp+0x8],ebx
10003a1c:	mov    DWORD PTR [ebp-0x1c],ebx
10003a1f:	cmp    edi,ebx
10003a21:	jne    0x10003a2d
10003a23:	mov    eax,0x80070057
10003a28:	jmp    0x10003b97
10003a2d:	lea    ecx,[esi+0x20]
10003a30:	call   0x100031ee
10003a35:	test   eax,eax
10003a37:	je     0x10003a43
10003a39:	mov    eax,0xe0000000
10003a3e:	jmp    0x10003b97
10003a43:	cmp    DWORD PTR [esi+0x4],ebx
10003a46:	je     0x10003b84
10003a4c:	cmp    DWORD PTR [esi],ebx
10003a4e:	jne    0x10003b84
10003a54:	lea    ebx,[esi+0x14]
10003a57:	mov    ecx,ebx
10003a59:	call   0x10003185
10003a5e:	test   eax,eax
10003a60:	jne    0x10003a7c
10003a62:	xor    ebx,ebx
10003a64:	cmp    DWORD PTR [ebp-0x14],ebx
10003a67:	je     0x10003aad
10003a69:	cmp    DWORD PTR [ebp-0x14],edi
10003a6c:	je     0x10003aad
10003a6e:	push   DWORD PTR [ebp-0x14]
10003a71:	call   DWORD PTR ds:0x10001014
10003a77:	mov    DWORD PTR [ebp-0x14],edi
10003a7a:	jmp    0x10003aad
10003a7c:	lea    eax,[ebp-0x14]
10003a7f:	push   eax
10003a80:	push   0x20019
10003a85:	push   0x0
10003a87:	mov    ecx,ebx
10003a89:	call   0x10003189
10003a8e:	push   eax
10003a8f:	push   edi
10003a90:	call   DWORD PTR ds:0x1000100c
10003a96:	test   eax,eax
10003a98:	je     0x10003aa4
10003a9a:	mov    esi,0x80004005
10003a9f:	jmp    0x10003b95
10003aa4:	mov    DWORD PTR [ebp-0x1c],0x1
10003aab:	xor    ebx,ebx
10003aad:	lea    eax,[ebp+0x8]
10003ab0:	push   eax
10003ab1:	push   ebx
10003ab2:	lea    eax,[ebp-0x18]
10003ab5:	push   eax
10003ab6:	push   ebx
10003ab7:	lea    ecx,[esi+0x20]
10003aba:	call   0x10003189
10003abf:	push   eax
10003ac0:	push   DWORD PTR [ebp-0x14]
10003ac3:	call   DWORD PTR ds:0x10001010
10003ac9:	cmp    eax,ebx
10003acb:	je     0x10003ad7
10003acd:	mov    esi,0x80004005
10003ad2:	jmp    0x10003b86
10003ad7:	mov    eax,DWORD PTR [ebp-0x18]
10003ada:	cmp    eax,0x1
10003add:	je     0x10003aef
10003adf:	cmp    eax,0x2
10003ae2:	je     0x10003aef
10003ae4:	cmp    eax,0x7
10003ae7:	jne    0x10003af2
10003ae9:	add    DWORD PTR [ebp+0x8],0x2
10003aed:	jmp    0x10003af2
10003aef:	inc    DWORD PTR [ebp+0x8]
10003af2:	push   eax
10003af3:	call   0x100039d9
10003af8:	cmp    DWORD PTR [esi+0xc],0x9
10003afc:	jne    0x10003b01
10003afe:	mov    DWORD PTR [esi+0xc],eax
10003b01:	cmp    DWORD PTR [esi+0xc],eax
10003b04:	jne    0x10003acd
10003b06:	mov    eax,DWORD PTR [esi+0x8]
10003b09:	cmp    eax,ebx
10003b0b:	je     0x10003b17
10003b0d:	push   eax
10003b0e:	call   0x10004fe8
10003b13:	pop    ecx
10003b14:	mov    DWORD PTR [esi+0x8],ebx
10003b17:	mov    DWORD PTR [ebp-0x4],ebx
10003b1a:	push   DWORD PTR [ebp+0x8]
10003b1d:	call   0x10004fee
10003b22:	pop    ecx
10003b23:	mov    DWORD PTR [esi+0x8],eax
10003b26:	or     DWORD PTR [ebp-0x4],0xffffffff
10003b2a:	jmp    0x10003b37
10003b2c:	mov    eax,0x10003b32
10003b31:	ret    
10003b32:	mov    esi,DWORD PTR [ebp-0x20]
10003b35:	xor    ebx,ebx
10003b37:	mov    eax,DWORD PTR [esi+0x8]
10003b3a:	cmp    eax,ebx
10003b3c:	jne    0x10003b45
10003b3e:	mov    esi,0x8007000e
10003b43:	jmp    0x10003b86
10003b45:	push   DWORD PTR [ebp+0x8]
10003b48:	push   ebx
10003b49:	push   eax
10003b4a:	call   0x10004eae
10003b4f:	add    esp,0xc
10003b52:	lea    eax,[ebp+0x8]
10003b55:	push   eax
10003b56:	push   DWORD PTR [esi+0x8]
10003b59:	lea    eax,[ebp-0x18]
10003b5c:	push   eax
10003b5d:	push   ebx
10003b5e:	lea    ecx,[esi+0x20]
10003b61:	call   0x10003189
10003b66:	push   eax
10003b67:	push   DWORD PTR [ebp-0x14]
10003b6a:	call   DWORD PTR ds:0x10001010
10003b70:	test   eax,eax
10003b72:	jne    0x10003acd
10003b78:	mov    DWORD PTR [esi],0x1
10003b7e:	mov    eax,DWORD PTR [ebp+0x8]
10003b81:	mov    DWORD PTR [esi+0x10],eax
10003b84:	xor    esi,esi
10003b86:	cmp    DWORD PTR [ebp-0x1c],0x0
10003b8a:	je     0x10003b95
10003b8c:	push   DWORD PTR [ebp-0x14]
10003b8f:	call   DWORD PTR ds:0x10001014
10003b95:	mov    eax,esi
10003b97:	call   0x10004e7b
10003b9c:	ret    0x4
10003b9f:	push   ebp
10003ba0:	mov    ebp,esp
10003ba2:	push   esi
10003ba3:	mov    esi,DWORD PTR [ebp+0x8]
10003ba6:	test   esi,esi
10003ba8:	jne    0x10003bae
10003baa:	xor    eax,eax
10003bac:	jmp    0x10003bda
10003bae:	push   esi
10003baf:	call   DWORD PTR ds:0x10001034
10003bb5:	lea    eax,[esi+eax*2]
10003bb8:	jmp    0x10003bd1
10003bba:	dec    eax
10003bbb:	dec    eax
10003bbc:	movzx  ecx,WORD PTR [eax]
10003bbf:	cmp    cx,0x5c
10003bc3:	je     0x10003bd7
10003bc5:	cmp    cx,0x2f
10003bc9:	je     0x10003bd7
10003bcb:	cmp    cx,0x3a
10003bcf:	je     0x10003bd7
10003bd1:	cmp    eax,esi
10003bd3:	ja     0x10003bba
10003bd5:	dec    eax
10003bd6:	dec    eax
10003bd7:	add    eax,0x2
10003bda:	pop    esi
10003bdb:	pop    ebp
10003bdc:	ret    0x4
10003bdf:	push   ebp
10003be0:	mov    ebp,esp
10003be2:	push   esi
10003be3:	mov    esi,DWORD PTR ds:0x10001024
10003be9:	push   edi
10003bea:	call   esi
10003bec:	push   DWORD PTR [ebp+0x18]
10003bef:	push   DWORD PTR [ebp+0x14]
10003bf2:	push   DWORD PTR [ebp+0x10]
10003bf5:	push   DWORD PTR [ebp+0xc]
10003bf8:	call   DWORD PTR ds:0x10001028
10003bfe:	mov    edi,eax
10003c00:	call   esi
10003c02:	mov    eax,edi
10003c04:	pop    edi
10003c05:	pop    esi
10003c06:	pop    ebp
10003c07:	ret    0x14
10003c0a:	push   ebp
10003c0b:	mov    ebp,esp
10003c0d:	push   esi
10003c0e:	mov    esi,DWORD PTR ds:0x10001024
10003c14:	push   edi
10003c15:	call   esi
10003c17:	push   DWORD PTR [ebp+0x10]
10003c1a:	push   DWORD PTR [ebp+0xc]
10003c1d:	call   DWORD PTR ds:0x100010b0
10003c23:	mov    edi,eax
10003c25:	call   esi
10003c27:	mov    eax,edi
10003c29:	pop    edi
10003c2a:	pop    esi
10003c2b:	pop    ebp
10003c2c:	ret    0xc
10003c2f:	push   ebp
10003c30:	mov    ebp,esp
10003c32:	xor    eax,eax
10003c34:	cmp    DWORD PTR [ebp+0x8],eax
10003c37:	je     0x10003c89
10003c39:	cmp    DWORD PTR [ebp+0xc],eax
10003c3c:	je     0x10003c89
10003c3e:	cmp    DWORD PTR [ebp+0x10],eax
10003c41:	je     0x10003c89
10003c43:	lea    eax,[ebp+0x10]
10003c46:	push   eax
10003c47:	push   0x8
10003c49:	push   DWORD PTR [ebp+0x10]
10003c4c:	push   DWORD PTR [ebp+0xc]
10003c4f:	push   DWORD PTR [ebp+0x8]
10003c52:	call   DWORD PTR ds:0x10001020
10003c58:	test   eax,eax
10003c5a:	jne    0x10003c7c
10003c5c:	push   esi
10003c5d:	mov    esi,DWORD PTR ds:0x100010a0
10003c63:	call   esi
10003c65:	test   eax,eax
10003c67:	jg     0x10003c6d
10003c69:	call   esi
10003c6b:	jmp    0x10003c79
10003c6d:	call   esi
10003c6f:	and    eax,0xffff
10003c74:	or     eax,0x80070000
10003c79:	pop    esi
10003c7a:	jmp    0x10003c8e
10003c7c:	cmp    DWORD PTR [ebp+0x10],0x8
10003c80:	sbb    eax,eax
10003c82:	and    eax,0x8007001e
10003c87:	jmp    0x10003c8e
10003c89:	mov    eax,0x80070057
10003c8e:	pop    ebp
10003c8f:	ret    0xc
10003c92:	push   ebp
10003c93:	mov    ebp,esp
10003c95:	xor    eax,eax
10003c97:	cmp    DWORD PTR [ebp+0x8],eax
10003c9a:	je     0x10003cec
10003c9c:	cmp    DWORD PTR [ebp+0xc],eax
10003c9f:	je     0x10003cec
10003ca1:	cmp    DWORD PTR [ebp+0x10],eax
10003ca4:	je     0x10003cec
10003ca6:	lea    eax,[ebp+0x10]
10003ca9:	push   eax
10003caa:	push   0x50
10003cac:	push   DWORD PTR [ebp+0x10]
10003caf:	push   DWORD PTR [ebp+0xc]
10003cb2:	push   DWORD PTR [ebp+0x8]
10003cb5:	call   DWORD PTR ds:0x10001020
10003cbb:	test   eax,eax
10003cbd:	jne    0x10003cdf
10003cbf:	push   esi
10003cc0:	mov    esi,DWORD PTR ds:0x100010a0
10003cc6:	call   esi
10003cc8:	test   eax,eax
10003cca:	jg     0x10003cd0
10003ccc:	call   esi
10003cce:	jmp    0x10003cdc
10003cd0:	call   esi
10003cd2:	and    eax,0xffff
10003cd7:	or     eax,0x80070000
10003cdc:	pop    esi
10003cdd:	jmp    0x10003cf1
10003cdf:	cmp    DWORD PTR [ebp+0x10],0x50
10003ce3:	sbb    eax,eax
10003ce5:	and    eax,0x8007001e
10003cea:	jmp    0x10003cf1
10003cec:	mov    eax,0x80070057
10003cf1:	pop    ebp
10003cf2:	ret    0xc
10003cf5:	push   ebp
10003cf6:	mov    ebp,esp
10003cf8:	push   esi
10003cf9:	lea    eax,[ebp+0x10]
10003cfc:	push   eax
10003cfd:	mov    esi,0x2cc
10003d02:	push   esi
10003d03:	push   DWORD PTR [ebp+0x10]
10003d06:	push   DWORD PTR [ebp+0xc]
10003d09:	push   DWORD PTR [ebp+0x8]
10003d0c:	call   DWORD PTR ds:0x10001020
10003d12:	test   eax,eax
10003d14:	jne    0x10003d34
10003d16:	mov    esi,DWORD PTR ds:0x100010a0
10003d1c:	call   esi
10003d1e:	test   eax,eax
10003d20:	jg     0x10003d26
10003d22:	call   esi
10003d24:	jmp    0x10003d3e
10003d26:	call   esi
10003d28:	and    eax,0xffff
10003d2d:	or     eax,0x80070000
10003d32:	jmp    0x10003d3e
10003d34:	cmp    DWORD PTR [ebp+0x10],esi
10003d37:	sbb    eax,eax
10003d39:	and    eax,0x8007001e
10003d3e:	pop    esi
10003d3f:	pop    ebp
10003d40:	ret    0xc
10003d43:	push   ebp
10003d44:	mov    ebp,esp
10003d46:	push   ecx
10003d47:	push   ecx
10003d48:	push   ebx
10003d49:	push   esi
10003d4a:	mov    esi,DWORD PTR [ebp+0x8]
10003d4d:	push   edi
10003d4e:	xor    ebx,ebx
10003d50:	xor    eax,eax
10003d52:	cmp    esi,ebx
10003d54:	lea    edi,[ebp-0x4]
10003d57:	mov    DWORD PTR [ebp-0x8],ebx
10003d5a:	stos   DWORD PTR es:[edi],eax
10003d5b:	je     0x10003da6
10003d5d:	cmp    DWORD PTR [ebp+0xc],ebx
10003d60:	je     0x10003da6
10003d62:	cmp    DWORD PTR [ebp+0x10],ebx
10003d65:	je     0x10003da6
10003d67:	lea    eax,[ebp-0x8]
10003d6a:	push   eax
10003d6b:	push   DWORD PTR [ebp+0xc]
10003d6e:	push   esi
10003d6f:	call   0x10003c2f
10003d74:	cmp    eax,ebx
10003d76:	jl     0x10003dab
10003d78:	cmp    DWORD PTR [ebp-0x8],ebx
10003d7b:	je     0x10003dab
10003d7d:	push   DWORD PTR [ebp+0x10]
10003d80:	push   DWORD PTR [ebp-0x8]
10003d83:	push   esi
10003d84:	call   0x10003c92
10003d89:	cmp    eax,ebx
10003d8b:	jl     0x10003dab
10003d8d:	cmp    DWORD PTR [ebp+0x14],ebx
10003d90:	je     0x10003da2
10003d92:	push   DWORD PTR [ebp+0x14]
10003d95:	push   DWORD PTR [ebp-0x4]
10003d98:	push   esi
10003d99:	call   0x10003cf5
10003d9e:	cmp    eax,ebx
10003da0:	jl     0x10003dab
10003da2:	xor    eax,eax
10003da4:	jmp    0x10003dab
10003da6:	mov    eax,0x80070057
10003dab:	pop    edi
10003dac:	pop    esi
10003dad:	pop    ebx
10003dae:	leave  
10003daf:	ret    0x10
10003db2:	push   ebp
10003db3:	mov    ebp,esp
10003db5:	sub    esp,0x20c
10003dbb:	mov    eax,ds:0x10007060
10003dc0:	xor    eax,ebp
10003dc2:	mov    DWORD PTR [ebp-0x4],eax
10003dc5:	and    WORD PTR [ebp-0x20c],0x0
10003dcd:	push   ebx
10003dce:	mov    ebx,DWORD PTR [ebp+0x8]
10003dd1:	push   esi
10003dd2:	mov    esi,DWORD PTR [ebp+0xc]
10003dd5:	push   edi
10003dd6:	mov    edi,DWORD PTR [ebp+0x10]
10003dd9:	push   0x206
10003dde:	lea    eax,[ebp-0x20a]
10003de4:	push   0x0
10003de6:	push   eax
10003de7:	call   0x10004eae
10003dec:	add    esp,0xc
10003def:	push   0x104
10003df4:	lea    eax,[ebp-0x20c]
10003dfa:	push   eax
10003dfb:	push   DWORD PTR [esi+0x1c]
10003dfe:	push   ebx
10003dff:	call   0x100055fa
10003e04:	test   eax,eax
10003e06:	mov    ecx,edi
10003e08:	je     0x10003e13
10003e0a:	lea    eax,[ebp-0x20c]
10003e10:	push   eax
10003e11:	jmp    0x10003e17
10003e13:	add    esi,0x20
10003e16:	push   esi
10003e17:	call   0x10003378
10003e1c:	mov    ecx,DWORD PTR [ebp-0x4]
10003e1f:	pop    edi
10003e20:	pop    esi
10003e21:	xor    ecx,ebp
10003e23:	pop    ebx
10003e24:	call   0x10004d94
10003e29:	leave  
10003e2a:	ret    0xc
10003e2d:	push   0x4
10003e2f:	mov    eax,0x100058a0
10003e34:	call   0x10004da3
10003e39:	mov    esi,ecx
10003e3b:	mov    DWORD PTR [ebp-0x10],esi
10003e3e:	lea    ecx,[esi+0x14]
10003e41:	call   0x10003156
10003e46:	xor    edi,edi
10003e48:	mov    DWORD PTR [ebp-0x4],edi
10003e4b:	lea    ecx,[esi+0x20]
10003e4e:	call   0x10003156
10003e53:	mov    BYTE PTR [ebp-0x4],0x1
10003e57:	mov    DWORD PTR [esi],edi
10003e59:	mov    DWORD PTR [esi+0x4],edi
10003e5c:	mov    DWORD PTR [esi+0x8],edi
10003e5f:	mov    DWORD PTR [esi+0x10],edi
10003e62:	mov    DWORD PTR [esi+0x2c],edi
10003e65:	or     DWORD PTR [ebp-0x4],0xffffffff
10003e69:	mov    eax,esi
10003e6b:	call   0x10004e7b
10003e70:	ret    
10003e71:	push   0x4
10003e73:	mov    eax,0x100058a0
10003e78:	call   0x10004da3
10003e7d:	mov    esi,ecx
10003e7f:	mov    DWORD PTR [ebp-0x10],esi
10003e82:	mov    DWORD PTR [ebp-0x4],0x1
10003e89:	mov    eax,DWORD PTR [esi+0x8]
10003e8c:	test   eax,eax
10003e8e:	je     0x10003e97
10003e90:	push   eax
10003e91:	call   0x10004f76
10003e96:	pop    ecx
10003e97:	mov    BYTE PTR [ebp-0x4],0x0
10003e9b:	lea    ecx,[esi+0x20]
10003e9e:	call   0x10003180
10003ea3:	or     DWORD PTR [ebp-0x4],0xffffffff
10003ea7:	lea    ecx,[esi+0x14]
10003eaa:	call   0x10003180
10003eaf:	call   0x10004e7b
10003eb4:	ret    
10003eb5:	push   0x30
10003eb7:	mov    eax,0x100058c3
10003ebc:	call   0x10004da3
10003ec1:	lea    ecx,[ebp-0x3c]
10003ec4:	call   0x10003e2d
10003ec9:	xor    esi,esi
10003ecb:	mov    DWORD PTR [ebp-0x4],esi
10003ece:	push   esi
10003ecf:	push   0x100013bc
10003ed4:	push   0x10001350
10003ed9:	push   0x1
10003edb:	lea    ecx,[ebp-0x3c]
10003ede:	call   0x1000397f
10003ee3:	test   eax,eax
10003ee5:	jl     0x10003f32
10003ee7:	push   0x80000002
10003eec:	lea    ecx,[ebp-0x3c]
10003eef:	call   0x10003a00
10003ef4:	test   eax,eax
10003ef6:	jl     0x10003f32
10003ef8:	cmp    DWORD PTR [ebp-0x3c],esi
10003efb:	mov    esi,DWORD PTR [ebp-0x34]
10003efe:	jne    0x10003f03
10003f00:	mov    esi,DWORD PTR [ebp-0x10]
10003f03:	push   0x10001338
10003f08:	push   esi
10003f09:	call   0x1000318c
10003f0e:	test   eax,eax
10003f10:	jne    0x10003f32
10003f12:	push   0x10001324
10003f17:	push   esi
10003f18:	call   0x1000318c
10003f1d:	test   eax,eax
10003f1f:	jne    0x10003f32
10003f21:	or     DWORD PTR [ebp-0x4],0xffffffff
10003f25:	lea    ecx,[ebp-0x3c]
10003f28:	call   0x10003e71
10003f2d:	xor    eax,eax
10003f2f:	inc    eax
10003f30:	jmp    0x10003f40
10003f32:	or     DWORD PTR [ebp-0x4],0xffffffff
10003f36:	lea    ecx,[ebp-0x3c]
10003f39:	call   0x10003e71
10003f3e:	xor    eax,eax
10003f40:	call   0x10004e7b
10003f45:	ret    
10003f46:	push   ebp
10003f47:	mov    ebp,esp
10003f49:	cmp    DWORD PTR [ebp+0xc],0x7fffffff
10003f50:	jbe    0x10003f59
10003f52:	mov    eax,0x80070057
10003f57:	pop    ebp
10003f58:	ret    
10003f59:	lea    eax,[ebp+0x14]
10003f5c:	push   eax
10003f5d:	push   DWORD PTR [ebp+0x10]
10003f60:	push   DWORD PTR [ebp+0xc]
10003f63:	push   DWORD PTR [ebp+0x8]
10003f66:	call   0x1000321f
10003f6b:	pop    ebp
10003f6c:	ret    
10003f6d:	push   ebp
10003f6e:	mov    ebp,esp
10003f70:	cmp    DWORD PTR [ebp+0x18],0x0
10003f74:	push   esi
10003f75:	je     0x10003f7c
10003f77:	mov    esi,DWORD PTR [ebp+0x18]
10003f7a:	jmp    0x10003f89
10003f7c:	push   DWORD PTR [ebp+0x14]
10003f7f:	push   0x0
10003f81:	call   DWORD PTR ds:0x10001000
10003f87:	mov    esi,eax
10003f89:	test   esi,esi
10003f8b:	jne    0x10003f94
10003f8d:	mov    eax,0x80004005
10003f92:	jmp    0x10003fd3
10003f94:	push   DWORD PTR [ebp+0x24]
10003f97:	push   DWORD PTR [ebp+0x1c]
10003f9a:	push   DWORD PTR [ebp+0x28]
10003f9d:	push   DWORD PTR [ebp+0x20]
10003fa0:	push   0x0
10003fa2:	push   DWORD PTR [ebp+0x8]
10003fa5:	push   DWORD PTR [ebp+0xc]
10003fa8:	push   DWORD PTR [ebp+0x10]
10003fab:	push   esi
10003fac:	call   DWORD PTR ds:0x10001004
10003fb2:	test   eax,eax
10003fb4:	jne    0x10003fc4
10003fb6:	call   DWORD PTR ds:0x100010a0
10003fbc:	push   eax
10003fbd:	call   0x1000326f
10003fc2:	jmp    0x10003fd3
10003fc4:	cmp    DWORD PTR [ebp+0x18],0x0
10003fc8:	jne    0x10003fd1
10003fca:	push   esi
10003fcb:	call   DWORD PTR ds:0x10001008
10003fd1:	xor    eax,eax
10003fd3:	pop    esi
10003fd4:	pop    ebp
10003fd5:	ret    0x24
10003fd8:	push   0x138
10003fdd:	mov    eax,0x100058de
10003fe2:	call   0x10004e42
10003fe7:	mov    eax,DWORD PTR [ebp+0x8]
10003fea:	mov    DWORD PTR [ebp-0x140],eax
10003ff0:	mov    ecx,DWORD PTR [ebp+0xc]
10003ff3:	mov    DWORD PTR [ebp-0x138],ecx
10003ff9:	mov    ebx,DWORD PTR [ebp+0x10]
10003ffc:	mov    DWORD PTR [ebp-0x130],ebx
10004002:	mov    ecx,DWORD PTR [ebp+0x14]
10004005:	mov    DWORD PTR [ebp-0x134],ecx
1000400b:	xor    esi,esi
1000400d:	mov    DWORD PTR [ebp-0x118],esi
10004013:	mov    DWORD PTR [ebp-0x12c],0x409
1000401d:	mov    DWORD PTR [ebp-0x120],esi
10004023:	cmp    eax,esi
10004025:	jne    0x10004031
10004027:	mov    eax,0x80070057
1000402c:	jmp    0x100041c1
10004031:	lea    ecx,[ebp-0x128]
10004037:	push   ecx
10004038:	push   eax
10004039:	call   0x100055f4
1000403e:	mov    DWORD PTR [ebp-0x144],eax
10004044:	cmp    eax,esi
10004046:	jne    0x1000405b
10004048:	call   DWORD PTR ds:0x100010a0
1000404e:	push   eax
1000404f:	call   0x1000326f
10004054:	mov    esi,eax
10004056:	jmp    0x100041bf
1000405b:	mov    DWORD PTR [ebp-0x4],esi
1000405e:	push   eax
1000405f:	call   0x10004fee
10004064:	pop    ecx
10004065:	mov    DWORD PTR [ebp-0x118],eax
1000406b:	or     DWORD PTR [ebp-0x4],0xffffffff
1000406f:	jmp    0x1000407d
10004071:	mov    eax,0x10004077
10004076:	ret    
10004077:	mov    ebx,DWORD PTR [ebp-0x130]
1000407d:	cmp    DWORD PTR [ebp-0x118],0x0
10004084:	jne    0x10004090
10004086:	mov    esi,0x8007000e
1000408b:	jmp    0x100041bf
10004090:	push   DWORD PTR [ebp-0x118]
10004096:	push   DWORD PTR [ebp-0x144]
1000409c:	push   DWORD PTR [ebp-0x128]
100040a2:	push   DWORD PTR [ebp-0x140]
100040a8:	call   0x100055ee
100040ad:	test   eax,eax
100040af:	jne    0x100040c4
100040b1:	call   DWORD PTR ds:0x100010a0
100040b7:	push   eax
100040b8:	call   0x1000326f
100040bd:	mov    esi,eax
100040bf:	jmp    0x100041b3
100040c4:	mov    edi,DWORD PTR [ebp-0x138]
100040ca:	test   edi,edi
100040cc:	je     0x100040fb
100040ce:	lea    eax,[ebp-0x11c]
100040d4:	push   eax
100040d5:	lea    eax,[ebp-0x120]
100040db:	push   eax
100040dc:	push   0x10001320
100040e1:	push   DWORD PTR [ebp-0x118]
100040e7:	call   0x100055e8
100040ec:	test   eax,eax
100040ee:	je     0x100040b1
100040f0:	push   0xd
100040f2:	pop    ecx
100040f3:	mov    esi,DWORD PTR [ebp-0x120]
100040f9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100040fb:	lea    eax,[ebp-0x11c]
10004101:	push   eax
10004102:	lea    eax,[ebp-0x124]
10004108:	push   eax
10004109:	push   0x10001408
1000410e:	push   DWORD PTR [ebp-0x118]
10004114:	call   0x100055e8
10004119:	test   eax,eax
1000411b:	jne    0x10004133
1000411d:	lea    eax,[ebp-0x12c]
10004123:	mov    DWORD PTR [ebp-0x124],eax
10004129:	mov    DWORD PTR [ebp-0x11c],0x4
10004133:	xor    esi,esi
10004135:	cmp    ebx,esi
10004137:	je     0x100041b1
10004139:	mov    edi,DWORD PTR [ebp-0x134]
1000413f:	cmp    edi,esi
10004141:	je     0x100041b1
10004143:	cmp    DWORD PTR [ebp+0x18],esi
10004146:	jbe    0x100041b1
10004148:	push   DWORD PTR [ebx+esi*4]
1000414b:	mov    eax,DWORD PTR [ebp-0x124]
10004151:	movzx  ecx,WORD PTR [eax+0x2]
10004155:	push   ecx
10004156:	movzx  eax,WORD PTR [eax]
10004159:	push   eax
1000415a:	push   0x100013d0
1000415f:	push   0x80
10004164:	lea    eax,[ebp-0x114]
1000416a:	push   eax
1000416b:	call   0x10003f46
10004170:	add    esp,0x18
10004173:	test   eax,eax
10004175:	jl     0x100041a8
10004177:	lea    eax,[ebp-0x11c]
1000417d:	push   eax
1000417e:	lea    eax,[ebp-0x13c]
10004184:	push   eax
10004185:	lea    eax,[ebp-0x114]
1000418b:	push   eax
1000418c:	push   DWORD PTR [ebp-0x118]
10004192:	call   0x100055e8
10004197:	test   eax,eax
10004199:	je     0x100041a8
1000419b:	push   DWORD PTR [ebp-0x13c]
100041a1:	mov    ecx,edi
100041a3:	call   0x10003378
100041a8:	inc    esi
100041a9:	add    edi,0xc
100041ac:	cmp    esi,DWORD PTR [ebp+0x18]
100041af:	jb     0x10004148
100041b1:	xor    esi,esi
100041b3:	push   DWORD PTR [ebp-0x118]
100041b9:	call   0x10004fe8
100041be:	pop    ecx
100041bf:	mov    eax,esi
100041c1:	call   0x10004e9e
100041c6:	ret    0x14
100041c9:	push   0x214
100041ce:	push   0x10005eb0
100041d3:	call   0x10005068
100041d8:	mov    edi,DWORD PTR [ebp+0x8]
100041db:	mov    ebx,DWORD PTR [ebp+0xc]
100041de:	xor    eax,eax
100041e0:	mov    DWORD PTR [ebp-0x220],eax
100041e6:	mov    DWORD PTR [ebp-0x224],eax
100041ec:	mov    esi,0x200
100041f1:	push   esi
100041f2:	push   eax
100041f3:	lea    eax,[ebp-0x21c]
100041f9:	push   eax
100041fa:	call   0x10004eae
100041ff:	add    esp,0xc
10004202:	and    DWORD PTR [ebp-0x4],0x0
10004206:	lea    eax,[ebp-0x224]
1000420c:	push   eax
1000420d:	push   esi
1000420e:	lea    eax,[ebp-0x21c]
10004214:	push   eax
10004215:	push   ebx
10004216:	push   edi
10004217:	call   DWORD PTR ds:0x10001020
1000421d:	test   eax,eax
1000421f:	je     0x1000425c
10004221:	cmp    DWORD PTR [ebp-0x224],esi
10004227:	jne    0x1000425c
10004229:	cmp    WORD PTR [ebp-0x21c],0x5a4d
10004232:	jne    0x10004243
10004234:	mov    eax,DWORD PTR [ebp-0x1e0]
1000423a:	mov    eax,DWORD PTR [ebp+eax*1-0x214]
10004241:	jmp    0x10004254
10004243:	cmp    WORD PTR [ebp-0x21c],0x4550
1000424c:	jne    0x10004275
1000424e:	mov    eax,DWORD PTR [ebp-0x214]
10004254:	mov    DWORD PTR [ebp-0x220],eax
1000425a:	jmp    0x10004275
1000425c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10004263:	xor    eax,eax
10004265:	jmp    0x10004282
10004267:	xor    eax,eax
10004269:	inc    eax
1000426a:	ret    
1000426b:	mov    esp,DWORD PTR [ebp-0x18]
1000426e:	and    DWORD PTR [ebp-0x220],0x0
10004275:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1000427c:	mov    eax,DWORD PTR [ebp-0x220]
10004282:	call   0x100050b0
10004287:	ret    0x8
1000428a:	push   0x4
1000428c:	mov    eax,0x1000597a
10004291:	call   0x10004da3
10004296:	mov    esi,ecx
10004298:	mov    DWORD PTR [ebp-0x10],esi
1000429b:	lea    ecx,[esi+0x4]
1000429e:	call   0x10003156
100042a3:	xor    ebx,ebx
100042a5:	mov    DWORD PTR [ebp-0x4],ebx
100042a8:	lea    ecx,[esi+0x10]
100042ab:	call   0x10003156
100042b0:	mov    BYTE PTR [ebp-0x4],0x1
100042b4:	lea    ecx,[esi+0x28]
100042b7:	call   0x10003156
100042bc:	mov    BYTE PTR [ebp-0x4],0x2
100042c0:	lea    ecx,[esi+0x34]
100042c3:	call   0x10003156
100042c8:	mov    BYTE PTR [ebp-0x4],0x3
100042cc:	lea    ecx,[esi+0x40]
100042cf:	call   0x10003156
100042d4:	mov    BYTE PTR [ebp-0x4],0x4
100042d8:	lea    ecx,[esi+0x4c]
100042db:	call   0x10003156
100042e0:	mov    BYTE PTR [ebp-0x4],0x5
100042e4:	lea    ecx,[esi+0x64]
100042e7:	call   0x10003156
100042ec:	mov    BYTE PTR [ebp-0x4],0x6
100042f0:	lea    ecx,[esi+0x70]
100042f3:	call   0x10003156
100042f8:	mov    BYTE PTR [ebp-0x4],0x7
100042fc:	lea    ecx,[esi+0x88]
10004302:	call   0x10003156
10004307:	mov    BYTE PTR [ebp-0x4],0x8
1000430b:	lea    ecx,[esi+0x94]
10004311:	call   0x10003156
10004316:	mov    BYTE PTR [ebp-0x4],0x9
1000431a:	xor    eax,eax
1000431c:	lea    edi,[esi+0x1c]
1000431f:	stos   DWORD PTR es:[edi],eax
10004320:	stos   DWORD PTR es:[edi],eax
10004321:	xor    eax,eax
10004323:	lea    edi,[esi+0x58]
10004326:	stos   DWORD PTR es:[edi],eax
10004327:	stos   DWORD PTR es:[edi],eax
10004328:	mov    DWORD PTR [esi+0x60],ebx
1000432b:	mov    DWORD PTR [esi+0x24],ebx
1000432e:	mov    DWORD PTR [esi+0x7c],ebx
10004331:	mov    DWORD PTR [esi+0x80],ebx
10004337:	mov    DWORD PTR [esi+0x84],ebx
1000433d:	mov    DWORD PTR [esi],ebx
1000433f:	or     DWORD PTR [ebp-0x4],0xffffffff
10004343:	mov    eax,esi
10004345:	call   0x10004e7b
1000434a:	ret    
1000434b:	push   0x40
1000434d:	mov    eax,0x1000599d
10004352:	call   0x10004da3
10004357:	xor    edi,edi
10004359:	push   0x30
1000435b:	lea    eax,[ebp-0x48]
1000435e:	push   edi
1000435f:	push   eax
10004360:	mov    DWORD PTR [ebp-0x4c],edi
10004363:	call   0x10004eae
10004368:	mov    ebx,DWORD PTR [ebp+0xc]
1000436b:	add    esp,0xc
1000436e:	cmp    ebx,edi
10004370:	je     0x1000444e
10004376:	cmp    DWORD PTR [ebp+0x10],edi
10004379:	je     0x1000444e
1000437f:	cmp    DWORD PTR [ebp+0x14],edi
10004382:	je     0x1000444e
10004388:	cmp    DWORD PTR [ebp+0x1c],edi
1000438b:	je     0x1000444e
10004391:	lea    ecx,[ebp-0x18]
10004394:	call   0x10003156
10004399:	mov    DWORD PTR [ebp-0x4],edi
1000439c:	lea    eax,[ebp-0x18]
1000439f:	push   eax
100043a0:	push   ebx
100043a1:	push   DWORD PTR [ebp+0x8]
100043a4:	call   0x10003db2
100043a9:	mov    esi,eax
100043ab:	cmp    esi,edi
100043ad:	jl     0x1000443e
100043b3:	lea    ecx,[ebp-0x18]
100043b6:	call   0x10003189
100043bb:	mov    ecx,DWORD PTR [ebp+0x10]
100043be:	push   eax
100043bf:	call   0x10003378
100043c4:	mov    esi,eax
100043c6:	cmp    esi,edi
100043c8:	jl     0x1000443e
100043ca:	lea    ecx,[ebp-0x18]
100043cd:	call   0x10003189
100043d2:	push   eax
100043d3:	call   0x10003b9f
100043d8:	mov    ecx,DWORD PTR [ebp+0x14]
100043db:	push   eax
100043dc:	call   0x10003378
100043e1:	mov    esi,eax
100043e3:	cmp    esi,edi
100043e5:	jl     0x1000443e
100043e7:	mov    ecx,DWORD PTR [ebp+0x14]
100043ea:	push   0x40
100043ec:	call   0x100031fd
100043f1:	push   DWORD PTR [ebx+0x1c]
100043f4:	push   DWORD PTR [ebp+0x8]
100043f7:	call   0x100041c9
100043fc:	mov    ecx,DWORD PTR [ebp+0x1c]
100043ff:	push   edi
10004400:	push   edi
10004401:	mov    DWORD PTR [ecx],eax
10004403:	mov    ecx,DWORD PTR [ebp+0x10]
10004406:	push   edi
10004407:	lea    eax,[ebp-0x4c]
1000440a:	push   eax
1000440b:	call   0x10003189
10004410:	push   eax
10004411:	call   0x10003fd8
10004416:	test   eax,eax
10004418:	jl     0x1000443c
1000441a:	mov    ecx,DWORD PTR [ebp-0x44]
1000441d:	mov    eax,DWORD PTR [ebp+0x18]
10004420:	mov    edx,ecx
10004422:	shr    edx,0x10
10004425:	mov    WORD PTR [eax+0x2],cx
10004429:	mov    ecx,DWORD PTR [ebp-0x40]
1000442c:	mov    WORD PTR [eax],dx
1000442f:	mov    edx,ecx
10004431:	shr    edx,0x10
10004434:	mov    WORD PTR [eax+0x4],dx
10004438:	mov    WORD PTR [eax+0x6],cx
1000443c:	xor    esi,esi
1000443e:	or     DWORD PTR [ebp-0x4],0xffffffff
10004442:	lea    ecx,[ebp-0x18]
10004445:	call   0x10003180
1000444a:	mov    eax,esi
1000444c:	jmp    0x10004453
1000444e:	mov    eax,0x80070057
10004453:	call   0x10004e7b
10004458:	ret    0x18
1000445b:	push   ebp
1000445c:	mov    ebp,esp
1000445e:	sub    esp,0x50
10004461:	push   ebx
10004462:	push   esi
10004463:	push   edi
10004464:	xor    esi,esi
10004466:	push   0x4c
10004468:	lea    eax,[ebp-0x4c]
1000446b:	push   esi
1000446c:	push   eax
1000446d:	mov    DWORD PTR [ebp-0x50],esi
10004470:	call   0x10004eae
10004475:	add    esp,0xc
10004478:	cmp    DWORD PTR [ebp+0x8],esi
1000447b:	je     0x100044b0
1000447d:	cmp    DWORD PTR [ebp+0xc],esi
10004480:	je     0x100044b0
10004482:	mov    ebx,DWORD PTR [ebp+0x10]
10004485:	cmp    ebx,esi
10004487:	je     0x100044b0
10004489:	mov    edi,DWORD PTR [ebp+0x14]
1000448c:	cmp    edi,esi
1000448e:	je     0x100044b0
10004490:	push   esi
10004491:	lea    eax,[ebp-0x50]
10004494:	push   eax
10004495:	push   DWORD PTR [ebp+0xc]
10004498:	push   DWORD PTR [ebp+0x8]
1000449b:	call   0x10003d43
100044a0:	cmp    eax,esi
100044a2:	jl     0x100044b5
100044a4:	mov    ecx,DWORD PTR [ebp-0x50]
100044a7:	mov    DWORD PTR [ebx],ecx
100044a9:	mov    ecx,DWORD PTR [ebp-0x44]
100044ac:	mov    DWORD PTR [edi],ecx
100044ae:	jmp    0x100044b5
100044b0:	mov    eax,0x80070057
100044b5:	pop    edi
100044b6:	pop    esi
100044b7:	pop    ebx
100044b8:	leave  
100044b9:	ret    0x10
100044bc:	push   0xc
100044be:	mov    eax,0x100059c0
100044c3:	call   0x10004da3
100044c8:	lea    ecx,[ebp-0x18]
100044cb:	call   0x10003156
100044d0:	and    DWORD PTR [ebp-0x4],0x0
100044d4:	cmp    DWORD PTR [ebp+0x8],0x0
100044d8:	je     0x10004543
100044da:	mov    esi,DWORD PTR [ebp+0xc]
100044dd:	test   esi,esi
100044df:	je     0x10004543
100044e1:	push   esi
100044e2:	call   0x10003b9f
100044e7:	test   eax,eax
100044e9:	je     0x1000452e
100044eb:	cmp    eax,esi
100044ed:	je     0x1000452e
100044ef:	sub    eax,esi
100044f1:	sar    eax,1
100044f3:	dec    eax
100044f4:	push   eax
100044f5:	push   esi
100044f6:	lea    ecx,[ebp-0x18]
100044f9:	call   0x100036d4
100044fe:	mov    esi,eax
10004500:	test   esi,esi
10004502:	jl     0x10004533
10004504:	lea    ecx,[ebp-0x18]
10004507:	call   0x10003189
1000450c:	push   eax
1000450d:	push   DWORD PTR [ebp+0x8]
10004510:	call   DWORD PTR ds:0x10001068
10004516:	test   eax,eax
10004518:	jne    0x1000452a
1000451a:	call   DWORD PTR ds:0x100010a0
10004520:	push   eax
10004521:	call   0x1000326f
10004526:	mov    esi,eax
10004528:	jmp    0x10004533
1000452a:	xor    esi,esi
1000452c:	jmp    0x10004533
1000452e:	mov    esi,0x80070057
10004533:	or     DWORD PTR [ebp-0x4],0xffffffff
10004537:	lea    ecx,[ebp-0x18]
1000453a:	call   0x10003180
1000453f:	mov    eax,esi
10004541:	jmp    0x10004554
10004543:	or     DWORD PTR [ebp-0x4],0xffffffff
10004547:	lea    ecx,[ebp-0x18]
1000454a:	call   0x10003180
1000454f:	mov    eax,0x80070057
10004554:	call   0x10004e7b
10004559:	ret    0x8
1000455c:	push   0x44c
10004561:	mov    eax,0x100059f1
10004566:	call   0x10004e0c
1000456b:	mov    edi,DWORD PTR [ebp+0x8]
1000456e:	mov    ebx,DWORD PTR [ebp+0x14]
10004571:	and    DWORD PTR [ebp-0x438],0x0
10004578:	push   0x424
1000457d:	lea    eax,[ebp-0x434]
10004583:	push   0x0
10004585:	push   eax
10004586:	mov    esi,ecx
10004588:	mov    DWORD PTR [ebp-0x440],edi
1000458e:	mov    DWORD PTR [ebp-0x43c],ebx
10004594:	call   0x10004eae
10004599:	add    esp,0xc
1000459c:	lea    ecx,[ebp-0x458]
100045a2:	call   0x10003156
100045a7:	and    DWORD PTR [ebp-0x4],0x0
100045ab:	lea    ecx,[ebp-0x44c]
100045b1:	call   0x10003156
100045b6:	mov    BYTE PTR [ebp-0x4],0x1
100045ba:	test   edi,edi
100045bc:	jne    0x100045eb
100045be:	mov    edi,0x80070057
100045c3:	mov    BYTE PTR [ebp-0x4],0x0
100045c7:	lea    ecx,[ebp-0x44c]
100045cd:	call   0x10003180
100045d2:	or     DWORD PTR [ebp-0x4],0xffffffff
100045d6:	lea    ecx,[ebp-0x458]
100045dc:	call   0x10003180
100045e1:	mov    eax,edi
100045e3:	call   0x10004e8f
100045e8:	ret    0x14
100045eb:	mov    eax,DWORD PTR [ebp+0xc]
100045ee:	test   ebx,ebx
100045f0:	mov    DWORD PTR [esi],eax
100045f2:	lea    ebx,[esi+0x84]
100045f8:	je     0x1000461e
100045fa:	push   ebx
100045fb:	lea    eax,[esi+0x80]
10004601:	push   eax
10004602:	push   DWORD PTR [ebp-0x43c]
10004608:	mov    ecx,esi
1000460a:	push   edi
1000460b:	call   0x1000445b
10004610:	mov    edi,eax
10004612:	test   edi,edi
10004614:	jl     0x100045c3
10004616:	mov    edi,DWORD PTR [ebp-0x440]
1000461c:	jmp    0x10004623
1000461e:	mov    eax,DWORD PTR [ebp+0x18]
10004621:	mov    DWORD PTR [ebx],eax
10004623:	mov    eax,DWORD PTR [ebx]
10004625:	push   edi
10004626:	mov    DWORD PTR [esi+0x7c],eax
10004629:	call   DWORD PTR ds:0x10001064
1000462f:	push   eax
10004630:	push   0x8
10004632:	call   0x100055dc
10004637:	cmp    eax,0xffffffff
1000463a:	mov    DWORD PTR [ebp-0x43c],eax
10004640:	jne    0x1000464c
10004642:	mov    edi,0x80004005
10004647:	jmp    0x1000482a
1000464c:	lea    ecx,[ebp-0x438]
10004652:	push   ecx
10004653:	push   eax
10004654:	mov    DWORD PTR [ebp-0x438],0x428
1000465e:	call   0x100055d6
10004663:	test   eax,eax
10004665:	jne    0x1000467a
10004667:	call   DWORD PTR ds:0x100010a0
1000466d:	push   eax
1000466e:	call   0x1000326f
10004673:	mov    edi,eax
10004675:	jmp    0x1000481d
1000467a:	lea    eax,[esi+0x24]
1000467d:	push   eax
1000467e:	lea    ecx,[esi+0x1c]
10004681:	push   ecx
10004682:	lea    eax,[esi+0x10]
10004685:	push   eax
10004686:	lea    edx,[esi+0x4]
10004689:	push   edx
1000468a:	lea    eax,[ebp-0x438]
10004690:	push   eax
10004691:	push   edi
10004692:	mov    ecx,esi
10004694:	call   0x1000434b
10004699:	mov    edi,eax
1000469b:	test   edi,edi
1000469d:	jl     0x1000481d
100046a3:	lea    ecx,[esi+0x4]
100046a6:	call   0x10003189
100046ab:	push   eax
100046ac:	push   0x10001480
100046b1:	call   0x100044bc
100046b6:	lea    ecx,[esi+0x40]
100046b9:	push   0x10001470
100046be:	call   0x10003378
100046c3:	mov    edi,eax
100046c5:	test   edi,edi
100046c7:	jl     0x1000481d
100046cd:	lea    ecx,[esi+0x4c]
100046d0:	push   0x10001470
100046d5:	call   0x10003378
100046da:	mov    edi,eax
100046dc:	test   edi,edi
100046de:	jl     0x1000481d
100046e4:	mov    eax,DWORD PTR [ebp-0x424]
100046ea:	mov    ecx,DWORD PTR [ebp-0x420]
100046f0:	lea    edx,[ecx+eax*1]
100046f3:	mov    ecx,DWORD PTR [ebx]
100046f5:	cmp    ecx,eax
100046f7:	jb     0x100046fd
100046f9:	cmp    ecx,edx
100046fb:	jb     0x10004715
100046fd:	lea    eax,[ebp-0x438]
10004703:	push   eax
10004704:	push   DWORD PTR [ebp-0x43c]
1000470a:	call   0x100055e2
1000470f:	test   eax,eax
10004711:	jne    0x100046e4
10004713:	jmp    0x10004748
10004715:	sub    ecx,eax
10004717:	lea    eax,[esi+0x60]
1000471a:	push   eax
1000471b:	lea    eax,[esi+0x58]
1000471e:	push   eax
1000471f:	lea    eax,[esi+0x4c]
10004722:	push   eax
10004723:	lea    eax,[esi+0x40]
10004726:	push   eax
10004727:	lea    eax,[ebp-0x438]
1000472d:	push   eax
1000472e:	push   DWORD PTR [ebp-0x440]
10004734:	mov    DWORD PTR [esi+0x7c],ecx
10004737:	mov    ecx,esi
10004739:	call   0x1000434b
1000473e:	mov    edi,eax
10004740:	test   edi,edi
10004742:	jl     0x1000481d
10004748:	lea    ecx,[esi+0x40]
1000474b:	call   0x10003189
10004750:	push   eax
10004751:	push   0x10001460
10004756:	call   0x100044bc
1000475b:	movzx  eax,WORD PTR [esi+0x22]
1000475f:	push   eax
10004760:	movzx  eax,WORD PTR [esi+0x20]
10004764:	push   eax
10004765:	movzx  eax,WORD PTR [esi+0x1e]
10004769:	push   eax
1000476a:	movzx  eax,WORD PTR [esi+0x1c]
1000476e:	push   eax
1000476f:	lea    eax,[esi+0x28]
10004772:	push   0x10001448
10004777:	push   eax
10004778:	call   0x10003869
1000477d:	mov    edi,eax
1000477f:	add    esp,0x18
10004782:	test   edi,edi
10004784:	jl     0x1000481d
1000478a:	push   DWORD PTR [esi+0x24]
1000478d:	mov    ebx,0x1000143c
10004792:	lea    eax,[esi+0x34]
10004795:	push   ebx
10004796:	push   eax
10004797:	call   0x10003869
1000479c:	mov    edi,eax
1000479e:	add    esp,0xc
100047a1:	test   edi,edi
100047a3:	jl     0x1000481d
100047a5:	movzx  eax,WORD PTR [esi+0x5e]
100047a9:	push   eax
100047aa:	movzx  eax,WORD PTR [esi+0x5c]
100047ae:	push   eax
100047af:	movzx  eax,WORD PTR [esi+0x5a]
100047b3:	push   eax
100047b4:	movzx  eax,WORD PTR [esi+0x58]
100047b8:	push   eax
100047b9:	lea    eax,[esi+0x64]
100047bc:	push   0x10001448
100047c1:	push   eax
100047c2:	call   0x10003869
100047c7:	mov    edi,eax
100047c9:	add    esp,0x18
100047cc:	test   edi,edi
100047ce:	jl     0x1000481d
100047d0:	push   DWORD PTR [esi+0x60]
100047d3:	lea    eax,[esi+0x70]
100047d6:	push   ebx
100047d7:	push   eax
100047d8:	call   0x10003869
100047dd:	mov    edi,eax
100047df:	add    esp,0xc
100047e2:	test   edi,edi
100047e4:	jl     0x1000481d
100047e6:	push   DWORD PTR [esi+0x80]
100047ec:	lea    eax,[esi+0x94]
100047f2:	push   ebx
100047f3:	push   eax
100047f4:	call   0x10003869
100047f9:	mov    edi,eax
100047fb:	add    esp,0xc
100047fe:	test   edi,edi
10004800:	jl     0x1000481d
10004802:	push   DWORD PTR [esi+0x7c]
10004805:	add    esi,0x88
1000480b:	push   ebx
1000480c:	push   esi
1000480d:	call   0x10003869
10004812:	mov    edi,eax
10004814:	add    esp,0xc
10004817:	test   edi,edi
10004819:	jl     0x1000481d
1000481b:	xor    edi,edi
1000481d:	cmp    DWORD PTR [ebp-0x43c],0x0
10004824:	je     0x100045c3
1000482a:	push   DWORD PTR [ebp-0x43c]
10004830:	call   DWORD PTR ds:0x100010ac
10004836:	jmp    0x100045c3
1000483b:	push   ebp
1000483c:	mov    ebp,esp
1000483e:	sub    esp,0x20
10004841:	push   esi
10004842:	mov    esi,ecx
10004844:	lea    ecx,[esi+0x10]
10004847:	call   0x10003189
1000484c:	lea    ecx,[esi+0x28]
1000484f:	mov    DWORD PTR [ebp-0x20],eax
10004852:	call   0x10003189
10004857:	lea    ecx,[esi+0x34]
1000485a:	mov    DWORD PTR [ebp-0x1c],eax
1000485d:	call   0x10003189
10004862:	lea    ecx,[esi+0x4c]
10004865:	mov    DWORD PTR [ebp-0x18],eax
10004868:	call   0x10003189
1000486d:	lea    ecx,[esi+0x64]
10004870:	mov    DWORD PTR [ebp-0x14],eax
10004873:	call   0x10003189
10004878:	lea    ecx,[esi+0x70]
1000487b:	mov    DWORD PTR [ebp-0x10],eax
1000487e:	call   0x10003189
10004883:	lea    ecx,[esi+0x94]
10004889:	mov    DWORD PTR [ebp-0xc],eax
1000488c:	call   0x10003189
10004891:	lea    ecx,[esi+0x88]
10004897:	mov    DWORD PTR [ebp-0x8],eax
1000489a:	call   0x10003189
1000489f:	xor    esi,esi
100048a1:	push   esi
100048a2:	push   esi
100048a3:	push   0x8
100048a5:	mov    DWORD PTR [ebp-0x4],eax
100048a8:	lea    eax,[ebp-0x20]
100048ab:	push   eax
100048ac:	push   esi
100048ad:	push   0x10001490
100048b2:	push   0x1
100048b4:	push   0x64
100048b6:	push   0x3e8
100048bb:	call   0x10003f6d
100048c0:	cmp    eax,esi
100048c2:	jl     0x100048c6
100048c4:	xor    eax,eax
100048c6:	pop    esi
100048c7:	leave  
100048c8:	ret    
100048c9:	push   0xc
100048cb:	mov    eax,0x100059c0
100048d0:	call   0x10004da3
100048d5:	mov    esi,ecx
100048d7:	lea    ecx,[ebp-0x18]
100048da:	call   0x10003156
100048df:	and    DWORD PTR [ebp-0x4],0x0
100048e3:	mov    ebx,DWORD PTR [ebp+0x8]
100048e6:	test   ebx,ebx
100048e8:	jne    0x10004905
100048ea:	mov    esi,0x80070057
100048ef:	or     DWORD PTR [ebp-0x4],0xffffffff
100048f3:	lea    ecx,[ebp-0x18]
100048f6:	call   0x10003180
100048fb:	mov    eax,esi
100048fd:	call   0x10004e7b
10004902:	ret    0x4
10004905:	mov    edi,0x100014b4
1000490a:	push   edi
1000490b:	lea    ecx,[ebp-0x18]
1000490e:	call   0x10003669
10004913:	push   DWORD PTR [esi]
10004915:	lea    ecx,[ebp-0x18]
10004918:	push   0x1389
1000491d:	call   0x1000353a
10004922:	lea    ecx,[esi+0x10]
10004925:	call   0x10003189
1000492a:	push   eax
1000492b:	lea    ecx,[ebp-0x18]
1000492e:	call   0x10003189
10004933:	push   eax
10004934:	push   0x0
10004936:	push   ebx
10004937:	call   DWORD PTR ds:0x10007090
1000493d:	test   eax,eax
1000493f:	jl     0x10004ade
10004945:	push   edi
10004946:	lea    ecx,[ebp-0x18]
10004949:	call   0x10003669
1000494e:	push   DWORD PTR [esi]
10004950:	lea    ecx,[ebp-0x18]
10004953:	push   0x138a
10004958:	call   0x1000353a
1000495d:	lea    ecx,[esi+0x28]
10004960:	call   0x10003189
10004965:	push   eax
10004966:	lea    ecx,[ebp-0x18]
10004969:	call   0x10003189
1000496e:	push   eax
1000496f:	push   0x1
10004971:	push   ebx
10004972:	call   DWORD PTR ds:0x10007090
10004978:	test   eax,eax
1000497a:	jl     0x10004ade
10004980:	push   edi
10004981:	lea    ecx,[ebp-0x18]
10004984:	call   0x10003669
10004989:	push   DWORD PTR [esi]
1000498b:	lea    ecx,[ebp-0x18]
1000498e:	push   0x138b
10004993:	call   0x1000353a
10004998:	lea    ecx,[esi+0x34]
1000499b:	call   0x10003189
100049a0:	push   eax
100049a1:	lea    ecx,[ebp-0x18]
100049a4:	call   0x10003189
100049a9:	push   eax
100049aa:	push   0x2
100049ac:	push   ebx
100049ad:	call   DWORD PTR ds:0x10007090
100049b3:	test   eax,eax
100049b5:	jl     0x10004ade
100049bb:	push   edi
100049bc:	lea    ecx,[ebp-0x18]
100049bf:	call   0x10003669
100049c4:	push   DWORD PTR [esi]
100049c6:	lea    ecx,[ebp-0x18]
100049c9:	push   0x138c
100049ce:	call   0x1000353a
100049d3:	lea    ecx,[esi+0x4c]
100049d6:	call   0x10003189
100049db:	push   eax
100049dc:	lea    ecx,[ebp-0x18]
100049df:	call   0x10003189
100049e4:	push   eax
100049e5:	push   0x3
100049e7:	push   ebx
100049e8:	call   DWORD PTR ds:0x10007090
100049ee:	test   eax,eax
100049f0:	jl     0x10004ade
100049f6:	push   edi
100049f7:	lea    ecx,[ebp-0x18]
100049fa:	call   0x10003669
100049ff:	push   DWORD PTR [esi]
10004a01:	lea    ecx,[ebp-0x18]
10004a04:	push   0x138d
10004a09:	call   0x1000353a
10004a0e:	lea    ecx,[esi+0x64]
10004a11:	call   0x10003189
10004a16:	push   eax
10004a17:	lea    ecx,[ebp-0x18]
10004a1a:	call   0x10003189
10004a1f:	push   eax
10004a20:	push   0x4
10004a22:	push   ebx
10004a23:	call   DWORD PTR ds:0x10007090
10004a29:	test   eax,eax
10004a2b:	jl     0x10004ade
10004a31:	push   edi
10004a32:	lea    ecx,[ebp-0x18]
10004a35:	call   0x10003669
10004a3a:	push   DWORD PTR [esi]
10004a3c:	lea    ecx,[ebp-0x18]
10004a3f:	push   0x138e
10004a44:	call   0x1000353a
10004a49:	lea    ecx,[esi+0x70]
10004a4c:	call   0x10003189
10004a51:	push   eax
10004a52:	lea    ecx,[ebp-0x18]
10004a55:	call   0x10003189
10004a5a:	push   eax
10004a5b:	push   0x5
10004a5d:	push   ebx
10004a5e:	call   DWORD PTR ds:0x10007090
10004a64:	test   eax,eax
10004a66:	jl     0x10004ade
10004a68:	push   edi
10004a69:	lea    ecx,[ebp-0x18]
10004a6c:	call   0x10003669
10004a71:	push   DWORD PTR [esi]
10004a73:	lea    ecx,[ebp-0x18]
10004a76:	push   0x138f
10004a7b:	call   0x1000353a
10004a80:	lea    ecx,[esi+0x94]
10004a86:	call   0x10003189
10004a8b:	push   eax
10004a8c:	lea    ecx,[ebp-0x18]
10004a8f:	call   0x10003189
10004a94:	push   eax
10004a95:	push   0x6
10004a97:	push   ebx
10004a98:	call   DWORD PTR ds:0x10007090
10004a9e:	test   eax,eax
10004aa0:	jl     0x10004ade
10004aa2:	push   edi
10004aa3:	lea    ecx,[ebp-0x18]
10004aa6:	call   0x10003669
10004aab:	push   DWORD PTR [esi]
10004aad:	lea    ecx,[ebp-0x18]
10004ab0:	push   0x1390
10004ab5:	call   0x1000353a
10004aba:	lea    ecx,[esi+0x88]
10004ac0:	call   0x10003189
10004ac5:	push   eax
10004ac6:	lea    ecx,[ebp-0x18]
10004ac9:	call   0x10003189
10004ace:	push   eax
10004acf:	push   0x7
10004ad1:	push   ebx
10004ad2:	call   DWORD PTR ds:0x10007090
10004ad8:	test   eax,eax
10004ada:	jl     0x10004ade
10004adc:	xor    eax,eax
10004ade:	mov    esi,eax
10004ae0:	jmp    0x100048ef
10004ae5:	push   0x1000520f
10004aea:	call   0x100051d9
10004aef:	mov    eax,ds:0x100070d4
10004af4:	mov    DWORD PTR [esp],0x100070c0
10004afb:	push   DWORD PTR ds:0x100070d0
10004b01:	mov    ds:0x100070c0,eax
10004b06:	push   0x100070b0
10004b0b:	push   0x100070b4
10004b10:	push   0x100070ac
10004b15:	call   DWORD PTR ds:0x1000111c
10004b1b:	add    esp,0x14
10004b1e:	test   eax,eax
10004b20:	mov    ds:0x100070bc,eax
10004b25:	jge    0x10004b2f
10004b27:	push   0x8
10004b29:	call   0x1000512e
10004b2e:	pop    ecx
10004b2f:	ret    
10004b30:	push   0x10
10004b32:	push   0x10005fd0
10004b37:	call   0x10005388
10004b3c:	xor    ebx,ebx
10004b3e:	mov    DWORD PTR [ebp-0x4],ebx
10004b41:	mov    eax,fs:0x18
10004b47:	mov    esi,DWORD PTR [eax+0x4]
10004b4a:	mov    DWORD PTR [ebp-0x1c],ebx
10004b4d:	mov    edi,0x1000740c
10004b52:	push   ebx
10004b53:	push   esi
10004b54:	push   edi
10004b55:	call   DWORD PTR ds:0x10001078
10004b5b:	cmp    eax,ebx
10004b5d:	je     0x10004b78
10004b5f:	cmp    eax,esi
10004b61:	jne    0x10004b6b
10004b63:	xor    esi,esi
10004b65:	inc    esi
10004b66:	mov    DWORD PTR [ebp-0x1c],esi
10004b69:	jmp    0x10004b7b
10004b6b:	push   0x3e8
10004b70:	call   DWORD PTR ds:0x1000101c
10004b76:	jmp    0x10004b52
10004b78:	xor    esi,esi
10004b7a:	inc    esi
10004b7b:	mov    eax,ds:0x10007408
10004b80:	cmp    eax,esi
10004b82:	jne    0x10004b8e
10004b84:	push   0x1f
10004b86:	call   0x1000512e
10004b8b:	pop    ecx
10004b8c:	jmp    0x10004bc9
10004b8e:	mov    eax,ds:0x10007408
10004b93:	test   eax,eax
10004b95:	jne    0x10004bc3
10004b97:	mov    DWORD PTR ds:0x10007408,esi
10004b9d:	push   0x1000119c
10004ba2:	push   0x10001190
10004ba7:	call   0x10005382
10004bac:	pop    ecx
10004bad:	pop    ecx
10004bae:	test   eax,eax
10004bb0:	je     0x10004bc9
10004bb2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10004bb9:	mov    eax,0xff
10004bbe:	jmp    0x10004ca0
10004bc3:	mov    DWORD PTR ds:0x100070c8,esi
10004bc9:	mov    eax,ds:0x10007408
10004bce:	cmp    eax,esi
10004bd0:	jne    0x10004bed
10004bd2:	push   0x1000118c
10004bd7:	push   0x10001184
10004bdc:	call   0x1000537c
10004be1:	pop    ecx
10004be2:	pop    ecx
10004be3:	mov    DWORD PTR ds:0x10007408,0x2
10004bed:	cmp    DWORD PTR [ebp-0x1c],ebx
10004bf0:	jne    0x10004bfa
10004bf2:	push   ebx
10004bf3:	push   edi
10004bf4:	call   DWORD PTR ds:0x10001074
10004bfa:	cmp    DWORD PTR ds:0x10007418,ebx
10004c00:	je     0x10004c1b
10004c02:	push   0x10007418
10004c07:	call   0x100052c0
10004c0c:	pop    ecx
10004c0d:	test   eax,eax
10004c0f:	je     0x10004c1b
10004c11:	push   ebx
10004c12:	push   0x2
10004c14:	push   ebx
10004c15:	call   DWORD PTR ds:0x10007418
10004c1b:	mov    eax,ds:0x100070b0
10004c20:	mov    ecx,DWORD PTR ds:0x10001108
10004c26:	mov    DWORD PTR [ecx],eax
10004c28:	push   DWORD PTR ds:0x100070b0
10004c2e:	push   DWORD PTR ds:0x100070b4
10004c34:	push   DWORD PTR ds:0x100070ac
10004c3a:	call   0x10003101
10004c3f:	add    esp,0xc
10004c42:	mov    ds:0x100070c4,eax
10004c47:	cmp    DWORD PTR ds:0x100070b8,ebx
10004c4d:	jne    0x10004c86
10004c4f:	push   eax
10004c50:	call   DWORD PTR ds:0x1000110c
10004c56:	mov    eax,DWORD PTR [ebp-0x14]
10004c59:	mov    ecx,DWORD PTR [eax]
10004c5b:	mov    ecx,DWORD PTR [ecx]
10004c5d:	mov    DWORD PTR [ebp-0x20],ecx
10004c60:	push   eax
10004c61:	push   ecx
10004c62:	call   0x10005234
10004c67:	pop    ecx
10004c68:	pop    ecx
10004c69:	ret    
10004c6a:	mov    esp,DWORD PTR [ebp-0x18]
10004c6d:	mov    eax,DWORD PTR [ebp-0x20]
10004c70:	mov    ds:0x100070c4,eax
10004c75:	xor    ebx,ebx
10004c77:	cmp    DWORD PTR ds:0x100070b8,ebx
10004c7d:	jne    0x10004c86
10004c7f:	push   eax
10004c80:	call   DWORD PTR ds:0x10001114
10004c86:	cmp    DWORD PTR ds:0x100070c8,ebx
10004c8c:	jne    0x10004c94
10004c8e:	call   DWORD PTR ds:0x10001118
10004c94:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10004c9b:	mov    eax,ds:0x100070c4
10004ca0:	call   0x100053cd
10004ca5:	ret    
10004ca6:	cmp    WORD PTR ds:0x10000000,0x5a4d
10004caf:	je     0x10004cb5
10004cb1:	xor    eax,eax
10004cb3:	jmp    0x10004d02
10004cb5:	mov    eax,ds:0x1000003c
10004cba:	lea    eax,[eax+0x10000000]
10004cc0:	cmp    DWORD PTR [eax],0x4550
10004cc6:	jne    0x10004cb1
10004cc8:	movzx  ecx,WORD PTR [eax+0x18]
10004ccc:	cmp    ecx,0x10b
10004cd2:	je     0x10004cef
10004cd4:	cmp    ecx,0x20b
10004cda:	jne    0x10004cb1
10004cdc:	cmp    DWORD PTR [eax+0x84],0xe
10004ce3:	jbe    0x10004cb1
10004ce5:	xor    ecx,ecx
10004ce7:	cmp    DWORD PTR [eax+0xf8],ecx
10004ced:	jmp    0x10004cfd
10004cef:	cmp    DWORD PTR [eax+0x74],0xe
10004cf3:	jbe    0x10004cb1
10004cf5:	xor    ecx,ecx
10004cf7:	cmp    DWORD PTR [eax+0xe8],ecx
10004cfd:	setne  cl
10004d00:	mov    eax,ecx
10004d02:	push   0x1
10004d04:	mov    ds:0x100070b8,eax
10004d09:	call   DWORD PTR ds:0x100010e4
10004d0f:	push   0xffffffff
10004d11:	call   DWORD PTR ds:0x100010e8
10004d17:	pop    ecx
10004d18:	pop    ecx
10004d19:	mov    ds:0x10007410,eax
10004d1e:	mov    ds:0x10007414,eax
10004d23:	call   DWORD PTR ds:0x100010ec
10004d29:	mov    ecx,DWORD PTR ds:0x100070dc
10004d2f:	mov    DWORD PTR [eax],ecx
10004d31:	call   DWORD PTR ds:0x100010f0
10004d37:	mov    ecx,DWORD PTR ds:0x100070d8
10004d3d:	mov    DWORD PTR [eax],ecx
10004d3f:	mov    eax,ds:0x100010f4
10004d44:	mov    eax,DWORD PTR [eax]
10004d46:	mov    ds:0x10007404,eax
10004d4b:	call   0x100051eb
10004d50:	call   0x1000540a
10004d55:	cmp    DWORD PTR ds:0x1000707c,0x0
10004d5c:	jne    0x10004d6a
10004d5e:	push   0x1000540a
10004d63:	call   DWORD PTR ds:0x100010f8
10004d69:	pop    ecx
10004d6a:	call   0x100053e1
10004d6f:	cmp    DWORD PTR ds:0x10007078,0xffffffff
10004d76:	jne    0x10004d81
10004d78:	push   0xffffffff
10004d7a:	call   DWORD PTR ds:0x100010fc
10004d80:	pop    ecx
10004d81:	xor    eax,eax
10004d83:	ret    
10004d84:	call   0x1000540d
10004d89:	jmp    0x10004b30
10004d8e:	jmp    DWORD PTR ds:0x1000115c
10004d94:	cmp    ecx,DWORD PTR ds:0x10007060
10004d9a:	jne    0x10004d9e
10004d9c:	repz ret 
10004d9e:	jmp    0x100054a1
10004da3:	push   eax
10004da4:	push   DWORD PTR fs:0x0
10004dab:	lea    eax,[esp+0xc]
10004daf:	sub    esp,DWORD PTR [esp+0xc]
10004db3:	push   ebx
10004db4:	push   esi
10004db5:	push   edi
10004db6:	mov    DWORD PTR [eax],ebp
10004db8:	mov    ebp,eax
10004dba:	mov    eax,ds:0x10007060
10004dbf:	xor    eax,ebp
10004dc1:	push   eax
10004dc2:	push   DWORD PTR [ebp-0x4]
10004dc5:	mov    DWORD PTR [ebp-0x4],0xffffffff
10004dcc:	lea    eax,[ebp-0xc]
10004dcf:	mov    fs:0x0,eax
10004dd5:	ret    
10004dd6:	push   eax
10004dd7:	push   DWORD PTR fs:0x0
10004dde:	lea    eax,[esp+0xc]
10004de2:	sub    esp,DWORD PTR [esp+0xc]
10004de6:	push   ebx
10004de7:	push   esi
10004de8:	push   edi
10004de9:	mov    DWORD PTR [eax],ebp
10004deb:	mov    ebp,eax
10004ded:	mov    eax,ds:0x10007060
10004df2:	xor    eax,ebp
10004df4:	push   eax
10004df5:	mov    DWORD PTR [ebp-0x10],esp
10004df8:	push   DWORD PTR [ebp-0x4]
10004dfb:	mov    DWORD PTR [ebp-0x4],0xffffffff
10004e02:	lea    eax,[ebp-0xc]
10004e05:	mov    fs:0x0,eax
10004e0b:	ret    
10004e0c:	push   eax
10004e0d:	push   DWORD PTR fs:0x0
10004e14:	lea    eax,[esp+0xc]
10004e18:	sub    esp,DWORD PTR [esp+0xc]
10004e1c:	push   ebx
10004e1d:	push   esi
10004e1e:	push   edi
10004e1f:	mov    DWORD PTR [eax],ebp
10004e21:	mov    ebp,eax
10004e23:	mov    eax,ds:0x10007060
10004e28:	xor    eax,ebp
10004e2a:	push   eax
10004e2b:	mov    DWORD PTR [ebp-0x10],eax
10004e2e:	push   DWORD PTR [ebp-0x4]
10004e31:	mov    DWORD PTR [ebp-0x4],0xffffffff
10004e38:	lea    eax,[ebp-0xc]
10004e3b:	mov    fs:0x0,eax
10004e41:	ret    
10004e42:	push   eax
10004e43:	push   DWORD PTR fs:0x0
10004e4a:	lea    eax,[esp+0xc]
10004e4e:	sub    esp,DWORD PTR [esp+0xc]
10004e52:	push   ebx
10004e53:	push   esi
10004e54:	push   edi
10004e55:	mov    DWORD PTR [eax],ebp
10004e57:	mov    ebp,eax
10004e59:	mov    eax,ds:0x10007060
10004e5e:	xor    eax,ebp
10004e60:	push   eax
10004e61:	mov    DWORD PTR [ebp-0x14],eax
10004e64:	mov    DWORD PTR [ebp-0x10],esp
10004e67:	push   DWORD PTR [ebp-0x4]
10004e6a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10004e71:	lea    eax,[ebp-0xc]
10004e74:	mov    fs:0x0,eax
10004e7a:	ret    
10004e7b:	mov    ecx,DWORD PTR [ebp-0xc]
10004e7e:	mov    DWORD PTR fs:0x0,ecx
10004e85:	pop    ecx
10004e86:	pop    edi
10004e87:	pop    edi
10004e88:	pop    esi
10004e89:	pop    ebx
10004e8a:	mov    esp,ebp
10004e8c:	pop    ebp
10004e8d:	push   ecx
10004e8e:	ret    
10004e8f:	mov    ecx,DWORD PTR [ebp-0x10]
10004e92:	xor    ecx,ebp
10004e94:	call   0x10004d94
10004e99:	jmp    0x10004e7b
10004e9e:	mov    ecx,DWORD PTR [ebp-0x14]
10004ea1:	xor    ecx,ebp
10004ea3:	call   0x10004d94
10004ea8:	jmp    0x10004e7b
10004ead:	int3   
10004eae:	jmp    DWORD PTR ds:0x1000114c
10004eb4:	push   0x14
10004eb6:	push   0x10005ff0
10004ebb:	call   0x10005388
10004ec0:	and    DWORD PTR [ebp-0x4],0x0
10004ec4:	dec    DWORD PTR [ebp+0x10]
10004ec7:	js     0x10004f03
10004ec9:	mov    ecx,DWORD PTR [ebp+0x8]
10004ecc:	sub    ecx,DWORD PTR [ebp+0xc]
10004ecf:	mov    DWORD PTR [ebp+0x8],ecx
10004ed2:	call   DWORD PTR [ebp+0x14]
10004ed5:	jmp    0x10004ec4
10004ed7:	mov    eax,DWORD PTR [ebp-0x14]
10004eda:	mov    DWORD PTR [ebp-0x1c],eax
10004edd:	mov    eax,DWORD PTR [ebp-0x1c]
10004ee0:	mov    eax,DWORD PTR [eax]
10004ee2:	mov    DWORD PTR [ebp-0x20],eax
10004ee5:	mov    eax,DWORD PTR [ebp-0x20]
10004ee8:	cmp    DWORD PTR [eax],0xe06d7363
10004eee:	je     0x10004efb
10004ef0:	mov    DWORD PTR [ebp-0x24],0x0
10004ef7:	mov    eax,DWORD PTR [ebp-0x24]
10004efa:	ret    
10004efb:	call   0x100055a6
10004f00:	mov    esp,DWORD PTR [ebp-0x18]
10004f03:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10004f0a:	call   0x100053cd
10004f0f:	ret    0x10
10004f12:	push   0xc
10004f14:	push   0x10006010
10004f19:	call   0x10005388
10004f1e:	and    DWORD PTR [ebp-0x1c],0x0
10004f22:	mov    esi,DWORD PTR [ebp+0xc]
10004f25:	mov    eax,esi
10004f27:	imul   eax,DWORD PTR [ebp+0x10]
10004f2b:	add    DWORD PTR [ebp+0x8],eax
10004f2e:	and    DWORD PTR [ebp-0x4],0x0
10004f32:	dec    DWORD PTR [ebp+0x10]
10004f35:	js     0x10004f42
10004f37:	sub    DWORD PTR [ebp+0x8],esi
10004f3a:	mov    ecx,DWORD PTR [ebp+0x8]
10004f3d:	call   DWORD PTR [ebp+0x14]
10004f40:	jmp    0x10004f32
10004f42:	mov    DWORD PTR [ebp-0x1c],0x1
10004f49:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10004f50:	call   0x10004f5d
10004f55:	call   0x100053cd
10004f5a:	ret    0x10
10004f5d:	cmp    DWORD PTR [ebp-0x1c],0x0
10004f61:	jne    0x10004f74
10004f63:	push   DWORD PTR [ebp+0x14]
10004f66:	push   DWORD PTR [ebp+0x10]
10004f69:	push   DWORD PTR [ebp+0xc]
10004f6c:	push   DWORD PTR [ebp+0x8]
10004f6f:	call   0x10004eb4
10004f74:	ret    
10004f75:	int3   
10004f76:	jmp    DWORD PTR ds:0x10001148
10004f7c:	push   0x10
10004f7e:	push   0x10006030
10004f83:	call   0x10005388
10004f88:	xor    eax,eax
10004f8a:	mov    DWORD PTR [ebp-0x20],eax
10004f8d:	mov    DWORD PTR [ebp-0x4],eax
10004f90:	mov    DWORD PTR [ebp-0x1c],eax
10004f93:	mov    eax,DWORD PTR [ebp-0x1c]
10004f96:	cmp    eax,DWORD PTR [ebp+0x10]
10004f99:	jge    0x10004fae
10004f9b:	mov    esi,DWORD PTR [ebp+0x8]
10004f9e:	mov    ecx,esi
10004fa0:	call   DWORD PTR [ebp+0x14]
10004fa3:	add    esi,DWORD PTR [ebp+0xc]
10004fa6:	mov    DWORD PTR [ebp+0x8],esi
10004fa9:	inc    DWORD PTR [ebp-0x1c]
10004fac:	jmp    0x10004f93
10004fae:	mov    DWORD PTR [ebp-0x20],0x1
10004fb5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10004fbc:	call   0x10004fc9
10004fc1:	call   0x100053cd
10004fc6:	ret    0x14
10004fc9:	cmp    DWORD PTR [ebp-0x20],0x0
10004fcd:	jne    0x10004fe0
10004fcf:	push   DWORD PTR [ebp+0x18]
10004fd2:	push   DWORD PTR [ebp-0x1c]
10004fd5:	push   DWORD PTR [ebp+0xc]
10004fd8:	push   DWORD PTR [ebp+0x8]
10004fdb:	call   0x10004eb4
10004fe0:	ret    
10004fe1:	int3   
10004fe2:	jmp    DWORD PTR ds:0x10001144
10004fe8:	jmp    DWORD PTR ds:0x1000113c
10004fee:	jmp    DWORD PTR ds:0x10001138
10004ff4:	int3   
10004ff5:	int3   
10004ff6:	int3   
10004ff7:	int3   
10004ff8:	int3   
10004ff9:	int3   
10004ffa:	int3   
10004ffb:	int3   
10004ffc:	int3   
10004ffd:	int3   
10004ffe:	int3   
10004fff:	int3   
10005000:	push   ebx
10005001:	push   esi
10005002:	mov    eax,DWORD PTR [esp+0x18]
10005006:	or     eax,eax
10005008:	jne    0x10005022
1000500a:	mov    ecx,DWORD PTR [esp+0x14]
1000500e:	mov    eax,DWORD PTR [esp+0x10]
10005012:	xor    edx,edx
10005014:	div    ecx
10005016:	mov    ebx,eax
10005018:	mov    eax,DWORD PTR [esp+0xc]
1000501c:	div    ecx
1000501e:	mov    edx,ebx
10005020:	jmp    0x10005063
10005022:	mov    ecx,eax
10005024:	mov    ebx,DWORD PTR [esp+0x14]
10005028:	mov    edx,DWORD PTR [esp+0x10]
1000502c:	mov    eax,DWORD PTR [esp+0xc]
10005030:	shr    ecx,1
10005032:	rcr    ebx,1
10005034:	shr    edx,1
10005036:	rcr    eax,1
10005038:	or     ecx,ecx
1000503a:	jne    0x10005030
1000503c:	div    ebx
1000503e:	mov    esi,eax
10005040:	mul    DWORD PTR [esp+0x18]
10005044:	mov    ecx,eax
10005046:	mov    eax,DWORD PTR [esp+0x14]
1000504a:	mul    esi
1000504c:	add    edx,ecx
1000504e:	jb     0x1000505e
10005050:	cmp    edx,DWORD PTR [esp+0x10]
10005054:	ja     0x1000505e
10005056:	jb     0x1000505f
10005058:	cmp    eax,DWORD PTR [esp+0xc]
1000505c:	jbe    0x1000505f
1000505e:	dec    esi
1000505f:	xor    edx,edx
10005061:	mov    eax,esi
10005063:	pop    esi
10005064:	pop    ebx
10005065:	ret    0x10
10005068:	push   0x100050bf
1000506d:	push   DWORD PTR fs:0x0
10005074:	mov    eax,DWORD PTR [esp+0x10]
10005078:	mov    DWORD PTR [esp+0x10],ebp
1000507c:	lea    ebp,[esp+0x10]
10005080:	sub    esp,eax
10005082:	push   ebx
10005083:	push   esi
10005084:	push   edi
10005085:	mov    eax,ds:0x10007060
1000508a:	xor    DWORD PTR [ebp-0x4],eax
1000508d:	xor    eax,ebp
1000508f:	mov    DWORD PTR [ebp-0x1c],eax
10005092:	push   eax
10005093:	mov    DWORD PTR [ebp-0x18],esp
10005096:	push   DWORD PTR [ebp-0x8]
10005099:	mov    eax,DWORD PTR [ebp-0x4]
1000509c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100050a3:	mov    DWORD PTR [ebp-0x8],eax
100050a6:	lea    eax,[ebp-0x10]
100050a9:	mov    fs:0x0,eax
100050af:	ret    
100050b0:	mov    ecx,DWORD PTR [ebp-0x1c]
100050b3:	xor    ecx,ebp
100050b5:	call   0x10004d94
100050ba:	jmp    0x100053cd
100050bf:	push   DWORD PTR [esp+0x10]
100050c3:	push   DWORD PTR [esp+0x10]
100050c7:	push   DWORD PTR [esp+0x10]
100050cb:	push   DWORD PTR [esp+0x10]
100050cf:	push   0x10004d94
100050d4:	push   0x10007060
100050d9:	call   0x100055ac
100050de:	add    esp,0x18
100050e1:	ret    
100050e2:	mov    eax,DWORD PTR [esp+0x4]
100050e6:	mov    eax,DWORD PTR [eax]
100050e8:	cmp    DWORD PTR [eax],0xe06d7363
100050ee:	jne    0x1000511a
100050f0:	cmp    DWORD PTR [eax+0x10],0x3
100050f4:	jne    0x1000511a
100050f6:	mov    eax,DWORD PTR [eax+0x14]
100050f9:	cmp    eax,0x19930520
100050fe:	je     0x10005115
10005100:	cmp    eax,0x19930521
10005105:	je     0x10005115
10005107:	cmp    eax,0x19930522
1000510c:	je     0x10005115
1000510e:	cmp    eax,0x1994000
10005113:	jne    0x1000511a
10005115:	call   0x100055a6
1000511a:	xor    eax,eax
1000511c:	ret    0x4
1000511f:	push   0x100050e2
10005124:	call   DWORD PTR ds:0x1000107c
1000512a:	xor    eax,eax
1000512c:	ret    
1000512d:	int3   
1000512e:	jmp    DWORD PTR ds:0x10001120
10005134:	push   0x14
10005136:	push   0x10006050
1000513b:	call   0x10005388
10005140:	push   DWORD PTR ds:0x10007414
10005146:	mov    esi,DWORD PTR ds:0x100010c8
1000514c:	call   esi
1000514e:	pop    ecx
1000514f:	mov    DWORD PTR [ebp-0x1c],eax
10005152:	cmp    eax,0xffffffff
10005155:	jne    0x10005163
10005157:	push   DWORD PTR [ebp+0x8]
1000515a:	call   DWORD PTR ds:0x100010cc
10005160:	pop    ecx
10005161:	jmp    0x100051ca
10005163:	push   0x8
10005165:	call   0x100055be
1000516a:	pop    ecx
1000516b:	and    DWORD PTR [ebp-0x4],0x0
1000516f:	push   DWORD PTR ds:0x10007414
10005175:	call   esi
10005177:	mov    DWORD PTR [ebp-0x1c],eax
1000517a:	push   DWORD PTR ds:0x10007410
10005180:	call   esi
10005182:	pop    ecx
10005183:	pop    ecx
10005184:	mov    DWORD PTR [ebp-0x20],eax
10005187:	lea    eax,[ebp-0x20]
1000518a:	push   eax
1000518b:	lea    eax,[ebp-0x1c]
1000518e:	push   eax
1000518f:	push   DWORD PTR [ebp+0x8]
10005192:	mov    esi,DWORD PTR ds:0x100010e8
10005198:	call   esi
1000519a:	pop    ecx
1000519b:	push   eax
1000519c:	call   0x100055b8
100051a1:	mov    DWORD PTR [ebp-0x24],eax
100051a4:	push   DWORD PTR [ebp-0x1c]
100051a7:	call   esi
100051a9:	mov    ds:0x10007414,eax
100051ae:	push   DWORD PTR [ebp-0x20]
100051b1:	call   esi
100051b3:	add    esp,0x14
100051b6:	mov    ds:0x10007410,eax
100051bb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100051c2:	call   0x100051d0
100051c7:	mov    eax,DWORD PTR [ebp-0x24]
100051ca:	call   0x100053cd
100051cf:	ret    
100051d0:	push   0x8
100051d2:	call   0x100055b2
100051d7:	pop    ecx
100051d8:	ret    
100051d9:	push   DWORD PTR [esp+0x4]
100051dd:	call   0x10005134
100051e2:	neg    eax
100051e4:	sbb    eax,eax
100051e6:	neg    eax
100051e8:	pop    ecx
100051e9:	dec    eax
100051ea:	ret    
100051eb:	push   esi
100051ec:	push   edi
100051ed:	mov    eax,0x1000158c
100051f2:	mov    edi,0x1000158c
100051f7:	cmp    eax,edi
100051f9:	mov    esi,eax
100051fb:	jae    0x1000520c
100051fd:	mov    eax,DWORD PTR [esi]
100051ff:	test   eax,eax
10005201:	je     0x10005205
10005203:	call   eax
10005205:	add    esi,0x4
10005208:	cmp    esi,edi
1000520a:	jb     0x100051fd
1000520c:	pop    edi
1000520d:	pop    esi
1000520e:	ret    
1000520f:	push   esi
10005210:	push   edi
10005211:	mov    eax,0x10001594
10005216:	mov    edi,0x10001594
1000521b:	cmp    eax,edi
1000521d:	mov    esi,eax
1000521f:	jae    0x10005230
10005221:	mov    eax,DWORD PTR [esi]
10005223:	test   eax,eax
10005225:	je     0x10005229
10005227:	call   eax
10005229:	add    esi,0x4
1000522c:	cmp    esi,edi
1000522e:	jb     0x10005221
10005230:	pop    edi
10005231:	pop    esi
10005232:	ret    
10005233:	int3   
10005234:	jmp    DWORD PTR ds:0x10001110
1000523a:	int3   
1000523b:	int3   
1000523c:	int3   
1000523d:	int3   
1000523e:	int3   
1000523f:	int3   
10005240:	mov    ecx,DWORD PTR [esp+0x4]
10005244:	cmp    WORD PTR [ecx],0x5a4d
10005249:	je     0x1000524e
1000524b:	xor    eax,eax
1000524d:	ret    
1000524e:	mov    eax,DWORD PTR [ecx+0x3c]
10005251:	add    eax,ecx
10005253:	cmp    DWORD PTR [eax],0x4550
10005259:	jne    0x1000524b
1000525b:	xor    ecx,ecx
1000525d:	cmp    WORD PTR [eax+0x18],0x10b
10005263:	sete   cl
10005266:	mov    eax,ecx
10005268:	ret    
10005269:	int3   
1000526a:	int3   
1000526b:	int3   
1000526c:	int3   
1000526d:	int3   
1000526e:	int3   
1000526f:	int3   
10005270:	mov    eax,DWORD PTR [esp+0x4]
10005274:	mov    ecx,DWORD PTR [eax+0x3c]
10005277:	add    ecx,eax
10005279:	movzx  eax,WORD PTR [ecx+0x14]
1000527d:	push   ebx
1000527e:	push   esi
1000527f:	movzx  esi,WORD PTR [ecx+0x6]
10005283:	xor    edx,edx
10005285:	test   esi,esi
10005287:	push   edi
10005288:	lea    eax,[eax+ecx*1+0x18]
1000528c:	jbe    0x100052ac
1000528e:	mov    edi,DWORD PTR [esp+0x14]
10005292:	mov    ecx,DWORD PTR [eax+0xc]
10005295:	cmp    edi,ecx
10005297:	jb     0x100052a2
10005299:	mov    ebx,DWORD PTR [eax+0x8]
1000529c:	add    ebx,ecx
1000529e:	cmp    edi,ebx
100052a0:	jb     0x100052ae
100052a2:	add    edx,0x1
100052a5:	add    eax,0x28
100052a8:	cmp    edx,esi
100052aa:	jb     0x10005292
100052ac:	xor    eax,eax
100052ae:	pop    edi
100052af:	pop    esi
100052b0:	pop    ebx
100052b1:	ret    
100052b2:	int3   
100052b3:	int3   
100052b4:	int3   
100052b5:	int3   
100052b6:	int3   
100052b7:	int3   
100052b8:	int3   
100052b9:	int3   
100052ba:	int3   
100052bb:	int3   
100052bc:	int3   
100052bd:	int3   
100052be:	int3   
100052bf:	int3   
100052c0:	push   ebp
100052c1:	mov    ebp,esp
100052c3:	push   0xfffffffe
100052c5:	push   0x10006070
100052ca:	push   0x100050bf
100052cf:	mov    eax,fs:0x0
100052d5:	push   eax
100052d6:	sub    esp,0x8
100052d9:	push   ebx
100052da:	push   esi
100052db:	push   edi
100052dc:	mov    eax,ds:0x10007060
100052e1:	xor    DWORD PTR [ebp-0x8],eax
100052e4:	xor    eax,ebp
100052e6:	push   eax
100052e7:	lea    eax,[ebp-0x10]
100052ea:	mov    fs:0x0,eax
100052f0:	mov    DWORD PTR [ebp-0x18],esp
100052f3:	mov    DWORD PTR [ebp-0x4],0x0
100052fa:	push   0x10000000
100052ff:	call   0x10005240
10005304:	add    esp,0x4
10005307:	test   eax,eax
10005309:	je     0x10005360
1000530b:	mov    eax,DWORD PTR [ebp+0x8]
1000530e:	sub    eax,0x10000000
10005313:	push   eax
10005314:	push   0x10000000
10005319:	call   0x10005270
1000531e:	add    esp,0x8
10005321:	test   eax,eax
10005323:	je     0x10005360
10005325:	mov    eax,DWORD PTR [eax+0x24]
10005328:	shr    eax,0x1f
1000532b:	not    eax
1000532d:	and    eax,0x1
10005330:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10005337:	mov    ecx,DWORD PTR [ebp-0x10]
1000533a:	mov    DWORD PTR fs:0x0,ecx
10005341:	pop    ecx
10005342:	pop    edi
10005343:	pop    esi
10005344:	pop    ebx
10005345:	mov    esp,ebp
10005347:	pop    ebp
10005348:	ret    
10005349:	mov    eax,DWORD PTR [ebp-0x14]
1000534c:	mov    ecx,DWORD PTR [eax]
1000534e:	mov    eax,DWORD PTR [ecx]
10005350:	xor    edx,edx
10005352:	cmp    eax,0xc0000005
10005357:	sete   dl
1000535a:	mov    eax,edx
1000535c:	ret    
1000535d:	mov    esp,DWORD PTR [ebp-0x18]
10005360:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10005367:	xor    eax,eax
10005369:	mov    ecx,DWORD PTR [ebp-0x10]
1000536c:	mov    DWORD PTR fs:0x0,ecx
10005373:	pop    ecx
10005374:	pop    edi
10005375:	pop    esi
10005376:	pop    ebx
10005377:	mov    esp,ebp
10005379:	pop    ebp
1000537a:	ret    
1000537b:	int3   
1000537c:	jmp    DWORD PTR ds:0x10001104
10005382:	jmp    DWORD PTR ds:0x10001100
10005388:	push   0x100050bf
1000538d:	push   DWORD PTR fs:0x0
10005394:	mov    eax,DWORD PTR [esp+0x10]
10005398:	mov    DWORD PTR [esp+0x10],ebp
1000539c:	lea    ebp,[esp+0x10]
100053a0:	sub    esp,eax
100053a2:	push   ebx
100053a3:	push   esi
100053a4:	push   edi
100053a5:	mov    eax,ds:0x10007060
100053aa:	xor    DWORD PTR [ebp-0x4],eax
100053ad:	xor    eax,ebp
100053af:	push   eax
100053b0:	mov    DWORD PTR [ebp-0x18],esp
100053b3:	push   DWORD PTR [ebp-0x8]
100053b6:	mov    eax,DWORD PTR [ebp-0x4]
100053b9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100053c0:	mov    DWORD PTR [ebp-0x8],eax
100053c3:	lea    eax,[ebp-0x10]
100053c6:	mov    fs:0x0,eax
100053cc:	ret    
100053cd:	mov    ecx,DWORD PTR [ebp-0x10]
100053d0:	mov    DWORD PTR fs:0x0,ecx
100053d7:	pop    ecx
100053d8:	pop    edi
100053d9:	pop    edi
100053da:	pop    esi
100053db:	pop    ebx
100053dc:	mov    esp,ebp
100053de:	pop    ebp
100053df:	push   ecx
100053e0:	ret    
100053e1:	push   esi
100053e2:	push   0x30000
100053e7:	push   0x10000
100053ec:	xor    esi,esi
100053ee:	push   esi
100053ef:	call   0x100055ca
100053f4:	add    esp,0xc
100053f7:	test   eax,eax
100053f9:	je     0x10005408
100053fb:	push   esi
100053fc:	push   esi
100053fd:	push   esi
100053fe:	push   esi
100053ff:	push   esi
10005400:	call   0x100055c4
10005405:	add    esp,0x14
10005408:	pop    esi
10005409:	ret    
1000540a:	xor    eax,eax
1000540c:	ret    
1000540d:	push   ebp
1000540e:	mov    ebp,esp
10005410:	sub    esp,0x10
10005413:	mov    eax,ds:0x10007060
10005418:	and    DWORD PTR [ebp-0x8],0x0
1000541c:	and    DWORD PTR [ebp-0x4],0x0
10005420:	push   ebx
10005421:	push   edi
10005422:	mov    edi,0xbb40e64e
10005427:	cmp    eax,edi
10005429:	mov    ebx,0xffff0000
1000542e:	je     0x1000543d
10005430:	test   ebx,eax
10005432:	je     0x1000543d
10005434:	not    eax
10005436:	mov    ds:0x10007064,eax
1000543b:	jmp    0x1000549d
1000543d:	push   esi
1000543e:	lea    eax,[ebp-0x8]
10005441:	push   eax
10005442:	call   DWORD PTR ds:0x1000108c
10005448:	mov    esi,DWORD PTR [ebp-0x4]
1000544b:	xor    esi,DWORD PTR [ebp-0x8]
1000544e:	call   DWORD PTR ds:0x10001088
10005454:	xor    esi,eax
10005456:	call   DWORD PTR ds:0x10001084
1000545c:	xor    esi,eax
1000545e:	call   DWORD PTR ds:0x10001024
10005464:	xor    esi,eax
10005466:	lea    eax,[ebp-0x10]
10005469:	push   eax
1000546a:	call   DWORD PTR ds:0x10001080
10005470:	mov    eax,DWORD PTR [ebp-0xc]
10005473:	xor    eax,DWORD PTR [ebp-0x10]
10005476:	xor    esi,eax
10005478:	cmp    esi,edi
1000547a:	jne    0x10005483
1000547c:	mov    esi,0xbb40e64f
10005481:	jmp    0x1000548e
10005483:	test   ebx,esi
10005485:	jne    0x1000548e
10005487:	mov    eax,esi
10005489:	shl    eax,0x10
1000548c:	or     esi,eax
1000548e:	mov    DWORD PTR ds:0x10007060,esi
10005494:	not    esi
10005496:	mov    DWORD PTR ds:0x10007064,esi
1000549c:	pop    esi
1000549d:	pop    edi
1000549e:	pop    ebx
1000549f:	leave  
100054a0:	ret    
100054a1:	push   ebp
100054a2:	mov    ebp,esp
100054a4:	sub    esp,0x328
100054aa:	mov    ds:0x100071e8,eax
100054af:	mov    DWORD PTR ds:0x100071e4,ecx
100054b5:	mov    DWORD PTR ds:0x100071e0,edx
100054bb:	mov    DWORD PTR ds:0x100071dc,ebx
100054c1:	mov    DWORD PTR ds:0x100071d8,esi
100054c7:	mov    DWORD PTR ds:0x100071d4,edi
100054cd:	data16 mov WORD PTR ds:0x10007200,ss
100054d4:	data16 mov WORD PTR ds:0x100071f4,cs
100054db:	data16 mov WORD PTR ds:0x100071d0,ds
100054e2:	data16 mov WORD PTR ds:0x100071cc,es
100054e9:	data16 mov WORD PTR ds:0x100071c8,fs
100054f0:	data16 mov WORD PTR ds:0x100071c4,gs
100054f7:	pushf  
100054f8:	pop    DWORD PTR ds:0x100071f8
100054fe:	mov    eax,DWORD PTR [ebp+0x0]
10005501:	mov    ds:0x100071ec,eax
10005506:	mov    eax,DWORD PTR [ebp+0x4]
10005509:	mov    ds:0x100071f0,eax
1000550e:	lea    eax,[ebp+0x8]
10005511:	mov    ds:0x100071fc,eax
10005516:	mov    eax,DWORD PTR [ebp-0x320]
1000551c:	mov    DWORD PTR ds:0x10007138,0x10001
10005526:	mov    eax,ds:0x100071f0
1000552b:	mov    ds:0x100070ec,eax
10005530:	mov    DWORD PTR ds:0x100070e0,0xc0000409
1000553a:	mov    DWORD PTR ds:0x100070e4,0x1
10005544:	mov    eax,ds:0x10007060
10005549:	mov    DWORD PTR [ebp-0x328],eax
1000554f:	mov    eax,ds:0x10007064
10005554:	mov    DWORD PTR [ebp-0x324],eax
1000555a:	call   DWORD PTR ds:0x10001098
10005560:	mov    ds:0x10007130,eax
10005565:	push   0x1
10005567:	call   0x100055d0
1000556c:	pop    ecx
1000556d:	push   0x0
1000556f:	call   DWORD PTR ds:0x1000107c
10005575:	push   0x100014b8
1000557a:	call   DWORD PTR ds:0x10001094
10005580:	cmp    DWORD PTR ds:0x10007130,0x0
10005587:	jne    0x10005591
10005589:	push   0x1
1000558b:	call   0x100055d0
10005590:	pop    ecx
10005591:	push   0xc0000409
10005596:	call   DWORD PTR ds:0x1000106c
1000559c:	push   eax
1000559d:	call   DWORD PTR ds:0x10001090
100055a3:	leave  
100055a4:	ret    
100055a5:	int3   
100055a6:	jmp    DWORD PTR ds:0x100010e0
100055ac:	jmp    DWORD PTR ds:0x100010dc
100055b2:	jmp    DWORD PTR ds:0x100010d8
100055b8:	jmp    DWORD PTR ds:0x100010d4
100055be:	jmp    DWORD PTR ds:0x100010d0
100055c4:	jmp    DWORD PTR ds:0x100010c4
100055ca:	jmp    DWORD PTR ds:0x100010c0
100055d0:	jmp    DWORD PTR ds:0x100010bc
100055d6:	jmp    DWORD PTR ds:0x1000105c
100055dc:	jmp    DWORD PTR ds:0x10001060
100055e2:	jmp    DWORD PTR ds:0x10001070
100055e8:	jmp    DWORD PTR ds:0x10001178
100055ee:	jmp    DWORD PTR ds:0x10001174
100055f4:	jmp    DWORD PTR ds:0x1000117c
100055fa:	jmp    DWORD PTR ds:0x10001164
10005600:	lea    ecx,[ebp-0x20]
10005603:	jmp    0x10003180
10005608:	mov    edx,DWORD PTR [esp+0x8]
1000560c:	lea    eax,[edx+0xc]
1000560f:	mov    ecx,DWORD PTR [edx-0x24]
10005612:	xor    ecx,eax
10005614:	call   0x10004d94
10005619:	mov    eax,0x10005a28
1000561e:	jmp    0x10004d8e
10005623:	mov    ecx,DWORD PTR [ebp-0x10]
10005626:	jmp    0x10002075
1000562b:	mov    ecx,DWORD PTR [ebp-0x10]
1000562e:	add    ecx,0x1b4
10005634:	jmp    0x10002144
10005639:	mov    edx,DWORD PTR [esp+0x8]
1000563d:	lea    eax,[edx+0xc]
10005640:	mov    ecx,DWORD PTR [edx-0x14]
10005643:	xor    ecx,eax
10005645:	call   0x10004d94
1000564a:	mov    eax,0x10005a5c
1000564f:	jmp    0x10004d8e
10005654:	mov    ecx,DWORD PTR [ebp-0x10]
10005657:	jmp    0x10003180
1000565c:	mov    ecx,DWORD PTR [ebp-0x10]
1000565f:	add    ecx,0xc
10005662:	jmp    0x10003180
10005667:	mov    ecx,DWORD PTR [ebp-0x10]
1000566a:	add    ecx,0x18
1000566d:	jmp    0x10003180
10005672:	mov    ecx,DWORD PTR [ebp-0x10]
10005675:	add    ecx,0x24
10005678:	jmp    0x10003180
1000567d:	mov    ecx,DWORD PTR [ebp-0x10]
10005680:	add    ecx,0x30
10005683:	jmp    0x10003180
10005688:	mov    ecx,DWORD PTR [ebp-0x10]
1000568b:	add    ecx,0x3c
1000568e:	jmp    0x10003180
10005693:	mov    ecx,DWORD PTR [ebp-0x10]
10005696:	add    ecx,0x48
10005699:	jmp    0x10003180
1000569e:	mov    ecx,DWORD PTR [ebp-0x10]
100056a1:	add    ecx,0x54
100056a4:	jmp    0x10003180
100056a9:	mov    ecx,DWORD PTR [ebp-0x10]
100056ac:	add    ecx,0x60
100056af:	jmp    0x10003180
100056b4:	push   0x10003180
100056b9:	push   0xa
100056bb:	push   0xc
100056bd:	mov    eax,DWORD PTR [ebp-0x10]
100056c0:	add    eax,0x6c
100056c3:	push   eax
100056c4:	call   0x10004f12
100056c9:	ret    
100056ca:	push   0x10003180
100056cf:	push   0xb
100056d1:	push   0xc
100056d3:	mov    eax,DWORD PTR [ebp-0x10]
100056d6:	add    eax,0xe4
100056db:	push   eax
100056dc:	call   0x10004f12
100056e1:	ret    
100056e2:	mov    ecx,DWORD PTR [ebp-0x10]
100056e5:	add    ecx,0x168
100056eb:	jmp    0x10003180
100056f0:	mov    ecx,DWORD PTR [ebp-0x10]
100056f3:	add    ecx,0x174
100056f9:	jmp    0x10003180
100056fe:	mov    edx,DWORD PTR [esp+0x8]
10005702:	lea    eax,[edx+0xc]
10005705:	mov    ecx,DWORD PTR [edx-0x14]
10005708:	xor    ecx,eax
1000570a:	call   0x10004d94
1000570f:	mov    eax,0x10005a80
10005714:	jmp    0x10004d8e
10005719:	lea    ecx,[ebp-0x8bc]
1000571f:	jmp    0x10003180
10005724:	mov    edx,DWORD PTR [esp+0x8]
10005728:	lea    eax,[edx+0xc]
1000572b:	mov    ecx,DWORD PTR [edx-0x8c0]
10005731:	xor    ecx,eax
10005733:	call   0x10004d94
10005738:	mov    ecx,DWORD PTR [edx-0x4]
1000573b:	xor    ecx,eax
1000573d:	call   0x10004d94
10005742:	mov    eax,0x10005b14
10005747:	jmp    0x10004d8e
1000574c:	lea    ecx,[ebp-0x264]
10005752:	jmp    0x100021dc
10005757:	mov    edx,DWORD PTR [esp+0x8]
1000575b:	lea    eax,[edx+0xc]
1000575e:	mov    ecx,DWORD PTR [edx-0x26c]
10005764:	xor    ecx,eax
10005766:	call   0x10004d94
1000576b:	mov    ecx,DWORD PTR [edx-0x4]
1000576e:	xor    ecx,eax
10005770:	call   0x10004d94
10005775:	mov    eax,0x10005b40
1000577a:	jmp    0x10004d8e
1000577f:	mov    ecx,DWORD PTR [ebp-0x10]
10005782:	jmp    0x10003180
10005787:	mov    edx,DWORD PTR [esp+0x8]
1000578b:	lea    eax,[edx+0xc]
1000578e:	mov    ecx,DWORD PTR [edx-0x14]
10005791:	xor    ecx,eax
10005793:	call   0x10004d94
10005798:	mov    eax,0x10005b6c
1000579d:	jmp    0x10004d8e
100057a2:	lea    ecx,[ebp-0x24]
100057a5:	jmp    0x10002f68
100057aa:	mov    edx,DWORD PTR [esp+0x8]
100057ae:	lea    eax,[edx+0xc]
100057b1:	mov    ecx,DWORD PTR [edx-0x28]
100057b4:	xor    ecx,eax
100057b6:	call   0x10004d94
100057bb:	mov    eax,0x10005b98
100057c0:	jmp    0x10004d8e
100057c5:	mov    edx,DWORD PTR [esp+0x8]
100057c9:	lea    eax,[edx+0xc]
100057cc:	mov    ecx,DWORD PTR [edx-0x1c]
100057cf:	xor    ecx,eax
100057d1:	call   0x10004d94
100057d6:	mov    eax,0x10005bf0
100057db:	jmp    0x10004d8e
100057e0:	mov    edx,DWORD PTR [esp+0x8]
100057e4:	lea    eax,[edx+0xc]
100057e7:	mov    ecx,DWORD PTR [edx-0x1c]
100057ea:	xor    ecx,eax
100057ec:	call   0x10004d94
100057f1:	mov    eax,0x10005c48
100057f6:	jmp    0x10004d8e
100057fb:	mov    edx,DWORD PTR [esp+0x8]
100057ff:	lea    eax,[edx+0xc]
10005802:	mov    ecx,DWORD PTR [edx-0x20]
10005805:	xor    ecx,eax
10005807:	call   0x10004d94
1000580c:	mov    eax,0x10005ca0
10005811:	jmp    0x10004d8e
10005816:	mov    edx,DWORD PTR [esp+0x8]
1000581a:	lea    eax,[edx+0xc]
1000581d:	mov    ecx,DWORD PTR [edx-0x1c]
10005820:	xor    ecx,eax
10005822:	call   0x10004d94
10005827:	mov    eax,0x10005cf8
1000582c:	jmp    0x10004d8e
10005831:	mov    edx,DWORD PTR [esp+0x8]
10005835:	lea    eax,[edx+0xc]
10005838:	mov    ecx,DWORD PTR [edx-0x20]
1000583b:	xor    ecx,eax
1000583d:	call   0x10004d94
10005842:	mov    eax,0x10005d50
10005847:	jmp    0x10004d8e
1000584c:	lea    ecx,[ebp-0x28]
1000584f:	jmp    0x10003180
10005854:	mov    edx,DWORD PTR [esp+0x8]
10005858:	lea    eax,[edx+0xc]
1000585b:	mov    ecx,DWORD PTR [edx-0x2c]
1000585e:	xor    ecx,eax
10005860:	call   0x10004d94
10005865:	mov    eax,0x10005d7c
1000586a:	jmp    0x10004d8e
1000586f:	mov    edx,DWORD PTR [esp+0x8]
10005873:	lea    eax,[edx+0xc]
10005876:	mov    ecx,DWORD PTR [edx-0x24]
10005879:	xor    ecx,eax
1000587b:	call   0x10004d94
10005880:	mov    eax,0x10005dd4
10005885:	jmp    0x10004d8e
1000588a:	mov    ecx,DWORD PTR [ebp-0x10]
1000588d:	add    ecx,0x14
10005890:	jmp    0x10003180
10005895:	mov    ecx,DWORD PTR [ebp-0x10]
10005898:	add    ecx,0x20
1000589b:	jmp    0x10003180
100058a0:	mov    edx,DWORD PTR [esp+0x8]
100058a4:	lea    eax,[edx+0xc]
100058a7:	mov    ecx,DWORD PTR [edx-0x14]
100058aa:	xor    ecx,eax
100058ac:	call   0x10004d94
100058b1:	mov    eax,0x10005e08
100058b6:	jmp    0x10004d8e
100058bb:	lea    ecx,[ebp-0x3c]
100058be:	jmp    0x10003e71
100058c3:	mov    edx,DWORD PTR [esp+0x8]
100058c7:	lea    eax,[edx+0xc]
100058ca:	mov    ecx,DWORD PTR [edx-0x40]
100058cd:	xor    ecx,eax
100058cf:	call   0x10004d94
100058d4:	mov    eax,0x10005e34
100058d9:	jmp    0x10004d8e
100058de:	mov    edx,DWORD PTR [esp+0x8]
100058e2:	lea    eax,[edx+0xc]
100058e5:	mov    ecx,DWORD PTR [edx-0x148]
100058eb:	xor    ecx,eax
100058ed:	call   0x10004d94
100058f2:	mov    ecx,DWORD PTR [edx-0x8]
100058f5:	xor    ecx,eax
100058f7:	call   0x10004d94
100058fc:	mov    eax,0x10005e8c
10005901:	jmp    0x10004d8e
10005906:	mov    ecx,DWORD PTR [ebp-0x10]
10005909:	add    ecx,0x4
1000590c:	jmp    0x10003180
10005911:	mov    ecx,DWORD PTR [ebp-0x10]
10005914:	add    ecx,0x10
10005917:	jmp    0x10003180
1000591c:	mov    ecx,DWORD PTR [ebp-0x10]
1000591f:	add    ecx,0x28
10005922:	jmp    0x10003180
10005927:	mov    ecx,DWORD PTR [ebp-0x10]
1000592a:	add    ecx,0x34
1000592d:	jmp    0x10003180
10005932:	mov    ecx,DWORD PTR [ebp-0x10]
10005935:	add    ecx,0x40
10005938:	jmp    0x10003180
1000593d:	mov    ecx,DWORD PTR [ebp-0x10]
10005940:	add    ecx,0x4c
10005943:	jmp    0x10003180
10005948:	mov    ecx,DWORD PTR [ebp-0x10]
1000594b:	add    ecx,0x64
1000594e:	jmp    0x10003180
10005953:	mov    ecx,DWORD PTR [ebp-0x10]
10005956:	add    ecx,0x70
10005959:	jmp    0x10003180
1000595e:	mov    ecx,DWORD PTR [ebp-0x10]
10005961:	add    ecx,0x88
10005967:	jmp    0x10003180
1000596c:	mov    ecx,DWORD PTR [ebp-0x10]
1000596f:	add    ecx,0x94
10005975:	jmp    0x10003180
1000597a:	mov    edx,DWORD PTR [esp+0x8]
1000597e:	lea    eax,[edx+0xc]
10005981:	mov    ecx,DWORD PTR [edx-0x14]
10005984:	xor    ecx,eax
10005986:	call   0x10004d94
1000598b:	mov    eax,0x10005ecc
10005990:	jmp    0x10004d8e
10005995:	lea    ecx,[ebp-0x18]
10005998:	jmp    0x10003180
1000599d:	mov    edx,DWORD PTR [esp+0x8]
100059a1:	lea    eax,[edx+0xc]
100059a4:	mov    ecx,DWORD PTR [edx-0x50]
100059a7:	xor    ecx,eax
100059a9:	call   0x10004d94
100059ae:	mov    eax,0x10005f48
100059b3:	jmp    0x10004d8e
100059b8:	lea    ecx,[ebp-0x18]
100059bb:	jmp    0x10003180
100059c0:	mov    edx,DWORD PTR [esp+0x8]
100059c4:	lea    eax,[edx+0xc]
100059c7:	mov    ecx,DWORD PTR [edx-0x1c]
100059ca:	xor    ecx,eax
100059cc:	call   0x10004d94
100059d1:	mov    eax,0x10005f74
100059d6:	jmp    0x10004d8e
100059db:	lea    ecx,[ebp-0x458]
100059e1:	jmp    0x10003180
100059e6:	lea    ecx,[ebp-0x44c]
100059ec:	jmp    0x10003180
100059f1:	mov    edx,DWORD PTR [esp+0x8]
100059f5:	lea    eax,[edx+0xc]
100059f8:	mov    ecx,DWORD PTR [edx-0x45c]
100059fe:	xor    ecx,eax
10005a00:	call   0x10004d94
10005a05:	mov    ecx,DWORD PTR [edx-0x4]
10005a08:	xor    ecx,eax
10005a0a:	call   0x10004d94
10005a0f:	mov    eax,0x10005fa8
10005a14:	jmp    0x10004d8e
10005a19:	int3   
10005a1a:	int3   
10005a1b:	int3   
10005a1c:	int3   
10005a1d:	int3   
10005a1e:	int3   
10005a1f:	int3   
10005a20:	(bad)  
10005a21:	(bad)  
10005a22:	(bad)  
10005a23:	inc    DWORD PTR [eax]
10005a25:	push   esi
10005a26:	add    BYTE PTR [eax],dl
10005a28:	and    al,BYTE PTR ds:0x11993
10005a2e:	add    BYTE PTR [eax],al
10005a30:	and    BYTE PTR [edx+0x0],bl
10005a33:	adc    BYTE PTR [eax],al
	...
10005a49:	add    BYTE PTR [eax],al
10005a4b:	add    bh,bh
10005a4d:	(bad)  
10005a4e:	(bad)  
10005a4f:	jmp    DWORD PTR [ebx]
10005a51:	push   esi
10005a52:	add    BYTE PTR [eax],dl
10005a54:	add    BYTE PTR [eax],al
10005a56:	add    BYTE PTR [eax],al
10005a58:	sub    edx,DWORD PTR [esi+0x0]
10005a5b:	adc    BYTE PTR [edx],ah
10005a5d:	add    eax,0x21993
10005a62:	add    BYTE PTR [eax],al
10005a64:	dec    esp
10005a65:	pop    edx
10005a66:	add    BYTE PTR [eax],dl
	...
10005a80:	and    al,BYTE PTR ds:0xd1993
10005a86:	add    BYTE PTR [eax],al
10005a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005a89:	pop    edx
10005a8a:	add    BYTE PTR [eax],dl
	...
10005aa4:	(bad)  
10005aa5:	(bad)  
10005aa6:	(bad)  
10005aa7:	call   DWORD PTR [esi+edx*2+0x0]
10005aab:	adc    BYTE PTR [eax],al
10005aad:	add    BYTE PTR [eax],al
10005aaf:	add    BYTE PTR [esi+edx*2+0x0],bl
10005ab3:	adc    BYTE PTR [ecx],al
10005ab5:	add    BYTE PTR [eax],al
10005ab7:	add    BYTE PTR [edi+0x56],ah
10005aba:	add    BYTE PTR [eax],dl
10005abc:	add    al,BYTE PTR [eax]
10005abe:	add    BYTE PTR [eax],al
10005ac0:	jb     0x10005b18
10005ac2:	add    BYTE PTR [eax],dl
10005ac4:	add    eax,DWORD PTR [eax]
10005ac6:	add    BYTE PTR [eax],al
10005ac8:	jge    0x10005b20
10005aca:	add    BYTE PTR [eax],dl
10005acc:	add    al,0x0
10005ace:	add    BYTE PTR [eax],al
10005ad0:	mov    BYTE PTR [esi+0x0],dl
10005ad3:	adc    BYTE PTR ds:0x93000000,al
10005ad9:	push   esi
10005ada:	add    BYTE PTR [eax],dl
10005adc:	push   es
10005add:	add    BYTE PTR [eax],al
10005adf:	add    BYTE PTR [esi+0x7100056],bl
10005ae5:	add    BYTE PTR [eax],al
10005ae7:	add    BYTE PTR [ecx+0x8100056],ch
10005aed:	add    BYTE PTR [eax],al
10005aef:	add    BYTE PTR [esi+edx*2+0x91000],dh
10005af6:	add    BYTE PTR [eax],al
10005af8:	retf   0x56
10005afb:	adc    BYTE PTR [edx],cl
10005afd:	add    BYTE PTR [eax],al
10005aff:	add    dl,ah
10005b01:	push   esi
10005b02:	add    BYTE PTR [eax],dl
10005b04:	or     eax,DWORD PTR [eax]
10005b06:	add    BYTE PTR [eax],al
10005b08:	lock push esi
10005b0a:	add    BYTE PTR [eax],dl
10005b0c:	(bad)  
10005b0d:	(bad)  
10005b0e:	(bad)  
10005b0f:	call   FWORD PTR [ecx]
10005b11:	push   edi
10005b12:	add    BYTE PTR [eax],dl
10005b14:	and    al,BYTE PTR ds:0x11993
10005b1a:	add    BYTE PTR [eax],al
10005b1c:	or     al,0x5b
10005b1e:	add    BYTE PTR [eax],dl
	...
10005b38:	(bad)  
10005b39:	(bad)  
10005b3a:	(bad)  
10005b3b:	dec    DWORD PTR [edi+edx*2+0x0]
10005b3f:	adc    BYTE PTR [edx],ah
10005b41:	add    eax,0x11993
10005b46:	add    BYTE PTR [eax],al
10005b48:	cmp    BYTE PTR [ebx+0x0],bl
10005b4b:	adc    BYTE PTR [eax],al
	...
10005b61:	add    BYTE PTR [eax],al
10005b63:	add    bh,bh
10005b65:	(bad)  
10005b66:	(bad)  
10005b67:	(bad)  
10005b68:	jg     0x10005bc1
10005b6a:	add    BYTE PTR [eax],dl
10005b6c:	and    al,BYTE PTR ds:0x11993
10005b72:	add    BYTE PTR [eax],al
10005b74:	fs pop ebx
10005b76:	add    BYTE PTR [eax],dl
	...
10005b90:	(bad)  
10005b91:	(bad)  
10005b92:	(bad)  
10005b93:	jmp    DWORD PTR [edx+0x22100057]
10005b99:	add    eax,0x11993
10005b9e:	add    BYTE PTR [eax],al
10005ba0:	nop
10005ba1:	pop    ebx
10005ba2:	add    BYTE PTR [eax],dl
	...
10005bc8:	sbb    dh,BYTE PTR [ebx]
10005bca:	add    BYTE PTR [eax],dl
10005bcc:	(bad)  
10005bcd:	(bad)  
10005bce:	(bad)  
10005bcf:	inc    DWORD PTR [eax]
10005bd1:	add    BYTE PTR [eax],al
10005bd3:	add    bh,bh
10005bd5:	(bad)  
10005bd6:	(bad)  
10005bd7:	inc    DWORD PTR [eax]
	...
10005be1:	add    BYTE PTR [eax],al
10005be3:	add    BYTE PTR [ecx],al
10005be5:	add    BYTE PTR [eax],al
10005be7:	add    BYTE PTR [ecx],al
10005be9:	add    BYTE PTR [eax],al
10005beb:	add    BYTE PTR [ebx+ebx*2+0x5221000],bh
10005bf2:	xchg   ebx,eax
10005bf3:	sbb    DWORD PTR [edx],eax
10005bf5:	add    BYTE PTR [eax],al
10005bf7:	add    ah,cl
10005bf9:	pop    ebx
10005bfa:	add    BYTE PTR [eax],dl
10005bfc:	add    DWORD PTR [eax],eax
10005bfe:	add    BYTE PTR [eax],al
10005c00:	fcomp  QWORD PTR [ebx+0x0]
10005c03:	adc    BYTE PTR [eax],al
	...
10005c1d:	add    BYTE PTR [eax],al
10005c1f:	add    ch,ch
10005c21:	xor    eax,DWORD PTR [eax]
10005c23:	adc    bh,bh
10005c25:	(bad)  
10005c26:	(bad)  
10005c27:	inc    DWORD PTR [eax]
10005c29:	add    BYTE PTR [eax],al
10005c2b:	add    bh,bh
10005c2d:	(bad)  
10005c2e:	(bad)  
10005c2f:	inc    DWORD PTR [eax]
	...
10005c39:	add    BYTE PTR [eax],al
10005c3b:	add    BYTE PTR [ecx],al
10005c3d:	add    BYTE PTR [eax],al
10005c3f:	add    BYTE PTR [ecx],al
10005c41:	add    BYTE PTR [eax],al
10005c43:	add    BYTE PTR [esp+ebx*2],dl
10005c46:	add    BYTE PTR [eax],dl
10005c48:	and    al,BYTE PTR ds:0x21993
10005c4e:	add    BYTE PTR [eax],al
10005c50:	and    al,0x5c
10005c52:	add    BYTE PTR [eax],dl
10005c54:	add    DWORD PTR [eax],eax
10005c56:	add    BYTE PTR [eax],al
10005c58:	xor    al,0x5c
10005c5a:	add    BYTE PTR [eax],dl
	...
10005c78:	mov    edi,0xff100034
10005c7d:	(bad)  
10005c7e:	(bad)  
10005c7f:	inc    DWORD PTR [eax]
10005c81:	add    BYTE PTR [eax],al
10005c83:	add    bh,bh
10005c85:	(bad)  
10005c86:	(bad)  
10005c87:	inc    DWORD PTR [eax]
	...
10005c91:	add    BYTE PTR [eax],al
10005c93:	add    BYTE PTR [ecx],al
10005c95:	add    BYTE PTR [eax],al
10005c97:	add    BYTE PTR [ecx],al
10005c99:	add    BYTE PTR [eax],al
10005c9b:	add    BYTE PTR [esp+ebx*2+0x0],ch
10005c9f:	adc    BYTE PTR [edx],ah
10005ca1:	add    eax,0x21993
10005ca6:	add    BYTE PTR [eax],al
10005ca8:	jl     0x10005d06
10005caa:	add    BYTE PTR [eax],dl
10005cac:	add    DWORD PTR [eax],eax
10005cae:	add    BYTE PTR [eax],al
10005cb0:	mov    WORD PTR [eax+eax*1+0x10],ds
	...
10005cd0:	sub    esi,DWORD PTR [edi]
10005cd2:	add    BYTE PTR [eax],dl
10005cd4:	(bad)  
10005cd5:	(bad)  
10005cd6:	(bad)  
10005cd7:	inc    DWORD PTR [eax]
10005cd9:	add    BYTE PTR [eax],al
10005cdb:	add    bh,bh
10005cdd:	(bad)  
10005cde:	(bad)  
10005cdf:	inc    DWORD PTR [eax]
	...
10005ce9:	add    BYTE PTR [eax],al
10005ceb:	add    BYTE PTR [ecx],al
10005ced:	add    BYTE PTR [eax],al
10005cef:	add    BYTE PTR [ecx],al
10005cf1:	add    BYTE PTR [eax],al
10005cf3:	add    ah,al
10005cf5:	pop    esp
10005cf6:	add    BYTE PTR [eax],dl
10005cf8:	and    al,BYTE PTR ds:0x21993
10005cfe:	add    BYTE PTR [eax],al
10005d00:	aam    0x5c
10005d02:	add    BYTE PTR [eax],dl
10005d04:	add    DWORD PTR [eax],eax
10005d06:	add    BYTE PTR [eax],al
10005d08:	in     al,0x5c
10005d0a:	add    BYTE PTR [eax],dl
	...
10005d28:	hlt    
10005d29:	aaa    
10005d2a:	add    BYTE PTR [eax],dl
10005d2c:	(bad)  
10005d2d:	(bad)  
10005d2e:	(bad)  
10005d2f:	inc    DWORD PTR [eax]
10005d31:	add    BYTE PTR [eax],al
10005d33:	add    bh,bh
10005d35:	(bad)  
10005d36:	(bad)  
10005d37:	inc    DWORD PTR [eax]
	...
10005d41:	add    BYTE PTR [eax],al
10005d43:	add    BYTE PTR [ecx],al
10005d45:	add    BYTE PTR [eax],al
10005d47:	add    BYTE PTR [ecx],al
10005d49:	add    BYTE PTR [eax],al
10005d4b:	add    BYTE PTR [ebx*2+0x5221000],bl
10005d52:	xchg   ebx,eax
10005d53:	sbb    DWORD PTR [edx],eax
10005d55:	add    BYTE PTR [eax],al
10005d57:	add    BYTE PTR [ebx*2+0x11000],ch
10005d5e:	add    BYTE PTR [eax],al
10005d60:	cmp    al,0x5d
10005d62:	add    BYTE PTR [eax],dl
	...
10005d74:	(bad)  
10005d75:	(bad)  
10005d76:	(bad)  
10005d77:	dec    DWORD PTR [eax+ebx*2+0x0]
10005d7b:	adc    BYTE PTR [edx],ah
10005d7d:	add    eax,0x11993
10005d82:	add    BYTE PTR [eax],al
10005d84:	je     0x10005de3
10005d86:	add    BYTE PTR [eax],dl
	...
10005dac:	sub    al,0x3b
10005dae:	add    BYTE PTR [eax],dl
10005db0:	(bad)  
10005db1:	(bad)  
10005db2:	(bad)  
10005db3:	inc    DWORD PTR [eax]
10005db5:	add    BYTE PTR [eax],al
10005db7:	add    bh,bh
10005db9:	(bad)  
10005dba:	(bad)  
10005dbb:	inc    DWORD PTR [eax]
	...
10005dc5:	add    BYTE PTR [eax],al
10005dc7:	add    BYTE PTR [ecx],al
10005dc9:	add    BYTE PTR [eax],al
10005dcb:	add    BYTE PTR [ecx],al
10005dcd:	add    BYTE PTR [eax],al
10005dcf:	add    BYTE PTR [eax+0x2210005d],ah
10005dd5:	add    eax,0x21993
10005dda:	add    BYTE PTR [eax],al
10005ddc:	mov    al,0x5d
10005dde:	add    BYTE PTR [eax],dl
10005de0:	add    DWORD PTR [eax],eax
10005de2:	add    BYTE PTR [eax],al
10005de4:	rcr    BYTE PTR [ebp+0x0],0x10
	...
10005df8:	(bad)  
10005df9:	(bad)  
10005dfa:	(bad)  
10005dfb:	dec    DWORD PTR [edx+0x100058]
10005e01:	add    BYTE PTR [eax],al
10005e03:	add    BYTE PTR [ebp+0x22100058],dl
10005e09:	add    eax,0x21993
10005e0e:	add    BYTE PTR [eax],al
10005e10:	clc    
10005e11:	pop    ebp
10005e12:	add    BYTE PTR [eax],dl
	...
10005e2c:	(bad)  
10005e2d:	(bad)  
10005e2e:	(bad)  
10005e2f:	(bad)  
10005e30:	mov    ebx,0x22100058
10005e35:	add    eax,0x11993
10005e3a:	add    BYTE PTR [eax],al
10005e3c:	sub    al,0x5e
10005e3e:	add    BYTE PTR [eax],dl
	...
10005e64:	jno    0x10005ea6
10005e66:	add    BYTE PTR [eax],dl
10005e68:	(bad)  
10005e69:	(bad)  
10005e6a:	(bad)  
10005e6b:	inc    DWORD PTR [eax]
10005e6d:	add    BYTE PTR [eax],al
10005e6f:	add    bh,bh
10005e71:	(bad)  
10005e72:	(bad)  
10005e73:	inc    DWORD PTR [eax]
	...
10005e7d:	add    BYTE PTR [eax],al
10005e7f:	add    BYTE PTR [ecx],al
10005e81:	add    BYTE PTR [eax],al
10005e83:	add    BYTE PTR [ecx],al
10005e85:	add    BYTE PTR [eax],al
10005e87:	add    BYTE PTR [eax+0x5e],bl
10005e8a:	add    BYTE PTR [eax],dl
10005e8c:	and    al,BYTE PTR ds:0x21993
10005e92:	add    BYTE PTR [eax],al
10005e94:	push   0x110005e
10005e99:	add    BYTE PTR [eax],al
10005e9b:	add    BYTE PTR [eax+0x5e],bh
10005e9e:	add    BYTE PTR [eax],dl
	...
10005eb0:	in     al,0xff
10005eb2:	(bad)  
10005eb3:	inc    DWORD PTR [eax]
10005eb5:	add    BYTE PTR [eax],al
10005eb7:	add    ah,cl
10005eb9:	std    
10005eba:	(bad)  
10005ebb:	inc    DWORD PTR [eax]
10005ebd:	add    BYTE PTR [eax],al
10005ebf:	add    dh,bh
10005ec1:	(bad)  
10005ec2:	(bad)  
10005ec3:	jmp    DWORD PTR [edi+0x42]
10005ec6:	add    BYTE PTR [eax],dl
10005ec8:	imul   eax,DWORD PTR [edx+0x0],0x10
10005ecc:	and    al,BYTE PTR ds:0xa1993
10005ed2:	add    BYTE PTR [eax],al
10005ed4:	lock pop esi
10005ed6:	add    BYTE PTR [eax],dl
	...
10005ef0:	(bad)  
10005ef1:	(bad)  
10005ef2:	(bad)  
10005ef3:	inc    DWORD PTR [esi]
10005ef5:	pop    ecx
10005ef6:	add    BYTE PTR [eax],dl
10005ef8:	add    BYTE PTR [eax],al
10005efa:	add    BYTE PTR [eax],al
10005efc:	adc    DWORD PTR [ecx+0x0],ebx
10005eff:	adc    BYTE PTR [ecx],al
10005f01:	add    BYTE PTR [eax],al
10005f03:	add    BYTE PTR [ecx+ebx*2],bl
10005f06:	add    BYTE PTR [eax],dl
10005f08:	add    al,BYTE PTR [eax]
10005f0a:	add    BYTE PTR [eax],al
10005f0c:	daa    
10005f0d:	pop    ecx
10005f0e:	add    BYTE PTR [eax],dl
10005f10:	add    eax,DWORD PTR [eax]
10005f12:	add    BYTE PTR [eax],al
10005f14:	xor    bl,BYTE PTR [ecx+0x0]
10005f17:	adc    BYTE PTR [eax+eax*1],al
10005f1a:	add    BYTE PTR [eax],al
10005f1c:	cmp    eax,0x5100059
10005f21:	add    BYTE PTR [eax],al
10005f23:	add    BYTE PTR [eax+0x59],cl
10005f26:	add    BYTE PTR [eax],dl
10005f28:	push   es
10005f29:	add    BYTE PTR [eax],al
10005f2b:	add    BYTE PTR [ebx+0x59],dl
10005f2e:	add    BYTE PTR [eax],dl
10005f30:	pop    es
10005f31:	add    BYTE PTR [eax],al
10005f33:	add    BYTE PTR [esi+0x59],bl
10005f36:	add    BYTE PTR [eax],dl
10005f38:	or     BYTE PTR [eax],al
10005f3a:	add    BYTE PTR [eax],al
10005f3c:	ins    BYTE PTR es:[edi],dx
10005f3d:	pop    ecx
10005f3e:	add    BYTE PTR [eax],dl
10005f40:	(bad)  
10005f41:	(bad)  
10005f42:	(bad)  
10005f43:	call   DWORD PTR [ebp+0x22100059]
10005f49:	add    eax,0x11993
10005f4e:	add    BYTE PTR [eax],al
10005f50:	inc    eax
10005f51:	pop    edi
10005f52:	add    BYTE PTR [eax],dl
	...
10005f6c:	(bad)  
10005f6d:	(bad)  
10005f6e:	(bad)  
10005f6f:	(bad)  
10005f70:	mov    eax,0x22100059
10005f75:	add    eax,0x11993
10005f7a:	add    BYTE PTR [eax],al
10005f7c:	ins    BYTE PTR es:[edi],dx
10005f7d:	pop    edi
10005f7e:	add    BYTE PTR [eax],dl
	...
10005f98:	(bad)  
10005f99:	(bad)  
10005f9a:	(bad)  
10005f9b:	(bad)  
10005f9c:	fistp  DWORD PTR [ecx+0x0]
10005f9f:	adc    BYTE PTR [eax],al
10005fa1:	add    BYTE PTR [eax],al
10005fa3:	add    dh,ah
10005fa5:	pop    ecx
10005fa6:	add    BYTE PTR [eax],dl
10005fa8:	and    al,BYTE PTR ds:0x21993
10005fae:	add    BYTE PTR [eax],al
10005fb0:	cwde   
10005fb1:	pop    edi
10005fb2:	add    BYTE PTR [eax],dl
	...
10005fd0:	(bad)  
10005fd1:	(bad)  
10005fd2:	(bad)  
10005fd3:	inc    DWORD PTR [eax]
10005fd5:	add    BYTE PTR [eax],al
10005fd7:	add    al,dl
10005fd9:	(bad)  
10005fda:	(bad)  
10005fdb:	inc    DWORD PTR [eax]
10005fdd:	add    BYTE PTR [eax],al
10005fdf:	add    dh,bh
10005fe1:	(bad)  
10005fe2:	(bad)  
10005fe3:	call   DWORD PTR [esi+0x4c]
10005fe6:	add    BYTE PTR [eax],dl
10005fe8:	push   0x4c
10005fea:	add    BYTE PTR [eax],dl
10005fec:	add    BYTE PTR [eax],al
10005fee:	add    BYTE PTR [eax],al
10005ff0:	(bad)  
10005ff1:	(bad)  
10005ff2:	(bad)  
10005ff3:	inc    DWORD PTR [eax]
10005ff5:	add    BYTE PTR [eax],al
10005ff7:	add    ah,cl
10005ff9:	(bad)  
10005ffa:	(bad)  
10005ffb:	inc    DWORD PTR [eax]
10005ffd:	add    BYTE PTR [eax],al
10005fff:	add    dh,bh
10006001:	(bad)  
10006002:	(bad)  
10006003:	call   edi
10006005:	dec    esi
10006006:	add    BYTE PTR [eax],dl
10006008:	add    BYTE PTR [edi+0x0],cl
1000600b:	adc    BYTE PTR [eax],al
1000600d:	add    BYTE PTR [eax],al
1000600f:	add    dh,bh
10006011:	(bad)  
10006012:	(bad)  
10006013:	inc    DWORD PTR [eax]
10006015:	add    BYTE PTR [eax],al
10006017:	add    ah,dl
10006019:	(bad)  
1000601a:	(bad)  
1000601b:	inc    DWORD PTR [eax]
1000601d:	add    BYTE PTR [eax],al
1000601f:	add    dh,bh
10006021:	(bad)  
10006022:	(bad)  
10006023:	inc    DWORD PTR [eax]
10006025:	add    BYTE PTR [eax],al
10006027:	add    BYTE PTR [ebp+0x4f],bl
1000602a:	add    BYTE PTR [eax],dl
1000602c:	add    BYTE PTR [eax],al
1000602e:	add    BYTE PTR [eax],al
10006030:	(bad)  
10006031:	(bad)  
10006032:	(bad)  
10006033:	inc    DWORD PTR [eax]
10006035:	add    BYTE PTR [eax],al
10006037:	add    al,dl
10006039:	(bad)  
1000603a:	(bad)  
1000603b:	inc    DWORD PTR [eax]
1000603d:	add    BYTE PTR [eax],al
1000603f:	add    dh,bh
10006041:	(bad)  
10006042:	(bad)  
10006043:	inc    DWORD PTR [eax]
10006045:	add    BYTE PTR [eax],al
10006047:	add    cl,cl
10006049:	dec    edi
1000604a:	add    BYTE PTR [eax],dl
1000604c:	add    BYTE PTR [eax],al
1000604e:	add    BYTE PTR [eax],al
10006050:	(bad)  
10006051:	(bad)  
10006052:	(bad)  
10006053:	inc    DWORD PTR [eax]
10006055:	add    BYTE PTR [eax],al
10006057:	add    ah,cl
10006059:	(bad)  
1000605a:	(bad)  
1000605b:	inc    DWORD PTR [eax]
1000605d:	add    BYTE PTR [eax],al
1000605f:	add    dh,bh
10006061:	(bad)  
10006062:	(bad)  
10006063:	inc    DWORD PTR [eax]
10006065:	add    BYTE PTR [eax],al
10006067:	add    al,dl
10006069:	push   ecx
1000606a:	add    BYTE PTR [eax],dl
1000606c:	add    BYTE PTR [eax],al
1000606e:	add    BYTE PTR [eax],al
10006070:	(bad)  
10006071:	(bad)  
10006072:	(bad)  
10006073:	inc    DWORD PTR [eax]
10006075:	add    BYTE PTR [eax],al
10006077:	add    al,bl
10006079:	(bad)  
1000607a:	(bad)  
1000607b:	inc    DWORD PTR [eax]
1000607d:	add    BYTE PTR [eax],al
1000607f:	add    dh,bh
10006081:	(bad)  
10006082:	(bad)  
10006083:	dec    DWORD PTR [ecx+0x53]
10006086:	add    BYTE PTR [eax],dl
10006088:	pop    ebp
10006089:	push   ebx
1000608a:	add    BYTE PTR [eax],dl
1000608c:	aam    0x61
	...
10006096:	add    BYTE PTR [eax],al
10006098:	push   edx
10006099:	add    BYTE PTR fs:[eax],al
1000609c:	mov    esp,0x18000010
100060a1:	popa   
	...
100060aa:	add    BYTE PTR [eax],al
100060ac:	jb     0x10006113
100060ae:	add    BYTE PTR [eax],al
100060b0:	add    BYTE PTR [eax],dl
100060b2:	add    BYTE PTR [eax],al
100060b4:	xor    al,0x61
	...
100060be:	add    BYTE PTR [eax],al
100060c0:	mov    ch,BYTE PTR [eax+0x0]
100060c3:	add    BYTE PTR [eax+edx*1],bl
100060c6:	add    BYTE PTR [eax],al
100060c8:	test   BYTE PTR [edx+0x0],ah
	...
100060d3:	add    BYTE PTR [esi+0x6c000068],ah
100060d9:	adc    DWORD PTR [eax],eax
100060db:	add    BYTE PTR [edx+eiz*2+0x0],cl
100060e2:	add    BYTE PTR [eax],al
100060e4:	add    BYTE PTR [eax],al
100060e6:	add    BYTE PTR [eax],al
100060e8:	hlt    
100060e9:	push   0x11740000
100060ee:	add    BYTE PTR [eax],al
100060f0:	jl     0x10006154
	...
100060fa:	add    BYTE PTR [eax],al
100060fc:	sbb    BYTE PTR [ecx+0x0],ch
100060ff:	add    BYTE PTR [ecx+edx*1+0x0],ah
	...
10006117:	add    BYTE PTR [edx+0x65],bl
1000611a:	add    BYTE PTR [eax],al
1000611c:	dec    edx
1000611d:	add    BYTE PTR gs:[eax],al
10006120:	xor    ah,BYTE PTR [ebp+0x0]
10006123:	add    BYTE PTR [edx],ah
10006125:	add    BYTE PTR gs:[eax],al
10006128:	push   cs
10006129:	add    BYTE PTR gs:[eax],al
1000612c:	add    BYTE PTR [ebp+0x0],ah
1000612f:	add    BYTE PTR [eax],al
10006131:	add    BYTE PTR [eax],al
10006133:	add    BYTE PTR [edi+eiz*2],ah
10006136:	add    BYTE PTR [eax],al
10006138:	adc    BYTE PTR [edi+0x0],ah
1000613b:	add    BYTE PTR [eax],al
1000613d:	add    BYTE PTR [bx+si],al
10006140:	out    0x66,al
10006142:	add    BYTE PTR [eax],al
10006144:	shl    BYTE PTR [esi+0x0],cl
10006147:	add    dh,al
10006149:	data16 add BYTE PTR [eax],al
1000614c:	mov    edx,0xa8000066
10006151:	data16 add BYTE PTR [eax],al
10006154:	xchg   edx,eax
10006155:	data16 add BYTE PTR [eax],al
10006158:	and    BYTE PTR [esi+0x0],0x0
1000615c:	jo     0x100061c4
1000615e:	add    BYTE PTR [eax],al
10006160:	pusha  
10006161:	data16 add BYTE PTR [eax],al
10006164:	inc    esi
10006165:	data16 add BYTE PTR [eax],al
10006168:	data16 add BYTE PTR ss:[eax],al
1000616c:	sbb    ah,BYTE PTR [esi+0x0]
1000616f:	add    BYTE PTR [esi+eiz*2],al
10006172:	add    BYTE PTR [eax],al
10006174:	sub    al,0x67
10006176:	add    BYTE PTR [eax],al
10006178:	add    BYTE PTR ds:[bx+si],al
1000617c:	pop    edx
1000617d:	add    BYTE PTR [bx+si],al
10006180:	push   0x67
10006182:	add    BYTE PTR [eax],al
10006184:	test   BYTE PTR [edi+0x0],ah
10006187:	add    BYTE PTR [eax-0x57ffff99],bl
1000618d:	add    BYTE PTR [bx+si],al
10006190:	mov    esi,0xdc000067
10006195:	add    BYTE PTR [bx+si],al
10006198:	cli    
10006199:	add    BYTE PTR [bx+si],al
1000619c:	adc    al,0x68
1000619e:	add    BYTE PTR [eax],al
100061a0:	sub    ch,BYTE PTR [eax+0x0]
100061a3:	add    BYTE PTR [eax+0x68],al
100061a6:	add    BYTE PTR [eax],al
100061a8:	pushf  
100061a9:	add    BYTE PTR gs:[eax],al
100061ac:	pop    edx
100061ad:	push   0x68760000
100061b2:	add    BYTE PTR [eax],al
100061b4:	and    BYTE PTR [ebp+0x0],0x0
100061b8:	mov    WORD PTR [ebp+0x0],fs
100061bb:	add    dl,dh
100061bd:	add    BYTE PTR gs:[eax],al
100061c0:	mov    al,0x65
100061c2:	add    BYTE PTR [eax],al
100061c4:	shl    BYTE PTR [ebp+0x0],0x0
100061c8:	into   
100061c9:	add    BYTE PTR gs:[eax],al
100061cc:	in     al,0x65
100061ce:	add    BYTE PTR [eax],al
100061d0:	add    BYTE PTR [eax],al
100061d2:	add    BYTE PTR [eax],al
100061d4:	jmp    0x64:0xda000064
100061db:	add    al,cl
100061dd:	add    BYTE PTR fs:[eax],al
100061e0:	mov    dh,0x64
100061e2:	add    BYTE PTR [eax],al
100061e4:	lods   al,BYTE PTR ds:[esi]
100061e5:	add    BYTE PTR fs:[eax],al
100061e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100061e9:	add    BYTE PTR fs:[eax],al
100061ec:	xchg   esi,eax
100061ed:	add    BYTE PTR fs:[eax],al
100061f0:	mov    WORD PTR [eax+eax*1+0x0],fs
100061f4:	jb     0x1000625a
100061f6:	add    BYTE PTR [eax],al
100061f8:	pop    esi
100061f9:	add    BYTE PTR fs:[eax],al
100061fc:	inc    eax
100061fd:	add    BYTE PTR fs:[eax],al
10006200:	cs add BYTE PTR fs:[eax],al
10006204:	and    BYTE PTR [eax+eax*1+0x0],ah
10006208:	adc    BYTE PTR [eax+eax*1+0x0],ah
1000620c:	add    BYTE PTR [eax+eax*1+0x0],ah
10006210:	in     al,dx
10006211:	arpl   WORD PTR [eax],ax
10006213:	add    dh,dl
10006215:	arpl   WORD PTR [eax],ax
10006217:	add    al,cl
10006219:	arpl   WORD PTR [eax],ax
1000621b:	add    BYTE PTR [ebx+eiz*2+0x63ae0000],bh
10006222:	add    BYTE PTR [eax],al
10006224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10006225:	arpl   WORD PTR [eax],ax
10006227:	add    BYTE PTR [eax-0x6fffff9d],bl
1000622d:	arpl   WORD PTR [eax],ax
1000622f:	add    BYTE PTR [esi+0x74000063],al
10006235:	arpl   WORD PTR [eax],ax
10006237:	add    BYTE PTR [esi+0x63],ah
1000623a:	add    BYTE PTR [eax],al
1000623c:	pop    edx
1000623d:	arpl   WORD PTR [eax],ax
1000623f:	add    BYTE PTR [eax+0x63],dl
10006242:	add    BYTE PTR [eax],al
10006244:	inc    edx
10006245:	arpl   WORD PTR [eax],ax
10006247:	add    BYTE PTR [edx],dh
10006249:	arpl   WORD PTR [eax],ax
1000624b:	add    BYTE PTR [esi],ah
1000624d:	arpl   WORD PTR [eax],ax
1000624f:	add    BYTE PTR [esi],dl
10006251:	arpl   WORD PTR [eax],ax
10006253:	add    BYTE PTR [esi],al
10006255:	arpl   WORD PTR [eax],ax
10006257:	add    ah,bh
10006259:	bound  eax,QWORD PTR [eax]
1000625b:	add    ah,ch
1000625d:	bound  eax,QWORD PTR [eax]
1000625f:	add    ah,bl
10006261:	bound  eax,QWORD PTR [eax]
10006263:	add    dl,dl
10006265:	bound  eax,QWORD PTR [eax]
10006267:	add    al,cl
10006269:	bound  eax,QWORD PTR [eax]
1000626b:	add    BYTE PTR [esi-0x4dffff9e],bh
10006271:	bound  eax,QWORD PTR [eax]
10006273:	add    BYTE PTR [edx+eiz*2+0x0],bl
1000627a:	add    BYTE PTR [eax],al
1000627c:	add    BYTE PTR [ecx+0x0],ch
1000627f:	add    BYTE PTR [eax],al
10006281:	add    BYTE PTR [eax],al
10006283:	add    BYTE PTR [eax+0x68],bl
10006289:	add    BYTE PTR [eax],al
1000628b:	add    ah,al
1000628d:	push   0x68b20000
10006292:	add    BYTE PTR [eax],al
10006294:	fisubr DWORD PTR [eax+0x0]
10006297:	add    BYTE PTR [eax],al
10006299:	add    BYTE PTR [eax],al
1000629b:	add    BYTE PTR [esi+0x0],dh
1000629e:	pop    edi
1000629f:	pop    edi
100062a0:	inc    ebx
100062a1:	js     0x1000631b
100062a3:	inc    esi
100062a4:	jb     0x10006307
100062a6:	ins    DWORD PTR es:[edi],dx
100062a7:	gs dec eax
100062a9:	popa   
100062aa:	outs   dx,BYTE PTR ds:[esi]
100062ab:	fs ins BYTE PTR es:[edi],dx
100062ad:	gs jb  0x100062e3
100062b0:	add    BYTE PTR [eax],al
100062b2:	ds add al,0x5f
100062b5:	ja     0x1000631a
100062b7:	jae    0x10006322
100062b9:	arpl   WORD PTR [ebp+0x70],bp
100062bc:	add    BYTE PTR [eax],al
100062be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100062bf:	add    eax,0x72736377
100062c4:	arpl   WORD PTR [eax+0x72],bp
100062c7:	add    BYTE PTR [edi+0x73637705],dl
100062cd:	arpl   WORD PTR [eax+0x72],bp
100062d0:	add    BYTE PTR [eax],al
100062d2:	cmp    al,BYTE PTR ds:0x736d656d
100062d8:	gs je  0x100062db
100062db:	add    BYTE PTR [ecx],dl
100062dd:	add    BYTE PTR [edi],bh
100062df:	aas    
100062e0:	xor    eax,DWORD PTR [eax+0x59]
100062e3:	inc    ecx
100062e4:	pop    eax
100062e5:	push   eax
100062e6:	inc    ecx
100062e7:	pop    eax
100062e8:	inc    eax
100062e9:	pop    edx
100062ea:	add    BYTE PTR [eax],al
100062ec:	(bad)  
100062ee:	aas    
100062ef:	aas    
100062f0:	xor    al,BYTE PTR [eax+0x59]
100062f3:	inc    ecx
100062f4:	push   eax
100062f5:	inc    ecx
100062f6:	pop    eax
100062f7:	dec    ecx
100062f8:	inc    eax
100062f9:	pop    edx
100062fa:	add    BYTE PTR [eax],al
100062fc:	mov    edx,0x74775f04
10006301:	outs   dx,DWORD PTR ds:[esi]
10006302:	imul   esi,DWORD PTR [esi],0x210034
10006308:	aas    
10006309:	aas    
1000630a:	pop    edi
1000630b:	push   esi
1000630c:	inc    eax
1000630d:	pop    ecx
1000630e:	inc    ecx
1000630f:	pop    eax
10006310:	push   eax
10006311:	inc    ecx
10006312:	pop    eax
10006313:	inc    eax
10006314:	pop    edx
10006315:	add    BYTE PTR [edi],bl
10006317:	add    BYTE PTR [edi],bh
10006319:	aas    
1000631a:	pop    edi
1000631b:	push   ebp
1000631c:	inc    eax
1000631d:	pop    ecx
1000631e:	inc    ecx
1000631f:	push   eax
10006320:	inc    ecx
10006321:	pop    eax
10006322:	dec    ecx
10006323:	inc    eax
10006324:	pop    edx
10006325:	add    BYTE PTR [eax+0x4],cl
10006328:	pop    edi
10006329:	ja     0x1000638e
1000632b:	jae    0x1000639b
1000632d:	imul   esp,DWORD PTR [ebx+0x6d],0x41f0070
10006334:	pop    edi
10006335:	jbe    0x100063aa
10006337:	outs   dx,BYTE PTR ds:[esi]
10006338:	ja     0x100063aa
1000633a:	jb     0x100063a5
1000633c:	outs   dx,BYTE PTR ds:[esi]
1000633d:	je     0x100063a5
1000633f:	pop    edi
10006340:	jae    0x10006342
10006342:	adc    eax,DWORD PTR [edi+ebx*2]
10006345:	jbe    0x100063ba
10006347:	arpl   WORD PTR [edi+0x70],si
1000634a:	jb     0x100063b5
1000634c:	outs   dx,BYTE PTR ds:[esi]
1000634d:	je     0x100063b5
1000634f:	add    BYTE PTR [eax],bh
10006351:	add    eax,0x6d6d656d
10006356:	outs   dx,DWORD PTR ds:[esi]
10006357:	jbe    0x100063be
10006359:	add    BYTE PTR [eax],ah
1000635b:	add    eax,0x73777369
10006360:	jo     0x100063c3
10006362:	arpl   WORD PTR [ebp+0x0],sp
10006365:	add    BYTE PTR ds:0x6d615f01,bl
1000636b:	jae    0x100063d4
1000636d:	pop    edi
1000636e:	gs js  0x100063da
10006371:	je     0x10006373
10006373:	add    bh,bh
10006375:	add    BYTE PTR [edi+0x5f],bl
10006378:	ja     0x100063e1
1000637a:	gs je  0x100063ea
1000637d:	popa   
1000637e:	imul   ebp,DWORD PTR [esi+0x61],0x736772
10006385:	add    BYTE PTR [ecx+eax*1],dh
10006388:	pop    edi
10006389:	arpl   WORD PTR [ebp+0x78],sp
1000638c:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x655f0184
10006394:	js     0x100063ff
10006396:	je     0x10006398
10006398:	imul   eax,DWORD PTR [eax],0x7063585f
1000639e:	je     0x100063e6
100063a0:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4dc0072
100063a8:	gs js  0x10006414
100063ab:	je     0x100063ad
100063ad:	add    BYTE PTR [eax],al
100063af:	add    DWORD PTR [edi+0x5f],ebx
100063b2:	ja     0x1000641d
100063b4:	outs   dx,BYTE PTR ds:[esi]
100063b5:	imul   esi,DWORD PTR [ebp+eiz*2+0x6e],0x10000076
100063bd:	add    bl,BYTE PTR [edi+0x69]
100063c0:	outs   dx,BYTE PTR ds:[esi]
100063c1:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x11006d72
100063c9:	add    bl,BYTE PTR [edi+0x69]
100063cc:	outs   dx,BYTE PTR ds:[esi]
100063cd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x655f6d72
100063d5:	add    BYTE PTR [ecx+eax*1+0x5f],al
100063d9:	arpl   WORD PTR [edi+0x6e],bp
100063dc:	imul   sp,WORD PTR [edi+0x74],0x7268
100063e2:	gs popa 
100063e4:	fs ins BYTE PTR es:[edi],dx
100063e6:	outs   dx,DWORD PTR ds:[esi]
100063e7:	arpl   WORD PTR [ecx+0x6c],sp
100063ea:	gs add bl,ch
100063ed:	add    BYTE PTR [edi+0x5f],bl
100063f0:	jae    0x10006457
100063f2:	je     0x10006469
100063f4:	jae    0x1000645b
100063f6:	jb     0x10006465
100063f8:	popa   
100063f9:	je     0x10006463
100063fb:	gs jb  0x10006470
100063fe:	add    BYTE PTR [eax],al
10006400:	adc    eax,DWORD PTR [ecx]
10006402:	pop    edi
10006403:	popa   
10006404:	fs push 0x75
10006407:	jae    0x1000647d
10006409:	pop    edi
1000640a:	imul   si,WORD PTR fs:[esi+0x0],0xce00
10006411:	add    BYTE PTR [edi+0x5f],bl
10006414:	jo     0x10006475
10006416:	pop    edi
10006417:	arpl   WORD PTR [edi+0x6d],bp
1000641a:	ins    DWORD PTR es:[edi],dx
1000641b:	outs   dx,DWORD PTR ds:[esi]
1000641c:	fs add BYTE PTR gs:[eax],al
10006420:	rol    BYTE PTR [eax],cl
10006422:	pop    edi
10006423:	pop    edi
10006424:	jo     0x10006485
10006426:	pop    edi
10006427:	ins    WORD PTR es:[edi],dx
10006429:	outs   dx,DWORD PTR ds:[esi]
1000642a:	fs add BYTE PTR gs:[eax],al
1000642e:	jb     0x10006431
10006430:	pop    edi
10006431:	outs   dx,BYTE PTR gs:[esi]
10006433:	arpl   WORD PTR [edi+0x64],bp
10006436:	gs pop edi
10006438:	jo     0x100064a9
1000643a:	imul   ebp,DWORD PTR [esi+0x74],0xe8007265
10006441:	add    BYTE PTR [edi+0x5f],bl
10006444:	jae    0x100064ab
10006446:	je     0x100064a7
10006448:	popa   
10006449:	jo     0x100064bb
1000644b:	pop    edi
1000644c:	je     0x100064c7
1000644e:	jo     0x100064b5
10006450:	add    BYTE PTR [eax],al
10006452:	dec    ebp
10006453:	push   ebx
10006454:	push   esi
10006455:	inc    ebx
10006456:	push   edx
10006457:	cmp    BYTE PTR [eax],dh
10006459:	cs fs ins BYTE PTR es:[edi],dx
1000645c:	ins    BYTE PTR es:[edi],dx
1000645d:	add    BYTE PTR [ebx+0x0],al
10006460:	aas    
10006461:	je     0x100064c8
10006463:	jb     0x100064d2
10006465:	imul   ebp,DWORD PTR [esi+0x61],0x40406574
1000646c:	pop    ecx
1000646d:	inc    ecx
1000646e:	pop    eax
1000646f:	pop    eax
10006470:	pop    edx
10006471:	add    BYTE PTR [ebx+0x1],bh
10006474:	pop    edi
10006475:	gs js  0x100064db
10006478:	gs jo  0x100064ef
1000647b:	pop    edi
1000647c:	push   0x6c646e61
10006481:	gs jb  0x100064b8
10006484:	pop    edi
10006485:	arpl   WORD PTR [edi+0x6d],bp
10006488:	ins    DWORD PTR es:[edi],dx
10006489:	outs   dx,DWORD PTR ds:[esi]
1000648a:	outs   dx,BYTE PTR ds:[esi]
1000648b:	add    bl,dh
1000648d:	add    ebx,DWORD PTR [edi+0x75]
10006490:	outs   dx,BYTE PTR ds:[esi]
10006491:	ins    BYTE PTR es:[edi],dx
10006492:	outs   dx,DWORD PTR ds:[esi]
10006493:	arpl   WORD PTR [ebx+0x0],bp
10006496:	cdq    
10006497:	add    BYTE PTR [edi+0x5f],bl
1000649a:	fs ins BYTE PTR es:[edi],dx
1000649c:	ins    BYTE PTR es:[edi],dx
1000649d:	outs   dx,DWORD PTR ds:[esi]
1000649e:	outs   dx,BYTE PTR ds:[esi]
1000649f:	gs js  0x1000650b
100064a2:	je     0x100064a4
100064a4:	add    BYTE PTR [edx],0x5f
100064a7:	ins    BYTE PTR es:[edi],dx
100064a8:	outs   dx,DWORD PTR ds:[esi]
100064a9:	arpl   WORD PTR [ebx+0x0],bp
100064ac:	sub    BYTE PTR [ebx],al
100064ae:	pop    edi
100064af:	outs   dx,DWORD PTR ds:[esi]
100064b0:	outs   dx,BYTE PTR ds:[esi]
100064b1:	gs js  0x1000651d
100064b4:	je     0x100064b6
100064b6:	push   0x65645f01
100064bb:	arpl   WORD PTR [edi+0x64],bp
100064be:	gs pop edi
100064c0:	jo     0x10006531
100064c2:	imul   ebp,DWORD PTR [esi+0x74],0x17007265
100064c9:	add    bl,BYTE PTR [edi+0x69]
100064cc:	outs   dx,BYTE PTR ds:[esi]
100064cd:	jbe    0x1000653e
100064cf:	imul   esp,DWORD PTR [ebp+0x5f],0x77
100064d3:	popa   
100064d4:	je     0x10006549
100064d6:	outs   dx,DWORD PTR ds:[esi]
100064d7:	outs   dx,BYTE PTR ds:[esi]
100064d8:	add    BYTE PTR [eax],al
100064da:	inc    edi
100064db:	add    DWORD PTR [edi+0x63],ebx
100064de:	outs   dx,DWORD PTR ds:[esi]
100064df:	outs   dx,BYTE PTR ds:[esi]
100064e0:	je     0x10006554
100064e2:	outs   dx,DWORD PTR ds:[esi]
100064e3:	ins    BYTE PTR es:[edi],dx
100064e4:	data16 jo 0x10006546
100064e7:	jae    0x100064e9
100064e9:	add    BYTE PTR [ebx+0x1],dl
100064ec:	pop    edi
100064ed:	arpl   WORD PTR [edx+0x74],si
100064f0:	pop    edi
100064f1:	fs bound esi,QWORD PTR gs:[ebp+0x67]
100064f6:	addr16 gs jb 0x10006559
100064fa:	push   0x6b6f6f
100064ff:	add    bl,cl
10006501:	add    DWORD PTR [edx+0x65],edx
10006504:	addr16 inc ebx
10006506:	ins    BYTE PTR es:[edi],dx
10006507:	outs   dx,DWORD PTR ds:[esi]
10006508:	jae    0x1000656f
1000650a:	dec    ebx
1000650b:	gs jns 0x1000650e
1000650e:	clc    
1000650f:	add    DWORD PTR [edx+0x65],edx
10006512:	addr16 push ecx
10006514:	jne    0x1000657b
10006516:	jb     0x10006591
10006518:	push   esi
10006519:	popa   
1000651a:	ins    BYTE PTR es:[edi],dx
1000651b:	jne    0x10006582
1000651d:	inc    ebp
1000651e:	js     0x10006577
10006520:	add    BYTE PTR [eax],al
10006522:	in     eax,dx
10006523:	add    DWORD PTR [edx+0x65],edx
10006526:	addr16 dec edi
10006528:	jo     0x1000658f
1000652a:	outs   dx,BYTE PTR ds:[esi]
1000652b:	dec    ebx
1000652c:	gs jns 0x10006574
1000652f:	js     0x10006588
10006531:	add    BYTE PTR [eax+0x72654400],dh
10006537:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x76457265
10006540:	outs   dx,BYTE PTR gs:[esi]
10006542:	je     0x10006597
10006544:	outs   dx,DWORD PTR ds:[esi]
10006545:	jne    0x100065b9
10006547:	arpl   WORD PTR [ebp+0x0],sp
1000654a:	adc    eax,0x70655202
1000654f:	outs   dx,DWORD PTR ds:[esi]
10006550:	jb     0x100065c6
10006552:	inc    ebp
10006553:	jbe    0x100065ba
10006555:	outs   dx,BYTE PTR ds:[esi]
10006556:	je     0x100065af
10006558:	add    BYTE PTR [eax],al
1000655a:	or     al,BYTE PTR [edx]
1000655c:	push   edx
1000655d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x76457265
10006566:	outs   dx,BYTE PTR gs:[esi]
10006568:	je     0x100065bd
1000656a:	outs   dx,DWORD PTR ds:[esi]
1000656b:	jne    0x100065df
1000656d:	arpl   WORD PTR [ebp+0x57],sp
10006570:	add    BYTE PTR [eax],al
10006572:	inc    ecx
10006573:	inc    esp
10006574:	push   esi
10006575:	inc    ecx
10006576:	push   eax
10006577:	dec    ecx
10006578:	xor    esi,DWORD PTR [edx]
1000657a:	cs fs ins BYTE PTR es:[edi],dx
1000657d:	ins    BYTE PTR es:[edi],dx
1000657e:	add    BYTE PTR [eax],al
10006580:	push   ss
10006581:	add    edx,DWORD PTR [ebx+0x65]
10006584:	je     0x100065cb
10006586:	jbe    0x100065ed
10006588:	outs   dx,BYTE PTR ds:[esi]
10006589:	je     0x1000658b
1000658b:	add    BYTE PTR [ecx+0x1],dh
1000658e:	inc    edi
1000658f:	gs je  0x100065de
10006592:	popa   
10006593:	jae    0x10006609
10006595:	inc    ebp
10006596:	jb     0x1000660a
10006598:	outs   dx,DWORD PTR ds:[esi]
10006599:	jb     0x1000659b
1000659b:	add    BYTE PTR [esi+0x3],bl
1000659e:	push   esp
1000659f:	gs jb  0x1000660f
100065a2:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
100065a9:	outs   dx,DWORD PTR ds:[esi]
100065aa:	arpl   WORD PTR [ebp+0x73],sp
100065ad:	jae    0x100065af
100065af:	add    dl,al
100065b1:	add    dl,BYTE PTR [edx+0x65]
100065b4:	ins    BYTE PTR es:[edi],dx
100065b5:	gs popa 
100065b7:	jae    0x1000661e
100065b9:	dec    ebp
100065ba:	jne    0x10006630
100065bc:	gs js  0x100065bf
100065bf:	add    BYTE PTR [eax+eax*1],dh
100065c2:	inc    ebx
100065c3:	ins    BYTE PTR es:[edi],dx
100065c4:	outs   dx,DWORD PTR ds:[esi]
100065c5:	jae    0x1000662c
100065c7:	dec    eax
100065c8:	popa   
100065c9:	outs   dx,BYTE PTR ds:[esi]
100065ca:	fs ins BYTE PTR es:[edi],dx
100065cc:	add    BYTE PTR gs:[eax+0x69615703],dl
100065d3:	je     0x1000661b
100065d5:	outs   dx,DWORD PTR ds:[esi]
100065d6:	jb     0x1000662b
100065d8:	imul   ebp,DWORD PTR [esi+0x67],0x624f656c
100065df:	push   0x65
100065e1:	arpl   WORD PTR [eax+eax*1-0x76],si
100065e5:	add    cl,BYTE PTR [edi+0x70]
100065e8:	outs   dx,BYTE PTR gs:[esi]
100065ea:	push   esp
100065eb:	push   0x64616572
100065f0:	add    BYTE PTR [eax],al
100065f2:	jno    0x100065f7
100065f4:	push   ebp
100065f5:	outs   dx,BYTE PTR ds:[esi]
100065f6:	ins    DWORD PTR es:[edi],dx
100065f7:	popa   
100065f8:	jo     0x10006650
100065fa:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
10006601:	ins    BYTE PTR es:[edi],dx
10006602:	add    BYTE PTR gs:[ebp+0x2],dh
10006606:	dec    ebp
10006607:	jne    0x10006675
10006609:	je     0x10006674
1000660b:	inc    edx
1000660c:	jns    0x10006682
1000660e:	gs push esp
10006610:	outs   dx,DWORD PTR ds:[esi]
10006611:	push   edi
10006612:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x726168
1000661a:	in     eax,0x1
1000661c:	inc    edi
1000661d:	gs je  0x10006675
10006620:	jae    0x10006687
10006622:	jb     0x10006668
10006624:	gs popaw 
10006627:	jne    0x10006695
10006629:	je     0x10006680
1000662b:	dec    ecx
1000662c:	dec    esp
1000662d:	popa   
1000662e:	outs   dx,BYTE PTR ds:[esi]
1000662f:	addr16 jne 0x10006693
10006632:	add    BYTE PTR gs:[bx+si],al
10006636:	push   0x70614d02
1000663b:	push   esi
1000663c:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
10006643:	ins    BYTE PTR es:[edi],dx
10006644:	add    BYTE PTR gs:[esi+0x3],al
10006648:	push   ebx
10006649:	gs je  0x100066a0
1000664c:	push   0x64616572
10006651:	push   ebx
10006652:	je     0x100066b5
10006654:	arpl   WORD PTR [ebx+0x47],bp
10006657:	jne    0x100066ba
10006659:	jb     0x100066bc
1000665b:	outs   dx,BYTE PTR ds:[esi]
1000665c:	je     0x100066c3
1000665e:	add    BYTE PTR gs:[edi+0x0],ch
10006662:	inc    ebx
10006663:	jb     0x100066ca
10006665:	popa   
10006666:	je     0x100066cd
10006668:	push   esp
10006669:	push   0x64616572
1000666e:	add    BYTE PTR [eax],al
10006670:	mov    al,ds:0x74654701
10006675:	push   eax
10006676:	jb     0x100066e7
10006678:	arpl   WORD PTR [ecx+0x64],ax
1000667b:	fs jb  0x100066e3
1000667e:	jae    0x100066f3
10006680:	add    BYTE PTR [eax],al
10006682:	push   ebp
10006683:	add    cl,BYTE PTR [edi+ebp*2+0x61]
10006687:	fs dec esp
10006689:	imul   esp,DWORD PTR [edx+0x72],0x57797261
10006690:	add    BYTE PTR [eax],al
10006692:	ret    0x4701
10006695:	gs je  0x100066eb
10006698:	jns    0x1000670d
1000669a:	je     0x10006701
1000669c:	ins    DWORD PTR es:[edi],dx
1000669d:	inc    esp
1000669e:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
100066a5:	jns    0x100066fe
100066a7:	add    BYTE PTR [ecx],dl
100066a9:	add    DWORD PTR [edi+0x65],eax
100066ac:	je     0x100066f1
100066ae:	outs   dx,DWORD PTR ds:[esi]
100066af:	ins    DWORD PTR es:[edi],dx
100066b0:	ins    DWORD PTR es:[edi],dx
100066b1:	popa   
100066b2:	outs   dx,BYTE PTR ds:[esi]
100066b3:	fs dec esp
100066b5:	imul   ebp,DWORD PTR [esi+0x65],0x3cd0057
100066bc:	ins    BYTE PTR es:[edi],dx
100066bd:	jae    0x10006733
100066bf:	jb     0x1000672d
100066c1:	outs   dx,BYTE PTR gs:[esi]
100066c3:	push   edi
100066c4:	add    BYTE PTR [eax],al
100066c6:	int3   
100066c7:	add    ebp,DWORD PTR [ebx+esi*2+0x74]
100066cb:	jb     0x10006739
100066cd:	outs   dx,BYTE PTR gs:[esi]
100066cf:	inc    ecx
100066d0:	add    BYTE PTR [eax],al
100066d2:	add    BYTE PTR [ecx],0x47
100066d5:	gs je  0x10006725
100066d8:	outs   dx,DWORD PTR ds:[esi]
100066d9:	fs jne 0x10006748
100066dc:	gs dec eax
100066de:	popa   
100066df:	outs   dx,BYTE PTR ds:[esi]
100066e0:	fs ins BYTE PTR es:[edi],dx
100066e2:	gs push edi
100066e4:	add    BYTE PTR [eax],al
100066e6:	mov    es,WORD PTR [ebx]
100066e8:	push   edi
100066e9:	popa   
100066ea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
100066f2:	je     0x1000675d
100066f4:	jo     0x10006762
100066f6:	gs dec edi
100066f8:	bound  ebp,QWORD PTR [edx+0x65]
100066fb:	arpl   WORD PTR [ebx+esi*2+0x0],si
100066ff:	add    bh,bl
10006701:	add    DWORD PTR [edi+0x65],eax
10006704:	je     0x1000675a
10006706:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
1000670d:	je     0x1000670f
1000670f:	add    BYTE PTR [eax+0x61655202],bh
10006715:	fs push eax
10006717:	jb     0x10006788
10006719:	arpl   WORD PTR [ebp+0x73],sp
1000671c:	jae    0x1000676b
1000671e:	gs ins DWORD PTR es:[edi],dx
10006720:	outs   dx,DWORD PTR ds:[esi]
10006721:	jb     0x1000679c
10006723:	add    BYTE PTR [esi+0x3],dl
10006726:	push   ebx
10006727:	ins    BYTE PTR es:[edi],dx
10006728:	gs gs jo 0x1000672c
1000672c:	imul   eax,DWORD PTR [edx],0x4d
1000672f:	outs   dx,DWORD PTR ds:[esi]
10006730:	fs jne 0x1000679f
10006733:	xor    esi,DWORD PTR gs:[edx]
10006736:	inc    esi
10006737:	imul   esi,DWORD PTR [edx+0x73],0x5774
1000673e:	jb     0x10006740
10006740:	inc    ebx
10006741:	jb     0x100067a8
10006743:	popa   
10006744:	je     0x100067ab
10006746:	push   esp
10006747:	outs   dx,DWORD PTR ds:[esi]
10006748:	outs   dx,DWORD PTR ds:[esi]
10006749:	ins    BYTE PTR es:[edi],dx
1000674a:	push   0x33706c65
1000674f:	xor    dl,BYTE PTR [ebx+0x6e]
10006752:	popa   
10006753:	jo     0x100067c8
10006755:	push   0x746f
1000675a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000675b:	add    DWORD PTR [edi+0x65],eax
1000675e:	je     0x100067b0
10006760:	jb     0x100067d1
10006762:	arpl   WORD PTR [ebp+0x73],sp
10006765:	jae    0x100067b0
10006767:	add    BYTE PTR fs:[eax],al
1000676a:	adc    al,0x3
1000676c:	push   ebx
1000676d:	gs je  0x100067b5
10006770:	outs   dx,BYTE PTR ds:[esi]
10006771:	jbe    0x100067dc
10006773:	jb     0x100067e4
10006775:	outs   dx,BYTE PTR ds:[esi]
10006776:	ins    DWORD PTR es:[edi],dx
10006777:	outs   dx,BYTE PTR gs:[esi]
10006779:	je     0x100067d1
1000677b:	popa   
1000677c:	jb     0x100067e7
1000677e:	popa   
1000677f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
10006783:	add    BYTE PTR [edx+0x1],al
10006786:	inc    edi
10006787:	gs je  0x100067cd
1000678a:	jne    0x100067fe
1000678c:	jb     0x100067f3
1000678e:	outs   dx,BYTE PTR ds:[esi]
1000678f:	je     0x100067e1
10006791:	jb     0x10006802
10006793:	arpl   WORD PTR [ebp+0x73],sp
10006796:	jae    0x10006798
10006798:	ins    DWORD PTR es:[edi],dx
10006799:	add    cl,BYTE PTR [ebp+0x6f]
1000679c:	fs jne 0x1000680b
1000679f:	xor    esi,DWORD PTR gs:[edx]
100067a2:	dec    esi
100067a3:	gs js  0x1000681a
100067a6:	push   edi
100067a7:	add    BYTE PTR [ecx],ch
100067a9:	add    cl,BYTE PTR [ecx+0x6e]
100067ac:	je     0x10006813
100067ae:	jb     0x1000681c
100067b0:	outs   dx,DWORD PTR ds:[esi]
100067b1:	arpl   WORD PTR [ebx+0x65],bp
100067b4:	fs inc ebp
100067b6:	js     0x1000681b
100067b8:	push   0x65676e61
100067bd:	add    BYTE PTR [esi],ah
100067bf:	add    cl,BYTE PTR [ecx+0x6e]
100067c2:	je     0x10006829
100067c4:	jb     0x10006832
100067c6:	outs   dx,DWORD PTR ds:[esi]
100067c7:	arpl   WORD PTR [ebx+0x65],bp
100067ca:	fs inc ebx
100067cc:	outs   dx,DWORD PTR ds:[esi]
100067cd:	ins    DWORD PTR es:[edi],dx
100067ce:	jo     0x10006831
100067d0:	jb     0x10006837
100067d2:	inc    ebp
100067d3:	js     0x10006838
100067d5:	push   0x65676e61
100067da:	add    BYTE PTR [eax],al
100067dc:	dec    edx
100067dd:	add    edx,DWORD PTR [ebx+0x65]
100067e0:	je     0x10006837
100067e2:	outs   dx,BYTE PTR ds:[esi]
100067e3:	push   0x6c646e61
100067e8:	gs fs inc ebp
100067eb:	js     0x10006850
100067ed:	gs jo  0x10006864
100067f0:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
100067f7:	gs jb  0x100067fa
100067fa:	mov    ds:0x65755102,eax
100067ff:	jb     0x1000687a
10006801:	push   eax
10006802:	gs jb  0x1000686b
10006805:	outs   dx,DWORD PTR ds:[esi]
10006806:	jb     0x10006875
10006808:	popa   
10006809:	outs   dx,BYTE PTR ds:[esi]
1000680a:	arpl   WORD PTR [ebp+0x43],sp
1000680d:	outs   dx,DWORD PTR ds:[esi]
1000680e:	jne    0x1000687e
10006810:	je     0x10006877
10006812:	jb     0x10006814
10006814:	inc    esi
10006815:	add    DWORD PTR [edi+0x65],eax
10006818:	je     0x1000685d
1000681a:	jne    0x1000688e
1000681c:	jb     0x10006883
1000681e:	outs   dx,BYTE PTR ds:[esi]
1000681f:	je     0x10006875
10006821:	push   0x64616572
10006826:	dec    ecx
10006827:	add    BYTE PTR fs:[eax],al
1000682a:	inc    ebx
1000682b:	add    DWORD PTR [edi+0x65],eax
1000682e:	je     0x10006873
10006830:	jne    0x100068a4
10006832:	jb     0x10006899
10006834:	outs   dx,BYTE PTR ds:[esi]
10006835:	je     0x10006887
10006837:	jb     0x100068a8
10006839:	arpl   WORD PTR [ebp+0x73],sp
1000683c:	jae    0x10006887
1000683e:	fs add dl,cl
10006841:	add    DWORD PTR [edi+0x65],eax
10006844:	je     0x10006899
10006846:	jns    0x100068bb
10006848:	je     0x100068af
1000684a:	ins    DWORD PTR es:[edi],dx
1000684b:	push   esp
1000684c:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
10006853:	ins    BYTE PTR es:[edi],dx
10006854:	gs push esp
10006856:	imul   ebp,DWORD PTR [ebp+0x65],0x55036e00
1000685d:	outs   dx,BYTE PTR ds:[esi]
1000685e:	push   0x6c646e61
10006863:	gs fs inc ebp
10006866:	js     0x100068cb
10006868:	gs jo  0x100068df
1000686b:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
10006872:	gs jb  0x10006875
10006875:	add    BYTE PTR [ecx],bh
10006877:	add    cl,BYTE PTR [ecx+0x73]
1000687a:	inc    esp
1000687b:	bound  esi,QWORD PTR gs:[ebp+0x67]
1000687f:	addr16 gs jb 0x100068d3
10006883:	jb     0x100068ea
10006885:	jae    0x100068ec
10006887:	outs   dx,BYTE PTR ds:[esi]
10006888:	je     0x1000688a
1000688a:	dec    ebx
1000688b:	inc    ebp
1000688c:	push   edx
1000688d:	dec    esi
1000688e:	inc    ebp
1000688f:	dec    esp
10006890:	xor    esi,DWORD PTR [edx]
10006892:	cs fs ins BYTE PTR es:[edi],dx
10006895:	ins    BYTE PTR es:[edi],dx
10006896:	add    BYTE PTR [eax],al
10006898:	int3   
10006899:	add    DWORD PTR [edi+ebp*2+0x61],ecx
1000689d:	fs push ebx
1000689f:	je     0x10006913
100068a1:	imul   ebp,DWORD PTR [esi+0x67],0x53550057
100068a8:	inc    ebp
100068a9:	push   edx
100068aa:	xor    esi,DWORD PTR [edx]
100068ac:	cs fs ins BYTE PTR es:[edi],dx
100068af:	ins    BYTE PTR es:[edi],dx
100068b0:	add    BYTE PTR [eax],al
100068b2:	or     eax,0x72655600
100068b7:	push   ecx
100068b8:	jne    0x1000691f
100068ba:	jb     0x10006935
100068bc:	push   esi
100068bd:	popa   
100068be:	ins    BYTE PTR es:[edi],dx
100068bf:	jne    0x10006926
100068c1:	push   edi
100068c2:	add    BYTE PTR [eax],al
100068c4:	add    eax,DWORD PTR [eax]
100068c6:	inc    edi
100068c7:	gs je  0x10006910
100068ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
100068d2:	outs   dx,DWORD PTR ds:[esi]
100068d3:	outs   dx,BYTE PTR ds:[esi]
100068d4:	dec    ecx
100068d5:	outs   dx,BYTE PTR ds:[esi]
100068d6:	outs   dx,WORD PTR ds:[esi]
100068d8:	push   edi
100068d9:	add    BYTE PTR [edx],al
100068db:	add    BYTE PTR [edi+0x65],al
100068de:	je     0x10006926
100068e0:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
100068e8:	outs   dx,DWORD PTR ds:[esi]
100068e9:	outs   dx,BYTE PTR ds:[esi]
100068ea:	dec    ecx
100068eb:	outs   dx,BYTE PTR ds:[esi]
100068ec:	outs   dx,WORD PTR ds:[esi]
100068ee:	push   ebx
100068ef:	imul   edi,DWORD PTR [edx+0x65],0x45560057
100068f6:	push   edx
100068f7:	push   ebx
100068f8:	dec    ecx
100068f9:	dec    edi
100068fa:	dec    esi
100068fb:	cs fs ins BYTE PTR es:[edi],dx
100068fe:	ins    BYTE PTR es:[edi],dx
100068ff:	add    BYTE PTR [edi],cl
10006901:	add    BYTE PTR [edi+0x65],al
10006904:	je     0x10006953
10006906:	outs   dx,DWORD PTR ds:[esi]
10006907:	fs jne 0x10006976
1000690a:	gs inc esi
1000690c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x45656d61
10006914:	js     0x1000696d
10006916:	add    BYTE PTR [eax],al
10006918:	push   eax
10006919:	push   ebx
1000691a:	inc    ecx
1000691b:	push   eax
1000691c:	dec    ecx
1000691d:	cs inc esp
1000691f:	dec    esp
10006920:	dec    esp
	...
